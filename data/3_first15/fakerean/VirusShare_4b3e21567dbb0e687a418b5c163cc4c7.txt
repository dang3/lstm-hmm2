sbb
add
sub
and
xchg
and
sarb
add
jbe
or
int3
or
shrl
sbb
lret
popa
stos
es
or
mov
and
push
icebp
imul
dec
adc
or
cmpb
mov
fmul
test
mov
adc
add
push
adc
stos
sbb
clc
fwait
dec
in
addr16
inc
cmp
xchg
or
lock
cli
test
push
pop
pop
xor
mov
cmp
push
push
inc
mov
call
test
pop
sahf
leave
fcmove
leave
fisttps
fisubrl
mov
dec
stos
lods
jno
test
sbb
pop
xchg
mov
mov
je
and
cs
and
rcrb
call
fs
sub
cmpsl
cwtl
loop
jbe
nop
sbb
sar
push
nop
test
add
or
push
out
dec
rclb
mov
add
xchg
pop
subl
outsb
addb
scas
sbb
inc
mov
jnp
out
lods
mov
cwtl
push
mov
cmp
fidivl
xchg
sub
outsl
out
fucomi
mov
mov
adc
pop
sbbl
pusha
je
push
mov
insl
cwtl
cmp
test
mov
or
push
and
push
mov
inc
loopne
ficoml
shrl
sub
popf
lea
xor
mov
mov
pop
xchg
outsl
mov
hlt
enter
pop
sbb
sbb
gs
cwtl
mov
mov
dec
or
rcl
or
ret
inc
xlat
pop
and
imul
loop
scas
scas
push
mov
nop
or
lret
or
jo
loope
push
lea
inc
xchg
fcoms
push
add
int3
popf
sarl
insl
fcompl
xchg
xchg
mov
push
push
or
stos
daa
hlt
pop
out
aad
jb
imul
ja
sbb
das
dec
sub
aad
lock
xchg
idivl
in
or
adc
xchg
stos
and
push
push
lock
and
popa
xchg
inc
push
pushf
adc
inc
jnp,pt
in
inc
out
jae
sbb
dec
lds
pop
or
jmp
or
push
js
insb
mov
dec
xor
mov
cwtl
ljmp
or
idiv
aas
mov
mov
insl
fsubrs
stos
call
aaa
xor
daa
out
mov
into
scas
ficoms
std
mul
xchg
jbe
mov
inc
sub
gs
movl
fsubl
pop
leave
sbb
mov
push
inc
scas
and
cmp
movsb
incl
inc
mov
sbb
mov
popf
mull
aad
ficoml
jmp
adc
pop
jecxz
pop
scas
jp
jge
loopne
out
xchg
jbe
mov
lahf
mov
pop
push
xor
test
pop
push
sub
hlt
dec
mov
inc
es
push
sub
addr16
xchg
fstpt
dec
dec
dec
je
inc
out
insl
or
inc
sbb
pop
fsubrl
pop
loop
mov
stos
push
mov
out
out
or
pop
cmp
or
push
push
pop
sahf
cmp
das
movsb
xchg
xchg
shlb
jns
xchg
nop
mov
inc
inc
fstp
movsb
sub
mov
mov
out
pushf
pop
and
and
xchg
in
pop
inc
xchg
push
xchg
in
pop
shrb
pop
ds
mov
inc
roll
sahf
icebp
jl
loopne
cmp
add
and
dec
add
pusha
and
push
mov
xchg
ficompl
aad
xchg
add
add
cmpsl
dec
sbb
das
pop
adc
stos
add
sbb
popa
push
push
sbb
mov
loopne
xchg
xchg
xchg
xchg
inc
out
lret
adc
lret
je
lock
popf
outsl
sub
test
inc
mov
dec
orl
cmp
jne
dec
fdiv
inc
xchg
sti
fdivl
jp
and
jae
out
cmp
cmp
or
mov
xor
dec
fnstsw
cwtl
and
test
sbb
cld
jnp
mov
in
lret
xor
or
ss
cmc
shlb
pop
fisubl
das
scas
or
adc
in
ret
loope
mov
in
cld
ljmp
dec
int
loop
dec
push
int3
add
arpl
xchg
enter
fsts
jp
jle
cmp
dec
adc
push
aas
dec
loope
push
mov
lods
pop
jb
lods
pop
add
push
or
shlb
mov
jb
sahf
je
shll
ljmp
dec
add
popa
xchg
out
jne
sub
mov
or
ret
jae
cmpsb
xchg
fs
xchg
pop
push
adc
lock
add
push
push
test
pusha
adc
mov
and
sub
or
inc
pop
adc
pushf
jp
jg
imul
push
push
imul
sub
and
cmp
add
xchg
pop
stos
fcompl
or
mov
imul
stc
call
data16
add
es
fs
mov
fmuls
pop
add
fdiv
stos
jle
imul
das
std
adc
sbb
test
cmpsb
xor
vmwrite
jae
aas
icebp
ret
dec
loope
lret
jecxz
sbb
insb
pop
std
cmp
pop
mov
mov
faddp
inc
pop
sub
pop
jl
ljmp
sbb
xchg
mov
push
and
and
push
test
sub
and
adc
je
jge
pushf
xor
or
add
daa
lock
pop
mov
xchg
int3
mov
add
or
jmp
sbb
inc
fisubrs
push
mov
pop
lcall
lcall
mov
dec
cmpsb
popa
popa
leave
cmp
mov
std
jl
fidivs
fsubrl
push
decb
in
movsb
xor
incl
out
jl
daa
or
popl
jbe
sbb
cmpsb
fisubrs
mov
insl
into
leave
fwait
cmpsl
rol
sbb
cmc
les
test
pop
das
int3
fadds
movsb
insl
test
ret
repnz
xchg
out
pop
cmpsb
and
mov
cmc
mov
pushf
jnp
fisttps
mov
jg
jns
jno
or
push
repz
jmp
jno
sbb
or
mov
cmp
popa
push
pop
push
mov
inc
sti
push
dec
or
sub
and
and
xorb
test
rorb
popa
inc
lret
push
push
movsb
movsw
pop
sub
dec
fildl
mov
sbb
xchg
xchg
jne
or
vmulss
dec
cmp
mov
scas
movsl
xor
pop
gs
adc
cs
inc
dec
fiadds
mov
push
jne
pop
shll
arpl
xor
sbb
sub
leave
push
insb
pushf
push
add
insb
inc
iret
mov
aas
inc
mov
dec
mov
push
jno
mov
cwtl
xchg
cmc
leave
shrb
addr16
int3
pop
dec
fs
mov
lcall
ret
mov
fisttps
insl
or
test
jg
es
bound
call
or
cmp
mov
ret
outsb
cmp
push
cmp
test
jmp
push
mov
inc
test
repz
lock
lea
xlat
cmc
dec
sarb
jl
sub
add
push
inc
inc
out
lods
pop
and
and
push
repnz
out
mov
adc
movsb
shlb
push
cmp
sti
fs
movsb
cmp
add
push
outsl
inc
mov
xor
idivl
stc
cmp
sub
ret
lret
fistl
clc
jecxz
cmp
xchg
nop
xor
sahf
xor
adc
stos
sub
adc
sti
imul
inc
inc
push
aas
pop
std
cli
push
mov
addr16
pushf
inc
adc
je
sbb
aas
mov
pop
push
or
add
loopne
call
pop
add
mov
mov
adc
out
mov
sahf
fcomp
xor
popa
xchg
scas
in
push
nop
inc
pop
and
ficomps
pop
jae
nop
dec
int3
pop
loope
pusha
call
push
rcll
dec
jp
cmpsl
jmp
les
fnstenv
xchg
dec
fnstcw
ficoml
push
mov
jbe
or
push
mov
mov
or
out
sub
mov
into
push
jns
jne
lods
sub
ljmp
mov
lea
iret
or
in
cmp
mov
xchg
aam
shl
mov
jae
insb
push
push
daa
xor
jecxz
les
mov
cmp
cmpsb
jo
add
imul
add
sbb
pushl
rorl
mov
push
mov
stos
repnz
mov
add
jae
out
mov
lock
mov
dec
rcrl
push
mov
push
sbb
dec
mov
add
outsl
out
xchg
inc
ljmp
push
aas
push
shrl
out
add
add
les
xor
cli
bound
mov
jb
mov
data16
into
stos
mov
stos
enter
ficoml
push
adc
pop
in
xchg
mov
jo
mov
mov
sar
in
or
cwtl
mov
mov
sbb
sub
cmc
into
insb
addr16
cmp
mov
fcmovu
jge
push
sub
dec
mov
dec
mov
jmp
and
clflush
pop
pop
mov
shlb
mov
inc
jg
mov
cwtl
push
xor
sbbl
jmp
jo
mov
das
data16
sub
pop
out
mov
mov
sbbb
js
ds
mov
lret
repz
pop
sub
andb
dec
call
push
adc
fwait
sbb
push
js
popa
insl
push
data16
xlat
push
in
lea
jle
clc
packuswb
xor
xchg
and
push
out
in
push
xchg
push
ret
shrb
cmp
cmp
mov
cmp
into
addb
aaa
fwait
jne
ftst
jmp
cmp
data16
shll
xor
rcr
mov
mov
roll
mov
dec
fistpll
add
push
or
mov
jae
adc
fdivrs
cmp
bound
xchg
pop
pushf
sbb
popa
xchg
aam
push
imul
sbbl
dec
push
out
repz
leave
mov
pusha
jg
sub
add
loop
inc
test
ret
mov
inc
cmp
iret
pushl
push
iret
js,pt
or
ds
in
cwtl
mov
das
push
pop
lea
or
std
mov
insl
leave
push
jp
in
data16
rolb
roll
popf
pop
inc
xchg
dec
or
aas
mov
fs
loopne
adc
repz
push
into
add
test
mov
jecxz
dec
cli
jae
push
in
adc
test
inc
or
inc
xchg
repz
ret
fistps
xor
clc
movsl
lcall
lret
add
cmpsb
jae
mov
jp
icebp
cmp
mov
movsb
nop
into
mov
cld
test
js
insb
int3
dec
push
push
icebp
test
dec
out
cs
and
add
cld
and
popf
dec
das
mov
cmpsb
mov
or
dec
lcall
push
jg
jmp
adc
popf
pop
fiadds
imul
addb
je
into
mov
xor
iret
mov
lahf
push
rcll
push
jmp
popa
cmpsb
push
mov
xchg
loope
add
outsl
movsb
pop
or
sbb
outsb
hlt
cld
inc
push
dec
imul
pop
roll
jnp
jb
aaa
adcb
insl
lds
push
mov
lret
push
push
and
push
clc
gs
mov
popf
xorb
xchg
mull
pop
cmc
adc
xchg
jle
jmp
je
clc
jmp
push
mov
dec
add
adc
repnz
fs
pop
xor
or
or
xor
xchg
inc
mov
lcall
daa
xchg
sbb
insb
dec
mov
pop
dec
xchg
mov
or
xor
xor
inc
inc
jbe
iret
mov
xchg
aam
xor
hlt
jg
movl
push
scas
fiadds
das
mov
insl
lods
and
stos
xor
cld
mov
lock
out
cli
arpl
lret
xor
push
lods
and
adc
scas
test
adc
mov
mov
xor
sbb
leave
shll
mov
mov
lcall
jne
pop
mov
sbb
push
clc
xchg
jne
sbb
jne
xchg
shlb
out
xchg
jae
hlt
lret
jae
popf
mov
mov
mov
sbb
lahf
dec
inc
cwtl
fs
mov
clc
out
xchg
stos
dec
inc
pop
jmp
or
pop
andl
or
mov
jne
xchg
fdivl
push
add
jnp
shl
and
xchg
xor
jg
push
push
setle
rclb
inc
notl
push
jl
push
cmp
fsqrt
dec
mov
mov
mov
sub
mov
cmp
pop
xchg
jno
test
push
dec
call
fwait
or
in
push
add
pop
cmp
pop
sbb
xor
and
mov
cmpsb
mov
push
out
xchg
lret
js
push
pop
test
jae
inc
cmp
mov
imul
das
mov
loope
xchg
scas
aad
inc
and
sbb
jg
stc
push
xchg
mov
inc
mov
int
shrb
cmp
push
mov
shrb
in
negl
arpl
xchg
add
lea
stc
xchg
cmpl
call
cs
loop
pop
jnp
shr
clc
push
push
sub
sub
ja
mov
out
ficoml
inc
adc
repz
in
mov
daa
pop
lret
mov
in
loop
outsb
push
push
shll
lret
fs
addl
int
fcoms
fcompl
jno
fidivs
push
ja
dec
or
dec
test
in
push
aas
pop
xchg
mov
dec
sbb
out
sub
mov
test
sti
addl
in
mov
xchg
in
lret
and
in
inc
test
fisubs
gs
lahf
add
int3
es
xor
stc
pop
push
adc
sahf
test
push
mov
bound
cmc
lret
mov
aam
fs
movsl
pop
gs
loopne
and
push
cli
cmpsb
push
ficoms
sub
mov
aam
idivb
mov
sbb
shll
jl
lods
nop
fldenv
inc
push
and
loop
mov
mov
hlt
and
shll
imul
je
sarb
lds
repz
push
cmp
out
scas
add
in
mov
xchg
jb
jg
hlt
lret
pop
sbb
enter
dec
repnz
lods
or
sub
sahf
mov
jmp
mov
fsubr
scas
cltd
adc
and
lret
nop
push
push
leave
push
add
pop
in
loope
es
jmp
mov
and
mov
dec
mov
iret
xorb
test
push
adc
push
dec
sbb
ds
add
mov
push
aaa
add
mov
mov
dec
testl
jge
out
cmp
jmp
cmp
inc
mov
jb
outsl
jae
mov
ss
pop
test
jb
jo
pop
nop
pushf
rorl
inc
int
pop
fwait
outsl
pop
mov
leave
mov
xor
out
cltd
mov
dec
dec
cs
arpl
xchg
cmp
cmp
jnp
xchg
mov
add
jmp
push
movsb
push
xchg
jno
or
sub
gs
lret
imul
iret
jg
daa
pop
sbb
dec
fsts
dec
ret
sti
push
pop
push
dec
inc
scas
pop
enter
lret
sub
sub
jge
cld
xchg
push
mov
xchg
xchg
outsb
fists
outsl
gs
inc
or
push
pop
adc
in
fiadds
or
push
lds
imul
dec
popa
xor
es
hlt
dec
fucomip
inc
mov
and
xlat
test
fsubrl
pop
ja
cwtl
out
stos
addr16
jns
sub
test
jae
adc
sbb
push
test
pusha
cmp
lret
and
imul
ljmp
xorb
data16
les
ss
int3
test
sub
and
or
filds
sarb
push
xchg
or
outsl
xorl
clc
inc
pop
gs
adc
sub
out
pop
cmp
xor
es
mov
aad
xor
jecxz
add
in
jo
out
pop
cmp
jae
push
sbb
mov
push
push
enter
loop
testl
adc
jg
lock
and
sbb
repnz
mov
sahf
xchg
jb
fimull
cwtl
outsl
pop
je
adc
push
pop
das
lss
add
in
mov
iret
mov
pop
pop
adc
xor
adc
in
xlat
shll
dec
lcall
inc
xchg
rorl
jmp
cwtl
sti
push
adc
or
insl
sbb
pop
insl
inc
cmpsb
xchg
loopne
insb
sub
rorb
mov
pop
sub
imul
inc
push
das
ja
scas
dec
in
inc
add
add
fadd
sbb
mov
popa
jmp
in
sub
out
dec
jae,pn
cwtl
adc
int3
fnclex
fwait
out
dec
dec
jo
and
cmpsb
pop
lds
adc
scas
jle
mov
cmp
lds
xchg
mov
pusha
push
or
dec
lret
scas
lret
mov
test
inc
pop
adc
data16
lret
push
in
nop
fistpl
fnsave
mov
stc
mov
push
ficompl
jns
jmp
stos
sti
mov
fsub
and
cmc
insb
and
stos
imul
push
int
or
arpl
ljmp
arpl
fcompl
jb
insb
jae
pop
in
ret
daa
dec
cmp
mov
movups
xchg
repnz
mov
and
dec
ds
cwtl
daa
lock
cmp
je
xlat
inc
movsb
lret
push
xor
dec
test
daa
dec
mov
push
mov
arpl
je
mov
xor
jge
sub
adc
dec
pushf
shrl
sub
sbb
stos
add
cld
leave
add
xchg
fs
imul
sbb
lret
fisubs
rcl
push
mov
iret
pusha
jbe
xchg
imul
cmpsl
lods
or
std
lcall
lret
cmpsb
push
adcl
pop
cmp
jae
lds
pop
pop
in
fidivrl
xorb
inc
inc
in
mov
mov
jp
inc
sub
inc
mov
xchg
testl
dec
rclb
sub
push
repz
fcoml
test
insb
loop
mov
cmp
xlat
pop
push
sbb
test
daa
cli
repnz
cmc
push
sbb
jns
js
inc
rcr
fsubl
sbb
pop
jge
insb
imul
leave
push
mov
popa
lret
jno
add
shl
repz
arpl
pop
push
int3
imul
xlat
outsl
or
jmp
ja
pop
sub
xor
cmp
pop
xlat
lds
add
cmp
add
mov
fimuls
adc
test
xchg
or
cld
push
xor
pop
dec
out
dec
rcrl
and
push
and
push
lahf
xchg
stc
pop
mov
push
mov
hlt
movsb
mov
xchg
push
jmp
adc
xchg
rep
inc
add
sub
add
in
lds
fnstenv
inc
lds
test
cltd
inc
sub
out
sbb
call
inc
sarl
test
stos
test
xchg
dec
mov
out
push
out
cld
arpl
sub
ret
xchg
ret
jbe
mov
mov
in
mov
or
push
pop
dec
scas
xor
mov
lock
rcrl
ljmp
imul
inc
subl
inc
jmp
shlb
mov
add
dec
mulb
push
sbb
push
js
xchg
cmp
inc
mov
daa
je
jb
add
mov
add
shr
cmp
popf
dec
xchg
xchg
add
dec
or
xor
roll
sbb
insl
jle
hlt
frstor
fldl
cmp
mov
sahf
push
outsb
in
cmp
fisttps
push
into
ja
mov
push
orps
call
jg
out
or
sub
cmpsb
push
setg
inc
pop
stos
icebp
rcl
loop
out
stos
ficomps
ljmp
test
xor
xor
dec
add
mov
js
mov
fmull
or
dec
repnz
out
cli
or
inc
sub
xorl
xchg
mov
push
dec
cmc
lods
adc
shrb
push
mov
lahf
inc
sub
sysenter
mov
push
mov
or
ja
xchg
pop
call
lods
out
inc
fistl
pushf
sub
push
xchg
sub
enter
pop
testl
cmp
sub
arpl
and
mov
or
ret
fcoms
ljmp
sub
lods
sub
scas
fwait
or
outsl
aaa
outsb
stos
and
cmpb
js
fmull
ss
adc
cmpsb
lds
sub
cmp
add
jbe
xchg
mov
cmp
scas
mov
push
xor
pop
leave
add
cmp
mov
loope
push
push
icebp
mov
or
shll
fistpll
sbb
cli
je
adc
les
aad
mov
shlb
mov
in
scas
mov
pop
js
mov
and
xor
mov
inc
mov
jp
imul
mov
movsb
das
sbb
or
mov
mov
enter
test
lahf
adc
nop
fiadds
sbb
sbb
push
out
push
rcr
inc
jecxz
or
push
sub
mov
jno
stos
jbe
insl
push
pop
dec
jns
sarb
jno
pop
mov
jp
adc
push
pusha
bound
popf
pusha
xchg
cmp
fwait
lds
ljmp
mov
pop
add
cmp
sbb
sbb
sahf
hlt
dec
pop
or
dec
mov
insl
jp
push
cmp
dec
add
gs
mov
inc
or
notb
sbb
stos
test
test
cmpsb
fisubrs
pop
aam
pop
mov
fwait
add
jge
aam
hlt
int3
cmp
push
add
push
inc
pop
mov
pop
dec
ljmp
fprem1
push
jb
jp
rcrl
inc
xor
mov
push
jo
cmp
push
loop
xor
loop
mov
push
push
mov
subl
inc
xor
dec
pop
cld
xchg
push
mov
push
jbe
popf
shll
xor
jecxz
sahf
mov
xor
mov
push
push
push
mov
dec
fistl
stc
fadds
add
fldl
rcll
insb
lahf
rcrl
fwait
pusha
mov
clc
jl
mov
push
jmp
xchg
push
pop
mov
fisttpll
shlb
or
aam
cmp
sti
inc
jmp
movsl
hlt
adc
sub
push
test
add
or
pushf
out
push
lret
xor
aam
aas
ljmp
ja
addr16
out
mov
and
mov
adc
loopne
cs
mov
ret
xchg
mov
fcoml
cvtdq2ps
jmp
jge
jle
xchg
adc
fsubl
in
pop
xor
decb
pop
arpl
push
adc
sahf
cmpsl
inc
addps
outsl
xchg
push
repz
jle
mov
fldl
push
xor
out
inc
jmp
add
fbstp
pop
mov
jbe
add
adc
in
pop
mov
jae
or
add
add
sub
imul
dec
aaa
push
popa
jl
lods
xor
xchg
ss
or
dec
cmp
call
iret
inc
outsl
cmpsb
inc
pop
add
push
xor
mov
ljmp
es
insb
jae
push
daa
mov
mov
sub
fwait
sar
xchg
and
into
jmp
out
ja
inc
les
jb
push
int
scas
sbb
and
pusha
imul
mov
mov
repz
jle
fcoms
cmpsb
call
add
lahf
mov
cmpsb
ret
test
mov
mov
adc
fwait
outsl
stc
sbb
xchg
xchg
pop
mov
sub
push
fnstenv
fwait
test
arpl
dec
sbb
sub
mov
jbe
mov
hlt
xchg
out
sub
pop
jae
mov
aas
mov
popa
in
pop
dec
subb
add
jg
push
jecxz
mov
jb
and
push
imul
rcll
stc
fs
push
jne
jge
jp
test
lds
xchg
rol
lods
inc
mov
xchg
int
sub
sub
jo
lret
jnp
cmp
orl
lret
jecxz
push
or
or
lret
jle
fcomps
or
adc
cmp
add
out
add
jnp
add
push
mov
pop
push
dec
inc
lahf
xchg
sbb
cmp
ret
int3
mov
daa
and
js
clc
mov
pop
or
mov
loopne
fcom
test
push
cwtl
sahf
xlat
into
add
movsb
scas
push
xchg
mov
mov
idiv
imul
add
dec
xchg
xor
je
adc
mov
and
insb
rolb
insb
incb
sar
add
xchg
in
popa
in
push
xchg
mov
jo
mov
cmc
out
out
and
gs
into
inc
andl
pusha
pop
gs
jno
push
ja
cmp
in
adc
aad
dec
movsb
repnz
and
push
into
pop
mov
repz
in
scas
sbb
ret
lret
mov
push
cmp
mov
mov
gs
cmpb
sub
das
cmp
jp
fwait
jbe
or
jle
cmc
push
lods
mov
mov
sub
cmp
push
lea
xor
mov
divl
adc
jne
lds
jmp
jbe
sahf
dec
daa
fsubrp
push
imul
dec
mov
pop
pop
call
pop
push
add
sbb
mov
in
pop
addr16
sbb
and
scas
xorl
addr16
pusha
arpl
sbb
mov
daa
repz
clc
cmp
ds
in
sub
bound
iret
xchg
loope
data16
jge
scas
dec
adc
sbb
pushf
pop
push
mov
insl
clc
shr
xor
enter
inc
mov
mov
aas
mov
pop
shlb
popa
mov
jae
jbe
lret
notb
sbb
lcall
jg
repnz
gs
mov
mov
push
mov
pop
movsl
pop
xor
pop
cmp
out
aad
mov
ljmp
scas
and
or
sbb
aaa
stos
inc
aas
jns
jge
loopne
pushf
jb
iret
mov
test
js
xchg
std
lods
mov
scas
sbb
test
cmc
iret
in
xchg
sbb
pop
dec
push
loope
faddp
loope
pop
ffreep
pushf
push
xor
mov
mov
sbb
push
shlb
rcll
lods
adc
or
and
and
sub
jmp
ds
and
mov
not
mov
insb
and
ret
imul
xchg
stc
insb
dec
cs
shr
inc
mov
and
cmp
sahf
pop
mov
pusha
ss
xchg
out
sbb
js
or
mov
pop
push
push
xor
nop
iret
mov
clc
adc
push
adc
fdivrs
daa
lret
or
mov
imul
xchg
push
addl
inc
js
fadds
xor
inc
aas
jmp
scas
mov
mov
mov
es
ja
mov
fiaddl
pushf
add
xor
je
dec
jle
or
outsb
mov
sub
out
lock
mov
cs
inc
pop
aas
loope
add
xor
dec
in
dec
test
pop
nop
fs
ret
or
and
fdivrl
jae
cmc
test
in
push
mov
mov
push
adc
jge
cmp
mov
bound
push
dec
outsl
iret
outsl
aas
nop
fbld
into
and
xchg
inc
add
icebp
insb
push
js
and
call
jb
stos
mov
js
dec
ds
mov
xlat
lods
in
pop
mov
out
push
popa
rclb
rcrb
cmp
enter
cmp
imul
mov
jge
mov
imul
inc
xor
nop
movsl
loope
mov
or
in
sub
mov
ja
sub
inc
mov
sub
and
cmpb
flds
rcrl
or
aad
fnstcw
jb
lea
lahf
jp
sub
jmp
movsb
push
mov
xor
mov
and
ret
jecxz
xor
ret
mov
orb
dec
push
fdivr
repz
sub
dec
in
cmc
adc
jmp
jno
xor
insb
out
dec
lds
popf
mov
xor
inc
add
lcall
loop
outsb
test
xchg
mov
or
jmp
jne
xor
pop
and
fwait
shrl
mov
or
test
out
jo
pop
bound
xor
pop
cmp
inc
inc
push
push
and
cwtl
nop
cmp
jb
mov
pop
cmpsb
gs
rclb
add
xor
sub
push
pop
movsb
shl
scas
xchg
sahf
popa
jle
push
jl,pn
stos
or
fs
xchg
mov
push
cmpsb
cmp
fwait
int3
pop
call
ljmp
pop
add
lahf
repnz
sub
sahf
negb
dec
pop
mov
xor
icebp
cmpb
push
and
dec
jmp
fstl
sbbl
jbe
jnp
aam
mov
inc
push
mov
jmp
andl
test
or
icebp
fmull
lods
loopne
sti
xor
push
jno
js
xlat
out
ret
add
sbb
dec
xchg
jbe
dec
sub
in
add
mov
pop
push
adc
cmpsb
add
push
sbb
pop
add
sahf
adc
xor
push
ds
ss
in
adc
mov
pop
adc
xchg
cmp
shlb
push
push
ja
mov
test
pop
sbb
bound
add
shlb
clc
dec
xor
rclb
jmp
jg
shlb
push
push
scas
mov
dec
iret
lock
fnsave
inc
xchg
cld
xchg
pop
push
push
arpl
in
cld
add
in
loopne
shll
inc
lcall
std
jns
mov
arpl
push
adc
cmp
adc
lahf
lret
test
push
inc
sub
fld
mov
xor
sbb
sbb
rclb
insb
bnd
sbb
xor
fxam
fs
sarb
xor
lret
xlat
dec
push
call
loopne
je
pop
inc
add
in
popf
in
jl
adc
adc
pop
xorl
pop
cmp
cmp
cld
gs
adc
in
jnp
mov
dec
aad
xchg
push
mov
jne
lods
shlb
cmp
add
out
ffreep
push
sbb
shrl
and
jmp
aad
inc
cmpsl
push
rol
push
adc
xor
mov
mov
sbb
dec
rcrb
das
mov
add
mov
bound
adc
xchg
pusha
push
cmp
or
mov
cltd
notl
cld
sub
dec
add
dec
in
inc
xorb
cmp
jnp
push
scas
in
sub
fcoms
push
dec
pop
cmc
test
xlat
inc
add
mov
dec
jge
test
cmp
stos
out
lds
leave
and
cmpsl
xchg
pop
jecxz
pop
mov
js
mov
rorb
or
xchg
fs
pop
xor
mov
sti
pop
push
mov
outsl
dec
sti
mov
mov
test
jl
in
jge
mov
adc
js
push
int
arpl
and
das
sbb
push
jo
pop
and
sbb
pop
out
cmpsl
add
out
mov
pop
data16
sbb
jno
lcall
fs
xchg
push
rorb
jbe
movsl
in
out
push
jbe
pop
enter
aaa
cmp
cmp
or
push
inc
or
out
test
push
cli
or
and
pop
lods
xor
stc
sahf
xchg
adc
into
jl
push
bound
jns
clc
lds
mov
into
hlt
fcom
push
leave
sbb
cmc
into
pop
stos
pop
andb
lret
cltd
popa
dec
sahf
cmp
fistpll
push
mov
mov
fisttps
mov
ffreep
iret
ficoms
adc
in
pop
fmuls
out
adc
inc
push
aaa
xor
sbb
and
arpl
sub
call
imul
mov
push
and
push
push
lods
test
or
xchg
nop
cli
mov
jnp
fadd
loopne
and
sarl
push
cmp
jne
mov
movsb
dec
inc
rcrb
fisttpl
fbld
or
ja
sub
cmpsl
mov
cmp
sahf
cld
mov
xchg
cmc
dec
ljmp
cmpsl
add
inc
shll
lea
push
push
pushf
inc
aad
xor
cmp
cmp
insl
pop
loopne
mov
sbb
scas
cmp
lods
in
call
stos
loop
xchg
inc
sbb
insb
and
mov
mov
dec
jnp
dec
orb
dec
stc
add
sahf
sahf
or
fists
xchg
stos
mov
imul
popf
push
add
fsubs
cmpsb
inc
cmpsb
jmp
stos
mov
sbb
clc
xchg
add
lods
mov
repz
jns
in
divb
lods
enter
test
add
xchg
fisubrl
outsb
icebp
mov
fistl
mov
fdivrl
jo
hlt
hlt
fstps
adc
aas
rclb
or
andb
sahf
cld
sbb
es
add
aaa
xor
out
sarb
mov
jb
loope
and
outsl
popf
dec
jns
fadds
xchg
stos
inc
mov
outsl
pop
lods
icebp
jns
rorl
ljmp
sub
push
cwtl
repz
movsb
insl
mov
or
mov
shll
mov
in
cmp
sbb
mov
mov
mov
scas
imul
into
inc
dec
cmp
loope
xchg
test
fisubrl
cwtl
fdivrs
out
jle
xchg
mov
psllq
sub
pop
or
and
cwtl
das
mov
sbb
pop
lret
mov
arpl
ljmp
mov
jecxz
out
add
arpl
jp
lds
call
xchg
sub
test
or
jg
xchg
cmp
test
sub
mov
xor
inc
dec
pusha
rorb
push
add
mov
cwtl
xchg
loop
mov
sub
and
pop
xchg
mov
adc
adc
mov
push
jb
aam
test
adc
imul
pop
hlt
push
adc
repnz
xchg
sarl
test
jne
dec
sbb
aas
pop
mov
stos
mov
pop
mov
ret
out
fs
pop
or
add
pop
fsubrl
push
pop
pop
or
xchg
adc
jb
sub
and
pop
scas
xchg
push
sub
pop
insb
sbb
in
jmp
or
shr
or
sti
out
cmp
mov
test
cmp
and
xchg
adc
in
scas
jmp
popf
sub
lahf
adc
push
outsl
xchg
clc
pop
sub
addr16
jns
cmpsl
pop
frstor
push
push
cmp
xor
aas
mov
outsb
lret
lds
movsb
out
jmp
add
pop
into
or
pop
test
lds
and
stc
pop
add
jl
mov
jno
mov
aam
fs
mov
push
and
mov
fdivs
mov
add
mov
jns
dec
out
repnz
in
mov
dec
test
stos
mov
mov
push
cmpsl
jmp
sbb
pop
std
je
mov
lock
jl
sub
mov
cmp
sbb
gs
stos
lcall
call
roll
xchg
adc
push
in
test
cld
imul
movsb
fstpl
inc
cmp
cwtl
lds
out
rcll
inc
int3
lods
rcrl
je
inc
xchg
iret
andl
pushl
repnz
cmp
clc
push
push
popa
xor
push
or
bound
movsb
push
daa
xorl
mov
dec
ret
scas
inc
mov
add
adc
je
in
lods
in
and
and
and
mov
xchg
jo
xor
mov
jb
inc
es
pop
inc
dec
pushf
jno
in
ror
cmp
fisttps
fs
cmc
loop
loop
dec
test
adcl
pop
inc
pmaddwd
jmp
pushf
rorb
iret
stc
xor
sbb
aaa
fcmovnu
leave
mov
pop
and
daa
addb
insl
and
fcompl
das
insl
es
mov
ljmp
xchg
jbe
pop
and
lahf
imul
gs
jmp
cmp
aaa
jbe
push
pop
adc
test
lods
popa
je
push
cwtl
mov
jns
ret
mov
cmp
xchg
dec
sub
cmpsl
mov
lea
lds
dec
cld
gs
xor
int
loop
jl
bound
add
data16
fcmovbe
jbe
dec
cmp
and
jbe
test
jno
xor
xchg
lods
lods
jns
jbe
push
out
fcompl
push
in
sub
in
jae
shl
nop
pop
shrl
lret
out
fcompl
inc
cmp
dec
out
pop
xchg
cmc
call
imul
push
pop
xor
mov
loopne
iret
cmpsl
mov
inc
lret
dec
decb
cmpsb
jne
mov
or
and
adc
add
jp
jnp
pusha
dec
jnp
gs
aaa
es
mov
or
inc
ljmp
xchg
push
ljmp
push
mov
push
push
ret
cltd
loop
sbb
jne
mov
push
fs
cmovp
subb
aam
sti
movsb
or
cmpl
mov
jmp
push
xchg
mov
sub
mov
outsb
jno
sbb
sar
mull
xchg
mov
pop
pushf
jecxz
jle
cmp
fcomp
dec
sub
call
cmpsb
mov
add
mov
jmp
cmp
jmp
nop
sbb
push
and
scas
sub
outsb
inc
mov
mov
cmp
or
cld
and
insb
ret
inc
ficoml
xchg
jl
movsb
push
lock
and
push
xchg
fs
pop
push
sub
cmp
scas
xchg
fisttps
jle
cmpsb
xchg
call
or
fs
mov
push
aad
mov
pop
add
movsl
pop
lcall
ja
fistl
loopne
inc
hlt
push
push
jle
das
imul
arpl
cwtl
add
xchg
insl
mov
popa
jne
xchg
popa
insl
popl
mov
shr
lods
xor
pop
mov
and
fcompl
cld
inc
cli
imul
dec
aaa
cltd
dec
fildll
xchg
sub
jne
mov
fcoms
lock
sbb
sub
mov
xorb
shlb
push
pop
int
xchg
notb
mov
jbe
xchg
xor
pop
xchg
mov
and
repz
shll
stos
cmp
push
loop
idivl
cmp
and
stos
and
mov
sub
cmp
addb
mov
scas
inc
fidivl
std
xor
push
push
pop
ja
data16
push
inc
mov
xchg
js
cmp
fbld
bound
les
mov
das
flds
aad
test
bound
dec
dec
sub
and
inc
aas
movsb
jle
xor
daa
jmp
push
sub
mov
mov
push
notb
testl
sub
fxch
mov
test
ficompl
mov
cmp
mov
in
xorl
imull
pop
sub
pop
push
and
jmp
jle
cmp
xchg
pusha
cld
addl
call
je
jns
sbb
jmp
imul
rcrl
out
fistl
cwtl
ret
sbb
jbe
loop
packsswb
fcompl
test
mov
pop
popa
sarb
jmp
mov
cli
inc
push
adc
jne
push
out
cmpb
jae
hlt
insb
xchg
mov
push
imul
ret
scas
and
mov
mov
inc
add
xchg
inc
mov
mov
cmp
mov
out
inc
add
loope
call
jo
add
lret
push
mov
mov
lret
test
cmpsb
pusha
or
out
iret
inc
insb
mov
incl
mov
ret
movsl
jo
xchg
inc
stos
jecxz
shll
mov
adc
and
fsubp
test
lcall
mov
push
sbb
ds
fbstp
and
testl
add
dec
popl
ret
popf
je
inc
ret
pushf
jg
popl
scas
cmp
add
in
out
repz
test
xchg
inc
addl
add
mov
dec
mov
imul
insb
push
fmuls
aaa
mov
scas
sbbl
jns
cmc
lea
and
push
shl
xchg
push
in
jns
enter
cmpsb
mov
and
lds
hlt
fwait
pop
cmpsl
addr16
sub
sub
dec
xchg
movsb
sti
or
mov
loope
arpl
cli
lret
sub
sbb
mov
jmp
inc
iret
xor
roll
push
pop
lods
push
loop
scas
test
jae
xchg
nop
xor
into
mov
mov
push
iret
dec
iret
in
jno
mov
ret
and
lods
xor
adc
dec
pop
lods
and
sub
mov
popa
jb
fldt
outsb
pop
cmp
xor
test
pushf
xchg
or
jae
xor
lahf
sbb
movsl
push
call
cli
push
mov
lahf
mov
imul
rcll
xchg
icebp
mov
shufps
mov
test
add
or
mov
movb
add
dec
addr16
jne
push
lret
adc
mov
inc
sbb
lahf
cmp
jbe
je
cs
inc
adc
xchg
js
into
ror
ja
fimuls
adc
insb
enter
jno
lret
ret
mov
rclb
xchg
in
mov
movsb
sub
test
push
fadds
int
and
jge
ficomps
cmpb
repz
and
mov
shlb
xchg
push
pop
push
adc
pop
inc
inc
jns
mov
cwtl
movsl
xchg
inc
scas
cmc
push
push
cmpsl
jle
or
prefetcht0
adc
lcall
xor
dec
mov
pop
aaa
rcll
mov
bound
jmp
sub
pushf
incb
das
nop
pop
mov
lods
jmp
add
stos
xchg
mov
cmovne
mov
cmp
mov
insb
mul
pop
jne
ljmp
lea
fwait
stc
je
fs
loopne
daa
aam
lods
xlat
xor
push
les
inc
cs
cmpsb
dec
xor
pop
frndint
ret
inc
cmc
ja
add
jg
ret
sub
xor
pop
lcall
inc
or
mov
or
and
xchg
loop
sub
xchg
rolb
push
sub
inc
jae
xchg
test
inc
int
addr16
mov
xor
inc
push
sbb
pusha
sub
aas
add
popf
popl
inc
lcall
ror
add
stos
pop
adc
ret
jb
loopne
imulb
pop
into
fwait
dec
mov
lret
sub
mov
mov
or
andb
mov
orl
scas
and
stc
jbe
mov
mov
xchg
mov
in
in
rolb
or
sub
sub
and
inc
je
into
rcll
ds
add
loop
jnp
inc
cmpsl
mov
gs
and
aam
testl
into
xor
jns
in
or
xchg
outsl
sti
jp
sarl
rolb
rcrb
push
aam
rolb
sar
inc
xchg
xchg
cmp
repz
xor
mov
hlt
jb
add
shrl
lret
ds
mov
pop
rolb
fldt
sahf
ljmp
pop
and
out
rclb
dec
js
fdivrs
inc
push
out
sub
mov
xchg
loope
or
fwait
orb
outsl
iret
aam
fcom
push
jae
add
jb
or
or
loop
adc
jecxz
inc
cmp
ds
je
lock
daa
xor
stc
inc
jl
mov
imul
xor
roll
cwtl
mov
mov
jmp
adc
fcomps
roll
xor
cmpsl
and
outsb
test
xchg
xchg
lods
movsb
push
leave
inc
fldenv
icebp
insl
xlat
fwait
je
ljmp
adc
test
inc
xor
test
push
adc
jb
into
mov
aad
data16
lret
mov
inc
test
cmp
mov
leave
hlt
jns
pop
es
inc
adc
movl
aad
lret
mov
xchg
pop
pop
or
int
cmp
dec
xor
test
xor
pop
push
lret
add
push
aaa
nop
adc
xor
xlat
and
or
gs
cltd
sbb
into
pushf
inc
dec
sarb
in
xor
stc
icebp
dec
push
fdivs
inc
and
and
inc
push
insb
inc
jmp
jb
into
push
xchg
test
popa
shl
mov
mov
jno
add
nop
mov
bound
ss
invd
lods
imul
cmp
and
gs
dec
fwait
xor
mov
hlt
jns
dec
test
adc
lock
ss
and
cltd
cmp
fs
jge
fildl
sub
mov
push
and
aad
adc
dec
pop
into
push
pop
xlat
movsb
leave
cmp
mov
or
data16
ja
and
push
sub
rcrb
push
cmpsb
mov
jnp
and
lds
insb
xchg
mov
lret
sbb
cwtl
adc
ret
push
xlat
sbb
cmpsb
xchg
mov
fidivl
pop
repz
mov
xchg
in
mov
add
sub
lahf
xchg
das
test
pop
pop
jg
pop
xor
adc
push
not
add
cli
nop
shll
fisubrl
scas
enter
pushf
mov
push
xor
cltd
hlt
test
int3
xor
xchg
xchg
pop
out
lods
mov
scas
popf
push
jne
xchg
shl
add
push
and
xor
mov
sbb
dec
sarb
or
jl
mov
stos
push
sti
xor
popa
mov
scas
dec
ljmp
push
fstl
or
ret
jo
in
sub
pop
dec
inc
xchg
sub
loop
jne
xor
push
movsl
jnp
out
mov
cmpsb
lea
adc
std
sub
cmp
mov
fwait
adc
aam
push
cmpsl
stos
mov
hlt
mov
pusha
rorl
jb
add
or
ds
xor
dec
and
pop
arpl
fdivr
dec
repz
add
in
and
lret
lret
xlat
xchg
mov
hlt
xor
push
scas
mov
mov
pop
insb
cmpsb
cltd
movsl
xchg
insb
mov
movb
divl
jmp
inc
xchg
push
popa
jne
jno
imul
jl
inc
xchg
and
out
testb
jno
pop
inc
mov
pop
fisttpll
push
or
xchg
in
mov
repz
or
je
jo
test
inc
xchg
inc
or
and
pop
stos
sub
mov
fcmovnu
mov
imul
jge
push
mov
pop
jo
sub
xchg
shlb
sub
pop
mov
dec
cmp
daa
ret
stos
jp
jo
ljmp
mov
xor
loope
push
inc
ljmp
push
mov
jae
ja
inc
mov
adc
std
jb
inc
jo
in
or
in
mov
jb
imul
or
mov
jg
call
mov
push
lea
xchg
pop
idiv
sbb
imul
adc
push
mov
push
leave
nop
adc
and
mov
in
add
lds
xchg
lock
bnd
and
xor
mov
or
das
push
outsl
popa
mull
test
dec
aaa
adc
or
dec
push
push
dec
pop
lods
pop
push
ror
ja
mov
jns
out
fiaddl
data16
jge
cmpsl
mov
push
fstps
cmp
in
pop
push
lret
or
arpl
int
into
add
lahf
xchg
pop
jb
idivb
jp
dec
and
cmpsl
rol
in
insl
inc
sbb
mov
roll
iret
fstpl
ja
sti
into
sar
sub
sub
push
pusha
and
xor
insl
stc
xor
rclb
xchg
push
mov
inc
jbe
idivl
mov
inc
mov
fimull
orl
xchg
inc
cwtl
and
adc
mov
rorl
sub
negb
adc
push
push
pusha
jle
xchg
enter
loopne
mov
mov
prefetch
or
add
mov
cld
sub
das
sbb
imul
ljmp
stc
push
mov
xlat
call
adcl
ret
into
nop
or
sbb
jle
rorl
mov
add
xchg
jno
stos
cwtl
fs
hlt
loopne,pn
test
iret
pop
mov
mov
jne
cmp
sbb
pop
add
inc
adc
stos
mov
fcoms
lods
imul
lret
cmp
or
cmp
in
adc
or
mov
cwtl
pop
lods
jmp
push
cmp
mov
mov
fld
jne
mov
call
aaa
into
jne
outsb
mov
notl
gs
iret
mov
dec
cld
xorb
divl
sub
jmp
jno
rorl
push
data16
sbb
or
jae
out
cmpsb
dec
ficoml
inc
xor
fsts
sbb
inc
cli
jle
hlt
cmp
xchg
xchg
nop
jecxz
or
sbb
and
jecxz
and
mov
mov
fadds
pop
popa
lods
lods
pop
cli
mov
pop
incl
or
imul
mov
insb
inc
xor
aam
add
lret
sbb
add
lock
pushf
ljmp
outsb
out
jnp
int3
out
cmp
jmp
lea
sub
in
dec
jb
pop
shrl
popa
scas
aad
dec
and
cmpsb
js
adc
mov
lcall
xor
cmp
mov
and
mov
dec
rcrb
leave
daa
fidivrs
mov
add
ja
push
imulb
cli
aad
jnp
insl
repz
add
sbb
ficoml
mov
fbstp
xchg
xchg
lret
jnp
mov
and
aam
add
sub
clc
dec
adc
jge
mov
imul
shll
scas
or
xchg
push
push
cs
add
xor
roll
push
jmp
sub
xlat
adc
mov
inc
pop
nop
dec
scas
dec
pop
stc
ljmp
push
rclb
out
sbb
pop
dec
push
dec
or
adc
jl
lcall
rcl
pop
push
lea
movsl
xchg
adc
mov
imul
movsb
or
mov
xchg
stc
mov
push
jbe,pn
dec
mov
test
int
xchg
insl
push
sub
pop
xchg
out
fists
in
ss
pusha
aad
dec
and
and
sbbb
js
or
test
jo
sti
dec
mov
sbb
mov
jl
dec
mov
lcall
lahf
mov
mov
push
push
adc
outsl
mov
repnz
and
fs
sahf
inc
pop
movsb
mov
mov
dec
sbb
sub
jae
xor
in
js
hlt
pushf
add
mov
add
inc
cli
roll
push
pusha
push
out
dec
mov
nop
daa
stos
push
lds
or
pop
cli
add
cmp
rcrb
mov
sub
xor
jae
mov
mov
push
imul
xchg
aad
in
jne
sbb
sti
jnp
imul
fdivrl
arpl
mov
hlt
das
add
add
aas
hlt
mov
imul
adc
flds
icebp
inc
push
arpl
enter
mov
or
jnp
lahf
sbb
sti
out
les
inc
scas
mull
and
loopne
lahf
cs
gs
call
fnstsw
jne
jae
rolb
movsl
stos
les
dec
cmpsl
push
out
push
mov
cmp
aad
cmp
lfs
popa
ljmp
lret
aad
jle
jge
cs
insb
aad
xor
push
rorl
pop
mov
cmp
sti
and
pop
mov
inc
shll
out
scas
es
jae
lret
mov
fisubrs
inc
mov
rcr
loope
push
xor
push
repz
inc
arpl
add
movswl
xlat
popl
sahf
test
shll
adc
mov
icebp
cmp
lock
jp
xor
cmp
push
jns
sub
int
jne
enter
cmc
mov
mov
orl
lock
lahf
inc
dec
pop
or
nop
ss
xor
outsl
test
jae
mov
inc
dec
popw
mov
mov
ret
and
mov
lds
fcmovne
sti
jnp
lahf
xlat
xor
sbb
mull
mov
push
in
sbb
inc
xchg
test
test
loope
mov
sub
cmp
mov
add
cwtl
out
loop
and
push
inc
stos
gs
fisubs
or
xor
push
scas
out
lods
add
sbb
xor
cs
ret
std
outsb
in
push
decl
jb
cmp
rorb
mov
push
das
xor
and
sbb
jmp
dec
mov
movsb
jge
push
inc
lds
add
sbb
out
out
mov
fnstsw
add
jl
xor
xchg
mov
test
jp,pt
adc
sbb
sbb
addr16
push
inc
or
pop
xchg
in
inc
sub
dec
dec
stc
xchg
repz
loop
and
dec
or
push
xlat
mov
add
push
jo
arpl
arpl
leave
fildl
cmp
cmc
cmpsb
aad
sub
jg
scas
and
movsb
adc
mov
jne
in
scas
mov
add
push
nop
and
jbe
aas
jmp
leave
and
xchg
cmp
call
stos
add
pop
xchg
or
cmp
inc
outsb
fs
jecxz
out
pop
xchg
fstps
dec
xor
jo
jge
aad
dec
fdivp
in
es
sub
jmp
incb
rolb
adc
inc
stos
orb
lods
je
dec
insb
pop
popf
push
rorl
sbb
clc
xlat
xlat
test
outsb
cmp
loope
fnstsw
daa
dec
fistl
decb
pop
movsb
xchg
in
push
lret
ss
dec
pop
je
dec
push
mov
hlt
cmpsl
inc
lods
or
mov
loop
repnz
jecxz
lret
out
movb
or
out
xchg
mov
mov
sbb
xor
mov
and
fcomp
clc
pop
and
mov
test
mov
jmp
mov
sahf
inc
mov
test
sub
loopne
ficoms
inc
fisubrl
jb
push
out
daa
and
jmp
and
push
dec
subb
xchg
je
je
push
push
push
subl
insl
je
clc
push
test
ret
cmpsl
sbbl
addr16
mov
adc
repz
add
jb
outsb
roll
mul
inc
mov
sarl
outsl
int3
lods
xchg
xchg
add
pop
imul
popa
xchg
ret
shl
out
sub
cmpsl
mov
dec
cmp
dec
sbb
popa
dec
jg
xchg
fdivrs
clc
test
and
push
ret
std
leave
pushf
fwait
sbb
fstp
dec
js
cwtl
fisubl
sub
push
xor
lods
inc
mov
pop
andl
xorl
push
pusha
push
ja
mov
out
cmp
aam
xor
and
addr16
mov
sti
lahf
add
and
test
sbbb
std
pusha
pop
cltd
mov
jnp
les
sti
idivl
pop
jg
call
push
or
popf
lea
xchg
test
test
hlt
and
es
sub
inc
mov
mov
fwait
das
xchg
call
pop
rcll
lea
ljmp
mov
mov
or
inc
push
xor
lea
mov
and
dec
leave
cmc
daa
dec
ja
push
add
mov
push
shl
inc
dec
mov
icebp
inc
mov
jo
push
mov
out
ljmp
and
test
add
xor
xor
jle
cmc
arpl
mov
push
jno
mov
cmp
sbb
sbb
xor
mov
in
pop
jne
negb
insl
rorb
add
je
sbb
rol
pop
aam
jg
sbb
scas
or
sbbl
lea
pop
lcall
sbb
stos
lahf
imul
dec
add
imul
shll
add
out
std
repz
mov
xchg
jg
and
pop
add
lds
or
jae
in
xor
pop
popf
test
aad
or
or
dec
cmp
adc
and
add
lea
mov
mov
daa
mov
popa
test
lods
scas
mov
dec
jl
shrl
mov
jae
mov
cmp
and
adc
xchg
add
fnstsw
ficoml
dec
inc
scas
jg
fcomp
faddl
sub
jp
shl
mov
mov
push
test
jg
into
insb
dec
out
push
int
xor
and
rclb
andl
lods
mov
push
sti
cmp
mov
mov
adc
adc
dec
iret
or
xor
pop
push
fcmove
sti
out
xor
xor
mov
fdivs
and
mov
push
fnstcw
mov
push
ud2
cmp
push
rcrb
roll
inc
leave
pusha
adc
lcall
jmp
push
xor
dec
xchg
aas
push
mov
pop
rorl
sbb
sub
pop
sbb
push
mov
or
mov
fwait
mov
and
les
mov
cmp
das
std
js
jno
dec
xor
jge
add
pop
mov
and
rorl
ljmp
mov
mov
lds
stos
or
dec
call
loopne
stos
and
jg
xchg
clc
mov
je
mov
jno
testl
mov
lea
pop
push
rcrl
rcrb
mov
sub
pop
jmp
inc
jecxz
mov
lock
jns
mov
cmp
jns
push
loope
decl
loope
jo
and
mov
xchg
enter
jle
inc
hlt
popa
xor
fcoml
stos
daa
aaa
dec
pushfw
shlb
sbb
ret
inc
push
lret
fsubp
jecxz
pop
lds
cmpsb
mov
imul
loop
pop
cmp
repnz
dec
lret
test
imul
repz
pop
push
sbb
out
pop
xor
iret
xor
cmp
sbb
push
and
dec
jb
scas
nop
test
mov
jne
incb
pop
xchg
sub
in
fdivrs
sbb
pop
push
lock
idivl
loop
cltd
stc
je
or
push
xor
pop
xchg
fcmovb
xor
daa
test
or
mov
inc
imul
aaa
cmc
xchg
inc
test
popa
sub
or
xor
das
push
roll
dec
dec
repnz
xchg
sub
ret
mov
and
fidivrs
mov
loopne
cmpsl
outsb
out
nop
int
sarb
mov
mov
test
sub
or
cltd
jp
movsb
adc
mov
mov
xchg
pop
pop
idivl
loope
lret
repz
push
jge
mov
mov
sbb
pop
aaa
sbb
scas
rol
jo
flds
stos
mov
stc
popa
test
inc
pop
sti
pop
jns
jbe
clc
sbb
cwtl
dec
add
push
mov
shl
or
push
lock
xorl
ss
aam
cwtl
mov
mov
test
ja
inc
and
adc
dec
inc
int
sub
add
lea
sub
xor
and
push
popl
imul
xchg
dec
pop
jl
popa
or
push
mov
xchg
xchg
inc
pmuludq
push
dec
mov
xchg
lods
cmpsl
pushf
sbb
pushf
repnz
cmp
faddl
xchg
mov
loop
lds
das
xchg
mov
sub
jb
sbb
dec
or
jg
rcrb
adc
mov
jp
push
in
call
filds
out
pop
ss
pop
and
loope
xchg
cmp
imul
arpl
push
pop
jmp
scas
lcall
sbb
pop
test
xchg
lcall
ljmp
imul
int3
pminsw
inc
jmp
mov
dec
pop
jg
movsb
aad
jge
xor
jecxz
in
call
es
movsl
cwtl
js
lods
or
fistps
sahf
fiaddl
pop
mov
lret
js
add
xchg
add
mov
push
sbb
and
xor
adc
sbb
mov
pop
or
inc
inc
mov
orl
cltd
or
ret
cli
stc
repz
or
in
push
mov
hlt
sub
aaa
imul
scas
ljmp
add
rcll
lds
clc
fnstsw
and
fwait
bnd
pop
je
pop
cli
cmc
pop
test
nop
mov
jecxz
out
fsubrp
dec
or
loop
enter
insb
out
cmc
enter
ret
aas
mov
mov
push
inc
repz
xor
cmc
cmpsl
or
jl
push
lods
pop
stc
or
decb
cmp
push
pop
out
inc
xchg
adc
insb
frstor
daa
fldt
sbb
pop
mov
adc
or
sub
xor
scas
inc
adc
mov
add
ret
test
call
repz
xlat
aad
push
jmp
out
sahf
fsubs
xor
stc
sarl
insl
inc
jno
gs
cmp
mov
push
ds
lea
inc
fists
ret
lret
in
sub
push
decb
ss
lds
test
mov
fmull
push
xchg
stos
test
mov
lock
dec
idivb
insb
adc
insb
lods
out
xchg
shl
testb
in
mov
imul
mov
pop
aam
jle
fistpll
int3
jns
andb
xchg
jae
out
adc
dec
clc
or
or
leave
push
pop
jb
inc
inc
jle
outsb
lahf
mov
or
imul
push
jns
pop
mov
push
sbb
rorl
mov
sbb
mov
xor
into
nop
inc
stos
fisttps
adc
jle
jae
stos
cmp
js
popf
pop
push
xor
out
pop
daa
mul
inc
gs
mov
mov
jmp
cmp
std
mov
subl
adc
jbe
add
xchg
fistpl
stos
mov
insl
outsl
adc
lds
fidivrl
inc
ja
jg
push
aam
push
push
jae
dec
cmp
push
lds
nop
ljmp
jg
test
cmp
in
stc
into
ljmp
cmc
mov
inc
int
mov
test
ds
or
les
je
xchg
lods
shrl
loope
je
dec
sbb
xchg
pop
ds
dec
dec
mov
test
cld
push
sbb
dec
outsl
push
pop
add
dec
stos
add
scas
movsl
movsl
mov
mov
fwait
out
push
sbb
and
xchg
in
push
push
rcrl
mov
sub
test
mov
outsl
adc
inc
adc
cmc
leave
sub
sarb
push
rorb
mov
sbb
incl
mov
jg
int3
aaa
gs
mov
ficomps
xchg
loopne
test
mov
add
adc
mov
sub
cmp
mov
cmp
push
stos
dec
and
sbb
dec
xchg
jge
jb
gs
loop
out
pop
cmpsb
cmpb
cld
mov
xor
xchg
xor
fldcw
clc
xor
cmp
ja
or
fldenv
push
or
pop
sbb
lret
mov
pop
jmp
mov
xor
das
les
cwtl
and
addl
aaa
xchg
mov
test
cmp
pop
xchg
loope
or
jecxz
lods
mov
sahf
add
push
jl
cmp
mov
popf
pop
aad
imul
aam
addb
adc
xor
faddl
scas
pusha
cmp
xchg
dec
mov
cmove
fistl
out
mov
nop
sub
data16
xchg
sbb
imul
das
nop
inc
xchg
notrack
add
lock
lret
stos
jl
adc
jno
push
xchg
mov
xchg
xor
enter
and
sbb
lahf
std
lahf
jns
xor
lds
ret
xchg
mov
sub
or
test
movsl
push
sbb
mov
cmp
ja
and
xchg
int3
mov
jle
push
mov
fadd
fwait
pop
add
adc
xchg
popf
sbb
cmp
shlb
out
inc
fwait
xchg
mov
mov
adc
out
sbb
xchg
mov
cmp
arpl
push
pop
pushf
popa
dec
jle,pt
add
sub
les
xchg
aam
adc
std
jle
js
cmp
jae
mov
pop
les
in
gs
sub
movsl
mov
jle
pop
loop
mov
lret
mov
cmpsl
jae
jbe
mov
add
in
mov
sub
cmpsl
test
cmp
xlat
test
cmpsl
inc
movsl
jp
fmuls
pop
ja
adc
repnz
xor
sbb
cltd
sub
cli
pop
sbb
pop
lret
mov
aaa
fldl
sbb
mov
addr16
mov
sarl
cmp
out
int3
and
lds
push
xchg
fdivl
imul
ret
push
in
push
pushf
and
loopne
lahf
je
popf
repnz
imul
popa
outsl
neg
xlat
notl
xchg
inc
push
std
out
mov
jno
subl
je
lret
mov
inc
jmp
int3
ret
mov
mov
daa
test
xchg
ret
out
in
ss
pop
mov
add
test
cmc
lds
repz
mov
inc
push
fistpl
sub
jl
inc
rolb
push
enter
or
xor
jp
in
insb
daa
addr16
nop
add
dec
jge
lahf
lods
loopne
ja
mov
ds
xchg
jl
imul
sbb
rorl
xchg
cmp
dec
sbb
pop
mov
add
imul
mov
mov
out
adc
xchg
in
movsl
fildl
mov
and
add
movsl
in
imul
jp
push
ret
imul
leave
cwtl
xor
push
push
pop
test
xor
xchg
inc
mov
bound
inc
popa
fists
std
ret
mov
xor
out
fnstsw
inc
sbb
cmc
daa
mov
or
fs
push
ret
mov
mov
into
roll
mov
jecxz
pop
hlt
or
repnz
cmc
mov
push
dec
sbbl
xor
mov
iret
adc
lcall
icebp
xor
pop
mov
cmp
add
xrelease
mov
mov
fnsave
dec
mov
lock
mov
jle
out
push
loope
sahf
mov
adc
mov
xor
out
testb
pop
sub
mov
adc
mov
mov
jne
add
fwait
cs
inc
lds
jae
inc
and
icebp
xor
ret
je
and
mov
xchg
adc
dec
mov
mov
add
lret
xchg
pop
shlb
xor
jae
popa
movsl
lods
sti
cmp
lea
fists
cmp
mov
fistps
pop
mov
or
xchg
mov
pop
jns
inc
and
jns
das
cmpl
jg
rol
adc
cmp
popa
xchg
sbb
std
adc
push
aad
cli
add
jne
xchg
std
jo
inc
mov
lods
lock
hlt
cmp
cmp
mov
scas
fcomps
scas
lahf
test
lods
lahf
xor
sbb
test
in
les
test
orl
test
cld
sub
pop
loope
shll
inc
dec
imul
movsb
xchg
cltd
aam
lahf
lret
sbb
popa
add
mov
jae
push
jg
sbb
clc
jmp
cmp
lock
mov
push
xchg
call
add
imul
push
test
idivb
fs
mov
fnstcw
movb
mov
call
or
fisubrl
lods
insl
push
xor
bound
or
push
mov
movsb
bswap
daa
mov
pop
dec
jp
xchg
sub
jo
adc
sahf
lret
fcoms
push
repnz
sub
loopne
push
cmp
test
sub
aas
test
xor
adc
jb
aaa
bnd
lea
mov
sub
pop
mov
stc
or
and
inc
es
xchg
sbb
mov
inc
fildl
adc
mov
mov
or
mov
inc
aam
arpl
mov
pop
cmp
fcoms
shll
cmp
and
push
lods
mov
fs
lods
pop
lahf
push
test
xchg
jp
xor
cwtl
cmp
sbb
fiaddl
or
and
into
ret
mov
xor
cmpsb
jmp
lds
lea
add
push
adc
test
lret
xchg
mov
cltd
lret
flds
or
pop
leave
cmp
fs
mov
inc
icebp
jmp
sti
popa
mov
mov
outsb
adc
repz
loopne
and
push
mov
and
sbb
iret
cwtl
or
sub
in
mov
or
mov
mov
das
setge
xchg
xchg
mov
push
xchg
dec
inc
insl
movsb
sub
add
insb
std
daa
icebp
dec
cmp
loope
sbb
idivl
sub
mov
aad
adc
mov
add
mov
lret
popa
enter
jbe
adc
adc
push
and
lods
xor
or
jb
negb
fs
or
inc
repz
fs
shrb
sbb
xor
imul
lcall
movsb
mov
push
mov
icebp
xchg
movl
xchg
jmp
mov
int3
lea
lret
and
xor
inc
mov
aaa
jnp
ret
cmp
push
shr
add
inc
das
pushf
fisubs
push
shrb
subl
push
nop
scas
mov
repz
adc
cmp
lea
add
jl
arpl
fmuls
daa
or
add
lea
int
or
lds
test
and
mov
leave
inc
jnp
repz
addl
sbb
cs
outsl
push
push
lods
inc
sbb
jo
or
mov
dec
loope
cmc
sahf
out
cmp
mov
inc
jbe
data16
dec
adc
loop
ret
pop
das
pop
dec
adc
ret
cwtl
dec
inc
mov
into
lcall
dec
aaa
cmp
testb
test
mov
xor
fcoms
les
inc
lret
int
ds
sub
pop
dec
cmp
xchg
repz
mov
mov
sbb
mov
sub
dec
pop
lret
shrb
test
lret
adc
add
xor
push
push
stos
add
les
sbb
aad
adc
jg
and
push
jno
int3
jecxz
dec
cmp
sahf
aaa
pop
and
jb
cli
test
mov
and
out
cld
push
fwait
inc
push
mov
pop
pop
pop
mov
scas
int
repz
or
mov
or
inc
nop
cwtl
movsb
mov
dec
mov
imul
and
fstpt
xor
lods
repz
loop
daa
adc
dec
pop
lret
xchg
cmovnp
outsb
dec
enter
stos
or
sbb
cmp
mov
dec
dec
mov
sbb
outsl
xchg
sub
lcall
aad
icebp
mov
icebp
mov
test
pop
cmp
cmpsl
cmc
je
pop
jecxz
mov
jb
subb
add
imul
aaa
inc
test
mov
test
mov
outsl
mov
aaa
insl
inc
xor
ss
sbb
cmp
pop
ss
mov
push
sbb
ret
out
inc
mull
mov
sbb
inc
or
xor
ljmp
into
adc
push
xlat
dec
mov
out
pushf
je
fidivl
fldt
adcl
jb
scas
mov
push
cli
pop
in
loop
test
test
lahf
jp
in
adcl
or
negl
mulb
add
lahf
mov
pushf
sub
jb
leave
popf
jecxz
fidivs
es
cmpsb
test
div
and
in
sarb
sbb
jmp
mov
mov
push
xor
ja
push
sub
test
pop
sarb
fsubrp
and
jns
jae
mov
pushf
in
mov
cmp
outsb
lods
sub
jae
jae
mov
pushf
adc
pop
and
mov
cmpb
ljmp
divl
push
adc
pop
mov
jno
cltd
das
inc
xchg
daa
xchg
jmp
imul
jno
fldl
cmc
jbe
mov
ljmp
mov
fnstcw
fstpt
lock
jns
shll
pop
movsb
mov
cmp
sub
mov
js
addb
mov
xchg
mov
dec
push
lds
mov
push
sub
aam
cmpsb
enter
mov
lods
and
or
sub
je
and
pop
out
xor
mov
cld
lret
mov
xchg
mov
and
pop
pop
cld
daa
mov
sbb
mov
jnp
fadd
pusha
in
mov
pop
inc
or
dec
bound
loop
fiadds
jnp
lahf
pop
test
sar
cwtl
pop
ret
es
pushf
insl
dec
add
sub
mov
idiv
xlat
test
sub
rorl
mov
ret
mov
lock
push
test
add
jns
mov
loopne
mov
addr16
push
inc
lahf
fisubrs
js
xchg
imul
movsb
test
insl
or
pop
out
roll
stos
divb
sub
loopne
jle
pop
mov
xor
stos
cmpsb
sbb
add
mov
lret
adc
sub
mov
sbb
sub
mov
cmp
jns
mov
dec
lods
push
mov
int3
movl
pop
es
popf
push
mov
sbb
inc
dec
fisubrs
fstp
lods
scas
fstpl
cmp
fsubs
test
push
mov
mov
inc
lods
push
add
xchg
pop
dec
xor
or
addl
nop
add
adc
icebp
xor
pop
xchg
mov
xchg
and
jge
fcomps
dec
fdivrs
aaa
xor
lret
adcb
jle
inc
repz
loope
inc
leave
sbb
cmpsl
add
mov
mov
mov
lret
lds
add
call
push
xor
pusha
cmpsl
ljmp
insl
lret
jg
jno
push
leave
pushf
dec
hlt
push
mov
sahf
out
push
test
psubsw
mov
std
hlt
sub
or
xchg
push
jp
pop
das
les
das
xlat
pushf
push
pop
sbb
notl
adc
mov
pop
mov
xchg
loopne
leave
lahf
sub
or
loopne
scas
test
hlt
test
xchg
jg
jg
xor
mov
mov
pop
je
cmp
inc
push
push
nop
mov
jge
into
inc
shrb
or
enter
movsb
xchg
xchg
notb
stc
movl
push
sbb
roll
fldenv
adc
lcall
test
aas
js
fwait
adc
cmp
jp
repz
pop
out
dec
mov
xchg
push
adc
inc
out
es
mov
cmp
mov
jge
sub
iret
inc
and
pop
adc
dec
inc
jecxz
jg
push
fbld
les
push
inc
mov
aad
jg
adc
data16
out
inc
inc
repnz
sbb
inc
add
xor
or
jne
aaa
xchg
mov
notl
imul
test
jno
inc
or
inc
push
xchg
inc
dec
cmc
cltd
sbb
int3
add
aaa
fldcw
push
pop
dec
daa
loop
sbb
outsl
mov
hlt
mov
jnp
out
mov
stc
addb
testl
call
sbb
testl
mov
bound
jg
fists
scas
clc
adcl
dec
xchg
push
lods
add
cmpsl
dec
jns
push
scas
push
pop
das
bound
mov
pop
ljmp
cmp
jbe
pop
add
ret
cmp
subb
jecxz
sbb
fdivrl
cmpsb
mov
xchg
lea
int
rcl
dec
insl
mov
push
lods
ss
out
push
outsl
push
insb
mov
xchg
lret
fsub
mov
push
cmpsb
cmp
sbb
out
pop
add
rorb
lods
lcall
mov
push
lret
mov
or
dec
inc
push
pop
cmc
fs
int
test
push
xchg
jb
roll
shr
sbb
mov
ficompl
push
shrb
out
fistpl
and
jg
js
subb
push
subb
leave
mov
nop
xchg
ljmp
adc
mov
xchg
cli
repz
or
aam
insb
pop
jecxz
mov
fdivs
pop
pop
filds
mov
dec
push
outsb
pushf
add
into
jno
popl
cmp
lret
shl
pop
mov
jno
ljmp
pop
sti
scas
xor
popa
call
push
sbb
andb
lods
or
xchg
dec
subl
cmc
add
pop
int
xchg
fistl
test
fs
insb
in
dec
stc
xchg
add
mov
pop
push
imul
mov
hlt
push
push
lret
xor
lret
outsl
out
xchg
loop
jp
push
addr16
fs
sub
std
cmp
cmp
xlat
pusha
aaa
sbb
repz
scas
cld
sbb
hlt
lds
add
and
push
aam
adc
js
adc
dec
sarl
push
dec
or
imul
xor
sbb
add
and
mov
mov
sahf
sbb
mov
mov
jge
imul
es
xchg
mov
daa
cli
in
les
loop
inc
xor
mov
dec
int3
sti
sbb
pop
faddl
fisttpl
inc
jle
mov
call
sub
cmp
mov
jo
mov
or
xchg
fucomip
fstp
or
fwait
mov
push
loop
scas
push
cmp
out
sarl
cmpl
xchg
dec
f2xm1
in
dec
xor
or
jl
mov
pop
mov
icebp
mov
sbb
mov
ret
adc
aam
add
pop
hlt
pop
sbb
jecxz
jne
into
mov
out
adc
movsl
imul
lods
push
mov
lret
fnstenv
mov
inc
mov
xor
in
lods
repz
jo
pop
and
and
xlat
aaa
test
lods
pop
enter
int3
xchg
cmp
mov
mov
rorl
rcrl
mov
ret
into
or
int
orb
add
in
out
lods
in
lods
cmp
mov
pop
lea
fucom
orl
fwait
add
xor
sub
call
stos
and
fcoml
xchg
xchg
in
cwtl
mov
flds
fs
adc
push
sub
lcall
mov
test
popl
pop
lret
lds
sti
inc
xor
adc
fadds
lcall
fdivrl
rcrl
bound
jno
push
and
pop
sti
fucom
insl
add
outsb
testl
xchg
xor
xor
push
icebp
jno
mov
and
jl
xchg
sub
outsl
mov
fcos
in
lock
scas
sti
adc
outsb
loopne
cmp
jg
andb
sahf
aam
pop
pop
loope
mov
fisttps
xor
pop
mov
lods
pusha
cmpsb
push
shrb
imul
repz
in
add
out
mov
mov
subl
dec
shll
leave
push
push
sbb
mov
fwait
loopne
jge
jo
push
sub
xchg
ret
mov
cld
out
sbb
inc
or
inc
sbb
outsl
push
out
out
jecxz
es
push
add
sub
mov
shll
mov
sub
lret
scas
mov
std
pop
adc
repz
mov
lock
jl
outsl
sub
rcrl
mov
adc
jo
int3
add
pop
scas
inc
xor
ja
sbbl
and
sbb
push
cmp
enter
pop
pop
mov
inc
lods
int
push
jge
pop
clc
jae
int
mov
inc
fnstsw
xchg
sub
es
mov
mov
mov
orl
push
sarb
add
jl
xchg
dec
pop
imul
cmp
subb
add
inc
repnz
fwait
mov
andb
stos
mov
sub
push
and
mov
and
insl
adc
jmp
and
popa
dec
mov
inc
sbb
enter
inc
mov
lcall
imulb
std
lods
jnp
fldt
add
xor
lret
push
push
daa
rol
clc
stos
and
iret
nop
lret
inc
xlat
xchg
lods
or
push
in
push
sahf
sahf
inc
mov
sbb
push
icebp
add
add
fcmovnu
inc
fcompl
and
lods
pushf
add
imul
ds
ljmp
push
mov
adc
push
xchg
xchg
push
cmp
push
repnz
test
mov
cmp
lods
std
sbb
ret
dec
mov
cli
mov
push
bound
push
add
jmp
xchg
ret
dec
push
push
and
mov
leave
out
pop
mov
shl
xor
test
fstpl
xchg
dec
jo
icebp
inc
jg
and
cmp
stos
repz
pop
cmc
inc
loopne
into
ficoml
imul
sbb
jge
or
dec
dec
xor
add
into
mov
jg
jl
lds
stos
xchg
insl
inc
stc
lret
push
fisubs
inc
push
insb
repz
jecxz
rep
adc
mov
lods
hlt
out
pop
inc
jae
or
dec
test
push
aad
jnp
sub
sbb
jb
xchg
jae
and
lock
mov
push
idivb
xchg
inc
repnz
inc
mov
lds
mov
pusha
rcrl
scas
add
hlt
push
popf
ljmp
sub
sub
or
adc
inc
pop
icebp
jp
xor
js
les
jbe
xlat
mov
daa
rorl
adc
push
dec
in
lcall
push
subb
xor
orps
bswap
and
dec
lods
cli
fwait
data16
sub
xchg
and
aaa
in
ret
mov
pop
in
xchg
cmp
jne
inc
shrl
and
mov
mov
mov
int
sub
mov
iret
cmpsl
cmp
sbb
cmpsb
jnp
xor
pop
inc
sub
push
aam
pop
xchg
mov
imul
fwait
cltd
add
push
pop
jge
in
imul
rol
ret
or
ret
pop
fsts
and
adc
out
push
int
test
int
push
ret
xchg
and
push
adc
cmpsl
adc
mov
ficompl
adc
inc
mov
popa
mov
push
add
sub
sbb
ds
lret
add
mov
mov
xor
sub
jmp
cmp
lret
loope
mov
fmull
das
in
jle
out
rolb
inc
or
fsubrl
xchg
jnp
push
pcmpeqd
cmp
mov
inc
ret
push
cmpsb
in
or
xchg
mov
icebp
in
mov
iret
std
out
mov
rorb
add
xchg
and
push
cmp
xor
jbe
jecxz
cs
dec
or
mov
cmpb
xchg
xor
in
data16
pop
push
in
push
mov
push
repz
jb
mov
add
repnz
das
mov
scas
pop
adc
sbb
fwait
nop
cli
test
lret
iret
adc
xchg
jae
rcll
arpl
inc
data16
nop
mov
sbb
cld
dec
and
jp
mov
dec
fdivrp
mov
inc
cmp
add
sarb
lcall
or
fistpll
into
leave
cmp
xchg
add
inc
out
clc
and
adcb
mov
cmpsb
push
divl
mov
add
jle
or
xor
std
dec
ret
mov
scas
inc
jb
adc
mov
cmp
mov
pop
jge
adc
pop
lods
lock
leave
out
repz
or
and
ljmp
adcb
testb
mov
or
loop
adc
dec
loopne
jb
xchg
push
ljmp
jno
sbb
mov
icebp
shr
jge
mov
rol
jg
sub
scas
sbb
insl
xchg
or
and
aad
pop
je
push
mov
ss
lea
jecxz
jl
test
push
sub
add
dec
fsts
sub
or
stc
mov
js
pop
ljmp
rcl
imul
and
or
test
repnz
pushf
icebp
xor
mov
mov
dec
jns
push
push
lea
pop
dec
xor
xor
push
gs
sbb
mov
or
lret
fcmovnu
push
es
cld
cmpsb
adc
mov
or
and
imul
mov
sub
arpl
test
pop
insb
jl
pop
pop
lds
mov
sbbl
xchg
adc
leave
shll
icebp
jp
lea
repnz
insb
ljmp
ja
adc
mov
fs
mov
mov
adc
insb
clc
bound
add
repnz
jae
stc
mov
push
aas
or
ret
pop
mov
pop
lahf
dec
mov
in
sahf
mov
adc
rorb
dec
ljmp
aad
popa
stos
outsl
cmp
jae
enter
jmp
pushf
dec
xchg
mov
out
fldt
xchg
nop
ds
cwtl
bound
mov
out
add
inc
and
add
xorb
mov
mov
scas
push
lds
data16
fistpll
jo
push
mov
inc
inc
mov
fdivrs
call
cmp
push
insl
xchg
add
das
aaa
aam
cmp
leave
jl
mov
test
cmpl
sahf
rcr
cwtl
jmp
pop
add
clc
or
jmp
lock
sti
add
or
push
arpl
dec
adc
das
pop
inc
aas
stos
push
pop
shlb
out
or
divps
fsubl
in
or
frstor
sub
pop
sarb
cmp
ds
xchg
nop
fmul
xor
loope
pop
jmp
int3
mov
cmp
inc
ljmp
mov
xchg
add
aad
inc
push
cmp
ss
ret
add
mov
add
pusha
jne
imull
push
xor
cmpsl
ss
cmp
mov
inc
fcmovu
xor
fcoms
shrl
push
pop
fildll
xor
mov
xchg
add
mov
fcompl
adc
movsl
adc
add
aas
adc
lcall
fistps
mov
pusha
xchg
movsl
mov
sbb
xor
cmp
movsb
jo
cmpsl
fstl
fnstsw
hlt
push
out
dec
stos
lds
scas
gs
popfw
stos
mov
and
sub
fstpt
and
sarb
xchg
push
adc
inc
pop
sub
roll
in
addr16
and
inc
xchg
pop
js
clc
ds
pop
scas
outsb
jmp
fistpll
sbb
mov
cmc
mov
or
sub
cmp
or
in
ja
cs
pop
aas
mov
dec
scas
xchg
add
loopne
xchg
nop
dec
mov
mov
daa
jnp
mov
cmpsl
lods
jmp
fdivrp
jle
test
or
shll
enter
cmp
sub
rclb
cmp
mov
cli
jp,pn
mov
xchg
movsb
adc
in
push
pop
andl
sbb
sbb
jnp
mov
lods
rcrb
inc
inc
leave
xlat
push
mov
xlat
or
add
sar
add
xchg
shr
push
ficompl
subl
jae
lcall
adc
popf
push
cmpsb
and
rcl
mov
aas
pop
insl
mov
pop
mov
aas
jnp
bound
mov
lahf
xor
sbb
out
xor
je
out
in
mov
in
repnz
add
testl
imul
rcll
jmp
in
sbb
subl
ret
add
popf
ljmp
jg
insb
int3
xchg
js
sub
sbb
or
dec
sbb
lahf
dec
stc
stos
fisttps
or
sahf
push
das
fmuls
pop
movsl
jle
dec
inc
jne
incl
aad
aam
inc
inc
xchg
insb
sahf
aaa
xor
xchg
sub
push
ja
jle
jb
add
imul
popf
xchg
and
orb
add
jge
or
jp
cmp
inc
sub
imul
add
push
lock
sbb
imul
movsb
sub
dec
jno
mov
push
pop
mov
mov
loope
inc
mov
add
and
sub
fdivl
inc
xchg
push
adc
loop
es
iret
and
dec
mov
bnd
notb
rep
addl
sti
arpl
add
sti
enter
in
xchg
icebp
std
clc
adc
iret
sub
repz
xchg
aam
jmp
mov
inc
mov
daa
dec
mov
cmp
or
sub
loopne
sub
insl
jne
add
ds
push
js
rcll
mov
adc
setno
adc
aaa
decl
mov
add
std
call
jge
mov
cmp
sbb
pop
sbb
pop
repnz
loopne
cltd
cmp
pushf
daa
pop
mov
dec
sahf
mov
lods
ror
or
movsl
push
mov
testl
adc
jnp
mov
aaa
sarb
or
ja
subb
das
and
pop
sbb
and
nop
in
lds
mov
ret
jbe
imul
mov
enter
add
push
imul
lcall
pushf
inc
test
not
jl
xchg
xchg
add
add
shrl
and
cmpsb
clc
dec
inc
pop
lret
xchg
ret
jg
sub
jns
pop
cmp
push
mov
popf
scas
fs
cmpsb
lret
loopne
mov
mov
subl
ret
pusha
fcmovne
add
and
leave
lods
jbe
adcl
adc
mov
sub
aam
popa
jbe
jmp
lods
stos
int3
push
fisttps
mov
adc
mov
dec
scas
sbb
or
dec
mov
mov
adc
je
push
out
popf
insl
fiadds
sbb
adc
ss
xchg
fstpl
adc
jno
dec
or
inc
das
popf
out
ret
scas
call
icebp
cmp
sbb
and
jmp
out
das
insb
sub
and
cmp
adc
loope
cmp
popa
jne
dec
sarb
xchg
dec
in
inc
repnz
in
jbe
inc
cs
add
xor
faddp
mov
add
sub
fnstcw
push
push
lds
aad
adc
sbb
or
push
es
movsl
pop
dec
adc
sar
or
lret
icebp
mov
push
mov
xor
pushf
data16
push
mov
sub
mov
test
mov
pusha
add
mov
sbb
inc
adc
hlt
fwait
mov
cmp
pushf
pop
mov
fmull
add
dec
pop
ret
xchg
sti
filds
pusha
lahf
dec
sub
lods
in
movsb
pop
int
int3
dec
js
dec
lret
fs
pop
xchg
rolb
lock
xchg
mov
xchg
adcb
lret
gs
incl
fistps
adc
ss
xorl
or
push
xchg
push
xchg
add
cmp
adcb
orb
dec
xchg
inc
call
rcll
xchg
xchg
mov
push
jno
mov
lcall
out
fdivrl
adc
mov
shl
or
inc
dec
sub
push
jne
xchg
xchg
cld
xor
outsb
pusha
mov
inc
out
cmp
jge
lea
lcall
mov
aad
and
sub
pop
fiadds
pop
jmp
cmp
sbbb
inc
jecxz
daa
in
inc
stos
sub
scas
pop
ljmp
loope
ret
mov
jle
mov
leave
loopne
cmc
pop
in
std
jns
mov
test
lcall
xadd
or
rorb
push
call
cmp
outsb
xor
jb
inc
cmpsb
pusha
scas
cmpsl
pop
mov
sub
mov
pushf
addb
rcll
ja
inc
sbb
dec
dec
loopne
add
mov
jecxz
insl
jne
daa
xor
je
mov
scas
lods
mov
jnp
cld
jns
pop
je
cmp
adc
inc
loope
cmc
adc
pop
sbb
jnp
sbb
stos
icebp
mov
lea
cmp
sarb
cltd
js
adc
repz
fsub
enter
js
jl
xorl
mov
rclb
and
popf
mov
jns
push
cmpsb
cld
test
sbb
cmp
mov
and
ds
xchg
test
and
pop
movsb
cmpsl
ficoml
mov
push
jne
loope
stos
jae
dec
inc
ret
or
clc
mov
shrd
rcrb
pcmpeqb
sub
or
pusha
xchg
mov
push
mov
out
movsl
inc
push
jns
fldenv
mov
icebp
les
lds
xchg
inc
int3
lahf
cmovl
popf
dec
mov
and
fcoml
call
jbe
cs
dec
or
int
leave
lds
in
bnd
mov
fdiv
xor
push
js
and
jo
gs
mov
cmc
jmp
divl
mov
mov
dec
clc
sbb
hlt
repnz
mov
xor
xor
push
imul
fstpt
pop
adc
inc
jns
fildll
add
mov
test
call
push
fadds
or
ss
inc
int3
out
xchg
pop
pop
xchg
cmp
sub
in
cltd
push
mov
xchg
sbb
sub
sub
push
cmpsb
ret
pop
call
roll
bound
cmpsl
inc
int3
or
add
insl
dec
and
xchg
push
pusha
mov
fisubs
in
movsl
movsb
adc
sub
jbe
or
push
mov
rcll
sub
mov
popf
popa
mov
and
mov
adc
psubsb
adc
sbbb
mov
xor
xchg
outsl
fistpll
stos
xorb
enter
cmc
neg
fwait
jb
mov
ds
dec
test
dec
mov
fstpl
loopne
mov
into
jnp
sbb
loope
jns
push
jmp
lret
and
xchg
sarb
je
cli
stc
xlat
ret
mov
idiv
jg
in
fimull
xchg
and
leave
incl
repnz
sahf
and
rolb
dec
dec
pop
repz
clc
outsb
pop
imul
jnp
stos
push
xchg
mov
mov
xorl
adc
jp
std
addl
mov
loope
cmp
pop
mull
dec
push
xchg
adc
pop
jo
or
add
ja
loopne
lods
xor
ret
cmp
adc
sbb
jns
and
xchg
fimuls
xchg
add
cmpsb
jg
mov
push
sub
and
pop
scas
icebp
or
push
mov
gs
dec
mov
mov
pop
insl
addr16
stos
cld
les
mov
aam
xchg
push
or
cmp
push
xchg
rep
aas
je
jge
xchg
repnz
pop
push
inc
add
in
sub
pop
lret
aam
pop
aam
sbb
jno
add
shrb
mov
das
mov
cli
dec
sub
std
jnp
sub
mov
lods
sub
ret
jnp
sub
cld
repz
and
cmc
insb
mov
jo
iret
push
loope
fisttps
mov
dec
stc
arpl
mov
adc
out
call
imul
pop
and
push
notb
loope
mov
push
jp
shlb
test
out
mov
sub
int3
scas
or
dec
adc
aaa
scas
dec
pop
addb
cld
lahf
enter
jns
or
ljmp
fildl
icebp
sub
adc
aam
push
shlb
jl
jnp
call
pop
ret
jmp
aam
and
mov
adc
mov
cmc
loopne
cld
outsl
in
sti
loope
mov
hlt
mov
inc
inc
std
adc
nop
xor
pop
and
in
add
xchg
es
cld
pushf
ror
decb
ljmp
jmp
mov
bound
push
movsl
inc
scas
pop
fstl
cmp
pop
mov
and
movsl
adc
push
xlat
inc
mov
fistpll
cmc
lret
aam
and
push
popa
pop
icebp
test
sbb
jae
push
push
inc
xlat
or
cmpsl
mov
sbb
mov
mov
lods
daa
imul
dec
xchg
inc
mov
call
rcr
ds
gs
fwait
insb
mov
and
nop
push
xchg
insl
adc
sbb
lret
xchg
repnz
cltd
stos
and
movq
popa
mov
mov
fnstsw
popf
xor
push
sub
sub
divb
lods
gs
outsl
out
ret
movsl
lds
add
lods
leave
cmp
test
cld
jmp
fbld
decl
xchg
stos
cwtl
mov
inc
in
lret
js
pop
add
pop
push
cmpsb
popa
inc
idivb
xor
sub
and
test
movsl
xchg
dec
cmp
loope
and
sarb
nop
fs
hlt
rorb
mov
and
sub
movsb
mov
mov
mov
or
jns
push
and
cli
fistps
sbb
outsl
jmp
mov
push
push
cld
xor
push
inc
sbb
or
cli
into
adc
mov
and
iret
addr16
adc
cmp
sti
xor
adc
into
push
sbb
andl
inc
repnz
sbb
rcrb
repnz
sbb
add
sbb
mov
lds
adc
js
daa
dec
mov
in
cli
imul
mov
nop
insb
js
iret
mov
popf
daa
dec
or
mov
fisubrs
and
xchg
adc
dec
pop
incb
xchg
adc
mov
arpl
mov
push
sbb
mov
daa
fwait
sub
mov
adc
jo
lret
fbstp
cld
scas
stos
dec
jns
bnd
mov
ret
jb
or
push
jne
xchg
popf
pop
jge
out
into
mov
cld
dec
lret
fldln2
cld
cmp
ret
lds
xchg
sub
pop
adc
fs
fs
stos
cmpsl
fstpl
and
cwtl
cmp
int
repnz
jle
add
add
push
sbb
pop
stc
fcmovnb
ficompl
pop
out
lock
push
aam
out
enter
xor
cmp
ja
fs
adcb
push
stos
push
cmp
sarl
pop
and
sub
jp
test
sub
loop
adc
pop
test
ds
mov
mov
jmp
xchg
and
jns
popl
jnp
incl
jno
fst
test
popf
mov
xchg
push
lret
loop
dec
pop
push
push
movsb
int
cmpl
mov
add
sub
inc
pop
inc
mov
cmpl
rep
std
addl
std
push
iret
lcall
add
enter
ds
movsb
cli
insb
daa
push
dec
stos
clc
shlb
cli
mov
and
jl
mov
leave
adc
cmp
dec
lret
sbb
pop
sub
ret
adc
mov
push
mov
lods
adc
bound
repz
push
lret
push
inc
push
mov
std
jo
std
fsubl
adc
inc
add
xlat
xchg
sarl
push
adc
push
push
lret
pop
inc
inc
addl
jo
out
jb
and
push
adc
test
mov
xor
jecxz
xchg
push
ja
sahf
mov
mov
xchg
pop
inc
es
inc
clc
aas
cld
aad
lcall
pop
ffreep
push
push
les
bnd
mov
into
ljmp
sarb
shlb
enter
xor
scas
psrad
xchg
in
add
imul
sti
push
cmp
out
jmp
pop
roll
ja
inc
pushf
cmpsl
lock
popa
or
xor
loopne
mov
fwait
jmp
mov
push
cmpsl
pop
and
rolb
mov
mov
pop
jle
sbbb
ja
sti
lods
imul
movsb
jne
jl
out
mov
inc
inc
je
out
push
push
divl
jmp
xchg
mov
mov
cli
gs
imul
icebp
adc
and
xor
ds
push
fnstcw
into
mov
push
jo
inc
arpl
rcr
or
mov
fs
push
and
jge
test
xor
xor
into
mov
sub
pop
cld
dec
xor
aaa
inc
bound
imull
or
aaa
in
repz
test
mov
lds
loopne
frstor
push
lret
into
xchg
insb
dec
sub
xchg
imul
jl
push
lcall
xor
xor
push
mov
jnp
xchg
shlb
lahf
test
pushf
adc
out
loope
dec
jle
inc
std
cmp
in
or
mov
mov
sbb
adc
sbb
lret
aam
in
sub
imul
fidivs
jae
std
push
sbb
out
rol
movsb
pop
sub
scas
test
pop
mov
cmp
mov
stos
mov
mov
call
inc
lret
xor
inc
pop
aas
out
into
and
lret
mov
repz
divb
pop
shll
lahf
inc
or
jmp
and
lcall
test
mov
mov
push
jge
pop
sub
inc
mov
leave
stos
mov
mov
push
jg
pop
xor
inc
pop
or
in
or
pop
dec
push
in
lods
push
enter
ror
cwtl
or
mov
xchg
sbb
add
cld
mov
mov
cmp
add
js
sub
inc
push
or
push
fcomi
sub
add
sahf
mov
jmp
xchg
cmp
std
outsl
and
xchg
lahf
pop
int3
fnsave
jp
push
add
es
insb
cmp
out
push
mov
push
push
pusha
xchg
loopne
push
xlat
xchg
and
adc
mov
pop
imul
outsl
dec
xor
xchg
inc
adc
test
notb
int
std
cmp
xor
insl
ret
xchg
mov
or
add
or
cmpsl
mov
xchg
popa
xchg
shlb
in
sbb
stos
in
cltd
dec
lds
lret
repz
into
in
cli
out
mov
ss
push
or
pminsw
push
sti
stos
mov
js
fcomps
mov
adc
xor
pusha
inc
mov
aam
aas
ds
call
js
enter
ficoml
mov
sbb
push
test
pop
mov
mov
sub
adc
pop
push
lcall
jg
jge
call
mov
jb
or
push
sbb
adc
loopne
dec
arpl
movsb
out
xorl
addr16
mov
jnp
sahf
xchg
xchg
cltd
stos
push
pop
add
sahf
mov
fxch
iret
add
push
xchg
loopne
mov
mov
cmc
mov
ret
cld
test
xchg
mov
test
dec
shlb
mov
mov
or
pop
lods
test
xor
insl
cmp
scas
jno
ja
jp
test
lds
jp
out
sbb
lods
int3
push
es
cltd
mov
sbb
fdiv
adc
mov
negl
sti
fidivrs
inc
stc
lea
dec
icebp
loope
sbb
scas
push
ret
xlat
mov
or
cmp
cmpl
mov
aaa
icebp
dec
dec
insb
incl
jns
add
test
mov
push
inc
hlt
loop
xor
xor
cmp
push
jnp
inc
cmp
in
xchg
cltd
pusha
jo
stos
mov
loopne
mov
hlt
adc
inc
inc
push
inc
pushl
ret
psubw
in
movsb
ja
dec
dec
rcll
inc
mov
je
loopne
or
popf
popf
ret
aad
cmp
mov
push
into
fsubrs
int3
fs
jbe
std
aas
and
fs
aam
xor
shlb
or
out
imul
push
xor
or
sbb
fiaddl
sub
mov
call
sahf
or
outsb
jmp
jge
xor
cmp
mov
out
adc
push
dec
xchg
ss
icebp
data16
out
in
dec
repnz
hlt
aas
jl
bound
inc
jg
xlat
sbb
jl
sub
mov
inc
fadds
or
push
in
std
std
repnz
dec
mov
push
es
sbb
jne
mov
test
shl
cmpl
loop
mov
mov
xchg
mov
fwait
push
sub
js
mov
sbb
test
lcall
push
mov
jge
dec
mul
cli
aam
jg
iret
pop
scas
les
inc
add
jmp
idivb
inc
pusha
dec
imul
addr16
movsb
mov
mov
cmp
loope
pop
mov
jmp
adc
push
xchg
push
es
popf
sti
and
push
dec
sbb
mov
or
pop
or
or
iret
push
inc
adc
test
clc
pop
adc
repnz
jns
loope
mov
cmpsb
dec
js
test
stos
xchg
xor
cmp
pop
and
fwait
aas
cmc
insl
inc
popf
clc
cmp
pop
stc
inc
xor
and
int3
repnz
inc
out
add
mov
add
sbb
jno
hlt
hlt
pop
out
add
push
in
push
sub
scas
inc
lods
pop
xchg
dec
or
out
sahf
jns
jb
sbb
dec
aam
push
popa
sub
pop
and
xlat
popf
xor
mov
insl
cmp
mov
sti
outsb
imul
or
jnp
outsb
movsl
into
pushf
shrb
lods
lahf
repnz
mov
cmc
mov
stc
sub
scas
and
lds
and
out
cmpsl
and
and
mov
insb
js
jae
testb
enter
inc
inc
add
scas
das
cltd
aas
lods
cmpl
pusha
shl
mov
je
test
push
pop
sbb
cmc
je
push
pop
jb
dec
pop
adc
sub
jle
fcmovnb
jne
mov
clc
addr16
test
mov
dec
or
mov
sbb
adc
addr16
jb
cmp
pop
adc
jmp
jne
sbb
xor
and
xchg
cmp
cmp
and
imul
mov
stos
adc
mov
or
mov
shrl
xor
xor
mov
jae
inc
insb
mov
cld
xchg
mov
mov
mov
and
imul
pop
lock
enter
and
incl
pop
mov
pop
sbb
call
add
jo
mov
mov
loop
adc
jns
sbbb
dec
xchg
mov
mov
mov
mov
mov
les
lcall
mov
adc
jmp
or
das
push
push
imul
inc
gs
es
mov
pop
sarl
dec
ss
pop
cmpsb
out
cmp
test
or
imul
insb
addb
cmpsb
loope
movsl
js
push
sub
add
mov
fstl
lcall
dec
out
test
movsl
das
pop
cmp
jecxz
lcall
push
enter
sub
and
add
mov
popa
xchg
in
daa
pop
cmp
aam
cmp
mov
sbb
push
pop
push
add
test
mov
jle
test
and
stos
xor
xor
push
jmp
stos
mov
mov
adc
in
cmpb
popf
cmp
pop
sbb
adc
mov
imul
or
fcmovb
xchg
lcall
popl
mov
jmp
cwtl
mov
testl
push
je
push
and
push
push
sub
iret
in
jne
mov
xor
in
sub
cmpb
mov
push
mov
push
hlt
push
or
fsubrl
sbb
dec
lret
xchg
add
movsl
inc
test
int3
xchg
test
mov
psrlw
and
aad
imul
aas
inc
fucomi
lods
pop
stc
adc
mov
push
pop
je,pn
data16
inc
test
add
imul
and
xchg
mov
mov
mov
xchg
pop
lds
rol
and
dec
xchg
jp
ret
sbb
popf
out
xchg
fstl
and
adc
xor
inc
fwait
push
rorb
dec
xchg
jae
pop
xchg
add
push
fsubs
jnp
push
dec
mov
cld
pop
mov
inc
pop
int
inc
ljmp
int3
push
pop
mov
fnstsw
pop
addr16
int3
mov
out
nop
movsl
push
stos
dec
icebp
stos
lods
adc
jno
repnz
icebp
stos
mov
mov
rclb
or
ss
mov
test
adc
je
push
jb
jo
outsl
repz
pop
inc
pop
pop
loopne
outsl
int3
test
fadd
hlt
in
xor
inc
call
sahf
mov
xchg
jae
or
scas
popa
cmpsb
subl
inc
addr16
stos
mov
push
nop
jmp
pop
push
fdiv
repz
jae
fsubl
popf
nop
aam
hlt
imul
lods
enter
test
cmp
enter
mov
std
jns
sbb
push
sub
in
rclb
jae
sbb
jne
mov
pop
int3
sbb
or
push
out
pop
jmp
add
idivb
shll
pop
clc
inc
sti
loop
fiadds
pop
mov
adc
and
add
hlt
push
mov
fwait
dec
vunpckhps
fwait
jne
add
orb
or
inc
mov
fisubs
imul
inc
imul
pop
stos
out
jnp
std
iret
ficomps
pop
outsb
outsl
or
lock
push
sbbb
pop
dec
sub
or
xchg
popf
xchg
outsb
testb
inc
jle
and
mov
cmpl
ror
sti
roll
add
xchg
call
stos
ret
in
sbb
xorl
sbb
jg
lods
das
dec
sub
outsb
push
out
and
pop
add
sar
insl
xchg
insb
mov
push
sub
adc
cld
loop
into
sub
pop
pushl
ds
fdivrs
orb
rcr
test
data16
test
sbb
imul
shlb
sub
dec
loop
fcoms
cmp
pop
pop
jmp
cmpsb
or
adc
je
jne
dec
push
arpl
repnz
mov
sub
lods
imul
mov
xchg
or
mov
cld
test
insb
loopne
sub
xchg
jnp
or
cmpsb
rcl
jp
sub
insl
mov
pop
mov
pop
cs
loope
in
hlt
cmp
in
jecxz
pop
in
mov
cmpb
xlat
imul
loope
xor
je
inc
dec
les
loope
add
ffreep
popf
cmpsb
jge
mov
inc
or
sti
aam
adc
mov
loopne
mov
add
cmp
cmc
push
push
inc
nop
mov
lret
pop
fldl
push
pop
data16
sbb
cmp
cli
push
adc
cmp
and
pop
jno
test
das
arpl
mov
mov
push
rcrb
bound
in
lock
rclb
mov
pop
loope
pushf
lcall
jnp
sbb
out
xor
jbe
add
and
cmp
push
mov
loopne
mov
add
and
add
aam
pop
nop
stc
push
push
fs
idiv
aaa
mov
inc
subl
ja
mov
aam
and
outsb
fs
inc
or
lock
push
popf
or
scas
push
cld
mov
orl
jle
loop
or
scas
enter
mov
icebp
mov
cmp
fisubl
rcl
and
push
stos
sbb
xor
xlat
movb
sub
adc
add
and
dec
jecxz
push
xor
mov
inc
ficomps
in
rcrl
das
test
cmpsb
mov
mov
or
sahf
fistpll
adc
hlt
das
stos
rcrb
aaa
xchg
mov
sbb
fcompl
sub
inc
dec
or
mov
incl
and
test
jl
xchg
ret
jnp
es
arpl
test
add
push
js
loopne
das
adc
mov
jb
and
leave
sub
repnz
push
scas
xchg
or
out
aas
test
sub
aad
push
and
ljmp
cld
push
sbb
sbb
add
inc
xor
test
cli
pop
push
insl
jbe
andl
dec
arpl
ret
xchg
les
dec
xlat
cmpsb
mov
das
pop
imul
inc
ret
jne
sub
or
lods
cmpsb
and
icebp
loopne
rcll
pushf
movsl
jmp
fnstenv
es
mov
adc
pusha
shrb
jns
data16
mov
adc
in
shr
clc
ss
js
scas
loope
scas
pop
leave
dec
mov
in
cmove
sub
adcl
cmpl
and
cmp
pop
fisubs
jnp
in
inc
outsb
ror
jns
mov
addr16
nop
dec
vpunpckhdq
jns
pop
add
dec
ljmp
dec
cs
adc
imul
push
shll
loopne
xchg
popf
loope
int
cmp
subl
inc
jns
fldenv
or
inc
cmpsl
idivl
ds
sub
jecxz
inc
int
rolb
add
sarl
mov
mov
and
mov
les
add
fstps
mov
cs
psubq
pop
repnz
js
mov
imul
es
dec
lods
and
fwait
push
xchg
out
dec
jns
sti
les
sahf
in
test
scas
iret
dec
std
fnstsw
mov
int
or
jae
cmc
les
fs
mov
in
cmp
rorl
imul
inc
bound
inc
aad
sahf
push
aam
sbb
outsl
jns
mov
push
repz
cwtl
xchg
mov
lahf
mov
movsb
jo
in
ret
sbb
cmp
add
mov
cmp
aam
mov
out
int3
lret
mov
faddl
ljmp
sahf
and
cmc
test
xchg
mov
push
jnp
jns
jp
test
mov
or
scas
ret
ds
std
daa
xor
daa
fwait
ja
sub
insb
bound
mov
jo
dec
xchg
sbb
xor
sbb
popf
in
pop
pop
sbb
je
nop
loop
xchg
add
pop
cmp
int3
dec
repnz
push
jbe
pop
adc
and
push
jnp
mov
push
jns
sbb
mov
daa
xor
hlt
pop
dec
mov
sti
out
fcomip
adc
mov
stos
add
ret
andb
lods
pushf
and
imul
cwtl
jle
ds
cmp
loop
daa
xchg
es
sbb
lahf
lret
jb
sti
imul
test
lahf
inc
lods
xchg
push
xor
insb
xor
add
into
testl
into
aad
imul
jne
pop
xchg
outsl
push
aas
push
fsub
cmp
or
mov
aas
pop
cmp
jo
fadds
ret
jns
scas
adc
mov
adc
pop
sbb
xchg
int
xchg
push
sub
iret
in
jae
repnz
lods
jb
mov
add
xchg
sar
repz
mov
push
test
jge
cmp
clc
sti
jnp
push
jb
add
jp
test
xor
add
dec
cli
or
insl
and
jmp
xchg
movsl
leave
push
dec
lret
inc
adc
inc
push
push
mov
xchg
or
mov
lock
or
mov
jmp
jne
jbe
call
sub
in
jg
push
pop
fstl
sub
ret
pop
xchg
outsb
push
xor
aad
mov
daa
sbb
mov
int
ret
js
clc
push
ljmp
addr16
fdivs
test
aas
pop
inc
mov
jmp
je
test
jb
jp
xchg
push
pushf
inc
jnp
or
out
repnz
xor
cmpb
dec
jg,pt
pcmpeqb
popa
pop
test
push
dec
divl
pop
lods
cltd
mov
in
xor
loope
gs
std
cmp
test
xor
shr
mov
pop
add
in
mov
std
and
mov
mov
stc
rol
int
cli
bound
addl
repnz
push
inc
clc
dec
sbb
in
mov
adc
jg
cmpl
mov
in
rcrl
insb
mov
xor
mov
mov
lea
sub
cmp
pop
loop
mov
je
pop
roll
out
in
into
jno
js
aad
cmp
ret
or
push
mov
or
pop
lods
mov
xchg
or
xchg
xlat
sub
call
mov
or
dec
mov
xlat
jmp
out
leave
pop
push
or
cmp
or
lret
xlat
and
or
imul
and
jmp
dec
sbb
sbb
mov
sub
dec
push
inc
mov
imul
mov
push
push
push
xchg
sub
or
popa
dec
add
jecxz
lret
fmuls
cmpsl
and
rcrl
dec
mov
mov
dec
loopne
aad
jns
inc
out
sub
inc
std
sbb
dec
xor
jnp
iret
rorl
outsl
ss
sub
and
or
loope
std
mov
push
mov
mov
dec
jmp
shlb
mov
mov
mov
inc
pop
mov
push
mov
add
adc
sti
jl
lret
mov
jne
jp
pop
pop
and
xor
cli
sub
ss
in
testl
fistpll
xchg
aaa
mov
jne
enter
xchg
add
shrl
ss
mov
mov
test
cmpsb
mov
pop
cmp
mov
dec
dec
pop
cs
cmp
and
mov
mov
or
lret
jl
ss
mov
mov
sti
mov
rorb
pop
sub
adc
leave
pop
idivb
xor
in
adcl
mov
into
pop
mov
adc
loopne
dec
mov
ja
in
pop
ja
sub
mov
ffree
aas
data16
inc
xchg
lret
cmc
or
xchg
dec
jb
xor
xchg
fidivs
xchg
mov
mov
cmp
enter
xorl
mov
ja
sbb
aas
push
inc
divb
xchg
lods
test
mov
shll
lcall
dec
inc
mov
outsl
pop
adc
push
test
inc
rorl
negb
mov
iret
mov
pop
sub
lds
cli
fadds
sbb
dec
outsb
sub
shrb
sub
xchg
sub
mov
sti
jl
divl
mov
sub
sbb
jne
jns
scas
xor
out
inc
out
insl
iret
aam
mov
and
int3
xchg
push
mov
movsb
xchg
iret
cmpl
inc
test
shlb
or
and
push
push
out
es
and
scas
outsb
mov
inc
scas
imul
test
out
xchg
enter
push
xchg
push
scas
xchg
loop
mov
inc
rcrb
into
imul
adc
aaa
je
pop
inc
adc
iret
xchg
mov
fwait
sub
cmp
inc
out
mov
pop
dec
es
and
mov
test
jge
pop
jecxz
addr16
lea
pop
lahf
and
int
adc
sub
pop
inc
aam
ret
cmp
jnp
mov
mov
jmp
mov
and
sbb
pop
jnp
pushl
dec
pop
xor
fdivs
mov
mov
xchg
mov
loop
mov
arpl
bound
shll
aaa
xchg
addl
jmp
repz
sub
into
xchg
mov
fldt
mov
flds
shrl
clc
and
cmpsl
cmpsl
imul
fldt
ret
clc
fidivl
enter
in
outsl
out
repnz
mov
lods
or
repz
jne
or
cmpb
cli
stc
lods
jo
test
mov
rolb
scas
fabs
sti
popl
imul
les
xchg
dec
mov
fisubs
repz
push
sbbb
sbb
push
das
push
mov
jb
fucom
nop
test
ljmp
pop
and
mov
inc
xchg
imul
and
outsb
test
push
inc
jge
mov
int3
xchg
push
mov
movsl
and
and
in
cmc
mov
arpl
jmp
test
mov
addr16
mov
fsubs
cmp
dec
mull
pop
mov
xor
inc
nop
mov
inc
jno
mov
int
fidivrl
pop
dec
cmp
pop
cmp
sbb
ret
xor
or
push
adc
fstpl
shll
xor
jb
test
mov
mov
nop
mov
in
lret
add
out
pop
mov
or
pop
inc
pop
loop
das
bound
hlt
mov
xor
mov
fiadds
cltd
sbb
push
js
dec
mov
mov
mov
mov
cmpsb
jb
fisubrs
frstor
fimuls
mov
testb
pop
lock
sub
lods
repz
inc
jge
mov
js
jp
push
leave
daa
ss
mov
jp
gs
ja
ficompl
pop
insl
int3
and
push
mov
in
cmp
lods
aad
int
lods
mov
mov
xlat
xchg
mov
inc
or
loope
mov
mov
lods
js
push
dec
jg
or
jb
xor
dec
cmp
mov
dec
jge
gs
cld
pop
mov
or
mov
jmp
sub
jp
adc
pop
adc
mov
mov
inc
dec
imul
repz
in
pop
test
mov
dec
dec
jb
lret
adc
loope
sahf
lret
loope
outsb
fisubrs
test
push
filds
loopne
inc
mov
test
sbb
les
lret
push
inc
es
aaa
lds
mov
dec
and
dec
pop
sub
dec
add
out
movsl
or
sub
lret
push
adc
xchg
in
call
mov
push
fsubl
stos
fdivr
dec
popa
shl
mov
adc
je
cmc
mov
jle
fbstp
subl
mov
pop
dec
jo
jl
jl
mov
lcall
xchg
jnp
pop
into
sbb
bound
push
cld
imul
jns
mov
out
andl
cmp
fwait
dec
pop
mov
sub
sbb
jne
inc
xor
xchg
gs
xlat
sub
pop
sbb
inc
sbb
in
ja
mov
loop
test
incl
test
add
aam
test
xchg
sub
or
adc
push
mov
adc
arpl
movsb
adc
out
inc
mov
dec
mov
imul
mov
dec
loop
scas
iret
mov
adc
inc
mov
aam
mov
cmp
jns
daa
cltd
fildll
sbb
dec
xchg
clc
int
out
pop
dec
adc
mov
jae
int3
in
add
sbb
or
repz
or
inc
mov
or
jecxz
mov
inc
push
push
mov
add
fwait
scas
insl
and
loope
mov
repz
dec
pop
xchg
sbb
call
push
sub
loopne
sub
popa
bnd
fdivrl
sbb
push
jp
movb
aaa
dec
inc
shl
ds
inc
stc
mov
das
fdivrs
shr
add
popf
repz
lcall
fidivrl
mov
inc
push
sbb
inc
pop
push
mov
mov
adc
adc
add
or
mov
sti
cmp
mov
fwait
arpl
lds
int
sarb
inc
in
test
cmp
add
lret
cld
push
add
aas
inc
bound
test
jmp
loopne
cmp
mov
push
lcall
fwait
pop
cmp
dec
push
push
sub
es
push
mov
and
mov
jnp
inc
test
and
pushf
popa
js
aas
jp
jns
enter
jle
inc
or
fisubl
sbb
mov
push
sbb
test
into
sub
xlat
loopne
pop
sbb
dec
out
popf
es
int
out
cmp
aad
daa
mov
lods
cwtl
dec
jge
lock
es
jge
mov
int3
jae
push
ja
jl
es
clc
jbe
adc
out
mov
jl
cmp
inc
dec
rcll
sub
xor
outsl
shr
adc
and
mov
fsubl
push
mov
adc
adcb
pop
notl
inc
cmpsb
push
mov
inc
in
insl
adc
pop
mov
in
stos
push
dec
in
jb
push
adc
inc
fcoms
sbb
mov
xchg
xchg
xchg
jnp
loop
mov
sar
push
repz
pop
leave
mov
std
push
rcll
outsl
sub
fucomp
and
into
shlb
lahf
outsl
lods
loopne
mov
in
daa
dec
scas
insl
cmp
lods
cld
std
ret
sub
andb
lret
cltd
jmp
das
push
inc
pusha
lods
clc
mov
fnstsw
stc
stc
cwtl
pop
dec
dec
sub
call
leave
xchg
sbb
mov
jno
pop
int3
dec
outsl
add
sbb
mov
scas
lcall
xrelease
insl
jae
or
mov
push
jne
mov
pop
dec
or
inc
pushf
mov
mov
add
adc
mov
push
xchg
ss
mov
rolb
enter
push
mov
push
jae
aad
jae
add
sbb
ficoms
mov
sub
cmpsl
adc
jne
pop
bound
mov
scas
iret
sub
cltd
mov
outsb
jp
sbb
pop
fcom
sub
fwait
into
fistps
sbb
mov
lahf
xchg
rcrl
mov
dec
sbb
aam
pop
pop
in
sbb
out
adcl
std
mov
add
mov
out
add
ja
mov
add
cld
pop
adc
movsl
in
pop
arpl
sti
dec
mov
ja
mov
inc
mov
pop
aas
dec
cmp
sbb
lea
inc
andl
roll
and
inc
adc
movsb
sbb
and
sti
adc
rep
and
inc
subb
mov
or
cmp
loope
scas
jmp
xchg
imul
lcall
div
clc
mov
cltd
push
out
adc
inc
jle
dec
jge
cli
fcmovnbe
add
mov
adc
dec
loop
sbb
icebp
repnz
mov
pop
cmp
push
jecxz
std
push
push
mov
jo
aad
mov
test
les
push
bound
cmp
push
ret
mov
pusha
enter
sahf
adc
or
movsl
jno
and
xor
sub
and
pop
call
daa
gs
mov
outsl
call
bound
or
aad
mov
sahf
mov
in
push
movsl
lcall
lea
mov
mov
nop
lret
mov
test
lock
push
cld
xchg
inc
xchg
test
imul
lcall
pop
repnz
sub
mov
sbb
and
je
js
push
sub
and
xor
pop
xchg
sbb
sbb
mov
or
sbbb
or
aad
test
test
jo
sbb
test
push
mov
xchg
mov
subb
push
jnp
test
cmpl
js
insl
dec
arpl
subb
mov
int
or
mov
test
gs
mov
fldcw
lock
scas
push
xchg
test
sub
js
test
aad
ds
cmp
inc
aam
jb
out
and
out
mov
imul
cmpsb
mov
inc
xchg
push
mov
sub
adc
fcomip
adc
mov
test
lcall
aam
aaa
popf
xor
test
add
rcrl
iret
xor
sub
mov
daa
jnp
test
push
sti
cmp
xchg
cmp
sub
mov
mov
mov
push
inc
dec
std
ds
out
aad
sbb
cmp
repz
mov
jb
movsl
insb
fildll
pop
shlb
push
add
xchg
movsb
lock
pop
jecxz
mov
mov
mov
push
fnsave
sbb
movsb
lods
subl
pop
xchg
pop
inc
lcall
fcomi
pop
in
jl
sbbb
fldt
pop
popf
xor
cs
call
mov
outsl
pop
andl
mov
iret
rcrl
test
adc
lds
testl
xchg
call
rclb
test
push
adc
dec
sbb
sahf
jmp
fisttpl
adc
sti
clc
jae
add
adc
cmp
ljmp
insl
mov
inc
mov
jmp
fcmovnb
lods
jns
and
add
adc
sbb
inc
mov
sub
outsb
or
mov
aad
push
aas
push
ret
movsl
push
cmp
loope
sbb
sub
push
inc
xchg
adc
stc
or
cmp
insl
sub
jl
ds
mov
nop
pop
and
jle
subb
or
push
pop
clc
sahf
xchg
mov
repz
packuswb
addb
jecxz
test
jnp
sub
scas
and
jmp
and
push
out
sub
scas
push
push
adc
push
mov
inc
or
and
inc
clc
je
mov
int3
jno
sti
mov
pop
sub
adc
ffreep
dec
xchg
or
repz
ret
dec
mov
xchg
mov
jg
pop
into
outsl
inc
int
jne
mov
lods
ficoms
imul
sub
imul
jbe
stos
test
mov
aaa
cmp
sub
lcall
pusha
mov
or
jno
sbb
into
mov
inc
fisubrl
cmp
sahf
rcrb
and
push
sub
test
cmpb
pop
rorl
ror
sti
in
jge
cmp
xor
pop
popl
sahf
lcallw
imul
insl
test
push
cltd
sbbl
cmp
lods
fadds
push
mov
or
repz
hlt
test
dec
sbb
dec
fwait
fwait
mov
mov
add
pop
add
jo
arpl
movsl
or
push
mov
mov
mov
push
stos
xlat
cwtl
sbb
cmp
pop
shl
loopne
or
dec
icebp
push
pop
xchg
fidivrs
notb
cmc
adc
jle
out
pop
jae
push
mov
or
lods
xlat
jo
roll
lea
in
inc
xchg
add
insb
enter
fwait
data16
hlt
dec
fdiv
ret
pop
xor
inc
fstpl
or
arpl
leave
imul
lock
js
cmp
js
ret
jge
or
push
cmp
pop
shl
add
jb
mov
xor
mov
rcr
int
decl
aaa
cli
pop
push
sbb
add
stos
cltd
push
jl
sarl
inc
out
jnp
jnp
fcmovnu
cmpsl
in
icebp
sub
dec
mov
dec
cld
sbb
leave
popf
push
lahf
xchg
add
add
stos
sub
xchg
outsl
in
mov
call
cmp
out
and
jg
or
icebp
sub
jmp
lock
stc
dec
mov
loop
cmp
sbb
cld
or
mov
push
pop
cmpsl
jmp
cltd
in
fsubrl
pop
gs
shlb
popf
push
popa
pop
les
jnp
jo
xchg
inc
iret
es
xchg
xchg
sbb
out
ja
addr16
std
pop
out
aam
cmpb
arpl
pop
outsb
mov
orb
mov
inc
pop
mov
adc
add
sarb
sbbl
in
mov
dec
aad
xor
mov
jg
int
dec
movsl
in
rol
mov
int
mov
jmp
pop
out
in
or
mov
test
dec
and
add
sbb
test
ja
fs
lea
notb
xor
std
imul
mov
dec
and
mov
and
push
inc
push
xor
repnz
lea
dec
scas
stos
das
dec
jmp
xorl
xor
dec
adc
cmp
sti
add
stos
cli
fmulp
aas
lret
add
ffree
daa
mov
stos
dec
js
pop
inc
ficoml
pop
es
ror
out
push
leave
cmpsl
insb
dec
or
cs
and
cwtl
inc
pop
es
mov
pusha
fisubl
jp
out
aad
xchg
fdivrl
dec
out
xchg
loope
cmpsl
pusha
adc
imul
mov
sbb
mov
mov
xchg
lds
or
mov
jns
xchg
fisubrs
nop
in
rorl
idivl
orl
or
aas
jne
inc
shll
jbe
xor
inc
enter
insl
cmp
fnstcw
stos
mov
ja
repnz
adc
adc
xchg
push
ret
push
mov
add
sub
orb
push
mov
sbb
push
jle
push
inc
lahf
std
arpl
outsb
bound
push
add
adc
pusha
adcl
sbb
mov
popa
rol
mov
dec
mov
int
or
popa
pop
add
sub
cmp
fstpt
xor
ljmp
sbb
pop
pusha
aas
cwtl
sub
sbbb
call
push
push
mov
or
lahf
loopne
push
push
mov
cmp
fcompl
cmp
jne
lret
cli
aam
sub
cwtl
push
lcall
pop
mov
in
xchg
outsb
shrl
stos
mov
xor
shlb
fisttps
fdecstp
int3
cld
push
lods
cltd
or
pop
inc
push
imul
outsb
jno
call
test
push
inc
dec
jmp
dec
cmp
push
mov
adc
lret
imul
movsb
es
push
mov
push
xor
cmp
mov
rep
cmpsl
aad
shrb
inc
lahf
scas
fisttpll
imul
lret
outsl
rcrb
mov
mov
jp
pusha
xchg
pop
push
xor
jmp
pop
dec
ss
and
pop
pop
cmpsb
in
repz
cmpsl
out
cmc
addl
mov
or
popa
sbb
es
add
sub
mov
xor
popf
inc
fdiv
cld
mov
jae
mov
mov
mov
insl
fs
es
arpl
pop
scas
lea
rorb
mov
lret
aam
jnp
xchg
fwait
xchg
in
add
add
mov
xor
aaa
sub
ret
lods
pop
pop
out
in
loop
sahf
dec
insl
cmp
sub
add
mov
xchg
mov
scas
cmp
jo
fs
cld
clc
inc
es
dec
push
xchg
jae
mov
mov
leave
adc
cmp
cmc
adc
cli
push
sub
and
xor
adc
out
push
decl
mov
sub
mov
and
cmp
lret
mov
adc
out
and
les
and
cmpsl
xchg
pop
xchg
push
ret
shl
shlb
sbb
inc
pop
shrl
inc
mov
adc
xor
mov
aad
dec
push
stc
push
mov
jp
or
mov
lods
mov
lahf
mov
pushl
mov
push
pop
in
add
cmpb
movsl
in
pop
cmp
mov
inc
jno
mov
movsl
lahf
add
jae
mov
addr16
adc
jge
add
aaa
cmp
out
or
adc
sbb
mov
pop
jb
gs
test
push
push
push
cmpsl
lea
jecxz
push
addr16
mov
sbbl
sbbb
xor
mov
cs
adc
xchg
xchg
or
cmpsl
insl
adc
jmp
pop
pop
xor
lock
mov
gs
mov
sub
imul
mov
inc
repz
and
ficoml
mov
pushf
addr16
ljmp
fadd
cmp
mov
xchg
mov
imul
js
pop
or
adc
fsts
call
test
jecxz
shrb
lods
mov
add
addr16
inc
lret
jne
aaa
iret
push
mov
dec
mov
mov
dec
cmpsl
lret
in
mov
movl
in
lret
add
push
xchg
or
fadd
in
fistpll
cmp
pop
jo
jg
xor
cmpsl
pop
mov
push
cmc
cmp
xor
mov
in
mov
shlb
xlat
mov
jmp
push
or
push
push
jmp
dec
aad
jae
push
mov
movsb
repnz
xor
imull
sarb
lret
shr
pop
pop
cmpsb
adcb
pushf
dec
dec
pop
jmp
jp
jmp
sub
dec
mov
mov
adc
dec
ljmp
mov
or
icebp
jae
mov
lock
test
rcrl
or
imul
negl
rclb
pop
mov
jge
adc
test
xchg
fxch
and
mov
loope
dec
out
pop
es
pop
popa
insl
sbb
add
and
ret
sub
dec
ljmp
pop
sbb
movsb
gs
in
jle
inc
mov
mov
cmpsb
mov
mov
mov
loop
dec
inc
mov
sub
pop
mov
push
pop
push
iret
mov
mov
dec
and
mov
test
fucomi
xchg
dec
out
add
rcrb
jbe
and
cmp
push
sbb
movsb
xor
push
push
jnp
inc
pop
or
or
fidivs
push
add
aas
sub
jno
sbb
xchg
or
xchg
andl
sbb
call
mov
mov
shrb
xor
xor
js
add
cltd
xchg
int3
packssdw
or
sbb
fisubl
pop
mov
iret
mov
mov
push
sbb
dec
out
inc
pop
cmp
popf
bound
ret
fs
dec
mov
ja
in
mul
push
jns
inc
mov
and
std
push
and
test
fcoms
sbb
in
pusha
pop
or
cmpsl
addb
lods
cld
pusha
add
iret
xchg
dec
pop
or
jns
iret
pop
dec
jmp
pop
cmpsb
hlt
xchg
orl
sbb
fnsave
sub
sub
and
shl
lret
mov
mov
push
cltd
cmp
and
lcall
mov
or
mov
cwtl
arpl
cmp
dec
mov
jne
mov
or
sbb
inc
cmc
jne
inc
adc
mov
movsl
test
pop
and
mov
sbb
mov
ret
pop
mov
lods
loope
leave
jo
popa
out
xchg
fldcw
fldcw
mov
mov
pop
mov
cmp
movsb
mov
mov
popf
or
push
push
mov
mov
adc
xchg
sbb
sbb
outsb
gs
int
repnz
aam
aaa
fdiv
jecxz
pop
or
outsl
test
fs
ljmp
jmp
repnz
fldcw
out
repz
mov
out
xor
sarb
cmc
add
pop
push
xlat
and
das
jmp
and
mov
mov
lods
lcall
jb,pt
icebp
cmpl
inc
lahf
push
fucom
fistps
leave
mov
jo
pusha
xor
xor
xchg
sub
xchg
repz
adc
mov
es
ret
test
dec
sub
mov
js
decl
inc
jmp
mov
dec
inc
mov
inc
pop
fistl
aas
xchg
fmul
or
outsl
movsb
dec
pushf
jg
das
les
fs
jmp
ficompl
mov
lock
fsub
add
std
cmpsb
xchg
lahf
sbb
in
inc
jle
or
adc
cmp
push
dec
cmp
cwtl
xchg
fdivl
lock
or
or
js
push
dec
adc
adc
push
inc
mov
jg
repnz
adc
xchg
mov
xchg
mov
mov
mov
dec
and
pop
test
stos
sub
dec
lods
inc
adc
scas
aas
sbbb
das
cli
rolb
movsl
stc
dec
stos
negb
flds
icebp
mov
mov
and
ljmp
adc
inc
mov
addb
pop
into
lods
sahf
xor
cmpsb
les
sub
sub
mov
orb
dec
mov
or
mov
ret
and
lock
lcall
and
bound
jnp
dec
cli
popa
roll
dec
adc
jae
sbb
pop
mov
ljmp
pop
or
out
jge
hlt
fisubrs
mov
insl
cmp
pop
daa
mov
das
or
popf
add
mov
fsubr
in
ds
ja
lret
testb
pop
outsl
jne
lods
shlb
movsb
sub
or
test
cli
sub
xchg
dec
lret
add
hlt
add
mov
push
add
sbb
mov
scas
cmp
jno
lret
jecxz
or
aaa
sbb
add
inc
or
xchg
pop
insl
cmp
frstor
cmp
jle
into
aaa
or
jne
cli
jg
lods
cld
subb
mov
mov
xchg
test
sub
sbb
jae
sub
adc
mov
outsl
dec
repnz
cmp
inc
xor
xchg
mov
lods
jmp
sahf
jg
or
pusha
test
pop
pusha
push
repnz
cmp
inc
shll
mov
sarl
add
and
mov
scas
mov
bound
lods
cltd
mov
imul
imul
or
xchg
shl
cmpsb
push
xchg
outsl
mov
xchg
dec
shrb
lcall
nop
pop
cmpsb
sbb
int3
adc
cmp
lret
mov
movsl
sar
hlt
adcb
xchg
lahf
and
cmpsl
push
mov
data16
cmpsb
stos
pop
sub
pushf
popa
mov
cmc
mov
movsl
fnstcw
loope
int
sbb
or
inc
dec
enter
add
cmp
fbld
sbb
inc
xchg
stos
adc
cmpb
xor
sahf
sbb
push
sub
nop
sub
adc
mov
out
jne
test
lret
addl
aam
shlb
stos
mov
ja
and
lret
divb
jge
adcl
or
cmp
inc
adc
cmpsl
lret
faddl
pop
adc
lcall
mov
jns
push
cmpsl
mov
popf
jnp
push
test
fisubrs
sbb
cmp
incl
pusha
iret
sbb
int3
testl
scas
mov
sub
sub
es
imul
jle
js
and
xor
es
in
and
or
aas
xchg
inc
pop
or
mov
jg
jle
sub
test
sarb
test
fs
popf
push
es
out
sub
xchg
mov
sub
inc
shl
jle
sahf
cmp
lock
ret
pushf
mov
mov
dec
movsb
call
or
jge
outsb
xchg
mov
mov
xchg
popf
ret
subl
inc
decb
pop
rcrb
xlat
adc
fs
sbb
ljmp
sti
and
jle
mov
mov
pop
xchg
cmp
rep
in
jmp
int
xchg
ret
mov
loope
imul
mov
mov
fsubrs
sahf
ljmp
lea
outsl
imul
dec
or
cltd
xchg
sbb
imul
mov
inc
cmc
and
or
push
int3
repnz
pop
out
adc
xchg
sti
loopne
pushf
add
lcall
test
scas
mov
stc
ja
pop
push
ljmp
mov
add
aaa
adcb
insb
mov
xor
lret
fimull
mov
fldenv
ljmp
xor
stc
add
inc
push
mov
lcall
adc
sub
xchg
shrl
punpckhdq
mov
nop
cwtl
adc
jge
xor
ficomps
loopne
in
cmp
xor
xor
xor
mov
cld
pop
test
test
mov
push
insl
scas
ret
inc
xchg
pop
lret
arpl
ljmp
lahf
mov
mov
neg
test
inc
sbb
repz
sbb
adc
xchg
pop
das
arpl
mov
push
add
lret
lret
outsl
lcall
ret
ds
mov
insl
jge
or
mov
ds
push
in
xchg
insb
fidivrl
hlt
or
mov
out
stc
daa
int
inc
or
cmp
mov
pop
scas
fs
xor
xor
mov
xor
dec
sbb
bound
popf
out
xchg
jo
inc
push
inc
mov
shrl
inc
scas
cmpb
jmp
pop
aas
or
push
inc
cld
adcb
push
clc
xchg
jno
jae
pop
minps
cmpsb
inc
and
dec
push
inc
nop
and
into
dec
outsb
push
popa
insb
mov
lret
push
lea
shl
inc
repnz
js
sub
dec
fwait
hlt
mov
les
mov
push
aad
fiaddl
les
pop
es
pop
std
push
repnz
insl
xchg
out
pop
add
push
movsl
mov
cmp
xor
clc
jle
xlat
in
cmp
enter
arpl
add
mov
dec
xchg
pop
aas
jp
fwait
in
pop
ltr
sub
inc
aaa
test
pusha
pop
push
sahf
pop
sub
pcmpeqd
mov
push
adc
inc
mov
cmpsb
and
jg
outsl
add
push
add
jle
pop
loope
dec
adc
inc
push
insb
cmp
daa
out
sub
or
lds
clc
popa
pop
cmc
pop
idivb
outsb
mov
xlat
mov
sbb
xchg
jo
mov
push
or
jl
ds
loopne
popf
shrb
dec
adc
mov
sahf
and
fidivs
outsb
sbb
sbb
mov
sbb
and
jg
fstl
sbb
push
into
pop
xchg
add
in
sti
aam
add
xor
inc
scas
pop
out
adc
cmp
xchg
and
inc
stc
es
lret
cs
xchg
mov
jne
cwtl
bound
push
xchg
inc
fnstcw
and
xorb
out
xor
push
add
xchg
iret
gs
fcmovnb
mov
push
in
push
out
push
adc
push
inc
adc
add
aad
int
or
xchg
add
adc
lods
and
mov
clc
pop
xchg
sbb
mov
mov
jmp
push
xchg
cmp
data16
daa
xor
dec
loope
pop
addr16
push
pop
movsb
mov
ja
xchg
sub
jne
sub
xchg
add
in
pushl
push
fsubl
sbb
scas
xor
mov
cmc
cmpb
adcl
push
sub
xchg
mov
push
out
mov
test
xor
mov
dec
orb
push
inc
push
add
jg
jb
or
lahf
fstpt
fs
insl
mov
sti
aad
test
das
xor
pop
add
push
repz
test
ficomps
push
addr16
push
sbb
aas
jns
loop
mov
mov
dec
call
sarl
rcr
aas
mov
push
jmp
imull
pushf
lcall
lcall
out
inc
repnz
test
xchg
pop
sbb
incb
push
mov
scas
mov
es
jp
adc
shlb
push
popa
orb
hlt
pop
js
ret
das
jle
mov
xchg
cmp
cltd
psllq
inc
pop
pop
ret
cmp
daa
xor
push
xor
mov
jbe
add
dec
xchg
das
mov
pop
push
int
aaa
ds
cmp
or
das
jecxz
inc
lds
pop
jmp
cld
out
in
outsl
push
sub
jle
sub
jecxz
inc
sti
mov
test
adc
pop
pusha
dec
jbe
dec
jl
std
sbb
mov
mov
orl
in
xchg
lret
test
and
add
push
sub
rcrl
xor
in
inc
mov
mov
aas
mov
int3
scas
test
pop
lods
repnz
or
test
mov
pop
in
outsb
push
add
aaa
fucomip
lock
sub
xchg
dec
out
xor
mov
xlat
push
xor
repnz
je
repz
pop
into
dec
or
cmp
push
cmpsl
pop
clc
shrb
and
lcall
in
jcxz
hlt
std
xchg
sbb
and
xchg
test
adc
insl
into
rolb
les
lds
and
js
stos
fwait
into
pop
movntq
fld1
inc
imul
sahf
xchg
jae
inc
cmp
inc
enter
and
jo
loope
jb
xchg
xchg
es
mov
sub
test
int
jmp
daa
jno
or
mov
dec
fiadds
loopne
cwtl
xorl
push
mov
in
fistl
push
call
cmp
cmp
sbb
jge
cmp
aas
mov
data16
filds
and
jmp
lret
mov
shl
imulb
nop
push
mov
sbb
pop
adc
inc
adc
sub
lret
insb
cmp
mull
aam
rclb
leave
iret
adc
fmuls
or
lret
sub
test
jb
mov
add
in
xchg
decl
arpl
sarl
xor
lar
je
mov
or
lahf
leave
es
jmp
xor
mov
sub
pop
mov
inc
sarb
and
pop
inc
in
into
xchg
neg
mov
pusha
enter
pop
enter
xlat
xchg
shlb
cmpb
mov
mov
call
dec
fmull
fidivrs
aaa
pusha
in
clc
push
cltd
repz
push
clc
lock
cmp
and
or
xor
cmp
rclb
dec
addr16
adc
notb
sub
loop
push
push
inc
sub
dec
cmpl
xlat
lods
clc
jno
push
jmp
fdiv
xor
sahf
mov
dec
inc
ficomps
sar
push
insl
push
cmc
repnz
leave
sbb
cmp
dec
fcoml
mov
jmp
outsl
jne
fstp
cmpsb
mov
inc
dec
mov
shlb
in
or
fsts
and
test
shrl
xchg
pop
ds
jno
and
cli
jb
xchg
pop
or
int3
sub
push
and
in
call
cmp
imul
sbb
fs
inc
jle
lods
jb
dec
add
stc
and
push
clc
inc
mov
dec
push
and
and
stos
cmp
fnstenv
push
inc
jle
push
sub
scas
and
call
jbe
shrb
xchg
inc
xlat
dec
mov
push
mov
cmp
es
push
das
movsb
cwtl
fcoms
aaa
jp
divl
movsl
push
movsb
sbb
lcall
mov
sub
fnstsw
mov
std
xor
cwtl
xchg
pop
sti
das
jge
xor
xchg
mov
dec
pop
ss
inc
jb
jnp
mov
icebp
pop
push
push
add
shlb
or
inc
je
loop
push
and
daa
mov
xor
push
dec
shll
jmp
inc
or
jbe
aad
or
and
xchg
ljmp
fwait
cli
dec
xchg
lret
jno
shl
or
nop
push
mov
and
cwtl
sub
ficompl
and
lahf
ret
or
fmulp
xor
ret
in
outsl
sbb
jae
ljmp
mov
xchg
fsubrl
add
ficoms
call
ja
cwtl
pop
shlb
inc
mov
repnz
insb
or
loop
xchg
ret
dec
push
xor
add
jae
test
test
stc
out
pop
into
in
lock
stos
dec
lcall
mov
out
add
ror
cmpsb
xor
dec
jno
xchg
fisttpll
sahf
arpl
sbb
mov
cs
dec
and
inc
cmpsl
adc
bound
std
mov
and
fcompl
fdivrl
push
jmp
sub
stos
sbb
jle
jmp
jp
xchg
ret
adc
sub
lret
or
pop
cmpsl
cli
in
cmp
inc
mov
pop
cld
add
dec
ss
push
testl
xor
dec
mov
push
pop
fmull
mov
mov
rcrl
xchg
aad
sarb
fiadds
nop
sbb
push
mulb
scas
into
cmp
mov
gs
push
adc
les
cmp
sbb
lahf
pop
lret
addr16
leave
mov
test
movsb
sub
aas
pop
adc
test
cmpsb
xlat
jb
mov
aaa
fisubl
inc
lret
mov
out
mov
cld
sbb
ret
testl
inc
ljmp
ljmp
ficoms
jge
mov
stos
clc
add
xor
inc
jle
jbe
lock
ja
mov
or
fistpl
repnz
fs
cmp
test
pop
push
xchg
lods
mov
std
std
and
sbb
int3
pop
mov
or
mov
loop
rol
dec
or
mov
int
cli
lret
cmp
or
mov
mov
jge
daa
popf
fsubr
lods
mov
test
pusha
dec
stos
mov
repnz
popa
mov
dec
sahf
push
sbb
sub
notb
dec
adcb
push
out
pushf
daa
pop
mov
pop
test
xor
xchg
jle
add
jecxz
roll
insl
xor
lock
jae
cltd
ljmp
les
fs
mov
sahf
jno
sub
xchg
pop
enter
cmp
adc
hlt
imul
inc
mov
adc
scas
xchg
mov
rcrb
mov
fsubs
into
in
dec
xor
lea
inc
and
dec
xchg
sar
mov
mov
adc
stos
jg
mov
imul
lock
mov
pop
push
cmpsb
sbb
jg
push
push
loop
pop
inc
mov
xor
xchg
outsl
or
lcall
daa
push
cmc
std
jb
xorb
in
je
pop
xchg
sub
pusha
jle
and
jbe
int
pushf
popf
jl
cmp
hlt
jae
xor
xchg
sahf
out
push
fisttpl
cltd
std
mov
sub
mov
divl
fldl
lea
frstor
or
movb
stos
xor
mov
cmp
or
leavew
loop
jae
pop
aas
xchg
movsl
outsl
xchg
addr16
add
dec
aam
sbb
inc
bound
pop
addr16
into
sti
dec
jle
lret
dec
jne,pn
fnsave
lods
pop
mov
scas
test
mov
inc
jno
push
orb
arpl
xor
cmp
pop
push
cmc
or
xchg
sar
cmp
pop
pop
nop
inc
adc
pop
xorb
mov
ss
sbb
cmp
adc
cltd
lods
cmpsl
or
add
rep
lds
jecxz
xchg
lcall
call
fwait
popf
push
std
xchg
mov
mov
inc
ret
repnz
push
xor
dec
push
xchg
adc
pushf
jecxz
loope
mov
fpatan
mov
icebp
daa
ret
sub
repz
push
roll
xchg
fcmovnb
add
lds
cmp
xchg
adc
cmp
xchg
movsl
jo
mov
dec
insl
mov
insl
or
pop
jnp
xor
cmc
clc
mov
pop
push
nop
daa
aam
ljmp
decb
push
xchg
xor
bound
icebp
mov
or
sbb
mov
xor
mov
or
push
mov
aas
es
mov
rorl
add
or
push
cltd
mov
cli
pop
xor
pop
mov
addr16
or
enter
rcl
fildll
out
cmc
inc
cmp
movsl
pushf
dec
pop
cmp
fsubrl
and
popa
aam
and
js
adc
pop
and
sahf
add
cmp
push
dec
dec
repz
xchg
push
xor
imul
imull
push
fistps
fidivl
in
mov
scas
jns
in
xchg
jnp
imul
jp
mov
div
mov
sub
xor
jb
and
or
push
add
iret
adcb
pop
cs
or
adc
inc
mov
repz
js
sbb
call
fcomps
mov
sbb
mov
fstps
popf
adc
shlb
push
or
sti
orl
stos
bound
add
sub
pop
enter
dec
lds
add
lahf
mov
movsb
mov
sbb
loop
lcall
xchg
stc
div
cmp
dec
in
in
fcompl
rcrl
pop
jmp
lods
in
xchg
push
scas
pop
movsl
add
int3
sbb
mov
dec
xchg
dec
mov
pop
sbb
enter
xor
sub
movsb
and
xor
popf
call
aaa
mov
subl
dec
mov
mov
lret
and
cmpsb
lock
adc
div
adc
sub
clc
adc
inc
test
xchg
xchg
cmpsl
lcall
mov
and
mov
mov
sbb
stc
shll
int3
mov
and
gs
pop
push
lret
jno
fwait
lea
mov
push
std
jle
fstpt
in
inc
mov
xchg
out
and
mov
mov
loope
lret
outsl
dec
and
scas
and
out
leave
pusha
push
xchg
lret
jo
dec
aad
cs
jle
sbb
adcb
scas
lock
lret
es
sbb
adc
mov
adc
fidivrl
inc
or
imul
stos
mov
jns
aas
cmp
outsl
and
dec
arpl
jo
sub
xchg
mov
rcrb
enter
aad
fildl
cmpsl
sbb
push
xchg
ljmp
jmp
or
mov
testl
into
out
mov
mov
fcmovbe
and
inc
bound
pop
ss
sbb
pop
lods
fsubl
inc
fstpt
or
loopne
pop
pop
push
sbb
aas
inc
lahf
mov
cmpsl
or
das
negb
into
rcrb
and
inc
leave
fcomp
xchg
mov
sbb
mov
shrb
cmc
push
es
mov
mov
jns
gs
cld
mov
inc
pushf
jp
and
loope
leave
js
jo
test
fidivrl
int3
lods
xchg
and
mov
in
mov
lret
cli
inc
rolb
sti
ret
or
inc
lods
movsl
dec
xor
mov
aam
xchg
mov
sar
adc
daa
cmc
jg
mov
out
fnstcw
dec
dec
loope
jmp
dec
inc
xor
push
fadd
jle
mov
addl
sub
push
iret
loopne
mov
sub
repnz
out
cmp
dec
lock
pushf
adc
sti
push
repnz
enter
or
ljmp
ja
sbb
cmp
pop
repnz
and
dec
adc
add
rcrl
sub
je
ja
lods
inc
out
sbb
and
fdivrs
xchg
push
xchg
hlt
rclb
ds
cwtl
inc
sbb
mov
push
jbe
mov
xchg
push
iret
and
arpl
outsb
les
mov
push
adc
xor
rcrl
adcb
xchg
jge
sti
clc
xlat
lods
inc
stos
inc
js
or
fucomip
add
fldl2t
pop
dec
adc
ds
dec
jmp
pushf
push
xchg
int3
adc
or
dec
xchg
cmp
mov
add
lcall
rclb
mov
in
cli
sbb
pop
dec
lods
fadd
or
pop
mov
or
ret
mov
push
inc
pop
pushf
mov
insl
lahf
sub
sbb
push
scas
mov
inc
dec
jle
cmp
pop
cmpb
negb
btc
movsl
lret
leave
xchg
dec
icebp
ja
shlb
and
fstl
mov
adc
cvtpi2ps
cld
sub
orb
inc
or
popf
mov
dec
cmpsl
mov
and
xorb
mov
sbb
push
jp
sub
imul
imul
or
mov
cwtl
mov
bound
adc
pop
jmp
dec
mov
inc
mov
sbb
sub
outsl
adc
sarb
adc
in
dec
int3
adc
in
jae
xchg
xchg
xchg
inc
in
lods
daa
divb
inc
mov
jno
je
mov
out
out
insl
jmp
movsb
rcrb
ds
sub
movsb
daa
add
loope
adc
ljmp
leave
or
adc
stc
negb
int3
and
mov
add
jp
ror
xchg
outsl
nop
pop
adc
fidivl
add
sbb
inc
xchg
mov
lcall
dec
test
pop
aaa
fs
ja
mov
sete
inc
mov
inc
or
add
dec
push
xchg
gs
jns
cmovns
mov
mov
popa
repnz
cmc
mov
loop
mov
dec
out
jge
mov
push
xchg
adc
jl
fcmovbe
adc
xor
xor
stos
add
aam
ret
cmp
pop
movsb
negl
inc
mov
pop
jo
jnp
fs
or
mov
pop
cs
inc
cmp
inc
add
dec
jecxz
inc
jge
jle
cmpsl
pop
and
xchg
add
sbb
jge
push
cmp
andb
imul
or
xchg
inc
pushf
add
mov
xor
lods
adc
push
ffreep
add
fcmove
xchg
add
loope
stos
mov
push
add
test
pusha
pop
cmovle
ret
lcall
in
mov
icebp
push
mov
out
xchg
scas
or
repnz
inc
arpl
call
pop
and
test
rcll
sahf
cli
and
dec
lret
xorb
shll
out
dec
imul
mov
add
popa
add
or
shr
xchg
mov
pop
push
cltd
xchg
movsb
ret
or
push
fldenv
add
sbb
loopne
xchg
in
adc
xchg
int
mov
in
add
pop
jbe
pusha
cmpl
sahf
lahf
cmp
or
xor
jbe
jmp
js
xchg
xor
pop
pop
pop
inc
imul
popa
jno
push
cs
decl
jae
fildl
push
mov
pop
rclb
push
aas
dec
rorb
xchg
test
xchg
cmp
mov
jge
mov
ljmp
rcl
ret
xchg
mov
fldenv
hlt
incb
shl
js
scas
stos
leave
out
dec
jp
sarb
sbb
movsb
inc
loopne
shrb
sbb
and
test
mov
sub
sub
mov
push
aam
jae
iret
es
mov
test
pop
mov
and
leave
hlt
xchg
cmpsl
pop
dec
inc
in
or
mov
xor
scas
lods
iret
pop
pop
mov
cs
cmp
imul
imul
xchg
fnsave
cmp
fstps
subl
cmpsb
xchg
bound
das
push
push
sbb
insb
loop
enter
test
iret
fmul
imul
mov
xchg
mov
mov
mov
xchg
pop
scas
fcmovne
call
mov
jge
mov
jns
out
jno
scas
into
jnp
scas
mov
jae
js
shll
leave
xor
xor
jbe
lock
dec
insl
xchg
push
adc
dec
inc
outsl
push
cmpsl
cmpsl
in
mov
mov
rcr
fisubl
dec
push
movsb
pop
or
ljmp
pop
iret
lods
inc
dec
adc
insb
xor
mov
out
xchg
add
jecxz
pusha
jnp
test
sarb
call
cmp
mov
pop
fstpt
js
mov
pop
mov
mov
fs
movsb
out
mov
pop
cmp
inc
mov
shrb
jnp
rclb
adc
adc
pop
movsl
imul
lds
adc
fwait
push
repnz
in
mov
fsubr
je
add
incb
inc
or
inc
lods
jbe
adc
jge
adc
or
stos
mov
pop
xor
ficoml
push
mov
and
pop
xor
mov
push
sbb
or
xchg
pop
xchg
sub
shr
jl
lret
dec
and
js
fisttpll
cwtl
or
aad
data16
sahf
sub
adc
loop
mov
in
addr16
mov
push
mov
cmp
jae
imul
or
hlt
mov
mul
xchg
xchg
jmp
insl
mov
lea
das
inc
xor
es
mov
arpl
shl
shl
dec
push
xchg
repnz
or
adc
and
clc
dec
jb
ret
pushf
jne
xor
or
es
nop
divl
fsubrp
roll
std
test
inc
xchg
js
mov
out
xchg
mov
push
decb
pop
jmp
cmp
ret
fwait
mov
inc
inc
insb
pop
cs
xchg
mov
xor
pop
stos
int
xor
push
fcmovne
aas
jnp
inc
sbb
sub
add
ljmp
mov
mov
pop
gs
in
jp
push
or
lds
pop
scas
xchg
mov
insl
xchg
inc
rolb
lret
andb
pop
into
pop
inc
shlb
jns
pushf
shlb
sub
jecxz
or
pop
cld
fucomp
jge
ja
lret
cmc
push
movsb
nop
jns
jmp
nop
adc
add
insb
in
add
pop
inc
xor
scas
fimull
pop
movsb
cmp
rcrl
pop
movsl
inc
fdivrl
mov
and
xor
mov
fisttpl
testb
inc
pop
jae
push
in
test
inc
inc
pop
clc
mov
inc
push
inc
push
push
addr16
mov
ds
ja
scas
cmp
rorl
xchg
or
push
cmp
cmp
xchg
and
mov
out
test
shll
adc
into
push
adc
mov
stos
inc
ret
jmp
xor
out
adcb
ficoms
and
enter
fstl
divb
imul
cmp
and
popw
mov
mov
mov
mov
arpl
test
mov
mov
xor
sbb
mov
lahf
cli
and
or
sub
hlt
inc
mov
jne
xor
xor
pop
cmp
or
jne
pop
push
pop
cmp
mov
adc
push
adc
push
lret
pushl
orl
jl
movsb
aam
dec
xor
test
inc
cs
inc
push
push
jnp
int3
sarl
push
sub
inc
les
out
pop
xor
popw
ds
dec
aaa
in
add
loopne
loopne
call
mov
fisttpl
insl
xchg
sub
div
pop
call
cltd
shll
pop
imul
rorb
mov
pop
mov
adc
bound
cmp
mov
dec
std
jbe
inc
xlat
adc
pop
cltd
pop
pop
insb
les
sti
adc
je
mov
repnz
push
js
sub
jp
push
jp
adc
arpl
push
iret
mov
mov
lods
hlt
int
or
daa
lods
mov
hlt
pop
push
pop
dec
xchg
mov
dec
and
enter
cld
xchg
sub
inc
jge
mov
mov
pusha
lret
or
lods
cld
xchg
icebp
rcl
add
les
rorb
push
loopne
xor
cmp
loopne
enter
or
fisttpll
bound
mov
out
sbb
cltd
sub
or
cmp
jns
inc
adc
mov
sahf
xchg
ret
rcll
fistpl
je
ja
xchg
out
pop
int3
xlat
sbb
outsb
adc
push
push
mov
cmc
push
iret
jns
xorb
stos
insb
sub
and
sub
movsb
and
xchg
iret
pop
fsts
push
nop
pop
cmp
cmc
filds
bound
dec
imul
nop
test
jnp
sbb
hlt
inc
fwait
sbb
and
rorb
sub
test
fstl
inc
jns
push
ljmp
out
sbb
fsubs
lret
rol
push
pop
int
lcall
repz
adcl
cmp
push
std
and
mov
mov
sahf
jbe
xchg
mov
adc
jecxz
cmp
mov
push
mov
push
or
stc
mov
sbb
js
pusha
sub
popa
into
mov
mov
push
pop
jbe
jns
add
mov
push
sahf
lcall
or
adc
bound
pop
adc
jb
jg
rcr
movntq
add
lcall
lcall
dec
jne
adc
in
fdivl
mov
mov
dec
push
test
in
mov
pop
sbb
rorb
cli
nop
ds
inc
jae
rcrl
daa
test
cli
addps
scas
aad
sbb
shrl
mov
out
adc
inc
lcall
cltd
or
orl
mov
fistps
cs
xchg
add
jno
pusha
pop
call
cltd
push
cmp
cmp
adc
insl
daa
int
cmp
inc
push
mov
sub
shlb
mov
idivb
xor
aam
push
inc
inc
loopne
adc
lds
je
mov
and
cmpl
inc
lahf
ret
iret
push
xor
stos
aaa
icebp
jno
ss
xchg
and
add
repz
out
jecxz
movsl
jg
sub
sbb
decl
inc
rcrl
or
cwtl
push
out
add
inc
repz
popf
xchg
cmp
jle
sub
xor
imul
adc
push
mov
fsubl
mov
pop
ja
cmp
sbb
mov
inc
mov
imul
out
mov
or
imul
push
dec
cmpsb
mov
jge
xor
incb
cmpsl
and
inc
push
pusha
lods
gs
sub
int3
fdivs
xchg
cmp
mov
jge,pt
lods
push
lock
mov
out
xor
jae
popa
ds
iret
orl
mov
and
sbb
xchg
adc
cmpsb
fs
out
sub
int3
ret
out
cmpxchg
jae
mov
out
sub
jne
add
push
aas
cvttps2pi
xlat
jl
jae
jl
movaps
jle
sub
stos
cmpsb
or
jmp
mov
std
push
js
outsb
sbb
cltd
fdivrl
jb
pop
fmuls
adc
stos
ffree
repnz
inc
pop
arpl
les
ficoms
fdivl
add
push
sub
push
or
lock
lea
mov
in
push
push
adc
xchg
add
mov
in
add
jo
sti
nop
mov
mov
data16
or
test
or
jne
pop
test
mov
repnz
imul
int3
xor
sub
fiadds
ficomps
fsubr
scas
dec
movsl
lcallw
iret
icebp
adc
xor
jg
adc
pop
imull
add
sub
add
call
insl
jnp
dec
imulb
rcrb
in
push
xor
je
mov
dec
idivl
xchg
jmp
inc
nop
mov
movsb
pop
mov
sub
fdivp
les
push
add
sbb
call
mov
sbb
gs
std
push
jmp
jp
ror
add
push
sahf
push
or
xchg
jle
dec
test
jmp
jne
movsb
xor
jp
add
stos
mov
rolb
push
aad
inc
sarb
fildll
mov
inc
pop
dec
pop
popa
inc
fwait
inc
test
int3
fcmovu
rorl
int3
mov
mov
test
cltd
cmp
jmp
arpl
lret
push
or
push
ror
rcr
and
je
test
hlt
ret
idivl
iret
outsb
aad
iret
sahf
pop
add
xor
fildl
sbb
adc
cmp
insb
fcompl
ja
mov
push
lcall
aaa
jmp
scas
movsl
adc
xor
inc
std
and
popa
int3
xchg
mov
test
popa
das
popf
imul
push
jbe
inc
fmuls
les
mov
call
popf
pop
subb
scas
mov
mov
jbe
jae
loop
cmpsb
xchg
and
call
lret
mov
jne
lods
push
inc
pop
bound
mov
cli
popa
jb
inc
jne
shlb
or
add
lcall
or
push
inc
xor
jmp
pop
cmpsb
sub
jge
push
and
adc
mov
cmp
pop
fisubl
orl
je
ja
out
sbb
mov
je
cmp
dec
pop
out
daa
fucomip
hlt
add
xchg
push
push
sahf
sti
jo
pop
out
xor
jp
jnp
orb
popf
add
adc
push
mov
dec
cltd
sub
add
shll
and
stos
pop
lcall
jp
inc
inc
outsl
sub
lods
in
shlb
inc
cmp
dec
out
pop
scas
push
sbb
arpl
cmpsl
cltd
jg
inc
testl
sarl
xchg
mov
test
fcoml
add
pop
adc
add
adc
das
mov
mov
js
shll
std
mov
lcall
sbb
xchg
cmp
sbb
aad
sub
add
test
jnp
add
sbb
mov
insb
ljmp
cmpsl
inc
gs
int
dec
or
jge
jmp
es
bound
in
gs
xchg
dec
lahf
cmp
fs
fwait
or
in
dec
nop
mov
or
adc
jns
dec
xchg
mov
jecxz
push
mov
mov
xor
push
lahf
dec
and
jmp
add
popf
ljmp
add
pop
pop
outsb
outsb
mov
cwtl
je
stos
insl
subl
iret
dec
jbe
cmpsl
or
cmp
xchg
mov
adc
mov
pop
add
add
mov
insb
in
sub
fldl
test
test
outsl
add
push
out
insl
int3
push
or
clc
xchg
xor
sti
or
push
xchg
clc
popf
pushf
add
pop
stc
imul
test
pop
loopne
lahf
cmp
pop
outsb
push
inc
in
cmpsl
dec
ljmp
ljmp
addb
jbe
cmp
mov
mov
or
pop
adc
pushf
sbb
dec
sbb
xor
pop
aaa
fsts
push
loope
ret
fstl
test
sbb
sarb
jnp
jp
sub
sub
out
dec
adc
mov
sub
and
arpl
jnp
mov
dec
pop
mov
add
and
std
add
iret
mov
int3
push
ljmp
or
fnstenv
xor
shlb
xor
mov
sub
mov
andb
icebp
sub
jns
jb
movsb
xchg
fcompl
inc
jecxz
add
test
pop
mov
pop
push
dec
lahf
and
ds
clc
jg
mul
repz
jne
sar
adc
into
mov
xor
in
add
xor
mov
jns
and
mov
add
inc
pushl
jo
shll
add
test
xor
imul
inc
ffree
pop
inc
data16
popf
call
test
hlt
sar
mov
nop
je
lds
xchg
mov
arpl
add
and
addr16
repz
fbld
fwait
int
enter
xor
outsl
mov
lcall
jns
mov
movsl
lods
pcmpgtb
mov
rcl
inc
ret
subl
roll
popa
cwtl
fs
fiadds
pushl
xor
inc
mov
ja
mov
test
and
dec
xor
js
adc
push
mov
gs
cmpl
std
rolb
hlt
and
hlt
mov
and
or
test
adc
push
in
cltd
push
push
jg
loop
inc
in
loop
xor
shll
ljmp
xor
cwtl
sbb
idivb
insl
mov
lcall
scas
pop
movsb
mov
push
xchg
into
sahf
in
je
xlat
add
cmp
movsl
fidivrl
and
loop
leave
dec
mov
sub
shrb
jl
ljmp
mov
mov
and
cmpsl
mull
scas
jns
add
out
clc
inc
or
inc
loopne
lahf
jge
cli
push
mov
cmp
pop
cmpsl
stos
xor
lds
ret
rcr
or
add
push
ret
sbb
add
enter
inc
add
movl
in
fidivs
inc
scas
xchg
cmp
repz
movl
cltd
and
cltd
pop
add
push
mov
rorl
sbb
das
sbb
pushf
xchg
les
mov
cmp
lock
mov
imul
les
cmp
pop
or
adc
dec
stos
into
call
rcrb
aaa
push
out
and
out
xor
push
mov
loope
fwait
das
jge
repnz
push
sub
push
ds
nop
dec
xorb
out
inc
cmp
mov
lret
outsl
scas
fnstsw
jl
mov
or
push
arpl
das
popf
add
jp
int
mov
lock
or
xor
fsts
push
rorl
pop
pop
pop
stos
or
mov
cmpl
xchg
fwait
inc
lods
pushf
jo
mov
fnsave
cmp
stos
jbe
push
in
or
out
outsl
jbe
fstpt
sub
or
js
and
cmp
cmc
jbe
gs
or
cmc
and
gs
lcall
lea
cmp
xor
loope
ficoms
inc
lods
mov
cld
rol
inc
lcall
jg
cmc
enter
xchg
fsubs
cltd
cmpsl
sbb
xchg
mov
pushl
xchg
arpl
mov
dec
ret
or
add
lods
jle
mov
mov
imul
mov
push
test
push
push
pushf
rol
jg
sub
stos
xchg
and
pop
push
fs
arpl
jg
in
in
popf
cmp
out
jg
mov
adc
push
xchg
cmp
lahf
scas
lret
push
xchg
fcmovu
imul
push
cmp
or
push
pop
or
lea
jp
xchg
sub
mov
cld
push
test
cld
dec
mov
xchg
jns
push
mov
cmpsb
out
push
repnz
jp
outsb
sahf
enter
push
jo
sbb
sub
cmp
sarb
dec
cmp
xchg
out
and
jne
loopne
sarl
pop
out
and
int3
mov
jp
mov
inc
mov
scas
xchg
pop
pop
inc
inc
in
xchg
stos
mov
sub
inc
in
pusha
sub
mov
out
sub
ret
adc
popa
jbe
jno
in
push
sub
cmp
and
inc
inc
rolb
jmp
repz
and
pop
mov
cwtl
sbb
int
cld
push
in
inc
jbe
sbb
addl
aaa
and
dec
stos
dec
mov
cmp
into
movsl
test
mov
cwtl
adcb
cmc
inc
mov
test
mov
push
imul
aas
dec
mov
rolb
lods
inc
inc
loop
pop
repz
stc
jle
mov
mov
push
fdivs
adc
cwtl
xor
dec
mov
jmp
testb
pop
popa
and
pusha
imul
decb
ret
mov
mov
inc
stos
imul
sub
movsb
cmp
jmp
push
and
icebp
lret
pop
cli
fimuls
fisubs
fnstsw
rcrl
or
lcall
jecxz
stc
imul
cmp
fildl
cmpsb
sbb
xchg
fcoms
test
jbe
xchg
outsl
inc
or
xor
cmpsl
push
jl
sbb
mov
lods
lret
inc
inc
test
movsb
fsubs
in
inc
ljmp
cmpsl
fs
and
das
lods
ds
icebp
sub
mov
inc
clc
inc
add
pop
mov
adc
loop
mov
mov
xchg
xor
or
adc
inc
fidivs
jo
adc
dec
sbb
and
in
mov
lock
xor
popa
jge
xchg
js
outsb
sbb
in
clc
test
mov
and
cltd
xor
and
dec
xchg
lret
cmp
pop
sarl
sub
hlt
mov
sbb
jbe
push
and
out
cli
mov
inc
hlt
adc
ret
int
lods
or
mov
mov
mov
faddl
in
push
leave
and
xchg
mov
mov
sbb
push
stos
push
add
or
ss
mov
leave
jae
sbb
mov
ficoms
clc
std
int3
mov
xchg
ret
mov
mov
inc
in
cld
pop
push
pusha
jle
push
out
push
lods
xchg
add
cltd
pop
xor
repnz
daa
lods
xchg
aas
push
sub
add
ja
jbe
sub
dec
fwait
mov
lahf
in
ljmp
fsub
fisubrs
roll
ret
xchg
bound
je
push
jo
std
xor
and
jp
xor
mov
add
cmp
int
nop
lahf
or
adc
add
lock
sub
stos
xor
push
sahf
push
stos
add
test
movsl
int
inc
sti
imul
sbbl
push
dec
jmp
packuswb
xor
call
pop
daa
in
jo
pop
xchg
ret
sahf
or
cli
or
or
bound
pushf
pop
jp
out
adc
shlw
inc
cmp
loopne
and
test
mov
push
enter
inc
movsl
pop
nop
movsb
jnp
fnstenv
cmp
jp
test
lcall
xor
test
cs
sub
decb
lea
or
add
xor
movsl
popa
es
dec
adcb
inc
addr16
mov
xchg
push
and
inc
mov
push
xlat
sub
sub
arpl
repz
and
mov
add
popa
ja
stos
push
add
rol
add
mov
sti
stc
add
out
mov
out
inc
repz
mov
clc
js
mov
in
int3
aas
mov
jnp
sti
divl
ficompl
imul
xchg
stos
jl
inc
jbe
aam
rcl
pushf
or
icebp
mov
mov
mov
aam
dec
xchg
shll
inc
add
push
shlb
lock
add
lahf
mov
xor
lcall
fidivrl
sbb
inc
loop
push
mov
clc
xor
pop
out
or
mov
popf
jp
jnp
pop
sub
loop
das
test
sub
ds
mov
movsb
lea
ja
pop
inc
jbe
ljmp
jmp
das
test
ret
adc
inc
cmp
push
sbb
cld
xorl
jl
mov
jns
mov
xchg
push
mov
mov
clc
loop
push
js
loop
pop
add
pusha
fsubrs
scas
sbb
mov
cli
addb
push
outsb
jg
daa
mov
iret
push
mov
cltd
push
dec
inc
clc
daa
cmp
xor
sbb
jg
lds
add
jne
push
loop
jecxz
or
cwtl
lcall
in
xor
cmpl
fs
inc
mov
mov
jle
ficompl
jno
mov
or
test
jae
ja
jae
xor
mov
cli
loop
pop
sub
or
push
mov
bound
pusha
outsb
rcr
mov
insl
fbld
or
shlb
dec
or
push
outsb
loope
push
and
je
gs
orb
cmp
stos
insl
addb
out
cmp
xor
pop
fiadds
lcall
sti
jnp
sbb
fisubrs
mov
arpl
or
adc
mov
add
punpcklwd
ljmp
mov
xor
inc
test
mov
in
popa
pusha
mov
cwtl
mov
in
popf
test
mov
pop
inc
sub
or
pop
push
aaa
das
xlat
xchg
pushf
rcrl
sbb
cltd
into
pop
xor
jg
push
sub
outsl
xor
insb
and
mov
popa
mov
dec
mov
out
and
icebp
lds
lds
adc
and
adc
frstor
popf
addr16
outsb
das
mov
cwtl
je
in
flds
insb
ret
mov
sbb
outsb
insb
in
ret
add
aas
inc
add
insb
outsl
rcl
cmp
push
inc
push
sub
add
data16
loope,pt
stos
test
xor
pop
mov
pop
loope
imul
inc
int
push
in
sti
loopne
push
mov
orb
cmpsl
xchg
enter
jne
cmc
ret
inc
jp
int
or
lods
xchg
aas
out
in
stos
cmp
ret
mov
fsts
sub
fwait
loope
lret
nop
ja
mov
dec
mov
data16
adc
ret
mov
outsl
imul
xchg
pop
out
pop
nop
es
nop
shlb
dec
in
xchg
in
movsl
ja
mov
data16
xor
and
gs
cld
push
jge
out
imul
xlat
hlt
add
loopne
jae
pop
pop
js
rcrl
pop
rorb
dec
ss
mov
gs
add
dec
sub
sti
mov
inc
dec
xchg
inc
out
mov
lret
js
in
ds
mov
fistps
inc
lods
push
sbb
mov
adc
dec
jnp
sbbl
lcall
int
push
ja
jg
inc
add
shrl
fsubl
popa
testb
cld
rcrl
cmp
into
repz
adc
shrl
add
cmp
sbb
pop
aas
cmpsb
aaa
jb
lahf
xchg
xchg
cli
ss
fnstenv
inc
add
dec
mov
adc
enter
repnz
sub
adc
mov
inc
push
jo
shl
movsb
cld
inc
xchg
test
jno
mov
stos
mov
dec
stc
dec
popl
imul
mov
bound
mov
shrb
and
cmp
mov
fistpll
pop
inc
scas
or
mov
mov
aas
mov
lds
out
aam
push
loop
outsb
js
in
xlat
hlt
push
jg
loopne
sbb
mov
pop
jecxz
call
dec
loop
imul
sub
xchg
mov
je
adc
test
scas
fsubrs
dec
stc
popa
xor
inc
out
rcrb
int
sub
inc
inc
or
adc
add
out
jp
add
or
push
jl
fldt
fbstp
andb
inc
ljmp
mov
push
push
sbb
scas
inc
gs
fiaddl
imul
sbb
loopne
xchg
adc
push
push
scas
sub
sub
out
popf
xchg
outsl
cmp
xchg
push
pushf
lcall
pop
pop
mov
test
adc
popf
popf
nop
out
push
inc
fwait
lret
dec
loop
xchg
rorl
ljmp
mov
negb
js
pushw
push
arpl
data16
out
call
fistpl
je
xchg
cmp
xor
adc
jecxz
call
jmp
das
mov
and
adc
pop
ds
ficompl
sub
mov
and
shll
ret
cmpsb
mov
or
adc
mov
loope
movsl
mov
std
add
cmp
ret
loopne
and
adc
push
je,pn
jp
out
decl
rclb
repnz
pushl
adc
sub
lock
repnz
shl
in
dec
sbb
jp
cld
es
push
dec
lea
mov
jo
or
or
mov
pop
das
inc
xchg
xor
pop
dec
subb
add
mov
and
and
and
or
dec
mov
int
inc
ja
mov
xchg
xchg
ja
mov
mov
int
lds
and
int3
xchg
adcl
mov
enter
in
out
ret
lods
pop
lods
shrb
jne
loopne
lret
add
jae
jne
and
xchg
xchg
jecxz
sub
stc
inc
mov
mov
lods
jno
in
hlt
std
push
xor
fistpll
in
ljmp
test
fstl
add
adcb
fldt
lods
lcall
mov
repz
push
add
sbb
stc
data16
push
jne
jecxz
aas
and
outsl
pop
into
push
ret
outsb
xor
xchg
xor
inc
addl
add
mov
pop
sub
mov
rcrb
jne
fnsave
mov
in
mov
sbb
rol
int
ret
mov
jge
push
pslld
enter
xchg
inc
add
scas
aam
or
iret
pop
mov
adc
add
subl
out
mov
mov
pop
incl
in
push
sarl
insb
jp
divl
gs
sub
jp
popf
rcll
dec
je
jns
add
cwtl
out
cmp
cmp
add
rcrl
push
sbb
lcall
sub
fs
sub
jl
lcall
sbb
inc
sbb
dec
add
das
loopne
pop
lcall
mov
and
mov
jecxz
mov
in
test
push
das
loope
xor
inc
push
fcomps
ss
aas
add
out
testb
xlat
sbbl
lahf
xchg
fimuls
jp
jecxz
jmp
pop
mov
jge
cmp
stos
inc
dec
psrad
mov
or
push
xchg
test
sbb
roll
sub
inc
idiv
cmc
push
inc
addr16
imul
out
pusha
mov
xchg
cli
push
fistl
dec
dec
inc
inc
add
cmp
leave
out
cmp
cmc
inc
rcl
mov
mov
cli
pop
jns
push
test
nop
js
data16
and
mov
nop
xlat
sbb
mov
hlt
ret
push
lea
scas
pop
push
and
mov
ret
repnz
jl
dec
rolb
sub
pop
lock
mov
jb
and
cmpsl
nop
leave
stos
xor
js
movsb
mov
or
mov
pushf
les
sbb
jne
jne
mov
adc
int3
fsubl
push
pop
mov
cs
clc
inc
mov
sub
pop
out
clc
mov
rcrb
js
dec
xchg
pop
fadd
dec
lock
les
orb
lods
ja
repnz
jecxz
in
xor
cmp
mov
fisttps
stos
loop
test
sbb
fidivrl
mov
ret
ds
and
mov
adc
pop
leave
or
ret
jo
rorl
push
push
dec
cli
nop
lahf
push
pop
jecxz
adc
negl
pop
cwtl
xorl
bound
cmpsb
add
js
jbe
jge
pop
les
cmpsl
out
mov
push
das
stos
add
jnp
dec
xchg
push
es
dec
frstor
mov
sahf
mov
pushf
aad
mov
aas
enter
sub
push
or
dec
aad
push
sbb
mov
shrl
iret
gs
xor
adc
popf
inc
xchg
shll
mov
mov
test
xlat
fcompl
jecxz
mov
scas
movsl
ja
xor
mov
cli
pushf
jmp
cltd
mov
int3
jne
ds
testl
add
xchg
les
push
in
jo
lds
push
shl
and
inc
outsb
sbb
mov
xchg
push
jnp
fisttpl
fld
sub
push
out
sbb
jbe
scas
fisubl
mov
pop
lcall
jecxz
movsl
mov
pop
or
call
adc
add
mov
or
mov
ret
fs
es
fwait
dec
mov
adc
subl
popa
inc
pop
add
mov
xchg
lcall
cld
in
xor
xchg
xchg
inc
es
sub
ljmp
enter
je
dec
call
jbe
xchg
mov
xlat
lahf
fwait
pop
pop
or
mov
bnd
add
xchg
arpl
xlat
jg
mov
jne
fs
jecxz
loopne
jbe
jl
leave
popf
iret
aaa
call
mov
test
push
insl
call
inc
sub
stc
movsl
pop
push
xchg
mov
fisubl
xor
fldt
xor
push
pop
xor
cwtl
jl
fwait
jae
push
mov
adc
lock
out
mov
orb
into
repz
int3
stos
xchg
jno
push
push
sbb
cwtl
and
add
lahf
mov
and
cmpsb
add
mov
xchg
stc
gs
dec
sbb
pushf
inc
inc
iret
cwtl
int
jmp
inc
and
sbb
pop
pop
stc
or
sbb
test
popf
gs
cmp
or
es
lods
mov
rorl
jmp
jle
xor
mov
jg
cmp
aad
add
sbb
test
idiv
es
pushf
and
mov
xchg
add
and
inc
jl
push
sbb
mov
fsubl
ja
popa
mov
dec
and
bound
mov
mov
lock
add
js
push
mov
dec
jmp
nop
xorb
dec
jmp
ja
lahf
push
add
or
test
rorl
mov
das
cmp
into
and
jbe
mov
jmp
adcb
std
sbbl
jbe
mov
inc
outsb
cmp
cmp
sub
dec
sub
xchg
xorl
inc
shlb
nop
imul
aad
push
cwtl
test
pop
jne
shlb
inc
adc
add
push
es
xchg
imul
add
or
imul
sub
sub
cmpsl
pusha
add
repnz
mov
sbb
clc
je
or
fcom
xor
jbe
push
ret
cli
mov
cld
xlat
mov
mov
mov
loope
cli
dec
push
cmp
popf
dec
mov
add
xchg
add
mov
inc
dec
adc
out
add
out
iret
arpl
adc
jecxz
push
sub
mov
sbb
sbb
pop
and
dec
push
leave
cs
in
add
sbb
dec
cmc
cwtl
mov
lea
adc
incl
rolb
lret
ljmp
cmc
sti
fimull
push
rcll
mov
sahf
cmc
inc
xor
fdivs
cmp
sbb
xor
sbb
sarb
fisttpll
push
and
inc
cld
std
xchg
lahf
lahf
mov
repz
pop
and
pop
lahf
and
pop
or
clc
dec
scas
mov
xchg
ja
and
insl
lods
jmp
ss
jmp
adcb
xor
xchg
mov
fdivrs
add
pusha
paddsb
jmp
or
dec
or
push
shl
pushf
dec
leave
fsubrp
test
mov
xchg
andb
sub
pop
cmp
push
mov
stc
mov
stos
and
rolb
push
in
xor
loope
pop
xchg
pushf
pop
add
daa
jns
mov
mov
xchg
fidivrl
cmp
mov
cwtl
popf
and
cmp
out
push
xchg
mov
movsl
jb
xchg
xor
or
push
push
lds
pop
jl,pn
popa
pop
scas
vprotw
inc
push
dec
xchg
adc
xchg
or
jae
clc
repnz
sahf
in
and
mov
push
or
inc
push
out
xor
orb
sarb
jle
inc
lret
imul
mov
cmp
inc
mov
inc
cmp
mov
loop
adc
testb
mov
pop
adc
rolb
jbe
faddl
add
arpl
ja
sbb
mov
loopne
cltd
or
mov
pop
adc
pop
scas
xor
test
arpl
mov
popf
rcll
das
inc
pop
out
cmc
add
sub
mov
push
mov
loopne
movsb
das
mov
sub
xor
ror
fstps
dec
xor
insl
jecxz
and
push
lds
les
mov
aad
test
mov
lahf
test
je
jmp
adc
or
xor
cmp
jecxz
insl
jno
fidivrs
stos
sbb
and
test
leave
scas
push
mov
xor
aam
mov
lcall
jb
mov
stos
sbb
push
adc
jb
push
ficompl
cmpsb
mov
sbb
out
ret
fisttps
shl
aad
daa
icebp
sub
outsb
sub
cmpsb
dec
push
fadd
clc
xor
add
dec
sub
add
ljmp
jne
adc
add
bound
sbb
and
pop
mov
ja
aad
jge
dec
push
int3
imul
test
fisubs
cmpsl
xchg
jo
mov
adc
dec
arpl
or
cmpb
gs
enter
pop
push
out
cltd
mov
mov
inc
mov
in
out
xor
pop
push
xor
gs
mov
aam
cwtl
inc
push
jno
push
repz
jecxz
jo
and
push
fstps
adc
sub
jle
shr
inc
pop
inc
cwtl
mov
outsl
call
int3
roll
adcb
sub
push
or
push
mov
adc
mov
mov
jge
bound
inc
adc
inc
jp
ficomps
and
mov
sub
push
lret
out
outsl
mov
faddl
shlb
popa
add
hlt
push
stc
add
jne
pop
out
dec
mov
or
push
pop
lahf
pushf
mov
out
popa
in
sbb
cwtl
mov
xor
in
sbb
dec
int3
push
cmp
lcall
xchg
add
fwait
mov
cmc
pop
adc
push
mov
or
out
jl
push
jnp
aad
xchg
fsubr
sub
int
cltd
stc
push
movsl
cwtl
push
sub
rcll
out
rcll
das
xor
scas
or
adc
xchg
leave
dec
jbe
movb
lods
fsubl
jle
jg
adc
sahf
lods
clc
add
lahf
lock
adc
jg
insl
arpl
jno
std
stos
adc
add
push
icebp
xor
xor
and
mov
lcall
vmovupd
es
or
mov
push
pop
mov
lcall
pop
push
jnp
imul
rorl
ffreep
shrb
sbb
stos
cmp
std
gs
mov
repz
mov
jg
sub
xor
repnz
or
mov
out
jg
and
sub
push
push
pusha
popa
push
pop
sbb
les
mov
and
cmpsl
cmp
ss
jbe
out
push
add
popa
stos
mov
jle
push
pop
jmp
xchg
dec
mov
sahf
xchg
insl
decb
int3
xchg
push
lea
aad
xchg
jg
dec
inc
cmpsl
pop
xor
dec
xchg
fs
pop
pop
rcll
mov
leave
outsb
mov
fadds
lock
loopne
cwtl
iret
cmp
unpckhps
dec
lahf
popa
cwtl
jo
sbb
imul
dec
iret
add
adc
ret
js
cmp
push
add
mov
sarb
movsl
mov
sbb
and
jae
inc
mov
jge
insl
add
xor
cltd
hlt
and
adc
andb
jle
int
stc
push
jge
mull
fnop
imul
ss
mov
shll
cld
adc
call
ret
inc
xorl
cld
jb
sti
shll
mov
fwait
pushaw
or
mov
sub
push
fs
push
lods
or
sbb
cmpsl
mov
lds
insl
jne
inc
xchg
or
xor
mov
cmp
adcl
jg
movl
add
js
jno
sbb
out
mov
pop
and
jo
lea
test
cwtl
mov
xlat
mov
insl
xor
push
xchg
inc
leave
cmp
pop
adc
push
dec
cmp
lock
xchg
cmovo
clc
cmp
pusha
xor
sahf
mov
sahf
lods
sbb
cld
stc
inc
ficomps
push
inc
loop
fdivr
dec
dec
les
add
lret
xchg
cmp
in
sub
push
and
cltd
jns
stc
mov
outsl
fists
es
or
stos
fildll
hlt
fldl
mov
and
mov
inc
shll
in
mov
sbb
mov
jmp
scas
imul
dec
mov
cmp
lret
mov
lods
sub
cmp
mov
jns
outsl
inc
cmpb
daa
mov
or
fisttps
lahf
test
sarl
and
mov
cmp
xchg
cmp
mov
fstpl
imul
scas
and
out
mov
insl
inc
and
jp
out
addb
pop
das
xor
xchg
cmc
mulb
fnstcw
or
sub
test
sub
cli
and
cmp
push
pop
jmp
icebp
mov
mov
inc
dec
jl
mov
repnz
sub
popf
arpl
and
inc
lock
pop
pop
xor
inc
sub
aas
movsb
out
xor
jl
movsl
add
loopne
inc
jo
xchg
lea
cmp
out
add
push
adc
roll
xor
xlat
pop
ret
adcb
push
arpl
ret
mov
stos
pmullw
inc
push
in
jne
mov
lods
into
jle
or
js
fadd
jg
outsl
aad
fcmovb
dec
in
inc
hlt
sub
insb
dec
mov
or
jge
sbb
pop
cmpsl
cmp
cmp
dec
cs
jno
int
push
rcl
fwait
jno
push
and
or
push
sub
idivb
dec
sub
jae
fnstcw
loope
fisttpl
int3
push
xlat
shlb
mov
into
loopne
xchg
xchg
rcrb
dec
pop
jmp
pop
fsts
stos
mov
outsl
subl
out
cmc
jg
ret
pop
scas
add
lcall
push
ret
jae
and
fnstenv
cli
imul
inc
push
mov
add
sbb
sbb
cwtl
lods
cmpsl
sub
inc
out
outsb
outsl
jns
gs
or
or
lock
xor
lods
xor
jne
pushf
or
fs
das
mov
into
dec
cmp
mov
bound
dec
cmpsl
in
scas
xchg
mov
sbb
cli
mov
mov
cmp
loop
fwait
inc
xchg
lods
loop
adc
push
lret
int
movsl
in
movsb
inc
push
dec
push
push
mov
mov
push
sub
cs
mov
mov
ljmp
push
loopne
mov
lea
pop
mov
mov
insl
sbb
cmp
pop
test
push
es
mov
and
inc
or
cltd
push
shrb
and
sar
pop
sahf
jmp
push
adc
mov
or
mov
fs
jp
rorb
mov
or
push
popa
pop
sub
sub
xbegin
fbld
cmp
pop
jl
dec
mov
loope
mov
fs
cmp
enter
in
inc
jbe
dec
into
loope
loop
xchg
leave
push
and
iret
insl
pusha
orl
jo
inc
ret
jbe
xor
adc
mov
stos
rorl
in
adc
xchg
xor
das
xor
pop
jp
movsl
mov
push
out
cli
pop
icebp
fst
int
mov
daa
cmc
ss
mov
jmp
or
sahf
es
inc
repz
cmpb
cmpw
xchg
ljmp
stos
inc
xchg
insb
dec
xlat
neg
std
cmp
mov
aam
incb
pop
sbb
or
aas
adc
or
aam
outsb
mov
inc
and
enter
xchg
loope
mov
add
leave
fcom
mov
add
mov
mov
and
mov
mov
lahf
mov
push
lahf
mov
xlat
or
push
and
adc
cmp
std
mov
sahf
push
sub
cwtl
iret
ja
sbb
stc
cmpsl
pop
jp
adc
mov
fmuls
xor
roll
push
shll
sbb
push
inc
adc
xlat
jo
rcrl
and
addb
mov
out
sub
jb
jle
push
xor
pop
xor
pop
stos
jo
add
ret
in
and
or
jnp
aam
jg
lret
pop
mov
add
fldenv
fsubr
jae
cmp
test
data16
fwait
aaa
xorb
dec
aam
inc
mov
pop
fstl
lahf
mov
push
shrb
aad
push
jae
mov
shlb
cmp
push
in
inc
mov
fildll
sbb
xor
xor
push
clc
mov
adc
xchg
cmpl
and
leave
mov
dec
fimull
xor
bound
mov
inc
loopne
insl
jnp
in
dec
loope
add
sub
push
mov
int
adc
pop
add
cmp
pop
arpl
mov
insb
or
ja
mov
hlt
fstps
jne
jno
pop
pop
int
adc
insb
cmp
pop
rorb
sbb
xchg
js
daa
mov
mov
jl
push
in
mov
xchg
ret
jmp
iret
push
mov
mov
repnz
add
into
stc
insl
cs
push
xor
and
cmp
jle
jbe
in
pop
mov
cs
ja
pusha
ja
xchg
in
out
es
mov
enter
fiaddl
push
pop
jecxz
mov
fwait
add
or
xor
cs
aad
add
adc
lods
jb
push
cvtps2pi
xchg
dec
rorl
jne
inc
scas
jmp
mov
dec
adc
inc
repnz
test
movsl
call
nop
cmp
sbb
dec
cwtl
or
jno
mov
mov
lods
mov
adc
push
and
cmc
cmp
ret
mov
icebp
mov
jne
mov
sbb
das
insb
cmp
xchg
das
xorb
xchg
sub
jle
sti
xor
add
jne
aam
leave
repnz
insl
test
adcl
fdivrl
jmp
adcl
in
pop
inc
lea
mov
mov
xor
data16
lea
rcrb
iret
mov
std
xor
mov
lahf
jne
xchg
ss
jns
shll
sub
push
out
or
test
in
mov
and
cmpsl
mov
jno
xchg
pop
adc
or
xchg
xchg
jb
and
addr16
imul
cld
adc
xor
adc
mov
inc
xor
mov
fst
xlat
add
push
mov
movsb
clc
adc
mov
mov
jl
insl
sub
push
stos
and
inc
fmul
scas
dec
lret
out
jle
pushf
and
sub
cmp
cld
cwtl
xchg
mov
sahf
pop
cmp
dec
add
popa
std
stc
adc
fstpl
daa
lds
lods
pop
shlb
push
cmpsl
ljmp
ja
and
cmp
inc
mov
cltd
insl
adc
out
sarb
sbb
mov
pop
loop
je
inc
aam
inc
sub
sub
jnp
std
mov
daa
cld
hlt
mov
jno
pop
mov
inc
filds
xorb
pop
jmp
push
inc
out
mov
sahf
inc
xchg
pop
dec
mov
leave
rcl
mov
jns
rclb
push
lods
mov
pop
pop
pop
dec
scas
scas
lock
and
and
cmp
xor
fsub
bound
pop
pushl
dec
push
jp
push
xchg
adc
mov
mov
cmp
mov
sub
mov
jae
out
ss
mov
outsb
or
test
sub
push
sbb
jnp
ja
enter
stos
pop
stc
repnz
adcl
scas
dec
sahf
push
mov
test
pushf
xor
test
jnp
in
mov
inc
std
hlt
outsl
ss
outsb
xlat
iret
xor
fstps
and
enter
inc
loope
mov
out
mov
mov
ja
push
in
mov
pushf
les
jo
pop
cmp
lahf
mov
jae
push
stos
and
test
das
jo
xor
jbe
sub
lcall
icebp
pop
xchg
sbb
pop
std
jo
inc
push
mov
daa
iret
je
or
cmp
adc
fmuls
mov
pop
add
test
push
mov
loop
gs
and
mov
xchg
sub
jle
inc
jl
xchg
cmp
pop
bound
data16
or
xchg
loopne
movsl
sti
dec
hlt
inc
jae
pop
icebp
testl
mov
mov
cs
add
sahf
cmpb
pop
fwait
popl
insb
rol
jns
xchg
test
sarl
fs
insl
jno
cmp
rorl
aas
mov
inc
add
mov
rcrb
out
pop
and
cld
inc
jmp
andb
mov
lods
dec
movsl
xor
or
or
cltd
mov
sti
mov
out
jo
pushf
hlt
adc
add
jb
adc
mov
stos
dec
pop
loop
inc
cmc
mov
fs
sahf
and
insl
lock
push
lret
iret
jb
dec
xchg
or
mov
sahf
cltd
notb
adc
adc
mov
test
call
xchg
loope
cld
repnz
sbb
push
lea
movsb
xchg
mov
in
lds
stos
xchg
push
xor
popa
sbb
sbb
ja
jg
testb
sbb
ret
repnz
cmp
bound
jb
cmp
int
scas
xchg
ret
adc
mov
stos
ja
rdtsc
shlb
in
call
repz
xchg
mov
cmp
mov
push
sti
jo
jo
adc
call
in
cld
push
fstl
sbb
cmp
sbb
sbb
jl
dec
xchg
test
add
pop
or
movsl
in
push
outsb
mov
cs
fidivs
jne
push
dec
loope
push
mov
sub
test
loop
sub
sub
lock
and
xor
dec
aam
mov
data16
ffree
aas
pop
mov
inc
mov
xchg
ret
push
jb
xchg
mov
scas
in
movsl
adc
ret
arpl
bound
out
add
fs
xchg
jmp
ja
nop
inc
fisttps
cmc
add
mov
jo
cmp
rorb
imul
jno
outsl
fcomi
loope
push
pop
rcll
push
pop
adc
sub
andb
test
dec
aas
adc
inc
clc
xor
jmp
out
int
xchg
out
cwtl
sbb
mov
xchg
sbb
add
pop
inc
and
ret
push
unpckhps
jb
sti
sbb
adc
movsb
jbe
pop
push
inc
leave
pop
stos
mov
jl
cmc
push
mov
rclb
rcrl
pop
inc
mov
lret
fdivrs
idivb
outsb
mov
adc
push
pop
dec
mov
mov
jecxz
jae
pop
enter
sub
and
push
ds
dec
adc
sbb
inc
popa
jmp
pop
stos
xor
mov
icebp
mov
orb
mov
nop
dec
cmpsl
cmpsl
mov
loop
fildll
xor
lea
inc
cmc
xchg
in
mov
jle
jp
mov
and
dec
jp
add
mov
lock
aaa
xor
insb
test
jnp
inc
sub
pop
flds
lahf
movsl
movsb
nop
xlat
pop
cmpsl
jo
push
cmovb
lcall
jl
popa
pop
add
inc
pusha
fmuls
adc
inc
fidivrs
int3
test
sahf
xchg
xor
pusha
ficomps
push
adc
decl
sbb
dec
stc
push
ror
insb
sbb
mov
fiaddl
shl
push
push
inc
mov
dec
mov
jg
fisubrl
cmp
mov
mov
mov
jmp
jmp
or
jnp
pop
pop
faddl
aad
fsts
loop
xchg
mov
out
and
movsb
or
fsubr
out
and
mov
push
out
mov
test
adc
or
lret
push
ffreep
outsl
movsb
in
cmp
xor
imul
imul
aaa
push
fs
cli
in
call
xlat
pop
loope
data16
cltd
scas
dec
out
pop
jge
cmp
xorl
xor
hlt
dec
stos
in
pop
addr16
dec
xchg
inc
insb
lcall
ljmp
imul
pop
stc
sbb
pop
repz
filds
test
push
push
stos
xor
cld
pop
cli
dec
das
pop
aam
jecxz
and
int3
pop
sub
es
lds
sbb
sbb
or
insb
mov
mov
mov
aam
xchg
mov
xchg
sub
mov
adc
xor
mov
push
add
cmp
add
adc
adc
mov
cmc
mov
pop
sub
dec
gs
mov
or
jnp
xchg
jnp
sub
shll
rolb
pop
int3
mov
xchg
and
sub
xchg
push
cmc
js
push
int3
sti
dec
push
cmp
fwait
mov
and
mov
addr16
es
test
imul
mov
pushf
push
imul
stos
mov
or
ss
dec
adc
scas
mov
add
test
sbb
sub
pop
sub
in
test
pop
clc
lods
clc
lods
dec
pop
imul
decb
insl
and
lods
fmuls
xor
mov
push
in
sti
sbb
pushf
loopne
push
push
jo
rcrl
addb
push
int
icebp
pusha
cmpl
push
cmp
lea
pandn
add
cwtl
lret
and
adc
and
and
iret
loope
stc
andb
je
flds
jo
jp
add
sbb
add
push
cmp
xchg
in
in
jp
jl
inc
pop
popf
sarb
inc
std
sbb
push
cltd
out
add
inc
inc
sub
xchg
inc
xchg
call
in
fnstcw
mov
xor
push
or
sub
pop
hlt
push
push
add
nop
adc
jg
cli
and
adc
mov
mov
cwtl
lret
out
faddl
fimull
mov
in
xchg
mov
adc
test
mov
cmpsl
inc
addr16
in
fadd
push
enter
cmp
xchg
add
push
or
or
daa
cmp
jbe
int
mov
push
mov
add
in
mov
cmpsl
das
movsb
jecxz
push
int
cmp
xlat
mov
xorb
aam
xor
pmovmskb
int
clc
push
and
mov
andl
fiadds
sub
xor
jne
fsubl
mov
cmpsl
xor
fists
jmp
fisttps
sbb
dec
mov
in
stos
mov
ds
mov
lret
hlt
xor
cli
adc
and
popa
clc
mov
fsubrl
insb
xor
inc
cli
xor
icebp
sub
xor
test
sahf
and
sub
leave
in
jae
mov
nop
bound
mov
mov
mov
rcrl
popf
out
cmp
insb
mov
aas
fadds
out
fucom
out
out
sbb
sbb
call
call
aaa
inc
and
dec
xor
and
test
daa
push
jb
add
push
jne
cmp
push
cmp
push
inc
int3
dec
dec
mov
xchg
pop
xlat
outsb
sub
push
pop
shlb
push
inc
pop
cmpsb
or
loope
mov
or
xor
adc
xchg
add
adc
mov
repnz
push
filds
mov
inc
and
xchg
pop
scas
sarl
jle
movsl
mov
lods
in
daa
rcrl
ret
das
xchg
or
xchg
or
cwtl
xchg
lds
dec
dec
insl
lock
jecxz
lods
les
popf
into
inc
aaa
jmp
push
or
fs
movsb
jns
pop
fildll
fnstsw
push
test
in
fmuls
call
aam
and
push
fs
mov
ret
xchg
inc
or
es
and
ljmp
int3
loopne
popa
dec
loope
inc
add
les
inc
dec
add
lods
cwtl
in
subb
push
pop
jge
xchg
addb
ja
hlt
sub
sbb
or
xchg
pop
push
scas
int
fadd
out
mov
lea
jno
cmp
xlat
adc
cmpps
out
movl
xor
adc
test
jns
ss
mov
in
mov
in
nop
xor
ret
pop
xor
faddl
in
sbb
ja
stos
sub
out
adc
pop
push
icebp
xchg
dec
jo
jo
xchg
xor
jge
xchg
xacquire
push
dec
push
dec
fdivr
xor
or
jecxz
inc
pop
repnz
mov
pop
notl
movsl
dec
insb
fisubrs
js
inc
ficoms
outsl
int3
mov
sbbb
idiv
outsl
loopne
sahf
xlat
dec
mov
inc
ljmp
aad
call
lcall
ds
jae
adc
add
subb
js
lahf
mov
into
xorb
cmpsl
outsb
rcr
sbb
sub
add
es
daa
ret
xchg
xchg
mov
and
movsb
arpl
mov
jns
hlt
dec
arpl
cmpsl
call
mulb
orb
dec
pop
add
fsubs
lret
cmp
into
mov
fidivl
int3
add
hlt
mov
mov
inc
jae
hlt
pop
push
sub
out
bound
xor
hlt
pop
hlt
loope
aad
pop
aad
sub
fsubp
fsubrl
mov
mov
inc
cli
aas
inc
push
add
cmp
sti
jb
in
lods
mov
loop
xchg
mov
jl
pop
xorb
aas
cmp
cltd
mov
or
xchg
adc
test
xor
xlat
inc
push
dec
aad
popf
and
in
icebp
jl
in
inc
std
or
sub
and
inc
sbb
daa
movsl
lds
test
daa
and
fisttps
inc
inc
outsb
lods
xchg
cmpsl
cs
push
rolb
pop
call
push
je
sar
ds
lret
push
and
dec
loop
jp
xlat
jge
cmpsl
inc
mov
movsb
push
addr16
jo
mov
mov
cvttps2pi
fsubrp
xchg
xor
jmp
fistl
lahf
lret
js
inc
sub
fistpl
adc
scas
cld
lds
xchg
orb
dec
aas
xor
pop
mov
xor
jmp
xlat
arpl
xchg
fimuls
js
pop
movsl
cld
and
sub
xchg
repz
inc
jmp
and
adc
xor
push
sbb
imul
into
outsl
mov
pusha
out
xchg
insl
gs
mov
adc
fidivs
jne
cwtl
lret
nop
xor
leave
and
in
pushf
js
out
mov
or
sub
add
xchg
add
lods
lods
push
cltd
iret
mov
int
inc
aas
jle
xchg
sbb
or
daa
mov
xchg
xchg
es
push
andb
icebp
xchg
test
cs
push
cmp
fldl2t
sbbb
adc
fcompl
int3
nop
loope
add
ss
jp
pop
inc
sbb
lcall
mov
mov
popa
mov
fldt
pop
ljmp
es
outsl
push
mov
sub
ds
arpl
inc
sbb
mov
mov
jbe
ret
imul
dec
sarb
rcrb
fdivl
loop
in
dec
sbb
in
ljmp
stos
fs
mov
mov
pushf
movsl
pop
data16
xor
pcmpeqb
xchg
fidivl
repnz
aas
mov
insl
arpl
dec
aam
push
in
loopne
xchg
lea
jp
mov
in
cmpsb
fidivrl
mov
xor
cltd
inc
mov
inc
sbb
sbb
pop
ret
push
stc
hlt
pop
jecxz
mov
enter
xchg
pushf
sub
mov
in
mov
mov
fs
jno
stos
test
hlt
cmp
cmc
lock
pusha
insb
push
adc
cmpsl
insb
xchg
mov
movsl
pop
pop
mov
add
jo
lock
add
push
mov
ja
iret
movsb
scas
or
mov
fidivrs
pop
mov
and
push
mov
jle
cmc
cmp
test
pop
pop
cmpb
xchg
ja
in
stos
cmpb
leave
pop
mov
dec
mov
push
sub
xchg
ss
and
jno
mov
je
movsb
icebp
and
cmp
nop
lret
clc
rol
sahf
and
xlat
xchg
xor
aam
fwait
iret
add
xor
xchg
xor
js
test
jle
dec
jb
stos
jle
xchg
sub
ss
js
jp
addr16
jle
jp,pt
xchg
cmpsb
arpl
jns
enter
in
pop
push
ljmp
mov
aam
sbb
repz
push
add
add
divb
pop
popa
shr
sbb
les
fiaddl
sub
jae
jnp
inc
in
push
pop
dec
js
push
fstpl
inc
or
jge
popf
xor
pop
loope
dec
jb
jbe
gs
out
popf
popa
mul
mov
cmpb
rorl
lock
dec
cmp
pop
sub
dec
decb
or
mov
mov
outsl
mov
jo
cmpsl
dec
jmp
mov
pop
ljmp
and
popa
out
xchg
inc
dec
push
shl
movsb
out
mov
stos
insb
test
cmp
mov
sbb
xlat
fs
jg
testb
jmp
imul
push
jnp
mov
add
out
sub
and
data16
lea
mov
repnz
pusha
mov
jb
stc
mov
stc
movsb
lods
into
jl
jnp
xchg
imul
adc
int3
cmp
int
ja
dec
lods
shl
inc
mov
icebp
iret
popa
divb
mov
mov
sti
inc
add
enter
add
ljmp
pop
inc
and
mov
cli
or
sub
push
inc
push
sbb
sarl
ds
inc
pushf
xchg
out
movb
xchg
ja
adc
fs
scas
cmpsb
in
lahf
adc
in
hlt
pop
outsl
leave
inc
jmp
in
addr16
mov
sbb
inc
nop
fstl
lahf
in
stos
andl
mov
mov
xor
cmpsb
hlt
inc
je
adc
imulb
out
ds
rcl
out
xor
cltd
test
sti
lcall
cmp
rorl
out
insb
mov
xorl
jmp
mov
or
cmp
dec
mov
lret
mov
push
into
popl
rcll
ds
imul
dec
mov
hlt
rclb
or
hlt
imul
js
pushf
or
add
stos
dec
jns
stc
testb
adc
pop
inc
jge
mov
xlat
and
sbb
ret
adc
or
xor
loope
fstp
insl
cld
mov
sub
subl
out
inc
cmp
xor
orl
sbb
fdivrp
mov
call
lret
cmp
sti
inc
in
popf
jbe
out
mov
scas
int
repnz
cld
mulb
jne
iret
repnz
add
cmp
and
add
adc
adc
jp
pop
mov
and
and
repz
movl
fs
inc
push
scas
fwait
daa
lcall
movsb
jl
adc
or
mov
lret
stc
xchg
dec
lods
dec
int3
push
dec
fxch
pop
inc
icebp
iret
mov
dec
in
push
ljmp
fwait
add
add
sub
cmp
and
shlb
in
mov
cmp
xchg
dec
add
mov
adc
in
insl
inc
add
loop
pop
mov
jb
dec
dec
fstl
sub
push
mov
das
jb
sbb
cmpl
jbe
or
aad
push
mov
push
lcall
daa
push
mov
popf
dec
pusha
sub
adc
cmpl
insb
push
jl
pop
movsb
iret
dec
hlt
inc
mov
movsl
cltd
loope
mov
cmp
ljmp
outsl
ficomps
cmpsb
adc
xchg
mov
sbb
pop
cmpl
pop
insl
inc
dec
inc
ljmp
shrl
pop
push
sbb
loop
xchg
sub
daa
or
push
or
inc
mov
add
setae
mov
sub
sbb
mov
xor
cwtl
dec
in
mov
sbb
or
pop
sahf
cs
insl
in
frstor
stos
arpl
push
push
ljmp
mov
mov
adc
mov
jge
push
outsl
xor
sbb
fistpl
pop
cmp
testl
add
lods
aaa
popf
jbe
mov
lret
cmp
clc
and
jb
es
sbb
sbb
outsb
fnsave
jbe
push
fwait
adc
jecxz
add
scas
sti
cld
fwait
outsl
mov
and
cltd
xchg
imull
popf
mov
mov
adcb
lret
filds
lock
stos
cmpl
mov
sbb
mov
fbstp
mov
js
std
testb
mov
loop
inc
sub
inc
pushf
hlt
movsl
leave
lea
in
cwtl
mov
mov
lods
cmpsb
pop
push
daa
mov
xchg
addr16
call
mov
ds
mov
inc
inc
std
xlat
ljmp
jmp
xchg
addl
out
xlat
adc
cmp
push
xchg
cmp
cmp
imul
sbb
int3
movl
mov
stos
dec
paddsw
push
add
or
iret
int
or
cltd
je
jne
repnz
cmpsb
sar
pusha
and
adcl
jns
mov
jne
lds
push
xchg
rcrl
mov
jae
jle
pop
bound
push
test
sbb
loopne
sahf
cltd
lahf
jno
jae
aaa
lret
pop
sarb
sti
mov
aas
xchg
mov
cmpsl
sbb
cld
and
je
jl
mov
push
cmc
bound
and
xor
rorb
into
adc
in
shll
dec
lods
gs
push
shlb
ds
out
add
loope
idivl
pop
int
push
in
sub
popf
sub
mov
or
sub
es
sub
imul
in
mov
pop
loop
xchg
test
shrb
inc
mov
push
xchg
ret
mov
mov
aad
lret
imul
push
cmp
bnd
adc
xchg
arpl
xchg
fadds
rolb
push
inc
cmp
add
lret
in
test
out
and
bound
lock
sbb
inc
jge
pop
mov
ljmp
xor
mov
push
jnp
pop
xor
enter
loopne
cmp
in
dec
stos
or
pusha
jecxz
xor
mov
jbe
ret
lods
ja
add
es
sbb
loope
pop
lcall
gs
jle
inc
push
leave
adc
movsb
sbb
popa
mov
iret
cmc
outsb
pop
mov
lahf
mov
repz
pop
stos
and
sti
flds
jecxz
push
cmp
mov
in
push
in
loopne
lods
pop
xchg
xchg
jbe
push
or
popf
and
loop
pop
addr16
xor
push
pop
pop
push
xor
bound
xchg
ja
vpunpckhdq
mov
inc
rol
iret
daa
adc
popl
and
jae
scas
sbb
fwait
call
jns
mov
lcall
jae
aas
sbb
push
dec
cli
cmp
movsb
int
inc
scas
dec
cs
lahf
jle
test
out
add
xchg
andb
inc
inc
xor
mov
divl
and
add
roll
and
inc
mov
shll
dec
xor
ljmp
pop
mov
lahf
cmp
adc
and
lahf
mov
jl
push
mov
loop
and
imul
paddsb
dec
pushf
dec
pop
or
cli
mov
int
popf
inc
inc
bound
dec
cmovae
aad
fisttps
stos
sbb
pop
movsb
or
pushf
jo
pop
imul
daa
jmp
mov
push
in
inc
push
incb
ss
loop
jns
loope,pt
mov
cmpsl
dec
xchg
aad
nop
mov
lret
push
adc
data16
adc
movsl
rolb
jle
mov
sub
dec
adc
imul
in
fsubl
inc
cmp
or
xchg
fisubl
mov
sub
call
push
sub
inc
lret
mov
hlt
cmp
addr16
test
lds
int3
or
push
ret
insb
jns
mov
outsl
adcb
lret
sub
xchg
sti
stos
mov
fnstcw
xchg
repnz
sarb
jb
dec
jno
and
movups
int
pop
sub
mov
hlt
inc
js
jle
pop
test
std
inc
or
jno
aas
push
js
pop
adc
jns
dec
mov
cltd
inc
out
leave
mov
lret
adc
outsl
flds
jl
adc
cmp
sti
xchg
test
int
out
movsl
dec
mov
jbe
fmuls
mov
out
cmp
loopne
or
jl
lcall
enter
sahf
pop
aas
mov
sbb
mov
cltd
push
sbb
mov
mov
cs
mov
movsb
pop
ret
and
sahf
aam
cmp
hlt
cs
xchg
lds
scas
mov
jecxz
sbb
fimull
xchg
jb
cmc
out
pop
jbe
popa
inc
pop
add
jno
push
rcr
ds
mov
pop
loop
cmc
divl
imul
and
mov
adc
ror
call
add
pop
fstps
adc
mov
pop
inc
mov
rcll
inc
cmp
cmc
dec
sbb
sbb
ret
xor
js
inc
les
xor
loop
add
call
sbb
xchg
ds
pop
into
je
push
fsubp
ss
fwait
hlt
xchg
xchg
mov
dec
sbb
insb
sub
adc
dec
insb
pop
mov
dec
roll
leave
mov
enter
es
lea
es
cmp
dec
fcoml
fcomi
cmp
mov
sub
sbb
push
mov
jp
jae
push
pop
adcb
xor
lds
push
jb
cwtl
jae
jo
out
mov
imul
inc
cmpsb
scas
lods
inc
jno
and
lods
mov
stc
insb
mov
xchg
addl
mov
loop
insb
cli
jle
in
lret
push
xchg
push
mov
rcr
test
xchg
icebp
fs
mov
imul
faddl
and
fcoms
pop
jle
fnstcw
in
insb
xor
push
cmpsb
pop
pusha
andl
test
outsl
sbb
inc
sbb
out
rcll
cli
testb
sahf
rcrl
inc
ret
mov
pop
pop
fisttpll
cmp
add
fistpll
pop
in
mov
test
adc
xor
mov
jb
stos
lcall
test
sahf
pop
testb
jbe
ds
mov
lea
dec
mov
pop
xchg
adc
sbb
adc
and
test
lock
jle
cmp
lahf
sub
mov
ss
dec
mov
mov
aaa
pop
or
dec
pushl
fmull
xor
and
popa
out
or
insl
xorb
hlt
mov
sbb
iret
loopne
repz
cmp
inc
shld
sbb
or
xorb
pusha
lret
cmpsb
mov
add
xchg
ja
mov
cmp
cmp
cltd
ds
out
aad
cmpl
xchg
jg
movsb
out
insb
mov
add
ja
dec
pop
jp
mov
daa
mov
fwait
andl
pop
fsubl
fidivrs
add
mov
movsl
jg
mov
push
xlat
xchg
jno
sbb
loope
mov
leave
inc
sub
test
lcall
aad
inc
fwait
add
xchg
je
aas
push
xor
ljmp
sub
rcll
clc
ja
mov
in
std
ret
jl
imul
mov
pop
dec
mov
mov
pusha
pop
aam
and
mov
mov
ret
mov
mov
push
jp
fimull
lret
jle
ret
cltd
sub
jb
pop
fwait
pop
and
test
bnd
push
test
jb
adc
mov
and
mov
fs
testb
aam
icebp
cli
out
imul
fisubrl
inc
xor
leave
add
test
mov
push
xor
inc
cltd
mov
mov
int
cmp
shll
sub
pop
mov
xchg
cmpsb
jae
sti
andl
fidivs
add
sahf
lods
stos
sti
cmp
test
mov
mov
xchg
imul
out
xchg
mov
stc
and
mov
insl
jle
cmpb
and
daa
rclb
xchg
hlt
iret
jbe
xor
dec
insb
xor
dec
jg
mov
andb
bound
mov
mov
mov
cld
jmp
cld
movsb
mov
insb
es
aam
loope
fistl
les
ljmp
inc
mov
mov
cmp
xchg
sarb
jno
dec
push
sbb
dec
mov
test
inc
lret
pop
aaa
into
xchg
dec
and
arpl
push
xor
xor
sahf
fsubrs
jb
or
jae
shlb
iret
inc
jge,pt
inc
in
mov
ret
push
pop
push
adc
sbb
jne
and
dec
les
mov
xchg
and
or
jae
mov
and
inc
push
mov
pusha
mov
cs
les
lods
sbb
es
jg
les
push
dec
xchg
mov
mov
mull
mov
cltd
bnd
xchg
gs
xchg
mov
and
inc
or
inc
sbb
pop
push
addr16
sub
fnstcw
mov
inc
fcomi
dec
rcrl
xchg
cmc
pop
adc
sbb
scas
dec
push
aam
dec
lret
idiv
jecxz
inc
int
jb
loopne
mov
ret
mov
sahf
scas
lea
mov
rorl
bound
fnstsw
xor
mov
sahf
push
ja
push
test
dec
mov
sbbb
mov
pop
testl
test
lods
cmp
sub
xchg
push
fdivrs
int3
lahf
fcomps
fistl
push
idivl
or
xchg
lcall
add
push
xchg
or
or
mov
fnstenv
push
mov
jbe
cwtl
and
hlt
sub
fwait
dec
lcall
pop
andl
mov
jb
jns
sar
dec
and
hlt
push
adc
jl
push
dec
xor
mov
xchg
and
cwtl
mov
out
or
and
and
adc
sbb
pop
mov
lret
dec
bound
mov
addr16
stc
or
sbb
pop
xor
fmuls
andl
jmp
mov
nop
rorl
adc
mov
add
xor
fdivr
jne
fcomps
stos
sub
mov
push
inc
outsl
inc
mov
pop
jmp
push
in
jno
inc
add
mov
jne
rclb
rolb
jl
lods
lods
mov
ret
call
repnz
adc
mov
icebp
je
outsb
mov
ret
mov
out
cltd
pop
je
mov
mov
push
mov
and
insb
xchg
or
es
dec
mov
andl
mov
xor
lcall
mov
int3
arpl
stos
jns
mov
popa
push
dec
dec
popa
and
inc
mov
add
data16
sub
sub
cld
mov
movsl
dec
cld
out
rorb
sub
cmpsb
dec
cmp
fistl
jg
aad
lea
les
jnp
xchg
inc
jae
adc
clc
dec
adc
popa
pusha
leave
sub
vmovss
divb
aad
pop
inc
mov
clc
movsb
inc
inc
or
call
ret
cs
push
adc
sahf
jmp
xchg
and
insl
insl
mov
movsb
cmpb
or
pop
cmp
roll
hlt
mov
xor
aaa
leave
jae
idivb
mov
rcl
xchg
lret
movsb
sub
imul
int
pop
loope
sbb
lods
fwait
movsl
mov
jne
push
repnz
stos
fisttpl
aas
paddb
add
repz
inc
repz
fisttpll
mov
test
add
scas
mov
sub
inc
pop
dec
das
mov
les
xorb
pop
add
xchg
xchg
mov
push
mov
lret
out
pop
adc
lock
cmp
push
push
loop
and
sbb
leave
push
leave
lods
gs
dec
sub
add
cwtl
push
inc
xchg
fdivl
inc
lods
cs
dec
push
aad
xor
cmpsb
jnp
add
mov
push
xchg
sub
jmp
sbb
icebp
pop
dec
adc
outsl
movsb
mov
adc
push
jl
push
xchg
lea
dec
jl
test
push
xchg
dec
je
int3
jl
idivl
in
inc
cmpl
add
push
fstps
jg
loope
ror
jmp
nop
in
sbb
jge
jecxz
sub
ss
push
mov
in
push
out
sbb
pusha
test
sub
mov
nop
cwtl
jno
hlt
aad
add
aaa
lds
addr16
jo
and
lret
inc
xchg
adc
fstpl
call
fld
js
dec
in
adc
pop
fisubrl
or
or
mov
cld
idivl
popf
pop
sbb
sbb
push
fstl
sub
arpl
push
sub
pop
pusha
and
pop
xor
push
push
popa
sub
push
ret
repz
mov
pop
daa
addr16
popa
mov
out
or
or
and
repnz
ds
lods
out
cmpsb
jg
mov
test
jge
es
pop
cmc
add
frstor
add
xor
and
iret
or
push
repz
icebp
mov
lret
or
js
loopne
mov
insl
or
mov
out
sub
add
mov
shll
dec
popa
hlt
fldz
cmpsl
ljmp
int3
stos
cmp
aas
popf
ret
push
aam
scas
icebp
dec
mov
fs
cltd
xorb
adc
aas
mov
rcl
fsubr
adc
mov
fld
jae
out
pavgb
xor
fstl
scas
ror
xchg
int
jo
inc
mov
cmc
cltd
sub
lcall
ret
lahf
ja
loope
lret
fs
xor
in
fdivrl
jbe
dec
or
dec
pop
mov
push
pop
mov
out
pop
push
bound
enter
mov
xchg
push
sub
pop
aad
fwait
icebp
pextrw
add
test
addr16
shr
cmp
rol
add
mov
push
jmp
out
sub
and
into
in
addr16
in
ret
lock
fwait
mov
lahf
in
repz
repz
ja
repz
mov
addl
sbb
pop
xchg
pop
loopne
pusha
sub
jle
stc
fiadds
sub
inc
lahf
loope
adc
ds
mov
fmuls
jae
lods
stc
jmp
dec
pop
push
lods
cmp
enter
push
mov
test
notb
ret
dec
movsb
arpl
dec
mov
and
mov
dec
testl
jl
lods
dec
push
dec
jnp
adcl
test
ret
cmc
and
mov
pop
test
jbe
cmpsb
xchg
fs
or
xchg
ret
repz
ljmp
fsubrl
xchg
xor
and
and
jae
cltd
xchg
push
ret
jge
push
push
dec
mov
testl
leave
pop
jge
dec
dec
xchg
into
mov
jo
cmp
xor
icebp
ljmp
and
repnz
jno
sub
popf
or
lea
adc
dec
jno
pusha
sub
mov
add
repnz
xchg
pop
stos
mov
sbb
dec
pop
ds
movsl
and
jmp
jg
lcall
cmp
ret
add
and
cmp
icebp
jb
imul
sarl
cmp
cwtl
idiv
mov
mov
jmp
stc
jns
ret
and
fsubs
and
mov
mov
pop
inc
sbb
push
jns
pop
das
xchg
lret
and
sti
push
icebp
mov
lds
in
fnstenv
inc
sub
cmp
xchg
sub
sub
mov
outsl
shl
mov
or
icebp
pop
mov
aad
pop
cmp
add
pop
lods
in
jnp
jbe
int3
jmp
pusha
or
xchg
dec
nop
lret
mov
daa
imul
xor
in
and
out
jns
test
push
pop
add
bnd
test
aaa
cmp
outsb
cltd
cs
pop
and
push
or
loope
cmp
dec
sbb
scas
sub
iret
dec
cmp
sub
je
adc
mov
loopne
inc
scas
ds
fiadds
sbb
jbe
inc
adc
cmc
pop
sub
popa
loope
xchg
mov
pop
jl
dec
adc
nopl
mov
xchg
pop
inc
adc
jnp
xchg
xor
cmpsl
movsl
lahf
scas
jnp
lret
pop
sti
mov
mov
loope
cwtl
cltd
cmp
mov
out
or
jp
jno
shr
andb
pop
mov
mov
inc
adc
loopne
scas
pop
mov
xor
pusha
or
ret
rolb
mov
cld
fimull
std
mov
loopne
int
xchg
movsb
pop
in
xor
test
iret
jo
orl
into
inc
mov
imul
pop
lret
int3
lea
insl
loop
pop
jle
pop
pop
lds
arpl
test
jle
add
inc
cltd
adc
std
nop
mov
loope
xor
arpl
clc
std
nop
movsb
jg
add
push
sub
aas
in
les
hlt
lds
dec
scas
enter
movsb
ljmp
notb
xchg
ror
loopne
push
mov
mov
sbb
push
lea
cmp
mov
loope
mov
mov
push
insb
cmp
mov
scas
xor
scas
push
insl
mov
sub
lret
fcomp
sub
fiaddl
insb
pushf
jbe
in
adc
pop
and
mov
repnz
gs
mov
xorl
mov
mov
add
mov
add
out
jno
popa
xchg
push
icebp
inc
mov
aam
sarb
push
ss
loopne
push
mov
push
subl
in
das
or
dec
aam
pushw
inc
nop
cmpsl
inc
loope
sub
ljmp
jmp
mov
lea
xchg
xor
mov
sbb
ss
pop
clc
aam
shr
hlt
popa
in
fistl
adc
adc
jp
ds
fwait
insb
mov
add
ja
test
dec
push
lea
addr16
pop
insl
mov
sbb
imul
mov
xchg
adc
or
mov
dec
imul
daa
pop
imul
add
pop
xor
les
mov
outsl
add
add
cmpsl
cltd
ficomps
pop
imul
dec
ss
movsb
call
shlb
pop
in
outsb
imul
xor
sub
push
push
adc
mov
xor
xchg
inc
sbb
cmp
mov
aam
lret
jbe
dec
mov
inc
add
sub
fwait
pusha
jp
lcall
cmp
pop
xchg
shlb
rclb
cmp
loope
pop
sub
mov
mov
sub
mov
loopne
push
xor
jb
fsubrl
mov
sbb
flds
pop
xchg
jno
bound
fldenv
ret
rcr
inc
out
iret
push
mov
imul
mov
jae
enter
mov
bound
mov
adc
mov
sbb
shrl
fmul
xchg
push
bnd
mov
dec
add
adc
mov
fnsave
cmp
testl
or
mov
js
sub
lret
ret
pop
loopne
and
cwtl
jp
test
pop
jb
std
mov
xor
sub
addl
and
clc
mov
add
lahf
cmp
pushf
xor
fidivrs
jge
xor
adc
aam
test
mov
fyl2xp1
jne
add
jle
jp
mov
aad
or
pusha
sahf
fs
mov
add
sbb
js
stc
dec
dec
add
xchg
jge
jl
and
js
jne
outsb
dec
xchg
mov
pop
pop
dec
xchg
pop
dec
inc
pop
jb
sbb
inc
aad
in
icebp
dec
inc
xchg
shld
cmp
movsb
cmp
popf
pop
pop
inc
adc
push
add
inc
push
mov
add
es
lds
sbb
lcall
in
mov
lahf
push
movsl
pop
sub
jge
adc
xor
sbb
loopne
sti
mov
fsts
divb
jne
xorl
cld
dec
sbb
inc
lods
mov
dec
rcl
adc
push
pop
scas
lea
push
cltd
pop
inc
xchg
gs
sbb
scas
sbb
or
push
js
adc
or
pop
mov
mov
xchg
add
add
mov
clc
and
and
push
dec
lods
inc
stos
out
pusha
push
daa
inc
lahf
add
push
sub
jo
jne
es
pop
imul
mov
pop
orl
imul
std
neg
shll
shlb
js
movsl
push
repnz
mov
aad
iret
mov
jne
jle
sbb
mov
int
xor
mov
fidivl
inc
mov
mov
cld
cmpsb
ljmp
lret
mov
mov
mov
test
gs
push
imul
sbb
jne
fisubrl
push
andb
add
xchg
aad
add
arpl
xor
inc
cmc
out
cmpsb
into
inc
mov
xchg
pushf
loopne
flds
sbb
outsb
and
cltd
or
and
addl
sbb
push
and
dec
sub
mov
in
mov
lret
movsl
mov
imul
cmp
mov
jl
cmp
shl
lea
push
xchg
mov
sbb
or
lea
lcall
sbb
cmpsb
sub
leave
out
insl
push
cmp
ret
andb
pop
mov
sub
int
jmp
imul
mov
es
imul
rcrb
dec
inc
jno
pop
adc
out
xor
pop
test
fdivl
stc
jno
std
js
fs
mov
jae
sbb
xchg
push
inc
addr16
into
ficompl
inc
shl
sarl
pop
les
imull
in
mov
and
int
sub
inc
cmp
mov
dec
dec
push
lods
jae
xor
cmp
mov
daa
into
sbb
test
adc
ficoml
out
inc
in
fcmovnu
hlt
dec
or
or
add
xchg
push
rcrb
fstps
inc
dec
cmpl
dec
push
stos
cmp
clc
pop
or
fdivl
in
jle
pop
sbb
sbb
pop
mov
es
or
jp
or
sub
adc
notb
movsb
push
mov
xchg
fimuls
cmp
adc
mov
cmp
test
push
mov
xchg
sbb
nop
jns
inc
jo
xlat
push
lods
and
out
xchg
pop
xor
mov
and
int3
mov
std
inc
sbb
mov
fidivs
adc
mov
jge
jne
dec
and
xor
sbb
sar
or
jg
lret
dec
call
sahf
mov
stos
mov
movsl
and
inc
in
movsl
mov
fwait
fwait
push
cltd
jg
mov
push
mov
fstpl
insl
cli
fistps
adc
dec
xor
sbb
jb
icebp
sbb
lea
add
cmc
lods
inc
icebp
daa
hlt
inc
mov
jae
mov
sarb
or
dec
mov
test
dec
insl
jno
lret
jne
icebp
cwtl
mov
mov
out
negb
sub
clc
mov
and
cld
loopne
push
int3
jp
shll
movsb
stos
subb
mov
xchg
or
pop
popa
test
xchg
dec
test
cmp
jb
sub
imul
xor
push
mov
xchg
std
cli
outsl
mov
testb
fsub
cltd
mov
xchg
add
jno
incb
loopne
or
mov
pop
jae
mov
jecxz
lcall
and
enter
pop
pushf
adc
je
add
es
sbb
dec
or
sbb
cmp
mov
dec
cwtl
dec
inc
cmp
int
pop
mov
or
nop
and
mov
in
sub
scas
dec
adc
shll
mov
dec
dec
std
in
loopne
out
xchg
cmp
xchg
inc
sbb
push
pop
xchg
push
fs
filds
lahf
and
jnp
mov
insl
mov
scas
adc
push
add
scas
and
add
jp
xchg
xchg
ljmp
daa
jp
loopne
jmp
sbb
and
out
les
andl
out
fld
push
jns
push
mov
out
outsl
adcl
mov
aad
mov
test
xor
sub
push
xchg
cmp
dec
icebp
stos
inc
mov
mov
outsl
mov
and
mov
adc
xchg
scas
pop
jns
scas
pushf
das
pop
lret
cmc
fcoms
xor
or
pop
sbb
fldenv
arpl
pop
popf
out
fiadds
pop
ret
fwait
xlat
insb
add
test
sbb
rolb
xchg
das
popf
pop
out
push
lahf
dec
popa
daa
daa
mov
adc
int3
cs
iret
stos
fincstp
mov
sbb
negl
pop
bound
xchg
dec
sub
aad
sub
push
dec
adc
inc
and
into
nop
lahf
cmpsb
fs
sub
mov
mov
mov
fisttps
out
test
ss
and
jge
jle
aaa
xor
sbb
adcl
push
dec
ret
cmp
pop
xchg
add
push
add
fwait
incl
lret
xor
iret
mov
sub
enter
or
sub
ds
mov
inc
mov
es
ss
xlat
mov
push
sbb
and
stc
sbb
lods
jne
cwtl
fmull
mov
out
add
and
das
mov
cld
test
cmp
lret
in
test
inc
int3
sbb
popf
ljmp
pop
and
into
icebp
mov
adc
adc
lds
cmp
imulb
ljmp
mov
icebp
subb
xlat
dec
mov
sub
fistpll
sub
fucomp
inc
cmovl
xor
lahf
or
push
incl
inc
mov
rcrb
jae
cmp
mov
jmp
pop
sbb
jecxz
or
inc
pushf
lcall
mov
ds
ret
rcl
pop
cmp
out
add
jmp
lret
das
lret
add
push
jae
inc
rcll
nop
addb
setl
movsb
xor
pop
dec
xchg
jbe
test
mov
pop
test
adc
scas
rcll
sub
iret
lock
scas
sub
pop
jg
mov
cmp
lcall
pextrw
mov
push
pop
mov
cltd
lock
clc
aad
or
test
scas
pop
or
push
pop
mov
aad
add
pop
pop
fildl
xor
dec
pop
ss
and
adc
sti
pop
mov
imul
stos
cmc
mov
je
lods
cld
and
adc
test
push
aas
cmp
mov
bound
pushf
out
cmp
dec
push
inc
ss
nop
andl
mov
cltd
mov
cmp
mov
insl
mov
push
sub
outsb
ss
sub
dec
jnp
sbb
sbbb
mov
test
ss
shl
jnp
and
mov
cwtl
cmp
mov
in
ret
hlt
adc
mov
inc
and
adc
cmp
scas
sbb
add
dec
jmp
loop
jle
mov
mov
lods
sub
xor
js
loopne
ja
add
jge
or
lods
mov
movsb
cmp
cmpsb
or
insl
int3
jnp
lahf
imul
outsl
movnti
cmpsb
pop
sub
int
popf
pop
inc
sbb
jmp
jne
daa
lods
push
loopne
ss
stc
add
fucomip
and
pop
dec
inc
mov
pop
daa
push
pop
mov
fldt
cmc
or
and
mov
stos
push
test
sub
and
mov
es
push
jle
or
xchg
jecxz
pop
pop
mov
je
or
jo
sbb
daa
ja
lcall
push
gs
mov
jmp
pop
xor
or
jge
adc
ja
fs
cmp
imul
iret
shl
outsl
sbb
pop
or
push
fwait
and
mov
and
mov
ljmp
xchg
ret
rcrb
xchg
xchg
fidivl
mov
cmc
insb
out
aas
mov
xchg
lods
sub
icebp
std
fdivs
pushf
lret
mov
bound
int
imul
lahf
dec
cld
lods
cltd
loopne
dec
xor
div
or
pop
stos
jns
int
test
add
xchg
ret
sahf
or
mov
jnp
sarb
popf
dec
pop
dec
add
cwtl
or
sahf
or
pushf
xchg
fists
cmp
or
mov
aaa
icebp
push
mov
sub
xchg
and
add
lock
mov
sub
add
fstpt
cmp
dec
cmp
cmpsb
cmpsb
xor
push
push
sbb
add
ja
jae
push
add
unpckhps
mov
leave
pop
jg
jne
dec
popa
lea
xchg
inc
push
movsb
hlt
js
and
inc
cmp
jo
sbb
arpl
or
les
inc
mov
cs
inc
hlt
fnsave
add
sub
lock
mov
adc
mov
bound
repnz
imul
pop
sub
mov
and
gs
inc
ja
cmp
icebp
cmpsl
mov
loop
push
push
sbb
leave
dec
mov
sarl
es
or
aas
lea
inc
movsl
inc
xor
or
push
loopne
ja
jno
and
mov
add
stos
mov
pop
clc
mov
test
data16
sbb
xor
mov
je
ficompl
loopne
ret
rcrl
dec
fwait
les
jecxz
sbb
inc
shll
arpl
out
pop
insl
sub
inc
subl
ret
sub
pop
dec
mov
jg
pop
dec
in
cli
frstor
pop
sub
div
in
sarb
in
jl
jge
stos
pushf
lahf
call
fs
mov
pop
add
jno
lcall
push
dec
shrb
adc
nop
movsb
sbb
dec
pop
int3
scas
or
stc
mov
inc
inc
test
dec
and
mov
ret
mov
rol
imul
cmpb
lods
mov
push
dec
aaa
sbb
xlat
cltd
pushf
pop
mov
pushl
xchg
repz
sub
iret
mov
sub
xlat
add
mov
cmp
lea
rorb
jb
pop
int
dec
xchg
push
cmp
xchg
lea
inc
out
js
cld
mov
inc
enter
sub
jp
cmp
cmpl
xor
and
fisttps
fdivs
jno
loop
fstps
mov
int3
fdivp
sbb
push
out
sub
enter
jne
xor
ret
mov
dec
cmp
lret
pop
movl
push
ja
fsubp
push
repz
mov
fnstsw
sbb
lret
fisttpll
mov
sti
xchg
mov
dec
mov
into
xor
int3
scas
aas
fmull
mov
sbb
mov
xchg
int3
sbb
xchg
jb
dec
jge
inc
lcall
xchg
ret
jb
xor
dec
jmp
jno
jo
cmp
adc
stos
mov
aas
stos
xor
mov
int
pop
mov
cltd
lret
sub
push
in
nop
mov
add
mov
cmp
or
out
xor
pop
push
mov
mov
mov
jle
mov
aas
lret
movsb
test
ljmp
repnz
and
mov
mov
pop
mov
ljmp
divb
mov
insl
gs
fwait
mov
jp
jmp
in
sbb
or
pop
out
push
xchg
push
mov
pushf
inc
add
in
or
jnp
iret
add
ljmp
test
push
insb
adcl
arpl
pop
outsb
icebp
out
call
mov
jne
es
push
cmpsb
push
mov
sub
pop
shll
push
lret
rorl
mov
aas
leave
or
ret
push
in
or
aam
push
lret
sbb
jbe
adc
insb
daa
xor
gs
shl
sahf
out
xchg
xlat
inc
jno
cmp
mov
scas
jp
push
jge
cld
cltd
lahf
mov
xchg
pop
outsb
pushf
aam
mov
inc
loopne
test
xchg
shl
lea
jmp
and
jb
mov
pop
test
sarl
pop
mov
mov
mov
mov
cmp
loopne
pop
cmp
movsb
adc
mov
and
js
in
and
je
cmpsl
addb
cmp
xor
pop
cmpsb
jl
xchg
mov
test
lock
sub
cmp
mov
cmp
pop
cmpl
rcrl
lcall
mov
loop
lock
mov
ds
lcall
inc
shrb
push
add
xchg
call
mov
negl
int
dec
xchg
push
mov
push
mov
push
movsl
pop
mov
lock
sub
dec
xor
xchg
mov
int3
inc
hlt
in
sub
adc
hlt
or
lds
xchg
sub
gs
xchg
mov
xchg
and
in
mov
data16
add
dec
cmp
dec
rorl
out
div
dec
dec
xorb
jbe
adc
lcall
xor
stc
les
and
inc
rcl
mov
pop
insl
sbb
lcall
sub
outsl
rclb
xchg
jle
fildl
xchg
or
push
xchg
lods
inc
push
push
sbb
cltd
xorl
xor
mov
adc
imul
add
insb
sbb
rcl
or
in
pop
sub
aaa
cmpsl
cmpsb
cli
jno
cmp
jp
imul
inc
and
mov
leave
popa
sub
dec
xor
push
inc
pop
push
push
and
sti
out
cltd
sub
or
movl
pop
enter
mov
cmp
out
ljmp
xor
sbb
inc
add
sub
pop
mov
xchg
push
mov
lret
lods
mov
add
add
sbb
or
test
cmp
mov
sahf
lahf
pushw
inc
inc
jns
repz
js
das
lret
inc
sbb
jno
sub
addb
outsb
out
int3
aam
mov
lods
imul
cmpsb
push
ret
jp
adc
add
sbb
shl
xor
data16
jmp
nop
scas
aad
cmp
icebp
ds
jno
ret
xchg
inc
int3
cmp
aam
ds
mov
jo
test
and
jge
mov
aam
ret
mov
lods
das
lods
vmovupd
loopne
add
sub
mov
out
xlat
in
xchg
cmpsb
fimuls
dec
fnstsw
inc
int
out
jmp
xchg
or
dec
or
pop
cmp
cmp
add
lods
js
add
sbb
xlat
and
sbb
jo
mov
scas
sub
mov
gs
push
jb
pusha
cli
cmp
pop
jmp
mov
mov
pop
and
cltd
ja
jbe
xor
in
mov
pop
mov
call
cmc
scas
loop
add
bound
push
pop
and
pop
add
nop
mov
out
pop
bound
xchg
outsb
adc
push
mov
jb
fwait
push
sub
popa
xchg
std
in
mov
mov
dec
jmp
mov
shrb
leave
cmp
cmpsl
bound
movsb
roll
mov
cmpsb
xchg
in
lcall
iret
test
scas
adc
call
out
lahf
jl
mov
jmp
rcrb
lret
aaa
out
test
stos
sbb
dec
and
inc
test
mov
sbb
push
jg
xor
xchg
test
or
ds
dec
loopne
pop
xchg
stos
gs
push
xor
dec
jb
sahf
test
out
std
push
shll
adc
loopne
out
mov
adc
and
in
or
ja
adc
lods
fldcw
push
andl
cmp
and
jno
iret
hlt
icebp
cmpsl
mov
xchg
push
push
mov
imul
mov
outsb
push
ja
movsb
in
arpl
dec
rclb
pusha
out
sub
mov
popa
daa
test
repnz
add
pop
scas
addr16
sub
mov
push
outsb
subl
loopne
hlt
stc
lret
hlt
pop
pop
push
in
inc
xchg
cmpb
xlat
ret
inc
or
adc
cli
mov
jns
repnz
xor
lods
not
arpl
repz
dec
outsl
fwait
adc
jge
ficompl
jno
movsb
popa
decb
out
dec
loop
fs
outsl
xor
movntps
sbb
cmp
movsb
sarl
pop
or
pop
stc
daa
sbb
mov
ss
inc
test
and
gs
shll
push
fsubrs
xchg
iret
push
lds
or
ficoml
shr
clc
and
lret
xor
test
and
nop
adc
xchg
sbb
mov
adc
mov
jle
mov
test
dec
rorb
xchg
xchg
imul
or
inc
mov
inc
std
sbb
aas
inc
and
leave
cltd
je
or
popf
or
aad
out
sbb
aad
stos
rorl
and
mov
bound
stc
push
sub
ss
out
ss
sub
sbb
out
pop
mov
mov
cmp
mov
icebp
dec
setl
dec
out
sub
push
repz
cld
movsb
add
stc
stc
subb
shlb
aas
ljmp
pop
sbb
add
mov
pop
mov
mov
xor
jle
es
sbb
inc
fnstsw
xor
cmpsb
fdivs
mov
cwtl
inc
in
aas
dec
xor
repz
fsubl
adc
jecxz
push
xchg
cltd
fsub
mov
roll
or
orl
idivl
pushf
hlt
push
pop
aad
cmp
jo
push
pop
test
jecxz
push
insb
lds
std
adc
mov
push
mov
sbb
mov
jne
inc
fidivs
pusha
jecxz
pop
ljmp
mov
mov
bound
fdivrs
sub
movsb
mov
loope
outsb
push
fwait
inc
mov
lahf
lock
movsl
js
and
in
pop
vorps
sub
xor
lock
sub
int
stos
or
lods
lahf
jne
in
add
movsb
shll
sub
push
cmp
add
add
pop
out
jle
xor
test
mov
movsb
les
mov
dec
and
xor
lods
sub
stos
and
push
scas
lods
daa
cmc
gs
mov
das
dec
push
inc
jl
adc
bound
push
and
jb
push
outsl
cli
mov
fnstenv
pop
lds
add
sub
fcomps
mov
mov
enter
push
or
stc
pop
into
jg
jmp
and
or
push
cmpsb
xchg
clc
faddl
sub
mov
dec
xchg
cld
cld
jns
iret
loope
pop
push
jb
mov
mov
or
sbb
or
sub
push
cwtl
push
cmp
shl
iret
mov
fcmove
lret
jl
xor
xor
push
orl
adc
mov
addr16
adc
mov
push
aas
cmpsb
cmp
clc
cmp
sbb
decb
cmp
fwait
ljmp
popa
into
xchg
fs
add
je
call
push
testb
add
inc
or
andb
lods
xor
bswap
fbstp
cs
add
out
jge
mov
pusha
out
mov
jl
stc
imul
inc
cli
sbb
jge
ss
mov
inc
out
xchg
mov
or
dec
cmpsl
mov
les
xchg
adc
xor
test
rcr
jge
cmc
cmp
dec
mov
mov
xor
add
mov
mov
ret
dec
cmp
xchg
js
adc
xor
inc
and
pop
dec
pop
pop
rolb
pop
push
jno
mov
scas
fcmovnb
leave
roll
data16
pop
pop
loopne
jmp
adc
sbb
in
or
stc
cmp
incb
lret
repnz
outsb
pushf
jle
pop
and
test
jecxz
mov
mov
dec
in
movsl
inc
mov
jmp
rcll
int
js
adc
pop
jns
dec
mov
xor
and
pushf
xor
enter
xlat
sub
popa
pop
mov
popf
dec
in
mov
jp
out
shl
mov
xor
mov
jne
scas
pop
pop
aam
filds
dec
mov
fisttps
mov
hlt
cmpsl
sti
fadds
jg
sub
pusha
pop
mov
dec
loope
iret
rol
jecxz
sbb
mov
iret
int3
inc
cli
inc
fadds
ja
push
lret
rcrl
pop
test
inc
jecxz
aas
gs
popf
cmp
add
cmp
outsb
push
pop
sahf
stc
movsl
mov
cmc
jecxz
xor
sbb
lahf
int3
inc
adc
rorb
mov
addl
leave
xor
filds
insb
inc
adcb
pop
bound
push
adc
je
or
lods
jp
call
rorl
or
inc
out
xchg
sbb
or
fcompl
xorb
insb
xchg
adc
jp
pop
stc
and
in
xlat
sbb
fidivs
iret
jbe
or
or
icebp
jl
ja
xchg
clc
iret
out
and
mov
adc
jo
jo
adcl
into
mov
xor
jl
jl
mov
sti
icebp
mov
or
cmp
lds
mov
lds
stc
sbb
xacquire
sub
adc
stos
inc
push
inc
mov
inc
sub
mov
test
mov
xchg
call
push
fcoml
bound
imul
fucomp
jae
cmp
ss
out
fldenv
mov
mov
cmp
sbb
sti
xchg
mov
xchg
adc
ret
pop
xchg
mov
mov
sti
sbb
sti
fadds
jb
les
in
pop
aad
inc
cwtl
push
bnd
sbb
das
sub
or
cld
data16
fcomp
push
xchg
pop
jge
add
cli
pop
popa
and
sbb
fs
outsl
lcall
mov
pop
push
cli
cmp
and
mov
jle
ret
or
stos
lea
mov
cmp
loopne
dec
ror
xor
mov
mov
cmp
jp
in
sti
lcall
xchg
mov
and
xchg
jmp
jge
sub
push
fldcw
repnz
outsb
fcoml
filds
xchg
shrb
mov
sub
push
cltd
orb
xchg
inc
dec
cmp
or
call
subl
gs
insl
cmp
cmpsb
dec
das
fcomi
negb
stc
mov
jmp
xor
lods
hlt
lods
rcr
jo
cmp
lret
xor
dec
int
cli
add
stos
in
pop
push
fmuls
pop
int
add
data16
push
por
in
mov
out
lea
or
iret
mov
test
repz
out
stos
sahf
loope
imul
jp
push
jae
add
pusha
pop
and
data16
or
jae
adc
cmc
outsb
lds
xchg
jno
fwait
and
scas
sbb
jns,pt
adc
jl
xchg
xlat
addb
lret
stos
sbb
jb
jno
inc
jle
sti
pop
int3
push
and
push
dec
mov
add
jae
arpl
push
xchg
push
add
arpl
push
ret
scas
in
lods
imul
data16
les
or
sbb
push
mov
sti
adc
or
jecxz
jo
add
mov
vmovupd
pusha
adc
int
ja
and
nop
pushf
and
lahf
inc
add
inc
insb
pop
arpl
cmp
int
mov
pop
fistpll
xchg
lods
sahf
and
jns
test
add
stos
mov
in
xor
shrl
adc
push
les
ret
insb
pop
dec
aad
add
push
jae
out
lock
adc
mov
aas
into
in
adc
and
xchg
mov
jmpw
pop
cmp
push
and
cmp
movsl
cmp
xchg
das
xlat
mov
outsl
ss
pusha
aaa
cmp
je
test
mov
mov
xchg
inc
pop
imul
psubb
push
or
ret
data16
movsl
movsb
jle
inc
fadds
xor
cs
loop
add
xchg
push
clc
xchg
pop
hlt
ret
cmc
sahf
xchg
repz
nop
dec
lock
cmpsb
inc
stos
insl
pop
cmp
shlb
fs
mov
lret
or
add
sbb
jmp
or
cmp
js
mulb
inc
inc
jg
and
sbb
pop
push
inc
pop
mov
lds
adc
sbbl
sub
pop
outsb
gs
and
out
imul
arpl
mov
push
sbbl
xlat
dec
xchg
mov
hlt
or
mov
xchg
pushf
lods
push
dec
in
mov
add
int
ljmp
ret
lcall
loop
add
inc
daa
incl
stc
sti
or
xchg
ret
sbb
add
test
lahf
pop
dec
jno
add
out
push
add
out
xchg
cmp
pop
add
fcoml
filds
push
dec
mov
pop
popf
cmp
aad
shrb
mov
loopne
ret
xorl
sahf
scas
cmc
mov
jae
sub
fnstcw
xchg
jg
dec
mov
add
arpl
sti
cs
inc
iret
xor
xchg
add
sbb
dec
cwtl
and
loope
outsb
cmp
aam
sarb
js
jno
rorl
jecxz
sbbb
lea
insb
sub
dec
push
fsubrp
inc
cmp
inc
inc
mov
incl
adc
or
or
fsub
icebp
mov
arpl
and
lea
dec
fidivrl
sub
and
scas
push
lods
scas
or
adcl
push
fsubrp
imul
jo
pop
push
sbb
push
ljmp
lea
inc
jns
adc
mov
sub
push
xor
xchg
data16
dec
jb
mov
imul
cmp
sub
sbb
xor
cmc
lcall
into
xchg
mov
dec
mov
mov
jne
enter
sar
es
pop
imul
ret
aad
push
popf
gs
mov
or
iret
repz
sbb
aas
dec
mov
outsl
pop
mov
arpl
mov
jnp
stos
jo
mov
xor
sti
mov
lea
cli
sarb
aaa
iret
or
es
jp
sub
out
bswap
mov
jb
mov
loope
scas
xchg
xlat
pop
inc
mov
fists
stos
push
xorb
sti
leave
adc
fwait
mov
adcl
movsl
sbb
mov
jge
and
mov
add
jl
cs
or
nop
loop
cmp
and
jmp
xorl
mov
cmp
inc
cltd
in
xor
pop
in
push
mov
mov
dec
fisubl
std
lds
stos
mov
pop
sbb
sub
movsb
movsb
mov
push
ljmp
aaa
arpl
fnsave
push
push
movsl
pop
cmp
mov
jae
sahf
repnz
sub
jmp
insl
mov
enter
loope
std
scas
fistpl
mov
lods
sbb
mov
add
js
push
push
stos
inc
sub
insb
sub
subb
cmp
icebp
lock
sahf
fsubl
xchg
xchg
int
repz
add
pop
lahf
jl
mov
pop
std
jle
adc
daa
cld
pop
into
mov
inc
sbb
push
or
mov
mov
hlt
mov
add
sbb
adc
cmp
fildll
int
test
js
xor
mov
push
cmp
push
js
jns
es
cmp
cmp
jbe
inc
out
mov
add
lea
lcall
jbe
cmp
rcll
sub
mov
stc
inc
cltd
cmp
cmpsl
fldenv
lcall
mov
inc
sub
addr16
cmpsb
sarb
mull
rolb
jecxz
push
mov
push
cmp
aad
xchg
aaa
std
out
xchg
test
lcall
adc
jne
xor
push
xchg
dec
out
xchg
xchg
daa
cmp
or
push
mov
lret
adc
cmpsb
mov
push
adc
ds
mov
xchg
stos
mov
movsl
mull
lret
pop
or
inc
ja
xchg
sti
fwait
inc
packsswb
ljmp
cmc
pop
scas
out
imul
cwtl
xlat
pop
aaa
iret
fwait
scas
lret
sbb
bound
dec
dec
test
mov
dec
xchg
mov
out
and
push
inc
and
inc
mov
aam
fildl
les
and
cltd
sar
ds
fstpt
adc
insb
add
inc
push
stos
sbb
and
imul
mov
lret
sbb
lret
lahf
sbb
loopne
imul
mov
mov
sub
push
ljmp
pop
call
mov
sub
leave
stc
mov
in
mov
loop
cmc
push
pop
stos
sbb
pop
add
test
sub
jno
jl
in
imul
sub
bswap
enter
mov
test
rcl
inc
jg
aaa
pop
nop
push
jne
stc
sahf
scas
es
aam
lock
js
mov
or
pop
and
scas
shll
pusha
inc
cmp
ret
add
or
bound
mov
mov
neg
lcall
inc
push
orl
mov
jecxz
push
xchg
and
inc
or
inc
push
in
sbb
adc
mov
outsl
lret
sub
push
sbb
cmp
sbb
aaa
xor
mov
inc
loopne
mov
or
and
adc
sbb
insb
cmc
rol
jae
and
cmp
popa
jp
sbb
cmp
je
out
lret
xor
cs
decl
add
test
das
cmovae
mov
pop
cmp
data16
push
aam
mov
cmpsb
push
stos
inc
adc
cmp
push
dec
rorl
push
jo
mov
mov
jne
addr16
movsb
stc
dec
data16
mov
loopne
sbb
imul
mov
clc
push
aaa
inc
sub
outsb
fbstp
xor
lea
or
adc
aas
scas
mov
rorb
mov
add
or
insl
inc
xor
jg
inc
loopne
fstpt
out
push
fcoms
dec
imul
nop
and
mov
dec
test
jg
adc
sub
push
push
jo
outsl
adc
push
xor
out
push
sti
scas
imulb
xchg
or
pop
sbb
mov
sub
sub
pop
xor
adc
add
rorl
push
in
pushf
push
into
xchg
or
sbb
xor
xchg
mov
xchg
adc
xchg
incb
insl
aas
and
les
jge
out
lea
jne
scas
and
jnp
push
std
out
push
and
aam
sbb
sub
push
and
or
clc
sub
repz
lret
nop
xchg
outsl
stos
inc
jp
cmovle
enter
pop
rclb
mov
outsb
fs
iret
enter
cmpsb
in
pop
sub
scas
add
adc
test
mov
pop
or
add
add
xchg
pop
cwtl
fsubrl
rcrb
cwtl
mov
ffreep
add
xor
sbb
bound
popf
inc
jbe
push
test
es
push
lea
jo
xor
and
and
add
lds
mov
in
out
call
xor
dec
scas
pop
das
jmp
xchg
rclb
fcos
nop
jns
cmp
or
into
xlat
test
cmp
xchg
mov
mov
xchg
adc
lds
std
xchg
push
sub
maskmovq
divl
aas
dec
jne
and
mov
outsb
loope
mov
test
adc
pop
mov
icebp
test
jle
cld
push
test
jnp
push
mov
adc
or
sbb
leave
in
pop
ja
shlb
imul
or
mov
jle
mov
dec
mov
test
cmp
ljmp
lock
xchg
fs
enter
and
repz
pop
repz
cmpsb
sti
xchg
je
xor
call
movsl
mov
mov
sub
in
mov
outsb
adc
and
inc
test
test
das
enter
dec
dec
xchg
bswap
sub
mov
jl
loopne
sbb
xchg
test
rcl
or
mov
xchg
data16
jmp
cmc
and
stc
dec
mov
mov
out
inc
jle
and
xchg
inc
aad
hlt
loop
std
andb
adc
add
in
pop
les
mov
xchg
add
adcb
call
mov
push
xlat
mov
jp
add
cli
ret
test
ret
in
push
addr16
movsb
fiadds
iret
das
test
outsb
or
cltd
jns
out
or
cs
or
push
push
cli
xchg
and
insb
pop
out
test
enter
jne
sbbl
les
in
add
rep
leave
mov
sar
mov
sub
arpl
or
cmpsb
adc
mov
pusha
push
fdivr
xlat
push
dec
cmpsl
and
mov
xchg
loop
pop
or
sub
testl
pop
scas
sbb
and
jmp
inc
fs
hlt
rcll
inc
scas
into
cmpsb
jmp
mov
or
insl
inc
scas
fiadds
sub
push
sti
inc
les
jecxz
repz
imul
out
add
mov
add
mov
sbb
adc
pop
stos
pop
and
ret
aad
pop
mov
jno
nop
sub
ret
in
sub
popf
cld
aad
jmp
stos
jo
jge
cmp
jae
push
test
xchg
daa
pop
inc
popa
popa
icebp
es
pusha
mov
fisttpl
add
adc
subl
sbb
cmp
add
adc
adc
out
lods
mov
imul
ret
cmpsl
sbb
cmp
jle
lret
movsb
popa
imul
es
insl
mov
mov
fucomi
push
jle
inc
imul
mov
test
xchg
js
cli
orl
xchg
dec
jb
insb
jl
add
ficomps
mov
aas
pop
pop
mov
cld
push
sbb
xor
lds
lcall
mul
pop
pop
and
xchg
cmpsb
movsl
movsb
pop
in
mov
dec
decb
mov
aad
sub
cmp
int3
mov
je
sub
push
xor
lds
push
or
jne
movsl
je
dec
xchg
fs
mov
pop
sbb
leave
jbe
daa
xor
cs
lock
movsl
mov
sahf
sbb
pushf
cmpsb
xchg
push
or
xchg
mov
in
popa
mov
lds
adc
fimuls
mov
mov
lcall
sahf
adc
xor
lret
adc
jbe
push
fmull
xchg
add
lcall
out
dec
sub
jp
call
sub
adc
ret
fisttpll
and
pusha
xlat
lret
jns
jb
xchg
push
shrl
sbb
int3
mov
adc
adc
mov
movsb
jo
aaa
sbb
pop
scas
sub
repz
sub
adc
xchg
insb
adc
mov
inc
int3
mov
bound
mov
sahf
into
pop
push
pop
das
inc
call
pop
repz
dec
pusha
popa
cmp
sarl
sbb
loop
pop
lods
jmp
jns
push
ss
loopne
fwait
call
push
into
jae
addr16
ja
lods
shll
addl
ja
xor
jmp
std
xchg
pop
fs
int3
jg
push
jnp
jmp
and
and
push
rcl
nop
jge
xor
clc
rorb
fimuls
and
rorb
fcomps
push
push
repz
pop
scas
mov
lea
popl
xchg
adc
mov
cmp
rclb
pushf
push
loopne
cmp
in
bnd
mov
les
push
pushf
lock
and
mov
mov
add
xchg
pop
adc
test
pop
fptan
leave
cld
and
inc
into
dec
pop
push
jne
jle
jo
push
cmp
repnz
xor
icebp
xor
pop
jno
popf
or
iret
sub
mov
insl
shlb
inc
fistps
adcb
test
xchg
adc
cmp
lods
stos
xchg
adc
inc
hlt
adc
xlat
ljmp
xchg
movsb
and
inc
sarl
loopne,pt
test
add
pop
xchg
sbb
jb
push
sub
out
test
lods
stos
popa
push
dec
cmpsl
mov
cmp
flds
inc
cmp
iret
mov
add
xchg
mov
adc
pop
movsb
movsl
lock
adc
es
dec
or
loope
or
jbe
mov
cmp
shll
hlt
inc
cs
push
mov
sub
push
lret
push
xchg
call
mov
mov
out
les
or
cmp
jg
push
cmp
mov
dec
pop
pop
jmp
lock
bound
fisubs
dec
push
movq
add
in
push
addr16
notrack
sbb
push
shr
sbb
xor
or
je
and
sahf
lahf
xchg
dec
xor
in
jg
aaa
adc
sub
insb
cli
or
es
pop
or
ficomps
iret
mov
mov
insl
mov
mov
mov
push
xchg
adc
mov
testb
inc
cmpsb
mov
or
push
pop
inc
in
dec
fwait
ret
cmp
scas
pop
pop
pop
rcr
mov
pushl
xchg
fnstenv
mov
scas
in
std
enter
adc
inc
mov
push
add
lea
into
and
fdivrl
push
stos
push
stc
aaa
add
ds
push
sub
into
call
pop
sti
mull
pop
fisttpl
dec
fs
jmp
andb
xor
aaa
push
jecxz
add
fsubrl
scas
xor
test
jbe
pop
lock
popa
addr16
test
movsb
call
scas
mov
lea
ja
addr16
push
cmpl
and
aam
lods
js
inc
xor
int
push
mov
icebp
sahf
rcll
insl
jno
xchg
push
add
cmp
mov
mov
sub
arpl
push
or
loopne
jbe
mov
fstps
xor
xchg
decb
jmp
push
sub
aad
or
idiv
daa
int3
cmp
pop
pop
xchg
lods
movsl
dec
jge
mov
mov
cld
mov
in
mov
lahf
add
or
xor
xchg
call
dec
out
adc
ret
dec
shll
mov
inc
sbb
lcall
jg
dec
scas
mov
dec
jns
out
and
pop
ret
mov
xor
popa
shlb
xchg
aam
lcall
lcall
das
gs
stc
xchg
push
mov
call
scas
cmp
sub
ret
cmp
inc
loop
dec
aam
push
sbb
repz
jmp
pop
pop
inc
lcall
xorl
data16
xor
adc
shlb
cmp
rcr
test
mov
rorb
sub
or
cmp
xchg
stc
push
sbb
push
lock
sub
xchg
mov
mov
jno
les
leave
popf
leave
nop
movsb
cmpsl
jle
jl
lods
dec
xchg
dec
add
mov
outsl
jg
sub
jmp
xor
push
ret
xlat
inc
repnz
add
std
jno
jle
jbe
out
int
dec
xchg
sbb
adc
push
js
cmp
add
clc
mov
in
mov
call
icebp
push
incl
jmp
aad
lret
int3
mov
xchg
arpl
push
add
std
cld
lret
mov
push
nop
pushf
sub
popa
or
ret
arpl
out
outsb
inc
push
inc
std
stc
les
lcall
inc
adc
sti
push
or
inc
jne
movsl
outsl
cmp
cltd
pop
mov
pop
or
push
xor
adc
out
mov
enter
pop
xchg
es
adc
insb
xor
jbe
push
imul
fwait
sub
xchg
adc
pop
mov
cltd
aaa
outsl
ja
stos
rcrl
dec
sub
ret
mov
mov
lcall
in
push
or
inc
mov
std
dec
loope
cmp
jne
shlb
lea
mov
stos
lea
sti
movsl
scas
roll
push
mov
mov
xlat
inc
mov
fsub
and
movsb
mov
scas
jl
hlt
int3
mov
push
mov
arpl
lret
lahf
jl
andl
jns
iret
lret
ja
ds
jecxz
fstpt
ds
push
xor
dec
cmpb
dec
sub
movsb
mov
lds
sbb
and
in
lods
in
sbb
clc
mov
jae
or
test
sub
lods
and
and
mov
mov
cmp
add
push
ret
lods
test
push
imul
or
insl
data16
push
ret
mov
in
jb
scas
bound
add
jns
stc
outsb
add
and
dec
pop
or
scas
sub
push
xchg
pop
cs
cltd
jno
aad
test
mov
xchg
je
xchg
out
add
sbbl
inc
xchg
mov
jl
xchg
or
mov
das
ret
push
scas
lds
mov
out
and
in
int
je
pop
ds
adc
out
ffreep
or
out
sub
nop
sarl
and
jnp
mov
aad
fldcw
dec
fs
out
or
repnz
sbbb
test
mov
leave
call
ficomps
loope
enter
frstor
mov
mov
jecxz
rorb
mov
loop
aas
cmp
idivb
cs
xlat
or
push
push
xchg
ret
vpacksswb
mov
dec
outsb
icebp
jno
cmp
push
sbb
fld
lock
std
push
lcall
mov
sub
jp
jle
ffreep
inc
push
inc
jbe
pushf
or
push
sbb
xchg
mov
lods
xchg
jnp
push
decb
push
push
inc
jb,pt
mov
loopne
mov
jne
dec
adc
jecxz
les
icebp
repz
push
xor
jbe
cmp
adc
rcll
in
add
mov
cmpsb
sub
movsl
nop
inc
jbe
pusha
sbb
mov
and
pop
dec
fnstenv
ja
into
subb
jnp
pop
adc
stos
mov
call
ss
aam
ret
ss
mov
ret
and
cmpsl
rcll
mov
ljmp
jmp
mov
loopne
lahf
mov
test
inc
mov
add
xchg
jg
repnz
mov
jmp
and
stos
jp
inc
dec
xor
jns
cmp
cmp
xor
imul
test
ljmp
adc
mov
xchg
xchg
pop
adc
loope
fcomip
sbb
orb
int
movl
mov
mov
mov
fidivrs
into
adc
enter
push
stc
jb
in
cmp
jp
pushf
pushl
add
mov
popf
call
xorb
call
fldt
fs
insb
pop
stos
imul
test
sub
inc
cmp
outsl
add
in
movsl
add
mov
stc
jmp
das
jbe
pop
in
push
adc
mov
add
xchg
dec
push
inc
adc
pop
xor
test
std
or
cli
sub
fwait
sti
ljmp
pop
int
icebp
adc
test
mov
mov
and
stos
pushf
ss
icebp
cmp
cmpsb
sub
icebp
fcom
sub
aaa
in
xchg
pop
pop
push
mov
gs
cmp
fnstcw
pushf
xchg
inc
cld
call
push
lret
bound
inc
std
cmp
aad
fldt
es
adcw
call
sub
popf
pushf
pop
in
push
xchg
sub
jg
in
mov
std
pop
mov
fistl
test
subb
sbb
int
sub
sub
mov
dec
cmpsb
jno
out
mov
test
fwait
push
mov
imul
out
add
pop
or
mov
outsl
xchg
lcall
push
enter
andb
aas
adc
aad
daa
invd
out
sahf
roll
pop
test
mov
mov
adc
mov
ss
ds
divl
imul
push
jle
sbb
fbstp
mov
fdivs
fldenv
sbb
pop
std
jecxz
out
dec
gs
out
pop
test
adcb
int3
cmp
test
arpl
cld
jo
jp
movsl
cwtl
adc
xchg
push
xor
test
ss
mov
add
push
mov
jecxz
ss
icebp
fwait
out
or
aas
xor
adc
bound
mov
and
fmulp
jnp
jnp
fistpl
imul
adc
in
addr16
adc
adc
fs
push
sbbb
cmc
fs
adc
sti
lea
test
mov
xchg
push
or
cli
hlt
in
loopw
adc
adc
mov
imul
mov
sub
push
sbb
and
jle
mov
int
mov
cmpl
inc
out
mov
add
mov
adc
mov
pop
pop
cs
loop
loope
xchg
cmp
ss
adc
cld
hlt
or
mov
push
test
flds
mov
mov
out
mov
montmul
cmpsb
inc
dec
or
mov
sub
mov
popa
dec
std
das
out
mov
loop
addr16
lret
in
lds
add
imul
repnz
jle
mov
or
dec
mov
out
lods
ficompl
xor
sub
jo
test
sub
dec
mov
push
push
jl
leave
icebp
insb
mov
mov
dec
jg
das
inc
sbb
cmpl
sub
mov
pop
ljmp
in
in
and
mov
loopne
add
in
sahf
jl
sbb
mov
stc
outsl
pop
add
xlat
les
lds
imul
pop
lret
mov
push
mov
mov
pop
aad
loop
sub
daa
cmp
test
inc
mov
mov
xchg
mov
ffree
or
int
push
imul
jb
cwtl
mov
and
pop
out
push
lcall
test
jmp
xor
arpl
cmp
leave
add
inc
popf
mov
cmp
aaa
lret
ss
repz
pop
mov
ret
dec
bound
sub
bound
cmp
fimull
jno
and
mov
ljmp
stos
cmp
cmpsb
sub
adc
aam
mov
add
dec
pop
xchg
adcb
cmp
xor
sub
cli
in
push
aas
jl
and
pop
cmp
and
dec
insl
xor
cmp
mov
fcompl
sub
push
inc
test
loope
jnp
hlt
mov
inc
outsb
movsl
fwait
inc
push
mov
jne
xor
in
ss
bound
das
adc
dec
out
mov
xor
and
insl
les
jp
mov
negb
gs
cmpl
nop
mov
pop
pop
sti
xor
ret
lahf
fwait
sbb
pop
js
out
aas
cmpsb
inc
ljmp
stos
add
imul
insl
cmpsb
mov
shl
jne
mov
cmp
add
push
pcmpeqw
decb
cltd
insl
or
and
std
jmp
push
push
dec
sbb
test
shlb
cld
pop
sub
rorb
mov
rorl
jns
jmp
imul
ret
sub
inc
int3
aaa
mov
lds
mov
idivl
test
adc
cmp
jge
gs
inc
add
cmp
inc
aad
shrb
sbb
dec
jg
test
xchg
lcall
lock
adc
xor
or
lahf
mov
andb
xchg
ret
xor
mov
fs
daa
aaa
lret
jmp
or
jb
scas
popf
sarl
fsts
dec
loop
jl
imul
je
call
hlt
orb
call
sub
push
sahf
sub
cmpsb
or
sbb
add
mov
addr16
fwait
and
outsb
cmp
pusha
or
pop
test
add
stos
push
adc
out
out
ss
in
adc
or
pop
ljmp
sarb
sbb
in
inc
enter
adc
push
cmp
xor
mov
adc
mov
icebp
mov
add
dec
pop
sbb
fnstenv
hlt
fwait
jg
xchg
push
cmp
lret
or
mov
pop
mov
dec
mov
inc
shll
sbb
mov
adc
je
jmp
dec
std
fdivs
cwtl
push
fldcw
clc
dec
push
xchg
arpl
je
inc
or
xchg
jne
mov
das
test
pop
lods
rolb
jg
fadd
dec
int3
adc
out
sahf
push
jne
adc
push
test
xchg
out
pop
arpl
add
push
cmp
xchg
addr16
and
fucomp
jne
xor
push
cmp
int
xchg
imul
xchg
gs
icebp
mov
stc
movsl
mov
into
repz
inc
dec
dec
in
test
xchg
scas
lds
dec
sbb
mov
jmp
sub
adc
inc
mov
add
cmp
push
jle
adc
neg
xchg
roll
and
adc
mov
sbb
mov
addb
jb
mov
out
aam
dec
or
loope
push
pusha
xchg
mov
jle
dec
add
pop
mov
jp
sub
scas
inc
push
jle
cs
mov
fisttps
mov
mov
jecxz
ds
xor
dec
dec
or
mov
das
mov
pop
js
xor
jae
add
out
lods
lea
ss
xchg
mov
shr
fwait
jo
mov
xor
enter
jae
pop
outsl
jo
fwait
insl
jae
fbstp
sbb
stos
test
jo
ret
and
and
jg
outsl
push
movsl
fisubs
sub
sbb
lea
outsl
mov
lea
lock
bound
mov
imul
mov
cmpsb
cmp
xor
cs
ret
in
add
cmp
pop
or
dec
outsb
mov
mov
mov
adc
test
sub
mov
add
sub
xor
test
push
hlt
push
mov
pop
jb
mov
push
popa
hlt
rorl
repz
pushf
add
lret
lods
in
mov
adc
push
aam
test
mov
dec
in
call
xchg
adc
in
pop
divb
mov
lea
sub
xchg
idivb
sbb
aaa
add
and
imul
leave
and
xchg
enter
scas
popf
bound
ficoms
or
or
push
cs
sbb
mov
xchg
jae
and
xchg
je
sbbb
sbb
and
imul
clc
jg
mov
fstps
rcrl
mov
or
cmp
jae
xor
push
bound
sub
cwtl
shl
je
int3
pop
mov
rolb
lret
cwtl
adc
mov
and
pop
out
subb
push
cmpsl
popa
aaa
xor
out
std
mov
shrb
xor
mov
add
leave
push
test
lock
test
lret
jns
rcpps
bound
stc
dec
and
ret
ds
cmp
add
xor
js
inc
cmc
xor
loop
add
das
and
pusha
push
out
mov
xchg
mov
movsl
jne
popl
inc
clc
mov
xchg
mov
jno
daa
xor
or
push
mov
adc
gs
mov
dec
out
iret
aam
cld
aas
and
imull
outsl
xor
pop
mov
out
push
outsb
add
xchg
xor
mov
fwait
in
pop
repz
mov
sbb
orl
jo
mov
not
mov
loopne
xor
add
fsubrl
xchg
mov
shlb
pop
test
fists
mov
or
fadds
sti
hlt
insb
sbb
push
cmc
xor
cmp
pop
ror
stos
xchg
aam
aam
or
mov
loop
fcomps
shll
nop
daa
cmc
hlt
jmp
je
pop
xchg
int3
insb
cmp
clc
in
mov
imul
mov
int3
pop
jo
cmp
pop
mov
ds
dec
aam
sbb
add
aad
add
inc
out
fists
xor
ljmp
mov
movsl
lock
arpl
in
push
sub
lods
jnp
cmp
xor
outsl
ss
jnp
and
aam
rclb
dec
xor
push
xor
push
add
loope
jae
sahf
mov
mov
inc
adc
hlt
push
popa
mov
xchg
and
scas
sub
loop
and
dec
inc
faddl
cmc
jbe
lret
cs
stc
cmp
imul
sub
fsubl
out
jge
add
iret
loop
jo
mov
xor
popf
lods
or
mov
inc
or
out
or
icebp
adc
push
cmpsb
je
mov
inc
and
das
ffreep
mov
mov
xchg
and
sbb
ret
xchg
add
jg
and
dec
nop
xor
movsb
adc
sub
std
outsb
div
mov
xchg
fs
xchg
lcall
addr16
pushf
push
jl
or
cbtw
popf
adc
gs
dec
adc
jbe
mov
pop
test
arpl
dec
adc
out
sbb
push
jno
nop
xor
xor
add
mov
loop
push
inc
xor
mov
sbb
cmpsl
cmpsl
add
shll
mov
mov
fstl
adc
cmpsl
lea
and
lods
out
cltd
cmp
jmp
xlat
mov
insl
or
mov
sub
cs
mov
sub
inc
repnz
pop
mov
inc
mulb
dec
mov
and
test
mov
cwtl
or
mov
and
mov
and
mov
cmp
outsb
stc
call
rcrb
pusha
in
insb
ss
and
hlt
mov
cmp
sub
jno
hlt
push
jno
add
ret
in
sahf
in
and
fwait
lds
adc
jnp
lea
pop
js
mov
gs
aas
test
aaa
rcrl
push
sub
cmp
mov
or
jnp
xchg
jecxz
popf
das
xchg
xchg
icebp
cmp
fldt
xchg
fs
inc
pop
scas
sbb
scas
mov
and
or
cmpb
push
loop
sbb
ja
in
jnp
lods
lahf
notb
sbb
push
mov
out
mov
push
mov
pop
out
lods
cmpsb
push
fcmove
test
pop
rcrl
ret
cmc
ljmp
sub
fsubrs
lahf
push
xor
xchg
mov
call
mov
lds
xchg
shl
adc
dec
add
sbb
jns
add
mov
and
sub
xchg
dec
inc
push
dec
sbbb
push
jl
mov
and
addr16
mov
ja
lods
pop
push
sbb
repz
movsb
mov
fcoml
int3
out
mov
aad
xchg
dec
mov
add
ds
mov
xchg
popf
inc
jmp
clc
sbb
sub
inc
mov
int3
and
mov
xor
adc
movb
scas
jns
pop
mov
xor
bound
inc
inc
popf
mov
cmp
sbb
cmp
mov
dec
pop
jae
iret
stos
cltd
mov
xor
dec
sub
jnp
pusha
ds
stc
shrb
or
mov
cmpsb
jno
int3
lea
stos
sbb
xchg
cmp
sbb
test
add
xchg
xor
xlat
pushf
push
jp
sub
mov
jne
dec
sub
popa
jg
jl
xorl
dec
scas
xchg
jb
jae
repz
inc
cltd
out
xchg
jo
push
add
pop
decl
jb
inc
sahf
jp
sti
add
jp
in
repz
mov
stc
jmp
jmp
add
jle
test
pop
data16
insb
insb
and
mov
mov
jne
sti
xchg
cmp
add
loopne
xor
inc
push
orb
data16
shlb
fstpl
sbb
je
mov
js
jmp
mov
xrstor
fwait
rcll
cmp
adc
xchg
rclb
fiaddl
pop
and
pop
dec
jns
jecxz
cld
cmp
cmpsl
out
decb
insl
outsb
aam
add
popf
sbb
arpl
movsb
add
and
cli
sbb
out
mov
rorl
xor
lds
stos
push
das
outsb
into
stos
add
push
int3
xor
outsl
and
sub
mov
hlt
pop
mov
rdmsr
or
test
sbb
mov
adc
pop
mov
movsb
xchg
jmp
fwait
inc
cmc
mov
sub
and
jne
out
dec
mov
mov
pushf
or
cli
add
mov
test
xor
xor
loop
addl
dec
mov
dec
mov
sbb
and
enter
js
leave
push
pop
aad
je
fwait
or
xor
mov
cli
sub
ds
sub
adc
fs
shll
mov
andb
and
std
test
jl
add
inc
add
js
lahf
gs
or
ret
fistpll
and
dec
adc
pusha
mov
mov
into
mov
test
adc
pop
mov
pop
add
jp
insl
icebp
gs
pop
inc
sar
xor
lods
les
sbb
das
dec
lds
out
pop
mov
lods
inc
add
pusha
out
dec
inc
mov
dec
push
mov
lock
push
jo
insl
push
int
mov
pop
xlat
push
mov
cmp
pop
mov
std
mov
inc
nop
or
data16
xchg
sbb
imulb
insb
test
or
and
cmpsl
aaa
std
rcrb
adc
into
jge
adc
jnp
mov
sub
bound
ss
insl
lods
ljmp
and
adc
in
xor
addl
mov
out
aad
add
ja
pop
scas
ror
in
sub
lods
rcrl
ja
das
xchg
roll
mov
pop
pop
jb
mov
aam
xchg
and
pop
adc
lock
push
stc
jo
stos
jmp
push
mov
cmp
fdivr
and
int
mov
cmp
test
arpl
or
int
cmc
fldcw
lock
les
or
dec
xchg
divb
fsubl
and
pop
test
stos
and
out
gs
xchg
xorl
sub
and
je
mov
pop
adcb
daa
push
hlt
out
dec
sub
pop
cmp
pop
rorl
insb
cmp
ret
sub
xor
test
loop
jne
add
stc
cmpb
jbe
clc
mov
mov
ja
add
je
cmp
lods
arpl
xor
add
or
fnstsw
mov
pop
lea
mov
push
subb
shl
lcall
fnstenv
gs
in
and
rcrl
jmp
shlb
sarb
daa
adc
out
or
lds
clc
out
add
cmp
test
mov
out
fildll
scas
loope
mov
cmp
push
jae
pop
lods
fiaddl
jno
cwtl
cmc
lds
push
mov
in
mov
xchg
ja
imul
cli
pop
mov
or
and
mov
inc
loopne
imul
dec
notl
push
inc
cmp
iret
push
inc
fnstsw
cmp
mov
int
loope
scas
lock
xor
imul
outsb
leave
xchg
test
push
and
and
inc
mov
pop
push
sarl
mov
nop
inc
sub
stc
lods
jne
mov
mov
fdivs
clc
movb
mov
icebp
mov
adc
test
push
dec
mov
add
pop
in
pop
sbb
dec
ficoml
push
push
xchg
push
sahf
cmp
jae
insb
ficompl
xor
fistl
mov
adc
fsubl
and
adc
rclb
push
jle
imul
mov
mov
dec
jne
aas
push
and
add
int
ja
sbb
mov
cwtl
xor
mov
roll
movsb
int
jno
lcall
sbb
popa
orb
negl
mov
xor
pop
jge
int
sbb
out
jl
incb
push
decl
cmc
dec
xor
mov
cmp
mov
pop
ja
loop
test
sbb
mov
das
popf
push
mov
pop
repnz
pop
jecxz
mov
mov
popf
push
nop
xor
filds
cmp
or
dec
dec
ret
mov
dec
jle
mov
call
mov
xor
fnsave
fisttps
faddp
rclb
jne
loop
out
dec
mov
pop
stos
repz
jmp
sub
das
inc
sub
dec
fiaddl
add
andl
shl
xchg
test
insl
out
shlb
push
leave
mov
loopne
dec
fdiv
dec
lcall
rcrl
fnstsw
lods
xor
mov
enter
adc
repnz
faddp
xor
daa
lea
inc
arpl
and
lds
mov
pusha
push
shrl
loope
lret
inc
arpl
out
je
push
ds
xlat
adc
aas
xor
repnz
aam
fs
or
sub
mov
scas
and
bound
add
xchg
xchg
out
pushf
repz
jb
in
mov
jg
mov
popa
jmp
jnp
mov
pop
sbb
sarb
in
adc
jno
cmp
les
cltd
aad
inc
shl
fisubrs
sub
stos
dec
mov
test
gs
fdiv
add
inc
nop
jns
xor
xor
pop
icebp
test
xchg
push
shrl
jge
xchg
xchg
jmp
loopne
data16
test
cmp
loopne
push
in
sbb
jmp
cld
push
sub
sbb
aad
push
xchg
shr
sub
ljmp
xchg
sbb
inc
bound
ds
rclb
daa
adc
sub
shlb
fidivl
nop
mov
sbb
dec
xlat
loope
cmp
out
repz
sbb
or
jl
testl
fisubs
sahf
adc
fsubl
pop
or
cmp
mov
sub
adcl
repz
fadds
jo
std
push
add
sub
xor
cmp
pop
sbb
mov
add
lods
dec
inc
mov
sarl
pop
sbb
mov
mov
mov
jle
hlt
shlb
idiv
pop
dec
loop
mov
addr16
ja
mov
add
mov
mov
and
push
xchg
lahf
pusha
dec
cmp
sbb
imul
rorl
and
mov
sbb
cmp
enter
shll
shll
inc
push
test
xor
dec
push
pop
insb
cmp
movsl
mov
push
lahf
or
push
aam
int
sbb
imul
mov
xor
sub
daa
icebp
adc
add
and
icebp
movsl
adc
lock
ds
xor
add
sub
jnp
pop
bound
push
xor
stc
inc
hlt
push
bound
sbb
jg
addr16
out
ja
aas
lds
imul
cwtl
mov
add
xor
pop
leave
sub
xchg
adc
dec
lcall
push
xchg
fsts
mov
lahf
bound
shll
jecxz
push
dec
aad
test
lahf
mov
push
inc
xchg
push
push
ds
ljmp
sub
roll
je
inc
dec
inc
mov
std
cltd
xor
sub
push
jmp
mov
aad
dec
imul
sbb
sti
and
roll
fdivr
insb
jl
or
test
mov
cmp
stos
sub
inc
fisttpll
jge
add
add
clc
fidivs
xchg
jl
pusha
jl
pop
mov
push
mov
rcrb
mov
pop
imul
int3
lock
aam
jae
adc
vmovd
mov
pop
dec
rcrl
dec
loope
stc
pop
inc
xchg
sbb
jmp
jbe
jns
fwait
xchg
cmp
dec
jp
push
mov
jne
adc
or
inc
popa
or
lea
daa
dec
fisubrl
enter
pop
sbb
mov
clc
mov
sub
jg
pop
inc
push
cltd
clc
inc
lea
pusha
and
aas
lock
add
jl
mov
fcmovu
cwtl
jge
insl
mov
mov
in
jl
or
mov
js
push
shll
jp
sti
cs
pushf
test
jae
in
pop
lcall
mov
gs
xchg
jb
ljmp
sub
or
pushf
ja
xor
jg
sub
push
xchg
add
dec
sbb
jo
add
xor
pop
mulb
xchg
js
out
fldl
jae
pop
add
call
mov
call
dec
push
into
cmp
push
xlat
adc
lret
inc
mov
repz
ret
iret
adc
or
add
cmpsl
fisubrs
or
sbb
idivl
sbb
fsubl
xor
xchg
jne
out
andb
cmp
or
jge
sbb
mov
jecxz
and
mov
aam
hlt
and
push
mov
lcall
dec
jcxz
pop
std
cld
ret
sahf
daa
std
and
clc
xchg
cmpsb
inc
mov
mov
daa
jmp
imul
add
mov
push
jnp
cmp
mov
sub
adc
ret
addr16
fs
and
mov
inc
jmp
ss
xor
push
fnsave
loop
inc
sub
loop
mov
mov
mov
sbb
test
jbe
imul
lock
lods
mov
push
xlat
daa
hlt
xor
xchg
clc
dec
jge
stos
int
arpl
fisttps
and
imull
cmc
mov
jle
sub
dec
int
fiadds
dec
cmp
pop
mov
and
jecxz
mov
imul
xchg
or
pop
sub
push
xchg
mov
pop
push
push
adc
es
scas
pop
push
cmpsb
test
jno
pushf
dec
nop
loop
loopne
daa
pop
sbb
or
leave
sub
cltd
repnz
pop
stos
cmp
lret
test
out
stos
jg
sbb
push
mov
push
xchg
bound
icebp
ds
sbb
sub
fldl
jge
pop
mov
inc
inc
fs
cmp
fs
push
int
int
push
icebp
inc
stos
and
mov
jnp
sub
mov
sbb
scas
mov
into
negl
repnz
dec
stos
pop
and
cld
and
sub
nop
xlat
mov
stos
jl
out
push
idivl
xor
jmp
rorl
out
adc
cmp
push
call
pop
shrb
push
lods
rcl
pop
or
int
sbb
imul
daa
test
enter
adc
push
popa
mov
cmp
xchg
ret
jl
xor
xchg
fwait
movsb
inc
xchg
notb
jecxz
movsl
fiaddl
xchg
xchg
shrl
subb
mov
sbbb
mov
dec
popf
mov
repz
popf
sbb
pop
mov
pop
push
leave
adc
add
ss
arpl
ja
xchg
pop
cmc
or
pop
add
jb
cmp
adc
stos
jb
fcoms
jne
pop
gs
push
mov
push
and
out
or
cmp
lock
dec
mov
inc
xchg
dec
adc
jbe
shll
push
sub
pusha
out
ret
mov
lock
sub
call
imul
jl
add
dec
mov
lahf
aad
push
lahf
push
xchg
adc
lret
or
aad
je
je
leave
pop
or
idivb
ja
and
or
inc
hlt
mov
outsb
mov
mov
add
ret
imul
es
arpl
aad
in
pop
shrl
dec
std
mov
stc
fwait
or
dec
outsb
loopne
mov
sbb
clc
or
loop
xor
inc
leave
das
movsb
jge
jg
mov
sbb
in
xor
dec
test
cmpsb
roll
inc
cld
jmp
fists
jl
fiaddl
movsb
push
xchg
or
add
jg
test
mov
outsb
aam
mov
lock
xchg
or
es
insl
outsl
call
ljmp
sahf
lock
adc
sahf
pop
mov
or
in
mov
jb
push
stos
jl
cld
mov
and
repnz
mov
xor
jnp
fistl
add
inc
divl
adc
mov
pop
pop
orb
push
in
push
push
es
and
pop
pop
pusha
hlt
lret
mov
sub
lock
mov
dec
cmpsl
and
movsb
push
ljmp
push
jbe,pn
fdivr
inc
mov
stos
inc
or
jb
add
ja
movsb
or
enter
adc
mov
in
ss
and
mov
insb
cmp
dec
pop
pop
inc
adc
and
mov
cmc
inc
mov
dec
inc
sbb
pop
sbb
pusha
pop
js
out
dec
jb
or
shlb
or
cmp
mov
data16
or
sub
push
std
push
std
pushf
jecxz
push
sbb
pop
loop
sbb
scas
cltd
lea
sub
mov
bound
pop
dec
cmpsb
xchg
test
enter
es
leave
mov
mov
jg
das
mov
enter
fldl
adc
and
adcb
dec
pop
jns
xchg
sarb
mov
je
jge
les
jns
arpl
rep
sbb
xchg
jne
pop
mov
push
cs
lods
sub
jmp
mov
sub
lea
int3
leave
lret
ja
jnp
cmp
insl
xchg
adcl
sbb
les
scas
xor
test
pop
xchg
rcr
add
test
adc
cmp
gs
es
sub
lret
jbe
pop
xor
xor
mov
fldt
cwtl
addb
loope
mov
push
sahf
stos
add
fs
sbb
dec
mull
fwait
jnp
jne
mov
scas
xchg
popf
imul
lcall
sbb
pop
mov
xlat
in
js
jmp
xchg
push
lret
mov
in
scas
ret
test
adc
xchg
idiv
mov
inc
lret
hlt
out
rorl
inc
xor
movsb
in
mov
or
clc
push
cltd
or
shl
sbb
fdivs
mov
test
xchg
ja
test
mov
inc
jecxz
out
xlat
rclb
rorb
test
aas
shrb
adc
mov
cmp
shl
orl
dec
inc
icebp
xchg
pop
mov
enter
mov
xchg
fcos
dec
insl
push
mov
mov
cmp
dec
mov
jb
mov
or
test
pop
add
xor
lods
outsb
mov
push
xor
sub
mov
and
nop
test
mov
mov
pop
mov
data16
insl
inc
int3
dec
xchg
into
push
xor
fmull
xchg
dec
pop
movsl
lret
scas
std
or
cwtl
test
dec
push
cmc
stc
aad
push
les
lea
jbe
loopne
rcr
mov
mov
mov
arpl
xchg
dec
pushf
ds
pop
mov
sbb
mov
in
pop
jg
and
fxch
outsb
jmp
dec
and
push
in
xorl
or
mov
jecxz
mov
xor
jmp
mov
xor
ss
imul
nop
hlt
jo
stos
cmpl
pop
and
sub
fnsave
push
clc
mov
nop
add
sbb
xchg
fdivr
shlb
mov
cmpsl
insl
cmp
cmp
pop
mov
pop
pop
insl
out
xchg
pop
faddl
mov
ss
add
jmp
xor
mov
fcomps
dec
cs
sbbl
and
jge
idivl
filds
nop
dec
fstps
pop
cs
xchg
mov
stos
mov
arpl
inc
xor
enter
or
movsl
hlt
pop
fisubrl
int
loope
dec
sti
sub
and
pop
jo
insl
adc
push
mov
pop
popf
and
dec
fsubrp
sbb
sarl
sub
leave
cmpsl
cmp
std
leave
aas
imull
pop
add
inc
mov
jns
daa
shr
bound
in
push
mov
lret
test
repz
adc
shll
cmc
xor
ds
das
movsb
adcb
fs
dec
ss
dec
out
or
int
test
pop
hlt
pusha
lea
sub
push
loopw
icebp
imul
js
stos
mov
or
jge
clc
call
xor
out
or
ret
into
fnstsw
shll
loope
xchg
xchg
dec
aaa
int3
xchg
je
fs
push
pop
ret
push
loop
mov
repnz
push
mov
pop
popf
jnp
xor
pop
mov
clc
xor
lcall
insb
call
arpl
frndint
in
dec
loopne
jnp
pop
cmpsl
xchg
aad
imul
xchg
adc
sbb
scas
in
gs
xor
or
sub
out
jg
inc
insb
mov
and
ret
push
lock
xchg
orb
add
and
cmpsb
rorl
stos
push
fistpl
mov
das
adc
mov
lcall
inc
xchg
jb
or
insl
lds
repnz
dec
daa
add
out
xor
in
loopne
loop
ficompl
shl
mov
xchg
cmpl
gs
loop
fistl
mov
mov
ja
add
ds
gs
inc
movsl
lods
mov
loopne
mov
loope
sub
cmp
repnz
jb
jecxz
add
popa
sbb
addb
movsl
cmpsb
sub
or
shr
aad
test
lret
sub
lea
cs
xchg
push
mov
pop
and
mov
xchg
lret
xor
sub
pop
arpl
test
pop
sub
dec
jo
je
ja
rorb
xchg
mov
xchg
mov
inc
jg
mov
scas
leave
inc
insl
insb
xor
and
mov
pop
xor
sub
xlat
xor
bound
pushf
mov
xor
jge
push
jae
aam
mov
sbb
dec
push
inc
mov
sti
incb
repz
and
es
dec
mov
fidivs
jo
dec
test
roll
stc
nop
jge
push
negb
cmpsb
cmp
jb
or
jp
aas
imul
xchg
pop
or
loopne
cwtl
roll
loop
in
mov
inc
repnz
mov
dec
fsubrp
mov
lcall
scas
cmp
clc
shrl
movsb
dec
shlb
adc
and
stc
sbb
add
xor
sub
nop
mov
sbb
aaa
adc
mov
mov
pop
icebp
fxch
push
mov
shlb
rcrl
stc
mov
lock
ret
mov
mov
sbb
nop
enter
gs
subb
cmpsl
push
out
hlt
inc
mov
das
sbb
cld
mov
lods
mov
xor
sub
inc
rorb
xchg
xchg
pushf
lea
leave
jns
insb
iret
lret
std
div
rcl
repnz
popf
or
leave
mov
repz
addr16
cmpsb
pop
and
nop
jmp
jns
xchg
sub
adc
and
push
sub
mov
test
in
mov
call
enter
movsb
mov
mov
daa
test
pushf
repnz
fwait
jl
adc
loopne
loopne
in
sub
jns
add
lods
jnp
lods
mov
out
ljmp
push
xchg
cli
aaa
push
mov
mov
arpl
fists
pop
jp
adc
popa
sub
lcall
cs
in
fisubrs
icebp
xor
jnp
sub
cmp
jle,pt
icebp
ss
mov
int
jp
jo
inc
std
push
out
mov
cmp
daa
jbe
mov
xchg
adcl
gs
xchg
ljmp
xchg
sbb
sti
dec
bound
in
or
and
jmp
nop
xlat
imul
add
ljmp
cmp
ss
xchg
add
fs
mull
stc
ja
pop
ds
cwtl
vcvtsi2sdl
sar
clc
int3
mov
jae
xchg
jp
mov
pop
int
pop
mov
pop
lret
ss
dec
fistl
dec
jne
sbb
in
jb
lock
cwtl
jne,pt
es
inc
or
xor
mov
int
adc
shll
subl
and
bound
sbb
xchg
mov
sub
pop
negl
cmp
adc
adc
mulb
shlb
dec
test
inc
sbb
das
xchg
mov
sbb
cwtl
mov
xchg
ss
cwtl
sub
push
mov
std
out
mov
cmp
sbb
mov
ret
cltd
ja
mov
dec
test
pop
andl
cmpsb
xchg
pop
bound
in
inc
adc
jno
icebp
dec
int3
mov
js
aam
cli
packssdw
lock
nop
mov
shll
add
divb
sahf
cmp
out
jae
repz
jp
jmp
inc
xor
dec
jne
mov
push
mov
es
ss
nop
and
mov
ficoml
ficompl
xlat
push
fwait
pop
push
rcrl
pop
xchg
cli
imul
mov
cli
xor
fidivrs
xchg
pop
inc
imul
gs
sub
pop
jae
rcl
idivw
dec
adc
cmp
jb
inc
shlw
sub
out
or
push
in
add
ret
mov
pushf
and
sub
in
xchg
jbe
imull
aad
test
fldl
jns
cmp
mov
cltd
push
or
imul
dec
aaa
mov
test
add
or
sub
dec
sbb
and
nop
mov
rclb
push
pop
xor
data16
sub
inc
lcall
cs
out
inc
fs
cmp
xchg
int
frstor
pusha
outsb
divl
jno
xchg
mov
add
push
lods
dec
inc
mov
stos
mov
cmpsl
cli
cmpsb
pop
jmp
sub
mov
mov
pushf
push
movsb
cmp
push
fidivrl
and
push
mov
add
aaa
arpl
sbb
inc
insb
add
push
lea
cmpsl
ds
xor
xchg
add
pop
mov
arpl
lea
push
stos
inc
stos
mov
test
pop
aaa
adc
or
div
lret
mov
js
or
jmp
imul
adc
insl
sbb
gs
push
pop
addr16
add
pop
adc
add
add
lock
jg
mov
arpl
and
lret
movsb
sub
push
into
add
inc
rcll
inc
cmc
or
jge
pusha
iret
mov
adc
popa
push
insb
mov
int
fcoms
mov
nop
jmp
loope
emms
cs
call
jge
insl
xchg
lret
loopne
das
icebp
sub
ss
adc
mov
push
push
mov
and
cwtl
movb
ds
gs
lcall
insl
cmp
inc
pop
pop
xor
or
or
push
arpl
pop
int3
push
lock
test
jecxz
pop
movsl
clc
sbb
push
fldt
fstpt
mov
xor
or
popa
inc
push
hlt
out
cmp
push
pop
fs
test
es
cmc
ja
and
cmc
jne
sub
adc
cmp
xchg
cmp
push
out
popf
test
inc
shll
or
nop
push
gs
daa
in
cmpsb
movsl
shl
fwait
mov
popf
mov
add
stos
bound
ret
push
adc
test
popa
and
inc
repnz
push
sbb
rcr
mov
ret
repnz
test
xor
pop
xor
push
push
mov
mov
inc
xchg
mov
std
jne
sub
ja
shll
cmc
mov
nop
pop
add
push
jl
notl
sbb
ficoms
push
ja
dec
xorb
adc
pushf
ficomps
adc
sbb
jl
gs
jp
mov
dec
fdivrp
inc
lds
not
cli
je
imul
mov
jae
add
xchg
and
out
lea
sbb
and
xchg
add
and
popa
xchg
xchg
loope
jp
pop
outsl
xlat
push
fsts
pop
jmp
inc
and
sub
xchg
not
dec
pushf
fmull
sbb
xchg
pusha
lods
sub
fwait
lret
dec
iret
jl
fadd
mov
jbe
and
iret
bound
jl
adc
test
xchg
loope
inc
imul
jp
pop
cmpsl
mov
pop
add
pop
mov
aam
or
pop
rcll
je
sarl
sub
lahf
test
jnp
jg
rcl
jne
sahf
pushf
addl
jge
fdivp
add
jecxz
push
mov
jp
cmpsb
arpl
mov
shr
sub
imul
sub
inc
mov
push
adcb
sbb
loopne
mov
or
cs
mov
or
notl
push
dec
mov
testb
jle
pushf
lock
addr16
xchg
movsb
leave
inc
pop
cmp
pop
aaa
inc
ret
adc
in
adc
mov
stos
call
lret
pop
fsubs
add
or
dec
mov
xchg
outsb
sbb
dec
insl
add
jbe
sub
movl
cmp
jp
fwait
loop
adc
push
and
dec
and
cs
and
addr16
sub
xor
mov
mov
dec
je
jae
std
sar
adc
ret
aas
lcall
mov
inc
sub
push
call
aas
xchg
sub
rolb
test
loopne
adc
mov
enter
or
or
cmp
push
or
pop
jo
adc
shl
ret
shr
pushf
scas
push
xchg
mov
cs
sbb
mov
mov
jbe
aam
add
mov
test
pop
test
lock
mov
pushf
and
notl
subb
xchg
pop
fmull
xor
aad
push
sbb
shll
push
dec
mulb
sub
fcmovnbe
fsubrl
daa
mov
orps
arpl
inc
lock
mov
xchg
jl
inc
pop
dec
or
or
clc
outsl
xchg
and
fadd
cmp
shl
and
in
fisubrl
movsl
xor
out
dec
outsl
je
icebp
scas
int
stos
add
pop
push
xchg
mov
xchg
jge
sbb
ret
push
test
pop
sbb
push
inc
push
test
sub
xlat
pusha
lret
and
repnz
sub
xor
in
and
adc
cs
cmp
xchg
push
xor
cmp
inc
test
pushf
pop
or
xchg
mov
cmp
jo
jecxz
divb
dec
aaa
pop
adc
ror
cld
jg
divl
jb
inc
mov
jecxz
xchg
xchg
push
icebp
fdivl
cltd
sbb
stc
addr16
xor
pop
lcall
daa
mov
arpl
pop
loopne
lret
pushf
sub
jmp
int
pandn
jns
add
mov
mov
sub
xchg
mov
and
jge
enter
in
int
adc
cmc
xchg
jo
sub
shrb
cmpsb
loopne
in
in
and
pushf
shlb
test
push
mov
daa
lock
xchg
in
aaa
lea
or
jecxz
xor
dec
xchg
repnz
out
mov
or
ds
pop
sahf
lea
repnz
push
movl
repnz
mov
loop
push
daa
mov
out
xchg
lahf
push
insl
cmpsl
das
dec
popf
pop
inc
sti
imul
out
sahf
mov
test
arpl
sbb
data16
stos
xor
xchg
js
adc
mov
sub
mov
loopne
xchg
call
push
mov
adc
cwtl
jo
sbb
loopne
fnstenv
sbb
ret
popf
dec
dec
scas
add
cmp
push
dec
inc
jg
mov
sub
stos
nop
push
mov
cmp
xchg
out
test
sub
imul
out
rol
cmp
xchg
or
notb
mov
push
cmp
arpl
test
pop
dec
mov
daa
xchg
add
pop
fsubs
cmpsl
sbb
ljmp
cld
out
das
sub
and
jno
or
fidivl
mov
jne
sbb
pop
loop
iret
sbb
and
popa
pop
dec
mov
das
cs
dec
jns
xlat
adc
push
dec
or
stos
repz
jbe
inc
xchg
sbb
pop
sbb
movsb
ss
jno
loopne
repz
es
pop
movsb
pop
mov
adc
xchg
fld
push
xchg
dec
bound
aam
cs
js
sbb
xchg
test
jmp
js
repz
and
aaa
xchg
cli
adc
pop
sbbl
jg
negl
push
inc
out
pop
add
push
les
test
and
loope,pn
das
pop
cmp
pop
cs
cli
fnstcw
addr16
xlat
dec
push
adc
sbb
ss
xor
dec
mov
xor
nop
cmpsl
mov
or
push
rcrb
and
mov
dec
and
lock
andl
pushf
push
inc
mov
push
outsl
mov
mov
sub
jmp
inc
mov
test
jne
popf
or
stos
dec
or
or
rcl
xchg
int
aas
pusha
dec
jbe
pop
jg
cmp
scas
insl
cmc
or
xor
leave
lods
aad
and
std
insb
and
mov
sbb
bound
lods
pushf
clc
inc
dec
jo
notl
xlat
adc
mov
jp
sub
mov
cli
inc
lods
les
insl
test
fs
mov
cmp
jne
scas
loope
daa
push
or
lods
test
adc
std
push
mov
mov
das
jecxz
and
add
sbb
rorl
mov
inc
cmp
jo
push
and
mov
fistps
in
mov
xlat
enter
jbe
and
je
inc
xor
or
jne
sbb
xchg
dec
call
repz
hlt
mov
enter
mov
jae
mov
xchg
lret
test
push
test
inc
roll
in
shll
mov
call
mov
sbb
dec
cs
mov
mov
in
ficomps
pop
xor
and
in
xchg
in
addb
add
cmp
mov
jae
shr
frstor
inc
jg
cltd
scas
cmpsl
in
pop
push
sbbl
jp
sbb
fmuls
sti
imul
aad
cwtl
loope
inc
jl
mov
mov
push
inc
ja
cmc
xlat
mov
dec
enter
iret
inc
mov
sbb
clc
xchg
xchg
rcll
leave
enter
jo
sahf
adcl
pop
lods
enter
push
push
mov
dec
cmpsb
pop
clc
xor
out
or
xor
lahf
mov
lock
jb
inc
daa
xor
lahf
pop
jno
out
push
leave
inc
ss
or
enter
dec
ja
pop
sbb
xchg
das
lds
outsb
mov
pop
mov
vpblendmd
nop
stc
jmp
push
push
aaa
cmpsb
mov
jae
mov
pop
adc
mov
movb
pop
stos
nop
pop
dec
test
scas
clc
fmul
xor
inc
adc
test
and
sbb
cld
dec
xlat
and
jmp
and
pop
pop
shl
mov
inc
dec
mov
or
repnz
je
sub
jecxz
push
inc
dec
shrb
sbb
cltd
and
mov
jmp
clc
sahf
test
repnz
orb
adc
in
dec
pop
add
sti
adc
pop
adc
aam
std
out
add
xlat
adc
xlat
jno
jg
sbb
out
jae
shlb
or
xor
and
icebp
cmc
mov
xor
je
jge
pop
pop
cmpsb
pop
xor
cwtl
push
dec
xchg
xchg
xchg
push
jbe
dec
pop
jno
add
add
cld
lret
ljmp
pop
fbstp
and
xchg
and
addl
loope
inc
scas
mov
in
mov
pop
fcomps
mov
lods
cld
xor
fisubrs
mov
sbb
xchg
mov
loopne
cmpsl
pushf
loop
and
and
push
int
movsl
mov
jg
outsl
ds
sbb
mov
jge
pop
test
push
cmp
cmp
sbb
add
sub
adc
xor
jns
jne
mov
inc
outsl
xor
mov
nop
push
shrb
inc
lock
loop
pop
les
ds
out
movsb
mov
push
add
dec
cltd
mov
mov
adc
add
xor
pop
push
loope
test
clc
test
and
inc
cmp
cwtl
and
std
xchg
pop
mov
imul
je
divb
jle
xor
inc
jmp
dec
jns
fistpl
add
inc
int
in
rcrb
xchg
dec
cmp
daa
cmp
repnz
jmp
sarl
inc
cmpsb
jnp
es
inc
add
and
inc
fnsave
pop
mov
scas
mov
sub
fstpt
les
scas
scas
ror
cmpsb
in
push
iret
push
jmp
xlat
std
outsl
xchg
sarb
xor
sbb
and
les
outsl
lock
iret
aad
xor
stos
adc
enter
scas
and
andb
mov
rolb
int
scas
icebp
cwtl
fisttpll
push
cmpb
hlt
xchg
or
repnz
dec
arpl
fs
cmp
mov
popa
jg
sbb
lret
xor
jle
xchg
fildl
aad
fwait
inc
jnp
push
js
pop
loopne
andl
repz
popf
mov
std
popf
sbb
push
sarb
and
in
ljmp
sbb
bound
and
ljmp
mov
rorb
test
or
mov
push
sbb
ss
cwtl
idivb
insl
pop
enter
in
jne
imul
mov
jge
xor
fisubrl
mov
ds
aam
insl
or
je
clc
in
sbb
cmovp
cmpsl
int
lcall
jae
test
iret
lea
rcll
bound
adc
ja
or
pop
test
cmp
lds
push
rclb
imul
testb
push
and
adc
ds
in
ja
mov
dec
sub
add
mov
mov
imul
in
test
sub
imull
adcl
ljmp
mov
xor
jnp
dec
pusha
jp
and
xchg
mov
test
lcall
pop
fcmovnb
dec
sub
test
jne
sbb
mov
sub
test
inc
stos
xlat
cld
cmpsb
pop
jb
call
mov
mov
clc
insl
sbb
pop
in
adc
push
bound
inc
ljmp
cmp
loopne
jae
test
dec
fld1
cs
mov
int3
jae
push
and
out
inc
int3
adc
xor
sub
lds
jle
sub
shll
ret
jbe
mov
fsubrs
cwtl
cmpsb
dec
xor
mov
jge
jne
pop
jno
push
add
leave
pushf
roll
sub
fidivrs
add
sbb
lret
jbe
outsl
andnps
shrl
lret
cs
cltd
xchg
out
adc
dec
jg
jo
or
inc
adc
sbb
jmp
movsb
lahf
jae
push
adc
vpor
aas
and
jnp
xlat
push
inc
cli
das
lods
idivl
sysexit
xor
push
adc
sub
xor
pop
leave
insl
add
mov
std
and
xor
xchg
cld
mov
adc
filds
cmp
shrb
cwtl
fildl
add
jg
mov
mov
ds
sti
push
mov
adc
popf
or
ret
push
test
jl
jno
lods
mov
in
sti
mov
in
pop
sub
adc
adcb
dec
loope
push
insb
pop
pop
data16
mov
dec
jl
mov
push
loope
test
roll
cmp
repz
das
pop
clc
lret
test
pop
lock
pusha
leave
fcomi
outsb
mov
movsl
sub
jb
push
imul
pop
inc
pop
pop
mov
out
cmpl
pusha
in
mov
pop
pop
test
or
jmp
mov
adc
jae
cwtl
sub
push
pop
mov
incl
std
inc
repnz
cmp
jecxz
pop
dec
data16
xor
mov
xchg
push
push
push
ljmp
enter
inc
pop
jbe
mov
xrelease
je
jae
imul
push
pop
cld
into
fwait
mov
dec
sbb
xor
je
jecxz
les
sbb
or
add
cli
std
btr
and
mov
and
lea
nop
dec
fsubrp
or
dec
xchg
mov
adc
fdivs
pop
jne
or
cmp
sub
adc
fisubs
mov
add
mov
inc
adc
add
ljmp
xor
sti
and
cmpsw
pop
adc
xor
pop
nop
ficoml
not
data16
jns
cltd
xchg
jmp
push
shl
mov
or
loopne
xchg
addr16
mov
stos
sahf
bound
sub
and
cmpsb
mov
rorb
xchg
xor
insl
movsb
test
or
inc
and
ds
loop
add
and
mov
rcrb
cmp
sbbl
mov
or
lea
sub
and
cli
addb
pop
rorb
mov
lock
pop
and
ss
pop
mov
xor
mov
inc
and
lahf
dec
and
push
int
fcoms
or
dec
mov
lock
xor
popa
cld
sub
xchg
mov
xor
in
sbb
mov
sbb
aam
repz
jae
xor
push
or
adc
scas
loopne
insl
xor
xchg
or
sbb
jmp
sub
pop
dec
cli
popl
or
test
mov
mov
stos
jae
test
rol
cli
andb
test
fidivrl
mov
adc
lret
xor
mov
cmpl
mov
xor
jb
sarb
and
out
cmpsl
inc
dec
add
insb
xchg
mov
push
cmpsl
mov
and
dec
les
call
xchg
adc
data16
fdiv
xchg
fisubs
jp
jno
cmp
gs
lahf
cwtl
adc
je
shrb
ret
mov
fwait
mov
push
call
pop
add
and
mov
fistl
cltd
cwtl
push
fstl
pop
testl
mov
sub
roll
scas
or
add
inc
sub
scas
js
xor
into
push
imul
cs
fisubrs
into
dec
shlb
adc
inc
mov
pushf
lock
cmp
fucomp
lahf
jnp
aas
bound
add
adc
fsts
add
xor
call
sub
mov
dec
bound
lahf
mov
push
dec
aaa
or
mov
imul
jle
or
or
mov
mov
dec
mov
stos
das
lds
and
bound
adc
adc
dec
xor
pop
xor
jo
xchg
push
jno
push
mov
xor
test
push
out
fwait
bound
add
vmaxps
jge
popf
sahf
mov
push
pop
jmp
sbb
mov
stos
std
pushf
call
push
jo
xor
ds
mov
push
inc
inc
daa
xchg
mov
lock
or
and
dec
and
cmc
pop
mov
add
mov
or
pushf
out
adc
nop
fwait
pop
pop
je
dec
scas
out
insb
mov
sub
dec
cmc
imul
sbb
cs
sti
cmpsb
push
inc
xchg
and
lret
shrb
mov
lret
nop
loop
das
pop
out
stos
cltd
push
adc
xchg
or
cmp
int3
push
xor
jmp
mov
popa
mov
in
loopne
icebp
add
shrl
test
sub
gs
lods
mov
add
add
push
es
cli
sti
push
push
sbbl
or
pop
sub
xchg
fistpll
movsl
mov
push
xchg
add
lret
ret
aaa
mov
les
lcall
nop
in
push
jae
adc
lret
mov
fisttps
mov
cmp
and
add
or
cmp
das
xchg
shl
call
cmpsb
mov
push
jno
adc
jp
aam
aas
call
adc
aad
fcoml
mov
fcomps
outsl
mov
js
inc
scas
pop
cmp
add
inc
xlat
test
scas
inc
add
inc
adc
into
fwait
add
popf
jae
and
lods
add
lods
cmp
repnz
pushf
add
inc
movsl
push
xor
daa
cs
push
lock
test
push
loope
hlt
push
ret
sbb
lods
sbb
xor
out
aad
cwtl
jnp
sbb
jp
push
sub
cmp
aaa
push
fwait
fwait
add
addr16
scas
push
pushf
or
in
mov
les
mov
mov
dec
ret
popf
imulb
mov
pusha
fwait
adc
out
shrb
lock
xchg
popf
pop
sbb
push
mov
in
or
jecxz
jnp
inc
imul
add
icebp
xchg
cmp
leave
hlt
adc
cmp
xchg
data16
addr16
jmp
add
bound
movsl
addl
dec
sbb
movsl
jae
in
cmpl
cmpl
push
je
mov
lds
pop
add
xor
gs
popa
mov
iret
lcall
sub
jbe
out
inc
lods
dec
xchg
mov
repz
mov
sub
stc
lock
fstl
xor
pushf
sbb
jbe
xchg
xor
imul
cmp
xor
sti
mov
iret
and
stos
and
cltd
add
scas
cmp
jg
adc
mov
or
jnp
xor
push
mov
out
lods
bound
out
cmp
ljmp
dec
cmc
xchg
add
sbb
xchg
add
xchg
aam
jle
repnz
cmpl
inc
sub
xchg
loop
sbb
addr16
sub
mov
xchg
out
mov
leave
jl
push
movsb
jbe
cmpb
or
add
push
dec
stos
les
rol
iret
rol
xchg
and
addb
int3
push
movsl
push
iret
cmp
ss
incb
mov
jno
cli
cmpsb
cwtl
push
ds
mov
lret
mov
cmp
rclb
rclb
cmpsb
jne
scas
test
cmp
pop
movsb
aas
adc
inc
je
hlt
cmp
xchg
cmp
or
inc
xor
mov
jge
pop
fldenv
inc
add
cmp
jecxz
mov
test
mov
lods
lret
lret
gs
aas
int
ja
inc
cli
addr16
mov
push
aad
outsb
out
ds
sub
and
stos
mov
mov
mov
jecxz
ljmp
popa
adc
shrl
iret
loop
cwtl
ljmp
push
push
cmp
fld
inc
add
inc
push
pushf
in
xchg
and
and
into
push
pop
or
leave
loop
dec
cmp
cmpsb
lret
fistpll
pop
jecxz
add
jb
inc
adc
dec
dec
mov
pop
mov
pop
jnp
test
notb
adc
push
lods
xchg
in
cmp
lods
xlat
pop
inc
sub
xor
fcompl
in
mov
push
fcmovb
pop
adc
out
std
add
sub
push
decl
jne
mov
fimull
push
dec
out
imul
mov
loope
sub
mov
ret
sbb
and
cmpsb
outsb
sub
std
iret
sub
mov
and
dec
sar
cmp
shr
fnsave
mov
push
xchg
mov
int3
rcr
push
xchg
dec
rcrb
std
push
sbb
clc
sub
fldenv
lock
ret
call
cmp
pop
and
cmp
pop
push
add
ret
aam
sarl
in
nop
push
test
push
decl
fcmovnb
add
xor
mov
xchg
adc
popa
popf
pop
add
add
cmp
lock
mov
in
repnz
stc
sbb
mov
lods
add
mov
sbb
pop
sti
sub
ret
xor
test
fstpl
mov
clc
pusha
jno
push
cmc
pushf
mov
push
lcall
enter
add
stos
idivl
insb
out
arpl
into
mov
leave
pop
xor
push
mov
fsubrs
in
test
xor
aam
inc
lds
pop
lods
test
std
add
scas
pop
inc
mov
adc
dec
cs
push
pop
or
sbb
push
popf
daa
or
jl
aas
dec
jae
shl
xor
cmc
int3
hlt
push
rcrl
fucomi
rorb
fldenv
movsb
push
lock
push
fstps
mov
jbe
dec
loop
inc
xchg
ret
lea
testl
sbb
pop
xchg
mov
inc
sub
fildl
stc
gs
cmp
lock
pop
adc
jnp
pop
aam
jl
jl
push
std
scas
not
cmp
popa
ljmp
fbld
ret
add
mov
push
jecxz
imul
ss
ret
aam
mov
mov
and
adc
hlt
scas
push
cld
mov
fdivl
subb
test
ljmp
shll
push
icebp
push
cltd
mov
js
xlat
into
push
aad
pop
insb
pop
enter
add
and
jmp
xchg
cwtl
mov
sahf
jmp
sub
mov
mov
rorl
jp
hlt
mov
out
lret
jo
outsb
out
lock
xchg
pop
lds
ret
int3
mov
add
inc
pop
jb,pt
repnz
in
es
sub
mov
gs
fisubrl
mov
or
pop
mov
xor
sbb
je
notb
cmp
xor
mov
or
push
inc
arpl
mov
mov
cmp
andl
outsl
fcom
jnp
jnp
jp
pushf
ljmp
das
in
shll
lods
push
rclb
ja
pop
fiaddl
mov
imul
jmp
and
test
in
xor
push
fs
mov
or
mov
dec
cmp
outsb
insl
mov
std
xchg
sub
arpl
cmpsb
test
movsb
pop
sti
inc
stos
mov
dec
cmc
call
lods
lcall
movsb
test
enter
push
fiaddl
daa
pop
loope
ret
mov
jne
fwait
cs
je
repnz
adc
dec
pop
push
dec
push
dec
and
dec
cltd
stos
cmp
cmp
mov
jle
in
stos
adcb
mov
shl
pop
mov
scas
pop
fimuls
mov
sub
bound
sub
jmp
push
inc
push
push
jnp
xor
or
shll
jo
push
ds
shll
or
sub
adc
aaa
bound
ljmp
mov
add
in
je
cmpsb
jo
jg
in
jnp
add
ja
jmp
fcoml
jmp
cmp
rcrl
dec
adc
ror
adc
es
adc
pop
ret
cmp
cli
jns
or
movsl
mov
dec
daa
push
rcrl
int
popa
cmp
jl
fsubrl
test
and
movsb
pop
pusha
or
inc
fsubs
test
testl
jae
pop
inc
jnp
pushf
mov
out
cli
inc
stc
dec
movsl
fxch
xchg
in
dec
xor
adc
mov
sbb
sub
stc
loopne
mov
dec
loope
xchg
adc
rclb
in
mov
pop
inc
lea
shll
push
loopne
push
int
adc
inc
add
lods
xor
adc
adc
cmp
sbb
adc
xorl
lcall
imul
test
jecxz
fnstenv
mov
call
sub
fisubrs
ljmp
jle
push
pop
inc
pop
sbb
stc
out
mov
faddl
and
inc
aad
mov
int
rclb
lcall
cmpsb
mov
mov
clc
mov
movsb
cmp
dec
add
pop
or
or
nop
inc
sbb
inc
inc
mov
jmp
sbb
jp
adc
scas
sti
aad
int
imul
adc
clc
aam
push
mov
fisttpl
movsl
mov
xlat
xchg
cmp
test
psubb
test
sub
adcb
out
dec
shrb
add
xchg
push
jmp
daa
add
arpl
ds
and
mov
pop
and
leave
not
jg
pop
push
fistpl
outsl
fsub
lret
push
jecxz
jo
movsb
xlat
add
or
mov
je
push
mov
lea
adc
repz
and
dec
xchg
mov
or
jle
nop
add
sti
dec
jb
into
pop
adc
cltd
insl
dec
adc
pop
out
cmp
popf
xchg
dec
push
outsl
jno
enter
ja
dec
mov
lds
mov
rcl
mov
outsb
in
je
dec
adc
xor
jns
add
lret
int
mov
dec
inc
xchg
int3
leave
xor
iret
addr16
mov
inc
cmpb
leave
loopne
ret
out
dec
push
jnp
push
push
scas
sbb
and
or
mov
sbb
pop
xorl
mov
shll
movsl
mov
scas
dec
cmp
loopne
pop
adc
and
sti
ss
mov
out
mov
test
cmp
cmpsb
es
fcomps
ja
jmp
push
into
mov
pop
cmp
pop
adc
mov
cmc
lds
aad
inc
jle
and
xchg
insb
out
jmp
push
icebp
mov
int3
xor
dec
cli
test
in
mov
push
pop
pop
and
xchg
push
mov
xor
pop
test
mov
addl
mov
sahf
sbbl
cld
in
jo
xchg
dec
xchg
and
idivl
dec
mov
stc
aam
popa
sbb
fidivl
pop
shrl
dec
sbbb
shlb
mov
shrb
xor
mov
pushf
outsl
inc
add
icebp
aad
subl
and
jbe
aas
repnz
mov
xchg
mov
fstp
jp
lret
sbb
in
in
cs
push
sub
cld
in
aad
lods
jl
cmc
mov
lods
xor
jnp
seto
mov
jae
xchg
sbb
or
icebp
push
push
das
cmp
add
ret
loopne
xchg
adc
cmc
xor
rolb
cmp
sar
or
push
out
test
mov
pop
adc
add
dec
imul
fdiv
insl
mov
mov
jno
push
inc
sub
jge
jg
cld
xchg
cmp
jo
pop
or
xchg
jno
sub
mov
xchg
aam
stc
sub
fistl
insb
or
lret
pop
mov
push
scas
shll
mov
daa
xchg
adc
rorl
fs
int
push
pop
pop
and
xor
ljmp
adc
sub
out
icebp
fdivp
adc
fdivl
ds
shrb
cmpsb
lahf
test
ss
sub
lcall
cmp
jp
mov
xor
dec
sbb
push
divb
pop
xchg
xor
pop
jne
adc
test
cmp
push
ret
out
dec
dec
lea
test
mov
scas
cwtl
inc
jae
sub
sub
pop
dec
xor
sbb
imul
mov
ja
cmpsl
ja
pop
test
sar
jns
add
scas
test
stc
inc
lds
bound
mov
mov
pop
ret
outsb
mov
add
jo
inc
jnp
sahf
roll
shr
pop
add
xor
mov
sbb
loop
mov
mov
xlat
fwait
int
outsl
nop
pop
mov
adc
sbb
scas
sub
dec
add
sbb
subb
mov
in
les
xor
xor
cmp
stos
in
xchg
addr16
cmpsb
cmp
cli
andb
stc
dec
loope
xchg
ret
nop
xchg
fcoms
or
or
xchg
xchg
add
mov
mov
lcall
xor
outsb
or
mov
popa
mov
sti
mov
das
in
scas
inc
push
pop
adc
or
lock
lods
push
imul
dec
cmp
sbb
clc
lret
push
mov
xor
xchg
je
adc
cmpsb
lret
cmp
fs
mov
loop
add
xchg
movsl
sbb
in
lds
pop
clc
ljmp
sti
in
inc
test
aas
ja
sbb
xor
out
lods
popa
mov
pop
or
fwait
xlat
push
ret
sti
sar
rcll
icebp
les
pop
cwtl
stc
leave
imul
popa
bound
pop
aad
xchg
or
xchg
pop
and
pushf
in
and
pop
cltd
push
fimuls
lea
mov
inc
pop
jl
adc
das
pop
xor
pop
or
inc
ss
cli
cmp
into
mov
ja
pop
sub
mov
in
mov
sub
ljmp
insl
mov
cmpsl
rcr
mov
dec
push
cmpsb
cwtl
add
cltd
pop
fs
xchg
xor
das
addl
frstor
push
out
popf
push
lret
xchg
jmp
dec
or
xor
jl
sub
jnp
mov
imul
outsb
sahf
sub
popf
mov
cmpsb
adc
iret
xchg
push
fisttpl
leave
lahf
inc
mov
ja
and
dec
adc
adc
inc
int
adc
loope
sarb
dec
mov
inc
cli
fdivs
add
inc
shr
sub
or
push
or
or
cld
adc
push
mov
cmp
arpl
scas
push
jns
xchg
mov
inc
outsb
or
fstp
mov
sar
dec
push
xlat
sub
inc
mov
fsts
add
cmpl
pusha
pop
xchg
das
pop
pop
leave
sbb
into
dec
mov
add
mov
xor
and
lret
movsl
mov
mov
sbb
pop
loopne
cmpsl
je
lret
dec
les
fs
ss
sbb
push
or
dec
out
jmp
orb
add
lds
ljmp
ftst
scas
test
or
and
clc
mov
push
rclb
cmp
or
inc
inc
xchg
xor
mov
inc
movsl
les
jno
push
and
jno
cld
call
add
out
pop
test
imul
test
mulb
ljmp
add
cmp
xchg
repnz
lea
sub
pop
xchg
iret
and
add
shl
outsl
out
fstp
xchg
sub
xor
shl
imul
xor
enter
ljmp
jns
ds
lret
out
fistps
out
imul
cmp
xchg
movsl
pop
cmp
xchg
jbe
mov
imul
sub
les
inc
inc
roll
and
fucomi
out
sub
dec
cmp
mulb
pop
inc
lcall
xchg
mov
leave
add
push
in
popa
sub
jo
xchg
push
lret
cld
fimuls
repnz
jle
lds
pushf
mov
pushl
dec
xor
mov
cli
dec
rcr
lock
adc
mov
in
sub
or
out
inc
pop
dec
xor
or
dec
dec
popa
add
testb
cmpsb
xor
jle
push
pop
lret
sub
dec
push
adc
out
xchg
sub
pusha
daa
test
pop
add
lods
adc
ret
pop
out
push
ret
sub
xchg
sbb
popa
jae
sub
cli
xorb
mov
aas
inc
xchg
sub
mov
jge
and
jp
nop
call
fwait
test
sbb
jge
test
and
sahf
cltd
movsb
xor
mov
mov
or
lahf
movsb
xchg
jne
xchg
pop
push
pop
push
js
push
dec
lock
sub
sti
or
mov
lret
jle
push
in
je
test
jno
and
fs
iret
mov
orb
cmp
ja
addl
sbb
mov
mov
xor
sub
outsb
fists
std
lods
arpl
add
or
jne
aaa
jo
push
lret
mov
sbb
mov
push
test
sbb
push
mov
lea
lds
inc
sbb
mov
scas
pop
dec
cmp
loop
jae
notl
rol
ret
lcall
jns
nop
lret
test
ja
daa
lods
ss
sub
mov
test
out
mov
pop
aad
lret
push
clc
mov
shr
inc
mov
pop
movsl
pop
js
sbb
fnsave
imul
gs
std
insl
sti
into
lahf
jmp
scas
das
inc
mov
xor
push
sbb
lret
mov
add
sub
lcall
and
fs
cwtl
sub
test
xchg
std
aad
in
cmp
xor
out
loope
or
in
lcall
xor
add
test
cmpsl
lret
shlb
add
pop
mov
icebp
jb
scas
fidivl
push
lahf
repnz
add
movsb
sbb
xor
dec
out
mov
loopne
xchg
fsubp
test
xchg
adc
call
or
xchg
popa
aam
jae
int3
in
lret
adc
ret
jno
adc
into
fmuls
pop
mov
and
sbb
pop
cld
stos
adc
push
popa
test
rcll
xor
pop
add
aam
inc
shr
les
lahf
sarb
xor
cmp
cltd
jmp
dec
and
mov
mov
mov
xor
or
inc
push
jmp
mov
rcr
pop
cwtl
pop
imul
xchg
and
mov
push
adc
xacquire
push
stos
mov
insb
jno
jns
xchg
dec
popa
out
mov
ljmp
push
jns
fcompl
xor
xchg
sbb
cmp
jbe
enter
lea
repz
fsubp
pushf
sbb
cmp
pop
adc
in
sarl
aaa
xorb
clc
cltd
dec
pop
daa
leave
inc
xchg
loope
shr
lods
inc
ficoml
xchg
inc
pop
mov
sub
ret
sub
mov
dec
mov
push
jns
cld
inc
cmp
fldenv
nop
pop
or
inc
mov
stos
loop
jns
lea
xor
push
int3
test
jne
into
pop
inc
add
and
mov
je
cmp
or
dec
push
outsl
push
scas
icebp
mov
mov
sti
int
and
sti
fdiv
es
in
add
mov
push
cmpsl
popf
mov
or
push
and
ret
mov
mov
xchg
cmp
shrl
jae
cmp
mov
out
fistpll
adc
ficoml
sub
jmp
pop
xor
sti
fwait
or
add
mov
popa
or
inc
aad
adc
adc
ret
jo
int3
test
loope
mov
mov
cwtl
cmp
mov
in
stc
sti
xchg
mov
sub
movsl
jmp
sbb
ret
out
stos
ja
aas
dec
add
les
insl
iret
cmp
dec
imul
je
dec
xor
sbb
inc
cwtl
mov
jmp
xchg
test
mov
mov
mov
cmp
sub
sahf
mov
inc
lock
mov
test
xchg
ja
enter
es
lods
jmp
push
jbe
dec
jnp
cltd
sub
subb
loop
cmpsl
mov
xor
and
sub
cmp
push
mov
mov
sbb
sub
fstl
fidivs
adc
mov
sbb
out
inc
daa
or
int
pop
imul
popa
and
adc
mov
jo
sti
ret
aam
data16
push
dec
out
xlat
lcall
mov
mov
adc
inc
fs
nop
push
push
pusha
icebp
mov
or
out
pop
push
incl
scas
daa
shlb
xchg
in
cmp
repnz
cli
mov
ds
cmp
gs
and
rorl
pop
imul
pop
inc
xchg
ret
shl
cwtl
repz
cwtl
cli
js
out
and
jne
mov
jle
pop
popf
xchg
orl
xor
jmp
scas
loop
es
push
mov
pop
mov
xlat
inc
xor
in
mov
adc
mov
fldenv
popa
into
fdivrl
or
clc
and
cmpsb
lock
loopne
sbb
adc
mov
out
bswap
push
fcmovbe
jb
test
iret
adc
in
jp
mov
jns
mov
mov
es
dec
pop
xor
aad
push
inc
je
pusha
fnsave
rcr
faddp
and
pop
add
lcall
cwtl
xor
cwtd
sbb
cmp
js
aas
mov
sub
add
pop
or
rcrl
ss
lods
pop
es
fisubrl
mov
sahf
xchg
pop
lods
mov
cmc
fmuls
fisttpl
mov
push
jg
aam
test
sub
jmp
and
dec
shr
push
mov
adc
jp
push
mov
mov
push
sbb
jmp
cs
jbe
pop
daa
pop
jo
sub
sahf
dec
jmp
fmuls
xor
push
mov
in
mov
out
mov
mov
or
jp
repnz
inc
pushf
outsb
mov
adc
mov
divl
inc
sbb
aas
pop
cli
cmpsl
cmp
adc
test
in
in
sub
inc
fimull
lock
fcomps
movsl
adc
or
arpl
inc
aas
ja
lea
cmp
shlb
xchg
mov
pop
imul
popf
mov
loope
xor
cld
fisubl
xor
roll
jge
gs
mov
popa
push
cmpsl
scas
xchg
dec
xorl
fs
ds
out
aam
xor
cmp
imul
leave
sub
and
stos
rcrl
cmp
or
mov
vpshaq
int
mov
shl
adc
mov
xchg
lods
push
lea
xor
push
pop
pop
push
rolb
icebp
mov
mov
mov
hlt
and
cmp
cmpsl
pop
out
sub
cmc
cmp
into
mov
xchg
lcall
ret
lock
xor
out
outsl
roll
mov
mov
fidivs
or
jnp
jl
sub
int
lret
cwtl
sbb
inc
out
inc
jle
pop
push
icebp
pop
xlat
scas
cmc
imul
mov
fdivl
pop
pop
adcb
jae
int
fcomps
sbb
inc
lea
mov
adc
test
xchg
mov
xchg
pop
xchg
aaa
adc
aam
scas
cmc
xor
pop
outsb
cmpsl
add
jns
xor
and
stc
inc
int3
cmp
xchg
mov
enter
inc
xlat
xchg
xchg
add
in
ljmp
jb
dec
sbb
jmp
xor
mov
sbb
and
add
or
mov
dec
pop
ret
xor
lds
adc
pop
push
pushf
mov
xor
lcall
cmp
dec
bound
sti
call
and
push
hlt
cmp
xchg
sarb
ret
rorl
xor
repnz
jb
mov
aam
inc
add
test
mov
es
sub
loopne
jno
jnp
jnp
addr16
leave
dec
ret
popa
mov
or
pop
add
xchg
mov
imul
add
push
sarb
pushf
jmp
xor
pop
push
jmp
aad
pop
inc
push
and
push
repnz
inc
mov
clc
cs
mov
stos
push
jo
jns
dec
fldcw
aad
sub
push
repz
int
sub
fldz
je
add
xchg
inc
mov
imul
xchg
jecxz
dec
scas
rorb
cmp
sbb
pop
push
push
sbb
fists
push
xchg
inc
xor
inc
jns
jecxz
popa
aad
or
mov
lret
sub
and
mov
dec
lcall
imul
insl
jno
cvtps2pd
gs
call
mov
ret
jge
mulb
pop
icebp
mov
cmp
adc
add
jae
shlb
dec
xchg
add
fbstp
mulb
clc
out
mov
xor
adc
or
adc
or
enter
in
imul
sti
cld
pop
fs
mov
mov
sbb
leave
test
shll
jb
dec
push
dec
lcall
daa
cmp
iret
xchg
mov
push
lret
or
jbe
aam
inc
sbb
push
repnz
daa
push
ror
shll
adc
mov
xlat
cmp
inc
jle
adc
nop
daa
push
sub
ret
sbb
fists
dec
js
push
out
pop
and
out
dec
mov
push
stc
jecxz
popa
inc
pop
gs
aad
push
arpl
test
int3
push
adc
cltd
push
aas
push
sub
dec
push
mov
mov
sbb
xor
popa
lret
out
sbb
push
push
enter
lods
dec
daa
cmp
loopne
push
xor
sbb
rcrl
mov
mov
pop
and
inc
test
out
xor
mov
leave
dec
inc
fwait
inc
dec
adc
push
bound
xor
inc
pop
xchg
mov
inc
xchg
loop
pop
imul
jno
xchg
lahf
sub
inc
mov
icebp
roll
loop
lret
xlat
mov
in
out
gs
pop
xor
imul
or
jp
mov
call
jb
popf
or
adc
leave
dec
xchg
fcomps
repnz
add
testb
pop
sbb
outsb
or
push
je
or
fld
adc
lret
mov
rorl
inc
push
adc
shlb
ss
cli
jae
add
pop
push
clc
shll
les
ds
fucomp
or
push
fwait
pushf
cwtl
mov
sbb
out
xchg
push
fnstsw
or
push
in
or
es
stos
imul
dec
mov
push
incl
js
inc
and
leave
pop
mov
push
dec
adc
loopne
add
repnz
dec
nop
lahf
fs
addl
cmp
sub
stos
lea
flds
rcr
sbb
inc
test
jp
mov
out
cmpsb
push
movsl
and
mov
or
test
cmpsl
out
ror
or
jbe
hlt
das
test
bound
jno
bnd
mov
addl
stc
jae
cmp
mov
dec
mov
incb
and
or
rol
shrb
xchg
lret
stos
xor
sti
cmp
mov
jecxz
adc
xchg
push
jnp
int3
jg
jns
mov
push
push
xchg
xor
adc
sub
insb
jp
dec
cmpsb
adc
fdivrl
jmp
cwtl
mov
loopne
mov
push
shll
arpl
push
pusha
push
or
mov
dec
lods
and
ljmp
sbb
pushw
pop
stos
pushf
jecxz
inc
xchg
enter
and
ror
or
loope
sub
test
out
and
out
fildll
mov
shr
or
pop
lock
pop
shrl
adc
clc
mov
inc
hlt
push
dec
es
cmpsb
xchg
sub
shl
mov
in
xchg
andb
je
leave
scas
call
xchg
xchg
sub
mov
push
es
or
stos
fidivrs
ja
cmp
scas
mov
xchg
adc
iret
loop
dec
jle
dec
std
lret
ret
and
bound
scas
mov
in
shrb
scas
data16
int3
mov
sahf
movsb
movq
push
imul
push
add
cld
push
int3
ss
add
inc
mov
int3
xorl
imul
loopne
outsb
xchg
xor
shrl
inc
cmp
test
xor
xor
jle
dec
add
loopne
fisubl
dec
cmpsl
sahf
xor
rorl
dec
int
ja
mov
hlt
or
jecxz
dec
cmp
xchg
dec
add
mov
pop
in
pop
sti
ds
pop
aaa
mov
jae
jb
into
ss
or
mov
xor
repnz
pop
addr16
xor
aas
iret
stc
add
push
mov
lahf
or
es
mov
jmp
jb
rcrb
ja
lds
jo
repz
add
xchg
in
sub
sbb
pop
in
add
push
add
inc
out
pop
adc
hlt
jl
fidivs
dec
movsl
xchg
mov
inc
pop
mov
push
cmp
xor
sbb
add
fwait
mov
notb
mov
fstl
mov
in
cmp
cli
lds
test
stc
mov
imul
jge
jno
cmp
es
divl
iret
pushf
outsb
cmp
mov
rclb
mov
fmuls
dec
test
cmp
pop
sbb
pushl
leave
cmp
je
inc
stos
jg
je
jno
aad
fbld
rorb
mov
fldt
pop
ljmp
sub
fdivrl
out
jl
cmp
mov
insl
int
sbb
jae
cmpsl
jecxz
and
mov
dec
pop
mov
sbb
cli
inc
pushf
xchg
or
mov
push
not
cmpl
mov
jno
and
jns
ror
adc
cmp
sti
roll
ret
je
bound
sahf
shl
lea
dec
aad
inc
mov
jne
call
inc
outsl
test
or
negb
jno
lea
push
inc
add
scas
cmp
fldenv
mov
add
xor
mov
iret
cmp
push
clc
sbb
notl
sub
xor
mov
xchg
into
mov
mov
cmpsb
inc
test
sub
or
call
in
mov
jbe
and
bound
movsl
xchg
imul
lods
cmp
es
cmp
sbbl
mov
xlat
rol
sbb
ja
sub
lar
adc
dec
xchg
and
inc
inc
loopne
add
nop
pop
test
jnp
int
mov
adc
scas
push
outsb
xor
adc
pop
dec
sbb
sti
and
pop
cwtl
bound
ffree
pop
jne
int3
icebp
inc
in
adc
sbb
dec
loopne
xchg
outsl
dec
xor
outsl
or
sbb
sti
rcll
clc
and
and
in
and
and
aad
arpl
stos
dec
mov
imul
and
test
icebp
pop
js
clc
popf
out
cltd
cld
adc
scas
inc
mov
cmpsb
mov
in
mov
std
add
add
sub
out
push
test
sbb
push
dec
xchg
xor
ret
sub
mov
cmpsb
dec
popa
jge
mov
cmp
cltd
clc
in
and
push
jl
push
stos
loope
imul
or
popf
inc
push
sbb
pushf
xchg
outsl
popf
shrl
fstpt
xchg
mov
ja
loope
fnsave
xchg
rorl
dec
add
nop
pmaxsw
call
mov
cmp
insb
inc
mov
cmc
inc
xchg
mov
cmp
imul
in
mov
popa
cmpsl
cltd
adc
fdivrl
loope
cmp
lods
int
je
add
out
scas
stc
sbb
push
bound
pop
cmp
pop
in
adc
mov
jecxz
jg
xor
mov
call
xlat
xchg
dec
rcr
sahf
pusha
das
outsb
sbb
push
dec
fildll
mov
xchg
push
sub
int3
out
and
cmp
dec
test
shl
dec
cli
mov
push
ficompl
in
jnp
sub
ljmp
cmc
not
jecxz
pop
mov
lods
xchg
rcr
mov
and
fwait
in
loopne
out
mov
test
shlb
pop
vmovaps
int3
scas
dec
and
cwtl
and
test
cmpsl
pop
sbb
cmp
ss
adc
std
andl
mov
pop
add
cmc
cwtl
pop
popf
js
cmp
and
or
or
es
jb
inc
or
pop
ret
loope
add
push
inc
ljmp
in
insb
mov
in
test
stc
jo
add
clc
dec
enter
xor
fadd
daa
jg
jae
fwait
cmpsl
ret
enter
sbb
sbb
outsb
pop
jo
inc
inc
mov
ljmp
fnstcw
jns
pusha
xchg
sarl
daa
leave
sub
repnz
jl
pop
mov
dec
imul
add
and
pop
aad
gs
mov
lock
or
jle
dec
mov
mov
icebp
sbb
dec
pushl
cmp
jmp
js
hlt
jnp
mov
xorl
add
lock
movsl
cld
cld
or
push
add
sub
jns
push
mov
test
imul
aad
mov
mov
outsl
and
aas
test
lret
movsl
xchg
xor
pop
mov
dec
iret
arpl
jecxz
mov
cld
dec
cmp
out
icebp
aaa
mov
addr16
orl
xor
push
insb
mov
mov
add
push
sub
pop
cwtl
mov
pusha
mov
int3
cld
je
dec
shl
lea
jp
ds
daa
outsb
sub
scas
dec
push
popa
pop
ss
inc
in
sbb
ja
or
and
in
adc
dec
sbb
jns
xchg
jne
mov
aad
fimuls
cmpsb
cmp
popa
mov
sub
out
mov
out
xchg
add
cli
add
dec
cltd
out
mov
jg
mov
mov
xor
sbb
xchg
jno
xchg
inc
lock
dec
mov
mov
mov
cmp
xor
data16
push
xchg
in
mov
pusha
jbe
enter
add
stos
fdiv
ja
test
jg
popf
aaa
add
insl
pop
dec
pop
push
andl
cwtl
testl
js
popf
dec
movsb
xchg
sub
mov
dec
inc
push
mov
outsl
imul
or
adc
repz
add
cld
push
in
nop
pop
push
jp
iret
ret
sbb
push
lods
dec
adcb
add
mov
sti
mov
test
adcb
push
adc
loope
in
movsl
dec
lret
aas
clc
scas
xor
inc
xor
cltd
pop
pop
xchg
mov
mov
adc
mov
mov
dec
push
push
dec
jmp
and
add
xchg
jo
cmc
mov
mov
popf
mov
cmp
sub
ja
in
jg
mov
in
or
in
push
mov
jne
and
push
add
push
ds
mov
cmp
add
xor
sub
and
jl
inc
pop
aam
int3
xchg
mov
mov
in
mov
popf
push
fstl
mov
pop
shll
int3
xchg
dec
push
xchg
aas
inc
push
fstps
sub
loopne
rclb
ss
adc
imul
or
jg
jge
and
aaa
int
stos
sub
push
or
jae
inc
mov
rcll
or
ficomps
mov
push
mov
jp
shrb
lea
mov
rorb
cmc
inc
dec
pop
sbb
popf
sbb
push
imul
cmp
into
or
repz
lods
xchg
es
add
inc
xchg
or
test
mov
add
sti
insb
lods
jmp
imul
scas
cmp
dec
sub
lods
inc
insb
stos
rclb
fbld
scas
fwait
xchg
inc
mov
bound
xchg
das
mov
ja
std
shr
daa
out
and
lock
std
mov
aas
mov
lret
adc
stos
jo
test
rcr
mov
mov
pop
adc
mov
xor
ret
jmp
add
inc
pop
pop
sbb
in
jl
add
and
jne
addr16
add
stos
cmp
es
mov
push
dec
jo
jecxz
or
push
hlt
dec
inc
out
enter
out
adc
inc
xchg
xor
cmp
into
cs
into
clc
flds
xchg
pop
sub
and
js
nop
or
xor
jle
jp
or
push
stos
jg
xchg
fdivrl
int3
icebp
out
pushf
xor
lret
fwait
dec
push
or
xchg
push
pop
lea
push
negb
xor
or
and
outsb
pop
and
cmpsb
mov
pop
stc
pop
icebp
mov
sahf
rcl
int
add
out
jbe
push
jp
sbb
jne
jl
mov
aas
dec
xlat
or
dec
test
push
pop
sbb
sub
int3
adc
sysexit
adc
mov
stc
nop
mov
sub
mov
scas
mov
pop
jmp
or
cld
jl
nop
scas
mov
loopne
ss
jo
int
xor
xchg
je
mov
std
es
loopne
cmpsb
mov
js
filds
push
repnz
cmp
clc
or
shlb
insl
mov
aam
inc
mov
cmp
loope
add
push
mov
popf
jo
pop
pop
ret
push
pusha
dec
mov
or
in
xlat
das
pop
sbb
sbb
mov
repz
mov
in
sar
pop
daa
ret
or
arpl
fwait
loop
mov
aaa
xlat
test
mov
dec
es
mov
pop
out
mov
pop
pause
popl
test
push
lcall
add
xor
or
inc
push
pop
dec
cmp
sahf
pop
xorl
push
mov
movsb
sub
daa
adc
leave
lcall
push
jecxz
mov
scas
xchg
test
inc
push
xor
sbb
or
clc
add
mov
sub
adc
pusha
sbb
lock
sub
dec
jo
lahf
pop
ret
and
fcmovnu
and
shll
pop
fs
cld
push
cmc
arpl
pop
pusha
pop
rcrb
cmpsl
mov
inc
sbb
sub
gs
ja
movsb
dec
add
outsb
push
add
xor
adc
mov
outsl
and
sbb
movsb
stos
push
xor
xor
xchg
jp
xchg
insb
ljmp
jp
mov
loopne
clc
mov
lahf
mov
and
jno
stc
aad
dec
lods
or
jne
cpuid
adc
adc
or
dec
and
ret
mov
mov
ficomps
xchg
fadds
pop
lock
push
adc
lock
xchg
aas
shrl
gs
ljmp
sbb
adc
aas
movsl
out
push
mov
test
mov
xor
inc
out
pusha
mov
out
push
mov
cli
aaa
cltd
sub
dec
inc
fs
movsb
fs
fcmovb
pop
test
aaa
adc
call
jo
jns
js
fistps
stos
movsb
repz
pop
jbe
xor
mov
xlat
xchg
pop
or
inc
ret
arpl
out
xchg
loop
mov
jb
sub
cmp
scas
in
push
sub
ret
push
mov
addr16
pop
roll
jmp
adc
xchg
dec
daa
movsb
fiaddl
mov
imulb
test
roll
inc
xchg
sar
scas
xor
xlat
rorl
das
sbb
ret
call
call
pop
sti
adc
and
scas
in
dec
jecxz
mov
add
hlt
inc
sub
and
adcl
mov
xchg
jo
dec
jmp
jecxz
test
lret
sub
rolb
andnps
or
dec
int
sbb
pop
addr16
jg
ljmp
sbb
xchg
jle
xchg
fmul
nop
inc
mov
inc
and
ja
movsl
mov
mov
jg
pusha
mov
inc
push
andb
mov
cltd
mov
fcmovbe
jmp
fldcw
inc
inc
lods
lods
or
push
jmp
jp
pop
es
xor
xchg
out
jbe
push
xor
incb
pop
add
mov
sti
adc
push
loope
pop
xchg
test
ljmp
fwait
jb
repnz
fildll
int3
rcr
xchg
fdivrs
add
dec
int
into
test
jg
xchg
mov
dec
push
push
sbb
jle
mov
jnp
xchg
mov
and
xchg
rorb
loope
xor
rol
push
xchg
popf
rorb
mov
test
mov
sbb
fwait
sbb
add
mov
push
pop
jns
ficompl
sbb
mov
mov
add
mov
int
cmp
loop
inc
pop
cs
aam
test
test
stos
movsl
mov
pop
jno
ja
ret
jo
pop
sti
outsb
or
fwait
in
sbb
xor
mov
fs
popf
mov
xchg
lds
jbe
test
jg
mov
mov
mov
adc
lock
sbb
clc
mov
cltd
adc
sbbb
add
jl
cld
sbbl
fisttps
cld
ret
or
icebp
sbb
aaa
or
insb
call
jp
mov
push
cmp
call
scas
shlb
mov
fsubl
and
roll
test
imulb
and
iret
fistl
ds
push
add
out
int3
and
addr16
push
bound
mov
pop
clc
lret
bound
sahf
add
cmp
rolb
cmp
mov
xor
jg
mov
jbe
iret
xchg
mov
xor
mov
cmp
mov
push
cmp
insl
lret
dec
sub
pop
test
enter
daa
pusha
xor
push
xchg
test
dec
push
negl
cmp
or
fistpll
outsb
push
xor
movsb
es
stos
mov
jne
push
sub
adc
lods
popf
pop
inc
sbb
cli
mov
cltd
xchg
push
sub
scas
pop
call
fmul
jo
fistpll
scas
push
cmp
lahf
adc
mov
inc
sbb
dec
inc
jl
ret
sbb
in
sbb
loopne
mov
inc
xor
std
adc
lret
xchg
insl
and
adc
lcall
es
cs
pop
cmp
movsl
mov
and
dec
or
fnstsw
mov
adc
mov
ss
addr16
inc
mov
push
mov
adc
flds
jne
pop
jl
mov
inc
lcall
fstl
bound
mov
pop
mov
jmp
imul
cmpsb
or
xchg
mov
jns
test
mov
sbb
imul
add
jge
rorl
or
lret
leave
pop
and
das
scas
add
les
pop
push
mov
insb
adc
jp
cs
push
test
inc
sbb
fimuls
mov
sbb
adc
arpl
push
imul
loop
cmc
mov
int3
clc
outsb
out
js
movsl
in
movsl
out
jb
adc
mov
pop
rorl
daa
jmp
inc
movsl
mov
out
js
dec
sub
inc
pop
orb
fwait
out
mov
insb
loope
xchg
xor
into
je
mov
outsl
add
xchg
pop
std
divl
sti
xor
dec
push
rclb
cmpsb
sbb
sub
xchg
fwait
pop
aam
hlt
inc
mov
mov
adc
cmpsl
mov
mov
mov
dec
xor
mov
dec
xorb
sbb
je
sub
aaa
ret
jnp
and
sbb
push
push
jae
cmp
cmp
fmull
xor
ret
fwait
xchg
sti
sbbb
add
add
inc
fs
mov
cld
xor
xchg
ss
lods
ret
test
loop
mov
cmpb
ja
aam
into
add
rorl
bound
xchg
mov
sub
inc
pop
add
sub
mov
xchg
mov
pop
lret
pop
dec
cmp
shll
cmp
pop
push
inc
xor
pop
sbb
pop
mov
daa
ret
push
cs
cmp
mov
scas
repnz
and
xor
jmp
pop
xchg
or
mov
jp
movsl
adc
xor
in
add
adc
sub
jle
fisubs
lods
inc
je
dec
add
add
das
pop
jle
cs
mov
adc
jb
push
cli
ror
fdivrs
loope
addb
push
hlt
repz
call
loop
flds
jg,pn
jg
movsb
sbb
pop
ljmp
sbb
pop
sbb
or
cs
out
jno
pop
pop
insl
test
mov
dec
or
mov
or
pop
out
dec
movsb
lods
inc
push
inc
mov
fwait
stos
inc
dec
lods
std
int3
test
jb
xor
cmpsl
push
xor
insb
jp
add
sub
call
daa
xchg
adcb
scas
push
in
es
and
shrl
cmpsb
lods
aaa
jp
xor
pop
sbb
sbb
nop
clc
xchg
sbb
adc
hlt
dec
xor
push
inc
add
rcrl
popf
cmpsl
daa
divl
cmp
jnp
jp
pop
pop
add
pop
lret
fdiv
lahf
pop
mov
inc
xor
jae
fadd
daa
stos
jg
or
lea
push
adc
inc
xor
mov
sub
jnp
in
push
cmp
imul
sbb
mov
mov
adc
mov
xchg
mov
jb
adc
adc
repnz
lret
push
in
outsl
gs
xchg
les
xchg
test
jp
sub
add
addr16
cltd
push
lds
xor
sbb
mov
jecxz
sub
loopne
into
pop
sbbl
shll
mov
out
sti
sub
insb
icebp
push
bound
and
mov
inc
mov
and
mov
jl
fists
mov
mov
dec
dec
push
cmp
es
outsl
ja
xchg
cmc
xor
push
push
sbb
dec
jg
pushf
push
subl
or
xlat
imul
nop
outsb
push
lret
and
movsb
repz
into
jl
std
push
mov
mov
add
mov
inc
sub
cmp
push
sbb
xchg
jo
mov
push
les
xchg
xor
pop
repz
icebp
jl
rcrl
jmp
inc
lods
sbb
cld
xor
bound
nop
idivl
xchg
cmp
out
insb
adc
mov
and
sub
std
lahf
jne
sbb
addr16
cmp
into
xor
dec
cmp
outsl
or
stos
sub
pop
ljmp
push
cmp
ret
fsubrs
adc
cmp
fisttps
in
mov
xchg
dec
lahf
scas
gs
data16
in
or
jb
mov
jns
adc
mov
into
xchg
adc
pop
pop
scas
mov
lret
cmpsl
and
js
mov
and
push
jg
sarb
mov
fidivrl
xor
lret
clc
lahf
iret
out
cmp
scas
cld
ret
jge
fdiv
mov
pop
sub
and
adc
and
mov
dec
icebp
mov
xor
aas
or
test
inc
add
sbb
jno
cs
xchg
push
std
push
outsb
add
fsubr
jb
adc
pop
adc
push
mov
test
out
andb
jb
dec
jb
rcll
push
lds
pop
cmp
int3
gs
stos
sbb
stc
scas
cmpsb
in
inc
or
gs
lds
mov
cwtl
aas
sbb
call
lds
add
ret
adc
pusha
in
insl
pop
into
cli
or
sub
mov
lcall
mov
aaa
test
loop
jmp
mov
xchg
outsb
stos
mov
dec
lds
xchg
in
mov
sbb
sarb
add
cmpsb
sub
leave
movsb
jnp
adc
sub
addl
sub
fbstp
pushf
mov
mov
ss
hlt
push
arpl
fsts
jb
pop
call
mov
push
xor
addb
xor
push
repnz
test
jb
mov
sub
les
ret
pop
jge
insl
sarb
push
out
and
inc
inc
adc
jns
mov
jbe
imul
fisubrs
mov
mov
lea
rorl
cmc
dec
sbb
push
shr
cs
loopne
jl
and
stc
stos
aas
push
mov
popl
fstps
int3
sbb
mov
inc
pop
icebp
stos
arpl
sub
cli
push
pop
xor
and
cs
adc
insl
pop
sub
pop
cmpsb
lahf
xchg
pop
dec
sub
rcl
jmp
inc
mov
aas
movsl
ja
sarb
mov
lret
icebp
xacquire
testl
cmp
jne
es
pop
addb
mov
cwtl
dec
lahf
or
adc
pop
mov
push
or
add
jns
mov
mov
cmp
testl
int3
jo
bound
in
xor
iret
cmp
push
test
xor
and
mov
jno
cwtl
inc
dec
xchg
xorw
push
fildl
icebp
imul
test
stos
enter
ret
xlat
xor
jp
push
push
mov
xchg
stos
fstp
pop
outsl
popf
and
cmp
rclb
std
pop
sbb
mov
mov
mov
cmpsl
sbb
gs
mov
mov
pop
fsubr
pop
fstpl
testl
pop
les
into
add
mov
push
pop
loopne
adc
inc
jle
xor
fs
add
leave
push
fbld
clc
les
cmp
rcrl
aaa
aad
xor
mov
cmp
int
aam
xchg
lods
and
inc
sbb
cmp
xchg
ret
mov
cmp
nop
test
jmp
aaa
in
cltd
xchg
jp
jge
push
jmp
lcall
xchg
mov
adc
push
pop
mov
xchg
jmp
cmpsb
cmp
mov
jbe
aaa
dec
jb
insl
out
fadd
rclb
mul
lods
cmc
out
jle
xchg
xchg
add
mov
adc
mov
daa
mov
or
add
in
jb
sub
or
jno
dec
dec
std
push
packssdw
push
pop
ss
movsl
xor
fcoml
inc
psubb
inc
ljmp
push
push
out
ror
imul
stos
icebp
ja
xor
mov
push
dec
mov
ffreep
cmpxchg
leave
and
and
stc
jmp
dec
sub
sbb
mov
push
jne
push
add
or
jnp
daa
sbb
mov
jbe
daa
mov
mov
sbb
gs
aaa
dec
pusha
iret
inc
fdivrs
aaa
ja
mov
or
and
rorb
loope
fiadds
add
negl
add
mov
call
dec
mov
cmp
ret
add
cmc
jb
sbb
sbb
pusha
bound
test
mov
mov
scas
out
xchg
add
mov
mov
push
or
cmp
cmpsl
sbb
mov
in
or
gs
push
out
mov
xchg
push
pop
or
jp
mov
das
arpl
mov
jae
sahf
idivb
daa
sahf
bound
shl
lret
or
inc
loopne
paddw
mov
fmuls
adc
lock
aam
add
shr
cli
cmpsl
inc
sbb
pusha
aam
pop
cld
or
mov
dec
stos
and
adc
xchg
jmp
std
test
sahf
mov
adc
nop
repz
movsl
adc
pop
mov
insl
mulb
popa
add
push
test
or
lods
cmp
dec
dec
das
std
dec
jl
in
imul
popa
pop
xor
jmp
scas
aas
or
and
mov
and
sahf
xor
shl
and
pop
jecxz
cs
add
inc
jns
xchg
imul
mov
jo
lods
mov
sbb
ss
outsb
xchg
das
push
call
pushf
jge
sbb
rolb
lods
jns
ljmp
xchg
sbb
pop
sub
aas
mov
or
dec
dec
mov
inc
pop
pushf
jp
xor
mov
lcall
sbb
mov
mov
mov
fldt
mov
leave
aam
ljmp
push
stos
jbe
das
cmc
leave
xchg
popa
scas
push
ret
sbb
fsubrl
cmc
je
cmp
movsb
dec
jns
push
xor
into
cltd
mov
push
jnp
add
pop
add
push
xchg
xchg
cmp
or
call
call
into
pop
sbb
jmp
fwait
int3
mov
adc
je
mov
xlat
stos
pop
imul
in
in
dec
and
in
shll
dec
jecxz
or
test
adcl
sbb
daa
das
movsb
and
push
es
pop
gs
daa
pop
jae
mov
push
sbb
lea
push
jb
popa
arpl
add
xor
jo
mov
mov
sbb
pop
xchg
cmpsb
sbb
repz
dec
xor
das
cmp
mov
aam
gs
notb
and
movsl
les
gs
loope
jl
or
mov
or
shrb
cmpsb
cld
out
mov
push
cmp
jle
sbb
sbb
lret
clc
test
into
test
or
movb
dec
std
jno
sbb
add
mov
cli
add
sahf
xchg
and
mov
addb
rcrb
inc
mov
adc
push
hlt
mov
scas
xchg
insb
and
fucomi
xchg
push
iret
mov
mov
adc
negl
insl
andb
in
adc
pop
mov
sar
sbb
fwait
repnz
sbb
call
jae
loope
xor
insb
lods
or
and
inc
fistpl
dec
xchg
repnz
push
and
dec
imul
pusha
push
imul
push
jno
mov
add
movsb
gs
xchg
or
inc
sub
mov
out
mov
jge
cwtl
cwtl
dec
ja
jecxz
pop
or
fcmovu
cwtl
add
cmpsb
jns
loop
xor
xorl
testb
popf
stos
fnsave
out
xchg
or
orb
sahf
xchg
mov
das
push
sub
rcl
push
dec
inc
fldl
mov
stos
fcmovnb
std
lahf
loopne
fisttpll
shlb
mov
icebp
cld
add
xchg
cmp
xchg
adc
flds
sub
int
rcl
push
pop
arpl
jo
or
scas
mov
xor
out
inc
pop
xorb
mov
test
into
xchg
test
jbe
jne
sbb
jno
sub
outsb
fistps
fs
push
adc
dec
adc
push
and
jmp
pop
mov
jo
fiadds
and
jecxz
push
xor
jb
jo
xor
jne
or
mov
sbbb
cmp
sbb
es
lea
add
mov
add
dec
pop
sbb
mov
test
divb
push
sbb
out
push
and
sub
testb
sbb
or
imul
and
icebp
insl
pop
pop
xchg
sbb
inc
dec
add
mov
movsl
add
cmp
mov
cmpsb
out
lcall
jmp
sbb
xchg
sbb
mov
pop
test
jb
push
fs
sub
pop
dec
insl
sbb
fisubl
lock
fdivrl
test
sbb
enter
out
aad
cmpsb
lret
adc
hlt
mov
fdivrl
ljmp
xorl
push
mov
orb
mov
xor
mov
mov
jo
rorb
inc
cs
xchg
xchg
mov
lods
jmp
stos
pop
jmp
sarl
out
mov
jnp
push
sahf
jmp
cmpsl
jp
jo
leave
inc
mov
jmp
test
pop
dec
stos
xchg
fwait
ja
flds
sub
mov
mov
push
dec
imul
jp
dec
outsb
jno
int3
outsb
sub
dec
cmc
aam
cmpsb
popf
fcoms
cmc
scas
add
push
in
or
mov
sbb
mov
ror
loop
ds
mov
fildl
inc
addr16
inc
sbb
sbb
stos
cmp
mov
jmp
mov
insl
mov
or
and
addb
sbb
and
sbb
mov
xchg
test
xchg
mov
inc
cmpsb
or
jb
add
cmpl
xor
push
lcall
cmp
xorb
daa
mov
jg
xor
mov
sbbb
jle
aaa
mov
ljmp
stc
iret
stc
negb
repz
mov
adc
cmp
inc
leave
leave
mov
xchg
sub
jb
xor
push
je
ja
fildll
mov
in
es
cwtl
aaa
push
subl
call
shrl
jmp
sbb
test
or
hlt
roll
loop
gs
mov
xor
sub
mov
fwait
scas
mov
pop
leave
adc
push
jo
decb
dec
or
mov
cmp
add
stc
cmp
out
xchg
mov
dec
inc
das
cmp
inc
pop
jp
iret
mov
aaa
adc
sub
lret
pushf
push
push
shlb
adc
xchg
loop
lret
popf
adc
clc
jge
in
mov
adc
ljmp
das
repnz
mov
shrb
adc
add
js
jno
cmp
cmp
cmp
sbb
jae
xor
shll
dec
push
das
lods
jno
cmp
xchg
mov
xlat
sbb
decb
sbb
stos
adc
cmp
jp
push
pop
mov
sbb
aas
xor
lock
scas
into
and
mov
jp
jne
jmp
cld
stc
pusha
cmp
xor
and
push
fwait
mov
xchg
sub
pushf
adc
or
in
mov
inc
xchg
scas
in
movsb
adc
pop
ljmp
jae
call
lea
adc
loop
addr16
imul
js
sub
shl
ret
jb
jb
loop
out
lods
fnstcw
and
add
xchg
mov
mov
out
movsb
add
sub
or
xlat
enter
psrlq
scas
bound
sub
jno
stos
lahf
clc
fisttps
jnp
aad
arpl
sbbb
adc
push
fmuls
sub
add
mov
cmp
jg
fs
xchg
cltd
jmp
mov
pop
imul
pusha
xorb
shll
mov
lret
imul
push
not
and
and
scas
inc
mov
es
loop
rorb
pop
sub
lahf
or
xchg
jb
repnz
icebp
push
push
dec
les
das
gs
fbld
xchg
arpl
out
push
out
adc
or
and
push
int
or
fdivrs
and
sbb
pop
fcmovnb
fcomps
outsb
cld
add
adc
or
scas
mov
in
shll
mov
js
orl
daa
push
imul
notl
jg
pushf
cmpsl
inc
jb
xor
outsb
adc
pop
lods
dec
sbb
stos
push
jl
pushf
inc
ret
sbb
cs
mov
adc
hlt
shll
aas
mov
jmp
iret
jle
out
mov
add
or
les
push
mov
lods
inc
lea
outsl
sahf
jg
ja
imul
rcl
pushf
jmp
fsubrl
insl
sbb
jge
das
mov
push
jo
xchg
mov
jg
hlt
adc
pop
movsl
inc
mov
inc
mov
and
inc
pop
push
mov
ret
jo
mov
adc
mov
cmp
dec
stos
or
jle
pop
imul
push
in
push
out
jbe
shrl
jge
push
scas
xor
jle
outsb
mov
or
cmp
push
dec
dec
in
loop
movups
icebp
dec
or
fstpt
pop
sbb
xchg
adc
rclb
mov
pop
xor
std
cmp
cmc
pop
in
push
push
push
cmp
mov
jmp
cmp
pop
sbb
mov
jb
mov
sbb
sub
or
push
push
imul
lret
pop
insb
fsubr
movsb
sub
pop
out
call
pop
int3
xchg
dec
jle
jns
ja
mov
xor
add
jecxz
mov
inc
outsb
les
jae
xorl
mov
mov
ds
ja
sbb
mov
fstpt
sub
cmp
mov
sub
shll
cmpsl
data16
adc
mov
sub
fsts
rcll
aad
in
jae
je
pushf
ss
dec
push
mov
sub
dec
adc
xchg
and
lds
dec
push
out
push
mov
dec
call
orb
fistl
clc
adc
inc
push
out
test
loope
popa
push
nop
mov
dec
aam
adc
mov
adc
test
ds
push
and
out
adc
mov
xor
mov
jmp
sub
mov
ja
imul
outsb
out
ja
das
xor
es
popa
loopne
cmc
mov
jmp
aam
push
mov
inc
and
pop
jecxz
jnp
mov
ss
lahf
add
roll
andb
or
bound
sub
push
sbb
andl
cmp
mov
nop
shl
imulb
icebp
xchg
into
ficoms
in
cmc
lret
cmpb
sbb
xor
sbb
xchg
in
call
leave
test
and
and
lret
ja
hlt
mov
add
orl
inc
add
mov
push
lret
fisttpll
das
cli
je
or
aad
test
sbb
out
adc
xor
mov
add
sbb
jp
jne
cltd
mov
test
dec
mov
jg
mov
ljmp
jae
call
mov
out
fisubl
iret
add
adc
xchg
std
mov
sbbb
test
push
jmp
xchg
andl
cmp
and
adc
adc
mov
and
xchg
cmp
out
in
into
jecxz
add
ljmp
pop
lea
xchg
jae
shrb
nop
sub
cmpsl
filds
push
mul
inc
ret
jne
push
add
sbb
mov
inc
leave
xor
cltd
xor
add
dec
jbe
bnd
fcmove
imul
leave
lods
into
mov
imul
adc
sub
sbb
xchg
aam
inc
ret
fildll
jbe
push
mov
xchg
sbb
add
mov
xchg
imul
lret
je
or
sbb
mov
pop
ljmp
cltd
inc
push
sarl
lea
jns
js
cltd
sub
xchg
sbb
into
adcl
add
arpl
js
cmpsb
push
add
stos
jmp
bound
mov
push
push
movsb
cli
loop
nop
adc
adc
cmp
scas
rcll
cld
scas
outsl
lock
ljmp
and
int
lret
iret
jbe
test
sahf
jmp
inc
sar
out
aas
test
incl
rolb
loop
scas
addr16
mov
ljmp
and
imul
push
push
bound
fimull
out
ret
addb
loope
je
fdivl
inc
sub
dec
sbbl
push
mov
adc
cmp
xorb
lods
jno
sub
repnz
imul
call
xorl
pop
outsb
mov
jle
int
mov
cmpsb
out
push
mov
xor
and
aam
push
sbb
popa
popa
jmp
pop
ret
test
push
test
sub
test
call
cmp
inc
les
sub
adc
leave
mov
movsb
mov
jmp
sar
push
cltd
and
jbe
orb
test
adc
lea
cmp
pop
sub
sub
add
and
jnp
xchg
es
xor
fucomi
in
lods
xchg
sub
or
insl
add
sbb
lods
leave
xor
jo
pop
mov
push
in
inc
arpl
nop
and
jp
pusha
push
divb
imul
sbb
insl
test
repz
hlt
sbb
pusha
pop
out
mov
adc
fadd
je
addr16
cmp
push
jno
mov
inc
mov
ljmp
jg
test
cmpb
mov
mov
dec
mov
xor
lahf
cmp
and
or
mov
xor
inc
rcl
jo
mov
in
scas
mov
pop
mov
movsb
pushw
arpl
insl
dec
mov
insl
aas
mov
or
pop
jnp
daa
xchg
xor
push
jge
adc
sarl
enter
mov
cmp
push
mov
push
test
aam
add
clc
dec
sbb
fprem
notb
push
pusha
jb
mov
xor
sbb
mov
xchg
add
pop
pop
fwait
xchg
in
inc
lock
fsubr
scas
jge
pop
add
jecxz
imul
loope
stos
xor
rcl
xchg
xor
xchg
jns
push
sbb
mov
xchg
int
int
test
iret
das
daa
or
ss
scas
jo
ss
cmpl
adc
and
mov
icebp
xchg
jle
dec
push
and
lock
and
je
jbe
ds
pop
inc
fst
cmpsb
dec
push
cld
iret
dec
mov
mov
test
push
mov
shl
dec
lock
sub
inc
add
dec
iret
and
mov
adc
pop
in
insb
jno
jns
xlat
std
fisttpl
xchg
mov
ljmp
imulb
jle
test
add
mov
sbb
shlb
mov
fcompl
outsl
jns
inc
lcall
cmp
in
aam
movl
sub
sbb
stos
iret
lods
xor
aaa
out
or
out
lds
hlt
push
insl
jno
pop
cmp
push
mov
js
xchg
cmp
pop
mov
cltd
rorl
jge
dec
jg
or
mov
sub
scas
cltd
cs
in
cmp
cmp
cmp
or
adc
and
lret
or
test
test
loope
xchg
push
inc
dec
cmpsb
sub
dec
and
scas
les
xchg
sahf
les
mov
sub
scas
std
loope
mov
mov
int
outsb
or
sbb
push
insb
dec
iret
int
data16
xchg
cmc
aaa
js
out
sub
cld
cs
pop
pop
stos
lea
das
mov
sub
nop
add
dec
mov
sub
outsl
or
sbb
or
shl
xor
outsb
push
jo
lods
test
test
imul
stc
mov
jle
pop
mov
inc
enter
test
andl
out
dec
cmpsl
iret
pop
rdpmc
cs
insb
sub
jecxz
or
loop
popa
lea
xchg
push
jo
and
and
sub
rcrb
shlb
cmp
or
shl
enter
dec
es
dec
dec
fwait
mov
lods
pop
shrl
or
inc
test
mov
rcl
std
int
cmp
or
xor
lock
aas
adcl
mov
bound
xor
push
mov
sub
dec
add
cltd
shrb
pop
pop
add
imul
test
icebp
add
and
push
imul
out
outsl
into
ffree
popf
lock
jo
xchg
jo
cmp
pop
lods
out
pop
mov
lret
jns
cld
dec
adc
push
ja
lcall
shr
ljmp
lret
and
xor
xchg
xchg
lods
clc
xchg
add
sub
add
je
shrl
outsl
loopne
mov
rcrb
loop
cmpsb
pop
cmpxchg
add
bound
lret
xchg
mov
mov
xchg
imul
rcll
pandn
jne
popa
stos
cmpsb
pop
pop
int3
xor
push
in
pusha
ljmp
hlt
mov
stos
test
fisubrl
aad
or
and
cld
lods
fbstp
and
jno
jns
jle
cmp
mov
sbb
popf
push
test
gs
dec
jl
imul
pop
in
xor
add
movsb
xor
test
and
pop
and
test
push
cmp
je
push
add
xchg
in
mov
lret
jle
imul
cwtl
cld
inc
add
arpl
or
push
cmp
gs
ret
jg
add
add
pop
repz
ds
xlat
push
mov
add
push
sub
cmc
lods
fidivrs
lcall
sub
daa
xchg
add
aaa
in
push
and
jb
in
sub
fildll
int
ljmp
xor
mov
cltd
fldl
iret
sub
add
mov
sbb
mov
jle
mov
or
sbb
cli
shlb
dec
xlat
xchg
dec
stos
fdivs
jb
mov
fildl
filds
mov
jns
decb
popf
mov
xchg
adc
cs
dec
or
pop
xor
sti
xor
shlb
out
sub
adc
setbe
insb
jle
mov
aam
cltd
cmp
lret
dec
push
push
std
and
inc
pop
fimuls
pop
fnstsw
and
sbbl
dec
cs
int3
mov
pop
andb
add
push
adc
push
shrl
mov
arpl
outsl
nop
lret
lret
icebp
js
fldenv
mov
pushf
push
lahf
in
pop
jecxz
push
cs
movsl
inc
jne
std
shl
and
xor
pusha
push
jl
in
lcall
mov
pop
sbb
sub
jp
push
jmp
dec
dec
lret
cwtl
and
pop
out
push
fiaddl
in
ficoms
add
xor
sub
mov
mov
je
and
stos
mov
push
mov
rorl
addr16
je
loopne
call
hlt
jg
or
jmp
push
arpl
cmp
aad
fsubrl
outsl
js
mov
mov
or
shrl
jp
insb
push
test
cld
jecxz
cmp
mov
stos
lret
fidivrs
push
sbb
mov
adcl
push
adc
inc
divb
stos
add
jae
lcall
pop
sub
aad
fsubl
mov
les
repz
fs
aam
in
xchg
insl
mov
test
fsubl
test
outsb
dec
js
xor
cltd
pop
jne
pushf
ficomps
fucomp
data16
fpatan
lahf
enter
mov
idiv
sub
ss
fmull
cld
shl
fistl
sbb
pop
jmp
and
cwtl
and
in
stos
jl
xchg
pop
mov
cmp
loop
ret
les
adc
ljmp
sub
jp
out
xchg
dec
push
jae
sahf
aad
in
fwait
adc
sub
pushf
add
shrb
repz
xchg
sub
dec
subl
pusha
fimuls
push
mov
cs
ret
sbb
mov
cld
lods
inc
loopne
test
mov
push
or
daa
ljmp
addr16
in
rclb
lret
je
data16
fcomps
add
das
push
das
fldenv
pop
lock
push
xor
mov
into
fnstcw
xchg
fmuls
cmpsb
mov
jecxz
xchg
add
push
cmp
adc
mov
mov
sub
out
sti
sahf
test
xchg
add
mov
adc
pop
inc
push
icebp
dec
mov
ret
add
arpl
test
jmp
inc
push
rorb
shrb
xchg
xor
out
fstp
xor
add
lret
cmpsl
xor
je
push
mov
idivl
mov
mov
clc
jne
lods
and
mov
mov
mov
adc
xchg
addl
xchg
lahf
or
jae
cmp
aaa
shrl
test
daa
ret
fs
decl
mov
adc
push
add
mov
sbb
cld
sub
scas
inc
push
cltd
add
je
xchg
pop
xor
mov
ret
push
inc
push
stc
sahf
mov
sti
iret
leave
mov
pop
jo
xlat
xorl
int3
or
rol
dec
add
cmp
cmpsb
jno
mov
and
mov
fcmovb
cld
mov
mov
pop
mov
push
mov
cmpsb
inc
and
mov
pop
sub
mov
adc
loop
out
hlt
fldt
xchg
add
hlt
cmp
sbb
xorl
mov
arpl
ret
push
inc
xchg
jmp
push
mov
scas
in
xchg
adcb
out
cmpsb
sub
mov
xchg
dec
xchg
xchg
insb
and
cmpsb
xlat
mov
aaa
pop
push
fwait
sub
cmpl
fnstenv
xor
mov
repnz
cmp
mov
pop
ss
enter
dec
pusha
dec
xor
dec
ljmp
or
or
cmpsl
xchg
cmpsb
aam
ljmp
enter
shlb
and
mov
test
push
add
fists
mov
xor
cmp
cmp
xorl
pop
jg
fisubrl
pop
add
add
jp,pt
mov
outsb
ret
adc
stos
sub
xchg
mov
test
call
stc
adc
icebp
xchg
loopne
sbb
jnp
adc
leave
insl
cmp
dec
xchg
sub
les
bound
fs
lret
repz
mov
xor
outsb
cmp
outsl
mov
xchg
dec
daa
cmpsb
enter
and
dec
push
xchg
iret
push
out
and
leave
or
mov
movsb
sbb
mov
pop
xchg
scas
pushf
cltd
or
push
pop
lods
and
nop
das
cmp
cs
sub
call
push
push
lret
jae
sub
pop
dec
into
jmp
fsubs
std
testb
push
cmp
scas
jno
mov
insb
pop
add
dec
push
pop
mov
lahf
push
rcr
jg
xor
xor
pop
mov
pop
icebp
popf
push
je
cmp
push
jbe
mov
mov
mov
ss
xor
cmc
mov
jmp
jmp
jp
and
leave
mov
mov
mov
jnp
cmp
mov
cmp
gs
lea
mov
jg
fmul
pop
out
inc
cmp
sbb
mov
icebp
fistps
cmpsl
mov
jne
xor
pop
leave
mov
aad
cmc
pop
or
lcall
outsb
jne
sbb
scas
shrb
sahf
cmp
idivl
mulb
and
push
outsb
inc
jecxz
cmpl
addr16
push
pop
or
popl
mov
xlat
cmp
stc
xor
jle
mov
mov
sbb
lcall
dec
imul
or
outsl
push
data16
decl
inc
push
pop
loope
push
cmp
cltd
das
shl
pop
rol
cmpsb
repz
pop
jg
add
daa
les
faddp
jle
mov
repnz
mov
xchg
adc
clc
mov
divl
and
xor
stos
cltd
mov
in
push
sbb
xchg
mov
add
jae
pop
cs
pop
mov
sbb
movsb
adc
jne
lds
push
mov
pop
enter
xor
addr16
jecxz
pop
or
push
jo
sbb
mov
dec
imul
test
mov
jecxz
adc
sub
push
add
sub
les
mov
iret
pop
loopne
cmp
cmp
les
jg
daa
adc
adc
mov
repz
aaa
dec
mov
in
les
mov
movsb
sbb
fidivs
loope
ss
ja
iret
ret
sti
aaa
sbb
push
sti
xchg
insl
fwait
popf
sbb
fcomps
push
inc
cmovae
loop
in
or
loope
aad
roll
mov
cmp
and
test
xchg
sub
inc
mov
dec
mov
in
aaa
lds
push
cs
jg
lcall
pop
outsb
adc
rcll
out
fdivrp
add
popf
jle
sub
jge
mov
int3
cli
fwait
lret
and
jb
fcoml
cli
outsb
decb
sbb
jae
mov
push
mov
jns
jnp
push
mov
bound
insl
cmp
je
pop
and
andb
repz
pop
inc
scas
xor
jb
pop
mov
jns
mov
fstpt
jg
cmp
cli
dec
je
pop
inc
sbb
shlb
jae
jnp
mov
sbb
sub
mov
push
daa
inc
mov
ja
lret
adc
xor
aam
cmpsb
mov
or
nop
pop
stc
sub
or
sbb
es
pop
stc
xchg
or
xorl
sub
mov
fcomip
sbbb
jno
leave
dec
dec
jno
outsb
inc
pop
dec
cmp
push
xchg
incb
out
jg
jp
push
mov
sub
fwait
out
les
cltd
or
mov
mov
sub
xor
jg
adc
push
push
subb
mov
cs
mov
lods
mov
sub
fucomp
hlt
cmpsb
shrb
cmp
das
fwait
test
mov
lcall
pop
fnsave
cmp
xor
push
mov
lds
dec
es
sbb
call
xor
mov
mov
cmp
rorl
adc
test
popa
fwait
rolb
cmp
lahf
mov
cmp
js
sahf
fs
add
push
jmp
mov
in
inc
inc
cld
mov
fcoml
pushf
push
jmp
jmp
cmp
mov
mov
pop
or
pop
and
pop
mov
or
insl
fs
or
js
xchg
mov
xchg
sti
imul
cmp
roll
jnp
push
xlat
bound
push
mov
cmp
mov
inc
ds
dec
xchg
cwtl
shrl
inc
xor
xchg
inc
popf
mov
shld
in
and
aaa
push
push
repz
arpl
mov
sbb
mov
jae
dec
push
sub
xchg
hlt
sub
jae
aaa
test
cmp
inc
cltd
mov
mov
das
syscall
test
mov
test
popf
out
aas
add
push
ds
rcrb
daa
pusha
and
ds
or
inc
cltd
inc
daa
adc
add
xchg
ret
pop
mov
out
sbb
adc
mov
xchg
xchg
cmpsb
push
pop
jecxz
and
test
test
sub
add
test
or
push
push
lock
mov
fisubrs
rcr
lret
or
cmp
push
add
mov
pop
fsubl
fdivrs
loop
int
mov
sbb
xchg
out
jno
outsl
lcall
add
inc
ret
icebp
cmp
and
ss
shrb
push
fiadds
cltd
jge
jmp
icebp
fs
mov
lret
mov
gs
ljmp
aad
jle
add
repnz
in
fsts
or
das
xchg
rcll
filds
fldcw
pop
mov
xor
cmp
jge
popf
cld
jl
xchg
and
jp
andl
rclb
std
xchg
sahf
movsb
add
incb
in
test
imul
gs
jne
push
lret
pushf
xor
and
popf
and
add
mov
sbb
mov
adc
mov
mov
sub
mov
test
xor
unpckhps
lods
movsl
mov
mov
popf
pusha
mov
push
jbe
jmp
inc
mov
cmp
notb
jge
xchg
or
and
sub
dec
mov
xchg
push
in
fiaddl
and
mov
dec
outsl
sub
sbb
pop
dec
aaa
dec
sarl
sbb
mov
pop
pop
mov
outsb
mov
inc
clc
in
stos
ficompl
push
adc
and
lock
pushf
push
dec
xor
or
fld
lcall
or
loope
mov
fstps
out
sub
cmp
mov
add
and
and
push
mov
rcll
test
lods
in
xchg
cltd
cwtl
adc
or
ret
mov
cmp
popf
cli
pop
sub
movsl
cmp
pop
xchg
cmp
dec
pop
push
and
das
sbb
sbb
in
xchg
pop
movsb
movsb
pusha
scas
mov
and
sbb
rcrl
popa
pop
ret
or
adc
dec
and
imul
inc
or
jg
cmp
pop
push
add
pop
inc
mov
arpl
shll
sub
loop
mov
pop
xchg
loop
loopne
ret
jae
mov
and
js
lcall
mov
std
repnz
out
aam
popf
ja
rcrl
in
xchg
int3
xlat
lea
and
jbe
xor
xor
jbe
mov
mov
push
adc
test
add
jp
inc
dec
daa
jle
cld
mov
mov
dec
out
fidivs
mov
dec
jo
inc
sbb
loop
jb
mov
dec
pop
jle
insl
mov
fiaddl
data16
sahf
push
fcomip
push
icebp
lcall
pop
add
out
add
daa
pop
decl
adc
test
or
jo
daa
mov
mov
test
lods
and
sbb
inc
pop
mov
or
push
loopne
inc
std
aaa
fs
test
xor
xor
sbb
mov
xor
cmp
ret
xchg
in
add
daa
fstl
idivl
push
pop
jp
je
push
scas
sub
xor
je
dec
xor
clc
movsb
jb
mov
xchg
pop
movl
jg
cmpsl
rcl
mov
mov
dec
ja
outsb
inc
sbb
xor
repz
cmpl
push
jmp
pop
jae
punpcklbw
pusha
jmp
or
repnz
mov
lods
pusha
push
fwait
xor
arpl
rolb
cmp
add
fisttps
mov
fnstsw
xchg
mov
stos
imul
jl
xchg
out
jae
icebp
rclb
jb
push
out
push
in
js
mov
mov
xor
les
fimuls
or
add
dec
pusha
adc
int3
incb
jge
in
adc
shr
add
pop
imul
clc
ljmp
popa
sbb
pop
pop
inc
inc
stos
jmp
jno
ret
jmp
insb
sahf
les
mov
fs
es
clc
jl
xchg
ljmp
xor
int
iret
mov
jmp
mov
inc
jmp
pop
xor
fsubrp
inc
mov
rcl
imul
movsl
add
jbe
ljmp
push
popl
lods
inc
je
in
mov
xor
data16
sub
or
in
sbb
call
dec
cwtl
sahf
inc
out
adc
lahf
add
aam
sub
jae
scas
mov
out
jp
pop
outsl
cmp
lahf
test
add
imull
mov
mov
fs
loope
adcb
inc
outsl
xchg
sbb
xchg
adc
shll
push
call
ljmp
pop
and
pop
xor
mov
jmp
out
stos
and
or
push
mov
sbb
mov
ja
call
sub
jmp
mov
sub
jmp
jecxz
sbb
dec
mov
and
push
xor
add
fimuls
fisubrl
inc
sub
and
add
jb
popf
call
mov
arpl
out
lret
addr16
xor
inc
outsl
sti
and
popf
std
faddl
mov
dec
inc
movsl
adc
cmc
cmpsl
addb
stos
xchg
push
fsubp
xchg
and
dec
xchg
xor
jne
scas
aaa
xchg
cwtl
sbb
cmp
rcrb
dec
jne
rolb
test
push
pop
ret
push
repnz
xchg
mov
pop
mov
mov
repz
push
mov
in
and
shl
pusha
insb
mov
pop
push
ds
sub
out
shlb
mov
dec
xchg
jl
xchg
sti
mov
dec
sti
adc
pop
popf
call
imul
adc
and
cs
test
fsts
push
jg
scas
xor
pop
ds
mov
jns
dec
sahf
outsl
xchg
mov
les
movsl
mov
inc
mov
pop
fmul
mov
repz
ss
or
jle
mov
sub
jge
call
mov
nop
hlt
rorl
xlat
cmp
mov
movsl
test
jne
addr16
ret
shlb
int3
dec
sub
ja
mov
sub
filds
cmp
mov
push
add
stos
ss
sar
pop
adc
out
push
mov
push
jns
rcll
shll
mov
lret
and
cmp
test
and
inc
sub
sub
adc
mov
in
aam
inc
dec
pop
rorl
insb
sbbl
ret
shrb
cmpsl
dec
shlb
cld
push
imul
pop
xlat
enter
add
pop
mov
jns
mov
mov
push
push
ljmp
stos
iret
icebp
sbb
aaa
sub
xorb
fwait
outsl
add
jmp
mov
movsl
movsb
jne
pop
inc
lods
lea
lock
repz
lea
mov
cmc
sub
push
push
idivl
cmp
mov
push
gs
jle
pop
push
inc
rcl
insl
shll
rcr
lods
mov
mov
add
sub
xor
xchg
rcr
daa
fcoml
cld
push
repnz
stos
pop
push
push
fwait
insl
inc
cwtl
adc
mov
cmp
ja
and
mov
xchg
ljmp
mov
cmp
pop
push
rcrl
push
push
xchg
xchg
sbb
adc
loope
xchg
insb
mov
mov
fistps
mov
incl
das
sahf
and
jmp
andl
out
test
sub
or
xor
push
inc
pop
cmp
adc
mov
adc
fld1
cltd
div
push
ret
mov
int3
push
cli
add
dec
cltd
ja
adc
insb
sbb
mov
shl
sub
xor
dec
mov
lock
sbb
mov
popa
dec
pop
xchg
push
xchg
push
aad
mov
add
jp
pop
xchg
sbb
test
dec
mov
cmp
icebp
jmp
push
shl
or
fwait
add
pop
mov
push
pushf
leave
mov
ss
mov
push
sbb
aas
pop
mov
jg,pn
xchg
nop
fimull
dec
push
push
cwtl
cld
into
xlat
or
notl
repz
nop
lods
jnp
pushf
sub
sahf
cld
cltd
and
pushf
idivb
data16
arpl
jle
sbb
xlat
mov
mov
mov
movsb
add
movsb
shlb
out
adc
xchg
jae
sub
dec
mov
inc
jge
or
sbb
lcall
mov
pop
jle
ja
out
dec
xchg
xchg
add
cmpsb
sub
mov
mov
fcom
loope
frstor
inc
mov
fldcw
push
dec
inc
sbb
rcll
mov
sbb
mov
cwtl
sub
imul
jp
sahf
mov
ret
decl
lcall
rorb
hlt
stos
loope
loope
lret
popa
shlb
add
call
jmp
push
in
mov
clc
push
xchg
pusha
dec
push
les
jg
add
and
and
mov
enter
stc
mov
xor
ljmp
test
adcl
cmp
fwait
subl
imul
into
push
pop
shlb
xchg
mov
clc
pop
icebp
ret
das
mov
shlb
mov
imul
jb
mov
es
cmpsl
push
mov
mov
test
cmpsl
add
cwtl
mov
push
adc
sub
adcl
dec
and
xchg
pop
mov
insl
add
mov
mov
cmp
pushf
sti
ljmp
xor
rclb
add
mov
rcll
jmp
pop
fmull
imul
js
push
pop
dec
popf
mov
arpl
xchg
inc
and
or
sbb
add
aam
fs
inc
mov
xor
cs
sbb
push
lods
mov
out
js
dec
inc
fdiv
add
xorb
mov
lea
movsb
notl
push
enter
jnp
push
es
imul
out
sub
xor
call
std
daa
adc
pop
sbb
mov
xlat
je
cmpsb
repz
dec
add
cmp
lds
stos
test
xor
mov
and
pushf
pushf
cmpsl
pop
xor
sbb
sbb
push
mov
dec
mov
fdivl
push
and
daa
xor
out
mov
scas
cli
dec
popa
sbb
add
aam
xor
stos
sbb
cwtl
push
sbb
jbe
cmp
std
daa
lods
mov
jns
cmp
sbb
mov
lahf
in
int3
lods
shrb
adc
outsb
pop
mov
or
inc
outsb
pop
int
adc
mov
inc
dec
push
fmuls
sub
leave
jno
lret
mov
jge
jmp
repz
adc
dec
pop
mov
aaa
icebp
out
jo
leave
jl
pushf
lret
jo
iret
test
popa
push
imul
add
add
inc
sbb
pop
les
pushf
test
cmp
shrb
xchg
adc
push
mov
in
xor
aad
adc
mov
addr16
xchg
sbb
push
call
mov
nop
dec
or
lds
mov
sahf
dec
inc
add
xchg
push
repnz
shlb
das
shld
pop
jnp
imul
add
int3
lods
sbb
dec
push
icebp
inc
clc
pop
push
adc
rorb
dec
lret
pop
into
pop
int
call
std
rcll
pop
lock
cmpsl
xor
imul
ficoml
jno
cltd
aam
pop
arpl
dec
and
cld
test
in
sub
sbb
mov
push
inc
ss
mull
cmp
or
add
fs
shl
push
fisttpl
sub
dec
mov
jp
flds
push
jmp
dec
and
fdivs
pop
dec
pop
mov
jmp
jge
sbb
inc
or
dec
push
xchg
push
fisubs
sbb
das
xchg
add
inc
lods
jmp
shlb
aam
push
xor
jmp
sub
push
pop
xchg
dec
add
lcall
and
rol
and
cmpsb
stos
xchg
jmp
aad
inc
sub
inc
je
mov
iret
leave
dec
jns
fnstenv
data16
ds
pop
movsb
pop
add
adc
hlt
add
loop
or
add
call
pop
repnz
ljmp
test
insl
and
jl
sub
xor
movsl
mov
loope
inc
mov
push
fsubs
stos
adc
push
cld
mov
xor
mov
and
sbbb
into
mov
and
lds
mov
xchg
pop
pop
mov
ficoml
sbb
fists
movb
ret
or
mov
pop
push
cmc
inc
in
daa
pop
xor
es
mov
iret
outsl
aam
pop
es
pop
popa
sbb
mov
push
cmp
mov
mov
adc
mov
test
inc
fwait
push
xcrypt-cbc
cmpsl
adc
jb
mov
setno
dec
jge
lret
jb
jbe
ljmp
mov
scas
inc
jno
xchg
clts
into
mov
mov
cwtl
inc
xor
ficomps
xor
pop
xchg
push
and
push
fildl
inc
and
pop
in
movsb
imul
shr
lods
jnp
call
mov
or
sbb
mov
dec
push
fs
call
cmp
add
aad
mov
rep
inc
aam
ret
icebp
rcrb
pop
mov
cmp
add
jbe
fdivrl
mov
mov
mov
pop
xchg
in
into
xchg
mov
cmc
mov
les
sahf
jo
pushf
mov
cld
jb
dec
jl
loope
jl
sub
sbb
icebp
movsl
xor
sar
jmp
mov
xor
cmp
movsl
stos
xchg
aaa
xor
xchg
sahf
mull
cmp
jae
add
xor
or
pop
insb
fcoms
cld
push
dec
push
je
test
xrelease
add
test
or
cs
dec
cs
dec
cmc
popf
ret
xchg
or
cmp
cs
cmpsb
mov
sbb
xor
or
fmul
pop
xchg
jp
inc
cmp
and
leave
js
mov
pop
push
enter
sub
xor
mov
mov
jg
push
or
ficompl
scas
cmpsb
ja
jnp
xchg
mov
jb
dec
fnsave
add
inc
jno
jge
arpl
decb
xor
xor
bound
inc
push
adcb
fnstcw
pop
pop
cmp
mov
inc
lcall
ss
sbb
stos
addr16
pop
pop
mov
jecxz
mov
or
pop
sahf
aad
mov
fs
xor
push
cmp
adc
dec
dec
test
sbbl
cmovge
adc
cltd
std
nop
or
mov
adc
cmpl
push
icebp
cmp
pop
mov
or
loope
je
dec
test
mov
add
push
mov
xchg
sub
lea
push
mov
jl
stos
xadd
dec
fdivrp
cmpsb
mov
jb
mov
aas
jp
dec
pop
cmp
lods
adc
dec
ret
mov
jp
lcall
xchg
leave
jg
and
dec
cmp
push
movsl
add
jp
es
cmc
clc
icebp
push
arpl
push
cwtl
fmull
in
inc
pushl
shl
add
inc
rcrl
push
add
aam
adc
sbb
std
push
sahf
jmp
out
adc
fisttps
and
add
dec
pop
adc
stc
jmp
fcomps
push
push
test
push
inc
sbb
push
jg
fs
scas
push
mov
or
insl
in
mov
addr16
xchg
mov
or
dec
mov
mov
inc
mov
push
mov
xchg
adc
push
in
in
pop
and
mov
aam
mov
jbe
mov
testb
mov
or
in
adc
adc
xchg
or
pop
jne
adc
cmp
jne
lahf
jmp
sbb
ret
fbstp
jl
or
add
pop
mov
fbld
mov
stc
xor
mov
push
or
cmp
add
mov
dec
inc
fcoms
adc
and
test
mov
je
mov
mov
sub
or
or
cli
and
leave
popf
int3
pop
mov
or
sub
stos
mov
pop
mov
call
cmp
pop
test
iret
stc
lods
pop
inc
pop
lret
inc
orl
xor
mov
pop
iret
sarl
stos
adc
add
aad
pop
int3
jae
inc
push
fimuls
arpl
out
fsubrl
in
inc
sub
das
addb
pusha
in
mov
andb
pop
lahf
push
insl
ficompl
loop
dec
mov
dec
jno
mov
mov
push
inc
repnz
push
fmuls
pushf
mov
mov
hlt
ljmp
sub
pop
rol
sub
add
push
stos
addr16
test
ss
add
push
aam
dec
cmp
femms
inc
bound
leave
adc
pop
sub
xor
cs
sbb
adc
mov
sub
nop
xchg
gs
ds
sub
movsl
repz
and
push
jecxz
pop
shlb
or
or
mov
cmp
sahf
mulb
arpl
xchg
in
fcoml
mov
shlb
xchg
ficompl
cmp
cmp
sbb
jae
xor
mov
mov
mov
cs
add
pop
dec
cmp
xchg
jns
mov
mov
xchg
fwait
xorl
rclb
xor
lret
scas
or
or
repz
or
pop
hlt
sbb
into
cmp
stos
jge
jns
sub
mov
hlt
test
movsl
xchg
stc
lds
inc
outsb
jns
shlb
arpl
push
popa
into
mov
xor
scas
scas
xlat
in
stc
push
sar
pop
ss
pusha
repz
jno
div
repnz
xchg
lea
pushf
and
mov
int
jmp
adc
inc
pusha
push
fs
pop
loope
insl
test
dec
cmc
push
mov
push
add
jle
aam
pusha
in
shll
in
in
repnz
cwtl
lea
aad
mov
hlt
sbb
sub
pop
jnp
movsb
je
push
into
pop
popa
cld
pusha
cmpsl
das
adc
in
inc
jo
lret
dec
cltd
push
jae
movsl
lock
xchg
xor
addl
push
aaa
xchg
out
jg
int3
popa
aaa
sahf
arpl
cmp
push
xchg
cmp
out
xor
dec
add
repz
das
or
jp
dec
test
mov
xor
cmpsl
push
fcomp
mov
cmc
std
sbb
inc
mov
or
in
xor
pop
ficompl
std
movb
insb
subb
gs
dec
lret
push
mov
push
mov
dec
mov
jnp
jle
addr16
sbbl
push
dec
sbb
leave
pusha
cs
fdiv
test
rcr
jne
cmp
sbb
cmp
xor
mov
sbb
inc
jle
cmp
test
xchg
mov
imul
in
cli
aaa
jbe
test
adc
inc
fstps
sub
push
aaa
aaa
ja
mov
fwait
daa
int
lcall
push
mov
sub
ror
dec
adc
js
jbe
aad
popf
scas
imul
xchg
jne
imul
ja
out
adc
movsb
popf
pop
or
mov
bound
mov
imul
sti
dec
push
mov
insl
and
loop
mov
and
sub
aam
xor
or
pop
sahf
jmp
jle
test
dec
movsb
or
jecxz
sub
push
lcall
push
pusha
cld
pushf
mov
jl
add
sub
jmp
mov
mov
jae
in
arpl
mov
mov
test
cmc
add
das
test
into
and
mov
sti
loopne
bound
out
leave
cmpsl
lcall
nop
cli
mov
add
xor
adc
xchg
ret
nop
push
push
mov
jno
dec
adc
lret
xchg
jo
es
mov
jle
sti
xchg
jnp
push
pop
cmp
pop
ret
mov
sahf
rclb
fwait
jg
loop
cltd
sbb
dec
enter
loopne
push
push
pop
mulb
in
cltd
jae
in
cli
dec
scas
aas
and
mov
dec
es
push
mov
out
lea
push
cmp
das
jae
dec
icebp
jb
xlat
movsb
sbb
jg
movsb
inc
xchg
sbb
adc
bound
inc
fidivs
and
push
ljmp
repnz
cmp
ss
lret
int3
scas
div
outsl
outsb
cli
add
xchg
mov
sbb
xchg
push
sub
call
insb
scas
adc
cmpsl
add
int
xchg
hlt
mov
inc
pop
and
idivl
and
pop
insb
sbb
arpl
pop
cmp
and
mov
imul
push
insb
movsl
imul
pushf
inc
mov
test
pushf
cmpsb
or
pop
cmpsl
push
incb
dec
adc
xchg
inc
stos
loopne
pusha
rcrl
add
xchg
push
fmuls
lods
mov
lahf
fmuls
inc
inc
pop
mov
divps
leave
sarl
cmp
lea
mov
pushf
cmpsb
out
xor
mov
dec
jb
test
add
pop
negl
test
xchg
jmp
and
add
mov
fistl
push
insl
das
icebp
xsaves
loopne
xor
jg
out
xchg
sbb
popf
ja
lret
inc
jb
or
sahf
sahf
jne
and
cwtl
pop
lea
aam
movsb
mov
xchg
inc
mov
pop
mov
dec
fdivs
fmuls
popa
sub
jbe
add
test
pop
push
push
dec
notl
adc
and
rorl
pop
lods
pusha
enter
cltd
int3
fildll
out
out
call
add
cmpsb
mov
inc
mov
mull
mov
pop
es
xchg
jle
decb
jp
cs
das
adc
push
jae
and
icebp
or
ret
sbb
das
mov
or
or
cli
xchg
sbb
add
mov
push
and
mov
es
pusha
and
fld
push
or
shrb
mov
push
or
sbb
pop
sbb
adcl
or
out
insb
xchg
xchg
add
push
fcoml
mov
xchg
mov
aaa
xchg
loopne
sub
dec
ja
mov
call
xor
ljmp
adc
mov
xor
test
and
andl
or
dec
adc
xlat
dec
out
movsl
idiv
xchg
je
inc
test
xlat
push
ss
addb
jns
aam
out
in
movsl
aam
pop
push
test
push
adc
stos
fnstcw
stos
int3
clc
xchg
mov
fcoms
mov
xchg
mov
gs
nop
push
pop
sbb
sbb
insl
into
mov
adc
aas
add
inc
mov
arpl
jnp
mov
and
arpl
sub
flds
ret
inc
popf
jecxz
xor
gs
loopne
add
add
xor
ljmp
lods
mov
pushf
jl
fstps
aad
add
push
inc
mov
add
js
lret
or
push
or
ret
jo
mov
mov
add
jg
xchg
lds
movsl
xchg
mov
and
aad
cwtl
fbstp
loop
in
adc
xor
xchg
fwait
iret
pop
jg
fsubrs
push
movsb
adc
jge
cmp
sbb
aam
inc
pop
cmpsl
arpl
das
mov
lods
xchg
out
out
rcll
inc
insb
sub
aam
sbb
jnp
jo
fildl
fnstcw
fwait
cmp
adc
jns
push
mulb
or
addr16
popf
fistl
imul
cltd
pop
xor
mov
stc
xor
jl
mov
sub
jnp
and
ret
stos
repz
test
imulb
adc
mov
push
sub
add
xor
imull
dec
into
aaa
pop
jge
movsb
push
je
minps
adc
sarl
in
aam
pop
xchg
mov
or
lcall
ror
or
int
sbb
or
inc
mov
rolb
sub
repz
adc
push
pop
icebp
in
rorl
dec
pop
loop
js
pop
adc
lcall
sbb
lret
push
mov
cld
andb
sbbl
or
lods
add
mov
dec
and
mov
test
sub
xor
in
lods
xor
adc
dec
rorb
xor
orl
lods
in
add
jecxz
mov
adc
push
imul
add
dec
xchg
jle
test
cmpsb
test
mov
push
hlt
dec
lea
dec
cmp
popa
xor
and
enter
fiadds
sbb
test
ffree
and
aaa
pushf
pop
pop
mov
dec
ds
or
jle
pop
jmp
sub
dec
dec
bound
ja
xchg
pop
adc
outsb
rorl
add
sbb
rcrb
ss
fld
sub
arpl
or
push
test
lret
push
or
cmp
xchg
inc
lret
cmp
inc
nop
inc
scas
lret
inc
xor
xor
xchg
mov
fnstenv
sar
cmc
push
sbb
scas
jne
sbb
xchg
pop
outsl
inc
ja
jge
insb
pop
jge
adc
dec
daa
std
adc
push
outsb
sti
aaa
sub
clc
push
ficompl
pop
cmp
mov
test
movsl
sub
adc
push
inc
scas
xor
inc
lret
clc
and
test
lahf
call
nop
addb
stos
enter
ss
sbb
xchg
bound
pusha
inc
inc
fadd
mov
jg
inc
sbb
loopne
add
jb
pop
add
stc
inc
xchg
out
dec
ljmp
into
xor
out
loopne
data16
pop
bound
pop
insb
push
out
sbb
adc
or
ret
flds
push
sbb
rcll
dec
loop
add
xor
xlat
fsubrl
pop
shrl
cltd
or
mov
push
inc
sarl
orl
and
int3
lds
or
fmul
jbe
inc
std
or
dec
les
mov
mov
xchg
cmp
xchg
push
dec
in
xchg
mov
test
repz
lods
cmp
cmp
sub
lock
mov
sub
or
fcmovb
add
xchg
mov
stc
mov
in
in
testl
push
cmc
mov
js
pop
xor
xchg
int
iret
xchg
lods
and
adc
mov
push
in
sub
xchg
pop
cltd
push
xor
stos
cmpsl
mov
lock
out
stc
mov
add
mov
or
jae
movsb
cmc
in
sub
nop
inc
in
mov
jmp
js
adc
mov
cmc
push
in
xchg
xchg
xchg
outsb
test
ja
movsb
cmpb
pushf
aas
mov
arpl
mov
es
push
cld
orb
imul
mov
push
adc
leave
sbb
adc
stos
push
mov
jne
out
mov
jno
test
ret
adc
fldcw
pop
pop
inc
sbb
jns
pop
dec
popa
sub
inc
in
inc
cmp
pop
or
pop
test
in
mov
or
mov
push
jecxz
aam
mov
dec
fs
jo
orl
push
inc
mov
and
pop
mov
push
push
imul
fwait
into
lcall
pop
out
cmp
or
es
ja
fiaddl
aaa
loopne
andb
shrb
mov
cmp
pop
jge
test
mov
mov
and
data16
int
jnp
or
stos
bnd
data16
sbb
fidivl
popf
mov
ret
cmpl
adc
or
test
dec
addr16
jl
int3
in
rclb
fsts
jle
leave
mov
mov
mov
sahf
or
mov
pop
cmp
mov
adc
je
xchg
int
cmp
pop
dec
lock
or
lock
xchg
or
out
fldl
xor
gs
dec
orl
das
gs
dec
cmpsl
inc
fwait
adc
lods
cmp
loope
ljmp
neg
xchg
call
xchg
adc
xchg
addr16
xchg
or
adc
fwait
push
in
or
pushf
and
adc
stos
lods
and
push
jp
scas
mov
mov
push
test
pushf
push
push
out
test
inc
dec
or
fmulp
lods
dec
int
lods
cmp
inc
pop
fwait
xchg
dec
insb
xlat
xchg
test
or
mov
loopne
shlb
push
fisttpl
cli
iret
xor
outsb
mov
fsubrp
add
push
dec
dec
sti
mov
aad
outsl
loopne
iret
and
add
jno
fnstsw
test
jmp
mov
pushf
push
or
ret
mov
in
in
sbb
push
or
mov
inc
inc
jnp
lods
imul
xor
ficoml
and
mov
fists
fs
aas
fwait
mov
stos
in
xchg
ja
mov
push
push
lea
push
dec
xchg
sbb
cbtw
sub
lahf
jge
mov
pop
aas
add
cmc
sarb
and
cltd
sub
pushf
adc
jl
jns
fisubrl
inc
pop
jno
lret
pop
sub
lret
jmp
mov
into
mov
ret
adcl
nop
scas
xchg
jmp
repnz
fwait
xor
inc
in
dec
sarl
stc
fstpt
loop
movsb
popa
xchg
and
outsl
mov
pop
iret
pop
xchg
loope
dec
out
je
aaa
push
mov
xchg
sub
cmp
mov
xor
sub
fcoms
enter
aad
lcall
fstl
test
popf
jb
shl
cmp
fcoml
gs
xchg
cmp
les
jbe
sarb
cltd
jne
subb
xchg
or
dec
cmpsl
fsubr
clc
out
loop
std
pusha
pop
insb
add
push
js
jb
outsb
idivb
adc
pusha
sbb
sub
ljmp
fwait
jge,pn
cmp
std
bound
xor
js
je
insb
or
out
xchg
in
ss
out
call
test
mov
sub
cmp
bound
mov
push
mov
das
mov
add
jp
adc
arpl
stos
jb
dec
add
icebp
push
movsb
and
push
into
add
nop
xor
inc
dec
mov
mov
movsl
insl
scas
and
push
xchg
jmp
sub
loop
enter
cmc
inc
rcl
xchg
loope
cmovns
dec
xchg
mov
out
insb
mov
cmc
jnp
mov
jns
sub
cmp
sub
sbb
mov
neg
pop
rclb
jl
imul
idiv
jae
loop
mov
and
or
cmp
mov
pop
shl
or
jmp
mov
nop
loop
lods
jge
addr16
mov
mov
inc
pop
inc
xchg
jbe
rorl
pushf
ljmp
sub
add
stos
dec
divb
fisubl
sahf
in
enter
lds
insl
in
mov
add
pusha
mov
in
xor
mov
cwtl
aam
xor
cmp
pop
pusha
jne
cld
pop
jmp
stc
dec
xchg
push
dec
inc
fildl
pushf
jo
shr
clc
movsb
and
icebp
dec
das
loope
nop
lds
cli
mov
dec
mov
daa
stc
call
sub
pop
adc
rcrl
xchg
stos
mov
int
sub
cmp
insl
push
inc
pop
sar
pusha
gs
rorl
and
dec
push
xchg
add
aam
aam
cmp
adc
xchg
mov
aad
shrl
push
dec
and
cmp
dec
mov
or
inc
pop
pop
sbb
adc
cmp
int
mov
push
addr16
fs
pushl
adc
xor
sub
dec
test
add
push
cmp
add
scas
mov
loopne
or
movsb
test
mov
mov
pushw
lea
cld
mov
pop
aas
daa
dec
popa
fmuls
push
hlt
lret
or
enter
mov
outsb
push
push
add
out
lret
cmp
fsubrl
je
xor
or
int
cmc
movsb
andb
cmp
test
pop
mov
inc
or
out
pop
jg
add
mov
aad
and
ja
lret
cs
dec
addb
andl
lret
cmpb
xlat
jmp
aad
mov
or
cwtl
xor
inc
xor
outsb
gs
je
push
mov
dec
mov
sub
aas
and
sarl
leave
fdiv
repnz
pop
jl
sbbb
inc
stc
xchg
sbb
test
std
stos
xchg
je
mov
imul
push
jge
movsb
jnp
adc
push
add
in
or
shlb
mov
jo
int
rclb
sub
cwtl
stos
popl
lahf
dec
cmp
inc
xchg
xor
rol
push
inc
cmp
xchg
lods
dec
mov
pop
jp
loop
push
aas
fisubrl
pop
sub
mov
cltd
cmp
mov
xor
aam
mov
add
jge
shll
mov
scas
xor
js
outsb
xchg
xchg
or
xor
loopne
or
pop
cmp
inc
or
jbe
addl
mov
add
cmpsl
sub
adc
push
sar
cmpsl
cmpsb
sbb
in
cmp
scas
sub
enter
out
push
lods
loop
xchg
add
std
mov
pop
adc
xchg
push
pop
xchg
out
cwtl
adc
push
add
adc
movsl
fucom
jle
sti
xor
andb
ficoms
bound
mov
and
movl
mov
mov
jcxz,pt
and
adc
fnsave
jge
cli
pop
sbb
cld
rolb
fwait
xchg
stos
mov
pop
test
xor
sti
cld
push
inc
lods
add
push
mov
inc
inc
dec
jg
in
lret
sahf
lods
test
inc
jle
inc
adc
adc
push
xchg
xchg
pop
fdivl
frstor
fildl
cmc
das
pop
xchg
out
and
jo
or
int
pop
adc
mov
lods
in
cltd
mov
inc
out
push
lea
push
xchg
sub
jecxz
lock
mov
sub
mov
add
jle
pop
call
mov
mov
unpckhpd
adc
and
pop
add
int3
add
xchg
xor
insl
fmuls
mov
push
or
and
sbb
out
cmp
loop
ret
repnz
test
iret
dec
sbb
inc
mov
lret
ljmp
add
call
int
adc
mov
inc
ds
add
jl
xor
mov
dec
jp
lock
movsl
mov
scas
mov
xor
imul
adc
int
fnsave
or
mov
cs
loop
imul
xor
push
pop
add
push
out
ja
add
add
into
dec
ja
insb
repnz
pop
stc
movsb
and
scas
fs
cld
dec
and
mov
sub
pop
mov
xchg
popf
clc
jnp
push
push
push
ficoms
shrl
cmp
rcl
xor
aam
mov
sub
loope
pushf
loope
dec
mov
pushf
sub
sbb
pop
pop
je
int
ficomps
inc
jb
mov
add
jne
cs
cli
xchg
outsl
enter
lahf
into
nop
mov
xchg
jne
jo
pop
xor
or
out
and
cmp
and
lock
xor
loop
adc
pop
adc
repz
jmp
fisubs
mov
popf
mov
popf
push
loopne
in
inc
cwtl
out
lds
insb
xchg
dec
cmp
in
andl
mov
enter
mov
lret
inc
mov
je
stos
lret
enter
or
push
int3
pop
sahf
pop
cmp
lret
dec
push
ficomps
or
and
inc
dec
mov
repz
dec
in
mov
arpl
push
clc
inc
sub
xlat
repnz
stos
xchg
pusha
mov
mov
jp
pop
mov
mov
and
inc
inc
notl
cld
mull
stos
or
sbb
push
push
pushf
fcoml
shrb
dec
popf
lcall
jecxz
lss
push
or
mov
mov
fcmovnu
adcl
hlt
cmp
jg
ret
out
adc
xchg
mov
packssdw
rolb
rorb
mov
cmp
mov
xchg
xchg
loope
test
inc
mov
mov
pop
fisubrl
or
and
aaa
jns
fs
sbb
mov
je
cld
xchg
inc
dec
pushf
and
mov
aam
jp
shll
or
jg
add
sti
loopne
shrb
ret
pop
sahf
inc
jge
add
outsb
shrl
xchg
pop
inc
push
cmpsl
jge
push
rclb
inc
and
xor
sti
mov
das
repnz
cmpsl
push
add
and
in
shrb
pop
add
aas
or
sbb
xor
dec
inc
add
cmp
sbb
inc
outsb
iret
mov
dec
sti
jnp
jo
push
stos
inc
mov
mov
imul
sahf
dec
and
or
iret
enter
push
add
inc
dec
sarl
pop
mov
sub
sbbb
or
test
push
push
and
dec
pop
fmuls
pusha
icebp
adc
jl
mov
out
je
cld
adc
or
hlt
add
sbb
mov
in
inc
mov
jne
bound
push
inc
pop
mov
push
aas
or
and
cltd
dec
or
test
daa
xor
jns
mov
pop
imul
pop
mov
add
mov
sahf
push
ret
call
and
loop
jl
pop
sub
xor
mulb
cltd
or
jbe
sub
loopne
jmp
lods
sbb
call
notl
icebp
lea
lahf
fucom
out
lea
ret
insl
push
negl
pop
out
test
pop
nop
pop
idivl
push
mov
mov
pop
call
jg
mov
cld
ss
mov
ret
mov
sar
jecxz
movsl
push
fdivrp
insb
sbb
mov
je
imul
inc
ja
pop
cmovne
xor
lods
jo
orb
adc
scas
addr16
orl
insl
sub
sbb
push
pop
dec
pusha
sbb
xor
addr16
sbb
sahf
hlt
mov
or
mov
adc
loope
pop
mov
daa
mov
adc
xchg
cmpsl
insb
lcall
mov
xchg
or
inc
xor
int
fdiv
lahf
sub
inc
rclb
outsb
cmpsl
enter
and
roll
fs
lods
adc
idiv
or
push
and
xlat
xchg
rcll
cmp
gs
xor
sbb
mov
sti
pop
scas
pop
sbb
pop
adc
lods
mov
mov
cmp
sub
push
add
jo
add
dec
iret
popa
sahf
or
jbe
iret
jmp
xchg
fistpll
and
out
insl
js
fdivl
stos
rolb
rcr
mul
shlb
push
sub
mov
fsub
aad
int
insl
sbb
dec
bound
push
mov
jmp
jl
out
fdiv
pop
jl
dec
mov
mov
call
outsl
in
xchg
shlb
aad
aas
call
fcmovnu
jl
addl
mov
into
mov
inc
cmp
lods
test
shl
mov
jb
or
enter
push
movsl
mov
lret
mov
cwtl
clc
xchg
push
insb
mov
aaa
sbb
lret
les
out
or
dec
push
pushf
sbb
pop
out
push
daa
pushf
jg
sub
add
or
lret
ds
pop
lea
cmp
add
add
dec
xchg
mov
imul
fsubr
pop
and
and
adc
jno
idivl
cmpsl
mov
hlt
pcmpgtd
sarl
es
mov
pop
ljmp
jo
ret
arpl
insb
sub
mov
and
mov
push
emms
lods
xor
adc
adc
sub
inc
in
insb
incb
insl
sbb
mov
aas
aad
fwait
xlat
adc
mov
emms
xchg
sti
mov
das
dec
hlt
pop
pusha
sub
xchg
testl
mov
push
loopne
add
xor
cmp
push
pusha
pop
in
sbb
stos
lea
xchg
lret
bound
outsl
lahf
mov
mov
pop
popf
lret
hlt
or
fdivrs
fucomp
pop
pop
mov
dec
ja
xchg
loop
inc
fs
sbb
dec
mov
mov
gs
stc
lret
jnp
and
mov
cs
loope
movsl
mov
inc
bound
dec
rolb
int
mov
in
out
push
dec
cwtl
outsl
add
dec
lea
mov
sub
or
mov
add
shrl
jecxz
mov
lret
les
inc
or
push
inc
jne
adc
or
fdivrs
clc
pop
push
fwait
aaa
test
sar
or
lods
pop
pop
push
fistpll
call
in
popa
jno
jnp
fisttpl
fidivrs
addr16
mov
mov
test
enter
mov
repz
inc
adc
jnp
fs
or
fs
push
test
scas
in
out
mov
hlt
push
fwait
in
sub
mov
push
mov
pop
into
pop
mov
movl
jbe
push
cmp
cli
icebp
xor
fidivs
insl
aas
add
lret
mov
sub
sbb
add
inc
cmp
xchg
jb
push
or
mov
lds
cmp
xchg
pop
push
and
aad
mov
push
gs
cmpsl
sbb
lret
and
imul
repnz
loop
movsl
mov
loop
inc
loopne
and
jo
add
push
fsubl
fsubr
fdivs
and
daa
adc
movsb
es
in
push
jle
ss
xor
mov
lcall
fcomp
cmc
sub
xchg
stos
andb
loope
or
mov
pop
xorb
stos
and
andb
test
addr16
sbbl
lock
cmpsb
jbe
cmc
add
xchg
negb
mov
mov
rorb
xchg
pop
xchg
mov
mov
and
jge
push
and
add
roll
sbb
lods
stos
movsb
pop
adc
mov
test
inc
jmp
hlt
sub
leave
rcrl
xchg
mov
ret
jo
mov
hlt
or
das
push
fmull
xchg
iret
sbbb
mov
xchg
or
push
ror
jne
in
test
jbe
sarl
inc
add
outsl
inc
mov
rol
lods
pop
lods
cwtl
inc
mov
sub
dec
and
inc
mov
jbe
insl
pushf
sbb
xchg
cmpl
gs
pop
add
push
jmp
popa
and
xchg
jno
imul
jae
inc
sbb
sub
and
ljmp
sub
lds
or
sub
int
out
inc
mov
data16
enter
lahf
inc
pop
cmp
data16
sbb
jecxz
addb
jmp
push
mov
xor
divps
jnp
nop
ficoml
movsb
cmp
sbb
or
xor
icebp
stos
loope
jp
lret
and
push
in
pop
fistl
stos
insl
jno
pop
or
fidivl
addr16
mov
adc
jne
test
jmp
les
mov
adc
xlat
mov
xor
pop
lods
mov
es
inc
mov
int3
cmc
ds
adc
cmpsb
mov
shll
lret
aas
inc
mov
push
insl
into
pop
pop
xchg
mov
mov
xor
je
fsub
pop
mov
scas
pusha
stos
adc
ja
xchg
mov
data16
mov
adc
push
or
stos
stos
push
loope
scas
push
push
int
push
push
mov
dec
jne
mov
sbbb
inc
jle
sbb
pmulhw
popa
pop
push
adc
out
xchg
xor
inc
popf
out
add
xchg
dec
and
mov
mov
mov
xor
lock
dec
das
mov
push
sarl
ja
xchg
and
test
add
mov
or
add
xchg
rcll
test
adc
dec
rorl
mov
mov
and
cmp
cli
pop
push
xorb
inc
mov
jle
inc
push
out
or
out
dec
sub
lds
add
dec
adcl
and
xor
stc
aad
push
sub
stos
shrb
lods
mov
fstps
pop
jno
jmp
push
enter
lds
mov
or
sar
mov
sbbl
inc
mov
movsb
dec
lods
bound
sahf
mov
mov
sbb
sbb
inc
shll
pop
sbb
mov
test
rcll
push
into
in
cltd
cmp
and
adc
in
insb
popf
call
call
pop
aaa
rcr
stos
dec
cmp
out
xchg
jge
mov
adc
cmpsl
xchg
sbb
dec
imull
cmp
and
push
inc
adc
imul
sti
or
enter
cmc
xor
mov
int
jbe
jp
cwtl
mov
add
les
cltd
cmp
or
sti
out
testb
test
add
sbb
xor
adcb
or
xchg
daa
insb
cmp
cmp
mov
xchg
aas
jmp
ret
iret
pop
loop
and
sub
cmp
inc
clc
testl
add
iret
ffreep
inc
ljmp
out
out
cltd
mov
sbb
int3
dec
xor
call
xchg
outsl
dec
repnz
xchg
or
and
and
ret
es
mov
cltd
sbb
dec
imul
orl
outsb
mov
jb
mov
and
frstor
out
sbb
ss
lock
and
ja
mov
mov
cmp
pop
lcall
cmpsb
scas
jecxz
clc
add
mov
jmp
nop
push
xchg
movsb
xchg
stos
loop
xchg
adc
push
xor
cpuid
mov
cli
mov
mov
rorb
fwait
cs
lcall
cmp
add
xor
int3
xor
repnz
ja
jnp
mov
lods
es
dec
xchg
arpl
push
sbb
jae
in
sub
cmp
sub
pop
adc
insl
shlb
inc
pop
dec
imul
bound
addr16
pushf
add
add
hlt
pop
ret
aaa
or
or
ror
ds
int
fistps
inc
addl
icebp
dec
aam
mov
pop
js
xchg
cmpsb
dec
mov
xorl
sub
sti
lret
mov
push
stc
rcll
aaa
fs
inc
clc
xchg
sti
cmc
pop
xchg
pop
jnp
lret
lret
sub
adcb
push
scas
jne
sub
xor
mov
xchg
or
xor
stc
stos
in
ror
inc
lds
imul
repnz
dec
dec
fldcw
and
into
push
cwtl
out
lea
mov
shll
add
fwait
pop
divl
je
inc
leave
ds
dec
iret
push
jl
out
aad
push
rclb
pop
or
sahf
mov
jp
mov
xchg
std
repz
adc
xchg
pusha
mov
mov
xchg
push
adc
sarl
les
dec
xchg
and
xchg
cmp
popa
imul
adc
iret
es
test
std
xchg
fldenv
loope
lods
rclb
inc
inc
or
enter
jg
ds
dec
adc
pop
repnz
or
jnp
sbb
jae
and
stos
sbb
in
sarb
aad
mov
sub
jge
jge
ror
jp
jp
cmp
sub
inc
xor
fiadds
aas
aad
gs
pop
and
xchg
adc
rcrl
jnp
cmp
outsl
mov
mov
sub
rorb
pusha
pop
add
dec
loopne
out
and
sbb
lea
stos
in
inc
test
mov
mov
cmpsl
js
lahf
mov
jbe
ficompl
push
out
sarb
xchg
push
outsl
lret
into
or
scas
ret
push
xchg
inc
push
inc
cmp
hlt
sti
ja
push
fnstenv
arpl
fmul
clc
xchg
pop
pop
cli
jnp
pop
sti
negb
aas
outsb
insb
out
enter
incl
dec
jecxz
fadd
dec
arpl
clc
ret
ret
daa
in
push
push
pop
jl
jbe
mov
sub
fiadds
dec
sar
jl
add
ss
mov
gs
sub
fisubs
pop
mov
adc
mov
cs
lock
mov
and
sbb
insl
fwait
sub
add
pusha
fisubrs
sbb
bound
xchg
mov
pop
cmc
fwait
or
push
dec
fnsave
mov
adc
dec
movsl
stos
or
fwait
test
cmp
mov
pushf
pop
sbb
fstpt
pop
jl
mov
and
and
sub
mov
add
push
dec
jle
push
cld
cmp
add
xchg
and
adc
xchg
shlb
aaa
mov
outsb
adc
or
xor
cmpsb
pop
cmc
std
jns
inc
or
movsl
rcrl
pop
mov
inc
and
lcall
aad
lahf
or
mov
test
lret
out
lahf
mov
popf
mov
jecxz
and
test
cltd
js
int
fmuls
xor
mov
add
stos
repz
push
jb
roll
push
int
pushf
inc
cmpsb
inc
lods
jnp
ss
popa
pop
bound
shlb
pop
stc
mov
cmp
mov
mov
cmp
dec
aad
mov
or
jno
push
test
lret
sub
inc
jbe
add
mov
lret
movsl
dec
or
push
sub
sub
sbb
hlt
sub
and
dec
outsb
jbe
pop
pop
ret
dec
int3
cmp
lcall
mov
adc
mov
shr
jle
hlt
shrl
out
push
lret
jns
add
sbb
pop
out
inc
inc
data16
popf
in
aam
rcr
adc
pop
lock
dec
jmp
cmpsb
push
and
iret
mov
push
fldt
inc
mov
incb
push
mov
and
xchg
jae
add
pop
pop
ret
mov
pop
adc
pop
xchg
jns
push
outsl
lea
sbb
shll
out
pop
sbb
jno
mov
adc
xor
xchg
ror
xchg
jmp
dec
xorw
jle
jg
lret
dec
or
inc
or
outsl
cwtl
lods
jle
push
lcall
mov
or
daa
nop
test
and
fstpt
loop
dec
fistps
cmp
shll
in
cmp
jg
addr16
push
or
mov
xor
ret
sti
fildll
outsl
add
mov
das
push
aad
imul
cmp
in
sbbl
test
movb
inc
sbb
xor
mov
cltd
pop
mov
imul
fdivs
push
adc
arpl
scas
insb
jg
iret
mov
jno
out
out
pushf
add
xorl
jbe
mov
inc
xchg
push
fimuls
pop
movsl
add
push
mov
dec
push
arpl
sbb
fildll
leave
pop
fadd
push
aas
pop
or
mov
inc
daa
adc
rcrl
bound
sbb
lods
dec
insb
lret
push
pop
dec
test
iret
inc
fs
mov
mov
pop
loope
cwtl
add
or
arpl
insb
cmc
std
or
daa
mov
inc
shlb
mull
roll
jecxz
fcoms
test
add
sarl
orl
and
push
sub
sbb
mov
push
sub
test
mov
enter
push
sub
mov
xchg
sub
cmp
cmpsl
mov
mov
imul
aaa
enter
adc
imul
call
outsb
lret
fcoms
cmpsl
inc
fistpl
sbb
sbb
jg
shl
cs
jb
ret
sbb
into
ret
add
and
cs
mov
into
and
or
mov
xor
aam
sbb
repnz
xchg
xchg
xchg
das
mov
inc
jb
inc
inc
mov
and
into
mov
cmpsb
cmc
movsb
pop
sbb
xchg
or
sub
cmp
adc
cld
fildl
mov
dec
sahf
xor
push
xor
stos
dec
into
pop
pushf
rclb
inc
stc
mov
pop
add
cmp
jb
sub
push
pop
lds
lods
xchg
sub
pusha
mov
pop
cmp
bound
mov
insl
cmc
pop
jns
cmp
out
adcl
sub
push
and
popa
and
pop
cmp
fnstsw
pop
ljmp
cs
or
sbb
ljmp
sar
mov
imul
pop
out
cmp
sub
adc
mov
fwait
mov
enter
fs
adc
or
ret
jae
or
push
jg
mov
movl
rclb
sti
std
fisttps
dec
mov
sahf
xlat
popf
inc
insb
das
mov
shrb
fstl
sub
push
out
mov
xor
fwait
mov
idivb
inc
and
or
loopne
xor
lret
in
pop
je
scas
das
cmpsb
and
xlat
out
lea
lcall
mov
fists
mov
hlt
mov
sbb
push
jmp
mov
or
dec
popf
sti
fidivs
js
inc
movsl
mov
iret
ret
cli
dec
adc
insb
lea
sub
lods
lock
orl
negb
pop
ja
in
lahf
mov
xchg
icebp
mov
int3
sub
aas
adc
repnz
xor
inc
mov
pop
out
cmp
jmp
or
xor
std
jp
fdivrl
fs
mov
movsb
or
xchg
scas
add
push
pop
dec
or
std
adc
movsl
clc
ja
push
xlat
jp
adc
sub
out
scas
xor
xchg
int
testb
push
std
das
jp
push
outsb
sbb
cltd
test
insb
jl
int3
mov
std
loope
pop
cli
push
mov
fsubr
mov
jo
cmpsl
mov
repnz
pushf
mov
lds
loopne
xchg
testb
pushf
adc
in
ljmp
stos
call
inc
inc
lock
pop
subl
or
fists
neg
or
jne
and
mov
pusha
cmpsl
push
jecxz
mov
loop
dec
pushf
and
xor
sbb
movsl
add
and
imul
cmp
daa
pop
jmp
jp
push
inc
xchg
cmc
push
cs
ret
jnp
add
jmp
popf
add
punpckldq
dec
sbb
inc
push
push
push
lea
test
or
emms
cmp
push
psllw
lock
inc
sub
movsb
jns
xchg
mov
or
xor
and
inc
js
pop
js
jl
sub
call
roll
dec
jne
cwtl
and
fwait
mov
sbb
jns
scas
popa
pop
xchg
dec
inc
mov
inc
dec
imul
vmread
xchg
add
je
inc
repnz
adc
jns
jle
push
adc
out
negb
shrb
add
aam
sub
ss
popf
lods
loop
jno
ret
mov
mov
test
push
ja
testl
jmp
ljmp
pop
dec
and
sbb
jne
dec
and
fisubs
xor
rol
pushf
cmp
rcll
pop
aad
arpl
movsl
push
movsb
cmpsb
popf
adc
fwait
mov
add
lahf
pop
dec
test
mov
jb
inc
sbb
outsb
scas
dec
xchg
out
loopne
inc
mov
push
sbb
cmpsb
roll
ret
sbb
pop
add
mov
push
lahf
jl
or
adc
inc
fisttps
dec
fdivl
fistl
push
rcll
dec
test
in
xchg
aad
mov
hlt
jecxz,pn
leave
lret
and
sbb
mov
js
int3
jp
xchg
mov
jb
ret
ja
test
das
mov
push
enter
and
sub
mov
pushf
jno
movsl
lds
mov
repz
cmpl
outsl
cs
pop
xchg
int3
and
outsb
inc
into
mov
add
xchg
ds
ret
negl
or
mov
out
jl
sub
pop
dec
cmp
xchg
pop
in
jno
or
scas
cmpsb
add
xlat
imul
dec
sub
inc
or
push
test
adc
sarb
sahf
jno
pop
pop
lret
iret
jg
sub
and
sbb
inc
push
test
lds
vmovupd
sar
adc
sbb
mov
add
into
add
lcall
push
cmp
jb
cmp
jmp
add
je
xchg
out
enter
and
shr
ret
jns
jmp
insl
cs
aas
jg
fiadds
scas
fcom
insb
fistps
clc
mov
int
mov
fstl
xchg
lret
sub
xchg
jecxz
sbb
fwait
xor
pop
dec
repz
jge
inc
xor
ds
adc
subl
push
lds
enter
hlt
adc
sub
sub
and
rcll
mov
xchg
jecxz
and
jmp
mov
xchg
push
xlat
dec
xor
lret
insb
fdivrl
mov
inc
cli
out
pusha
cmp
addr16
inc
jmp
mov
fwait
pop
and
in
add
lods
fists
aaa
pop
nop
jle
aas
lcall
sbb
push
add
pop
inc
sbb
sub
push
push
jge
stc
jge
inc
push
test
in
shll
jno
jns
lods
nop
xchg
inc
pop
xlat
mov
ja
sbb
aam
mov
lahf
int
adc
sbb
popa
sbb
cmp
inc
jmp
xchg
fistpl
dec
pop
jbe
mov
push
outsl
inc
add
imul
lods
std
sbbb
daa
fcmovnu
sahf
lods
push
out
insb
mov
mov
pop
or
loope
xlat
fwait
mov
push
out
aas
pop
mov
mov
adc
jnp
push
aaa
push
cmp
dec
push
psubusw
add
jmp
inc
rcr
cs
mov
sar
les
sbb
les
rcrl
clc
push
loop
adc
sbb
jle
addr16
jne
push
add
aaa
les
jbe
mov
std
cmp
ret
fcom
cltd
shlb
inc
clc
sbb
mov
inc
mov
dec
test
mov
sub
inc
daa
or
jle
add
rcrl
inc
push
repz
bound
sub
lds
in
cmp
jns
jbe
mov
sub
es
xor
mov
insb
loopne
sub
mov
jmp
leave
jg
loopne
pop
xchg
cmpb
sub
imul
mov
mov
and
adc
pushf
push
pop
xor
add
clc
into
jl
sbb
pop
jp
lock
mov
es
pusha
mov
mov
jl
pop
mov
xchg
cmc
adc
jne
pop
inc
out
xlat
jl
dec
scas
notl
loopne
lret
icebp
int
dec
je
sar
ret
cmpsb
xchg
rcrl
aam
mov
rcrl
sub
cs
std
clc
mov
cwtl
mov
fcomip
fidivl
aas
arpl
xor
addr16
aam
xchg
pusha
cmp
xor
jbe
push
ss
ds
mov
adc
nop
mov
jae
cltd
dec
sarb
adc
push
sub
mov
inc
popf
inc
ret
int3
daa
enter
aas
lods
dec
out
and
call
shll
push
push
imul
inc
cmp
xchg
lds
test
mov
or
adc
stos
xchg
mov
push
mov
daa
les
or
dec
lret
adc
sub
xchg
mov
pop
adc
call
inc
cld
loop
aam
roll
shlb
out
dec
lret
xchg
pushf
dec
lods
pop
jge
ret
push
mov
sbb
arpl
pop
push
sub
stc
int3
sbb
gs
jne
sbb
mov
inc
outsb
std
dec
jmp
and
push
sub
scas
out
inc
fisubrl
pop
mulb
jbe
sub
sub
dec
iret
pop
testb
filds
push
adc
arpl
loopne
and
ret
push
xchg
mov
in
sbb
mov
adc
incb
shrb
mov
les
out
push
lds
out
insb
repz
outsl
mov
fldcw
push
lret
fs
gs
pop
mov
xchg
sub
testb
inc
shrb
and
and
imul
stos
loopne
rcrb
adc
inc
orb
addl
jecxz
es
outsl
inc
int3
rcrb
stc
aas
fstpl
xor
hlt
xchg
cld
mov
and
sbb
cmp
push
mov
dec
inc
scas
and
add
loop
mov
cmp
shl
out
add
shl
jecxz
or
mov
cmp
and
outsb
sub
mov
daa
fwait
mov
cmp
adc
mov
movsb
cmp
sub
pop
push
mov
jmp
mov
adc
add
ljmp
xchg
dec
outsb
sbbb
pop
loopne
scas
ret
in
sbb
mov
jno
sbbb
bsr
mov
mov
mov
mov
sbb
lahf
ret
push
xor
dec
mov
push
jmp
sub
jo
mov
in
cmc
sub
js
icebp
shrl
mov
popa
jnp
repnz
push
cmpsl
mov
sti
std
cmp
and
pushw
cmp
aas
xchg
shll
push
push
xor
stos
jecxz
shll
stos
sbb
cmp
cmp
push
fcmovnb
in
test
mov
mov
mov
lods
pop
repz
in
cmp
push
std
push
xchg
cs
jns
aad
cwtl
rolb
je
fwait
sbb
xchg
daa
dec
mov
mov
not
mov
loope
jmp
adc
das
inc
stos
xor
aas
cltd
lret
jge
and
jnp
mov
push
pop
fld
and
and
ret
push
xchg
shll
outsb
mov
sarl
xchg
add
movsb
mov
sbb
xor
shlb
jo
mov
adc
mov
mov
dec
int
or
outsb
xchg
sbb
fdivr
add
out
push
sbb
dec
incb
inc
mov
and
push
fisubs
adc
mov
lods
xor
mov
lret
mov
xor
sub
dec
jns
loop
xchg
in
ja
xlat
jno
add
mov
inc
js
adc
and
inc
sbb
sub
ja
bound
jge
js
xchg
subl
hlt
mov
aas
sub
je
andl
out
mov
dec
jo
jae
int
jnp
mov
sub
cmp
in
in
sub
mov
mov
sub
jb
popa
leave
add
daa
pop
iret
aam
dec
xchg
popa
sbb
insb
cmp
inc
xor
stos
push
pop
lock
push
dec
xchg
cmp
add
jo
fdivr
inc
dec
pop
stos
lret
sbb
mov
mov
stos
sti
lcall
xchg
int3
lock
mov
or
enter
lret
scas
in
mov
lea
sub
xchg
jb
mov
rcrb
or
and
push
or
aas
rcrb
push
add
push
cmp
push
pop
push
adc
je
out
lock
xor
sub
lea
xchg
mov
mov
ss
cmp
xchg
push
loopne
pop
cwtl
mov
inc
push
mov
clc
jp
popa
imul
ret
fldt
js
dec
mov
inc
arpl
cmp
cli
and
or
cmpsl
fwait
mov
aad
sahf
fidivrs
mov
mov
and
hlt
lahf
push
dec
dec
mov
fcoml
fidivrl
jne
push
enter
testb
sbb
jge
in
jl
cmp
cmp
out
arpl
dec
pop
in
test
rclb
sbb
xor
bound
loopne
adc
push
inc
adc
and
nop
push
add
cmpsb
lods
ja
mov
stos
mov
lea
add
mov
jmp
jl
lea
xor
and
jp
mov
xor
and
ss
test
cmp
push
lcall
shl
sub
xchg
arpl
lret
sahf
inc
add
xchg
xor
adc
cmp
sarl
xor
inc
jmp
ret
jp
repnz
mov
and
fstps
mov
add
pop
or
or
rolb
arpl
mov
xchg
xor
xchg
add
xchg
add
shrb
shlb
addb
mov
lea
dec
xchg
cli
shlb
jle
cmp
dec
inc
es
out
dec
data16
pushf
jecxz
pushf
shlb
repnz
jmp
mov
orl
rcrl
in
add
stos
popa
int3
test
inc
ss
call
push
adc
cs
and
popf
and
fldt
push
fwait
mov
sbb
pop
nop
and
xchg
fdivrs
enter
je
sub
inc
cmp
and
xor
dec
movsb
xchg
pop
test
lret
bound
je
fimull
icebp
movsb
push
cmp
pop
sbb
cs
aas
or
cmp
loope
inc
pop
imul
addr16
or
xchg
popa
mov
clc
std
sub
inc
les
mov
ficomps
lret
cwtl
test
in
pop
cmp
cmpsb
push
or
sarl
test
xchg
jmp
shl
lods
insl
fdivr
pop
sub
push
aas
and
push
sbb
cmp
inc
xor
inc
in
mov
leave
cmc
add
and
lret
popf
cwtl
add
lahf
ffree
mov
mov
inc
xor
inc
stc
out
mov
xchg
push
sub
xor
lods
lcall
sbb
popf
test
fwait
xchg
lcall
bound
mull
dec
pop
inc
gs
push
mov
jmp
test
into
repnz
in
xlat
sbb
adc
push
in
ljmp
addl
test
and
or
mov
push
pusha
lea
xlat
inc
ficompl
jmp
jge
clc
leave
inc
jle
into
sub
push
js
inc
fwait
insl
rclb
mov
loope
ja
sub
or
cli
shrl
push
mov
lock
loopne
pop
sub
dec
dec
outsb
sub
js
xlat
dec
dec
or
sub
sbb
mov
or
out
ret
movsb
pop
adc
imul
mov
jp
je
fcmovbe
aaa
jle
fsubrs
push
xchg
pop
cmp
mul
dec
or
into
sub
xchg
sub
sbb
aaa
jg
ljmp
stos
insb
lret
jbe
ret
repz
xchg
dec
lret
push
push
sub
and
sub
fs
jmp
jmp
jmp
addl
jmp
mov
stos
jecxz
and
add
mov
ret
pop
pop
pop
dec
xchg
mov
popf
lret
ja
jns
xchg
push
out
mov
ja
in
in
test
jecxz
and
rcll
cmpsb
mov
ja
xchg
dec
and
shlb
sbb
and
test
ds
mov
pop
shlb
add
mov
pop
mov
adc
adc
nop
aaa
pushf
aaa
hlt
frstor
jmp
addr16
xor
mov
xor
mov
sub
xor
mov
sub
adc
inc
addr16
insb
mov
mov
insl
jecxz
dec
imul
add
jbe
pop
inc
inc
sbb
xchg
int
jmp
xchg
jecxz
fildll
dec
subl
or
and
or
dec
js
mov
dec
adc
push
cltd
push
and
lds
les
sbb
mov
arpl
gs
pop
or
cmpsl
movsl
add
mov
je
pop
addr16
inc
or
icebp
xor
cmp
scas
cmp
pop
push
out
mov
xlat
nop
dec
cmp
mov
inc
loope
mov
js
inc
mov
movsb
push
sub
iret
or
xlat
pop
in
push
pop
data16
sub
pop
push
mov
inc
sbb
inc
cmp
test
mov
inc
shr
add
inc
mov
rorb
arpl
xlat
es
lds
mov
ficomps
cmpsl
aas
sbb
and
in
loopne
int
imul
or
sbb
lea
and
pop
mov
stos
aaa
mov
dec
mov
rolb
xchg
cmp
ret
jne
rolb
fisubrl
insb
sbbb
adc
andb
xor
sbb
add
addl
pop
xlat
push
int
mov
push
aaa
into
or
orb
cli
jecxz
push
arpl
bswap
sahf
imul
aas
lods
sti
loopne
jge
adc
out
ret
sbb
jle
sbbb
xor
imull
jae
pop
test
xchg
xor
push
sahf
andb
inc
arpl
data16
jo
adc
mov
sbb
aam
add
inc
outsl
dec
enter
test
mov
lock
pop
adc
push
push
mov
out
push
xchg
stc
mov
and
scas
call
ret
rep
push
lret
mov
mull
insb
adc
dec
and
push
ret
imul
das
int
fdivs
je
rcl
jae
or
sbb
lahf
push
pusha
hlt
or
sub
cmpsl
mov
mov
adc
enter
sbb
lock
filds
xor
push
fwait
push
adc
fiaddl
or
push
mov
repnz
sub
mov
xor
sub
add
sarb
dec
rorl
insl
cmp
int
arpl
mov
jmp
cmpl
ss
leave
daa
ja
rorb
push
and
out
cs
push
enter
out
jp
or
cmp
or
xor
icebp
xlat
cmp
sbb
mov
sbb
clc
xchg
stos
xchg
pop
lods
push
loope
jp
repnz
bound
xor
mov
jno
sub
push
sub
ret
inc
push
dec
sub
sbb
xchg
hlt
pop
ljmp
outsb
push
cld
cmpsb
mov
test
xchg
and
int3
ficompl
in
cwtl
xchg
dec
push
ret
adc
loopne
mov
push
outsb
fwait
loop
add
and
xorl
add
push
add
pop
adcl
pop
inc
daa
stos
into
sub
sbb
pop
das
sahf
or
in
cmp
push
insl
shrl
notb
addr16
fwait
aaa
hlt
mov
and
push
dec
or
loope
movsl
dec
add
lods
mov
sub
nop
loopne
xchg
je
imul
repz
fldcw
mov
push
or
aam
insb
mov
test
das
test
test
sbb
pop
sti
and
jns
fiaddl
pop
cmp
add
addr16
jae
dec
or
cmpsl
je
out
sbb
sbb
ret
jno
push
das
push
adc
hlt
arpl
mov
pop
sub
shl
cmp
jg
cltd
add
das
fwait
and
jmp
rcll
iret
test
push
enter
inc
and
shll
mov
scas
frstor
int3
mov
inc
jb
movsb
adc
adc
cmp
test
sub
inc
xor
xchg
jne
out
scas
sbb
fadds
movsb
or
mull
shrl
ljmp
outsl
inc
shrl
xchg
push
pop
lods
stc
imul
call
dec
cli
ds
inc
jmp
jp
cwtl
sbb
push
movsl
sbb
jbe
js
jb
and
push
cmp
andl
stc
push
inc
lock
enter
shrl
jmp
jb
rcrb
pop
pop
hlt
aam
add
aam
xor
sub
dec
insb
xchg
push
call
sti
or
stc
lret
inc
shr
add
xor
jmp
mov
insl
cmpsb
rorl
cmpsl
fistpll
popf
mov
cmp
mov
jg
fadds
stc
pushf
fbld
shll
and
jbe
in
aas
mov
xor
pop
pop
scas
es
jp
cmp
mov
lret
add
shll
xchg
add
ret
vpcomq
mov
dec
jmp
outsb
mov
repnz
int3
sbb
dec
or
fcomps
imul
pusha
lahf
popf
lret
xchg
mov
mov
inc
jl
lret
mov
jbe
push
in
cmp
pop
push
lea
xchg
js
mov
outsl
fisttps
push
or
adc
rcrb
sub
or
ret
jns
clc
inc
jo
inc
in
jle
jecxz
popf
cmpsl
fidivrl
stos
inc
mov
lods
add
out
mov
and
out
dec
je
push
out
mov
imul
mov
aam
call
dec
imul
enter
ret
jo
je
mov
out
or
jnp
inc
add
arpl
rcll
jo
data16
in
pop
pop
sub
inc
inc
addb
mov
xchg
adc
repnz
add
mov
inc
push
cltd
and
fisubs
mov
cld
outsl
ror
js
mov
add
and
sti
jl
insb
jge
and
pop
imul
sti
add
outsl
pop
push
mov
imul
cmp
mov
xor
xchg
push
movsl
and
xor
mov
adc
and
out
xor
rcrb
or
mov
push
ja
lret
pop
adcl
and
adc
popa
or
addb
push
fstps
outsl
adc
xchg
adc
cmc
adc
mov
vmovaps
sbb
fidivrl
push
xchg
cmp
cmp
es
int3
insl
int3
stos
mov
pusha
dec
push
movsl
loopne
shl
cli
inc
cltd
stos
fiadds
mov
cmpsb
movsb
in
xchg
jbe
sub
inc
cmp
jae
nop
daa
mov
mov
mov
inc
test
bound
mov
cmp
clc
xor
mov
inc
mov
mov
mov
xchg
jae
add
jg
push
cmp
push
cmpb
int3
cmp
pop
fwait
mov
test
sbb
dec
dec
push
push
and
stos
inc
fcmovb
mov
xchg
sub
jbe
mov
xchg
orb
sbb
and
scas
bound
pop
push
push
mov
repz
cmc
sbb
mov
pop
sbb
repz
addr16
lret
int3
out
xchg
test
push
dec
and
fwait
mov
outsb
pop
jecxz
or
test
testb
scas
cli
ds
add
mov
sbb
das
sub
cmp
lret
shrb
jno
push
push
and
les
aas
je
xchg
add
sub
fists
mov
cmp
xor
fistl
xchg
test
mov
xor
inc
jp
mov
inc
testl
mov
xor
cmp
insl
mov
jle
and
mov
mov
imul
mov
lea
fwait
les
dec
mov
adc
inc
in
lahf
loope
mov
xor
xor
cmp
and
in
or
adc
shll
outsb
pop
mov
loopne
pop
mov
mov
sub
ss
outsl
out
aad
pop
inc
rclb
mov
jp
mov
mov
inc
add
mov
cmpsb
adc
xlat
jp
inc
mov
xchg
sub
sahf
pop
add
sub
cmpsl
imul
sbb
outsb
insb
shll
insb
mov
jecxz
dec
pop
sbb
sti
jae
loop
inc
pusha
dec
xor
test
add
and
pushf
mov
xor
cmpl
jae
jnp
loope
sbb
ret
in
clc
les
in
dec
inc
aaa
add
mov
jl
xchg
adc
xchg
ja
and
adc
repz
push
xor
push
mov
cmpb
lods
push
pop
dec
pushw
mov
cli
cmp
sub
icebp
or
adc
cmc
jnp
stc
sbb
mov
cld
pop
mov
ds
test
dec
fisttps
sbb
das
cmp
dec
cmc
xchg
jecxz
dec
jle
jl
outsb
adc
add
daa
or
mov
mov
push
inc
or
inc
aam
cmp
adc
rcl
adc
shll
xadd
and
mov
cmc
add
lret
pop
and
xor
adc
inc
loope
fildl
arpl
imul
outsb
ret
mov
jno
push
lds
movsb
inc
mov
in
shlb
sahf
lret
or
pop
adc
rcll
xor
mov
sub
push
push
xchg
xor
lods
insb
aas
xchg
movsb
cmpsb
cli
jb
dec
int
pop
test
xchg
shrl
pop
pop
inc
mov
add
sbb
popa
pop
push
cwtl
dec
sbb
iret
pop
push
add
test
and
rorl
mov
aam
jo
test
cmp
and
loop
lock
mov
mov
inc
or
mov
inc
insb
and
popa
xchg
xor
imul
js
les
sarb
mov
push
mov
mov
jo
insb
mov
mov
test
xchg
lea
push
pop
lods
ja
lea
sub
aas
push
dec
clc
ja
rcr
sub
or
push
repz
in
xchg
test
sahf
fiadds
enter
jb
stos
adc
xor
repz
jno
push
es
dec
pusha
push
cltd
xor
mov
adc
mov
lds
mov
icebp
push
setne
adcb
out
xchg
or
pop
or
daa
jbe
pop
lret
jne
ret
loope
insb
gs
repnz
rclb
push
cmp
jg
nop
xlat
aad
enter
sarl
cmp
gs
test
notl
insb
or
movb
xlat
js
shl
sub
dec
enter
or
dec
mov
lahf
dec
cmc
jp
movmskps
xchg
push
push
dec
mov
les
fmull
or
ds
pushf
pop
ja
pop
and
stc
imul
pop
mov
inc
pop
mov
or
add
jno
push
sub
sti
or
cld
xchg
rorb
fcmovnb
into
inc
mov
mov
bound
addr16
jno
mov
orb
pop
xchg
sub
out
arpl
mov
lret
or
aam
loop
jae
ficoml
adc
mov
xchg
xor
sbb
cmc
xor
sbb
pop
mov
xor
push
xlat
ficompl
lcall
fdivrs
call
sub
rcrb
out
cwtl
mov
addb
iret
sub
jle
adc
test
mov
int3
adc
das
jge
jnp
jbe
or
pop
push
mov
mov
adc
lret
popa
int
cmp
mov
aaa
mov
fnstcw
test
pop
popa
xchg
fdivs
imull
test
pop
add
cmpsl
jecxz
iret
jno
rcrb
cmp
lahf
sub
dec
enter
xchg
xor
adc
iret
outsl
push
gs
aaa
mov
xchg
daa
adc
lods
movsb
adc
addr16
subb
call
insl
xchg
xor
jmp
stos
inc
adc
or
sub
dec
cmp
add
inc
cmp
push
mov
dec
ret
sub
out
mov
pop
lret
mov
jno
jmp
push
jne
jmp
mov
push
ficomps
icebp
xchg
int3
je
or
lret
ret
pop
cmpsb
cmpsl
hlt
cmp
jns
addr16
xor
std
popf
cmpsl
mov
inc
test
add
sub
push
jecxz
pushf
pushf
jb
sub
mov
adc
rcrl
pop
and
jmp
or
push
test
sub
daa
movsb
push
roll
movl
mov
nop
dec
push
add
loope
xor
aaa
outsl
outsl
mov
js
fsts
sbb
rorl
inc
pop
mov
jb
sbb
imulb
ret
aaa
and
icebp
add
xor
cld
into
scas
mov
jge
xchg
push
divb
jg
push
in
and
sub
js
mov
loop
outsb
mov
dec
fst
je
jbe
js
pop
push
int3
idivb
pop
mov
dec
lds
xor
push
jecxz,pt
xchg
xchg
mov
mov
sbb
push
adc
adc
push
mov
movsl
aad
jmp
lret
insl
outsl
repnz
jmp
adc
mov
andps
out
and
nop
std
and
cmpsl
insb
sahf
repz
ds
imul
les
pop
aad
repnz
mov
cmp
sub
aaa
lock
mov
push
add
sbb
dec
jns
inc
aad
out
push
in
fcoml
jmp
adc
adc
out
mov
out
loop
repnz
das
or
out
test
in
inc
cwtl
insb
mov
incb
js
arpl
inc
push
xor
cmpsb
scas
into
mov
jo
shlb
in
icebp
mov
or
loopne
leave
pushf
int
push
xchg
bndstx
mov
jp
pop
in
add
data16
out
push
mov
add
nop
inc
sahf
dec
decl
cs
dec
cmpsb
pop
icebp
int3
sbb
xor
adc
je
sub
sti
daa
sbb
pop
sbb
jp
pop
aam
add
mov
jmp
cli
mov
ret
mov
imul
xchg
lret
pop
sub
pop
fisubrs
ffree
popf
adc
sbb
cwtl
jae
cmp
jp
push
lock
pop
and
xchg
out
pop
push
fmuls
push
and
repz
ljmp
fwait
adc
das
push
movsl
push
or
mov
scas
mov
ret
push
or
jle
bnd
jne
mov
adc
cltd
inc
aas
jge
jmp
and
movsl
loopne
hlt
jmp
cmpl
or
add
out
push
cld
add
adc
mov
jg
orb
pushf
ret
int
fsub
fs
addb
and
aaa
mov
push
pop
ss
mov
fnsave
std
inc
seto
jle
les
cmp
push
mov
imull
call
mov
sbbb
cmpsl
lock
adc
inc
or
add
sbb
mov
mov
cltd
jnp
sti
inc
dec
rclb
xor
dec
jns
mov
addr16
out
sbb
jg
sahf
jl
inc
or
xchg
shlb
lods
sub
cwtl
fists
xor
jns
adc
sbb
sbb
stos
mov
fsubrp
sub
sub
dec
xor
push
jno
mov
call
pop
sub
sti
dec
sahf
dec
shll
out
lcall
outsb
imul
jbe
es
add
repz
push
les
sbb
hlt
sbb
sbb
mov
adc
ljmp
icebp
mov
pop
imul
fildll
int
data16
xor
dec
add
or
jo
data16
xchg
xchg
imul
sbb
inc
ret
inc
jecxz
jmp
mov
mov
jecxz
jmp
adc
inc
fsubr
cmp
mov
addb
push
cmp
inc
cli
loope
or
and
sub
push
lahf
cmp
lret
aaa
int3
sti
xchg
stc
push
mov
xchg
daa
jge
cltd
ss
or
int3
xor
popa
add
aaa
sub
in
dec
inc
mov
lods
adc
or
ljmp
mov
sbb
fldt
adc
lods
xor
cli
fwait
pop
mov
js
cli
movsb
mov
out
and
out
jns
sbb
xchg
lahf
jne
imul
pop
mov
xchg
mov
xor
dec
into
mull
shlb
data16
pop
ljmp
repnz
or
test
aad
ud0
push
js
pop
inc
lret
ljmp
ret
dec
or
mov
lahf
mov
sti
mov
jecxz
test
or
dec
lods
enter
push
addr16
add
inc
fisubs
decl
push
sti
push
mov
loope
push
sub
leave
fst
test
outsb
mov
call
and
jb
and
xor
sar
clc
jb
aam
jecxz
into
mov
rorl
inc
btcl
sbb
adc
fs
jmp
push
lods
sub
imul
inc
pop
push
in
or
movsl
lahf
push
shr
fsub
mov
stos
iret
in
xor
adc
mov
testb
ljmp
mov
nop
or
sahf
cmp
lods
cltd
rcrb
cmp
or
sub
fidivrs
mov
fidivl
jecxz
out
cmp
or
repnz
lahf
test
sti
and
andb
xor
popa
icebp
push
sub
ss
jae
sub
mov
in
jecxz
les
loope
xor
pop
add
shll
aad
fnstenv
into
bound
dec
arpl
into
xor
mov
mov
fwait
movsl
mov
xor
jbe
insb
mov
and
in
mull
rolb
xor
int3
or
adc
out
std
cmpb
xchg
insl
xchg
mov
cmpl
mov
in
aaa
jnp
push
xchg
nop
dec
imul
mov
shlb
cmc
gs
subl
rolb
lea
repnz
sub
fwait
jmp
pop
ret
fisttpll
pop
in
out
test
movsb
lds
and
pop
bound
pop
pop
inc
out
sbb
sub
movl
jmp
jne
roll
mov
dec
xchg
mov
mov
repz
mov
xor
scas
sub
jae
pop
jb
sbb
test
mov
sub
and
mov
xchg
data16
out
enter
mov
arpl
ljmp
add
mov
jb
lcall
stos
loope
or
xchg
test
iret
xchg
mov
insl
pop
loop
jb
cld
pop
mov
add
jne
insb
cmp
jmp
and
push
lock
fidivs
sbb
sub
add
add
ja
and
add
mov
cmp
movsb
pop
push
mov
fldenv
add
or
int
pop
pop
jge
popa
and
xorl
push
push
test
xchg
or
pop
push
dec
ret
mov
test
subb
push
cmpl
fcoms
lcall
out
xchg
pop
xchg
mov
in
lahf
pop
mov
jbe
jl
data16
dec
xor
jecxz
pop
dec
scas
dec
push
dec
mov
sbb
gs
aas
inc
or
out
ffree
fnstsw
out
mov
aas
aas
push
and
iret
imul
out
pop
jae
xor
insb
jle
lret
jg
cmp
push
dec
lret
int
ucomiss
pop
pop
in
mov
pop
or
add
pop
sub
push
xor
fs
cmpsb
fisttpll
aam
cmpsb
sahf
js
or
loop
pop
fstpt
test
adc
das
jge
arpl
fnop
fdivr
adc
xchg
inc
cld
pusha
je
pop
push
mov
es
stos
stos
or
shr
rorb
jae
or
jo
mov
aam
jb
mov
jne
ret
loope
aad
and
outsl
mov
jmp
pop
insl
int3
mov
loope
arpl
int
cmp
jmp
es
mov
sub
rcrl
push
cmp
xlat
cld
add
mov
das
icebp
dec
sbb
sub
mov
ret
aad
push
rcll
xchg
sub
repnz
sbb
sbb
test
stc
std
std
fsincos
cwtl
push
lret
add
push
adc
sub
or
rorb
mov
int
and
jecxz
sub
xlat
inc
sub
push
jnp
and
inc
fstpt
xor
xchg
les
mov
jo
mov
jnp
movsl
adc
cltd
mov
mov
xchg
pop
mov
pusha
fnstenv
dec
icebp
test
movb
cmp
mov
jo
rcll
inc
adc
dec
inc
lcall
sti
jg
lea
test
pop
xor
sub
xor
xorb
iret
sarl
out
fdivrl
and
xchg
pop
adc
add
les
stos
xlat
ja
aaa
and
cmp
cmp
jnp
mov
pop
imul
inc
pop
fwait
das
dec
repz
fstl
mov
sbb
add
inc
sub
shll
dec
mov
mov
sar
add
lcall
push
cmp
test
lcall
sub
sbb
loope
sub
dec
test
push
std
jb
call
xor
xchg
add
int3
sbb
adc
sub
test
inc
fistpll
lcall
pop
arpl
jnp
jae
jns
pop
out
mov
fstpt
push
mov
xchg
cmp
inc
in
scas
xchg
and
test
andb
dec
push
xchg
pop
push
gs
dec
and
mov
imul
out
xchg
mov
mov
xchg
and
dec
addr16
xchg
testb
imul
pop
mov
cltd
or
mov
inc
std
push
xor
aam
inc
fsub
shlb
test
adcb
add
add
jl
lret
in
aas
shrl
test
je
adc
fcmovu
outsb
add
jge
lock
scas
xor
push
mov
dec
mov
dec
sbb
cmp
cmpsl
insb
pop
cltd
mov
ja
xor
add
pop
rep
xor
loop
xor
shll
shll
loope
ljmp
jns
xorb
mov
and
mov
or
jno
mov
jp
pop
ss
push
les
mov
jno
les
arpl
add
fnstcw
or
mov
cmp
xor
inc
sub
sub
fcoml
push
sub
push
mov
clc
mov
imull
jbe
mov
sub
loopne
dec
rcll
scas
popa
in
cmp
fs
fcmovnb
inc
add
lea
lock
mov
sub
mov
fldl
sub
mov
or
stos
mov
addr16
xor
cmpsb
ds
pop
fistpll
jo
lret
lcall
adc
cld
cltd
out
xchg
sub
add
das
hlt
minps
addr16
push
jmp
push
xorb
fsubrs
test
pop
sbb
pop
push
imul
enter
jne
cli
call
scas
out
adc
mov
dec
aas
xchg
std
sbb
addb
push
adc
fldl
dec
shl
stos
jmp
jae
jno
lret
mov
enter
or
fldl
pop
addr16
cmp
inc
sbb
rclb
out
xor
adc
roll
mov
mov
inc
xchg
pop
xor
jl
lret
push
fidivrs
insb
mov
push
dec
out
mov
inc
ss
enter
xor
mov
xor
popf
or
mov
adc
dec
repz
sbbl
xor
insb
pop
stc
sub
xchg
or
movl
popl
sub
jns
test
mov
out
lods
imul
xor
push
aas
cli
cmpl
in
and
jo
inc
lea
lea
je
cmp
loope
mov
sub
scas
add
fwait
cltd
gs
adcl
arpl
fmulp
xlat
pop
cmp
inc
addr16
repz
sarl
fisubs
test
jge
into
jne
jae
mov
xchg
mov
sbb
cmp
aad
bound
mov
mov
dec
sub
push
pop
mov
xchg
jecxz
add
rclb
jne
fnop
repnz
sub
mov
xchg
cli
sti
negb
divl
mulb
repnz
add
inc
in
xchg
mov
sub
jns
sub
push
pop
xchg
or
mov
adc
adc
fs
push
addr16
cwtl
aaa
mov
fldcw
pop
adc
sub
inc
aam
mov
jle
cld
add
pop
mov
mov
pop
mov
dec
push
dec
xchg
movsl
aas
xchg
mov
roll
add
adc
jae
adc
shlb
and
mov
insl
push
xchg
aad
imulb
loopne
fwait
sbb
adc
push
inc
fxch
sbbb
rclb
push
das
fstl
paddusb
pop
adc
mov
inc
fs
gs
mov
retw
pop
xor
xchg
in
sbb
dec
adc
les
adc
adc
mov
xchg
inc
mov
incl
dec
stc
rcll
xchg
pop
int3
dec
add
lods
ss
lds
je
loop
rcr
cmp
pop
test
or
scas
into
and
pop
orl
adc
xor
lods
pop
out
cmp
les
shrl
shll
push
out
stc
push
fistl
push
sub
push
jp
dec
sub
xlat
xchg
dec
inc
pushf
xchg
lcall
mov
mov
cwtl
xor
push
addr16
aam
cmc
in
outsb
or
mov
mov
inc
dec
movsb
aad
mov
repz
enter
lods
bound
int3
mov
jge
mov
mov
mov
push
mov
lock
cli
stos
xor
lock
arpl
xor
pop
jns
leave
inc
sbb
push
stos
jbe
inc
add
cld
add
aad
pop
push
sahf
call
aaa
in
jp
push
xchg
sbb
mov
test
loopne
ret
jns
sti
push
jle
xchg
and
int3
jecxz
cli
xchg
sarl
dec
ja
test
cmpsl
cld
and
ja
jecxz
push
std
xchg
std
test
xchg
rcll
sub
pop
in
or
xor
jbe
lahf
cwtl
xchg
dec
mov
push
bound
rcr
nop
repz
jo
pop
add
mov
dec
enter
add
and
cmp
push
jge
hlt
popa
rcr
test
scas
out
out
mov
xchg
jbe
mov
add
pusha
add
xor
cmc
out
xchg
jl
popa
icebp
lahf
mov
pop
lcall
push
mov
int
mov
or
out
inc
cltd
scas
popf
out
mov
push
call
pusha
or
leave
add
mov
pop
push
dec
aam
sub
xlat
aas
pop
fldenv
jae
int
enter
notb
add
jg
inc
aaa
pop
jne
fcomi
mov
icebp
jmp
scas
daa
sti
in
bound
mov
jns
mov
sti
into
sub
fstpl
pop
sub
mov
xchg
push
xor
or
push
jg
xor
mov
pushf
mov
in
loopne
or
xchg
mov
imul
stc
ss
sub
adc
push
orb
test
cmp
push
push
inc
sub
xlat
les
movsb
mov
sbb
cwtl
push
inc
test
lret
mov
add
hlt
shrb
jbe
and
test
imul
jp
inc
add
jb
mov
cmp
jb
das
idivl
sti
dec
ja
shll
dec
cmpsb
cmc
cltd
inc
lock
xor
in
leave
pusha
and
js
mov
shlb
or
push
or
mov
out
mov
iret
push
pop
nop
stos
bound
sbb
js
sbb
and
pop
lods
pop
push
popf
mov
ja
mov
in
jg
test
pop
push
mov
fidivs
and
sbb
dec
mov
inc
ret
into
bound
xchg
out
push
divb
aad
adc
aad
mov
mov
in
mov
sarl
icebp
test
mov
hlt
push
popf
in
in
outsl
mov
xchg
stos
push
popf
inc
lods
mov
mov
add
aaa
pushw
pop
cltd
into
cld
in
sbb
sub
sub
fimuls
outsl
jae
sbb
div
sbb
mov
sbb
or
jecxz
iret
in
sub
stos
xlat
inc
out
std
and
rorl
jns
and
imul
fnstcw
ret
pop
loop
sti
mov
stc
push
popf
xchg
lahf
add
loop
lcall
mov
sub
test
and
shr
cmp
ficompl
fs
adcl
adcb
std
fdivr
leave
aas
addr16
cld
jge
adc
in
pop
mov
mov
xchg
arpl
xchg
push
push
inc
pop
in
dec
stos
lret
fsubr
jne
xorb
inc
call
xchg
lahf
jmp
bound
aas
xor
push
add
inc
dec
imul
into
add
cld
sub
xchg
xchg
pop
jge
adc
and
rolb
shlb
lea
aad
xchg
repz
fsubs
into
jg
cmp
sbb
sahf
bnd
andl
lds
cmpsl
pop
in
nop
pop
int
mov
insl
xchg
jno
pop
adc
jl
fcomi
adc
clc
add
inc
pop
lret
jmp
sub
cmp
push
loope
not
xor
shr
sahf
mov
dec
out
adc
push
sahf
pop
add
xchg
shlb
xor
mov
push
cmp
fsubrl
shlb
xlat
mov
loop
mov
lods
xchg
or
clc
inc
and
insb
xchg
or
stos
fwait
fisttpl
call
sub
sub
mov
leave
jns
rcl
int3
insb
je
sub
or
dec
pop
aam
or
cmc
or
jle
push
loopne
jns
pop
jno
fistl
jbe
arpl
cmpsb
aaa
mov
lcall
rorl
imul
push
cmpl
mov
daa
ret
ss
mov
cmpsl
xlat
out
mov
cmp
cmp
sub
or
jae
test
mov
mov
shll
mov
mov
sti
mov
xorb
pop
fstpl
pop
jl
and
jle
mov
inc
in
jl
decb
jecxz
out
or
adc
push
sbb
mov
ss
push
sahf
ja
jmp
adc
adc
pushl
aaa
ljmp
fmuls
adc
pop
imul
mov
mov
and
mov
jle
divb
and
jle
cli
leave
push
or
dec
mov
xor
or
sbb
cmp
xor
imulb
movsb
pop
push
jnp
gs
adc
xchg
fcoml
mov
xor
rcrl
jmp
jne
mov
and
fstpt
sbb
pop
jg
cmpsl
pop
mov
sbb
mov
mov
mov
loopne
xor
fadds
jp
in
inc
stos
add
and
rcr
sub
scas
add
jo
mov
scas
sbb
add
lea
test
xchg
mov
arpl
scas
imul
sub
xor
mov
std
push
adc
cmp
xor
jg
inc
ds
scas
and
dec
icebp
add
popa
pop
pop
dec
sbb
out
insl
leave
and
lret
mov
inc
mov
push
lret
or
mov
pop
xlat
pop
testl
mov
imul
outsl
fsubs
je
push
icebp
xchg
rorl
test
je
xchg
lods
in
mov
sbb
add
mov
aaa
cmpsb
xor
inc
or
push
nop
rcrb
pusha
pop
data16
fcmove
movl
ficompl
insl
scas
push
or
pop
loop
adc
inc
sbb
mov
pinsrw
stc
xor
xor
dec
test
adc
addr16
push
fimuls
into
aam
xor
mov
ret
sbbb
adc
push
jno
sar
mov
fdivrs
pop
xor
daa
push
pop
mov
out
push
mov
mov
outsl
xchg
cwtl
mov
shll
scas
pop
loop
mov
dec
lea
push
movsb
in
pop
add
pusha
sbb
xor
fildl
fsubrl
push
add
cmpsl
mov
aam
lea
mov
ret
outsb
or
outsb
pop
mov
cltd
jmp
mov
sub
jp
jo
mov
mov
xor
xchg
push
addr16
fisttpll
das
call
mov
pop
cmp
jmp
and
xchg
mov
std
mov
insb
dec
ljmp
mov
hlt
jae
xor
cmp
ja
jno
xchg
shlb
mov
outsl
xchg
mov
inc
mov
sbb
push
fisttpl
jbe
fcoms
or
inc
mov
stc
xchg
faddl
iret
data16
cmp
or
iret
pusha
pop
or
xchg
and
mov
cmpsb
mov
stos
andb
lock
pop
mov
paddw
lcall
sbb
xchg
jmp
mov
ss
xlat
sbb
dec
out
sbb
pop
pop
push
pop
jne
mov
jp
mov
pushf
xchg
and
sub
stos
ljmp
inc
pop
cmp
pop
fistl
int
push
shll
xor
roll
fmuls
sub
xor
or
inc
push
lds
lret
push
fnstsw
insl
sbb
data16
sub
js
pop
xchg
xor
pop
add
dec
inc
frstor
and
jle
pop
mov
xchg
pop
cmp
loopne
pop
mov
pop
pop
mov
add
data16
push
das
push
testb
jl
cmpsb
jg
jle
out
or
inc
pop
in
popa
sbb
hlt
mov
cmp
imul
add
and
rclb
push
xchg
icebp
adc
fisubrs
pushf
mov
test
data16
push
rcrb
subb
aaa
cmovle
mov
inc
mov
xor
cld
pop
jno
bound
or
add
std
xor
out
stc
dec
dec
lods
mov
xchg
outsl
push
clc
push
fcoms
jbe
aam
in
xchg
jle
adc
in
and
icebp
jns
and
xchg
out
ja
bound
or
inc
dec
and
rolb
aad
mov
xor
iret
nop
mov
and
mov
or
xlat
jbe
dec
xor
adc
jns
fisttps
mov
xchg
insl
addl
push
int
aam
xchg
mov
pop
jns
xor
xchg
gs
jo
sub
pop
divl
adc
pop
rolb
inc
clc
jl
jo
mov
and
inc
hlt
insb
xlat
notl
cmp
cmc
jo
lret
iret
outsb
into
std
jge
lds
pop
mov
fistps
xor
or
inc
xchg
pusha
loop
rolb
stc
jge
aas
insl
dec
sub
and
xor
stos
icebp
test
jnp
out
and
outsl
lds
mov
cmp
loopne
xchg
push
sti
mov
add
pop
icebp
les
int
shll
push
cmp
aaa
add
icebp
mov
xchg
icebp
mov
lret
jmp
test
daa
inc
in
adc
repnz
xchg
dec
or
in
sub
mov
pop
add
sub
xor
movsl
cmpsl
or
mov
and
popa
sbb
xor
dec
fadd
add
sub
pop
movsl
stc
cmp
pop
test
inc
fdivrs
sbb
add
xchg
daa
and
mov
adc
push
pushf
or
test
outsl
push
dec
sbb
test
jl
outsl
iret
adc
dec
lret
push
jmp
fimuls
imul
popf
sub
pop
enter
xchg
inc
loope
mov
ja
mov
loope
or
sub
ljmp
or
int
je
jg
mov
cmp
in
push
dec
mov
in
adc
insb
xchg
push
ss
pop
cmp
xchg
inc
add
push
inc
movlps
popa
or
mov
mov
repz
icebp
xchg
pop
jp
rcrl
pushf
testw
lds
out
clc
mov
jns
cmp
xchg
cmp
cmpsb
or
push
inc
push
addb
or
outsw
ds
jl
ret
fdivs
cwtl
jbe
sbb
adc
mov
stos
lcall
mov
lret
test
inc
flds
lcall
in
xchg
lea
data16
lret
cmp
jmp
xchg
inc
insl
or
pop
inc
push
mov
sub
fs
lock
pop
add
adc
icebp
xor
or
dec
lret
insb
lock
and
mov
push
bound
leave
jl
lahf
bts
xchg
out
push
call
leave
push
jns
notl
push
sub
fs
push
sub
nop
popa
jmp
pop
dec
inc
adc
inc
fcompl
mov
adc
inc
enter
adc
in
xchg
and
add
ss
pop
xor
jbe
cltd
dec
fwait
jl
mov
lds
sti
jo
enter
xchg
ss
leave
dec
push
lods
sbb
jp
addr16
dec
cmp
and
inc
mov
and
pop
loopne
test
dec
xor
das
or
inc
mov
test
and
mov
lret
je
imul
adc
dec
ret
adc
jo
sbb
gs
mov
xchg
lret
dec
fildll
out
sub
cmpsb
out
scas
inc
mov
data16
inc
data16
std
shl
pop
mov
dec
sub
sbb
popa
push
imul
fs
int
fistpll
in
push
push
aam
inc
or
lea
sti
mov
cmp
xor
xchg
fimull
bnd
icebp
inc
xchg
sbb
jg
das
outsl
scas
push
cmp
mov
jle
cmp
jp
xchg
fdivp
mov
dec
cli
pop
push
into
outsl
mov
cmpsb
imul
mov
pop
fistpll
cmp
xor
and
xor
imul
imul
jmp
test
mov
roll
mov
scas
jo
pop
repnz
daa
out
adc
fcom
mul
shll
mov
and
mov
add
in
jge
fsubrp
subl
pop
fldcw
lret
mov
lds
jo
js
jne
cmp
fcoms
sub
dec
leave
dec
pusha
jmp
daa
jmp
or
cmc
repnz
out
inc
mov
mov
mov
jg
rorl
or
xor
jae
ret
cmp
push
push
and
pop
notb
data16
adc
jno
imul
fisubrs
pop
scas
icebp
pop
outsb
push
mov
pop
inc
xchg
out
push
es
adc
add
in
and
jle
or
mov
sub
xchg
cmpsl
pop
jp
xchg
pop
xorb
out
sahf
push
or
rcl
cld
pop
xor
out
movsl
xchg
cmp
loopne
in
shl
mov
mov
xor
addr16
dec
pop
mov
pop
cmp
sahf
fs
es
lods
movsb
jbe
mov
mov
pop
mov
mov
lock
xor
leave
aam
mov
sarl
push
adc
sbb
mov
ror
add
orl
clc
push
fldcw
and
mov
ret
faddp
adc
dec
sbb
or
jle
lods
push
inc
sub
lret
aas
push
outsb
xchg
testb
mov
sbb
dec
add
lret
and
add
repz
rorl
and
and
les
and
stos
subl
or
data16
add
push
movsl
ret
fbstp
fisttps
std
push
inc
xchg
push
xchg
xor
xor
adc
cmp
daa
push
sub
mov
sbb
ret
imul
dec
ret
repz
mov
jne
sbb
add
push
mov
outsl
dec
sbb
test
adc
test
imul
adc
mov
jge
gs
lods
and
and
pusha
mov
add
fisttpl
sub
sti
pop
mov
std
stc
mov
movsb
or
pop
outsl
fiadds
in
pusha
sbb
bound
outsb
popf
push
pop
movsb
inc
les
mov
out
pop
mov
cwtl
cmp
dec
xchg
roll
xchg
lahf
int3
addr16
and
jp
add
mov
das
push
pop
subl
xlat
lods
stos
mov
cmp
addb
stos
dec
mov
xor
adc
shlb
enter
dec
sub
mov
leave
mov
aad
mov
pop
jg
xor
mov
adc
xchg
std
rcll
gs
out
add
repnz
mov
inc
xchg
jle
inc
mov
cltd
lahf
sub
aam
aam
mov
je
jbe
ds
and
in
fmull
hlt
adc
add
sbb
pusha
pushf
cmpsb
cmp
lock
cmp
out
movsl
push
popf
adcb
xchg
xchg
pop
lret
fst
stc
mov
mov
orb
mov
push
mov
sarl
sub
cmp
hlt
inc
cmp
orb
jmp
sbbl
mov
sub
xchg
stos
rcr
push
xor
in
push
inc
leave
and
mov
mov
dec
dec
out
orl
add
bound
sbb
fstps
mov
mov
pop
xor
ja
mov
pop
ljmp
or
and
insb
aad
jp
repz
jo
mov
scas
stc
arpl
mov
push
mov
inc
stos
orl
add
adc
call
pop
out
dec
test
mov
dec
or
mov
sti
and
ds
dec
pop
into
pop
pop
test
ficompl
aaa
cmp
nop
loop
std
and
dec
jl
ljmp
divl
sbb
ljmp
imull
popf
lret
lret
inc
inc
cmp
dec
mov
inc
pop
es
in
in
lds
fs
test
gs
mov
mov
cmp
inc
repz
xchg
sub
mov
loopne
sbb
pop
lds
movsb
ret
inc
lods
clc
push
mov
mov
cmp
xchg
dec
out
clc
xchg
fcmovnu
push
push
jp
dec
into
cltd
sbb
xor
dec
xchg
ja
push
cmpsb
stc
popa
stos
cmp
repnz
push
inc
mov
repnz
decl
jns
inc
lahf
xor
cmpsl
mov
cltd
mov
mov
push
and
mov
adc
push
popa
cmpsl
jg
into
add
in
fs
es
inc
adc
mov
rcl
popa
fisttpl
pop
fucomip
jge
rcl
sbbl
ja
iret
adc
jecxz
inc
inc
adc
inc
bound
lods
add
adc
inc
jmp
mov
popf
or
out
push
lea
in
mov
cmp
inc
cmc
shlb
cmp
push
shll
aad
les
mov
lds
loopne
orl
inc
sub
pop
adc
shll
pop
cmc
scas
in
add
popf
pusha
sub
gs
jge
xor
xchg
mov
push
push
bound
out
jg,pn
cmp
xor
mov
lret
adc
fstl
add
in
mov
sub
shrb
ret
aad
lahf
das
mov
sbb
test
out
pop
sbb
cmp
pop
jno
inc
cld
popl
inc
rcrl
cld
lcall
sbb
inc
sbb
cmpb
into
cld
xlat
inc
add
cltd
cmp
mov
in
testb
fnsetpm(287
outsl
xchg
enter
inc
sbb
pop
movl
ja
fwait
testl
adc
test
lods
fwait
cld
cmp
mov
push
inc
call
add
stc
lret
mov
movsb
aam
or
adcl
in
cmp
mov
jg
ja
cmc
shr
cmp
cmp
jo
scas
sti
mov
shll
and
inc
adc
cmc
jmp
jne
jb
pop
adc
adc
xchg
call
cmpsb
jl
and
push
add
jmp
fld1
repnz
dec
ffreep
mov
add
andb
out
xlat
cmpsb
rcrl
sbb
xchg
pushf
mov
dec
rclb
push
jb
mov
stos
shlb
call
fisttpll
push
fs
scas
dec
in
cs
shr
cmc
push
and
sbb
jb
insl
push
enter
jne
xor
add
stos
dec
and
adc
push
rcrb
into
or
pop
mov
push
push
sbb
movsb
orl
mov
call
fldcw
jno
jo
push
testb
or
sbb
jg
and
and
xorb
mov
adc
int
lods
call
adc
mov
fs
mov
out
xor
xchg
inc
xchg
cmp
sbb
movsb
dec
popf
shl
scas
out
or
xchg
or
sbb
mov
cli
sub
sbb
daa
mov
mov
mov
cmp
jge
rcrl
pop
fisubs
mov
xchg
inc
xor
mov
push
aad
push
mov
jecxz
xchg
in
xchg
and
mov
xchg
mov
xchg
in
pop
lds
loopne
loop
dec
push
and
mov
jb
test
adc
push
loopne
pop
cmpsb
cmp
mov
loopne
arpl
or
pushf
or
jmp
stc
decl
and
sub
xor
rcrb
or
lock
sar
jne
mov
xchg
sub
pushw
and
aad
push
rclb
xchg
sahf
jge
inc
jg
xchg
pop
lods
adc
mov
add
nop
out
xorb
scas
nop
jae
mov
rcll
push
lock
push
sub
outsb
repz
fnsave
in
sar
xchg
insb
sahf
bound
xor
dec
ficoms
jmp
xor
dec
nop
or
sub
dec
jb
cmpsb
xor
pusha
in
hlt
sbb
pop
pop
dec
pushf
lret
ret
adc
xlat
sub
imulb
cmc
cmp
iret
pop
nop
mov
mov
popf
cwtl
mov
mov
ja
es
lahf
sti
adc
loope
sahf
push
mov
stos
add
push
adc
cmp
data16
mov
inc
sahf
cmp
mov
sub
fiadds
imul
sbb
mov
ds
adc
adc
adc
sbb
test
jg
test
xchg
cmp
mov
push
xor
sbb
ja
je
pushf
stos
sub
imul
jecxz
xchg
repnz
xchg
mov
fisttps
jmp
cmp
das
repz
add
popa
sub
imull
iret
mov
out
wrmsr
clc
xchg
push
mov
xchg
call
fldl
inc
pusha
push
jo
cs
jl
pusha
lret
inc
sub
sbbl
bound
fistpll
flds
jle
add
add
mov
sub
mov
mov
inc
pop
inc
jl
mov
std
mov
cmp
pop
mov
jo
stos
clc
ret
cmp
jbe
dec
pop
out
js
lock
outsl
mov
sub
sbb
add
in
rcrb
out
jne
mov
inc
xor
pop
lea
les
pop
pop
enter
insl
xor
sub
jge
in
or
popf
and
push
fstpl
sahf
add
insl
rclb
push
test
inc
bound
out
xchg
or
popa
fldcw
adc
mov
inc
int
pop
push
add
mov
fisttpll
jno
cmp
push
adc
out
push
ja
imul
lods
xor
sti
push
xor
loope
pusha
js
bound
and
pop
lds
xchg
sub
outsl
mov
sbb
mov
xchg
loop
pop
mov
jge
dec
loopne
mov
daa
mov
mov
mov
mov
cmp
mov
sbb
out
insl
push
or
loop
jle
mov
int
push
int
cmp
out
std
ja
add
rcrl
int3
mov
add
mov
stos
pop
jnp
shrl
mov
push
lcall
ja
in
aam
mov
mov
dec
lret
mov
outsl
jge
mov
add
scas
fbstp
dec
xchg
jb
inc
leave
push
das
inc
loop
sub
xor
cwtl
leave
push
and
nop
std
rcrb
fwait
ja
sub
and
repnz
push
inc
loopne
cmpsl
push
dec
xchg
jp
pop
adc
lods
out
and
add
pop
in
push
fldl
pop
lds
push
jnp
gs
push
jle
cmp
js
in
push
push
sub
adcl
loopne
lods
mov
roll
pushw
popf
sbb
sti
out
mov
pop
xchg
sub
repnz
test
jp
mov
out
mov
pop
cmc
jmp
or
jp
mov
add
mov
cwtl
sbb
dec
jmp
scas
ret
mov
jb
into
insl
adc
push
jp
inc
cmp
mov
xchg
sbb
ror
mov
std
cmp
cs
or
push
std
or
jo
mov
xchg
aam
or
pop
cmp
dec
test
dec
inc
lea
jge
push
sub
popf
rcll
repz
jmp
xor
imul
scas
enter
clts
xchg
xchg
mov
sbb
pop
lahf
lea
push
xor
pop
dec
fcomps
test
jns
sub
and
in
or
sub
jp
sbb
out
enter
scas
aas
movsb
mov
xor
and
jnp
jl
sbb
orl
mov
push
mov
das
sbb
or
imul
clc
jno
shrb
decb
sbb
mov
jecxz
or
shll
loopne
xor
fstl
cmp
or
test
lahf
inc
dec
add
pop
dec
addl
sbb
out
fsubl
fs
dec
jecxz
sub
inc
icebp
cmpsb
lock
out
and
cmp
in
stc
fildll
and
insl
mov
or
jp
repnz
dec
push
or
jns
cli
arpl
outsl
lret
sbb
testl
jno
push
test
ret
sbb
ljmp
push
sti
or
pop
pop
and
jnp
add
or
imul
and
arpl
mov
gs
or
fidivrl
lahf
daa
lea
inc
xor
shrl
adc
push
fistps
pusha
popl
cs
jne
int
push
dec
stos
adc
mov
pop
inc
insb
in
sbb
mov
sbb
inc
cmpsl
insl
adc
movsl
sub
pushf
aam
push
out
arpl
xor
mov
cwtl
orl
jo
pop
insl
in
js
xor
and
sub
loopne
jb
mov
rcll
mov
fisubl
cmp
repnz
sub
mov
jnp
mov
fistpll
xchg
add
jge
dec
jl
xchg
rcrl
leave
pop
rorl
daa
pop
xor
xchg
mov
push
dec
lret
outsl
testl
rcl
mov
xchg
or
pop
jp
call
push
xchg
mov
adc
cltd
mov
pop
adc
mov
data16
fs
insl
and
fsts
mov
pop
rclb
les
add
mov
sahf
push
or
repnz
inc
stos
lods
out
jge
out
or
pushf
jl,pt
xchg
mov
mov
and
aas
sub
aas
jecxz
std
insl
mov
fwait
dec
jae
call
inc
or
jecxz
or
bound
cmpsl
pop
and
ret
in
repz
fs
mov
mov
mov
shr
or
cwtl
mov
mov
int
mov
in
sbb
mov
add
pop
or
inc
loop
sbb
inc
adc
inc
gs
addb
push
inc
hlt
lods
mov
addr16
loopne
mov
scas
cmp
push
data16
pushf
sub
pop
fsubrs
lods
arpl
out
and
pusha
cld
mov
push
ja
movsl
imul
sub
out
dec
push
adc
mov
jnp
shll
adc
rorb
aas
mov
and
and
repnz
xchg
xchg
add
lahf
adc
jmp
ret
fisttps
std
loop
sbb
in
mov
jmp
xchg
shrb
ja
add
inc
adc
imul
add
ds
cmpsb
fld
movsb
enter
cmp
push
ljmp
mov
hlt
sahf
and
mov
pop
popf
push
int
add
and
jmp
xor
insl
scas
or
jae
cmpsb
mov
jmp
mull
pop
iret
sahf
dec
pop
int3
enter
rorl
pop
mov
movsl
shll
in
lea
xchg
lea
outsb
adc
fs
ds
test
addr16
stc
test
xor
or
push
dec
lds
lea
mov
lods
push
fs
das
push
or
aam
mov
pop
fsubrs
push
pop
cli
std
test
jbe
sub
lds
xor
ret
xor
in
pushl
mov
and
mov
xchg
push
jmp
inc
push
sbb
adc
cmp
hlt
push
pop
fistpll
or
outsl
test
cmpsl
inc
pop
inc
mov
call
xchg
aas
push
jbe
dec
cmc
lods
das
add
add
test
sbb
fmull
dec
loope
jae
xchg
pushf
fisubs
xor
enter
ret
mov
fsubl
std
push
enter
lret
dec
repz
push
sti
mov
sti
mov
inc
lahf
mov
xlat
xlat
call
sub
jbe
xor
xchg
jmp
push
sbb
fsub
mov
mov
cltd
faddl
movsb
pop
and
adc
push
dec
sub
add
sub
imul
shrl
arpl
popf
dec
cld
test
mov
adc
je
push
inc
dec
imul
mov
sti
mov
es
push
stc
rcr
mov
cmpl
jne
aad
out
xchg
je
sbb
pop
test
jo
ds
xor
mov
sub
dec
jecxz
mov
aam
xchg
lea
es
xlat
mov
xor
or
lahf
or
dec
rcr
push
pop
lahf
popf
or
imul
leave
mov
lds
fsub
cmp
mov
inc
out
cwtl
fimull
ret
sub
rcr
fidivl
call
rcrb
or
sub
inc
push
out
sub
rcrl
mov
shlb
cmc
imul
fabs
jns
add
outsb
fidivl
sub
inc
into
je
iret
fisttpll
xchg
test
mov
rorl
mov
aas
xchg
sahf
sbb
xor
dec
push
inc
add
imul
nop
adc
loop
xchg
mov
lods
push
push
mull
mov
and
cwtl
arpl
jecxz
gs
data16
movsb
pop
mov
sbb
mov
add
test
jnp
sahf
pop
ret
cs
cmp
das
ret
pop
mov
push
aas
popa
out
inc
pop
into
std
pusha
gs
call
jg
pop
cmp
pop
mov
push
jl
data16
int3
sub
outsl
ja
mov
push
out
and
jecxz
jno
push
mov
adc
xor
cmp
jl
add
mov
cld
scas
add
out
xor
xor
test
add
loop
jbe
sub
adc
push
cmp
inc
and
mov
xor
mov
dec
inc
in
jns
je
rorb
imul
dec
and
mov
lret
push
pop
clc
ss
mov
push
outsb
xchg
sub
test
jg
popl
mov
mov
xlat
fstpt
cmp
pop
sub
mov
iret
nop
je
pop
fistpl
xlat
js
into
jb
dec
or
push
xorb
pop
cmp
jo
mov
popa
sbb
fisubrs
mov
xchg
xchg
xchg
inc
cmp
loopne
inc
fisttpll
dec
nop
add
movsl
fwait
xchg
ja
mov
inc
mov
lea
mov
vunpcklps
daa
scas
insb
cmc
push
les
sbb
dec
lods
in
dec
daa
lcall
fdivrl
nop
flds
and
adc
ljmp
jb
inc
addr16
xor
into
iret
jl
das
lret
dec
aad
scas
sbb
dec
xchg
sahf
out
jp
ja
fists
push
push
inc
adc
ret
push
cld
add
mov
jne
fs
pop
xor
fnstenv
add
xchg
mov
pop
int3
fistpl
cpuid
pop
jecxz
adc
loop
shll
ret
loopne
int3
in
cmp
and
inc
and
shlb
mov
arpl
or
jo
scas
aaa
inc
or
in
cmp
xchg
mov
mov
es
testl
in
das
cs
lcall
pop
mov
pop
lods
pop
daa
jl
ret
adc
jo
imul
mov
fstpt
inc
ds
ljmp
push
stc
jg
xchg
sbb
mov
xor
mov
movsl
rcrl
addr16
inc
or
sub
mov
outsb
leave
int3
add
pop
cmp
add
mov
sbb
mov
dec
test
addr16
sbb
loope
popf
daa
inc
lock
dec
sbb
int
int3
cli
shlb
add
adcl
mov
sbb
aaa
and
push
or
aas
scas
gs
lret
jle,pt
cmc
lea
cli
adc
je
sbb
ret
pop
xchg
ret
or
or
rorb
insl
shll
aam
push
jmp
mov
sti
sbb
mov
sub
mov
fistl
jae
sbb
mov
ret
lods
enter
xchg
and
xor
push
add
cmpsb
lock
mov
das
fbstp
inc
js
mov
inc
out
pop
es
addr16
push
mov
or
sbb
adc
mov
test
mov
loope
outsb
jmp
xchg
dec
and
push
sbb
cmpsb
pop
lcallw
mov
outsb
jmp
mov
nop
mov
xor
mov
add
fisttps
std
mov
popa
fldenv
lods
ss
jns
mov
pop
ja
js
or
pop
sub
scas
adc
imul
and
loop
cmp
dec
cli
lods
loop
out
mov
mov
aam
leave
add
sub
scas
or
lret
pop
fldenv
pop
mov
jns
inc
or
clc
ds
mov
andb
sbb
xchg
das
shrl
sbb
imul
jge
ret
xor
xrelease
mov
jecxz
and
sub
and
add
xor
mov
fwait
lds
mov
bound
dec
in
loope
jge
ds
pop
negb
mov
fistpll
sarb
or
insl
leave
lods
das
or
cli
jecxz
out
aas
mov
pop
test
aaa
sub
js
jmp
cmp
sbb
cmc
fs
jb
xlat
xor
aam
jl
clc
pop
jp
mov
cmp
lds
les
jnp
add
lea
daa
mov
imul
es
imul
cmp
adc
xchg
in
mov
and
or
xchg
xchg
pushf
lcall
xchg
fstps
daa
icebp
shl
pop
cld
jle
insl
ds
adc
pop
sarb
sub
std
insb
push
roll
lds
test
and
addr16
shrl
xor
dec
mov
xchg
shr
nop
xchg
pushf
add
xchg
pusha
xchg
aad
or
push
add
data16
rorl
sahf
mov
xchg
jae
xor
mov
leave
rclb
scas
or
nop
jae
movsl
jmp
lret
mov
jecxz
notl
aaa
and
fdivrs
ret
xlat
mov
inc
mov
mov
test
and
in
mov
or
push
or
inc
push
sti
cmp
jno
out
test
sbb
nop
pusha
test
test
fwait
inc
gs
lods
xchg
xor
call
jno
out
adc
aam
mov
and
out
scas
inc
test
push
jbe
inc
adc
jge
pop
add
adc
dec
icebp
adc
movsl
stos
js
jnp
test
jo
inc
add
inc
jle
xchg
xor
das
sub
inc
notb
repnz
and
stos
mov
sbb
test
or
pop
pop
aad
dec
adc
sahf
or
hlt
jle
test
push
adc
push
mov
cmp
mov
loop
mov
rorb
mov
sbb
ret
add
and
lret
jo
inc
call
add
xchg
mov
push
movsl
xlat
les
cmc
mov
xor
cli
jns
push
repnz
xchg
sbb
lds
inc
icebp
inc
jns,pt
aas
mov
in
cmp
jl
or
push
inc
sbb
leave
icebp
xchg
mov
iret
divl
pop
cmp
divb
lods
popa
xchg
pop
fimull
add
cmpsl
jne
std
push
sub
inc
loopne
ss
adc
and
inc
push
and
movsl
pop
nop
js
ljmp
pop
movsb
fbld
or
lahf
in
int
out
mov
push
stos
sbb
js
add
dec
lods
push
scas
lret
mov
xor
push
cmp
jg
cmp
scas
push
cmp
adc
mov
push
cmp
std
mov
push
rclb
cmp
cs
xor
sahf
dec
add
out
fcoms
adc
jne
xchg
xor
jle
cmp
jl
cmp
stos
mov
mov
mov
sub
pop
push
inc
js
push
stc
mov
pop
sbb
test
jbe
add
imul
sarb
popf
lods
loopne
rorl
popa
or
or
out
push
mov
ficompl
hlt
mov
ret
loope
inc
sub
sub
push
pop
loope
aam
jb
pop
jg
in
pop
aaa
xchg
call
les
in
lods
xor
or
add
and
pop
or
lods
or
lcall
sbb
push
cmpsl
pop
xchg
cmp
dec
outsl
loop
and
jbe
sub
cmp
rcrb
sahf
add
sub
aam
enter
push
fsubl
lahf
push
ds
int
or
mov
in
inc
test
sti
ret
lcall
mov
inc
lcall
shl
movsb
int
dec
dec
call
push
xor
pop
jg
cltd
dec
jmp
pop
cli
cmc
in
ffreep
push
sbb
jmp
fstps
pop
add
in
xchg
in
xlat
mov
fimuls
add
pmaxsw
fists
mov
pop
mov
and
outsb
jno
sub
ret
not
sub
daa
mov
aam
notl
sahf
sbb
ds
adc
pop
inc
sub
bound
dec
jb
adc
jmp
adc
add
xchg
pop
xchg
xchg
and
xchg
and
pop
lea
cmp
imul
xor
and
push
inc
jnp
pop
push
imul
hlt
mov
mov
jae
adc
sub
push
jne
and
cmp
pop
ljmp
cwtl
adc
jmp
lods
and
rcrb
push
aam
jo
stos
addl
subb
xor
xchg
pop
data16
adc
ret
pusha
push
ja
sahf
mov
xchg
insb
imul
mov
into
add
pop
aas
call
push
sbb
add
push
scas
cmpsl
pop
pusha
or
sahf
decl
jb
xchg
adc
lock
pop
pop
adc
push
addl
nop
iret
bound
jle
or
int
or
or
je
xor
mov
add
sbb
data16
adc
mulb
addr16
sub
cs
popf
fdivr
mov
push
movsb
sahf
xchg
nop
mov
jmp
std
shll
push
movsb
add
lods
out
xor
dec
insb
xchg
pop
pusha
sti
fildl
hlt
pop
nop
jecxz
mov
ret
mov
fwait
int
push
and
in
fucomip
ret
je
and
enter
lods
pusha
pop
addr16
jno
push
shlb
rcrl
and
ficompl
xchg
idivl
pop
push
mov
dec
aas
mov
mov
test
sbb
sbb
push
aaa
aaa
aas
sahf
bound
lret
outsb
xchg
adc
mov
add
xchg
and
cmp
xor
pop
xlat
in
dec
mov
inc
xchg
sbb
and
sahf
push
pop
push
mov
movsl
mov
das
and
push
mov
stos
loope
int3
rcll
ds
jns
jb
out
xchg
out
andps
inc
addr16
negb
stos
inc
xor
push
ja
gs
insl
enter
pop
cwtl
mov
or
mov
xchg
inc
mov
mov
sbb
dec
xor
ljmp
or
xor
sti
cltd
adc
popa
jno
mov
scas
jnp
nop
jne
test
jae
mov
leave
adc
sbb
pop
push
xchg
cltd
lock
fwait
shll
sub
in
xchg
add
xchg
cmc
ret
out
out
fisttps
pop
fnsave
push
jecxz
fdivrl
cmpl
cli
pop
mov
push
cwtl
mov
in
add
ss
push
mov
push
lcall
fs
nop
pop
sub
and
inc
pushf
imul
adc
adc
push
les
negb
cmc
adc
in
stos
enter
sub
imul
js
mov
inc
mov
pop
sub
xchg
movd
pop
dec
lods
sti
stos
repnz
sub
rorb
push
sbb
xchg
addr16
or
or
xlat
mov
inc
pop
mov
adc
dec
lcall
insb
pop
mov
inc
adc
pop
mov
ljmp
lret
out
inc
cmp
inc
iret
lahf
and
mov
stos
push
test
adc
into
push
pushf
dec
cld
jg
mov
sbb
mov
dec
xor
aad
pop
lods
cltd
xor
pop
mov
push
jmp
pop
lods
jp
adc
fs
lock
xor
mov
xor
into
cmp
mov
aam
insl
mov
js
mov
sub
cmp
xor
stos
mov
and
repnz
jns
push
stc
xor
test
ja
mov
fcomi
lahf
dec
cmove
fstpt
xchg
es
or
and
pop
xchg
adc
mov
push
push
push
movsl
loop
and
jle
and
scas
je
test
or
add
adc
repnz
mov
sub
jle
push
jnp
jmp
push
sub
imul
mov
cmp
jg
mov
push
mov
je
dec
cmpsb
mov
fistps
fidivrs
pop
dec
stos
fbld
or
sub
mov
add
xor
mov
scas
jg
xchg
loopne
mov
pop
scas
push
mov
loopne
or
mov
daa
dec
adc
inc
or
jl
inc
int3
outsb
mov
sbb
in
fstpl
fimuls
fldenv
xchg
jb
cmp
imull
mov
fists
test
mov
dec
push
lahf
jns
les
jnp
mov
insl
cli
cmpsb
nop
xlat
mov
sahf
push
mov
idivb
inc
repz
dec
fcoml
shlb
in
sbb
popf
es
inc
out
or
lret
xchg
sbb
jbe
pop
negb
xchg
out
xor
cli
xor
arpl
sub
mov
xor
lock
and
cli
repnz
mov
push
xchg
jecxz
sbb
rol
push
cld
lods
jne
xchg
jnp
fsubs
popa
int3
push
and
lods
shll
xor
push
mov
stos
dec
sub
xchg
add
dec
xlat
into
mov
inc
jnp
out
call
xor
clc
mov
inc
or
jecxz
pop
incb
scas
in
gs
ljmp
imul
inc
xchg
aas
jne
lea
sub
pop
xchg
enter
inc
imul
pushf
push
xlat
adc
dec
test
pusha
mov
or
sub
xor
pop
lahf
inc
test
shr
cli
mov
unpckhps
adc
mulb
lret
mov
call
lods
cli
call
leave
rcll
sbb
mov
cltd
test
bound
sbb
icebp
mov
or
and
mov
cmp
addr16
adc
xchg
jge
jne
push
mov
imul
f2xm1
and
jb
loop
sub
xor
popf
mov
push
xchg
mov
lret
jg
mov
adc
and
push
adc
sarl
sub
fs
lcall
pop
jne
jp
pusha
or
leave
dec
inc
fwait
cmp
and
mov
xchg
sbb
insl
dec
es
push
adc
cld
mov
push
cwtl
out
xchg
mov
movsl
adc
xlat
mov
out
pop
aaa
cmc
addr16
jge
jno
sub
imul
cmp
lods
cwtl
jecxz
pand
setle
out
jecxz
insl
insl
push
pop
shll
pop
add
xlat
pop
xchg
fiaddl
mov
pop
mov
or
repz
mov
icebp
sub
jp
cmp
mov
test
mov
mov
mov
in
mov
int3
jnp
xchg
jle
xchg
pop
or
sub
cmpsb
cwtl
enter
lahf
xchg
into
xor
in
pushf
call
gs
mov
dec
xorl
and
sbb
mov
jae
pop
jmp
or
jb
shll
jae
int3
sbb
and
pop
mov
icebp
andb
xchg
inc
pop
lcall
ret
ljmp
xchg
adc
and
pushl
push
jnp
jecxz
or
fldcw
lods
pop
iret
int
dec
and
mov
inc
ljmp
aad
cld
mov
mov
adc
ret
js
mov
das
cmp
pushf
xchg
xchg
shll
stos
shrb
rorl
test
mov
pop
ds
fmul
inc
mov
pop
mov
push
test
sbb
mov
test
xchg
ret
cs
xchg
in
movb
mov
xchg
lahf
mov
xchg
out
pop
push
fistl
out
mov
mov
mov
mov
dec
push
pop
xor
lds
fstpt
scas
xchg
addb
xchg
bound
add
lock
xor
mov
imul
lock
pop
mov
pop
jmp
stc
pop
fwait
adc
sub
rorb
loop
inc
sbb
push
mov
jl
lret
jae
mov
inc
test
movsb
pusha
inc
push
popa
mov
cltd
jge
add
lret
xchg
push
mov
lods
mov
clc
in
enter
add
fchs
int
jge
jae
sub
jo
cwtl
xor
pop
mov
nop
shrb
call
rcl
incb
out
pop
sbb
mov
jb
inc
add
enter
push
mov
dec
test
in
int3
sbb
shlb
add
sbb
jne
pop
fwait
xor
bnd
add
test
fdivrl
mov
or
ljmp
and
arpl
dec
imul
sub
push
adc
andl
add
js
mov
jo
xor
and
dec
xchg
dec
outsl
xchg
cli
stos
and
inc
xchg
mov
sbb
out
shr
push
daa
gs
inc
jp
jbe
inc
inc
mov
ss
stos
fiadds
out
sub
dec
sub
lret
xor
jae
push
adc
out
sub
test
repnz
aad
push
push
daa
jmp
sub
cmpsb
jmp
dec
sbb
cmp
dec
arpl
xchg
push
push
ljmp
xchg
sbb
or
rep
adc
int
aaa
add
mov
loope
jae
loope
je
pop
repz
icebp
sarb
jg
test
jmp
jno
fmulp
inc
test
lret
test
imul
adc
in
jbe
jl
mov
iret
mov
inc
dec
mov
lods
cmc
imul
sub
mov
add
rorl
test
mov
sbb
inc
add
dec
aad
and
loopne
xor
cli
mov
xchg
sub
divb
mov
pop
xor
adc
adc
std
jbe
mov
or
fidivrl
jg
dec
and
push
test
or
sbb
setae
call
loope
mov
or
clc
adc
orb
push
jne
add
push
mov
ljmp
adc
mov
lock
jle
clc
push
pop
sub
outsb
push
mov
push
add
imul
enter
test
pop
mov
jae
dec
xchg
inc
in
popf
fwait
aam
push
cmp
popf
xor
repz
dec
movsb
dec
popa
xchg
pop
pusha
xchg
sar
dec
add
xchg
ljmp
fidivl
dec
mov
pop
cltd
mov
test
cwtl
addb
inc
cmp
fs
and
movsb
bound
mov
jnp
movsl
add
mov
sub
pushf
push
cmpsl
fsubl
cs
sbb
mov
dec
call
insl
movsl
inc
lret
dec
lcall
mov
in
scas
stos
xor
in
xchg
in
inc
xchg
push
fadds
add
pop
mov
mov
add
jno
movsl
pusha
repnz
adc
imul
and
pop
or
ds
adc
negl
sub
mov
dec
xor
xchg
fimuls
in
cltd
cmp
and
rcrb
xor
jecxz
jo
call
dec
icebp
loopne
mov
pushf
jle
stos
or
bound
add
andb
pop
xor
mov
inc
scas
xor
adc
stos
inc
loop
orb
loopne
shrl
push
mov
repz
fwait
sbb
or
sbb
popa
inc
ret
movsb
ret
fsubrp
iret
negl
ja
jg
cmp
pusha
repnz
xchg
std
jo
addr16
divb
mov
jns
repnz
push
jp
adc
movsl
addl
push
push
mov
notl
dec
push
mov
pop
and
adc
jns
add
inc
out
negl
loop
pop
in
or
xchg
int
pop
mov
xchg
in
addb
sbb
lock
sti
xor
cmp
fdiv
and
test
xor
orl
jb
repz
shll
xchg
xchg
mov
out
test
in
inc
mov
and
js
or
pushl
bnd
pop
mov
mov
mov
test
arpl
je
sahf
clc
xchg
daa
sub
sbb
outsb
fidivl
dec
dec
fdiv
push
adc
js
mov
bound
repz
pmullw
mov
scas
repnz
push
nop
imul
dec
pop
pop
dec
cwtl
aas
ja
std
iret
cs
xor
insl
xchg
cmp
xchg
add
adc
ds
xchg
or
sti
or
dec
test
push
rolb
sbb
aad
dec
dec
fucomi
cmp
ja
sub
inc
jle
jmp
dec
jmp
and
xchg
sbb
sbb
out
push
imul
xor
adc
mov
nop
or
adc
std
imul
mov
sub
xchg
pop
adc
lret
cmp
mov
mov
imul
mov
push
sub
push
xsaves
arpl
pusha
jg
and
loope
cltd
int
mov
in
xor
xor
jecxz
sqrtps
in
push
sub
ror
jnp
and
sbb
mov
stc
mov
mov
test
stc
jmp
mov
daa
jb
or
xchg
jmp
inc
mov
add
jb
pusha
cmpsb
cltd
sbb
dec
sub
test
xchg
push
icebp
jae
xlat
mov
sub
jl
movsl
stos
pop
sub
sbb
mov
inc
add
insb
pop
cmp
xchg
xor
das
push
jg
fucomi
enter
mov
or
cs
shlb
dec
fnstcw
btr
sub
arpl
push
xchg
xor
jmp
jl
push
dec
and
pop
pop
outsl
inc
sub
fisubrl
aam
loop
inc
stos
subb
mov
scas
inc
adc
mov
inc
xchg
lret
pusha
mov
push
aad
idivb
jns
loopne
cmp
and
addr16
scas
push
mov
mov
fwait
xlat
iret
in
mov
ds
push
mov
ror
rorb
fcmovnu
xor
mov
jno
jo
add
pop
lock
mov
push
and
sub
adc
cli
push
aam
xor
aam
scas
jns
out
xchg
outsl
movsl
scas
sub
scas
imul
pop
or
push
inc
lods
fcomip
or
add
xor
mov
fimull
es
add
jecxz
lret
jmp
clc
pop
outsb
cld
pavgb
sbb
dec
out
xor
xchg
movsl
sub
xor
mov
les
into
mov
jae
test
filds
je
push
cmp
jno
cli
rclb
lcall
insb
clc
mov
mov
adc
out
ljmp
stos
scas
dec
mov
data16
cltd
add
xchg
int3
dec
subl
je
and
mov
lahf
dec
push
xchg
inc
mov
cmp
jne
xchg
insl
mov
inc
lods
mov
jmp
xchg
ds
xchg
les
test
mov
js
mov
pop
xchg
movsb
cmp
mov
mov
adc
clc
mov
jg
xor
into
cs
mov
push
mov
fdivrs
xchg
rcr
xlat
push
push
es
dec
push
jp
lcall
stos
in
xchg
fwait
jecxz
xor
mov
adc
insl
and
cmp
push
cmp
sarb
enter
fsubrl
out
dec
into
inc
divl
loope
daa
lock
mov
shl
mov
ret
int3
inc
and
mov
arpl
insl
pop
and
fucom
js
mov
mov
sahf
sbb
cmpsl
jns
arpl
add
push
rcrl
inc
sbb
scas
fucomip
push
stos
pop
inc
push
fs
stc
dec
cmp
jnp
lods
cmp
hlt
jg
inc
cltd
call
xchg
sub
fwait
daa
sbbb
and
mulb
sbb
add
and
icebp
rolb
outsb
sub
adc
push
mov
dec
push
out
mov
cwtl
sahf
mov
pop
arpl
and
jge
inc
repnz
jmp
sub
in
dec
call
and
jne
dec
jbe
enter
mov
mov
and
dec
cmpsl
mov
mov
popa
cld
sti
fs
cltd
push
dec
lock
pop
dec
stc
xchg
pop
in
mov
sahf
popf
mov
fbld
imul
mov
mov
fwait
or
add
mov
in
pop
jl
movl
jmp
mov
std
lock
xchg
push
stos
dec
scas
mov
mov
test
loop
das
fcoms
es
mov
xor
or
or
add
mov
iret
push
xchg
pop
sbb
std
ss
popl
lods
cwtl
push
test
push
mov
sysexit
xor
jae
popa
or
pop
outsl
in
push
out
adc
pop
mov
ret
cmp
lahf
jp
fcmovb
rcrl
les
out
ljmp
cltd
dec
popf
dec
mov
ss
loop
mov
cmpsl
movsb
out
inc
repz
imul
rorl
push
fs
inc
jnp
inc
fcomi
scas
js
add
mov
pop
sbb
push
jge
clc
int
stc
fdivl
cmp
mov
xor
push
test
shrl
mov
mov
or
or
loop
jecxz
cmp
cmc
mov
sbb
sbb
sbb
stos
mov
xor
pop
mov
xlat
jg
cmp
sub
popf
mov
in
mov
shlb
scas
mov
or
fbstp
mov
rcl
lea
mov
xor
jge
xor
int
cld
movsb
rorl
xchg
sti
adc
sbb
insl
test
adc
sbb
or
adc
test
mov
add
jb
mov
sbb
xchg
inc
out
mov
popl
jle
aas
daa
or
cmp
les
call
sbb
dec
jae
and
out
ret
cmp
loop
scas
in
mov
cmp
or
test
sbb
lahf
subb
mov
xor
pop
es
mov
fwait
repz
ja
out
adc
orb
fwait
int3
arpl
call
movsl
aam
push
hlt
sahf
pop
dec
arpl
jnp
sbb
xchg
sti
imul
inc
pop
pop
mov
or
rcl
pop
mov
sub
sti
out
cmpsb
cwtl
cmp
test
lret
cmp
cmc
push
mov
cs
push
fcoms
sbb
mov
insb
repnz
fmull
jmp
mov
mov
lock
test
mov
mov
fdivrl
mov
iret
cwtl
xor
jp
push
mov
loopne
clc
cvtps2pd
pusha
or
lcall
push
imul
pop
jge
cltd
jb
nop
scas
sti
mov
mov
mov
inc
mov
mov
lods
es
mov
or
jl
fisttps
lahf
outsl
sub
jmp
lret
add
mov
popa
push
mov
into
jge
shll
mov
fnstsw
cli
mov
out
cs
hlt
in
iret
mov
add
fsubl
mov
adc
xchg
repnz
cmp
or
pop
cmpl
cmp
neg
mov
sbbl
mov
jbe
fisttps
or
jbe
cmp
dec
lds
xchg
cmpsb
add
cmp
push
test
fldl
push
jecxz
outsl
adc
xchg
ret
mov
popa
cmp
xchg
add
mov
fucomip
jl
outsl
add
sub
add
ret
ja
les
shll
les
adc
sub
out
jb
sub
jnp
pop
dec
pop
ret
fsubl
pop
jmp
rcr
add
dec
testl
lds
je
ljmp
or
scas
ss
pop
popa
test
call
lods
inc
push
mov
jg
or
popa
pop
and
lret
sbb
pop
or
sti
scas
pushf
jns
and
xchg
stos
sub
mov
iret
add
push
cmpsl
out
lds
or
dec
ss
cltd
xor
pop
ds
into
pop
iret
stos
fcoml
sub
movsb
idivb
int
inc
cmova
cmpl
mov
inc
or
xlat
jno
aad
leave
jb
int
cmpsl
xchg
mov
mov
xchg
and
jnp
cmp
rorl
popa
call
pop
jl
cmp
xchg
jl
ds
cmpsl
mov
ret
sub
cmpsb
pop
adc
fisttpl
pushf
pop
push
hlt
push
inc
adc
sbb
and
je
mov
sbb
loop
lcall
mov
push
scas
jae
lcall
into
inc
jecxz
inc
bound
pop
loop
sti
dec
mov
xchg
adc
and
xchg
sbb
cwtl
fstpt
lods
cmp
adc
sbb
lahf
xor
mov
and
push
or
lds
mov
arpl
xchg
fists
xchg
fyl2xp1
cs
mov
mov
dec
or
insl
push
dec
adc
mov
dec
mov
xchg
cmpsl
insb
add
orb
dec
sbb
mov
mov
aaa
rcrl
das
jecxz
sbb
bound
fwait
mov
add
sub
mov
cmp
call
test
sbb
xchg
cmc
xchg
xchg
ds
std
xorl
nop
mov
pop
adc
sub
int3
pop
dec
iret
adc
in
ret
mov
sahf
scas
ret
sbb
add
es
mov
cmp
mov
loope
imul
cmp
xor
adc
sbb
lahf
out
mov
and
mov
cmp
lds
clc
out
in
dec
repz
push
mov
test
outsb
clc
xor
popa
adc
mov
jns
push
cld
pop
or
sub
xlat
bound
ss
push
jp
lock
ljmp
ljmp
mov
scas
dec
sbb
dec
dec
aad
insb
cmpsl
dec
cwtl
dec
imul
stc
mov
int3
js
leave
popf
mov
mov
sub
pop
sbb
outsb
sbb
outsb
inc
scas
adc
cmp
lret
pop
std
bound
ds
and
and
and
bound
and
push
test
push
ret
les
jecxz
mov
push
inc
test
popf
aad
insl
jle
mov
fwait
adc
push
mov
push
or
xchg
jp,pn
fcoml
cmpsl
insb
in
cmpsl
xlat
cmp
push
jecxz
pop
movsb
fcoml
mov
dec
and
and
jb
add
mov
sub
cmpsb
sub
push
push
push
push
cmp
dec
jp
or
leave
push
mov
push
dec
mov
pusha
outsb
pop
cwtl
fidivs
dec
fistl
ja
icebp
mov
jge
pop
insl
xorl
sbb
out
jle
cld
sub
iret
or
dec
mov
lahf
popf
xor
dec
arpl
sbb
fsts
scas
adc
cmp
or
or
jnp
out
imul
jae
repz
push
adc
lret
jmp
xchg
ret
push
jp
push
std
adc
jae
cmpsl
int3
sbb
jbe
mov
xor
insb
fiadds
jmp
shr
pop
push
dec
push
clc
or
mov
jo
pusha
mov
sbb
fs
aas
iret
ljmp
dec
je
dec
dec
fdivr
dec
push
aaa
js,pn
aam
insb
imul
pop
aas
mov
fld
cmp
push
jno
popf
cmp
cwtl
test
and
mov
pop
sub
in
jbe
loope
mov
push
fdivp
aas
decl
mov
fnsave
out
inc
ror
mov
nop
mov
int3
push
leave
movsb
lret
inc
dec
lret
popa
sub
add
pushf
out
pop
mov
out
stos
fdivr
les
clc
pop
test
ss
xorl
inc
stc
in
aam
fucomp
gs
shlb
or
fistpl
adc
mov
leave
adc
mov
sbbb
lock
ljmp
in
int
lock
lods
xchg
mov
cmpsb
js
add
rorl
jp
sarl
imul
lret
xchg
lea
jl
movsb
pop
imul
outsb
loop
lahf
and
and
jg
loope
loop
icebp
pop
fwait
es
xor
dec
and
cs
xor
out
and
jl
addb
jl
out
js
stc
mov
jno
mov
mov
movsl
cmpsl
xor
insb
adc
cltd
mov
mov
repz
sub
lret
xor
jo
mov
xchg
xorb
push
add
cmp
and
int
in
jle
stc
push
xchg
mov
push
push
cld
jb
pusha
imul
fs
imul
push
sub
in
mov
ret
pop
mov
scas
sbbl
int
rorl
out
mov
aad
inc
push
inc
dec
pushf
fisubrs
popf
cmp
dec
xchg
cmpsl
mov
pop
ret
fsubr
negl
jb
push
sub
sbb
pop
jbe
sub
xchg
lock
ss
cmpl
sbb
inc
push
lcall
xchg
aaa
xchg
and
sbb
fcmovb
sbb
or
jb
ds
xchg
sub
cmp
ds
inc
test
jnp
jo
lds
xchg
or
cltd
sarb
clc
lods
inc
divb
mov
fidivs
xor
xor
xchg
mov
movsl
mov
stc
jae
jle
mov
cmp
mov
fwait
repnz
out
sub
mov
stos
daa
arpl
jle
jnp
icebp
jecxz
sbb
lea
mov
mov
rorl
and
test
ret
cs
ss
idivl
in
push
and
push
add
lcall
gs
and
stos
stos
jo
sbb
jb
mov
movsb
fwait
push
aas
mov
in
jo
mov
ja
dec
test
out
jnp
xchg
jp
test
xchg
idivb
cmp
push
jb
in
mov
sub
jecxz
cmp
es
lcall
clc
sahf
loope
push
rcr
cwtl
jnp
jnp
sub
mov
imul
jb
dec
pop
stos
fiaddl
add
jnp
xor
in
inc
test
inc
fcomps
out
jle
out
scas
jns
or
push
jns
or
add
add
push
outsb
dec
sub
aaa
cmp
push
rolb
xor
inc
jno
fisttps
aas
inc
cmp
dec
mov
adc
psubb
mov
push
cmpsl
fstps
mov
jae
xchg
mov
hlt
outsl
mov
insb
nop
andl
cltd
adc
xor
lcall
les
sbb
inc
ljmp
ret
clc
pop
push
shlb
inc
fnsave
stc
mov
or
dec
adc
adc
negb
sub
lods
sub
es
jb
in
push
xor
xlat
push
xchg
imul
add
xor
mov
mov
aaa
and
jae
divl
ljmp
clc
push
inc
test
jecxz,pn
xchg
pop
rorb
push
push
push
push
dec
jp
out
push
sub
jo
push
fsub
inc
stos
or
xchg
dec
dec
cmpsb
loopne
push
testb
pop
mov
mov
jecxz
dec
xchg
addb
jmp
mov
movsl
adc
sahf
mulb
adc
pushf
jl
push
leave
pop
imulb
stos
ret
mov
jnp
mov
ficompl
les
ror
mov
repz
cmp
loop
pop
lea
dec
push
mov
test
jmp
insl
mov
mov
adc
xor
jecxz
push
lock
xor
push
adc
clc
in
js
out
cmc
mov
or
ss
roll
rcl
test
adc
les
xor
clc
pop
cmp
scas
iret
aaa
and
sbb
dec
xchg
movl
mov
jge
or
sub
sbb
xchg
jg
xchg
adc
fwait
push
cli
sahf
mov
repz
fistpll
mov
mov
test
cmp
lahf
and
in
btc
or
or
ljmp
aad
les
mov
push
lock
add
or
jge
cmp
pop
mov
shr
jbe
jbe
cli
inc
leave
inc
xchg
gs
cmpsb
iret
shl
fsubrl
push
push
cmc
push
push
sbb
loopne
out
out
add
add
sbb
push
jae
data16
aam
scas
lea
ss
jbe
enter
inc
test
mov
jmp
jp
mov
and
outsl
inc
scas
ja
mov
xchg
ljmp
or
or
fisubrl
xchg
or
xor
fnstcw
inc
xor
mov
cmp
add
push
push
dec
out
loop
fwait
out
aas
xchg
loop
nop
in
mov
inc
xchg
xchg
imull
push
inc
jl
sbb
or
aam
inc
xchg
in
out
xchg
or
pop
adc
jo
fwait
push
inc
jp
movsl
scas
cltd
cmp
dec
xor
mov
bound
dec
xchg
mov
popa
sti
and
stos
push
js
mov
xchg
clc
testl
add
pushf
pushf
add
cmc
cmp
push
xor
fcomi
pusha
and
sub
push
dec
push
hlt
mov
jle
jl
stc
cmp
fsubl
popf
stos
jl
inc
pop
stc
scas
or
rclb
mov
mov
lock
js
lret
cmp
ljmp
add
cmpsl
inc
cmpsb
mov
notb
loopne
lock
rorb
inc
lods
adc
les
outsl
xor
outsl
push
outsb
mov
test
inc
dec
cs
fildl
cmp
xor
idivl
daa
xor
ja
mov
or
arpl
fldt
xor
pushf
lods
loopne
cmp
push
in
add
lea
or
test
loop
in
add
xor
push
test
mov
add
in
fnsave
ficoml
push
xor
mov
jmp
inc
cmp
push
sub
jne
popf
ja
das
inc
lds
cld
cs
call
into
sub
push
aas
inc
push
cltd
pop
aaa
pop
sbb
jl
dec
ja
cltd
neg
jl
pushf
test
push
push
jae
call
leave
inc
sahf
adcl
imul
jle
pop
pop
mov
enter
out
xchg
push
cmp
popf
sbb
fs
ss
fdivrp
xchg
mov
sub
stos
jae
lea
or
push
or
mov
pop
rorl
mov
inc
xchg
test
pop
repnz
and
or
cmp
xchg
pop
and
ret
jle
inc
sbb
xchg
adc
jbe
movsl
pushf
pop
cmp
mov
clc
outsl
push
addr16
inc
mov
or
jo
aas
push
jo
mov
mov
or
sub
push
out
movsl
mov
mov
cli
adc
fwait
dec
ja
xchg
adc
jno
mov
lahf
push
pop
dec
mul
or
add
xlat
sub
xorl
sub
test
mov
test
and
mov
xchg
sub
mov
sub
jmp
jnp
inc
out
inc
xor
mov
sbb
int
push
sbb
scas
push
xor
and
cmp
and
mov
adc
adc
fisttpll
fisubl
insb
sbb
out
out
inc
fs
ljmp
sbb
dec
pop
jns
and
jnp
sub
or
adc
fmul
lcall
cmp
push
ljmp
lret
je
out
sbb
testl
call
inc
movsb
mov
rcl
pop
xchg
arpl
and
mov
xor
psrld
shl
icebp
lods
cmp
test
mov
shll
cli
xchg
mov
ss
jae
test
mov
lret
jg
adc
int
add
push
or
xchg
fistpl
pop
outsl
pushf
cmp
add
std
cmp
addb
add
pop
addr16
sbb
jns
test
push
xor
pop
mov
js
lret
pop
repnz
cmp
push
dec
cltd
push
pop
mov
sbb
add
mov
inc
xchg
sbb
ficoms
int3
jmp
mov
fucomi
sub
sarb
aad
xor
or
movsl
loopne
xchg
sub
loop
mov
or
push
and
enter
and
int
call
or
movsl
stos
push
out
gs
shlb
mov
ds
cmpb
pop
mov
cmp
pop
sbb
jno
lret
mov
popf
out
outsl
sub
jns
jmp
ss
rcrb
cmp
xchg
lret
adc
mov
scas
fsubs
push
jbe
das
test
test
push
mov
mov
cltd
out
out
or
xchg
cmpsb
pop
push
popf
mov
sbb
les
sbb
xchg
sub
adc
jle
fisubl
nop
inc
or
pop
in
xor
sbb
lds
xor
fs
mov
add
cmpsl
sbb
pop
or
push
insb
in
pop
cmp
cmp
add
mov
testl
aam
cmp
sbb
fwait
iret
push
and
mov
jge
mov
fnsave
adc
mov
fnstsw
or
jg
fsubs
cmpsl
roll
lret
mov
mov
scas
out
std
frstor
imul
and
mov
push
ja
dec
dec
insb
mov
pop
iret
andl
mov
mov
dec
mov
stos
lea
adc
nop
or
bound
pop
inc
dec
or
addr16
add
xchg
jmp
clc
xchg
leave
repz
lds
popa
sub
push
mov
divb
add
rcr
mov
jg
mov
add
add
movsl
pop
pop
sub
dec
xor
add
ja
rorb
lahf
loope
and
push
jae
nop
stc
push
insl
sbb
adc
addr16
push
push
mov
lods
lds
das
push
pop
inc
mov
cmp
out
add
lret
pop
xchg
ja
dec
jnp
loope
shl
xchg
push
popa
movsl
adc
push
mov
imul
mov
mov
scas
jbe
test
adc
add
xchg
call
push
cmpsl
adc
into
sub
mov
and
sub
aas
push
movsl
add
jb
cmpsb
jne
sbb
pop
pop
jbe
call
rcll
mov
pop
push
mov
adc
xor
mov
imul
cmp
adcb
mov
mov
cmp
mov
pop
mov
lods
xor
popa
int3
pusha
inc
xchg
pop
fistpll
xchg
js
loope
fs
cmp
gs
mov
xor
xor
or
pushf
in
fidivl
sub
jl
jb
xor
fmull
push
cmp
xchg
adc
mov
push
std
mov
hlt
pop
xchg
das
std
aam
into
pop
lods
addb
add
loop
lods
cmp
sub
and
cmpsb
sub
fwait
fwait
test
mov
mov
push
xchg
daa
dec
pop
pop
jo
xchg
dec
popf
mov
into
push
mov
mov
and
fimuls
push
out
movsl
jns
mulb
outsl
ljmp
cmp
arpl
std
enter
mov
pusha
xchg
sub
and
jg
push
aam
rcll
mov
push
add
mov
fidivl
pushf
pop
jmp
ret
frstor
leave
cli
cltd
cwtl
aaa
jle
pop
lcall
cmp
ret
or
cltd
xchg
hlt
jl
sbb
stos
push
xor
jbe
jmp
aas
push
pop
pop
fldenv
mov
and
fisubs
adc
add
out
ja
arpl
or
mov
scas
outsb
pop
cmp
add
jne
out
cmp
popa
leave
mov
dec
shll
pop
adc
push
jge
cld
mov
imull
push
loope
fiadds
test
movsb
sbb
dec
xor
clc
pop
inc
arpl
sub
cld
jmp
js
ja
sbb
mov
mov
sub
aad
pop
lahf
pop
repz
and
cmpsb
movl
sub
xlat
out
arpl
pop
inc
scas
xor
mov
sub
loopne
lret
pushf
mov
add
or
test
add
xor
and
jl
lret
movsb
fisubs
sbb
flds
push
mov
mov
xchg
repz
rorb
mov
in
idiv
pusha
mov
add
aam
sub
pop
mov
adc
lea
cmpl
ficomps
xor
add
jb
test
sub
ja
jnp
sub
dec
out
imul
ret
inc
ret
or
fs
mov
imul
and
xor
daa
jp
mov
or
jns
ds
cld
out
vpsubsw
leave
sub
psrad
mov
insl
pop
or
rdtsc
idivb
adc
out
sbb
lods
push
xor
mov
jp
mul
ret
and
hlt
push
pop
and
test
push
pop
mov
push
pushf
inc
aam
sbb
mov
testl
jb
int
clc
push
mov
mov
fistl
xor
in
pop
sbb
jmp
scas
sub
add
cmpsb
es
nop
std
push
sar
lds
inc
sarl
ficoml
or
adc
adcb
inc
dec
mov
outsl
das
push
dec
mov
or
bound
je
or
push
xchg
push
and
pop
cmp
aad
mov
adc
leave
addb
sub
xchg
into
popf
popa
lock
jb
pop
sub
pop
push
mov
fildll
sbb
add
push
test
jmp
sub
mov
scas
xor
out
mov
pusha
into
add
int3
in
addr16
cmc
xor
repnz
stos
leave
mov
add
stos
adc
or
scas
lret
das
insl
xor
fisttps
lcall
inc
popa
jbe
leave
test
xor
adc
xchg
jecxz
add
icebp
dec
mov
inc
xor
xor
lods
fcoml
pop
inc
cmp
push
add
push
push
pusha
jmp
or
pop
les
test
cmp
pusha
sbb
mov
ret
pop
daa
lahf
adc
mov
stc
add
dec
cli
adc
mov
inc
jp
mov
add
jecxz
imul
mov
jle
mov
mov
sti
in
mov
sbb
idivb
mov
cmc
cs
scas
ret
stos
add
adc
pusha
inc
mov
sub
dec
mov
mov
cmp
adc
dec
jns
mov
test
jne
pushf
mov
outsb
pop
sbb
fistpl
and
imul
push
mov
daa
stc
sbb
mov
es
lcall
dec
jb
lea
ret
gs
jbe
xor
or
mov
inc
cmp
int
scas
cmpsb
add
inc
mov
sarb
jne
mov
pop
xor
frstor
in
sub
or
neg
adc
cmpl
fs
addb
repnz
or
xchg
in
inc
dec
add
cmp
loope
enter
mov
cmp
xchg
add
adc
std
negb
xor
ficompl
and
xchg
jle
inc
mov
or
and
mov
and
jg
xchg
popa
jle
mov
repz
cmp
jb
add
icebp
in
xchg
mov
ret
inc
das
fsubl
aas
movsl
adc
testb
cmp
sbb
iret
out
pop
shl
mov
scas
pop
pop
add
xorl
and
mov
dec
pop
or
shrl
je
lds
jno
out
fidivs
inc
adc
cmpsl
cmpsb
sarl
or
lds
jle
adc
jnp
mov
inc
ljmp
cld
es
jp
adc
movsl
pop
xchg
lcall
inc
loop
mov
push
shlb
cmpsl
insb
lock
rorb
pop
cltd
mov
test
sub
pop
cwtl
pop
inc
push
std
out
inc
or
jns
and
inc
fstpl
sub
pop
repz
jno
inc
pop
mov
sub
lods
inc
sub
stos
mov
out
aam
fwait
jo
and
inc
mov
adc
cmp
adc
dec
adc
ds
or
inc
stos
or
jne
aaa
xor
xchg
cltd
cmp
xchg
stos
and
mov
mov
sub
and
pop
into
or
fists
xor
rcrl
mov
cmpsl
and
cmpsl
cmp
push
xor
push
scas
jae
mov
call
outsl
sbb
loopne
mov
xchg
inc
mov
cmp
or
mov
xchg
cmc
dec
test
enter
xchg
fnstenv
xor
xchg
push
jl
lods
mov
jge
and
dec
sub
or
pop
cmp
mov
ljmp
fdivrs
sti
xor
pop
in
rcrl
insl
movsb
mov
pop
inc
sbb
mov
stos
sar
jg
xchg
and
mov
pop
dec
and
int3
loopne
push
test
and
jo
out
adc
inc
outsb
add
sub
icebp
jb
xlat
jg
pop
dec
out
mov
mov
ficompl
lahf
jl
dec
sub
movl
cmpsl
or
mov
xchg
andl
mov
repnz
das
ret
inc
xchg
and
xchg
mov
mov
fs
mov
shlb
mov
aam
lds
aam
mov
in
xor
jp
jecxz
jl
adc
add
push
jnp
cli
mov
xor
lret
stc
fwait
mov
out
pop
bound
jne
std
rorl
mov
int
sub
outsl
jnp
or
xchg
iret
cmp
loope
pusha
cmp
push
mov
pop
mov
sbbl
loope
fs
adc
loopne
popl
adc
cmp
jns
mov
sub
xchg
lods
push
push
lcall
push
pop
dec
int
insb
adc
pop
inc
mov
xchg
out
lods
sub
inc
iret
imul
xor
push
sbb
int3
mov
jns
leave
dec
dec
gs
sbb
or
ret
movsl
dec
sbb
adc
mov
add
xchg
add
cmp
outsb
pop
xchg
lods
sub
scas
in
add
daa
in
ss
jno
sbbl
inc
and
in
mov
xor
sahf
loopne
adc
data16
je
add
sbb
les
or
nop
lahf
and
xor
inc
jae
faddp
push
enter
add
adc
mov
xor
jl
cmp
pop
xor
stos
stos
push
adc
aaa
les
call
outsl
cmp
stc
insl
sub
add
repnz
iret
iret
add
movq
adc
jno
fdivr
outsl
jmp
sub
mov
fistpl
iret
sbbl
dec
test
in
out
pop
xchg
pop
movsb
push
shlb
and
ss
mov
ja
add
mov
sbb
imul
inc
rolb
add
dec
xchg
sbb
loop
push
les
popf
inc
add
out
imul
jbe
jae
lahf
xchg
push
cltd
mov
xchg
jno
add
lcall
mov
test
fs
les
fimuls
jo
fcmovbe
sbb
sub
push
push
and
cmp
ret
jmp
or
mov
inc
xor
sub
cmovbe
loope
xchg
adc
push
out
add
add
fdivr
insb
repz
add
inc
mov
mov
inc
dec
pop
and
add
repz
push
mov
cmp
jmp
mov
and
data16
sbb
mov
inc
cmpsl
push
mov
xor
mov
aam
lahf
jmp
lret
inc
and
inc
sbb
push
stos
shrl
adc
or
pusha
dec
sahf
pop
popa
fmull
popa
xchg
sbb
cli
je
dec
dec
ljmp
pop
bound
out
aaa
adc
montmul
cmpsb
add
enter
or
xchg
out
std
out
bound
jge
dec
jae
xor
jb
adc
bound
int3
sbb
pusha
jne
push
rorb
or
mov
mov
pop
in
fdivp
imul
sbb
cmp
call
mov
cli
push
xchg
cli
pop
fwait
ljmp
jno
int3
add
dec
rolb
mov
sbb
push
xor
sti
cmpsl
je
xor
mov
cmp
sub
test
mov
inc
ret
and
in
mov
and
aam
stos
jp
int3
ret
std
push
mov
add
lock
and
lret
stc
jmp
jb
adc
push
mov
aad
inc
ljmp
mov
cld
fdiv
pushf
cmp
movsb
imul
leave
lahf
inc
xchg
cmp
icebp
sub
leave
fdivs
and
or
je
cmpsb
in
cmpsb
cmp
decb
jno
and
hlt
outsl
and
es
or
xchg
adc
or
ljmp
nop
shrl
imul
and
jmp
and
fnsave
or
sbb
pop
sub
cmp
cs
push
cmpsb
mov
clc
lods
pop
test
adc
cmp
loopne
hlt
add
add
and
push
lahf
mov
nop
leave
loop
mov
sbb
xchg
or
shll
dec
popf
dec
scas
adc
and
push
adc
lods
js
lods
jp
and
jo
mov
daa
xchg
mov
cmp
push
lods
cld
pop
pop
call
and
imul
dec
xchg
sub
in
jnp
push
sbb
dec
js
mov
in
or
cmpsb
sub
lahf
sbb
insl
cld
sbb
insl
loopne
mov
and
rcrl
add
adc
icebp
iret
pop
mov
loope
and
ret
lret
sub
and
sbb
dec
jbe
enter
outsb
lahf
jmp
fstps
in
dec
shr
mov
mov
push
xor
pop
dec
mov
in
lea
nop
ss
fst
dec
sbb
jmp
std
sub
push
adc
jl
push
mov
add
arpl
repz
das
adc
bound
stos
push
xor
aad
std
movsb
ds
js
clc
mov
daa
test
sti
pop
inc
jl
in
cmp
xor
mov
lret
sti
dec
pop
sbb
movsl
sbb
and
mov
pop
add
xor
rcl
adc
and
fnstcw
stc
iret
scas
jg
movsb
push
xor
fbstp
and
mov
subb
cmc
addl
pop
mov
jbe
xchg
inc
xchg
lahf
lods
push
mov
dec
loopne
sub
pop
in
push
imul
ljmp
lods
sbb
add
sub
xchg
or
cmpsl
orl
js
and
jno
fidivs
mov
test
arpl
push
mov
adc
adcl
pop
xchg
aad
ljmp
shlb
movsb
mov
push
or
cmp
cmp
call
cltd
pop
dec
adc
in
or
xchg
adc
push
and
lods
out
mov
addb
repnz
incl
daa
lods
inc
dec
cmp
ljmp
push
es
lods
popf
jmp
add
mov
js
xchg
mov
mov
js
shrl
stc
in
imul
adc
loope
cmp
imul
jmp
sub
sahf
lods
xchg
xor
lock
add
iret
push
push
loop
outsb
xlat
addr16
ret
xor
fwait
cli
mov
fs
test
fs
test
in
add
sub
adc
jl
sti
jbe
pop
lock
add
test
cmc
test
cmpsl
jl
inc
leave
inc
enter
mul
jecxz
pop
lods
pop
icebp
cwtl
repnz
xchg
mov
push
mov
out
nop
sub
loop
jmp
test
insb
pop
adc
jg
pop
xchg
xor
loope
sti
sti
in
test
push
lahf
add
jb
scas
cmpsb
push
cwtl
popa
add
in
lcall
pop
scas
dec
stos
mov
lock
sbb
sbb
adc
imul
mov
mov
int
bound
movsb
mov
lret
popf
add
adc
dec
xchg
dec
test
jne
addr16
xchg
out
fstp
sbb
inc
fs
xchg
cmp
shrb
adc
jo
and
aaa
xchg
repz
or
stos
shlb
xchg
stos
cld
mov
subl
in
stos
mov
fbld
jno
lcall
stc
in
sarl
andb
addb
dec
shrl
mov
dec
inc
rorl
push
sbb
lea
cmpsb
in
js
pop
fcmovu
add
mov
adc
popa
jmp
addr16
xchg
jno
inc
or
sahf
daa
aaa
arpl
sbb
and
fwait
jae
xchg
loopne
sbb
insb
cmc
mov
test
sahf
stos
enter
mov
repz
cmc
push
fiaddl
xor
cmp
mov
leave
xchg
les
or
stos
mov
adc
push
scas
aam
ret
sub
test
mov
into
jmp
dec
pop
or
repnz
xor
in
cmp
out
fs
xor
subb
into
fwait
hlt
leave
jp
xchg
add
outsb
sub
mov
ret
xchg
mov
dec
xchg
arpl
mov
or
or
add
inc
cmpsl
loop
sub
insl
ja
xchg
mov
subb
cmp
test
out
sbb
pop
outsb
test
mov
push
pop
leave
decb
adc
scas
mov
imulb
xchg
sahf
out
dec
icebp
xchg
xor
inc
popf
pop
in
pop
out
adc
or
add
mov
shll
inc
outsb
sbb
outsb
jo
in
jno
out
adc
fidivl
jmp
cltd
jge
jbe
mov
iret
dec
xadd
adc
lcall
aaa
adc
push
sbb
mov
cli
out
dec
shrl
push
stos
loope
mov
or
mov
dec
cmc
lods
pop
and
cmpsb
mov
das
dec
xor
add
xlat
and
stos
or
mov
add
stos
inc
fdivs
push
jl
movb
cli
pop
and
mov
dec
jp
xor
movsl
pop
jbe
sbb
xchg
cli
xchg
sub
jae
push
imul
idivb
jge
pusha
sahf
cli
push
or
sbb
loopne
or
fsubl
pop
addb
stc
bound
jp
lret
test
cmp
test
cmp
push
lock
out
cmp
addr16
or
stos
sahf
fwait
shl
popf
pop
mov
cmp
inc
fwait
push
cld
loope
movsl
popf
pop
push
xchg
mov
mov
leave
gs
pop
popf
and
popf
pop
jnp
pusha
pop
sub
fcoml
and
mov
loope
hlt
and
mov
sub
cli
lahf
sbb
test
and
xlat
jns
je
mov
out
scas
xor
pop
jo
ficoml
stos
push
mov
test
push
mov
push
push
stc
pop
and
mov
inc
sarb
jl
dec
inc
xchg
lahf
lock
jg
loopne
hlt
xchg
fists
or
int
cli
xchg
mov
fistps
outsb
loop
in
or
cmp
jbe
mov
ds
jmp
imul
mov
popf
fdivrs
rcll
cmc
bound
sub
mov
shrb
sub
jge
and
sub
shlb
sbb
data16
rcr
mov
push
fs
gs
jb
sub
sahf
js
pop
stc
xchg
push
mov
add
aam
out
loope
sbb
sbb
hlt
push
inc
jnp
adc
jns
call
addr16
dec
jo
sub
out
xor
xor
icebp
push
inc
inc
and
fisttps
fistl
addb
imull
mov
in
push
and
xor
push
dec
lret
or
or
int3
jle
dec
pop
pop
mov
sbb
mov
mov
testl
mov
mov
xor
or
movsl
addr16
jne
movsb
addr16
insl
mov
mov
mov
add
lods
and
mov
imul
cmp
inc
pop
data16
sbb
mov
jne
addb
jne
or
inc
xor
iret
sbb
std
adc
jae
dec
inc
sahf
add
mov
cmp
imul
and
add
dec
sbbl
or
cmp
and
lock
test
pop
mov
push
mov
je
cld
in
les
gs
ret
nop
push
cmp
sbb
cmp
push
pusha
ss
or
sbb
xchg
mov
cmp
repz
mov
add
xchg
mov
sub
dec
lods
fwait
push
inc
clc
lock
lock
mov
repnz
sub
jbe
mov
and
in
dec
push
adcb
sbb
in
imul
imul
mov
das
adc
or
out
sub
test
jg
sub
jmp
out
mov
insl
movsl
notb
add
mov
stos
jge
jo
inc
mov
xchg
rolb
xor
fs
sbb
ja
test
cltd
xor
xlat
push
les
dec
fidivs
mov
mov
adc
mov
lcall
sub
shrb
push
push
fs
xlat
cld
dec
dec
icebp
xchg
mov
lock
jmp
scas
push
pop
mov
mov
push
dec
dec
dec
xor
pop
pop
or
sbb
stos
movsb
fsubp
mov
std
jmp
iret
xchg
jecxz
push
mov
repz
ja
and
add
pcmpgtb
push
hlt
test
or
es
sar
sti
sahf
inc
push
and
stos
jne
out
je
sbb
rolb
out
flds
fidivrs
rolb
pop
sarb
iret
hlt
sahf
or
cmpsb
xchg
cmpsl
in
jo
mov
rolb
clc
or
inc
jae
xchg
jns
outsl
dec
fisubs
gs
mov
sahf
mov
scas
aas
or
jmp
lods
arpl
inc
push
pusha
xor
adcl
rol
out
mov
mov
sarb
fdivrs
mov
ret
outsl
inc
fstps
xor
inc
aam
outsl
outsb
gs
outsb
lea
shrl
inc
jb
fidivrl
ror
or
cmc
push
aaa
inc
lret
push
sbb
adc
test
pop
aaa
lods
out
jecxz,pn
pop
inc
gs
dec
xchg
cwtl
xlat
pop
push
pusha
xchg
xlat
cmp
scas
popa
xor
lock
and
mov
inc
sarb
sub
jmp
cmpsl
mov
or
sarl
notl
xor
push
fwait
cmp
scas
adc
fistl
and
js
fdivrs
mov
jl
lods
hlt
and
mov
add
jp
lods
ss
in
mov
or
lahf
movsl
movsb
jne
mov
add
in
inc
andl
pop
je
ljmp
mov
mov
ret
and
sub
xchg
mov
cltd
mov
dec
test
sub
lahf
aaa
mov
dec
and
mov
sub
loopne
popa
jbe
push
mov
mov
outsb
push
test
jb
add
ret
or
add
jo
add
adc
xchg
sbb
mov
pop
xchg
es
dec
arpl
cmp
lock
scas
jb
lret
aas
pop
xorb
shl
sub
cmp
in
movsl
pop
sti
dec
jecxz
repz
inc
jp
aad
ret
sbb
out
mov
and
add
sbb
imul
cli
aaa
dec
out
ret
test
loopne
popa
insb
addr16
test
ret
lcall
push
xor
cmp
jge
xor
pusha
dec
mov
push
into
xchg
popf
mov
xchg
adc
iret
xor
adc
fstpl
dec
or
imul
ret
xchg
out
dec
sbb
push
and
mov
cmp
sub
enter
push
mov
mov
jge
cmp
and
push
sarl
inc
xchg
icebp
cmc
cmpsl
sar
dec
out
test
test
loopne
adc
jmp
xor
mov
shrb
addb
repnz
xor
lds
fwait
cwtl
hlt
stc
test
jne
jmp
jp
mov
cmpsl
mov
mov
mov
sub
inc
fnstenvs
sbb
jle
insb
push
stos
and
fldl2t
cmp
add
enter
out
mov
mov
jp
mov
test
xchg
and
cltd
mov
test
xlat
jp
dec
jp
jg
sub
rolb
cmpsl
addr16
in
pop
repz
adc
cmp
push
mov
icebp
push
adc
je
xchg
aad
rolb
cld
mov
fimull
rorb
sub
scas
xorl
data16
and
mov
shll
push
or
aas
mov
ja
push
clc
push
push
add
cmp
push
lret
pop
out
sub
sahf
in
adc
shl
rorl
addl
pop
inc
mov
mov
fisubs
loop
into
push
arpl
lcall
fmul
out
or
mov
xor
scas
push
lret
xor
jp
aam
sub
cli
cs
in
inc
xor
push
in
pop
dec
jae
pop
mov
mov
xor
repz
lret
dec
add
scas
mov
ret
pop
lods
pushf
xor
sbb
and
push
cmp
mov
jns
jle
sbb
mov
sbb
stos
into
sbb
pop
dec
and
mov
push
mov
push
cmp
push
test
push
inc
dec
mov
jno
adc
xor
and
js
adc
aam
outsb
lods
pop
jmp
xor
dec
into
mov
inc
movsb
fsubrl
ror
add
jl
mov
push
inc
imul
jp
and
fcomps
mov
arpl
repz
jl
mov
sahf
dec
sbb
fst
push
xor
xchg
out
jae
push
mov
xorl
inc
aam
mov
ret
mov
add
push
hlt
inc
fsts
movsl
sbb
mov
xor
adc
rorl
mov
je
add
hlt
cmp
repz
inc
lret
movsb
add
inc
inc
daa
and
adc
pop
push
and
jecxz
loope
subl
stos
mov
rcrl
icebp
test
pop
add
aad
adc
lds
test
inc
sub
push
and
pop
jo
jge
or
fs
mov
scas
or
and
shl
mov
clc
mov
inc
fwait
daa
jo
cmc
rolb
aaa
inc
xchg
arpl
mov
xor
inc
div
leave
cmp
xchg
pop
leave
movsb
scas
or
aaa
in
in
sub
inc
and
xor
popl
fisttps
ucomiss
sub
lret
xchg
ja
xor
or
push
mov
xchg
loope
pop
rcr
les
jo
arpl
push
or
fbstp
push
mov
xchg
lods
popf
cwtl
repz
loopne
sbb
loope
imul
outsl
pop
mov
dec
fwait
adc
cmpsl
rorb
loop
scas
in
sub
xchg
and
mov
push
mov
je
and
aad
mov
and
mov
and
pop
int3
into
push
cltd
mov
test
bound
pop
lods
repz
orb
je
data16
mov
lahf
ljmp
jne
int3
xchg
fldt
jae
dec
jbe
sbb
xor
xchg
rcll
jb
scas
cmc
cli
push
fimuls
iret
int3
and
int3
push
test
push
inc
add
ja
add
xchg
nop
jae
jl
lret
adc
imul
jg
cmp
mov
out
loopne
je
and
mov
pop
xor
push
pop
in
and
xlat
cmp
mov
out
jne
lret
jbe,pt
inc
cmp
gs
xor
ret
adc
test
sti
mov
sti
jb
mov
adc
aam
lcall
loopne
pop
out
sbb
and
mov
push
inc
pop
into
aas
cmp
xchg
nop
jne
push
test
sbb
popf
sbb
hlt
mov
mov
cli
pop
add
sbb
and
mov
push
mov
push
or
pop
xchg
test
mov
notl
mov
sti
mov
hlt
repnz
mov
mov
stos
mov
into
fwait
jl
xchg
cmp
push
pop
cmp
es
dec
push
pop
inc
shrl
fwait
push
mov
inc
aas
mov
jnp
sub
dec
insl
data16
lcall
sti
jmp
cmc
inc
xchg
or
jge
jg
fstps
cmp
push
xor
mov
stc
add
in
ljmp
xor
push
movsl
add
and
stc
sbb
and
adc
push
cmp
push
adc
and
fsubr
dec
fisttpll
add
daa
sbb
push
stos
leave
cmp
mov
mov
push
clc
outsl
dec
or
lds
mov
into
sbb
xchg
jmp
out
gs
sahf
dec
cld
mov
push
movl
add
pop
mov
mov
adc
push
sti
fwait
xchg
scas
sub
jae
jno
pop
jae
mov
aam
jns
jl
sbb
enter
ds
js
cmp
and
pop
dec
mov
faddl
sbb
inc
push
pop
test
cmp
cwtl
stos
ret
or
cmc
roll
jmp
and
idivl
sbb
push
es
lods
popl
mov
inc
pop
sarb
mov
sti
xor
out
xor
ljmp
push
in
push
int
lret
pusha
test
mov
dec
filds
and
and
ffreep
add
sar
js
popf
push
stos
bound
dec
pop
loope
nop
inc
jno
aad
sarb
jns
and
scas
mov
push
aad
js
stos
cmp
xor
mov
rolb
movsl
xchg
and
notb
cltd
or
int
cmp
mov
mov
mov
daa
pop
mov
int3
add
or
dec
cwtl
jb
sti
aaa
pop
ficoml
mov
jl
and
jp
ficoml
fcom
sbb
dec
out
xchg
shr
or
rcrl
imul
jge
pop
cmp
mov
pop
mov
fmuls
test
fdivs
adc
sti
dec
xchg
ror
sub
pusha
mov
lahf
gs
xor
iret
jo
popf
and
shll
fsubp
js
in
ljmp
add
sbb
mov
cmp
mov
mov
jecxz
out
mov
jne
jae
sti
inc
cmp
stc
jnp
xor
push
mov
ror
popa
out
push
repnz
in
js
addr16
fbld
mov
lock
sbb
dec
pop
cmp
sahf
in
test
inc
mov
dec
cs
lret
pmulhuw
xchg
pop
jmp
clc
ljmp
jge
sub
jno
dec
xor
shrb
push
inc
mov
int3
sub
dec
js
jb
or
xor
jno
sbb
push
dec
mov
fstl
sbb
adc
push
xchg
add
lahf
push
and
cld
xchg
sbb
out
xor
dec
std
adc
daa
adc
ss
jb
movsl
lret
xchg
or
mov
mov
mov
pop
add
mov
or
cmc
ja
mov
inc
jo
aad
xchg
icebp
ja
popf
pop
out
mov
mov
jmp
xor
cmp
mov
xor
call
xchg
dec
arpl
out
sbb
jo
and
out
mov
loope
fstl
adc
test
cld
dec
inc
xchg
adc
mov
pop
das
xchg
xor
sub
mov
or
pop
and
and
cmp
xchg
pushf
les
dec
or
fnstcw
les
mov
dec
out
add
sbb
jg
lret
jge
movsb
scas
dec
fdiv
aam
out
xor
cli
into
jge
sbb
inc
jbe
inc
xchg
repz
sbb
fwait
or
mov
push
pop
xor
inc
rep
pop
mov
aad
lea
arpl
fcmovbe
loope
sub
aad
leave
mov
adc
xchg
repnz
xchg
sbbb
mov
fyl2xp1
mov
mov
inc
gs
aaa
je
push
sub
daa
cs
pusha
fiadds
adc
fisubrl
insl
xchg
out
mov
fisubs
mov
std
xchg
out
mov
clc
mov
xchg
mov
xor
movb
xchg
rcrl
int
scas
dec
dec
sbb
push
xor
dec
or
or
repnz
pop
sahf
cmp
jge
and
dec
fsts
or
push
and
cltd
add
fadd
das
sub
pop
frstor
int3
pop
push
cmpsl
out
xor
sahf
pop
pop
pop
push
or
movsb
out
mov
rolb
cld
sbb
mov
mov
pop
lcall
sarl
xchg
popf
enter
jne
icebp
jnp
pusha
movsl
ficompl
mov
sub
inc
lods
or
mov
xor
push
mov
and
push
out
jl
call
rol
add
bound
cltd
push
xchg
xor
push
pop
int3
mov
shll
and
jmp
bound
or
add
mov
mov
lods
aam
fstps
dec
inc
cltd
xchg
jae
xor
inc
popf
xlat
jecxz
mov
sbb
xchg
sbb
mov
test
jge
mov
inc
cli
leave
or
push
cli
rorb
jns
jbe
and
mov
mov
repnz
xchg
fs
jnp
aaa
add
loop
int3
add
shlb
negl
shll
loopne
mov
fwait
ret
rorl
fldl2t
xchg
and
rcrb
push
sub
mov
xchg
es
xor
and
jbe
xchg
sbb
xor
jecxz
inc
push
repz
mov
call
add
sub
int
in
out
pop
fwait
cmpsl
cmc
in
mov
mov
sub
out
outsl
dec
push
xor
mov
mov
arpl
add
loopne
push
ret
or
ss
arpl
xchg
in
add
jge
or
jge
cmp
cmpsl
jle
orb
call
pop
jl
xchg
gs
sti
inc
movsb
rolb
fistps
imul
mov
out
movsb
movb
pop
mov
repz
imul
xor
addr16
jnp
dec
and
jno
jle
ljmp
addr16
hlt
subb
xor
mov
mov
mov
arpl
dec
and
movsb
out
ljmp
xchg
lock
inc
mov
dec
outsb
ljmp
popa
mov
pop
jl
test
cmp
jmp
fwait
cmp
aad
push
push
repz
inc
pop
js
sti
icebp
sbb
mov
test
mov
or
push
sbb
dec
inc
pop
lock
jmp
enter
into
fisttps
sahf
pop
sub
inc
cmpsl
rolb
inc
data16
sub
xchg
cmpl
inc
cmp
mov
mov
addl
xlat
push
pop
and
xor
xchg
fcmovbe
hlt
dec
inc
js
std
mov
sub
data16
push
sub
js
xchg
mov
jle
mov
cmp
and
cmp
and
cmp
push
pop
sbb
insb
fdivrs
fwait
aam
adc
movsb
xchg
cmp
or
mov
enter
cmp
sahf
jnp
or
adc
push
cld
pop
push
mov
sbbl
xlat
dec
xor
or
mov
icebp
mov
xchg
fisttps
inc
pop
in
loop
ljmp
xchg
sahf
xor
insb
xlat
xchg
int3
jp
sbb
shlb
aaa
inc
jo
mov
jne
dec
xchg
shl
ja
movsl
mov
xchg
xchg
imul
push
dec
lcall
repnz
mov
mov
clc
or
cmpsl
lds
xor
aam
subb
insl
push
inc
insl
xchg
mov
addr16
mov
in
or
ret
sub
cwtl
lcall
push
repnz
sbb
sbb
dec
jecxz
jecxz
cmp
enter
mov
sbb
in
lea
or
sub
push
adc
mov
xor
jbe
ret
into
cmpsl
movsl
shrl
test
or
insb
push
adc
xchg
inc
jnp
sbb
in
push
dec
inc
and
inc
cmpb
mov
imul
xchg
cmp
adc
icebp
cmp
imul
inc
movsl
add
xor
jge
cmp
movsb
sub
or
or
bound
sub
aam
sub
test
xchg
addr16
cld
push
xchg
lret
sbb
mull
pop
outsb
movsl
cmpl
push
sub
or
imul
fmuls
pusha
clc
cmp
int3
test
fadds
clc
push
push
test
dec
xor
xchg
leave
hlt
pop
pop
dec
xlat
adc
ja
pop
pop
fnstcw
add
test
push
add
xchg
and
into
jecxz
cwtl
rcrl
lahf
stc
inc
pop
mov
jno
jg
fbstp
pop
jno
ljmp
movsl
mov
and
ror
stc
add
setb
push
fildll
sbb
insl
bound
sub
ds
push
mov
or
popa
ljmp
mov
pop
xor
loopne
mov
push
lahf
cmp
mov
mov
aas
cmp
push
pushf
decl
sub
adc
jp
xor
out
fdivs
add
xor
jl
push
in
mov
pop
in
aas
jmp
xor
or
cwtl
cmp
in
aam
cmp
dec
das
sbb
int3
cmp
arpl
xchg
xchg
pop
pop
data16
xor
aad
test
adc
xchg
or
xorb
movsb
cmpsb
or
test
lds
fisttps
ljmp
jnp
inc
shlb
fwait
xchg
inc
mov
dec
mov
jge
lods
and
xchg
pop
es
inc
dec
push
pop
imul
mov
mov
arpl
test
dec
stos
enter
and
sub
in
mov
rolb
out
jmp
aam
jno
push
sub
mov
cmc
xchg
mov
outsb
icebp
sub
nop
adc
mov
sbb
ret
dec
mov
icebp
jns
jge
xchg
cld
cmp
adc
ds
jns
push
inc
mov
pop
imul
nop
add
inc
fs
mov
jns
inc
push
es
pop
mov
xor
or
xchg
pop
cmpsb
js
mov
jns
add
popa
sub
popa
stos
pop
pop
js
dec
push
idivb
xor
mov
push
test
push
dec
subl
push
adc
mov
out
jp
out
and
insl
mov
sub
or
push
jno
and
mov
inc
ret
sbb
ljmp
mov
mov
or
or
mov
mov
inc
pop
daa
jmp
jnp
int3
mov
fstl
push
mov
lods
ss
loopne
pop
pop
xchg
fsub
jge
sub
adc
rcr
iret
cmpsl
insl
jle
std
xchg
xlat
ret
mov
rclb
push
in
mov
mov
xchg
cmp
faddp
dec
dec
sbb
or
cwtl
xor
popf
sbb
arpl
in
push
in
ja
xchg
insl
and
xor
push
and
std
movsb
ljmp
int3
lock
int
inc
mov
pop
mov
test
lods
or
std
test
inc
xchg
mov
push
dec
movsl
xor
js
subl
sub
popl
lods
leave
loop
cmp
cs
js
add
push
xchg
and
lods
mov
jle
xchg
mov
dec
sbb
dec
xchg
jne
jmp
sti
pushf
sahf
dec
insl
gs
adc
scas
ret
dec
sbb
ret
fcoml
inc
push
cmp
nop
inc
mov
repz
or
iret
xchg
stc
and
test
cmp
sub
inc
pop
push
outsb
or
cmp
inc
mov
je
push
xchg
mov
lret
iret
das
jo,pt
rclb
cwtl
test
cmp
ret
push
aas
jle
fildl
sub
inc
call
out
test
inc
rcrb
ret
sbb
sub
aaa
jns
lock
mov
add
fldl
xchg
pop
divl
inc
sbb
pushf
push
mov
xor
or
push
std
lock
fbstp
mov
es
cmp
inc
add
xchg
pop
test
xchg
out
int
dec
add
mov
mov
cmp
add
ret
dec
scas
arpl
int3
xor
add
in
icebp
mov
add
sub
roll
je
jo
pop
mov
aam
stos
mov
adc
push
and
add
rcl
ljmp
insb
in
pop
add
push
lds
cmp
cmpsl
rep
mov
je
fisttpll
or
push
pop
jmp
rcll
inc
pushf
push
pop
cs
int
adc
out
push
in
sahf
js
jg
xorl
jae
pop
mov
mov
hlt
clc
inc
lods
pushf
sub
pop
jae
in
mov
xor
popf
rcrl
lods
mov
xchg
and
in
adc
cld
jbe
push
in
gs
mov
pop
nop
xor
inc
xor
scas
and
ret
pop
inc
mov
fdivl
push
xchg
inc
mov
cmp
and
scas
pop
rcl
mov
and
cwtl
cmp
xchg
loopne
push
xor
loope
int
and
dec
xchg
pushf
loopne
cmp
in
inc
nop
inc
add
mov
stos
mov
jne
pop
mov
clc
data16
mov
add
in
cmc
pop
pop
ror
xlat
ljmp
xor
scas
repz
sbb
aad
jl
and
inc
movsb
dec
stos
and
shlb
push
lea
inc
std
mov
sbb
cmp
sti
lahf
mov
lret
and
jnp
outsl
xor
clc
cmp
adc
fnsave
lea
out
sub
xor
or
fdiv
jb
mov
outsl
fnstenv
pop
out
addr16
ficoml
ja
dec
push
pop
bound
push
cmp
rcr
test
mov
inc
jl
sbb
cmpb
mov
ret
lahf
cmp
icebp
stos
lock
or
lret
jne
cmc
fbstp
jmp
add
in
stos
xchg
imull
jle
push
loopne
cmc
sub
xchg
pop
mov
dec
pusha
xchg
fistpll
cmpsb
xor
in
xchg
or
sbb
pushf
or
sbb
sbb
push
xor
adc
push
jge
bnd
out
mov
or
jmp
imul
inc
jnp
in
adc
stos
rcrb
je
push
mov
adc
scas
jg
out
out
add
push
adc
mov
sub
add
fbld
loope
mov
lret
sub
cld
cli
rcrb
sub
inc
adc
pop
xchg
mov
cmp
sti
dec
nop
pop
dec
xlat
ss
lods
sub
xor
sub
in
fs
mov
sbb
mov
push
stos
out
dec
scas
fs
mov
adc
stc
xor
pop
inc
dec
gs
jmp
mov
mov
mov
jae
adc
arpl
lods
fistps
arpl
int3
repnz
sbb
xchg
jno
mov
mov
pushf
aas
cmp
jae
push
stos
rcrl
sti
sub
jg
mov
adc
das
dec
sbb
es
jge
pop
rolb
mov
notl
cmc
mov
bound
inc
jl
popa
jg
xchg
add
mov
lcall
aas
int3
mov
fadd
sbb
mov
dec
outsl
xchg
addr16
xchg
mov
jmp
mov
push
xor
jle
mov
rcrl
and
mov
mov
fcoml
mov
mov
lret
movsl
fs
sbb
shrb
xorb
sbb
pop
shlb
mov
lahf
inc
fxch
inc
mov
add
sub
jg
push
inc
push
imul
xchg
adc
add
mov
mov
pop
loopne
add
clc
and
js
test
mov
sbb
and
xchg
add
dec
fstpl
aaa
repz
cs
pop
push
imul
iret
mov
cmp
push
enter
sbb
das
xor
jns
mov
mov
lret
insl
add
pop
sbb
cld
ds
incb
sti
je
and
inc
pop
jb
inc
add
or
xchg
clc
scas
cmp
data16
repnz
xchg
mov
insl
and
test
stos
dec
ffreep
cmpb
sbb
push
push
inc
mov
divb
adc
nop
inc
cwtl
imul
cmp
subb
adc
lahf
lock
mov
popa
subl
mov
imul
jns
fsubrl
arpl
add
lret
imulb
test
lret
add
arpl
mov
push
and
and
decl
pop
sub
int
loop
cmpb
inc
cltd
dec
jns
lods
pop
pop
jae
xchg
fs
mov
inc
ficoml
in
pop
sahf
les
insb
jno
test
xor
push
cmpsl
call
mov
xchg
push
imul
xor
or
adc
jmp
push
outsl
xchg
es
push
adc
jle
jnp
dec
jge
sub
sti
loope
lret
test
jl
subb
add
dec
std
sub
mov
push
jle
cmp
in
int3
dec
mov
jb
rcrb
sbb
lods
stos
push
or
add
inc
xchg
repnz
add
sub
loopne
mov
push
pop
mov
in
pop
sbb
add
mov
pusha
jl,pn
xchg
dec
out
pushl
pop
ljmp
inc
out
or
imul
xchg
cmpsb
xor
cmpsl
mov
in
sub
mov
adc
insl
in
pop
les
inc
repz
loop
or
popa
cmp
xor
lods
lcall
and
add
and
jmp
cmp
mov
add
push
adc
imul
push
insl
orl
es
push
add
dec
fdivrs
cmp
in
test
test
xchg
clc
out
mov
cmp
mov
roll
pushf
jae
pop
push
insl
or
or
negl
jg
dec
mov
cmpsl
mov
jno
inc
add
dec
loopne
enter
mov
mov
jmp
and
sub
rclb
popa
insb
rol
popf
push
cmpl
mov
mov
and
dec
pop
add
jae
or
xchg
dec
ss
in
movsb
mov
iret
addr16
cmc
repnz
call
fs
jp
mov
xor
add
sub
mov
ret
inc
stc
push
fsubrl
std
adc
inc
mov
pop
cmp
sub
dec
ret
lods
jecxz
inc
adc
sub
shlb
xor
sbb
mov
loop
mov
cmp
in
mov
lods
std
movsb
inc
sti
sbb
cwtl
and
push
mov
mov
ljmp
out
mov
leave
sub
push
mov
loop
std
xlat
mov
sub
sbb
add
jne
pop
pop
je
adc
jne
ror
inc
sarl
jbe
shll
scas
gs
repz
addr16
adc
cmp
xor
cltd
loopne
dec
leave
push
dec
push
xor
xor
mov
test
mov
insb
dec
int
cmp
lret
mov
mov
sbb
sub
data16
and
sub
jle
adc
cs
xor
push
jge
jae
repnz
lea
inc
out
daa
jecxz
stc
repz
push
ret
scas
sub
out
inc
pop
scas
pop
outsb
mov
sub
repz
pop
scas
cli
push
arpl
dec
dec
jle
out
mov
pop
push
dec
dec
cmp
inc
cmp
xchg
or
shrb
jge
scas
pop
cs
push
jp
scas
mov
jb
xchg
jl
pop
enter
push
ja
imul
mov
shrb
mov
repnz
cmpb
pop
aam
fcoml
arpl
sub
int
je
sbb
fstpl
xchg
or
les
imul
pop
jmp
jecxz
iret
pop
lods
inc
test
mov
iret
mov
mov
mov
cmp
test
sahf
popf
rcll
int
dec
lds
jnp
cmp
mov
xchg
xchg
pop
sahf
jae
loope
cmp
imul
push
xchg
sahf
mov
pop
insb
loopne
mov
ds
loopne
and
push
pop
imul
cwtl
ds
jge
loopne
nop
cmp
daa
push
mov
adc
jmp
stc
sbb
test
jno
ljmp
fldln2
push
jle
sub
ja
mov
jp
pop
repz
std
dec
sub
or
pop
sbb
xor
or
iret
xor
enter
jmp
addl
gs
mov
jecxz
cmc
loop
mov
jecxz
iret
cwtl
clc
dec
jl
or
and
push
pop
sbb
std
xor
push
jb
mov
or
xchg
or
nop
notl
cmpsb
addr16
in
inc
repnz
iret
int
rcrl
push
and
ret
movb
or
in
add
outsl
popa
stos
shr
in
gs
sbb
jnp
ret
adc
enter
cmp
mov
xor
xor
int
adc
push
sbb
pusha
testb
pop
xchg
lahf
lods
cli
jge,pt
mov
insb
jcxz
in
push
inc
mov
or
lcall
ljmp
or
push
repz
pusha
adc
pop
adc
pop
stos
pop
jp
xor
xchg
jnp
mov
and
cli
fidivl
movsl
cli
or
pushf
pop
dec
das
push
cmp
adc
and
bound
mov
fbld
xor
push
sub
or
hlt
pusha
out
jecxz
mov
jbe
add
mul
in
add
xchg
out
call
cltd
fbstp
push
xchg
xchg
fcomps
sbb
cs
stc
jg
cmp
test
and
test
cmpsl
push
pop
adcl
add
mov
test
sti
jbe
add
adc
add
dec
imul
clc
jnp
pop
push
push
es
jmp
inc
cmpsl
sub
add
pop
cs
jae
dec
scas
inc
mov
test
rorl
adc
into
sbb
cmp
mov
movsb
inc
nop
lret
jb
xchg
dec
inc
rcr
push
and
mov
stos
lock
adc
lcall
std
push
mov
mov
push
add
adc
or
outsb
inc
jecxz
in
imul
mov
adc
fcomps
dec
ds
mov
aas
aas
icebp
lods
push
push
fsubrs
adc
push
imul
sahf
inc
add
push
mov
cld
repnz
cmp
scas
pushf
jmp
adc
add
lea
into
jne
fistps
jbe
push
cs
push
out
aas
mov
add
arpl
das
sbb
aam
sbb
push
mov
push
mov
xlat
mov
jp
test
and
insl
fs
jae
jle
cmpsb
sbb
ret
jmp
mov
ret
mov
cwtl
nop
out
xchg
add
mov
xor
jecxz
rcr
lcall
mov
pop
outsl
fsubr
ret
fbstp
in
jb
or
repnz
sbb
call
add
inc
stos
dec
dec
xchg
and
sub
jns
xchg
mov
mov
fistl
fnstenv
mov
lret
stos
jae
test
dec
scas
negl
xor
in
js
jle
aas
fistpll
test
jmp
fsubrs
in
add
repz
push
fldenv
pop
leave
push
inc
repz
in
dec
mov
inc
or
xor
sbb
lods
jecxz
out
fcomps
xor
jge
testl
les
pcmpeqd
out
mov
sbb
stos
inc
push
shrl
push
jp
call
mov
jo
test
mov
sbb
test
xor
inc
mov
nop
push
ss
dec
push
popl
push
rcr
add
fs
das
inc
dec
loop
jne
xor
mov
das
scas
adc
sub
jp
sub
sbb
sub
aas
sub
cmpl
push
jg
test
sbb
xchg
cld
sub
insl
jge
fadds
stc
push
inc
addr16
faddp
sub
lahf
arpl
mov
lahf
popw
pop
cmp
ljmp
movsl
and
push
mov
mov
imul
push
lcall
mov
mov
je
outsb
mov
mov
sbb
jb
aam
cmp
sbb
in
cmp
das
xchg
lods
adc
push
and
mov
push
xchg
stos
fstps
jns
out
pop
fcoms
sub
xchg
and
fwait
mov
in
mov
aam
inc
sub
ret
in
repz
pop
add
stos
int
pusha
adc
loopne
add
fcmovne
in
mov
xchg
stos
and
mov
push
sub
rcrb
addr16
cmp
aad
aam
sti
mov
or
add
dec
and
cmpb
aas
or
jge
cwtl
fcoml
lcall
mov
mov
sub
cmp
push
pop
jbe
xor
aas
and
in
mov
push
call
out
mov
dec
test
stos
mov
test
xchg
push
ljmp
or
mov
outsb
stc
loope
inc
mov
sub
imul
and
jl
push
mov
das
cmp
push
add
pop
cli
sarb
mov
pop
cmc
dec
ret
push
daa
sbb
mov
je
jae
ja
test
stos
enter
sbb
ljmp
popa
xchg
push
mov
jns
dec
mov
cmp
addr16
pop
mov
and
cmp
push
popa
scas
or
ljmp
mov
outsb
jbe
xor
xchg
push
cmpsb
sahf
movsl
movsb
jo
xchg
sarb
push
push
add
mov
pop
aam
gs
fidivl
xor
cmp
cmpsb
dec
cld
jno
inc
lock
push
sarl
jbe
mov
cmp
imul
cmp
and
xor
stos
addb
cmc
xor
xchg
loop
mov
jecxz
xor
rolb
stos
adc
mov
mov
cmc
and
fldenv
dec
xor
movsl
lea
or
lcall
test
adc
stc
pop
inc
es
dec
mov
and
call
sub
cmp
push
or
or
pop
xor
xor
pop
sti
jle
test
jae
pop
xchg
stc
mov
lods
daa
inc
cmp
and
pop
mov
idivl
sub
gs
jns
xor
cli
stos
mov
mov
mov
les
cmp
in
in
mov
imul
nop
push
pop
icebp
sub
pop
popa
iret
sti
xor
jne
cmpsb
or
scas
jno
and
xor
loope
iret
test
sahf
xor
fildl
cmp
imul
dec
inc
adc
mov
cmpsb
data16
pop
push
sub
dec
fsubp
shll
sub
es
cld
fs
xlat
xchg
into
dec
pusha
or
movl
xchg
nop
mov
add
loopne
fs
mov
sti
and
cmpsl
repz
push
pop
das
inc
cmp
sub
xchg
add
xor
stos
inc
push
pop
clc
pop
ss
inc
cmp
incb
sbb
push
clc
or
aaa
and
in
jno
sbb
repz
mov
mov
mov
lahf
out
movsl
mov
mov
cltd
xor
xchg
push
jmp
sahf
frstor
mov
pop
mov
andb
fwait
xchg
or
fisubl
lahf
or
push
pop
int
cs
add
push
pop
loop
mov
pop
repz
loope
sub
cmc
pop
pop
add
jle
es
ja
ss
mov
lea
add
and
stos
pop
xchg
arpl
push
push
shrd
mov
scas
pop
leave
adc
and
pop
xor
std
mov
sub
imul
hlt
icebp
mov
inc
enter
jne
lret
add
xchg
jl
jg
or
push
xor
test
out
ljmp
andb
mov
test
sub
adc
pusha
xor
xor
inc
aad
mov
sahf
cmc
outsb
xchg
dec
xchg
xchg
add
push
push
aas
dec
pop
jae
mov
xchg
fucomi
jae
jmp
lds
nop
subl
xchg
enter
lcall
mov
dec
lea
xor
mov
inc
sahf
aad
rcrb
push
push
je
lret
jmp
in
add
pop
jb
ja
fildll
ds
xchg
dec
bound
mov
dec
xchg
dec
and
ficomps
jmp
mov
jb
lcall
fs
scas
pop
push
or
sub
xor
test
and
je
mov
sbb
repnz
enter
add
inc
adc
das
xlat
cmp
jnp
imul
push
mov
jno
cmp
push
lds
pop
inc
pop
insb
cmp
mov
scas
sarl
imul
mov
je
or
fwait
sub
es
bound
into
les
pop
dec
insl
mov
repz
insl
jo
lds
lahf
xchg
lds
ficompl
sbbl
scas
stc
add
or
mov
cmpsb
inc
popf
dec
out
cmpsb
and
sbb
push
cmp
jne
mov
adc
mov
jns
hlt
int
xchg
call
test
mov
inc
inc
cmp
and
and
mov
scas
ds
call
inc
push
cmp
int3
insb
mov
inc
and
lret
fildll
in
daa
inc
mov
pop
addr16
sub
mov
into
pop
dec
mov
das
icebp
jns
dec
rorb
mov
paddd
mov
adc
sub
rorb
jp
stc
add
lret
out
push
jo
or
test
bound
sarl
mov
jecxz
sub
sbb
or
cmpsl
pop
or
push
aam
loopne
pop
cltd
cs
scas
or
mov
iret
popf
or
push
fs
sbb
xchg
repnz
pop
push
cmp
and
jb
add
test
mov
push
sub
dec
mov
xor
xchg
lock
and
cmpsl
js
mov
test
push
fs
lock
push
cmp
or
outsb
lahf
cmp
lahf
lret
lods
xor
out
ds
fwait
push
pop
dec
out
fstps
outsb
jo
xor
cmp
mov
mov
inc
mov
in
cld
ret
cmp
push
pusha
mov
cwtl
mov
add
push
lods
fists
cmp
add
and
and
fcoml
push
xchg
jp
lret
mov
add
pop
outsb
xchg
dec
fdivl
pop
ja
leave
xchg
mov
dec
mov
in
iret
ja
lahf
aaa
int3
loopne
push
mov
cmp
shlb
push
mov
xlat
jae
ror
jle
xchg
fwait
ja
mov
fs
leave
les
inc
lret
cs
push
dec
or
cltd
mov
int3
sbb
mov
jecxz
dec
xchg
jle
sub
cmp
and
xchg
and
lods
fcoms
dec
clc
push
pusha
cmp
cli
and
jmp
mov
movsb
mov
add
push
cs
xor
mov
pop
xlat
and
pop
js
dec
lods
loope
gs
enter
das
inc
fildll
loopne
xor
or
ljmp
ljmp
xchg
add
xor
jae
lods
inc
iret
add
popa
scas
insb
test
push
lea
dec
xchg
or
mov
or
gs
fstpl
adc
mov
out
ja
in
pop
or
cs
stos
mov
mov
lret
mov
ret
out
lock
fisubs
sub
pop
addb
cmc
leave
push
adc
xchg
popf
add
push
or
jne
jle
dec
aaa
add
cld
outsl
pop
add
ret
jae
xchg
push
pop
push
insb
pop
push
bound
push
sar
mov
imul
pop
adc
nopl
arpl
ds
loope
mov
inc
lods
sbb
push
dec
cli
out
mov
jl
imul
fldcw
or
dec
leave
sbb
pop
insl
mov
mov
xchg
cmc
sub
xor
jb
jae
popf
sub
sar
mov
sbb
out
cmpsl
jne
shll
xor
movsb
cltd
xchg
aad
test
loop
addr16
jns
movsl
and
out
push
lahf
aaa
in
cs
pushf
jnp
or
add
lds
and
cmp
inc
ret
fmuls
add
dec
xchg
sbb
push
test
ret
mov
popf
scas
in
mov
les
shrl
call
dec
mov
into
ret
mov
push
jl
loopne
xor
adc
in
mov
push
dec
xor
pusha
mov
jb
out
into
adc
and
xchg
mov
loopne
mov
mov
rcrl
jge
adc
jb
xchg
iret
jno
and
dec
cld
jo
fisubs
in
jmp
sub
les
enter
popf
int
or
jmp
add
xor
add
aaa
adc
push
sub
test
sub
jle
mov
cmpsl
outsl
test
gs
push
sub
pop
mov
dec
mov
pop
cmpsb
popf
xchg
lcall
jle
sbb
out
cmp
jno
mov
jl
ret
mov
cmp
movsl
jbe
rcll
cmpsb
add
xchg
push
sbb
fsub
mov
or
xlat
xchg
test
adc
sti
test
jle
xchg
pop
or
pop
into
or
jge
dec
jmp
xchg
adc
mov
mov
nop
inc
pop
inc
xchg
mov
cs
pop
adc
push
lock
into
dec
lods
mov
in
sti
jae
pushf
mov
dec
out
xchg
mov
jl
pop
into
into
jg
rorl
shl
aam
xchg
out
ljmp
addr16
movsb
or
inc
fcoml
push
rcll
lea
stos
es
js
cmp
stos
int3
cmp
inc
sub
dec
cmp
aam
test
mov
dec
test
je
pushl
pop
mov
mov
mov
sbb
mov
jle
push
int3
pushl
mov
cmp
pop
add
iret
cli
das
lret
add
pop
dec
or
xchg
pmullw
or
mov
scas
xchg
daa
out
inc
dec
or
arpl
pop
std
mov
xchg
emms
out
xchg
dec
cwtl
mov
sahf
aaa
pop
icebp
pop
ljmp
leave
imul
jg
lock
popa
pop
jecxz
popa
mov
dec
les
push
inc
sub
call
pop
notl
fcmovu
mov
adc
mov
xlat
int
and
cmp
xor
mov
or
jne
clc
je
xchg
testl
aaa
jecxz
addr16
call
mov
pop
pop
les
push
jp
outsl
xchg
push
rorl
test
rcl
xlat
outsb
sub
mov
jno
and
outsb
mov
add
adc
mov
jge
mov
pop
xor
inc
imul
add
adc
push
into
pop
jae
sbb
xchg
js
pop
xchg
rcrl
push
jle
inc
aam
aam
icebp
jle
rol
mov
xor
pop
and
add
push
mov
push
movsb
push
xchg
push
mov
mov
jns
pop
push
cld
ret
ss
xchg
jg
in
cmpsl
jle
lods
repz
mov
dec
lods
cmp
scas
ret
test
in
pop
inc
cmp
es
inc
xchg
sarb
inc
sbb
pop
repnz
pop
outsl
jmp
lret
xchg
in
repnz
fidivs
push
adc
xchg
in
pop
pop
das
xchg
int3
xchg
jmp
jp
push
movsb
movsb
stc
test
lcall
add
pusha
and
lea
xor
filds
pop
and
mov
cs
sbb
cmp
inc
ss
testb
popf
and
repnz
and
rcr
cld
pusha
imul
nop
or
loope
test
adc
jecxz
lods
jae
cmp
lret
pusha
jg
lods
jnp
add
imul
repz
adc
jb
add
out
bswap
insb
int3
jo
jmp
and
pushf
jl
add
sarl
and
fdivr
pop
arpl
fldcw
xor
mov
mov
adc
mov
into
inc
bound
sbb
dec
push
pop
in
loop
push
stc
xchg
cmpsl
test
out
aad
push
inc
push
mov
inc
dec
bound
sub
sub
loopne
push
sbb
dec
call
xchg
test
movsl
pop
test
outsb
inc
pop
jo
dec
popf
outsb
outsb
js
pop
add
mov
sbb
rol
mov
int3
xor
jo
jae
cmp
hlt
jns
addr16
insb
and
xor
iret
sti
lret
add
jge
shll
or
mov
inc
xor
lea
and
sub
add
xchg
test
enter
sub
in
jecxz
jb
movsb
gs
sbb
pop
push
icebp
mov
xchg
out
xchg
xchg
ja
pop
mov
rcll
mov
ja
xor
and
or
repnz
rclb
int3
jmp
lds
mov
add
sub
push
fs
adc
stc
scas
jb
lds
insl
and
outsl
aaa
mov
xchg
or
push
sti
xlat
mov
decb
xor
int3
cld
sbb
idiv
xchg
daa
add
mov
rcl
push
or
mov
xor
fnstcw
mov
test
cmp
out
add
scas
jmp
adc
dec
push
mov
cmp
lods
aam
cli
mov
loopne
test
push
and
xor
push
notl
mov
pop
shrl
inc
push
jge
pushl
rclb
lods
xlat
inc
lret
inc
fwait
push
mov
inc
xorb
fs
popf
les
or
pushf
jnp
mov
mov
add
xor
and
mov
imul
pop
push
mov
sbbb
pop
cmp
jns
jg
cmpsb
fdivl
lea
jge
les
clc
mov
xor
mov
jmp
adc
decl
sub
lahf
mov
hlt
lahf
or
jmp
jb
adc
test
xchg
push
bound
subl
push
push
in
rorb
cmp
flds
inc
loopne
or
dec
cmp
lea
imul
sbb
movsl
dec
adc
mov
mov
mov
sbb
xchg
aaa
pop
xchg
adc
sbb
std
jbe
cmp
adc
or
jae
ss
mov
cmp
leave
imul
lods
cmp
wrmsr
xchg
imul
lods
das
mov
scas
mov
int3
je
in
sbb
clc
rcrb
out
or
cmp
mov
add
scas
dec
push
fdivrl
push
rorb
lcall
add
loop
sub
clc
pop
jno
xchg
mov
mov
loope
ficomps
sbb
pop
sub
or
mov
jge
imul
mov
inc
cmp
shlb
pop
repnz
and
add
sti
loopne
clc
dec
jmp
out
mov
idivb
pop
xchg
cmpsl
sbb
dec
shl
pop
mov
add
push
imul
gs
das
or
mov
dec
or
inc
xorl
arpl
ss
sub
aaa
push
lods
je
mov
insl
mov
mov
pop
fdivs
fs
insl
or
insb
lods
or
inc
xchg
lock
repz
gs
jns
fisubrl
xchg
je
jmp
test
jnp
lret
aad
inc
shl
and
imull
mov
push
xor
mov
std
nop
adcl
dec
jg
push
jae
xchg
push
leave
scas
add
int3
mov
mov
cmpsb
adc
repnz
xor
pushf
xor
out
les
es
mov
jb
push
mov
add
jge
dec
call
jle
or
pop
sbb
xchg
mov
loopne
shlb
imul
xchg
mov
dec
lahf
insl
pop
push
mov
push
mov
call
adcl
pop
push
scas
stos
lcall
dec
shll
fcmovb
sub
fcoml
arpl
leave
xchg
push
jne
or
push
cmp
icebp
pushf
lock
stos
jne
data16
sub
int3
and
test
aas
add
and
xlat
call
or
pusha
fcoms
lods
nop
lds
add
dec
dec
in
gs
jg
in
add
je
sub
fidivl
jno
mov
lea
adc
mov
mov
out
inc
sbb
cmc
loopne
mov
xor
mov
mov
fsubrs
inc
sub
push
movsl
pop
popf
and
ljmp
xor
mov
mov
push
or
addl
mov
pop
mov
sti
rcrb
inc
outsl
push
ss
aad
push
push
or
xchg
mov
pop
mov
pop
iret
mov
roll
cli
rorl
and
adc
rclb
out
scas
or
dec
push
fldl
test
pop
pop
jbe
jle
fisubl
mov
bound
mov
xor
xchg
or
leave
xor
iret
and
pop
sbb
enter
push
ljmp
add
mov
pop
mov
jmp
or
fsubl
lds
pop
and
sbb
dec
movsl
into
sub
sti
aam
lds
add
push
dec
dec
mov
sti
icebp
sbb
call
and
inc
adc
flds
xchg
lods
jle
pop
in
out
sbb
xor
call
inc
test
dec
xor
inc
lahf
mov
mov
xchg
jp
icebp
cmp
xchg
and
jecxz
add
ja
fsubrp
arpl
or
test
sbb
test
fstps
stc
mov
cmpsl
jno
jg
cmpsb
pop
mov
scas
push
out
int3
hlt
push
ljmp
dec
hlt
sub
adc
push
push
pop
and
cmp
push
sub
insb
cmpsl
lcall
jbe
loope
in
stos
cmp
in
test
push
stos
lret
mov
outsl
rorb
mov
sub
inc
xchg
and
and
lods
dec
xlat
xor
ss
adc
xchg
sbb
mov
push
rcr
pop
aaa
inc
sub
mov
sti
mov
cltd
dec
pop
popf
dec
movsb
mov
adc
rol
cli
dec
jo
inc
fs
xor
aad
sbb
jg
sar
vcvtsd2si
mov
icebp
sub
sub
add
inc
into
fldcw
push
xchg
mov
xchg
jnp
rolb
arpl
mov
push
scas
fs
sahf
lret
pop
call
mov
aam
push
pusha
push
ret
xor
lret
imul
fwait
into
add
adc
imul
jbe
out
cmpl
int3
mov
icebp
notb
out
or
pop
in
div
pop
rep
insl
mov
xchg
push
and
dec
xchg
cli
repnz
dec
xor
jle
mov
iret
lods
incl
loope
mov
xchg
cli
dec
ret
fmull
cmc
shrb
xor
imul
shlb
add
push
mov
popa
rorb
sbbl
pop
xchg
sbb
mov
fldl
les
mov
or
or
sbb
leave
stos
sbb
jbe
rcll
mov
cmp
in
cmp
stos
and
scas
test
insb
les
lods
insb
sbb
loope
fsub
int3
dec
popf
sbb
out
andb
mov
mov
fwait
test
outsl
lods
sbb
add
aam
dec
loop
insl
xchg
sbb
pop
mov
test
or
in
jns
loope
push
dec
mov
sbb
fimuls
pop
inc
call
dec
sar
lods
lea
mov
sbb
xchg
sub
inc
bound
call
dec
shll
cmp
lret
mov
loopne
cld
mov
aad
xor
ja
jge
jo
cmpsl
adc
inc
out
cvtps2pi
adc
cmp
cmpsb
pop
cwtl
xchg
das
cmpsb
shll
mov
mov
sub
es
inc
jb
mov
movsb
mov
adc
xor
cmp
popa
and
mov
nop
xor
mov
push
fidivs
ljmp
leave
mov
and
pop
idivl
mov
rolb
inc
pop
imul
fnsave
insl
in
lahf
popa
sti
xchg
jg
outsl
bound
int3
cmp
mov
cmpsl
leave
sub
sti
mov
stc
dec
pop
mov
movb
lock
shlb
pusha
push
lcall
xchg
outsb
lret
xor
stc
mov
cs
loop
int
mov
insb
pop
pushf
and
loopne
sbb
and
xchg
pop
mov
add
pop
dec
les
in
adc
sub
jne
inc
int3
mov
mov
imul
xadd
sbb
fbld
pop
dec
dec
pop
inc
inc
dec
je
and
repnz
push
dec
jl
inc
sbb
push
mov
push
stos
add
xor
repz
push
xchg
push
stc
jecxz
jle
or
in
mov
push
fdivrl
scas
loope
xchg
lods
push
sti
hlt
daa
test
sti
mov
ret
or
cmp
shl
add
mov
scas
push
outsb
sub
insb
push
fiaddl
pop
test
cmp
sbb
and
sbb
xor
fwait
test
mov
lods
adc
sub
and
int
mov
or
dec
call
mov
jnp
xor
mov
mov
movsb
shrb
or
add
sbb
pop
xor
imul
jmp
cwtl
adc
lahf
pop
xchg
lret
je
lock
push
outsb
addr16
dec
jl
lock
outsl
shlb
or
mov
pop
mov
lea
outsl
push
outsb
push
cmc
jbe
sahf
cmpl
mov
lret
mov
and
push
or
shll
cs
sahf
in
out
aad
mov
imul
add
xchg
xor
push
cmc
lret
sbb
rclw
mov
ss
imul
sbb
add
std
addr16
in
and
or
pusha
inc
jmp
repz
fs
out
xor
jg
mov
xchg
imul
rorl
insb
push
nop
fcomip
movsb
inc
icebp
push
call
add
sahf
out
out
nop
adc
scas
or
mov
mov
adc
push
fnstenv
jmp
and
dec
jg
in
pop
in
pop
pop
in
outsb
dec
jl
loop
ret
sub
xchg
popa
adcl
test
movsl
out
iret
rcrb
out
in
icebp
fimull
sub
xchg
add
popf
loope
add
lock
out
mov
sub
cmp
ja
push
popf
ljmp
pop
iret
push
mov
push
mov
js
pop
nop
aaa
into
ret
sarb
imul
aaa
cltd
xchg
xchg
push
lcall
sub
inc
rolb
cmp
xchg
ljmp
sub
fmul
leave
push
jle
dec
inc
and
mov
xchg
or
sbb
std
xchg
push
pop
movsl
add
loop
jne
pop
cmp
cmp
xchg
push
loope
insl
les
add
and
and
xchg
xchg
xor
mov
push
xchg
dec
stos
xchg
call
imul
stc
pop
loopne
xor
test
test
jb
lods
and
pop
clc
sar
adc
popf
sub
and
loop
arpl
notl
data16
std
jp
push
push
mov
out
jle
cld
inc
ret
clc
pop
lods
xchg
scas
lahf
add
push
ror
arpl
jmp
out
out
mov
mov
pop
mov
cmp
adc
ds
mov
add
jnp
insb
jge
out
jbe
mov
outsl
dec
or
popa
aad
cld
add
or
xor
rcll
xor
xor
adc
sub
and
or
pop
or
push
mov
mov
repz
inc
fmull
adc
or
movsb
subl
pop
shr
es
cltd
rorb
test
jae
outsl
lods
movsl
mov
insb
fucomip
out
cs
sub
loope
lcall
lods
mov
imul
mov
sub
lds
inc
ja
push
push
jle
mov
mov
mov
inc
in
push
mov
iret
je
test
js
jb
cwtl
push
jge
fadd
out
inc
repnz
movsl
jl
inc
lods
or
inc
lods
push
cmp
leave
mov
jecxz
adc
or
nop
xlat
mov
xchg
push
pop
mov
test
and
mov
xchg
je
cmp
or
outsb
ret
shr
add
jns
xchg
or
xchg
imul
js
mov
cmc
add
sbb
xorl
lods
sti
jg
xor
stc
jns
lea
push
pop
sbb
push
and
mov
and
lcall
inc
mov
xchg
pcmpgtb
rep
pop
gs
xchg
ljmp
mov
lcall
sub
dec
mov
mov
push
pusha
or
roll
bound
addr16
xchg
dec
and
daa
adc
repnz
arpl
cmc
dec
jno
push
sbb
movsb
and
test
push
fsubrs
and
ds
lock
xchg
aas
mov
repz
scas
sbb
dec
adcl
push
push
call
and
insl
push
inc
dec
push
dec
repnz
popa
mov
inc
mov
pop
and
dec
mov
inc
cmpps
adc
jae
adc
cltd
lcall
and
jge
out
mov
ror
enter
inc
jne
add
push
comiss
popf
jb
or
or
pusha
repz
lods
jb
jb
addl
mov
in
cs
lcall
fisubrs
mov
repnz
cmp
xchg
into
aaa
lods
jne
cli
outsl
fwait
scas
xor
cmp
jae
adc
add
mov
jae
nop
cwtl
inc
mov
sbb
jl
std
fucomp
inc
mov
addb
mov
aam
push
fs
adc
loop
mov
push
xchg
popa
or
mov
ljmp
mov
shrb
loopne
test
cli
pop
ja
jae
dec
clc
addr16
xchg
pop
icebp
cltd
je
mov
or
push
dec
pop
mov
into
sahf
rolb
shlb
in
pop
stos
out
inc
jle
sbb
sahf
dec
and
les
stos
push
mov
mov
test
icebp
pop
jmp
mov
jae
dec
test
xchg
add
pop
cs
stos
inc
into
sbb
inc
add
ja
jo
mov
cmpsl
test
jo
das
inc
lock
sub
mov
ret
jbe
out
add
push
pushf
int
jp
sti
out
iret
incl
shrl
xor
jecxz
xchg
jge
sahf
and
fisubrl
out
mov
or
js
enter
mov
jmp
insb
or
sub
inc
or
ret
push
jge
mov
sbb
outsl
or
in
xchg
lret
lock
dec
cmp
scas
imul
lcall
jp
ret
aaa
mov
add
jne
gs
mov
sub
out
in
js
jmp
fnstsw
mov
stc
mov
les
in
loopne
xchg
xorb
fidivrs
push
std
jb
jle
popa
in
adc
xor
inc
outsb
stc
inc
or
int
insl
insl
out
xor
add
lods
adc
pop
mov
mov
arpl
sub
or
ret
jge
and
sub
lret
fistps
jmp
in
out
push
or
xchg
dec
xchg
adc
and
and
fstp
insb
leave
in
sub
sahf
sbb
stos
pop
push
repnz
and
xor
xlat
out
ja
in
lcall
xchg
testl
lock
rcr
mov
repz
dec
jle
leave
and
mov
test
lcall
and
es
or
cmp
push
inc
cmp
add
sbb
test
mov
popf
xor
xlat
mov
push
rcrl
mov
lahf
lret
test
cltd
fsubl
jns
adc
out
in
and
push
and
mov
bound
in
shrl
js
cmpb
sbb
cmp
int
enter
push
rcrl
push
dec
inc
mov
jp
xlat
test
pop
fmull
or
dec
push
cli
and
and
dec
or
cmp
fsubrs
lods
lahf
shll
call
xchg
aaa
loopne
dec
loopne
dec
ud0
je
gs
xor
in
dec
popf
mov
enter
pop
pushf
push
out
test
adc
and
mov
sbb
mov
cmp
push
out
jmp
push
mov
gs
mov
std
xchg
mov
push
imul
fisubl
dec
test
rcll
xchg
mov
ljmp
mov
pop
or
fisubs
icebp
jns
jp
dec
test
add
pop
scas
add
xor
sbb
vmovaps
xorb
pop
push
lds
push
xchg
jnp
sbb
push
scas
outsl
test
hlt
arpl
or
sbb
outsl
ret
ljmp
adcl
add
cwtl
xor
stc
ss
popf
or
dec
adc
cs
and
fwait
mov
cmp
outsl
gs
nop
xchg
xchg
loop
enter
ret
sets
xor
jl
xor
xchg
insl
fwait
dec
mov
movsb
mov
testb
les
divb
fldcw
push
adc
shr
sub
hlt
xchg
popa
jae
or
in
mov
ror
ja
mov
mov
pushf
xor
lock
mov
fimull
jne
popa
aaa
jecxz
mov
xchg
pop
popa
pushf
xchg
mov
pop
jne
repz
lea
or
imul
pop
sub
fimull
add
pop
aam
divb
jno
xor
lds
or
fwait
jecxz
out
dec
push
cli
test
adc
ljmp
dec
rcr
call
sbbl
jp
mov
pop
or
and
adc
aas
daa
roll
pop
sub
mov
filds
stos
je
in
mov
movntq
out
lock
mov
xchg
inc
sahf
mull
stc
fs
aas
pop
fwait
ret
mov
inc
inc
in
ljmp
xchg
out
clc
or
lods
or
fyl2x
andl
xchg
or
or
jmp
test
pop
and
movsb
mov
jl
or
cmpsl
je
dec
and
popf
push
adc
pop
sub
ret
ret
mov
scas
test
ja
mov
xchg
mov
int3
je
xlat
hlt
jno
pop
add
xlat
jmp
sti
push
lods
pop
stos
aam
xchg
jecxz
insb
cltd
and
mov
cmpsl
test
jg
loop
jne
lods
mov
pop
jmp
sbb
or
popa
aam
in
xor
jmp
popl
cmpsl
pop
gs
test
dec
ficoms
in
xchg
dec
in
loopne
loopne
jns
ret
cli
mov
dec
lret
and
and
pop
adc
cmpsl
rcrb
dec
mov
imul
mov
push
ss
in
and
test
pop
mov
or
pop
push
lcall
in
sarb
mov
sbb
lods
sbb
mov
mov
repz
jns
dec
sub
stos
cmp
inc
add
adc
or
lock
adc
mov
mov
or
cmc
adcb
jge
in
cs
adc
xor
push
daa
dec
sub
stos
xchg
lret
iret
test
mov
outsl
sub
and
inc
mov
iret
mov
rol
movsl
pop
add
xchg
jo,pt
mov
add
pop
lock
push
cmp
call
inc
int3
push
jne
fidivl
cmc
mov
push
jno
insl
jno
cltd
add
ds
mov
and
inc
or
xchg
lods
xor
imul
jo
int
jbe
push
inc
js
rolb
sub
mov
pop
lods
dec
inc
cmpl
jle
push
inc
notl
xor
rcll
out
pushf
xchg
lea
scas
inc
sbb
pop
jae
xchg
xchg
call
jns
sahf
pop
push
dec
xor
and
and
mov
jbe
sbb
out
mov
xchg
jbe
inc
lcall
push
cmp
test
aad
dec
sub
stos
lea
dec
faddl
insb
fmuls
push
cmpsb
jg
xchg
mov
jo
in
mov
fisubl
or
je
jo
cld
xchg
inc
push
inc
lcall
loopne
imul
mov
out
sti
cs
jbe
sbb
out
xchg
leave
sub
sub
sbb
sbb
inc
sub
jne
push
lods
xor
mov
adc
xor
mull
scas
clc
pop
stc
xchg
sub
push
stc
mov
leave
test
add
xchg
movsb
ficoml
out
mov
in
push
popa
repz
cmp
lock
dec
mov
mov
pop
cmpsl
push
mov
mov
test
dec
dec
push
loope
mov
mov
xchg
push
xor
mov
movl
rcrl
jmp
mov
jge
ja
pop
sbb
int3
gs
rorl
mov
imul
jbe
lret
push
repnz
mov
jmp
sbb
fwait
sub
aaa
jle,pn
sbb
and
cwtl
loope
jnp
push
loop
mov
or
jl
adc
lea
fstp
shlb
push
mov
flds
mov
pop
dec
rol
pop
je
rcrl
ds
int3
pushf
xchg
aas
mov
sub
push
popf
mov
out
mov
mov
call
loope
jae
mov
js
cs
shl
outsb
mov
inc
leave
aad
ret
adc
pop
repz
cmp
ss
sahf
pop
jmp
repz
mov
mov
push
cltd
xchg
jb
pop
aad
push
jne
es
cmp
sbb
sbb
fbstp
shrl
pop
mov
in
pop
mov
dec
xchg
mov
or
js
scas
inc
sbb
es
inc
mov
dec
cwtl
sbb
sbbl
sub
std
mov
xchg
mov
test
rclb
mov
popf
dec
std
loopne
push
mov
mov
test
mov
pop
inc
cld
xchg
test
test
mov
and
inc
mov
mov
pop
add
js
cltd
mov
xchg
sbb
inc
data16
clc
xlat
stos
imul
pop
sar
ljmp
xor
xchg
dec
negb
sbb
adc
push
mov
pop
out
fists
das
cltd
loopne
les
out
popf
jbe
inc
sub
cmpsl
inc
arpl
and
insl
jg
test
mov
adc
outsl
adc
xchg
add
outsb
xchg
dec
add
jp
and
stc
lods
fldcw
imul
enter
addl
jo
mov
sbb
cli
mov
fcom
in
lret
mov
mov
xor
jo
mov
fwait
sbb
jbe
mov
jl
sbb
cmp
cld
mov
mov
into
add
push
pop
pop
pop
js
inc
push
or
inc
aaa
mov
dec
lods
test
movsl
mov
cmp
sahf
test
sarl
hlt
repnz
sbb
stos
xchg
jp
sarl
cmp
mov
or
cmp
inc
cmpsb
daa
and
lods
out
enter
inc
mov
mov
nop
or
add
xor
popa
sbb
js
mov
inc
insb
push
in
push
loop
adc
and
sub
loop
xchg
sub
ljmp
incb
mov
xchg
xchg
fidivrs
adc
jo
inc
and
movsb
mov
jmp
aas
fwait
jle
nop
push
mov
aas
into
push
xorb
adc
cmp
xor
pop
test
push
ljmp
cmp
nop
cwtl
mov
movsl
dec
in
push
cmp
out
rclb
mov
push
mov
test
insl
adc
mov
out
loope
ljmp
xchg
aas
adc
mov
pop
jl
fs
xorb
movsl
das
sahf
mov
out
ljmp
movl
xor
movsl
mov
dec
lret
shl
cmpsl
subb
aam
and
dec
stc
lret
push
leave
adc
int3
fsubs
pop
clc
mov
mov
dec
outsl
loope
pop
add
push
jne
sub
push
pop
xchg
jmp
test
out
daa
in
dec
mov
hlt
sub
xor
jae
icebp
in
mov
enter
dec
cmp
push
add
stc
outsl
fisttps
adc
stos
dec
or
jg
repnz
xlat
xchg
jmp
sarl
rol
xchg
stc
pop
fisttps
mov
cs
xchg
lods
int
pusha
pop
cwtl
cmp
jbe
sub
mov
out
fwait
mov
mov
iret
cmp
and
aas
or
mov
mov
mov
in
pop
mov
xor
pop
shll
xchg
fmulp
pop
bound
addr16
mov
and
in
or
mov
sbb
cld
bound
xchg
imul
enter
dec
addb
sub
jnp
sbb
fucomi
lcall
ds
fs
adc
in
out
aad
sub
sarl
test
inc
fisttpl
pop
push
xchg
insl
les
ja
cmc
into
sbb
sub
nop
jbe
pop
iret
mov
sub
je
or
mov
outsl
cmp
pushf
arpl
add
jne
or
popa
xchg
add
in
push
dec
xor
jae
add
daa
xchg
aaa
xchg
inc
out
sti
push
iret
xchg
and
inc
sbb
enter
cld
add
stos
fcoms
or
or
add
imul
sub
test
add
insl
nop
stc
pop
pop
mov
sbb
mov
adc
popa
ljmp
call
push
mov
push
ljmp
lret
push
mov
pop
data16
lcall
xchg
push
dec
pop
movsl
imul
pop
or
jo
lea
out
hlt
inc
dec
arpl
push
mov
fsts
push
bound
test
stos
jo
int3
fwait
bound
test
inc
mov
jno
lock
add
out
inc
sbb
xor
sahf
inc
sbb
and
dec
scas
mov
lret
inc
mov
dec
and
fs
push
inc
clc
imul
jb
loope
dec
push
out
cwtl
outsl
stos
xor
sbb
cmp
leave
mov
movsb
jp
lret
jecxz
mov
popa
inc
popa
int
mov
out
jb
or
sub
mov
ljmp
lods
dec
aaa
test
inc
jge
add
icebp
int
push
mov
jo
popf
or
and
jge
repz
push
xchg
lret
popl
and
mov
sub
add
in
xchg
js
inc
mov
or
cltd
mov
stc
pop
push
jge
aas
pop
repz
mov
xchg
jb
pop
mov
out
push
and
jg
and
mov
mov
cmc
fdivl
and
in
push
mov
sbb
adc
stos
sub
pop
push
jmp
call
iret
dec
push
push
lods
out
xor
xor
xchg
movsl
and
aad
pop
sub
inc
inc
cmc
push
rcrl
loop
dec
enter
push
mov
sti
mov
pop
js
or
shlb
enter
daa
roll
cmpsb
scas
xor
add
aaa
or
popa
mov
lods
insl
lcall
iret
sub
dec
test
rolb
aas
inc
cmp
clc
mov
mov
in
out
push
jae
inc
dec
xor
test
div
scas
sub
vpshlw
iret
gs
adc
xor
mov
cmpsl
sti
sub
cli
rcrb
sub
lods
jle
loopne
mov
scas
xchg
insl
xchg
ds
mov
lret
or
sbbl
cs
push
loop
xchg
sub
cmp
xlat
or
mov
vmread
jbe
sbbb
and
cmpsl
pop
xchg
out
idiv
imul
lret
mov
fwait
sub
cmp
cmp
cmp
incb
leave
movsb
popf
ljmp
mov
orl
ds
sub
fxtract
or
rcrb
nop
xor
add
stc
lods
cmc
sub
push
pop
movsb
cmp
jb
fucomip
and
jno
fcmovne
stc
rorl
test
mov
outsl
and
in
fwait
mov
jmp
mov
insl
jnp
add
subl
stos
out
push
lahf
or
test
pop
fldcw
ffree
call
inc
repz
dec
insl
mov
loopne
adc
push
cmp
fs
test
cmpsl
and
jb
xchg
push
sarb
inc
dec
jno
xchg
outsb
adc
cwtl
add
icebp
xor
or
les
int
das
adc
add
inc
jbe
sbb
or
jno
and
adc
inc
sahf
les
sbb
or
idivb
dec
pop
lret
push
adcb
mov
push
out
sbb
cmpsb
push
mov
mov
rcl
jb
imul
addr16
mov
xchg
jns
rcll
out
jnp
icebp
test
push
inc
mov
cld
fistpll
js
call
repz
lods
xchg
mov
cmc
cwtl
outsl
sbb
sub
jg
fcoms
mov
add
aas
mov
fstp
xchg
push
push
pop
jmp
mov
imul
aam
xor
xor
add
or
comiss
clc
cmpsb
dec
jp
idivb
lea
insb
fnsave
int
mov
mov
pop
test
add
or
popa
shll
fdiv
cld
out
loop
dec
mov
cwtl
test
inc
sbb
loopne
inc
pop
xchg
int3
lahf
add
stc
mov
sbb
dec
fwait
mov
cmp
inc
adc
jne
lods
jmp
or
pusha
mov
push
xor
mov
dec
dec
mov
int
mov
stos
add
call
in
stos
jg
adc
pusha
mov
push
mov
and
arpl
and
pop
fiaddl
stos
ds
mov
sub
sub
imul
cmpsl
and
popa
mov
in
jns
lahf
push
jae
faddp
shlb
repnz
add
push
dec
cmpl
les
ffree
out
add
xchg
xchg
pop
dec
or
xchg
push
test
jae
sahf
add
fldt
sub
mov
ds
repnz
shrl
orl
aas
mov
out
lock
sbb
notl
jae
cmp
jb
insb
push
and
aas
seto
mov
test
cmp
int
pop
inc
mov
into
inc
xchg
dec
dec
adc
sbb
lods
pushf
xor
into
adc
mov
int3
pusha
mov
in
jmp
and
mov
jge
adc
rolb
lahf
mov
pop
dec
out
jne
call
inc
and
fisubrl
xchg
and
aad
inc
int
clc
sbb
sahf
outsb
lcall
test
movsb
repnz
test
jbe
and
call
repz
movsl
add
aad
or
xorl
xorb
test
push
lock
or
mov
mov
jbe
data16
and
loop
mov
jmp
jmp
adc
rcrl
je
mov
int3
sahf
push
push
xlat
insb
call
mov
push
out
and
fcoml
push
dec
adc
add
xchg
mov
shll
in
sbb
push
or
sub
lcall
inc
xchg
lds
add
aaa
sbbb
decl
in
stos
push
rcrl
movsb
inc
int3
fdiv
push
jge
jl
setae
ss
xchg
iret
movsb
xchg
lock
and
lods
fwait
sub
nop
ret
sbb
loop
sub
cmp
inc
imul
or
lcall
xchg
and
push
adc
cmp
add
lahf
fcoml
sbb
xchg
repz
mov
and
xchg
into
iret
ja
pushf
test
into
cmp
xchg
mov
icebp
mov
sti
lret
test
paddsw
xor
sahf
and
push
dec
daa
mov
aas
xchg
fdiv
sbb
data16
sub
adc
sbb
ret
test
in
cmpsb
dec
jmp
jae
mov
loope
inc
mov
jne
lcallw
and
into
sarb
stos
pop
xor
ret
mov
mov
enter
or
mov
scas
dec
mov
mov
adc
fnstcw
sub
mov
sub
and
cmp
or
imul
hlt
xor
pop
enter
mov
mov
cmp
je
fistl
ret
in
sbb
dec
mov
jge
outsl
idiv
lods
mov
mov
mov
sbb
stos
mov
scas
daa
xchg
jae
repz
ds
sub
mov
test
and
mov
int
push
cltd
xchg
shll
push
idivl
dec
inc
jmp
nop
lret
cmp
xor
inc
pop
in
push
xor
dec
xchg
cli
ds
es
adc
dec
mov
xchg
jmp
and
rcrl
xchg
loope
push
sbb
push
rorl
xor
mov
add
fs
es
js
lock
pusha
and
ret
pop
in
fst
push
dec
jl
or
mov
ss
scas
stos
push
test
out
push
stos
test
cs
in
xlat
add
into
fisttps
rol
mov
sbb
test
roll
jp
cmpsb
jle
dec
loopne
pop
or
mov
js
vcvttpd2dqx
mov
cmp
push
mov
stos
ljmp
int3
lret
push
and
mov
fwait
imul
in
ljmp
mov
push
or
test
or
mov
int
mov
xchg
xor
repz
enter
xchg
sbb
pushl
nop
test
scas
inc
lock
sbb
mov
imul
mov
in
adc
in
call
push
shrb
cmpsb
xchg
inc
mov
and
js
out
mov
inc
outsl
pop
mov
jp
pushf
xchg
push
push
js
jno
cmp
fadd
cs
or
cmpsb
xor
mov
jecxz
and
out
or
mov
pop
cltd
fbld
outsl
mulb
lea
sub
or
mov
mov
cmp
inc
ss
adc
into
mov
cwtl
adc
repnz
data16
mov
test
dec
xchg
movsl
add
add
in
fbld
and
push
and
sbb
gs
cmpsb
pusha
xor
inc
lods
lret
pop
insl
jmp
cmp
jle
pop
sbb
loopne
js
pop
lahf
ljmp
lret
mov
push
fnstsw
xchg
mov
dec
hlt
inc
cmpsl
js
outsb
pop
push
push
js
orb
mov
xcrypt-ecb
cmpsl
mov
mov
pop
inc
sub
mov
push
sub
xor
icebp
dec
or
popa
ret
mov
sub
ja
inc
cwtl
lcall
push
fst
clc
cli
mov
mov
scas
jle
dec
or
rcrb
push
les
push
xchg
adc
scas
popa
popa
push
icebp
inc
xchg
dec
out
aad
cmp
mov
mov
lds
in
push
imul
xor
insb
aad
std
inc
cwtl
rorl
and
dec
test
loop
cmpsl
sub
push
shlb
add
jl
mov
in
out
pop
das
xchg
push
ljmp
dec
sub
add
mov
sub
mov
mov
fisubrs
shll
sbb
lods
outsb
push
div
jnp
sub
cmp
mov
sbb
pushf
cmp
push
cld
je
xchg
rsm
out
faddp
scas
jge
insb
cmp
push
loop
xchg
cltd
mov
cmpsl
es
call
cli
insl
in
shlb
rcll
popa
sbb
insb
pop
mov
fnsave
jns
fildll
lret
fwait
nop
or
jg
jle
sbb
jnp
sub
iret
lret
or
cmp
mov
xor
mov
xchg
xor
inc
sti
pusha
or
xchg
rcrl
outsb
mov
and
push
fsubrl
cmp
andl
adc
add
das
push
repnz
cmp
ja
xchg
ja
or
shlb
shrl
inc
fmuls
cmp
movsb
aam
and
push
mov
dec
cmpl
repz
jno
movsb
nop
xor
mov
pop
clc
xor
pop
es
out
pop
mov
arpl
mov
adc
in
push
xor
cmp
loope
mov
adc
lea
lret
ds
inc
mov
pop
lock
dec
out
sub
dec
sub
cmp
or
insb
cwtl
leave
push
add
ljmp
les
jecxz
xchg
mov
test
jno
cld
jb
arpl
add
cmp
shll
popa
dec
cmp
fneni(8087
pop
repnz
mov
and
mov
xorb
sbb
lods
popf
push
rcl
test
scas
inc
mov
sahf
ficoms
dec
lock
cmc
add
mov
push
pop
test
xchg
cmp
int
aam
push
inc
ljmp
mov
and
add
or
push
push
ds
push
stc
add
and
dec
pop
inc
cli
xorb
mov
test
imul
pop
lock
fs
mov
insl
pop
loopne
fistl
mov
je
repnz
sti
push
sbb
clc
stos
xchg
in
idivl
xor
jne
into
jnp
or
aad
sub
mov
ficomps
cmpl
inc
out
rorl
fists
scas
test
pop
jne
cmc
cmp
mov
lret
xor
outsl
movsb
dec
cmc
sub
pop
iret
cli
mov
sahf
rcr
and
les
sub
loopne
lods
inc
sbb
sahf
and
lods
inc
jne
add
iret
or
sbb
mov
pop
inc
push
pop
jne
aaa
xorb
insb
adc
jmp
pop
push
jmp
pop
pop
rorl
nop
push
mov
in
data16
mov
imul
pop
loopne
std
leave
xchg
xchg
das
lods
cmp
andl
mov
dec
dec
xchg
jge
std
pop
xchg
stos
sti
mov
test
imul
sti
lahf
cmp
clc
xchg
sub
mov
loopne
insl
mov
pop
inc
daa
or
lret
push
rcrb
sbb
repz
jmp
inc
lss
sub
aas
int
mov
in
repnz
scas
push
mov
inc
xor
dec
xchg
pop
dec
je
sub
and
das
clc
lock
out
mov
lds
das
mov
adc
sbbb
sahf
movsl
mov
pop
out
cmp
lret
call
mov
and
xor
push
ret
fisubl
mov
jle
jae
cmpb
pop
sub
je
int3
and
mov
movl
xchg
ret
test
jg
fsub
push
and
mov
xor
fistps
je
js
sbb
push
and
mov
loopne
push
movsb
ffreep
sbb
mov
sub
xchg
xorl
and
mov
add
arpl
sbbb
ret
outsb
ja
lcall
mov
sbb
shrl
sub
std
scas
xchg
push
mov
mov
ss
adc
xor
nop
fmulp
jp
test
cmpsl
push
outsb
movsb
test
inc
mov
jbe
sti
aas
mov
outsb
sub
jbe
inc
jo
xacquire
stos
cltd
imul
out
in
jg
mov
sub
sub
jecxz
cmp
ja
inc
xor
fst
clc
call
pop
int
orb
jge
cmp
cli
dec
ja
xchg
adcb
les
mov
sub
in
sysenter
les
mov
pop
xor
cmp
daa
in
idivl
std
jne
jecxz
push
movl
pushl
and
icebp
push
push
and
push
int3
sbb
insb
scas
icebp
jle
adc
jge
mov
int3
sub
cld
jl
or
popl
push
xlat
push
mov
adc
test
popf
xchg
xchg
lahf
mull
mov
xor
xchg
and
and
movsb
mov
sbb
movsb
ret
inc
fdivrl
rol
shll
ss
xchg
ret
push
ffree
sub
in
test
notb
ljmp
call
out
push
outsb
sbb
repnz
clc
lock
shrb
std
add
ret
and
dec
lahf
movsl
cli
jge
std
sub
icebp
sub
fstpl
and
loopne
and
xor
cmp
mov
adc
icebp
shll
fldenv
jmp
inc
pop
out
add
ja
daa
lret
leave
xor
push
aaa
sbb
xchg
fimuls
ds
add
push
push
ja
xor
jae
sub
lods
aad
add
out
or
add
movsl
cmpsb
aad
sbb
clc
les
mov
mov
cltd
mov
hlt
pop
mov
xchg
test
icebp
imul
mov
pop
loope
cmpsb
dec
lds
jns
int
loope
sbb
loopne
gs
cmc
adc
in
lret
scas
fwait
dec
push
cmp
or
test
mov
cmpsb
jae
es
mov
adc
push
hlt
push
js
out
call
pop
js
lahf
pop
nop
movsl
sub
xchg
sti
lret
popf
shll
es
inc
mov
xlat
je
xlat
rcr
das
dec
ficoms
movsl
sub
mov
lods
push
adc
push
inc
mov
out
push
fcomps
lahf
paddusb
ret
arpl
repz
out
inc
push
shll
and
xchg
test
sarl
mov
shll
movsl
or
test
mov
sub
stos
and
mov
sub
cmp
aam
pop
and
cmp
dec
pop
outsl
rcrb
stos
adc
xchg
add
jmp
adc
ja
pushf
xor
pusha
fisubl
cli
int
mov
loopne
mov
xor
bound
xchg
int3
xor
and
in
fcomi
or
jle
add
xchg
xchg
mov
andl
add
arpl
pushf
pop
ds
jnp
sbb
les
test
cmp
xor
or
dec
jbe
lods
adc
es
addr16
add
je
out
pop
mov
adcb
cmpsl
in
cmp
mov
or
shl
cmc
add
push
jbe
enter
push
push
add
xor
adc
xchg
adc
xchg
jnp
rclb
movl
or
xchg
adc
adc
mov
cli
mov
out
sub
notl
mov
scas
pop
pop
jb
mov
sub
outsb
dec
cmpsl
push
mov
fwait
xchg
cmpsl
add
loope
sub
mov
pushf
int
sbb
div
jge
inc
add
sub
repz
or
and
and
xchg
mov
and
cmpsb
jne
orb
xor
fdivrp
sbb
jecxz
in
ss
push
clc
andl
call
or
mov
inc
fmul
cltd
popl
fwait
ror
jo
and
sbb
fstps
jae
fistpll
dec
movsl
cwtl
lds
add
cmp
add
fstp
mov
cmpsl
mov
out
push
jecxz
fisubrs
inc
loope
cmp
test
loop
bound
es
dec
out
out
rolb
in
ljmp
ret
stos
fs
xchg
repz
xchg
out
or
push
and
jne
xchg
inc
int3
adc
or
out
lret
mov
cmpsl
movb
jp
lahf
sbb
jno
in
pop
into
out
xor
jecxz
mov
gs
nop
pop
arpl
shrb
adc
sahf
je
jb
sub
daa
or
rolb
loope
mov
lea
popf
push
lea
dec
sbb
out
push
cmp
fidivrl
jge
clc
cmpsl
ss
cld
dec
icebp
ret
xchg
fnstcw
cmp
jb
jo
popf
popa
aad
pop
movsl
xchg
push
push
dec
and
mov
je
jbe
gs
cmp
fisubrs
xor
mov
push
jmp
push
mov
xchg
sub
and
xor
xlat
test
loopne
and
mov
dec
pop
jae
cmp
mov
cmp
pop
adc
mov
and
dec
pop
inc
or
adcb
adc
sub
and
loope
enter
test
push
mov
cld
rorl
popa
pop
aaa
mov
fists
into
xorb
leave
sbb
sbb
jecxz
fistpl
int3
xchg
and
ret
xchg
orl
cld
sub
or
mov
pop
xchg
dec
movb
roll
and
ss
iret
mov
push
jo
scas
loopne
shl
into
and
and
mov
push
and
jae
dec
mov
add
scas
jl
mov
mov
dec
imul
negb
pop
loopne
fcoms
sbb
loope
xor
lcall
imul
cmp
out
jmp
xchg
or
call
out
enter
stos
cld
mov
shll
fcom
testb
jg
in
pop
push
insb
pop
sbbb
addr16
mov
out
sub
pop
es
push
test
icebp
mov
mov
imul
push
xchg
jno
out
xchg
mov
inc
jecxz
sbb
lds
push
xchg
out
push
int
into
xchg
popf
lea
add
pop
insl
or
adcl
faddl
lcall
cltd
outsb
lret
jge
cmp
push
das
add
jl
xchg
mov
arpl
add
cmp
popa
or
inc
mov
mov
cmp
or
aaa
jns
ret
loope
addr16
pop
inc
daa
mov
sub
mov
imul
sub
and
movsl
cmp
jns
cmp
testl
jae
inc
stos
mov
filds
cmp
xor
sbb
inc
xchg
inc
adc
hlt
mov
fisttps
xor
sahf
mov
xchg
cmp
insl
pushf
adc
adc
lods
sbb
cmpb
scas
xor
cmp
xor
sbb
nop
jne
sahf
cs
jmp
idivb
xor
lods
ficoml
inc
stc
imul
test
daa
push
outsb
pop
ficomps
scas
je
loopne
push
xchg
inc
sub
mov
sub
add
daa
push
inc
cld
lahf
loopne
mov
pushf
mulb
xchg
add
mov
daa
ds
or
push
icebp
inc
cmp
push
insb
ret
jbe
mov
mov
xchg
cwtl
and
add
push
dec
out
loopne
dec
add
rolb
mov
xchg
add
icebp
adc
imul
and
mov
sahf
lods
fdivrl
mov
enter
add
inc
mov
pushf
xchg
pop
mov
jno
mov
rorb
inc
jecxz
insl
fwait
in
xchg
and
cmpsb
or
mov
iret
lods
leave
fsub
shll
test
jns
jp
add
pop
lods
ljmp
addr16
dec
mov
incb
dec
lods
sahf
push
cmpsb
ret
jg
lea
dec
pop
mov
xchg
inc
daa
or
popl
mov
pushf
fmull
test
inc
or
push
pop
lods
jge
out
imul
int3
xchg
out
insb
dec
ja
add
shld
jnp
call
in
cli
push
rcrb
or
test
outsl
jno
jae
mov
test
scas
xchg
test
xor
push
loope
rcrl
addr16
hlt
jp
xlat
xorl
ljmp
daa
push
or
lahf
adc
fcomps
lret
in
mov
je
test
jnp
sub
cs
rorb
lods
push
jmp
test
fsts
ljmp
fcompl
add
lods
pop
int
xchg
xor
insb
imul
push
pop
pop
xchg
and
or
push
push
cs
ret
adc
xrelease
outsb
dec
mov
fmuls
mov
mov
dec
push
cs
fwait
jp
xchg
int3
inc
add
sti
add
adc
jmp
push
adc
pushf
in
lods
add
xor
out
mov
and
dec
sbb
lods
pop
icebp
add
add
arpl
cs
push
test
iret
mov
sahf
mov
lds
leave
inc
ja
addl
push
mov
test
add
std
sbb
test
scas
cmp
scas
nop
je
add
sahf
jle
cmp
out
outsl
ss
or
jbe
pop
out
sub
mov
dec
lahf
add
cmpsb
pop
pop
outsb
jle
sub
jnp
adc
pop
sbb
fimull
push
divb
mov
shl
shr
shlb
mov
dec
outsb
orl
cli
repnz
loop
scas
enter
cmp
add
pop
pop
arpl
pop
add
cmp
cmp
and
mov
and
and
add
sbb
xchg
mov
xor
fcmovne
pop
loopne
aad
movaps
xor
shl
inc
gs
add
jmp
in
clc
jbe
inc
sub
iret
sbb
lods
xchg
ret
sbb
pop
mov
outsl
leave
mov
jg
cltd
and
jbe
les
xchg
pop
out
mov
xchg
xor
div
data16
mov
js
or
scas
out
pop
sub
lahf
jge
popf
pop
inc
sub
sbb
sbb
addr16
fnsave
mov
in
pushf
and
out
jb
dec
rorb
roll
push
xor
lea
cmp
or
shll
out
test
and
js
mov
sub
jmp
sub
xorl
into
je
stc
mov
movsl
sub
rcrb
inc
jecxz
sbb
adc
lods
aad
shr
lcall
lock
hlt
cmp
xchg
addr16
in
pop
mov
mov
pop
ss
sub
test
loop
shrb
lcall
cmp
sub
int3
ret
push
jmp
dec
roll
repz
sub
add
fcmovb
out
xor
jmp
push
lcall
and
call
scas
adc
popf
push
call
mov
sbb
loopne
pop
in
or
sub
les
jg
mov
rol
jns
cmp
or
ret
in
xchg
shr
ljmp
mov
inc
bound
xor
mov
hlt
mov
test
in
stos
pop
pop
and
sbb
xchg
cmpsl
jle
and
mov
sbb
or
loop
jbe
pop
loopne
fwait
hlt
jbe
xchg
int
dec
nop
fwait
cmp
inc
mov
cmp
mov
in
sub
adc
lret
cmp
lcall
jp
dec
sub
fwait
push
xor
scas
mov
mov
test
cmpsl
rorl
mov
cld
in
loopne
mov
hlt
dec
jecxz
je
rcr
divb
push
ss
test
scas
xchg
loopne
lea
pushaw
mov
fadd
xor
inc
cmpsl
sbb
and
into
push
sub
mov
jle
xor
push
out
inc
cltd
jge
cmp
push
sbb
pop
scas
out
rcrl
push
mov
enter
jp
or
fcompl
jl
jle
pop
adc
into
jecxz
es
dec
test
or
dec
ljmp
ja
negb
push
pop
aaa
ljmp
dec
add
ffreep
out
inc
clc
sub
sbb
stc
cltd
sub
nop
hlt
in
lds
icebp
sbbb
repz
mov
fstpl
ficomps
fsubrp
es
cld
push
dec
es
xchg
jae
call
movsl
jns
mov
fidivs
mov
cmp
rcrb
fmuls
jecxz
int3
sub
mov
dec
jae
sub
cmp
pop
inc
jmp
push
adc
inc
push
daa
mov
push
sbb
pop
pop
mov
mov
adc
or
notl
mov
or
fnstcw
sbb
notl
adc
mov
leave
sarb
nop
pusha
ds
cmc
push
sbb
push
shl
lahf
jne
push
js
insl
inc
ret
je
or
xchg
mov
sub
test
xchg
es
xor
mov
test
mov
pop
and
ret
loop
mov
test
and
or
gs
fs
xchg
adc
int
and
pop
aad
ljmp
shl
push
inc
mov
jg
push
mov
scas
add
cltd
insl
movsb
ret
loop
push
push
mov
xor
jge
xchg
mov
pop
mov
mov
mov
rcrb
daa
stos
aad
xchg
jecxz
not
jge
sahf
out
pop
and
fs
mov
sbb
xchg
mov
stos
shrl
es
jmp
aaa
or
aaa
rorb
enter
push
mov
pop
das
or
shrb
popa
dec
push
stos
or
pop
in
pushf
mov
lds
stos
rcll
push
cmp
and
dec
clc
inc
and
out
in
mov
lcall
pop
jae
movsb
fstp
fxch
jo
cmp
ss
testb
fdivl
adc
movsl
addb
aas
mov
mov
jne
cwtl
mov
cs
sbbl
test
movsl
js
mov
sarb
nop
imull
sub
add
ss
ret
sbb
dec
movsb
cmpl
adc
in
out
jns
or
mov
pop
rcrb
jl
leave
add
sub
adc
aas
add
mov
mov
cmp
outsl
das
jge
mov
fsubr
lcall
hlt
jnp
popa
sbb
fcmovnbe
push
sub
sbb
pushf
je
fbstp
jnp
out
test
sub
mov
imul
sbb
xor
bound
sbb
out
adc
out
stos
sbb
jp
mov
lea
mov
xchg
inc
ficoml
ds
aad
fstps
loopne
mov
int3
cmp
popa
lret
jb
popa
sub
or
mov
inc
loop
loop
leave
and
inc
xor
dec
pop
mov
sbbb
mov
mov
fiaddl
xor
and
sub
or
mov
inc
mov
outsb
xchg
add
pop
cmp
pop
movsl
push
fwait
repnz
test
xlat
inc
push
insb
add
mov
mov
sub
dec
leave
rorl
orb
mov
ja
add
lahf
pusha
xor
fistl
sub
sub
adc
ss
sub
jecxz
das
pop
inc
mov
nop
mov
ret
sbb
cmp
lea
jge
xor
insb
dec
sarb
and
add
lret
rcll
gs
sbb
repz
mov
sbb
sbb
sahf
add
adc
arpl
das
les
sub
sbb
push
push
push
cmc
adc
rcrb
jnp
or
sbb
jne
push
sbb
ljmp
neg
out
adc
mov
pop
test
push
sub
lahf
mov
pop
xor
xor
mov
ss
cltd
in
shrb
xor
adc
xchg
out
popf
lods
fstps
cmp
test
jecxz
jbe
jbe
icebp
pop
stos
std
jge
leave
das
jns
mov
xor
es
stos
ret
pop
jl
andl
repz
clc
aam
push
ret
cmp
pop
into
imul
and
ds
jae
ljmp
pop
lods
inc
mov
sbb
sarl
out
push
repz
cmp
sub
mov
lock
mov
test
scas
adc
insl
mov
push
mov
pop
jp
ret
xchg
divps
jae
imulb
pop
jne
mov
mov
fnsave
sbb
cmpsl
std
mov
xchg
loopne
inc
jmp
cwtl
pop
sub
mov
insb
ret
cwtl
pop
aam
sub
or
or
dec
leave
cmp
ljmp
int
mov
inc
pop
aam
inc
or
popa
movsb
jp
xor
stc
mov
fisttpl
jne
add
cmc
stc
icebp
imul
sbb
cmp
dec
movsl
pop
mov
movsb
rcl
aam
sub
lods
mov
dec
add
jge
loopne
sahf
popf
jecxz
pop
stos
in
test
cmp
int
rcrb
decb
dec
lock
mov
and
add
cmp
inc
dec
xchg
leave
into
mov
imul
push
fdivl
mov
adc
aaa
shrl
rorl
lock
add
fwait
in
inc
stos
cmp
inc
cmp
jle
bsf
cmp
mov
ljmp
push
or
add
jg
rcl
push
les
push
dec
ds
mov
test
xchg
and
into
addl
mov
push
je,pn
mov
mov
stos
ds
dec
or
and
addr16
push
stc
add
int3
jmp
sub
mov
test
std
pop
sbb
adc
lret
xor
stos
or
xor
xor
js
std
jle
testl
ds
in
mov
jge
in
je
mov
dec
mov
adc
sbbb
in
das
and
pop
hlt
add
pop
out
in
sbb
and
scas
repnz
pop
or
sbb
mov
push
dec
jp
pop
dec
insb
fwait
stc
js
or
jbe
push
daa
ret
sbb
ss
sub
lret
test
push
clc
mov
xchg
jns
mov
and
push
push
jo
or
jb
add
fwait
ss
push
ss
cmp
push
cli
xchg
mov
push
mov
clc
adc
and
mov
cmp
mov
and
movb
add
popa
jbe
lahf
in
dec
push
cmpsl
cltd
call
ljmp
adc
aaa
bound
adc
inc
inc
cmp
mov
hlt
cmp
lret
insb
add
add
es
push
movsb
push
cld
aas
lods
lock
mov
rolb
inc
divl
pop
out
mov
push
xlat
test
fsubrp
test
mov
lcall
mov
mov
cmp
mov
inc
jge
lcall
adc
mov
imul
or
mov
test
ds
sub
push
sub
mov
push
and
xor
orb
test
xchg
aas
gs
adc
jb
lock
or
aaa
popa
pop
nop
mov
sbb
bound
das
push
in
xchg
mov
mov
popa
push
adc
inc
lahf
sub
daa
loope
pusha
iret
adc
mov
loope
scas
add
xchg
adc
sbb
xor
pop
mov
dec
out
hlt
jae
in
clc
ret
push
xchg
and
or
xchg
aaa
cld
aas
in
repnz
clc
mov
push
scas
pop
cwtl
cmp
imul
scas
das
adc
inc
lods
rclb
fbstp
jo
daa
jle
and
cmp
dec
mov
push
out
gs
mov
lds
dec
das
jecxz
xchg
pusha
inc
icebp
mov
scas
jle
push
mov
imul
push
jg
mov
mov
dec
pop
dec
or
loopne
jbe
pop
push
adc
pop
xchg
mov
sbb
xor
jne
xchg
sub
or
mov
stc
stc
inc
xor
cmp
mov
imul
jmp
out
aam
sub
je
jge
je
xorl
mov
mov
js
pop
bound
cltd
inc
cmp
shll
popl
les
test
pop
inc
push
enter
dec
pop
dec
or
push
shl
sub
pop
imul
shrb
xor
and
lahf
cmp
lcall
dec
jge
insb
push
pop
cmpsl
adcb
ss
cltd
scas
outsb
or
lahf
bound
out
dec
js
aad
stos
adc
dec
sarl
mov
and
mov
push
xchg
call
xor
mov
jmp
mov
mov
ds
arpl
das
call
insb
push
push
jmp
push
cmp
cs
dec
ljmp
mov
push
add
push
test
sarb
aam
jbe
jnp
insl
loope
xchg
scas
es
pop
scas
push
lcall
in
mov
mov
pop
fsubrl
fcoms
mov
xor
imul
cmp
pop
popf
mov
ret
mov
lret
sub
add
mov
cmp
mov
jl
popa
sbb
or
imull
ja
push
in
std
shrb
jo
and
mov
loopne
addr16
pop
mov
cmp
inc
mov
jnp
icebp
jne
sti
fistpll
xlat
cmp
mov
repz
outsl
pushf
cmp
or
mov
push
jo
add
stos
pushf
xor
pop
js,pt
mov
adc
xor
mov
fsts
outsl
hlt
stos
xchg
fs
imul
jmp
nop
icebp
mov
mov
addr16
hlt
test
fisubl
dec
xchg
rclb
xchg
dec
shlb
movsl
jno
xchg
pop
gs
xchg
or
sbb
push
lahf
in
ret
mov
jo
std
sbb
adc
jl
hlt
sbb
dec
jle
out
out
xor
outsl
repz
push
pop
cmp
mov
in
call
rcrl
pop
cs
cmpsb
mov
add
sbb
insl
in
mov
sub
shlb
cmp
test
push
scas
jb
daa
mov
xchg
adc
ss
lret
add
mov
loop
cmpsl
insb
mov
ljmp
jmp
jae
cs
mov
adc
jl
mov
pop
fsts
aam
push
lret
pop
out
into
repnz
mov
ficomps
jge
pop
fdivs
int3
pop
insl
repnz
xlat
sbb
ja
add
cmp
sub
xlat
mov
in
sbb
mov
jl
cmc
frstor
cmp
ss
fmull
ror
lcall
add
and
call
inc
adc
outsb
dec
mov
sub
sbb
mov
pop
xchg
inc
push
test
xchg
rolb
sbb
and
and
movsb
outsb
jp
aas
and
inc
dec
in
jle
fwait
cmp
popf
ljmp
fists
test
and
push
jp
sub
imul
push
sub
mov
sub
xor
and
adc
cmp
adc
xor
add
jp
xchg
mov
xor
iret
mov
cli
xchg
pop
cmp
cltd
leave
popa
xchg
loop
push
movb
jbe
pop
sti
xor
inc
mov
add
rcll
js
jbe
call
sub
push
out
and
jns
adc
xchg
add
scas
fs
mov
dec
icebp
test
inc
bnd
fcompl
add
lcall
arpl
add
stc
inc
push
rol
enter
dec
pop
nop
jb
loop
clc
movsl
mov
push
dec
decl
test
mov
cli
xchg
out
in
aaa
mov
dec
xor
inc
sbb
lcall
in
cmp
pop
aam
mov
sbb
sub
movsl
push
mov
outsl
out
xchg
push
ret
adc
push
arpl
dec
mov
push
lahf
and
les
shll
test
lds
gs
push
push
repz
xchg
jns
lock
jl
or
dec
cltd
add
insl
push
jne
mov
out
out
jb
jle
repnz
mov
jge
aaa
cli
sub
adc
dec
sbb
sahf
icebp
cmc
cmp
repnz
jae
fcomps
repz
adc
mov
call
jg
inc
test
mov
push
int
loop
imul
outsl
stos
cmpsb
addr16
out
test
sub
int3
les
into
gs
into
jp
add
lret
mov
lret
ss
popf
fcmovnbe
mov
mov
hlt
cmp
mov
outsl
push
aad
cmp
in
in
or
pushf
jno
pop
bound
pushf
cli
sbb
pop
adc
arpl
mov
dec
mov
cs
and
push
addl
aaa
sbb
sub
adc
push
aad
push
add
lahf
pop
pop
pop
xchg
leave
imul
sub
pop
mov
mov
dec
mov
and
scas
loope
scas
mov
jae
mov
pop
cld
sbb
cmp
leave
les
pop
adc
or
mov
mov
and
das
test
rcl
pop
stos
mov
insb
popf
aam
adc
loop
call
int
insb
cs
loopne
push
std
loopne
xor
ss
mov
int3
mov
sub
add
loope
repnz
or
clc
cmp
xchg
dec
dec
in
into
dec
jp
sarl
sub
movsl
add
outsl
shr
out
cwtl
mov
rclb
ja
mov
sbb
stc
mov
push
aas
mov
pop
popa
rcrb
sbb
cmpl
cs
repz
nop
push
test
xor
ror
mov
sub
insl
sbb
fsts
shlb
fninit
cmp
shll
adc
sbb
cmp
and
jnp
shll
inc
and
outsb
imul
fwait
jg
setne
mov
push
sti
mov
je
inc
testl
lods
fldt
inc
cmp
stos
push
adc
mov
or
outsb
out
cmp
mov
add
std
jo
scas
or
popa
cmc
ja
pop
and
add
mov
repz
or
in
lock
jae
call
movsl
push
pop
jne
test
popf
lcall
mov
nop
or
dec
push
shrb
adc
jg
sbb
mov
sub
cmp
add
lea
rorl
ret
lods
xor
push
jbe
xlat
inc
rorb
js
aam
cli
pop
mov
mov
outsb
fcoms
push
push
in
or
jno
lock
fisubl
sbb
xor
add
scas
xor
lret
mov
adc
int
mov
dec
out
inc
dec
sub
add
dec
lcall
sahf
call
cmpsb
jecxz
push
gs
addr16
fnsetpm(287
push
ds
xor
dec
fs
ret
cmp
scas
popf
dec
mov
out
popf
jne
mov
mov
add
or
data16
shlb
sub
pop
mov
xor
pop
sbb
std
and
adc
xchg
push
jo
or
das
or
inc
fdivs
mov
repnz
flds
popa
xchg
xchg
mov
outsb
pop
inc
outsb
push
sub
ret
xor
out
ja
xchg
dec
cmpsl
push
jg
sbb
das
movl
test
in
outsb
mov
cltd
in
mov
xchg
aaa
dec
xchg
pop
push
lds
test
daa
cmp
xchg
in
xor
adc
pop
out
fdivp
push
movsl
stos
sbb
xor
inc
inc
xor
addb
push
ficomps
cmp
xlat
cmpl
cmp
jge
imul
cs
enter
out
mov
stc
sbb
stos
int3
call
mov
ret
xchg
xor
cli
fildl
and
imul
test
jecxz
mov
add
xchg
cmp
pop
lcall
shr
mov
daa
mov
pop
xchg
js
fadd
out
mov
mov
cld
scas
ljmp
add
out
push
jle
pop
and
or
lock
push
and
pop
addl
add
daa
jmp
cwtl
cld
mov
out
xchg
xchg
cld
jmp
sbbl
sahf
mov
lods
fidivrl
xorl
cmp
mov
sbb
cmpl
adc
mov
pop
clc
sub
mov
popf
stos
rclb
cmp
xor
lock
fidivrl
mov
aaa
lods
fldcw
add
and
jb
das
xchg
mov
xor
fiadds
shll
mov
imul
pop
push
sbb
das
cmpsb
scas
lods
in
repz
jb
pop
std
out
add
push
push
scas
bound
mov
push
push
push
inc
cwtl
pusha
shlb
inc
add
cmpsl
jns
ljmp
js
adc
aam
add
add
lock
push
mov
xor
cmp
or
lea
pusha
cs
fnstcw
sbb
imul
mov
push
push
xor
mov
dec
imul
fisubl
mov
lahf
ds
sub
aad
sbb
mov
inc
sbb
mov
xlat
sbb
cmpsb
and
fidivrs
mov
mov
outsl
das
fadds
daa
xchg
cwtl
insl
xchg
fistpl
nop
or
push
sub
push
nop
sahf
dec
adc
call
aaa
notl
xchg
push
aad
popf
dec
movsb
push
push
push
dec
dec
cmp
int3
push
dec
mov
mov
lea
jl
push
mov
rcl
mov
loope
bound
movsl
test
int3
push
push
cwtl
sub
mov
stos
loop
or
xchg
lds
pop
pop
shrb
inc
xchg
mov
add
incb
ret
add
mov
xor
jns
add
push
cmpsb
pop
in
out
out
push
in
int
mul
mov
mov
loopne
adc
sub
dec
out
pop
pop
adcb
lock
push
jle
xchg
inc
out
in
inc
jp
or
push
in
mov
push
inc
pushw
cwtl
lret
push
jnp
ret
cmp
pop
pop
sbb
pop
scas
xchg
pop
mov
imul
into
or
push
mov
mov
cltd
dec
inc
fst
pop
dec
jnp
lret
or
fdivl
dec
in
jnp
pop
jp
insl
in
popf
or
cmc
in
and
adc
pop
std
push
bound
lock
les
daa
pop
jne
xchg
inc
iret
movsb
cltd
in
mov
add
clc
adc
imul
xchg
push
stos
cmp
test
test
inc
cmc
push
push
pmaxub
movsl
in
sbb
mov
lahf
pop
push
inc
insb
sub
pop
sub
xchg
cmp
sub
mov
or
push
jb
bound
sahf
mov
imul
and
xor
mov
movsb
stos
leave
jne
fcoml
push
cmpb
insb
repnz
mov
pop
pusha
and
adc
call
shll
lock
scas
ljmp
sub
jbe
sbb
ljmp
mov
test
xchg
pop
dec
jp
sub
ljmp
sahf
js
dec
jae
mov
mov
test
into
sub
cltd
jmp
in
aaa
popa
inc
mov
or
insl
arpl
jnp
push
xor
cmp
mov
push
push
pop
popa
push
xlat
sub
lcall
cmpsb
popf
jne
gs
sub
dec
push
stc
mov
ljmp
push
xor
fimull
shrb
popa
cwtl
shll
jmp
mov
iret
sbb
iret
ffreep
push
inc
mov
lds
fstps
das
loopne
clc
gs
dec
pop
dec
mov
sub
cmpsl
test
inc
ja
and
fcomps
xchg
adc
push
add
or
mov
imul
mov
stos
mov
dec
push
sti
out
test
push
jo
hlt
enter
mov
movsl
dec
ficompl
jge
add
sub
mov
int
cmc
jb
sub
inc
dec
lret
jnp
push
dec
gs
les
pop
adc
add
xor
test
dec
add
aam
xor
aam
jle
pop
mov
leave
out
pop
and
dec
and
and
bound
lds
out
stc
nop
ja
lods
xlat
mov
mov
test
dec
inc
cwtl
in
js
pop
into
hlt
ror
dec
or
bound
div
filds
and
cmpl
into
push
and
xor
lods
fs
xor
lea
sbb
jp
outsl
push
mov
roll
xchg
bound
sub
dec
sub
mov
adc
push
mov
jmp
imul
and
adc
mov
in
sub
clc
ss
mov
or
int
push
sahf
rcr
inc
dec
xor
and
in
add
cli
fstpl
cltd
xchg
and
adc
inc
inc
cwtl
aas
bound
fmull
test
cmc
shr
nop
rorl
adc
cmp
into
cmp
jp
sbb
mov
scas
call
mov
subl
lcall
je
in
mov
cmp
test
pop
fsubr
aad
scas
xchg
das
insl
jmp
push
pop
mov
jne
popl
or
clc
arpl
adc
outsb
daa
xchg
or
add
and
into
add
fdivl
lret
gs
dec
lods
repnz
adc
push
mov
sbb
jp
daa
jbe
add
pop
jge
sub
pop
gs
in
mov
push
test
in
out
stos
cmpsb
notb
imul
adc
icebp
call
lahf
and
adc
pop
aas
push
lods
mov
sbb
lock
insb
inc
fsubrl
push
cmp
xchg
out
out
rcll
pop
das
jnp
or
test
nop
push
push
mov
test
inc
loopne
popf
mov
mov
and
pop
cmpsb
sbb
cmpsl
lcall
xchg
xor
ss
xchg
sbbl
push
fmuls
pushf
addr16
cld
adc
imul
popa
push
test
daa
adc
in
inc
and
mulb
int3
in
pop
sbb
mov
fdivrl
jg
sub
jg
jo
dec
in
jmp
movsl
pop
and
mov
jb
push
cmp
or
rcrb
pop
adc
aaa
ret
sarb
call
shll
stc
rcll
out
in
gs
loopne
push
mov
xchg
leave
jg
stos
inc
in
cli
daa
in
mov
mov
mov
cli
aas
push
shrb
loopne
bound
inc
and
lahf
pop
add
fsts
mov
outsb
cltd
jge
out
out
clc
pop
sbb
sahf
jnp
nop
cwtl
inc
sub
mov
cmpsb
mov
xchg
sbb
sbb
sub
or
adc
inc
je
into
mov
sbb
mov
push
les
clc
aaa
fnstsw
sbb
stos
mov
lret
popf
pop
cwtl
arpl
jl
loope
sbb
movb
shll
icebp
sarl
xchg
push
add
jecxz
mov
mov
mov
divl
int3
out
xchg
push
jns
fwait
je
sbb
push
jnp
xor
mov
sti
or
subb
push
lret
add
jg
or
sbb
cmp
loopne
ret
test
mov
fmulp
lahf
inc
repz
fs
scas
mov
xchg
test
incb
shl
xor
cli
je
testb
pop
push
cld
and
xchg
into
sbb
out
and
ss
and
xorl
out
repnz
test
rolb
push
adc
mov
push
aas
es
jo
arpl
fpatan
imul
sub
push
call
and
xchg
int
fwait
cmpb
mov
jnp
xchg
push
sbb
ja
das
shlb
dec
cwtl
fistpl
xor
cmpl
outsb
xchg
jmp
in
lock
push
arpl
push
insl
scas
dec
test
sbb
jle
mov
test
inc
and
lock
rcl
loop
int3
das
push
sbb
xchg
mov
inc
adcb
call
cmp
add
jl
leave
mov
mov
xchg
xorb
or
aam
or
xchg
ficompl
js
movsb
push
cmpsl
xor
xchg
inc
js
cmp
cltd
ficoms
jnp
or
insb
insb
sbb
arpl
or
imul
jbe
pop
adcl
ljmp
cld
cltd
or
icebp
popf
jo
sbb
test
dec
ja
std
lret
lds
sbb
pop
ret
jmp
sub
test
loopne
pop
fbld
lods
mov
test
push
nop
mov
push
sbb
push
fcmovne
dec
push
ja
push
js
inc
or
enter
testb
push
mov
mov
pop
insl
popa
inc
dec
testl
or
mov
stos
outsl
jne
fiadds
mov
cwtl
inc
lahf
inc
jne
fmul
fsubrl
lods
cmp
aad
out
sub
decb
add
fstpt
std
pop
push
int
and
in
cmovbe
sub
cwtl
stc
in
xor
mov
dec
xlat
sub
fs
adc
pop
jp
mov
cmpsl
mov
outsl
xchg
and
jb
js
out
mov
push
sub
adc
adc
jo
pushf
test
repnz
rcrb
stos
cwtl
jl
or
cmp
pushf
test
mov
int
lock
fisubrs
inc
imul
sahf
rorb
out
int3
scas
and
fucomi
inc
or
jns
sahf
popa
stc
in
sub
adc
pop
stos
out
shrb
push
aad
lret
mov
aas
aad
or
sbb
cmp
mov
sahf
adc
in
loope
fimuls
mov
enter
fs
mov
lahf
mov
jmp
jae
and
cmc
push
cmp
rolb
scas
call
aas
call
out
pop
imul
add
cwtl
insb
inc
push
out
dec
mov
sbb
dec
daa
insb
divb
ret
shll
arpl
adcb
in
sbb
rorb
adc
dec
mov
iret
pushf
call
ss
xchg
pop
lods
adc
jp
pop
idivb
jecxz
in
shlb
stos
dec
mov
popl
lahf
or
stc
imul
cmp
repnz
push
pop
cmp
jecxz
dec
ss
orb
in
sub
les
pop
add
imul
hlt
xor
pop
bound
cmpsb
lret
loope
stc
test
cmc
pop
xor
dec
sahf
sub
fiadds
cmp
out
xchg
inc
mov
mov
aam
das
mov
add
pop
push
jg
ret
add
sar
js
push
aad
rcll
out
xor
in
andb
cmpsl
aas
or
cld
pop
movl
or
mov
test
aas
xor
lcall
xchg
shrb
fistpl
sbb
dec
ds
push
bound
rcrb
push
and
mov
call
mov
out
cwtl
sbb
and
jle
and
aas
xchg
xchg
jmp
dec
push
cmp
mov
testl
jg
das
inc
jns
mov
fisttps
pop
mov
das
inc
lods
outsl
push
gs
lods
lret
or
adc
sbb
int
std
cs
mov
negb
aaa
mov
cmp
sbb
imul
xlat
subb
pop
adc
dec
test
repz
mov
xor
mov
mov
sbb
or
and
iret
mov
add
and
inc
and
prefetchwt1
sub
inc
cli
xchg
xchg
scas
movsb
shrl
enter
pop
pop
add
pop
jb
pusha
push
mov
mov
insl
xor
scas
xlat
push
pop
mov
jb
into
pop
aad
pop
jg
cltd
dec
cmp
pop
push
inc
test
jecxz
mov
cmpsb
arpl
adc
ss
ja
inc
aaa
mov
adc
add
xor
sbb
push
xor
fiaddl
out
cld
mov
add
repz
fistl
inc
mov
fdivl
lods
mov
sbb
rolb
dec
pop
adc
shlb
sbbb
inc
mov
cmpsb
sub
xchg
cmp
inc
fnstsw
loope
gs
xchg
push
jo
adc
dec
rolb
test
stc
push
inc
pop
movsb
sbb
add
stos
cs
dec
clc
cmp
mov
mov
iret
shl
adc
nop
lds
scas
sti
mov
ss
jbe
lds
mov
add
das
aad
ljmp
in
xor
enter
scas
pop
je
xchg
mov
xchg
cld
icebp
fldl
push
mov
pushf
stos
loope
add
inc
xchg
rcrb
sti
stos
ret
jmp
or
aas
push
pusha
jle
mov
or
test
push
dec
daa
or
fimull
push
stos
pushf
pop
cmp
mov
fmuls
mov
or
leave
fwait
in
scas
mov
insb
in
xchg
xorl
fwait
dec
mov
or
xor
push
mov
adcb
loop
aas
xchg
mov
add
pop
loop
fcomps
sub
adc
mov
add
in
mov
movsb
in
dec
xor
out
mov
in
jno
les
nop
inc
enter
or
adc
test
xchg
fwait
inc
jmp
cs
push
and
addl
mov
xchg
sub
pusha
xchg
xlat
adc
jle
mov
mov
frstor
push
rcll
sbb
sub
inc
cs
pop
rorl
loop
out
cmp
pop
pop
pop
sbb
imul
repnz
in
divb
imul
mov
lahf
notb
jp
xor
xchg
sub
push
pop
and
test
and
lret
jbe
and
cmp
xchg
fsubrl
xchg
ds
mov
push
loopne
pop
outsl
jg
sub
hlt
sti
or
mov
scas
mov
jno
cmp
pop
aaa
push
outsb
dec
insl
pop
stc
cmp
dec
aad
push
in
roll
mov
ljmp
lret
push
push
xor
int3
fstps
pop
decl
cmp
pop
addr16
sbb
cmp
dec
inc
stc
xorb
lods
clc
add
cmp
inc
mov
sahf
push
inc
push
pop
jmp
sub
lds
sahf
ret
aad
mov
xor
subb
pop
cmp
pop
mov
sbb
jle
mov
mov
fcoml
pop
dec
xor
stos
jbe
mov
out
jmp
arpl
inc
iret
sub
mov
xchg
jl
loop
cmpsl
jns
insb
stos
into
into
loop
push
mov
sbb
fnstcw
stos
ds
mul
out
dec
mov
adc
aas
pop
push
xchg
xchg
insl
jb
adc
ja
push
jae
push
pop
orb
push
outsl
ss
mov
in
xchg
dec
push
mov
or
mov
mov
xchg
loop
xchg
inc
xchg
sub
in
mov
and
roll
adc
xor
stc
insl
cmp
shrb
fistl
pop
test
popa
mov
pop
pop
jae
mov
jo
neg
jge
shlb
lods
ja
fdivr
pop
mov
adc
icebp
ret
push
aad
dec
leave
sbb
push
das
mov
pop
ficoms
fidivs
push
outsb
xor
xchg
shll
outsl
mov
ja
xchg
mov
lods
cmpsl
xchg
xor
or
mov
pop
loope
mulb
fwait
insb
enter
cltd
mov
add
call
inc
fcomps
dec
push
dec
mov
fs
xor
inc
loopne
dec
mov
sub
mov
sub
cmp
mov
and
xchg
lods
je
jl
lods
cmp
mov
and
fisubs
jg
xorl
aam
jecxz
push
mov
add
xchg
popl
das
movsl
cmp
xchg
mov
xor
test
rolb
jl
lods
and
pop
sarl
lea
xor
loopne
mov
inc
or
lods
out
and
and
adc
mov
fadds
jecxz
xor
mov
dec
mov
xor
js
pop
add
cmpl
xchg
in
lret
xor
lcall
cmpsl
mov
cmpb
dec
xchg
mov
pop
sbb
xlat
adc
push
jnp
repnz
xor
out
push
mov
fwait
dec
repz
int
lret
add
add
adc
mov
stos
lods
dec
inc
je
addr16
repnz
clc
test
cmpsl
jns
sbb
xor
adc
pop
aad
pop
fsubs
sub
mov
add
fs
loopne
ja
adc
adc
add
es
lea
inc
mov
mov
add
or
jg
mov
lock
gs
adc
ljmp
fldcw
jne
dec
add
cmp
cli
push
adc
pop
int
les
je
repz
xchg
insl
xor
lret
mov
mov
insb
rcrb
cmp
daa
imul
in
std
xchg
inc
mov
pop
ret
mov
rorb
in
add
int
adc
fstl
sbb
jp
add
or
movsl
push
cmp
imul
fisubrl
jp
jmp
ret
data16
fsubrs
sbb
push
or
jo
sub
pop
das
ret
dec
nop
or
xlat
jle
std
pop
sahf
jnp
ja
push
repnz
stos
xorl
xor
dec
aam
mov
mov
dec
nop
lods
inc
jle
jge
pop
fadds
mov
stc
cmp
inc
push
ds
les
in
add
aam
cli
cmp
push
or
sar
jg
dec
jb
lahf
push
sbb
mov
mov
dec
mov
jmp
jl
js
insb
add
xchg
pop
call
dec
dec
mov
mov
aaa
cmp
jne
adc
daa
das
imul
sahf
call
orb
adc
ret
or
dec
pop
cmp
adcb
addl
aam
fwait
lock
fdivs
dec
pop
mov
xchg
sbb
jmp
and
lcall
pop
roll
inc
xchg
pop
rolb
xor
loop
add
xor
fcomps
and
repz
mov
rclb
push
in
or
subb
add
sub
mov
cltd
dec
inc
iret
stc
ljmp
int
and
cli
jmp
lock
movsl
hlt
iret
ret
idiv
pop
xor
adc
vaddsubps
aam
xchg
loope
scas
push
gs
mov
or
incl
std
into
aam
popf
adc
lahf
mov
sbb
icebp
adc
sti
adc
sbb
push
hlt
pop
movd
inc
das
or
es
and
push
mov
push
aad
add
mov
leave
sbb
xor
es
daa
jmp
jecxz
sbb
sarb
xor
sub
je
lods
mov
out
mov
pop
or
xchg
mov
out
outsl
in
iret
xchg
push
pushf
stos
sbb
jbe
loope
add
cmp
int
aaa
mov
mov
or
jno
jne
movsb
push
xor
push
mov
push
insl
cwtl
or
fcoml
jp
mov
loopne
clc
out
rolb
push
mov
ror
adc
insb
enter
scas
cs
xchg
negl
rclb
fwait
sbb
pop
inc
pop
in
int3
fisttps
icebp
mov
stos
popf
or
push
in
cmp
test
jge
mov
stc
inc
push
add
std
out
mov
adc
decl
sub
pop
inc
sbb
mov
adc
aaa
cld
dec
in
adc
jmp
pop
add
jno
repz
in
add
aas
add
pop
fbld
mov
lret
int3
mov
js
imul
adc
dec
mov
sbb
aas
jg
mov
push
icebp
xchg
mov
sbb
iret
mov
loopne
cmp
daa
cli
stos
nopl
lret
fs
stos
cltd
mov
inc
inc
int
movsb
inc
loope
fs
lret
movsb
add
imul
xchg
cmp
fimuls
sub
inc
sbbl
in
in
imul
adc
fisubs
cmpsb
pop
jge,pt
sar
lahf
sub
xchg
pop
mov
push
jle
ret
in
push
aaa
xlat
negb
pop
call
push
xchg
aam
loope
add
hlt
ss
pop
insl
sub
sub
jle
mov
cltd
daa
sub
dec
repz
jbe
xchg
push
mov
popa
xor
fsub
loop
push
push
mov
mov
add
and
leave
pop
xchg
dec
lock
mov
ret
add
popf
lahf
es
testl
inc
sahf
pop
test
pushf
or
sub
sbb
test
lods
sar
lahf
dec
sub
sbb
stos
push
push
pop
xor
pop
inc
sub
call
jg
mov
fisttps
dec
shr
cltd
and
insb
pop
or
sahf
pop
push
idiv
add
out
in
mov
movsl
or
dec
dec
fisttps
lcall
push
xor
sbb
xchg
adc
ret
xor
lret
push
adc
jae
int
add
mov
mov
nop
xchg
mull
fidivrl
nop
jb
int3
loopne
in
xor
mov
fsubrp
addr16
in
loop
mov
ror
arpl
imulb
mov
mov
add
xchg
icebp
and
dec
sahf
sbb
clc
lret
cs
xorb
add
xchg
add
stc
jae
fldcw
addr16
fldcw
pop
mov
sub
adc
sbbb
jns
in
ret
add
xor
rcrb
fildll
xchg
mov
dec
and
ret
adc
xchg
mov
mov
sbb
jecxz
adc
mov
leave
push
mov
push
fimull
mov
popa
pop
rclb
test
popa
fisubl
sti
out
or
rorl
push
andb
dec
or
dec
and
inc
mov
mov
test
mov
dec
mov
in
xor
out
ret
sarb
negb
enter
inc
push
xorl
sahf
int3
mov
int
push
xor
mulb
pop
jae
dec
pop
or
sub
das
mov
ljmp
fiadds
mov
cmp
xchg
stos
fldlg2
dec
or
popf
push
test
mov
jecxz
mov
xchg
imul
mov
insb
sahf
pop
push
pop
adc
inc
pushf
sti
shrl
cmp
pop
std
xchg
sbbb
data16
test
mov
dec
mov
add
testb
daa
xchg
mov
shr
movsl
stos
pop
xchg
testl
mov
call
cmpsl
adc
mov
pop
pop
adc
out
insb
xor
adc
imul
stc
dec
and
arpl
call
mov
pop
in
out
or
xlat
dec
mov
xor
mov
xchg
xchg
test
sbb
clc
push
pop
lret
mov
ret
in
sbb
dec
xchg
outsl
cmpsl
and
pop
std
adc
mov
xchg
lods
sub
mov
cmp
mov
pushf
cmpsb
pxor
mov
insb
pop
or
jno
jle
jae
insl
lret
lret
lods
and
dec
pop
fistpll
adc
call
and
jecxz
and
repnz
stc
pusha
pop
xor
push
lea
pop
pop
pop
arpl
and
xchg
push
leave
dec
enter
out
adc
pop
lahf
cmc
mov
add
imul
mov
testl
fnstenv
push
mov
mov
pusha
pop
xchg
dec
sub
mov
mov
mov
rcrb
pop
dec
popf
mov
adc
xchg
in
sub
pop
cmp
rorb
inc
fnstenv
int3
mov
cmp
mov
jmp
inc
scas
ss
aad
fadds
jecxz
push
push
test
cmpsb
dec
mov
leave
fbstp
adc
mov
repnz
adc
std
ja
jbe
int
or
inc
fldl
adc
ljmp
loop
xor
adc
enter
adc
jno
test
cld
out
pusha
pop
mov
out
push
mov
xlat
jge
sub
sahf
xchg
adc
aaa
add
sbb
add
fsubl
ds
fimuls
sub
dec
push
jns
bound
movsb
inc
push
lds
or
divb
adc
cmp
jo
xor
stos
mov
sbb
test
jne
mov
ss
out
or
test
adc
sahf
pop
cwtl
mov
sub
movsl
int3
mov
jmp
pop
imul
add
dec
into
imul
mov
jp
add
hlt
lock
mov
pop
loop
mov
pop
call
not
adc
repnz
arpl
pop
and
cmpsb
cmp
xchg
test
xor
xchg
lds
or
mov
xchg
inc
popf
ret
jmp
sub
mov
pop
jno
xor
mov
les
pop
adc
fld
sub
pushf
pcmpeqb
sub
clc
mov
mov
mov
fwait
imul
xor
fsin
das
xor
xchg
ds
cltd
push
mov
inc
inc
push
add
in
cmp
push
push
sub
ja
push
sbb
fisttpl
push
fs
jge
jecxz
sbb
jmp
mov
push
pop
pop
cs
in
inc
stos
js
insb
mov
pop
stos
outsl
daa
shll
loope
and
or
outsb
or
adc
xlat
jae
scas
es
ss
inc
mov
das
jg
popf
mov
dec
rcrb
xchg
sti
sub
pop
pop
test
push
mov
pop
pop
clc
fdivs
pop
sbb
cli
pop
outsb
in
and
iret
and
jb
or
dec
lret
scas
stos
je
cli
push
shrb
scas
jl
sbb
xchg
dec
push
adc
mov
gs
push
lret
sub
sbb
lock
cmpsb
in
fsub
imul
imul
out
adc
jbe
inc
sub
mov
mov
popf
pop
outsb
mov
in
popf
add
inc
add
or
jg
call
mov
cmp
xchg
icebp
cmp
adc
sbb
sbb
lcall
insb
gs
dec
xchg
push
sbb
adc
jmp
and
scas
popf
jne
test
movsl
sub
fs
ret
ficoms
xor
bound
popa
add
cltd
push
mov
sarw
aaa
dec
enter
or
xor
mov
je
iret
icebp
inc
inc
and
push
jnp
kmovb
pop
mov
int3
adc
movsl
mov
or
jnp
aam
stos
aas
or
aas
aad
push
aad
sbbb
push
xchg
sub
fs
cltd
incl
or
xchg
xchg
and
lods
imul
pop
mov
or
or
in
in
dec
and
into
aas
adc
stc
and
mov
aas
push
cmpsl
add
test
lcall
shrl
push
int3
jp
dec
scas
shll
fisubrs
jae
jge
sub
andl
jl
pop
rcr
mov
stos
addb
imul
xchg
sub
add
mov
dec
stos
repz
stc
pop
pop
xor
movsb
pop
inc
xchg
mov
xor
push
out
dec
shll
dec
inc
jae
and
inc
mov
pop
add
sub
and
leave
ja
mov
js
or
adc
pop
dec
mov
pop
fidivl
imul
mov
in
and
cwtl
sbb
add
movsb
sub
sbb
push
add
ja
loopne
and
aad
push
mov
repnz
cmp
mov
mov
cmc
nop
je
adc
rcll
dec
in
ret
mov
push
enter
mov
shrb
mov
popa
je
pop
adc
mov
mov
in
bound
out
sti
and
sbb
inc
adc
jg
mov
xor
jne
add
and
aam
adc
je
daa
xchg
mov
sub
push
sub
sub
inc
fsts
js
add
mov
and
lret
ret
mov
pop
add
push
jl
int
roll
mov
mov
or
add
ret
or
sbb
test
imul
cmp
push
mov
test
push
popf
xchg
ret
sbbb
sbb
cmp
push
or
test
sub
loope
pop
sub
iret
adc
outsl
xchg
xchg
push
mov
mov
push
jp
add
je
add
ss
aas
fisttpll
mov
xor
mov
pop
fnsave
xchg
inc
std
mov
dec
ljmp
rorl
sub
inc
mov
sahf
daa
inc
lcall
cli
xor
push
dec
mov
je
xchg
sub
cs
ret
jb
mov
push
ja
jmp
hlt
and
cmp
je
test
lcall
test
jno
pop
dec
test
mov
pop
lret
xor
lea
xchg
sbb
divl
jbe
rcl
jne
icebp
sahf
xor
js
mov
aam
or
lahf
std
push
jl
push
mov
fnsave
loopne
mov
jo
add
fld
add
fstpl
add
pop
insb
inc
adcb
je
mov
lcall
jmp
cmp
fwait
xor
dec
testl
leave
inc
xchg
xchg
mov
test
cmp
js
rcrb
or
insl
cld
pusha
jb
sbb
inc
ret
test
jle
push
adc
pop
add
das
fs
sbb
rcrb
push
xor
popa
insl
int
fs
ljmp
jne
in
push
in
mov
xor
jmp
inc
and
jo
sar
jo
sub
sarl
aam
xchg
adc
pop
and
fimuls
add
sub
out
push
daa
inc
xor
and
lea
add
daa
and
aam
hlt
aaa
lds
adc
add
cmp
lock
pushf
push
lea
stos
clc
mov
pop
dec
or
xchg
loop
daa
xor
jne
into
or
iret
dec
xchg
xor
sub
jecxz
push
jge
sahf
sbb
pop
sub
xor
pop
mov
daa
sub
in
xchg
xchg
js
sub
addb
xchg
stc
cmpsl
rcrl
decl
movsb
lcall
test
cmp
inc
push
mov
ljmp
loop
inc
fs
nop
cmpl
xchg
add
mov
lds
push
jmp
pop
adc
pop
sahf
mov
mov
xchg
cmc
mov
jge
aam
mov
add
mov
xor
daa
mov
pop
xor
mov
adcb
aaa
dec
xor
addr16
sub
test
test
jne
das
or
rcr
push
mov
in
inc
sbb
pop
test
xchg
pop
loope
ret
cmpsb
pusha
dec
lret
ja
stos
loop
adc
pop
xor
mov
jecxz
repnz
mov
dec
push
cmp
sbb
jo
adc
xor
test
in
aad
std
mov
pop
dec
push
enter
mov
int
clc
jns
loopne
mov
adc
adc
sub
dec
or
jl
or
scas
cmp
mov
mov
xchg
adc
fs
sub
mov
mov
push
cmp
push
por
cmp
xor
imul
xlat
or
outsb
hlt
leave
lret
cmp
pop
cli
push
pop
loope
mov
or
imul
fcoms
cltd
xchg
mov
jns
push
outsl
mov
dec
mov
adc
in
icebp
popf
push
ja
pop
jp
cmp
in
pop
mov
or
sub
dec
and
pop
in
add
cmpsl
iret
lods
inc
movsb
mov
xchg
adc
jb
ds
mov
push
test
std
mov
fimuls
mov
push
std
orb
lods
das
jmp
xchg
out
pop
add
out
mov
inc
push
or
mov
cli
mov
stc
ret
sub
pusha
sub
add
adc
das
mov
popf
sub
sbb
fiadds
stc
mov
ja
pop
jno
lods
fistpl
sbb
movsl
xchg
jno
cmp
data16
shr
sahf
iret
dec
int3
and
decb
lock
pop
and
dec
std
ss
add
mov
xor
outsl
fldcw
ss
rcr
adc
push
movsb
imul
lret
mov
jae
xor
inc
jb
addr16
test
push
pop
pop
bound
mov
pusha
leave
jnp
jmp
movsb
faddl
lods
pop
insb
sbb
cmp
mov
lods
xor
jp
push
push
push
pop
jb
cmpsl
cmp
test
test
in
inc
sub
ret
sahf
add
mov
pop
or
adc
xor
nop
fisttpll
sub
addl
mov
es
int3
setp
pushf
cmpsl
les
lock
jbe
lahf
ss
xor
stos
sub
xchg
inc
rcll
inc
pop
pop
mov
imul
loop
inc
mov
in
lret
xchg
mov
push
ja
std
mov
mov
bound
stos
into
mov
push
outsb
dec
or
inc
mov
cmp
loopne
fsubrl
adc
xor
xchg
enter
gs
or
xchg
sbb
js
push
scas
cmpsb
xchg
mov
jg
loopne
imul
roll
pop
subl
popa
cmpsl
fs
sbb
mov
daa
adcl
cmpl
sub
sub
pop
rcrl
shlb
or
jne
loope
mov
mov
clc
pop
int
adc
bnd
pop
xor
push
outsl
iretw
xor
test
inc
cmpsl
movsb
pop
call
xchg
xchg
fsubrl
mov
ret
ljmp
enter
sbb
mov
mov
xor
jg
sbb
arpl
mov
xchg
push
shlb
jg
ds
add
flds
dec
cmp
outsb
aas
lret
jb
pop
xchg
and
dec
push
sub
sbb
fidivrl
jb
sub
fwait
addb
cmp
adc
lods
nop
fstp
or
xchg
clc
add
xchg
mov
cmp
into
scas
mov
xor
scas
popa
dec
and
xchg
mov
sbb
or
dec
xchg
and
loope
ss
test
jno
loope
xor
lahf
pop
jecxz
in
or
jp
add
aad
jb
cld
sbb
fstps
fs
aaa
jp
sub
mov
mov
mov
sarl
into
sbb
das
fsts
scas
push
jle
sub
cmc
cmpl
pop
and
jb
sub
push
test
scas
adc
sbb
loopne
js
ds
addr16
push
out
inc
cs
sub
and
filds
ja
shrd
fimull
dec
sub
insb
xchg
xchg
mov
fwait
je
cmc
add
stos
mov
fbld
and
push
fwait
push
fnstcw
insl
sbb
sbb
pop
push
mov
clc
outsb
mov
or
sbb
fisttpll
pop
dec
jae
pop
ret
mov
imul
push
clc
and
das
lea
dec
adc
fwait
xchg
pop
pop
orl
add
cltd
mov
mov
int
insb
scas
push
inc
or
xor
cltd
inc
push
gs
sbb
xchg
and
or
mov
sbb
push
fst
sub
loope
iret
push
pushf
xchg
and
mov
rclb
xchg
sbb
push
cmp
push
mov
mov
insl
push
add
data16
aam
push
or
out
mov
jecxz
jl
jne
neg
mov
sub
fwait
scas
add
mov
ds
test
jp
jmp
mov
mov
pop
ret
aas
enter
cmc
bound
xor
mov
or
pop
pop
adc
sbb
xlat
add
jge
dec
inc
jecxz
inc
into
pop
call
lcall
lahf
gs
mov
test
jnp
and
xor
mov
or
cld
int3
jl
mov
sbb
add
out
orl
rorl
push
xor
jle
in
sahf
pop
or
cmp
test
xchg
fidivl
dec
jecxz,pn
dec
aam
xchg
outsb
cmc
and
in
mov
outsb
jg
or
dec
out
cwtl
add
fcmovne
mov
push
mulb
mov
lods
int3
cwtl
inc
es
cld
pop
stos
push
cmpl
cli
data16
lods
mov
repnz
xor
lods
mov
dec
or
fcomi
mov
aaa
sbb
arpl
pop
xor
xor
xchg
inc
shlb
clc
pop
iret
dec
xchg
in
test
mov
aam
xor
mov
push
adc
dec
enter
pushf
stos
inc
xchg
mov
and
mov
pop
shl
adcb
aam
fisttpll
lds
cli
gs
inc
fistps
enter
subl
lret
jecxz
xchg
mov
mov
je
cmpsl
ds
loop
xchg
icebp
dec
push
imul
and
pushl
add
inc
or
cmp
pop
xchg
ss
nop
jae
mov
add
insl
xchg
fstpt
lds
and
shlb
add
xchg
pop
or
scas
push
cmpsb
mov
add
jg
fwait
adc
xchg
sub
xlat
fisttpl
xchg
push
or
adc
jg
pop
xor
fwait
or
negb
jo
mov
lea
popa
or
push
sub
mov
and
jle
xor
popa
in
or
mov
jno
jmp
mov
xchg
or
iret
ds
test
xchg
pop
repz
jmp
pop
sbb
cld
jg
imul
bound
mov
lret
mov
dec
outsb
sbb
pop
pop
push
and
scas
dec
rcl
lock
inc
push
and
sub
mov
mov
mov
fwait
popa
jo
divb
popa
xchg
popa
cmp
pushf
and
sub
cmpl
mov
icebp
xor
test
cmp
push
cmp
mov
dec
loopne
inc
jb
sbbb
dec
xor
sub
or
popa
js
ss
in
inc
push
adc
data16
sbb
and
push
arpl
je
sub
call
dec
push
lods
outsl
xchg
add
test
sbb
add
jo
xchg
movsb
scas
test
ja
dec
mov
sub
inc
cli
aad
les
sti
or
mov
lds
push
adc
or
cmpsb
mov
repz
loope
int3
test
xchg
dec
movsb
cmc
cmp
inc
xchg
repz
test
mov
cmp
sub
mov
mov
icebp
inc
add
out
imul
sbb
inc
jmp
mov
in
call
inc
stc
jmp
adcb
movsb
shrl
inc
es
adc
push
lcall
imul
mov
jle
stos
jmp
das
mov
je
cs
sub
inc
pop
jo
test
js
loope
into
mov
and
shrb
rcrb
aas
cwtl
flds
stc
xchg
cmp
sbb
pop
jnp
mov
mov
lea
test
xchg
and
mov
movsl
ja
xor
fisttps
cmova
xor
or
xchg
flds
js
adc
stos
hlt
jle
or
push
add
pop
shlb
sahf
add
add
test
mov
popa
in
pop
lahf
scas
mov
sub
aaa
inc
outsb
cwtl
lock
jecxz
pop
divl
xor
xchg
xor
and
iret
in
pop
out
or
xchg
xchg
cld
mov
fwait
addr16
push
add
jne
shrl
xor
pop
pop
cmpsl
loope
pop
test
xor
icebp
jl
or
ret
movsb
inc
loopne
pop
ja
shl
and
int
pop
fs
cmp
andl
cmpsl
icebp
outsl
sub
mov
iret
push
pop
mov
imul
test
adc
sbb
fwait
xchg
imul
mov
adc
and
jp
rorl
inc
lret
xor
sarb
outsl
insb
xor
push
test
leave
xlat
div
movsb
dec
jno
xor
pop
cmp
pop
ljmp
add
repnz
mov
paddusb
rclb
mov
ja
fcoml
sar
sbb
add
shl
or
mov
push
fnsave
mov
fldenv
imul
dec
fcomps
in
cld
jp
pop
stc
and
jae
or
pop
mov
jecxz
test
xchg
jle
xor
xor
jmp
jno
rclb
jae
jns
iret
leave
addr16
mov
cmc
pop
xorl
mov
xchg
jno
dec
mov
add
pop
jl
jns
cli
pusha
cmp
cs
mov
push
or
mov
inc
dec
in
pop
cmp
mov
jnp
add
enter
and
clc
and
loopne
out
pop
and
push
fs
adc
push
mov
cmp
dec
or
fstpt
sub
cmpsl
roll
pop
andl
xor
dec
outsl
mov
xchg
aam
pop
ds
push
adc
sub
fmul
and
cmp
adc
mov
mov
enter
fidivrs
xchg
jle
xor
inc
daa
cmc
or
repz
dec
xlat
pop
push
jbe
add
xorb
outsb
xlat
adc
imul
divl
negb
jb
imul
pop
imul
lock
pop
sub
mov
jle
push
pop
lret
xchg
mov
mov
cmp
sub
imulb
sbb
add
les
sub
mov
mov
das
popa
outsl
aas
push
mov
inc
btc
push
int
sub
in
xchg
and
outsb
xchg
je
push
es
xor
jecxz
enter
add
inc
popa
sub
fwait
adc
mov
dec
addr16
icebp
dec
xor
clc
pop
xchg
iret
cmpsb
add
xor
xchg
jne
add
mov
push
repnz
sar
leave
fisttps
pop
inc
enter
gs
rcrb
mov
cmc
out
adc
in
lahf
mov
call
jg
add
mov
sub
aaa
xor
setle
lds
popa
loop
sub
nop
xor
scas
xor
int
push
push
mov
in
and
movsb
sbb
xchg
out
orb
mov
adc
arpl
mov
mov
cltd
dec
push
insb
pop
ret
fimuls
mov
jne
sbb
xchg
in
mov
adc
adc
nop
mov
test
movsl
imul
pushf
lret
jns
inc
subb
lea
popf
shll
inc
cmp
out
push
insb
cmp
pop
dec
inc
cli
mov
orl
les
fwait
pop
or
jg
pop
adc
cli
xchg
cld
clc
vpsubw
in
imul
pop
imul
jp
mov
pop
bound
sbb
out
xchg
lea
and
lret
sub
sbb
outsb
cmpsl
stos
lahf
mov
jnp
push
outsb
ljmp
incl
xchg
jbe
into
adc
lods
cmpsb
pop
dec
xor
mov
push
xchg
and
adc
ja
pop
xchg
or
outsl
xor
pop
mov
inc
inc
enter
addr16
xor
sub
jge
xchg
mov
push
mov
push
int3
push
and
movsb
popa
dec
sarb
pop
xchg
es
enterw
es
jge
mov
jbe
or
dec
lahf
jp
and
lcall
mov
jb
sbb
popf
testl
aas
or
call
sahf
shrl
cmp
mov
xor
imul
mov
add
inc
cmp
pop
pop
adc
lods
mov
pushl
xlat
loopne
jo
sbb
mov
mov
les
adc
ss
test
inc
cmp
jecxz
or
and
lock
xchg
insl
push
jg
mov
test
js
cmp
mov
rol
aas
outsl
mov
xor
insb
loop
bound
mov
andb
inc
or
lea
adc
int3
inc
mov
fs
push
jp
inc
andl
hlt
rorb
sti
rolb
sti
iret
inc
pop
mov
fwait
aad
jle
mov
xchg
adc
ss
sbb
jo
jbe
outsl
ja
aas
repnz
nop
dec
mov
lods
lahf
sbb
inc
sub
add
lea
pop
cmp
lcall
and
xchg
int3
mov
mov
and
lret
cmp
and
dec
dec
fldt
push
jmp
iret
test
out
pushf
repnz
cs
cmp
mov
pop
or
ja
aad
or
inc
test
rorl
in
and
jnp
mov
bound
and
or
ret
nop
iret
push
push
and
fisubs
xchg
mov
pop
xor
add
jl
push
mov
push
pop
push
sarl
jg
and
mov
add
sbb
jae
cmp
imul
popa
imul
push
fwait
adc
adc
ljmp
xchg
mov
xor
xor
mov
inc
mov
cld
add
andb
xor
test
and
ljmp
xchg
cvtps2pi
cwtl
add
mov
add
outsb
sbb
stc
adc
inc
inc
add
adc
stos
jle
test
mov
call
pop
and
push
sbb
push
add
xor
or
sub
mov
xchg
out
pop
leave
mov
hlt
push
lret
testb
shrl
push
mov
adcl
dec
mov
shlb
dec
bound
push
in
xchg
ja
mov
insl
jno
sbb
sub
push
cmp
cmp
inc
mov
call
lds
repz
imul
pop
push
mov
cmpsl
push
sahf
sbbl
pop
jns
add
adc
orb
push
jbe
sbb
xchg
sub
pop
insb
rcll
ljmp
or
jbe
inc
mov
dec
decl
repz
pop
xchg
arpl
sub
popf
or
mov
push
icebp
jne
iret
scas
push
lcall
push
add
dec
lcall
fildll
lods
pop
jp
bound
and
ds
pop
sbb
int
cmpsl
fwait
adc
mov
and
invd
and
pop
dec
loopne
aas
inc
and
xchg
sahf
notb
ja
movsb
adc
lret
hlt
mov
pop
sbb
inc
xchg
je
fstps
jbe
rolb
pop
cltd
pop
dec
sub
jp
sub
outsb
push
jp
ret
push
out
fcoms
mov
lea
adc
dec
cmp
mov
sbb
adcb
push
faddl
mov
cmp
je
es
and
push
inc
imul
dec
sti
ja
in
xchg
and
sub
imul
or
cmc
pop
xor
dec
movsl
fnsave
mov
notl
dec
push
jo
into
aad
mov
adc
fdivs
popa
jb
ds
jecxz
lock
jns
add
jno
iret
mov
add
sub
cmpsb
mov
scas
jo
and
in
sbb
xor
push
add
fldcw
je
in
or
outsb
add
mul
xchg
out
cmpsl
push
mov
xchg
popf
inc
out
rorl
cmp
or
dec
or
add
mov
cltd
idiv
arpl
ds
nop
imul
sarb
popf
rcll
inc
mov
incb
and
mov
pushf
scas
int
mov
cmp
arpl
insl
pusha
cmp
xchg
and
jg
shrl
xchg
inc
subl
scas
push
loopne
sbb
es
sar
mov
movsl
sub
out
lahf
cmpsl
addb
out
out
xchg
in
xchg
lds
push
mov
sub
leave
stos
nop
xchg
cli
mov
xlat
hlt
mov
xchg
out
outsl
pop
or
test
dec
xchg
push
testl
imul
push
fidivl
dec
fs
loopne
sbb
xorl
leave
mov
ret
mov
fwait
jmp
enter
sub
pusha
cmp
lret
xchg
jno
adc
mov
loope
jmp
scas
push
ss
jno
xchg
enter
enter
mov
ss
fildl
mov
test
xchg
loop
mov
dec
jae
mov
sbb
ljmp
xchg
out
mulb
fldcw
and
dec
in
lahf
sub
sub
sub
ret
nopl
sub
sbb
imul
mov
stos
fildll
scas
icebp
pop
jp
push
jecxz
lret
sub
stos
test
mov
jo
jb
mov
rorb
jecxz
mov
xchg
cltd
or
cmp
ret
cmp
jne
push
ds
cmp
cmpsb
add
dec
xchg
dec
sub
dec
cmp
adc
loopne
loop
gs
xchg
jge
testb
lcall
sahf
loopnew
repz
rcl
inc
testb
inc
xchg
shrl
mov
xchg
xor
jg
sbb
jne
sbb
inc
bound
mov
or
mov
jge
mov
test
pop
ret
imul
fcomi
imul
icebp
mov
cs
lea
bound
jmp
jne
sub
add
xlat
pop
sub
gs
dec
enter
ret
jo
dec
jnp
dec
jge
rcll
int
aam
cmpsl
or
mov
nop
ds
dec
pop
jns
enter
cld
in
mov
rol
jno
sahf
mov
je
int3
lock
aas
cmpsb
pop
and
inc
call
stc
out
sub
jns
jnp
lcall
inc
scas
loopne
mov
sti
xchg
mov
add
leave
and
insb
cltd
lods
jg
orb
fs
addr16
fbld
xor
xchg
cmp
push
push
mov
xchg
scas
xchg
lods
xor
mov
jmp
pop
adc
aad
sub
dec
mov
out
pop
jp
inc
mov
mov
hlt
sbb
or
stos
push
bound
call
es
push
mov
imul
or
dec
dec
sbb
mov
std
test
cs
movsb
movsl
add
sub
mov
cmp
stos
jbe
jge
fsubrs
mov
push
jg,pn
test
fnstsw
mov
inc
test
loopne
ret
addr16
mov
subl
mov
mov
cmpsl
xor
lds
mulb
mov
and
es
nop
fstl
jns
outsl
add
andb
cmp
sbb
sub
lds
out
ret
add
pop
movsb
mov
or
ja
cmp
mov
sub
mov
jne
inc
sub
jne
dec
jmp
imul
cwtl
cmp
xchg
or
ja
push
shlb
daa
sbb
mov
sbb
pop
inc
xor
xchg
ss
daa
aam
aam
mov
or
mov
ds
test
push
fwait
dec
scas
movsl
mov
mov
fs
hlt
shll
pop
dec
or
jge
int3
mov
add
rcll
sub
adc
mov
fldenv
or
dec
daa
jge
bound
add
adc
pop
fiaddl
xchg
sahf
mov
mov
ja
cld
std
int3
and
add
adcl
sub
mov
enter
cmp
rcrb
push
popa
xchg
sbb
push
dec
or
xchg
jae
push
insb
jecxz
push
sbb
fwait
lret
jp
adc
dec
adc
dec
mov
popf
adc
ss
cmp
sub
cwtl
test
mov
out
into
mov
stc
dec
adc
xchg
addl
add
inc
cmp
push
add
pop
dec
cmp
pop
or
push
or
push
ja
sub
inc
cwtl
jge
inc
movsl
je
dec
into
subl
push
iret
pushf
sub
fidivrl
testb
lods
sbb
lret
ds
lock
or
jo
add
dec
pop
xchg
lahf
fnstenv
jo
incb
sbb
into
cmp
and
subb
jbe
mov
xor
push
xchg
xorb
fcomps
in
adc
xor
pop
ja
push
fstpl
cmc
lea
xor
mov
rcrl
add
ret
imul
pop
inc
pop
ret
fcmovbe
pop
icebp
pop
push
stc
les
inc
stos
sub
lahf
pop
pop
inc
dec
in
mov
xchg
push
aam
add
pop
push
sub
fwait
in
mov
data16
lods
inc
dec
push
repnz
sub
lods
hlt
fisttps
push
add
cmp
mov
or
leave
xor
decb
imul
ljmp
mov
and
mov
sahf
mov
dec
jo
stos
fwait
mov
cmp
in
pushf
and
adc
cmp
lds
fdivs
adc
lret
mov
hlt
jbe
mov
xchg
lds
mov
and
insb
push
daa
mov
faddl
jno
mov
or
ret
jo
adc
ret
ret
mov
sbb
or
loope
xchg
sbb
rcl
loop
jmp
cmp
push
icebp
mov
repnz
out
cli
jnp
aad
xor
lods
addb
rolb
or
pop
mov
pop
xlat
add
lods
inc
mov
lcall
mov
adc
mov
imul
or
or
imul
std
sub
mov
mov
call
sub
insb
and
arpl
pop
insb
clc
mov
cmpsl
sub
adc
cltd
arpl
lcall
sub
icebp
adc
mov
pop
mov
mov
jnp
xlat
notl
das
sbbb
sbb
fwait
jb
mov
cli
pushf
pop
jne
or
sub
add
mov
mov
pop
lea
sub
mov
jg
fs
lret
push
adc
cmp
add
addb
ljmp
int
ret
and
fisubl
lods
dec
sub
adc
ret
rcr
dec
outsb
js
cli
pop
dec
mov
ret
cmc
test
lret
lods
add
dec
mov
out
call
mov
jb
stos
test
addr16
fbld
mov
in
or
rorb
cmpsl
mov
sub
pusha
inc
adc
aas
sbb
arpl
rolb
popf
cltd
lea
fisttps
stc
cs
pop
das
sti
pop
inc
rorb
sub
shlb
pop
push
sarl
leave
and
mov
hlt
cmp
fs
mov
imul
sub
inc
mov
jae
test
jle
pop
jo
inc
pop
xchg
inc
dec
mov
push
inc
push
test
bound
mov
stos
jmp
sbb
mov
dec
jno
les
lods
out
mov
cmp
loopne
pop
lods
call
int3
mov
outsl
movsl
mov
mov
mov
or
push
inc
shll
cmp
mov
lret
pop
lret
int3
pop
mov
push
aaa
pop
test
push
dec
mov
scas
shl
ja
int3
mov
or
xorb
les
insb
dec
loopne
ret
imul
jb
add
insl
xchg
cmp
int3
fldcw
cmp
dec
aas
xor
xchg
sbb
std
push
and
fnsave
ss
rcl
mov
loopne
test
or
sub
loop
pop
sub
call
sbb
fwait
je
pop
dec
popf
fsubr
icebp
sti
int
add
aas
popf
cmp
imul
data16
and
push
jbe
cwtl
into
mov
sub
andb
pop
xchg
pushl
data16
dec
or
jl
and
aad
es
cli
pop
cld
dec
dec
dec
xlat
lock
adc
adc
fstps
bound
xchg
outsb
lret
xchg
pop
adc
test
arpl
add
adc
pop
xor
pop
out
stos
fwait
jge
stos
mov
out
fbld
outsl
xor
testl
loope
xlat
mov
iret
mov
xor
jecxz
xchg
sarb
mov
mov
fs
jae
outsl
xor
mov
push
lcall
and
sti
mov
sub
inc
scas
or
add
or
pop
push
sub
jnp
sbb
dec
into
fiaddl
push
xor
cld
pop
inc
xchg
dec
or
xor
xor
push
scas
movb
lods
into
ret
jb
mov
and
mov
xor
mov
call
cmp
mov
pop
ljmp
call
jmp
push
insb
add
sbb
stos
outsl
pop
mov
lock
aas
pop
std
out
and
dec
add
inc
int3
jp
or
mov
ret
mov
push
cmp
cmpsl
xlat
and
cmp
push
inc
jne
and
inc
lret
sbb
lret
xlat
cmc
es
lret
fnsave
jne
pop
pusha
jecxz
mov
push
mov
mov
insb
fadds
sti
outsl
les
test
into
jb
test
push
sbb
sub
lock
mov
mov
addr16
adc
sbbl
sub
mov
lea
cs
mull
enter
sub
add
ret
subl
push
pop
negl
gs
pop
out
mov
pop
mov
mov
or
add
sbb
jbe
add
push
cmp
rep
adc
pop
mov
movsb
mov
mov
sbb
cmp
fxch
sub
je
ret
jno
sub
fbstp
push
out
push
lret
in
mov
mov
test
in
lods
std
dec
imul
mov
xchg
jb
mov
xor
xor
movb
in
mov
or
sub
fistl
mov
cmp
or
pop
mov
mov
adc
mov
nop
adc
hlt
leave
xor
test
ja
cmpsl
pop
in
and
inc
xchg
sbb
nop
push
or
sarb
mov
sbb
and
test
jg
adc
ret
jbe
sbb
lahf
jne
cmp
inc
sub
hlt
adc
dec
orb
pop
int
pop
jp
adc
or
insb
test
lcall
imul
ds
pop
mov
xlat
mov
xchg
loop
outsb
adc
cmp
inc
dec
xor
push
insl
jg
js
insb
pop
and
fisubrs
push
icebp
pop
dec
aam
data16
pop
roll
fistl
inc
insb
dec
jecxz
mov
aaa
ret
push
fsubs
js
scas
add
in
rcll
jle
sub
inc
int3
push
xor
sbb
in
push
fs
adcl
int
adc
cmc
mov
fidivrl
es
cmp
adc
adc
and
xchg
stc
cmp
inc
sarb
test
mov
adc
push
mov
ret
mov
dec
pop
leave
pushf
subl
mov
xor
add
mov
mov
fistl
into
fildl
push
adc
ljmp
lcall
push
jmp
mov
dec
sub
dec
int3
decb
cmp
and
roll
dec
mov
adc
ljmp
sbb
mov
dec
xor
add
or
mov
in
mov
pop
xchg
cmp
xchg
pop
cltd
lock
mov
adc
test
push
test
lahf
test
xor
inc
add
xor
aad
cmpsl
movb
mov
orl
jmp
mov
cmp
dec
mov
pop
xor
cmp
jno
sbb
xorb
test
dec
adc
adc
iret
jo
jmp
gs
lods
sbb
and
sbb
jns
hlt
ja
push
xor
pop
xchg
inc
out
stc
aaa
or
cmc
jecxz
aas
cmp
or
push
xor
enter
out
aad
jp
push
mov
aam
push
movsb
in
shl
xchg
add
dec
pop
nop
jo
loope
lret
call
mov
psubq
repnz
lcall
outsb
loop
enter
mov
test
or
out
cmp
jg
je
mov
lock
lea
cmpsb
scas
call
push
iret
loopne
add
bound
lret
sub
je
test
lds
and
inc
pop
jle
pop
mov
or
xchg
mov
jp
gs
xor
into
or
add
out
or
into
cmp
lcall
sub
sbb
lret
sahf
sbb
jl
cmpsb
test
cltd
jae
in
mov
push
xchg
jmp
sbb
xor
pop
lcall
adc
sub
lret
jg
or
jl
aaa
jmp
dec
inc
jb
loope
push
xor
test
jo
inc
test
jmp
jb
hlt
out
jnp
stos
mov
cli
insb
cld
fwait
jns
xchg
scas
xor
in
sbb
jnp
xchg
jnp
loopne
add
push
jae
mov
mov
cmp
scas
pop
cmpb
aaa
scas
push
int
dec
jp
xor
xorb
adc
push
sbb
sub
in
cli
dec
push
add
push
mov
xchg
or
mov
xchg
jns
call
sbb
jecxz
adc
loope
sti
pop
jg
stc
xor
xchg
push
stos
and
cmpsb
out
call
popf
and
inc
divl
clc
push
ss
pushf
pop
mov
in
sarb
mov
shlb
outsb
jnp
jl
xchg
xor
sub
out
cltd
les
xor
lcall
xchg
addr16
xor
les
jl
sbb
ret
or
adc
mov
add
push
and
sub
test
nop
xchg
mov
or
lret
addr16
push
mov
sub
cmpsb
stc
mov
pop
sub
jnp
and
sbb
js
repnz
ss
out
loopne
adc
stc
fidivs
cltd
and
pop
dec
add
jmp
mov
cs
sub
cmpsl
fidivs
mov
push
dec
movl
sbb
push
dec
cs
std
mov
sbb
lea
hlt
xor
pop
inc
cld
in
and
push
repnz
bound
test
push
mov
dec
mov
sub
jnp
arpl
cmp
rorb
aaa
lock
and
aaa
movsb
jbe
int
sarb
mov
in
addl
cmp
ljmp
hlt
cli
xchg
sub
subl
jbe
in
aas
or
loop
jae
sub
pop
dec
stc
in
xor
fcmovne
pop
lcall
pop
or
inc
pop
push
inc
adc
push
dec
dec
rcr
push
stos
cmp
pop
cmp
jecxz
into
fwait
mov
mov
xor
and
or
lods
pusha
sbb
insl
ret
andb
int
mov
xor
and
jns
sub
cltd
jno
popa
mov
mov
sub
pop
out
cmp
add
push
sub
in
mov
notl
insl
and
sub
ljmp
xor
movsb
orw
add
add
jno
cld
inc
jo
fimull
addr16
clc
and
dec
fwait
sbb
jne
rcrb
lods
sub
cmp
jb
loope
pop
cmp
lcall
mov
shll
ss
iret
xor
fprem
fdivrl
mov
aad
aaa
leave
jns
xchg
mov
fwait
shl
test
pop
lret
sbbb
repz
push
cmp
mov
hlt
cmp
out
iret
gs
faddl
imul
adc
xor
jns
repz
jecxz
add
or
arpl
imul
js
xchg
jg
pop
or
jp
and
adc
sbb
icebp
or
mov
cmc
pusha
push
popa
sub
sub
sbb
mov
fnstenv
subl
mov
add
mov
lcall
jb
xlat
divl
jp
dec
jmp
push
pushl
jmp
clc
mov
imul
dec
mov
or
loopne
pop
lds
sti
outsl
mov
ljmp
xchg
mov
nop
dec
jno
jle
and
das
cmp
mov
fwait
inc
jg
dec
jbe
cmp
es
push
lret
add
scas
add
cmp
ret
lahf
xchg
fdivs
jo
jmpw
dec
fists
push
sbb
adc
jg
adc
imul
mov
fidivrs
cmp
mov
jne
scas
sbb
out
movsb
dec
aam
nop
add
xor
insb
push
dec
adc
add
push
lods
jns
out
sub
imul
cmpsl
jg
imul
flds
sbb
adc
dec
cmpsb
xchg
mov
fs
sbb
jl
mov
xlat
add
jns
pop
ss
mov
sub
inc
xor
jmp
outsb
adc
pop
ja
ss
sub
out
test
in
ljmp
cld
and
inc
lret
adc
adc
test
orb
or
in
cli
stc
pop
mov
mov
nop
mov
aad
cmp
repz
subb
je
pop
andb
fsubr
pop
or
mov
shr
xor
rcrb
push
jo
xor
jo
sahf
mov
and
daa
push
push
outsl
call
push
ja
pop
lods
jae
cmpsb
fsubs
add
push
mov
ret
stc
adc
adc
daa
jmp
jg
add
aad
ljmp
pop
add
jbe
cli
addl
cmp
xchg
pop
mov
inc
mov
adc
push
sbb
adc
cli
jbe
outsl
mov
test
ficoms
inc
or
inc
or
fnsave
jb
ret
sbb
add
xor
fcmovb
pop
dec
sbb
sarb
es
js
and
mov
mov
pusha
adc
dec
movsl
dec
sahf
jg
fwait
inc
inc
xlat
mov
push
sub
cmp
js
addr16
stc
cmp
sbb
dec
pop
leave
jb
nop
push
mov
divb
jmp
inc
push
mov
pop
xor
add
cmp
movsb
test
jne
outsl
repz
or
jecxz
cwtl
sti
xchg
mov
addr16
sahf
es
imul
ja
jmp
adc
pushf
mov
mov
sub
lcall
cmp
jle
pushf
ficoms
icebp
add
jnp
rclb
push
sub
ljmp
aam
aas
push
test
xor
div
mov
push
test
popf
sbb
loopne
loope
test
jmp
bound
jnp
outsl
lods
shlb
dec
cmp
repz
push
jne
xor
pushf
add
sbb
loope
jge
mov
testl
mov
xchg
cmp
jp
mov
mov
xchg
add
out
xor
into
mov
inc
in
aaa
ja
mov
push
fisubl
repz
jns
sub
xchg
clc
cmpsl
outsl
jnp
sbb
pop
outsb
add
insb
xchg
sti
fstps
inc
dec
cltd
fs
xchg
adc
jae
ss
cmp
mov
insb
push
andl
out
rcll
push
push
xchg
psubq
mov
or
xor
in
mov
pusha
fldt
sub
icebp
aad
adc
nop
scas
jge
add
aam
ljmp
daa
xchg
jg
push
xor
sbb
stc
add
pop
sbb
sbb
outsb
lret
or
push
subl
aaa
in
pop
into
and
movsl
add
mov
inc
aam
iret
pop
int
jecxz
sahf
jp
xchg
call
pop
push
pop
rol
ret
or
subl
mov
out
sbb
popf
xchg
inc
jmp
lcall
pop
shld
dec
in
ljmp
lods
test
dec
jo
std
idivl
outsl
sbb
mov
mov
iret
les
xor
xor
and
sarl
jecxz
pop
movsb
lock
mov
push
xchg
fs
add
push
cli
mov
out
xor
mov
dec
in
test
mov
cli
sub
sbb
pop
push
mov
xchg
fcmove
add
cmpsl
xchg
sarl
in
imul
cmp
add
outsl
or
les
sub
cmc
pop
sub
subb
daa
add
mov
adc
dec
cmp
or
add
fisttps
cmp
inc
pushf
and
imul
xchg
loopne
enter
inc
int
movsb
iret
push
jg
in
mov
scas
or
sbb
int
pop
out
mov
cmpsl
or
aam
mov
push
cmpsl
pop
push
aam
inc
fldenv
icebp
push
cltd
push
fdivrs
mov
orb
jnp
mov
in
mov
push
test
scas
mov
sahf
stc
mov
pushf
les
dec
jae
jecxz
jns
and
daa
mov
xchg
test
lods
mov
les
js
into
stos
sbbl
jnp
imul
mov
dec
and
imul
and
out
fsub
lcall
adc
mov
sub
cmp
ljmp
pop
xchg
pop
pop
sub
dec
xlat
and
mov
lods
push
dec
and
add
test
jbe
stos
shl
inc
in
aaa
push
aaa
mov
call
inc
out
mov
xchg
inc
mov
xchg
lret
inc
fwait
cltd
test
mov
sub
insb
call
and
add
push
push
add
pop
cmp
arpl
test
xchg
arpl
roll
mov
adc
lahf
jne
inc
or
jge
and
xlat
add
add
dec
inc
xchg
std
and
mov
add
mov
ss
pop
test
ljmp
test
add
fsts
clc
mov
fbstp
rcll
fcomi
int
pusha
movsl
or
jge
mov
xor
xor
xchg
lds
jecxz
mov
into
lock
push
dec
mov
insb
in
sub
push
inc
ds
or
mov
insl
inc
xor
push
pop
sub
lods
push
xor
je
pop
add
lahf
int3
enter
pop
icebp
aaa
fnstcw
jns
sti
dec
xchg
jb
xorl
mov
outsl
fldt
outsb
sbb
sbb
mov
mov
and
ret
js
cltd
test
ret
mov
dec
push
mov
sti
cmp
fstpt
sbb
int3
push
or
push
popa
mov
sti
xchg
mov
xlat
jae
add
movsb
pop
in
jle
jnp
sbb
pop
rol
push
push
es
pop
lock
movsb
xchg
push
insb
dec
jne
push
lea
jmp
jmp
loopne
sbb
movsl
sarl
xchg
lea
das
sti
xchg
daa
and
rcrb
in
fcmove
inc
mov
mov
jge
and
pop
mov
std
mov
pop
mov
jbe
insl
ds
pop
stos
mov
aaa
push
xor
and
inc
lods
fldcw
iret
hlt
adcl
out
and
pop
mov
pop
rorb
adc
cmp
xor
cmpsl
lods
push
je
loop
inc
in
sbb
pop
adc
std
push
setne
rcll
mov
test
lds
sub
dec
cmpsb
push
les
test
xor
jnp
movsb
fldt
dec
test
call
push
adc
popa
fmull
clc
jno
fsub
ljmp
jle
bound
ja
inc
dec
sub
mov
mov
clc
jb
dec
xchg
stos
inc
jmp
push
xchg
pop
imul
movsl
fldl2t
lret
dec
push
stos
jmp
xchg
xchg
xlat
ljmp
lahf
mov
fwait
stos
jl
pop
int
xchg
gs
out
call
jge
in
sbb
in
scas
dec
ljmp
cmp
dec
dec
pop
xlat
mov
repnz
mov
pusha
mov
enter
fnstcw
jl
nop
and
inc
mov
scas
stos
es
or
ret
cs
jno
jne
fidivrs
or
nop
mov
aad
inc
fldcw
push
sub
or
insl
stos
in
rclb
inc
lods
loopne
enter
pop
sbb
add
cli
cmpl
scas
cmp
mov
xor
add
xor
jb
rcrl
adc
sub
cmp
das
lods
mov
pop
sub
lret
ret
fs
mov
mov
es
mov
push
cmp
or
inc
inc
stc
test
mov
or
add
jnp
call
pop
shll
lcall
or
pop
add
mov
xchg
stc
dec
jl
sub
sbb
inc
ljmp
pop
pop
xchg
repnz
jg
adc
ljmp
adcb
adc
pop
jecxz
lret
cmc
add
jno
dec
in
loope
cwtl
jno
in
orb
jp
mov
rcrl
sub
lock
nop
aas
enter
enter
push
mov
cwtl
adc
icebp
out
lret
xor
pop
sbb
cwtl
repz
enter
dec
test
cmp
arpl
popa
push
push
dec
add
xchg
xchg
xor
or
mov
pop
jae
int
inc
or
pushf
roll
sub
dec
call
andl
pop
imul
or
insl
pop
lds
pop
popf
push
dec
mov
sub
into
ds
push
push
jmp
popl
mov
pop
pop
push
loopne
fsubp
xchg
into
jp
adc
fildl
add
scas
xchg
ud2
sti
das
and
cmp
in
mov
jl
and
fisttpll
and
push
inc
push
les
push
cmpsl
adc
xchg
add
mov
cmp
lret
mov
hlt
ss
xchg
mov
inc
add
test
iret
repz
mov
or
dec
and
cmp
mov
and
cmc
sub
and
cs
cli
lock
mov
out
jecxz
cs
add
jnp
into
inc
cmp
andb
repnz
xchg
in
sub
bnd
xchg
aaa
call
mov
out
jno
fstpt
movsl
sbbb
negl
stos
int3
adc
inc
or
mov
out
jnp
or
mov
mov
jbe
mov
cmpsb
lds
xchg
xor
aas
dec
jb
fs
cmc
push
xor
inc
int
ljmp
add
lcall
clc
and
mov
pop
jle
out
sahf
jle
or
dec
adc
xchg
dec
nop
mov
pop
leave
xchg
arpl
dec
loop
mov
mov
movsb
enter
xor
xchg
or
xor
cld
push
pop
mov
sbb
sub
inc
dec
fnstenv
inc
mov
xor
insl
dec
clc
ffree
adc
sahf
sbb
mov
xlat
push
out
mov
dec
daa
subl
aas
and
rclb
sub
or
cmp
clc
sbb
insb
fwait
jge
cs
lahf
movsb
push
sub
icebp
ljmp
pop
call
icebp
sub
xlat
xor
stc
andl
imul
popa
jo
icebp
dec
pop
int3
cltd
mov
push
imul
lret
jge
pop
jl
shll
and
push
inc
push
lods
dec
jp
int
and
test
add
shll
aas
loope
or
sub
mov
outsl
loope
adc
xor
inc
mov
xor
and
add
add
add
mov
inc
cmpb
mov
xchg
adc
add
sub
enter
shlb
call
jle
inc
mov
inc
popf
xchg
or
dec
aas
dec
imul
add
lock
dec
ljmp
test
out
jno
pop
fsubs
and
and
and
xor
in
int
xor
cmp
jb
mov
push
adc
mov
sub
icebp
aad
test
in
rolb
xor
push
adc
fisubrs
mov
mov
and
enter
dec
insl
fcmovne
mov
pop
add
cmpsl
and
into
jge
inc
xchg
mov
jle
dec
mov
stos
icebp
popf
and
negl
xchg
inc
in
outsb
sbbl
xchg
lock
test
mov
xchg
sub
sahf
mov
movsb
sbb
out
add
inc
mov
daa
stc
xchg
inc
push
test
sbb
fwait
pop
dec
push
insl
test
dec
xchg
add
js
ret
mov
xchg
jmp
imul
dec
lock
mov
frstor
and
add
xor
jnp
inc
jb
mov
repnz
gs
mov
dec
fwait
sbb
jbe
imul
and
lahf
sub
rclb
adc
and
cmp
ss
push
mov
add
ret
adc
mov
push
iret
cmc
xchg
pop
movsb
xchg
mov
sbb
mov
push
shlb
loopne
fwait
enter
call
dec
call
inc
mov
xor
cmc
cmc
jge
xlat
push
xchg
xchg
push
pop
inc
mov
pushf
pop
push
push
mov
je
in
std
pop
sub
push
mov
std
mov
lods
cmp
outsb
push
out
adc
sub
gs
push
inc
or
ret
xor
test
rorb
push
xchg
cli
push
cs
push
test
fst
dec
push
push
mov
mov
aas
mov
add
scas
fisttpll
inc
ret
js
sbb
outsl
das
jne
inc
xchg
lcall
mov
sbb
sbb
outsl
pop
jae
rcll
pop
jle
in
insb
shrl
xchg
dec
scas
pop
jg
iret
int3
pop
cmpsl
lods
bound
mov
jle
mov
jmp
pop
mov
dec
pushf
rcll
dec
dec
fnstsw
xor
inc
adc
jne
rcll
xlat
test
cs
jmp
xchg
sub
es
push
mov
clc
add
push
insb
mov
mov
and
pop
dec
pop
out
adc
leave
js
adcb
int3
ret
scas
jecxz
push
xchg
jno
sub
sarl
in
mov
jg
jl
mov
in
pop
daa
xchg
xchg
push
pop
add
jmp
sub
mov
xchg
xchg
and
aam
arpl
push
mov
jl
xchg
jb
loopne
mov
test
idivb
jp
mov
dec
aam
inc
out
test
add
xchg
or
faddl
cmp
sub
sub
pop
insb
out
fiadds
sub
mov
aam
inc
xor
ja
mov
out
mov
popa
nop
xchg
or
iret
popa
lea
xor
or
js
into
pop
mov
xchg
mov
and
dec
test
cmp
or
js
jp
mov
decl
std
pop
pop
test
pop
pop
mov
xlat
outsb
imul
jle
lods
sbb
iret
inc
jne
pop
out
add
rcrb
loope
inc
pop
xchg
pusha
mov
outsl
lds
shrl
jmp
sarb
ret
mov
sti
cmp
xor
in
ret
insb
mov
movsl
les
xchg
or
dec
lcall
lock
mov
loopne
leave
ja
cmp
jmp
pop
mov
xor
dec
or
rolb
push
sub
inc
cmp
test
mov
clc
push
loopne
sub
jmp
leave
cwtl
mov
dec
inc
test
repnz
sbb
fdivrl
mov
movsb
mov
ljmp
mov
dec
loopne
loope
mov
or
mov
popa
adc
pop
enter
sub
int
js
pop
add
stc
mov
xchg
cmc
cmpsl
jl
inc
sub
jg
movlps
inc
mov
sti
sti
add
shll
or
ror
ljmp
or
ret
stos
cmpsl
sub
pop
imul
gs
and
sub
movsl
stos
sbb
xchg
sub
push
cmpsb
or
repz
stos
pusha
repz
fisubs
ret
mov
loopne
and
add
pop
cmp
nop
js
cmp
dec
inc
mov
mov
xchg
mov
sbb
lret
repnz
shlb
mov
push
sub
adc
cmp
sti
sub
mov
js
sub
sub
popf
push
or
mov
lock
imul
inc
popa
lret
pop
pop
inc
mov
shll
cmp
inc
idiv
cmp
push
mov
cmp
rclb
pop
cmp
cmpsl
cmp
inc
cwtl
lock
popl
push
cwtl
adc
mov
cmp
loop
lahf
cmp
or
sbb
out
cmc
add
push
inc
mov
inc
push
pop
dec
lret
lahf
outsl
stos
ds
imul
iret
stos
push
rorl
int3
pop
fwait
cmpsl
xor
aad
mov
sahf
enter
bound
fcomip
fcoml
or
xor
xor
ljmp
mov
xor
cli
repnz
dec
repnz
or
inc
je
arpl
push
add
adc
xor
test
pop
lret
mov
lahf
movsb
outsb
in
add
popf
dec
inc
dec
push
sbb
fldl
sbb
les
leave
in
aas
xor
out
arpl
sbb
mov
std
or
nop
cmp
stos
fdivrs
movsb
jecxz,pn
xchg
xchg
arpl
sub
in
lods
dec
out
repz
inc
std
pop
xlat
mov
sbb
sub
movb
jge
stos
sbb
in
mov
jnp
test
jge
fimuls
xchg
out
pop
push
ja
fsubs
xchg
sti
outsl
orb
push
cltd
enter
push
xchg
mov
les
std
outsl
sub
mov
lds
aas
loop
aad
add
cltd
cltd
cmp
push
xchg
daa
add
rclb
jbe
xchg
jmp
or
add
in
mov
into
xchg
sub
in
jnp
incl
add
out
cmpsb
loopne
and
frstor
adcb
xchg
es
and
icebp
int3
sbb
cmc
lcall
and
stos
xor
dec
sub
cmpsl
jge
data16
mov
ror
push
inc
xor
arpl
sbb
dec
cmpsl
aas
popf
dec
pop
adc
push
xchg
xlat
cmp
andl
std
lods
xchg
pop
insb
fildl
push
jmp
pop
aam
push
shrb
imul
push
mov
jns
imul
arpl
fs
fwait
in
out
push
pop
jle
jb
bound
jne
inc
les
adc
aad
orb
mov
std
or
cmp
xor
mov
std
inc
out
dec
cmc
pop
fidivrs
jg
fsubrs
aas
test
shrl
mov
fcmovb
hlt
cli
aas
pusha
in
stos
stc
adc
sbb
jp
popa
loop
and
decl
push
fsubs
xchg
dec
add
aaa
or
shlb
mov
cmpsb
roll
shll
pusha
call
rorb
mov
movsl
push
xchg
dec
leave
push
jo
pusha
and
int3
xchg
cmp
mov
adc
mov
stos
sub
cwtl
aad
add
xchg
loopne
hlt
je
push
push
fistps
scas
dec
scas
dec
mov
fwait
jne
cmpb
inc
jne
fildl
jae
aaa
lret
dec
jbe
movsb
inc
out
int3
jne
xlat
dec
inc
jbe
nop
sbb
mov
icebp
pushf
movsl
movsl
mov
subb
or
jmp
and
js
and
dec
jae
pushf
je
mov
stos
int3
outsl
mov
rcpps
cmp
insl
cmpsb
mov
test
into
pop
cmc
lock
xchg
pop
shrl
lret
fisubl
sbbl
push
imul
cmpsw
cltd
out
dec
or
mov
pop
cmp
scas
mov
dec
mov
fidivs
mov
std
insb
sub
pop
popf
mov
pop
pushf
or
negl
xlat
and
cmpsb
sahf
mov
jbe
xor
loope
cmp
push
jg
ljmp
lds
pop
insb
ret
cmpsb
sbb
or
repnz
aas
xor
jl
call
pop
out
mov
mov
sbb
movsl
movsb
cld
out
rcrb
mov
push
jg
and
xchg
cmp
cmp
int3
scas
movsb
aas
scas
jg
call
sti
push
push
add
inc
int3
add
test
jne
and
jmp
mov
adc
ficompl
or
fucomip
in
sbb
push
hlt
cli
xchg
loop
rorl
lea
test
nop
lods
pop
sub
sbb
shlb
inc
xchg
loopne
lock
xor
loopne
pop
dec
xchg
lods
push
fists
jmp
out
pop
mov
pop
mov
sub
cmp
mov
imul
push
dec
sbb
lret
imul
inc
dec
stc
out
loope
int3
imul
inc
sbb
push
outsl
jecxz
ret
in
pop
mov
add
jnp
adc
iret
cs
or
test
jecxz,pt
fmulp
inc
ja
jle
add
cltd
sub
outsb
in
out
jl
outsl
loopne
cmp
push
pop
stc
jp
sub
in
adc
in
and
pop
aaa
inc
or
gs
xor
and
xlat
cmp
cmpsl
mov
cmpsl
add
push
in
xchg
or
ret
xchg
jb
lds
call
pusha
scas
sahf
sub
hlt
std
mov
jne
test
movsl
out
pusha
ret
nop
push
lret
mov
xchg
popf
ss
push
repnz
lock
adc
jae
xor
xchg
sbb
add
rol
mov
adc
bound
xor
test
push
jno
dec
loopne
jmp
int
sbb
mov
jmp
je
lahf
and
std
sti
lods
cmc
or
js
sbb
test
mov
es
cmpsl
xchg
fsts
aad
lods
inc
mov
xchg
jb
adc
dec
scas
push
dec
movl
mov
push
sub
fs
cmpsb
mov
mov
into
sbb
inc
mov
pop
lret
sarl
adc
add
xor
push
jo
iret
ja
in
jno
ficoml
cwtl
sub
mov
addr16
movsb
stc
ret
sahf
mov
mov
arpl
sbb
pushf
push
mov
das
mov
push
push
pop
ret
aas
loopne
das
test
in
mov
sbb
fxch
add
pusha
or
and
mov
inc
xchg
pop
fdivp
mov
lret
push
lods
jmp
scas
mov
rcrb
in
leave
lods
cs
lods
jo
cltd
pop
jno
dec
fisubl
add
movsb
cmp
out
jo
jno
out
fcoml
cmc
xor
mov
sarb
cltd
or
scas
sbb
mov
in
mov
cmpb
and
mov
scas
cmp
push
sub
int3
daa
arpl
mov
ret
aas
push
mov
mov
sbb
add
out
pop
jae
out
rcrb
cmc
ljmp
ret
cli
int3
adc
jns
sub
dec
dec
pop
into
loop
rol
jbe
dec
pop
inc
or
mov
addr16
lea
clc
scas
xchg
push
mov
and
leave
pop
loop
mov
mov
and
mov
dec
pop
pop
xlat
pop
push
daa
push
and
fsts
mov
sahf
repnz
inc
jp
push
mov
movsb
push
test
in
adc
sbb
add
inc
lret
mov
aad
add
add
hlt
orb
push
arpl
dec
insb
in
fadds
sbb
push
sbb
fbstp
rol
push
hlt
les
sbb
sub
sub
imul
adc
mov
push
scas
arpl
and
test
call
inc
repnz
xor
sbb
ret
in
cs
enter
dec
or
fnstsw
std
js
sub
or
dec
lods
in
pop
es
mov
jecxz
stos
inc
cmp
pop
jnp
fldl
push
mov
imull
xchg
mov
mov
sahf
mov
sub
add
jo
les
mov
adc
cmp
inc
imul
dec
mov
outsb
sub
add
jnp
movsb
jb
stos
cmpsl
das
add
ficoml
inc
inc
imul
push
fists
nop
insl
xchg
dec
stc
push
rcll
xor
adc
out
fs
out
data16
daa
pop
mov
sahf
fs
fwait
xchg
mov
fwait
adc
loop
xor
gs
inc
insb
gs
shll
xchg
aam
jno
das
pop
or
insl
lock
popa
sub
dec
dec
inc
jo
hlt
or
aam
cmc
arpl
in
xchg
sahf
or
push
jno
xchg
and
mov
mov
in
add
daa
adc
lahf
adc
aad
push
xor
or
xlat
pop
adc
add
xchg
pop
insb
or
movsl
std
cmp
call
fbld
sub
sarl
rcl
push
inc
fisttpl
push
fsubrs
inc
aas
mov
push
sub
and
mov
sub
jmp
out
iret
in
cltd
xchg
clc
aam
lcall
and
movsb
movsb
lods
call
cmpsl
jg
test
dec
dec
std
pop
mov
cmpsl
sbb
and
mov
popa
out
rcrb
andb
pop
iret
sub
sub
in
push
dec
std
das
push
add
scas
xchg
add
jp
mov
cwtl
mov
shrb
xchg
or
data16
loop
cli
lret
pushf
iret
jmp
pushf
jo
or
dec
dec
outsb
jge
aas
pop
stos
imul
and
adc
nop
lds
dec
mov
sbb
sar
xchg
push
push
jecxz
pop
sbb
outsb
mov
dec
out
push
jg
cltd
sub
mov
arpl
fisubrs
jno
int3
push
iret
ds
pop
ja
addr16
nop
cmp
cmp
mov
mov
sub
ja
xchg
or
dec
or
mov
pushf
adc
into
stc
dec
mov
leave
ret
push
dec
mov
mov
push
fidivl
insl
mov
movsb
in
lods
sub
xchg
jb
and
add
pop
pop
pop
dec
dec
stc
test
fndisi(8087
shlb
dec
or
sub
push
and
sub
or
shr
int
push
ja
mov
inc
mov
mov
lods
adc
and
xchg
mov
fmuls
inc
jno
sbb
inc
repz
push
fcomps
dec
fbstp
lds
imul
adcl
mov
das
outsl
mov
js
dec
dec
mov
popa
or
popf
je
dec
outsb
jne
adc
pop
push
icebp
xlat
adc
cmp
bound
push
mov
push
data16
stos
and
xchg
std
sub
add
inc
js
adc
pop
xchg
inc
add
aad
inc
mov
add
lods
dec
add
fwait
js
push
dec
cmpsb
jmp
push
pop
xchg
push
sahf
fs
lods
and
adc
jno
adcl
loop
out
test
push
cld
mov
cltd
push
xchg
jmp
adc
pop
push
mov
and
insl
cs
mov
lods
sub
ljmp
or
sbb
inc
in
mov
and
sbb
push
xorl
outsb
sbb
dec
aas
jmp
imull
or
xchg
sub
fistpll
xorb
sti
call
stos
aad
push
mov
sbb
pop
cmp
sbb
pop
inc
inc
insb
cmp
xchg
mov
testl
inc
sbb
push
sbb
sub
lds
push
xor
adc
adc
cmp
push
pop
sbb
data16
xchg
sub
pop
enter
cmpsl
imul
int3
adc
jmp
sbb
lcall
popf
cmp
mov
xchg
lret
jb,pn
xor
outsl
aas
pop
mov
movsl
stc
mov
mov
test
ljmp
jo
push
aam
int3
data16
xor
outsl
inc
xchg
loopne
movsb
jns
pop
push
lret
dec
ljmp
add
and
cmpsl
mov
mov
pop
cmpsb
pop
iret
aaa
sbb
or
dec
lea
sbb
or
cli
and
xchg
out
or
call
dec
call
ret
and
add
xchg
mull
xor
cld
rcr
fnstenv
inc
mov
mov
or
pop
shll
jp
lds
and
mov
int
jns
push
mov
jo
cmp
dec
cmp
xor
mov
cld
jp
lret
adc
pop
dec
push
pop
subl
int
fidivrl
mov
jg
cmpsb
fwait
xor
lahf
xchg
add
jl
dec
pusha
dec
ret
or
mov
sbbl
dec
xor
and
dec
cli
mov
gs
scas
dec
fisttps
popf
inc
mov
jno
pop
jle
js
iret
mov
pushf
rcll
test
mov
bound
inc
repz
inc
test
mov
stos
aaa
out
out
je
push
movsb
jl
rcl
cmp
mov
inc
loope
mov
push
pop
mov
xchg
scas
mov
out
inc
sub
or
jl
mov
mov
outsb
hlt
stc
jp
or
xchg
push
xchg
pop
mov
arpl
jnp
test
aas
and
or
add
pop
pop
mov
icebp
pop
pop
inc
loop
in
xchg
add
xchg
insb
in
cwtl
push
nop
cmp
dec
or
or
or
adc
xchg
movsb
xchg
jl
bound
dec
clc
mov
dec
cli
fsubrs
push
out
sbb
inc
mov
lods
pusha
cmp
dec
adc
adc
mov
cmpsl
arpl
cltd
das
dec
jae
outsl
sub
mov
mov
inc
inc
stos
movsb
dec
lret
mov
gs
push
mov
push
or
imul
bound
mov
test
jae
mov
mov
mov
ds
fidivrl
mov
pop
jmp
xchg
inc
push
stos
call
sbb
and
cmpsl
inc
jae
js
cltd
test
mov
pop
jb
addb
mov
insl
inc
std
push
push
push
push
push
mov
or
repnz
addr16
sahf
sahf
enter
arpl
pop
dec
ljmp
loopne
jg
out
cmp
xor
xlat
cmpsb
sbb
bound
ja
lret
pop
sarl
out
mov
pop
pop
rcrb
lret
imul
fstpt
or
insb
sahf
cmp
daa
xchg
lea
add
stos
in
inc
pop
lret
sarl
inc
mov
out
push
inc
pop
stos
cmp
mov
mov
fldcw
out
movsl
mov
push
les
cmp
xchg
out
mov
inc
mov
pusha
mov
ja
rcr
test
mov
sub
ret
xor
add
mov
xor
mov
repz
and
xchg
xor
xor
fidivl
stos
fisttpll
dec
jns
or
jl
fwait
sbb
sbb
xchg
sub
mov
out
mov
xlat
mov
lcall
popa
in
mov
scas
gs
mov
cmc
repnz
mov
push
cmp
xor
adc
andl
xchg
jno
inc
out
outsb
sti
rcrb
nop
lret
leave
jge
movsl
add
jge
inc
pop
cs
es
sub
sahf
scas
lret
scas
xor
xor
cmc
ja
pop
repnz
into
scas
add
or
ret
sub
and
in
cmp
stc
std
outsl
cmp
popa
xor
jb
filds
sbb
mov
test
mov
push
cmp
push
and
decb
fsubs
mov
scas
orl
insb
xor
sahf
stc
into
mov
sti
adc
and
pushl
cmp
push
cmpsb
sub
cmp
cmp
xchg
xor
adc
xchg
push
mov
stc
xorb
testb
aad
xor
lods
jecxz
inc
not
outsb
jno
test
mov
lods
icebp
jmp
dec
inc
pop
insb
pop
sub
dec
mov
out
fcmovne
inc
adc
pusha
inc
adc
push
mov
ret
lods
cmp
aam
cmpsl
adc
das
adc
mov
fwait
data16
jo
leave
cld
aad
or
xchg
rcrl
cmp
into
cmp
addr16
push
fldl
or
push
aam
stc
xor
stc
arpl
add
lea
pmulhw
sbb
push
fwait
xchg
lret
rorl
cmc
arpl
mov
mov
fsubs
and
inc
sbb
push
add
xchg
les
iret
xchg
cltd
jg
sti
js
push
stos
jmp
xchg
pop
or
je
int3
sbb
clc
xchg
lods
or
inc
lahf
push
sub
dec
pop
cmpsb
mov
cmpsl
xor
lock
xchg
or
ret
dec
mov
and
cmp
add
out
xor
sub
jne
fsubs
mov
mov
mov
out
lahf
sbb
mov
jnp
cmp
push
jns
repz
orl
sbb
ret
or
insb
flds
jp
loope
xchg
push
out
leave
xor
push
or
and
cmp
xor
sbb
jne
sti
push
cmp
mov
dec
mov
pop
and
lock
pop
pop
dec
mov
mov
outsl
xor
imul
pop
and
mov
or
lods
mov
sahf
jp
pop
imul
mov
lret
outsb
pop
pop
sub
int
inc
addl
mov
push
sbb
hlt
aaa
in
movsb
leave
xor
mov
popa
sub
aam
or
fs
pop
movsb
enter
push
or
jl
jmp
sub
dec
sahf
outsb
idivb
outsl
mov
stos
shrb
sbbl
jno
call
or
test
cmp
sbb
and
rorl
data16
adc
popf
loope
mov
pop
mov
clc
cmp
xlat
loopne
and
stos
int
clc
inc
jp
jbe
mov
push
or
xchg
adc
mov
inc
jge
adc
test
add
sti
insl
inc
loop
stos
leave
sahf
loopne
mov
push
push
mul
gs
addr16
je
sbb
lret
std
imul
fisubl
ficomps
fwait
jbe
divb
roll
pop
xchg
in
orb
jae
popa
add
aaa
aam
fld1
pushf
jo
rolb
hlt
sub
push
orb
inc
ja
es
and
test
pop
lods
out
pop
fstpt
adc
xlat
dec
out
fs
xor
xchg
test
loope
notl
mov
test
jbe
and
mov
xchg
arpl
imul
scas
adc
popa
sar
adc
out
int3
jmp
adc
int3
jg
les
mov
xchg
sbb
or
pop
popf
pop
imul
cmp
mov
popf
popf
sub
add
and
pushf
ja
cmp
incb
sbbb
mov
ficoms
pop
add
arpl
xor
push
std
jo
mov
into
pop
int
jns
data16
jne
es
mov
nop
leave
add
movsb
sub
cmc
mov
ret
sub
inc
pop
xor
jae
es
sti
mov
das
mov
push
push
adc
mov
and
mov
fdivs
xchg
xchg
push
sbb
in
jo
pop
hlt
subl
cmp
cltd
mov
pop
jle
sbb
adc
int
xor
mov
add
insl
cmp
mov
dec
loop
mov
lahf
mov
dec
add
sub
push
mov
pop
cwtl
ret
pop
mov
mov
mov
out
cld
imul
pop
adc
xchg
jae
push
pusha
pop
fiaddl
or
jp
into
xor
mov
jmp
ljmp
aad
sbbl
das
sbb
icebp
jl
loopne
mov
cmp
mull
jnp
jns
push
mov
or
mov
xchg
sbb
push
movsl
cwtl
jbe
or
mov
pop
jb
rcr
push
fnstcw
jl
push
inc
and
ja,pn
into
dec
sbb
rcl
sub
outsb
sub
cld
outsb
sahf
ja
jae
push
xor
inc
jbe
add
dec
pushl
dec
add
xchg
rolb
inc
mov
loop
xchg
sarl
mov
xchg
sbb
jns
or
or
bound
in
mov
adc
dec
sbb
icebp
dec
rcrb
inc
xlat
or
dec
xor
lds
xor
mov
or
mov
inc
mov
in
fs
sbb
sbb
push
xchg
call
aad
mov
repz
pusha
inc
jl
in
in
add
mov
mov
fs
leave
jg
inc
mov
cld
rclb
jl
cmp
shll
pop
loope
adc
xchg
jl
aam
fstpt
xchg
add
xchg
mov
outsl
mov
cmp
cwtl
div
rorl
movl
add
xchg
xchg
push
add
aas
test
in
mov
in
int
fisttpll
sti
push
inc
jp
inc
inc
sbb
data16
sti
mov
dec
dec
lahf
gs
adc
mov
int3
and
jbe
jg
repnz
dec
ljmp
dec
incl
mov
inc
loopne
icebp
and
mov
cmp
mov
mulb
jno
sbb
into
scas
scas
pop
pop
inc
cmp
in
das
and
sets
dec
dec
xchg
inc
test
loopne
pop
mov
sbb
jg
sahf
mov
in
sbb
jb
js
hlt
add
and
movsl
in
adc
test
fcoml
push
outsl
push
sbb
add
icebp
mov
aad
lods
pushf
pop
sbb
js
jnp
push
repz
inc
jge
mov
sti
sbb
sub
and
sub
mov
imull
cs
xchg
lcall
fistpll
lock
imul
test
dec
jmp
test
pop
xchg
pop
xchg
movsl
sub
leave
inc
mov
test
add
mov
push
push
dec
adc
sbb
call
outsl
jle
adc
push
push
mov
adc
xchg
clc
popa
jmp
mov
mov
pop
jne
mov
mov
xor
or
punpckhwd
jno
mov
jbe
cli
sbb
pop
sub
mov
inc
repnz
fnsave
ljmp
js
sbb
movsb
sub
lds
or
mov
jae
sub
orb
aam
xor
fwait
ljmp
add
sbb
sub
hlt
pop
ljmp
dec
ficoms
push
shlb
mov
sbb
jp
add
push
xor
mov
push
mov
ljmp
clc
ds
lret
xchg
popf
insl
in
lea
mov
test
sub
xchg
fisttpl
cmp
aam
add
bound
test
js
stc
fstpl
pop
pop
xlat
mov
add
aas
add
out
xchg
xor
adc
inc
xchg
sbb
aaa
add
mov
xchg
sbb
int3
sarb
lcall
inc
add
lret
and
push
rcrb
out
xor
int3
adc
scas
cli
cltd
call
mov
sbb
aaa
jne
cs
xchg
ror
pop
xor
mov
outsl
pop
test
lock
xlat
xchg
sbb
out
mov
fisttps
mov
pop
mov
test
jno
jae
cmp
jecxz
jnp
lret
in
out
mov
cmp
ss
leave
push
int3
subb
xchg
fnsave
int3
adc
push
rclb
xor
lods
gs
sti
jbe
fmulp
and
and
sub
mov
or
jmp
ret
fwait
ljmp
mov
mov
pusha
scas
daa
jl
shl
outsl
push
add
sysret
insl
insb
push
add
scas
test
fsubl
or
mov
sahf
adc
mov
daa
lcall
and
call
inc
shrb
ss
jecxz
pop
or
fstpt
push
push
mov
sub
pop
test
inc
nop
sbb
lret
imull
jo
pop
or
cmp
sub
dec
rcr
and
test
das
fadd
iret
dec
or
mov
xchg
ds
in
int3
inc
cli
fdivr
sub
dec
jge
xor
and
cmp
mov
fdivrs
push
lods
les
cmp
aas
cmpsb
inc
xchg
out
mov
aaa
mov
mov
dec
mov
scas
adc
or
fdivp
fcompl
and
push
mov
cmp
dec
leave
cmc
outsl
inc
cli
inc
cmp
divb
sbb
add
sarl
insl
jne
xchg
inc
ds
mov
pop
loope
or
push
mov
aaa
mov
daa
xchg
xchg
sub
sub
xchg
in
jns
inc
popa
fstps
das
jmp
sahf
mov
cmc
xchg
repnz
jl
push
push
adc
fistpll
or
cmp
and
jge
aaa
stos
sub
sar
mov
test
decl
imul
ss
test
ljmp
inc
mov
adc
test
loope
xor
sub
loope
add
scas
sub
adc
push
mov
sbb
in
inc
idiv
stos
cld
bound
lea
loope
cwtl
aas
cmp
in
sub
gs
xor
repz
mov
lret
push
inc
fcoml
cld
jmp
push
cmp
mov
add
jne
lods
sbb
enter
test
or
xlat
daa
adc
add
dec
sbb
flds
pop
jge
loop
pop
test
imul
loope
lcall
pushf
sbb
sub
popa
xor
fsts
shrb
xor
loopne
loopne
xchg
push
lods
and
daa
inc
add
sub
sub
dec
repz
sub
lock
ret
out
dec
push
push
pop
cwtl
adcl
test
cltd
sbb
lea
lret
cmpsb
pop
lret
mov
stos
outsb
ss
inc
mov
aaa
jecxz
sbbb
shl
sbb
insb
pop
xchg
cmp
scas
clc
aas
inc
aam
sub
les
jg
cmp
adc
add
cmp
sbb
mov
inc
out
sub
pop
xor
jmp
call
out
push
push
daa
imul
in
sub
scas
ds
cmp
jns
cmc
sti
dec
or
xor
cmpsl
adc
sti
andl
ja
push
xchg
je
adc
and
jmp
cmp
lods
push
aam
popl
ljmp
sbb
leave
dec
movsb
incb
pusha
ss
lock
adc
inc
fldt
inc
add
mov
push
popa
push
cmp
xchg
push
sbb
add
stos
aaa
frstor
clc
in
aaa
push
mov
xchg
mov
stos
aad
mov
call
gs
les
movsb
mov
int3
call
cltd
cs
jno
push
test
xor
imul
xor
and
mov
lock
insb
jnp
or
inc
cli
out
mov
aaa
pusha
dec
call
and
adc
mov
repz
mov
sub
lret
stc
push
push
rcrl
jmp
xor
scas
daa
cmpsb
mov
aam
cmp
andl
flds
inc
js
cmp
mov
mov
roll
dec
cmp
sbb
mov
push
fstl
xchg
outsb
into
cld
xchg
mov
and
ficoms
mov
xchg
or
xlat
jns
outsb
gs
loopne
mov
pop
add
inc
sbb
cmp
dec
mov
or
jge
lret
and
cmp
cs
icebp
push
clc
fdivrs
jnp
faddl
shl
aad
xchg
in
mov
leave
mov
sub
mov
arpl
pop
int3
cmpl
dec
xor
adc
fldt
add
pop
rcrb
push
sub
add
xor
push
adc
or
aaa
dec
pop
inc
and
xor
mov
fldt
and
inc
xor
leave
push
jp
out
pop
jbe
xor
inc
aam
ljmp
dec
push
cmpsl
mov
add
insl
mov
pop
pop
shlb
sub
add
xchg
xchg
ljmp
loope
mov
xor
pop
dec
push
push
or
sahf
outsl
hlt
lret
in
cs
mov
pop
and
clc
inc
or
cmp
cli
sahf
jno
nop
adc
push
shrl
mov
and
mov
sub
mov
adc
jns
mov
pushf
testl
mov
push
xor
xor
or
adc
negb
and
fstpl
inc
mov
add
cli
inc
xor
pop
repnz
cmc
in
dec
sub
testb
sub
mov
dec
mov
xor
cltd
lahf
cmp
push
fstl
xor
ja,pt
inc
or
xchg
fstps
stos
mov
mov
test
pop
inc
mov
mov
and
cmpsl
dec
sub
loop
sub
lea
mov
ret
cmp
mov
mov
inc
pop
jmp
push
imul
jbe
add
push
add
addl
hlt
lret
ljmp
lret
pop
lea
shrl
pinsrw
jo
push
imul
cld
call
sub
sub
jp
popa
fdivl
pushf
xor
in
lcall
loope
fidivl
xlat
push
inc
das
cmp
scas
in
xorb
sbb
dec
lahf
ljmp
repz
es
test
jecxz
mov
and
xor
or
lock
jp
lahf
pusha
mov
sub
push
xor
mov
dec
rolb
out
movsb
pop
sub
test
stos
in
hlt
stos
fmull
adc
lret
inc
fcompl
jmp
sbb
fisttps
xchg
icebp
stos
mov
mov
fnsave
dec
xchg
adc
xchg
jg
sti
xchg
add
jecxz
mov
fistpl
enter
adc
inc
push
rcrb
push
addr16
arpl
jne
pusha
cmp
sbb
push
inc
or
jb
shll
inc
fwait
inc
jno
js
mov
gs
xor
jmp
repnz
mov
addb
mov
adc
dec
shlb
popa
dec
fwait
stos
mov
notl
inc
mov
sbbl
vandnps
mov
sbb
pop
cmp
enter
push
repnz
add
lea
dec
sub
pop
inc
repz
dec
insl
cmp
jo
jp
ss
fwait
dec
adc
xchg
inc
sbb
xchg
add
daa
fistpll
jns
rcrl
mov
jmp
pop
cmpsb
xchg
mov
sub
aas
and
or
push
clc
jns
push
bound
xchg
xor
add
jmp
and
jecxz
xchg
adc
movsb
sbb
add
cmp
sub
es
fiadds
push
jne
inc
icebp
adc
push
mov
fwait
sub
pop
cwtl
pop
roll
imul
add
out
inc
mov
ss
insl
inc
js
push
hlt
jmp
fwait
cmpsb
ljmp
data16
xor
out
push
dec
and
lahf
push
xchg
sahf
stc
ficoms
fmul
add
in
out
pop
push
dec
adc
sub
les
rolb
or
js
sbbb
and
repz
fnstenv
cmp
inc
cs
jae
push
arpl
into
mov
jecxz
mov
jno
pop
pop
mov
out
sbb
clc
cwtl
xchg
iret
cmp
aad
xchg
jb
out
mov
xchg
adc
add
cmp
test
or
dec
pop
and
imul
in
std
nop
lds
xchg
je
jp
sahf
push
xchg
mov
or
adc
ret
pushf
jle
repnz
test
call
mov
stos
fbstp
jns
mov
push
jno
pop
mov
pushf
and
and
orb
sub
sub
jo
adc
jge
mov
mov
mov
stos
loope
lret
inc
sbb
es
fidivrl
add
divb
mov
lahf
dec
iret
cmpsl
add
and
loop
aam
pop
mov
xchg
gs
enter
mov
vandnpd
sub
cli
sti
mov
sub
pop
aaa
cmc
dec
fists
push
aaa
xchg
pop
das
shl
cmpsl
shrb
pop
push
xor
mov
pusha
jae
sti
push
les
and
bound
or
aad
outsl
mulb
pop
loop
cmp
inc
or
and
es
ss
sub
push
pop
divb
mov
outsb
and
loope
xchg
add
jg
dec
dec
pusha
jb
test
sbb
xor
push
pusha
aad
jmp
mov
mov
les
inc
scas
cltd
xchg
add
lahf
xchg
or
ret
aas
lret
pop
jnp
push
dec
mov
adc
push
add
daa
push
addl
cld
fisubrl
dec
xchg
repnz
rcl
adc
enter
sahf
xlat
insb
in
mov
lock
add
push
cmp
mov
call
xchg
jbe
push
and
lea
xchg
out
xchg
sbb
sbb
test
test
cs
out
pop
or
int3
loop
cmp
aam
xor
ljmp
xchg
jl
xor
mov
sarb
inc
jge
outsb
lock
dec
pop
js
leave
mov
and
xchg
jb
fcompl
into
into
jl
cmp
mov
sub
jp
xor
or
pushf
jl
popa
push
out
mov
fildll
mov
test
dec
jp
push
rcrb
out
shl
aas
add
outsb
mov
movsw
leave
sub
push
dec
cld
iret
inc
pushf
or
ljmp
iret
enter
cmc
leave
sti
ror
dec
lret
cld
or
jmp
sbb
rorb
std
dec
or
jl
or
aas
add
mov
and
jl
and
ljmp
mov
loopne
push
pop
mov
addr16
flds
xchg
cltd
mov
rolb
leave
stos
scas
dec
jns
test
dec
and
int3
cmp
sbb
test
jnp
clc
fisttpll
push
pop
sub
test
lds
xor
sub
daa
push
jge
mov
mov
gs
adc
pop
dec
sbb
shll
push
aam
inc
sbb
inc
mov
aas
movsb
scas
mov
xchg
ret
scas
add
dec
xor
adc
and
aas
xchg
xlat
fildl
ja
scas
sub
adc
aas
pop
push
push
lock
jp
push
in
fsubs
mov
mov
lods
mov
std
push
scas
gs
call
fdivrs
xor
mov
add
and
dec
notb
pop
or
push
adcb
imul
xor
idiv
fadds
lcall
out
jg
ss
scas
cld
push
inc
add
sbb
sub
mov
or
pushf
or
fcompl
mov
fcomi
mov
jl
sub
mov
pop
push
lock
aaa
sub
cmp
mov
push
add
fwait
mov
pop
sub
into
or
xor
call
mov
add
enter
outsb
in
push
and
adc
jle
nop
push
scas
mov
inc
out
sbb
scas
xchg
clc
cmp
dec
cmpsb
xor
jae
cs
enter
and
push
cmp
pop
dec
xchg
mov
add
adc
dec
xchg
push
jb
sbb
sub
mov
addb
int3
adc
in
xor
push
and
scas
mov
fxch
inc
test
sbb
mov
xorb
xchg
pushf
or
pop
mov
popa
xor
lret
jecxz
scas
cmpsl
mov
test
xchg
data16
leave
xor
ja
ret
pop
or
jns
pop
mov
and
clc
xadd
mov
push
jae
inc
xchg
xchg
cmpsb
xchg
aas
ds
jnp
into
adcl
adc
inc
mov
jno
push
clc
inc
mov
rep
xlat
nop
test
mov
nop
nop
in
mov
in
imul
nop
lea
pop
jno
ss
shl
loopne
test
bound
cmp
iret
sarl
lods
mov
jo
stos
dec
out
mov
inc
sti
adc
shlb
inc
out
pop
pop
pop
aad
test
add
mov
sub
roll
je
add
or
cmp
daa
mov
push
rclb
call
adcb
and
nop
sbbl
xor
push
inc
in
xchg
mov
pushf
js
ja
add
fxam
cld
in
fneni(8087
fwait
dec
lret
enter
push
dec
inc
cli
in
push
clc
sub
mov
in
xor
push
push
xchg
xorl
loopne
jmp
sahf
lret
push
shlb
mov
dec
and
pushl
pop
notl
sbb
in
xchg
cmp
mov
test
mov
mov
cmpsl
push
outsl
pop
push
out
and
sahf
mov
xchg
mov
xor
leave
dec
loope
sub
dec
int
sarb
xor
dec
in
jg
mov
or
fs
jg
daa
lea
or
lahf
mov
shl
iret
popa
push
dec
jmp
mov
push
out
imul
into
popf
push
movsl
lea
pop
mov
lea
or
ja
shl
jl
pop
add
adc
movsl
xor
xor
in
ficoml
jb
ret
push
and
fs
scas
jecxz
pop
sbb
xchg
arpl
xchg
dec
xchg
imul
pushf
mov
stc
mov
aas
sub
daa
push
cld
js
lea
cmp
sbb
push
pop
fisttps
push
iret
push
imulb
lods
cwtl
push
dec
frstpm(287
mov
mov
mov
pop
cli
xchg
xor
ret
iret
repz
mov
das
pushf
call
mov
mov
in
lret
sub
in
cmp
lret
hlt
mulb
fwait
sub
or
add
testl
mov
lahf
cwtl
mov
or
enter
lods
lahf
outsb
pushf
push
mov
xchg
dec
flds
cvtps2pd
add
loope
cld
mov
stos
test
fnsave
outsb
pop
adc
pop
jmp
aas
pop
cmp
sahf
adc
dec
push
jecxz
and
shll
test
and
or
xchg
scas
xchg
cmc
jge
test
lret
das
or
pusha
dec
add
loope
daa
adcb
sbb
mov
pop
sbb
mov
mov
ffree
xlat
push
inc
insl
mov
adc
mov
cmp
ja
and
mov
jg
fldenv
sbb
push
lock
outsb
push
mov
sbb
xor
lret
add
out
cmp
imul
dec
bound
lret
mov
push
pop
sub
or
icebp
addl
int3
sbb
push
jg
pop
xchg
mov
fwait
add
call
push
mov
lret
jp
mov
in
jecxz
icebp
lret
fstpt
out
push
das
sub
push
popa
roll
inc
imul
jle
and
cltd
lcall
jo
or
sti
xchg
mov
xor
fistpll
jae
insl
in
push
mov
insl
sti
fbstp
push
lods
push
aam
push
test
mov
insb
jecxz
aaa
xor
sahf
out
add
subb
movsl
mov
push
aad
sahf
imul
pop
or
roll
or
es
aaa
ret
in
and
lods
js
divps
outsb
rcll
outsl
mov
sbb
sbb
stos
mov
xor
inc
pop
and
js
sub
dec
cwtl
xchg
add
ja
in
pop
daa
mov
lods
cld
mov
scas
int3
adc
packuswb
lcall
ficomps
jae
mov
dec
testb
jnp
imulb
and
loop
cmp
in
and
imul
ljmp
xchg
out
jmp
clc
pop
add
sub
lret
adc
push
jb
scas
pop
mov
pushf
or
pop
pop
xchg
test
xlat
sbb
xchg
mov
imul
dec
inc
inc
jne
dec
test
sti
mov
loop
xor
inc
fbstp
fnstsw
ljmp
mov
cli
flds
pop
dec
or
je
mov
or
push
xchg
insl
mov
xchg
arpl
inc
sbb
mov
sbb
mov
cmp
add
cltd
cmc
test
add
and
and
add
sbb
push
sub
or
xchg
lods
xorb
pop
or
adc
adc
jb
movsl
add
mov
adc
sub
mov
outsb
lock
pop
in
add
iret
stc
cmp
push
lods
cmp
fcmove
mov
mov
and
les
push
enter
inc
and
in
in
jg
dec
or
jno
adc
inc
xor
ss
cmp
fdivrs
aaa
mov
jns
icebp
cs
add
and
int
sbb
jb
inc
mov
sub
das
orb
dec
pop
rcll
in
inc
push
int3
movsl
adc
daa
fadd
mov
jmp
jo
test
sub
ja
inc
sub
jp
loopne
pop
pop
daa
adc
sub
pop
and
sub
imul
inc
pop
push
shlb
lret
mov
fwait
cld
bts
dec
sub
dec
pop
inc
or
sbb
cli
mov
clc
aas
in
int3
daa
jmp
cmp
mov
mov
outsl
clc
pop
out
popa
mov
mov
jo
adc
push
mov
mov
dec
push
sub
pushf
sahf
aad
jbe
stc
out
push
nop
or
aas
and
xchg
inc
xchg
std
loope
xchg
ficompl
ret
js
repnz
pop
cli
fwait
mov
inc
loope
repz
roll
mov
mov
test
mov
repnz
loopne
push
rol
dec
cmp
and
cmp
fnstenv
pop
mov
ljmp
add
inc
punpckldq
test
jb
std
push
adcb
les
mov
and
rorb
mov
xchg
loopne
cmpl
movsl
lahf
mov
sub
push
outsb
es
pop
leave
pop
or
mov
jge
cmp
push
loope
into
jbe
out
imul
mov
jae
loop
gs
cmpsl
cmp
add
add
out
in
push
imul
test
lret
jne
jo
inc
mov
ret
sub
push
arpl
mov
xrelease
sbb
aaa
dec
add
cmp
test
push
lret
jp
ret
nop
cmp
cmp
lock
ficoml
movsb
in
mov
arpl
sbb
insl
pop
fmull
call
scas
test
jmp
pusha
ljmp
in
movsb
sub
je
cmp
lcall
inc
push
dec
dec
mov
dec
ss
and
sbb
dec
fimull
movsl
nop
mov
xor
mov
in
mov
or
stos
mov
sbb
mov
jns,pt
int
mov
cmp
fisttps
daa
pop
push
xor
mov
mov
enter
out
mov
jmp
je
inc
fldt
pop
xchg
icebp
jae
popf
shlb
sbb
mov
cmpsl
mov
jecxz
mov
mov
pop
mov
fisubl
pushf
lods
xchg
adc
fcmovbe
pop
in
stos
orl
js
out
pushf
lret
test
imul
xor
roll
push
call
clc
int
add
and
push
cmpsl
out
xchg
xor
push
ficoml
jb
inc
push
and
movsb
int
imul
lods
roll
ret
data16
shlb
gs
iret
out
lods
sub
lret
fimull
sbb
dec
stc
inc
pop
in
ljmp
leave
cmpsb
outsl
jecxz
or
lret
subb
push
sub
clc
pop
lcall
jge
mov
ljmp
jno
jle
mov
enter
pushfw
sub
fldl
push
clc
ljmp
inc
stc
adc
mov
jmp
sbb
shrl
imul
mov
out
mov
xchg
popf
jecxz
mov
mov
adc
cmc
int3
fiaddl
pop
dec
fadds
jnp
add
aaa
push
jle
push
mov
sub
sbb
ds
int3
adc
in
push
sbb
repnz
repnz
jmp
pusha
int
call
and
popa
push
dec
ss
add
mov
xchg
cmpl
loope
aaa
adc
lret
icebp
xchg
or
out
mov
lods
jle
jae
cmc
pop
inc
movsb
inc
sbb
in
lcall
jne
orl
insb
lods
sub
adc
xor
ret
icebp
xchg
adc
pop
stos
sub
sbb
xchg
lock
add
dec
cwtl
call
cmp
mov
enter
ret
je
ljmp
mov
dec
fs
mov
mov
cmp
xchg
mov
and
rcll
ret
push
lock
xchg
in
mov
lods
mov
cmp
lret
pop
subb
mov
xlat
test
pop
imul
jae
aad
pop
cmpb
cmc
popa
jmp
dec
add
or
ja
test
lods
fsub
sarb
mov
pop
bound
dec
cmpsb
cmc
int3
loopne
pop
cmp
inc
or
cli
mov
mov
std
incb
cmpsb
xchg
and
mov
pop
ljmp
add
ja
xchg
stos
mov
add
pop
add
push
cwtl
mov
push
xor
push
sub
pop
outsb
fadds
and
sbbl
pusha
iret
and
dec
repnz
cmpl
shll
clc
or
outsl
inc
push
add
or
mov
sub
xor
cmp
adcl
pusha
decl
pop
clc
nop
push
push
scas
fistps
sub
pushf
cs
stos
add
push
or
imul
icebp
addr16
adc
mov
cld
xor
lock
rcll
dec
dec
out
int
inc
pop
sub
and
lret
repnz
xchg
xlat
pop
mov
jmp
fmull
cmpsl
inc
mov
inc
pop
les
inc
das
pop
test
push
xor
negl
call
or
xor
stos
mov
aad
lds
nop
pop
push
inc
push
cmp
dec
popa
lret
jp
push
rorl
imul
divb
outsl
and
jecxz
push
jecxz
mov
inc
js
xchg
subl
mov
xchg
aas
dec
mov
dec
sbb
gs
jbe
in
push
mov
mov
add
and
pop
stos
cmp
pop
jne
sbb
add
xor
filds
lcall
shll
add
insl
adc
test
stos
mov
in
jmp
imul
jmp
jo
cld
and
add
icebp
inc
mov
aad
into
cmp
fsubr
cld
pop
xor
mov
mov
ja
leave
or
and
add
push
jp
add
ja
in
into
in
ds
cwtl
insl
pop
pcmpgtb
shll
loop
adc
out
xchg
mov
inc
pop
pop
and
add
sti
subl
aam
mov
mov
sbb
sbb
mov
outsl
jb
cmp
jno
rcrl
jne
inc
icebp
sti
inc
inc
add
je
insl
int3
test
sti
xor
insl
stc
ja
jl
mov
adc
cmp
jge
mov
es
push
and
and
cmp
dec
xchg
mov
jno
imul
xor
call
cmp
mov
mov
fwait
push
xchg
fsts
push
adc
inc
out
popf
cmpsb
scas
fwait
shll
mov
jns
sbb
lock
outsl
dec
mov
aas
pushf
and
pop
imull
loope
sub
std
sub
xor
add
jl
ja
push
gs
aaa
mov
gs
mov
mov
jecxz
test
stc
sub
push
sub
loope
insl
bound
pop
add
inc
ja
ret
adc
sbb
dec
lcall
ret
stos
jne
sarb
loope
xchg
mov
int3
pop
sub
and
mov
ficompl
xchg
imul
push
pusha
jl
xchg
aas
and
imul
inc
fwait
or
test
push
movb
add
dec
or
add
inc
mov
in
decb
pop
jmp
fsubp
imul
stc
cli
movsb
test
sahf
adc
mov
add
jo
adc
dec
jge
fnsave
stos
leave
sub
daa
xor
test
out
movsb
cli
push
mov
push
push
mov
mov
sub
ss
mov
int3
xchg
pop
jecxz
jmp
push
cmp
icebp
mov
xchg
lea
push
fisttpl
mov
pop
int
std
mov
lods
push
pop
and
sub
xor
mov
inc
cmp
jmp
aam
and
ljmp
in
jl
leave
dec
push
xchg
popf
ds
push
stos
subl
divb
mov
addr16
cwtl
inc
das
mov
jns
and
pop
adc
push
sub
add
push
cmp
ret
adc
lock
arpl
and
xor
in
imul
push
inc
pop
sbb
stc
cs
lret
fdiv
push
or
jne
ds
dec
mov
sub
je
aas
ljmp
pusha
fnsave
mov
scas
not
pop
jbe
outsl
insb
sbb
push
mov
bndstx
hlt
loop
dec
fadd
jmp
push
std
jb
ror
sarl
aad
insl
jb
idivb
jle
rcll
arpl
sub
push
mov
cmp
iret
call
daa
xor
fidivrl
cltd
lret
outsl
or
push
or
aad
xor
cmpsl
pop
mov
xor
pop
mov
xchg
imul
jg
sbb
fiadds
dec
movsl
outsb
test
sbb
dec
push
jb
test
push
mov
negl
bound
nop
sbb
cld
jl
push
aad
stos
mull
pop
inc
frstor
mov
adc
shrb
sub
jecxz
ljmp
sub
sub
mov
or
pop
xor
mov
add
lock
mov
subl
or
into
es
leave
loope
add
ret
and
jge
adc
xor
push
std
insl
out
jp
nop
int3
test
cmp
sarl
pop
dec
arpl
data16
mov
popa
push
sub
push
adc
jg
in
jl
rorb
mov
das
or
pop
hlt
in
into
mov
push
daa
mov
out
jbe
sti
dec
push
dec
mov
mov
clc
xchg
jo
cmpsl
lock
mov
mov
xchg
and
push
sub
repz
jns
and
mov
roll
xchg
test
sub
mov
roll
add
mov
jmp
pop
popf
fucom
rolb
mov
mov
xor
fists
pop
lea
sti
scas
dec
jb
and
ret
scas
and
xchg
push
xchg
pushf
in
push
mov
out
push
test
scas
jle
int3
fldt
add
mov
xchg
inc
cs
loope
inc
in
or
lods
cmpsb
add
nop
insb
cmp
iret
imul
mov
inc
mov
imul
xchg
mov
xchg
lahf
fcmovne
test
imul
and
mov
scas
iret
imul
popf
or
mov
mov
adc
dec
cmpl
or
push
aad
pop
std
cwtl
cmp
mull
mov
push
out
loope
jne
cltd
in
ljmp
scas
mov
ja
push
and
push
cmp
mov
pop
iret
rclb
and
insb
daa
or
add
mov
pop
rcrl
or
into
outsb
push
fwait
les
adc
mov
repnz
popf
inc
je
test
dec
test
cmp
cmp
repz
lahf
testl
dec
lds
xchg
mov
daa
mov
jne
test
shr
scas
xchg
testl
and
fwait
mov
add
push
jp
fwait
call
push
xchg
mov
pop
sub
rorb
xor
int3
sbb
dec
jne
imul
nop
gs
sbb
cld
insb
push
nop
inc
or
jns
push
dec
mov
negl
call
ficompl
jg
cld
les
mov
nop
mov
jmp
push
loope
inc
xchg
jl
lock
mov
inc
shll
stc
fisubl
adc
adc
cmp
jmp
dec
lret
mov
pop
test
cmp
out
and
test
xor
sar
push
xchg
arpl
out
shlw
add
jae
sub
jecxz
or
stos
lods
cmpsb
leave
push
cmp
push
xchg
or
fidivrs
cmp
mov
es
outsl
pop
adc
sub
jmp
aaa
jmp
jbe
and
imul
mov
cmp
insb
and
gs
add
pusha
in
add
pop
aaa
add
pop
mov
out
mov
pop
roll
pop
or
xchg
cmpl
gs
dec
dec
aam
fsub
aaa
ljmp
dec
loope
mov
jae
lret
cwtl
lret
mov
dec
mov
aam
xor
and
mov
sti
dec
adc
xor
in
cmp
jo
dec
pushf
dec
mov
mov
fucom
aaa
ret
inc
and
xchg
addr16
mov
mov
and
fmuls
xor
lods
sub
jno
push
push
les
pop
mov
pop
fcmovbe
pop
push
in
test
and
ret
in
pop
gs
fidivrs
pushf
pop
mov
inc
pop
ja
adc
enter
inc
xlat
les
addr16
dec
and
push
adc
repnz
xchg
into
and
and
jae
mov
aaa
lods
fiadds
fadds
jno
xchg
addb
jns
out
movsl
scas
sub
or
jne
test
imul
pop
sbb
mov
pusha
dec
cmp
pusha
jno
mull
addl
inc
dec
sbb
sahf
pop
mov
cmc
jb
jge
cltd
test
xchg
mov
lcall
int3
dec
mov
nop
hlt
xor
adc
pop
mov
adc
dec
mov
shl
pop
icebp
mov
test
cmp
clc
cmp
mov
mov
jae
out
xchg
pop
mov
lret
mov
mov
mov
xor
mov
sti
push
jmp
dec
aaa
xchg
push
movsl
mov
repnz
int
xchg
mov
cmp
adc
cltd
sqrtps
dec
adc
and
xlat
ljmp
test
add
test
jb
int
mov
add
ljmp
pop
mov
fistpl
jno
out
test
or
mov
add
adc
cmp
call
pop
icebp
xchg
jmp
js
mov
mov
push
push
mov
add
pop
pop
xchg
ret
jns
mov
sti
loop
jge
lcall
and
mov
movsb
sub
and
repnz
arpl
xor
xchg
pop
ret
inc
sub
cmp
add
stos
cli
mov
out
test
es
and
pop
add
dec
enter
jmp
icebp
sub
rcrl
dec
loope
dec
jmp
pop
pop
mov
rcr
nop
and
mov
icebp
shlb
xchg
sbb
or
iret
sti
mov
test
pop
lea
adc
lds
je
dec
push
xchg
inc
mov
or
adc
adc
out
push
mov
mov
xor
xlat
inc
inc
sbb
icebp
pop
or
lods
add
aam
lret
pop
shl
inc
test
mov
mov
mov
aam
not
mov
out
js
mov
cmp
bound
xor
aam
mov
cmp
test
dec
stos
mov
iret
jecxz
or
ljmp
into
and
and
insb
dec
inc
mov
push
xlat
push
repz
cmp
jp
insl
inc
stos
jne
lock
loopne
and
pop
jge
dec
fldl
dec
cmpsl
add
jecxz
test
mov
mov
add
ljmp
les
lahf
cld
flds
sarl
xor
cld
lods
out
jle
test
popf
dec
jle
pop
xchg
mov
andl
sbb
add
mov
incb
int
xchg
std
addr16
test
loope
ljmp
ja
mov
lahf
lahf
nop
jbe
imul
stos
cmp
pushf
push
lcall
outsb
xchg
gs
mov
jb
mov
xchg
fwait
lret
mov
push
in
sahf
and
mov
mov
sub
in
lcall
lret
mov
mov
and
scas
cmpb
push
and
and
loop
pushf
clc
jg
ret
cmp
jne
mov
inc
fidivs
adc
jns
movsl
test
jg
sbb
pusha
fdivl
bound
adc
cmp
ret
jge
xor
ss
dec
jno
dec
push
or
imul
push
repnz
xor
sbb
fmuls
into
fwait
jg
push
jns
lahf
sbb
adc
outsl
pop
imul
in
idivl
and
popa
jecxz
scas
outsb
clc
dec
pop
jns
sub
out
lahf
mov
xor
push
outsb
mov
out
cli
jno
ret
sbb
jo
adc
pop
cmc
dec
pop
ficomps
xor
mov
jmp
repnz
pusha
stos
inc
sub
gs
jbe
xor
es
ss
in
imul
xchg
inc
aaa
push
loope
or
dec
ret
adcl
clc
ror
dec
fwait
lret
rorb
icebp
leave
insb
test
stc
enter
pop
decb
pusha
jo
jo
cmpsl
ss
sti
inc
je
test
mov
xor
sbb
push
cmp
fstpl
rcll
pop
clc
out
scas
sub
mov
and
lock
cli
dec
jbe
lods
adc
je
and
gs
push
mov
dec
sub
out
jmp
jmp
push
arpl
outsb
jo
sahf
cmp
mov
and
xchg
dec
out
imul
add
test
arpl
testb
por
add
pop
popa
inc
jno
push
lock
jl
dec
jmp
xor
pop
shlb
cmc
test
aas
jns
imull
cmp
js
mov
fcomps
repnz
and
mov
pop
idivl
xchg
movl
or
jmp
adc
sbb
outsl
sbb
adc
aas
popf
sahf
shl
inc
cmc
jmp
outsb
push
dec
push
jns
subb
mov
hlt
mov
push
js
ret
add
aaa
xchg
xchg
lea
test
push
mov
insb
xchg
cmpsb
push
xchg
pop
test
adc
imul
pop
add
mov
je
mov
iret
das
fdivs
ret
mov
add
insb
jecxz
out
xchg
insb
loop
aas
fidivs
loope
lahf
mov
lock
jle
je
mov
test
xor
loop
push
mov
icebp
imul
mov
fidivrs
jne
fdiv
nop
lods
stos
lods
lea
int3
add
pop
leave
push
and
sbb
stos
xor
fimull
push
push
add
mov
mov
dec
adc
jle
aam
js
xchg
xor
loope
adc
pop
xor
gs
loop
mov
stc
into
rcrl
push
or
inc
add
cmp
fcomps
les
xchg
insb
std
sub
inc
incb
int
repz
cmp
mov
or
es
sub
inc
fidivs
mov
data16
repnz
fsubs
xchg
push
inc
cmpsl
ss
mov
fld
test
mov
shrl
mov
prefetcht0
jl
jns
add
jge
pop
add
pop
movsl
push
adcb
sbb
cs
into
cld
aam
and
shr
icebp
test
inc
mov
notb
je
cmp
xchg
dec
jle
insl
xchg
sbb
or
xor
in
xchg
cltd
mov
ficompl
mov
out
lret
jle
movsl
xchg
push
jg
mov
add
ss
popf
and
vcvtsi2sdl
insb
lcall
add
mov
test
scas
dec
mov
jae
stos
pop
leave
mov
adc
je
inc
clc
into
cmp
cld
test
cs
xlat
cmpsl
or
mov
jg
rclb
cltd
xchg
mov
cld
std
mov
hlt
or
and
leave
or
pop
sub
lret
dec
pop
jnp
iret
mov
inc
pusha
sahf
les
pop
insl
call
dec
pusha
and
aaa
notl
mov
imul
adc
pop
gs
shll
xchg
and
add
faddl
and
rclb
mov
jnp
adc
or
test
iret
dec
fldcw
in
mov
sub
pop
jne
add
pop
or
mov
sar
add
iret
movsb
ljmp
rorb
adc
mov
lods
inc
in
dec
frstor
jle
test
bound
imul
inc
jl
arpl
je
mov
scas
stc
rolb
dec
xchg
xchg
fiadds
push
xlat
mov
mov
cmc
pop
stos
js
mov
rep
and
mov
hlt
fwait
es
daa
mov
sub
fisubl
adc
icebp
lock
shlb
pusha
mov
sti
sahf
sbb
add
jb
sub
add
out
jg
hlt
aaa
push
sahf
cs
add
pop
mov
jns
cmp
mov
xchg
xor
inc
mov
jg
sub
ds
mov
add
cmp
xchg
and
pop
js
add
cmp
push
in
int
out
pop
adcb
xor
xor
pop
imul
popa
fwait
add
mov
jg
hlt
jle
ror
stos
mov
mov
in
test
ja
mov
das
lods
shrb
in
enter
sub
add
jecxz
subb
mov
loope
pop
pop
cmp
adc
das
lahf
mov
pop
jp
divb
cld
adc
pop
xor
xchg
mov
inc
push
lods
fstl
push
or
nop
sahf
cmp
js
test
pop
ja
and
stc
or
stc
lods
fs
ror
pop
leave
cwtl
rcll
xchg
inc
and
jb
sub
clc
mov
shrl
clc
clc
dec
mov
sub
insl
mov
shlb
call
imul
xchg
or
int
sub
stos
xor
movsb
mov
movsl
in
popa
xchg
mov
mov
ds
stos
jl
pop
adc
test
push
mov
lock
les
pop
ret
pop
cmc
mov
mov
mov
ljmp
clc
push
jp
out
adc
jmp
xor
in
add
xor
or
inc
sub
in
pop
nop
xor
imul
sarl
out
ljmp
cltd
lea
jmp
xor
ror
xchg
sub
shrb
fdivrp
aas
sahf
std
mov
fs
rcrl
iret
push
in
mov
xor
mov
push
push
stos
push
js
lret
leave
inc
aas
cli
ljmp
inc
push
jbe
pop
pop
push
mov
and
scas
mov
dec
xorb
int
pop
push
push
rcrl
js
cwtl
cmp
or
pop
mov
mov
test
inc
dec
inc
inc
das
jne
cld
add
dec
adc
xchg
jmp
mov
test
adc
cwtl
cmc
fldt
mov
lea
in
hlt
into
rcr
in
inc
push
adc
popa
jmp
inc
sub
jg
test
or
jmp
insb
test
cmp
jle
pop
call
or
fsubrl
xor
aas
out
or
dec
cmc
imull
push
fwait
jo
js
jo
mov
sbb
stos
mov
sti
pop
ss
ret
sub
xlat
pop
hlt
test
add
popa
jp
jmp
ficoml
clc
subb
and
test
adc
out
xor
push
pop
fsubl
or
rorb
in
and
outsl
in
test
js
movsl
mov
mov
push
in
lods
pop
arpl
dec
loop
test
dec
mov
jg
and
pop
sbb
shll
loop
and
rol
shll
repz
jo
ret
fdivrs
jecxz
ds
cld
sbb
fldenv
xchg
shlb
push
jl
jg,pt
stc
iret
js
test
repz
and
or
and
mov
cmp
movsb
xor
sub
sbb
fldt
cmp
mov
fstpt
xchg
dec
xor
dec
pop
mov
shlb
xlat
lret
lods
scas
test
popa
fwait
dec
aaa
lods
or
adc
xchg
pop
jmp
cld
in
lret
dec
int
sbb
mov
in
add
or
mov
sub
int
test
mov
add
pop
lods
push
lret
mov
in
test
test
test
clc
push
ja
int
or
sub
mov
addr16
hlt
sub
mov
mov
je
xor
sub
jg
sbb
not
cmpsl
lret
mov
popa
sub
aad
mull
mov
xor
lock
add
push
scas
lea
xadd
subl
pop
fcoml
flds
jnp
adc
push
js
mov
xchg
call
adc
inc
mov
dec
call
sahf
mov
mov
adc
mov
mov
stos
add
and
out
int
sub
mov
loop
imul
push
fcomps
stos
xchg
loope
aad
xlat
xchg
ja
pop
mov
pop
push
adc
fcmovnbe
jge
in
mov
insl
test
sahf
fiaddl
test
cmp
or
add
pop
or
fbstp
loop
outsb
xchg
insb
xor
mov
daa
sub
test
test
inc
out
adc
mov
mov
mov
lret
xchg
adc
jecxz
adc
push
insl
dec
scas
and
lods
aas
sub
fiadds
std
cmp
xor
aaa
sub
sub
pop
cmpsb
sbb
pop
push
das
call
aaa
mov
pop
insl
icebp
cwtl
data16
lahf
inc
fnsave
lock
stos
jecxz
nop
add
pop
mov
pop
xor
sub
push
mov
mov
push
jmp
fwait
mov
cld
gs
fs
ss
cmp
jno
dec
jne
bound
dec
mov
enter
jb
scas
mov
inc
lods
jne
fsubr
stos
xchg
mov
int3
mov
mov
fisttps
aam
scas
xchg
xchg
mov
test
jns
or
cmp
cs
jmp
std
faddl
adc
mov
loopne
xlat
xor
outsb
lret
popf
in
ljmp
rcr
push
jae
pushf
push
clc
addr16
jo
pusha
popa
xchg
std
popf
push
or
mov
mov
pop
jg
shll
hlt
test
or
fwait
pop
sbb
imul
bound
sbb
into
outsl
iret
sahf
cs
cmp
xor
xchg
push
mov
mov
jnp
popa
aaa
sub
fsubrp
int3
js
out
loope
pop
mov
testb
les
mov
int
scas
xchg
shrl
sbb
sti
xchg
rclb
jle
out
mov
pop
adc
jmp
push
sub
xchg
and
mov
mov
pop
adc
daa
or
rol
stc
int3
and
cmp
stos
hlt
add
or
bound
fcompl
fmull
dec
push
sub
jno
mov
sti
fnstsw
aaa
movsb
test
leave
jle
adc
lret
push
pop
dec
dec
pop
frstor
mov
sub
dec
subb
mov
rclb
inc
inc
stos
dec
arpl
test
or
and
and
outsb
insb
pop
outsl
cmp
mov
add
iret
cmp
sub
sbbl
inc
cmpsb
arpl
push
ret
int3
dec
insb
mov
enter
es
divb
cmp
push
pop
jle
cmp
fadds
frstor
daa
push
push
in
add
xlat
jp
ljmp
scas
int3
add
mov
addr16
daa
fisubrl
fwait
jp
jno
add
pop
mov
mov
ror
imul
jno
xor
pop
cmp
movsb
jae,pn
rcll
fbstp
inc
jp
and
div
xlat
push
scas
pusha
push
loop
xchg
arpl
pop
jle
adc
outsb
ret
add
sbbb
dec
adc
push
add
mov
ljmp
sub
mov
mov
aas
pop
mov
ret
sbb
movsb
cmp
push
xchg
mov
mov
jp
mov
and
push
pushf
sub
ret
aaa
jge
and
jle
sub
mov
add
testb
int3
shlb
cmpsl
pop
cmp
das
cmpsb
add
add
xchg
mov
icebp
push
pop
cld
cmp
sbb
or
adc
inc
jg
adc
clc
push
fsubrl
add
cmpsl
not
repz
and
cmp
sbb
aas
scas
fwait
rcl
jecxz
rcrb
mov
std
ss
mov
dec
arpl
mov
inc
leave
andl
push
and
pop
pop
repz
jb
xor
pop
pop
mov
push
aaa
pop
xor
xchg
in
sub
sub
sbb
clc
jae
aaa
xchg
mov
jb
movsb
cwtl
add
xchg
and
arpl
dec
xor
daa
ret
xchg
add
dec
adc
fstl
popf
push
gs
mov
sti
in
adc
stc
dec
roll
push
mov
push
movsl
push
jecxz
mov
in
inc
js
dec
xlat
jmp
shrl
sbb
test
je
cld
jo
shll
pop
mov
daa
xchg
fsubrs
scas
shll
inc
mov
adc
mov
jle
aaa
inc
pop
push
sbb
push
pop
mov
bound
cmp
mov
rorl
jno
popa
adc
cmp
mov
ficompl
aam
push
inc
sub
cltd
or
xor
stos
xchg
scas
fildll
lret
jbe
shlb
and
aam
xor
xchg
pop
xlat
jmp
mov
pop
xchg
mov
dec
push
test
imulb
xchg
out
popf
mov
cmp
sub
lret
dec
stos
xor
ljmp
loope
sahf
lds
in
sub
lcall
in
movsb
or
mov
mov
enter
es
in
cwtl
push
xor
pop
push
imull
sti
roll
mov
paddw
ret
dec
leave
adc
push
xor
call
inc
xlat
out
stos
scas
jp
or
cli
aaa
jmp
movsl
lcall
lock
out
sbb
addr16
dec
call
or
ja
dec
hlt
dec
pop
xchg
out
dec
sub
inc
loopne
testl
cmpsb
push
jecxz
lcall
rcr
mov
jl
push
rcr
xchg
insl
ljmp
and
or
inc
rclb
xor
int
divl
mov
mov
inc
jnp
fistps
call
in
fistpl
loope
sbb
das
cmc
or
nop
jecxz
test
cld
aam
sub
stos
sbb
mov
outsb
or
inc
insl
jmp
cmc
mull
in
pop
stc
xor
dec
fadds
mov
test
pop
mov
mov
lcall
sbb
and
jns
es
std
jl
les
pop
imul
jo
pavgw
std
lock
subb
loope
jg
pop
mov
outsl
lahf
mov
cmp
jl
sub
push
hlt
pushf
into
andl
cmp
loopne
pusha
mov
dec
jbe
inc
subl
das
jbe
push
push
imul
cltd
test
xchg
std
mov
dec
ret
call
call
sbb
xor
cmpb
bound
jb
pop
lret
jnp
mov
adc
xor
mov
sub
int
jp
mov
add
push
mov
push
dec
cmpsl
cltd
lods
out
mov
xchg
inc
xor
shl
push
add
popf
xor
add
addr16
fst
jg
dec
loope
dec
pop
sbb
cmpb
cmp
adc
orb
xor
add
loopne
icebp
cmpsb
cmc
or
dec
jb
inc
mov
sbb
out
mov
popf
addr16
andl
xor
dec
lds
in
or
cmp
gs
push
or
add
rorb
sahf
aam
xor
cmp
aam
inc
pop
xchg
insb
insb
pushf
stos
add
sub
or
mov
pop
cltd
shlb
dec
test
test
rolb
inc
cli
daa
imul
jecxz
push
stc
push
insl
lret
or
mov
rolb
lods
mov
push
pop
cmp
inc
mov
shll
enter
mov
gs
jmp
mov
notb
inc
rcl
je
cmp
popl
js
inc
pop
mov
push
lret
add
lock
sbb
mov
sbb
scas
movsb
mov
add
and
shl
sbb
push
cmpsb
pop
dec
fbld
and
mov
leave
aas
xchg
ja
push
mov
mov
mov
mov
rcr
test
sahf
loopne
js
mov
inc
jmp
and
loop
pop
sbb
lret
popf
in
and
je
jle
rol
insb
cmc
pop
sub
push
mov
jne
roll
inc
rcll
imul
jg
dec
jle
int3
mov
cli
mov
lea
leave
xor
dec
mov
dec
mov
outsl
xor
ret
iret
xchg
push
dec
push
inc
dec
inc
stos
jg
jb
sub
sti
nop
imul
inc
mov
clc
inc
mov
jns
insl
jl
out
or
cmp
cmpsb
out
jle
sahf
cltd
dec
test
mov
cmp
jp
jg
inc
xor
or
fidivrl
sarl
clc
fs
loop
push
mov
adc
mov
ret
sarl
lods
sub
cmp
sub
jecxz
ja
xchg
add
pop
add
add
mov
pop
fbstp
inc
loopne
cmp
movsb
inc
push
xchg
pop
mov
xchg
in
mov
push
out
sbb
test
sub
lcall
pop
or
inc
and
fcompl
add
lods
mov
es
pop
push
fwait
dec
sbb
pop
sti
cmc
das
push
push
push
mov
pop
leave
pop
es
sti
and
xchg
xchg
mov
add
mov
adc
cmpsb
sahf
add
aam
dec
and
xchg
sti
xor
movsl
push
push
jecxz
icebp
cmp
jae
sbb
push
cmp
cs
mov
insl
xchg
clc
out
sti
jl
cld
enter
mov
add
lret
push
test
mov
sbb
ret
lret
cld
inc
sub
or
jbe
and
jb
mov
jle
fldl
cmp
push
in
leave
outsl
sub
lahf
mov
inc
sbb
cmp
repz
repz
cmpsb
sub
sub
cmpsb
ret
insb
loop
pop
repz
arpl
mov
mov
out
movb
push
gs
popf
xor
xchg
punpckldq
movsb
ret
hlt
cmp
push
lret
dec
aad
outsl
push
test
hlt
bound
cmp
sub
sub
loop
pop
mov
stc
inc
repz
sti
setnp
sub
dec
and
or
fstl
push
xchg
pushf
inc
xchg
data16
xor
cmp
int
js
std
dec
fs
sbb
dec
mov
shlb
scas
lea
and
inc
ret
cmpsl
mov
or
adc
out
and
inc
loopne
and
cwtl
push
jo
dec
dec
inc
outsb
fisubs
test
sbb
loopne
jno
roll
rep
dec
push
pop
push
xor
in
fsin
jge
iret
inc
je
lahf
xchg
xchg
push
test
repz
inc
leave
pop
dec
js
mov
dec
aad
out
lcall
scas
repz
sbb
in
icebp
mov
or
dec
sub
sub
outsb
stc
or
and
jbe
add
pop
push
jbe
repz
cs
jp
sbb
stos
pop
mov
mov
idivl
or
sub
out
shll
addr16
xchg
dec
movsb
stos
fistl
in
inc
outsb
pop
ret
je
es
mov
xchg
pop
out
in
adc
mov
clc
ljmp
aad
ds
sbb
movl
xor
pop
mov
cs
mov
xlat
scas
pushf
xor
dec
std
dec
es
and
pop
dec
mov
loope
sub
add
push
cmp
jp
inc
dec
repz
cwtl
or
daa
outsl
xor
icebp
lods
push
insl
sar
push
outsb
aaa
hlt
nop
push
fst
sarl
shll
cmp
cmp
push
out
dec
repz
jbe
jb
out
into
pop
sbb
clc
add
adc
das
jns
inc
imul
into
sub
stos
push
cs
enter
ss
cld
add
sti
and
out
outsl
mov
push
popa
xchg
mov
push
into
adc
insl
xchg
push
xor
mov
xor
lods
mov
outsl
adc
xlat
mov
je
std
cmp
pop
lods
adc
xlat
push
adc
jb
cmp
xchg
cmpsl
aas
nop
mov
push
ds
xor
test
or
mov
pop
push
mov
hlt
outsb
and
or
ja
mov
in
jle
mov
pop
std
add
fstpt
mov
mov
test
push
adc
in
xchg
cld
mov
pop
aas
rclb
xchg
cmpsl
andb
cmpsb
mov
xchg
pop
repz
or
xor
aas
jl
pop
inc
and
xchg
call
and
inc
jmp
rcrl
sbb
sbb
mov
jmp
in
daa
mov
sbb
push
lcall
dec
sarb
out
xor
out
adc
jl
xchg
jae
push
dec
in
xor
repnz
cmp
stos
jno
popa
xlat
sub
call
cli
sti
xor
daa
rolb
into
pop
addr16
mov
rorb
call
in
shrb
outsb
dec
imul
jge
xchg
mov
into
add
je
bound
sub
sub
outsb
mov
and
xchg
pop
xor
ret
stos
ds
cmpsl
or
sti
fsubs
jnp
aam
push
ficomps
mov
add
fs
jmp
movsb
cmpsl
idivb
aaa
push
test
testl
mov
mov
inc
fldt
mov
jbe
dec
mov
jmp
push
cmp
or
sbb
lods
cli
out
popf
sub
pop
push
push
in
push
rclb
sub
mov
roll
mov
sub
xchg
test
mov
mov
jp
popf
cmpsb
cmpsb
mov
mov
sub
jmp
scas
xchg
inc
mov
pop
lret
jno
cld
sahf
or
mov
leave
test
cmp
mov
jns
or
cmpb
enter
repz
aas
sbb
in
aam
imul
or
push
mov
es
dec
xchg
inc
ss
cmp
jmp
inc
dec
xor
dec
xor
sbb
add
or
and
xor
jb
scas
dec
repz
xchg
das
and
inc
push
mov
int
loop
sti
je
mov
into
push
dec
jo
repnz
pop
xlat
sbb
addr16
aam
dec
jmp
adc
dec
ljmp
add
outsl
cwtl
daa
push
mov
dec
add
mov
icebp
cmp
mov
dec
fdivrl
test
inc
adc
sub
jg
shll
arpl
testl
rorl
lods
mov
fidivrs
or
xchg
or
sbb
or
leave
or
mov
xor
fs
icebp
push
or
test
mov
fstl
data16
fcomip
mull
bound
pop
push
cmpsl
fcomi
loopne
xchg
inc
or
mov
pusha
jne
push
sbbb
icebp
int3
xchg
int
mov
in
xchg
imul
repz
and
push
hlt
lea
or
js
or
bound
lcall
and
push
sub
push
sbb
movsl
xor
mov
sub
mov
xchg
cmp
lods
dec
dec
add
arpl
sub
cmpsb
shlb
push
ror
xor
push
sub
push
mov
out
adc
popl
jp
daa
pop
dec
cmp
mov
pusha
lret
mov
shll
stos
loop
movb
loopne
mov
pop
nop
and
mov
loopne
mov
str
or
inc
push
cmpsl
or
inc
pop
out
popf
daa
sbb
dec
jmp
mov
mov
add
pop
adc
insb
xor
mov
or
xor
pop
push
scas
movsl
mov
add
cwtl
fucom
push
xchg
mov
cli
in
std
mov
or
inc
fidivrs
sbb
je
mov
rcll
mov
xchg
mov
cwtl
nop
rcrl
scas
xchg
inc
dec
pop
movsb
pop
imul
inc
hlt
icebp
dec
mov
lds
lret
lcall
mov
fildll
int
cld
enter
int3
outsl
add
cltd
sub
dec
push
fdivrs
fistl
mov
cmp
data16
cltd
rol
repz
push
pop
popf
mov
mov
arpl
inc
pop
sbb
dec
shll
in
and
and
lcall
call
or
pushf
popa
lock
les
test
xchg
sub
stos
xlat
push
mov
cmp
rol
push
sub
jne
addr16
dec
cld
sub
xchg
sub
addl
mov
jle
loopne
les
fimuls
lock
aas
mov
test
cld
fsts
sub
sbb
lods
sahf
jge
push
jl
out
inc
out
test
ds
into
out
push
mov
or
das
cli
outsb
nop
in
adcb
repz
mov
jnp
pushf
aam
pop
push
es
je
xchg
ret
leave
mov
cld
mov
pop
call
inc
push
scas
pcmpeqd
in
jp
pop
push
push
mov
rcll
mov
sti
jno
stos
jp
cld
fwait
jns
jo
push
out
in
into
xchg
stos
pushf
cmp
xor
dec
xchg
punpckldq
add
push
sbb
inc
add
lods
ret
jg
xor
arpl
jb
repz
iret
into
pop
mov
insl
lcall
lcall
iret
xor
in
mov
mov
enter
loopne
jno
dec
cmp
inc
mov
or
stos
cwtl
test
add
cmc
pop
mov
or
sub
lds
jg
out
inc
push
fidivl
push
imul
in
push
adc
push
mov
pop
cmp
fwait
mov
and
fsubl
cmp
sub
addr16
push
call
lock
mov
je
inc
xchg
bound
jmp
popa
es
sbb
les
cwtl
push
pop
call
xor
nop
scas
sub
pushl
sub
cmpsb
insl
sub
icebp
pusha
das
sub
add
mov
les
jmp
scas
mov
enter
push
jmp
shlb
jno
and
mov
clc
ljmp
and
lcall
scas
cmp
sbb
xchg
das
ljmp
mov
sub
filds
aad
cmc
cwtl
inc
aas
pop
pop
and
xchg
out
outsl
jno
pop
test
mov
popf
push
repnz
xor
das
xor
andl
xor
mov
push
addr16
les
mov
arpl
push
prefetch
or
xor
add
mov
cs
aad
fdivrs
bound
into
or
or
subl
xlat
xor
mov
shl
cmp
cmp
xor
xchg
inc
adc
mov
cltd
outsl
xchg
fs
andl
sbb
mov
clc
jl
sbb
fstp
smsw
movsl
push
bound
outsl
cwtl
dec
inc
xchg
mov
mov
pop
repz
bnd
mov
sub
outsl
jo
pop
in
pop
adc
pusha
aaa
xor
jmp
push
repz
rcrb
xor
xor
out
ror
sub
stc
sbb
out
mov
xor
das
out
jmp
sbb
jnp
pop
lods
dec
mov
pop
sbb
fdivrs
pop
test
adc
push
inc
dec
xor
mov
pop
cmpsl
fnsave
xor
mov
imul
mov
or
sub
mov
jle
push
ss
adc
daa
or
mov
scas
stos
leave
xchg
das
dec
rorl
fs
movsb
repnz
add
test
cmpsb
js
adc
xchg
aam
dec
cli
cltd
mov
inc
push
rorl
xchg
fistps
mov
push
lods
mov
sub
xchg
bound
mov
or
out
cld
pushf
and
pop
mov
pop
xchg
out
data16
sub
jge
fmuls
dec
inc
dec
push
jmp
sbb
adc
mov
push
addr16
mov
xor
insb
idivl
mov
push
imul
push
test
shll
or
mul
jbe
popf
bound
push
sub
andl
loop
pop
addr16
sti
push
imul
cs
popl
mov
mov
out
cld
imul
out
imul
jns
push
inc
cmpsb
xchg
fcom
sub
sbb
in
xchg
fdivs
pushl
cmpl
fisubrs
jl
insl
lods
jecxz
mov
mov
mov
ljmp
leave
andl
dec
cld
test
push
ja
push
sub
loop
and
dec
jns,pn
sub
push
mov
out
push
loope
insl
xor
clc
ja
inc
fs
mov
fldl
test
dec
cmp
rorl
xor
shlb
mov
lods
push
add
sub
imul
dec
jbe
out
loope
push
hlt
shlb
xor
imul
cmp
push
lods
mov
scas
dec
dec
cmpsb
mov
mov
xchg
push
push
push
xchg
adc
lret
and
or
sbb
ja
lock
add
jmp
sub
js
jp
test
sbb
and
pop
mov
dec
pop
pushf
out
cmp
je
xor
int3
andb
fcom
std
add
lock
pop
pop
out
jle
das
mov
sarb
dec
xor
xor
cmp
es
and
sub
mov
loope
push
roll
iret
jae
pop
push
xchg
jnp
mov
or
jbe
lahf
arpl
rol
jbe
inc
dec
repnz
jbe
push
pminub
div
mov
adc
pop
test
inc
in
add
sub
lock
push
movsl
mov
lods
add
push
jbe
xchg
sbb
and
cmc
shlb
mov
push
xchg
adc
inc
cmpb
jp
cmp
sti
outsl
cmpb
cmp
jbe
and
xchg
and
cmp
aam
mov
jl
xor
mov
gs
jecxz
loope
cmc
sub
loopne
cld
or
fdiv
das
loope
movsl
sahf
aam
or
fld
pop
xorb
jle
sub
adc
loopne
pop
les
addr16
in
cmpsl
xchg
push
pop
jbe
or
cld
xchg
movl
cltd
scas
xchg
je
pop
jnp
inc
dec
or
cmp
jecxz
sahf
call
jmp
cli
cmc
or
aas
jecxz
outsb
fbld
mov
or
lcall
std
push
push
add
pop
into
stc
imul
mov
mov
cmpl
pushf
xor
mov
inc
mov
mov
cmp
mov
add
je
add
rcrl
sub
mov
out
sbb
ja
xchg
pop
xchg
inc
jne
lds
lea
xchg
and
inc
sbb
mov
xchg
and
add
scas
push
mov
lret
pop
in
mov
cmp
mov
out
jecxz
loop
shll
and
lret
lds
insl
cmp
das
push
add
gs
push
sahf
mov
pop
xchg
mov
outsb
stos
or
outsb
jno
mov
inc
adcb
push
imul
xlat
icebp
cmp
adcl
xor
inc
sti
idivl
les
push
pop
fsubrp
loop
into
xor
mov
outsb
in
ret
cmp
ljmp
test
cmp
nop
loop
jo
call
dec
jge
jbe
mov
sbb
pop
pushf
xchg
xor
jp
add
cmp
mov
imul
sbb
pop
sbb
xchg
loope
xchg
pop
enter
or
call
gs
aaa
ret
mov
ss
movsl
or
popf
in
scas
jl
push
decl
add
mov
and
mov
insb
push
and
stos
inc
pop
cmp
mov
rcr
add
jp
mov
dec
pop
adc
mov
cltd
fwait
jb
add
jbe
roll
into
sub
leave
fs
xor
test
out
das
fdivs
fists
cli
sbb
pop
push
shll
in
jl
jmp
or
out
pop
repz
lods
add
adc
mov
or
and
mov
addl
aas
push
aam
fcoms
sbb
mov
sub
loop
add
add
andl
insb
inc
scas
xchg
cwtl
icebp
xchg
aaa
mov
movsb
pop
dec
sbb
xor
outsb
inc
mov
xchg
inc
cs
test
cwtl
inc
outsl
scas
out
sbb
shll
je
sti
sbb
fwait
cmp
imul
mov
pop
cmp
or
in
and
mov
mov
push
test
mov
inc
or
fldenv
pop
rcrb
xor
xorl
imul
imul
insb
mov
rcl
dec
cltd
outsl
cmp
fildl
divb
cmp
inc
sub
out
xor
pop
add
rcll
arpl
orb
fcom
xchg
ret
xor
fs
loope
inc
mov
sub
push
dec
ud1
fistl
outsl
test
je
inc
ror
mov
hlt
mov
shrl
movsb
rcr
fdiv
push
add
sbb
popf
lret
sub
stos
sbbb
mov
jne
and
mov
cltd
rcll
mov
ss
and
lods
push
mov
jge
fbld
jmp
stos
scas
outsb
pop
popa
outsb
lret
fstpl
addl
negb
mov
lcall
pop
je
pop
or
fsubr
and
sub
lcall
adc
sub
stc
fucomi
lock
mov
jb
aaa
lock
xor
sub
cmp
mov
pop
dec
pop
jl
fldcw
call
push
mov
test
sti
icebp
mov
shll
mov
ljmp
movb
sbb
or
xchg
inc
xor
rorl
fldl
inc
sbb
jecxz
mov
dec
clc
stos
and
xchg
cmp
pop
pop
mov
fstpt
pop
mov
in
aam
iret
mov
pop
in
movsl
nop
ds
gs
xchg
mov
push
or
sub
xchg
ret
testb
push
cmp
dec
jbe
inc
rorl
dec
cs
and
ljmp
or
repz
jl
out
leave
psrad
aam
leave
je
add
test
mov
jns
popf
fcmovb
adc
sub
popa
mov
loopne
sbb
jmp
imul
clc
daa
pop
jo
stos
fwait
cmp
inc
adc
out
in
fadd
das
iret
sub
je
das
pop
cld
jns
cmp
jnp
fisttps
sub
push
in
add
cmp
pop
popa
ret
mov
stos
mov
sbb
fnsave
xor
mov
jnp
fisubs
inc
je
adc
stc
xor
adc
jg
sbb
inc
xchg
jo
rcrb
lock
insb
pop
cwtl
out
hlt
pop
xor
insb
loope
aaa
and
std
fdivrp
inc
repz
inc
dec
call
out
dec
fs
call
sub
lahf
and
and
push
inc
sti
or
push
and
pop
mov
fisubrl
cmp
lock
mov
mov
xor
arpl
imull
lods
push
inc
mov
push
sti
pop
rdmsr
lcall
rorl
xchg
aad
xor
jecxz
jmp
jne
jb
add
push
loopne
cmp
jecxz
cmpsl
negb
adc
mov
sbb
rcr
out
push
dec
xor
test
mov
jo
sbb
ret
jo
aam
pop
add
lods
scas
pop
xchg
mov
mov
add
add
pop
repz
arpl
add
inc
cmp
out
mov
mov
repnz
sub
adc
adc
aas
adc
fisubrl
mov
mov
pushf
imul
shrb
jmp
or
xor
test
xchg
loop
or
mov
inc
sbb
pop
icebp
scas
or
roll
jns
inc
and
adc
dec
pop
into
push
and
dec
adc
mov
dec
test
bnd
jo
jmp
into
stos
rcrb
jno
bound
pop
cmp
outsl
test
pop
push
std
mov
xor
lcall
stos
mov
jecxz
shll
pop
fdivrl
lock
daa
loop
xor
inc
sbb
and
ss
push
jge
xchg
gs
push
mov
mov
dec
inc
jbe
imul
adcl
dec
std
mov
cmovbe
loop
aas
clc
xchg
ss
and
orl
mov
addr16
cmc
ja
jle
jecxz
mov
jg
fadds
rorb
pop
sub
xchg
sti
cld
xchg
fldenv
sub
add
adc
imul
pop
testl
aaa
adc
jbe
xchg
scas
in
movsl
xor
aam
test
aas
or
clc
push
lods
cmpsb
mov
xchg
mov
aad
scas
cmp
sbb
add
fcoms
aaa
and
cmpsl
fsubl
lea
sbb
rcrl
jle
mov
vmread
ljmp
mov
pop
mov
lret
shr
mov
fcompl
sub
pop
pop
jns
push
lea
add
jns
fs
sbb
scas
mov
insb
inc
xchg
dec
fsub
pop
test
imul
pop
cli
das
push
out
cmpsb
push
lods
jl
js
enter
mov
inc
jbe
or
cmp
divl
jp
pop
js
out
pop
xchg
dec
mov
andb
push
lcall
pop
cmp
call
add
or
push
mov
in
pop
push
sub
call
iret
push
ds
xchg
sub
movsl
mov
mov
andl
adc
fisubrs
mov
insl
loope
cmp
jbe
cmc
inc
mov
fmuls
jb
addr16
iret
mov
jno
ret
movsl
inc
ds
idiv
movsl
je
pop
push
or
test
add
rsm
gs
in
cwtl
hlt
lret
pop
and
pop
das
cltd
pop
push
or
lds
add
cmpsb
mov
les
cs
int3
lock
outsb
repz
rcrb
push
loopne
call
pusha
xor
mov
icebp
mov
inc
dec
mov
jg
mov
mov
out
push
or
sarb
test
js
cmpsb
stc
mov
fildll
out
inc
or
ret
pop
aas
jle
jge
aam
cwtl
jl,pt
sti
adc
ljmp
sahf
pop
aaa
ret
mov
xor
lea
jbe
lahf
xorb
out
nop
sbb
daa
xchg
and
push
loopne
aas
ret
ret
pop
add
enter
mov
out
arpl
stc
call
sbb
xchg
fsts
filds
mov
sbb
lahf
pop
lock
dec
xor
out
mov
sub
outsl
aaa
or
dec
popa
lock
loop
fcomps
mov
and
jne
mov
xchg
mov
js
cmpsb
pop
sub
mov
or
fiadds
jb
dec
jns
movsl
mov
cli
pushl
xchg
les
push
push
test
mov
test
lock
sub
popf
sub
fisubl
or
imul
icebp
popa
imul
shlb
ljmp
loope
cmpsl
out
orl
int
adc
pop
repnz
pop
push
or
push
xchg
je
sub
pop
and
mov
push
iret
imul
popf
je
repnz
push
imul
mov
iret
in
fstl
cmpsl
xchg
lret
in
rorb
xchg
push
js
rsqrtps
sbb
jo
inc
push
and
test
push
stos
imul
push
mov
stc
or
icebp
sbb
jmp
loope
cmp
pop
sbb
ss
inc
inc
in
sbb
mov
pop
or
push
xor
xchg
int
push
dec
imul
mov
enter
jbe
or
insl
int3
les
mov
jmp
fldcw
mov
fldcw
sub
cmpsl
xchg
lahf
cltd
inc
negb
inc
sbb
sbb
jae
lock
cmpl
aam
cmp
push
sti
int
add
mov
js
cmp
cs
lcall
int3
test
dec
stc
mov
pop
lods
dec
ficoms
leave
movsl
outsb
pop
loope
int
in
mov
aad
jle
jp
push
imul
sub
enter
sti
cmp
mov
and
mov
shr
test
inc
sub
push
int
inc
pusha
mov
push
xchg
pop
inc
mov
adc
and
fcmovu
xor
stos
imulb
add
fisubl
push
or
mov
push
cld
mov
outsb
loope
stos
fbstp
aas
mov
dec
ss
rcrl
cmpl
jl
jmp
push
mov
lock
cli
and
add
int3
das
fldl
add
jb
nop
in
outsl
xor
paddusb
loopne
add
fisttps
pop
mov
mov
xor
xor
loop
outsb
rcr
push
inc
mov
in
int
dec
cwtl
add
ret
push
inc
add
pop
mov
out
movsb
mov
xlat
lock
push
sub
xor
sub
inc
xchg
sub
cmp
incb
mov
push
or
iret
sbb
daa
push
add
stos
inc
into
movsl
cmp
ljmp
xor
and
pusha
mov
fnstsw
lret
movsl
ja
mov
jge
jl
cld
xchg
push
adc
jl
gs
fcoms
fwait
mov
jae
in
sbb
cltd
arpl
sbb
push
shrl
popa
add
ss
pop
push
adc
mov
inc
or
out
scas
cmp
fdivp
mov
jbe
jne
cmc
xchg
sbb
mov
xor
xlat
jbe
mov
add
mov
push
sbb
in
cmpb
or
mov
adc
mov
and
sbb
mov
cs
lahf
scas
insl
inc
pop
cmp
icebp
sbb
cmc
and
cmp
repz
insb
sbb
inc
cld
sub
ss
mov
idivb
leave
out
push
fisubrs
dec
ss
inc
xchg
xor
push
mov
in
xchg
and
xorb
or
xchg
into
xchg
lds
adc
repz
xor
xor
gs
fimuls
mov
xchg
sub
adc
call
inc
xor
mov
dec
imul
cmp
int3
movsl
cli
je
jecxz
cmp
fs
loop
sbb
in
mov
xor
shrb
push
out
or
sub
addb
out
sub
bound
push
pop
sbb
push
add
xor
test
call
mov
dec
jp
xor
movsb
add
pop
sub
leave
mov
or
fwait
cld
rcrl
repnz
nop
sub
cmpsb
push
das
xchg
sub
dec
loop
sbb
icebp
sbb
push
add
fxch
xor
push
stos
ds
or
and
daa
mov
lods
fiaddl
imul
push
call
sub
js
sbb
test
sbb
lock
test
jno
gs
movsb
scas
pusha
or
icebp
cmpsl
jle
in
xorb
cmp
xchg
dec
test
pop
or
jbe
mov
lret
test
pop
js
sub
fcom
decb
imul
jno
stc
es
jle
push
addr16
jnp
idivl
ja
sub
lods
dec
dec
test
sub
shll
cmpl
int
mov
sub
cmp
sub
int
repz
adc
mov
sub
jecxz
testl
cmpsb
and
jmp
fstpl
aaa
out
mov
pop
xor
push
fucomp
daa
jecxz
jmp
push
xor
orb
and
cmc
xchg
je
ljmp
adc
xchg
insb
jmp
xlat
in
rcll
add
lret
frstor
lcall
cmp
sbb
fldl2t
sub
dec
mov
dec
loop,pt
push
andl
jmp
mov
add
push
jno
inc
pushf
pop
cs
jno
sbbb
and
jge
jb
jmp
fwait
iret
mov
outsl
mov
inc
mov
or
cld
push
out
gs
mov
loopne
cmc
add
dec
es
movsb
cmp
add
into
aas
popf
popa
movsb
test
mov
add
stos
repz
xchg
test
mov
mov
out
or
lods
xor
mov
sbb
lods
add
mov
mov
popa
xor
jbe
mov
push
xchg
loopne
mov
add
mov
add
pop
into
daa
fsubrs
jecxz
pop
rcr
imul
push
aad
lret
push
sub
cmp
hlt
clc
jns
sti
adc
adc
icebp
icebp
loopne
mov
adc
mov
add
call
sub
fisubs
repz
test
mov
aas
fmull
enter
das
cli
insb
shlb
nop
or
cli
jmp
mov
popf
lds
call
mov
xor
or
stos
adc
lds
jns
sbb
mov
xor
pop
jg,pt
jns
jbe
jge
es
cmp
pop
data16
jb
add
ret
std
adc
inc
outsl
adc
inc
fnstsw
scas
sub
dec
mov
loope
lahf
push
add
mov
ret
in
mov
pusha
jle
test
xor
add
scas
fidivs
loopne
mov
inc
add
and
aas
pop
push
sbb
rolb
jge
jmp
nopl
pop
xor
enter
cwtl
pop
inc
dec
or
ret
lahf
jmp
rcll
fidivrl
addr16
push
cli
push
insb
add
addr16
or
cmpsl
ja
scas
push
sub
xlat
pop
mov
push
inc
inc
xchg
outsl
add
and
xor
push
fisttpll
dec
or
into
cmp
mov
push
out
js
xor
insb
test
aaa
addb
adc
jb
adc
jle
sub
leave
pop
cmp
xchg
cmp
sub
arpl
decb
sbb
stos
mov
out
aas
mov
lret
insl
mov
push
pop
nop
mov
push
fisubs
pop
pop
xorb
adc
les
adc
mov
jge
cs
xchg
daa
inc
jo
scas
push
and
fdiv
cmp
jbe
aam
mov
cmpsl
jmp
push
and
shlb
or
xor
popf
push
push
mov
dec
sub
mov
jo
or
insb
pop
mov
dec
test
inc
lea
iret
bound
jne
ret
aam
push
inc
push
pop
and
xchg
inc
push
mov
fistpll
std
nop
lock
rcl
scas
fidivs
scas
test
fnop
mov
mov
cli
or
ror
mov
lret
mov
fidivrl
test
mov
cmp
inc
fcmovu
xchg
lods
pusha
scas
lahf
or
xor
int
or
push
mov
inc
and
mov
xchg
rolb
add
daa
add
cmp
xlat
imul
xchg
ljmp
mov
adc
mov
rcrb
and
push
fsave
push
sbb
nop
mov
inc
cmp
push
ss
cmpsb
loopne
pop
jl
dec
xchg
add
stos
fistpl
lahf
xchg
int3
mov
testb
lods
xchg
inc
push
jmp
or
pop
aad
call
js
sbb
fdiv
cmpsb
imulb
enter
pop
mov
xor
in
stc
jnp
xchg
sbbl
cmp
data16
sub
sbb
fnstcw
mov
rcr
mov
icebp
sub
hlt
lahf
ret
mov
push
add
adc
pop
fisttpl
mov
xchg
dec
cmpsl
outsb
pop
icebp
mov
add
push
fnstcw
out
xchg
push
out
lods
rclb
push
jno
jle
jecxz
lods
and
xchg
insl
push
adc
int
ror
cmp
dec
push
hlt
pop
jo,pt
dec
mov
mov
movsb
xchg
mov
sti
push
inc
movsl
cmc
pop
fimuls
popa
push
adc
xchg
sahf
jecxz
cmpsb
fstpt
clc
inc
inc
and
cmp
mov
stos
jne
sub
std
mov
pop
inc
mov
push
or
rcl
dec
sbb
adc
pop
push
mov
shll
xor
negb
adc
subb
pop
and
xchg
popf
mov
jns
inc
adc
mov
out
xor
xor
sti
imul
push
movsl
lea
sub
icebp
cmpsl
mov
jb
cli
outsb
imul
je
xchg
xchg
inc
xchg
jmp
ret
pop
arpl
data16
pop
adc
iret
push
jecxz
lret
test
mov
lods
lds
cld
jecxz
aas
call
cli
adc
xchg
popl
clc
or
dec
aam
movsl
cmp
pop
push
xchg
jge
and
lock
insl
adcl
adc
inc
je
sub
add
decl
dec
js
inc
pop
cld
jecxz
mov
fst
mov
xor
stos
call
jmp
add
xchg
xor
test
push
jo
fwait
test
aad
cmp
push
mov
mov
add
dec
fs
sti
mov
das
xor
mov
mov
cmp
adc
call
daa
sub
fiaddl
push
hlt
push
mov
sub
and
jno
icebp
cld
sbb
sub
dec
enter
push
and
insl
cltd
int3
into
aad
mov
pop
sub
jo
jb
clc
imul
aad
xor
std
arpl
loopne
push
xchg
bound
sub
jmp
out
fisubrl
jnp
fucomp
push
jge
xor
in
mov
repz
xor
push
das
out
rolb
xchg
dec
add
xor
sbb
daa
dec
enter
pop
test
mov
out
cmp
adc
popa
loop
or
lds
adc
js
orb
push
imul
enter
push
test
inc
and
out
add
cmpsb
push
aam
fidivs
xorl
mov
mov
ljmp
outsb
jle
xor
imul
andb
ret
and
daa
or
push
jg
mov
xor
daa
in
cld
addb
repnz
jns
mov
cmc
xor
adc
sbb
cmc
push
ret
addr16
dec
arpl
and
pop
shlb
sbb
fisttpll
out
xor
jne
adc
test
adc
subb
lods
outsb
push
stos
frstor
push
mov
adc
xor
mov
sbb
adc
cmc
popa
cmp
call
imul
or
and
aaa
xchg
cmp
fwait
rorl
cmp
or
add
lock
in
mov
icebp
or
scas
sub
jle
out
mov
ljmp
nop
popf
mov
or
fcmovb
lods
ret
loopne
hlt
dec
fwait
outsl
mov
cmc
push
xchg
lods
sub
pusha
mov
fdivrl
imul
pusha
and
out
outsb
pop
out
repnz
cmpsb
or
js
pop
mov
mov
inc
sbb
jo
jmp
icebp
je
mov
sub
or
xchg
pop
jne
jge
or
mov
imul
stc
jp
fdivr
push
xor
pop
sub
fstpt
repz
lock
mov
cld
adc
add
imul
scas
les
out
test
mov
xlat
cmp
sub
adc
lret
ret
imul
jb
sbb
orl
xor
divb
and
mov
pop
cmp
or
mov
test
lock
imul
fwait
scas
lcall
stos
add
ds
das
cmpsb
and
in
dec
or
inc
movsl
in
sarl
aam
jmp
mov
out
pop
lods
sbb
adc
cmp
sub
adc
lcall
push
outsb
lods
leave
add
mov
sbb
jge
mov
sbb
push
gs
nop
outsb
jae
incl
jae
lock
add
mov
inc
shrb
mov
mov
lods
inc
decb
sbb
inc
sub
fwait
arpl
jnp
movsl
lahf
es
push
pop
pop
mov
pop
mov
into
subl
daa
jns
sub
lret
or
xor
mov
sub
shl
rorb
jno
inc
xor
xchg
sbb
scas
and
cmp
cmpsb
movsl
or
lods
dec
cmpb
retw
data16
je
dec
incb
leave
fidivl
mov
cmp
lret
stos
aas
inc
add
outsl
aas
sbb
int
and
je
or
jae
fadds
sbb
addr16
adc
add
scas
or
in
or
testb
pop
inc
and
js
leave
jns
cltd
sub
jecxz
mov
sbb
pop
in
xchg
push
pop
scas
mov
pop
call
xlat
pop
xchg
pop
pop
fs
push
mov
inc
mov
mov
arpl
sub
ret
push
lock
fnsave
push
add
ret
mov
out
out
mov
les
mov
sbb
push
or
cld
sarl
sbb
xchg
cs
aas
and
cmpsl
xor
call
roll
mov
push
add
mov
inc
pop
int
pop
jbe
sti
aam
and
ja
adc
mov
call
repz
stc
ja
dec
mov
into
adc
rcr
jne
dec
adc
adc
inc
pop
and
mov
mov
mov
mov
adc
scas
or
icebp
sbb
hlt
loop
xchg
outsb
jecxz
mov
repnz
cs
jno
push
add
pusha
pop
adc
dec
mov
jo
push
adc
call
sbb
ffree
adc
cmp
mov
mov
ljmp
out
cmp
inc
jp
and
xchg
dec
jnp
sub
jnp
mov
test
pop
sub
push
push
inc
divl
pop
fldt
aaa
js
cmpsl
or
sub
stos
pop
mov
aaa
jno
adc
or
xchg
mov
push
nop
jmp
jne
inc
popa
movsb
fiaddl
outsb
out
mov
rcrl
andb
popa
jns
inc
fs
insl
aam
sub
sub
cmc
lock
clc
jb
sarb
push
dec
lock
lods
frstor
scas
iret
in
pop
nop
fistps
xor
ficomps
push
dec
adc
roll
xchg
or
fucomip
or
outsb
mov
imul
push
cmp
jge
lods
adc
js
cld
lret
ds
push
dec
jb
fmull
push
mov
and
lahf
das
sub
inc
inc
push
xchg
jbe
rorl
adc
xor
push
test
or
adc
sub
repz
sbb
aaa
popa
jae
imul
jecxz
ja
sbb
cmp
cmp
lods
pop
inc
push
sub
decl
aaa
fmuls
stos
push
repz
dec
repnz
inc
jecxz
inc
shrl
mov
mov
loopne
adc
sub
popl
mov
xor
mov
loop
mov
adc
xor
popa
add
jns
jle
sbb
inc
jmp
popa
add
jno
loop
mov
out
sbb
movsl
std
addl
ljmp
mov
jle
stos
fistpl
xor
testl
sbb
inc
jnp
cmp
jmp
psadbw
outsb
rcr
xchg
mov
hlt
jl
jecxz
rclb
jle
ljmp
test
xlat
loope
push
sbb
adc
cmpsb
repnz
add
mov
inc
mov
fldt
call
cmpsb
pop
es
pop
or
leave
xchg
pushf
jg
mov
mov
ficompl
xchg
call
sbb
ljmp
xchg
leave
push
mov
arpl
addr16
and
jmp
push
outsb
fstl
xchg
adc
mov
stc
xor
lcall
push
cs
cmpsb
cmp
mov
dec
cmp
pop
popa
mov
or
jg
gs
outsl
or
push
sub
or
dec
roll
scas
sbb
fldz
push
ret
mov
in
fldcw
sub
xlat
in
rclb
jbe
repnz
mov
stos
ret
shrb
inc
mov
mov
push
sub
lea
out
dec
mov
jnp
inc
test
push
xchg
mov
pop
mov
test
xchg
sub
lods
push
xor
xor
pop
shlb
mov
mov
outsl
repz
inc
popa
xor
push
and
jae
xchg
rclb
adc
jmp
stos
push
jg
rcrl
sarl
dec
orb
and
sub
push
data16
jns
push
mov
lods
sbb
sub
out
cmpl
and
push
imul
sub
pushf
test
jns
push
aam
jg
sub
xlat
lret
mov
mov
imul
mov
loope
addl
movsb
dec
add
lret
push
inc
inc
pop
jg
out
xchg
jb
mov
rcrb
push
mov
sub
stos
cmpsb
popf
sti
pop
or
sub
repnz
adc
or
xchg
lods
les
sahf
aas
pusha
lret
push
std
cmp
or
cmpsb
leave
mov
aaa
outsl
daa
add
into
rcll
xchg
xchg
adc
sahf
push
cmp
fsubl
hlt
jp
xchg
xchg
or
xchg
mov
fwait
push
and
lea
xlat
in
adc
xchg
mov
xchg
aaa
inc
push
insb
addr16
xchg
fstps
push
mov
pop
incb
and
xchg
adc
jnp
cwtl
repnz
or
or
cmp
push
mov
repnz
mov
divb
push
xchg
repz
cmp
pop
loope
jge
out
stos
push
jmp
mov
jg
or
int
inc
add
add
add
jmp
loope
mov
adc
enter
xlat
fbld
adc
mull
in
fs
fdivrl
cmpsb
loop
out
mov
sub
lahf
scas
jbe
inc
mov
orb
xchg
data16
pop
addr16
shl
pop
pushf
sub
loopne
fwait
int
adc
and
ret
xor
mov
ror
sub
add
jg
and
loop
mov
popa
call
add
and
jp
aas
push
xor
pushf
bound
sub
int
inc
lods
repz
mov
loope
ss
ret
imul
xorl
shlb
add
and
rcrb
or
movsb
ss
maxps
outsl
or
mov
pop
mov
push
pop
pop
inc
pop
stos
ret
sti
shlb
xchg
dec
lret
cmpsl
lds
and
and
repz
ljmp
scas
jp
aaa
aam
popf
add
xlat
mov
pop
insl
int3
xchg
add
ret
ret
add
popa
movsb
popf
mov
inc
xor
fldl
mov
cmp
orb
mov
cltd
add
pop
rcrl
jg,pt
add
idiv
inc
xor
test
cltd
in
sub
aad
dec
push
mov
jmp
push
pop
lds
push
push
xor
add
shlb
orb
arpl
clc
in
and
add
int3
in
add
mov
mov
imul
addb
stos
lods
and
fldt
scas
decb
mov
ror
ljmp
icebp
repz
sbb
cmc
fisttpll
lahf
adc
dec
lcall
and
notb
inc
imul
fisubrs
roll
push
jp
add
fs
pop
dec
mov
lcall
test
jle,pn
clc
sbb
cmp
ljmp
pop
sbbl
imul
xor
iret
sbb
sub
push
lcall
inc
ljmp
xchg
stos
mov
xor
test
inc
gs
mov
mov
sub
popf
sbb
in
lods
jg
adc
enter
fdivl
xchg
jb
mov
mov
ljmp
sub
rolb
rorl
xor
lahf
xchg
cmpb
cmp
lea
sti
roll
rcr
mov
pop
cmpl
std
loope
cmpsl
pop
imul
or
data16
dec
repnz
push
int
out
nop
sub
ret
add
jb
and
jmp
jnp
and
or
mov
jne
and
mov
hlt
data16
add
cltd
add
outsl
lahf
lret
add
pop
ret
cmp
loopne
sbb
pop
mov
sahf
shlb
in
push
arpl
xchg
movl
loopne
jo
lret
mov
xchg
test
dec
cmc
jmp
mov
jae
mov
imul
push
pop
icebp
jbe
aad
lret
lret
movsl
add
sub
mov
pop
cltd
jae
insb
sub
lock
xchg
mov
daa
std
lret
adc
mov
mov
insb
into
push
rol
aad
notb
loope
dec
jle
mov
cli
lods
adc
test
scas
jnp
mov
js
stos
mov
loopne
outsb
pusha
pushf
inc
and
push
add
popf
ja
mov
sub
in
cltd
sub
xchg
nop
add
les
dec
leave
cltd
dec
mov
fisttpl
int3
inc
scas
jmp
out
inc
aam
inc
add
divl
mov
aam
shll
scas
sahf
adc
scas
cmpsb
addl
adc
lahf
cmovns
and
jo
arpl
jns
inc
sti
jno
pop
pushf
jb
int
sub
aad
imul
jmp
sarl
enter
mov
lods
jbe
mov
inc
arpl
xor
cs
addr16
jo
lret
cmc
jnp
inc
push
mov
xor
mov
mov
or
aas
lret
jmp
push
or
xor
shrl
sub
pop
pop
xlat
mov
jbe
mov
aas
pop
jg
push
lret
jnp
leave
jnp
jnp
outsb
cmp
xchg
out
cmpsl
dec
outsb
js
mov
push
out
andb
sub
imul
inc
push
pop
test
in
dec
sbb
aaa
mov
hlt
cmc
fldl
cmp
loop
push
andl
mov
dec
addl
push
out
ss
in
hlt
xchg
mov
leave
push
sub
dec
mov
movsb
add
dec
or
test
jmp
add
xorl
lret
movsb
adc
xor
sbb
ds
jg
js
test
stos
ss
jl
xchg
cmpsl
xor
aas
fldenv
shrl
cmp
out
sahf
sbb
test
ja
push
sbb
lcall
mov
insb
cmp
adc
sbb
sahf
add
mov
lods
inc
cwtl
inc
add
sub
scas
or
aas
ret
fnsave
pop
lret
fs
sbb
aaa
lea
sbb
pop
push
inc
and
lods
mov
xchg
sub
push
dec
sbb
sub
stc
ja
aas
lods
push
sahf
xor
iret
scas
iret
jl
pop
mov
scas
stc
jno
xchg
add
call
sub
xor
pop
dec
icebp
loop
sbb
jp
imul
imul
in
mov
pop
inc
xchg
cli
jp
scas
mov
out
and
jp
gs
outsl
mov
sbb
ret
repnz
sbb
sbb
mov
repnz
cltd
jo
sub
loope
rol
or
jmp
stos
xchg
inc
in
adc
pop
xchg
mov
lds
cmp
push
pop
pop
add
or
sbb
pop
xor
fldt
mov
add
repnz
jns
xor
mov
call
dec
outsl
xor
xlat
movsl
mov
cmp
test
test
add
xor
push
mov
loop
xchg
pop
ljmp
adc
push
in
arpl
add
sub
into
adc
jmp
popf
pushf
add
cmp
jbe
xor
sub
lret
add
out
xor
cmp
faddl
jle
outsb
pop
ja
cmp
adc
and
out
into
call
lds
aaa
xor
loopne
xlat
js
shl
adc
push
shrb
icebp
mov
test
cmp
in
aaa
enter
sub
pop
or
movsb
insb
and
je
mov
stc
test
cmp
jge
xchg
lahf
and
out
adc
or
jno
leave
dec
xlat
cmp
pushf
inc
pop
inc
and
xor
xchg
in
idiv
stos
in
and
hlt
or
push
add
data16
xchg
mov
pop
pop
add
outsb
jae
into
insw
sbb
jne
jbe
pushf
jnp
popf
push
push
rcrb
data16
jecxz
test
push
das
lahf
hlt
jl
xor
push
sti
mov
test
lock
adc
push
mov
roll
jae
aaa
repz
xchg
jle
or
aaa
cli
scas
fmuls
ret
subl
add
xor
dec
into
push
ja
jmp
int
imul
test
push
repz
sbb
in
and
xor
inc
fisubs
mov
lea
xor
ret
push
stos
jmp
or
and
mov
fmul
push
scas
cld
adc
test
out
fcoml
add
sbb
mov
sbb
call
outsl
aad
push
jecxz
lret
lcall
rcl
fcoml
ljmp
arpl
pop
scas
in
sti
push
mov
xchg
lds
je
dec
xor
addr16
lahf
lods
dec
jo
in
scas
dec
bound
or
and
mov
adc
leave
ljmp
sbbl
jle
outsb
aad
jo
pop
and
cltd
jg
cmp
mov
mov
loop
out
fdivr
jo
fs
std
fiadds
movsb
push
xchg
ret
xchg
fists
add
pop
adc
scas
cmpsl
inc
add
popfw
mov
rcrb
fldt
mov
xor
call
ficomps
je
ret
mov
outsb
adc
pop
pop
jne
daa
inc
rorb
sbb
sub
arpl
jae
subb
jmp
sub
inc
repz
dec
aas
rcll
push
push
adc
inc
jo
dec
clc
roll
sbb
xor
sbb
nop
aas
jo
pop
in
mov
cs
mov
insl
and
inc
cmp
cld
imul
clc
sub
jp
mov
dec
mov
xchg
shll
pop
dec
jecxz
fisubrs
inc
push
test
cmp
adc
sahf
jl
imul
push
push
mov
fldl
in
loopne
ljmp
cmp
mov
out
mov
push
xchg
repz
dec
dec
fs
xor
ljmp
addr16
mov
int
insl
push
addb
popf
jecxz
cmpl
les
les
cmpsb
fdivrl
or
dec
jmp
shlb
out
lds
xchg
and
add
movsl
jnp
clc
pop
pop
or
out
aad
and
jbe
lahf
mov
jp
mov
icebp
pop
insb
or
jbe
shlb
push
insb
lods
inc
pusha
insb
add
xchg
mov
sub
xor
push
ficompl
mov
inc
or
insb
cmpsb
mov
stos
out
push
sbb
fdivl
rolb
jns
push
push
push
jno
in
pop
fcompl
adc
pop
daa
and
cli
pop
lret
jno
and
add
xchg
push
repz
xlat
push
mov
mov
adc
aad
xchg
outsl
jl
add
aas
add
sub
sub
cmpsb
sub
int3
cmp
mov
adc
inc
mov
mov
and
mov
pop
pop
push
push
inc
leave
movsl
loop
and
sub
bswap
in
push
out
out
test
les
jmp
push
xor
test
lea
jmp
cmp
push
push
ret
out
and
mov
clc
mov
mov
jge
and
cmp
inc
jp
add
sbb
cmp
in
cmp
jns
lcall
ljmp
or
es
push
and
sub
pop
xchg
mov
call
mov
repz
xchg
jle
dec
jecxz
pop
jae
fistps
xor
sub
sub
adc
and
fidivs
popa
mov
cmpsb
pop
sbb
sahf
xchg
leave
push
lds
mov
int
cwtl
mov
push
out
insb
push
cmpsl
lahf
adc
andl
mov
stc
pop
xchg
inc
fnstcw
pushf
sbb
push
xor
sbb
sbb
xor
pushf
insb
outsb
xor
int3
mov
es
add
icebp
xchg
outsb
mov
mov
inc
popf
ds
call
nop
adc
imul
sbb
or
in
sub
imul
xlat
inc
push
lock
fsts
decb
ret
out
es
push
adcl
push
je
xor
int
or
jae
pop
xchg
clc
call
add
inc
cmpsb
pop
adc
cs
or
pop
lcall
push
enter
ds
loop
add
mov
repz
xor
adc
mov
cmp
out
adc
sbb
and
test
aaa
push
pop
repz
stos
popf
fiaddl
cmp
cmp
lods
cmpsl
fwait
xlat
mov
scas
mov
dec
mov
lea
bound
or
jge
mov
jl
dec
gs
decb
sub
leave
movsl
jecxz
mov
or
cmp
xor
jmp
mov
ret
notb
xor
jno
pop
loop
pop
or
sti
sub
and
insl
xchg
pop
xor
and
movsb
xchg
dec
sub
ss
sbb
gs
mov
insl
pop
arpl
jle
cli
daa
sbb
fcomps
mov
iret
movsb
imul
scas
xchg
fmull
xchg
and
mov
jne
push
xchg
inc
cmp
fs
xchg
popf
std
adc
fcomi
jo
lret
pop
jp,pn
jo
leave
stc
push
xchg
ret
loopne
push
loope
stos
push
sbb
test
cli
dec
dec
mov
cs
test
xor
clc
ljmp
addr16
rorl
andl
pop
push
roll
xor
sbb
pusha
sbb
jne
inc
lods
push
mov
xchg
push
mov
mov
jmp
pop
xchg
inc
xchg
pop
iret
inc
pusha
cs
mov
sub
cmp
xor
jbe
mov
bound
and
aam
test
ret
mov
inc
cli
jp
sbb
cmc
outsl
insl
xchg
test
xorb
ret
sbb
cmp
jno
xlat
sbb
xchg
cmpsl
or
xor
jl
arpl
mov
lock
call
insb
dec
movsb
xchg
adc
cwtl
pushf
mov
fwait
das
mov
rcr
outsb
loop
pop
push
loopne
pushf
ret
jmp
std
imul
inc
movl
sub
in
pushf
out
lret
gs
fmul
push
jno
push
outsl
pop
dec
inc
std
test
adc
push
jnp
mov
sarb
les
add
adc
in
test
sbbl
mov
sbb
mov
inc
xlat
cltd
mov
inc
inc
mov
pop
adc
loope
cmovge
dec
xlat
ficoml
add
ret
movl
mov
xor
mov
push
mov
lret
jle
mov
xchg
pop
mov
lods
scas
xor
fcompl
dec
and
inc
sbb
gs
gs
add
cwtl
stos
aaa
rcr
nop
daa
sbb
pop
roll
push
dec
or
xchg
ds
fnstsw
mov
dec
push
mov
lahf
cltd
mov
dec
int3
xor
fcmovb
call
sub
and
outsl
inc
jle
inc
adc
dec
in
ret
add
xchg
inc
cmp
scas
xchg
mov
leave
mov
mov
les
inc
outsb
and
xor
push
test
add
jo
push
popl
mov
fs
mov
outsl
ficomps
mov
push
mov
jb
jbe
dec
mov
daa
rcrl
in
xchg
jle
xchg
push
pop
xchg
pop
jp
test
into
adc
pop
dec
jb
dec
sub
xchg
mov
push
mov
imul
test
cli
stos
daa
mov
in
cmp
add
or
imul
inc
xor
mov
sub
push
add
mov
and
daa
or
loope
sahf
lods
cs
cmp
nop
mov
in
mov
sbb
test
or
mov
add
lahf
xor
repz
cmp
insl
jecxz
xchg
daa
xchg
add
add
sarb
push
push
leave
cmp
cld
xor
dec
xchg
and
jecxz
xchg
fisubl
cltd
add
push
and
test
loop
pushf
jmp
mov
sbb
push
fisttpl
dec
cmp
int
fdivs
mov
loop
addl
jmp
push
sbb
or
loop
add
cmp
mov
sti
dec
sub
cmp
push
mov
stos
ljmp
cmc
cs
cltd
dec
shl
mov
mov
mov
add
loopne
push
mov
rcll
popa
add
scas
and
lahf
fs
insl
mov
jo
jnp
out
call
mov
movsb
cmp
pop
inc
push
dec
pop
adc
sbb
aas
das
clc
aad
test
mov
or
cwtd
call
cltd
test
jno
mov
or
push
lahf
das
ds
push
jns
pop
les
mov
jl
or
sbb
int3
je
jg
add
adc
sub
xchg
xchg
inc
in
jnp
or
mov
jo
aam
dec
push
push
call
in
adcb
in
popf
add
pop
push
push
clc
cld
jg
xlat
iret
push
rorl
imul
inc
fnstcw
ja
sub
jns
dec
mov
cmpsl
or
sbb
push
mov
pushf
jbe
insb
cmc
aad
push
scas
xor
pop
dec
and
dec
jl
rorl
or
imul
cmpsb
xchg
aam
cmpsb
jp
mov
push
pop
pop
mov
mov
aas
jno
fdivl
dec
dec
scas
pop
inc
pop
push
mov
mov
jne
mov
sbb
je
jnp
dec
cmp
push
inc
mov
rcrl
movsl
insb
stos
je
clc
cmpsb
lea
mov
cwtl
loop
out
push
cmp
xchg
dec
add
add
or
xlat
adc
mov
mov
ror
sti
push
and
cmp
mov
test
xlat
add
test
sbbl
mov
arpl
add
lahf
xor
bound
jmp
fisubl
mov
aam
loope
inc
inc
jo
cmp
xchg
push
pop
fldt
xchg
std
xor
adc
mov
pop
cmpsl
punpcklwd
jg
jne
inc
sub
mov
fsubl
cs
sbb
xor
mov
int3
cmp
xchg
jg
sahf
rcr
sub
xor
divl
inc
mov
mov
mov
xor
cmc
inc
mov
pushf
dec
pop
outsb
mov
lock
bound
mov
push
in
and
roll
xchg
mov
call
sbb
popf
lahf
push
mov
cmpsb
sub
gs
mov
movsb
outsl
add
or
lret
and
insb
jmp
gs
lods
in
shl
cmpsl
popf
jnp
nop
shr
dec
pop
and
inc
mov
mov
imul
cmp
jle
inc
xchg
xlat
xchg
mov
js
rorl
pop
cmc
imul
pop
scas
inc
jbe
or
dec
jge
mov
or
xchg
push
adc
xor
cmp
adc
clc
and
fcmovnbe
sub
out
cli
push
mov
cli
insl
or
in
stos
aaa
jecxz
test
leavew
push
rorl
xlat
andl
loopne
and
jge
xchg
sbb
adc
out
mov
inc
lock
xor
movsb
sub
cwtl
xor
inc
jbe
dec
mov
jmp
push
add
pop
shll
cmc
arpl
cmp
in
jge
movb
mov
lods
push
pop
cmp
jmp
jb
jns
js
push
and
sub
cltd
sub
sarb
sub
cli
cmp
jle
jne
jbe
mov
fisttpl
nop
inc
xor
push
fdivl
xor
pop
dec
pop
and
in
and
test
add
jno
rdmsr
aaa
inc
jne
pop
xor
sbb
inc
mov
ret
xchg
add
mov
mov
ror
je
fwait
push
ja
push
bound
and
js
fsubp
loope,pt
inc
test
xor
ja
push
push
mov
xchg
pop
dec
sbb
fucomip
daa
shrl
test
fisttpll
pop
add
inc
stos
and
movsb
and
pop
fs
push
mov
adc
ja
push
xor
mov
xchg
push
jne
and
mov
or
fstps
cmpsl
sarl
roll
push
sub
notb
push
mov
inc
xor
stc
mov
mov
sbb
mov
fs
xor
xor
leave
js
xchg
lea
add
sbb
cmp
sub
mov
xchg
add
lret
add
data16
int3
cmp
mov
jp
enter
adc
mov
lods
dec
call
pop
cli
dec
stos
sub
push
mov
push
inc
in
or
pusha
bound
xchg
or
fsubp
jno
sub
sbb
enter
std
aas
cld
xor
cmp
in
cmpsb
sahf
push
sahf
ret
fsubr
mov
cmp
jno
jae
inc
aad
in
fxch
inc
mov
dec
dec
sar
xor
push
sbb
or
inc
mov
pop
jne
and
mov
ljmp
arpl
bound
imul
outsl
stos
sub
inc
xchg
movzwl
lea
lahf
and
mov
hlt
jge
cwtl
or
fisttps
xchg
jb
clc
adc
dec
enter
xlat
mov
adc
mov
sbb
test
insb
pop
or
xchg
xchg
daa
cmp
test
or
cmovnp
aaa
sbb
cltd
jb
into
add
scas
mov
pop
ret
loop
jmp
popa
es
je
xchg
xchg
mov
popf
inc
mov
jmp
and
test
ja
lcall
xchg
ja
sbb
ss
out
in
rcr
adc
cmp
aad
mov
incb
arpl
icebp
xchg
cmp
and
int
addl
xor
xlat
inc
push
lods
add
pop
jge
cld
xchg
and
mov
jbe
fildll
dec
or
or
sbb
in
bound
pushf
divb
cmp
pop
sarl
push
leave
ds
xchg
mov
icebp
lret
fcomi
test
shll
inc
sub
sti
lods
pop
insb
push
sahf
inc
fsubrp
in
sbb
mov
jle
push
aad
inc
pcmpeqb
mov
mov
stos
mov
das
lea
add
outsb
sub
sbb
rorl
and
aad
push
jne
mov
inc
mov
faddp
pop
cli
jge
mov
mov
decb
pop
ror
or
inc
sub
rcll
cmp
aaa
fidivrl
mov
lahf
out
out
dec
xchg
ror
dec
pop
lahf
pop
dec
cmp
ret
scas
mov
mov
push
dec
mov
push
adc
inc
mov
adc
jnp
in
clc
out
ja
xor
rcrb
cwtl
mov
pop
mov
jno,pn
pop
mov
mov
mov
mov
adc
add
cs
aad
stos
mov
int
popf
fistl
arpl
jp
jo
ss
xor
addr16
filds
push
mov
sbb
adc
and
in
movsb
out
lods
cmp
repz
or
mov
popf
iret
mov
jl
leave
std
lret
and
mov
xchg
xchg
addb
dec
jnp
push
push
into
fnstsw
test
push
sbb
cltd
adc
clc
stc
lret
or
outsb
add
push
jmp
pop
pop
and
push
iret
jb
sub
nop
cmc
xor
mov
int3
loope
sub
mov
repnz
rclb
mov
jnp
loop
fcmovnbe
sbb
movsl
das
fisttpll
ret
jp
imul
mov
rcrl
xchg
daa
mov
out
mov
inc
loopne
dec
or
cwtl
movsb
pop
pop
and
jb
mov
sbb
jp
jmp
sub
cltd
xor
xchg
jno
out
sarl
push
push
pop
pop
mov
dec
and
inc
xor
or
rol
pop
jbe
pop
add
mov
cmp
sti
test
dec
in
xor
repnz
dec
sbb
mov
shr
shrb
sub
ljmp
jge
inc
sbb
insl
mov
int
xchg
stos
ret
add
into
iret
or
inc
call
or
xchg
sub
mov
test
hlt
push
lcall
add
fisttpll
test
fdiv
rolb
insb
jbe
mov
jmp
clc
cwtl
inc
cmp
les
cltd
jns
add
pop
cli
add
add
pop
xchg
leave
mov
mov
hlt
shll
sahf
inc
gs
adc
mov
xor
push
jae
scas
cmp
sbb
fists
imul
call
xchg
xchg
xor
iret
sbb
cltd
push
jge
push
jmp
xchg
lret
fwait
or
jae
lret
clc
shrl
into
je
xor
xchg
lods
sub
adc
xor
into
out
push
fidivl
or
jmp
sbb
lret
icebp
xchg
sti
les
int
cmp
push
mov
cmpsl
lahf
mov
fisttpl
pop
arpl
pop
xchg
push
pop
sbb
int
mov
mov
adcl
fstps
or
fwait
aam
xchg
int3
aaa
fnsave
xchg
movsb
sbb
and
aad
or
iret
cmp
jmp
fdivp
jno
push
pop
push
fbld
add
dec
cli
je
cltd
xor
dec
push
dec
bound
insb
and
dec
mov
dec
jae
pushf
mov
or
mov
xchg
pop
lea
inc
mov
in
or
iret
inc
jb
js
into
cmp
dec
mov
rolb
add
movsb
pop
xchg
cmp
fiadds
add
mov
inc
inc
ds
cmc
push
insb
sbb
jmp
cli
into
add
and
int3
neg
outsb
mov
cmp
neg
scas
imul
out
nop
jle
xchg
shll
daa
sbb
dec
aaa
sbb
outsl
rolb
mov
cmc
xor
enter
or
push
icebp
fsubs
sbb
and
mov
adc
add
push
adc
filds
subl
fidivl
push
out
fldl
dec
cvtpi2ps
cmp
sub
pop
push
and
jl
mov
enter
lods
mov
xchg
xchg
std
fldcw
es
pop
mov
pop
or
xor
bound
add
enter
jp
fimuls
push
test
std
daa
sti
push
pop
adc
push
inc
xchg
mov
mov
ja
jg
push
mov
cwtl
dec
insb
lea
pop
test
pop
jo
cmp
hlt
leave
lret
sbb
adc
jns
outsl
aas
jae
mov
sbb
mov
sbb
push
mov
pop
sub
cs
push
int3
ffree
fdivr
testl
flds
mov
inc
je
scas
pop
aaa
bound
push
in
sahf
movsb
or
push
loopne
in
les
pushw
mov
pop
inc
ret
jo
add
or
jle
pop
les
lcall
or
and
jae
mov
jle
mov
mov
repnz
cltd
xlat
fnsave
sbb
popa
in
adc
adc
cmp
lret
fwait
inc
aad
inc
mov
jge
dec
or
jecxz
inc
out
scas
ja
sub
jmp
xor
es
lea
lds
push
xchg
mov
mov
test
ds
inc
sub
shl
add
cmp
cwtl
push
push
mov
push
jg
fs
push
sub
and
lret
xor
mov
dec
jb
lcall
pop
ret
popa
lea
xor
shlb
push
dec
xchg
in
pop
out
jl
rclb
mull
or
or
in
ret
pop
mov
mov
inc
sub
add
clc
popa
vcvttsd2si
es
shrb
and
in
das
cmp
adc
dec
jns
test
push
pop
setp
rcll
dec
cmp
loop
hlt
or
lahf
in
inc
pop
cltd
sbb
lods
lcall
cs
hlt
fmuls
mov
mov
rcrb
stos
es
push
js
push
pop
test
ljmp
or
and
test
adc
or
test
mov
js
dec
jb
adc
and
pop
aaa
pop
jmp
jns
loopne
dec
jge
jp
lock
push
pop
sub
adc
cmc
pop
inc
pushf
mov
mov
cli
mov
leave
nop
dec
je
mov
inc
int
lahf
adc
xchg
cmp
dec
test
movsl
out
jb
adc
lret
decl
les
daa
rcrl
pop
jl
dec
inc
jne
push
fists
mov
cmp
js
jmp
dec
cmpsl
mov
jl
inc
mov
dec
fwait
mov
jle
lahf
fs
stos
dec
jae
into
jno
lcall
scas
pusha
mov
int3
mov
cltd
idivb
push
jno
xchg
nop
and
xchg
fs
jg
pop
dec
int3
fidivl
pop
sub
and
cmpsb
xchg
cmp
inc
pop
jp
or
in
push
mov
dec
dec
or
int
jbe
cli
sahf
cmp
mov
mov
xor
addr16
pop
dec
sti
cltd
data16
cvttps2pi
ss
in
jmp
stos
movsl
test
in
cmp
in
aam
push
in
pusha
stos
pop
rolb
ja
cmp
adc
rcrb
pop
jb
sahf
movsb
mov
mov
cwtl
dec
ds
inc
jp
push
xor
xor
sti
rorb
xor
aad
xor
das
inc
pop
jbe
cmp
imul
dec
aaa
mov
adc
adc
lods
lcall
sbb
in
in
and
icebp
mov
jecxz
cmpsb
pop
fnsave
push
popa
fsubp
lds
jmp
mov
adc
sbb
adc
push
arpl
test
push
lret
mov
ret
hlt
in
push
shrd
adcl
jb
and
jae
daa
lock
out
shrb
insl
sub
ret
mov
xor
xor
inc
add
leave
push
mov
push
cs
fldl
and
roll
movsb
pop
loop
jmp
scas
rcrl
sbb
xchg
sti
daa
rcr
leave
aad
data16
scas
scas
dec
sub
cwtl
or
js
lea
int3
sbb
and
cmp
sbb
sahf
sub
pusha
std
sbb
push
scas
mov
adcb
ljmp
imul
or
nop
gs
xchg
mov
sbb
pop
out
pop
test
sub
dec
sti
fwait
add
sbb
add
pop
loop
mov
pmulhw
out
imul
jg
pop
clc
fwait
sbb
mov
mull
push
dec
jnp
aas
faddl
aam
inc
xchg
mov
stc
icebp
mov
dec
setbe
fidivs
mov
filds
pop
rolb
test
addl
mov
dec
jmp
lods
inc
daa
hlt
and
out
xchg
inc
mov
imul
aad
cwtl
rolb
test
jo
add
mov
add
mov
dec
out
inc
shlb
mov
sub
lods
sub
cmp
adc
pop
fcomi
dec
hlt
in
arpl
nop
sub
add
es
popa
sbb
push
jl
lds
clc
xor
dec
pop
inc
cmp
daa
insl
lods
addb
mov
add
mov
js
jmp
mov
std
or
fcoml
xchg
mov
mov
cwtl
aas
in
xchg
adc
icebp
lock
mov
fistps
jl
out
add
aad
fistl
in
lods
cwtl
sub
jecxz
adc
pop
jl
mov
pop
sti
ds
or
stos
imul
mov
aam
push
stc
adc
push
iret
lds
mov
fsubl
fs
lret
gs
xchg
inc
add
pop
fstp
sbb
in
sahf
cld
scas
lahf
out
ss
hlt
mov
or
sahf
mov
lods
repz
pop
push
jae
pop
sbb
xlat
pushf
in
xor
lret
xor
sub
test
mov
cmpsb
cmpl
jle
mov
pop
push
push
mov
roll
fadd
adc
adc
push
jge
test
in
pop
loopne
shrl
jg
and
inc
lods
xchg
lahf
insl
and
or
loopne
aaa
jnp
push
xchg
sahf
repnz
push
iret
cld
xor
dec
ds
rcll
imul
cwtl
cli
mov
pusha
orb
cmp
mov
or
divl
rclb
cli
fs
xchg
and
das
mov
push
cwtl
jne
lds
loopne
cmpsb
lds
jl
push
xor
mov
adc
fsubl
jne
enter
fs
aaa
mov
add
ljmp
cmpsb
cmp
sti
jp
mov
notb
hlt
push
and
std
dec
mov
ret
mov
bswap
mov
es
ds
push
push
xor
jl
je
or
sub
xchg
jo
int3
jbe
xchg
ljmp
jno
iret
sub
cmc
out
orl
mov
aam
je
sbb
jo
add
lea
and
mov
dec
xchg
push
jecxz
cmp
xchg
lret
orl
das
lds
jo
push
leave
in
sahf
cld
or
repnz
je
or
or
cmp
pop
or
mov
loope
jns
in
xor
adc
leave
cmpsb
mov
jbe
dec
ret
in
pop
mov
aam
lock
mov
js
mov
lea
cwtl
mov
mov
ljmp
inc
inc
sbb
dec
xchg
iret
pop
les
lock
out
inc
mov
sti
xor
les
sbb
and
in
lret
out
mov
push
cmpsb
sub
add
mov
arpl
xor
pop
mov
sbb
inc
sbb
xor
fwait
pop
leave
sbb
popa
out
inc
mov
jbe
lods
push
add
cwtl
aad
out
adc
into
roll
add
test
push
fcoms
jae
gs
leave
sbb
imul
push
cltd
out
lahf
addr16
mov
dec
sbbl
cmp
in
lahf
mov
ret
leave
and
push
mov
pop
ljmp
adc
mov
imul
andb
daa
in
sbb
inc
fs
rorb
int3
or
js
push
out
adc
inc
adc
mov
gs
in
adc
jecxz
lods
adc
add
fimuls
mov
cmc
pop
xchg
mov
xor
or
les
add
daa
dec
push
jmp
adc
cmp
movsb
xlat
insl
or
xchg
loop
pushf
rolb
pop
sbb
inc
aad
mov
cmpsl
lahf
pop
sbb
insl
lds
add
pop
test
test
sub
or
es
dec
or
jmp
insb
fwait
inc
jg
cltd
test
and
fnstenv
xchg
aad
ret
mov
xrelease
test
sbb
lcall
sub
sti
ss
xor
mov
mov
xorl
ljmp
shr
push
divl
jns
mov
ds
or
lods
es
add
sahf
inc
inc
sbb
mov
cmp
sub
adc
mov
inc
xchg
lcall
cwtl
in
sub
stos
sahf
inc
mov
inc
mov
inc
xlat
test
mov
inc
enter
in
lds
push
xchg
inc
cmp
xchg
clc
imul
add
das
aad
adc
add
cltd
outsb
mov
mov
push
movsb
das
or
dec
sub
into
sub
inc
clc
bound
push
outsl
popf
leave
add
popa
repnz
out
cmp
test
loopne
dec
data16
cmp
jp
cmc
lea
imul
sub
popa
out
lock
pop
sbb
inc
add
clc
gs
cmpsb
pushl
cmp
xchg
dec
lods
xor
inc
es
sbb
push
jnp
and
cld
fcmovnu
imulb
mov
dec
pop
dec
out
mov
test
pop
jno
lret
loop
sub
rolb
lods
adc
mov
cmp
nop
stos
call
pop
and
sbb
daa
mov
scas
inc
lret
fsub
xchg
rolb
fdivrp
rcr
out
xchg
or
jmp
sbb
mov
xor
inc
and
jle
popa
push
add
out
pop
dec
xor
push
popf
mov
int
mov
dec
pop
inc
mov
call
xchg
lods
push
inc
outsb
loopne
adc
inc
scas
cs
sub
pusha
dec
inc
push
sub
push
test
cmp
push
cs
mulb
shl
inc
fisttps
insl
cmp
pop
jl
fucompp
adc
ss
lods
and
mov
lods
pop
test
sub
pop
in
or
pop
fstps
pop
lahf
jge
mov
mov
bound
enter
add
jmp
jae
test
outsb
fsubrs
inc
test
mov
test
sub
lods
pushf
fisubrs
stos
sub
sub
sbb
outsb
mov
sub
pop
inc
push
cmp
sbb
cmpsl
cmp
pop
push
outsl
cmpsl
cli
xchg
mov
jne
pusha
or
add
jo
sub
adc
insl
xor
sub
rorl
cmp
iret
fs
shlb
pop
sub
sub
and
jo
ret
pop
xor
roll
out
adc
aas
rorl
fnsave
outsb
fs
ljmp
lods
mov
pop
jp
sarl
sbb
scas
jle
pop
sub
push
test
movsb
sbb
push
out
dec
stos
mov
call
cltd
fdivs
xor
in
sub
lahf
fsubl
pop
icebp
orb
jo
sbb
jo
or
scas
adc
sbbb
pop
lret
jl
pop
loop
imul
leave
insl
loope
or
push
inc
push
int
popa
inc
jg
xor
stos
push
shll
out
fnsave
test
cli
jo
iret
pmaddwd
ds
xlat
push
jl
jnp
sbb
call
lock
imul
mov
rorb
stos
into
pop
mov
lret
and
or
and
push
push
mov
test
xor
out
lods
imul
cmc
inc
out
add
aam
idivl
stc
dec
popf
sti
or
arpl
sub
or
mov
cmpsl
sub
aam
and
es
loopne
lods
pop
add
call
jno
mov
nop
fdivrl
sub
push
fcoml
scas
je
ret
add
push
cli
mov
cmp
addl
pop
xchg
loop
add
test
push
pop
mov
sti
xchg
pop
test
inc
repnz
rcll
jae
nop
push
cld
mov
repz
jne
add
xorl
mov
shl
sub
jbe
icebp
adc
scas
sub
in
dec
outsb
dec
mov
sub
sbb
leave
mov
faddl
pop
imul
repnz
xchg
xchg
push
mov
pop
in
or
push
outsl
inc
add
and
jp
int
movsb
push
sub
insb
pop
cmp
out
es
lods
add
xor
scas
jg
sti
std
lods
mov
pop
xchg
rcrb
outsl
fdivs
sti
pop
adc
outsl
sahf
xor
dec
mov
mov
jecxz
cs
pop
and
push
mov
cltd
lcall
push
push
mov
insl
cmp
jecxz
sarb
imul
sub
lret
outsb
rorb
jecxz
push
pop
icebp
pop
fwait
dec
add
xchg
push
leave
cmpsl
dec
enter
and
cmp
xor
dec
add
xchg
xchg
mov
jae
dec
xor
daa
cmc
aam
inc
fcom
fs
xchg
xchg
mov
mov
dec
lahf
add
xchg
mov
nop
or
je
xlat
cmp
pop
iret
cmp
xchg
sbb
enter
or
into
inc
sbb
jle
test
or
dec
mov
jbe
jae
xchg
shlb
pop
imul
cs
std
mov
mov
add
cwtl
adc
arpl
xchg
and
repnz
mov
les
adc
aam
adc
or
shlb
cmpl
imul
imul
and
jge
dec
push
iret
xlat
cmpsb
insl
or
sbb
inc
dec
pop
mov
adc
ret
adc
lcall
sahf
rol
stc
rclb
pop
aas
push
lahf
or
jo
aad
cmp
lret
dec
cmpsl
insb
sub
xchg
ret
xlat
repnz
and
jp
or
lds
push
insw
jl
pop
or
cmp
mov
xor
xchg
jbe
adc
push
lea
sbb
push
cld
ds
xchg
rcll
fdivrl
inc
mov
inc
cld
sub
xchg
jbe
es
mov
rclb
inc
mov
cmp
mov
sub
test
fst
out
inc
test
cld
jo
repz
sbb
daa
inc
sub
sbb
pop
push
mov
push
out
int
cmp
js
push
scas
rcll
test
cmp
push
movsb
xchg
xor
pop
punpckhbw
ljmp
xchg
add
punpckhbw
pop
xchg
xchg
test
movsl
repnz
jo
aaa
dec
push
push
iret
cmp
outsl
inc
iret
insb
xor
or
jb
fs
dec
stos
sahf
sub
enter
fwait
push
dec
aam
fisubs
inc
fidivl
jns
je
xchg
daa
sbb
jo
popf
jne
sti
dec
icebp
jno
mov
xchg
adc
arpl
mov
dec
xchg
mov
sbb
subb
jbe
in
jo
lock
scas
bound
aaa
sbb
fnstenv
pop
or
fst
mov
popf
in
xchg
push
sahf
enter
sub
jl
dec
push
xchg
stc
call
enter
fisubl
outsb
ret
mov
fs
repnz
gs
mov
pop
clc
xor
inc
dec
sbb
mov
mov
push
scas
ret
mov
lock
jno
push
ret
pop
shr
out
add
cmp
push
add
sbb
enter
sub
push
jb
subl
das
xchg
fucom
xchg
ja
negl
sahf
repnz
jmp
jp,pt
mov
xchg
fnsave
inc
xor
and
adc
or
mov
inc
cld
mov
mov
scas
pop
mov
dec
ljmp
int3
dec
lods
push
jno
in
std
mov
out
mov
ret
stc
pop
mov
mov
and
add
sub
jg
cmc
cmp
add
jp
icebp
ret
notl
push
stos
mov
pop
pop
mov
jns
xchg
sub
rcrl
pop
movsl
jecxz
mov
or
mov
scas
adc
out
clc
outsb
mov
cmpsb
xchg
mov
into
out
jbe
dec
xor
mov
jne
leave
mov
dec
xor
push
xchg
call
outsb
mov
mov
add
pusha
mov
test
sub
xchg
cmp
imul
notl
add
xor
jecxz
mov
and
adc
cmp
out
adc
cld
inc
fcomps
pop
inc
ljmp
mov
int3
or
out
cltd
popfw
lret
jae
dec
pop
scas
pushf
xchg
pop
test
inc
das
inc
jo
popf
xchg
xor
adcl
xchg
ret
mov
ds
in
repnz
push
pop
jge
jl
int
shr
imul
mov
mov
mov
ds
lods
bound
mov
cmc
fsubl
scas
ljmp
or
mov
rolb
stc
jl
jge
mov
mov
sbb
es
fmuls
push
je
push
movsb
rep
mov
fcomip
mov
mov
movsl
or
negb
cli
or
outsl
mov
in
lods
sub
cmc
push
mov
pop
inc
mov
ljmp
lret
mov
cltd
sub
mov
jl
es
ljmp
adc
cmpsb
cmp
pop
xchg
sbb
fsts
xchg
dec
fildll
fs
shlb
dec
push
jp
push
adc
and
lret
xor
lock
outsl
fscale
mov
add
jne
xlat
mov
fadds
pushf
cmpsb
iret
sbb
jge
inc
xchg
and
lds
ret
jmp
xbegin
jp
shlb
test
mov
mov
fst
jo
push
push
and
push
jp
mulb
imul
insb
inc
cmpsl
scas
loope
sbb
fdivl
fnsave
lret
sahf
ret
out
lcall
out
add
outsl
out
nop
sub
jno
mov
inc
cwtl
mov
ret
jnp
rcrb
nop
enter
dec
adc
mov
pop
jns
xchg
dec
shlb
jo
push
xor
int3
add
sti
pop
push
xor
pop
ret
lahf
insb
mulb
dec
dec
pop
lcall
js
or
pop
aas
dec
jns
and
test
sub
mov
push
imul
xchg
push
cmpsl
int
and
mov
jmp
xchg
lds
mov
btc
mov
mov
lcall
movsl
in
mov
mov
mov
ljmp
nop
loop
cmovg
shl
pop
adcl
mov
lcall
mov
mov
push
aaa
lods
andb
into
fistpll
pop
ficompl
dec
adc
insl
lock
dec
imul
adcb
gs
xchg
dec
cs
fchs
push
int
jl
and
cmpl
std
rcl
hlt
pop
outsb
out
insb
sbb
in
jo
mov
mov
dec
jno
adc
mov
js
cmc
nop
mov
jle
cwtl
ret
rcll
adc
cmp
rolb
iret
adcl
loope
mov
gs
add
scas
mov
pop
add
cwtl
fidivl
mov
gs
mov
adc
dec
sub
or
add
push
adc
out
dec
mov
pop
and
dec
js
adc
mov
out
pop
test
jecxz
mov
lret
cltd
icebp
inc
xlat
xchg
fsubr
ja
pop
xchg
jae
imul
xor
lods
mov
add
cmp
mov
pop
mov
push
sbb
aas
loope
cli
test
les
dec
sti
cmpsb
xor
test
test
das
jbe
fs
or
filds
stc
mov
mov
loopne
cmp
das
mov
out
adc
sub
pop
jle
jne
dec
repz
or
test
gs
add
xor
popf
test
sbb
mov
push
mov
xchg
mov
xchg
cmp
xor
daa
fs
push
or
xor
dec
adc
jg
cmp
in
mov
rep
clc
add
mov
in
sbb
out
imul
cmp
jne
lods
lret
sbb
lods
mov
jge
inc
or
xchg
test
jge
out
pop
icebp
paddusb
or
mov
or
push
sahf
cltd
lods
mov
rol
movsl
popf
dec
adc
sar
or
mov
std
bound
out
das
test
int3
repnz
gs
aas
cmc
mov
mov
mov
shll
movsb
dec
dec
loop
or
scas
xchg
pushf
push
lock
push
cmpsb
mov
shrb
mov
or
pusha
push
int
das
inc
pop
lds
dec
cmpb
lahf
into
adc
popf
cld
xchg
outsl
int
jns
lcall
xchg
sub
or
scas
ja
es
mov
filds
scas
mov
adcb
out
ds
fmull
dec
shrb
rcl
fwait
nop
shr
inc
gs
jmp
imul
and
add
aam
lcall
ss
pusha
mov
cld
sti
jge
fsubs
adc
add
pop
pop
pop
jg
xor
test
sbb
lods
xor
je
mov
jecxz
clc
add
mov
ss
dec
test
das
cmp
or
sub
jg
test
inc
in
sbb
mov
ljmp
add
sti
sub
outsl
je
xchg
mov
xchg
and
cmp
repnz
jmp
scas
les
xor
xchg
or
jae
aaa
repnz
cltd
or
and
mov
arpl
gs
test
clc
pop
sbbb
xchg
inc
mov
jb
jg
push
mov
push
xchg
jnp
clc
test
add
dec
cli
push
pop
jp
fld
ljmp
repnz
sbb
mov
cmp
inc
outsl
ja
jo
push
push
out
fistpl
mov
dec
push
inc
pop
and
test
xor
inc
push
sub
cli
inc
mov
clc
pop
add
xlat
push
movsl
insl
pop
mov
and
les
inc
lods
cmpsl
push
lahf
ja
jne
xlat
ljmp
inc
push
xchg
lahf
mov
xchg
pop
mov
dec
dec
imul
xor
push
mov
iret
fs
cmpsb
test
pusha
pop
jnp
sbb
sbb
inc
fscale
fimuls
int
test
ret
xchg
sub
aaa
mov
fcmove
fnstenv
scas
test
mov
mov
insb
enter
sti
fwait
xor
iret
in
addr16
es
rolb
es
inc
fbstp
stos
loopne
repz
cmpsb
sbb
ss
jle
ss
andb
mov
gs
lock
jno
xchg
xorl
lock
adc
xchg
lods
call
insb
imul
fisubrl
cmp
pop
adc
push
adc
adc
mov
stc
push
cwtl
mov
imul
test
push
xor
aam
lahf
es
dec
in
jle
jbe
hlt
xchg
pop
sub
loop
jnp
subb
cmp
add
pop
call
adc
in
mov
jp
test
repz
cmp
loop
dec
or
jge
sbb
sbbb
repnz
lock
mov
dec
dec
jb
mov
cmpl
dec
jbe
jb
sahf
jnp
jmp
lret
ret
inc
or
cmp
lods
popa
nop
andl
lods
insb
test
sub
or
stc
cld
in
jg
inc
imul
loopne
and
xchg
xchg
xor
loop
jmp
inc
cli
scas
cwtl
bound
dec
mov
sbb
ds
inc
iret
dec
cmp
pusha
fs
aas
pushf
int
xchg
cltd
popa
mov
push
sub
pop
xchg
pusha
adc
push
je
push
sahf
out
dec
bound
sbb
outsl
sti
sarb
mov
ret
scas
stos
sub
ja
inc
dec
mov
xor
rcll
push
jge
inc
cmpl
pop
pop
mov
gs
mov
push
test
int3
outsl
push
insl
andb
call
mov
cmp
adc
aad
sub
jne
fnstcw
shlb
pushl
sbb
int
test
stos
das
jo
sub
lcall
sub
nop
adcl
add
add
ljmp
popf
xchg
fsub
cltd
inc
jnp
pop
cmpsl
xor
inc
in
mov
xchg
mov
das
jmp
rcrl
cwtl
pop
shll
push
frstor
push
jno
test
loopne
add
out
test
add
les
jns
adc
inc
push
test
or
in
xchg
inc
mov
cmp
push
cmp
push
xchg
mov
cmpsl
add
inc
ficoms
insl
dec
call
cmp
cmpsl
mov
movsb
sub
out
jl
mov
xchg
in
enter
dec
out
je
jge
xchg
jmp
fdiv
test
aad
jnp
stos
fmull
mov
dec
jle
out
sbb
mov
data16
xor
pop
push
xchg
test
nop
or
int
or
je
and
movsl
enter
pop
bound
sbb
cmp
jbe
cmp
inc
xchg
pop
jecxz
sub
out
and
lcall
jmp
mov
shll
jp
lcall
adc
call
push
leave
scas
adc
cmc
push
aad
adc
mov
mov
insl
push
push
scas
mov
daa
hlt
iret
and
add
mov
inc
fsub
push
pop
dec
shll
movsl
pop
jo
mov
out
jmp
mov
ret
mov
adc
leave
test
dec
dec
jmp
pop
mov
dec
daa
adc
push
cmp
stc
sbb
repnz
xchg
imul
xchg
aas
icebp
and
and
add
cltd
pop
pop
out
dec
outsb
mov
scas
add
add
test
dec
jns
outsl
dec
and
inc
jno
stos
hlt
jae
xchg
stos
push
jle
leave
in
pop
fisttpll
xchg
clc
fidivs
pop
xchg
lods
cmpsb
popf
mov
fidivs
test
aad
mov
aam
cli
std
bound
fldl
xadd
mov
jae
sahf
ja
jg
pop
mov
dec
leave
ljmp
fmuls
jmp
fidivl
and
pop
add
movsl
lahf
insl
scas
sbb
imul
jb
rcrb
lods
roll
inc
dec
and
enter
mov
stc
sub
jecxz
mov
mov
add
pop
stc
adc
push
dec
jne
fdivrs
or
mov
jo
std
jb
int3
sbb
add
das
push
push
fbstp
daa
add
sub
cmc
in
fisubl
lods
or
call
arpl
mov
cwtl
popa
or
cmc
xor
fwait
sbb
fs
xorl
sahf
xlat
gs
aaa
in
notl
cmp
mov
scas
mov
popa
pop
add
bnd
jnp
or
std
pushf
out
pop
pusha
dec
xor
cmp
dec
sbb
cmc
mov
or
ja
push
mov
push
push
fwait
stos
cmpsb
cltd
into
inc
test
sub
addr16
pop
mov
adc
inc
test
push
into
arpl
sbb
imul
repz
outsl
out
stos
out
ja
jmp
aas
popa
imul
or
imul
aad
mov
iret
jle
jp
push
inc
push
mov
cmp
add
inc
cmp
sub
push
mov
cwtl
mov
push
pop
sub
add
int
loopne
hlt
push
or
loop
inc
pop
push
nop
xor
pop
dec
sbb
dec
jne
fildll
leave
push
shr
add
pop
aam
shrl
push
xchg
dec
sbb
add
mov
test
ja
nop
xchg
sbb
mov
je
or
mov
xor
xor
inc
loopne
and
popf
pusha
mov
inc
cld
stc
shll
jecxz
pop
ds
xchg
cmp
rcrb
add
xchg
add
shlb
jne
cltd
pushf
adc
sub
mov
dec
mov
adc
jl
jmp
sarb
jecxz
dec
outsb
lret
shl
xor
mov
icebp
xchg
daa
fs
sub
lcall
dec
data16
ss
lea
push
mov
mov
nop
add
pop
fucomp
push
daa
dec
cmpsl
mov
sub
cld
jle
sti
xchg
aad
sbb
js,pn
nop
mov
jmp
push
int
dec
pop
mov
and
sub
jmp
leave
jecxz
data16
jbe
fpatan
out
xchg
xchg
push
mov
pop
lods
mov
sub
and
les
loopne
sub
xor
pop
pushf
outsl
cmpsl
lods
mov
daa
or
subb
sbb
ret
sub
sub
movsl
dec
loop
inc
aaa
lock
dec
mov
jl
scas
ret
adc
add
jle
ret
stos
mov
pushf
mov
call
xchg
test
xor
mov
inc
xorb
test
pop
mov
lods
orl
outsl
sar
lea
xchg
add
xor
jno
mov
xchg
sub
filds
out
les
ret
test
sbb
shr
xlat
sti
ficoms
pop
lods
inc
movsb
sbbl
dec
pop
dec
rorb
ds
les
push
inc
pop
xchg
inc
dec
andb
les
inc
add
cmpsb
fisubl
push
test
mov
cmp
mov
pop
adc
test
jbe
popf
in
inc
dec
call
mov
movsl
pop
dec
stos
mov
mov
pusha
idivb
fdivl
xchg
push
push
jo
mov
test
push
mov
mov
push
sbb
inc
scas
mov
pusha
leave
mov
pop
out
push
ficomps
add
std
lea
sub
ret
pop
add
and
push
inc
add
loope
sahf
aam
in
pop
je
inc
xor
adc
rcl
imul
mov
ja
popf
sbb
cs
push
andb
sbb
cmp
adc
in
push
cmc
test
pop
push
loop
test
xchg
test
out
mov
fstps
jmp
fistpll
jmp
lods
sub
lahf
push
shlb
int3
sub
aam
jae
or
cli
mov
aam
inc
ds
sub
incl
call
jecxz
push
push
out
dec
dec
xor
in
leave
imul
jge
push
sbb
inc
mov
jae
int
sti
mov
iret
mov
mov
rclb
addl
in
sub
std
cmc
testl
js
test
adc
scas
push
lret
push
fildl
pop
pushf
fidivrs
mov
inc
xchg
add
or
inc
mov
adc
jp
scas
cmp
fistpl
test
fcoms
aam
rol
ss
out
test
dec
rolb
das
push
pop
ja
add
scas
mov
dec
ljmp
pop
add
mov
dec
sub
leave
cmp
dec
mov
out
sarb
das
push
inc
push
into
int3
xchg
mov
in
or
gs
jp
lods
fdivrs
arpl
movsl
lcall
call
popf
xchg
xor
pop
add
jnp
or
data16
shl
pop
pushf
mov
pop
inc
and
mov
ljmp
push
pop
jb
lcall
mov
sbb
lcall
add
test
js
call
jle
ret
adc
jbe
xchg
push
sbb
and
fsubr
pop
or
je
and
mov
rcrl
jns
and
movsl
je
cmp
jo
std
aam
jnp
rep
lds
enter
jnp
cwtl
loope
in
arpl
push
dec
xchg
loop
xchg
pop
jne
loope
jmp
je
dec
sahf
sbb
xchg
icebp
pop
dec
push
imull
mov
lods
and
mov
ja
jnp
xor
sub
and
mov
icebp
dec
fsubs
mov
aas
negl
ljmp
push
push
sub
mov
jbe
push
mov
in
push
xor
lods
icebp
jae
adc
dec
xchg
test
add
call
loop
jbe
stc
daa
ret
lahf
xor
lcall
push
ret
mov
aam
test
xorb
push
inc
xor
xchg
cld
fwait
push
add
cmp
loopne
sub
sbb
pop
ds
or
jbe
pop
aad
mov
shlb
js
adc
mov
lcall
dec
movsb
shrb
adc
dec
inc
call
cwtl
push
push
dec
dec
hlt
in
push
gs
mov
data16
inc
mov
ds
or
adc
arpl
push
xchg
ja
sbbl
rorl
loop
ret
stos
mov
aad
cmpsb
add
xor
push
jl
push
es
mov
imul
jae
lods
pop
cltd
imul
xorl
imul
dec
fidivs
mov
lods
mov
pop
mov
xchg
popa
cmp
stc
fimull
jns
jge
insb
mov
cmp
jb
push
roll
add
add
fdivr
push
repnz
xchg
mov
arpl
mov
mov
mov
fisubrs
xor
in
push
out
outsl
adc
iret
xorl
push
in
fmul
xchg
in
loopne
hlt
mov
sub
mov
mov
lahf
bound
sbb
pushf
adc
mov
xor
arpl
fdivs
or
mov
cs
and
jg
mov
in
push
adc
push
mov
push
sbb
movsl
negl
xchg
sub
lahf
xor
loope
mov
in
sbb
mov
inc
xchg
loope
mov
fdivrs
fadds
add
pop
lea
lcall
cs
repz
and
push
andl
and
xchg
push
mov
nop
add
in
xchg
data16
sub
in
mov
mov
inc
int
inc
in
mov
xchg
mov
jo
in
adc
mov
imul
fwait
jg
loopne
add
inc
mov
mov
mov
pop
mov
or
or
aas
into
fidivrl
cmp
ror
popa
cltd
ja
dec
icebp
dec
jnp
or
insb
hlt
into
addr16
ret
pop
jg
stos
addb
std
fistpl
adc
mov
in
loop
cmp
stos
ja
ljmp
and
xorb
or
movsb
fsubrp
xlat
addb
push
out
inc
lds
orps
push
push
or
xchg
mov
imul
inc
mov
push
idiv
xor
popf
xor
xchg
or
popf
sbb
loop
ds
mov
or
xchg
add
push
repz
push
pop
out
jmp
ss
int
adc
std
jl
rol
fsubp
ret
or
mov
rcll
pop
ds
aam
add
mov
pop
xlat
jle
push
pop
push
xrelease
push
ret
fwait
push
in
ljmp
pop
cmpl
and
adc
pushf
push
cmp
fs
inc
mov
sub
in
nop
and
dec
xor
mov
pop
sbb
mov
out
int
adc
sbb
pushf
mov
or
cmp
xorl
dec
lock
movsl
add
jecxz
test
dec
imul
stc
xorb
ret
out
adc
sbb
inc
inc
lods
sub
mov
movsb
xchg
ret
int3
inc
and
mov
pop
mov
pop
jbe
shlb
hlt
mov
and
mov
fnsave
pop
pop
jnp
lds
test
jne
jae
sti
xchg
pop
inc
sub
lea
jns
xchg
or
addl
push
not
add
aad
dec
inc
movsb
ja
int
push
std
mov
or
inc
jmp
dec
mov
add
xchg
jb
xchg
adc
loop
cmp
iret
sub
dec
stc
jmp
loope
dec
push
cmp
or
jg
add
mov
out
and
in
das
nop
add
fbld
pop
adc
cmp
add
pop
mov
add
lahf
sub
incl
cmc
and
mov
mov
add
mov
inc
shl
add
test
rolb
cmovp
outsb
add
cmpsb
std
lcall
jbe
stos
push
add
add
jp
or
pop
sub
sbb
lret
ss
cmp
or
fstp
hlt
rolb
test
fucom
push
mov
in
mov
mov
jns
adc
sbb
pop
nop
or
arpl
iret
fstpl
xor
or
xor
bound
cmpsb
inc
mov
mov
dec
ficoml
xchg
je
mov
pop
mov
adc
decl
and
scas
ljmp
push
inc
sbb
ret
adc
iret
jmp
stos
mov
xchg
shlb
sti
vandps
stos
sti
fdivp
mov
sbb
movsl
pop
imul
rolb
dec
sarb
rolb
fstpt
sub
shll
test
inc
xor
xor
xor
jo
and
inc
jg
rcrl
add
stos
daa
sar
out
cmpsb
add
nop
push
gs
std
dec
cmp
pop
lds
aas
xlat
cltd
ret
add
sbb
dec
outsb
arpl
sar
sbb
push
jno
pop
sbb
movsb
sbb
mov
dec
xlat
push
inc
insb
popf
inc
add
xchg
jl
mov
out
das
lcall
add
les
mov
pop
pop
jl
mov
and
std
pop
pop
dec
dec
int3
sub
pop
enter
push
xchg
pop
adc
jbe
rclb
in
mov
dec
xchg
cmp
sarb
xchg
sub
icebp
pop
push
mov
jne
mov
pop
les
inc
pop
jge
in
and
les
xchg
fiadds
test
dec
cmp
mov
je
pop
xchg
lods
push
pop
mov
fbld
or
insb
daa
cmc
lret
jae
jg
pop
sbb
jnp
je
sti
sbb
mov
in
jbe
jecxz
hlt
jp
mov
lods
sbb
and
sub
sbb
dec
andl
rcll
aas
jge
xor
mov
dec
lret
push
and
dec
or
xchg
shrl
pop
clc
dec
sbb
nop
add
fwait
insl
add
push
mulb
lods
pop
dec
adc
or
push
lret
pop
repz
test
arpl
mov
dec
pop
push
pop
arpl
insb
mov
shll
fdecstp
cmpsb
cmc
out
jmp
cmp
adc
jl
inc
push
imul
sub
popa
jae
outsb
and
push
ljmp
xchg
inc
repnz
xor
fildll
aaa
add
ljmp
stos
mov
sub
xchg
mov
cmc
insl
adc
inc
cld
fwait
xor
loop
pop
xchg
imul
cld
or
push
lret
jmp
shll
add
push
sub
and
adcl
or
xchg
mov
adc
sub
test
popa
frstor
mov
and
mov
mov
test
push
mov
data16
push
push
jne
sbb
shlb
enter
xchg
jnp
pop
cwtl
adc
sbb
ret
xor
add
cmp
das
cli
pushl
cltd
sbb
pop
bound
aad
lahf
aam
pop
mov
push
loope
pop
ret
popf
fidivl
mov
mov
xor
lea
push
push
adc
imul
mov
shl
and
jo
shl
sbb
pop
movsb
in
push
sbb
jg
lods
inc
movsl
mov
xor
dec
jo
xchg
push
insl
insl
push
fsubrl
fcmove
pop
imul
lods
imul
hlt
inc
rorl
sub
les
hlt
or
and
mov
adc
mov
dec
sbb
ss
subl
xchg
rorb
pop
shrb
pushf
sbb
mov
push
loopne
cmp
aam
call
inc
cld
int3
mov
add
adc
mov
cmp
push
mov
rcrb
notb
adc
xchg
pop
out
ja
imul
lods
mov
push
dec
idivb
xor
push
out
sub
pushf
aad
shr
call
mov
je
iret
pop
push
cld
divb
jo
and
int3
or
fstps
dec
sub
push
mov
dec
pop
sar
dec
or
mov
outsl
aad
fwait
roll
dec
mov
mov
or
mov
je
pop
or
xor
push
mov
mov
mul
and
dec
push
lret
popl
jb
and
lret
mov
xchg
cmp
cmp
inc
int3
add
lods
in
pop
inc
and
rcrb
xchg
or
je
add
mov
sub
add
or
push
mov
std
jmp
test
arpl
xor
pop
xchg
sahf
dec
xor
idivl
rol
in
out
lahf
mov
push
dec
repnz
lahf
push
mov
call
pop
mov
lret
subl
adc
arpl
mov
jmp
lods
outsb
out
push
cli
sub
xchg
imull
int3
arpl
sti
mov
mov
insl
out
jo
aas
pop
popa
lock
inc
push
callw
mov
jo
fwait
jmp
and
jg
ja
dec
inc
imul
bound
mov
jg
jne
stos
rcll
sub
call
ret
out
lods
jb
or
idivb
cwtl
ret
push
cmovge
loopne
sarl
lret
lahf
pop
call
repz
push
jne
inc
pop
fnstcw
pop
fwait
pop
push
inc
mov
xlat
sbb
push
cmpsl
jg
mov
aas
push
mov
pop
in
mov
pop
clc
push
std
or
or
push
cmp
movb
push
call
inc
jle
movsl
jnp
inc
pop
push
fldl
es
jb
das
clc
scas
ds
lcall
data16
mov
xchg
xchg
loope
mov
fildl
adc
shl
xchg
mov
push
inc
adcb
popa
test
sti
mov
lahf
add
push
and
jae
sbb
cwtl
push
popa
push
sahf
mov
shlb
fistpl
lret
cmpsb
sbb
jns
scas
cmp
xlat
jns
push
lods
orl
cmpl
out
add
mov
mov
test
sbb
or
push
fcomps
add
dec
loope
pop
enter
sub
sahf
fmull
daa
jo
data16
add
adc
and
mov
aaa
loopne
mov
dec
xor
adc
test
imul
or
adc
iret
jbe
rolb
ret
scas
adc
pop
jge
cwtl
popa
mov
leave
arpl
add
je
movsl
lea
jb
jmp
insb
mov
fstpl
xor
push
jg
mov
lahf
lcall
jecxz
je
in
cld
pop
int
rcrl
scas
pop
pop
xchg
fsubrs
icebp
mov
jb
xorl
pop
aaa
bound
fwait
data16
lret
mov
out
push
adcl
sbb
scas
test
xor
es
and
fisubrl
mov
outsl
mov
pop
ss
rcll
ja
es
jg
in
dec
mov
inc
inc
mov
pop
repz
xchg
rep
aaa
or
movsl
pop
cmp
rol
mov
aas
mov
ja
sub
inc
cmp
stos
aad
inc
push
push
dec
mov
cmp
and
xor
and
mov
ljmp
repz
or
fildll
mov
cmp
mov
jno
sarl
es
fsts
cmpsl
mov
sub
mov
pop
popf
add
cmp
mov
in
out
loopne
je
test
and
test
test
dec
mov
mov
fimuls
xor
push
cltd
and
cmpsb
repz
repnz
mov
pop
mov
and
jle
xchg
notl
adc
jns
mov
cmp
mov
xchg
jge
mov
sbb
fsts
js
mov
adc
adcl
mov
xor
mov
dec
cmp
push
jnp
jae
idivb
push
repz
sbb
daa
gs
pop
aas
jno
jmp
arpl
and
mov
lret
mov
ret
cmp
cmc
dec
jle
lds
sub
push
pop
outsl
mov
dec
sbb
dec
ljmp
or
xor
add
add
push
loop
dec
xchg
mov
daa
negb
orl
jb
fnsave
insl
push
pop
cld
and
sbb
movsb
adc
loop
lea
fcoms
push
es
repz
int
sti
push
orb
cmc
sub
jne
mov
test
addr16
cmc
jle
or
xchg
ljmp
cmpsl
or
add
mov
sbb
cmp
lods
or
enter
into
xor
daa
in
inc
jo
xchg
mov
xchg
mov
xorl
sub
pop
pushl
sbb
xchg
jp
in
cmp
movsl
loope
and
lret
cmp
daa
jle
cmp
mov
icebp
or
outsl
out
sub
mov
dec
dec
xchg
imul
or
aas
pop
clc
pop
push
stos
sti
mov
nop
mov
cs
into
dec
in
cmp
out
inc
call
mov
rol
xchg
and
xchg
sbb
vpsllq
xchg
jecxz
iret
fists
mov
push
xchg
inc
into
loope
loop
and
insl
xchg
mov
bnd
test
push
shrb
ja
fstpt
xchg
scas
jmp
dec
or
iret
adc
iret
dec
pop
adc
push
cmpb
jno
std
lcall
mov
dec
test
lret
push
xlat
movsl
fcoml
pop
xorb
xor
dec
out
xorl
pop
addr16
push
push
adc
mov
sti
pop
add
push
lock
cmpb
test
inc
xchg
mov
push
xor
fcompl
int
je
xchg
jp
imul
fistpl
pop
outsl
push
stos
fcoms
cs
les
lahf
cmp
or
imul
dec
cwtl
lock
sbb
repnz
fbld
lods
lret
jns
gs
outsl
mov
fwait
jecxz
jo
mov
out
les
inc
jmp
adc
negb
sub
and
mov
mov
push
std
loope
jecxz
pop
jo
loopne
stos
fdivrs
add
outsb
ja
and
in
sub
negb
xchg
jg
popf
call
leave
fucomip
ljmp
hlt
sub
add
push
and
in
in
pop
mov
cld
nop
ljmp
imul
mov
clc
adc
into
stos
or
daa
push
lods
push
fdivl
push
shlb
and
popf
shrl
ja
pop
incl
outsb
and
test
add
mov
mov
sbb
sbb
jl
or
jp
xchg
pop
lcall
mov
fcomps
es
shll
mov
ret
cmp
jl
mov
stc
enter
push
repnz
mull
mov
ds
adc
xor
leave
sub
cmpsl
pop
jae
push
xchg
jecxz
std
mov
shrb
push
jno
push
inc
fs
ss
cmc
je
shll
mov
fbld
daa
cmp
sbb
mov
add
data16
jle
dec
pop
jl
dec
cmpsl
scas
adc
pop
rcl
dec
pusha
push
movsl
out
xchg
gs
sub
inc
mov
push
adc
and
push
fiadds
pop
sub
outsb
imul
lods
cld
mov
lret
push
jl
stos
push
or
dec
add
loop
les
ss
mov
mov
int
in
or
jge
icebp
xor
arpl
cmp
cmp
dec
cmc
fnsave
or
insb
mov
mov
jns
ret
xorb
int3
push
pop
or
pop
out
cmp
es
cs
push
hlt
pushf
cwtl
les
cmpsl
pop
fimull
or
jg
fidivrl
mov
test
jl
mov
sub
adc
addb
xchg
js
jne
xchg
std
fidivrl
pop
mov
mov
mov
inc
pop
into
shll
xlat
repnz
pop
adc
dec
xor
cmp
dec
push
xchg
adc
and
mov
clc
leave
rol
push
mov
adc
mov
mov
push
shll
pop
mov
fisubrl
cmpsl
loopne
xchg
jl
inc
dec
mov
std
test
mov
mov
push
dec
and
incb
and
testb
pop
inc
call
fs
sub
in
jmp
push
out
enter
and
pop
nop
test
clc
cmp
push
mov
mov
push
les
xchg
push
ror
cmpsb
stos
lods
cltd
push
imul
out
loopne
rorl
mov
mov
pop
sbb
sar
push
repz
sti
pop
movsl
pop
insl
push
inc
xor
cmpl
jecxz
es
ret
push
dec
or
test
call
mov
out
outsl
ret
cmp
sub
mov
sub
lahf
pop
push
mov
push
in
dec
sub
enter
mov
and
and
loop
sbb
adc
inc
jge
jp
xor
imul
cmpsb
outsb
xchg
jnp
callw
xlat
in
mov
mov
andb
mov
rclb
mov
lds
mov
xor
jae
mov
xor
push
jns
stos
mov
shl
adc
lret
or
mov
or
imul
ljmp
dec
aam
xchg
cmpsl
or
inc
shrl
fdivrs
jl
adc
stos
das
outsb
dec
test
clc
popf
psrad
add
fwait
jb
mov
xchg
xchg
and
fmuls
ja
xchg
and
popf
stc
ss
cmpsl
add
iret
stos
js
adc
test
fildll
fs
add
test
or
hlt
cmp
aad
outsb
mov
les
cmp
dec
fs
mov
sbb
push
jle
jb
xor
xchg
in
mov
cmp
dec
sahf
test
neg
push
cli
movsb
imul
out
scas
and
fbld
pop
jl
lret
mov
stos
popa
mov
xchg
jecxz
fwait
adc
stos
push
iret
test
inc
lret
add
jo
pop
or
sub
sbb
jmp
cmp
pop
xor
sub
or
pop
fidivrs
pop
push
and
xchg
scas
mov
xor
fwait
and
scas
xlat
sbb
mov
push
cltd
inc
into
enter
pop
enter
cli
adc
mov
or
pop
sub
xorl
pop
xor
xchg
mov
inc
mov
stos
out
sub
out
and
enter
mull
in
shrl
add
pop
pushf
ss
sti
mov
ss
jge
pop
sub
adc
orb
and
cmp
sahf
fdivr
xor
jecxz
fdiv
sbb
imul
ret
test
cmp
andb
push
adc
out
nop
and
push
out
mov
and
cmp
insl
fcoml
or
sub
cmpsl
jl
popa
lahf
sub
lret
roll
push
or
mov
jmp
mov
adc
adc
cmpsl
xchg
in
push
push
aad
adc
pop
sbb
stos
insl
cmpsb
repnz
in
adc
std
imul
push
inc
cmp
add
scas
pop
jae
jmp
mov
sub
or
sub
or
loope
push
inc
adc
jmp
ret
xchg
and
and
shlb
push
or
in
pop
and
rcl
jo
out
orb
jg
aad
mov
push
in
push
rcll
les
jge
pop
and
inc
mov
push
and
sub
or
and
cmpl
stos
adc
daa
lock
inc
xchg
and
xsaveopt
shrl
or
ljmp
mov
and
rclb
mov
cwtl
add
bound
pmaxub
pushf
outsb
shll
and
and
das
mov
in
cmc
jge
xor
movsl
iret
es
mov
aam
jle
gs
into
mov
mov
fcmovne
shll
push
lret
add
rorl
xor
cli
xor
call
in
adc
int
ja
or
push
shll
gs
cmc
pushl
add
pusha
pusha
imul
sub
test
into
mov
fidivrl
inc
add
lahf
and
in
dec
sub
push
jb
adc
insl
sub
mov
xchg
mov
gs
repz
lds
sbb
or
jno
ss
jne
repnz
xchg
cmc
jnp
pop
mov
pop
jne
mov
xchg
clc
pop
sub
cmp
cmp
cmp
push
popf
add
sub
jp
and
call
test
shrl
xchg
stos
aad
xchg
ljmp
aam
xchg
dec
push
mov
or
nop
mov
pusha
pushf
push
pop
loope
sbb
cmp
or
cmp
jo
sbb
inc
fdivl
push
adc
mov
sub
xor
mov
mov
dec
xchg
arpl
xor
push
int
icebp
mov
gs
xchg
xor
xlat
xchg
fdivr
leave
fnstcw
xchg
add
jl
pop
out
hlt
mov
lahf
xorl
cli
ljmp
out
ljmp
or
test
or
mov
push
sbb
dec
cmc
fistl
orb
jne
pop
mov
pop
jmp
add
shrl
rcll
mov
jg
test
int3
mov
fs
cmp
div
ljmp
mov
int3
xor
sbb
pop
sarl
popa
fstps
imul
aad
adc
jge
icebp
cmovns
cmp
addr16
add
ja
pusha
dec
xchg
push
push
and
jge
and
adc
xor
out
ljmp
repz
popa
inc
adcl
mov
cmpsb
sbb
mov
push
hlt
jns
insl
adc
testl
in
adc
xor
xchg
pushf
push
add
pop
into
loop
push
insl
pop
out
jae
inc
inc
dec
sub
jae
test
daa
mov
nop
scas
push
mov
std
jns
sbb
fsubrs
pop
push
mov
pop
or
ret
adc
ret
rcrl
scas
negl
aaa
xor
jmp
in
xor
out
add
mov
jg
mov
and
dec
dec
jge
or
pop
fucom
pop
mov
notb
aad
mov
out
push
jp
and
xor
inc
fs
jg
or
jl
sbb
sbb
loop
mov
or
pushf
add
sub
mov
xchg
cmc
or
test
ret
popl
cmp
push
jg
sub
xchg
jae
ja
sub
inc
xchg
add
dec
sbb
mov
lahf
xchg
mov
xor
push
dec
or
loope
mov
push
sbbl
xor
out
ret
test
imul
test
in
popa
inc
adcl
roll
sbb
add
push
jne
or
xcrypt-ctr
cmpsl
fcmovnb
add
mov
lods
pop
shlb
pop
jo
mov
xor
add
cwtl
mov
dec
mov
cmp
int3
mov
push
fistl
ss
push
pop
les
dec
push
push
xchg
lret
and
mov
insb
divb
sar
mov
js
inc
ljmp
pop
aaa
jecxz
neg
sbb
mov
cmp
push
xchg
sub
and
sub
gs
mov
stc
inc
fbld
xchg
jnp,pn
inc
and
inc
into
add
or
or
ficoms
pop
iret
push
pop
mov
mov
insl
sti
ljmp
sub
cld
rorb
sub
inc
shll
into
xor
xor
pop
jge
cmc
cli
popa
jmp
mov
pushf
dec
enter
aas
scas
sbb
pop
or
add
lea
jno
addb
cmp
inc
nop
mov
les
jnp
popf
addl
mov
pop
popf
adc
dec
jg
jecxz
dec
scas
xor
mov
and
or
pop
jae
ret
call
add
and
insl
pop
dec
pop
push
in
sub
lret
loope
jns
cli
xor
daa
stc
xchg
fstpt
adc
add
xor
hlt
imul
outsb
jnp
pop
mov
and
nop
adc
push
cmp
repnz
orb
fsts
sub
mov
popa
push
cltd
xorb
lahf
xor
aas
jbe
inc
rcrb
insl
cmp
and
repnz
sarl
jge
and
test
shl
or
mov
bnd
pop
ja
aam
mov
add
nop
mov
pop
add
mov
adc
ss
pop
mov
jmp
mov
scas
stc
dec
mov
xchg
mul
neg
or
lock
xchg
call
inc
mov
dec
dec
cwtl
cmp
mov
adc
test
inc
xchg
lret
sti
aas
sti
arpl
sub
pusha
cmpsl
mov
cltd
push
test
int
addl
orb
inc
bound
lret
in
dec
adc
cmpsb
and
jl
iret
lds
push
pop
xchg
add
out
xor
fldcw
cmp
daa
cmpl
insl
add
mov
js
lahf
inc
out
ret
cwtl
lods
dec
xchg
jle
jl
test
out
cmpsl
daa
out
enter
jne
sbb
xchg
mov
das
push
push
jl
iret
out
mov
sub
nop
scas
imul
sbb
daa
sub
inc
pusha
xor
mov
test
mov
in
add
scas
xchg
pusha
cmpsl
adc
lods
and
fadds
outsl
mov
outsb
mov
ret
jmp
repnz
fnstsw
mulb
jnp
in
mov
mov
dec
movsb
lods
inc
cmp
sub
shrl
ljmp
js
or
push
xchg
in
push
or
pop
pop
rorl
fisttpll
push
faddp
mov
jae
inc
jge
pushl
adc
fsts
insb
inc
xchg
frstor
mov
imul
or
iret
push
lcall
mov
leave
into
pop
mov
outsl
xchg
jne
loope
cmc
insl
push
and
cmp
rcll
xchg
test
sbb
sub
das
or
test
xlat
aad
push
cmp
call
es
sarl
rorl
cmpsl
sbb
mov
mov
hlt
int
push
jno
out
and
xchg
mov
call
mov
and
fldcw
sbb
inc
fisubl
lods
xor
push
mov
out
aam
cld
mov
notl
call
repz
insb
sbb
add
sbb
into
filds
push
mov
sub
mov
jg
sbb
popf
loope
or
test
pop
icebp
data16
les
sub
fistpl
fwait
test
aam
add
fucom
in
xchg
adcl
aad
mov
test
pop
int3
sbb
jne
xchg
push
push
stos
mov
das
inc
and
rorb
sbb
dec
dec
lret
movsb
xchg
jns
or
aad
mov
dec
iret
sarl
mov
in
xchg
push
gs
push
outsl
mov
sub
sub
repz
mov
push
psubb
push
inc
into
cli
enter
cld
sub
pop
pop
aas
js
fs
into
push
pop
mov
add
test
cmp
push
pop
lcall
shl
inc
inc
loop
dec
jge
iret
das
in
cmp
mov
pop
pushf
jns
dec
nop
fwait
adc
inc
xor
xor
mov
rcll
outsb
push
fwait
cld
ffreep
mov
addb
adc
cmpsl
shll
push
loope
pop
or
sbb
lea
aas
ficompl
xchg
shrl
lock
negl
int
inc
and
test
addr16
les
xor
cmp
pop
push
frstor
jp
jns
mov
mov
or
aaa
adc
push
push
adc
mov
ret
dec
aam
dec
inc
lahf
cltd
icebp
sahf
test
or
ret
sbb
or
inc
std
test
add
clc
subb
sbb
popf
sbb
pop
push
rolb
or
sbb
push
stos
cltd
pop
push
push
aad
pop
push
mov
inc
pop
ret
lods
xlat
stos
jmp
pop
inc
lea
clc
sbb
int3
cmpsb
lret
inc
mov
xchg
sbb
scas
and
es
push
aas
xchg
ds
inc
or
ret
movsl
push
cli
dec
fidivrs
insl
add
mov
and
sbb
xor
adc
adc
mov
jecxz
nop
dec
pop
into
sbbl
adcb
cwtl
adc
pop
mov
push
sarb
mov
bnd
or
loope
xchg
int
stos
cmp
push
stos
popa
add
das
dec
lahf
imul
in
es
dec
ret
jle
mov
xor
jns
add
and
leave
stos
lcall
cmp
jb
push
xor
cli
imul
ret
mov
push
outsl
push
pop
cmp
mov
pop
scas
loopne
arpl
enter
xchg
mov
adc
imul
xlat
inc
mov
test
loope
leave
push
add
repnz
adc
sub
dec
lret
std
cltd
sbb
dec
sbb
cltd
fincstp
in
mov
mov
adc
arpl
call
push
mov
mov
add
fcoml
adc
sbb
push
pop
int
pop
cmp
popf
mov
dec
sub
mov
fcmove
sahf
in
xor
ja
push
push
jb
andb
pop
test
aaa
jnp
cmp
js
lahf
lahf
mov
movsl
xchg
out
idivl
pop
ja
pushf
cld
mov
stc
cmpl
jmp
aas
dec
xlat
nop
xchg
leave
stc
in
pmaxsw
outsb
xlat
or
mov
mov
pop
aas
inc
pop
mov
daa
sbb
adc
add
inc
addl
ljmp
push
pop
movsb
jg
pop
int3
movsl
inc
es
mov
xlat
pop
fwait
mov
call
cs
ss
fxch
sbb
jno
lret
in
hlt
push
ret
mull
add
xchg
pop
cmp
arpl
in
jecxz
out
add
int3
cli
jbe
test
inc
push
cltd
addb
or
push
xor
xchg
ljmp
ja
push
xor
cmp
jnp
inc
and
sub
add
insl
mov
jno
notl
ljmp
push
jge
xor
sahf
hlt
adc
loope
mov
mov
mov
popf
adcl
add
addl
sub
sub
in
es
sbb
leave
or
sbb
sti
sub
aam
inc
xor
repz
mov
ds
or
ds
insl
aad
add
cs
imulb
dec
inc
mov
jno
repz
or
pop
xor
adc
ss
mov
test
jae
sbb
lock
test
std
and
inc
andl
sbb
xor
ret
rclb
or
push
sahf
into
sbb
mov
rcrl
jecxz
mov
dec
mov
pop
mov
mov
stos
sbb
or
outsl
test
lods
testb
cli
xor
out
adc
daa
popf
or
mov
loope
scas
in
cmp
jl
adc
adc
xchg
leave
fildl
pop
adc
in
cli
dec
repnz
mov
or
cld
push
mov
mov
cmp
xchg
pop
movsl
add
hlt
pushf
adc
add
xchg
or
mov
pop
inc
sub
arpl
sbb
xor
fistpll
in
push
hlt
vcvtpd2dqy
or
pop
jle
das
push
push
stos
lods
sbb
mov
shr
lods
and
fwait
rcll
and
imul
aam
jge
repz
pushf
hlt
in
xorl
jae
jae
push
jae
sub
push
mov
or
add
add
pusha
pop
dec
mov
inc
mov
lcall
dec
bound
and
jbe
push
xchg
pop
inc
ljmp
adc
push
xchg
mov
dec
adc
and
vminpd
xor
rclb
out
and
adc
adc
adc
in
adc
jae
jge
negl
sub
mov
and
jbe
fxam
lock
int3
cmpsb
into
push
aad
inc
mov
push
mov
call
jl
dec
pusha
cmp
dec
xor
xor
inc
repz
xor
add
in
loope
dec
cmp
add
or
jo
shlb
ja
leave
loop
xor
je
ss
and
aaa
push
pop
ds
in
jno
push
pop
sbb
repz
arpl
jbe
cmp
and
out
fsubl
out
jae
cmp
aaa
adc
jle
and
mov
mov
lcall
cmp
mov
repnz
jb
jecxz
sbb
pop
out
stos
jnp
sarl
or
xor
stos
xchg
pop
cltd
cmc
rclb
mov
adc
sub
dec
sbb
test
adc
or
cmp
xchg
loop
repz
mov
cld
mov
push
stos
mov
mov
adc
mov
lret
cmp
jno
cmp
mov
pop
mov
sub
or
fistpl
cs
loop
aam
dec
jge
dec
shll
pop
mov
arpl
sub
ret
int3
push
lea
jl
adc
repz
pop
sbb
cmpsb
scas
xchg
xor
insb
bound
ds
jle
in
push
jnp
adc
scas
and
lods
ret
int
aas
fidivl
mov
cs
jae
out
mov
adc
stos
jge
xchg
in
fiadds
add
outsb
cltd
popf
jno
cmpsb
mov
push
pop
xchg
inc
xor
cmp
sahf
leave
insl
loope
ss
mov
jl
es
xor
fistps
add
sub
push
cmpb
adc
and
xor
ss
lock
ficoms
adc
push
loope
or
push
fnsave
xor
cmpsl
imul
in
jg
mov
das
imul
xchg
sti
mov
jb
push
js
push
push
xchg
pop
push
jle
lret
cmp
or
or
mov
jo
fs
jmp
mov
pop
fbld
mov
push
negl
mov
into
mov
jge
xchg
lret
xlat
repz
jle
sub
fcompl
add
mov
pop
mov
into
pusha
lods
xrelease
stc
jne
push
aaa
loop
stos
cwtl
aad
xchg
dec
push
icebp
push
mov
enter
leave
xchg
sbb
fucomi
leave
mov
jns
dec
lods
or
xor
push
lea
repnz
test
cmp
shl
xor
mov
xor
dec
and
mov
adc
popa
xchg
pop
pushf
outsl
mov
mov
jge
mov
mov
fldl
cmp
je
inc
test
repz
in
sub
and
lds
into
or
fbstp
mov
jmp
or
mov
ja
xchg
aam
outsb
push
dec
mov
pop
leave
or
insl
sbb
dec
or
mov
iret
xchg
lahf
aam
and
inc
aad
adc
adc
xor
scas
ds
jg
jno
lock
in
sub
cmp
repnz
mov
xchg
jmp
add
testb
push
mov
sub
jo
sub
xchg
xor
test
jecxz
mov
gs
jle
lock
mov
jmp
mov
xchg
sbb
sub
pop
xor
insl
addr16
int3
mov
cmpsl
or
sahf
out
and
fsubrs
outsb
push
pop
sbbb
aam
lahf
cltd
jp
in
clc
pop
mov
and
scas
cmp
sbb
sbb
push
mov
imul
test
or
stos
sbb
or
ljmp
clc
ss
sti
aam
int
jns
in
call
lret
xchg
lret
xor
cs
lret
push
mov
sub
push
inc
ret
sahf
out
fildl
sti
cld
mov
fs
lahf
sbb
mov
std
mov
pusha
adc
je
xchg
aas
pop
cmc
rorl
scas
sahf
jmp
sbb
or
out
xchg
les
push
lret
and
fidivrs
incb
push
mov
aaa
fldcw
int3
cld
dec
jne
pop
dec
clc
cmpsb
out
adcb
add
xlat
mov
and
mov
js
adc
aaa
lahf
pop
scas
mov
mov
lret
mov
loopne
orb
adc
jp
cmp
aam
and
stc
dec
sbbb
movsl
sub
cmp
pop
cltd
popf
fs
test
shlb
cltd
lock
scas
out
or
cli
jl
push
add
cmpsb
ja
push
outsl
jno
push
add
negb
ljmp
pop
xchg
add
inc
inc
cmp
or
mov
or
mov
pop
aam
inc
dec
jmp
call
test
dec
loop
xchg
ja
movsb
mov
rcrl
cmp
pop
push
xchg
push
sub
daa
push
sbb
fs
inc
sahf
sub
mov
ret
sub
push
xchg
cmp
or
popa
sub
pop
inc
lret
dec
sbb
cwtl
sbb
xchg
adc
cmp
loop
cmpsb
insl
rorb
mov
pop
add
in
lret
mov
and
dec
pop
push
jns
stos
push
mov
sbb
fs
scas
rclb
mov
sbb
daa
dec
sub
jne
frstor
movsl
int3
test
mov
lahf
sbb
and
std
sub
sbb
pop
pop
dec
cmp
and
xor
sbb
jno
inc
add
sbb
lods
lea
jbe
nop
jp
xchg
aas
sti
pushf
mov
xchg
lods
and
or
jbe
das
out
test
mov
xor
test
ljmp
mov
loop
mov
addr16
mov
ja
jnp
mov
pop
in
int
or
cwtl
add
subb
lret
ds
rcrl
fptan
inc
mov
cmp
mov
outsb
cmp
mov
repz
dec
xchg
int
xlat
cmp
pop
out
jae
push
enter
mov
leave
fsubrs
lret
inc
jo
cmp
das
pop
popa
adc
or
subl
xor
aas
mov
aaa
jg
adc
xor
jge
ss
lds
and
and
cmp
not
jl
movsl
or
in
cmp
push
mov
push
inc
popf
int
xchg
aad
push
add
aad
inc
xor
cmp
movsb
or
movsl
push
ret
lea
sub
jnp
pop
lret
aas
adc
mov
fcoml
add
stos
nop
cmp
in
pop
fsts
shl
mov
pop
xor
mov
mov
xchg
inc
adcb
rep
cli
jecxz
call
mov
sbb
out
sub
mov
jge
mov
lods
or
je
aam
push
pushf
insl
sbb
test
jo
inc
sar
xlat
dec
push
ds
subl
pop
adc
xor
inc
mov
sbb
scas
mov
repnz
shlb
dec
add
xlat
daa
mov
mov
xlat
lods
xchg
adc
and
pop
xor
jp
bound
pshufw
mov
inc
in
mov
test
popa
outsb
lods
ret
fildll
jp
mov
cmp
in
mov
call
push
ss
cltd
aaa
out
sub
inc
adc
dec
mov
cld
sahf
ljmp
and
testb
lret
adc
lods
mov
xor
inc
sbb
inc
decb
enter
int
repnz
leave
xchg
cmp
push
out
mov
pop
jmp
cmp
flds
jb
popf
icebp
fcmove
test
cli
inc
fmull
mov
push
mov
sahf
js
xchg
push
lods
fwait
dec
pop
push
cmpsb
mov
lock
dec
cmpsl
cmp
pop
dec
mov
cmc
movsl
xor
mov
dec
and
cwtl
push
xchg
adc
roll
mov
push
shlb
repz
dec
sbb
adc
push
sahf
mov
in
pop
test
or
push
jg
test
xchg
push
mov
mov
sub
aam
mov
jbe
mul
outsl
push
mov
pop
xor
lods
testl
aaa
pop
mov
adc
stos
xor
in
aam
jl
dec
cmp
es
fs
pop
inc
mov
pop
jle
mov
cmp
aad
or
pop
sahf
cmpsl
inc
hlt
add
jge
sahf
scas
mov
gs
popf
xor
jle
sahf
xor
cmp
adc
push
mov
and
ret
inc
jmp
notl
movsb
mov
popf
shrl
pop
mov
stc
jge
mov
sahf
and
push
stos
filds
and
out
sahf
shlb
cmp
js
ljmp
rcll
imul
xlat
mov
ja
cli
aaa
lahf
pusha
iret
bound
cmp
popa
int
dec
test
jp
dec
je
inc
lds
int3
iret
sbbl
xor
testb
cld
mov
xchg
push
pop
cmpsb
ffreep
out
mov
sbb
push
cltd
dec
test
dec
cmp
arpl
mov
mov
movsl
test
enter
pusha
inc
push
imul
sub
push
das
orl
push
adc
mov
jle
xor
dec
data16
push
ja
sti
push
xorl
push
adc
leave
mov
push
rcrl
dec
sbb
js
fs
repnz
in
insl
or
outsl
cmc
fs
scas
mov
sbb
pop
gs
mov
dec
or
mov
or
and
cmp
cmp
fdivs
or
jecxz
fildl
jmp
jne
dec
test
cmp
xor
mov
xor
lds
mov
or
je
jecxz
inc
fstpl
outsb
hlt
pop
mov
mov
lret
mov
nop
mov
mov
sbb
and
jae
stos
dec
mov
imul
mov
sub
adc
jnp
lret
popf
sub
imulb
cs
inc
call
js
test
in
push
xor
test
repz
inc
scas
push
push
out
jmp
fwait
xlat
lret
jns
mov
and
sbb
jl
xchg
jmp
pop
outsl
add
xlat
das
repnz
fcom
push
movsb
test
dec
xchg
insb
jle
or
inc
mov
mov
stos
mov
je
sarl
and
jno
sub
mov
in
or
lock
mov
push
jb
xor
mov
enter
insl
shrb
loop
fiaddl
clc
ja
xor
hlt
pop
pusha
xchg
adc
cvtps2pi
ficoml
icebp
fs
inc
addl
notl
inc
adc
push
push
clc
je
jmp
cmpsb
inc
iret
ficomps
adc
gs
mov
inc
jae
mov
test
shl
mov
adc
pop
mov
push
cmp
mov
outsb
lcall
insb
xchg
adc
addb
push
into
cmp
adc
xor
ss
mov
ret
dec
mov
push
jmp
add
jp
out
out
mov
ss
cltd
roll
pop
inc
pop
or
aam
xor
test
push
in
xchg
sub
push
jle
rcrb
and
aam
push
push
or
adc
mov
repz
inc
pop
incl
pop
cmpb
mov
adc
hlt
cli
lret
insb
xor
outsl
jbe
cmp
push
outsl
hlt
mov
cmp
leave
pop
pop
aaa
sub
push
mov
lods
mov
inc
push
shr
pop
lock
and
xchg
cli
test
test
int3
or
adc
ror
mov
sbb
mov
cmpsl
cmp
shrb
pop
mov
jns
sub
arpl
ja
pop
adc
arpl
mov
jnp
dec
idivb
mov
inc
pop
inc
add
shl
dec
mov
iret
adc
xor
stc
les
mov
cli
sub
cmp
cmp
push
js
into
jg
popa
xor
mov
nop
dec
insl
fwait
pop
xlat
outsl
enter
lods
cltd
push
sub
stc
rorl
jno
and
imul
dec
xchg
mov
add
jbe
mov
pusha
or
insb
pextrw
push
jecxz
add
push
cmp
jl
inc
push
out
xor
cmp
lock
aam
mov
sbb
add
leave
into
adc
jo
popa
mov
repz
sub
sbb
mov
repz
adc
mov
popa
sub
sarb
push
jbe
in
jnp
xchg
jbe
in
lret
icebp
pop
pop
cmpsl
sbb
fsubr
mov
push
adc
popa
das
mov
sub
ljmp
or
ja
mov
push
out
sub
cltd
call
fucom
enter
sub
sbb
push
mov
outsl
pusha
cld
cmpsb
add
push
insl
ret
add
in
dec
cmp
mov
jge
pushf
xchg
cmpl
dec
cmp
subl
xlat
dec
cmpsb
jae
ljmp
cmp
xchg
add
push
cmpl
frstor
sbb
xor
pop
pop
mov
xor
sbb
jg
inc
dec
jne
outsl
push
mov
stc
push
lret
fnsetpm(287
fcoml
lret
ret
mov
sub
cwtl
mov
ror
test
adc
mov
rorl
imul
out
pop
es
jle
mov
stos
xchg
or
in
cmp
or
fcoms
orb
fnstsw
clc
gs
mov
xchg
movsl
lock
push
in
mov
test
sub
out
testb
stc
jb
rcrb
inc
mov
cltd
out
aas
nop
xchg
imul
xchg
push
shr
push
es
xchg
fcompl
lret
inc
fcompl
test
aas
inc
adc
mov
cmp
aaa
or
or
outsb
sti
xchg
push
in
pusha
out
xchg
enter
mov
lret
es
fs
pop
stos
les
inc
add
cmp
vminsd
adc
or
int
nop
xlat
fsubrs
ret
mov
lahf
sbb
int
aam
imull
add
cmp
mov
dec
cmp
inc
in
orb
cmpsb
adc
inc
test
inc
mov
repnz
mov
in
xchg
scas
mov
and
ret
pop
jnp
mov
ljmp
popf
jge
push
cmpsb
and
aam
lods
pop
cmp
adc
aaa
mov
pop
lea
aad
and
mov
test
jns
push
cmp
mov
ds
xchg
mov
mov
fisubs
cmpsl
aad
push
add
push
cmp
daa
lods
push
mov
fwait
aam
sti
mov
pop
dec
repnz
cmpsl
add
pusha
sbb
icebp
jo
rolb
imul
xor
stos
sub
mov
cmp
fldcw
mov
xchg
pusha
xlat
dec
sbb
sbb
xor
xlat
jbe
stc
pop
in
fstp
or
dec
jnp
and
push
pushf
jecxz
mov
test
push
rolb
out
xor
ret
hlt
push
add
and
push
push
fsubp
pushf
inc
lahf
call
add
mov
imul
inc
adc
add
pop
push
cmpsl
cs
pop
shrb
mov
fstpt
inc
adc
repnz
cmp
sub
xor
imul
inc
add
ss
movsl
jns
jp
cmpsl
inc
div
lcall
pop
and
push
sarb
mov
inc
ficomps
and
cmp
sub
xchg
jno
ret
cmc
aaa
sbb
and
lds
jo
ja
mov
dec
daa
push
cmpsb
fwait
sbb
mov
repnz
jb
push
nop
mov
stos
das
push
rclb
sti
sahf
mov
sbb
lock
aaa
shr
dec
sarb
test
pop
cmp
jecxz
xchg
in
cmc
or
and
pusha
movsl
sbb
in
test
add
push
sar
scas
push
pop
add
flds
fimuls
loopne
in
push
mov
sbb
lock
cmpsb
loop
aam
cmp
pop
dec
or
push
sahf
mov
dec
or
jg
mov
sbb
sbb
enter
mov
jl
jecxz
dec
cmpsl
test
loope
rcll
jnp
inc
sbb
or
ljmp
jp
loop
not
test
or
mov
mov
and
insl
xorl
add
mov
cmpsl
mov
mov
sub
pusha
inc
dec
scas
inc
stos
fs
scas
int
pusha
mov
add
adc
jle
mov
movsb
inc
sbb
sti
sub
sbb
idivl
adcb
mov
and
add
xor
dec
mov
ja
mov
push
clc
and
xor
xor
push
fsubl
mov
nop
cmp
pop
incb
or
stc
adc
xor
jp
dec
gs
popf
fcmovnb
mov
fsubs
jg
xorb
xor
sti
gs
mov
mul
aas
les
sbb
test
xchg
pop
popf
or
jns
mull
icebp
mov
mov
js
int3
aam
cmpsl
ss
mov
jmp
and
mov
push
shrb
into
pop
call
cld
aas
fucom
xor
jbe
mov
aam
push
leave
add
test
test
push
in
outsb
adc
enter
inc
inc
push
in
and
int3
dec
mov
inc
aaa
mov
imul
sub
cmp
fs
inc
data16
push
xor
pop
push
mov
data16
cmc
fisttpl
mov
pushf
sbb
push
sahf
adc
insb
sub
sbb
fstl
out
xor
stos
add
ss
pop
ror
rcrb
jnp
inc
xchg
xchg
lcall
scas
xchg
in
pop
dec
daa
pop
out
cs
into
sbb
insl
cs
xlat
pop
jno
jnp
fcoms
inc
fcompl
jo
jmp
mov
cmpsb
jne
popf
pop
xchg
pop
adc
push
lods
loopne
ja
test
xor
cmp
insb
and
and
cmpsl
data16
pushf
sbb
sarb
mov
sub
fldt
test
loope
das
mov
mov
jmp
subb
les
inc
xchg
pop
mov
pop
xor
push
mov
out
push
ficoml
movsl
xor
mov
lahf
divb
cmp
daa
fistpl
inc
adc
mov
add
shll
in
inc
sub
cmpsb
adc
mov
adc
push
push
jne
sarl
mov
dec
xor
add
sub
sbb
jo
adc
out
dec
jns
mov
rolb
rolb
fildll
rclb
bound
inc
shlb
loop
or
sbb
ror
add
push
cltd
filds
add
dec
jge
mov
fistps
add
stos
inc
roll
addl
push
data16
push
bound
jnp
xchg
push
aad
cs
add
icebp
lcall
ds
cmpsl
test
movsl
lods
mov
xchg
push
jno
std
int
insb
shrb
scas
jp
mov
jle
hlt
mov
and
or
jnp
ret
movsb
xor
adc
jl
pop
mov
inc
pop
sbb
sbb
js
loopne
mov
lahf
inc
sbb
pop
cmp
push
mov
repz
imul
mov
nop
or
stos
cmp
or
sbb
push
and
mov
dec
or
jae
sub
shrl
or
bound
mov
or
mov
adc
pop
popa
lock
imulb
pusha
or
arpl
xorb
sub
push
dec
mov
scas
sub
inc
xchg
jge
lock
mov
mov
pop
outsb
cmp
mov
bnd
add
sbb
test
pop
test
mov
cmp
pushf
mov
push
fnstcw
mov
insl
fadds
sbb
in
jecxz
in
jno
into
jnp
xchg
orb
imul
push
pop
cmp
nop
mov
nop
mov
mov
jo
aad
push
in
push
dec
pop
push
les
imul
shl
decl
inc
pop
and
mov
push
shrl
ja
pop
int3
dec
cmp
mov
jmp
and
inc
mov
out
in
dec
loope
xchg
and
jae
ret
stos
dec
sahf
jae
fwait
inc
xor
jnp
push
sub
cltd
dec
mov
mov
pop
les
loopne
pushf
repnz
mov
jp
pop
mov
mov
xchg
xchg
je
lcall
clc
adc
or
in
mov
data16
outsb
or
adc
imul
je
pusha
lcall
xchg
insl
push
test
push
jbe
stos
fisttpll
sbb
xchg
xorb
adc
mul
aas
add
out
imul
mov
cmp
cli
cli
lahf
testb
pop
mov
push
cltd
imul
mov
push
dec
clc
test
and
xchg
repnz
sahf
aaa
push
xchg
push
jge
mov
repnz
push
pop
mov
repnz
icebp
ds
clc
enter
push
sbb
lcall
je
in
cmp
adc
pop
and
in
pop
movsb
jae
sub
sbb
icebp
aaa
cwtl
lods
inc
cs
rol
cmpsl
test
cmp
jb
add
dec
nop
cwtl
sub
filds
lahf
ret
aam
jecxz
ret
pushf
loopne
fisttpll
mov
ss
scas
aas
pop
ds
mov
sub
pushf
dec
mov
mov
or
pop
jbe
xlat
jl
int
jl
outsb
cs
push
clc
int3
in
daa
flds
sub
ret
adc
jle
inc
test
pop
lds
or
not
subb
out
je
xchg
fstpt
jnp
bound
outsl
mov
lods
clc
popf
and
loopne
mov
scas
cli
mov
cmp
cmp
popf
pop
push
popf
cwtl
jnp
inc
repz
jo
sub
cmp
nop
mull
popa
lds
push
repz
shlb
lods
mov
pushf
or
sbb
das
rorb
rcr
bound
mov
movsb
push
rolb
ret
xor
xor
hlt
enter
clc
sub
fdivrs
cmp
fs
xor
fcompl
push
fisubrl
mov
movsb
sub
xor
add
or
mov
or
imul
fisttpl
loop
cmp
insl
dec
dec
xor
sbb
into
push
lret
idivl
fwait
cmp
push
fwait
add
mov
icebp
dec
cmpsl
mov
test
jecxz
popf
or
movsb
sar
dec
cwtl
xchg
rcll
inc
adc
add
push
xor
lret
out
jb
fldcw
lahf
xor
gs
arpl
ret
lret
ret
mov
repnz
xor
sbb
mov
push
push
outsl
adc
test
repnz
outsl
hlt
jae
xchg
ficoms
enter
mov
insb
lock
or
xchg
xlat
xchg
cmp
pop
cmpsl
cmp
test
cltd
dec
sarl
sub
lock
mov
int3
je
cmc
push
xchg
cwtl
pop
xor
add
and
imul
daa
jno
add
mov
cmpsb
dec
out
sbb
mov
mov
pop
adc
xchg
div
aam
cmp
pop
iret
push
adc
fcomps
sti
push
ja
lods
roll
mov
or
inc
outsl
gs
adc
mov
je
scas
popa
pushf
fsubrs
repnz
ss
sbb
dec
leave
fcmovne
mov
push
out
mov
iret
or
adc
jmp
dec
fstpl
es
ja
dec
fmuls
aas
test
push
mov
cmpsl
cmp
lahf
cltd
pop
inc
or
inc
cwtl
mov
and
dec
insb
imul
and
push
ret
sub
adc
xchg
or
shll
mov
xchg
ret
push
insl
js
xchg
aad
inc
movsb
jmp
mov
push
inc
pop
test
gs
fdiv
aad
aam
rorb
push
lds
test
mov
fstl
mov
fnsave
pop
hlt
or
pop
sub
daa
hlt
dec
push
jecxz
shll
rorl
jnp
jecxz
mov
insb
fcoms
bound
cmp
mov
sub
arpl
cmp
push
in
es
out
push
movsl
lea
xchg
aas
mov
fldcw
lcall
mov
cmp
mov
cltd
lahf
sbb
enter
cmp
out
orl
call
jae
xor
xlat
dec
pushf
add
push
mov
icebp
push
lock
push
fldcw
out
xor
sub
mov
cli
inc
mov
cltd
inc
or
imul
outsl
xchg
imul
test
setne
std
ss
add
adc
inc
mov
lcall
test
das
cld
mov
dec
jns
xor
xchg
loope
dec
sbb
or
cmc
ds
leave
hlt
lret
sahf
fidivrs
rclb
fdiv
pop
hlt
cld
or
and
test
test
cmp
ds
lret
adc
hlt
dec
int
xchg
dec
jecxz
int
test
sbb
enter
jae
pop
jmp
pop
aam
sbb
xorl
adc
cmp
cmpsb
cmpsb
cmp
roll
sarl
imulb
inc
dec
sarl
inc
mov
jnp
pusha
mov
lcall
xchg
jmp
push
gs
in
lea
rcrb
test
ffree
pop
jge
int3
popa
insl
ret
inc
int3
imul
bound
hlt
pop
cmp
jg
push
popa
aaa
push
mov
dec
lret
aam
dec
and
stos
or
in
jae
aas
or
ja
xlat
fisttpl
data16
call
cmc
inc
xchg
jle
mov
dec
adc
lahf
cmp
sbb
clc
inc
jae
in
xor
nop
cmp
pop
dec
pop
xchg
push
mov
sub
out
pop
xor
push
into
movsl
dec
movsb
pop
out
cli
xchg
fcoml
out
pop
mov
stos
sbb
shll
and
add
test
inc
jns
xchg
out
icebp
add
aas
jno
xchg
jae
divl
mov
push
inc
lods
rol
shl
in
mov
xor
iret
push
push
and
inc
mov
subb
mov
add
jbe
fdivrs
or
pop
sbb
xor
out
int
shll
jo
sahf
xchg
stc
leave
adc
inc
and
ret
das
or
stc
popf
cli
adc
mov
out
dec
subl
inc
cmp
lcall
cmp
ss
mov
jo
mov
lods
mov
fucomi
in
nop
mov
sarl
ljmp
jle
cmp
jmp
dec
lret
enter
dec
sub
mov
lock
fwait
dec
inc
mov
dec
mov
je
mov
mov
mov
sbb
repz
mov
mov
lahf
jbe
xchg
pop
xchg
adc
xor
test
mov
sbb
arpl
adc
push
jl
jecxz
cld
test
aaa
lcall
push
es
in
lds
and
push
scas
lds
ljmp
push
push
lcall
add
idivb
add
incl
sub
or
jmp
bound
push
pextrw
out
sbb
mov
popa
movsl
sub
into
aad
mov
addb
sbb
ds
daa
addr16
int3
pop
notb
jo
add
pop
lock
lret
lret
dec
negb
pop
pushf
cwtl
cmp
mov
hlt
xor
dec
iret
and
push
fisubrs
jl
in
jne
sbb
dec
pop
lds
lcall
dec
xor
or
mov
cmp
sub
xor
push
add
jbe
das
lods
lock
inc
fwait
jb
inc
xor
sub
sub
out
cs
jnp
pushf
test
popa
mov
negl
outsb
push
xor
lahf
scas
cmp
sub
arpl
jne
and
adc
iret
xchg
daa
cmp
and
xchg
mov
lcall
in
scas
mov
xchg
fistpll
fucomp
movsb
test
xorb
xor
jle
jecxz
into
js
mov
xchg
mov
push
and
fildl
lea
push
or
fwait
gs
es
pop
sti
cmpsl
loopne
jae
add
addl
ds
adc
stos
fcoml
adc
int3
divl
loopne
cmpsl
push
add
test
cmc
mov
adc
mov
mov
fs
mov
adc
dec
xorl
movsb
cmpsb
sub
cs
mov
jge
and
pop
cld
andl
or
dec
inc
inc
pop
xor
jp
loopne
dec
ja
mov
shl
addr16
mov
cmp
inc
repnz
ss
xchg
pop
hlt
dec
fsubrs
mull
insb
xchg
push
mov
xchg
pop
cmp
icebp
xchg
inc
adc
dec
jmp
mov
adc
adc
outsb
pop
fdivs
imul
repz
js
inc
dec
or
lcall
pop
cwtl
insb
aam
mov
mov
add
mov
push
mov
test
sub
or
enter
or
sbb
sti
clc
pop
pop
imul
inc
test
fistps
sbb
pop
cli
xlat
rsqrtps
mov
out
cmpl
push
mov
shr
inc
pop
xchg
mov
out
gs
mov
mov
sbb
cli
iret
sarb
scas
push
xchg
lcall
mov
mov
xor
and
and
lds
xor
dec
mov
adc
jl
xor
xor
sbb
cmp
xor
jmp
ds
test
lret
lock
es
addb
inc
ja
push
mov
cld
add
xchg
or
jecxz
rclb
mov
push
out
dec
mov
pop
push
inc
sbb
adc
lds
push
xor
into
push
and
mov
sbb
frstor
add
test
inc
es
xchg
fsubl
jno
adc
fcmovnbe
jno
daa
ss
imul
scas
js
mov
orps
sbb
mov
dec
pop
adc
inc
mov
inc
pop
andl
arpl
cmp
mov
add
test
jmp
push
xorb
inc
push
xchg
outsl
movsb
fwait
mov
or
jnp
xor
or
jo
jl
add
ljmp
lds
or
adc
arpl
std
test
les
mov
setb
js
test
mov
and
arpl
movsl
das
call
inc
adc
xor
cmp
stc
insl
mov
mov
pcmpeqd
push
mov
lahf
pop
cli
andb
js
sar
lods
and
divl
test
test
popa
sub
or
push
movsl
in
push
leave
dec
fwait
push
or
push
ljmp
jne
clc
xchg
popf
bound
test
repnz
es
cltd
bound
ljmp
in
fs
xchg
and
add
imul
imul
iret
test
push
xlat
movsb
test
jl
mov
jns
scas
push
sub
push
pop
rclb
int3
movsl
and
pop
sub
into
cmp
nop
int3
sbb
push
pop
and
std
movsl
cmpsb
inc
push
inc
mov
add
inc
sbb
mov
jo
lret
fs
xchg
mul
js
icebp
imul
scas
leave
sbbl
out
arpl
stos
xor
ret
bound
cmpsl
or
jle
std
mov
jbe
sbb
dec
lahf
and
fs
test
xchg
lret
push
mov
loope
incb
inc
inc
cli
test
pop
and
mov
mov
enter
cmp
adc
adc
mov
or
fisttpl
movsbl
nop
bound
lods
xchg
repz
lods
imul
outsb
push
rcrb
sub
insl
cmp
pushf
add
ficoms
sbb
sbb
push
jne
aas
push
jmp
push
jb
sub
pusha
sarb
xlat
sbb
out
das
inc
fists
in
sbb
xchg
pop
stos
les
sub
nopl
pop
imul
in
mov
xchg
test
in
adc
mov
mov
lret
xor
aaa
jmp
mov
addl
pop
cmpsb
mov
xor
stc
daa
iret
lock
push
and
out
mov
mov
insl
xorl
mov
out
sbb
sub
lods
jp
push
xor
push
jg
add
nop
idiv
xchg
and
out
shrl
movsl
sub
sbb
lret
or
adc
cld
hlt
push
add
divl
sub
lds
je
adc
pop
rolb
mov
test
push
xchg
sbbl
ja
clc
sbb
pop
mov
xchg
cld
fcomps
mov
cwtl
mov
sbbl
jbe
fnstcw
inc
stos
pop
cld
xchg
push
les
cltd
imul
outsb
and
stc
mov
fdivrs
dec
xor
push
outsb
mov
xchg
pushf
out
jge
cmp
cmp
out
outsl
insb
push
mov
inc
aam
cmp
inc
jno
lahf
mov
xor
enter
test
or
stos
jg
cmp
add
or
pop
push
sub
xchg
cmp
inc
cs
push
lods
xchg
push
xor
arpl
arpl
dec
push
fisttpll
and
pop
stc
inc
adc
iret
push
adcb
push
mov
jns
aad
addr16
jl
je
bound
push
dec
adc
ret
push
pop
jb
sub
mov
push
movb
rolb
adc
fwait
lahf
mov
add
push
cmp
roll
and
adc
sub
cld
mull
and
and
xchg
ss
sarl
lea
dec
shl
loop
mov
lock
cli
addr16
orb
fcomps
adc
inc
out
cmpl
ret
popa
sub
sbb
testb
xchg
lret
mov
push
push
or
pop
adc
mov
aad
js
cmp
js
jnp
jge
sbb
mov
mov
mov
loope
mov
inc
insl
rclb
clc
rcll
jae
leave
sar
pusha
icebp
es
jo
jne
popa
sti
sub
notl
mov
jmp
mov
xchg
rorb
xor
imul
dec
cmpsb
pop
mov
aad
repnz
mov
cs
jmp
repz
push
jb
mov
xor
enter
fwait
lock
or
movsl
ja
call
hlt
and
push
test
pushf
or
lret
fldt
push
dec
add
xchg
loop
in
push
idiv
pushf
jmp
pop
cmpsl
and
jl
add
push
jb
pop
fldenv
aad
xchg
dec
jne
clc
icebp
cmp
jp
ljmp
jecxz
and
mov
fadds
pusha
and
or
lea
inc
ss
sahf
call
call
mov
out
repnz
jecxz
jmp
inc
dec
jle
and
and
ss
adc
je
ljmp
enter
das
and
inc
dec
dec
push
cmpsb
mov
popa
cmpl
lods
fcoml
mov
cmpb
push
aaa
or
and
stos
push
jle
pop
fisubrl
mov
fildll
ret
push
or
lods
repnz
sub
repz
movsl
jns
push
sub
sbb
and
cmp
insb
imul
and
sti
rclb
insb
ss
loopne
push
rcll
lods
add
sti
shll
or
rorb
mov
mov
movsl
pop
aaa
bound
pushl
mov
push
or
mov
cmpsl
call
mov
fs
jecxz
pop
fmuls
sub
dec
add
push
sti
sub
xchg
mov
int
div
in
cmp
mov
add
sbb
push
lock
mov
sub
lea
cs
lcall
flds
xor
loop
shrl
fmulp
mov
xchg
inc
mov
push
lods
repz
xchg
mov
cmp
or
mov
cmp
fwait
mov
mov
and
imul
or
sbb
xor
mov
in
inc
nop
sbb
or
repz
xor
stos
add
jmp
insb
scas
cmp
jmp
pusha
xchg
stos
outsl
sub
insb
jbe
cmp
dec
cmp
inc
or
jnp
and
nop
stc
xchg
and
pop
and
in
in
push
add
cli
jp
pop
mov
add
cmp
mov
rorb
data16
pop
inc
test
in
pop
nop
adc
or
loop
ret
mov
addr16
rorl
shlb
pop
jns
sahf
or
not
jne
xchg
lret
addr16
xor
pusha
add
cmpsb
or
xchg
dec
movsb
sub
xchg
addr16
leave
cmpsl
sub
les
fcoml
push
ljmp
push
jb
pop
scas
das
in
enter
dec
icebp
in
inc
fisubl
push
inc
push
lret
pop
rcrb
xchg
loopne
pop
and
mov
dec
int3
out
push
xchg
xchg
push
fnstsw
enter
repz
add
mov
cmp
aad
cmpsb
xchg
xchg
inc
into
outsb
sub
sahf
xchg
nop
adc
push
inc
dec
adc
cmp
imul
mov
aad
je
inc
add
jns
sbb
sub
loopne
and
lods
aad
jp
add
rep
daa
sub
imul
dec
addr16
adc
inc
push
cmpsl
test
mov
sbb
or
cmp
imul
cmp
adc
sub
popa
les
mov
lds
push
cld
dec
push
sti
mov
pop
and
and
inc
jb
out
jmp
leave
inc
mov
jbe
clc
xchg
inc
test
pop
or
jae
cmp
shrl
mov
insb
sub
lods
pop
addr16
xchg
adc
cli
mov
clc
stos
fstl
mov
mov
jnp
outsl
rclb
sbb
lcall
pop
out
mov
aad
pop
in
xorb
mov
xor
rorl
jns
ds
lock
rolb
rcrb
cmpsl
mov
sbb
shlb
add
test
mov
xchg
adc
mov
or
movsb
xchg
lcall
sbb
lods
cs
or
sahf
mov
shll
jb
cltd
rorb
popf
adc
insl
pop
aaa
add
std
rcrb
mov
or
push
push
xor
cmp
pushf
or
pop
pop
sub
dec
xlat
scas
dec
dec
imul
dec
cli
movsl
nop
lock
xchg
adcl
add
mov
fidivrs
aas
dec
xchg
orb
popa
leave
xchg
inc
inc
test
cmpl
jae
push
dec
add
pop
int3
aad
loope
je
lahf
cli
cmp
mov
stos
jnp
add
cwtl
pop
sbb
cmpsl
jbe
cltd
out
icebp
cmp
jb
xor
mov
pop
xchg
and
dec
pop
xchg
loop
mov
dec
cli
int3
mov
ficomps
mov
out
lcall
loop
dec
sub
fisubl
dec
sub
inc
mov
add
pushf
lret
js
loope
cmp
stos
mov
ds
testb
mov
xor
push
mov
loopne
test
aaa
insb
push
and
add
sbb
xor
lods
lock
jge
pop
cmp
mov
cmp
push
push
pop
xchg
stos
dec
pop
imul
jo
mov
jbe
xlat
mov
cmp
and
scas
add
jbe
sub
or
and
ret
cmp
jbe
mov
cmpsl
dec
fwait
insb
mov
xchg
stc
jecxz
sti
push
vxorps
and
jl
fadd
idiv
pop
fst
sbb
shll
xchg
xor
ret
cmpsl
sahf
dec
push
loope
in
adc
pop
adc
xchg
inc
test
rorb
pop
enter
xchg
dec
lods
xchg
push
mov
mov
cmp
push
mov
pop
mov
enter
xor
aad
js,pn
mov
xor
out
add
pop
inc
daa
adc
dec
push
ficoms
mov
bound
popf
jl
lahf
jecxz
das
movsl
aam
cmp
sahf
in
test
std
stos
cmp
mov
out
out
mov
xchg
sbb
cwtl
and
mov
pop
add
pop
pop
inc
mov
fs
insb
ss
inc
mov
addl
xor
xchg
or
push
pop
xchg
xchg
pusha
lods
data16
or
inc
call
or
arpl
mov
dec
jne
xchg
lea
arpl
lahf
ljmp
inc
inc
add
imul
add
push
push
push
pop
push
jle
mov
cld
add
push
mov
sbb
pop
jmp
mov
stos
mov
pusha
notb
inc
sbb
push
and
or
test
cmpsb
cltd
mov
stos
push
std
xchg
bnd
push
test
push
mov
out
and
test
ljmp
fidivs
out
sti
xor
insb
xchg
je
in
stos
xor
test
bound
rol
test
cmp
pop
pop
jg
rolb
pop
lahf
adc
xchg
sbb
imul
lods
shlb
mov
mov
popa
aas
rcrb
inc
out
adc
xor
sub
jo
mov
jae
xlat
fs
inc
mov
addr16
loope
cmpsl
jne
mov
and
mov
ret
or
test
push
xor
sbb
dec
sbb
fldenv
and
outsl
or
je
pop
ss
ja
mov
out
add
cmpsl
pop
std
clc
addr16
jle
fdivl
xchg
out
xor
ficoms
dec
call
out
cli
ja
sub
stos
imul
cmp
int3
pop
clc
movsl
dec
addr16
xchg
sub
popf
in
adc
in
pusha
pusha
xchg
gs
xchg
adc
cmc
xchg
jle
xor
jae
inc
out
xchg
adc
adc
divl
jl
test
mov
mov
jnp
sub
imul
aaa
stc
add
jge
inc
mov
push
gs
fnstsw
inc
stos
mov
inc
sub
dec
adc
jg
in
xchg
pop
or
xchg
pop
xor
movsb
sbb
movsb
mov
xor
cwtl
in
dec
xchg
les
jl
add
insb
fistpl
lea
and
out
xor
pusha
xchg
mov
dec
int
mov
sub
dec
pop
andl
mov
xchg
pusha
sbb
imul
movsb
in
fists
cwtl
cmp
sub
inc
les
out
mov
and
mov
jg
jmp
mov
std
pop
test
shrb
xchg
rcrl
in
addr16
jge
mov
int
and
mov
mov
cli
adc
adc
outsl
imul
adc
in
aam
pop
push
xchg
jmp
dec
test
sub
xor
push
dec
sub
cmc
pop
mov
push
int3
jl
xchg
outsb
mov
ljmp
mov
fistl
or
adc
cmp
mov
pop
pop
cld
adc
jae
aad
nop
mov
aaa
add
add
insl
mov
pop
jnp
sub
int
lods
xchg
mov
stc
mov
repnz
inc
ret
rorb
icebp
movsl
inc
ret
mov
dec
dec
xor
cmp
dec
jno
je
or
call
inc
fists
push
das
ss
fxch
pop
lods
insb
jb
adc
mov
jns
mov
rcr
adc
mov
cmp
imul
push
dec
aaa
aad
cmc
movsb
pushf
cmp
adc
push
xor
pushf
cmp
icebp
sub
loopne
mov
xchg
je
push
movsl
sbb
inc
or
pop
mov
fcmovnu
adc
xchg
cmp
aad
jp
jmp
adc
andl
into
addb
fildl
mov
cmovg
push
inc
push
in
insb
cmp
xor
pushl
test
xor
mov
imul
xchg
push
mov
pop
lret
test
xor
cwtl
fwait
mov
pop
mov
mov
dec
loopne
adc
sbb
aas
gs
jns
in
ja
xlat
or
fdivs
sub
imul
mov
filds
mov
pop
add
cmpsb
xor
das
aas
pop
lcall
xlat
or
adc
mov
int3
push
xlat
and
pop
cmpsl
sbb
push
mov
lret
pop
fwait
inc
testb
lods
xor
xor
dec
imul
ja
push
js
dec
push
pop
iret
daa
scas
nop
repz
in
es
cmp
adc
mov
cs
mov
mov
mov
aad
in
lods
xchg
push
lea
int3
pop
jle
scas
in
aad
ret
cwtl
fwait
insl
sbb
lea
mov
pop
fwait
jbe
ret
push
popa
nop
es
loop
popa
pop
aad
gs
fucomip
cmpsb
into
imul
pop
test
dec
sbb
pop
jecxz
jp
xor
mov
pop
jnp
ss
xorps
adc
daa
aaa
jne
pop
pushw
push
loopne
pop
mov
lret
pop
inc
ret
loope
lret
mov
out
xchg
out
and
fiadds
lods
inc
imul
cmp
pop
jmp
mov
dec
repnz
cltd
sbb
mov
add
fsubrs
push
mov
mul
out
in
jo
test
sub
sahf
in
imul
dec
push
mov
dec
scas
imul
shl
insb
add
insl
cli
inc
adc
cmp
mov
dec
inc
iret
aaa
and
neg
pop
hlt
aad
jle
mov
jb
jl
icebp
nop
cli
sub
adc
cmp
stc
xchg
ja
sub
mov
jne
xchg
in
frstor
push
jns
lahf
or
cli
lods
adc
bound
xchg
in
jp
push
cmpsb
sarb
popl
arpl
cmpsl
imul
mov
jmp
xchg
js
dec
xor
or
and
mov
out
mov
and
aas
int3
je
jns
fbld
add
dec
ljmp
cltd
arpl
mov
pushf
mov
push
addr16
shlb
or
call
adc
dec
jecxz
push
arpl
subl
pop
mov
in
or
std
jns
sub
sub
xor
mov
fwait
cmp
cld
dec
xchg
adc
xchg
mov
daa
jg
mov
lock
jo
add
and
inc
leave
push
icebp
or
pop
inc
mov
mov
je
int
stos
cltd
adc
jb
mov
add
in
insl
mov
mov
xor
jns
popf
inc
pop
xchg
push
es
mov
push
xor
lea
jge
into
outsb
fdivs
add
lahf
pop
sti
rcrl
xor
cld
add
negb
mov
shlb
loopne
cmp
push
jle
jge
in
jge
cmpsb
jecxz
std
mov
into
add
daa
jb
pop
pop
call
filds
jl
mov
cmovno
mov
mov
mov
jns
mov
push
mov
cmp
in
int
outsb
lret
inc
push
cltd
ss
mov
jno
push
mov
pop
outsl
lock
dec
dec
stos
int
lea
pop
cmp
lods
aam
hlt
insb
sub
mov
clc
pop
repnz
cmp
xchg
repz
lret
mov
push
inc
cld
push
gs
mov
bound
or
xchg
in
mov
pop
sub
lods
jnp
inc
pop
dec
or
sbb
out
cmp
shrl
outsl
aad
outsb
sar
add
sub
shrl
sub
lods
roll
or
in
in
cltd
pusha
movsb
sub
call
mov
dec
aam
adc
es
dec
fsts
out
jno
ds
push
fdivrp
or
in
xchg
enter
icebp
outsb
xor
and
push
add
cmpsl
leave
mov
mov
add
jp
cmp
gs
inc
inc
mov
into
sbb
cmp
popa
arpl
dec
push
xchg
xchg
test
fcomps
mov
xchg
inc
push
cmp
jle
rol
pop
add
int
xor
cs
pop
sub
push
repnz
les
pop
sbb
out
lock
pop
hlt
xor
push
lods
push
xchg
pop
cmp
pop
in
out
pop
pop
mov
stos
aad
and
pop
hlt
mov
add
xchg
add
adc
repnz
sbb
xchg
idivl
mov
and
pop
xor
jge
sbb
lds
add
repz
lcall
or
mov
pop
rolb
cwtl
int
push
addb
mov
cwtl
xchg
inc
jnp
aam
ja
adc
mov
push
mov
jl
daa
aaa
mov
mov
xor
mov
test
cmc
ja
xor
sbbl
xor
orl
inc
jp
xor
leave
cmpxchg
lret
cmpsb
scas
or
rolb
sti
sti
jns
test
or
fsubl
call
fsubs
jle
lock
mov
es
push
js
sbbl
dec
je
jecxz
sbb
mov
cmp
gs
int
shll
dec
gs
int3
lcall
loope
hlt
push
xchg
sub
xchg
jl
sub
in
sahf
ljmp
shlb
push
xchg
mov
adc
stos
dec
repnz
ret
push
adc
es
cmpsl
lds
das
sub
aas
add
xchg
xchg
imul
divb
hlt
xorb
push
ret
and
add
cmp
and
out
aad
sub
fdivs
call
mov
and
adc
inc
rcrb
sbb
leave
filds
arpl
inc
push
mov
xor
outsb
test
sub
call
xchg
les
pushf
neg
das
jns
das
and
jle
scas
cmpsb
pop
push
out
jecxz
insl
lret
or
fcomps
mov
int
or
cmp
lock
sbb
scas
or
sbb
mov
mov
and
enter
sbb
sbb
fwait
add
sub
repz
mov
mov
daa
loop
pop
xor
and
std
cmp
cmp
inc
xor
cwtl
fdivs
aam
scas
ljmp
in
mov
enter
enter
lcall
lods
dec
xor
dec
or
mov
sub
add
fidivs
or
push
in
sub
fidivrl
ja
nop
and
inc
lcall
sub
sarb
ficompl
jmp
test
dec
les
xchg
xchg
lods
imul
mov
scas
sbb
andb
cmpsl
mov
adc
mov
popa
enter
jp
ud0
push
inc
jns
cs
imul
loop
push
sub
push
sub
ret
in
dec
fcoms
xchg
aad
dec
sub
out
add
inc
mov
or
sahf
addr16
pushf
push
or
push
mov
imul
and
cmp
sub
push
loop
dec
jp
pop
int3
xor
aaa
and
inc
add
adc
rol
add
jp
sbb
sub
jbe
ret
insb
popf
ja
mov
dec
cmc
jp
adc
mov
push
cmp
adc
mov
inc
push
in
xchg
fcoml
xor
cmpsl
xorl
insl
lods
popa
fnstcw
test
dec
rclb
push
scas
pop
les
fwait
push
sbb
jns
xchg
add
push
push
mov
push
outsl
repnz
lds
sbb
test
jge
std
adc
push
repz
sub
incl
mov
cmp
aaa
jnp
lock
inc
xchg
jns
pop
scas
loopne
arpl
xor
insl
xor
inc
outsl
fldl
js
jmp
pop
xchg
rorb
pop
cmp
add
enter
fst
mov
outsb
sub
sahf
mov
xor
cltd
jg
jp
lahf
cmp
mov
jne
xor
mov
mov
hlt
xor
mov
push
dec
lret
push
mov
jae
xchg
jle
adc
inc
les
xchg
stc
add
je
aas
sub
rolb
and
jg
in
sbb
xor
sbb
add
iret
mov
inc
aad
daa
inc
dec
cmpsl
sbb
xchg
arpl
mov
jge
pop
jne
mov
cmp
sub
mov
dec
dec
mov
xchg
stos
lret
pop
rclb
add
lock
aas
add
xchg
into
mov
xlat
inc
sbb
int
das
in
out
push
insl
pop
shlb
int3
loopne
jb
cs
movsl
rcrl
lret
xchg
xchg
xchg
mov
pop
or
and
cmp
jg
int3
xchg
adc
loopne
jge
sbb
xchg
stos
dec
adc
data16
add
inc
into
movl
add
mov
daa
std
push
clc
sahf
je
mov
mov
dec
shrb
addr16
cltd
cmpl
xor
jo
rorl
sti
inc
rcrb
mov
mov
fwait
xchg
nop
mov
testl
push
arpl
mov
popf
in
sub
repz
inc
sbb
sbb
push
adc
loopne
nop
rcrl
repnz
jne
cli
outsb
mov
cli
lock
sbb
mov
lret
mov
inc
ret
push
fcmovbe
dec
adc
ljmp
test
imul
gs
or
lods
aad
pusha
repnz
call
inc
outsl
inc
adc
sub
mov
cmp
fisubrl
xor
data16
ljmp
pop
addb
sbb
jo
jle
insb
stc
ljmp
movsb
cmp
push
loopne
scas
ss
outsl
fstl
popa
mov
enter
mov
shrb
add
and
popa
jae
mulb
xor
jecxz
pop
out
inc
addr16
jo
aad
push
mov
inc
pop
test
mov
inc
loop
iret
jmp
pop
inc
decb
sub
das
cmc
cmc
fstl
lods
cmp
jge
xchg
je
or
cld
out
js
mov
and
mov
in
pusha
shrb
roll
scas
push
lds
and
push
popa
pop
and
sbb
dec
subb
and
sub
cmp
inc
jmp
cmpsb
mov
inc
xchg
push
xor
pop
sti
negl
test
push
or
sbb
ucomiss
mov
sbb
jo
mov
push
mov
push
mov
jp
imul
pop
inc
pop
pop
jl
inc
popa
adc
pminsw
xchg
lea
fmuls
xor
sbb
jb
dec
mov
arpl
inc
xchg
or
fdivr
stos
mov
and
insl
pop
mov
and
pushf
xchg
adc
cmc
and
addr16
pop
rcrb
dec
mov
inc
lcall
sub
jb
addr16
inc
sti
adc
mov
rcrb
mov
inc
mov
les
dec
stos
sub
dec
mov
popl
iret
int3
lods
add
xor
ret
into
xorl
dec
int
cmc
call
sbb
mov
add
arpl
gs
inc
inc
sub
ret
xlat
xor
jl
mov
ja
in
into
dec
ds
cmp
rcrb
cmp
gs
inc
pusha
or
dec
incb
sub
mov
mov
jge
ret
jae
cmp
inc
in
fmul
push
or
push
mov
or
mov
or
xlat
or
xorb
out
add
mov
cmp
ss
cs
or
dec
dec
lods
rcrl
dec
jae
sub
jmp
xor
mov
cmp
in
shrl
fbstp
fistl
dec
ret
fs
cli
xchg
jns
push
cltd
pop
jl
repnz
add
and
cltd
fnstenv
in
jb
cmpl
fimull
xchg
fwait
lahf
orl
or
out
into
cmp
add
mov
inc
inc
sbb
inc
push
xor
inc
jge
add
push
add
subb
xchg
pop
aad
and
mov
mov
mov
jg
sub
out
dec
andl
test
loopne
xchg
sbb
cmp
sbb
loop
leave
es
dec
jno
cld
mov
adc
mov
jae
push
aad
mov
fnstenv
int
xchg
data16
dec
rorb
es
xchg
dec
sbb
pop
pushf
lea
sbb
leave
inc
or
lret
dec
ds
push
out
mulps
add
adc
test
push
cmc
scas
insb
addr16
imul
daa
cld
stos
mov
std
popa
sbb
bound
push
pushf
and
mov
sbb
insb
adc
jno
mov
jo
cltd
jge
fadd
stos
sub
cmc
pop
push
push
insl
incb
xchg
outsl
cmpsl
mov
inc
outsb
outsl
cmc
xchg
adc
xor
cs
push
add
out
cmp
add
cmp
call
int
test
and
mov
iret
rcl
xchg
repz
ret
popf
xchg
les
bnd
cmp
adc
mov
dec
idivl
xchg
pop
adc
les
je
dec
pop
pop
jbe
addr16
or
push
push
and
cmpsb
adc
lret
push
test
lret
mov
dec
push
ja
rcrl
mov
in
or
sub
fnstenv
cld
sbb
xor
mov
repnz
mov
int3
mov
push
mov
ret
adc
mov
cmp
xor
pop
js
jmp
sbb
es
xchg
aad
mov
sub
fsubp
shl
lea
mov
lea
pop
xor
sbb
push
in
cld
in
and
iret
test
sub
dec
fistpl
pop
and
sbb
fstpl
jg
mov
pusha
mov
lds
out
pop
pop
dec
in
les
xor
xchg
inc
ljmp
xor
mov
push
cmp
out
or
inc
outsb
sarl
mov
push
cmp
movb
in
ffreep
mov
sarl
leave
test
add
jb
fmulp
xchg
jns
push
ficomps
cmp
out
adc
mov
pop
push
cmp
lock
or
jbe
sbb
negb
out
xchg
push
popa
xlat
sbb
mov
push
adc
and
stos
shl
adc
outsb
hlt
es
aaa
adc
pop
jo
mov
ja
pop
movsb
push
int
repnz
xchg
jns
pop
fcomp
mov
vcvtpd2ps
movq
add
aas
xchg
icebp
cld
ret
adc
mov
ljmp
daa
add
xchg
mov
rcll
lcall
int
cwtl
cmp
push
mov
cld
icebp
insl
sahf
inc
hlt
push
xchg
sub
xorl
fisubrl
std
jg
pop
xchg
sbbl
aaa
ss
in
stos
gs
pop
mov
scas
mov
and
sbb
and
test
mov
xor
add
test
fs
fisttps
jecxz
sub
jne
jnp
push
xchg
and
movsl
xchg
sub
jb
bound
or
or
clc
scas
pushf
pop
jnp
js
std
je
ljmp
data16
dec
cmpsl
aaa
loop
xchg
icebp
mov
loop
rcl
sbb
push
scas
mulb
lahf
xlat
iret
fsubrp
fcoml
adc
inc
xor
stos
test
loopne
clc
insb
scas
cmp
out
fbstp
sbbl
pop
mov
and
pop
jg
or
pop
jae
insb
or
lds
inc
sbb
cltd
ret
fidivs
inc
jecxz
xor
pop
cli
mov
in
dec
inc
jecxz
sbb
cmp
push
shrb
jle
bound
dec
aad
push
pop
xor
pop
fs
insb
stos
xchg
cltd
adc
test
dec
pop
dec
dec
inc
push
push
add
int
xor
or
call
sub
scas
push
ficoms
gs
cmp
add
jmp
cs
cltd
xchg
push
pop
jecxz
aas
loop
cs
nop
lret
ss
bound
pop
ret
das
pop
add
jl
pop
outsb
in
xchg
ds
pushf
mov
xchg
push
jno
mov
dec
mov
imul
test
xchg
sti
pop
cmpsl
and
and
mov
push
push
sub
sbb
addr16
cld
jo
cwtl
xor
xor
adc
xor
es
and
push
jb
jecxz
bound
daa
or
addr16
repz
fimull
adcb
fwait
test
push
outsl
ret
pop
adc
test
adc
adc
pop
and
sbb
push
pop
out
and
loope
das
sysenter
jmp
or
sub
insb
lcall
xor
jge
push
jbe
mov
and
mov
enter
sbbl
pop
ljmp
cmp
test
xlat
stos
jecxz
lods
nop
inc
lret
jge
adc
sub
jle
fadds
ljmp
sub
push
mov
addb
fdivl
add
ret
lock
push
xor
xor
jecxz
fwait
mov
mov
dec
cs
jns
sbb
jae
pop
int
jno
mov
and
dec
jb
pop
dec
cmp
int3
xchg
push
cmc
lods
pop
loop
iret
movsl
ja
inc
es
xchg
es
shll
xor
push
pop
jae
cmpsb
icebp
and
iret
or
int3
fcomp
lods
cmc
xchg
shrb
in
sbb
adcb
addr16
mov
lcall
push
xor
push
mov
cld
int
repz
les
call
xchg
stc
pop
mov
xor
cmpsb
dec
mov
jnp
mov
jno
scas
mov
clc
lret
jns
sbbb
aas
inc
xchg
enter
enter
pop
sub
andl
lock
mulb
dec
dec
cld
dec
inc
mov
lahf
in
hlt
mov
xchg
push
mov
and
lods
xchg
or
mov
test
mov
xorb
sub
je
push
cld
lods
loopne
fcoms
popf
test
adc
sahf
dec
repnz
out
int3
dec
int3
imul
dec
dec
das
add
and
rorb
in
fbstp
ret
ret
add
sbb
xchg
sub
inc
jo
inc
dec
inc
and
scas
std
mov
push
sbb
outsl
adc
push
sbb
pop
test
test
pop
paddb
add
movups
imul
add
mov
xor
stc
insb
xchg
cmp
push
or
out
pop
push
cmp
fisubs
add
lea
or
ds
lret
push
xchg
test
push
ret
jl
shlb
push
lods
cmpsb
mov
sbb
loope
lods
pop
loop
pop
scas
call
mov
and
dec
stos
cltd
lahf
xchg
leave
xchg
inc
push
xor
cmp
lret
pop
push
repz
ljmp
cmp
push
pop
adc
int
push
mov
cli
jg
test
sbb
sbb
push
jg
gs
mov
dec
loop
inc
adc
sbb
jnp
cmp
test
cmpsl
mov
leave
movsb
loop
jbe
shrl
cmp
iret
loop
bound
test
pop
pop
cwtl
ja
idivl
in
insl
mov
frstor
imul
mov
inc
xor
jne
pop
out
call
adcl
das
repnz
jno
xchg
out
xchg
sub
lret
cs
lds
push
pop
mov
rolb
mov
pushl
cmpsb
inc
in
xor
dec
mov
fadd
pop
stos
adc
dec
inc
jle
adc
xchg
xlat
pop
xor
cmp
cmp
fistps
jae
fwait
sti
adc
dec
cwtl
cmpsb
cwtl
lahf
ljmp
or
aam
cli
sbb
mov
mov
mov
cmp
mov
mov
pop
xchg
clc
inc
pop
punpckldq
and
cmp
stos
or
iret
scas
push
push
nop
leave
xor
mov
lahf
mov
xor
gs
cmp
and
cmove
push
pop
mov
insb
adc
dec
xchg
jo
or
or
cmc
loopne
xchg
cmp
sub
inc
popf
adcl
sbb
incl
xchg
ror
sbbl
nop
sahf
mov
dec
jb
jnp
jo
pop
fldt
push
insl
fsts
add
add
test
add
push
pop
cmpb
movsb
fwait
aad
cmp
mov
hlt
xcrypt-ecb
cmpsl
dec
gs
pop
stos
test
mov
xchg
jae
aad
dec
ljmp
int3
or
sbb
push
dec
xchg
loope
inc
jns
int3
pop
inc
inc
icebp
sub
fcmove
cmpsl
push
mov
cmpsb
inc
adc
jecxz
xchg
cmp
lret
cltd
mov
bound
shll
es
lods
call
sbb
lods
int3
ss
add
cmp
inc
shrb
andnps
dec
pusha
mov
test
fs
xchg
jmp
jae
insb
push
je
pop
ljmp
cmp
scas
lods
lds
out
jle
ss
cmpsb
stos
push
in
cld
imul
or
mov
xchg
pop
mov
mov
sti
or
sarl
je
adc
jmp
xlat
mov
fldcw
btr
hlt
add
cmp
sbb
aas
pop
cmpsl
int3
jne
and
in
push
test
clc
bound
jne
lods
add
fwait
mov
xchg
mov
scas
mov
jge
aam
xor
xchg
mov
mov
mov
sbb
out
mov
mov
into
xchg
jg
dec
les
stc
mov
xchg
jmp
inc
imul
add
jae
fisubrs
pop
xor
aas
fldenv
je
inc
mov
cs
mov
sarw
push
adc
std
push
stos
scas
add
int3
aam
int3
push
adc
pushf
int3
je
dec
pop
xlat
rcr
dec
add
ja
fcmove
out
cli
lcall
cs
daa
and
dec
in
inc
dec
gs
in
xchg
or
lods
pop
popf
pop
pop
inc
inc
or
hlt
negl
sbb
push
xchg
adc
cld
push
mov
xchg
es
outsb
hlt
add
shl
or
push
push
nop
lea
repz
or
nop
sbb
insb
aam
xor
cmp
push
dec
mov
inc
icebp
xor
repz
jne
filds
xchg
ja
dec
cmp
popf
outsb
pushl
mov
adc
cmp
jbe
mov
in
fadds
push
and
pop
insb
aad
in
push
sahf
cwtl
mov
cmp
ja
jmp
movb
jle
imul
xlat
rcr
mov
sbb
idivb
push
sbb
pop
ja
into
test
adc
xor
shll
jmp
notb
xor
jbe
rcll
pushf
pop
adc
jb
sti
xchg
out
shlb
movsb
lret
outsl
stos
dec
inc
test
loope
fcom
ret
ret
mov
movsb
adc
rolb
pminub
xor
sbb
roll
insb
xchg
xor
mov
insl
adc
and
fistl
outsb
in
rcrb
shrb
push
or
mov
mov
scas
mov
inc
mov
jne
xchg
xchg
call
notl
popa
out
popf
or
push
fnsave
loopne
cmpsb
fstps
xchg
call
mov
lea
outsb
mov
andl
mov
jge
xor
mov
ret
and
add
aaa
dec
and
pop
pusha
gs
mov
cmc
and
stc
inc
ja
sahf
cmpb
add
pop
icebp
iret
xlat
xchg
or
inc
xlat
and
rol
test
lret
out
bound
push
sub
jle
loop
dec
lahf
cmp
pop
scas
adc
pop
dec
cld
test
mov
push
js
ret
iret
insl
mov
je
sub
stos
mov
div
enter
stos
jge
lods
es
jle
sarb
idivl
xor
mov
ret
rclb
leave
daa
sbb
stos
mov
cmc
sub
mov
stc
out
add
sbb
imul
xchg
add
jmp
cmp
dec
cmp
imul
xor
cwtl
jecxz
push
push
push
mov
ljmp
ror
adc
xor
dec
and
les
pushl
fcmovnb
adc
pop
or
jae
inc
into
fs
ret
andb
decb
fwait
adc
mov
xor
push
adc
pop
pop
cmpsb
cltd
sti
mov
mov
push
enter
into
jne
pusha
leave
mov
scas
jae
lods
int3
push
mov
rclb
les
movsl
test
pop
je
loop
jns
loope
cmp
ljmp
push
addl
data16
rcll
jg
gs
test
enter
push
inc
xor
loop
mov
dec
xchg
shll
rcrl
jae
add
stc
xchg
das
and
mov
lret
lods
jns
ja
aaa
nop
xor
xchg
and
dec
aad
pop
jne
test
fisubs
in
mov
dec
xor
lods
mov
iret
adc
and
je
loope
mov
js
jb
push
call
into
sbb
or
adc
nop
js
js
xchg
rcrb
xchg
push
and
cmp
add
jmp
add
mov
pushf
fcompl
xchg
cmp
ja
jp
cmpsl
and
sub
mov
outsl
sbb
fmul
je
mov
xor
notl
jbe
lock
sbb
mov
in
mov
pop
xor
ffreep
fadds
mov
and
xor
cld
cli
pop
jl
notl
icebp
ds
pop
adc
mov
sub
insb
cmc
ss
shrl
fisubrl
mov
mov
adc
mov
xchg
adc
pop
jb
into
imul
jl
iret
add
sti
add
enter
int3
stos
xor
jae
mov
add
mov
mov
mov
pop
xchg
push
je
inc
imul
push
sub
add
fdivrs
rorl
icebp
shll
in
daa
arpl
sahf
push
mov
xor
leave
adc
sbb
loopne
mov
and
push
in
scas
fucomi
pop
pusha
xchg
sbb
and
mov
in
cs
loop
or
jne
xchg
and
movb
mov
sub
int3
loopne
fs
jae
add
mov
out
mov
sub
loopne
pop
es
push
imul
mov
orl
mov
pop
mov
lods
sub
adc
sbb
mov
fiaddl
popl
inc
xchg
push
insl
mov
scas
insl
push
pop
push
test
add
push
jb
lcall
pop
mov
into
and
sbb
dec
gs
add
pushf
dec
and
jns
fistpll
xchg
or
into
test
int3
test
jnp
add
and
scas
lcall
adc
inc
aaa
addl
mov
cs
popa
cmp
sbb
in
adc
bound
iret
xlat
mov
mov
add
hlt
and
inc
jb
push
das
pop
and
or
sbb
imul
adc
xchg
adc
push
out
in
dec
jecxz
movsb
imul
fnstenv
in
cld
xchg
mov
xchg
xor
sbb
and
xchg
xlat
push
mov
and
lahf
ds
xchg
jmp
out
cmc
push
dec
xlat
subb
fstpl
std
lock
cmp
rcll
push
les
mov
add
xor
shrl
sub
xor
add
sbb
pop
ljmp
jo
popf
xor
lods
push
add
pop
xchg
repnz
pop
repz
cwtl
xchg
loopne
popa
sarb
test
xor
lds
push
sub
pushf
mov
dec
pusha
ret
cmc
pop
dec
mov
xorl
shll
in
loop
fs
iret
xchg
pop
sbb
fimull
xchg
rcrb
xor
fisttpl
dec
stos
inc
sub
movb
adc
xchg
shl
xchg
sbb
inc
sbb
pandn
sub
pop
xor
aas
scas
mov
cltd
lock
cmp
ret
add
jns
bound
mov
xlat
push
push
pop
dec
dec
lea
push
out
das
xor
inc
shll
test
lcall
mov
mov
pop
cmp
fcoml
imul
cmp
sti
lock
iret
stc
jo
mov
cltd
mov
xchg
test
fs
leave
cmp
pop
add
call
std
mov
add
sub
mov
mov
and
mov
mov
hlt
inc
xchg
or
iret
sbb
inc
nop
int
push
outsl
ds
rorb
shlb
inc
addr16
or
ret
sbb
out
adc
bound
pusha
sub
add
mov
jg
mov
int
mov
and
mov
mov
adc
xor
roll
icebp
in
lods
fs
mov
adc
shrl
sbb
push
icebp
dec
mov
faddl
scas
lcall
lods
push
lods
fsubs
dec
fistpl
mov
dec
jle
mov
imul
fildll
jp
push
dec
pop
xor
dec
fidivrs
call
and
mov
push
jg
aam
xor
iret
mov
jne
in
dec
xchg
loopne
dec
ljmp
pop
repnz
test
dec
leave
jbe
mov
dec
lods
jge
shlb
inc
mov
int3
enter
sbb
stos
cltd
xor
cli
sti
iret
lock
stc
daa
fists
pusha
cmp
dec
movsb
and
push
jo
rol
mov
adc
jns
and
loop
arpl
ljmp
fs
mov
jbe
jmp
jmp
xchg
xchg
or
mov
test
adc
and
cwtl
cwtl
jp
add
xchg
add
es
cmp
xor
cli
loop
add
repz
andl
mov
loope
push
pop
and
test
pop
inc
sbb
jns
and
pop
jae,pt
repnz
mov
cli
push
lock
mov
and
dec
push
enter
dec
xor
ret
mov
mov
adc
cmc
mov
lea
mov
lret
and
jae
lret
out
rcll
cmc
pop
adc
and
loopne
or
mov
shll
mov
iret
mov
xor
mov
mov
dec
mov
ds
mov
jmp
pusha
jae
scas
lret
fsubs
enter
dec
pop
outsb
xor
inc
sub
mov
in
lock
hlt
sub
stc
std
xchg
adc
adc
jp
lock
fdivl
cltd
sbb
ds
mov
pop
lods
daa
mov
adc
lcall
fildll
fmuls
push
xchg
sub
xlat
mov
in
adc
into
xor
jne
or
aaa
pop
jecxz
sbb
mov
mov
xor
inc
sub
push
push
enter
push
push
xchg
mov
repz
sbb
cmp
andl
mov
imul
inc
in
jo
loopne
in
cmp
cmp
pop
pop
ss
mov
lods
enter
cmp
add
and
sbb
inc
sbb
cs
add
into
xchg
pop
mov
or
or
xchg
fstps
addb
adc
mov
in
xlat
jne
int
xorl
push
and
pop
lods
mov
cmpb
mov
adc
enter
or
lahf
or
test
jb
je
dec
xchg
outsl
mov
push
adc
ljmp
push
jbe
and
or
into
mov
data16
push
test
sub
jno
dec
jge
adc
sbb
jno
into
mov
jecxz,pt
mov
gs
cltd
pop
mov
ja
inc
jnp
mov
test
xlat
cli
xor
loopew
addl
push
lret
and
xchg
push
ficoms
pop
sbb
lock
aad
mov
scas
push
jp
jns
jnp
mov
int
sbb
xchg
or
js
arpl
loope
pop
fistps
jl
into
jns
push
cmp
sti
jmp
xchg
or
cli
icebp
dec
cmp
outsl
bnd
push
popa
jno
addr16
inc
dec
sbb
es
fbld
rcr
cmp
cmp
xor
lcall
mov
into
movsl
rol
pop
dec
scas
nop
mov
sbb
and
or
lock
lret
mov
sbb
in
test
mov
popa
inc
loopne
pop
call
popf
add
ss
add
das
pop
mov
sub
insl
pop
ret
and
lds
dec
mov
or
inc
shll
and
cwtl
pop
lret
cmp
ja
aaa
scas
mov
mov
mov
adc
nop
mov
fidivs
out
pop
jl
shrl
nop
mov
mov
jnp
cmp
sbb
daa
mov
xchg
shrb
lods
cltd
xchg
enter
ret
or
repnz
in
aaa
pop
push
out
sub
in
adc
in
mov
test
enter
loopne
mov
sahf
out
push
out
lcall
clc
and
je
testb
sub
xor
jo
cmpsb
mov
sub
xchg
push
jns
xchg
or
dec
clc
xchg
negl
push
nop
jecxz
in
cld
ror
pop
mov
push
test
xor
jb
arpl
rcll
sbb
adc
sbb
sbb
xchg
loopw
rep
ds
cmc
jo
pop
fsubl
pop
xlat
inc
push
cltd
cmc
leave
inc
dec
jmp
dec
fidivrs
mov
loope
testb
push
negb
hlt
or
insb
stc
xor
push
sub
adc
push
adc
or
jmp
loopne
pop
pop
insl
jbe
mov
inc
movsl
je
cwtl
mov
or
adc
push
adc
fbld
mov
inc
jnp
shl
jmp
out
outsb
shll
aaa
pop
leave
ficoms
cmp
in
js
adc
lock
sub
jae
aaa
push
pop
cwtl
pop
addb
shrb
xchg
mov
hlt
jl
or
fisubl
push
popf
sbb
sarb
cltd
cmp
inc
inc
es
call
xchg
test
mov
pop
fnstenv
mov
mov
push
shll
in
inc
add
jg
mov
daa
push
mov
inc
sub
xchg
mov
sbb
push
aaa
cli
shrb
in
xchg
xor
cmp
push
out
dec
mov
cld
test
sbb
loope
mov
inc
jbe
loope
inc
push
add
addb
dec
push
popf
fyl2x
into
sub
adc
nop
lods
fwait
cmpsb
addr16
ja
jecxz
pop
adc
arpl
cltd
and
jl
xchg
add
push
sub
push
dec
movups
pop
xchg
sbb
jbe
adc
jbe
scas
lea
ds
out
xor
dec
fisubs
daa
or
sbb
and
mov
lahf
push
dec
mov
das
ret
or
inc
mov
push
bound
mov
test
pop
xchg
dec
mull
out
loopne
and
adc
jo
jne
fbstp
lods
stos
xchg
or
rcll
jl
xor
imul
push
push
add
rcll
data16
mov
cmp
mov
mov
jns
test
cmp
mov
jno
sarl
sub
mov
gs
push
test
jne
xor
mov
sbb
inc
daa
std
fisubl
cltd
hlt
xchg
xor
pushf
jb,pn
jp
mov
insb
lock
into
adcb
or
stos
sub
out
arpl
or
xchg
iret
push
adc
mov
xlat
jmp
cmp
nop
mov
inc
xchg
inc
xor
call
xor
or
pop
add
add
movsb
sbb
int3
and
mov
add
pop
mov
push
jg
mov
ret
mov
cmp
dec
pop
inc
xchg
repnz
add
arpl
add
xchg
mov
jmp
mov
sarl
ja
mov
adc
cmc
push
cmp
fiaddl
jnp
inc
xor
xchg
scas
lahf
or
mov
sub
fwait
pushf
imul
jbe
push
cmp
pushf
iret
pop
adc
pop
mov
dec
sbb
and
push
aam
subb
cmp
ret
push
fbld
lret
pop
xchg
test
add
or
fs
outsb
jns
mov
gs
pop
xlat
dec
and
aad
xchg
scas
arpl
fs
push
lret
sti
sbb
cmp
in
cltd
aas
cs
push
iret
nop
in
sbb
or
cld
push
ret
jg
lods
xlat
sbb
hlt
mov
sub
outsb
xchg
jno
std
dec
inc
aas
ret
ljmp
pop
cmpsl
sbb
cmp
adc
repz
jae
inc
cmp
and
or
mov
pop
pop
aaa
fs
cld
mov
sbb
lock
aam
xorl
pop
xchg
cmp
xchg
dec
cmp
mov
dec
xchg
loopne
and
mov
add
pop
sbb
mov
pop
lret
fisubl
jmp
mov
fld
sbb
jb
sub
jae
push
sbb
fcom
sarb
cli
int
xor
mov
adc
sub
enter
xchg
mov
push
ljmp
or
pushf
nop
es
ret
arpl
jg
add
jg
push
ret
hlt
sbb
sub
sti
mov
xchg
call
inc
sub
jp
jl
add
movsb
add
xchg
pop
es
mov
inc
iret
adc
xor
cmc
xor
push
ret
push
scas
sbb
leave
lahf
in
fnstenv
push
repz
rorb
lret
xchg
push
inc
xchg
or
mov
out
mov
xchg
adc
sub
sbb
sub
pop
adc
imul
adc
jo
cmp
jl,pt
into
inc
mov
outsb
leave
xchg
add
in
lds
cltd
loopew
cli
xor
mov
xchg
cmp
xchg
imul
test
les
mov
cmpsb
xor
mov
rorl
insl
pusha
jo
mov
push
js
daa
jge
xchg
xchg
clc
addr16
dec
mov
mov
dec
imul
out
outsl
cmp
xor
cmp
leave
mov
not
mov
loope
dec
sbb
pop
inc
sarl
cli
jns
pop
test
pop
inc
adcl
int
shlb
jge
push
imul
nop
pop
rol
rcll
stc
aaa
mov
pop
clc
out
add
stc
adc
das
test
lahf
dec
sti
sub
pusha
in
cmp
je
rol
jnp
sub
cwtl
push
cltd
into
mov
jae
stc
jb
mov
adc
jle
xchg
sub
lcall
xchg
jae
pop
xchg
aad
test
mov
and
stos
or
xchg
int3
mov
lock
xor
ss
icebp
adc
mov
cltd
mov
sbb
ret
pop
out
popf
les
jge
aaa
insb
stc
imul
ret
sbb
test
in
les
xor
lds
push
testb
push
dec
test
jge
push
lret
rcll
out
sbb
js
test
and
cmp
lds
jp
xchg
pop
push
int
cmp
rcll
scas
test
fs
jb
push
mov
lods
pop
jbe
cmc
arpl
scas
lds
add
sbb
lods
mov
push
test
stos
adc
mov
jl
adc
js
pop
js
cmp
adc
imul
sub
xor
je
push
mov
insb
add
lcall
push
fsubr
cmp
loope
pop
popf
dec
movsl
and
in
movsl
out
lret
xchg
js
jbe
sbb
mov
jge
iret
mov
mov
fisubrs
add
inc
sbb
ljmp
pop
xchg
push
pop
imulb
ss
cli
mov
xchg
xchg
loop
jno
lods
lds
or
or
imul
movsb
add
push
lds
jl
push
leave
cld
loope
out
xor
and
inc
rclb
push
pop
jmp
adc
popf
cmp
clc
lahf
int3
stc
adc
sbb
adc
cmpsl
push
jbe
int
dec
negl
decl
fsub
xlat
imul
cmp
jae
or
add
imul
cmp
mov
and
loop
fs
loopne
hlt
iret
xlat
data16
jne
out
test
lods
mov
int3
dec
int
das
pop
in
stos
sti
mov
xchg
aam
add
or
stos
mov
mov
or
add
sbb
push
adc
sub
mov
fcoms
fcomps
nop
scas
lret
push
fisubl
cmp
mov
out
in
setbe
lahf
rcl
in
lods
inc
xchg
pop
test
int
popa
jmp
scas
ret
sti
jecxz
pop
sti
adc
xor
faddl
pop
insl
hlt
add
or
and
mov
aad
sbb
loope
stc
cmpl
xchg
outsb
push
out
jne
xchg
in
sbb
pop
xor
cmpsb
pusha
sbb
xchg
jae
mov
pop
xchg
jmp
adc
pop
mov
loope
inc
scas
lods
cmp
dec
fists
mov
add
mov
out
jo
and
aad
xchg
jmp
mov
mov
or
push
xchg
std
das
inc
xor
gs
out
and
fstl
sub
xchg
or
pop
dec
inc
nop
and
push
out
shrd
iret
pop
in
pop
lret
scas
jmp
sub
loopne
mov
pop
outsb
fimuls
das
sub
imul
xor
and
pop
in
cmp
pop
mov
lds
push
inc
xchg
sbb
std
mov
add
jp
xor
ror
loopne
add
xor
into
or
cmp
add
adc
xchg
out
and
loop
out
sbb
sub
inc
lods
rorl
inc
pop
jge
in
imul
repz
push
dec
sbb
mov
fwait
mov
cmp
cmp
mov
add
and
bound
sub
cli
es
inc
adc
pop
add
lock
mov
mov
or
push
cmp
jb
jmp
pushf
add
xchg
mov
push
movsb
aas
ja
mov
mov
push
push
lock
sub
pushf
adc
imul
xor
mov
mov
cmc
cs
jmp
mull
add
popa
add
cmpb
das
and
push
cwtl
cmp
rcrl
ss
int
loop
xchg
data16
inc
aam
or
jmp
or
sbb
je
int3
pop
cmpsb
cmc
sti
sub
lods
xchg
jne
in
xchg
nopl
iret
dec
pusha
outsl
inc
add
xorb
and
inc
xchg
clc
lods
cs
iret
testl
insb
xchg
je
dec
and
inc
aas
mov
xor
pop
dec
dec
adcl
fiaddl
push
fadds
movsb
push
xor
sbb
inc
xlat
jae
jb
data16
xchg
fstl
pop
mov
ds
ljmp
push
xchg
pop
insb
and
out
lret
add
push
js
push
dec
sub
inc
sbbl
xor
popa
push
dec
pop
rcrl
rclb
sub
or
pop
lods
pop
cld
fdivl
ret
sbb
out
fsts
and
daa
jne
and
jmp
loopne
pushf
out
dec
mov
test
xchg
call
jns
out
fsubrs
test
xchg
inc
adc
sbb
popa
mov
dec
in
jle
add
cmp
mov
imul
outsl
mov
pop
mov
insb
stos
or
sub
inc
cmpsl
push
test
mov
je
pop
xor
cmp
fdivrl
push
sub
fistpll
xchg
mov
xorb
loop
int
jmp
insl
pop
pop
in
cmp
frndint
movsl
fstps
daa
jnp
mov
xchg
fxch
xchg
lcall
cmp
dec
pop
into
int
xchg
lcall
lahf
push
mov
out
test
pop
mov
xchg
adcl
sbb
pop
inc
adc
movsl
inc
dec
adc
push
dec
es
test
xchg
leave
cmp
and
les
test
mov
rorb
scas
jge
mov
jno
div
stos
outsb
or
out
inc
in
push
xchg
sbb
cmp
dec
shl
mov
adc
push
rcr
into
jle
jmp
add
jne
aas
mov
pop
xor
loop
icebp
cmp
decl
outsb
mov
jno
popa
xor
pop
pop
stos
mov
outsb
xor
shlb
xchg
cmp
jg
pop
rcll
orl
and
sub
jbe
and
or
fucomp
inc
lret
lock
gs
sub
add
cltd
add
mov
jne
pushf
stos
xchg
adc
lret
out
lock
cmp
mov
and
je
mov
cmp
insl
sub
stos
int
in
stos
dec
int
jmp
pop
push
xchg
inc
cmc
xchg
jns
or
insb
ficoml
cmp
movsl
inc
ret
add
xchg
sbb
jo
pop
xchg
add
stos
mov
ret
xor
clc
sbb
push
push
insb
ljmp
xchg
fisttpl
and
mov
xor
lods
insl
out
lea
inc
cmp
dec
dec
and
pushf
in
and
push
rcr
mov
inc
mov
pop
push
mov
mulb
icebp
mov
jb
or
inc
adc
lds
in
cmpsb
sub
stos
and
arpl
in
sbb
movsb
jb
in
inc
fstpl
xor
and
int
loop
cld
cli
ret
mov
sub
or
fstl
and
push
inc
pop
mov
pop
mov
rolb
daa
out
cmc
lea
sub
lahf
pop
jbe
sbb
push
fldenv
dec
and
add
lret
in
mov
sbb
xchg
xchg
dec
pop
mov
movsb
pop
adc
adc
jne
jmp
clc
fcoml
mov
mov
push
jae
pushf
loop
aad
lcall
xor
or
mov
clc
xor
push
in
out
cmp
inc
popf
out
mov
loop
xor
sahf
sbb
xchg
icebp
jp
or
popf
adc
andl
cli
sub
iret
adc
xor
sbb
mov
cmpsb
loopew
push
pop
in
mov
out
clc
push
jmp
jnp
aas
stos
ss
mov
lds
loope
sarb
punpckhdq
popa
jecxz
lock
cmp
clc
xor
jg
xorb
test
jno
outsb
cmp
ja
test
mov
push
sub
in
and
stos
pushf
stc
mov
jmp
andl
aad
sub
mov
mov
xor
add
sbb
mov
bound
rclb
push
mov
mov
xchg
rclb
inc
and
xlat
push
mov
test
leave
jbe
dec
jbe
ljmp
lock
and
sbb
mov
and
outsb
mov
lcall
xchg
push
pop
mov
dec
mov
pop
xor
movsb
jns
add
mov
and
inc
gs
push
rclb
jae
fs
outsb
ja
add
shlb
inc
mov
adc
loop
out
sbb
mov
sub
cmpsl
inc
inc
imul
jb
and
sbb
mov
ficompl
leave
ret
out
adc
pop
dec
loope
sbb
pop
out
jle
rcrb
push
stos
xchg
ds
je
pop
test
int3
adc
jle
std
xchg
and
or
sar
xchg
cmpsl
icebp
xor
pop
lock
and
je
sbb
pushf
add
jp
es
sub
sbb
jg
ret
push
out
popf
data16
jae
pop
int3
dec
adc
loop
mov
pushf
and
xchg
pop
test
cmp
in
jg
lock
adc
jle
jae
sti
adc
xchg
cmp
push
dec
fcomps
xor
cs
inc
jl
pusha
jae
ja
outsb
mov
addb
push
xchg
add
jne
cmp
fnstsw
pushf
cltd
push
xor
sbb
imul
lea
jbe
sbb
cs
ljmp
cs
rcr
dec
jmp
sbb
xchg
lods
pop
push
push
sbb
lret
nop
inc
inc
add
xchg
filds
ja
push
adc
fwait
mov
data16
jae
iret
je
out
out
popf
xchg
pop
push
fnstenv
adc
das
add
lods
and
push
jnp
pop
das
pop
dec
fisttpll
ret
xchg
mov
cmpsb
dec
aad
jnp
sub
push
in
loope
ljmp
push
adc
jae
and
mov
add
ja
rcrl
scas
xor
gs
mov
xchg
int
adc
mov
fisubrs
jne
inc
gs
and
xchg
xchg
push
loopne
scas
pop
jns
adc
xchg
stc
sahf
cmc
pop
aam
and
sahf
mov
mov
out
cmp
insb
scas
sub
adc
xor
xor
out
mov
or
jmp
mov
jmp
inc
jp
loope
loop
inc
test
or
or
and
repnz
jl
test
jbe
ja
mov
inc
bound
int3
scas
mov
jae
js
mov
mov
sti
popa
cmp
cmp
addr16
xchg
lcall
xor
movsb
xchg
xor
and
icebp
mov
lock
pop
push
ret
mov
imul
ret
popf
jp
inc
enter
je
pop
cld
andl
mov
stc
jmp
inc
sbb
int3
loop
or
jnp
repnz
es
cld
pop
out
mov
and
outsb
xor
lret
and
nop
bound
aad
dec
or
sahf
mov
mov
sbb
inc
dec
out
dec
mov
mov
sbb
xchg
out
mov
mov
lods
push
nop
add
or
scas
movd
icebp
in
mov
popa
xchg
mov
mov
cmp
lret
ficomps
dec
inc
lea
push
xchg
xlat
pusha
add
push
jecxz
mov
ds
bound
bound
mov
mov
fcmovb
xor
test
pusha
mov
fdivl
call
push
les
sbb
xor
xchg
mov
cli
cmpsl
repnz
cmp
pop
xchg
jmp
out
xchg
pop
add
fildll
dec
lods
add
dec
mov
loope
in
dec
scas
mov
out
jno
int
icebp
adc
sbb
aam
movsl
push
pop
mov
gs
in
mov
jg
and
out
xchg
lock
push
cmp
jp
ret
jne
dec
notl
insb
loop
aad
mov
add
xor
outsl
loope
mov
enter
pop
mov
and
push
xorb
shl
aas
lahf
or
jp
sbb
popf
fdivl
in
in
add
mov
out
jg
push
jo
iret
lods
mov
mov
push
test
add
mov
inc
cmp
add
cltd
mov
sarl
add
mov
mov
lret
mov
mov
mov
pop
pop
push
lea
or
ja
pop
call
fisubrl
jns
cld
push
outsb
rclb
ja
mov
test
call
std
adc
outsl
arpl
dec
lret
jmp
lcall
movsl
and
jae
mov
push
xor
test
jle
mov
icebp
sub
das
pushf
and
cmp
xor
lds
mov
das
mov
daa
jns
loope
jmp
cld
add
sub
push
pop
or
mov
xor
xor
cli
sbb
popf
lock
xchg
movsl
sub
push
cltd
mov
pop
xchg
adc
cmpl
add
lds
adc
pop
sbb
popf
call
sbb
cmpsl
cmpl
inc
scas
scas
jne
mov
stc
or
clc
leave
sbb
aas
int3
add
dec
xor
xchg
xchg
repnz
jbe
push
leave
int3
xchg
cmp
sub
adc
sub
sub
fisubrs
lock
cmc
add
outsl
mov
jns
add
lods
pop
inc
sbb
and
testl
sbbl
jnp
or
repz
xchg
nop
push
dec
lea
hlt
sbb
jl
das
and
xor
xor
je
test
addr16
fidivs
lahf
pop
push
cwtl
ds
call
aaa
daa
pop
pop
dec
ret
mov
adc
test
lods
inc
popl
mov
bound
fs
addr16
sub
test
mov
inc
push
xlat
jmp
repz
mov
ljmp
repz
lret
inc
mov
sub
sub
jmp
hlt
push
jp
push
sbb
inc
pop
mov
cmpsl
add
cltd
pop
lea
inc
inc
jmp
pop
xchg
shl
rcll
xchg
and
jo
mov
xor
xor
push
sbb
fsub
pop
pop
jnp
push
inc
unpckhps
or
pop
lahf
insl
push
sub
sarb
mov
xor
xchg
adc
orl
jb
xchg
jne
xchg
dec
dec
test
ret
ljmp
sub
fdivrs
mov
xor
insl
ds
add
cmp
sbb
popf
mov
fcomps
inc
clc
inc
inc
and
inc
dec
pop
pop
sbb
sti
call
jbe
mov
js
and
daa
jno
inc
cltd
lahf
xor
scas
das
mov
sbb
add
push
mov
jne
jle
mov
subb
inc
mov
iret
pop
cmpb
jmp
stc
ret
jl
push
adc
out
inc
ret
jmp
inc
imulb
cmp
xor
das
jbe
movsl
adc
push
push
dec
hlt
iret
movsb
and
dec
aas
jmp
pop
insb
movsl
jbe
shlb
jns
outsb
outsl
jns,pt
inc
sbb
cmp
push
aaa
cld
pop
fs
fistpl
pop
cmpl
mov
add
ret
xchg
ret
or
in
cmp
imul
je
outsl
fwait
mov
adc
mov
and
lret
mov
or
pop
mov
and
repnz
dec
js
mov
sbb
or
ret
cmp
mov
jb
jo
mov
xchg
pop
leave
or
js
mov
pop
push
adc
fidivrl
mov
add
mov
mov
push
dec
push
subl
js
cmp
in
dec
dec
int3
cld
out
mov
scas
loop
fdivs
pop
icebp
jle
mov
sbb
and
imul
mov
fdivr
pushf
outsl
xchg
jp
mov
fadds
dec
fcoml
fs
jne
movb
clc
fcoms
jae
cld
sti
movsl
in
movsb
stos
dec
xchg
lahf
cli
push
into
fs
or
jge
or
das
pop
out
jle
xchg
mov
popa
loope
std
lds
lcall
popf
test
int3
sbb
shrb
cmp
popf
xor
fs
adc
mov
das
jno
and
cmp
out
lods
mov
scas
sbb
out
mov
jecxz
jle
pushf
mov
or
adc
jp
xor
mov
mov
mov
scas
adc
sarb
bound
lods
sub
jl
add
mov
cmpsl
jp
fldl
cmp
lock
cmp
pop
push
movsb
push
xorl
dec
popa
out
mov
scas
ljmp
mov
add
jbe
xor
pop
lock
inc
push
clc
stc
ret
and
add
cmp
js
xchg
xchg
jecxz
pop
xchg
insb
mov
in
in
rorl
in
adc
rorl
or
test
inc
fmull
scas
push
adc
dec
mov
popf
dec
frstor
lret
pop
out
aad
push
mov
loopne
aam
inc
clc
jnp
adc
sti
mov
mov
imull
loope
pop
bound
jl
add
hlt
dec
popf
popf
cmp
cmpsb
xchg
xchg
clc
sti
pushf
xchg
arpl
mov
sahf
in
cmp
inc
add
sbb
inc
das
jecxz
ds
scas
push
loopne
jbe
out
rcr
inc
and
pop
pusha
push
pop
add
shrb
clc
pop
mov
mov
sbb
jb
sbb
in
roll
push
int3
es
pop
std
dec
and
mov
xchg
aaa
inc
sub
pop
adc
leave
jbe
popa
outsb
xchg
test
cwtl
loope
popf
stc
add
loop
daa
lahf
movsb
jne
lahf
lcall
fdivl
push
xor
xor
in
outsb
aaa
cmpsb
push
nop
pop
add
xor
jp
mov
mov
aad
mov
popa
cltd
js
and
icebp
repz
mov
mov
dec
jmp
nop
loop
js
jg
ror
call
arpl
in
nop
adc
mov
sti
out
loopne
xchg
jns
pop
mov
mov
cmp
outsb
test
jne
xlat
cmpsb
stc
lea
pop
fwait
into
inc
repz
mov
and
xchg
mov
mov
loopne
int
mov
insb
mul
les
fneni(8087
xchg
pop
icebp
sub
mov
mov
dec
cld
sub
outsb
lock
sbb
push
ret
inc
inc
adc
ficoms
mov
push
mov
and
daa
out
dec
mov
and
adc
xchg
inc
add
cmp
mov
jns
cmp
push
stc
xchg
test
mov
repnz
pop
mov
or
mov
add
xchg
call
hlt
outsl
negb
mov
lcall
xchg
mov
adc
incb
inc
sbb
push
jbe
xor
push
fwait
shrb
sbb
xchg
pop
jne
push
inc
cmp
inc
pop
cli
cmp
icebp
out
mov
and
hlt
inc
outsb
nop
push
sbb
add
setnp
and
dec
shlb
ss
out
imul
repnz
sub
rcrb
mov
cltd
mov
dec
loopne
dec
test
cli
inc
imul
aad
pop
mov
hlt
out
cltd
or
cwtl
ret
rcr
xchg
push
xchg
lock
mov
stos
orl
and
mov
outsb
pop
cmc
lock
push
shld
push
out
das
popf
cld
jp
pop
sti
pop
add
repnz
xchg
sbb
xor
andl
mov
jae
jo
and
jno
mov
adc
lret
jne
sbb
std
ds
js
adc
jp
pushf
jmp
push
repz
mov
adc
pusha
sub
sub
jg
mov
int
jl
iret
sub
jne
add
xor
jb
mov
jmp
or
orb
clc
shl
test
ljmp
adc
lahf
sbb
sbb
insl
adc
daa
cmpsl
scas
vmread
jl
in
outsb
call
pop
or
shll
cmc
mov
dec
sbb
mov
xor
push
sbb
adc
aam
mov
addps
mov
jae
push
mov
enter
push
lea
out
es
test
or
mov
addb
xchg
lds
inc
push
lods
pop
jo
fdivs
cmpsb
inc
in
lock
mov
outsl
mov
imul
loope
jne
stos
les
sub
lret
sub
or
sub
mov
cmp
cld
mov
cmpb
xor
inc
inc
dec
enter
xchg
xchg
push
vxorpd
xor
jge,pt
inc
hlt
cmpsl
shrl
popa
fs
es
cmp
xor
jge
fidivrl
sahf
sub
xor
add
int
lret
xor
in
xchg
jns
ja
jle
mov
dec
push
mov
ret
jb
mov
lret
sarl
jb
repz
psubsb
pop
or
push
cmp
aam
adc
dec
ja
nop
iret
out
in
push
sbb
mov
js
lock
push
sub
cmp
lock
leave
mov
push
ja
or
es
push
adc
jp
jo
ja
mov
xor
xchg
enter
ret
xchg
jnp
sbb
and
addr16
push
idivl
xchg
mov
shlb
sbb
int3
gs
dec
jmp
pop
add
rclb
loopne
inc
mov
les
jno
cs
pmulhuw
loop
ss
fucomip
and
enter
popf
dec
into
test
je
cmpsl
and
push
popa
jg
sbb
and
sbb
mov
push
mov
mulb
mov
movsl
int
add
test
lret
cld
subb
call
mov
mov
out
insl
xchg
scas
xorb
test
addr16
in
jg
or
jb
test
lahf
int
pop
mov
add
jno
rolb
lds
jbe
xchg
jmp
mov
pop
or
inc
outsl
xor
lods
jno
push
or
lods
out
cli
xlat
stc
xchg
xchg
stos
mov
shlb
outsl
ss
mov
pushf
int
jp
xor
aaa
testl
js
lods
gs
cmp
xor
sub
test
adc
and
fidivrs
mov
sbb
in
out
ja
test
cmp
mov
cs
aam
and
push
pop
stos
inc
test
inc
cltd
pushf
push
ficoms
xchg
cmp
sub
add
loope
bound
push
into
scas
sub
dec
cmp
and
push
mov
xchg
cmp
loopne
int3
sarb
push
sbb
fimull
jle
scas
mov
push
notl
inc
push
data16
repnz
loop
mov
mov
ret
mov
popa
loope
in
mov
shrb
ja
inc
mov
inc
pop
push
mov
scas
push
xchg
mov
cmpsl
imul
rcl
cmp
insl
stos
pop
xor
sti
jbe
inc
mov
cmp
in
inc
xor
and
es
test
adc
subb
push
movsl
repnz
sbb
daa
cmp
fucomp
push
xchg
push
sub
insl
leave
add
ficomps
imul
bound
jne
ret
stos
sub
push
repnz
out
daa
xchg
fs
add
mov
jb
idiv
mov
cs
add
stc
jmp
test
or
pop
into
loopne
dec
shl
xor
lock
jecxz
mov
lea
ds
mov
dec
xchg
and
mov
dec
mov
jbe
jl
sahf
lret
adc
mov
movsl
pop
je
add
mov
sub
dec
push
jmp
jno
adc
xchg
or
xchg
sbb
ret
jae
fld
push
nop
push
inc
popf
or
outsb
fsubrl
pop
shrl
xor
aas
adc
adc
sbb
out
jne
cwtl
and
lods
fnstcw
and
push
push
and
or
jg
stc
jg
aas
scas
or
imul
lcall
out
fdivs
insl
fld1
jmp
fucomip
repz
loopne
push
jb
ljmp
cmp
inc
out
pop
in
jae
pop
sbb
xchg
mov
pop
je
popf
mov
inc
imul
xor
mov
int3
jo
movsb
imul
mov
mov
lahf
in
popf
nop
fstpl
or
pop
pop
and
sub
repnz
adc
cmp
dec
pop
and
out
push
pop
sbb
pushw
addr16
into
hlt
stos
push
imul
clc
mov
es
jle
les
mov
lock
sbb
pop
pop
aaa
mov
ret
ss
std
jo
pop
pop
sub
ja
sbb
jg
dec
mov
ret
inc
sub
lods
inc
jg
or
js
or
pop
push
mov
leave
cmp
int
xchg
loope
push
dec
pop
adc
int
add
popf
in
lahf
imul
xchg
daa
ja
arpl
jnp
orb
sub
xlat
mov
inc
fstpt
pop
mov
pop
lds
pop
clc
cmp
cmpl
test
pop
sub
mov
cs
sbb
jo
lretw
add
jne
cmp
sbb
faddl
xchg
fprem1
cltd
pop
ds
pop
jle
jecxz
pop
add
add
push
mov
add
cmp
cltd
or
inc
mov
sbb
xor
mov
adc
push
and
cmpsl
outsb
jecxz
inc
xchg
dec
push
xchg
fcoml
push
lcall
pop
push
cmp
jnp
fbld
fwait
and
xor
push
outsb
data16
int3
mov
lea
xor
out
mov
mov
add
fsubrs
jae
das
mov
js
xor
cmp
xchg
ror
xchg
jmp
and
test
jge
mov
mov
loop
jnp
push
lret
daa
outsb
adc
jp
test
add
xlat
scas
or
js
xchg
push
sub
jo
push
leave
rorb
int3
cmp
pop
sub
lods
dec
lahf
imulb
pop
xor
loop
lods
in
in
mov
mul
sub
and
sti
daa
orb
cmp
dec
push
ljmp
and
sbb
aaa
out
jae
addr16
rcrl
add
push
mov
push
inc
fs
out
insl
mov
inc
cmp
inc
or
divl
mov
lods
sub
inc
movsb
in
sbb
cmp
iret
test
movsl
aas
mov
or
or
cmpsl
push
mov
es
adc
or
fcoml
test
jns
ljmp
and
popa
pop
cmp
cmp
jle
pop
shlb
int
out
adc
mov
add
leave
repz
movnti
lret
xor
or
in
mov
movsb
ss
stos
add
scas
pusha
repnz
inc
and
dec
test
add
mov
cmp
fisubl
mov
pop
bound
sub
shrl
sub
push
out
clc
or
in
add
popa
xor
pop
xchg
rcl
popa
sub
hlt
test
mov
or
jae
inc
sbb
subl
push
fcos
into
test
xor
das
addl
dec
movsb
jbe
mov
lock
loopne
les
cmp
clc
insb
push
imul
shlb
popf
sbb
in
mov
cmpsb
sbb
mov
mov
mov
mov
fldenv
in
xor
inc
jno
sub
scas
dec
std
inc
cmpsl
add
xchg
inc
js
sbb
or
push
fwait
and
jno
sbb
pusha
adc
lea
ret
ja
push
inc
clc
xchg
cmpl
xor
mov
mov
imul
or
mov
scas
jne
pop
movsl
sub
lock
imul
xchg
sahf
dec
adc
cmp
insl
sti
icebp
call
jns
out
addr16
mov
loop
push
xor
sti
push
dec
lds
arpl
cmpl
pop
jmp
repnz
out
mov
xor
push
fnsave
xchg
cwtl
stos
sti
insl
mov
in
sub
adc
push
jmp
inc
sub
add
xor
rcll
in
mov
mov
fisubl
movsb
cld
daa
pop
cltd
mov
mov
lret
cmp
pop
push
cmp
dec
and
add
outsb
fcoms
mov
sub
xchg
adc
or
dec
and
and
cmpsb
push
pop
cli
andb
xchg
neg
push
inc
fisttpll
test
inc
dec
bndstx
loope
jge
mov
shlb
dec
out
mov
jmp
xchg
bound
dec
stos
pop
data16
inc
xor
jle
int3
ss
dec
pushf
or
daa
or
push
in
adcb
xor
mov
cs
add
inc
cli
add
les
rorb
scas
mov
or
ljmp
repz
sarl
mov
inc
aas
gs
and
jno
pushf
mov
stc
sbb
mov
add
in
loope
in
data16
sub
xchg
adc
lret
test
lret
fimuls
test
jle
sub
mov
xor
or
add
aam
push
into
frstor
pop
out
out
push
dec
push
out
and
inc
mov
pop
xor
xor
insl
cmp
sub
xlat
mov
in
xchg
pop
push
mov
cli
sbb
xchg
and
mov
test
pop
cmc
push
test
adc
push
lret
scas
sbb
mov
sbb
cld
iret
mov
roll
sbb
jmp
call
push
sub
idivl
mov
jp
mov
test
ret
cmp
mov
sub
jno
cld
mov
add
mov
jo
mov
lret
xor
cmpsb
mov
add
add
and
jg
frstor
rorb
push
stc
fstl
loop
adc
fucomi
ja
push
roll
push
outsb
ljmp
xchg
lods
add
insb
xor
aam
ja
dec
js
bound
adc
fcomps
cltd
das
mov
test
cmp
push
xchg
pop
lods
popa
jnp
pop
bound
js
stos
test
push
pop
movsb
jno
pushf
xor
dec
mov
adc
fildll
les
push
cmpsl
dec
call
sti
in
push
ja
xor
pop
sbb
push
rcl
mov
jne
mov
sub
rcrl
dec
popl
pushw
cmp
enter
mov
mov
outsb
cs
mov
sti
sbb
sub
mov
fs
push
add
mov
add
aam
ds
adc
jns
cmpb
pushf
sarl
adc
cmp
mov
push
fcmovnu
cmp
inc
dec
into
push
fdivrl
inc
cmp
sbbb
pusha
push
dec
pop
mov
mov
faddl
xor
push
sub
sbb
xchg
into
call
adc
mul
mov
aas
sub
jo
and
and
xor
xor
sub
add
int3
mov
sbb
loope
pop
and
sbb
in
out
leave
mov
arpl
pusha
out
cmpsl
cmp
in
sbb
jl
iret
cmp
xchg
popf
inc
aam
in
mov
stos
lods
inc
mov
or
test
add
jmp
sbb
mov
mov
jp
lcall
imul
sub
rol
popa
imul
negb
jg
mov
cmp
arpl
orl
es
stc
mov
mov
shll
pop
outsl
add
cli
push
mov
mov
dec
repz
jg
xchg
lret
adc
adcb
inc
mov
push
fcos
push
push
xor
lcall
ficoml
fbld
push
xchg
lea
addr16
cmp
dec
icebp
in
stos
or
mov
xor
gs
cmc
test
pusha
loopne
js
push
xchg
pushf
pop
jecxz
add
sti
inc
push
sub
sub
dec
jno
pusha
enter
sti
pop
adc
mov
lods
push
dec
dec
xchg
cmp
or
push
pminub
outsl
jne
mov
dec
sub
jle
iret
mov
rcr
cmpsl
rolb
mov
pop
fnstenv
jae
mov
dec
cmpsl
mov
jnp
pop
jns
popa
push
and
call
xor
mov
sub
jae
loop
jg
add
hlt
mov
lret
push
mov
scas
rclb
dec
rcr
sbb
iret
stc
in
cmp
push
push
popf
sub
test
or
icebp
fcmovu
push
dec
loope
mov
adc
push
add
aaa
mov
dec
mov
xlat
push
mov
and
out
imul
cmp
and
sarl
insb
xchg
les
jne
sub
inc
hlt
ds
test
inc
repnz
pop
cli
push
mov
xchg
outsb
imul
lret
jl
lods
popl
sub
jp
divb
dec
int
xchg
je
mov
dec
jns
cmp
dec
or
lock
push
push
pop
jns
stos
fwait
aad
jb
mov
gs
ret
lds
cmp
push
test
das
mov
cmp
pop
dec
pop
call
pop
jg
inc
mov
cmp
outsl
xchg
es
jecxz
mov
push
mov
or
jecxz
mov
movsl
es
mov
int3
mov
outsl
adc
insl
add
lods
in
insb
jno
imulb
xchg
stos
jne
data16
jbe
xchg
cltd
xchg
lret
xlat
cmpsb
test
aaa
shll
jnp
mov
into
ss
lods
dec
insl
pusha
push
nop
sbb
mov
out
lds
aam
mov
sub
cld
lods
xor
add
scas
cmp
xor
mov
repz
je
pop
pop
in
daa
xchg
cmc
cwtl
andl
cmp
out
mov
dec
int3
pop
mov
sub
in
jmp
xchg
lock
data16
fstpl
cmpsb
push
add
gs
ret
in
adc
mov
push
and
inc
insb
bnd
sub
dec
leave
xchg
fidivrs
arpl
adc
lahf
rcll
pusha
sub
push
setbe
jle
imul
lea
icebp
fmull
dec
ret
lods
xchg
push
out
pop
aaa
rcrl
jmp
xchg
adc
or
sbb
jg
mov
hlt
xchg
dec
pop
cmc
xchg
sbb
std
lds
ds
and
push
imul
mov
dec
lea
push
pop
mov
mov
repz
sub
mov
mov
xor
int
mov
out
sbb
movsl
jmp
test
mov
xchg
adc
jg
add
loope
fdivrl
fiadds
in
les
add
push
add
sbb
push
inc
and
sub
mov
or
fdivrl
adc
push
cmp
push
in
inc
movsl
loop
jne
xor
stos
enter
inc
movsb
int
cmc
clc
mov
test
shlb
mov
mov
addb
jo
push
shrl
adcl
mov
ret
adcl
dec
data16
mov
cwtl
jl
and
cld
pop
pusha
nop
cmp
mov
arpl
leave
push
gs
sahf
nop
pop
adc
iret
mov
rcrb
sbb
cli
ret
std
divl
push
push
xchg
cmp
fucomp
lcall
adc
dec
push
mov
xor
pop
cmpsb
pop
iret
push
out
int3
mov
mov
repz
adc
test
fcmovnu
sbb
xlat
sti
orl
nop
cli
sbb
clc
dec
out
inc
push
cmpsl
push
xor
sub
scas
js
and
fwait
dec
and
int3
push
cmp
sbb
orb
movsb
int
dec
sar
dec
pop
ror
adc
push
jno
ja
pop
and
aas
test
or
imul
xor
push
in
sti
jne
dec
arpl
add
pop
push
icebp
stc
fistpll
into
jge
les
ja
popa
inc
xchg
pushf
lret
popa
loope
push
stos
setnp
outsl
mov
and
fcomps
xchg
jb
fsub
jbe
dec
ds
push
movsl
inc
movl
mov
bswap
jne
pop
dec
aaa
js
mov
lods
xchg
push
pusha
jnp
mov
jb
mov
insl
mov
sbb
pushf
fldpi
sbb
mov
dec
inc
int3
cmp
aad
jle
jecxz
nop
stos
inc
xchg
in
sbb
xchg
fucomip
and
push
in
enter
inc
push
push
and
push
mov
arpl
adc
loope
jmp
into
ror
jecxz
pop
mov
push
shl
lock
jo
bnd
add
mov
add
mov
push
out
mov
in
stc
out
fsubrl
ja
cmpb
stos
insb
pop
mov
xchg
xor
call
jbe
mov
cmp
addr16
push
adcb
add
loop
pop
mov
add
cmc
fidivs
rclb
aam
or
xchg
in
repz
in
ret
push
fmulp
pop
jmp
imul
fistps
mov
push
roll
push
push
dec
inc
sbb
pop
daa
jo
adc
aam
in
popf
xchg
push
test
in
sub
xchg
jb
into
jae
xchg
out
push
jecxz
and
xchg
outsb
add
xor
rolb
in
daa
orb
push
call
rorl
lahf
lods
sub
sub
push
dec
mov
je
pop
loop
add
lock
clc
cmp
jg
divl
mov
nop
mov
test
les
test
pushl
lcall
hlt
scas
fwait
jge
mov
stos
dec
call
sub
popf
cmp
movb
outsl
rorb
es
lret
jle
rcl
sub
xchg
pop
add
xlat
mov
sub
dec
movsb
hlt
pop
mov
int3
fs
inc
mov
ds
cmp
sti
jl
ljmp
mov
pop
push
adc
add
xorl
push
xor
push
sbb
dec
fiadds
js
xchg
xor
xchg
sbb
daa
mov
xor
xor
cmp
stc
mov
xchg
xor
push
and
mov
push
cwtl
fwait
push
or
adc
dec
cmp
dec
stos
pusha
and
ror
pop
mov
push
push
and
imul
out
adc
subl
and
scas
loop
jns
lods
sbb
inc
ds
mov
outsl
or
inc
mov
mov
repnz
imull
fbld
pop
dec
push
clc
mov
dec
mov
adc
out
add
jae
lret
int
dec
inc
pop
xchg
and
test
fwait
aam
push
ret
pop
fdivs
or
jns
clc
scas
sbb
sbb
mov
lahf
fwait
das
and
icebp
mov
mov
mov
leave
jns
cmp
sub
scas
xchg
sub
icebp
pop
jg
mov
pop
dec
pop
xchg
pop
pop
pop
mov
mov
jp
fnstsw
jae
lods
mov
lahf
jg
and
jnp
jle
dec
cmc
add
popa
popf
or
mov
leave
and
jl
scas
in
enter
mov
fldl
jge
mov
mov
pushf
ror
xchg
xchg
and
xchg
inc
cmp
test
push
sub
jge
sti
mov
mov
sbb
jle
push
test
fwait
rcll
shlb
dec
iret
push
push
push
rcrl
cmp
cli
inc
inc
push
das
push
mov
dec
fwait
dec
sbb
aad
sub
notl
stos
or
push
cmpsl
push
xchg
fisubrs
mov
repnz
jne
mov
test
push
std
mov
mov
mov
pop
test
or
outsb
xor
inc
dec
lret
mov
add
movsb
inc
mov
or
imul
mov
push
inc
shl
lret
push
int3
cmpsb
insl
fs
sbb
jo
push
adc
lea
jae
nop
push
lret
push
bound
cmp
xor
cmpsb
jg
outsl
ja
add
pop
lret
pop
push
add
in
lds
adc
pcmpgtw
mov
mov
lds
mov
mov
jbe
mov
cmp
aaa
mov
push
mov
js
cli
push
or
mov
test
mov
pop
xchg
sub
mov
loop
sarb
jno
nop
scas
mov
jp
sub
push
push
dec
insb
or
xor
test
xlat
jbe
inc
inc
sbb
mov
cltd
bound
jl
cmpsb
inc
nop
fnstcw
cmp
jbe
fnstcw
mov
dec
and
xchg
fdivs
pop
inc
cmp
xchg
add
inc
lods
or
push
jecxz
mov
xchg
movsb
ja
sub
adc
mov
fcomi
imul
and
jne
dec
add
inc
fcmovb
lds
inc
std
stos
mov
xchg
mov
and
add
fiaddl
data16
pop
add
ljmp
int
xorl
rorb
mov
rolb
xor
or
cmpsl
and
cs
mov
mov
mov
jp
sub
mov
mov
lods
pop
xchg
out
fistpll
ss
das
pop
push
es
cld
out
pop
pushf
xor
adc
int
js
push
icebp
in
mov
mov
enter
insb
mov
test
sub
mov
sahf
lods
pop
imul
lods
shlb
push
or
xor
andb
test
insl
cmp
lret
inc
sbb
push
inc
sarb
aad
sahf
cli
mov
xor
mov
scas
xchg
mov
ljmp
cmp
mov
inc
lahf
imul
test
fsubs
pop
bnd
inc
inc
inc
pop
dec
mov
xchg
mov
jmp
ficompl
xor
test
inc
leave
push
jecxz
adc
mov
sti
vmaxss
pop
xchg
or
out
scas
out
fstpt
aad
clc
lods
decl
int
jo
into
mov
xchg
ffreep
fstpt
or
outsl
pop
push
jbe
fstp
lea
ljmp
mov
div
rcr
addr16
lret
or
imul
lods
push
aas
les
jp
fcomps
fbstp
pop
aam
fs
loopne
insb
loop
mov
jmp
lds
push
sub
xor
or
aaa
or
fwait
xchg
out
lret
cwtl
shrb
nop
fnsave
sbb
insw
je
pop
aas
push
mov
dec
xchg
mov
push
or
repz
pop
addr16
jp
les
adc
inc
pop
jb
mov
repz
sub
nop
leave
loop
adc
or
outsb
iret
in
jecxz
or
mov
stos
xchg
insb
push
pop
push
xor
out
mov
fisttps
pop
pop
arpl
cmp
xor
xchg
test
fadds
stos
cmp
add
mov
xor
imul
in
out
pop
mov
mov
inc
cmpsb
or
arpl
xor
int3
adc
inc
and
jns
mov
fsubrl
adc
sub
pop
mov
and
nop
pop
ja
jo
sbb
mov
or
test
imul
and
imul
lods
test
jmp
mov
aas
subl
or
les
mov
mov
or
inc
or
clc
xor
push
push
sub
xorb
sub
fistpll
add
lods
scas
cmpsb
fiaddl
inc
dec
sub
cmpsb
js
movl
adc
lret
jmp
enter
lahf
fildl
inc
or
lret
dec
jmp
mov
cmp
es
add
into
mov
call
lods
push
sub
push
push
mov
adc
cltd
sbb
scas
or
sub
sub
jle
inc
in
add
jecxz
inc
gs
jb
push
xchg
mov
daa
push
push
add
fs
icebp
dec
fwait
inc
in
test
movsb
jns
mov
mov
aaa
idivl
push
pop
arpl
adc
mov
and
add
inc
jmp
mov
inc
jns
pushf
jae
aad
xor
test
or
jp
lcall
daa
and
iret
adc
test
jge
repnz
cmp
out
sti
stos
push
jge
mov
xchg
add
idivb
fwait
in
shl
int3
int3
shrd
cmp
push
mov
scas
and
dec
test
sbb
div
call
pop
and
pop
fnstenv
shll
jp
imul
jae
xor
lcall
pusha
lea
imul
jnp
test
shr
mov
je
mov
out
push
jp
mov
inc
and
push
movsb
in
arpl
jle
xchg
mov
dec
dec
dec
add
mov
cs
in
mov
xchg
jb
dec
mov
mov
fwait
xchg
pop
cmp
notl
imul
xor
mov
pslld
jbe
cmpsb
xorl
add
sub
sbb
push
mov
insb
insb
daa
sbb
or
inc
mov
push
push
sbbl
pop
test
inc
adc
iret
loop
daa
jae
push
movsb
lcall
mulb
ss
lods
rcrl
imul
ss
mov
mov
sbb
jl
dec
xchg
aas
xchg
jns
scas
fcompl
and
cmpsb
imul
nop
mov
xchg
dec
out
xor
aam
fistl
xor
orb
sub
lods
insb
mov
jl
inc
jge
adc
movb
or
hlt
cmp
imul
sub
cmpb
mov
ja
enter
push
jne
dec
push
or
inc
cwtl
mov
and
xchg
push
fstpl
jne
into
nop
sbbl
or
faddp
jg
xchg
add
or
xlat
ret
imul
insl
or
je
or
pop
repz
in
dec
xor
cmpsl
jmp
std
push
in
cs
inc
test
xchg
sub
and
jnp
aad
add
fadd
push
jnp
rcr
mov
sub
xor
adc
movsb
fsubs
rclb
mov
push
out
test
mov
test
xchg
add
icebp
outsl
test
push
out
and
or
jl
sub
push
push
or
add
pop
pop
add
pop
xor
mov
rorb
dec
lahf
faddl
aam
adc
lods
jnp
imul
daa
cmp
adc
mov
mov
test
lret
insb
fstps
sub
popf
pop
push
testl
popa
sub
lret
mov
and
mov
push
jle
cmp
divl
int
std
fmul
mov
inc
cltd
je
repnz
cmp
stc
cmpsb
inc
add
xlat
js
xchg
mov
dec
pop
test
movsl
jne
sub
addl
sub
jmp
in
fidivs
xor
jns
cmp
ds
imul
push
lods
clc
in
push
pop
cmp
cmp
cmpsl
jecxz
hlt
pop
xor
jno
adc
pushf
sbb
push
sbb
mov
push
pop
and
enter
stc
sub
aam
imul
sbb
jbe
xchg
int
cltd
insb
mov
jbe
lds
repnz
adc
add
xchg
mov
imul
xlat
push
sub
scas
pushl
andb
pushf
or
lds
jne
iret
ds
scas
add
mov
fdivrs
dec
nop
sbb
test
jo
in
shr
leave
lds
push
jo
cmp
test
nop
in
jl
test
repz
cltd
jle
jmp
xor
add
dec
xchg
scas
mov
cmp
inc
das
inc
mov
std
inc
fsubp
mov
xor
pop
into
dec
pop
dec
call
inc
sub
dec
sbb
cltd
inc
sbb
mov
aad
mov
or
xchg
ds
or
insl
test
add
aad
jge
inc
andl
push
xchg
call
xchg
mov
fs
imul
xor
cld
inc
popa
shlb
insl
fcomi
ret
ror
js
add
movsl
or
fisubrs
inc
and
aam
in
sub
mov
stos
movsb
push
in
cltd
jmp
cmc
mov
sbb
pop
repz
test
jp
lds
rcl
fidivrs
mov
cwtl
int3
mov
pop
imul
inc
inc
mov
sbb
inc
mov
ljmp
je
cmpsb
cmc
lods
fisubrl
mov
sub
int3
dec
mov
xchg
imul
out
lds
fildll
mov
neg
mov
cld
sbb
aas
aas
pop
xchg
inc
or
pop
add
jno
inc
out
push
and
iret
fwait
int
repnz
or
sbb
mov
cmp
push
sub
push
daa
rep
sbb
adc
xor
shrb
stos
cwtl
les
fidivl
inc
jle
sbb
dec
mov
in
ja
shlb
test
scas
bswap
test
xchg
scas
lods
scas
cmp
pop
and
mov
add
or
out
adc
jb
mov
push
xchg
fwait
push
xor
fwait
insb
fucomp
inc
adc
lock
in
ret
loopne
fstl
mov
imul
jp
mov
fimuls
jecxz
adc
fs
or
sub
sahf
ret
inc
jb
push
push
inc
sahf
mov
stos
mov
daa
sbb
cwtl
les
xchg
xchg
mulb
xor
inc
mov
iret
mov
push
mov
test
mov
aad
sti
jmp
sti
adcb
out
xchg
add
lods
xchg
push
fcomps
shll
jmp
test
mov
rcrl
jne
mov
push
jge
fidivrs
dec
or
push
fs
adc
aam
imul
mov
mov
xor
cmp
imul
push
lds
xor
mov
xchg
in
inc
repz
lret
lods
and
and
pop
cmp
dec
jecxz
andps
bound
ds
ds
stos
mov
jmp
testl
push
divb
cmp
inc
mov
jnp
dec
repnz
mov
xchg
es
iret
cmp
subl
jle
xor
sti
lret
andb
xor
ret
pop
or
mulb
js
into
in
cltd
adc
sub
xchg
fbld
pusha
dec
mov
cmp
and
mov
cmpb
scas
sub
pop
push
and
push
push
sbb
sbb
add
daa
mov
imul
jne
daa
xchg
lahf
add
adc
xor
icebp
mov
popa
loop
test
int3
cli
and
adc
mov
lcall
ja
mov
fists
fs
fdivrp
in
pop
xchg
fstpl
pop
jns
mov
push
mov
jae
xor
mov
aad
out
int
rorb
sbb
sbb
jns
fmuls
pusha
xlat
shrb
dec
xchg
loopne
js
scas
and
rclb
hlt
aas
cmp
mov
mov
repnz
mov
repz
aad
add
sub
mov
lahf
adc
dec
arpl
fcoms
or
add
dec
pusha
push
je
sbb
pop
and
jns
out
jecxz
jbe
push
ucomiss
xor
or
sub
mov
push
int3
ret
cmp
scas
push
scas
adc
je
dec
inc
ret
jg
bound
mov
mov
into
aas
cmpsl
sbb
mov
ljmp
mov
aam
jecxz
push
push
or
outsb
fldl
in
jecxz
mov
les
inc
mov
lock
lods
mov
cmpsl
mov
lods
test
push
dec
jns
or
pop
popf
push
stc
jl
les
fisubl
cltd
cltd
xchg
mov
fcom
loop
cmp
ljmp
test
xor
ficompl
test
repnz
jb
cmp
or
lret
mov
xchg
enter
arpl
mov
outsl
in
ljmp
aas
jl
xor
test
das
ja
xchg
jle
lods
xchg
pop
out
or
loope
jno
inc
mov
mov
push
push
movsb
inc
cmc
pop
mulb
push
test
hlt
repz
ficoml
add
sub
cmp
iret
popf
sbb
xchg
mov
cmp
mov
mov
jle
decl
mov
xchg
push
shrl
mov
mov
pushf
jb
ds
xchg
cmp
test
push
imul
add
mov
in
inc
xchg
push
add
daa
push
loop
mov
fildl
or
push
pop
addr16
testl
mov
rolb
mov
rcrb
pop
cmc
test
cmp
adc
psrlw
or
xor
das
push
or
xchg
jl
and
incl
jp
jns
jo
xchg
les
leave
jns
cmpl
sbb
mov
andb
dec
xor
mov
xchg
jecxz
cmp
jmp
pop
fnstcw
aas
mov
mov
ss
pop
pop
in
rorb
xor
ljmp
mov
and
sub
add
inc
mov
fidivs
and
xor
mov
mov
cmp
lret
sub
in
pop
notb
mov
out
sti
jbe
shll
dec
sti
xor
add
push
inc
test
xor
and
repnz
mov
insl
jle
mov
jne
adc
dec
cmp
jb
push
dec
xchg
inc
push
sbb
imul
mov
emms
jb
nop
nop
cmc
jle
fnsave
out
inc
pop
in
fsubrs
push
test
lret
sub
xchg
out
cmpsl
outsb
push
outsb
adc
mov
sub
fmul
outsb
xor
sub
aam
add
xor
jb
stos
sbb
xlat
hlt
and
imul
mov
mov
pop
xor
jbe
sbb
jne
mov
ss
sub
adc
jo
jae
inc
cmp
cltd
pop
pusha
mov
sahf
jmp
pushf
pushf
cwtl
movsb
cli
push
xor
dec
ret
addl
scas
jb
subb
ret
add
pop
xor
add
xchg
adc
leave
push
rcll
lock
aam
ds
out
sub
mov
hlt
xchg
repnz
mov
in
pop
mov
das
mov
jne
sub
add
lcall
and
cmp
mov
mov
fiaddl
sbb
xor
rcll
adc
push
push
jge
sub
or
jns
adc
out
xchg
cmpsb
inc
jecxz
push
push
mov
popf
lock
sub
imul
aad
xchg
shr
push
daa
les
scas
ja
mov
je
lods
or
cli
pop
fistps
les
sbb
dec
pushf
shll
sahf
xchg
push
add
cli
xor
pushl
iret
cltd
das
mov
add
roll
dec
mov
cli
cmpsb
loop
cmc
push
dec
push
add
jae
cltd
push
and
in
sbb
jns
cwtl
xor
dec
jae
mov
aam
repz
add
stos
out
cmp
into
sbb
or
inc
fcoml
mov
pop
add
add
lods
push
pop
push
add
enter
out
mov
outsb
filds
inc
jb
adc
enter
cltd
inc
insl
jmp
jno
and
inc
testb
and
sbb
mov
stos
sbbl
mov
and
cmpsl
mov
cmpsb
mov
test
insl
sar
pushf
xchg
jmp
xor
adc
xchg
mov
xor
sub
adc
cltd
push
repz
push
sbbl
fs
adc
cmpsb
xchg
fmul
mov
mov
div
push
imul
xorl
data16
mov
xchg
jae
push
xor
iret
pop
lods
add
pusha
clc
stos
loop
cli
dec
mov
mov
fdivl
sbb
cmc
gs
push
pop
imul
xchg
icebp
sub
sbb
stos
push
jl
movsb
mov
in
outsl
dec
jne,pt
ss
pop
dec
fs
jp
adcb
rcrl
insl
cmc
mov
mov
jp
mov
jmp
sbb
scas
jp
insl
push
jo
movsb
rorl
bound
inc
cmpsl
mov
movsl
mov
shlb
mov
outsb
bound
add
fimuls
arpl
cs
rorl
xchg
pop
sub
lods
jne
ja
dec
ret
lcall
lcall
fsub
cmp
mov
pop
sub
mov
outsl
fwait
je
push
outsb
scas
pop
in
add
and
or
pop
mov
test
bound
push
fstp
inc
jl
fndisi(8087
and
dec
rorw
les
adc
mov
icebp
mov
xor
add
out
in
es
push
cmp
pusha
sahf
stos
sub
sbb
jl
xchg
cli
out
mov
sti
loop
sub
cmpb
shr
dec
mov
sbb
test
rcr
fldt
push
pop
movsb
sbb
neg
sbb
cli
icebp
add
add
xor
xchg
mov
pushf
addb
and
imul
movsb
lea
ss
fistl
sbb
sub
mov
aad
shlb
sub
add
adc
adc
stc
js
mov
fdivrp
jmp
jb
jmp
jge
or
mov
jle
jge
je
stc
fwait
stos
mov
push
mov
sbb
adc
ss
jb
sub
cwtl
lods
jl
orb
daa
xchg
jge
iret
in
pusha
pop
push
xchg
sbb
jne
es
lret
repz
lcall
xchg
sub
and
jge
pop
std
jnp
mov
fisttpll
ret
inc
aad
pop
xor
stos
das
adc
or
lock
adc
jae
xlat
aas
and
inc
clc
loope
bound
and
adc
test
inc
xor
jno
add
sbb
pop
push
loopne
scas
xorb
in
scas
scas
jp
hlt
add
adc
ret
cmp
xlat
cmp
xor
xchg
pop
inc
sahf
loopne
fsub
and
add
iret
pop
and
inc
fcmovnb
push
jne
cld
mov
dec
sub
add
mov
lcall
addr16
cmp
lods
dec
repz
add
lahf
inc
xchg
popf
mov
pop
cmp
sbb
out
lret
adc
mov
mov
adc
sbb
fdivl
push
enter
fnstenv
push
pop
in
adc
out
fs
lock
add
sub
push
push
rclb
arpl
mov
sub
aas
adc
jae
mov
je
rorl
jno
sarl
add
mov
icebp
inc
jg
add
add
pushf
pop
sahf
iret
cmpsl
roll
ret
jns
pusha
in
xor
mov
jge
adc
shll
inc
leave
subl
dec
jb
xchg
push
orps
pop
pop
in
aam
mov
sub
lods
sbb
aam
cltd
cmp
leave
out
jmp
andb
adc
cmpsb
mov
lcall
sub
icebp
adc
and
jo
imul
shrb
xchg
ret
negb
les
xchg
dec
mov
or
mov
jb
lea
outsb
aas
dec
in
shll
cwtl
sbb
add
mov
mov
cld
sbb
pop
fbld
jg
cmp
into
or
cmp
push
cmp
mov
pop
push
xlat
out
add
cmpl
pusha
shrb
xchg
icebp
inc
roll
neg
jb
out
mov
add
mov
jbe
les
cmp
or
bound
sbb
xlat
ja
adc
push
je
xchg
mov
add
cmpsl
xchg
mov
outsb
pop
bound
bound
and
mov
xor
pop
mov
es
fwait
mov
adc
push
adc
dec
and
int3
sub
dec
xchg
sbb
cli
add
outsl
outsl
mov
sub
mov
dec
push
fistl
into
jle
mov
imul
das
hlt
mov
hlt
mov
mov
cwtl
mov
mov
adc
cmp
loop
dec
rorl
repnz
pusha
fnsave
out
cmpsb
and
push
xchg
cmp
push
xlat
xchg
adc
or
inc
js
jge
mov
jnp
mov
adc
sahf
nop
setae
inc
lea
stos
pop
sbb
ja
repz
hlt
fdivl
push
mov
push
daa
adc
xchg
cmp
dec
ds
fisubrl
and
and
jp
pop
inc
sub
cmc
lea
cmpsl
aas
into
mov
les
jmp
fdivrl
jg
pop
fdivl
enter
jo
push
and
xor
mov
cmp
dec
popf
mov
jl
neg
dec
jg
mov
sbb
pop
mov
es
sbb
and
xchg
push
notb
push
test
inc
dec
cmp
minps
das
daa
cwtl
movsl
mov
mov
fs
fldt
cmp
mov
in
data16
lret
and
dec
cmpsl
and
outsb
je
ret
into
jb
lods
adc
pop
sbb
fildl
xor
mov
add
js
pop
arpl
sub
inc
pusha
rcll
xchg
ljmp
imul
int
jb
pop
je
jg
dec
or
inc
xor
or
mov
mov
or
cs
pop
xchg
pop
cwtl
jb
mov
mov
rol
popa
in
push
or
mov
es
xchg
outsb
inc
pop
pop
roll
ja
mov
or
aam
adc
aam
dec
test
in
out
pop
mov
subl
hlt
dec
orl
out
test
aaa
pop
out
jmp
daa
nop
pop
mov
fsub
aad
dec
aam
out
dec
and
out
pop
cmp
inc
popf
enter
not
adc
adc
cltd
push
aad
fsubrs
xchg
sbb
sbb
sub
xchg
cmc
lods
and
lahf
imul
mov
inc
pop
call
mov
mov
push
iret
nop
xor
daa
jle
jmp
or
mov
jnp
mov
lods
inc
int3
xchg
and
sbb
jbe
jne
push
mov
clc
arpl
mov
repnz
xchg
mov
xor
mov
push
xor
jmp
leave
or
mov
mov
imul
outsl
call
sub
mov
mov
ljmp
sbb
test
sub
mov
and
add
jg
loope
pop
lods
fisubl
ja
jnp
in
testb
cli
ja
cmp
psubusw
add
out
adcl
adc
imul
repnz
xchg
out
outsl
shrb
jl
stos
dec
mov
and
sbb
cmpsb
mov
pop
lea
mov
adc
add
inc
sub
shrl
jl
fs
cmpsl
xor
push
add
adc
cmpsb
mov
fnsave
divl
sbb
push
addb
xor
test
mov
std
int3
xlat
lret
ficompl
xor
xor
jno
cltd
adc
mov
shll
mov
outsl
movsl
push
pop
add
adc
inc
dec
inc
mov
fmul
pop
push
xchg
adc
xchg
clc
jnp
ficomps
xchg
into
or
add
pushf
push
test
icebp
loopne
fnstenv
dec
call
xor
ds
cwtl
add
mov
mov
rorb
xchg
mov
or
insl
adc
add
cmpsl
jae
push
mov
int3
ror
sbb
in
test
xchg
pop
cs
orb
mov
cmc
addl
mov
cmp
lods
je
xor
and
sub
gs
rol
lock
adc
icebp
addb
fiaddl
es
clc
pop
idiv
bound
insl
fucom
cmp
scas
int
mov
xchg
cmp
sub
dec
int3
into
mov
aad
int
std
sbb
push
mov
mov
shll
jbe
pop
lcall
dec
add
stc
pop
push
mov
sbb
ds
test
out
push
pop
mov
pop
orb
push
sbb
addb
mov
dec
pop
inc
daa
clc
cli
test
std
mov
push
in
fdivrs
jmp
sti
and
mov
sbb
mov
repz
dec
test
add
push
iret
xchg
scas
xor
fwait
je
adc
xchg
adc
add
xchg
cli
es
add
add
mov
add
mov
jge
lea
cmp
stos
mov
imul
sahf
lods
gs
jo
xchg
cmp
setnp
outsl
call
and
hlt
and
daa
xchg
scas
mov
test
fwait
add
xlat
sbb
ror
pop
test
fs
inc
int
xchg
sbb
add
xchg
dec
ja
sbb
or
sbb
cmp
in
aam
fs
and
sub
rcl
nop
mov
mov
or
in
inc
sub
xchg
inc
sbb
cmp
pop
xchg
cmpsl
or
fsin
mov
jp
cmp
std
iret
outsb
in
fdivrl
mov
sbb
add
addr16
sahf
mov
xor
sbb
sbb
xor
clc
cmp
addr16
aam
xor
push
mov
clc
cmp
out
or
fistl
loop
ret
mov
adcl
les
pop
mov
ja
fs
pop
add
lods
push
lcall
cmp
cmp
aaa
imul
jg
adc
ret
mov
in
test
fadds
and
bound
and
popa
pop
xchg
es
imul
add
mov
clc
xor
movsb
mov
mov
movsb
shll
sbb
neg
mov
mov
cltd
cli
mov
lahf
setb
dec
push
push
mov
mov
adc
push
xchg
test
xor
add
push
sbb
lods
or
imul
lea
inc
mov
sub
and
shll
cmpl
data16
in
xor
cmc
adc
push
imul
int
mov
mov
divl
jmp
mov
sti
les
sbb
jge
push
jge
mov
ja
inc
mov
and
rorb
out
cmpsb
inc
lods
icebp
int3
add
push
adc
dec
mov
shrb
mov
xchg
xchg
scas
out
out
out
hlt
jno
adc
cli
imul
cltd
call
cli
data16
pop
pushf
xlat
push
mov
push
cs
cmpsb
cmpsl
dec
mov
daa
add
btl
add
aas
incb
add
cmp
cmp
push
icebp
push
pop
pop
lahf
hlt
pusha
test
mov
scas
mov
mov
rcll
aam
ljmp
out
fwait
test
pop
inc
cvtps2pi
nop
faddp
imul
mov
lods
jecxz
out
and
cli
aas
jecxz
jg
int3
mov
jmp
icebp
dec
inc
rcrl
xor
inc
push
daa
mull
fisubrl
cwtl
pop
clc
dec
jmp
pop
cmp
dec
cli
jns
cmp
sbb
sub
adc
sbb
flds
pop
push
and
or
sbb
dec
pop
lock
mov
lds
mov
ret
xor
pop
data16
cmp
push
fchs
sub
lret
mov
insl
lret
mov
inc
pop
sti
in
shlb
and
inc
xchg
fiadds
dec
pop
ret
mov
jb
mov
mov
sub
mov
lea
push
xchg
call
pushf
out
hlt
iret
push
mov
cwtl
jo
push
movsl
mov
mov
adc
sbb
cld
insl
or
jg
jae
popa
lea
jge
pop
rol
inc
adc
insb
fsts
xchg
push
mov
je
arpl
outsl
iret
mov
inc
push
mov
pop
addr16
cmp
push
es
xchg
movsl
mov
sub
jmp
jmp
pop
out
test
jecxz
mov
dec
movsl
mov
clc
dec
lds
push
ljmpw
jecxz
adc
push
and
cwtl
fmuls
jb
add
fwait
ljmp
and
notb
or
xor
xor
adc
xor
add
lret
jb
pop
sub
stos
and
es
mov
jne
fisttpl
call
jg
cwtl
pop
mov
pop
xor
adc
adc
add
xchg
jne
daa
xchg
cli
cli
jb
fbstp
cli
stc
add
in
mov
test
dec
and
lcall
push
lea
rcrb
movsb
add
test
sbb
ss
cmp
outsl
icebp
loop
mov
add
orl
movd
stc
push
scas
cwtl
cltd
test
xchg
inc
add
addl
pop
lcall
jnp
inc
in
aam
imul
pop
aad
ds
std
stc
int3
icebp
inc
lods
xchg
lock
adc
sbb
fisubrl
enter
js
nop
lahf
mov
aam
out
cmp
sub
jb
push
inc
mov
test
ja
xchg
and
in
daa
fidivrl
mov
push
je
add
and
aas
jb
dec
push
push
dec
data16
in
dec
pushf
insl
pusha
mov
cld
jne
add
fnstsw
dec
jns
xchg
sar
pop
cmpb
sahf
pop
lahf
fucomp
scas
adc
ljmp
popa
imulb
sbb
pop
dec
sbb
arpl
add
mov
into
in
in
neg
mov
mov
jecxz
sbb
xchg
mov
movsl
pushf
int
rcll
das
push
pop
inc
push
daa
sbb
jbe
dec
ss
push
jbe
cmp
in
pop
out
outsl
inc
and
sub
xor
jno
movsl
outsl
xor
insb
push
xor
clc
out
xor
addb
icebp
jno
mov
imul
fcoms
push
clc
sti
sti
cmp
cs
and
jmp
mov
fisttpll
adc
sub
and
sbb
ret
aad
mov
mov
cmp
lea
dec
std
popf
fwait
xchg
and
loopne
or
or
js
jb
test
sub
or
push
clc
add
iret
gs
lahf
nop
cmp
push
dec
sbb
pop
jns
scas
cmp
add
enter
push
aaa
push
int
jp
movl
xchg
cmc
inc
std
lcall
rcll
cld
shlb
pop
sbb
cwtl
dec
and
push
pop
movsb
sub
dec
fucomi
push
icebp
jno
out
test
inc
cltd
fcompl
lahf
pop
push
mov
ret
sbb
dec
imul
sub
mov
inc
add
arpl
negb
stos
and
std
inc
fisttpll
mov
outsl
outsb
sti
mov
data16
mov
or
xchg
bound
data16
pop
lods
cwtl
jnp
lods
sbb
lds
dec
sub
jg
xlat
out
xchg
jp
cmp
inc
and
push
inc
pop
lcall
dec
dec
jecxz
and
nop
gs
stc
arpl
sbb
cmpsb
and
mov
pop
sbb
loope
cmp
in
fcoml
or
xor
push
sub
or
repnz
jge
add
inc
mov
pop
pop
loope
stos
inc
hlt
loop
jbe
or
lods
xor
and
mov
fadds
sbb
cmpsl
push
mov
sub
rolb
popf
test
rcrl
shl
cmc
rclb
jo
out
sub
xor
push
cmp
leave
push
lahf
mov
sub
xchg
cld
les
cmpsb
xor
mov
fsubrs
loopne
mov
clc
xor
xorb
loopne
sbb
cli
int
out
and
push
les
out
jge
fcoml
mov
cmp
in
push
pop
dec
icebp
mov
mov
and
mov
pushf
pop
cmp
dec
jbe
scas
pop
push
mov
adc
aas
out
lahf
dec
xchg
stos
testl
mulb
call
sub
popa
inc
hlt
mov
sub
mov
pop
push
push
xor
dec
adc
fwait
pop
or
jmp
stos
addb
cmp
or
mov
fistl
pusha
fimull
repz
out
cmpb
sub
inc
lock
popf
jp
jmp
xor
scas
sarl
sub
mov
leave
cli
lret
in
repz
adc
fnstsw
push
in
mov
adc
clc
cmp
clc
fdivr
or
inc
stc
imul
clc
cli
shll
sti
push
mov
loope
jo
sahf
mov
xchg
pushf
movsl
lahf
je
insb
cmp
sbb
or
push
xor
xchg
xchg
rcrb
lcall
jmp
jno
inc
popf
sarl
bound
ret
pop
sub
xchg
push
jnp
lret
jp
cli
roll
lret
dec
in
in
in
loope
jecxz
adc
imul
pop
sarl
cli
and
mov
psubusb
loop
mov
dec
mov
sbb
shrb
jae
xchg
sub
notl
das
test
cld
adc
test
insl
pop
mov
movsl
sbbl
and
test
jb
pop
xor
add
dec
or
js
jge
push
xchg
fisubrl
push
out
dec
pop
out
sbb
mov
jae
jnp
mov
rcr
arpl
sub
pop
xchg
push
adc
jnp
loopne
bound
fs
dec
adcl
jmp
test
jp
daa
ret
pop
and
sbb
dec
add
mov
mov
xchg
push
lret
inc
xchg
pusha
adc
fstl
sbb
dec
xlat
or
gs
clc
mov
and
xor
inc
sub
push
adc
js
popa
mov
pop
clc
nop
mov
push
lahf
outsl
lock
sub
rcll
pop
loopne
mov
mov
and
push
mov
movsl
dec
xchg
adc
fildll
xor
push
fucom
mov
push
sbb
pushf
rcrl
adc
pop
and
or
sub
mov
pop
jnp
jno
leave
inc
int
into
leave
mov
stos
mov
psubusw
lock
std
dec
push
mov
rcrb
hlt
xor
jle
inc
outsl
pop
jo
xchg
in
xor
adc
aaa
sbb
test
jecxz
fcomp
dec
mov
push
mov
ljmp
adc
and
in
jg
pop
mov
les
or
sbb
call
xor
das
mov
addl
out
iret
mov
test
push
cwtl
dec
adc
and
arpl
fldcw
mov
push
or
je
xchg
jae
ljmp
jo
mov
push
fistl
mov
es
jno
scas
adc
scas
ja
inc
bound
mov
inc
lret
xor
pusha
sub
lds
test
idivl
decb
inc
xchg
jge
jp
outsl
xor
xor
cmpsl
mov
dec
fxtract
xor
popf
jns
out
and
xchg
or
push
testb
inc
lods
push
data16
mov
sbb
mov
les
addr16
les
push
in
cmpsl
je
jle
inc
mov
xchg
add
pop
inc
add
cmp
mov
stc
and
jecxz
add
adc
scas
fistpl
movsb
cltd
fisubs
mov
mov
stc
pop
sbb
and
mov
jmp
sbb
popa
push
sub
push
xchg
xchg
jb
iret
or
mov
mov
rcrb
add
adc
push
mov
jns
mov
jns
mov
sbb
dec
xchg
and
mov
repnz
out
mov
lret
shr
inc
sarl
insb
inc
cmpsl
sbb
aad
movsb
fisttpll
scas
rcrb
dec
aad
ds
inc
cmp
xor
cli
dec
xchg
push
repz
push
mov
adc
jl
pmullw
ret
xor
push
es
push
pop
jge
lods
jo
or
ficompl
jle
inc
icebp
or
cmp
std
andl
js
call
sbb
and
pop
in
leave
icebp
jge
and
fidivrs
shlb
cmp
mov
mov
and
shrl
test
sbb
or
pop
and
fwait
scas
mov
loope
push
leave
inc
pop
mov
clc
mov
mov
adc
fld
scas
mov
push
xor
mov
pop
push
pop
pop
jp
in
fadd
pop
xor
aaa
in
sbb
xor
push
dec
inc
push
lret
lds
jle
dec
roll
inc
pop
xchg
xor
in
mov
std
inc
sti
movsl
pushf
xchg
rolb
add
movsb
inc
mov
lret
mov
popf
dec
loopne
mov
idivb
sar
xor
in
jmp
scas
das
pop
xchg
xor
add
sbb
jae
mov
ret
mov
mov
dec
xchg
ja
push
or
inc
fcomi
mov
outsb
js
pusha
adc
mov
rcrb
out
orl
mov
push
push
cld
aaa
mov
push
sub
pop
mov
arpl
inc
test
je
arpl
dec
in
lret
aam
out
or
xor
push
pop
cmpsb
cmp
jge
notl
pop
xchg
ss
dec
jg
mov
cmp
sub
in
mov
inc
lds
cmp
int3
and
ret
in
pop
hlt
imul
insb
sbb
lods
lret
xor
adc
out
dec
fsubl
rorl
mov
fcomp
jo
int
mov
test
dec
pop
adc
dec
jp
gs
sbb
enter
cltd
jae
add
jnp
fildl
cmp
ret
cwtl
mov
jne
mov
pop
fstl
lret
test
lret
inc
ja
jno
fnsave
add
pop
push
dec
xchg
stos
jle
mov
test
xchg
aad
push
std
push
xlat
xor
pop
mov
push
fistpll
or
les
ret
js
sbb
mov
rorl
cvtps2pd
dec
ljmp
sbb
cmp
xchg
andl
cmp
xchg
lahf
or
mov
mov
icebp
adc
xchg
pop
shr
insl
inc
insl
lods
xor
aas
movsl
add
aam
outsl
roll
xchg
cmc
lds
inc
and
cmp
mov
push
sar
jp
rolb
std
push
mov
fbstp
add
shl
addl
mov
xor
adc
mov
sahf
mov
push
lcall
mov
push
push
or
adc
into
ljmp
ret
sub
sub
in
xor
mov
xchg
inc
in
sub
mov
inc
out
pop
push
xchg
cmpsl
outsb
jl
ljmp
lret
insb
js
pop
in
pop
aas
or
lods
jno
or
xchg
xchg
lods
jnp
cmp
jge
dec
xchg
cli
stos
jno
push
fs
push
outsb
mov
fs
cwtl
scas
loop
and
push
mov
shlb
adc
repnz
xlat
push
loopne
jae
xor
mov
imul
filds
or
dec
xchg
daa
out
or
xchg
daa
in
loop
jl
mov
dec
cld
ja
sbb
ljmp
cmp
in
pop
xchg
aaa
aaa
aad
das
xorl
das
jmp
mov
mov
add
aad
mov
orl
jecxz
fwait
scas
hlt
push
jge
pop
mov
cwtl
xchg
mov
aam
mov
fnstcw
stos
sbb
jb
movsb
and
mov
into
insb
xchg
cmp
fmull
dec
std
pop
jnp
lahf
sub
movsb
cltd
push
sahf
mov
test
cmp
lea
add
mov
in
sub
inc
pushl
xchg
mov
aaa
mov
lods
jns
jb
loope
cli
mov
ss
scas
lret
aam
add
cmp
outsl
aaa
aaa
jmp
and
cs
sub
pop
daa
jmp
insb
xchg
sub
pop
adc
testl
pop
sbb
pushf
shlb
arpl
pop
sti
fiaddl
jl
in
pop
lcall
push
jp
inc
or
push
call
push
xchg
aas
push
mov
xchg
xor
jp
or
insl
jns
popa
push
cmp
mov
jmp
adc
adc
stos
add
jl
divl
pop
inc
sahf
jo
cmp
mov
jge
xchg
jae
mov
loope
and
mov
cmp
lods
and
lds
daa
mov
mov
scas
adc
iret
adc
cmp
sbb
cmc
push
mov
push
cmpsl
loopne
aas
dec
cmp
dec
push
in
inc
movb
lock
push
sbb
imul
pop
mov
add
fistl
scas
mov
lock
ja
or
lock
cmpsl
sbb
jne
test
or
imul
pop
inc
jge
dec
ret
aad
out
out
adc
xchg
repnz
lea
lcall
insl
mov
lods
fsubs
xchg
test
jns,pt
adc
push
cmc
mov
outsb
stos
lahf
lret
call
xchg
cmp
loop
mov
push
jno
sub
out
imul
pushf
add
ret
push
add
std
sti
testb
or
ja
loope
rcll
stc
mov
fldcw
in
bound
push
push
outsb
xor
inc
fisubrl
movsl
fidivrs
mov
fcomps
sub
jg
sarb
test
inc
mov
push
repz
mov
jbe
jmp
push
inc
mov
inc
and
inc
xor
or
test
lods
mov
push
and
in
sbb
gs
push
mov
or
jl
out
dec
push
jp
mov
pop
call
jecxz
jo
aas
xchg
xchg
and
or
push
ja
fldcw
stos
pop
into
mov
addr16
mov
jge
dec
test
mov
cmpsb
mov
sarb
fs
pop
sub
sti
jge
pop
or
pop
scas
repz
lea
add
shl
out
adc
inc
idivb
add
adc
mov
es
popf
imul
pop
push
lahf
rol
inc
into
or
sub
dec
jecxz
addr16
pop
loopne
jl
pop
dec
xchg
jbe
sub
scas
shl
sub
add
sub
mov
jle
push
xchg
nop
es
test
adc
push
push
cmp
pop
xor
xchg
mov
sub
in
jp
pop
movsb
jnp
sbb
fldcw
sbb
popf
cld
stc
push
mov
cli
fmull
jmp
hlt
lret
xchg
arpl
andl
mov
das
or
sub
adc
adc
or
and
cmp
lahf
leave
adc
stos
lock
mov
je
mov
lods
mov
jl
adc
xlat
roll
je
add
jno
or
into
mov
sbbb
clc
xchg
fbstp
rcrl
fimull
out
in
xor
push
dec
lods
popf
mov
and
pusha
xor
mov
pop
dec
cmp
push
ds
or
in
in
dec
inc
out
pushf
in
xchg
dec
std
sbb
adc
jg
ret
shl
push
and
add
fistl
cli
jns
faddl
mov
ja
jl
std
daa
pop
push
repz
inc
jmp
mov
in
ljmp
ss
sub
fs
sub
adc
out
cltd
or
rcll
int
lods
add
inc
mov
xorb
mov
sub
loopne
gs
sbb
mov
and
mov
and
lcall
or
lahf
lods
add
lcall
push
or
sbb
out
xchg
clc
mov
bound
push
dec
and
jno
xchg
jnp
mov
xor
pushf
add
xor
in
pushf
jnp
push
repz
inc
addr16
xlat
or
paddsb
pusha
jns
enter
pop
into
insb
lahf
shrl
jne
adc
mov
shrl
xor
repz
mov
inc
clc
xor
stc
xlat
test
cmp
pop
xchg
mov
jp
or
das
mov
jbe
push
lods
add
cli
or
xchg
sbb
xchg
mov
or
add
insb
das
and
mov
or
cmpb
fstps
pop
pop
mov
push
cmp
jae
mulb
cwtl
or
fnsave
stc
xchg
mov
inc
inc
dec
sbb
das
push
cmp
fcmove
aad
hlt
fwait
pop
rcrb
jns
dec
and
in
xchg
lahf
ss
mov
mov
enter
push
or
cmp
jle
inc
xchg
lods
jmp
data16
push
jg
xlat
add
lahf
rorb
jo
push
fcoml
aad
xor
jg
jno
sub
insl
add
dec
xor
pop
push
fisubrl
cmc
out
xchg
push
or
lds
sarb
dec
or
lods
xlat
dec
sbb
lds
aad
inc
jo
test
call
repnz
cmp
mul
cwtl
adc
fisttpl
and
enter
xchg
test
lods
lahf
or
jecxz
inc
fbstp
mov
add
xchg
iret
cli
adc
in
mov
lods
bound
inc
sbb
out
mov
lods
popa
dec
dec
and
sbb
maxps
xor
push
jbe
shl
test
adcl
pop
xor
mov
mov
lock
dec
jno
lahf
xchg
loop
cltd
lea
lcall
scas
cltd
cwtl
lods
into
cmpsb
out
clc
xlat
std
sbb
or
sub
movsl
fdivs
fisubl
les
sub
add
cs
imul
dec
fs
and
or
pop
loop
cwtl
sbb
mov
iret
lahf
inc
pushf
ror
fwait
insl
push
mov
fmull
ret
xchg
clc
mov
loope
roll
aad
test
cmc
push
lahf
jbe
fsubr
sbb
xchg
mov
ret
pop
lea
dec
and
pop
pushf
arpl
jecxz
clc
and
out
popa
cmpsl
adc
jecxz
in
pop
shll
mov
stc
adc
sub
or
sub
mov
lahf
adc
es
rcrb
pop
fldl
sbb
dec
add
jno
xchg
or
xchg
push
fnsetpm(287
sbbl
xchg
and
imul
mov
icebp
fstps
scas
inc
int3
mov
aas
push
pop
push
mov
cmp
out
les
mov
xlat
nop
adc
iret
insl
rolb
loopne
in
jle
sti
movsl
imul
xorl
cmp
aaa
ja
jne
shl
bound
lea
es
mov
ret
xor
mov
jb
mov
mov
mov
inc
push
push
shll
rclb
fisttpll
add
push
pop
xchg
add
decb
into
pop
xlat
dec
dec
cmpsl
rcl
lds
push
daa
sbb
or
or
or
insl
arpl
stos
cmpsb
cmp
in
pop
adc
dec
sub
inc
lods
enter
xchg
lcall
cwtl
or
mov
fbstp
cmp
pop
inc
mov
add
dec
xchg
out
and
xor
xor
mov
aaa
sbb
inc
arpl
lods
test
in
arpl
add
pop
scas
test
sarl
jmp
push
loop
mov
jge
jmp
jp
test
sbb
cltd
test
pop
clc
inc
inc
daa
call
mov
int
rcll
aam
push
sub
mov
pop
cmpsb
jg
in
cmpsb
adc
loope
ret
push
pop
mov
fists
repz
dec
or
cltd
adc
insb
xor
xchg
repz
xor
push
jp
enter
jbe
lds
je
fcmove
mov
outsb
xor
push
inc
sarb
pop
sahf
ja
mov
xchg
enter
aaa
out
movsb
mov
les
sbb
inc
out
pushf
movsl
or
cmpsl
xchg
or
cmp
fwait
mov
mov
xchg
js
inc
mov
lret
rep
rorl
clc
popa
xor
in
or
sub
sub
leave
xchg
adc
imul
pop
loopne
adc
icebp
or
mov
xor
into
push
fcomp
mov
jp
pop
and
pushf
and
nop
mov
xchg
div
aam
add
inc
jg
dec
not
sub
movsb
inc
iret
pop
cmpsl
aam
mov
fs
jns
push
xchg
sub
pusha
jo
inc
insl
lds
shlb
xchg
mov
clc
repnz
test
dec
mov
shrb
shl
lods
xlat
shrb
jle
push
fwait
std
and
in
js
rolb
mov
insb
cld
mov
sbb
dec
dec
pop
fimuls
enter
ja
cmp
into
and
mov
jmp
je
mov
cmp
mov
in
stc
je
stc
ret
popa
insb
in
cmpsl
sbb
lret
inc
mov
cmp
lock
fcoml
ljmp
jns
sbb
daa
mov
dec
ss
cwtl
lcall
add
mov
daa
sti
jno
xor
out
inc
xchg
jae
mull
call
test
adc
push
arpl
pop
mov
cld
out
scas
je
inc
out
ret
pop
addb
mov
push
andl
or
aaa
lock
mov
shrl
jecxz
or
pop
cltd
test
icebp
jns
pop
adc
sti
insb
mov
mov
int3
les
xlat
xor
xchg
imul
les
je
cmc
sbb
cli
icebp
movsb
and
ja
cli
stc
jae
icebp
sar
mov
shrb
icebp
jg
jno
lret
adc
cmp
mov
push
cmp
pop
mov
movsb
pushf
mov
push
inc
jae
lock
push
jg
sarb
jnp
inc
adc
mov
dec
imul
mov
jno
std
loopne
mov
sub
test
xchg
fstl
and
mov
int3
leave
mov
aam
fists
fisttpll
inc
sahf
lahf
xchg
shll
cmc
daa
push
sub
mov
imul
sarb
loop
pusha
adc
cmp
push
pop
icebp
cmpsl
cltd
push
mov
hlt
das
sub
test
cmc
jne
mov
cmp
xor
sub
push
fs
je
rcrl
xor
adcl
ret
in
mov
cmp
int3
mov
dec
or
cmp
or
lods
sahf
jge
in
fisubrs
cld
mov
pushf
insb
inc
lret
ja
mov
aas
jge
test
or
aas
dec
add
insl
dec
cmp
mov
int3
adc
std
xor
ss
loope
adc
adc
ds
push
xchg
mov
mov
test
jbe
sbb
icebp
fcoms
mov
fwait
pop
and
testl
cmp
cmpsl
mov
cmp
push
daa
hlt
push
outsb
sbb
inc
mov
cmp
add
sub
lea
push
pop
scas
hlt
pop
inc
pop
test
mov
fistps
pusha
jge
es
insb
cmp
cli
jl
jbe
pusha
scas
xchg
iret
and
insl
cmp
sbb
fdivrp
sbb
movl
stc
fstpl
sbb
xor
mov
cltd
sub
enter
mov
sbb
mov
push
cmp
lret
xchg
add
dec
in
into
mov
lods
loop
inc
push
push
jb
iret
imul
testl
jb
fstpl
xor
sbb
cmp
sbb
pop
and
adc
je
stos
inc
add
mov
cmp
loope
cmc
jg
pop
stc
or
sub
dec
sub
or
xchg
jl
mov
iret
popf
pop
mov
bsf
inc
mov
repz
cli
dec
roll
popf
push
je
enter
mov
outsl
loop
rol
int
arpl
xchg
add
in
or
mov
push
dec
cmp
pusha
leave
xor
pop
mov
mov
mov
pop
inc
mov
sbb
sarl
adc
or
sub
jge
inc
mov
stc
out
aad
cmp
stc
dec
inc
pop
pop
cmp
into
inc
jle
xor
in
loopne
mov
jns
out
mov
mov
cltd
xchg
dec
repz
add
lds
or
fistl
fdivl
leave
mov
stos
pop
jne
cs
jecxz
mov
ja
push
push
xor
inc
add
insb
aaa
ss
pop
push
addr16
sbb
ret
cmp
ds
mov
test
inc
xchg
cwtl
adc
xor
dec
push
lcall
imul
or
add
inc
lods
incl
sahf
nop
fisubl
push
aaa
lret
lods
lret
movsl
push
pop
mov
cmpsb
push
stos
insl
mov
xor
test
inc
ret
jb
pop
push
les
shlb
out
lret
sahf
stc
sbb
adc
insl
inc
pop
out
lea
sub
pop
rorl
sbb
dec
addr16
pop
pop
mov
adc
jmp
cltd
es
out
pop
xor
mov
cmpb
xchg
push
inc
pop
in
adcb
stc
or
and
jo
push
and
xor
out
js
jge
popf
add
mov
les
sbb
scas
into
and
mov
or
cmc
pop
shlb
inc
dec
out
dec
adc
push
pop
jbe
dec
iret
clc
adc
mov
iret
pop
jmp
and
xchg
sub
stos
jg
mov
cld
xor
mov
adc
and
fwait
xchg
es
cmp
cld
or
pop
cmp
std
jne
loope
aaa
push
push
fsts
cwtl
pop
add
inc
jae
mov
sbb
daa
push
movsl
ret
and
dec
dec
jg
mov
pop
push
lods
push
mov
pop
lahf
loope
ja
add
in
inc
lret
dec
push
jle
outsb
adc
mov
psadbw
lods
int3
and
cli
dec
mov
lahf
repnz
xor
xor
arpl
movb
mov
xlat
push
je
jl
lea
adc
push
fdivp
adc
mov
cs
lahf
pop
and
pop
jecxz
faddl
lea
mov
fisubs
sub
mov
aad
sbb
arpl
sub
push
mov
aaa
jo
in
out
jnp
adc
int3
mov
pop
add
shrb
inc
jg
xor
fs
pop
test
xlat
mov
daa
movsl
add
cmp
pop
rcl
subb
incl
popf
xlat
pop
and
pop
sub
lock
dec
pop
jmp
imulb
sbb
mov
xor
hlt
dec
ret
sbb
repnz
mov
vpaddw
mov
jno
popa
test
js
or
or
jg
sub
jo
addr16
in
lea
jo
cmp
sbb
and
stos
data16
andl
cmp
lea
mov
imul
cmp
adc
sbbb
xchg
mov
syscall
jmp
jp
xor
in
sub
cmc
rclb
sbb
jmp
divb
push
dec
stos
cmp
or
fstps
addr16
and
inc
pop
movsb
inc
sbb
ret
call
dec
aad
xlat
fldl
add
repz
stos
sub
sahf
sbb
xor
fmuls
dec
rcll
sub
push
mov
push
pop
mov
loopne
gs
cltd
shlb
lods
bound
ss
stos
push
push
jb
mov
mov
cmp
test
jne
testl
xchg
xchg
call
mov
cli
scas
jecxz
jmp
jg
pusha
push
aas
arpl
addr16
mov
test
lcall
lahf
cmp
out
hlt
fidivl
jmp
in
div
push
fcmovu
mov
pop
dec
cli
pop
sbb
sbb
pop
imul
xchg
mov
in
int3
xchg
and
jb
sub
stos
jne,pt
push
arpl
sub
add
and
cld
out
push
xchg
push
mov
cmp
scas
daa
jno
les
dec
dec
push
pop
jmp
pop
and
push
lea
add
imul
stc
sbb
push
fimuls
lods
pop
mov
push
shrb
mov
leave
pop
sub
outsb
cli
sub
mov
mov
cwtl
std
inc
je
adc
dec
fisubrl
pop
std
xchg
ss
or
adc
sbb
out
je
imulb
add
xchg
popa
test
xchg
shll
mov
sbb
mov
cmpsb
into
jnp
outsl
push
and
mov
aaa
push
out
not
loope
inc
dec
push
lds
shrl
add
or
fimull
dec
cltd
xchg
loop
hlt
dec
mov
lret
fucomi
xor
lods
xchg
out
cmpsl
mov
imul
cmc
in
sub
mov
cld
inc
iret
or
repnz
cmp
out
jg
or
mov
cmp
imul
mov
sub
pop
jns
test
ss
sar
lds
mov
xor
and
pop
push
and
dec
ja
adc
in
or
dec
mov
cmp
inc
add
pusha
js
arpl
bound
dec
fldl
ret
xor
cmpb
popf
and
sbb
lea
sbb
cmpsl
jae
ret
add
sbb
mov
mov
sti
mov
inc
test
movsl
jno
lret
int
adcl
inc
bound
fbstp
jns
mov
fidivs
or
adc
and
fisttps
out
mov
adc
adc
cmp
mov
jle
icebp
cmp
sti
xchg
mov
faddp
xor
fcompl
lcall
push
sub
loop
adc
cmc
inc
inc
xor
sbb
cltd
inc
cmp
mov
stos
inc
push
icebp
out
js
jb
inc
daa
jecxz
sub
std
mov
clc
add
pcmpgtw
adc
mov
cmp
mov
fisubrl
push
outsl
lret
push
loopne
jmp
and
jns
push
dec
in
cmp
push
jne
sbb
push
xchg
pushf
jae
rcll
pop
mov
aas
adc
ficoml
aad
or
je
fistl
mov
mov
mov
dec
in
mov
movsb
or
adc
test
xorl
cmp
adc
les
or
add
scas
nop
inc
ret
xchg
mov
ds
dec
sahf
xor
ljmp
loope
aad
sbb
xor
sar
add
ss
mov
je
xchg
stc
lcall
or
and
jae
movq
push
fdivrl
sub
sarl
ret
inc
jp
sbb
adc
cli
push
popf
mov
fidivrs
imul
cwtl
or
push
pop
adc
adc
idivb
andb
ftst
sbb
sub
add
es
adc
aam
orl
out
cmp
into
out
lahf
add
ja
inc
clc
mov
mov
adc
loope
aas
xor
mov
stc
and
arpl
fwait
iret
in
jo
xchg
lods
add
cmpsb
mov
xchg
inc
mov
sub
cltd
xchg
add
popa
aad
xchg
cmp
int3
fsts
adc
ss
jne
pop
and
xor
mov
push
cwtl
xchg
das
cmp
jp
lret
mov
mov
les
adc
cmp
jo
hlt
xchg
jecxz
cmp
nop
orl
and
cmpsb
aas
mov
add
lods
mov
ret
aam
or
jne
xchg
push
inc
sub
push
mov
xlat
or
cmp
xchg
and
sbb
movsb
or
sbb
rcrb
cmc
jae
leave
push
mov
add
nop
cmpb
xor
fdivrs
xchg
das
and
in
mov
mov
push
cmpsb
xor
mov
stos
xchg
imul
cmp
ss
shrw
ret
cmc
int
dec
add
mov
xchg
jmp
dec
mov
mov
push
movsb
loope
sbb
sbb
adc
dec
jg
insb
xchg
jl
sub
and
sub
dec
ret
imul
fnstcw
push
push
imul
xor
seta
in
mov
sbb
pop
into
sbb
aas
mov
sub
int3
fs
mov
mov
adc
nop
les
mov
xchg
aam
push
jne
mov
cmp
in
pop
sbb
xchg
cmp
mov
add
push
adc
pop
sub
mov
jo
sub
adc
or
test
loope
dec
lods
lahf
xchg
jle
decl
popf
repnz
pop
push
mov
popf
inc
ja
sub
out
outsl
call
adc
dec
nop
scas
cmp
jno
jo
xlat
jle
mov
or
push
sub
or
mov
test
std
sbb
dec
push
mov
adcb
out
into
mov
out
popa
push
pop
cld
das
jo
mov
arpl
and
adc
insl
mov
pushf
push
push
sbb
or
mov
aaa
jne
rcr
pop
and
and
scas
les
and
push
fcom
xorb
adc
out
xchg
scas
gs
out
adc
arpl
jg
fcoml
sarl
inc
dec
inc
das
stos
xor
out
addb
cld
xor
lock
dec
push
xor
sbb
rorl
inc
xchg
xchg
ljmp
outsl
js
xchg
shl
push
adc
sub
call
test
adc
jb
inc
cmpsl
fidivrs
mov
lret
mov
lret
icebp
mov
push
adc
stc
andb
ljmp
cwtl
xor
imul
es
fwait
adc
inc
xor
movsb
push
mov
sub
mov
dec
arpl
adc
push
pop
pop
in
cmp
in
testl
xchg
sub
iret
in
and
mov
pop
adc
or
mov
sub
xchg
je
add
mov
sbb
add
frstor
movsb
jns
cwtl
mov
stc
cmp
fsubrs
fsts
cmp
xor
inc
dec
xor
cmp
dec
ja
push
sbb
int
lea
sub
push
or
sbb
stos
faddp
mov
aam
adc
movsb
lds
cltd
and
negl
jle
xlat
push
add
stos
mov
in
fdivrs
shr
mov
or
orl
stc
mov
lret
mov
cmp
jo
adc
addb
cmp
roll
lods
mov
inc
leave
or
gs
and
xchg
mov
mov
test
sbb
mov
cmc
dec
mov
dec
aad
shll
aam
adc
xor
out
insl
mov
jns
pop
mov
stc
jns
inc
mov
aaa
xchg
adcl
sbb
inc
mov
popf
ficoms
add
push
sbb
xor
call
inc
mov
in
gs
cli
addl
pop
ret
mov
out
fmul
sbb
dec
adc
enter
fsubs
shl
pushf
xchg
nop
sahf
pop
pop
mov
lahf
and
push
xor
and
mov
sub
fdiv
jb
fs
loopne
xchg
ja
xchg
in
adcb
mov
mov
pop
stos
pop
add
dec
rcr
ds
out
std
clc
dec
sub
and
inc
dec
jge
dec
mov
shll
dec
push
mov
and
sti
add
pop
add
in
mov
negb
lahf
aas
fs
sub
mulb
push
fmull
stos
popf
pop
out
push
inc
leave
cmp
test
sbb
pop
cmc
les
inc
dec
jbe
out
jo
pop
mov
clc
adc
jge
xchg
jmp
cmpsl
dec
fwait
jge
es
xor
lret
loopne
pushf
aad
xchg
cmp
sbb
data16
imul
xorb
loope
push
mov
mov
sub
pop
scas
mov
into
notl
mov
jecxz
pop
cmp
mov
xchg
add
out
fcompl
fs
mov
jmp
xor
xchg
or
xchg
aas
jmp
int3
inc
add
cmp
inc
nop
mov
inc
jb
xor
mov
lahf
icebp
scas
pop
stc
cld
rorl
push
pop
movsb
sarl
cmp
cmp
std
jns
loopne
and
xor
cmp
sub
lea
xchg
sbbl
movsl
add
sbb
mov
jb
and
mov
lret
mov
call
lds
xchg
ljmp
mov
push
dec
jmp
in
add
mov
lahf
int
jp
insb
iret
inc
jne
out
clc
icebp
aaa
jae
xchg
push
fwait
jecxz
pop
popf
orl
fwait
inc
jl
cmp
mov
stos
mov
sub
fdivl
lea
jb
jnp
push
xchg
aam
push
addr16
mov
push
inc
out
fst
inc
jnp
add
pop
mov
scas
push
push
or
test
mov
dec
lods
jb
and
repz
or
sub
sbb
xor
xor
outsl
ret
lret
dec
inc
mov
aad
sub
popa
rcrl
out
jno
adc
loope
xlat
cmpsl
data16
cmc
int3
push
dec
iret
mov
fwait
push
or
pop
adc
push
jne
push
mov
pop
aad
js
outsb
inc
dec
mov
jg
divl
jp
leave
pop
cmpsl
inc
dec
imul
jb
sub
or
fsubs
mov
lods
stos
adc
clc
xlat
add
mov
bound
lock
movsb
insb
and
paddw
shrb
ja
lret
pushf
decl
gs
into
jecxz
lods
out
sbb
inc
cmc
or
loop
cmp
cltd
fcoml
cmp
xchg
addr16
and
repz
dec
arpl
movsl
mov
jecxz
sbb
fadds
sahf
leave
mov
ret
rol
cmp
popa
mov
jb
xor
inc
scas
arpl
into
ljmp
sub
icebp
pop
inc
sbbl
imul
xchg
xor
sub
mov
pop
fmul
sbb
outsl
inc
int3
data16
and
faddl
pop
xor
pop
lds
dec
or
mov
adc
repz
repz
push
xchg
xchg
notb
in
xchg
pop
daa
push
xor
icebp
sbb
mov
imul
incb
push
add
iret
fs
aas
imul
mov
add
int3
jns
mov
cld
scas
jp
push
data16
out
xchg
pop
xor
outsb
out
mov
dec
fwait
stc
in
subl
loop
orb
lock
fisttpl
xchg
clc
in
and
xorb
xlat
enter
loopne
mov
mov
mov
adc
scas
test
mov
sub
stos
xchg
push
adc
xor
sti
pushf
jmp
mov
popa
add
pusha
aad
fidivl
jl
and
pusha
push
inc
jo
jecxz
inc
fcmovnb
and
push
and
les
das
out
testb
sub
popa
fwait
add
lcall
add
pop
pushf
sub
imul
in
dec
and
mov
mov
iret
push
enter
ret
fbld
cmc
xadd
sbb
xor
or
mov
adc
sbb
cmp
push
mov
pop
mov
mov
inc
popa
fbld
in
pop
out
jne
addr16
inc
and
lock
js
push
loope
test
mov
aas
mov
jge
pop
std
fnstcw
insl
xchg
bound
jnp
mov
scas
filds
in
cwtl
mov
dec
out
repnz
mov
cs
adc
mov
mov
loopne
mov
sahf
jbe
mov
or
dec
ds
hlt
test
std
sub
xlat
dec
fsts
mov
test
movsb
jl
push
iret
lock
dec
and
mov
and
mov
iret
mov
sub
pop
jp
repnz
sub
jo
mov
hlt
popf
mov
fwait
clc
aaa
aas
loope
lock
mov
shlb
je
gs
jp
push
inc
cmp
and
jle
mov
xor
lock
and
in
loope
pop
aas
or
ja
repz
mov
data16
sbb
lea
pusha
xchg
fnsave
mov
pop
test
out
lahf
jo
psubsb
leave
inc
scas
fsubrs
insl
mov
rorl
out
movsl
test
pavgb
and
push
clc
push
repnz
das
mulb
mov
mov
mov
mov
cmp
jge
inc
lahf
sbb
dec
push
imulb
mov
inc
xchg
cli
sbb
int
movsb
loope
xor
mov
xor
mov
push
mov
xor
push
or
dec
rol
pop
lcall
es
stc
xlat
jp
stos
or
add
fcmovnu
dec
out
loop
cli
fistl
sahf
int3
in
mov
cmp
daa
cmpsl
pop
popa
adc
xchg
out
cmp
cmp
out
in
cvtps2pd
loop
ja
jg
cmpsl
or
mov
pop
stos
jns
or
lahf
icebp
cmp
pop
stc
and
jmp
cmc
jge
shrl
loope
lods
cmp
les
lret
xchg
and
jmp
xchg
sarl
rclb
js
xorb
outsl
pop
unpckhps
push
cmc
xor
push
ss
mov
or
pop
adc
add
pop
push
dec
cld
pop
mov
mov
mov
pop
out
adc
add
pop
pop
sub
xchg
and
lods
mov
adc
repz
movsb
mov
cmp
scas
xchg
int
inc
sbbl
xchg
add
test
jb
enter
subl
lahf
mov
lcall
loope
or
mov
sbb
sti
add
push
add
mov
in
push
xor
xchg
movsl
sub
scas
mov
popa
or
repz
jecxz
lcall
cltd
or
mov
out
adc
test
movsl
sub
mov
popa
inc
popf
jle
divl
fistpll
xchg
inc
dec
cmp
mov
mov
jl
xlat
hlt
rcrb
gs
xorps
jb
xchg
dec
int3
xchg
and
jl
push
aad
adc
cli
rcrb
mov
jno
movsb
lods
cmp
xor
mov
jne
cmp
sarl
sbb
rorb
sub
mov
lods
add
lcall
arpl
sarb
lret
scas
outsl
xchg
xchg
mov
jnp
adc
enter
hlt
in
pop
and
and
loop
int3
mov
test
jb
jnp
subl
add
jmp
insl
sbb
test
add
push
dec
ja
xchg
mov
shl
inc
sub
jp
test
notb
adc
cli
movsb
adc
dec
dec
jp
cli
aam
cmp
je
cmp
ret
gs
dec
fsubl
adc
push
add
or
ss
sub
cmpsl
in
xchg
mov
aas
push
adc
notl
jg
jecxz
mov
adc
add
ret
fmuls
push
cmc
sub
enter
test
rcrl
xchg
jne
and
jg
push
pop
int3
std
out
push
lock
shll
test
cmpsb
inc
jbe
mov
or
jl
out
jg
or
mov
outsb
push
int3
jns
test
insb
xchg
lret
pop
push
jae
leave
pop
ret
sub
fidivs
push
lea
mov
into
inc
xchg
cmpsb
mov
inc
test
pop
inc
in
loopne
pop
or
mov
xchg
data16
add
xchg
mov
pop
js
cld
in
mov
lret
sti
sub
xchg
into
cmp
pushf
popa
jb
dec
fdivl
sbb
push
mov
and
jg
inc
out
sbb
xchg
push
dec
or
lcall
mov
xorl
pushf
xchg
xchg
cmp
jbe
inc
rorb
iret
sbb
out
sbb
leave
jmp
mov
mov
adc
inc
adc
iret
and
jmp
pop
cmp
add
push
and
imul
push
arpl
cmp
mov
fadd
adc
and
inc
xor
pop
add
jge
out
push
rcr
arpl
arpl
test
and
outsl
mov
fsubrs
mov
fistpl
dec
test
and
inc
or
fdiv
inc
and
das
mov
popf
ficoml
push
movsb
negb
cmp
outsb
xor
icebp
sub
sbb
xchg
cmc
and
cwtl
cld
int
shrl
mov
pop
rclb
xchg
inc
add
jnp
js
sahf
icebp
and
pop
xlat
nop
inc
jecxz
jns
jle
xor
pop
in
mov
les
sbb
icebp
dec
aam
cltd
lret
sbb
jmp
cs
jo
popf
adc
cld
popl
mov
mov
popa
lret
sbb
arpl
mov
fiaddl
pop
push
nop
clc
and
sarl
leave
push
pop
sbb
cmc
scas
cltd
push
cmp
push
repnz
in
push
pop
scas
add
add
in
mov
jge
aas
add
mov
mov
adc
loop
dec
mov
xor
dec
push
out
add
adc
fisttps
clc
sub
push
lret
sti
cmpsl
in
clc
mov
rolb
xchg
mov
xchg
mov
adc
or
lretw
imul
push
imul
ret
enter
jle
cmpsb
in
push
xchg
out
les
jb
pop
into
inc
cmp
and
data16
xor
scas
mov
pop
xor
xor
in
in
push
shrl
out
bound
cli
pop
mov
rcll
enter
xchg
leave
arpl
into
ljmp
cmp
add
test
and
xchg
xorb
inc
call
mov
nop
scas
adc
mov
mov
xor
push
frstor
mov
outsl
int3
or
les
shlb
inc
adc
js
in
out
addl
mov
mov
or
jmp
inc
jno
test
movsl
sbb
ret
jle
push
lods
fmull
lret
mov
mov
addr16
addl
int
jbe
or
hlt
push
scas
aad
das
sub
cld
jno
jge
push
xchg
mov
add
ret
jp
pop
into
mov
xchg
lret
cli
aad
flds
mov
arpl
dec
test
leave
xor
test
dec
adc
push
jne
lods
mov
pop
jb
int
pop
fwait
push
xchg
sbb
mov
std
lods
rcrb
outsl
pop
mov
or
lret
ja
jmp
hlt
dec
mov
aaa
inc
imul
test
xor
out
push
out
inc
pop
mov
adc
testl
insl
jecxz
fdivrl
fmulp
test
dec
pop
cli
ds
cwtl
rolb
dec
xor
sub
mov
xlat
mov
pushf
push
dec
mov
dec
mov
cmp
jp
jmp
xor
int3
fldt
sarl
mov
out
das
insl
cmp
mov
mov
aad
clc
push
xchg
daa
dec
and
inc
loope
out
outsb
xlat
add
xor
or
fstl
loop
xchg
imul
into
insl
or
jb
lds
sub
mov
stc
mov
or
int
add
inc
out
out
jg
cmp
pop
rcrb
cmp
pop
dec
jge
mov
push
ja
mov
mov
cmp
mov
or
movsb
push
push
movsb
shrl
push
adc
scas
sbb
push
add
mov
dec
daa
call
xchg
inc
mov
movlps
dec
dec
fstps
call
lods
cmp
sbb
fs
or
icebp
aaa
sbb
loop
cld
leave
sub
lahf
hlt
inc
mov
pop
jae
xor
cmpsl
xor
cmp
mov
call
rolb
xchg
jno
xchg
daa
mov
fmuls
dec
sahf
int3
stos
sub
aam
xchg
out
xor
adc
push
mov
sarl
mov
js
sar
popf
jnp
repz
je
mov
add
lea
ds
lods
inc
shl
lods
popf
adc
in
xchg
jae
jmp
cmp
pop
dec
cmp
and
insb
inc
out
mov
dec
or
mov
aaa
dec
insl
out
push
add
cld
fists
and
or
clc
sub
js
or
in
inc
ss
pushf
mov
sbb
mov
ret
pop
fbstp
dec
add
cmp
aad
jl
aad
pop
push
popa
out
and
mov
add
jnp
fs
into
and
lcall
int
icebp
je
ljmp
pop
shr
aam
push
pop
pop
pop
in
pop
xchg
loop
pusha
cltd
ret
ljmp
sub
xor
enter
js
fadds
lea
repnz
add
sahf
mov
fstpl
fadds
push
loopne
xchg
or
mov
xchg
jecxz
out
mov
scas
jmp
sub
jae
jg
repz
xchg
cmpsb
daa
xor
xchg
push
jp
mov
repz
mov
call
mov
daa
dec
aaa
outsl
xor
adc
push
pop
jge
push
or
or
mov
xor
fldcw
pusha
out
fcoml
inc
sti
lds
mov
cmpsb
gs
push
clc
je
cmp
imul
bound
stos
emms
xor
mov
int
xchg
jge
std
jnp
and
pop
add
push
and
sub
adc
and
push
fsts
jnp
mov
jnp
cmp
fldt
sbb
in
shrb
and
mov
sub
in
aas
scas
mov
xchg
mov
and
xchg
sarl
mov
sti
dec
xor
add
xchg
jle
sti
stc
sub
movsl
insb
mov
bound
iret
inc
xchg
cmpsb
sub
in
int
dec
cli
cwtl
push
movsl
inc
mov
inc
pop
fdivrs
loop
inc
mov
xor
or
stos
mov
xchg
jge
sahf
call
jnp
mov
scas
jno
loop
stc
mov
les
test
inc
lock
push
aam
cltd
mov
sti
push
pop
lcall
mov
add
loopne
dec
movzbl
shll
cmp
clc
outsb
mov
mov
lock
adc
scas
xchg
or
loopne
push
test
std
pushf
or
pop
mov
xchg
cmpsb
dec
out
ja
push
jp
leave
adc
sbb
sar
rorb
daa
pop
test
lcall
sbb
je
test
jbe
xchg
rorb
pop
inc
sub
out
inc
dec
pop
mov
xchg
add
outsl
inc
fcoms
push
xlat
add
mov
outsb
test
push
adcl
ljmp
and
repnz
sub
ja
arpl
std
pushf
and
out
xor
push
mov
mov
fiaddl
adc
loopne
ja
inc
mov
jge
das
mov
push
loopne
push
adc
push
dec
add
lods
hlt
mov
push
mov
lret
jns
out
mov
dec
dec
ret
mov
sbb
cmp
lock
inc
xor
je
adc
xchg
js
je
sbb
ljmp
jo
ds
int
lods
xlat
sahf
mov
sarb
enter
test
xchg
push
mov
out
sahf
add
iret
dec
dec
xor
mov
sbb
rorl
add
pop
push
rclb
cmc
out
jl
imul
fcoms
dec
aaa
jle
sbb
shll
mov
stc
shr
adc
test
jge
xchg
mov
push
cmp
inc
aas
clc
inc
mov
xor
xchg
sbb
rcll
dec
in
add
mov
pop
jmp
push
dec
repz
xlat
cld
rol
xor
addl
mov
clc
jbe
inc
repnz
push
jg
popf
jo
gs
jnp
out
xchg
aad
insb
int3
loope
xor
lds
orl
sti
and
jle
jp
dec
sbb
jnp
and
sbb
nop
mov
and
push
outsb
jae
notl
push
pusha
jp
bound
add
push
ss
movsb
test
insb
jp
psrld
mov
in
mov
lods
jbe
xchg
leave
es
inc
lret
push
aad
sub
pop
pop
ja
mov
jno
push
adc
pop
jge
je
xchg
imul
inc
and
jo
mov
jg
push
mov
out
pop
in
pop
sub
pushf
cmpb
lcall
and
pop
or
or
scas
leave
cltd
xchg
into
pop
cmp
pop
sub
mov
pop
pop
ds
stc
clc
scas
and
popa
cld
add
fiadds
out
mov
repnz
sub
mov
xchg
cmp
inc
scas
xchg
divl
std
shlb
jecxz
gs
adc
xor
mov
or
xlat
jge
scas
mov
sahf
cmp
mov
mov
sahf
xchg
dec
xor
mov
lods
sub
adc
push
movsb
inc
inc
push
int3
push
mov
std
mov
jge
clc
pop
adc
or
cld
xor
mov
addr16
ficoms
jbe,pn
pusha
pop
call
sub
shlb
adc
popa
inc
lahf
mov
movsb
mov
popf
hlt
sbb
mov
push
mov
clc
out
mov
mov
gs
xchg
pop
push
test
pusha
andb
movsl
cwtl
rol
clc
dec
lea
movsl
and
jno
pop
aam
sub
jg
bnd
faddl
test
mov
movsl
sub
xchg
xor
inc
loope
and
sarb
adc
xchg
cli
or
fstpt
inc
inc
add
or
xor
mov
lcall
lcall
fadds
xchg
fldl
dec
in
mov
xchg
test
fwait
aas
inc
fwait
inc
push
mov
dec
enter
inc
sbb
sub
arpl
es
out
inc
xor
addr16
pop
icebp
add
and
mov
iret
pop
lods
push
inc
cli
inc
inc
mov
jbe
dec
and
rorb
or
jg
or
aaa
imul
mov
popa
adc
xor
jl
and
mov
mov
ja
cld
mov
pop
sbb
mov
mov
pop
add
movl
or
fcmovne
and
adc
dec
cmp
lahf
jecxz
popa
fs
dec
out
adcb
mulb
in
arpl
cmpl
push
xchg
sahf
mov
loop
jne
jae
xor
push
xor
sub
cmc
xor
mov
into
xchg
mov
rol
xor
lds
aaa
aas
popf
jno
and
sarl
mov
xorb
cmpl
inc
pop
mov
icebp
dec
lret
cmp
femms
jge
in
mov
jp
cmp
mov
ss
adc
aad
xor
push
test
mov
into
ret
jp
or
movsb
cld
repnz
call
mov
pop
add
adc
fnstsw
cld
pusha
jl
fcomi
push
pop
in
and
lods
sar
lea
add
test
cmc
adc
adc
mov
mov
outsb
mov
jb
xor
lods
cwtl
push
dec
cmp
push
lods
mov
movsl
or
repz
sarl
mov
outsb
rcr
les
sbb
add
into
add
xchg
mov
lret
jl
fadds
inc
xchg
mov
pop
mov
out
aaa
test
fs
stos
xor
jns
clc
or
inc
inc
ljmp
cli
sbbb
sbb
aaa
sub
std
fdivr
cmp
notl
das
push
sbb
mov
pushf
cmp
and
lret
repnz
popa
stos
icebp
mov
push
inc
outsl
aam
and
dec
popf
sub
fnsave
dec
pop
jecxz
js
adc
cmp
sbb
pushf
sbbb
dec
mov
mov
scas
scas
xor
mov
pop
loopne
aam
pop
in
push
mov
sub
shlb
pop
mov
rclb
aam
imul
push
or
adc
sbb
dec
cs
mov
adc
sub
std
sbb
sahf
std
and
movl
fwait
inc
pop
sub
aad
push
repz
jbe
xchg
push
test
in
out
repnz
cs
dec
in
roll
inc
dec
inc
add
dec
inc
jg
in
xor
out
mov
test
or
sbb
and
loope
aas
xchg
data16
dec
loopne
jge
outsb
pop
cmpsl
lcall
lcall
out
pop
imul
cltd
mul
xchg
in
test
mov
xlat
lret
insb
jle
lahf
cli
sub
mov
popa
mov
xchg
dec
aad
stos
mov
scas
push
mov
add
and
cld
add
pop
into
mov
stc
fildl
and
jb
cmp
jl
fnstsw
lret
lods
lahf
dec
mov
inc
sub
lret
sarb
jnp
popf
dec
mov
push
aam
leave
pop
mov
hlt
imul
cmp
call
push
or
pop
inc
lock
adc
mov
mov
fnstsw
xor
loopne
push
fdivrl
jg
cmpsb
xchg
jp
in
pop
shlb
inc
stos
push
xor
test
mov
popa
stos
jle
daa
int
mov
add
xchg
in
mov
mov
stos
loop
push
mov
and
pop
test
adc
lods
inc
cmpl
mov
sbb
std
lahf
ss
xchg
sub
mov
pop
inc
out
sbb
outsb
adc
sub
jnp
xchg
sti
rcrb
subl
cmp
cwtl
inc
cmc
jb
push
sub
jp
sub
mov
fwait
and
adcl
or
test
in
mov
push
push
movsl
cmpsb
xlat
xor
mov
sub
loop
adc
pop
rcr
inc
mov
mov
shll
repnz
aas
pop
stc
jecxz
ds
repz
cwtl
xor
addr16
sti
fcomps
push
les
lock
dec
jnp
jno
mov
cmp
cmpsb
dec
aad
mov
or
xchg
sub
push
aam
test
jno
mov
hlt
lods
xchg
test
sahf
in
hlt
or
cs
cltd
xor
pop
push
fs
push
jbe
les
adc
push
mov
scas
inc
lcall
push
mov
mov
cmc
mov
push
mov
fs
movsb
in
daa
leave
or
dec
sti
stc
pop
lods
sbb
fimull
punpckhdq
sahf
xlat
sbb
sbb
adc
in
aas
jbe
into
xor
movsb
aam
fidivrs
rolb
pop
pop
inc
xchg
outsl
xcrypt-ecb
cmpsl
mov
mov
cs
mov
es
pop
mov
cli
scas
lea
outsb
xchg
adc
mov
cwtl
adc
pop
xchg
insb
dec
adc
lcall
xchg
add
sub
push
mov
fildl
cld
js
popa
lret
add
popf
xor
jo
adc
adc
jne
inc
jmp
xor
push
lds
ret
clc
loope
fs
xchg
push
hlt
cmp
out
jmp
in
shlb
add
es
add
cmpsl
mov
sub
in
pop
minps
mov
adc
mov
fcoms
pop
popa
test
xchg
and
test
imul
mov
orps
pop
shll
cmp
fisttps
test
cmp
xor
mov
rclb
jmp
push
test
pop
xchg
fld
push
or
lea
cwtl
pop
pop
mov
pop
mov
ret
add
pop
hlt
adc
movsl
lods
inc
stos
jge
jp
dec
data16
scas
pop
mov
mov
jg
cmp
cmp
and
xorb
popa
push
jno
lcall
and
dec
into
cmpsl
xor
mov
jo
mov
dec
pop
cmp
mov
inc
push
dec
mov
repnz
mov
or
lea
xor
pop
xchg
rolb
lds
das
scas
fcompl
and
leave
xchg
sub
rcll
roll
dec
mov
ficoml
jnp
xor
mov
test
sahf
aas
adc
and
pop
cmp
push
add
adc
and
pushf
popa
dec
xor
push
add
xor
cmpsb
js
mov
sarl
cmp
xchg
xchg
inc
and
push
not
scas
mov
sbb
and
jnp
rcr
mov
scas
xchg
std
fnsave
add
repnz
sarb
jb
jbe
repnz
not
shlb
mov
jnp
scas
aaa
jo
sbb
faddl
pushf
mov
cmp
out
xchg
mov
clc
lds
aad
mov
imul
sub
rorb
and
fidivrs
inc
gs
iret
xchg
push
xchg
inc
scas
sarb
pop
dec
pop
aas
push
inc
in
sub
pop
fsubrs
fisttps
std
in
mov
sub
jp
cli
imul
inc
or
pop
xchg
xchg
cmpsl
mov
cmp
mov
pop
fidivs
jns
cld
xor
lahf
popf
lahf
dec
bnd
mov
stos
jl
stc
cld
lahf
sub
or
pop
add
arpl
push
aam
adc
cli
mov
ja
sbb
add
jne
outsl
in
sti
in
test
xchg
iret
xor
lock
movsl
out
shlb
push
and
mov
je
sbb
std
orb
or
aaa
xchg
and
inc
xchg
xor
and
imul
jbe
push
pop
or
mov
loopne
inc
movsb
mov
jge
add
xorb
cmc
or
or
repnz
or
sbb
aad
out
push
in
push
jns
std
lret
testl
sbb
ss
dec
and
adc
into
xor
cmpsb
jns
push
cwtl
inc
test
dec
dec
ljmp
mov
imul
leave
pop
pop
dec
adc
stos
jbe
push
mov
nop
and
pop
push
sbb
push
mov
in
push
push
xor
mulb
mov
xor
push
sub
adc
fisttpll
aas
xchg
push
lock
cmp
sbb
ss
test
les
xlat
inc
cli
adc
jge
pop
pop
xor
clc
repnz
jl
cmp
pushf
inc
sub
adc
add
mov
nop
mov
aaa
adc
xchg
mov
addr16
cli
in
pop
test
sub
lods
and
popa
inc
js
in
loope
and
inc
scas
add
pusha
lock
ficompl
jle
pop
fsubrl
or
pop
pop
ljmp
sbb
pop
jo
ret
lock
shr
loope
popa
outsl
iret
iret
std
mov
insl
adc
push
sub
jp
xor
mov
push
inc
fists
cmpsl
lret
fcomps
sub
jo
lret
mov
add
sub
das
in
mov
sahf
outsl
scas
xor
icebp
mulb
dec
add
sub
cmovnp
dec
iret
xchg
mov
pop
jne
inc
imul
cs
inc
jo
push
popf
pop
subb
mov
dec
clc
sub
mov
dec
mov
push
ret
mov
dec
lods
inc
lods
dec
xor
sbb
mov
pop
mov
idivb
sub
pop
pop
inc
sub
int
lods
and
pop
dec
lods
or
repz
add
mov
jecxz
scas
ds
clc
rorb
aam
js
xor
outsb
xor
mov
mov
test
jb
fbstp
push
jnp
das
mov
add
and
pusha
imul
ss
push
mov
int
sub
sub
dec
mov
xchg
test
lret
dec
sub
jb
inc
mov
loop
iret
cmp
or
hlt
cmpl
andl
sbb
or
test
dec
dec
scas
out
sbb
imul
push
push
shl
jnp
xor
push
popa
subb
xchg
movsl
imul
jle
xchg
popa
mov
call
jecxz
inc
cwtl
popa
pop
sub
mov
sub
pop
testl
sbb
lds
jo
les
cmp
sbbb
adcl
fwait
mov
mov
sbb
jb
enter
mov
push
loopne
mov
sbb
sub
add
mov
movsb
add
lea
lods
mov
xchg
jnp
xor
fcmove
test
imul
pusha
sub
insl
aaa
sbb
pop
xlat
loope
iret
mov
adc
push
cmpsb
jb
push
inc
pop
jmp
dec
adc
aad
cmp
push
ret
push
push
shr
jns
cmp
sub
lock
jmp
mov
xchg
test
push
pop
sahf
mov
push
push
scas
dec
sub
lods
and
push
cmp
cmp
xlat
rclb
or
ret
xchg
add
andb
stc
mov
repnz
fbld
add
leave
stos
push
mov
jecxz
xchg
out
sbb
paddsb
push
lods
pop
sar
inc
push
xchg
push
inc
add
jbe
cmp
sarl
xchg
jnp
mov
push
mov
dec
imul
inc
int
jg
sub
int3
or
sbb
cli
mov
ljmp
cltd
and
add
add
sti
or
arpl
cli
bound
adc
call
cli
mov
mov
andl
out
ljmp
int
mov
xlat
cmp
xor
mov
stc
fidivrs
lret
daa
pop
es
test
ds
or
outsb
in
notl
popl
pop
sub
insl
ret
add
arpl
sbb
arpl
pop
ret
dec
cltd
cmp
inc
test
repnz
inc
xor
movsb
adc
sbb
std
ret
inc
dec
mov
add
outsb
inc
aam
sbb
xlat
test
shlb
dec
push
xor
and
mov
and
mov
sbb
lret
and
and
mov
xorb
into
jmp
lods
xor
xchg
sub
pop
adc
adc
in
push
lcall
test
stos
arpl
push
push
xor
jmp
enter
jbe
mov
push
outsb
repz
mov
sti
cmpsl
cwtl
cmp
sbb
mov
inc
mov
sbb
sti
popf
cwtl
call
repnz
inc
xor
pop
xchg
arpl
or
aam
or
xor
add
loopne
jmp
xchg
je
std
xlat
inc
push
push
inc
mov
bound
aam
push
or
add
mov
inc
call
or
lods
int
lea
adc
clc
ljmp
int3
lret
add
insl
xchg
pop
and
bound
mov
in
sub
js
and
sbb
andl
movsl
jns
jns
and
arpl
imul
adc
lods
or
test
lods
push
repz
cmp
push
mov
inc
xchg
imul
lods
mov
cld
sub
mov
add
fmul
and
cmc
fmuls
addr16
inc
lods
fidivrs
ror
add
inc
aad
das
fstpl
cmp
das
sti
xchg
dec
mov
dec
push
push
fbld
movsl
sub
jnp
arpl
repz
and
ja
dec
add
adc
jle
cmp
leave
jne,pn
pusha
out
test
lods
mov
sbb
pushl
and
scas
push
hlt
jns
jecxz
pop
gs
mov
and
and
in
dec
insl
xchg
mov
lret
sti
push
cmpb
and
xchg
dec
push
out
inc
outsb
jg
aam
sti
mov
lods
je
loope
pop
cmpb
add
insb
ja
dec
pop
in
dec
mov
stos
scas
cmp
sar
sub
cmp
mov
xchg
sbb
repz
andb
xchg
mov
sysret
mov
rcll
std
sahf
inc
mov
icebp
test
int
and
sbb
or
push
push
xchg
repz
in
dec
dec
push
repnz
sub
cmp
lods
iret
add
xor
fidivl
xchg
add
stos
je
cltd
mov
lret
add
xor
adc
bound
cld
pop
fsubrl
rcrl
jne
cmc
dec
mov
hlt
and
or
push
add
xor
es
push
mov
movsl
xchg
jle
jb
cmpb
dec
stc
and
fadd
push
sar
sarb
cli
gs
pop
idivl
lods
aad
mov
push
ljmp
jecxz
adc
push
inc
cltd
fimuls
fldl
cmp
mov
or
les
popa
sbb
bound
and
insl
int
lock
int3
xor
dec
lret
push
sub
sub
loopne
xchg
mov
push
sbb
add
jo
pop
xchg
int
push
cmpsb
mov
arpl
lcall
xchg
push
inc
lds
popa
mov
call
jbe
daa
rorl
cli
mov
jne
cmp
pop
je
xor
mov
inc
inc
pushf
std
add
lods
mov
sbbb
adc
addl
pop
push
mov
insl
pop
cld
ss
cmpsw
mov
std
sti
lcall
add
sbb
sti
adc
lock
aas
out
sbb
jle
test
aam
call
in
mov
call
in
mov
scas
pop
xor
jg
aaa
mov
jo
addr16
out
jl
or
pop
and
mov
dec
add
lds
cmp
xchg
rorb
cltd
adc
inc
cmp
loop
popf
pusha
mov
xor
enter
cmp
ljmp
les
pusha
pop
mov
rolb
pop
shll
mov
push
in
cld
js
adc
pop
jns
mov
inc
lret
jo
sbb
mov
cwtl
nop
cltd
cmp
mov
adc
push
pushf
dec
ljmp
std
pop
notl
mov
sbb
inc
cmp
sahf
das
pop
fisttps
xor
jb
cmp
mov
clc
insl
push
mov
aas
ret
sbb
jbe
loop
aas
inc
mov
or
sbb
dec
sbb
add
lds
into
xchg
imul
scas
xlat
mov
lds
mov
stos
sub
ret
notl
stos
test
sbb
in
sub
insb
cmpsl
aad
gs
jecxz
cwtl
jno
mov
sub
sti
mov
dec
testb
sub
cmp
sub
adcl
test
push
popa
mov
and
loope
test
nop
std
loopne
fcompl
enter
leave
int
cmp
or
cmpsb
insl
out
push
dec
js
out
sbb
push
sbb
aam
bnd
push
and
add
mov
xchg
mov
mov
enter
mov
xor
nop
mov
xchg
adc
inc
sbb
or
xchg
push
in
gs
xchg
cmp
adc
jle
mov
iret
fists
std
icebp
push
addr16
movsl
mov
cld
add
addr16
shr
add
das
imul
dec
movsl
push
lock
mov
lahf
xchg
xor
daa
loop
addl
jb
sti
cmp
xlat
mov
mov
or
mov
dec
aas
rcll
jmp
push
insb
insb
mov
shrb
sahf
inc
dec
cmp
lds
xorb
xchg
pushf
mov
mov
insl
clc
ss
sub
ficoms
sub
ret
aaa
add
or
fstps
mov
movsb
cmp
loop
push
mov
mov
inc
jmp
or
inc
sub
jo
xor
lahf
and
jnp
ds
sub
adc
enter
pop
and
push
call
rcrl
push
pop
jl
fwait
jno
arpl
lods
lods
mov
std
idivb
pushf
loop
popf
fnstcw
je
or
div
and
fwait
push
pop
xchg
in
outsb
add
popa
loopne
nop
pop
call
clc
mov
adc
adc
inc
push
mov
cld
mov
scas
mov
sbb
int
jnp
aam
pop
leave
push
inc
push
mov
mov
jo
xor
jns
push
mov
inc
test
cmp
mov
cmpsl
add
shrl
inc
outsb
pop
sbbb
testb
xchg
jnp
ficoml
test
movsl
push
xchg
test
gs
push
icebp
and
inc
shlb
lock
cltd
aam
cmc
add
add
mov
push
cmpsl
xchg
dec
js
lcall
cmp
in
ja
dec
int
pop
cmp
lret
jl
inc
data16
jbe
adc
adc
add
inc
or
gs
cmp
xorl
mov
in
cs
mov
sub
xor
ds
sub
xchg
mov
xchg
fstpl
sub
test
or
and
lea
cltd
jbe
xor
dec
sub
sti
testl
xchg
jne
scas
ficomps
movsb
in
cli
and
inc
sub
jbe
jmp
mov
mov
jge
aaa
xchg
stos
shll
int
aas
mov
rcll
out
inc
sbb
add
rclb
lcall
xchg
mov
mov
jne
pop
sti
sbb
sub
jae
in
mov
mov
sbb
push
cmpsl
es
orl
pop
js
mov
dec
fstpl
sub
fwait
pop
fiaddl
pop
push
sbb
dec
sbb
sar
scas
negl
pop
and
rcrl
adc
outsb
sub
aam
loopne
aam
dec
es
lcall
push
sbb
jecxz
or
pop
mov
dec
cwtl
insl
rclb
pop
dec
push
mov
lret
fucom
call
cwtl
xor
rolb
cmpsl
push
ucomiss
xlat
inc
out
popf
pop
cld
int
jnp
dec
or
add
and
pop
jmp
inc
pop
test
and
jg
scas
scas
fstp
add
repz
xor
shr
mov
js
cwtl
mov
es
mov
sbb
and
mov
js
mov
inc
sahf
mov
jecxz
inc
or
aas
out
add
cld
sub
leave
and
jnp
inc
out
sahf
call
bound
insl
mov
scas
sbb
cmpsl
mov
sbb
push
ss
and
stos
outsl
je
dec
sbb
jl
xchg
mov
cmp
subb
mov
enter
sub
hlt
pop
push
orl
subb
dec
imull
xchg
insl
shl
mov
daa
mov
push
push
push
iret
popf
ret
cmp
cmp
cmpsb
pop
inc
test
xchg
adc
insl
jle
or
repz
mov
xchg
inc
stos
sbb
mov
int
pop
inc
movb
in
dec
jo
mov
cmp
fsubrl
or
add
fldcw
aad
fadds
ja
rolb
shll
ds
int3
dec
mov
out
jge
pop
cmp
ret
jmp
aaa
push
jg
leave
mov
pop
push
dec
dec
mov
xor
in
nop
cmp
and
call
sub
xchg
dec
negb
pop
aas
in
and
sbb
adc
loop
xor
rcrl
out
add
inc
sub
shl
push
mov
jne
in
xchg
fsubp
insl
fwait
xchg
pop
insl
jne
rcrl
insl
lock
xor
sub
jb
repz
mov
sbb
mov
push
jg
insb
loop
cli
cli
in
dec
jno
jg
xor
jne
pop
mov
xor
loope
add
add
imul
mov
lods
mov
imul
popl
inc
lds
ljmp
fisubs
jo
ficompl
sbb
outsb
hlt
ss
adc
mov
cltd
mov
push
xor
sub
sahf
fstpl
rorl
lock
adc
idivb
rcrl
cmp
mov
dec
subl
stos
mov
xor
cltd
pop
mov
cmc
mull
fwait
rcll
aam
xor
cmp
sbb
iret
loopne
stos
adc
outsb
int3
push
inc
jp
or
inc
lahf
inc
in
push
jns
push
pop
inc
fs
rorl
stc
add
lret
mov
imul
test
push
inc
jecxz
test
test
cltd
inc
dec
mov
fs
subb
push
ss
dec
imul
xor
mov
push
sbb
sahf
test
call
mov
jp
inc
lods
ja
pop
lret
pop
aaa
sbb
xor
cmp
lock
sarb
into
aas
imul
test
lock
rolb
hlt
sub
aam
inc
sbb
xchg
daa
pop
jnp
loopne
pop
scas
or
lock
mov
into
fcomip
dec
inc
or
rol
or
int
adc
pop
test
in
add
ret
dec
into
ljmp
mov
add
fldt
mov
cmpb
xor
enter
mov
mov
inc
sbb
inc
mov
cwtl
pop
xlat
nop
lods
jo
fdivp
mov
fisubrl
loope
sbb
fprem
scas
cmp
lret
in
sti
jle
jl
jge
ja
cmpsl
aad
lea
repz
addr16
ret
inc
inc
out
data16
or
cmpsb
lds
inc
leave
shrb
mov
lods
xchg
ja
das
cmp
repnz
sub
mov
popa
lret
incb
cmpb
pop
leave
call
setne
stc
jmp
les
jl
lods
aad
fldl
xorl
insl
imulb
mov
sarl
loopne
xor
inc
sbb
mov
testb
stos
fimuls
sub
or
std
enter
addl
sub
addb
pop
xchg
xchg
pop
in
lcall
cmp
loop
imul
into
sub
fs
lret
and
std
jnp
gs
scas
cli
and
mov
xchg
sub
push
out
mov
jb
loopne
enter
sbb
dec
arpl
lahf
jne
mov
lock
adc
arpl
fwait
pop
in
mov
cs
call
xchg
jae
movsl
inc
mov
ljmp
mov
sub
mov
cmp
sbb
pop
sti
out
dec
add
pop
je
shr
pop
and
cmp
pushf
xor
adc
into
mov
push
out
dec
jg
icebp
daa
jns
insb
jo
popa
sbb
int
jbe
insb
add
mov
insl
mov
lea
jno
dec
scas
pop
sub
jno
and
mov
add
add
vphsubdq
sbb
and
lcall
mov
cld
xor
dec
call
cltd
repnz
scas
add
and
mov
jmp
cmp
ss
lds
jne
icebp
sub
xchg
mov
sub
loop
sub
push
jmp
out
aas
pop
sarl
mov
out
je,pn
shlb
ret
insb
sbb
lcall
jae
xor
pop
add
sbb
in
pop
xchg
mov
jnp
adc
xchg
and
push
mov
lods
and
enter
outsl
jae
lock
mov
sub
mull
outsl
mov
popf
mov
popl
jg
jns
in
mov
repnz
push
in
sub
jg
jb
aad
push
xor
aas
fildll
push
imul
loope
inc
cmp
or
aaa
push
adc
lods
jb
jne
gs
dec
mov
stc
in
mov
jmp
push
pop
cli
movsb
dec
mov
push
mov
aas
mov
adc
scas
lock
lods
sub
cmp
xchg
jmp
xor
or
movsb
mov
iret
loop
in
fdivrs
xor
sub
lds
dec
repnz
cltd
je
mov
mov
dec
fldl
jns
mov
mov
inc
cli
mov
sub
or
or
push
and
xchg
mov
sbb
push
jg
test
clc
int3
gs
mov
xlat
icebp
ret
mov
std
fildl
or
xchg
add
bound
sub
adc
mov
popa
mov
cmp
jg
sub
or
inc
fcmovnu
sub
and
sarl
rcll
cmpl
idiv
in
or
int
movsl
fwait
dec
mov
sahf
clc
or
inc
out
xchg
xor
mov
pop
ret
or
cltd
fbstp
and
push
add
jmp
out
mov
movsb
ficoml
mov
scas
and
mov
pusha
sbb
jne
ss
subl
outsl
mov
inc
sbb
xor
adcl
mov
adc
subl
pop
add
or
xor
icebp
arpl
push
push
lret
or
sub
insb
pop
dec
sbb
movsl
pop
xchg
push
push
outsb
jle
scas
dec
xchg
and
sbb
xor
push
xor
xchg
out
test
imul
mov
lds
sub
and
xchg
sub
sub
pop
mov
adc
mov
jo
xchg
pop
dec
ja
xabort
xor
mov
pop
into
push
ds
call
jo
push
push
or
cmp
push
addl
rol
or
pop
adc
push
popf
pop
jle
or
mov
mov
data16
sbb
push
push
jmp
js
negb
push
idivl
pop
negb
ljmp
mov
dec
xchg
add
pop
nop
int3
inc
or
push
clc
test
add
pop
rcrl
jno
jns
push
inc
clc
mov
repz
sbb
insb
xor
jl
and
add
icebp
cli
adcl
jnp
mov
xor
shlb
test
xlat
push
test
mov
dec
ds
stc
pop
outsl
push
or
imul
in
xchg
push
xchg
lods
in
out
daa
sahf
pop
stos
sbb
test
repz
rorl
mov
push
adc
pop
fcomps
in
xor
cs
movsl
mov
mov
pmaxub
jl
test
jg
xchg
mov
sbb
add
mov
inc
insb
push
lret
jmp
cmpsl
cmpsb
popa
xor
fcomps
push
outsb
inc
sbb
jns
popf
imul
or
mov
sbb
shrb
push
push
or
popa
aas
push
outsl
repnz
in
add
iret
es
cmp
popf
bound
addr16
mov
mov
fisubrs
and
arpl
xor
inc
push
dec
popf
adc
mov
mov
in
cmpsl
unpcklps
lds
xor
push
gs
inc
mov
mov
dec
jle
push
fnstcw
movsb
and
and
aam
jp
outsb
adc
mov
pop
mov
mov
inc
jne
sbb
lds
aaa
xchg
iret
scas
adc
imul
mov
fs
xchg
stc
lds
mov
pop
loopne
pop
cmp
lods
sti
sbb
push
arpl
mov
push
popa
cmp
cwtl
in
push
stos
mov
ss
insb
mov
daa
or
lods
nop
adc
stos
sub
ljmp
xchg
mov
out
int
insb
into
shr
push
mov
jmp
jns
fldcw
xor
cmp
push
fsts
test
mov
mov
imul
adc
scas
or
pop
repz
cltd
mov
pop
xor
sti
or
pop
icebp
arpl
mov
cmc
mov
xchg
fucom
mov
outsl
std
xor
loope
jle
and
pop
les
fadd
inc
adc
aaa
pop
xor
data16
out
jns
es
jmp
push
inc
scas
pop
push
repz
mov
addr16
xor
jno
inc
popa
cmpsb
lea
jg
and
xor
or
xchg
mov
dec
fnsave
inc
cmp
xor
in
cmc
sbb
cs
cmp
inc
pop
mov
sbb
shrl
or
dec
mov
push
lcall
scas
push
das
js
cmp
int
add
sahf
iret
dec
mov
push
mov
mov
dec
iret
xchg
movsl
add
dec
mov
mov
add
lock
ret
pop
cmp
into
mov
xchg
arpl
adc
shrl
push
dec
mov
lea
shr
into
scas
mov
lret
nop
sub
cmp
adc
mov
mov
inc
cmp
add
and
push
and
int3
mov
je
mov
mov
popf
sub
out
xchg
sub
cmc
pop
pop
cmc
das
cs
rolb
icebp
mov
scas
rcrb
lret
adc
test
push
mov
pusha
outsb
mov
cli
pop
dec
adc
mov
fs
rcll
jo
repnz
inc
enter
jp
sub
adc
push
adc
ljmp
test
pop
xchg
repz
add
fisttpll
cmp
inc
cmpsl
sbb
repnz
add
mov
and
lods
aam
lods
daa
push
xor
sahf
pop
adc
push
stc
dec
inc
fisubs
cmp
sbb
cli
cmpsb
ret
sti
ljmp
fiadds
pop
pop
mov
iret
cmp
mov
mov
ret
movsl
adc
addb
out
lods
es
add
in
loope
adc
leave
push
in
repnz
xchg
into
ds
stos
sbbl
jns
and
mov
sub
mov
int3
xor
gs
xchg
mov
xchg
arpl
iret
filds
pop
mov
js
out
int3
in
in
fsubrl
pop
pop
mov
add
ret
scas
divb
push
mov
mov
lret
mov
sbb
ds
test
pop
pop
mov
enter
and
and
jo
ret
pusha
or
data16
or
repnz
adc
jb
test
pop
loop
dec
scas
mov
aaa
inc
dec
outsl
cmc
xor
mov
pop
pop
mov
cmp
sbb
mov
stc
and
mov
aaa
mov
pushf
jbe
jb
sarb
aas
add
push
pusha
out
or
fs
sub
cmpsl
mov
inc
jge
jno
loope
xchg
and
sbb
scas
mov
xor
xor
push
xor
push
xor
cmp
cld
into
mov
lods
add
add
mov
dec
ljmp
cmp
cmpsb
call
or
mov
pop
popf
cltd
dec
jnp
mov
jl
mov
orb
cltd
add
std
or
push
stc
in
pop
loop
cmp
mov
xchg
sbb
cmc
mov
ds
jg
fcmove
cmp
xlat
iret
add
push
pop
xchg
loopne
mov
cltd
andb
pusha
inc
push
xchg
pop
hlt
sub
dec
jmp
sahf
insb
sbb
mov
push
stc
orb
add
ficoms
je
push
hlt
outsl
rclb
ret
xor
rcl
mov
test
repnz
sub
inc
movsl
push
mov
shufps
push
dec
cmp
sub
mov
mov
sbb
adc
jns
in
pop
fidivrs
push
xorl
aam
int
jle
mov
xchg
loope
hlt
je
jno
jbe
xor
mov
pop
aas
mov
add
repnz
jmp
test
sahf
mov
shrb
int
in
add
inc
adc
cli
dec
repz
and
dec
stos
jmp
xlat
insb
mov
sbb
ja
sub
mov
xchg
jl
fcmovnu
pop
mov
mov
xchg
sbb
jns
int3
ret
movb
aas
cmp
mov
fcomps
out
cltd
lock
pop
xor
pusha
insb
cmp
push
pop
mov
add
pop
insl
test
std
imul
push
mov
dec
and
mov
aad
jnp
mov
imul
fs
push
inc
repz
sbb
fbstp
sarb
into
push
lret
sub
popa
nop
mov
sti
jnp
mov
adc
ds
loop
call
or
mov
mov
push
cmpsb
cwtl
cmp
sti
ljmp
xor
adc
mov
arpl
cmp
jge
xor
fstpl
clc
mov
inc
mov
dec
or
sbb
mov
pop
cwtl
sbb
add
lds
out
jle
rclb
loopne
pop
jmp
outsb
cmp
push
push
xchg
loop
cltd
jb
jae
js
movsl
mov
testl
push
cmp
mov
and
push
or
mov
aas
mov
mov
jb
jno
inc
mov
arpl
stc
rorb
mov
lods
jno
call
xchg
cs
bound
jle
inc
addr16
mov
and
xchg
cmp
fsubrs
xor
pop
xchg
pop
int3
dec
mov
pop
sub
add
andl
push
lahf
cmp
je
xchg
mov
into
sub
cli
lcall
addr16
pop
cld
adc
test
sbb
outsb
jmp
pop
pop
outsb
inc
mov
clc
incb
gs
push
aas
push
add
lods
sbb
cli
pusha
clc
lcall
cmpsl
cmp
sub
cs
arpl
push
popf
enter
xchg
push
mov
mov
mov
test
xlat
inc
fwait
adc
div
lock
popf
mov
mov
cli
lods
pop
shll
jno
cs
push
dec
jb
sbb
and
rcr
and
mov
push
ss
dec
add
sub
ror
pushf
fs
movsb
shll
daa
adc
dec
shll
pop
pop
xchg
out
add
sahf
push
push
mov
insl
mov
rorl
roll
mov
lods
ljmp
push
es
inc
decb
xor
addl
movsb
jge
pop
dec
mov
das
pop
inc
incl
cmc
pop
leave
stos
push
push
mov
mov
push
loope
scas
fwait
in
pushf
jmp
sbb
out
or
xor
lds
mov
xor
push
loope
push
dec
add
sarl
inc
dec
aam
push
sub
cld
ja
push
xor
scas
push
rclb
repz
push
int
mov
lods
data16
push
add
or
push
movsl
mov
inc
fimull
loop
mov
adc
adc
in
push
jo
and
inc
mov
xchg
xor
shl
ret
xchg
pop
xor
jg
and
aas
mov
mov
xor
jg
jns
xchg
out
adc
cld
out
daa
test
loope
leave
pause
sbbb
add
test
adc
fistpll
scas
dec
xor
jnp
ss
inc
mov
adc
sub
xchg
nop
jge
xor
or
shrb
repnz
adc
fwait
xchg
scas
or
mov
push
mov
adc
out
mov
mov
out
push
repz
sub
repz
xchg
sbb
ja
div
xor
lods
mov
fistps
insl
pushf
insl
lcall
jne
cld
mov
dec
in
out
out
ss
inc
add
inc
mov
arpl
jmp
shr
mov
add
sbbl
jecxz
ja
add
inc
rclb
dec
dec
popa
push
cmp
cmp
jae
pusha
fstps
sub
std
add
mov
fidivrl
and
mov
sbb
lahf
fstl
lds
cmp
inc
outsl
pop
push
sbb
loopne
lcall
mov
insb
or
and
pop
adc
enter
inc
dec
jne
fbstp
iret
inc
popa
xchg
inc
sbb
fidivs
jle
jge
xchg
daa
cmp
mov
stos
subl
dec
or
es
das
dec
add
dec
in
xchg
add
cmpsl
cld
outsl
repnz
xchg
xor
movsb
xchg
jns
inc
scas
ret
or
in
push
mov
mov
orl
jmp
xchg
cld
or
mov
daa
insb
shl
clc
cmpsb
gs
dec
test
loope
cmp
sbb
jmp
subl
and
mov
adc
pop
test
in
lea
addr16
repnz
outsl
push
sbb
das
pop
fsubs
fidivl
push
ret
popa
scas
mov
cmp
stos
fstpt
js
xlat
movsb
or
adc
inc
movsl
fimuls
loopne
fwait
shrb
sbb
mov
lret
jl
out
iret
enter
scas
push
mov
push
fisttpl
fistps
push
cmp
rorb
cmp
pop
pop
xchg
dec
das
sarb
cli
fisubrl
xor
fadds
cmp
ret
xchg
jo
push
nop
icebp
pushw
sub
xchg
addr16
cmp
clc
jl
aam
icebp
fnsave
inc
dec
cmpsb
xchg
xchg
aad
ja
into
popa
lods
outsl
addr16
xor
fs
dec
outsl
sub
loop
ret
jae
inc
fwait
jb
or
adc
stos
imul
jbe
movsl
or
sub
inc
and
insb
jb
xchg
jmp
xchg
int
hlt
push
mov
test
add
aam
out
insl
cmp
xchg
outsl
popf
cld
xchg
les
call
push
mov
xor
cltd
stos
test
divb
xlat
fisttpl
fwait
test
fwait
adc
push
rolb
imul
jbe
cmp
sbb
std
loop
js
mov
sbb
pushf
pusha
add
push
mov
cmpsl
mov
lock
sub
jae
je
repz
int3
adcb
cli
mov
sub
jnp
je
jnp
scas
or
jno
add
jecxz
inc
in
fdivrs
pop
push
xor
enter
outsb
xlat
xlat
inc
inc
dec
push
shll
in
mov
lret
sub
repz
pop
jmp
pop
mov
push
movsb
mov
mov
xor
jle
mul
cltd
pop
imul
xchg
iret
icebp
add
cmp
orb
sarl
dec
cmpsl
adcb
xchg
pop
push
push
js
or
hlt
in
jne
addr16
adcb
ss
cmc
and
or
xor
or
sub
fcompl
fbstp
cmp
ds
sub
fs
jmp
out
movsb
imul
mov
lods
push
and
push
pop
ds
push
into
ljmp
lret
out
aad
sub
mov
jno
call
mov
adc
inc
loopne
xchg
cmp
mov
je
jae
xchg
jge
lcall
imul
lds
push
stos
mov
mov
fucomip
sub
mov
mull
icebp
mov
lock
dec
std
xchg
push
sub
mov
es
push
mov
jno
push
cmp
jmp
sub
enter
jl
fldenv
lcall
push
pop
xchg
outsl
mov
xor
mov
mov
mov
test
ljmp
inc
jecxz
add
cmp
mov
stc
inc
jecxz
enter
ret
ds
sahf
test
adc
movsl
mov
ret
test
or
add
sbb
cmp
dec
cmp
mov
push
xchg
inc
js
cltd
flds
pop
sbb
cmp
cld
push
add
xor
adc
negb
ret
and
sahf
pop
pop
mov
icebp
inc
iret
jg
xor
mov
dec
scas
int
push
rclb
pushf
push
out
ds
stc
addb
das
sbb
aas
jecxz
add
lods
scas
lds
sbb
push
dec
xor
test
sub
adc
inc
std
mov
outsb
pushl
jb
out
es
pop
dec
push
lock
idivl
shrl
enter
pop
sub
imul
subb
lods
daa
es
test
pop
pop
add
pop
push
rep
lret
pop
pusha
lcall
andl
loope
int3
push
imul
loopne
subl
xchg
adc
scas
loop
out
pusha
vmaxss
push
out
jecxz
add
sub
sbb
stos
fwait
sub
xor
into
stos
pop
jp
push
adc
data16
test
nop
ja
jl
xchg
xlat
push
test
call
mov
mov
push
test
cmp
loope
xchg
mov
push
ret
enter
loop
and
or
subl
push
pop
or
push
js
sbb
aam
sahf
adcb
cmc
jnp
pop
xor
jne
in
jb
add
push
and
jns
dec
mov
in
sub
gs
out
push
cli
mov
stc
test
or
dec
loopne
fmul
imul
mov
ret
dec
push
rep
mov
sbb
add
xchg
sbb
pop
jbe
push
or
mov
cmc
fildl
or
xchg
lea
sysexit
mov
aaa
cmove
fmulp
xor
xor
xchg
push
jne
clc
test
pop
ja
sub
mov
cmpsl
xor
inc
sub
cli
push
xchg
sub
xor
call
lret
xchg
adc
repz
jge
je
mov
jecxz
xchg
insl
cwtl
lcall
and
xchg
das
subb
scas
repz
pop
xchg
scas
popa
sub
filds
push
repnz
cmpps
xchg
xor
push
sub
loop
xchg
pop
cwtl
mov
mov
cld
jno
repnz
jp
int3
insb
pop
xchg
enter
hlt
add
adc
xchg
and
enter
or
mov
push
push
pushf
aad
out
mov
mov
jbe
xor
add
sbb
adc
inc
push
ja
and
imulb
or
sub
paddusw
shrb
adc
ss
xor
or
out
and
mov
lret
sub
jns
mov
dec
fs
xor
cmc
sbb
adc
push
sti
arpl
test
push
pop
ss
int
std
and
sti
cmp
adcl
cmc
lahf
das
jmp
mov
mov
jo
ret
cmp
push
popa
xchg
cmc
pop
cltd
pop
inc
gs
pusha
lods
inc
test
xchg
fcompl
xor
adc
push
cs
xor
sbb
sub
pop
lods
into
jge
hlt
and
shll
int3
sti
xor
adc
leave
shrl
ljmp
adc
fidivrs
and
fs
jp
les
pop
dec
jb
and
inc
mov
xchg
xor
push
stos
sbb
imul
xchg
in
or
pop
pop
sbb
jne
movsb
adc
mov
xchg
jns
xor
inc
push
sub
jmp
gs
fcoms
sbb
std
adc
ror
das
or
aam
arpl
and
ds
jecxz
sbbb
cmp
xor
hlt
push
mov
xor
in
lods
mov
adc
xchg
icebp
std
call
lods
sub
or
mov
pop
test
xchg
jl
mov
fdivl
push
loope
push
divl
mov
adc
pop
jge
pusha
mov
sub
lds
pusha
inc
add
xor
pushf
test
cmp
int
test
pop
ret
out
add
push
mov
and
mov
movsl
and
scas
pop
imull
out
mov
out
movsl
jb
ret
or
or
hlt
rol
push
repz
push
mov
sbb
mov
imul
inc
imul
push
push
cmc
data16
xchg
movsl
bound
sub
ss
pop
stos
in
cs
xor
or
jl
sub
add
imul
daa
imul
subb
fs
fdivrl
lods
pusha
push
sbb
das
sti
xor
jne
xor
cmpsl
sbb
int
aas
repz
int3
stos
mov
inc
frndint
lea
lret
and
jae
mov
mov
mov
fbstp
inc
xor
cmpsb
adc
mov
repnz
fcmovnb
cli
aad
pop
popf
mov
push
jge
cwtl
inc
popa
push
mov
xchg
sub
out
insl
mov
das
scas
shrb
xchg
into
mov
push
mov
outsb
sahf
das
sub
repz
je
stc
lods
add
mov
out
int3
cmp
mov
add
xchg
xor
sub
xchg
mov
push
imul
cmpsl
leave
pop
pop
pop
inc
nop
mov
add
les
xchg
ja
cmp
and
sub
stos
rcr
xchg
mov
pop
xor
mov
pop
je
and
popf
and
sbb
mov
cmp
and
push
mov
insl
int
out
dec
in
in
xor
subb
leave
jnp
mov
js
out
add
fcomps
and
mov
fisttpl
ret
sbb
ret
gs
add
mov
aaa
cli
or
push
push
repnz
fldcw
cmp
xor
pop
mov
pop
push
ds
outsl
sbb
rorb
fstpl
mov
xor
sub
aaa
mov
mov
roll
movsl
iret
sub
inc
cli
add
out
pop
cltd
or
dec
mov
xchg
xor
shll
out
notl
push
lods
mov
fistl
and
enter
loop
cli
xor
iret
fldt
orb
mov
clc
test
int
adc
jb
js
outsl
or
jb
xor
push
ss
in
sub
push
pop
mov
addr16
inc
nop
dec
hlt
jnp
mov
mull
test
push
dec
xchg
inc
icebp
out
lahf
cmp
pop
fnstenv
xor
js
xchg
cmp
into
mov
mov
lods
cmp
push
jmp
jns
ret
push
add
dec
lock
sub
push
test
xchg
and
cwtl
ret
xchg
std
xlat
out
xlat
bound
ss
adc
ret
mov
and
push
mov
sub
cmp
movl
dec
es
negb
jp
mov
xor
cwtl
jae
or
or
jecxz
scas
fmulp
xor
lds
or
icebp
ja
sbb
xor
sbb
insb
rcrl
or
add
mov
out
leave
ret
andl
mov
inc
jecxz
push
test
es
adc
push
movsl
lcall
pop
mov
fsubrs
popf
jmp
dec
in
mov
ss
nop
xchg
es
xchg
ja
test
in
insl
aam
mov
jecxz
push
test
rcrl
rorb
popa
push
and
cmp
ret
scas
rorb
cmp
mov
jae
call
xchg
cmp
addl
xor
fsubrl
pop
mov
inc
jbe
jmp
int
jle
lcall
add
xchg
fidivrs
mov
jge
fidivrs
and
lods
nop
jae
scas
adc
or
push
pop
xchg
xchg
cs
push
push
pop
add
cld
lea
pusha
jl
outsl
sbb
inc
pop
test
dec
jnp
sub
sahf
cmp
add
jno
push
xchg
insl
jb
inc
xor
or
mov
mov
xchg
bswap
sub
push
ds
and
std
or
mov
jbe
fimuls
pop
call
jle
or
jmp
xlat
mov
inc
sti
aaa
add
lock
adc
mov
shll
stos
jge
ljmp
push
mov
popf
call
loop
popa
inc
mov
add
sbb
or
testb
mov
xchg
sub
pop
jecxz
insl
jbe
adc
pop
fnstsw
pop
aaa
sahf
pop
test
inc
mov
pop
fstl
push
and
xor
dec
jl
cltd
nop
cmp
lods
xor
int
inc
cltd
dec
and
test
jp
or
andl
pop
aad
and
sbb
add
out
test
adc
push
mov
clc
push
sub
cltd
cmp
sti
pop
frstor
sti
and
xchg
add
into
xchg
xor
rorb
mov
stos
add
push
and
xor
adc
pop
lea
ds
in
cltd
push
out
sbb
sti
test
arpl
and
cld
xchg
fwait
in
mov
cmp
testb
pop
lea
xchg
inc
call
mov
out
xchg
cli
mov
sbb
xor
push
lock
push
fildll
add
xchg
in
mov
cmp
hlt
popa
faddp
or
inc
add
pop
adc
sub
mov
stc
xor
jo
loop
mov
aam
fildl
push
mov
mov
mov
xor
sub
jmp
jle
fwait
pop
mov
mov
ljmp
push
xchg
sbb
test
out
lds
mov
dec
add
adc
jae
mov
add
cmp
int3
sahf
sub
push
loopne
sbb
hlt
test
add
fs
pop
or
mov
adc
jg
insb
in
push
xor
aam
mov
jmp
mov
lahf
jle
sub
inc
arpl
inc
leave
or
je
or
frstor
cmp
outsl
mov
dec
pop
mov
cld
stc
loop
cmp
icebp
cmp
mov
test
es
out
pushf
inc
inc
mov
imul
push
inc
jmp
jmp
mov
push
daa
fdivr
adcl
jl
loop
outsb
jmp
lods
push
insl
test
lods
negb
lock
mov
pop
dec
xor
fstl
mov
int3
inc
hlt
js
ss
nop
lret
adc
add
xor
call
lret
hlt
cmp
sub
pop
outsb
jle
idivl
pop
push
movsl
mov
and
mov
push
adc
inc
imul
xlat
mov
xchg
cmp
fstpl
push
stc
xchg
in
jns
popf
or
push
or
pop
lock
ret
sub
xor
pushf
nop
cltd
or
ja
jg
shlb
in
mov
cmp
adc
mov
or
mov
lcall
lret
adc
pop
mull
mov
neg
mov
outsb
lahf
pop
inc
inc
sub
push
out
sub
leave
shlb
insl
sahf
mov
js
fsubl
pusha
jge
or
ja
sub
outsl
dec
or
inc
popf
dec
xor
outsl
rorb
push
stos
les
test
std
mov
addr16
pop
orl
pop
mov
jno
stos
ret
iret
lret
fidivl
jecxz
jp
push
xchg
mov
mov
ret
xlat
lea
aas
push
sbb
adc
sub
push
call
jb
inc
stc
xchg
jnp
mov
mov
testb
xor
cmp
and
insl
jnp
jnp
mov
xor
fcmovnb
mov
mov
xchg
bound
les
and
jae
stos
add
jb
jae
insl
stc
test
movsl
scas
orb
inc
out
jge
sub
test
cmp
push
lret
out
inc
mov
mov
cld
xlat
sbb
divl
test
into
dec
or
and
mov
lock
lahf
sub
push
or
dec
jb
or
jo
call
jg
sub
mov
popa
mov
add
ja
pushf
xlat
jnp
imul
and
or
xor
mov
lret
fcmovb
and
mov
roll
add
mov
jo
stos
sbb
fsubl
mov
aaa
mov
add
scas
dec
xor
mov
enter
add
xor
pop
xor
dec
mov
mov
ss
js
sub
int3
sbb
das
mov
jp
mov
jp
insb
stc
fsubl
cmp
cmpsb
xchg
or
gs
and
sti
adc
sbbb
or
cld
icebp
sub
data16
sarl
dec
ret
pop
std
fs
inc
lods
mov
and
jg
jo
loopne
int3
inc
jbe
xchg
push
loopne
mov
outsb
movsb
bound
dec
sbb
add
or
or
mov
bound
mov
daa
roll
ljmp
outsb
mov
xchg
mov
dec
lods
in
fadd
adc
xor
or
mov
dec
repnz
dec
sbb
test
test
pop
repnz
pop
aam
xor
inc
xor
mov
cmp
scas
inc
sub
sbb
push
jns
dec
data16
add
push
pop
cld
repz
add
push
loop
std
faddl
pop
and
mov
xchg
stos
cld
xchg
and
or
push
sahf
push
push
pusha
jns
popf
je
jnp
lcall
aaa
jmp
lcall
mov
xor
sub
mov
ljmp
es
mov
in
xchg
pushw
or
dec
movsb
cmp
jo
iret
sbb
outsb
data16
je
fs
movsl
sbb
adc
ja
in
jmp
daa
fstl
sbb
cmpsl
bound
into
bound
ret
cltd
or
loop
and
cmpsl
mov
loopne
adc
in
sub
dec
cmp
fildll
mov
sahf
cmp
pop
cmp
sub
cmp
cmp
mov
mov
jne
mov
cmpsb
test
sub
imul
pop
call
jle
push
mov
mov
in
add
jne
pop
push
or
loop
lock
sti
lret
leave
push
out
clc
je
rcrl
push
sub
int
mulb
js
push
push
mov
jge
out
jo
cmp
cli
pop
inc
mov
loope
adc
cmp
xchg
add
and
or
js
mov
pop
aad
lds
dec
sahf
aam
cmpsl
mov
icebp
shr
mov
fs
cmp
test
test
call
and
jo
ss
push
and
pop
mov
inc
insl
int3
rcrb
fcomp
xor
out
fwait
or
mov
push
dec
stos
push
push
mov
jno
jno
rcll
stos
jge
leave
push
xchg
dec
jne
mov
test
mov
out
repnz
out
movsb
mov
outsl
dec
sub
outsb
loop
pop
mov
nop
xlat
and
out
aam
sbb
dec
fldl
dec
adc
out
lods
jp
rclb
sbb
test
outsl
test
repnz
jmp
jno
mov
mov
push
aam
sub
ljmp
mov
bnd
cmp
rolb
fs
inc
inc
lret
in
nop
sbb
add
mov
mov
push
dec
xchg
xchg
aam
pushf
shr
cmp
or
cld
sti
out
mov
add
pop
int
insb
jbe
push
inc
sub
mov
mov
adcl
and
dec
fnstsw
loop
outsl
mov
xchg
roll
push
scas
mul
dec
mov
xor
push
nop
or
fistl
cmp
out
scas
jp
rorl
mov
cmp
xchg
sub
cmp
test
jp
out
sahf
xor
jae
mov
sbb
add
or
into
and
ljmp
cli
adc
sbb
call
pop
sti
cmpsl
lea
jo
into
loopne
fsin
push
mov
setne
pop
or
les
push
push
movsl
rclb
dec
xlat
repz
int
pop
roll
es
xchg
outsb
lock
add
lahf
dec
aad
loope
add
lods
icebp
jl
lods
mov
sti
in
negl
adc
test
imul
inc
hlt
test
sub
jle
push
stos
sti
subb
dec
in
out
cwtl
lock
lret
in
add
fucomp
insl
mov
sbb
cmp
or
add
test
sub
inc
in
jmp
cmpsb
or
faddl
fmull
xchg
sbb
inc
xchg
out
inc
lcall
sub
dec
idivl
add
fsubrl
jae
adc
xchg
pushf
gs
and
mov
into
push
outsl
inc
mov
les
lcall
inc
and
pop
xchg
bound
popa
sub
push
add
sbb
je
in
sub
and
and
daa
shlb
nop
adc
jbe
sub
sub
push
push
aam
jle
mov
xor
jecxz
mov
test
les
sbb
addl
aam
loopne
scas
adc
mov
xor
das
lcall
ljmp
fistps
jle
xchg
push
popf
cltd
push
leave
les
dec
mov
jnp
xchg
lret
jg
inc
pusha
sub
movsl
push
sub
push
inc
aaa
shl
rcrl
mov
push
push
int
cmc
lret
xor
fcoml
loopne
cmpsb
jecxz
test
or
cmp
out
pusha
mov
hlt
arpl
cwtl
aas
imul
scas
andl
fistpll
xchg
dec
and
dec
popf
push
dec
mov
stos
cltd
aas
mov
call
lcall
push
out
sbb
iret
lcall
aaa
push
stc
stos
call
inc
add
dec
push
and
pop
std
xchg
mov
xchg
and
mov
repnz
dec
dec
and
sbb
cmp
loopne
lea
cmp
cmpb
repnz
jnp
dec
dec
stc
and
lahf
stc
sub
cmp
mov
jmp
jb
sbb
repz
lcall
xlat
sahf
xchg
daa
xorb
adc
pushf
cs
xor
mov
push
cltd
hlt
test
inc
add
push
popf
das
stc
testb
mov
xchg
xor
mov
adc
insb
pop
lahf
mov
leave
jne
mov
call
push
dec
mov
cmpl
and
inc
sbb
push
je
inc
ja
in
cs
jg
jo
lcall
mov
pusha
int
shrb
add
cwtl
fnstcw
jg
cmp
or
stos
bound
adc
ss
addr16
jne
sub
jns
push
movsb
in
pop
ja
cld
repnz
sub
mov
xor
and
ljmp
sar
movsb
add
xchg
xchg
je
fidivrl
jns
pushf
dec
call
lahf
mov
push
dec
xchg
mov
out
in
jmp
push
repz
rolb
ja
pop
gs
repnz
lahf
sub
in
js
imul
mov
add
sti
inc
dec
into
dec
into
outsl
dec
sbb
es
sub
popf
jo
add
shrl
repz
ret
and
out
dec
scas
popf
jbe
or
jne
pop
mov
pop
sahf
subl
icebp
push
mov
shlb
ret
jno
cmp
pop
iret
nop
aad
push
xor
outsl
push
test
mov
dec
aas
and
mov
lea
jg
push
xor
or
shrl
call
out
insl
adc
mov
test
inc
or
loop
testl
sub
push
inc
xchg
jg
data16
mov
pop
push
and
fcmovbe
insb
cmp
add
mov
pushf
loop
sub
mov
push
inc
pop
dec
sti
sub
jb
stos
jecxz
stc
insl
inc
add
pop
loop
adc
andl
loopne
or
loop
xlat
xchg
xchg
sbb
fdivl
xchg
or
pop
rclb
loope,pn
add
cmpsl
mov
bound
mov
outsb
insl
loop
into
mov
movl
int3
std
outsl
pop
das
or
sub
mov
push
insl
mov
insb
out
sbb
pop
pop
cmc
push
sub
int3
xor
fwait
iret
xor
pop
dec
fsubl
push
xor
adcl
sbb
adc
and
testl
mov
mov
hlt
cmp
mov
xlat
push
mov
aam
xor
mov
xor
fmull
int3
outsl
mov
in
cmpsb
test
cmc
pop
mov
arpl
and
popa
icebp
int
or
pop
sti
stos
and
push
jnp
sub
jns
pop
das
fisttps
popa
push
movsl
or
test
shrb
gs
scas
mov
mov
out
push
clc
pop
xlat
shlb
cmpsb
xor
mov
shrb
jae
xchg
lahf
stos
mov
fstps
aaa
mov
aad
add
dec
jns
push
mov
lret
cmpsb
cmp
test
push
mov
enter
jge
imulb
sub
enter
sbb
adc
setge
fs
jp
xor
test
test
iret
ficomps
in
arpl
arpl
pop
mov
push
xchg
push
jp
rorl
mov
imul
push
bnd
in
inc
lahf
insl
lock
call
adc
and
ss
lods
lods
push
add
mov
xchg
notb
sub
pop
pop
lods
flds
adc
jle
in
fildll
xchg
js
pop
js
jl
call
orl
lcall
add
or
and
pop
add
not
push
dec
mov
dec
and
fildl
push
mov
mov
jb
mulb
testl
pop
mov
clc
sahf
push
iret
dec
jb
test
cmp
arpl
into
add
fwait
hlt
adc
insb
outsl
xor
rcrb
and
push
mov
or
inc
fidivrs
lahf
jmp
push
mov
sarb
push
sub
dec
es
mov
and
pop
das
xor
std
outsl
enter
shlb
adc
sbb
pop
xor
push
sbb
add
dec
jne
cmp
rolb
jle
pop
sbb
clc
into
loop
jne
out
hlt
insb
lahf
and
aaa
jne
adc
push
in
xor
lret
or
loopne
int3
mov
push
cmp
push
call
xchg
or
test
ja
es
loop
cmpsb
cmp
in
xor
mov
scas
repnz
mov
sbb
in
iret
clc
jmp
in
adc
fwait
cs
sbb
inc
rorl
push
cmp
bswap
adc
sbb
push
and
inc
push
lahf
fwait
dec
sbb
push
repz
mov
push
mov
fs
jle
popa
dec
cmp
outsb
mov
dec
jne
sub
fcoms
cmp
pusha
bound
xchg
jle
hlt
loope
pop
cmpsb
jp
jbe
arpl
ljmp
dec
mov
dec
stc
cmp
popa
inc
mov
les
mov
test
jo
mov
mov
sbb
sbb
lahf
push
lds
push
out
dec
and
cmp
outsb
mov
leave
out
mov
mov
or
nop
jnp
add
add
mov
and
mov
ja
push
add
push
jmp
jne
es
jns
shl
push
sti
or
mov
cwtl
pop
pop
xchg
lcall
add
add
movsl
hlt
pushf
fnstsw
pop
mov
jge
add
pop
push
xchg
repz
ret
movsl
or
push
xor
mov
mov
int3
pop
adc
shrl
test
insl
cmovs
push
fsubrp
pop
cwtl
adc
xor
fs
mov
jo
mov
adc
pop
jae
jo
jmp
imull
test
out
das
jg
cmp
dec
xchg
sbb
lea
mov
out
les
push
ret
dec
fidivs
in
in
xchg
out
cwtl
insb
xchg
adcb
xor
cs
push
je
mov
lahf
jecxz
pop
mov
add
sbb
loop
fmulp
out
bound
arpl
add
movhlps
mov
test
and
inc
add
pandn
rclb
test
js
xor
aas
xchg
mov
sbb
pop
icebp
fnstenv
cld
adc
icebp
aaa
xchg
fildl
add
add
test
xor
xchg
inc
loope
xor
pop
mov
xchg
out
fimull
adc
rcll
push
shll
cwtl
fwait
jp
je
mov
lahf
mov
xchg
loope
sub
xchg
into
push
pop
xchg
stos
pushf
movsb
jo
inc
mov
sub
stos
add
popf
sarl
inc
fisubrl
xchg
dec
sbb
in
push
push
les
test
xchg
or
aas
movsb
sbb
shl
push
mov
outsb
and
cmp
xchg
fisubrs
insb
push
cmp
xor
jle
pop
stos
pop
flds
xchg
pslld
jp
sbb
push
inc
pop
clc
mov
add
icebp
push
jnp
or
xchg
xchg
out
sarl
faddl
stc
mov
mov
or
cld
and
repz
and
mov
cld
insl
jge
cmpl
ds
mov
push
xchg
jne
add
rolb
mov
and
hlt
adc
pop
ret
ficompl
jae
cmpl
adc
inc
mov
das
fisubrl
jb
aam
test
cld
in
push
cmp
xor
rorl
sub
and
lcall
insl
xchg
loope
adc
rol
add
lret
in
mov
jb
inc
inc
cmp
gs
dec
push
cmp
jno
or
dec
mov
cwtl
inc
xor
cld
subb
inc
mov
or
pop
push
add
pop
mov
sbb
xor
insb
sbb
inc
dec
mov
cmpl
dec
fidivrl
cltd
dec
xchg
es
add
mov
imul
out
adc
jns
xchg
mov
mov
ja
dec
mov
mov
or
fcompl
dec
popl
sbb
push
and
sub
out
cmp
mov
inc
push
xchg
adc
sub
jl
adc
sbb
inc
andb
cmp
jnp
mov
int
ret
adc
icebp
and
mov
nop
cs
cwtl
cmc
xor
fwait
inc
mov
popa
mov
test
jge
adc
shlb
ret
adc
pop
adc
jp
in
fidivrl
lds
or
or
mov
dec
adc
aas
mov
mov
dec
cwtl
and
out
adc
fwait
insl
fidivl
add
or
dec
es
subl
and
or
inc
push
les
xchg
lds
icebp
sub
cltd
lahf
rorl
mov
mov
push
mov
sub
popf
lds
sarl
fs
mov
stc
jns
data16
dec
in
or
sbb
fnsave
jg
icebp
mov
mov
lds
stos
jnp
dec
loope
xchg
dec
mov
mov
test
jnp
outsb
cmc
mov
sbbb
mov
rcl
jnp
lret
test
inc
inc
or
fprem1
aam
fs
stc
jmp
in
imul
mov
movsb
nop
mov
icebp
cmpsb
cltd
frstor
mov
xor
shl
into
testb
jbe
cmp
call
and
ficompl
jge
data16
mov
and
inc
rdmsr
data16
push
sub
int3
mov
mov
push
pop
jb
loop
lock
repnz
xor
mov
loope
mov
xlat
jge
out
adc
push
pusha
push
mov
cmp
pop
cmp
scas
push
iret
mov
test
je
adcb
mov
lcall
pop
sarb
cmp
pop
or
jl
inc
pop
subl
pop
jnp
push
movsb
in
out
pop
or
mov
in
aas
lcall
in
or
mov
xchg
dec
out
leave
sbb
mov
or
push
jp
push
scas
scas
add
mov
jbe
jb
cmp
sahf
stc
push
sbb
push
sbb
xor
hlt
in
mov
fnstenv
das
roll
xor
rcrb
xlat
stos
xchg
mov
cld
xor
cmp
inc
jmp
les
pop
repz
shr
mov
push
add
jae
xchg
sub
inc
push
sub
rclb
imul
scas
and
gs
mov
mov
test
fildl
mov
mov
rorb
cmpsl
lret
mov
lahf
aad
fsubl
gs
ret
aas
int3
nop
flds
xor
aam
ja
xchg
in
out
xchg
movsl
mov
inc
xchg
xchg
pop
xchg
fistpll
sub
sbb
fldl
jmp
add
xchg
sbb
iret
test
cli
pop
or
jne
subb
mov
sub
fildll
mov
bound
lds
push
and
pusha
and
xchg
sbb
pop
in
insl
or
jge
mov
jle
or
and
or
adc
cmpb
arpl
test
pusha
dec
and
inc
aad
xor
fsubs
fldenv
and
test
mov
mov
or
inc
xor
lahf
out
in
xor
jnp
mov
mov
imul
push
xchg
push
jbe
jp
dec
and
sub
test
push
test
push
call
push
cmc
jmp
out
inc
outsb
fld
call
xchg
clc
decb
push
push
js
scas
bound
add
pop
mov
fcoml
push
inc
mov
std
cltd
xchg
jmp
mov
and
cld
xchg
xchg
adc
mov
movsb
mov
dec
cltd
adc
fistpl
mov
xlat
imulb
punpcklwd
leavew
repnz
lds
repnz
add
jle
jge
notb
sbb
popf
sahf
int3
lds
cmpsl
push
popa
mov
in
cmc
adc
add
xchg
pop
cmp
shrl
mov
jecxz
das
stos
push
leave
fiadds
xchg
repz
xchg
insb
sbb
addr16
inc
imul
cmp
sub
pop
in
sbb
enter
jle
push
testb
jp
pop
lods
mov
scas
xchg
and
push
pop
dec
repz
clc
imul
arpl
sbb
and
inc
xchg
or
imul
sub
xor
aad
cmpsl
cmp
sub
les
push
testl
shll
test
push
sarl
int3
sbb
push
arpl
ret
mov
mov
xor
inc
insb
bound
jbe
pop
stc
add
xchg
sub
mov
les
arpl
popa
xchg
and
test
in
movl
cld
and
test
divb
xchg
jb
and
add
ret
inc
push
cmp
xchg
fnstcw
pop
mov
pop
fwait
push
ljmp
mov
movsb
pop
addr16
mov
out
xor
loop
out
push
jnp
mov
insb
incb
fs
adcl
push
fiaddl
mov
and
xor
cmpsl
enter
test
mov
add
cmp
xchg
cmp
mov
loope
pop
mov
movsb
sbb
dec
sbb
repz
imul
popf
push
xor
cmp
sbb
aam
aam
imul
sub
push
or
jns
pop
ss
jmp
mov
jl
and
roll
outsl
jmp
pop
jg
js
jns
xlat
add
cld
in
arpl
push
and
xor
je
andl
ljmp
stos
sahf
movsb
ret
jecxz
das
pop
nop
dec
scas
sbb
jle
jmp
sub
insl
pop
lea
push
scas
out
mov
inc
pop
mov
cwtl
lods
idiv
cmp
mov
and
jle
pop
sub
hlt
push
cmpsl
add
pop
negl
mov
mov
xchg
sbb
pop
mov
inc
and
outsl
shr
mov
mov
out
ret
sub
mov
ds
mov
mov
sub
push
mov
mov
xor
jns
lcall
mov
mov
jne
dec
aaa
bound
lock
scas
cld
jg
dec
ds
or
or
push
imul
mov
xchg
inc
xor
aam
movsl
lret
ja
ret
add
push
push
push
or
adc
cmp
sub
enter
sub
repz
mov
lret
out
lea
push
movsl
das
mov
lahf
jb
pop
mov
cmp
aas
jns
adc
push
sti
cltd
push
pop
cltd
mov
dec
mov
jmp
ja
jg
sub
rcl
mov
sub
out
test
pushf
out
jle
lahf
cld
or
cmp
mulb
cmpb
cmp
jmp
je
insl
cmpsl
xor
shl
mov
in
bound
and
subb
movsb
sahf
stos
int3
lods
cmp
fisubrs
aas
or
fld
js
mov
xchg
int3
push
ds
shlb
sbb
daa
adc
push
std
sbb
jb
aam
xchg
out
insl
enter
jl
shrl
scas
shrb
clc
movsb
imul
push
dec
outsb
dec
icebp
sub
daa
xor
pop
fstl
add
sbb
fimull
out
popa
lock
xchg
sti
push
aaa
push
xor
icebp
pop
rcrb
mov
lret
inc
cmpsl
pop
mov
cmpb
add
daa
mov
pop
inc
mov
jne
adc
frstor
mov
les
hlt
movsl
xchg
jb
jnp
in
loope
inc
lds
pop
sahf
and
hlt
ficoms
test
add
inc
stos
adc
fidivl
mov
add
cmpb
mov
mov
imul
loope
out
jmp
pop
sub
sub
push
adc
shrd
in
sub
push
dec
or
filds
fildl
pop
sbb
mulb
mov
mov
xchg
roll
std
xchg
repnz
loop
or
sahf
xchg
movsb
ret
mov
jp
mov
arpl
push
bt
mov
hlt
jae
stos
stc
clc
fisubrl
push
fwait
dec
lahf
or
cmp
call
out
orb
iret
outsb
clc
dec
shll
jae,pt
dec
mov
outsl
mov
pop
sbb
int3
mov
mov
clc
stos
dec
pop
outsl
imul
loopne
into
aaa
xor
xchg
dec
push
lods
jae
sub
dec
lea
stos
pop
mov
je
jnp
pop
add
add
jge
movsl
ret
or
inc
ret
sbb
ljmp
jle
cmp
pop
jle
sbb
fsubrs
dec
gs
fists
sbb
pop
push
sbb
fadd
sub
repnz
mov
pop
mov
jg
jl
jle
cld
int
xor
jg
xchg
fmull
adc
addr16
jns
arpl
sbb
push
sub
movsl
xchg
cmp
dec
inc
fldcw
jg
addr16
imul
mov
das
dec
scas
push
lahf
fldt
xor
xor
mov
xchg
scas
daa
fdivrp
jp
pop
int
xor
enter
fdivs
inc
movsl
lea
xor
add
addr16
jne
mov
dec
insl
jecxz
add
push
lea
jne
mov
mov
lea
mov
xor
add
or
aad
xor
adc
push
inc
shll
mov
pop
out
adc
dec
add
gs
mov
dec
sub
push
jge
push
lea
loope
jno
popf
adc
jle
cmp
mov
mov
ret
pop
arpl
stos
shlb
movsl
lods
inc
pop
mov
dec
lods
or
pop
or
out
sbb
ret
bswap
xchg
xchg
sub
lds
pop
mov
push
xchg
dec
xlat
int
pusha
int
adc
xor
inc
fwait
outsl
or
insb
dec
movsl
and
jg
adc
mov
push
stos
mov
mov
addr16
push
push
jmp
leave
ret
jno
mov
inc
or
cmp
mulb
shll
jmp
xchg
jno
mov
hlt
movsl
out
add
dec
orb
jne
jp
jl
mov
scas
stos
fnstcw
rorl
nop
or
ret
insl
push
mov
ucomiss
cmp
jne
mov
int
lock
sbb
iret
sbbb
movsl
mov
dec
push
js
lret
jp
push
push
push
mov
add
dec
jl
push
mov
fsubrl
loope
mov
sbbl
clc
mov
sub
mov
hlt
sub
xchg
stc
fistps
fsubrl
inc
icebp
arpl
fimuls
sbb
cmp
dec
inc
jb
hlt
jle
sarb
sbb
and
imul
leave
dec
fdivrp
fidivl
in
shrl
adc
cmc
cmp
push
lret
jmp
sub
jnp
and
sbb
shlb
push
ret
popa
xor
imul
outsl
rcrb
test
add
aad
out
xor
lret
pusha
mov
mov
aaa
das
push
ret
cld
repz
inc
jno
stc
enter
add
js
lods
push
mov
repnz
loop
sbb
xchg
mov
stos
fsubrl
popa
cmp
push
mov
cmp
cmp
dec
sti
call
or
int
inc
cs
add
outsl
push
pop
jl
sbb
fidivl
add
xor
pusha
cltd
inc
xchg
stc
int
scas
cmp
sub
or
lcall
xchg
sub
adc
clc
cmpb
pop
test
notb
cmp
cmp
inc
and
shrb
xor
mov
gs
call
hlt
xchg
hlt
inc
lods
jle
inc
and
out
inc
inc
sarb
scas
xchg
sbb
hlt
jle
data16
or
aaa
jns
inc
push
xchg
in
jbe
jb
lea
int3
xchg
mov
mov
sub
outsb
cmc
cmp
mov
pop
xchg
mov
jne
pusha
adc
xchg
outsb
jg
and
mov
pop
dec
pop
add
jmp
add
inc
fcoml
test
fcmovb
arpl
cld
push
pushf
cmp
jo
lret
xchg
lea
icebp
enter
daa
in
leave
mov
cwtl
outsl
cmp
jb
jnp
xchg
push
push
out
mov
loope
imul
pop
stos
loopne
push
push
dec
into
gs
fildl
xchg
bound
test
pop
fadds
adc
fldt
dec
jl
sbb
outsb
ds
sub
dec
jbe
sub
popa
outsl
imul
or
sti
push
in
xchg
bswap
jae
jg
icebp
and
out
mov
add
insl
mov
mov
das
testb
ror
repnz
shlb
pop
cmp
or
dec
subl
aam
flds
lods
xchg
xor
jns
mov
xchg
mov
std
inc
jbe
adc
mov
outsb
loopne
shl
mov
inc
es
jmp
scas
lea
or
mov
inc
sbb
jmp
int3
hlt
test
out
sarl
ja
in
aam
lock
mov
sbb
lret
bound
jl
aas
jle
popf
lock
jl
push
test
lret
test
sub
dec
xor
adc
adc
lods
pop
scas
cmp
fmuls
fsts
ret
sub
sub
add
pop
xchg
pop
mov
mov
cmp
imul
adc
push
and
lock
adc
ljmp
adc
scas
mov
xlat
mov
inc
data16
int3
cmp
xor
scas
aaa
and
test
and
stc
mov
ja
sub
sahf
or
outsb
cmc
sub
pop
adc
in
insl
pop
in
lock
push
fiaddl
cltd
xor
jne
dec
cli
adc
pop
outsl
stos
pop
fcom
mov
mov
xor
mov
jg
popa
jno
sbb
inc
add
hlt
mov
add
psllq
hlt
mov
xchg
dec
stos
popa
cmp
out
cmpsl
xlat
addr16
sbb
cmp
lock
mov
dec
stos
jmp
outsb
outsl
or
mov
add
pop
fiaddl
addr16
outsb
in
mov
add
leave
shl
insb
inc
cmp
jo
xchg
neg
popl
in
sub
mov
push
nop
aam
shl
outsb
subb
daa
jae
insb
lods
loopne
mov
push
test
inc
imul
and
ret
mov
out
es
loope
pop
push
push
fs
lods
mov
out
jns
das
test
xchg
arpl
xor
jle
push
lods
mov
dec
jecxz
bound
mov
add
mov
addr16
xor
daa
pop
pop
insb
push
push
mov
notl
push
js
loop
jle
cli
lods
add
insl
cmp
jns
data16
stos
dec
orl
dec
inc
lods
inc
shr
pop
push
push
push
fscale
dec
shlb
loope
pop
fisubrs
pusha
mov
mov
or
fdivrs
cmpsb
push
fcmovb
daa
inc
sub
js
int
les
pop
aas
lods
push
xchg
fisubl
mov
dec
mov
out
adc
jb
fidivs
loope
hlt
or
adc
in
cvtdq2ps
mov
roll
sbb
out
sbb
mov
hlt
inc
stos
pop
xlat
cld
add
ss
mov
iret
xor
jae
idivb
leave
dec
ja
mov
pop
insl
hlt
xchg
pop
dec
test
add
pop
fs
mov
sbb
dec
testl
loope
inc
xchg
lods
cmp
inc
jle
push
aam
add
fisubrl
fstps
stos
sbb
xchg
sub
or
dec
add
pop
orl
jbe
mov
outsl
lcall
adc
mov
test
repz
ds
sbb
loop
push
xchg
push
icebp
xor
and
fxch
fs
idivb
inc
aaa
xlat
mov
shrl
lret
pop
call
xor
lock
add
add
sti
push
out
cmp
andb
hlt
test
mov
nop
push
inc
xor
dec
mov
and
xlat
aam
shll
jo
mov
push
das
sarb
mov
aad
or
les
ret
out
mov
mov
adc
xor
clc
sbbl
dec
outsl
daa
mov
inc
iret
sub
mov
add
out
lcall
leave
or
ret
dec
stos
andb
xsha256
cmpsb
rcll
push
and
sbb
push
cwtl
xchg
xor
dec
adc
sbb
lret
ja
dec
xor
sub
push
mov
cmc
hlt
jp
fs
ret
xor
sbbb
mov
sub
leave
adc
sbb
orl
jg
mov
notb
gs
jo
xor
lods
pop
mov
aad
test
mov
ficoml
pop
push
sub
sbb
inc
mov
jmp
out
aam
cmp
pop
cmpsb
cmpsb
sbb
psubd
cld
loopne
fildl
push
xchg
into
dec
pop
cmp
nop
jl
lea
or
xor
push
xchg
mov
mov
enter
inc
sti
inc
mulb
cwtl
pop
jnp
movsl
or
mov
and
jle
or
lods
jno
sbb
inc
ljmp
call
imul
rcrl
xor
sub
push
lods
mov
lahf
bound
dec
int
jmp
push
xchg
jl
fld
loopne
lcall
movsb
or
cmp
repz
rcl
fdivr
jb
pop
or
mov
test
fdivr
mov
sbb
inc
imul
cmc
lahf
jne
cmp
shll
dec
pop
sbb
leave
lret
fstp
lret
cmp
mov
push
cmp
pop
lret
mov
daa
dec
out
mov
sub
dec
int
outsb
adc
and
cmp
cmp
mov
adc
sub
into
push
add
sbb
fcomp
pop
sub
mov
pop
dec
dec
jmp
repz
jmp
ss
pushf
movsb
fnstenv
xlat
stc
jp
pushf
loopne
sahf
xchg
cmp
sbb
lock
adc
xor
and
je
xchg
leave
addl
inc
ja
ja
aad
aam
iret
cmpsl
rcrb
jecxz
xchg
shrb
outsb
js
pop
hlt
mov
les
jmp
sub
test
cmpsl
cmp
xor
dec
clc
mov
push
adc
and
call
cmp
insb
lret
test
lcall
fst
jnp
leave
pop
pushf
sbb
mov
xor
mov
pop
shl
mov
cmp
leave
out
mov
fisttps
bound
mov
in
jo
mov
negl
adc
aam
sub
mov
in
dec
in
xlat
jmp
fwait
in
add
ja
mov
fstpl
imull
ljmp
out
cwtl
jl
lcall
push
loopne
cmpl
mov
fchs
jmp
push
cmp
test
push
push
mov
stos
stos
mov
push
push
inc
mov
arpl
ljmp
sbb
aaa
push
or
sbb
jmp
in
fsubs
sub
in
push
push
scas
ret
cmp
sbb
rcrl
push
popa
sub
jg
dec
fstp
arpl
popf
clc
xchg
stos
pop
pop
in
imul
dec
movsb
loope
out
pop
rorl
push
cli
sbb
shl
in
sbb
rolb
mov
add
jp
mov
das
testb
adcl
xchg
es
pop
push
arpl
sub
mov
add
outsb
xor
in
xchg
pusha
inc
cmc
ljmp
mov
cmpsl
or
call
xor
sub
stos
vmulpd
and
push
pop
mov
fisubl
sahf
and
mov
int
push
dec
lock
loop
dec
out
movsl
and
push
sarb
in
fisttps
jmp
stos
dec
xchg
and
arpl
mov
out
sbbb
aaa
pop
aad
insl
aam
mov
in
cmp
sub
in
dec
dec
push
inc
mov
xchg
inc
push
movsl
ljmp
xor
popa
or
xchg
push
mov
mov
fs
shr
xchg
add
push
jle
repz
adcb
cld
or
mov
jge
add
in
dec
cmp
stos
mov
sbb
add
push
xchg
mov
out
das
jg
insl
jl
outsl
mov
fistps
and
inc
dec
inc
cmpsl
clc
lods
or
inc
repnz
lea
stos
test
leave
mov
int
inc
mov
xrelease
jmp
sbbl
lcall
jno
jecxz
mov
cld
sti
mov
shr
sub
xchg
jno
stos
dec
add
jle
inc
ljmp
sbb
js
out
ret
xchg
sbb
xchg
mov
mov
test
mov
jbe
stos
sbb
sub
mov
jecxz
or
sub
jne
in
arpl
rclb
push
inc
pop
and
bound
aad
cmp
push
jne
je
test
xchg
jb
orl
mov
xor
push
jmp
and
fstpl
loop
out
cmp
dec
push
int3
pop
push
scas
ja
cmpsb
outsl
sbb
jno
rcl
pcmpgtb
jbe
daa
es
xchg
mov
bound
adc
mov
sub
xor
mov
test
repz
xchg
lods
push
ror
pop
shrb
pushf
sahf
inc
mov
or
push
pop
mov
jg
push
sti
or
aas
bound
imul
popa
and
pushf
mov
cmpsb
fistl
clc
sbb
cmc
xor
jp
roll
fdivs
xor
iret
sbb
sub
ds
mov
dec
mov
inc
bound
sahf
into
jnp
out
dec
or
addr16
mov
stos
lods
ja
lods
hlt
and
xor
mov
stos
shlb
scas
or
adc
icebp
jle
shrb
adc
enter
shrl
add
xlat
inc
int
jo
mov
movsl
dec
pop
sub
mov
push
dec
call
addl
loop
mov
jmp
outsb
cmp
sub
xchg
mov
loopne
cs
inc
cmp
ljmpw
in
pop
enter
push
pop
aas
fistpl
add
push
add
inc
cmc
out
mov
inc
jno
lcall
xor
pop
call
xchg
ret
movsb
stos
repz
in
sub
sbb
adc
and
out
dec
test
popa
cmp
lcall
pop
lds
jp
shrb
push
mov
test
mov
mov
add
xor
xchg
adc
prefetch
or
or
std
add
adc
sti
mov
xchg
out
fisttpll
push
aas
sub
jo
insl
mov
fs
sbb
pop
mov
and
enter
aad
or
or
daa
hlt
mov
dec
mov
adc
add
dec
dec
pop
icebp
mov
out
cmp
inc
gs
push
jae
test
mov
sbb
mov
xchg
fs
inc
xchg
inc
cmp
fistl
test
xchg
adc
enter
lods
movsl
sbb
in
lea
dec
rclb
mov
mov
xchg
out
fcmovnbe
dec
test
ss
decb
je
xor
mov
addl
mov
addb
xor
loope
adc
bound
sbb
daa
nop
push
aaa
and
cltd
mov
pushf
xor
mov
xchg
das
in
mov
mov
inc
pop
scas
mov
cmp
cmp
gs
inc
into
lret
pop
fildl
jge
jo
mov
push
push
push
mov
mov
xor
cmp
repnz
sbb
fnsave
inc
stos
sbb
iret
in
ret
cmp
lret
filds
xor
repz
hlt
mov
lcall
mov
adc
pop
mov
fnstenv
shl
mov
sbb
adc
adc
je
jecxz
adc
repz
push
push
sbb
pop
sbbw
mov
mov
dec
cs
out
sub
aas
setl
jo
cmp
or
lret
jbe
cld
inc
or
add
lods
in
jecxz
add
pop
mov
inc
and
xchg
lea
inc
or
repnz
jno
mov
jp
jg
cwtl
add
sub
xorl
xchg
jnp
test
pushf
repz
dec
sbb
cli
mov
inc
dec
nop
fwait
mov
movsb
cli
jb
out
pushf
and
ror
inc
mov
aam
inc
jp
cmp
dec
addl
mov
xchg
inc
sub
decl
dec
jecxz
jmp
push
iret
adc
les
loopne
out
add
add
dec
call
lret
xchg
jo
mov
fstps
cmp
push
lock
inc
int
jbe
add
mov
or
shl
arpl
repz
push
pop
insb
adc
lret
lret
dec
add
inc
jae
pop
mov
repnz
xlat
leave
inc
shll
pop
add
arpl
imul
test
test
mov
icebp
cmp
cmp
adc
pop
mov
lahf
scas
mov
push
xlat
xchg
mov
push
jle
jae
mov
icebp
sub
cmp
fimull
std
mov
mov
xor
mov
lret
das
lea
out
movl
cmpsb
jns
pop
lret
xchg
push
pushl
mov
fidivs
cwtl
or
test
fwait
mov
adc
cs
push
xchg
adc
inc
push
ret
mov
lods
mov
sub
aaa
sub
push
push
mov
shll
adc
mov
mov
leave
inc
jne
mov
test
imulb
sbb
rcl
lret
mov
and
pusha
xchg
ljmp
xchg
cmp
or
orl
sbb
mov
or
mov
clc
jge
cld
jle
or
mov
adc
pop
imul
mov
cmpb
lods
repz
xor
mov
jmp
jecxz
popf
jge
ret
sbb
push
jle
pop
xor
cs
adc
sub
pop
insl
hlt
testb
cmp
push
int3
mov
push
aad
jp
hlt
adc
adcb
rcrb
push
jne
cwtl
jle
inc
jl
fs
mov
xor
push
mov
dec
lret
addl
rclb
cmp
or
imul
mov
idivb
cltd
mov
mov
fisttpll
ret
sbb
xlat
fisubs
add
arpl
stos
mulb
aam
imul
icebp
leave
push
popl
and
out
into
push
imul
xlat
ja
cwtl
out
imul
fistl
test
loop
mov
lds
jmp
loop
mov
ja
jns
add
or
fdivrs
sub
pop
push
push
push
test
push
icebp
pop
jg
inc
das
scas
cmc
inc
jae
cmpsl
es
ja
mov
out
dec
push
ret
nop
or
jnp
lods
adcl
inc
add
pop
dec
dec
xor
popf
pop
loopne
arpl
and
push
sub
xchg
fcmovu
and
mov
mov
sti
jno
sbb
nop
ficompl
repnz
push
cltd
push
sbb
rorl
into
adc
in
push
inc
das
jne
inc
pushf
outsl
xlat
xchg
fiadds
push
push
test
leave
xchg
or
mov
pushf
aam
lods
int3
test
lock
pop
scas
cmp
sbb
push
sarb
out
jmp
cmp
leave
mov
cmp
lahf
jns
fwait
js
mov
and
dec
pop
notb
les
ret
xor
gs
mov
in
adc
mov
mov
mov
cmp
dec
movsb
add
push
jp
shlb
lcall
loope
push
into
add
stos
lock
push
xor
scas
mov
and
mov
or
xchg
out
mov
push
bound
xor
rolb
rorb
inc
pop
add
push
jge
jmp
and
push
jns
fistpl
icebp
in
stos
jmp
mov
add
cli
shlb
xor
inc
sti
sub
inc
jmp
shlb
dec
cltd
bnd
push
stos
cmp
mov
push
add
jp
fsubrl
sbb
sub
push
sbb
cmp
jb
push
out
call
ret
adc
mov
clc
daa
sbb
xchg
xchg
xchg
mov
addb
rorb
sub
ljmp
mov
aaa
in
dec
push
mov
jne
or
cmp
iret
push
dec
daa
outsb
dec
pop
xchg
mov
jb
lcall
cs
mov
inc
pushf
jecxz
jmp
cmp
shrb
pop
rclb
xchg
rolb
mov
std
cmpl
add
inc
cli
cmc
xor
or
or
mov
loopne
sarb
iret
mov
dec
and
sub
frstor
dec
cmc
sub
adc
xchg
jb
xchg
mov
lds
adc
daa
bnd
add
adc
push
sub
sbb
mov
sub
inc
push
pop
gs
and
outsb
loop
dec
jne
pushf
pop
outsb
and
mov
mov
mov
aas
bnd
inc
aad
xchg
cwtl
scas
push
loop
mov
sub
inc
push
sub
add
cld
aaa
inc
mov
shlb
sbb
insl
fs
xchg
pusha
adc
pop
lock
jne
xchg
xchg
mov
mov
bound
dec
jmp
bound
loopne
xchg
fs
sti
daa
outsl
outsb
std
push
imul
dec
es
ljmp
pushf
lods
jle
jbe
ja
pop
out
test
es
push
jno
dec
enter
lods
and
test
xchg
xchg
cmpsb
lea
movsb
adc
icebp
cmpsb
aam
mov
pop
sub
in
loopne
lods
clc
push
push
pop
les
mov
imul
stc
loope
cwtl
insl
and
and
sahf
push
js
and
cmp
loope
out
adc
jge
sbb
imul
shrl
cmpsl
addl
aaa
scas
ds
dec
push
xchg
out
mov
pop
mov
mov
adcb
inc
cwtl
int
sbbl
mov
pop
xchg
pop
dec
aad
inc
add
scas
loop
in
mov
out
enter
incb
add
into
cld
imul
lcall
or
das
jno
mov
xor
cmp
pop
orb
xor
lods
sbb
stos
test
add
push
sbb
cmp
popf
stos
ja
andb
fcmove
insb
jmp
push
jns
add
popf
jne
or
scas
es
ficoms
sti
in
push
movsb
xchg
cmp
das
jecxz
and
or
out
mov
arpl
nop
xchg
push
sub
and
add
dec
test
loope
int3
or
sub
shlb
sahf
push
clc
mov
int
nop
popf
call
mov
movsb
leave
push
lret
sahf
pop
cli
fdivr
mov
ds
lahf
mov
in
xor
xchg
pushf
pop
js
aam
xchg
adc
push
loopne
insl
mov
jmp
js
fs
xchg
add
pcmpeqb
divl
movsl
dec
rol
and
mul
test
movsb
mov
and
lea
outsb
ret
mov
cmp
rclb
dec
mov
fs
mov
arpl
loopne
pop
add
js
mov
mov
cmp
inc
notl
dec
leave
pop
xor
mov
or
xchg
pop
fmull
xchg
lret
mov
nop
nop
gs
ss
jns
stos
imul
sub
inc
fs
cltd
rclb
mov
out
sub
movb
lcall
push
mov
pushf
cmp
enter
pop
sub
pop
scas
gs
mov
inc
mul
sub
and
outsb
aaa
sbb
xchg
fists
push
push
out
jbe
rolb
jo
stc
popa
pop
xor
push
incl
loop
jg
fisttps
int3
push
mov
xchg
mov
out
pop
inc
adc
fldcw
ret
add
ja
in
mov
nop
mov
stos
jp
fucomip
jmp
and
icebp
std
lcall
pop
mov
lahf
popf
int3
sub
inc
mov
lods
subl
shlb
testb
stc
insb
sbb
mov
and
out
dec
iret
cmpsl
xchg
out
dec
scas
in
mov
xchg
fsub
ret
test
cltd
jg
jmp
inc
aam
es
fwait
dec
arpl
pop
push
shrb
mov
pusha
sub
out
mov
inc
test
inc
test
push
sbb
cmp
not
xor
cli
inc
or
sub
push
pusha
arpl
roll
fidivl
sub
pop
inc
iret
add
clc
mov
xor
aaa
jne
idivl
and
mov
cli
sbb
outsb
cmp
xchg
cmp
call
popa
mov
fucom
clc
dec
xor
hlt
dec
decb
shl
loopne
push
int3
outsb
push
xchg
mov
lea
mov
inc
or
scas
nop
int3
cs
into
negl
aad
mov
xchg
gs
adc
imul
dec
ja
les
out
or
mov
out
leave
xchg
add
mov
inc
fs
or
xchg
xchg
fcmovb
inc
push
dec
sbb
ljmp
push
mov
jmp
mov
scas
les
jg
ds
inc
jbe
negb
pop
adc
aam
xor
out
xchg
add
push
cs
pop
fs
mov
lahf
jno
xchg
int3
insb
subl
arpl
dec
bound
add
push
mov
ss
std
aad
jmp
bound
shlb
add
adc
mov
pop
or
dec
into
cmp
xchg
negb
rclb
pop
xchg
aam
cmp
push
sub
sbb
mov
ret
or
xchg
pushf
mov
xchg
ljmp
mov
cld
and
cmp
mov
notl
adc
rorl
push
andl
call
mov
cmc
or
sub
xor
push
popa
fsub
jae
enter
test
out
xchg
sbb
xchg
cmp
ds
dec
mov
cmpl
sbb
test
pop
cmp
ljmp
insb
sbb
pop
negb
pop
inc
popa
dec
pop
mov
icebp
popa
jbe
jae
pop
push
popf
fstpl
dec
push
add
sti
or
ret
jge
lock
fldenv
dec
pop
adc
cmpsb
dec
dec
scas
mov
adc
shrb
push
stos
dec
sbb
sub
or
push
ja
cmp
daa
in
popf
push
jne
mov
outsb
fs
cmp
jge
xlat
xchg
in
shlb
pop
outsb
push
in
mov
fcoms
out
inc
mov
iret
mov
rorb
daa
mov
xorb
pop
sbb
in
and
inc
cmpsl
sbb
outsl
jo
ja
in
enter
ficomps
cmpsl
icebp
cmp
sbb
sub
sub
push
repnz
sbb
insl
in
mov
or
lods
xor
mov
shrl
pop
mov
pop
ds
inc
sbbb
mov
inc
xor
and
adc
fimuls
sbb
push
dec
sbb
imul
daa
cld
or
push
xor
stos
idivl
jl
test
scas
lods
ja
xchg
xor
xor
fistpl
subb
testl
pop
xchg
sub
insl
adc
sarb
xor
call
mov
int
testl
push
cld
roll
push
mov
inc
ret
hlt
clc
aaa
mov
xor
js
xor
adc
mov
enter
sub
xor
xchg
inc
sbb
inc
je
xchg
mov
lock
imul
mov
pop
cli
in
add
push
lret
stos
pop
cmp
ret
jne
mov
jbe
adc
sbb
lahf
sti
incb
xchg
mov
push
loopne
mov
in
push
jns
mov
negb
cs
jne
cmp
lcall
pushf
hlt
sub
sbb
scas
cmp
shrl
sahf
pushf
fsub
data16
jmp
enter
nop
jnp
xchg
jne
xchg
daa
adc
hlt
mov
jae
inc
out
jmp
mov
mov
mov
fsubl
ficoms
test
scas
sti
or
test
mov
addr16
mov
cmc
leave
lds
jne
pushf
xchg
mov
mov
pushf
out
pop
sarl
lock
xchg
sub
push
insb
mov
xchg
mov
sub
out
mov
push
mov
mov
testb
sbb
xlat
loopne
stc
cwtl
out
aam
jmp
push
jmp
ss
lret
cld
into
xor
mov
mov
ss
push
jle
notl
pop
mov
int3
adc
call
nop
ds
push
lock
clc
push
fstps
mov
mov
sbb
inc
mov
push
icebp
pop
xor
ret
xor
sub
sbb
mov
aad
xor
pop
or
push
push
mov
orl
rolb
in
lret
in
fisttpl
loopne
jge
cmp
add
pop
fistpll
cmp
pop
mov
call
adc
leave
mov
mov
arpl
mov
daa
and
fs
jge,pn
adc
cmp
cmpsl
aad
adcb
sub
mov
shrl
push
ret
push
push
add
sub
jg
jg
sub
es
sbb
pop
add
loope
sub
popa
pop
pushf
or
fwait
xchg
pop
jo
mov
aaa
mov
stos
arpl
mov
pushl
adcl
jmp
mov
pop
ret
mov
outsb
shl
cmp
mov
leave
sti
jbe
cmp
or
outsb
sti
xchg
pop
in
les
inc
pusha
aad
dec
fldlg2
pop
call
ficomps
dec
cs
xchg
lods
das
cmp
dec
das
imul
call
xchg
cmc
lods
xchg
fsubrs
pop
es
scas
jl
movzwl
or
stos
fldt
push
add
insl
dec
or
mov
xor
add
repnz
sbb
mov
mov
icebp
jmp
lock
cwtl
push
negb
sbb
add
test
mov
cmc
cli
inc
arpl
lods
addr16
mov
in
sahf
mov
or
xor
and
scas
mov
or
rclb
xor
pop
cmc
call
xchg
lcall
push
jbe
xchg
cmpsl
nop
mov
sbb
adc
dec
push
mov
fstps
enter
les
cs
mov
popa
rcll
leave
in
out
pop
ss
or
or
iret
enter
das
xchg
int
insl
addr16
lock
or
add
mov
mov
xor
lods
sbb
adc
push
jbe
in
cmp
jbe
ss
inc
movsb
push
notb
mov
pop
std
and
xor
xor
imul
mov
popa
mov
and
test
adc
push
cmpsl
and
adc
loop
test
movsl
dec
xor
das
aam
jne
lret
loope
repz
inc
and
les
mov
mov
inc
xor
jae
mov
ret
and
push
out
fsubrl
ror
rolb
orl
xor
hlt
cli
push
nop
cmp
addr16
adc
fdiv
and
mov
js
pusha
adc
ds
in
adc
mov
or
inc
ja
cmp
sbb
jl
shlb
add
mov
push
mov
mov
stc
mov
pop
and
mov
ret
sbb
cltd
sbb
pop
out
ja
loopne
xor
xchg
out
sub
sub
jmp
mov
or
and
mov
test
push
and
adc
add
push
cmp
xor
pop
cmp
push
dec
repnz
mov
pop
test
xor
xchg
neg
test
pop
popl
cld
cmp
jmp
push
pop
fwait
cs
insl
sbb
xor
fiadds
seta
out
inc
mov
jno
and
mov
xlat
lds
movsl
iret
push
fisttpll
mov
adc
mov
mov
add
mov
jle
xlat
inc
mov
cmp
pop
and
sub
cmp
loope
loop
nop
scas
hlt
adc
xchg
and
adc
xchg
pop
add
and
out
cmpsl
push
mov
out
xchg
sbb
jns
dec
jbe
dec
cmpsb
pop
cltd
adcl
idivl
cmp
mov
movsl
pop
add
je
mov
pop
iret
mov
and
jge
jl
mov
sbbb
mov
je
adc
int
sbb
jae
adc
and
xchg
out
add
xchg
inc
movsb
in
pusha
negl
xchg
add
adc
dec
xchg
cmp
call
xorl
mov
jnp
add
or
push
mov
xlat
xchg
sub
xor
add
cwtl
cwtl
aam
addr16
rolb
mov
insb
fwait
sub
mov
mov
outsl
adc
mov
xor
push
mov
pop
cs
in
or
cwtl
xor
mov
and
insb
lods
dec
push
xchg
add
xchg
lods
cmp
repz
jmp
insl
pop
jecxz
xor
mov
jle
pushf
push
je
test
outsl
les
out
push
inc
push
imul
mov
push
js
jns
and
test
cs
xchg
mov
mov
and
xor
sbb
xor
lea
jmp
ss
add
cs
hlt
sub
jns
jge
add
js
xchg
pop
call
jmp
mov
ds
ja
es
test
repz
add
lahf
in
or
popa
push
popf
hlt
out
mov
in
hlt
fisubrl
test
lret
cmp
mov
dec
faddl
fisttpl
xor
sbb
push
cmc
push
jmp
mov
rcr
scas
sti
jo
mov
pop
or
test
xchg
daa
insl
or
push
es
imulb
repz
aam
pusha
dec
mov
outsb
neg
jbe
pop
dec
lret
mov
dec
or
popa
jnp
mov
push
jns
subl
inc
cmp
add
mov
and
stos
test
push
mov
mov
in
mov
sahf
jmp
push
dec
rclb
lgs
int
imul
std
mull
cltd
lods
pop
test
pusha
jns
jne
mov
fcompl
addr16
xchg
jecxz
push
subl
xor
jg
push
int
xchg
jle
and
jg
xor
inc
cld
dec
pop
test
in
andl
push
es
daa
std
lret
push
imul
repnz
fisttpll
scas
adc
xchg
testb
int3
sbb
daa
cmpb
or
fstpt
xor
and
sbb
add
sbb
push
imul
add
pop
sbb
or
les
int
mov
cmp
insl
mov
jo
lret
pop
leave
and
add
xlat
mov
cmp
sahf
xor
cmp
xor
fstp
mov
mov
jl
in
shll
pop
mov
xchg
cmp
stos
xchg
jno
jg
popa
mov
push
repz
sbb
decb
lret
fidivl
jge
and
rsm
pop
xor
or
xor
sub
sbb
test
lock
sbb
leave
adc
scas
pop
push
mov
fildll
mov
adc
sbb
shl
enter
scas
cmp
aaa
cmp
jecxz
pop
mov
push
decl
sub
adc
mov
lock
xchg
xchg
mov
mov
icebp
sbb
mov
jl
add
mov
aam
rcr
mov
adc
mov
outsb
mov
call
and
sbb
push
cmp
jl
popf
push
pop
ret
out
divl
iret
add
je
and
jne
mov
cmpsl
popa
push
stos
or
leave
mov
sti
aaa
ja
or
aaa
out
inc
sub
adc
push
xchg
xchg
jl
sub
sub
pop
push
loop
xchg
outsb
and
mov
in
cmpps
jno
mov
sti
lret
inc
and
mov
inc
jne
mov
pop
jae
mov
mov
pop
jg
imul
fldcw
add
or
jmp
mov
out
pop
mov
cli
pop
or
lods
insl
dec
es
fidivrs
loop
je
sbb
cwtl
add
pop
mov
or
icebp
int3
ret
jo
xchg
arpl
mov
add
dec
repz
inc
adc
jmp
sub
fwait
data16
lret
inc
ror
xchg
mov
test
repnz
jl
popf
pop
mov
movsl
sahf
cmp
push
call
inc
fnstsw
pop
sbb
stos
sub
add
dec
movsl
pop
cmp
cmp
mov
es
out
in
cwtl
out
insb
add
push
test
push
cmp
xchg
addr16
xchg
jnp
xchg
js
mov
nop
lods
arpl
lahf
adc
lds
push
xchg
into
in
stos
xchg
add
sbb
js
inc
mov
daa
cmp
or
push
cmp
fldl
sub
leave
shll
xchg
mov
fsts
and
sub
xchg
mov
jns
lret
lret
jmp
ret
rolb
data16
mov
xchg
cmpsl
es
loope
dec
mov
sub
push
in
into
xchg
les
dec
das
test
add
lcall
xor
stos
add
and
imul
jmp
icebp
or
mov
mov
insl
adc
addr16
shll
inc
xchg
xor
lea
sbb
pop
addr16
jnp
jnp
icebp
jnp
pop
in
lret
cmpsl
adc
mov
loope
sti
push
pmullw
mov
out
mov
cmp
sbb
cmpsl
push
in
in
and
negb
loope
aad
test
lods
bound
data16
dec
into
pushf
xor
scas
sbb
inc
call
add
fmull
outsl
mov
push
ret
xchg
and
sbb
rol
inc
rclb
push
enter
and
call
inc
jmp
js
push
cmp
mov
or
mov
xchg
cli
pop
pushf
test
outsb
jns
sti
enter
cmc
jecxz
pop
adc
mov
pop
mov
inc
insl
add
mov
jg
lods
mov
out
in
into
bound
and
clc
push
repnz
jbe
and
icebp
jmp
pop
add
rcll
sbb
xchg
aaa
pop
fidivs
frstor
pushf
popa
sub
iret
jbe
mov
mov
mov
mov
jl
shr
xor
jg
test
sahf
lods
bnd
mov
repnz
out
mov
sbb
mov
mov
xchg
xchg
xchg
ret
sahf
ja
inc
mov
inc
mov
sbb
pop
out
lds
mov
addr16
or
xor
iret
outsl
xor
leave
jno
xlat
ss
rolb
cli
xchg
js
xchg
lods
mov
pop
stc
add
push
pop
dec
mov
sbb
mov
ljmp
scas
cmp
xor
sbb
jnp
leave
bound
cmp
insl
xchg
int
icebp
push
mov
sti
inc
subb
mov
sub
inc
xor
lods
hlt
lahf
mov
jnp
cmpsb
movsb
mov
lret
push
push
add
ljmp
pop
clc
mov
push
ja
cmp
xlat
add
jb
inc
leave
out
push
sti
fidivl
add
jmp
and
mov
pop
jecxz
es
sub
sti
scas
arpl
cmp
pop
jae
insb
xchg
dec
adc
movsl
adc
push
roll
sbb
sbb
pop
cwtl
fstpt
int
xchg
gs
mov
and
inc
xchg
jo
or
repnz
out
dec
jbe
xor
cmp
lea
push
cmpb
mov
push
lods
popf
stc
sahf
mov
out
mov
popf
or
enter
int3
je
idivb
cmp
sbb
pushf
inc
sbb
pop
and
adc
jns
sbb
and
pusha
jmp
je
insb
fnstcw
loop
push
ja
fisttpl
xor
jg
lcall
pop
fsubs
insl
daa
push
loop
xlat
inc
lods
sub
lods
gs
aaa
insb
mov
lahf
lods
movsb
adc
inc
lods
movsb
cmpsl
test
pop
rcr
sub
movsl
repnz
inc
sub
sbb
shld
rcrb
add
in
sbb
cwtl
int3
loopne
cs
cs
stos
xchg
push
clc
mov
aad
mov
dec
ds
jns
out
dec
jnp
cmp
aam
dec
push
or
loop
jnp
leave
and
xor
enter
xlat
popa
xchg
fimull
test
cli
pop
shll
jns
fldl
rorb
int3
fcomps
push
mov
jnp
cs
adc
adc
out
jae
fisubs
mov
sbb
fs
repnz
movsl
adc
cltd
std
add
pop
cwtl
imul
jecxz
jbe
cmovo
dec
pop
adc
or
mov
data16
les
xchg
stos
pushf
or
ljmp
popf
out
push
fs
and
aaa
aaa
sbb
push
fbstp
pop
popa
stos
out
cmpsl
pop
lods
push
cmc
popf
stos
nop
add
sbb
call
outsb
hlt
inc
pop
adc
pusha
push
pushf
in
xor
std
out
jle
popa
jecxz
int
jo
dec
or
sbb
mov
iret
mov
mov
jp
ljmp
cmp
pop
loop
das
mov
dec
or
lods
dec
js
mov
push
shl
xlat
shrb
sub
push
or
jo
cmp
adc
rcrb
sub
jle
lds
cwtl
out
jbe
insb
adc
and
mov
sbb
jmp
mov
and
sbb
inc
repz
std
cmpsb
lds
push
mov
xchg
loopne
cmp
push
mov
sbb
or
pop
sub
cmp
sbb
pop
mov
jno
insl
dec
sbb
jmp
xchg
sub
mov
push
dec
cmp
mov
cltd
aad
sub
insl
cmc
mov
mov
inc
mov
iret
imul
dec
stc
insl
sbb
or
inc
mov
idivl
les
les
mov
scas
pop
cwtl
fmull
in
clc
mov
into
test
and
negl
lods
neg
addr16
inc
push
pop
sbb
push
mov
jmp
in
and
bound
pusha
imul
dec
xchg
ss
repz
inc
fidivs
ficompl
pop
sbb
xorl
fidivl
push
ja
movsl
pop
aad
loope
lea
pop
ret
jo
and
push
inc
and
nop
stc
cmp
jmp
cmp
or
adc
mov
sub
xor
add
scas
cwtl
sti
xor
mov
es
stc
pop
leave
sub
inc
sbb
xor
rcrb
mov
decb
xlat
js
ds
movsb
jge
mov
gs
xchg
cltd
mov
mov
mov
or
testb
dec
call
cmp
jp
into
test
movsb
or
push
je
cmp
xor
pop
mov
insb
loopne
enter
cmpsb
ret
test
dec
push
int3
mov
cmp
jno
push
sti
xorl
mov
shlb
push
dec
insl
loopne
mov
jge
shr
adc
jmp
mov
movsl
in
nop
sbb
lret
cli
pusha
sahf
fistpl
lea
mov
xchg
repz
push
sbb
xor
jmp
mov
jge
idivb
int3
jbe
into
sub
imul
inc
pop
cmp
enter
cwtl
add
mov
cmc
jmp
jmp
sarb
outsl
inc
xor
fcmovnbe
mov
sbb
stc
stc
test
pop
mov
ds
lock
push
ss
jp
push
push
out
das
cmp
std
jecxz
dec
ret
xor
fdivs
lock
idivb
insl
loop
rorb
and
ret
movsb
insb
or
cmp
movl
pop
je
in
sbb
add
dec
and
jmp
mov
inc
test
sub
mov
add
out
jle
repz
sub
lahf
jo
inc
pop
mov
cmc
and
push
or
stos
lods
dec
xor
es
out
inc
sub
leave
movsb
xor
xor
mov
stos
ljmp
clc
push
cs
shl
mov
dec
and
jg
std
jmp
dec
push
jl
pop
out
pop
movsb
fimull
mov
test
fistps
lds
sbb
and
inc
mov
clc
mov
leave
push
inc
dec
aaa
rcr
pop
mov
popf
insl
das
xor
pop
pop
sbb
jl
fdivs
fists
adc
mov
jge
sub
or
inc
mov
out
popa
roll
sub
bound
repnz
cmp
xlat
jns
dec
adc
push
in
xor
mov
aad
mov
mov
sub
push
mov
pop
sbb
adc
shll
test
and
and
fucom
pop
mov
cmp
mov
xor
daa
or
addb
cmc
clc
stos
add
lea
inc
hlt
hlt
sub
adc
pop
notb
or
nop
mov
dec
xchg
outsb
test
cmp
jmp
aas
sub
in
or
in
repz
ret
inc
push
sub
push
aaa
scas
ss
mov
add
cmp
test
or
xchg
pop
gs
adc
es
fstl
push
cmp
call
pop
adc
test
leave
sbb
adc
cmpsb
sbb
mov
and
enter
mov
push
pop
in
jmp
loope
cwtl
rcrb
jnp
fstps
jnp
sub
outsl
pop
push
in
and
inc
movsl
xchg
test
xchg
jo
negl
sub
cmp
leave
sahf
inc
push
lods
cmpsb
push
pop
sub
push
xor
out
xchg
je
adc
and
add
jl
jnp
ret
outsb
adcb
add
xor
insl
sub
push
sub
imul
pop
mov
inc
add
ret
fcmove
cmp
mov
pop
repz
xor
pop
adc
mov
mov
xchg
mov
in
pop
xor
mov
aam
clc
dec
imul
pop
pop
mov
inc
stc
adc
xor
ret
add
and
xchg
xor
lret
ja
adc
jnp
push
jmp
push
repz
cwtl
or
jl
test
jae
test
mov
in
jg
sub
mov
cmpl
shrb
sbbl
leave
fisttps
dec
mov
repz
fildl
xchg
jnp
inc
xor
shlb
aas
fcom
scas
mov
ds
incl
fstps
sahf
mov
or
xlat
mov
xor
movaps
jle
ljmp
je
xchg
sub
lret
pop
lcall
arpl
jg
push
cmp
lahf
mov
pop
vfnmadd231ss
jbe
daa
clc
pusha
jno
pusha
xchg
or
cwtl
scas
pop
mov
div
cmc
xchg
sub
imul
movsl
xchg
dec
arpl
ds
or
and
pop
in
cmp
adc
add
stos
daa
sbb
in
out
outsb
cmp
mov
popa
mov
cmp
lock
in
inc
mov
aad
arpl
push
cmp
lret
dec
mov
sub
xchg
sub
aad
push
pop
dec
xor
push
stc
mov
fisubs
or
and
dec
loop
push
push
or
test
mov
pop
xor
stc
repnz
sbb
jae
fwait
cmpsl
dec
popf
or
xchg
aaa
mov
mov
clc
ret
test
and
sti
cmp
or
xor
cmpsb
test
xor
out
rorb
outsb
inc
ret
push
and
pop
cmc
push
mov
push
mov
mov
test
mov
hlt
xchg
stc
dec
aaa
adc
sbb
add
inc
shlb
pop
pop
arpl
inc
push
mov
fstp
test
push
sub
scas
std
divb
aad
mov
out
jne
or
mov
xchg
mov
jecxz
in
sub
dec
loope
popf
xor
rorl
ret
shl
gs
xor
mov
or
jg
mov
jbe
int
out
ret
push
imul
xchg
adc
add
xor
ljmp
push
in
jne
in
loope
enter
es
lcall
push
pop
xor
inc
ret
xchg
xchg
xor
data16
jbe
mov
dec
pusha
xchg
xorb
mov
pop
cmpb
jge
in
ret
stos
cs
pop
cmp
daa
imul
outsl
adc
fstps
jge
inc
mov
jg
xor
aas
mov
stos
bound
and
dec
arpl
sub
sbb
xor
psubw
into
inc
sub
sbb
repz
mov
jecxz
mov
movsb
push
mov
cmp
fistps
adc
rcl
add
jb
in
arpl
cmc
xor
movl
adc
aas
prefetch
mov
dec
jecxz
je
jmp
inc
cmp
jo
sub
ret
inc
in
rorb
int
push
js
dec
cmp
lcall
and
inc
inc
popa
rorl
cs
cwtl
push
pop
ror
lcall
xlat
mov
cltd
jnp
pop
cmovg
mov
jmp
ds
inc
xchg
lcall
pop
push
push
push
aas
sahf
aas
jmp
es
lahf
inc
repz
mov
sub
out
sbb
jae
lcall
xchg
cs
inc
inc
je
repz
jle
sarb
bound
lahf
movsb
lds
repz
pop
ret
add
outsb
xor
insl
xor
jne
and
in
add
fs
hlt
dec
movsl
lcall
int
mov
das
mov
xor
sub
addr16
ret
push
rcl
xchg
mov
in
dec
push
mov
add
sbb
cmp
mov
iret
jp
dec
adc
psubq
sbb
movsl
stc
es
mov
popa
jne
and
clc
sbb
cmpsl
daa
shll
imul
cli
lahf
cmp
sub
icebp
aad
fwait
orb
ja
inc
sub
push
insb
aaa
movsb
sbb
pop
ret
test
mov
cld
pop
mov
sti
jp
rol
scas
int
mov
push
cltd
and
jnp
xor
push
cmpb
dec
xchg
fbstp
pop
test
fimuls
sbb
push
out
stc
mov
sub
je
std
cmp
mov
push
sbb
cmp
rorb
popa
sub
adc
nop
push
fbld
mov
pop
out
cld
jne
filds
les
pop
pop
mov
iret
jg
mov
or
clc
push
xchg
js
lods
int3
mov
xchg
lods
in
pop
mov
jb
and
add
popa
lds
jmp
xor
jnp
push
jecxz
aam
roll
mov
xchg
leave
test
addb
jns
jne
stos
jle
jp
xor
pop
rol
pop
adc
adc
js
cmp
ljmp
loope
adc
inc
subb
mov
in
xchg
int
scas
shrl
aam
pop
pusha
pop
jle
mov
nop
out
cmp
inc
cmp
and
sub
or
call
add
repz
pop
not
movsb
push
loopne
aaa
mov
xchg
inc
cld
and
cld
shll
lea
jbe
inc
or
popf
add
out
ja
pusha
lea
insb
loope
push
cmc
mov
bound
pop
nop
mov
in
mov
cmp
mov
adc
add
cmp
je
aad
cs
lret
xor
jp
add
js
lcall
mov
mov
xchg
dec
insl
bound
inc
mov
and
fiaddl
loope
xchg
cmp
out
jb
orb
and
pop
mov
mov
ret
push
iret
push
pop
sbb
cmp
adc
ficompl
or
popa
add
mov
cmpsb
xor
loope
jge
dec
pop
insb
cltd
aam
cmp
in
jp
pop
fists
push
ss
cmp
push
inc
mov
cmp
jecxz
ret
cmpl
shl
pop
or
pop
push
xlat
repnz
mov
sbb
push
sbb
stc
jg
sti
fadds
jne
jne
push
cmp
mov
pop
push
xchg
in
mov
movsl
and
inc
xchg
mov
addl
xor
cmpsb
or
inc
or
cmpl
dec
push
cmp
mov
add
or
pop
sahf
ret
jne
js
aaa
je
pop
clc
mov
inc
xchg
adc
lods
sub
jno
adc
mov
ficoml
addr16
addr16
ja
jmp
stos
adc
mov
xchg
lods
xchg
jno
or
test
jae
fisttps
cmp
mov
call
out
dec
movsl
imul
jle
insb
fcmovnb
call
xor
cltd
add
sbb
mov
pushf
cmpsb
pop
test
fsubp
mov
ret
insb
or
xor
scas
xchg
stc
push
or
and
xchg
fbstp
stc
sbb
bound
xchg
sbb
mov
sbb
push
mov
pop
inc
cmc
xor
hlt
int
mov
xor
mov
mov
mov
jns
outsl
rol
cmp
mov
fbld
out
test
xchg
mov
cmp
out
in
jno
mov
ds
cmp
out
jne
aad
test
jb
add
insl
jae
cmp
popa
xor
inc
sti
adc
mov
idiv
out
add
mov
mov
les
insl
jne
inc
jno
testb
lret
pop
inc
cmpsl
push
xlat
adc
imul
outsl
inc
sub
lods
adc
dec
add
cld
out
add
fcomi
aam
data16
call
out
movsb
cmp
sub
jmp
add
mov
xchg
movsl
lods
mov
mov
mov
cmc
mov
es
int
jae
shl
insb
sbb
ljmp
sbb
pop
lahf
ljmp
scas
or
fisubrl
lahf
cmpsb
hlt
mov
jne
inc
jne
jl
push
or
mov
mov
in
unpcklps
es
mov
ja
ret
pop
jb
mov
xchg
jo
pushf
jp
in
push
sbb
sub
sbb
pop
and
lret
push
jns
pop
and
mov
lret
xchg
es
push
jns
push
outsl
jo
repz
imul
movsb
cld
test
mov
cmp
stos
arpl
fstpl
lods
stos
stc
movsb
ljmp
aad
mov
pop
pop
in
mov
sub
loope
imul
paddw
pusha
stos
dec
inc
sbb
dec
add
jl
inc
mov
inc
shrb
or
jl
add
pop
outsl
inc
movsl
sbb
stos
adc
fbstp
adc
ljmp
movsb
adc
or
pmulhw
in
mov
xor
mov
rcll
fwait
mov
out
mov
dec
imul
stc
mov
and
cmp
adc
jmp
mov
mov
test
ljmp
aam
clc
jp
nop
movsl
inc
mov
leave
movsl
nop
mov
dec
cs
fxch
hlt
sbb
sbb
lret
xlat
pop
cmpsb
cwtl
adc
inc
or
cmp
add
and
dec
mov
into
test
mov
lods
loope
xchg
xor
lcall
cmp
in
repz
sbb
jp
cld
push
aam
mov
mov
das
stos
jno
out
pop
adc
data16
or
int
adc
mov
add
xchg
fs
pop
sbb
sub
out
pop
std
cmp
inc
iret
dec
or
mov
sbb
xor
pushf
pushf
dec
jnp
pop
fucom
mov
xchg
push
mov
pop
xchg
gs
lods
jle
pop
loop
pop
sar
stos
out
movsl
cmp
ljmp
or
sbb
enter
ret
push
mov
mov
sahf
mov
push
movsb
cwtl
stos
in
dec
mov
or
pop
inc
push
and
aam
mov
mov
sbb
inc
xor
in
rorb
les
dec
test
jmp
mov
xor
push
mov
gs
jno
fnstenv
popa
mov
dec
xchg
adc
fldcw
negb
inc
movsl
and
aam
and
inc
and
cmp
mov
js
test
and
push
push
lahf
jnp
js
dec
int
popa
jne
mov
loopne
shrl
jge
les
mov
or
pop
dec
enter
scas
andb
je
sbb
push
add
repnz
mov
jns
dec
das
inc
das
rcrl
jp
fimuls
jae
sti
cmpsb
push
outsl
stos
cltd
and
pop
test
leave
stos
cli
nop
push
insb
stos
daa
push
and
pop
mov
repz
mov
fs
sbb
vcvtpd2psy
arpl
cmpsl
mov
fdivrp
int
xchg
add
fldt
cmp
je
add
push
xor
out
jnp
mul
push
in
andb
rcll
push
push
sbb
ficoms
scas
fldenv
int
scas
cmp
shll
or
popa
inc
xor
cmp
ja
pop
cmp
cli
xor
int
not
push
dec
outsb
imul
fucom
std
push
cmp
xchg
mov
jp
test
insl
mov
stc
cmp
mov
in
xchg
rorb
scas
insl
jle
insb
pop
call
sbb
je
shr
push
xor
mov
frstor
pop
mov
add
jecxz
lds
lock
pop
adc
xchg
xchg
repnz
mov
sub
add
sahf
jl
aad
jno
and
or
loop
xor
stos
ljmp
shl
movsb
xchg
jno
mov
dec
fadd
sbb
jecxz
repz
mov
cmp
mov
insl
xor
test
mov
cld
sbb
fs
xchg
stos
inc
push
imul
in
cmpsl
popa
in
dec
xchg
push
fistpl
add
pop
rorl
or
popa
in
inc
icebp
adc
test
outsb
out
ds
pop
idivl
dec
popf
pushf
loop
inc
or
push
je
stos
xchg
cmpsl
dec
cli
dec
fstps
inc
mov
dec
mov
fistl
lret
mov
daa
lock
mov
pop
aad
mov
inc
adc
jno
test
mov
xchg
push
mov
je
mov
mov
and
fldt
stc
dec
cmpsl
mov
cmc
add
popf
pop
test
fwait
test
mov
xchg
pop
push
mov
push
mov
push
stos
mov
push
fstpl
cld
stc
xor
pushf
cmpsl
ret
dec
push
pop
xor
xchg
jecxz
test
push
loop
sbb
push
cli
mov
lret
jl
jecxz
mov
pop
fidivrl
dec
testl
xor
imul
sti
cmp
cmp
push
stos
dec
cmc
orb
dec
xchg
xlat
notl
es
push
incl
jecxz
mov
jmp
mov
mov
mov
icebp
add
lcall
and
iret
fimuls
cld
aad
or
and
mulb
mov
addr16
xor
lahf
mov
das
aas
jmp
inc
int3
xor
ljmp
push
jge
sbb
fcoml
inc
stos
fsubrs
mov
inc
or
push
mov
cmpsb
mov
pusha
loopne
lds
fwait
daa
addb
xor
out
je
sbb
push
mov
insl
xchg
fcoml
fidivrl
and
out
std
cmp
cmp
jns
add
mov
std
add
push
mov
outsl
aaa
rorl
insb
nop
push
imul
mov
xor
cld
clc
sbb
icebp
sbb
cmp
sub
outsb
rcr
sub
es
adc
mov
xchg
or
test
lcall
mov
mov
out
push
and
cmc
outsb
add
xor
es
ja
dec
arpl
cmc
sbb
sub
jmp
sub
push
scas
iretw
or
xchg
add
mov
dec
imul
mov
loop
shll
sub
adcb
xchg
movsl
or
cmp
mov
mov
and
out
mov
push
lods
sub
ret
outsl
mov
inc
mov
mov
mov
xchg
add
dec
mov
jnp
jmp
lcall
xor
shr
push
pop
sbb
add
push
xchg
or
mov
mov
ds
sti
cld
fisttps
repz
pushf
icebp
push
imul
mov
push
das
std
data16
or
test
rol
out
pop
cld
enter
sbb
mov
lret
test
iret
adc
std
mov
xor
fs
out
scas
lret
dec
xor
pop
xchg
mov
xchg
imul
push
push
jmp
and
lcall
and
daa
mov
sub
mov
push
adc
stos
iret
lret
and
ja
cmp
and
jmp
scas
mov
jb
sub
clc
arpl
data16
jbe
or
or
test
adc
push
lods
or
or
movsl
loope
dec
je
pop
add
push
pop
and
or
mov
shl
repnz
or
sbb
aad
inc
ret
cmp
in
in
call
mov
cmp
sbb
pop
and
fisttps
push
mov
dec
dec
mov
sub
dec
inc
dec
inc
xor
sub
lcall
push
dec
shlb
jl
stos
aas
sti
lret
cmc
stos
push
mov
and
cwtl
mov
mulb
sti
repnz
pop
mov
mov
pop
add
mov
mov
cmpsl
or
dec
insb
fwait
push
mov
cmc
xchg
stos
mov
add
cwtl
mov
ss
cwtl
imul
pop
imul
inc
xor
sahf
sahf
adcb
mov
insl
call
lods
push
xchg
and
add
es
outsb
push
mov
loopne
inc
out
rclb
jns
jl
loop
notb
mov
notb
or
pushf
pop
fcomps
sahf
or
repz
add
xorb
popa
dec
negb
je
sbb
mov
cmp
jne
xor
pushf
shll
aad
mov
pop
js
bound
xorb
hlt
out
xor
div
loop
cmp
aas
stos
cs
mov
sub
pop
xchg
iret
dec
jns
js
xor
mov
push
xor
packssdw
push
es
pop
mov
call
dec
and
inc
scas
hlt
push
add
stos
aam
jp
pop
lds
stc
inc
mov
sub
xor
cmc
movsb
aam
push
sbb
stc
stos
movsb
xor
jle
jbe
or
sub
hlt
sub
mov
lea
add
sub
aad
mov
gs
mov
jbe
jns
aad
cmp
aas
jl
dec
dec
cmp
outsb
fsts
int3
jns
push
test
out
push
inc
mov
sbb
data16
jb
mov
inc
scas
jle
cmp
lahf
and
addl
aad
and
or
mov
arpl
adc
fdivl
cmpsl
popf
add
jp
test
fdiv
xchg
jne
jae
mov
test
mov
cmpsl
stos
pop
jl
subl
ret
scas
stos
mov
cmp
scas
dec
pop
test
xchg
lods
mov
aas
cmp
jmp
notb
add
push
cmp
sub
nop
and
push
mov
fcompl
mov
aad
mov
push
lods
mov
cmp
pop
test
enter
sbbl
enter
out
mov
push
pop
pop
lahf
or
mov
ljmp
lea
fistps
insl
adc
gs
inc
push
negb
in
fstpt
cld
sub
stc
lds
cmp
mov
add
insb
cmp
inc
sbb
imul
ret
sub
roll
shl
sbb
sub
jmp
add
xchg
xor
jae
dec
call
pop
js
and
mov
sub
int
inc
inc
aaa
in
aas
in
pop
pop
mov
xlat
test
gs
adc
out
cmpsl
into
adc
test
inc
fadd
out
popa
xchg
mov
push
mov
incb
jecxz
out
sbb
push
and
push
mov
fs
pop
cli
and
mov
testl
lea
cmp
xchg
loope
sar
dec
clc
xchg
mov
jbe
imull
xchg
ret
mov
mov
mov
jnp
and
lret
xlat
sbb
jle
dec
jno
jmp
cs
cld
jge
jl
rorl
mov
dec
jmp
mov
xor
mov
or
stos
adc
nop
push
outsl
sbb
xchg
cmovo
inc
lret
popf
rclb
cld
and
add
push
push
popf
adc
addr16
lods
jno
adc
sbb
sub
mov
pop
mov
sbb
nop
iret
jge
sbb
mov
jb
sbb
jne
daa
ljmp
ljmp
inc
and
stos
int3
xchg
popa
ja
jbe
fs
insb
jmp
arpl
push
pop
adc
mov
inc
int
lcall
pop
aaa
call
mov
insl
and
dec
lods
mov
int3
cmp
or
and
mov
js
xchg
pushf
dec
sbb
sbb
aas
add
lcall
insl
inc
popa
inc
pop
sbb
dec
xor
call
xchg
xlat
adc
mov
bsr
mov
shr
xchg
imul
iret
mov
xchg
lods
out
sbb
pop
or
cld
lea
mov
xchg
or
or
loop
cltd
add
sub
cmp
test
sub
jl
mov
mov
daa
xchg
daa
jns
mov
and
pop
lahf
pop
loop
jae
push
or
xor
add
test
mov
push
arpl
xor
xchg
inc
pop
dec
add
lret
lret
cmp
add
pop
and
inc
jg
arpl
int3
mov
outsl
lahf
sbb
hlt
inc
dec
push
inc
adc
cmp
mov
ja
and
sbb
xchg
inc
push
scas
jo
rclb
push
fstps
fistps
sbb
mov
adc
fwait
push
push
inc
out
dec
mov
movsb
inc
push
jbe
push
jg
outsb
sub
cmpb
lods
loope
jbe
mov
out
pop
mov
int
fdivrp
fsubrl
mov
sub
adc
push
mov
mov
decb
test
scas
jmp
or
xchg
addr16
xchg
int3
mov
imul
popf
pop
sub
jge
pop
loope
cmc
adc
scas
jo
mov
out
hlt
lret
inc
roll
out
dec
xor
insl
imul
fsubl
and
adc
xchg
in
int
dec
lcall
aas
imul
aam
int
sahf
and
les
jno
repnz
sub
out
je
loope
sahf
and
cmp
inc
mov
pop
fcmovb
mov
push
rcll
or
xor
adc
or
mov
lret
pop
and
out
test
jbe
aas
jmp
mov
cmpsb
ret
loope
movsb
xlat
pop
ljmp
jmp
xchg
mov
fidivs
mov
xor
cmp
ficompl
pop
fiaddl
add
xor
or
sbb
daa
cld
xlat
clc
jmp
lret
cmp
stc
add
inc
lds
push
and
cwtl
popf
fwait
and
cmpsb
xchg
adc
or
sub
lcall
add
fld
inc
push
adc
loop
test
mov
roll
push
pop
test
fistpll
nop
lea
mov
push
aam
mov
xor
nop
in
adc
arpl
testl
jno
push
push
clc
add
int
jl
test
fcoms
jg
rol
jle
mov
call
lods
fcomi
sub
sar
pop
sbb
loope
jno
call
aas
mov
outsl
lret
mov
out
adc
xchg
jno
lret
cmc
ret
push
sub
imul
sbb
out
jl
in
loope
outsl
push
mov
xchg
dec
mull
in
in
dec
lods
sbb
por
jg
std
arpl
insb
test
das
pop
mov
inc
add
pop
push
les
fisttps
lods
pop
push
dec
lcall
arpl
push
imul
or
push
ds
mov
imul
push
aad
adc
out
jo
pusha
pushf
add
rep
jp
call
xchg
sbb
mulb
mov
pop
in
jnp
adc
cli
inc
ss
rcr
lea
nop
cmpsl
imul
jns
daa
pop
lahf
repz
xchg
int3
jnp
ja
inc
push
shlb
sub
mov
sub
sbb
and
mov
fucom
js
in
pop
lods
lcall
mov
mov
negb
push
movsb
sub
or
adc
jecxz
repz
nop
aad
rclb
jmp
iret
push
repnz
add
cmp
mov
nop
leave
popf
fdivs
inc
arpl
ret
test
xchg
movsb
insl
and
inc
add
dec
add
lds
cld
and
fiaddl
or
inc
shl
fistpll
out
jp
jecxz
outsb
es
add
test
mov
jle
mul
dec
ja
cld
loope
nop
xchg
sbb
divl
mov
aad
data16
stos
test
shl
jne
mov
lahf
push
movsl
pop
imul
icebp
xor
in
lret
pop
insb
arpl
lcall
adc
push
mov
cwtl
cmp
imul
sbb
mov
inc
js
aad
in
dec
scas
push
std
xchg
test
push
ret
test
aad
ja
pop
dec
and
enter
xchg
lahf
jne
out
aad
push
arpl
lcall
lret
push
gs
leave
xor
aad
sarb
in
icebp
sbb
ror
and
insb
iret
sub
sub
cmp
or
je
jnp
les
test
out
mov
xor
mov
imul
cltd
testb
mov
lds
xor
aad
in
push
pop
stos
push
in
into
sub
push
xor
rcll
dec
adc
xchg
ror
shrb
movsb
jnp
movsl
jmp
fcmovnb
dec
ss
xchg
fstpl
jp
outsl
inc
dec
mov
mov
push
pop
std
mov
aam
mov
mov
dec
std
aad
aas
sub
xchg
movsl
cld
out
fists
ret
xchg
outsb
jl
sub
sub
sti
into
outsb
and
std
push
scas
sub
std
scas
pop
pop
mov
sbb
cwtl
adc
and
out
sbb
jb
inc
and
insb
aas
cmp
leave
inc
stos
out
mov
push
cmp
cmpsb
cld
loope
insl
adc
cmpsb
sub
mov
lcall
mov
cmpsl
imul
adc
jle
mov
orb
aaa
adcl
push
inc
sbb
out
andb
std
imul
mov
test
mov
inc
sub
addl
or
add
mov
into
mov
or
adc
jmp
xlat
mov
sub
add
in
mov
pop
xchg
xor
ljmp
call
adc
inc
cmp
mov
or
loopne
outsb
test
inc
mov
ret
lret
push
and
or
popf
adc
outsl
pop
xchg
cmpsb
dec
gs
ret
fistpl
stos
inc
push
and
add
out
pop
nop
fidivrs
mov
xor
int
ss
push
mov
movsl
movsb
mov
jnp,pt
adc
cmp
mov
sub
add
jmp
shrl
xor
mov
js
loope
mov
mov
xchg
cmp
xor
push
cs
ss
or
out
pop
aad
dec
dec
sbb
in
je
lret
mov
jnp
jo
and
in
in
shlb
pop
out
and
sbb
push
cmp
pop
es
xor
int3
mov
push
pusha
add
or
jnp
orl
add
mov
daa
xor
mov
sbb
cs
test
orl
hlt
xchg
imul
mov
std
sub
lock
sub
aam
inc
push
bnd
fcomi
fiadds
inc
pop
mov
aad
imul
push
bt
add
lret
scas
cwtl
fistps
popf
mov
les
xor
clc
cmpsl
icebp
stc
inc
movsb
ss
lock
inc
adc
inc
cltd
or
add
dec
mov
and
imul
data16
fsts
push
and
out
in
hlt
dec
outsl
pop
and
lock
mov
cmp
rorl
add
push
outsb
jae
dec
lods
mov
xchg
jne
xlat
mov
rcrb
out
dec
dec
scas
xor
add
in
push
lret
repz
ja
js
aaa
dec
leave
lock
mov
lcall
shlb
cmp
sub
lock
mov
stos
hlt
inc
cmp
repnz
mov
lds
test
mov
inc
int
loope
xchg
mov
jge
xor
loop
lahf
pop
fistl
xchg
jl
aad
pop
out
and
jbe
jle
in
mov
imul
add
stos
jmp
lock
mov
out
ret
addr16
inc
sub
sbb
fildll
inc
scas
lock
push
in
xchg
jmpw
in
shll
roll
pop
push
shrb
mov
movsl
sbb
inc
jns
xchg
inc
xor
sbb
shrb
jmp
bound
sarl
sahf
je
pop
mov
dec
loope
bound
jp
test
sbb
cmovge
cmpl
mov
out
xchg
ror
push
and
xor
stos
and
out
std
xchg
daa
lret
cs
dec
ss
jmp
enter
pop
xchg
movl
fidivs
sti
sub
addr16
mov
push
push
xchg
test
mov
xor
or
loopne
sbb
lret
push
add
inc
cmp
sub
lea
mov
mov
leave
xor
js
sub
push
cmpsl
jmp
lahf
xchg
bound
dec
inc
iret
ret
push
popa
mov
cmp
or
out
jns
xchg
dec
jo
aad
sub
insb
fstpt
mov
push
pop
int3
outsb
dec
jmp
push
cmp
leave
xchg
pop
daa
push
jge
aaa
clc
sarb
mov
in
mov
ja
outsb
rcl
filds
loop
mov
clc
movsb
movsb
arpl
sbb
add
mov
jno
ret
enter
mov
xor
sarb
lcall
jo
push
std
adc
fwait
cmpsb
leave
adc
dec
outsb
mov
addr16
push
stc
pop
cwtl
popf
jbe
nop
rclb
xor
mov
jae
out
fmul
sub
daa
adc
push
iret
cwtl
jne
imul
lods
or
popl
cld
push
mov
lcall
sub
xchg
insl
xchg
movsb
pop
sbb
rcrb
inc
dec
jbe
pop
pop
mov
popa
sub
sub
cmp
dec
jle
jmp
cltd
pushf
scas
cmp
out
xchg
mov
push
adc
dec
popa
push
mov
cmp
ret
cmp
push
sub
xlat
xor
mov
leave
jae
sub
add
enter
xchg
mov
add
int3
push
stos
ret
sahf
outsb
mov
push
cld
jge
addr16
inc
nop
stos
push
arpl
arpl
movsl
cld
cmpsb
dec
into
cmp
xlat
cmp
std
repnz
movsl
xor
or
mov
rolb
xchg
push
inc
scas
loop
testb
mov
repnz
outsb
pusha
pop
out
or
xchg
xchg
in
mov
hlt
push
mov
jge
gs
repz
jge
in
and
scas
enter
mov
int3
pop
fldenv
mov
push
xchg
inc
scas
cmc
adc
in
add
adc
push
adcl
insb
cmp
sbb
add
jb
in
iret
loope
fchs
js
pop
stos
dec
outsl
pushf
hlt
leave
lds
cmp
push
lods
sbbl
add
pop
and
mov
enter
fsubrs
cmp
or
push
mov
ret
mov
sub
jns
stos
adc
sahf
icebp
xchg
push
mov
push
mov
xor
cs
push
or
push
add
stos
je
out
xchg
lret
inc
es
push
sbb
imul
dec
mulb
mov
jb
jae
sbb
out
bound
icebp
je
dec
idivb
dec
cmp
mov
xchg
xchg
cmc
or
mov
mov
lea
push
arpl
and
loopne
test
jecxz
push
dec
jecxz
jg
mov
add
cli
stos
stos
out
cwtl
jle
inc
addr16
loopne
push
pop
jae
or
adc
jb
scas
lret
enter
ds
and
daa
bound
pop
shrl
jae
mov
outsb
jae
movsl
or
insb
cmp
pusha
add
mov
lds
sbb
dec
repnz
into
ds
sbb
enter
mov
sub
push
add
scas
fnstsw
jmp
mov
jne
pop
mov
pop
imul
addl
popf
cmp
pop
or
sub
adc
and
adc
mov
out
lods
or
jl
push
lcall
cmp
movsb
ret
stc
mov
aad
lahf
or
aaa
jg
jo
mov
xor
pop
xchg
cmpsl
xor
nop
mov
insl
xor
repz
addr16
dec
or
sbb
cmpsl
xlat
fdivl
push
icebp
xor
pushl
scas
push
push
xor
ret
and
jbe
popf
lahf
imul
pop
fnstcw
sarb
in
movsl
outsl
xchg
lock
out
cld
adc
test
stos
mov
out
push
push
pop
aam
pop
inc
in
or
adc
lea
or
xchg
cltd
mul
fstp
xchg
xchg
ja
leave
sahf
shlb
test
push
mov
aaa
or
and
and
stc
jmp
fucomp
push
dec
add
into
mov
adc
out
jb
hlt
mov
jmp
pop
mov
jnp
mov
and
rorb
add
or
test
rcrb
cltd
cmpsb
dec
cld
sti
sbb
sub
loope
xor
xorl
sub
mov
stc
adc
sub
mov
xor
lock
in
out
push
jbe
clc
sbb
or
fistpl
enter
mov
push
mov
xchg
jnp
outsl
scas
fiadds
jns
shl
loope
sbb
arpl
out
ret
cltd
pop
mov
js
or
ficoms
movb
cmp
dec
xchg
xlat
dec
enter
xor
push
in
sub
and
jmp
pop
mov
fidivrs
sbb
fisttpll
mov
gs
sub
pop
mov
jg
gs
jl
dec
jp
and
or
xchg
push
xlat
push
or
inc
mov
xchg
fmull
bound
push
xchg
cmp
jge
push
std
xchg
jge
adc
rolb
int
cmp
aad
cld
movsw
pop
daa
imul
xor
sti
push
enter
xor
push
or
sub
pusha
jge
cmc
call
and
jne
xchg
aaa
dec
mov
das
daa
mov
out
lods
mov
adc
stc
dec
push
cmc
mov
mov
lds
jne
xor
inc
xchg
and
push
das
dec
int3
pop
ja
inc
adc
addr16
test
subw
cmp
aam
repnz
fadds
popf
jbe
dec
clc
lcall
xchg
loopnew
push
xchg
pop
stc
lcall
in
push
cmp
inc
push
cli
incl
pushf
mov
pop
fiadds
bound
xchg
push
call
or
adc
xlat
cltd
xor
lret
and
sub
inc
pusha
xchg
jl
xchg
cmp
iret
dec
sub
or
add
mov
pop
leave
aam
fsubl
adc
and
arpl
jne
add
outsl
std
or
fldenv
jmp
js
inc
subl
aam
cmpsb
mov
push
addb
in
or
mov
sbb
stos
pop
mov
aad
adc
mov
testb
add
pop
sub
data16
iret
shrb
roll
jp
mov
mov
pop
or
mov
and
mov
cmpl
adc
popf
stc
movsl
mov
jb
and
pop
loop
hlt
dec
popa
mov
sbb
and
in
popf
int3
xor
inc
filds
mov
les
cli
xchg
mov
dec
push
lock
mov
adc
ret
int
cmp
and
mov
push
jle
add
push
pop
or
lahf
int
mov
jne
or
icebp
xchg
int3
popa
add
adc
out
mov
inc
mov
lods
xchg
scas
aad
shll
stos
push
mov
sub
adc
fs
pusha
mov
jmp
test
add
test
and
or
gs
and
loop
int3
idivb
mov
or
lock
pop
sub
fldenv
ds
xor
inc
lcall
push
xchg
add
cwtl
cmp
stos
arpl
push
cmp
push
adcb
or
dec
repz
sahf
sbb
dec
xlat
sbb
xchg
sub
int3
js
jl
sub
aad
mov
out
lret
lcall
js
testb
mov
push
inc
sar
ja
dec
and
dec
js
push
mov
pop
xor
dec
clc
hlt
xor
mov
mov
adc
gs
lock
jp
lea
std
mov
and
inc
sub
xorb
xchg
lcall
insl
std
xchg
sub
pop
fsubrl
inc
mov
dec
inc
xchg
add
or
jecxz
push
sub
stc
out
and
lcall
sbb
out
movsl
and
pop
jb
pop
or
and
xchg
xlat
pop
mov
mov
cmpsl
je
sub
pop
loopne
sbb
movsl
and
and
jg
out
loop
inc
mov
subl
jae
dec
hlt
insb
popa
mov
into
into
mov
les
je
push
push
mov
xchg
fisubl
clc
das
pop
and
cmp
call
insb
push
out
xchg
js
idivb
lods
xchg
gs
adc
or
test
jno
es
cmp
jg
gs
loopne
adc
int3
stos
outsb
mov
sbb
or
push
idiv
mov
pop
xor
je
daa
push
mov
mov
inc
aam
test
push
jmp
mov
lock
rcll
sub
fisubrs
nop
dec
push
or
dec
add
lock
ds
ret
jg
cs
inc
mov
pop
xchg
xor
pop
dec
aas
adc
lcall
rolb
mov
sub
out
repnz
add
jno
pop
mov
adc
pop
push
sub
or
inc
ret
mov
int
int
incl
mov
xchg
and
mov
xor
inc
add
cmpsl
lret
stos
cmpsl
dec
mov
push
mov
out
lahf
inc
mov
aad
and
mov
into
orb
ficoml
into
dec
inc
cwtl
stc
adc
mov
mov
cs
fistpll
adc
inc
and
repz
out
jge
lahf
sub
and
jo
int3
mov
mov
ds
cltd
push
sarb
jecxz
inc
push
pop
lahf
fistpll
outsb
xchg
inc
iret
cmpsl
jb
dec
and
cmp
jecxz
dec
mov
flds
movsl
les
or
cmpsl
lock
pusha
and
jns
mov
xchg
push
sub
cli
jno
jne
jb
pop
push
je
cmp
or
cmp
xchg
jno
jecxz
mov
cmpsb
xchg
fstl
push
aaa
ljmp
sbb
inc
mov
dec
cmp
push
adc
cmc
scas
das
mov
jno
imull
fwait
adc
sti
sub
addl
or
adc
js
pop
ret
cltd
outsl
nop
out
test
jg
pop
adc
fwait
sbb
ret
mov
or
jecxz
lds
or
sbb
mov
mov
push
or
bnd
push
mov
mov
fwait
or
fldcw
sbb
scas
sub
bound
test
pop
clc
imul
adc
sub
ret
repz
cmp
jmp
cmp
out
xchg
fadd
push
mov
inc
mov
movsb
hlt
inc
mov
push
addr16
mov
pop
mov
inc
xor
sub
adc
arpl
js
adc
mov
fnsave
pop
in
adc
fwait
sbb
popl
dec
cwtl
int3
cmpsl
jnp
roll
bnd
fwait
cmp
stos
test
mov
out
sub
dec
imul
andl
shll
sbb
jecxz
lret
mov
mov
test
pslld
inc
sub
insl
sbbl
int
add
dec
psllw
pextrw
push
pop
aas
addr16
rorl
jg
jp
jl
stos
add
mov
call
lahf
push
sti
xchg
loope
xor
and
leave
orl
pusha
pop
ret
hlt
ficomps
in
inc
pop
or
sub
mov
outsb
icebp
push
adc
xor
xchg
mov
lods
and
shlb
mov
punpcklbw
sbbl
repnz
push
mov
ret
xlat
xchg
lea
lret
jl
jl
ret
int
sub
push
mov
dec
ds
icebp
cmpsb
xor
and
jae
adc
inc
xor
mov
dec
cltd
inc
sub
inc
pop
lret
cmp
add
pop
add
and
sti
xor
rcl
mov
popa
outsl
xorb
mov
xchg
jecxz
xchg
out
jb
inc
mov
sub
mov
dec
outsb
in
lds
adc
push
sti
pop
fidivs
mov
out
and
mov
xor
add
movsl
cmpsb
sti
mov
xlat
fistpl
in
dec
test
xchg
dec
or
loop
push
or
fists
adc
jno
js
mov
and
mov
lds
push
test
fs
mov
repnz
loopne
jle
pusha
push
es
push
bound
es
cltd
in
jmp
pop
int3
sbb
push
fadd
sahf
adc
adc
std
push
mov
xchg
imul
sbb
jge
pushf
cmc
xchg
lock
sahf
jns
shl
and
loopne
into
push
sahf
push
xchg
mov
sbb
or
imulb
jnp
movsl
push
cli
mov
pop
pop
ror
dec
stc
mov
jp
fidivs
cmpsl
enter
je
mov
xchg
xchg
xchg
push
jle
movswl
mov
push
mov
inc
popa
call
in
test
loope
or
mov
sbb
ljmp
mov
je
popf
loopne
cmpsl
or
push
pop
movsl
shlb
add
xchg
and
xchg
xchg
and
lock
add
imul
inc
ret
mov
test
or
mov
pop
xchg
add
nop
and
xchg
out
xchg
cmc
dec
mov
aas
loopne
xlat
jl
mov
out
stc
test
dec
and
push
std
mov
divl
pop
mov
insl
popa
add
xchg
or
aam
pop
or
pushf
mov
fsubrl
add
cmp
jmp
cmp
pop
sbb
fistl
mov
ds
mov
jns
daa
xchg
icebp
sub
outsb
test
test
jns
fcmovbe
mov
mov
pop
out
push
sbb
lock
dec
out
xchg
adc
test
jns
add
cs
pop
mov
jnp
cmp
pushf
sbb
int3
lock
pop
in
aad
add
dec
jnp
sbb
mov
push
js
imul
xor
jecxz
ret
in
add
jp
popa
rorb
leave
out
xor
leave
xchg
xor
adcb
gs
pop
inc
mov
adc
adc
out
or
fcomps
sub
hlt
push
bound
xlat
dec
fmull
bound
in
push
jge
sbb
sub
insb
jno
xlat
pop
jecxz
lods
fwait
or
rcrl
jae
push
arpl
cmp
sti
xor
or
fiadds
mov
jg
in
sub
mov
pop
lds
push
dec
adc
jo
fimull
mov
xor
movsl
and
xor
out
mov
lock
xchg
or
mov
pop
push
bound
sti
mov
pop
or
and
and
and
add
aam
icebp
push
cmpsb
mov
mov
push
jecxz
std
add
ljmp
hlt
lret
out
in
xchg
imul
mov
pop
arpl
jp
xor
fisubs
rcll
subl
jl
das
cwtl
and
pop
sbb
into
imul
push
jnp
mov
icebp
fimull
scas
jns
shlb
fsubs
decl
inc
pop
xchg
and
fists
nop
imul
popa
sub
ds
lods
jle
xchg
hlt
cmpsl
add
jge
loop
es
mov
out
fwait
in
rol
je
in
mov
jl
packuswb
iret
nop
daa
stc
mov
mov
push
dec
or
lcall
popf
jne
pop
pop
outsb
mov
and
std
bound
cmp
cmc
mov
imul
jmp
addl
inc
lret
pusha
jno
aad
shl
mov
fdivrs
mov
orl
add
and
jmp
pusha
mov
clc
inc
cmpl
roll
push
lahf
sbbb
jmp
ret
sub
inc
fcoml
mov
aam
leave
outsb
adc
repnz
mov
mov
and
lock
mov
jmp
inc
and
ret
or
jbe
scas
mov
dec
and
orl
and
lcall
lret
pusha
nop
das
push
mov
xchg
mov
negl
cmp
in
test
fdivrl
pop
adc
subl
sbb
sbb
pop
jo
sbb
add
sub
iret
mov
mov
repz
imul
pop
sub
inc
mov
sub
shrb
pop
sbb
into
mov
inc
dec
jecxz
fs
lods
pop
xorl
mov
mov
pop
xor
mov
or
aam
jle
stc
in
jle
inc
scas
or
dec
ret
xor
or
push
outsb
cmpsb
jo
fnstcw
add
mov
stc
mov
call
cwtl
jno
jnp
bound
mov
roll
pop
xor
testl
loope
jmp
xchg
and
add
jecxz
push
shrb
mov
fimuls
lahf
ret
sbb
inc
xor
add
mov
dec
jb
lds
or
jno
cmc
mov
sbb
idivl
stos
es
js
pop
xchg
pop
xchg
jno
std
add
mov
fcmovnb
rcrb
xchg
adc
dec
arpl
add
inc
adc
mov
jae
add
mov
mov
pop
sahf
push
sbb
adc
dec
in
rolb
dec
mov
popf
sub
aam
pop
movsb
test
xchg
inc
adc
xchg
sti
mull
mov
iret
sbb
das
cmc
lret
cmpl
cltd
fidivrl
aam
icebp
mov
call
push
xchg
rcrb
mov
into
mov
js
incb
xchg
sub
add
dec
sahf
sbb
mov
movsb
movsl
mov
sub
je
adc
jecxz
xchg
pushf
mov
int
add
daa
xor
adc
arpl
out
jbe
testl
xor
pop
test
sub
popa
repz
int3
in
mov
xchg
push
std
out
xchg
loope
xorb
insl
xor
enter
adc
xor
outsl
mov
jmp
incl
scas
mov
jo
outsl
or
xchg
std
jmp
cmp
loopne
pusha
loope
xchg
mov
ret
aaa
adc
add
jns
add
arpl
pop
push
jg
popf
add
pop
or
ret
sub
dec
mov
add
insb
push
jg
das
sti
xchg
loope
sahf
and
sbbb
popa
movsl
xchg
push
arpl
adc
xor
sub
and
pop
adc
andl
hlt
jbe
fcmovbe
adc
shrl
xchg
daa
jl
add
inc
mov
mov
dec
xor
xor
or
jmp
pop
fstpl
movsl
ljmp
push
pop
mov
repz
clc
bound
shll
test
out
cmp
pop
mov
adc
pop
daa
pusha
cs
out
loop
imul
add
xchg
push
addr16
mov
stos
movsb
or
stc
add
popf
daa
mov
mov
repz
sub
les
bound
xchg
stc
fldcw
mov
cmp
fldt
das
pushf
jns
mov
or
jne
frstor
cmp
out
jae
subl
pop
mov
bound
ret
sub
jne
pop
sub
mov
and
pop
push
rcl
movb
adc
loope
mov
adc
fstps
mov
cmp
xor
mov
mov
dec
out
pushf
push
cmp
xor
fs
popf
cmc
lcall
dec
xchg
push
sub
jne
jmp
pop
xor
cwtl
lods
and
js
add
fsubrp
pop
fwait
sbb
rorl
pop
xchg
push
jo
and
dec
sub
sbb
iret
xchg
fsts
push
hlt
adc
mov
mov
orb
fmull
inc
pop
dec
sbb
loop
dec
ret
je
pop
pop
in
out
mov
flds
adc
or
aas
cltd
xor
mov
mov
xchg
jns
xchg
lahf
add
adc
lods
in
outsb
enter
orl
adcl
push
dec
sbb
push
mov
das
daa
dec
negb
add
inc
cmp
mov
and
addb
add
movb
sbb
jno,pn
adc
jmp
sub
repz
rcrb
shrl
or
xor
mov
jb
push
pop
jg
xchg
jle
insl
out
jmp
inc
stos
imul
negl
call
inc
jmp
add
inc
not
or
out
sub
push
sti
inc
sbb
cld
or
mov
push
push
xchg
dec
cs
add
xchg
push
aad
rcr
add
mov
push
fstpt
xor
cld
pop
ss
into
lret
mov
pop
scas
ja
and
scas
adc
out
adc
cmp
lahf
icebp
lods
into
fisttpll
push
pop
push
cld
xchg
sub
or
sahf
adc
jl
pop
je
jmp
jg
dec
pop
pop
sbb
wbinvd
cmp
cmovp
jge
jnp
pop
mov
xchg
jb
incl
gs
or
enter
mov
std
mov
mulb
jl
enter
pop
paddd
push
aas
sbb
jns
cltd
ljmp
fbstp
mov
int
ret
js
lock
loop
push
dec
clc
pop
lret
cmp
dec
push
pop
jp
jb
adc
sahf
outsb
adc
scas
pusha
push
pop
stc
mov
rcrb
mov
xchg
or
sub
jae
inc
icebp
mov
in
rolb
sbb
test
js
mov
dec
pop
xchg
loope
fsubrs
lret
push
loope
test
push
ljmp
jnp
sbb
test
sarl
add
add
lock
aas
stos
push
mull
mov
cs
mov
ret
mov
movl
and
iret
pop
lods
or
popf
mov
lcall
jne
jo
inc
sbb
divl
fnsave
cmc
pop
test
repnz
xchg
push
iret
loopne
xor
sahf
inc
clc
repnz
stos
xchg
jo
pop
mov
test
rcr
pop
or
lret
push
out
aam
movb
adc
in
jbe
in
hlt
outsl
popw
fidivl
sub
fcoms
mov
adc
mov
xor
xor
pop
pop
ljmp
fisubl
jns
js
shll
fcmovnu
inc
cwtl
sub
dec
cltd
inc
xchg
push
sbb
and
dec
sti
adc
cs
dec
or
cmp
in
cmp
inc
jp
shlb
mov
xchg
jl
insl
inc
cld
lret
fs
int
rol
push
fwait
jns
ret
clc
ss
outsl
in
std
cmp
outsb
mov
ret
lcall
jmp
or
add
inc
add
push
mov
or
rcll
or
daa
imul
sbbl
addl
mov
dec
lcall
jnp
push
movsl
xchg
pop
cld
cmc
cmp
cmpsb
movsb
jmp
repz
in
jecxz
cmp
sub
mov
jb
or
mov
mov
push
subb
mov
loop
xchg
movsl
or
ljmp
and
cmp
nop
lret
leave
xchg
cltd
popa
fldenv
outsl
movsl
std
cwtl
add
inc
aaa
jno
dec
icebp
idivb
mov
lret
clc
push
and
aaa
mov
adc
and
rol
popf
pop
pop
inc
xor
int3
inc
pop
push
rcr
xor
fnsave
lods
mov
push
pop
jmp
push
jl
mov
push
mov
mov
roll
or
bound
jbe
test
and
mov
ds
jne
xchg
or
loope
in
out
jae
sub
and
push
scas
dec
xor
test
insb
movsl
lods
dec
addl
lock
cmp
shrb
mov
pop
popf
out
outsl
movsl
push
pop
dec
inc
imul
cmpsl
dec
push
sub
arpl
popa
mov
incb
xchg
stc
xchg
js
filds
ret
lods
mov
rolb
out
jns
rolb
ds
dec
inc
xor
mov
loop
ret
aad
push
scas
daa
pop
test
and
bound
jp
mov
sbb
jae
lea
jnp
outsl
into
dec
ret
inc
sbb
push
mov
inc
push
or
push
sbb
lods
pop
pop
cld
mov
and
pop
pop
xchg
fstps
jnp
pop
insl
mov
xchg
imul
sbb
pop
loop
sub
movsl
and
cwtl
and
out
cmp
clc
inc
aad
nop
into
sub
insb
or
cmp
push
call
xor
mov
rolb
lds
jmp
scas
andb
rol
int3
dec
out
pop
jg
sub
inc
cmp
mov
adc
js
push
pusha
mov
adc
test
int3
into
je
call
mov
loope
push
push
mov
lock
mov
pop
imul
jmp
arpl
movsl
add
adc
mov
sbb
and
add
dec
mov
sub
cmovno
in
pop
adc
lcall
cmpsl
sub
add
out
addr16
mov
ret
cli
cmc
dec
xchg
lods
and
xchg
ss
add
mov
popa
mov
stos
cmpsl
movsl
pop
fwait
mov
or
mov
or
repz
pop
jle
popf
push
jle
or
jp
pusha
inc
xlat
insb
mov
sbb
push
mov
lahf
mov
daa
push
scas
jbe
stos
fwait
xchg
pop
negb
ljmp
in
imul
aam
loop
lods
fsts
mov
jp
shll
out
lret
lcall
sub
or
fs
jmp
out
cltd
popf
in
push
stos
push
cld
outsb
and
dec
push
bound
cs
mov
xor
xchg
adc
inc
or
cmc
xchg
jmp
sti
push
call
cmp
xchg
mov
sbbl
xchg
loop
movsb
mov
jmp
mov
mov
jecxz
stos
mov
adc
ret
sbb
mov
mov
das
mov
bound
adc
in
jmp
rcl
subb
dec
test
inc
out
fcomps
testl
xor
sbb
ja
outsb
mov
aas
xchg
pop
sub
sahf
in
sbb
jne
arpl
cltd
pop
jl
mov
xchg
hlt
mov
notl
sbb
and
inc
xor
inc
loop
inc
out
cmp
jp
lret
mov
cwtl
shll
add
adc
cmp
shrl
mov
jae
sbbb
js
lret
dec
inc
inc
push
push
push
call
int3
outsl
aad
fldenv
mov
in
mov
push
sbb
out
mov
pop
ds
int3
mov
in
aad
xor
adc
jno
dec
std
jmp
repz
cs
xor
push
xor
out
vmwrite
scas
imul
lds
adc
aas
push
shl
adcl
mov
loope
mov
lock
les
aas
dec
pusha
stos
dec
out
mov
subb
je
mov
mov
sahf
shl
ss
outsb
outsb
pushaw
and
pop
push
xchg
mov
sahf
jmp
xor
cmp
xor
push
xor
adc
pusha
mov
test
pop
imul
mov
nop
movsl
and
popl
out
and
or
jae
inc
jp
ljmpw
cmp
mov
add
cmp
adc
inc
xchg
gs
mov
mov
xor
push
mov
sbb
stos
scas
dec
repz
sub
std
movsl
jne
insb
mov
xor
out
cmp
lea
fucom
enter
sub
inc
daa
mov
adc
jmp
push
adc
mov
out
cli
xor
mov
xchg
pop
pop
pop
push
add
fs
jecxz
aas
shrb
push
ds
push
or
push
movsl
repz
sbb
pushf
jno
mov
adc
mov
xor
push
mov
or
add
sub
sbb
in
repnz
out
mov
dec
inc
cmp
adc
std
pop
push
inc
or
mov
and
sbb
pop
jl
popa
popfw
xor
mov
ret
movsl
xchg
or
pop
lds
pop
xor
dec
shrb
or
in
pop
push
pop
mov
sbb
and
imul
aad
mov
xchg
sub
pop
call
andb
mov
inc
or
dec
xchg
jecxz
pop
dec
push
mov
ret
mov
sub
push
mov
test
outsl
sti
test
daa
jb
sti
ljmp
inc
lock
aad
loope
lret
cmp
rcrl
inc
adc
lds
and
loope
cmp
jmp
rcrb
sub
or
ds
in
xchg
mov
cmpsb
sahf
leave
xchg
dec
sti
scas
loop
mov
jnp
addl
sahf
mov
mov
fs
add
out
mov
jne
and
or
rcrb
enter
push
mov
sub
inc
std
frstor
xchg
fcoms
js
mov
mov
gs
pusha
js
add
xchg
arpl
dec
call
xchg
pop
mov
xor
push
or
std
pop
int
mov
jp
dec
shll
cmp
mov
add
adc
pop
std
and
in
xor
stos
jle
push
inc
ljmp
or
push
or
cwtl
adc
test
jge
cs
popf
xchg
cmp
add
mov
in
fidivrl
cmp
cmp
xor
or
popf
push
push
and
sbb
add
in
cwtl
adc
xlat
xor
mov
sbbl
loop
clc
fld
mov
or
mov
aam
pop
stos
repnz
ja
xchg
cmc
fnstenv
jle
imul
xchg
mov
add
lret
push
scas
sbb
add
lea
cmpsl
rorl
mov
mov
mov
add
pop
je
mov
sbb
cmp
mov
fstps
andl
pop
enter
movsl
ds
mov
cmpsl
jae
out
dec
mov
sub
fsubs
out
outsl
dec
outsb
aam
das
call
scas
enter
inc
xchg
lahf
ss
cs
mov
xor
hlt
cmc
inc
pusha
add
data16
pushf
push
shll
mov
xor
cmp
test
pop
fistps
push
mov
bound
xor
pop
xchg
lret
mov
ficomps
sub
adc
daa
or
push
aam
daa
jnp
aad
es
loop
push
push
jp
mov
out
mov
int3
or
imul
mov
lods
jmp
stos
cmc
in
iret
test
push
jo
movups
push
xor
loope
in
pop
enter
int
leave
fs
cmp
mov
cmp
cmpsb
sbb
xor
jns
xorl
cmp
xchg
sar
loopne
jno
xchg
xchg
cmp
adc
and
ror
hlt
mov
lret
lahf
xor
push
sar
mov
push
and
push
mov
inc
bound
cmp
push
movb
decb
sbb
inc
mov
and
or
mov
xchg
sahf
ret
stos
and
xchg
nop
std
rcl
mov
pop
stos
sub
roll
outsl
inc
inc
mov
pop
ss
inc
mov
sbb
scas
dec
loop
cmc
and
mov
mov
arpl
clc
stc
popw
mov
adc
js
adc
hlt
mov
and
shrb
sbb
pop
call
enter
jb
jns
rolb
lea
test
and
and
mov
ret
outsb
imul
shlb
daa
mov
cmp
out
mov
mov
sti
and
stos
clc
lods
mov
and
fiadds
xchg
xchg
pop
cmpl
ret
imul
fisttpl
pushf
mov
shrl
cmp
movsb
cmp
pop
cmp
mov
mov
inc
dec
push
mov
arpl
lods
repz
mov
loope
fadds
pop
jo
lds
aaa
sbb
ja
mov
push
outsb
xchg
sbb
jmp
sub
add
dec
dec
aas
ret
stos
mov
lcall
xchg
jno
fistl
shl
mov
test
mov
mov
pop
fildll
in
jns
daa
push
sti
pusha
daa
inc
cwtl
cmp
adc
dec
push
pop
cltd
and
dec
jbe
cld
sahf
test
jne
cmp
nop
xchg
pop
insb
sub
dec
or
dec
scas
sub
mov
sahf
push
or
sub
ret
cli
push
ljmp
imul
hlt
adc
push
cwtl
inc
add
and
clc
movsb
mov
fiaddl
cmpsl
xchg
mov
inc
push
into
mov
in
mov
ljmp
jge
sub
lods
jl
ret
nop
repnz
loop
out
or
in
mov
mov
pusha
push
ljmp
push
setle
mov
fistpll
inc
xor
sbb
loopne
sub
jecxz
lret
out
xchg
and
mov
adc
fdivr
sbb
cld
popa
sub
xlat
xor
xor
and
jp
movsb
into
or
out
xchg
sahf
fs
hlt
mov
movsl
inc
outsl
push
sub
push
js
and
inc
stos
imul
int
mov
adc
lods
addb
mov
aaa
xor
sub
adc
cli
testl
and
mov
sbb
test
call
in
clc
bound
repnz
faddl
sbb
inc
cli
or
sub
in
mov
fstl
test
sbb
xorl
jecxz
iret
mov
rcrl
hlt
push
sub
dec
sahf
fucomi
adc
jnp
cmp
sub
movsl
pop
mov
ret
and
in
insl
in
mov
popf
mov
push
aas
jae
push
jmp
xor
pop
xlat
push
push
adc
outsl
jecxz
pushf
scas
mov
clc
test
icebp
mov
movsl
adc
cli
xchg
jmp
add
test
mov
iret
lcall
xlat
jae
ret
xchg
scas
add
mov
ljmp
mov
pusha
pusha
stos
push
lahf
lahf
insl
notl
js
pushf
xor
xchg
pop
movsb
test
jbe
dec
and
mov
out
cmc
imul
cmp
jne
sub
cmp
cmp
cs
add
insb
shr
test
aas
add
pop
negl
femms
sbb
mov
ja
rclb
lcall
xchg
mov
mov
je
cmpl
inc
dec
aam
sbb
mov
ljmp
cmp
movsl
stos
pusha
cmp
pop
cld
int
insl
inc
pusha
fldcw
jg
jno
jne
iret
rcr
mov
fdiv
pop
pop
sbb
dec
xchg
leave
testl
repnz
inc
data16
test
iret
scas
push
or
aad
cld
test
adc
or
and
inc
pop
pop
int3
pop
out
fidivs
pop
xchg
rcrl
jb
pop
jnp
popa
xchg
pop
pushf
adc
add
jbe
pusha
dec
xchg
and
in
fildl
shr
mov
xchg
cli
cld
es
in
mov
dec
imul
adc
sub
dec
add
mov
add
inc
mov
stos
imul
repz
sarb
xlat
sbb
nop
stc
call
jmp
push
inc
in
sbb
mov
aad
mov
mov
addr16
jae
pop
xlat
sub
mov
push
scas
and
xor
or
dec
sbb
xchg
and
xor
popf
fnstcw
out
fisttpll
movsl
mov
xchg
pop
cmpsl
push
mov
aad
je
test
fdivrs
dec
fiaddl
in
aas
and
push
jo
call
fidivl
sub
in
jno
scas
jge
mov
gs
jo
sub
mov
test
std
and
pop
cmp
aaa
add
lds
pop
outsl
stos
int
cmp
mov
sarl
ror
or
into
adc
or
int3
xchg
int3
sub
cld
loop
or
rol
sub
xlat
out
pop
cltd
inc
mov
addr16
shll
cld
cltd
shrl
cmc
scas
scas
cli
in
inc
out
adc
cmp
inc
jno
mov
jmp
mov
inc
rolb
stos
cli
shll
cli
dec
subl
pushf
sti
xor
repz
scas
enter
xor
xlat
mov
xchg
ljmp
jmp
rcl
sbb
sbb
sbb
sbb
mov
loopne
inc
mov
sub
stos
jb
mov
push
mov
test
pop
push
sbb
cltd
or
mov
sbb
fwait
mov
xor
xor
cmpsl
jo
repnz
mov
sbb
pop
mov
jmp
xchg
test
push
fidivrs
rcrb
xorb
mov
mov
aas
ud0
push
jno
jp
mov
or
adc
adc
and
cmpsl
adc
sarl
sbb
or
pop
movsl
lahf
movsb
rep
das
push
in
lock
mov
popf
in
jne
repz
cmovp
push
add
cmpsb
dec
xlat
cmpsb
fldcw
add
pop
out
jecxz
jle
into
cmp
cmp
lret
xor
xor
cld
adc
xlat
push
cmc
out
push
js
test
imulb
iret
incl
xlat
test
xchg
xchg
sub
push
pop
jecxz
aas
jmp
push
sahf
or
loopne
lds
outsl
insl
jbe
lds
fidivl
fadds
add
scas
jno
jle
push
rcll
call
mov
xchg
imull
pop
add
jo
gs
jg
insl
and
sbb
repz
sub
pop
adc
insl
xchg
jns
xorl
pop
xchg
loop
movsl
sahf
mov
jmp
or
mov
mov
fidivrs
mov
test
test
ljmp
pop
negb
out
movsl
dec
and
ret
das
iret
dec
push
add
xor
imul
dec
es
ret
push
xor
std
sub
xchg
outsl
push
jl
and
sahf
shll
mov
dec
push
or
cli
pop
xor
cli
jp
aas
pushf
pop
fistpl
mov
das
mov
jg
out
or
mov
fwait
ja
stos
movsb
mov
stc
pushf
rcrl
in
inc
gs
add
ret
jne
ror
adc
sub
mov
sbb
shll
out
addr16
das
cmp
movsl
cmp
mov
shl
mov
mov
xchg
or
cld
aam
pop
sub
jae
push
dec
mov
mov
popa
fucomi
xor
sub
shll
int
lods
mov
or
and
cmp
data16
cmp
in
outsb
aad
mov
mov
lahf
ret
xchg
addr16
jns
jg
shll
sub
push
dec
fsubl
sbb
ja
vpshab
push
sti
push
jg
adc
mov
pushf
xor
sub
aad
fs
pop
xchg
leave
push
stos
imul
push
or
add
sbb
movsl
cmpsl
cmp
ds
mov
mov
push
dec
cld
aam
jnp
pop
or
sbb
fwait
sub
xchg
out
mov
pop
xchg
mov
adc
cmpsl
enter
test
addl
lcall
aam
jno
sti
mov
cld
xchg
or
fwait
in
mov
pop
test
sti
mov
or
roll
daa
lea
inc
mov
or
les
mov
into
mov
ja
lea
dec
pop
xlat
sbb
enter
mov
pop
sub
xchg
inc
int3
xor
fisttps
add
scas
xchg
pop
pop
push
subb
and
cli
cmc
or
arpl
inc
imul
test
jno
mov
test
test
lahf
and
roll
push
adc
pop
out
aam
insb
into
push
add
xchg
inc
ja
arpl
mov
pop
or
or
out
int
mov
mov
rorl
imul
cwtl
lods
xor
jmp
push
jb
loope
and
pusha
lods
aaa
mov
jp
sub
cmp
jecxz
jbe
mov
ss
add
fcmovnb
mov
sub
arpl
lea
cmpsl
push
in
imul
aas
pop
dec
jns
sub
in
mov
cli
call
es
les
jns
aaa
test
push
sti
inc
leave
sub
mov
pop
mov
orl
loop
loopne
addl
in
push
fs
cltd
pushf
outsb
jbe
inc
pop
mov
dec
aas
mov
sbb
mov
add
xor
jecxz
push
and
outsb
aam
aaa
addb
lret
or
adc
lods
jbe
add
sub
push
xor
shll
adc
pop
mov
nop
add
cld
sub
cmpsl
push
std
ss
mov
mov
stos
daa
mov
insl
fists
dec
daa
sbb
or
mov
push
mov
xor
testb
data16
notb
sbbl
jmp
push
xchg
jb
lods
lods
stos
pop
push
aaa
and
and
gs
mov
rcl
imul
mov
roll
add
push
or
pop
mov
xchg
stc
add
xor
nop
dec
enter
or
xor
or
xchg
mov
dec
sbb
push
jle
push
arpl
or
stos
push
xor
inc
cmp
fisttpll
popa
out
xchg
shrb
data16
xor
scas
sbb
cmp
jno
lds
push
xor
out
or
aas
sub
xchg
bound
inc
xchg
into
sub
jmp
push
in
xchg
int
stos
pop
pop
cmp
js
inc
lcall
pop
flds
cs
sub
mov
insl
xchg
aas
pop
mov
lcall
lea
mov
adc
jnp
and
xchg
and
sbb
add
push
popf
add
lods
in
iret
or
mov
test
push
adc
popa
sub
test
push
and
jp
popf
mov
les
mov
aad
jl
push
pop
scas
aaa
adc
aam
fildll
inc
jb
mov
lret
mov
xor
cld
mov
cs
int
push
adc
stos
mov
lea
jb
pop
xchg
ss
mov
push
inc
inc
cwtl
imul
jl
inc
test
cmp
push
mov
stos
push
inc
cmp
push
jbe
ss
pop
or
pop
loop
add
and
pop
mov
mov
mov
scas
loopne
out
rcll
into
fdivrs
into
jbe
cmc
dec
imul
xchg
into
pushf
fsubs
sub
add
and
lret
dec
and
fwait
dec
push
shlb
xchg
leave
or
fisttps
ljmp
mov
test
js
pop
mov
out
cmc
aad
mov
jl
push
push
aaa
pusha
stc
sub
or
and
mov
pop
add
into
out
mov
sub
ret
mov
sahf
pusha
pop
nop
and
dec
and
sbb
pop
pushl
adc
mov
mov
movsb
pop
cmp
add
nop
sarl
add
cs
movsb
inc
mov
sbb
jae
lock
inc
mov
add
xchg
dec
jp
mov
stos
cmc
add
mov
fstps
and
inc
jecxz
icebp
idivb
test
test
mov
leave
gs
int
fimull
inc
jl
hlt
imul
jb
sahf
mov
and
pop
mov
mov
add
pop
sbb
pop
push
rcll
sub
pop
loop
outsb
ret
adc
adc
xchg
xchg
xchg
loopne
mov
ja
mov
jbe
fnstcw
addr16
mov
jb
dec
mov
movsl
xor
jecxz
sub
imul
adc
add
lods
jmp
cmp
imul
xchg
adc
pushw
pop
push
and
push
test
sbb
lds
lret
lret
ss
adc
lods
lock
cli
xor
dec
insb
addb
sahf
cmc
mov
out
push
ljmp
popa
mov
fcoms
outsb
test
fstpt
stos
lahf
xchg
enter
jp
xchg
jle
sti
sbb
jmp
aam
rsm
sbb
nop
sub
clc
add
notb
popf
inc
nop
or
stos
lcall
xchg
fidivs
lcall
or
dec
stc
out
fisubrs
inc
and
stc
adc
pop
sbb
das
int
xchg
js
mov
xchg
out
mov
push
or
dec
jnp
loopne
cli
ds
fwait
pop
test
pop
les
inc
aam
stos
dec
push
xchg
test
jmp
xchg
adc
js
es
mov
test
repz
clc
out
pop
xchg
and
enter
push
mov
into
icebp
jb
in
incb
dec
fldl
lock
mov
push
or
lds
inc
leave
xor
stc
ljmp
and
jge
mov
es
dec
enter
cmp
add
sub
add
cmp
std
cwtl
imul
movsl
xchg
cmc
daa
xor
dec
mov
insb
inc
cmpsb
mov
adc
cs
divb
jno
insb
loop
jns
std
test
xchg
and
cmp
mov
cmp
dec
sbb
cmp
sahf
data16
jae
mov
xor
int
mov
fs
dec
into
movsl
jnp
xor
in
mov
cmc
xchg
ret
mov
jno
fistps
arpl
inc
nop
test
push
mov
push
xor
and
cltd
cli
imul
aad
mov
popa
mov
sahf
sbb
pop
imul
dec
idivb
nop
sbb
adc
adc
mov
int
inc
pop
mov
sub
sub
lds
insb
mov
xchg
xor
push
mov
imul
jl
xchg
scas
mov
rorb
out
scas
mov
jp
fisubl
dec
cmp
cli
lds
arpl
jmp
cli
outsl
inc
sbb
sbb
ljmp
es
pop
xor
aad
mov
cmpl
nop
adc
mov
fwait
sbb
inc
ficomps
arpl
jp
bound
sub
mov
scas
sarb
sbb
out
cmp
sbb
sbb
mov
xlat
scas
shlb
test
jns
in
dec
inc
dec
mov
outsl
sbb
rcrb
jp
cmp
lods
mov
pop
push
into
xchg
and
imul
movb
nop
cmpsl
movsb
std
xor
aad
mov
xor
jae
mov
loope
adc
adc
or
pusha
jmp
out
jbe
push
adc
and
cld
xor
fucom
xchg
jno
popl
inc
add
mov
out
cmp
shrb
jl
or
pop
push
xchg
push
test
inc
cmp
push
jle
repz
in
jge
cmp
inc
xor
inc
mov
inc
jno
lcall
inc
sbb
repz
mov
inc
cmpsl
lea
popf
xchg
jmp
jp
out
cli
int3
imul
dec
pop
push
dec
sub
gs
lds
sahf
vsubss
sbb
xchg
mov
mov
les
imul
in
sbb
pushf
add
mov
or
lret
aas
in
sbb
enter
pop
je
jns
and
adc
pop
fcomp
and
int
pop
icebp
notl
rcll
push
jo
mov
mov
mov
negl
xchg
adc
pop
clc
push
sub
aam
and
jns
add
mov
sbb
andl
lods
mov
das
ljmp
push
sub
test
scas
stos
fisubrs
test
addl
dec
call
out
loope
repz
or
imul
xchg
jle
hlt
stos
stc
pop
std
jns
mov
push
aam
pop
es
jnp
lahf
pop
push
push
fsubp
push
test
fmull
es
add
cmp
sub
cli
pop
cmp
ljmp
int3
std
adc
ficoml
test
rcll
push
in
addr16
sub
stc
mov
imul
mov
and
jp
es
mov
inc
adc
add
xchg
xchg
test
xor
xor
mov
xor
faddl
les
in
repz
popf
nop
jp
mov
mov
nop
jge
jge
jge
xchg
mov
dec
and
xchg
jbe
push
lods
or
cltd
jb
outsl
push
fadd
jl
push
adc
cmp
xchg
mov
mov
adc
pop
jecxz
add
mov
sub
rcrl
dec
fidivs
fdivl
popf
mov
jmp
sbb
lods
daa
mov
jne
mov
pop
aaa
push
repnz
inc
loopne
outsb
add
add
inc
mov
dec
adc
insl
pushf
jge
pop
pop
xchg
mov
jo
addr16
popa
push
rorl
mov
aam
dec
dec
loop
ret
mov
sub
leave
loope
out
jle
shr
push
jae
inc
mov
jmp
int
lods
mov
data16
sbb
or
mov
mov
fsubl
jg
or
stos
dec
imul
imul
mov
and
rol
mov
mov
insb
fiadds
or
shll
xor
clc
mov
xlat
shrl
inc
testb
xchg
sub
or
mov
xchg
out
mov
lock
fists
jnp
sub
jnp
and
jns
fisubrl
lock
push
daa
sub
mov
xor
inc
push
fdivrs
push
movsl
out
push
dec
cli
aas
mov
iret
add
pop
push
aam
inc
sbb
imull
or
lods
push
mov
jle
or
inc
test
outsb
and
sbb
and
pop
jb
adc
fsubrl
lahf
xchg
and
arpl
inc
add
in
xchg
js
in
rcll
mov
aas
adc
icebp
jo
mov
jae
push
adc
and
fisttps
stc
jno
sub
fldl
mov
stos
in
mov
dec
pushf
movsb
inc
pop
loopne
sbb
mov
loope
mov
enter
lds
nop
sbb
or
or
inc
xor
into
sub
cwtl
sbbb
pop
hlt
push
jl
lock
push
stos
xchg
sub
int
add
pop
sbb
xor
and
push
gs
mov
leave
dec
cmp
pusha
add
xchg
mov
push
mov
sub
adc
or
adc
jae
sbb
ljmp
sbb
push
dec
adc
xor
cmpsl
cmp
and
out
and
les
scas
push
inc
fwait
insl
dec
ror
add
mov
iret
or
bound
popa
sbb
cmp
jae
je
stos
lods
fstpt
mov
mov
stos
outsl
push
pop
pop
and
rcrl
pop
repnz
int
into
and
movsl
in
movsl
jg
sub
lret
jmp
pop
pop
shrl
std
es
movsl
xor
mov
mov
dec
arpl
daa
sbb
sub
inc
in
shrb
cld
sahf
sbb
sbb
in
adc
sbb
inc
jno
add
aam
dec
call
fldt
pop
inc
in
and
xor
int3
adcl
or
cs
roll
xor
es
divps
stos
loopne
pop
jge
outsl
or
scas
cltd
or
popf
je
jge
adc
fiadds
lret
xchg
stc
adc
fildl
mov
ret
jns
inc
jnp
sub
jns
inc
pop
mov
push
repz
insl
fstps
pop
push
popa
movsb
fildl
out
and
mov
and
jmp
test
sbb
dec
ss
test
rcll
cwtl
jo
mov
lcall
test
pop
jp,pt
adc
pop
cmp
jae
clc
add
cmc
xor
and
add
push
push
jp
push
sbb
jg
add
sub
inc
push
or
cmp
cmpsl
mov
sbb
mov
ss
imul
xor
or
push
int3
hlt
idiv
outsb
push
sbb
inc
push
jmp
call
ret
add
jl
sbb
xor
sub
outsl
addr16
inc
outsw
xchg
mov
lods
cli
dec
movsb
out
sbb
adc
lods
icebp
push
std
out
jle
cmpsb
movsb
shrb
xor
pusha
fiaddl
es
or
push
iret
jae
out
jns
lret
mov
es
inc
push
nop
mov
dec
int
xchg
dec
sbb
into
mov
int
xchg
fucom
scas
pop
shrl
shlb
ja
addr16
lds
cmp
loope
and
ljmp
sbb
push
sub
aas
and
lea
cmp
sub
cmpsl
xor
pop
das
arpl
shll
stos
sti
sub
xchg
in
jle
ret
cmp
push
xchg
aad
loopne
insl
dec
scas
fcoml
mov
mov
jle
xor
lret
inc
xchg
jo
mov
xchg
loope
pop
div
shrl
sarb
adc
or
add
movsl
add
rorl
xchg
mov
sbb
inc
aas
add
mov
xor
js
and
aaa
psubsb
imul
sub
fildl
int3
mov
push
fldl
mov
jmp
subl
push
inc
pop
sub
lret
pop
scas
pop
sub
mov
inc
inc
clc
fwait
push
add
lret
mov
inc
inc
aad
mov
adc
jbe
add
das
xchg
mov
lods
jg
hlt
arpl
fistl
and
mov
enter
pop
sbb
jne
loope
hlt
sbb
cmp
test
aas
fnstenv
loopne
mov
push
ret
fldcw
fldln2
loope
xorl
outsl
dec
repz
sarl
jge
fldenv
xchg
fnstenv
enter
adc
into
je
movsb
imul
in
mov
daa
jle
popf
inc
dec
imul
scas
mov
xor
push
xchg
inc
inc
jnp
std
adc
or
rclb
icebp
mov
repnz
test
xchg
inc
lods
add
xor
inc
lods
dec
xchg
mov
loopne
xchg
idivb
lods
pop
fnsave
and
or
outsl
addb
adc
addb
add
lds
mov
pushf
rol
and
jo
inc
fwait
mov
xchg
add
pop
xchg
arpl
mov
movsb
mov
gs
dec
mov
jle
and
int
insb
ljmp
ds
fnstenv
lods
sub
and
fwait
jp
sbb
xchg
cld
adc
lods
test
dec
fucompp
shrb
xor
push
out
mov
xchg
sub
sbb
popa
fs
das
add
mov
push
add
cmpsl
mov
js
clc
jge
lock
out
mov
sub
data16
sbb
cmp
and
push
test
mov
add
repnz
mov
insl
push
jns
inc
shrb
inc
mov
fcoml
scas
dec
xchg
xchg
mov
out
ret
mov
lahf
jmp
in
sarl
sub
mov
cltd
push
shlb
jp
jbe
push
xor
mov
xchg
dec
jno
mov
jmp
push
jns
stc
shll
mov
lahf
in
add
cwtl
sub
dec
sbb
movsl
jmp
aas
xchg
pop
xchg
shr
lcall
ljmp
jb
push
rcrl
dec
mov
arpl
sub
mov
mov
sti
mov
cwtl
push
pop
dec
xchg
pop
fsubs
add
jbe
mov
lret
and
push
or
lea
sub
mov
xorb
mov
ljmp
je
popf
sbb
mov
fadds
cmp
hlt
lcall
stc
push
clc
imul
cmp
insb
or
xchg
fadds
inc
cmpsl
inc
cmp
loope
pop
insb
not
in
ficompl
scas
jmp
dec
cmc
fwait
cmpsl
jnp
push
stc
test
adc
lea
rolb
ret
jnp
push
adc
sarb
or
fdivl
aaa
mov
xor
into
pusha
lods
insl
out
inc
push
fisttpl
xchg
lods
cmp
aam
sbb
cmpsb
and
fisttps
aas
or
mov
out
inc
cmpb
mov
stc
push
cmpl
pop
add
xchg
mov
mov
subl
jae
jecxz
push
push
aaa
das
stc
xor
cmpb
jo
jae
in
mov
cmpsb
cli
test
jno
shr
and
mov
inc
mov
mov
shll
out
xor
xchg
ret
into
mov
mov
jle
scas
aad
movsb
in
fisttpl
cwtl
imul
xchg
xchg
mov
add
lret
nop
push
mov
out
cs
dec
and
stc
inc
xor
xor
in
mov
repnz
xor
xor
loop
xchg
pop
push
pop
push
iret
fdivs
outsb
adc
aas
lahf
xchg
sar
jb
sahf
mov
lock
shrl
mov
out
int
sub
negb
dec
sahf
xchg
adc
inc
into
sbb
cmc
sub
test
jmp
cs
pusha
or
scas
xchg
mov
mov
xchg
mov
gs
hlt
movsb
and
push
sub
dec
add
cwtl
lds
or
add
jmp
sbb
in
scas
add
aad
lods
cs
cmp
popa
mov
push
cmp
in
xor
xchg
pop
mov
push
mov
leave
lahf
or
mov
cmp
dec
cmp
std
push
mov
fnsave
arpl
cmovne
out
pop
popw
xor
call
pop
ret
mov
pop
pop
int
jne
scas
cmc
fnstcw
mov
xchg
int
adc
mov
sarb
das
mov
sub
es
aam
pop
sbb
out
fbstp
outsl
jg
fcoms
ss
adc
fisubs
jp
sbb
movsl
sbb
inc
cmc
pushf
je
ret
add
ss
dec
stc
test
loope
sysexit
dec
out
or
dec
adc
in
scas
scas
mov
xchg
mov
mov
mov
adc
mov
hlt
je
addl
scas
arpl
cmpb
js
movsl
scas
push
xor
jg
out
lods
or
aaa
or
or
cmp
pushl
cmp
xlat
scas
aam
stc
nop
shll
pop
aaa
in
into
mov
mov
into
lret
dec
lock
stos
adc
pop
divl
inc
mov
push
cmp
dec
clc
fldl
cmp
scas
pop
data16
push
and
iret
test
daa
jp
xchg
pop
push
add
or
xchg
scas
leave
mov
out
cmp
mov
sub
lret
cli
movsb
inc
mov
rolb
cltd
imul
test
ss
push
add
sbb
pop
xor
pop
sbb
lret
clc
je
int3
push
and
jbe
test
cmpsl
jge
das
pop
enter
lret
xor
mov
sbbl
jl
xchg
enter
jp
mov
sub
out
adc
jge
call
xor
lock
mov
dec
out
sahf
lods
cmp
mov
call
test
lret
mov
addr16
mov
mov
les
sets
je
mov
mov
fmuls
mov
daa
dec
jge
and
decb
xor
sbb
hlt
inc
call
sahf
mull
and
ret
fsubrl
add
fstpl
hlt
adc
pop
dec
xchg
cltd
pop
inc
push
pop
les
dec
adcl
fmul
and
adc
cltd
add
lea
cmp
les
sbb
cmc
cwtl
ljmp
loope
addl
push
cltd
js
mov
push
sbb
sbb
and
mov
jo
mov
dec
jmp
rcll
mov
insl
stos
rorb
addr16
ret
icebp
in
call
vpmadcswd
sbb
stc
scas
jge
cmp
pusha
arpl
outsl
repnz
adc
sub
lret
adc
aas
xlat
cwtl
mov
push
fcomps
fidivrl
sub
aad
andb
add
dec
mov
mov
lods
mov
jne
popa
insb
lds
mov
inc
xor
aas
loop
data16
cmc
add
push
adc
test
inc
aad
fdivrs
and
push
xchg
out
out
lret
xor
cmpsl
push
divl
sub
testl
mov
out
xor
cmp
mov
inc
mov
inc
or
pop
adc
addr16
xor
xchg
mov
lods
popa
lock
and
frstor
fmuls
or
or
mov
leave
push
mov
mov
cmp
and
push
mov
shrb
cld
cmpsl
jp
lea
pushf
ret
andl
mov
fists
push
dec
test
aad
jle
push
inc
rcr
sub
mov
push
lcall
decb
mov
mov
sub
mov
cld
push
add
push
cmc
or
xchg
sar
shlb
loope
xor
in
cltd
dec
aad
arpl
mov
outsl
push
xchg
popf
push
outsl
lahf
ss
jbe
mov
lret
and
mov
mov
inc
xchg
mov
xlat
rcrb
lahf
sub
jmp
push
pushf
xor
cmp
push
ss
mov
les
cmc
sahf
cli
aad
or
adc
cmp
in
jo
cs
jo
sub
jmp
daa
xchg
icebp
mov
lods
xor
sub
lods
nop
fdiv
pop
mov
add
fcomps
repnz
sub
movsl
pop
jo
pusha
dec
into
inc
pop
lods
push
sti
and
sbb
or
pop
dec
push
xor
jmp
xchg
fstps
sub
push
xchg
test
pop
sti
ss
adc
aas
testb
int
dec
mov
mov
jecxz
mov
and
xchg
adc
aas
mov
add
imul
xor
push
sahf
leave
mov
pushf
test
out
ljmp
ret
inc
inc
mov
fldenv
fildl
roll
out
mov
dec
pop
nop
sbb
pop
mov
int
stos
mov
lret
cmp
push
push
adc
cld
loope
gs
mov
mov
jmp
dec
call
sub
gs
pop
sub
mov
in
sarb
xor
mov
lds
and
cmp
aam
fildl
cli
icebp
fidivrs
lret
jnp
lcall
push
mov
repnz
or
in
aas
mov
cld
push
jmp
pop
mov
in
inc
xchg
shrl
in
es
add
fdivl
pop
pop
mov
fstpl
popf
and
cwtl
inc
adc
loopne
jge
repnz
adc
std
push
sub
adc
ss
test
xchg
fwait
es
cmpsl
add
sub
addr16
cwtl
stc
stos
mov
ljmp
xchg
lods
adc
pop
pop
pop
jp
pop
jns
push
cmpsb
adc
mov
sbb
mov
ret
adc
cmp
xchg
mov
push
mov
aam
xchg
mov
out
dec
cmp
dec
je
sub
je
mov
sub
icebp
cs
dec
xchg
mov
push
imul
inc
into
sti
imul
insb
mov
inc
xchg
sub
arpl
sbb
mov
mov
push
jnp
xlat
out
mov
fs
mov
das
pop
dec
test
xchg
aaa
push
push
fiaddl
stos
and
sub
pop
jp
mov
orl
arpl
fildll
sbb
in
jmp
int3
fidivrs
mov
adc
dec
mov
push
je
adc
push
fists
and
mov
cmp
xor
inc
int3
lods
out
dec
lcall
aam
push
lahf
lcall
into
xchg
mov
fucomp
and
cmp
cltd
das
test
push
arpl
pop
popf
test
sar
push
lea
adc
sub
jae
or
xor
bound
push
dec
rcrb
out
cmc
sbb
dec
mov
sahf
mov
out
pushf
mov
xor
out
aas
ja
jge
xor
test
push
shlb
das
pushf
sub
in
aaa
imul
out
ret
or
add
mov
fiadds
test
ljmp
outsb
pop
mov
mov
xchg
adc
mov
shll
pop
mov
sbb
dec
lahf
add
xchg
add
scas
imul
adc
jo
dec
dec
adc
movsb
stc
inc
mov
rorl
movsb
fisubl
popf
add
icebp
mov
ds
mov
mov
outsb
mov
enter
jne
and
les
xchg
test
pop
cld
jnp
test
mov
clc
pop
jecxz
pop
dec
repz
mov
pusha
hlt
inc
push
push
lcall
outsl
jbe
inc
cmp
clc
dec
sub
xor
inc
add
dec
rolb
dec
fdivrl
and
and
loop
dec
int
in
fs
fnsave
in
jbe
dec
push
pop
xchg
or
cmp
decb
add
dec
loop
and
js
cmp
xchg
xor
add
pop
cmp
sti
addr16
or
pop
aaa
cmp
or
push
subl
arpl
fsubl
icebp
scas
mov
rorb
das
mov
shrl
dec
mov
lret
sbbl
xchg
outsl
cmp
fs
jg
mov
mov
adc
jl
pop
sub
imul
and
pop
jl
xchg
push
lret
and
mov
ret
xor
in
push
repnz
add
xor
xchg
fcompl
lea
aas
mov
stos
jnp
sbb
cmp
push
inc
int
out
test
cwtl
pop
stos
cmp
lods
xchg
cwtl
lahf
inc
adc
jp
inc
lods
or
jg
iret
cli
mov
cmp
fldcw
shlb
test
sahf
lods
cmpsl
jnp
imul
lods
adc
fimuls
jae
movsl
or
loopne
sbb
ljmp
sti
xor
popf
inc
loopne
out
push
das
sbb
lods
sub
cwtl
out
xchg
xor
mov
std
rolb
mov
lret
push
mov
xchg
repz
movsb
mull
pop
lds
imul
dec
jl
ss
pop
adc
stos
cli
shll
jle
hlt
repz
inc
scas
jmp
pop
and
arpl
dec
pop
cld
inc
inc
jl
out
push
movsl
ret
mov
adc
mov
cmp
ret
push
inc
sarl
pop
in
mov
jae
push
xchg
mov
out
fs
xorl
sbb
jo
mov
mov
inc
mov
mov
mov
aaa
mov
jb
pop
movsb
adc
pop
sbb
and
int3
pushl
pop
jecxz
and
mov
mov
push
push
sub
xchg
cmp
sub
cwtl
fcoml
ss
pop
ss
pushf
daa
jne
jnp
mov
ja
std
in
fsubl
dec
pop
mov
stc
popf
jb
lea
adcb
pop
aam
mov
adc
pusha
mov
adc
ret
clc
imul
dec
insl
add
mov
adc
imul
loop
mov
and
ss
sarl
les
cmp
push
scas
push
add
mov
pop
jge
sbb
add
xchg
push
xchg
pop
shlb
notb
sbb
pop
cld
rcl
push
aas
push
sbb
push
lahf
mov
xor
mov
lcall
repz
adc
outsb
mov
into
loope
mov
or
mov
sub
push
mov
data16
xchg
pop
xor
test
or
add
cmp
mov
inc
movsb
fsubs
int
icebp
into
imul
jne
addr16
cld
or
test
scas
ret
mov
jb
je
jge
movsb
xor
jne
dec
jbe
ja,pn
shrb
mov
inc
sbb
rcll
xor
sub
add
xlat
sahf
and
lcall
mov
and
andl
sbb
pop
add
std
call
mov
mov
dec
ret
mov
sbb
mov
cmpsb
pusha
out
int
mov
dec
leave
jnp
add
fistl
sbb
lahf
jbe
arpl
adc
jno
mov
clc
repz
mov
and
std
add
cld
sahf
loopne
cltd
in
divl
cli
popa
push
in
and
mov
lods
scas
cmp
push
stos
xor
jbe
xor
fmulp
aaa
ret
cltd
pop
push
jbe
pop
cmp
xor
cltd
and
jbe
or
out
or
out
cmp
jnp
icebp
xchg
arpl
and
pop
mov
ficoms
or
xchg
xchg
stos
sti
and
std
push
pop
xor
adcb
jge
ret
call
dec
sbb
or
push
icebp
fiaddl
das
js
xchg
das
addb
pusha
movsb
outsb
push
andl
es
dec
add
mov
cmp
mov
jle
andb
out
and
lds
in
mov
mov
cwtl
push
les
sub
adc
cmpsb
cs
fs
jge
es
es
mov
stos
mov
and
dec
aad
pop
inc
mov
sbb
mov
pusha
repnz
mov
enter
cmp
jnp
sub
mov
es
out
ja
or
repnz
cmp
cltd
mov
cs
cmp
push
jns
leave
aam
sbb
lahf
push
cld
push
mov
add
es
inc
mov
xchg
data16
push
adc
int
iret
pop
aas
andl
inc
mov
mov
jp
inc
cwtl
sbb
ret
add
ss
xor
or
push
mov
mov
fbld
aad
in
stos
xchg
xchg
ret
and
cmpsb
xchg
loop
out
lock
jmp
test
push
incb
ja
int3
mov
xchg
or
enter
pop
mov
std
testl
push
cltd
mov
jae
xchg
dec
dec
dec
std
or
ss
icebp
xchg
arpl
inc
or
movb
in
xchg
pop
push
jmp
sbb
sahf
or
mov
and
or
jecxz
add
addb
out
jb
lods
mov
or
testl
mov
jp
pop
jmp
aas
pusha
imul
dec
loope
push
add
lret
dec
mov
sbb
and
aaa
dec
iret
pusha
push
push
imulb
rolb
pop
pop
ret
addb
repnz
mov
shrl
push
pop
xor
mov
cltd
lds
sahf
cmc
mov
adc
sub
jne
jle
ret
sub
mov
push
fcmovne
xchg
popf
lea
ljmp
xor
xor
add
cmpsb
inc
adc
or
rcrb
loopne
mov
push
leave
pusha
mov
push
cwtl
es
and
xorl
mov
or
inc
repz
ss
ss
fwait
adc
call
int
adc
jl
mov
pop
jg
and
in
repz
or
jmp
inc
sbb
shll
push
call
scas
das
rol
dec
or
pop
out
sub
mov
flds
in
adc
lahf
mov
in
jns
sti
xchg
xchg
jnp
inc
push
push
push
and
shlb
xchg
cmp
cmpsb
cld
dec
adc
in
pop
dec
xlat
xor
mov
push
pop
orl
stos
int
push
add
arpl
inc
inc
add
or
dec
xor
jno
pop
or
repnz
cmp
xchg
cmp
sbb
push
pusha
rcll
mov
adc
jmp
das
outsb
pop
xor
scas
pushf
cmp
fldenv
or
mov
add
daa
cmp
out
sub
je
popa
outsb
into
cmp
outsb
stos
and
aad
jl
iret
shlb
mov
or
call
push
cmc
jo
test
in
lret
rcrl
cmc
jp
jg
mov
out
aam
bound
clc
cld
sarl
movsb
int3
jns
and
dec
ds
dec
ficomps
inc
cmp
pusha
adc
sti
sbb
cmp
dec
fsubrs
cs
push
jno
cwtl
cmp
dec
lahf
add
ja
add
pusha
dec
int3
into
lret
test
fildll
mov
or
das
jge
mov
into
stc
xor
popa
cmp
and
mov
jmp
lret
fildl
int
mov
scas
daa
ss
mov
dec
vcmpps
xchg
icebp
inc
roll
sbb
in
pop
inc
aam
xor
call
push
and
data16
mov
loopne
push
scas
inc
jae
shrb
inc
cli
das
rcl
repz
dec
inc
xor
testb
dec
dec
xchg
jecxz
sub
sti
popf
jns
jle
push
ficoml
lea
or
cmp
and
negb
ss
lea
vpor
mov
inc
scas
insl
dec
adc
je
lods
add
movsb
push
push
fs
stos
cli
ret
mov
fs
cmp
stc
jmp
sbb
dec
inc
xchg
in
and
mov
imulb
push
sahf
inc
adc
pop
add
insl
adcl
pop
mov
rol
or
mov
adc
pop
test
movsl
negb
mov
add
loop
sub
mov
cmp
rorl
lcall
insl
pop
inc
jmp
ret
int3
mov
ret
sbb
repz
pop
mov
pusha
loop
js
add
lret
clc
mov
out
pop
je
mov
and
ror
jo
adc
out
mov
dec
int
inc
push
mov
aad
jge
imul
fbstp
fldcw
cwtl
mov
jmp
and
lock
and
pop
xor
jne
sbbb
mov
sub
and
les
mov
lods
je
xlat
movsl
mov
mov
lds
popf
rorl
aad
in
lahf
ja
jp
fldcw
xorl
jo
mov
dec
push
cmp
lods
movl
sbb
mov
ja
insb
jg
add
mov
push
inc
xor
mov
aam
fstpt
andl
inc
pop
data16
loope
xor
and
lcall
mov
sub
fxam
and
incl
mov
and
xchg
fnstcw
push
filds
push
mov
mov
or
scas
jl
lahf
stos
adcl
xchg
inc
xor
xchg
xchg
xlat
dec
fsub
out
in
shrl
inc
xchg
xchg
pop
stos
pop
mov
mov
lret
adc
xor
scas
loop
xor
add
mov
gs
pusha
stos
jno
lods
in
push
inc
xchg
pop
or
insl
and
xor
xor
xchg
mov
xlat
repnz
lcall
xlat
cmp
push
jp
or
sub
outsl
and
xor
mov
clc
sbb
jmp
clc
aas
mov
mov
repz
lds
pop
sbb
pop
jno
pop
xchg
jmp
dec
mov
les
push
cmp
xor
fsubrs
pop
inc
fwait
js
loop
xor
pop
cmp
sub
add
bound
lods
out
jb
ss
pop
sbb
stc
lods
push
lret
clc
imul
imul
testb
push
pop
or
jle
inc
lahf
addl
cmpsb
jb
or
iret
popf
out
sbb
mov
mov
fwait
sbb
push
dec
fiaddl
movsb
cli
test
push
cmc
leave
cltd
mov
or
into
jg
xor
jbe
jb
fs
xor
jecxz
movsl
adc
mov
xchg
push
mov
ja
cmpsl
test
mov
and
pop
mov
xchg
scas
push
jno
push
cmc
sub
cmp
repnz
xor
jecxz
mov
adcl
scas
push
pop
pop
mov
scas
mov
loop
cmp
inc
push
pop
inc
stos
movsb
out
xor
addr16
je
pushf
stos
push
cmp
hlt
jp
sub
add
push
push
adc
mov
stos
scas
adc
mov
in
cltd
imulb
out
mov
mov
or
stos
lret
aam
loopne
jmp
outsb
mov
inc
mov
dec
pop
inc
sti
add
int
mov
cmp
xchg
mov
ret
add
sbb
imul
lret
sub
sbb
lahf
xor
xchg
insb
std
insb
into
pop
xor
mov
push
sahf
push
xchg
inc
pop
int3
fisttpl
mov
xor
inc
imul
jmp
shlb
cli
insl
cmp
cmpsb
push
sub
pop
shll
mov
fcomps
out
sbb
int
lret
jmp
xchg
add
push
imul
mov
pop
mov
repz
push
xchg
in
mov
add
or
repz
jnp
adc
scas
es
insl
mov
fstps
or
insl
in
outsb
in
dec
insl
cmp
mov
cs
jbe
ja
outsb
mov
enter
int3
cltd
scas
pop
out
sbb
dec
mov
lret
jbe
cmp
and
icebp
and
dec
pushl
cwtl
rolb
inc
sbb
data16
insb
inc
test
push
inc
add
imul
mov
mov
leave
add
cmc
push
xchg
pop
sahf
movl
sub
clc
mov
test
pop
in
pop
push
inc
xchg
sub
sbb
add
mov
addr16
mov
inc
jnp
or
add
sub
cmc
mov
enter
stos
jl
int
shrl
fwait
pop
sub
mov
inc
aaa
cli
pop
mov
and
movsl
out
pop
pop
fisubrs
xchg
lea
negl
mov
and
gs
mov
push
mov
jmp
cmp
stos
fistps
xlat
cmpsl
mov
in
push
pop
push
sbbb
repz
xlat
pop
movsb
pop
insl
or
mov
out
push
test
je
leave
cld
add
test
xor
lcall
fsubrl
or
cs
movsb
out
shll
pop
xchg
or
hlt
pop
std
pop
test
adc
testl
shll
mov
dec
loopne
cmp
sarl
rclb
dec
cmpsb
push
cmpsb
mov
dec
jb
add
push
add
lock
int3
nop
push
jp
ja
into
iret
mov
sbb
xor
je
push
nop
lea
mov
enter
dec
pusha
movsl
inc
push
jb
mov
outsl
lret
js
jbe
add
push
sub
dec
push
es
call
repnz
push
mov
lds
push
mov
nop
lret
aam
into
xor
aam
ja
cmp
push
incl
dec
xor
popa
push
sti
inc
fwait
mov
jbe
fwait
xor
jecxz
inc
adc
ja
cmp
mov
mov
mov
xchg
idivb
xor
mov
add
iret
mov
push
jmp
in
jg
ds
decl
jp
push
adc
mov
icebp
aaa
inc
jno
fwait
mov
popa
sbb
negb
mov
enter
imul
pop
dec
mov
xchg
sbb
adc
xchg
cmpsb
ret
mov
mov
pop
imulb
or
jno
mov
out
xchg
iret
pop
add
sbb
push
pop
dec
inc
push
mov
stc
out
inc
push
push
mov
movsl
lret
xchg
lds
pop
popa
pop
aam
sbb
stc
into
sub
jg
imulb
cld
jmp
mov
and
test
inc
mov
pop
mov
je
stos
jge
test
push
mov
shrl
mov
pop
sbb
sub
dec
lea
lock
lcall
stc
les
jno
es
cltd
mov
aaa
xor
inc
lret
adc
sub
fcom
popf
rcll
jne
insl
lods
arpl
mov
sbb
in
jb
mov
roll
test
sbb
mov
or
jmp
imul
push
dec
mov
loopne
cmpsb
shr
mov
lret
sbb
mov
movsl
out
jg
lea
frstor
aaa
add
cmp
shlb
xchg
add
mov
out
iret
ret
std
clc
aam
repz
in
add
lods
ret
outsb
test
enter
insb
jb
sbb
shrb
and
add
adc
out
inc
and
out
add
push
jo
lods
mov
ret
mov
sbb
stc
or
sbb
and
inc
imul
jmp
leave
push
fs
pop
jp
orb
push
in
clc
mov
add
fidivrl
push
scas
jge
fldt
push
push
ror
xlat
hlt
and
dec
mov
and
dec
dec
dec
inc
ret
inc
daa
cmp
mov
imul
call
mov
pushf
rcll
fisttpll
ds
das
ja
imul
lcall
mov
pop
shll
dec
hlt
stos
cmpsb
sbb
sbb
lcall
jle
mov
pop
mov
int3
sub
sbb
mov
pop
add
mov
lods
sub
mov
dec
lds
push
les
std
xchg
add
inc
pop
stc
sub
or
mov
ret
popf
clc
sbbb
cmc
in
mov
adcl
mov
pop
fildll
or
pop
js
cmp
cld
sub
and
iret
ss
mov
push
repnz
xchg
fsts
test
xlat
adcl
mov
sub
movsl
clc
or
lock
into
adc
dec
adc
cltd
es
xchg
pusha
sbb
mov
mov
test
jmp
jp
jbe
cmpsb
or
enter
mov
fcoms
sub
mov
adc
xchg
cmp
cmp
mov
negb
adc
dec
push
inc
xchg
stos
rcr
xor
outsb
fwait
stos
scas
mov
sub
sahf
aam
popf
mov
div
daa
fcoml
pushf
out
sub
jbe
lock
movb
scas
or
xchg
adc
jns
push
jecxz
into
js
mov
adc
xlat
ror
arpl
xor
add
dec
jno
mov
dec
inc
popl
xchg
xchg
mov
test
inc
aad
jmp
dec
loopne
ja
out
lcall
aaa
push
mov
or
or
mov
jl
push
test
sbb
push
add
sbb
sbb
mov
cmp
in
aad
jo
push
xorb
xor
cmp
xchg
lock
in
push
and
cmp
mov
sub
mov
int
test
pop
dec
jge
lods
mov
test
je
dec
rcrb
fiaddl
iret
fnstenv
mov
sbb
les
rcrb
sahf
pusha
negb
jae
mov
jnp
test
add
xchg
popf
pusha
xchg
mov
mov
les
or
sub
push
pop
mov
cltd
cmp
inc
ds
je
and
test
gs
out
dec
lret
inc
inc
cli
shld
out
mov
daa
cmp
mov
mov
cmp
mov
lea
sub
mov
sbb
dec
shr
jle
dec
or
repnz
xor
aas
mov
adc
adcb
imulb
push
cmp
jne
xchg
adc
jbe
notb
daa
popf
mov
mov
fs
shl
lea
lcall
mov
into
jmp
cltd
inc
aas
aam
pop
cli
sbb
mov
ret
movsb
sub
and
mov
out
repnz
dec
mov
int3
dec
pop
mov
push
bound
test
into
pop
into
fwait
pushf
adc
lret
xor
insb
test
pop
jg
jle
aam
popf
insl
and
mov
out
into
lods
mov
ja
and
push
ret
fbstp
pop
and
xor
scas
sbb
mov
and
cmc
sahf
sbb
andb
pop
xchg
sbb
pop
push
sbb
xorb
fmull
js
sub
icebp
repz
popf
cmpsl
dec
cmp
insl
sahf
pop
imul
push
ss
incl
adc
repz
and
lods
lods
rcrb
jae
and
insb
popa
xor
xchg
dec
dec
add
hlt
sbb
push
cmpsl
out
sti
jle
or
push
push
imul
or
sti
xchg
push
mov
mov
add
adc
jns
test
sub
xchg
es
sti
and
dec
pushf
adcl
jmp
cs
repz
sub
sbbl
jbe
xchg
repnz
sub
add
sub
addl
outsl
xor
pop
pop
mov
loopne
adc
sbb
jae
jle
mov
pop
push
daa
fldl
and
inc
movsl
pusha
mov
inc
repnz
pop
lods
jl
mov
rorl
pushf
mov
adc
pop
add
inc
std
xlat
fcompl
xchg
push
lret
sbbb
xchg
adc
cwtl
movsb
cmp
jno
pop
jnp
psraw
out
push
xorl
fsubrp
sub
int
cwtl
push
xor
aas
popf
ds
adc
pop
shlb
mov
aam
pop
outsb
add
xor
shll
push
in
push
jbe
xor
das
enter
mov
mov
pop
sbb
xchg
outsl
xchg
push
pop
imul
scas
and
movsb
dec
mov
and
sbb
inc
push
popa
jmp
out
xlat
sub
add
jne
mov
mov
pop
fyl2xp1
add
xchg
xor
daa
xor
int3
jno
cmp
push
mov
jl
popf
insl
cmp
sbbb
cmpsb
xchg
faddl
add
enter
call
es
lcall
cmp
sbb
add
sub
jne
jle
add
mov
lahf
and
cli
pop
push
daa
int
test
cmp
fwait
add
stos
and
xor
push
mov
aaa
xchg
jno
daa
loop
or
adcb
jge
add
xchg
inc
push
mov
andl
mov
mov
mov
stos
ret
mov
movsb
inc
mov
cmp
out
xlat
repz
test
or
or
adc
xchg
mov
aaa
dec
sub
repnz
jne
dec
ds
cld
into
xchg
pop
int3
jge
cld
sahf
fistps
mov
aam
cwtl
scas
inc
movsl
pop
dec
imul
push
stc
push
sbb
or
ljmp
inc
jle
mov
sub
out
in
lods
add
ret
push
shl
and
stos
sbb
lods
pop
loopne
pop
dec
leave
sbb
loop
xor
es
xchg
ljmp
push
pop
test
xor
ja
inc
push
das
repz
cmp
pop
jno
sub
cmp
mov
adc
xchg
mov
inc
cmp
mov
sub
imul
jl
out
mov
lcall
cwtl
lret
xor
lods
or
insb
or
push
clc
test
pop
add
nop
fs
pop
adc
mov
addr16
inc
mov
pop
and
mov
in
sbb
sbb
pushf
ficompl
jo
push
iret
xchg
out
jne
outsl
push
xor
and
popf
adc
lods
push
sub
jae
lock
repnz
xor
pop
sbb
inc
or
pop
rol
push
mov
jo
int
sahf
cli
cltd
ja
in
loopne
add
into
clc
jecxz
dec
jno
lret
push
mov
dec
fiaddl
inc
call
fistps
xchg
pop
add
push
bnd
testl
pushf
or
mov
popa
xor
es
repz
mov
dec
movsl
fwait
or
or
mov
andb
mov
pusha
pop
sub
fcmovnbe
mov
xor
jbe
mov
es
sahf
out
push
cmp
inc
cmp
into
sbb
jle
in
inc
test
mov
xchg
loopne
mov
test
xor
and
mov
and
in
aaa
adc
mov
mov
xchg
add
cmp
or
call
test
arpl
lds
cmp
cmp
test
lds
xchg
xor
test
aam
adc
xchg
popf
fninit
cmpsl
adc
mov
add
test
inc
add
mov
xchg
repnz
adc
repz
jle
mov
push
orb
adc
add
cld
fdivp
mov
push
xlat
add
out
add
pop
lret
insl
push
aad
and
dec
and
mov
add
shrl
les
outsb
push
or
pop
add
pushf
popf
sbb
outsl
push
sbb
cmp
mov
dec
push
mov
mov
rcll
add
sbb
cmp
scas
add
call
xor
mov
adc
add
aaa
faddp
outsl
inc
push
pop
outsb
hlt
in
cmp
in
outsb
inc
adc
bound
fsubl
shl
popa
popf
or
cmp
out
inc
cmpsl
jb
dec
mov
ja
push
and
mov
outsb
mov
inc
popf
out
xor
mov
jmp
ror
ss
or
dec
stc
or
add
and
cmpl
and
inc
jecxz
push
adc
push
cld
ljmp
xchg
loop
sbb
lods
mov
jge
mov
sbb
aam
mov
push
mov
dec
repnz
fcompl
mov
jb
rolb
lock
sbb
sahf
hlt
jp
in
daa
scas
lock
outsl
es
sbb
ss
jp
xlat
pusha
push
lea
int3
push
xchg
subb
cmp
aam
es
mov
lods
gs
dec
inc
dec
mov
jnp
mov
jg
dec
mov
ds
addr16
repnz
and
sarl
mov
add
mov
fwait
rorb
arpl
dec
and
mov
out
repnz
mov
fists
inc
mov
out
mov
loopne
stos
push
stos
dec
movsl
pop
in
add
test
movsb
push
loope
sub
call
cmp
sub
and
jae
call
nop
fstpt
ud1
adc
pop
mov
mov
test
adc
test
insl
test
test
cwtl
inc
daa
inc
xorb
lods
jle
cli
cmp
inc
in
mov
stc
sbb
sub
inc
inc
jecxz
ret
mov
mov
inc
mov
jb
ret
leave
jmp
mov
test
loope
pop
test
aam
add
xorb
or
in
shr
adc
mov
loopne
leave
in
cmpsl
mov
push
js
mov
mov
jo
inc
cmpsb
jae
mov
test
lds
xor
setns
jmp
mov
jae
outsb
cmp
sub
inc
mov
pop
aad
test
and
ss
fcmovnbe
pop
jge
cmpsl
and
or
out
xor
rclb
insb
jb
inc
mov
aam
and
fldcw
mov
pop
je
push
ds
outsb
dec
cltd
shrl
leave
mov
add
leave
pop
test
inc
dec
jbe
fcompp
xor
lds
out
mov
adc
jle
mov
dec
fbld
lea
mov
inc
cmc
fdivrs
jmp
xchg
mov
mov
dec
sub
pop
cmp
cmpsb
gs
mov
cwtl
inc
mov
sbbl
mov
addr16
pop
add
push
mov
pusha
xor
aaa
sub
test
or
arpl
adcb
push
fsubrs
fs
out
add
and
jbe
test
cltd
lds
clc
fnstcw
jg
iret
dec
cwtl
jmp
addr16
mov
jle
push
std
push
ret
cltd
leave
pop
inc
js
shlb
push
or
push
repz
outsb
push
jns
adc
jnp
iret
or
inc
cmp
loope
ficoms
adc
inc
mov
inc
jne
aad
les
rorb
rorb
mov
sub
ja
popa
arpl
sub
lahf
dec
inc
mov
std
shrl
dec
fistps
xchg
popa
iret
mov
shrl
mov
shrb
pop
pop
push
or
dec
sbb
push
ret
pop
out
or
jp
lahf
or
inc
add
test
sbb
cmp
es
lcall
cmpsl
mov
inc
mov
enter
cld
jno,pt
sahf
sti
insb
mov
jbe
and
mov
aad
lret
imulb
jle
js
out
pop
dec
pop
fiadds
and
into
dec
push
xor
pop
adc
fadd
adc
jae
shrb
leave
fstpl
mov
push
mov
mov
push
js
mulb
sbb
adc
repz
mov
pop
fistl
aam
push
jecxz
or
fmull
inc
daa
pop
and
pop
popa
jge
lock
cld
jl
les
pop
sub
mov
sbb
xor
mov
push
imul
in
sti
and
lods
popf
xchg
mov
movsl
pop
out
js
out
mov
lcall
jle
mov
arpl
push
into
sub
lret
sbb
sub
pop
mov
pop
lock
xchg
cmp
jecxz
sbb
add
stc
mov
inc
adc
inc
pop
test
inc
leave
fisttps
pop
int
addr16
add
in
std
jp
jo
subl
idivb
in
scas
test
jg
out
mov
loop
sbb
dec
mov
fnstsw
ficoms
jecxz
div
add
jmp
or
dec
gs
in
push
movb
lods
das
push
mov
xchg
pop
mov
das
aam
fnstcw
data16
aam
gs
das
fdivl
and
or
notl
test
pop
jno
mov
iret
movsl
insl
inc
or
jbe
jl
dec
mov
pop
int
and
popf
mov
jecxz
pop
or
ljmp
popa
popa
or
stc
icebp
jmp
add
outsb
pop
int
data16
popf
push
stos
mov
xchg
rcr
jno
mov
ret
out
nop
or
xchg
pop
test
mov
cwtl
movsb
pop
dec
lock
and
cmp
les
stos
fistpl
sub
dec
stc
add
xor
test
jl
dec
and
mov
push
mov
sub
addr16
jge
and
js
rcl
jmp
cmp
mov
fisubs
lahf
mov
cltd
lcall
jne
inc
pop
test
fcmovu
or
sbb
test
mov
xchg
inc
pop
movsl
scas
outsb
mov
lock
nop
cld
out
jle
jmp
inc
push
js
lcall
mov
pushf
lock
xchg
xor
test
insl
cwtl
mov
lahf
push
inc
mov
sub
mov
pop
scas
movsl
xor
sbb
push
stos
shlb
loope
fwait
mov
push
lahf
popa
inc
cmp
xor
push
mov
fstpl
jnp
inc
sbb
fadds
add
xchg
lcall
pop
cmpsb
int3
jmp
xchg
jb
xor
mov
pop
or
add
lret
adc
mov
cltd
push
sub
loopne
ljmp
inc
lcall
nop
jns
jae
nop
mov
sub
mov
push
push
in
inc
jecxz
xlat
lods
orl
dec
cmp
das
testl
loop
xor
out
mov
cmpsl
dec
fs
cmp
mov
cmc
lea
fidivrs
pop
cmc
sbb
pop
std
inc
cli
sub
lock
pop
jbe
out
mov
lods
in
mov
sub
addr16
inc
outsl
jg
jecxz
sahf
mov
xor
push
jecxz
pop
mov
add
mov
pop
sub
in
jg
data16
add
loop
xchg
inc
xor
mov
cwtl
ret
jmp
lret
insb
adc
stos
jbe
shr
pop
jmp
or
fsubl
jmp
cmc
adc
push
cmp
cmp
aaa
xchg
sar
out
xlat
rolb
xchg
and
insb
repz
loope
dec
mov
out
in
lret
jno
enter
int3
leave
xor
stos
xor
aas
mov
popf
push
xlat
pop
pop
pop
or
lds
jnp
push
sub
ss
imul
iret
or
stos
shll
sbb
pop
aaa
and
dec
jne
sbb
mov
pushf
notl
movsl
clc
shlb
mov
xchg
bound
insb
mov
gs
add
push
aad
push
pop
and
jmp
sub
push
popf
aad
jae
mov
add
mov
sub
outsb
loope
mov
fidivl
jns
insl
mov
mov
je
insl
adc
les
cmp
sbb
or
jne
hlt
cmp
add
mov
jg
xchg
mov
dec
out
imul
jecxz
das
push
gs
adc
fstl
inc
pop
iret
sub
xchg
lahf
push
jl
push
push
in
dec
leave
push
sbb
test
sbb
in
out
add
sarl
add
cmp
leave
cmp
mov
mov
xchg
rcrl
xlat
add
cmpsl
mov
and
iret
cwtl
pop
stos
inc
scas
movsl
jle
adc
sub
xchg
push
jmp
je
fs
add
xor
aas
xor
fistps
cwtl
jmp
ss
sub
inc
int
les
mov
push
jne
sbb
adc
sub
add
mov
lods
cltd
sub
push
iret
cmc
jbe
and
lods
adc
xchg
test
lock
sub
int3
in
mov
pop
pop
cmpsl
pusha
and
cmpsb
stos
sbb
adc
adc
add
addr16
roll
repnz
sbbb
xor
pop
out
or
gs
bound
repz
jb
inc
adc
movsb
mulb
mov
fdivs
sbb
adc
out
mov
data16
call
mov
push
clc
cmc
lock
lcall
std
sub
jecxz
in
pop
in
inc
enter
mov
out
and
mov
push
std
mov
push
mov
std
cmc
sarl
mov
xor
iret
mov
push
adc
aas
loope
nop
sbb
mov
inc
sub
cs
xlat
mov
add
inc
testb
xchg
cltd
xchg
in
into
jbe
pusha
push
test
adc
inc
add
fidivrs
rcll
or
int
pop
outsl
xorl
jb
push
rcrl
pop
mov
adc
xchg
cmp
pop
cmp
outsb
xchg
popf
inc
jge
outsl
je
mov
ret
in
in
fidivl
push
inc
aam
test
and
fists
xor
shr
iret
fstpt
push
xor
dec
push
push
xor
and
sub
push
and
pop
cmp
lods
in
xchg
dec
sbb
jb
inc
aas
repz
inc
push
push
xchg
dec
or
or
fisttpl
or
bound
sbbl
andb
nop
addr16
fldenv
inc
jmp
call
cwtl
dec
lahf
or
xchg
pushf
aaa
das
shrb
imul
aaa
add
mov
pop
inc
jmp
mov
sbb
mov
add
repz
mov
push
mov
int3
adc
xor
loope
sti
mov
lods
add
mov
das
mov
icebp
sahf
pop
and
cmc
pop
fsub
or
or
mov
mov
cmp
dec
out
add
mov
int
add
outsb
stc
arpl
lods
negb
movsb
stos
out
mov
lret
fadd
push
stos
mov
ficoml
rclb
mov
into
iret
ds
cmp
mov
jmp
and
lcall
mov
dec
add
push
xchg
sbb
push
cli
mov
pop
cmp
inc
mov
push
insl
hlt
adc
nop
jge
cmp
push
adc
add
lcall
push
add
out
cltd
addr16
pop
jnp
adc
dec
add
mov
xor
aam
shrb
adc
xchg
orb
sbb
insl
aaa
and
dec
enter
xchg
xacquire
cli
push
test
popa
adc
subb
sub
pushf
inc
sahf
in
mov
sbb
xchg
lcall
lea
test
pop
mov
shll
ss
add
pop
orb
repz
ret
lods
rcr
icebp
inc
fldl
adc
mov
xchg
mov
adc
jle
xchg
fdivrs
sahf
cli
and
into
mov
mov
xchg
jno
ja
int
out
mov
add
je
sub
xor
negb
std
ds
jo
fsubs
add
jle
lods
push
cmc
es
popf
xchg
fcom
push
aam
push
stos
cwtl
add
dec
scas
xor
adcl
dec
fcomps
mov
mov
ror
push
sub
dec
jbe
mov
or
dec
mov
hlt
mov
loop
cmpsb
fstp
in
add
inc
jb
in
mov
dec
xlat
adc
rol
push
mov
shrl
push
fidivrs
fs
and
mov
mov
sbb
lcall
test
xchg
shrl
xchg
xor
adc
inc
rorl
mov
loop
ss
push
cmpsb
lcall
jbe
and
mov
out
lods
sarb
hlt
nop
fidivrl
sti
ret
iret
repz
inc
sti
pop
xchg
jbe
push
icebp
les
scas
adc
adc
jge
adc
sbb
dec
ljmp
pusha
mov
or
adc
div
out
sub
pop
in
pop
mov
cli
sarb
test
lret
adcl
lods
and
and
enter
les
mov
mov
fiadds
nop
loope
mov
rclb
inc
int
inc
sbb
pop
aam
stos
mov
adc
xchg
cwtl
inc
xor
jmp
inc
jno
xor
mov
lds
lahf
flds
pushf
push
dec
mov
negb
cmpb
rcr
lods
int3
mov
mov
sbb
sbb
dec
clc
inc
cld
imul
and
movsl
jbe
popa
movsl
vxorps
inc
aad
sub
notl
dec
push
sbb
inc
std
add
inc
out
pop
mov
pop
int
pushl
sub
int3
cmp
imul
aad
leave
into
jne
mov
sahf
frstor
sti
mov
cld
int3
sbb
aam
or
or
xchg
adc
jne
add
add
fdivr
ss
cmp
bound
fwait
mov
and
lahf
test
jp
aad
lret
sbb
jnp
adc
push
dec
repz
mov
adc
ja
dec
ret
sarb
xchg
pop
adc
negl
sub
mov
dec
ret
xor
jge
popa
psubusb
adc
test
sub
js
inc
movsb
dec
jbe
inc
jno
sti
aaa
cltd
adc
in
ret
in
and
cmp
test
and
mov
adc
mov
cmp
adc
mov
xchg
sbb
je
push
cltd
xor
jbe
jg,pt
gs
and
jns
lahf
jns
sbb
jo
hlt
mov
inc
dec
mov
lock
imul
push
addr16
pop
aam
inc
inc
in
push
add
inc
loop
sahf
sti
push
ja
pop
or
je
sub
sub
pushl
jecxz
pop
push
das
popa
pop
and
xor
sub
xchg
add
cmpsl
and
mov
sbb
adc
mov
xlat
sub
ret
or
jbe
mov
lcall
mov
sub
aad
or
xor
jmp
xchg
fldl
push
cmp
out
mov
int
push
inc
fdiv
cltd
aam
mov
xchg
xchg
mov
mov
dec
inc
dec
popa
adc
aas
repnz
or
jo
cs
or
cmp
cmp
mov
pop
and
insl
aad
cwtl
out
mov
sbb
or
test
rcl
lods
push
in
inc
mov
fidivs
xor
in
and
and
std
inc
imul
inc
xchg
xchg
imul
mov
das
push
subb
ds
cmp
fisubrl
sub
mov
push
xchg
inc
faddl
mov
shll
in
cld
jae
sub
pop
leave
lret
inc
mov
add
arpl
repz
push
add
jecxz
cmp
sbb
pop
stc
lahf
xor
shrl
dec
idivb
mov
pop
pop
xchg
iret
ds
and
frstor
xor
mov
test
dec
loop
out
imul
imul
insb
repz
lods
lahf
mov
fsubrs
loopne
out
adc
mov
xor
lcall
int3
fistpl
loope
ja
jg
jbe
mov
lret
mov
pop
sub
dec
pop
pop
jecxz
lcall
jg
arpl
jns
lock
int
test
shrb
jmp
inc
cmp
sub
mov
xor
inc
dec
pop
fdivrl
popf
pop
mov
xchg
rcl
inc
or
js,pn
jne
cmc
cmp
fs
mov
aas
xorl
sub
inc
or
outsb
jmp
stos
jle
std
pusha
mov
pop
jbe
jbe
in
mov
or
adc
xor
and
and
lret
pushf
xor
out
lea
push
xorl
fcompl
hlt
rclb
test
mov
mov
jp
adc
jecxz
inc
popa
std
int3
mov
sub
mov
lret
test
jo
add
pushf
mov
pop
sti
add
jno
mov
mov
fdivrl
popa
lret
jne
rcrl
push
hlt
outsb
push
daa
pushf
cwtl
push
adc
jmp
pop
jne
mov
mov
pop
nop
fnsave
add
cmp
add
jns
and
into
ja
xchg
insl
inc
shlb
push
aad
xchg
xchg
sbb
jg
inc
or
out
push
push
loope
jmp
sbb
test
and
test
sbb
lahf
inc
push
mov
divb
mov
cmp
pop
cmp
fsubrl
and
shl
jnp
ja
dec
scas
push
lcall
inc
iret
jl
aam
or
and
xchg
xchg
fcmovne
lods
push
fldcw
and
lock
sub
inc
ss
xlat
nop
jl
dec
pop
mov
int
inc
xchg
es
or
out
mov
mov
scas
repz
or
lods
nop
sub
sbb
stos
inc
inc
rcl
mov
pop
stos
pop
in
or
jp
mov
jnp,pn
jno
mov
mov
xchg
loopne
fiaddl
mov
notl
cmc
push
fstpl
mov
xor
pop
mov
les
inc
sbb
push
push
add
dec
pop
fdiv
jnp
xchg
addl
inc
jl
mov
xchg
inc
dec
inc
insb
mov
outsl
sub
push
insb
mov
js
rcrb
dec
push
test
repnz
xchg
cld
roll
lods
add
push
pop
insl
jmp
mov
adc
or
pop
push
add
fs
cmp
ljmp
addr16
lahf
push
ljmp
mov
push
cld
sub
clc
and
cmp
repz
mov
ret
xchg
fistps
jnp
loop
jp
xor
sub
cld
fnsave
xor
mov
and
imul
and
cs
sub
rcrl
push
test
in
flds
out
mov
push
arpl
adc
clc
cli
int3
cmpsb
sbb
jbe
pop
les
mov
adc
pop
pop
dec
push
imul
cmpsl
ljmp
inc
cmp
std
mov
or
sahf
mov
mov
std
enter
push
or
rcrl
add
rcll
jae
loop
icebp
outsl
pop
stc
and
cmc
popa
sub
cmp
sbb
fstp
add
out
push
imul
dec
mov
cmp
js
push
mov
push
cmp
fcoml
test
rcl
or
mov
fmuls
adc
mov
pop
sub
scas
and
mov
push
pop
cmpsl
jnp
xor
mov
cli
cmpsl
pop
loope
insb
pop
push
gs
push
mov
adc
cltd
sbb
push
cmp
or
nop
sub
mov
or
sub
cli
push
mov
enter
mov
xor
mov
pop
leave
adc
fcomp
mov
les
cmc
sti
xorl
push
enter
push
xchg
cmp
sub
cmp
dec
ss
cmpsl
xchg
push
out
push
dec
pop
push
mov
test
pop
mov
aad
stos
mov
in
repnz
jl
ss
lret
push
lods
pop
hlt
dec
push
inc
jle
adc
push
fistps
scas
cmp
cmpsl
loope
inc
add
sbb
mull
jbe
mov
sub
jge
jmp
adc
lret
add
sub
push
push
xor
or
push
repnz
jae
out
daa
popf
pop
loope
call
xchg
push
aas
mov
inc
in
dec
fs
call
pop
inc
fldenv
jno
aad
and
xor
pop
push
loope
sbb
add
test
lods
push
adc
xor
jb
in
and
and
fldcw
roll
orl
inc
adcb
mov
dec
lret
mov
xchg
scas
xchg
jae
stc
mov
and
fs
sbb
mov
test
dec
lahf
mov
mov
daa
roll
adc
js
in
push
cmp
push
into
clc
xor
sub
les
adc
shll
inc
js
xchg
and
cmp
idivb
sarl
sbb
movb
outsb
dec
jb
insb
lret
inc
xchg
mov
shll
sub
adc
jmp
lahf
sub
movsb
xchg
adc
cmp
jb
fcom
in
or
mov
incb
sub
lock
jl
stos
xlat
and
dec
aad
cmpsl
xor
andb
mov
cltd
cmp
ret
pop
aaa
repnz
xor
pusha
pop
sbb
filds
pop
pop
je
fistl
jl
pop
mov
mov
jecxz
push
adc
pop
insl
mov
sub
js
sbb
in
js
push
cmc
pop
push
das
gs
pop
fnsave
pusha
pusha
leave
cmpl
shll
imul
inc
cmpl
cmp
sahf
icebp
cmp
mov
sbb
push
push
sub
push
inc
add
mov
cmc
sbb
push
fildll
jne
dec
lret
xchg
jne
push
stc
adc
decb
mov
sbb
mov
in
inc
out
mov
xlat
mov
adc
negb
sbb
in
enter
movsl
xor
insb
push
stos
lea
xor
shlb
pop
arpl
in
xchg
cmp
lds
push
imul
idivb
das
shlb
aaa
fmuls
xchg
push
fstps
mov
cmp
cli
xor
lods
adc
lret
fisubrs
xchg
adc
or
sarb
jns
or
cmp
sub
jns
cmc
sarl
jae
mov
mov
xchg
mov
sbb
push
movsl
and
in
or
roll
ljmp
xchg
daa
sahf
repz
daa
iret
mov
pop
mov
mov
cwtl
pop
adc
adc
or
scas
push
push
pop
adc
enter
ss
dec
lods
cmp
xchg
dec
sbb
push
out
popa
cs
mov
and
push
push
ds
popa
xchg
jnp
hlt
ja
push
mov
sub
xchg
mov
loopne
notl
sub
xorl
cmpl
mov
subb
xor
sarb
in
inc
enter
fsubrs
test
shll
sbb
mov
mov
push
dec
mov
imul
mov
xchg
add
ret
adc
imul
mov
in
lods
cli
int
leave
fstpt
arpl
sub
imul
fwait
sbb
fimuls
cmp
sub
mov
xchg
jmp
pop
gs
test
jnp
sub
jae
das
jbe
mov
enter
adc
fldenv
loope
add
mov
inc
pop
xchg
cmp
shl
mov
jmp
xchg
cmp
jae
and
sbb
movsl
push
xchg
sub
in
and
lock
arpl
or
mov
adc
add
sub
xor
pop
aas
mov
daa
insl
jmp
pop
in
and
xor
or
mov
out
mov
push
inc
dec
inc
cld
push
xlat
fcom
icebp
add
pushf
lds
pop
push
push
filds
adc
mov
popf
out
enter
and
lahf
in
js
or
xchg
mov
fistpl
xor
lret
clc
das
sub
xchg
stc
pop
rol
imul
add
xchg
daa
and
leave
fistl
xor
pop
inc
mov
stc
ljmp
pop
dec
ds
pop
aad
sbb
push
mov
pop
repz
ret
shr
jbe
inc
outsl
out
enter
fiaddl
lahf
in
xor
add
fisubs
push
jb
aam
mov
push
jno
cmc
mov
cwtl
loopne
insl
mov
shlb
mov
and
mov
lods
push
outsb
arpl
push
add
inc
cwtl
lret
mov
cmp
push
lcall
cmp
lahf
add
jae
icebp
or
cmp
push
sar
push
sub
xor
in
fcompl
fs
mov
mov
rol
into
jmp
push
push
push
inc
mov
push
subl
mov
movsb
mov
das
movsb
stos
test
push
lcall
sub
scas
lods
lods
mov
repz
cmc
sub
call
js
pop
stos
cld
movsl
lods
test
pop
movsl
xor
add
mov
pop
xor
ss
and
or
push
or
lock
in
mov
dec
push
mov
sub
in
stos
lock
and
aad
dec
lret
cld
xor
dec
mov
lods
mov
push
shl
sub
pusha
pop
push
mov
jp
jecxz
stos
adc
shll
push
orl
or
lock
xchg
mov
fs
test
mov
into
out
test
outsl
cltd
scas
faddl
inc
or
lods
adc
testb
jns
or
dec
and
adc
cmp
test
out
fs
hlt
iret
outsl
sti
sub
mov
dec
push
mov
hlt
shrb
subl
sub
movl
adc
fstps
ret
test
loop
aas
ja
dec
les
daa
aaa
cltd
push
mov
push
and
push
pop
std
loope
jecxz
loop
sub
xor
lret
jmp
push
ja
mov
add
cmp
popf
mov
inc
mov
pop
mov
enter
lods
xchg
mov
xchg
xor
imul
or
xchg
movsl
sbb
xlat
ss
mov
or
dec
mov
dec
cmpsb
popa
arpl
add
mov
pop
insb
cmpsb
orl
inc
insl
fnsave
imul
loope
sbb
mov
f2xm1
jno
cli
add
pusha
cmp
sub
jne
fwait
and
pushf
cmp
adc
das
pop
push
adc
xchg
push
push
mov
ret
adc
jp
add
ficoms
push
sahf
jmp
jne
mov
imul
data16
mov
outsb
repz
mov
movsb
push
lods
cmp
cmc
inc
xchg
cmp
push
cs
addl
into
loop
jns
in
mov
out
hlt
icebp
dec
setno
stos
push
xchg
lea
insl
in
subl
mov
jne
std
sub
jo
scas
mov
pop
outsl
stc
lret
enter
push
xchg
scas
add
lock
adc
movsl
pop
fs
popa
es
insl
dec
clc
jns
push
imul
lretw
pop
je
adc
dec
push
out
lods
jl
test
popf
sahf
dec
inc
mov
dec
lock
nop
pop
insl
clc
dec
cmc
jb
lret
add
jnp
add
sbb
cmpsb
test
and
out
rol
inc
out
les
stc
push
dec
push
pop
test
or
ret
jnp
subl
push
pop
shr
xor
lods
mov
mov
jns
dec
add
mov
jecxz
push
and
cwtl
jecxz
frstor
testl
inc
lea
or
push
loopne
and
mov
dec
ret
je
xchg
addr16
and
aas
gs
cwtl
inc
lods
loope
leave
shlb
or
fnstcw
testl
sbb
jp
push
jo
movsb
adc
adcb
mov
pop
ja
xchg
pop
and
and
and
adc
mov
push
pop
decl
sbb
pop
sbb
std
xor
push
ss
xor
push
mov
lahf
out
and
xchg
enter
jbe
bnd
adc
fsubl
lcall
imul
in
mov
ret
or
jns
cmc
out
or
test
xor
shrb
addr16
repz
jns
mov
int3
subb
jo
fs
pop
cmp
test
mov
ret
jge
sbb
xor
pop
push
imul
mov
mov
push
and
and
mov
jno
in
gs
loop
pop
das
pop
lcall
js
in
and
inc
ret
shrb
lret
outsl
sbb
stos
pop
cmp
in
not
add
in
je
testl
mov
push
js
jle
call
pushf
add
aam
iret
shlb
mov
mov
jnp
fnsetpm(287
outsb
mov
mov
mov
jae
stc
mov
jge
sti
int3
fnsave
mov
fwait
ret
sub
repz
dec
inc
out
in
shll
sahf
lcall
pop
dec
add
mov
mov
jle
std
ficomps
push
call
xor
add
rol
es
or
aam
iret
pop
pop
bound
mov
lea
nop
pop
cmp
xchg
repnz
jnp
mov
fnstsw
sbb
fimull
out
pop
cmp
outsb
and
pusha
add
insb
por
jae
imul
add
sti
xor
push
cmp
negb
jle
fwait
dec
out
aas
cmp
mov
insl
sbb
pop
icebp
lods
dec
mov
lods
pop
mov
adc
jno
pop
repnz
int
mov
mov
movsl
js
or
add
or
je
sub
out
cmpsb
ja
dec
add
iret
lods
fimuls
push
jecxz
jle
push
ds
pop
push
cwtl
cltd
xchg
pop
test
xor
ret
in
cmp
cmp
jle
add
pop
xchg
mov
aas
pop
push
test
push
dec
xlat
adc
pop
and
dec
mov
jp
ds
js
and
ljmp
sbb
ss
xchg
or
pusha
add
je
rcrl
ficomps
pop
dec
loopne
sub
movsl
div
mov
adc
mov
xchg
or
cmp
repnz
xchg
and
adc
or
dec
fdivs
test
mov
or
or
or
std
xchg
xor
icebp
cltd
addr16
and
loop
addr16
nop
arpl
ljmp
dec
push
aaa
mov
outsl
pop
mov
test
adc
jbe
xchg
push
mov
stos
jnp
aad
jb
fs
mov
ret
sti
mov
cltd
mov
call
add
rcll
or
jne
repz
sub
fcomip
and
xorl
mov
xchg
sbb
cmpsb
lock
div
mov
iret
outsb
xchg
push
stos
mov
jle
adc
call
idiv
sbb
repnz
pop
imul
push
and
sbb
mov
icebp
cmpsl
mov
rcrl
cltd
dec
imul
pop
scas
out
sbb
pop
mov
sti
mov
fmul
es
mov
cld
jg
sbb
pop
movsb
pop
mov
cmpsl
daa
cmp
js
popa
xor
add
clc
add
pop
pandn
xor
dec
adc
pop
test
inc
cld
xorb
jne
push
in
popa
inc
push
jp
pop
xchg
mov
movsb
or
mov
lret
mov
mov
inc
xorb
in
rol
pop
pop
lods
add
arpl
or
jae
pop
ds
fwait
adc
pop
push
mov
jle
mov
add
adc
adc
in
jns
and
mov
pop
jno
js
out
ret
xchg
and
mov
adc
popf
movsl
imul
mov
cmpsl
bound
out
mov
scas
cwtl
rcr
jnp
dec
pop
xchg
aam
fwait
mov
test
sub
mov
sub
cmc
mov
loop
mov
inc
out
xor
lahf
inc
addl
cmp
fisubl
jl
xchg
xorl
fsts
xchg
nop
scas
xor
xor
stos
push
ret
mov
call
fsubs
fisubrl
test
cmpsl
jns
addr16
push
jae
fistl
lds
in
cmovo
pushf
rol
in
aad
in
test
jo
movsl
dec
lea
push
jns
sbb
xor
push
popa
es
push
and
ret
out
mov
xchg
sbb
psrlw
inc
add
stos
push
insl
jg
lea
pop
fidivrl
or
fdiv
xor
std
push
ja
scas
arpl
jbe
cmp
or
fildll
jns
ss
sbb
icebp
cmp
sub
add
lahf
mov
cmp
add
int
rol
popf
dec
jle
push
pop
fcmovu
fwait
xchg
addr16
or
sub
mov
lock
xchg
push
lret
sub
call
sbb
into
xor
jns
or
in
mov
in
sub
jmp
lret
loop
add
pop
loopne
stos
add
jle
imul
mov
lcall
xsha256
cmpsb
aad
mov
testl
mov
or
test
jmp
fldenv
out
and
int
nopl
dec
xchg
sub
add
addr16
fisttpll
out
data16
aad
in
pop
rorl
pop
cmc
clc
add
cmp
push
push
jle
xor
movsb
daa
inc
mov
imull
sub
rorl
push
jecxz
adc
out
inc
aaa
sbb
cld
lods
jbe
sbbb
mov
push
xlat
mov
cmpsl
lock
cld
or
test
jno
jno
call
addl
ja
or
or
push
call
dec
mov
jne
sub
insb
mov
add
repz
in
and
out
push
fbld
cmp
cmp
inc
jecxz
das
daa
jp
xchg
pop
sbb
mov
mov
scas
nop
xchg
nop
fisttpll
add
cmpsl
and
add
rcrl
mov
loop
mov
mov
mov
jp
mov
mov
push
dec
movsb
cmpsl
mov
subl
test
pushf
mov
fucomip
mov
sahf
jo
xchg
mov
xchg
push
sub
cmp
fdivl
cltd
xchg
in
imul
aad
and
test
or
cwtl
loopne
scas
mov
movsl
aam
bswap
stc
sbb
leave
pop
pop
pop
aam
bound
nop
dec
jb
cmp
xor
sar
jp
shll
enter
notb
mov
in
inc
push
mov
xchg
inc
xchg
pop
into
mov
cmp
icebp
push
mov
shll
mov
addr16
test
cmp
bound
test
sub
sarb
cmp
pop
aad
fnstsw
mov
pushf
mov
mov
xchg
test
push
ja
out
push
lcall
and
test
lcall
jne
add
lcall
inc
insb
enter
dec
mov
je
stos
inc
in
dec
mov
push
hlt
push
stos
rol
enter
mov
out
test
sahf
nop
push
cmpsb
jmp
scas
add
clc
rorl
and
add
shrl
push
xor
pop
addb
pop
or
jl
or
decb
adc
xor
sub
outsb
in
decl
sahf
js
push
dec
xor
push
adc
test
jno
jp
ret
add
xchg
xchg
and
test
hlt
subb
xlat
das
outsb
or
or
dec
xor
and
pop
movsb
adc
lcall
hlt
fs
dec
mov
and
sbb
cs
xor
mov
int3
es
push
xlat
mov
pop
jo
pop
lret
or
xlat
dec
cmp
jae
ja
inc
sub
cmpl
aad
dec
or
jge
xchg
lods
push
xchg
mov
lods
movsl
xchg
mov
inc
push
cs
xchg
xchg
fists
fnstcw
mov
lahf
imul
xchg
or
les
or
jo
inc
outsl
pop
jg
in
mov
add
and
or
jnp
fstpl
sbb
insl
inc
fs
out
andb
loopne
push
mov
cmp
mov
loop
xchg
cmp
fsubrl
ret
mov
fistps
fidivs
lret
dec
cli
roll
or
test
mov
inc
sahf
mov
xlat
fists
mov
jle
rcrb
and
sahf
aaa
jmp
aam
insb
icebp
sub
mov
mov
hlt
ss
or
das
xchg
outsb
jno
cmpsl
adc
xor
pop
fsubrl
daa
mov
lret
push
dec
xor
or
int3
call
mov
out
mov
stos
xchg
pushf
shll
dec
mov
out
add
mov
shll
icebp
cmp
mov
jno
sub
sbb
xor
xor
jbe
xor
test
jg
jnp
adc
dec
push
sbb
cltd
xor
jge
ffreep
ficompl
iret
pop
in
aad
in
xor
and
adc
gs
pop
movsb
pop
inc
pop
mov
into
sub
int3
xchg
mov
out
xchg
jns
ret
cmc
push
cld
rolb
loopne
mov
add
push
out
fidivrl
add
loope
ja
std
stos
loope
dec
out
out
dec
sub
inc
mov
hlt
lcall
outsl
add
push
and
lods
mov
loop
xlat
xchg
adc
aad
jbe
imulb
xchg
inc
inc
aaa
dec
mov
push
addr16
in
out
stos
in
inc
adc
mov
mov
cmp
cli
add
mov
sahf
imul
stos
mov
lahf
mov
mov
fmuls
pop
push
dec
fwait
ret
xchg
mov
jmp
xchg
dec
jmp
jecxz
rcl
cmp
in
sahf
int
sbb
js
fbstp
stc
dec
and
xlat
pop
lahf
inc
punpckldq
loopne
add
shrl
push
sti
aaa
insb
popa
movsb
test
mov
xchg
xor
mov
pop
stos
jl
xor
pop
insl
popa
push
xorl
outsb
jge
fldl2t
sti
jo
xchg
insb
scas
push
lret
mov
scas
hlt
cs
insl
mov
or
sub
inc
rorl
sahf
scas
popf
fdivr
aad
bound
cmpsl
push
mov
jl
pop
mov
inc
stos
push
cmc
arpl
filds
xchg
in
xor
sarb
xor
ret
das
sbb
and
xchg
stos
jno
scas
insb
int
mov
outsb
aas
int3
aam
xchg
rcr
in
cmpsb
add
rcrl
pop
lock
sbbl
lods
push
jge
xchg
xor
fidivrs
xchg
cmp
fcomps
imul
sub
sahf
push
adc
mov
inc
popa
test
stos
sbb
std
adc
aaa
or
das
adc
ja
call
sub
sbb
sahf
fbld
mov
rcr
mov
add
mov
stos
aaa
mov
and
pop
cli
sbb
aas
cld
adc
xchg
mov
aaa
or
mov
cld
mov
sbb
mov
orl
movsb
std
ficoms
and
sahf
popa
call
jb
mov
icebp
sub
push
jecxz
cmp
xor
lea
dec
jae
xchg
add
aad
ret
test
xchg
xor
ljmp
jno
cwtl
mov
test
sub
stc
cs
and
popf
dec
addr16
add
cmp
loop
lret
and
fdivr
pop
leave
dec
push
out
sbb
mov
pop
xchg
mov
sti
sbb
lds
pop
sub
jl
fwait
pop
or
aam
sbb
sub
pop
sarb
cwtl
dec
mov
jg
sbb
out
sahf
mov
flds
or
bound
cmp
add
sbb
rclb
push
add
das
cltd
mov
sub
xor
mov
in
add
shl
pushf
inc
adc
mov
lods
insb
pop
add
push
mov
sub
jg
and
push
scas
cwtl
and
inc
mov
inc
and
xor
mov
cmp
sbb
aad
pushf
fwait
xchg
das
or
std
loopne
aas
outsb
jge
xchg
pop
mov
aas
xlat
clc
cmpsb
lcall
sbb
enter
push
cwtl
lret
popf
push
movl
shrb
mov
cmpl
int3
add
addb
push
lahf
pop
data16
pop
mov
xlat
ffree
lret
and
jo
cmp
and
inc
xorl
cmp
mov
mov
pop
mov
inc
sub
frstor
sbb
jo
add
xor
pop
out
xchg
pop
and
dec
leave
in
pop
xchg
dec
mov
push
stos
adc
add
filds
xchg
jo
jge
outsb
jl
imul
sti
lds
hlt
test
and
mov
xchg
sarl
std
dec
lods
ss
std
cmpsl
adc
fcoms
js
mov
dec
fmuls
ljmp
aas
loopne
roll
and
int3
xor
jl
pop
rcl
lret
mov
int
imul
addr16
int3
pop
fdivrl
xor
outsl
mov
jle
es
add
divl
cmp
adcb
push
fsubrl
add
pop
xchg
jbe
pushf
mov
mov
or
jnp
add
or
fisttps
mov
fdivrl
ss
and
xchg
push
pop
das
dec
cmp
adc
jne
fadds
mov
cmp
sub
and
push
cltd
lods
clc
ljmp
lods
pusha
pop
lcall
js
popf
popa
mov
je
sbb
in
inc
pop
mov
notb
imul
xor
xlat
push
push
mov
jb
mov
rclb
jae
sahf
cmc
jae
dec
sbb
xor
int
aaa
inc
push
scas
dec
loop
out
jle
ss
lret
jg
stos
mov
dec
xchg
test
mov
in
xor
sub
lods
arpl
xchg
inc
and
ret
add
pop
pop
ljmp
jo
aas
dec
nop
jge
xchg
adcb
and
pop
fldcw
pop
cwtl
pop
les
aaa
fcompl
and
push
dec
and
fwait
adc
xlat
mov
or
rcll
pop
adc
jb
aad
stos
fs
movsl
pop
push
cmpsb
aam
dec
sarb
movsb
pop
popa
xor
add
push
outsb
aam
lds
xor
lret
in
int
cwtl
rep
xadd
push
aaa
addb
mov
sbb
push
and
sarl
dec
arpl
cs
add
es
mov
idivb
jo
adcb
mov
jne
sub
or
jae
mov
cmp
mov
dec
std
shlb
arpl
sbb
pusha
nop
jge
mov
nop
mov
test
gs
mov
cltd
outsl
cs
pop
jge
sbb
fwait
xchg
sbb
add
lret
xor
jl
js
mov
ss
pop
mov
jbe
or
xchg
mov
mov
lahf
mov
imul
and
stos
loope
xchg
sbb
test
xorl
out
cmpsb
xchg
nop
fs
mov
sub
inc
or
xchg
repnz
xchg
movsl
outsb
fdivrl
out
push
das
std
jns
adc
aam
inc
cmp
sub
inc
jb
shrb
out
ret
inc
push
or
test
sub
outsl
mov
mov
dec
notb
cmp
inc
cmp
fimuls
int3
mov
repnz
aas
mov
cmpb
scas
adc
imul
nop
or
xchg
sbb
icebp
in
jl
ret
loop
hlt
xor
sub
rcrb
cmp
hlt
mov
mov
add
push
bound
or
dec
test
sub
sbb
setp
sbb
inc
push
jle
or
and
out
aad
dec
clc
mov
cmp
ret
push
pop
lock
inc
cmp
inc
dec
push
push
inc
mov
cmc
out
dec
jnp
cwtl
test
fsubr
adc
cmp
out
push
cmpsb
xor
push
xchg
jl
xlat
or
jns
dec
mov
add
push
inc
int3
cmp
mov
sub
push
xor
xchg
cmp
xor
nop
call
pop
adc
cld
test
inc
add
shlb
dec
and
add
mov
xchg
dec
ljmp
jnp
sti
scas
cmc
aaa
jecxz
ss
call
scas
aam
dec
sti
mov
jle
pop
mov
fildll
mov
fmull
mov
mov
push
jecxz
lods
add
out
iret
dec
and
movl
int
mov
movsb
inc
xchg
shrb
mov
pop
push
int
cld
xor
testb
mov
sbb
test
pop
adc
xchg
mov
push
pop
aam
inc
sbb
enter
mov
in
js
inc
xchg
stc
or
xchg
and
sub
adcl
mov
jnp
inc
xor
cmp
mov
out
pop
adc
cltd
add
mov
dec
in
rcll
mov
xor
addr16
lret
into
fadd
shrl
fldenv
fidivl
test
arpl
add
and
outsb
lcall
dec
dec
je
push
jle
enter
sbb
negl
sub
mov
xchg
xor
insl
and
pop
and
sub
jmp
mov
dec
xchg
pop
movsb
adc
int
lret
lahf
je
xchg
negb
jp
jnp
jg
push
xor
inc
cmc
or
std
cmc
mov
mov
scas
scas
ds
jecxz
mov
sbb
lods
dec
and
in
aaa
lock
adc
and
fisttps
stos
and
inc
dec
enter
adc
outsb
inc
dec
or
sti
cmp
loope
aad
ja
inc
movl
adc
sarl
insl
es
add
xchg
clc
inc
stos
cmp
aad
fimuls
loop
or
jbe
or
jle
xchg
push
add
push
lods
cs
xlat
call
mov
shl
pop
mov
mov
sub
pusha
cwtl
cld
in
mov
mov
cld
or
shll
sti
imul
jno
ljmp
and
push
pop
add
sbb
pusha
movsb
cli
fldcw
sarb
mov
xor
test
pusha
movsl
adc
outsb
into
adc
sub
xchg
in
mov
adc
cld
mov
sub
icebp
lods
clc
sti
loopne
repz
stc
outsl
and
ljmp
les
js
int3
daa
into
idivb
push
inc
mov
out
dec
pop
rcr
mov
scas
jl
xor
std
xor
adc
shrb
adc
enter
ret
add
and
pop
inc
ficomps
loopne
cmp
fistpl
loope
insl
roll
dec
popf
movsb
xchg
jo
fwait
and
insl
fwait
scas
push
jge
xor
enter
or
ret
out
shrb
fcoms
inc
stc
and
int
xlat
ficompl
cld
mov
and
mov
std
push
or
mov
add
jecxz
dec
mov
sub
out
fsubl
arpl
cmp
push
mov
dec
sbb
fsubp
mov
xlat
xor
cmp
inc
icebp
mov
cmpsb
or
cmp
add
mov
adc
jecxz
repz
in
fbstp
ss
cwtl
push
pop
icebp
adc
add
mov
adc
sbb
fcmovnu
loopne
mov
mov
xchg
jae
fstpt
ret
fdivrs
js
push
mov
or
mov
adc
out
or
and
andl
pop
dec
movsb
jmp
xor
jae
inc
loopne
cli
cmp
inc
push
jne
push
ret
int3
imul
fnstenv
inc
imul
pop
xchg
xor
pop
mov
mov
rcrl
xchg
fs
pop
popa
or
add
xchg
pop
jmp
xchg
out
test
fs
mov
pop
xchg
arpl
add
cld
jl
push
mov
repnz
add
in
sub
push
imul
stos
mov
inc
shll
into
jp
or
jle
leave
or
rolb
dec
push
sub
pop
mov
mov
fdivrs
aad
push
or
lahf
inc
or
jne
push
les
je
xor
mov
pop
ja
adc
and
aas
aas
fbstp
mov
dec
in
das
inc
popf
fsts
addr16
add
add
hlt
cmc
dec
leave
pusha
das
arpl
and
or
jmp
push
das
rep
stc
je
out
int3
ljmp
xchg
mov
cmc
push
test
push
adc
pop
dec
mov
test
pop
cli
fwait
imul
sub
inc
pop
bswap
sub
jbe
or
xchg
dec
push
test
lret
imul
mov
mov
data16
inc
mov
xor
clc
mov
ret
cmpsb
pop
cmc
cltd
jae
adcb
out
sbb
shlb
push
scas
inc
imul
sub
inc
or
mov
adc
push
sub
lods
std
mov
ret
mov
xchg
mov
dec
nop
shrb
into
fdivrl
adc
jb
mov
lret
in
push
jne
ljmp
mov
std
mov
or
or
int3
icebp
and
xor
lret
jg
add
call
std
xchg
cmp
out
cltd
mov
int
stos
inc
mov
hlt
mov
mov
lock
dec
lahf
cmp
leave
popa
xor
xor
fcoml
pop
mov
scas
jae
addb
mov
inc
xchg
rcrb
inc
cmp
lret
mov
cmc
rorb
lea
fsubrl
aad
adc
jge
cmpsb
or
xchg
fistpll
lods
out
bswap
mov
inc
lret
mov
fsubl
lea
into
push
imul
mov
mov
loope
pushf
test
repz
mov
cwtl
pop
mov
or
popf
inc
push
rcrl
aas
pop
xchg
out
fcoms
loop
xchg
and
inc
cmpsb
arpl
dec
ds
test
daa
mov
subb
push
pop
mov
mov
and
jo
ror
insb
mov
inc
imul
inc
out
clc
jmp
pop
mov
or
data16
pminsw
out
stc
rolb
pop
xchg
gs
xchg
ja
sbb
outsb
jge
push
dec
imul
rolb
repnz
div
ret
test
adc
daa
sub
push
popf
cmp
jge
insb
out
std
mov
or
push
mov
inc
scas
mov
or
cmp
imul
cmp
mov
subl
push
js
outsb
dec
cmp
std
xchg
or
adc
loope
add
mov
jbe
jno
cli
movsl
fnstenv
aaa
cmp
mov
xchg
jg
repnz
mov
or
ljmp
mov
mov
cltd
mov
mov
inc
scas
lret
pusha
sbb
movsl
mov
int3
push
sub
leave
push
mov
sbb
inc
sbb
push
mov
mov
movsb
popa
pop
js
pop
sub
push
pop
lods
jne
sub
xchg
popa
and
jb
mov
cmp
lods
mov
jg
and
shrl
fnstsw
dec
sub
aas
lcall
rcl
sub
mov
scas
mov
stc
adc
test
add
cwtl
pop
sub
testb
dec
popf
push
dec
xor
ljmp
repz
rclb
sti
xor
jne
imul
xchg
xor
insb
cmp
inc
popa
aad
icebp
cmp
aas
cmp
pop
mov
jbe
mov
push
adc
and
cmp
sub
inc
mov
cmp
out
fisubl
xchg
inc
xchg
stos
inc
cli
ret
js
pop
inc
gs
in
and
enter
ss
pusha
fwait
jg
pop
sub
pop
insl
clc
jge
push
outsl
xor
gs
int3
jg
es
jp
and
aad
out
mov
idivb
sahf
out
mov
roll
scas
mov
nop
and
pop
imul
inc
or
mov
aad
sbb
fisubl
and
hlt
xchg
cmp
jmp
pop
push
push
aaa
bound
test
dec
ret
inc
inc
mov
jb
add
outsb
pop
sbb
mov
rcrl
stc
aas
jne
mov
xor
push
xchg
cmp
hlt
sti
xor
jnp
xchg
cmp
mov
cmp
cmp
xor
pop
and
mov
mov
mov
cmp
dec
sahf
dec
stc
xchg
sub
out
out
cmp
ds
dec
fwait
fwait
jle
aas
add
mov
popf
push
ds
xchg
xor
lret
pop
stos
mov
popf
repnz
inc
jmp
cwtl
shl
push
cmp
insb
jnp
hlt
mov
ror
lea
scas
sub
sbb
jmp
jg
and
pop
loopne
in
shll
push
jp
mov
and
sub
push
cmp
adc
mov
lret
insl
in
mov
add
subl
clc
nop
inc
les
ja
mov
or
mov
cmc
add
mov
xlat
pop
jno
loopne
imul
pop
inc
xchg
stos
outsl
pop
pushl
nop
js
xor
add
lock
pop
aas
into
mov
jecxz
out
and
jle
mov
addl
pop
sub
out
add
cmp
jge
dec
mov
dec
sahf
cmp
jg
push
xchg
inc
sbb
int3
add
out
sti
into
and
mov
sbb
out
test
sti
dec
cs
jle
sub
xor
mov
int3
jb
lock
or
jmp
popa
test
ret
push
add
daa
add
shll
clc
inc
dec
jmp
push
in
das
adc
pop
jmp
leave
shlb
rorl
dec
cmc
pop
xor
cmp
push
in
adc
xchg
stos
mov
cmpsb
je
notb
stos
out
adc
inc
hlt
lods
mov
mov
in
lcall
js
add
xchg
shrb
adc
jg
mov
add
jmp
or
lret
cmp
and
xor
icebp
ret
rcrl
add
repz
jle
dec
sub
test
jne
xor
pop
xor
shrl
sets
sbb
dec
mov
push
dec
and
xchg
or
dec
bswap
sub
adc
jp
ret
sbb
outsb
jb
push
cmp
add
mov
sti
sub
ficoms
jg
inc
ret
push
dec
and
dec
xchg
adc
in
data16
dec
in
push
out
imul
xchg
fdivrs
xor
push
aam
mov
mov
cmp
andb
dec
into
icebp
jns
sub
xor
cmp
mov
out
mov
and
cmc
loop
jmp
fwait
movsl
nop
icebp
xor
rol
push
mov
or
and
testb
daa
jnp
sub
lds
aad
mov
pusha
and
sbb
cli
loop
out
and
add
adc
aad
jnp
jp
dec
xor
mov
and
rcl
mov
lcall
ja
add
and
mov
lret
clc
fstl
pop
lcall
std
movsl
fbld
popf
stc
fwait
sahf
mov
out
daa
push
jmp
nop
pushf
cmpsl
mov
test
pushf
ficoml
aaa
push
jne
test
xchg
adc
stc
test
out
cld
pop
dec
insl
xchg
je
stos
push
daa
inc
sbb
or
adc
xor
test
test
gs
jle
pop
idivb
xor
orl
sub
xchg
jmp
mov
push
icebp
mov
sbbb
pusha
lcall
xorb
mov
jge
or
xor
repz
sbb
enter
les
dec
pop
scas
addr16
push
inc
dec
decb
enter
mov
cmp
and
es
xor
gs
outsb
stc
insb
inc
add
icebp
pop
push
in
out
xchg
mov
dec
imul
outsb
outsl
pop
imulb
xchg
js
cwtl
push
sbb
into
jmp
je
jg
in
aas
push
xchg
mov
xchg
push
cmc
scas
test
rcll
and
xlat
push
lret
jae
jo
scas
xor
in
and
popf
loop
xchg
fdiv
cs
adc
inc
subl
or
test
sub
ret
xchg
mov
aad
popf
inc
sub
out
push
pop
sbb
cmp
jge
icebp
mov
or
scas
mov
jae
pcmpgtd
sbb
sarl
xorl
sahf
es
mov
stos
shrd
loope
out
xchg
mov
or
mov
inc
aad
cmc
aas
inc
aaa
sbb
add
sbb
mov
pop
int
cmpsb
jle
pop
int
push
mov
cmpsl
stos
add
scas
leave
sub
test
xchg
js
out
lahf
pushf
cmp
jg
xor
fwait
inc
push
sbb
mov
cmp
xorl
xor
mulb
sub
scas
sub
mov
dec
arpl
jmp
sbb
or
push
stc
mov
xlat
dec
xchg
insb
jo
int3
dec
mov
insb
rolb
xchg
mov
mov
xor
sub
mov
dec
cs
imul
jns
dec
lods
cmp
sti
lret
clc
sbb
in
test
pop
pushf
rcrb
out
cmc
mov
stos
mov
pop
fwait
mov
clc
shll
or
xchg
sahf
loopne
sub
jp
mov
scas
sbb
mov
jne
shll
fisttpl
jg
int3
sub
xchg
jge
jo
nop
jg
ret
xchg
push
cwtl
inc
ja
fbstp
mov
outsl
pop
cs
jle
xlat
push
jp
sbbl
in
adc
call
mov
jns
mov
int3
mov
pushl
lret
pusha
test
mov
push
cmp
fcompl
jle
outsl
fs
hlt
pop
mov
aad
lock
pop
mov
pop
aas
es
and
mull
scas
popa
cmp
lea
test
shl
lock
cmp
ljmp
cmpsb
flds
ja
mov
xor
push
lea
mov
xchg
dec
imul
xor
inc
or
add
aam
movsl
ja
loop
pop
mov
add
dec
inc
or
movsb
jmp
mov
repz
push
pop
jge
iret
iret
jp
push
aas
in
mov
jge
stos
sbb
adc
outsb
gs
mov
and
cmp
loop
dec
popf
lret
and
fldenv
dec
pop
outsl
add
mov
jno
jb
bnd
inc
test
sub
sub
ds
xchg
repnz
jnp
and
repnz
add
xor
push
leave
and
popa
jnp
rcll
pop
cmpl
inc
std
bound
iret
scas
sub
pop
mov
push
in
je
add
mov
lahf
or
cs
and
cli
pop
insb
lret
add
fcoml
push
outsb
pop
and
cmpsb
cmp
mov
out
mov
lods
jb
xor
vpsrlq
enter
aaa
inc
fcmovu
andb
jp
enter
adc
pop
imul
push
outsl
sbb
mov
cmp
sbb
mov
stos
jl
xchg
sbb
cmp
add
mov
enter
mov
mov
xchg
mov
scas
xor
push
mov
xchg
sbb
aaa
inc
daa
push
loope
sti
push
pop
lret
mov
add
adcl
or
int3
pop
into
jecxz
mov
or
test
adc
arpl
mov
aad
mov
dec
sbb
imul
lret
sub
jne
bound
fdivl
jp
mov
pushf
mov
dec
adc
pop
int3
inc
and
and
movsb
jl
adc
test
lock
clc
mov
jmp
xchg
je
repnz
add
jns
ds
mov
inc
int3
es
and
xlat
inc
imul
mov
jo
inc
ljmp
ret
mov
xor
mov
stos
in
test
movsl
stc
xchg
mov
adc
les
out
addl
ja
push
in
iret
add
cmpsl
nop
movsb
arpl
out
sub
xor
adc
jo
inc
sahf
push
mov
sub
push
push
add
jmp
jp
xor
sbb
mov
loop
or
xchg
pop
stc
lret
xor
daa
data16
call
std
loop
pop
testb
sub
mov
les
pop
pop
icebp
xchg
lea
mov
mov
outsl
and
shll
mov
xchg
fwait
dec
movsb
aad
scas
mov
lock
fldenv
out
push
out
jbe
pop
xchg
daa
cs
dec
lcall
fstl
push
sub
pop
gs
xchg
push
mov
mov
push
incl
out
imul
dec
icebp
xchg
dec
jb
lods
xor
imulb
insl
jl
cmp
popa
mov
mov
and
imul
and
movb
jg
enter
pop
call
or
sub
iret
lahf
out
addr16
push
loop
movsb
das
mov
fld
popa
lea
jp
and
rorl
repnz
hlt
push
pop
mov
shl
lcall
fists
fisttpll
arpl
sub
jecxz
cmpb
inc
inc
lods
je
std
and
jl
push
pushf
mov
push
shr
jp
gs
lock
xchg
in
pop
gs
mov
repnz
pop
dec
enter
aaa
idiv
insl
test
fnstenv
cld
mov
or
or
ficoms
cmp
in
fisubrl
mov
movsb
pop
xchg
adc
adc
int
cmp
mov
jne
es
fisubrs
cmp
inc
mov
mov
push
stos
mov
xchg
lahf
cmp
mov
ljmp
sub
cltd
repz
pushf
lret
neg
popa
cmpsl
jp
or
mov
aas
or
mov
js
lcall
in
mov
es
nop
js
add
inc
dec
mov
adc
hlt
cli
sbb
adc
jnp
mov
add
inc
neg
mov
adc
mov
mov
sub
fcomps
pop
or
mov
mov
ds
mov
repz
cmp
mov
or
or
mov
jmp
imul
ja
jmp
jecxz
repz
in
pop
ja
imul
pusha
dec
jo
push
aad
gs
adc
mov
and
stos
jb
sub
stos
scas
xor
and
pop
pop
pop
pushf
sbb
mov
jle
inc
stos
int
in
push
loopne
dec
test
add
cld
les
sub
xlat
shl
in
sbb
xchg
mov
add
push
pop
dec
lretw
mov
scas
and
out
xor
out
imul
cmpsl
push
pop
pop
out
sub
lds
ljmp
mov
pop
add
mov
xlat
adc
outsl
sub
cmp
vstmxcsr
lods
mov
lahf
mov
add
shll
pop
iret
push
or
repz
dec
mov
in
pop
or
aas
aaa
in
xor
mov
ds
insb
cltd
es
jmp
dec
mov
ret
outsl
pop
in
jb
dec
push
cmp
dec
cmp
fdiv
divl
and
adc
mov
out
repnz
sbbl
imul
ljmp
sub
mov
mov
inc
das
test
enter
pop
sbb
and
cmpsl
pop
imul
fldenv
loopne
xchg
ss
sub
jb
cld
push
aaa
jl
add
jmp
mov
xor
jmp
xor
push
insb
jg
xchg
test
andb
loop
lds
pop
xchg
inc
decl
repnz
imul
and
ds
mov
int
pusha
popa
into
mov
aam
mov
xlat
and
lcall
lods
aad
mov
aaa
jns
sub
xchg
mov
jge
fsts
popf
or
fucom
adc
pop
pop
cmp
test
shlb
lret
arpl
subb
add
cmpsb
mov
mov
int
shlb
aaa
repnz
xchg
and
xchg
icebp
pop
js
inc
cmpsl
js
mov
mov
jp
nop
sbb
sub
int3
jno
xchg
jge
cmp
sbb
jnp
mov
mov
ret
jae
jb
or
cmc
sub
sbb
stos
pop
cmp
push
call
movsb
data16
movsl
xchg
inc
cmp
js
daa
lcall
inc
test
bound
lahf
cmp
movsl
mov
sub
pop
rorl
nop
lods
cltd
xchg
ss
inc
cmp
fsubr
lahf
movsl
and
cmpsb
iret
xchg
mov
dec
add
arpl
xchg
pop
lds
mov
jge
push
lcall
add
mov
inc
jbe
xorb
lcall
adc
stc
sub
mov
push
pop
mov
fwait
and
mov
mov
and
lea
xor
nop
faddp
push
push
push
push
push
or
mov
push
sub
popf
mov
cmpsb
jmp
cmpsl
mov
cli
jns
push
ja
ss
loop
das
aad
add
mov
mov
data16
aaa
push
jle
lea
jge
clc
popa
adc
pop
mov
push
jbe
jmp
inc
mov
fsts
jecxz
jg
ljmp
push
loop
aad
pushf
imul
lret
xor
call
stc
mov
mulb
inc
loop
hlt
ds
adc
push
cmp
sub
pop
sbb
push
jne
movsl
mov
rol
roll
xchg
push
dec
dec
repz
cmp
mov
pop
imul
push
sbb
jo
mov
xor
cmpsb
pop
push
adc
pushf
jg
mull
adc
jnp
xor
pop
pop
lods
ljmp
xchg
popf
bswap
or
fadds
sbb
xor
shl
jge
lock
hlt
mov
mov
clc
clc
inc
adc
fnstsw
and
cmp
pop
jecxz
test
dec
in
bound
or
jb
adc
xor
sbb
and
xchg
in
xchg
nop
push
dec
and
test
ds
jle
and
or
mov
inc
scas
jecxz
scas
and
fwait
xor
aaa
inc
pop
fwait
or
int3
adcb
sbb
add
es
outsl
mov
scas
mov
dec
sub
test
push
out
and
mov
imul
js
pop
lds
and
and
fwait
into
icebp
jecxz
dec
inc
xor
out
jle
cmp
movsb
insl
stc
sbb
mov
cmp
lea
xor
andl
imul
add
and
xor
lcall
sub
cmp
in
sbb
fisubrs
jo
cmp
cltd
les
enter
cwtl
insb
stc
mov
cmp
pop
push
lds
mov
mov
mov
je
sahf
or
adc
or
lock
and
in
incb
xchg
sub
add
insb
test
push
mov
inc
and
cltd
mov
push
ret
dec
js
sub
xchg
add
dec
jmp
pop
insb
jmpw
mov
xchg
cmpsl
cld
or
or
mov
in
daa
out
cli
push
idiv
outsb
mov
add
inc
mov
mov
nop/reserved
das
in
adcb
or
jno
push
stos
or
jg
fildl
inc
mov
hlt
xor
mov
adc
in
in
ja
popf
pop
sbb
dec
popa
loope
push
jne
pop
xchg
and
sub
aam
mov
pop
dec
jecxz
loopne
setns
xor
mov
ffree
add
push
adc
mov
xchg
adc
add
add
xor
adcl
inc
dec
dec
gs
into
imul
xor
sbb
mov
call
cmp
lea
rolb
cmp
fcmovnbe
pop
push
test
push
ret
cli
fidivrl
and
jo
ret
in
adc
mov
rcl
inc
loopne
lods
inc
mov
dec
xchg
jno
dec
push
jecxz
aam
lret
daa
aaa
xchg
sbb
aam
mov
dec
fiadds
sbb
js
in
pusha
inc
imul
insb
mov
aas
push
dec
push
mov
leave
inc
adc
xor
add
in
push
gs
sub
sbb
xchg
and
fs
sbb
xchg
or
sub
popa
fistps
pop
pop
pop
xchg
lret
push
inc
jge
push
fistps
rcl
mov
and
push
test
push
cmp
and
jns
mov
push
sti
sbb
enter
push
adc
pop
test
jns
push
gs
ds
push
push
test
and
scas
rclb
cmp
fildl
push
pop
aad
movsl
dec
les
inc
mov
jp
sub
mov
mov
pop
ror
jb
mov
sbb
fstpl
push
xchg
rcrb
push
mov
push
pop
sbb
mov
mov
push
loope
xor
test
test
pop
loopne
cmp
push
or
lea
mov
pop
add
dec
dec
add
jle
pop
push
sub
out
rcrl
mov
fadds
shl
test
data16
xchg
dec
sub
push
aam
lcall
in
mov
into
xchg
xlat
mov
ljmp
lahf
pop
js
inc
nop
pop
jmp
rorb
cmp
pushf
mov
sub
or
test
and
fisttps
mov
xor
jg
fcoml
add
inc
repnz
imul
test
in
mov
mov
add
and
std
add
xor
fnstcw
aaa
xor
es
cltd
pop
mov
dec
in
push
jno
sbb
out
cld
mov
or
lret
sbb
adcl
popf
cmp
sbb
xchg
xchg
jne
out
xor
mov
test
xchg
push
sub
mov
ds
loop
sub
and
push
adc
testl
sbbl
sub
fimuls
dec
or
sub
push
into
imul
sarb
int
jmp
mov
ffree
dec
xchg
add
fsubrl
jne
shl
mov
dec
mov
adc
jae
push
inc
jbe
pop
in
cli
shr
lret
in
xchg
stos
lea
or
dec
je
ja
and
inc
jmp
jp
cmpsb
mov
clc
push
imul
lds
repz
mov
add
loopne
lea
pushf
push
iret
aas
mov
fiaddl
or
cmpsb
movsb
sti
mov
xor
stos
pop
cltd
shr
mov
loope
sub
adcb
jb
sub
dec
jmp
xlat
dec
sub
or
inc
inc
data16
mov
repz
enter
cmp
cmp
aaa
mov
push
pop
jns
jae
ret
mov
fcom
es
mov
add
aam
mov
int3
jne
add
mov
sub
jne
jne
loope
ret
imul
pop
lcall
in
add
push
mov
insb
mov
push
and
jne
pop
in
filds
mov
sti
fcompp
jecxz
jle
int3
push
lret
cmc
decb
leave
pusha
cmpsb
fwait
pop
in
stc
mov
pusha
inc
mov
push
dec
std
ud2
mov
daa
pop
sub
lods
pop
mov
pop
int
fs
idivb
sbb
dec
repz
xchg
mov
mov
dec
pushl
ja
into
dec
jge
sahf
or
jle
mov
scas
sbb
addr16
cld
scas
scas
stc
push
mov
loopne
mov
cwtl
xor
in
bound
add
rol
adc
clc
xchg
out
mov
add
fisttps
out
insl
jnp
jl
call
mov
cltd
jmp
cmp
xchg
sbb
mov
mov
mov
cld
sbb
loop
loop
aas
gs
pop
xchg
insb
lcall
cmp
push
outsb
inc
dec
cltd
cmp
sub
cmp
roll
mov
sub
xchg
adc
adc
sbb
mov
nop
dec
sarb
stc
dec
dec
add
imul
movsb
sbb
sub
inc
mov
or
push
pop
mov
mov
and
repz
sub
in
mov
stos
out
add
jecxz
mov
mov
push
inc
daa
in
jg
test
jle
sbbb
cmpxchg8b
mov
and
mov
ret
or
fiadds
or
jo
jle
add
adc
mov
stos
into
push
cld
scas
pop
ret
adc
add
sub
cmp
lret
pop
add
mov
sub
fidivs
cmp
mov
negl
movsb
or
sar
cmpsl
jg
push
cmp
clc
adc
mov
rcrl
or
xor
mov
inc
or
push
lods
dec
sbb
add
add
or
in
in
enter
dec
mov
xchg
or
leave
pop
xor
lea
divb
pop
mov
and
lods
pop
xor
popf
push
push
inc
setp
mov
and
fdivs
ret
shlb
stos
orl
inc
jle
push
scas
das
mov
mov
cwtl
sbb
insb
mov
fildll
in
mov
shrl
js
stos
cmp
das
mov
lcall
insb
dec
push
jnp
xchg
add
and
scas
lret
jle
and
addl
repz
inc
idivb
jb
cli
stos
data16
jbe
sub
cwtl
pop
adc
sbb
pop
xchg
jns
fdivrs
xlat
loopne
movsl
lods
sbb
xor
push
xor
test
jecxz
jno
imul
mov
xchg
std
add
xchg
xchg
mov
enter
daa
jns
arpl
sub
stc
std
mov
ljmp
pop
mov
xchg
push
mov
mov
mov
xchg
ret
or
xor
mov
lods
mov
xor
xchg
jg
xor
jne
push
addr16
fiaddl
mov
mov
or
lret
mov
hlt
in
ss
nop
pusha
nop
pop
mov
cmpsl
xchg
mov
and
mov
cmp
enter
adc
jbe
push
xchg
fcoml
out
fs
je
mov
inc
mov
lods
dec
cmc
rcrb
jo
pusha
mov
cmc
pushw
movsl
mov
push
jae
mov
push
dec
sub
push
stos
int
jb
repz
xlat
xor
lock
xchg
aam
mov
loop
push
xor
repnz
push
jecxz
shrb
out
fcomps
test
roll
pop
sub
adc
jne
xor
dec
push
notl
push
into
loop
rcr
enter
rorb
jmp
and
fs
dec
xor
mov
in
rcl
mov
lcall
add
mov
cwtl
in
jp
pop
fisttpl
xchg
pushf
jmp
outsl
xor
ja
jns
fidivs
lea
or
sarb
and
aad
or
pop
cmpsb
push
subl
inc
pop
iret
push
sub
das
psubb
imul
inc
inc
mov
sbb
mov
sub
inc
xchg
sti
aam
pusha
xchg
push
popf
xchg
adc
out
shll
pop
jle
gs
nop
push
push
in
mov
xchg
imul
mov
jb
pop
push
adc
xor
push
loop
nop
xchg
mov
cmc
and
shll
mov
sub
test
dec
and
sub
scas
mov
mov
bound
inc
hlt
in
xchg
test
lods
test
js
divps
add
idivl
cmp
sub
or
js
into
mov
pop
mov
lahf
xchg
inc
icebp
fstpl
inc
xor
mov
add
cmp
dec
fistl
or
aad
fstpl
sub
inc
jmp
fsubp
sti
lods
mov
adc
movsl
or
jmp
pushf
mov
add
or
jo
sub
push
cwtl
pop
fsubrs
repnz
sub
jbe
xchg
call
sub
call
adc
sub
roll
ja
loop
scas
adc
push
and
mov
jns
in
xor
movaps
es
jae
add
in
or
cmp
rorb
sub
das
mov
pop
add
popf
and
sbb
cld
jl
icebp
gs
leave
lods
dec
xchg
aam
mov
int3
popa
das
push
pop
jmp
add
xchg
in
test
cmpsb
and
stos
jmp
jecxz
or
push
ja
daa
jecxz
sub
sbb
adc
dec
or
shll
jo
rcrl
cmp
cli
cli
pushf
sti
shlb
mov
test
in
sar
mov
packuswb
add
mov
or
push
push
pop
pop
and
push
lods
insl
aam
insl
push
fisttps
mov
mov
mov
push
out
add
notl
fsubs
ss
adc
dec
sarb
sbb
dec
inc
push
lea
lea
mov
xor
lods
mov
inc
arpl
xor
clc
jnp
sub
ss
add
stos
std
gs
aas
xor
and
jmp
push
xor
movsl
pop
and
inc
xchg
mov
dec
cltd
movsl
test
pop
out
hlt
mov
or
mov
add
lods
clc
or
sub
data16
cmp
inc
pop
popa
push
inc
rolb
aas
push
cli
imul
call
movsl
mov
mov
popa
lcall
scas
fwait
push
sbb
lods
call
subb
and
push
and
cmpsl
push
fbld
cmpsb
sahf
enter
loop
xor
xchg
inc
das
les
pop
lock
jge
xor
loopne
movsb
push
inc
add
pop
jae
fcmovbe
mov
inc
jg
int3
sbb
pushf
mov
and
push
mov
js
test
dec
int
xor
adcl
push
inc
cmpsl
jge
lods
stos
popf
and
gs
mov
nop
mov
or
xor
mov
flds
sub
mov
test
fidivrl
jbe
clc
stos
inc
cwtl
or
insl
jecxz
cmpsb
addl
mov
cmc
xchg
stc
sbb
je
testl
push
or
out
clc
cmpsl
xor
cld
mov
lods
ret
sbb
lahf
out
mov
pop
push
jmp
and
xchg
push
push
ret
mov
sarl
out
ret
dec
mov
adc
in
adc
test
aad
push
mov
mov
mov
fs
scas
push
lods
dec
push
test
xchg
xchg
shrb
sbb
jno
xor
inc
xchg
push
je
mov
lods
dec
hlt
inc
jnp
and
and
cld
out
inc
jge
mul
xlat
pop
lcall
xor
and
jge
inc
sbb
mov
and
test
or
call
push
xchg
xor
add
and
xlat
test
or
cmp
sbb
sbb
cmpsl
lcall
fistl
leave
push
int3
pushf
lahf
add
or
jno
mov
pop
roll
jbe
aad
out
aam
pushf
fidivrs
add
int3
ss
popa
scas
jnp
jne
adc
xchg
xchg
imul
jb
xor
mov
subl
addr16
sar
sbb
enter
cmp
add
mov
inc
idivb
mov
lret
movsl
iret
mov
es
mov
mov
adc
push
mov
xor
sbb
lahf
pop
mov
xchg
push
bnd
adc
pop
fwait
imul
subl
popa
mov
nop
push
inc
mov
cwtl
inc
jnp
aas
movsb
scas
jae
clc
aad
xchg
cmpsb
dec
mov
jmp
xchg
or
cli
je
lods
dec
mov
clc
int3
sarl
xor
rcr
jno
scas
pushf
repz
lds
data16
loop
lods
in
lock
or
mov
pushw
add
cmp
es
mov
pushl
inc
adc
ret
stc
repnz
je
test
ja
ljmp
mov
xor
cmp
mov
daa
xor
out
hlt
insl
ret
xchg
cmp
dec
push
cmpsb
cmp
sti
popf
enter
mov
or
mov
mov
pushf
jne
sub
cmpl
out
cmp
enter
xchg
jns
push
out
es
ret
inc
adc
mov
loopne
pop
insb
cmc
push
mov
pop
mov
sbb
cmp
fidivs
add
and
push
and
dec
jno
add
push
mov
clc
xor
inc
add
std
dec
adc
stc
rcll
cld
fidivl
add
repz
ret
xor
shrb
xchg
ret
jle
pop
mov
jg
sbb
cmpsb
icebp
loopne
add
push
jns
mov
mov
nop
add
aas
outsb
mov
dec
stc
adc
cltd
loope
leave
daa
das
popf
or
pop
and
jl
push
rorb
xor
adcl
xchg
dec
clc
stc
popf
jg
mov
mov
mov
adc
test
stos
mov
adc
sahf
int3
jno
popa
mov
pop
hlt
leave
push
pop
pop
push
mov
mov
mov
push
imul
leave
dec
sbb
mov
xchg
cmc
aad
or
mov
aam
popf
mov
lods
test
mov
ret
sub
or
mov
mov
add
pusha
stos
xchg
xor
fstps
out
xor
xchg
push
pop
ficoml
jae
pop
push
push
out
jecxz
mov
cmp
dec
test
pop
testl
push
stos
mov
pop
dec
cmc
dec
xchg
add
adc
push
sbb
lock
sub
idivl
mov
mov
push
adc
or
pop
jno
pop
pop
push
fcmovu
add
cmp
pop
iret
mov
add
mov
jl
out
pop
orb
aam
add
dec
mov
or
add
mov
dec
mov
mov
lods
clc
ljmp
jb
mov
lahf
rorl
into
mov
mov
lock
addr16
stos
dec
repz
leave
pusha
mov
sahf
stc
or
js
movsl
jecxz
push
addr16
imul
sbb
ds
aas
idivl
inc
out
pop
fcompl
xor
inc
lahf
ja
jbe
xor
push
adc
mov
mov
rcrb
mov
cld
inc
jmp
cmp
mov
or
mov
jo
and
lcall
jno,pn
push
cs
and
std
enter
dec
add
jmp
dec
decl
lret
dec
adc
push
mov
ds
mov
xchg
bound
xlat
jp
sbbb
stc
or
nop
dec
movsb
push
adc
cmpsb
iret
outsl
mov
and
mov
add
in
lods
push
adc
ljmp
fnstenv
xchg
pop
sub
pop
push
test
mov
cmp
jmp
xlat
jb
shrl
dec
inc
lock
es
je
inc
dec
jl
xor
lret
daa
push
in
xor
cld
adc
mov
adc
sbb
fyl2x
adc
cmc
pop
shll
in
fcomi
jo
add
jns
jle
jb
iret
lods
cld
arpl
loopne
sbb
pop
loope
mov
mov
mov
enter
cli
adc
pop
and
inc
out
mov
jl
lock
int3
mov
arpl
int3
js
add
or
push
push
xor
push
scas
jl
mov
lea
hlt
imul
inc
jl
loope
inc
mov
out
mov
fistl
ret
mov
push
dec
rol
decl
test
add
in
add
pop
movsb
dec
fdivl
adc
test
pop
pop
out
repnz
sbb
pop
repz
out
sahf
dec
push
mov
lods
es
dec
or
cmpsb
cltd
mov
pop
xchg
mov
sub
dec
mov
ljmp
cmpl
xor
stc
gs
xchg
push
pop
sbb
xor
iret
mov
push
in
inc
sub
sub
mov
cmpl
hlt
cli
imul
lods
test
cmpsb
dec
sbb
pop
inc
push
arpl
lret
inc
xor
insl
icebp
inc
mov
fmull
fsubs
popf
ss
out
not
sbb
cmp
or
or
mov
inc
cmpsb
fcomps
out
and
js
movsl
sub
xor
addl
cmp
iret
aad
or
xor
inc
adc
cmp
iret
mov
add
xchg
cmp
xchg
jl
or
out
mov
in
inc
out
push
inc
cwtl
cmc
icebp
mov
stc
scas
or
mov
or
sbb
jg
xorb
sbb
jmp
fadd
shll
out
test
pop
out
push
add
aad
dec
daa
or
xlat
and
pop
sbb
mov
out
hlt
pop
pop
andb
inc
adc
sub
sbb
stos
mul
sub
stos
jae
fcos
bound
int
sbbb
mov
call
adc
or
movsb
sahf
or
pop
dec
mov
and
sub
cmpsb
inc
push
aaa
in
lods
sar
and
jne
fists
xorl
mov
aas
movsb
lods
dec
xchg
int
adc
roll
stos
push
pop
loopne
out
mov
push
or
ds
fisttpll
add
test
push
pop
scas
into
ret
sub
bound
aam
dec
xchg
ljmp
pop
or
ja
cmc
add
ret
cmp
mov
adc
lods
mov
add
cmp
adcl
lods
and
cmp
aaa
sbb
mov
mov
mov
insl
rcll
mov
adc
push
pop
cmp
js
pop
xchg
push
sub
dec
add
stos
je
daa
les
mov
push
fmuls
mov
in
mov
into
aas
push
lret
push
sbb
fists
sbb
sbb
sbbl
adc
dec
adc
lea
sub
pop
fidivs
dec
adc
sbb
jmp
mov
lock
xorl
mov
push
mov
pop
pop
clc
push
gs
cli
pop
rcrl
iret
add
jmp
mov
push
cmpl
imul
mov
dec
mov
outsb
sub
mov
repz
pop
jo
lahf
and
xchg
clc
arpl
push
mov
pusha
jp
call
pop
jae
mov
daa
lods
mov
jl
rcrb
dec
data16
int3
add
cwtl
int
test
insl
sahf
cs
sbbb
jbe
out
mov
shlb
cmp
mov
sti
jae
icebp
fisttpl
in
dec
int
mov
adc
sbb
sbb
aaa
sti
cwtl
jle
mov
pop
ljmp
jnp
push
pop
cmpsb
add
fdivrs
imul
push
outsb
out
mov
lret
scas
or
iret
ret
imul
fucomip
js
push
pop
nop
sub
xor
lds
mov
stos
xchg
sbb
xlat
push
pop
inc
lcall
jg
mov
pop
arpl
je
mov
and
lahf
pusha
cli
std
pop
subl
clc
call
pop
and
in
and
pop
xchg
xor
aaa
sbb
lods
aam
hlt
mov
cmpsl
insb
mov
jl
mov
in
push
loope
push
or
imul
push
inc
mov
es
push
push
out
cmpb
jns
out
and
cs
sti
mov
dec
in
sbb
cwtl
dec
inc
push
out
jae
xcrypt-cfb
adc
pop
pop
pop
repnz
mov
jb
xor
std
int3
fisubrs
push
into
lods
lahf
or
jecxz
xchg
or
mov
xor
out
out
fcom
mov
add
push
fwait
cmp
dec
sti
gs
aas
cwtl
push
icebp
mov
cmp
add
test
cmp
and
xor
mov
fisubrl
nop
or
cmpsl
dec
cmp
lock
pop
hlt
stos
jae
outsb
and
sub
or
inc
lea
jp
gs
lret
mov
cmp
jb
lcall
pop
jno
shll
pop
movsb
mov
pop
movsb
xchg
repnz
jae
cld
insl
jp
xor
shlb
clc
xchg
fldt
rol
inc
mov
jl
and
pop
add
mov
xchg
movsl
das
sbb
adc
push
dec
xchg
pop
mov
push
mov
inc
and
lods
movsl
test
mov
data16
inc
xor
mov
scas
add
dec
and
mov
adc
mov
xor
xor
push
cmp
fistpll
xor
imull
adc
and
xlat
iret
push
subb
xlat
enter
mov
sbb
sbb
incl
inc
pop
stos
sub
push
adc
xor
sbb
roll
xchg
xor
mov
and
inc
mov
jmp
sub
popa
sarb
mov
xor
stc
adcb
repz
mov
jp
xchg
movsl
jge
mov
pop
rorb
stos
imul
cmp
gs
xor
jbe
shlb
mov
loop
ss
nop
push
and
inc
int
int
push
xchg
mov
lea
cli
les
cmpsl
pop
notl
dec
jle
jecxz
inc
push
jl
ljmp
xor
pop
or
movl
sti
fdivp
decb
jne
jns
shll
push
xchg
or
das
int3
addr16
js
mov
sbb
outsb
and
dec
and
push
add
xchg
incl
enter
fnsave
movsl
and
or
fwait
inc
push
test
push
movsl
int3
sbb
ljmp
dec
mov
negl
rorb
jnp
les
jmp
cmpsb
xchg
push
jnp
xor
jmp
es
inc
xchg
cmpb
inc
es
in
or
outsl
test
inc
adc
inc
pop
add
mov
daa
xor
or
outsl
addr16
xor
das
mov
add
push
icebp
and
ja
or
lcall
sbb
lahf
mov
sub
popf
adc
mov
cmp
push
out
icebp
xchg
in
cmpl
rcrb
lds
jbe
ja
cmp
lea
dec
lock
dec
fldl
cmp
sbb
mov
daa
rcll
mov
fstps
and
push
fstpl
xor
fisubs
incl
sahf
outsl
jns
mov
inc
adc
sub
lods
stos
add
pop
ljmp
xor
scas
mov
cltd
data16
dec
inc
push
sbb
insl
sub
ja
pushf
pusha
lock
lret
dec
lock
push
cmp
push
fldcw
mov
testl
lret
ja
mov
cwtl
add
sub
cmp
lahf
out
sti
xchg
adcb
push
add
adc
add
lea
add
movsb
mov
push
stos
hlt
out
mov
mov
lods
xchg
or
cmpsb
iret
sahf
inc
or
mov
lods
sarb
repnz
filds
in
fs
call
mov
mov
adc
mov
scas
dec
pop
inc
sahf
fs
call
mov
dec
arpl
mov
adc
push
lea
push
cmpsb
mov
inc
paddsb
mov
arpl
fmuls
jmp
or
jnp
push
mov
cmp
cmp
cmp
daa
lret
out
sub
or
stc
adc
pop
data16
leave
mov
xchg
xchg
repnz
out
aam
or
mov
lods
lea
pop
adc
insb
pop
adc
stos
push
cmp
jmp
pop
out
push
inc
pop
pop
insb
mov
cmp
mov
dec
fmull
mov
push
xor
sbb
sub
add
rcll
add
fucomp
pusha
mov
sbb
pop
dec
xor
out
cltd
in
sti
ss
loopne
lock
or
lret
xor
insb
aam
lods
cmp
loopne
shrb
lcall
leave
jo
int3
stos
pop
in
pushf
insb
dec
jns
add
icebp
enter
jmp
push
mov
pop
adc
nop
or
jo
inc
imul
iret
dec
testb
inc
in
inc
fsts
xchg
in
sbb
les
xchg
cmp
cmp
jmp
mov
ret
repnz
mov
or
push
clc
mov
insl
mov
push
loop
in
sbb
ret
adc
movsb
dec
xchg
push
mov
or
jg
js
push
xor
aam
and
push
lcall
cmpsl
adc
push
into
push
pop
inc
js
nop
cli
inc
xchg
jg
cmc
lods
mov
repz
adc
fcoms
pop
fcmovne
push
sub
ljmp
jmp
cwtl
mov
mov
adcb
popf
xchg
pop
ds
inc
pop
jmp
xor
jmp
xor
fcomps
push
lahf
mov
lahf
dec
mov
out
mov
push
dec
int
dec
subb
mov
and
and
sbb
int3
out
js
imul
inc
xlat
mov
jo
mov
dec
sbb
js
cmpsl
cmpsb
cmp
jae
repz
ljmp
mov
inc
iret
insl
xor
mov
fcoms
xlat
or
sub
lds
movsl
sub
xchg
aas
pop
or
fisttpl
sbb
sbb
cmp
in
cmp
push
ret
stos
mov
cwtl
aaa
mov
ret
movsb
std
push
cmp
ljmp
push
mov
inc
ss
mov
outsl
lds
sbb
mov
in
rolb
int3
sub
imul
int
insl
or
ljmp
push
mov
int3
pop
dec
mov
dec
into
into
negb
out
int3
lcall
outsl
imull
jecxz
out
out
pusha
push
fiaddl
adc
add
loop
popa
test
idiv
mov
ds
jo
mov
in
cmpsl
insb
movsb
inc
dec
mov
insb
in
popa
mov
or
mov
clc
jne
mov
cmpsl
bound
xchg
call
adc
add
adc
push
add
movsl
inc
xchg
cli
insb
jle
dec
xchg
adc
sbb
adc
out
mov
dec
mov
cmp
imul
inc
mov
out
icebp
aas
pop
in
inc
mov
jbe
pop
repnz
in
mov
pushf
test
adc
xadd
jle
psubusw
sub
mov
jno
mov
ds
lods
xchg
lods
arpl
and
call
call
out
cmp
pusha
movsb
pushf
lret
les
jnp
mov
or
jo
mov
pop
mov
movsl
mov
in
lret
push
outsb
ret
mov
iret
adc
aaa
pushf
xchg
jae
sti
mov
push
ret
ja
jno
mov
lds
addb
push
xchg
mov
adc
push
xor
add
xor
add
sbb
stos
cmpsl
repnz
xlat
jo
sub
ds
jmp
popf
dec
pusha
les
pop
aam
addl
test
mov
add
cmpsl
pop
pop
add
les
push
insb
testl
jmp
fdivrl
aas
loopne
lds
aam
pop
dec
pop
cs
mov
adc
mov
jl
popa
addr16
xchg
mov
stc
push
insb
lcall
insb
push
pop
in
stos
call
fldenv
orl
mov
adc
pop
mov
jge
push
mov
int
adc
sbb
icebp
cmp
ret
iret
and
lock
pushw
enter
daa
cmp
pop
leave
clc
cmpsl
xlat
push
push
dec
test
push
or
adc
daa
mov
movl
lret
cltd
add
jo
xlat
mov
cmp
gs
xchg
sbb
push
mov
jp
sbb
pop
jle
hlt
sub
sbb
lds
cmpsb
outsl
and
or
das
insb
mov
cs
hlt
lea
out
mov
shr
cmp
push
addr16
repnz
movsb
mov
inc
jmp
jae
flds
xchg
loopne
arpl
test
pushf
add
shll
shlb
push
jo
xchg
in
adc
mov
cmp
add
das
mov
adc
addr16
and
in
pop
mov
dec
bound
xchg
xor
ljmp
outsb
cs
mov
cmpsl
sbb
or
ds
mov
jg
push
adc
stos
dec
hlt
sti
jnp
mov
or
fisttpl
cmp
jb
test
mov
stos
mov
or
sbb
dec
push
leave
stos
mov
lods
sub
shll
jl
mov
pusha
push
push
cmp
mov
les
mov
pop
sbb
rorl
pop
repz
in
xchg
fidivrs
adc
aaa
shll
call
mov
fnstenv
sbb
mov
stos
mov
add
bound
mov
idivl
sub
cmp
inc
sbb
xlat
xchg
ret
test
jmp
cmovnp
mov
hlt
xlat
xchg
jb
push
push
dec
lcall
imul
or
add
xchg
sbb
notl
ljmp
pop
aad
lods
aaa
das
into
inc
push
pop
xor
std
xor
pop
shrl
inc
dec
dec
push
lods
inc
in
fsubp
flds
xchg
xchg
jns
loop
dec
repz
jno
sbb
jae
testl
bound
pop
je
jnp
pop
or
outsb
movb
sub
mov
adc
sbb
mov
sbb
rcl
or
lahf
incb
pop
jmp
mov
outsb
addr16
mov
mov
sub
dec
mov
xor
mov
pushf
and
adc
mov
mov
fdivs
lret
dec
scas
ret
mov
rol
xchg
or
stos
push
das
push
mov
shlb
movsl
mov
mov
pop
or
cwtl
xor
lea
mov
jo
lods
test
mov
push
or
mov
add
mov
dec
pop
and
sub
add
mov
pop
and
mov
clc
aam
je
enter
lods
pop
mov
and
xor
push
fxch
mov
or
mov
xor
or
sbb
inc
pop
xor
sti
sub
decl
inc
test
into
in
jbe
ds
fdivrl
pop
in
out
xlat
out
in
jne
xor
ljmp
xor
and
ds
dec
jbe
sbb
popf
call
push
xchg
jl
test
add
mov
lret
inc
cltd
orb
cmp
addb
pop
sbb
fldenv
jle
ljmp
add
push
sahf
push
sub
cs
add
clc
rcll
mov
push
add
data16
push
sbb
adc
test
outsl
jg
mov
out
outsl
cmp
cld
ret
dec
dec
imul
sbb
cli
mov
ss
pop
nop
xchg
mov
inc
dec
xchg
enter
jecxz
repz
hlt
xor
mov
mov
repnz
cmp
and
aam
test
or
xchg
add
xchg
push
popf
mov
mov
jmp
dec
sub
loop
test
sbb
xchg
sti
inc
out
add
push
push
mov
push
rorb
inc
out
adc
add
bnd
xor
popf
hlt
adc
cmpsl
pushf
sbbl
xchg
fildl
add
xor
add
mov
xchg
add
int3
popa
idivl
es
pop
loop
and
adc
inc
xchg
shl
lock
add
in
stos
jge
stos
test
push
lea
dec
movsb
dec
jo
lock
push
sbb
out
and
adc
sub
dec
mov
mov
mov
adc
dec
aad
cmpsb
or
xlat
mov
or
js
xchg
aaa
xchg
mov
pop
test
inc
aas
mov
out
pop
dec
xchg
lahf
clc
mov
add
and
test
jmp
dec
push
sub
mov
push
jb
push
inc
jno
push
sub
mov
add
mov
and
cmp
push
mov
push
cmp
xchg
sub
or
shrl
lds
sahf
mov
addb
sbb
cmp
icebp
jle
inc
mov
cwtl
cltd
mov
aas
ss
aas
push
jecxz
push
or
sub
mov
adc
xchg
iret
cld
repz
in
popa
out
sbb
cwtl
lds
sbb
int3
insl
adc
cmp
imul
pop
rcl
jo
fistl
xchg
je
dec
pushf
mov
mov
sub
icebp
push
call
lds
adc
xchg
add
and
push
mov
mov
in
repnz
sarb
and
xor
gs
inc
cmp
dec
pop
xchg
shll
cwtl
inc
sub
cmp
ficompl
mov
xor
jge
test
and
push
and
sub
je
mov
rclb
jp
cmc
imul
les
in
mov
in
cld
insl
daa
sub
lock
pop
inc
sub
icebp
aaa
mov
jmp
loopne
mov
xchg
in
xchg
in
xchg
jb
loopne
popf
dec
pop
xchg
loop
int
mov
lahf
lods
enter
xchg
dec
mov
movsl
sub
aam
je
jbe
inc
xchg
aaa
dec
sbb
pop
lock
pop
test
jp
or
ret
pop
enter
lods
mov
out
test
sbb
dec
sbb
leave
jae
mov
movsb
or
pop
adc
out
push
aad
in
lods
jno
cwtl
push
les
aad
cmp
ss
jb
imul
nop
dec
das
cmp
mov
movsl
ja
lahf
leave
daa
fbld
inc
stc
xchg
jg
stc
xor
add
mov
popa
lret
cli
xchg
mov
lret
or
jb
scas
insb
ficoms
pusha
adc
inc
sbb
add
or
dec
pop
xor
jno
str
adc
jl
jge
rorl
and
lods
dec
bound
stos
in
xlat
ret
sbb
xchg
mov
in
cmp
ja
icebp
dec
loop
cmc
push
sahf
shr
aas
lods
lcall
fucompp
pop
arpl
inc
sbb
mov
mov
aam
ljmp
stc
cmp
pop
in
dec
push
loopne
pop
cwtl
jl
je
loope
mov
mov
and
add
push
inc
mov
fwait
adc
arpl
loope
lods
std
jl
lret
rol
cmp
jmp
xchg
pop
add
add
xchg
cltd
inc
mov
data16
ss
sub
add
fs
scas
jg
push
es
pop
mov
push
cmp
lahf
jns
dec
ja
call
jl
repnz
call
xor
mov
cltd
ret
push
jle
dec
or
push
filds
fsubl
out
in
daa
lock
mov
psllq
pop
push
out
jecxz
and
xchg
lods
mov
mov
sbb
add
sti
daa
xchg
sub
aad
out
cmpsl
leave
das
fimull
inc
xchg
das
or
das
nop
adc
into
mov
push
xlat
sub
adc
pushf
fst
mov
frstor
sub
subb
dec
xor
push
lret
int3
push
negl
jecxz
jg
mov
jle
xor
fwait
sub
into
fldl
cmp
dec
push
xlat
leave
out
dec
cmc
inc
lahf
push
or
cmpb
shr
push
shlb
leave
xchg
in
daa
lcall
and
jb
test
xchg
test
xchg
mov
test
negb
clc
jnp
icebp
sub
hlt
inc
sti
icebp
gs
sbb
imul
repnz
adc
mov
filds
push
mov
ror
xor
rcr
dec
pop
pop
cld
icebp
adc
insb
aas
jp
dec
loop
mov
mov
sbbb
outsl
jle
shlb
mov
leave
in
cmp
jae
jmp
outsl
jns
mov
xor
pop
mov
frstpm(287
sub
mov
fistpll
imul
shll
loopne
gs
xchg
dec
imul
in
pop
popl
lock
dec
out
inc
adcl
lret
mov
bound
repnz
jae
fisubrl
mov
addb
inc
jge
mov
xlat
cmp
add
and
loopne
dec
adc
mov
lcall
mov
lods
je
jge
mov
fnstsw
js
iret
rcr
or
repz
data16
int3
std
movsl
je
pop
cltd
outsl
imul
sbb
pop
popa
fcmovne
popf
fsubrl
mov
mov
and
xchg
out
lds
jp
push
xor
out
shll
mov
cmp
mov
cmp
adc
fs
lods
adc
ret
sbb
rcll
inc
mov
fs
pop
jmp
add
add
sub
filds
mov
mov
int3
mov
jb
into
sti
adc
mov
rcrl
xchg
lcall
call
das
fistps
xlat
aad
add
rcll
scas
and
or
decl
jbe
sbb
arpl
cmp
je
add
sub
or
adc
xchg
aaa
xor
aaa
mov
xchg
mov
popf
pop
jno
test
push
adc
mov
popf
xor
fdiv
dec
mov
test
es
scas
mov
inc
dec
inc
pushf
or
pop
pop
push
hlt
je
pop
jo
or
xchg
cmp
sbb
bound
inc
cmpsb
stos
mov
push
sub
push
adc
cmpsl
lahf
jbe
or
int
test
jns
jp
xorl
dec
sub
fisubs
in
mulb
les
pop
aad
jb
clc
idiv
clc
xchg
and
ljmp
inc
jp
mov
les
inc
sbb
lock
mov
xor
push
add
daa
pop
jae
xchg
adcb
jmp
mov
in
mov
test
inc
outsl
cmpsl
add
and
inc
lret
inc
dec
ret
mov
daa
cmp
pop
cs
gs
add
xchg
mov
lret
pop
cmp
je
jge
cmpsb
pop
and
leave
mov
sub
pusha
dec
push
ds
pop
bound
hlt
sub
and
mov
xchg
pusha
add
std
andl
mov
fisttpl
add
sbb
bound
or
adc
pop
jo
sub
dec
dec
inc
call
sahf
int3
loope
mov
jl
mov
inc
dec
cmpb
sub
call
outsl
sub
cmp
inc
xchg
in
enter
jge
int
sub
mov
inc
stc
pop
inc
or
lret
iret
stc
and
out
add
and
inc
sbb
pop
cmp
xchg
inc
rorl
daa
push
out
and
add
and
and
xchg
das
loop
nop
es
cmpsb
pop
add
ret
gs
bound
mov
popa
out
jp
jno
test
mov
add
decb
adc
jp
xchg
xor
xlat
pop
push
call
adc
daa
outsb
sbb
lcall
ljmp
adc
mov
sbb
popf
lock
aas
es
mov
lock
sarl
jge
or
ljmp
lahf
cmp
mov
lea
mov
jo
cltd
test
lea
cmpl
sbb
popa
movsl
push
or
push
out
or
inc
fwait
arpl
xor
call
popf
icebp
cltd
dec
cmp
add
inc
adc
out
addr16
push
jne
inc
mov
mov
mov
sbb
fwait
cmp
lea
ljmp
jno
testb
mov
aad
rcll
fwait
movsl
adc
fadds
xchg
or
xor
inc
iret
lret
repnz
mov
cli
stos
int
xorl
aas
mov
jg
jmp
mov
or
popf
jne
stos
add
mov
xchg
fsts
mov
and
add
mov
xchg
or
idiv
xchg
mov
ss
pop
lods
adcb
nop
fsts
in
or
mov
popa
mov
enter
xchg
in
in
add
sbb
sti
push
push
lods
ret
jg
mov
sbb
stos
xchg
push
adc
xor
xlat
inc
cli
in
std
push
dec
loopne
jmp
loop
xchg
add
push
mov
sbb
movsl
push
out
cli
aaa
and
add
rorl
mov
testl
mov
cltd
mov
push
inc
adc
notl
jno
test
xchg
jmp
or
adc
sbb
lcall
or
sub
sub
xchg
and
inc
add
inc
jno
mov
mov
shll
int
shll
jecxz
push
or
popf
dec
gs
push
shlb
iret
xor
push
test
rol
rcl
sbb
mov
mov
push
repz
mov
sub
mov
cmp
push
enter
mov
hlt
fstpt
mov
setns
outsl
and
lret
dec
cmpsb
adc
dec
pushf
int3
dec
add
pop
add
ss
add
fnstsw
subl
ljmp
js
jg
iret
movsb
jo
fs
lret
rol
test
mov
scas
jnp
jle
xchg
movsl
pop
pop
sbb
sbb
sub
imull
sti
fisubrs
cli
js
ret
loope
xor
pop
nop
cmpsb
jle
add
push
mov
inc
xor
insl
mov
or
or
cmp
jg
xor
add
pop
imul
rol
std
test
cmpb
dec
lret
pop
or
cltd
sti
in
and
push
jmp
push
mov
popf
sub
mov
pminsw
xchg
outsl
xor
or
insl
jge
cmpsb
enter
lock
dec
aaa
cltd
dec
mov
sbb
or
sahf
pop
adc
pusha
in
xor
xorb
xchg
call
mov
xor
push
xchg
jl
xchg
dec
lods
leave
xchg
fwait
test
jns
pop
cmp
ret
shrl
sbb
not
popa
scas
and
adc
fcomps
loop
ljmp
sbb
sbb
mov
orl
cmpl
lret
call
add
test
lods
mov
jle,pt
mov
call
daa
xor
fistps
lret
push
push
cwtl
and
or
mov
lea
inc
aaa
xchg
cmp
push
lret
fcmovne
nop
cmpl
add
mov
inc
lret
repnz
loope
mov
imul
push
mov
adc
add
xor
mov
xchg
xor
mov
mov
int3
test
sahf
subb
dec
loope
inc
repz
mov
mov
insl
push
nop
dec
push
dec
mov
ljmp
jbe
mov
pop
xchg
jmp
das
aam
sbb
cli
push
ret
rcrl
ds
add
cwtl
push
popf
cld
fimuls
xchg
push
subb
lcall
sbb
push
jbe
rclb
movsb
mov
shll
inc
xchg
in
lods
addr16
call
les
dec
ss
mov
mov
pop
inc
out
push
push
sbb
cmp
cld
jns
adc
cmpl
mov
rorl
push
notl
lock
mov
mov
push
andb
bound
pusha
out
jbe
push
xor
shr
jo
jge
and
xchg
sbb
repnz
loopne
xchg
popf
mov
es
out
pop
mov
inc
in
ret
or
mov
pop
and
cs
shrl
rcll
scas
sub
cld
icebp
cltd
pop
cmp
loope
lock
in
stos
test
jb
push
jle
lds
rorl
jl,pn
pop
lods
insl
adc
sbb
mov
mov
dec
inc
test
sti
add
lods
mov
add
adcl
push
cmp
jo
push
push
fldpi
jnp
sbb
sbb
xchg
lock
and
dec
scas
pop
xchg
xchg
test
in
les
fisttpll
inc
mov
fs
mov
dec
adc
aad
jl
pop
ja
aaa
jl
repz
adc
cmpsl
xchg
int3
push
and
jae
push
out
cmp
gs
mov
xor
std
lds
fstpt
adc
clc
pop
sub
addb
int3
xor
dec
inc
lcall
xchg
sarb
lods
in
mov
jo
sbbb
mov
je
sti
mov
fisttpll
mov
sbb
andl
pop
push
adc
in
jne
dec
pop
push
enter
fs
into
xchg
or
cs
pop
pop
fdivrs
into
pop
mov
add
and
repnz
sbb
mov
fstps
repnz
or
jl
xchg
xlat
jnp
pop
lahf
test
scas
add
dec
xchg
leave
and
pop
scas
out
xlat
inc
insl
lds
jb
sub
ret
mov
cmp
xor
jo
xchg
dec
push
adc
mov
xchg
add
sbb
mov
pop
ret
aad
or
xchg
enter
imul
out
fistps
mov
push
cld
aas
xor
mov
and
mov
mov
sbb
cmc
mov
ret
sbb
icebp
inc
fldt
dec
push
or
mov
data16
adc
in
insb
jecxz
out
cmp
push
lea
push
jnp
push
pop
jns
andb
mov
jle
adc
jb
sub
movsl
or
movsl
movsl
or
dec
clc
jl
sbb
push
adc
mov
push
out
xchg
jo
lret
pop
fistl
sbb
jp
ja
rolb
jp
and
flds
sub
jge
jne
push
pusha
push
pop
dec
and
popf
test
sub
sub
test
xchg
inc
cmp
mov
test
mov
lds
jne
push
dec
dec
xchg
sahf
rcll
adc
jo
sub
push
cmpw
sub
mov
sub
iret
loopne
xchg
loopne
jbe
scas
ss
push
loop
dec
sub
pop
hlt
sbb
jmp
ret
mov
imul
xor
repz
jns
or
pop
xchg
mov
pop
test
adc
jne
push
outsl
push
push
pushf
test
or
push
cmp
or
cmp
adc
pop
cmp
and
inc
daa
data16
ja
mov
xchg
stc
insb
mov
popl
shll
int3
fwait
mov
lea
sbb
jns
in
mov
insl
out
xlat
cltd
xchg
sub
xchg
lahf
aad
pop
sbb
sub
je
ret
inc
mov
lds
or
test
mov
inc
out
test
add
fisttpll
jbe
movsl
lods
jl
jne
push
mov
loop
mov
call
adc
repnz
or
loope
dec
out
js
call
outsb
cwtl
into
mov
sub
or
adc
cmp
cmc
lahf
das
inc
inc
jno
iret
aas
repz
rcrb
rcr
ljmp
pop
fcmovne
adc
dec
or
addb
in
into
mov
inc
popf
in
mov
jge
cmpsb
sbb
pusha
cld
mov
mov
movsb
jmp
cmc
sbb
inc
rcrl
mov
xchg
xor
mov
xchg
iret
pop
inc
and
out
out
jmp
mov
popf
in
stc
fwait
inc
cmp
icebp
mov
jbe
inc
push
sbb
enter
mov
insl
xor
mov
arpl
mov
nop
aam
add
sub
lods
xor
loop
jbe
lea
repz
out
inc
cmp
nop/reserved
mov
test
and
jl
shl
mov
xor
cltd
stos
cmpsb
jl
mov
push
test
lcall
sub
imul
dec
popa
sub
lret
sub
lret
adc
scas
js
mov
jno
and
hlt
mov
pop
inc
sbb
pusha
pop
sub
dec
arpl
or
xlat
movsl
or
int
lahf
orb
jmp
cld
and
mov
mov
mov
in
inc
pop
sub
xor
imul
icebp
mov
push
mov
loope
sbb
mov
mov
and
sub
adc
std
sbb
stc
cmp
and
and
mov
vunpcklps
cwtl
fildll
pop
adc
mov
negl
aaa
vmovntdq
pop
test
sar
xlat
fsubrs
push
addl
icebp
fdivs
push
popf
test
push
inc
ret
adc
pop
pop
stos
pop
push
jb
xlat
pop
pop
mov
sarl
icebp
jge
pop
mov
out
pop
mov
mov
add
insb
adc
or
xor
mov
shrd
in
pop
jge
xchg
fsubrl
inc
jne
mov
or
pop
sbb
xchg
pop
jp
pop
sbb
adcb
or
loope
fs
repz
pusha
mov
or
or
sub
stc
pop
idivl
adc
cmp
call
inc
fsubl
xchg
adc
dec
add
fdivrl
dec
ds
jno
filds
loopne
divl
sub
xchg
add
add
bswap
lret
xor
clc
in
jmp
in
ljmp
fistl
fldt
cmpsb
popl
mov
es
shll
lds
lcall
xor
inc
stos
jge
mov
mov
ljmp
lahf
dec
sbb
jnp
lcall
je
mov
mov
ja
stos
push
imul
sbb
cltd
movsl
mov
and
sbb
shlb
out
orb
insb
sbb
fildl
mov
mov
sbb
jge
mov
mov
loop
jne
leave
add
or
enter
inc
je
xor
xor
add
fdivr
mov
xchg
mov
mov
int3
jecxz
jmp
mov
movups
fadd
and
mov
and
out
pop
out
adc
pop
inc
mov
hlt
push
imul
pusha
xchg
pop
and
lret
pop
sarb
cmp
pop
jno
scas
mov
sbb
jb
pop
fadds
sbb
in
inc
jge
or
test
jge
leave
push
in
stos
out
out
xchg
aad
push
sbb
inc
jnp
scas
das
fstl
xor
outsl
sahf
pusha
test
adc
lret
lret
fistpl
mov
je
push
stos
adc
mov
and
bound
mov
add
outsl
inc
jb
mov
or
adc
xor
enter
push
outsl
test
mov
icebp
pop
repnz
xchg
lcall
ljmp
lods
rol
fisubs
xor
outsl
xchg
sub
xchg
mov
vmwrite
adc
sarl
data16
xlat
xor
mov
push
jge
ja
stc
dec
into
push
ss
push
lret
jg
inc
xchg
xchg
mov
das
inc
js
dec
adc
xchg
xchg
and
notb
js
push
dec
frstor
adcb
dec
test
jecxz
loope
jns
push
imul
cmp
cltd
lock
arpl
jb
loop
mov
loopne,pn
push
inc
cmc
dec
push
rcl
mov
or
ss
cwtl
mov
pop
std
test
mov
imul
mov
aaa
mov
cmpsl
stos
fldenv
and
jg
pusha
cmpsb
push
jno
cmc
mov
dec
sbb
std
imul
std
mov
movsb
jp
mov
icebp
cmpsb
and
mov
push
push
popa
xor
movsb
hlt
jne
std
nop
cmp
push
push
cs
pop
push
adc
mov
daa
push
movsl
inc
outsl
cltd
inc
mov
pop
cs
imul
push
bound
outsl
mov
xchg
stc
jns
mov
call
dec
push
and
pop
push
jle
mov
xor
aas
cmp
mov
hlt
stos
or
test
add
add
adc
jo
pop
les
xchg
cmpsb
xor
mov
or
adc
cmc
into
rep
push
dec
fisubl
xchg
popf
or
je
inc
test
sbb
mov
jb
subl
out
xor
or
fiadds
mov
xchg
cmp
insl
push
scas
adc
push
sbb
negb
mov
fwait
xchg
shr
loope
xor
or
jle
sub
outsb
outsl
iret
ljmp
or
mov
sahf
js
sbb
movsl
pop
pushf
adc
jns
cmp
mov
add
subl
xchg
and
in
hlt
sub
and
pop
lret
sahf
pop
add
xlat
loope
pop
outsl
or
bound
adc
mov
sbb
add
and
sub
and
out
test
fcomi
cli
cmp
mov
incb
mov
xchg
mov
pusha
dec
addr16
pop
mov
dec
dec
popf
adc
ljmp
add
popf
adcl
and
ds
fiaddl
rcrl
subl
xchg
aam
pop
out
jmp
stos
push
xor
jno
faddl
inc
inc
mov
adc
bound
mov
popa
mov
imul
jg
pop
clc
in
pop
adc
pop
lea
and
xor
mov
add
pop
mov
xchg
icebp
ret
jae
js
lret
jb
lock
inc
inc
and
push
jmp
lcall
pop
dec
nop
icebp
dec
pusha
add
add
jp
shl
cmp
leave
xchg
lds
out
mov
icebp
jbe
jp
and
pop
cs
jmp
dec
es
pop
test
frndint
dec
adc
in
jge
cmp
sbb
mov
aam
sti
in
mov
xchg
test
ljmp
inc
mov
jl
shl
mov
es
icebp
sub
dec
sbb
rolb
test
inc
sub
dec
or
leave
ss
lcall
adc
shll
pop
xchg
sbb
cld
jno
cmpsb
sbb
adc
and
in
adc
iret
lock
lea
mov
dec
pop
loope
cmc
imul
mov
jae
mov
jb
sub
pop
inc
cmp
push
push
sbb
mov
aam
fisubrl
call
ds
pop
cwtl
int3
cmp
out
pop
mov
das
fadds
dec
and
sbb
inc
adc
js
ja
pop
push
and
andb
xchg
mov
cmp
inc
mov
out
dec
jne
inc
mov
fsubs
pop
ficompl
and
xchg
jo
or
ret
pop
mov
adc
mov
push
xor
pop
call
xchg
push
cmp
cmp
lcall
xor
mov
cmpsb
xchg
inc
mov
out
mov
xchg
push
rclb
jg
pop
incb
or
cltd
icebp
mov
push
dec
jmp
jmp
pop
lret
dec
jne
push
into
and
cld
cmp
sahf
cmovs
push
push
shl
roll
lcall
push
jae
stc
aas
aas
pop
pop
push
fldt
mov
fldl
imul
subb
jo
cwtl
pushf
lods
xor
xor
loop
lock
push
popa
ljmp
adc
lds
dec
in
daa
jl
or
cltd
push
aad
xor
push
jae
xchg
pusha
cmpsb
sub
lea
cmp
call
rcrl
ja
arpl
fwait
cwtl
push
insb
into
insb
sub
jb
cmp
push
mov
mov
jo
aaa
test
dec
jne
lcall
adc
fwait
add
add
pop
cbtw
sti
outsl
incb
sbb
lahf
int3
out
jl
dec
cld
aam
mov
jp
jb
dec
ficompl
clc
pop
mov
dec
cs
aad
mov
xchg
and
mov
nop
outsb
pushf
adc
cld
jge
pusha
shrl
fisubrl
iret
mov
cwtl
pop
and
sub
outsl
movsb
pop
int
daa
add
cld
mov
outsl
push
mov
xchg
scas
xlat
out
or
imul
or
cmp
mov
insl
fpatan
adc
stos
ljmp
jmp
in
je
in
cmp
pop
inc
stos
add
push
imul
adc
mov
xchg
sbb
jne
fucom
sub
ja
scas
out
addr16
ss
repz
cltd
movsb
je
call
ja
mov
inc
movsb
pop
pop
pop
cmpsl
enter
pop
mov
mov
ljmp
push
mov
push
mov
jne
bound
test
sarl
cmp
or
stc
lea
rclb
imul
mov
xor
imul
movsb
stos
test
insb
in
aam
jg
jp
in
xchg
add
iret
mov
mov
cwtl
jmp
pop
lret
nop
shrl
shll
dec
pop
add
mov
mov
sbbb
xor
cmp
xor
push
js
pop
sar
fnsave
outsl
mov
xor
ds
cltd
mov
andl
dec
in
push
shll
xor
jg
add
xchg
cmc
repnz
add
xchg
pop
inc
aad
mov
add
aam
push
stos
sub
push
inc
hlt
mov
mov
stos
push
dec
or
ret
leave
pop
gs
js
lahf
mov
adc
push
pop
inc
out
rorl
fisttpll
mov
daa
xchg
xchg
or
in
nop
cmp
add
inc
cmp
mov
scas
inc
mov
ficoml
pop
mov
cltd
cmc
pop
dec
mov
xor
int
fdivl
loop
insb
xchg
xor
adc
cmc
sub
cltd
ljmp
jecxz
inc
dec
xor
xchg
flds
mov
stc
mov
fcmovbe
je
jo
mov
jle
inc
mov
dec
jne
ja
popf
sbb
adc
in
into
mov
mov
movsl
and
lods
mov
pop
imul
cs
or
push
add
xchg
loop
jo
movsb
clc
push
mov
sbb
movsl
out
cmp
cmp
sahf
xlat
fsubs
or
ret
jl
out
cmp
pop
push
ja
loop
leave
notb
inc
mov
mov
inc
jmp
xchg
mov
aad
jns
addb
mov
inc
sahf
jg
pop
lock
shll
and
and
jb
mov
jbe
int
sub
int3
das
pop
pop
mov
repnz
xor
aad
cmp
mov
xor
add
into
pop
les
scas
mov
mov
fadds
push
cmp
xor
sbb
xchg
lds
jns,pt
sbb
adc
inc
push
jle
dec
orb
stos
das
lcall
out
fwait
pop
rcll
xchg
or
adc
mov
sbb
mov
js
pop
les
pop
xchg
jle
sbb
pop
xchg
xor
mov
mov
decb
adc
inc
jno
sub
in
or
inc
aad
xlat
inc
data16
dec
jg
jno
push
sahf
adc
pop
jae
daa
int3
cwtl
xchg
movsl
sbb
push
mov
repz
sbb
dec
je
push
mov
fnstcw
addr16
and
jecxz
mov
pop
or
in
dec
std
xchg
dec
jp
int
cmp
aad
mov
sahf
and
stos
and
lods
lods
imul
and
pop
sti
mov
adc
push
sbb
imul
cmp
cltd
or
mov
xor
cmp
mov
mov
and
movsl
sub
ljmp
sbb
mov
adcb
int3
ret
adc
shrl
sub
push
aam
iret
xor
push
mov
test
pop
pop
xor
mov
fidivrl
mov
cmp
xchg
inc
dec
jae
fsubrl
lea
inc
push
jp
imul
clc
fildl
bound
inc
mov
pop
jb
jle
sub
or
out
adc
push
or
mov
xchg
loope
pop
pop
jmp
mov
mov
rolb
mov
inc
daa
loop
shl
insb
and
shr
or
in
negl
iret
cmp
ret
pop
insl
push
xchg
cmp
mov
mov
xchg
mov
fisttpll
lods
xchg
scas
shlb
jbe
hlt
test
mov
or
fxch
lret
mov
mov
je
and
rorl
in
mov
xchg
jae
lods
frstor
lret
jae
outsl
out
mov
iret
mov
int
mov
pop
movsl
addr16
addr16
pop
cwtl
cmp
inc
mov
push
mov
sbb
faddp
mov
xor
pusha
fld
loopne
std
addr16
jb
fisubl
push
jp
adc
inc
aad
ret
sbb
cmp
lock
sarb
mov
dec
mov
call
push
sbbl
repnz
xor
iret
xchg
mov
adc
mov
out
fdivrs
ds
push
xchg
add
stos
mov
pop
ja
xorb
mov
mov
mov
rolb
fdivrs
push
xchg
fsts
scas
data16
xchg
adc
icebp
lcall
lret
mov
pusha
repnz
testb
mov
call
sti
sbb
and
and
popl
sbb
inc
mov
mov
rclb
mov
jmp
data16
add
or
pop
js
xchg
or
les
shlb
rorl
mov
sarl
lock
popf
scas
dec
loop
bound
add
xchg
jmp
je
out
not
mov
adc
mov
cs
cmc
outsl
data16
out
sub
aaa
add
call
or
push
mov
inc
sbb
cmp
sbb
stos
or
mov
pop
adc
lea
stc
mov
mov
stc
ret
mov
hlt
add
pop
xchg
and
push
mov
ret
mov
pop
out
and
or
lods
lret
in
jmp
inc
pop
scas
frstor
and
add
inc
imul
mov
cmp
sbb
add
xchg
aam
mov
insl
ret
scas
cmpsb
mov
cltd
dec
ficompl
das
das
leave
push
scas
jb
cwtl
dec
adc
hlt
jl
int
std
jecxz
jecxz
mov
jl
jle
pop
mov
jae
cmp
fwait
sbb
push
mov
inc
and
mov
shrl
leave
push
jecxz
add
inc
cmp
cmp
call
xchg
xor
mov
dec
sti
lods
or
push
mov
test
leave
push
repnz
inc
pushf
stc
adcl
mov
mov
mov
lods
cmp
iret
mov
lds
xchg
pop
cld
cli
sub
fisttpll
sbb
push
dec
jbe
mov
aam
mov
bound
push
mov
jecxz
ror
popf
mov
cmp
mov
in
out
mov
ss
adc
or
and
shll
jmp
sub
and
or
xchg
xchg
lret
and
dec
hlt
mov
push
mov
adc
popf
mov
pop
call
nop
sbbl
scas
ret
insb
addl
or
addl
mov
loopne
jo
inc
jge
sahf
lock
push
pop
shrl
pop
cmp
push
and
cli
cld
daa
jle
leave
movsb
in
or
stos
incb
dec
je
pop
rcll
xchg
repz
mov
in
xchg
enter
aas
push
inc
pop
sub
repz
movsl
pusha
xchg
jmp
push
pusha
pop
mov
mov
stos
push
cld
test
and
inc
movsl
nop
push
scas
push
or
dec
insl
add
imul
mov
or
cld
and
in
lcall
lods
add
or
dec
lret
sub
daa
push
or
fistl
pop
xchg
icebp
in
sahf
data16
xor
mov
pop
jmp
mov
add
jmp
lock
inc
pop
repz
enter
dec
test
ljmp
pop
pop
pop
sub
cltd
lods
aas
sub
jg
mov
in
daa
movsl
in
mov
cmpsb
in
insb
mov
icebp
push
add
lods
test
test
push
inc
sub
push
xchg
inc
roll
aad
lahf
lods
jnp
mov
jmp
push
lock
pop
int
test
pusha
push
scas
sbb
fisubrl
mov
mulb
data16
gs
adc
dec
mov
mov
cli
ret
mov
and
out
testl
cmp
pop
add
or
pop
inc
imul
popa
test
xchg
arpl
xor
pop
xor
push
inc
scas
xchg
in
fsubs
or
jle
xchg
in
add
dec
cmp
sbb
jle
leave
push
repnz
cmp
scas
aam
addr16
sahf
pop
and
dec
push
outsl
rorb
and
or
sbb
dec
mov
pushf
cltd
sub
aaa
fsubl
mov
std
sub
push
loopne
cmc
cltd
imul
inc
push
add
mov
cmp
stc
in
enter
cwtl
lods
mov
mov
or
in
aaa
cli
add
cmc
push
pop
xchg
pop
lcall
bound
xchg
and
addl
or
push
shll
ficoms
xchg
outsl
dec
sbb
pop
aad
jge
jne
mov
sbb
clc
jbe
ficoms
rcrl
daa
outsb
cmc
stos
js
sub
insl
add
mov
int
sahf
nop
mov
fwait
jle
in
jmp
fwait
xchg
push
add
outsl
xor
mov
inc
fiadds
fwait
mov
cltd
sti
cs
jge
stos
jge
pop
mov
add
or
push
jo
jle
cmp
push
push
xchg
adc
addr16
outsl
mov
dec
xchg
test
je
mov
mov
pop
rsm
sub
sti
push
ja
mov
negl
push
insl
jbe
xchg
push
xchg
insl
pop
rcll
mov
and
ret
mov
mov
sub
sar
sbb
push
test
icebp
pushf
cmc
or
pop
xor
adc
xchg
push
add
sub
hlt
pop
gs
pop
fistl
mov
xor
or
aas
shll
jmp
jnp
cmp
test
and
fnstsw
arpl
xchg
fs
loopne
insb
mov
and
mov
xchg
jne
push
pop
dec
repz
popa
arpl
add
inc
rcrl
add
pop
test
sti
fidivrl
insb
addr16
lds
and
repnz
jl
arpl
imul
insb
pop
cmp
fidivrl
or
repz
imull
xlat
in
xchg
inc
jmp
xchg
mov
or
aaa
dec
test
hlt
or
inc
test
aaa
loop
jne
je
loope
leave
push
int
jno
sub
sub
push
push
add
gs
cld
mov
aaa
out
and
push
rorl
xchg
add
lcall
cmc
push
cmp
or
push
jle
sti
mov
sub
or
js
insl
and
stc
int
sub
and
jge
inc
movsl
hlt
out
jle
adc
jo
subb
fidivrs
bound
data16
mov
and
out
mov
jmp
cmc
movsb
xchg
aas
inc
or
push
popa
lcall
out
cmp
ljmp
fs
mov
jbe
xchg
imul
dec
inc
idiv
cmp
mov
add
cmpl
xchg
sub
or
test
jae
mov
daa
aaa
jg
pop
mov
out
clc
add
mov
inc
ss
punpckldq
fistpll
faddl
pop
test
inc
clc
mov
arpl
mov
icebp
xchg
mov
mov
xchg
inc
sbb
cmp
add
mov
lds
dec
or
push
add
xlat
stc
mov
mov
and
out
iret
jne
gs
xlat
sbb
xor
fnstcw
or
sarb
jcxz
dec
jbe
lea
cmp
aam
mov
mov
dec
push
add
das
mov
inc
inc
mov
cmp
rcr
inc
dec
jmp
adc
lods
mov
jbe
xchg
sbb
int
loopne
cmp
repz
gs
pop
rcrb
test
mov
leave
add
xchg
sbb
xchg
lods
inc
pop
mov
adc
mov
push
rcll
xor
lret
jb
fwait
and
mov
pop
inc
cmp
cmpl
sbb
insl
jns
sbb
dec
or
lret
xchg
imul
movsl
push
mov
sarl
add
outsb
sahf
insl
test
fwait
std
lea
sar
fidivrl
mov
mov
in
dec
fnsetpm(287
add
imul
repz
daa
cmp
dec
push
movsb
xchg
pop
das
fisubs
fstpt
sbb
add
addr16
push
adc
mov
ss
sub
jae
cwtl
stc
dec
lret
out
xchg
jbe
cli
movsw
cli
dec
push
enter
lahf
nop
mov
cli
sub
lcall
inc
in
dec
out
push
call
out
xchg
ds
cmp
mov
int3
adc
add
stc
sub
data16
cmpsb
add
cmpsl
jae
sbb
push
inc
adc
insb
sbb
sbb
push
loopne
stos
pop
cld
cmp
xor
movsl
mov
iret
pop
pop
cmp
mov
pop
popf
push
mov
mov
mov
add
cmp
insl
inc
popa
ja
les
xchg
cmpsb
addr16
pop
movsl
push
sbb
out
xchg
cs
outsl
push
mov
jb
test
adc
lahf
push
pop
and
mov
cmp
or
push
sbb
inc
mov
xor
jo
pop
ret
std
jp
das
pushf
imull
adc
inc
or
pop
rol
pop
dec
pop
ret
int3
lret
fs
push
jg
pop
mov
jae
scas
in
das
fsin
xor
les
xor
pop
and
push
push
inc
fisubl
popl
sarl
mov
lcall
imul
mov
jne
mov
mov
fldl
in
xadd
jmp
std
sbbb
leave
fiadds
or
jmp
inc
mov
push
mov
jp
add
enter
push
jg
outsb
cmp
pop
lret
inc
mov
mov
dec
inc
jge
dec
pop
and
adc
push
sub
rep
inc
aad
sarl
pop
mov
bound
sub
sub
add
xor
add
or
pushf
fdivl
insb
mov
add
ret
mov
cmp
sarb
stos
xor
rcrb
and
push
stos
pop
pop
cmp
mov
xchg
sub
fisttpll
daa
mov
xor
ljmp
and
jns
out
lea
jle
sub
dec
out
push
mov
lds
aam
sub
cmpsb
test
mov
inc
pop
mov
fisubrl
lock
in
js
das
cmp
mov
or
iret
and
out
out
dec
jnp
pop
sarl
fisttps
popf
mov
pop
or
lcall
orl
and
push
xor
cmp
mov
cmp
rsqrtps
out
inc
mov
mov
movlhps
imul
aad
loope
cmpsl
fisubl
ret
push
mov
int3
lock
inc
xor
daa
push
out
mov
xchg
popl
out
cwtl
mov
and
shl
and
push
in
mov
mov
pushf
push
mov
push
cmp
xchg
mov
cmp
aaa
mov
arpl
push
jne
xchg
dec
jns
mov
dec
mov
dec
and
jae
movsb
stos
subl
test
aas
jmp
in
add
iret
inc
cmp
xlat
cwtl
dec
xor
dec
fs
icebp
xlat
scas
xchg
lds
jecxz
xor
fcomip
add
lss
pop
fnstsw
lret
loopne
rol
and
je
insl
xchg
bound
inc
repnz
cs
stos
push
sub
jecxz
fisttps
xorl
repz
cwtl
aas
xor
cli
out
sbb
lahf
cs
ljmp
pop
jmp
jl
loop
push
lcall
xlat
and
and
in
push
je
sub
mov
jle
shrb
jg
jecxz
js
fisttpll
and
int
jb
insb
imul
xor
add
lcall
addl
xchg
test
xchg
xor
jmp
test
idivb
cmp
insb
repz
mov
xchg
add
adc
add
pusha
push
adc
xlat
ja
pop
in
es
insb
movsb
mov
cwtl
cmp
sbb
jp
addl
ds
fcoms
aam
cwtl
scas
push
sbb
loope
out
scas
pop
sahf
out
imul
jae
sahf
iret
loope
outsb
scas
cs
jge
and
push
pop
jl
add
outsb
dec
das
pusha
dec
fists
mov
popl
pop
fwait
in
sahf
cld
in
adc
cmp
into
fisttpll
cmp
and
addb
and
sub
stos
fsubs
mov
add
dec
loopne
ret
js
cld
insl
aas
cwtl
jnp
sub
mov
inc
lea
loopne
pop
cmc
mov
mov
xchg
add
mov
xchg
lock
inc
aaa
in
xor
dec
cmp
pop
das
mov
repnz
xchg
pop
and
das
insb
popa
mov
or
lahf
xor
inc
push
ret
xor
rorl
and
daa
lea
push
push
fdivrp
dec
inc
jns
xchg
out
out
jl
xor
xlat
mov
and
shll
fs
ret
add
cmpw
and
mov
leave
add
mov
and
xor
push
mov
gs
call
jge
dec
cmc
mov
sahf
xor
call
pop
scas
cmc
push
mov
push
and
mov
or
sahf
sub
fnstcw
inc
sub
inc
fldt
inc
lock
or
add
popa
sub
icebp
add
mov
pop
or
ficoms
rcrb
rclb
mov
cld
test
lahf
jle
rcll
pop
mov
outsb
mov
and
inc
add
fsts
in
lret
jae
dec
xor
lods
vsqrtpd
je
jbe
inc
add
fildll
sub
jae
cli
scas
in
sti
adc
loopne
sub
fists
xchg
mull
push
mov
push
mov
cmp
push
in
and
insb
pop
push
or
and
inc
dec
ret
icebp
test
in
notb
and
cmpsb
pop
int3
xor
pushf
mov
sti
stos
cmp
cmovg
xor
in
data16
xchg
add
mov
xchg
cmpsb
adc
and
ret
mov
inc
imul
rclb
lret
sbb
enter
xchg
dec
dec
in
xchg
sarb
dec
mov
lcall
adc
jmp
movsb
popf
lgs
and
xchg
sub
int3
fists
and
sub
lahf
xchg
xor
aas
in
aas
stos
sub
data16
push
or
sub
xor
outsl
int3
aas
mov
fs
dec
xchg
je
lods
std
data16
rcrb
fsubs
jecxz
les
repz
jle
or
pop
aaa
ja
lds
mov
and
cmpsl
cmp
imul
pop
lret
pop
lcall
loopne
pop
adc
enter
dec
mov
add
jmp
mov
flds
aam
sub
icebp
mov
or
leave
and
inc
jbe
jae
inc
add
icebp
push
adc
push
out
std
hlt
les
arpl
rclb
xor
adc
push
xor
add
jno
ss
adc
cli
lods
adc
sbb
jle
sub
cmp
push
xor
mov
aam
inc
test
bound
fdiv
mov
xor
inc
pop
inc
pop
push
nop
add
incb
out
cmpsb
mov
test
or
jns
sub
mov
push
out
fs
dec
push
xchg
add
mov
test
mov
out
xor
cwtl
and
cwtl
xor
adc
mov
popa
jl
lods
push
call
pop
out
aad
pop
jo
lods
cltd
xor
gs
cmp
pop
mov
push
mov
add
dec
push
or
xor
dec
pop
adc
je
mov
test
add
imull
xlat
push
and
loop
inc
je
cs
hlt
out
cmp
cmc
imulb
rclb
jne
or
jnp
ds
dec
call
push
js
xor
xchg
mov
out
push
js
cli
xor
sbb
jno
outsb
rclb
int
shrb
xchg
sub
jnp
cmc
mov
loopne
adc
mov
adc
in
inc
pop
sbb
add
gs
das
mov
dec
aad
push
scas
dec
mov
jmp
sub
cld
pop
sub
in
jecxz
mov
xchg
xor
imul
hlt
roll
ljmp
jle
dec
int
int3
jmp
fsubs
pop
fsubr
aad
sub
clc
mov
inc
or
jns
cmp
add
and
out
xchg
push
jg
lret
scas
adc
mov
mov
sbb
pop
pop
jl
mov
insb
test
aaa
outsl
xchg
push
sbb
out
push
sar
mov
and
add
lods
mov
insb
je
sub
js
or
add
jge
lods
insl
mov
lock
movsl
popf
lret
push
les
movsl
test
add
xchg
push
mov
daa
adc
jge
mov
pop
dec
push
adc
cld
insl
pop
mov
jp
mov
adc
andl
cli
sub
repz
lods
add
sarb
idiv
push
sbbb
aad
inc
test
or
lods
int3
lret
dec
aam
adcb
add
scas
jl
lcall
xchg
mov
das
dec
push
enter
call
scas
mov
xchg
push
or
sub
pop
cmpsb
or
lods
bound
lods
scas
cmc
das
roll
int
lods
pop
sbb
or
pushf
push
iret
cli
pop
dec
imul
das
idivl
mov
inc
add
iret
push
sub
mov
mov
sbb
sbb
and
fadds
int
hlt
ret
ja
lret
xchg
jb
lods
fcompl
sub
scas
add
xchg
lock
xchg
inc
insl
stos
stc
fmull
push
xchg
inc
mov
mov
stos
mov
pop
pop
lret
pushf
sub
and
xor
mov
dec
xlat
js
jo
out
frstor
call
sub
std
fsubrp
lret
int3
adc
sar
cld
add
loopne
xchg
insb
push
cmpps
xor
in
pop
insl
or
or
adc
jp
push
ja
sub
xchg
jecxz
ss
pop
das
xor
push
sbb
jnp
xchg
repz
cmp
out
xchg
dec
jle
inc
mov
push
aaa
dec
fwait
sbb
mov
nop
lret
lcall
and
scas
ljmp
xchg
mov
xor
mov
cmp
mov
out
sub
inc
call
cltd
jno
push
adc
add
cmp
pop
in
xchg
push
jle
adc
inc
test
cmp
lcall
pop
mov
loop
cld
push
mov
sub
xchg
sbb
mov
xchg
mov
in
ljmp
xlat
push
pop
dec
adc
jnp
inc
mov
jl
mov
es
adc
aam
add
test
pusha
sub
lock
or
mov
pusha
adc
imul
push
adc
test
push
push
sub
mov
push
or
insb
cmp
decb
jp
inc
bnd
cmp
outsb
xchg
outsl
pushf
cmp
jg
mov
and
dec
mov
in
push
adc
fwait
in
xchg
mov
mov
cmc
aaa
aam
addb
xchg
outsl
subb
pop
in
xor
add
ss
enter
out
xor
fcomps
push
int
dec
jbe
jecxz
jp
mov
dec
xchg
push
sbb
add
lods
nop
test
cld
xchg
push
push
xchg
push
mov
push
out
mov
rorl
jo
dec
mov
insl
scas
cmpsb
bound
cld
fcmovb
push
nop
pop
mov
add
shrb
jg
jge
outsl
out
mov
pop
mov
mov
mov
cmp
aad
sub
loope
es
mov
fs
inc
push
jnp
or
cmp
cltd
mov
mov
inc
fisubl
add
test
pop
lods
cmp
mov
out
xchg
xchg
popa
mov
mov
sbb
xchg
or
out
dec
mov
arpl
pop
stos
pop
push
jb
imul
mov
lret
rcr
lods
sub
int3
je
xor
imul
cmp
addl
sbb
pusha
dec
jno
aaa
enter
loope
mov
mov
fdivr
outsl
xchg
sub
cmp
mov
outsl
dec
in
sbb
push
cli
add
ja
mov
sarl
push
inc
jecxz
pop
and
push
pop
adc
not
and
add
outsl
fistpll
adc
into
dec
sbb
adc
fwait
mov
mov
xchg
pop
mov
fnstenv
and
xchg
mov
testb
mov
test
jg
push
mov
rcrl
lret
mov
lahf
in
bound
sbb
stos
arpl
xchg
fmuls
mov
dec
cmp
pop
scas
jnp
xchg
and
xlat
sbb
or
xchg
sbb
outsl
or
and
sub
or
mov
hlt
nop
adc
adc
aas
or
int
cmp
shrl
hlt
xor
sbb
push
or
push
or
int3
dec
add
jbe
jbe
or
lcall
push
sbb
adc
loopne
aad
fildl
lock
lret
bndstx
xchg
xchg
sbb
inc
sbb
jno
jno
aaa
jns
xor
insl
cmpsw
and
xlat
subb
or
xchg
dec
popa
cmp
ret
cmp
pusha
ror
and
loope
les
cmp
xor
stos
sub
xchg
jnp
sub
cmp
fistl
push
cmc
loop
test
jae
popf
int3
inc
pushf
mov
add
imulb
push
or
jp
adc
cmp
das
cmp
std
test
in
vunpckhps
xor
iret
cmp
aad
lcall
mov
sub
test
push
pop
imul
sbb
mov
jmp
mov
negb
fucomi
and
mov
cmp
fsubrl
subl
dec
jecxz
dec
fs
pop
sbb
xchg
mov
test
out
mov
icebp
ret
mov
insb
cmpsb
daa
jecxz
test
push
fistps
inc
sub
sub
popf
sub
shrl
out
add
push
mov
inc
push
push
stos
cmc
jmp
or
rcrl
jne
jp
cwtl
lods
pop
fisubrs
jg
pop
pop
xor
jne
out
inc
mov
in
and
lcall
into
push
push
outsb
add
xchg
lds
hlt
jno
xor
dec
ss
adc
imul
push
cs
mov
jp
adc
dec
xor
je
jg
cmp
add
push
ret
push
mov
shll
out
jns
call
add
fwait
mov
mov
inc
into
dec
out
pop
xchg
mov
mov
fcompp
stc
mov
adc
sbb
xchg
fstpt
jecxz
xchg
cmpsb
and
fldenv
test
dec
mov
fnstsw
or
mov
pushf
jge
push
cmp
push
xchg
push
out
pop
sti
das
and
push
jno
loope
enter
inc
sbb
fiaddl
out
test
mov
and
jle
pusha
insb
popl
loopne
mov
mov
stos
mov
or
pop
mov
lcall
cmpsl
pop
lock
int
xor
cmp
mov
dec
les
push
pop
cmp
bound
jno
dec
addb
scas
insl
jb
loopne
cmp
dec
test
shr
scas
push
mov
stc
arpl
popa
mov
jne
das
mov
mov
fwait
add
sbb
popa
test
add
or
or
jmp
pop
in
aam
pop
sbb
mov
lret
sub
andb
or
in
lea
pop
aas
orb
xor
js
movsb
lret
repnz
lcall
popa
rorb
dec
test
xchg
push
sub
adc
hlt
lcall
inc
lret
repz
ljmp
xor
ret
push
fcomp
push
xchg
sarb
or
push
cmpsb
ljmp
arpl
gs
cmpb
std
cwtl
nop
imul
les
pop
frstor
arpl
imul
xchg
imull
add
idivl
push
jb
mov
mov
dec
xlat
xchg
mov
cld
call
dec
sub
sbb
adc
sub
pop
arpl
pop
xor
movsb
sub
pop
cmp
test
jbe
mov
jno
mov
les
inc
dec
pop
repz
jo
sbb
mov
push
adc
stc
inc
mov
xchg
movsl
stos
and
iret
test
stos
hlt
pop
lret
dec
and
mov
dec
out
push
les
in
jp
jne
cmp
pop
insb
mov
or
jecxz
add
xchg
faddl
stc
pop
icebp
out
enter
push
push
and
into
or
adc
dec
scas
ret
movsb
xor
idivb
push
test
cmpsb
loopne
stc
inc
bnd
jns
jge
imul
jg
ja
in
mov
pop
pop
int
shll
cmpsb
mov
cmpsb
or
xchg
mov
lock
mov
mov
fwait
stos
push
push
push
scas
aad
xchg
push
inc
push
fld
jne
das
cmpsl
lea
mov
xor
popf
test
push
inc
jns
rcrb
call
lahf
pop
pop
jb
or
mov
xor
inc
stc
shll
inc
xchg
push
jno
fimuls
and
cmp
mov
add
out
aam
cltd
rcll
inc
mov
fisttpll
popa
test
in
orb
dec
pop
jns
lahf
subb
sub
mov
outsl
adc
cs
loop
adc
cmp
jb
pop
jno
pop
ficomps
sub
icebp
fcoml
ljmp
movb
rcrb
fdivrs
fstl
or
lret
add
or
fsubrl
js
inc
outsb
pop
sub
out
pop
cmpsb
sub
loop
or
jg
xlat
jo
inc
add
jge
mov
lret
push
cmp
or
test
sub
xchg
cmp
rclb
fcoml
or
test
aad
fdivs
or
gs
loopne
loopne
popa
jg
pop
in
and
xor
push
lea
movsl
fwait
push
in
ret
and
faddl
ljmp
push
cmc
jbe
jge
and
jg
fsubp
jp
gs
int
fs
xchg
mov
stos
pop
and
sahf
jns
scas
mov
jo
adc
xor
inc
push
adc
int
aaa
or
xor
pusha
pop
imul
pop
add
test
sub
shl
repz
mov
jae
xchg
mov
cltd
mov
testb
push
or
pop
xor
arpl
out
popf
std
jmp
int3
shll
mov
test
stos
test
in
push
mov
jnp
aam
ret
andl
mov
dec
popa
inc
add
jno
loope
jb
loop
xor
js
sbb
xor
inc
lock
das
adcb
gs
push
int3
aas
cltd
jp
add
out
and
jno
jb
adc
cmp
add
inc
inc
jge
dec
cmp
ret
xchg
stos
movsl
push
fiaddl
and
mov
sub
inc
lahf
pop
jne
xchg
roll
daa
push
out
adc
sub
sub
pop
add
pop
jb
push
sar
jbe
mov
sbb
xor
mov
aam
or
rcll
mov
and
lea
mov
inc
sahf
xor
jbe
into
add
dec
adc
or
ljmp
fsubr
jp
test
or
cld
cmp
repz
and
fildl
int
loope
xchg
es
jp
push
pop
or
mov
mov
xlat
fnsave
cltd
leave
pop
repz
popa
aam
bound
or
jle
pop
lods
pop
mov
std
xchg
mov
js
mov
dec
push
add
incl
fldt
mov
xchg
mul
sbb
shlb
sbb
dec
or
xor
xor
xchg
inc
cld
lcall
mov
imul
ds
aam
adc
fisttps
fcmovnb
mov
arpl
mov
dec
in
dec
inc
lea
mov
xchg
gs
aaa
sbb
int
xchg
cmp
je
mov
popa
xlat
scas
adc
ja
cli
rclb
fdivl
lods
adc
outsb
adc
jg
push
int3
push
lcall
out
arpl
mov
roll
repz
dec
pop
std
mov
les
sarl
mov
out
lods
icebp
xchg
mov
addr16
push
pusha
push
pop
xor
cmp
xor
pop
repz
sbb
mov
inc
je
cli
mov
pop
sbb
xorb
scas
mov
addl
cld
ret
mov
das
dec
add
data16
insl
sbb
cmp
aam
loopne
and
fdiv
dec
fwait
icebp
pop
or
xor
and
adc
inc
movsl
in
into
stc
fisubl
in
mov
roll
pop
ja
dec
xchg
negb
movsl
pop
test
xchg
mov
lret
pop
sub
xchg
xchg
popa
lahf
enter
stos
mov
ja
iret
sbb
mov
xchg
stos
iret
inc
loope
stos
daa
loope
outsb
roll
adc
add
sub
in
movsb
pop
filds
test
and
inc
xchg
fdivr
lds
cli
xchg
daa
jecxz
cs
aaa
fsubp
pop
add
and
int
mov
mov
sub
mov
sbb
lods
sbb
adc
xor
cli
das
jecxz
and
test
or
adc
test
sub
push
pop
testb
movsb
jo
lret
mov
hlt
or
sub
es
add
out
push
inc
sarl
adc
lods
test
mov
lret
psubsb
mov
repz
push
mov
andl
add
inc
push
add
into
mov
fucomip
inc
andl
mov
ds
pop
lods
popf
movb
pop
xchg
fwait
dec
loop
mov
or
dec
insl
xlat
fmuls
jl
ljmp
dec
push
lock
inc
sub
mov
push
sub
jne
data16
negl
insl
adc
sahf
lds
xor
xor
mov
imul
and
cmp
cmp
in
out
notb
jl
push
mov
outsl
mov
push
mov
xor
mov
in
clc
and
testl
int3
lods
lea
xor
or
mov
pop
int3
cmp
mov
jl
enter
in
xchg
into
add
popl
stc
popf
fbld
xlat
cld
inc
jo
pop
fsts
inc
mov
dec
jg
and
xlat
pop
mov
ss
xor
push
je
cltd
sbb
ljmp
jns
sbb
inc
imul
or
xchg
test
xchg
add
ret
adcb
xor
pop
insl
lret
add
call
or
and
mov
cs
push
stc
lock
popf
dec
dec
mov
jmp
rcl
subb
sbb
inc
xorl
xchg
shll
dec
jno
aam
jecxz
popf
shr
aas
lret
ficomps
jno
inc
xchg
or
insl
add
pop
icebp
xlat
or
push
rol
pop
mov
inc
aad
lcall
adc
fldcw
pop
mov
clc
inc
adc
lods
incb
testb
repz
xor
pop
lcall
xchg
into
jp
lods
loop
push
lods
out
mov
cmp
dec
mov
mull
xor
cmp
pop
stc
pop
in
stos
jg
lahf
fisttpl
iret
dec
clc
test
mov
das
dec
adcl
and
test
xor
outsl
sbb
adc
xor
mov
sbb
xlat
xchg
pop
fwait
pusha
inc
mov
push
adc
push
mov
popf
loopne
mov
pop
lahf
fidivrs
push
push
cmp
mov
cli
dec
pop
dec
imul
sbb
fcmovnbe
call
bound
sub
pop
ret
lcall
cmpsl
xor
inc
test
xor
jecxz
das
add
xor
xor
out
das
scas
flds
xchg
out
xor
jle
adc
neg
xchg
mov
enter
dec
outsb
fwait
cltd
leave
xchg
call
jbe
xor
and
adc
mov
jnp
jbe
push
jecxz
dec
sbb
arpl
sbb
aam
cs
aaa
stos
std
xor
insl
fmuls
inc
pop
in
mov
aas
sbb
sub
mov
fwait
rcr
in
shlb
or
jp
push
xchg
mov
pop
pop
jp
cmp
dec
mov
test
mov
push
cli
and
jae
pop
push
push
push
inc
leave
jecxz
test
dec
out
mov
adcl
push
adc
pop
jmp
xchg
cld
sub
pop
into
pop
cmp
loop
xchg
rcll
movsb
pop
sbb
sbb
int
xor
or
cltd
push
mov
mov
imul
iret
jnp
into
test
sbbb
add
jmp
pop
rolb
lea
or
lock
cmp
psllw
lea
enter
push
dec
sub
or
or
and
or
jmp
push
inc
add
stos
dec
les
cmpsl
xchg
aaa
sbb
sbb
dec
mov
sbb
jb
mov
cmp
cwtl
sbb
mov
jp
mov
sbb
pusha
test
jae
and
enter
es
int3
push
fmull
push
aas
sbb
inc
sbb
dec
call
jne
outsl
or
cmp
movsl
adc
pop
mov
ds
outsb
jo
in
dec
xchg
inc
push
mov
push
scas
popf
mov
or
push
sub
xchg
dec
jo
pop
int3
pop
lds
sbb
xlat
les
sbb
and
rcrb
mov
adc
xchg
sub
fadds
and
inc
mov
imul
and
jg
sbbb
sahf
out
sub
push
mov
popa
push
sub
je
repnz
cltd
jge
lea
push
push
int
lock
mov
stos
mov
mov
or
or
sbb
lcall
adc
add
push
ret
fwait
mov
ret
mov
mov
insl
pusha
jmp
popa
pop
out
data16
lods
inc
scas
xchg
pop
push
mov
adc
inc
xorl
pop
out
mov
inc
js
mov
pop
or
xchg
inc
in
or
shll
xchg
xchg
xlat
sti
mov
pushf
xchg
lret
fnstsw
adc
dec
fildl
mov
jge
enter
aad
push
dec
sbb
push
dec
mov
add
sbb
sub
fs
gs
int
dec
fs
test
xor
push
sbb
sbb
xor
dec
mov
leave
pop
outsl
jl
inc
fs
cltd
sti
in
mov
out
sbb
rol
fcoml
pushf
lods
mov
and
ret
fwait
xchg
xor
or
adcb
pop
sub
loop
fs
ja
add
dec
xchg
dec
xchg
aaa
mov
adc
loopne
dec
fldl
outsb
addr16
mov
mov
pop
insl
push
in
push
push
ja
sub
mov
rcrl
cmpb
dec
popa
pop
or
mov
jb
enter
lods
iret
int3
roll
clc
jbe
lret
outsb
lock
push
nop
xor
adcl
mov
mov
push
repz
mov
out
mov
jp
xor
adc
jmp
pusha
xlat
jecxz
lcall
sbb
lock
sbb
fidivrs
inc
imul
push
add
mov
mov
scas
sbb
lret
int3
xchg
mov
xchg
ds
mov
clc
push
and
add
les
pop
movsl
xor
sbb
pop
and
cmpsb
ja
aam
test
inc
mov
lret
enter
adcl
sub
call
lahf
rcl
mov
xchg
pop
popf
push
pop
mov
dec
mov
adc
test
fsubrs
xchg
push
and
add
sbb
iret
push
lret
mov
dec
pushf
push
fisttpl
dec
jge
ljmp
pop
and
movsl
fs
movsl
gs
pop
out
lahf
mov
and
jnp
mov
dec
rcrl
cli
push
push
cmc
xchg
xor
cmpsl
lods
push
cld
and
xor
les
inc
jecxz
xor
inc
scas
shlb
jb
push
dec
ja
pop
stos
outsl
sti
push
jp
cmp
imul
mov
cmpsl
clc
arpl
dec
cmp
jge
std
or
inc
outsb
mov
incb
cmpsl
xor
inc
and
dec
lcall
adc
ror
lods
inc
divb
push
pop
pop
mov
and
rcrb
sbb
pop
aad
fidivs
mov
mov
adc
mov
xor
aam
into
sbb
jns
pop
je
outsl
sbb
les
scas
push
jmp
ficompl
lcall
mov
inc
fildl
gs
rolb
jmp
nop
add
out
inc
mov
pop
dec
les
jmp
adc
and
add
inc
push
pop
mov
jae
jg
mov
jg
in
xchg
pop
dec
and
sbb
xchg
insl
pop
mov
jbe
sbb
lret
jmp
add
inc
loop
adc
out
repnz
xchg
mov
and
jne
cmp
push
les
ljmp
sbb
arpl
lods
and
mov
dec
xor
mov
roll
fdiv
inc
cli
mov
and
add
out
add
rorb
sti
pusha
aam
adc
mov
cmp
hlt
inc
pusha
jmp
jl
pop
push
push
pusha
mov
sub
xchg
add
mov
rcrb
jmp
dec
mul
les
mov
ss
pop
mov
in
mov
adc
push
data16
in
hlt
and
das
fwait
leave
adc
jmp
jmp
pop
inc
es
pusha
mov
loopne
pop
icebp
test
inc
std
les
cmp
pop
enter
push
inc
jbe
sahf
and
xchg
sbb
adc
pop
dec
mov
scas
inc
loopne
push
rcrl
push
and
leave
insb
jo
addl
and
inc
iret
push
cli
insb
sub
int3
push
int
imul
fldcw
inc
dec
mov
and
push
pop
jmp
cmpsb
pop
jmp
push
mov
dec
cli
outsl
xor
sbb
scas
mov
subl
rolb
xor
sub
or
ja
inc
gs
lock
inc
insl
xorl
jb
push
and
cwtl
insl
add
dec
pop
mov
sbb
push
leave
test
or
daa
xchg
inc
sub
hlt
push
or
xor
mov
sub
adc
xlat
push
lret
inc
dec
push
sbb
push
test
cmp
scas
adc
movsb
in
movb
push
sub
bound
lea
sub
push
xchg
cmp
cmp
cwtl
rorl
mov
gs
stos
jle
rdmsr
cmp
adc
xlat
adc
inc
enter
jp
scas
push
outsl
sahf
mov
repnz
add
adc
loop
cmp
cmp
lods
sbb
sbb
in
in
and
pslld
push
repnz
out
aas
xchg
nop
mov
jmp
into
sub
ficoml
fldenv
inc
arpl
cltd
add
sbb
int
adc
iret
cld
jae
sub
enter
out
sahf
and
xchg
pop
rcrb
mov
sub
pop
test
inc
push
mov
push
pop
pop
sar
sbb
xchg
inc
lahf
rcr
pop
xor
pop
mov
std
lahf
lods
mov
cmp
aaa
test
bnd
push
mov
or
pop
and
repnz
push
adc
loope
pop
sarb
push
push
test
or
adc
pop
inc
sub
cwtl
or
push
mov
clc
in
std
sbb
outsl
and
mov
and
hlt
icebp
mov
repz
or
and
add
xor
mov
mov
add
pop
call
push
into
jb
and
dec
push
jne
push
mov
cmp
push
mov
mov
mov
push
out
mov
ficompl
mov
mov
mov
outsb
fdivp
pusha
inc
xor
xchg
and
cmp
scas
sbb
push
out
adc
inc
cmpsl
cli
divb
mov
sub
mov
sub
inc
arpl
lea
data16
jo
jg
and
xchg
push
fwait
gs
xor
pop
cmpsl
insl
sub
fwait
dec
or
or
addr16
xchg
aam
je
sub
xlat
cmp
add
adc
fsubrs
inc
mov
das
jne
jp
push
sahf
mov
cmpsb
sahf
stos
pop
adc
add
and
inc
cmp
loope
fcomi
mov
pop
adc
or
xchg
je
jge
lds
das
jle
jne
adc
or
cmc
mov
mov
stc
jl
sub
lret
cmc
fcomip
inc
hlt
xchg
pop
movsb
adc
int3
rcrl
push
add
add
addr16
icebp
add
in
pop
xchg
shl
into
add
out
or
lock
nop
or
dec
jne
xchg
xchg
pslld
xchg
aas
cmp
lret
fdivrp
les
adc
movsb
clc
cmp
ret
sbb
gs
sti
rorb
cmpsl
shrl
xor
cmpl
inc
aad
cli
xchg
ret
push
leave
mov
pop
maxps
mov
popa
pop
jge
jmp
test
jnp
and
inc
cld
dec
push
inc
jl
imul
or
pusha
pop
pop
inc
xchg
cld
add
mov
ret
lahf
cmp
fdivrs
dec
das
mov
loopne
fs
mov
lahf
int3
or
andb
ret
in
or
in
mov
clc
adc
jg
ss
lods
inc
sarb
mov
mov
ret
insl
gs
mov
leave
dec
movsl
jge
pop
push
fistpl
xchg
ljmp
jecxz
add
sbb
pop
push
dec
push
lods
js
or
dec
mov
adc
insb
jae
mov
mov
shr
xchg
js
cld
push
mov
loop
sar
mov
decl
rorl
push
inc
js
pusha
sub
cmp
pop
iret
movups
mov
inc
sbb
push
xchg
inc
mull
stc
out
cmp
dec
add
sarb
sbb
imul
lea
jecxz
xchg
sbb
aam
adc
dec
and
mov
add
rcr
mov
inc
adc
cmpb
inc
sbb
cmp
fidivs
rorb
cltd
loopne
and
sub
test
dec
sub
jae
in
jne
mov
push
stos
cmp
add
pop
adc
scas
fwait
cmp
adc
add
mov
jge
mov
aam
lret
xor
stc
sbb
inc
mov
adc
xchg
mov
and
sub
mov
rep
xor
loop
dec
lret
dec
jb
xchg
mov
enter
cmp
adc
divb
cli
inc
push
pop
cld
xchg
arpl
setbe
mov
pop
sub
cmc
jno
mov
lcall
js
mov
jbe
addr16
shrb
pop
inc
std
stos
fwait
out
xchg
sub
rcll
mov
xchg
mov
fldenv
mov
push
jo
icebp
stc
icebp
test
fmull
ja
mov
or
cwtl
sbb
std
imul
loop
adc
pop
mov
mov
jle
nop
pusha
or
std
mov
sub
sub
sahf
outsb
ja
iret
mov
or
adc
jmp
test
add
xor
mov
dec
orb
das
in
mov
inc
aad
cmpsl
ficoms
mov
stos
adc
mov
jp
jmp
push
push
cmpsb
inc
cmpsb
mov
push
cmp
out
iret
and
mov
mov
cmp
ret
xor
roll
movsl
outsl
dec
aad
lock
cmpsb
xchg
sbb
add
into
adc
mov
std
mov
mov
mov
in
xor
fnsaves
push
dec
mov
aaa
into
stc
es
je
mov
mov
dec
movsb
xor
cmpsb
sub
inc
or
add
adcb
ffreep
or
sub
call
incb
movsb
jmp
mov
enter
mov
insb
sub
lods
imul
inc
test
adc
js
icebp
xorl
popf
outsb
ss
inc
push
int
sbb
out
mov
or
sbb
inc
push
pop
mov
fs
xchg
pop
sbb
pop
and
cmc
xchg
mov
movsb
repnz
dec
test
sub
xchg
inc
mov
sub
lods
xchg
lods
xchg
dec
arpl
cmp
test
popf
cmpsl
sar
roll
mov
sarl
dec
jecxz
mov
aam
sarl
sbb
andb
fisubrl
sbb
inc
jns
sub
push
daa
or
mov
inc
mov
sbb
jns
cmpsl
adc
lret
lret
shl
xor
lret
rorl
cmc
cmpsb
mov
inc
popf
arpl
out
push
pop
xchg
frstor
adc
popa
std
pushf
or
xlat
std
jmp
shlb
push
icebp
xor
or
rorb
arpl
in
cmp
insb
and
push
and
fidivl
mov
mov
divb
cmp
inc
jl
sbb
and
sub
aam
mov
cmp
dec
mov
subb
pop
push
scas
lret
out
xchg
out
push
popa
andl
cmp
or
jbe
sub
decl
cltd
stc
andl
in
cltd
cmpsb
push
and
ja
cmp
lret
xor
pop
fimuls
mov
sub
pushf
test
stc
pop
xchg
or
add
stos
adc
cmp
les
inc
xor
or
cmp
mov
cmpsb
mov
add
testl
and
inc
cmp
stos
dec
sbbl
dec
xchg
or
jmp
in
and
mov
and
jbe
xchg
pop
pop
fwait
jbe
add
pop
adc
cmpsl
stc
cmc
mov
sbbl
or
aam
sub
and
cwtl
call
cs
cmpsl
lcall
add
jge
popa
loopne
xchg
xchg
adc
and
jb
mov
imul
dec
mov
insb
int3
sub
mov
stos
jecxz
jae
lods
repnz
push
loope
adc
ret
and
mov
jp
mov
push
ret
jmp
lods
jl
outsl
or
jbe
sub
xchg
inc
mov
xor
repnz
mov
mov
mov
pushf
sub
adcb
push
xor
and
xor
pop
xor
cmp
pusha
sub
enter
jbe
les
sub
int3
scas
mov
sbb
jno
test
pusha
or
scas
or
aaa
repnz
ret
jle
sahf
sbb
jae
xchg
hlt
ds
mov
adc
rolb
movsl
and
sub
xchg
ljmp
movl
jb
and
mov
js
jb
xor
outsl
jecxz
jmp
test
mov
cs
aad
dec
popa
int
ret
jb
fsubrs
and
cli
js
in
inc
dec
inc
leave
popf
mov
inc
jp
cli
fidivs
mov
dec
xchg
push
fimuls
cli
loop
pop
jg
pop
mov
inc
or
and
shll
sbbl
flds
jge
jo
pop
std
and
aaa
std
xor
decl
add
jae
cmc
stc
aad
xchg
pop
fldt
scas
jg
gs
dec
cmpsb
mov
leave
cli
popf
jo
shll
cmp
sub
or
leave
push
sbbl
inc
pop
dec
popf
test
addr16
cmp
pop
mov
addr16
subb
shrb
and
push
js
adc
movsb
cmpsb
mov
mov
add
xor
inc
fdivp
shll
dec
mov
out
mov
inc
in
in
int
pop
push
inc
mov
xor
mov
add
fsub
in
jae
dec
xlat
movsb
mov
pushl
pop
dec
lahf
sahf
push
gs
inc
imul
cmp
push
xlat
mov
adc
rcll
add
and
fldt
push
roll
cmp
push
les
mov
fisubs
cld
and
fisttps
mov
inc
and
xchg
push
mov
ds
sbb
xor
sbb
pop
sbb
imul
loop
mov
cmp
cmp
jb
sub
mov
pop
lea
pop
xchg
outsb
lea
mov
stos
push
fiadds
ss
or
test
rolb
xor
pop
jb
js
mov
cli
icebp
mov
mov
mov
inc
push
fildll
fdivr
hlt
pop
sbb
mov
or
imulb
jo
clc
aaa
out
jg
mov
add
pop
fimull
or
mov
push
inc
lahf
cmc
xchg
mov
aad
pop
or
mov
adc
es
aas
adc
mov
jecxz
xchg
dec
xlat
cmp
push
xchg
out
xchg
sbb
mov
or
xchg
stos
jmp
or
adc
dec
add
dec
test
dec
cmpsl
adc
push
ds
negl
sub
std
adc
les
jge
mov
js
xchg
stos
imul
fstl
pop
movsl
cmpsl
cmp
xlat
mov
out
mov
nop
stos
mov
aas
aaa
sbb
test
pop
adc
mov
cld
out
popf
push
adc
dec
mov
loope
outsl
xchg
inc
dec
rcrb
jo
movsl
pusha
xor
mov
cmova
leave
hlt
and
ljmp
repnz
inc
mull
xchg
or
jo
or
mov
jbe
js
xchg
push
xchg
imul
int
jl
mov
add
add
add
dec
in
call
push
notb
add
jle
mov
mov
xchg
fs
sub
and
cltd
push
sbb
pop
and
js
push
sub
mov
adc
xchg
add
aad
test
xchg
lds
xchg
inc
pop
aaa
mov
mov
mov
ret
icebp
inc
push
pushf
cwtl
add
out
mov
fsubrs
pop
test
push
mov
or
adc
pop
ds
lea
add
cli
adc
add
cmpsl
fisttpll
mov
movsl
mov
sbb
xchg
jne
addl
enter
xor
das
jl
fldcw
mov
xchg
xor
ror
mov
inc
xchg
add
outsl
mov
shrl
jecxz
and
repnz
xchg
ret
inc
out
add
aam
jp
xor
add
bound
hlt
dec
sub
pop
sahf
ret
add
push
mov
inc
sub
aad
push
movsl
and
sti
cmp
je
mov
ret
mov
mov
add
push
in
unpckhps
mov
ret
aas
decb
enter
aaa
daa
lods
lret
fucom
insb
leave
lret
lods
dec
sbb
shll
cmpsw
call
dec
or
pop
add
out
and
fwait
xchg
dec
jo
mulps
and
jb
scas
leave
cwtl
cld
lock
mov
push
imul
dec
xor
mov
call
and
in
scas
cmp
add
repnz
lods
cmp
mov
pop
xchg
mov
fisubl
dec
pop
out
push
fistpl
out
mov
cmc
adc
dec
xor
fldt
push
out
mov
rol
pop
rcll
xchg
xor
adc
push
add
mov
lea
adc
inc
bound
orl
mov
sub
les
xchg
xchg
jb
int3
insl
subl
ljmp
repz
in
fisubl
in
dec
stos
sbb
push
lock
push
movsb
pop
cmp
cltd
and
in
cmp
mov
lahf
inc
movsl
pop
outsl
sti
out
inc
fisttpl
pop
inc
outsl
push
mov
push
mov
outsl
mov
shrb
lds
sbb
pop
cmp
mov
ljmp
add
xchg
push
shlb
dec
loope
inc
inc
xor
xchg
sub
push
mov
lock
ret
shrl
sbb
les
subl
es
mov
cmp
inc
push
insl
add
xor
push
dec
inc
gs
and
mov
jns
out
int3
es
pop
mov
xorb
sub
push
inc
sub
sbb
push
in
les
mov
inc
push
test
and
imul
adc
rcl
rorb
movsl
insb
in
adc
or
cmpsb
mov
jae
inc
dec
repnz
movb
fldln2
clc
and
sbb
insb
mov
cli
or
mov
cs
inc
cltd
xor
jno
dec
mov
mov
daa
in
jg
adc
xor
sub
icebp
jle
fsubrs
shrl
pop
and
loope
jp
pushf
hlt
adc
ret
divl
xchg
adc
movsl
cmp
push
outsl
nop
outsb
es
fs
in
insl
or
or
lret
movsl
pop
pop
xlat
inc
xor
fcompl
and
loope
mov
cmp
pop
inc
jne
mov
jmp
lods
jp
adc
xchg
sbb
add
xorl
sahf
popf
xchg
lret
sahf
cmp
cmpsl
push
inc
imul
stos
cmpl
test
mov
lea
rcll
jg
sbb
inc
cmp
adc
mov
cmp
rcr
call
bound
std
scas
cltd
out
dec
aam
sbb
ljmp
mov
fcomi
fcmovne
or
mov
ljmp
arpl
in
mov
dec
sbb
inc
mov
es
or
int3
push
mov
sbb
add
mov
or
repz
mov
xor
lret
add
lea
xorl
lods
ret
pop
fsubs
lods
mov
cmp
cmpsl
add
inc
cmp
jb
dec
les
pop
mov
and
mov
aas
inc
push
xchg
nop
gs
jns
out
and
scas
or
clc
mov
test
jle
push
fiaddl
clc
cld
cmc
push
dec
pop
popa
push
sbb
inc
mov
outsb
add
xor
push
dec
sbb
mov
movsb
or
ja
out
aaa
adc
rcrl
mov
jge
pop
rcrl
test
or
outsb
xor
xchg
mov
jne
or
mov
dec
adc
inc
jge
mov
in
mov
repz
stc
movsb
xor
aad
loope
ss
mov
push
jne
fstps
fimull
add
dec
loopne
mov
sti
movsb
dec
inc
out
xchg
in
popf
aas
cmp
fisttpl
sbb
sbb
insl
gs
cmpsl
incb
rcrl
push
cmpsl
push
sbb
push
jl
push
push
pop
push
pop
pop
pop
cmp
cmpsb
pop
lods
xor
dec
clc
add
cmp
push
testl
and
lods
sub
xchg
insb
stos
fucom
icebp
jg
or
mov
insb
push
sti
sub
sarb
cli
sti
lea
inc
int3
xchg
push
fsub
and
adc
xor
fwait
pop
adc
mov
pop
xor
shrb
mov
xor
lods
stos
arpl
lret
push
das
xchg
add
pop
repnz
loopne
ret
xchg
pop
hlt
push
stc
pusha
jnp
xchg
xlat
sbb
gs
mov
out
mov
push
aaa
push
add
leave
xchg
or
xchg
xchg
xchg
addr16
shrl
cltd
mov
push
es
clc
imul
and
in
inc
cmpsl
movsb
andl
cmpsb
nop
mov
popa
push
fnsave
push
push
lods
out
jbe
gs
dec
xchg
fwait
mov
aaa
cmp
push
jne
in
orb
and
xor
adc
pop
imull
stos
push
mov
dec
jle
fmul
gs
and
lods
adc
mov
adc
xor
aas
movsb
jmp
sbb
mov
scas
mov
jne
lcall
jb
push
mov
cld
inc
xor
inc
xchg
push
xor
adc
lea
mov
mov
cmp
les
sub
dec
dec
xchg
add
loop
adc
popf
stos
or
test
jl
add
lret
sbb
adc
loopne
mov
add
clc
in
sub
add
cmc
cmp
sbb
cmp
rorl
adc
or
push
popa
aad
aad
shr
jmp
das
rorl
xchg
in
enter
js
mov
sub
mov
sub
add
jmp
jno
jns
dec
xor
dec
rorl
std
mov
into
sbb
je
popf
inc
sub
int
and
mov
xchg
mov
pushf
mov
xorl
and
mov
jnp
mov
ret
rcrl
cmc
loope
es
lock
ret
subb
jbe
out
test
xchg
or
cmp
and
fstpl
xor
mov
sahf
hlt
adc
int
adc
or
and
ret
movsb
and
pop
repz
xor
ret
cmp
das
lret
icebp
jge
loopne
testl
mov
lea
rep
fs
mov
sub
mov
sub
or
in
nop
mov
cltd
push
and
mov
or
dec
adc
xchg
push
in
sub
dec
mov
pop
mov
mov
fidivl
xchg
adc
rolb
xchg
cmp
mov
mov
sub
lahf
insl
push
mov
mov
inc
ja
andb
fwait
mov
lret
or
ss
mov
dec
xchg
mov
cmp
rorl
adc
xlat
scas
adc
add
or
push
pop
lock
hlt
dec
or
and
inc
inc
lods
enter
fwait
pop
add
cld
dec
sub
mov
push
sbb
int
lock
lret
sub
push
out
mov
sub
mov
cld
dec
stos
fisubrl
clc
dec
jmp
test
aad
aas
inc
das
jge
in
les
add
popa
xlat
sub
cmc
cmp
jo
cld
mov
sub
push
pop
xchg
xor
ds
push
xchg
mov
pusha
dec
popa
or
xchg
or
ret
or
mov
inc
repz
repz
add
dec
cmp
iret
mov
mov
stc
inc
add
adc
and
inc
repnz
test
lahf
enter
imul
mov
xor
push
negb
int
lret
and
mov
cltd
jbe
jp
mov
pop
adc
es
fsubr
dec
pop
sub
and
bound
int
xor
push
mov
sub
push
cmp
stc
cmp
lock
loop
mov
cmp
inc
jl
icebp
push
aam
mov
je
out
adc
xor
mov
outsl
aaa
and
shrl
jl
sbb
repnz
sbb
xor
push
push
test
stc
mov
mov
aad
dec
inc
call
cltd
stos
leave
pop
cmpsl
jne
lret
lods
dec
ljmp
xor
and
shll
xorb
pop
addr16
push
fsubrl
add
pop
lock
jle
sti
jno
push
sub
out
xchg
shl
ss
nop
daa
add
das
xor
mov
push
dec
les
cmpsl
add
xchg
push
fneni(8087
lock
outsl
lea
sti
or
add
and
pusha
mov
push
jge
sti
movsl
mov
cmpsb
arpl
cmp
aas
jmp
leave
push
aas
pop
cld
dec
loop
or
cwtl
cmp
popl
ds
fisttpll
addb
insb
xchg
stos
inc
cli
mov
cmp
jnp
pushf
cld
lahf
sbb
loop
outsl
call
xor
mov
add
mov
cwtl
imul
dec
imul
scas
arpl
lcall
xor
fs
cmpsb
xchg
hlt
pop
add
stc
pusha
sbb
pop
cmpb
sub
ficomps
xor
test
adc
aaa
aas
movsb
out
mov
add
lcall
cmp
fs
int3
aas
xchg
or
or
jge
out
shlb
push
mov
std
and
mov
and
loope
pop
sbb
mov
js
xor
cmp
adc
ret
adc
lcall
jae
pop
cmp
sbb
daa
mov
stos
aad
out
add
movsb
add
push
jo
mov
mov
or
ds
adc
or
call
and
mov
insl
cmc
lods
mov
mov
push
cs
test
outsl
fs
cld
imul
fdivr
mov
push
and
and
addr16
lods
arpl
mov
xchg
fwait
push
fcoms
fwait
imul
cmp
add
cld
xchg
das
adc
popf
adc
or
lea
es
xchg
repz
adc
push
cmp
push
fsubrl
sti
out
test
lahf
xchg
test
inc
push
gs
repnz
and
cmpb
cmpsb
dec
popf
outsb
xchg
cmpsl
ja,pt
inc
mov
gs
sub
mov
lcall
test
mov
int
fwait
xchg
inc
in
jo
mov
xchg
and
xchg
pop
subb
mov
shld
fnstenv
sti
fisubrs
leave
push
popf
out
adc
movsl
adc
aam
aaa
cmp
adc
jmp
les
out
inc
ja
mov
push
es
lret
xchg
lock
std
pop
push
stos
add
pushf
sub
lcall
lcall
add
jle
mov
fists
rcll
inc
push
mov
cltd
sbb
mov
loop
call
cwtl
out
pop
lods
or
out
aad
push
push
xchg
pop
mov
xchg
push
test
pop
mov
bound
cmp
and
je
lods
cs
xchg
cmp
decl
adc
sub
push
int3
lahf
push
jno
std
mov
xlat
ja
mov
popa
fidivrs
mov
outsl
pop
pop
pop
xchg
sub
movsl
add
dec
data16
popa
push
arpl
and
xchg
or
movl
sub
or
shrb
pusha
push
js
push
inc
ljmp
mov
daa
inc
aaa
iret
mov
pop
pop
xlat
adc
cli
sbbb
fwait
sbb
inc
mov
push
sub
iret
addr16
xchg
fs
sti
mov
xor
test
sbb
mov
mov
fnstsw
call
in
xchg
fbstp
rcl
or
xchg
pop
mov
and
out
push
jae
pushf
loope
add
add
jmp
pushf
cmp
lret
mov
dec
xor
jae
cmp
mov
arpl
cmp
jae
mov
popf
add
pop
and
movl
mov
inc
loop
xor
or
xchg
int3
xor
decb
mov
add
cmp
jecxz
es
lock
aad
ret
ror
add
int
or
pop
in
lret
in
lods
inc
lds
mov
out
mov
xchg
jle
pop
notb
data16
scas
lret
adc
push
call
in
and
arpl
and
jne
call
dec
xor
dec
or
xor
shll
sbb
jg
or
push
and
dec
out
dec
inc
sbb
push
test
sub
out
jg
fistpl
sbb
mov
xor
sarl
jae
leave
mov
movsb
lods
ljmp
lods
mov
rorb
and
add
divb
int
cld
stos
imul
cmp
fdivp
jge
xor
enter
insb
xor
mov
loopne
test
sbb
mov
push
mov
andl
cld
gs
xchg
nop
xchg
cmpsb
jecxz
repnz
sarb
aam
addr16
in
sbb
pop
xchg
cmc
adc
ret
insb
cmp
dec
mov
add
scas
fs
push
and
out
shlb
js
mov
pop
mov
pop
mov
push
fisttps
jae
cwtl
push
lcall
or
sahf
sti
pop
dec
lret
sbb
sub
in
aaa
add
adc
xchg
xchg
push
fimuls
nop
lcall
stos
daa
push
test
call
cmp
lds
insl
mov
scas
jb
jg
dec
lods
adc
lret
add
andl
test
push
lahf
sub
rclb
or
sub
sti
test
sub
daa
pop
push
in
sub
jp
sub
inc
dec
dec
int3
cmp
pop
jno
mov
adc
mov
cmp
test
inc
test
jp
mov
inc
mov
cmp
add
push
mov
or
xchg
mov
ss
lods
scas
movsl
loop
into
xchg
rcrb
adc
daa
daa
mov
mov
test
jg
int3
mov
outsl
inc
sbbb
or
jmp
ds
cmp
xor
and
data16
cld
sub
lods
sbb
test
xor
and
add
adc
data16
and
fnsave
adc
xlat
call
lcall
jae
lcall
aas
js
xchg
shrb
add
mov
mov
adc
cmpl
aas
leave
test
shll
pop
jae
inc
lar
or
mov
add
mov
xchg
movsl
cmp
out
dec
lahf
xchg
pop
jnp
es
add
or
add
dec
sub
sbb
nop
out
cmpb
mov
loope
cmp
jmp
pushf
push
scas
mov
clc
mov
fisubs
cmp
adc
inc
push
and
lods
inc
mov
daa
fisttpll
in
jp
pop
push
scas
jo
fidivrs
cmp
idivb
and
stos
andl
adc
stos
rorl
dec
sub
xchg
xchg
inc
sarl
push
dec
shr
outsb
add
push
cwtl
or
push
clc
in
sahf
test
pop
mov
lock
sti
lcall
add
push
cmp
pop
rcr
or
inc
pop
cmp
cwtl
mov
in
icebp
ret
daa
cltd
dec
xchg
cmp
test
pop
push
inc
adc
loop
rcl
cmp
add
or
sahf
push
pop
lods
mov
or
daa
cmp
xchg
repnz
inc
mov
mov
cmp
adc
push
jne
jmp
lods
cli
jge
pop
outsb
arpl
das
inc
push
pop
iret
mov
js
test
push
nop
dec
stos
std
mov
dec
sub
cmp
push
pop
push
lock
mov
ja
cs
add
cmp
ds
pop
jb
leave
xor
xchg
orl
mov
leave
push
int3
fildl
movb
push
daa
jmp
dec
int
fsincos
mov
enter
push
jo
sbbb
rorb
cs
mov
repz
push
xchg
lahf
adc
je
jno
je
xor
pop
notl
pop
jnp
call
pop
push
outsl
roll
mov
icebp
in
xlat
jp
sbb
shlb
jnp
dec
xor
fs
mov
lret
sub
adc
dec
outsl
scas
inc
sbb
adc
and
xchg
mov
scas
scas
push
das
outsl
inc
inc
inc
fwait
mov
mov
inc
or
loop
push
lock
jecxz
out
and
shl
leave
pushf
aam
gs
das
cltd
mov
inc
mov
daa
loopne
ja
dec
int
loope
mov
lea
dec
or
icebp
push
out
and
sti
cmp
insl
sarb
pop
lock
arpl
push
or
jl
cwtl
sbb
lret
mov
xor
and
jnp
aad
andb
hlt
sbb
scas
fcoml
dec
mov
xchg
ficompl
jb
fsubrs
bound
sub
nop
add
or
and
push
mov
mov
push
cmp
ret
int3
and
adc
ret
nop
xor
push
or
inc
aas
xor
les
in
out
adc
pop
sbb
adc
mov
and
jno
or
mov
sbb
les
rclb
enter
pusha
lret
push
mov
enter
cs
mov
cmp
sub
or
sahf
pusha
popa
lea
or
stc
lahf
fsts
and
sub
lcall
jmp
inc
mov
sbb
xor
sub
push
xchg
sbb
dec
std
sbb
xchg
dec
pop
mov
loop
ds
imul
pop
push
ss
popf
xor
mov
push
inc
and
mov
imul
xchg
xor
xor
mov
mov
hlt
ljmp
jg
pop
das
call
and
add
mov
pop
push
pop
enter
dec
iret
into
testl
sahf
das
insl
ja
loope
das
mov
mov
pushf
outsl
xchg
dec
pop
cmpl
fdivs
lock
das
push
pop
add
enter
imul
inc
cltd
fwait
xor
or
fucomip
mov
dec
and
sbb
jns
xorl
addr16
xchg
js
dec
test
das
notl
stos
sbb
or
mov
mov
mov
push
fs
sub
pop
mov
inc
std
frstor
sub
out
lods
xchg
push
push
push
test
sbb
sub
mov
sub
jecxz,pn
mov
mov
mov
test
test
cltd
push
sbb
mov
jns
xchg
insb
mov
xchg
rcr
mov
mov
outsb
iret
jmp
mov
addr16
xchg
pop
push
iret
push
stc
sbb
push
movsb
insb
ljmp
lahf
test
add
repz
sub
sti
mov
leave
rcrb
xor
lahf
xchg
clc
je
xor
sub
jge
in
ja
pop
adc
in
adc
mov
jns
mov
jp
inc
add
scas
mov
adc
js
inc
outsb
jno
stos
mov
in
cmpsl
adc
push
cmp
int3
jbe
popa
add
inc
shll
adc
push
xchg
leave
xchg
ds
adc
xchg
les
loope
xchg
int3
gs
mov
in
sbb
outsl
clc
and
and
negb
movsb
cmpsl
lcall
ja
mov
pop
daa
pop
jl
and
xor
data16
in
xchg
jp
jae
and
mov
jg
fs
push
adc
adc
xchg
push
sarl
sbb
jmp
jp
mov
sub
adc
addl
icebp
lahf
mov
in
dec
lcall
mov
jle
mov
movsb
fadds
cltd
insl
rorl
imul
cli
jg
or
dec
daa
dec
push
xchg
adc
dec
sbb
adc
js
xor
fsts
inc
cmp
ret
rcr
in
mov
jae
shrl
in
pop
filds
and
lret
aaa
push
movhlps
iret
mov
jmp
pop
mov
add
sub
iret
or
sbb
pop
fildl
mov
js
xor
jbe
stos
and
outsb
jne,pn
cmc
pop
mov
fstps
gs
inc
and
pop
cli
aad
lea
lock
cmpsl
xor
mov
js
repz
outsl
hlt
adc
hlt
dec
addl
je
xchg
jo
stos
sub
xor
insb
add
movsb
sub
inc
or
sub
jmp
mov
sahf
orb
jne
xor
roll
inc
mov
adc
sub
dec
shlb
adc
push
mov
ret
test
rclb
fmull
stos
mov
inc
push
jno
push
xor
fsubrl
push
sti
jnp
sub
adc
scas
in
jle
lds
mov
jl
jnp
movsb
pop
and
stc
xor
xchg
jb
mov
lret
mov
out
cmc
arpl
jmp
jle
das
sub
pusha
dec
adc
sub
into
cmc
push
mov
mov
sbb
add
push
push
outsl
fadds
add
pop
call
stos
mov
pop
fiadds
pop
fsubs
add
and
sub
adc
data16
sub
lret
jns
mov
jge
sbb
sbb
xor
faddp
jns
loopne
das
sub
rorl
cmc
in
add
xchg
and
fsubr
std
scas
inc
movsb
xchg
mov
filds
sti
data16
roll
pusha
inc
mov
mov
push
xor
sbb
ds
jl
sub
ds
and
sbb
jnp
pop
mov
sbb
xor
jb
daa
push
xchg
insl
or
cmp
mov
in
cmpsl
iret
cltd
jne
lahf
jno
aaa
loop
outsl
mov
stc
in
test
push
les
rcl
adc
push
repnz
cmpsb
jne
in
jp
jmp
and
test
or
cmp
cmpsb
aad
adc
dec
mov
jecxz
std
cmpb
dec
aam
cmp
mov
cltd
xor
jae
fs
jo
sub
or
fcmovnu
mov
lods
test
loope
xor
test
pop
mov
es
pushf
adc
cmp
pop
bound
pop
outsb
movsb
xor
mov
jbe
and
outsl
mov
add
and
subl
popa
adc
mov
out
xchg
arpl
mov
in
lret
pushf
pop
lock
pop
xor
jg
insb
mov
mov
fwait
addb
xlat
cmp
pop
popf
test
jbe
push
mov
sbb
faddl
dec
sarb
push
test
and
add
cmp
sbb
dec
mov
inc
xchg
incb
filds
cmpsl
test
mov
sub
sbbb
mov
or
int
subl
jae
adc
push
fwait
es
cmp
sub
or
inc
pop
mov
shlb
imul
mov
imul
test
inc
inc
and
push
push
jns
mov
test
jp
dec
cwtl
fimull
sbb
pop
inc
sbb
add
inc
mov
cmpsl
push
jnp
cmc
mov
jo
add
mov
mov
or
xor
es
pop
adcl
lea
ret
sub
jle
xchg
dec
cmpsl
push
sar
jmp
popa
bound
stc
jg
inc
mov
jge
cld
cmp
and
jbe
adc
je
repnz
or
mov
leave
inc
cld
mov
sbb
stos
es
xchg
pop
pop
mov
mov
adc
jae
fidivrs
adc
xchg
in
push
mov
or
adcl
jle
adc
jnp
mov
mov
xchg
sub
pop
lahf
js
daa
js
xor
je
fnsave
andb
insb
das
pop
out
and
cs
xchg
mov
sbb
aaa
or
loopne
pop
cmpb
jl
mov
or
adc
dec
sub
das
shlb
mov
push
ja
jno
lahf
or
push
addr16
jae
push
fwait
push
testl
out
and
sahf
dec
mov
push
das
scas
scas
scas
push
nop
jns
stos
fsts
mov
into
aam
ds
repnz
mov
cmp
in
push
mov
inc
cli
pop
sarl
and
xor
dec
mov
mov
adc
sub
call
cli
pushf
dec
into
sbb
jae
lock
negb
mov
lret
imul
movsb
xor
nop
jne
iret
cmp
push
ret
add
xor
mov
shlb
push
push
sarb
jne
mov
fidivrl
xor
sbb
cmp
out
sarb
push
xlat
fwait
cmp
pop
cmp
jg
inc
iret
push
mov
sub
lods
xlat
push
add
adc
push
lods
rol
push
ja
in
adc
mov
pop
mov
pop
adc
repnz
jle,pn
or
hlt
movsb
inc
mov
mov
inc
out
xchg
imul
sti
dec
imul
movsb
cmp
pop
jns
loopne
gs
test
das
aad
aam
jl
pop
mov
jnp
adc
cltd
mov
out
mov
mov
insb
outsl
test
push
xchg
xchg
loop
fisttpl
adc
fs
lret
pop
adc
inc
fwait
push
inc
dec
fdiv
gs
sar
adc
add
jns
push
xlat
out
loopne
xrelease
add
je
mov
aad
add
adc
cmp
stos
inc
mov
or
xchg
fcomps
xor
or
or
jg
rcl
mov
insl
lods
lret
pushf
mov
fists
inc
pop
fs
xor
push
jbe
jp
test
icebp
cmp
loop
jle
mov
fmul
cmp
dec
dec
movsl
movsl
inc
lods
scas
mov
cmp
ja
cmp
bound
mov
repz
in
fldl
dec
sub
loop
mov
sub
mov
cli
sti
or
adc
mov
fsubrs
in
or
leave
xor
nop
inc
push
sub
mov
sbb
inc
push
xor
idivl
ffree
sbb
dec
xchg
jmp
xlat
bound
repz
aam
mov
pop
es
cmp
aam
dec
pop
jb
and
pop
sti
mov
movsl
lds
nop
jmp
cld
mov
les
jmp
jmp
inc
dec
imul
add
in
pop
push
dec
add
push
ds
xor
or
insl
sbb
push
jb
push
adcb
add
testl
and
sbb
cltd
sub
std
fisubl
push
in
push
addr16
dec
push
push
call
dec
clc
cs
outsl
pop
lds
mov
arpl
mov
ja
in
push
pushl
movsl
xchg
fistpll
mov
mov
les
push
popa
ret
je
sbb
xchg
scas
jp
pop
aaa
ret
add
icebp
insb
sub
and
aaa
jbe
mov
inc
and
adc
nop
into
aaa
mov
repnz
mov
pop
add
or
jp
jb
mov
jns
push
sar
inc
xor
pushf
hlt
jmp
xor
js
cmp
mov
movsl
jge
pop
outsl
sub
subb
pop
in
or
ja
lret
fwait
xor
dec
sbb
das
lea
movsl
fmul
in
mov
and
loopne
lcall
data16
fildll
stos
cli
stc
les
add
cmpsb
and
jg
sbb
jns
mov
jbe
sbb
rcrl
jns
sub
sub
nop
and
cmp
inc
stos
cmp
cld
mov
testl
pop
add
mov
mov
mov
shll
scas
push
rcl
jns
fisttpll
fstl
imul
rclb
dec
repnz
sarl
mov
ja
jae
mov
cmp
xor
sti
adc
jp
cmp
nop
shlb
push
outsl
inc
data16
push
ds
cmp
ds
add
outsl
insb
cld
popa
enter
dec
mov
mov
adc
push
pop
jp
xchg
fdivrp
shl
jnp
daa
aaa
rcrb
aaa
xor
int
inc
out
rcrl
test
dec
or
xchg
mov
popf
movb
std
mov
mov
aad
les
test
aam
das
loopne
push
js
adc
es
lock
es
mov
popf
and
cwtl
pop
out
xchg
fld
in
andb
and
fyl2xp1
mov
pushf
mov
out
out
dec
mov
lea
out
inc
mov
testb
xchg
pop
lock
lds
pushf
jmp
insb
jge
test
push
int3
roll
add
in
movsl
das
repnz
test
sub
push
mov
xchg
sahf
je
pop
in
jb
sub
icebp
jl
popa
xlat
sbb
lret
add
xchg
cld
test
stos
insb
dec
outsl
lods
popf
cmp
aad
clc
movsl
cmpsb
mov
cmpsl
js
aad
pop
sbb
push
mov
pop
fidivs
or
inc
fadds
imul
jp
mov
rclb
cmp
ja
push
mov
out
mov
mov
out
subb
icebp
js
jge
pop
push
das
xor
negl
lods
sbb
or
lret
cmp
shlb
in
push
mov
das
jecxz
dec
imul
stos
push
dec
inc
jb
xor
jnp
adc
or
jl
cmp
jb
sbb
jno
dec
jp
out
or
push
dec
or
jmp
les
daa
mov
loopne
lret
push
push
cmp
addr16
push
dec
popf
xor
or
pop
jmp
and
test
add
lods
fsubp
insl
decl
adc
in
daa
sub
inc
popa
lret
out
popf
inc
nop
fsubl
dec
inc
or
pop
dec
movsl
jns
jae
push
arpl
jb
mov
mov
aam
mov
pop
shrl
cs
ljmp
sbb
or
or
and
fisubrs
or
cmp
lea
test
mov
outsl
jg
das
xor
jae
dec
lds
into
sub
jg
cmc
int3
xchg
and
insb
jecxz
shrb
cmp
push
inc
push
sub
pop
sub
cmp
repnz
das
dec
cmp
fcomi
inc
pop
dec
dec
inc
sub
xchg
pop
cmp
xchg
mov
stos
pop
aad
add
fcmovne
call
dec
push
shll
insb
lds
mov
adc
mov
adc
iret
adc
cmpsl
gs
xor
lock
sub
fcomip
mov
hlt
ret
lock
rorl
mov
nop
call
stos
or
aas
lcall
jae
pushf
sbb
stc
jecxz
cmc
inc
jne
jecxz
xchg
dec
push
pop
subl
daa
addb
sub
xchg
call
mov
push
inc
outsb
inc
sbb
cmc
fistl
inc
inc
cmp
mov
dec
pop
sbb
jns
test
pop
icebp
fistps
push
jge
cmp
movsl
or
dec
dec
int
cltd
mov
jp
outsl
sbbl
xchg
cld
xchg
les
dec
clc
into
int
adc
stos
pop
lea
mov
sub
pop
clc
jne
sub
dec
lock
ret
xor
cmp
jns
mov
aaa
pop
mov
das
sbb
xchg
mov
ds
out
fidivrs
sbb
adc
pop
xor
mov
pop
ds
inc
out
pop
inc
adc
sarb
mov
dec
push
sub
fdivl
loope
aaa
mov
or
mov
fwait
push
in
mov
std
push
mov
fbld
test
mov
test
adc
test
adc
sub
js
shll
sbb
ss
out
and
aas
xchg
adc
xchg
xchg
lcall
sub
mov
mov
sbb
stc
inc
pushf
lret
jbe
sbb
sub
leave
xor
xor
mov
or
and
cmc
hlt
adc
add
js
xor
add
gs
std
push
cmp
pop
sub
inc
fbstp
nop
mov
popf
imul
out
stos
daa
mov
sub
pop
rcll
jne
imul
sbb
jbe
loope
mov
dec
xchg
mov
loop
xchg
lock
into
aad
loope
xchg
out
scas
inc
lahf
sub
push
pop
dec
push
inc
jne
sar
mov
int3
jne
sub
out
outsl
pop
pusha
ljmp
frstor
pcmpgtb
imul
and
and
vmovapd
mov
dec
adc
mov
loopne
fwait
loopne
int
fidivrs
pop
pop
jne
sub
popa
cmp
adc
loope
negb
outsb
data16
cmc
sub
mov
ja
cmp
les
mov
lahf
xor
mov
mov
dec
pop
iret
cmp
push
mov
test
push
fsubrl
and
mov
jl
je
dec
push
inc
mov
sbb
leave
mov
jecxz
adcl
mov
or
sahf
mov
cmp
nop
cs
outsl
mov
push
shrl
pop
mov
stos
popf
add
fmul
ficoml
xchg
pop
les
mov
popf
add
jae
xor
aas
and
les
les
arpl
cmp
cld
out
mov
popf
inc
mov
mov
jle
push
xor
pop
ret
hlt
std
testl
jl
sahf
sub
pop
xchg
xor
scas
addl
fs
push
aam
adc
mov
cmp
pusha
ret
inc
xchg
test
std
loope
add
jo
scas
data16
ja
dec
mov
push
mov
jno
dec
fsubrs
cld
jo
push
adc
negl
mov
lods
std
mov
fisubl
std
cmp
mov
cmp
arpl
loop
jp
mov
ret
pop
pop
xchg
cmp
jns
xchg
imul
inc
stos
sub
xor
cs
lret
sbbb
jne
add
divl
jo
xchg
push
sbb
mov
jl
pop
cmp
jg
mov
jno
xchg
adc
mov
imul
jmp
jb
scas
push
mov
adc
mov
nop
arpl
sub
rorb
push
pop
cmc
outsl
dec
into
and
cmp
cmpsb
and
xchg
and
pop
lods
or
addr16
and
cmp
inc
addb
jmp
lods
jnp
or
jo
dec
jmp
sbb
cmpsb
repnz
std
fcoml
pop
jb
jl
inc
icebp
push
jnp
insl
xchg
xor
or
cmpsb
push
in
daa
loop
mov
andl
pusha
mov
mov
xor
mov
idivl
ss
sbbl
adc
popl
add
inc
js
inc
leave
xchg
psubusb
mov
push
mov
cmp
mov
jo
insl
ret
sbb
les
inc
in
or
mov
inc
lods
scas
xor
aaa
imul
cmp
pop
pop
mov
andl
pusha
cmc
ljmp
xor
pop
xor
scas
mov
inc
mov
and
sarl
sub
jmp
outsl
paddd
add
mov
jl
rcll
popa
scas
fs
lock
xchg
in
sub
mov
lods
popf
test
adc
pop
pusha
popf
ret
jle
push
pop
xchg
push
clc
mov
fnsave
imul
ljmp
sub
sbb
lret
pop
outsl
clc
dec
mov
imul
jl
in
enter
add
clc
fcomps
mov
adc
in
ljmp
rorl
add
nop
out
icebp
cmc
rcrl
inc
ja
loop
or
xor
lahf
dec
dec
jmp
inc
cmp
push
sarl
mov
aam
sub
arpl
in
push
adc
mov
scas
mov
push
lret
imul
xor
lret
test
test
loop
out
cmpsb
adcb
jle
in
dec
mov
je
sub
mov
xchg
out
push
mov
aam
xor
mov
dec
icebp
aad
lods
hlt
ljmp
pop
lret
xlat
imul
add
subl
jb
add
dec
daa
test
add
xchg
dec
adc
sbb
test
repnz
xor
xor
rcll
dec
jnp
lret
jae
not
pop
pop
cmpsl
fadds
ficomps
mov
test
mov
nop
fistpll
lock
icebp
aaa
loop
mov
icebp
fmull
sub
jbe
cmp
add
jne
movsl
and
and
dec
nop
and
lcall
into
fwait
hlt
test
and
stos
jnp
push
test
and
and
sub
jbe
stos
into
mov
fs
fs
in
jno
pop
mov
push
mov
xchg
jecxz
scas
xchg
out
sub
cmp
jb
aaa
addl
push
lds
insl
lret
cmp
mov
xchg
xchg
mov
iret
enter
out
je
enter
mov
cltd
jle
test
and
pop
xchg
and
call
xor
xchg
test
xchg
or
dec
jo
xchg
fdivl
out
push
shlb
cwtl
sbb
enter
lahf
jne
ljmp
adc
or
mov
sti
adc
add
cli
sar
mov
push
cmp
imul
ss
mov
adc
dec
ror
jmp
out
insb
dec
jl
adc
rorl
add
into
out
andl
aam
mov
mov
or
mov
test
stos
add
and
jl
pop
cld
outsb
mov
in
push
inc
jns
data16
fwait
cwtl
test
subl
scas
jnp
ret
mov
or
pop
jp
aam
or
lods
adc
jns
inc
dec
mov
xchg
jae
aas
dec
subb
rclb
out
fwait
imul
sbb
stos
inc
adc
sub
lret
mov
in
inc
jmp
xor
or
xchg
in
mov
or
push
and
add
jecxz
stos
push
imul
in
add
or
sbb
lods
adc
rorb
fs
notb
sarb
fidivl
cmpsb
or
adcl
lret
jnp
cmpsb
in
sbb
gs
or
fadd
or
in
mov
nop
das
imul
addr16
add
fistpl
cmpb
outsb
cmpsl
cli
das
jmp
push
sbb
mov
addr16
test
sub
ffreep
lds
enter
sub
inc
popa
push
nop
scas
pop
xlat
test
jmp
cmp
adc
push
pop
aas
sub
cltd
adc
fcompl
push
adc
nop
int
clc
cltd
jl
icebp
add
mov
pop
cmp
sub
fbld
dec
or
add
sbb
dec
mov
mov
dec
pop
pop
data16
push
bound
fldl
mov
or
inc
pop
xor
nop
sub
mov
mov
sbb
testl
stos
outsl
inc
jns
or
dec
mov
rclb
adc
outsb
jge
js
movsb
mov
fs
inc
std
add
test
ret
cltd
mov
repz
bound
mov
decl
lea
mov
mov
pop
mov
xlat
mov
mov
or
aad
cmp
jnp
mov
movsl
leave
or
sub
imul
xchg
adc
lods
sahf
mov
or
push
aam
dec
dec
xchg
and
dec
ret
sub
jo
pop
pusha
cs
jle
cmpsl
add
jne
aad
jge
xchg
int3
xchg
ja
pop
shll
push
cs
sub
ja
add
sub
imul
dec
adc
adc
jmp
lock
imul
push
pop
dec
arpl
out
push
js
imul
mov
jmp
hlt
mov
insb
sbb
pop
xor
jbe
add
xor
aaa
mov
cmp
pop
lock
dec
hlt
and
nop
fsubr
aam
dec
out
push
xchg
in
and
xor
les
addr16
pop
lret
aas
out
cli
bound
loop
int3
jb
pop
or
cmc
adc
adc
sbb
rcl
mov
shlb
inc
mov
xor
dec
cmc
inc
stos
and
repz
mulb
xchg
jge
mov
into
and
loop
lret
xor
xchg
fs
mov
adc
shll
and
sub
ljmp
mov
xchg
adc
inc
mov
and
jbe
mov
int
mov
push
sbb
pop
push
pop
imul
in
jno
popl
dec
xor
dec
aas
js
and
ds
lods
sub
js
pop
jno
mov
mov
shlb
mov
sub
rclb
sbb
insb
lods
scas
cmp
or
lret
into
pop
pop
mov
loopne
mov
leave
sar
lock
fsubl
mov
shlb
lock
pusha
inc
lea
icebp
stos
repnz
incb
bound
mov
das
sbb
and
icebp
imul
mov
inc
jbe
add
scas
iret
stos
push
stos
insb
jle
out
mov
repz
ja
das
mov
es
stc
xor
push
xor
mov
gs
xchg
stos
not
push
mov
dec
testl
pushf
mov
xor
xor
push
loopne
iret
outsb
or
cmp
sub
in
cli
sub
pop
push
mov
jno
jle
pop
xor
in
or
jecxz
jo
popa
lea
xchg
mov
int
xlat
pop
mov
loope
pop
pop
out
mov
insb
mov
shll
scas
inc
xor
sbb
mov
mov
pop
rcr
adc
out
cmp
cmpsb
ud2
jge
add
popf
adc
xor
mov
fwait
lods
pop
std
popf
xchg
int
aam
dec
in
pop
hlt
cmp
out
cmpsb
mov
jbe
outsb
mov
fimull
inc
jne
sbb
push
mov
movsl
bound
sbb
adc
mov
cli
outsl
cmp
or
xorl
test
cmp
pop
mov
sub
push
inc
add
sbb
std
loope
into
sbb
or
and
insb
insb
inc
dec
dec
or
push
les
xor
scas
pusha
mov
pop
sbb
sti
adc
nop
sbb
fidivrs
popf
and
pop
enter
js
lahf
xlat
push
xchg
lods
add
scas
or
push
sahf
jo
or
push
jo
in
aam
pop
nop
mov
insb
andl
dec
sub
mov
mov
imul
push
cmpsb
fcoms
rorb
cmp
cmp
mov
add
bound
lcall
or
adc
push
jg
pop
and
fnstenv
push
xchg
dec
pop
pop
jb
imulb
sub
fcmovb
test
je
pop
clc
aaa
rolb
mov
lock
lret
add
push
in
cmp
cmp
ds
and
or
sub
sbb
and
cmpsb
sahf
push
sbb
ds
mov
adc
jns
dec
mov
cmpb
add
push
sbb
dec
test
jecxz
out
pop
mov
lods
mov
bound
inc
imul
mov
cmp
fbstp
xor
dec
insl
in
aaa
mov
sbb
cmp
popa
xchg
add
and
notb
jge
xorb
cmpsl
push
xchg
mov
push
ret
cmp
push
arpl
sti
aas
addl
fld
mov
cmp
sub
xchg
dec
lds
stos
jg
movsb
pop
jae
adc
pop
jb
xchg
inc
arpl
fnsave
add
lock
pushf
xor
dec
test
and
cmpsb
loope
lea
ret
out
movsl
push
icebp
stos
cmpsl
push
sahf
pop
and
mov
test
pop
dec
sbb
mov
add
or
inc
cmp
out
mov
mov
test
jnp
dec
in
nop
dec
lods
nop
or
adc
mov
movsl
in
mov
lock
push
or
clc
and
rcll
xchg
movsb
pop
add
cmpb
mov
ret
cmp
sbb
mov
sbbb
je
scas
xchg
cmp
sbb
das
cmpsl
movsb
prefetchwt1
or
imul
movsb
xlat
xchg
lods
fstp
sub
lods
jno
stos
cmpsl
ror
xchg
ja
and
pop
and
and
lea
sbb
inc
leave
pusha
dec
and
xchg
pop
dec
push
xchg
push
in
or
inc
in
xchg
daa
rcll
xchg
mov
enter
icebp
sub
icebp
pop
das
adc
pop
sbb
lret
popf
jp
or
mov
or
pop
sbb
sbb
hlt
enter
mov
dec
je
pop
push
loop
fcomps
call
add
out
add
movsb
inc
sbbl
ss
add
in
mov
inc
xchg
jns
outsl
inc
xlat
sbb
stos
testb
push
out
or
out
dec
sub
cwtl
mov
mov
movsbl
push
inc
lret
loop
jge
or
les
and
leave
icebp
sub
mov
mov
lods
pop
mov
mov
and
xchg
or
outsb
pop
add
ror
loop
inc
pop
ss
mov
cmp
jns
mov
in
jbe
std
cmpsl
inc
insl
adc
test
test
insb
mov
push
inc
lock
adc
lds
add
cmp
cmp
leave
loopne
ljmp
jnp
dec
out
dec
jnp
lret
sbb
in
push
leave
negb
cmp
stos
loope
mov
or
xor
in
add
jp
add
and
ljmp
xor
fstpl
xor
gs
movsl
mov
inc
mov
sbb
mov
andl
add
inc
jnp
mov
int
lea
pop
sbb
cli
sub
popa
add
fisubs
js
mulb
adc
fscale
icebp
insb
pop
push
fadds
cltd
imul
jae
adc
andb
add
sub
daa
icebp
mov
out
outsb
or
mov
jns
mov
push
mov
jle
and
push
sbb
jne
and
push
imul
loope
iret
fwait
pusha
mov
lds
insb
ret
popf
iret
dec
fisubrs
movsl
mov
pop
leave
movsl
or
lahf
cli
test
loop
push
mov
dec
fcompl
sub
loope
jne
lret
inc
pushf
adc
jmp
je
push
mov
ror
ss
call
pop
add
inc
repz
popf
inc
fnstcw
mov
movl
stc
push
decl
xchg
jle
popf
sub
jae
inc
lock
xchg
jns
repz
sub
arpl
int
push
int
or
push
pusha
fcomps
dec
pop
lret
inc
test
shl
xor
jl
lods
xchg
push
adc
shrb
jnp
sub
adc
add
sub
xchg
jmp
call
pop
clc
adc
cmp
sub
add
xchg
jne
xchg
jne
push
mov
sahf
pop
popf
jge
ljmp
and
jno
push
cmpsb
jb
dec
sbb
add
dec
mov
push
jbe
adc
outsl
cs
mov
ss
lcall
mov
or
sbb
cmpsb
mov
sbb
push
jge
insb
jae
inc
mov
xor
mov
mov
mov
fiadds
or
push
decb
mov
and
sbb
shrb
jmp
dec
outsl
andb
or
je
jne
cmpsb
cmp
andb
pop
repz
aaa
mov
cwtl
sbb
xor
mov
or
mov
daa
leave
les
pop
push
add
pop
sar
mov
fcmovu
sub
and
js
jg
inc
sub
inc
aaa
xor
call
cli
int
ret
inc
cmp
push
ljmp
push
mov
pop
and
pop
cmp
rol
mov
add
ljmp
sub
pop
xchg
lods
push
jge
inc
mov
cmp
aad
pushf
xor
add
insl
pop
mov
push
insb
add
sub
add
xlat
cmp
sub
cmp
xor
inc
sub
sbb
inc
dec
mov
call
call
pop
ljmp
pop
lods
inc
jl
loop
jp
repz
dec
daa
cmp
lods
cmp
inc
mov
imul
dec
pusha
jno
mov
mov
fdiv
pop
or
addr16
faddp
roll
mov
push
push
sub
ds
pop
xor
xorl
ljmp
mov
sbb
add
sbb
push
fwait
mov
insl
inc
pop
inc
adc
aad
sbb
lahf
add
fs
mov
lahf
xchg
jmp
ss
scas
adc
loop
cmpsl
jl
cmp
stos
scas
mov
cltd
lods
stos
mov
push
popa
dec
pop
xchg
loop
xchg
mov
js
cmpsl
jb
cmp
lret
ret
hlt
repz
add
pop
jb
jmp
push
push
lret
fmul
cmpsl
jmp
shrb
shrb
push
scas
mov
xor
jge
jb
push
sub
jno
inc
int
push
shlb
aas
sbb
lods
add
and
aas
jb
xchg
jae
sub
mov
push
mov
mov
dec
outsb
sbb
inc
push
mov
lret
andl
test
stos
dec
push
lcall
in
cmovbe
mov
out
je
outsb
cwtl
add
xchg
mov
rcr
fwait
xchg
xchg
push
cld
xor
mov
mov
push
dec
popw
push
fimull
dec
nop
les
add
pop
mov
cltd
jg
mov
scas
std
and
jbe
mov
data16
pop
sub
into
out
lcall
add
jbe
xchg
les
mov
push
lea
fcmovu
or
pop
mov
jnp
and
mov
dec
out
xchg
ds
movsb
xor
clc
xor
out
loopne
movzwl
movsl
lcall
fdivr
add
pop
pop
cmp
sub
lcall
xor
sti
push
jmp
or
pop
dec
cs
fwait
dec
idivb
xor
jbe
xor
push
int
inc
data16
jo
sub
jle
in
xor
sub
mov
stos
rcll
out
andb
inc
pushf
aad
sub
dec
mov
sbbb
pop
lahf
pop
loope
jmp
push
loop,pn
mov
jp
inc
cmp
xchg
lods
xchg
outsl
push
or
ss
adc
lret
push
mov
mov
inc
xchg
jecxz
xchg
out
cmp
stos
pusha
lea
jle
dec
xor
push
mov
xor
mov
fs
cs
jne
popf
icebp
inc
mov
mov
dec
jle
jne
int3
mov
int3
inc
push
jecxz
sbb
dec
xor
jns
in
test
cmpsl
pop
stc
jmp
out
mov
cwtl
add
stos
div
xlat
out
loope
addr16
inc
stos
jle
lock
jle
mov
xchg
jnp
pop
push
mov
lods
in
inc
push
lcall
iret
popa
call
push
inc
xor
push
lock
daa
lcall
sbb
cmp
push
xor
aad
cmpsb
shrb
nop
push
push
adc
aaa
scas
jmp
or
xor
insl
cli
inc
add
scas
fists
jg
jno
ss
inc
or
lcall
sbb
xchg
addr16
sbb
sar
adc
hlt
mov
in
xlat
jecxz
shrl
xchg
out
iret
popa
cmp
xchg
adc
arpl
movsl
fstpt
mov
cmpsl
xchg
fnstsw
jle
lcall
xor
cli
test
cmp
daa
inc
repnz
stos
sbb
sub
repz
mov
mov
stos
fstps
stos
movsb
xchg
iret
aam
adc
je
jmp
xor
xchg
outsl
scas
jno
popa
add
dec
cwtl
enter
dec
xchg
addr16
dec
and
or
pop
cltd
leave
sub
stos
fs
out
dec
pop
mov
dec
gs
les
outsl
cmc
pop
adc
fidivrs
fstl
and
in
pop
add
sub
dec
dec
bound
mov
sahf
shr
insl
fs
test
or
popf
addr16
lds
cmp
push
mov
fisubrs
ljmp
adc
pop
cmpsl
cmp
xor
les
mov
ja
testl
adc
aaa
or
call
imul
or
and
mov
inc
pushf
adc
ucomiss
mov
jp
dec
mov
insb
cmpb
sbb
mov
xchg
adc
mov
pop
pushf
sub
dec
mov
insb
push
addb
mov
push
loope
scas
mov
out
sti
xor
fnsave
jae
popf
mov
inc
xchg
add
mov
pop
lahf
push
push
ja
call
or
or
mov
inc
sbb
mov
in
lds
jecxz
sub
std
sub
leave
dec
test
and
outsl
add
scas
je
fmuls
sub
and
fstps
scas
push
inc
dec
and
pop
add
inc
jno
mov
or
lods
push
ljmp
add
fldcw
loope
out
imulb
mov
psrad
cmp
or
shrl
push
sbb
add
mov
xchg
lods
in
jae
cmp
int3
lcall
pop
jno
pop
sbb
mov
outsb
and
shll
insb
cwtl
jecxz
rorb
cmp
or
sub
push
jmp
ja
lods
xchg
enter
lret
add
jecxz
jp
sbb
shll
inc
scas
and
push
arpl
cld
mov
imull
fwait
scas
popf
fsubs
int3
cs
pop
inc
and
or
stos
test
std
jmp
cmp
jnp
cmp
xor
movsb
sub
sub
call
loope
das
pop
test
clc
xchg
push
adc
cmp
dec
xor
or
jo
ljmp
xchg
repz
in
stos
insl
orb
mov
js
rorb
sbb
inc
push
xor
out
mov
gs
in
or
sbb
in
mov
cmp
sbbb
and
or
sub
ret
pushf
leave
stos
adc
and
out
inc
lea
cmp
repz
push
mull
sub
adc
fldt
sbb
fstpl
sub
xor
push
push
rcr
or
les
add
lret
jnp
arpl
subl
or
mov
lret
mov
jle
xor
inc
add
mov
sub
in
xor
test
mov
ret
push
nop
call
xchg
int
pop
jnp
xor
fcompl
mov
add
and
cli
sbb
sub
add
add
jbe
fs
loopne
lahf
mov
and
test
es
inc
stos
dec
shl
mov
dec
cmp
roll
rcl
idiv
int
push
or
les
push
cs
xchg
lret
popa
xchg
pop
lods
lcall
test
into
mov
fsubrp
jg
stos
or
loope
push
in
faddp
ds
xor
in
movsl
int
hlt
cmp
fwait
mov
scas
cmpsb
jecxz
or
pop
into
cmpsl
and
mov
pop
aas
loop
repz
pusha
mov
std
mov
fdivl
lret
mov
mov
in
mov
cmp
jno
jecxz
mov
lahf
mov
in
inc
std
pop
mov
and
pop
lret
mov
in
xor
mov
or
lcall
leave
mov
into
pop
adc
dec
xchg
stc
or
fcmovnbe
xor
bound
push
in
fidivs
cltd
sbb
cmpl
faddp
mov
jge
add
decb
push
or
lcall
jbe
arpl
dec
xor
outsb
fs
sub
subb
xor
xor
mov
mov
xor
mov
adc
push
xchg
loop
xchg
fld
push
and
sbb
cmpsl
aad
xchg
out
jns
dec
push
xchg
repz
call
out
in
inc
lods
out
or
xchg
xchg
cmp
push
daa
out
cltd
into
ds
inc
fmull
add
int3
test
loop
je
test
rorb
adc
stos
push
mov
jnp
push
mov
loop
jo
mov
daa
xor
icebp
orl
mov
and
fimuls
mov
dec
roll
xor
pop
js
test
lods
mov
pop
jecxz
out
stos
shrb
les
add
lret
ss
int3
add
jge
sub
adc
andb
push
add
nop
andl
pop
xor
cld
mov
adc
jmp
push
xor
jmp
orl
mov
add
daa
lods
xchg
jle
imul
mov
fnstenv
in
mov
or
cmp
es
sbb
jb
fnstsw
pop
jmp
jbe
adc
jg
jg
sbb
xlat
js
cld
loope
icebp
dec
jae
inc
lods
lock
push
and
idivl
fisttps
mov
ret
pop
dec
adc
sub
cmpsl
jecxz
sub
xchg
pop
loope
jmp
stc
cs
test
or
ror
gs
xchg
mov
xchg
push
mov
andl
add
sub
int3
pop
lds
in
subb
cmc
cwtl
add
adc
dec
int3
jmp
imul
cmp
mov
cmpsb
add
jle
jns
sbb
dec
and
neg
dec
inc
mov
clc
arpl
lods
xchg
pop
sub
out
mov
push
jbe
out
shrb
and
sbb
test
jb
ret
cmc
adc
sub
xchg
cld
add
rorb
or
stc
jmp
inc
dec
lret
inc
mov
and
dec
test
les
fsubrs
mov
or
pop
icebp
out
adc
pop
sub
and
add
pop
test
fcompl
jno
jae
repnz
stc
jns
das
xor
mov
sub
cmpsl
mov
loop
jecxz
mov
lcall
pop
pop
call
mov
dec
jns
dec
scas
mov
lahf
int3
pop
sbb
dec
fists
mov
or
movzwl
inc
roll
pop
aam
xchg
ret
xchg
mov
pop
sub
clc
push
test
sbb
dec
out
inc
dec
xor
fwait
mov
inc
jo
fs
and
loopne
in
ds
mov
dec
into
xor
stc
mov
sbb
iret
fwait
loope
jp
inc
dec
and
xchg
inc
lds
add
testb
gs
mov
imul
add
ljmp
pop
imul
jl
push
into
imul
je
enter
inc
or
pop
mov
jle,pt
xor
fsubs
dec
fcmovnbe
push
pop
or
loopne
cmp
cld
cs
aad
ja
inc
and
out
les
jns
sub
popl
mov
andl
leave
stos
mov
jns
push
jmp
or
inc
push
lds
fistpl
xchg
or
mov
lret
lahf
adc
cld
sahf
pop
mov
rorb
sub
scas
das
and
sub
test
pop
je
add
fcompl
sarl
cli
rolb
insb
push
lahf
pop
outsb
mov
sti
ds
loope
adc
pop
pop
int3
xor
loopne
mov
mov
nop
xchg
pop
pushf
aas
jno
fs
and
mov
inc
int
dec
xchg
pop
rcrb
jp
xchg
push
fildll
or
xor
addb
and
ret
insb
insl
pop
adc
jne
jnp
mov
push
dec
lret
cmpsb
add
das
jg
stos
cltd
shll
ret
mov
iret
and
mov
and
mov
jle
mov
popf
in
ja
dec
cltd
out
roll
pop
repnz
je
shrl
addr16
push
aaa
movsb
xorl
aas
mov
hlt
pop
push
xor
in
pop
cli
mov
mov
mov
out
enter
decl
mov
sub
jae
movsl
or
adc
in
or
fists
adc
dec
dec
nop
mov
cmp
sbb
mov
insl
ljmp
sbb
mov
ss
push
sarb
mov
push
mov
pop
mov
ss
ja
push
cmp
out
or
div
div
jb
lds
scas
iret
lret
scas
jns
adc
movsb
clc
rorl
or
stc
or
je
xor
inc
push
nop
movsb
dec
push
aam
ret
adc
sub
add
pusha
xchg
int
pop
adcb
sahf
cli
push
movsl
mov
xor
ljmp
or
jo
xor
inc
fcmove
push
cmp
xor
outsb
aaa
lods
jno
adc
pop
push
push
xor
xor
popa
mov
ret
adc
ljmp
inc
xor
gs
icebp
inc
decl
pusha
push
mov
popa
int3
jecxz
vpmovsxbq
mov
pop
add
pusha
testb
jbe
pop
mov
adc
je
popa
insl
xor
adc
and
outsl
inc
sbb
mov
mov
jne
in
sub
jmp
imul
stc
or
push
nop
mov
jns
mov
jb
popl
xor
ss
sbb
dec
sbb
mov
mov
rorl
out
cmp
jno
fistps
cltd
cmp
adc
rolb
push
and
jnp
lret
mov
loope
jae
pop
stos
je
cmpsb
inc
mov
xchg
jecxz
cmp
les
call
pop
mov
gs
jge
jb
mov
xchg
sub
jmp
xchg
roll
mov
cmp
mov
adc
sbb
xlat
pop
iret
test
push
repz
lcall
mov
or
int3
in
mov
gs
push
push
pop
call
shl
andb
jp
inc
negb
jae
lret
inc
jbe
pop
insb
lcall
loope
jmp
mov
or
scas
loopne
push
adc
xchg
dec
and
lahf
incl
sub
cwtl
test
push
psrlw
lock
jae
push
sbb
or
sti
mov
insb
adc
mov
sub
push
adc
or
repnz
and
inc
std
ret
inc
mov
mov
nop
js
adcb
pmaxsw
in
or
pop
out
pop
mov
mov
pop
sbb
movsl
or
sub
fldl
sbb
sub
std
ret
sbb
add
hlt
push
cld
sub
fcompl
imul
fmul
test
cmc
das
mov
push
imul
xor
dec
pop
sbb
push
add
rcr
xchg
xor
js
dec
les
xchg
sbb
dec
cmc
push
in
std
fidivs
int3
pop
push
js
ret
lcall
xor
jecxz
fwait
xchg
pop
cltd
and
adc
test
insl
jl
out
jecxz
stos
js
sub
inc
nop
imul
push
call
ret
movsl
jnp
outsb
movsb
inc
loope
push
pop
cwtl
out
mov
cmp
ds
inc
push
mov
xor
fists
and
add
popf
pop
stc
repnz
jbe
into
aaa
sub
repz
pop
or
iret
add
pop
insl
daa
outsb
out
cli
xchg
repnz
add
mov
aad
mov
pop
jnp
fmuls
cmpsb
xchg
xchg
lea
rcrl
and
addr16
test
sbb
jmp
imul
jl
ljmp
orl
insb
or
push
mov
imul
mov
mov
into
push
fimull
cmp
arpl
in
ret
cmc
arpl
push
adc
jbe
aad
adc
sub
mov
stos
ret
outsb
xor
pop
sar
loope
push
cmp
frstor
mov
lock
add
mov
jb
daa
xchg
mov
jl
or
dec
jmp
stos
xchg
and
imul
outsb
outsl
test
pop
xchg
test
cmp
int3
cmc
mov
inc
mov
mov
push
insb
aam
ficompl
scas
stos
or
mov
jbe
bound
xor
mov
gs
ret
fwait
ret
mov
or
cmp
xchg
pop
jmp
es
inc
xchg
pop
into
cli
mov
mov
add
fisubrl
mov
lahf
mov
mov
jecxz
addr16
ret
sub
in
ljmp
repnz
ds
hlt
cmpsl
in
int3
inc
jecxz
in
pop
test
cmc
dec
dec
mov
sbb
pop
cmp
sbb
outsb
clc
mov
lret
cmpsl
cmp
fmull
xchg
push
jnp
inc
fsubl
decb
outsl
js
jle
popa
xor
or
mov
mov
testl
test
jge
mov
shlb
push
mov
dec
insl
push
test
sbb
pop
xchg
sbb
push
xchg
in
rcr
adc
mov
inc
xor
stos
nop
das
lods
or
sub
mov
push
aaa
adcl
imull
mov
mov
shl
jne
jnp
mov
sahf
push
pop
adc
xchg
ret
mov
movsb
loope
scas
mov
sahf
push
adc
cmp
cmp
in
push
push
push
mov
dec
jl
mov
imul
fsubrs
push
mov
jne
les
out
popa
aam
sub
dec
mov
mov
lods
push
xlat
scas
into
fiaddl
rcrl
cmp
push
mov
stos
mov
nop
shl
dec
outsl
mov
scas
outsl
loop
int
jns
addr16
jbe
dec
in
jbe
jp
popf
outsb
lret
ret
adc
mov
adc
fimull
je
sbb
jg
adc
xor
jno
subl
ja
inc
push
pop
cmpsb
mov
fiaddl
xor
fs
subl
jmp
and
mov
xchg
int3
out
adc
xchg
cmpsl
inc
stos
pop
into
inc
sub
in
rcrl
or
xor
cld
adc
adc
movsb
es
fildll
and
sub
mov
ljmp
xor
or
pop
add
push
or
mov
out
jge
or
testb
xlat
loopne
xor
fdivrs
dec
rcr
notl
test
test
iret
mov
cmpsb
imul
fnstcw
cwtl
sbb
inc
cs
and
nop
add
sub
in
mov
loop
cwtl
shrb
adc
mov
jp
mov
xchg
jns
aaa
sub
mov
addr16
inc
or
enter
rcrb
repz
mov
jl
mov
outsl
fcoms
xchg
push
lds
jno
addr16
popa
xor
insb
fldcw
iret
jnp
pop
lods
adc
adc
jmp
insl
cmp
push
in
and
lock
cmp
xchg
adc
and
test
push
popf
jbe
sarb
adc
popf
mov
cmp
sbb
mov
inc
xor
dec
cmpsl
or
jo
inc
mov
dec
inc
jb
dec
cmp
enter
loop
add
popf
ljmp
adc
xor
loop
jne
and
and
mov
dec
js
rcll
ret
fimull
mov
cmpsb
inc
cmp
pop
mov
stc
inc
cmp
inc
iret
jmp
push
and
insb
inc
inc
add
es
cmp
mov
imul
imul
jmp
mov
dec
js
sti
jnp
mov
add
out
pop
ret
or
out
lds
inc
cmp
addr16
mov
ss
imul
fsubl
loop
push
mov
add
stos
bound
push
aas
push
and
jae
loope
fisttpll
adc
test
frstpm(287
and
push
sub
sti
sbbb
data16
mov
pop
movsl
cmp
cmp
lods
out
add
xchg
std
and
adc
mov
movsl
and
cmpsl
cmp
xchg
mov
push
jecxz
repz
mov
push
push
jae
inc
out
sbb
subb
pop
xchg
adc
into
sar
xchg
subb
push
orb
cmp
xchg
lcall
adc
adc
jnp
mov
sub
xchg
pop
sbb
insl
iret
outsb
dec
test
and
outsl
outsl
cltd
adc
ljmp
repnz
add
outsl
outsl
btc
cld
mov
mov
mov
stc
ss
sbb
movlps
arpl
dec
xor
in
jb
or
sub
add
outsb
or
aad
aas
mov
push
jo
push
stc
scas
ja
out
cmp
divl
add
or
cs
ja
push
jne
icebp
xor
jle
repz
nop
iret
sbb
lds
lcall
faddl
sub
add
roll
or
mov
shll
loop
insl
xor
les
sbb
dec
cltd
repnz
cltd
dec
and
jl
mov
cltd
sub
loope
andl
shll
push
sbb
mov
js
and
push
mov
imul
or
in
jo
lahf
movsb
dec
mov
cwtl
mov
lcall
push
xlat
ja
je
ds
mov
divb
push
mov
outsb
bnd
cmp
mov
or
and
gs
in
xor
mov
js
inc
loope
mov
push
or
add
lods
jmp
pop
mov
sbb
fimuls
cld
int3
mov
push
js
pop
das
stos
scas
mov
pop
sbb
lret
cmpsb
mov
mov
fwait
les
je
jp
sub
popa
lea
adc
add
repz
loopne
in
mov
jle
cmp
fwait
and
mov
inc
fs
xor
fldcw
jb
mov
inc
scas
ds
push
out
adc
popf
xchg
cmp
sub
mov
scas
mov
out
dec
xchg
fwait
jl
mov
loop
adc
lock
mov
lods
cmp
mov
stos
push
fadd
mov
and
mov
or
xlat
xor
xchg
or
gs
adc
pop
dec
inc
push
aam
cmp
or
cmc
test
pushf
mov
mov
mov
into
push
push
mov
psraw
mov
or
cmp
cmc
push
and
xchg
and
and
mov
out
stc
cmp
into
call
adc
leave
movsl
scas
sahf
pop
xchg
gs
add
test
and
lods
xchg
xor
lcall
adc
mov
push
inc
stos
mov
mov
insb
jp
js
pop
rol
lahf
sahf
push
inc
jno
jg
daa
sub
aad
push
inc
fdivl
mov
xchg
lret
test
imul
cs
mov
dec
cwtl
push
inc
fildll
imul
stos
push
es
adc
mov
std
roll
repz
stos
mov
shlb
xchg
gs
jmp
jb
pop
outsl
pop
jmp
xchg
pusha
int
cmp
adc
insl
and
mov
pop
adc
adc
mov
sbb
lret
iret
push
shrb
mov
cmp
inc
pop
jecxz
shlb
aad
mov
push
sbb
and
dec
mov
out
data16
fistl
jl
cmp
negl
add
mov
add
xchg
lahf
and
dec
push
scas
inc
and
pop
test
nop
cld
fldcw
sbbb
out
scas
push
enter
ret
sub
mov
jp
inc
pop
leave
push
push
push
lds
and
out
call
ret
jnp
sub
orb
adc
fiadds
fidivs
mov
mov
fs
mov
dec
scas
aad
mov
sbb
mov
adc
mov
jb
loop
xor
xchg
add
push
es
orb
ljmp
xchg
mov
sbb
push
xchg
test
subb
fisubs
in
and
jbe
shlb
mov
xchg
lods
mov
push
dec
push
loopne
ds
imul
mov
mov
out
mov
sub
or
test
cmpsl
in
push
mov
stc
mov
push
data16
in
aad
test
add
pop
dec
js
lods
jge
xor
jmp
xor
dec
sbb
aam
scas
mov
pop
add
mov
out
les
inc
loop
jno
in
dec
jmp
loope
das
jg
repnz
push
icebp
stc
adc
arpl
push
jnp
or
in
add
jp
or
xchg
add
in
and
xlat
fdivs
fsubrp
lcall
mov
in
int3
pusha
aad
lret
scas
in
int3
leave
or
test
adc
ret
mov
mov
repnz
sub
xchg
mov
dec
test
ror
inc
imul
jmp
add
pop
dec
daa
repnz
add
mov
pop
or
xchg
cmp
jno
cltd
xchg
je
pop
mov
lret
sub
hlt
inc
hlt
xor
mov
movsl
popf
xor
and
scas
push
lds
adc
jns
xchg
push
mov
jns
mov
test
lea
pop
push
mov
xor
js
or
mov
hlt
cmpsb
jecxz
popf
test
mov
repz
data16
shrb
inc
jle
pop
lcall
pop
xchg
cli
lds
mov
js
mov
mov
pminub
cmp
sub
outsl
or
pop
in
or
dec
jle
xchg
mov
cmp
ss
xchg
add
jb
sbb
dec
pop
cld
mov
jb
mov
jb
fildll
jecxz
int3
or
bound
pop
repz
pop
movsl
movsb
mov
pop
xor
fstpt
mov
stos
popf
repnz
jo
outsl
das
aad
pusha
rcr
movsl
mov
out
repz
inc
neg
inc
lret
jmp
add
mov
movsb
xchg
inc
fistl
sbbb
sub
mov
mov
rclb
test
push
movsb
pop
mov
and
clc
pop
sahf
sub
jo
xchg
jb
dec
cltd
and
adc
and
stc
sub
add
and
sub
notl
xchg
sbb
iret
aas
sbb
bound
dec
add
sahf
subl
sarb
jne
sub
loopne
inc
mov
inc
sbb
cltd
enter
xlat
hlt
dec
shl
mov
mov
sbb
cmp
mov
mov
das
lods
jmp
adc
call
and
jbe
mov
sbb
adc
cmp
rclb
shl
scas
fdivr
cltd
xchg
insb
popa
add
inc
loop
fwait
or
xchg
int
cmp
rcrl
or
lods
sub
or
stos
adcl
stos
imul
add
dec
icebp
mov
shlb
sbb
or
jl
or
rorb
lahf
clc
insl
inc
xchg
in
pop
cmp
pop
inc
inc
sub
xor
push
insb
xchg
mov
imul
xchg
jns
adc
jnp
popa
ror
add
inc
stc
dec
pop
push
in
or
call
lds
std
jne
mov
xor
testl
fnstcw
mov
cmp
outsl
adc
orl
int3
push
ret
jp
insb
rolb
dec
out
sar
cmp
mov
pushf
cmc
mov
xchg
xor
ret
mov
out
addr16
std
aam
mov
arpl
dec
icebp
adc
cmpsl
push
test
xchg
fwait
inc
sti
lcall
pushf
mov
imul
out
push
push
pop
test
xor
add
xor
add
jo
sub
ja
fsubl
imul
hlt
ret
jle
cmp
int3
aad
fs
jle
scas
mov
push
jb
in
pop
out
mov
popa
std
out
add
xor
push
loope
adc
pusha
leave
pop
push
dec
and
in
and
xor
subl
push
xchg
push
and
pop
cmc
xor
fwait
adc
xchg
jo
inc
inc
cld
inc
push
push
rcrl
push
pop
mov
add
jge
xor
out
shrl
jge
dec
and
clc
pop
movsl
xor
sbb
dec
rol
scas
pop
ficoms
inc
mov
clc
test
jp
inc
mov
dec
jp
and
jno
ljmp
xor
dec
fidivrs
shlb
jbe
xchg
jp
cwtl
aaa
xlat
sahf
xchg
into
sub
adc
or
add
in
lahf
push
sub
repz
enter
out
cmpsl
je
fs
insl
call
fidivs
fiaddl
jle
push
cmpsl
test
or
in
dec
xchg
imul
js
pushf
cmpl
dec
ret
push
aas
aam
outsb
mov
inc
pop
aad
xchg
into
jnp
scas
mov
in
dec
mov
ret
push
push
dec
pop
in
stos
lods
mov
cmp
cli
in
out
add
push
hlt
lcall
mov
lods
imul
ljmp
and
jne
fwait
add
pop
leave
add
fdivrl
mov
aaa
ret
cltd
sub
push
jo
inc
das
xor
rcrb
js
push
cmc
pop
sbb
dec
int3
adc
loopne
pop
lahf
pop
jmp
test
stc
js
test
adc
nop
cmpsl
stos
xor
jbe
cli
jb
fnstenv
jmp
out
fisubrs
jmp
or
push
inc
popa
pop
inc
pushf
int3
lcall
or
call
lds
dec
and
pop
or
jl
mov
cmp
insl
test
cld
inc
mov
sti
adc
cwtl
xchg
clc
dec
movsl
mov
aaa
lret
adc
adc
cmc
adc
cwtl
fnsave
add
cmc
or
mov
lahf
lddqu
cs
pop
push
test
movsb
je
xor
pop
rol
fdivl
aaa
mov
iret
pop
push
xchg
push
lods
mov
lods
mov
mov
fistps
sbb
jbe
rcrl
push
and
ljmp
and
and
mov
insb
xor
pusha
cmc
cmp
mov
and
push
scas
cmp
fadds
bound
push
push
xor
xor
xor
andb
testb
sbb
shrb
cmp
ja
loope
scas
cmpsb
mov
cmpsl
rorb
dec
adc
push
jl
test
out
mov
dec
pop
sub
add
mov
xchg
les
lods
scas
add
imul
xchg
sub
data16
jne
fwait
mov
fstpl
pop
jmp
lea
mov
xchg
shr
sub
cmc
or
rol
lods
out
sbb
test
test
mov
sub
pop
negb
jg
cld
rorb
sahf
mov
jmp
pop
and
pop
pushf
add
arpl
and
mov
dec
push
inc
jge
cltd
daa
xchg
ljmp
sub
fwait
cltd
aas
pop
daa
inc
pop
lret
add
mov
add
pop
push
aad
fisttpll
mov
fcmovu
cmp
jbe
jecxz
push
xchg
xor
dec
loop
movsl
in
iret
cmc
sar
cmp
pop
mov
and
incl
andps
scas
and
xchg
insl
mov
adc
jae
fisubrs
in
aad
fnsetpm(287
test
cwtl
add
dec
into
mov
mov
and
sub
sti
mov
nop
nop
mov
fcomi
xor
mov
sahf
add
int3
jne
mov
mov
js
dec
push
or
push
jmp
xor
or
scas
cmc
and
mov
scas
mov
cmp
or
mov
es
adc
jb
sti
push
leave
sbb
call
out
cmp
out
and
out
fucom
adc
mov
or
fcoml
cmp
xor
jo
bound
outsl
and
and
leave
fs
cli
pop
movhps
rclb
movsl
ja
sub
xlat
dec
xor
filds
cmp
xchg
and
adc
cwtl
cmp
ljmp
movsl
jnp
loope
js
mov
push
shll
cmc
mov
dec
data16
or
test
push
mov
push
outsb
jp
rol
insb
xchg
fnstsw
or
mov
rclb
insl
lods
popa
rorl
pop
or
pop
jecxz
and
inc
and
pusha
hlt
cmp
in
mov
xor
sub
outsl
xor
push
jp
mov
shl
popa
daa
mov
lret
mov
int3
movsl
daa
ret
cmpl
iret
outsb
pushf
xchg
jnp
inc
repz
insb
fsubp
and
enter
xchg
cmp
popa
sbbb
addl
add
dec
subl
lock
mov
fsts
pop
lods
mov
int
sti
cs
xchg
xlat
les
or
jecxz
pop
dec
out
callw
adc
xor
movsl
movsl
dec
pop
lds
xor
inc
xchg
dec
jnp
xor
xchg
cs
daa
mov
push
jmp
or
mov
cs
fidivs
sub
inc
and
fstp
sbb
ret
pop
cmpsl
lock
dec
sarl
addr16
dec
iret
sub
outsl
rorl
lcall
test
aas
jl
arpl
iret
pop
jp
cmp
stc
mov
cmp
push
jle
sub
mov
or
and
imul
loope
das
adc
or
mov
out
adc
loop
out
pop
lret
mov
faddp
das
mov
daa
xchg
mov
out
fcomi
adc
mov
push
imul
testl
mov
aam
xchg
mov
rcll
ficoms
fmull
shl
pop
bound
mov
adc
fwait
xor
test
cmpsb
test
sbb
lret
jb
xor
fucomp
mov
mov
outsb
xchg
xor
test
inc
ss
cmp
and
mov
or
xchg
cld
cs
mov
in
cmp
cmp
xchg
pop
sarl
and
jnp
mov
dec
sbb
ret
inc
push
mov
inc
in
mov
sbb
negl
and
popf
and
jl
jo
lret
dec
movsl
test
sub
sbb
out
dec
and
mov
movsl
xchg
ret
sub
jne
loopne
clc
rcrb
mov
out
adc
pusha
mov
pop
cmp
lock
stos
insb
test
pop
adc
idivb
or
decb
in
loope
mov
push
cld
mov
repnz
mov
cld
inc
js
cmp
jecxz
pushf
adc
enter
push
xchg
mov
pushl
jae
or
test
inc
mov
cmpsl
mov
push
mov
sub
aam
cli
std
aas
out
push
mov
icebp
in
sbbb
das
notl
push
mov
fcompp
mov
sbb
mov
mov
jp
jle
push
sub
and
mov
out
dec
movsl
int3
cmp
pop
jns
xchg
cmc
lret
in
mov
xchg
cwtl
out
mov
bound
frndint
lret
cmp
in
imul
add
stos
data16
cmp
jmp
imul
aam
arpl
mov
ljmp
sub
sbb
imul
xor
dec
gs
bound
push
aas
movsb
insb
jns
aam
negl
pushf
repz
mov
aaa
mov
jl
fcoms
and
and
pop
jg
int
jne
movsb
jo
mov
mov
mov
mov
loopne
nop
sub
and
mov
push
lret
inc
dec
pop
jmp
dec
ljmpw
outsb
dec
inc
mov
decb
inc
push
xor
jp
stos
cld
lds
js
fisttpll
sbb
popl
push
sahf
std
push
cmp
mov
jge
outsl
mov
xchg
dec
push
movsl
push
testb
cmpsl
mov
divb
jle
movsl
in
xchg
adc
insl
xor
cmc
dec
push
std
mov
outsb
xchg
cld
add
fisubl
add
fisttps
dec
sub
cld
adc
lods
inc
xchg
jl
inc
sbbb
cli
xor
mov
repz
cmpsl
add
imul
dec
jne
push
sub
pop
rol
lcall
stos
dec
jbe
xor
sbb
stos
adc
sub
or
test
sbb
push
push
shl
dec
ret
push
xor
or
or
jnp
insb
enter
shrb
dec
mov
fld
or
faddl
mov
pop
mov
pop
mov
repnz
push
dec
jle
sub
mov
cmp
cmp
stos
mov
loopne
push
lods
and
stos
add
ret
mov
pushf
sti
test
xor
ret
push
sbb
and
xchg
push
sbb
and
sti
dec
or
test
stos
add
sub
movsb
push
jle
push
xchg
cli
mov
repz
aaa
mov
rcrl
push
nop
out
ficompl
loop
and
sar
in
pop
dec
int3
push
pop
xchg
leave
mov
pop
xchg
push
add
jge
add
out
jge
jae
xor
push
jg
inc
nop
repnz
aas
sbb
xor
popa
pop
pop
lahf
xchg
cmp
add
les
xor
sbbb
xchg
push
xchg
inc
mov
cli
sbb
fwait
pop
movsb
dec
pop
into
aas
sbb
mov
bound
mov
or
and
daa
add
fsubrl
adc
pop
inc
sub
or
jmp
dec
push
popf
fistps
loop
adc
mov
ret
testl
mov
aad
dec
popl
pop
sub
scas
bound
jne
out
or
stos
leave
mov
in
cmp
loopne
xor
mov
push
pop
xorl
push
pop
call
push
popa
push
pop
sahf
lods
cmp
mov
inc
call
clc
mov
enter
mov
push
mov
sahf
mov
inc
or
nop
cmp
imul
movsb
fidivrl
lods
mov
in
fwait
xor
mov
jle
stc
pop
and
cmp
pop
je
sbb
fldt
aas
stos
mov
adc
loop
insl
test
mov
or
add
jp
testb
fdiv
xchg
das
mov
mov
pop
arpl
xchg
inc
movsl
push
mov
and
mov
dec
add
or
adc
inc
bound
aad
loop
js
sbb
lret
xor
jl
aad
fistpl
xor
testl
iret
lock
ficompl
mov
mov
es
lahf
xchg
mov
shll
dec
and
jecxz
jo
pop
or
sub
mov
or
mov
sbb
stos
ficoms
out
mov
add
int
pop
ds
lock
pop
lods
jnp
aas
aam
std
or
ljmp
jbe
bound
and
pushf
cwtl
imul
gs
pop
adc
jnp
jp
mov
mov
push
rcrl
pop
test
inc
adc
neg
pop
sub
xor
xchg
in
push
out
or
push
lahf
cs
pop
les
loop
std
jecxz
sbb
xor
mov
or
imul
aas
jns
mov
pop
mov
imul
fwait
sbb
out
cmp
inc
in
rolb
test
sbb
or
xor
xchg
cmc
push
adc
sahf
mov
lret
add
mov
popa
xor
mov
pop
mov
fcmovb
pop
mov
sbb
in
adc
mov
sti
and
daa
mov
movaps
in
pxor
and
push
mov
mov
call
cmp
cmpsl
scas
xchg
sub
dec
repz
jae
lcall
sbbl
std
sbb
and
sarl
adc
dec
sti
fldt
out
adc
mov
clc
and
roll
bound
push
clc
push
data16
scas
add
mov
in
xchg
data16
test
ret
push
mov
mov
adc
lret
leave
je
and
or
cmp
cmpsl
inc
aam
in
mulb
adc
and
pop
mov
out
mov
cmp
ucomiss
imull
xchg
dec
xor
sbb
leave
jecxz
pop
dec
lea
mov
idivl
push
lock
cmp
arpl
jecxz
fwait
orl
notb
std
and
adc
jnp
xchg
cmp
cmp
or
into
pop
sbb
add
fs
mov
inc
jg
sbb
mov
mov
adc
push
or
cmpsb
fidivrs
cli
test
inc
push
sbb
add
or
aam
mov
sub
xorl
lods
cwtl
repnz
fidivrl
movsl
xchg
lods
loop
pop
mov
inc
inc
lods
pop
mov
jae
cmp
sahf
dec
mov
arpl
fs
test
xchg
ja
jl
adc
repnz
mov
jo
xor
cli
push
imul
inc
mov
and
jmp
xchg
xor
lock
es
jbe
ret
cmp
or
push
inc
xchg
sbbb
rcr
pop
push
inc
mov
test
int
pop
dec
mov
pop
inc
inc
fcomps
into
pop
xchg
jo
dec
movsl
xchg
lcall
add
imul
add
dec
rolb
jnp
insb
shlb
sarb
hlt
inc
sbb
jnp
setle
dec
and
lret
int3
lahf
mov
xchg
neg
xchg
fmull
addl
mov
pop
lods
dec
sub
clc
and
ret
mov
in
pop
add
jg
jne
ret
adc
sbb
les
push
cwtl
aas
sub
push
pop
andl
mov
add
sbb
int3
sub
cli
test
ffree
sti
xor
in
sahf
add
loopne
cltd
popf
or
mov
ret
inc
popa
les
shl
cmpsl
jmp
mov
bound
sbb
stos
in
das
mov
mov
add
pop
ds
inc
mov
pause
and
fisubl
pop
jl
jg
pop
fcoml
dec
pop
jbe
fistps
dec
mov
shl
add
movsb
ljmp
xor
ljmp
sbb
mov
mov
dec
and
xchg
jge
addr16
add
and
fwait
std
cld
inc
dec
sbb
out
addr16
jne
loopne
cmp
sarl
mov
push
inc
fildll
stos
xchg
mov
imul
adc
pop
xlat
sbb
and
xor
adc
mov
or
push
stos
or
pop
push
mov
iret
mul
pop
cmp
loop
mov
mov
dec
mov
addr16
out
cltd
leave
out
jb
push
cmpb
jb
adc
xchg
in
sti
divl
out
push
call
pushf
mov
mov
mov
add
notl
repz
xchg
mov
or
lret
flds
out
inc
insl
and
jno
mov
mov
xlat
push
xor
test
dec
jecxz
testb
push
rcll
dec
mov
xchg
push
lahf
pop
and
sbb
jb
mov
push
pop
shll
scas
dec
test
mov
cmp
enter
in
push
or
int
xchg
ss
jo
jbe
xchg
out
shr
roll
and
aaa
push
sbb
leave
cwtl
jmp
mov
sbb
sbb
enter
mov
or
mov
aaa
xchg
lods
test
mov
test
pushf
addb
andb
cmpsb
xor
push
or
cltd
insb
mov
incl
xchg
subb
and
cmp
lods
mov
loope
adc
repz
lods
clc
jbe
fbld
mov
hlt
mov
icebp
push
and
aam
mov
and
sbb
adc
jle
ret
dec
imul
mov
jle
pop
fdivs
lret
mov
sbb
jne
push
xor
test
mov
incb
clc
cmpsb
inc
jb
and
popa
xchg
add
jecxz
aam
xchg
xchg
sbb
dec
pop
shlb
mov
and
sub
stos
loope
pusha
in
loope
aad
stc
sub
loop
leave
repnz
test
fwait
xchg
add
stos
add
scas
pop
daa
roll
or
jbe
mov
mov
bound
push
push
fwait
arpl
pop
cmp
mov
pop
je
mov
dec
pop
xchg
add
jno
sbb
repz
push
shlb
std
stos
dec
fimuls
jmp
aaa
out
fsubl
outsl
pop
in
add
adc
pusha
fwait
push
push
in
or
loopne
or
ror
jae
mov
scas
add
mov
fdivr
pop
dec
dec
add
inc
pop
cmp
inc
jne
sbb
xchg
addb
jg
push
adc
scas
ret
loopne
adc
pusha
rorb
lahf
mov
outsb
mov
pop
and
js
lds
lret
mov
dec
xchg
mov
cmp
add
cmp
aas
xchg
jp
add
or
popa
test
ret
iret
mov
ja
je
loop
insl
push
xchg
xchg
dec
dec
mov
jb
idivb
xchg
popf
les
cmpsl
insl
mov
ret
xor
inc
ljmp
into
lds
dec
xor
jno
jne
cld
jne
sti
cmp
das
jg
mov
jbe
dec
sub
jb
mov
imul
mov
mov
mov
sbb
jne
out
cmp
subl
adc
mov
subb
sbb
outsl
mov
cmp
pop
sbb
enter
pop
stc
jae
dec
jp
or
fisttpl
adc
or
pop
mov
cmp
lds
inc
cmp
dec
cs
inc
push
cmp
xorl
imul
cmpsl
gs
movb
xlat
mov
es
outsb
or
xchg
and
push
mov
push
lods
movsb
dec
dec
sbb
inc
es
fchs
mov
addr16
sub
xchg
cmp
sub
cli
dec
mov
inc
fwait
sbb
icebp
mov
push
int
xchg
pop
clc
push
xorb
mov
and
adc
push
in
scas
jecxz
stos
mov
mov
sbbb
xchg
mov
sub
cmp
push
jecxz
jl
push
enter
clc
or
and
push
sub
scas
jns
xchg
lahf
adc
xchg
cwtl
cli
adc
out
fcompl
and
mov
push
gs
lahf
cmp
push
inc
test
or
xchg
jo
vmovaps
sub
mov
rclb
dec
dec
enter
or
cld
xorl
pop
jns
adc
mov
xchg
cmp
sahf
inc
pandn
in
mov
dec
cmp
lret
mov
jae
pop
outsb
loopne
add
out
jle
bound
lock
out
out
jmp
adc
xchg
das
push
mov
mov
inc
add
xor
or
aam
fisttpl
add
daa
imul
loop
int3
and
outsl
sub
mov
in
and
fbstp
mov
leave
xchg
jne
mov
lds
jl
sub
pop
mov
push
xchg
pop
sub
test
sub
push
sub
decl
mov
mov
ret
clc
cmp
cs
jns
iret
daa
mov
je
xchg
lock
lock
nop
xchg
pushf
jno
jbe
mov
daa
jmp
imul
sbb
loopne
sbb
xchg
inc
leave
mov
cwtl
jmp
bound
sahf
jae
lods
dec
aas
sub
test
es
push
add
pusha
jnp
aas
ds
mov
cwtl
cs
xchg
lock
inc
dec
jae
enter
xor
mov
sub
mulb
sub
lret
fdivrl
jle
pop
jne
fnstenv
loop
mov
mov
mov
add
outsl
pop
or
das
outsb
cltd
xchg
xor
xchg
es
insb
and
scas
add
ss
in
roll
adc
ret
fdivrl
mov
sbb
cmc
das
mov
dec
mov
jg
xchg
fs
addr16
rorl
inc
push
mov
mov
out
sbb
enter
int3
clc
lods
mov
jnp
imul
xlat
sbb
ret
sti
lea
pusha
push
mov
push
pushf
ret
test
out
sti
in
mov
jl
add
pusha
mov
jne
mov
or
jbe
xor
xlat
repz
xor
jecxz
mov
push
fnstenv
mov
mov
pop
and
repnz
daa
mov
inc
jne
cmp
addr16
inc
decl
xchg
push
addr16
adc
int
push
or
push
or
lods
sub
fdivrp
xchg
cmpsb
push
cmp
or
adcb
sub
pop
lods
cmp
and
subl
gs
mov
in
pushl
popa
fs
mov
mov
mov
jno
and
mov
ss
fucom
cmp
mov
jmp
cmpsl
rcrb
cmp
jl
stos
mov
mov
adc
incl
dec
daa
lds
stos
xchg
push
cmp
lret
jl
push
inc
push
xor
notl
imul
shl
push
push
aaa
adc
ret
mov
das
xchg
imul
mov
call
mov
push
pusha
les
sub
xchg
mov
mov
mov
push
stos
addb
js
ljmp
cltd
lcall
xor
mov
jge
xchg
pop
out
mov
jecxz
out
xor
and
lahf
fistpll
ljmp
cmp
and
aam
out
sub
jmp
popf
xor
divl
xchg
lods
or
not
mov
pop
adc
push
adc
stc
sar
dec
jp
pop
push
call
adc
mov
mov
jmp
mov
hlt
jo
leave
dec
outsl
stc
or
in
mov
out
inc
mov
imul
insb
xchg
sbb
test
test
and
inc
and
clc
and
nop
xchg
insl
fidivrl
loope
sbb
loop
bound
add
jp
inc
add
jecxz
xchg
xchg
inc
adc
mov
lds
or
inc
pop
popa
and
lds
mov
xor
jnp
pop
arpl
jl
or
jg
cmp
call
notb
repnz
lahf
xlat
dec
xchg
mov
lea
adc
data16
insl
or
push
push
jl
movsb
push
cmpsb
cwtl
xchg
out
mov
in
xor
fimuls
cltd
adcb
cld
sub
sbb
out
cmpsl
cli
push
jmp
in
movb
mov
imul
sti
fucomp
mov
add
out
cmp
ret
roll
cmp
jne
stc
adcl
xor
stos
and
sbb
hlt
adc
push
dec
movsl
shl
dec
push
jmp
push
into
lret
jmp
or
dec
adc
push
lods
fstps
jno
xor
les
inc
lret
aam
loopne
out
jno
sbb
icebp
xchg
nop
xor
push
pop
inc
mov
aas
lods
arpl
pop
push
mov
adc
or
mov
sbb
dec
push
sub
cli
cmp
push
aas
leave
xor
cwtl
add
and
or
xchg
push
cli
pushf
aam
scas
mov
ficompl
pop
inc
inc
fwait
xchg
outsl
addr16
loopne
ret
xchg
jge
push
cmp
out
loopne
push
or
mov
xor
shll
outsl
div
and
ss
call
jbe
mov
dec
in
sub
or
push
mov
pop
es
cmpsb
fdivp
mov
pop
xchg
pop
addr16
pop
sahf
leave
adc
das
jge
inc
xor
mov
lods
aam
push
dec
loop
imul
add
inc
mov
pop
repz
xor
sti
jb
mov
cmpb
and
and
sub
cs
loopne
fidivs
sub
ljmp
cli
mov
outsl
fiaddl
push
push
cmp
in
xor
and
sbb
inc
fnstcw
xchg
addb
xchg
push
cmpsl
dec
mov
or
sbb
cmpsb
cmp
int3
aaa
ds
mov
repnz
cmp
imul
cltd
inc
in
call
xchg
dec
ja
mov
test
sub
inc
jo
cmp
adc
sbb
jbe
in
add
movsb
iret
fstpt
dec
jnp
mov
xor
mov
jno
inc
pop
sub
push
daa
frstor
jmp
jmp
xchg
clc
lock
nop
sbb
or
push
out
ret
int
cmp
inc
shlb
shrl
push
mov
and
push
lods
pop
mov
and
addr16
and
ljmp
dec
int3
aad
mov
fwait
adc
xor
xor
inc
and
mov
sbb
pushf
push
or
out
outsl
xchg
jb
and
stc
and
mov
pop
hlt
xor
pop
cmp
sub
jl
fnstsw
pop
neg
cmp
dec
sbb
ret
sar
fildl
mov
pop
sbb
jno
cmc
cmp
outsl
je
in
lret
sti
push
mov
lcall
xchg
or
dec
sbb
aas
std
mov
jecxz
sti
dec
hlt
jmp
jge
scas
movsb
cmp
mov
inc
add
pushf
xor
jmp
push
jnp
jne
rorb
adc
fwait
xchg
popf
insl
and
inc
dec
sbb
fdivrl
xlat
aam
mov
jne
imul
adc
loopne
in
fisubs
jae
fstps
mov
sub
dec
adc
addr16
cmpsb
cmp
mov
push
push
pop
lcall
push
ljmp
nop
mov
in
inc
outsl
pop
pop
ficoml
push
repz
add
sbb
add
cltd
sub
ds
pop
sub
cmpsl
and
jne
xchg
xchg
jl
mov
xor
pop
packsswb
popf
adc
mov
outsl
hlt
xchg
jl
xorl
cs
cltd
orl
cld
shll
mov
mov
sub
orb
pop
sbb
enter
mov
fwait
xchg
lret
dec
loopne
das
xchg
dec
js
std
mov
lahf
and
mov
cli
push
cld
push
jp
aam
dec
roll
test
test
xlat
stc
pop
mov
in
lods
pop
or
mov
sub
and
int3
add
loopne
sti
pushf
or
pusha
aas
jmp
xchg
mov
push
mov
dec
xchg
adc
pushf
shll
mov
cmovg
pop
push
push
sub
mov
movsl
popf
std
in
pop
push
dec
push
int3
cmpsb
jo
cmp
lcall
mov
xor
add
rcl
out
xchg
push
js
stc
in
mov
scas
adc
pop
lds
fdivs
mull
mov
adc
inc
mov
aaa
lds
stos
insl
lret
ds
xlat
es
mov
or
adc
sbb
cmc
mov
pusha
out
add
jno
push
test
mov
push
test
push
in
cmp
hlt
mov
aad
andb
aas
add
adc
or
nop
pop
fsubrl
mov
cs
push
jno
enter
and
mov
sbb
arpl
mov
lret
stos
jns
fmuls
repz
pop
pop
add
jmp
or
shl
scas
push
push
lret
or
ret
mov
jns
daa
pop
aas
add
mov
cld
pushf
fistpl
data16
mov
cli
lcall
sbb
pop
dec
dec
fistpl
rcrl
jecxz
adc
call
aad
repnz
ja
push
xchg
dec
lock
aas
iret
lret
jne
mov
movsl
ret
outsb
jle
xchg
shl
ljmp
in
jbe
sub
ret
mov
jns
out
jb
cmpsl
xlat
lcall
push
inc
add
and
xor
dec
in
mov
pushf
int
bound
jmp
fsub
outsl
pop
movsb
jmp
shll
addps
pop
fistpll
sub
loopne
daa
inc
push
in
inc
cmp
lea
popa
sub
lcall
enter
movsl
aad
hlt
bound
shl
pop
pusha
sbb
sub
xchg
fwait
call
ret
pusha
xchg
cltd
cmp
jge
es
es
and
lds
int3
popf
fstpl
add
in
fptan
xor
sub
and
push
addr16
filds
adc
push
adc
or
adc
into
add
pop
mov
icebp
or
test
mov
sub
mov
pop
fiaddl
testl
mov
pop
sbb
sbb
mov
rcrl
and
jecxz
and
cmp
cmp
call
aas
push
sbb
insb
out
inc
aaa
pop
inc
inc
scas
push
sbb
pop
and
add
divb
push
push
outsl
adc
call
insl
dec
popf
xor
lods
pop
jmp
xchg
push
movmskps
adc
jno
sub
xchg
jge
push
mov
adc
gs
stos
dec
mov
jo
inc
rorl
mov
mov
dec
xor
mov
int3
test
xor
test
arpl
rorb
lahf
sbb
shll
sub
stc
inc
enter
mov
dec
or
faddp
pushf
jle
cmpsb
in
push
lret
adc
push
inc
gs
mov
mov
push
lahf
aad
mov
pop
mov
cwtl
int3
mov
ret
mov
loope
out
enter
sbb
lds
push
repnz
pop
fisttps
jle
divl
test
mov
jp
divb
jae
icebp
pop
adc
push
jno
xchg
repz
into
jmp
push
call
adc
push
push
test
fwait
adc
jg
pop
or
cli
and
cmp
call
mov
mov
push
mov
cmp
cmp
cmp
stc
daa
and
decb
mov
cltd
and
bound
xchg
ret
outsl
scas
scas
lret
pop
insb
js
jno
aas
rorl
jge
and
movl
in
xor
lret
test
jo
fisubl
movsl
in
hlt
scas
orb
push
mov
cmp
loope
pop
sub
imul
xor
cs
and
and
lcall
in
mov
pop
inc
xor
daa
dec
stos
cs
pop
add
daa
or
xchg
hlt
add
outsl
mov
ja
inc
cmpsl
pop
jmp
push
inc
icebp
ja
shl
cmpl
sti
xor
repnz
orl
mov
mov
imul
mov
rorb
jns
jno
push
jbe
adc
or
jo
cld
std
mov
inc
inc
test
and
jae
pusha
ret
adc
test
xchg
jecxz
jnp
xor
decl
fisttpl
pushf
push
clc
int3
orl
pop
or
inc
add
jnp
sbb
int
movsb
cltd
daa
inc
movsl
push
fnstsw
stos
loopne
jecxz
lods
roll
mov
push
xlat
xor
mov
mov
jecxz
push
dec
lods
stos
jbe
pop
mov
fdivs
jg
test
pop
in
jae
push
dec
lods
addr16
movsb
ss
in
pop
sti
push
xor
adc
cld
daa
mov
mov
pop
cmp
xchg
sub
sbb
lods
or
cltd
cmpsl
rorb
test
jg
mulb
mov
sub
xchg
loope
pop
fisttps
adc
pushf
adc
dec
popa
idivl
movsb
push
fs
pop
lret
in
mov
repnz
in
sbb
adc
ljmp
and
cwtl
xor
jae
push
aaa
addl
mov
and
lods
icebp
popf
sbb
in
xor
mov
sbb
lea
mov
add
or
aad
pop
arpl
out
xor
int3
aad
bnd
repnz
fdivrs
pop
xchg
cmp
mov
std
lret
movsb
mov
icebp
push
sub
push
and
mov
lcall
out
std
fcoml
sti
scas
jg
leave
mov
loope
cmp
push
mov
pop
push
pop
xchg
js
sbb
or
and
or
in
xchg
sbb
jg
mov
xchg
shll
mov
cmp
mov
jecxz
pop
xchg
stos
or
inc
fnstcw
je
ja
xchg
mov
addl
in
mov
adc
sub
cmp
xchg
or
sub
popf
out
lods
les
lock
inc
mov
jne
push
mov
pop
sub
in
movzbl
jmp
cmp
into
fsubrs
aam
in
addr16
frstor
adc
pusha
inc
dec
out
lcall
push
xor
sbb
push
pop
mull
fdivrl
mov
adc
aam
ret
stos
mov
pop
clc
jbe
les
test
out
fisubrl
xlat
cmp
sti
jb
out
pop
lods
rcrl
and
imull
mov
into
add
sub
jne
lret
stos
scas
xchg
inc
xchg
dec
clc
out
addr16
fldl
mov
mov
outsl
mov
add
inc
lods
pop
fsubl
jl
sbb
cli
sub
hlt
aad
es
or
enter
dec
das
and
fidivl
xor
sbb
sub
jge
or
mov
inc
imul
mov
lret
mov
movsb
rorl
mov
cwtl
sbb
mov
outsb
mov
xchg
repnz
jmp
lret
cmc
movsl
sti
dec
jno
pop
aaa
rorl
into
push
daa
aam
or
mov
mov
mov
test
sarb
lods
sub
lods
fwait
dec
sub
faddl
pop
or
or
ds
into
or
jns
jge
int3
leave
insb
sub
or
mov
sub
movl
inc
add
inc
lea
js
mov
mov
imul
adc
pop
lcall
popf
push
and
scas
jp
in
in
and
into
jne
pusha
scas
dec
je
inc
bound
xor
sbb
bound
nop
xchg
mov
mov
inc
data16
or
mov
and
inc
or
sub
or
nop
addr16
xor
lea
jae
jne
add
aas
push
lea
fs
add
subb
inc
cmp
sbb
adc
mov
pop
jmp
inc
or
mov
fxch
mov
cmc
push
or
repz
andl
sahf
out
push
outsl
and
pop
jle,pn
std
mov
push
lret
cwtl
fsub
sub
pushf
and
into
dec
sub
arpl
mov
fnstsw
xchg
push
inc
push
les
mov
roll
aaa
stos
outsb
test
sub
cmp
xchg
addb
jl
sub
pop
in
pusha
push
push
mov
adc
push
mov
ss
aas
or
sbb
push
cs
inc
ja
cmp
mov
cltd
mov
pop
mull
int
and
cmp
mov
lret
dec
cmpsb
inc
repnz
xchg
mov
mov
rcll
cmp
dec
mov
adc
and
mov
fcomps
call
les
ret
sub
dec
imul
popf
imul
xchg
cli
cmpsl
punpcklbw
mov
xchg
jmp
jnp
cltd
insb
mov
or
jmp
sub
in
cmp
addr16
out
imul
imul
jns
lods
sbb
sbb
in
sub
xor
pop
loope
rol
hlt
ret
dec
xor
lahf
mov
mov
icebp
mov
pop
arpl
mov
rcrb
dec
outsl
adc
int
pop
sub
mov
pop
ljmp
cmp
mov
mov
xchg
mov
adc
sti
sbbb
inc
sbb
xchg
iret
pop
in
outsb
btc
cmp
pop
cmp
mov
jmp
rcrb
clc
fnstsw
push
pop
dec
dec
data16
xchg
push
mov
lds
lds
cmc
xchg
negb
ret
pop
or
dec
xchg
scas
mov
rorb
lods
mov
add
lcall
shll
xlat
cmp
push
lods
add
push
push
jnp
cmp
cmp
daa
add
mov
dec
adc
ja
insb
cmp
sti
inc
test
add
and
cmp
rcl
int3
loope
jns
pushf
fcomp
push
mov
movsb
out
pop
std
sti
pop
and
jo
mull
or
mov
push
jno
stos
adc
test
movsl
jnp
mov
fcomps
pop
push
jns
cltd
pop
mov
or
icebp
xchg
shll
gs
scas
js
inc
pop
xchg
call
les
sub
xchg
js
xor
call
in
adc
stc
fmull
xor
movsb
cmp
xchg
loope
jl
jb
mov
jecxz
shrl
mov
mov
in
pop
and
ja
cmp
xor
add
mov
sub
std
push
leave
jnp
fldt
fistl
and
push
into
or
cmp
inc
out
xchg
bound
cli
mov
adc
sbb
fucomi
xor
pushf
int3
jno
fnstenv
hlt
cmpsb
cltd
ret
push
xchg
inc
sub
popa
popa
and
idivb
push
fwait
push
out
out
or
pop
jbe
fsubs
cwtd
je
inc
or
shrb
jp
sub
aad
shll
cld
lock
out
pop
pop
pusha
outsl
int
sbb
push
push
scas
cwtl
in
aad
gs
mov
mov
inc
jmp
loope
adc
ret
imul
lock
inc
mov
jae
outsl
pusha
or
ss
jge
in
call
sub
adc
and
icebp
scas
jge
fwait
and
in
je
scas
xchg
mov
jae
out
int3
stc
pop
adcl
cmpb
sbbl
cmp
cmp
inc
outsb
xor
sub
in
insl
mov
xor
inc
add
mov
movsl
lods
mov
pop
sub
insl
bound
mov
inc
daa
adc
lea
xchg
outsb
mov
mov
or
and
stc
push
in
adc
imull
sbb
push
xchg
xchg
mov
pushf
dec
mov
mov
mov
imul
push
lahf
xchg
insl
push
xchg
insb
fildll
fcoms
lock
mov
xlat
movsb
dec
cmp
in
inc
sub
pop
sar
stos
je
sarb
cmp
outsl
push
and
fdivrl
mov
dec
mov
sbb
xchg
xor
sub
mov
or
cmp
int3
ljmp
add
imul
aas
cwtl
push
add
add
add
xor
mov
and
sti
fists
fisubrs
jl
or
cwtl
int
pushl
dec
cmpsb
pop
cmpsl
fucom
out
loope
add
pop
ret
pop
jne
in
jmp
aas
lahf
ljmp
sub
cltd
nop
stos
pop
mov
mov
sbb
xor
push
scas
insl
popa
iret
into
clc
xor
out
out
loop
sbb
jg
sbb
aam
adc
icebp
xchg
xchg
stos
sbb
or
dec
adc
roll
xchg
push
outsl
xor
in
or
dec
sarl
push
push
cmp
outsb
jg
or
sub
cmp
test
jnp
out
jne
push
fstpl
mov
push
add
jns
push
add
sub
lods
inc
mov
xchg
movsb
fs
js
lock
out
xchg
inc
mov
xor
addr16
lcall
pop
loope
shrb
xchg
cmp
sbb
jecxz
sbb
xorb
dec
cmpsl
js
xor
xchg
xor
add
lret
rcr
mov
ja
mov
shr
int3
cmp
push
jbe
mov
movsl
sbb
decb
out
aam
pop
imul
push
sbb
test
cmpsb
mov
jae
daa
not
xor
sar
das
mov
test
hlt
xchg
fbld
and
adc
ljmp
data16
xchg
imull
jae
cs
bnd
mov
sub
inc
jg
push
jmp
dec
push
fimuls
and
sub
pop
test
std
pop
xlat
jae
push
adc
cmpsl
cli
dec
gs
jne
clc
stos
shlb
data16
cmp
inc
stos
orb
pop
pop
cli
xchg
cld
inc
sub
push
sbb
lea
addr16
lea
push
push
adc
cmp
jno
xor
imul
and
fsubrl
lea
imul
mov
mov
cmp
lea
add
xchg
add
or
imul
mov
outsb
and
inc
pop
inc
push
dec
cmp
sbb
aad
inc
mov
push
and
jo
das
xchg
and
xlat
lods
inc
lahf
lods
dec
iret
jecxz
fcoms
ds
fdivs
jbe
into
push
bound
and
xor
adc
add
enter
push
cwtl
test
sub
push
inc
push
aas
or
or
lock
inc
into
xchg
lret
sbb
das
es
scas
ja
cmpsb
mov
and
xchg
mov
adc
push
jo
test
call
lock
repz
addr16
repnz
cli
popf
cli
sub
push
mov
call
scas
in
xchg
cwtl
cmp
mov
daa
out
in
arpl
jo
arpl
pop
add
stos
push
and
out
and
lret
cmp
popa
arpl
jns
aaa
imul
and
gs
mov
xchg
dec
enter
sub
ds
movsb
dec
nop
aas
arpl
stos
pushf
push
add
push
jb
jnp
shll
fidivs
test
inc
dec
cli
outsb
iret
add
imul
xlat
cli
pop
pop
inc
inc
mov
cmpl
inc
adc
fucomp
mov
mov
lcall
adc
js
ficomps
xchg
dec
es
sahf
xor
out
mov
ret
push
enter
imulb
dec
xchg
cmp
iret
or
lcall
in
dec
ljmp
aaa
pop
in
or
insl
cs
mul
push
fwait
mov
sbb
sub
pop
arpl
notl
add
iret
mov
xlat
sub
lret
lock
ret
sbb
daa
fsubs
mov
or
mov
and
repz
sub
out
pushf
push
push
push
cmp
daa
loop
push
adc
xchg
add
mov
push
push
out
fwait
sub
frstor
jle
insb
scas
incl
xor
movl
in
insb
pop
jmp
pop
inc
fisttpll
xchg
jae
xchg
scas
push
popf
pop
pop
js
add
sbb
shlb
dec
or
rorb
out
dec
cmc
outsl
leave
lret
mov
add
stos
stos
imul
cld
loop
push
adcl
jno
dec
je
mov
rcrl
into
clc
cwtl
xchg
test
lods
repz
test
or
rcrb
das
mov
dec
cmpsb
push
sti
jnp
jl
dec
push
mov
sub
xchg
push
or
jp
cmp
cwtl
mov
leave
bound
lahf
sbb
loop
cltd
mov
rcll
andb
lcall
aaa
in
mov
add
aaa
cwtl
and
cmp
and
push
xchg
sub
fucompp
imul
xor
repz
mov
jmp
ret
int
mov
dec
mov
test
imul
mov
les
mov
leave
jnp
hlt
jmp
out
sub
scas
and
es
push
in
jne
xchg
and
movnti
mov
sti
push
cmp
jne
mov
sbb
dec
jns
sbb
mov
into
outsb
and
push
test
and
rorb
leave
test
jge
js
rclb
in
imul
insl
jg
pop
pop
sti
fldl
je
push
enter
add
icebp
adc
push
mov
ret
add
jae
mov
pop
sub
adc
cmp
push
enter
test
jle
jns
lock
scas
mov
sbb
cmc
jge
pop
fadds
in
stos
nop
or
mov
cmpl
std
je
fsubr
rcrb
ds
pop
pop
sbb
js
add
adc
cmpsb
xorl
adc
int3
sbb
loope
pusha
add
int
sbb
popa
mov
inc
dec
call
loope
xchg
in
pop
stc
int
out
fidivs
mov
movsl
pop
addr16
cwtl
push
lock
push
fwait
daa
mov
pop
and
arpl
int
mov
jp
dec
adcl
scas
dec
stc
int
jl
pop
xchg
mov
pop
je
dec
scas
aaa
or
aam
int
dec
xor
pop
lods
dec
push
icebp
outsl
shrl
rolb
pop
pop
xor
imulb
enter
mov
fisubl
jmp
std
cmpsb
test
xor
and
and
jns
mov
cmpsl
adc
xor
sti
push
bound
sbb
test
es
outsl
cwtl
push
add
sbb
fcmovu
shrb
and
sti
xchg
jp
jns
mov
xchg
xchg
subb
es
std
cmp
sahf
fadds
mov
sbb
adc
pop
push
popa
sbb
lcall
orl
insl
loopne
cmp
xchg
jmp
sbb
sbb
in
xor
cmp
xchg
jae
dec
push
adc
mov
mov
pusha
dec
inc
iret
lea
adc
or
add
mov
mov
loopne
inc
inc
dec
shl
stos
push
dec
jp
xchg
fiadds
and
shrb
push
mov
fdivs
xchg
mov
mov
outsb
mov
mov
clc
ret
das
jo
mov
or
adcb
push
loop,pn
movsb
push
fdivrl
adc
sub
lods
shlb
andb
ds
mov
int
iret
cmp
add
fcoml
std
movsl
and
and
cmp
cli
enter
aad
mov
inc
mov
in
cmp
push
ret
js
popa
mov
sti
mov
mov
popf
inc
icebp
xor
pop
push
loope
cmp
dec
out
mov
shlb
add
push
add
lret
cmp
outsb
jae
pushf
insl
jl
cmp
repnz
xchg
aad
repz
sahf
lahf
adc
dec
pop
popa
cltd
int3
xor
xchg
mov
aas
jne
popf
es
jae
push
pop
jo
shrb
pop
or
inc
push
mov
mov
xor
and
sub
pop
jb
and
xchg
cmpl
adc
cmc
lea
nop
fxch
xchg
push
lds
fisttpl
fs
test
push
jge
cltd
push
in
imul
lods
add
xchg
in
xor
ficoms
cmp
add
ret
cmp
iret
rorl
mov
pop
jbe
mov
cs
nop
push
cmp
mov
jne
lcall
jo
add
imul
jle
xor
outsb
fistpll
jmp
cmc
daa
dec
lds
cwtl
fcoml
fnstenv
cmp
andl
clc
scas
adc
fs
add
fadds
mov
pop
pop
mov
jnp
xchg
dec
mov
add
into
jmp
pop
subl
sub
shlb
iret
xchg
popa
mov
sbb
sub
add
sbb
cmpl
pop
add
stos
sbbl
jecxz
out
mov
or
pop
stos
div
pop
push
aad
xchg
or
test
cmp
xchg
leave
sbb
ret
or
enter
pop
int3
test
sar
seto
mov
lahf
mov
lret
pop
dec
push
pushf
popa
jg
mov
out
imulb
popa
lahf
popl
les
test
push
or
inc
xchg
xchg
sbb
and
and
jno
cltd
into
push
cmc
sub
push
test
imul
iret
xchg
pop
cmp
gs
insl
cs
scas
mov
cmpsb
adc
cli
mov
sbb
dec
xlat
outsl
sbb
sbbl
add
push
cmp
mov
notb
rorb
ret
test
lods
repz
scas
test
dec
mov
xchg
pop
mov
leave
out
lahf
inc
in
mov
loope
out
cwtl
insb
cmp
aam
cld
xchg
mov
cmpsl
mov
cwtl
xchg
mov
mov
inc
adc
gs
lcall
mov
mov
vpaddq
data16
sbb
sub
outsl
inc
or
cltd
mov
jecxz
cmp
pushf
inc
dec
jae
test
jo
inc
add
aam
mov
cli
lret
jbe
stos
mov
bswap
movsb
stc
bnd
movsl
cmc
cmpsb
loope
notl
jl
push
xchg
scas
sarb
jmp
cwtl
fistpll
or
movsb
cwtl
xor
out
and
inc
push
aas
int
icebp
adc
arpl
mov
inc
dec
scas
in
pop
push
cmp
addr16
mov
sbb
cwtl
gs
xchg
fdivl
mull
out
lds
ret
cmp
cs
fcompl
or
xlat
sub
pop
out
cmc
push
push
mov
loopne
and
ret
jnp
out
popf
or
icebp
cmpl
cmp
mov
fmulp
push
push
mov
xchg
dec
mov
mov
sub
xchg
pop
mov
inc
inc
xchg
fmuls
add
add
bound
mov
jl
out
cmp
or
stos
inc
or
dec
mov
aas
and
inc
in
dec
fisubrl
sbb
inc
scas
and
add
xchg
sub
out
push
fstl
push
jnp
sub
jmp
jae
pop
and
jg
cmpl
fdivrl
and
and
mov
outsb
cmpsb
icebp
xchg
add
mov
mov
dec
xchg
pop
loop
insb
aad
outsl
mul
push
sub
and
pusha
cmp
jno
mov
push
push
xor
xchg
mov
insb
adc
cmc
out
adc
and
push
mov
into
sbbl
mov
jno
rcll
in
daa
or
adc
xchg
mov
loopne
orl
hlt
push
sbb
and
out
xchg
rolb
arpl
aam
add
outsl
jbe
push
stc
outsb
sub
xchg
pop
popa
or
lret
data16
mov
inc
andl
dec
xor
lods
hlt
push
push
imul
dec
ss
mov
ss
push
mov
rcl
dec
xchg
jns
sbb
arpl
fnstcw
adc
mov
mov
mov
sbb
push
iret
mov
dec
or
pop
xor
daa
pusha
jmp
into
xor
pop
add
xlat
jg
stos
adc
nop
dec
mov
fnsave
xor
je
scas
imul
aaa
sbb
xor
nop
or
ds
inc
jle
stos
mov
imul
inc
mov
adc
cmc
aas
repz
fdivl
in
mov
pop
adc
push
das
mov
cmp
adc
pop
dec
push
jae
jecxz
jp
pop
iret
test
cltd
lods
outsb
mov
addr16
cmp
movsl
mov
cmp
outsb
jl
push
je
adc
pop
inc
cmp
mov
in
in
inc
mov
sub
fildl
lea
ja
jg
fmuls
nop
inc
sub
xchg
mov
fs
xor
arpl
xchg
inc
sarb
fmull
cld
out
xchg
scas
lock
icebp
mov
push
pop
hlt
repz
jnp
inc
xchg
xchg
add
sub
xor
clc
repnz
inc
shl
jl
ficoml
mov
jl
adc
adcb
scas
xchg
into
fldl
inc
xchg
lea
jae
movsl
nop
and
push
insb
add
jecxz
ljmp
aad
xchg
popf
into
pop
mov
xor
xchg
out
rolb
gs
std
int
push
shll
xor
je
cld
cmp
mov
lea
clc
test
cmp
adc
xchg
bswap
dec
repz
repnz
push
mov
rcrb
push
mov
pop
incl
mov
add
cmp
adc
xor
xor
and
mov
je
jge
adc
ss
dec
inc
les
test
jmp
mov
inc
lods
push
inc
es
add
mov
inc
mov
sbb
stc
jo
xlat
mov
inc
data16
test
inc
adc
fistps
or
aaa
in
xchg
icebp
adc
sbb
add
xor
lcall
in
aam
dec
lods
leave
cmpl
inc
ds
push
fstps
xor
rclb
adc
fcmove
add
adc
cmpsb
adc
sbb
dec
imul
ds
push
or
inc
insb
push
pusha
or
and
inc
popf
add
pop
lods
pushf
int3
ret
and
jl
pop
mov
popa
inc
int3
jne
jl
mov
inc
jl
into
popa
dec
push
fs
pop
shll
or
mov
div
mov
fsubs
das
aas
aas
addr16
pop
nop
add
lock
fdivrl
inc
shl
fs
insb
loopne
pushfw
jl
mov
int
stc
iret
ss
fcoml
sub
or
push
jp
sub
inc
fisttps
and
fidivs
mov
cltd
push
lcall
jo
jmp
clc
push
and
pop
faddl
idivl
sbb
lock
aas
jo
push
mov
imul
sub
adc
push
mov
imul
sub
xor
cwtl
mov
aas
js
pop
mov
ljmp
push
xchg
jne
add
push
data16
outsl
push
mov
cs
imul
add
mov
or
cs
dec
aad
pop
test
inc
or
adc
cmp
xor
cwtl
lea
ljmp
or
or
insb
sub
inc
rorb
int3
xor
insb
sbb
dec
dec
add
nop
cs
jne
cmpsl
hlt
sahf
ror
js
add
in
adc
push
test
mov
ficomps
imul
cli
pop
push
cmp
push
pop
rcrb
dec
pop
lea
or
je
stc
mov
out
inc
in
clc
lret
push
test
pop
xchg
and
pop
sbb
mov
mov
pop
cmp
cmp
xchg
das
jnp
xchg
inc
add
inc
out
push
pop
mov
pop
mov
fwait
dec
sub
inc
or
pop
sarb
cmp
or
adc
ss
ss
fistps
jnp
pop
hlt
insb
inc
pusha
jg
bnd
dec
inc
jl
xorl
and
loop
and
repnz
mov
xchg
icebp
in
test
jns
sbb
sub
mov
aad
mov
aas
in
popf
xchg
in
xchg
stos
movsl
jbe
idivb
jge
xlat
xor
mov
lods
mov
pop
push
mov
cld
imul
jno
xor
nop
dec
imul
inc
adc
pop
cwtl
jno
fisttpl
cmp
stos
push
pop
in
dec
mov
adc
ret
insb
fs
and
xchg
and
adc
fnstcw
dec
in
mov
or
dec
rcrb
jl
mov
nop
pop
jno
aaa
pusha
inc
pop
mov
mov
push
mov
lcall
cmc
pop
mov
movsl
pop
push
test
out
insb
dec
dec
int
add
mov
mov
jge
xlat
sbb
dec
add
out
push
jbe
jmp
mov
lods
add
xchg
movl
and
and
aas
add
in
and
jbe
pop
push
lods
add
inc
pop
mov
sti
mov
mov
loop
adc
test
lcall
push
dec
cmpsb
lods
call
imul
js
fldcw
sbb
andl
or
jne
repnz
cs
inc
lock
xlat
loope
sub
addr16
dec
cld
out
mov
xchg
mov
ret
ljmp
sub
leave
cs
push
sbb
fisubrs
xor
and
notl
and
stc
nop
nop
xchg
imul
cld
mov
notb
jo
jne
in
mov
cmc
jp
insb
mov
testl
inc
fnstenv
push
push
js
bnd
popa
lods
jnp
frstor
dec
cld
rcl
hlt
or
fidivs
xchg
xchg
shll
or
aad
xor
xor
test
std
mov
xor
jbe
imul
je
mov
jecxz
jbe
pop
jecxz
test
push
repz
jp
out
cs
iret
into
in
js
mov
or
mull
scas
bound
cmp
idivb
cltd
bound
pop
imul
gs
fisttpl
iret
es
loopne
mov
add
jno
stos
or
mov
pop
cs
mov
mov
jmp
fcomip
push
add
xor
lea
and
jle
adc
les
cmp
cmp
pushf
ds
or
fwait
cmp
ss
sbb
aad
bswap
mov
jg
pushf
insl
jne
xchg
daa
xor
or
aaa
or
es
xlat
sti
cli
mov
pop
jae
push
aaa
add
in
pop
jmp
pop
fnstenv
cmc
lahf
data16
lret
mov
adc
movsl
cmpsb
pop
aam
jmp
mov
imul
aas
lods
push
jbe
in
xor
xchg
ds
ret
xchg
popa
js
out
out
call
pop
add
stos
dec
iret
adc
mov
into
in
daa
push
xor
fwait
lret
out
xor
sub
int3
ffree
push
aam
ret
jns
cli
xchg
nop
jne
mov
cwtl
pop
cmp
ss
fucomi
lret
stos
hlt
lcall
dec
stc
subb
cwtl
das
data16
and
push
mov
mov
lds
xor
ljmp
in
fiaddl
pop
mov
lods
or
cli
adc
rolb
pop
cmp
aaa
jno
inc
cld
add
es
pop
mov
outsb
gs
outsb
cmp
xor
fadds
inc
cs
pushf
sub
sbb
lcall
rclb
not
cmp
lods
push
xchg
cli
push
push
hlt
jnp
pushf
sahf
lds
cmp
mov
pusha
push
cmp
shl
mov
lahf
sarl
jo
cmpsb
mov
ret
aam
pop
into
sub
add
mov
adc
pop
jbe
and
and
push
into
adc
cmp
test
and
cli
scas
xlat
rolb
pop
add
add
inc
loopne
adcb
adc
out
pop
jecxz
adc
scas
movsb
lods
dec
cmp
adc
push
jmp
xchg
mov
inc
push
push
pushf
int
jmp
jno
cli
or
cmp
sahf
and
in
cmp
mov
mov
mov
repz
push
lret
ja
js
pop
mov
bound
add
outsb
jnp
cmp
fcmove
adc
push
test
xchg
and
mov
cli
sub
int
lods
fcmovbe
push
and
rolb
lods
fistpl
loop
scas
es
pand
jne
dec
loop
jbe
ja
movsb
rcrb
loopne
mov
loopne
inc
pushf
scas
dec
das
pusha
push
mov
insl
loopne
js
add
pop
repz
and
fisubrs
mov
mov
mov
loop
pop
pop
in
leave
jbe
cs
adc
loop
adc
xchg
inc
adc
sub
sbb
push
adc
arpl
sbb
cli
sub
mov
pop
mov
pop
mov
cld
je
lahf
pop
in
jp
xchg
daa
and
divl
mov
in
mov
rolb
and
sbb
xorps
popa
fildl
xor
sbb
or
add
daa
imul
and
xchg
add
test
je
xchg
das
xchg
cmp
push
jecxz
lea
in
xor
cld
mov
fdivs
out
add
loope
rclb
data16
into
addr16
mulb
mov
push
mov
push
push
mov
out
lcall
nop
test
ja
out
mov
mov
lar
mov
inc
inc
mov
mov
push
pop
roll
cmc
loope
sti
hlt
and
popa
xchg
repnz
and
push
divl
mov
cmc
jb
or
js
sub
jno
test
and
gs
sbb
popf
jmp
loope
rcrl
ret
icebp
jne
inc
ja
mov
jae
add
imul
push
popa
xor
xchg
xchg
mov
mov
xlat
sbb
sub
inc
fbstp
and
ljmp
or
test
sub
ret
in
lret
cld
dec
mov
cmp
cld
cmp
push
aam
jecxz
jae
sub
jg
lret
les
xchg
shlb
pop
mov
jmp
add
mov
sbb
jmp
add
dec
ss
pop
movsl
sbb
sbb
aad
pop
bound
or
enter
pop
stos
inc
inc
sbb
aad
hlt
aas
hlt
sahf
aam
repnz
jnp
addr16
xor
inc
jle
outsb
ss
push
lods
repnz
dec
rol
mov
andb
ret
dec
movsl
push
popa
test
rcrb
stos
cs
xchg
arpl
cmpsl
in
mov
xor
std
cmpb
inc
jno
hlt
das
fldl
imul
xchg
arpl
jge
test
or
mov
jne
inc
dec
xor
mov
pop
cmp
push
mov
or
out
cmp
jmp
cmp
in
mov
xchg
scas
xchg
add
ret
add
xchg
enter
jmp
fisubs
int3
addb
mov
fxch
pop
and
hlt
cmp
pop
pcmpeqb
push
fildl
js
cs
push
fwait
idiv
mov
neg
jb
push
fcompl
push
shll
inc
les
pop
mov
pop
push
mov
int
inc
pop
lds
mov
in
data16
daa
sbb
frstor
clc
sbb
js
mov
shll
push
lcall
aaa
shl
push
xor
mov
mov
inc
lret
or
sbb
mov
mov
stos
inc
popa
nop
test
icebp
outsl
dec
bound
mov
push
cltd
and
out
aas
mov
das
bound
and
jb
out
clc
sti
cmc
jecxz
test
mov
xchg
push
inc
cmp
stos
in
scas
ret
pusha
test
cs
dec
add
xchg
jo
and
imul
int
out
or
push
out
lds
aam
xchg
sahf
push
pop
jle
jl
enter
cwtl
loop
dec
cmpsl
or
jge
mov
out
inc
enter
inc
cmc
jnp
enter
ss
xlat
inc
int
push
cmpsb
scas
pop
adc
pop
push
push
mov
or
loopne
mov
jg
insl
or
push
fsubrl
mov
bound
xor
cmovge
xchg
inc
rorb
push
cmp
fsubrs
fistl
pop
mov
mov
xor
insb
repz
ret
imul
scas
mov
sbb
mov
lahf
push
push
sub
fsubrp
sub
lcall
fbstp
jb
push
mov
mov
in
cli
inc
dec
clc
adc
or
inc
fwait
mov
cmc
rcl
mov
jae
in
mov
mov
sbb
mov
leave
xor
cli
cmp
sahf
ficompl
inc
aad
or
or
mov
incb
cltd
mov
pop
out
xchg
push
jne
das
gs
or
pop
push
pop
gs
mov
xor
pop
arpl
inc
xor
int3
mov
out
scas
inc
sbb
daa
dec
sbb
fstl
or
fcmove
leave
mov
clc
cmp
xchg
sub
xchg
mov
mov
or
cmp
dec
mov
mov
data16
sbb
push
mov
xor
scas
push
aaa
das
test
or
fcmovnu
mov
mov
xor
icebp
or
or
xor
fidivl
rolb
xor
add
scas
fwait
push
jg
sbb
out
inc
sarb
icebp
aad
pop
lods
lea
fsubrs
or
dec
pop
test
xchg
dec
mov
dec
mov
add
xor
sbb
in
lahf
jnp
pop
in
sbb
lods
insb
bound
lret
rolb
rcll
jle
sbb
aaa
cltd
push
loopne
xchg
adc
push
das
fsubs
jae
cmp
adc
fisubrs
and
mov
mov
repz
mov
xor
push
push
out
mov
pop
pop
bound
arpl
push
mov
cld
insl
and
fs
jge
repz
xchg
xchg
cli
pop
sti
push
jp
adcb
xchg
pop
scas
adcb
jbe
xchg
dec
jae
sub
out
sbb
sbb
cmp
or
imul
stc
stc
sbb
or
fists
negb
aas
out
pop
int
outsl
cmc
test
xor
cmc
mov
adc
sbb
jns
push
jno
cmpsb
mov
or
in
cmpsb
movsb
inc
mov
cmpsb
jae
push
pop
or
into
mov
dec
pop
outsl
mov
mov
sbb
sbb
lret
insl
xchg
xor
push
jg
dec
and
jle
aaa
mov
mov
xor
mov
adc
mov
push
jb
adc
outsb
mov
movsb
cmp
mov
into
out
out
std
rorb
mov
rorb
fwait
add
jb
insb
das
stos
pop
adc
add
cmp
out
and
add
iret
add
stos
stos
xor
sbb
leave
xchg
js
pop
je
lea
fcmovu
or
dec
out
pop
cli
sbb
imul
jecxz
and
and
adc
xor
roll
outsb
in
fwait
ret
xor
outsb
jge
mov
cmp
ret
cmpsl
pop
into
leave
cmp
pop
in
in
mov
decb
sub
cwtl
mov
sbb
mov
pop
dec
and
pop
xchg
mov
mov
xor
adc
and
mov
and
scas
repnz
sub
ret
in
shrl
pop
jecxz
arpl
xchg
pushl
shlb
addr16
pop
pop
or
addr16
push
sub
mov
fnstsw
ss
mov
pushf
loop
loopne
jb
clc
push
aas
mov
or
sub
imul
daa
insb
jns
scas
iret
into
jne
movsb
rcr
lea
jae
ficoml
movsb
int3
pop
sbb
jns
addr16
dec
add
sub
arpl
lret
stos
hlt
outsl
jmp
into
dec
pop
mov
add
sahf
in
and
ds
out
sahf
add
add
cmc
adc
add
aaa
int3
sahf
sti
sub
aaa
in
rcrl
ret
fistpll
cmp
int
icebp
mov
repz
jg
repz
mov
mov
sub
inc
test
push
int3
cmc
push
daa
dec
jge
push
inc
lret
inc
outsb
fstl
add
mov
adc
or
push
jns
mov
js
and
pop
lahf
aas
rcr
dec
inc
call
ja
mov
aad
test
fs
sub
test
xchg
jae
push
jae
jg
sbb
loope
xor
ss
test
test
lcall
and
push
pop
inc
loop
dec
fildll
insb
cmpsb
pop
push
into
adc
mov
cli
in
mov
movsb
and
ret
or
call
out
dec
mov
inc
int
jbe
mov
call
in
fcmove
pop
stc
jp
enter
ja
lods
cli
adc
pop
ret
inc
add
xchg
dec
scas
add
inc
cmp
orb
dec
test
jbe
sarl
pop
jmp
sbb
and
cltd
rol
pop
dec
rcrb
daa
mov
mov
ss
dec
ficoms
or
sub
cmpb
xlat
and
and
sub
xchg
mov
rcl
in
lret
into
scas
arpl
xor
xchg
cmpsb
dec
jl
cmp
add
sub
pushf
fldt
iret
out
mov
adc
jl
lahf
jmp
jle
sbb
dec
mov
jns
mov
push
hlt
scas
xor
loop
sbb
mov
nop
or
mov
psubsb
mov
mov
xchg
call
adc
push
adc
aad
jne
sbb
sbb
mov
inc
std
addr16
test
into
or
add
pop
addr16
jmp
or
outsl
leave
mov
out
push
xor
shrb
ljmp
cmp
lods
sbb
shll
and
cmpsb
xor
arpl
or
and
mov
jle
loopne
xchg
xor
inc
cmp
out
into
dec
xchg
pop
mov
jns
inc
push
xor
repz
cmp
cmp
or
mov
ret
daa
in
mov
mov
psraw
mov
pop
cmpsb
ss
ret
adc
fwait
ret
dec
cmp
fnstcw
hlt
jge
xor
stos
xor
or
pop
test
ljmp
sub
adc
xchg
jle
fstpt
inc
rcrl
xchg
cmc
or
xchg
cmpsb
dec
adc
test
inc
shl
or
dec
xor
in
cli
and
mov
hlt
inc
sub
dec
xor
adc
or
out
pop
lods
xor
leave
cmpsb
cmp
cmp
in
cmp
push
insl
scas
inc
aaa
clc
cmp
or
xchg
mov
cmp
mov
cmp
ret
test
mulb
pop
push
inc
fadds
aaa
shrb
cmc
lret
cwtl
sbb
lcall
lcall
fcomi
pop
je
sub
decb
jne
or
testb
mov
mov
jg
jl
scas
iret
fistpll
pop
adc
hlt
outsb
pop
xor
repnz
fldt
sbb
daa
xor
xchg
push
icebp
inc
stos
rorb
mov
mov
cld
fistl
add
rclb
cmp
repnz
and
lods
and
mov
and
mov
aam
into
cli
cmp
dec
dec
subl
cli
jp
insl
push
xchg
jmp
xorl
adc
cmpsl
inc
lods
sbb
out
dec
push
loop
xchg
ret
inc
mov
xchg
push
mov
mov
jmp
mov
add
mov
repz
jp
jb
daa
push
ret
add
mov
mov
lods
aam
out
scas
shr
push
sub
xchg
mov
xor
sbb
stos
inc
cmpsb
mov
pop
pop
pop
loop
flds
shll
sbb
add
hlt
mov
mov
xchg
pop
pop
mov
ficompl
pop
push
jmp
test
jl
icebp
pop
pop
fcom
fisttps
xchg
push
ds
push
xchg
cs
jecxz
popf
test
or
std
cmp
js
lcall
bnd
xchg
in
cmpsl
and
add
outsl
std
mov
xchg
ss
push
daa
inc
das
xchg
push
xorb
stc
jne
push
scas
mov
push
push
dec
cmp
xchg
or
jbe
sub
movsb
push
inc
rcrl
insl
dec
sub
xor
dec
icebp
xorb
mov
out
jle
mov
xor
cmp
mov
mov
xorb
cmpsb
sub
mov
mov
xchg
inc
ja
cmp
cmp
sub
xor
dec
daa
mov
pop
sub
push
jmp
sub
adc
in
stos
push
sbb
test
adc
and
ljmp
mov
lcall
out
scas
shrb
pop
testb
push
leave
and
push
xor
xchg
rcrl
movsb
ss
data16
mov
or
jnp
pop
outsl
insb
mov
cmc
cld
push
or
test
jmp
xor
aam
sub
cmp
sahf
aam
mov
inc
push
xchg
jnp
outsb
rolb
push
sub
xchg
imul
or
stc
add
mov
xor
or
cmp
adc
out
or
ja
repz
mov
sub
inc
fsubs
in
and
adc
adc
jbe
call
pop
in
push
inc
sub
lahf
lods
xchg
push
test
mov
push
mov
loop
mov
pusha
cmpsb
sbb
push
and
push
aaa
ljmp
xchg
arpl
jne
aam
and
inc
jo
stos
and
mov
adc
icebp
mov
cmp
sbb
ret
and
nop
bnd
or
rclb
jmp
cmpsl
cmp
subb
les
inc
scas
and
sub
sti
repz
fistl
loope
add
inc
fnstcw
shrl
jmp
mov
inc
nop
orl
or
push
push
cld
sbb
lds
repnz
mov
jno
mov
xchg
lods
push
cwtl
cltd
cmp
cltd
or
mov
sbb
out
lods
jmp
inc
sbb
jnp
outsl
mov
add
pop
jecxz
push
pop
repnz
mov
add
cs
lahf
sub
push
jl
arpl
xlat
in
shll
popf
pop
and
fcompl
or
jae
mov
pop
dec
dec
lock
dec
sub
pop
jp
shr
cmpsb
and
stos
sub
ljmp
xor
add
pushf
mov
out
ret
jg
test
push
and
mov
aas
test
aas
mov
out
rep
inc
data16
sbb
inc
jecxz
jnp
jmp
xor
shll
sub
and
mov
fisttps
fadd
fsubs
mov
mov
mov
pop
jne
das
je
mov
or
and
jge
outsl
or
daa
mov
je
in
mov
rcrb
stc
push
shll
mov
sub
xchg
icebp
sbb
jae
pusha
add
dec
dec
xlat
jno
test
pop
int
test
mov
stc
pop
fwait
insb
jmp
mov
inc
gs
fildll
mov
test
jmp
incl
pop
mov
add
dec
add
das
mov
mov
xchg
insl
sub
jle
xchg
add
stos
and
push
lret
pop
inc
pop
jo
or
pop
inc
pop
scas
test
loopne
xchg
leave
push
cmp
in
dec
mov
negb
push
mov
lods
fs
dec
ret
and
aaa
mov
mov
xor
jl
push
jno
cmp
sub
stc
icebp
popf
arpl
cmp
movsb
mov
outsl
mov
shlb
push
out
pop
sti
fsubrp
adc
out
sbb
jae
cld
adc
enter
jns
pusha
sbb
int
lret
arpl
lods
mov
pop
cmpsb
jg
divl
imul
ds
xchg
inc
and
mov
sub
movsl
cmpsb
xchg
nop
dec
mov
imul
xchg
enter
popa
mov
lods
jae
mov
sbb
test
sbb
mov
mov
xchg
dec
mov
lock
mov
rcr
cmp
xor
cmp
or
nop
dec
inc
adc
in
mov
jbe
xor
or
mov
cmpsb
call
negb
lret
push
lds
addr16
mov
xchg
shlb
xor
inc
ljmp
popa
fcmovnbe
les
imul
sahf
std
sbb
jmp
cli
cli
jge
pop
cmp
dec
pop
cltd
cmpsb
lcall
in
push
pushf
js
dec
xchg
fwait
fs
test
into
add
mov
loopne
mov
fmul
out
stos
mov
test
dec
or
mov
in
fnsave
and
ljmp
add
popa
push
xor
jno
sbb
ja
jo
xchg
lds
sbb
addb
dec
xchg
pushf
inc
scas
xchg
lea
add
mov
inc
mov
dec
stc
mov
icebp
pushf
mov
xchg
pop
dec
scas
out
dec
shr
sbb
mov
div
or
add
into
aad
mov
mov
inc
add
addr16
stos
stos
push
js
cltd
push
sub
jp
lds
or
andb
js
out
or
loope
adc
imul
loope
int3
pop
clc
addr16
cmpsb
push
jg
and
and
shll
loopne
push
xor
insb
xchg
into
adc
push
das
cmp
jae
pop
pusha
sahf
out
fdivrl
test
fisubs
sub
push
pop
cmp
cmp
out
fsubrl
bound
xchg
xchg
test
rcrb
mov
jmp
jmp
data16
or
les
test
movsl
xor
leave
shll
mov
xchg
or
mov
daa
ror
popf
outsl
loope
shll
add
int
das
insl
mov
es
inc
fimuls
inc
pop
cwtl
or
dec
jge
pop
jge
data16
xchg
mov
das
out
push
lcall
push
mov
adc
jnp
pop
nop
lcall
and
test
or
pop
pop
cmp
lods
mov
dec
push
shll
mov
push
ficoms
pop
pop
sbb
inc
fcoml
mov
outsl
jecxz
rorb
mov
dec
mov
lds
loopne
mov
stos
xor
adc
inc
sub
xchg
and
sub
rcl
mov
rol
div
aam
gs
pop
adcb
test
xor
loopne
cltd
mov
dec
push
mov
jmp
mov
mov
inc
mov
les
xor
jge
pop
push
and
mov
pop
das
mov
sbb
in
pop
in
data16
push
cmp
cmp
adc
cs
pushw
imul
sub
js
pop
and
scas
xchg
out
std
pop
xorl
sbb
inc
js
cwtl
jl
jl
cli
mov
or
into
xor
add
loopne
cmp
xchg
xchg
and
popa
outsl
jne
adc
scas
test
dec
mov
inc
xchg
push
or
mov
icebp
xor
mov
fneni(8087
adc
push
push
stos
dec
rcll
repz
jo
xchg
cmpsb
out
xchg
addb
fwait
pop
mov
ljmp
mov
cmp
into
mov
fildl
adc
ds
xchg
insb
cmpxchg
dec
in
sbb
cltd
imul
push
jge
outsb
rcll
adc
cli
in
out
adc
sbb
ds
ret
mov
cmp
lods
add
in
push
push
ja
inc
scas
test
scas
and
jp
ljmp
cli
in
xor
gs
pop
cmc
mov
in
push
xchg
mov
lret
stc
sub
lds
mov
mov
mov
lcall
imul
jge
jmp
lods
sbb
push
sbb
mov
ljmp
mov
dec
add
or
mov
adc
sbb
psrad
push
xor
addr16
pop
fldl
mov
xchg
in
rcrb
add
jno
cmpsb
xor
je
sub
loope
jnp
push
imul
mov
movsb
int3
sahf
xchg
push
out
inc
xlat
outsl
cmpl
cltd
cwtl
das
inc
das
mov
and
rcr
push
xlat
pop
mov
rcl
in
add
arpl
loopne
fnop
xlat
push
pop
adc
daa
and
in
push
xchg
lock
xchg
xchg
push
leave
rclb
xchg
push
hlt
lahf
sub
sahf
rol
jnp
mov
or
ja
cmp
mov
ret
pop
lret
cld
xlat
imul
rcl
aad
dec
or
add
inc
in
ds
out
sub
clc
cli
mov
inc
jmp
sbb
fwait
pusha
repz
pop
push
mov
ljmp
subb
push
adc
add
mov
aaa
jge
aas
cmp
adc
cmp
cmpsb
stos
jbe
add
jne
push
xchg
or
mov
mov
enter
shll
into
fldenv
int
pop
adc
adc
or
jmp
add
sub
rorl
out
jno
adc
xchg
or
sbb
mov
jge
xor
les
mov
add
pop
add
adcl
jae
sbb
sti
or
stos
ds
pop
clc
dec
jg
enter
stc
lret
pushf
into
lods
pcmpgtb
push
sbb
mov
and
jp
loopne
lsl
sbb
xchg
xor
dec
leave
dec
cmc
mov
shll
pop
inc
fldenv
pop
das
adc
dec
fdivs
cli
enter
adc
orl
mov
lahf
and
stos
jg
ffree
loop
repnz
call
rcll
es
xor
sub
sbbl
mov
mov
mov
inc
and
dec
aaa
scas
in
add
jp
shrb
cmp
sub
mov
xchg
inc
out
rclb
push
add
push
aas
insb
sbb
push
xlat
xor
ja
jnp
jb
jmp
adc
sbb
flds
jae
aaa
ret
loopne
in
inc
scas
sbb
cmpb
jae
ret
push
add
push
mov
mov
adcl
cmc
ret
fdivp
mov
repz
jmp
push
mov
lock
aad
fiadds
cmp
fldenv
popl
pop
xlat
xorl
mov
jb
sahf
jmp
or
test
and
xchg
call
in
call
push
sbb
jb
js
dec
iret
sub
fstpt
ss
out
pop
add
in
cld
je
jns
fwait
push
or
sub
ja
int3
cmp
xchg
ljmp
pop
fists
stos
xor
sub
pop
inc
dec
ficoml
push
cmp
sub
push
dec
fistpl
insl
mov
nop
push
mov
out
mov
scas
inc
pop
jecxz
and
and
rorb
in
es
xor
inc
cmp
push
pop
pop
push
ret
fldenv
ljmp
jb
inc
or
jp
mov
xor
out
push
jns
in
insb
fwait
mov
xor
sub
fstl
jnp
sbb
and
pop
imul
and
mov
mov
imull
adc
mov
pop
test
cmp
jg
or
mov
and
cmp
into
cli
orb
mov
mov
cmp
repnz
jp
xchg
mov
jmp
iret
mov
dec
mov
lods
or
push
xchg
iret
cmp
lret
cmpsl
add
addr16
add
sbb
pop
arpl
push
daa
es
jl
stos
xchg
ss
cli
repnz
push
loopne
mov
add
sub
out
xlat
rcrl
es
lods
xchg
sbb
pop
ss
push
hlt
push
cmp
adc
lods
lods
fbld
xor
fisubrs
xchg
ljmp
lods
xor
push
sub
cs
xlat
sub
cmp
inc
push
xchg
cwtl
gs
xchg
pop
icebp
push
js
rcrl
rol
dec
outsb
xor
fcmovbe
xchg
stos
add
int
insl
jl
inc
mov
cmpsb
es
hlt
push
sub
shr
xlat
aam
adc
out
lahf
adc
mov
dec
int
xchg
sub
ret
cld
mov
movsl
pop
out
repz
cltd
inc
je
outsl
add
loopne
push
push
jae
add
loop
and
pop
xchg
mov
out
mov
or
adc
or
and
pop
fdiv
cmpsb
mov
push
ss
sarl
adc
sbb
rolb
xor
adc
jmp
dec
insl
ret
jb
mov
ds
push
mov
jmp
dec
xor
pop
not
and
xor
xchg
sarl
xor
sbb
pop
sti
adc
pop
std
xor
call
sbb
sbb
push
test
pop
push
pushf
testb
notb
push
dec
inc
insl
sbb
sbb
push
jg
add
jbe
jae
testl
rorb
mov
mov
and
push
ret
stos
add
pop
pop
call
ja
imul
add
sar
adc
add
loopne
xchg
test
mov
fnstsw
stos
rcrb
cmc
push
xor
jmp
out
rcrl
mov
jbe
dec
jbe
xchg
loope
inc
xor
dec
pop
orl
cmp
je
rcll
outsl
sbb
negl
movsl
xor
mov
les
les
inc
aas
or
inc
scas
push
shrb
orb
xchg
fdivs
loopne
loop
cwtl
lods
fwait
addr16
fwait
and
add
mov
cmp
sti
out
in
pushf
out
scas
mov
inc
lods
cmp
add
jecxz
fsubrs
sub
xorb
cmp
pop
or
sarl
jbe
adc
sub
in
xor
in
out
std
xchg
push
dec
sub
fdivr
jnp
and
adc
lret
cli
add
inc
popa
dec
ljmp
add
lea
inc
lock
mov
push
cmpsl
pusha
ret
pop
xchg
test
mov
and
dec
test
dec
sub
or
mov
pop
sub
arpl
mov
adc
adc
sti
addr16
dec
scas
adc
add
dec
and
lret
out
jnp
pop
mov
flds
lahf
pop
int3
sbbl
hlt
and
xor
data16
test
mov
outsl
mov
add
iret
jo
aas
stos
pop
xor
test
mov
adc
adc
stos
or
xchg
arpl
rcrb
lcall
es
ss
mov
arpl
adc
inc
sbb
in
sub
pop
addr16
rcpps
cmp
ret
adc
xlat
ljmp
aad
jne
mov
sti
mov
xchg
dec
gs
or
push
inc
ret
pop
dec
das
lds
into
incl
add
scas
orl
xor
js
fucom
aaa
out
ret
mov
inc
pop
pop
jp
insb
xchg
sbb
sub
cmp
sahf
push
mov
test
jmp
mov
rolb
out
or
xchg
pop
adcl
cltd
pop
std
fidivrl
xor
mov
scas
xchg
int
repz
xchg
mov
push
mov
mov
inc
js
mov
aam
mov
cmp
xchg
sbb
idivb
jl
ret
out
jle
hlt
in
dec
ja
aaa
or
sub
add
add
push
dec
xor
es
or
adc
and
pop
neg
movsb
sub
xor
adc
aam
mov
insb
nop
test
sbb
lret
xchg
dec
lock
imul
and
int
shrl
repz
js
push
arpl
in
push
mov
add
bound
pop
fdivrl
outsb
ja
jb
xor
pshufw
pop
into
call
jo
movsb
inc
mov
pop
pushf
pop
sbb
popf
and
jbe
mov
stos
jne
cltd
xor
mov
jle
mov
pop
push
imul
sub
scas
dec
add
jge
push
jmp
es
fidivl
arpl
push
inc
out
lret
cmpsb
pop
lds
in
mov
pop
or
daa
xlat
mov
nop
repz
and
pop
cltd
sub
outsl
or
xlat
les
mov
mov
jg
scas
imul
xrelease
dec
sub
mov
dec
and
xor
sub
push
sbbb
or
sbb
fwait
repz
iret
jb
xor
mov
dec
out
xchg
inc
mov
pop
lret
sub
pop
mov
push
cmp
stos
fwait
icebp
xchg
js
out
add
push
jmp
clc
xor
jp
adc
push
out
mov
addr16
ret
push
or
sub
xor
fwait
push
stos
add
outsb
fsubr
ficoms
cmp
pop
mov
in
dec
mov
inc
ret
sbb
jnp
xchg
xchg
mov
imul
and
rcll
int
pop
sti
lods
fsts
dec
mov
mov
cmp
dec
ljmp
pusha
hlt
ja
pusha
jnp
icebp
pop
jo
push
inc
in
inc
and
test
pop
out
lea
jno
lret
mov
loopne
mov
xchg
outsb
add
inc
add
scas
adc
pop
js
mov
mov
cmpsb
decl
xchg
cmc
dec
cmp
bound
add
scas
out
xchg
jg
cmp
mov
cmpsb
pop
ret
xor
repz
std
pop
xchg
ds
daa
retw
xlat
push
insl
stc
decl
push
inc
orb
or
xor
testl
test
ficomps
inc
jae
sarl
xor
xchg
jle
test
jg
and
loope
in
pushl
shlb
ss
addr16
xchg
outsb
fmul
xchg
jl
gs
cltd
sub
and
jo
jo
dec
je
jbe
mov
mov
mov
add
push
idivl
std
pop
mov
lods
repnz
fistpll
xchg
roll
lret
les
insb
cmp
dec
mov
ret
add
push
test
push
add
repnz
add
pop
dec
pop
insb
mov
push
and
xchg
add
pushf
into
sbb
enter
test
scas
clc
mov
push
into
jle
or
test
push
dec
xchg
pop
dec
cmp
leave
test
and
or
dec
insl
rol
sbb
dec
repz
pop
sbb
xor
dec
mov
mov
testl
jmp
jmp
push
lock
ret
push
jmp
dec
inc
dec
sub
enter
lods
daa
or
fldl
loopne
cli
aad
pop
in
mov
adc
sub
scas
dec
cmp
insl
sarl
push
cwtl
jno
sahf
lods
push
imul
outsl
rorb
out
mov
and
andl
arpl
pusha
adc
xchg
cmpsl
cwtl
sahf
test
js
push
es
xchg
pop
test
or
pusha
xchg
pop
loop
aas
cmc
sahf
mov
pop
repz
stos
jecxz
jp
sub
mov
lahf
fwait
push
or
mov
js
lret
aaa
ffree
push
into
pop
cmp
jecxz
mov
push
xorb
ret
xchg
jns
sub
inc
cs
sbb
imul
adc
das
jae
out
lods
jno
into
xor
loop
dec
and
daa
popf
sub
call
pushf
fidivs
outsb
mov
insb
packssdw
xor
cld
in
dec
pop
rcrl
inc
xor
les
cs
pop
jo
xor
ljmp
push
je
pop
sub
xor
adc
jmp
push
push
fistl
subl
subl
xor
jle
and
pop
flds
pop
sbb
jae
insl
ljmp
mov
lahf
dec
jnp
mov
daa
xor
nop
or
or
or
es
cmc
aam
add
jmp
insl
jae
mov
mov
je
add
xor
cmp
cmp
push
loop
mov
aas
push
jle
pop
xchg
jg
pop
leave
cmp
pop
pop
pop
sbb
nop
and
mov
fwait
loopne
jle
pop
nop
mov
arpl
jmp
std
cs
data16
cwtl
xchg
add
loop
shll
mov
adc
stos
xchg
cmpsb
mov
push
and
xor
scas
mov
add
in
push
dec
adc
cmp
mov
fwait
push
cld
leave
shll
out
stos
push
aam
in
into
xchg
push
cld
scas
cmpsb
icebp
notb
push
and
xchg
push
shll
ret
lret
mov
sbb
mov
jb
jo
ja
mov
push
in
sub
call
cmp
pushf
std
int
lea
testl
lods
cmp
mov
mov
pop
sub
idivb
mov
roll
pop
pop
jbe
and
loop
xchg
inc
and
fisubrl
sub
jl
mov
enter
sbb
dec
pop
adc
xchg
and
jae
mov
cmp
lea
call
shr
fwait
xor
xchg
push
hlt
testb
jmp
push
cld
out
pop
psllq
sbb
lret
scas
rorb
xchg
ja
sub
xor
shrl
jns
xlat
xor
pop
push
sub
rcrl
das
and
mov
or
fcmove
jae
add
and
call
aam
icebp
cmp
pop
lods
out
xchg
pop
loopne
inc
mov
jecxz
dec
loop
push
jne
xor
push
nop
sbb
pop
cmp
insb
addr16
lock
jne
xchg
aad
push
dec
clc
push
lods
test
and
mov
aam
loope
mov
loop
arpl
or
les
mov
pushf
ja
push
sub
shlb
xchg
aaa
xor
loope
and
jbe,pt
popa
dec
add
pusha
and
rcl
out
cld
cmp
leave
xchg
aas
xor
aaa
leave
mov
mov
and
xchg
jnp
inc
in
fisttpll
mov
xchg
notl
into
je
pop
out
lods
cmp
mov
jno
push
cmp
jmp
outsb
add
insb
inc
jecxz
jno
neg
pop
leave
addr16
test
xlat
stos
lret
cmp
les
ja
sub
lret
lock
cmp
mov
aad
fnstsw
pushl
sub
nop
outsl
js
loopne
loopew
add
into
cwtl
fisttpl
scas
push
rorl
jmp
incl
push
cmp
in
shll
dec
test
cmp
dec
sub
add
add
sbb
mov
xor
ret
pop
imul
arpl
mov
es
xchg
cmpb
fists
mov
je
xor
dec
js
aam
xor
testl
inc
ja
bound
insb
mov
inc
mov
push
lret
movsb
pop
leave
pop
sarb
pop
push
xchg
cmp
cmpsl
mov
jnp
lods
pushf
es
lea
dec
xchg
inc
arpl
jae
fstpl
mov
sub
test
dec
in
fwait
sub
xor
and
pop
jle
or
fstpt
xor
adc
lods
dec
sbb
call
lock
sbb
cmpl
into
nop
mov
stos
inc
or
xabort
pop
out
int
sbb
jb
adc
mov
add
mov
push
jo
push
out
cmc
bound
cwtl
pop
sbbb
cmp
mov
test
fimull
and
in
mov
ret
mov
loope
sub
in
mov
adc
fwait
dec
repnz
mov
idivb
shrb
cltd
leave
add
xchg
loope
cmp
ja
xlat
xchg
push
cmpsl
fmul
subl
cmpsb
sti
fcmovbe
scas
mov
pop
jle
add
push
cld
pop
cmp
ljmp
les
ret
mov
test
or
pop
sub
mov
cmp
or
cld
pop
stos
nop
cmp
ret
jmp
nop
inc
or
add
and
aas
dec
bnd
dec
xchg
mov
push
inc
pop
add
inc
add
out
push
jge
mov
xchg
inc
cmc
mov
dec
sbb
mov
fld
loop
pusha
aaa
fistps
test
loop
sub
test
push
lahf
cmp
jne
divb
pop
out
sti
lret
jb
les
sbb
scas
push
daa
sbb
mov
fstpl
xchg
sahf
mov
push
push
jl
shl
scas
cltd
jns
stos
xchg
fwait
into
lods
lods
inc
imul
lcall
fildll
mov
xchg
dec
cmp
dec
fdivl
cmc
sbb
int
nop
push
orb
in
jbe
jp
xor
in
lahf
je
mov
add
push
insl
icebp
xchg
bound
and
insb
in
outsl
pop
mov
stos
aam
xchg
imul
cmp
fdivrs
sub
jp
mov
push
dec
pop
jns
ret
pop
xchg
mov
mov
mov
adc
jbe
test
ss
and
sub
clc
fwait
ss
inc
cld
cmpsl
les
test
inc
rcrb
out
sbb
xor
mov
cld
adc
sti
sbb
and
xor
cmc
dec
leave
add
data16
pusha
sub
cmp
out
xor
sub
daa
cmp
mov
popf
mov
jl
add
cmp
clc
or
cltd
dec
shll
xor
push
and
daa
inc
push
pop
or
aaa
insl
testb
add
jle
mov
adcl
xchg
fstps
rcrb
and
lcall
jecxz
es
mov
xchg
push
and
mov
dec
roll
mov
and
push
ds
idivl
xchg
push
lea
cld
nop
scas
pusha
cs
fcoms
push
mov
add
shll
push
dec
adc
and
stos
in
xchg
mov
mov
lahf
fisttpl
subl
pusha
inc
inc
enter
loope
sbb
push
and
loope
aam
jp
clc
nop
jbe
push
pop
mov
adc
sti
in
pop
test
sbb
xor
test
cwtl
movsb
mov
movsl
out
xor
popf
or
pushl
sub
shll
ss
icebp
sub
sub
mov
mov
outsb
pusha
jmp
sbb
mov
jmp
sbb
add
out
sbb
in
inc
push
stos
imul
sbb
xchg
cmpsb
pusha
lret
cmpsb
incl
ds
out
pushf
mov
mov
lret
mov
jnp
sbb
ret
xor
imul
mov
fadds
mov
adc
xchg
lret
jo
sahf
or
inc
push
and
and
insl
out
movsb
push
arpl
add
lahf
add
vhaddps
int
pop
xchg
inc
int3
mov
push
in
add
mov
rcl
mov
mov
inc
lret
jb
mov
stos
cmp
arpl
and
subb
mov
dec
js
pop
lods
or
rcl
jno
ret
mov
test
mov
movl
aam
inc
popa
jae
aam
push
test
out
dec
scas
inc
enter
pop
mov
mov
fdivrp
mov
lret
mov
call
addr16
mov
shrb
adc
and
mov
cmp
cli
pop
nop
enter
aas
cmp
push
push
cmpsb
mov
sub
cmpsb
rorl
mov
je
push
mov
in
cmp
mov
mov
cld
dec
ja
lods
dec
fisubs
sub
jns
lea
ss
ror
pop
jns
cld
adc
push
add
in
lock
out
dec
cmc
pop
lods
popf
mov
cmp
fistps
popf
jecxz
andb
cmpsb
jno
or
sbb
mov
insb
js
lods
js
dec
rcr
sub
movsb
and
inc
clc
arpl
icebp
dec
mov
and
fwait
mov
inc
shl
jae
icebp
out
test
fwait
les
scas
sbb
in
inc
nop
sahf
push
mov
or
jbe
add
dec
mov
adc
js
mov
stos
push
adc
cltd
mov
adc
icebp
xchg
xor
in
jno
push
jns
shll
add
imul
push
ret
fimuls
pushf
cmpsb
aad
aaa
pop
mov
xchg
inc
pushf
lock
std
xor
pop
pop
out
jnp
aas
jl
gs
lods
test
xor
rorl
mov
add
jle
pause
inc
jns
ficompl
inc
sbb
mov
stc
sahf
mov
gs
add
sub
pushf
mov
pop
push
ja
ljmp
dec
lret
mov
mov
ds
ret
mov
adc
push
lahf
idivl
push
les
xchg
add
sti
jbe
shrl
or
pop
clc
fs
jmp
movsl
cmp
xchg
lret
push
incb
loop
mov
popf
sub
fsts
dec
cmp
xchg
mov
ja
jae
push
cmc
mov
inc
push
scas
pop
xchg
cld
jns
mov
das
mov
bound
xchg
cmp
ds
add
pusha
test
push
scas
pop
mov
adc
dec
cmp
jno
bound
mov
cmp
lods
xchg
dec
add
imul
add
divb
ljmp
lret
fcmovnb
shl
sub
push
xor
in
imul
mov
jge
pop
pushf
xlat
bound
sbb
push
dec
cmpsb
add
xor
or
push
ret
xor
push
pop
test
mov
in
cwtl
stos
pcmpgtb
stos
jmp
iret
sub
mov
repnz
loop
mov
lret
mov
push
cmp
std
sahf
push
cld
pop
in
aaa
dec
cmp
icebp
pop
mov
pushf
push
scas
push
sbb
xchg
add
jp
and
dec
pop
sbb
cmp
aad
loope,pn
pop
scas
sbb
xor
inc
mov
dec
js
or
bound
lret
int3
pop
inc
pop
inc
or
cmpsb
sub
faddl
xor
outsl
arpl
int
cltd
lds
out
xor
push
and
movsl
lods
jae
push
sbb
dec
sarb
repnz
scas
pop
les
mov
fnstsw
vmovaps
and
das
ds
adc
pop
leave
test
push
test
jge
imul
sub
lods
fs
iret
mov
jmp
xchg
jg
gs
enter
movsb
out
enter
cltd
out
mov
mov
out
pop
clc
lock
jecxz
aaa
ja
dec
sub
sub
cmp
arpl
ljmp
imul
and
cmc
dec
adc
or
imul
leave
rol
adc
inc
sbb
dec
jp
mov
aad
add
xor
divb
clc
enter
mov
call
jge
jg
jl
cmp
push
data16
lock
ficompl
dec
fcoml
in
fdivs
cmc
scas
mov
jns
dec
sbb
into
and
jnp
push
adcb
or
jo
jnp
sbb
lods
xor
pop
cmp
xchg
push
push
cs
dec
popf
inc
mov
inc
mov
insl
xor
and
mov
rorb
mov
out
adc
sbb
push
out
daa
ljmp
js
and
dec
pop
inc
fstpl
cmp
sbb
cld
cmp
jo
stos
sub
ficompl
outsb
pop
sbb
inc
insl
fmull
sbb
mov
mov
gs
push
inc
into
dec
stos
xchg
dec
mov
cmp
sub
and
fxch
mov
das
jnp
sbb
xchg
outsb
repnz
pop
stc
scas
and
mov
imul
inc
mov
popl
dec
aad
fistl
and
sbb
lods
stc
push
push
mov
lods
scas
xchg
sub
mov
xor
or
cmp
rolb
stos
adc
push
sub
jns
inc
dec
movsb
cmp
inc
inc
mov
adcl
ret
bound
ds
leave
aaa
cmp
iret
mov
cs
mov
test
sub
sub
cmp
daa
mov
int3
mov
xchg
rcr
xchg
push
jle
popf
push
xchg
add
pop
dec
pop
pop
add
jecxz
pop
jne
jne
movsb
cltd
lods
icebp
je
xor
or
push
xchg
mov
mov
dec
mov
gs
xor
xchg
xchg
push
shr
in
add
push
dec
icebp
frstor
popa
out
int3
pop
pushf
pop
pop
pop
test
inc
add
cld
pushf
rol
jns
adc
popa
push
fwait
stos
cmp
pop
das
mov
sub
sbb
insb
or
jb
push
aad
clc
push
stos
lock
cmp
xchg
sub
lock
sbb
ret
dec
in
jmp
out
cmpsb
out
clc
aam
or
pop
add
dec
icebp
cltd
xor
into
jbe
cmp
mov
cmpsb
push
sbb
push
sub
fbld
test
mov
stos
push
and
push
push
jle
inc
push
fidivl
sub
push
call
mov
js
sub
imul
or
in
and
sub
test
cmp
sbb
sub
in
sub
lods
out
shlb
pop
jb
cwtl
fildl
in
xchg
and
and
cmp
xor
mov
lods
jl
jl
cmp
repz
push
loop
icebp
xchg
mov
ret
insb
das
pop
xchg
cmpsb
or
add
pop
dec
add
out
loop
pcmpgtb
inc
test
jb
mov
push
and
adc
gs
lahf
addr16
push
push
lods
mov
dec
sbb
in
movl
mov
mov
mov
jb
adc
pop
xor
jbe
mov
adc
stos
int
addb
dec
jecxz
jne
push
std
or
pop
rclb
jnp
fisubrs
and
iret
push
or
imull
sbb
mov
inc
mov
daa
push
ds
gs
in
frstor
insb
fsubs
xchg
mov
outsl
aas
or
inc
fcom
and
sub
jnp
adc
bound
shll
cmpsl
clc
in
adc
addr16
push
cmp
scas
rclb
lahf
mov
gs
imul
dec
pop
mov
int
lock
pop
mov
pop
push
sbb
pusha
pop
sbb
loopne
pop
jae
jns
sub
sub
jne,pt
mov
inc
aas
enter
pusha
arpl
adc
adc
jb
mov
mov
test
jg
addr16
mov
cmp
in
insl
inc
or
pop
jae
jno
lret
adc
adc
out
lahf
sbb
mov
xlat
test
mov
push
call
sbb
and
xchg
xor
push
subl
pop
sub
int3
stc
sbb
push
mov
xchg
je
dec
pop
push
and
and
push
int
loop
bound
inc
stc
inc
mov
pop
ffreep
lods
insb
cs
lods
addr16
sub
mov
lret
adc
jg
pop
add
add
cltd
pushf
insb
aas
or
jmp
mov
mov
bound
fmul
and
pop
lret
les
mov
hlt
es
pop
or
cmp
adc
cmp
lret
scas
xor
mov
inc
mov
lcall
or
pop
mov
xor
fbstp
cmp
dec
xor
nop
sbb
cwtl
adc
andb
add
add
dec
ljmp
adcb
cmp
jmp
inc
mov
inc
into
jmp
mov
das
mov
mov
fsubrs
nop
cmpsl
push
xor
mov
imul
mov
aas
mov
cld
mov
popa
inc
int
lahf
add
test
dec
sbb
ficoml
sbb
mov
add
aam
jbe
mov
adc
fadd
cmp
lret
addl
data16
sbb
dec
das
jnp
out
out
sbb
xchg
aas
push
fisubrl
lcall
jp,pt
enter
es
shlb
sbbl
aaa
dec
and
sub
or
cs
imul
cmpsl
xor
add
out
push
iret
in
cmc
lea
push
jp
xor
ss
mov
dec
adc
cmpsl
lds
nop
stos
add
xchg
mov
stos
push
adc
call
rolb
mov
fstps
fnstcw
aaa
inc
cmp
loope
test
iret
adc
dec
inc
mov
mov
repnz
cmpsl
xchg
xchg
sbb
outsb
add
add
lock
pop
inc
aas
fucom
pop
jno
pusha
mov
cmp
inc
repz
movsb
inc
test
mov
sbb
cmpsb
cwtl
daa
scas
test
sub
out
call
jp
inc
cli
dec
icebp
sub
jno
and
pop
lods
scas
xchg
std
inc
pop
rclb
sti
std
dec
inc
xor
int3
femms
int3
mov
aaa
fistl
bound
cmpsl
cmp
mov
outsl
jp,pn
pop
or
lret
push
cmpsl
mov
int3
std
cmpl
inc
or
aad
cmp
push
sahf
outsb
cmpsl
ds
rorb
dec
nop
inc
jmp
mov
xchg
in
mov
movsl
cli
push
inc
xchg
ret
loope
cmp
aad
shr
push
cmc
pop
les
jg
lods
xor
mov
sub
sub
dec
mov
cmpsb
dec
cmpsl
jmp
adc
dec
and
std
lock
jle
icebp
addb
in
push
jmp
push
jg
inc
xchg
testb
cltd
sub
stos
out
popa
xor
dec
sbb
adc
xor
add
ret
pusha
mov
inc
or
je
insl
or
sahf
les
ss
push
repz
mov
out
cmc
add
lds
outsl
pusha
lods
test
jae
mov
pop
loopne
in
mov
push
mov
ljmp
or
jb
mov
lret
and
cmpsb
adc
pop
push
dec
lods
push
add
push
loopne
inc
mov
addr16
dec
inc
imul
jo
sahf
ds
and
dec
in
add
add
fisubrs
sbb
inc
mov
sub
lret
adc
and
imul
push
insl
flds
add
or
out
xchg
add
mov
dec
xchg
fldt
out
cmpsb
ret
mov
in
fldenv
pop
cmp
push
faddp
adcb
mov
or
lcall
imul
cmp
pusha
mov
addb
sbb
jg
orb
dec
xor
lcall
or
js
inc
sti
xchg
stos
ds
jo
and
dec
sbb
out
mov
mov
mov
jnp
xchg
fistps
les
jno
das
sbb
in
cmp
arpl
jb
or
cmp
mov
jnp
sub
clc
jno
rcl
mov
cmpsb
inc
jge
sub
dec
sub
stos
jns
call
cwtl
mov
mov
mov
aad
daa
shlb
lds
dec
adcb
sub
push
xor
sub
fdivrs
loop
in
inc
xor
shr
lods
xor
sbb
adc
or
mov
xchg
in
aad
cwtl
sbb
popa
jns
mov
xlat
aaa
inc
sub
aam
ds
rcll
loope
sar
dec
mov
loop
mov
add
pop
int
rcl
cltd
hlt
push
sbb
cwtl
addl
sub
cmp
rcr
jno
aad
inc
add
inc
cmpsl
aas
std
fisubs
insl
mov
xchg
imul
lock
arpl
mov
test
repz
loope
pop
insl
jbe
jl
mov
add
cmpsb
sub
xor
adc
adcb
xchg
imul
dec
sub
icebp
loopne
sbb
mov
sahf
mov
dec
mov
or
cmpsb
pop
sbb
xor
lock
rorl
leave
and
test
push
ljmp
jo
cltd
loope
jg
mov
dec
add
xchg
or
mov
out
or
add
call
pop
jecxz
mov
xor
fisttps
jbe
bound
jge
mov
sysenter
outsl
cmpsl
jns
fwait
mov
sti
mov
scas
fnstsw
outsl
push
xchg
jmp
dec
sahf
and
in
jo
pop
mov
adc
insb
cmpb
pop
jmp
stos
insl
les
xor
scas
subl
dec
repz
insb
sub
stc
push
inc
and
pop
mov
sub
pmaddwd
in
in
or
xor
pop
pop
sub
or
outsl
scas
or
cmp
push
adc
inc
mov
pop
js
ror
test
movsl
ficompl
shl
xlat
cmp
sbb
cs
or
das
test
adc
pop
loopne
scas
out
jbe
add
jbe
int
in
lock
jge
pop
daa
rcll
inc
xchg
sub
mov
clc
in
mov
push
cmp
jecxz
movsb
jge
mov
int3
pop
xchg
or
pusha
ret
dec
xchg
pop
rcrl
push
and
imull
cmp
mov
lock
sbb
fadd
sbb
out
adc
scas
and
in
cld
and
fsubl
test
mov
xchg
xor
mov
add
pop
loopne
fs
sbb
pop
or
lea
jg
out
scas
or
or
dec
inc
stc
clc
jno
mov
addb
in
out
pop
hlt
loop
inc
out
pop
ljmp
sbbb
ja
inc
push
add
jle
in
movsb
or
in
pop
fdiv
xchg
clc
bound
and
inc
dec
jle
mov
xor
xchg
fdivrs
clc
and
dec
lods
sub
xor
or
pop
mov
ljmp
insl
addr16
shrb
push
mov
fcomp
xchg
mov
jg
les
je
imul
xchg
popa
cmp
not
mov
sbb
pusha
insl
cmp
adc
pop
pop
xchg
or
dec
and
ret
sub
imul
mov
out
stos
sub
pop
sbb
adc
push
nop
int
lret
int3
out
add
mov
lcall
cmp
xor
out
or
push
inc
or
into
dec
mov
or
add
cmc
sti
or
popa
mov
adc
fcomp
push
adc
scas
aad
pop
icebp
mov
dec
xor
mov
sar
cmp
sbb
xchg
into
fwait
sbb
xchg
test
insb
push
cmp
fimuls
and
js
and
loope
jmp
xchg
add
sub
into
test
int3
shrl
call
nop
xor
dec
inc
or
mov
insl
sub
mov
popf
sbb
lret
sbb
push
lret
fldcw
arpl
or
mov
pushf
in
aas
cmp
xor
aad
cmp
sbb
pop
jne
scas
xchg
xchg
stc
xor
push
inc
xchg
jle
loop
sbb
mov
sbb
popf
add
mov
dec
push
dec
aas
and
mov
push
lret
lods
and
pop
or
sarb
mov
inc
jo
ret
mov
mov
sbb
lret
addb
fisttpl
pop
stos
mov
testl
stc
and
add
or
push
jae
adc
data16
push
xchg
push
jmp
nop
xchg
mov
rolb
sub
pop
jle
das
jmp
jae
pusha
push
cmc
out
and
shll
mov
in
or
ret
ja
data16
inc
or
and
aam
mov
dec
cmp
test
outsb
popf
and
dec
push
lret
push
push
add
aam
repz
pop
push
addb
into
mov
inc
mov
mov
add
add
xor
pop
out
aam
mov
inc
push
lret
scas
stc
fisubrs
cmp
push
add
mov
aaa
call
adc
stos
test
pop
jno
xchg
pop
mov
roll
and
xor
cmp
and
sub
adc
mov
adc
test
popa
hlt
mov
les
iret
push
in
aas
lock
data16
loop
call
mov
incl
dec
inc
fcomip
push
popf
mov
sbb
mov
les
arpl
inc
jnp
cmp
cwtl
xchg
lods
xchg
push
std
add
inc
das
mov
out
mov
mov
rcrb
int
mov
xor
ret
popl
fwait
mov
sti
call
jns
push
mov
jne
push
sub
pop
dec
dec
push
add
cmp
cmc
call
jp
xorb
fwait
into
test
xchg
cs
push
dec
xor
scas
sub
nop
add
popa
pushf
or
test
hlt
mov
pop
cld
push
bound
outsl
lea
pop
mov
mov
dec
mov
in
pop
mov
sbb
pop
and
sbb
mov
xor
mov
adc
out
xorl
mov
in
insb
inc
mov
data16
inc
jl
jno
and
sub
push
sbb
adc
push
xor
int3
cs
or
iret
aad
cwtl
repz
lds
test
fwait
sbb
in
jle
daa
stc
shll
subb
lret
mov
inc
shrl
cmpsb
leave
stos
subl
jg
pop
bound
insl
sti
cs
pop
out
pushf
fsts
ss
push
jno
pop
push
sbb
jae
lds
cwtl
stos
inc
mov
rcrl
or
dec
xor
adc
and
and
test
mov
imul
test
pop
jmp
fnstcw
push
jge
out
and
cld
pop
ss
sub
adc
mov
adc
xchg
and
ret
adc
and
push
dec
lods
jnp
arpl
addr16
in
imul
cmc
ret
pop
mov
movsl
leave
or
and
in
pop
xchg
mov
pusha
xor
pop
scas
mov
sbbl
inc
negb
inc
inc
div
pusha
add
insl
enter
in
je
mov
cmpl
lds
bsr
dec
aad
sbb
aaa
pushaw
insb
lcall
xchg
adcl
loop
lds
jle
inc
stos
mov
push
hlt
mov
cmp
cmpb
push
dec
mov
mov
mov
in
or
push
sub
push
pop
fsubr
test
shlb
jecxz
mov
data16
outsl
adc
adc
nop
sub
inc
mov
sub
mov
cmpsl
loopne
cmp
adc
xor
mov
aaa
loopne
shrb
scas
add
fstps
sbb
jb
idiv
movsl
dec
sbb
scas
icebp
cwtl
insl
jl
cmc
jb
push
cmp
mov
cmp
sub
lcall
inc
jl
xchg
movsl
inc
xor
sbb
call
nop
aam
push
insb
ljmp
adc
xlat
sub
xor
mov
jbe
mov
or
daa
push
jb
out
adc
mov
mov
xor
pusha
inc
in
push
add
jp
pop
jno
outsb
mov
outsl
fdivs
repnz
sub
xor
iret
mov
jb
dec
xchg
loopne
insb
xor
jbe
lods
pop
mov
add
scas
cmc
out
int
mov
dec
mov
test
adc
pushf
les
inc
push
cmp
xor
scas
xorb
push
enter
pop
movsl
cld
xchg
cwtl
fcomps
std
mov
or
lds
test
push
movb
mov
aam
aad
dec
int3
pop
fnstcw
insl
mov
outsl
rorb
ljmp
mov
mov
jp
es
sbb
dec
xchg
push
jo
fs
push
insl
sbb
test
xor
stos
popa
ret
jno
push
mov
dec
push
imul
adc
dec
jp
inc
insb
test
pop
jb
inc
jmp
leave
pop
not
lods
test
fists
movsb
lods
std
clc
fwait
cli
or
xor
out
test
aad
std
dec
sti
xchg
push
push
mov
jmp
mov
in
fbstp
je
inc
or
nop
pop
sub
jle
or
pop
movsb
pop
xchg
jmp
popf
cld
mov
sbb
xor
data16
jbe
adc
inc
inc
cmp
dec
xorb
cmp
iret
shll
ret
inc
push
and
or
movsb
mov
hlt
or
psubb
dec
xchg
flds
repnz
faddl
cld
outsl
cmc
pop
cmc
mov
loope
dec
and
add
pushf
jmp
in
mov
daa
mov
dec
xor
hlt
sub
inc
fsubp
sbb
push
es
je
ficomps
aad
cs
out
or
cmpsb
shlb
jge
push
and
jmp
arpl
jo
sbb
mov
add
sbb
xchg
xor
xor
fdivrp
clc
ljmp
xchg
loope
dec
fisubrs
test
idivl
sbb
xchg
test
cmp
adc
hlt
jns
and
mov
call
outsl
in
je
mov
pop
mov
push
movsb
pop
and
out
sub
xchg
mov
fsubl
sbb
xlat
or
mov
pop
push
jle
insl
xlat
nop
dec
sbb
bound
mov
jo
stos
call
scas
mov
xor
or
test
in
fwait
mov
jl
mov
jle
ds
pop
sbb
pop
pop
outsl
mov
ret
cmp
jae
and
adc
xor
ss
mov
cmp
clc
fsubl
push
mov
test
mulb
hlt
test
mov
xor
in
outsl
cmc
jp
inc
lds
adc
lds
aad
dec
lds
dec
scas
movsb
fmulp
mov
fwait
adc
xlat
push
dec
jle
fs
test
clc
push
and
push
lret
cs
sahf
rorb
jmp
push
cs
es
pop
les
mov
test
mov
fucomp
cmp
cmp
push
cltd
in
aas
fistpl
sub
and
leave
repnz
flds
out
clc
pop
push
push
pop
nop
cmp
pop
lahf
mov
in
mov
mov
shrb
pop
xor
or
int3
dec
or
push
push
dec
stos
outsl
add
add
pop
xchg
pop
sbb
xor
negl
into
pusha
inc
jl
pushf
loopne
les
xlat
inc
xchg
lret
and
in
out
loopne
loop
and
dec
sbb
push
xor
das
adc
jbe
jp
adc
call
xchg
movsl
adc
mov
scas
in
jg
loope
lret
movsb
inc
fwait
pop
dec
out
jne
push
sub
popf
dec
enter
call
cmpsl
stc
pop
jl
xchg
mov
jae
and
cmpsb
jl
jmp
push
add
sbb
dec
push
xor
mov
ljmp
out
fldl
icebp
mov
sbb
jg
lahf
inc
cmp
sub
int3
add
cmp
lcall
push
xchg
jnp
push
je
daa
and
push
test
into
rol
dec
xchg
in
daa
cmp
push
test
xchg
fimull
adc
push
test
fnstsw
mov
xor
fistps
lret
sbb
stc
and
dec
pop
or
sar
out
push
jne
pop
mov
fcmovnb
add
xor
sub
push
cld
scas
jae
cmp
sub
cmp
mov
out
mov
xchg
loope
lods
jo
mov
js
aam
push
fwait
jmp
loopne
mov
mov
push
jle
mov
ficoms
sub
push
add
dec
shl
sti
imul
cmp
dec
sub
dec
mov
mov
iret
cli
fildll
add
test
loop
popf
xchg
or
xor
sbb
cmp
lock
loop
xor
fwait
mov
popf
sub
mov
test
and
xor
push
stc
inc
add
cltd
cs
xlat
ja
mov
lods
lret
hlt
jo
jnp
pop
movsl
jbe
cmpsb
mov
dec
fnstenv
pushf
xor
mov
shl
leave
loopne
pop
inc
insb
fildll
fwait
dec
sbb
inc
or
outsl
lock
or
push
and
sbb
repz
ficompl
out
xchg
loopne
xchg
es
mov
ds
push
addr16
or
loop
fiaddl
push
in
sbb
and
inc
cmp
call
cmp
stos
ret
ds
or
adc
bound
dec
mov
fnstenv
movb
aad
mov
push
mov
xor
fcmovne
fidivs
jecxz
shll
and
mov
inc
push
aas
mov
arpl
push
lds
and
mov
out
mov
push
push
mov
add
psubw
add
sub
ss
xchg
pop
pop
or
inc
xchg
mov
insl
aad
cmp
push
inc
and
icebp
mov
punpcklwd
jne
adc
test
xchg
out
ja
and
inc
je
je
pop
fs
cmp
das
or
push
cltd
jae
push
loopne
xchg
mov
xorb
int
pop
aad
inc
fwait
xor
lock
pushf
fsts
inc
pop
pop
mov
stos
push
xchg
mov
aad
idivb
mov
or
imul
lea
and
lcall
repnz
mov
or
out
adc
mov
push
push
cmc
add
pop
push
mov
inc
loop
lcall
call
clc
jno
testb
xor
jp
outsl
pop
push
inc
mov
jle
adc
nop
int
jbe
mov
push
loopne
mov
sbb
clc
inc
jnp
jmp
out
mov
js
aam
dec
xchg
insl
lahf
or
mov
xchg
sub
es
repz
add
ljmp
stc
clc
pop
les
cmp
cwtl
dec
mov
outsl
fisubrl
sub
mov
pop
ja
lcall
ja
repz
fwait
xor
adc
int
dec
lods
enter
data16
push
mov
ds
mov
fnstsw
cmp
inc
mov
repnz
je
lret
addb
es
insl
mov
sub
imul
popf
js
cwtl
sahf
negb
insl
pop
adcl
xchg
cwtl
jns
pop
rcrb
pop
jae
lahf
pop
scas
gs
cltd
ljmp
loop
dec
cmp
int3
xor
dec
mov
movsl
xchg
or
add
fidivs
into
mov
pop
daa
fcomps
in
adc
push
aaa
ljmp
sub
jmp
jbe
push
inc
jmp
dec
xor
into
int3
xchg
pushf
or
insl
das
push
mov
scas
jne
xchg
aam
lods
rolb
cmp
mov
nop
push
stos
insb
jne
dec
adc
sahf
fucom
inc
shll
jg
sub
push
in
dec
pop
rcll
xchg
sbb
inc
mov
popf
pop
adc
lds
inc
jge
jle
add
test
orl
push
cmpsb
movsb
repnz
je
sub
or
adc
pusha
add
push
in
sti
add
cmp
mov
mov
mov
sub
cmp
or
jnp
xor
addl
out
push
cmp
and
icebp
test
mov
scas
hlt
mov
dec
or
add
sub
xchg
pop
shll
adc
cmpl
cmp
and
sbbb
and
imul
mov
xor
inc
in
movsb
xchg
adc
or
pushf
cmp
arpl
inc
jb
fwait
push
mov
ds
cld
outsl
sbb
cmp
mov
fst
lods
push
out
push
jns
test
sub
inc
lret
cltd
dec
dec
dec
inc
adc
and
inc
lods
ficoms
mov
push
and
loop
shlb
push
lods
mov
pop
shr
leave
mov
lret
cmp
pop
add
or
adc
aam
sahf
pop
insb
dec
jo
ds
ljmp
add
fcomp
lcall
lods
fwait
lods
sub
mov
ret
sub
es
or
push
rclb
add
adc
adc
lods
cmp
out
in
push
push
mov
scas
mov
xor
dec
or
jg
mov
mov
rorl
sbb
test
push
push
dec
xor
out
mov
bound
sub
jp,pt
sbb
test
lret
adc
stos
in
xchg
xor
cwtl
std
lock
ds
cld
xchg
idiv
mul
mov
ret
dec
in
cmpsl
mov
dec
push
nop
jno
push
mov
into
fwait
xor
fsubrs
aaa
mov
cli
dec
into
or
or
shrb
cmpsl
sub
dec
leave
in
sti
negl
mov
and
add
mov
mov
ficoms
popf
outsb
jl
cmp
pop
lret
out
out
into
mov
hlt
pushf
adc
sbb
loope
dec
mov
lret
jnp
or
dec
in
mov
imul
sub
xchg
xor
jae
adc
call
in
adc
mov
sbbl
or
movsb
popf
cmpsl
push
xchg
fwait
dec
jnp
cwtl
mov
pop
xchg
int
adc
out
cmpsw
jno
lods
dec
xchg
mov
cmp
sub
fbstp
sbb
xor
pushf
mov
xchg
outsl
imul
pop
dec
sbb
cmp
sbb
les
test
pop
dec
repnz
loope
sub
arpl
fsts
mov
xchg
add
test
icebp
add
data16
mov
or
pop
dec
mov
aaa
inc
jnp
enter
cmp
movsl
add
scas
gs
pop
or
jnp
xor
adc
ret
mov
xchg
lods
push
sub
rorl
xchg
pop
mov
std
or
cwtl
xlat
in
outsb
jmp
xchg
jecxz
sub
dec
lds
mov
xchg
mov
sub
add
jecxz
call
lods
xchg
add
test
pop
leave
xchg
sub
dec
or
stc
pushf
hlt
mov
jae
jns
cli
imul
nop
rcl
jno
xchg
pop
push
fcmove
push
inc
or
pop
push
movsl
arpl
add
pop
repz
fidivrl
mov
jge
sti
and
popf
jne
cwtl
out
dec
mov
xor
cwtl
fcomps
adc
jbe
loop
fcoml
dec
pushf
cmp
xchg
mov
loope
or
push
sbb
jle
mov
jecxz
lea
andl
mov
icebp
and
fistpl
xchg
mov
rcrl
dec
orb
mov
iret
jae
roll
fcompl
sbb
sbb
fdivs
incl
repnz
xchg
gs
add
mull
cli
mov
sbb
mov
js
addb
incl
shrb
popa
out
push
xchg
test
gs
pop
sahf
push
and
pop
aaa
pop
or
mov
iret
out
jbe
int3
imull
dec
pop
pop
mov
out
hlt
push
adc
jo
add
movsb
dec
sub
ja
push
mov
mov
mov
adc
bound
clc
xchg
sbb
sub
mov
adc
test
adc
movsb
mov
fidivrs
fwait
int
xor
add
xor
inc
push
dec
cmp
mov
nop
ljmp
fwait
xchg
and
sahf
jge
shl
pop
push
and
bound
in
test
leave
dec
cmp
clc
pop
or
pop
stos
inc
outsl
rcrb
enter
add
push
sub
out
stc
in
jo
add
daa
dec
in
or
xchg
ja
fisubs
das
and
cmp
dec
xchg
xchg
xor
cwtl
cwtl
cs
out
xor
into
sahf
cmpsb
fisubl
jge
faddl
test
ja
pop
sub
lock
out
adc
bound
in
xchg
fists
jnp
aaa
jle
pushf
mov
jg
lcall
sar
lods
mov
sbb
ljmp
and
outsw
sbb
pop
xchg
sti
adc
aad
adc
imul
loope
sti
test
jg
aas
inc
cmp
dec
dec
mov
fisubs
dec
xor
aaa
pusha
dec
outsl
and
mov
cmpl
movsb
cwtl
pop
cmc
pop
xchg
or
pop
push
ret
insb
push
xchg
in
mov
repz
and
xor
cmpsl
jno
shll
lahf
shrl
in
pop
xchg
cmp
cmp
out
xchg
inc
andps
shl
jns
hlt
lcall
mov
mov
xchg
push
negb
gs
dec
sub
lock
sbb
iret
or
inc
inc
outsl
xlat
mov
or
add
xchg
mov
popa
je
or
mov
pushaw
stos
jnp
out
cmp
fwait
xchg
sbb
lods
lret
mov
and
aas
dec
in
inc
mov
in
adc
mov
cwtl
sbb
movsl
xchg
cli
xor
insl
cmovne
sbb
jmp
imull
pop
jg
mov
xchg
lea
sub
pop
or
fnstsw
dec
mov
push
mov
stos
or
mov
jns
sub
adc
xor
pushf
roll
rcrb
cmpsb
cli
inc
sbb
or
jns
xchg
cmp
lock
push
and
enter
or
adc
jp
mov
mov
dec
mov
lods
cmp
cmp
mov
decb
jb
adc
shrb
repnz
lods
jne
sti
insb
inc
sub
and
jl
mov
add
popf
shrl
lods
adc
in
xor
mov
inc
add
jo
sahf
dec
jge
scas
das
decb
sbb
dec
jb
push
popa
stc
sbb
repnz
neg
push
fcmove
cld
push
out
mov
aaa
jmp
xor
and
or
ret
enter
cmp
imul
outsb
cmc
in
fyl2x
outsb
add
mov
cmpsl
push
lret
fs
mov
call
mov
in
lret
sub
sbb
adc
inc
mov
add
mov
shll
shlb
lods
add
lods
xor
sbb
jmp
cmp
test
int3
lcall
pop
inc
pop
les
mov
adc
pop
dec
xchg
out
jae
push
cmp
cmp
dec
bound
cmp
add
int3
mov
push
ja
in
push
int3
cmp
int3
ljmp
and
fstpt
inc
cmovne
stc
jne
shrl
movsb
gs
jecxz
movsb
outsl
repnz
pop
add
xchg
test
ud1
inc
xchg
inc
or
aad
loop
repnz
xchg
or
or
sbb
mov
jp
push
dec
jae
hlt
arpl
pusha
push
clc
in
pinsrw
loope
jecxz
js
and
jecxz
popa
aam
fidivs
mov
decl
insl
std
adc
dec
or
cmp
and
sbb
sbb
add
xchg
sahf
or
test
jle
push
arpl
lods
mov
pop
xchg
or
cmpsb
pop
sbb
leave
fisubrl
jle
outsl
fistl
insl
in
or
std
notl
jl
xor
jmp
sbb
out
scas
test
clc
nop
sbb
ja
imul
je
daa
cwtl
mov
xchg
orl
lods
sub
pop
pop
mov
add
sub
xor
cld
test
add
push
cs
cmp
xor
and
ds
add
out
mov
ja
add
dec
in
call
nop
das
push
loopne
fsubs
movb
pusha
maskmovq
divl
imul
out
mov
out
cwtl
int
loope
js
push
fs
mov
inc
roll
fadds
sti
pop
push
outsl
xchg
aaa
adc
lahf
push
push
jb
mov
gs
xor
retw
pop
push
les
or
movlps
ds
int
xchg
jle
sbb
push
pop
out
adc
or
repnz
ret
sti
je
xchg
and
pop
xchg
mov
dec
xchg
pop
and
dec
scas
push
imul
hlt
mov
or
movl
adc
lds
cld
fadds
testl
imul
in
mov
jg
in
aam
adc
lea
ds
sbb
sub
xor
pop
mov
jmp
jge
outsl
jge
mov
test
cmp
ror
jns
inc
mull
adc
jmp
sub
lahf
shl
cltd
shll
negb
mov
push
outsl
icebp
jmp
insl
mov
add
sahf
and
addr16
les
movsl
jb
and
lret
sbb
jle
mov
jnp
mov
push
out
lods
int3
adc
sub
mov
push
adc
in
inc
and
fldcw
pop
jmp
cmp
ss
repz
daa
imul
or
and
js
xchg
add
xchg
adc
mov
sti
loop
enter
jp
imul
and
inc
inc
xchg
std
pop
and
repz
test
lret
test
icebp
dec
gs
enter
push
aaa
jne
mov
jnp
ss
pop
jecxz
cmp
into
cmp
iret
data16
nop
xlat
je
movsl
and
rolb
sub
xor
ds
jle
js
gs
fucomip
fldt
lret
inc
icebp
arpl
fisttpll
fisubl
cmc
insl
inc
pop
jno
jae
sbb
cld
pop
or
cmp
jmp
pop
ss
pop
mov
push
push
cmpsl
push
or
mull
sub
mull
lock
or
rcr
mov
mov
mov
cli
stos
ljmp
sub
and
aam
out
jmp
cs
in
xorb
pop
sbb
mov
mov
mov
test
jle
hlt
mov
adc
adc
aad
cmpsl
xchg
cmp
xor
xor
add
lods
xor
mov
adc
les
in
insl
inc
fcom
pop
vmovq
nop
inc
dec
data16
add
pop
mov
nop
jae
stos
loopne
lahf
into
popf
inc
add
add
lods
jbe
xchg
std
xor
pop
or
rcll
pop
push
iret
sub
pop
shld
dec
xor
ss
je
scas
icebp
test
jae
add
insb
add
cmp
lret
ljmp
adc
icebp
mov
subl
mov
sub
stc
mov
jae
stos
xchg
and
stc
scas
jmp
mov
dec
mov
push
in
rcll
xchg
adc
mov
clc
mov
jo
inc
ficompl
aam
mov
or
shl
fstl
lret
dec
scas
scas
imul
aas
rcrb
sbb
add
mov
icebp
jae
hlt
icebp
and
xor
or
ret
pop
fs
and
xor
jnp
psrlw
mov
pusha
mov
std
fcompl
loop
jnp
add
adc
icebp
add
shrb
push
lods
cwtl
je
mov
jge
pop
out
movsb
dec
add
insl
dec
insl
push
pop
shll
sti
out
sarb
mov
cmp
jno
test
rolb
adc
imul
mov
or
popa
jno
repnz
pop
subl
call
lods
adc
sbbl
pop
fidivs
movsl
xchg
adc
into
mov
jmp
xor
mov
push
jo
mov
push
ret
mov
dec
or
mov
popf
pop
aaa
rclb
lcall
mov
add
xor
sti
fwait
jmp
ja
lea
fs
pushfw
or
push
ffree
sbb
mov
clc
mov
mov
stos
sbb
mov
mov
pop
jp
inc
lret
jp
cmp
jb
stos
push
int
je
pop
xor
test
sub
dec
scas
xchg
mov
lds
sahf
loope
mov
inc
cmp
push
mov
lea
movsb
lods
lds
movsb
pushw
inc
sbb
and
js
mov
into
aas
mov
sbb
jbe
push
pop
mov
inc
clc
or
sbb
pop
imul
aad
ds
xchg
fcompl
lret
movsl
add
lahf
stos
lcall
imul
cs
fs
out
stos
mov
pop
pop
jb
lahf
or
hlt
xchg
add
xchg
enter
pop
scas
dec
pop
push
fcmovnb
je
repz
psubd
scas
sub
negb
test
inc
fld1
leave
push
or
shrd
cmp
sub
mov
pop
int3
gs
es
arpl
imul
push
mov
ret
cmp
jl
and
add
adc
call
mov
jle
mov
lds
sub
pop
jne
cmp
add
int
lret
movsb
or
insl
movsb
fiaddl
inc
dec
cld
in
orb
out
xchg
insl
push
dec
pop
sti
lea
push
repnz
xor
push
outsb
mov
outsl
push
fldl
js
dec
or
and
xor
arpl
mov
pop
push
pop
ds
push
stc
adc
ror
aas
push
lea
jle
dec
xchg
jl
push
dec
dec
push
push
movsb
push
pusha
cmp
lods
mov
sub
faddl
xor
mov
imul
push
test
inc
sahf
cmpsb
fadds
and
insb
mov
stos
test
mov
mov
cmp
in
and
loopne
xchg
mov
loop
repz
arpl
daa
in
int
mov
xor
add
das
mov
xor
xor
in
bound
xchg
mov
pop
rcr
add
add
fwait
sub
mov
sbb
or
js
lret
xor
xchg
hlt
ret
jae
fwait
mov
sbb
cltd
sbb
out
enter
push
and
sbb
push
or
fdivrl
jg
mov
es
in
cmp
jge
cmp
out
nop
ljmp
mov
mov
out
adc
in
pop
adc
and
and
aam
imul
push
shr
inc
and
popa
fmulp
add
inc
insl
ds
xor
inc
adc
adc
popf
dec
pushf
rep
pop
in
fnstsw
mov
pop
cmp
adcb
mov
sbb
xchg
sub
out
pop
sbb
fnstcw
sub
jecxz
scas
pop
ljmp
mov
lods
dec
insb
aam
popa
xchg
xor
fwait
popf
scas
sti
cmp
ss
out
lods
jmp
test
or
mov
push
or
iret
xchg
mov
sub
add
in
sub
xchg
imul
jmp
xor
jecxz
cli
push
xor
int3
mov
fisttpl
xchg
push
or
dec
in
jmp
add
mov
das
aad
push
fwait
inc
imul
insl
clc
sti
mov
fstps
movsb
jne
test
add
pop
repz
outsl
out
jns
fistps
loope
sub
add
dec
push
mov
sbb
ss
gs
pop
xchg
lods
xor
ret
fwait
mov
insl
nop
add
insb
and
cld
loop
in
pop
jg
mov
cmp
stc
adc
test
outsb
dec
cmpsb
jp
dec
xorb
cmp
std
ret
in
js
dec
dec
les
push
outsl
cmc
arpl
xor
out
cmp
xchg
out
jl
mov
sub
insl
test
inc
pop
or
adc
aam
arpl
xor
stos
daa
lcall
sbb
push
mov
testl
inc
adc
lea
jns
gs
or
inc
rcll
pop
dec
and
out
stos
push
pop
jnp
sbb
lcall
xor
or
imulb
jne
lods
in
push
push
dec
shlb
scas
clc
mov
rcrb
adc
aad
dec
or
inc
sub
sarl
add
and
fistpl
loope
push
lea
push
mov
sub
fnstsw
aas
mov
mov
dec
inc
inc
addb
mov
imul
adc
inc
in
push
mov
bound
dec
push
or
sbb
or
lret
popf
shrb
and
lock
xor
das
xchg
ficomps
loop
mov
add
pusha
mov
inc
loop
shr
mov
xor
mov
std
mov
movsb
jae
and
xchg
loope
cmpsb
sub
push
jp
mov
lods
sbb
push
pusha
cmp
cmp
repnz
add
lods
push
int3
mov
das
scas
sbb
loop
and
fldt
push
in
dec
int3
leave
in
mov
into
test
push
popa
push
mov
daa
pop
and
jnp
loopne
dec
mov
sbbb
arpl
inc
xchg
or
ror
inc
movsb
push
nop
pop
insb
ljmp
xor
fcmovnu
inc
jae
movsl
flds
stc
mov
insb
scas
push
fdivs
jg
pop
and
mov
xor
jmp
js
leave
mov
jle
push
hlt
sbb
lods
mov
inc
scas
adc
jp
sub
sub
iret
fs
mov
push
in
cmp
adc
out
repz
lods
mov
jmp
mov
and
cmp
mov
inc
pop
mov
sbb
jne
in
int3
call
lcall
fsubr
dec
bound
sbb
test
imull
inc
in
xchg
cmp
inc
jg
outsl
cwtl
add
dec
mov
out
jnp
push
cmp
test
sub
mov
pop
pop
lds
mov
sbb
push
jno
xchg
add
mov
enter
movl
stos
sbb
cmpsb
clc
in
insl
sub
jns
stos
cltd
pop
aaa
push
outsb
in
rcll
adc
in
push
loopne
jecxz
inc
pop
jno
cmp
adc
mov
cmp
add
xor
add
adc
mov
or
int3
mov
fcmovbe
cmp
pmuludq
aaa
xchg
out
mov
out
dec
loop
daa
pushf
inc
push
hlt
xor
into
into
test
rorb
push
int
sbb
inc
push
inc
add
stc
pusha
xor
jle
cmp
shll
mov
std
fbstp
repz
push
stos
and
or
xchg
sub
out
test
push
loope
mov
mov
push
pop
pop
movsl
scas
insb
pop
dec
mov
inc
fmulp
cmp
cmp
lods
and
je
pop
dec
setae
mov
inc
cmp
xchg
int3
jmp
lea
mov
and
xor
adc
adc
dec
and
mov
push
loopne
push
inc
test
dec
loop
ret
leave
outsb
fsubrs
jbe
sbb
mov
pop
loopne
dec
sar
push
cmpsl
mov
sub
std
mov
into
mov
xchg
cmpsl
mov
mov
xchg
xchg
push
xchg
dec
arpl
mov
xor
add
and
lock
je
push
pop
xchg
js
push
sub
cmp
jb
roll
mov
enter
inc
sub
dec
not
jp
adc
push
mov
sbb
iret
mov
ljmp
mov
push
sbb
jne
call
shlb
lock
in
pusha
mov
shl
insb
iret
jo
xor
and
test
xchg
nop
push
push
ljmp
sub
data16
xchg
push
ss
sbb
add
ss
sub
repz
fcmovnu
push
adc
pushl
mov
outsb
in
popf
push
lods
loopne
cltd
fistpl
inc
ljmp
leave
pop
inc
mov
cmp
xor
push
xchg
jno
and
arpl
cmpsl
fsubs
adc
cmpl
push
mov
mov
add
mov
xor
xchg
xor
daa
pop
fnstcw
mov
jmp
mov
inc
sub
mov
test
pop
mov
stos
rol
out
arpl
sub
ja
adcl
aaa
sahf
jl
cli
mov
push
in
lock
xlat
or
enter
ret
xchg
pop
leave
push
xchg
lret
test
pop
imul
xchg
sbb
adc
js
inc
sti
outsl
fwait
mov
addl
jecxz
lret
and
push
inc
fldl
push
xchg
ja
inc
mov
cmpsb
roll
mov
aad
sbb
testb
aaa
pop
rol
jb
aaa
aad
popf
pop
mov
ss
incb
jae
enter
add
dec
push
mov
cmovl
repz
xchg
or
pop
cmp
in
pop
outsb
pop
xchg
xlat
and
adc
bound
cmp
inc
call
hlt
pop
adc
outsl
loop
mov
push
xchg
adc
jno
mov
jl
mov
orb
and
nop
push
jg
jg
arpl
xchg
lds
adc
lret
shrl
mov
push
xchg
imul
pop
mov
inc
test
cld
xor
fisttpl
pop
jae
push
cwtl
cmp
sub
repz
dec
pop
jbe
ja
add
mov
repnz
aam
out
arpl
shrb
shr
cmpsl
add
sub
cli
lcall
mov
mov
fcmovnb
push
scas
mov
mov
add
cmp
orl
mov
pop
pop
cmpsb
shll
lahf
adc
cmpsb
iret
jbe
mov
mov
mov
hlt
popa
rcll
mov
mov
out
testl
orb
jl
jbe
imul
pop
jnp
inc
or
cmpsb
decl
inc
jge
push
adc
mov
xchg
mov
cmp
push
cmp
xchg
xlat
mov
test
mov
fucomp
and
ret
push
xor
cmp
mov
sbb
mov
lcall
add
sbb
dec
pop
es
jnp
mov
gs
jbe
hlt
ret
loopne
mov
sub
xchg
dec
mov
imull
nopl
cmpb
mov
push
scas
stos
orl
test
xchg
out
mov
sbb
aam
fstl
sbbl
repnz
in
push
sub
xor
inc
inc
mov
nop
cmpsb
xor
add
dec
dec
add
adc
fsubrp
aad
sbb
pop
fmul
mov
cld
insb
nop
fdivrs
insl
cmpsl
mov
inc
sbb
outsb
push
mov
nop
jnp
jp
scas
mov
jae
nop
pop
jae
int
inc
jle
mov
jne
adc
je
cltd
fstps
cmp
sub
adc
or
out
ret
jns
ffreep
fnstcw
adc
in
mov
sub
adc
pop
out
popa
sbb
into
mov
fsubrp
lock
jmp
sub
ret
mov
adc
insb
leave
push
pop
aad
gs
push
cltd
daa
adc
fs
fwait
sbb
aaa
xchg
jbe
pusha
repnz
xchg
add
or
jno
xor
jmp
jp
imul
fsubrp
cmpsb
outsb
jns
mov
and
cmp
xor
lea
add
and
jbe
push
scas
jns
mov
jle
lahf
rcrl
ss
shrd
loop
pop
xchg
popf
mov
push
jle
push
dec
sbb
jb
push
fisttps
mov
inc
outsb
sbb
inc
test
dec
pop
aad
stc
loop
insl
nop
pop
outsl
xchg
pop
and
pop
jns
cmpsl
pop
inc
mov
lahf
dec
dec
into
xor
mov
cmpsl
adc
leave
lcall
add
inc
arpl
pop
into
push
loopne
daa
push
push
xchg
mov
sub
xor
dec
adc
out
push
jns
jmp
cli
sbb
inc
and
mov
test
mov
neg
std
push
lock
in
stos
adc
xchg
or
mov
inc
loopne
sub
ljmp
daa
stos
push
cmc
push
adc
inc
pop
cmp
sbb
add
loop
mull
call
inc
xlat
test
mov
js
xor
mov
push
iret
lahf
and
dec
mov
jo
lock
xchg
addr16
push
int3
pusha
mov
adc
sbb
push
push
dec
lret
adc
ret
fs
das
mov
bnd
jge
test
mov
pushf
daa
push
jge
mov
enter
aas
cmp
lods
shr
insb
clc
cli
in
jle
cs
add
push
push
movzbl
shl
sub
cmp
jae
and
pop
xchg
ret
scas
sbb
jo
es
out
dec
out
lods
pop
cmpsb
pop
sbb
mov
cmp
mov
loope
pushf
call
dec
sarb
sahf
inc
iret
imul
pusha
xchg
adc
loopne
sbb
jno
adc
or
sub
scas
jp
call
or
fisttpll
adc
pop
push
sub
xor
jmp
xchg
sub
icebp
push
notl
rclb
imul
mov
aaa
movsb
pop
dec
mov
inc
loope
dec
mov
fldcw
imul
jg
jb
xor
jl
xchg
pop
mov
and
div
jge
cmp
cli
xchg
cmp
pushf
imul
dec
outsb
mov
std
xchg
or
sbb
leave
fidivs
lret
les
pusha
hlt
repz
adc
gs
mov
sbb
shlb
repnz
jbe,pt
dec
popf
mov
cmc
jmp
or
jle
fucom
xor
imul
fstps
bnd
adc
data16
movq
jge
call
xlat
fstps
idivb
in
sub
cmp
push
pop
pop
xor
xchg
jg
jb
rorb
pop
fldcw
sti
pop
mov
stc
leave
out
cmpsl
lea
add
dec
mov
insl
ja
cltd
loope
xor
addr16
or
dec
sub
popl
ret
xor
fstl
in
sbb
sbb
push
in
jmp
and
xor
push
adc
sti
rorb
and
jb
dec
add
add
cwtl
lods
cmp
mov
jge
jg
mov
inc
insl
mov
xchg
cmp
outsb
xchg
pop
jmp
sbb
lcall
mov
pushf
lods
pop
out
add
pop
ja
pushf
fnstcw
jae
pop
xchg
sub
push
push
add
mov
mov
popl
jo
movsb
add
jnp
xchg
and
sti
dec
imul
push
push
imul
ret
or
xchg
or
xor
mov
pushf
push
int3
ds
add
or
cli
bound
jg
es
outsb
addl
sbb
xor
adc
jbe
mov
xchg
or
shrb
imul
mov
sub
jg
or
dec
int
push
out
or
in
iret
and
loop
inc
stc
sahf
cmp
mov
push
jecxz
sar
pop
setp
repnz
xchg
imul
push
mov
mov
lret
xor
jae
pop
adc
sbb
cld
adc
jbe
arpl
loope
dec
shll
mov
jo
stc
and
push
cmpsl
dec
inc
repz
in
push
dec
xor
push
add
into
arpl
sub
xchg
mov
sub
test
or
xor
and
and
push
adc
xor
or
push
and
das
inc
mov
nop
vunpcklps
xor
leave
cmpsb
jb
loopne
sbb
nop
inc
int
jecxz
mov
lcall
lahf
repnz
mov
xchg
or
mov
aad
xchg
cmp
mov
icebp
andl
enter
pop
push
and
dec
iret
xchg
push
xlat
adc
jnp
inc
inc
arpl
stc
adc
shll
iret
sarl
cmpsl
fisttps
stos
dec
cmp
idiv
pop
xchg
int3
test
lock
cmp
test
mov
pop
jge
test
push
sbb
jns
test
inc
enter
icebp
lea
ret
lret
lcall
mov
inc
push
nop
pop
rcr
sub
or
daa
add
xchg
add
inc
mov
pop
leave
mov
adcl
inc
cmp
push
dec
movsb
or
loop
or
cmpsl
repnz
xor
xchg
lea
cmp
xor
jae
out
fs
mov
lcall
sahf
fistpll
or
call
mov
push
outsb
and
dec
or
stc
mov
add
xchg
sub
pop
mov
jmp
jbe
dec
jge
sti
fldt
shl
cmp
rclb
clc
jnp
mov
repz
inc
jecxz
ror
push
leave
xor
nop
iret
aaa
in
or
fstl
mov
dec
in
push
popa
mov
faddl
jg
add
sarb
mov
fwait
int3
jb
mov
aas
push
pop
nop
pop
shll
imul
iret
sub
ja
xor
inc
lds
inc
out
lcall
pushf
in
and
pusha
ret
lods
pushf
xor
addb
sbb
cmc
rorb
jg
sbb
mov
push
in
in
lods
xor
scas
into
in
test
xor
jmp
das
ds
push
adc
stos
jecxz
inc
das
imul
fcoml
inc
xchg
push
fiaddl
sbb
xor
or
fnsave
insl
int
in
mov
pop
fistps
lcall
dec
pop
mov
leave
andb
gs
jmp
cmp
lods
sub
rolb
insb
cmp
pcmpeqw
mov
into
jecxz
mov
bound
push
rorl
or
sub
into
cmp
cmp
and
sarb
sub
mov
xlat
movsl
mov
scas
pop
jg
fisubrl
inc
inc
dec
ja
sub
frstor
lret
jbe
aaa
dec
and
jecxz
mov
cld
and
cmp
pop
enterw
sbb
int3
insb
outsb
jecxz
push
shll
pop
pop
xchg
or
sbb
lahf
xor
call
lods
shll
pushf
bnd
cltd
mov
adc
or
out
test
jl
sub
push
stos
icebp
lcall
adc
mov
pop
lods
push
dec
sub
jp
and
scas
test
and
inc
loop
adc
int
mov
push
inc
outsb
lret
push
aaa
stc
aad
scas
inc
pop
jecxz
xor
or
xor
mov
imul
mov
xorb
stos
xor
inc
addr16
scas
insl
subb
or
fsubrl
mov
mov
sbbb
adc
stc
push
xlat
adcl
xchg
pop
mov
sbb
movsb
gs
sub
cmp
call
mov
cld
mov
push
sub
push
mov
lret
push
dec
inc
and
pusha
sub
out
in
enter
data16
jecxz
push
mov
mov
mov
push
cmp
xor
rcrl
cmpsl
bnd
ljmp
test
sub
daa
pushf
xchg
fstpl
lock
inc
imul
xor
daa
cmpsb
adcb
mov
xor
hlt
dec
test
pop
xchg
mov
jb
add
jne
mov
inc
push
jg
xchg
mov
nop
stc
pop
insb
cmp
xchg
push
sti
jp
mov
aad
sbb
mov
sbb
add
rcrl
adc
mov
popl
jg
jp
jns
mov
and
cmp
sar
nop
pop
ret
jae
popa
lahf
aad
icebp
mov
int3
insl
dec
ds
pop
shrl
cltd
mov
scas
jnp
stos
or
xor
shll
jb
out
cmp
ret
mov
jo
pop
test
push
push
ljmp
outsl
popf
sbb
je
add
je
pushf
outsl
inc
movsb
push
mov
xchg
push
arpl
xor
bound
add
insl
sti
inc
lea
pop
adc
clc
nop
and
cmp
and
es
sahf
lcall
xchg
xchg
shll
int
xchg
sub
test
jmp
mov
dec
lea
or
dec
dec
lret
pop
repnz
out
sub
nop
adc
cmpsl
insl
add
test
sbb
dec
add
jo
test
xchg
sub
push
push
mov
test
push
inc
add
int3
inc
jbe
mov
cltd
ror
and
pop
pop
ret
ret
inc
jns
pushf
ja
adc
inc
pop
xlat
lock
icebp
xchg
xor
adc
push
add
cmp
pop
xchg
dec
sub
cmpsl
test
popf
icebp
mov
iret
cs
jg
leave
mov
gs
rcrl
insb
xchg
dec
test
and
mov
mov
fisttps
fisubl
mov
stc
inc
adc
cmp
mov
lock
push
xchg
and
mov
adc
dec
sub
test
jo
cld
xchg
lds
divl
dec
adc
add
xchg
jno
test
pop
jno
lods
xor
push
pop
dec
pop
push
mov
sub
ret
cltd
icebp
adc
push
pop
xlat
outsb
xchg
adc
or
jl
fs
push
sbb
xor
mov
in
xchg
jg
sub
push
call
in
sarl
xchg
js
jge
add
mov
dec
sahf
cmpsb
std
decl
mov
cmp
pop
sti
push
lods
scas
daa
and
mov
loopne
lcall
hlt
test
test
mov
sbb
jp
xchg
shll
adcb
fidivs
mov
jecxz
lock
popf
mov
xor
out
and
rcrb
inc
mov
data16
out
push
xor
cmp
xchg
sahf
and
push
jae
dec
dec
ffreep
mov
mov
mov
mov
and
dec
sub
sub
mov
dec
adc
scas
mov
xor
imul
out
sub
mov
popa
mov
xor
in
jecxz
mov
push
lret
mull
cli
bound
test
jp
loopne
ret
imul
jbe
fsubrs
syscall
dec
xchg
in
rcrb
in
cmc
push
pop
lahf
lahf
insb
aas
inc
pop
dec
mov
aas
mov
jo
out
iret
repnz
and
cmpsb
jns
or
cmp
dec
jbe
jge
aad
push
int
pop
aam
cmpsl
xchg
outsl
sub
mov
dec
fnstcw
les
pop
adcb
mov
cmp
add
pop
inc
xchg
push
pop
js
push
insl
adc
xchg
cltd
pop
sub
leave
pop
push
cli
adc
cli
jae
and
fnstsw
daa
movsb
lods
jecxz
mov
sarl
and
enter
cmpsl
and
ret
cmp
fwait
daa
mov
outsb
mov
fmulp
test
sub
mov
and
fnsave
and
movsl
mov
add
mov
xor
daa
mov
adc
movsb
loop
pop
or
sarb
push
stc
or
mov
sub
sar
ss
stos
stc
outsl
jge
pop
arpl
adc
loopne
adc
mov
add
fucomp
aaa
fdivrl
aas
xor
inc
and
or
or
adc
ds
pop
mov
sahf
jp
sbb
bound
pop
mov
clc
icebp
mov
jp
outsb
mov
pushf
adc
imul
cwtl
mov
cmp
jp
push
xchg
sbb
icebp
inc
mov
xchg
lea
inc
jae
pushf
inc
lret
fadds
js
push
insb
fwait
into
push
push
xchg
adc
adcl
rorb
test
leave
stos
cwtl
pop
int
cli
imul
xor
mov
mov
gs
sbb
mov
sub
stos
mov
movsl
inc
jns
xchg
dec
xorl
or
or
cwtl
cli
mov
out
push
lret
cld
lahf
mov
fs
mov
stc
mov
addb
dec
inc
lock
pop
inc
and
mov
mov
pop
cmp
sbb
lock
or
fbld
jl
adc
ret
insl
pusha
add
into
lods
iret
dec
loope
clc
mov
xor
sub
lods
push
push
mov
pop
arpl
sbb
xchg
movl
or
sbb
pusha
sbb
xchg
cmp
pushf
pop
inc
xor
popa
mov
enter
dec
insl
xchg
sti
and
into
mov
inc
seto
inc
pushf
pushf
mov
cwtl
push
xor
rorl
adc
adc
jge
mov
mov
ljmp
and
lret
jno
clc
add
jmp
cmp
mov
nop
mov
fwait
mov
add
inc
sub
xchg
cmpsb
cmp
lahf
imul
xchg
jae
mov
lret
dec
std
or
inc
xor
rclb
pop
les
iret
push
jge
mov
jo
imul
pusha
bound
ds
sti
movsb
or
cmp
movsb
das
lock
mul
int3
outsl
mov
stos
adc
mov
aam
rcrb
cmp
das
pop
bound
test
and
pop
dec
ss
rcl
in
mov
call
ss
sahf
xor
push
or
shl
pop
cmp
addr16
test
mov
cmp
push
fisubrl
shlb
ret
push
push
jno
pop
lret
lea
mov
mov
mulb
fistl
lds
push
or
cmp
mov
jmp
xlat
aad
mov
sti
lea
jecxz
adc
pushf
mov
and
cld
pushf
pushf
and
push
cwtl
push
push
movb
inc
scas
out
sbb
imul
int3
ja
mov
movsb
imul
sbb
mov
mov
les
sbb
mov
imul
sub
cmpsl
dec
inc
adc
push
push
gs
xchg
sti
dec
testl
repnz
frstor
daa
mov
mov
pop
sub
push
test
xor
sbb
sub
repz
pop
pop
sti
inc
cmp
xor
jecxz
loopne
push
js
sub
or
gs
cmp
mov
xchg
add
jg
loopne
xchg
xchg
dec
int3
pop
push
incb
pusha
push
cwtl
pop
cmp
addr16
iret
out
mov
push
test
or
cwtl
cmp
lahf
xchg
pop
jp
lahf
mov
cltd
sbb
mov
push
sbb
dec
jp
push
popa
lcall
loope
lea
dec
imul
xor
cs
xchg
jp
lods
out
dec
pop
test
mov
or
arpl
popa
jle
mov
xor
pop
hlt
movsb
pop
mov
or
jo
aad
cltd
jb
pop
sub
lret
call
mov
in
clc
enter
jnp
pop
add
je
cmp
jns
icebp
push
outsb
add
fucomip
cmpb
xor
iret
ja
or
sub
xlat
js
mov
aam
fs
lea
pop
jle
fs
insl
cli
pop
push
aam
sbb
push
sub
in
popf
or
sbb
inc
cs
jle
xor
hlt
sub
pop
lock
or
adc
inc
adc
jl
jne,pn
sub
sbb
int
in
mov
pop
xchg
jge
fnsave
lcall
cs
rol
ja
je
aaa
add
push
adc
aaa
nop
scas
mov
jo
lods
inc
push
ss
aam
jg
and
ret
lahf
fwait
loop
adc
cmpsl
popa
push
test
adc
iret
bound
dec
ljmp
outsl
test
add
dec
mov
xchg
pop
icebp
mov
inc
repnz
sahf
xor
in
mov
pushf
lret
pop
mov
jno
dec
pop
jmp
fs
jo
lret
sbb
push
mov
pusha
cmp
xchg
mov
rcrl
adc
mov
les
or
sbb
inc
push
dec
and
sbb
dec
jo
hlt
hlt
in
div
push
addr16
jge,pt
fstpl
sub
push
jae
mulb
shr
fwait
mov
cwtl
daa
lds
stos
or
sbb
mov
fdivs
xchg
mov
inc
notl
push
dec
das
jae
cltd
cmp
dec
sbb
jl
sbb
mov
cld
iret
xor
jae
sub
lcall
xchg
mov
aam
adc
push
aas
lret
mul
jb
push
inc
lahf
fcompl
pushf
rcrl
dec
xchg
sbb
out
push
ds
xor
push
scas
cmpsl
mov
cmp
pop
adc
fdivrl
mov
cmpsl
mov
and
jo
add
test
inc
rorb
dec
stos
inc
inc
addr16
dec
xchg
movsl
pop
popf
mov
adc
push
cwtl
dec
lods
stc
lock
mov
and
js
into
fidivl
adcb
jl
into
mov
inc
hlt
jo
xor
rcr
and
in
and
mov
xchg
or
cmpsl
pop
adc
imul
pop
mov
jns
push
fwait
push
imul
dec
int3
repnz
push
pop
sbbb
ret
pop
in
test
pop
aas
decl
sub
lea
jo
xor
push
inc
mov
mov
out
shr
std
addr16
dec
mov
mov
das
cmp
jnp
mov
xor
pushf
lcall
ret
leave
mov
pop
add
dec
ret
dec
jne
push
inc
cwtl
test
xor
inc
in
adc
jmp
out
scas
mov
sub
iret
push
std
mov
sub
shrb
add
push
dec
pusha
test
les
stc
clc
test
pop
or
sbb
shlb
and
jge
add
adc
or
add
cltd
mov
jb
pop
inc
ss
or
subl
cwtl
mov
cmp
lret
push
mov
fwait
into
dec
mov
gs
shlb
out
sbbb
mov
xchg
loopne
pop
dec
cmc
inc
pusha
shrl
js
outsl
cmpsl
lret
loop
loopne
sub
gs
in
outsl
mov
add
imul
aas
add
lods
adc
int3
rcr
clc
ret
xchg
sub
cmp
sub
cs
jbe
pop
repnz
imull
in
stos
and
test
ljmp
pushf
jmp
sub
cmc
sahf
push
idiv
ret
adc
movsl
iret
jge
lcall
adc
in
xchg
jp
mov
mov
push
cwtl
jg
xor
int3
mov
push
loope
mov
fmulp
xor
inc
mov
push
leave
test
in
mov
jb
xchg
lds
call
pop
cmpsl
add
xor
fldenv
dec
mov
cmc
stos
clc
cmpsb
pop
xchg
icebp
mov
xchg
sub
or
scas
adc
fs
mov
aam
in
push
inc
ss
ss
adc
dec
push
and
dec
ret
out
ss
call
and
dec
sbb
scas
inc
inc
or
in
inc
jbe
mov
rorl
inc
xchg
adc
les
iret
repz
jmp
push
pop
repnz
daa
push
dec
adc
pop
xor
cltd
or
push
gs
mov
int
mov
ds
cmp
xchg
imul
sub
out
ljmp
pop
les
cld
push
and
sub
stc
imul
test
aaa
cmpsb
loopne
adc
jge
in
enter
cmp
pop
in
fstpt
stc
out
xchg
fdivrl
xlat
jns
movsl
insb
data16
push
fistl
sbb
bound
lods
cmp
push
jbe
adc
jne
outsl
mov
rcr
loope
or
jg
inc
and
xchg
and
imul
pushf
sarl
mov
icebp
out
and
lea
push
push
push
arpl
mov
daa
fcoml
imul
cmp
add
or
divb
jb
add
mov
scas
mov
mull
loopne
adc
ficoms
mov
dec
mov
xor
fisubl
aaa
fistl
mov
adc
jne
imul
dec
lret
mov
mov
rcll
or
pusha
and
pop
pop
add
xchg
or
aaa
in
lahf
xlat
in
aam
test
push
notl
lods
cmp
repnz
out
or
or
jo
jmp
xchg
aaa
or
xchg
inc
inc
fisubl
sub
mov
sahf
mov
je
sbb
outsl
pop
bound
add
addr16
cmpsl
jp
mov
push
out
mov
add
or
sarb
mov
push
incl
mov
push
push
add
mov
pop
push
sub
xchg
fadds
clc
roll
xchg
cltd
jne
and
pop
push
pop
xchg
sub
lods
filds
pop
call
jg
fsts
lret
sub
cld
push
pop
fimull
push
or
or
in
pop
pop
add
stos
dec
das
mov
lods
and
rep
push
shlb
or
scas
rorl
pop
sub
scas
ss
pop
fwait
push
int
ds
syscall
outsb
or
fwait
loope
out
shrl
shr
mov
outsb
push
sbb
pop
ret
cmp
mov
jl
mov
dec
and
gs
push
addr16
mov
fdivl
jecxz
xor
iret
sbb
movsb
and
divl
xlat
sarl
xchg
cltd
sub
pop
push
jno
cmp
push
and
push
inc
or
ja
and
inc
fiadds
clc
inc
je
or
jns
cmp
popa
mov
out
mov
push
lahf
pop
jle
jg
mov
in
add
sbb
xorb
negb
fsubrp
adc
xlat
push
into
sbb
and
es
jge
pop
sub
mov
sti
and
inc
or
lock
or
and
dec
pop
or
dec
jecxz
decl
cmpsb
pushf
push
stos
sti
imul
in
loope
cmp
mov
std
popf
xor
xlat
inc
cltd
scas
cld
mov
pop
lock
xchg
dec
pushl
or
fwait
mov
pop
addr16
popf
xor
in
push
pop
sub
cwtl
xchg
xor
pop
fwait
mov
into
sub
inc
cmp
mov
pop
inc
sub
mov
imul
jmp
lock
jno
sbb
and
mov
cltd
test
push
mov
popw
fisubrl
jp
enter
add
ret
xlat
inc
dec
arpl
xor
outsb
cmp
outsb
mov
and
into
mov
cmc
inc
lahf
add
testl
lock
xor
mov
pop
mov
pop
mov
loop
mov
popf
or
sbb
lock
lcall
outsl
lret
inc
pushf
imul
sbbb
jbe
dec
sub
aaa
or
sub
inc
push
sahf
push
inc
jge
inc
cmp
add
stc
lahf
mov
test
mov
cmp
popa
mov
xchg
out
mov
or
negb
mov
test
push
push
jbe
push
jg
sub
cmc
push
les
mull
add
push
cmpb
and
out
sub
mov
scas
pop
jmp
ss
addb
ret
outsl
sbb
jge
xchg
das
mov
sub
mov
cwtl
jp
mov
or
mov
mov
arpl
push
out
iret
cmp
jb
jno
xor
insb
idiv
rorl
and
xchg
lods
mov
mov
jge
mov
pushf
dec
mov
arpl
rclb
testl
xchg
dec
dec
pusha
mov
sub
iret
cmp
into
xlat
test
xchg
shr
or
mov
clc
gs
jmp
jecxz
mov
and
aas
mov
rcrb
and
jle
pop
sub
stc
adc
test
cmp
incb
imul
gs
cld
push
and
icebp
jge
push
out
dec
rclb
sub
jne
xchg
add
pop
mov
xchg
xor
adc
xchg
or
hlt
insl
out
mov
das
stos
cli
aad
pop
xchg
test
js
jnp
mov
je
mov
movsl
lcall
pop
dec
push
or
push
fs
sahf
inc
test
push
inc
cmp
scas
out
loope
sub
in
daa
fadds
ljmp
fadds
jp
cmp
out
push
out
fcomp
loope
aas
and
cmp
xchg
push
jbe
jbe
test
pop
or
lds
xor
nop
jae
push
and
and
and
loopne
cltd
cmp
mov
js
mov
icebp
fwait
add
mov
xor
lcall
and
cmp
xor
push
sub
xor
sub
xchg
pop
cmpsl
lock
mov
inc
sub
insb
sub
rcrb
mov
lds
adc
fstpl
cmp
cmp
and
jno
inc
and
lea
jl
sbb
fstp
lahf
daa
pop
loopne
inc
mov
mov
mov
or
inc
pop
inc
pushf
cmpsb
jb
pop
xchg
jle
lret
repnz
movsb
lahf
sub
mov
or
mov
or
mov
enter
cltd
sarl
pop
sbb
outsb
or
pusha
jbe
mov
negb
outsl
pop
ss
pushf
repz
je
ret
sbb
insb
xor
loopne
xor
ljmp
jp
jnp
mov
fs
leave
jbe
cmp
fistl
mov
adc
pop
pop
lods
cli
cld
push
push
xchg
popf
lret
movsl
test
dec
loopne
jnp
cmp
dec
sub
and
lock
xlat
pushf
mov
sub
pop
ds
mov
xchg
cmpsl
xchg
lahf
sub
mov
xor
mov
ret
sub
lret
sbb
mov
mov
push
inc
mov
roll
mov
sbb
cmp
cmp
leave
mov
mov
pop
aad
leave
in
pop
fldcw
mov
add
adc
imulb
enter
mov
ljmp
loopne
jmp
xchg
sbb
cmp
jb
mov
pop
pop
mov
gs
mov
jecxz
add
and
sbb
and
sub
jne
inc
and
pop
daa
jp
leave
repz
insb
inc
fnstcw
into
jp
daa
dec
jne
mov
push
pop
inc
add
sub
jmp
addr16
xchg
in
sub
sub
xlat
in
ds
adc
mov
sbb
rcrb
jmp
cs
adc
js
repnz
icebp
mov
mov
jle
cmp
aaa
xor
lahf
rcrl
add
lods
es
jl
push
outsl
mov
jae
adc
fcmove
bound
ss
sub
int
aam
outsb
or
xchg
aas
cwtl
pushf
in
jp
fstpt
shll
movsl
hlt
add
jmp
and
out
sub
xorb
scas
cltd
or
mov
xchg
jbe
divb
xchg
lcall
cmp
into
mov
addr16
stos
dec
adc
repz
roll
inc
push
rorb
leave
inc
clc
cmp
xor
pop
sahf
jb
cltd
jmp
insb
out
or
jb
mov
ficoms
xchg
in
test
push
sbb
call
mov
ds
sbb
xor
dec
icebp
push
inc
mov
sbb
in
jae
clc
das
sbb
dec
and
in
aas
jne
inc
in
and
ds
pop
cmp
inc
nop
add
inc
dec
mov
jmp
rorl
adc
jg
xchg
dec
xchg
popf
das
inc
add
push
mov
jle
inc
cmp
mov
test
mov
xlat
add
xchg
push
or
push
sub
dec
lea
sbb
xor
cmp
jle
adc
lock
mov
mull
push
gs
dec
adc
decb
and
insl
cmp
dec
jae
notl
cmp
ss
mov
bound
testl
fdivrl
cwtl
mov
repnz
adc
mov
jmp
in
pop
loop
popa
pop
bound
mov
cmp
gs
add
mov
movsl
dec
ss
mov
and
push
sbbl
cmp
xchg
and
movsb
mov
sbb
repnz
mov
das
mov
mov
notb
jl
or
mov
enter
mov
movsl
outsl
xchg
jmp
ret
loope
jne
mov
test
sbb
enter
test
pop
inc
movsl
out
pushf
dec
cmp
add
test
jns
ret
imul
push
aaa
rol
in
icebp
bound
jmp
in
ret
scas
xchg
outsb
xchg
or
push
or
xor
icebp
sahf
cmpsl
sbb
stos
adcl
xchg
incb
test
outsb
jo
mov
or
stos
pop
aaa
and
cmp
mov
jp
push
mov
xchg
jno
lret
push
pop
out
pop
das
out
sub
dec
pop
push
pop
sub
je
jle
or
xchg
fistpl
insl
pop
addr16
fiaddl
xor
int
adcl
arpl
inc
roll
mov
xchg
and
out
dec
dec
dec
sbb
andl
call
pop
fcmovnbe
cwtl
sbb
aas
sti
dec
roll
sub
and
sub
cli
mov
xor
stos
jecxz
jbe
push
lods
hlt
push
inc
lods
aas
inc
sbb
stos
or
rolb
out
mov
cltd
cmc
push
clc
lods
lods
cltd
push
adc
push
fcomps
cwtl
fiadds
in
rorb
cmp
mov
cmp
sbb
loope
loopne
pop
and
mov
sbb
xlat
inc
movsl
imul
loope
mov
xor
mov
sti
outsb
push
mov
lds
pop
jbe
test
and
pop
fwait
inc
imul
cmp
mov
hlt
pusha
mov
jb
ja
int
xchg
in
arpl
xor
cmpsl
dec
pop
out
imul
movsl
fwait
jp
jmp
sti
mov
xor
cld
shl
xchg
ret
rcl
sub
inc
inc
cmpsl
add
mov
es
int3
outsb
sti
mov
mov
sbb
sub
jns
sbb
and
lods
adc
xorb
in
push
aas
mov
mov
xchg
mov
sti
lods
cwtl
out
stos
out
pop
mov
call
mov
loop
insb
fisubl
sbb
fbstp
daa
sub
push
sub
ljmp
pop
push
inc
movsl
mov
cmpsl
sub
mov
rorb
je
dec
pop
push
sar
pop
and
mov
adc
sub
mov
and
les
inc
call
inc
pop
daa
jge
adc
xchg
repnz
mov
fcoms
shll
push
mov
js
push
fsubs
pop
push
pop
add
out
testb
xlat
push
scas
mov
xor
ds
adc
inc
pop
xchg
xchg
fistps
mov
inc
pop
mov
popf
sub
jl
sti
pop
gs
ja
dec
mov
xchg
leave
ja
in
inc
push
leave
aas
xchg
je
fmulp
fsubrl
fs
cmpsb
add
mov
sbb
hlt
pop
lock
stos
push
sbb
out
lahf
pop
xchg
outsb
mov
add
lahf
negb
and
dec
cld
jae
test
sbb
jmp
pushf
inc
test
ss
xchg
lock
sbb
movsl
jp
lcall
adc
xchg
imul
pop
cmp
aad
call
cwtl
mov
mov
dec
sbb
mov
fs
mov
nop
mov
push
mov
ficomps
ret
pop
mov
hlt
dec
test
push
stc
mov
or
scas
or
nop
cs
leave
shlb
lds
mov
out
xchg
mov
cmpsb
xor
jbe
loopne
fisubs
cmpsl
cli
frstor
clc
clc
sub
stos
mov
jecxz
scas
arpl
dec
jp
xchg
add
mov
pop
pop
sub
cld
out
add
mov
xchg
cmp
xchg
mov
and
rcl
in
dec
or
dec
push
int
or
or
or
sbb
mov
mov
mov
int
sub
call
adc
dec
fxsave
mov
stc
jo
gs
cmp
divl
es
pop
into
jg
test
ret
popa
aam
je
addr16
repz
push
xchg
dec
icebp
inc
rcr
insb
cs
push
xor
mov
jnp
mov
rcrb
gs
addr16
call
mov
std
xchg
jae
mov
test
sub
fiaddl
jl
cltd
push
clc
adc
sbbb
mov
xchg
mov
cltd
push
js
int
fcomp
mov
xor
pop
ftst
pop
mov
cmp
imul
xchg
cmp
lods
gs
rolb
xor
lock
mov
mov
test
enter
and
pop
cwtl
add
push
pusha
sbb
fwait
ret
iret
mov
mov
push
lods
addr16
movsb
mov
insb
leave
icebp
movsb
or
clc
cmc
lock
loop
imul
inc
stc
in
arpl
out
mov
mov
push
cmpsb
mov
push
xor
sbb
ss
jmp
pushf
adc
ds
scas
dec
or
pop
xchg
xchg
lods
pop
mov
jb
inc
ret
iret
mov
xchg
cmc
fcmovne
push
iret
cmp
jmp
dec
call
push
xchg
pop
or
xchg
inc
push
stos
mov
xor
inc
adc
xchg
dec
test
movsb
inc
mov
arpl
js
jne
cltd
lret
fs
mov
ljmp
xor
sbb
out
sub
lahf
dec
daa
xchg
cmpsb
clc
lret
leave
xor
imul
lods
jmp
popa
stc
xchg
mov
inc
flds
fisttps
lret
inc
adc
jae
pop
adc
cs
and
sub
jne
adc
or
fnstenv
xor
inc
mov
out
jb
iret
sub
aas
push
jmp
mov
jnp
out
movsl
and
lds
fistl
or
rolb
and
mov
leave
repnz
pop
xchg
xor
push
mov
enter
inc
jne
stc
mov
into
xor
push
out
push
mov
int3
repnz
xorb
adc
lcall
pop
stc
es
outsl
mov
fldenv
jecxz
repz
mov
enter
scas
push
dec
jns
cld
fiaddl
add
jle
mov
xchg
pop
popa
das
cmp
mov
arpl
add
js
out
and
xchg
nop
mov
fidivs
pop
stc
pop
insb
aas
hlt
fstpt
out
std
add
sub
iret
fbld
add
sbb
scas
add
repnz
rolb
and
stos
sub
jae
int
xor
stc
fadd
push
or
jge
sub
fidivs
popf
jge
imul
into
cmp
popa
xchg
or
fdivs
pextrw
mov
cmpl
xlat
sahf
je
shrb
mov
jne
mov
xor
out
dec
pop
dec
dec
sbb
or
lea
mov
pop
inc
aas
jmp
sbb
push
pusha
xor
stos
subb
in
push
movsl
pop
inc
adc
pushf
andl
addr16
dec
push
dec
push
and
in
aad
mov
imul
mov
in
loopne
test
and
jge
aad
gs
scas
shrl
dec
dec
inc
test
and
rcr
or
push
aad
pop
mov
cmp
push
push
dec
mov
js
jge
and
mov
or
mov
jecxz
mov
dec
xor
outsl
sbb
das
push
repz
dec
dec
inc
sub
in
bound
cmpsl
fs
or
jle
lret
lock
movsl
int3
jp
cmp
mov
push
iret
cmp
in
daa
bound
rcll
or
daa
mov
out
sub
faddl
fwait
int3
sbb
jnp
das
push
cmp
inc
mov
sub
push
scas
sub
out
dec
add
data16
cwtl
cwtl
xor
pop
outsb
mov
divb
bound
fdivs
or
cmp
jae
sti
or
mov
dec
jae
dec
shl
mov
and
daa
mov
and
out
aad
and
inc
inc
faddl
decl
insl
mov
inc
push
leave
push
push
mov
and
fistl
vcmpss
cltd
das
push
les
stos
sub
stos
push
popf
push
insb
loope
repz
cmp
mov
imul
push
clc
cmp
or
cld
pop
lret
jns
mov
pop
inc
inc
pop
cmpsb
cmp
fs
out
add
loopne
xchg
stos
add
mov
mov
xor
and
mov
ss
mov
ret
mov
push
in
adc
mov
mov
enter
popa
test
add
sti
or
shl
dec
lahf
daa
xor
push
jnp
imul
out
xchg
pusha
loope
shr
add
repnz
xchg
jge
cmp
or
movhps
push
jge
cmp
je
daa
addr16
hlt
movsb
inc
in
or
push
pop
push
dec
sub
lahf
es
outsb
push
loopne
into
in
mov
bound
adc
fwait
out
mov
pusha
nop
outsl
mov
out
test
je
das
in
pop
rcll
loopne
icebp
les
xchg
mov
or
pop
fcomps
xchg
xor
lea
sbbb
stc
scas
out
movsb
sub
fisubrl
sub
dec
mov
test
test
add
push
sbbl
sub
push
test
adc
mov
fsubrp
cmc
xchg
pusha
nop
dec
xchg
push
insb
insb
sbb
push
pusha
imul
cmp
jg
bound
jno
xchg
ljmp
inc
hlt
sbb
cmpsb
cmp
hlt
inc
jg
lcall
jnp
outsl
jmp
push
adc
sub
sti
mov
adc
mov
clc
jno
jbe
jmp
fldcw
xor
aas
mov
fldcw
add
stc
inc
ret
mov
mov
pop
cmpsb
lds
stos
and
jle
aam
xchg
sbb
mov
cmp
inc
lret
add
and
das
insb
scas
pop
xlat
sahf
insl
mov
sti
mov
aas
cmp
les
inc
jne
push
jmp
lock
jl
outsb
sub
in
lods
enter
icebp
pop
adc
bound
inc
imul
ficoml
into
dec
das
lds
in
sarb
push
inc
int3
test
push
mov
sub
adc
xchg
sahf
push
or
xor
lret
addr16
ficoms
mov
cmp
add
popf
cmpsl
jo
mov
mov
inc
inc
mov
in
mov
mov
mov
jbe
call
ja
push
dec
push
push
add
sbb
jge
xchg
add
sub
negb
xchg
cmp
or
or
fldenv
xchg
inc
xor
xor
enter
pop
jb
dec
leave
std
in
jmp
mov
pop
jo
imul
fsubp
jbe
push
daa
dec
mov
sahf
andl
xor
icebp
imul
add
clc
xchg
sub
pop
cwtl
rcll
jb
scas
xchg
mov
jae
vpminsw
test
inc
dec
fstl
loop
jb
out
or
pop
mov
and
dec
sbb
jecxz
stos
shl
xor
stc
int3
mov
cmpsb
inc
or
fiadds
cltd
jb
bound
inc
inc
or
in
pop
cltd
add
test
das
leave
ja
sbb
and
dec
loop
mov
and
ja
mov
xor
mov
inc
pop
sbb
imul
sub
fmulp
pop
loop
mov
cmpsl
adc
push
flds
mov
inc
xor
pop
lea
enter
mov
inc
call
or
out
aam
mov
xlat
stos
rorl
test
es
ja
in
mov
or
es
push
adc
test
pusha
jns
hlt
add
pop
stos
cmpsl
bound
sub
adc
push
lods
xchg
or
pop
xchg
jecxz
push
or
ret
popf
cmp
pop
cmp
rorl
in
jmp
pop
mov
out
pushf
push
sbb
ficompl
dec
mov
push
sub
mov
inc
out
stos
rcrb
rcll
fistpl
loope
testl
xor
in
icebp
mov
gs
inc
jns
clc
dec
imulb
mov
or
and
xor
cmp
xchg
jmp
push
xchg
adc
insb
rorb
xlat
and
push
inc
inc
sub
scas
adc
aas
aam
jle
sbb
cli
filds
ret
lods
pop
mov
lea
out
loope
insl
sub
cmpsb
sbb
lret
xchg
push
arpl
pop
data16
in
aas
js
sub
xchg
cmp
jno
popf
sti
sub
lret
cmp
sub
bound
mov
push
cmp
push
adc
js
sbb
mov
jne
scas
or
pop
in
sub
cmp
xor
pop
js
jno
push
fwait
aad
out
lods
sbbb
mov
fildll
outsb
pop
jb
int
call
sub
jle
jns
and
mov
pop
lea
bswap
sbb
xor
outsl
add
mov
or
fisubs
xor
pop
mov
xor
xor
sub
mov
mov
cmp
xor
mov
pop
cli
enter
ljmp
or
cld
fstpl
jecxz
mov
inc
push
je
fisubrs
add
test
insb
push
shr
into
cmp
jno
or
or
es
scas
jmp
mov
push
fneni(8087
push
pop
test
icebp
out
call
sub
leave
mov
rorl
les
dec
jne
cmp
mov
test
lods
or
add
pop
das
stos
js
lcall
shlb
xchg
push
push
push
sub
or
fisubrs
push
and
in
and
pop
cmp
fs
lds
push
imul
mov
stos
je
jnp
fcoms
cmp
mov
jg
sub
or
lcall
cmp
xchg
and
xchg
mov
in
cmpsb
sbb
mov
ds
sahf
aaa
lds
mov
dec
pop
dec
inc
stos
xor
rclb
aaa
adc
fsubr
sbb
xchg
mov
gs
xchg
roll
mov
mov
dec
imul
cmpsl
push
js
imul
dec
shll
hlt
xchg
insl
add
pop
cltd
add
push
pop
in
out
loopne
sub
xlat
jmp
imul
fscale
sbb
js
test
out
gs
fimull
jb
mov
add
out
bnd
arpl
jl
or
pop
xchg
nop
loope
adc
imul
adc
insb
push
sbb
shll
movsl
hlt
test
repnz
in
sbb
pushl
xor
sbbl
xchg
cmpb
in
or
or
xchg
sbb
jp
cmpsb
hlt
or
mov
pop
or
orb
je
mov
xor
jecxz
repz
adc
ss
push
lea
pushf
out
je
out
sbb
add
dec
loope
bound
scas
jg
clc
jns
inc
or
fmul
pop
or
popa
clc
mov
add
dec
js
pusha
xchg
jl
outsb
inc
jg
jo
or
jae
cmp
es
push
mov
push
push
pop
das
mov
mov
in
ss
fldenv
gs
jg
mov
sahf
in
and
int3
aam
mov
int3
aad
or
cld
lret
push
repnz
movsl
enter
inc
pusha
adc
cmp
jae
test
cmp
cmc
hlt
inc
pushw
and
shll
cwtl
lods
rclb
ret
xor
ss
in
je
jbe
push
cs
xchg
mov
out
cmpsl
add
lods
cld
es
imul
hlt
inc
jno
or
inc
jne
js
fildl
lods
sbb
jg
mov
aaa
lds
std
jp
je
fisttpl
xchg
loop
inc
and
xchg
decl
popa
sbb
dec
in
mov
icebp
stos
aam
aas
xor
lcall
loope
cli
mov
addr16
orb
rorb
addr16
and
andl
lods
cwtl
mov
sub
cmp
fwait
push
jp
push
mov
mov
je
push
fistpll
sbb
cs
scas
movsb
out
pusha
lret
dec
lret
insb
push
cmp
adc
mov
js
push
stos
cli
or
pop
add
jns
push
xor
fdivl
push
cwtl
xor
das
sub
enter
or
mov
and
push
mov
rorb
dec
jle
lret
sti
sahf
push
xchg
aad
in
ud2
incl
mov
pop
inc
and
mov
rolb
jnp
inc
pop
mov
xchg
mov
mov
and
add
into
test
dec
mov
sub
xchg
mov
insb
mov
xchg
inc
xchg
dec
sbb
pushf
dec
fidivrl
sub
dec
js
jno
in
aad
aad
add
test
aaa
and
rcrb
jnp
push
insl
cmp
push
lret
psrad
stc
push
shrb
in
pcmpgtd
iret
pop
lods
aad
and
rcll
push
sbb
sahf
or
out
mov
dec
imul
in
push
dec
aaa
testl
pop
int
outsb
lcall
inc
movb
fisubs
ror
xor
pop
cmp
cmp
aas
push
in
ficoms
add
mov
add
cwtl
sub
into
cli
push
cli
fwait
lods
xchg
jge
jmp
mov
push
cmp
xchg
in
mov
stos
popa
lds
pop
mov
loop
mov
sbbb
mov
jg
pop
pushf
fnstsw
cli
inc
push
xchg
push
dec
js
enter
mov
cmpsb
bswap
fwait
daa
xchg
lcall
jmp
add
add
fistps
out
lret
jbe
and
fs
aad
xchg
lea
sub
bound
mov
mov
sub
xlat
sub
fsub
mov
pop
loope
outsl
or
push
sbbb
jl
test
push
stc
inc
push
pavgb
popa
xlat
ss
add
movsl
ret
xor
fcoml
mov
ja
xor
sbb
and
subb
push
rcl
cld
sub
lret
std
fldcw
shll
stc
jp
jmp
fisubs
mov
nop
test
sub
icebp
cs
pop
xchg
xchg
or
dec
sub
mov
adc
shlb
lods
rcll
insb
push
int3
push
std
mov
add
jmp
gs
pop
sub
mov
lods
pop
test
adc
pop
cmp
shrd
lret
jno
add
jmp
fisttps
add
adc
push
icebp
ret
leave
xchg
mov
mov
cmp
push
mov
popa
mov
mov
dec
adc
pop
push
xchg
cmp
aad
popa
xchg
out
dec
cltd
cmp
add
in
pop
js
rcll
push
and
and
sbb
lods
inc
add
xchg
xor
lahf
js
clc
sub
test
or
ljmp
jae
ss
and
mov
dec
pushf
imul
mov
jns
xor
mov
inc
or
push
cmp
mov
lods
adc
xor
test
popf
fiaddl
arpl
xor
in
mov
insl
outsb
test
inc
mov
xchg
jge
mov
and
mov
push
ljmp
pop
cmpsl
gs
dec
xchg
cmp
inc
stos
fisubrl
in
push
add
movsb
repz
je
ja
jbe
push
xchg
or
adc
stos
rcll
test
pusha
add
insb
lods
push
dec
insl
in
xchg
jle
pop
mov
sub
iret
lea
bound
popa
cmp
mov
sti
movsl
xchg
lret
add
mov
and
cmp
mov
and
aad
add
mov
cmp
dec
sub
arpl
rcll
mov
movsl
arpl
push
test
into
lea
iret
or
sub
jl,pt
sbb
mov
and
arpl
aaa
xor
adcl
orb
push
xchg
mov
shrb
lds
cmp
inc
test
sub
out
cmp
fistl
mov
cmp
push
pusha
push
movsb
out
sbb
movsb
nop
adc
das
aad
jo
out
or
push
pop
andb
jae
xor
and
xor
adc
into
lcall
dec
xchg
fsubp
mov
mov
sbb
mov
sub
mov
push
pop
popa
mov
stos
add
push
push
adc
cltd
sub
mov
adc
push
out
xor
or
mov
stos
outsl
xor
enter
add
sti
push
add
xchg
clc
cwtl
xor
push
clc
fmull
lret
mov
sbb
daa
or
popa
or
pop
lahf
pop
sbb
mov
and
and
and
cmp
insb
xor
jp
popa
pop
ja
jbe
fstpt
rclb
push
and
dec
cmp
out
lods
pop
push
push
scas
shrb
sti
add
aas
xchg
cmp
das
mov
into
ret
stos
stc
stc
popw
aad
push
cmp
daa
pop
dec
leave
xchg
pop
inc
inc
in
xor
dec
fdivs
gs
ficoml
out
cltd
sub
xor
in
dec
test
rolb
adc
stos
sahf
and
mov
insb
sub
outsb
loope
dec
xor
or
arpl
in
ret
xor
mov
jbe
lods
std
mov
adc
xlat
lock
xchg
leave
push
int3
cmp
fiadds
iret
lret
in
mov
xor
loop
mov
mov
push
cs
sub
sub
or
cmpsb
ss
repz
push
push
das
xor
imul
sbb
sub
jnp
mov
repz
les
sahf
pop
mov
insb
repz
jne
dec
xchg
pop
inc
decl
sub
xchg
xor
add
out
and
outsl
mov
pop
pushl
iret
inc
insl
ss
push
add
push
out
add
add
mulb
lock
sub
dec
cmp
loop
jae
mov
mov
call
cwtl
sbb
ret
popa
in
pop
mov
xchg
cs
add
cs
xchg
stos
mov
xor
call
xchg
mov
add
xchg
mov
inc
mov
addr16
insl
cmpsb
daa
dec
adc
jbe
jge
push
jge
jno
movsl
lock
or
inc
jae
mov
xchg
pop
ret
pushf
mov
mov
xor
iret
stc
js
mov
mov
mov
out
jne
pop
sub
adc
adc
leave
adc
push
xor
insl
stos
cli
pusha
rcr
jecxz
sbb
in
inc
icebp
mov
adc
xor
out
push
repnz
jns
push
sbb
xor
sbb
adc
out
sti
mov
mov
aad
ret
adc
xchg
out
jmp
test
adc
sub
xor
cmpsb
lea
pop
adc
je
sbbb
in
push
xor
push
push
cmp
in
pop
dec
jecxz
scas
aam
fs
sbb
add
mov
aaa
mov
push
sub
add
cmp
movsb
mov
cmpsb
or
mov
push
mov
pop
cmp
and
cmp
mov
inc
mov
aaa
mov
xchg
adc
hlt
or
ret
data16
xor
push
imul
fdivrl
std
and
lret
loop
sbb
repz
je
cmp
mov
mov
pop
xor
ja
jmp
data16
jb
ret
faddl
dec
jle
mov
in
pop
xor
shlb
mov
add
lahf
lods
pusha
sbb
arpl
les
pop
ljmp
mov
int3
or
push
lret
mov
aas
mov
jbe
mov
jge
add
pushf
bound
jmp
lret
dec
dec
fcomip
push
data16
pop
sbb
mov
add
dec
inc
loope
sahf
cltd
push
jle
imul
dec
jne
fmull
xchg
xlat
daa
ret
sbb
in
mov
cmc
ss
lret
mov
popa
cmp
lret
test
in
and
enter
push
js
arpl
out
outsb
fildll
imulb
aaa
fimull
cmpsb
or
adc
lds
insb
mov
mov
add
jl
fwait
xchg
xor
lock
stos
pop
dec
lret
mov
leave
ja
popf
adc
push
popa
jns
js
test
rolb
nop
aam
mov
fnsave
call
pusha
cwtl
xchg
scas
mov
xchg
mov
pop
stos
xchg
sbb
frndint
dec
dec
fcomi
lahf
adc
jle
fcmovu
xchg
xchg
add
jge
push
adc
cmp
and
je
sbb
mov
push
shll
js
mov
fdivl
cli
ss
ljmp
inc
aad
stos
push
jbe
cli
ljmp
push
cmpsl
and
jne,pn
jno
insl
fs
loope
dec
popf
mov
pop
cwtl
out
inc
inc
cmc
jno
jge
out
xchg
adc
inc
dec
lret
data16
mov
fs
mov
mov
ja
sbbb
inc
xor
cmp
pop
or
scas
or
mov
dec
addr16
pop
push
sti
data16
lret
mov
fisubrl
inc
out
pop
jne
xchg
pop
jnp
clc
scas
sti
sub
inc
jo
pop
cmpsl
loopne
fdivrl
push
pop
xorl
sub
mov
mov
mov
xchg
cs
lods
in
sbb
loopne
rcrb
in
xchg
mov
pop
add
out
les
mov
imul
enter
push
adc
dec
lahf
push
push
pop
ror
pop
sbb
stos
clc
dec
mov
mov
xchg
stc
pusha
xchg
std
cmp
idivb
xchg
or
add
int
mov
out
cmp
stos
fisubrs
or
lods
mov
push
ret
movsl
jge
add
mov
push
pop
adc
cmp
cs
sahf
mov
int
mov
or
test
add
jnp
hlt
iret
lahf
pop
dec
lcall
cmpsb
sub
mov
sti
out
mov
pop
inc
mov
shl
push
mov
add
dec
nop
add
xor
insl
and
into
popl
xor
xor
imul
fwait
inc
je
cltd
and
cli
sbbb
cmp
rol
sub
cmp
lcall
ljmp
fsubrs
xor
movsl
mov
lds
and
cwtl
cmpb
arpl
insb
pop
mov
jnp
mov
test
mov
jecxz
inc
mov
push
ss
add
add
xor
mov
xchg
loope
mov
nop
jo
hlt
dec
ret
mov
pop
inc
sbb
arpl
lea
movsl
mov
dec
or
mov
dec
sbbb
xchg
mov
leave
js
dec
sub
push
movsl
incb
sbb
push
pop
mov
in
je
lret
nop
out
scas
cmp
push
fnstenv
lods
jl
push
mov
je
mov
test
add
jo
out
and
gs
inc
enter
mov
add
js
sti
je
rcrb
adc
xor
sub
pushl
daa
dec
inc
jp
data16
data16
adc
xor
pop
adc
ss
fs
scas
sahf
pushf
gs
out
pop
shlb
pop
rorb
xchg
sahf
loop
test
shll
push
lds
in
inc
fucomip
xchg
dec
lahf
mov
aaa
adc
xchg
ljmp
loop
icebp
mov
sbb
rol
cmc
dec
loope
ficomps
ficoms
jb
xor
shrb
ret
ficoml
jp
ss
lods
or
dec
push
mov
js
fnstcw
cld
mov
push
mov
lods
fimull
je
mov
adc
push
iret
push
cmc
or
add
pop
addr16
jnp
sbb
xchg
out
pop
repnz
mov
pop
inc
imul
or
test
mov
mov
or
cmc
xchg
rorb
sbb
dec
and
pop
mov
xchg
pop
fadd
or
or
sub
shl
cmp
jb
xorl
inc
aaa
addr16
loope
xlat
addr16
push
enter
sub
cmp
sahf
jbe
mov
xor
das
xor
and
nop
inc
std
ja
pop
das
mov
jge
inc
into
ljmp
out
mov
shrl
out
rcll
sbb
dec
xchg
or
jge
xchg
sahf
pushf
mov
adc
adc
xor
sub
lret
test
pop
mov
sahf
fadds
ljmp
ljmp
mov
pusha
je
pop
cwtl
adc
cmc
adc
xor
sbb
xchg
cmp
sub
push
jb
hlt
xlat
out
mov
ret
aad
test
imul
sub
lcall
fsubs
decb
movsl
pushf
repnz
pushf
cmp
scas
movsl
jle
fbstp
aam
mov
cs
xor
add
test
adc
clc
mov
call
test
repnz
test
push
dec
mov
or
pop
jnp
sbb
dec
cmp
and
mov
int
xchg
xchg
iret
sub
adc
rorl
lock
lahf
fldenv
rcrl
add
push
jne
push
in
cmp
or
inc
jae
mov
mov
imul
and
push
lods
mov
mov
aam
or
sahf
pop
addr16
pop
push
orl
xchg
movsb
dec
int3
and
dec
inc
sbb
loopne
pop
fld
push
loopne
out
popl
or
push
cmpsb
int3
or
push
dec
sub
jno
mov
push
cmp
pop
rcr
icebp
lret
and
mov
test
loope
jle
std
dec
mov
xchg
call
ja
adc
in
icebp
sbb
call
enter
call
mov
push
gs
jecxz
mov
ret
and
mov
ja
hlt
dec
fsubrs
dec
clc
mov
inc
nop
aas
adc
xor
pop
fucomip
add
mov
cmp
imul
sbbb
xchg
push
rcr
lds
aad
fldl
dec
jb
leave
data16
and
in
lahf
pusha
push
icebp
jb
xchg
add
rolb
inc
inc
es
sarl
add
popf
sbb
pop
jae
jg
mov
sub
outsl
test
in
sbb
je
mov
sub
aaa
jecxz
adc
stc
orl
pushf
xchg
cld
fmuls
jl
jmp
and
cld
mov
inc
repnz
pop
ja
stos
fs
testl
sbb
aaa
aaa
mov
mov
inc
mov
jg
mov
ja
jnp
aam
popf
xor
xchg
leave
mov
mov
mov
aam
je
push
push
loopne
sbb
int
pop
pop
xor
psllw
push
cmp
lret
adc
mov
imul
add
lods
sub
push
pop
in
test
in
rolb
in
or
scas
mov
flds
push
stos
xchg
jp
xchg
xor
or
cltd
into
adc
rcrl
in
ljmp
lret
xchg
push
dec
sbb
sar
lds
xchg
mov
lret
rcrb
aad
cmc
in
into
and
loopne
xor
xor
inc
jo
mov
aaa
bound
lcall
jno
xchg
stos
scas
aas
rcrb
scas
ret
lock
lods
jbe
cli
pop
cmp
fs
push
cwtl
adc
inc
stc
xchg
inc
sbb
sub
lods
or
leave
push
popf
cmp
lcall
es
ret
mov
mov
push
cli
ret
iret
arpl
push
pop
das
fcoml
mov
fisttpll
dec
add
xchg
mov
and
movhps
pop
mov
aas
cmp
xor
mov
xchg
loope
ja
out
jmp
cmpsb
sub
pop
add
int3
sub
fwait
adcl
sub
cmp
fldenv
cmp
ljmp
sub
in
mulb
pusha
cmp
jo,pt
pusha
pop
push
inc
add
jae
hlt
stc
sbb
mov
jbe
jb
mov
xor
movsl
cmpsb
push
add
enter
mov
fwait
sub
test
pushf
mov
lret
insb
mov
lret
daa
mov
xlat
adc
js
cmpsl
mov
xorb
pop
mov
jno
xor
pop
push
add
and
sbb
xor
sbb
aas
lods
xchg
and
pop
mov
fstl
add
decb
mov
stos
in
out
cs
cltd
push
idiv
popl
lcall
fcoms
sbb
add
popa
adc
push
sti
hlt
mov
scas
ret
leave
movsb
sub
fcoml
mov
popl
cmpsl
push
pop
mov
repnz
xor
push
rclb
sahf
and
xor
mov
in
stos
jge
jge
outsb
pop
mulb
xor
bound
mov
das
xchg
xchg
xor
stc
lret
pusha
push
lret
jmp
xchg
pop
nop
popf
dec
cwtl
mov
mov
or
sbb
xchg
cmp
fistps
jecxz
mov
dec
jl
jne
pop
and
sub
das
cwtl
enter
jns
shl
push
and
scas
clc
mov
sbb
inc
mov
cmp
or
push
int3
pop
or
or
inc
sahf
aad
mov
sar
xchg
push
mov
in
mov
xchg
addr16
xchg
repz
pusha
push
shrl
jb
xchg
inc
cmp
test
adc
jg
pop
push
push
fdivs
mov
insl
stos
mov
inc
mov
add
icebp
fimull
imul
add
mov
xor
nop
iret
mov
lea
dec
add
push
lcall
and
sbb
rol
mov
adcl
cmp
aaa
pop
les
inc
shlb
or
sbb
insb
and
dec
or
pop
xor
popf
xor
repnz
jae
adc
mov
enter
loope
mov
in
in
or
add
std
or
mull
xchg
add
stc
cmp
dec
push
jp
cwtl
fdiv
mov
insb
imul
out
add
movsb
add
mov
jns
adc
mov
jb
aas
mov
jmp
xchg
inc
sahf
pop
test
leave
push
gs
add
jmp
andb
jmp
and
sub
pusha
lret
adc
lcall
mov
into
pop
testl
xchg
in
decl
push
adc
fcmove
xor
mov
je
mov
lcall
fs
jp
addr16
mov
sub
sbb
icebp
mov
sbb
xor
mov
imul
pop
das
or
mov
imul
cmp
adc
push
xor
push
ret
or
mov
aas
jle
xchg
sub
rcl
pop
and
lcall
mov
popf
xlat
mov
sub
cmpsl
mov
sbb
pop
inc
jp
jmp
sbb
or
cltd
sbb
iret
repnz
dec
inc
add
mov
hlt
adc
insl
dec
sbb
gs
loopne
push
jecxz
add
dec
cmp
inc
aam
add
incb
mov
mov
xlat
out
mov
dec
push
pusha
sti
int3
pop
xchg
inc
hlt
inc
adc
mov
jne
pop
aam
cmp
mov
fwait
push
push
pop
cmp
mov
push
jmp
lret
std
inc
push
cmp
xor
xor
pop
shlb
mov
dec
aaa
stos
push
stc
orl
and
sbb
jecxz
inc
out
jno
jbe
inc
imul
sbb
sub
gs
sbb
dec
aad
hlt
dec
sahf
arpl
repnz
xor
dec
jne
mov
fcmovu
div
pop
popf
mov
out
dec
cltd
cs
cmp
insb
mov
in
stos
jb
mov
and
xchg
arpl
pop
adc
fs
rcll
pop
fcmovne
jp
test
add
cmp
out
pop
adc
insb
jno
add
stos
es
insb
adc
lret
mov
jo
movsl
mov
cmpsl
inc
enter
mov
dec
mov
inc
out
mov
mov
iret
sub
pushf
pop
inc
popf
into
xchg
pop
push
mov
mov
and
dec
sub
jl
xlat
dec
daa
mov
addr16
cmp
lcall
stc
and
fsubl
sar
jge
mov
fists
nop
jo
and
int3
mov
adc
adc
mov
jnp
rorl
lret
je
bound
push
out
adc
aas
cmp
mov
mov
std
sbb
js
ret
jg
dec
push
push
push
mov
hlt
test
hlt
dec
dec
cli
push
or
stc
mov
stos
lods
adc
ja
lock
cmp
jb
inc
and
negl
shl
movsb
filds
mov
lahf
movsl
jno
sub
adc
fs
aaa
adc
cltd
cmp
test
jbe
movsl
jle
cmc
adc
sbb
popf
lret
add
adc
aaa
cmp
xchg
call
cld
sub
mov
movsb
mov
ds
pop
movsl
clc
jmp
mov
push
in
pushf
repnz
insb
dec
loope
pop
xor
xor
inc
xchg
ficoml
fs
cli
sahf
nop
push
sahf
mov
pop
add
call
xchg
and
xchg
inc
dec
enter
outsl
push
jge
mov
jb
add
and
xchg
xchg
or
movsb
push
mov
dec
cwtl
sbb
pop
cmp
sti
out
icebp
inc
pop
in
fcmovnb
sub
dec
ds
mov
ljmp
sub
les
inc
test
lret
ss
jmp
sbb
ret
mov
cmpsl
fadd
sub
xchg
daa
ljmp
jne
das
sub
dec
sbb
sar
cmp
mov
inc
das
push
js
dec
clc
add
mov
hlt
pop
jnp
mov
fistpll
imul
jne,pn
xchg
adc
test
xor
adc
fmull
cwtl
mov
mov
jle
popf
jb,pn
push
ljmp
sub
xchg
int
mov
mov
push
mov
rcl
fisubs
inc
repz
int3
ja
scas
push
inc
lret
cmp
cmp
jl
xchg
dec
sub
call
in
and
bound
das
iretw
mov
int3
sti
dec
mov
cmpsb
movsb
or
out
push
add
add
and
mov
sarl
push
xchg
movsl
mov
and
sub
add
or
les
ljmp
push
or
movsl
mov
dec
jle
inc
adc
gs
aad
inc
inc
aam
jge
loope
jmp
in
daa
adc
inc
adc
sbbl
lods
je
inc
bound
bound
aaa
ja
push
mov
clc
mov
ret
mov
pop
lods
inc
sbb
repnz
jbe
sahf
inc
or
aaa
cmp
ss
ficomps
orl
fstpt
push
pushl
xor
xor
xlat
cmp
jnp
or
popa
sbb
jae
inc
xchg
icebp
mov
movsl
mov
mov
ss
xor
insl
pop
sti
inc
lret
and
stos
andb
or
frstor
loope
test
daa
into
je
daa
in
loop
es
add
cs
sub
daa
xor
insl
filds
jp
iret
sbb
inc
lock
or
addr16
adc
and
repz
lahf
movsl
pop
adc
mov
sbb
ret
xchg
xrelease
add
les
int
adc
or
add
insb
daa
mov
divl
dec
dec
inc
ljmp
call
pop
dec
loope
mov
mov
scas
fiadds
mov
dec
call
or
outsl
xor
es
pop
pop
aam
pop
add
or
inc
frstor
adc
fwait
mov
xchg
clc
outsb
adc
hlt
aad
add
and
mov
nop
fisttps
and
adc
fs
sbb
dec
and
inc
fs
rorb
ds
test
dec
lret
loope
sub
leave
cmp
sbb
jb
pop
lret
adc
xor
push
mov
jae
inc
lret
js
sbb
shlb
pop
jmp
adc
pop
push
push
cmp
in
ret
rcl
lea
aas
dec
mov
icebp
push
jge
fucom
outsl
and
dec
add
mov
leave
cld
ljmp
sub
movsb
mov
jne
cltd
mov
xor
jnp
aas
dec
in
insb
add
and
fidivrs
cs
fstp
repz
inc
test
jge
inc
outsb
mov
dec
out
imul
ss
adc
dec
cmpsl
inc
pushw
dec
ret
push
dec
nopl
mov
add
mov
in
jno
imul
pop
add
mov
leave
movsl
inc
in
mov
popf
mov
jmp
data16
pop
jp
push
scas
icebp
pop
pop
jno
pop
and
lcall
and
nop
fnstcw
xor
adc
icebp
sub
jno
clc
cmpsl
sbb
out
mov
sub
clc
nop
int
xchg
lahf
rolb
adc
mov
movl
jb
lds
dec
out
and
pop
scas
add
push
pop
xchg
xor
jp
lret
mov
imul
mov
mov
stos
sub
cmp
mov
add
aaa
insb
xchg
lret
movsl
stc
push
pop
out
mov
mov
sbbb
xor
loope
cmp
lds
push
xor
sbb
mov
in
push
mov
insl
sbb
push
nop
cld
outsl
scas
pop
sub
dec
out
mov
into
fadd
jecxz
sub
in
jb
adc
push
and
inc
pop
pop
nop
out
mov
xchg
out
push
and
mov
push
push
mov
sbb
sbb
pop
cmpsl
popf
pop
dec
xchg
jno
xchg
inc
mov
sbb
icebp
mov
pushl
pop
enter
aad
xchg
movsb
fidivrs
or
and
cmp
out
or
jge
outsl
js
mov
push
jb
decb
push
mov
pop
and
push
xchg
or
addr16
js,pn
arpl
fucom
inc
ljmp
in
xor
push
and
sahf
popf
in
pop
push
and
dec
mov
jg
mov
sahf
fnsave
pop
clc
pop
lea
xor
pusha
clc
mov
ljmp
pop
sbb
xor
push
jmp
outsb
out
and
jl
xchg
pop
xor
in
fbstp
add
aad
mov
add
sbbb
xor
daa
jmp
cmc
fld
stos
inc
inc
mov
adc
movsb
push
jge
sub
in
adc
xor
fcomi
and
into
push
out
mov
mov
dec
stos
es
mov
cmp
lea
inc
push
mov
mov
data16
push
js
inc
xchg
push
mov
cwtl
sub
push
fdiv
insl
lods
mov
sub
dec
xor
push
stos
test
loop
adc
popf
inc
push
nop
sbb
inc
into
adcb
xchg
pusha
iret
lods
dec
lods
in
es
stc
out
xchg
js
add
aad
xchg
add
out
push
xchg
or
add
jne
cld
mov
jb
mov
lods
mov
out
or
pop
jmp
sbb
hlt
add
adc
adc
pop
fsubs
and
sti
jmp
in
faddl
adc
xlat
mov
pop
ret
daa
loopne
repz
dec
std
pop
pop
dec
add
mov
mov
stos
lods
xchg
dec
mov
repz
loope
jns
fstpl
int
bound
xchg
clc
sub
jbe
push
enter
iret
inc
inc
imul
lret
sub
xorl
push
adc
push
dec
iret
add
mov
lcall
xor
cs
mov
imull
out
inc
les
mov
xchg
scas
outsl
lods
jns
xchg
mov
addl
jecxz
lock
jns
sbb
inc
mov
fsubs
test
dec
mov
aad
test
jmp
mov
dec
test
pop
stos
in
mov
cmp
inc
loop
lret
gs
lahf
jns
add
in
arpl
cmp
xchg
movsb
mov
mov
xchg
clc
xchg
jl
adc
gs
scas
push
rol
push
fimull
lock
btr
jle
sbb
xchg
in
aam
testb
arpl
jae
or
fnsave
adc
mov
mov
ret
or
adc
inc
sbb
push
ror
xor
add
lcall
push
pop
mov
sbb
loopne
inc
xchg
push
mov
ret
or
mov
lret
sbb
mov
sub
mov
ja
add
call
xchg
dec
mov
and
out
and
negl
pop
mov
inc
mov
add
push
sub
fidivrs
push
lret
lock
jmp
mulb
int
das
and
pop
outsb
orb
dec
lret
or
and
or
pusha
and
cpuid
sub
into
nop
test
inc
iret
ds
xor
aas
divb
mov
or
jg
hlt
xchg
adc
xchg
add
adc
in
and
xchg
adc
sarb
adc
xorl
call
hlt
mov
xorl
loop
inc
fimull
dec
ljmp
insb
or
xor
je
cld
or
dec
popa
shl
xchg
xor
mov
lret
orl
mov
movsl
insl
and
dec
xchg
pusha
repz
adc
stc
adc
imul
xor
mov
dec
mov
test
inc
xlat
fistps
out
idivl
mov
cmpl
or
push
pop
stos
sub
je
out
imul
push
pop
cmp
and
inc
mov
ror
mov
mov
mov
out
ret
out
mov
or
sbb
or
push
ficoms
cmp
jp
sahf
jle
cwtl
stos
sbb
ss
dec
lea
inc
adc
sbb
insb
or
int
lea
subl
out
xchg
push
mov
aam
add
mov
insl
out
aas
inc
mov
aaa
jae
loope
data16
and
inc
mov
xchg
int
rorl
push
sahf
lods
ret
mov
subl
cli
subb
adc
adc
fstp
cmp
mov
mov
xchg
lods
add
pop
add
insb
sub
cmp
push
ja
add
xor
and
or
mov
andl
jne
fiaddl
arpl
roll
dec
pop
mov
addl
stc
lods
mov
inc
xchg
pop
sbb
mov
es
push
push
sbb
out
sbb
mov
and
lret
mov
lods
sbb
jne
je
orl
fstps
roll
aas
push
mov
std
xor
call
push
pop
lret
addr16
loop
pop
or
pop
mov
sarl
js
mov
fs
and
xor
and
cmp
pop
inc
pop
mov
out
negb
repnz
aad
enter
int3
ret
ret
push
mov
aam
xchg
mov
mov
push
cwtl
jmp
mov
push
in
popf
sub
dec
jle
xchg
enter
or
push
into
push
je
notl
inc
pop
adc
jnp
add
sbb
push
xchg
mov
jbe
jmp
xchg
push
ret
push
xchg
frstor
fimull
adc
lock
cmp
daa
loope
dec
je
punpckhbw
jnp
dec
dec
lret
mov
sbb
xchg
and
inc
push
xchg
or
or
mov
add
stc
imul
bound
cmp
rcll
sbb
call
insl
out
test
mov
push
push
lds
es
andb
or
sbb
cmp
xor
dec
adc
lret
out
data16
cmc
lods
test
jo
xlat
fiaddl
fucom
daa
in
shlb
adc
clc
sbb
addr16
sub
data16
in
dec
test
push
push
int3
cmpb
mov
pop
je
decb
cmpsb
test
mov
pop
xchg
mov
lcall
pusha
mov
stc
sbb
dec
lret
sahf
lods
lea
jb
pop
das
mov
jne
cwtl
cmp
lcall
dec
mov
pop
add
jle
es
repz
or
int3
je
or
adc
dec
loope
ret
dec
jns
pop
sbb
or
push
lret
inc
mov
fcoms
test
insl
mov
pop
jp
jnp
filds
movl
push
out
mov
sarl
sbb
shl
aam
adc
jnp
pop
lea
sbb
mov
and
inc
dec
pop
clc
xchg
cmpsl
testb
das
add
inc
push
mov
movsb
inc
ja
add
or
dec
inc
jmp
and
orl
jmp
cmpsl
xacquire
bt
aad
xchg
pop
lock
add
adc
gs
aaa
cmp
mov
lahf
mov
pop
mov
in
push
repz
call
icebp
mov
jmp
loope
jbe
jb
jle
xchg
sbb
jbe
push
sbb
repnz
or
mov
cli
mov
add
aaa
adc
mov
lods
pop
cwtl
andb
lcall
add
mov
mov
out
dec
repz
stc
pushf
std
in
loopnew
inc
fs
push
mov
mov
dec
pop
fcoml
sbb
mov
or
xor
push
pop
lods
shrd
or
icebp
push
lock
and
push
dec
sbb
jne
pop
nop
popf
mov
es
jo
cmp
std
fmull
lcall
leave
mov
jnp
jae
leave
in
xor
or
cld
cmp
jecxz
test
adc
loope
out
vmovsldup
into
in
pusha
mov
jecxz
dec
int
dec
lcall
cwtl
clc
pushf
pop
inc
push
pop
pop
pop
fcoms
out
jg
out
mov
enter
popa
mov
ljmp
loop
leave
xor
incb
aaa
fcompl
mov
iret
add
pop
outsb
push
sbb
pop
pop
cmc
jns
sahf
call
mov
xor
cmp
orl
jns
jp
pop
icebp
jo
lahf
mov
lock
xchg
and
xchg
int
enter
mov
mov
mov
clc
sbb
xchg
xchg
fs
scas
add
int
xor
push
in
add
mov
lock
fnstenv
pop
pop
cwtl
sub
cltd
inc
pop
and
sbb
sbb
outsl
popa
fsubrl
xchg
dec
cmp
jno
testl
mov
dec
mov
fisttpll
repnz
in
js
cltd
or
push
int
cmp
adc
jmp
xorb
stc
pop
mov
lret
sahf
pop
inc
sbb
cmp
mov
imul
mov
int
mov
dec
icebp
xor
pop
xchg
out
cmp
out
or
and
mov
or
fdivrl
adc
mov
das
jp
in
test
xchg
pop
dec
inc
pop
adc
mov
add
or
sub
pop
and
mov
shld
xchg
pushf
sbb
aad
or
fcmovbe
sub
mov
fdiv
or
jg
jp
push
and
lcall
or
leave
cmp
je
xchg
dec
loope
mov
dec
lahf
xchg
xchg
push
loope
fwait
mov
cmp
sahf
pop
imul
negl
lret
sub
pop
mov
outsl
or
push
mov
sub
std
mov
dec
adc
push
inc
sub
xchg
inc
sub
mov
sub
pop
stc
cmp
dec
pop
xor
jo
xor
xchg
mov
and
xor
scas
sub
add
push
lret
cwtl
or
pop
xchg
jbe
cmp
xchg
repz
mov
add
movsb
inc
test
loope
mov
mov
icebp
dec
cmpsb
fwait
pop
aaa
and
inc
cmp
enter
in
sti
repnz
mov
rolb
jg
aam
stos
mov
and
je
in
jle
jecxz
jmp
cmp
sub
inc
fwait
push
cmp
inc
jecxz
jae
fwait
mov
push
dec
mov
and
mov
fisttpll
fldcw
out
push
std
hlt
cmp
std
dec
and
sbb
mov
jns
xor
push
sbb
test
lock
enter
inc
dec
lea
push
imul
pop
mov
xchg
or
cmp
popa
jne
xor
inc
xchg
xchg
inc
scas
dec
push
xchg
and
mov
hlt
inc
sub
std
adc
and
aam
cmpl
fcmovnbe
pop
iret
mov
data16
inc
sarb
mov
cmc
push
push
sbb
push
daa
les
mov
test
arpl
rolb
daa
and
push
loop
mov
outsb
sbb
xchg
cltd
imul
inc
lcall
xchg
test
push
pop
push
roll
jecxz
cmp
pusha
dec
clc
pop
cmp
and
push
fisttpll
int3
std
outsb
sbb
loopne
mov
xchg
in
fwait
cs
push
inc
das
xor
jmp
div
xor
cmp
fistps
in
jo
jbe
add
clc
stos
jge
int3
jp
rorl
mov
into
idivb
sahf
sar
cmpl
jno
scas
inc
lock
arpl
xlat
rolb
sub
js
or
pop
btrl
xor
ss
add
test
push
and
loopne
loope
lcall
push
jle
stos
lea
iret
add
dec
cmc
into
sahf
movb
mov
fldenv
pop
dec
mov
sbb
mov
cmp
lret
sbb
add
xor
dec
mov
xchg
repz
jl
das
jp
lods
push
hlt
aas
push
fisubl
jo
imul
jo
mov
icebp
fldl
dec
rcrb
movsb
adc
insl
jnp
sbb
dec
sahf
jae
mov
outsb
popf
xor
pop
mov
popf
rcrb
call
xor
adc
mov
jle
sahf
push
test
and
movsb
dec
ret
push
jle
mov
xchg
and
pop
xchg
push
pop
movsl
shrl
pop
pop
jp
xlat
ret
jnp
xor
fdivrl
popa
lret
xchg
or
ds
call
push
gs
adc
dec
std
inc
xchg
aam
jmp
repnz
int3
aaa
adc
push
sub
add
fst
aad
push
icebp
int3
add
xchg
movsb
dec
jp
sbb
and
xchg
dec
dec
dec
xor
add
lods
dec
stos
add
imul
pop
dec
in
add
jbe
clc
sub
xorl
lds
cmp
fwait
jp
or
pop
je
push
xor
and
jmp
pop
jmp
stc
xchg
std
repnz
test
mov
repz
sub
iret
insl
xchg
cmpsb
inc
mov
jle
inc
ljmp
fsubs
xlat
int
in
xchg
shrb
mov
dec
dec
push
sahf
xchg
rcl
stos
cltd
sub
dec
mul
jno
movsl
repz
repz
mov
ret
mov
xlat
push
add
aam
adc
dec
sbb
fldenv
loope
jns
jns
fincstp
push
ljmp
stc
pop
imul
cmc
adc
loopne
inc
or
movl
test
jns
lds
insl
aaa
out
mov
pop
push
arpl
arpl
ss
sbb
adc
mov
lock
add
cmc
scas
sbb
ret
jp
lock
sti
sbb
call
mov
sub
jecxz
fiaddl
outsl
mov
sbb
lea
push
test
pop
cmpsb
xchg
push
xchg
js
imul
pop
push
out
pop
into
mov
lods
in
data16
repnz
xor
fs
and
je
mov
xchg
adc
jge
pop
int3
lea
stos
push
sbb
jmp
mov
clc
not
inc
mov
addr16
adc
bound
je
inc
std
lods
ret
push
cs
clc
jae
daa
mov
das
xor
jmp
dec
add
xchg
and
mov
inc
dec
in
cld
enter
rdtsc
cltd
lods
xor
mov
xchg
push
add
or
push
xlat
mov
sub
aam
add
es
lock
cs
add
pop
pop
dec
outsl
adc
sbb
mov
xchg
mov
cmpsl
and
loop
jl
xchg
addb
or
inc
aas
les
xor
repz
movsl
sub
mov
jae
idiv
dec
out
push
int3
in
mov
pop
fcmovnu
add
mov
cmc
jecxz
push
in
jp
lahf
je
mov
gs
push
mov
jns
lods
dec
loopne
cli
dec
push
mov
mov
dec
fsubrl
push
xlat
imulb
popa
addr16
cmp
into
lock
fisubl
pop
rcll
stos
pop
mov
in
test
mov
iret
xchg
inc
icebp
mov
dec
movzwl
mov
sub
jmp
stos
in
dec
inc
popf
sbb
xchg
pop
pop
cmpsl
xor
sbb
call
push
cli
mov
cmp
xlat
stc
dec
loopne
popf
dec
jge
jle
inc
push
mov
testl
mov
sbb
pop
mov
icebp
mov
jp
lea
jl
inc
sub
mov
repz
repz
shr
in
bound
jecxz
pop
mov
sbb
inc
cwtl
cltd
jecxz
out
aam
or
nop
mov
mov
sub
dec
and
cmpsb
or
call
fnstcw
push
mov
mov
in
pop
inc
mov
clc
xor
dec
shll
pop
hlt
cmp
push
sub
dec
adc
inc
pushw
in
js
adc
adc
mov
jmp
xchg
inc
andb
pop
mov
lock
push
cmp
imul
sub
xchg
in
adc
pop
test
push
dec
pop
mov
fisttps
xor
and
shl
outsb
mov
je
xor
push
stos
test
cmp
fidivrl
dec
jp
or
xor
inc
xor
push
aam
in
arpl
jnp
adc
pop
popa
adc
xor
mov
cli
lock
fistpll
outsl
cmp
pop
in
inc
xchg
ss
mov
pop
je
jle
mov
cwtl
add
cmpsb
xchg
sub
and
jno
aad
cld
xorb
lret
xor
pop
adc
sub
adc
testb
mov
and
push
subl
jb
test
enter
jno
fsubrl
adc
clc
mov
es
fdiv
inc
inc
sub
xor
ret
push
mull
aaa
adcb
hlt
mov
pop
cld
es
xchg
cmpl
push
das
stc
adc
jge
lds
sbb
or
stos
pop
divb
iret
loope
sub
fisubs
fnstsw
mov
inc
leave
xchg
inc
cwtl
je
repz
scas
dec
add
repnz
aaa
scas
daa
ja
pmuludq
jecxz
enter
ret
lods
sub
adc
mov
inc
insl
subl
inc
out
dec
aam
loopne
sahf
pop
test
lcall
stc
sarl
mov
les
outsb
push
into
sub
mov
cmp
lcall
cmpl
xchg
clc
jnp
je
mov
in
push
aad
push
dec
adc
test
mov
fwait
jns
aaa
mov
xchg
mov
test
fucomi
jmp
adc
call
lds
xchg
mov
fs
inc
mov
ljmp
inc
out
divb
xchg
scas
xor
movsb
lret
sar
cmpsb
dec
gs
lds
dec
push
sti
jmp
push
fwait
sub
addl
popa
iret
jb
adc
xchg
jae
cmpsb
xor
xor
xchg
into
mov
jne
adc
dec
or
cwtl
fcoms
outsl
mov
adc
push
pop
call
imul
dec
jns
pushf
mov
mov
aam
lea
sahf
stos
xchg
push
pusha
pusha
push
inc
movsl
std
pop
cs
shrb
or
adc
mov
jb
xchg
aas
push
repnz
movsl
xchg
enter
jg
cmpsb
add
jo
xor
jb
pxor
push
and
sub
xchg
pop
test
adc
es
outsl
dec
in
xor
lds
push
lret
adc
and
nop
xchg
flds
arpl
add
and
jmp
scas
int
test
mov
sbb
add
cmp
inc
mov
mov
or
aam
mov
adc
mov
or
jno
popf
cmc
push
pop
outsb
mov
sub
lock
in
addb
loopne
pop
std
push
addr16
jno
cmc
stc
std
lahf
add
pop
cmp
mov
and
jmp
sub
int3
lret
or
roll
ret
mov
mov
divb
mov
and
cmp
loope
sbb
push
dec
push
inc
je
mov
mov
or
fnsave
push
add
cs
into
pop
cmp
dec
jecxz
into
lds
out
mov
lret
mov
lcall
lods
loope
rcl
jecxz
sbb
push
sub
lret
fs
movsb
cmp
enter
jge
xchg
jno
in
clc
cmc
imul
cmp
rol
inc
and
jmp
sbb
pop
int
lea
mov
add
and
and
lret
adc
adc
cmp
outsb
sahf
mov
mov
push
cli
lock
out
jmp
lret
pop
pop
sbb
mov
sub
mov
lret
shl
dec
jp
loop
ljmp
pop
dec
ja
mov
jae
push
sbb
jbe
or
outsb
ljmp
inc
and
cmp
sahf
lock
inc
insb
add
inc
xor
movsb
adc
inc
pop
pop
and
and
push
jbe
mov
mov
ret
hlt
jge
fldenv
push
int3
sbb
fsubs
icebp
cld
mov
cmp
popa
cmc
or
mov
popf
jno
lret
push
popf
dec
punpcklbw
nop
sbb
push
lret
xor
int3
ret
out
aam
arpl
jne
cli
in
push
mov
xchg
cltd
push
enter
or
sub
and
cmp
push
mov
outsb
ljmp
adc
pop
xchg
and
fcmovnb
shl
imul
cmc
mov
and
negb
or
loop
push
int3
leave
sbbb
lock
addr16
mov
push
and
push
push
stos
mov
dec
mov
jo
stos
shrb
xor
enter
arpl
int3
sbb
xchg
int
adcb
call
mov
fisubs
ds
pop
in
sbb
addr16
pop
leave
stos
push
insl
repz
aam
scas
cwtl
sarl
push
xchg
and
dec
add
ret
repnz
mov
ret
push
aad
cltd
not
inc
js
jne
jbe
mov
mov
mov
xchg
xchg
inc
inc
stc
aaa
pop
sub
testl
out
push
inc
iret
ficomps
cld
mov
and
dec
push
mov
add
cmc
and
pop
clc
das
inc
cli
iret
or
insl
stos
cmpsb
lret
cltd
add
ss
enter
cltd
out
clc
int3
inc
lret
arpl
in
insl
aam
dec
mov
std
dec
ret
mov
inc
in
fucomp
ja
addl
sub
cwtl
push
push
push
xchg
repz
or
cmp
push
and
dec
sub
pushf
imul
jmp
mov
js
cmpsl
dec
fists
jae
fsubp
out
mov
sbbb
xchg
jg
out
pop
add
jl
jae
btc
jbe
mov
jge
jno
cltd
push
mov
mov
sbb
lods
jnp
in
iret
mull
mov
movsl
sub
mov
les
sbb
and
movsl
inc
sbb
decb
mov
add
xorl
mov
inc
xor
xchg
shrb
neg
js
rorb
pop
in
xchg
gs
xchg
ss
cmp
add
adc
pop
push
adc
std
frstor
cld
testl
and
pop
inc
pop
sti
adc
test
push
inc
sbb
ljmp
ret
repnz
adc
rcrb
add
sti
mov
fs
push
dec
insl
je
les
popa
adc
scas
jmp
loop
mov
xor
call
jne
mov
add
mov
pause
xor
scas
pop
stc
mov
xorb
cltd
fistps
and
notb
insl
insl
add
aaa
xchg
test
dec
xor
ret
outsl
xchg
lret
hlt
lret
add
or
les
out
ret
sbb
gs
jge
dec
inc
pop
jmp
sub
fsubrl
push
xor
and
push
outsb
push
js
xchg
and
shll
enter
iret
mov
sub
adc
push
sbb
shll
cmpl
cmpsb
scas
mov
jge
imulb
addr16
jo
sbb
sub
test
nop
subb
push
mov
ret
scas
mov
pushf
and
mov
or
jne
xchg
in
incb
ljmp
xchg
lret
lods
aas
aad
mov
inc
ljmp
jbe
jmp
sbb
cmc
mov
rorb
inc
pop
mov
ljmp
fs
xor
xor
add
in
test
mov
cmp
imul
cwtl
mov
pop
addr16
js
nop
mov
scas
lahf
sub
inc
lahf
call
shrb
fbld
scas
jne
add
push
in
mov
arpl
pop
jno
mov
adc
ljmp
sti
inc
insb
cmp
mov
or
mov
cmp
je
lds
int3
and
dec
sbb
and
scas
out
mov
mov
data16
jae
xor
sub
pop
and
dec
mov
adc
adc
outsl
or
leave
or
sbb
mov
xchg
sarl
in
pop
or
popf
mov
in
or
pop
xor
sub
shlb
cmp
xor
fistps
fiaddl
enter
clc
xchg
cmp
mov
push
fsubl
sbb
sbb
cmp
push
addl
scas
xchg
roll
sub
xor
shl
push
mov
pop
scas
adcb
mov
xchg
add
jmp
add
scas
xchg
cmp
adc
cmp
stos
mov
pushf
adc
std
cmp
test
cmp
aad
sub
push
mov
add
stc
jbe
stc
lds
in
test
inc
fs
sbb
adcb
adc
adc
repz
push
sub
lock
inc
test
adc
xchg
add
or
or
jg
dec
mov
test
pop
sti
mov
ret
movsb
pop
scas
in
mov
insl
in
cmp
leave
test
mov
leave
mov
daa
scas
movsl
or
pop
out
rcrb
jo
repnz
xor
aam
add
and
mov
stos
mov
adc
sbb
lock
filds
das
add
lcall
sbb
xlat
or
or
xchg
dec
cltd
les
out
test
sub
in
test
shl
in
push
sti
dec
lret
into
and
mov
enter
cwtl
pop
stos
lds
scas
jge
dec
dec
dec
fnstenv
and
pop
pop
nop
add
mov
mov
rcrb
cmp
shl
add
xchg
in
fistpll
inc
dec
js
out
lcall
jae
push
mov
das
stc
daa
shl
sti
adc
out
add
and
cmp
test
mov
test
xor
inc
shll
jb
pop
stos
outsb
pop
dec
movsb
fs
push
xchg
mov
and
insl
xchg
arpl
into
pop
push
bnd
xor
jae
aaa
mov
sbb
lds
das
iret
les
sub
sbb
rolb
clc
fildl
in
jo
outsl
jle
aam
xrelease
sbb
loopne
cltd
jnp
test
inc
imul
popa
enter
daa
aaa
arpl
out
addb
pop
pushf
adc
inc
xor
or
mov
add
ljmp
xor
add
add
push
loopne
popf
ds
pop
ljmp
fucomip
enter
ret
arpl
push
add
mov
les
test
mov
jmp
repz
xchg
push
repz
mov
push
add
inc
fbstp
scas
fdiv
inc
adc
fnstenv
rcl
addr16
test
pop
mov
stos
mov
pop
sub
sub
outsl
push
ljmp
sti
and
sbb
imul
bound
or
enter
dec
push
fcomp
sbb
inc
cli
cli
mov
sti
test
bound
lea
into
add
insl
pop
jbe
lret
sahf
pop
xlat
jge
adcb
jo
dec
cmp
fadds
xchg
subb
push
sarl
shr
loopne
sbb
add
cli
cmp
jo
sahf
adc
insb
lahf
loopne
dec
xchg
mov
xorb
cs
push
mov
addl
movsl
mov
or
jle
push
pop
into
inc
mov
pop
je
inc
fsave
js
cwtl
in
xor
push
mov
sub
add
inc
in
xchg
ror
aam
xor
test
in
sti
inc
xlat
stos
bound
nop
insl
ret
mov
push
adc
mov
outsb
clc
ret
push
bound
or
sahf
adc
inc
je
gs
cld
es
sbb
pushf
je
cmp
jle
popf
int3
sub
mov
leave
jge
sub
cld
mov
orb
adc
dec
in
shl
enter
sub
outsl
and
inc
and
insl
or
pop
sbb
mov
mov
cmp
out
inc
pop
xchg
sub
jnp
stos
loopne
pusha
inc
outsl
or
aam
movsl
or
sbb
jns
lret
scas
test
adc
or
aad
enter
mov
jp
lahf
or
clc
mov
sub
sbb
inc
sub
int
dec
movsl
mov
jbe
xchg
popf
out
jbe
adc
clc
sbbb
jb
adc
fistl
mov
push
jl
inc
jl
movsb
and
mov
movl
jecxz
sbb
sti
lret
sbb
mov
cltd
push
sub
sbbb
mov
push
dec
push
dec
lds
xchg
fndisi(8087
scas
cmc
push
addb
jns
cld
leave
rcr
dec
fdivrl
jns
dec
or
ljmp
pop
dec
stos
xor
xor
fidivs
push
sti
xchg
int
lods
ret
adc
adc
mov
out
ljmp
sub
pop
xchg
iret
call
or
lret
rcll
into
push
dec
call
insb
cmp
cmp
scas
adc
fldcw
and
scas
jb
pop
in
jge
addb
add
lods
and
clc
out
xor
cld
adc
push
or
mov
cmc
jmp
cwtl
xor
jb
pop
sub
lret
pop
mov
cli
xor
sub
lcall
mov
mulb
or
jmp
push
jg
mov
icebp
jecxz
xor
pop
adc
data16
inc
fcom
imul
dec
jmp
mov
mov
xchg
sbb
ds
jne
mov
dec
jl
mov
mov
mov
stos
jg
cwtl
clc
hlt
mov
pusha
push
out
add
and
sti
out
out
push
in
cmp
or
ja
and
cmc
jne
inc
sub
push
mov
add
sub
xchg
mov
pop
xchg
pop
fwait
mov
jnp
call
in
adc
jl
mov
into
xchg
test
add
xor
stos
xor
jo
icebp
add
dec
popa
and
les
imul
ja
lahf
xor
sub
mov
in
dec
jl
adc
divb
xor
cmp
xor
adc
ret
mov
add
or
popa
out
pop
pop
nop
shrb
inc
movsl
nop
rol
and
dec
cltd
and
push
push
in
cli
push
imul
push
jno
shlb
push
push
jb
dec
xor
jp
xchg
mov
cmpsb
ds
in
jae
out
scas
xor
add
lret
dec
add
aad
push
mov
lods
shll
repz
dec
or
decl
aad
pusha
in
mov
mov
mov
js
orl
fs
rep
les
enter
pop
in
mov
je
mov
shll
das
xor
lea
xor
pop
mov
sti
fstl
cmp
inc
xor
or
and
andl
dec
js
lods
inc
adc
pop
out
das
popl
addr16
dec
sbb
adc
ss
in
sub
into
loop
jmp
les
imul
pop
push
xor
rcrl
push
inc
push
adc
mov
in
imul
fiaddl
cmp
ret
hlt
jbe
loop
add
rep
and
xor
sahf
sbb
aaa
in
and
sbb
sbb
repnz
scas
pop
jno
cltd
dec
jl
les
jo
mov
lea
out
mov
pushf
push
push
scas
and
jbe
xchg
fisubrl
push
jne
lods
rolb
daa
xchg
add
mov
out
push
push
les
push
dec
dec
push
ret
and
iret
sti
mov
mov
mov
cmp
mov
ret
adc
fldl
dec
and
mov
mov
std
testl
pop
and
loope
inc
dec
jl
in
xchg
sahf
pop
je
and
inc
xor
jbe
inc
inc
bswap
sbb
ds
or
adc
or
cli
dec
mov
imul
nop
int
sbb
jg
xor
loope
xorl
test
pop
dec
popa
loop
jmp
out
clc
dec
stos
xor
scas
lret
and
add
push
or
inc
xchg
xor
jp
sbb
xor
and
insl
add
addr16
scas
rcr
in
cmp
pop
xchg
xchg
sub
xchg
insb
xorl
int
repnz
sbb
inc
int
aam
bound
out
dec
sub
sbb
dec
aaa
xchg
lahf
jb
pushf
push
bound
cmc
in
scas
cmpsl
mov
push
rorl
sbb
cmc
movsl
or
dec
sub
cmpsl
test
push
lahf
jp
pusha
push
aad
xchg
cwtl
cmp
mov
std
dec
mov
push
in
dec
scas
nop
sub
push
cmp
test
xchg
pusha
xor
outsl
cs
dec
adc
pop
dec
inc
jge
cmp
call
dec
xchg
adc
mov
xchg
out
push
sub
mov
push
jae
gs
in
fdivl
imulb
pop
test
imul
xlat
ljmp
mov
dec
cmp
dec
push
push
xchg
jmp
fcmovnbe
cwtl
subb
rcrb
in
addps
jno
push
test
imul
cmp
inc
mov
add
pop
or
xchg
in
push
mov
and
dec
xchg
xchg
mov
mov
fwait
jecxz
out
cmpsl
pop
xchg
sub
mov
decl
movsb
mov
lret
ror
xchg
std
fnstenv
test
adc
insb
jbe
push
sbb
loopne
lods
dec
jmp
shl
pop
mov
xor
sbb
clc
fistpl
leave
lcall
jne
mov
add
test
dec
daa
push
rcrl
add
sub
aas
lret
clc
fcomp
and
cmp
addl
mov
mov
std
jae
clc
es
xchg
leave
jne
or
cmp
idivb
mov
test
sub
popa
gs
inc
cmc
mov
mov
mov
gs
stos
or
push
stos
dec
std
rcrb
fs
lock
sub
in
inc
xchg
in
addr16
jb
std
and
lds
imul
dec
cmp
lahf
adc
jbe
inc
jp
sti
and
pushf
ds
push
pop
xor
out
push
enter
push
mov
xchg
push
sbb
or
push
pop
jp
cmc
pop
sbb
js
or
pusha
daa
xchg
sahf
jne
stc
aad
mov
je
std
js
repz
in
mov
adc
push
mov
push
outsl
aam
sbbl
and
or
or
pop
mov
cmp
xchg
shr
leave
arpl
mov
fcmovb
mov
xchg
pusha
dec
or
adc
mov
xchg
or
pop
js
sahf
jle
jns
clc
add
cld
movsl
adc
jb
cs
hlt
and
mov
jp
sbb
fs
lea
mov
mov
cwtl
dec
outsb
out
mov
out
pop
mov
pop
lcall
dec
scas
fwait
jge
pop
ss
lock
or
repnz
mov
ja
jp
or
incb
xor
fidivl
ficoms
xor
add
cmpsb
mov
movsl
lods
pop
cltd
insl
movb
addr16
roll
pop
jo
cmp
xchg
inc
add
sub
fucomi
mov
leave
ret
pop
push
shrb
rorl
jmp
cmpsb
pop
das
js
push
push
sub
lea
ja
les
mov
push
in
mov
imul
es
adcl
fcmovnbe
dec
mov
mov
fistpll
adc
data16
inc
cmp
int
int3
fldt
test
xchg
adc
xor
dec
cmc
sub
mov
leave
popa
pop
and
lods
loop
out
adc
pop
in
orl
insb
pop
loopne
in
mov
mov
lds
ss
push
add
xchg
mov
pop
lret
popf
xor
xchg
dec
cmpsl
fisttpl
mov
xor
ja
pushf
ss
push
sbbb
popf
xchg
lret
lods
movsb
repz
fdivrl
in
jns
push
vmread
and
notb
sub
mov
dec
clc
adc
nop
testb
inc
lret
xorb
lret
aas
fsubrs
shr
iret
inc
dec
loope
or
dec
out
les
pop
shlb
adc
in
stos
movsl
push
or
xor
lods
loop
scas
mov
push
push
sbb
inc
aas
mov
aas
push
push
cmc
adc
aaa
sbb
clc
faddp
call
pop
fs
cmpsl
stc
test
jl
pop
out
and
les
jmp
and
pop
lcall
push
scas
sbb
pop
sub
jmp
xlat
imull
adc
mov
adc
sti
push
mov
ret
and
mov
pop
or
lea
cmc
std
in
sbb
js
inc
mov
pop
jl
or
out
jmp
cmp
push
daa
push
aaa
adc
xor
test
out
jnp
xchg
or
leave
lods
fcoml
out
xchg
adc
or
ljmp
shlb
dec
cmp
into
repz
sub
in
out
das
dec
cwtl
idivb
mov
stos
insl
pop
cmp
jno
xchg
lret
in
adc
dec
xchg
into
push
movsb
mov
rolb
shrb
sub
test
xchg
and
pushf
mov
testl
pop
dec
cltd
nop
inc
out
mov
xor
int3
orb
inc
mov
pop
fcoms
xchg
shll
inc
test
aaa
xor
stos
inc
test
cld
push
mov
std
pop
xor
out
das
imul
adc
ret
test
sbb
pop
xlat
popf
mov
mov
test
std
test
insl
ret
rcrl
sbb
mov
xor
xor
ret
lock
sub
push
lcall
addr16
push
outsb
test
push
inc
dec
pop
mov
rcrl
in
dec
fs
pop
push
je
and
add
mov
mov
xchg
or
mov
jno
mov
jns
in
cmp
push
xlat
mov
and
outsb
daa
add
data16
and
inc
jnp
dec
push
jb
call
aad
stos
imul
inc
out
test
data16
cmp
jecxz
and
sarb
lock
mov
leave
mov
jl
mov
addr16
sub
push
data16
mov
jb
xlat
inc
mov
xor
and
dec
aad
fstpl
push
je
shl
sbb
adcb
jbe
mov
add
pop
mov
mov
call
inc
xchg
sbb
and
clc
mov
sub
inc
enter
inc
dec
or
jo
cmpsl
lret
lahf
leave
test
or
lcall
push
pop
sub
data16
test
add
mov
jnp
sti
or
fwait
loop
incl
clc
xchg
cmp
cmp
je
push
lds
lods
dec
xor
imul
in
scas
pusha
sti
dec
pop
push
lods
lds
sbb
push
popf
fidivrs
sub
movsl
lods
das
movsl
add
cmp
pop
sbb
xchg
cltd
mov
int3
in
paddsw
ss
xor
dec
mov
jns
mov
or
sbb
push
add
in
insb
jae
movsb
loopne
xor
xor
movl
pop
cmp
stos
pushl
mov
jl
add
jge
out
dec
test
push
xor
pop
sbb
adc
mov
sahf
add
jnp
pop
out
test
into
xchg
push
sbb
xchg
dec
push
mov
outsl
mov
pop
mov
stc
adc
mov
repz
xchg
testl
cltd
cwtl
and
or
lea
addr16
loope
addr16
subb
pop
ljmp
pop
or
cmp
inc
xchg
inc
sahf
out
pop
lcall
adc
js
adc
stc
aam
js
scas
push
cwtl
add
sbb
mov
pop
ret
cli
pop
lahf
mov
adc
fnsave
es
arpl
mov
sub
jp
push
xchg
pop
imul
adc
lcall
or
pop
mov
aaa
leave
lahf
mov
or
mov
mov
cmpsl
mov
pop
ret
ljmp
jns
jae
jne
xchg
xchg
out
cmpb
dec
inc
jbe
dec
xchg
bound
loop
in
jmp
and
mov
and
fldl
or
ss
popa
sbb
in
cmp
inc
dec
mov
das
repz
jbe
push
mov
cld
inc
ss
mov
xchg
cmp
sbb
mov
push
fxch
cmpsl
ret
test
adc
and
lahf
es
outsb
dec
cmp
aad
or
dec
cmp
rorb
mov
jno
scas
in
lock
lods
loop
or
pop
arpl
pushf
cmp
mov
push
mov
dec
adc
scas
fimuls
xchg
fadd
inc
push
loopne
cltd
xor
mov
xchg
das
in
and
mov
stos
or
cmp
jne
pushf
lods
das
inc
adcb
pop
and
xor
aad
ja
mov
xchg
push
pslld
xlat
cltd
cmp
ss
fwait
lea
aam
enter
lahf
mov
sbb
sub
push
sub
lock
test
in
popa
and
loope
cmp
les
mov
daa
rolb
and
mov
shr
outsb
dec
add
jbe
mov
add
scas
sub
jae
jge
lahf
pop
push
inc
pop
mov
pop
fnstenv
mov
in
sbb
sti
inc
insl
pop
xor
test
sbb
movsb
pop
aad
mov
pop
mov
test
xchg
push
nop
adc
cmpsb
loope
add
mov
das
arpl
mov
nop
enter
push
xor
inc
sbb
lods
data16
loope
mov
cmp
adc
addr16
sbb
cmpsl
push
popf
divl
sbb
mov
or
adc
and
lods
pop
test
xor
movb
dec
add
loop
xor
xchg
pushl
pusha
xorb
rcrb
push
jmp
push
test
mov
das
cmp
pop
ficomps
push
jne
mov
xchg
es
addb
scas
scas
pop
mov
fstps
mov
add
xlat
jno
inc
mov
mov
or
fidivrl
mov
movsb
cmp
lock
lods
sub
sub
jl
mov
cmc
jno
mov
mov
idiv
dec
pop
dec
test
jnp
test
xor
pop
jl
lcall
loop
adc
rorl
repz
or
jb
frstor
push
xchg
inc
lds
xchg
aad
jb
adc
test
pop
xorps
cltd
fnstcw
cmp
mov
ret
jmp
mov
sahf
ror
lahf
push
mov
rol
inc
dec
jmp
push
stc
fisttpl
mov
rolb
outsb
out
leave
push
adc
lods
fsubrp
test
out
dec
or
fcoms
and
push
repnz
fcoml
ja
dec
enter
imul
pusha
jg
testb
stc
outsl
out
loop
enter
xchg
out
repz
or
adc
jo
mov
pop
and
repnz
and
mov
cmp
add
cmp
xchg
jmp
std
in
jge
mov
push
lods
xchg
xchg
fdivrs
xchg
shrl
lds
xchg
sub
adc
test
xchg
ret
repz
inc
dec
pop
mov
xor
hlt
jge
shr
sbb
divb
out
inc
cs
sub
and
push
imul
add
icebp
ss
insb
hlt
xor
mov
xchg
xor
icebp
or
xorl
std
cmp
push
cmp
incb
scas
add
jmp
scas
cltd
or
mull
ja
stos
cmp
dec
into
lods
push
sbb
loopne
cmp
ljmp
mov
clc
inc
pop
imul
mov
pop
dec
shll
xor
in
dec
and
sub
pop
jnp
mov
imul
fidivrl
push
dec
ss
jg
nop
movsb
bound
fldt
mov
cmp
js
idivl
in
sub
pop
xchg
pop
ja
mov
mov
in
xchg
mov
lds
add
push
sub
sbb
add
test
jnp
das
cli
mov
dec
pop
movsl
xorb
mov
sbb
jle
ds
mov
mov
fcmovb
repnz
jg
pop
mov
je
xchg
fs
loop
push
insb
cs
mov
xchg
or
pop
and
jmp
out
dec
cmp
addr16
negl
aaa
sub
jae
sbb
and
pop
mov
mov
cmp
pusha
jle
pop
mov
cli
xor
mov
cli
push
xor
mov
sub
out
inc
inc
js
cli
and
cmp
sub
int3
xchg
push
cmp
inc
push
das
jae
sahf
mull
pop
loope
sbb
rcll
or
add
push
xchg
push
scas
hlt
lcall
test
out
push
shlb
xchg
in
jb
lods
push
pop
jp
adc
xor
das
jg
push
nop
pop
pop
cmp
xor
and
into
push
mov
pop
inc
adc
lock
pop
jecxz
pop
xlat
jno
enter
add
pushf
jp
adc
sbb
pop
es
sarb
movsb
aam
mov
jmp
outsb
jo
mov
pop
shr
leave
mov
pop
mov
lcall
sbb
in
outsl
iret
jle
or
rcrl
in
clc
push
inc
inc
mov
sub
and
mov
sti
negl
jmp
dec
add
push
jmp
mov
popl
adc
leave
mov
data16
pop
iret
add
loop
mov
out
pop
lahf
jp
stc
or
sar
or
sub
jp
cld
and
aad
mov
dec
lahf
addr16
jmp
fmull
jp
ja
icebp
negl
mov
push
add
mov
enter
aad
and
icebp
sub
push
mov
mov
jmp
dec
cmp
sbb
inc
inc
shrl
cmp
lcall
xchg
push
mov
mull
jl
and
sub
dec
mov
sub
lcall
aas
rcl
cmp
xchg
mov
xchg
shlb
dec
or
aad
nop
dec
jnp
scas
scas
shrb
add
pop
lea
jmp
adc
sbb
ja
fildll
int3
push
add
mov
aad
call
and
ljmp
lret
lahf
and
fsubrl
jp
enter
daa
shr
fimull
gs
dec
xchg
sti
adcl
xlat
inc
mov
gs
aam
dec
or
repnz
mov
pop
add
out
cmp
mov
cmpsl
push
xor
adc
sti
aad
fsubr
mov
shl
push
mov
sbb
stc
sarb
xchg
push
push
xchg
xchg
adc
dec
mov
adc
or
cld
mov
sub
lods
xor
sbb
loop
or
and
in
dec
in
enter
jnp
add
testl
fidivl
ljmp
adc
mov
inc
dec
xor
mov
adc
sub
xor
fs
out
xchg
adc
ljmp
jno
stos
mov
push
jnp
pop
inc
xlat
andl
push
leave
mov
mov
mov
xorl
les
pushf
pop
push
and
lods
int
les
jno
divb
test
dec
mov
xor
and
test
test
xor
cmp
sub
push
stos
movsb
adc
dec
divb
sub
or
lea
std
xchg
xchg
mov
add
fisubrs
fdivrs
cmp
fisubl
add
nop
adc
ret
idivl
push
cltd
xor
jl
mov
sub
pop
adc
dec
sarb
int
call
sahf
loope
push
pop
call
lret
jmp
sub
or
int3
sbb
sub
cmpsb
sti
jo
hlt
mov
cmp
push
or
lcall
cmp
pop
mov
cwtl
sub
cmpsb
dec
add
dec
jge
ljmp
mov
dec
loope
push
iret
sbb
mov
pop
pop
pop
call
xchg
addr16
divb
pop
stos
stc
shrl
xchg
lea
sbbb
cmpsb
add
test
les
mov
stos
cs
jmp
stc
scas
call
ljmp
je
mov
das
add
adcl
adc
inc
lcall
aas
and
cwtl
mov
shrl
jnp
enter
mov
test
inc
das
and
scas
push
jbe
adc
bound
sbb
stos
mov
adc
insb
mov
stos
jge
cltd
jge
movsl
mov
mov
rcrb
jns
mov
pusha
push
cwtl
push
mov
pop
es
fsubrl
rorb
mov
jae
adc
fnsave
in
and
aas
jne
jge
sbb
cwtl
sbb
sbb
int
pop
adc
addr16
or
pop
out
jmp
lcall
jp
sub
dec
jl
ja
push
addr16
mov
or
pop
mov
sbb
ret
out
pop
xor
outsb
xchg
mov
pop
inc
loope
and
cs
or
push
sbb
pop
das
les
and
dec
xor
lcall
into
lea
ret
ficompl
cmpl
mov
sbb
stc
dec
or
and
or
pop
jmp
inc
sbb
add
ficoms
push
insb
xchg
test
cli
jne
cmpsl
in
jnp
popl
xchg
mov
in
aad
xchg
dec
int3
mov
sti
xchg
xchg
addr16
xchg
jle
xchg
lods
addb
push
push
adc
notb
jno
cmp
xchg
lcall
or
fs
hlt
mov
aas
cmp
nop
movsl
stos
fildll
push
repz
call
in
inc
lods
into
and
fadds
push
jle
mov
cmp
sub
cmpsb
pop
dec
add
outsl
push
xchg
sub
and
sub
push
jb
pop
jb
xchg
test
xchg
mov
pop
mov
or
adc
xchg
hlt
push
mov
jle
mov
fadds
push
xchg
pop
icebp
fcoms
xor
push
out
xchg
mov
xchg
or
rclb
jnp
cmp
fcmovb
inc
lahf
ret
movsl
call
pop
xchg
adc
pop
das
mov
outsb
test
cmp
gs
ret
cli
pop
fmull
pop
repz
ja
adc
ljmp
frstor
daa
bound
dec
clc
mov
aaa
xlat
popf
cmp
xchg
stc
jnp
push
push
jae
xor
leave
in
fwait
lock
dec
jle
data16
mov
add
mov
xchg
loopne
sbb
call
pop
nop
orb
cmp
clc
pop
jbe
push
jle
aas
into
sbb
jge
int
leave
imul
aaa
insl
outsb
mov
or
fisttps
in
inc
int
mov
push
insb
xor
std
adc
mov
mov
shl
neg
jno
out
push
loopne
fmull
dec
int3
addb
int3
cli
mov
loopne
jb
jnp
mov
sub
dec
push
push
cld
cmp
cwtl
popa
in
fs
adc
pusha
pop
adc
int3
adc
cmp
shll
int3
or
cs
repnz
ljmp
outsb
int3
inc
aaa
scas
data16
dec
mov
mov
cmp
xor
decl
mov
dec
pop
out
fs
add
mov
sbb
mov
push
ja
aas
dec
mov
jmp
push
add
ret
mov
cmpsl
lea
xchg
pushf
pop
in
mov
dec
repnz
dec
ret
xchg
adcl
sub
iret
aaa
jle
fwait
sbb
mov
sub
mov
das
loope
xor
push
addr16
fwait
mov
test
dec
insl
pop
sbb
mov
pop
mov
icebp
clc
and
fwait
loop
jns
lcall
and
cmp
mov
pop
xor
iret
test
ja
sub
sbbb
out
mov
mov
das
mov
jb
dec
popf
iret
xor
push
addr16
rcll
js
push
mov
mov
inc
mov
push
xchg
and
mov
sub
xchg
jnp
andl
out
je
jg
sti
jle
or
loop
mov
insl
push
lret
sahf
subb
imul
std
jno
mov
cmc
movsl
adc
aas
dec
jg
out
bound
test
jno
fcoml
sahf
adc
mov
inc
fldl
adc
fs
sub
adc
xchg
mov
loope
xchg
in
das
icebp
bound
outsb
sub
gs
adc
into
xor
gs
jne
mov
orb
add
push
add
lcall
std
ret
xor
lcall
jp
xor
dec
add
push
nop
out
push
out
cltd
fnstsw
xor
hlt
inc
inc
mov
jg
nop
add
imul
dec
jo
push
negb
mov
aas
xchg
cmp
or
and
pop
gs
xor
movsb
mov
inc
or
out
js
mov
cltd
fisubs
dec
test
xor
dec
lea
mov
inc
sub
inc
in
mov
stos
inc
ret
bnd
pop
lods
and
mov
cmp
cmpsb
sbb
add
push
fcmovbe
stos
sbb
cli
xor
jno
mov
loope
loope
add
dec
adc
sub
mov
mov
sub
cmpsb
rcrl
dec
int3
mov
out
push
push
pop
cmpsb
add
repnz
test
call
ret
and
inc
or
sahf
test
sub
jnp
cmp
xchg
cld
in
sbb
lods
rorl
cmpsl
fs
inc
scas
scas
mov
xor
mov
adc
jmp
mov
inc
call
cld
fdivrs
adc
mov
imul
jns
std
fldcw
push
call
jecxz
jns
repz
fs
adc
push
leave
hlt
xchg
mov
in
lcall
add
inc
orl
out
mov
sti
sub
rcr
mov
mov
add
addr16
fwait
adc
in
lock
pop
jae
icebp
cmpsb
push
ficoms
das
sbb
ret
sub
push
mov
fadds
loope
cmpsb
jle
aam
and
mov
xchg
int
decl
movsb
pop
loop
jae
sbb
push
mov
movl
or
je
addb
ja
popa
mov
add
hlt
mov
in
mov
iret
sub
and
pop
ds
pop
je
push
mov
popf
push
mov
jns
add
cmp
adc
mov
adc
aam
movl
or
mov
or
in
out
gs
xlat
pop
mov
ficompl
jnp
into
out
cmp
and
aas
mov
loop
jnp
ja
in
fcompl
sub
and
xchg
xchg
jg
jnp
xchg
daa
in
xor
bound
jge
adc
out
jns
inc
les
lret
push
lock
sbb
add
sahf
xchg
jge
sub
dec
and
jae
lods
inc
mov
xorl
xor
repz
movsb
test
mov
jnp
lods
xchg
orl
iret
xchg
adc
xchg
and
xchg
cmp
inc
inc
jl
ja
and
rorb
lock
pop
xchg
push
int
xor
add
cmpsb
sub
dec
test
jmp
call
jo
jecxz
jmp
xchg
cmp
mov
loop
testb
jl
scas
mov
sbb
adc
in
dec
sbb
sbb
andb
lret
lret
cmp
popf
cmpsb
mov
adc
mov
xchg
ror
mov
stos
inc
testl
xor
xlat
cltd
push
mov
adc
mov
in
hlt
lea
fsubrs
xorl
jmp
call
cmpl
fcmovu
into
cli
xchg
pop
cmp
adc
aaa
push
scas
mov
mov
fimuls
fildll
hlt
xchg
mov
lret
movsb
fst
inc
gs
mov
lcall
js
fnsave
xor
pandn
adc
xchg
addr16
aam
repz
and
jg
sti
and
jp
stos
inc
movsl
add
cmp
jl
xor
cmp
cmc
mov
stos
fdivl
dec
xchg
insb
pop
push
mov
test
int3
jp
add
or
insl
outsb
fwait
xchg
cmp
arpl
push
pop
and
clc
sbb
jle
lock
fnstsw
pop
popf
and
jmp
xor
insb
add
data16
xchg
add
cmp
sahf
cmpsb
pop
sub
xor
xor
lods
cmpsb
loope
shr
imul
es
mov
ss
pop
testl
push
lcall
sti
sbb
wrmsr
push
gs
push
dec
cmp
mov
lcall
dec
xchg
mov
ds
in
xor
dec
and
jecxz
cmp
out
lret
push
insl
xor
out
incb
sbb
push
jns
stos
pushf
cmpb
dec
shrl
xchg
ljmp
aas
ret
jmp
sub
int
or
outsb
daa
test
xor
inc
mov
push
rcll
int3
lods
fcompl
les
pusha
fs
push
jle
fiadds
push
add
fisubs
xchg
lcall
push
cli
aam
xchg
xor
inc
fstl
jl
mov
sarb
adc
mov
pop
ficoms
das
fsubr
loope
jnp
clc
xchg
in
das
pop
dec
push
cwtl
push
push
lret
cs
mov
mov
and
addb
adc
cmp
sahf
mov
jg
mov
std
xchg
cld
popa
pop
ret
scas
rorb
outsb
int
pop
pop
ret
rcrl
mov
cmc
lcall
out
inc
bound
repnz
jb
or
push
dec
test
cmc
out
arpl
push
add
and
cmpsb
test
pop
cmp
jb
mov
inc
imull
fimuls
cltd
jns
loop
and
mov
xchg
cmpsb
loop
mov
adc
in
lahf
push
sub
push
and
push
pop
repnz
adc
inc
push
das
xor
or
add
or
push
xlat
xchg
push
sbb
insb
ja
pop
add
das
mov
pop
cmp
jns,pn
pop
mov
fidivrl
addr16
xor
adc
int3
cmp
cs
call
mov
jns
mov
insl
fwait
inc
aam
sub
les
xor
mov
popf
into
test
pop
or
arpl
mov
pop
add
mov
lea
add
cltd
int
aas
mov
jb
mov
testb
inc
iret
push
jns
shll
push
pop
lret
or
icebp
int3
sbb
stos
jns
push
in
pop
mov
ret
loopne
out
rcrb
inc
int3
data16
mov
lret
or
inc
lret
and
xlat
mov
call
imul
test
mov
lret
xchg
repnz
cmp
mov
jp
cs
cmp
pop
dec
adc
imul
inc
notb
cmpsl
mov
mov
sti
sbb
in
fsubl
cwtl
push
mov
imul
xor
lea
mov
das
cmp
or
in
std
loopne
cmp
data16
xchg
gs
adc
mov
pop
je
fcompl
adc
or
ss
loop
shl
jmp
mov
mov
cwtl
pop
add
push
movsb
mov
sbb
dec
jae
jg
das
rorl
add
and
sbb
add
push
mov
push
sbb
repz
xor
test
sbb
fmul
in
sarb
into
xchg
mov
push
push
outsb
rcl
imull
into
lahf
adc
lret
and
jnp
adc
aaa
xchg
adc
adc
notl
jo
mov
mov
out
dec
mov
inc
pop
xlat
je
inc
icebp
adc
inc
ret
xchg
or
jae
bnd
lds
cmc
mov
push
push
inc
cmp
dec
jnp
xchg
mov
adc
or
sub
jge
pop
repnz
mov
es
fidivrl
lahf
cmc
cli
test
test
xchg
outsl
repnz
mov
mov
adc
jbe
pop
inc
sbb
mov
sbb
fimull
mov
cmpsb
inc
mov
mov
sbb
jp
sub
mov
vpsubw
imul
mov
push
sub
loop
push
pop
out
push
fbld
aaa
push
out
cmpsb
sub
setl
out
mov
push
jmp
out
mov
adcb
sar
push
ret
jo
loop
mov
out
movsl
xchg
mov
add
insb
dec
scas
divb
mov
pusha
arpl
outsb
int
nop
cmp
sti
movsb
cmp
stos
int
aas
or
es
dec
test
push
scas
xlat
push
mov
dec
pop
jns
fwait
lahf
xchg
mov
push
push
dec
ret
testb
xlat
push
mov
divb
js
mov
inc
mov
pop
cmp
cmc
bound
add
xchg
xor
repnz
cs
scas
fdivr
stos
daa
inc
mov
ret
adc
aad
lds
inc
data16
out
push
push
xor
jge
adc
faddl
pop
cmp
add
imul
aaa
and
inc
jne
pmulhw
sub
push
pop
loope
fsubrs
pop
icebp
jae
std
test
mov
adc
and
das
out
cmp
inc
fcomp
dec
aas
sti
data16
test
mov
fidivrs
cmp
or
test
pop
call
cmpb
xor
or
arpl
not
mov
jg
das
or
or
cmp
inc
sti
aas
lods
rorb
jo
push
mov
or
stos
inc
jnp
add
aas
add
jecxz,pn
or
or
xor
push
or
fmul
jmp
pop
jbe,pt
shrl
jns
mov
mov
cmpsl
bound
es
lret
adc
fbld
outsb
flds
push
mov
sbb
and
mov
mov
push
and
cmp
inc
mov
outsl
sub
fcomi
cmp
js
cmc
dec
cmp
and
sub
adc
icebp
push
repnz
pop
cwtl
mov
fisttpl
xchg
lds
push
mov
dec
stos
cli
jp
cmc
cltd
das
iret
int3
adc
fmulp
jb
inc
sbb
mov
and
into
daa
jle
fidivl
ds
adc
enter
les
mov
dec
repz
stos
mov
jecxz
fdivrl
xchg
shll
pop
mov
cld
jnp
sub
xchg
in
aaa
dec
mov
lahf
sbb
jo
ja
test
jae
nop
daa
rclb
fsubrs
loop
test
sbb
mov
cmp
in
or
and
jge
bound
into
push
fs
adc
out
movsb
imul
inc
inc
aam
xor
es
cmovno
xlat
pop
scas
in
imul
ret
mov
shlb
test
fs
shll
clc
pop
cmpsb
dec
mov
roll
loopne
mov
sub
sub
xchg
mov
push
inc
pusha
lahf
pop
mov
pop
pop
and
add
mov
lea
jl
loop
cmpsl
mov
mov
mov
outsl
xchg
mov
subl
fcoml
in
pop
daa
out
cmp
wrmsr
test
push
jmp
test
jb
sub
and
jno
pop
outsb
add
ja
push
rol
jno
in
pop
pop
jmp
lcall
mov
dec
jns
xor
xchg
out
rorb
cmp
dec
call
push
std
xchg
das
bound
push
cwtl
add
es
pop
sbb
ret
dec
mull
adc
inc
les
data16
ret
adc
pop
repnz
fimuls
pop
cmp
jnp
mov
sbb
stos
dec
out
enter
push
mov
push
das
pop
mov
outsl
pop
adc
ja
jecxz
jb
bound
cmpsl
sbb
mov
pop
daa
shlb
fcmovnb
mov
les
pop
inc
lcall
cli
adcl
or
outsl
cmp
int
push
sub
shll
and
cmp
dec
mov
fcmovnu
cmp
xchg
mov
push
pop
push
sub
mov
cmp
dec
lods
xchg
inc
inc
cmp
add
mov
cmp
dec
and
xchg
mov
mov
stos
cmp
inc
iret
popa
cmp
pop
imul
pop
fsubr
repz
pop
fsts
sbb
pop
icebp
lret
daa
js
dec
adc
xor
xchg
fcmovbe
sub
sahf
lahf
fs
push
sbb
mov
sarb
cmpsl
push
jp
add
cs
jb
rolb
add
fistpll
iret
dec
jl
sub
shrl
mov
fwait
or
mov
out
cmpsb
mov
and
std
xor
mov
outsl
jl
jl
mov
fistps
negl
xchg
hlt
mov
lock
mov
rsm
mov
bsr
cmp
cmp
jo
dec
xchg
push
mov
jmp
xchg
inc
pusha
aas
repnz
push
in
rcl
fwait
xor
jmp
pop
nop
sbb
xchg
push
aas
shrl
adc
sub
inc
daa
iret
into
out
or
sub
loopne
push
dec
jmp
scas
sub
mov
cli
jmp
cmpb
pop
dec
sub
jb
push
mov
fcmovb
jl
and
cmp
push
lret
hlt
xchg
sub
ret
aad
sbb
mov
iret
flds
iret
cmp
fcmovnb
inc
mov
add
push
mov
popf
cmp
jb
sbbl
fstl
or
shll
xor
cmp
roll
or
dec
jnp
xchg
dec
push
pop
sub
mov
adc
lahf
push
cmp
push
push
mov
loopne
mov
loopne
data16
adc
mov
cli
xor
es
in
pop
adc
sbb
jmp
mov
inc
pop
xorb
xchg
pushf
clc
inc
sarb
jecxz
movsb
cmpl
xlat
icebp
xchg
dec
or
popa
fbld
inc
inc
pop
lcall
xchg
inc
jnp
push
and
insl
sub
sub
scas
arpl
sbb
bsf
add
inc
jo
mov
jle
sbb
xor
addl
fs
or
mov
lret
sbb
fists
popl
fdivrs
mov
adc
lods
xchg
ss
add
in
sbb
add
mov
movsl
pop
lds
mov
pop
pop
fists
aad
mov
mulb
mov
enter
jle
ljmp
pop
push
fdivl
jb
inc
cmp
push
sbb
inc
imulb
jge
or
and
or
xchg
mov
cld
test
mov
pop
jae
adc
pop
jl
sbbb
sub
sbb
dec
aas
shl
shlb
sahf
ja
mov
pushf
inc
xor
and
call
pop
adc
test
loopne
int3
out
andl
loopne
pop
pop
out
sbb
lods
repz
mov
pusha
out
out
push
dec
inc
cwtl
int3
ror
push
sahf
popa
jmp
in
xchg
adc
fidivl
lret
lods
stc
add
or
addl
inc
dec
fildll
pavgw
sbb
add
ficomps
push
mov
hlt
adc
fnsave
arpl
xchg
cmc
fsubl
rcll
fsubr
sub
test
scas
adc
repnz
dec
fisubl
xlat
shl
dec
repnz
pop
popf
pop
push
aaa
js
inc
cmp
push
dec
fistl
pushf
mov
xor
xor
icebp
xchg
jbe
xor
sbb
mov
insl
jmp
push
shl
fdivl
imul
inc
dec
lds
adc
push
mov
add
push
xor
lods
sti
in
aad
xchg
pusha
or
sub
ja
imul
push
mov
add
push
imul
call
pusha
push
mov
das
bound
inc
fimuls
and
ss
stos
jmp
ds
push
adc
insb
mov
jge
inc
xor
mov
sti
fcoml
xchg
push
repnz
xchg
mov
cmpl
xchg
loopw
adc
and
jmp
call
jg
repnz
xor
mov
fs
mov
sbb
sbb
iret
xchg
jp
out
cmpsl
cmpb
pop
js
mulb
rolb
pop
inc
stos
cwtl
mov
lods
or
sub
mov
dec
dec
daa
aad
fidivl
xor
pop
adc
pop
call
mov
das
push
push
inc
iret
dec
push
cmp
push
or
addr16
rol
lods
je
and
inc
jge
and
dec
sub
add
clc
imul
pop
out
inc
pop
inc
mov
mov
adc
das
sbb
dec
out
cmpsl
mov
stos
les
xchg
cmp
mov
add
add
mov
mov
adcl
pop
negl
add
idivb
pop
cld
aas
mov
out
std
mov
sbb
sub
sbb
imul
insl
insb
cmc
js
mov
push
and
xchg
mov
fisttps
push
jg
sarl
in
rcr
xlat
repnz
and
mov
sub
lret
subb
out
jl
pop
pop
xchg
fildl
cwtl
sbb
adc
addl
ss
idivb
add
sbb
mov
and
dec
jae
xchg
cmp
lcall
jo
jnp
pop
sbb
or
dec
pop
mov
add
xor
lret
push
fdivrs
push
pop
cli
lcall
das
shl
jg
hlt
add
adcl
sahf
sbb
dec
sub
push
push
ret
shl
lock
dec
repnz
into
and
lret
jg
dec
inc
lods
shll
sub
push
add
int3
pop
push
daa
xor
mov
cs
stos
or
xrelease
enter
add
pop
or
mov
push
sbb
ret
in
shll
jge
jecxz
adc
fxtract
jle
sub
jmp
cmc
sahf
ljmp
jmp
int3
sbbb
cs
mov
lcall
std
testb
pop
xchg
mov
fsubr
push
mov
int
ljmp
push
stos
test
mov
pop
xor
fsubr
dec
pop
ret
flds
rcrb
in
outsl
imul
and
cmp
push
aam
rcl
jno
ss
lcall
xchg
or
sbb
or
fidivrs
mov
xchg
mov
mov
cmp
addr16
shlb
or
cmp
xchg
je
leave
pop
into
push
incl
std
lods
cmp
int
push
and
push
leave
jle
pop
shll
sbb
icebp
xchg
imul
mov
cwtl
enter
dec
pop
rcr
add
dec
scas
sbb
int
loopne
push
scas
jb
sub
sub
sti
test
jmp
arpl
add
jns
sti
xchg
add
lds
scas
dec
fs
add
repz
sub
jg
fsubp
xor
jecxz
jmp
sub
les
pusha
idivl
pop
ret
les
lock
or
pusha
xchg
scas
xchg
xor
pop
pop
test
jle
sub
inc
pmaxub
sbb
push
adc
scas
out
mov
ss
push
rorb
add
sbb
pop
lods
sbb
ljmp
int
scas
mov
cld
jnp
pushf
fimuls
cmp
loopne
jge
test
fsubr
jnp
mov
out
inc
lea
xchg
mov
das
jl
pop
fidivs
iret
push
mov
ret
push
sbb
mov
mov
stc
cmp
xor
jle
imul
ss
lods
xor
mov
fs
gs
popf
cmp
xchg
outsl
hlt
test
dec
sbb
sub
hlt
dec
push
fwait
sub
hlt
mov
lcall
push
pop
and
xorb
mov
outsb
jo
push
cmp
nop
lea
inc
outsl
push
push
imul
push
push
jl
xchg
inc
das
in
jbe
pushw
cltd
sbb
fwait
jae
aam
lds
test
cmp
nop
aaa
cmp
add
dec
or
adc
dec
adc
js
cmp
jo
insl
testb
iret
mov
jb
push
adc
rorl
inc
xor
push
ret
stos
test
es
test
pop
mov
pop
xchg
popf
aad
sarl
xchg
mov
in
pop
mov
out
test
ja
jb
repz
lret
or
mov
out
insl
sbb
in
pushl
lea
outsb
js
rcr
fisubrl
bound
dec
call
add
mov
fs
lret
mov
daa
hlt
pushf
shrl
pop
es
lods
pop
xchg
sub
in
mov
xor
repz
in
aam
popf
mov
pop
fsubp
mov
inc
jp
xchg
jno
jne
add
xchg
icebp
rcl
adc
jg
fsub
xor
fs
sbb
xchg
jb
rcrb
mov
and
lods
inc
in
cmp
sub
or
jg
repnz
jb
or
pushf
mov
outsl
cmp
sbb
ss
sahf
fldt
mov
mov
and
cli
addl
push
push
sbb
es
mov
or
fcoms
push
mov
or
test
nop
bswap
iret
cmc
xchg
data16
mov
xor
cmp
addr16
fs
mov
jle
add
shll
addb
mov
shrb
les
mov
pop
into
lcall
sbb
jo
shrl
push
ret
rcrl
cmpsb
pop
xlat
push
cmp
xchg
dec
std
push
lds
mov
sbb
jge
pusha
pop
pop
push
mov
push
mov
adcb
arpl
int
inc
push
pop
cwtl
je
mov
lret
xlat
push
mov
mull
cmp
mov
mov
stos
adcb
ret
or
call
cmp
and
arpl
adc
xor
ret
loopne
ret
mov
adc
jae
int
pop
mov
ljmp
xor
jo
xchg
mov
sub
icebp
jmp
inc
push
stos
lcall
push
addr16
fists
testb
mov
lret
cmp
or
imul
mov
arpl
out
outsb
or
movsl
sbb
adcb
xor
mov
stc
sti
adc
and
push
rcll
in
mov
lods
loope
cli
lods
xor
ret
xchg
pop
and
dec
mov
xchg
test
mov
in
inc
js
ja
jo
lret
inc
dec
in
loopne
std
das
mov
mov
cmp
or
adc
adc
inc
mov
xor
push
pop
xchg
repz
mov
dec
mov
ret
aaa
scas
mov
xchg
cli
loope
adc
xchg
sub
lds
inc
mulb
repnz
xor
dec
scas
add
or
stos
sub
nop
nop
mov
movsl
mov
ret
pop
inc
cmc
es
fwait
push
sahf
aad
or
push
sti
jge
outsb
sbb
test
or
shlb
ljmp
sbb
scas
adc
rorl
mov
adc
pusha
jp
sub
movsb
mov
loope
cmc
inc
notl
pop
push
int3
into
imul
pop
mov
cmp
or
icebp
or
pop
mov
fstps
push
out
jbe
jae
cmp
cltd
dec
xchg
or
mov
stc
pop
or
cltd
mov
cs
or
adc
xor
jb
sub
fwait
sbb
mov
out
or
lahf
jge
mov
and
xchg
mov
xor
pop
sbb
pop
mov
js
je
push
pop
xchg
sbb
inc
jo
mov
push
sti
jo
inc
sbbl
sub
fucom
pop
clc
test
repnz
sbb
int
dec
inc
and
add
ja
mov
mov
addr16
jle
xchg
stos
xor
loopne
lret
lds
dec
dec
sbb
xchg
xor
mov
push
lds
aaa
hlt
or
pushf
xchg
testb
mov
jge
jmp
and
mov
cs
or
mov
and
gs
or
je
mov
test
adc
lret
ja
mov
push
je
dec
mov
jecxz
outsl
out
aaa
xlat
add
mov
pushf
cwtl
orl
notl
rcrb
daa
mov
or
mov
add
cmp
int3
out
in
xchg
andl
add
addb
cmpsl
push
sub
hlt
jecxz
stos
sbb
lods
cmp
in
in
jne
xor
andl
addr16
adc
cmp
lret
aaa
and
movsb
push
pop
aam
xchg
pushf
sub
addr16
jae
sub
mov
sub
jno
mov
xchg
and
cmp
popf
stos
arpl
sub
sti
lock
dec
push
dec
push
push
mov
push
scas
jno
jno
lea
jle
fwait
dec
jns
sub
inc
pop
and
sub
push
or
cmpsb
mov
sub
cmp
repnz
xor
lret
cli
rcrb
cwtl
or
das
or
mov
jae
js
dec
movsb
fistps
inc
bound
xor
test
or
dec
into
lock
dec
mov
push
jmp
jp
mov
sbb
mov
arpl
jae
pop
cmp
imul
xchg
xchg
lahf
add
adc
or
dec
cwtl
aas
scas
shll
mov
js
mov
mov
sub
push
sub
xchg
jp
push
sbb
or
bound
cmp
decb
jmp
push
add
cmpl
push
repz
or
cmpsl
loope
shrl
mov
idivb
mov
in
jl
mov
mov
imul
sub
adc
test
push
out
lods
pop
jle
test
movb
cmova
aad
mov
andb
icebp
add
stos
inc
aaa
cmp
jo
jl
sbb
pop
and
push
adc
jno
pop
sbb
mov
xor
sub
pop
movsl
and
push
cmp
sub
adc
adc
movsb
nop
push
sub
out
push
sub
movsl
push
movsb
xor
sbb
cmp
sub
lods
fwait
mulb
inc
in
pop
mov
xor
fiadds
aaa
fwait
jle
ljmp
fdivrs
ljmp
push
fs
sbb
lock
cmpsb
xor
sbb
inc
adc
jp
aaa
std
cld
sbb
lret
out
aad
addl
pushf
test
jnp
add
mov
inc
inc
insl
cmp
cmp
xchg
mov
cwtl
xchg
ljmp
or
inc
cmp
mov
sahf
call
and
and
gs
test
mov
out
jecxz
lret
test
adc
sbb
int3
rcrb
loope
mov
inc
sahf
xor
aas
pop
lock
into
push
aad
and
dec
push
jns
lret
in
push
in
mov
xchg
inc
ds
pop
inc
sub
pop
push
pushf
jle
lock
mov
or
pop
and
cmp
mov
stos
adc
daa
mov
cs
mov
mov
mov
rcrb
add
add
push
ja
lret
mov
jne
jl
sarb
xchg
pushf
lods
roll
mov
pop
mov
shr
sti
mov
add
je
ret
dec
andl
scas
scas
pop
jae
test
lcall
push
cmp
and
movsl
push
sub
lcall
or
mov
fs
pop
sub
pop
shlb
repz
in
mov
adc
sbb
xor
push
xchg
repnz
adc
mull
fstpl
pop
sbb
in
bound
test
scas
sbb
das
outsl
pushf
repz
loopne
lea
insl
int3
push
add
lock
ficoms
pop
xchg
pop
in
jmp
sub
arpl
mov
into
das
cmpsl
fwait
jbe
call
dec
sub
and
or
movsb
sbb
popf
dec
push
mov
mov
jle
loope
jbe
imul
dec
or
ret
addr16
xchg
in
mov
testb
rcll
fdivp
adcb
in
cmp
jae
xor
aam
shrb
adc
add
test
jecxz
cmp
sub
fnstsw
mov
xor
addr16
pushf
bound
dec
cmpsl
xor
fists
repz
cmc
pop
xor
scas
orl
decb
push
int
mov
cmp
decl
pop
jg
fdivrl
into
pop
pop
outsl
push
pusha
mov
popa
push
xchg
pop
stos
in
ljmp
dec
mov
fmull
lds
push
test
cmp
push
sahf
bound
iret
push
push
aas
mov
daa
lock
xchg
fwait
mov
xchg
stc
mov
mov
loop
lret
shll
xchg
push
addb
stos
in
mov
cli
pusha
and
and
add
push
xchg
jno
pop
int3
xor
mov
jmp
dec
sub
push
push
sbb
call
aad
popf
jle
stos
xchg
out
stos
or
xor
sub
fcmovnbe
sbb
inc
pushf
out
xor
pushf
pop
and
mov
xor
test
pop
inc
add
dec
dec
aas
and
out
adc
add
fwait
daa
pop
rolb
push
movsb
outsl
outsb
mov
lret
icebp
xor
loopne
mov
and
or
mov
cmpsb
jecxz
dec
cmp
cmc
jge
sub
sahf
push
xor
add
ret
dec
cmpsb
addr16
lahf
lret
xchg
sub
jns
lods
and
push
rorb
pop
mov
pop
inc
inc
pop
xchg
dec
and
inc
outsb
xorl
neg
sahf
leave
pushf
movsb
bound
mov
mov
jne
ret
pop
mov
adc
jle
push
fs
cs
fidivs
stos
or
add
cmp
into
push
push
pop
pop
outsb
rcrl
shrl
xor
dec
push
fnsave
pop
jl
orb
mov
pushf
lods
filds
jno
aas
xor
push
rolb
fs
fs
push
ret
andl
imul
sub
aaa
aas
adc
xor
xor
in
scas
lret
dec
enter
mov
mov
outsl
mov
cmp
sbbl
lcall
xor
cmovs
mov
lret
mov
or
inc
out
jne
in
repz
div
bnd
and
jle
cmp
mov
jno
and
mov
mov
lods
or
or
mov
xchg
jne
frstor
xor
push
inc
fnstsw
mov
orl
xchg
mov
inc
popf
test
cmp
jbe
pusha
add
jp
andb
jo
sti
mov
inc
xor
in
mov
or
daa
mov
mov
and
or
dec
adc
mov
xchg
jecxz
lret
adc
decl
xchg
jo
inc
cmp
inc
lcall
pop
aad
add
mov
xchg
pop
add
pop
pop
pushf
cli
mov
jno
mov
xchg
shll
mov
lret
sbb
das
pop
mov
and
mov
xchg
dec
test
jecxz
jl
outsb
push
dec
sbb
aas
lea
xor
xchg
push
clc
popa
lret
aad
mov
jmp
daa
ljmp
mov
fwait
scas
xor
lods
int
sahf
xchg
scas
push
inc
inc
or
ret
jecxz
mov
xchg
stos
int3
mov
in
jp
sbb
mul
xor
mov
cwtl
test
mov
mov
fwait
stc
sub
mov
jbe
pop
cli
arpl
push
daa
arpl
xchg
leave
out
scas
pop
xchg
add
pop
int3
inc
or
imul
xchg
movsl
cmpsb
mov
aad
mov
adc
and
mov
mov
leave
dec
pop
andb
adc
rcrl
push
repz
dec
subb
mov
or
xor
jle
dec
test
int3
inc
dec
xchg
mov
in
mov
repnz
jmp
js
shll
cmp
cmp
fmuls
iret
leave
out
add
into
cmp
mov
mov
lds
or
push
mov
movsl
shll
push
and
sub
adc
mov
fidivs
inc
mov
popf
cld
sub
mov
fdivrs
adc
sub
fucomi
gs
sub
test
xchg
push
test
sbb
std
xor
cmp
cmp
mov
cld
fmul
xor
sbb
inc
inc
into
cmp
dec
orb
rcl
data16
mov
mov
adc
mov
xchg
in
cltd
fldlg2
xchg
cld
std
shr
xlat
sbb
popf
jbe
mov
out
jno
leave
sbb
xchg
sbb
push
fxch
mov
jl
mov
das
cmp
test
std
and
insl
xor
xchg
ja
inc
jnp
cmpsb
push
faddl
pop
movsl
aam
imul
leave
das
les
ljmp
ljmp
js
ja
fisubrs
daa
inc
lods
push
cmp
out
pop
sbb
pop
sub
and
fsubs
add
subl
xor
addl
push
lock
mov
push
scas
cmp
rcl
and
int3
push
push
stos
push
dec
imul
jmp
lds
sub
ficoms
cmc
insb
cmp
lods
imul
imul
es
cwtl
or
lahf
sbb
mov
popa
sub
dec
jl
dec
subl
out
xchg
dec
loopne
cwtl
out
xchg
outsl
fwait
and
int
cmpb
fs
pusha
out
mov
xlat
mov
or
add
rcll
scas
xor
fs
in
mov
aaa
dec
jo
sbb
cld
inc
rclb
sbb
test
xchg
pop
mov
pop
mov
push
jae
pop
pop
pop
inc
fistpl
add
jne
mov
xchg
incb
das
out
adc
push
sbb
lret
pop
mov
cmp
sub
repz
stos
adc
push
mov
adc
jbe
xor
imul
lock
andl
add
out
inc
idivl
addr16
adc
dec
dec
fidivs
lock
or
push
loop
add
and
mov
push
adc
imul
jl
xor
lret
stos
xor
jp
push
loopne
pop
dec
inc
in
sub
cwtl
pop
sbb
push
aad
add
das
push
mov
ret
mov
dec
stos
or
mov
arpl
ret
mov
test
mov
or
lock
adc
negb
andb
icebp
mov
sti
mov
sti
int
cli
lahf
mov
cmpsl
cmpl
dec
lahf
icebp
dec
jnp
addl
ret
aad
jno
test
cmp
xchg
xor
insb
mov
fbstp
and
test
dec
sarl
roll
jmp
lcall
xchg
inc
popa
sub
fcompl
arpl
push
or
mov
or
push
push
dec
push
mov
push
and
sub
movsb
std
sub
decb
daa
neg
xchg
arpl
movsb
mov
push
dec
in
loope
out
shlb
lcall
push
jno
lea
cwtl
loopne
mov
js
pusha
jp
sub
jp
sbb
cltd
add
lock
pop
mov
fdivrs
shl
sbb
nop
mov
icebp
pop
movsb
sub
dec
fisttpll
pop
pop
jnp
dec
pop
and
inc
sbb
mov
mov
call
mov
fcomps
mov
dec
sbbl
into
popa
xchg
sub
movsl
imul
xor
inc
fs
inc
sbb
add
imul
cmp
sub
sub
or
dec
push
cwtl
cmp
cmp
and
jp
add
jecxz
and
cwtl
xchg
stos
jns
or
xlat
sbb
push
pop
inc
jnp
fwait
jae
cmp
jns
mov
mov
add
jns
js
sub
push
loop
jbe
fwait
icebp
xor
push
lret
in
or
jns
pop
rcrb
jge
imul
in
jae
adc
pop
shlb
repnz
and
clc
call
or
and
adc
mov
xchg
jnp
dec
outsl
jnp
inc
sub
ja
add
cli
jp
mov
add
mov
gs
mov
aas
push
jns
mov
pusha
lcall
mov
sub
mov
lods
and
xorps
pushf
add
lods
xchg
sbb
int3
test
cwtl
inc
dec
es
cmpsw
mov
inc
xchg
add
inc
and
mov
mov
idivb
and
xor
xor
xchg
mov
lahf
and
bound
and
pop
jo
sbb
pop
push
lret
loopne
xchg
bound
fcmovnbe
add
mov
push
iret
sti
int3
cmp
mov
cs
push
ja
rolb
in
cmpl
xchg
ret
outsb
sbb
cld
mov
sahf
bound
pop
outsb
ret
out
fxam
push
out
fs
dec
jno
es
dec
mov
idivb
pop
mov
sbb
hlt
and
adc
xorb
sahf
dec
mov
push
addr16
int3
mov
rorl
mov
addr16
dec
jg
sub
mov
shl
xor
jae
pop
push
push
mov
add
cli
sub
lods
rolb
mov
js
hlt
jge
jne
scas
sbb
jp
or
mov
pushf
xchg
pop
bound
dec
fwait
pop
scas
sbbl
pop
ret
sub
mov
test
test
or
sbb
and
mov
scas
fdivl
dec
ljmp
mov
mov
dec
outsb
loope
cmp
adc
pop
or
fstpl
addr16
clc
sub
mov
cld
stos
aad
adc
pusha
ret
sbb
inc
xor
jnp
outsb
add
mov
push
les
dec
cmpl
adc
pop
mov
pop
cli
fisubrl
mov
cmpsl
jne
pop
sbb
pop
ja
bound
sub
stos
idivl
mov
jne
mov
ja
bswap
add
jnp
or
sub
int3
push
bound
mov
into
insb
in
test
cli
in
pop
add
lock
xor
jnp
jbe
sub
mov
mov
fmull
mov
stc
rorl
lds
fcmovnu
sbb
das
movsl
std
add
pusha
and
fdivrs
sub
cmpsl
mov
push
rclb
mov
pop
cmpsl
xchg
lcall
fsubr
and
push
dec
sub
ret
clc
orb
int
jle
insb
pop
dec
xchg
and
mov
dec
push
out
pop
mov
leave
jp
lods
in
fwait
lret
pop
mov
lret
adc
xchg
lock
pop
gs
in
or
ja
jmp
or
mov
pop
mov
int3
push
shrb
mov
or
inc
test
mov
and
rolb
mov
mov
sbb
testb
mov
loope
push
add
int
inc
sub
lret
mov
lods
into
mov
aad
push
dec
shlb
push
adc
xchg
xor
cmpsl
pop
jne
xchg
leave
movsb
push
cmp
xlat
mov
adc
into
pushf
sub
sbb
mov
push
push
cmp
cmpsb
xchg
fistpl
das
stos
fwait
lock
dec
mov
jno
int3
mov
ret
lods
xor
fninit
push
xchg
aas
dec
cmp
call
addr16
mov
mov
in
sbb
int3
pop
scas
or
aam
out
notb
scas
sub
inc
std
cmp
jno
cs
mov
sti
inc
out
sti
jnp
cmp
xorb
sub
push
pop
pusha
pop
icebp
aam
in
les
inc
in
jbe
mov
sbbl
pop
xor
sub
push
loop
cmpb
adc
push
jne
sbb
sub
test
das
cmp
aam
push
or
test
xchg
shll
dec
repz
je
shrb
mov
sbb
push
pusha
arpl
clc
cmp
and
xor
lcall
rcrb
addl
and
mov
jl
sbb
mov
fcmovu
aas
mov
xor
dec
rorb
sbb
mov
std
cmp
dec
pop
adc
data16
stos
clc
mov
iret
int
dec
add
cmp
mov
xlat
xchg
push
add
lods
jge
dec
andb
and
imul
sub
xchg
mov
add
hlt
in
cmc
repz
int3
lock
mov
inc
ljmp
arpl
push
jne
ja
cmp
loopne
pop
mov
adc
loopne
mov
leave
inc
pop
mov
sub
popf
lods
pusha
cltd
out
in
jl
cmp
cmp
ljmp
jns
daa
stos
or
xor
lea
enter
sub
lods
fsts
xchg
mov
bound
mov
and
mov
jno
cmp
sbb
popa
push
test
int
pop
mov
xchg
sahf
mov
xchg
cli
shll
sub
mov
xchg
jl
mov
jae
cmc
adc
add
push
sub
stc
sbb
sar
arpl
mov
punpcklwd
pop
and
jl
xor
xor
pop
mov
lods
data16
pushf
cmp
enter
jo
inc
cwtl
xor
xor
and
push
xchg
dec
daa
jbe
xchg
adc
addr16
mov
add
sahf
mov
push
sbb
lcall
fsub
fbstp
pop
xor
pop
es
ret
pop
mov
inc
sahf
jp
fildl
sbb
aam
test
call
movsl
gs
loope
and
sbb
enter
iret
sahf
dec
pop
cmpsb
scas
jns
and
lds
int3
xchg
mov
imul
and
call
imul
aad
mov
gs
xchg
mov
test
cmpsb
xchg
repnz
add
inc
into
loop
jmp
cmp
sbb
fdivr
jno
dec
roll
data16
bound
xchg
mov
std
mov
addr16
into
pusha
mov
mov
mov
mov
test
mov
loope
and
inc
mov
mov
sbbb
fidivrl
adc
inc
mov
dec
adc
and
mov
cmp
mov
mov
sbb
in
orb
mov
inc
enter
add
test
adc
cmp
pop
xlat
dec
inc
cmpsl
sub
out
sbb
cmp
sbb
je
adc
jl
jae
test
xor
test
out
out
ds
inc
pop
ret
push
mov
repnz
sub
cmp
push
shlb
push
fs
jo
addr16
jns
aaa
out
push
inc
push
adc
movsb
cmp
sbb
and
addl
hlt
adc
mov
mov
inc
out
shll
xchg
push
data16
test
mov
mov
pusha
call
mov
mov
mov
int
mov
mov
mov
je
je
rep
push
push
mov
mov
out
sub
clc
scas
outsb
nop
fdivl
popf
out
inc
push
xor
js
std
adc
xchg
imul
dec
adc
das
and
xchg
popf
inc
sbb
clc
xor
rolb
repz
xor
push
cmp
push
xchg
insb
jecxz
out
cwtl
xchg
repnz
loop
loope
xchg
add
inc
scas
inc
dec
dec
les
iret
fbstp
mov
mov
xorl
jno
cs
mov
fwait
sarb
sub
or
jne
lds
nop
pop
push
lods
leave
xor
jge
adc
fs
outsb
inc
mov
sbb
lock
xchg
aad
or
sub
pop
sbb
int3
sbb
pcmpeqd
jns
dec
and
jns
jne
add
rclb
xchg
test
push
mov
push
or
mov
loop
sub
ret
mov
shll
shrl
jmp
push
pop
mov
out
sbb
sbb
inc
mov
or
fldcw
jecxz
add
sbb
push
adc
add
popa
insl
or
idivl
adc
mov
dec
sub
cmp
cltd
or
mov
test
das
je
cwtl
insl
stos
sbb
jp
and
mov
pushf
in
out
cmp
mov
movsb
and
mov
mov
shlb
cmp
loopne
arpl
sahf
sub
je
push
les
inc
push
mov
sub
mov
sahf
add
push
add
int3
mov
xchg
scas
imul
mov
js
ret
pop
nop
cmc
out
mov
jmp
xchg
mov
cmp
and
jmp
dec
add
cltd
in
lahf
enter
lret
cmp
dec
mov
jmp
rcll
mov
cmp
lret
inc
jecxz
movsl
shlb
lcall
jb
cmpsb
sub
shr
nop
lea
dec
inc
and
push
ret
pop
aaa
or
sti
xlat
adc
repnz
mov
shll
scas
xorl
add
adc
lcall
addb
dec
daa
loope
sub
xor
mov
dec
gs
mov
inc
cs
imul
inc
insl
hlt
dec
xor
and
cmpsb
and
mov
mov
test
ja
xchg
adc
int
daa
adc
daa
and
test
push
cmp
js
fadd
dec
push
lock
mov
mov
aas
inc
iret
mov
sbb
cli
push
pushf
lret
arpl
adc
sub
addr16
cmpsl
mov
mov
repnz
sub
enter
jo
shr
dec
pop
mov
cwtl
jp
shl
xor
jmp
xor
dec
gs
xor
add
mov
pop
dec
adc
jge
int
or
movlps
sbb
inc
fsubrs
test
adc
outsl
js
pushf
or
int3
repnz
insb
dec
repz
mov
fisubrs
test
jno
movsl
lods
mov
and
or
and
movb
call
mov
jnp
sbb
push
and
aam
cmp
aas
rorl
xchg
push
addr16
scas
out
stos
cmc
cmp
jle
mov
pusha
in
and
bound
mov
xchg
repnz
xchg
pushf
cltd
jmp
inc
data16
push
sub
jl
out
fmuls
push
jo
out
fs
fwait
cwtl
jl
cmp
push
fimuls
xor
test
test
int
dec
pusha
add
mov
mov
adc
mov
je
sbb
lcall
adc
cld
mov
jno
inc
imul
cmpsb
insl
into
push
pushf
xchg
inc
adc
ljmp
loope
xchg
cwtl
or
jg
mov
sub
and
fdivs
lds
roll
pop
out
or
xorb
sbb
push
add
or
cmp
in
push
adc
pop
dec
outsb
mov
imul
mov
mov
mov
mov
fwait
or
push
cmp
rcll
add
inc
loope
cwtl
movsb
subl
mov
fisubrl
outsl
jo
add
and
dec
aad
mov
xchg
push
mov
pop
sbb
mov
xlat
mov
ret
mov
xchg
dec
bound
cmp
sbb
push
or
push
inc
inc
pop
movsb
orb
inc
icebp
out
jecxz
cwtl
push
mov
ljmp
adc
repnz
mov
adc
dec
popf
mov
pop
xor
fneni(8087
mov
xchg
push
jge
push
jno
lods
in
subl
outsl
enter
ss
int
lock
sub
cld
or
jne
cmp
dec
int
in
or
ss
xchg
and
daa
mov
jne
fs
xor
inc
lret
js
imul
push
fmull
je
jle
cmpsb
pop
mov
insl
push
mov
lcall
push
xchg
rcrb
xchg
mov
cltd
push
push
push
fs
icebp
mov
or
cmp
or
loope
fcompl
in
lret
mov
in
sti
je
dec
movsl
cmp
in
xor
gs
data16
addr16
stos
rorb
popa
ficoms
push
pop
mov
xor
stos
xchg
aad
fsubrl
dec
or
fsubl
fwait
xchg
data16
testl
xor
into
cmp
jns
or
xchg
add
xor
xchg
mov
and
push
xchg
idivl
xchg
andl
leave
inc
test
test
mov
call
fidivl
scas
lock
lret
or
iret
repnz
sub
jecxz
and
insl
rclb
push
fwait
sub
imul
test
xor
test
jb
stc
data16
mov
push
jae
or
cmp
add
sbb
lret
mov
inc
mov
cs
push
dec
mov
mov
pop
outsb
cmp
sahf
hlt
int3
add
dec
stos
push
sbb
cltd
insl
mov
mov
push
int
int3
outsb
or
andl
lret
mov
mov
sub
sti
dec
push
mov
xor
push
jp
and
inc
loopew
push
testb
pop
repnz
out
mov
test
xchg
repnz
sub
jnp
cmpsl
out
push
movsl
clc
hlt
test
mov
and
mov
insb
stc
or
mov
lahf
icebp
jmp
adc
daa
sub
or
enter
cli
or
xchg
fdivrs
cmp
ret
inc
sbb
fistpll
ss
xlat
add
lods
test
in
pusha
adc
shlb
mov
dec
push
addl
sbb
sahf
mov
adc
rorl
imul
ds
fiadds
and
cmp
mov
scas
rclb
mov
push
jo
xchg
jno
lret
mov
xor
int3
xchg
push
xchg
mov
adc
fmul
xchg
or
inc
and
popf
ret
lock
mov
out
outsl
xor
mov
sub
lds
cld
cltd
jo
jo
call
rorl
jle
es
mov
mov
sub
add
push
or
pop
or
adc
in
jecxz
das
popf
jne
mov
dec
scas
pop
jp
pushf
lea
mov
stc
mov
sbb
adc
dec
jbe
xor
cli
xor
and
add
mov
call
gs
push
fs
cmpb
dec
outsb
xor
mov
mov
push
dec
out
mov
or
inc
leave
sub
lret
push
inc
xlat
lahf
scas
cmpb
mov
adc
sbb
adc
shl
mov
insl
sbb
ret
fisttpll
lcall
mov
or
adcl
or
push
push
sti
fistl
push
shrb
popf
xor
shll
xor
shll
or
and
jne
dec
in
dec
mov
das
les
mov
nop
xlat
dec
testb
and
frstor
inc
popf
out
push
das
mov
dec
xor
iret
rcrl
inc
push
dec
push
mov
jo
dec
in
push
loope
mov
inc
lds
xchg
inc
pop
mov
inc
call
dec
and
mov
icebp
lcall
xor
dec
sub
mov
notb
cld
push
inc
test
nop
sbb
mov
inc
es
lods
aam
repnz
cli
imul
fstl
lds
sub
pusha
adc
not
rorb
inc
shr
mov
clc
sahf
sub
js
xor
in
packssdw
icebp
mov
movsl
ret
arpl
adc
es
mov
sbb
inc
mov
dec
push
dec
dec
and
test
movsb
int3
incb
cltd
mov
cmpsl
mov
sub
sarb
cltd
and
or
mov
cmpsl
dec
scas
jb
ja
jbe
test
inc
out
add
test
inc
push
xor
pop
jb
cmp
popa
jns
iret
mov
in
fldt
push
add
adc
or
pop
dec
mov
push
push
pop
rorb
pop
cltd
loope
inc
mov
js
dec
daa
outsb
xor
inc
in
add
sbb
hlt
add
xlat
and
cmc
mov
push
add
imul
in
mov
add
xor
cld
cmpb
lret
bound
push
cmp
fidivs
les
shlb
sub
sarb
in
pop
sar
sahf
pop
mov
js
sub
not
adc
inc
lret
xor
arpl
lret
dec
ret
push
clc
out
pop
mov
call
mov
es
fidivs
add
dec
pusha
inc
outsb
lret
daa
rcrb
daa
mov
dec
sbb
iret
mov
pop
addl
push
xchg
loop
lcall
data16
adc
mov
xchg
and
sub
pop
jmp
decl
nop
push
jns
out
mov
jle
lea
inc
mov
push
cmp
lods
fsubrl
fidivl
add
xchg
int
jae
mov
adc
shrl
jbe
cmp
mov
jle
in
add
out
mov
cmp
adc
sbb
rcll
xor
jp
loop
stc
lret
pop
push
inc
fstl
or
mov
adc
pop
push
loop
pop
fisubrl
push
mov
dec
test
ds
mov
dec
or
mov
int3
xor
jl
lods
xchg
xor
xchg
lds
pop
pusha
inc
arpl
dec
pop
pusha
jne
rdmsr
das
out
es
test
sbb
roll
and
rcrl
test
dec
mov
imul
mov
cmpsb
inc
xchg
movsb
imul
inc
sbb
imul
jecxz
adc
jne
xchg
fldenv
push
or
ret
and
cmp
das
dec
mov
loop
es
xchg
push
jae
lret
jp
testl
jb
roll
dec
lds
loope
cli
push
mov
mov
and
insb
pop
mov
int
mov
dec
inc
prefetch
or
inc
sub
inc
xor
sub
inc
mov
subb
xchg
inc
push
popa
pop
testl
fistpl
jmp
xchg
repnz
enter
and
push
out
in
insl
jnp
mov
dec
mov
xor
cmp
sub
push
outsl
lret
mov
insl
dec
push
sar
in
mov
rclb
repz
cmpsl
sbb
xor
push
inc
repnz
lret
ss
rol
ret
mov
sbb
xchg
push
jmp
jecxz
or
and
mov
xor
pop
fidivrl
sub
or
sbb
addr16
cmpsb
xchg
popa
sbb
aad
cmp
dec
sbb
dec
cmp
mov
push
sub
hlt
mov
lea
fwait
add
rorb
xchg
push
out
jno
fnstenv
pop
ss
roll
bnd
imul
xchg
dec
push
in
pop
rol
jge
cs
cmp
sbb
fwait
xchg
and
je
test
mov
je
test
pop
lret
adc
scas
js
or
and
int3
or
lret
mov
mov
bnd
cmp
call
jle
or
icebp
cmp
sub
jg
mov
or
push
std
pop
testl
mov
popa
push
push
sbb
andb
xchg
jno
xor
js
jno
pop
vpshad
lahf
test
dec
pusha
loopne
pushf
es
jle
xor
faddl
jmp
jae
sub
add
pusha
mov
xchg
outsl
mov
inc
push
xchg
rorb
or
jg
sbb
cmpsl
jmp
mov
xor
mov
clc
sbb
inc
cmp
or
cmp
xchg
orl
repnz
xor
push
outsb
sbb
ret
jb
pop
jnp
mov
mov
nop
loopne
push
jbe
mov
push
jmp
pop
fistl
sub
rcll
adcb
pop
sbb
lcall
inc
and
repnz
lahf
and
sub
cs
dec
scas
mov
pop
orl
cltd
shll
test
jmp
xchg
out
loope
lds
pop
or
out
push
incb
imul
pop
and
xchg
fcompl
lods
xor
cmp
adc
mov
call
pop
js
dec
xor
lret
and
jp
fsub
add
lahf
or
cli
mov
rol
daa
dec
pop
imul
and
sbb
sbb
cmpsb
adc
ds
jp
ss
cmp
jmp
rorb
mov
pop
sbb
jb
stos
dec
xchg
and
notb
fs
cmpsl
sub
xchg
jne
add
or
cmp
xor
jl
nop
mov
rcll
inc
jmp
cmp
mov
jbe
and
jnp
mov
xchg
fnstsw
dec
or
pop
jge
jb
pop
pop
jb
mov
or
arpl
mov
fstl
fs
cmpsb
lret
push
insb
dec
fimull
fwait
cmpsl
orl
sbb
mov
jbe
sub
pusha
push
xchg
dec
cmc
and
cmpsb
cltd
daa
jns
jnp
stos
mov
mov
xor
int3
addb
push
or
les
add
mov
lret
cli
ljmp
inc
push
xlat
ja
leave
push
leave
jo
adc
jle
test
mov
jl
dec
cmpsl
imul
aam
lahf
push
sbb
fsub
xor
ror
xlat
xadd
add
fisubs
push
and
cmp
pusha
jmp
movsl
mov
push
dec
aaa
addr16
popa
adc
sub
in
into
pop
fimuls
cmp
sub
mov
aad
cmc
jae,pt
int
pop
mov
fldl
aad
andb
xchg
pop
jecxz
add
xor
sbb
out
sbb
fistpl
cmpsb
sbb
adc
aas
inc
repz
outsl
shr
out
mov
ret
push
jge
xchg
inc
mov
lcall
cwtl
insl
test
pop
int
mov
arpl
fistl
xchg
push
daa
cmpsl
or
xchg
pop
movsb
imul
pop
lds
and
jle
subl
xchg
jp
adc
and
scas
adc
lock
cmp
dec
mov
jne
add
or
push
mov
test
dec
sahf
inc
sbb
movsb
addl
andl
pop
or
in
pop
dec
push
orb
fstpl
adc
outsl
push
lahf
rclb
shll
add
and
in
in
and
ss
out
xchg
inc
gs
js
enter
enter
mov
sbb
aas
cwtl
jmp
lds
je
pop
push
and
xor
shrd
mov
xchg
mov
mov
and
arpl
adc
mov
fcomps
or
pusha
addr16
int3
inc
add
cmp
sub
in
mov
push
std
loop
popa
mov
and
inc
ret
jo
add
aas
push
pop
mov
fbld
push
arpl
mov
dec
push
mov
hlt
pop
dec
imul
repnz
popf
enter
xchg
add
add
xor
push
mov
mov
mov
fcompl
popa
cwtl
push
cmp
mov
push
shlb
pop
cmp
out
js
lea
imul
data16
loop
sub
cmpsb
pusha
aad
cltd
test
es
mov
or
jp
xor
jp
pop
mov
sbb
or
mov
movsl
clc
cmp
xor
sbb
push
stos
gs
in
int3
inc
add
out
shrb
cli
cmp
sub
shrb
and
dec
xchg
insb
mov
jno
push
cmpsl
mov
cmp
xchg
lahf
add
daa
andl
scas
in
inc
xchg
push
hlt
add
out
adc
xchg
lahf
adc
test
inc
adc
mov
adc
mov
mov
inc
mov
pop
lret
xchg
xlat
pop
aaa
mov
dec
fisttps
pop
add
and
das
cmp
jle
mov
mov
mov
jecxz
dec
ret
pop
sarl
jge
arpl
sbb
push
nop
xor
es
outsb
xchg
scas
inc
test
inc
pop
push
les
sahf
xor
lock
dec
movsl
stos
jns
ja
jmp
shll
ds
jge
call
xchg
xor
dec
cmc
ffree
push
movsb
repz
popa
std
mov
lret
faddp
test
fwait
xlat
pop
fcompl
test
test
pop
jo
dec
andl
outsl
sub
xor
insl
push
inc
arpl
aaa
arpl
jno
in
pop
push
and
in
stos
xchg
pop
jne
and
push
les
sub
in
or
xor
outsl
jg
aas
les
or
xchg
mov
push
in
jle
loop
jne
pop
mov
or
mov
fldenv
test
and
xor
mov
jmp
add
mov
jo
mov
mov
add
and
xchg
mov
vpshuflw
push
popa
daa
and
int
mov
icebp
mov
inc
inc
in
cli
mov
adc
lock
mov
cli
ja
frstor
adc
pop
call
rorl
js
notl
push
sub
fdivrs
fdivl
hlt
jp
imul
xchg
rcrl
mov
in
andb
pop
jae
lds
test
mov
inc
adc
insl
ss
jbe
jmp
or
push
or
add
xchg
xchg
add
pop
push
sub
push
pop
popf
mov
cmp
fsubrl
sbb
adc
addr16
out
add
outsl
mov
cmp
in
subb
fldl
filds
inc
loop
sti
insb
nop
lea
mov
xchg
imul
push
in
or
jmp
inc
push
mov
call
pop
popa
ljmp
push
fstl
stc
testb
sahf
stc
out
insb
mov
pop
add
out
mov
insb
popa
sbb
jmp
xchg
xor
lea
adc
add
aad
mov
push
leave
fisubrl
pop
jg
rorb
adc
idivb
sub
push
test
xchg
xlat
dec
mov
mov
dec
inc
pop
mov
int
inc
cmp
in
adc
lahf
bound
jp
dec
cwtl
test
pop
inc
cmp
insb
pop
mov
loop
and
xchg
fnsave
xchg
inc
add
ss
cmc
jl
mov
mov
dec
addr16
mov
mov
add
jge
int
andl
dec
xchg
int
or
sbbb
xchg
aaa
and
inc
jnp
xchg
mov
push
shll
bound
ficoml
or
fdivrp
sarb
test
nop
xor
popa
jno
inc
adc
sub
push
into
loope
repnz
mov
jnp
movsb
scas
pushf
lret
mov
flds
ss
insb
add
mov
mov
dec
adc
cmpsl
xchg
js
dec
xor
xchg
jmp
jno
mov
fwait
test
fildll
sahf
mov
add
scas
jb
int
adc
lock
xor
test
xor
mov
cs
sbb
ss
inc
cmp
jne
adc
ficompl
adc
leave
test
dec
push
cli
xchg
cmp
fcompl
mov
out
mov
adc
push
popa
inc
sbb
std
addr16
add
stos
pushf
lea
scas
xchg
and
cld
and
xlat
add
mull
hlt
test
enter
cli
call
push
and
xor
fnsave
xchg
pop
cmp
loopne
rcl
pop
dec
mov
or
lods
adc
dec
in
lret
jmp
cs
sahf
or
cmp
cmc
or
cli
lcall
mov
lahf
dec
xchg
push
stos
xor
scas
push
leave
sbb
and
mov
lods
dec
or
jp
test
arpl
mov
into
repz
cmp
in
pop
dec
or
pop
jge
push
test
push
jns
out
mov
or
jne
fbstp
mov
cmp
outsb
fadds
cmpsb
insl
xchg
and
jno
cmp
pop
cltd
dec
stc
jecxz
xor
repnz
sub
xor
jg
ret
mov
and
xlat
push
hlt
dec
inc
popa
add
xchg
push
sbbb
adc
xchg
icebp
icebp
aad
addr16
stos
push
je
sub
adc
icebp
jbe
adc
pop
cwtl
sbb
push
cmp
xor
jle
loop
cmp
fwait
sti
je
fsubrl
leave
xchg
into
inc
test
sbb
and
add
push
fwait
cltd
and
pushf
cmovae
sub
lcall
xchg
jge
pop
rcrl
out
jb
arpl
mov
sti
mov
add
push
in
sbb
sub
cmp
jno
cmp
inc
ret
mov
mulb
in
dec
outsb
mov
test
pop
rol
xchg
sbb
fbld
icebp
movsb
loope,pn
rolb
mov
mov
push
cmp
pop
jb
dec
push
aam
sub
ret
jb
js
dec
cmpsl
dec
aas
sub
mov
outsl
int
addr16
mov
inc
fnstsw
sarl
mov
jns
lahf
out
pushf
inc
cmpsl
mov
xchg
or
mov
xor
lock
mov
pop
imul
or
js
cmc
xor
fcompl
sub
lea
test
aas
mov
xor
mov
clc
xchg
push
decb
aaa
lcall
lcall
mov
stc
dec
out
push
fwait
insb
xor
ss
stos
lahf
mull
cmp
xchg
jp
xchg
ljmp
repz
inc
ja
adc
addb
fisttpl
add
push
cmp
pop
shlb
shlb
insb
xchg
cmp
dec
clc
sahf
loope
int3
inc
out
push
mov
push
subb
sub
inc
popa
push
jno
push
push
adc
cmc
insl
scas
adc
daa
aas
cmp
repz
xchg
mov
outsb
ds
jae
popf
push
mov
mov
xor
lret
xchg
cmp
shlb
adc
jae
cmp
insb
xor
xchg
mov
cld
pop
sbb
mov
sti
dec
mov
adc
add
jle
xor
enter
jg
push
test
aas
lods
mov
jl
cltd
jb
fld
jmp
aad
mov
shl
sbbb
inc
xchg
pop
cltd
hlt
in
adc
push
loope
mov
shr
sub
push
loop
adc
sbb
mov
sbb
dec
pop
dec
dec
jb
mov
lea
ret
xor
inc
sub
mov
mov
outsb
jle
imul
adc
sub
pop
cs
adcb
jnp
dec
fldcw
inc
adc
out
add
lret
int3
pusha
add
pop
nop
mov
xor
lahf
out
xor
or
aam
in
pop
dec
test
rep
mov
repz
cmp
pop
or
inc
mov
jno
in
lock
mov
xchg
push
and
or
xor
inc
loopne
push
decl
insb
mov
imul
dec
cli
test
je
ja
ret
xchg
leave
pop
sub
pop
sahf
fnstcw
sahf
mov
xchg
repz
cmp
aas
cmp
subb
ret
andb
pop
or
scas
inc
push
rcll
xabort
test
dec
inc
les
ss
xchg
clc
outsb
iret
inc
or
pop
loopne
fmul
mov
out
test
loope
mov
jns
fidivl
cmc
scas
insb
push
mov
pushf
lahf
add
sub
add
js
jns
cmp
push
fwait
pop
xchg
xlat
ret
pop
fdiv
jg
sub
hlt
dec
rep
std
ficomps
mov
sahf
xchg
ja
addr16
jbe
aaa
mov
mov
sbb
mov
sbb
decb
rorb
shl
fisubrs
pop
xor
test
xor
cmc
rcpps
decl
jns
dec
outsb
add
and
mov
std
lock
inc
imul
lods
int
insb
push
popf
nop
mov
jle
sub
test
push
cltd
cmpb
cwtl
xchg
loopne
mov
push
std
shrb
xchg
std
lods
packuswb
mov
les
xchg
bnd
int
lods
int3
leave
imul
sarb
outsb
inc
lods
cmp
out
aad
add
pop
scas
xor
into
flds
dec
js
in
mull
lret
inc
gs
jns
test
inc
jmp
xchg
inc
fimull
sbb
leave
dec
push
jg
cmp
sahf
adc
inc
movsl
cmp
pop
out
add
clc
fildll
jae
dec
push
xchg
xchg
mov
dec
hlt
mov
aam
mov
push
xchg
in
pusha
pop
jo
jle
mov
and
js
cmpsl
icebp
or
cmc
mov
jmp
and
data16
inc
jp
adc
or
or
cltd
jp,pt
sarb
lock
dec
cmp
mov
lock
enter
mov
mov
or
fisubrs
pop
dec
cld
in
insl
jb
sub
sbb
shlb
xlat
insb
mov
mov
in
push
push
cmp
lock
or
cmp
pop
ss
or
mov
xor
call
bnd
arpl
js
movsb
cld
xchg
loop
mov
jmp
addb
nop
scas
lret
and
pop
lock
fxch
mov
push
sub
cmc
add
jg
jnp
shll
insb
enter
call
out
test
jo
cmp
jmp
pop
pop
insl
jnp
cmp
sbb
xchg
test
cmp
jo
ja
cmc
repnz
xor
orb
iret
out
je
mov
mov
fisttpl
ret
dec
jecxz
inc
jb
dec
test
in
mov
xor
mov
or
jb
add
lock
pusha
pop
bound
add
in
and
idivl
lea
dec
jmp
pop
xchg
sub
leave
push
xchg
push
push
dec
xchg
mov
out
mov
xchg
loope
dec
jl
pop
or
cmp
shl
out
pop
jle
sbbl
lahf
push
jno
mov
push
sub
aad
or
xchg
xchg
daa
inc
popf
add
dec
bnd
test
outsl
inc
xor
int3
cmc
adc
aam
test
lods
subb
mov
mov
mov
sub
mov
push
or
push
inc
lret
mov
dec
out
push
fistps
mov
outsl
adc
leave
aaa
test
repz
mov
stos
jp
pop
fisubrs
add
lods
sahf
inc
and
xor
mov
pop
mov
pop
and
or
sahf
adc
mov
lods
in
mov
fadd
dec
push
cmpsb
pop
add
das
add
aas
dec
jnp
cwtl
fdivs
sub
mov
pop
mov
pop
jne
movsl
push
out
and
dec
xorl
and
cmp
test
cld
cwtl
xchg
fwait
nop
or
cmp
pop
outsl
push
inc
or
outsb
xchg
sbb
push
pop
cmp
popa
mov
push
pop
mov
pop
sub
cmc
ror
out
dec
dec
pushf
xchg
subb
lret
jae
inc
xchg
add
in
call
and
jle
fbld
sbb
das
fimuls
adc
jecxz
mov
call
in
fadds
repnz
cmp
lret
adc
pop
arpl
xchg
or
js
cmpsb
mov
mov
jmp
imul
pop
rorb
call
in
jle
mov
in
inc
clc
jns
into
lret
sub
jns
pop
xchg
inc
mov
cmp
ss
je
test
gs
imul
jge
into
mov
xchg
in
pop
cmp
popa
mov
or
out
and
or
mov
push
and
jle
mov
ror
scas
sub
adc
stos
mov
pop
push
stc
cmp
push
xlat
mov
fcmovnbe
fdivs
dec
ficoms
hlt
icebp
out
stos
loop
mov
add
jl
lahf
outsl
in
push
cmp
lcall
xor
rcll
push
jmp
data16
pop
pop
xchg
call
xchg
and
loop
add
adc
outsb
ficoml
and
aad
xchg
divl
xchg
subb
std
movsl
and
jne
mov
out
out
ds
sbb
dec
sbb
push
xchg
sbb
inc
jns
pop
mov
jne
pop
or
jns
xchg
xor
xchg
popa
fisubs
fdivr
movl
stos
mov
hlt
mov
jle
fists
pop
jg
mov
and
iret
fwait
test
add
pop
decl
push
mov
mov
inc
int3
xor
inc
cmp
xlat
pop
push
jp
sahf
xchg
adc
test
add
adc
mov
arpl
sahf
mov
lahf
xchg
or
dec
jno
movsl
test
lds
enter
in
inc
pop
mov
sar
add
jp
stos
xchg
ret
aam
push
enter
ss
lahf
hlt
insl
mov
shrl
subl
je
mov
stc
enter
lds
push
mov
mov
mov
clc
dec
jbe
push
lock
mov
mov
icebp
fistps
les
lods
aaa
popf
mov
mov
fstpl
push
inc
sub
lahf
bound
push
sub
jl
cmp
sub
ljmp
cmpxchg
mov
inc
add
ja
mov
lods
outsb
inc
or
test
clc
ja
divl
sbb
shrl
fcoml
stos
mov
pop
nop
jno
add
movb
pop
cld
and
fwait
mov
add
xchg
rcr
adc
fstpt
pop
loopne
dec
sbb
lods
jae
mov
mov
dec
push
test
test
sub
cld
dec
mov
pop
inc
fdivrs
cltd
in
imull
pushf
dec
lcall
xlat
stos
or
xchg
in
fwait
add
mov
cmp
jp
les
ja
aam
lcall
dec
rorl
pop
scas
push
shl
pop
dec
insl
jns
lret
xchg
arpl
shlb
push
add
fsub
ret
or
shlb
icebp
decb
pop
in
in
inc
adc
jle
gs
pop
popa
sbb
mov
and
je
dec
and
cli
fucom
pop
call
into
divw
mov
fisubrl
push
cmpsl
jb
int3
xchg
mov
ja,pn
jo
jae
int
mov
mov
dec
or
add
in
sahf
add
sub
ja
xchg
test
sbb
js
or
sub
ja
add
mov
test
xor
dec
lea
ja
adc
orl
aaa
inc
add
mov
dec
cs
inc
mov
pop
cltd
adc
sbb
clc
ret
push
jae
stos
push
mov
pushf
cs
mov
std
xchg
in
clc
add
iret
jo
sub
push
pop
lea
adc
xorb
sub
cmp
mov
pop
sub
imul
aaa
out
mov
into
mov
mov
mov
pop
sub
mov
add
mov
loopne
or
lds
mov
mov
push
sbb
clc
loopne
xchg
mov
push
jecxz
dec
sub
dec
out
fwait
leave
inc
adc
sti
pop
inc
shll
mov
fwait
insl
cmpsb
pop
iret
jmp
xchg
mov
gs
imul
xchg
gs
push
xor
lods
jmp
ja
out
out
movsl
sahf
imul
leave
in
pop
out
cmc
inc
pop
dec
aaa
or
dec
xchg
mov
xor
fisttpl
pop
or
sub
repnz
push
lahf
lret
int
and
mov
push
jp
rcrl
repz
push
ficoms
rcll
mov
mov
jo
mov
test
out
rcr
or
maskmovq
cltd
fucomi
icebp
dec
shl
lret
mov
and
popf
or
rcrb
in
into
js
rcl
mov
lahf
idivl
push
mov
inc
adc
inc
in
out
shlb
and
jg
out
jp
add
inc
sub
imul
mov
call
jp
cmpsb
jmp
push
loop
lahf
push
imulb
sub
ljmp
loope
push
lods
add
out
inc
sub
adc
ret
rcrl
inc
xchg
addr16
les
or
mov
inc
xchg
lret
imul
stos
adc
dec
pop
xor
mov
mulb
loop
fsubs
popf
mov
pop
outsl
out
imul
or
mov
inc
inc
mov
mov
jle
mov
ljmp
bswap
or
jecxz
inc
lods
stos
inc
add
divps
fcomps
mov
push
cmp
jo
mov
pop
mov
pop
xchg
add
mov
out
outsl
loopne
jbe
pushf
idiv
push
jnp
sti
fs
icebp
out
mov
push
dec
dec
jns
and
and
sbb
repz
lods
mov
in
xor
mov
sbb
inc
cwtl
test
pusha
sub
mov
push
out
in
and
jb
cmp
scas
nop
or
gs
dec
jg
sub
stos
lret
xchg
sbb
xchg
call
pop
mov
push
dec
or
push
mov
fists
test
jbe
xchg
pushl
aad
or
mov
or
jne
mov
jmp
hlt
xor
notb
stc
push
repz
jns
inc
out
mov
cmp
or
adc
mov
xchg
adc
xchg
orl
adc
in
testb
dec
push
das
dec
jbe
jo
sahf
xchg
lret
scas
divl
adcl
inc
repz
inc
mov
je
leave
add
dec
lret
mov
sub
push
cmpsb
or
or
jbe
aas
xchg
mov
push
div
sbb
mov
mov
iret
sbb
or
sbb
mov
dec
repnz
xchg
test
mov
out
jp
add
mov
mov
push
inc
stos
sti
pop
push
push
and
int3
mov
insb
fimuls
inc
adc
clc
jmp
in
add
imul
adc
mov
cmp
adc
and
jne
in
sub
sub
push
xlat
ret
jns
loopne
lcall
ja
addr16
or
out
aas
ret
cmp
shrl
push
loope
push
sub
sub
ret
pop
inc
adc
mov
dec
insb
xor
pop
sub
stc
mov
mov
lcall
lods
in
addb
scas
push
and
push
lods
shrl
inc
int3
xor
xchg
add
xorb
movsl
addb
ret
fcomp
ja
push
add
fisttpl
mov
inc
or
insb
into
pop
adc
inc
lret
mov
pop
fstpl
cmpsl
pop
fdivs
scas
test
dec
mov
mov
mov
pop
jnp
and
mov
mulb
sbb
push
mov
adc
fcomps
lock
mov
les
adc
in
in
mov
xchg
pop
mov
sub
jg
pop
push
add
mov
test
std
mov
add
and
aas
insl
add
hlt
jnp
jmp
sbb
cmp
cmpsl
pop
xchg
dec
add
fs
xorl
pop
xchg
and
addb
and
cmp
syscall
add
push
lds
xchg
fs
mov
fldl
cmpsl
sahf
das
scas
xchg
mov
fs
xchg
jge
xor
jecxz
cmpsl
fs
or
repnz
xchg
dec
xchg
pop
loope
je
jmp
dec
imul
inc
dec
jb
fs
push
xchg
imul
sti
movsl
inc
fcmovbe
call
mov
xchg
push
or
xor
adc
or
mov
mov
xlat
push
dec
inc
cmp
fwait
mov
lea
mov
mov
dec
leave
inc
test
fwait
xor
push
gs
add
xor
mov
pop
insb
mov
ficoml
mov
pop
fcmovnu
or
inc
pop
sbb
addr16
add
test
ror
mov
leave
pop
shrb
or
xchg
fcomi
dec
aas
cmp
fcoml
lods
sahf
xchg
nop
test
ret
lret
lock
cmpb
int3
notb
mov
push
lds
push
stos
jno
rolb
xchg
cmp
add
xor
call
repnz
out
adc
jl
push
mov
add
xor
xchg
stos
in
mov
cmpsl
jecxz
mov
or
jnp
addr16
cmpsl
adc
adc
cmp
dec
dec
mov
mov
fwait
and
imul
jge
cltd
push
and
ficompl
xchg
inc
push
loop
xchg
dec
insb
adc
es
sub
cltd
inc
mov
add
sbb
mov
xor
dec
pusha
mov
out
scas
adc
adc
sarb
leave
cmpl
xor
xor
insl
ffree
inc
imul
or
mov
adc
dec
sbb
pushf
imul
cmp
dec
into
mov
in
and
xchg
sbb
lcall
lods
adc
jo
aam
pop
icebp
mov
fidivs
popf
mov
lret
movsl
xchg
mov
movb
les
in
and
pop
sarl
cltd
pusha
jns
sahf
inc
push
mov
xchg
push
mov
in
loopne
xor
mov
adcb
hlt
and
lahf
and
fwait
and
mov
rcrl
inc
inc
cmp
movsb
inc
dec
mov
popa
jg
fadd
jl
rcl
push
push
arpl
push
dec
mov
test
lods
loop
vshufps
or
out
push
mov
mov
in
or
or
cmp
out
es
cwtl
int3
js
es
push
push
push
shll
push
gs
aam
loop
xor
dec
lahf
jg
gs
pop
mov
vsqrtps
mov
or
aaa
pop
jmp
mov
xor
xor
jecxz
jl
mov
and
fs
test
xlat
loope
cmp
mov
mov
orb
sub
jne
jecxz
xchg
push
addr16
repnz
inc
insb
push
mov
push
ret
fdivl
lcall
daa
mov
aad
xchg
out
mov
stc
and
xchg
ficompl
sub
sbb
jmp
mov
jne
jae
push
jne
xchg
aad
out
arpl
flds
and
int
dec
inc
xchg
mov
add
add
dec
dec
jg
push
add
xor
dec
mov
ds
out
pop
adc
sub
loope
stc
shlb
subl
in
daa
mov
pop
in
cmp
inc
mov
mov
inc
mov
mov
or
aad
int
popf
mov
xchg
xchg
mov
int
cwtl
add
xchg
repnz
daa
sub
int3
test
aam
adcl
push
xor
pop
push
fdivrl
mov
rorb
cltd
mov
lods
add
mov
bound
mov
mov
lret
imul
cmp
sbb
mov
adc
rcr
and
inc
pop
dec
fidivrl
pop
jnp
popf
mov
and
loope
adc
jns
xor
or
aaa
lret
flds
adc
sub
push
fsubs
pop
adc
cmc
addb
xor
es
sbb
pusha
jp
mov
sbb
call
hlt
popf
sub
cmpsl
and
test
xchg
not
inc
mov
icebp
push
inc
push
insl
jecxz
pop
push
push
in
push
std
in
cld
xor
mov
movsb
rep
jae
inc
lods
sub
clc
push
add
fcom
mov
fdivrl
adcb
outsb
fsubl
lcall
and
pop
pop
pop
insb
inc
addb
mov
mov
lods
mov
ss
cmp
cmpsl
out
lods
jmp
and
sbb
and
scas
fstl
cmpsb
movsl
shll
mov
cmp
cli
les
repz
leave
xor
fisttps
jb
in
shlb
mov
xor
inc
sti
jge
popf
push
fwait
insb
das
pusha
stos
cmp
scas
and
sub
cmp
addl
inc
mov
popa
mov
mov
mov
jp
and
imul
sarb
mov
cwtl
enter
xor
xchg
and
adc
lahf
pusha
mov
sahf
scas
repz
test
fs
adc
add
cmc
pop
mov
fldpi
cmc
ja
pop
insl
mov
push
mov
ljmp
xchg
fst
fmuls
sarb
pop
fdivrl
dec
cli
xor
cmp
iret
aas
jbe
popa
push
pop
dec
add
into
nop
popa
jle
xchg
dec
jnp
nop
mov
cmc
cmp
ficoms
mov
rol
clc
sbb
dec
pop
into
arpl
mov
inc
rol
or
cmp
or
mov
sarl
loopne
enter
inc
lods
lods
loop
cmp
in
cltd
cld
or
cmp
dec
fs
mov
mov
icebp
or
jle
adc
lahf
push
sti
fsubrl
or
mov
iret
lret
mov
mov
pop
and
xor
cs
cs
out
les
scas
sbb
xor
jns
rcll
sbb
stc
inc
andl
addb
cmp
or
mov
sbb
mov
test
iret
adc
in
das
pop
and
je
sarb
cmc
xchg
mov
and
xor
mov
shlb
fists
push
dec
inc
les
lret
aad
mov
fsubrs
andl
dec
add
dec
inc
jmp
jge
or
mov
mov
cmp
mov
add
cs
call
sbb
push
fdiv
push
mov
sub
das
push
dec
push
clc
gs
and
xchg
adc
icebp
imul
loope
cmp
xchg
jno
cmp
push
cli
and
test
repnz
mov
push
sub
loopne
adc
popa
imul
lea
pop
shll
das
xor
push
rorb
push
mov
clc
pop
sti
int3
add
dec
inc
sti
es
and
adc
pop
mov
sbb
scas
addr16
call
fsubrs
xchg
or
lds
jb
aaa
jo
shl
sahf
stos
jae
mov
mov
lea
test
mov
add
insb
std
stos
and
shll
fsts
fprem
mov
pop
xchg
xchg
daa
divl
in
jge
dec
std
fcoml
pop
cmp
in
mov
jg
int3
stos
adc
insb
push
sbb
mov
cmp
or
mov
push
inc
sbb
xor
mov
fdiv
imul
and
imul
or
mov
lods
mov
sbb
ret
imul
cmp
mov
sbb
dec
lock
cmpl
bound
dec
dec
fwait
std
xchg
lods
inc
jg
jbe
mov
out
inc
inc
push
pop
out
neg
in
cmp
cmp
and
jnp
pop
jno
fcompl
faddl
mov
rcrl
int3
xchg
jne
aam
icebp
or
rorl
loopne
mov
pusha
scas
sub
add
mov
jge
shrl
shl
test
lret
cmp
cltd
ficomps
icebp
mov
repz
mov
pop
aam
fnstenv
fidivs
test
stos
add
arpl
and
dec
sub
xchg
xor
ret
test
jnp
xor
jo
push
in
mov
aaa
daa
cwtl
pusha
xor
sbb
lea
test
addr16
jbe
cmp
out
xchg
mov
ret
mov
fildll
sub
mov
inc
add
adc
into
test
push
cmpsb
js
mov
ds
fnstsw
xchg
addr16
pop
add
insb
sarb
fsubs
out
inc
jp
sub
fldt
sti
das
mov
scas
subb
outsl
push
ret
outsl
addr16
mov
out
sahf
xchg
and
stos
or
cmpsl
rcll
or
xchg
lods
call
in
or
popa
icebp
das
jae
sbb
ret
test
inc
adcb
mov
mov
leave
mov
ljmp
subb
pop
mov
repnz
in
xchg
aaa
mov
mov
xchg
sub
sti
adcl
cwtl
cmpsb
fstpt
in
call
mov
sti
push
adc
dec
mov
lea
xchg
jp
movsl
scas
stos
out
pop
imul
mov
insb
jb
sub
inc
cld
ret
aaa
or
stc
mov
jmp
xor
popf
fadd
adc
mov
fstpl
inc
add
cmp
mov
mov
ficoml
stos
outsb
push
lahf
shrl
test
cmp
mov
or
and
std
dec
xchg
jne
xchg
stc
dec
mov
sbb
inc
hlt
and
mov
jp
and
pushf
negb
xlat
mov
jno
xor
dec
out
xchg
mov
int
pop
leave
or
loopne
gs
outsl
push
daa
and
sub
jbe
fld
je
push
cwtl
add
outsl
push
sbb
das
adc
loope
shll
mov
ja
stos
push
xchg
sbb
rcrb
dec
mov
add
xor
pop
pop
es
add
mov
movsb
iret
out
mov
fistl
jl
inc
ljmp
lahf
push
fs
and
in
inc
cmp
fadds
fnstsw
cmp
cmp
mov
popf
sbb
addl
inc
pop
adc
or
out
shlb
in
or
push
mov
mov
iret
and
xor
sbb
ror
push
adc
jbe
cmpb
imull
push
fldcw
xchg
xchg
cmpsb
clc
pop
push
stc
cmpsb
aad
fs
cmc
or
mov
mov
movsl
sbb
push
daa
or
cmpsl
push
mov
jo
mov
imul
inc
ljmp
test
stos
fldlg2
aam
xor
in
and
sub
pop
cmc
aam
hlt
xchg
xor
sbb
das
pop
lcall
fildl
movsl
push
xchg
shrb
sti
imul
xor
adc
pop
sub
and
lods
addr16
sbb
ds
and
popa
setge
out
inc
and
nop
fwait
lea
cmp
inc
adcb
jo
aaa
mov
cmc
repz
or
or
mov
mov
dec
mov
xchg
test
mov
inc
movsl
sahf
cmpsb
fistpll
insb
jmp
nop
dec
fbld
sub
mov
jmp
out
in
popf
jle
cmp
popf
out
scas
rcll
or
pop
adc
and
push
adc
outsl
gs
adc
xchg
jmp
lret
pusha
ds
mov
out
lods
jns
je
add
in
mulb
xchg
dec
adc
sbb
stos
mov
out
cmp
js
push
or
call
xlat
pop
loopne
and
and
mov
mov
xor
push
addl
ficomps
aad
movsb
cwtl
in
dec
push
daa
xor
cmpsb
inc
popa
xchg
add
mov
pop
jbe
sub
xor
imul
inc
pop
insb
mov
fbstp
scas
orps
cmp
push
mov
jne
dec
pushf
addr16
ret
mov
imul
sub
xchg
dec
jo
or
or
cmp
adcl
push
inc
mov
mov
or
pop
int
testb
xchg
orb
xor
in
js
addr16
shlb
push
jmp
xchg
push
and
stos
mov
xchg
mov
shrl
out
out
ret
xchg
xor
stos
fisttps
jl
pop
pop
push
mov
push
xor
xor
test
sbb
pop
loopne
mov
loopne
add
and
cli
add
fidivl
sub
add
lret
cmp
test
lock
dec
es
out
xchg
lret
xor
bound
into
fidivs
imul
fdivl
adc
fdivs
clc
ss
lret
mov
jno
insl
je
and
xchg
mov
add
enter
and
cmpsb
lret
adc
push
sbb
dec
notb
mov
xor
push
push
mov
adcb
mov
or
out
fldcw
inc
stc
xchg
fdivrp
fsub
pop
repnz
outsl
lcall
sti
jge
push
les
lahf
outsl
shl
push
cmp
xchg
fsubl
imull
jae
stc
aas
xor
mov
shrl
stos
into
repz
es
stos
jecxz
test
xorb
das
gs
jns
out
push
stc
out
xor
fcomps
xor
jns
pop
lds
mov
loop
iret
jmpw
push
hlt
dec
mov
icebp
addr16
aam
mov
xchg
rcl
cltd
mov
bound
jl
cli
cwtl
rcll
xor
shr
push
sbb
pushf
sub
out
pusha
cmp
popl
arpl
ret
cmp
push
and
or
je
scas
xchg
sahf
ja
mov
push
es
cmp
incb
jno
push
and
fstl
lea
pop
jo
aas
loopne
out
adc
jae
push
pop
ss
fwait
jo
pop
call
ja
insl
xchg
rcrb
jo
ljmp
mov
sbb
into
or
inc
or
outsb
and
dec
repnz
add
or
jae
inc
out
pushf
xor
inc
mov
dec
iret
loopne
sbb
xchg
xchg
repz
add
or
jmp
xor
inc
gs
xchg
int3
cld
loope
adc
out
and
nop
mov
add
aad
adc
mov
jle
sbb
shr
fists
gs
jo
jns
jae
xor
dec
or
in
mov
into
sub
aam
lcall
std
or
loop
mov
jecxz
mov
jnp
push
incl
test
andb
cltd
sub
pop
std
loopne
call
pop
or
icebp
or
out
pop
aaa
adc
adc
adc
lods
int
aam
loop
nop
movsb
add
xchg
sub
jg
xchg
pop
xor
mov
icebp
mov
adc
das
jns
mov
mov
leave
imul
nop
das
cmp
jne
imul
sub
sahf
xchg
pop
cmp
jecxz
jo
dec
sub
rcl
sbb
ret
push
or
mov
mov
adc
outsl
ja
mov
ljmp
scas
jb
std
xor
js
xchg
mov
jl
mov
push
in
gs
in
lcall
or
push
mov
adc
imul
hlt
mov
xor
push
pop
mov
mov
push
mov
cmp
dec
inc
cmp
ret
mov
lret
js
adc
cmpsl
lock
bound
mov
sub
mov
dec
outsb
mov
stc
test
inc
push
sbbl
into
outsb
sbb
nop
sti
sub
and
aas
test
sub
push
cmpsl
add
std
nop
mov
fs
mov
repnz
pushf
ss
imul
in
test
outsb
jno
adcb
jb
out
jns
and
mov
xchg
in
mov
mov
push
add
xchg
add
mov
test
sarb
jle
fisubl
stos
loopne
or
pop
and
mov
popa
sahf
cmc
js
push
orl
cltd
add
add
or
mov
mov
xchg
aad
rep
clc
stos
inc
imul
stos
int3
fistps
mov
dec
es
out
xlat
push
mov
cmc
movsl
adc
es
repnz
add
pusha
inc
push
fldenv
dec
mov
xchg
pushf
mov
sbb
ss
subl
dec
out
lods
inc
pop
jno
mov
in
out
push
lds
xchg
inc
dec
mov
ret
fistps
aas
jle
ljmp
xchg
pop
cmp
mov
pop
xchg
add
jns
mov
jmp
mov
cmpsl
lret
mov
loopne
xor
cmp
inc
and
rclb
add
xor
loopne
out
mov
stos
pop
xor
push
mov
je
inc
mov
scas
inc
dec
dec
mov
cmp
xor
mov
ret
insb
mov
mov
sbb
xlat
and
fsubrs
es
cmc
scas
scas
mov
addr16
sbb
stos
sahf
sbb
jnp
lret
mov
fstp
or
in
dec
je
sub
rcll
dec
sbb
stos
dec
xadd
popl
xorb
inc
xchg
xor
jge
in
rcrl
sbb
adc
push
clc
xchg
rcll
and
add
insl
je
push
outsb
movsb
ljmp
xlat
mov
sub
jg
js
into
inc
xor
jb
fstpt
push
pop
mov
adc
ss
mov
add
loopne
cwtl
pusha
xchg
fwait
sub
and
fdivr
mov
jae
cltd
inc
out
lahf
shlb
mov
not
xor
pop
push
mov
adc
pop
loopne
daa
mov
loopne
shr
pop
lret
mov
dec
cs
jnp
ret
icebp
xor
and
andb
rcrl
dec
mov
repnz
insl
jl
shll
aad
cmc
adc
sbb
daa
jle
aaa
jg
in
mov
popf
mov
movsl
adc
mov
sbb
imul
sub
xor
daa
mov
push
test
add
push
in
dec
movsb
sub
xchg
sbb
movsb
sub
xchg
sarb
lock
fisubrl
sub
mov
and
push
sub
lods
or
addl
cmpsb
ja
jmp
and
adc
ret
cs
sbb
imul
xchg
add
jle
fwait
arpl
push
dec
lods
sbb
int3
adcl
cmp
xchg
lods
lods
fidivs
ljmp
loope
mov
sub
in
and
push
mov
pushf
cmpsb
iret
jmp
sub
pop
ret
ret
inc
mov
dec
out
popl
mov
mov
xor
fs
cwtl
push
jns
sub
pop
lods
cli
pop
push
jbe
mov
pop
cmp
dec
sahf
adc
mov
push
pushf
divb
jg
add
and
push
sub
or
cs
sbb
sbbb
outsb
aas
mov
shrl
cmp
je
dec
sbb
mov
scas
hlt
out
arpl
nop
jge
sbb
data16
lret
push
jnp
mov
pop
bound
sub
jb
pop
in
scas
mov
push
mov
hlt
xlat
push
jmp
rcrl
jo
pusha
push
jl
ficomps
test
xor
mov
loope
cmp
pop
adcl
aam
mov
adc
dec
push
adc
je
mov
js
roll
bnd
pop
lods
sbb
sub
push
rcll
ret
inc
lods
mov
sahf
mov
ljmp
mov
cltd
aad
sbb
adc
sarb
add
out
jp
mov
inc
outsl
inc
pop
push
in
and
in
mov
ficompl
outsb
mov
mov
repnz
jne
mov
hlt
rcl
mov
movsl
out
dec
pushf
rdmsr
test
sbb
lods
lret
idivb
mov
lret
iret
or
mov
or
sub
mov
movsl
cmp
call
xchg
mov
mov
ss
nop
adc
nop
mov
pop
cmpsl
inc
insl
pushf
xchg
adc
or
cmp
imul
les
das
shlb
sub
cmpl
push
push
mov
mov
push
dec
pusha
add
cmp
lea
pop
or
cwtl
loopne
jp
push
pusha
sub
pop
iret
cmpsl
adc
fwait
jl
cmpl
pusha
movsb
sbbb
mov
adc
mov
aaa
sahf
insl
xchg
push
sahf
aaa
pop
mov
jnp
gs
sbb
lret
and
add
mov
push
pop
insl
inc
repz
dec
mov
or
je
test
adc
lock
das
mov
xchg
push
aas
sahf
out
mov
push
and
js
jl
mov
inc
push
ds
or
pop
movsb
xor
repnz
test
push
mov
pop
lret
js
cld
mov
loopne
rorb
inc
push
cli
jmp
sti
jecxz
sbb
loope
or
bound
push
cltd
sub
icebp
cmp
fnstenv
lods
dec
inc
fistpl
rcrb
adc
push
inc
jp
lret
hlt
or
jp
lcall
test
ret
sbb
mov
ds
pop
int
xchg
pop
loop
and
rcrl
lret
and
dec
push
scas
mov
out
push
adc
cmpsl
adc
dec
jno
add
push
in
or
or
std
or
or
jp
adc
inc
in
jb
or
add
sub
cltd
lcall
fcoms
mov
push
scas
push
mov
arpl
call
icebp
inc
dec
push
push
xor
insb
out
int3
lret
ss
mov
mov
push
add
iret
outsb
int3
loopne
pop
mov
jne
stos
sbb
add
sub
jp
push
xchg
stos
lea
in
pusha
inc
loope
das
popl
lods
and
xor
jg
jne
nop
inc
sti
cld
mov
jg
movsl
xor
inc
in
sbb
data16
gs
fcmovnbe
adc
mov
insb
jnp
mov
jbe
sbb
ret
movsb
sahf
sbbb
sti
add
xor
sarb
cs
push
sbb
enter
cmpsb
repz
adcb
divl
inc
add
and
stos
cmpsl
jge
int3
and
cmp
sub
shl
shll
pop
shl
mov
add
test
test
aad
sub
lret
iret
mov
roll
add
adc
add
add
scas
rcrl
data16
add
inc
lret
sbb
adc
jne
or
inc
add
ret
test
sti
bound
mov
dec
xor
data16
xchg
fistl
cmpsb
xor
das
insl
test
cmp
or
inc
pop
sti
out
or
push
dec
aam
pop
loop
into
sub
sbb
adc
outsb
dec
xchg
shl
aas
mov
leave
out
dec
repnz
sbb
mov
mov
dec
es
push
pop
or
in
mov
mov
mov
leave
push
out
jecxz
data16
jge
out
mov
push
mov
cvtpi2ps
popf
jle
mov
outsl
inc
ficomps
std
inc
setno
or
lods
mov
push
add
rorl
roll
push
stos
lahf
insb
ret
cmp
adc
sarl
fmuls
sahf
pop
adcl
inc
subl
fistpll
sbb
stos
jo
out
sub
sarb
test
leave
sub
fbld
out
dec
cmp
mov
xor
mov
add
repz
mov
lds
dec
cmp
pop
popa
pop
stos
mov
rcrl
mov
add
cmp
out
insl
push
fs
cmp
push
scas
xchg
cld
aad
popa
outsl
xchg
xchg
int
fnstcw
testb
icebp
cmp
lock
and
jb
cs
stc
jmp
mov
adc
jg
pusha
stos
pop
push
mov
pushf
fcomps
pop
sub
jge
mov
adc
fstps
arpl
mov
es
mov
nop
pop
jge
add
nop
jecxz
sahf
or
sub
popa
pusha
test
push
test
pause
popf
and
adcl
clc
sub
adc
int
xchg
out
sti
xchg
fdivs
inc
aad
jle
clc
adc
je
out
mov
stos
aad
out
ljmp
pop
inc
pop
out
cmp
push
mov
cmp
mov
cli
call
mov
inc
sub
inc
es
push
negl
jge
ret
cmp
push
cmp
cmp
jp
test
iret
roll
xchg
enter
mov
xchg
pop
loope
mov
inc
mov
adc
ds
fcoml
push
sti
push
jb
rclb
pop
jecxz
cmpsb
and
rorb
mov
mov
jno
lds
dec
cli
push
pop
mov
jge
out
shlb
es
add
jo
cmp
mov
sbb
mov
sbb
mov
rorb
jg
mov
shl
jno
jno
icebp
inc
andl
hlt
stos
push
loop
mov
dec
push
or
sbb
pop
ss
and
pop
lds
testl
sbb
sub
lds
pop
scas
mov
stos
movsb
cmp
idivl
imul
arpl
pop
and
test
sarl
and
mov
push
xor
and
stos
les
jno
and
ds
pop
mov
push
and
scas
dec
push
push
xchg
lods
and
inc
xchg
add
pop
loope
outsb
imul
rcrb
fnsave
aas
sbb
mov
push
pop
mov
rclb
sbbb
out
pop
enter
and
mov
mov
aas
xchg
sbb
adc
repnz
inc
aaa
in
stc
in
cmp
mov
xlat
notb
divb
dec
pop
mov
int
xor
inc
test
mov
pop
fcomps
je
lea
or
sbb
dec
sub
push
aaa
pushf
dec
dec
mov
test
and
call
imull
outsb
lea
mov
xor
fiadds
jbe
lcall
pop
lret
arpl
je
adc
pushf
push
repnz
push
lea
stc
mov
lcall
outsb
mov
cmp
repz
or
jbe
sub
clc
or
call
mov
cltd
dec
mov
fdivs
or
sub
xchg
pop
mov
das
dec
pop
push
sti
std
in
cmc
sub
imul
ds
les
pop
insb
mov
adc
dec
mov
loop
xor
pop
mov
xor
inc
stc
jae
ret
addr16
push
mov
outsl
out
mov
mov
jne
jne
aad
jns
adc
pop
loope
sub
sub
iret
daa
push
inc
popa
cs
adc
mov
stos
or
sbb
mov
insl
cs
add
aam
pushf
cmp
xor
in
sbb
bswap
int3
cli
daa
test
inc
and
pop
insl
push
sbb
jle
pop
jmp
xchg
mov
dec
mov
ret
enter
enter
addr16
imul
cmp
test
add
mov
push
push
loopne
mov
sbb
mov
les
sahf
int
or
jns
and
insb
push
jp
ficoml
icebp
ret
cs
adc
movsb
dec
push
ljmp
or
hlt
rol
push
ss
shll
inc
fistl
and
fdivrs
enter
push
xorl
push
outsl
adc
out
into
jg
stc
sub
aad
pop
shl
rcl
out
or
in
mov
cmp
adc
fmul
pop
adc
sbb
add
rclb
test
push
xor
es
dec
and
mov
fstl
insl
outsb
mov
loop
test
sub
popf
or
sbb
in
adc
push
pusha
fimull
movsl
shrb
loop
sahf
pop
mov
movsl
imul
outsl
hlt
fs
xor
sbb
mov
jl
gs
repnz
dec
jnp
mov
xchg
rorb
movsl
mov
sub
dec
sub
xor
sbb
inc
out
jle
mov
xor
fucomp
js
ss
ljmp
ljmp
adc
dec
outsb
ffree
fistpll
iret
je
ljmp
mov
sub
xchg
test
outsl
xchg
mov
int3
xorb
call
jmp
xor
mov
insl
cmpsb
outsl
and
jle
ss
pop
movsb
addr16
lcall
loop
sarb
mov
pop
pop
leave
fisttps
inc
lea
cltd
dec
pop
xor
and
push
xchg
sbb
outsl
pusha
lods
cmpl
std
add
mov
sahf
jo
cmp
cs
mov
jge
cmpsb
ret
in
stc
inc
lods
push
jns
mov
orl
jno
and
adc
arpl
hlt
mov
stos
callw
sub
fsubs
add
jl
rolb
shrl
and
push
sbb
push
xor
xor
and
cmp
pop
dec
popa
loopne
rorb
inc
push
jge
scas
popa
aam
jge
mov
cmpsl
sbb
push
pusha
dec
ljmp
pop
xor
xchg
adc
push
outsb
adc
jle
lds
inc
sahf
repz
push
mov
mov
aam
dec
js
cmp
int
mov
push
test
repnz
scas
sbb
lea
in
cmp
ss
pop
nop
jmp
ret
scas
fdivrl
arpl
inc
cwtl
stos
lret
fisubl
jo
dec
sar
pop
shr
data16
sbb
cmpsb
jnp
insl
pop
lret
mov
mov
pusha
sbb
js
cmp
lret
sub
out
cmpl
divb
mov
cmp
push
lods
outsb
mov
sbb
sbb
or
jle
adc
loop
xor
loopne
xor
jg
popa
int3
dec
or
shlb
ss
dec
fldt
xchg
fiadds
in
les
cmpsb
mov
dec
scas
pop
add
and
mov
pop
push
dec
popa
movsl
jne
pop
mov
fldt
sub
fisubrs
lods
cwtl
aam
mov
inc
inc
dec
int3
stos
loop
push
sub
and
lds
inc
inc
cld
push
jmp
sahf
or
imul
lret
lret
sbb
xchg
xchg
cmp
or
lahf
sbb
add
iret
push
lcall
rclb
mov
or
mov
xor
mov
gs
mov
std
sbb
add
cmp
pop
xor
pushf
in
lds
jp
inc
fneni(8087
sbb
lock
fs
mov
int
mov
lret
jp
loop
inc
mov
aam
adc
out
sub
iret
xchg
xchg
jp
dec
jl
cmp
andb
outsl
pop
data16
sahf
add
sub
and
sarb
lret
aad
cmp
inc
loop
jle
outsl
mov
hlt
cltd
sahf
push
push
mov
int
idivb
mov
scas
mov
cmp
iret
js
int
cltd
jb
aam
stc
fsub
mov
scas
cli
sbb
iret
sbb
jl
aad
cmp
cmp
fwait
cwtl
adc
or
ret
hlt
sbb
jb
sarb
popa
movsb
push
mov
fsubrl
xchg
mov
movsl
mov
and
aad
pop
xor
aad
dec
hlt
test
sbb
mov
dec
inc
jo
subb
cmpsl
mov
add
loope
adc
cmc
fsts
dec
inc
lds
imul
addb
mov
add
or
sbb
mov
jmp
mov
dec
enter
dec
add
orl
add
js
test
mov
stos
jns
cwtl
out
lock
dec
mov
addr16
movsb
stc
cmp
xchg
jmp
aas
add
mov
pop
imul
xchg
inc
je
mov
pop
mov
cmp
fnstsw
outsl
insb
lret
xor
pop
mov
xor
sbb
mov
push
pop
jl
movsl
cmp
xor
fldenv
and
jge
dec
repz
xlat
vpor
cmpsl
enter
dec
push
movsl
xchg
inc
pop
or
dec
ffree
fmuls
add
or
sbb
in
or
scas
xchg
out
sub
cmp
repz
xor
mov
push
ljmp
iret
insb
push
push
add
pop
xchg
fdivl
stos
dec
jl
out
cwtl
pop
dec
in
push
mov
mov
pop
rcll
add
shr
push
mov
repnz
sbb
adc
fcmovbe
add
dec
sbb
das
xchg
push
push
lcall
movsb
pop
mov
push
movsb
adc
stos
adc
cltd
or
ficomps
int
push
xchg
hlt
xchg
lds
int
sahf
aaa
inc
push
pop
aas
je
bound
push
cld
ljmp
push
push
and
jno
sub
pop
imulb
fmulp
stc
movsb
inc
and
test
pusha
jae
arpl
mov
scas
mov
ja
leave
fadds
inc
inc
inc
dec
mov
push
fldcw
cmpsb
je
popl
jle
inc
lods
xchg
test
jg
and
int3
jmp
pop
stc
adc
insb
lret
jle
mov
adc
shll
mov
xor
mov
pop
cli
pop
sahf
jp
xor
stc
stos
mov
out
pop
icebp
inc
mov
sub
cmp
leave
or
sub
push
mov
test
or
addr16
cmp
or
push
xchg
dec
mov
sub
aas
push
dec
dec
aad
mov
xchg
pop
adcl
sub
not
jbe
pop
fadds
xchg
inc
int
into
sbb
xchg
aad
pop
mov
aad
and
sub
mov
pop
or
inc
cmp
cltd
test
mov
in
lcall
dec
xchg
xchg
xor
or
icebp
push
roll
rol
sub
sbb
fsubs
pop
daa
clc
cmp
cmp
in
cmp
sbb
xchg
push
enter
test
rcll
lea
bound
cmp
cwtl
cmp
and
adc
mov
cwtl
mov
cmp
xchg
nop
loopne
mov
adc
mov
mov
and
stos
lret
sub
inc
rclb
in
or
sub
lret
and
mov
mov
mov
dec
into
outsl
mov
pushf
insl
mov
xor
and
addl
inc
clc
adc
or
loop
jl,pn
test
fsub
mov
shll
pop
push
pop
lock
lret
add
ljmp
stc
adc
fwait
xchg
int3
mov
xor
push
or
das
movsb
sub
pop
cmp
cli
sbb
xor
pusha
cmp
loop
mov
mov
xor
fimull
mov
pop
xchg
pop
mulb
int
and
push
mov
jne
aas
push
mov
ficomps
or
sbb
dec
xchg
dec
loopne
sbbl
cwtl
scas
add
xsha256
cmpsb
mov
xchg
bound
std
rclb
data16
inc
inc
cmp
aad
aam
xchg
xor
imul
jp
xchg
sub
sub
les
push
add
inc
xor
mov
mov
or
push
push
adc
popa
mov
pop
adc
outsb
movsb
pop
dec
dec
pop
add
push
sub
scas
mov
cwtl
clc
pusha
pusha
fists
and
js
inc
xlat
cli
mov
movsb
cmp
mov
loopne
push
ja
push
xor
popf
outsl
insl
mov
xchg
mov
cmpsb
ret
sbb
gs
in
cmp
add
sarl
dec
push
out
jb
fwait
push
push
les
add
mov
jb
pop
rorb
into
loop
xchg
push
sub
mov
push
jp
gs
sub
xchg
inc
lahf
cmp
imul
insl
ret
mov
int
sahf
inc
lock
sbbb
mov
iret
cmp
mov
stc
mov
pushf
xchg
xorb
pop
data16
cltd
repz
adc
icebp
into
fs
insl
shl
push
call
dec
rcrb
mov
mov
inc
std
xchg
fidivl
push
popa
sub
sbb
and
hlt
iret
fstpt
jecxz
xchg
xchg
loopne
mov
add
rcll
ret
outsl
mov
shrl
push
pop
dec
loopne
push
adc
pop
dec
sub
fadds
cs
cmpsl
xchg
mov
cld
mov
mov
or
loopne
fisubl
or
adc
data16
cmp
shrl
es
mov
and
and
daa
ja
push
mov
fwait
cmp
lods
shlb
inc
add
das
insl
std
test
cmp
mov
and
mov
dec
sarb
push
sarb
loop
pop
fisubrl
test
sbb
add
ja
jb
sbb
or
jb,pn
test
cmp
adc
das
jnp
int3
stos
sub
fidivrs
je
dec
mov
leave
addr16
and
inc
lods
lock
mov
divl
adc
stc
mov
xchg
push
sti
mov
inc
push
insb
jbe
stos
fistl
divl
stos
push
jns
cmp
fisubrl
mov
aad
mov
movsl
sub
cmp
clc
rorb
mov
and
aam
mov
fwait
mov
inc
pop
sbb
test
out
xor
cmc
aad
mov
scas
push
push
scas
enter
jecxz
or
adc
std
push
cld
jge
sub
imul
jmp
pop
mov
cs
cli
rcrb
fisttps
mov
and
push
rcr
mov
loope
jno
mov
leave
add
movsl
movsb
imul
repz
xor
and
pop
data16
xor
mov
shlb
int
ror
xor
mov
lods
lods
loope
mov
inc
and
fisubl
out
ss
ja
popa
repnz
or
mov
outsb
mov
jns
cmp
dec
aad
ljmp
lods
xor
sub
cli
jg
enter
push
lods
mov
shl
sbb
imul
jl
push
xchg
shl
add
scas
push
mov
scas
adc
adc
xor
fcoms
aaa
addr16
pop
in
adc
dec
sbb
popf
lods
lret
sbb
lock
sub
xor
fsubp
into
push
push
mov
cli
pusha
popf
ljmp
ret
xor
lcall
in
jle
fldz
mov
xor
cltd
sbb
fmuls
pop
dec
sbb
adc
rcrb
shlb
xor
scas
dec
test
mov
push
outsb
sub
mov
mov
gs
test
push
dec
pop
fadds
xorb
xor
sahf
imul
movsl
cmp
addb
mov
stc
xchg
cmp
adc
subl
mov
addr16
int3
out
enter
cmp
into
cs
jnp
add
pop
and
in
ss
test
and
xchg
nop
dec
nop
jg
iret
enter
or
nop
imul
and
bound
testb
aas
pushf
insb
movsb
lock
stos
cltd
dec
pop
pop
popa
int3
mov
pop
pop
and
sub
and
cmp
pop
and
add
fimull
mov
jae
aam
mov
popf
sub
rorb
nop
jmp
into
faddl
lock
or
or
cmp
shlb
xchg
jp
enter
jge
jmp
int
stos
push
faddl
sub
sbb
mov
xchg
shll
mov
inc
xor
jb
pop
cmp
and
mov
push
loopne
daa
xchg
aad
outsb
stos
es
ljmp
cltd
jg
mov
mov
andb
inc
insl
jmp
in
mov
cmp
dec
addr16
xchg
sub
adc
cmp
dec
mov
jnp
adc
push
in
pop
push
mov
repnz
cmp
xor
sahf
xchg
ret
jns
insl
and
loopne
aaa
movsl
pop
mov
jg
xor
out
or
mov
fdivl
pop
in
push
cld
mov
popf
xor
push
add
int3
gs
sahf
mov
xor
push
jb
dec
and
iret
call
sbb
mov
cs
mov
jbe
lret
subl
cmp
test
mov
sub
inc
push
rorb
push
push
mov
icebp
mov
lret
mov
lock
adc
ss
sarl
adc
into
sub
and
mov
xchg
aam
loop
push
cmpsl
repz
dec
push
jb
sbb
adc
std
outsl
aas
or
cwtl
mov
js
gs
and
ds
push
int3
add
xchg
fwait
std
add
std
loopne
cmp
fcoml
lret
push
hlt
inc
sar
cmpsl
nop
mov
stos
pop
jmp
mov
popf
cs
lcall
mov
push
lcall
test
repz
mov
rcr
stc
jb
jo
sub
cld
mov
nop
stos
cs
mov
movsb
mov
imul
mov
scas
push
loope
lods
js
aas
in
sbb
addr16
pop
rolb
rolb
and
push
xchg
out
out
and
dec
pop
pop
sbb
mov
jns
sti
das
orl
sub
outsl
sbb
stos
insl
push
mov
mov
decb
xlat
lods
xchg
and
sbb
stc
sti
pusha
das
pop
pop
inc
cld
ret
sub
cs
and
sub
pop
pushf
inc
in
adc
ret
into
insb
and
xchg
mov
add
stc
push
adc
add
nop
sbb
mov
or
dec
es
push
mov
in
mov
and
sub
into
sub
leave
insl
js
lahf
into
cmp
lret
ds
in
xchg
out
frstor
mov
aam
sub
popf
xor
xor
sbb
push
inc
ret
mov
flds
pop
das
xchg
or
popa
outsb
mov
mov
clc
xchg
hlt
mov
mov
and
lahf
jg
sub
add
jo
popa
inc
fwait
xchg
frstor
enter
mov
fsubrp
mov
mov
movsb
clc
inc
iret
pop
or
cmp
pop
sbb
daa
push
mov
mov
mov
push
stc
popa
dec
dec
rep
fisubrl
jecxz
repz
shr
mov
cmp
imul
push
pop
aad
mov
dec
rorb
lea
jno
xchg
sbb
das
dec
push
push
stc
dec
pop
xchg
mov
in
popf
and
clc
enter
fdivrl
cmpsb
out
jno
outsb
pop
in
stos
adc
inc
sarl
lahf
jmp
lds
jb
pop
cmp
cmp
inc
test
xchg
lods
pop
das
or
mov
cli
mov
xchg
pop
test
push
adc
mov
xor
fisubs
xchg
mov
dec
xchg
push
jmp
loope
sbb
clc
sub
jo
mov
dec
inc
scas
pop
jle
fwait
cmp
push
sahf
out
and
clc
mov
pop
xor
sbb
dec
rcll
loope
imul
dec
sti
shrb
ret
push
data16
jge
jecxz
push
mov
mov
jae
xchg
cmp
lea
pop
sahf
push
das
pushf
xchg
mov
test
inc
loopne
es
xchg
mov
not
shrl
fisttpl
adc
mov
fcmovnb
cld
adc
mov
adc
movsb
rcl
cmp
pop
lea
pushfw
rorl
cmp
inc
mov
lds
in
inc
ds
dec
and
movzwl
mov
or
add
push
mov
iret
punpckhwd
cmpsb
repz
das
fisubrl
insb
iret
popa
loope
adcb
sbb
mov
add
inc
inc
adc
les
pop
cmp
add
sub
and
xchg
insb
test
mov
xchg
xor
pop
fcoms
push
inc
shrl
inc
lret
cmp
arpl
dec
or
daa
xor
sbb
in
insb
xchg
rclb
cmc
repnz
cmp
fildl
aaa
les
push
add
fidivrs
test
out
jae
push
mov
mov
inc
jmp
icebp
mov
cwtl
fsubl
sbb
xchg
add
popf
jge
mov
scas
push
inc
in
pusha
fiadds
xor
cmp
pop
dec
pop
add
jo
mov
ret
cmp
dec
inc
out
iret
push
mov
shll
sub
push
negl
sbb
shl
and
inc
push
pushf
je
pop
outsl
push
xchg
or
mov
sti
xchg
sbbl
push
jp
or
jne
lods
and
sarb
sub
push
push
inc
les
mov
scas
or
adc
push
adc
xor
or
push
aas
js
xchg
mov
lods
adc
or
cmp
mov
lock
mov
push
mov
and
add
shll
into
arpl
pusha
mov
in
sbb
mov
fwait
mov
lret
jmp
push
les
addr16
pop
loop
inc
daa
data16
sub
push
sub
mov
ljmp
out
fs
into
in
mov
mov
cltd
xchg
cs
pop
xchg
cmp
jo
stos
sbb
ljmp
xchg
imul
xlat
or
rcrb
mov
and
dec
bound
cli
lock
pop
pop
sbb
xor
xchg
int3
sbb
jne
jmp
dec
mov
inc
in
mov
lds
icebp
sub
test
pop
imul
sub
lods
add
pusha
dec
daa
lcall
mov
sub
hlt
inc
ret
jno
and
cld
movq
arpl
mov
shll
jnp
dec
push
sti
mov
xchg
cmp
aad
div
mov
rolb
movsb
add
popf
xchg
sub
orb
adc
mov
xor
sarb
loope
insb
daa
lea
in
xor
jns
mov
ss
mov
inc
jmp
notl
push
sahf
dec
stos
mov
push
sub
xchg
movsb
test
xlat
pop
add
pop
push
aas
sbb
lcall
or
icebp
shrb
lods
mov
btc
aas
xor
loopne
cltd
fsubl
call
test
jge
inc
nop
cmp
jns
ds
jno
dec
or
sbb
and
mov
cmpl
mov
dec
cmpsl
pushf
in
and
mov
dec
mov
movsb
xor
xchg
outsb
fistl
jns
jo
arpl
scas
xchg
mov
sti
jne
es
and
and
push
mov
out
pop
icebp
mov
rcl
cmp
mov
movsb
cbtw
outsl
cmp
jbe
add
cmp
push
mov
xchg
das
or
fisubrs
push
andl
jl
icebp
xor
xor
enter
call
xchg
stc
aas
push
xchg
imul
je
gs
xchg
imul
iret
lods
lock
cmp
sti
mov
sub
fcoms
sbb
jp
fwait
into
dec
and
icebp
push
mov
xor
into
adc
xchg
lret
jl
pop
call
cmp
outsb
cli
sbb
out
incl
jo
nop
mov
sahf
dec
inc
test
sub
mov
movsb
sti
cmpsb
adc
mov
inc
sbb
pop
sub
mov
pusha
or
dec
mov
lds
and
mov
mov
testb
das
xsha1
cmpsb
into
shr
or
int
cmp
inc
sub
adc
add
es
nop
jmp
xlat
bound
lcall
xlat
sub
in
dec
fisubrl
lea
and
imulb
mov
jo
int3
cld
sbb
dec
pop
push
test
push
sub
call
push
and
sbb
mov
fadd
lds
mov
fistl
and
sbb
fisubs
or
filds
stc
mov
outsl
sub
jns
jae
adc
in
xlat
daa
test
jp
lock
add
xlat
aaa
mov
fistl
imul
push
sbb
outsb
pop
jae
fwait
push
sti
mov
rclb
out
ret
mov
loopne
movsb
mov
dec
mov
push
std
cltd
sbb
pop
jns
mov
mov
adc
add
mov
push
pop
dec
mov
cld
mov
inc
call
cmp
xchg
push
jp
and
push
mulb
ret
je
pop
cwtl
sub
fyl2x
test
in
test
adc
aad
inc
jg
sub
dec
loope
inc
push
xchg
outsb
in
add
xchg
mov
ss
daa
icebp
cmpsl
adc
outsl
jg
imul
lret
rorl
mov
or
fs
xor
or
popa
or
sub
out
out
popf
mov
jp
lea
mov
shlb
sub
xor
inc
push
addr16
push
lock
hlt
mov
pop
sub
inc
sub
inc
cltd
jmp
mov
or
fadds
pop
aaa
rcrb
icebp
dec
cmp
jge
iret
mov
inc
inc
gs
popa
imul
cli
aad
fidivrs
mov
out
ss
loope
push
icebp
cmp
mov
and
enter
stc
cli
mov
leave
xchg
loopne
add
jge
lret
aaa
or
xchg
out
subb
sub
sub
sbb
stc
cs
arpl
xchg
mov
js
hlt
mov
mov
cmpsl
pop
inc
add
addr16
or
popf
pop
xor
int
jne
xor
inc
imul
jns
xor
mov
icebp
fdivrs
dec
inc
frstor
push
test
add
push
fwait
std
mov
mov
mov
int3
jbe,pt
daa
sub
xor
fildl
insb
dec
aam
pop
lds
cld
dec
and
int
sbb
push
mov
and
pop
popf
cmc
dec
js
lret
pop
sbbl
push
lods
inc
popa
scas
call
fsubr
and
aam
cmp
rol
mov
xor
sbb
push
push
pop
xchg
arpl
sub
mov
dec
mov
in
hlt
mov
nop
add
adc
mov
cmp
in
stos
jge
jp
pushf
mov
xchg
jns
gs
in
loope
inc
lea
push
ret
and
jns
push
shr
sub
lret
je
dec
add
adc
js
iret
and
xor
shrb
nop
sbb
out
sbb
xorb
xor
scas
mov
jle
adc
in
cltd
mov
push
xchg
inc
inc
cmp
adc
lahf
pop
adc
test
test
push
adc
dec
adc
das
jb
lret
loop
sti
fiaddl
mov
lret
call
out
mov
sbb
insl
mov
dec
sbb
and
cmp
orl
sbb
test
jg
sbb
add
dec
clc
push
ljmp
not
addb
adc
inc
pop
xor
and
pop
and
mov
in
cmpsl
mov
popa
xor
je
add
lea
cltd
mov
inc
dec
nop
xchg
cmpsl
xchg
push
mov
out
pop
shlb
mov
pop
lcall
sbb
dec
mov
push
mov
push
pop
mov
in
cld
scas
add
test
cmpsl
mov
mov
sbbl
jne
ljmp
or
xchg
stos
cmpsl
jns
in
jmp
faddp
push
repnz
mov
xchg
sub
mov
jns
mov
out
jg
inc
push
leave
scas
clc
adcb
mov
adcl
mov
push
push
sbb
jb
sar
lret
push
dec
sbb
or
xchg
push
push
jb
cmc
mov
add
cmp
and
test
repnz
push
imul
shll
cmp
data16
or
cmpsb
fld
mov
push
nop
fldl
mov
inc
data16
inc
jbe
and
jnp
and
mov
fnstsw
mov
sbb
out
mov
fistpll
push
mov
sub
sarl
psrld
pop
pop
inc
add
insl
sbb
fadds
dec
stos
nop
lods
aad
lahf
xchg
jbe
popf
cmp
mov
in
cmp
xor
jge
decl
mov
mov
xchg
jns
and
or
mov
cli
sub
jle
rorb
adc
call
push
push
pop
stc
shlb
mov
dec
mov
icebp
or
in
daa
loope
cmc
cmp
push
fs
hlt
fldt
pop
mov
dec
adc
xor
adc
jnp
jo
les
mov
push
sbb
dec
dec
loop
push
jns
jg
inc
test
xchg
int3
jns
lret
cs
std
lret
popf
or
insb
inc
mov
fdivp
insb
push
addb
andl
pop
in
out
xor
cltd
push
mov
lock
add
ljmp
pushf
popa
repnz
xor
test
fstpt
mov
dec
int
adc
jl
repz
loope
pusha
outsb
cmp
pushf
in
add
push
in
push
out
jb
sub
cmpsb
add
popa
aam
mov
pushf
lahf
xor
jne
xor
jb
mov
cmpsb
int3
jbe
pop
mov
test
psubusb
add
cmp
pushw
mov
adc
jnp
mov
ret
jbe
inc
sahf
mov
test
lahf
or
pop
lret
sbb
add
pop
jmp
jecxz
sub
sub
imul
push
mov
pop
sub
xchg
loopne
lea
arpl
add
xchg
add
dec
cmp
add
jp
pop
jbe
daa
mov
inc
sub
lea
push
jbe
xorl
loope
mov
cmp
adc
or
cld
jo
and
sbb
cs
fmul
movsb
je
xchg
enter
daa
scas
xlat
adc
aam
mov
mov
daa
dec
insl
mov
scas
inc
das
jae
mov
outsl
adc
inc
inc
nop
push
cmc
and
sbb
mov
sbb
cmp
jo
push
fs
sbb
test
in
fwait
jnp
addb
rorl
adc
jmp
mov
fdivrl
repz
cmc
pop
stos
xor
setle
test
pop
cltd
fsts
mov
inc
add
or
dec
push
cmpsl
lret
sar
mov
in
ret
mov
outsl
mov
fisubl
adc
inc
cmc
pop
push
in
in
movsb
sbb
cmpsb
and
adc
pop
in
xchg
mov
out
dec
xchg
and
movsb
insb
inc
ja
xor
pusha
jg
lcall
mov
shrb
mov
jnp
adc
cmp
inc
mov
out
icebp
out
mov
lods
bound
sub
add
or
test
fsubrp
pop
inc
lods
and
mov
lret
das
xor
and
push
xchg
lods
sub
sub
sbb
push
or
movsl
fnstcw
mov
inc
shrb
rorb
cltd
mov
out
gs
jnp
inc
ljmp
hlt
and
repz
sbb
pop
xchg
push
test
in
and
jbe
shll
rolb
aad
push
in
fs
push
loop
pop
shrb
pop
jecxz
dec
insb
pop
add
mov
or
push
jp
mov
push
dec
enter
ljmp
call
xchg
in
sbbl
sub
out
and
dec
xchg
dec
xchg
out
aam
test
pop
or
pop
dec
mov
aad
aad
test
lods
cmp
lcall
add
jne
and
lahf
fimull
scas
push
push
xor
bound
outsl
cmp
add
leave
outsl
dec
repnz
addr16
sub
jecxz
mov
add
data16
xor
push
and
mov
cld
repnz
cmc
sahf
mov
inc
into
xor
xor
push
fisubl
push
mov
mov
jno
jno
call
adc
je
adc
inc
mov
outsl
stc
lods
fdivrs
fnstenv
movsl
xor
daa
push
pop
adc
out
cmp
push
cmpsl
jno
dec
add
imul
jp
dec
and
sbb
sub
shl
mov
outsb
sar
imul
mov
push
jo
lods
bound
xor
sub
aad
inc
stos
sarb
in
test
lret
iret
dec
jl
in
or
fstpt
insl
mov
xchg
lock
popl
cwtl
adc
or
lea
xchg
jmp
rcll
and
jp
ret
aaa
sahf
cmpb
push
push
imul
add
dec
jmp
xor
lret
cwtl
or
mov
sbb
sub
fiaddl
icebp
jl
inc
mov
push
inc
add
mov
mov
cmp
or
xorb
mov
sub
sub
mov
add
jmp
sbb
and
pop
sbb
jge
mov
xchg
call
add
lahf
cmc
adc
clc
sti
add
xor
test
sbb
jo
jle
lret
or
jnp
xchg
subb
sub
adc
popf
dec
cltd
imul
jae
rolb
cmp
or
adc
out
xchg
jnp
or
adc
js
aam
xchg
aas
cli
push
add
addb
std
and
mov
sub
int
loopne
sbb
jbe
outsl
pop
adc
cwtl
and
or
push
scas
sbb
xchg
lret
mov
js
rcll
mov
add
jo
xor
outsb
mov
sbb
rcrb
jne
ret
ja
jge
imul
flds
cli
test
enter
sbb
cmpsl
addr16
inc
scas
shll
into
aaa
loop
out
les
xor
lds
mov
mov
scas
loopne
addb
push
out
fwait
dec
sub
xchg
jb
and
stos
lods
add
mov
imull
mov
sub
and
pop
cmp
jle
add
and
xor
repnz
pop
notb
mov
sub
daa
sub
xor
mov
add
ss
xor
bound
adc
add
xor
fbld
add
and
mov
es
test
or
addr16
cmp
cld
mov
push
repz
dec
test
push
lods
and
scas
pop
pusha
cmpsb
jmp
cwtl
stos
xor
ja
insb
leave
ja
scas
jo
mov
mov
push
int3
shll
jb
fadds
sar
xchg
stos
into
mov
iret
mov
xor
bound
fnstcw
mov
mov
jg
jmp
test
inc
les
pop
pop
testb
icebp
mov
lret
call
addr16
ljmp
inc
sub
into
xchg
iret
pop
lods
or
xor
jno
sub
push
xor
aam
sbb
inc
cmp
and
pop
add
daa
clc
adc
shll
sti
pop
or
mov
xor
sbb
pop
mov
dec
jl
pop
sbb
scas
popf
push
mov
sti
sub
lea
das
xor
lahf
cmp
filds
shll
jnp
fisttpl
xchg
pop
rcrb
out
scas
sub
pop
add
adc
into
ret
popw
mov
sub
stos
lret
test
cwtl
stos
sub
icebp
aad
sbb
ret
inc
mov
add
or
sub
cltd
dec
xchg
push
movsl
sbb
cmp
push
xor
int
dec
leave
xorl
sbb
loop
mov
or
ds
cmpsl
out
daa
shlw
lahf
inc
mov
adc
inc
popf
cmc
pop
pusha
pop
or
cmpb
add
inc
push
sub
or
jl
shrl
sub
andb
outsb
or
notb
sub
add
ja
jmp
stos
push
adc
sbb
popa
sbb
mov
icebp
dec
repnz
jne
inc
xchg
cwtl
dec
outsl
fdivp
sub
jle
bound
xchg
jmp
push
test
cmp
cli
lods
xor
ret
and
cmp
pop
ljmp
jg
outsb
cmp
mov
cmpsb
rolb
shll
pusha
xchg
loope
cmp
mov
sbb
aad
testb
popf
sub
and
push
std
outsb
pushf
leave
outsl
add
dec
mov
arpl
adc
fcmovu
into
outsl
push
xlat
pop
push
or
out
lock
and
jbe
inc
les
sti
add
pop
cmp
cs
divb
xor
dec
iret
in
jg
fs
cmp
jmp
loop
pop
jg
je
test
pop
jb
leave
inc
sub
movsl
adc
shl
sub
inc
into
or
xchg
add
lcall
aaa
push
lret
loopne
addb
mov
test
aam
or
test
mov
inc
call
lret
lock
sbb
imul
add
add
lods
aam
out
aad
push
add
daa
mov
adc
je
jl
mov
mov
pop
push
or
in
rclb
fisttps
out
pop
cmc
popf
xchg
xchg
nop
mov
scas
iret
cld
add
roll
add
sbb
testb
fs
lea
sbb
out
cmp
push
and
inc
xor
ljmp
aam
dec
loopne
ljmp
pop
mov
xchg
call
dec
sti
xor
aaa
ja
sub
lods
cli
out
test
xchg
jb
insb
jge
cs
sbb
adc
test
stos
enter
cmp
outsb
shrb
lods
in
xor
pusha
shl
sbb
adc
add
test
push
inc
popf
mov
sub
ljmp
xchg
push
and
adc
div
aaa
adc
mov
cmp
pusha
imul
sub
push
cmp
rclb
mov
adc
stos
sub
out
data16
pop
xchg
and
lods
loope
ds
enter
mov
pushf
mov
lea
sub
bound
pop
inc
or
inc
cmp
mov
test
xchg
add
mov
outsb
out
je
xchg
pusha
cmp
ret
jo
leave
js
adc
mov
out
xor
pushf
mov
adc
push
imul
jl
lods
xchg
mov
inc
insl
inc
popf
push
into
or
pusha
pop
mov
or
popa
ret
sub
jbe
imul
mov
add
xlat
popa
mov
push
into
mov
lock
aam
ljmp
mov
fisttpll
hlt
mov
cmp
repz
xchg
out
dec
mov
sbb
mov
in
shll
int3
dec
mov
add
cmp
test
pop
adc
push
pop
outsl
xchg
and
or
test
lahf
add
sbb
mov
xchg
sahf
mov
xchg
jmp
hlt
out
addb
pop
xchg
mov
iret
jecxz
xchg
lods
jbe
ret
aad
dec
sub
bswap
adc
ja
pop
sbb
add
js
and
std
mov
jmp
outsl
mov
mov
mov
mov
mov
lock
les
and
adc
in
imul
sub
jns
add
sbb
jl
fmull
sbb
mov
and
jg
movsb
sub
jb
sub
mov
mov
lret
lods
stos
xor
inc
mul
or
xchg
test
mov
in
jae
jp
daa
xchg
clc
cld
xchg
pop
pop
mov
cmp
dec
dec
sub
jo
ror
mov
sbb
xor
jns
push
cltd
push
icebp
add
mov
popf
sub
mov
push
fisttpll
notl
ret
cwtl
add
in
lea
in
int
cmp
sub
sbb
jl,pt
dec
and
repz
lods
arpl
adc
inc
lcall
ret
shrb
dec
inc
fcomps
dec
add
cwtl
out
jne
sbb
repz
jne
mov
aaa
fisttpll
jnp
mov
adc
mov
repnz
lods
push
shlb
mov
sbb
pop
out
aad
jae
shl
out
test
cmp
inc
addr16
push
xchg
jg
jecxz
or
aad
xchg
xor
jbe
push
outsb
jl
ja
dec
test
push
and
mov
mov
pop
sub
xchg
inc
inc
popl
out
into
lret
sbb
mov
dec
or
xchg
push
push
int
cmp
in
xchg
pop
sub
nop
jns
cmpb
roll
mov
rcr
and
pop
jl
mov
xor
repz
xor
inc
adc
push
mov
pop
cmp
stos
sbb
and
cmpsl
sbb
mov
mov
jmp
xor
sahf
cmp
adc
sub
dec
pop
adc
mov
or
pushf
cmp
add
push
repnz
js
mov
fs
sbbb
jl
cmp
pushf
shlb
push
clc
icebp
rcrl
mov
aad
mov
cmp
test
push
push
xor
popf
dec
add
jmp
xchg
rcrb
stc
imul
or
pusha
jge
jo
lods
int3
js
cmp
jp
int3
inc
in
repz
mov
movsb
stos
loope
push
dec
fbld
mov
dec
cltd
shll
inc
mov
popf
lahf
push
inc
out
mulb
sub
jl
lahf
inc
add
sbbl
xchg
inc
ljmp
add
jns
jne
mov
sub
jae
cmp
pop
into
cmp
aam
bound
mov
and
inc
xorl
xchg
ficoml
jnp
and
mov
adc
andb
out
sti
lods
mov
aas
sbb
cmpsb
xlat
or
rorl
mov
xor
dec
ja
cwtl
dec
add
or
xchg
lret
loop
dec
cmp
movsb
lock
mov
mov
clc
xor
insb
imul
mov
dec
in
jae
rcr
divl
imul
mov
mov
jae
aaa
dec
negb
shlb
outsl
inc
imul
xor
ss
xchg
push
push
shr
xchg
lock
sub
xchg
fdivs
xchg
lods
sub
cmp
clc
aad
jo
clc
jge
gs
pop
icebp
daa
insl
mov
in
int
and
addb
andb
fsubrl
stc
mov
cld
scas
lcall
cltd
sub
int
mov
xor
test
and
fs
ja
xchg
in
cmp
mov
mov
jne
sbb
xchg
sub
cmc
fwait
movsl
popf
inc
xor
cld
fnsave
pop
jecxz
xchg
dec
xchg
adc
aaa
xor
divl
movd
push
dec
lcall
fstl
lahf
hlt
rcll
cmpsb
inc
adc
shl
cmpsl
lret
sub
fisttpl
jae
mov
and
outsl
dec
cltd
adc
sub
mov
daa
mov
cmc
pop
xchg
aad
aam
mov
push
pop
pop
pop
mov
mov
sub
into
mov
push
pop
popa
jae
js
pop
add
dec
or
mov
rcll
sbb
int
xor
cmpsb
orb
cmpsb
clc
xlat
inc
in
xchg
ss
fsqrt
in
xor
and
xchg
adc
aaa
inc
mov
test
jno
repnz
adc
lahf
jecxz
xor
andb
out
int
jbe
jmp
jae
adc
add
or
ljmp
jbe
xor
mov
int3
ja
lret
sbb
sub
test
adcb
ja
aad
xchg
pop
cmp
in
loopne
adcl
mov
nop
sti
dec
xor
and
add
xor
mov
jbe
cmc
mov
jbe
jle
or
decb
frstor
mov
aad
jle
cwtl
ds
inc
mov
pusha
dec
jle
adc
cli
scas
hlt
push
mov
aaa
jo
adc
jmp
push
mov
inc
lahf
sbb
loopne
inc
lcall
inc
pop
lods
insb
xor
pop
adc
rorb
push
test
mov
jg
push
pop
xchg
mov
and
mov
mov
fimuls
pop
cmc
jns
dec
mov
loope
fstl
dec
adc
daa
mov
mov
outsl
jns
sub
or
jo
sub
ss
scas
rcrl
inc
mov
mov
jo
imul
sbb
pop
decb
push
cmp
add
inc
jle
or
in
mov
jl
les
lcall
fs
jle
mov
jge
cmpsl
xor
idivl
jnp
jp
mov
mov
fsubrl
push
stc
jbe
and
hlt
loopne
sti
push
sbb
inc
mov
fwait
js
addr16
mov
sbb
or
xor
jl
notb
adc
aaa
pop
mov
imul
and
dec
outsl
lods
pop
stos
sbb
rcl
scas
or
push
add
jnp
sub
testl
loopne
sbb
or
subb
hlt
call
stc
add
dec
ret
fdiv
lret
push
mov
sbb
mov
adc
fidivrs
popf
or
repz
jb
lods
jg
scas
xchg
sbb
inc
movsl
inc
adc
jo
lds
inc
mov
leave
adc
lret
jge
out
adc
sbb
xor
mov
cld
jmp
xor
or
icebp
dec
dec
icebp
pop
pushl
push
iret
mov
jmp
cld
ss
push
dec
pushw
add
mov
pop
mov
fsubrs
cmc
out
push
stos
mov
xchg
das
jnp
and
ljmp
xchg
xchg
jo
jb
jge
xor
mov
loope
pop
aas
call
rorb
cmp
orb
das
jnp
mov
mov
fstps
sahf
sub
aad
adc
sub
sub
xchg
mov
iret
adc
pop
cli
lods
cmp
push
pop
std
mov
gs
pop
pop
jecxz
arpl
jo
ret
fcomi
fs
jbe
sbb
add
rorb
movsl
ficoml
cmp
and
ds
lods
or
push
cmp
lcall
sbb
dec
jl
jmp
xchg
ljmp
iret
push
xchg
xchg
push
mov
mov
addr16
sbb
mov
mov
pusha
xchg
mov
jecxz
sarl
mul
jle
shll
pop
pop
xchg
adc
andb
sub
mov
mov
ja
mov
in
rorl
sbb
cmp
out
pusha
lods
sbbl
mov
js
popf
testb
push
sbb
or
and
stc
sub
push
ja
inc
das
outsb
lcall
add
cmp
iret
sub
iret
inc
mov
ret
std
jnp
in
fwait
xor
ret
insl
aad
sub
je
push
pop
inc
mov
jp
scas
pop
mov
and
jnp
dec
adc
sbb
jnp
sbbb
cmp
frstor
xlat
mov
fidivl
mov
fwait
stos
imul
sti
mov
xor
out
pusha
ds
out
mov
adc
jmp
sti
orl
std
ja
movsl
nop
push
pop
movsl
jl
in
jle
jge
mov
jecxz
and
sbb
xor
jl
inc
mov
pop
in
mov
pop
lahf
jno
cs
cmp
mov
sahf
mov
and
jno
imul
lcall
movsb
adc
cltd
int3
adc
cs
out
mov
jge
cs
loope
or
leave
fnstcw
addb
fstl
arpl
stos
mov
and
xchg
pop
cmp
into
and
mov
mov
sub
mov
imul
dec
inc
ss
jb
mov
mov
hlt
xchg
ljmp
fcmovbe
fidivrs
cmpsb
mov
daa
idivl
cli
pop
inc
or
push
and
pop
inc
sbb
sbb
adc
xchg
dec
dec
add
ds
adc
movsb
dec
or
sub
test
mov
or
gs
out
mov
outsb
xor
les
cmp
xor
in
cmpsl
stos
call
inc
imul
divb
sbb
mov
dec
sub
out
lds
push
js
imul
ror
aaa
cmpsl
cmp
fsub
mov
inc
imul
notb
int
lock
test
xchg
jp
pop
mov
jo
jmp
repz
insl
push
sub
dec
int
iret
inc
mov
shrb
xchg
mov
hlt
cli
dec
hlt
xlat
push
lahf
mov
and
adc
es
sub
ljmp
clc
pop
cwtl
dec
pop
ret
dec
dec
push
ror
aaa
xchg
subb
scas
fnsave
ror
arpl
cmpl
loop
xor
and
loopne
push
mov
fidivrl
adc
aaa
inc
cltd
xchg
or
mov
dec
cmp
cmpsl
outsb
outsl
cmp
pop
idivb
jo
dec
push
jmp
jg
sub
xor
cli
sahf
jl,pt
scas
stos
jl
pop
jmp
in
fisubrl
push
sub
add
mov
ss
jp
and
fwait
smsw
fsubr
jmp
loope
jmp
data16
icebp
adcb
xor
sub
xchg
xchg
lods
or
in
cmp
cs
addr16
in
bound
pop
pop
out
mov
cmp
adc
data16
mov
jecxz
xchg
sub
mov
subl
push
jmp
mov
aaa
mov
fsts
inc
testl
bound
or
pushf
push
xor
addr16
ss
movsb
cltd
mov
notl
scas
cli
loopne
cs
inc
pop
xlat
inc
je
xchg
ficoms
mov
adc
cmpsb
loop
mov
lcall
push
mov
sbb
xchg
testl
ja
aad
rclb
xor
cmpsl
cmp
stos
adc
outsl
pop
or
pop
pop
jge
lret
pop
cmp
insl
fwait
inc
out
pop
sbb
push
dec
pop
sub
sbb
shrl
es
push
jmp
shll
xorb
cmpsb
sbb
add
mov
int
jns
dec
push
fadds
addr16
stos
sbb
or
stos
jb
mov
aad
outsb
jl
jae
push
out
inc
jno
dec
push
inc
push
aad
pop
push
mov
data16
je
sar
xor
adc
ret
imul
stc
stos
or
loope
cwtl
enter
sub
mov
cmpsl
and
std
loopne
xor
fidivrs
cmp
push
push
fwait
mov
sar
pop
jbe
gs
mov
lods
nop
mov
arpl
add
mov
pop
cmc
push
and
lea
push
mov
adc
dec
cmp
stos
movsl
sub
mulb
rclb
nop
mov
sub
mov
push
mov
fwait
enter
out
mov
adc
pushf
mov
aas
xor
sbb
bound
xchg
pop
roll
mov
push
cmp
cld
and
inc
jae
cld
popf
cmpsl
pop
std
sub
or
adcb
push
sti
pushf
das
sbb
bound
xor
scas
xchg
mov
xlat
lea
insl
lea
ret
lods
push
jne
outsl
sahf
adc
in
xchg
aad
add
or
cmpsb
fcoml
mov
fldl
pop
mov
fldt
imul
mov
xchg
movsb
call
or
ss
mov
adc
ret
mulb
mov
adc
dec
cld
pop
fisttps
lods
fptan
mov
cmp
shl
mov
dec
imul
ret
cld
push
mov
and
cmpb
pop
scas
shlb
pop
es
test
pcmpeqd
cmp
cwtl
and
sbb
jb
or
xor
mov
adc
mov
dec
leave
je
mov
adc
movsb
or
pop
cmpsb
int
cmc
call
inc
sbb
hlt
out
inc
xor
jns
std
inc
gs
pop
push
lret
mov
push
movsb
dec
pop
test
push
add
sbb
cs
imul
add
push
shrb
loope
roll
xchg
in
dec
call
cmpsl
xchg
pop
mov
dec
dec
and
dec
dec
add
add
int3
add
jns
or
sti
dec
jl
data16
xchg
jmp
pushf
and
aad
mov
dec
daa
jo
jns
or
repz
not
sub
cwtl
int3
adc
jno
mov
inc
and
jns
fstp
jp
push
into
out
fs
fcmovu
inc
mov
dec
or
xor
imul
xchg
nop
mov
push
jb
out
loopne
cmp
mov
lock
outsb
sbb
push
inc
popf
rorb
les
pop
mov
dec
mov
outsl
pop
mov
sub
mov
pop
cmp
cli
push
or
std
iret
shr
xchg
aas
inc
stos
push
rclb
mov
and
push
stos
ja
add
mov
or
pop
cld
aam
mov
jmp
sub
mov
dec
lock
pushf
fidivl
sub
xor
jo
pop
shlb
xor
rcr
xor
mov
jge
jbe
aad
lods
rorb
mov
in
mov
cwtl
sbb
cmc
mov
mov
testl
sbb
in
mov
ret
inc
adc
sahf
aam
mov
or
inc
cmpsb
fisttps
dec
xor
daa
sbb
push
imul
mov
fucomip
mov
pop
cmpsb
cmp
add
adc
das
mov
jae
inc
mov
cwtl
repz
je
xchg
sbb
xor
xor
dec
xchg
popa
push
add
or
shl
fcomps
es
xchg
cld
jae
popa
sbb
fs
arpl
repz
aam
mov
movsb
sbb
iret
test
push
mov
cmp
sub
jo
jnp
lock
test
lock
cld
jl
lret
sbb
push
ret
movups
fsub
cmc
arpl
sub
and
test
jecxz
or
in
lahf
jmp
or
adc
out
mov
mov
sahf
mov
and
fcmovne
xchg
popf
dec
fisttpl
test
mov
mov
into
inc
cmp
pop
push
test
in
popf
filds
gs
or
jge
mov
cli
sbb
lods
and
sbb
xchg
cmp
js
push
testb
loopne
push
js
pop
and
xor
add
sarb
push
movb
ficoms
in
lods
add
or
test
outsl
fistpl
movsb
fcomps
push
mov
push
pushf
js
push
rorl
fwait
clc
repz
sub
xor
xchg
rorl
rclb
sub
jmp
jae
jo
fnsave
xor
dec
adc
xchg
and
test
mov
test
pop
loop
sahf
incl
and
enter
adc
dec
addr16
fcmovnb
out
lds
ds
cmp
aaa
xor
lahf
fists
lret
inc
mov
cmp
fsubs
mov
in
pushw
sbb
add
jp
mov
xor
lds
dec
mov
and
dec
jne
sbb
ret
fdivrp
loopne
pop
mov
ja
mov
push
xor
adc
ja
lods
mov
fldenv
outsb
mov
out
xor
cmp
lds
lods
dec
inc
inc
cmpb
out
mov
mov
ret
xor
cmp
loope
pop
ud2
out
dec
cmp
es
ficoml
bound
or
xchg
inc
cltd
lahf
ret
roll
incb
mov
jns
outsl
cmpsl
es
es
or
pop
sti
xor
rcll
movsb
int3
xchg
in
jmp
aas
sub
jne
cmp
mov
xor
push
dec
add
sbbb
lock
shlb
fmuls
out
sbb
sbb
pop
pusha
xor
stos
sbb
dec
out
clc
mov
in
xchg
cmp
das
and
mov
sbb
pop
or
jl
insb
orl
mov
or
ret
inc
dec
shlb
mov
arpl
mov
mov
jo
std
xchg
cwtl
xchg
or
cmp
sub
pop
adc
daa
mov
jp
insl
dec
std
mov
mov
mov
cmpsl
sbb
cmc
pop
xor
out
mov
adc
fistps
xor
insb
or
popa
sar
mov
sti
cltd
mov
test
mov
rol
adc
pop
add
out
and
or
xor
and
push
mov
pop
adc
sub
inc
push
inc
xchg
fidivrs
cmpsb
lret
in
jno
lock
outsl
pop
xor
dec
dec
outsb
paddq
sbb
add
xor
icebp
loope
inc
jmp
inc
push
push
lods
bound
cld
jae
ficomps
push
sub
xchg
pop
mov
fwait
sahf
mov
push
xchg
icebp
into
jne
adc
ss
dec
dec
push
cwtl
dec
inc
in
adc
sbb
mov
aad
sub
ss
aam
push
or
cld
dec
add
mov
rcll
das
pop
sbb
imul
push
pop
pop
xchg
xor
lock
lcall
mov
lret
rcll
outsb
fiadds
push
ret
xchg
mov
vminss
stos
in
gs
fisubrl
lea
xlat
cmp
fisttpl
mov
sbb
rolb
ret
jp
jmp
dec
mov
or
add
pusha
sub
lret
loope
inc
or
dec
sub
mov
fstpl
xchg
dec
out
jl
mov
iret
scas
pop
ret
xor
movsl
popl
call
cmp
lods
inc
jb
mov
mov
push
cs
sub
xchg
push
pop
ja
mov
imul
insl
call
jo
insb
lock
and
and
xchg
ret
das
lods
pop
shll
push
rorl
push
jno
cmp
lret
fidivrl
mov
cmp
nop
subl
gs
cmp
mov
je
and
mov
test
cld
mov
in
jno
popa
fcmovu
out
pop
sub
sar
aaa
inc
psubusb
mov
fildll
or
sub
sub
cltd
scas
pusha
inc
test
add
flds
pop
repz
jb
test
xor
lock
xchg
rol
jmp
push
push
sti
xchg
jge
jl
sbb
xchg
mov
mov
dec
inc
aam
add
inc
mov
hlt
lahf
sahf
inc
and
popl
or
push
addr16
enter
or
insl
lods
jg
inc
dec
stos
stos
vdivps
pusha
cmpsb
xlat
xor
mov
push
cli
mov
fld
push
roll
adc
or
cs
fsqrt
mov
sbb
outsl
cs
push
add
in
and
or
je
inc
out
xchg
jo
dec
xchg
les
adc
mov
cmp
rcrl
in
notl
push
sub
xchg
frstor
dec
data16
jmp
stc
outsl
fdivl
lods
fsubs
push
mov
ret
sbb
and
mov
sub
inc
fwait
cmp
push
sub
xchg
movsl
inc
or
imul
mov
mov
and
scas
pop
or
popf
jg
jo
rcr
or
shrl
adc
subl
in
adc
iret
push
test
mov
les
jp
lret
xlat
mov
jne
mov
mov
mov
xchg
push
je
loope
inc
sahf
mov
mov
jne
rcll
xchg
not
ljmp
sar
push
jge
lret
jbe
test
jp
mov
ret
push
sbb
jbe
mov
push
fdiv
dec
jnp
lahf
ret
adc
and
jne
and
push
lods
cld
lret
test
or
inc
cmp
mov
or
and
fstl
inc
inc
mov
add
cmp
popa
mov
cli
sub
enter
dec
mov
pop
jb
pop
xor
mov
mov
add
dec
cli
out
dec
cmpsl
or
out
sahf
xchg
int
aam
cmp
push
scas
push
in
mov
sub
pop
jb
shll
testl
fs
scas
cmp
add
lods
mov
jmp
jmp
test
lret
les
fnstcw
popa
mov
mov
clc
fldl
clc
mov
mov
bound
bound
stos
std
arpl
out
fiadds
mov
xor
inc
add
aad
mov
repnz
out
cmp
stos
dec
xchg
xor
sbb
roll
xchg
rcl
xor
push
xor
push
stos
push
jo
insb
push
mov
into
mov
or
sub
mov
aam
repnz
xor
insl
out
jg
sub
push
mov
mov
push
xchg
sti
fwait
ja
dec
dec
fidivl
les
dec
daa
push
repnz
inc
dec
leave
and
pop
divb
jg
popf
divl
in
gs
ds
add
mov
adc
xlat
add
or
sahf
lods
lds
xor
or
mov
push
lds
sti
xor
inc
jae
dec
sbb
repz
scas
fdivl
movsl
push
arpl
lods
cmc
rcl
repz
sub
mov
xorl
pop
leave
mov
lret
fidivs
sbb
xchg
lods
inc
cld
add
cs
mov
and
push
jnp
mov
lods
inc
popa
setp
outsb
mov
pop
xor
jnp
dec
dec
xchg
sbb
out
lods
ret
jb
mov
sbb
pop
jge
dec
pusha
pop
jmp
test
pushl
mov
loop
adc
int3
ret
lahf
roll
and
or
and
pop
or
jp
popa
mov
fistpl
mov
mov
jmp
pop
loop
push
stos
je
inc
je
mov
inc
mov
ja
subb
mov
mov
sbb
jb
xor
push
inc
xchg
mov
or
jecxz
and
into
cmp
enter
pop
rorb
or
or
fs
or
cld
nop
xor
pop
inc
jo
das
xchg
leave
loope
rclb
jl
xchg
sub
mov
mov
dec
cmp
push
jnp
lock
cmp
mov
cmp
pop
popf
loop
add
mov
adc
pop
lock
dec
ret
dec
push
bound
jnp
and
cmp
sti
xchg
dec
inc
mov
cmpsb
sti
jg
nop
adc
mov
fisubs
jnp
je
mov
scas
cmpsb
clc
mov
insl
jns
sahf
sub
daa
mov
mov
lret
ret
cmp
decl
loopne
ficompl
insb
je
mov
dec
jb
sbb
daa
mov
mov
xor
shlb
bound
add
push
or
pop
xchg
clc
iret
xor
sub
stos
outsl
dec
push
sbb
pop
in
pop
cmp
mov
cmp
xchg
into
dec
and
xchg
movsb
test
mov
scas
ror
xchg
cmc
dec
jns
inc
mov
pop
adc
jne
jnp
sub
test
leave
pop
aas
sarb
sbb
pop
mov
or
in
fmulp
xor
pop
out
stos
fs
sahf
xor
sbb
ds
sbb
adc
inc
jmp
mov
jecxz
pushf
sub
push
push
sbb
loope
dec
push
leave
pushf
rorl
inc
push
xor
sbb
pop
mov
pushf
jno
stc
insl
in
out
push
and
mov
lcall
pop
mov
loope
cs
and
ja
inc
xorl
in
jbe
and
outsl
sbb
shlb
mov
je
addr16
cltd
sbb
push
hlt
mov
mov
xor
movsb
cld
push
and
jge
les
gs
add
in
lahf
dec
in
mov
arpl
push
lds
inc
sbb
aas
lret
dec
sbb
add
sub
sbb
insb
fwait
div
sahf
adc
cmp
mulb
sarb
movsl
fs
addl
mov
fdivs
push
fisttps
mov
xor
pop
scas
bnd
jo
cli
and
pop
popa
jno
cltd
add
adc
jge
mov
lea
popf
sub
mov
ficompl
shll
into
mov
fidivs
cmp
mov
lods
push
add
xor
clc
imul
aad
add
in
scas
push
inc
test
push
mov
inc
cmc
xlat
addr16
sbb
jnp
push
in
fs
loope
inc
mov
out
mov
ret
mov
out
adc
sahf
es
mov
std
mov
popf
cld
mov
xor
sub
shrb
pop
in
xchg
imul
test
jns
dec
or
ss
cmp
mov
xchg
or
test
ret
dec
mov
push
sbb
pusha
or
aam
inc
lock
xor
loop
stos
sahf
ds
movsl
dec
and
sub
push
mov
sarl
or
cmp
jae
push
pop
add
data16
mov
pop
push
lock
outsb
cltd
jae
repnz
lea
push
sbb
pop
loope
int3
test
mov
cwtl
sub
mov
dec
sarb
adc
iret
pushf
push
cltd
xor
dec
orl
mov
mov
inc
adc
dec
outsl
mov
jl
jmp
ds
and
dec
sub
orb
jbe
rcll
mov
rcll
rcr
push
jnp
mov
add
shrl
inc
inc
mov
sarl
test
xor
xlat
or
orb
jnp
sbb
jle
xor
sahf
sbb
aam
lcall
test
lods
add
leave
add
subl
and
sub
push
or
cwtl
jbe
sbb
icebp
pop
push
cmpsb
stos
sbb
mov
rorb
imul
aas
xchg
and
outsb
loope
movl
jnp,pn
addr16
mov
filds
push
jecxz
sub
les
pop
dec
testl
into
js
out
pushf
inc
add
lret
mov
add
or
sub
push
xor
adc
es
scas
pop
push
repnz
in
xchg
nop
into
xchg
sahf
push
ficoms
pushf
in
mov
loopne
sti
pop
pop
sbb
and
popa
jns
push
adcb
enter
or
lret
or
scas
dec
push
push
mov
fnsave
cwtl
or
test
jg
or
stos
jns
int3
insl
rcrl
push
cmc
pop
enter
divb
in
jno
sbb
out
jmp
test
add
sub
adc
arpl
dec
fwait
or
cmp
sbb
adc
or
adc
inc
cmp
and
pop
push
inc
sbb
je
les
sbb
mov
pop
pop
adc
cmpsb
addr16
mov
sub
cs
jl
mov
popa
and
stc
setp
insl
or
mov
inc
push
dec
xchg
jmp
add
jmp
dec
arpl
cmpsb
cmpsl
add
arpl
pop
out
adc
stos
dec
and
shll
js
inc
jnp
jnp
nop
ret
inc
imul
in
inc
cmp
inc
je
fisttps
mov
pop
in
ret
jb
movsl
sbb
xchg
sbb
sbb
dec
js
inc
das
fwait
or
cs
jne
add
push
inc
inc
js
inc
sub
add
and
cmp
sarb
cltd
sti
imul
shlb
push
add
data16
push
or
jmp
movsl
fdivr
xchg
and
aas
addr16
xor
insl
pop
movsl
sub
test
cltd
scas
addb
popa
js
loopne
cld
sbb
xchg
aam
rcrb
jbe
jle
add
sbb
cmp
mov
imul
xchg
notb
push
fdivrs
jge
cmp
jnp
xor
dec
sub
lea
sahf
in
adc
cs
xchg
ret
mov
jg
dec
mov
call
xor
sbb
cmp
divl
push
sub
rcll
divl
jne
pushf
dec
rorl
sbb
push
cli
push
jb
lcall
inc
pop
add
xchg
lahf
mov
mov
lret
ds
dec
push
sub
aam
pushf
nop
dec
pop
jne
pop
push
jno
mov
sarb
jns
mov
add
movsb
sub
xchg
sbb
dec
jmp
mov
sub
xor
lods
cmpsl
aas
bound
lods
call
repz
and
movsl
pop
pop
je
nop
cmp
movsb
filds
cld
mov
jo
push
mov
cmpsl
and
ljmp
xchg
loopne
cmpsl
je
ficomps
loope
stos
fcmovbe
push
jp
retw
cltd
push
mov
mov
imul
and
orb
pusha
mov
inc
sbbb
mov
jb
insb
cmp
mov
in
ja
aaa
push
xor
adc
jmp
pop
push
stc
outsl
jl
cmp
cmpl
shlb
adc
data16
repz
jmp
daa
icebp
in
inc
shrb
rolb
mov
mov
in
adc
xchg
pop
jg
cli
sub
mov
imul
into
icebp
xchg
jo
out
cli
cmpb
lret
imul
mov
pop
fcmovb
movsl
ret
outsl
incl
or
jle
and
lods
sarb
or
hlt
daa
rorl
push
sbb
ja
out
js
push
js
pushf
sub
repz
sbb
mov
dec
mov
out
adc
popf
insl
xchg
push
push
repz
pop
in
int3
outsl
test
sub
lock
imulb
mov
sahf
xchg
add
sub
insl
adc
push
adc
jge
or
cmp
movsl
ret
xchg
fistpl
mov
push
nop
repnz
push
or
movsl
dec
and
stos
pop
sub
adc
xor
imul
jnp
stc
pop
mov
fdivl
ds
insl
mov
jmp
sub
dec
imul
push
push
sub
andl
lock
ja
add
sub
push
push
mov
imul
mov
jns
sbb
mov
notl
xor
repz
jecxz
jl
fcompl
dec
mov
push
cmpsb
add
or
or
fstpt
pop
ss
fdivrl
clc
test
push
jl
jl
sbb
fstpt
cmp
mov
les
and
mov
sti
cmp
jnp
cmp
insb
jle
and
out
mov
jmp
insl
mov
in
test
or
mov
js
mov
mov
jne
insb
pop
add
nop
in
pop
sub
aas
mov
push
mov
inc
mov
aad
mov
cld
mov
movsb
push
mov
arpl
mov
xor
inc
in
adc
lret
loope
fsubs
pop
sbb
and
hlt
xor
pop
ljmp
mov
add
jae
fwait
dec
mov
jne
add
dec
aas
dec
xor
lcall
xchg
and
adc
out
dec
cmp
mov
repz
gs
sarl
ss
in
fwait
movsb
pop
xor
sti
cmc
fwait
cmpl
adc
out
daa
push
jo
fnstenv
cmp
inc
sahf
repz
cld
adc
aaa
lods
push
push
lds
inc
outsb
xorb
adc
inc
xor
cltd
aas
stc
mov
dec
sbb
pop
jns
add
mov
cmp
int
fimuls
add
sub
iret
jmp
jg
inc
idivb
push
dec
cmp
fiadds
aas
push
fmull
fwait
mov
in
xchg
insb
ror
dec
aad
push
dec
pop
push
adc
fnstsw
push
shrl
call
fsubrs
jmp
enter
cltd
int
sub
mov
inc
xor
test
and
mov
adc
jp
stos
sbb
movsb
repnz
mov
mov
lods
nop
lret
cmp
mov
fsubrs
xchg
xor
jo
rclb
je
jno
int
push
aas
fimull
sahf
lahf
sub
jg
addl
jmp
cmp
ljmp
ret
adc
adcb
jnp
push
stc
fs
add
mov
sbbb
push
inc
std
sbb
adc
or
jno
inc
hlt
fsubrp
dec
inc
lods
dec
xchg
push
xor
push
pop
sbb
loopne
mov
sub
fnsave
addl
out
or
rcrb
sbb
or
aam
jmp
nop
mov
mov
sub
pusha
in
xchg
ljmp
lcall
rolb
iret
fbstp
daa
ret
xchg
jecxz
lock
mov
test
ja
push
aam
jg
cmp
push
movsl
xor
mov
mov
xchg
imul
scas
orl
jne
cmp
rorl
mov
enter
xchg
xor
mov
sub
xlat
ds
push
out
push
insb
pop
xchg
in
aam
pop
xchg
dec
cmp
cs
or
cltd
leave
mov
lea
lea
xor
xchg
sub
cmp
movsb
mov
mov
loope
mov
dec
mov
xchg
ljmp
jne
in
sbb
or
adc
lock
push
in
cmc
sbb
sbb
in
push
jae
insl
xchg
dec
sbb
ss
stc
mov
enter
movsb
cmp
cwtl
rcrl
add
push
jge
or
mov
adc
sbb
cmp
add
lret
imul
fsubrl
or
movsl
jns
mov
mov
dec
fsub
dec
sbb
push
stc
cmp
std
divb
stc
insb
mov
dec
mov
pop
or
or
add
mov
fdiv
push
add
dec
loope
xchg
fimuls
mov
notl
jecxz
mov
gs
pushf
out
cld
sbb
add
ds
cwtl
pop
aam
pop
call
jb
add
sbb
out
mov
ljmp
js
jp
into
adc
loopne
stos
dec
inc
jl
dec
ds
rcr
mov
mov
out
incb
sbb
mov
jno
push
fwait
xor
add
cmp
jne
imul
movsl
mov
add
into
adc
push
ja
and
cwtl
shr
loope
adc
or
push
out
js
ljmp
popl
lret
jnp
aam
jl
inc
sbb
xchg
sub
addr16
pop
xchg
xlat
xor
push
push
cmc
in
lret
push
aad
cli
or
mov
ds
jbe
int
jb
sub
cld
and
out
mov
pop
ljmp
dec
push
mov
sbb
dec
orl
push
jmp
movsb
cltd
xchg
fisttpll
or
mov
aad
mov
imul
cld
push
and
push
add
mov
iret
mov
orb
rol
outsl
popf
and
push
call
mov
jmp
out
pop
mov
in
stc
xchg
xchg
cld
jp
outsl
subl
les
push
int3
outsl
or
in
adc
test
test
mov
xchg
pop
ds
movl
sbb
lret
fmul
mov
cmc
cmp
jecxz
nop
das
out
sub
sub
leave
lock
jo
mov
dec
lahf
xor
imul
dec
cmp
mov
sub
cmovae
pop
cmp
push
stc
dec
enter
gs
jmp
jo
in
cmpsl
add
adcb
and
loope
out
iret
dec
inc
sahf
les
inc
in
ret
pop
out
push
sbb
dec
out
xor
idivl
xor
add
fisubl
xlat
adc
cltd
jne
sub
xchg
mov
outsl
fsubrs
out
ss
pop
movsb
pop
pop
sahf
cmpsl
mov
lret
inc
pop
sub
cmp
neg
add
xlat
jmp
xchg
addl
and
or
xchg
stos
stc
push
inc
sarl
add
push
ss
inc
fdivrs
add
cli
push
out
mov
mov
int
xchg
jg,pt
out
jmp
inc
jnp
sub
xchg
xchg
push
lock
sbb
outsb
pop
dec
sbb
mov
mov
mov
int3
dec
popf
sbb
push
mov
sub
sbb
pop
pusha
mov
mov
in
jmp
mov
adcb
aam
inc
sub
sub
lds
mov
cltd
scas
iret
sti
dec
mov
cld
mov
or
xchg
jp
or
movsl
daa
mov
cs
aaa
pop
loop
imul
mov
cmpsl
cs
mov
mov
push
pavgb
fidivs
pop
dec
add
pusha
aas
pop
out
dec
mov
add
addl
in
lds
sub
aaa
rcll
mov
clc
aad
aaa
test
add
arpl
xor
int
sub
mov
cmp
mov
adc
jecxz
sahf
lret
mov
sub
pop
fs
adc
roll
mov
rcrl
dec
sahf
adc
int3
les
xor
idivl
aas
xacquire
in
xor
xchg
or
cmp
roll
mov
sub
setbe
xor
cli
pop
loope
mov
mov
push
enter
cmp
gs
add
inc
dec
pop
leave
adc
test
out
adc
adc
jo
in
mov
mov
xor
roll
aam
mov
test
cmp
pop
popf
insl
into
inc
push
fdivl
fisubs
je
xor
insl
jle
mov
inc
jle
das
xchg
cmc
mov
cmpsb
ljmp
mov
xor
das
lea
jo
xchg
xor
dec
stos
dec
lods
shl
adc
xchg
pop
fidivl
sub
push
mov
stc
jne
push
mov
into
jb
lret
das
dec
iret
and
jns
insl
pop
data16
pushf
lea
rcrl
mov
out
jo
out
mov
jle
mov
std
sub
sbb
hlt
pop
je
inc
clc
sbb
and
fisubrs
test
outsb
or
inc
loope
pop
and
xchg
xchg
rol
push
fadds
inc
jo
mov
call
leave
mov
negl
pop
es
pop
lock
sti
mov
pop
pop
or
inc
dec
jne
test
add
test
lret
aad
xchg
dec
rcrl
xchg
adc
sub
add
dec
aam
push
out
push
cmp
iretw
enter
btr
jle
dec
add
ja
movsb
loopne
push
test
dec
fiadds
xor
stc
lods
and
test
push
add
push
sbb
xorb
fidivl
sub
jne
sti
pop
jmp
leave
repz
sarl
or
lahf
jo
repnz
cmp
adc
cltd
mov
jge
ljmp
inc
je
mov
add
not
bnd
lahf
inc
sub
push
mov
outsl
lea
xor
outsb
pop
pusha
push
loopne
out
cmp
shlb
out
out
aad
mov
test
cmc
cmpsl
cmc
mov
mov
stos
imul
out
pushf
mov
outsl
pop
das
and
xchg
push
daa
stos
push
faddp
pop
add
mov
sbb
inc
pusha
mov
jo
jecxz
xlat
sbb
sub
daa
movsb
adc
pop
xor
hlt
push
jb
sbbb
into
add
lock
test
mov
push
pop
ret
sub
int
imul
scas
cmp
ret
fdivs
ja
std
xchg
dec
or
jp
sbb
inc
lea
int3
mov
cmp
add
mov
sub
sub
add
flds
lea
or
add
sbb
mov
dec
out
cld
mov
aam
pop
js
scas
push
mov
cmc
out
sbb
jle
xchg
fistps
movsb
pop
call
movsl
push
mov
mov
sar
mov
xor
in
inc
adc
repz
cltd
add
call
in
or
mov
inc
cmp
out
sbb
push
sbb
stc
add
push
or
fistl
cltd
aam
out
mov
inc
dec
lret
cmc
push
pop
lret
add
dec
cmovp
call
jle
dec
cmpsl
outsb
cmp
clc
push
and
les
repnz
pop
pop
lock
jno
cltd
test
xchg
in
into
punpckhbw
add
call
lods
sbb
pop
popa
rorb
pop
adc
sbb
test
imul
movsl
inc
xchg
inc
notb
mov
dec
cmp
push
and
xchg
imulb
mov
pop
fiadds
pop
in
and
xchg
dec
cwtl
stos
int
cmc
int3
sub
pop
pop
test
jg
xchg
cmp
jb
push
cmpsb
shlb
bound
xchg
mov
lcall
lods
cld
sbb
adc
cmc
xchg
push
sahf
into
sbb
mov
shll
lret
aad
aaa
mov
push
fistpl
mov
push
stos
push
push
dec
add
stos
pop
nop
and
js
mov
cmpsl
sub
xor
or
subb
in
in
or
jmp
nop
add
dec
divl
fdivs
mov
push
push
add
and
les
push
push
aaa
xchg
dec
pop
jno
dec
pop
mov
ja
ficoml
and
sub
sbb
mov
jb
dec
mov
je
fistps
cmpsl
pop
enter
ret
or
mov
rolb
jmp
pop
xor
add
out
mov
pop
cmp
sub
lods
lcall
mov
mov
sti
jge
push
jecxz
sub
pop
adc
ret
mov
gs
test
push
out
push
push
adc
movsb
add
push
icebp
stos
sub
lahf
je
cmpsb
nop
ficoms
aam
lods
jbe
inc
in
cmpsl
cmpsb
insb
call
les
je
inc
mov
cwtl
pop
mov
jg
adc
cmpsl
xchg
lcall
and
mov
inc
pop
xchg
lret
push
lods
sub
sbb
outsb
mov
lret
std
ret
mov
pop
popa
xchg
mov
sub
pop
sbb
jo
mov
lahf
pop
hlt
push
sub
mov
sub
dec
das
es
aam
dec
inc
cmp
mov
clc
rorl
sbb
outsl
jl
lods
pop
out
sti
mov
and
inc
cwtl
lds
mov
push
sbb
inc
jp
push
sarl
dec
cli
pop
fs
data16
push
lods
jmp
jbe
mov
sti
aad
das
push
jl,pn
outsb
fcomp
shrl
ss
out
enter
stos
ja
or
fiaddl
sbb
out
sbb
out
pop
daa
rorb
mov
in
fisubrl
mov
mov
les
xlat
enter
and
xor
jnp
mov
insb
adc
dec
and
xor
jnp
xor
rcr
fldcw
xchg
and
fsubr
ljmp
and
je
mov
cmp
out
inc
test
std
imul
add
push
cmc
mov
addr16
lret
lods
xchg
sti
stc
js
xchg
in
xchg
subb
or
fisttpll
fsubr
or
mov
arpl
outsl
ss
out
add
inc
add
orl
inc
xchg
pop
pop
into
cmp
xor
and
mov
mov
inc
push
sarl
imul
sbb
aas
dec
and
cmpsb
sub
cmp
push
sub
in
cmp
inc
xorl
push
mov
ret
inc
lock
cltd
mov
hlt
add
and
inc
std
shrb
sti
pop
fstpl
mov
jecxz
js
sbb
push
out
fistps
dec
lret
cmp
fidivl
jno
cwtl
dec
iret
gs
imul
scas
sbb
or
je
rcrb
notb
jp
subb
jo
push
lret
dec
cs
mov
push
add
and
je
pop
sub
add
mov
addl
clc
push
and
mov
mov
xchg
jbe
pop
push
push
or
lcall
add
cltd
sbb
cltd
cltd
sub
dec
movsb
mov
icebp
loopne
inc
add
loopne
push
data16
ds
mov
cld
mov
add
pop
adc
push
xor
in
xor
inc
mov
ljmp
aas
ja
into
std
loopne
pushf
mov
rolb
shll
cmp
and
mov
and
ret
repnz
notl
dec
and
mov
dec
push
mov
push
and
push
fldl
jp
in
cwtl
and
lds
pop
mov
mov
cmp
imul
dec
push
mov
push
xchg
inc
cmp
cmp
cmp
cld
xchg
out
push
sti
pop
xchg
dec
iret
mov
in
adc
iret
push
adc
push
nop
jbe
sub
mov
jl
or
insb
leave
es
xor
sub
inc
push
sarb
mov
dec
dec
jg
or
into
sub
pop
lret
insb
pop
adc
and
popa
mov
fucomp
movsl
xor
or
sub
cmp
lahf
in
xor
mov
shlb
pop
bound
xchg
xchg
mov
mov
out
and
cmp
mov
mov
add
push
mov
mov
hlt
repz
inc
jb
or
test
inc
dec
push
mov
cmp
inc
cs
lret
js
iret
cmpsb
test
out
outsl
cmpsl
sbb
out
ret
and
add
iret
aaa
xchg
and
push
or
mov
dec
ficoml
mov
adc
push
leave
add
cld
pusha
xor
add
push
mov
sub
add
xlat
mov
mov
mov
xor
pop
hlt
jns
inc
mov
jmp
jae
fadds
mov
inc
push
insl
int3
add
add
and
dec
loopne
sub
lods
xchg
int
insl
sarb
mov
or
fcom
jg
dec
aam
jb
test
inc
popa
xor
sub
push
jns
and
pop
xchg
mov
or
cli
test
jge
dec
cmp
dec
mov
arpl
push
and
pop
out
mov
cltd
push
push
aaa
fisubs
mov
or
repz
xor
xor
push
sub
push
push
push
ds
repnz
cmp
sub
mov
mov
imul
push
test
andl
cli
mov
daa
stc
and
jnp
adc
lea
aad
lds
xchg
xchg
hlt
cmp
call
sub
xchg
dec
lods
sbb
in
push
test
adc
pop
nop
pushf
add
jno
add
pop
mov
sub
mov
loopne
adc
or
push
push
out
sub
xchg
cmc
lcall
jg
and
inc
and
dec
jp
call
jno
imul
mov
mov
inc
ds
into
aad
cmpsl
lods
sbb
outsl
fsubp
ret
or
xlat
inc
pop
pop
add
loopne
pop
ret
xlat
int3
stos
push
hlt
nop
inc
pop
stc
insb
nop
push
sarl
clc
or
stc
mov
xchg
mov
mov
sti
xchg
shlb
pop
ret
pop
hlt
xlat
cmc
in
xchg
xor
les
shrl
push
outsl
lahf
xchg
sub
test
out
bound
cmp
leave
dec
clc
mov
mov
xchg
adc
add
pop
fcoml
shlb
pop
in
push
jle
cmc
out
div
vpunpckhqdq
push
lret
mov
int3
jmp
add
push
cs
and
xchg
dec
ds
sbb
mov
jnp
stc
mov
mov
stc
jle
mov
push
mov
test
orb
subl
scas
mov
xchg
in
and
cmp
icebp
sbb
jl
jg
cmp
inc
shlb
mov
add
xor
push
jp
sbb
outsl
dec
push
mov
cmc
adc
lods
lods
jne
mov
push
imul
aaa
repz
pop
pop
cmp
xor
xchg
mov
leave
xlat
hlt
jb
lahf
and
out
inc
mov
jns
add
testl
pop
mov
notb
jmp
xor
loop
sbb
inc
or
xor
push
and
cmc
pop
jbe
sti
sbb
inc
ja
push
xor
push
mov
cmp
out
push
leave
jp
ret
cli
ljmp
cmc
jge
cmpsl
test
xchg
popa
push
and
ds
in
iret
stc
sbb
push
vunpcklps
clc
push
mov
push
jb
add
dec
repnz
push
and
das
jae
hlt
fistpll
std
dec
mov
sbb
adc
fcmovnu
jae
lcall
je
jl
mov
add
and
sbb
xchg
mov
push
sub
mov
mov
jle
scas
imul
fstpl
jp
jo
hlt
addl
lods
mov
or
inc
cmp
add
ficomps
inc
jns
aad
inc
inc
and
or
subl
dec
bswap
mov
jo
scas
jae
scas
adc
dec
shrl
cmpsb
test
mov
jp
pop
mov
arpl
sub
and
mov
cmpsl
sub
loop
cmp
into
outsb
mov
push
loope
and
dec
in
inc
sbb
lock
and
sub
in
das
call
fistps
dec
mov
mov
xor
fwait
pop
divl
ret
sbb
mov
and
ret
mov
xchg
outsb
mov
mov
fldl
add
shll
std
push
js
sbb
and
cltd
and
fidivs
push
xor
and
and
dec
cs
outsl
je
jle
std
mov
in
push
inc
sbb
cmc
stos
mov
sbb
lcall
in
push
add
push
pusha
std
aas
dec
adc
stc
nop
or
loopne
incb
test
mov
aas
jmp
hlt
call
or
das
ds
or
lock
shlb
xor
pop
and
push
pop
ds
in
pop
sub
xor
mov
pushf
add
push
cwtl
ss
loope
lods
test
jo
xchg
jle
sub
test
mov
xor
fadds
mov
adc
data16
rcll
insb
sbb
or
lahf
mov
dec
or
sarl
outsl
loop
xchg
or
pop
or
and
add
mov
sbbb
adc
mov
andb
mov
fdivs
mov
jo
jae
jl
movsl
sbb
xchg
clc
das
shl
aaa
adc
mov
jle
add
push
popa
ret
or
pop
rcrb
and
xor
fcmove
sbb
or
fimull
hlt
xchg
xchg
dec
jbe
add
adc
inc
loopne
mov
sti
or
sub
inc
sub
out
vcvtss2sd
in
push
imul
repnz
pop
loope
mov
or
lds
out
mov
and
insb
insl
mov
pop
test
test
pop
std
mov
add
add
shrb
mov
xchg
pop
xor
fs
test
jecxz
and
int
shr
adc
in
aam
lcall
mov
jae
dec
mov
jo
mov
cmpsb
jge
je
or
jb
fnstcw
dec
push
push
pop
mov
cld
push
xchg
push
aad
xlat
stos
sub
or
add
or
pop
lock
in
fnstsw
xchg
mov
enter
or
cmp
insl
pop
pop
shr
fnsave
xor
ljmp
andl
std
cmp
cli
jbe
xchg
jl
sbb
std
jg
in
sub
cmp
xor
cwtl
push
sub
cmpsb
test
jg
imul
movl
jnp
in
xor
popa
pushf
daa
push
pop
sti
jge
in
cmp
add
inc
mov
ret
pop
mov
sub
data16
lds
jmp
push
loop
jns
ds
repnz
mov
pushf
xor
int
ljmp
ds
mov
push
je
outsl
add
mov
cli
hlt
lcall
mov
jle
scas
mov
sbb
xchg
dec
jbe
pop
add
in
cmp
in
cmp
push
fwait
dec
mov
repnz
les
lock
lea
mov
data16
cwtl
sub
cmp
sbb
dec
gs
inc
dec
push
mov
ret
fs
mov
lock
int
sub
lahf
out
pop
push
xor
mov
jp
mov
sbb
pop
cltd
dec
mov
scas
pop
xchg
pop
adc
lock
lret
mov
in
fcompl
jne
dec
or
call
inc
les
ja
push
xor
pop
mov
outsl
sub
loope
ret
or
cmpsb
shrl
mov
sbb
push
xor
jnp
bnd
or
mov
clc
testb
mov
loop
inc
mov
ret
repz
xor
fstps
adc
pop
popl
hlt
mov
mov
or
add
arpl
pop
in
inc
inc
sub
pop
push
sbb
pop
pop
cli
iret
mov
cld
cwtl
jne
lea
add
ss
push
std
cmp
jp
cmp
pop
ds
adc
pop
mov
inc
or
lahf
pop
xchg
inc
notb
in
xor
xor
test
inc
ret
mov
pusha
jge
add
rcr
push
xchg
fucomp
dec
jle
inc
add
and
das
cmp
cmc
movsb
mov
xchg
mov
enter
pop
mov
imul
ds
inc
lcall
fimull
pop
imul
aad
inc
adc
mov
push
and
push
pop
js
in
stos
push
jb
dec
js
stos
mov
sub
insl
roll
in
jns
xlat
test
movsb
pop
fldcw
push
dec
outsb
imul
dec
mov
mov
adcl
xor
sub
shlb
sar
adc
arpl
shl
andb
imul
push
stos
in
mov
xchg
add
cmp
mov
sbb
sbb
in
push
xchg
fsts
in
cmp
xor
lods
cmc
pop
aas
sub
jle
int
cmp
stos
sub
ret
cmp
aaa
jae
add
mov
or
jmp
enter
mov
xchg
pop
daa
adc
adc
out
pop
push
rol
test
mov
call
fdivrl
xor
dec
adc
ja
sti
pop
mov
or
push
xor
xchg
inc
xchg
jnp
ljmp
into
insl
inc
cs
stos
cli
js
adc
imul
in
aam
inc
das
lds
xchg
in
inc
mov
add
sub
jb
mov
push
inc
and
lds
test
push
jg
adc
rcll
inc
sbb
scas
int3
sbb
add
daa
adc
nop
inc
push
push
int3
ror
add
xchg
ja
push
shll
pop
xor
jae
lret
xor
jg
cmp
xchg
cmpsl
mov
sub
filds
inc
js
cmp
mov
fnstcw
cmp
dec
fisubrs
mov
push
jge
in
inc
int
xor
negb
cmp
movsl
cmp
and
inc
jp
jae
shll
bound
imul
insb
and
mov
jle
mov
fst
aad
xchg
push
aas
xor
imul
fnstsw
sub
push
sahf
in
inc
or
outsl
fwait
inc
sub
sbb
rorl
rorl
popa
push
std
in
fnstsw
fnstenv
mov
fsts
lret
add
jmp
stos
call
inc
lds
out
fmuls
inc
cltd
or
or
fcmovb
sbb
rolb
in
mov
repnz
roll
call
in
jae
xlat
pop
sub
or
in
and
testb
and
xor
loopne
fsubrs
stc
lds
jp
sub
jb
push
cli
cmpsl
cmp
outsb
fmuls
mov
les
and
jmp
mov
fildl
dec
int3
dec
or
mov
leave
into
xlat
jb
xor
scas
jb
ss
call
pushf
and
mov
xchg
mov
enter
hlt
or
dec
cmpsl
sbb
mov
add
repnz
and
mov
arpl
xor
mov
aaa
int
sub
fidivrs
jp
out
iret
mov
fldcw
movb
and
rorl
popa
in
pop
mov
push
cmp
mov
mov
cmp
xchg
add
jne
fwait
imul
mov
mov
cmp
cmp
insl
xor
xchg
cltd
hlt
jb
in
rorl
xor
mov
and
mov
je
test
ret
insl
xchg
and
add
out
inc
je
xchg
push
imul
add
pop
cmp
sbb
icebp
hlt
in
xor
jae
or
xchg
test
dec
push
sti
inc
clc
dec
add
pop
add
push
out
mov
push
cli
xchg
sbb
mov
nop
int3
xor
mov
push
pop
nop
sbb
xor
pause
xor
pop
and
pop
and
mov
mov
nop
in
in
jge
cmp
decb
pop
lcall
es
and
into
pop
faddp
jno
sbb
shr
xor
loop
mov
sti
xor
inc
aas
cs
or
outsb
sub
cmp
xchg
gs
daa
cmpsb
jnp
out
dec
pop
jb
inc
xor
arpl
in
mov
dec
inc
push
mov
mov
xor
sti
vpunpcklwd
xor
testl
xor
ret
dec
lret
lahf
mov
es
cmp
call
lret
fwait
inc
shll
loop
sub
mov
outsb
xchg
jno
fildl
adc
shrl
mov
xchg
add
inc
and
and
xchg
imul
xor
mov
xor
pop
lods
sti
and
into
sub
sbb
or
hlt
bound
daa
loope
das
dec
sub
stos
call
mov
in
lods
add
lret
xor
mov
add
psrlq
aam
adc
or
out
mov
pop
clc
cwtl
xor
xor
mov
cmp
data16
add
xor
mov
pop
xchg
jno
push
leave
sub
mov
lahf
dec
cmpsl
data16
clc
loopne
mov
arpl
je
jbe
dec
mov
ficomps
and
jge
ja
lds
cmp
jns
movsl
or
sarl
xchg
loopne
jb
sbb
pop
ss
imul
fwait
pop
adc
mov
dec
loope
popa
lcall
inc
mov
clc
pop
and
push
sbb
cltd
mov
and
movsb
jo
and
sahf
sbb
adc
mov
pop
pop
push
sbb
and
into
vmovsd
adc
and
pcmpeqd
sbb
enter
lea
lahf
push
adcl
ret
fldcw
lahf
fcmovbe
mov
add
incb
mov
xor
jbe
scas
adc
dec
mov
mov
out
imul
call
pushf
repz
pop
das
dec
test
mov
inc
ljmp
popf
aad
cltd
in
push
ret
jl
fcompl
or
jge
jl
mov
xlat
add
aad
leave
mov
int
pop
pop
decb
mov
dec
adc
sahf
add
xchg
scas
sbb
inc
add
ret
mov
xor
mov
xor
or
and
xor
jo
add
jne
shrb
lods
rcr
cs
pushf
push
lea
dec
in
and
push
cmp
shll
inc
cmp
loope
cmp
jecxz
sahf
js
icebp
push
rol
adc
add
xchg
sbb
pop
xor
jns
push
sub
jno
push
insl
cmp
aad
movsl
mov
or
push
mov
pop
icebp
mov
cmp
cmp
shl
jp
jmp
fcmovbe
les
out
adc
add
xchg
dec
push
xorl
mov
cmp
pop
pop
pop
in
mov
xor
push
or
out
pop
mov
mov
scas
aaa
test
fdivl
xchg
pop
pop
pop
pop
popf
adc
je
je
push
xchg
pop
xlat
dec
jbe
popf
sub
mov
xchg
js
icebp
xor
jmp
in
mov
cwtl
nop
fcmovb
sub
xchg
fcmovnu
jo
xor
mul
iret
mov
or
push
dec
inc
cmp
or
inc
or
pop
xchg
jae
mov
stc
xlat
mov
pop
movsb
pop
stc
xchg
fidivs
loopne
jle
mov
ficoms
cmpsb
pop
push
and
lahf
pop
fbld
add
or
sbb
cmpsb
xchg
subl
cmp
int3
insl
in
icebp
das
ret
sub
loope
jnp
mov
or
push
xor
xor
add
mov
lea
inc
clc
and
int3
add
push
insb
sbb
inc
jno
push
int
sahf
lods
notb
jl
mov
xor
in
mov
andl
adc
js
sbb
enter
lock
in
mov
xor
sub
shrl
test
rolb
cs
aaa
outsb
mov
aad
xor
icebp
fnstenv
add
add
shl
sbb
add
xor
mov
mov
popf
sbb
iret
fcmovnu
mov
mov
lcall
sub
xchg
sbb
cmpsl
add
sbb
push
fadds
shll
add
mov
mov
or
sub
mov
push
ficomps
daa
mov
movsl
cmp
sbb
lcall
fcoms
lcall
sti
mov
mov
xchg
add
clc
stos
loop
enter
cmc
aaa
inc
mov
dec
jge
and
ret
xchg
sub
mov
inc
mov
pop
in
xchg
sub
filds
decl
cld
mov
loop
mov
mov
cwtl
adc
pop
xchg
shl
test
push
jmp
daa
mov
push
adc
adc
cld
jp
out
fdivrl
cltd
aam
popa
outsl
pop
cmp
lods
mov
pop
mov
add
fs
mov
mov
or
sub
sub
pop
aaa
int
pop
adc
jl
xor
mov
sub
negb
jbe
push
cltd
mov
adc
cmpsl
sub
nop
scas
inc
cmpsb
pop
test
push
cmp
or
dec
mov
pop
inc
jle
loop
mov
adc
or
je
xor
mov
push
insl
leave
sub
push
cmc
dec
push
sub
xchg
dec
xor
pop
lock
adc
aam
xchg
jbe
inc
jp
loop
pop
enter
test
mov
popa
clc
jbe
jae
jne
add
ljmp
mov
and
cld
outsl
clc
dec
lret
mov
orb
xlat
daa
xor
fists
daa
aad
push
cld
ds
mov
jle
je
add
ja
enter
lcall
jmp
inc
jmpw
int3
add
pop
jae
dec
add
shl
xor
pop
adcb
rcr
fs
pop
popa
push
pop
mov
fcom
mov
sub
or
outsl
adc
pop
gs
rorl
imul
mov
stos
fnstsw
jmp
jp
pop
dec
cmp
jl
add
icebp
adc
enter
push
xchg
cs
and
and
mov
or
xor
mov
pop
cs
das
das
and
mov
outsl
bound
cmp
lods
notl
xchg
inc
dec
sbb
or
in
mov
shll
mov
popf
add
mov
adc
mov
and
fdivs
fcmovu
mov
sub
fcomip
jnp
cmp
sbb
push
mov
xchg
mov
jmp
inc
and
xlat
les
icebp
adc
inc
icebp
icebp
jno
ret
xchg
push
sar
or
pop
popw
xchg
pop
lret
je
jns
addb
bound
pop
insl
and
inc
out
ret
imul
cmp
insb
mov
fistpl
push
imul
std
jmp
sbb
push
je
andl
das
or
decb
mov
scas
out
inc
add
pop
push
inc
frstor
shr
and
sub
jg
push
push
in
into
stc
out
out
mov
js
jno
idivl
push
test
sarb
push
mov
mov
jno,pn
or
adc
test
push
sysret
out
push
cmp
loopne
sbb
pop
cmpsb
mul
mov
sbb
mov
into
sti
mov
mov
loope
ror
pop
add
dec
sub
mov
adc
jbe
lahf
add
jns
test
sub
pop
mulb
enter
scas
cmp
xor
xchg
xchg
repz
in
pop
sub
or
xor
fistps
cmp
movsl
jns
cmpsl
sbb
jbe
add
add
aaa
jg
add
mov
mov
xorl
xor
fwait
jae
cmp
push
mov
pushf
or
stc
adcb
in
pop
shll
aad
je
inc
scas
int
std
fidivs
in
in
mulb
jbe
loopne
hlt
or
sub
incb
je
sbb
sub
fwait
lret
fsubrl
outsl
cmc
jmp
pop
dec
ja
flds
mov
and
mov
push
out
sahf
stc
xchg
mov
rcl
cmc
or
fwait
xor
adcb
xchg
and
lock
cmc
add
xchg
int3
testb
pop
inc
test
dec
outsb
cmp
test
mov
imul
in
bound
jnp
cli
test
bound
rcl
aas
call
pop
shl
jle
out
mov
je
sub
rcr
mov
mov
pop
sbb
push
jmp
inc
cli
inc
and
aam
pop
sbb
pop
imul
cmp
mov
std
mov
in
call
lahf
movsb
lods
jns
inc
aas
faddl
pop
int
inc
push
push
mov
aam
mov
popf
pushf
lret
or
cmpsl
adc
out
add
inc
xor
mov
push
mov
adc
test
jge
cmp
mov
mov
xor
sahf
or
scas
cmp
loopne
test
jo
cmp
into
test
sarb
sbb
jg
jns
iret
pop
lahf
rorb
ret
arpl
xor
jmp
sbb
jl
mov
adc
inc
loopne
scas
shl
push
or
cld
jecxz
arpl
mov
sbb
mov
xlat
jbe
xchg
je
jl
repnz
jbe
push
sar
pop
mov
push
cwtl
adc
fs
ds
add
lods
or
mov
fcoml
xor
cmp
jb
fs
fcmovb
and
insb
insl
or
sarb
mov
add
rorb
cmc
cmpsl
lcall
dec
push
adc
addl
add
inc
cmc
or
sub
dec
fldcw
gs
das
mov
pop
pusha
adc
add
pop
push
rorb
push
xchg
xchg
clc
adc
cmp
sub
mov
adc
mov
pop
jno
pop
mov
fisttpl
cs
or
dec
cli
or
add
xchg
daa
mov
pop
xor
mov
insb
jge
xchg
and
in
lea
push
jmp
dec
ljmp
repnz
push
orl
add
fcompl
inc
lds
enter
loope
jae
call
iret
rclb
xlat
fdiv
add
lea
and
cmp
xchg
push
insb
lods
repz
mov
ds
rolb
pop
das
jmp
xchg
stos
std
loop
pop
lahf
dec
push
mov
dec
into
jno
ret
push
mov
clc
test
mov
or
aad
and
test
sub
leave
cmp
shr
pop
xchg
jl
mov
dec
add
xor
mov
push
cmp
sub
adc
bound
sub
cld
pop
xchg
pop
lcall
into
shrl
outsb
popa
push
not
fwait
jg
arpl
push
jnp
pop
sbb
ret
scas
pop
jle
sub
fsubrs
mov
add
adc
mov
lcall
xchg
leave
jbe
jne
inc
jp
and
mov
mov
cmp
or
je
push
sub
adc
jg
popf
mov
pop
mov
cwtl
adc
and
pop
sub
loopne
push
ljmp
cmp
jb
push
inc
ljmp
bswap
push
cmpsl
loope
dec
jmp
aad
cmp
sub
push
incb
repnz
scas
std
popf
jecxz
adc
mov
cli
add
push
dec
fcmovu
xor
or
jnp
push
add
dec
enter
lcall
ret
test
mov
pop
pop
fstpl
or
fimuls
mov
loope
lcall
mov
lret
imul
mov
clc
out
pop
mov
das
lret
mov
shl
adcb
ja
pop
push
pop
scas
pop
sbb
inc
xor
cli
sbb
add
int
cmpsb
xchg
lds
mov
in
unpcklps
jbe
fsts
daa
inc
or
xchg
sub
icebp
and
mov
loope
dec
insl
xchg
lahf
sub
fwait
arpl
push
arpl
aad
pop
jmp
loop
divl
test
sub
or
nop
addr16
inc
push
push
sbb
or
pop
push
add
sbb
mov
jmp
mov
movsl
test
imul
and
out
stos
inc
lcall
test
cld
dec
daa
es
arpl
outsl
cmp
cmp
cmp
stc
jl
xchg
push
cs
movsl
dec
lcall
inc
jl
gs
insb
into
jno
adc
ljmp
fldt
lods
pop
sarb
push
repnz
mov
scas
mov
mov
in
push
cmp
adc
cs
adc
ljmp
adc
into
sahf
insl
jecxz
dec
dec
push
mov
out
scas
jo
in
and
inc
imul
cwtl
fcoms
aas
mov
dec
adc
adc
xor
dec
mov
enter
ffreep
mov
jne
jge
adc
das
lds
inc
sbb
xor
jg
jne
cmc
notb
inc
repz
sub
mov
inc
stos
in
xchg
ret
add
cmovg
inc
push
sub
push
push
lea
fnstsw
pop
pop
lret
int
ret
test
out
hlt
add
mov
in
notl
test
pop
pop
movsl
push
repnz
mov
js
test
movsl
aaa
ss
cmc
push
add
jl
cli
jl
jnp
aas
cld
fcompl
and
mov
adc
or
testb
fsubrs
push
mul
dec
xor
mov
fsts
or
loopnew
clc
push
pop
enter
and
add
fidivl
int
gs
in
adc
out
das
cmc
jp
xor
cs
mov
lahf
dec
xor
cmc
jae
pop
int
jecxz
pop
inc
repz
cmp
pop
push
and
mov
sub
jle
and
push
push
clc
push
lret
xchg
mov
adc
mov
ficompl
mov
dec
mov
movsb
dec
jbe
mov
xchg
idivl
dec
lods
inc
dec
loopne
into
xchg
fmull
imul
int3
xchg
je
or
out
push
pop
sar
xor
insb
sub
push
sbb
enter
fs
pop
jbe
dec
adc
insb
add
jg
lret
push
mov
shrl
add
xor
mov
pop
sbb
adc
or
out
outsl
push
inc
mov
pop
subl
out
outsb
adc
dec
mov
push
dec
notl
pop
pop
out
movsb
inc
orb
adc
scas
pop
and
xchg
fcmovnb
add
mov
shrb
mov
cmpb
daa
in
xlat
jmp
inc
pop
rcll
movsl
mov
push
and
fnsave
xchg
or
mov
out
imul
fdivrs
inc
adc
mov
xchg
idivl
in
or
mov
std
adc
scas
fdivs
inc
pop
daa
cmp
pop
sub
fcoml
and
fisubrl
push
push
jge
inc
cli
filds
daa
test
addl
adc
lret
lahf
addb
cld
outsb
subl
idivb
mov
std
scas
xchg
xchg
ljmp
movsb
mov
int
cmp
int3
loope
jp
dec
out
ret
inc
mov
repnz
push
rcll
mov
std
sub
cli
stc
movsb
and
push
or
adc
and
inc
loope
mov
xor
xor
mov
call
iret
fcmovb
or
or
sub
lods
pop
test
stos
lds
jns
in
cwtl
mov
lahf
je
mov
sahf
add
cld
dec
mov
pushf
sarl
lret
adc
cmpsb
push
fimuls
or
out
lret
leave
or
in
xchg
jo
pop
insb
mov
into
ret
jecxz
push
cmp
push
push
movsb
bound
out
and
rorl
leave
or
loop
sahf
cmp
aas
jnp
xchg
cltd
das
dec
in
push
fiaddl
sub
jmp
lods
jno
pop
sub
fmuls
xchg
ljmp
inc
leave
iret
push
sbb
scas
notb
xchg
xchg
cmc
fdivl
sub
sub
add
mov
lds
or
jno
xor
push
add
push
add
inc
cmp
imull
adc
pop
mov
loope
mov
scas
cld
insb
adc
inc
test
daa
lods
jno
mov
ss
pop
dec
pusha
stos
shrb
dec
es
adc
xchg
ret
insb
imul
incb
int
or
or
outsl
push
jnp
pop
sub
gs
xor
and
add
popa
push
sub
ds
xor
mov
ds
jle
mov
xchg
fisubrs
adc
jnp
add
ret
minps
ss
lahf
push
jb
shrb
sbb
notb
sbbl
add
add
pusha
std
lods
and
or
iret
pop
or
in
push
out
cmp
call
or
xchg
jl
adc
push
div
pop
mov
cmp
lods
pop
imul
push
add
dec
lahf
call
test
imul
mov
pop
in
in
push
push
mov
sbbl
sub
leave
inc
mov
popf
xchg
push
or
push
in
sbb
imul
call
xchg
das
imul
fstps
mov
mov
mov
mov
in
pop
sbb
pop
enter
es
outsl
xor
xchg
imul
push
shrl
dec
leave
aaa
add
mov
lahf
sbb
loopne
call
ss
mov
rclb
loope
subb
xor
lds
sarl
aam
xlat
mov
jns
cmc
add
int3
xchg
jns
ds
pop
inc
or
lahf
pop
inc
xchg
jmp
test
pushf
iret
mov
sub
sbb
addr16
ss
leave
hlt
cmp
cmp
imull
push
imul
sbb
scas
sub
mov
stos
mov
test
cmp
pushf
in
adcb
push
jp
jae
ds
dec
mov
in
xor
inc
fdivr
pushl
ja
pusha
out
js
in
sbb
cltd
or
std
ss
mov
cmp
inc
inc
movsl
out
lods
add
sysret
mov
fmul
rcr
dec
xor
adc
pop
jecxz
dec
dec
push
jmp
ffree
fistl
lods
mov
ja
sbb
jmp
and
sub
inc
add
push
loop
sti
hlt
lret
mov
aam
fstps
xchg
stos
jno
arpl
shl
js
mov
sbb
jbe
xchg
push
add
shl
mov
enter
in
xor
nop
ja
clc
lcall
push
mov
cmp
jecxz
mov
repnz
mov
pop
cli
mov
sub
mov
rorl
lcall
fbld
dec
outsl
les
scas
lcall
aad
les
inc
mov
mov
out
repnz
push
inc
mov
add
ret
vunpckhps
xor
lods
or
lods
cs
push
pop
aam
xchg
shll
aas
mov
sbb
out
leave
insl
lcall
xorl
mov
inc
ret
dec
cmpsl
mov
add
je
push
int
sub
and
xchg
rcr
jbe
mov
push
bound
das
fwait
xlat
cs
or
pop
xor
xchg
push
movhps
sub
add
lret
lea
cmp
xchg
and
leave
lcall
cmp
cmc
mov
stc
icebp
flds
adc
cmp
stc
jl
push
in
xchg
stos
xchg
pusha
inc
inc
jbe
fcmovnu
in
push
fsubrp
xor
stos
ds
mov
jbe
and
push
or
push
cmpsb
lock
or
mov
cmp
js
sub
sbb
es
xlat
popf
mov
popf
call
xchg
dec
or
sub
xchg
dec
fcoms
orb
ss
mov
jb
inc
mov
lock
scas
sub
iret
push
push
mov
scas
xor
cs
xor
xchg
je
mov
call
jne
gs
pop
sub
adc
push
or
xchg
addr16
pop
jp
jno
mov
mov
or
jae
fldenv
insb
lret
mov
push
icebp
sbb
adc
jae
cmp
adc
std
mov
fs
push
sbb
mov
sub
out
and
sti
sbbl
sarb
mov
push
and
push
or
fcompl
nop
cmp
mulb
insl
jae
sub
test
lret
test
and
inc
shll
cmpps
push
enter
cld
lds
ficompl
out
f2xm1
jae
repz
lds
mov
div
inc
mov
inc
popf
loope
xchg
mov
mov
fwait
add
pushl
xchg
pushl
mov
xchg
es
jecxz
mov
mov
imul
movsl
jge
test
adc
cli
cmp
jno
xor
pop
mov
dec
pop
in
addr16
idivb
lock
enter
rcrl
test
popf
xchg
mov
arpl
xor
aam
cmc
cmp
out
or
mov
dec
ljmp
push
add
xor
decl
fs
lcall
jmp
cmp
movsl
dec
mov
fwait
and
roll
movsl
sbb
push
xchg
pushf
rorl
fs
adc
out
pop
fwait
scas
mov
stc
mov
cmp
lahf
mov
in
hlt
das
test
xchg
ja
pop
adc
pushf
sub
mov
inc
cmp
jno
cld
test
hlt
xchg
adc
imul
jae
jle
jp
rcrb
out
add
loop
fisubl
je
sub
jb
adc
in
rol
sbb
inc
mov
adc
sbb
lods
out
gs
adc
inc
loop
mov
in
daa
jecxz
scas
inc
pushf
adc
ret
add
fsubrl
je
xchg
adc
pop
and
in
addr16
jbe
shll
outsb
dec
jmp
int3
movsl
pop
sahf
jo
and
data16
sub
in
lret
ljmp
cli
xor
fldcw
jbe
push
dec
pop
sbb
or
and
mov
call
ret
lods
xchg
cs
mov
insl
lret
loopne
fwait
lahf
ljmp
pop
jg
and
jecxz
ja
stos
popf
shll
pop
imul
dec
enter
std
test
jno
or
insl
daa
xlat
sbb
in
push
sbb
add
cmc
clc
inc
cmp
and
mov
or
sar
mov
dec
jb
loope
push
dec
cmp
pop
sbb
rclb
xchg
mov
fst
sbb
out
xchg
push
movsl
movsl
sub
arpl
adc
xor
pop
mov
xchg
hlt
xchg
stos
cmp
mov
je
aas
enter
and
loope
inc
xchg
lea
add
adc
dec
xor
repnz
arpl
andl
pop
sbb
loopne
cmpsb
xchg
int
lock
popf
fsubrs
sub
dec
mov
xchg
inc
sahf
fists
sbb
jne
hlt
add
jmp
es
mov
adc
dec
pop
stc
cmp
xorb
test
pusha
sti
pop
shrl
cmpsl
inc
sub
jo
sbb
mov
bound
mov
push
and
xchg
arpl
out
xor
cwtl
clc
push
push
hlt
sbbl
mov
iret
push
cld
mov
push
adc
fdivr
add
mov
push
repz
addb
push
sbb
daa
ljmp
mov
pop
sub
lds
dec
adc
shrl
cltd
rolb
mov
out
dec
cmp
mov
mov
add
idivl
ja
loop
test
movsl
mov
outsb
repz
sbb
fwait
xchg
cli
lret
push
mov
cs
pop
sbb
test
xchg
jecxz
jg
sub
add
lods
aas
add
sub
sti
loope
mov
stos
xor
sub
in
xlat
sbb
cmp
mov
and
loope
and
loopne
dec
cld
idivb
and
test
sbb
cld
shlb
cmp
call
dec
out
inc
add
pop
pop
testb
xor
loopne
popa
jle
lcall
or
cmovae
data16
xchg
ja
dec
xor
std
lahf
lcall
sub
sahf
inc
pop
scas
xor
push
cmp
inc
negl
cmp
mov
sbb
out
int
add
enter
adcb
cmp
rorb
or
cmp
jl
sub
outsl
sbb
jl
jmp
stc
icebp
xchg
sub
xor
pusha
sbb
stos
fcompl
in
out
pusha
pop
fadds
lds
orl
gs
and
out
mov
mov
stos
std
jne
xchg
jbe
pop
cmpsl
adc
add
sbb
inc
add
out
mov
jnp
xorl
mov
mov
pop
or
inc
scas
mov
or
adcb
int3
jns
push
repnz
or
fwait
sub
or
cli
imul
pop
lods
int3
add
pop
mov
mov
mov
ficomps
mov
ja
jle
xlat
pop
jle
mov
pop
cmc
inc
popf
push
mov
push
mov
stos
mov
mov
sub
jg
sbb
cltd
mov
fcoms
push
addr16
push
fldl
xor
dec
xor
shll
std
jnp
cmp
xor
cmc
mov
xor
and
lods
aad
inc
fisubl
cwtl
push
out
adc
xchg
push
mov
sbb
call
and
mov
push
xchg
iret
enter
mov
dec
pop
fiaddl
cmpsb
cld
sub
test
mov
mov
lock
sub
and
mov
sub
adc
push
mov
les
pop
sub
js
les
fldl
fidivs
add
and
ret
sti
cld
in
ret
sub
pop
shlb
fcom
jecxz
sbb
aaa
dec
jecxz
mov
bound
ss
ret
sti
mov
movsb
lret
iret
mov
inc
test
loopne
jo
mov
out
cmp
cmp
cmpsl
sbb
in
push
fcomip
sbb
cmp
xchg
push
sahf
imul
jmp
out
stos
and
sbb
lods
push
pop
push
fsubs
or
cmp
test
dec
sarb
inc
call
mull
in
scas
in
push
mov
shlb
lods
jecxz
aas
cli
push
jnp
leave
mov
mov
sub
out
adc
hlt
mov
inc
mov
adc
sub
call
hlt
idivb
movsl
out
fdivs
lea
loop
mov
xchg
fs
sbb
jne
xchg
adc
rolb
lods
or
sub
bound
daa
mov
mov
mov
xchg
call
sbbb
cmpb
sbb
inc
push
mov
testb
lds
lret
cwtl
mov
in
iret
outsl
cmpsl
mov
inc
push
out
je
cmpb
dec
out
imul
jbe
xor
xchg
xchg
cld
into
fwait
mov
cmp
mov
mov
lahf
dec
lods
or
js
orb
mov
jne
push
sbb
inc
daa
ret
lcall
xor
pop
or
jbe
pop
ljmp
iret
outsb
fistpll
dec
inc
add
cmpsl
inc
jmp
pop
mov
int
arpl
adc
push
shrl
inc
or
cli
js
adc
stos
xor
inc
rcrl
inc
push
mov
inc
outsb
hlt
push
andb
sti
fsubrs
inc
cmpl
js
repz
push
mov
in
jae
jl
testb
sbb
stos
cmpsl
sarb
mov
xchg
dec
and
xlat
in
mov
pop
add
sbb
stos
aaa
fwait
or
mov
mov
leave
and
xchg
fidivrl
mov
outsb
stc
mov
push
sbb
addr16
jne
insb
scas
stos
mov
inc
lods
lds
jns
xchg
adc
fmuls
or
jnp
cmp
or
mov
lds
fs
arpl
into
mov
xchg
jge
push
push
les
clc
imul
add
mov
data16
mov
cli
push
mov
ss
fwait
and
jmp
pop
dec
aas
rolb
fxtract
in
mov
arpl
lods
cmp
cmpsb
pop
jg
push
inc
hlt
and
push
cwtl
sbb
ljmp
inc
outsl
pop
or
jmp
cmp
sub
shl
sbb
aad
sub
icebp
std
out
outsl
or
leave
push
repnz
std
mov
std
test
rclb
mov
pop
inc
mov
xchg
dec
lods
xor
add
and
mov
fsts
pop
or
or
dec
jg
int
iret
mov
jno
dec
cltd
out
inc
lea
out
sbb
fs
jno
mov
cmp
data16
pop
aaa
mov
imul
push
pusha
sbb
jb
jnp
jle
bound
mov
push
pop
push
jle
adc
or
and
dec
imull
jmp
shll
adc
mov
xchg
xlat
lahf
dec
in
lcall
pop
push
mov
popa
out
mov
popa
insl
add
xor
fstpl
pop
out
les
das
adc
and
lods
add
and
or
test
add
dec
test
enter
stos
push
ret
xchg
orl
dec
int
jp
adc
cmp
or
xor
dec
fisubl
int
fnstenv
frstor
sbb
sub
mov
bound
mov
mov
test
aaa
int
adc
push
and
adc
xchg
rolb
or
out
inc
negl
sbb
rclb
cs
or
xchg
mov
cmc
pop
jecxz
cmp
les
andb
sub
dec
je
add
jmp
rolb
aaa
call
movsb
xor
push
or
mov
mov
cmp
int3
mov
fldl
mov
imul
inc
xchg
aaa
jo
xor
addr16
inc
stc
ljmp
int
mov
dec
xchg
hlt
add
mov
ficomps
add
lret
and
rcrl
jno
arpl
in
add
std
xchg
or
adc
out
or
test
dec
stc
lret
push
push
xchg
outsl
push
pop
mov
fsubl
fstpt
lret
test
int3
test
adc
sbb
lods
jns
mov
jns
add
out
push
ljmp
lods
dec
pusha
sub
add
push
xchg
icebp
and
push
mov
jg
inc
out
fs
jle
mov
je
leave
adc
in
aas
and
mov
scas
mov
jle
enter
jecxz
out
sbb
pop
insb
mov
data16
repz
popa
mov
jle
mov
pop
js
insb
sbb
mov
pushf
into
mov
pop
ror
rcrb
cli
call
test
inc
mov
dec
inc
scas
push
inc
sahf
cmpsl
ror
pop
cmpsl
sub
sub
loopne
pop
cmc
inc
mov
sbb
pop
adc
or
scas
aam
das
popf
in
add
add
xchg
out
mov
test
pop
stos
bound
lods
and
loop
out
mov
cld
push
loope
push
sub
add
sbb
sbb
add
xorl
es
repz
cmp
sar
loop
into
sbb
aaa
jmp
insl
sub
cmc
pop
sub
adc
xchg
sub
rcll
xchg
push
sbbl
movsl
jne
cmc
stos
xor
cmpsl
cs
loop
shrb
add
cmp
push
xchg
dec
lods
or
out
inc
cmp
and
push
cmp
jno
jne
push
aam
pop
dec
xchg
ret
push
dec
fisttps
sbb
add
jmp
cmp
push
pop
neg
pop
int3
int3
loope
insb
fiaddl
faddl
xchg
dec
imul
mov
xchg
mov
add
std
rorb
out
jbe
push
ltr
and
sbb
xorb
xor
outsl
ss
sarl
xchg
xor
jae
mov
xchg
push
mov
cmp
mov
mov
int
mov
mov
dec
sbb
or
push
hlt
pusha
movsl
pop
mov
movsl
cmp
leave
rorb
inc
cmpsl
cmp
jmp
ror
mov
es
enter
cmp
jno
xor
inc
stos
js
xor
lods
and
and
ljmp
xor
sarl
dec
jecxz
pop
cmp
movsl
mov
cmp
out
dec
xlat
test
loopne
mov
out
push
jne
cmp
mov
outsl
push
clc
clc
sbb
imul
xchg
jecxz
inc
inc
rclb
pop
repnz
lret
fs
das
mov
out
pop
in
mov
dec
mov
add
xor
out
mov
adc
aad
and
and
in
addr16
fisubl
adc
in
nop
xchg
dec
repz
cmp
fidivrs
push
idivl
pushf
clc
jns
lret
aaa
cmp
fs
ret
or
mov
mov
std
inc
mov
xlat
mov
push
aam
aas
ret
cmp
jg
lods
jne
xchg
into
add
dec
sbb
popa
cld
or
test
jge
pop
push
jl
or
mov
dec
xchg
and
rorb
xchg
adcb
push
insl
cmpsl
call
in
scas
sbb
jae
jb
lret
cwtl
and
daa
mov
decb
cmp
pop
dec
insl
bound
rcrl
js
dec
jbe
stc
mov
arpl
popa
stc
xor
jo
fcomps
push
mov
popa
xor
sbb
fstpt
and
ret
insl
mov
jbe
xchg
in
xor
push
inc
std
in
inc
es
dec
adc
subw
adc
in
cmp
mov
dec
xor
pop
bnd
inc
xlat
cli
xor
pop
nop
iret
cwtl
adc
xor
dec
adc
shrl
aaa
jb
sbb
jg
inc
adc
mov
mov
lods
shlb
aad
mov
and
xchg
out
push
ljmp
les
movl
xchg
int3
cmp
push
test
push
xor
imul
adc
jnp
mov
xor
inc
cmp
incl
sti
aas
lods
lahf
es
adc
aaa
stos
and
sbb
loopne
adc
push
repz
xchg
push
push
lret
pop
sahf
fmull
push
fnstcw
push
leave
xor
std
inc
int3
fwait
mulb
jl
mov
imul
test
popa
mov
fs
push
in
loopne
mov
inc
adc
pop
fwait
xor
xchg
sti
cli
fists
cs
sbb
jp
xchg
and
outsl
ret
mov
test
in
fwait
mov
int3
mov
cmp
push
mov
mov
ret
stc
fbld
push
test
lods
jae
sbb
stos
inc
xor
pop
add
mov
enter
fwait
insl
in
sbb
add
ja
add
inc
cmp
sbb
cli
fisubs
add
js
mov
sti
pusha
pop
gs
jnp
ret
pop
push
je
mov
mov
mov
sahf
sbb
cmp
sub
jne
pop
jb
fistps
addb
in
pushf
xchg
sbb
outsl
jecxz
and
add
test
lods
sti
inc
gs
in
fmulp
imul
xor
sbb
and
pop
outsb
pop
lock
xor
lock
cvtps2pd
lahf
mov
dec
loopne
mov
jo
mov
and
test
ds
jns
jno
xor
leave
cmpsb
mov
lock
hlt
pushf
repz
lcall
xor
or
in
push
ret
pop
mov
push
call
pop
dec
cmp
repnz
xor
in
lock
pusha
push
mov
jl
das
inc
jmp
mov
rcrb
sbb
cmpsb
xchg
enter
daa
aam
fistps
int3
or
in
movsb
push
xchg
sub
push
cmpsl
out
pusha
xor
and
pop
push
mov
dec
mov
pop
jne
insb
shr
shrl
push
loop
call
mov
add
out
leave
ret
inc
scas
add
cmp
xchg
push
das
loop
sbb
push
jno
ret
pmaddwd
cmp
jns
popa
mov
arpl
enter
icebp
ret
mov
fsubrs
push
mov
and
and
mov
cmp
imul
adc
jge
cmpsl
sbb
std
mov
sti
sub
jle
push
insl
enter
cli
into
fisttpll
loope
push
movsb
sbb
int
mov
pusha
stos
mov
loop
push
fdivr
fstpl
xchg
insb
push
mov
jecxz
sub
or
test
sbb
scas
outsl
fcompl
or
jns
add
sbb
and
insl
jbe
xchg
mov
cmpsl
lahf
aam
addb
jo,pt
insb
shrb
fsubl
dec
mov
push
xor
sbb
lret
mov
dec
out
adc
mov
aam
adc
mov
and
out
inc
sub
xchg
pop
scas
xorb
pop
icebp
fsubl
xchg
sarb
sbb
mov
push
loopne
mov
add
into
xchg
popa
xor
jae,pt
imul
cwtl
mov
push
out
arpl
pop
shrb
sub
outsl
out
fdivrs
xor
push
sti
mov
repz
dec
xchg
shrl
mov
fld
push
xchg
es
push
mov
out
xchg
jecxz
xor
sub
test
imul
pop
mov
or
les
inc
mov
imul
push
lahf
mov
push
jmp
lahf
jl
jmp
adc
jmp
push
into
dec
test
push
dec
test
jns
add
lahf
jecxz
add
mov
mov
pop
out
sbb
frndint
inc
push
fisttpl
add
or
push
pop
xor
fdivrs
fistpll
inc
dec
lods
adc
out
rcll
rorl
push
jnp
jle
pop
int3
mov
mov
push
sbb
stos
subl
adc
mov
add
imul
pop
in
ret
cld
mov
arpl
sbbb
push
outsl
int
pop
into
and
dec
mov
sbb
xor
mov
xor
gs
adcl
clc
jns
ja
xchg
nop
push
pop
hlt
lcall
js
dec
out
negb
xor
loope
out
xchg
clc
sub
mov
mov
popa
push
cli
ljmp
sti
adc
iret
pusha
mov
pop
ss
in
sub
lods
and
ret
push
cmc
cmp
xor
cmp
xlat
rcrb
mov
cmp
xor
mov
sahf
loopne
jmp
mov
and
jbe
fwait
nop
jnp
push
mov
inc
outsb
mov
jne
lods
sbb
imul
mov
cld
cld
pop
test
push
cmp
add
sbb
movsl
sbb
mov
imul
or
dec
mov
int
jmp
mov
data16
cmpsl
cs
or
dec
jmp
mov
test
out
push
into
inc
cli
out
lcall
fwait
sbbl
adc
mov
and
xchg
mov
add
mov
push
xor
dec
clc
out
and
adc
in
jnp
sub
int
lahf
cld
leave
scas
imul
mov
popa
jne
dec
ss
or
xchg
sbb
les
rclb
adc
test
mov
cmpsb
adc
testb
fcmovu
inc
adc
inc
icebp
dec
scas
enter
fistpll
jns
loopne
pmullw
mov
in
rcrl
sbb
lret
push
pop
push
dec
pop
cmpsl
pop
cs
lds
fcom
fsub
jp
add
xchg
jg
cmp
xor
and
xor
stos
mov
rcrl
and
sbb
push
inc
pop
repz
addr16
jg
fimull
cmc
icebp
adc
stos
jge
add
push
push
lcall
adc
stos
sbb
lea
popf
and
xor
orb
fadds
das
mov
lea
adc
sbb
cwtl
mov
jae
push
pop
daa
dec
lea
jns
divb
adc
fistl
inc
int
xchg
fs
fsubs
fdiv
mov
adc
push
cltd
add
pop
jge
dec
pop
repz
push
lret
or
cs
adc
ficoms
outsl
ljmp
mov
out
movsl
adc
addr16
mov
and
in
insb
push
cmc
movsl
xchg
test
leave
mov
xor
mov
insl
es
lods
test
xchg
sub
in
and
cmp
js
ds
dec
repnz
push
mov
mov
mov
add
dec
push
loop
inc
call
lahf
ret
arpl
lahf
cmc
loop
cmc
nop
cmpsb
das
dec
jno
inc
andb
pop
aam
stos
cmp
pop
clc
out
inc
xchg
iret
and
mov
sbb
jmp
and
lret
mov
mov
cmpsb
sbb
cld
or
aam
hlt
shlb
call
pop
aam
xor
cmpsl
add
repz
add
adc
or
loopne
mov
xor
and
imul
or
loopne
sub
insl
cwtl
push
xor
mov
push
push
inc
dec
nop
mov
jnp
mov
imul
repnz
inc
ja
adc
cmpsb
imul
dec
dec
and
in
mov
insb
sbbb
pop
aaa
xor
jno
popa
das
and
adc
cmp
sub
dec
icebp
push
pop
mov
xchg
leave
or
xchg
out
push
mov
xchg
and
push
jge
cs
adc
notb
outsl
dec
xor
adc
mov
xchg
cld
inc
mov
jns
aam
sbb
pop
lods
repz
push
rcll
push
sbb
mov
aaa
lds
rol
sbb
addr16
std
dec
mulb
decl
pop
push
pushf
push
div
out
lret
push
cld
mov
lcall
ss
push
lcall
in
xchg
lock
shlb
sbb
cmp
mov
push
mov
sbb
push
rcrb
jmp
push
neg
scas
out
lods
jmp
dec
mov
lock
lea
jmp
sub
clc
push
add
gs
dec
loop
les
scas
fldl2e
bound
dec
pop
lret
cs
loop
call
aaa
xor
cmpb
push
fnstcw
push
icebp
push
outsb
jns
stos
push
notl
loope
or
out
cmp
jmp
idivb
and
mov
xchg
mov
xor
and
add
lods
fcoml
xchg
jno
scas
mov
cmpsb
xchg
loop
adc
popa
pop
dec
dec
jo
mov
fiadds
dec
ljmp
outsb
or
sbb
dec
sbb
int
es
sbb
dec
repz
sbb
adc
aam
ljmp
mov
mov
adc
cs
xchg
jae
out
mov
mov
inc
and
cli
xchg
jmp
nop
enter
outsl
and
push
not
pop
mov
lods
aas
mov
out
push
orl
xor
xlat
mov
or
repnz
ds
mov
cmpsb
shlb
sbb
shl
mov
sub
arpl
pushf
aas
movsb
jecxz
mov
fildl
mov
add
pop
sub
dec
push
mov
movsl
mov
daa
fwait
jnp
xchg
insb
jnp
dec
push
pop
addr16
xor
ds
stos
ss
and
mov
mov
gs
in
insb
jmp
sub
mov
out
pop
xchg
and
and
cli
lcall
pop
push
or
hlt
test
iret
cmp
xlat
dec
adc
loopne
dec
mov
adc
outsb
mov
popa
sti
xor
mov
rolb
inc
inc
pop
test
cmp
mov
sub
xchg
fcoml
mov
stos
stos
shll
xor
pop
mov
inc
test
sbb
jno
mov
fstl
dec
xchg
std
pushf
add
mov
jbe
or
jle
inc
shlb
mov
inc
mov
lods
xchg
sbb
inc
add
inc
movl
scas
clc
cmp
push
out
fdivp
stos
adc
adc
cmp
ss
xor
or
add
or
sbb
out
dec
fstps
push
dec
add
xor
cmpsb
call
jae
fdivl
jns
nop
out
divb
cmp
mov
bound
mov
test
aas
jae
jmp
cld
sub
inc
jb
iret
hlt
test
scas
dec
push
sbb
dec
cmp
add
jns
jo
imul
lods
sbb
cmc
xchg
arpl
sub
fmulp
mov
xchg
inc
pop
stos
adc
hlt
mov
jb
leave
jns
push
adc
mov
lret
ret
ret
mov
mov
pop
rcr
cmp
xor
mov
mov
lds
push
add
jg
inc
pushl
loope
mov
arpl
lret
pop
jl
mov
pop
data16
lcall
cmp
push
dec
cmp
pop
movsl
lods
gs
push
iret
cmc
jge
pop
out
push
dec
push
ja
dec
lahf
add
sbb
dec
popa
sub
mov
repnz
faddl
and
dec
cmpsb
ja
out
incl
xor
loope
or
xchg
cld
lret
cli
lods
cmp
mov
sahf
jne
sub
push
cwtl
in
cmp
insl
mov
sbb
xchg
es
mov
outsb
mov
add
adc
ljmp
mov
cmp
shlb
mov
push
call
push
out
ret
jbe
cmc
sub
dec
cmp
fidivs
aaa
jg
and
mov
adc
into
loop
repz
push
cli
lcall
sbb
cmc
and
add
repz
mov
pop
loop
pushf
aad
add
mov
and
adc
sbbb
cmp
add
xchg
jae
adc
pop
das
xchg
addr16
pop
pop
cwtl
or
mov
std
adc
in
sbb
mov
fnsave
pop
pop
es
mov
inc
outsb
cs
in
nop
add
out
pop
mov
out
fistps
and
bound
out
push
adc
dec
cmp
and
mov
ret
enter
cmc
sarb
dec
sub
or
rcll
add
cmp
xlat
sbb
mov
outsl
adc
mov
popf
mov
stos
adc
add
add
ficoms
xchg
lock
cld
mov
xchg
dec
in
sbb
xlat
btr
mov
xor
mov
mov
xor
mov
cmp
inc
and
mov
inc
cmpb
loop
mov
lahf
test
pop
xor
and
pop
jnp
shll
rep
and
mov
movsl
inc
mov
push
inc
mov
das
push
repz
fdivp
mov
das
outsb
xor
xor
loop
xor
or
sti
dec
jae
push
mov
pusha
rcr
in
iret
sub
out
jl
pop
movsb
int
adc
inc
mov
xchg
icebp
mov
insl
nop
andl
mov
mov
cmpsl
xorb
cltd
sub
adc
sub
push
cmpsl
mov
inc
cs
movsb
cmc
aas
jl
int3
mov
lret
out
fists
and
inc
add
pushf
pusha
fistpll
sbb
psubq
ja
and
mov
pop
add
es
movsl
fstpl
inc
mov
pop
hlt
js
cs
add
pop
and
idivb
lea
push
jnp
jg
and
inc
push
cmpsl
clc
jecxz
in
sbb
gs
outsb
int
inc
leave
shll
mov
ja
test
cmpsl
or
push
outsb
and
cli
cmp
mov
shlb
lret
inc
sub
sub
cwtl
mov
test
xor
scas
or
fisttpll
jne
lods
leave
lret
pop
and
icebp
cli
mov
inc
outsl
nop
stos
jne
das
mov
mov
adc
jge
cmp
mov
jo
mov
js
xlat
out
test
push
shl
pop
mov
pop
dec
mov
push
push
test
insb
in
jge
and
pop
sbb
stc
int
inc
cwtl
fprem
in
cmp
dec
mov
sbb
dec
dec
ret
sbb
bound
fwait
pushf
inc
repnz
int3
jl
faddp
xor
repz
in
mov
push
icebp
outsb
out
ljmp
and
stos
enter
in
ficoml
mov
mov
adc
mov
push
aad
fcmovnbe
add
adc
lods
mov
mov
rorb
add
sbb
rcrb
xchg
mov
pop
sbb
clc
movsb
dec
add
iret
sbb
aam
jmp
inc
push
sbb
xchg
pop
icebp
mov
sar
in
sbb
xchg
or
xor
push
daa
or
aaa
aam
insl
pop
push
push
addb
sub
mov
dec
xchg
mov
nop
push
dec
fldenv
lahf
mov
lods
loop
mov
sub
xchg
adc
jg
jecxz
dec
xchg
mov
mov
enter
movsl
aad
jae
dec
fisttps
jns
xlat
sub
push
adc
cltd
mov
sbb
js
and
jecxz
cmp
in
mov
idiv
mov
pop
rcrb
or
jmp
push
stos
ficoms
lods
xchg
add
adc
test
mov
inc
dec
test
imul
inc
jb
add
sbb
scas
add
insb
bound
and
jo
sbb
adc
out
push
rcr
enter
daa
out
jb
call
les
aam
jns
xchg
in
and
in
rorl
or
pop
xchg
lret
xor
mov
call
jbe
in
xor
push
stc
pushf
and
push
jns
push
jmp
mov
jle
outsb
shr
mov
mov
add
mov
sub
and
outsb
xchg
xor
daa
hlt
pop
test
insb
je
jo
inc
dec
ja
dec
jl
xlat
ljmp
rcr
inc
push
mov
pop
ret
out
cmp
push
std
xlat
jnp
orl
lods
in
sub
scas
add
dec
push
cmp
sbb
or
xchg
loope
in
jb
dec
mov
jge
aaa
sbb
frstor
addr16
bts
sbb
test
sub
stos
movsl
stos
mov
mov
fsubr
cmpsb
testl
pop
rorb
jmp
incl
xchg
lea
push
xor
stos
push
push
cwtl
addr16
int3
dec
mov
pop
mov
jae
inc
xorl
pushf
addl
mov
push
lock
or
xchg
xchg
and
loopne
das
notl
jae
add
iret
jl
push
outsl
fst
xor
pop
pop
xor
shrl
xor
xchg
imul
leave
cwtl
xchg
xchg
mov
sbb
lea
dec
dec
aad
sahf
cmp
add
xor
mov
push
sti
add
inc
sub
rclb
iret
incl
fdivp
out
mov
out
imul
lods
stos
gs
cmpsb
outsl
imul
add
xlat
mov
jae
sbb
fstpt
xchg
daa
lret
test
xor
mov
cmp
fsubl
mov
jmp
sbb
mov
daa
cmp
sub
les
lods
shl
out
jbe
cmc
movsl
loop
fidivs
inc
pop
dec
sub
sbb
incl
enter
lock
cmpsb
leave
pop
pop
jmp
fildl
pop
adc
lods
xchg
mov
mov
push
call
imul
cmp
aas
ljmp
jae
push
iret
shlb
and
xorl
stos
and
cs
pop
cmpsl
sub
push
adcl
ss
icebp
or
pop
popf
sbbb
jge
add
sarb
test
jmp
gs
and
bound
popf
out
jbe
adc
jbe
test
push
pop
das
outsl
pop
mov
data16
xor
test
loop
add
push
or
int
addl
inc
andb
out
out
xchg
subb
sub
shll
jmp
mov
out
jl
xchg
xchg
dec
or
jo
sahf
mov
sub
mov
sbb
pop
jmp
mov
cs
insb
dec
test
mov
dec
aam
shlb
popa
dec
aas
adc
icebp
dec
add
xchg
mov
xor
daa
jae
fdivrl
adc
adc
out
ret
jp
hlt
mov
xor
pop
inc
sbb
notb
jbe
xchg
cmp
add
dec
cmp
xorl
sbb
dec
in
dec
jle
lods
loopnew
push
shlb
xor
push
and
mov
cmpl
dec
mov
lods
jb
inc
or
out
cmp
outsb
pop
push
add
jmp
and
out
loopne
mov
xlat
jl
adc
cld
and
mov
mov
inc
add
inc
nopl
inc
cmp
add
or
mov
ficomps
scas
mov
pop
nop
loope
or
cmp
cmp
popa
jbe
mov
or
sbb
mov
push
inc
sbb
fucom
rcll
ljmp
lahf
in
jbe
stc
and
lea
and
jecxz
dec
lea
sbb
mov
dec
sbb
lret
jnp
mov
flds
inc
mov
loopne
push
leave
aam
outsl
mov
test
das
cmovs
iret
outsl
lret
into
mov
test
mov
fs
jl
mov
cmp
jae
mov
ja
pusha
jecxz
sub
testl
pop
popa
mov
jo
xlat
jl
aam
adc
lods
mov
mov
and
xor
das
mov
push
pop
ja
push
push
mov
cld
adc
cmpsl
xor
jmp
cmp
jae
dec
xor
outsl
daa
or
js
lds
sti
and
xchg
xchg
adc
ds
daa
cli
incb
jp
mov
icebp
xchg
or
jl
rolb
out
cmp
push
fistpll
sbb
pop
push
dec
bound
and
inc
int3
cmpsl
mov
ss
in
sti
push
dec
adc
test
xor
mov
adc
jecxz
mov
push
loop
adc
cwtl
ret
gs
mov
int
adc
pop
ret
mov
xchg
inc
repz
clc
pop
mov
aaa
and
into
rcrb
push
mov
pop
popa
mov
cld
sbb
xor
mov
mov
xchg
push
je
lds
jns
pop
xor
jne
fnsave
into
out
dec
test
inc
push
sarb
repz
loope
lea
dec
test
xor
in
adc
sub
push
aaa
shrb
dec
and
push
xlat
adc
adc
movsl
loope
f2xm1
sbb
into
sti
mov
sbb
lcall
btc
jle
repz
out
stos
push
imul
xorl
cwtl
push
je
aam
int
loop
sbb
mov
test
mov
pop
in
cmp
xchg
pushf
xor
adc
jae
scas
loope
arpl
into
mov
cld
sbb
mov
dec
cld
sbb
pop
int
or
or
sbb
and
cmp
cmpsl
andl
push
cmc
and
push
and
scas
push
fwait
sub
push
mov
ss
rclb
adc
enter
cli
sbb
jle
mov
mov
adc
gs
int3
das
pushf
les
xchg
xor
addl
push
or
cmpsl
dec
sub
pop
fwait
loopne
sub
into
aad
jns
xor
mov
lock
mov
mov
cmp
mov
insb
cmpsb
mov
sti
cltd
or
mov
xchg
cs
outsb
push
cld
data16
inc
xchg
adc
stos
push
scas
sub
inc
pop
fldcw
cmp
mov
outsb
sub
loope
mov
jns
inc
and
sti
cmp
ret
jnp
dec
push
daa
test
dec
xor
addl
fs
cwtl
jl
je
mov
movsl
jl
movsb
add
push
sbb
incb
lods
adc
loopne
hlt
inc
mov
and
movsl
test
dec
psubb
ss
and
jle
test
ret
adc
add
retw
pusha
cmp
fisttpll
pop
repz
inc
lea
sti
in
mov
cmp
imul
in
ret
add
xchg
stos
push
pop
lods
sti
push
fbstp
daa
add
mov
mov
jnp
mov
lds
pop
enter
pause
dec
push
lret
dec
add
pop
mov
sbb
adcl
jo
cwtl
pop
in
fs
pop
lods
mov
stc
pop
lcall
xchg
mov
mov
pop
add
lret
int3
jle
mov
leave
cs
jge
in
mov
lret
es
stos
add
xchg
xchg
aad
leave
or
movsb
btc
inc
sub
inc
outsb
movsb
je
dec
cmp
mov
sahf
jge
dec
cmc
imul
test
decb
jmp
insb
jmp
fildl
ficoml
cld
sar
jle
cli
aam
das
dec
into
test
mov
iret
lret
inc
jo
mov
popf
ds
mov
lods
rdpmc
cmp
xor
sub
cmpb
fwait
cmp
int3
pop
cmpl
and
jmp
nop
repz
jge
and
js
add
cli
and
pop
pusha
test
xchg
xor
xor
dec
stc
sub
imul
add
sti
dec
adc
mov
mov
iret
xchg
jmp
or
lret
loop
lahf
out
ror
mov
inc
pop
stc
out
push
cmp
jl
pop
ds
outsb
das
jnp
dec
test
scas
into
mov
js
lods
and
bound
add
jl
adcl
lds
push
pop
daa
mov
into
lods
imul
xchg
inc
add
into
pop
mov
dec
and
cmpsb
dec
xorb
notl
and
add
insb
int3
pop
xor
xor
pusha
xor
jno
dec
in
and
mul
je
fs
inc
fistps
repnz
aam
pop
stc
outsb
cmp
jbe
cmp
push
adc
and
dec
mov
mov
aas
and
lods
icebp
movsb
mov
stos
cmpsl
sbb
sbb
sbb
orl
cmpsl
cmp
inc
fs
cs
std
dec
xchg
sbb
addr16
or
dec
push
pop
jne
popf
fistpl
aaa
adc
clc
xchg
xor
mov
out
mov
in
add
xchg
lea
lcall
mov
stos
mov
push
push
sbb
jecxz
cmpsl
sbb
les
mov
adc
mov
in
jp
mov
shrb
jge
mov
andl
out
dec
or
mov
jg
jb
mov
mov
std
pusha
or
sarb
paddd
mov
mov
fisttps
sub
out
popf
loope
out
rorl
movsl
leave
and
sbb
repz
jno
xchg
cltd
test
cmp
mov
adc
push
cs
mov
cmp
in
out
mov
addr16
popf
stc
sub
sarl
lods
xchg
xorl
inc
adc
in
cmp
mov
add
out
pop
rclb
lret
inc
sbb
movsl
add
sbb
sbbl
ret
inc
cmpl
push
push
popa
es
adc
pop
in
xor
adc
jl
pop
sbb
jle
sub
push
fisttps
loopne
loop
shll
test
shll
inc
and
sbb
js
inc
inc
lret
and
pop
out
push
out
push
in
sbb
xor
jo
jae
jbe
andl
add
dec
arpl
xchg
ljmp
xchg
inc
and
outsl
in
jno
repz
bound
pop
xor
fcmovne
iret
ret
xchg
fcmovu
mov
sahf
pop
ss
hlt
decb
lds
push
test
or
mov
adc
cwtl
inc
nop
leave
mov
rcr
or
push
and
leave
xor
push
aas
call
repz
arpl
cmpsb
lock
mov
dec
ljmp
mov
call
repz
mov
xor
inc
or
xorb
xlat
movsl
loope
sub
sub
cmp
xchg
mov
jmp
xchg
jge
mov
pop
jg
mov
adc
jae
push
inc
das
sti
jecxz
sbb
aam
loop
pushf
sahf
mov
mov
jg
inc
adc
out
mov
repz
pop
add
mov
pop
or
mov
adc
xor
xchg
xor
das
scas
cli
pop
das
call
inc
shl
fdecstp
add
cmp
dec
pop
leave
leave
aaa
mov
inc
ret
in
out
jg
sbb
call
sub
shrb
sbb
adc
es
dec
or
aam
cmp
mov
sbb
loop
add
sbb
vphsubdq
and
jle
xchg
inc
fnsave
stos
mov
cmovg
sub
or
loopne
aam
imul
adc
pop
and
cmp
insb
inc
dec
popa
out
pop
jmp
inc
pop
xchg
clc
push
pop
lahf
xor
outsb
mov
push
test
mov
stos
add
insl
jmp
pusha
shlb
inc
std
adc
je
nop
in
adc
cld
lock
lahf
bound
sub
or
lods
std
mov
test
inc
mov
mov
je
add
pop
and
scas
adcl
mov
je
pop
lret
jo
xchg
mov
sbb
cmp
cs
aam
lods
imul
insb
jl
lock
dec
mov
hlt
mov
stos
scas
out
jl
ja
add
repnz
inc
and
es
push
mov
stc
outsl
stc
jb
fiadds
adc
inc
inc
jbe
dec
addr16
sbbb
ds
out
mov
pop
add
cmp
aam
push
in
pop
movsb
mov
jbe
ljmp
or
shl
lret
sub
scas
in
jge
and
mov
lds
or
inc
cmp
xchg
mov
daa
push
fdivr
addr16
or
dec
cmp
jne
jp
movsl
adc
and
pop
icebp
or
push
push
push
ja
jne
das
outsl
leave
inc
test
inc
sti
icebp
popf
jecxz
sub
xchg
cs
pop
jg
addr16
and
je
into
inc
inc
mov
jp
xchg
sbb
lahf
jp
out
push
popl
mov
adcl
ja
sbb
add
xor
les
add
cmpsl
stos
pop
mov
mov
jb
inc
or
push
popa
stc
cmp
push
imul
inc
xor
flds
dec
loop
push
icebp
in
jle
shr
lods
push
sti
test
shlb
lcall
jmp
and
dec
sbbl
jp
aad
jno
sbb
mov
pop
push
repz
mov
pop
lods
sbb
jl
and
push
pusha
mov
pop
test
jns
fsubr
fs
shll
pusha
inc
mov
icebp
mov
mov
adc
andb
mov
xchg
outsb
jg
mov
ja
xor
or
mov
stos
jb
push
push
push
add
jae
inc
lods
jg
inc
aaa
out
cmp
outsb
push
je
inc
and
mov
jg
aad
fstpt
aad
cmpl
jg
or
ljmp
or
push
inc
sbb
lock
sub
je
dec
icebp
mov
sub
and
cmpsl
in
mov
cltd
cmp
jle
add
out
roll
inc
and
xchg
test
fnstcw
pop
dec
movsl
decb
mov
popf
inc
popl
mov
imul
test
sub
mov
xchg
test
int
xchg
movsb
add
xchg
call
lahf
sbb
xor
jmp
sbb
mov
xor
mov
hlt
cmpsl
pop
sub
jmp
fstp
push
insb
daa
aam
or
mov
inc
inc
jne
scas
pop
test
cmp
dec
jecxz
in
shrl
adc
jns
leave
jb
jle
push
mov
rorb
sbbb
cmpsb
shrb
popf
enter
movsb
repnz
sar
ret
lods
mov
pop
jne
xor
mov
iret
ret
cmp
stos
cmc
adc
pusha
jo
or
xor
nop
in
sub
mov
sub
rcrb
pop
orl
test
sub
mov
lcall
movsb
push
int3
lcall
xor
out
mov
xor
adc
inc
std
mov
sub
sbb
mov
sub
jge
call
xor
fwait
jb
arpl
sub
pop
lret
mov
fdivrl
int3
aas
pop
das
pop
jmp
pop
mov
pop
pop
aad
outsb
sti
ljmp
mov
jnp
or
in
enter
cmp
mov
ds
pusha
xchg
cmc
pop
sub
dec
sub
cmp
adc
pop
adc
push
and
gs
mov
ja
add
call
aam
iret
mov
pop
cmp
or
sti
xchg
add
sub
cwtl
and
jge
jns
cmp
ret
scas
adc
xor
sub
cltd
jmp
pop
les
cltd
pop
stc
cmp
cmp
cmp
cli
and
cwtl
lea
xor
call
rcr
mov
shrl
aaa
fwait
fwait
inc
xor
pop
mov
push
popf
push
orb
arpl
scas
dec
jns
mov
test
jno
jge
mov
push
into
fcomi
push
mov
push
repz
outsl
xor
mov
in
mov
movsb
mov
pop
dec
insb
adc
flds
mov
movsb
and
int3
pop
mov
sub
out
leave
insl
insl
inc
ds
gs
mov
lods
in
fidivrl
lock
in
dec
mov
or
xchg
les
cmp
push
arpl
mov
push
xchg
les
dec
mov
sub
sarl
rcrb
frstor
test
stos
pop
outsl
jg
add
fincstp
push
ja
int3
test
add
test
ja
jnp
cmc
int
std
xchg
sbb
sbb
es
xor
cli
mov
enter
jb
pop
mov
xor
sbb
popa
nop
jl
pusha
push
push
idiv
call
shl
mov
mov
ljmp
je
shrb
out
adc
xchg
push
inc
js
lock
xchg
std
icebp
mov
pop
lods
movsl
xor
loope
sbb
push
and
sub
mov
add
fcompl
repz
data16
out
and
and
jns
jmp
int
out
cmpsl
cmc
imul
outsl
xchg
adc
lods
lmsw
sbb
bound
aas
fs
cs
xorl
push
mov
dec
cmc
jge
add
push
sub
push
jnp
lods
mov
push
sbb
aaa
mov
jne
aas
ss
cmp
xor
stos
dec
xchg
add
and
and
gs
sbb
xchg
cmp
test
xor
fwait
mov
cmc
mov
xchg
push
mov
push
pop
mov
or
ficoms
mov
or
cmpsl
subb
outsb
mov
dec
dec
pop
or
jmp
cltd
pop
xchg
fistps
mov
mov
pop
push
sbb
jle
lds
jae
and
push
decb
mov
push
fnstenv
push
add
and
sarb
insb
inc
xchg
fimuls
in
in
push
inc
dec
imull
lret
call
pusha
dec
cmpb
orl
xorb
pop
movsl
sub
mov
cmp
std
iret
ds
leave
sub
in
jmp
adc
pop
loopne
ja
icebp
lcall
mov
mov
pop
out
loop
push
loope
sbb
insb
pop
mov
jo
xlat
lea
aam
and
push
pushf
and
push
pop
sub
arpl
cmc
aaa
cld
add
mov
sub
out
xchg
cld
mov
call
mov
aam
addr16
push
push
jp
pushf
in
inc
xchg
xchg
sub
push
mov
loope
leave
dec
insb
push
lods
pop
push
arpl
sbbl
shr
lret
mov
mov
dec
sbb
aad
jge
ja
jae
aad
and
es
sub
sbb
cmc
cmc
je
push
jp
and
lret
test
push
std
pop
outsl
mov
mov
subl
mov
scas
add
out
or
adc
and
or
inc
pushf
js
pusha
in
mov
cmp
xchg
mov
cwtl
fsubrl
sub
lcall
ffreep
sarl
repz
call
and
arpl
xor
movsl
fs
leave
add
xchg
imul
sbb
dec
push
cli
jecxz
pop
movb
xchg
mov
adc
mov
cs
shll
arpl
loopne
aam
lods
mov
or
mov
and
cwtl
jp
jo
pop
cmpsl
ficoml
xlat
cmpsl
push
or
cltd
stos
data16
cmpsl
fmulp
cltd
sarb
roll
xchg
inc
mov
call
int
aas
leave
sub
or
daa
dec
test
push
or
jne
fildll
xchg
fwait
mov
push
mov
sbb
add
jmp
lret
or
cmpsl
je
push
das
mov
push
adc
adc
mov
test
cs
std
mov
das
sahf
cmc
mov
imul
mov
mov
sbb
mov
loop
pop
push
repz
dec
and
ret
mov
xchg
dec
sar
outsb
adc
push
aad
sbb
fisttpll
xchg
xor
cmp
jne
sub
mov
addr16
aas
insl
aam
and
jl
sub
push
jecxz
cmp
xchg
dec
mov
out
mov
addr16
call
push
jb
xchg
addb
sbb
pop
xchg
pop
push
fldenv
pop
sahf
mov
xor
pushf
add
jno
add
adc
inc
fwait
dec
pusha
mov
in
dec
push
lods
leave
push
adc
mov
hlt
arpl
cmp
mov
xchg
mov
jecxz
jl
mov
nop
jecxz
jae
mov
inc
push
mov
xor
sbb
push
xor
xchg
in
xor
jecxz
cmp
pop
scas
aam
ss
lods
cwtl
fstp
adc
addr16
cmp
std
mov
mov
cmpsl
jb
mov
lahf
lret
inc
dec
loopne
jne
mull
xor
sub
mov
sbb
inc
popf
fwait
adc
ja
pusha
xor
cmc
pcmpeqb
in
fwait
dec
xchg
aas
sti
cmp
jp
cmpsl
jb
stos
push
lahf
and
lret
inc
inc
xchg
cmp
or
stos
ret
add
dec
loope
repnz
mov
add
in
xchg
mov
mov
outsb
out
pusha
das
out
push
into
sub
int3
ficoms
adc
mov
mov
xor
enter
stos
iret
outsb
stc
adc
repnz
std
cli
out
cmp
push
mov
jge
xor
enter
cli
sub
loopne
inc
mov
data16
gs
out
adcb
pop
shll
add
jb
and
sbb
data16
aaa
push
lock
sahf
mov
and
push
fbstp
pusha
sub
sub
sbb
mov
or
xchg
dec
ljmp
pop
jno
mov
iret
push
icebp
push
mov
mov
jnp
sub
es
pushf
js
mov
out
xchg
rol
xchg
cmp
out
enter
push
shlb
push
stos
inc
xchg
std
push
lret
nop
mov
sub
out
mov
cli
dec
sti
inc
mov
loope
push
fdivr
mov
adc
jnp
xchg
inc
into
dec
rolb
shll
adcb
js
js
or
aaa
cmp
insb
cltd
push
push
cld
imul
in
or
xor
imul
lock
xchg
mov
fwait
std
adcl
imul
xor
adc
or
jne
repz
cmp
add
or
shr
push
mov
mov
mov
outsl
inc
cli
data16
inc
push
xor
addr16
data16
lock
fbstp
test
lods
sub
movsl
mov
jnp
scas
or
cwtl
xchg
cmp
inc
dec
or
icebp
dec
loop
les
rolb
aam
fwait
aad
mov
jmp
sbb
inc
pop
enter
sarb
test
jnp
test
test
popf
dec
fstpl
inc
repz
xchg
mov
js
sub
iret
cmpsl
sub
aas
or
add
idivl
jmp
inc
nop
pop
enter
fisttps
cmpsb
daa
shll
inc
push
cli
jno
mov
pusha
repz
or
pop
jnp
int
in
xchg
adc
popf
mov
insb
andl
xchg
arpl
jl
rcrl
mov
mov
cmc
mov
cmpb
fisubrs
mov
test
push
int3
push
mov
jmp
adc
sahf
sbb
test
adc
aas
int
inc
ss
addb
cmpsl
arpl
jp
xor
push
pop
push
cli
jge
fisubl
mov
test
fisttps
jb
adc
ljmp
mov
les
adc
jnp
sub
xchg
popf
cmp
inc
stc
cltd
push
addr16
lds
cmp
sub
sbbl
mov
jmp
mull
mov
inc
and
psrlw
xchg
fnstcw
mov
mov
insb
inc
rcl
inc
mov
addr16
sub
sbb
mov
fildll
mov
adc
call
cmp
shrl
jae
arpl
lea
adc
test
addr16
push
sub
nop
mov
inc
jnp
xor
dec
cmpl
iret
inc
xchg
out
sbb
into
ficoml
xor
mov
pusha
pop
lods
rcrb
sub
mov
incb
inc
cmpsl
popa
ret
jne
in
xor
push
in
cmpl
in
or
pop
aas
mov
push
cmpb
add
insb
dec
lods
popf
pop
sbb
in
and
and
adc
or
add
int3
out
mov
rcrb
inc
imul
pop
or
sbb
lcall
pop
add
sbb
fldcw
in
push
ret
aam
pop
lds
mov
ds
fwait
push
pop
jp
movsl
pop
clc
adc
imul
push
rclb
mov
icebp
inc
ret
mov
xor
lods
ja
rorl
call
cli
insb
xchg
out
xor
cmp
jmp
int3
mov
imul
cmp
mov
xor
xchg
push
cmc
xchg
pop
ljmp
sahf
pop
jle
arpl
jg
or
bswap
test
mov
jae
mov
js
jge
repnz
in
pop
jge
enter
cmp
out
fucomp
scas
sub
scas
sbb
pop
test
jno
es
pop
jnp
call
adc
lods
cmp
pushf
test
xor
jbe
je
mov
sub
dec
cmp
mov
jb
push
jl
in
mov
sub
dec
mov
or
dec
adc
pop
jbe
inc
lds
jbe
inc
xchg
cmp
mov
mov
cmp
insb
ljmp
ss
pop
or
lcall
adcb
movsb
sub
mov
xor
mov
pop
lret
gs
sbb
pop
dec
cmp
inc
in
push
push
sbb
push
out
pop
je
je
pop
lea
dec
jl
int3
add
cli
leave
hlt
and
mov
mov
inc
out
insb
inc
inc
leave
pusha
in
in
jnp
outsl
and
aas
push
lods
pop
xchg
pop
cs
inc
jbe
les
push
xchg
hlt
pop
out
shrb
pop
std
add
pop
int
pop
cmp
jp
push
inc
shll
in
or
out
ss
ds
aam
iret
in
inc
push
and
test
mov
cmc
test
repz
jmp
sbb
xor
hlt
inc
push
in
sarb
sub
dec
int
cmp
pop
out
jo
mov
sbb
mov
leave
dec
cmp
testl
cwtl
sub
bound
push
add
popl
dec
loopne
adc
daa
insl
mov
movsb
dec
xor
out
mov
aaa
iret
test
scas
pushf
popa
jecxz
jo
cwtl
int
int
jg
fstps
sub
insb
push
inc
rcr
mov
dec
push
sti
iret
fistpl
mov
rolb
mov
mov
xor
sub
hlt
test
inc
cmp
sub
aad
adcl
int3
lds
push
lahf
cmpsl
or
jns
mov
lret
push
and
sbb
clc
shlb
jge
or
push
js
push
and
push
xchg
fbld
and
mov
mov
inc
push
es
sbb
mov
shrb
into
jb
outsb
lret
mov
adc
jns
push
in
mov
or
rcrb
or
xor
int3
fdivs
iret
ljmp
push
xor
mov
loop
mov
fsubs
das
mov
push
out
push
lcall
dec
inc
jnp
xor
enter
push
iret
xchg
incb
jb
jp
and
stc
jp
fisubrs
daa
mov
pop
push
sbb
in
pushf
into
dec
adc
mov
adc
sbb
jb
les
cmpsb
stos
lods
mov
lret
imul
xor
imul
stos
cli
push
ja
ja
div
daa
repz
in
std
mov
adc
jp
xor
shrb
mov
push
sub
or
fisttpll
jmp
adc
xor
pop
xchg
add
addr16
stc
inc
ja
xor
pop
mov
sbb
sbb
fmulp
inc
shlb
xor
push
icebp
and
xor
mov
xor
fwait
cwtl
pop
neg
stos
dec
cltd
cs
and
cmp
dec
lahf
test
test
cmp
sbb
jge
mov
insb
push
push
dec
ret
outsl
aas
aas
mov
xor
push
nop
pop
xor
sti
sti
cmp
ss
mov
test
bound
repz
pop
bound
fstps
test
add
addr16
fcoml
stos
mov
cmp
mov
divl
adc
fbstp
add
int
clc
cmp
loope
dec
popf
negb
imul
dec
rolb
jg
dec
gs
in
dec
sahf
pop
adc
xor
pop
orl
mov
jl
stc
xchg
in
jle
sbb
mov
jae
jns
jge
loop
cmpsl
lahf
int3
pop
data16
jge
pop
in
insl
dec
jmp
into
fwait
icebp
sahf
mov
mov
cmp
shr
fwait
fwait
push
outsb
pop
lea
sbb
loop
lcall
or
fcoml
dec
inc
inc
sbb
sarb
mov
adc
sbb
mov
add
mov
mov
cld
cltd
push
sbb
jae
push
mov
pop
jl
fcomp
fnclex
mov
mov
mov
popf
icebp
outsl
and
mov
jmp
jmp
shrb
mov
mov
and
enter
xchg
or
sub
in
clc
adc
test
xchg
cwtl
pop
jmp
push
xchg
movsl
inc
roll
repnz
jp
xor
fs
mov
add
loop
sbb
push
insb
call
test
push
and
xor
mov
mov
into
mov
mov
lcall
sbb
cltd
out
outsl
fidivrs
cmp
clc
inc
lcall
xchg
xchg
fisttpll
mov
pushf
addr16
es
sub
inc
pop
push
cld
nop
add
insl
xor
nop
outsb
mov
les
mov
test
pop
and
aad
cli
inc
mov
inc
mov
push
sarb
pop
push
dec
add
dec
scas
arpl
aaa
xchg
sbbb
sub
and
lock
data16
and
cld
or
test
les
jmp
rcll
insb
flds
push
dec
push
stos
jb
movsl
push
fsubrl
push
out
lcall
push
int3
fs
inc
add
dec
gs
jbe
outsb
sub
popa
or
mov
aad
dec
push
movsb
fimuls
in
addr16
mov
sbb
aad
fcoms
cwtl
cmpsb
out
out
negb
in
or
fiadds
dec
mov
scas
add
and
hlt
xchg
and
mov
cltd
cs
insl
or
lahf
in
arpl
cmp
xor
push
lret
push
loope
js
stc
and
cs
cs
jg
stos
adc
push
inc
sti
push
clc
call
out
mov
mov
inc
sahf
pop
jno
int
sub
insb
mov
aas
ror
popa
es
lcall
pop
lods
mov
cli
and
sbb
std
dec
push
xor
xor
xor
fiadds
pop
mov
xor
mov
icebp
lds
adc
mov
or
pop
and
and
jae
cvtpi2ps
add
or
repz
es
jns
aaa
les
gs
mov
mov
sti
xor
jo
or
add
das
xchg
cmp
mov
stc
inc
popf
sub
in
jge
jno
pop
dec
pop
xor
xchg
add
jbe
lods
icebp
pop
sbb
cmp
or
push
pop
test
ja
sbb
and
stos
cltd
fsubl
jl
daa
arpl
das
mov
cmp
or
ret
es
xchg
pop
push
xor
dec
lds
lds
inc
or
es
mov
add
fcom
cwtl
aad
mov
aas
pop
sub
stos
mov
mov
cmp
dec
aaa
xchg
popf
shll
ret
dec
loope
cli
xlat
xchg
in
mov
xchg
push
loop
clc
in
sub
dec
fmull
xchg
lret
jge
mov
sub
sbb
jl
pop
mov
push
xchg
imul
push
pop
cmp
mov
testl
mov
sub
push
xchg
adc
add
push
mull
test
fwait
add
fimuls
jl
xor
jmp
loop
cli
iret
xor
aad
mov
xor
bound
hlt
inc
out
sbbl
dec
mov
pusha
shl
dec
jle
push
mov
mov
fwait
stos
jecxz
pop
lret
sub
popa
add
xor
xor
rorl
push
cmp
dec
les
push
jo
xchg
mov
mov
add
ljmp
ss
cld
xor
cmp
adc
sub
fiadds
insl
and
bnd
repz
jecxz
repnz
sahf
adc
andb
mov
or
pop
jge
int
lcall
jno
cmp
andb
ret
fisttpl
fndisi(8087
lea
cld
xchg
mov
ljmp
je
cmp
cli
push
mov
das
or
divl
push
stos
push
imul
sbb
pop
iret
inc
sub
std
cmp
adc
mov
sbb
cmc
inc
push
ljmp
repnz
fs
dec
sub
test
roll
push
push
call
popa
sub
add
pop
enter
mov
outsb
out
aas
daa
xchg
stc
inc
add
inc
cs
pop
insl
push
and
pop
cmp
lahf
clc
push
cmp
sub
ljmp
pop
pop
pusha
mov
data16
dec
lds
insb
xlat
pusha
and
cmp
mov
lods
pusha
enter
pop
ds
ret
xor
imul
clc
jmp
or
fs
int3
ljmp
sbb
aas
mov
mov
cmp
ret
jae
imul
mov
push
dec
aaa
mov
jo
and
xorps
mov
add
in
movsl
int3
pop
fsubrl
mov
mov
movsb
nop
adc
mov
jmp
aad
mov
lret
int3
addr16
cmp
or
lcall
sbb
xchg
mov
sbb
inc
adc
ss
dec
adcl
pusha
insb
pop
movl
subb
cmc
sahf
je
cltd
ljmp
test
repnz
out
mov
jnp
mov
mov
mov
xchg
fcomip
rorl
cmp
add
mov
popl
test
pushf
je
xor
push
test
out
out
scas
xor
jno
mov
inc
xchg
sbb
add
sub
mov
xchg
adc
je
sub
lds
arpl
and
aam
adc
mov
subb
test
mov
repnz
adc
push
aaa
add
mov
sahf
sarb
mov
pop
bnd
fnsave
fbld
push
sub
rcrl
inc
bound
sbb
aam
rcl
mov
in
add
push
ljmp
push
fisubrl
sahf
stc
pop
insb
notl
fdivp
add
ret
jnp
mov
pop
cmp
fildl
push
jb
sahf
and
adc
jnp
mov
xor
shll
jno
xor
inc
jne
cwtl
sub
bound
push
jno
adc
ljmp
cmp
xor
jg
bound
mov
push
adc
fistl
scas
js
mov
cltd
xor
and
subb
int
sbb
inc
xchg
sahf
and
cmp
mov
daa
sahf
push
test
das
addr16
inc
fs
and
jge
das
dec
or
mov
mov
sbb
popa
es
imul
sbb
inc
cltd
inc
pop
cmp
bound
mov
push
int
or
push
xor
sub
js
xor
jecxz
outsb
fimull
adc
ljmp
mov
loopne
adc
pop
cmp
sbb
push
fs
mov
xchg
add
nop
cltd
imul
mov
mov
xchg
aad
bound
into
out
dec
lock
mov
cmc
push
cmp
pushf
cmp
cltd
dec
inc
insb
cmc
dec
and
mov
xchg
sbbl
lret
fiadds
fs
inc
popf
test
add
fbstp
cmp
mov
nop
test
mov
cwtl
fdivl
xchg
les
insb
jmp
cmpsl
pop
push
sub
imul
cmpsl
out
imul
jno
adc
pop
push
sub
fcmovnu
mov
dec
pop
push
lds
out
xchg
bt
or
fildl
lods
mov
mov
xchg
out
mov
pop
ffree
pop
push
and
lahf
fwait
adc
or
insl
fists
xchg
inc
mov
cmpsl
push
mov
out
push
cmp
mov
inc
pop
xor
loopne
dec
sti
xor
and
xchg
stos
dec
cwtl
in
mov
and
mov
adc
daa
test
xchg
adc
cmp
addb
dec
popf
dec
mov
test
xlat
fwait
push
pop
insb
pop
in
cmp
imul
lods
es
aaa
push
mov
nop
stos
in
and
pop
fs
mulb
dec
dec
repnz
dec
dec
inc
jg
test
test
dec
movl
dec
cmp
popf
scas
fwait
lea
mov
sub
pop
mov
out
add
dec
rcrb
adc
loop
adc
push
mov
sub
cmpb
mov
jle
in
add
gs
test
fimuls
xchg
je
in
mov
mov
shrl
mov
fsubrs
repnz
dec
dec
pusha
leave
cli
shrb
dec
xchg
mov
adc
xor
out
ret
int
jl
mov
je
ljmp
add
inc
adc
mov
mov
mov
jb
cli
sbb
ficoms
jns
pop
pop
es
push
and
in
jle
push
es
add
cmp
inc
and
lret
pop
aaa
xlat
or
xor
cs
sub
sbb
dec
pop
ffree
jae
xchg
sbb
and
xchg
ret
sbb
fcoms
dec
pop
xor
imul
sbb
or
repz
xor
scas
sub
xchg
push
adc
xor
sub
fs
mov
loop
pop
je
int
pop
jbe
outsb
enter
dec
pop
mov
push
aam
clc
jp
cmp
dec
aaa
sarl
sbb
arpl
inc
add
aaa
xchg
orb
jp
movsb
jg
arpl
jmp
adc
aam
xlat
bound
outsb
cmp
pop
out
push
push
negl
ss
pop
faddl
testl
jo
pop
mov
cmpsb
inc
dec
iret
aaa
xchg
mov
push
pusha
scas
jecxz
adc
outsl
jb
pop
lcall
add
dec
mov
mov
xchg
pop
stos
xchg
jp
mov
mov
add
in
mov
sub
idivl
into
sbb
imul
pop
adc
insb
fcmovne
mov
cltd
lahf
mulb
int3
outsb
mov
mov
sub
xor
pop
xlat
xchg
xchg
cli
test
xchg
cmp
lahf
aad
jmp
sub
ret
dec
push
flds
xchg
mov
push
hlt
in
test
adc
cmpsl
out
call
and
inc
loop
push
in
cmc
or
jmp
lods
and
xor
fstl
dec
sbb
sbb
mov
lret
sub
mull
fadds
insl
cmp
push
pop
aam
int
clc
sub
fmul
cmpsl
incl
into
loope
and
inc
cltd
or
mov
jne
sahf
inc
lahf
pushf
in
dec
cmpl
pop
lock
push
sbb
xchg
dec
xchg
mov
xchg
mov
mov
xor
cmp
mov
xchg
dec
imul
xor
cmp
xor
pushf
or
mov
fistl
loopne
xchg
or
mov
and
push
movb
test
popf
nop
lcall
xor
cld
pop
aaa
es
mov
add
fs
in
pop
sub
inc
jg
dec
or
inc
je
test
jno
xchg
inc
stos
stc
xchg
pop
pop
scas
movsb
sub
clc
in
std
and
mov
pop
clc
enter
insb
test
and
adc
and
pop
dec
add
lds
or
adc
push
sbb
mov
sub
and
stos
sti
scas
stc
out
ds
mov
and
cltd
sub
push
pop
xor
pop
push
pop
lods
inc
leave
mov
dec
pop
aaa
push
test
in
fistpl
clc
jecxz
sub
cmc
sbb
mov
mov
rorb
mov
stc
inc
pop
dec
xchg
movsb
pop
and
mov
inc
lods
jns
mov
out
push
aad
adc
fistps
leave
notb
jl,pt
lret
das
xchg
xchg
hlt
xor
scas
or
jno
push
xchg
sti
add
imul
cwtl
sbb
shlb
cmpsl
jbe
jmp
enter
or
loopne
push
pop
cld
lods
paddw
adc
jl
jb
mov
pop
dec
pusha
mov
ror
push
add
mov
pop
mov
icebp
add
and
dec
rorl
inc
push
jecxz
aad
sbb
int
bswap
add
aaa
and
mov
lock
aad
iret
ss
sbb
ret
test
pop
mov
pop
bound
mov
xor
sbb
mov
xor
add
inc
inc
cli
push
mov
and
dec
xor
adc
int
xor
cmp
jl
pop
inc
push
out
stos
test
jp
jmp
fisubl
cli
iret
call
dec
push
push
pop
lcall
jae
or
fmull
int
pusha
dec
push
jns
mov
insl
or
nop
sub
aad
mov
cltd
insl
mov
sub
sahf
cmp
jb
loop
xchg
shlb
mov
push
popa
int
cmp
mov
mov
and
loope
push
in
xor
sbb
pop
mov
mov
aad
enter
or
push
inc
lret
inc
inc
clc
inc
xchg
sahf
pop
add
in
popf
jnp
loopne
jo
mov
xorl
jg
and
divps
pop
dec
push
hlt
jmp
ret
push
and
lods
push
xchg
adc
sbb
popf
xor
repz
dec
adc
out
pushf
jp
ds
pop
scas
fcomps
adc
stc
pop
es
mov
inc
cltd
dec
fbstp
mov
iret
cmp
adc
dec
test
push
cmpsl
dec
icebp
inc
std
xchg
cmp
scas
lcall
cmp
push
jbe
push
ret
addb
sub
pop
add
mov
mov
jno
scas
inc
nop
jno
xchg
xor
fldt
subb
mov
inc
jecxz
lcall
in
divb
ds
mov
sbb
xchg
inc
sub
or
pop
out
das
arpl
and
mull
add
mov
or
sub
mov
inc
inc
in
mov
or
icebp
fsub
adcb
jne
push
xchg
adc
fidivrs
mov
data16
ss
xor
mov
lret
insl
stos
mov
out
test
sub
jge
pop
aaa
hlt
inc
sub
out
popa
loopne
int
sbb
xor
stc
inc
notb
mov
int3
mov
pop
add
cld
in
mov
insl
add
int
dec
pusha
sbb
xor
enter
ret
push
sbb
push
ja
cli
icebp
lods
sbb
pushf
inc
popf
sbb
jmp
repnz
jns
and
or
xchg
mov
dec
subb
jmp
adc
in
hlt
push
mov
inc
lods
dec
mov
jo
sbb
xor
pop
negl
mov
mov
ja
fadds
je
inc
popa
out
jae
dec
shll
add
add
xor
pop
dec
test
popf
pop
cmpsl
rolb
and
xlat
xchg
mov
xchg
xor
fisttpl
mov
lea
add
jle
jle
fcomps
es
mov
fimull
xor
jo
xchg
les
push
sub
fwait
or
out
cmpsb
cmpsb
scas
or
test
sti
dec
adc
pop
inc
movsl
and
add
pusha
cmp
cmc
pop
dec
iret
push
jmp
xchg
jno
das
sbb
adc
movaps
jmp
cmp
loopne
sub
outsb
js
mov
mov
shll
cmp
inc
pushf
fidivl
push
int
xor
cltd
out
insb
in
cmpsb
lahf
mov
xlat
add
xor
aaa
dec
addr16
sbb
xor
push
xor
sarb
cltd
mov
repnz
adc
inc
ret
movsl
pop
xor
aad
mov
xchg
lcall
out
dec
cli
fcoml
repnz
push
loop
jge
test
mov
ss
ret
js
adc
cltd
ss
in
cld
ss
sub
lret
sbb
add
sbb
out
cmc
lods
jp
pop
or
fdivrl
jl,pn
popf
movsb
jl
mov
int3
mov
mov
ss
rcll
in
sbb
scas
lods
pusha
cmpsl
push
jns
mov
dec
movsl
mov
adc
rclb
jmp
ss
cwtl
int
nop
addr16
mov
shrb
in
insl
add
data16
jno
mov
mov
adc
lds
and
adc
es
mov
iret
inc
cmp
push
mov
mov
les
mov
lock
pushw
loop
dec
lret
push
xchg
es
jmp
in
pop
xor
aaa
inc
lcall
fstps
adc
stc
hlt
xorl
jg
mov
and
fwait
inc
fld
cli
fsts
les
cmpb
mov
push
pushf
push
jnp
jne
adc
loope
jo
dec
aad
popf
mov
scas
push
xlat
mov
cmp
ret
movups
sbb
xor
sub
xchg
ja
lret
ja
ds
ja
lea
pushf
sbb
add
lret
push
mov
lret
nop
mov
sub
int
xchg
mov
mov
pop
imul
mov
int3
fcoml
ds
dec
or
mov
aad
into
aaa
cmc
xor
cwtl
lret
adc
cs
cmpsl
icebp
mov
les
ror
push
or
dec
rclb
stos
push
dec
imul
cmp
add
stos
mov
sbb
out
push
les
jbe
sub
push
sahf
xor
loop
cmp
xchg
stos
xchg
mov
xlat
inc
dec
subl
rorb
push
inc
mov
lret
pop
incl
cmpsl
popa
jmp
mov
mov
outsb
in
stos
mov
dec
addr16
or
cwtl
ret
or
arpl
and
add
cmp
test
cmp
cmp
stc
adc
imul
mov
add
in
dec
mov
jae
fistl
loopne
push
xlat
in
test
jecxz
push
push
cli
sub
mov
call
sub
insl
or
jb
cmp
icebp
fwait
scas
test
mov
gs
adc
or
or
xchg
shr
cmpsb
stc
add
repnz
bnd
and
or
cli
fcmovb
scas
cli
push
outsl
lcall
adc
jle
das
jnp
xchg
sbb
pop
xor
jmp
test
mov
sbb
dec
cmp
mov
fstpt
inc
mov
fstl
lods
cmp
insl
pop
popf
add
sarl
mov
aas
fistl
lahf
popf
ljmp
bound
aas
pusha
mov
fucomip
pop
sbb
xor
mov
pop
or
push
imul
hlt
cmp
sub
mov
push
jb
xor
inc
rol
inc
pop
jmp
lds
jnp
mov
mov
adc
test
popa
sub
aaa
js
fptan
ret
in
dec
rclb
out
ds
pop
and
push
xor
sbb
mov
int3
and
mov
add
mov
sub
add
mov
and
dec
dec
mov
sbb
cmp
pop
mov
in
push
push
xorl
sahf
xchg
fistpl
pop
jl
mov
fstpt
retw
push
loopne
orb
pop
fwait
lret
add
int
cld
or
push
mov
clc
popf
ret
add
int
stos
test
lea
xchg
lahf
fidivl
sarl
dec
adc
lea
cmpsl
popf
rol
fdivs
lods
mov
out
lret
jae
ljmp
mov
scas
sti
mov
insl
daa
ror
pusha
sub
push
adc
inc
hlt
sbb
pop
or
enter
cmp
add
xor
xchg
add
stc
inc
scas
shr
sub
cmpsl
fsts
loop
mov
pop
ljmp
xchg
jle
sbbl
and
mov
outsl
push
and
cwtl
fidivs
jp
sub
js
jne
jnp
cmpsl
xchg
add
jae
or
fstl
rol
adc
daa
dec
ds
ds
dec
mov
cmp
mov
sti
sarb
dec
mov
xchg
pop
xchg
mov
cli
aad
dec
cltd
shll
mov
sub
cmpsb
pop
mov
cmp
push
push
cwtl
dec
sub
sub
adc
dec
dec
roll
fld1
inc
and
out
test
jg
or
stos
or
xchg
adc
testb
push
sub
fwait
xchg
loopne
xlat
aas
xor
sub
sbb
lods
inc
jbe
sub
and
sbb
xchg
or
or
ret
sahf
gs
and
scas
xor
sbb
xchg
into
push
and
mov
push
data16
xor
dec
mov
add
inc
stos
filds
fistl
cwtl
cmp
loope
jnp
into
mov
js
xor
idivb
mov
int3
sbb
cltd
punpcklwd
dec
adc
add
fidivl
fadds
xchg
mov
imul
push
repnz
out
sbbb
mov
mov
push
nop
jg
dec
lea
mov
das
xchg
xchg
hlt
mov
xor
or
movl
inc
movsl
mov
flds
in
or
xor
add
lds
test
stos
hlt
in
loope
aas
mov
push
xchg
mov
mov
mov
xor
inc
sti
xchg
outsb
and
arpl
mov
outsl
or
push
outsb
sbb
lea
fprem
pushf
jo
scas
cmp
push
int
lcall
mov
in
dec
jae
add
outsl
scas
or
cwtl
loope
maxps
jmp
push
xlat
xor
mov
push
mov
lock
mov
mov
ficoml
mov
lahf
cmp
test
push
stos
mov
or
dec
rcrl
push
pop
xchg
in
dec
psubsw
add
loop
sub
sub
lret
fists
mov
adc
dec
mov
fcoms
stos
loope
push
inc
repnz
aad
cmp
jne
mov
xor
repnz
movsb
push
and
shrl
jb
push
cmp
and
iret
dec
jg
adc
fiadds
cwtl
xlat
sub
in
jle
mov
pop
ret
jnp
mov
ficompl
mov
dec
ret
mov
cli
mov
push
js
mov
or
gs
inc
gs
fs
popf
test
bound
jno
rorl
push
lahf
push
lods
push
jbe
lods
pop
inc
and
xor
mov
xchg
lahf
push
pop
je
test
sbb
mov
ds
push
stos
shrb
loope
mov
lock
mov
cmc
hlt
rcrb
mov
gs
cmp
cmp
insl
push
cltd
imul
sub
jae
pushf
outsl
mov
enter
fstpt
scas
int
xor
and
add
jne
enter
sub
ret
loopne
repnz
ljmp
aas
outsl
inc
ds
sub
adc
je
push
jmp
in
imul
dec
test
test
ljmp
insb
dec
bound
into
jb
or
imul
aas
jb
adcb
add
jp
in
cmc
pop
adc
cld
add
imul
pop
test
add
sbb
cwtl
cmpsb
and
loope
xor
js
aad
mov
push
cltd
push
adc
loopne
iret
mov
fs
cmc
nop
enter
or
jae
and
es
dec
mov
sti
insl
lods
mov
sub
cltd
xchg
dec
jns
lock
stos
pcmpgtb
shll
ret
or
cmp
fucomip
data16
dec
adc
ret
xor
jno
rol
push
cmp
cmp
mov
add
jbe
xchg
addb
xchg
fstpt
add
or
xor
iret
sbb
mov
push
mov
push
sub
mov
pop
imul
sbb
in
sub
in
fyl2x
lds
cmp
mov
movsl
lock
test
iret
std
cmp
xchg
cmp
sub
cmp
xor
push
sbb
cmp
mov
inc
pop
sti
cmc
cs
sub
iret
and
lea
jle
and
xchg
sub
ljmp
pop
mov
add
mov
jno
push
aam
dec
test
addr16
pop
mov
cmp
bnd
add
in
dec
gs
mov
add
add
cs
out
pop
sar
rorl
push
shlb
mov
daa
pop
cli
and
push
insl
jnp
int
adc
iret
imul
xor
sbb
mov
xchg
stc
jo
jne
icebp
fistps
imul
cmp
push
mov
rol
ror
lock
negb
jg
add
imul
and
xor
icebp
sbb
cmp
and
jb
adc
mov
int3
xchg
addl
and
push
jo
push
cmpsl
das
pop
sarl
jnp
mov
mov
enter
mov
mov
add
mov
xchg
int3
js
mov
rcrl
cli
cmp
inc
mov
pop
lret
data16
jbe
push
shll
mov
jo
pushf
fwait
lahf
adc
movb
pushf
cmp
fadd
arpl
hlt
int3
popf
in
orl
dec
adc
mov
mov
stos
push
fbstp
cmp
cltd
xchg
cmpsb
cmpsb
jbe
inc
arpl
and
cmp
mov
ds
xor
out
jge
fucomp
psubd
outsl
mov
xchg
fisubl
or
pop
inc
pop
fnstcw
add
inc
leave
xchg
nop
xor
push
jo
add
test
dec
pop
test
ret
fstpt
test
lret
pop
repnz
mov
aaa
jno
push
and
ficoms
jecxz
mov
add
push
sub
daa
push
sahf
out
push
int
cmp
jmp
subb
jmp
mov
push
cmp
into
cmp
xor
dec
inc
pop
mov
out
adc
inc
jg
jb
and
cmp
and
test
lea
push
out
stos
sbb
jmp
cwtl
pop
xchg
cmpsl
add
nopl
pop
repnz
call
cmp
stc
aas
clc
xor
cmp
jae
cmc
rcl
jnp
faddl
push
push
int3
adc
stos
push
xlat
mov
add
sahf
insb
push
jmp
cwtl
mov
imul
test
push
shrb
push
dec
sbb
adc
dec
push
leave
sahf
test
insb
iret
xor
pop
inc
mov
cmc
dec
das
test
mov
pop
rclb
jnp
lahf
xor
adc
js
repz
and
xor
aas
jle
inc
mov
adc
inc
jno
push
repz
insb
fcmovu
mov
dec
shlb
into
data16
dec
cmp
dec
jnp
jmp
and
notb
push
ffreep
adc
or
sbb
clc
sub
arpl
fldenv
fstpt
je
xor
les
mov
mov
lret
cmp
movsb
mov
stos
jp
and
paddd
dec
mov
bound
sub
jae
adc
out
push
pop
jne
ret
cmpsb
cmc
mov
mov
adc
cwtl
xchg
jno
jns
or
shll
loopne
add
pop
imul
add
pop
stos
jbe
divps
gs
mov
jno
and
dec
hlt
mov
scas
pop
sub
aam
jb
icebp
out
mulb
xlat
xor
push
and
pop
je
aas
sbb
adc
pop
adcl
sti
popf
xorl
mov
mov
or
dec
fimuls
jge
sahf
pop
jl
mov
lock
add
sub
in
jg
test
push
pop
stos
jp
sbb
inc
and
stos
mov
das
xchg
jbe
aaa
enter
cbtw
cld
repnz
sub
lock
or
je
stos
pop
dec
ja
cmp
rclb
pushw
fidivs
sub
xchg
push
addr16
xchg
iret
push
pop
in
clc
fcoml
leave
movsb
mov
jecxz
pop
mov
mov
cmp
and
mov
lret
mov
sub
mov
je
mov
in
mov
div
test
xorl
xor
mov
adc
mov
mov
or
xchg
outsl
inc
rcrb
sahf
out
sbb
cmpsl
notb
loope
sahf
ret
cmc
dec
adc
dec
test
mov
and
mov
add
lcall
push
jne
push
mov
sub
xchg
dec
push
lods
push
mov
xorb
jge
xchg
out
lds
nop
out
pop
sbb
mov
fs
aas
add
clc
jb
add
cmp
shlb
push
sub
adc
cli
aad
insl
into
sbbl
mov
sub
lahf
push
jecxz
add
pop
sub
out
movsb
icebp
mov
inc
mov
call
jne
popl
test
xchg
and
adc
inc
sbb
sbb
push
enter
lret
and
fistpll
jge
test
push
adc
sarb
faddp
xchg
push
ret
imul
add
add
xor
sbb
push
lret
jbe
push
pop
sub
sbb
and
pusha
mov
and
dec
pop
jne
ret
je
mov
push
aad
rcrb
mov
shrl
dec
xor
dec
cmp
gs
jb
loop
dec
sbb
xor
lea
gs
xchg
push
test
imul
jecxz
and
movsl
stos
mov
andb
stos
pextrw
mov
call
cmp
sub
push
lock
mov
mov
rolb
jmp
push
out
lret
out
das
test
mov
fmul
mov
cs
mov
dec
repnz
stc
pop
and
or
dec
popf
add
mov
sbb
movsb
pop
mov
inc
dec
aaa
addr16
push
lret
inc
push
aaa
cmp
xchg
inc
pop
ljmp
sub
push
movsb
jb
cmpsb
setae
scas
imul
sbb
push
cmp
scas
add
arpl
jp
and
lea
lret
outsb
xor
fistpll
fidivl
pop
sub
mov
jo
jo
sub
enter
pop
add
icebp
test
push
xor
mov
inc
xor
inc
pushf
mov
push
int
sbb
inc
and
cmp
ljmp
dec
xor
pop
out
js
int3
movsb
jp
xchg
and
test
xor
cmpl
cmpsl
xchg
fsubl
mov
xchg
in
scas
loop
lods
inc
test
xchg
cmc
sbb
xchg
cmpsl
sub
sbb
xor
outsb
add
mov
scas
sbb
int
out
mov
push
jecxz
aam
or
out
sbb
push
jmp
push
outsl
adc
jns
mov
pop
and
mov
sbb
pop
sarl
sbb
clc
imul
jo
stos
int
iret
ds
mov
jo
sub
mov
mov
dec
inc
fs
dec
sti
je
or
and
mov
inc
sbb
out
imul
adc
pushf
xchg
mov
jne
mov
sbb
pop
cld
imul
ficoml
fcmovnu
pop
xor
pop
inc
das
out
xchg
jnp
insb
push
inc
xchg
fcompl
xor
in
out
in
push
inc
mov
movsb
pop
imul
sub
test
test
push
inc
loope
push
repz
ds
push
add
nop
adc
pop
mov
push
mov
sbb
mov
cmpl
pusha
xor
lcall
fidivl
xor
push
dec
cmp
daa
fcmove
arpl
jnp
inc
mov
lods
inc
and
dec
fdivr
lods
mov
inc
stos
pop
insb
cmc
sarb
adc
cmp
movntps
mov
inc
out
push
xor
gs
in
mov
mov
inc
sub
push
inc
mov
add
adc
insb
xchg
jnp
cs
jbe
or
ret
movsb
pop
pop
mov
xchg
dec
xchg
mov
into
xchg
sbb
inc
popf
sub
inc
mov
movsl
cmc
pop
sbb
adc
fldl
call
popf
xor
repz
sub
sti
pop
adc
add
xchg
sub
loop
ret
sbb
xchg
xchg
roll
mov
jmp
pop
xor
scas
sbb
imul
lea
sbb
imulb
addr16
repz
pop
xor
xor
jmp
cmp
cmp
sbb
outsl
dec
mov
addl
imul
pop
fisttpll
mov
cmc
mov
xlat
js
pop
add
cmpb
pop
sub
dec
ljmp
push
stc
in
test
movsb
push
mov
fwait
stc
dec
or
lahf
fdivs
xchg
mov
jmp
subb
js
cli
mov
and
idiv
movsb
test
mov
adc
lahf
js
xchg
shl
fsubr
es
sbb
cs
cmc
mov
push
push
mov
mov
aaa
and
adc
mov
movsl
rcrb
je
sub
imull
mov
mov
mov
and
in
ss
cmpsb
push
enter
push
dec
fsubl
pop
mov
repz
adc
loopne
rorl
nop
pop
sbb
jnp
mov
fsubl
mov
cmpsl
jmp
insl
mov
pop
js
push
mov
mov
jnp
inc
lods
shrl
fwait
roll
movsl
lods
loope
in
cmp
mov
pop
outsb
cmpsb
mov
xor
and
ja
lret
aaa
mov
es
jo
push
and
stc
hlt
data16
add
mov
int
xor
adc
scas
dec
repnz
stos
cld
adcl
and
sahf
sbb
mov
out
dec
bound
ss
push
sbb
loope
xor
aad
insb
sbb
adc
mov
in
pop
mov
cmp
xor
jle
fstl
pop
pop
mov
outsl
lret
sbb
sbb
mov
movsl
cld
cld
and
fmuls
div
das
sti
aas
aaa
pop
mov
mov
out
out
ss
inc
pop
mov
repnz
mov
xor
jge
addr16
int3
int3
fcompl
and
ds
je
jno
sbbb
nop
pop
das
push
xchg
ret
pop
cld
enter
repnz
fistpll
mov
cmp
cmp
sub
inc
inc
ret
clc
test
movsb
xor
and
mov
arpl
imul
pop
stos
add
pop
std
jae
hlt
xchg
mov
lock
mov
cs
mov
and
test
pop
and
iret
enter
inc
lret
push
push
lea
movsl
das
subl
stc
fs
pusha
pop
loopne
pop
jo
push
ss
and
cld
orb
out
fildll
les
ret
jge
call
xor
sti
mov
sub
jmp
add
out
ds
fwait
pop
xchg
lods
in
cs
fadds
jb
mov
enter
sbb
lahf
mov
leave
pop
iret
aam
lds
icebp
pop
or
lret
in
pop
incb
push
inc
outsl
jne
mov
cmp
or
sbb
dec
ds
fildl
outsl
jb
mov
xchg
xchg
push
rclb
and
or
sahf
sti
cmpsl
cmp
mov
fsubrs
push
xor
cmp
xor
cmp
or
scas
sub
sti
icebp
cmpsb
mov
in
cmovge
loope
and
inc
jp
arpl
jne
enter
test
xor
sbb
cmp
xchg
movsb
adc
into
jp
shll
test
inc
loop
insb
and
popa
popa
paddusw
push
or
push
sar
ljmp
sub
inc
aas
test
repz
push
pop
insb
cmp
insb
push
push
repz
jmp
jmp
lret
je
push
inc
xchg
sbb
jmp
push
icebp
out
out
or
inc
mov
lods
jns
dec
cmp
xor
cltd
fdivs
lahf
movsb
xchg
dec
sub
insb
mov
outsb
jmp
std
dec
xor
in
pushf
cmp
pop
ja
sbb
cmc
and
mov
mov
lret
adc
dec
in
and
cmp
arpl
loope
hlt
pop
lcall
popl
lret
xor
sub
and
xchg
jo
dec
mov
xchg
pop
adcl
sub
mov
loop
adc
sbbb
dec
mov
adc
int3
test
mov
xchg
in
sub
and
fs
sti
pop
push
push
mull
int3
and
pop
fsub
loop
stos
aaa
xor
aad
jecxz
push
xchg
pop
pop
fstl
mov
cmp
int3
jae
sbb
lods
es
jb
mov
mov
sub
in
rcrl
mov
and
add
sub
in
xor
imull
xor
jge
dec
insb
sbb
and
sbb
stos
pop
cmp
adc
xchg
mov
mov
push
repnz
inc
or
xchg
stos
cmp
out
xor
jbe
sti
lock
jp
xchg
pop
mov
nop
mov
mov
std
icebp
cmc
dec
jg
cltd
popa
or
cwtl
adc
inc
movsb
inc
notb
pop
inc
es
pushf
sti
mov
inc
mov
leave
leave
int3
mov
lahf
or
aas
xchg
fiadds
jg
pushf
add
nop
outsb
inc
add
inc
or
cmp
cwtl
pop
dec
or
nop
insl
outsl
xchg
pop
sbb
int
mov
push
lret
loope
stos
xorl
mov
test
adc
hlt
push
aad
dec
fs
lock
pusha
fildll
jmp
mov
jnp
mov
arpl
aas
rcl
bound
and
sti
lds
test
inc
jno
jae
dec
fwait
mov
aas
jl
mov
idiv
jo
call
pop
mov
jb
adc
ror
pop
cmpsb
xor
ret
dec
pop
lods
in
out
loopne
xchg
sbb
pop
or
decb
and
pop
pop
lods
jb
aaa
sbb
int3
rcrb
es
in
scas
sub
push
sbb
js
xlat
test
sahf
test
pop
dec
outsb
jno
mov
insb
mov
lock
add
mov
mov
fdiv
xchg
or
pushf
int
les
xor
lea
and
shl
in
xor
jae
add
aas
lret
testl
leave
mov
add
dec
xor
scas
sub
inc
notb
mov
xor
push
pushf
and
jmp
stos
sti
in
and
call
sbb
dec
xor
mov
iret
or
out
outsl
cli
sbb
cmp
mov
movsb
mov
cmpsl
ja
mov
dec
xchg
push
dec
fcompl
pop
mov
pop
mov
pop
mov
sti
jae
xor
push
xchg
lods
or
push
pop
mov
movsb
cwtl
repnz
adc
cltd
cld
ret
mov
icebp
or
test
jecxz
mov
or
cmpsl
mov
not
sub
nop
stc
cmc
dec
rorb
repz
sbb
cmp
mov
imul
pop
dec
sbb
sub
and
stos
cmp
leave
inc
in
and
dec
and
cmp
into
mov
dec
lret
cmp
xor
cmc
dec
xor
jno
imul
mov
mov
aam
dec
push
adc
jecxz
enter
rcl
cmp
mov
adc
push
movsb
fdivrs
aaa
or
andl
cli
push
dec
sub
push
in
mov
sbb
mov
clc
jb
sub
add
add
and
outsb
push
leave
push
shlb
movsb
subb
mov
gs
scas
pusha
cmp
jl
aas
inc
popa
pop
mov
mov
test
sbb
jae
pusha
mov
add
mov
cmp
mov
mov
out
cmp
push
pop
add
cmpb
jno
lods
sub
pmovmskb
mov
mov
scas
nop
xor
stos
and
sbb
fisttpll
sub
sub
cmc
and
xchg
andl
lods
pop
push
call
int
mov
in
shll
gs
fstpt
jp
mov
mov
fidivl
lods
sbb
cltd
sbb
push
xlat
jg
inc
imul
mov
lret
cmp
out
popf
and
test
movsb
pop
sbb
leave
ret
adc
mov
pop
mov
push
arpl
pop
ljmp
push
or
dec
and
xchg
out
int3
les
push
jns
inc
cmp
mov
cmp
mov
test
or
mov
adc
negb
lahf
push
fstpl
or
push
fdivrs
mov
cwtl
jge
out
imul
cmp
dec
imul
xchg
sbb
iret
sub
or
adc
push
into
pop
mov
xor
jne
and
enter
mov
enter
lahf
fistl
lods
cmp
repz
adc
fstl
mov
enter
sahf
cltd
xadd
xor
jge
sahf
test
mov
lods
xchg
mov
dec
jecxz
mov
mov
test
scas
fsubrl
scas
mov
pop
jecxz
add
xchg
ret
cmp
ds
mov
nop
push
cli
fisttpll
lret
mov
mov
aas
sti
ret
loopne
cmp
push
mov
jp
loopne
mov
jge
or
xchg
and
sub
testb
nop
cmp
push
mov
mov
adc
loopne
or
mov
dec
jb
movsb
fiaddl
jge
arpl
daa
js
pop
xchg
lcall
cmp
out
pop
inc
stos
push
loope
repz
fsubrs
cmp
pop
mov
sti
and
test
jns
xchg
mov
ret
iret
cmp
out
push
pop
in
mov
cld
rorb
jecxz
loope
adc
push
icebp
ud1
dec
in
mov
or
arpl
jnp
hlt
jns
pop
mov
pop
pop
or
pop
aad
dec
and
das
out
push
push
jo
das
lock
xchg
pop
dec
add
add
jo
cmpb
xor
jnp
lods
push
imulb
imul
test
ss
add
incb
negb
jp
dec
adc
lahf
sahf
add
push
push
cmpsb
cmp
shlb
pop
ret
loop
dec
or
pop
lret
scas
inc
stos
mov
adc
xchg
fsts
ss
sub
adcl
mov
fnstsw
sbb
scas
test
jne
push
lods
iret
xlat
jle
iret
ds
cmpsl
xchg
ds
cmc
xchg
or
test
jo
mov
add
xor
test
in
xor
and
sti
rcrl
jbe
sbb
rorb
repnz
add
mov
ja
movsb
sub
test
nop
jmp
and
cmp
nop
push
mov
ret
push
xchg
mov
and
mulb
or
rol
mov
pop
jbe
push
xor
lcall
out
cmpsl
out
jg
in
loop
mov
divb
inc
sbb
int
pop
lret
add
and
js
imulb
fidivs
pop
lret
add
clc
jno
rcrl
lods
int
sahf
fiadds
mov
aaa
andl
aad
stc
dec
jbe
mov
and
inc
scas
sub
lds
inc
push
outsb
xchg
ficomps
loopne
popf
fcmovu
cmp
dec
xchg
dec
stc
mov
dec
inc
xchg
add
pop
inc
sub
pushf
inc
ss
mov
stos
fsubrs
mov
cmc
pop
mov
scas
or
add
popa
pop
addr16
pop
cwtl
loop
ret
mov
js
lods
mov
mov
ja
shrl
pusha
int
lods
jl
xlat
jmp
pop
or
in
in
mov
and
aaa
imul
push
clc
or
pushw
cmp
lcall
les
fimuls
add
out
push
and
pusha
dec
add
push
cs
mov
sub
push
test
sbb
std
aad
aaa
frstor
aaa
fisttpl
enter
movsb
mov
push
mov
adc
jg
aam
ljmp
lods
and
js
push
fisubrs
add
dec
sub
add
shr
cwtl
adc
push
adc
mov
mov
cmp
jge
pop
jno
call
cli
das
jae
sbb
addr16
inc
pop
sub
lock
ret
xchg
cmpsb
dec
or
push
sub
push
outsl
jmp
in
adc
mov
mov
xchg
ss
repnz
rcll
jb
mov
sbb
subb
sub
fs
aam
inc
incb
lods
cmc
add
jmp
test
cmp
es
xchg
sarb
sahf
fsubrp
pop
xor
cmp
sub
cmp
dec
fld
push
lds
mov
push
stc
mov
cwtl
push
or
mov
push
in
ror
push
fisubs
jp
dec
push
rclb
stos
cmp
mov
cmc
adc
or
lock
dec
push
movsl
mov
out
gs
mov
cs
or
lods
gs
orb
ja
fcomps
int
fsubrs
inc
jmp
add
sub
pop
xor
and
push
lahf
add
jno
stos
mov
outsl
pushf
inc
jmp
mov
ret
movsb
dec
or
xor
sahf
and
pop
inc
pop
aas
fdivrl
jge
jp
test
pop
and
repz
ror
pushl
jmp
and
gs
mov
sub
push
in
fidivs
jecxz
imul
popf
adc
imulb
dec
xor
mov
mov
dec
movsb
or
bound
lret
loop
pop
stos
ja
bound
fnsave
xor
mov
out
push
jns
mov
cwtl
mov
push
shll
cmp
sbb
shll
or
xor
xor
sub
push
das
movsl
inc
and
xchg
mov
or
sar
xor
addr16
out
add
sbb
sti
pop
cmp
dec
mov
mov
aas
sub
cmpsb
add
and
int
adc
xchg
sbb
movsl
jno
xor
lret
adc
xchg
into
bound
cwtl
imulb
subl
adc
out
in
sub
mov
push
loopne
dec
imul
mov
mov
push
dec
or
inc
cmc
jno
cltd
cmpsb
jle
or
push
xchg
ja
push
andl
test
adc
iret
aas
pop
cmp
lret
mov
pop
mov
ljmp
mov
aas
pop
ret
or
inc
jno
ja
mov
xor
dec
clc
pushf
out
mov
out
cs
test
xor
out
adc
ja
bound
sarl
push
int
dec
aaa
ret
leave
out
orb
sarl
jae
js
cld
mov
inc
fcmovnu
out
jle
mov
imull
ljmp
sub
dec
mov
xor
inc
inc
mov
arpl
lods
das
pop
mov
cmp
push
xor
mov
cmc
add
icebp
stc
jae
ret
cli
into
sbb
stos
push
movsb
adc
dec
mov
popa
push
out
sub
repz
mov
faddp
jmp
hlt
sbb
and
adc
jnp
andl
js
cmp
cmp
jge
jge
outsl
mov
in
test
movl
xchg
daa
ds
cs
cmp
xchg
dec
call
add
inc
or
and
out
imul
jnp
lahf
adc
popf
mov
xor
push
inc
insb
fsubs
mov
test
push
xor
cmpsb
jne
adc
int
in
iret
negb
dec
test
rcrl
mov
lret
dec
setnp
mov
mov
jnp
mov
insl
xchg
subl
cltd
xchg
ret
lods
pushf
aas
test
into
mov
notb
sub
mov
clc
bound
inc
dec
std
push
das
dec
test
clc
cmp
aaa
pusha
popa
rolb
inc
aam
cmpsb
lret
add
pushf
xchg
ja
or
testl
sub
cltd
lret
cwtl
sub
mov
ljmp
popa
fwait
cli
popf
inc
bound
dec
mov
int
mov
arpl
push
jmp
leave
into
arpl
xchg
xchg
mov
jge
mov
mov
fadd
fisubs
cmpsb
pop
or
lods
xchg
push
mov
jne
mov
adc
cmp
mov
rclb
addr16
and
and
sub
les
add
sub
bound
xor
movsb
test
test
adc
cs
and
jo
sbb
mov
stos
xchg
mov
sub
sub
nop
loope
je
jno
daa
jns
push
or
inc
xchg
add
hlt
pop
leave
mov
jge
mov
push
sbb
out
fisubrs
movsl
movsb
xor
push
cld
aad
lret
xlat
lods
inc
addb
bound
into
adc
gs
std
cmp
cli
lock
popl
stos
pop
sbb
test
mov
push
addb
sbb
cmp
mov
inc
cmp
sbb
faddl
or
test
xor
inc
xchg
cs
or
test
dec
test
les
loop
orb
mov
adc
sbb
jge
pushf
out
enter
loop
lahf
mov
cmp
xchg
mov
rcr
int
jmp
popa
xorl
in
cmc
notl
enter
jb
push
ds
dec
imul
gs
les
dec
nop
mov
out
addr16
ljmp
or
testb
repz
test
loopne
inc
lcall
pop
cs
lock
out
fdivs
jns
jl
inc
mov
lahf
push
mov
sahf
adcb
test
dec
mov
pop
call
pusha
int3
cltd
adc
sbb
sbb
pop
imul
mov
fs
sbb
fcomi
cmp
push
test
test
push
std
ret
lock
insb
push
sub
cmp
mov
sub
pop
push
xchg
or
dec
inc
or
adc
cwtl
or
cld
xchg
or
jae
push
loope
inc
sahf
xchg
ret
test
pop
and
xchg
call
jp
out
cmpsb
xchg
mov
pop
addr16
adc
sub
test
push
dec
inc
into
or
adc
out
pop
cmp
fdiv
shll
pop
enter
aaa
mov
jns
cmp
adc
cwtl
push
stos
or
xlat
xchg
andb
loope
jne
or
add
repnz
mov
xor
ss
adc
xchg
mov
cmp
repnz
or
std
or
mull
out
fwait
lahf
jmp
or
subl
xchg
mov
or
loop
lods
js
and
fcoml
aam
mov
into
sub
xor
push
std
rep
loopne
out
and
sub
out
jbe
in
idivb
std
nop
inc
add
enter
mov
fnstsw
int
dec
mov
pushf
pop
inc
or
mov
ds
das
xchg
daa
xor
fmull
pop
in
dec
fcmovbe
pop
mov
cmp
adc
int3
fcmovnb
dec
ficomps
popa
pop
pop
push
test
imul
in
mov
mov
mov
xlat
jne
cmp
xor
sbb
jb
xor
fbld
xchg
push
stc
das
es
ja
clc
insb
ret
mov
pop
mov
rolb
fidivrl
adc
into
shlb
mov
sbb
push
dec
sub
dec
clc
popf
das
push
lds
jecxz
repz
testb
mov
mov
sub
push
adc
mov
loopne
movsl
lcall
dec
fwait
aam
jnp
sbb
push
dec
dec
adc
pop
aad
movsl
mov
pop
ljmp
repnz
add
jecxz
sub
and
int
mov
mov
and
sar
sbb
fiadds
xchg
dec
pop
jb
lods
popf
mov
loopne
push
and
stos
jbe
mov
jl
lea
xchg
stc
shrb
xor
or
dec
test
mov
push
or
xor
mov
cmpsb
mov
sub
and
fcomps
dec
pop
leave
jle
cmpsl
push
pop
mov
add
out
xor
cmpsb
mov
idiv
cmc
movsb
push
movd
mov
and
cs
jae
xor
inc
push
cmc
sbb
push
inc
das
ss
jg
adc
pusha
lods
ret
dec
jns
int3
sub
lahf
into
sahf
mov
call
adcb
pop
mov
sti
sub
inc
jns
icebp
pop
inc
test
call
repnz
into
mov
aas
mov
das
dec
lods
outsl
jecxz
lock
loope
jge
mov
fldenv
mov
das
mov
loopne
push
mov
lret
and
push
xchg
push
das
orl
push
inc
outsb
jne
push
xlat
cmpsb
inc
and
mov
test
mov
mov
in
pop
rcrb
das
and
pop
aaa
sbb
stos
jae
push
lea
popf
sbb
xlat
jbe
mov
jno
ds
xchg
adc
xor
sarl
in
in
push
inc
jb
sub
push
jge
sub
dec
insb
fisubs
cmc
popf
xchg
jae
inc
lods
sti
inc
inc
jno
out
xor
ds
dec
cmp
arpl
popf
fsts
cld
add
xlat
sub
mov
sbb
cmpl
xchg
mov
addr16
lods
xchg
scas
cmpsb
cmp
out
cmpsb
and
lods
add
and
push
push
dec
roll
enter
dec
pop
inc
repnz
int3
cmpsb
mov
test
inc
xchg
mov
movsb
je
sub
jg
push
mov
out
cld
ret
testb
out
jmp
xor
stos
cld
ja
idivb
das
outsb
lcall
xchg
sub
ss
movsl
xchg
add
in
loopne
inc
je
hlt
or
scas
mov
ficompl
sti
test
lods
hlt
aad
sub
mull
xlat
out
gs
jne
stc
pushf
push
testl
mov
movsb
ds
xor
sbb
jae
lods
fmull
in
or
test
push
gs
fists
shrd
mov
stos
fs
adc
aad
rclb
insl
sub
out
pop
out
dec
sbb
outsl
int
sbb
scas
dec
leave
test
xchg
sub
push
divb
sub
mov
push
neg
aad
xchg
sbb
es
stc
cmp
mov
mov
inc
xor
stos
imul
xchg
loope
mov
es
call
call
push
mov
jecxz
in
xchg
cmp
xlat
icebp
cmp
out
or
ljmp
icebp
jne
sub
mov
mov
aam
xchg
repnz
mov
sbb
js
leave
stos
std
push
mov
mov
lea
jg
push
js
cs
mov
dec
lahf
mov
ficoml
ret
pusha
push
mov
int3
push
sub
push
xchg
addr16
inc
cmp
or
sub
mov
sbb
jns
mov
mov
pop
pop
mov
cmpsl
lds
mov
sub
subl
push
outsl
stos
mov
das
push
roll
pop
inc
xchg
mov
das
cld
cli
loop
or
and
mov
adc
cwtl
into
cmp
in
in
std
repz
push
sub
adcl
sbb
lods
andb
arpl
inc
sbb
popf
test
cltd
push
mov
or
cmpsl
mov
sub
stos
fidivs
notb
xbegin
out
incb
sbb
pushf
mov
xchg
mov
pusha
dec
lahf
sub
push
jmp
mov
push
jmp
pop
popa
in
popa
roll
sbb
pop
lcall
sub
dec
cmp
mov
sub
dec
jno
dec
or
cmp
pop
stos
movsb
mov
mov
cmp
pop
dec
idivl
xchg
cwtl
mov
and
icebp
or
adc
lahf
mov
xchg
lret
cmp
push
push
and
test
xor
cmp
dec
rolb
and
pop
enter
rol
xchg
dec
and
pop
xor
cmpsb
leave
and
dec
nop
into
lds
outsl
pop
lock
ficompl
sub
sbb
pop
popf
inc
ja
inc
mov
int3
cmp
xchg
adc
les
mov
ret
aad
xor
sub
fcoms
push
and
xchg
out
movsl
and
stc
jge
push
pop
add
cmc
mov
mov
mov
test
lods
jnp
fists
lret
hlt
xchg
arpl
or
and
stos
mov
xchg
enter
xor
shrl
xchg
scas
clc
adc
mov
inc
sub
fisubs
cli
push
inc
aaa
add
xchg
iret
jle
mov
dec
xchg
addb
push
fldt
lret
int3
lret
cmp
orb
outsb
lods
inc
lea
xchg
mov
cli
jb
cmp
lds
mov
or
in
adc
push
out
cmpsb
sub
outsl
rcl
mov
inc
shrb
cmc
nop
pop
mov
scas
mov
cmp
dec
andl
xor
daa
mov
ds
lret
mov
jo
icebp
arpl
out
cmp
jno
movsb
in
test
xchg
sub
enter
cld
addr16
and
in
rorb
push
add
jg
repnz
cmpl
call
jg
js
in
sub
enter
incb
fisttpl
sub
pop
mov
repz
sub
stos
and
not
les
jae
ficomps
sti
ds
dec
movsl
jmp
js
je
inc
cmp
jmp
inc
push
dec
sbb
jle
cld
pop
sbb
dec
stc
mov
inc
imull
js
in
mov
imul
pop
mov
cli
xor
dec
ja
sarl
inc
test
iret
and
into
xchg
sub
pop
push
out
jns
push
mov
ja
je
nop
xor
mov
jbe
js
lods
inc
data16
stos
repnz
jge
pop
adc
inc
push
mov
jo
lea
pop
add
mov
stc
jno
sahf
cmp
cs
in
mov
lret
imul
xchg
cmpsl
xor
or
sti
push
mov
mov
pushf
push
adc
dec
das
xchg
push
arpl
adc
xor
fndisi(8087
ret
cmp
cmc
inc
fisttps
xchg
mov
repnz
add
repnz
shrb
pop
test
jbe
insb
or
sub
sbb
pusha
push
sbbl
hlt
inc
arpl
clc
pop
xor
adc
sbb
sbb
inc
cmc
push
push
scas
pop
xor
push
popa
lret
rcrb
ljmp
dec
jmp
xchg
mov
adc
leave
popf
xchg
idiv
and
mov
cmpsl
or
aaa
mov
inc
das
dec
sti
sti
mov
aad
sbb
jae
scas
insb
shl
cmpsb
movsl
cmc
pop
push
cltd
je
inc
xchg
mov
sub
addr16
stos
inc
stos
ja
pop
or
push
roll
sbb
inc
add
jmp
shrb
outsb
bnd
imul
sbb
xor
daa
sbb
fsub
push
xchg
push
xchg
insl
stos
ret
icebp
mov
dec
repz
daa
lods
mov
add
dec
jne
mov
out
lret
sub
adc
add
call
scas
repnz
shll
cmp
push
or
mov
sahf
xchg
jnp
bound
jb
scas
ljmp
int
nop
push
aad
cwtl
mov
es
xchg
jg
fstpl
inc
adcb
mov
pop
xor
dec
ret
adc
xchg
aaa
push
mov
xchg
push
dec
aam
and
inc
adc
and
or
mov
jae
mov
ret
add
test
rcrb
adc
std
and
add
jb
jo
push
lds
test
adc
lea
lds
xor
lret
inc
aam
jmp
push
sub
jle
imul
nop
add
adc
pushf
add
inc
dec
xchg
shrb
sbbl
xorb
xlat
inc
gs
loop
xchg
pop
mov
xchg
cmp
pop
fbstp
in
xor
in
cmp
cmp
and
sbb
lret
or
cmp
and
ljmp
push
jo
ret
jb
mov
jb
in
push
in
xchg
pop
cs
dec
dec
jg
xchg
out
rclb
lods
cmp
stc
fbld
stc
xorl
pause
lret
sarl
inc
fcomps
push
inc
and
adc
repz
cmp
sar
pop
mov
adc
lcall
cmp
adc
dec
mov
cld
adc
in
inc
push
cmp
add
dec
and
std
test
sub
mov
movsbl
jge
popa
es
into
pop
sub
movl
outsb
cli
mov
ljmp
inc
dec
fwait
nop
popa
fsub
pop
flds
cmc
andl
jle
imul
mov
popf
pop
sti
dec
push
mov
cli
xor
or
cmp
lea
ret
fistpll
les
shrl
addl
ficomps
xor
and
push
cmpsb
jp
mov
sub
adc
fmuls
mov
outsb
cmp
arpl
dec
sti
dec
mov
sti
decb
pop
cltd
pop
add
or
int3
stos
dec
fs
push
ja
sub
test
xor
or
sahf
push
cwtl
lods
mov
cltd
dec
jno
fnstcw
ljmp
int
xor
aad
idiv
testb
rcrb
adc
dec
sbbl
int
int
imul
add
add
jg
jge
es
jl
pop
in
sub
cwtl
xchg
push
add
rcrb
call
ja
cmp
xchg
scas
jo
mov
push
mov
jecxz
pusha
ss
push
int3
jg
dec
aaa
sbb
pop
or
movsl
mov
out
jmp
add
inc
lock
mov
lea
cs
shlb
dec
mov
or
mov
jp
cmp
push
inc
pusha
mov
push
mov
push
stos
xor
arpl
int
mov
inc
mov
inc
in
mov
sub
mov
out
js
mov
inc
push
in
sub
test
push
pop
dec
cmpsl
dec
mov
in
mov
cmp
cmp
lods
push
push
popf
add
jb
add
mov
insb
adc
xchg
fs
out
mov
jnp
pop
in
inc
rcll
fdivr
aad
push
shrl
mov
cmpsl
cmpsl
inc
out
out
adc
scas
rorb
insl
fmuls
add
jge
imul
xchg
ljmp
aam
cwtl
jmp
mov
sub
fistl
jl
scas
jge
stos
xchg
and
mov
stos
shll
xor
outsb
cld
roll
pop
xchg
mov
in
dec
insl
scas
rcrb
adc
mov
pop
sbb
je
adc
pushf
fistps
jmp
ds
ja
fs
adc
mov
mov
pop
fwait
test
or
pushf
fidivrs
cmp
jecxz
dec
dec
xchg
adc
sbb
pop
adc
jl
jno
or
jmp
jae
stos
jmp
jns
imul
dec
rclb
idivb
in
fisttps
push
subb
jne
mov
js
outsb
or
lret
cmp
aaa
lds
sbb
push
mov
sbb
add
push
pop
inc
movsb
lea
cmpsl
mov
and
inc
dec
fs
push
lods
dec
lcall
push
push
mov
mov
fdivs
add
aas
mov
jo
push
mov
fcompl
fnop
inc
ret
lods
out
or
in
movsl
jb
loop
cmp
mov
xchg
and
pop
arpl
fwait
sahf
outsb
rcr
je
xchg
dec
rcr
dec
ss
mov
das
push
jp
daa
jmp
sbb
cs
sbb
lret
xchg
sub
mov
jle
das
add
stos
imul
adc
pop
in
int3
xor
mov
dec
das
cmp
pop
mov
fisubrl
in
outsl
jle
rdpmc
shl
push
xor
push
andb
jecxz
and
ljmp
punpckhdq
xchg
cmp
mov
jecxz
stos
jne
insl
push
flds
pop
sbbl
cmpsb
jnp
mov
xlat
jl
mov
movsl
fistps
sti
mov
ja
jae
adc
inc
sub
in
inc
loopne
mov
xchg
and
add
cs
ja
mov
mov
dec
inc
pop
inc
mov
das
loope
dec
xchg
dec
icebp
fistpll
fcoms
add
pusha
mov
insl
loop
mov
sub
mov
inc
cltd
sbbl
xchg
mov
cmp
mov
xchg
mov
add
daa
cmp
adc
xchg
stos
mov
adc
sahf
daa
push
mov
mov
mov
cld
xchg
push
je
lea
lret
aas
lds
add
test
ss
int3
cld
mov
adc
enter
jle
mov
add
nop
jle
sub
testb
leave
ja
mov
push
lock
test
xchg
outsl
xlat
fistpl
xor
sub
rcll
das
push
and
loopne
scas
mov
mov
cltd
lods
in
mov
cltd
pop
ss
cltd
scas
mov
mov
in
xor
push
push
jle
divl
push
lret
test
dec
stos
xchg
cmp
mov
fmuls
xchg
lahf
mov
dec
cmp
push
jbe
test
gs
cmp
mov
into
pop
jbe
jge
mov
xor
std
pop
loop
out
js
rclb
or
inc
jnp
push
adc
add
jmp
inc
xchg
sbb
test
dec
mov
jbe
inc
sahf
xor
jp
jb
fscale
jo
ja
and
sbb
push
cmpl
xchg
aam
mov
jg
and
dec
xchg
shl
inc
cmpl
test
xchg
jno
sti
mov
int
dec
or
adc
ljmp
lahf
jl
and
push
mov
lcall
sahf
es
fidivrl
adc
pusha
xchg
sti
push
out
push
push
xchg
cli
popf
mov
lea
fwait
xchg
add
sbb
adc
sub
out
outsb
fldl
or
faddl
push
cmp
in
repz
mov
jns
aad
dec
lcall
lds
ss
insb
push
cmp
cld
dec
mov
orl
test
dec
pop
mov
dec
push
cld
mov
lds
sub
int
inc
fdivs
inc
stos
mov
sbb
rclb
or
add
jle
rol
jne
xchg
and
sub
jno
adcl
or
icebp
jo
mov
sbb
mov
scas
jmp
and
popf
sarl
xchg
and
cmpsl
pushf
incb
xorb
mov
pop
shrb
push
jge
cmp
int
xchg
stc
cmp
inc
jno
push
adc
inc
inc
xchg
and
iret
rcl
stc
in
fwait
ds
enter
xchg
add
cld
pop
sahf
mov
inc
lahf
outsl
or
pop
mov
pop
cmp
mov
orb
arpl
mov
xor
push
sahf
mov
shlb
sub
lods
xor
ficoms
sub
adc
push
int3
std
cmp
or
ja
sbb
iret
in
inc
in
dec
icebp
cmpsl
pop
pop
mov
pop
hlt
dec
xor
mov
jb
nop
gs
iret
mov
mov
pop
xchg
bound
mov
and
adc
mov
fwait
push
mov
test
adc
xor
fsubrs
loope
and
lahf
into
insl
insl
xchg
fistpl
arpl
pop
js
hlt
or
std
into
mov
fcmovnb
adc
adcl
adc
lods
cmp
and
pop
or
add
ficompl
pop
xor
inc
call
aam
ljmp
pop
xchg
shl
das
sub
mov
aam
push
push
push
test
cmpsb
push
pusha
dec
addl
ret
inc
js
imul
fnsave
xchg
xchg
and
in
sbb
rorl
cltd
aas
sbb
mov
mov
sub
xchg
cmc
push
mov
std
jl
addr16
clc
sbb
xchg
add
push
inc
fwait
push
lods
push
push
std
xchg
fiaddl
fistpl
lods
jle
mov
repz
and
scas
fsubrs
push
lods
xchg
pusha
fs
sbb
push
xchg
or
cmp
into
sbb
aam
push
pop
fucomi
dec
fildl
mov
mov
mov
cmpsb
fcompl
mov
rorl
cmp
dec
pop
push
push
push
push
push
ds
pop
mov
stos
scas
cmp
jno
cmpsb
test
and
scas
dec
cmp
mov
sub
loope
sbb
outsl
xchg
or
out
adcb
scas
xchg
movsl
lods
popa
mov
cmpb
inc
stos
cmp
inc
jp
into
sub
aas
test
xor
in
mov
pop
call
jp
arpl
xchg
xchg
arpl
jne
push
loop
sbb
and
mov
cs
xchg
int
out
nop
ret
lahf
stos
jbe
adc
inc
push
divb
cmpps
out
pop
shlb
pop
mov
int
ret
lcall
jmp
test
jae
fwait
sub
fidivrs
xor
movsl
out
lock
cwtl
stos
push
cmpsl
cmpsb
pop
adc
cmc
aas
add
fldenv
hlt
mov
mov
dec
das
sbb
jns
mov
fwait
mov
cli
movb
xlat
cmpsb
dec
fcomps
adc
mov
subl
adc
mov
lock
int
xchg
jbe
ljmp
fcmovu
mov
and
shlb
push
or
cmpsl
add
inc
test
and
icebp
jns
std
les
add
cwtl
mov
mov
pop
test
xchg
cmp
stc
int
sbb
imul
fs
mov
sub
in
hlt
fcompl
lret
cmpsb
pop
cmpsb
xchg
mov
jns
and
rolb
and
dec
orb
pushf
mov
ds
xchg
xchg
add
adc
repnz
adc
xchg
add
repnz
push
push
dec
mov
jecxz
cmp
dec
ret
js
pop
and
rcrl
sub
fs
popa
mov
pop
mov
jle
adc
cmpb
flds
test
stos
push
pop
and
cmp
stc
push
mov
out
out
xchg
jae
jnp
inc
rcl
rdtsc
insb
mov
lods
mov
dec
repz
daa
jmp
cmpsb
ljmp
and
outsl
hlt
sub
fs
xchg
repnz
hlt
scas
loopne
test
xlat
mov
pop
or
fdivr
adc
cld
add
fs
and
dec
jp
stc
push
jg
ficoml
inc
inc
or
lods
stc
push
push
in
stc
inc
cmp
mov
add
mov
sub
pop
into
in
push
mov
cld
in
dec
xor
clc
repz
xor
mov
sbb
stos
pop
bswap
pop
fldenv
mov
sbb
adc
or
push
bound
sub
stos
sub
dec
mov
adc
push
dec
cmp
shl
aad
jno
push
jg
sub
bound
sbbl
adc
loope
adc
jmp
jns
cltd
gs
push
andps
or
mov
mov
dec
ss
mov
out
fsubl
adc
dec
clc
cmpsl
ret
sarl
sbb
mov
and
int
fisubrl
mov
sbb
test
in
add
loop
cmpsb
ret
lods
or
enter
ds
divb
hlt
cmpsb
mov
dec
fwait
add
sub
fnsave
mov
sbb
cld
xor
sub
andb
iret
xor
in
pop
cltd
in
imul
mov
dec
push
mov
movl
out
mov
mov
lret
xchg
pop
call
pop
mov
or
lds
sbb
pop
mov
xchg
dec
inc
aad
daa
dec
or
fsubrs
xchg
mov
cmpsb
push
shlb
sub
pushf
or
pop
repnz
mov
test
les
sbb
mov
inc
dec
push
cmpb
hlt
cld
and
fstl
mov
add
sub
aaa
sbb
xor
scas
movsb
fcmovnbe
pop
out
lcall
push
push
lret
clc
popf
dec
movsl
xchg
and
lahf
lods
in
jl
push
jae
repz
xchg
push
sarb
xchg
aaa
jge
dec
add
adc
arpl
pop
setns
push
out
fsubr
xorl
push
adc
xor
nop
stc
inc
push
lcall
fwait
subb
add
ret
dec
out
fisttps
mov
fists
pop
call
dec
les
adc
and
jl
dec
push
mov
loope
lret
xor
xchg
lea
fcomip
icebp
mov
repz
call
xor
sbb
daa
cmc
popf
mov
pop
xchg
xchg
push
cs
sti
lods
loopne
xlat
out
pop
dec
jmp
xor
sub
xchg
cmp
xor
push
shrb
xchg
cmp
hlt
mov
repnz
cmpsl
cmp
dec
xor
dec
std
mov
xchg
je
pop
ljmp
cmp
shll
mov
sub
cs
and
shr
mov
mov
lret
sub
movsb
sbb
or
xchg
lods
adc
rcrb
mov
fcoms
dec
mov
mov
insb
xchg
mov
enter
repz
dec
les
lahf
ret
pop
shlb
push
call
bound
imul
stos
jns
pop
pop
sbb
stos
mov
adcb
stc
lods
lea
imul
or
xor
es
lcall
rorb
test
inc
js
jbe
and
sbb
cmpsl
mov
adc
pop
inc
icebp
dec
mov
sbb
movsl
xchg
rclb
inc
adc
addb
and
cli
fnstcw
adc
dec
je
inc
inc
dec
rolb
je
loopne
cmp
sub
scas
bound
loop
lret
mov
fmul
sub
sarb
hlt
pushf
mov
xor
jae
dec
out
das
fimuls
jno
push
and
cmpb
sub
pop
pop
mov
cwtl
or
push
push
add
pop
inc
aam
add
sahf
or
iret
xor
lret
ret
inc
loop
xlat
and
push
push
enter
inc
ljmp
mov
add
cmp
mov
lret
xor
mov
and
popf
leave
xor
mulb
ds
push
cmp
into
push
rorl
mov
std
mulb
scas
inc
cmp
mov
sbb
leave
cmp
movsb
mov
lods
repnz
adc
rolb
daa
pop
test
in
xor
xor
mov
sbb
xchg
out
or
pop
imul
repz
je
daa
pop
pop
sbb
push
inc
andl
and
enter
sahf
sbb
fs
push
inc
mulb
adc
sbb
test
psubusb
aaa
dec
xchg
xchg
movsl
xor
sbb
lcall
sub
jl
lds
or
dec
inc
loopne
outsb
mov
insb
or
dec
mull
movsl
push
dec
stos
push
bound
adc
sarl
sub
xchg
adc
lahf
xor
incl
or
xchg
mov
inc
ja
iret
outsl
inc
jno
addr16
mov
cmp
shrl
je
shll
fldt
sarl
push
pusha
mov
mov
pop
stos
lods
frstor
pop
dec
fadds
sbb
dec
pop
mov
orb
lock
inc
bound
out
push
lock
jae
mov
push
pop
inc
fcomip
in
icebp
jg
in
mov
bound
mov
cmp
hlt
pop
sub
dec
jo
add
xor
inc
jg
xor
or
xor
sub
out
and
test
pop
mov
ds
psrad
push
cmp
pushf
jmp
stc
loope
ret
enter
bnd
mov
dec
clc
sub
je
fwait
divl
mov
scas
jg
cmp
xchg
pop
les
imul
pop
mov
inc
add
push
stos
stc
ficoms
dec
dec
mov
pushf
pop
push
or
fdivl
out
mov
mov
cmpsb
rorl
jp
push
cli
push
fcmove
dec
dec
inc
mov
fbstp
outsl
int
add
pop
les
addb
ret
inc
iret
push
adcl
roll
rol
mov
jnp
or
dec
sub
add
add
cltd
into
js,pn
gs
in
mov
ds
xor
xor
out
or
push
mov
lret
pop
mov
push
hlt
jecxz
jbe
in
movl
test
cwtl
ljmp
mov
mov
stos
push
outsb
xor
bound
xchg
imul
sahf
and
sub
or
mov
sarl
aaa
lods
mov
mov
sub
and
out
leave
mov
movsb
rcrl
adcl
mov
xchg
nop
enter
cltd
pop
movsl
ret
mov
mov
sbb
icebp
rclb
fwait
call
shl
jno
pusha
add
add
lods
fwait
push
lods
xchg
shlb
popf
pop
push
je
outsl
sub
int
or
cmp
lret
testl
lods
jnp
lds
rdtsc
jge
sahf
pushf
mov
loopne
adc
jo
out
xchg
mov
sahf
xor
mov
sbb
mov
push
cwtl
cmp
mov
xchg
testl
pop
aas
mov
sbb
das
or
mov
pop
sub
xchg
in
xchg
jmp
sbb
mov
sub
and
aam
pop
cli
adc
sbb
scas
mov
jmp
and
rcr
hlt
lret
mov
pop
fistps
xor
pop
adc
push
pop
mov
mov
enter
cmpb
cmp
push
mov
jb
dec
jbe
push
pop
cmp
cmp
int
or
mov
mov
cmp
leave
rcr
sub
push
iret
push
mov
jbe
test
ror
fs
cltd
movl
mov
out
fstpl
repnz
sbb
jno
sbbb
movsb
or
xchg
loope
and
ja
dec
fsub
push
rcr
subb
push
xor
dec
sbb
mov
sub
mov
cmp
daa
cmp
ret
inc
das
imul
sub
cld
aaa
sar
dec
ror
cmp
mov
xlat
fldl
imul
xchg
fbld
test
pop
jecxz
xchg
xchg
push
add
pop
xlat
and
push
inc
out
or
mov
orb
pushf
les
push
pop
jns
dec
cmp
push
dec
movb
sub
notl
mov
dec
jno
push
pop
test
cltd
cmp
sbb
int
pop
and
or
imul
xchg
sti
push
out
inc
imul
jne
mov
mov
jecxz
negl
xchg
push
repz
rol
dec
mov
mov
in
xchg
dec
leave
mov
cltd
push
push
aad
ret
mov
mov
inc
inc
mov
jmp
xchg
dec
std
or
mov
mov
mov
movzbl
mov
sbb
jl
inc
arpl
xor
push
xchg
data16
lods
push
outsl
sub
mov
andb
cltd
gs
and
stc
mov
cmpsl
sahf
out
inc
out
cmp
xchg
inc
loope
jle
xor
and
aam
icebp
pop
insl
fisubl
inc
xchg
ja
jnp
aam
test
jno
lahf
cli
in
leave
imul
fisubs
pop
ret
add
ss
and
add
dec
out
push
fisubrs
dec
cmc
sahf
jb
fidivl
imul
adc
inc
push
cmp
jge
push
sub
adc
lds
mov
and
cmc
sbb
inc
pop
mov
outsb
ret
jo
ds
into
mov
inc
cld
movsl
cli
cmp
sbb
xchg
mov
sbb
flds
ffree
subl
ljmp
pop
push
mov
sti
sbb
fucomp
jo
stos
inc
and
lret
mov
inc
mov
clc
push
test
push
call
dec
xlat
sbb
dec
loop
out
lods
aam
cmpsl
jne
mov
scas
mov
jmp
dec
jp
jbe
fnstcw
movsb
addr16
adc
sub
popf
lcall
test
ss
ret
xchg
cmp
insb
add
cmp
xchg
pop
dec
xchg
and
je
incl
addl
inc
out
sbb
adc
lcall
or
shr
mov
pop
push
mov
mov
icebp
pop
test
mov
xchg
and
add
cwtl
enter
add
sub
adc
nop
mov
cmp
push
fnsave
add
mov
lods
fiaddl
pop
jb
mov
shlb
push
mov
adc
adc
xchg
lahf
adc
or
loope
sub
aas
enter
lahf
push
cmpsb
mov
mov
sbb
jl
fdiv
lods
mov
push
pop
add
or
fcoml
mov
xchg
cmp
pop
pop
fadds
movsb
leave
dec
outsb
and
pop
mov
mov
scas
push
pushf
mov
fwait
stc
xchg
jp
shlb
fidivs
pop
imul
mov
mov
xlat
daa
jl
cmpsl
cmp
mov
adc
in
sbb
pop
inc
pushl
movb
pushf
pushf
aam
test
fldenv
push
xchg
add
aad
xchg
test
and
mov
jl
jbe
in
mov
loop
out
rorl
fcmovnu
or
das
sti
lock
sahf
xor
sub
push
xor
mov
add
subb
push
sub
stos
mov
push
xor
pop
jge
imul
dec
stc
or
sbb
push
push
dec
jae
in
scas
sub
push
add
loop
out
out
push
sbb
decb
mov
aas
mov
insb
sub
xchg
add
lods
in
push
cmp
and
dec
fadds
pop
push
inc
cmp
pop
inc
rclb
scas
mov
mov
jnp
data16
ret
fstpl
hlt
loope
mov
lcall
jne
jp
in
jg
inc
jo
mov
mov
jnp
test
jnp
cmc
out
roll
lods
cld
and
int
gs
pop
mov
test
adc
mov
xchg
cltd
sbb
or
pushf
ss
testl
mov
out
add
fs
lods
cmp
adc
dec
in
dec
nop
nop
mov
movsb
pop
je
sbb
mov
mov
std
mov
icebp
arpl
sarb
or
lret
inc
repz
xchg
lods
inc
or
loope,pt
fimull
and
scas
jne
mov
lods
push
insb
xor
pop
cmp
pop
mov
clc
mov
testl
mov
xchg
out
out
jecxz
lds
addb
ret
xchg
out
out
cmp
xchg
imul
jb
and
lea
js
call
push
arpl
in
mov
jge
ret
repnz
ds
pop
rcrb
cmp
fmuls
movsb
pop
test
sti
shll
mov
es
jbe
repz
pop
stc
int3
inc
xor
xchg
push
fst
push
repnz
pop
stos
push
xlat
add
mov
cli
ja
xchg
out
iret
ds
fsubrl
jmp
movsb
movsl
add
xchg
daa
cmc
xchg
pop
mov
pop
loopne
xor
lahf
daa
inc
add
movsb
into
xchg
cld
fdivl
cmp
dec
push
popf
jnp
mov
stos
out
mov
aam
stc
sub
dec
push
sub
and
xlat
cmc
hlt
sbb
test
push
fldl2e
ficoml
cmc
jmp
leave
sub
cmp
mov
lods
mov
mov
push
addr16
stc
mov
movaps
sahf
mov
clc
movsb
mov
cmpsl
xchg
xor
jbe
jae
mov
andb
cmp
xchg
push
push
pop
dec
dec
lret
das
int3
mov
or
jbe
mov
fildl
fwait
push
call
sbb
xor
fisttpll
mov
fs
into
ljmp
push
sbb
dec
lahf
mov
das
mov
jae
stos
mov
inc
ja
jp
sub
lcall
imul
jb
out
fsubp
jmp
push
roll
ja
loope
inc
outsb
repnz
out
xchg
dec
lock
inc
or
mov
addr16
int3
adc
jns
mov
inc
sbb
mov
xchg
dec
insb
lods
in
mov
lds
rorl
dec
sub
or
jg
jno
dec
inc
mov
inc
arpl
fmuls
or
add
rclb
adc
xlat
ficoml
sub
jo
pop
test
outsb
push
sub
negl
stc
xchg
cmp
stos
mov
rol
repz
mov
insl
imul
stos
fs
dec
mov
sub
loope
ss
pop
lahf
sarl
leave
cmp
mov
cli
movsb
scas
out
roll
fstpl
frndint
loope
add
cmp
test
pop
or
loope
pop
xor
pop
mov
bound
call
pusha
push
cmp
ss
pop
outsl
mov
push
test
sbb
gs
jae
call
aas
pop
jmp
popf
sub
cmc
imul
dec
lea
call
int3
mov
jl
fnstcw
sbb
out
sub
leave
sbb
push
stc
js
xorl
ret
sbb
cltd
and
push
pop
ret
movsl
mov
pop
push
mov
inc
ffree
fbld
arpl
ljmp
outsl
mov
xor
mov
iret
sub
addr16
lea
into
stc
push
ss
outsb
xor
movsb
lock
and
add
pop
pop
fimuls
push
incl
adc
ret
test
jbe
inc
add
sub
cmp
mov
jecxz
mov
mov
cmpsb
push
in
dec
jbe
xor
add
pop
and
aad
push
mov
test
repnz
dec
ja
popa
adc
and
not
sub
mov
jmp
dec
bound
push
enter
and
inc
lret
mov
ret
mov
or
cld
jb
ss
add
mov
ds
adc
scas
rorb
rorl
mov
dec
push
sbb
icebp
call
mov
jp
mov
mov
lcall
stos
out
sbb
popa
aaa
push
push
mov
push
xchg
hlt
popa
xlat
lock
mov
push
mov
loope
daa
lods
outsl
xchg
inc
cmpsl
je
stc
in
bound
mov
aaa
lock
xchg
int
sbb
jle
cmp
jecxz
dec
or
cmp
adc
xchg
flds
movsb
xchg
sti
xchg
scas
loop
mov
stos
adc
daa
jbe
iret
out
int
shlb
lock
sub
dec
loopne
xor
jge
push
and
shr
jle
push
test
pop
popa
and
rcrl
dec
lcall
loopne
pusha
mov
fisttps
cld
or
jle
mov
fstpl
cmc
xor
push
dec
mov
test
mov
imul
fwait
mov
clc
inc
dec
xchg
ljmp
add
push
loop
test
xchg
dec
into
rcrl
xchg
fnstenv
adc
fbstp
cwtl
jge
push
std
orb
sbbb
lods
inc
jg
daa
js
xor
mov
push
and
adc
stc
push
iret
mov
add
mov
test
mov
cmp
popa
fndisi(8087
xchg
inc
sbb
pop
and
pop
nop
push
cmp
dec
mov
cli
add
les
jne
mov
adc
sbb
add
and
push
ret
mov
lret
push
mov
movsl
xchg
xchg
loope
cmp
jmp
dec
xor
dec
int
jmp
and
sub
call
int3
lea
pop
mov
scas
leave
sbb
xlat
jp
imul
lea
inc
insl
movsb
repz
push
cmp
sub
ds
or
ror
adc
cmp
out
add
dec
dec
mov
stos
jle
or
push
orl
xchg
mov
jns
push
fdivs
jmp
data16
out
daa
or
cltd
sbb
mov
pop
popa
ds
push
jo
push
pop
sahf
cwtl
outsl
fistpl
xorb
mov
pop
scas
popf
adc
ja
fwait
push
pop
and
sbb
shr
adc
sbbb
iret
pop
push
mov
sub
sub
xchg
sub
or
push
mov
out
jp
or
push
xor
jae
call
daa
pusha
xchg
xchg
or
mov
clc
movsl
test
imul
mov
lods
jmp
iret
xchg
push
sbb
aas
or
cli
lds
pusha
je
push
inc
das
imul
cltd
mov
ret
and
mov
subb
add
dec
pop
pop
mov
sub
lods
jb
mov
add
dec
adc
data16
mov
jno
cmp
push
stos
mov
dec
push
jne
sub
inc
js
pop
std
sbb
shlb
mov
jns
pusha
les
push
inc
aad
xor
vcmpss
add
movsb
mov
pop
dec
pop
mov
fidivs
push
fwait
push
sub
inc
mov
fs
stc
sbb
clc
inc
lock
loope
lcall
xchg
in
aaa
dec
mov
cmc
ret
pop
aad
les
xchg
push
push
movsl
gs
jne
add
leave
in
lea
xchg
xchg
jns
psrld
ja
pop
jg
adc
mov
ret
jbe
arpl
aas
addr16
cmp
loopne
das
mov
pop
sub
jb
mov
pop
stos
ficoms
enter
fwait
data16
and
dec
loopne
xchg
sub
lcall
or
dec
jb
mov
ret
xor
cmpb
lret
decb
pop
mov
les
xchg
push
inc
cs
aad
in
ret
cwtl
insl
pop
scas
xor
hlt
iret
rcl
and
adc
mov
lds
or
xor
sbb
nop
lret
jne
lds
repz
xchg
dec
scas
add
arpl
mov
insl
mov
pop
push
lret
sbb
push
shlb
cmp
add
pop
pop
pop
push
adc
xorl
ss
lahf
and
add
scas
jl
inc
insb
lds
js
add
leave
push
inc
ljmp
enter
repnz
push
xchg
inc
mov
into
fcompl
out
fsubl
fwait
les
push
imul
xlat
push
test
and
shll
scas
pop
mov
loopne
pusha
lds
addl
xchg
pop
decl
xchg
shrb
pop
xchg
stos
rcl
sbb
pop
jnp
pop
push
outsb
jns
lret
repz
mov
mov
mov
dec
mov
mov
xchg
xchg
lods
sub
dec
or
push
pop
dec
cli
lcall
adc
jne
insl
mov
fnstsw
test
fwait
and
sub
sti
push
loope
mov
adc
cmp
jl
or
sub
dec
mov
pop
push
ficoms
and
dec
ljmp
lret
call
add
add
aad
pop
outsb
and
out
movl
push
push
or
js
ss
xchg
fisubrl
lds
cwtl
ret
cmc
mov
push
sbb
lods
or
pop
out
sbb
xlat
adc
and
sti
jmp
adc
mov
xor
mov
or
lds
fldcw
outsb
jecxz
faddl
fs
adc
adc
insb
bswap
mov
rcl
dec
sub
loop
and
inc
cmc
outsl
and
sbb
mov
cltd
adc
xchg
aaa
jecxz
ret
pop
fisubrs
cmp
cli
or
out
imul
jb
mov
fldt
leave
inc
mov
xchg
dec
icebp
lods
inc
loopne
shlb
inc
xlat
cmc
mov
push
bound
sbb
pop
add
aas
fwait
and
inc
aam
icebp
pop
jp
mov
stos
imul
xor
xchg
shll
mov
sbb
fldt
fisubrl
stos
sub
xchg
ds
sahf
sbb
int3
push
imul
mov
arpl
sub
mov
orb
adc
dec
push
dec
test
lods
lock
jne
scas
mov
mov
push
mov
mov
scas
jge
in
lods
inc
popl
mul
lahf
ds
enter
xor
cmpsb
ret
cmc
test
jne
es
inc
sarl
dec
push
jg
sub
pusha
js
fidivrs
ja
in
call
pmulhuw
sti
or
imul
dec
cmp
arpl
add
cmp
shrb
popa
mov
inc
mov
shll
test
push
adc
or
mov
mov
sbb
push
insl
adc
pop
scas
mov
pop
test
fcmovbe
fcmovbe
pushf
sarb
arpl
mov
jl
push
call
popa
test
outsb
fcomip
inc
fcoml
in
or
jb
sbb
orl
jecxz
movsb
popf
arpl
xchg
or
std
jg
fwait
jbe
jp
jle
fwait
adc
stc
loop
rcrb
addr16
pop
adc
jle
dec
cld
xor
ret
cmc
cli
jmp
lahf
or
cmpsl
or
xchg
mov
out
outsl
jl
add
hlt
imul
out
add
clc
cmp
sti
out
mov
in
ljmp
mov
cmp
push
cmp
lret
add
or
mov
in
push
movsl
outsb
dec
sub
fyl2xp1
sub
pop
out
cld
pop
jmp
add
xor
dec
incb
mov
sbb
adc
sbb
adc
call
dec
mov
cmp
fisttpll
aas
mov
jmp
push
les
mov
ret
pushf
sbb
sbb
mov
inc
sub
popa
pop
sbb
mov
lock
popf
xlat
lods
inc
adc
inc
lcall
mov
out
scas
add
cmpl
out
sub
dec
cmp
mov
push
cmp
mov
int
or
pusha
lock
cwtl
cmp
and
add
mov
inc
push
lahf
fldenv
push
scas
pop
inc
insb
xchg
sti
xor
es
aam
sbb
mov
fldl
pop
adc
pop
push
jle
subb
sub
stc
adc
mov
aas
xor
shld
fsts
cmc
movsl
sbbl
pushf
and
daa
sub
mov
xchg
jmp
mov
xchg
sbb
jae
inc
cld
lods
inc
lret
arpl
mov
push
data16
out
out
pop
scas
fildl
gs
into
mov
cmp
je
push
jnp
lahf
lahf
inc
inc
pop
dec
mov
xlat
shr
sub
xor
int
push
pop
add
shll
xchg
and
sub
test
jno
subb
mov
out
jge
push
xlat
dec
cmp
pop
in
mov
mov
cs
cmp
pusha
gs
not
mov
mov
les
mov
fldt
sub
andl
outsb
inc
stc
inc
xorb
and
inc
lcall
xor
push
mov
ja
inc
icebp
cmpsb
dec
pop
out
pop
dec
ss
icebp
pop
test
pushf
lods
dec
inc
dec
and
jb
bound
mov
gs
pop
mov
sub
bound
popf
jnp
cld
in
pop
mov
xorl
sarl
mov
leave
xor
xchg
inc
fadds
pop
fsub
rclb
or
fs
jae
xchg
inc
xchg
insl
fwait
sti
sbb
jae
aaa
pushf
lea
rcrl
in
outsl
add
cwtl
xchg
popa
xor
xchg
cmp
xor
xchg
mov
pop
pop
pop
mov
hlt
fwait
mov
mov
push
ds
test
ret
cwtl
jl
lcall
lods
sub
es
adc
add
xchg
mov
pop
push
mov
adc
or
int3
cltd
sbb
or
mov
add
and
xchg
ret
aas
ja,pt
inc
push
lahf
les
jae
mov
push
ljmp
lret
enter
fiaddl
mov
stc
push
idiv
test
orb
lods
shlb
in
xlat
adc
push
cmpsl
push
dec
jl
pop
js
aad
mov
push
xor
or
push
cs
sub
sbb
jne
or
push
mov
cltd
mov
pop
stos
pop
xor
add
out
mov
mov
mov
xlat
push
imul
out
push
pop
lret
mov
pop
andb
jmp
inc
mov
cwtl
sbbb
xchg
pop
push
fadds
dec
adc
dec
pop
push
adc
nop
bnd
and
mov
test
mov
mov
sub
in
xor
cmp
pop
xor
insl
pop
lods
pop
leave
lds
out
iret
movsl
fcmovnbe
mov
inc
xchg
ficomps
gs
jnp
sub
cmp
fdivrs
cwtl
mov
sahf
in
aaa
into
bound
lret
leave
das
pop
fildl
ficomps
sub
adc
repz
es
repnz
or
xchg
sti
hlt
adc
and
ficoms
incl
out
insl
mov
cmc
push
lock
fimuls
sub
xchg
mov
call
fwait
xchg
in
gs
mov
sbb
or
out
cli
repz
push
mov
shlb
lahf
int3
dec
stos
adc
xor
ljmp
xchg
int3
sbb
lods
inc
lods
add
push
pop
xchg
test
loope
stos
in
js
dec
loopne
andb
packsswb
mov
jne
setae
jmp
mov
in
push
ror
rcrl
inc
inc
movl
push
leave
call
adc
fildl
mov
xchg
sbb
mov
sbb
cmp
loopne
mov
bound
test
nop
mov
sarl
jae
ret
aas
xchg
xlat
adc
push
push
fbstp
ret
cmp
or
aam
xchg
xlat
jge
shll
stos
int
xor
cmc
dec
imul
lods
addb
inc
xchg
jle
aaa
repz
jbe
cmp
xchg
pop
test
or
test
pusha
add
cmp
xor
adc
leave
or
popa
and
add
xorb
and
lret
mov
adc
mov
and
push
test
int3
fadd
fistpl
fs
scas
cmp
enter
jo
sub
jl
xchg
mov
loop
sub
je
test
add
into
jno
dec
mov
mov
jge
jnp
push
xchg
cmpsb
js
xchg
and
sahf
cmpsl
mov
outsl
mov
xchg
mov
scas
xor
lock
pop
loopne
insl
mov
js
inc
cld
pop
mov
cmp
nop
testl
gs
mov
fsubp
mov
jnp
push
loopne
iret
mov
add
enter
rcrb
adc
stos
in
push
gs
mov
pop
dec
ss
inc
push
jg
aad
dec
out
lcall
sub
sub
test
xchg
sub
push
pop
push
sub
into
test
xchg
div
std
cmp
pop
int
pop
fimull
sbb
adc
mov
mov
mov
das
add
test
push
xchg
mov
stos
inc
scas
mov
sub
and
mov
or
movsl
and
ja
pop
fstpl
lds
arpl
sar
or
dec
jns
in
sti
shlb
sub
mov
or
sub
pop
sbb
fidivrl
imul
sub
push
sub
adc
idivl
cltd
outsl
mov
aas
jae
xchg
jb
xchg
lcall
xor
test
mov
mov
cmp
aam
pop
jnp
jl
dec
popf
lret
sbb
minps
dec
mov
inc
push
sbb
jb
stc
adc
sbb
into
pop
mov
mov
mov
scas
sarb
fisttps
mov
add
lods
adc
mov
jnp
xchg
popa
push
mov
lods
mov
mov
sbb
inc
andl
jge
call
or
mov
scas
jl
adc
idivl
outsl
cli
cs
rcl
mov
out
fld
imul
js
movsl
js
cmp
add
inc
jbe
mov
or
loope
lcall
bound
lret
push
sahf
scas
jne
adc
jle
xor
dec
adc
mov
mov
insb
push
sti
xor
rorb
lret
rorb
insl
imul
sub
fstpt
std
daa
test
dec
adc
insl
jp
xor
sub
daa
cwtl
imul
dec
xchg
cmp
sbb
sar
adc
enter
xchg
in
aas
push
inc
sbb
cmc
imul
ret
cld
add
inc
lods
aaa
sub
dec
outsl
das
or
sub
xchg
cwtl
pop
daa
push
out
mov
divw
ja
jb
aas
js
loope
lcall
add
aad
cmp
inc
push
dec
call
shlb
pop
and
adc
jo
jno
mov
fsubrp
enter
xorb
push
fmull
adc
xchg
xor
adc
cmp
imul
jno
push
test
add
xchg
iret
std
xor
xchg
lret
cmp
dec
push
rcrb
nopl
jno
push
popa
cmp
sbb
push
je
int
add
stos
sbb
sub
jp
daa
mov
mov
add
mov
aas
das
push
pushf
xchg
aas
and
xor
jne
outsw
hlt
dec
mov
repz
push
mov
in
xchg
sub
enter
in
leave
cmp
sub
add
pushfw
loope
aaa
xchg
test
mov
jl
stos
cli
cld
out
lds
sti
pushfw
data16
test
pop
or
jl
outsb
dec
aaa
pop
rolb
mov
inc
mov
insl
mov
roll
or
xchg
sub
cmp
loop
or
and
add
aaa
movsl
or
xchg
in
shlb
andl
sbb
inc
addl
out
movsl
daa
adc
imull
or
mov
pushf
insb
sub
sub
inc
add
push
cmc
xor
stos
mov
xor
adc
dec
xchg
sub
fstl
fists
xchg
inc
lcall
sub
cmpsb
dec
mov
xor
sbb
lds
adc
adc
mov
cltd
insb
cmp
ss
pop
add
pop
iret
push
mov
rol
js
call
jle
scas
loop
popa
mov
xchg
mov
sbb
and
rcll
lcall
push
sbb
xchg
sahf
add
mul
sub
cmpb
sbb
lods
daa
or
inc
insl
adc
mov
or
dec
les
cmp
aas
inc
popa
call
pushf
mov
cwtl
mov
mov
int3
rclb
xchg
sub
ds
popf
jecxz
popa
lret
lods
jne
xor
scas
adc
xor
pop
inc
inc
xchg
jbe
out
iret
pop
pop
gs
mov
push
push
pusha
mov
lea
xchg
push
je
mov
negb
add
add
xchg
and
xchg
aad
mov
cmp
vcvttpd2dqx
ds
rcll
lahf
addl
xor
fwait
lret
lcall
lds
repnz
or
add
scas
jge
loopne
adc
out
add
cmp
mov
dec
sbb
enter
or
outsl
jp
scas
lods
popf
cmp
or
aas
cwtl
adc
aad
mov
lea
arpl
push
js
arpl
popf
fs
add
adc
aaa
sbb
rolb
inc
sbb
and
test
pop
hlt
cmp
adc
add
or
mov
inc
dec
out
sbb
nop
outsb
in
mov
xor
mov
scas
or
push
xchg
loop
mov
test
icebp
pusha
imul
pop
sbb
pop
cmpsl
add
mov
mov
stos
aaa
outsb
call
xchg
repnz
int
das
mov
sub
flds
pushf
shlb
push
dec
pop
pushf
adc
jnp
lret
in
jge
cmc
out
add
shlb
imul
hlt
out
fdivrl
add
pop
jnp
insl
outsl
cld
jo
hlt
mov
xor
inc
test
enter
mov
xchg
cmpl
sbb
mov
out
and
imul
fisubl
sbb
fwait
mov
pop
loopne
cld
adc
sarb
push
mull
mov
pusha
and
jg
call
dec
in
or
push
pop
mov
lcall
pop
in
jno
ds
and
imul
test
mov
jno
scas
xor
mov
and
inc
jecxz
repz
xchg
les
jecxz
xlat
sbb
mov
cmp
mov
xchg
loop
shrl
adc
inc
fidivrs
ret
xor
lea
in
test
das
dec
cmp
fiadds
roll
ffree
das
push
pop
ds
mov
mov
add
hlt
sbb
std
ja
pop
sub
jnp
jmp
push
push
mov
stos
imul
pop
clc
mov
cmp
dec
sub
push
fmull
fucomip
scas
push
icebp
jle
nop
daa
and
adc
pop
sbb
jg
xor
shl
mov
loopne
loope
into
xor
dec
and
ljmp
outsb
or
mov
push
shrb
fmuls
lret
dec
shrb
ja
mov
jnp
jp
pop
jle
cmc
addb
mov
sub
dec
leave
testb
adc
roll
mov
jle
flds
cmp
and
rcll
dec
aaa
jbe
mov
rcrl
shrb
cmpsb
ds
lods
jg
test
cltd
es
cmp
dec
data16
popf
or
cmp
sub
fnstcw
and
sbb
and
xchg
ljmp
sbb
icebp
sub
inc
mov
stos
sbb
jge
icebp
push
add
aam
push
loop
orl
add
push
pop
cmp
push
cld
sub
movsl
mov
sub
adc
cmpsb
cmp
cmp
jno
adc
cs
stos
adc
out
std
jno
roll
add
sti
imul
xchg
rolb
mov
leave
pop
jge
dec
xchg
xor
dec
lret
mov
in
stos
test
into
cltd
dec
dec
push
outsl
sub
push
loopne
jecxz
imul
sahf
lcall
in
je
sbb
out
ss
jbe
push
int
out
arpl
inc
jbe
aas
stos
mov
iret
shlb
jmp
lret
mov
inc
cmpsl
or
lret
test
mov
push
std
mov
mov
cld
push
jmp
dec
mov
shlb
clc
pop
jnp
mov
pop
inc
in
fsubl
dec
jle
lret
jo
loopne
lcall
cmp
pop
movsl
mov
lods
aas
push
pop
cld
rcrb
mov
hlt
xchg
sbb
repnz
sahf
inc
stos
data16
jmp
mov
and
jle
mov
loopne
sahf
mov
fnstcw
push
adc
inc
filds
test
sub
fldenv
iret
int3
stos
jns
dec
stos
clc
sbb
into
das
outsl
inc
cmp
pop
cmp
xchg
pop
shll
in
fwait
or
arpl
pop
aas
pop
push
into
addr16
sbb
push
sub
aaa
or
test
and
pop
gs
je
inc
lods
jl
push
push
sbb
mov
scas
cmpsl
dec
shrb
rcrb
lea
lds
in
iret
pop
hlt
cld
dec
fildl
and
cmpsb
fs
push
mov
jg
jns
mov
jmp
sahf
pop
stos
in
or
push
jbe
jmp
std
es
addr16
xor
add
lss
cmc
imul
daa
jmp
xchg
aam
loop
les
mov
add
filds
jg
jns
aad
fwait
dec
xor
jnp
out
and
pop
std
lock
insb
cmpl
ljmp
xchg
push
jle
push
mov
jne
loope
xchg
decb
rcll
mov
mov
outsb
pop
mov
mov
cmp
and
lea
clc
imul
adcb
sub
push
bound
pusha
ret
leave
sub
mov
imulb
scas
ja
sub
in
fcompl
negb
mov
sub
ret
fstpt
push
sbb
jbe
in
adc
call
in
dec
enter
inc
dec
jnp
movsb
lret
js
sti
fdiv
fwait
andl
pop
xchg
pop
daa
cmc
rcr
add
outsb
movsl
fnstsw
xor
push
fstps
clc
addl
cs
sub
shl
int
pushf
sub
mov
add
jmp
ret
or
and
out
jo
or
js
scas
cmpsb
filds
xor
dec
lock
cwtl
add
cltd
mov
xor
jo
in
and
insb
sbb
inc
insb
in
or
cld
fmull
and
shlb
insl
into
push
addr16
or
shlb
pop
dec
pop
sti
pop
mov
mov
push
repz
push
sub
mov
add
and
push
mov
popf
cltd
adc
push
fst
adc
xchg
addr16
inc
jo,pn
ljmp
or
stos
xor
addb
mov
mov
adc
sti
insb
cmpb
xchg
jae
mov
cld
test
sub
cld
call
sbb
xchg
inc
ja
enter
pop
add
loope
repz
or
pop
and
and
sub
adc
insb
divl
rcrb
and
mov
xor
ljmp
sbb
lret
in
into
scas
rcr
cld
lods
jns
or
movsl
orb
cmc
cltd
mov
test
test
jle
sbb
push
cmpb
icebp
mov
cmp
xlat
pop
in
fidivl
mov
mov
sbb
aad
inc
fdivs
rcl
movsb
mov
out
jne
pop
int3
mov
lea
in
je
cmp
dec
in
sub
insb
xchg
mov
mov
cmp
icebp
dec
mov
dec
test
xor
dec
push
add
inc
cmp
jp
fistpll
inc
in
mov
lock
mov
xor
push
fwait
sbb
mov
cmpsb
and
sahf
in
inc
and
ljmp
popa
aad
and
and
mov
mov
xchg
lcall
mov
les
xor
int
lahf
icebp
or
dec
fbld
fmulp
dec
movsb
lock
loop
ret
sti
ljmp
pop
es
inc
std
push
aaa
fidivs
or
or
in
lods
incb
cltd
mov
out
xchg
ret
and
add
jae
jbe
dec
jg
sbb
leave
push
ljmp
add
sbb
add
push
dec
xchg
push
clc
movsb
adc
arpl
gs
mov
and
aaa
mov
les
les
incl
lds
ret
testl
inc
insl
jle
pop
mov
dec
stc
pop
fsts
or
mov
or
jns
push
data16
ljmp
lds
test
jmp
scas
mov
divl
jg
cmp
mov
outsl
rclb
testb
outsl
inc
add
jbe
js
push
sbb
xor
sbb
xchg
mov
push
jl
in
fisubrs
push
repnz
jbe
jmp
inc
addb
lea
daa
lahf
push
or
sbb
ds
push
dec
ret
lret
cmp
insb
cld
push
ret
pop
sbb
shll
mov
mov
mov
jge
ret
movsl
arpl
pop
aad
cmc
fisubl
loope
mov
mov
mov
fldt
xchg
dec
mov
in
jo
pop
lcall
scas
aas
dec
adc
push
add
mov
mov
enter
addl
sbb
push
pop
scas
xor
pushf
jge
in
add
movl
scas
jmp
rclb
lret
mov
pusha
lret
mov
clc
iret
leave
mov
xchg
aaa
lock
add
mov
mov
repnz
mov
mov
jle
out
lock
mov
push
mov
xor
pop
jecxz
fwait
in
or
sti
xor
shl
pushf
lret
or
cli
imul
sbb
lods
cmp
test
xorl
dec
push
hlt
jnp
mov
pushf
pusha
sbb
xor
xlat
lock
pop
cld
insl
sbb
clc
lret
pop
xchg
jle
dec
mov
adc
loop
mov
mov
push
es
cmp
cmpsb
xorl
lahf
xor
mov
or
outsb
sbb
inc
mov
mov
scas
sub
mov
xor
xor
insb
sbb
aam
rorb
push
lret
testb
dec
xor
pop
xchg
dec
dec
out
popa
xlat
xor
fnstenv
std
push
call
mov
clc
sbb
push
daa
dec
add
cs
shrl
cmp
mov
inc
scas
mov
mov
adc
xor
test
and
inc
in
neg
sbb
ljmp
pushf
mov
xchg
sbb
sar
push
out
xchg
negl
repnz
jle
loop
shrl
mov
dec
sub
adc
pop
pop
leave
nop
insb
scas
pop
dec
mov
pushf
addr16
aad
stos
add
stos
mov
dec
sub
in
movsb
sbb
daa
mov
push
jge
push
loopne
jle
jnp
push
cli
mov
xor
out
adc
inc
out
xchg
arpl
icebp
out
mov
test
add
inc
test
pushf
mov
cwtl
pop
scas
out
shlb
adc
cmpl
int
out
daa
push
dec
and
push
sbb
mov
jmp
pop
repnz
add
repnz
gs
add
cmp
mov
aas
mov
sub
sub
fisubrs
test
outsl
sbb
cmp
bound
jo
leave
fldl
bound
pop
dec
jmp
or
pushf
in
or
lods
pop
cmp
mov
ficoml
or
cmpsl
push
push
adcl
dec
adc
cs
or
lds
dec
pop
testl
push
cmpsb
mov
sub
in
pop
pop
movsb
das
je
push
out
shrl
arpl
test
sahf
adc
push
cmc
pop
out
sbb
jmp
push
clc
dec
jge
mov
divb
xor
negb
sub
fdivrs
dec
shrb
shl
sub
or
mov
mov
dec
ss
popa
test
ja
sbb
mov
bnd
push
or
pop
adc
sub
pop
in
or
mov
push
jnp
gs
rcl
or
xchg
pop
dec
xor
push
subl
outsl
ret
mov
mov
lock
iret
and
xor
fidivl
pusha
pop
sbb
aaa
in
sbb
test
jno
enter
addr16
pushf
add
mov
dec
push
std
dec
mov
mov
std
in
fcoml
movsb
push
out
lret
mov
add
cmp
subb
mov
leave
or
cmpsl
fdiv
fs
dec
or
mov
cli
pop
sbb
mov
pop
call
int
pop
dec
in
pop
mov
addl
dec
out
test
cmp
insb
pop
cltd
mov
dec
jno
rcll
or
arpl
dec
xchg
adc
fwait
mov
outsb
jnp
les
in
and
fimuls
xor
cli
aam
mov
insb
cld
in
inc
push
xor
add
jnp
lock
fdivrp
mov
ss
scas
ret
mov
mov
sbb
mov
cwtl
dec
sbb
pop
push
push
mov
ss
and
das
xor
push
cmp
mov
mov
scas
ja
das
lods
insl
xchg
adc
cmpsb
aaa
mov
leave
xchg
lret
inc
stos
pop
daa
cltd
lcall
dec
lret
iret
xor
pop
out
xchg
adc
mov
adc
test
push
xlat
inc
je
and
in
adc
das
cmpsb
mov
insl
pop
das
scas
cmp
pop
sbb
das
lcall
and
jb
dec
adc
enter
inc
cwtl
stc
inc
mov
stos
xlat
cmp
stos
adc
movsb
and
or
lds
cmp
push
push
xchg
inc
and
mov
lds
inc
add
je
dec
into
sbb
shlb
jl
push
push
jg
and
dec
pop
nop
fnstsw
jo
xor
scas
andl
push
mov
outsl
ret
loopne
imul
cmp
test
ljmp
inc
mov
stos
andl
mov
mov
sub
adc
mov
jp
hlt
fmull
scas
lods
mov
and
push
mov
add
push
pop
movsl
xor
lcall
test
pushf
loop
dec
add
mov
add
sar
stos
loope
pop
imul
imull
scas
jns
and
jbe
cmp
out
cmp
or
pushf
loopne
orl
dec
rcrb
insl
repz
sti
stc
clc
in
mov
sbb
out
sub
jae
adc
inc
ds
add
xchg
push
inc
jb
stos
je
sub
jg
cli
ret
insb
cs
les
sbb
mov
mov
xchg
nop
mov
jae
lock
mov
out
mov
mov
sbb
add
xchg
in
sub
inc
negl
cli
enter
cmp
push
data16
or
jnp
and
lcall
stos
popf
stos
mov
call
xchg
fs
mov
ljmp
xchg
das
mov
loop
shrb
jae
outsb
je
adc
jge
xor
cltd
out
push
data16
negb
ret
mov
push
movsb
adc
cmp
int3
fildll
add
push
fnstsw
cmp
push
and
jecxz
fcmovb
in
addr16
imul
sbb
xlat
fmul
icebp
mov
push
jae
mov
aaa
popf
dec
dec
and
ret
adc
std
push
cwtl
ret
mov
fwait
xor
stos
xor
mov
cmpsl
call
imul
test
stos
cwtl
rolb
push
clc
cmp
out
aaa
cmp
das
xchg
cmpsl
dec
pop
and
mov
adc
cli
mov
repnz
mov
jecxz
loop
jne
repnz
cwtl
daa
lock
push
loopne
jae
sub
sub
loopne
ss
and
lcall
mov
fcomps
pop
sbb
jmp
jo
cmpsl
adc
insl
pop
push
cmp
lock
jecxz
adc
mov
sub
in
pushf
cmovl
mov
adc
mov
out
sub
aaa
fldpi
test
enter
cmpb
popa
and
cmp
daa
bound
nop
adc
push
ja
sub
fcomps
jg
popf
stc
cmp
cs
pop
inc
test
rorb
loopne
cmp
push
loopne
mov
cmp
add
dec
push
mov
orl
mov
mov
movsb
sbb
xchg
jle
stc
stos
scas
cmpsb
out
pop
xor
fmuls
add
adc
sub
shlb
xchg
movsl
hlt
push
leave
clc
enter
and
mov
iret
std
jg
cmp
jl
jp
sub
pop
ljmp
test
dec
mov
mov
js
pop
int
scas
mov
inc
in
mov
dec
in
mov
sub
cmpsl
cmp
xchg
sub
cmp
mov
stos
fists
mov
xchg
subb
inc
fidivl
out
dec
add
pusha
adc
xor
outsb
xor
mov
pushf
sbb
inc
jg
les
ds
jmp
scas
addr16
jne
imul
lds
dec
inc
dec
lret
stos
push
cltd
jae
mov
or
insb
cmp
loopne
stc
jmp
ds
jle
dec
pop
jnp
add
mov
pop
int
mov
lods
push
rcrl
out
push
cmp
les
shl
sub
repz
aas
loop
test
adc
ds
cmc
int
mov
int
lods
fdivrl
mov
outsl
sub
andb
add
dec
add
loop
fs
hlt
int
mov
fnstsw
das
jmp
mov
icebp
lock
mov
ret
aaa
in
push
cwtl
test
cmpsl
call
jge
mov
insb
push
dec
mov
or
test
cwtl
jb
insb
clc
stc
call
dec
jmp
leave
loopne
subb
fimuls
cmc
in
cmp
into
mov
sbb
jp
fs
pop
stos
paddd
repnz
mov
jp
inc
and
es
and
repz
cmp
push
rcl
test
aaa
pop
call
fcoml
lock
stos
pop
imul
insb
imul
push
inc
mov
test
das
clc
adc
test
sub
outsl
in
sbb
gs
adc
and
mov
and
add
jbe
pop
or
dec
cmpb
lock
int
or
mov
inc
lods
xor
sub
ja
fcoml
xchg
fwait
je
stos
dec
in
mov
paddq
int3
stos
fsts
or
clc
std
push
push
or
faddl
add
hlt
call
or
mov
add
push
ds
or
mov
pop
mov
or
push
fcoms
scas
repz
xlat
mov
mov
clc
enter
rorb
push
xor
daa
or
inc
add
mov
dec
fdivs
movsl
dec
ror
push
inc
clc
outsb
sbb
in
dec
jne
dec
xor
dec
lahf
popa
std
out
in
xor
fwait
cmp
imul
push
pop
mov
xor
filds
lret
les
adc
xchg
test
mov
jno
cmc
mov
stos
pop
and
daa
fs
cmp
sbb
out
adc
daa
xchg
arpl
mov
adc
aad
in
and
subl
xchg
js
sub
popf
in
aaa
scas
repnz
nop
mov
das
pop
push
test
sbb
in
push
imul
sbb
push
jne
stos
mov
push
jne
loop
out
add
in
pop
dec
mov
cwtl
fldt
bound
and
jbe
push
sbb
fs
mov
mov
pop
dec
xchg
fisttpl
mov
sub
mov
cld
daa
outsb
inc
int3
idivl
sbb
sbb
lcall
movsl
sub
push
inc
add
sbb
or
xor
xchg
and
inc
or
in
fsubrl
xlat
loope
ficoml
cld
dec
inc
mov
sub
sbb
sub
xor
xchg
cmp
sub
test
or
sub
aam
std
jmp
push
adc
push
mov
and
cmpsl
dec
aam
repz
mov
mov
cld
cltd
imul
adc
pop
dec
stos
cmc
sbb
mov
jo
test
fidivl
fadds
scas
xchg
fcomps
js,pn
fisttpll
into
int3
cmp
stos
sti
xor
and
xlat
int3
das
pushf
cmpl
mov
iret
push
cs
imul
loop
and
push
jmp
cmpsb
xlat
fwait
cld
sbb
adc
xchg
and
js
pushf
pop
xor
aaa
and
xchg
push
mov
pop
and
out
xchg
roll
test
enter
mov
adc
dec
lea
xor
inc
inc
cmpsl
xor
inc
dec
das
lret
inc
ss
dec
dec
jl
divl
andb
stos
stos
sub
mov
mov
hlt
movsl
rorl
mov
fnstenv
or
std
int3
push
int3
lds
aas
add
dec
out
movsl
data16
sbb
sti
sub
mov
pop
cltd
add
daa
sbbb
jb
lods
inc
jecxz
leave
sub
popa
jp
mov
add
les
adc
ret
jne
pop
imul
push
cmpsb
stos
gs
jns
test
sbbb
dec
or
shlb
sub
adc
cmp
push
pop
fbld
push
xchg
lods
or
xchg
xchg
ret
and
sub
ror
popf
mov
mov
sub
lea
push
or
jge
adc
cmp
add
out
xor
add
out
popa
fcmovbe
cwtl
bound
fldt
insb
push
daa
sbb
inc
cmpsb
jb
or
mov
pop
outsl
xchg
icebp
inc
ficoms
pop
stos
imul
fucomip
xchg
rcrl
mov
xchg
aas
or
add
enter
pop
mov
cltd
jp
scas
add
xor
in
xchg
leave
mov
push
sub
loopne
arpl
fidivrs
lods
xorl
sub
adc
insb
mov
dec
pop
stos
jle
mov
stos
sar
inc
or
jle
xchg
hlt
inc
adc
pop
js
mov
mov
in
sub
inc
jae
sub
inc
leave
popa
fnstcw
mov
fistps
fimull
fs
nop
aam
or
dec
and
lds
push
mov
in
sbb
push
xor
dec
cltd
dec
popf
pop
orl
xor
jle
push
ja
lds
popa
out
or
insl
jmp
stc
lods
call
mov
iret
int
dec
adc
and
movswl
mov
xor
xchg
inc
aaa
ret
sbb
call
dec
das
cmpsl
mov
mov
pop
fucom
adcb
and
xchg
mov
icebp
hlt
push
inc
adc
pusha
leave
fstpl
mulb
stc
cmp
icebp
push
in
dec
push
mov
inc
dec
lods
sbb
and
and
xchg
and
xchg
repz
divl
dec
xor
cmp
arpl
mov
or
sub
fnstcw
or
js
xchg
dec
shll
sbb
xchg
push
jae
xor
mov
aas
mov
mov
addr16
cld
mull
in
aad
mov
jp
inc
movsb
nop
cwtl
lret
mov
xor
cmp
insl
xor
sub
lahf
insl
cmp
int
ss
cmpsb
enter
fdiv
mov
adc
lret
inc
adc
mov
add
adcl
es
movsb
mov
insb
sahf
dec
fsubrs
or
fdivrl
subl
sub
popa
xchg
cs
fucom
xor
push
loopne
enter
push
jge
mov
xor
dec
add
jne
mov
les
nop/reserved
or
mov
mov
es
sahf
in
insl
ret
add
scas
aad
movsb
sub
mov
ds
je
inc
pop
mov
pop
lods
xor
mov
insb
int3
movsl
inc
pop
cmpsl
add
mov
je
adc
aaa
mov
in
pop
outsl
fsubl
idiv
jmp
fdivrs
xchg
xchg
fcoms
pop
jno
push
movsl
scas
jne
movsb
xchg
dec
sbb
push
and
rcr
inc
in
jg
sbb
mov
mov
push
sub
and
scas
sbb
mov
shll
or
addr16
fwait
pop
jg
cmp
cmpsl
clc
lret
adcl
aad
mov
enter
mov
mov
xchg
cwtl
int
cmc
lahf
je
dec
sar
stc
mov
insl
add
add
pop
xchg
lret
sbb
repz
push
adcl
je
cltd
pop
add
jnp
cmp
mov
test
adc
std
fmuls
jle
bound
gs
in
add
adc
movsl
cmp
out
push
jo
sbb
shll
mov
and
daa
hlt
cmc
jmp
fs
pop
scas
cwtl
rorb
mov
in
xor
xchg
mov
cli
xchg
cwtl
fistl
or
pusha
pop
shrb
cmpsb
aaa
dec
insl
adc
iret
dec
cmp
pop
sbbl
cvtpi2ps
ss
jo
and
das
or
cwtl
cmpsb
rcll
or
jne
imul
sbb
pop
add
sbb
sub
bound
roll
jae
push
mov
cmp
cmc
insb
ret
xchg
push
mov
mov
adc
gs
sbb
lcall
sub
call
sbb
pop
jmp
daa
adc
clc
pause
xchg
out
stc
jge
scas
frstor
cmp
jb
fstps
pushf
test
ljmp
xchg
fmulp
rorb
xchg
sbb
pop
push
pop
sub
or
add
cmpsb
push
lods
jp
jmp
jo
mov
sbb
insb
jno
add
sarb
add
mov
ljmp
push
shlb
dec
stos
mov
pop
xor
call
sbb
out
adc
nop
sub
or
fs
mov
sbb
aas
lds
js
std
jne
cmp
fstpl
and
sti
cmp
and
jbe
adc
divb
fs
pusha
int3
push
mov
sub
int
pop
test
scas
es
repz
aas
idiv
xorl
xchg
sbb
loop
mov
dec
jne
pop
fcomps
loopne
sub
inc
lock
xchg
cli
into
scas
pop
inc
push
aas
push
xor
push
cmp
pop
fwait
push
or
nop
mov
dec
xchg
jge
iret
inc
pop
data16
jns
sub
rcll
movsb
bound
lret
mov
xchg
pop
pop
sub
pop
test
or
pop
ss
xchg
xor
mov
adc
test
xor
andl
mov
pop
cmpsl
jge
js
icebp
sarb
insb
repnz
xor
sub
adc
pop
push
jbe
out
jge
jg
xchg
enter
push
xor
xor
xchg
add
lods
rcr
or
mov
cmpsb
scas
pop
jo
subl
ss
jae
stos
fisubl
or
outsl
pop
mov
aam
mov
jo
les
xor
jl
pop
mov
std
sub
or
adc
subb
ds
iret
outsb
sub
and
or
pop
or
push
sub
mov
adc
cmpl
lea
add
std
xchg
fists
pushf
xchg
inc
out
push
aaa
arpl
push
inc
out
ficoml
push
lcall
rcll
jnp
es
pop
mov
pop
mov
cld
les
iret
es
lret
jp
mov
je
mov
imul
scas
xor
fs
imul
push
pusha
test
enter
jg
popf
xor
cli
jge
pop
aaa
adcb
fisttpll
es
pop
pop
cli
ljmp
test
stos
cvtpi2ps
push
pop
in
int3
xchg
and
cmpsb
inc
push
jp
or
xchg
sti
pop
jg
stos
xchg
add
add
push
cmp
cmp
fcmovnu
pop
out
pop
popa
inc
jmp
lcall
fadd
sbb
scas
scas
in
sbb
scas
out
iret
cmpl
jg
xor
addr16
in
mov
mov
pop
bound
mov
inc
ret
sub
enter
mov
out
aaa
xlat
xor
aaa
mov
jo
pop
add
inc
mov
sti
ja
dec
mov
aaa
or
loope
outsb
in
cmc
xchg
push
mov
mov
insb
pop
gs
je
cli
cltd
dec
pop
lods
push
adc
pop
call
and
sbb
sar
pop
aam
mov
pop
rep
ret
test
inc
loopne
adc
nop
inc
daa
xchg
addr16
xchg
incb
mov
adc
pusha
jge
inc
imul
cmpsl
mov
dec
sbb
fwait
lods
int
popa
dec
dec
push
xor
sub
mov
es
mov
or
jl
mov
mov
or
sbb
push
pop
jmp
mov
fnsave
mov
mov
fnsave
xor
mov
movsb
nop
pop
cld
push
mov
mov
sti
mov
xchg
int3
xchg
mov
sub
dec
loopne
mov
and
jmp
push
xchg
scas
sbb
cmp
adc
stos
cmp
sbb
scas
test
jp
out
push
mov
sub
or
mov
push
add
aaa
arpl
pop
inc
jbe
movsl
cmp
jns
mov
inc
jg
ljmp
mov
dec
ret
pop
push
cmp
dec
push
dec
nop
xor
inc
push
cmp
pushf
mov
icebp
stos
cltd
int
sub
js
and
xlat
and
dec
dec
push
cld
out
je
mov
inc
movsl
test
fwait
push
cmp
out
add
xor
arpl
push
mov
je
in
mov
dec
pusha
iret
jecxz
ja
in
stc
push
cli
or
push
inc
inc
or
pop
mov
mov
shll
bndldx
shll
insl
and
pop
jo
xchg
xor
cmp
jle
mov
sbb
jmp
in
dec
mov
sahf
adc
bnd
sub
add
in
jb
push
icebp
cmp
std
je,pn
inc
push
push
je
fs
mov
cmpsb
sub
loopne
jno
mov
mov
cmp
mov
pop
mov
push
xor
cmp
xor
in
jno
jg
call
rdtsc
aam
pusha
hlt
cmp
lret
mov
cmp
sti
nop
ffreep
xchg
sbb
insb
jnp,pn
add
adc
cwtl
outsl
adc
pop
pushl
inc
pop
es
leave
and
testl
pusha
insl
lea
xor
dec
fbld
pop
inc
fs
jp
cwtl
cltd
popa
push
sbb
mov
dec
dec
push
and
scas
test
lret
cmp
out
xchg
stos
scas
and
cltd
repz
dec
push
add
push
cli
in
aam
arpl
arpl
add
xor
jmp
hlt
adc
inc
lds
inc
cmp
xchg
jmp
ret
stc
or
pop
cmp
pop
scas
lock
cwtl
icebp
add
lds
mov
fdivr
push
call
cmp
pop
leave
xorb
sub
xor
sbb
shl
lcall
and
inc
fists
pop
insl
add
add
in
inc
repnz
push
cpuid
add
mov
sub
sub
out
loop
ret
pop
xchg
ss
xchg
jbe
rcl
add
mov
dec
lcall
jb
aas
rcrl
inc
sub
movb
xor
std
sbb
rcll
inc
or
ret
pop
sub
add
sub
hlt
push
sub
into
adc
mov
mov
in
mov
imul
mov
mov
mov
cmp
leave
pminub
and
fisttpll
fld
imul
lret
btc
sub
jne
mov
fwait
imul
pop
dec
jne
loopne
daa
aad
ss
adc
mov
test
in
sub
dec
cmp
mov
mov
inc
pop
sbb
insb
xor
ss
mov
sbb
aaa
xor
pop
xchg
dec
or
and
inc
sbb
outsl
mov
dec
mov
fs
push
stos
xor
mov
ja
jo
ljmp
fdivl
movsl
repnz
imul
sub
ret
cwtl
pop
loope
pop
pop
push
movsl
int3
xor
jge
xor
icebp
push
and
push
mov
xchg
jle
test
and
test
dec
rorb
xchg
inc
xlat
and
pop
out
push
sbb
mov
mov
push
jge
mov
dec
leave
sbb
fprem1
and
mov
cmp
mov
iret
jle
cmpps
fcoms
daa
adc
pop
out
gs
pop
add
les
in
fdivrs
dec
inc
jle
push
cmpsl
dec
sbb
addr16
dec
xorb
dec
push
adcb
pusha
adc
pop
int3
les
xchg
xor
sbb
mov
or
and
das
push
ljmp
cld
or
out
inc
xchg
addr16
cmp
lcall
sub
dec
xchg
pusha
cmpsl
ds
dec
iret
cltd
mov
repz
sbb
pop
shll
dec
mov
or
or
xor
jno
imul
sbb
add
out
pusha
mov
stc
addr16
add
in
ret
sbb
subl
lock
xor
out
fsubrs
jecxz
aam
pop
pop
push
sub
push
rclb
incl
xor
dec
and
mov
je
cld
cmpsb
adc
repz
or
out
aad
and
xor
std
jo
mov
mul
shr
shl
fildll
cltd
ret
add
sbb
iret
rcrb
and
lds
cs
in
dec
std
xchg
dec
adc
sbb
sbb
pop
xor
sub
add
push
mov
aas
push
mov
xchg
sbb
or
stos
out
adc
dec
add
pusha
mov
test
sahf
loopne
and
outsl
rorl
push
sub
test
mov
mov
mov
push
stos
mov
in
mov
in
push
add
std
push
cmpsl
push
out
repz
push
xor
push
addr16
mov
lahf
pop
jne
jge
push
push
jg
in
iret
out
dec
cli
lret
mov
inc
test
dec
adc
sub
fstpt
in
pop
outsl
aam
adc
out
shr
sub
inc
pcmpgtd
jae
out
movzbl
jae
lods
jne
jg
jb
jp
imul
jns
pop
cmpsb
jb
mov
in
mov
inc
mov
ds
jmp
add
imul
and
in
pop
iret
mov
bound
xor
mov
jecxz
notb
insb
jne
loope
outsl
sub
xchg
imul
push
push
mov
popl
cmp
pop
fsubs
aam
jecxz
bound
aad
sbb
gs
dec
shlb
inc
cmc
mov
rcll
xor
mov
rcll
scas
decl
repnz
mov
pop
dec
sub
adc
les
pop
into
std
xlat
xor
frstor
in
inc
int
adc
pushf
mov
push
pop
jmp
outsl
mov
mov
insb
daa
xor
sbb
push
mov
mov
sub
movsb
mov
stc
push
and
repz
out
seto
test
test
mov
mov
cmp
je
push
fcom
test
inc
pop
add
jg
je
push
mov
inc
inc
mov
leave
dec
daa
or
jbe
inc
cmp
sbb
inc
dec
fiadds
xor
dec
xchg
xchg
dec
push
into
pushf
daa
sub
xchg
cs
xor
xor
dec
iret
fs
inc
add
call
jmp
xacquire
mov
leave
enter
pop
es
mov
aas
sbb
mov
xor
dec
xchg
fs
leave
pop
je
mov
xchg
in
mov
clc
lods
rcl
pushl
add
xor
cmp
xchg
sti
add
popf
jo
ret
push
je
hlt
push
iret
mov
mov
pop
push
xor
lods
jns
lahf
out
push
shlb
dec
mov
jns
adc
pop
push
or
shl
mov
fistpll
xor
int
fiaddl
sub
in
hlt
mov
cmp
dec
pop
mov
push
mov
cltd
push
xorb
aaa
adc
icebp
jne
sub
inc
repnz
shll
mov
jns
dec
xchg
xor
jge
shl
lods
push
sbbb
push
pop
xor
push
and
icebp
pop
mov
orb
jg
ds
mov
push
jecxz
or
sbb
xchg
lock
inc
jno
mov
xchg
adc
pusha
or
fisubs
ljmp
mov
pusha
clc
dec
add
inc
sub
jb
nop
aas
and
cmpsl
xchg
ret
shll
jno
insl
ljmp
and
inc
cmp
decl
dec
inc
adc
shlb
repnz
inc
push
xchg
or
pop
xor
adc
out
sub
xchg
int
xchg
mov
sub
popa
xchg
mov
stos
mov
lock
in
les
pop
mov
add
adc
sbb
rolb
jmp
dec
mov
mov
jo
jle
xchg
je
add
ret
mov
leave
int
popa
mov
adc
mov
xor
pop
popa
mov
loop
pop
daa
push
in
cmc
xchg
leave
mov
cltd
adc
dec
ret
inc
lret
sub
xlat
and
push
cmp
dec
cmp
inc
xchg
in
xor
inc
adc
push
imul
fs
mov
xlat
push
les
sbb
ret
sub
sub
mov
lret
jnp
rorl
aaa
daa
roll
add
clc
adc
adc
shl
or
add
stos
cmp
xor
cmp
cmc
aad
dec
jbe
sti
aam
es
gs
mov
lahf
inc
sub
imul
out
xor
inc
out
inc
mov
es
int3
jb
iret
inc
cld
fwait
test
lret
or
mov
cwtl
popf
push
jp
stos
push
loop
movsb
aaa
fs
jb
pop
imul
and
stos
cwtl
lds
pop
adc
sbb
sarl
jl
dec
mov
adc
and
dec
mov
jns
roll
daa
inc
in
bnd
decb
jle
test
push
inc
lahf
sbb
pusha
lods
fwait
stc
or
add
outsb
jns
or
fstl
hlt
shl
rclb
jmp
lds
pop
in
and
push
jge
in
dec
scas
push
shlb
push
lret
pushf
dec
test
push
data16
daa
shrl
inc
or
sbb
or
pop
outsb
xor
xchg
and
insb
out
icebp
mov
clc
jns
test
mov
sbb
mov
in
ds
mov
lock
or
xor
popf
es
add
jmp
or
dec
or
fmull
fsubs
adc
dec
cltd
xorb
out
fwait
xchg
scas
mov
jno,pn
xchg
fwait
xchg
shll
dec
mov
dec
mov
loopne
mov
dec
pop
mov
enter
xchg
fidivrl
xchg
and
ljmp
lea
pop
pop
fnstenv
jnp
sbb
leave
stc
jmp
je
dec
sub
shlb
les
les
arpl
lea
cmpsb
xlat
sahf
dec
nop
dec
sti
push
xchg
js
sub
pop
das
mov
mov
pushf
fbstp
fs
lret
add
jge
mov
xor
xor
add
xorl
dec
leave
scas
arpl
cmp
sbb
lds
mov
aad
in
xor
sahf
xchg
cmpl
mov
adc
cmp
mov
adc
push
xor
pop
add
cli
mov
fcmovnb
dec
ds
inc
lds
popf
cli
inc
cmp
in
jno
push
mov
pop
mov
xor
jge
pushf
xor
push
mov
mov
pop
arpl
mov
sub
push
iret
sbb
push
insl
mov
icebp
into
push
loope
push
and
repnz
push
xorl
sub
xchg
std
and
mov
jmp
or
testb
and
hlt
lock
test
adc
mul
push
daa
loopne
test
cmp
aas
jecxz
push
shl
push
jl
mov
mov
inc
jmp
popa
fs
pop
mov
mov
pushf
das
je
cmp
sti
adc
pop
and
mov
inc
xchg
mov
gs
adc
movsb
sti
xchg
push
mov
cmp
sbb
adc
test
clc
sub
mov
test
inc
lcall
scas
adc
test
lods
jecxz
in
mov
and
or
enter
fs
cli
in
ret
or
sub
mov
dec
les
out
add
shrl
in
scas
pop
add
cmp
pop
ja
ljmp
imul
sbb
dec
pop
lahf
int3
and
insb
dec
adc
mov
das
testl
mov
cmp
pop
fistpl
loope
xorl
add
out
mov
push
sbbl
insb
pop
push
test
inc
or
ret
dec
jo
mov
loope
sbb
xchg
or
xchg
adc
fcomi
xor
fmul
jnp
sahf
rcl
dec
inc
inc
push
daa
xchg
mov
outsb
dec
imul
xchg
scas
in
mov
and
or
out
dec
inc
xor
sbb
mov
sbb
push
test
mov
scas
sbb
add
sub
and
out
int3
mov
xorl
adc
mov
cmp
xchg
fildll
sbb
pop
sahf
sub
xor
sbb
repz
imul
mov
xor
lea
int
das
mov
pop
mov
mov
mov
sbb
cmp
mov
cmp
dec
and
bnd
jl
in
shrb
sub
fsubs
inc
mov
outsb
enter
inc
fimull
mov
xchg
cmc
hlt
shrl
and
pop
fmuls
aas
sbb
movsl
fiadds
mov
lret
std
call
lret
repnz
sahf
xchg
pop
orl
sbb
and
inc
rcrb
and
sbb
fidivs
mov
mov
or
repz
sbb
push
js
jb
or
xor
lock
pop
loope
insl
inc
iret
popa
ds
mov
cmc
cmpb
mov
pushf
push
aaa
test
aaa
imul
leave
pop
lahf
lret
je
push
adc
inc
mov
loope
fnstsw
or
jmp
stc
adc
sbb
std
stc
dec
bound
pop
xchg
aam
cmp
push
mov
cmp
push
aas
dec
popa
jecxz
push
adc
into
inc
mov
cltd
adc
xchg
scas
xchg
jmp
jo
ret
pop
cmp
jecxz
fs
dec
dec
jns
int
leave
je
sarl
gs
or
scas
cld
inc
mov
out
mov
and
mov
repz
xor
mov
lahf
dec
subb
shll
inc
cmp
sbb
enter
cld
stos
cmp
jb
jmp
aas
out
ret
push
aam
xchg
bound
pop
xor
mov
pextrw
adcl
jb
addr16
push
adc
pop
push
fadds
xor
inc
inc
dec
sarl
xchg
or
sub
mov
add
mov
jns
dec
mov
js
mov
dec
dec
fs
xlat
pushf
movups
or
mov
mov
sub
cmpsb
inc
xchg
int
jae
stos
mov
mov
jmp
pushf
incl
ficompl
mov
ss
imul
jo
ja
loopne
or
mov
jae
ja
and
jno
xor
aad
stos
dec
lahf
pop
and
add
push
add
dec
pop
inc
out
xchg
aad
add
inc
or
push
cli
adc
hlt
ret
cmp
add
sti
negl
dec
xor
in
add
cmp
scas
sbb
loop
iret
jp
inc
aam
test
mov
sbb
xchg
fwait
clc
fsin
or
mov
je
cmp
or
scas
cmp
popf
adc
push
nop
cmp
std
mov
insl
mov
xor
out
mov
inc
scas
jnp
inc
out
fsubr
icebp
jne
lcall
ret
mov
bound
addb
xor
mov
adc
sub
pusha
mov
fwait
test
rclb
enter
cmp
jg
push
mov
fistl
sbb
sbb
js
in
sbb
jo
inc
scas
ljmp
add
jo
sub
ret
sbb
cli
std
dec
push
mov
loopne
pop
int3
dec
insl
push
inc
int
js
dec
mov
enter
mov
jmp
push
sti
and
pop
push
flds
shrb
jnp
fisttpl
inc
adc
mov
push
mov
xlat
xchg
lea
add
mov
inc
pop
ja
shll
jmp
jg
mov
imul
popf
and
push
clc
jge
nop
xchg
fnstcw
stc
jnp
sbb
or
push
insl
int3
lock
and
stos
xor
int3
test
xchg
stos
fucomp
jmp
scas
push
cmp
stc
aam
sbb
xchg
in
testl
xchg
and
fsubp
lea
movsb
rcll
jne,pt
ret
pop
outsl
repnz
sub
sub
mov
jns
pusha
push
repnz
stc
repz
sub
jmp
xchg
aas
enter
mov
aam
jns
pusha
rcll
xchg
stos
sub
dec
in
mov
std
and
imul
lcall
loop
inc
into
stc
mov
inc
xchg
fstl
pop
dec
xchg
jbe
inc
push
in
enter
push
mov
jbe
es
movsb
adc
add
mov
and
push
notb
rol
mov
loope
enterw
push
sub
notl
cwtl
rcrb
pmaxub
fistps
mov
inc
sbb
repnz
popa
leave
inc
adc
jbe
dec
mov
repz
andb
adc
xor
mov
addr16
scas
mov
cli
cmp
lock
push
jl
push
test
movsb
in
mov
jmp
or
lds
adc
jg
fdivrs
out
mov
outsb
in
scas
sbbl
add
and
pop
nop
dec
jb
jo
jle
bound
add
ss
loop
inc
dec
xchg
cwtl
adc
out
xchg
cmp
stos
cmp
jmp
out
sbb
pop
insb
fldln2
ss
leave
shrb
sahf
mov
fcompl
ds
out
dec
mov
aas
mov
repz
jo
add
test
faddl
data16
xchg
bound
push
out
shlb
or
icebp
mov
xchg
mov
mov
das
inc
stos
jmp
xchg
out
cli
mov
inc
xor
call
xchg
repz
pop
add
incl
add
dec
jo
mov
sub
data16
cmp
inc
mov
xchg
aas
int
sub
adc
dec
mov
movsl
and
out
ljmp
loope
mov
stos
adc
orb
push
leave
xchg
addr16
icebp
jne
cli
jg
in
nop
std
shl
ret
imul
fstpl
pop
inc
cmp
adc
adc
repnz
pop
add
and
mov
push
insl
imul
inc
dec
stc
push
xchg
jle
xlat
std
push
cld
jecxz
dec
xor
and
jle
scas
iret
sub
push
scas
xor
sub
aaa
xlat
mov
lcall
sub
xor
xchg
sbb
inc
sub
or
inc
mov
rcll
popf
push
xor
fcom
fidivrs
out
sbbl
mov
jmp
xchg
lret
in
inc
push
bound
lcall
and
aas
imul
aaa
in
mov
fisubs
adc
jle
lds
jno
pop
cltd
mov
mov
sbb
movsl
in
sbb
inc
mov
xlat
in
mov
jne
stos
sbb
ds
fadds
icebp
insl
pushf
les
sub
movsl
sti
dec
insb
mov
push
xchg
int
jae
push
sbb
pop
mov
mov
clc
mov
fstl
cmp
movsb
faddp
xchg
cmp
stos
jg
sbb
jnp
pop
cmp
cmp
jae
inc
fldl
loop
adc
arpl
push
mov
mov
push
in
cmpsb
es
fsubrs
dec
inc
stc
movsl
cli
xor
mov
dec
sub
adc
out
mov
sbb
pop
mov
pop
ss
faddp
sbb
fs
icebp
mov
inc
std
and
inc
xchg
and
xor
add
lret
mov
jg
pop
jecxz
dec
aaa
data16
xchg
je
xchg
adc
lret
mov
jp
and
mov
mov
mov
xlat
out
sahf
sbb
mov
ret
mov
inc
add
and
iret
std
mov
push
sub
jecxz
pop
hlt
push
xchg
movsb
les
push
adc
bound
push
call
js
ret
cmp
in
insl
push
repz
jbe
popf
outsb
adc
add
ret
movsb
pop
mov
stc
xchg
sub
and
xchg
popa
aam
iret
push
dec
mov
xor
mov
mov
lret
cmp
iret
je
popf
pop
leave
dec
rcrl
pop
test
out
jg
lret
mov
add
cmp
dec
or
mov
scas
repnz
aaa
shrb
push
lods
mov
fadds
insl
mov
loope
mov
lods
stc
pushf
cmp
xor
pop
cmp
std
fwait
dec
jl
dec
nop
pop
or
mov
jge
xchg
into
js
rorb
data16
dec
ljmp
xcrypt-cbc
cmpsl
push
adc
cmp
out
fisttps
xchg
jecxz
mov
imul
xchg
inc
negb
xor
rcll
fs
mov
fmull
movsl
mov
pop
or
add
push
fxch
insb
pusha
scas
lods
mov
push
imul
sbb
test
fsts
repnz
frstor
pop
xchg
ret
fwait
repz
stc
mov
test
cs
add
loope
incb
gs
dec
jl
or
xor
test
push
and
add
es
sbb
cwtl
ss
mov
lahf
push
inc
repnz
mov
sub
sbb
shll
pushf
pop
fildl
sub
bound
jb
ljmp
and
dec
mov
nop
inc
arpl
das
jo
aaa
arpl
sub
sahf
std
xchg
adc
mov
push
push
mov
lcall
mov
jle
lcall
mov
into
pop
dec
pop
mov
push
pop
mov
sub
pop
pop
jg
lock
mov
sarl
addr16
mov
push
mov
mov
or
mov
es
ret
sub
push
inc
ret
test
icebp
int
addb
outsb
popa
dec
sti
mov
pop
xor
cwtl
adc
loopne
scas
mov
mov
push
add
push
mov
in
cmpsb
pop
mov
mov
call
mov
gs
scas
lods
add
cmp
nop
sub
cmp
dec
imul
rorl
sbb
test
mov
mov
xchg
bound
bound
pop
loope
subb
daa
push
scas
sbb
ja
sbb
sub
lea
add
sub
xchg
xor
data16
inc
cmp
mov
popa
jmp
aam
lock
pop
inc
loopne
mov
insl
stos
loop
adc
hlt
je
add
movsb
mov
mov
jle
adc
mov
lods
mov
xchg
dec
cmc
out
dec
cmpl
shl
repnz
cvtps2pi
imul
imul
cmp
imul
xchg
cli
in
xchg
arpl
jecxz
subl
in
jns
sbb
dec
into
popw
fnstenv
adc
adc
sbb
outsb
lret
mov
and
sub
rorl
in
push
jns
stc
jge
adc
push
lods
push
mov
gs
pusha
pushf
or
arpl
dec
imul
rcll
or
int3
sbb
mov
and
pop
js
sub
inc
pop
sarb
imul
pop
sbb
add
lds
dec
rclb
jnp
movb
decb
pusha
and
popa
das
movsl
sub
loop
sbbl
int
repnz
outsb
push
or
sete
mov
jecxz
das
push
fwait
xor
bound
es
mov
cld
cltd
push
pop
fcmovnb
movsb
outsl
sub
mov
mov
aaa
push
test
mov
rcll
sbbl
popa
cld
dec
push
bound
xchg
or
repz
push
ljmp
leave
xlat
cmp
inc
push
lock
mov
jle
sbb
mov
jbe
int3
xor
lahf
scas
fwait
push
bts
stos
push
cs
in
test
jp
mov
outsb
aam
pop
scas
outsl
int
cmp
addr16
pop
dec
enter
xor
mov
push
repnz
addr16
ffreep
or
xlat
movsl
or
mov
xchg
lea
stos
cmpsl
jle
fstpl
addr16
jno
into
stos
inc
mov
insl
sbb
cmc
shrb
mov
aam
nop
mov
std
arpl
inc
sub
push
lods
cmp
dec
xor
pop
std
in
loop
dec
lcall
dec
out
push
outsb
loop
and
ss
mov
into
int3
mov
xor
or
push
outsb
pop
test
jle
repnz
outsb
lods
call
adc
inc
stc
xor
xorb
adc
mov
lahf
xor
in
mov
mov
add
xor
pop
cli
jb
lods
pop
push
adc
mov
cmpl
bound
cs
jbe
jb
loopne
stc
nop
mov
popa
rcr
dec
fwait
ss
pusha
xchg
andb
js
negl
push
push
push
shlb
subb
in
ret
add
sbb
inc
adc
leave
stos
das
push
fnsave
fisttps
cld
cltd
sbbl
lock
pop
hlt
xor
clc
std
mov
inc
jg
out
xor
outsb
jbe
pop
fdivs
mov
insl
lea
jnp
test
or
or
lcall
xchg
adc
mov
jo
in
mov
insl
sti
stos
shr
cmpl
jecxz
push
and
cmp
dec
bound
mov
ljmp
fdivp
sti
outsl
rcrl
mov
xchg
sbb
idivl
cmpl
add
ret
sti
or
push
gs
push
iret
ret
sub
xlat
ret
jns
xor
adc
sub
mov
test
movsl
pop
dec
dec
nop
scas
imul
insl
push
push
mov
gs
mov
dec
mov
mov
adc
divl
lcall
inc
fcoms
adc
push
xchg
add
jae
iret
popa
fwait
or
pushf
movsl
pop
mov
or
mov
jl
xchg
xchg
pop
mov
into
or
mov
mov
push
test
fidivs
ljmp
push
mov
dec
push
arpl
xor
dec
scas
inc
jns
std
int
adc
ja
sub
push
push
and
sub
xchg
insl
add
das
jnp
adc
in
inc
and
jmp
sbb
sub
jl
sub
insb
adc
dec
call
jae
and
test
out
mov
das
rorl
in
sub
rcll
lret
xor
cmp
sbb
inc
js
add
xor
jo
clc
xchg
out
repz
shrb
gs
jg
or
mov
jg
mov
imul
mov
mov
roll
orb
push
mov
nop
repnz
in
cmc
sub
jecxz
xchg
and
outsl
adc
imul
addl
je
push
jg
push
fsub
fildll
lea
mov
imul
sahf
mov
fidivrl
mov
movups
cwtl
fidivrs
dec
jl
fstpl
pop
add
mov
pop
call
pop
xor
cmp
jmp
adc
stos
es
mov
mov
and
in
enter
pop
xor
mov
or
test
pop
and
fwait
dec
sub
push
xchg
int
fcmovu
outsl
inc
shlb
dec
hlt
test
jns
dec
or
out
add
sbb
sahf
jno
and
pop
mov
adc
sbb
out
ret
dec
dec
aaa
insb
pop
lret
mov
mov
aaa
sub
and
push
xchg
popa
fs
inc
fdivrl
lods
cs
popl
cmp
xchg
fwait
dec
mov
jecxz
int
sub
inc
pop
sub
je
das
iret
aas
mov
cli
push
xlat
std
sub
mov
mov
sbb
das
je
into
out
sub
xchg
fwait
pop
sub
xorl
push
add
int3
pop
enter
and
insl
push
in
js
sbb
cmpsb
pop
sub
insb
add
xchg
xlat
or
movsb
and
pop
xlat
orb
cmp
sar
pop
jns
hlt
inc
cmpsl
loop
sub
orb
mov
lret
std
in
repnz
jmp
mov
push
add
out
in
add
adc
mov
mov
imul
mov
sbbb
pop
je
mov
mov
jp
lea
pop
ljmp
jae
add
loope
mov
addb
add
or
sub
mov
mov
cwtl
out
fbld
insb
pop
in
fcompl
inc
mov
cmp
cld
addb
in
add
sbb
das
pop
jo
mov
xor
lds
jmp
xchg
aaa
mov
fstpl
inc
in
sti
sub
rcl
out
js
adc
jne
mov
adc
lock
mov
andb
inc
jno
js
mov
cmp
sub
mov
cmc
fbstp
aam
sbb
sub
aaa
in
lcall
fwait
out
xchg
fnstenv
dec
add
popa
clc
inc
icebp
lret
negb
mov
push
ret
out
jo
or
jecxz
pop
dec
in
movsl
inc
mov
mov
cwtl
loop
ljmp
add
jle
cld
addr16
pop
ss
inc
out
es
lock
aam
mov
jmp
adc
mov
test
cs
jo
dec
enter
out
pop
sbb
mov
jbe
push
dec
add
pop
push
test
push
and
imul
jg
and
or
adc
or
repz
lret
and
add
scas
sub
adc
lret
adc
mov
and
testb
shlb
add
dec
sbb
inc
xor
addl
push
add
cltd
mov
and
pop
in
xor
addb
or
repz
popf
ja
adc
adc
mov
cmp
aas
divb
aad
jmp
dec
movsl
push
dec
rcll
push
mov
sbb
js
jecxz
mov
fs
nop
jo
ficompl
fistps
mov
inc
mov
ficoms
jns,pt
or
adc
mov
xchg
lds
out
dec
insl
jmp
pop
pop
roll
pop
lcall
or
aas
test
and
ljmp
cmp
jo
add
lret
loop
cmp
cld
xor
pop
push
popa
cs
adc
sbb
pop
pop
dec
out
out
cmpb
outsb
es
mov
ud2
push
jge
mov
shl
sbb
andb
jecxz
arpl
cmp
add
into
sub
loopne
xchg
mov
or
push
xorb
or
inc
sarl
mov
xchg
mov
mov
mov
mov
gs
aam
int3
pushf
inc
jbe
mov
xchg
sbb
scas
popf
les
sahf
loop
shlb
xchg
fistpll
lods
sbb
nop
mov
push
and
pop
mov
leave
lea
add
bound
clc
or
fildll
inc
push
mov
mov
xchg
xchg
jecxz
test
xor
fdivl
sbb
sub
mov
mov
push
aad
add
daa
fmull
stos
push
insl
sbb
jge
insl
pop
int
bound
loop
mov
aaa
inc
and
or
lcall
sub
fbld
outsl
and
mov
dec
jl
add
mov
adc
adc
cmp
xor
inc
adc
jmp
mov
hlt
pop
sahf
adc
mov
mov
dec
or
jne
aad
ds
mov
les
test
dec
scas
popf
xor
or
mov
mov
and
push
sbb
sub
fisubrl
paddq
mov
lods
pop
pop
aam
mov
and
mov
fldl
and
mov
jecxz
jg
xlat
shl
cmpsb
push
sub
psrad
push
or
popa
push
push
and
mov
aas
adc
mov
stc
sub
xor
sar
clc
lods
mov
aam
add
mov
push
lret
sbb
mov
shll
out
dec
xlat
imul
gs
clc
sti
push
push
cli
mov
add
or
inc
fcmovnb
fiaddl
xchg
jle
pop
mov
enter
and
mov
xchg
xchg
mov
push
dec
test
mov
movsb
inc
jns
jmp
xlat
sub
leave
fstl
pop
xor
push
mov
jl
and
sbb
fnstsw
mov
add
xor
cltd
xor
popf
add
cli
cmc
mov
cmp
adc
aas
jne
into
out
pop
int3
lcall
xchg
jo
call
cmp
stos
sbb
inc
mov
inc
cmpsl
jl
mov
scas
sarl
and
das
fiaddl
or
stos
loopne
mov
mov
ja
pop
or
add
pop
dec
dec
repz
jle
dec
xlat
imull
popf
mov
push
sbb
xchg
sbb
pop
sbb
js
add
inc
or
inc
daa
adc
ss
xchg
add
adcl
mov
das
popf
and
cli
rclb
addb
cmpsl
sub
adc
ret
cmpsb
cmp
gs
addb
adc
mov
mov
adc
sub
popa
pop
popf
xor
ss
lret
fwait
jb
arpl
cmp
dec
sahf
jp
int
mov
mov
jbe
cmpsb
jb
insb
adc
rolb
pop
cli
lahf
mov
mov
testl
inc
jp
mov
mov
inc
jae
aad
or
mov
jne
sarl
inc
stc
std
mov
xlat
cwtl
sarl
mov
adc
lahf
data16
sbb
pop
jl
cld
sbb
insw
dec
lcall
xchg
inc
inc
push
leave
insl
addl
adc
mov
std
aad
xor
mov
outsb
idiv
shl
inc
push
lcall
push
lahf
mov
mov
stc
push
jle
add
out
inc
data16
jl
ljmp
mov
shlb
iret
sbb
pusha
jecxz
xchg
push
inc
push
mov
shll
roll
xor
push
xor
sbb
lods
outsl
fistps
or
jmp
jg
cld
sub
mov
dec
stos
jl
xor
mov
add
out
test
in
cmp
jle
dec
jne
bound
adc
setb
fcoml
cld
xor
mov
xor
movsb
icebp
fldl
sbb
fisttpll
mov
cmp
xchg
xor
dec
sub
call
push
jno
addb
xchg
push
inc
repnz
cmc
popa
into
pop
sub
xchg
repnz
loope
dec
mov
stos
out
bound
adcl
repnz
push
insl
das
xchg
mov
in
mov
push
rcll
or
into
pop
mov
fucomi
cmc
cmp
enter
fwait
xlat
je
std
adc
push
ret
cli
mov
pop
mov
nop
pop
xchg
cmp
outsl
xor
pop
mov
dec
out
dec
ljmp
into
hlt
dec
xor
bswap
or
jg
dec
sbb
cmp
stos
mov
fistps
xchg
lods
int3
arpl
js
push
inc
jle
or
adc
push
movsb
pop
movsl
stos
xor
bound
nop
cld
or
sub
or
push
repnz
gs
cmpsl
sbb
xor
jg
lods
or
lea
pop
outsl
xchg
std
jmp
cmpsl
outsl
call
aad
pop
inc
icebp
int
mov
rcl
inc
mov
cmp
pop
mov
lea
xor
cmp
pop
pop
out
fidivs
pushf
dec
cmp
scas
cmp
or
lret
incl
push
push
fildl
aad
test
repnz
xor
cwtl
ss
incb
pusha
shll
cmpsl
xchg
enter
or
out
stos
aad
sub
aaa
xlat
jecxz
mov
xchg
in
sub
pop
sbb
out
int
adcb
shrl
in
sbbb
mov
aaa
lret
js
icebp
push
xchg
push
sub
jle
mov
cmpl
or
sbb
inc
stos
inc
cmc
mov
loopne
add
mov
dec
shr
jmp
out
mov
fwait
mov
jne
loope
or
ffree
js
cmp
xchg
jo
cmc
cli
mov
push
mov
add
inc
pop
pop
testb
hlt
xchg
or
test
pop
ja
mov
or
fldenv
cmp
ficompl
scas
int
ds
movsl
test
mov
dec
sub
xchg
xchg
addr16
inc
jecxz
fistl
cmp
sbb
mov
and
sbb
leave
xlat
and
into
sub
sbbb
xor
sub
dec
mov
pop
sbbb
rcr
adc
xchg
add
add
fdiv
inc
add
out
xchg
in
add
mov
out
cmp
aas
xchg
arpl
pop
int3
adc
sub
mov
dec
xor
shll
dec
or
jns
adc
cmc
xchg
jg
jo
aaa
push
addr16
sbb
cmp
bound
rorb
out
sbb
in
int3
pop
sbb
cld
rorl
enter
inc
shrb
movsl
and
jge
add
les
add
shrb
fistl
cmc
sbb
push
outsl
cmove
push
leave
lods
out
mov
sub
testl
xor
mov
dec
nop
inc
mov
std
mov
adc
dec
and
and
or
xor
icebp
outsb
dec
rcrl
aam
dec
enter
cmp
fists
lods
sbb
int
push
pop
repnz
jmp
imul
xchg
sbb
clc
add
imul
mov
xor
jmp
stos
hlt
clc
xlat
mov
adc
mov
orl
jb
mov
push
in
out
cld
inc
fstp
insb
lea
ljmp
lret
sub
aas
lahf
je
test
adc
aad
cmp
sahf
pop
out
lret
cmp
cmp
sub
cmpsb
stos
add
in
dec
push
mov
lahf
insl
pop
daa
cmp
pop
cmp
sbb
mov
arpl
mov
push
xor
push
jg
call
jns
rorb
cmp
push
aad
nop
fmuls
out
sbb
dec
fcoml
push
int3
rcr
add
imul
jo
repnz
pop
lret
cmpl
jg
iret
and
fisubl
cmp
lret
in
pop
inc
adc
aaa
mov
js
lahf
sub
in
cmp
js
mov
pop
pop
imul
pusha
xchg
push
mov
pop
dec
sub
push
idiv
inc
scas
xchg
scas
ds
test
clc
push
bound
xchg
gs
and
clc
xor
cmp
add
fdiv
test
jo
iret
ret
mov
loope,pn
pop
std
lret
addl
cli
cmp
sbb
dec
or
in
fistl
sar
xlat
out
cmp
ds
mov
adc
xor
dec
xchg
test
and
iret
js
popf
repz
dec
lock
xchg
sbb
cld
dec
push
iret
aam
sbb
cld
repz
in
into
js
inc
cmc
gs
xor
sbb
jne
cmc
popf
pop
mov
movsb
in
add
dec
add
outsb
mov
outsb
push
and
pusha
push
fcom
mov
jbe
cwtl
pop
outsb
add
lods
cmp
xchg
repz
sbb
icebp
inc
stos
xchg
movb
cwtl
aaa
out
nop
sbb
cmc
popf
mov
push
sub
test
test
xchg
je
divb
sar
enter
test
jae
or
dec
mov
enter
mov
bound
stos
icebp
pop
rclb
mov
hlt
xchg
push
dec
push
sbb
push
inc
stc
in
xchg
leave
std
inc
xchg
cmp
inc
or
lahf
cltd
imul
cwtl
icebp
add
or
hlt
add
push
adc
lret
gs
sbb
add
stos
push
movsl
xchg
mov
or
inc
adc
out
fnsave
mov
sbb
add
mov
adc
lahf
aad
out
ficoml
and
pop
cmp
push
mov
pop
popa
sti
nop
insl
jno
imul
xor
mov
xor
jge
lock
fdivs
pop
cmp
cmp
sti
shll
inc
add
inc
xor
into
mov
shlb
movsl
or
dec
pop
shlb
mov
shrb
cmp
cmpsl
inc
mov
and
movsl
test
adc
or
xor
and
enter
cmp
fs
dec
ret
or
in
fsubr
lret
xchg
int
or
push
mov
push
out
out
cmp
jns
mov
pop
xor
pop
call
out
jl
xchg
pop
dec
adc
out
imul
add
movsb
push
jmp
xor
rorl
lds
lret
cmp
mov
mov
push
call
dec
jae
xor
roll
jo
dec
xor
jae
mov
insl
ret
or
jl
cwtl
mov
pop
and
popa
and
xchg
movsb
push
dec
lcall
dec
mov
push
mov
daa
sbb
mov
test
sbb
mov
popf
adc
mov
xor
pusha
push
movsb
test
adc
add
xchg
hlt
test
mov
mov
mov
inc
lods
inc
lret
mov
test
xor
adc
sub
jp
inc
add
lds
mul
cs
negl
adc
mov
out
je
scas
scas
mov
popa
sbb
outsb
adc
sub
sahf
xor
outsl
sahf
xchg
cld
or
or
dec
mov
mov
test
cmpsl
pop
ret
repnz
ds
popl
add
dec
rcr
and
shrl
pop
mov
pop
sbb
cltd
je
mov
cmp
or
dec
mov
xchg
outsl
repnz
outsb
sbb
out
pop
aas
pop
sbb
lds
dec
fsubrl
sbb
or
mov
loope
call
nop
mov
sbb
aad
mov
test
pusha
mov
cmp
mov
fs
mov
add
jnp
xor
pushf
inc
mov
pop
nop
sbb
mov
mov
pop
push
into
out
mov
or
imul
sub
int3
jg
das
mov
js
lret
cmp
sbb
lcall
mov
and
mov
jg
dec
scas
mov
cwtl
movsl
mov
pop
call
adc
jg
rorl
stos
sbb
orl
mov
add
lea
lret
mov
test
mov
sub
jne
movsl
or
add
jae
mov
pop
mov
loop
push
adc
or
bound
or
push
lcall
adc
scas
testl
xchg
and
xor
xchg
insl
fs
in
push
mov
int3
sub
clc
leave
push
pop
mov
mov
mov
mov
push
add
mov
xchg
dec
mov
push
sbb
cmpb
and
push
bndstx
insb
xchg
nop
sub
xorb
dec
in
pop
sub
lret
or
mov
jmp
jge
mov
mov
mov
sub
cmpsl
push
cmpsl
cmp
inc
lahf
add
testb
or
or
iret
insb
lahf
mov
cld
test
xchg
ficoms
bound
out
jg
rorb
je
jle
xchg
bnd
mov
jmp
data16
push
repz
movsb
sbb
stos
dec
fidivrl
loop
addb
sti
mov
loop
fisubs
cmpsl
push
int
jbe
test
leave
push
es
mov
cwtl
xchg
enter
loopne
cld
mov
sub
push
cmp
mov
pop
aaa
imul
and
lcall
sub
sbb
sbb
push
pop
orl
xchg
jne
push
not
jo
adc
sbb
cmp
orl
mov
or
test
sub
cmpsl
lret
repz
nop
ljmp
mov
cmp
clc
fcmovnb
pop
push
pop
out
mov
sbb
add
repz
adc
daa
cmp
xchg
mov
insb
mov
push
lods
in
sub
flds
cmpsb
lcall
or
insl
sub
repz
xchg
pop
sub
jecxz
fsubl
push
outsl
jmp
xchg
out
adc
fcmovnb
lods
jge
inc
ljmp
jnp
and
sbb
out
jae
mov
jl
adc
cmc
sub
dec
adc
lcall
pop
push
xchg
fucom
lret
cmpsb
or
mov
aam
ljmp
aas
adc
xor
push
push
mov
dec
inc
mov
adc
inc
scas
sbb
jmp
leave
and
out
push
cld
ror
mov
or
insl
icebp
pavgb
mov
xchg
insl
pop
cmp
mov
fdivl
cmp
jp
xchg
inc
or
mov
dec
ret
int
pusha
jne
mov
int3
in
xor
jg
hlt
push
adcl
mov
add
inc
inc
lret
push
sbbl
lcall
rcrl
test
inc
xlat
jns
lods
sar
repnz
orl
dec
fildl
dec
inc
ret
ljmp
sbb
mov
xchg
jmp
hlt
pushf
sub
mov
mov
adc
outsb
loopne
nop
loop
jnp
hlt
popa
inc
fbld
push
lret
sbb
sub
and
cmpsb
cmp
xor
imul
not
fs
dec
repz
or
jne
gs
sub
mov
and
mov
rcrb
mov
daa
test
dec
and
or
xor
out
dec
scas
loopne
sahf
mov
scas
xchg
insl
stc
push
cwtl
sbb
lea
in
mov
inc
popa
test
xchg
sbb
sarl
mov
scas
sbb
adc
ds
test
dec
cmp
mov
je
fcomps
gs
sti
in
sbb
sub
mov
inc
jno
mov
jno
nop
imul
in
xchg
rcll
jae
xchg
dec
in
leave
test
incb
shll
adcl
outsl
and
enter
or
inc
lods
push
pop
imul
xchg
adc
imul
imul
pop
push
push
sarb
push
popa
dec
add
cmp
mov
dec
je
mov
adc
imul
xlat
pop
hlt
xorl
outsl
scas
sub
test
dec
xchg
imul
or
movsb
mov
xor
xchg
sub
outsl
inc
mov
jnp
scas
test
cld
aas
cwtd
pop
mov
std
out
push
lea
sti
cmp
es
roll
ja
adc
inc
insl
mov
sbb
mulb
mov
outsl
into
in
es
xor
xchg
inc
mov
inc
xchg
mov
das
int
cmp
inc
cltd
jmp
sbb
loope
mov
xor
out
xchg
adc
xchg
mov
fsubs
cmp
mov
mov
scas
insl
sti
sbb
mov
add
mov
jb
sti
cmp
jno
les
insb
fs
xor
insl
jae
xchg
or
fldl2e
add
xor
aad
out
mov
lods
fadds
jecxz
hlt
xchg
mov
add
push
arpl
jns
mov
bound
out
fiaddl
mov
xorl
or
scas
mov
adc
adc
jno
pop
add
xor
fst
pop
shrb
or
aad
add
popa
inc
movb
pop
pop
outsb
stos
jnp
and
cmp
call
jo
imul
outsb
jg
repnz
jb
pop
aad
mov
lea
int
add
sbb
mov
rclb
pop
sbb
movsl
mov
jbe
movsb
rcll
mov
cmp
jle
xor
xor
lcall
adc
lcall
push
pop
std
or
jae
icebp
and
enter
xor
sbb
flds
xor
pop
jno
cmp
arpl
imul
fidivl
pop
loope
in
popa
movsl
fwait
or
dec
sub
fidivrs
cmp
mov
stos
clc
out
inc
ret
jmp
sahf
test
jns
mov
sbb
adc
jle
cmp
mov
add
xor
shrl
data16
hlt
stos
jge
inc
es
cmpsl
scas
xor
add
in
scas
push
pop
and
subl
xchg
data16
fwait
cmp
rcll
cmp
jnp
les
in
aad
aad
sub
and
mov
jae
cmpsl
fidivl
dec
sbb
addr16
sub
dec
mov
sbb
int
add
mov
stos
outsb
in
push
mov
adc
sbb
jo
and
iret
jmp
xchg
mov
fdivrl
mov
sbb
ja
fsubrs
popl
jo
lcall
mov
add
inc
sub
fldcw
movsb
push
xorl
inc
dec
int
add
sub
add
fsubs
sahf
clc
or
and
hlt
cli
and
inc
lret
push
pop
dec
jge
orb
subl
jle
xchg
scas
push
mov
shlb
loopne
ljmp
cmc
inc
call
sub
mov
stos
stc
xchg
test
out
das
pop
or
aam
xchg
jecxz,pt
call
xchg
loop
data16
or
mov
jo
or
sar
dec
iretw
jne
fcoms
mov
gs
xchg
mov
shl
rclb
pop
in
jl
fldenv
fs
xchg
pop
mov
add
cmp
stos
cmp
insb
loop
bound
xor
test
lods
out
insl
jb
xlat
jmp
lahf
mov
jmp
div
sti
adc
fists
lahf
xchg
pop
rcrb
inc
loop
mov
orb
stc
fucomip
popf
cli
scas
jae
iret
xor
add
jecxz
hlt
mov
mov
pop
movsb
fsubr
mov
mov
cmpsl
sub
adc
notb
xchg
lahf
dec
mov
add
mov
xchg
test
or
add
pusha
mov
out
or
dec
add
pop
xchg
loop
ds
ficomps
mov
inc
and
cmc
xchg
arpl
push
jno
jb
or
dec
inc
ds
xor
xchg
mov
adcb
rclb
jp
outsl
fsubs
inc
push
enter
xlat
clc
stos
push
gs
cmp
sbb
mov
or
mov
or
stc
or
lock
jb
sbb
test
push
mov
dec
adc
mov
pop
nop
and
std
mov
mov
repz
jmp
loop
pop
sbb
dec
dec
shrl
mov
inc
pop
lea
pop
xchg
sbb
push
sub
push
mov
aaa
xor
xchg
movb
or
mov
cmc
push
or
aas
or
pop
jl
arpl
xor
sbb
jnp
sbb
scas
mov
pop
icebp
sub
sar
call
int
jne
lods
mov
mov
and
shlb
fnstsw
mov
adc
lock
movsl
loopne
push
jb
pop
ljmp
bound
xchg
mov
hlt
and
int3
popa
xchg
jns
int3
pop
ja
push
push
lock
mov
js
out
mov
shlb
ja
push
imul
inc
xor
pop
inc
test
jne
jle
ss
mov
mov
fwait
mov
fwait
push
xchg
jo
push
add
adc
mov
lret
xchg
mov
xchg
into
adcl
push
inc
inc
insb
xchg
arpl
sbb
mov
aaa
fstps
es
sbb
dec
cmp
jle
jnp
jnp
xchg
sub
mov
mov
push
inc
fidivrs
fisttpl
push
leave
inc
cwtl
fadds
push
cld
lea
pushf
mov
xor
fsubrl
rorb
inc
mov
test
ret
pushf
in
les
mov
pop
xrelease
in
inc
ss
push
or
inc
jae
jbe,pt
mov
push
sub
cmpb
lret
mov
rcrl
loope
sbb
pop
popf
mov
movsb
insl
outsl
mov
cwtl
xorl
xor
leave
adc
pop
mov
cmp
dec
pushl
lds
andb
test
les
jg
cmp
subl
push
xchg
pop
and
dec
andb
hlt
insl
push
dec
jecxz
push
pop
mov
aas
jb
scas
mov
mov
push
shll
sub
mov
sbb
std
add
sbb
idivb
stc
in
or
push
in
or
or
sub
test
sarb
push
cld
movsl
lret
icebp
and
mov
test
cwtl
xchg
inc
add
and
packuswb
and
mov
sub
or
aas
insl
push
push
push
push
pop
arpl
mov
popf
add
cmp
pop
inc
imul
jae
sbb
sbb
shll
cmp
and
aad
jo
inc
shrl
or
sbb
in
lds
mov
push
dec
cmp
sub
adcb
inc
popa
fcom
std
push
inc
cmpsl
les
int3
leave
mov
fdivrl
std
mov
jmp
push
aas
xlat
push
mov
add
enter
push
cmp
push
sahf
push
inc
inc
cmpsb
mov
lea
hlt
in
jcxz
add
pop
movsl
repz
icebp
sbb
jns
xchg
incb
inc
mov
pushf
or
into
ret
and
push
add
aam
imull
sub
mov
daa
adc
pop
or
xlat
out
mov
jp
lods
fsubp
repnz
sbb
test
jno
dec
pop
xorl
in
xchg
add
lock
inc
pop
mov
ret
mov
fs
hlt
ss
decb
mov
jno
sbb
mov
pop
fsts
lahf
inc
lods
stos
and
and
imulb
mov
das
mov
sbb
jb
enter
mov
adc
xchg
mov
movsl
jbe
sub
rcrb
sti
pushf
hlt
jecxz
jge
xor
in
dec
mov
outsl
int
jne
mov
pop
movsl
push
hlt
xchg
mov
mov
dec
cmp
lcall
cmpsb
dec
inc
aaa
js
push
sub
jg
ljmp
loop
add
add
fiadds
mov
or
scas
mov
ret
push
or
aaa
xor
push
adc
or
data16
sbb
and
pop
add
xor
test
add
push
xor
dec
loope
adc
xor
pushf
or
popa
push
xlat
cmp
jno
and
push
push
add
push
or
mov
pop
jne
pushf
mov
inc
fsubrl
inc
mov
aas
pop
iret
adc
mov
mov
sti
loope
inc
in
inc
aas
ret
add
mov
lods
mov
in
sbbb
mov
xchg
fucomi
or
sub
jge
loop
sbb
shlb
dec
orb
or
popa
ljmp
out
mov
repz
xchg
jmp
cmc
dec
shrb
mov
cs
dec
inc
and
dec
lahf
pop
cmp
mov
sub
outsl
in
outsb
xchg
imul
cmpsl
jg
aas
popf
das
pop
mov
lods
nop
daa
jo
xchg
arpl
outsl
mov
or
iret
inc
out
xchg
add
lea
dec
push
dec
push
nop
fsubl
inc
cmpsb
mov
dec
or
dec
mov
sub
dec
jmp
gs
pop
and
jnp
xor
sbb
test
xor
ror
add
xor
push
inc
jg
add
gs
dec
and
ja
rorb
and
shlb
lret
inc
pusha
cmp
inc
adc
jp
repnz
cmp
clc
add
xchg
movsb
or
cld
pusha
gs
ret
fisttps
addl
cltd
and
mov
mov
cmc
test
ret
mov
mull
mov
xor
pop
lock
mulb
pop
push
arpl
popf
cmpb
scas
testb
movsl
mov
sub
jns
movsl
call
pop
ret
outsl
mov
pushf
mov
shlb
mov
insb
fiadds
dec
bound
dec
test
mov
cmp
or
ds
enter
fiadds
jecxz
jae
out
jecxz
shlb
fwait
outsl
sti
inc
out
cs
insl
or
or
pop
mov
push
jne
add
into
test
clc
jmp
push
and
or
mov
cmpsl
dec
negb
jns
inc
pop
stc
idivb
lods
cmpsb
jbe
lret
xor
adc
xor
sbb
cmpsb
int3
or
sbb
loopne
mov
adc
sbb
fildl
repnz
adc
jmp
sti
hlt
fdiv
cmp
jmp
push
jo
jp
or
adc
mov
mov
sbb
push
clc
adc
sarl
or
push
ss
mov
andb
sub
dec
dec
pop
dec
hlt
dec
push
xchg
jne
inc
nop
sub
mov
pop
mov
push
or
shlb
out
or
cmp
inc
shll
cmc
iret
pop
mov
clc
mov
hlt
xor
out
and
add
lahf
jle
sub
adc
scas
fnstsw
sub
enter
popf
inc
xor
pop
or
jge
push
ret
and
sbb
jo
jge
fisttpll
cmp
pop
fdivrl
jl
jae
lret
repnz
adc
add
push
lret
insb
popa
cmp
push
movsl
sub
popa
aad
fsubs
mov
add
and
clc
push
ror
pop
hlt
jle
jbe
fimuls
les
iret
jg
data16
inc
jmp
sbb
sbb
or
jns
shrb
mov
xchg
out
or
dec
push
xchg
mov
pop
and
ret
mov
sbb
inc
cwtl
jbe
lret
aam
cli
mov
or
push
or
xchg
sub
or
popf
jns
cmp
pop
icebp
es
cwtl
stos
push
mov
adc
out
jb
and
leave
mov
and
ss
sbb
fistpl
sbb
cmc
ficoml
sub
mov
js
pushf
icebp
pop
scas
add
sti
jecxz
sbb
xchg
and
pop
imul
sub
fcoms
dec
leave
add
push
push
push
lahf
rcll
sbb
andb
mov
and
nop
mov
lret
out
rclb
xchg
daa
popa
aam
cltd
cltd
dec
arpl
in
jmp
inc
xlat
sarb
ss
add
shl
jmp
mov
cmp
sub
loopne
int
jle
push
sub
pop
cwtl
lahf
pop
in
test
mov
sub
xlat
jne
loopne
or
arpl
and
mov
adc
inc
loopne
pop
adc
scas
mov
dec
adc
push
call
or
negl
cs
sub
mov
add
cld
insl
mov
pop
mov
cs
mul
and
sbbb
xchg
repnz
cli
mov
xchg
xchg
je
test
inc
mov
mov
mov
addr16
pop
andl
jns
test
adc
mov
xor
movsb
arpl
pop
repz
or
shlb
imul
aas
repnz
push
fbld
shlb
mov
add
inc
adc
push
cltd
fwait
roll
stc
out
bound
add
push
jne
cmp
or
je
aam
ret
mov
gs
out
or
jmp
adc
movsb
and
adc
push
js
xchg
push
js
adc
xchg
das
mov
sbb
or
rcr
push
xor
dec
xlat
test
dec
cld
lods
into
rcll
xor
push
out
in
stos
pshufw
loopne
or
push
outsb
push
mov
jmp
add
push
mov
jecxz
push
inc
lea
push
jne
enter
sbb
out
sub
stc
xchg
dec
mov
sahf
dec
or
sub
sbb
jge
rcl
mov
jno
adc
or
mov
cmp
add
pop
cmpsl
lock
out
or
lcall
mov
or
sub
fistl
or
push
testl
addb
rcll
inc
xor
scas
pop
push
ja
lea
ret
jp
xor
lahf
in
sbb
cmp
pop
adc
sub
in
ret
adc
jl
icebp
mov
les
popa
mov
lods
xor
cmp
in
fcmovb
mov
mov
pop
inc
sub
cmpsl
jno
leave
inc
cltd
sbb
lcall
mov
sbb
mov
add
mov
mov
cmp
sbb
push
pop
cltd
cld
lret
inc
test
cltd
xor
das
aas
ret
ljmp
xchg
lret
jecxz
in
scas
sub
mov
xor
sbb
dec
add
into
cmpsb
push
or
push
push
pop
cmc
out
xlat
loop
lock
push
mov
sub
or
dec
clc
outsl
push
inc
dec
ljmp
movsl
lock
lock
jne
bound
popa
jp
dec
cmc
lcall
into
icebp
and
divb
inc
lock
mov
mov
into
pushf
out
fwait
cmp
test
mov
aas
aad
aas
xlat
xlat
jmp
adc
push
repnz
mov
fwait
stos
sub
xchg
fcomi
cmp
add
das
inc
xchg
mov
icebp
pop
xor
push
pop
enter
mov
push
rorb
or
adc
add
mov
add
lea
ficomps
or
sbb
data16
mov
aam
push
push
daa
xchg
cmpsl
jne
scas
insl
bound
jae
cmp
cwtl
fcompl
push
and
ret
out
pop
fisttps
xlat
or
adc
shlb
add
hlt
ss
mov
push
xor
push
adc
outsl
test
jne
sub
mov
ljmp
gs
jo
dec
fcmovb
insl
sub
dec
out
sbb
jns
mov
repnz
mov
mov
roll
sub
jne
jmp
dec
adc
cmp
xchg
mov
xchg
push
rcll
dec
xchg
jae
mov
in
xchg
mov
jb
gs
fnstcw
mov
lret
cmp
sub
sbb
ret
icebp
jmp
xchg
aas
sbb
movsb
xchg
jg
fiaddl
js
sbb
lea
fs
aad
in
repnz
jmp
xorb
in
mov
push
loope
sahf
lcall
mov
push
fnstsw
testb
pop
mov
sub
cmp
xor
push
arpl
imul
push
aaa
push
mov
or
scas
pop
std
jmp
scas
fidivrs
fisttps
pop
pop
scas
jp
jns
lds
jbe
pop
call
sub
stc
and
add
mov
or
pop
iret
int
into
stos
in
pop
adcl
xchg
jl
in
test
or
cltd
and
sub
and
or
push
test
negb
push
mov
xchg
test
inc
aaa
sub
push
adc
pop
scas
dec
out
xor
das
dec
leave
push
sbb
icebp
test
push
jp
mov
jb
adc
add
push
adc
and
cli
in
inc
or
dec
lods
dec
lahf
cltd
or
les
inc
sub
loopne
mov
push
addr16
sub
jns
iret
cmpsl
fstps
scas
pop
repnz
sub
cmp
das
push
cld
popa
push
xlat
outsl
mov
cwtl
lods
inc
jno
imul
push
push
setl
xchg
das
sub
mov
push
mov
jno
and
aam
pop
cwtl
xor
in
mov
cld
js
xchg
popa
mov
pop
std
jns
fisubs
ss
jns
push
push
dec
mov
cmp
das
mov
in
fidivs
mov
aad
sub
popa
push
gs
cld
and
filds
mov
scas
sti
inc
sti
stc
das
nop
and
insl
adc
add
rcr
hlt
dec
xchg
inc
jo
das
cltd
es
lret
and
mov
sub
hlt
call
cmpsb
mov
mov
mov
ljmp
loopne
ds
loopne
jl
jl
fs
inc
lcall
movsb
stos
adc
pusha
icebp
test
pop
jecxz
xor
jge
cs
mov
mov
fdivrs
inc
fldpi
xlat
das
in
js
addr16
orl
pushf
inc
cli
rol
call
dec
push
das
and
jle
mov
sub
stc
or
adcb
mov
fildll
fists
mov
es
arpl
cli
cmp
push
sub
push
xor
xor
inc
pop
cmpsl
pop
add
sti
cmp
idiv
fisubrs
jge
cmp
mov
mov
sbb
mov
lcall
push
pushf
cltd
mov
scas
sahf
sti
jle
imul
inc
or
sbb
mov
rclb
xor
mov
cmp
jne
cmpsl
pushf
andl
loope
sub
jae
lret
dec
lret
fildll
mov
cmp
mov
cwtl
stos
jl
pusha
pop
icebp
jl
lea
push
pop
mov
test
divl
test
jno
fwait
lea
enter
adc
mov
xchg
sbb
add
or
jmp
std
fldt
xchg
jmp
jecxz
xchg
aas
ret
or
vmovups
mov
xchg
jno
fldenv
das
cmp
out
adc
cmpb
aad
out
or
pop
in
pop
and
xchg
mov
daa
out
aas
xchg
push
test
push
imul
mov
icebp
out
lock
hlt
xchg
ret
cltd
xchg
mov
rcll
cmc
rcll
or
rcl
dec
mov
mulb
insb
and
pop
push
mov
fbstp
pop
or
inc
popf
xor
push
sbb
pop
or
pop
ret
mov
stos
xor
mov
add
or
sub
int
dec
fistpll
imul
cs
into
sub
iretw
loope
sti
push
sub
inc
test
imul
shll
shlb
mov
les
or
xchg
mov
mov
sub
xchg
out
mov
addl
xchg
inc
cld
aad
cmpsl
test
ret
fwait
push
inc
je
pop
add
mov
in
movsb
pop
xchg
adc
or
mov
jmp
add
mov
xorl
xchg
jge
cwtl
mov
mov
jns
scas
inc
or
test
xchg
hlt
imul
cmpsb
or
sub
or
enter
xor
sbb
scas
jmp
cmc
jle
mov
and
test
lds
or
jno
dec
rclb
sub
cld
aas
add
jl
js
sbb
push
popf
fldenv
sub
pusha
add
fs
test
or
cltd
sti
stc
add
pop
dec
frstor
xlat
mov
aas
pop
pusha
stos
outsb
mull
aam
sub
rcrl
shll
loop
xor
inc
and
stos
push
cmp
out
sbb
cmp
adc
cmc
push
pop
pop
daa
adc
outsl
push
push
jne
decb
xchg
fcomps
stc
into
ja
test
insl
mov
sbb
add
sbb
cwtl
mov
scas
jns
jo
mov
cwtl
lahf
inc
inc
out
stc
jle
xchg
inc
test
mov
jae
jo
xchg
mov
mov
xchg
adc
data16
testb
mov
dec
cmovbe
popf
ja
sbb
and
xlat
lods
jnp
popf
jnp
xchg
enter
ss
lret
push
mov
cmp
push
push
fisubl
fsubrp
fs
cmp
ret
sub
jp
adc
push
icebp
mov
test
sub
jle
fmul
xlat
jl
test
or
xorl
lock
adc
pop
ret
int
cmp
ljmp
out
sub
mov
mov
mov
aad
jns
dec
xor
push
pusha
decb
out
xchg
out
outsl
cmp
dec
lock
mov
out
xor
out
push
dec
xor
test
ds
pop
stos
xorl
lods
test
cli
dec
or
mov
sbb
int
inc
iret
mov
pop
ss
xor
ss
shll
adc
popa
shll
arpl
add
in
and
dec
movsb
inc
jno
arpl
or
sub
sub
or
cmpl
mov
rcr
fsubl
push
cltd
ss
icebp
inc
enter
lods
call
sub
or
mov
mov
push
sbb
arpl
mov
jnp
aas
jle
cmp
mov
cld
cmp
sarl
mov
xor
loopw
dec
mov
fidivl
and
ljmp
jnp
or
push
ds
aam
cld
push
adc
outsb
lock
sti
mov
mov
inc
mov
adc
mov
xor
jno
test
jae
insb
sub
sub
push
cmc
cmp
sar
call
push
mov
cmpsb
push
jb
or
jne
icebp
bound
cmp
xchg
xchg
jbe
xor
and
out
xchg
mov
adc
jo
push
pop
loopne
pop
sub
and
cwtl
lea
jl
sub
dec
sub
mov
cmp
leave
mov
in
subb
scas
notb
scas
sub
loopne
push
mov
mov
test
imulb
inc
out
stos
cmp
imul
dec
adc
dec
inc
iret
fwait
push
pop
xor
mov
aaa
lret
test
cwtl
inc
dec
popf
mov
adc
out
xchg
loop
ffreep
and
push
xor
mov
jb
std
mov
aad
xlat
mov
inc
and
jl
imul
cmp
and
or
inc
out
xchg
sbb
call
aas
test
add
mov
imul
cmp
mov
repnz
dec
clc
mov
dec
cmp
push
push
add
pop
sbb
sub
js
mov
add
test
mov
pop
and
jns
and
inc
lret
and
mov
xorb
mov
es
sbb
enter
add
ret
xchg
in
gs
sub
out
mov
or
fs
sti
inc
shlb
jo
push
in
shll
mov
sti
test
jo
jge
mov
mov
push
pop
or
pop
or
cmp
sub
js
nop
pop
mov
aad
cwtl
sbb
and
add
cmpsb
jp
jge
xchg
mov
cld
or
dec
pushl
mov
cld
xchg
inc
inc
cmp
mov
sti
lcall
dec
mov
gs
and
cmp
clc
jno
cmp
xchg
xor
enter
and
das
add
inc
sar
inc
jno
repz
and
xchg
push
gs
sbb
xor
inc
nop
test
push
jb
clc
test
in
test
ret
out
cmpsl
adc
int
sbb
stos
jo
pop
mov
jno
sti
lcall
xchg
pop
sub
adc
shrl
out
inc
mov
fidivrl
loopne
fcmove
call
scas
dec
ljmp
fcomps
jo
out
hlt
jnp
adc
adc
lock
xor
cmp
xchg
ljmp
hlt
mov
push
lods
out
insl
divl
movsb
sti
cltd
divl
imul
jmp
cwtl
out
dec
shll
outsl
xor
adc
xchg
daa
adc
call
rcr
orb
sub
xor
in
pop
jle
mov
divl
lret
mov
push
jmp
rorb
and
mov
div
inc
push
bound
sbb
dec
mov
pop
xchg
test
sbb
mov
cli
cwtl
jp
pusha
jge
xor
repz
inc
fstpl
xor
in
in
push
int3
ss
insb
out
loop
test
andb
xchg
jmp
fnstsw
xchg
mov
imul
xchg
mov
test
adc
pop
shll
and
addr16
and
inc
outsl
fistpl
dec
sarb
stos
dec
push
push
push
xlat
xchg
int3
cmpsl
pusha
xor
in
inc
stos
push
out
xchg
dec
mov
loopne
xor
sbb
les
rol
stos
mov
js
sub
sub
pop
jmp
inc
xchg
stc
cmp
aaa
jecxz
sbb
sub
mov
xchg
xchg
add
bound
xor
sarl
pop
cmp
and
jne
ret
jno
jbe
mov
xchg
jo
pop
sbb
aad
sub
scas
and
out
mov
pop
xorb
rcr
out
push
pop
xor
push
mov
movsb
fs
lret
inc
in
test
pop
in
push
lods
jge
loope
mov
nop
push
mov
and
jmp
or
fimuls
aam
fnstsw
sub
mov
loopne
daa
sub
xor
ficompl
and
in
in
fmull
data16
repnz
loope
popf
scas
into
shlb
sub
loop
test
lcall
push
cmc
jo
jg
cmp
jb
out
scas
sbb
rcr
add
add
iret
mov
pushf
jle
hlt
cmp
fnsave
bound
arpl
ret
es
add
xlat
add
mov
imul
push
mov
adc
cmc
addr16
or
add
mov
fistpl
clc
mov
jg
sar
into
insb
cmp
xchg
jne
ficomps
iret
jno
pop
std
loopne
and
inc
xchg
loopne
dec
cltd
dec
cmp
cltd
sbb
mov
adc
stos
sbb
lahf
stc
enter
aas
inc
jnp
lret
ret
dec
scas
icebp
movzwl
lea
jnp
rep
pop
jno
add
rcl
push
fnstcw
adc
daa
dec
mul
fwait
div
push
jecxz
and
mov
dec
xchg
sub
sbb
shrl
inc
add
mov
mov
adc
xor
push
push
add
icebp
aam
ret
jae
int
mov
loope
xchg
mov
ror
es
add
outsl
jl
or
repnz
xlat
rorb
cld
loope
ss
fildll
sub
cmpsb
jp
pop
aas
adc
mov
mov
jno
imul
je
les
mov
popf
pop
mov
fwait
jbe
mov
pop
jg
push
popf
aas
iret
push
sti
out
in
xchg
sub
addb
mov
aas
subl
cmp
jl
int
mov
mov
ss
and
mov
mov
test
fmuls
in
sub
movsl
fsubrs
addb
mov
gs
enter
push
or
dec
out
mov
cmp
lret
adc
sbb
mov
insb
mov
mov
or
or
xor
mov
xchg
or
ljmp
or
xor
jl
mov
add
shlb
jl
jne
aas
outsb
jmp
enter
lahf
mov
pop
lock
jns
mov
mov
insb
fwait
jb
mov
xlat
inc
push
cld
xor
adc
test
inc
dec
fwait
icebp
or
ja
inc
add
fiaddl
dec
and
insb
cmpsl
je
repz
inc
mov
and
mov
dec
fucomp
or
mov
mov
mov
movsl
ret
ljmp
cmp
loop
movsl
lds
sub
jo
lds
movsb
cmpsb
sub
out
lea
ja
lret
xor
xor
cmp
repz
add
pop
push
cmc
xor
shlb
lcall
sbbl
subb
outsl
fiaddl
pop
and
das
inc
arpl
pop
and
mov
mov
cwtl
fwait
loope,pt
cmp
outsl
mov
scas
pop
pop
pop
fadd
dec
notl
icebp
mov
call
add
outsb
xchg
adc
add
loopne
mov
push
cmc
sti
or
push
jb
ljmp
sub
push
cmpb
fs
cmp
ja
xchg
sti
push
push
aad
hlt
into
test
cwtl
push
subl
lret
push
mov
lock
es
sti
xchg
cmp
pushf
cmp
mov
xchg
int3
popf
cmpl
cli
or
scas
push
sbb
movsl
jle
jle
adc
aad
call
shlb
mov
flds
jo
les
mov
xchg
sarb
cli
inc
outsb
mov
nop
fwait
add
shll
mov
push
and
ljmp
sbb
mov
nop
cmpsb
frndint
fwait
sub
outsb
cmp
xor
adc
push
das
jp
cli
jge
mov
mov
dec
and
xor
outsb
subb
jnp
lods
xlat
mov
and
cli
and
mov
cmp
add
jecxz
add
inc
in
xor
pop
push
jl
push
cld
pop
mov
in
sbb
mov
cmpsb
xchg
lahf
leave
pop
sbb
dec
aaa
and
push
loop
cwtl
mov
shll
repz
and
add
frstor
or
mov
xchg
xor
scas
mov
mov
imul
pop
js
je
imul
cld
sub
scas
fcomps
lret
insb
mov
insl
push
dec
enter
push
and
jns
movsb
ret
outsb
shr
fwait
pop
add
sub
daa
mov
test
fdivl
or
mov
or
ljmp
nop
or
out
pushf
out
fs
sub
hlt
dec
and
xchg
aas
test
int
int3
out
cwtl
shr
jae
sbb
lds
pop
rcr
cmp
jno
out
and
jb
xchg
jp
mov
ljmp
lods
adc
xor
inc
lret
mov
mov
dec
add
fs
fnstenv
outsl
jmp
getsec
ret
mov
popf
shl
dec
add
cmpsb
xchg
sub
dec
pusha
int
hlt
mov
arpl
popa
outsb
lock
enter
xchg
and
stc
fldcw
outsl
movsl
movsl
fs
das
shll
ret
sub
ja
cwtl
aam
fs
popa
lret
in
sub
divb
push
lcall
hlt
pusha
cmp
push
and
das
xor
or
out
push
mov
inc
call
in
mulb
loop
jmp
inc
fdivrp
push
sub
pop
jno
xchg
negl
lret
cli
pushl
and
mov
test
imul
and
in
lods
aas
xor
cmp
cmp
mov
pop
sbb
ds
fdivs
movq
xor
or
mov
jae
mov
pop
mov
dec
jge
push
or
imul
pusha
rcll
xchg
lds
in
or
dec
aas
iret
test
mov
push
sbb
xchg
ficoml
es
xchg
in
mov
icebp
adc
jp
dec
xchg
add
arpl
xchg
lock
loop
jge
into
xor
repnz
sbb
mov
mov
sbb
sbb
mov
insb
repnz
ror
inc
xor
rcrl
or
jge
cwtl
add
dec
das
pop
push
nop
cmc
jmp
jo
orl
dec
push
iret
sub
loope
adc
mov
mov
and
arpl
clc
mov
mov
test
ja
jge
notl
add
repnz
push
xor
mov
cs
mov
stc
frstor
lret
or
push
hlt
adc
dec
mov
pop
cmpsb
and
xor
and
nop
add
mov
jg
lret
add
insl
mov
lods
popa
or
popa
adc
mov
fwait
sbb
inc
out
adcl
inc
out
xor
dec
and
inc
push
incl
das
arpl
adc
aad
xchg
stos
pop
int
and
xor
cmp
ljmp
or
call
mov
mov
mull
xor
or
lods
dec
arpl
and
stos
sbb
mov
or
out
loop
pop
mov
sub
mov
dec
decl
gs
mov
and
hlt
mov
shl
pop
mov
scas
jmp
dec
or
cmp
jg
out
clc
scas
popa
xor
shrb
loope
or
or
sbb
loope
mov
and
adc
jbe
fsts
outsb
les
mov
ljmp
testl
adc
stos
jne
and
cmc
sahf
je
shlb
call
out
call
out
push
gs
or
enter
and
lods
int3
adc
daa
call
pop
fdivl
mov
mov
lods
or
in
pop
jno
fwait
repz
dec
imul
pusha
bnd
or
rcrl
push
hlt
sbb
adc
or
out
aas
inc
dec
adc
dec
ds
sbb
xchg
mov
jp
push
cld
and
mov
or
outsb
lods
xchg
pop
stos
subb
aad
das
xchg
imul
add
inc
outsl
pusha
icebp
pop
int
dec
das
dec
dec
xlat
sarb
notb
pop
or
dec
fs
ja
jecxz
xlat
lahf
ret
adc
mov
jmp
mov
cmp
sbb
pop
dec
rcl
mov
cmc
imul
in
es
inc
punpckldq
popf
push
push
rclb
dec
xchg
or
push
insl
enter
sbb
push
sbb
call
add
stos
xor
arpl
test
mov
xchg
xchg
rorb
pop
xchg
push
js
inc
push
sub
inc
fidivs
cmc
pop
mov
push
inc
out
loop
jecxz
jne
adc
mov
dec
dec
int3
cwtl
lcall
add
call
data16
push
gs
adc
lods
lcall
icebp
nop
sub
xlat
addr16
xlat
mov
adc
popl
out
sbb
pop
sub
ja
cld
lahf
mov
jo
push
popf
int
jne
sbb
imul
repnz
sti
xor
jo
sbb
add
dec
inc
fmuls
leave
adc
sub
dec
dec
cmpsl
add
stos
test
jp
add
push
jl
mov
shrl
jecxz
dec
in
xor
push
fnstsw
cmpsl
fildll
or
or
pop
mov
data16
mov
shlb
addr16
icebp
inc
inc
cmp
dec
cwtl
cld
sti
hlt
popf
xor
adc
dec
cmp
fisttpl
aam
sub
jne
cmpb
cltd
pushl
push
in
jecxz
jl
mov
mov
sahf
inc
push
lcall
mov
mov
xchg
sti
test
pusha
pop
ja
cmp
xorl
roll
jl
pop
test
repz
stos
xchg
xchg
ror
xor
xor
frstor
enter
inc
add
or
test
mov
inc
or
dec
mov
xchg
mov
popa
xchg
negb
add
daa
add
sbb
ss
shlb
addr16
xchg
inc
mov
lret
andl
sub
xchg
aaa
nop
cmp
xchg
scas
lea
cmp
or
jnp
insb
push
dec
and
and
fdiv
addr16
and
cmpsb
mov
push
cld
push
and
pusha
outsl
cs
insb
mov
fldl
xor
hlt
pop
vmovsldup
js
cmpsl
mov
xchg
mov
shll
imul
push
mov
mov
stc
gs
xchg
insl
and
lea
sbb
lahf
jl
movsb
leave
repnz
aad
mov
mov
mov
pushf
pop
sbb
and
lods
das
xor
pop
fs
mov
out
inc
stos
fiaddl
mov
mov
dec
dec
xchg
mov
insb
push
mov
daa
adc
or
xor
adc
stos
stos
std
adc
xchg
cli
bound
xor
add
lea
push
mov
pop
xchg
addr16
enter
aam
pushf
sarb
out
js
adc
cli
inc
and
jp
rorl
jnp
nop
push
cmp
mov
dec
jne
andb
inc
das
jae
iret
jg
sti
gs
lahf
adc
pop
sahf
bound
cmpsl
pop
jecxz
call
ret
test
push
lods
adc
dec
jle
and
lods
hlt
ss
insb
aad
mov
xchg
push
insb
mov
inc
pop
sub
mov
insl
rdmsr
out
out
ficompl
outsb
or
xchg
cmpsb
sub
loopne
loopne
test
mov
push
mov
shll
lret
ss
dec
fnsave
push
out
repnz
test
jg
mov
push
jnp
call
cmp
mov
xlat
stc
jno
sub
fcmovb
std
jg
mov
mov
jle
push
adc
adc
and
fwait
lock
push
mov
aam
jg
xchg
lock
inc
sub
push
lock
push
jno
xchg
mov
jl
mov
js
sarl
ss
mov
xor
bound
push
int
cmp
xlat
and
dec
mov
jns
popf
mov
mov
xchg
cmp
mov
ret
arpl
repnz
mov
arpl
ss
in
arpl
cld
popf
scas
pushf
inc
xor
outsb
cmp
xchg
out
xchg
adcl
call
inc
addr16
xor
mov
dec
out
cmp
aad
sub
ret
or
jnp
add
xor
pop
test
ljmp
pusha
dec
jae
pop
cmc
fmul
mov
aam
sti
jg
mov
sbb
les
in
ds
mov
add
ud2
movsl
push
cld
test
sti
push
sub
ret
into
nop
and
adc
jb
ret
lea
dec
mov
dec
mov
ja
xor
add
ss
lahf
aas
popf
inc
ret
push
cld
js
inc
or
imul
jg
fbld
xchg
ficomps
push
imul
adcb
pop
mov
les
and
iret
aaa
fiadds
icebp
lahf
ret
mov
stc
dec
fs
repnz
xchg
inc
inc
or
push
in
fs
add
inc
lock
inc
xlat
xchg
outsb
lods
aad
push
movzwl
lret
call
je
push
mov
nop
lret
out
mov
clc
mov
mov
or
out
je
repnz
aas
push
jne
cs
clc
dec
fld
adc
mov
and
mov
aaa
mov
sub
mov
fimull
pop
jb
jg
mov
xor
idivl
loopne
adc
ljmp
dec
insl
lea
mov
jno
mov
sbb
push
mov
pop
fstp
fs
push
cmp
repz
xor
data16
movsb
pop
xchg
outsl
sub
dec
in
xor
dec
ret
popl
sbb
fcomps
push
push
fldt
and
pop
mov
xchg
outsb
xor
imul
and
push
push
push
movd
push
movl
dec
das
cmc
js
das
jne
cld
ds
adc
or
xorb
mov
cmc
mov
mov
sti
xchg
push
roll
push
sub
scas
das
add
bound
dec
xor
and
dec
lret
out
sub
add
sbb
sub
stc
mov
dec
sbb
dec
lahf
iret
add
std
pop
sahf
ficoms
loope
mov
xchg
cmp
rol
add
dec
in
xchg
daa
sti
pusha
jnp
inc
push
ficompl
sub
lret
and
jl
in
cmp
ja
sbb
pop
inc
and
popf
ficomps
popf
aaa
std
or
imul
push
xchg
dec
push
cmc
cltd
pop
xchg
mov
mov
aam
lock
movsl
cmp
sub
mov
add
push
sbb
in
test
bound
arpl
pop
sub
xchg
jb
sub
adc
adc
idivl
mov
dec
cs
mov
push
push
dec
push
or
arpl
data16
sbb
sbbb
mov
cli
lret
adc
push
fstps
push
inc
push
pop
loope
sbb
rorb
cmc
fadds
lds
lea
cs
out
outsb
lcall
jl
pop
es
inc
pop
sub
outsb
shr
mov
push
push
cld
sbb
sub
push
lods
jnp
inc
jmp
pop
pop
or
out
dec
mov
pop
shll
fs
divb
jno
jecxz
into
and
repz
mov
idivl
xor
or
dec
adc
pop
pushf
and
icebp
insb
aaa
inc
rorl
outsl
shlb
test
jg
pop
fidivl
cmp
aam
push
push
sub
loope
xchg
cmc
aaa
cmp
jg
scas
mov
stc
jo
in
add
mov
cmp
cli
or
ljmp
or
mov
div
je
pop
cmp
ss
add
xchg
out
mov
mov
cmp
gs
lret
fadds
push
icebp
aaa
imul
cli
fldcw
fimuls
pop
pop
dec
cmp
add
setbe
adc
lahf
je
inc
popf
sahf
sbb
testb
add
pop
sarb
adc
pop
push
add
imul
or
lods
loop
mov
rcrb
push
xor
aaa
fs
jp
dec
push
sbb
push
or
xchg
cmpsb
cld
stos
sub
push
jmp
int
and
jl
aaa
sbb
scas
mov
sub
mov
incb
movb
mov
pop
iret
cltd
cmpsb
add
fwait
mov
sbb
add
in
test
lods
dec
fwait
sbb
out
sub
pop
pop
mull
testb
mov
cmp
insb
stc
pop
hlt
jne
divl
push
popf
ret
aaa
in
aad
mov
adc
cmp
mov
push
rclb
pop
pop
mov
fmull
add
cwtl
add
push
inc
stos
jae
lret
jmp
mov
xor
jge
shlb
xchg
stos
or
movsb
orl
xchg
pusha
push
iret
inc
and
lea
add
enter
aam
pop
adc
cmp
mov
jo
mov
xchg
or
xor
mov
push
adc
sbb
std
and
push
fcmove
jle
mov
jnp
xor
fistpl
daa
fsubp
bound
loopne
testb
jb
mov
icebp
adc
pop
test
maxps
fs
mov
push
adc
fwait
and
js
inc
test
or
add
xlat
in
pop
push
or
xorb
push
gs
pop
mov
pop
mov
out
xor
scas
scas
nop
or
cltd
jmp
icebp
iret
daa
add
cmp
into
xor
xor
sub
jne
les
arpl
clc
lret
sbb
data16
into
mov
inc
dec
mov
jnp
jge
mov
mov
pushf
clc
popa
call
in
lods
fchs
add
aas
inc
add
sbb
fdivrs
in
movsl
in
mov
add
mov
fisttpl
pop
dec
fdivl
lods
or
push
pop
jl
mov
adc
pop
addl
or
shll
jmp
cmp
jb,pn
xlat
bound
fimuls
or
dec
daa
or
sub
cmp
out
push
subl
xchg
pop
dec
adc
out
mov
inc
sbb
adc
out
popa
xchg
push
xchg
mov
out
inc
xchg
inc
pusha
and
push
test
cmp
pushf
and
subl
xlat
mov
inc
ret
push
pop
icebp
xchg
gs
daa
or
insb
and
test
mov
push
es
mov
aaa
sub
out
or
dec
jno
lahf
pop
add
pop
stos
das
xchg
dec
jg
mov
flds
daa
jno
pop
cld
mov
scas
jmp
lods
cltd
pushf
mov
cltd
push
insl
ror
roll
inc
dec
gs
shl
dec
stos
dec
cmpsl
mov
imul
mov
aam
push
and
ret
nop
imul
mov
mov
scas
int
filds
fistpll
mov
pushf
push
je
pop
cmp
cltd
in
sbb
orl
or
sbb
jp
out
dec
es
mov
daa
push
int
mov
arpl
and
lea
fdivl
lock
push
and
cmp
add
insb
enter
mov
sbb
mov
popf
dec
xor
sub
xor
fcom
mov
out
xchg
out
and
out
aas
mov
xor
loopne
pop
repnz
xchg
nop
mov
hlt
enter
jge
xor
call
dec
sub
cmp
pop
pop
test
and
fbld
lcall
inc
mov
jb
cmpsb
dec
ss
inc
sbb
or
dec
add
fwait
add
ja
and
rclb
xor
mov
push
jb
mull
pop
addr16
push
scas
test
jmp
cmc
sahf
insb
call
mov
push
int
cmc
repnz
mov
pop
mov
mov
cmc
sbb
cmp
addr16
mov
push
add
mov
jno
cmc
cmp
je
sub
mov
pusha
mov
mov
mov
jg
lds
ds
push
xchg
lret
fidivrl
jo
inc
adc
ja
jecxz
lret
jbe
push
mov
dec
cmpsl
testb
aaa
sahf
xor
jb
adc
mov
jle
orb
daa
and
ret
inc
push
pop
jns
addr16
mov
test
pop
xchg
push
xchg
popa
imulb
jle
dec
push
mov
inc
sub
movsb
sub
add
lcall
dec
ds
setne
sub
push
int3
outsl
lret
addr16
cmovns
add
lahf
dec
sbb
cltd
popf
dec
test
ds
out
test
mov
sahf
insl
jl
popa
test
ret
mov
call
outsb
stos
or
out
jne
ja
rol
loop
jp
inc
ss
std
fldenv
jns
adc
xchg
movsl
sahf
xchg
cli
stos
dec
clc
add
data16
push
inc
jo
mov
add
add
int
ud1
aas
xchg
pop
add
insb
mov
lea
call
imul
mov
xor
int
out
cmp
mov
out
push
jmp
xchg
in
movsl
dec
mov
and
lock
subb
pop
shrb
inc
popl
push
xchg
dec
push
pop
adc
pop
mov
ss
xor
int
mov
rorb
lret
gs
mov
cmp
orb
fs
mov
lret
cmpsb
insb
mov
mov
cmc
inc
orl
adc
cmp
ret
in
and
mov
mov
push
idiv
xchg
sbb
cmpsl
cli
loopne
popa
and
es
setns
fs
loope
fcmovnu
mov
mov
xlat
add
cmpl
jnp
adc
sbbl
hlt
cld
cmpsb
call
adc
adc
repnz
in
inc
xchg
sub
fsubrl
icebp
mov
cld
out
push
jns
js
aas
xorb
push
je
pop
cmpsb
jmp
cmp
push
jae
lock
or
add
mov
inc
mov
jnp
aam
xlat
mov
lret
imul
jl
test
cmp
add
out
and
jmp
push
addl
fldenv
cld
in
loop
mov
sub
leave
leave
stc
dec
cmp
xchg
imul
sub
test
jle
fidivl
xchg
cmpsl
aaa
movsl
dec
adc
lahf
add
sub
sbb
das
out
inc
sbb
xor
insb
or
mov
mov
clc
xchg
adc
out
ror
xchg
cmc
inc
push
insl
adc
gs
xlat
cmovp
pop
mov
inc
xchg
ds
in
jg
pop
pop
ja
in
aaa
gs
xchg
aad
sbb
loop
out
sti
cmp
jo
push
and
adc
ja,pt
push
out
imul
dec
inc
lds
fnstsw
jne
std
or
fiadds
xor
mov
inc
jmp
movsb
push
add
sbb
sub
sub
call
into
fwait
cmp
push
mov
repnz
xlat
xchg
aam
sub
jecxz
mov
loopne
and
jo
lea
cmpsb
lret
dec
xchg
test
pop
and
fnstsw
fidivs
and
push
enter
xlat
mov
adc
mov
cli
jge
sub
js
push
cmpsl
xchg
jl
xor
testb
stos
js,pt
bound
test
cmp
dec
pop
mov
mov
frstor
adc
ljmp
sub
in
popa
mov
pushf
arpl
lods
pop
xchg
mov
icebp
gs
xor
je
rol
out
cmpsl
movsl
pop
cwtl
push
rolb
and
dec
lcall
or
mov
inc
push
popa
leave
or
into
jp
int3
xor
sti
or
xlat
enter
push
cmp
jge
mov
sahf
mov
jg
adc
mov
in
stos
cmp
cmp
jl
sti
xchg
xchg
das
rorb
stc
push
movsb
out
sti
sub
mov
sbb
dec
pop
lcall
xor
or
enter
jnp
sub
mov
imul
xchg
rcrl
push
xchg
fcoml
je
mov
xor
insl
bound
xor
cli
jno
push
sub
aas
stos
out
mov
cmp
inc
data16
jbe
fidivrl
rclb
xorb
add
sar
repz
jle
sub
mov
mov
mov
movsb
sub
clc
cld
lret
shr
loope
fwait
addr16
adc
ja
movsb
xchg
or
sub
mov
addr16
inc
pop
jl
adc
rolb
dec
movsb
pop
loope
daa
xor
pop
hlt
fs
daa
sbb
test
xchg
mov
movl
sub
aad
pushf
adc
stos
sbbl
or
idivl
leave
xchg
push
xor
xchg
movsl
mov
add
ja
test
add
inc
adc
lods
adc
pop
mov
shrl
pusha
add
xorl
mov
push
mov
jecxz
loope
mov
mov
and
in
sub
dec
sub
dec
cmc
xchg
mov
pop
lcall
pop
orl
sbb
fldcw
cmpsb
shrb
and
add
popa
arpl
or
cmp
loop
jmp
popf
clc
cmc
mov
cmpl
and
pusha
push
popa
jo
jmp
hlt
jb
lcall
mov
dec
fstpt
mov
mov
mov
shlb
sub
inc
push
repz
cmc
es
test
and
and
test
and
cmp
push
push
clc
jnp
rcl
inc
mov
or
jle
fmull
sbb
jnp
mov
mov
cmp
add
push
adc
test
mov
push
push
jge
sub
stc
mov
add
sub
rclb
push
cmpsb
fldl
cmpsb
ficomps
xchg
mov
ss
sarb
lahf
imul
inc
dec
lcall
test
stc
xchg
xchg
std
or
shl
cmp
fidivl
sub
iret
sub
stos
jmp
shll
xchg
in
jno
data16
mov
inc
roll
test
add
mov
sub
mov
data16
xchg
jle
aas
sub
push
js
push
testb
push
ret
fnstcw
cld
dec
mov
xor
and
and
push
jo
cltd
movsl
leave
sbb
mov
cmpsb
mov
cwtl
gs
popa
int3
popf
ja
inc
out
pop
mov
adc
adc
or
or
loopne
jp
dec
lds
cli
dec
xor
cmp
ds
rcrl
lods
int3
dec
mov
shll
inc
mov
xor
dec
adc
xor
lock
out
push
in
es
jge
je
lods
arpl
loop
leave
sbb
emms
lea
mov
xchg
pop
xor
test
cmp
decl
jecxz
mov
dec
sbb
leave
addr16
jmp
rolb
xor
cmp
xorl
orb
jne
xchg
test
rorb
int
sbb
subb
jp
mov
das
mov
jl
cld
sbb
mov
sti
and
pop
hlt
ja
lea
in
sbbb
xor
jge
insl
cmp
and
push
cmc
in
pushf
outsl
ficoml
cmpsb
xor
pop
pop
loop
leave
jmp
push
xor
push
add
es
and
jns
jg
lods
mull
pop
decl
xchg
adc
enter
push
mov
arpl
adc
jp
mov
int3
jb
rclb
dec
pop
imul
es
mov
into
mov
jns
mov
aas
les
mov
xchg
sahf
xor
xor
cmp
mov
ret
jb
lods
bound
pop
or
in
das
mov
imul
lea
dec
inc
inc
mov
jbe
inc
nop
int3
hlt
or
cld
stc
mov
inc
iret
xchg
fadds
jb
repz
ret
gs
mov
mov
movntq
test
outsb
pop
xchg
xrelease
xor
fisttpl
imul
xchg
mov
popa
ficompl
adc
imul
cmp
sub
xchg
inc
fbstp
ret
movsb
and
jle
lret
movsl
push
pop
icebp
call
cs
fisubrs
dec
jl
dec
sbb
popa
ds
cwtl
and
in
imulb
pop
mov
or
sbbl
mov
or
sahf
les
aam
dec
xor
xchg
imul
popf
jl
mov
adc
in
jo
es
rol
js
in
mov
cs
push
outsl
jmp
leave
js
jecxz
clc
cmc
rorb
inc
pop
xorl
jnp
arpl
hlt
decb
dec
stos
pop
jae
es
cmp
jae
xor
mov
aad
clc
rolb
sbb
arpl
insb
popf
mov
or
cwtl
push
jb
mov
scas
testb
or
clc
shl
xlat
push
xlat
out
xorl
ja
pop
testl
push
fisubrl
adc
mov
mov
xor
sub
fisubrl
out
push
push
mov
je
inc
xor
nop
int3
push
cmp
and
test
scas
loop
lcall
ljmp
ret
or
and
mov
inc
shr
es
test
pop
add
je
aam
jecxz
fwait
or
insl
add
scas
clc
sub
mov
mov
pop
insb
aam
push
out
fsubl
xchg
in
dec
mov
dec
inc
mov
cmp
dec
notl
mov
xchg
fimull
rclb
mov
adc
rcr
sbb
imul
sbb
cld
sub
aam
stos
add
sub
cmp
les
lea
inc
pop
push
or
sahf
xor
fdivl
lahf
add
test
or
xchg
xchg
or
pop
or
sti
ja
pusha
xor
dec
mov
mov
mov
fsubrl
mov
xor
jge
push
scas
mov
ficompl
repz
mull
lcall
and
clc
enter
inc
fsubrp
add
push
sahf
lcall
ljmp
andb
sub
rorb
int
mov
lret
les
xor
iret
ds
jecxz
push
es
enter
sbb
bound
cwtl
inc
fdivs
movsl
mov
pop
xchg
lods
sbb
aas
sub
inc
fldcw
ds
xor
add
inc
xor
sbbl
mov
fildl
loop
fs
mov
mov
sub
aad
mov
pop
leave
add
insl
scas
cld
mov
rol
pop
mov
leave
sbb
roll
push
lcall
dec
xchg
pop
lock
fwait
popa
mov
add
in
test
inc
cmpxchg
lods
mov
push
xchg
jle
out
mov
and
push
cli
insl
int
jg
loope
pop
popa
or
or
push
je
cmp
sub
shll
fisubrl
mov
fs
js
jmp
dec
sbb
push
popf
xlat
repnz
sub
jecxz
or
fstpt
addr16
mov
faddp
push
xchg
inc
mov
rcr
rcll
sbb
insl
les
insl
cltd
jge
rclb
fs
imul
fcmovnu
add
push
data16
sti
dec
xchg
mov
and
mov
adc
mov
pushf
subl
icebp
test
shrl
out
and
mov
lea
dec
mov
pop
mov
test
pop
in
inc
daa
and
movb
aas
mov
sti
fdivl
xor
stos
pop
push
mov
and
add
adc
inc
cmpsb
mov
pusha
cld
adc
pop
testb
sub
gs
xor
pop
leave
sbb
fwait
lods
hlt
into
mov
jbe
xor
int
xor
shll
out
movsb
orl
and
add
xchg
movb
inc
test
mov
inc
mov
sarb
aaa
push
xchg
cmp
loopne
sub
xor
mov
in
or
jp
push
in
sub
inc
sub
mov
shrb
dec
daa
negl
jae
daa
ficoms
cmp
out
push
clc
mov
enter
popw
outsb
sbb
dec
les
dec
movsl
push
roll
xorb
in
out
in
pop
lods
dec
adc
jecxz
ja
sub
dec
jge
push
sub
adc
add
sub
stos
mov
push
inc
pop
aam
push
xchg
inc
sub
hlt
ficoms
jl
outsb
inc
push
mov
pop
pop
cmp
pop
fiaddl
push
ret
jnp
mov
mov
ljmp
daa
gs
jbe
inc
sub
push
inc
pushf
cmp
ja
shrl
mov
or
inc
xchg
insb
aam
mov
sbb
bound
shll
imul
jecxz
jle
mov
enter
xchg
push
xchg
dec
push
push
call
adc
adc
pop
iret
jl
mov
xlat
mov
mov
mov
outsb
lock
sbb
mov
out
push
loop
fwait
pop
xchg
push
mov
inc
movsb
mov
jmp
loopne
in
xor
mov
lret
xorl
outsl
xchg
mov
mov
adc
xchg
sahf
add
jmp
inc
mov
mov
jae
bound
outsl
jb
leave
cld
cmp
gs
cld
and
pop
dec
movsb
sahf
lock
or
outsl
mov
pop
adc
aam
je
subl
jle
mov
cmp
fld
cmpsl
pop
testb
push
mov
int3
in
cmp
cmp
loopne
mov
into
mov
sahf
cmc
out
test
jge
test
adc
ja
imul
int
outsl
xchg
sbb
loop
pop
dec
gs
jl
je
call
sub
ja
movsb
push
ftst
enter
icebp
test
push
test
mov
sarl
cmp
add
fidivs
hlt
pop
jg
jmp
cs
test
sub
lret
daa
lcall
mov
mov
cltd
pop
push
in
aaa
or
jnp
pop
push
pop
shlb
or
call
mov
scas
push
inc
xor
sub
out
or
mov
icebp
repz
xchg
cmc
cltd
in
out
fwait
bound
mov
adc
push
jb
xlat
loope
pushf
leave
add
adc
mov
sti
int3
negb
jns
push
pushf
push
leave
mov
ja
ficoml
mov
in
ja
js
xor
out
push
cmp
fnstcw
push
push
dec
loopne
mov
mov
or
mov
outsb
test
getsec
mov
and
dec
mov
ja
pop
cmovle
les
mov
das
loope
sub
mov
movsb
or
sub
lahf
cs
dec
lcall
stos
push
stc
dec
int
ficomps
lret
dec
jle
or
pop
fdivrl
cld
xchg
or
cltd
push
dec
mov
sti
and
cmpsl
cmp
xchg
out
mov
dec
aaa
scas
jno
mov
push
jg
mov
outsb
nop
jne
inc
test
pop
inc
ret
mov
out
jge
jmp
fdivl
into
jge
dec
loop
movsl
jo
daa
mov
jle
clc
pop
sahf
inc
push
adc
fnsave
xchg
rolb
mov
or
mov
jle
push
lcall
gs
leave
scas
hlt
pop
aaa
push
xor
sti
lcall
cltd
fidivl
jb
push
mov
dec
cs
and
mov
incl
sub
mov
shll
popa
loop
inc
loop
mov
out
xor
bound
pop
lahf
sbb
rcl
outsb
xchg
adc
aam
mov
or
fdivrl
rcll
fildl
ss
aas
pop
cmpl
ja
insb
test
insb
clc
inc
jb
fcomps
dec
push
aam
stc
mov
testb
mov
push
mov
mov
jns
mov
xchg
sbb
roll
adc
inc
lcall
and
cli
int
sbb
xor
mov
xor
jl
stos
dec
xchg
loope
xchg
adc
popa
push
int
pand
inc
dec
lret
or
das
pop
add
loopne
inc
iret
mov
outsb
inc
or
sbb
lcall
mov
inc
sahf
mov
dec
cmpsl
sbb
pop
push
cmc
lret
xchg
out
pop
xlat
in
sub
fnstenv
test
ficoms
sub
jp
in
and
cld
push
jnp
jl
ss
mov
sub
loop
outsb
lea
into
idivb
out
cmc
pusha
aaa
jecxz
mov
cmpsl
sbb
push
mov
or
sub
and
inc
xor
inc
mov
pop
jb
or
ror
jnp
lock
mov
push
ds
push
cmp
adc
mov
push
ret
push
cmp
push
iret
mov
and
mov
in
jmp
into
nop
mov
push
cmp
test
xor
lcall
dec
xchg
and
pop
stos
adc
scas
sub
roll
into
and
sub
push
ds
imul
cmc
dec
loope
jne
jnp
lahf
and
movsl
jge
leave
lods
xchg
jl
push
cmp
negb
jle
mov
sbbb
cwtl
sbb
fists
call
sub
dec
mov
dec
loop
mov
adc
hlt
loope
xor
cltd
sub
jb
inc
jne
subb
mov
jp
pop
xchg
cwtl
insb
fwait
inc
xor
pop
pop
jp
shll
fwait
mov
pusha
sbb
mov
xor
adcl
lahf
add
mov
addb
cmpb
pop
fcomi
sarl
outsl
adc
mov
push
andl
xchg
pop
jmp
loopne
jne
mov
push
call
in
push
mov
jns
push
lods
scas
pop
adc
dec
fstl
or
popa
sbb
stos
xor
shr
xchg
jne
test
aaa
aad
nop
push
inc
xchg
ret
and
push
xchg
rorb
and
jne
dec
add
mov
cmove
add
dec
testl
mov
enter
mov
cmp
push
ljmp
es
push
nop
jns
dec
pop
lret
xchg
cmp
xor
mov
adc
lods
jg
push
js
dec
push
inc
insb
xchg
cmp
popf
inc
xor
xchg
and
mov
fiaddl
mov
sti
in
lds
dec
push
fisubrl
bound
mov
jmp
popf
dec
jbe
xor
adc
scas
push
test
and
cmp
sbb
cmpl
ficoms
cmp
push
ja
test
cmpsl
sahf
sbb
cmpsl
cs
imul
pop
inc
iret
xchg
int
lahf
xchg
pop
sbb
add
cmp
inc
out
xchg
lock
sub
xchg
adc
rolb
pop
or
pop
xchg
fsubs
or
in
mov
lahf
out
test
movsl
xlat
inc
repnz
lds
outsb
mov
imul
sub
and
das
sub
adc
fwait
lahf
xor
or
cmc
sub
sarb
xchg
cmpb
into
pop
xchg
popf
cli
fucomip
andb
cld
out
push
lret
jg
stos
aaa
mov
stc
or
sub
mov
mov
imul
xchg
dec
inc
fbstp
rcrb
and
ljmp
fbld
scas
scas
mov
push
cmc
mov
imul
ficoml
ret
jl
mov
jno
icebp
dec
or
xor
fnsave
pushf
pop
sbb
inc
or
push
out
cmp
pop
idivl
std
addr16
pop
xchg
xor
test
mov
pop
mov
iret
sub
cwtl
cmp
int
mov
fs
mov
mov
cli
inc
add
mov
cmpsl
push
xor
mov
inc
scas
push
pop
jmp
cmp
rorb
push
fdivrl
into
fisubrs
dec
je
fstl
dec
fidivrl
adc
imul
or
jl
jl
hlt
push
arpl
mov
mov
jmp
out
xchg
cld
jle
pop
cmp
sub
insl
lret
sti
sbb
das
mov
mov
mov
aam
lea
add
lret
cmpl
cmp
pop
mov
decb
repz
mov
gs
movl
cltd
inc
test
inc
or
jnp
jno
mov
add
pop
mov
popf
int3
xchg
pusha
mov
pop
rorb
out
iret
or
out
gs
dec
push
pop
fwait
shlb
movsb
dec
add
stos
sub
clc
xchg
push
lahf
dec
lret
repz
and
xchg
cmp
std
js
neg
out
add
jnp
or
adc
cwtl
in
xchg
xchg
mov
repz
lcall
sbb
mov
test
adc
dec
xchg
out
es
or
aad
mov
addr16
adc
jle,pn
sbb
jbe
sbb
pop
add
jmp
inc
data16
jb
xor
or
loope
jp
test
mov
leave
mov
or
ret
mov
mov
push
mov
cmp
repnz
int3
push
lea
jp
cmpsb
jnp
arpl
xor
lcall
cwtl
cs
clc
cmpsl
push
jbe
mov
dec
mov
cwtl
call
and
xchg
loope
dec
xchg
or
fimull
sbb
push
mov
jne
sub
jns
outsl
xorb
xlat
xchg
jmp
and
pushf
inc
les
fidivrs
les
add
popl
outsb
dec
icebp
aas
or
mov
scas
data16
les
cmpsb
cmp
push
addb
push
decl
mov
lcall
or
dec
fucom
cmc
cwtl
dec
incb
mov
push
xchg
xchg
mov
add
stc
rcll
rorb
stc
pop
inc
mov
inc
and
xchg
ss
shrl
add
xlat
cltd
dec
mov
or
ds
mov
hlt
dec
loopne
adc
jb
adc
dec
gs
xor
xchg
hlt
cmc
dec
aas
movsb
aas
testl
lea
in
data16
jmp
or
push
lret
fs
pop
data16
adc
or
cmpsb
pop
loopne
inc
mov
lcall
clc
add
and
and
mov
icebp
leave
push
xchg
rorb
xor
pop
in
movsl
sub
outsl
xchg
into
inc
scas
fsubr
cmp
es
cmp
stc
jle
rcll
adc
ficomps
push
pop
inc
lds
dec
mov
or
cmp
cmpl
inc
pop
sti
rcr
xchg
ljmp
cmp
sbb
divl
fisubrs
in
adc
jb
mov
inc
cld
mov
mov
movsb
dec
insb
xor
rolb
add
dec
cmp
sbb
insb
iret
sub
or
jecxz
repnz
sbb
and
mov
xlat
dec
xor
push
pop
loope
mov
dec
dec
push
lods
mov
pop
clc
out
popa
dec
aad
out
insb
test
loopne
shlb
xchg
sbb
test
je
out
icebp
loope
mov
daa
jae
adc
inc
push
cmp
adc
sbb
pop
nop
jge
pop
or
dec
cltd
cltd
ret
scas
popf
int3
stos
xor
xor
push
xchg
scas
loope
jecxz
call
xor
es
sbb
into
and
fnsave
in
push
lcall
push
jae
dec
jg
cmp
cmpsl
lahf
nop
adc
rdpmc
sub
aam
xchg
sti
stos
xchg
cwtl
xor
imul
dec
push
cmpsl
daa
and
scas
cli
rcll
iret
push
dec
push
push
enter
sbb
pop
addl
mov
sub
in
jl
cmp
pop
cs
js
cmp
and
xchg
aaa
mov
andl
push
sbbb
xor
xor
pop
arpl
notl
cmp
js
add
push
insl
sub
sub
sub
cmp
mov
add
call
sbb
imul
or
inc
inc
fwait
xchg
pop
sub
mov
pop
mov
pop
divb
jp
repnz
push
mov
push
xchg
int
mov
loopne
mov
push
mov
cld
icebp
scas
and
inc
insb
lods
dec
fdivrl
add
arpl
inc
lods
xchg
ret
adc
cltd
cmp
aad
mov
or
sbb
rcll
and
out
jg
cmc
stos
pop
sbb
cmp
stos
or
scas
jne
ljmp
shrl
call
sarl
rorl
mov
mov
push
shll
sub
into
aas
icebp
mov
hlt
decb
lock
sub
mov
scas
pop
scas
sub
fdivl
hlt
ret
adcb
mov
fs
pop
fadds
cmp
push
adc
push
sbb
fwait
mov
je
mov
aaa
or
mov
enter
mov
adc
out
sbb
cmpsb
pushl
sub
mov
stos
add
mov
add
cmp
mov
xchg
mov
push
and
adc
sbb
les
fnstcw
out
lods
pusha
nop
dec
jb
fnsave
call
jne
test
push
add
sarb
ja
mov
das
shll
in
jnp
test
or
dec
std
loopne
int
push
jbe
in
mov
das
daa
das
popf
push
inc
enter
jge
in
mov
mov
cmp
push
lock
pop
mov
lahf
inc
imul
rorb
push
lahf
mov
lcall
mov
lea
int
inc
or
mov
xorb
mov
xchg
pop
xor
stmxcsr
mov
cmpsl
xchg
dec
fidivl
fldl
popf
dec
idiv
mov
mov
out
jno
scas
cmc
mov
add
enter
into
add
mov
or
daa
pop
cmp
aam
int3
ljmp
xchg
rolb
mov
sbb
addr16
ficomps
cmp
jo
jecxz
notl
xchg
dec
mov
xor
fsts
lods
jno
movsl
add
and
and
mov
enter
cli
sbb
mov
filds
xor
sbb
mov
lods
inc
dec
xor
mov
sbb
cmp
jo
jle
movb
sub
in
mov
data16
and
sti
movsl
mov
adc
xchg
xchg
pop
mov
lods
add
push
xor
in
stos
mov
mov
fwait
fwait
in
cwtl
pop
jmp
incb
mov
lods
mov
movsl
jae
xor
dec
outsl
sti
lods
gs
popf
nop
mov
bound
and
outsb
xor
sbb
pop
mov
xchg
js
mov
jle
dec
push
dec
pusha
cli
and
pop
cmp
jl
or
repnz
stos
xchg
fld
mov
pop
xchg
fisubs
jle
pop
idivb
push
mov
icebp
push
push
jp
mov
mov
and
out
pop
cltd
loop
or
rcll
mov
hlt
dec
mov
and
ds
int
inc
repnz
and
imul
jb
repnz
inc
sbb
pop
fmuls
lea
es
cld
push
out
mov
push
cmp
mov
push
sub
roll
mov
cwtl
push
push
xor
dec
test
xchg
aaa
add
xchg
iret
pop
pop
and
shrl
cmpsl
jecxz
mov
dec
or
xor
push
cmp
and
int
mov
lahf
addr16
cli
and
mov
ds
xor
cmp
test
push
and
jnp
jmp
mov
push
or
das
add
xor
or
mov
into
mov
push
jle
aam
leave
or
mov
adc
idivb
sti
jnp
iret
bound
iret
arpl
inc
ds
leave
je
mov
sbb
add
xchg
jns
cmc
xor
imul
mov
xchg
nop
inc
jae
sbb
test
mov
mov
hlt
push
mov
lea
dec
fsubl
mov
adc
dec
jecxz
out
imul
xor
mov
and
mov
test
push
out
les
dec
test
repz
stos
js
pushf
push
or
pop
jge
lock
adc
inc
cmp
add
popa
cmpsl
mov
dec
pop
cmp
loop
dec
lcall
shl
in
mov
and
xor
aad
lahf
insl
js
neg
cmp
push
gs
stos
scas
add
ror
ss
sbb
push
dec
pop
sbb
mov
fadds
xor
xchg
mov
gs
push
imul
cwtl
scas
inc
lea
movups
in
testb
loop
or
or
xlat
add
xlat
push
mov
push
adc
dec
pop
lcall
repz
push
sub
out
pop
add
and
xor
cld
outsl
scas
pop
jne
pop
and
and
mov
xchg
pop
lret
lods
adc
jno
stc
sub
inc
stc
inc
arpl
pop
push
add
fiaddl
mov
enter
inc
xchg
xchg
add
sarl
mov
push
int
jne
jmp
inc
mov
lea
jne
cmpb
movsl
push
dec
ljmp
mov
inc
loopne
and
xor
mov
push
imul
mov
cli
std
in
repz
or
pop
jmp
cmp
and
jecxz
mov
repnz
inc
and
fnsave
popl
incl
cmp
imul
jge
out
xchg
jne
daa
cs
inc
jge
pop
rcr
hlt
enter
or
test
lds
mov
mov
mov
in
and
icebp
std
nop
outsb
dec
rcr
add
cmp
mov
mov
xchg
lds
xchg
iret
xchg
pusha
push
fmull
out
jns
test
mov
and
lods
and
xor
sub
in
mov
pop
scas
repz
ret
mov
mov
mov
out
sub
stos
movsb
dec
xchg
lods
xlat
add
sub
fistpl
push
adc
enter
jnp
mov
addl
loop
sbb
imull
mov
popf
imulb
es
shlb
fcmovnb
sub
jns
rorb
mov
loope
pop
cmp
xchg
ja
inc
pusha
jno
jae
fcomps
cmpsl
and
adc
aaa
fcmovnb
push
fdivr
stos
add
rcrb
pop
mov
div
pop
cmpsb
fs
or
iret
xchg
dec
push
jb,pn
xor
sqrtps
lds
dec
test
dec
pusha
ss
sarb
dec
icebp
rorb
pmuludq
sbb
dec
jmp
fwait
and
and
cmpsb
je
enter
add
xor
xor
fcoml
xchg
xorb
dec
arpl
add
mov
inc
test
andb
inc
cmp
mov
sbb
dec
cmp
in
add
xor
sbb
xchg
lret
push
xor
out
shrl
mov
mov
fdivrs
pop
call
movsb
and
fwait
out
sbb
rorb
add
cmpsl
add
xchg
push
pushf
mov
push
mov
add
ret
pusha
rep
in
pop
mov
mov
cwtl
je
js
xor
or
mov
ja
pop
add
cld
xor
xchg
add
push
outsl
rorl
dec
sbb
in
popf
xor
jbe
insl
sahf
notl
xor
in
je
scas
out
push
in
mov
pop
jecxz
scas
xchg
aaa
adc
sbb
xchg
addr16
dec
xchg
mov
push
mov
daa
xchg
ss
mov
or
jg
aaa
les
xchg
out
jno
mov
push
mov
out
jne
push
cmpsb
jp
fwait
test
mov
or
bound
pop
lods
icebp
popf
lods
into
fs
pop
sbb
xor
or
or
movsl
mov
rorb
cs
out
je
dec
cli
sbb
not
shlb
mov
cs
stos
push
arpl
pop
xchg
sub
mov
pop
push
rcll
inc
adc
and
lock
insb
mov
cmpsb
mov
sbb
add
jmp
ret
incl
std
lea
mov
imul
add
xchg
xor
jnp
lcall
arpl
mov
mov
das
sbb
jg
shl
mov
clc
ret
push
lds
lahf
test
or
stc
in
outsb
inc
in
je
sub
inc
and
pop
push
jge
insl
dec
adc
sub
push
mov
xlat
xorb
hlt
adcl
sub
inc
cmc
dec
mov
call
cs
icebp
into
fwait
push
ljmp
push
or
fimull
and
repnz
inc
cmp
scas
inc
aam
and
or
imul
stos
or
fwait
in
dec
lcall
push
push
jne
jbe
add
xchg
fwait
cmp
sahf
ja
dec
into
fnsave
mov
and
mov
das
mov
push
hlt
cmp
test
mov
and
aaa
dec
jne
out
hlt
test
mov
mov
lret
in
mov
je
adc
loop
pop
lds
sub
sub
repnz
rcl
cmp
imull
sub
ficompl
sbb
ret
imul
sbb
cmp
outsl
iret
and
into
mov
xchg
pop
mov
into
repnz
pop
aas
fistps
sbb
cwtl
push
adc
xor
jnp
push
mov
mov
pop
adc
ret
les
scas
jnp
push
fiadds
sbb
lds
add
xlat
inc
imul
dec
inc
pusha
hlt
mov
fildll
jnp
mov
shr
ja
xchg
sbb
sub
flds
mov
sub
mov
fsubrl
test
mov
enter
inc
icebp
mov
pop
andl
mov
push
sti
inc
cld
jnp
pop
push
adc
outsb
in
mov
push
mov
scas
cmp
movsl
sub
pop
push
cmpl
mov
lret
fs
dec
cmp
dec
add
das
mov
addr16
pop
mov
add
push
sbb
movsl
aas
mov
dec
sbb
xchg
lea
jb
push
imull
adc
inc
and
test
push
icebp
hlt
test
xor
pop
into
cltd
push
inc
rolb
push
pusha
pop
fldl
and
subb
mov
sbb
mov
xchg
sar
pop
stos
mov
gs
loopne
sahf
push
cmpsl
pop
or
lahf
fiadds
hlt
and
sbb
mov
icebp
jae
orb
lods
sub
lds
shrb
jne
enter
push
cmpsb
imul
loopne
push
pop
jmp
cmp
jns
movsb
insb
movsl
sbb
mov
mov
mov
xchg
lock
push
mov
push
lock
insl
mov
popa
jmp
lods
and
clc
mov
push
and
add
ss
mov
push
loope
movnti
test
mov
push
lahf
xchg
ret
lret
sub
js
enter
pop
js
pusha
cmp
xchg
stc
stos
mov
inc
hlt
test
test
inc
in
mov
sahf
jmp
xor
dec
in
fucomp
and
addb
jno
adc
adc
into
inc
dec
divb
or
xchg
cmovg
pop
push
mov
cmp
je
jne
int3
pop
xchg
cmp
leave
push
lds
adc
out
test
and
cmp
mov
lcall
into
out
subb
scas
inc
lock
or
inc
in
xchg
and
ja
mov
movsb
sbb
scas
jno
mov
icebp
outsb
inc
jg
push
mov
xor
add
inc
mov
sbb
dec
jbe
ljmp
gs
cmp
push
js
aam
lods
inc
movsl
adcl
mov
xchg
mov
add
ss
in
frstor
fisubl
jg
ret
xor
push
or
jle
xchg
adc
xchg
xchg
divl
lea
push
hlt
mov
xor
cmp
push
mov
stos
cmpsb
test
jecxz
lock
ljmp
add
clc
cs
sub
add
lock
sti
push
divl
xor
dec
inc
push
cmpsl
cltd
or
jl
cmp
and
cmp
out
pop
icebp
movsb
rcr
aad
xchg
jbe
cwtl
mov
test
into
pop
xor
orb
xchg
xchg
and
dec
jbe
jp
jecxz
push
pop
pop
xor
sahf
imul
cmc
fsubl
sbb
scas
std
ljmp
inc
xor
and
leave
addl
adc
repnz
xor
repnz
or
and
sbb
stc
cmp
in
sti
xchg
or
repnz
rcl
sbbl
loop
andb
test
popf
mov
jp
orl
jg
adc
pushl
cmp
push
mov
in
push
jae
xor
lea
xchg
pop
ds
inc
inc
xchg
sti
daa
sbb
lret
mov
and
scas
push
mov
clc
mov
sbb
cmpsl
repnz
rorl
cmc
mov
rol
sbbb
stc
mov
dec
call
ret
xor
cmp
aas
jae
xchg
js
js
js
sbb
jnp
push
stos
cmc
shrb
aad
sbb
pop
mov
stos
inc
jmp
mov
and
mov
push
adc
sub
jge
pop
outsl
jb
cltd
sub
cltd
jns
cli
hlt
bound
es
inc
inc
mov
push
pop
xchg
push
sti
iret
push
dec
cltd
push
je
jno
ficoms
fcmovnb
xchg
mov
iret
lock
dec
fstpt
and
xor
pushf
cli
decl
in
shrb
add
aad
add
xchg
cltd
fsubrs
lods
cmpsb
imul
xchg
outsl
mov
mov
nop
sbb
and
add
and
test
outsl
xchg
sbb
or
stos
out
mov
pop
sub
repz
les
push
shl
push
mov
sbb
sti
add
ficompl
sub
mov
jb
jmp
inc
pop
jp
mov
xlat
cmc
daa
int3
in
stc
add
and
nop
pop
jne
bound
sar
inc
out
add
cmp
push
popa
stc
ja
orl
sub
cwtl
sarl
mov
lcall
mov
call
in
aam
mov
lock
std
inc
push
mov
rcll
sbb
je
cmp
adc
mov
cld
in
xor
dec
scas
adc
fwait
lcall
mov
adc
mov
movsl
in
out
fsubrs
rcrl
shll
inc
aam
sub
inc
sub
mov
movsb
daa
pop
add
or
xchg
aad
repz
popa
adc
jne
dec
lea
pop
jb
adc
pushf
push
ret
lods
stc
hlt
movsb
push
adc
inc
xor
jp
int
jl
jnp
adc
sbb
mov
sbb
test
xchg
pop
mov
shrl
outsb
rclb
ss
filds
dec
cmp
push
bound
fisttpll
arpl
jg
xor
fidivl
push
sbb
test
jmp
aaa
aad
icebp
xor
cwtl
enter
cmpb
mov
fsubrl
stos
mov
sub
aad
push
inc
cltd
mov
push
xor
std
jb
aaa
mov
lds
inc
dec
cmpsl
les
in
mov
out
mov
test
outsl
sub
ja
inc
out
adc
adc
push
push
cmp
scas
dec
movsl
inc
adc
and
push
jmp
hlt
mov
sub
aas
pop
dec
sbb
xchg
sahf
test
lcall
and
pushf
xchg
dec
pop
mov
insb
xchg
cwtl
mov
idiv
pop
stos
pop
xor
sti
lret
bound
fisttpl
dec
push
int
fsub
sbb
pop
dec
push
bound
lret
imul
xor
pop
les
lea
neg
wrmsr
aaa
mov
sub
mov
cmp
movsl
std
fsubs
cltd
fcmovne
jp
mov
test
dec
xchg
dec
inc
push
jmp
jg
pop
jl
test
and
pop
inc
cmpsb
pop
in
mov
push
xlat
test
jmp
stc
ret
push
outsb
loop
dec
cld
mov
sti
jbe
xchg
mov
lret
push
xor
sub
mov
push
push
xchg
pop
lcall
movzbl
sub
bound
cmpsl
sbb
shl
shl
or
push
ficoms
clc
lahf
dec
insb
mov
push
pop
repnz
cltd
subb
loope
push
clc
adc
pushf
testb
add
pop
repz
or
push
pop
mov
fucom
mov
test
insl
andl
mov
movsl
xor
xchg
mov
mov
inc
in
and
leave
lahf
repnz
jl
xchg
pop
mov
stos
in
in
ljmp
lock
nop
inc
aaa
hlt
lahf
sub
xchg
jns
xchg
les
jno
in
test
jne
pop
js
add
maskmovq
std
movsl
insb
flds
pop
je
add
dec
and
aas
lcall
popf
xchg
add
lods
cwtl
sbb
xchg
rol
push
sub
out
scas
mov
jecxz
gs
sbb
arpl
mov
dec
adc
arpl
scas
arpl
popf
repnz
fucomip
sti
sarl
rdtsc
mov
cmp
xchg
mov
mov
mov
dec
jns
push
pop
dec
imul
jecxz
scas
sbb
loope
sub
jl
decb
and
bound
dec
out
fwait
mov
mov
sbb
and
repz
mov
fbstp
mov
je
ficoms
rorb
loope
rcll
push
aad
addb
iret
pop
inc
sub
rcrb
push
mov
pop
xchg
insb
push
jp
insl
lahf
push
jns
xchg
adc
push
pop
lcall
pop
mov
pop
test
std
andb
lret
jg
pop
mov
cmp
es
xor
xor
incl
popf
clc
cmp
mov
fldl
sar
dec
sbb
push
xchg
in
sbb
or
sar
push
out
loop
in
shlb
fistpll
cmp
push
inc
sarl
lahf
and
and
cmp
xchg
or
imulb
or
cld
out
shrl
fcoml
shl
ret
and
in
inc
sub
sub
sbb
push
ds
mov
pop
aad
addb
and
xchg
arpl
inc
mov
stc
push
mov
xor
and
jns
mov
sub
clc
xchg
outsl
cmp
aam
or
mov
xor
xor
inc
cmp
sbb
jae
repz
fisttpll
gs
out
in
sarb
or
cmc
lock
cli
inc
adc
xchg
pusha
imul
inc
adc
mov
lock
add
rcr
inc
cli
inc
nop
xlat
test
subb
pop
addr16
or
and
icebp
xchg
les
jmp
cmp
das
movsl
repz
mov
ds
aas
jg
jbe
aas
ret
mov
aam
mov
pop
sar
repnz
push
cmp
jae
lcall
jecxz
scas
inc
daa
add
and
push
rcrl
das
fistpl
in
mov
imul
cltd
lahf
lods
mov
add
push
or
rcl
pop
mov
or
fwait
sti
loope
mov
jg
scas
xchg
movsl
ds
xchg
pop
inc
push
jge
jecxz
enter
test
sub
enter
je
inc
or
inc
enter
shr
popa
push
xchg
leave
push
or
aad
int
cmp
inc
ds
sbb
ljmp
jg
scas
mov
repz
push
xchg
cmp
mov
pop
push
xor
outsb
push
inc
dec
jecxz
xchg
fwait
inc
stos
xchg
push
push
call
inc
push
pop
push
sahf
xor
mov
inc
mov
test
test
add
jp
jmp
adc
dec
repz
xor
xchg
js
insl
test
push
out
mov
int
outsb
std
or
mov
fdivr
rcrb
loope
mov
mov
mov
jle
push
fs
push
mov
fsubrs
push
inc
imul
call
rcr
fmull
adc
jg
jbe
jae
mov
xchg
adc
mov
test
push
ss
test
in
cmp
sahf
mov
int3
dec
xchg
sub
das
jmp
loop
gs
lods
sbb
ficompl
ja
xchg
fnsave
cli
push
pushf
jp
mov
nop
jno
push
addl
or
ret
dec
rcrb
sbbl
xor
pop
test
mov
add
js
sub
pushf
lea
jecxz
or
fwait
lcall
les
mov
inc
or
out
cmp
sti
in
cmp
mov
fs
lock
dec
scas
lret
adc
scas
adc
test
aad
jecxz
sbb
xchg
nop
jns
gs
push
mov
xor
stos
cli
push
js
xor
lock
loopne
jmp
mov
or
add
mov
sbb
lahf
jp
jbe
dec
sbb
push
jnp,pn
xchg
stos
test
push
sub
aam
lods
and
inc
inc
roll
scas
fbstp
add
mov
sarl
jb
mov
call
ljmp
pushf
das
in
test
insl
jo
mov
insl
scas
lods
jae
insb
cmp
fs
adc
shl
sbb
push
adc
push
stc
sahf
cmc
mov
jno
repnz
or
test
lods
ror
xchg
es
push
sbb
addb
mov
mov
outsl
into
out
ud1
add
sub
or
notl
dec
fidivl
mov
subl
dec
lret
push
xchg
stos
pop
std
dec
mov
je
mov
in
fs
outsl
or
jl
fsubrs
mov
lock
dec
imul
cmc
gs
sub
xchg
mov
stos
cmp
pop
unpckhps
jmp
ss
push
loope
mov
jbe
inc
sbb
fimull
cmp
in
aad
pmaddwd
sarb
jae
mov
and
movb
fsubrl
in
nop
sbb
insl
mov
nop
orb
sbb
push
jmp
mov
jbe
les
xorl
or
mov
idivl
fwait
pop
cmp
pop
nop
fisubrl
or
sbb
int3
ja
iret
cmp
lock
cwtl
mov
mov
int3
jbe
jae
inc
stos
xchg
aas
jl
sbb
lock
test
xchg
iret
xchg
mov
aaa
lret
xor
xorl
divl
fdivrl
ror
repz
pop
ja
or
adc
cld
fiaddl
adc
adc
mov
push
es
xchg
push
xlat
gs
imul
test
xor
and
mov
jge
and
lds
dec
and
pop
sub
in
adc
rcr
mov
mov
push
xchg
cmc
mov
lcall
xchg
inc
dec
push
leave
adc
push
fucomi
cmp
and
mov
sub
iret
sub
repz
test
inc
loop
sbb
fcoml
xchg
stos
add
jbe
sbb
add
loopne
out
enter
push
ljmp
aaa
out
add
mov
pop
push
xor
jle
mov
mov
xchg
mov
fisubrs
cmp
sbb
mov
pop
in
rcr
in
leave
imul
mov
add
leave
jb
mov
xchg
xorl
dec
xor
xchg
lea
push
mov
or
pop
mov
fprem
and
jl
xchg
fistpl
fisubrs
xchg
sbb
cmp
das
scas
xchg
test
dec
jl
arpl
imul
mov
push
ret
adcb
loopne
loopne
xchg
or
adc
cmp
ffreep
movsl
mov
xchg
repnz
mov
xor
movsl
fisttpll
adc
cmp
add
cmp
cld
sbb
pop
xchg
jo
sub
xor
daa
push
pop
frstor
repnz
cwtl
dec
mov
in
nop
icebp
cmp
xchg
sub
dec
dec
inc
test
and
sub
or
inc
jns
scas
fimuls
or
sub
push
dec
or
mov
jb
sbb
mov
sbb
cmp
mov
cmpsl
mov
nop
mov
or
jne
sub
mov
ljmp
scas
rolb
inc
mov
mov
jecxz
sbb
scas
lret
cmc
xor
cmp
sahf
stc
shrb
repz
mov
inc
sub
clc
ror
test
add
xchg
sbb
push
mov
lods
sub
mov
into
test
lods
and
int3
mov
or
movsb
lret
add
mov
je
pop
adc
popf
ficompl
jl
xchg
mov
jle
addr16
test
mov
cwtl
adc
jne
xchg
lea
ret
fs
xorl
lock
xchg
inc
inc
ljmp
in
push
mov
movsb
mov
scas
test
cmp
or
pop
dec
lea
push
sahf
and
add
int3
icebp
cld
mov
outsb
dec
lahf
adc
stc
or
or
or
sbb
xchg
clc
mov
popf
adc
adc
lea
inc
cltd
scas
jmp
or
pop
push
mov
add
les
and
sahf
sti
pop
xor
outsb
pop
in
mov
sub
iret
cmpsl
aad
aaa
outsb
mov
clc
lea
jns
sbb
fsincos
movsl
std
das
inc
addb
add
scas
sbb
jbe
jg
mov
add
xor
mov
dec
pminub
xchg
inc
jb
es
call
jl
mov
cli
pop
jnp
out
mov
xor
not
in
imul
clc
and
cmp
lret
rcll
sbbb
cs
rorb
pop
lcall
sbb
jns
stc
inc
fsub
mov
aam
rclb
mov
cmpsb
dec
insl
add
cmpsl
sub
ret
lret
push
pop
sub
mov
xor
sarl
and
pop
xchg
pop
inc
cld
inc
in
inc
cmp
xchg
movl
sti
ljmp
es
addr16
fs
movsl
mov
mov
mov
mov
fnstsw
enter
inc
and
dec
out
pop
das
cmp
out
stc
cs
hlt
lock
and
add
cmp
loop
jecxz
loop
loop
dec
gs
les
repz
jmp
xor
inc
hlt
cmp
pop
subb
cmpl
insl
pushf
pusha
xchg
push
jl
jne
pusha
mov
or
cmp
xor
or
cltd
sub
cs
repz
in
insb
int3
mov
push
push
lret
lds
mov
mov
nop
mov
sub
pop
lret
scas
mov
xchg
xchg
testb
pop
je
fwait
jecxz
inc
xchg
mov
not
cmp
adc
pop
and
daa
inc
shll
pop
in
inc
bound
pop
cmp
push
loopne
push
lds
sbb
and
pop
fnsave
int
add
or
and
mov
std
ret
fidivrl
in
and
mov
mov
hlt
test
sub
out
pop
xor
mov
shrd
fnstenv
xor
in
pop
in
push
adc
pop
and
mov
ss
sarb
test
inc
leave
sub
ret
fistl
int3
mov
xor
fsubs
sub
and
cmpb
popa
aam
inc
scas
bound
loopne
sbb
xor
add
leave
sbb
xor
ret
test
cmpsb
cmp
mov
xchg
lods
inc
rcl
or
scas
aad
cmp
fnsave
cmovbe
into
je
and
fs
addr16
push
andb
fistps
jl
mov
push
inc
popa
dec
pushf
cli
sbb
pop
pop
push
inc
pop
aas
call
mov
jbe
repnz
test
pop
and
into
fsubs
orl
mov
icebp
pop
cmp
jno
shrl
and
jns
jb
mov
dec
fstl
repnz
xchg
cmpsl
dec
lock
shrl
lcall
sbb
ljmp
xor
sub
pop
mov
addr16
iret
les
and
insb
fidivs
and
pop
mov
dec
ret
mov
fucomi
cmpsl
lock
pop
jb
lret
pusha
std
daa
std
xchg
sub
xor
pop
jge
sahf
sbbb
test
cmp
insb
call
mov
aam
mov
or
jno
clc
xor
xchg
add
data16
sbbb
es
sbb
movsl
dec
mov
cmp
sahf
xor
inc
lahf
mov
sub
pop
inc
in
pop
out
sahf
lcall
push
and
ret
and
dec
cld
cmc
pop
ret
pop
stos
aam
cli
sub
add
and
pop
dec
mov
mov
xlat
add
inc
sbb
mov
jae
ret
pop
cli
add
bound
dec
lods
xor
pop
ret
or
cmp
jbe
stos
shll
adcb
mov
mov
add
rolb
and
pop
and
repnz
test
outsb
sub
mov
mov
jge
ret
dec
sbb
mov
aas
movl
mov
adc
xchg
mov
fbstp
cmp
ljmp
fisubs
pop
push
icebp
add
out
dec
push
push
dec
pop
aas
test
jnp
int3
xchg
loope
sub
cli
pushl
jmp
clc
subb
xor
sbb
js
or
out
mov
nop
daa
sub
popf
nop
xor
outsl
mov
insl
xor
ds
adc
inc
or
cltd
dec
cmpsb
scas
xlat
mov
rcr
lcall
push
xorb
cld
sbb
dec
test
je
sub
push
outsl
jno
mov
pop
mov
cli
pop
mov
pop
adc
test
dec
jecxz
xchg
clc
test
or
mov
mov
cwtl
push
cli
push
adc
stc
fisubrs
in
dec
imul
add
add
pop
or
cwtl
add
mov
nop
sbb
push
push
cmp
adc
pop
ljmp
mov
pop
jne
aad
push
fcoml
mov
mov
dec
nop
hlt
jmp
out
push
or
or
push
jne
jno
lret
int3
jo
push
xchg
nop
dec
scas
or
push
call
pop
pop
cmp
fbstp
or
jne
cmp
divl
push
das
in
repnz
jnp
and
xor
jge
sbb
cld
stos
out
rcr
es
sub
popa
repnz
jns
les
or
in
lahf
int3
subb
mov
xchg
mov
cwtl
popf
icebp
loop
nop
jle
mov
adc
cs
aad
jb
outsl
cmc
movb
or
in
scas
lds
imul
subl
push
daa
mov
xorb
out
hlt
push
pop
lock
add
movsl
pshufw
inc
add
notb
stos
ror
mov
int
mov
mov
je
dec
std
ret
jae
pusha
sub
sbb
cli
push
es
jae
mov
lds
fistpl
and
push
out
push
and
push
pop
pop
pop
cmp
xchg
arpl
ljmp
sub
popf
push
imul
ljmp
cmp
inc
je
scas
adc
jns
or
popf
xchg
dec
lahf
and
hlt
out
ret
jbe
das
ror
into
pop
push
push
rcrb
cmp
adcl
gs
jb
mov
cs
mov
sub
jae
sti
sbb
loope
pop
mov
xor
mov
or
fwait
push
push
mov
xor
or
das
fwait
mov
xchg
stos
loope
lsl
xor
mov
das
scas
shll
xor
pop
pop
in
pop
and
test
es
aaa
loope
jmp
mov
ljmp
pop
inc
adcl
aas
xor
sub
or
and
push
and
clc
ss
mov
inc
pop
mov
push
into
cmc
mov
xor
fimull
sbb
sub
mov
push
ficoml
shlb
cmp
lods
and
insl
fdivl
jecxz
fs
and
sahf
aad
pop
enter
mov
pfrcpit1
jnp
mov
cmc
xchg
lods
mov
pushf
inc
repz
data16
mov
das
mov
inc
cs
pop
add
push
icebp
out
mov
mov
xchg
adc
jno
ss
dec
push
jae
jae
add
lcall
pop
sub
in
jne
loopne
scas
mov
test
ljmp
lods
in
add
popa
cmp
add
add
push
in
cs
cmp
inc
shlb
fldl
dec
dec
lods
and
mov
jo
xchg
sub
scas
aam
xchg
adc
xchg
jle
addb
mov
inc
sub
test
outsl
fdivl
pop
outsb
fildl
push
inc
xchg
inc
ja
push
inc
cmp
insb
ret
xor
ds
push
out
js
andl
into
incb
ficoml
mov
neg
fs
aas
add
xchg
mov
or
pop
sub
mov
cmp
sbb
xor
dec
repnz
sub
pop
pop
cmpsl
inc
popa
add
rcr
insl
pop
cmp
mov
lahf
mov
sub
nop
xchg
rcl
adc
mov
jne
adc
outsb
dec
in
dec
lea
cld
mov
imul
outsl
adc
adc
push
add
sbbb
repnz
loopne
pop
jecxz
push
hlt
dec
pop
and
stos
pushf
jl
in
jae
stc
outsb
andl
mov
and
out
sarb
lods
jo
xchg
loope
roll
pop
rorb
push
or
jns
arpl
jae
mov
mov
leave
jae
test
push
lahf
add
lea
jl
adcb
adc
movsl
mov
mov
aas
ljmp
xor
lahf
add
cmp
dec
or
and
xchg
add
sti
ftst
in
bound
dec
fimull
in
sub
ljmp
pop
sub
push
inc
jb
push
jmp
add
xchg
add
int
jns
les
inc
mov
lret
lods
mov
xchg
xchg
fldenv
std
add
mov
aas
sbb
hlt
mov
sub
sub
fistps
mov
popa
test
imul
imul
popf
cmp
or
mov
jp
mov
add
cs
fldpi
mov
sahf
fnstenv
into
mov
cmpsl
cmp
mov
pop
pop
fnstcw
mov
push
shl
arpl
add
fxch
push
xchg
outsl
push
call
mov
cmp
mov
pop
movsb
or
repnz
sub
and
ljmp
cmp
adc
jne
fcomp
mov
mov
imul
jg
mov
adc
and
loope
add
imul
dec
sub
js
incl
mov
movsl
les
sti
push
jmp
cmpsb
inc
enter
nop
lahf
out
test
jae
ds
sahf
dec
xchg
sub
xor
shl
frstor
out
dec
xor
mov
rolb
and
mov
cmp
gs
xor
sub
std
into
stos
xchg
mov
cmp
fwait
mov
add
dec
mov
add
pop
adc
and
dec
sub
push
xor
lods
loop
jmp
jl
sub
das
addr16
mov
mov
and
cli
lock
ficompl
test
jo
inc
ret
std
in
mov
adc
lcall
push
mov
je
or
inc
repnz
leave
inc
lods
data16
jb
cmp
jge
or
sub
aad
mov
popa
push
add
xchg
lahf
pop
push
xor
les
and
imull
out
enter
adc
inc
lahf
out
in
sub
adc
pop
movsb
jmp
add
outsl
stos
les
mov
adc
js
add
fwait
pop
push
roll
sub
jg
insl
push
inc
sbb
xchg
pop
pop
sub
fs
add
in
xor
mulb
fiadds
fstpt
jmp
push
rorl
mov
pop
daa
cs
pop
loopne
adc
mov
or
cmp
push
push
sub
mov
mov
ss
pop
sub
sbb
popa
fnsave
sbb
movsl
shll
push
divl
mov
adc
sbb
or
jl
divl
int
sti
cmpsl
and
rcr
xchg
sarb
or
fs
fistpl
ds
rcrb
sbb
jge
sahf
movsl
mov
mov
cwtl
mov
pusha
das
xor
mov
cmp
sub
mov
in
sbb
loop
add
xchg
loopne
lret
popf
test
mov
inc
test
imul
clc
xor
das
jno
leave
call
cmpsl
pushf
lahf
mov
push
mov
mov
xchg
cmpsb
xor
push
movsb
rorl
mov
int3
sbb
add
cmp
add
and
stc
insl
adc
in
xor
pop
sub
adcl
icebp
jp
sti
sub
mov
mov
jmp
inc
fstpt
repnz
dec
xor
sbb
add
aas
ss
xor
mov
add
repnz
pop
fdivr
cmc
sub
jns
pop
adc
xor
rorb
test
and
mov
xlat
negl
xchg
adcl
sub
mov
dec
inc
push
imul
pop
das
adc
xchg
sub
add
incl
or
xchg
insl
mov
or
cmpsl
xor
cltd
scas
call
pop
xchg
movsb
mov
mov
test
stc
jne
inc
add
xchg
or
roll
adc
xor
pop
mov
push
sbb
notl
inc
pop
repz
mov
fsub
cli
and
push
xchg
scas
lea
inc
loopne
or
cmp
aam
xor
sbb
lods
ss
jl
lds
sahf
inc
xor
enter
or
or
aas
mov
cmp
std
gs
and
or
or
int3
es
xor
aaa
scas
sbb
dec
shlb
aaa
xlat
ja
pop
lcall
xlat
cli
hlt
jmp
mov
stos
cltd
mov
sub
pop
mov
pop
js
push
std
inc
lret
cmp
or
arpl
fwait
add
push
xor
fisubrs
arpl
xchg
shrl
mov
movsb
in
inc
loope
pop
xorl
mov
imul
gs
cmp
in
push
filds
dec
popa
cmp
sub
pop
lea
call
push
jle
or
in
rep
ret
inc
lock
ret
clc
mov
add
mov
pop
xchg
int3
lods
cmp
or
sub
clc
in
mov
pop
inc
jne
fsubrl
insl
or
xor
test
push
xor
dec
inc
popf
fldcw
cmp
jle
outsl
inc
mov
fstl
push
xchg
scas
cmp
lds
dec
adc
fisttpll
jae
cmpsb
and
bound
andb
shrb
sbb
loop
negb
mov
imulb
sub
jbe
mov
pusha
mov
xlat
pushf
loopne
es
push
lahf
pop
lea
mov
or
jbe
mov
mov
push
ljmp
rcrb
sub
pushf
and
and
xchg
dec
test
mov
test
aas
cmp
dec
and
xchg
mov
imul
xlat
jle
shll
mov
push
push
pop
mov
push
ja
lock
lds
sbbb
and
imul
test
pop
and
inc
push
pop
mov
flds
scas
adc
fadds
push
sbb
push
dec
mov
test
jmp
xchg
push
mov
fistpl
xlat
xor
fnsave
in
es
shrb
roll
les
jne
in
cmp
fwait
sub
sub
jnp
or
sbb
aam
pop
inc
mov
fstl
or
jne
mov
push
in
mov
jnp
add
pop
mov
aas
mov
xchg
stos
out
enter
xor
pop
ret
sbb
inc
outsl
movsl
inc
scas
lret
xor
and
or
out
cmpsb
clc
fstpl
dec
fisttpl
int3
lds
pop
out
push
jns
fsub
outsb
mov
pop
in
into
push
iret
lahf
cmp
jne
jge
push
in
hlt
test
xchg
fs
jg
sub
jge
cltd
add
dec
pop
lds
sbb
mov
lret
loopne
sub
fucomi
push
jne
int3
movsl
ret
in
inc
mov
in
push
and
cmp
mov
mov
in
in
mov
in
ljmp
and
popf
pop
sub
push
hlt
push
mov
and
xor
push
add
xchg
in
ss
mov
mov
xchg
insb
fsubr
in
xchg
aad
fisubrl
arpl
leave
fildll
fdivrs
cmp
insl
mov
ljmp
ljmp
jns
dec
push
inc
push
pop
add
mov
xchg
in
leave
iret
aad
cwtl
int
inc
xchg
adc
je
and
bound
lds
test
push
jbe
add
push
pop
ljmp
pusha
pop
test
inc
jo
pop
inc
dec
and
mov
jns
sub
mov
rcrb
shl
pop
out
mov
fiadds
push
test
push
adc
inc
xchg
sbb
sub
fwait
loop
fildl
mov
pop
jle
mov
push
ljmp
pop
enter
repnz
mov
pop
fidivrs
sub
xchg
xchg
adc
adc
enter
lods
or
lahf
cmp
mov
jp
pop
in
leave
lret
jb
cmp
decl
lds
dec
mov
ss
push
in
mov
push
lock
or
lahf
cwtl
xorb
out
rclb
iret
inc
sbb
inc
popf
mov
jl
in
jo
in
bound
int3
adc
push
aaa
or
popl
cmp
sbb
call
enter
int
repz
idivb
xchg
dec
pop
adc
lds
insb
jne
nop
addb
popf
nop
call
add
xchg
sbb
and
mov
and
es
mov
loope
push
ja
js
mov
loope
sub
sti
mov
jb
pop
call
sbb
push
push
gs
test
jge
mov
adc
dec
fists
ret
mov
sbb
ss
das
sarl
xchg
pop
xchg
movb
mov
dec
in
jl
gs
or
sbb
or
mov
xchg
call
or
mov
adc
add
dec
clc
cli
daa
orl
in
fiadds
into
je
out
sbb
push
cwtl
or
outsb
rcl
dec
repz
mov
cmp
ljmp
cmpb
xor
ss
pop
scas
mov
add
inc
rcll
fisubrs
push
pop
mov
in
fmulp
sbb
iret
mov
xor
lret
xchg
repz
stos
fs
adc
adcl
jmp
inc
pop
jmp
jno
cmp
leave
cld
and
dec
out
dec
inc
mov
mov
cmp
data16
nop
xchg
or
imul
fnstcw
cmp
insl
or
lret
jge
sub
and
out
dec
ja
inc
xchg
mov
add
in
cmc
pop
divl
repz
bndldx
mov
lret
adc
lret
mov
aaa
dec
pop
push
cmpsl
mov
or
cmp
out
popa
jle
fsubrl
xchg
inc
leave
bound
dec
mov
aas
addr16
inc
bound
jmp
sub
mov
test
in
jmp
adcb
mov
test
enter
cmc
mov
sub
xchg
xor
mov
jmp
push
and
inc
je
push
scas
and
adc
scas
sub
jo
repnz
pushf
jb
hlt
js
notl
push
jecxz
inc
push
add
inc
fsubs
mov
in
movsl
jp
xchg
jmp
and
int
out
dec
lock
pushf
stos
lret
sub
test
pop
into
int
inc
les
fsubrl
sbb
push
cmpsl
inc
sar
shl
loope
pop
add
mov
cmp
ret
fmuls
popf
cltd
xchg
in
pop
inc
mov
pop
ret
adc
xchg
pop
push
ficompl
push
mov
lods
popf
test
add
das
pusha
scas
pop
into
cs
pushf
out
dec
adc
and
das
jp
xchg
push
sub
push
sbb
and
xlat
xor
int3
xchg
cmp
fidivs
sbbb
push
mov
imul
test
adc
and
mov
ja
pop
mov
cmc
mov
push
xchg
scas
inc
mov
jle
push
jae
sub
imul
enter
std
and
and
jne
scas
lea
pusha
stos
xchg
insl
mov
mov
xor
and
lds
repz
loop
in
mov
adc
fadd
adc
in
dec
lcall
dec
jge
lods
mov
inc
sub
jle
dec
scas
xchg
xchg
pop
push
xor
out
or
clc
sbbb
aas
sub
and
cmp
data16
sbb
adc
in
mov
adc
pushf
mov
iret
pop
inc
out
push
mov
mov
jno
fstl
xchg
adc
mov
les
dec
stos
mov
lds
xchg
push
jg
fwait
pop
in
iret
scas
push
inc
pop
in
push
out
or
mov
sub
imul
stos
pop
push
test
clc
mov
mov
pop
push
jmp
push
cmp
lods
sub
mov
adc
push
pop
pop
add
stc
cmp
sbb
cli
sbb
cmp
push
jg
sbb
adc
add
xchg
loopne
sbbb
mov
dec
mov
dec
insb
lds
push
cld
mov
cltd
mov
mov
push
enter
mov
push
js
aad
mov
jp
pop
pop
lds
push
mulb
clc
push
xchg
xchg
push
cmc
push
movb
mov
mov
dec
add
insl
scas
divl
xchg
add
add
dec
xchg
repnz
inc
cmp
jne
mov
aam
inc
inc
in
xlat
loope
gs
sbb
daa
push
inc
adc
cmpsl
sub
into
or
lods
add
sahf
stos
add
inc
insl
leave
dec
mov
mov
lret
pop
pusha
addb
mov
sub
repnz
and
pop
arpl
test
or
hlt
xor
dec
rcl
aam
in
mov
add
mov
cltd
cmpsb
xor
pop
mov
cli
inc
iret
push
out
xchg
sbb
sub
roll
fbstp
pusha
dec
stos
push
cmp
and
int3
cmp
mov
outsl
push
dec
sbb
dec
pop
aaa
in
std
aaa
stc
insb
ficomps
fxtract
faddl
mov
cs
sub
sub
mov
mov
sbb
or
lret
mov
in
test
jbe
sub
jle
and
or
nop
sbb
out
rorl
xor
sbb
lahf
dec
sarb
cltd
pop
inc
mov
inc
lds
lock
dec
rol
push
lret
cwtl
jle
pushf
and
out
stc
jo
bound
xchg
inc
push
aam
cmp
rolb
clc
mov
mov
or
mov
jno
pushf
addl
popa
movsl
mov
or
add
cmp
lods
rol
pop
mov
mov
aaa
mov
mov
push
iret
leave
xor
inc
jl
cltd
cmpsb
into
mov
mov
inc
imul
add
loope
roll
add
icebp
jp
fstpl
dec
rcr
fwait
and
js
repz
ret
and
aas
push
in
mov
xor
cmc
push
pop
xor
sub
push
mov
mov
fiaddl
cmp
sub
rcrb
sub
jo
mov
and
mov
enter
mov
push
fisttpl
lret
jne
icebp
sbb
mov
ret
mov
std
es
mov
js
sbb
mov
or
sub
add
addb
mov
mov
in
clc
movsl
add
jno
daa
aas
mov
dec
mov
xchg
xchg
xchg
je
lret
mov
mov
mov
imul
mov
push
cs
test
leave
nop
and
aam
push
dec
outsl
xor
sbb
inc
mov
pop
sahf
icebp
nop
ds
scas
ret
and
arpl
jg
or
aaa
sub
cmpb
into
lock
push
or
js
mov
in
inc
loop
inc
repz
ror
lahf
add
lcall
jle
sub
gs
jne
jmp
cltd
adc
add
xchg
outsl
xor
insb
inc
out
in
popa
sti
mov
dec
pop
mov
mov
test
dec
inc
push
ss
lret
inc
push
xchg
xchg
pop
je
and
mov
std
outsl
jp
jns
ljmp
pop
mov
jp
push
inc
fld
adc
jae
cmc
mov
or
test
js
mov
inc
pop
ljmp
jle
lret
mov
jmp
fadd
cld
dec
int3
loope
scas
loop
xor
ja
sti
les
push
mov
inc
ret
sub
lahf
sbb
sbb
adc
inc
mov
fcoms
lea
aaa
jmp
mov
loope
gs
push
cwtl
jns
pop
xor
inc
and
mov
stos
orl
nop
aad
jg
jmp
mov
cltd
sarb
ret
mov
js
test
lcall
and
cmp
leave
lret
addl
inc
dec
je
xor
outsb
out
add
mov
and
push
cmp
aaa
cmpsl
lods
loop
sbb
mov
sbb
sbb
mov
ss
and
mov
and
adc
jmp
aad
adc
adc
lds
mov
sahf
xchg
stos
add
adc
in
push
dec
xor
aam
arpl
in
jl
jle
inc
cs
mov
xchg
mov
jne
aaa
stos
lcall
inc
dec
testb
pop
mov
sub
call
cmp
es
xchg
es
pop
clc
enter
addr16
popf
push
notb
pop
insb
dec
mov
lret
jle
adcb
jo
mov
popa
or
fisttps
mov
mov
and
test
nop
xor
andl
or
imul
je
fisubs
cmp
lea
fcmovne
mov
fwait
dec
es
cmp
mov
pop
sub
or
insb
jge
lock
mov
pusha
insl
lcall
scas
mov
aam
xchg
loopne
mov
push
movsl
out
pop
std
jbe
mov
jle
and
mov
pcmpgtb
cmp
clc
xor
jp
or
xor
fisubs
stc
mov
or
adc
cmpb
jg
pop
sahf
xor
mov
pop
out
loopne
unpckhps
stc
decl
sarb
add
dec
xchg
pop
inc
xchg
add
idivb
xchg
enter
out
push
cmp
mov
mov
jp,pn
adc
cmp
in
mov
fnstenv
scas
sti
cmp
pop
sahf
jns
aaa
nopl
sub
xchg
inc
pop
pop
in
cmpsb
push
stc
inc
dec
popa
sub
jbe
js
dec
mov
mov
fiaddl
data16
push
ja
mov
fildl
inc
aam
test
dec
insl
stos
in
jbe
psrlw
push
daa
shlb
decb
je
jg
dec
es
jae
jecxz
mov
outsl
inc
cmpsl
inc
and
and
test
imul
xor
outsb
stc
in
mov
rcrb
jmp
and
xchg
cld
lcall
sub
mov
pop
imul
out
scas
dec
adc
dec
jmp
xchg
add
ss
mov
lea
cmpsl
dec
pop
mov
mov
cmc
mov
push
lods
xchg
xchg
dec
jne
xor
pop
pop
das
mov
nop
cltd
mov
xor
pop
sub
or
push
ss
clc
stos
jecxz
push
xor
push
mov
and
sti
adc
and
popf
pop
popl
mov
pop
jle
mov
mov
push
lahf
add
dec
or
loopne
mov
sub
lds
ljmp
sti
mov
outsb
mov
sbb
mov
jmp
add
adc
mov
dec
pop
adc
xchg
jle
ljmp
lods
jo
test
push
mov
fcoms
aas
popa
int
and
loop
lret
jg
and
inc
lea
lea
fidivl
pop
mov
or
leave
mov
mov
sbb
cltd
incl
jae
cld
addr16
rorb
or
in
in
ror
cmpsb
pop
scas
jl
loopne
je
scas
adc
sub
adc
insl
cmp
mov
add
lock
stc
jl
push
in
cmpsb
and
or
movsb
jbe
pand
imul
sar
mov
add
mov
popa
mov
lock
mov
jne
movb
es
outsb
jne
cmp
jnp
jae
sbb
or
jp
push
push
mov
dec
or
push
xchg
jmp
mov
pushf
jne
jp
in
lahf
aas
scas
dec
sbb
pop
scas
movsb
shlb
lcall
and
ret
testl
pop
mov
xor
jmp
arpl
sub
inc
nop
xchg
movsl
pop
stos
call
insl
cmp
imul
stc
and
xchg
dec
jp
sub
xchg
fisttpl
xchg
ds
jmp
or
lea
test
lcall
int3
xor
mov
rclb
pop
mov
jns
jb
das
stos
scas
sbb
inc
rcrb
in
cmpsb
lods
xlat
xchg
les
popf
and
mov
inc
jmp
mov
jb
mov
pop
mov
outsl
sti
mov
push
lcall
push
aaa
dec
pop
and
andb
dec
pushf
stos
mov
stos
scas
inc
add
adc
cli
in
xor
jge
sub
imul
pop
movsb
pop
fmuls
mov
inc
les
adc
cmp
xchg
int3
mov
add
xchg
and
sbb
or
out
mov
aaa
js
xor
sub
mov
mov
push
jns
lahf
ret
or
hlt
and
mov
xchg
xlat
push
jmp
clc
cmp
ss
popf
sbb
mov
or
addr16
dec
inc
push
mov
push
mov
ja
cs
xchg
mov
in
xlat
js
cmc
daa
mov
loopne
xlat
cmpsb
sub
test
mov
lcall
cmp
testb
sbb
mov
movsl
xchg
in
mov
lret
and
out
adc
mov
ds
movsl
dec
sbb
dec
xchg
pop
dec
sub
dec
insl
mov
cmp
imull
push
int3
cli
lret
dec
and
or
mov
jl
sbb
or
mov
repnz
fmuls
popa
enter
mov
fiaddl
popf
fisttpll
lock
jge
movsb
add
nop
inc
inc
lods
xor
addr16
das
xor
pop
roll
mov
dec
push
insl
loop
adc
pop
inc
std
cmpsb
lahf
fnstcw
mov
sahf
add
push
les
pop
mov
insl
out
mov
mov
arpl
push
js
jle
xchg
sbb
lcall
loopne
out
mov
push
xor
outsl
loop
adc
jb
cltd
lcall
mov
hlt
mov
sbb
adc
cmc
ret
xor
mov
add
xor
fdivs
sub
jno
jo
cwtl
fsubrl
outsl
inc
mov
mov
cmpsb
cli
and
xor
xorb
dec
or
call
leave
mov
movsl
mov
mov
jg
movsb
xor
inc
andb
xchg
jg
movsb
xchg
sti
sbb
mov
pop
mov
enter
xchg
insl
idivl
ret
lea
or
jge
inc
subl
or
and
adc
jecxz
les
push
test
ja
adc
and
outsl
adc
mov
sub
cltd
xchg
pop
mov
fcmove
lea
movsb
sub
leave
insb
stc
and
loope
fimull
inc
out
testb
insl
outsl
inc
dec
jae
insl
mov
push
sub
sbb
and
mov
push
insl
jp
not
repz
cmc
cltd
outsl
mov
fisttpl
push
jp
xor
sbb
inc
ret
inc
or
dec
sub
cmp
popf
je
xlat
jne
adc
das
sub
dec
mov
push
clc
add
ljmp
jb
pop
sub
loop
int3
push
std
cmp
sub
sub
dec
push
pushf
pop
pop
jmp
fldcw
adc
mov
or
cmp
pop
mov
lods
mov
lahf
xchg
pop
dec
out
pusha
shll
sahf
inc
xchg
sbb
adc
ror
std
xchg
xchg
hlt
adc
arpl
cmp
add
icebp
popf
jp
rorl
push
inc
pop
pop
dec
mov
adc
les
fs
inc
mul
sub
jno
or
mov
je
sbb
mov
lds
jl
fwait
lods
add
pop
mov
mov
add
jo
push
xchg
push
pop
ljmp
pop
sub
stc
and
jp
push
xchg
stos
mov
int
fcoms
hlt
cmp
pop
fsin
mov
sub
and
lret
cmp
lea
lods
std
test
outsb
jb
aaa
pop
or
daa
xor
mov
add
mov
cmp
sbb
jo
std
pop
dec
pushf
test
addr16
scas
sbb
les
negb
or
ljmp
mov
roll
out
aas
sbb
add
xor
test
sbb
lea
out
stos
lret
and
sub
mov
nop
push
mov
out
cmpsb
and
stc
pop
roll
mov
inc
dec
addr16
pop
dec
mov
push
popf
sub
push
and
or
inc
pop
arpl
dec
dec
or
xlat
inc
sub
dec
or
jl
lods
cs
loopne
jp
push
loopne
sub
stc
into
jge
sub
fs
inc
clc
in
cmc
cmp
lds
sub
mov
push
lods
dec
test
jnp
jmp
push
addl
push
mov
mov
repnz
push
pop
fdivrl
xchg
cs
addr16
test
ljmp
mov
ret
popa
js
or
and
icebp
mov
cwtl
iret
push
push
int3
test
or
adc
sbb
in
mov
jnp
or
push
aas
push
mov
sub
lock
lods
push
aaa
jmp
or
jmp
jl
cmp
into
lahf
pop
cmp
xchg
lock
imul
push
ror
xor
or
sarb
mov
pop
mov
and
es
cmc
inc
std
les
add
fnstcw
pop
ja
mov
adc
mov
mov
push
mov
xor
addr16
pop
cli
adc
mov
insb
or
scas
lods
adc
inc
dec
cmc
inc
cli
pop
enter
mov
or
sbb
pop
jo
movsb
mov
test
cmp
int
je
push
lret
mov
jge
dec
jle
xchg
out
xor
cld
mov
pop
lock
push
cmp
js
xor
mov
sub
jle
pop
aam
adc
aam
loop
dec
loop
push
mov
or
lcall
in
idivl
xor
push
ljmp
fistpl
hlt
dec
mov
mov
mov
loop
jmp
cwtl
imul
xor
iret
js
scas
fimuls
or
popf
insb
dec
imul
or
cwtl
jb
add
dec
sti
pushf
add
in
push
push
lods
in
loopne
sbb
gs
push
push
sbb
lds
inc
jo
ror
mov
lahf
push
popa
pop
jge
pop
jno
sub
lcall
fs
mov
jg
xchg
js
lret
sti
lea
push
dec
or
jno
jns
push
repz
fisttps
push
mov
sbbb
add
andb
mov
add
fisubs
pop
mov
or
cmp
jns
cmpsb
sbb
sbb
mov
add
pop
xlat
stos
inc
mov
adc
mov
sub
pop
scas
addr16
xor
lods
imul
das
sbb
push
sbb
icebp
subb
sbb
iret
fs
loop
ret
fstl
mov
test
fldl
pop
pop
sub
out
pop
dec
daa
ja
jmp
fcoms
fs
loopne
es
loopne
add
mov
inc
pop
loop
in
in
iret
roll
div
jo
ret
iret
das
test
push
mov
jo
popa
xchg
iret
mov
lahf
cmp
mov
sbb
stos
std
xchg
and
loopne
mov
xor
insb
and
xchg
in
or
bound
inc
mov
enter
mov
xchg
cmp
cmpsl
xchg
mov
push
inc
aad
dec
out
jp
lea
enter
adc
mov
data16
fwait
xchg
fs
cmp
xor
jb
push
xchg
test
movsb
fld
dec
mov
and
movsl
fsts
pushf
cmpsb
inc
ds
int3
jmp
aad
daa
inc
icebp
jp
mov
add
mov
sahf
xchg
repnz
int
mov
xchg
enter
jle
int
hlt
mov
stos
ss
jge
xchg
mov
sahf
out
popf
fiadds
daa
xchg
pop
aas
fldt
popf
cmp
mov
enter
jbe
xchg
pop
loope
mov
out
into
insl
dec
rclb
outsl
jg
xor
outsl
in
sti
mov
sbb
jbe
inc
or
cmc
das
xor
in
ret
push
sub
jp
mov
cmpb
loope
push
lret
ret
mov
push
sub
jnp
cwtl
mov
loop
add
outsl
mov
xor
pop
dec
cmc
mov
mov
ljmp
xor
int3
mov
insl
test
add
xor
and
mov
xor
mov
pop
add
into
rorl
test
sub
and
pop
mov
stos
les
pop
jne
and
pop
fs
mov
jbe
pop
cmp
mov
lret
mov
push
add
jmp
mov
sub
les
insb
out
std
bound
push
test
add
cli
sbb
ss
movsl
mov
sbb
mov
pop
mov
xchg
xchg
mov
and
in
mov
aam
iret
int3
xchg
or
daa
mov
rolb
cmp
cmp
lahf
rol
mov
sbb
sti
inc
or
andl
cmp
iret
xor
imul
jp
inc
adc
test
outsl
bound
mov
rorb
int
inc
mov
addl
push
mov
jecxz
inc
leave
mov
cmp
ss
add
dec
mov
cmpsb
push
inc
test
insb
js
adc
xchg
leave
aas
lock
add
test
adc
out
ds
test
xor
jae
sbb
sahf
cmc
add
and
dec
xchg
jb
jl
loop
es
and
jo
cwtl
dec
mov
sbb
add
mov
jnp
inc
cmp
pop
jg
js
out
or
call
shlb
pop
ds
out
ja
out
inc
ret
cmpsl
loop
sub
ljmp
xchg
pop
cmc
jns
mov
mov
sub
sub
icebp
dec
cmpl
test
inc
jecxz
xchg
mov
inc
or
inc
in
jmp
xor
lods
andb
adc
mov
mov
bound
adc
xor
fucomp
inc
insl
clc
jo
pop
push
cltd
jo
jns
inc
jnp
jp
aas
pop
push
mov
or
fldt
adc
inc
xor
push
fsubrs
xchg
or
adc
jnp
jo
std
jns
inc
xchg
cltd
push
mov
out
dec
mov
loopne
lock
mov
je
movsl
add
mov
and
xchg
cmpsl
jecxz
repnz
mov
add
jecxz
fstpl
sbb
push
stc
mov
in
pusha
jno
pop
lds
sbbb
test
stc
iret
sub
adc
in
mov
mov
and
iret
ljmp
in
lret
inc
daa
std
data16
popa
mov
mov
pop
dec
inc
cmpsb
lds
or
sbb
test
dec
and
push
out
lea
mov
jae
inc
subl
lods
lahf
inc
inc
dec
adc
mov
iret
mov
loopne
cltd
dec
pop
lea
xor
inc
std
ds
idivb
cmp
push
insb
imulb
rclb
arpl
pop
test
fwait
bsf
cs
mov
mov
adc
adc
pop
sar
mov
sahf
sti
mov
jns
imulb
sbb
sbb
mov
in
sar
cmpsl
repnz
pop
jmp
lcall
in
pop
adc
adc
mov
jb
clc
jae
mov
inc
xchg
sbb
xor
icebp
xor
filds
inc
inc
push
pusha
push
inc
scas
cmp
add
push
lds
scas
xchg
rorb
pop
mov
sbb
fists
jne
icebp
sbb
dec
adc
fimull
add
cmp
mov
sub
or
lock
cmp
enter
je
lods
pop
and
adc
aam
lcall
push
mov
scas
imul
jecxz
mov
adc
lret
insl
inc
clc
push
stos
jp
inc
mov
push
or
test
lcall
mov
subb
jb
test
pop
out
popf
pop
out
lods
add
enter
add
xor
jns
or
mov
cmp
les
fdivl
inc
lcall
test
rcll
das
push
rcrb
out
das
fbld
sti
lret
mov
jle
fnstsw
sbb
imul
das
shlb
pop
mov
xchg
push
cld
mov
xchg
sbb
xor
into
jb
mov
fadds
push
ret
push
pop
cli
gs
and
mov
je
icebp
add
repnz
sbb
cmpsb
fdivs
adc
xor
jle
je
mov
out
ljmp
outsl
addr16
jnp
and
idivb
cmp
das
jmp
test
cmc
mov
aas
lret
xchg
adc
sbb
pop
in
or
pushf
scas
outsl
cmp
imul
negl
or
xchg
aas
out
mov
test
mov
push
adc
or
dec
jecxz
loop
mov
jp
xor
mov
mov
mov
inc
and
cs
test
or
add
push
cmp
lahf
pop
cmp
fbstp
in
and
iret
adc
jne
insb
ss
addr16
inc
mov
mov
lea
pop
jg
jnp
push
jb
mov
adc
roll
jb
xchg
movntq
out
in
jmp
clc
iret
ds
hlt
cmp
jle
mov
and
bound
out
xor
jne
mov
add
sbb
and
inc
ds
lret
adc
in
repz
iret
fimuls
subb
scas
rcll
fpatan
xor
mov
ficomps
lahf
mov
push
fs
xor
shl
dec
enter
jmp
pop
sbb
divb
adc
and
pop
lret
mov
popa
mov
pop
mov
sbb
dec
push
jo
add
add
insl
push
in
mov
dec
xor
mov
ds
or
fldl
mov
and
fimuls
adc
xor
test
loop
ljmp
notl
lret
int3
fcoml
repz
fildll
push
dec
out
clc
das
sbb
fwait
or
icebp
sub
adc
js
add
xchg
sbb
popf
pop
insb
nop
cld
movl
mov
or
fcomip
push
jge
clc
repz
mov
xchg
cmp
and
aaa
or
sbb
push
jmp
js
inc
xchg
jp
xchg
addr16
dec
orb
cmp
jb
movsl
cmp
sub
sbb
jmp
push
pop
xor
fsts
pop
mov
ret
xchg
add
scas
test
cmp
push
aas
dec
mov
jg
or
inc
mov
mov
add
lcall
testl
fnstcw
pop
cmp
movsb
xchg
sub
inc
fists
popf
jmp
std
ljmp
pop
pop
lret
lea
ljmp
flds
cmp
rorb
cmpsl
divl
add
sbb
leave
aad
xchg
mov
adc
sub
jo
dec
or
push
dec
sar
stc
ljmp
xor
shrb
shl
out
inc
pop
xor
dec
adc
add
movnti
or
stos
pop
or
inc
inc
mov
jno
and
hlt
mov
mov
push
fmulp
loope
inc
pop
adc
jae
shlb
push
aam
movzwl
adc
mov
xchg
incb
mov
mov
roll
sbb
mov
test
sbb
adc
or
nop
jae
leave
std
rclb
lret
repnz
mov
jl
call
jo
or
mov
andl
inc
mov
nop
push
ret
ret
ret
jmp
add
jb
jns
daa
movsb
fdivrs
rorb
dec
in
add
ljmp
jns
mov
pop
inc
xor
in
fs
scas
mov
mov
ret
ss
bound
aaa
je
jmp
ds
cmp
clc
sbb
add
dec
bound
sahf
fs
and
jbe
sti
call
and
sbb
jne
and
mov
loope
fwait
mov
and
adc
inc
inc
mov
jle
aaa
test
inc
bound
fwait
sbbb
out
jnp
mov
pop
in
pusha
jno
and
addr16
mov
adc
xchg
movsb
jp
les
daa
push
mov
jmp
push
and
pop
xchg
stos
repnz
data16
lea
xor
inc
xor
test
mov
cs
sbb
icebp
ret
or
cld
mov
cmc
adcb
pop
mov
xor
les
pop
loope
add
hlt
mov
bound
sub
jne
imul
pop
mov
cli
loopne
cmpsl
je
mov
mov
pushf
lcall
je
pusha
push
sbb
or
jns
or
sub
lret
jno
data16
push
pop
shrl
xchg
sbbb
ret
sar
pop
xchg
popa
mov
cmpsl
rorl
adcb
xor
sub
pop
and
mov
adc
out
loopne
cmpl
into
enter
jno
jnp
jl
mov
mov
mov
leave
adc
outsb
enter
mov
push
das
jno
scas
mov
sarl
cs
daa
inc
and
sbb
popa
mov
sahf
mov
aam
sahf
sti
mov
insb
push
fsubl
inc
fiaddl
lcall
mov
mov
test
in
cs
push
pop
scas
aad
jl
inc
je
pop
sub
inc
lret
sub
mov
push
lods
jecxz
test
adc
imul
sub
cmp
repnz
shll
mov
push
cld
xor
orb
inc
bound
jne
nop
xor
pushf
add
shrl
sub
pushf
jbe
mov
mov
arpl
mov
cmp
pop
inc
sub
popa
and
cs
popf
adc
jecxz
pop
and
mov
fnsave
or
fistps
sub
or
dec
pop
mov
in
out
add
int
pusha
or
lahf
mov
inc
inc
sbb
xor
xor
ret
push
xchg
cltd
imul
add
sub
hlt
xchg
mov
sub
push
sub
and
or
andl
cmp
adc
es
push
fbld
mov
sbb
lds
jnp
mov
shrb
or
sarl
inc
cmc
hlt
inc
sub
xor
flds
mov
cltd
or
scas
test
jb
mov
adc
pop
imul
push
mov
jno
out
pusha
lahf
mov
nop
lods
xchg
dec
stos
mov
or
sbb
das
adc
jmp
ds
xor
shll
ljmp
shlb
les
rcll
cmp
dec
aas
xchg
scas
mov
ds
icebp
xchg
lret
das
ret
in
movsl
pop
stos
pop
stos
popa
xchg
sub
mov
faddl
ljmp
push
jle
lret
xorb
je
int
cmp
sub
cmp
mov
idivl
ss
adc
or
fldcw
or
xchg
repz
cmp
jmp
push
mov
mov
push
inc
lret
in
or
dec
sub
jl
mov
jge
sub
sti
outsb
sub
repz
and
xor
xchg
push
sbb
push
or
xchg
or
loopne
lods
test
stos
mov
dec
mov
shrb
es
pop
xchg
adc
iret
flds
int3
dec
cmp
sbb
push
mov
xchg
cmpsb
stos
or
mov
ss
or
es
icebp
aam
dec
jmp
dec
je
xor
jle
ja
sbb
or
hlt
mov
sbb
notl
adc
jge
mov
jl
cmc
jne
outsb
or
jae
push
out
push
sub
dec
unpckhps
xor
call
sub
pop
adc
push
adc
pop
jb
adc
loope
insl
imul
cld
or
lods
and
jle
sub
push
nop
sub
movsl
xchg
sbb
pop
xchg
dec
data16
mov
add
inc
sbb
adc
pop
inc
bound
dec
lret
cmpsb
fildl
push
test
sbb
pop
push
outsl
cmp
fnsave
movl
pop
aad
cmp
ret
dec
mov
mov
sub
inc
or
pop
loopne
inc
out
je
jno
mov
dec
and
push
dec
dec
push
ljmp
or
or
outsb
sbb
in
jns
jge
xchg
xchg
or
and
mov
sbbb
ss
lea
xor
dec
bnd
jmp
add
push
and
in
insl
push
scas
pop
dec
mov
cmp
dec
dec
mov
mov
sub
rorl
mov
out
push
lods
sub
pop
lcall
or
enter
jo
aas
subb
insb
cmp
aaa
push
push
pop
mov
mov
arpl
lock
mov
push
pop
mov
dec
xchg
dec
divl
rep
fcomip
test
cmp
xlat
adc
pop
add
addb
cwtl
out
fnstcw
out
cld
aaa
mov
fnsave
add
les
mov
aas
cs
or
sbb
in
push
mov
jb
dec
clc
push
push
outsb
enter
mov
or
or
fisttpll
fwait
mov
lds
test
or
in
pop
cmp
out
xchg
aad
popa
cmpsb
movsb
inc
sub
addr16
or
sub
mov
mov
xlat
inc
test
jg
ja
aas
xchg
add
inc
lds
movsl
pop
pop
sub
push
pop
xor
loope
add
in
sub
pushf
std
mov
push
jmp
stos
rcrl
mov
mov
pop
pop
pop
fcomps
outsl
mov
in
mov
loope
scas
repz
ss
sbb
cmpsl
ljmp
cmp
adc
aam
es
push
cmp
jns
fsts
add
jae
int
es
cltd
push
lahf
sub
in
popa
pop
add
fidivl
cmpsl
movsb
sbb
and
stos
sti
add
jae
pop
dec
cmpsl
in
icebp
jmp
mov
lahf
mov
test
cli
adc
or
sub
inc
js
call
xchg
adc
fildl
scas
ljmp
jns
int3
out
push
int3
stos
outsb
insb
sti
xor
cmp
push
xor
iret
add
pop
cli
ss
out
stos
sub
mov
lea
inc
fwait
mov
add
pop
jb
and
cmp
mov
inc
insl
mov
nop
push
add
loop
rclb
jno
fistps
les
cmpsl
push
cmpb
mov
fcomi
fs
fistps
mov
js
and
lea
into
inc
ficompl
pop
xchg
mov
notb
adc
sub
adc
xchg
xor
cld
into
ljmp
fcomip
int3
push
insb
inc
popf
fstl
pop
fisttps
and
mov
ret
cmc
cwtl
xchg
cmp
pop
imul
hlt
mul
enter
mov
dec
imul
mov
stos
add
lcall
out
or
push
dec
imul
out
dec
inc
outsl
pop
aam
lock
sub
inc
sbb
fsubl
mov
or
divl
fstl
or
clc
adc
push
divl
pop
adc
sub
cmp
ret
mov
xchg
or
fisubs
xchg
sub
shrb
mov
sahf
popa
pop
pop
imul
ret
test
rorb
push
push
mov
jbe
mov
xor
outsl
rcrb
daa
jbe
push
std
pop
jnp
push
and
fildl
bound
outsl
nop
or
in
xchg
dec
scas
jnp
out
movhps
inc
mov
icebp
imul
or
xchg
arpl
xchg
jae
idivb
out
lret
sbb
push
cmp
lods
mov
push
xchg
loop
ret
roll
push
rcrb
int
sahf
jle
mov
xor
sub
mov
jne
iret
dec
sub
pusha
into
scas
fcompl
jno
loopne
mov
adc
out
adc
mov
stos
cmp
cmpsb
xchg
inc
push
mov
jb
fwait
mov
cli
cld
les
dec
js
outsb
cmpsl
push
mov
nop
or
int3
xlat
sahf
adc
sbb
insl
add
hlt
ss
std
fnstsw
xor
adcb
adc
das
lea
add
mov
jne
xchg
or
gs
adc
popa
test
push
push
insl
stos
notb
mov
add
or
imul
pop
dec
xor
lods
and
aam
pop
inc
add
mov
sarl
ss
addr16
out
fildll
dec
xor
les
mov
int
push
mov
test
insb
subb
xor
adc
dec
adc
xchg
fimuls
aaa
cwtl
mov
fsubs
je
sub
int3
xor
push
imulb
gs
sti
stos
daa
xor
enter
dec
xor
mov
outsb
xor
lds
pushf
in
add
stos
jo
mov
data16
and
je
and
mov
aas
fldl
sbb
addr16
mov
cltd
les
and
ret
fdivl
aad
push
cmp
sbb
push
mull
and
push
add
getsec
xchg
xchg
mov
jno
jp
dec
mov
push
jns
mov
mov
sahf
call
ret
sbb
cld
cwtl
jo
cmpsl
sbb
cld
rcrl
add
pop
fdivrs
jle
push
push
push
push
clc
aaa
sub
push
insb
call
test
pop
in
push
sub
out
xchg
mov
xchg
ret
in
push
pop
sbb
sbb
out
fs
dec
inc
ret
mov
push
xor
pushf
in
or
mov
repnz
mov
insb
and
dec
add
cwtl
jge
and
cs
mov
dec
fcoml
test
or
push
sbb
push
cs
lret
popf
call
push
pop
aaa
or
xchg
mov
call
movsb
adc
mov
push
ljmp
nop
mov
push
pop
fstp
lret
jb
mov
out
mov
mov
sbb
push
inc
repnz
pop
jmp
and
std
sarb
and
pop
pop
or
repz
xchg
movsl
mov
push
mov
mov
loop
mov
jb
daa
lcall
es
push
fisubrl
and
cmp
lock
in
mov
push
jecxz
sbbb
push
sahf
movsb
sub
pushf
pop
jno
add
mov
lahf
fld
push
adc
das
pop
mov
and
xchg
outsl
sbb
out
mov
fistpll
loopne
int
adc
repz
in
pop
mov
mov
dec
cli
mov
daa
in
lahf
fidivl
sbb
dec
inc
flds
roll
push
and
call
and
pop
lock
cmp
pop
jl
mov
jmp
xorl
mov
repz
fidivrl
pop
mov
or
std
jle
mov
dec
test
jge
in
jbe
mov
sahf
or
pop
fs
in
loopne
and
and
not
ljmp
add
sbb
inc
mov
inc
push
push
push
lock
inc
inc
pop
or
ret
pop
loopne
dec
cs
clc
sbb
mov
inc
sub
dec
cwtl
jne
cmc
vmovddup
movsb
insb
xchg
sbb
mov
divb
test
mov
ljmp
cld
rcrl
imul
sbb
mov
cs
mov
repz
dec
cmp
and
pushf
pop
inc
cmpsb
adc
addb
repz
pop
push
xchg
pop
test
or
mov
and
jb
sbbl
outsl
nop
fwait
cmp
cmp
leave
add
clc
push
stos
dec
or
mov
outsl
call
leave
es
int
bound
adcl
pop
imul
lods
pop
adc
in
sub
cmpsb
xor
mov
mov
jle
gs
mov
mov
adc
jl
dec
sarb
sbb
sub
lret
call
fwait
xchg
dec
ret
lret
movl
xchg
xor
incb
inc
flds
sub
mov
jae
push
shll
repz
xlat
ficoml
mov
addr16
lds
and
call
sub
add
mov
fdivs
mov
dec
lret
xchg
xchg
cmp
daa
jle
mov
repnz
fnstenv
push
xor
test
pop
sahf
sbb
cmc
bound
xchg
shll
fsubl
mov
sub
mov
or
dec
aad
roll
pop
outsl
xor
mov
jo
ret
fisttpll
mov
mov
dec
jmp
std
imul
cld
ret
insl
add
jno
ret
fs
lds
ret
mov
mov
xchg
lret
mov
jmp
or
xchg
and
lret
loopne
out
adc
das
or
add
mov
ds
cmp
xor
and
stos
cmpsl
pop
jnp
mov
and
int3
sbb
xchg
push
and
xchg
les
and
mov
rolb
cmc
adc
stos
lea
and
sbb
popa
aam
xor
lock
stc
lret
mov
dec
xchg
and
pop
jge
repz
cli
pop
sahf
mov
iret
add
ror
dec
sub
stos
ljmp
push
in
push
dec
jg
mov
lret
or
dec
xor
add
mov
sbb
aas
xchg
xchg
data16
leave
shlb
ret
adc
fidivl
sti
mov
fildl
mov
xchg
js
data16
push
sub
insl
push
mov
push
push
ret
or
leave
xchg
dec
mov
fisubrs
jbe
sti
xchg
mov
leave
scas
xchg
cmp
cli
mov
cmpsb
push
lret
notb
div
sbb
fcmovb
push
ror
insb
jbe
jecxz
gs
mov
icebp
inc
lcall
mov
dec
xor
pop
scas
fildll
jnp
lock
aad
jecxz
pusha
std
fcom
add
andb
enter
mov
fwait
mov
mov
mov
sub
je
lds
lods
mov
pop
mov
mov
lds
fwait
dec
fmul
lock
test
pusha
cld
jo
sub
iret
push
add
into
cmp
dec
or
subl
push
dec
push
aaa
cmpsl
lods
and
xchg
mov
std
pushf
adc
jo
mov
hlt
lret
push
adc
cmc
adcl
inc
out
push
das
pop
sbb
inc
test
push
cmc
push
and
dec
lret
ljmp
icebp
out
mov
shrl
jae
ret
mov
and
in
add
loop
and
mov
jno
lret
jo
notb
rorl
movsb
or
je
adc
sahf
inc
mov
mov
add
push
adc
jp
in
pushl
decb
sbb
aad
pusha
pop
ja
xchg
lret
dec
lret
mov
data16
daa
or
mov
in
lret
lret
je
pop
add
jb
fs
xor
mov
mov
stos
cs
xor
mov
add
jnp
pop
pushf
lret
xchg
jg
fs
dec
rcrl
mov
add
or
jmp
add
jp
pop
or
shlb
lds
out
mov
mov
mov
cmp
lcall
push
fidivs
cmp
jo
and
jbe
lcall
mov
rcll
pop
add
pushf
ljmp
lds
mov
aad
ret
mov
xor
xchg
sub
popa
shll
ficomps
push
push
cwtl
push
xchg
xor
xchg
adc
inc
scas
es
cmp
rcrl
mov
jp
or
jl
lock
divl
inc
ret
jp
pushf
sub
fisubrl
mov
jp
mov
mov
out
mov
mov
cltd
ret
jnp
out
or
in
in
adcb
add
std
stc
sub
clc
sbb
lahf
ret
pop
mov
sub
mov
adcl
mov
pop
popa
cmpsb
out
lds
loop
jmp
aam
rorb
pop
orb
pusha
enter
mov
cmp
pop
lret
adc
sub
out
push
cltd
push
lds
mov
cmp
aad
sbb
mov
jnp
stos
mov
iret
jg
xchg
push
dec
xor
xchg
add
mov
cmc
in
xchg
xor
push
cs
out
sub
mov
push
or
and
xor
stos
jmp
sub
lds
mov
mov
and
cmp
jmp
xchg
pop
push
mov
or
stos
leave
jmp
out
imul
mov
mov
mov
pusha
xchg
pop
in
adc
loop
jle
lea
fcmovne
sbb
into
out
arpl
fcomps
push
pop
test
aam
mov
test
out
stc
movb
loopne
lock
flds
ret
sub
hlt
cmpl
adc
adc
shll
rcll
xchg
cmpsl
fbld
xchg
or
sub
dec
ret
add
sbb
cs
inc
or
xchg
js
push
jl
clc
cmpsl
mov
cs
push
lods
inc
lret
push
dec
adc
fdivrl
inc
ljmp
or
dec
mov
test
push
cli
out
into
in
jns
mov
ds
rorl
mov
aaa
xor
insl
xchg
out
pop
sbb
std
adc
stos
nop
shll
or
int
aas
mov
mov
cmp
and
loope
aad
pop
lock
in
pop
mov
add
xchg
iret
sahf
cld
dec
and
pop
adc
push
xchg
cwtl
test
stos
sub
pop
pop
stc
mov
or
cltd
xchg
mov
adc
dec
xchg
int3
test
mov
bound
rorl
cmp
pop
inc
int3
je
ja
call
mov
xchg
loopne
or
jl
push
xchg
cmp
sub
pop
cmpsb
inc
xor
insl
mov
cmp
sub
mov
int
ret
jl
or
adc
cmpsl
pop
std
decb
jo
push
push
roll
mov
aaa
ja
pop
add
sub
aaa
dec
xchg
lret
push
loope
cmp
mov
push
daa
mov
lret
pop
xchg
xchg
sbb
sbb
hlt
inc
adc
out
add
mov
mov
pop
int3
ret
or
adc
dec
xorl
loop
pop
push
add
xor
sbb
sahf
orl
cmp
adc
in
loope
lds
pop
adc
cmp
xor
add
je
adcb
push
xor
lret
ret
cltd
push
pusha
jno
cmp
xor
fwait
xchg
xor
and
mov
pop
add
mov
add
mov
inc
xchg
nop
out
or
inc
int
sarl
dec
adcb
pusha
fisubrl
jnp
xchg
cmpsl
popf
iret
xchg
push
mov
test
jmp
push
lret
jge
stos
pop
pop
sti
xor
fidivl
in
in
push
bound
xor
ja
ds
in
push
call
ljmp
add
insl
int
mov
sub
popf
mov
adc
push
wbinvd
dec
sub
adcl
pop
lock
mov
movsb
out
push
mov
xchg
push
jne
ds
push
push
enter
movsb
dec
push
popa
sub
cmp
int
cltd
addr16
inc
dec
les
test
dec
adc
pop
je
sbb
inc
jge
iret
divb
mov
lods
lret
dec
ficoml
icebp
dec
subb
into
popf
ss
lods
int
adcb
add
repnz
jmp
icebp
call
sbbb
mov
jae
lret
mov
adc
jae
lds
enter
sub
scas
jne
fidivrs
add
ljmp
or
aam
in
xchg
xor
fwait
dec
dec
lock
xchg
xchg
ficompl
pop
and
lret
and
in
mov
shrd
cmp
mov
and
pushw
sub
xor
das
xlat
lds
xchg
mov
into
mov
pushf
loope
lcall
cmp
pop
idiv
ljmp
mov
cmp
mov
sti
xchg
in
into
inc
cmp
js
daa
mov
cwtl
inc
int3
jmp
sbb
push
loope
push
jmp
cmp
pop
or
xchg
in
and
pushf
dec
and
int
and
ret
insl
loop
rcl
xchg
ljmp
movsb
lcall
hlt
pop
pop
mov
shll
sbb
cmp
aad
jnp
enter
clc
mov
adc
lret
fstp
fisttps
int
xor
dec
mov
pusha
jns
aam
mov
das
fwait
adc
cltd
in
dec
cli
out
repz
dec
add
mov
movsl
ds
push
jne
out
jne
loop
ret
fwait
adc
push
lahf
pop
out
pop
sub
sbb
cs
push
movsb
sub
fs
jg
push
scas
incl
mov
and
stos
push
imul
aad
dec
outsb
sbb
push
ja
loop
and
mov
repnz
add
stos
pop
jle
in
cltd
shll
fldt
jp
adc
arpl
xor
rep
inc
jns
adc
repnz
dec
insb
xor
popf
mov
fsts
and
adc
in
cmp
call
aad
and
pop
push
push
mov
ret
frstor
xor
mov
aaa
add
mov
jo
rcr
sub
dec
push
mov
push
call
jl
push
je
in
test
imul
sarb
sbb
ds
pop
mov
pop
stos
pop
mov
int3
jno
jge
and
stc
pop
js
mov
lods
mov
and
test
lods
xchg
pop
test
movsb
dec
pop
movsb
adc
lahf
mov
call
ljmp
out
data16
jecxz
sbb
add
lret
or
push
push
cmp
and
cs
fwait
ss
push
and
mov
in
dec
jecxz
push
jo
daa
pushf
xor
or
testl
aam
mov
movsl
inc
fsubl
pop
inc
roll
push
bnd
imul
clc
dec
xchg
or
xchg
dec
xor
cld
mov
scas
ja
hlt
or
movsb
lods
or
out
aad
call
iret
aad
shl
xchg
xchg
inc
jecxz
cmp
loopne
xor
xor
pop
and
pop
loopne
pop
repz
xchg
sbb
mov
sbb
scas
xorb
inc
sbb
pop
mov
js
cltd
jne
pop
out
int3
push
sbb
movsb
lods
daa
or
xchg
dec
daa
jmp
sub
insb
jbe
pop
inc
inc
cmc
jmp
and
sub
push
and
lret
sbb
loopne
or
mov
inc
xor
leave
mov
sbb
xorb
pop
sti
cmp
mov
cmc
cmp
xchg
addr16
loopne
mov
xchg
push
pop
scas
shlb
pop
jo
negb
dec
jmp
lds
push
pop
dec
mov
jle
mov
out
and
cmp
into
xchg
ljmp
cmp
or
jmp
enter
sbb
lcall
in
ret
fmulp
outsb
js
imul
cmc
pop
or
lea
loope
je
aaa
xchg
test
mov
mov
mov
fldlg2
movsb
je
mov
dec
xor
leave
test
iret
cmp
xor
pop
mov
movsl
movsb
or
jl
push
and
xor
push
fmull
dec
sub
sbb
push
out
xor
pop
jl
push
xchg
dec
iret
scas
stos
andl
xchg
test
xlat
movsl
fisttpll
xor
push
mov
jnp
jns
mov
clc
fldt
les
xor
bound
dec
pop
jmp
push
data16
push
sub
and
push
xchg
lcall
pop
fisttps
push
sbb
repz
stos
mov
in
idivb
mov
movsl
out
dec
and
jmp
cmp
xlat
ljmp
popa
mov
aaa
push
jecxz
push
outsb
push
or
pop
xor
lret
jecxz
fs
addr16
pop
mov
pop
sub
repnz
pop
inc
dec
out
jne
std
sbb
rorl
lea
dec
out
les
insb
push
xchg
xchg
pusha
pop
fmull
adc
mov
inc
pop
rcll
repnz
jae
or
inc
add
mov
push
je
sarl
or
sbb
mov
mov
or
ljmp
ljmp
gs
inc
stos
fistl
and
addb
popf
test
jp
fiadds
fdiv
ds
pop
mov
sub
jae
push
mov
hlt
insb
mov
repz
xor
mov
popa
cltd
jnp
sub
cli
dec
je
push
je
jb
aad
cwtl
pusha
and
lahf
jg
daa
lret
out
jne
aas
fs
or
adc
dec
mov
jmp
push
stos
scas
aam
cs
jae
jecxz
flds
inc
or
fs
or
pusha
iret
in
or
dec
cwtl
jmp
aaa
sub
aam
ljmp
inc
jae
in
pop
add
sub
inc
out
push
cmp
inc
int3
out
je
andb
mov
insb
and
into
stos
cmpsb
mov
mov
rclb
or
add
sarb
sbb
adc
mov
std
insb
dec
sarl
xchg
repnz
insb
sti
push
xlat
xchg
cli
cmpsb
rclb
pop
iret
lods
arpl
or
jle
push
cld
mov
mov
scas
aas
or
ss
shll
push
insb
mov
pop
loop
sbb
fadd
int
push
sbb
ljmp
insl
jle
iret
xchg
push
xchg
push
adc
adc
std
call
mov
pop
scas
and
add
sbb
mov
enter
out
int3
mov
jbe
inc
leave
or
lea
xchg
adc
pop
xorl
or
in
dec
sub
popf
mov
movsl
in
cmpsb
arpl
inc
shlb
in
mov
adc
mov
cltd
jge
dec
pop
dec
dec
stos
sarl
adc
jns
dec
outsb
inc
pop
dec
lods
dec
int
and
push
pop
pusha
mov
fwait
inc
jp
ja
xchg
mov
add
nop
cmp
dec
xchg
mov
aam
stos
mov
imul
pop
outsb
pop
xor
hlt
call
pop
inc
sbbl
aad
sti
or
ds
movsb
idiv
movsb
mov
repnz
ljmp
mov
bound
icebp
pop
sti
bound
dec
jno
cmpsb
dec
sbb
orl
movsl
cmc
mov
or
vcvtss2sd
xorb
loope
mov
pop
sbbb
fiaddl
loop
mov
mov
aaa
xchg
shrb
xchg
inc
mov
stc
cltd
icebp
push
xor
sbb
out
in
cltd
sub
aas
pop
pop
xchg
lods
jp
loopne
jp
pop
inc
incl
stos
jecxz
lret
addl
sub
lds
and
stc
xor
inc
jl
nop
push
jl
clc
fcoml
mov
in
inc
sar
fldt
es
sub
adc
cli
jae
cmp
pusha
inc
mulb
inc
bound
or
shr
ljmp
into
xchg
call
cwtl
mov
outsl
filds
in
adc
dec
lods
mov
dec
mov
js
stos
xchg
popa
inc
sbb
aaa
adc
loop
pop
and
subl
out
movsb
out
in
roll
or
stos
dec
xor
cmpsl
mov
and
mov
ret
stos
jno
call
jns
adc
imul
out
inc
repnz
cmp
mov
sub
je
loop
mov
adc
xchg
in
xlat
mov
dec
mov
xor
push
lcall
stos
outsb
rcl
push
xor
mov
ret
inc
out
pop
outsb
stc
inc
mov
pusha
push
insl
push
fcomip
pushf
les
bound
lret
divl
xor
sub
fmull
xchg
cmpl
mov
fcmovnu
test
mov
cmp
icebp
andl
mov
xchg
or
jbe
sbb
repnz
out
pop
jbe
add
pop
clc
test
shl
sbb
sbb
inc
sub
sti
add
pop
sbb
mov
aas
aaa
jecxz
xchg
mov
out
lea
push
xor
pop
push
call
and
popf
rorl
xchg
mov
scas
push
adc
leave
dec
mov
mov
xlat
xor
into
and
adc
arpl
leave
pop
es
and
cmp
xchg
jp
jecxz
lcall
adc
push
test
shrl
add
mov
add
jno
and
add
popf
clc
es
add
movsl
ljmp
xor
push
stc
fcoml
dec
das
clc
fwait
xchg
and
loop
jle
clc
push
and
js
xchg
mov
out
cmp
outsl
inc
mov
jecxz
imul
mov
push
inc
into
pop
dec
ret
sarw
ja
pop
int3
in
clc
cmc
enter
cmpsb
cmpb
cmpsb
imul
jb
jge
mov
jbe,pn
jmp
mov
test
not
sub
add
bound
pop
testl
cs
pop
pop
pop
aam
xlat
out
add
fnstenv
jno
fsubrp
repz
pop
std
push
lcall
or
pop
insb
or
aaa
lods
lret
adc
pop
ljmp
lea
aaa
cs
adc
mov
pop
movsl
mov
or
mov
inc
fwait
out
pop
mov
scas
jo
es
sub
pop
push
dec
dec
mov
cmpsb
add
aam
jecxz
movsb
sub
pusha
fwait
cmp
nop
xor
cmp
dec
hlt
or
xor
xor
cmp
add
add
les
dec
push
sarl
inc
dec
out
mov
aam
cltd
mov
nop
xor
stos
push
aas
orl
inc
mov
movsl
aam
in
mov
lcall
repz
push
int3
xchg
lea
cmpsl
loope
loopne
push
scas
jnp
aam
jmp
mov
cmpsb
stos
jo
rcrl
push
pop
out
mov
dec
mov
xchg
mov
fiadds
lods
daa
flds
mov
or
arpl
sub
fstpt
and
adc
test
hlt
dec
sub
add
xor
sub
xchg
std
xor
iret
movsl
les
stos
loope
hlt
cmp
jnp
mov
aad
add
pop
jae
cmp
mov
and
test
out
push
stos
mov
mov
divl
call
lock
jp
pop
je
repnz
lahf
idivb
xor
ss
sub
or
mov
shll
testl
in
dec
add
sti
pop
cmp
rcll
jb
mov
lea
cmpsb
mov
push
jo
sub
sub
jo
push
into
add
insb
adc
and
sbb
dec
test
es
bnd
outsl
je
testl
sub
push
in
and
push
aas
add
pusha
add
mov
cmc
jge
or
mov
lock
mov
test
pop
das
cmp
inc
xor
rcrb
jbe
das
dec
ret
mov
fnsetpm(287
arpl
testl
cmp
pop
in
adcl
xchg
jbe
mov
jne
lret
xchg
and
and
mov
sub
test
sbb
and
decb
loop
jns
cmpsl
insl
sub
cmp
rcrl
iret
push
inc
dec
cwtl
sub
push
or
aad
loope
mov
ljmp
lahf
mov
fsubp
xchg
clc
ret
test
and
xlat
aam
mov
loop
loop
test
fstl
mov
cmp
ljmp
loopne
push
jnp
fwait
icebp
and
stos
insb
jg
sbb
cmp
xchg
das
jg
xchg
sbb
and
movsb
pop
cmp
cmpsl
adc
scas
rcrl
mov
fistpl
mov
or
mov
clc
sub
adc
pop
lea
cmp
repz
cmpsb
cmp
pop
not
inc
icebp
add
jl
sbb
pop
shrl
pop
rcr
fiaddl
in
mov
fs
inc
pusha
mov
pop
push
mov
or
movsb
inc
lret
popa
and
cmpb
and
das
xchg
cli
xor
adc
xchg
fisubl
pop
xchg
pop
cltd
fdivrl
push
push
cwtl
fwait
xor
jbe
hlt
mov
lret
mov
push
add
jae
add
jb
rclb
imul
cmpsb
adc
ret
popf
push
cmpsl
repz
pop
cmp
imul
fidivrl
push
leave
mov
popf
dec
int
sahf
in
icebp
imul
outsl
jne
dec
cmp
les
les
dec
jns
inc
imul
pmuludq
jecxz
mov
xor
dec
sub
add
mov
cs
iret
icebp
jo
jb
rcll
mov
pushf
mov
data16
jecxz
in
add
sti
fisttpl
into
add
hlt
scas
movsb
cmp
jbe
js
inc
or
mov
push
push
lock
mov
data16
xchg
add
clc
sbb
out
js
mov
jge
inc
arpl
rorb
cmp
jmp
xor
mov
lods
or
mov
mov
sbb
xorb
mov
add
inc
lret
mov
add
push
arpl
rcll
mov
pop
and
scas
enter
pusha
jecxz
fcmovnu
mov
adc
push
shr
aas
sbb
sahf
cmp
insl
testb
cmpsl
and
loop
insb
sub
sbb
data16
inc
push
add
icebp
lock
lret
aam
arpl
movsb
mov
pop
dec
int
pop
lret
ret
addb
dec
push
mov
lds
pusha
sbb
divl
push
mov
lods
mov
ss
mov
jno
and
pop
add
sub
test
xor
mov
inc
out
es
jns,pn
movsl
xor
and
mov
mov
inc
pushf
jno
enter
out
push
shl
cmp
jl
repz
bound
or
fstpt
popf
fstpt
mov
in
cmpsb
mov
test
mov
inc
jp
and
mov
testb
jg
sbb
in
jmp
cwtl
push
add
repnz
mov
mulb
jmp
mov
jno
rcll
outsb
or
pushf
jl
lret
mov
add
or
jge
cmp
add
jge
mov
inc
jae
dec
adc
xlat
push
jae
xchg
xchg
leave
mov
mov
and
adc
hlt
mov
andl
push
push
in
cmc
scas
imul
aad
or
hlt
loop
jns
fistpl
add
subl
sti
sub
inc
scas
pop
cld
ret
cmp
pusha
and
push
mov
dec
mov
lret
loopne
jmp
scas
cwtl
inc
cli
add
add
flds
dec
dec
dec
int
jg
inc
sub
ret
outsb
loopne
daa
mov
xor
shrl
adc
stos
adc
in
sbb
pop
out
sbb
stos
xchg
daa
mov
leave
mov
jmp
jp
imul
movsl
cmp
outsl
loop
adc
xchg
xor
rorb
test
icebp
sub
rcrb
and
sahf
stos
inc
pop
dec
fstpl
sbb
inc
movsl
outsl
pop
cmp
and
fiadds
or
arpl
hlt
mov
adc
mov
xchg
sbb
mov
push
dec
mov
mov
mov
mov
push
push
pop
mov
push
mov
add
lods
lds
ficoml
and
scas
sub
sti
cmp
int
xor
or
nop
enter
cmp
lea
leave
xor
std
cmc
add
ret
sti
outsl
movsl
hlt
iret
jmp
lods
test
mov
xor
mov
lahf
sub
mov
loop
mov
sahf
dec
fmulp
fidivs
in
movb
leave
mov
mov
xchg
adc
mov
fwait
out
imul
pushf
in
stos
popa
adc
jne
notb
mov
cwtl
movsb
rorb
pushf
sbbb
test
sbb
loope
sbb
add
jno
ret
dec
leave
and
fisttpl
movsl
in
movsb
idivl
lret
shlb
in
adc
int
mull
shrl
stc
rcll
pusha
testl
fdivrp
cmp
adc
jo
pop
fwait
leave
jl
dec
stc
jne
rclb
les
outsb
xchg
xor
sub
jg
ret
push
sub
cli
aam
mov
and
and
add
loope
jg
cmpsb
push
ljmp
xchg
sub
outsl
xchg
scas
cmpl
cmp
xchg
xchg
and
xchg
dec
in
mov
scas
lcall
mov
cmpsb
lret
data16
cmp
repnz
jle
or
add
mov
cmp
adc
test
mov
subl
pop
or
inc
add
mov
repnz
xchg
loop,pt
aaa
mov
push
mov
and
fisubs
int
fsub
xor
inc
iret
inc
and
jl
jecxz
pusha
jp
cwtl
mov
or
in
jmp
stc
mov
js
add
scas
push
jecxz
iret
call
test
and
xchg
sahf
in
pop
stos
add
mov
lret
jp
lcall
jp
out
xchg
xor
int
cmp
jnp
xchg
mov
fists
cmp
adc
cmp
pop
cmovs
lds
and
cmp
nop
pushf
xchg
je
mov
jne
xchg
mov
jae
fcomps
xor
fnsave
gs
mov
pop
fiadds
dec
sub
dec
or
addr16
in
roll
loope
adc
rep
jle
addr16
stc
mov
inc
jecxz
in
pop
leave
cltd
lods
dec
test
repnz
xchg
int
out
inc
pop
pop
sub
icebp
sub
cmc
mov
gs
sub
xchg
cmpsl
push
sbb
neg
in
inc
pop
divb
stos
sbb
cmp
fnsave
rolb
pop
or
jecxz
push
stos
lods
and
or
add
call
cmp
test
pop
daa
push
mov
mov
add
sahf
sub
out
mov
mov
rcrb
ret
enter
les
jmp
xchg
stos
xor
dec
push
jmp
sbb
xchg
mov
popa
sbb
sub
or
lahf
mov
scas
insb
push
push
sbb
std
push
jp
outsl
icebp
sbb
psllw
cmc
cmp
decl
dec
div
lock
xchg
je
sbb
cmp
xlat
out
push
sahf
cmp
leave
bound
insl
pop
push
sbb
inc
jne
flds
jo,pt
sarl
and
inc
data16
mov
push
jnp
push
xchg
inc
fcom
fdivl
jp
repnz
test
mov
lods
les
push
mov
stos
imul
push
fmull
outsb
xchg
into
jb
sbb
out
jno
xchg
stc
fs
mov
divb
cmp
lahf
mov
sbb
mov
cmpsl
cmpsl
xchg
xchg
fdivr
cld
repnz
aaa
fwait
mov
arpl
mov
fs
or
divl
rol
and
xor
and
mov
dec
and
sarl
into
cmp
mov
mov
and
ds
out
out
sbb
imul
pop
cmpsb
mov
pop
in
inc
ja
jecxz
inc
xchg
rcrl
xchg
loopne
bound
adc
data16
push
xchg
xor
dec
scas
cmp
dec
cmpl
jne
scas
xor
and
insb
xchg
adc
pop
inc
jle
ret
test
lcall
mov
lds
stos
dec
mov
push
daa
dec
inc
aaa
add
sbb
insb
add
imul
mov
js
mov
sub
xor
lea
outsl
jge
std
lcall
inc
adc
cmp
inc
push
sub
aas
dec
push
imul
out
int
mov
adcb
lret
jae
hlt
fdivp
inc
xchg
lret
icebp
mov
xchg
sub
adc
or
lock
jl
mov
cmp
jns
push
mov
push
int
sbb
xchg
mov
cmp
jmp
orl
mov
xchg
lret
inc
jl
mov
jmp
rorb
adc
inc
icebp
sbb
adc
and
push
jg
adc
or
mov
fld
xor
push
inc
prefetcht2
es
and
xchg
mov
test
fwait
clc
pop
inc
push
jne
pusha
xchg
jo
or
sbb
jmp
add
daa
mov
jb
add
out
in
mov
outsb
cmp
ljmp
inc
in
or
lock
adc
push
sbbl
cli
sbb
mov
xchg
or
jecxz
int3
push
xlat
xchg
inc
xchg
sub
scas
sub
das
mov
add
adc
decb
mov
cmp
push
and
bound
push
pop
iret
scas
mov
mov
bound
adc
mov
push
pop
dec
sub
pop
mov
outsb
xchg
push
push
push
imul
xor
inc
pop
pop
inc
xchg
sub
cmp
repz
shl
lea
inc
or
xchg
stc
dec
inc
push
out
loopne
push
lock
insb
mov
fcmovb
stos
jbe
push
js
ret
xchg
das
gs
xchg
fsub
mov
pop
hlt
mov
test
mov
add
mov
xor
loope
repnz
sahf
cld
push
sub
push
pop
push
push
cmpsl
adcb
mov
scas
or
and
cmp
imul
es
mov
inc
cs
lock
and
aad
mov
lods
xchg
inc
adc
andl
cmp
lea
mov
adc
mov
mov
inc
pop
cmp
cmp
mov
mov
and
lods
ficoms
adc
jg
inc
pop
and
fsubrl
iret
add
mov
cmc
aaa
mov
enter
mov
cmp
iret
fnstcw
mov
shll
pop
adc
push
inc
jno
leave
ds
cmp
iret
pop
sarb
imul
mov
aad
mov
dec
stos
ja
xchg
imul
inc
pop
fadds
pop
repnz
push
out
cmc
add
and
sbb
sbb
fildll
data16
shl
hlt
nop
in
outsl
cld
repz
fisubs
ret
nop
or
jns
mov
adc
shrb
adc
out
and
lea
js
sub
pop
out
xchg
rcrb
out
inc
mov
xchg
outsl
inc
orb
nop
dec
sbb
cmp
cmp
cmp
movsl
fs
test
or
ja
jmp
pop
test
jge
xor
adc
fidivl
imul
dec
repnz
pushf
das
sub
dec
jnp
jp
push
mov
cld
bound
icebp
shrb
inc
dec
xor
lods
cmp
ds
shl
jecxz
pusha
stos
ror
in
jmp
js
jp
int3
mov
das
rcr
inc
mov
or
push
pop
pop
inc
mov
les
bswap
jl
mov
loope
dec
pop
mov
mov
jge
xchg
aas
mov
mov
rcr
ljmp
inc
leave
push
pop
adc
test
sub
pushf
call
lods
mov
jo
xor
iret
sti
incl
adc
pop
in
dec
imul
sbb
mov
sbb
mov
andb
cmp
xchg
shr
into
push
fnstsw
mov
add
inc
inc
or
jg
movsl
mov
mov
pop
dec
aad
cmpsl
int
pop
ljmp
mov
cmpsb
xor
sub
fwait
cld
mov
mov
xchg
add
dec
test
push
inc
cmp
mov
xor
cmpsb
mov
out
adc
add
cli
fstps
lods
xlat
sub
cmp
notb
mov
sub
subl
leave
sahf
add
xchg
xor
mov
dec
push
enter
je
scas
cmc
scas
daa
inc
cmp
inc
sub
sbb
incl
repnz
imul
mov
aam
lock
push
sbb
mov
loop
xchg
and
and
in
lea
sub
pop
es
adc
cmpl
mov
adc
inc
add
mov
lret
sub
jp
cli
mov
lods
shll
cmpsb
sub
cmp
ret
jg
xlat
ret
jnp
jmp
cwtl
fistpll
jmp
and
inc
push
cmp
lea
pop
pop
out
cmp
adc
and
loop
jne
fprem
cmpsl
mov
push
xchg
iret
push
fs
inc
bound
jne
call
enter
f2xm1
push
ds
xor
cmpsb
sub
jmp
shrb
fsubr
lcall
sbb
gs
xor
pop
or
add
int
fdivrs
pushf
xor
dec
pushf
xor
sahf
mov
xor
sub
out
cli
outsl
daa
jg
ror
xchg
loopne
push
inc
push
sub
jmp
jns
add
pop
imul
dec
out
mov
jp
scas
jmp
and
inc
add
sbb
sub
pop
outsl
pushf
and
loope
sbb
loopne
cmp
lds
dec
sub
cld
dec
mov
popa
sub
popa
or
aas
popa
mov
cmp
mov
daa
cmp
in
jge
outsb
insl
invd
dec
xor
inc
dec
pop
int
lods
out
sbb
call
mov
loope
or
push
xchg
nop
sbb
jp
subl
rorl
mov
cmp
cmp
loope
bound
adc
xchg
cmp
mov
jno
adc
lret
data16
imul
cltd
jno
out
jecxz
sub
adc
popa
or
pop
and
loop
push
frstor
sub
sti
jmp
int3
fcmovnbe
orb
lods
jmp
dec
mov
test
sbb
inc
aad
fwait
and
rolb
lcall
push
push
fsubl
jg
xor
or
xchg
mov
jg
xor
push
mov
pushl
aam
xchg
mov
in
movsl
jb
adc
fildl
pop
push
lcall
ja
push
or
lock
aam
popa
das
stos
cmpsb
jge
hlt
jge
inc
les
xchg
loope
ss
sbb
imul
jecxz
jl
pop
mov
movsl
cmp
test
into
dec
and
add
lods
fs
and
adcb
insl
mov
jne
aad
negl
add
lea
mov
mov
repz
pop
aas
mov
jg
mov
xlat
enter
ret
stos
dec
imul
popa
stos
xor
faddl
jnp
pop
lock
mov
aaa
pusha
call
enter
and
cmpsl
push
setne
xor
xor
jle
pop
adc
xor
fsts
add
and
sub
mov
int
xchg
lods
or
inc
add
sub
lods
jb
nop
jmp
add
or
loop
adc
jb
pop
das
or
rcrl
repz
arpl
cli
fsub
lock
std
inc
mov
sbb
or
pop
sahf
fcoms
cmp
push
data16
ja
out
cmp
and
inc
pop
mov
or
cmp
pop
int
xchg
xor
orl
pop
inc
and
jbe
ficompl
fsts
int
jno
rorl
imul
mov
cltd
fwait
and
push
lods
add
in
pop
add
aam
dec
xchg
and
cltd
or
jno
test
daa
jb
jl
jo
mov
sbb
and
pop
add
or
pusha
stc
inc
testl
sbb
xor
inc
jge
sub
cmp
int
stos
inc
cs
bound
pushf
mov
or
nop
sbb
aam
jo
dec
bound
xchg
pusha
sbb
mov
lods
dec
pop
in
mov
xchg
nop
inc
xchg
mov
xchg
lock
cs
in
adc
imul
xor
jl
jnp
mov
leave
in
ds
xchg
das
cmp
flds
mov
push
push
push
jmp
mov
js
dec
inc
dec
out
or
push
pop
out
arpl
mov
fiaddl
out
insb
mov
xchg
subl
cmp
add
stos
mov
ljmp
into
jle
loopne
sbb
movaps
sub
das
lods
stc
pop
add
outsl
sbb
iret
sbb
cmp
jmp
pop
jns
std
xchg
push
pop
push
and
cmp
lods
push
pop
into
mov
scas
mov
imulb
or
insl
imul
or
mov
xchg
repnz
mov
xchg
movsb
popf
loop
dec
dec
mov
jno
das
sahf
pop
int
or
divl
jnp
lods
es
mov
mov
cmp
in
rclb
out
mov
pop
sbb
push
jge
fs
cmpl
sarl
pop
pop
mov
lret
or
test
sbb
mov
test
sbb
dec
lods
je
jecxz
sub
inc
shrl
testb
out
aad
insb
cmc
and
lret
jl
fbstp
sub
int3
xorb
flds
dec
rclb
pop
in
xchg
out
ret
pop
aad
adc
repnz
push
popa
test
popa
xchg
enter
or
push
sbbb
pop
jl
addr16
mul
or
or
pop
jmp
mov
loop
push
dec
xchg
jno
sti
ret
outsl
insb
ss
xor
scas
loop
adc
cmpb
popa
pop
hlt
das
in
mov
push
add
mov
jno
pop
jo
aas
ja
xchg
shlb
cmp
xchg
or
mov
jae
pop
cmp
fbld
rcrl
lcall
aas
sub
mov
or
lds
mov
ljmp
inc
pop
sub
in
or
in
xchg
into
sbb
jge
in
push
cmp
pop
out
and
stc
push
dec
mov
mov
fwait
pop
fsts
xor
lods
xchg
jge
insb
lahf
inc
sub
inc
mov
xchg
cmp
lret
jl
popl
in
mov
mov
js
insb
or
enter
loop
cltd
es
xor
flds
popa
mov
mov
scas
cmpsb
je
clc
jmp
popf
sbb
pusha
mov
mov
sbb
sbb
inc
jmp
lcall
js
loop
outsl
enter
das
inc
and
sub
add
scas
stc
movd
dec
push
cmp
dec
in
cmp
leave
addr16
das
sti
cltd
outsl
aam
pop
lret
dec
dec
pop
bound
mov
add
ds
pop
mov
fs
add
cld
stos
and
inc
xchg
add
inc
push
mov
pushf
pop
and
inc
outsl
enter
cli
cwtl
fwait
jnp
insl
cmp
xlat
jp
sbb
aam
aad
xchg
cmp
lret
test
lcall
jp
pop
pop
sub
pop
fiaddl
pop
mov
push
popf
xor
sbb
inc
add
lret
and
add
dec
es
inc
pop
mov
jg
cwtl
aas
adc
aam
sbb
pop
xor
mov
mov
mov
lret
decb
lods
jo
jg
xor
hlt
cwtl
adc
mov
push
pop
repnz
pop
les
arpl
xchg
or
test
insb
nop
mov
sbb
std
addl
loope
and
adc
jecxz
sub
sub
sti
jnp
dec
insb
dec
xorb
aaa
pop
ja
mov
inc
cs
pop
add
lds
test
mov
fucom
dec
cmp
xlat
and
dec
inc
loop
arpl
xchg
dec
mov
xor
xor
neg
push
mov
in
jae
add
dec
shll
dec
cmpsb
stc
mov
sarb
popa
sub
add
xchg
inc
popf
xor
xchg
mov
insb
adc
cmc
mov
fstp
push
aas
icebp
add
pop
mov
push
and
outsb
into
daa
loop
incl
fs
call
jne
jg
fildll
add
leave
movsb
daa
mov
out
roll
push
xor
mov
push
les
cltd
mov
aaa
or
in
in
icebp
mov
or
repz
mov
or
cmp
and
adc
pop
lds
into
aad
ss
dec
insl
test
or
fcomps
push
out
xor
data16
out
enter
jns
xor
fsubrl
push
inc
inc
fldl
push
push
sbb
add
filds
add
sbb
stc
shll
sbb
arpl
daa
enter
lods
sbb
lcall
mov
in
in
add
nop
bound
jnp
bound
je
push
sub
jns
mov
jmp
mov
arpl
mov
sbb
xchg
shll
sub
adc
int3
pop
fstpt
inc
lahf
repz
inc
sub
in
mov
cmc
addl
push
ficoms
insl
popa
int
sahf
loope
fwait
add
loope
xchg
push
mov
mov
push
inc
cs
xchg
ret
daa
dec
sbb
jp
lds
dec
mov
aaa
in
lods
mov
mov
int
cmpsb
jo
push
out
mov
int3
xchg
jbe
das
jp
loope
subl
pusha
or
push
stos
sub
jae
out
lret
rclb
ret
or
inc
or
scas
xchg
popa
loop
pushl
popf
fistl
or
roll
aam
andl
ljmp
shl
dec
ljmp
stc
adc
fdiv
insb
sub
dec
les
ret
mov
and
cmpsb
xchg
std
inc
mov
add
out
lret
push
fimuls
mov
inc
stc
mov
adc
ret
jns
leave
imul
iret
pop
test
inc
push
pop
lea
lds
cmp
and
cltd
add
out
aad
mov
pop
fildl
test
xlat
inc
adc
push
push
or
loop
popf
push
hlt
mov
aam
mov
mov
xor
dec
test
dec
sbb
out
inc
rorl
mov
pmaddwd
loop
pop
arpl
push
inc
lock
shl
in
icebp
nop
mov
cmp
push
sbb
mov
stc
imul
es
fs
test
cmp
shlb
mov
nop
arpl
cmp
inc
jns
mov
aas
pop
or
sahf
call
mov
out
pushf
cld
pushf
das
add
setbe
cmpsl
mov
cmp
mov
loope
lods
push
fbstp
mov
shl
xor
lret
out
xor
hlt
bound
les
mov
jmp
adc
sbb
sub
sbb
mov
sub
push
and
mov
movsb
push
inc
cmp
push
adc
xchg
mov
imul
test
int
loope
inc
call
rorl
fnstenv
inc
adc
mov
jp
clc
add
push
int
dec
add
rolb
int3
fsubrs
mov
push
or
stc
push
sbb
dec
pop
insb
cmc
into
cltd
mov
jge
jp
in
xlat
pop
loope
test
jnp
in
clc
cmpsb
pushf
jmp
ret
xstore-rng
cmpsl
ret
push
lret
add
xchg
jge
xor
aad
adc
and
rcrw
adc
imul
popf
add
add
inc
enter
shr
or
mov
shrb
pop
sub
lahf
adc
add
arpl
push
mov
cmp
sub
push
mov
out
pop
mov
inc
imul
mov
out
in
sub
sti
pusha
inc
jbe
mov
out
imul
andb
shlb
mov
scas
sub
stc
add
lods
out
sti
pop
call
aad
mov
cmc
cmpsl
fdivs
push
test
dec
mov
mov
mov
mov
push
lds
add
xor
loop
stos
test
ds
scas
or
cmp
popa
mov
and
push
jo
scas
pop
mov
sub
add
dec
sub
and
mov
xchg
pop
addl
test
inc
ljmp
mov
fs
add
aad
aas
push
inc
adc
xor
flds
mov
ds
les
dec
fxtract
and
mov
push
out
subb
sub
pusha
and
adc
dec
shlb
jb
lea
sbb
gs
push
imul
pop
push
cmpsl
dec
mov
test
mov
dec
cli
in
dec
xlat
sub
pop
jb
cmpsb
js
lret
mov
cmovge
cmp
push
rcr
mov
popa
mov
shrl
insb
jns
loop
push
lods
shlb
pop
arpl
movsb
pop
fs
mov
push
mov
mov
mov
scas
loope
outsl
jns
lock
adc
paddd
jno
lds
daa
stos
push
gs
pop
add
loope
pop
ret
addr16
and
xchg
mov
push
sub
outsb
inc
cltd
xorb
cmpsb
pop
movsl
das
int3
fcmovbe
add
mov
push
mov
xor
shll
push
dec
and
fildll
sub
xchg
add
scas
fisubrs
cmp
xchg
or
mov
hlt
es
arpl
ffree
jle
popa
icebp
ret
dec
sub
das
fmuls
movsl
adcl
gs
xor
ds
or
sbb
and
or
sub
lcall
sub
in
jne
rep
sbb
add
mov
jae
mov
cmp
cmp
add
pop
jge
test
in
imul
xor
nop
mov
mov
mov
cmp
inc
jb
mov
repz
cmp
jecxz
add
jae
jnp
jl
pavgb
pop
cmpsl
or
push
idiv
or
idivl
nop
dec
aas
pop
xchg
inc
lret
fdivs
jns
les
jns
mov
dec
xchg
jns
ret
push
stos
mov
inc
jg
push
mov
fisubs
lret
mov
push
mov
out
stos
jmp
call
push
movsb
fmull
fbld
leave
addl
hlt
xchg
cmc
lcall
test
dec
std
xchg
movb
xchg
les
jmp
into
ja
add
stc
sbb
daa
xchg
aad
cltd
int
js
xchg
rcl
mov
shll
cwtl
add
and
imul
adc
test
mov
dec
inc
pop
inc
mov
jae
sbb
jae
pop
xor
xor
and
xchg
fnstsw
call
and
sahf
mov
arpl
or
aas
mov
stos
das
test
pushl
adc
xlat
insb
je
cs
in
push
fwait
sbb
je
push
xor
adc
cmp
xchg
adc
jnp
add
xchg
sub
dec
in
dec
stos
add
test
sub
cs
lods
xchg
adc
imul
stos
lods
popf
test
fstps
sarb
loopne
sbb
push
jae
call
mov
mov
divb
ds
cmp
xchg
jl
loope
sub
in
adc
pop
ret
push
sbb
pushf
xchg
jp
pop
jae
jp
scas
lret
add
jae
lock
mov
aad
movsb
lods
and
add
insl
push
pop
iret
ljmp
push
cwtl
in
and
lcall
in
push
cmp
daa
out
aam
popf
int
hlt
inc
push
inc
add
add
xchg
shll
jno
jmp
inc
cmp
pop
xchg
dec
psubusw
xlat
aas
dec
repnz
imul
pop
xchg
loop
loope
cmp
dec
adc
and
pop
jnp
sub
iret
or
ret
jmp
pop
mov
or
jle
pop
bound
test
push
add
add
mov
mov
add
scas
xor
and
roll
and
adc
dec
dec
sub
xor
mov
in
lock
fcoms
xorl
ljmp
cmp
out
sub
lods
scas
push
pop
jecxz
pop
push
or
cmpsb
in
push
and
popf
adc
mov
cvtdq2ps
xchg
addl
push
dec
daa
jae
cmp
push
inc
out
fistps
imul
mov
xor
and
or
add
and
push
ret
test
xchg
sub
inc
out
pop
add
jge
jne
adc
adc
out
movsl
inc
test
xchg
xchg
inc
ds
mov
test
stos
rcl
imul
or
or
inc
jmp
jns
or
std
ljmp
pusha
xor
sbb
shrb
jns
call
cli
andl
cltd
add
lea
lods
pop
xchg
scas
aas
pop
bound
sub
or
add
stos
push
jmp
iret
jmp
bound
pusha
fwait
inc
lahf
lcall
mov
hlt
fnstcw
insb
enter
test
lea
hlt
pop
clc
sub
out
lahf
out
jg
out
add
adc
lcall
pop
mov
inc
xchg
rcl
push
mov
popa
movsl
fdivr
call
ret
push
and
dec
cmp
mov
sbb
jmp
js
push
cmp
notl
mov
test
mov
dec
pop
movsl
das
xchg
jge
pop
adc
jno,pt
dec
mov
repnz
repz
fcomps
push
stos
testb
jg
ja
rcr
cld
movsb
xchg
mov
mov
mov
insl
cmpsl
mov
mov
push
ret
mov
fiadds
or
hlt
loop
pop
cli
and
mov
lock
pop
jns
dec
out
sbb
and
add
mov
in
ror
mov
sbb
mov
in
lretw
sub
hlt
clc
mov
lahf
insl
ficoms
scas
and
mov
clc
cmc
test
adc
jb
int3
cmpsl
fildl
aaa
jno
jmp
xlat
push
ret
aam
inc
jne
rep
imul
push
xor
inc
sub
mov
push
out
or
outsb
sub
mov
roll
jo
xor
xchg
sbb
into
out
pop
jmp
addr16
cli
sbb
and
rol
xchg
shlb
in
or
iret
fstl
xchg
push
lea
movb
insl
dec
sub
add
push
addr16
mov
movsb
or
adc
loopne
fcoml
mov
in
pop
mov
iret
in
jge
arpl
sahf
add
test
and
and
xor
test
mov
lcall
popf
dec
or
shlb
inc
push
xchg
xor
mov
clc
leave
or
mov
lea
out
fs
stos
cmp
sbb
pop
mov
cmp
jl
stos
mov
xor
mov
xchg
lods
push
cltd
cltd
inc
jnp
fwait
mov
mov
iret
and
pop
jae
loop
or
rcrb
nop
xor
mov
insl
xor
aaa
pop
sub
cmpb
aam
sub
mov
mov
xchg
loopne
cmp
loopne
xor
sub
and
in
mov
or
fbstp
dec
push
stos
add
and
lds
mov
sbbl
addr16
scas
mov
sub
xchg
out
out
cmpsb
mov
les
test
xor
pop
jo
int3
lahf
mov
pop
out
repnz
push
dec
in
subb
fisttps
aaa
mov
ja
outsb
mov
ja
lea
push
push
cltd
stos
cmp
int
sbb
cld
pop
lea
shlb
and
in
insl
ljmp
lcall
push
dec
ja
cmp
pop
ss
mov
clc
mov
pop
dec
sbb
or
and
fiaddl
push
pop
fdivl
adc
fdiv
cmp
test
or
push
push
push
fwait
inc
cmp
mov
fsub
cmp
jl
mov
lds
leave
out
insl
jl
mov
sub
xor
sbb
cltd
imul
incb
and
mov
pop
mov
jl
jno
or
lret
test
lss
daa
inc
cmc
imul
rolb
push
movsb
ret
mov
sahf
add
lock
ret
or
not
or
sbb
fnstsw
and
adc
xchg
xor
or
mov
in
pop
add
xchg
mov
dec
jns
lock
lea
fwait
lods
imul
out
xor
das
jb
add
push
icebp
pop
ljmp
cld
push
inc
jbe
cltd
mov
pop
aam
fisttps
inc
jp
daa
rcl
and
js
or
out
sbb
das
leave
xchg
jmp
repz
adc
mov
shlb
jns
lret
adc
mov
inc
dec
mov
int
add
mov
xchg
addr16
mov
movsl
push
sub
or
js
pop
adc
add
inc
xchg
pop
iret
add
mov
push
dec
push
dec
cwtl
ds
aam
lock
xchg
add
test
ja
adc
jne
or
cwtl
enter
loopne
jmp
mov
adc
jle
xor
push
cli
xchg
hlt
push
mov
frstor
push
sahf
aad
adc
jge
add
pop
ds
xlat
or
aas
pop
mov
or
lock
add
fcmovnbe
add
jnp
mov
movsb
daa
pusha
or
lds
mov
cmp
adc
stc
in
jnp
in
sub
mov
fwait
mov
adc
stc
ljmp
bound
add
mov
movsl
jae
jnp
jecxz
mov
mov
xor
arpl
out
std
add
push
imul
lds
test
sub
dec
mov
jb
push
lock
dec
daa
mov
test
mov
cmp
bound
dec
inc
jmp
scas
in
or
shll
push
int
mov
in
das
sti
sti
adcl
roll
sub
sub
out
outsl
mov
hlt
in
cmp
sub
dec
test
cmpsb
mov
xor
jo
pop
adc
fs
mov
mov
test
jg
mov
mov
sahf
push
scas
rolb
fnstcw
ds
cmp
outsb
popf
dec
ja
nop
ds
repz
dec
or
sbb
mov
mov
mov
into
out
xor
js
in
mov
daa
mov
pop
inc
sbb
insb
or
das
popa
add
inc
cmpsl
jmp
mov
je
sbb
xor
mov
gs
xor
mov
dec
inc
shll
push
adc
mov
cltd
jno
inc
xchg
cmp
ss
jmp
adc
std
adc
sbb
add
repz
add
dec
fwait
jbe
arpl
into
ret
ja
scas
bound
and
loope
add
add
lret
pop
call
in
aam
out
lods
inc
fdiv
rcrl
int
out
sub
adc
lcall
or
ret
xchg
repnz
jnp
mov
sarb
rcll
dec
push
lret
or
ficomps
bswap
dec
fsubrl
jecxz
into
jg
js
dec
out
icebp
push
mov
push
ja
jle
cltd
test
in
xchg
loop
in
pop
packssdw
iret
sbb
data16
mov
inc
adc
sub
ljmp
cmpsl
pop
push
mov
jle
push
cwtl
fldenv
lods
call
imul
sbb
ss
push
gs
imul
hlt
into
movsb
xchg
dec
fcomps
inc
gs
or
xchg
add
fiaddl
jl
xor
hlt
cmc
lods
push
shl
enter
insb
and
mov
fdivr
in
jo
sbb
dec
lods
inc
sbb
xlat
bound
mov
mov
mov
cmp
lock
fs
lret
sbb
or
sbb
aam
mov
cmpsb
inc
ss
test
call
dec
push
push
pop
fdivrl
outsl
jmp
scas
fwait
mov
fnstsw
cmp
repz
mov
and
dec
out
loop
or
int3
dec
xchg
sbb
add
mov
shlb
das
out
fidivs
shlb
scas
xchg
xchg
add
push
scas
pop
push
jge
test
mov
arpl
push
adc
fimull
lods
aas
fucomip
out
xchg
aad
or
rclb
adc
jp,pn
fs
xlat
into
shll
adc
fildll
xor
add
loop
sbb
push
mov
movsl
or
xlat
shlb
push
decb
sub
adc
outsb
jne
mov
sub
loope
lret
jb
and
push
popa
inc
adc
out
mov
sub
mov
sub
divl
lcall
xor
outsl
fwait
ss
push
imul
sub
or
fisubrs
inc
adc
push
mov
std
pop
ljmp
sti
mov
inc
jp
mov
jb
faddl
nop
mov
lods
pop
in
setns
inc
in
xchg
jmp
xchg
mov
add
xor
mov
xor
adc
adc
mov
push
jae
cmpsb
into
xor
inc
cmp
ret
test
sti
lds
mov
mov
mov
cmp
in
pop
sarb
movsb
cmp
in
xchg
ret
out
pop
test
aam
sarb
pop
xor
fs
mov
clc
and
add
outsl
add
push
insl
shlb
cwtl
mov
mov
dec
addr16
or
pop
mov
mov
mov
xchg
sbb
adc
jne
test
imul
push
xor
subl
lahf
push
sbb
and
jo
mov
flds
cmp
push
mov
mov
insl
or
ret
push
ret
xor
mov
push
or
mov
stos
and
lcall
cld
xor
out
mov
popf
mov
add
shl
cmc
sub
and
shl
js
mov
pop
pop
xchg
sbb
cltd
cmpsl
shl
xor
popa
imul
xor
pushf
xorl
shlb
iret
xchg
cmp
mov
push
aad
lock
popa
lock
ret
ds
jns
into
and
adc
mov
sbb
jge
pusha
out
jle
gs
int
test
ret
lods
push
adc
imul
push
loope
shrl
mov
fcompl
cmpsl
ss
adc
push
out
xchg
inc
pop
push
jae
fstl
mov
popf
fs
xchg
pop
add
mov
out
ss
enter
fildll
pop
mov
and
push
cmp
dec
jo
popa
dec
xchg
cmp
mov
sbb
ret
adc
jne
and
push
movsl
andl
loop
pop
xlat
add
adc
mov
and
mov
ret
dec
fwait
sub
lcall
stos
cmc
push
mov
pop
add
dec
das
in
nop
pop
inc
xchg
repz
cmp
pop
daa
jne
adc
and
daa
dec
inc
cli
test
xchg
xchg
push
push
ss
pop
push
adc
xchg
and
add
enter
jmp
lcall
fcoms
xchg
and
aas
xchg
add
inc
xchg
mov
hlt
aaa
mov
add
lcall
xchg
cmpsl
test
sti
cli
bound
xor
inc
std
xor
cs
int3
push
hlt
into
mov
push
mov
pop
sub
cs
cmp
and
xor
in
fnstsw
push
pop
mov
cwtl
test
sbb
imul
sar
push
add
adc
ja
pop
push
aas
inc
lahf
arpl
stos
fldt
xchg
push
je
mov
outsb
pop
cmpsl
stos
inc
ja
scas
iret
fimuls
imul
movsb
push
xor
test
xor
cmp
dec
mov
jae
loope
sbb
lcall
hlt
or
dec
hlt
outsb
in
pop
pop
pop
movsl
pop
mov
dec
inc
and
aad
movsl
xchg
rol
sbb
je
cmp
jbe
sahf
loopne
scas
cmp
sbb
inc
repnz
in
lea
xchg
or
add
pop
sti
adc
insb
pop
lds
jb
mov
movsb
js
loopne
push
jg
push
or
and
jbe
adc
pop
and
adc
jl
jns
lahf
adc
cmpsl
ficoms
push
fwait
sub
or
mov
in
ret
fiaddl
aad
aad
movsl
jge
sahf
aas
daa
cmc
cmpsl
mov
mov
pop
in
out
xchg
and
or
jae
mov
cs
ret
gs
inc
and
sar
xchg
and
aad
inc
mov
pop
gs
pop
adc
xchg
outsb
imull
adc
popf
or
ja
xchg
negb
out
inc
mov
mov
ret
int3
lds
xor
movsb
cld
shrd
ret
es
push
inc
fwait
out
jne
mov
test
out
cmp
mov
cld
push
sub
in
cltd
dec
mov
push
sub
out
push
cmp
dec
test
xchg
xchg
scas
mov
adc
leave
stos
shlb
inc
sub
xor
cmpsb
lret
ja
adc
sub
cmpsl
in
push
add
add
andb
fimull
mov
and
out
or
popf
popf
lcall
lods
xchg
test
push
inc
arpl
jae
jmp
mov
pop
js
mov
ficoms
in
pop
out
pop
push
xor
pop
sbb
cmp
pop
inc
imul
je
sub
mov
jp
pop
jb
pop
jmp
rcrl
cmovnp
mov
mov
or
test
sbb
rorb
mov
sbb
mov
pop
mov
push
jle
sub
jp
adc
rclb
stos
adc
subl
mov
adc
outsb
daa
mov
xchg
mov
arpl
jb
jg
enter
cmc
add
cwtl
cltd
dec
sarl
and
xor
adc
mulb
push
cwtl
mov
cmp
and
xchg
repnz
push
add
cmp
pop
inc
sub
sbb
mov
add
pop
in
jg
mov
mov
and
cmp
add
hlt
sbb
pop
adc
cmp
mov
stos
lods
roll
cmpsl
mov
inc
xor
sub
sbb
rcl
or
adc
jb
lock
adc
mov
push
xchg
in
aaa
push
jp
jmp
cmp
aas
xor
lea
sti
sub
jb
cmpsl
dec
dec
les
pop
ja
fistps
inc
ss
xchg
pop
fcmovu
aam
push
cmpxchg
add
daa
call
scas
push
repz
rcrl
shlb
stos
add
sti
dec
push
xorb
mov
jge
mov
and
icebp
lock
sbb
jno
xor
adc
loope
cpuid
leave
mov
sahf
movsl
push
imulb
lret
push
add
mov
les
aaa
shlb
xchg
fs
mov
dec
jge
lds
and
jmp
orb
push
test
inc
cmpsl
std
and
pop
jp
ficomps
ret
cli
pop
sbb
adc
cmpl
hlt
mov
inc
xorb
mov
xor
andl
mov
jne
in
push
cmc
test
pop
push
dec
or
aas
outsb
stos
hlt
ret
stos
dec
jge
sbb
fbstp
movsl
repz
je
fldenv
cmp
data16
leave
and
jnp
and
xchg
sub
push
out
jne
mov
sub
mov
shll
movsb
test
sbb
negl
leave
jns
scas
idivb
movsl
addl
mov
rorb
enter
add
cld
enter
fcoms
cmp
jne
jno
call
jmp
mov
fwait
sbb
push
daa
xor
mov
movsb
fcomip
fwait
push
adc
add
or
sub
dec
movsb
xor
std
pusha
leave
and
icebp
subb
jmp
pop
loop
inc
pop
mov
ja
aam
sub
jb
xchg
push
cli
pop
insl
fdivrs
test
imul
cmp
rcll
pushf
pop
in
jnp
mov
aam
mov
push
mov
pop
cltd
sbb
sti
cmpsb
lods
in
fidivs
cltd
loopne
inc
hlt
scas
or
sub
es
xchg
les
shl
loope
in
jmp
and
dec
cmp
cmpsb
pop
nop
ficoms
pop
jecxz
sarl
imul
loopne
repnz
stc
subl
and
aas
xor
leave
cli
orl
xor
or
pushf
mov
fdivrs
rcrb
cmpsl
sub
sbb
inc
aas
push
push
icebp
pop
pushf
pop
ja
lcall
xchg
sbb
jne
inc
jb
mov
mov
movsl
aad
and
std
jp
flds
push
mov
sub
pusha
inc
dec
sub
scas
push
pop
xchg
pop
pusha
mov
test
lret
and
or
fwait
inc
mov
xchg
cmp
mov
pop
pusha
xor
xchg
dec
scas
stos
shrb
movl
sub
fmulp
andb
pop
push
in
inc
push
fucom
aad
lods
out
and
mov
sbb
jge
fistpll
scas
call
cwtl
xor
into
sub
das
mov
xor
push
fisttpl
push
pop
outsb
leave
flds
mov
add
or
mov
adc
add
fld1
mov
sub
repz
cwtl
daa
jnp
mov
cmp
popf
xchg
and
into
add
out
or
inc
and
jnp
cld
data16
iret
fcoml
icebp
cmp
les
test
cmpsb
sbb
sub
mov
enter
jp
fldcw
in
add
int3
out
int
inc
nop
jp
jns
jmp
pop
icebp
mov
mov
inc
mov
inc
int3
daa
bound
hlt
or
leave
and
aas
shlb
ret
lret
sbb
lock
pop
movq
jle
cmp
add
addr16
pop
test
cmp
push
cmp
xchg
xor
and
fiaddl
inc
ret
dec
mov
jmp
and
push
popf
cld
and
cmpsb
mov
pushf
push
jmp
mov
icebp
mov
inc
inc
push
sub
dec
jle
pop
fists
push
xchg
ja
daa
sub
shrb
sbb
outsl
mov
xor
pop
cwtl
iret
pop
dec
subl
adc
pop
dec
push
mov
icebp
push
popf
add
mov
ds
jmp
enter
repnz
push
clc
jg
loopne
ds
int
xchg
xchg
rcrl
cmp
leave
xor
mov
jb
pop
aad
es
stos
subl
push
movsb
add
mov
hlt
xlat
push
jge
xchg
cwtl
pop
push
pop
xor
and
or
and
xor
movsb
fiadds
cmp
outsl
mov
or
and
pop
xchg
pusha
repnz
mov
pop
push
push
fbld
das
pop
arpl
int3
mov
push
fstpl
loop
xchg
sub
mov
lret
divb
mov
jno
push
cmpsb
cmpsb
aas
dec
or
out
aas
movb
lret
xlat
sbb
clts
in
xor
mov
jle
shrb
sbb
int3
mov
rclb
pop
jno
or
cwtl
hlt
xchg
xor
jle
fwait
xchg
fdivl
lretw
xlat
std
rolb
fdivl
sub
mov
sub
mov
fcmovne
mov
cmp
movsl
sub
movsb
shl
add
push
lods
cmp
icebp
sub
jmp
loop
inc
dec
shrl
ret
sti
jg
mov
sub
push
nop
dec
sub
mov
push
test
popf
movsb
sahf
repnz
jnp
add
nop
mov
fimull
push
sub
popf
dec
dec
negl
in
mov
and
andl
mov
xor
test
or
insl
in
pop
bound
orl
push
mov
mov
mov
adc
fs
jge
jmp
adc
dec
es
mov
sub
test
ja
xor
sarl
and
cmpsl
jnp
pushf
jae
mov
add
daa
push
jmp
jp
push
jmp
xor
mov
enter
mov
pop
or
lds
ret
add
cli
imul
popa
rcll
movsb
add
sar
sbb
in
les
mov
push
pop
imul
fisubrs
inc
dec
pusha
mov
imul
out
enter
push
inc
loope
mov
js
sbb
sbb
insb
pop
cli
pop
xchg
call
cmc
das
das
dec
sbb
push
jb
mov
addb
mov
outsb
mov
lret
mul
pop
and
sub
std
and
jecxz
sahf
aad
jle
sbb
test
frstor
pop
insl
push
push
test
add
or
jbe
out
or
and
movsl
orb
and
push
adc
insb
xor
ja
dec
xor
jmp
jge
inc
ja
xor
test
xchg
lea
mov
pop
jnp
in
lret
js
nop
insb
int3
int3
rclb
mov
test
int3
jle
cmc
fcmovu
sub
or
ficoml
sbb
and
and
iret
or
pop
test
inc
sub
cmp
psubusw
loopne
push
nop
push
out
call
push
push
mov
dec
push
ljmp
andnps
sbb
lret
jecxz
test
or
push
sbb
inc
dec
mov
jecxz
sub
inc
mulb
arpl
std
fwait
add
sub
mov
add
cmp
pusha
cmpsb
call
xchg
or
inc
in
push
xchg
popa
cli
dec
sub
jle
icebp
pop
decl
out
jo
rol
inc
inc
pop
dec
jecxz
mov
es
cmp
jle
jbe
pusha
push
add
shll
push
int3
cwtl
pop
adc
ret
push
sbb
push
ret
fimull
iret
das
mov
movsb
testl
and
pop
jg
cmp
in
test
push
mov
pop
mov
insl
mov
sub
jge
adc
mov
fwait
jbe
xor
cld
push
loope
lea
iret
fistl
push
stc
leave
fucom
shll
cmp
dec
andb
push
imul
jg
mov
dec
fbstp
inc
push
push
movsl
out
mov
cmpsl
and
lcall
xchg
xchg
jge
jmp
inc
pop
in
sar
push
cwtl
scas
pop
imul
push
arpl
sbb
xor
cmp
loop
dec
fmulp
int
lods
mov
sbb
clc
pop
xchg
jecxz
sub
xchg
neg
stos
in
movsb
push
pop
enter
or
jp
jmp
out
ljmp
add
mov
push
ljmp
jne
shr
push
cmpsl
les
and
adc
pop
or
adcl
mov
out
sub
inc
sbb
cmp
stc
je
int
cld
inc
jnp
js
cmp
cmpsl
sahf
enter
add
lret
aas
in
jne
fstpl
jle
push
fs
add
push
mov
mov
jns
mov
cwtl
mov
in
jecxz
mov
and
out
inc
inc
sbb
adcl
shll
aam
nop
inc
mov
clc
pop
jno
and
std
ds
mov
jne
bound
push
sub
popa
mov
xorl
cmp
cmp
adc
push
repz
out
dec
jecxz
lret
andb
pusha
andb
xchg
sbb
out
stos
scas
dec
dec
push
push
movsl
jbe
addr16
bound
xor
mov
idivb
in
out
fdivs
push
jmp
add
dec
repnz
popf
stc
jl
cld
mov
inc
insl
lods
jno
xchg
dec
mov
or
popa
rorl
ljmp
sbb
mov
cs
fnstenv
add
mov
call
cmp
lret
adc
rol
jb
sti
shll
inc
lods
fwait
cmp
les
aad
loopne
adc
clc
repz
shll
lods
out
scas
and
sbb
jmp
ja
xchg
jle
mov
push
fidivrl
popf
jmp
mov
fmull
movsl
mov
inc
xchg
aaa
cmp
mov
test
repnz
push
and
cmp
dec
outsl
inc
daa
cs
cmp
add
and
loope
insl
int3
push
mov
ds
jae
sti
lcall
aaa
scas
xchg
inc
push
sar
mov
sti
aam
mov
js
lidtl
or
roll
jno
std
fdivrs
xchg
pusha
jp
sub
xchg
fistpll
and
push
pop
divl
push
push
les
mov
sbb
leave
aaa
jge
iret
pop
sbb
aad
dec
add
and
mov
fwait
arpl
call
into
bound
mov
mov
leave
pop
mov
sbb
je
add
mov
loope
jo
sbb
inc
es
fcoms
sub
xorb
mov
push
fmul
lret
inc
xchg
mov
rcr
stos
push
sub
faddp
sbbl
xor
push
push
and
addr16
pop
adc
roll
out
fsubrp
mov
fucomi
jge
out
cmp
iret
cli
jmp
stc
lds
jbe
fsubl
cmp
jecxz
into
imul
lahf
icebp
sub
mov
sub
pop
push
test
loop
movsl
pop
ss
idivb
push
bound
outsb
push
rcrl
jbe
mov
call
clc
dec
xlat
lcall
ja
iret
xlat
dec
sub
cwtl
cmc
lcall
add
lods
lahf
cld
pop
add
repz
push
gs
scas
scas
jnp
mov
mov
imul
test
inc
sti
negb
fiadds
pusha
ss
or
xlat
lods
dec
stos
cmc
dec
das
pop
xchg
add
aaa
push
xchg
out
loop
sub
popf
cvtpi2ps
and
add
fs
inc
or
dec
jne
xchg
imul
shrb
mov
xor
shrl
mov
popf
xchg
gs
sub
lret
mov
lret
mov
mov
imul
lods
ss
test
scas
stc
call
add
jo
ret
lret
out
inc
pop
add
push
pushl
jb
pop
ss
ficoms
popa
aad
pop
inc
lret
fcom
jmp
jae
sbb
dec
scas
mov
cmpsl
pop
adc
aas
ja
push
cmp
xchg
jo
lahf
jne
aam
jae
and
test
call
idivl
push
scas
in
dec
push
cmp
ficomps
flds
and
pusha
sub
stos
pushf
mov
ja
std
in
sbb
mov
pop
enter
lds
in
stc
inc
out
dec
jbe
adc
pop
rol
scas
sbb
cmp
cmp
cmpl
sbb
sbb
scas
dec
fidivrl
and
mov
sbb
daa
push
daa
lret
xchg
jecxz
xchg
outsb
les
push
imul
jb
loop
push
and
insl
ffree
pop
add
jno
dec
or
pop
fbstp
out
jno
sti
sbb
adc
dec
mov
shlb
mov
cwtl
pop
imul
sbb
dec
sub
push
mov
mov
or
stc
push
jbe
aas
push
lahf
sbbl
cltd
push
ret
sub
shlb
leave
test
outsl
test
cmc
pop
or
rorl
jne
mov
or
xchg
push
mov
test
lahf
mov
or
out
test
cmp
cmp
int
roll
push
mov
scas
testb
mov
add
das
sub
pop
gs
lods
scas
sub
lahf
mov
xor
into
testb
sbb
mov
fnstenv
data16
mov
nop
in
pop
push
and
fistps
jbe
imulb
loopne
or
mov
inc
inc
fdivs
push
gs
lret
and
loop
test
gs
mov
or
xchg
or
lods
das
push
cmp
hlt
dec
pop
mov
jbe
int3
cmp
cmp
push
sub
jb
push
scas
sti
cmpsb
sbb
mov
sahf
mov
pop
dec
adc
jg
lret
cmpsl
es
push
lret
call
jp
icebp
pushf
xchg
rcrl
xchg
pushf
ror
iret
mov
xor
mov
push
enter
fxch
popa
lods
xchg
dec
mov
je
add
mov
pushf
xchg
jb
aaa
xor
mov
popa
push
push
int3
rorl
repnz
xor
dec
xchg
jo
cli
inc
adc
bound
vsubss
add
cmp
pop
push
lods
dec
sub
aas
jno
ror
das
jo
es
shll
pop
dec
in
aad
mov
shl
js
or
dec
cmp
jl
pop
cmpb
jmp
shrb
aam
mov
je
cmp
addr16
dec
clc
pop
adc
sub
dec
xor
out
stc
sub
adc
mov
ret
into
outsl
adc
notb
dec
cmc
and
gs
sub
add
mov
aas
xor
fidivs
aas
ds
repz
mov
jo
mov
jne
xor
cmp
push
js
jp
mov
add
lret
add
push
adc
lahf
dec
add
xor
in
imul
push
dec
adc
jp
and
jb
test
stos
inc
sbb
cmp
fldl2t
mov
sbb
inc
or
cmp
pop
lret
fcmove
scas
lcall
hlt
adc
sti
orb
xchg
push
sti
fistl
push
clc
aad
push
dec
arpl
popf
mov
pop
sbb
mov
pop
mov
imul
dec
repnz
stos
push
pop
and
nop
xlat
je
pop
mov
adc
inc
mov
push
shlb
mov
icebp
push
push
jge
lret
aad
sti
inc
mov
es
das
jbe
call
data16
addr16
cmpsb
sbb
fisubrs
lcall
push
lods
pop
sub
ret
lret
js
mov
add
lock
sub
dec
push
xchg
daa
mov
shlb
testl
ret
bound
movsb
lock
loope
scas
mov
ljmp
test
adc
pop
mov
jg
scas
int3
sbb
pop
push
cmp
xlat
sbb
cmp
lahf
inc
movsb
adc
loopne
push
cli
hlt
inc
push
cld
add
es
xor
int
mov
fs
mov
daa
fiadds
aas
or
xlat
xchg
jmp
lea
add
cs
mov
in
addr16
push
cmp
jl
mov
dec
sbb
and
out
pop
xchg
jnp
and
inc
sbb
je
or
jl
push
ds
adc
pushf
lds
and
cwtl
pop
dec
pop
ja
das
jno
push
aad
mov
dec
jle
cmc
addr16
int
inc
inc
sub
insb
xchg
lock
cs
dec
mov
add
push
push
xchg
or
fwait
xchg
push
nop
addr16
push
pop
jnp
ds
xcrypt-ofb
cmpsl
lods
and
cmp
shll
lret
lcall
dec
lods
int
adc
adc
vsqrtsd
subl
insb
ljmp
idivb
sbbb
rorl
fists
sbb
jo
xchg
or
vpacksswb
push
inc
ja
jb
mov
stos
jns
jno
cmp
sarl
scas
out
out
in
cltd
mov
push
outsl
test
mov
and
jo
jmp
mov
insl
xchg
mov
scas
mov
xchg
pop
mov
mov
cmc
jno
cmc
push
stos
push
mov
arpl
and
jg
push
pusha
insb
sbb
insl
pop
dec
sub
test
add
flds
cmp
not
dec
mov
sbb
imul
test
pop
aas
call
out
dec
inc
ljmp
in
mov
dec
jl
inc
mov
jecxz
adc
pop
clc
or
cwtl
and
lods
cld
adc
push
sub
jg
fldcw
pop
aad
les
test
js
adc
xchg
scas
fisubrl
lds
subb
pop
clc
test
xchg
mov
cs
sub
and
inc
mov
arpl
ljmp
mov
fisubrs
adc
dec
scas
ljmp
daa
sub
jnp
in
mov
cld
cltd
addb
lret
stos
push
jbe
sbb
movsl
dec
pushf
sub
jg
stos
xor
test
and
loop
sub
stos
stos
fnsave
xchg
and
mov
add
push
xlat
mov
dec
xor
arpl
push
push
outsl
lock
cmp
sarl
mov
stc
xlat
fildl
and
cs
mov
dec
xchg
push
inc
mov
xor
jg
into
cmp
xchg
mov
mov
lahf
mov
sbb
mov
xchg
shlb
fbld
jg
inc
fwait
sahf
mov
jl
rcrl
add
sbb
ss
add
push
inc
mov
out
fstl
pop
or
les
shl
rolb
sti
or
pop
imul
inc
rcr
or
jle
aad
in
dec
sti
push
stos
std
stc
scas
lds
pop
cwtl
and
dec
mov
fsubp
insl
out
sti
push
iret
pop
ss
test
aas
mov
mov
js
xor
cmp
loop
stos
xlat
rcll
or
les
cmpsl
loopne
or
sbbl
repnz
mov
cs
call
sahf
cmp
sarl
mov
ljmp
outsb
cs
das
jbe
dec
mov
sbb
shll
inc
cld
add
fisttpll
lock
xor
push
movsl
scas
adc
sub
sbb
popf
test
out
out
and
xchg
aaa
jae
and
clc
xor
jb
add
sub
dec
cld
xchg
adc
sub
jmp
xchg
jo
sub
dec
pop
out
jmp
dec
repnz
push
jno
lcall
or
pushf
hlt
xlat
jmp
test
push
jo
cmp
cmp
jg
hlt
inc
mov
xor
dec
das
push
popf
sbb
je
mov
xchg
fadd
lock
cmp
pop
mov
pop
xor
loopne
dec
call
mov
mov
add
sub
jl
js
out
lcall
xor
add
jo
jle
or
push
and
stc
and
jbe
inc
push
pop
cs
adc
icebp
mov
popa
popa
jnp
mov
xchg
xor
aaa
push
fmulp
ja
ja
mov
adc
std
mov
dec
jmp
lret
add
sarb
icebp
inc
ljmp
outsb
pop
stos
stos
inc
add
nop
and
xchg
mov
add
sti
enter
adc
sub
sbb
pop
cmc
push
adc
movsb
mov
xchg
dec
and
xchg
push
xor
lret
dec
xor
xchg
xor
mov
aas
test
or
jae
pop
pushf
dec
fs
and
xchg
test
sub
dec
addl
adc
mov
test
jl
or
pop
jno
lock
enter
call
push
cs
lcall
mov
and
ret
cwtl
jge
in
call
mov
and
mov
xor
pop
push
scas
ret
mov
imul
rcrl
into
cmp
nop
notb
xor
addb
push
xchg
sub
push
icebp
mov
xor
cmp
popf
sbb
xchg
repz
cmp
cmpsl
cmpsl
addl
push
loop
out
rorb
jae
popf
lret
lods
cli
shl
andl
xor
cmp
xchg
ret
mov
dec
jae
das
int3
cmp
loope
fisubl
lahf
adc
xlat
cs
sbb
test
pop
leave
dec
ds
call
push
pop
mov
mov
ja
mov
sbb
in
xchg
js
and
mov
adc
fs
fs
jno
incl
cmp
in
mov
xor
in
rorb
lods
cmp
scas
push
xchg
insb
mov
pop
ds
jns
or
scas
loope
aas
scas
xor
sub
in
cmp
ret
bound
lods
add
pop
mov
and
xchg
sub
int
dec
aam
or
mov
xchg
ficoml
ret
mov
sbb
scas
push
xor
push
add
mov
xchg
add
fldenv
add
jb
jb
sub
lea
lret
jg
push
fldl
or
jne
ret
inc
adc
gs
lock
push
into
out
pop
subl
je
push
lods
sbb
clc
in
dec
test
sbb
cmp
in
ret
cmp
lahf
js
ss
push
lods
add
add
fdivrl
mov
jge
lret
and
inc
fidivrs
fs
cli
adc
pop
into
push
lods
rcrb
adc
shl
xorb
mov
stc
mov
enter
pop
insb
inc
outsb
insl
movsb
jno
add
push
mov
mov
mov
lahf
xchg
xchg
ror
test
cmp
xor
mov
pop
xchg
mov
push
pop
sar
push
pop
je
dec
jne
pop
loop
xchg
push
nop
mov
lods
cltd
cmp
add
xchg
test
pop
xor
pop
sub
pusha
mov
lods
daa
shlb
inc
add
mov
pop
xchg
outsl
xchg
push
mov
jae
mov
mov
shlb
ret
jae
test
jae
jl
xor
js
xchg
dec
push
lahf
js
xchg
out
imul
rep
loopne
in
iret
popa
and
aam
pop
jg
inc
rclb
daa
push
mov
pop
dec
in
sti
and
filds
mov
push
ret
mov
cmp
int
xlat
imul
out
and
shll
in
andl
sbb
in
adc
lret
pop
push
addb
fcmovnb
divl
insb
pusha
outsb
loopne
jb
fldcw
push
je
enter
subl
cmp
adc
or
in
jae
inc
mov
ja
test
outsb
lds
inc
mov
push
out
dec
outsl
or
jne
or
in
xchg
jbe
add
and
xchg
mov
fdiv
xor
sub
shl
push
pop
ja
mov
jnp
jmp
xchg
mov
mov
gs
inc
mov
fisubs
mov
pushf
out
stos
xchg
in
cmp
mov
movsb
jle
es
clc
vprotw
cmpsl
lods
enter
movsb
ret
mov
enter
test
jns
sub
sbbb
and
es
sub
sahf
sbb
mov
push
lds
inc
test
sbb
bnd
push
add
cmp
into
int3
je
sahf
arpl
or
imul
inc
das
insl
push
sub
xor
insb
cmp
sbb
add
pop
xchg
test
or
jnp
or
and
xrelease
das
and
adc
leave
jp
or
mov
push
sbb
mov
push
enter
outsb
lahf
or
loopne
dec
in
negb
pop
jb
jno
push
xchg
jmp
lahf
test
push
ret
push
loop
jl
mov
sub
psrld
push
cmp
cmp
call
sbb
sbb
inc
adc
push
out
inc
ret
int
stc
xor
mov
jp
in
inc
mov
scas
adc
inc
sahf
shrl
xor
xchg
or
pop
icebp
shlb
mov
leave
mov
out
ds
push
inc
adc
jb
jb
jbe
mov
nop
aam
push
fisubs
push
test
stos
xchg
sub
arpl
push
add
sbb
icebp
icebp
jmp
shl
cmc
mov
mov
push
add
adc
int3
je
inc
fists
insl
dec
in
xchg
or
int3
push
dec
jno
mov
jnp
ss
or
push
stos
mov
insl
push
data16
repz
sub
fstpt
rorb
imul
cmp
shl
push
inc
xchg
or
lods
fyl2xp1
sarl
aaa
push
sub
or
jno
mov
lods
mov
clc
sbb
xchg
arpl
lahf
push
sub
and
loope
lea
cld
and
cli
push
inc
push
cmp
notb
pop
jge
dec
adc
rorl
insb
dec
fistpl
sub
sub
divb
dec
int3
inc
cmp
clc
fdivrl
repz
mov
mov
adcb
rorl
mov
scas
jmp
xor
cli
int3
shll
dec
push
or
lcall
cmp
ljmp
movb
dec
jle
mov
mov
mov
sahf
sti
mov
push
pop
leave
jno
gs
xchg
lahf
gs
mov
push
fidivrl
adc
in
and
icebp
cmp
imul
or
mov
int3
inc
insl
subb
and
jno
jae
xor
xchg
xchg
test
cmpsl
dec
in
lods
repnz
stos
cmp
sbb
sti
adc
bound
pop
lahf
push
pop
fdivs
in
scas
jns
jg
or
xchg
test
flds
push
xor
pop
outsl
add
mov
jo
lcall
hlt
and
stos
loope
or
cli
dec
scas
cmp
adc
fistl
shl
and
fisubl
mov
popf
out
xchg
repnz
mov
call
cmp
sarl
mov
dec
adc
orb
rcrb
insb
push
sti
or
push
mov
and
ds
add
or
das
jbe
movsl
rol
jle
xchg
iret
mov
cli
inc
loopne
fidivs
push
lret
gs
jo
imul
xchg
popf
leave
sbb
mov
sbb
cmpsb
je
pop
mov
lock
cmpsl
xor
mov
sahf
leave
aas
fwait
or
enter
mov
adc
repnz
add
mov
stos
pop
les
or
mov
inc
push
cmpsb
dec
pusha
mov
gs
fcoml
bnd
inc
add
jge
mov
and
push
dec
test
iret
ret
xor
push
insb
addr16
mov
mov
test
ja
es
fistps
pop
ss
add
xchg
negl
add
imul
nop
pop
add
add
cmp
fcomps
xchg
or
subl
rcll
inc
lahf
and
pop
add
std
sub
push
flds
pop
xor
mov
lock
push
out
cmp
ret
pop
hlt
mov
or
push
repnz
into
xchg
xchg
mov
scas
mov
aas
std
jae
and
sbb
add
mov
test
and
movsl
imul
sub
mov
dec
lds
add
std
pop
and
xchg
and
call
mov
xor
add
outsl
arpl
ja
call
jecxz
mov
adc
test
mov
push
cli
mov
push
shrl
xchg
filds
test
mov
inc
aam
popa
out
adc
xor
sbb
ret
dec
xchg
mov
fnstsw
pushf
int3
cmc
ds
fwait
adc
push
cmp
inc
mov
mov
inc
adc
push
pusha
push
rcrl
js
mov
imul
dec
je
push
xchg
fdivrl
or
xchg
or
cmp
dec
popf
fdivrs
jge
cmp
jle
mov
lcall
add
daa
shl
adc
jno
mov
xchg
mov
hlt
jo
inc
enter
sti
push
jns
mov
inc
test
xchg
inc
dec
mov
insl
xor
adc
scas
mov
mov
adc
sti
mov
fildll
pop
xlat
jno
xor
adcl
stos
ja
cs
jno
sub
pop
add
push
push
xchg
inc
je
insb
js
out
ds
rcrl
sti
xchg
test
rcrl
scas
lea
arpl
imul
es
push
sub
cltd
pop
stc
inc
mov
push
xor
push
jmp
bound
test
adc
mov
pop
mov
mov
push
sahf
mov
push
jo
test
lea
xchg
stos
aad
jne
scas
mov
pop
cmp
jecxz
adc
and
lret
cmp
lret
mov
sbb
mov
sub
or
or
sub
push
aas
rorb
sahf
pop
imul
popf
push
sahf
or
mov
scas
test
xor
and
out
cmpsb
sub
or
inc
and
cmc
bound
push
movsb
mov
shl
mov
adc
iret
sub
xor
mov
mov
sbb
arpl
jbe
lahf
fisttpll
movsl
sahf
add
push
ror
scas
aas
sbb
mov
pop
pop
or
fdivrl
xchg
mov
push
je
sti
mov
sar
mov
adc
lret
repz
mov
daa
jg
sbb
or
adc
stos
jmp
adc
je
cld
sub
sbb
fdivrl
outsl
dec
fldenv
cmp
call
lret
add
add
fsts
lock
jb
imul
cli
push
or
dec
shrb
insl
or
mov
jae
push
shll
push
and
mov
stos
bound
push
mov
insl
sbb
mov
mov
movsb
mov
jmp
dec
lock
lret
sbb
and
mov
movsl
sti
loope
subl
xor
and
mov
mov
adc
mov
scas
sub
pop
aaa
jb
mov
pop
lret
cmp
push
mov
int
jb
and
loopne
test
outsl
sbb
mov
lea
loope
dec
sbb
dec
mov
lretw
and
sahf
mov
lods
arpl
inc
ljmp
cmpsl
mov
test
rcll
mov
fimull
inc
jnp
mov
stos
repz
cmpsb
test
mov
mov
fstl
mov
push
dec
out
inc
icebp
sbb
shr
cmp
icebp
hlt
push
jg
jo
dec
daa
mov
push
adc
inc
leave
loopne
loop
xor
ljmp
pop
jae
xchg
int
pop
sub
adc
lahf
mov
jae
addr16
cld
popa
arpl
ret
add
je
sbb
arpl
repz
lret
and
aaa
mov
outsl
jle
mov
lahf
mov
pop
scas
mov
cli
dec
mov
mov
pop
mov
leave
lds
mov
icebp
adc
mov
mov
mov
push
sbb
psrld
popa
push
jno,pt
es
push
into
jns
adc
mov
and
movsl
mov
popf
mov
and
shlb
cmpl
xchg
mov
push
or
add
stos
aam
jbe
loope
mov
push
addr16
scas
in
fsub
xchg
test
mov
or
stos
sbb
jl
filds
ret
dec
movsb
jae
jecxz
and
mov
test
sub
mov
push
test
sub
jae
arpl
sub
stos
or
inc
shrl
orl
aas
movsb
adc
push
mov
mov
out
xor
mov
or
dec
xchg
xchg
push
lds
je
mov
std
in
mov
cmp
loop
cmp
sbb
adc
dec
xchg
inc
es
movsb
test
in
cmc
mov
mov
lods
and
shlb
adc
loop
test
les
bound
or
les
add
xor
mov
hlt
sbb
fdivs
mov
cs
adc
sbbl
jl
xchg
cmpsb
inc
jle
mov
fwait
push
mov
out
arpl
sub
js
fistpll
dec
out
testb
pop
cmpsl
loope
xchg
scas
mov
das
mov
jmp
xchg
xchg
fnsave
int3
mov
bnd
sbb
test
add
lock
mov
xchg
les
lods
jecxz
repz
pop
adc
cmc
jne
out
int
push
notl
iret
mov
repnz
jge
sub
jp
cmp
xchg
test
dec
out
sti
add
jnp
cmpsb
arpl
mov
in
dec
cmp
fldcw
movsb
call
test
xchg
jnp
mov
clc
jmp
or
xor
sbbl
inc
rcl
fdivrp
xor
mov
int3
out
nop
das
mov
push
jmp
xor
test
inc
mov
pop
mov
rolb
dec
popa
adc
addr16
jg
into
dec
and
pop
addr16
andb
xchg
push
xchg
mov
jo
pop
jmp
push
loop
xchg
sub
popa
xor
and
out
js
mov
xor
popa
jle
and
jno
ficompl
xchg
out
lea
jo
jnp
cwtl
test
dec
pop
push
das
rorb
repnz
cmp
pop
fstps
jae
mov
jne
nop
xchg
cmpsb
sti
into
lea
loope
inc
jns
pop
sbb
inc
data16
mov
sbb
lahf
cmc
loopne
ret
inc
pop
or
pop
lea
pop
jge
or
mov
push
inc
sarb
adc
cmp
jbe
mov
addr16
pop
sbb
or
mov
gs
add
adc
clc
rcr
pop
es
ds
dec
sbb
sbb
inc
inc
mov
stos
or
or
rorl
add
mov
inc
cmp
jns
jle
mov
lock
push
jmp
icebp
mov
clc
cmp
adc
inc
inc
cld
pop
xor
scas
dec
dec
cmc
das
or
je
insb
or
pop
fs
inc
or
or
fdivrl
mov
rcrl
int
and
cmove
sub
jno
xchg
rcrb
pushf
outsb
hlt
aad
add
xchg
es
iret
movsb
and
push
mov
dec
dec
mov
mov
rcrl
push
mov
inc
das
sti
xchg
mov
cmp
dec
arpl
sbb
jno
loopne
test
aas
push
outsl
ljmp
sbb
mov
lods
xor
jp
jp
out
mov
mov
mov
xchg
mov
add
mov
lods
add
xor
adc
lcall
pop
hlt
lds
fstpt
bound
mov
fidivrl
outsl
push
lods
outsb
cmp
or
push
add
jae
imul
in
add
lods
fldenv
test
clc
jle
jg
lcall
add
sbb
int
pop
inc
dec
mov
xchg
jmp
aam
out
pop
imul
ret
in
psraw
std
jle
pop
sbb
xchg
xchg
xchg
mov
jg
jnp
jns
cmp
jmp
pop
aaa
or
popf
outsb
dec
jl
add
add
mov
int
ljmp
cwtl
ficomps
aaa
cli
popf
cmp
push
arpl
sub
fisttps
push
out
jb
test
add
jb
jb
mov
call
test
lret
sub
mov
push
inc
jne
clc
xor
rorl
test
stos
rcrl
jmp
in
pop
out
cmc
jo
outsb
es
mov
in
sbb
or
adc
movsb
aaa
mov
daa
sti
out
mov
pop
les
adc
gs
clc
call
add
jae
and
xchg
andb
sarl
push
xchg
add
sbb
add
and
fcomp
int3
jle
and
fcmovnu
inc
mov
sub
xor
jmp
xchg
dec
and
mov
or
dec
ja
insb
xor
inc
leave
jecxz
ret
push
lds
add
das
cmp
pusha
cwtl
je
aas
or
test
cld
push
clc
je
loop
inc
sbb
jnp
aaa
add
xor
scas
push
je
pop
das
shlb
aas
adc
xchg
pop
scas
cmp
add
repnz
mov
pop
out
pop
js
mov
mov
roll
in
dec
and
adc
push
cmc
push
das
mov
sbb
dec
dec
mov
shlb
xor
pop
cmp
and
xor
adc
push
mov
lahf
cli
aam
sbb
xchg
repz
add
lock
adc
andb
ljmp
out
lahf
jmp
mov
nop
ja
sub
pop
or
outsb
ret
iret
mov
fmuls
jmp
jno
xchg
or
jns
lahf
inc
inc
aad
fldz
roll
aad
adc
test
aaa
sub
imul
leave
fbld
xchg
xor
add
jmp
pushf
notb
jbe
ja
inc
cmp
mov
cmp
add
ret
or
bound
scas
ja
mov
scas
xor
xor
cmp
mov
test
lcall
xchg
cmp
or
int3
xchg
jo
cltd
mov
push
cmp
jmp
cmc
outsl
xor
pop
outsb
icebp
push
lods
pop
mov
push
rcrb
sub
pop
push
jecxz
scas
daa
bswap
jl
fxch
xchg
or
inc
and
mulb
jb
inc
xchg
fs
incb
xor
test
fsubrl
repz
adc
lds
popa
push
mov
mov
scas
push
xchg
xchg
push
in
pop
xchg
mov
or
lea
mov
imul
lods
aam
xchg
es
mov
jbe
in
fstpt
mov
aam
adc
cmpb
cmp
movsb
enter
sub
add
and
into
push
lcall
mov
daa
dec
decl
data16
addr16
bound
and
js
movlps
inc
jbe
aaa
in
xor
repz
and
out
xchg
in
sub
xor
call
dec
fiadds
and
mov
mov
out
and
or
std
xor
mull
es
aad
scas
ds
gs
push
addr16
jb
or
clc
enter
adc
sub
sbb
hlt
leave
clc
push
add
test
scas
sub
je
mov
inc
lahf
mov
inc
mov
mov
or
jbe
add
fnsave
out
cmp
xor
shr
push
adc
add
loop
das
sahf
in
mov
ret
mov
test
stc
sub
sbb
lahf
fldl2t
xor
leave
sahf
mov
jge
imul
popa
cwtl
bound
nop
ja
ret
aam
popa
and
sub
mov
jle
hlt
dec
dec
push
xor
pop
loope
pop
push
xchg
mov
pop
inc
lea
cmc
shll
rcl
mov
dec
inc
or
and
mov
jo
fmulp
ror
mov
test
out
cmpsb
jmp
jmp
jle
mov
dec
pop
in
inc
imul
cmpsb
out
push
and
sbb
sbb
add
sbb
jno
dec
int3
cwtl
add
xchg
and
aaa
clc
sbb
fbstp
fdiv
mov
xlat
xor
add
mov
add
mov
dec
stc
jp
xchg
shrl
ljmp
jae
add
mov
mov
sbb
push
mov
testb
push
stc
test
jmp
push
in
or
and
push
popf
imul
mov
mov
jl
add
xorb
sub
js
mov
cwtl
and
shlb
hlt
sub
outsl
adc
xor
call
mov
lods
insb
jb
xor
loopne
mov
sbb
cmpsb
sub
orb
dec
mov
mov
loopne
mov
cmc
movsl
xchg
dec
rcll
orb
push
pop
lds
arpl
arpl
jne
push
icebp
push
push
xchg
xor
loope
cmp
pop
inc
cmp
sahf
cmpsb
in
inc
or
push
test
cmpb
popf
mov
pop
sub
push
ljmp
jmp
ja
roll
ljmp
and
xchg
pop
fsubs
pop
scas
inc
into
mov
or
ret
cmp
add
mov
test
pop
imul
decb
ja
and
data16
mov
aaa
push
lods
jle
lahf
mov
jo
fdivl
test
outsl
sbb
mull
push
sub
pop
lcall
jns
out
xchg
and
and
lods
push
and
sbb
fsubr
ss
push
pop
les
mov
iret
mov
icebp
xchg
pop
adc
mov
push
push
or
cmpsb
ja
mov
insl
bound
shlb
mov
sbb
xchg
xlat
into
mov
addr16
outsl
push
out
or
dec
mov
jno
cmp
adc
shrl
nop
jle
jne
les
sbb
jge
push
mov
shll
fwait
ds
pop
push
pop
fnstcw
inc
scas
enter
out
notl
mov
aaa
rcll
sub
mov
xor
xchg
jnp
movsb
sub
push
ljmp
lcall
arpl
mov
push
inc
push
push
jl
push
xchg
sub
jns
hlt
inc
frstor
push
jecxz
mov
inc
addr16
fdivs
xlat
shll
enter
jmp
std
push
jo
daa
negb
sahf
ja
xchg
sub
pop
xchg
bound
cmp
jo
jae,pn
das
push
fdivrl
xchg
lock
mov
mov
or
cs
jae
dec
mov
inc
mov
mov
arpl
mov
test
sahf
scas
inc
cmp
or
adc
lds
xchg
jge
mov
mov
or
push
fildl
pop
mov
mov
xchg
dec
xchg
xor
jmp
push
mov
jle
mov
or
outsb
add
cmpsb
stos
and
dec
push
scas
daa
ret
outsl
mov
into
cmpsb
sub
cmpsl
frstor
and
xor
lods
and
pop
push
rorb
jb
cmp
mov
xchg
scas
out
push
mov
stos
cmp
cmp
dec
push
fld
jb
dec
jmp
jbe
sub
pop
pop
out
sti
mov
or
xor
mov
sbb
mov
adc
dec
jbe
sbb
fcmove
addb
stc
fwait
inc
inc
jno
outsl
pop
xlat
out
imul
lds
cmp
xchg
mov
and
push
xchg
aam
pop
shll
cli
or
add
dec
push
fldenv
sahf
sbb
popa
cmp
sbbb
jp
cltd
cmp
lock
cli
ja
in
dec
push
imul
stc
mov
mov
sbb
shl
out
sar
incl
dec
or
fistpl
aad
pop
cmp
xchg
pop
ja
adc
pusha
sbb
bound
cld
pop
outsb
fnsave
sbb
xor
inc
mov
in
xor
dec
aaa
pop
push
cmp
jmp
push
filds
jae
std
repnz
add
inc
cwtl
aad
out
movsb
or
cmp
push
sbb
sub
sub
jle
scas
shll
jl
mov
lods
xchg
movsl
cmp
inc
xor
lds
in
test
xchg
mov
test
cltd
sub
movsb
jmp
xchg
or
xlat
or
int3
fnstcw
dec
cmp
mov
cmp
adc
jne
xor
xor
sub
repz
xor
ret
outsl
push
inc
push
ljmp
fucom
xlat
cld
in
or
cmp
ja
sub
sub
adc
fstps
sub
call
and
lods
adc
icebp
and
cwtl
in
adc
enter
xchg
lret
movsb
pop
pop
dec
or
mov
jg
inc
dec
enter
lock
xchg
cmp
pop
jbe
imul
pop
xchg
cmp
js
jnp
fdivl
je
mov
mov
jmp
mov
pop
adc
fnstenv
or
add
dec
sbb
sti
loopne
sbb
xchg
and
iret
insb
mov
sarb
add
cmp
pushf
loop
dec
or
pop
hlt
pushf
fmull
sub
sub
cmpsb
cld
xchg
lahf
aas
sahf
scas
xchg
jle
rcrb
push
out
test
aas
test
idivb
mov
adc
mov
xor
mov
sbb
xlat
dec
addr16
cmpsl
ds
mov
push
mov
nop
and
mov
test
jge
or
outsl
les
xor
popf
test
scas
push
sbb
or
adc
enter
int3
popa
xchg
ss
ss
test
and
sahf
call
sub
adc
idivb
cld
mov
sub
or
popa
adc
jl
aad
mov
outsl
sbb
stc
xlat
negl
jl
dec
sbb
movsl
adc
mov
stos
pop
gs
inc
fwait
add
fldl
push
aam
and
push
jge
cld
fnsave
push
pop
int3
mov
nop
sbb
int
nop
cmpsl
xchg
popa
aas
aad
push
aaa
cmp
inc
adc
cs
pushf
jp
test
outsb
lret
dec
mov
jp
out
pop
andl
xchg
dec
out
sbbl
add
shlb
mov
repz
mov
aas
dec
inc
inc
sub
inc
xchg
stc
test
jge
pop
sub
sub
dec
fs
inc
push
lahf
sub
das
sbb
testl
push
sub
pop
lods
inc
dec
xchg
mov
dec
mov
scas
repnz
cmp
jmp
cli
fimull
scas
mov
or
jecxz
bound
and
dec
fdivr
sbb
daa
dec
push
push
mov
mov
mov
imul
or
fs
orl
sub
mov
push
in
mov
insl
or
in
sub
hlt
sbb
mov
mov
pop
dec
sub
call
call
pop
xchg
daa
mov
clc
out
mov
jno
shrb
jmp
push
pop
and
fdivs
mov
mov
gs
sahf
lcall
and
mov
stos
arpl
fs
orb
test
push
adc
xorb
sbb
push
mov
outsl
dec
nop
outsl
push
fnstcw
das
shrb
add
aad
dec
xchg
aaa
jo
test
fcomp
push
mov
dec
jmp
shld
inc
mov
jl
popa
lret
mov
cmpsl
jg
mov
or
in
out
out
shll
push
cmp
fnsave
fdivl
and
ss
jp
insl
inc
or
inc
sbb
je
jp
adc
mov
lods
cmp
not
push
jne
pop
shrb
or
push
mov
sbb
lock
loop
sbb
mov
dec
dec
xchg
add
push
adc
add
lods
dec
clc
jae
sub
fmul
push
xorb
or
incl
jle
jle
adc
fisttps
inc
jmp
push
outsb
sub
jp
dec
out
push
pusha
jmp
in
in
sub
mov
loopne
push
mov
sub
or
popa
mov
dec
and
es
and
and
inc
mov
xor
pop
xorb
xor
into
bound
xchg
roll
pushf
sub
insl
mov
lods
adc
sti
ss
and
ss
inc
movsl
test
cmc
scas
and
pop
fbld
loope
adc
movsb
push
xor
inc
fbld
mov
pop
pushf
mov
pop
sbb
shll
add
repnz
inc
aad
bound
addl
cmp
sti
es
cwtl
insl
js
pop
pusha
pop
add
sbb
test
dec
rorl
imul
mov
mov
jle
adc
outsl
hlt
into
clc
xor
or
pop
hlt
and
in
outsl
fsubrl
cmp
ja
add
adc
iret
push
aaa
dec
fldenv
cmpsb
jge
lcall
and
and
dec
lods
jbe
jne
cld
or
fdivl
mov
xor
jmp
cli
loopne
popa
imul
inc
int3
mov
xchg
jns
sbb
jge
addr16
ss
enter
dec
ljmp
imul
jecxz
dec
outsb
dec
scas
mov
mov
xorb
andl
mov
adc
lock
xchg
pop
insl
div
nop
cmpsl
insb
rol
ret
cmp
mov
hlt
rcrl
out
std
sub
ja
mov
mov
faddp
sub
and
xor
mov
jmp
xor
mov
mov
or
mov
add
js
cwtl
xchg
lea
addl
dec
cmp
jp
repnz
push
sbb
mov
push
fwait
push
test
popf
push
xchg
fcomp
fwait
sub
mov
jns
jge
in
xor
adc
add
and
mov
outsl
outsl
repnz
push
testb
dec
dec
cmp
xchg
add
adc
fbstp
push
sub
push
das
add
fdivrs
jnp
aam
popf
out
shlb
arpl
jnp
pop
xor
hlt
mov
mov
or
push
push
lods
dec
xchg
mov
cmp
xor
inc
gs
daa
mov
sbb
push
decl
lret
and
xor
loopne
xchg
sub
subb
jl
mov
mov
mov
lock
mov
stc
sub
rcl
cmp
in
and
inc
mov
sub
js
decl
xor
int3
jl
inc
sbb
mov
mov
pop
mov
fmuls
aam
jns
fiadds
xchg
sub
xor
lods
jmp
ret
jno
repnz
xchg
cmp
xchg
rcrb
arpl
jo
imul
orb
sar
jns
loop
clc
xor
fwait
addr16
rolb
or
scas
jbe
test
inc
decl
lret
sub
add
xchg
mov
mov
pushf
mov
mov
jle
pop
inc
clc
xor
ror
adc
arpl
aam
js
adc
cmp
int3
dec
hlt
adc
pop
popfw
cwtl
push
push
leave
dec
dec
mov
mov
popa
in
out
or
xchg
loope
daa
sti
mov
int3
or
jne
adc
out
std
into
hlt
stc
cltd
inc
insl
scas
fs
nop
leave
ret
jl
push
sub
jg
add
addr16
dec
sub
nop
int
push
add
mov
popf
lods
fs
adc
lods
mov
inc
mov
pop
iret
sbb
or
cltd
jbe
cmpsl
test
pop
pop
aam
test
inc
jne
fsubl
pushf
js
cmc
sbb
adc
sahf
ret
and
add
es
aaa
mov
lret
jo
cli
sbb
out
mov
jbe
adc
jmp
adc
inc
push
mov
pop
mov
jp
loopne
rcrb
data16
push
add
cld
call
jno
dec
pop
popf
adc
pop
int3
call
lret
mov
mov
nop
fsts
or
out
and
cmp
xor
out
sti
mov
dec
adc
add
aam
mov
dec
xor
mov
lock
jl
test
push
loope
jbe
dec
mov
mov
add
xchg
pop
pushf
sbb
data16
lcall
xlat
es
ficoms
popf
repz
xor
jb
jp
outsl
and
jae
jp
fdivrs
push
sub
mov
push
add
xor
push
ret
cli
stc
mov
popf
lcall
aam
gs
in
nop
test
or
jo
movsl
ja
hlt
push
roll
adc
mov
pop
adc
rolb
pop
sbb
mov
lods
mov
movsb
or
push
out
cmp
fs
in
imul
lret
mov
inc
pshuflw
push
insl
leave
jl
or
lds
cmpsl
mov
sub
ja
testl
cltd
jns
mov
jmp
cmp
push
adc
movsb
xor
sbb
jae
xchg
sti
mov
sbb
cmp
cwtl
nop
xor
inc
mov
pop
jb
xorb
popa
mov
push
or
movsl
pandn
mov
loope
sbb
push
sbb
lea
fmulp
mov
or
shrb
fisubrs
repz
adc
jmp
add
frstor
rorb
and
hlt
loopne
jnp
daa
pop
push
add
arpl
cmp
jl
fisubs
ret
cmp
arpl
inc
add
adc
je
dec
gs
inc
or
and
xchg
test
pop
aaa
xor
jns
sbb
aam
dec
movsb
push
xchg
cld
cwtl
clc
jbe
xor
inc
iret
adc
sub
adc
iret
adc
sahf
push
jecxz
fcmovbe
cwtl
sbb
cmpsl
shrb
xchg
push
cwtl
jmp
push
stc
sub
movsl
cmp
and
int3
inc
cltd
adc
fildll
push
sub
sub
ficoml
or
adc
and
mov
sub
cmp
mov
pop
fstps
cs
mov
push
les
test
mov
je
stos
imul
and
out
xor
scas
test
popa
imul
mov
mov
rcll
loopne
push
adc
sub
sti
mov
dec
sbb
add
test
call
cwtl
lods
push
jp
in
pushf
enter
cmp
pushf
xchg
das
mov
sti
into
hlt
aaa
push
jo
scas
lahf
in
fsubr
inc
dec
imul
std
add
loopne
dec
cld
add
insb
xchg
inc
xor
sahf
cwtl
cmp
adc
or
aam
shlb
bsr
jl
add
fistl
lahf
cmp
in
xchg
mov
inc
add
jb
xchg
xchg
inc
aas
xchg
hlt
sahf
mov
pop
add
push
xchg
or
push
jmp
adc
fcoms
faddl
inc
pop
insb
mov
nop
cli
pop
sbb
popa
in
sub
cltd
xlat
leave
inc
pop
push
xor
mov
add
dec
int
iret
dec
in
fs
outsb
cli
nop
fldcw
in
jge
xchg
dec
test
fwait
push
inc
mov
jmp
mov
jae
dec
outsl
sub
xor
stc
loop
xchg
sub
jg
push
fimuls
es
cmpsb
xchg
jo
pop
jns
xlat
jecxz
fmuls
add
into
loop
leave
stos
icebp
scas
adc
and
lods
addr16
mov
call
pop
mov
push
cmp
out
jl
out
mov
dec
jne
push
int3
dec
inc
pop
movsb
out
ja
pop
dec
aaa
jno
jae
cmc
and
cwtl
movsl
fwait
xchg
popf
ret
pusha
xlat
dec
add
cld
shlb
icebp
and
es
dec
mov
jl
adc
jmp
ja
sbbb
roll
js
jmp
lret
xchg
subl
adc
bnd
les
enter
stos
jl
loopne
movsb
dec
cmp
and
ret
shll
adc
cmp
pop
ret
mov
sti
push
test
sbb
push
pop
outsl
dec
push
es
jge
push
jecxz
in
or
addr16
or
bound
arpl
xor
sub
das
clc
imul
test
push
hlt
mov
fistpll
js
fprem
add
incl
sub
addr16
fsubp
jns
sub
iret
les
cmc
outsl
outsl
jl
push
in
jno
add
int
jmp
or
lea
cmpl
sub
stos
xchg
cmp
sub
xor
xchg
icebp
push
cmc
sub
add
inc
xchg
cmp
jecxz
and
pop
out
ja
xchg
adc
popf
pusha
sbb
sub
rcll
dec
mov
out
lods
shll
cmpsl
adc
mov
sahf
popa
mov
or
push
mov
je
mov
jae
test
dec
sbb
sahf
add
dec
std
loope
inc
lret
insb
mov
inc
mov
outsl
es
lret
rcll
push
roll
aaa
mov
pop
scas
or
loopne
or
test
movsb
in
lods
movsl
push
pusha
ficoml
sub
incl
cmp
mov
icebp
jne
push
in
enter
enter
loope
shl
inc
aaa
aam
fdivrs
xlat
ret
push
push
dec
push
sbb
hlt
sub
ret
jmp
repz
imul
sub
movq
and
lods
jecxz
or
movsb
pop
xchg
lahf
push
or
jbe
test
adc
sbb
mov
hlt
sbb
mov
leave
pop
adc
nop
add
dec
imul
mov
bound
cwtl
adc
mov
int
arpl
enter
jo
sub
sub
cs
cli
cmp
mov
shll
sti
adc
cmovb
xchg
and
shll
shl
cmpsb
mov
shl
push
jle
sub
lret
push
shr
shlb
push
inc
cmpsl
dec
insl
or
lods
stos
imul
push
inc
push
dec
notb
call
mov
jg
shrl
dec
push
mov
imul
shr
inc
sbbl
into
jp
orb
or
sbb
lahf
cmp
and
sub
popf
xorl
sub
orb
mov
adc
dec
mov
jbe
sarb
jno
notb
das
clc
sti
or
ds
sub
sub
and
ljmp
xchg
inc
xchg
addb
and
mov
cld
mov
mov
xor
inc
out
stos
inc
add
push
shl
mov
xor
ja
imul
ljmp
sarb
fisttpll
in
or
mov
or
xor
cmpsl
jle
xor
xor
mov
pusha
icebp
loope
jne
pusha
pop
adc
lods
and
and
xor
fimull
pop
sub
push
cli
addr16
into
shrl
lret
pop
mull
pop
flds
inc
xchg
pop
xchg
or
cmp
xor
nop
cltd
pop
sub
daa
sbb
cwtl
ret
xchg
push
mov
int
fstpt
push
mov
mov
lods
push
or
ds
imul
cmp
sarl
jp
cmp
adc
out
fsubr
push
stc
push
pop
inc
dec
cmpsb
xchg
movsb
mov
sahf
xchg
test
nop
pop
daa
jne
incb
cmpsb
lret
dec
ds
out
mov
or
outsl
sbb
iret
xchg
xlat
mov
adcl
add
aaa
push
pop
dec
stos
mov
mov
jmp
cs
test
dec
xchg
lret
decb
push
push
pop
add
out
imul
mov
andb
in
movsl
mov
sbb
sub
push
lds
pop
jmp
inc
sub
incl
lods
sub
les
imul
mov
jbe
sbb
outsl
int3
add
aam
xor
das
cwtl
bound
push
je
mov
add
aam
push
dec
pop
in
jmp
repz
sbb
testl
fisubrs
test
insb
xchg
cs
adc
in
stos
dec
jmp
sbb
mov
xchg
add
inc
mov
ds
xor
mov
mov
cmp
test
push
lds
adc
jne
ret
mov
or
or
cmp
call
int
test
jo
inc
jne
or
call
scas
shl
and
or
jno
jns
popa
jle
movl
and
ficompl
divb
rep
jae
adc
shr
mov
mov
fxam
ds
arpl
fbstp
add
mov
stc
nop
scas
inc
jnp
mov
scas
ljmp
and
les
rcrb
sub
outsb
int
out
out
scas
xor
call
mov
cmp
cmc
dec
cmc
push
xchg
pop
call
xchg
js
imul
imul
outsb
jecxz
inc
testl
out
rclb
jmp
sbb
adc
and
roll
lret
and
in
dec
mov
movsl
mov
leave
mov
mov
pop
and
mov
pop
mull
repnz
fsubrp
addl
or
sbb
lds
incl
mov
filds
jmp
imul
clc
and
xor
lods
nop
xchg
or
xor
test
test
sub
scas
test
mov
insb
outsl
repz
loopne
or
lods
test
ret
divl
shr
mov
ss
xor
aaa
dec
roll
outsb
pop
pusha
mov
inc
sbb
or
sub
mov
push
adc
inc
shlb
cld
mov
sub
dec
cmp
rcrl
push
sbb
out
rcr
push
std
movsb
aad
stc
or
or
inc
or
out
ds
fsubr
jmp
or
mov
ja
pushf
xor
or
xchg
stc
repz
in
add
mov
adc
xchg
sub
movl
pslld
adc
out
xchg
aaa
aaa
mov
rolb
lret
xor
mov
outsl
decl
sub
leave
fucomip
pusha
es
push
cltd
xor
jne
loopne
xor
or
jle
sbb
push
jns
test
rol
movsb
imul
add
es
dec
add
pop
scas
cmp
inc
fs
divb
nop
add
push
fcoms
adc
inc
mov
cmp
pop
in
cwtl
jp
mov
or
sbb
fnop
and
ret
dec
lahf
or
fmuls
sub
inc
dec
jle
into
inc
push
mov
loope
jle
cmp
mov
mov
push
or
pop
arpl
xchg
sbb
enter
cltd
nop
cmp
leave
sub
je
stc
mov
les
divl
mov
pop
cmp
das
mov
pop
sub
int3
mov
add
test
pop
pop
jnp
jo
stos
notl
xor
adc
adc
shr
lret
inc
cmpl
xchg
fisttps
push
sbb
in
pop
jg
lds
or
fdivrs
mov
jne
jecxz
xor
loop
mov
mov
xchg
sub
int3
xor
mov
out
dec
push
es
and
inc
inc
mov
xchg
pop
dec
repz
xor
popf
ret
loope
bound
jb
popf
mov
mov
add
nop
add
cmp
cltd
xchg
xlat
sar
pop
rcl
pop
cmp
mov
sbb
in
mov
jno
inc
int
ret
lret
enter
cld
lock
insb
testb
jbe
popa
xor
outsb
xchg
or
adc
mov
stc
icebp
xorl
imul
bts
iret
sbb
jge
xchg
sbb
add
aad
xor
popa
inc
adc
out
add
pop
adc
inc
pop
sub
enter
dec
into
aaa
icebp
lret
dec
dec
pop
mov
icebp
addr16
mov
cmp
loopne
inc
mov
bound
jo
or
pop
add
inc
lret
cmp
and
dec
call
cmp
outsl
sub
pop
cmpsb
xchg
dec
mov
imul
or
jg
mov
lods
jbe
push
cs
cmp
cmc
push
ja
pop
aad
push
mov
mov
push
sbb
jecxz
lahf
mov
out
pusha
pop
mov
xchg
in
and
sbb
pushw
test
loop
mov
cmp
jl
sub
stos
mov
lea
add
fdivrs
int
adc
sahf
xor
fnstsw
inc
loop
icebp
sti
inc
mov
int3
popf
int3
xchg
gs
and
mov
jl
and
pop
add
push
in
sub
xor
test
mov
and
int3
sar
cmc
test
pop
mov
insb
sub
repz
xor
outsb
cmpsl
push
and
fldenv
add
jae
and
push
push
out
push
push
cmp
pop
cmp
cmp
ljmp
test
lods
mov
push
jbe
jne
outsb
push
ss
xchg
jnp
inc
and
push
mov
scas
in
inc
stc
imul
pop
mov
mov
and
mov
mulb
sbb
fisttpl
pop
jae
pop
cmpsb
sub
mov
mov
ss
nop
outsl
and
test
ret
jo
lods
stos
sub
fcmovnu
xchg
mov
pop
mov
lods
outsb
inc
in
sahf
push
sub
dec
mov
cmovg
ror
adc
mov
shlb
adc
jge
sar
loope
xor
jne
pushf
sbb
push
mov
xchg
clc
jmp
imul
pop
sub
mov
cmp
cwtl
ja
es
xchg
lock
das
push
push
repnz
iret
jno
fiadds
jb
ja
imul
push
inc
clc
andl
jns
xorl
mov
out
push
in
jns
xor
fistpl
mov
mov
mov
mov
jecxz
cmc
scas
stos
mov
sub
std
stc
mov
in
or
daa
outsb
pusha
into
mov
lea
shlb
test
push
into
pop
das
sub
mov
cwtl
fwait
cli
mov
xor
pusha
cmp
sub
mov
ss
shlb
dec
push
cmpsl
cmp
adc
daa
out
mov
xor
shll
push
pop
test
mov
lods
test
xchg
lds
adc
dec
mulb
mov
dec
out
jne
add
ficompl
xchg
divl
mov
pop
or
stc
je
pop
xlat
notl
jmp
pop
outsb
jge
add
call
mov
jp
dec
xchg
xor
test
je
or
orl
popf
xor
js
pop
or
je
xchg
mov
daa
cltd
or
and
cmpsl
push
mov
xor
push
outsb
inc
push
movb
jmp
out
sbb
scas
aam
cld
inc
ret
in
lock
jmp
cmpsb
cmp
dec
imul
fstp
dec
lret
daa
pop
and
or
pop
data16
cmp
cmpsl
test
lds
mov
aaa
cmc
jne
xor
js
mov
imul
sti
push
or
dec
dec
stc
sub
leave
xor
mov
pop
das
add
push
jecxz
lods
mov
sarb
imul
imul
xchg
icebp
fsubr
stos
xor
mov
push
xchg
stos
xchg
imulb
xchg
cmc
movl
fwait
jo
lcall
ret
xchg
sahf
repnz
xor
mov
inc
mov
mov
lods
cld
xor
push
mov
pop
pop
stos
stos
cmpsb
cmp
ljmp
movsl
sub
fistpll
adc
or
add
cmpsl
mov
rcrb
and
pop
loopne
adc
dec
add
mov
jo
jecxz
cli
cmp
lods
or
sub
xchg
outsb
xchg
sub
or
iret
inc
sub
xor
sub
mov
scas
add
xor
sub
mov
pop
add
aam
fs
jmp
fisttpll
xlat
sub
fistpl
or
jecxz
out
test
es
or
jmp
lcall
pop
sahf
sub
jmp
dec
call
ja
popa
stos
fcomps
jbe
adc
lahf
or
xor
add
mov
cs
cltd
outsb
xchg
push
jnp
xor
sti
cmp
nop
popa
test
push
cld
andb
dec
mov
insl
xor
in
cmp
xchg
nop
call
das
jl
xor
dec
xor
dec
les
lret
jne
mov
mov
inc
enter
cmpsb
sub
mov
clc
lock
xchg
mov
les
pop
sbb
cltd
mov
es
push
lahf
xor
orb
stos
pop
mov
popa
popf
or
sbb
pop
xchg
mov
cs
dec
adc
mov
ja
movsb
and
insl
leave
cmpl
xor
jg
xor
cmp
testb
cmp
fisubrs
dec
insb
dec
xor
or
add
jb
adc
out
jne
pop
insb
stc
rorb
idivl
adc
ja
xor
pop
inc
mov
lods
repnz
ficoml
cld
mov
in
cmp
jmp
fwait
and
imul
jae
out
add
sub
jae
mov
add
pushf
push
loope
xchg
or
ficoms
mov
jbe
lret
add
cmp
mov
add
mov
mov
or
lds
into
ljmp
xorb
dec
inc
lret
xor
push
and
test
test
movsb
mov
cmp
jecxz
and
aam
lret
popf
enter
cltd
popf
mov
mov
mov
movsl
sbb
insb
sub
test
sub
dec
sbb
test
or
vpaddusb
sub
std
int
jne
push
dec
cmp
out
xchg
outsl
ss
inc
inc
les
lods
loopne
adc
add
jnp
sub
lods
rcl
jo
or
loope
test
or
jle
test
scas
daa
ljmp
jo
push
adc
dec
mov
iret
scas
or
popf
nop
cmc
mov
or
adc
mov
push
aad
imul
jb
mov
jno
fwait
ja
imul
sbb
loopne
dec
stc
adcl
add
sbb
test
je
cwtl
inc
int
push
or
test
aas
ljmp
mov
mov
jge
repnz
sbb
sbb
testb
addr16
mov
movq
pop
shll
mov
int3
inc
rcrl
and
inc
sbb
sbb
out
pusha
shl
inc
xchg
in
dec
andl
mov
out
lea
test
test
fmulp
in
in
ds
icebp
std
mov
jg
stos
mov
cmp
out
fildll
lods
and
stos
adc
pop
pusha
jge
push
mov
xorb
xchg
movsl
lcall
les
sbbb
dec
xchg
mov
mov
and
pusha
pop
shll
loopne
pop
xchg
ror
jb
fsubl
xchg
sti
and
insl
test
pop
mov
push
dec
imul
arpl
repz
cltd
mov
aad
ljmp
push
fsubrl
mov
addb
cmp
sub
icebp
push
jb
loop
fiaddl
out
adc
cwtl
in
loope
cs
int
shll
mov
inc
iret
incl
jecxz
push
push
scas
adc
mov
pop
cmp
sub
shl
sbb
ret
stos
in
cmp
or
xchg
pop
outsl
in
push
jl
push
dec
cld
andl
sbb
inc
test
push
mov
cs
scas
hlt
nop
dec
pop
test
stos
jg
fadds
push
push
jbe
jbe
fs
fcoms
inc
push
xchg
das
or
sub
mov
adcb
aam
pushf
imul
and
imul
mov
mov
xlat
ljmp
enter
cwtl
bound
ret
imul
adc
icebp
inc
xchg
sbb
fildl
pop
shl
dec
fidivrs
jl
push
mov
jp
adc
fdivs
jmp
sub
pusha
imul
inc
push
addr16
inc
leave
sbb
dec
cli
and
xchg
lods
mov
leave
sub
mov
mov
and
xor
test
mov
mov
stos
push
jns
insl
xchg
iret
cmp
into
ljmp
or
lahf
nop
outsb
or
adc
inc
out
cmp
iret
jecxz
repnz
or
and
lods
loope
push
imul
out
mov
pushf
mov
subb
pop
mov
pop
cli
xchg
jp
orl
mov
sbbl
cs
xor
xor
sub
stc
ret
adc
adc
and
sbb
and
push
fnstsw
gs
ljmp
pusha
out
xchg
cmp
dec
cld
loope
add
and
mov
fsubrp
cltd
adc
je
sti
addr16
adc
imul
test
pop
icebp
sbb
cmpb
in
jbe
shrl
insb
and
push
mov
in
leave
in
cmc
xor
inc
test
pop
shll
stc
dec
stos
push
mov
out
mov
les
mov
dec
jmp
in
push
xchg
frstor
add
add
js
movsl
and
mov
fcmovu
fs
xchg
popa
incb
add
and
mov
leave
ja
jecxz
and
dec
cltd
sub
push
pop
rorb
jne
notl
xor
ljmp
adc
pop
iret
pop
sbb
mov
std
xor
sti
adc
xor
xor
jmp
inc
jp
xor
xor
cltd
dec
xorl
push
mov
subl
outsb
sub
popa
jbe
mov
dec
jl
mov
mov
divl
rcr
xchg
mov
xchg
in
mov
sbb
jbe,pn
adc
mov
inc
ret
mov
mov
repnz
cmp
xchg
or
leave
jae
test
sub
in
imul
scas
jno
xor
es
cli
adc
push
dec
jp
dec
nop
adc
inc
les
adc
sub
sar
jg
add
push
jbe
sbb
cmc
je
movsl
jns
or
insb
jge
mov
mov
pop
nop
loopne
dec
xchg
sbb
ljmp
fcom
xchg
mov
and
mov
pop
mov
or
mov
xor
push
xlat
punpckhdq
mov
xchg
xchg
aad
insb
inc
maskmovq
imull
and
std
jecxz
dec
cwtl
nop
pop
divb
adc
stc
cmpl
jmp
outsl
ds
je
adc
dec
shrb
cmpl
add
call
xor
push
scas
and
leave
pop
ss
out
fs
add
ljmp
and
jge
dec
dec
div
icebp
lcall
xchg
xchg
mov
and
and
pop
pop
int
icebp
jne
push
out
jecxz
das
jl
xchg
pop
inc
sahf
ja
bound
mov
dec
test
mov
mov
lret
jg
or
insl
out
ljmp
mov
jle
jge
pop
pop
xchg
loope
fsubrl
movsb
std
xchg
xchg
or
mov
mov
jle
movsl
popl
pop
xchg
ljmp
mov
mov
daa
stc
nop
adc
cmp
fldl
adc
loope
sbb
clc
push
mov
inc
unpckhps
mov
daa
mov
test
sarb
decl
in
imul
vmovntdq
jnp
insl
mov
subb
pop
xchg
into
pusha
xchg
adc
push
leave
push
inc
aaa
mov
popa
dec
icebp
lret
pop
cli
adc
cmpsb
dec
jp
jmp
clc
ja,pt
mul
sbb
shll
clc
dec
pushf
sbb
fildl
ljmp
sbb
jp
test
out
lcall
dec
xor
ds
push
push
dec
or
mov
add
adc
movsb
adc
mov
nop
dec
fucomip
cmp
push
in
test
sub
fsubl
add
push
dec
mov
insb
fs
das
mov
xlat
out
ds
movsl
fldl
pop
stos
js
sarb
push
aad
pop
test
adc
xchg
cs
xchg
mov
mov
and
and
mov
push
jo
popa
hlt
push
cmp
cmp
rcrb
jbe
jp
hlt
shlb
xorl
mov
pop
in
mov
xor
push
negb
leave
dec
dec
push
or
aaa
pusha
jbe
dec
ljmp
repz
roll
std
dec
pop
into
inc
outsl
pusha
notl
ja
rcll
mov
lods
jb
xor
pop
fiaddl
stos
jnp
stos
lahf
jp
lods
sbb
out
call
popa
sub
mov
inc
dec
dec
je
stos
loopne
mov
out
cli
adc
adcl
jnp
push
dec
push
int
push
sarb
mov
dec
xor
shll
movsl
or
cmp
pop
inc
inc
test
repnz
xor
lahf
mov
cmp
and
fidivrl
xchg
mov
aas
mov
idiv
aam
dec
imul
push
stos
inc
mov
dec
sbbl
or
fwait
and
jle
shll
sub
test
ljmp
fwait
in
or
pusha
inc
sub
cmp
negl
push
mov
and
pop
adc
dec
adc
cmp
shlb
mov
movsb
mov
ret
pusha
mov
lds
sti
pop
dec
fbstp
push
xchg
sub
mov
pop
sbb
push
mov
mov
inc
pusha
leave
icebp
jle
fidivl
fsubrl
gs
and
or
in
pop
sbb
fs
pop
xchg
ret
cmpsl
mov
pop
pop
rcll
mov
push
test
xchg
cmp
mov
push
loope
dec
movsl
cmp
mov
adc
jb
cmp
gs
pop
jno
mov
or
add
in
inc
out
jge
push
mov
add
jmp
jmp
imul
out
insl
sub
lea
adc
or
into
sbb
push
test
fs
add
fdivs
sbb
clc
dec
jle
popf
das
push
es
pop
adc
test
loope
xor
jno
scas
inc
adc
sub
test
imul
push
xorl
les
movsb
pop
pop
fistpll
push
pushf
xchg
pushl
adc
inc
lds
es
or
pop
pop
dec
add
ret
mov
mov
arpl
mov
adc
repnz
out
xor
sub
fsubrp
and
shll
adc
inc
lods
and
loope
mov
lock
pop
pop
mov
movsb
jp
in
jb
movsb
mov
xchg
cmp
adc
int
movsb
arpl
push
out
jmp
or
xorl
stc
fstl
pop
mov
int
push
jns
in
aaa
shll
mov
mov
xchg
cli
jmp
sub
repnz
loop
pop
mov
mov
or
sahf
sbb
push
arpl
pop
cmc
aas
cmpsl
and
ret
lcall
sub
cltd
dec
sbb
movsb
jp
dec
push
xor
pop
dec
arpl
jl
mov
jae
mov
int3
fsts
mov
shrl
sub
out
cmp
cmp
or
inc
pop
rcrl
inc
das
cmpsl
mov
mov
lcall
popa
add
idivb
jne
es
pushf
and
fs
idivl
jl
enter
insl
decl
std
mov
insl
sarb
dec
scas
jns
sub
pop
mov
or
mov
xor
pusha
xor
dec
clc
dec
xchg
and
enter
cld
sti
push
push
dec
int3
add
push
lods
xor
sub
xchg
lret
or
cmp
fisttps
sti
lret
outsl
test
shr
jp
pushf
push
xchg
imul
roll
push
and
adc
shll
mov
xchg
inc
insb
jns
pop
push
mov
and
nop
push
push
iret
sub
adc
addr16
hlt
sbb
stc
or
mov
xor
out
inc
jl
lock
das
xchg
sarb
call
lods
mov
inc
cld
mov
jmp
dec
pop
adc
pop
inc
ret
pop
repnz
sbb
rclb
sub
jae
mov
mov
mov
add
add
mov
cmc
sarl
aad
adc
cltd
mov
ljmp
fistl
xchg
mov
sarl
xor
mov
andb
loop
nop
jmp
cmp
out
fdivs
in
std
subb
add
push
xchg
nop
imul
push
pop
jbe
push
gs
mov
popl
lcall
mov
inc
push
or
fisubrs
mov
test
xor
mov
dec
inc
test
adc
push
inc
arpl
dec
das
divl
test
insl
push
rolb
dec
wrmsr
lahf
inc
pop
subb
loopne
pop
aam
test
mov
popl
jl
inc
mov
and
mov
pop
in
inc
insb
push
enter
lds
jae
or
xor
bnd
incb
popf
ret
lods
test
aad
push
jge
push
es
mov
icebp
outsb
mov
das
sub
mov
repz
inc
pop
cmpsb
in
cmpb
lret
push
ljmp
mov
icebp
pop
inc
add
mov
ljmp
cmpsb
mov
jl
pop
xchg
fsubrl
clc
repnz
adc
mov
cli
insl
lcall
pop
mov
testb
nop
loope
add
adc
inc
cmp
aas
pop
movsl
in
lea
dec
mov
clc
cmc
add
push
dec
sbb
inc
mov
ret
hlt
xor
jg
sub
inc
push
mov
out
cmpsl
push
insl
or
out
jmp
mov
inc
push
dec
push
sti
fmuls
pop
sbb
add
inc
jecxz
in
outsb
pop
inc
dec
mov
mov
andb
in
popa
lea
xor
or
or
jb
loopne
leave
mov
xor
test
out
lods
aam
ret
mov
fs
in
push
orl
push
sub
cmp
pop
xchg
rolb
xor
pop
fimuls
cs
add
leave
ficompl
test
xor
repz
pop
ja
js
adc
cmpsl
jg
cmp
push
dec
mov
sub
jb
outsl
xor
pop
push
dec
movsl
mov
xor
je
adc
mov
scas
or
dec
adc
pop
sub
sbb
cmp
push
xor
jbe
pop
fs
rolb
rcrl
cmpl
daa
icebp
and
loope
rcrl
lea
and
and
mov
jle
push
rsqrtps
orb
adc
scas
ficoml
jo
imul
dec
dec
fdivrs
clc
stc
cmp
inc
and
adc
jae
and
scas
xorl
adc
imul
call
fistps
in
shll
push
es
mov
out
push
test
push
add
cwtl
inc
and
or
shl
push
mov
iret
inc
inc
sub
inc
pop
xor
xorl
xchg
add
adc
xor
lret
xchg
out
cwtl
sbb
dec
lahf
mov
mov
pop
mull
sbb
sarl
dec
in
xchg
pop
test
pop
subb
popa
int3
mov
pop
xchg
fsubs
xchg
int3
scas
add
mov
pop
out
mov
push
and
pop
cmp
or
pusha
push
cmp
push
or
adc
lods
xchg
in
inc
push
cmc
sbb
or
jecxz
xor
mov
fcomp
mov
sub
outsb
xchg
mov
or
movq
mov
and
jb
fstps
lret
jno
lods
popf
xor
rorb
js
nop
xchg
fs
mov
xchg
jmp
ret
jnp
in
mov
cs
mov
pop
adc
add
arpl
jp
popf
in
push
imul
jae
adc
push
ljmp
cmc
or
xchg
test
and
cmp
jecxz
add
sbb
adc
aad
rcrb
sti
fs
mov
pop
aam
test
lret
mov
call
pop
rcl
cli
pop
fmuls
ret
enter
push
mov
dec
mov
cltd
push
lea
fbld
rcrb
jo
testb
fcoms
aas
sarb
std
lods
adc
call
adcl
lret
xchg
sahf
popf
lods
pop
mov
insb
and
push
xchg
mov
outsb
pop
cmc
arpl
fidivrl
ds
pop
out
mov
in
jmp
bound
push
adc
outsb
test
sbb
fcmovnbe
ss
fiadds
shll
lods
adc
movsb
inc
fcmovnb
ljmp
push
push
nop
leave
mov
daa
dec
outsl
out
inc
push
hlt
inc
xor
rcl
mov
or
hlt
mov
cmp
out
fsubrp
mov
in
cmc
dec
rolb
call
pop
sbb
inc
pop
push
shll
lret
loopne
pop
repnz
test
out
mov
rcrb
pop
push
data16
mov
cmpsl
push
pop
push
lret
mov
mov
mov
out
jno
push
insb
fs
imul
sbb
sbb
stos
subl
or
hlt
shl
dec
sbb
ret
sub
ret
int3
adc
lods
inc
cld
xchg
mov
add
daa
outsl
pop
movsb
divb
dec
rolb
mov
add
shlb
mov
mov
leave
pop
push
adc
aad
lds
hlt
inc
repnz
pop
mov
xchg
jmp
push
cmp
cmpsb
aaa
jbe
xchg
push
call
int3
in
mov
loopne
mov
hlt
gs
dec
and
xchg
inc
mov
sub
mov
nop
sbb
mov
pushf
mov
scas
test
mov
ret
aaa
sbb
mov
cld
aaa
fdivrl
lcall
dec
pop
sarl
insl
inc
repz
jle
xor
cmp
cs
xchg
push
mov
xor
scas
cmc
test
movsb
jle
jmp
rcll
ss
mov
push
mov
das
xchg
xor
test
lds
xor
push
xchg
pop
pop
dec
xor
lods
data16
out
sbb
lahf
loop
sbb
outsb
cs
pushf
in
jno
mov
into
adc
sub
rolb
mov
sub
pop
xor
jns
jle
sbbl
dec
mov
dec
test
clc
imul
sbbb
push
cmpsl
into
mov
jge
inc
jmp
popf
loope
dec
add
int
push
sub
stos
cmp
cli
aam
inc
mov
aam
add
ljmp
cmp
sub
push
and
mov
push
imul
lea
js
adc
shl
daa
fisttps
pop
xor
inc
sbb
sub
shrb
pop
pop
fwait
aad
mov
pop
jl
push
jle
pusha
pop
fistpl
and
xchg
rcrb
pusha
in
mov
cmpsl
ret
sbb
adc
push
hlt
xchg
sbb
fidivs
aas
shl
nop
mov
xor
inc
lahf
cmp
clc
gs
lods
add
clts
xor
repnz
lret
dec
sarl
sub
dec
adc
mov
shll
mov
mov
jb
ljmp
add
es
orl
subb
jle
and
mov
aaa
cmp
xor
mov
jge
adc
fldcw
jae
pop
push
jge
out
add
mov
fmull
mov
mov
ja
jne
js
xorb
cltd
outsb
inc
out
hlt
data16
mov
cmpsl
cli
loope
jno
js
fs
fsts
hlt
andb
mov
and
dec
scas
cmpsb
or
sbb
cwtl
pop
scas
jo
call
add
sbb
and
jl,pn
les
fbld
mov
sub
js
jb
sbb
mov
jp
shll
lcallw
and
push
mov
inc
js
cmp
and
sbbl
test
out
push
loope
mov
lds
push
pop
inc
pop
mov
mov
or
cmpb
insb
add
fisttpll
mov
adc
sbb
cmp
lret
es
sbb
fstpl
ja
and
jns
add
incl
sbb
test
cmp
dec
sbb
sub
sub
bound
cld
xchg
cmp
pop
xor
out
mov
jmp
mov
push
dec
jle
std
nop
mov
mov
enter
sbb
js
arpl
pop
dec
mov
push
sub
add
gs
fwait
sub
inc
adc
scas
and
lods
popf
loop
fnsave
mov
repz
jecxz
in
dec
sbb
jae
mov
cli
mov
xchg
and
sbb
sub
push
fiaddl
cmpsl
pop
jg
stos
dec
or
aad
mov
andb
movsl
cmp
pop
sbb
cmp
test
pop
mov
pop
jmp
fldt
ret
lea
sbb
adc
lea
iret
daa
add
leave
enter
mov
pusha
mov
test
lea
test
xchg
negb
scas
adcl
sbb
jmp
jl,pt
arpl
les
stc
orb
dec
cld
mov
in
insb
inc
popa
js
mov
pop
xor
dec
insl
adc
pop
jmp
rcl
jmp
push
imul
lahf
cmp
inc
pop
dec
je
scas
xchg
into
fimull
mov
jne
mov
jne
add
adc
and
adc
mov
push
stos
loop
out
jno
imul
dec
shll
add
cmp
mov
in
jp
iret
test
xchg
addb
imul
push
push
xchg
in
push
push
imul
jbe
push
pop
jae
jmp
movsb
mov
xchg
mov
gs
inc
in
inc
stos
clc
pushf
jo
repz
popa
pop
out
frstor
lock
test
in
mov
xchg
pop
cli
push
dec
ficoml
jl
pop
xor
and
andb
aad
pop
clc
jbe
daa
mov
dec
and
mov
mov
out
jecxz
push
mov
sarb
outsb
cmp
dec
movsb
adc
inc
cmpl
pop
sbb
adc
cmpl
xchg
push
int
ss
adc
mov
push
ja
xor
dec
mov
or
inc
adc
fldcw
lret
add
negl
sub
std
cmpsl
shr
push
mov
lahf
das
nop
push
cmp
lea
or
and
iret
jl
cmpsl
es
cmc
pop
add
lret
xchg
inc
add
cmp
insb
fs
cmp
ja
push
fsubl
mov
mov
outsb
mov
lea
insl
sub
pop
shll
sbb
je
jnp
outsl
push
or
lods
cmpsl
sarl
mov
insl
jns
jno
repz
stos
pop
push
outsl
push
idivb
test
cmpsl
cmp
and
out
push
dec
push
out
adc
inc
sti
cli
repnz
clc
add
jne
dec
ret
pop
dec
dec
vmwrite
cli
dec
sbb
jg
fldl
sti
xchg
jae
push
xchg
ss
push
jmp
and
lock
xchg
pop
jl
iret
pop
or
sar
inc
push
mov
ret
and
sbb
cmp
xor
sub
fildl
mov
mov
inc
ficoms
inc
popf
ds
loop,pt
sub
cmpsb
jle
andl
pop
clc
add
sub
adc
sbb
scas
xchg
mov
xchg
cmpsb
bound
imul
cld
mov
mov
inc
dec
mov
leave
mov
xor
dec
mov
sbb
mov
pop
outsl
movsb
pop
or
and
ret
in
fidivrl
popa
scas
daa
jne
or
sarl
out
aaa
arpl
lds
fisttps
xchg
push
or
gs
mov
mov
cwtl
es
divb
dec
daa
mov
lock
stc
in
mov
loopne
lahf
jb
div
jl
les
popf
bnd
mov
or
rorl
push
push
dec
sbb
push
push
dec
ja
inc
lret
mov
xchg
out
inc
int
cmp
int
addb
cmp
pop
sbb
mov
push
test
adc
cmpsb
je
jno
and
inc
scas
arpl
push
es
push
xchg
imul
inc
dec
je
xor
inc
das
test
mov
ds
push
scas
mov
subl
add
cmp
push
fdivp
out
xor
or
cltd
cmc
imul
scas
shlb
das
std
fisttps
enter
js
pop
add
xchg
mov
xor
ja
lods
fcoml
xor
sbb
cmp
fidivrs
and
aam
xchg
and
fnstenv
inc
jns
or
loope
fs
dec
nop
call
scas
push
inc
test
xlat
add
and
lret
push
push
mov
movb
js
pop
jns
jns
and
cltd
push
xchg
out
mov
or
leave
push
stos
xchg
daa
mov
enter
lahf
mov
test
fldcw
mov
shll
add
sub
and
mov
adc
and
mov
xchg
add
pop
nop
dec
inc
test
mov
lret
pop
xor
sti
lret
dec
pop
in
add
lret
xchg
arpl
pushf
fsubrl
mov
inc
dec
in
jl
jo
imul
jns
das
int3
xor
cmp
nop
cmc
es
fcomps
xor
mov
movsb
in
lods
enter
hlt
iret
push
dec
mov
and
adc
mov
jbe
out
xor
add
dec
mov
shrb
sbb
dec
test
and
std
cmpsl
mov
lods
xor
aad
and
ds
mov
and
jl
jmp
inc
xchg
shlb
pusha
cmpsl
xor
imul
lret
dec
pop
or
fnstsw
adc
add
icebp
test
pop
fnstenv
subb
nop
xor
push
xchg
mov
call
push
sbb
int
fmul
ss
xchg
subl
shl
pop
aam
jne
pop
fsubl
in
cmp
imul
adc
mov
xor
cmp
adc
cld
ret
sbb
sbb
sbbl
scas
repnz
loope
jo
in
shll
test
rcl
add
into
repz
jge
jg
dec
xchg
xor
push
pinsrw
pop
insl
mov
bound
into
mov
shll
xchg
ret
sbb
add
jbe
arpl
xor
or
outsl
adc
and
int
ljmp
mov
aas
pop
in
and
cmpb
inc
out
fimuls
dec
mov
mov
fbstp
hlt
popa
mov
out
inc
pop
mov
or
dec
jae
stc
inc
sbb
push
push
pushf
aas
out
out
mov
imul
repnz
fisttpll
test
and
stc
mov
dec
ret
push
cmc
aam
cmp
mov
xchg
add
xchg
xchg
push
aaa
sbb
fs
aaa
and
push
or
add
mov
inc
test
sarl
mov
pop
inc
mov
xor
test
cmp
add
loop
and
jmp
sti
xchg
xchg
mov
into
and
call
gs
cmpsl
dec
jle
scas
push
pushf
mov
and
cmp
out
ret
dec
mov
dec
ds
push
movsb
insl
pop
xlat
nop
rcll
push
arpl
push
cmc
dec
repz
out
pop
in
scas
out
mov
js
jo
sub
loopne
mov
cmpsl
stos
pop
pop
fisubrs
std
sbb
ja
lcall
dec
imul
insb
push
mov
std
push
xorb
aaa
pushf
sbb
outsb
negl
mov
xchg
cwtl
mov
in
lahf
inc
mov
cwtl
pop
in
xchg
test
pushf
cs
out
pushf
sub
inc
sti
sub
orb
or
dec
divb
jg
cmp
rorb
push
and
insl
stos
movsl
shlb
add
aad
stc
sub
dec
divl
inc
cltd
cmp
jle
and
cld
lods
movsb
push
sti
mov
xlat
aas
cmp
and
adc
ljmp
jo
daa
inc
nop
lea
andb
xor
mov
fiaddl
cmp
stos
test
int
fwait
push
inc
inc
mov
icebp
sub
cltd
xchg
mov
das
and
aam
sub
push
out
jecxz
enter
jae
fsubrl
cmp
and
aas
dec
lahf
call
sbb
mov
mov
dec
call
ret
pop
movsl
mov
push
fdivr
mov
xor
jg
or
add
mov
xor
iret
mov
lock
jo
push
pop
and
cmp
dec
xchg
imul
sahf
pop
sbb
add
jp
fists
mov
push
jmp
sbb
or
or
arpl
lods
adc
pusha
xchg
lods
add
cmp
mov
xchg
lahf
sub
cwtl
mov
ret
push
mov
sbb
jno
orb
das
cmp
fldcw
cmp
shrl
push
stc
push
xor
jae
and
adc
test
arpl
call
out
mov
jmp
jge
sub
ljmp
call
mov
call
mov
adc
jo
or
mov
adc
inc
loop
dec
jge
mov
lods
test
test
lods
rcll
dec
pop
mov
popf
shlb
popf
add
xor
in
sub
pop
imul
lahf
frstor
inc
mov
or
mov
xor
xor
xchg
les
jns
ds
and
fs
push
push
mov
das
and
aaa
pop
addb
pop
push
fxch
shr
sahf
lcall
aam
pop
mov
cmp
or
stos
or
pop
pop
add
fldl
dec
add
stos
push
dec
nop
push
nop
nop
jne
xorl
push
iret
sbb
dec
leave
decl
cmpsl
aas
mov
add
adc
cmp
lods
int3
xchg
mov
sti
mov
into
imul
xchg
add
mov
hlt
xor
ss
and
movsl
mov
rcr
gs
jne
sahf
lea
or
iret
filds
mov
ficomps
or
clc
outsb
push
dec
cmp
pop
mov
and
jno
add
cmpsl
or
insb
inc
push
sbb
imul
or
pusha
sbb
lods
shrb
movsl
sti
sbb
or
pop
xchg
jp
jg
jb
sbb
jo
imul
and
stos
pop
je
scas
or
mov
testl
std
pop
fstpt
test
cbtw
cmc
fstl
mov
cmp
fwait
xor
js
ficomps
jl
mov
aad
lret
nop
xchg
lods
outsl
pop
xchg
dec
or
js
adc
test
push
insb
cmp
jg
rcl
xchg
inc
fwait
ret
pop
inc
or
mov
mov
xor
out
jmp
mov
adc
mov
aaa
xchg
mov
not
out
stc
xchg
rcrl
movsb
mov
xlat
out
es
ret
mov
or
int3
xchg
xchg
leave
punpckldq
idivl
xchg
shl
movsb
dec
subb
rolb
scas
mov
cs
xchg
adc
hlt
cmp
push
mov
or
xchg
bound
fnstenv
xchg
test
push
pop
dec
cmpsl
repz
xor
fadds
fwait
dec
pop
pop
xchg
jmp
pminsw
test
add
mov
jmp
aas
fisttps
ljmp
mov
xorps
shrb
inc
lds
or
pop
clc
loop
pop
sub
je
lods
cld
jb
les
ror
cmpb
push
inc
or
imull
inc
mov
scas
mov
ret
jb
das
loop
cmpsl
xor
sbb
cltd
sarb
fisubl
or
out
pop
mov
add
aam
sbb
xchg
sub
pop
mov
int
cmp
data16
lcall
adc
movsb
fisttpll
aas
inc
jbe
sub
cmp
jg
sbb
xchg
mov
lds
dec
adc
jo
mov
xchg
loop
inc
jae
add
divb
mov
daa
lds
lea
sbb
jns
sahf
mov
enter
outsb
pop
jl
mov
inc
fcompl
lods
aad
lock
loop
and
xor
jbe
and
shl
cmp
das
mov
enter
sub
ds
sub
push
sub
int
cmp
movsl
cs
sbb
mov
es
iret
pop
push
push
sbb
or
test
pushf
leave
leave
stos
inc
fistpll
lret
pop
jbe
jge
int
pop
shlb
or
pop
aas
mov
popf
mov
sti
jbe
cmpsb
cs
sub
or
mov
push
mov
sbb
jnp
add
iret
andb
fwait
in
sbb
dec
or
das
out
in
mov
jecxz
jl
sarb
and
ret
popf
in
jle
push
adcb
or
mov
lcall
in
xorl
and
insb
push
fisubrs
mov
test
push
adc
mov
mov
out
mov
cld
jbe
cwtl
out
add
mov
pop
push
jmp
fadds
mov
jle
int
divb
call
out
and
mov
and
and
inc
xchg
pop
xor
or
or
mov
mov
adc
cmpsl
addr16
icebp
ret
and
std
cmc
add
mov
nop
dec
mov
pop
cmpps
sahf
add
fnsave
fildl
pop
cli
add
sbb
xchg
mov
and
imul
sbb
jecxz
pop
sbb
inc
sub
jge
jp
lods
inc
mov
mov
or
mov
enter
sti
jmp
daa
movl
fcompl
pop
out
adc
fstps
xchg
out
ss
stos
icebp
iret
out
push
in
cwtl
sbb
cmp
pop
sub
push
insl
inc
dec
cmp
xchg
adc
pop
pop
pop
imulb
repz
addr16
mov
xchg
std
out
aam
and
sub
mov
and
jp
repz
cmp
mov
mov
lods
jno
orl
fnstsw
mov
addb
mov
pushf
pushf
fisubrs
sbb
repz
leave
mov
adc
sub
push
adcb
lods
xor
xor
test
cmp
jno
dec
aad
pop
mov
or
mov
jb
ficoms
mov
pop
int
adc
sbbl
mov
xchg
xchg
movsb
mov
movq
aad
pushf
cmpsb
mov
pusha
mov
stos
jae
xchg
sbb
cmp
loop
in
mov
sbb
mov
and
lret
and
movsb
or
cs
sahf
jno
in
cmp
cwtl
mov
das
mov
push
cmpsb
mov
jp
mov
xor
dec
pusha
inc
mov
cltd
jns
std
daa
adc
movsb
aam
add
pop
mov
cwtl
outsl
je
aas
mov
xchg
fcmovnu
cs
nop
adc
test
scas
sbb
push
inc
xchg
inc
call
dec
mov
mov
mov
dec
stos
inc
push
inc
push
ja
dec
outsb
movl
ljmp
adc
pop
cld
xchg
xchg
rolb
arpl
mov
push
add
rcll
fnstenv
push
pop
inc
addr16
jo
fsts
lock
into
sbb
pop
outsl
and
data16
pop
add
or
cwtl
mov
add
lds
sub
jecxz
insl
cmp
adc
into
daa
das
fwait
cwtl
cs
rcl
jno
adc
int
lods
adc
xchg
aam
ljmp
fmuls
mov
push
in
add
mov
cmp
or
loopne
lcall
cmp
arpl
pop
sarb
in
pop
test
insl
mov
lahf
jbe
mov
cmc
ret
arpl
lock
stc
lahf
outsb
cmpsl
sahf
sub
ss
adc
idivl
shrd
pop
fs
es
add
arpl
jo
xor
mov
xchg
pop
call
xchg
cmp
test
push
inc
pop
xchg
imulb
mov
add
inc
xchg
neg
push
push
popa
add
mov
lret
and
sbbb
and
add
inc
jo
arpl
push
aad
roll
push
fiaddl
in
sub
das
push
rol
pop
xorl
and
cs
xchg
outsl
xchg
data16
lret
and
adc
xchg
test
rorb
mov
icebp
or
cmpsl
imul
in
push
fistl
mov
js
sarb
imul
adc
pop
je
inc
adc
and
sbb
les
and
aas
mov
icebp
nopl
mulb
leave
sub
cltd
sti
push
pop
mov
cs
jne
adc
jns
cwtl
sahf
mov
cmp
mov
shrb
stos
je
lods
cmp
jnp
sti
xchg
sbb
and
add
inc
les
mov
pop
sarl
test
xchg
xchg
add
jns
pop
xchg
push
inc
int
mov
adc
mov
mov
push
lods
pop
cmpsl
lods
xlat
xchg
mov
inc
movsl
push
sbb
ret
lods
dec
adc
sti
cmp
mov
add
iret
or
sub
data16
rcll
dec
test
dec
outsb
stos
sub
pushf
lret
ds
inc
sbb
popf
insl
push
lret
sub
cli
arpl
push
les
addr16
mov
repz
icebp
fsts
xor
fnstcw
or
movsl
or
sub
sbb
outsl
cltd
lods
mov
dec
sub
and
jecxz
decb
inc
test
or
jns
add
stos
fsubr
ss
lock
test
fildl
jnp
or
pop
sub
jmp
add
mov
andl
jecxz
push
mov
jle
not
movsl
adc
pop
adc
cli
sub
push
inc
es
xlat
stc
loope
std
outsl
jne
push
ret
sbb
mov
jae
jg
jge
test
lret
in
mov
add
push
mov
enter
aad
mov
test
dec
cmp
inc
or
sbb
popa
iret
clc
push
fsubs
pushf
push
stos
push
pop
fwait
outsl
mov
mov
lock
dec
pop
mov
insb
out
mov
adc
push
dec
mov
scas
out
fstps
push
xor
or
iret
dec
mov
stos
push
mull
xchg
call
push
jle
and
test
sbb
inc
push
and
jp
lock
xor
jg
inc
sub
in
push
mov
mov
ljmp
jae
daa
test
shll
dec
pop
ror
mov
repz
cmp
dec
insl
pop
pop
mov
xchg
xor
stc
seto
pop
ss
inc
sub
cmc
stos
dec
mov
outsl
mov
mov
iret
les
push
lods
fildll
es
cmpsl
xchg
jae
mov
jmpw
mov
xchg
mov
loop
adc
dec
iret
pop
loope
loopne
hlt
sbb
movsl
mov
mov
pop
jb
mov
inc
cld
pop
or
aam
pop
insl
into
shrl
mov
fidivs
fcmovb
movsb
shll
fmuls
ds
test
mov
fs
cli
pop
inc
mov
cmp
sbbb
je
jne
stos
notb
test
mov
inc
int
jmp
or
jae
pusha
mov
clc
insl
push
cmp
dec
leave
in
xchg
sbbl
push
pop
xchg
pushl
les
sar
mov
iret
mov
notl
movsb
xor
push
jge
pushf
dec
pop
mov
lret
outsb
mov
push
jno
repnz
ret
cmp
jle
adc
cmp
xor
sub
or
mov
enter
lcall
push
mov
mov
mov
push
lret
test
jns
push
or
shlb
sub
cld
lods
loope
mov
out
pop
mov
xor
pop
enter
mov
imul
in
dec
cmpb
jp
cmpsl
frstor
sbb
push
jns
pop
dec
mov
pop
aaa
xlat
mov
lcall
rorl
leave
push
pop
jne
push
sub
jge
rcr
inc
repnz
lret
mov
push
repz
test
xor
mov
lods
mov
loop
mov
cmc
sbb
or
inc
or
cmp
or
mov
dec
imul
mov
push
ja
pop
xor
mov
fbstp
call
dec
pushf
jp
add
pop
mov
jns
jo
mov
inc
cltd
orb
add
aaa
dec
in
enter
fistl
and
addb
jecxz
sub
and
push
jmp
add
in
and
jp
add
mov
push
fwait
add
cmpsl
adc
pop
ja
out
push
std
stos
mov
jbe
lock
fcmovnb
cmp
add
scas
lret
std
adc
outsb
clc
and
cmc
shlb
sbbb
aaa
fadds
faddp
push
xorb
lret
cmpsb
cli
movsl
or
or
adc
mov
xlat
adc
xor
nopl
xchg
stos
dec
mov
mov
inc
dec
sub
or
pop
mov
xchg
shr
fyl2x
out
pop
inc
jg
mov
lods
jb
cmp
xchg
inc
push
mov
adc
mov
into
fwait
and
out
test
cmc
stc
mov
lcall
pop
imul
fsubrl
pop
fs
xor
rorl
cltd
imul
xorb
das
into
mov
bound
rcrl
mov
xchg
subb
mov
jo
and
xor
pop
xchg
cli
cltd
stc
gs
mov
lret
mov
push
mov
clc
adcl
pushf
jbe
or
stos
mov
in
ds
fiaddl
frstor
stc
cmp
lcall
pop
cmp
xchg
xor
cwtl
pusha
pop
rclb
mov
jp
inc
je
or
aam
sahf
pusha
dec
test
add
jp
push
dec
xlat
ljmp
push
xor
nop
dec
dec
sbb
fs
int3
push
pop
lods
pop
sarb
ja
and
fidivrl
daa
movb
jecxz
pop
es
hlt
fwait
mov
sub
ja
out
xchg
jmp
adc
sahf
pop
aad
jmp
dec
in
jle
cs
or
scas
pop
dec
dec
jg
jle
push
dec
inc
add
icebp
cmpb
int
roll
pop
xor
stc
sub
clc
stos
fistl
dec
daa
stc
and
out
mov
and
adc
jb
mov
rcrl
fnstenv
push
cli
push
sti
dec
inc
add
sbb
nop
outsb
jae
cmp
xchg
out
jo
in
sbb
dec
test
jb
push
aad
or
pop
pusha
out
xchg
mov
add
pop
mov
dec
jb
popf
cmpsb
inc
jnp
out
sahf
andl
mov
dec
pop
imul
add
mov
pushf
cmc
addr16
adc
ret
cmc
or
repnz
cmp
aaa
sbb
push
wrmsr
mov
repnz
jno
sbb
cmp
jecxz
sbb
loopne
pop
xor
sahf
and
or
jb
loope
mov
out
jg
lcall
xchg
xor
inc
mov
icebp
iret
lret
in
roll
movsb
fisttps
lahf
stos
pop
ja
sub
shl
mov
dec
jno
outsl
push
add
ljmp
insb
push
pop
push
mov
inc
xchg
sub
ffreep
out
push
push
cltd
sbb
sub
test
fdivrs
lcall
push
fsubl
add
enter
stos
and
cs
xchg
pop
sbb
adc
fmull
out
lcall
lods
inc
jae
cmc
fdiv
jae
sbb
jnp
fnstenv
xchg
rorl
mov
mov
pushf
pop
add
fisubl
inc
daa
test
sbb
jecxz
int3
mov
add
clc
mov
jo
clc
xorb
popa
pop
xchg
inc
jno
mov
sbb
dec
enter
jp
inc
int3
lcall
or
out
jge
mov
lods
jl
xor
rclb
mov
ss
pop
inc
imul
and
pop
shr
add
pushf
jmp
cli
mov
cltd
mov
popa
adc
xor
dec
arpl
xchg
jl
xchg
enter
mov
inc
adc
or
push
pop
mov
lock
sbb
pop
stos
fdiv
inc
mov
lods
adc
outsb
inc
sub
pop
fildl
cwtl
lea
negl
add
or
and
mov
std
in
out
lds
jns
sub
fidivs
fcom
mov
push
and
add
rclb
in
mov
add
jae
sbb
mov
sub
stos
pop
incl
push
mov
xor
jg
scas
or
mov
stc
bound
mov
pop
xor
or
loopne
pop
ret
jge
pop
loop
hlt
ds
sbb
cmp
rcrl
cmc
and
rcrb
jl
pop
out
int3
cmp
inc
jb
cltd
addl
stc
insl
xchg
leave
loop
ffree
lret
inc
adcl
repnz
fcmovu
add
and
sbb
popl
inc
sahf
xor
sub
out
das
test
andl
loopne
scas
stos
sub
or
pop
sub
jg
sbb
xchg
jne
add
xchg
mov
mov
mov
inc
adc
pop
fnstenv
push
fnstcw
adc
sbb
push
cmp
xchg
out
mov
imul
or
mov
cltd
into
jge
sar
mov
jle
and
dec
ljmp
in
dec
in
pop
cltd
pop
inc
and
or
push
xchg
call
jge
dec
es
push
and
sbb
sub
test
inc
outsb
push
jl
out
push
adc
stc
iret
jmp
push
testl
subl
in
pop
out
sarb
sbb
out
idivl
inc
insb
xchg
loop
stos
inc
jg
ret
sub
xchg
adc
lret
ljmp
mov
sti
loop
aas
test
dec
dec
xlat
pop
mov
inc
or
push
shrb
mov
sub
cwtl
jecxz
inc
jne
enter
out
cli
xlat
sbb
adc
mov
jecxz
push
jnp
jg
mov
xchg
movsl
jg
aad
sbb
ret
mov
push
fisttpl
aam
xchg
lret
mov
daa
or
arpl
and
jmp
or
add
ss
add
push
fisubrs
movsb
mov
rcll
xor
xlat
insl
xor
stc
jnp
xchg
test
std
inc
cmp
ror
lahf
inc
jp
shrb
ficompl
jmp
adc
arpl
push
stc
jns
stos
in
movsb
jbe
mov
or
out
loope
sbb
sbb
aas
imul
and
insb
mov
test
daa
jns
lret
clc
cmc
cmc
xchg
nop
mov
cmp
nop
sub
inc
sub
call
stos
add
xor
sub
scas
shrl
in
sbb
out
aad
lods
test
sub
fdivrl
pop
cld
lret
fistpl
cmp
push
movsl
pop
sbb
mov
jno
xlat
xor
hlt
scas
pop
cs
or
fldenv
lahf
push
push
das
data16
xchg
mov
testb
call
jns
out
sub
subl
out
test
out
adcb
jge
and
add
xchg
fwait
mov
mov
mov
push
inc
mov
cmp
lcall
rolb
adc
out
jno
gs
fidivrs
inc
rorb
cmp
pop
inc
pop
mov
cmpsb
in
aaa
popf
loop
sahf
inc
inc
into
xor
jae
lret
and
aas
cmp
shrl
jns
or
ja
sub
das
cld
stos
dec
mov
push
data16
imul
cmp
push
int
pop
add
dec
test
lock
js
fisttps
leave
fbstp
inc
scas
mov
xchg
push
push
xor
sub
shlb
dec
in
inc
add
aaa
outsb
cwtl
test
gs
mov
inc
fcmovbe
adc
arpl
rclb
cltd
push
dec
adc
and
inc
mov
jg
in
fwait
loope
int3
add
mov
adc
pop
ret
cwtl
and
jl
cmp
sbb
ret
xchg
lahf
ljmp
clc
push
adc
ds
mov
movsl
jp
jb
clc
orb
xchg
mov
adc
test
lods
repnz
or
movsb
pusha
into
scas
jae
xlat
cmp
and
mov
stc
mov
add
into
shlb
pop
sbb
sbb
es
icebp
dec
xchg
xor
aaa
shrb
or
cmp
xor
fwait
int
or
pop
mov
imul
jb
orl
cltd
jmp
sub
cwtl
lock
xlat
pusha
adc
xchg
pop
out
mov
gs
fiadds
cmp
xor
fs
leave
push
cmp
and
adc
or
lea
cmp
jecxz
lods
imul
sub
push
stos
outsb
sbb
les
xor
popa
in
imul
popf
cld
or
test
inc
mov
ss
and
add
pop
cli
in
int
es
pop
xchg
mov
repz
mov
mov
jnp
cmpb
aas
fldl
subl
clc
iret
push
push
mov
imul
inc
or
inc
cmp
scas
addr16
ret
test
xor
mov
rcrl
lahf
lea
jno
popl
mov
and
aaa
jb
adc
mov
cli
sahf
pop
movsl
adc
ret
ss
xor
out
adc
faddl
pop
repnz
pop
push
pop
and
andb
cmp
xchg
mov
in
pop
divb
and
xchg
fs
push
vmovntps
sub
test
ret
pop
push
push
pop
repnz
idivb
pusha
cmp
inc
jmp
aad
pusha
jb
aad
or
fcomip
rcrl
pop
inc
adc
sbb
jns
jp
pop
add
int3
and
mov
xchg
sbb
mov
dec
ja
or
inc
fnstenv
lea
adc
in
std
jmp
pop
cld
mov
pusha
imul
outsl
add
inc
mov
adc
cmpsb
dec
iret
and
lods
les
enter
popf
inc
pop
or
pushf
xor
mov
popf
mov
inc
idivl
add
jge
jg
rorl
jae
popa
movsb
orb
mov
jnp
mov
xor
idiv
gs
fld
and
jbe
xor
xorb
jecxz
cltd
push
ss
pushf
sub
and
sbb
insb
mov
and
lret
add
roll
popf
bound
fbld
js
call
xor
ss
testb
rep
insb
faddl
ljmp
leave
test
sahf
mov
xchg
jg
nop
pop
mov
xchg
outsl
or
dec
das
movsb
or
inc
inc
push
mov
mov
outsb
fistpl
lcall
dec
shrb
stos
scas
rclb
in
rcll
cmp
jns
jp
in
scas
sbbb
stos
movsb
dec
nop
aas
aam
repz
in
daa
lds
test
scas
push
dec
inc
and
cmp
sub
inc
mov
pop
or
fldcw
fidivrl
add
roll
mov
cmp
popf
aaa
lea
leave
push
dec
adc
cltd
push
cmp
xchg
xchg
xchg
je
dec
lret
cmp
mov
in
sbb
xchg
and
lret
outsl
push
dec
jle
xchg
mov
and
scas
popa
ror
xchg
adc
and
adc
mov
sbb
push
push
lea
push
and
sbb
adc
mov
dec
mov
jo
popa
cmp
mov
mov
lods
adc
hlt
insl
in
fs
lcall
mov
enter
orl
mov
dec
mov
sub
dec
jl
jle
pop
dec
jne
push
enter
mov
jecxz
test
push
add
cmp
bound
jmp
int
add
ret
mov
or
jmp
add
push
lds
sbb
cs
lahf
daa
popf
xchg
arpl
or
cmc
push
mov
fcomip
test
test
and
pop
sub
stc
or
and
xchg
jge
mov
mov
ss
jns
mov
or
xor
rol
push
dec
adc
scas
sbb
or
das
mov
scas
pop
in
repnz
push
in
inc
pusha
adc
add
loop
add
call
ds
aad
movsb
xchg
gs
push
mov
pop
jmp
es
lods
jg
adc
scas
cmpsl
subb
inc
mov
dec
ret
fst
dec
xlat
sub
popa
inc
in
push
jp
rcr
outsb
mull
xchg
in
je
imul
lahf
test
xorb
loop
bound
xor
in
cmpl
pop
lret
mov
punpckhwd
inc
jg
add
out
or
inc
iret
jb
mov
xchg
add
push
sbb
mov
in
inc
xchg
sbb
pop
adc
idivl
scas
loope
or
xchg
xchg
mov
enter
lret
cmpsl
js
adc
aam
or
mov
fistl
jp
or
mov
fs
inc
loope
jnp
sbb
fistl
mov
pop
pushf
mov
out
mov
jno
xor
lds
rorl
imul
movsb
cmp
sar
push
add
subl
mov
mov
xchg
push
dec
daa
mov
mov
adc
pushf
sub
xchg
jnp
ss
jecxz
jmp
das
out
mov
mov
out
adc
test
pop
xor
insl
fidivrl
dec
xor
jo
mov
lret
ljmp
dec
lods
rcll
aaa
shl
cld
push
mov
fyl2x
dec
enter
xchg
xlat
lret
mov
mov
fs
dec
pop
push
xlat
repnz
sub
and
outsl
push
pop
clc
sbb
push
mov
jmp
and
int3
leave
and
loop
movsl
fcomi
push
fidivl
jbe
sarl
mov
xchg
mov
jne
data16
xchg
in
xor
push
adc
repz
test
aam
mov
into
sbb
lret
repnz
pop
test
lahf
dec
js
inc
and
xlat
inc
mov
ret
jg
int3
loopne
sub
xchg
cld
jl
ficoms
mov
outsl
cmp
lret
dec
fwait
sti
inc
lret
mov
xor
lret
cmp
jecxz
sub
cmp
xchg
jnp
mov
dec
xor
xchg
jg
and
aam
int
push
addr16
push
std
and
insl
setp
and
test
jnp
in
push
mov
jecxz
xchg
stos
jae
test
cs
iret
adc
sbb
imulb
dec
sub
int
mov
lret
jp
loop
dec
sbb
arpl
pop
mov
inc
sarb
jmp
cli
cmp
jnp
dec
jmp
jo
and
sub
sbb
stos
cmp
out
pop
outsb
cmpsb
push
cmp
addr16
add
mov
push
orb
fistl
jns
loopne
xor
daa
aad
mov
popf
pop
std
push
clc
fstps
and
stos
out
push
rcl
cmc
jne
xchg
out
lds
ret
testl
xchg
xchg
pop
adc
mov
xchg
loopne
in
outsb
and
sbb
int3
mov
rcl
test
sbb
sub
fdivl
les
cmp
bound
and
pop
lods
adc
pop
mov
gs
jle
dec
sbb
cli
dec
lock
add
lcall
aam
outsl
pop
xor
rorb
subps
call
sub
ficoms
jg
push
pop
sbb
flds
popf
mov
pop
fcomps
xchg
cmp
cmp
inc
aas
add
pop
outsl
stos
jp
bound
fisubrs
mov
pop
inc
mov
jle
inc
and
sub
cmp
mov
stc
divl
sahf
stos
add
or
dec
lret
xor
jge
inc
jmp
sti
pop
jne
arpl
mov
fmuls
jg
mov
push
jno
dec
pop
roll
adc
fdiv
aaa
aaa
faddl
out
jb
pop
pop
sub
add
add
xor
cs
xchg
rol
sub
icebp
and
sbb
sahf
xchg
adcl
loopne
sbb
jns
in
mov
test
push
cli
lret
mov
push
scas
inc
fsubs
std
dec
lds
jge
xchg
jge
loope
subl
jns
dec
test
jg
aas
clc
ds
fwait
mov
jb
pop
cld
pop
push
movsl
jmp
mov
sub
cmp
dec
pop
and
aad
mov
aam
out
pop
push
cmp
mov
sub
pop
out
and
xor
adc
dec
mov
jl
imul
mov
inc
push
mov
stos
push
adc
push
or
aad
mov
ret
push
mov
out
sub
data16
mov
daa
and
enter
cmpsl
and
imul
stc
cmpsl
fmull
rcll
inc
ret
adc
jno
lahf
xchg
add
or
or
cmp
or
insb
incl
jo
xchg
jbe
gs
cmp
jnp
js
xor
mov
sbb
inc
xor
jmp
jo
sahf
mov
xor
cld
shrl
cmp
sbb
popa
mov
iret
shll
fstpl
aaa
mov
aad
xor
push
cltd
fcompl
ficoms
jns
int
mov
sub
sub
mov
subb
xchg
add
std
adc
insl
lock
pop
and
mov
jae
jmp
popf
sub
out
xchg
pop
cmp
and
faddl
je
roll
ss
xchg
mov
xlat
sub
sub
sub
subl
shl
loope
sub
testl
xor
int
jb
sub
ficoms
lods
inc
out
dec
nop
fistpl
xchg
xchg
clc
insb
or
outsb
mov
push
popl
stos
shlb
add
in
xor
push
pushf
sub
mov
fdivl
push
jbe
pop
xchg
nop
push
push
sti
mov
xchg
daa
cmp
addr16
lods
add
fnsave
rorb
push
outsb
je
wbinvd
cmpsb
sbb
ret
addl
ret
imull
mov
outsb
ret
push
xchg
sbb
sbbb
das
xchg
cltd
and
xchg
push
dec
inc
xchg
int
sbb
loop
insb
js
pop
pop
jp
mov
nop
mov
jae
sarb
ficoml
mov
add
or
in
aaa
cmp
add
sub
push
jle
add
je
data16
xchg
xchg
inc
adc
scas
pop
xchg
lods
ret
or
es
inc
fadds
in
aaa
jbe
cmp
lret
xor
mov
mov
pop
aam
ret
mov
enter
nop
outsb
inc
pop
lret
jbe
hlt
cli
xor
nop
pop
hlt
sbb
nop
iret
xchg
int3
sarb
mov
or
xchg
ret
jecxz
or
cmp
fldcw
in
jns
jo
pusha
aad
std
psubq
clc
insb
lods
insl
stos
xchg
mov
sti
addr16
rcll
clc
sbb
cmp
sbb
cltd
fimuls
push
adc
ja
adc
jl
test
push
sub
add
ds
push
insb
movsb
mov
inc
pop
cli
push
enter
pop
out
cli
jbe
inc
add
xor
mov
add
cwtl
xor
xchg
mov
cmp
bound
or
imul
sbb
repz
testl
pushf
loope
mov
adc
sti
mov
mov
inc
mov
jmp
in
push
xchg
jns
jbe
or
imul
mov
jp
mov
dec
adc
adc
or
popf
scas
push
dec
jbe
neg
mov
or
fwait
sub
xor
test
cmpsb
fnstenv
jns
xchg
shl
xor
adc
lret
push
mov
aaa
pop
cltd
push
xor
adc
mov
inc
notb
inc
or
or
daa
aam
fiaddl
rorb
mov
jnp
sub
and
xor
jmp
lcall
cmpsl
dec
adc
sbb
mov
in
sbb
cs
sbb
dec
repz
mov
nop
sbb
pop
push
pop
subb
mov
lahf
add
inc
iret
pop
dec
jbe
push
test
lock
repz
ss
xchg
jp
hlt
mov
ret
sbb
sub
call
popf
pop
rcrl
adc
sbb
xor
mov
jb
test
xchg
mov
cltd
imul
mov
test
pop
mov
mov
mov
xorl
push
jp
pusha
test
adc
cli
mov
ret
call
xchg
push
mov
inc
out
in
xchg
fs
or
fcoms
cltd
lret
mov
hlt
cmp
test
addl
jnp
movsb
repz
inc
or
bnd
cmp
dec
add
push
jbe
push
xchg
cmp
cmpl
and
sub
inc
jle
add
lds
je
cld
pop
and
push
inc
jmp
add
push
hlt
out
in
aad
mov
pop
stos
or
cltd
inc
mov
in
xchg
jp
scas
inc
xor
jnp
idiv
mov
mov
sub
and
mov
ret
lods
mov
leave
xlat
shl
sub
push
cld
rclb
dec
add
out
mov
xchg
call
shlb
fcoms
adc
outsl
mov
enter
inc
or
adc
sub
mov
mov
cmp
jle
mov
add
movsb
add
das
cmp
in
and
mov
ret
lcall
mov
js
aam
mov
jns
rolb
push
push
dec
imul
adc
inc
mov
dec
inc
pop
sarb
xor
les
dec
and
fsincos
addr16
movsl
in
data16
jmp
jne
or
xchg
dec
out
push
or
cwtl
xor
imul
divl
call
inc
das
cmpb
pop
movsb
xchg
jne
sub
sub
mov
xor
cwtl
outsl
pop
fidivrs
frstpm(287
push
loope
ret
add
fists
andb
inc
in
sub
ret
inc
clc
inc
mov
and
dec
loop
mov
cltd
mov
pandn
and
adc
sti
cld
mov
push
test
test
out
mov
js
imul
inc
test
xor
mov
dec
inc
enter
xchg
outsb
adc
adc
ficoml
ror
imul
es
sub
xor
or
sbb
mov
mov
repnz
mov
mov
dec
xchg
push
cmc
jne
and
test
mov
or
push
fwait
sub
dec
push
pop
sub
pop
mov
rcrl
xchg
test
xchg
nop
testl
adc
pop
adc
hlt
cmpsl
loopne
arpl
inc
jo
sbb
dec
addr16
gs
adc
xchg
mov
xchg
ja
push
test
popf
es
les
jg
xlat
xchg
ret
lods
mov
xor
xchg
inc
sbb
cmp
leave
sti
loop
mov
xchg
popa
mov
repz
nop
mov
jns
fxch
add
lods
iret
mov
fs
ret
adc
pop
inc
lret
mov
test
jno
roll
test
inc
roll
addr16
xchg
fwait
adc
mov
mov
es
mov
scas
gs
xchg
ds
cwtl
jmp
js
sub
fidivl
in
sub
pop
adc
out
sti
ret
jo
jbe
xor
and
testb
jmp
xchg
adc
stos
aam
fdivrl
push
pushf
cmpsl
push
dec
jns
cltd
imul
inc
ficompl
loop
loop
pushf
out
cwtl
sbb
and
outsb
lret
cwtl
or
push
add
inc
jmp
popa
push
bswap
leave
scas
jnp
into
push
add
mov
lret
cmp
imul
jmp
out
mov
inc
jp
pop
xor
arpl
in
stos
addb
div
aam
inc
gs
xor
jl
jo
out
f2xm1
mov
mov
xchg
cmp
call
cmpsl
movl
jp
daa
mov
cmc
mov
loop
pop
cmc
sar
cmp
jle
pop
cs
cmp
fsubrl
xchg
inc
dec
add
fstpl
out
mov
mov
ficompl
inc
fldenv
xchg
cli
dec
int
cmpsb
inc
jge
push
jbe
leave
pusha
push
enter
add
and
xchg
mov
xchg
int
dec
jge
scas
push
xchg
leave
xchg
inc
sbbb
jne
scas
sbb
jns
loope
test
out
mov
and
aad
mov
stos
mov
pop
aas
subb
push
add
test
xor
mov
lcall
push
inc
xor
andb
cmp
cmp
pop
add
xchg
jmp
mov
out
fiaddl
je
sbb
push
dec
fisubs
lret
shl
xor
sti
sbb
pop
jns
out
add
scas
imul
add
aas
insb
cmpsb
push
or
out
push
repz
sub
jns
sarl
repz
lret
leave
pop
outsl
push
mov
ljmp
mov
sub
clc
outsl
stc
jbe
jg
aaa
mov
das
inc
fisttpll
in
inc
repz
cmpsl
xchg
add
test
sbb
mov
hlt
inc
jg
hlt
fcoms
mov
les
lret
pop
pop
pop
out
mov
lret
push
inc
push
pop
loopne
lcall
addr16
sbb
xchg
lock
cmp
add
push
clc
in
mov
cld
lahf
dec
lock
dec
xor
call
inc
jae
addr16
cli
outsb
mov
int3
into
je
outsl
or
jae
mov
xor
es
xchg
lret
arpl
xchg
adc
addr16
and
cmp
jb
lcall
out
sahf
cmp
scas
out
hlt
mov
neg
cmpsb
lret
stos
jg
jge
inc
test
inc
data16
enter
std
ja
jl
scas
push
arpl
insl
cs
insl
dec
dec
pop
imul
mov
int
or
cmc
inc
fildll
mov
pop
lret
mov
orb
dec
and
test
add
hlt
out
cmpsb
pop
ror
aad
xor
pop
push
xor
fwait
or
cmp
dec
cmp
pop
jmp
push
sbb
xchg
mov
push
and
jg
push
rcll
test
add
sbb
mov
decl
outsl
adc
jnp
cwtl
dec
mov
clc
sub
insb
sti
loopne
fwait
xchg
int3
push
and
sarb
dec
ret
add
add
lcall
sub
leave
add
iret
fldcw
sbb
popf
ss
sti
loopne
popf
mov
hlt
pushf
lods
cmpsl
hlt
ficoml
fistpl
adc
pop
or
test
dec
mov
xchg
movb
out
push
lock
mov
lret
mov
jns
testb
push
pop
mov
push
cmp
ds
decl
add
sub
push
xchg
mov
je
fldz
cmp
sahf
cwtl
sbb
icebp
pop
std
clc
sahf
sbb
enter
push
inc
xchg
xchg
sub
movsb
inc
lds
xchg
aam
stos
jno
je
ljmp
mov
lret
add
orl
insb
scas
inc
push
dec
daa
pusha
dec
mov
clc
test
or
pop
cmpsl
out
cltd
jo
aaa
sahf
push
jne,pn
insl
inc
js
jo
pop
das
fistl
out
lock
into
in
mov
xlat
arpl
push
rcr
scas
out
rcrl
movsl
es
enter
lret
mov
or
pop
lret
addr16
jb
pusha
dec
inc
loope
fdivp
xor
add
stos
inc
ljmp
pop
push
jle
sbb
dec
and
test
xor
inc
mov
or
pop
outsb
fidivs
jmp
cmp
jb
dec
sub
sub
jnp
mov
ja
rorl
mov
xlat
btr
rcrb
cli
add
sbbb
call
mov
mov
mov
mov
jle
lods
and
mov
cmpsl
jle
and
add
sbb
loopne
lret
jne
test
sub
pop
gs
lea
cmp
movsl
inc
sbb
pop
shrl
xor
shr
mov
ror
cmpsb
pop
outsb
adc
outsb
pop
dec
pop
pop
xor
call
mov
dec
lret
inc
lret
inc
pop
xchg
push
xchg
test
lahf
rorl
lds
lock
and
arpl
mov
sub
pusha
sbb
cmp
ret
out
fmul
imul
jmp
dec
addr16
mov
xchg
add
xchg
push
fbstp
lock
cltd
popf
in
and
dec
mov
and
and
in
gs
mov
xchg
fcom
xlat
into
inc
shlb
mov
mov
and
and
cmpsb
imul
push
xchg
into
hlt
adc
jg
mov
dec
dec
jnp
out
inc
dec
sti
sbb
inc
mov
add
push
or
adc
js
push
pop
cld
mov
xchg
jns
rcl
adc
out
xor
out
ljmp
lret
dec
mov
loop
push
jo
adc
push
rolb
gs
and
fimuls
push
pop
aad
out
sub
popf
addr16
mov
jnp
and
stc
imul
test
mov
jno
sarl
inc
xor
sbb
in
push
out
mov
cmpsl
and
iret
mov
and
adc
jno
mov
sbb
sbb
lods
sbb
addr16
or
aad
call
xor
icebp
in
cmc
mov
adc
rcr
or
enter
test
into
xchg
adc
mov
jecxz
and
int3
xchg
imul
jbe
dec
rol
fcom
in
inc
inc
lea
push
inc
push
and
fstl
inc
sub
xor
dec
push
idiv
popa
sbb
jle
shrb
push
bound
gs
icebp
imul
dec
push
aad
in
jge
push
inc
pop
cmp
aas
cmp
pop
fsubrl
add
or
mov
sbb
pop
sbb
bound
mov
cli
cmp
lods
or
cmp
pop
loopne
arpl
mov
ds
test
xor
popa
mov
outsl
arpl
or
cmp
add
push
sub
inc
in
cmpsl
mov
mov
jno
aad
mov
cmp
sub
push
xchg
aad
sbbb
or
cwtl
add
push
cmc
mov
and
and
rol
in
test
pop
addr16
pop
jne
in
in
cmp
aaa
fprem1
push
pop
cmp
mov
stos
mov
scas
mov
mov
and
adc
or
mov
lret
add
fildl
jge
cli
cmp
xor
xchg
lret
cli
loope
mov
popf
int3
cmp
fdivrs
jb
pushf
or
jae
jecxz
repnz
ljmp
pop
xor
inc
inc
xor
mov
cmc
pushf
mov
arpl
cmc
out
push
mov
iret
sti
mov
or
adc
inc
push
lods
or
inc
loope
adc
out
jmp
push
mov
outsl
js
jbe
test
negb
lcall
mul
sub
filds
mov
jno
push
or
dec
es
pop
int
adc
mull
mov
lahf
mov
lahf
orb
lea
xor
push
adc
push
push
popa
imul
add
pop
das
imul
mov
loop
lea
cmp
in
mov
jne
cmpsb
imul
adc
shrb
sbbl
sub
or
cwtl
mov
stos
xor
mov
adc
xor
inc
sbb
sub
sub
mov
push
push
mov
sub
adc
shll
xchg
adcb
pop
mov
lods
lret
je
or
in
stos
aad
xor
cmp
pop
cmp
test
scas
ret
mov
or
arpl
cld
pop
test
enter
lret
jnp
adcl
outsl
mov
sub
imull
ret
xchg
movsb
pop
pop
pop
push
test
lret
in
adc
mov
mov
mov
lcall
sbb
sahf
inc
enter
pop
nop
ret
xchg
cld
lahf
cmp
xor
add
mov
cli
in
sub
notb
and
mov
into
in
mov
loopne
jnp
push
imul
fdivl
inc
test
ja
in
push
jg
sub
nop
and
jle
cmpsl
stc
push
std
xor
mov
or
dec
popa
pop
lret
es
stos
mov
push
jbe
enter
mov
das
rolb
pop
inc
sti
negb
lods
add
pop
mov
iret
cmp
scas
into
dec
xchg
pop
jge
jbe
sbb
lea
mov
pushf
xchg
dec
icebp
inc
fisttps
ficoml
mov
cmp
dec
fcoml
add
adc
out
adc
lea
cltd
aas
dec
shll
lea
xchg
scas
mov
mov
mov
stos
cltd
fidivs
out
fcoml
xor
push
int
add
xchg
mov
and
in
inc
jae
popa
xchg
aam
mov
es
test
add
clc
mov
push
sub
pop
adc
js
mov
into
bound
xchg
pop
cmp
add
and
imul
mov
movsb
mov
gs
stos
lock
daa
inc
adc
or
inc
sahf
shrb
cmpsl
call
or
xchg
xchg
jne
push
add
dec
cmc
sbb
push
stc
test
jae
cmc
hlt
call
in
inc
leave
jp
outsl
fnstenv
lds
mov
mov
adc
mov
or
lcall
push
pop
scas
pop
sub
dec
dec
in
sub
inc
movsb
jbe
lods
inc
pop
push
sahf
fsts
gs
add
fidivrs
jg
jl
jmp
push
lods
lret
movsb
pop
inc
dec
or
mov
shl
ss
fidivrs
push
add
ds
mov
sub
lds
fucomip
mov
mov
mov
cli
or
hlt
xor
jb
pop
jp
pop
jo
out
pop
mov
aaa
leave
js
xor
pop
adc
push
cmp
addr16
cmp
jecxz
add
cmc
das
gs
in
mov
movsb
icebp
dec
test
mov
outsl
rol
push
pop
sub
inc
adc
adc
pop
insl
jno
push
and
mov
arpl
ljmp
xchg
inc
cmp
sub
dec
mov
mov
jl
xor
inc
loope
sub
pop
ror
jmp
jne
addr16
imul
sbb
aas
push
lods
dec
mov
shl
mov
iret
dec
cmp
jle
lret
out
xchg
xchg
pop
loopne
add
mov
or
push
lods
je
arpl
subb
adc
inc
aam
jle
mov
fadds
xchg
or
push
mov
adc
pop
and
leave
stos
sahf
cwtl
and
cli
xchg
sti
cmp
movsb
aaa
std
mov
lods
cmp
push
sbb
ret
enter
xlat
out
cwtl
jmp
jnp
sbb
test
jge
ss
insl
inc
addr16
ret
cld
mov
test
imul
mov
adc
add
add
add
mov
or
loopne
cmp
mov
xchg
and
pop
xchg
sbb
add
and
test
jmp
cmp
add
clc
pop
lret
sub
mov
mov
mov
push
mov
push
ret
jno
jmp
sar
sub
test
insl
pop
ja
loop
insb
xchg
pop
jp
lret
lock
mov
lret
mov
ficomps
test
shll
jne
fwait
ljmp
add
dec
jp
popa
cmp
adc
test
pop
mov
or
mov
xor
in
or
loop
mov
add
adc
xor
sbb
inc
ja
pop
lods
xor
popa
dec
sub
pop
add
and
or
test
int
pop
bndstx
cmp
push
out
add
mov
or
pop
sub
jne
xor
fistl
imul
jg
loope
out
adc
outsl
and
push
into
iret
mov
lret
jo
sub
cmpsl
sahf
es
sbb
sbb
inc
add
out
std
xor
mov
cmp
mov
and
push
mov
imul
aad
push
fwait
popa
fdivrl
outsl
lods
mov
mov
push
fmuls
fs
jne
repz
or
lock
mov
loope
mov
push
int
push
popa
in
sub
adc
jle
push
insb
sub
aam
or
cltd
cltd
add
int
push
pop
out
xchg
adc
push
fadd
orl
outsl
push
xlat
out
and
xchg
adc
mov
mov
test
loopne
or
js
inc
nop
shl
and
cli
fistps
test
push
adc
imul
pop
in
fs
inc
sub
mov
cli
fwait
arpl
loop
pushf
insb
cltd
lahf
mov
or
mov
movsl
push
inc
lods
jb
add
mov
add
jmp
jge
andb
inc
mov
and
adc
scas
and
mov
pop
out
out
jle
push
test
sub
sti
dec
cmpsb
mov
cmpsb
pop
push
sarl
sbb
mov
mov
sub
enter
loop
mov
aaa
jle
and
int3
cld
push
jle
fdivl
dec
mov
adc
in
shrb
pop
push
test
jo
mov
loope
jb
ss
push
outsb
and
popa
mov
mov
scas
inc
cmp
pop
push
fucom
add
xchg
cmp
or
addr16
dec
push
sbb
inc
lds
cwtl
add
lahf
dec
and
xchg
mov
add
dec
bound
notl
mov
clc
iret
jl
js
inc
sbb
insl
and
mov
mov
aad
adc
xchg
addl
mov
jp
add
aas
jns
lock
ss
mov
gs
mov
faddl
mov
sbb
pop
pop
and
jbe
enter
push
cmpsl
sbb
dec
aaa
jecxz
xor
and
pop
cmp
or
xor
or
push
dec
mov
dec
adc
imul
mov
or
sbbl
out
mov
mov
int
int
push
mov
sti
iret
mov
ljmpw
decl
and
sub
sbb
mov
adc
incb
jne
loop
pop
ja
add
sbb
leave
mov
pop
dec
lds
or
mov
int
cltd
gs
jne
loop
push
jp,pt
aam
iret
bnd
jecxz
push
xor
insb
negl
xchg
mov
pop
sbbl
mov
insl
fsubrl
insl
pop
lahf
jae
or
jb
mov
mov
pop
sbb
sbb
jno,pt
or
adc
pushf
into
pop
xchg
pop
sub
push
cli
dec
or
arpl
push
in
jnp
add
in
arpl
roll
in
adc
subl
inc
xorl
add
inc
mov
mov
lods
push
xchg
cmpsb
fdivr
aad
sbb
repnz
clc
lea
or
test
cwtl
mov
and
push
loopne
pop
lock
sahf
test
test
xchg
bound
dec
mov
int3
cli
repz
mov
aam
jno
sub
xchg
pop
mov
cmp
loope
ljmp
das
lock
lea
mov
pushf
outsb
or
dec
and
nop
or
aad
insb
mov
repz
pop
add
scas
push
xlat
pop
sahf
lcall
cmp
shrb
mov
hlt
push
mov
add
sbb
dec
adc
adc
jae
repnz
and
jp
xor
mov
push
movsl
mov
incl
fs
orb
xor
xor
cmc
push
xor
xchg
movsb
push
out
daa
int3
jp
cmp
ja
xchg
sahf
pop
cmpsb
mov
arpl
out
sbb
pop
std
out
outsb
jle
mov
andb
insl
scas
xchg
dec
xchg
aaa
xchg
in
test
dec
ja
fsts
popf
or
push
cmp
adc
movsb
loop
pop
ret
ret
std
nop
sbb
mov
mov
cmpsl
mov
insb
cmp
cmp
sahf
cmp
mov
loope
sub
imulb
icebp
or
xor
ret
hlt
in
pop
andb
xchg
inc
add
aas
test
into
fnsave
jbe
bound
mov
in
popa
stc
xor
hlt
test
jno
push
pop
in
gs
jp
cmpb
movl
jnp
mov
cmpsl
mov
jnp
pop
lods
outsl
ficompl
inc
push
push
iret
je
loop
push
push
aas
or
repz
sarl
push
dec
xor
pop
jb
xor
into
jecxz
inc
push
sbb
movb
adc
xor
fcompl
or
mov
add
xor
test
mov
in
movsb
mov
xchg
ljmp
out
bound
aad
push
or
dec
mov
das
imul
fstpt
mov
push
lahf
filds
dec
jle
and
insb
rcr
fwait
scas
lret
iret
test
jmp
xor
es
imul
jne
aam
sub
clc
pop
out
jae
fdivr
shlb
jne
enter
stos
xor
imul
pusha
sahf
inc
mov
cmp
push
ja
mov
jns
cmp
les
add
lret
in
push
iret
dec
in
mov
xchg
lods
pop
jmp
ljmp
dec
push
mov
cwtl
xchg
movsb
add
adc
mov
push
pop
xchg
xchg
mov
mov
mov
scas
pop
fld
shl
jmp
stos
adcb
xor
adc
out
int
pop
add
out
mov
inc
mov
ret
xchg
jge
inc
daa
negb
xor
mov
and
rcr
sar
lods
out
cwtl
ja
aaa
leave
mov
dec
movsl
mov
push
ss
cltd
push
shr
popa
sub
add
ret
xor
sub
das
movsl
mov
xor
insb
pop
aam
dec
out
dec
mov
jge
or
lods
fwait
test
pop
add
mov
mov
mov
int3
mov
fwait
lahf
fucomip
sbb
pop
push
mov
sbb
jge
push
hlt
dec
fwait
cmpsl
xchg
inc
push
jmp
in
jo
add
push
xchg
sub
add
cwtl
inc
stos
fdivl
or
leave
sahf
inc
sub
jne
push
mov
addr16
mov
int
add
mull
cs
in
lret
xchg
stc
adc
shrb
push
xchg
loop
out
or
movsl
shl
adc
inc
push
push
cmp
outsl
in
jnp
cmp
jae
arpl
ss
lods
add
std
shlb
or
arpl
lret
bound
mov
fildll
jne
lret
mov
mov
cmc
iret
orl
add
sub
je
inc
stos
jbe
in
in
jb
outsb
adc
inc
mov
jecxz
pop
sarl
flds
mov
aaa
lods
mov
mov
fimuls
cwtl
jno,pt
adc
mov
cmp
fistpll
push
and
shrb
or
jl
adc
scas
mov
sbb
clc
or
jo
mov
dec
std
push
shrl
decb
les
sbb
mov
pop
xchg
xchg
fpatan
sbb
pusha
jge
dec
ljmp
sti
add
sub
add
sub
fisttpll
popf
arpl
loope
jmp
pop
xchg
fstl
testb
imul
mov
add
out
and
iret
rclb
inc
iret
sub
sub
cmp
icebp
iret
xor
sahf
mov
sub
repz
lahf
ja
xor
rcl
mov
ja
hlt
mov
gs
push
sarl
fcmovu
ja
popa
enter
es
adc
sahf
jecxz
loopne
test
add
in
jb
cmp
fdivrl
adc
cld
imul
loopne
mov
daa
sahf
cs
std
push
pop
inc
fwait
inc
jge
sbb
into
mov
jne
pop
in
push
or
jae
cld
int
jae
in
mov
dec
mov
leave
lret
fdivl
fidivl
and
cmpsl
mov
dec
dec
inc
movsb
mov
mov
cmpsl
mov
adc
es
jo
add
mov
fs
arpl
mov
jecxz
jnp
lea
and
fisubrs
addr16
dec
xchg
adc
xchg
fsts
mov
mov
sub
jp
cmp
jmp
cmc
jae
aad
imul
xchg
mov
and
sbb
int
repnz
in
sti
dec
leave
popf
pop
dec
lcall
ret
sbb
movsl
adc
and
mov
pop
push
rcrl
es
inc
insb
inc
cmp
push
loopne
bnd
cmp
pop
mov
outsb
into
inc
jp
sub
push
cmp
in
cmp
sbb
push
nop
sub
push
mov
pop
push
out
std
xchg
adc
mov
sbb
push
mov
and
loope
inc
ss
lahf
sub
mov
mov
xor
jp
jno
loopne
ljmp
jp
mov
jmp
lds
out
lods
sub
and
int3
mov
das
mov
pop
fiadds
je
mov
pop
or
gs
mov
add
inc
mov
push
mov
shlb
add
adc
pop
je
xor
in
popa
dec
pusha
mov
pop
mov
mov
cwtl
iret
add
pop
rcll
xor
sub
cmc
cmpsl
loopne
or
sahf
mov
cli
cld
mov
loopne
mov
or
xor
mov
xchg
aam
out
sbb
sahf
push
or
outsl
sbb
pop
sbb
fisttpl
adc
jge
popa
jno
dec
dec
test
jmp
adcl
scas
jnp
ret
popa
shll
cmovbe
jne
sub
sbb
sarl
mov
cmp
data16
testb
mov
cli
int3
test
mov
call
mov
jg
fcompl
mov
xlat
mov
das
xchg
gs
pushf
cmp
movsb
mov
and
fs
inc
ficoml
jmp
xchg
and
jnp
ficoml
pop
jmp
ds
mov
or
ss
mov
jle
daa
mov
rorl
mov
jns
add
and
xchg
push
inc
sti
aad
in
or
ss
outsl
rorl
pop
pushf
aad
push
ficompl
mov
xchg
and
or
fs
std
fwait
pop
aaa
cmp
jne
or
jb
jmp
leave
and
pop
bound
xchg
std
mov
stc
xchg
mov
inc
mov
push
ds
cmp
fadds
daa
enter
jbe
sahf
jbe
mov
push
jae
pop
test
add
js
out
sbbb
das
cmpsb
pop
jp
ffree
jns
sti
rcr
ss
loope
int
dec
mov
push
cwtl
mov
xor
jne
jmp
outsl
movsl
ja
push
and
push
pop
gs
decl
pop
cmpsl
jmp
pop
pop
loopne
repnz
xchg
pushf
scas
es
stos
fs
rcl
add
add
push
push
das
lret
fadds
ret
call
mov
push
and
cld
or
cmpsl
mov
pop
or
mov
jb
fists
mov
xor
mov
in
aad
xchg
cld
les
pop
sar
cmp
popf
or
pop
idivb
cmp
dec
jne
lret
pop
faddl
xor
adc
inc
add
bound
cmp
out
ret
sbb
pop
xchg
out
jle
ljmp
and
notl
lahf
sub
jle
xchg
repz
int3
dec
in
xor
sbb
sub
push
inc
sub
iret
enter
stos
push
cmp
or
out
in
je
cltd
pushl
mov
lea
sub
std
adc
out
and
je
jp
mov
inc
jge
fildl
mov
dec
js
xchg
leave
add
xor
lahf
rcr
sbbb
test
xor
push
sbb
stos
pop
xchg
mov
cwtl
pop
push
xchg
sub
lcall
cmpsb
add
push
inc
pop
stos
shl
cmpsb
pop
xchg
push
iret
ret
or
and
inc
nop
or
repnz
scas
rolb
push
dec
iret
pop
scas
nop
inc
jg,pt
fadds
push
mov
sti
dec
mov
sti
push
sbb
cmpb
es
aam
pop
dec
mov
push
mov
movl
mov
xchg
loop
xchg
sub
idivb
adc
out
test
push
push
rep
push
mov
sahf
inc
mov
sahf
xchg
imul
hlt
adc
test
lds
js
add
shl
cmp
mov
shll
shll
mov
loope
dec
dec
dec
out
lret
cmc
jmp
jg
cmp
decb
push
push
ljmp
pop
inc
call
cli
mov
call
je
pop
imul
push
mov
mov
or
mov
and
and
inc
jg
inc
dec
shll
insl
cmp
jecxz
gs
into
sahf
inc
jnp
lcall
or
clc
add
jbe
pop
divl
or
adc
lcall
lods
jg
iret
inc
repnz
xor
dec
xor
cmc
xchg
xchg
mov
push
mov
inc
inc
repnz
pop
push
insb
jne
mov
mov
mov
mov
mov
jmp
aaa
cli
pop
push
sub
jg
and
add
cltd
subb
sbb
in
inc
in
xchg
xchg
repnz
mov
enter
add
insb
dec
sahf
repnz
nop
sub
adc
loop
sub
push
pop
imul
pushf
mov
mov
xor
imul
lret
sbb
ja
push
mov
cmp
mov
test
es
adc
cmp
outsb
cmp
pop
mov
dec
cmp
cmp
loope
sub
mov
scas
push
jp
testb
iret
je
call
enter
inc
loopne
add
test
and
gs
movsl
mov
mov
mov
lods
mov
ret
dec
adc
addr16
lods
shll
dec
lea
cmc
lock
cld
rorb
add
les
cmp
xchg
rolb
data16
fs
push
lcall
pop
xchg
cwtl
int
mov
pushf
xor
jnp
out
cmp
fpatan
hlt
lcall
loopne
adc
lea
addr16
aaa
mov
sbb
popf
stos
insb
jge
sub
jmp
jo
pop
call
mov
insb
jo
and
sbb
xor
in
sbb
add
cmpsb
loopne
xchg
imul
or
mov
addr16
push
aas
jp
mov
inc
dec
xlat
dec
int3
sub
scas
sub
in
lods
push
push
stc
stc
fdiv
mov
jmp
aaa
mov
loope
mov
pop
lea
mov
mov
addr16
sub
fs
cmpsl
cmpsl
cmp
mov
pop
in
fadds
cmp
aam
sti
test
out
mov
rcrb
les
das
xchg
in
cmp
stos
push
into
cmp
cmp
xor
add
jecxz
lret
adc
jno
lret
adc
cwtl
inc
jle
mov
xchg
dec
stc
dec
mov
out
jp
xor
sbb
dec
mov
nop
subl
nop
aad
cmp
adc
sarb
imul
popf
enter
cmp
dec
push
andb
bound
mov
je
bswap
cwtl
lret
es
pop
sbbl
sbb
out
pop
rolb
mov
add
jg
test
andb
addr16
mov
icebp
push
lea
outsl
mov
das
mov
push
imul
out
inc
sahf
aad
out
pop
shlb
mov
ret
and
pop
add
jno
jle
dec
inc
add
add
iret
out
adc
shlb
mov
or
rcll
rorb
or
mov
rol
mov
ljmp
insb
aam
enter
in
out
orl
outsb
pop
adc
pop
lahf
add
nop
xorb
clc
or
inc
scas
inc
cwtl
jnp
push
sbb
and
mov
and
jnp
in
das
cmpsb
xchg
lods
mov
setno
insl
aaa
movsl
cmp
cmp
push
jp
xor
and
xlat
mov
loop
outsb
dec
imul
pop
movsl
mov
repz
jne
push
push
enter
pop
mov
imul
xor
adc
push
sub
cmp
dec
fimull
push
call
mov
xor
insb
jns
dec
cmpxchg
loope
rolb
jbe
push
ror
push
ds
sbb
fbstp
adc
adc
sbb
addr16
mov
sbb
adc
mov
push
mov
sbb
aaa
adc
xor
jnp
pop
out
loope
or
aam
das
shr
push
loop
or
push
adc
pop
mov
lods
dec
mov
add
mov
sbb
push
cmpsl
xor
xchg
in
and
push
mov
pop
btcl
subb
push
stc
shrb
fadd
add
inc
xlat
jae
inc
addr16
jg
jecxz
loop
push
adc
mov
xchg
aad
mov
lock
sbb
test
loop
add
div
es
fisubl
or
xchg
pop
fisubrs
jno
inc
sub
xchg
and
dec
movsb
push
arpl
xchg
jg
jmp
push
shrl
mov
in
mov
mov
push
pop
lock
pop
jmp
loopne
out
mov
sahf
pop
xor
das
cmp
test
test
add
cmp
fs
cmp
and
jl
movsl
or
sahf
sub
mov
in
xor
in
mov
stos
jl
push
jmp
sub
loope
mov
into
inc
or
jno
jae
es
add
test
mov
adc
sub
and
test
imul
rol
mov
lret
mov
mov
iret
mov
out
fldt
jbe
rcr
adc
mov
js
push
cmpsb
xchg
into
iret
fwait
pop
fwait
dec
add
or
das
add
adc
gs
cs
mov
out
inc
jp
lret
aam
xor
in
sahf
in
jge
xchg
sub
std
pushl
mov
rol
stos
push
fldpi
out
dec
dec
bound
movl
mov
stos
data16
cmp
lods
icebp
mov
leave
movsb
inc
sub
inc
repnz
adc
iret
jb
imul
test
mov
repz
xor
shrl
and
inc
pop
lsl
iret
fcmovb
pop
push
mov
out
enter
mov
adc
or
xor
outsb
clc
pop
cmpsl
mov
nop
sbb
mov
pop
cli
xchg
jmp
clc
mov
call
xchg
ljmp
in
out
das
test
int
mov
or
lahf
adc
cmpsb
push
cltd
jno
cli
add
nop
and
mov
pop
cwtl
arpl
and
test
jl
ja
cltd
sub
mov
es
xchg
mov
and
jo
cmp
cmpsb
sbb
rol
ret
fstl
dec
cmp
das
xor
arpl
je
shr
jge
and
js
gs
ja
cmp
cmp
outsb
adc
sub
or
rcrb
jg
sub
into
outsl
std
sub
pushf
push
out
lock
popl
flds
xor
adc
in
in
jbe
outsb
repz
and
movsb
xchg
scas
xchg
jnp
push
or
inc
dec
jmp
or
insl
inc
push
cmpsl
es
mov
sub
data16
push
adc
jo
and
pop
test
mul
cld
mov
mov
dec
mov
cmp
jo
nop
insb
sub
shr
lret
mov
lea
push
insl
mov
xor
out
mov
mov
fmull
sub
testb
or
ret
mov
cmpsl
popf
pusha
rep
aas
daa
enter
mov
push
mov
js
push
mov
xor
imul
sbb
mov
jl
fildll
pop
in
pop
or
adc
sub
out
xchg
jmp
lea
push
push
and
aas
test
add
mov
dec
mov
rcrb
xchg
inc
pop
jge
adc
add
or
xchg
sbb
and
adc
sbbl
inc
jmp
mov
jne
mov
cmpsl
sbb
testl
mov
mov
jne
add
pop
and
enter
sbb
sbb
mov
rcl
aad
sti
dec
jno
out
fldl
int3
pushf
stos
scas
pandn
inc
sub
jb
xchg
mov
lock
addl
pop
sub
dec
push
lahf
cmp
cwtl
arpl
aad
mov
sarl
enter
icebp
or
adc
test
mov
cmp
sti
mov
xchg
jo
push
stc
idiv
inc
es
jecxz
and
or
or
addr16
sbb
cmc
push
popa
xlat
pop
sbb
pop
daa
inc
incb
dec
dec
in
dec
cmp
test
enter
push
mov
int3
popf
inc
jno
mov
icebp
stos
inc
lock
mov
xchg
mov
dec
cmp
inc
mov
int3
pusha
xchg
xlat
movsl
subl
je
dec
mov
decb
inc
imul
fsubrs
jl
jmp
lds
lret
dec
cmp
inc
adc
jbe
add
sahf
dec
xor
or
dec
lret
cmp
xchg
jg
cmpsl
ss
rcrb
sub
cwtl
mov
dec
mov
mov
or
pop
negb
clc
jl
ja
ficoml
stos
loop
xlat
sbb
repnz
test
xchg
ds
inc
mov
pop
daa
test
nop
xor
fidivrs
jmp
mov
outsb
hlt
sub
cmp
inc
stc
and
lea
dec
mov
data16
out
xchg
cmp
pop
cmpb
in
pop
bound
stc
inc
xchg
flds
jbe
mov
push
inc
pop
or
icebp
jnp
rorl
jbe
push
xor
and
int
inc
clc
cmp
jg
aas
or
lds
scas
js
imul
xor
cmc
rorb
xchg
mov
incb
or
pop
sbb
flds
xorl
inc
popf
sub
lahf
push
and
rorl
mov
lret
int
out
fdivrs
add
or
shll
mull
lods
pop
jge
rcll
pop
xchg
mov
cwtl
inc
jg
lods
ss
push
test
arpl
xor
and
subb
cltd
hlt
repz
leave
fbld
push
adc
test
mov
lret
sbb
xchg
push
sub
inc
clc
lcall
insb
decb
fists
pop
jg
lods
dec
cmp
fimuls
mov
cmp
daa
dec
bound
cmpsl
pop
mov
imulb
pop
incb
ret
sahf
nop
or
cmp
jmp
adc
push
rep
add
das
mov
inc
ja
dec
addr16
jbe
out
xchg
iret
aad
and
pop
mov
out
imul
jne
dec
lock
arpl
arpl
push
cmp
lods
dec
in
jecxz
aad
xchg
cmpsl
dec
cmp
xchg
sbb
aam
pop
dec
insl
adc
faddl
ljmp
pop
roll
push
dec
test
dec
add
xchg
incl
jp
jae
cmp
testl
call
enter
pop
das
push
shll
enter
imul
aad
loop
gs
fisttpll
jo
jnp
fmul
mov
movsl
outsl
movsb
scas
cmp
int
in
xor
rcr
mov
rcrb
and
jbe
rcrl
cmp
lcall
jne
filds
mov
jae
add
or
and
loope
cmp
adc
in
add
test
inc
into
push
inc
push
sbb
shr
daa
cmp
jnp
add
lcall
push
aad
aad
pop
cmpsb
jno
xchg
in
mov
ror
sub
into
or
mov
iret
add
lea
in
cmp
mov
rorl
arpl
or
mov
in
notl
cmp
shl
enter
in
data16
andb
roll
add
ljmp
fidivs
mov
dec
movsb
out
push
mov
leave
and
sbb
cmp
push
xor
loopne
push
mov
lock
mov
bound
fidivrl
jns
jecxz
xor
push
out
jle
dec
or
sbb
outsb
inc
test
aas
inc
sbb
jb
pop
test
inc
int3
xchg
xchg
insb
dec
and
adc
in
fists
adc
mov
out
imul
cli
and
push
dec
push
mov
ret
push
mov
mov
popf
mov
or
inc
lods
push
lods
ja
ja
orb
push
mov
xor
cwtl
clc
arpl
mov
lahf
testb
mov
mov
xlat
shlb
sti
xchg
shl
ljmp
repnz
and
test
mov
mov
lea
jle
sbb
fsubr
out
add
cmpsb
scas
ret
xor
cmp
pop
outsb
push
imul
mov
pop
xor
jns
sbb
jg
pushf
inc
add
and
dec
aas
push
cmp
insb
jmp
sub
and
or
scas
adc
icebp
adc
iret
out
mov
je
shll
jne
inc
fwait
int3
jne
add
pusha
scas
pop
popf
xlat
addr16
dec
push
xchg
jmp
adc
xchg
repnz
mov
cmp
sub
aad
inc
repz
cwtl
pop
fdivrl
xchg
pop
xor
adc
mov
pop
negb
cmpsl
lods
xchg
ds
decb
je
ret
adc
out
xor
gs
dec
addb
mov
and
test
popf
mov
pop
push
dec
inc
fwait
xor
lea
jae,pn
or
cld
jno
or
pop
in
mov
loop
adc
stos
aaa
dec
mov
sub
cmp
bound
daa
es
jae
scas
adc
sbb
mov
pushf
dec
fs
into
aad
data16
jle
movsl
mov
cmpsl
pop
out
movsl
cmp
dec
xor
lods
or
mov
xchg
inc
rorb
inc
xor
push
jmp
test
addr16
daa
out
mov
cmp
es
push
mov
popf
inc
les
sbb
or
dec
xchg
js
jecxz
add
mov
lea
xchg
mov
rcrl
sub
cmp
shll
push
push
cs
push
cmp
or
add
mov
pop
popf
ret
mov
int
andb
jmp
pusha
iret
into
mov
xchg
je
dec
xchg
sbb
inc
mov
cld
fsts
cltd
mov
push
xor
lahf
imul
cmp
aaa
aas
push
gs
jb
or
mov
int
jo
lods
js
dec
cli
js
cmp
int3
aam
adcb
add
mov
jae
ja
jb
out
mov
ret
cmpsl
lods
push
test
cltd
outsl
cmp
push
dec
cmp
mov
bound
fdivl
das
dec
shlb
and
inc
inc
xor
mov
sbb
inc
or
imul
pop
or
test
jo
dec
jbe
jns
adc
outsl
rcll
jbe
loopne
outsl
rorb
daa
ret
fimull
ja
mov
xor
sbb
mov
test
loope
mov
cmpsl
mov
pop
sti
out
mov
mov
iret
or
push
xchg
pop
and
test
or
xchg
decl
ret
cld
cmp
inc
test
sbb
push
xor
hlt
mov
push
mov
push
push
test
or
insl
push
and
pop
dec
jbe
add
insl
fdivl
mov
pop
aad
test
fmull
pop
inc
xchg
fwait
push
cmp
sbb
pushf
mov
push
out
push
js
shrl
push
push
push
inc
pop
mov
xor
add
push
enter
aad
xchg
jb
and
or
push
sahf
pop
iret
mov
push
cwtl
mov
repz
out
adc
push
sub
dec
sbb
sub
sbb
xor
cmp
pushw
insl
movsb
adc
jae
es
mov
push
xor
sbb
lret
in
push
mov
fbstp
fimuls
mov
adc
or
call
outsb
add
jne
dec
push
stos
test
xor
inc
pop
mov
dec
imul
lcall
pop
addb
mov
xchg
jl
test
or
xchg
shll
cmp
pop
mov
rolb
cmp
icebp
sbb
int3
pop
sub
sbb
shlb
rorl
sbb
sbb
pop
mov
mov
inc
fiadds
mov
or
out
ljmp
and
and
push
call
dec
pop
test
es
lods
divl
scas
ret
and
mov
ja
ja
jp
mov
les
dec
pop
ljmp
mov
and
xchg
sarb
inc
dec
mov
test
add
jmp
imul
hlt
jns
push
jp
stc
sub
inc
mov
xchg
mov
pop
sbb
aaa
js
loop
xchg
and
shrl
fwait
sub
arpl
xchg
mov
add
out
pop
sbb
xchg
xor
mov
push
or
lcall
fnstcw
xchg
xorw
and
aam
mov
adc
push
mov
lcall
push
testb
mov
pop
aas
mov
lods
lods
dec
add
ljmp
dec
das
mov
sub
aad
hlt
mov
cld
pop
dec
pusha
and
xor
outsl
cmp
out
nop
test
in
fs
mov
adc
insl
insb
push
jae
mov
lods
jnp
sub
mov
pop
lcall
mov
clc
call
cltd
ret
xchg
xorb
lock
xchg
int3
mov
jae
cmp
ljmp
inc
inc
push
cmc
dec
add
sbb
aas
jecxz
insb
jae
sbb
pusha
clc
scas
xlat
or
in
pop
lods
pop
cld
popa
lahf
inc
jge
cmp
lods
adc
cmp
mov
jge
shlb
adc
inc
shlb
aam
aas
inc
addl
cwtl
movsb
jg
fisttpl
sub
pusha
push
cmp
out
inc
jl
rcrl
pop
mov
pop
cmpsl
outsl
xor
insl
test
adc
sbb
stc
ja
push
int
dec
mov
in
clc
sarl
ret
test
jae
nop
lret
mov
dec
insl
mov
mov
jmp
mov
ret
lods
mov
rorb
pop
imul
jl
sbb
pop
das
mov
bound
mov
dec
stos
add
outsl
fsubs
scas
mov
mov
adc
cmp
push
xchg
xor
bound
in
xor
mov
je
outsb
jg
xchg
pop
mov
push
sbb
cmp
not
inc
adcl
add
push
push
les
jns
arpl
pushf
cmp
and
inc
repz
push
mov
cltd
dec
add
push
sub
clc
cltd
mov
imul
mov
into
or
jno
fs
jne
ds
out
add
js
add
lret
lock
xchg
out
mov
stos
insl
or
add
or
mov
push
inc
lret
sarl
stos
cmp
jg
cmpsb
xchg
call
mov
push
aas
fdivrs
cmp
pop
clc
inc
jge
dec
or
movsb
fucomp
xor
cmp
shrl
into
in
sub
pop
ficomps
push
mov
je
sub
and
sbb
cmp
jl
and
test
pop
popa
out
std
aaa
loop
std
or
ret
js
jg
ss
pop
adc
add
fadd
test
addl
enter
cmp
dec
pop
fidivs
scas
mov
jno
repz
fcmovnbe
or
jno
movsb
add
imul
mov
shlb
add
pop
test
rol
push
in
push
movsb
push
sub
insb
shll
lcall
loopne
push
dec
push
loopne
adc
xor
push
cmp
imul
daa
xchg
sub
pop
mov
inc
or
push
push
pusha
mov
dec
xorb
mov
test
dec
pusha
jmp
sahf
adc
sub
xchg
sbb
fcompl
fimuls
out
outsb
cmp
jne
movsb
outsb
cld
loopne
mov
notl
jmp
mov
mull
popa
jae
cmp
cmc
ljmp
push
icebp
clc
orb
imul
inc
fmuls
cmp
xchg
xchg
das
mov
jne
pop
repz
adc
in
sub
xlat
mov
dec
inc
cmp
aas
jno
rcr
pushf
xchg
lret
es
ljmp
lahf
std
and
add
pop
call
mov
lcall
or
pop
inc
adc
stos
xchg
xor
push
push
enter
mov
dec
hlt
dec
pop
fdivrl
xchg
xchg
jne
xor
push
imul
xchg
dec
ja,pt
sub
dec
inc
movsb
push
push
stc
mov
out
ljmp
xor
test
fbld
mov
jbe
pop
mov
je
push
xchg
jl
daa
mov
push
test
icebp
xor
mov
add
add
mov
add
addl
jl
mov
dec
lahf
shrb
sahf
popa
add
shll
jl
cmp
std
call
mov
loop
test
or
and
loope
das
xorl
dec
bound
cmp
mov
dec
pusha
and
cmpsl
push
pop
jl
dec
jbe
stos
cmpsl
data16
sbb
lods
mov
daa
pop
jbe
sub
out
push
and
rcll
and
adc
nop
rol
cmpb
jnp
in
outsb
mov
fwait
push
and
push
fldt
xor
or
les
scas
xor
add
cli
mov
sbb
clc
imul
hlt
mov
push
jge
pop
aaa
mov
cwtl
in
cmc
out
add
cmp
and
dec
xchg
jno
hlt
push
xor
lcall
aad
cmp
cs
push
into
inc
fdivrl
aas
ret
in
or
sbb
adc
das
and
push
enter
cltd
js,pn
add
xor
jae
repz
mov
pop
out
iret
xchg
mov
in
hlt
lock
push
push
scas
sub
xchg
jmp
and
cmp
stos
int3
xchg
insl
jg
adc
sub
movsl
pop
push
shl
mov
fisttpl
pushf
push
mov
or
rorl
inc
dec
adc
adc
in
fdivs
dec
repnz
mov
xchg
push
mov
test
push
pop
aaa
popf
xchg
sub
lds
pop
test
inc
cwtl
mov
loopne
add
inc
iret
mov
enter
push
subb
jno
int3
dec
mov
jae
push
pushf
call
or
mov
jno
inc
cmp
sarb
inc
pop
fdivs
push
pop
push
lret
push
sti
mov
mov
mov
push
adc
test
pusha
push
push
dec
out
imul
inc
cmp
roll
mov
add
sahf
imul
fisubrl
pusha
mov
jbe
xchg
in
push
in
or
icebp
movsl
and
lahf
out
addl
cld
test
mov
insb
jno
gs
iret
mov
imulb
adc
popa
jbe
jge
push
mov
fsubrl
sub
sub
imul
inc
mov
icebp
dec
sbb
loopne
xor
add
or
fldenv
pusha
dec
jae
xor
jmp
outsl
lock
fmuls
sbb
leave
shl
or
xchg
sarl
cmp
nop
sub
dec
daa
lcall
rcrl
xor
mov
fwait
rcrb
fstpl
adc
mov
rcrb
jge
adc
lret
adc
or
daa
fstps
lds
jp
push
xor
test
dec
cmpb
jge
nop
jecxz
mov
int3
mov
xchg
dec
test
adc
imul
sbb
insl
lret
jne
add
push
clc
push
push
jno
cs
jp
insl
andb
das
push
and
es
imul
xchg
sti
loope
inc
pop
shrb
scas
xchg
inc
and
iret
inc
dec
insb
movsb
mov
mov
fimull
lods
clc
in
stos
adc
pusha
adc
add
fadds
mov
sarb
es
dec
test
cmc
dec
lahf
mov
push
fdivl
cmp
enter
cltd
inc
inc
jmp
insb
cmpb
dec
xor
sbbb
cmp
jecxz
clc
push
jecxz
shrb
cmp
jb
enter
add
jl
jmp
cmp
adc
scas
mov
mov
bound
sbb
mov
dec
xor
jns
xor
inc
cli
in
push
dec
nop
xchg
lahf
dec
loopne
mov
pop
xor
dec
insb
mov
fwait
cmp
aaa
aad
mov
pop
inc
inc
and
push
imul
mov
out
pop
mov
andb
dec
inc
lret
popf
add
sahf
adc
add
mov
adc
mov
loope
jle
push
adc
nop
push
mov
pop
pop
lds
dec
int3
mov
or
sbb
jl
mov
xor
hlt
add
aas
jecxz
push
add
pop
pop
testb
loop
pop
adc
cwtl
cmp
scas
push
push
dec
call
leave
xor
adc
rclb
push
xchg
add
jle
daa
in
sub
stos
jmp
xor
cmp
push
push
sbb
ljmp
fwait
xchg
and
pop
loope
lods
fs
and
aaa
sbb
inc
add
sbbl
cld
adc
ljmp
loop
pop
sar
mov
and
lods
out
roll
mov
bnd
mov
cwtl
mov
es
jae
mov
jp
xchg
or
dec
and
js
cmpsl
add
dec
mov
out
scas
xchg
mov
mov
int
ljmp
sbb
add
popf
into
inc
aas
xchg
fdivrl
jns
mov
mov
repz
cmpsl
inc
dec
xchg
insl
in
fnstsw
push
shrb
xorl
pop
and
cwtl
mov
jmp
in
dec
xorb
or
jmp
xchg
mov
incl
cmp
ret
into
lds
sbb
xchg
add
pop
leave
jno
test
cmp
stos
les
jmp
adc
sub
test
sub
adcb
dec
jge
adc
cmp
sbb
push
or
insl
inc
jo
sub
jge
xor
push
fstl
fistl
push
jecxz
mov
shlb
clc
cs
mov
jecxz
lods
jns
mov
xchg
and
mov
and
add
rcrb
mov
lock
mov
lcall
lret
add
repz
es
xchg
ret
add
dec
cmp
faddl
xchg
sub
push
mov
cmp
out
push
mov
add
jle
and
rorl
pop
sub
sbb
pop
scas
xchg
stc
push
scas
or
mov
mov
sbb
call
push
popf
cmpsl
sub
shrb
dec
push
arpl
in
fs
dec
stos
and
cltd
pop
popf
mov
jmp
stos
les
pop
sarb
inc
jbe
fstpl
ljmp
or
lcall
cmp
fwait
cmp
mov
add
mov
add
or
notl
or
fldenv
push
sti
push
mov
jecxz
cli
insb
inc
jno
push
mov
ss
ss
scas
inc
inc
es
adc
arpl
pop
pop
loopne
xchg
cltd
in
sahf
mov
sti
in
repnz
inc
repnz
xor
or
sbb
cmpsl
nop
pop
dec
pop
push
imul
cld
adc
cmpsb
dec
sahf
lcall
loope
adc
adc
insb
rolb
or
ficoml
mov
xor
fcoms
cmp
pop
and
push
vpsrlw
movsb
insl
pop
add
pop
xchg
and
lret
loop
int
dec
imul
inc
insl
js
cmp
jne
out
pop
loope
aad
loopne
add
data16
xor
push
mov
mov
xor
mov
sbbb
loope
ja
jl
shll
pop
add
adc
bnd
push
negb
sbb
movsb
sbb
ja
daa
aaa
jmp
outsl
adcl
pop
add
andb
and
icebp
int
sub
stos
mov
inc
std
bound
mov
mov
test
mov
sub
push
or
movsb
xchg
mov
movsl
aam
cmp
xor
or
mov
imul
pop
push
xchg
jbe
jo
dec
fstpt
xor
fst
lock
push
out
sbb
je
scas
neg
jmp
jno
xchg
test
movsb
mov
stos
fidivrl
insb
stos
mov
dec
rcrb
lcall
cmpsl
out
inc
mov
and
add
jle
mov
out
push
inc
and
jge
add
adc
cmp
fnsave
mov
mov
imul
aam
sub
fmull
icebp
and
fwait
dec
lret
dec
sub
push
bound
jg
test
cmp
leave
rcrb
jle
and
jge
sub
in
adc
adc
scas
scas
sbb
outsb
jne
push
js
sbb
loope
inc
andl
mov
sbbl
jmp
sub
lea
xor
adc
jge
xor
rclb
or
lds
sti
lea
clc
inc
push
cmp
jne
cltd
fisttps
aaa
into
popa
xchg
push
pop
push
xchg
mov
aad
pop
fmuls
fcoml
cmpsl
into
dec
je
in
int3
xchg
in
and
xchg
mov
lods
dec
out
sub
sti
cmpsl
pop
cmp
and
cmpb
in
iret
mov
xchg
test
leave
push
adc
jo
cmp
push
xchg
loopne
in
sti
cmp
clc
fs
cmc
or
jbe
dec
push
jmp
sub
pop
mov
mov
stos
mov
lea
lret
ret
repz
cmc
xchg
cwtl
bound
mov
xor
imul
xor
fsts
push
out
dec
push
xor
mov
call
sbb
mov
out
fistpl
cmpsb
clc
lods
mov
jnp
aaa
jp
movsb
fmul
stc
imul
mov
mov
pop
mov
lea
into
insb
xchg
jp
xlat
mulb
jae
ja
sub
repnz
js
pop
movsl
xorl
inc
mov
iret
hlt
push
hlt
mov
mov
out
push
add
pop
sbb
movsb
ret
test
sbbb
lds
movsbl
or
and
cmp
jnp
jns
add
inc
rol
pop
add
lahf
int3
inc
scas
fcoms
insb
pop
and
mov
aam
xchg
mov
int
repnz
loope
jp
movsb
mov
xchg
mov
add
orl
lcall
dec
and
mov
dec
jno
lock
pop
mov
rcll
sti
mov
int
stos
xchg
movsb
dec
pushf
es
repz
dec
push
out
pop
subl
pop
mov
in
mov
rorl
xchg
pop
jmp
add
leave
pop
and
mov
addb
mov
popa
lds
sub
jbe
pop
mov
xchg
push
leave
add
test
stos
xor
ret
in
out
in
inc
mov
loop
repnz
mov
or
mov
mov
xchg
pusha
js
push
push
fucom
adc
jno
inc
sbb
cli
xchg
dec
sbb
adc
push
out
xor
jmp
js
jg
scas
dec
or
or
xor
pop
into
sahf
jp
xlat
dec
jp
lahf
iret
repz
mov
xor
imul
dec
aas
aam
sbb
pop
lock
mov
pop
dec
hlt
lock
ss
sbb
xchg
pop
mov
push
push
int
pop
data16
ret
dec
jbe
xlat
inc
push
xchg
in
mov
rcrl
iret
test
scas
xchg
popa
adc
sbb
sub
push
aas
sub
fildl
pusha
push
aas
push
enter
fnstsw
stos
inc
loop
jbe
mov
aad
mov
insl
int3
pop
cmpb
dec
mov
repz
and
or
xor
xor
jg
cmc
test
into
jecxz
jp
mov
jmp
add
xchg
das
inc
jmp
mov
repz
jae
les
mov
add
jns
arpl
test
cmpsb
adc
and
inc
lcall
gs
in
xor
imul
enter
inc
incb
cltd
mov
jmp
out
stos
mov
imul
jmp
stos
inc
xchg
adc
in
mov
pop
jmp
cmp
xchg
pop
cmp
je
sarb
mov
adc
sbb
xchg
and
add
icebp
mov
test
leave
jne
add
inc
test
xor
int
dec
dec
push
inc
popf
dec
sub
testb
hlt
leave
sub
and
xor
or
fildll
out
xchg
stos
xchg
fwait
xchg
adc
xchg
xchg
leave
pop
inc
loop
or
inc
jo
xchg
aas
test
dec
jae
dec
mov
inc
lret
data16
push
inc
scas
test
shrb
sub
push
mov
stos
dec
jnp
popa
and
int3
or
dec
cmp
bound
out
dec
aam
push
roll
jnp
out
ss
sahf
xchg
dec
out
push
outsb
imul
xchg
int
adc
lahf
sub
jnp
and
test
mov
ljmp
inc
jle
push
add
dec
jp
dec
je
jo
or
add
dec
neg
xchg
lods
xchg
sub
test
fs
call
aam
jnp
pop
mov
pop
fists
mov
push
ljmp
iret
pop
inc
psadbw
ljmp
fidivs
xchg
xchg
scas
mov
cmp
lret
xchg
xchg
cmp
pop
test
and
popf
adc
mov
pushf
inc
arpl
ja
jnp
bound
pop
std
sub
push
lcall
cmp
xlat
shll
pop
adc
or
mov
mov
jno
xor
pop
mov
add
lea
push
ret
push
in
in
push
adc
push
mov
adc
add
mov
cmc
mov
cld
test
outsl
sub
jl
xchg
push
imull
push
sbb
mov
jne
xchg
ljmp
add
dec
cmp
mov
popf
and
adc
cwtl
push
movsb
add
xchg
sub
in
pop
jbe
and
mov
pushf
adc
pop
push
mov
gs
inc
sahf
xchg
into
mov
and
adc
xor
push
jne
negl
aam
cld
fidivrl
mov
push
mov
int
push
xchg
mov
sbb
out
xor
mov
push
jmp
xchg
cmpsb
cld
cmpsb
ljmp
jae
pop
xor
add
pusha
lret
dec
ss
pop
in
shr
mov
ret
pop
and
mov
sbb
insb
fsubrs
push
cmp
cmpsb
pop
add
jae
sub
add
out
outsl
mov
push
pushf
dec
rorb
js
ret
mov
fucomi
sub
sbb
incl
mov
or
lret
enter
repnz
cmc
xor
mov
stc
or
int3
xchg
add
jae
mov
mov
sbb
ss
push
int
bound
lret
mov
jmp
cld
mov
mov
aam
mov
pop
testl
inc
lods
and
rcr
dec
adc
sbb
xchg
in
aam
jge
xlat
dec
cmp
push
out
sub
xor
rcll
or
add
or
int3
sbb
push
xor
and
cld
cli
fadds
or
lahf
lcall
dec
fsubl
mov
mov
fs
mov
mov
lret
paddq
mov
adc
pop
push
inc
das
push
or
xor
push
rcrl
cmp
aad
xor
popf
mov
adc
mov
test
lret
cmp
daa
decl
sub
fdivrs
ret
daa
mov
aad
xor
jbe
mov
cwtl
aaa
pop
mov
cli
mov
jae
lock
fidivl
dec
rorl
mov
pop
idiv
fsubr
js
mov
or
or
dec
notl
xchg
dec
adc
das
stos
push
adc
pushw
ljmp
sub
shrl
mov
sahf
icebp
inc
dec
adc
xchg
xlat
and
jmp
adc
fildl
lods
das
pop
push
adcl
and
pop
jns
out
test
mov
jmp
addr16
imul
lea
dec
movsb
and
imul
push
test
in
adc
pushf
mov
adc
pusha
jmp
insb
push
dec
sub
das
push
and
or
outsb
push
mov
jmp
xchg
sbb
out
cwtl
clc
push
lret
inc
lret
imull
aad
idivl
xor
mov
icebp
mov
cmp
or
rcr
adc
divb
mov
imul
fst
inc
popa
mov
mov
inc
in
push
dec
int3
sub
xchg
ret
dec
mov
xor
js
pop
mov
dec
test
dec
in
sarl
into
and
sub
sbb
js
jp
mov
out
out
add
and
lods
push
fmuls
jb
mov
inc
jl
iret
out
adc
sub
cmc
jne
jo
mov
fisubs
jo
les
cmp
cmp
lods
jno
push
dec
fnstcw
and
les
sub
imul
sbb
test
mov
lea
add
loope
cld
push
lds
inc
out
dec
mov
pop
or
bound
xchg
or
into
dec
push
sub
mov
fcompl
sahf
mov
or
gs
lret
or
or
xor
ficompl
pushf
pop
je
jle
sub
fistl
and
enter
sti
aas
and
insb
xchg
or
pop
sti
jo
jmp
and
adc
jne
nop
pop
mov
sub
mov
sbb
aaa
add
add
ret
add
rcrl
pop
mov
jp
bswap
das
rclb
push
jl
lds
sbb
stc
adc
insl
mov
jg
jl
mov
mov
mov
popl
imul
push
jnp
sbb
jmp
inc
mov
scas
arpl
test
mov
das
mov
inc
decl
push
les
dec
xchg
mov
cmpsb
dec
test
inc
les
add
divb
or
xor
insl
push
xor
pop
sub
sbb
push
or
xor
cs
or
in
cmp
test
lret
jle
pop
xchg
xchg
pop
xor
xor
cmpl
xchg
sub
or
cmp
fwait
js
cmp
inc
cmp
cmp
je
aam
ret
mov
test
cmp
daa
push
int
dec
movsb
hlt
jl
add
xlat
call
cli
pop
ljmp
pop
es
jl
mov
pushf
push
xlat
test
mov
decl
push
and
mov
ja
repz
rcrl
adc
add
clc
mov
pop
fistps
cltd
ds
mov
cltd
lods
fbstp
add
bound
mov
rclb
cmpsb
aam
bound
and
bound
cmpsl
outsb
jnp
mov
pushf
push
xor
push
push
cs
jb
pop
dec
mov
lods
scas
sub
push
ud2
xorl
mov
xchg
addr16
fildl
sub
lock
dec
jle
mov
adc
sbb
loop
sti
imul
inc
jle
sbb
into
inc
and
sbb
inc
push
xor
mov
enter
out
inc
es
cltd
faddl
subb
sbb
cs
insl
cwtl
mov
xor
pop
jne
sbb
sti
popa
inc
es
push
inc
stos
aaa
sbb
mov
jns
fs
push
sub
neg
enter
insl
mulb
mov
insl
sahf
notl
cmp
aas
jp
mov
dec
out
notl
lret
imul
outsl
inc
sub
in
xchg
dec
jno
insl
pop
inc
inc
shll
mov
lds
cmp
and
decl
xor
adc
xlat
xchg
popa
imul
test
dec
push
test
inc
xor
or
add
push
sbb
lods
cmpsl
fs
popf
and
mov
addr16
cmovge
inc
pop
dec
cmp
cwtl
mov
in
in
clc
out
test
xor
dec
mov
in
inc
xchg
aaa
mov
rclb
mov
fstps
jp
xor
cmpsb
out
out
xchg
or
add
jp
fiaddl
scas
repnz
in
jbe
ret
gs
test
out
cmc
mov
sub
sbb
int
out
pop
fdivrl
rorb
push
call
cmp
push
xor
pop
out
and
pop
or
out
lret
and
add
mov
in
cmpb
sub
inc
lret
cmp
lcall
jne
adc
js
xor
sahf
pop
mov
popf
in
testl
add
mov
popf
mov
xor
add
dec
xor
pop
or
lods
outsb
pop
stos
out
das
out
arpl
pop
inc
add
inc
jmp
pop
jge
push
daa
add
mov
xlat
jnp
addl
sbb
and
scas
and
pop
mov
lea
int
and
adc
mov
test
push
arpl
lea
xor
jecxz
es
mov
aam
push
jl
mov
fwait
sub
pusha
imul
lahf
mov
jo
push
pushf
in
aas
cmp
adc
jns
sub
ds
out
insb
sub
xor
push
sbb
imul
push
xchg
jae
and
and
daa
fldl
sahf
leavew
mov
test
and
into
dec
pop
and
push
pop
pop
xchg
push
jo
adc
pop
out
push
inc
push
or
popa
mov
stc
ret
xchg
int
xor
in
jno
adc
push
data16
cmp
cmpsl
push
jecxz
movsb
loopne
cmpsb
fistps
add
into
lcall
cwtl
es
xlat
pop
mov
inc
call
int
sahf
lods
lods
stc
jbe
movsl
sub
sub
adc
mov
add
and
out
rol
and
int
push
int
int3
arpl
cmp
lret
xor
insb
fiadds
shrb
pop
jg
or
cs
mov
in
sub
fldt
sti
notl
iret
cmp
adc
out
sbb
daa
outsb
subl
jne
sub
mov
scas
in
rcl
ds
add
rcr
jo
dec
push
jmp
cmp
test
les
flds
lock
sub
in
stos
sub
xor
loop,pt
jle
jg
jmp
nop
dec
ret
cmpsl
icebp
adc
pushf
mov
sahf
lahf
shrl
imul
es
fwait
bound
frndint
mov
adc
test
xor
sbb
popa
imul
movsb
fisubrs
ret
fsubr
into
andl
mov
xchg
xlat
jmp
adc
push
inc
push
es
iret
call
in
jns
movsb
or
inc
or
lock
fstpl
xlat
mov
outsb
push
adc
stos
imul
xchg
jp
outsb
data16
in
jecxz
out
jo
push
sbb
pop
sar
and
mull
dec
out
adc
dec
icebp
std
pushf
xor
sbb
cmp
push
pop
lds
cwtl
and
inc
fbstp
mov
or
test
mov
sub
mov
aaa
out
stc
mov
shrb
cmp
xchg
jno
mov
fmul
pop
ret
jne
push
cli
xchg
sbb
shlb
xor
adc
out
sub
push
jge
sbb
push
popf
out
and
ret
in
lret
mov
or
xor
sub
push
jae
and
adcl
es
nop
aad
jbe
xor
divl
repz
xchg
in
outsl
add
mov
jnp
pop
push
fistpl
clc
daa
nop
pushf
fdivs
les
pop
call
repz
xor
fidivs
out
sbb
loop
jb
popa
xchg
loope
pop
subl
or
mov
lret
jp
bound
jne
inc
cmp
jnp
xor
out
lea
sub
fstpl
cbtw
into
xor
jg
movsb
loop
cmp
mov
jge
mov
out
jle
into
test
ror
mov
insl
pushf
mov
or
mov
adc
jmp
and
imul
push
rcl
lcall
and
push
mov
clc
xor
and
addl
stc
fcomps
mov
in
dec
daa
jb
out
sbb
push
push
sub
mov
adc
out
int
inc
lcall
inc
andb
mov
mov
adcb
pop
sbb
push
push
pop
mov
xchg
sbb
lret
push
mov
enter
test
cli
pop
icebp
adc
push
lds
sbb
sbb
cs
sub
idivb
and
test
gs
cmp
stos
xchg
cmp
xor
xor
out
ja
cmp
rcrl
into
dec
mov
les
sub
daa
mov
and
sbb
icebp
jae
push
dec
adc
ss
pop
sbb
mov
icebp
jns
mov
or
sti
pop
push
push
mov
jp
mov
or
cmc
sbb
xchg
movsl
adc
add
rcrb
shlb
dec
dec
rcll
jbe
fidivl
ret
cltd
inc
xor
leave
mov
inc
sahf
aas
fwait
add
inc
pop
xor
aad
cwtl
pop
sub
pop
adc
repnz
mov
jbe
jne
pop
jb
out
clc
nop
lds
fists
sbb
gs
mov
jg
in
imul
inc
loopne
test
add
test
mov
inc
sub
xchg
aam
test
les
cli
lcall
loop
jmp
incl
inc
out
out
out
mov
imul
gs
ss
jl
inc
xor
clc
aam
ss
daa
mov
mov
or
out
cld
call
imul
mov
lcall
cld
ficomps
inc
sub
sti
inc
xchg
mulb
add
mov
mov
jg
sbb
sbb
mov
out
gs
mov
sub
mov
imul
cmp
sbb
mov
fnstenv
or
cmp
sub
sub
pusha
inc
sub
adc
inc
add
push
mov
jmp
mov
jns
cmpsl
sbb
clc
imul
aas
std
mov
adc
or
lods
repz
arpl
mov
clc
xchg
pop
shl
int
lret
gs
mov
dec
cmc
xor
lahf
mov
cld
sbb
xor
stc
rcrb
pop
aam
xchg
mov
aaa
cltd
sub
in
imul
mov
lcall
nop
and
xor
push
sub
cmc
fs
cmp
xchg
xchg
enter
mov
mov
lahf
jg
pop
fucom
dec
fbstp
ret
or
jne
ss
int
pop
test
cmp
repnz
pop
jge
cld
mov
sbb
sbb
mov
daa
dec
ss
add
sub
sbb
jl
inc
aad
out
jle
cmc
push
aas
leave
dec
mov
addr16
dec
xorl
sbb
mov
sub
clc
loop
mov
fcmovne
jb
gs
test
jne
push
push
fdivrl
les
cmpsl
pop
lods
out
call
pop
cmp
or
jnp
mov
out
inc
sahf
cmp
lret
mov
cwtl
cmp
jge
mov
xorl
sub
arpl
dec
hlt
and
jbe
leave
fcomps
xor
or
xorb
lcall
adcb
xlat
mov
insb
lahf
or
push
dec
adc
push
xchg
test
dec
or
fdivl
and
mull
jmp
cld
mov
push
movsb
inc
xlat
nop
push
xlat
ljmp
push
pop
xor
in
scas
pop
ljmp
add
add
fistps
mov
jae
mov
dec
movsb
inc
movsl
fs
popf
jmp
mov
fwait
sbb
movsb
daa
fucomp
xchg
or
fists
loop
bound
fistps
mov
adc
movhps
stos
jno
jmp
mov
ds
lock
ds
sahf
outsl
mov
sbb
jo
lret
and
dec
lea
add
out
test
inc
xchg
data16
shll
cmp
ja
dec
fs
popa
xchg
iret
jns
lea
cmp
and
mov
int3
mov
ret
sub
add
leave
push
dec
fdivrs
data16
loopne
mov
dec
cld
add
rorb
pop
pushl
std
push
pop
add
xor
jae
sub
and
ret
out
pcmpgtb
fadd
cltd
xor
je
rorb
test
mov
xchg
push
or
stc
inc
cwtl
icebp
fisttps
mov
pusha
addb
mov
dec
dec
fldenv
mov
shll
inc
dec
add
enter
adc
dec
aad
lods
cmpsl
sbb
sbb
inc
ja
mov
xor
mov
daa
loope
pusha
add
ret
dec
shlb
lret
sbb
xchg
xchg
mov
dec
aaa
push
mov
movsb
sbb
or
mov
sbb
inc
mov
adc
adc
jmp
roll
jae
jne
pop
movhps
xchg
notl
or
fs
jmp
je
sbb
mov
pop
insb
jmp
pop
pop
dec
aas
into
xlat
push
mov
cltd
xchg
mov
cmp
push
lret
lods
fucomi
and
dec
sbb
lock
pop
cmp
jae
incl
add
pop
and
dec
sub
xor
lret
popf
or
movb
xchg
xor
jmp
jl
pushf
push
fstps
repz
adc
mov
and
mov
add
lahf
clc
ficoms
sub
adc
jmp
lds
rcrb
cs
shll
movsb
aam
and
repnz
fnstsw
xor
out
jge
cmpsb
sub
lds
pop
or
mov
int
dec
movsb
and
inc
push
iret
pop
xchg
dec
mov
mov
bnd
sub
shrb
push
adc
shll
mov
push
add
xor
xorb
pushf
jb
sub
cmp
push
and
das
inc
pusha
sub
adc
push
push
adcl
push
daa
test
adc
mov
lret
mov
scas
dec
jo
jae
sbb
add
cli
sar
sti
pop
pushf
xor
push
into
mov
fwait
or
sbb
popa
and
mov
loopne
push
xchg
jo
xlat
and
ja
mov
push
leave
in
mov
or
insb
ds
add
scas
pop
gs
aaa
push
pop
push
scas
dec
pop
xchg
xchg
insb
arpl
loopne
or
mov
adc
mov
ja
aam
and
in
jnp
test
adc
xchg
pop
adc
lret
dec
mov
and
outsb
jo
pop
xchg
mov
or
inc
movnti
iret
sarb
mov
mov
in
mov
cmpsl
into
nop
mov
mov
xchg
mov
mov
and
cmp
push
xchg
sbb
inc
push
push
pop
jno
lods
int
fs
sub
jns
andb
mov
push
rolb
adc
jnp
movsl
cmpl
and
mov
and
mov
mov
jne
mov
rolb
or
jno
lods
rorb
iret
repnz
imul
shll
cmp
in
xchg
cmp
out
push
loopne
mov
jae
cmp
xor
in
call
mov
addr16
or
sub
stos
fdivrl
icebp
pusha
cmp
stos
inc
xor
shl
inc
xchg
movsb
mov
je
js
pop
lods
mov
stc
xchg
adc
jne
cld
dec
or
xor
es
stos
mov
clc
aaa
cli
sbb
xchg
lea
push
arpl
inc
testl
pop
int3
push
pop
outsl
pop
jno
enter
outsl
jmp
js
mov
push
fstps
es
inc
pop
cmp
jmp
mov
xor
icebp
cwtl
xlat
sub
dec
test
xor
ret
adc
js
xchg
nop
xchg
jno
pop
jmp
jne
pop
add
ret
dec
xchg
or
ljmp
int
push
je
mov
std
es
popa
mull
and
lret
mov
cmp
jno
mov
and
movswl
add
shlb
sbb
sbb
xchg
aam
dec
jo
cwtl
ret
sub
mov
inc
lods
fcoms
fs
outsb
xchg
jae
and
add
movsb
mov
or
xchg
push
and
shll
inc
pop
mov
or
mov
add
cmp
decl
jb
push
arpl
mov
adc
pop
les
test
jmp
cmp
test
pop
divl
xchg
xlat
sbb
hlt
pop
js
pop
mov
iret
lret
inc
push
sub
ja
decl
ss
pop
push
lods
int3
cmp
insb
xchg
and
inc
cs
dec
fisubl
ja
lock
push
stos
mov
xchg
pop
cmc
sbb
repnz
jns
sbb
ret
and
in
and
sbb
ljmp
clc
jp
int3
ldmxcsr
mov
test
loope
or
mov
jl
fdivr
mov
out
idiv
inc
loopne
adc
mov
out
inc
cmpsl
inc
sub
push
push
call
jns
ljmp
xchg
orb
adc
in
xchg
inc
repnz
leave
enter
lret
xor
xor
pop
jnp
xlat
pop
push
mov
sub
push
xor
jle
mov
ret
fidivl
popw
jo
sub
rclb
sub
lea
cld
push
cltd
push
call
lahf
popa
xor
xor
fwait
es
repnz
enter
xchg
out
xor
enter
cmpsl
cmpsl
fnstsw
adc
cmp
call
mov
lds
inc
scas
jno
sub
sub
cmpb
mov
xor
push
inc
and
cmp
or
mov
cmp
in
in
mov
cmp
nop
scas
or
dec
cmpsl
pushf
loop
aam
add
or
das
push
jl
mov
or
adc
cmp
cmp
ret
stos
cmp
cmc
mov
scas
lret
pop
lods
add
rcr
or
or
or
std
xchg
fcomi
jno
push
in
lret
cmp
rcll
sbb
pop
xor
pop
fwait
pop
mov
cmp
cmpsl
out
mov
in
sbb
jnp
lods
mov
mov
bound
lods
test
clc
or
sub
xchg
xchg
int3
pop
xor
push
inc
push
das
fmuls
dec
pop
inc
inc
cli
mov
in
or
inc
femms
push
mov
je
leave
daa
xchg
in
or
or
xlat
add
daa
cmc
loopne
int
cs
mov
cmpsb
push
imul
gs
mov
cmp
test
jl
popa
lcall
dec
in
icebp
push
cmp
pop
pop
fs
and
pop
xchg
xchg
pop
or
xor
mov
mov
repnz
dec
fstpt
vmovups
inc
push
fwait
ljmp
testl
fs
jg
inc
out
movsl
sub
icebp
scas
add
jae
frstpm(287
mov
cmp
pop
mov
sub
enter
inc
sub
lret
sub
bound
xchg
stos
sahf
add
xchg
divl
adc
jl
movsb
sti
push
daa
xchg
add
lds
jns
mov
xor
scas
jno
jbe
ret
pop
lods
mov
ds
mov
cld
aad
aaa
or
ss
popa
out
jle
pop
push
push
push
mov
loop
sti
sahf
push
gs
roll
jns
sub
xchg
or
mov
test
shlb
test
fiadds
lods
cmp
jo
or
mov
xor
xchg
cmp
jo
in
push
and
lahf
loop
xlat
xchg
mov
jl
fisttpll
les
lret
mov
pop
ficoml
fdivrl
xchg
pop
ss
cltd
pop
mov
adc
sbb
pop
psadbw
jb
mov
fwait
xchg
jmp
mov
cmpsl
sti
je
aaa
xor
outsb
jne
xor
adcl
imull
adc
movsb
test
inc
add
xor
sub
xor
enter
decl
cmp
aas
movsb
insl
jecxz
inc
aaa
sub
les
push
inc
cmpsl
mov
test
in
fbstp
mov
dec
sbb
push
sub
repz
push
out
xor
lds
popa
aas
cmc
cmpsb
leave
dec
pop
mov
popa
popa
test
lret
test
mov
sub
cli
mov
push
repz
inc
int3
adc
xchg
movsl
mov
iret
jp
fimuls
pop
inc
mul
add
cmp
mov
inc
daa
add
iret
js
shr
daa
inc
ja
and
xor
cli
or
xchg
jae
sti
test
mov
out
jb
jmp
sbb
and
sbbb
xchg
lahf
mov
out
rcl
pop
or
xchg
rorl
mov
and
sub
dec
sti
inc
add
sub
add
mov
and
inc
test
push
pop
mov
inc
aam
push
dec
fisttps
pop
rolb
inc
cld
mov
cmc
xchg
lds
sbb
push
ret
mov
stc
mov
adc
icebp
ja
mov
hlt
leave
mov
sbb
xchg
fs
outsb
popf
ror
incl
shl
lahf
stos
pop
add
xchg
aam
pop
inc
sbb
or
ss
lahf
outsb
add
cmp
cltd
add
jp
inc
clc
in
ret
jecxz
jmp
push
ficomps
sbb
call
std
push
repz
sbb
or
adc
fldl
xor
or
loopne
mov
popa
jnp
xor
or
push
shll
imul
mov
vmovupd
sub
test
add
fadds
js
sub
and
push
mov
mov
mov
mov
jo
mov
push
aaa
dec
pop
add
xchg
shlb
int
jge
mov
pop
jecxz
mov
fmull
xchg
mov
enter
ret
shlb
adc
in
mov
jns
or
cmp
fstcw
jbe
xchg
push
mov
cmp
hlt
xlat
sbb
sub
lcall
cmp
hlt
mov
push
xchg
bnd
ret
les
pop
fs
push
push
sub
ret
test
jecxz
cmp
jmp
xor
stos
aaa
xchg
icebp
imul
and
call
sahf
fucomi
pop
xor
or
and
cmp
test
push
loope
insl
sbb
jnp
xchg
push
or
inc
and
idivb
jecxz
adc
out
dec
jns
fcom
fcomp
pop
mov
xchg
sbb
inc
dec
fimuls
fcoms
or
dec
jle
mov
fiaddl
inc
fcoml
mov
pop
sbb
insb
add
popa
mov
lret
xor
push
inc
jnp
outsl
cmc
adc
or
cmp
outsl
push
xchg
cwtl
or
and
sbb
adc
insb
jge
pop
add
sti
stc
pop
xchg
dec
and
loop
nop
imul
dec
es
cmp
or
xchg
stc
das
in
and
lahf
inc
shrl
ss
dec
cmpb
dec
call
fwait
nop
daa
cltd
rorb
sub
aad
push
pop
sub
jl
push
mov
add
adc
push
test
mov
andl
mov
push
and
sub
out
mov
jae
daa
cmp
aas
pop
xor
cmp
xchg
jnp
cs
jnp
jns
jge
lcall
call
sbb
sbb
scas
clc
lds
xchg
push
jnp
pop
leave
xchg
cli
aam
xor
lods
fists
stos
iret
into
mov
loopew
sub
mov
hlt
mov
jl
scas
mov
jb
lods
add
imul
imul
pop
loop
mov
sbb
adc
repz
xor
mul
lods
dec
dec
int3
pop
pusha
xor
imul
lret
mov
and
sub
movb
push
sub
fsts
out
mov
mov
fcmovne
mov
cs
add
outsb
scas
out
pop
pusha
push
aaa
icebp
and
xchg
lock
roll
iret
data16
pop
or
push
pushf
mov
cli
scas
jae
imul
mov
inc
test
and
sub
scas
push
xchg
pop
jl
loope
dec
sbb
xchg
mov
sti
xchg
mov
insl
movsl
popa
or
std
bswap
in
pop
ret
sbb
out
dec
mov
data16
dec
push
fimuls
mov
cmp
js
inc
mov
fs
mov
lahf
xchg
jne
jno
dec
add
mov
dec
sarl
xchg
push
dec
sti
in
pop
and
and
xor
pop
je
into
add
jecxz
lods
sti
mov
inc
das
dec
cmp
cmp
xchg
sahf
aad
mov
test
inc
cmp
cmp
pop
loope
push
mov
pusha
mov
cmpsb
out
adc
ja
push
adc
insb
dec
xor
out
out
das
rcr
jns
fstps
lahf
orl
cmc
test
test
dec
sbb
mov
aaa
mov
pop
and
jmp
add
vcvtdq2ps
mov
add
ds
jmp
mov
mov
sub
insl
mov
lods
divb
roll
mov
xlat
pop
sub
ss
cwtl
or
aas
in
push
mov
dec
sub
cvtdq2ps
in
xchg
cmp
cld
adc
iret
stos
bound
xchg
push
data16
push
mov
pop
or
scas
daa
inc
xor
rorl
aaa
ftst
push
cs
and
cs
lods
loope
push
out
int
int
sub
jo
xor
fwait
lds
mov
inc
xor
dec
and
std
jg,pn
in
pop
sub
add
jge
xchg
insb
jns
jno
dec
jmp
jge
mov
xlat
movsl
inc
jmp
outsb
adc
mov
cwtl
and
or
dec
push
stos
sbb
aad
cmp
adc
add
jae
mov
js
pop
jle
hlt
sub
jge
push
roll
mov
ja
xchg
sbb
rclb
test
imul
adc
cmc
dec
shlb
lret
or
fstl
push
aam
inc
sub
aaa
xor
push
mov
push
arpl
in
nop
jmp
and
div
lahf
pop
test
push
test
sub
jno
pop
test
iret
push
push
hlt
or
ljmp
cmpsb
pusha
xchg
sti
mov
rcr
out
lods
das
push
fsubs
and
js
xor
or
adc
shlb
sub
dec
mov
mov
pop
xorb
add
xchg
das
jne
push
idivl
xor
fmull
or
scas
dec
cltd
or
push
or
xchg
aam
stos
fisubrl
cwtl
leave
mov
or
jg
addr16
xchg
lods
test
scas
fadds
cltd
cld
xor
popf
cld
lcall
and
inc
jp
push
inc
pop
push
lods
aaa
negl
xor
dec
or
les
in
xor
push
jecxz
shrb
push
xor
js
jmp
mov
pusha
cmp
mov
inc
std
insl
lahf
out
lcall
mov
sub
sti
out
add
enter
pop
xchg
push
adc
inc
fwait
or
pushl
mov
sub
mov
outsb
xor
add
aad
push
lahf
mov
in
mov
mov
jle
push
cmp
sbb
mov
push
lock
dec
adc
jl
sbb
mov
inc
inc
adc
jbe
push
fsubl
dec
jne
dec
cltd
jae
in
pop
movsb
or
sbb
inc
cmp
lea
mov
or
jecxz
ret
pop
pop
dec
mov
in
nop
xor
movsb
pop
xchg
scas
push
call
and
pop
mov
fdiv
push
sub
fsubrp
sub
xor
xor
stc
jl
aaa
mov
lods
mov
enter
add
mov
push
jmp
imul
jns
aam
push
xchg
push
lock
sub
cmp
xchg
icebp
inc
or
xchg
repnz
fisubl
dec
js
dec
in
cmp
popa
imulb
mov
jecxz
mov
xchg
divps
adc
psubd
or
cmpsb
fildl
frstor
shrb
sub
lcall
push
push
stos
xlat
mul
rcrl
outsl
cmp
enter
pop
xchg
call
jp
add
mov
sbb
jb
ljmp
sub
stos
pop
mov
add
push
sbb
in
jae
ja
push
and
outsl
cmp
repnz
pushf
cs
or
cltd
aad
mov
xchg
and
aaa
xlat
mov
push
les
mov
mov
and
and
cld
add
push
dec
arpl
test
fs
pop
sahf
mov
in
cmc
xorb
bound
push
cmp
mov
add
std
jp
insb
jmp
sbb
sbb
scas
pop
imul
or
test
movsl
insb
test
enter
lea
mov
pushf
and
sbb
imul
push
adc
or
sahf
hlt
adc
mov
out
cmp
jl
cli
js
pop
mov
jl
inc
in
add
inc
jo
mov
in
icebp
notb
ds
xor
ljmp
pushf
dec
jp
ret
xchg
push
call
popa
mov
adc
or
and
bound
daa
mov
in
and
lret
or
jb
dec
mov
gs
cmpsl
dec
or
nop
dec
add
and
call
cmpb
cli
mov
mov
call
fistps
pop
pop
mov
lcall
ss
pop
jo
ret
sub
insb
and
lcall
jle
imul
sub
xor
and
imul
push
imul
pushf
add
push
out
mov
jae
aaa
shl
adc
dec
xor
cmpsb
insb
jmp
je
movsb
clc
pop
lret
bound
add
ja
mov
out
sub
cmpl
jmp
and
xchg
movsl
dec
push
xor
adc
sub
fwait
inc
clc
int
xor
fsubrs
jo
loop
inc
mov
add
fldt
jb
push
call
and
sub
outsl
sbb
js
lret
or
pop
mov
push
ret
je
mov
cwtl
mov
scas
leave
or
mov
icebp
or
mov
pop
int
push
add
jmp
jae
xchg
mov
repnz
ret
mov
aas
lds
push
loope
mov
mov
inc
push
sti
jmp
cmpl
sarl
and
cmp
jge
shlb
add
sub
roll
lea
inc
shll
pop
fstps
mov
lea
ljmp
shll
xor
movsl
mov
dec
mov
in
push
dec
pop
mov
call
dec
pop
scas
jp
sub
aad
xchg
and
mov
rcpps
out
sbb
pop
add
mov
add
pop
inc
mov
imul
sub
cs
xor
mov
lahf
dec
adc
mov
xor
lret
sub
ret
cmp
mov
xchg
rep
pusha
out
xchg
pop
mov
adc
adc
cmp
in
cli
test
les
or
movsb
lret
hlt
test
out
bound
xchg
int3
push
pop
shrl
es
push
test
fs
icebp
cmpsl
and
push
sbb
test
out
pop
xor
push
lds
addr16
push
jnp
mov
dec
jno
ret
mov
cmpsl
sub
and
or
push
sahf
dec
mov
push
cmpb
int3
cmp
cmp
pop
cmp
pop
and
das
cmp
adc
or
push
insl
cwtl
add
dec
ja
in
push
pop
hlt
push
cmc
cmpsl
in
insl
cmp
pop
aad
pandn
insb
test
sub
mov
push
fwait
arpl
pop
int
add
jmp
leave
das
push
sbb
cmp
lods
inc
cs
push
xor
or
lcall
xchg
mov
push
pusha
movsl
cli
sub
cmc
lods
or
mov
leave
out
pop
in
adcb
icebp
mov
push
out
ret
mov
push
cltd
add
jge
pop
xor
scas
and
sbb
adc
cmp
mov
icebp
push
xchg
clc
jnp
jmp
gs
lods
leave
mov
lretw
fsubrp
sbb
into
loope
in
daa
adc
add
ret
roll
or
in
loop
dec
rol
push
loop
not
jp
mov
movsb
gs
jae
sbbb
push
dec
jecxz
pop
pop
jmp
and
mov
cltd
xor
and
test
inc
hlt
fsubl
or
cli
push
loope
lods
pop
dec
push
repz
int3
cs
jo
in
cmpsb
cmpsb
iret
xor
cmc
dec
hlt
inc
int3
mov
lret
data16
xor
ret
jne
pop
std
call
lahf
movb
stos
cs
lret
repnz
movsb
mov
fistpl
mov
push
js
fidivs
mull
xchg
mov
outsb
mulb
aam
jne
mov
jo
xchg
mov
je
dec
mov
and
mov
or
cli
shr
fists
je
test
roll
movsb
cwtl
sbb
push
add
or
int
int
ret
ret
inc
dec
into
and
in
jae
push
xchg
mov
mov
in
pop
and
sbb
neg
data16
sub
jle
insl
mov
out
insb
jle
dec
xorl
jmp
movsb
cmpsl
bound
fwait
inc
cmp
jg
lock
mov
cmp
xchg
pop
repnz
lahf
xchg
cmp
leave
xor
shr
pop
scas
xchg
jo
lods
movsl
cmpsb
scas
fmuls
cs
cmp
scas
mov
and
push
pop
popf
pop
shlb
mov
jns
imul
jp
stc
mov
fsubrp
test
adc
or
mov
leave
clc
sub
push
pop
shlb
mov
fdivrs
push
insb
shlb
out
mov
es
mov
push
rcll
inc
adc
lea
sbbl
jle
ret
ror
push
je
mov
cmp
in
mov
pop
sub
adc
rcrl
lods
dec
cmp
mov
std
bound
mov
int3
in
shlb
inc
fcomip
sub
jl
outsl
jns
in
mov
mov
jg
ljmp
dec
sub
jb
out
fcmovbe
mov
dec
adc
pop
add
cltd
shrl
jns
gs
adcb
repz
jecxz
jecxz
xor
mov
ret
jg
and
push
lret
push
xchg
das
inc
jns
push
and
push
or
jb
cmp
insb
ret
add
fwait
aas
push
mov
inc
adc
inc
pop
sub
push
cmc
mov
ja
xchg
pop
inc
es
insb
aad
insb
out
cmp
enter
aaa
js
and
cld
insl
dec
dec
les
repz
cwtl
lcall
mov
cwtl
shr
adc
js
mov
pop
jnp
fs
scas
xchg
jmp
or
dec
fdiv
mov
sar
popa
addr16
mov
sub
lea
in
xor
xchg
icebp
adc
enter
push
push
xor
ja
mov
hlt
dec
push
call
sbb
outsl
cmp
mov
add
pop
or
jmp
xchg
scas
inc
ja
loope
adc
jmp
test
cmpsb
outsb
aaa
mov
test
pop
pop
leave
outsb
lock
jno
push
inc
js
jg
imul
mov
gs
in
int3
add
pop
jmp
push
mov
fistpl
addr16
cmc
insl
jnp
cmpsl
dec
adc
lretw
jnp
nop
ret
outsl
pushf
inc
sbb
inc
or
cmpsl
fwait
sub
cltd
aaa
dec
lds
push
mov
fmuls
or
clc
mov
ret
xchg
mov
bound
in
mov
inc
dec
push
mov
sub
inc
and
mov
cmp
test
inc
xchg
out
test
scas
ret
addr16
mov
enter
and
ljmp
ljmp
push
rcll
imul
mov
fs
adc
cmp
fnstsw
xor
xor
and
inc
roll
adc
sbb
jae
xlat
test
sub
xchg
jmp
xchg
addr16
push
push
jg
ss
adc
mov
fwait
xchg
les
pop
xor
adc
dec
pop
adc
ror
lahf
cmp
es
imul
scas
inc
aas
ljmp
push
hlt
adc
xor
xor
ja
pop
xchg
inc
clc
inc
ljmp
add
pop
mov
xor
jge
mov
dec
lret
adc
gs
call
ret
push
imul
mov
stc
out
mov
lds
xor
mov
add
std
xor
inc
pop
adc
out
iret
lock
enter
mov
or
mov
or
mov
cs
test
push
mov
sub
lret
pushf
int3
xor
mov
scas
fdivrs
jl
xchg
mov
cld
mov
pusha
repz
dec
jo
movsl
stos
ljmp
fnstcw
ja
jmp
pop
es
inc
sbb
in
out
adc
fwait
shlb
dec
mov
hlt
xchg
cmp
fdivl
adc
push
mov
jle
int3
stos
repz
push
dec
adc
mov
push
test
xchg
cmp
mov
adc
jmp
imul
fwait
or
pop
adc
dec
xchg
sbb
pushf
xlat
mov
imul
or
in
stc
mov
mov
jbe
mov
out
fs
jbe
ss
jns
icebp
aam
sahf
leave
mov
and
dec
int3
mulb
repnz
enter
cltd
adc
mov
pop
inc
ss
stos
jnp
xchg
mov
jns
mov
jne
xor
ret
idivl
cmpb
sbb
sbb
sub
push
sbb
and
push
dec
loope
rcrl
fidivrs
push
call
sbbl
mov
adc
insb
sbb
jb
cmpsl
rcll
xchg
and
loop
mov
push
test
lcall
sbb
cld
sarl
inc
jne
insl
push
daa
mov
subb
push
mov
lds
filds
stos
adc
jne
repnz
mov
inc
in
cmp
cmp
xor
xor
pushf
adc
push
inc
lcall
push
leave
mov
fsub
xlat
jmp
push
scas
sahf
pop
enter
mov
aaa
aad
dec
call
ja
ja
inc
cli
loope
movsl
adc
rcrb
mov
loopne
cwtl
ret
scas
dec
mov
cmp
cmp
push
and
aam
imul
fimuls
out
addb
jne
outsb
pop
cmp
ds
test
mov
ss
outsb
stc
dec
pop
adc
in
cs
subl
mov
sti
rdtsc
or
pop
lcall
adc
sahf
outsb
jp
xchg
dec
jp
dec
mov
inc
test
push
imul
divb
pop
test
xorl
pop
mov
stos
pusha
jmp
imul
xchg
and
add
or
push
fldenv
arpl
popa
adc
lock
and
xchg
dec
mov
jecxz
dec
jge
in
cmp
dec
loop
lahf
pop
je
arpl
int
fstps
pushl
sub
test
loopne
bound
aam
ret
aad
and
jnp
cmp
push
pop
in
jmp
imul
mov
mov
dec
lods
scas
xchg
mov
sub
std
out
dec
es
xor
adcb
cmp
lods
mov
sub
cmp
cmp
pop
inc
ss
add
jg
xchg
xor
xchg
sbb
addr16
sti
cld
cmp
cs
cmp
pushf
mov
push
shrl
dec
mov
sub
fisubl
and
dec
pop
mov
pushf
xchg
into
cmp
pop
xchg
fimull
enter
lds
cmpsb
jbe
inc
add
xchg
das
les
shrb
pop
xor
gs
popa
xchg
mov
pop
int
cwtl
jb
jmp
clc
aaa
and
mov
cmc
pop
inc
movsl
add
sbb
jno
aam
dec
int
or
adc
jl
pop
jg
dec
xor
xchg
lods
dec
or
lret
mov
cmp
outsl
xorb
sub
nop
push
aam
fiadds
cs
loop
jle
sub
push
out
adc
out
dec
mov
push
fwait
add
mov
popf
cmc
mov
imul
mov
inc
lcall
mov
movsl
jb
gs
mov
mov
lock
cmp
xchg
mov
sbb
mov
iret
mov
gs
push
add
dec
sbb
bound
jg
mov
fldcw
je
icebp
ja
lods
pop
cmp
popa
insb
iret
pop
pushf
stc
cmp
lds
add
inc
pop
lcall
jae
push
push
add
adc
xlat
jge
jb
repnz
outsb
and
jle
inc
fidivrs
sub
ret
xchg
xor
cld
fsubs
cmp
scas
lock
stc
gs
stos
mov
mov
mov
pop
leave
sub
add
ficoms
xrelease
xchg
ret
into
push
fiaddl
mov
call
movsb
ljmp
jmp
mov
adc
mov
dec
stos
movsb
xchg
jae
ss
push
inc
inc
jne
in
into
sbb
mov
inc
icebp
jnp
js
cmp
mov
je
sub
pop
lret
xchg
call
loopne
sub
loope
gs
adc
rcll
aaa
int3
scas
fbld
rclb
in
mov
add
std
mov
jno
out
shr
mov
stos
sbb
sahf
pop
enter
cmc
ret
dec
dec
lea
cmpsl
neg
inc
pop
sbbl
sub
inc
mov
fadds
xlat
bound
cmp
push
fisubrl
fwait
cmpsb
and
mov
cltd
cmp
fnstcw
xor
pushf
cmp
pop
inc
pop
pop
roll
sbb
pushf
call
lret
adc
sbb
scas
jg
jmp
fs
les
pop
mov
xor
aas
push
push
jle
ja
addr16
and
jmp
cmc
sbb
jno
jne
mov
or
aam
leave
leave
mov
dec
pause
stc
ds
lcall
adc
icebp
call
push
cmpsb
hlt
add
mov
push
sbb
inc
scas
out
mov
mov
dec
gs
imul
pop
cmp
add
push
mov
shlb
lods
ret
mov
or
shr
push
or
or
push
adc
inc
sub
push
ret
push
ret
xchg
mov
int3
loopne
mov
add
in
cmpsl
nop
popa
idiv
in
and
out
out
dec
in
push
sbb
lock
mov
rol
mov
sarb
out
or
xchg
mov
add
cltd
sarl
loop
jg
or
leave
adc
int
test
or
add
fwait
dec
and
push
lahf
stos
pop
mov
mov
test
fwait
and
lods
xchg
les
nop
mov
push
mov
std
js
je
ret
fsubrl
xor
ljmp
jnp
mov
jle
jns
fsubrl
scas
add
pop
inc
mov
and
jo
lods
mov
or
adc
pop
cmpsl
faddp
test
mov
and
push
dec
mov
jo,pt
roll
inc
mov
mov
inc
sub
cmp
shlb
mov
pop
daa
mov
jge
inc
mov
xor
in
loope
imul
pop
mov
nop
add
jo
cmpsl
mov
mov
stos
icebp
stos
sbb
cltd
add
stc
into
and
add
xor
test
sbb
cmp
cltd
jge
imull
call
cmpsb
cmc
adc
sti
inc
and
insl
leave
adc
aad
or
sub
lock
push
mov
imul
dec
out
pushf
shll
xor
outsb
sbb
lahf
jb
mov
adc
push
fs
jge
mov
rorb
adcl
aaa
bound
decl
mov
sbb
frstor
cmp
push
bound
popa
sbbb
sub
xchg
push
out
outsb
push
push
cmp
mov
and
dec
fwait
cmp
add
mov
fnsave
mov
sti
outsb
roll
inc
jbe
pushl
mov
xor
js
cltd
xchg
mov
into
mov
adc
ljmp
stc
out
push
mov
cld
or
mov
inc
pop
xchg
mov
rorb
pushf
leave
lea
xor
jb
ja
pop
push
ss
pop
sbbl
sub
sub
add
sbb
scas
mov
mov
in
and
dec
dec
shr
adc
xchg
cs
out
dec
aas
iret
test
stc
sbb
pop
adc
cmp
mov
hlt
scas
sbb
aaa
mov
push
in
lret
and
les
pop
arpl
sub
stos
loope
push
rcr
cmpsl
iret
adc
pop
aam
mov
dec
cmpsl
jecxz
adc
in
lret
stos
jnp
sahf
movsb
pop
mov
sbb
in
sbb
xor
shl
out
or
pop
push
xchg
dec
pop
push
xor
jae
jge
das
imul
and
adc
adc
adc
dec
in
je
les
pusha
inc
mov
push
xchg
ret
ret
inc
mov
cmp
jl
cmpsb
cmp
jns
inc
add
mov
mov
sbb
jno
mov
xor
pop
data16
or
xchg
test
xchg
leave
je
pop
adc
sbb
movsb
add
pop
jmp
aam
lret
cmp
xchg
jecxz
aaa
loopne
bound
movsl
push
push
pop
imul
xor
xchg
jp
popf
and
pushf
push
dec
out
test
lret
xor
pop
push
push
mov
mov
sub
jecxz
lods
insb
xchg
repz
mov
mov
mov
leave
dec
mov
jge
icebp
inc
add
insl
lea
cmove
xchg
aam
inc
mov
cmc
fcmovb
ret
adc
sub
cmp
shrl
jb
inc
sar
fwait
jns
sbb
iret
jmp
or
aas
adc
mov
mov
inc
sub
jp
repz
xchg
sbb
stos
out
outsl
jmp
push
mov
jb
je
xchg
divl
xor
jge
jno
inc
xchg
ljmp
bound
pop
cmpsl
in
add
and
dec
dec
sbb
push
pop
or
jg
mov
in
push
push
negl
ljmp
mov
lret
mov
cld
sub
loop
and
dec
out
dec
xchg
adc
cmpsb
and
inc
and
mov
rorl
aas
ss
iret
pop
xor
js
sbbb
jecxz
xchg
rcrb
pop
add
fs
fstp
bound
cmp
xor
jp
cmc
adc
pop
cmp
test
add
dec
push
outsb
cmc
or
inc
adc
shll
jne
mov
inc
cmp
repnz
dec
insl
adc
cmpsl
jne
xor
inc
leave
or
sub
add
into
mov
pop
outsl
mov
add
jb
sahf
xor
pop
mov
mov
aam
xchg
pop
sbb
nop
xchg
pop
mov
loope
jmp
pop
cmpsl
push
stos
movsl
mov
push
xor
xchg
push
in
into
pusha
imul
sti
pop
je
push
adc
xchg
pop
inc
sbb
mov
movsb
fistpl
out
cwtl
adc
mov
jmp
jmp
dec
orb
cmpsb
fstps
and
testl
xlat
imul
jae
outsb
add
es
jmp
ss
pop
scas
or
pop
pop
mov
and
stos
pop
std
movsl
pop
push
mov
lock
lds
fildll
xor
adc
mov
out
das
lods
dec
mov
mov
aas
roll
sbb
lcall
std
inc
sbb
mov
xor
jmp
jl
adc
adc
ja
cmp
in
push
bound
xchg
mov
or
xor
mov
popf
divb
push
je
jne
lds
imul
xchg
test
cmc
mov
dec
dec
lcall
insl
push
sbb
adc
stos
fwait
xor
pop
mov
aad
rcll
sti
dec
xor
xchg
or
mov
jb
adc
aad
out
jmp
pop
lods
xchg
add
mov
test
lods
mov
xor
cmp
push
xchg
inc
cmp
mov
cmc
insb
push
mov
xor
arpl
adc
dec
mov
and
jno
sub
pusha
jl
fsubrs
push
cmp
and
leave
shrb
in
push
mov
sub
sub
mov
call
insl
sbb
mov
ret
dec
jns
clc
xchg
push
and
dec
enter
shlb
divps
and
dec
and
mov
sub
imul
dec
popf
mulb
lock
and
out
dec
repz
pop
pusha
mov
pusha
lcall
mov
rorl
mov
shll
lahf
pop
imul
jle
xchg
pushf
or
xchg
fdivs
pop
les
rorl
mov
loopne
aam
pop
xor
test
xor
popf
dec
xor
lahf
cmc
xor
jae
cwtl
cmp
push
push
iret
adc
shrb
push
adc
mov
ja
jge
cmp
jnp
adc
push
setne
xchg
call
cmp
mov
cwtl
shrl
xor
hlt
ljmp
xor
pop
push
inc
xchg
jecxz
rcrl
or
cmp
adc
add
orb
add
push
sub
out
xor
lock
fs
js
mov
inc
mov
lods
mov
jo
mov
and
test
jno
rorl
adc
es
shlb
xor
push
sbb
jbe
push
and
daa
repnz
mov
cmpsb
adc
mov
bound
mov
hlt
pop
out
and
lods
bound
nop
nop
push
fistps
test
jbe
rcrb
aaa
clc
cmp
aaa
fisttps
shrl
leave
and
aas
or
sbb
cmp
subb
jp
cmpsb
shll
cmp
sbb
into
xchg
test
and
aaa
ss
lcall
xchg
int
aad
xchg
idiv
mov
push
stos
pop
out
xchg
repz
fmuls
lret
jg
lods
add
or
arpl
lock
push
xchg
mov
push
push
xchg
call
push
dec
xlat
stos
jmp
cs
xor
or
bound
pop
cmp
add
ret
sub
incl
test
cmp
cltd
push
in
pop
xchg
popl
fs
jge
ja
inc
outsl
push
cmp
jle
cmp
rorl
sbb
push
or
cmp
aaa
jg
sub
data16
stc
stc
gs
sub
jnp
pop
ja
xchg
in
popf
inc
push
or
cmp
xor
mov
test
mov
mov
jns
js
adc
mov
pop
scas
scas
loopne
inc
sub
ss
stos
pop
inc
sbb
sbb
bound
loopne
cmpsl
push
push
jecxz
or
inc
or
push
mov
jne
repz
cli
orb
mov
test
mov
sbb
adc
inc
decb
icebp
pusha
cmp
repnz
idiv
jg
push
inc
std
push
jp
cltd
jbe
mov
xchg
xchg
mov
iret
pop
rcr
xor
push
push
fldt
xor
cmc
rorl
mov
mov
cmc
xor
je
div
and
xor
and
ret
jle
xchg
jne
push
clc
bndldx
inc
test
test
lcall
dec
xchg
in
pusha
xchg
xor
lea
aam
push
or
push
cs
adc
int3
fnstcw
rcrb
and
pushf
call
dec
xchg
leave
dec
dec
or
jge
pop
flds
out
sbb
xchg
lods
sbb
andb
loop
sbb
aaa
fs
lods
cmp
or
in
jge
outsl
lahf
mov
inc
mov
fdivrs
xchg
push
pusha
add
int3
outsb
pop
push
and
fcomps
cmpsl
test
mov
adc
cli
dec
cmp
icebp
das
lea
sti
add
xor
cld
add
bound
rcll
sbb
xor
mov
mov
sbb
push
lahf
lods
jmp
lcall
adc
adcl
stos
sahf
mov
ret
dec
test
jge
inc
ljmp
pop
sti
insl
bound
push
mov
fwait
nop
sub
sub
adc
stc
sub
adc
cmp
mov
xchg
int3
mov
mov
cmpsl
stos
sets
rcl
pop
test
fisubl
aam
icebp
mov
xchg
pop
sub
in
cltd
clc
mov
clc
jge
dec
mov
push
add
fwait
int
cmp
adc
in
movsl
fnstsw
mov
adc
imul
mov
nop
push
into
incb
push
dec
test
push
cwtl
mov
adc
sbb
mov
insb
push
jle
inc
jbe
jae
push
sbb
inc
cld
push
mov
nop
lahf
stos
mov
ss
lret
pop
movsb
imul
outsl
inc
and
cmp
push
mov
adc
cltd
jl
movsb
push
mov
push
mov
lods
andl
sub
cmp
dec
inc
dec
dec
lret
mov
dec
and
cli
call
lods
push
cmp
and
and
test
xor
loope
pop
iret
cmpsb
mov
inc
xchg
and
leave
pop
or
sub
fstps
dec
sbb
xor
or
mov
aam
lahf
jge
shlb
fidivrl
cmp
rclb
cmc
mov
cmc
mov
pushf
add
push
cmp
addr16
lret
je
xchg
data16
mov
aas
and
test
mov
and
repnz
pcmpgtb
mov
ljmp
jae
push
out
popf
mov
jno
jbe
or
clc
push
xchg
out
sar
mov
cmp
push
mov
jb
hlt
add
daa
fs
sbb
mov
ss
dec
mov
or
imul
shl
movsb
mov
pop
paddusb
add
gs
jo
in
mov
fnstcw
add
in
mov
sub
mov
xor
loope
mov
mov
or
inc
mov
ficoml
xchg
push
in
cmpsb
mov
out
cmp
dec
std
and
popf
mov
push
xchg
jle
sbb
ret
scas
rcrb
cltd
ja
mov
sahf
jl
mov
pop
fildll
pop
sti
js
jne
mov
dec
sub
imul
or
adc
cmp
dec
test
incl
inc
adc
mov
xor
pop
int
dec
sbb
loop
pop
sbb
call
ljmp
mov
pusha
lret
sub
lods
pop
inc
add
sub
enter
sbb
mov
popf
inc
xlat
cs
add
ljmp
xor
insl
stos
imul
fwait
lcall
shrb
repz
loopne
push
and
scas
mov
mov
mov
leave
cmp
dec
test
sub
mov
ss
adc
repz
adcb
inc
daa
sbb
sub
aas
ss
jne
addr16
hlt
mov
inc
jb
lods
adc
lods
das
cmp
popa
add
test
fidivs
fcompp
pop
pop
je
pop
pusha
mov
cmc
mov
jl
lret
jmp
decl
xchg
jge
mov
adc
cmp
rcrb
fiaddl
cmp
sub
pop
mov
cmp
mov
jg
xchg
cli
insb
imul
test
pop
mov
mov
cmp
mov
push
pop
in
or
jge
cltd
jbe
mov
jb
loope
adc
mov
adc
mov
jo
imul
adc
pop
inc
inc
fnstcw
pop
rcrb
xchg
xorb
shrb
sbb
and
cmc
adc
mov
mov
push
data16
imul
mov
movsl
jl
xorl
mov
jecxz
add
out
mov
push
in
insb
jle
sarl
das
in
loopne
shrb
leave
fwait
lds
sub
sahf
mov
inc
dec
pusha
sti
mov
test
adc
out
sbb
popf
mov
pop
out
inc
aad
cmp
sbb
int
lock
lcall
dec
sbb
mov
shlb
cmp
sub
sub
cmc
das
lcall
xchg
add
jl
pop
sbb
mov
pop
push
aas
inc
add
xor
jbe
je
imul
stos
mov
clc
push
push
testl
cmp
jo
ror
out
add
lahf
pop
mov
lcall
push
daa
hlt
sahf
xor
mov
pop
pop
push
and
stos
push
push
jbe
pushf
xor
ud2
mov
pop
pop
jmp
dec
sti
dec
outsb
iret
dec
xor
stc
dec
imul
or
pop
xchg
push
push
movsl
push
push
std
jmp
inc
mov
sub
ret
call
pop
scas
push
sahf
and
stos
dec
mov
mov
mov
mov
pushf
mov
lahf
ljmp
ret
xlat
pusha
mov
fiadds
out
imul
test
jl
movsb
rcrl
push
adc
hlt
or
cli
movaps
hlt
fstps
jo
or
cmp
sub
cli
xchg
pop
popf
mov
adc
mov
xor
cltd
sbbl
outsb
sub
fisubrl
iret
test
lds
jne
lret
dec
dec
rorl
stc
lock
aas
adc
pop
decl
adc
pop
push
out
ret
jns
lds
pop
xor
cmp
fidivs
outsl
mov
sub
dec
rclb
and
mov
sub
pop
xchg
cmp
aaa
inc
xchg
jmp
push
pop
add
sbb
inc
rol
out
fwait
lock
in
popa
and
pop
testl
push
gs
pop
push
data16
inc
pop
es
cmp
cmpsb
mov
divl
sbb
jmp
lods
andb
inc
in
sub
mov
pop
sbb
data16
dec
int3
repz
sahf
lahf
xchg
ja
in
mov
push
ljmp
sub
test
loopne
cmpsl
jp
mov
scas
xor
inc
jb
into
inc
mov
je
leave
cli
popa
adc
mov
xchg
jge
xor
stc
cmp
ds
data16
push
dec
add
dec
fildll
push
lock
add
mov
push
aam
dec
dec
rorl
loop
xchg
call
cli
shl
mov
imulb
pop
mov
daa
cltd
js
fnstenv
jge
stc
faddp
mov
mov
rol
ret
cmp
inc
jbe
ficompl
jo
jo
sbb
cmp
fisttpl
addr16
inc
les
push
rorb
dec
sub
and
cmp
mov
div
icebp
sub
jns
mov
pop
rcll
mov
jecxz
repz
jle
add
or
test
jge
xlat
cmpsb
jmp
fistpl
add
scas
jo
insl
test
jle
add
stc
insl
hlt
cs
push
mov
clc
data16
or
bound
popa
xor
sbb
and
scas
mov
add
lods
sub
pop
arpl
push
shlb
jp
jno
icebp
cmp
lahf
leave
lret
lock
pop
test
shlw
xlat
lahf
sahf
mov
push
ds
orb
xchg
icebp
mov
pop
leave
jecxz
int3
test
out
movsl
sub
or
adc
xchg
pop
sar
fldl2e
orl
ret
sub
xchg
mov
scas
pop
cmpsb
orb
push
cmp
pop
shrb
jb
jl
out
out
fldenv
scas
orb
cmp
imul
cli
fldl2e
fnstenv
clc
dec
lods
push
jbe
add
repz
inc
inc
pop
mov
and
jae
insl
pop
icebp
pushf
pop
fwait
fbld
push
js
mov
mov
icebp
jb
inc
pop
mov
push
inc
xchg
pop
mov
cwtl
mov
in
icebp
sbb
mov
sub
jbe
test
jmp
imul
push
mov
imul
bndstx
sub
icebp
pop
fsub
hlt
xor
or
mov
scas
inc
mov
or
popa
repnz
xchg
idivb
ret
and
ror
or
fwait
mov
mov
mov
push
lock
add
jle
repnz
loope
or
rcrb
xlat
pop
scas
cmc
sbb
cmpsl
cmp
add
lcall
cmpsb
test
pop
outsb
inc
mov
rolb
or
aad
int
inc
popf
push
jmp
mov
cmp
test
push
shll
inc
and
mov
push
ljmp
push
sub
inc
inc
rcrb
mov
adc
imul
leave
lods
pop
sub
ss
imul
movsb
and
shll
lret
aaa
movsl
loop
frstor
test
shrb
xchg
pop
icebp
fidivs
sbb
jecxz
add
test
cmp
push
ljmp
shll
aam
xor
sbb
pop
jb
add
push
outsl
pop
cmp
xor
inc
lods
hlt
aas
in
aad
scas
mov
mov
stc
ja
xlat
data16
jo
mov
cltd
je
imul
push
das
jl
lea
ljmp
icebp
dec
fwait
lahf
jno
dec
loope
and
ret
stos
stos
pop
or
out
xchg
adc
lcall
and
movsl
lods
out
shrl
or
pop
xlat
aaa
outsb
adc
stos
cs
jl
jg
lahf
push
pushf
push
mov
insb
or
mov
sub
mov
push
xor
jp
dec
add
adc
jnp
add
lods
movsl
and
out
aaa
xor
insb
daa
in
clc
stc
sub
mov
mov
jae
in
add
pushf
mov
into
push
push
sub
lods
mov
out
mov
cli
pop
xchg
jno
pop
cwtl
pushf
movsb
mov
mov
nop
sub
bound
push
shlb
addr16
test
daa
flds
int3
cmp
jae
sbb
ljmp
pop
inc
lret
push
test
test
mov
mov
and
incb
add
push
mov
ret
jp
cmpsl
inc
mov
sub
xorb
sysexit
jge
in
lods
mov
stos
lret
mov
mov
mov
cli
mov
xor
sbb
clc
and
shrb
rorl
mov
mov
cld
int3
push
jecxz
subb
and
icebp
or
imul
mov
in
sbb
xchg
movsl
xor
hlt
jle
sbb
or
adc
iret
or
push
loope
push
dec
outsb
mov
and
je
lods
pop
arpl
lods
popf
iret
in
dec
push
xchg
pop
in
sub
insb
mov
test
dec
jns
into
pop
mov
call
das
divb
or
sbb
cltd
and
xchg
ret
ja
std
out
pop
leave
test
push
pand
fldcw
fbstp
inc
insl
hlt
fimull
das
into
bound
xchg
mov
icebp
xchg
dec
es
and
jnp
fsubrs
push
jns
inc
jge
inc
or
xor
stc
sbb
sub
cmp
mov
dec
xor
nop
dec
mov
mov
je
add
out
aam
push
scas
dec
mov
lahf
notl
mov
inc
xchg
or
mov
in
pop
cld
lret
bound
sahf
aaa
lcall
sbb
mov
push
mov
fwait
sub
cmp
into
adc
fisttpl
hlt
mov
imul
cmpb
mov
jle
loop
hlt
data16
add
adc
pop
xchg
sbbb
pop
push
rcr
jbe
cmp
fstl
repnz
inc
cli
out
ljmp
inc
jp
ja
sub
mov
roll
mov
scas
add
popa
mov
cmpsb
imull
test
pop
addl
stc
mov
jmp
cmp
int
sti
mov
cli
pusha
pop
add
fs
std
out
cmc
in
dec
and
add
push
call
subb
cmpsl
data16
mov
pop
pop
xor
sub
push
xchg
icebp
in
insl
or
pop
jae
mov
enter
int3
sbb
stos
out
cmp
shrl
pushl
adc
sub
push
sbb
xchg
fistps
ljmp
rcrl
adc
xchg
roll
sbb
hlt
add
push
das
and
cmpsl
mov
aaa
jnp
sub
cltd
ss
pushf
ljmp
mov
lahf
jl
loop
dec
call
or
pop
scas
int3
imul
and
add
mov
iret
stos
pop
inc
insl
inc
sbb
aad
test
jl
mov
movsl
dec
pop
add
push
inc
ljmp
xchg
shll
js
mov
xchg
and
andl
cmp
pusha
inc
mov
scas
ljmp
pusha
jl
aam
pop
xor
pop
dec
sub
rcrl
adc
cld
pop
dec
das
xor
cmp
std
cmpsb
inc
ud1
dec
stc
or
inc
in
mov
and
dec
cmpsb
adc
sahf
adc
add
inc
sahf
inc
cmp
out
pushf
imul
sub
xor
fisttpl
clc
lods
mov
fwait
mov
and
sub
sub
add
enter
stos
xor
push
mov
stc
xor
sub
arpl
adc
roll
sbb
lods
and
adc
les
and
insl
call
and
repnz
mov
mov
cmp
mov
popa
leave
dec
add
sub
xor
push
sbb
jmp
inc
lret
sbb
jg
pop
dec
xor
adc
ljmp
add
movsb
cmp
call
push
sub
aas
and
aam
popf
cs
sbb
popf
dec
in
dec
add
or
ret
pop
jbe
popf
pop
mov
mov
or
enter
pop
push
xchg
aas
dec
mov
addr16
xchg
sbb
cmp
aaa
pop
les
cmpsb
or
fwait
lret
adc
outsl
or
mov
push
test
call
cmp
mov
dec
xchg
cmp
sub
loopne
jmp
iret
je
or
sbb
aas
jge
jp
ds
in
out
out
inc
lret
xor
sbb
and
ret
mov
xor
push
adc
inc
inc
imul
xchg
inc
jb
loopne
or
fs
mov
orb
cmpsl
in
inc
xor
pop
mov
mov
out
das
fwait
cmp
mov
add
test
ret
test
dec
jae
jo
rorl
inc
jg
add
insl
loop
mov
es
adc
push
ficomps
jnp
outsb
outsl
adc
jb
mov
inc
pop
xchg
xor
push
psllq
out
cmp
frstor
and
push
inc
push
dec
xorb
sbb
repnz
mov
pop
push
cwtl
inc
lds
sbb
fdivr
out
or
lret
repnz
push
scas
loope
sub
daa
out
fldt
rorb
repz
or
mov
fwait
mov
outsl
imul
push
lock
gs
cwtl
fs
add
popa
call
lock
add
sub
add
mov
jbe
nop
add
stos
mov
jnp
stos
cmpsb
roll
std
les
addr16
stc
scas
fisubs
dec
jmp
inc
jmp
xor
loop
dec
cmp
mov
popf
add
jb
mov
xchg
sbb
outsb
xchg
out
shll
and
cs
addb
sbb
fimull
or
inc
push
mov
sbb
lret
xor
xchg
stos
popa
in
dec
push
mov
push
sub
adc
jecxz
adc
xchg
push
jmp
and
fwait
or
or
leave
andb
repnz
pop
daa
push
adc
sbb
adc
cs
pusha
mov
xchg
shlb
or
dec
mov
sti
add
lds
std
stos
rclb
or
pop
fists
mov
in
dec
jns
pop
popf
or
stos
in
pop
xchg
jne
xchg
or
push
mov
push
ljmp
lret
lock
popa
test
mov
push
pop
repz
pop
ja
cmc
jbe
ja
push
inc
sbb
cmp
stos
hlt
insb
ret
sub
mov
mov
das
mov
push
inc
aas
and
ljmp
jb
pushf
push
mov
je
xor
adc
int
movsb
ja
scas
xor
and
sub
jne
imul
mov
mov
shll
iret
jae
cli
ljmp
dec
xchg
mov
mov
cwtl
mov
cwtl
clc
push
mov
mov
mov
pop
mov
fists
clc
sbb
jno
data16
push
mov
push
or
mov
adc
mov
loopne
ret
out
fistpl
inc
lds
test
mov
jno
sti
lods
rcll
jg
mov
sbb
dec
jbe
inc
mov
xchg
popa
inc
mov
mov
cwtl
mov
popa
mov
xor
pop
addr16
xchg
add
int
imul
inc
mov
adc
es
mov
xor
lds
push
lcall
push
mov
lods
or
lret
pushl
sub
rorl
pop
add
hlt
or
stc
jmp
cmpsb
leave
sub
inc
cmp
repz
lock
push
cmpsb
pop
pusha
sub
cmc
fildl
das
mov
fcompl
dec
sub
mov
dec
lea
leave
int
mov
ljmp
xor
xorb
clc
xor
fldenv
cmp
inc
jl
adc
stos
inc
popa
inc
fadd
mov
push
push
inc
leave
or
xchg
xchg
in
dec
mov
xchg
ljmp
mov
ret
jmp
xchg
pusha
add
jge
mov
pop
pop
fdivrs
sbb
mov
std
adc
add
mov
fldl
inc
fsub
mov
mov
pop
pop
dec
fucomi
push
movb
scas
and
addr16
adc
pushf
ljmp
imul
push
jo
iret
inc
push
push
aas
loop
mov
movsb
loopne
test
fisttps
and
mov
mov
add
jno
pop
and
imul
scas
xchg
add
pop
sahf
out
jg
jecxz
sub
push
xlat
dec
or
sub
pop
pop
movsl
aaa
or
push
sbb
xlat
lcall
add
out
mov
sbb
inc
sub
ds
lret
test
movsl
inc
shrl
or
out
movsl
lods
add
fcmovu
js
pop
xor
dec
std
mov
push
sti
xchg
add
shlb
test
sti
and
mov
cmp
faddl
sbb
sub
out
mov
popa
test
jne
int3
adc
repnz
iret
xor
push
addb
mov
nop
push
inc
lds
add
aam
insl
dec
in
fnsave
adc
cltd
imul
out
and
stc
testl
mov
fildll
stos
sbb
cmp
cmpl
clc
iret
outsl
lahf
jo
xchg
xor
adc
cmp
fistpll
sub
int3
lcall
push
mov
mov
push
jmp
sub
pop
mov
jns
daa
aad
sbb
arpl
sahf
popf
scas
sti
icebp
fidivs
and
dec
push
andl
iret
dec
sbb
jmp
pop
stos
cmpsl
sub
push
add
js
mov
ss
pop
cmpsb
in
xlat
lret
mov
xchg
mov
stc
inc
jge
mov
insl
jns
add
icebp
jle
sbb
mov
sub
in
mulb
ja
insb
jno
sub
dec
inc
fimuls
push
ror
mov
dec
mov
call
les
mov
xchg
enter
inc
int3
jmp
cmpsl
mov
mov
sbb
add
xor
or
pop
sub
rcrl
jge
cmp
test
inc
adc
push
sahf
mov
dec
pop
stos
adc
sbb
daa
clc
bound
xlat
add
test
shl
mov
push
stc
loope
or
add
int3
dec
mov
mov
popf
insb
jns
in
jnp
stc
mov
ljmp
daa
or
xor
sbb
loop
cmp
push
jb
mov
jbe
dec
mov
and
mov
loop
push
mov
leave
and
xchg
cmp
sbb
into
sbb
mov
xchg
ss
and
pop
adc
pop
jg
repz
aam
scas
inc
and
lcall
insl
cld
stos
sbb
clc
arpl
or
lret
jne
rclb
lahf
lea
mov
xchg
adc
dec
ljmp
push
xchg
inc
in
psrad
push
cs
jb
xor
adcl
rorb
jg
pop
push
icebp
mov
movntq
out
dec
loopne
and
lods
loopne
test
sub
lds
scas
cld
lahf
add
mov
fidivrl
push
add
shll
jbe
mov
out
inc
inc
cmp
xchg
inc
pop
or
push
sub
xor
mov
and
fwait
push
cltd
je
ds
mov
arpl
sub
cltd
sahf
add
imul
mov
or
movsb
add
arpl
add
cmpsl
ljmp
pop
shr
pop
fisubs
shrl
sub
sbb
cs
sub
jecxz
sub
loop
cmp
mov
inc
scas
and
jnp
dec
pop
out
ret
mov
loopne
ror
in
and
sbb
cmp
mov
cmp
xorl
push
lds
mov
mov
dec
push
jge,pt
into
pop
dec
dec
sbb
jae
out
dec
and
cld
jne
stc
scas
push
mov
clc
dec
mov
sub
push
inc
adc
fdivrp
xchg
imull
iret
stc
mov
pop
aad
ret
sti
dec
out
cld
sbb
scas
dec
je
pop
gs
push
inc
fistps
testb
hlt
jb
ja
push
hlt
out
mov
idivl
inc
push
jl
pop
sub
xor
lods
insl
inc
xor
add
jmp
scas
mov
fists
pushf
add
stos
add
icebp
xchg
sbb
xor
out
sar
push
push
push
das
pop
test
aas
cmp
lea
les
outsl
sbb
or
faddl
adc
decb
jns
cltd
js
xchg
sub
loop
jecxz
lds
adc
xlat
cmpsb
and
jne
inc
lods
lock
push
push
retw
daa
jl
inc
aaa
sub
sti
ljmp
sub
lret
cs
and
or
mov
lods
lret
xor
inc
mov
lea
dec
stc
mov
or
mov
in
pushf
andl
jle
lret
jmp
inc
dec
stc
stc
adc
add
idivb
mov
mov
jns
ret
xchg
and
mov
sahf
aad
in
hlt
inc
loopne
sbb
insl
iret
add
in
addl
insl
js
repnz
arpl
cmc
scas
arpl
or
pop
fwait
mov
mov
or
shl
xchg
jp
aas
dec
push
and
pop
imul
movsb
jnp
xchg
imul
out
dec
bound
mov
movb
sub
pop
xchg
shr
pop
inc
xor
inc
xchg
mov
and
fmuls
cmp
mov
xchg
out
and
inc
std
divl
sub
fldl
jge
adc
lret
push
dec
cs
imul
xor
rclb
lock
sbb
sub
mov
mov
orb
outsl
add
push
out
cmpsb
inc
mov
mov
jo
and
enter
lahf
call
sub
adc
in
repz
lods
call
jae
mov
mull
insb
imul
inc
xchg
jge
push
jnp
xor
arpl
or
sbb
adc
cmp
ljmp
js
scas
sti
lcall
lret
sbbl
and
inc
test
out
inc
fnstsw
mov
pop
enter
jg
shrl
fwait
cmc
pop
dec
push
popf
pop
test
es
cmp
push
dec
xor
xchg
push
and
in
lock
inc
inc
lea
popa
cltd
jo
mov
in
hlt
mov
psubd
sub
cli
push
adc
pop
shrb
jo
ss
repnz
mov
adc
mov
out
cmp
aaa
test
hlt
repnz
bound
dec
gs
lahf
imul
popw
inc
jno
mov
dec
sub
pop
xchg
dec
sbbl
lock
cmpsl
xlat
icebp
sti
stc
cmp
pop
in
pop
push
xorl
rcll
mov
lret
cmp
ja
or
sub
in
jne
int
arpl
pop
addr16
out
or
das
mov
push
sub
or
add
mov
jg
shrb
sbb
cld
jno,pn
add
xchg
adc
outsl
mov
jnp
dec
add
push
mov
mov
push
into
jo
ds
push
add
sub
movsl
jecxz
xor
mov
iret
jecxz
and
gs
cmpsl
sbb
xor
mov
ret
in
jns
loopne
jg
mov
lret
xchg
test
mov
fcompl
test
mov
cmp
cmpl
mov
cltd
jmp
popf
pushf
lds
insl
ret
sbb
sub
jmp
aad
and
xchg
mov
push
mov
lds
mov
loope
jno
xchg
sub
mov
lea
fisubs
cli
mov
push
loope
aam
daa
call
into
sub
push
add
and
push
mov
dec
addl
add
push
inc
out
mov
in
push
jo
cli
mov
lahf
push
push
sub
pop
inc
mov
adc
jno
lods
dec
bound
xchg
insl
stos
adc
outsl
fistps
cmp
or
gs
xchg
xchg
popa
and
and
add
and
int
add
mov
nop
out
xor
pop
fnstenv
inc
ja
je
dec
imul
jle
lods
sarl
mov
jnp
lods
push
xchg
push
xor
test
pusha
ficoms
lcall
inc
inc
xchg
inc
adc
sbbb
loope
ficomps
mov
pop
addr16
jns
pop
mov
repz
pop
fisttpl
push
push
sarb
or
scas
xchg
or
and
jmp
inc
push
faddl
push
scas
popf
adc
mov
ja
push
lods
xor
fstl
cmp
jbe
pop
mov
add
xorl
jbe
mov
sarl
sbb
or
jle
fs
xchg
dec
mov
mov
fcom
rcrb
mov
testl
push
outsl
in
or
inc
inc
adc
mov
rorl
cmp
sbb
fwait
mov
pop
test
xchg
ljmp
jae
icebp
push
add
lods
mov
lret
add
cmp
test
sub
incb
fidivrs
out
or
lds
jns
call
mov
sbb
popa
dec
ret
stos
jb
mov
cmp
xor
push
pushf
outsb
movsl
sarl
xchg
enter
pop
fnstenv
sub
mov
pop
pusha
loope
mov
mov
pop
rcl
inc
imul
repnz
insl
push
in
cwtl
sarl
xor
lcall
xor
test
pop
lods
data16
mov
js
outsb
das
daa
ss
test
pop
push
and
sahf
pop
xchg
cwtl
push
pop
inc
rcll
mov
fwait
ja
clc
jns
iret
push
and
xchg
call
stos
mov
scas
loop
sarb
jg
orb
ret
xor
xchg
mov
into
pop
into
out
imul
add
mov
clc
roll
jb
dec
mov
pop
xor
add
sub
xor
jp
sti
pop
fldcw
mov
push
cmc
xchg
cmp
pushf
ss
rcll
mov
mov
inc
mov
cwtl
rorb
add
adc
mov
sbb
pop
shr
ds
jmp
popa
inc
enter
ret
lea
pop
lea
mov
js
cmp
xorl
sar
cmp
lahf
adc
jl
mov
mov
mov
insl
xchg
pushf
jnp
imul
pop
cmp
bound
jbe
mov
int
fsubs
movsb
pop
xchg
lods
loopne
in
mull
xor
scas
mov
pushf
xor
mov
iret
ja
xor
jl
xchg
les
outsl
jbe
xor
dec
adc
dec
lods
test
jae
cltd
subb
pop
out
rcl
pop
stc
aaa
dec
add
xor
or
jnp
xor
scas
pop
ljmp
mov
or
mov
lods
xor
sub
nop
xor
lea
add
aas
inc
jne
pop
cmpsb
pop
aad
and
jmp
sub
lahf
pop
mov
lret
xor
mov
in
test
pop
push
or
jp
push
dec
jns
negl
sub
pop
pop
adc
sbb
push
xor
pop
call
add
mov
inc
call
inc
lahf
sysexit
rcr
mov
xchg
jge
mov
addb
pop
jnp
mov
cbtw
mov
mov
pop
mov
push
push
sub
idiv
loop
xchg
pop
adc
aaa
jb
add
ror
push
mov
enter
add
mov
sti
push
cmp
xor
mov
mov
mov
jp
stc
fdivrs
or
jns
in
sub
loope
orl
inc
jnp
pop
cmpsb
movsb
insb
loopne
movsl
mov
nop
or
push
sti
cmpl
fstl
test
outsl
into
data16
xchg
cmp
push
dec
in
sbb
sbb
dec
insl
cmp
dec
nop
push
cwtl
cs
aad
frstor
inc
or
or
or
ret
cmpsb
sub
xchg
sub
push
xlat
hlt
mov
dec
idivl
xchg
in
idivl
fwait
or
adcl
rcll
xor
add
lock
pop
pop
cmc
loope
rclb
rcrb
addb
push
mov
mov
pop
mov
lret
jg
pop
shrl
int3
adc
inc
gs
pop
mov
dec
aas
mov
test
arpl
mov
dec
daa
sahf
cwtl
rcrb
xor
mov
sbb
mov
sbb
gs
lea
cmpsl
lods
xchg
aaa
insb
cmp
mov
aaa
mov
js
jne
add
inc
push
test
jle
mov
xchg
rcr
mov
cmp
and
xor
cmp
jbe
lods
es
daa
pop
sbb
rorl
push
sub
mov
pop
loopne
jmp
jecxz
les
mov
push
ffree
cmp
cmp
push
lret
fisubrl
mov
fadd
and
movsb
push
add
cld
pop
insl
mov
test
test
insb
inc
pushf
popa
mov
lret
pop
sahf
pop
and
lret
lods
inc
je
pushf
sbb
loop
push
mov
push
mov
fucomp
mov
jnp
aad
fnstcw
inc
je
and
clc
pusha
movsb
inc
or
xlat
mov
cmpxchg
outsb
adc
out
mov
inc
arpl
roll
mov
test
push
adc
push
test
andl
cltd
repnz
jmp
imul
push
insb
xor
pop
out
mov
inc
xchg
clc
andl
sbbl
mov
in
dec
je
into
jge
dec
or
sub
push
enter
or
push
idivl
mov
test
je
popa
test
sub
jbe
cmove
in
imull
mov
in
je
pop
cltd
inc
mov
sti
sbbb
inc
icebp
dec
lcall
xchg
pop
ja
xchg
test
mov
or
inc
das
or
jge
insl
jg
xorb
pop
sbb
cmpsb
xchg
adc
jns
fs
pop
aam
in
jne
push
mov
mov
lock
mov
mov
insl
addr16
pop
movsl
adc
add
jns
iret
in
pushf
sbb
pop
cmc
and
push
loopne
orl
pop
cmp
mov
gs
xchg
sti
mulb
pmuludq
or
and
inc
loope
inc
cmpsb
cmp
mov
push
pop
outsl
sbb
out
aaa
stos
jns
clc
xchg
pop
jnp
jp
xorl
cmpsl
pop
lret
out
into
cwtl
ret
fdivrs
movsl
clc
inc
addb
mov
sub
jge
push
mov
jg
mov
jne
mov
jmp
mov
dec
cmp
xchg
shl
xchg
pusha
push
adc
imul
aas
cmp
inc
rcrl
or
in
push
int3
je
or
daa
xorl
aaa
mov
dec
push
mov
fimuls
and
mov
test
into
pop
dec
sub
adc
aad
jo
add
dec
sahf
xchg
jb
push
fnstenv
aas
movb
xor
addr16
sbb
or
sahf
dec
sbb
sbb
mov
mov
hlt
cltd
arpl
jns
fdivl
or
adc
sub
pushf
inc
in
test
mov
pop
sbb
xor
xor
mov
adc
mov
sub
cltd
cmpsl
inc
add
push
aaa
sbb
mov
sub
adc
mov
lea
iret
pop
fistl
inc
inc
into
xchg
aaa
pop
jl
repz
xchg
aad
pop
mov
jge
stos
or
xchg
es
sti
pop
shll
xchg
gs
sti
je
jo
out
cli
pop
add
je
sahf
nop
adc
sub
frstor
mov
cld
dec
je
stos
addr16
dec
adc
pop
mov
jmp
scas
dec
repnz
cli
push
push
dec
xchg
mov
cmp
push
icebp
in
lcall
mov
push
jae
dec
jno
jb
pop
sub
outsl
loope
push
or
or
cmc
sarl
in
leave
bswap
mov
enter
mov
xor
adc
je
popa
mov
inc
stos
flds
dec
mov
sbb
in
jb
xor
repz
mov
and
jle
sub
or
dec
xor
pop
mov
cmp
pop
push
nop
inc
mov
cmc
push
aaa
xchg
stos
shlb
push
test
into
sub
movsb
shl
in
dec
sub
incb
lahf
in
jae
fbstp
std
adc
mov
pushf
adc
test
test
enter
mov
nop
ljmp
jp
mov
xchg
mov
mov
shl
jo
push
pop
adc
aad
leave
jmp
sbb
lds
insl
lcall
or
sbb
push
sbb
mov
cmc
pop
repnz
aad
into
rcl
mov
popa
sub
fs
adcl
jmp
cmp
icebp
cmp
test
push
and
das
rorb
or
ret
roll
or
jge
add
mov
jge
shrl
push
adc
mov
std
sbb
mov
dec
pop
hlt
ret
push
loope
xchg
pop
jg
repnz
mov
pop
cs
fdivl
mov
mov
lock
cmp
adc
push
adc
mov
pushf
ja
aad
jle
cs
fldl
insb
out
dec
scas
nop
aas
mov
inc
jge
icebp
push
or
adc
stos
cmp
push
cli
pop
push
pushf
lret
test
repnz
pop
cmp
or
pop
rorl
push
mov
mov
notb
xchg
jo
iret
xor
outsl
pushf
pushf
loopne
fistps
enter
jb
popa
dec
jecxz
mov
adc
jae
ljmp
mov
test
dec
mov
pop
pusha
subl
int3
gs
sbb
jne
stos
push
lret
mov
push
push
dec
mov
mov
lret
pushf
push
jl
mov
and
popf
aas
sbb
mov
data16
addl
lods
in
outsl
xor
divl
cmp
inc
out
sub
dec
add
mov
repnz
cmp
test
mov
mov
leave
test
or
fmuls
mov
sbb
popa
in
push
adc
lea
imul
cli
or
clc
imull
in
mov
scas
sti
test
cmpsb
cmp
mov
mov
cmc
daa
lds
mov
cli
ret
aam
ja
mov
negl
rcr
jns
or
lods
adc
data16
mov
lret
decb
dec
jo
sbb
pop
es
xchg
mov
cmp
cmp
pop
imul
in
leave
test
or
rcrb
pop
rorb
out
mov
fcomp
sahf
mov
leave
sbb
cs
mov
repnz
mov
add
mov
ja
outsb
aam
and
or
cwtl
inc
sti
js
daa
xor
in
jl
ret
dec
adc
push
and
aaa
sbb
hlt
xchg
push
push
clc
and
clc
ficomps
repz
repz
mov
std
add
dec
je
push
mov
jbe
or
jns
lods
mov
adc
movl
dec
iret
cmp
adc
jns
inc
pop
aam
aam
aas
pushf
divl
mov
sub
and
mov
push
scas
dec
repnz
outsl
pop
jns
mov
shll
inc
scas
push
repnz
dec
push
fdivs
fimuls
adc
into
mov
sbb
cmp
adc
icebp
xchg
cmpsb
mov
pop
push
lods
pushf
mov
xchg
or
xlat
adc
dec
sbb
je
daa
pop
arpl
mov
out
lods
jle
bound
lods
lcall
lods
cmp
fwait
cmp
or
loopne
sub
and
xchg
pop
xor
leave
dec
add
cmpsb
jmp
lret
pop
sbb
cmpsl
push
push
rol
in
or
shl
loopne
das
dec
popf
xchg
sub
out
or
push
dec
pop
aas
es
popf
adc
cwtl
mov
mov
jmp
fdivrl
lahf
int
sub
aaa
sbb
and
mov
push
out
push
xor
mov
pop
loopne
daa
jge
out
push
frstor
adc
movsl
mov
inc
pop
icebp
push
jp
daa
mov
push
mov
stos
mov
mov
xor
scas
jno
push
ret
push
add
adc
cltd
cmpsl
lret
xor
es
xchg
adc
fstp
jb
add
mov
mov
loopne
gs
fs
lds
arpl
rcl
mov
out
or
xchg
pop
les
add
cmc
rcll
and
add
out
imul
loope
adc
out
xorl
mov
js
pop
cltd
push
loop
mov
or
xor
mov
std
das
or
xchg
adc
cld
mov
shrb
push
or
shrl
fcmovu
sub
adc
xchg
ds
lahf
inc
mov
jmp
cmpsb
frstor
repz
stos
pushf
mov
inc
mov
aas
adc
dec
jl
inc
out
push
cmp
sub
nop
and
mov
testb
push
andb
aaa
mov
int3
push
hlt
pop
push
ret
adc
and
dec
dec
push
test
inc
fisttpl
push
jae
into
pop
outsl
pop
sub
test
in
xchg
ret
push
xchg
outsl
insl
and
popa
pop
and
daa
in
mov
pop
out
xchg
inc
pop
inc
add
mov
rolb
aas
scas
mov
cltd
mov
lds
mov
mov
push
scas
push
mov
xor
decb
push
and
inc
dec
or
mov
lea
xor
inc
mov
adc
scas
sub
into
imul
rolb
push
mov
loopne
push
cmp
inc
mov
sub
push
fisubl
xor
mov
cmp
shlb
shll
lret
xchg
fnstcw
shlb
into
push
mov
sbb
jno
out
mov
insl
lret
movb
int
movsb
xchg
outsb
adc
repnz
aas
adc
popa
imull
cli
add
xchg
stc
mov
jg
ss
or
rcll
xor
push
xchg
aam
fcmovne
test
mov
call
shlb
jbe
lea
push
sbbb
test
iret
sti
shll
das
test
nop
inc
stos
je
pop
dec
and
mov
hlt
jns
push
enter
inc
aam
outsl
xchg
xchg
pushf
jle
insb
adc
push
mov
jle
in
call
shr
arpl
adc
mov
fimull
popf
inc
stos
push
or
sbbb
xchg
push
jg
mov
das
aas
pop
test
lods
pushf
ss
lret
repz
xor
mov
pop
pop
push
shrl
add
xor
mov
inc
cmpsl
inc
mov
adc
movsl
decl
popf
scas
sub
sahf
xchg
testl
xchg
xchg
mov
scas
cmpsl
mov
xchg
jmp
repz
fisttpll
inc
pop
mov
in
call
mov
out
outsb
sub
hlt
fucomi
popa
mov
xor
mov
and
frstor
inc
popf
lret
iret
and
cmpsb
sbb
adc
std
xchg
icebp
sti
push
pop
es
xlat
ljmp
sbb
mov
push
and
cmp
cmp
repz
fdivrs
pop
popf
outsl
adc
leave
cmp
xor
movsb
mov
jl
arpl
je
push
in
and
loop
ret
mov
dec
std
mov
insb
jb
sahf
icebp
fcoms
daa
in
sbb
and
pusha
insw
pushf
sbb
fistpll
xor
push
and
loope
cmp
add
pop
jg
jg
scas
test
cwtl
jmp
pop
aas
xchg
das
adcl
js
lods
addl
loope
xorb
lret
mov
inc
or
rcrb
dec
push
inc
cmpsl
clc
pop
mov
fwait
cs
mov
inc
xchg
cmp
mov
cmp
imul
je
adc
xchg
adc
mov
mov
dec
lock
ja
jae
or
or
sub
lret
lret
int
sahf
out
cli
cs
cmp
xor
mov
jp
adc
fidivs
xchg
jmp
das
loopne
sub
inc
push
in
enter
mov
push
mov
jb
pop
push
and
js
ljmp
inc
dec
in
and
cwtl
pop
jmp
mov
inc
inc
inc
ss
scas
add
dec
fiaddl
jg
mov
mov
jmp
adc
cmp
pop
push
fwait
cmpsl
fisttpl
sub
mov
pop
mov
flds
push
mov
mov
inc
pop
dec
mov
lock
shl
popf
mov
pop
inc
loop
pop
and
add
sub
fbld
mov
mov
into
pop
data16
cmpsb
sbb
adc
lds
outsb
mov
ss
lret
adc
xor
ss
pop
cmp
jb
fsubrs
xor
xchg
rcll
xchg
xchg
add
mov
hlt
out
inc
and
mov
mov
or
jle
loopne
inc
scas
cld
adc
cld
cmp
ja
mov
int3
arpl
orb
mov
lock
out
xor
adc
dec
pusha
dec
divl
sarb
fld
hlt
daa
jl
fisttps
add
jg
add
and
cli
pop
mov
rcl
repz
movsb
ret
xlat
inc
add
rcl
out
jecxz
inc
data16
daa
push
xchg
out
or
hlt
mov
int
push
push
orl
push
push
adc
mov
into
in
cmp
not
or
and
jae
mov
dec
cwtl
xchg
loopne
adcl
lret
mov
push
mov
sub
jno
mov
jb
dec
inc
repnz
adc
or
mov
cltd
out
add
aad
sti
dec
jl
lds
call
lret
mov
andl
xchg
lds
int3
mov
inc
dec
and
cmp
lcall
dec
mov
cmp
mull
sbb
aaa
inc
dec
js
sbb
adc
cltd
push
movsl
sbb
cmp
push
clc
mov
or
leave
inc
jl
mov
aas
popa
mov
mov
repz
ret
loope
fildl
cmp
popf
fdivr
das
movsb
hlt
cmp
mov
popa
push
daa
push
cli
pop
add
and
mov
icebp
fstps
pop
jl
into
fbld
xchg
iret
dec
ja
js
dec
push
pmullw
subl
xchg
lret
dec
adc
je
shll
mov
mov
popa
mov
and
pop
or
rolb
sbb
jp
fucomp
dec
cmpsl
push
and
push
xchg
and
push
les
adc
push
test
sbbb
jp
xchg
pusha
xor
or
xchg
push
xchg
jae
pop
xor
mov
mov
mull
and
pop
movsl
fidivl
int
jl
ss
and
push
cmp
fidivrs
mov
scas
mov
pop
leave
pop
push
scas
or
lcall
mov
jle
adc
xchg
sbb
push
lahf
mov
push
jmp
ror
add
xor
mov
scas
mov
outsl
jge
popa
int
fs
pop
ret
xchg
jge
dec
sub
mov
jmp
sahf
outsl
xlat
int3
lock
adc
add
xor
push
pop
test
mov
jo
lea
stos
mov
xchg
repz
mov
shll
inc
mov
sbb
hlt
cwtl
mov
lret
xor
sbb
hlt
sbbb
jo
or
inc
mov
stos
int
push
jg
jle
adc
shlb
dec
mov
dec
movsb
xchg
int3
shld
pusha
clc
addb
icebp
rcrb
dec
pusha
out
int
and
inc
std
mov
push
push
outsl
gs
popa
adc
clc
bound
xor
dec
ret
in
inc
je
cmc
inc
in
push
mov
stos
lcall
out
adc
insl
push
push
pop
dec
aam
or
push
sarl
bound
pushf
dec
shrb
sbb
push
adc
out
and
mov
cmpsl
dec
sti
dec
xchg
iret
lahf
cmp
add
les
daa
push
arpl
and
daa
lea
insl
sub
ljmp
mov
xchg
sahf
loopne
fs
aad
repz
jb
scas
test
xchg
or
ds
imul
in
arpl
scas
sarb
add
sbb
lret
xchg
lock
ds
mov
ljmp
jne
sub
loop
jl
sarl
mov
aad
sub
or
push
xchg
in
dec
mov
push
xor
popf
cmp
cmp
fs
mov
test
dec
movsb
test
jl
loop
js
sbb
mov
fmulp
mov
mov
mov
push
jle
jge
pop
fimull
mov
cld
ret
cmp
sub
out
push
clc
cmc
popa
cmp
in
lret
out
ljmp
shll
test
in
mov
cld
mov
imul
pop
sar
push
int3
lea
daa
mov
push
test
mov
scas
jg
out
pop
call
xchg
lret
or
ss
add
mov
add
add
push
lods
loop
sahf
jmp
and
ret
xchg
rcrb
pop
mov
push
pop
fsubs
xor
insb
pop
add
stos
es
dec
xorl
lock
int
adc
jl
xor
adc
or
or
push
push
mov
inc
sbb
jae
mov
xchg
test
xor
inc
push
add
mov
mov
lret
or
mov
jno
ficompl
or
outsl
adc
adc
pop
xchg
filds
pusha
add
popf
mov
jno
mov
pushf
adc
idivb
mov
pop
lret
rorb
in
in
insb
int3
test
pop
outsb
add
loopne
and
jecxz
outsl
dec
movsl
push
mov
leave
mov
mov
insb
adc
cmp
mov
in
dec
or
std
dec
es
call
das
aaa
fdivl
dec
cmp
cmp
pop
rolb
cld
cmp
out
push
data16
ret
sbb
int
das
hlt
jp
xor
out
lock
mov
repnz
jg
mov
lahf
fcom
movsl
jmp
pop
aaa
in
sti
cmp
repnz
push
movsb
mov
inc
je
cmc
and
xchg
sbb
ss
leave
aam
jle
pop
decb
popf
push
pop
push
cli
and
inc
push
add
xchg
js
stc
repnz
out
xlat
sbb
xor
push
sbb
adc
movsl
testl
aad
lcall
and
mov
out
jge
pop
add
jmp
xchg
adc
push
sahf
jne
cmp
push
mov
mov
andl
adc
mov
loop
iret
dec
enter
je
pusha
sti
dec
cltd
fisubrl
rol
cmp
dec
jns
xlat
xchg
es
mov
outsl
mov
test
jl
push
sbb
imul
mov
ss
and
daa
pop
lea
dec
push
cltd
lret
testl
test
jno
movsb
lret
jl
cmp
and
std
cmp
pushf
dec
adcl
lret
fwait
push
jmp
jae
gs
insb
and
and
lds
movsl
je
sub
pop
mov
xchg
pop
aad
loop
inc
negl
xchg
enter
pop
add
out
cmpsb
fldcw
bound
lret
sub
mov
cmp
xchg
xor
mov
pop
lret
mov
mov
push
decl
ja
stos
stc
mov
lcall
stos
mov
insb
adc
call
xor
imul
mov
leave
in
lret
sbb
fdivrl
pusha
out
jne
ja
pop
mov
incl
cmpsb
sarl
nop
fcoml
inc
in
and
imul
push
pop
mov
movsl
scas
or
lret
insl
sbb
in
and
inc
test
notl
adc
jae
stos
pop
std
outsb
push
mov
repnz
push
push
cld
mov
orl
xor
fdivl
cmp
or
adc
insb
fstl
ljmp
testb
cmp
clc
push
lret
outsl
cmp
or
jmp
int
call
and
jbe
lcall
push
push
leave
rolb
xor
and
bound
jne
or
jmp
in
inc
xor
scas
arpl
sbb
push
mov
je
test
and
xchg
in
aam
ficompl
cld
ljmp
test
pop
repz
aas
enter
push
fcom
lret
stos
cmp
inc
fsubrl
or
lcall
pop
add
test
ljmp
jg
and
xchg
fistl
loopne
test
mov
adc
cmp
xchg
les
adc
lahf
arpl
add
xchg
leave
movsl
fwait
mov
mov
jmp
in
cmc
pop
mov
jnp
fwait
or
aad
cmp
push
jnp
xor
out
mov
popa
inc
lahf
push
mov
push
test
inc
dec
sbb
shl
sbb
out
dec
clc
cmc
cmp
push
sbb
and
jge
lret
inc
xor
xchg
shll
sbbl
in
aaa
bt
push
pop
insl
pop
add
push
pop
aad
dec
in
in
add
sahf
mov
inc
aas
loopne
imul
or
aad
xorl
and
pop
lds
mov
push
inc
mov
mov
mov
xor
push
or
loope
cmpl
jno
or
pop
das
and
mov
pop
lcall
lds
lods
shll
mov
inc
loop
dec
and
mov
int
xchg
ret
fdivl
cmp
inc
aam
mov
jo
sub
jae
subl
out
fnsetpm(287
shrl
pop
ret
xorl
sub
push
ficoms
inc
jl
jne
arpl
inc
arpl
pop
test
ficoms
jne
insb
ror
xor
addr16
test
in
adc
and
sub
jmp
xor
xchg
scas
mov
repnz
push
cmpsl
mov
mov
daa
ror
or
loopne
cmc
or
je
mov
dec
xor
or
lret
aam
mov
aas
popa
arpl
jno
mov
jnp
stc
or
adc
adc
push
mov
xor
hlt
testl
cwtl
imul
lods
xchg
inc
lods
sub
movsl
mov
add
ds
xchg
sbb
add
fadd
push
shrb
sub
fwait
lock
xchg
xor
insb
mov
popa
pushl
jl
push
loope
mov
inc
loope
es
test
inc
mov
sahf
je
mov
push
sbb
pushf
pop
dec
aam
and
pop
add
cmp
fs
cmpsw
jp
lock
jmp
leave
mov
pushf
adcl
lret
xchg
push
ss
dec
shlb
mov
xchg
dec
adc
cmp
cmpsb
add
jbe
addps
adc
subb
pop
test
jecxz
lret
mov
lea
mov
add
xchg
xchg
cmp
lods
rorb
xor
addr16
pusha
jo
push
cli
mov
cs
rcrl
das
xchg
aad
jbe
fisttpl
and
out
ret
and
sbb
inc
cli
insb
imul
call
out
mov
js
pop
adc
sbb
popa
add
jg
cmp
sub
sbb
and
pop
daa
aam
loop
jp
jae
inc
fists
mov
sbb
push
ror
or
mov
xchg
out
daa
adcl
sti
fsts
dec
dec
add
add
sarl
bound
fmull
shr
fisttpl
sbb
mov
push
xchg
lods
mov
out
or
fnstenv
int
push
xlat
je
inc
aam
rorl
pop
mov
mov
in
cld
cmp
jae
push
mov
fisttpl
das
lret
sti
pop
setge
xchg
and
lea
addr16
inc
mov
stc
int
popa
outsb
sub
loope
pop
cmp
mov
movsl
shrd
popa
aad
imul
sbb
loope
pop
mov
cli
xlat
jno
dec
dec
cmpsl
std
pop
add
inc
inc
push
sub
add
and
add
lds
or
test
mov
and
hlt
mov
cmp
mov
cmp
dec
jnp
das
cmp
pop
push
and
sbb
mov
dec
repnz
cwtl
xrelease
mov
pop
cmp
mov
rdtsc
lahf
loop
clc
aad
jae
sbb
xlat
mov
mov
insb
leave
jmp
dec
outsb
mov
loopne
or
nop
pop
add
push
hlt
mov
and
lret
mov
push
cmp
push
cli
and
xchg
mov
xchg
movsl
sahf
ficoml
les
std
lds
mov
and
jle
jns
movsl
push
icebp
add
cwtl
das
cltd
fnstsw
push
imul
add
mov
ljmp
lods
repz
sub
jmp
imul
or
pop
arpl
pusha
push
ljmp
push
shl
push
push
popa
and
stos
pop
jo
jmp
mov
push
add
push
or
pop
ljmp
pop
sbb
mov
sarb
out
popa
and
das
clc
xchg
cmpl
fbstp
sub
adc
imul
fwait
sub
inc
push
mov
mov
mov
xchg
fisubrs
orl
adc
jg
push
aas
cmpb
mov
pop
hlt
sbb
sbb
stos
stos
inc
gs
xchg
lds
mov
xor
mov
xchg
xchg
into
jge
xchg
add
dec
adc
int3
sub
or
ret
sub
repz
cmp
mov
cmp
lods
mov
ss
out
jmp
push
add
sub
sarb
lock
jecxz
pop
add
ja
pop
out
xchg
mov
mov
mov
fmull
dec
mov
inc
xor
dec
frstor
jp
mov
add
data16
jmp
xor
jg
rcll
popa
repnz
shll
rcrb
mov
cmp
imul
adc
inc
add
rclb
mov
fcomps
add
loop
pop
popa
mov
cwtl
ljmp
mov
sub
xchg
push
stc
ss
rorb
das
add
adc
xchg
aam
aam
cmpsb
sub
xor
popl
push
push
mov
pop
hlt
aaa
mov
ret
shll
dec
imul
clc
sub
push
add
addr16
scas
jmp
inc
incl
arpl
es
mov
add
pop
add
dec
fnstsw
in
hlt
adc
dec
add
lea
repnz
sub
xchg
mov
mov
sbb
testb
outsb
imul
inc
xor
xor
movsb
mov
sub
in
aam
int
aad
jns
pop
rcl
lods
bound
clc
ret
rorl
cmp
jg
mov
xchg
rcrl
insl
pop
cmp
jecxz
mov
leave
mov
je
xchg
push
aaa
icebp
int3
fists
pop
cmc
test
lret
lret
ss
outsb
xor
inc
sarl
and
cmovge
and
gs
movl
lock
or
lret
dec
sbb
cmpsl
mov
mov
jg
bound
imul
dec
mov
test
adc
sub
mov
fsubs
xchg
jmp
jmp
ss
or
or
cmp
xchg
cmp
add
repz
sti
adc
inc
fcoms
cld
xchg
lret
roll
ljmp
leave
addr16
cmp
call
insb
adc
and
cwtl
out
cltd
mov
and
popf
add
nop
xchg
jmp
xchg
mov
jb
arpl
mov
movsb
push
jns
jbe
pop
fwait
mov
cmp
adcb
inc
or
subl
loope
leave
and
cmp
test
cmpsl
sbb
ljmp
sbbb
pop
ljmp
fsub
jmp
mov
dec
mov
cmpsb
sub
std
mov
jl
or
push
push
or
sub
cmp
arpl
repnz
mov
fcompl
imul
add
adc
jno
adc
enter
iret
adc
lret
ret
aaa
lea
pop
fwait
pop
ds
repnz
fsubr
push
and
les
pop
in
fidivrs
xchg
push
xor
push
imulb
cld
sbbl
mov
lds
dec
mov
cmp
xchg
sarl
in
sub
adc
ds
sub
fs
fidivs
fdivrl
cmc
xchg
rol
xor
mov
test
shlb
shrb
jae
adc
popa
aad
out
xchg
jge
xchg
jmp
bound
stc
xor
xor
mov
mov
cmp
or
in
mov
cltd
loopne
fwait
and
push
xchg
xor
pop
cmc
bound
xchg
jp
sub
add
and
mov
arpl
scas
sub
adc
test
sbb
hlt
stc
fcmovnbe
xchg
clc
push
lret
jb
mov
fists
popa
arpl
ds
movsb
loop
enter
jo
mov
imul
imul
push
sub
and
cmc
jle
xchg
nop
xlat
cmp
cmp
and
dec
lock
je
cmp
in
decl
push
and
aas
push
mov
fdivr
ret
jle
sub
dec
in
popa
cmpsl
shlb
jle
fildl
xchg
in
arpl
mov
dec
push
or
xchg
pop
xor
mov
lret
add
outsl
cmpsl
in
dec
xlat
mov
jg
push
cmpsl
pop
sbb
cmpsb
test
loopne
inc
mov
call
in
inc
mov
pushl
xchg
adcb
aaa
sbb
adc
cmp
cmc
popf
mov
addr16
mov
insb
jns
and
add
std
es
or
in
cmp
mov
fnstenv
push
pushf
add
int
cmpb
push
je
outsl
pusha
inc
shl
jle
adcb
pushf
xchg
fsub
and
call
aam
pop
ss
pop
mov
gs
adc
ret
lahf
ds
repnz
push
in
mov
cld
adc
mov
dec
cmpsl
sbb
sub
pushf
xor
pushf
aam
xor
push
stc
adc
sub
popf
mov
out
iret
xchg
loopne
stc
inc
ja
cmp
xchg
scas
mov
les
sarb
test
test
bound
adc
fbstp
and
lods
and
fldenv
pop
sbb
jecxz,pn
ja
cmpsl
out
sbb
add
test
out
std
adc
imul
push
bound
hlt
push
ret
cmp
pop
mov
pop
cwtl
out
cmp
dec
mov
scas
mov
xor
into
ret
dec
lea
imul
add
stos
mov
addr16
pop
mov
fst
cs
sahf
scas
dec
mov
mov
push
mov
inc
ret
add
lahf
cli
adc
decb
mov
int3
imul
jmp
test
jecxz
xor
jae
pop
mov
add
out
push
bound
insl
ret
pop
xor
push
mov
aad
cmp
decb
push
xor
sti
aaa
dec
sti
rcrl
lret
push
jne
dec
push
push
lods
sbb
cltd
add
in
je
sahf
push
int3
mov
jl
sub
push
notb
add
pop
xor
or
lock
push
les
stos
sbb
pushf
xlat
cwtl
flds
inc
push
xchg
sub
lcall
mov
movsb
sub
nop
mul
aam
iret
movsl
inc
mov
or
push
in
mov
int3
sar
repnz
in
hlt
jbe
js
outsl
xor
jl
mov
fdivr
push
stos
shll
into
out
mov
xlat
adc
fstps
cmpsb
dec
mov
jmp
xor
inc
ljmp
addr16
mov
insl
ja
adc
adc
or
bound
imul
add
cwtd
out
dec
lret
push
sbb
add
adc
xor
movsb
sbb
scas
mov
cmpsl
add
jle
shl
or
pop
dec
ds
xor
je
scas
icebp
leave
jge
mov
cmpsl
je
je
into
xlat
dec
cmp
mov
xchg
cld
lcall
cmpsl
enter
and
cmp
push
jbe
pop
cwtl
pushf
inc
xor
add
in
push
mov
daa
inc
push
cltd
sub
cmc
and
mov
cmc
sub
add
push
mov
xchg
adc
push
data16
push
pop
pop
bound
ror
adc
mov
mov
outsb
mov
pop
add
jno
cltd
int
filds
mov
and
mov
pushf
sbb
out
mov
mov
xor
jmp
dec
mov
addr16
popf
sahf
test
fcompl
fwait
adc
cmp
cmpl
sbb
pop
lds
icebp
mov
ret
fdivl
fistl
dec
daa
or
add
rolb
jge
or
outsb
sbb
mov
mov
jmp
mov
call
testl
mov
loope
or
xchg
mov
popa
sbb
cmpsl
mov
nop
pop
jp
adc
jo
add
sbb
stos
imul
cmp
sti
lcall
fsubr
pushl
stos
xchg
stc
iret
push
and
adc
outsb
cltd
testl
lcall
sub
cmpsb
test
push
mov
mov
cmpsl
hlt
push
arpl
stos
cmp
lea
mov
xchg
mov
mov
sbb
scas
popf
add
mov
clc
jno
add
sbbl
sub
hlt
mov
and
int3
jmp
insl
mov
fs
jo
xor
or
mov
xchg
mov
je
subl
mov
mov
leave
pusha
inc
cltd
pop
xchg
sbb
sub
sbb
pop
adcb
icebp
fimull
sub
pushf
popa
cmp
sbb
jmp
les
adc
ljmp
rolb
or
jmp
lret
push
sbb
or
dec
sti
cwtl
jne
out
pop
sub
or
movsb
mov
mov
pop
inc
sbb
xchg
and
xchg
popf
xor
mov
push
dec
dec
mov
js
and
cmc
lcall
pop
jo
out
loop
mov
sub
inc
inc
or
xorl
outsb
mov
daa
cli
insl
scas
jns
scas
jo
add
mov
adc
or
sti
test
xor
xchg
mov
jae
nop
repz
and
int
in
pop
mov
leave
sahf
lcall
rorb
push
cmp
and
sbb
fwait
sbb
xchg
jle
mov
repz
test
cltd
ljmp
inc
gs
inc
sarl
jp
int3
push
das
fnsave
adc
sub
and
xor
shrl
jnp
push
in
jne
jb
cs
inc
inc
sbb
sub
scas
mov
scas
inc
inc
ret
sbbb
mov
cmp
nop
fdivs
pop
sub
cltd
imul
out
and
mov
inc
pop
out
and
std
lret
and
loopne
xchg
stos
orb
xor
ret
xor
out
imul
enter
inc
xchg
or
xchg
push
fisubrs
lret
pusha
idivb
or
pushf
popa
ficoms
fnstsw
jecxz
dec
pushf
jmp
repz
fdivrl
pop
call
int
cmp
shlb
cld
and
mov
cwtl
ficoms
pop
add
adc
xchg
sbb
repnz
enter
pop
enter
cli
aad
sub
jg
mov
fldt
mov
shrl
xchg
rolb
or
push
sbb
xchg
sbb
xor
sbb
out
xor
hlt
mov
push
outsl
pushf
sti
jle
or
gs
mov
je
xlat
xchg
pop
es
cmp
inc
dec
pop
ret
xlat
add
pusha
pop
inc
jmp
xchg
dec
and
inc
mov
xor
jnp
ljmp
negl
fwait
pop
and
jge
insb
aaa
std
int3
adc
int3
icebp
sub
xchg
adc
call
popf
or
inc
push
loop
lcall
mov
mov
or
int
in
fstp
pop
pop
das
pop
and
adc
sti
subl
out
ljmp
fdivrs
inc
mov
xlat
ret
shlb
sub
mov
insl
adc
sub
xor
pop
test
push
out
stos
jns
inc
nop
fsts
lock
jg
popf
xchg
jno
out
jbe
sbb
stos
jnp
and
int
push
or
lock
outsl
mov
inc
dec
mov
fs
incb
and
pop
jmp
xlat
cmpsb
xchg
or
out
lret
das
push
loopne
shrl
stc
lock
xchg
jg
mov
icebp
ljmp
loopne
jge
push
nop
sbb
jmp
jae
and
pushf
fiaddl
int
out
inc
cmp
mov
pop
insl
and
ret
mov
stos
push
test
lcall
js
mov
pop
mov
xchg
pop
or
and
aaa
popa
jl
mov
and
repnz
hlt
sub
pop
inc
xor
sbb
sbbb
popf
inc
xor
ja
outsl
stos
inc
cld
cmp
aaa
pop
xchg
mov
in
leave
testl
shrb
data16
pusha
inc
insb
or
loope
mov
das
mov
adc
mov
fwait
sub
push
sar
repz
call
jecxz
or
or
pusha
lods
outsb
mov
stc
out
xor
xor
lret
cmp
scas
rcr
in
jae
mov
test
in
xor
outsb
jbe
nop
stc
lcall
sbbb
nop
ficomps
lock
dec
arpl
xorl
jnp
mov
and
push
mov
xchg
cmpsb
mov
into
shld
insb
sbb
cwtl
cltd
or
jo
lds
mov
mov
call
mov
cmc
daa
in
cmc
push
mov
fcmovnbe
mov
push
jbe
adc
adc
in
ds
ret
or
sarb
cmpsl
insl
or
shl
loope
xor
mov
inc
cmpsl
lods
mov
xchg
addb
xor
inc
loopne
leave
adc
shll
or
std
xchg
cli
fcmovnb
fldenv
aam
sub
repz
dec
xor
xor
xor
mov
jg
sarl
int
imul
inc
mov
mov
dec
pop
pushf
fwait
mov
int3
add
push
addl
adc
jg
mov
out
in
mov
and
cmpsb
sbb
cmp
and
fwait
jmp
loope
mov
outsl
sub
inc
xor
dec
xor
lds
fcoms
cmpsl
sub
add
sub
add
aad
mov
loopne
jo
inc
mov
xor
fnstsw
cmp
aad
jp
and
in
sbb
and
jns
cmp
xchg
and
aas
sub
cmp
cmp
into
and
inc
lcall
sub
sub
lods
test
adc
mov
and
and
or
pop
test
jae
xchg
testb
sub
cmpl
imul
clc
lcall
pop
sti
out
mulb
call
scas
and
dec
cltd
push
push
mov
cmp
jno
int
jmp
in
mov
jbe
jb
popa
adc
sahf
imul
out
ret
xchg
lret
add
enter
shrb
cmp
add
adc
xchg
and
xchg
cld
push
pop
sbb
xchg
jo
adc
jb
xchg
push
mov
dec
mov
scas
cmp
mov
stc
lret
xlat
test
pop
mov
loop
subl
out
not
xchg
ljmp
andb
add
mov
ret
mov
outsb
xchg
pusha
or
xchg
outsb
xchg
je
pusha
lods
lods
pop
xchg
addr16
and
xchg
shrb
leave
aaa
pop
cmp
loopne
pop
pushf
fadds
scas
jnp
mov
add
insl
adc
outsb
aam
loopne
jl
ds
push
call
and
dec
and
or
popa
pop
sub
cli
test
mov
xor
mov
into
push
jg
hlt
and
push
add
jl
out
lret
dec
out
inc
les
sub
int3
xchg
push
mov
dec
ret
xor
inc
push
sbb
inc
js
cwtl
and
inc
sub
ljmp
or
ja
jmp
sub
push
add
loope
mov
mov
popf
jo
dec
repz
shrl
cmp
push
xchg
shrb
inc
nop
jne
push
leave
imul
loop
mov
mov
push
andl
cli
test
xor
mov
pop
scas
inc
jnp
pop
shl
in
ret
js
xchg
pop
addr16
fcmovnu
scas
mov
mov
mov
rol
add
jecxz
mov
mov
jmp
push
fucomip
jle
sbb
xor
aad
sub
xor
stc
xchg
push
js
inc
pop
sahf
cs
push
daa
leave
sub
adc
pop
pop
out
mov
mov
cmp
shll
insl
sub
out
lret
inc
ror
pop
mov
fdivs
or
gs
mov
shlb
cmp
out
jecxz
cmpsb
add
inc
sub
xor
mov
xchg
adc
pop
inc
add
iret
lcall
add
jnp
outsl
pop
mov
lret
or
outsb
pushf
push
lea
ljmp
stos
jg
cli
push
lcall
mov
cld
or
les
insl
in
dec
jecxz
jne
add
ror
mov
or
mov
aas
ss
ja
push
push
dec
mov
sarl
cmp
jae
aas
mov
xor
adc
and
cmp
pop
cltd
and
out
jecxz
sub
cmp
scas
negl
add
scas
xchg
adc
sub
inc
ret
ja
ljmp
out
std
dec
jl
ret
pop
ret
mov
push
popa
or
push
lret
adc
jae
add
inc
stos
sbb
xlat
adcb
cmc
dec
incl
mov
cmp
mov
cmp
leave
cltd
inc
or
xlat
pop
mov
movsb
fdivs
push
xchg
popf
push
stc
xchg
lcall
lock
jno
and
mov
ds
and
ficoms
push
into
add
push
stos
int3
or
fs
leave
push
push
pop
sub
daa
dec
mov
lret
test
mov
out
lods
cwtl
dec
test
movsl
sub
dec
sbb
pop
imul
loop
cmp
fucomp
push
adc
movsl
mov
cmp
sbb
mov
pop
bound
scas
jae
mov
daa
xlat
mov
inc
inc
add
in
or
dec
push
sub
std
and
inc
adc
adc
cmpsb
dec
cmp
mov
mov
into
nop
sbb
mov
cmp
out
leave
xor
clc
repnz
mov
or
sbb
lahf
and
pop
inc
out
fadd
loope
push
arpl
test
loopne
mov
xor
outsl
mov
and
fistpll
cmc
dec
sbb
inc
mov
or
xor
sub
lret
push
mov
inc
mul
and
rcll
dec
adc
ret
mov
adc
adc
arpl
rclb
mov
inc
fisttpll
aam
xor
dec
adc
mov
mov
hlt
push
push
icebp
sarl
bound
aaa
fnsave
mov
stos
aas
out
mov
cwtl
ret
push
lea
clc
mov
fstps
xor
or
pop
xor
gs
adc
sub
cmp
into
add
mov
sub
xchg
jo
cmpsb
test
add
out
scas
dec
add
mov
xchg
mov
mov
fsubs
add
cs
lcall
sub
rclb
push
sbb
add
dec
or
fldz
out
push
int
jmp
push
sbb
nop
mov
mov
lahf
mov
aaa
mov
mov
xor
clc
in
sti
adc
dec
xor
icebp
lock
aas
aas
inc
pop
sub
fsubrl
jno
xor
dec
jl
aad
sub
add
dec
stos
jnp
test
dec
push
or
inc
scas
fldcw
sahf
loope
xorl
and
dec
adc
in
xchg
stc
aaa
push
adc
cwtl
push
mov
jecxz
cs
or
pop
fldenv
push
cmp
shlb
iret
mov
es
ljmp
imul
adc
test
pop
cmp
inc
aam
test
outsl
out
iret
shlb
nop
ljmp
pop
inc
mov
shrb
add
mov
xchg
or
int
sbb
add
imul
sub
les
fxrstor
add
inc
imul
dec
cmp
mov
add
pop
inc
shlb
les
in
roll
shlb
or
xor
out
add
sbb
fidivrs
mov
jp
push
mov
inc
push
dec
mov
dec
or
cmp
addr16
pop
xlat
je
mull
fsubrs
je
mov
push
sub
loopne
push
cmp
push
xchg
pop
mov
js
test
mov
cli
mov
scas
push
xchg
mov
pop
jl
out
add
or
sub
aad
imul
sbb
idivl
inc
rolb
dec
stos
out
addr16
push
popf
mov
sub
xchg
add
or
inc
jnp
test
mov
pop
imul
lds
in
mov
push
jl
xor
pop
outsb
jecxz
inc
add
mov
sbb
scas
xor
movsb
sbb
sahf
sbb
dec
xor
or
sti
pop
dec
rcrl
jb
pop
sbb
sbb
or
out
int
and
mov
mov
dec
jmp
mov
sbb
cli
in
cmpb
xor
inc
add
ss
mov
test
inc
adc
pop
dec
cld
mov
fldcw
sub
jnp
loop
mov
xor
mov
outsl
stc
stos
pop
cld
rcll
aad
daa
sub
cld
mov
mov
adc
mov
push
sub
or
xlat
lret
adc
add
cs
int3
mov
iret
scas
icebp
fimuls
dec
mov
std
lea
out
dec
push
sub
push
leave
rorl
lods
xchg
mov
pop
pusha
adc
or
sahf
dec
sarl
ljmp
cwtl
pop
ret
mov
stos
pop
sahf
mov
mov
int3
mov
scas
lret
jbe
adc
dec
or
iret
xchg
enter
dec
negl
shll
mov
pushf
jns
cmp
push
adc
shll
data16
lods
stc
push
jne
jb
std
icebp
je
sbb
add
pop
icebp
bound
jae
lahf
cmp
inc
scas
das
mov
js
sbb
arpl
cmp
xchg
rclb
xchg
xor
call
js
adc
es
xor
out
xchg
fistps
iret
fs
sbb
movsl
push
loop
or
pop
jne
add
jge
mov
push
cmpsb
pop
and
mov
fidivrl
mov
in
lahf
enter
cmc
inc
sub
inc
outsb
mov
sbb
xor
fsubs
aaa
adc
push
cmc
int3
xor
outsl
fadds
adc
enter
stc
mov
mov
out
inc
push
xorb
aas
ret
fistl
jmp
xor
ljmp
scas
insb
jle
arpl
jnp
adc
push
push
mov
fcompl
or
in
stos
dec
xor
cmp
fimull
sbb
jge
jb
jnp
stos
mov
lahf
loopne
in
sahf
subl
mov
or
ret
inc
lods
out
cmpsb
cmp
lods
mov
xchg
sbb
and
fsubp
add
insl
hlt
add
mov
mov
mov
cmp
stos
mov
cs
les
cmp
cmp
dec
fcomip
mov
inc
imul
and
add
and
test
cld
test
push
ficoms
cmp
js
aad
sub
lret
mov
bnd
imul
sbb
jne
push
jns
outsl
hlt
js
inc
fcoml
pop
cmp
sub
mov
loop
adc
or
test
push
inc
adc
add
rcr
hlt
sbb
mov
cmp
sub
out
xchg
ret
aam
movsl
nop
mov
mov
dec
nop
out
fs
push
loop
cmpsl
inc
pop
inc
inc
xchg
in
sbb
movsl
push
leave
or
mov
lahf
test
cmpsb
cmc
push
xchg
add
stos
pop
mov
jb
inc
pop
sub
mov
xchg
or
lret
or
sbb
ljmp
ljmp
dec
mov
sub
mov
adc
jmp
push
call
mov
fwait
pushf
fcoms
inc
rorb
mov
cmp
sarl
imul
dec
out
int
sub
rol
pop
adc
punpckldq
pusha
ret
mov
adcb
xchg
pop
push
fs
popa
push
or
fwait
and
sbb
xor
aas
inc
insl
xchg
outsb
cmp
xchg
push
sbb
sti
aad
iret
xor
call
sub
mov
mov
mov
rcrb
mov
out
aaa
cmp
sbbb
xor
mov
xor
or
jp
add
push
sbb
add
pop
pop
shlb
sbbl
jnp
adc
lods
jp
mov
insb
push
mov
loope
shlb
push
xchg
inc
xor
mov
cwtl
xchg
sbb
pop
in
sbb
or
neg
jge
fisttpl
stos
iret
adcb
jae
mov
addb
xor
inc
daa
mov
xlat
ret
xor
xor
and
es
jns
sub
int3
pushl
or
shlb
jmp
inc
daa
dec
or
jmp
pop
xor
stos
inc
cmc
ds
iret
fldenv
push
dec
or
mov
out
pop
lock
mov
fisttpl
sarl
or
sbb
addr16
jns
or
add
imul
dec
jmp
cmp
fdivrs
lret
jnp
jge
mov
jmp
and
sbb
mov
into
call
inc
aaa
jg
daa
icebp
shrl
sub
xor
pop
xchg
jp
mov
cmpsb
imul
mov
xor
mov
push
sbb
fadd
mov
cmp
shll
enter
mov
fnsave
ds
mov
xchg
and
adc
add
cmp
sub
pushf
dec
mov
xor
movsl
xor
adc
xor
jb
mov
in
ret
inc
enter
in
jno
in
mov
and
cli
shlb
sbb
in
insb
cmpsl
lret
cmp
out
mov
sub
pop
jmp
mov
sbb
in
fistl
aas
mov
enter
add
aad
pushf
inc
xchg
mov
adc
hlt
add
fiadds
xchg
imul
lea
rcrl
loopne
sub
imul
insb
push
xchg
sub
shl
pop
bound
cmp
cmp
or
sub
jnp
add
xchg
pop
pop
adc
fmull
loope
push
pop
repz
mov
cmp
mov
mov
fidivl
cmpl
sbb
icebp
jmp
xor
in
outsl
insb
mov
bound
fiadds
sub
mov
call
ss
mov
daa
or
roll
int
jg
cmpl
lds
push
pushf
pop
mov
push
in
sub
imul
xchg
lock
mov
jmp
test
shlb
dec
stos
push
fildll
fldt
test
adcl
or
jg
mov
ficompl
andb
je
jmp
sarb
fwait
mov
cmc
arpl
and
add
cwtl
adcl
into
arpl
stos
jae
sahf
ljmp
lds
or
std
movl
shll
mull
jle
cmp
mov
mov
hlt
loopne
xchg
push
aaa
xlat
outsb
jno
xchg
adc
repnz
pop
mov
out
mov
adc
mov
add
mov
sub
sub
sub
add
mov
cmp
mov
test
ret
pop
jns
sub
iret
mov
sbb
shlb
mov
xchg
dec
jb
mov
pushf
jl
mov
xor
xlat
jp
enter
test
shll
mov
jmp
ljmp
and
jo
adc
sbb
in
jecxz
jb
bswap
pop
dec
cmpl
into
mov
jbe
jg
mov
cwtl
repnz
in
adc
xchg
cmp
decb
enter
mov
jmp
dec
out
xor
sub
add
push
in
in
cmp
mov
loope
rcrb
add
add
lret
xchg
shll
push
das
pushf
xchg
xor
inc
fmul
pusha
inc
testl
test
je
lret
frstor
popa
sbb
and
jp
rcll
push
adc
cli
faddl
int
or
fucomip
jb
jno
dec
lea
popa
mov
scas
cmpsl
inc
mov
jl
xchg
mov
push
sarl
es
add
xor
fdiv
dec
inc
or
aaa
clc
sarb
sahf
js
jae
sarb
cmp
in
xchg
fmul
jbe
and
adc
movb
sbb
jge
dec
rolb
adcb
push
mov
mov
push
push
addr16
fs
push
cld
loopne
mov
popf
lcall
repnz
aad
incb
inc
lret
xor
mov
mov
xchg
xor
and
ret
xchg
push
jbe
xchg
std
aam
pop
push
inc
dec
pop
in
fsubs
daa
shrb
push
shr
mov
insb
sahf
mov
fstpt
jns
xchg
int3
int3
dec
test
cmp
mov
fisubl
les
test
jne
adcb
mov
push
mov
adc
addr16
jns
in
dec
mov
mov
shrl
mov
xor
cmp
fninit
movsl
inc
xchg
roll
cmp
pop
mov
lret
ss
inc
lock
rcrb
movb
xchg
and
xchg
int3
push
rcr
jo
push
in
insl
lret
lods
int3
sbb
adcb
in
and
lret
add
or
add
cltd
shlb
and
je
aam
fucomi
add
jp
add
and
ret
pop
enter
dec
sub
dec
inc
xchg
adc
out
inc
xor
xchg
pusha
sub
push
stos
stos
cmp
push
shlb
stc
xchg
mov
std
loop
repnz
sbb
mov
cli
add
adc
aas
jne
fmul
mov
test
test
lock
fbld
jp
dec
pushf
jo
or
imulb
imul
bound
dec
std
sub
loop
loop
add
sahf
adc
js
inc
lea
and
mov
test
shlb
outsb
les
and
imul
out
mov
or
mov
cmp
stos
ljmp
adc
lods
push
inc
repz
jno
data16
insb
mov
rorl
out
pusha
mov
pusha
test
cmpsb
adc
cmp
xor
bound
mov
leave
outsl
fidivrs
ss
pushf
sbb
cmc
mov
imul
idivb
inc
fs
rcrl
test
dec
aas
cmp
or
ret
inc
push
xchg
mov
std
push
dec
loop
popa
outsl
inc
in
mov
outsb
mov
stc
iret
jo
inc
xor
sub
inc
jl
cmc
mov
inc
leave
xchg
aam
cmp
bound
fiadds
mov
cmp
lea
insb
leave
movsl
sbb
or
mov
lret
imul
pop
iret
cld
add
es
imul
add
pop
inc
test
dec
fmull
inc
rorb
not
push
add
ret
cmp
push
cwtl
imul
scas
popf
jne
lods
ljmp
testl
mov
sti
inc
loopne
loope
add
outsl
rcrl
insl
orl
mov
scas
sub
and
es
shrl
movb
into
and
inc
or
arpl
jecxz
cmp
aad
sub
jl
xor
jne
loop
movsb
adc
xor
xor
mov
mov
pop
pop
out
add
adc
clc
pop
imul
mov
repnz
xor
stos
or
jne
std
xor
dec
jns
xorl
das
outsb
movsl
repz
mov
cmpxchg
mov
lock
adc
mov
push
dec
inc
jmp
dec
push
xchg
mov
jp
push
push
inc
add
xchg
push
cmp
popf
fisttps
push
stos
add
add
insl
inc
and
insl
dec
hlt
inc
comiss
or
adc
mov
insb
push
xchg
addr16
xchg
mov
xor
xchg
orb
sub
sbb
dec
sub
iret
and
lret
sub
imul
popf
movsl
sub
mov
pop
jge
mov
clc
jg
loope
pop
jle
xchg
sub
addb
hlt
das
cmp
pop
js
inc
inc
adc
dec
enter
add
sbb
out
hlt
jo
cmp
out
inc
mov
out
mov
cmp
rorl
testb
mov
push
cmp
jge
out
xchg
lret
outsb
mov
lcall
inc
push
outsl
insb
add
cwtl
lret
shrb
adc
adc
sbb
or
and
adc
jae
pusha
les
and
test
bound
les
or
je
es
lds
stos
mov
lcall
int
cmpsb
cli
jl
hlt
xchg
cmpsb
stos
add
jecxz
inc
cmp
leave
test
push
test
jl
sbb
adc
or
rorb
popa
jmp
into
fldl
aaa
pop
rolb
xor
xchg
lds
sbbb
inc
stos
pushf
pop
xchg
mov
or
jg
pushw
dec
adc
lahf
cmp
call
fistpll
push
jae
xor
or
in
pop
inc
in
xchg
mov
movsl
dec
cmp
sbb
cmp
cmp
mov
mov
or
out
and
xchg
jl
and
xor
popa
lret
call
xlat
into
repz
loope
mov
push
push
loop
in
out
add
loopne
mov
fnstenv
decl
sbb
jnp
pop
sbb
jecxz
es
fsubrs
mov
stos
pop
push
mov
sbb
inc
mov
pop
test
mov
sti
xchg
cmp
xchg
lods
add
xchg
or
mov
cmpsb
jae
mov
push
in
fildll
pop
adc
neg
out
mov
sub
add
mov
push
shl
cmp
inc
lock
jne
inc
xchg
sub
jne
jns
cmpsl
std
and
adc
xor
mov
lds
push
cli
jae
jae
dec
push
jge
dec
xchg
cmc
sahf
movsb
inc
cltd
sub
stc
shr
add
les
fucomp
dec
push
mov
jo
push
arpl
fs
inc
addb
dec
negl
dec
dec
iret
fisubrl
sub
cltd
test
jp
lret
in
mov
mov
cmpl
lea
mov
mov
fldt
pause
push
icebp
test
xchg
sbb
add
incl
xchg
xlat
test
add
mov
fldt
mov
push
ds
test
lods
mov
lret
xorb
mov
shll
jge
cmpsl
shll
jo
jg
fcmovnu
cs
imul
test
mov
outsl
cmp
mov
mov
fildll
or
xchg
scas
sbb
add
mov
sbb
xor
or
mov
adc
jmp
push
sti
mov
mov
mov
inc
mov
push
lds
add
faddl
stos
cltd
jmp
adc
xor
inc
xchg
adc
cwtl
test
pop
lea
insl
scas
nop
jecxz
out
sbb
and
fwait
push
pop
scas
xchg
mull
inc
mov
push
std
aaa
inc
shlb
pop
push
imul
mov
into
jmp
loop
push
pop
mov
cmp
push
aad
test
aaa
test
in
jge
insl
jle
outsb
mov
mov
mov
adc
bound
xchg
inc
push
pusha
in
pop
sub
divw
test
shlb
cmpsl
xchg
cld
and
cli
push
cmp
stc
daa
inc
mov
inc
lret
mov
popf
sub
cli
add
sub
in
mov
inc
mov
aas
roll
lcall
outsb
in
xor
cld
xchg
popa
jge
add
cmp
insb
jns
xchg
jae
xor
mov
lahf
movsl
shlb
and
mov
dec
cmp
xchg
subb
fs
stos
imul
cmp
mov
fists
adc
in
dec
loop
and
ds
cli
imul
ret
cmp
mov
enter
imul
add
sub
inc
jp
nop
sti
aam
push
cmpsl
xchg
xor
pusha
fidivrl
rolb
sub
nop
arpl
mov
mov
mov
repnz
shr
mov
stc
cmp
incb
mov
add
popf
adc
pop
jmp
int3
les
in
addb
cmp
jo
mov
sub
cmp
lods
test
jge
cmp
mov
imul
cwtl
mov
mov
mov
movsb
cmp
sbb
repz
sub
mov
enter
dec
dec
xor
hlt
pop
fcoml
mov
enter
aaa
sub
jne
and
test
adc
cmpsl
inc
xchg
mov
lcall
cmp
into
cli
push
stos
lods
xlat
inc
and
and
xchg
push
movsl
xor
inc
fidivl
pop
mov
in
or
jg
lods
push
lcall
call
loopne
pop
popf
gs
push
pop
in
inc
das
push
and
leave
sbb
scas
xchg
sahf
dec
mov
loope
sbbb
movsl
mov
xchg
and
test
lcall
daa
decl
jae
inc
repnz
nop
in
clc
fadds
imul
bnd
wrmsr
jg
or
call
xchg
scas
add
cmp
je
cli
lds
fwait
mov
xlat
xchg
mov
lea
daa
icebp
andl
test
and
sbb
insb
shll
lret
es
out
mov
ja
xchg
jge
scas
in
popf
int
inc
ljmp
jae
pop
dec
mov
in
mov
mov
mov
repnz
jbe
adc
lahf
testl
std
sub
sbb
push
or
call
insb
mov
sahf
jg
shl
stos
push
je
and
mov
repz
scas
pop
sbb
mov
sbb
dec
cwtl
adcl
call
mov
cmp
jge
mov
push
movsl
and
int3
fs
sub
jo
pop
push
jo
add
cmp
cmp
das
nop
stos
enter
in
push
push
or
jecxz
xchg
fcom
mov
stos
adcl
aas
mov
adc
sub
lock
pop
ds
mulb
mov
dec
bound
cmp
sbb
je
in
xchg
hlt
adc
or
cmpsl
shrb
jmp
cmp
ficomps
orl
dec
test
test
test
sub
push
mov
jle
ljmp
and
out
out
mov
or
xchg
pop
pop
daa
jg
testl
add
insb
imul
add
adc
dec
notb
mov
mov
jnp
push
mov
movsl
fsubrl
out
outsb
repnz
and
ds
loope
xchg
imul
fisubrl
nop
cmp
push
in
push
jne
dec
insl
retw
sbb
xchg
mov
mul
cld
sub
mov
scas
movsb
mov
imul
inc
shll
imul
pop
iret
fistps
lods
and
fs
fcmovnbe
std
fcoms
loope
hlt
pop
mov
dec
mov
in
rdtsc
leave
cld
mov
mov
sub
lret
sbb
add
add
fcomip
adc
sbb
rolb
dec
lret
andb
inc
xchg
mov
push
rcrb
into
lcall
xchg
les
mov
rorb
dec
jge
pop
mov
mov
jns
mov
sub
mov
add
js
ds
sub
jbe
add
ja
and
cli
rcr
pop
insb
fsubrs
mull
mov
push
xchg
test
push
clc
cmp
mov
cmp
inc
movsl
les
pop
movsb
mov
stos
xchg
fnsave
add
xchg
cmp
lret
sarb
push
cmpl
cmp
jg
xor
cmp
std
cmp
jbe
inc
sub
shlb
push
repnz
cmp
jge
mov
xchg
dec
adc
cld
mov
add
stc
mov
idivb
xor
inc
subb
push
iret
fwait
aad
jg
mov
ret
shll
outsb
push
pop
sbb
inc
leave
sbb
negl
or
sub
mov
into
jl
inc
imul
mov
adc
lahf
imul
adc
out
or
fdivs
mov
test
jnp
pusha
cmpsb
popa
pop
cmp
mov
fcoms
nop
push
aas
ret
mov
add
pop
or
in
cmpsl
iret
xchg
sti
testl
cs
dec
push
rcrl
inc
setnp
mov
mov
jb
adc
xor
mov
cwtl
sub
fs
out
out
xor
imul
jecxz
dec
cmp
pop
fwait
push
pop
adc
xchg
jno
adc
std
repz
jle
lock
subl
mov
rcrb
inc
pop
cmp
jnp
jmp
pop
out
cmp
jno
cmpsb
roll
inc
fidivl
add
les
cli
shll
cmc
addr16
dec
mov
scas
call
inc
sub
mov
or
cmp
scas
test
je
stos
dec
adc
repnz
xor
out
xchg
das
add
xor
nop
jecxz
arpl
pushl
pop
and
mov
ja
xchg
stos
bound
enter
push
lret
jl
mov
xor
icebp
dec
xchg
mov
xchg
jecxz
stos
lods
in
data16
sbb
sbb
leave
repnz
sbb
popf
bound
ljmp
add
stos
jne
cmc
cmpl
mov
add
jp
ds
lret
lcall
adc
cli
cmp
cmp
lcall
mov
shrl
xchg
fsubp
pop
add
mov
xor
fsubrs
bound
pop
mov
aaa
mov
shll
ss
mov
movsb
cmp
in
addr16
cmp
push
cmpsl
inc
pop
add
aaa
add
fcompl
push
shrb
insl
test
aam
addr16
adc
icebp
outsl
push
adc
pop
adc
in
adc
lds
pop
push
pop
test
pop
je
inc
jg
aam
in
fs
xchg
add
dec
out
xor
mov
rcr
ret
ret
iret
lds
js
mov
popa
mov
rcll
mov
pop
loope
ss
jmp
sbb
add
sub
orb
ds
push
mov
int3
mov
jecxz
and
std
inc
xor
mov
add
push
pop
cmpsb
out
aas
jp
out
dec
out
jne
push
movsl
fadd
dec
cld
xchg
ss
movsb
inc
xchg
xchg
sub
xor
mov
inc
stos
push
repz
scas
je
and
lcall
xor
dec
push
sarb
arpl
mov
cs
repnz
mov
jle
faddl
or
lods
push
mov
inc
mov
ljmp
adc
fbld
adc
test
or
loopne
sub
xchg
dec
invd
clc
lret
sbb
out
xor
ret
aas
mov
mov
and
add
push
sbb
js
dec
adc
sub
inc
inc
push
loop
and
jmp
pusha
inc
sub
or
sbb
cmc
inc
out
int3
das
loope
cmp
adc
add
lock
clc
mov
jl
cmpsl
inc
jae
incb
pop
out
or
insb
cmp
xchg
in
sbb
mov
push
pop
or
jg
repz
and
xchg
cmp
mov
mov
push
inc
mov
mov
pop
sub
push
mov
sar
nop
mov
inc
or
out
aas
rcll
cmp
or
pop
pop
fucomip
cli
shlb
sbb
mov
adcl
pop
adc
xchg
rcl
xchg
aaa
lahf
cli
cwtl
stos
xor
mov
in
jae
inc
pop
cmp
jecxz
xchg
mov
ljmp
testl
int
jecxz
add
mov
adc
pusha
sub
sub
xchg
test
scas
sub
leave
sbbb
pop
lcall
jl
lret
jg
adc
adc
xor
movsb
rcr
jmp
jge
mov
pop
mov
cmpsl
cli
mov
jp
fstps
jns
dec
cmp
pop
push
insl
sti
repz
stos
mov
in
xor
push
dec
test
int3
mov
lea
push
sbb
int3
loop
insb
imul
and
inc
or
scas
jg
cmp
scas
mov
mov
cli
fisubrl
arpl
mov
jmp
movsl
repz
mov
mov
mov
imull
or
xor
sbb
and
mov
testb
leave
stc
rcrb
dec
pop
stc
adc
pop
pop
orb
lock
int3
and
jg
fcmovb
ljmp
mov
es
xchg
dec
sub
and
loopne
or
sbb
and
cmp
mov
mov
outsb
sub
or
popf
cs
movsb
roll
pop
shr
mov
pushf
xchg
ficoms
movsb
dec
inc
addr16
outsl
jp
dec
xchg
std
add
add
rcrl
ficoml
add
fiadds
sti
aas
leave
xchg
ja
stc
stc
sti
push
outsb
inc
add
pop
cmp
push
cmpl
int3
push
not
mov
enter
cli
ljmp
push
mov
neg
sub
cltd
mov
aad
lret
in
out
out
je
pop
cmp
mov
mov
jnp
mov
ljmp
inc
inc
xchg
or
mov
stos
mov
daa
mov
lds
and
cmpsb
es
rcrl
dec
in
sbb
aam
mov
dec
jbe
xor
fists
jl
lea
adc
adc
sbb
je
hlt
mov
jp
or
push
pop
fimull
ss
roll
cmp
movsb
mov
cs
shrb
sbb
lret
sub
test
je
dec
push
stc
or
pop
cwtl
in
add
mov
push
cwtl
lret
adc
lcall
mov
lods
repz
ljmp
aaa
or
jg
jbe
pushf
sub
push
lret
pop
cmpsl
les
daa
nop
cwtl
pop
out
aaa
push
fimull
rorl
jecxz
bound
mov
xor
push
push
loope
mov
les
sbb
cmp
sbbl
jg
pop
aas
or
rclb
adc
push
pop
xorb
and
adc
rolb
and
pop
push
or
mov
sbb
sub
cmpsl
lea
scas
jg
outsb
adc
jb
xlat
bound
cmp
lock
pop
sahf
les
stos
movsb
jns
sbbl
popf
aaa
xor
shll
insl
jp,pt
cltd
stos
mov
push
je
mov
outsl
cmpsl
movsb
or
adc
push
ljmp
nop
xor
add
xchg
out
cmpsb
js
cmp
jp
mov
jae
mov
dec
nop
push
scas
xchg
dec
test
popa
nop
push
xchg
aas
js
movsl
jp
pop
pop
mov
adc
push
inc
fs
pop
iret
mov
incb
push
mov
mov
cmpsb
push
jne
pop
lahf
rorl
in
add
xchg
fcompl
aam
out
jno
cli
lock
and
negl
pop
arpl
sbb
push
pop
imul
sahf
xor
leave
out
jbe
out
fidivrl
lcall
fs
push
outsl
ss
out
cwtl
mov
mov
mov
pop
mov
or
lock
add
cmp
pop
aam
sub
call
cli
ret
pop
sahf
stos
fdivrl
repz
mov
push
cmc
mov
hlt
inc
xor
ljmp
cwtl
pusha
push
shrb
mov
sbb
dec
mov
call
pop
xchg
cmpsl
dec
and
inc
adc
inc
out
and
and
sahf
sub
cmp
insl
lahf
jg
or
and
and
mov
scas
push
push
and
gs
sub
push
pop
andl
add
jae
adc
pop
cli
adc
push
fnstenv
sub
ja
movb
iret
lcall
ret
jbe
adc
push
xchg
adc
in
stos
js
and
loope
cmp
adc
cwtl
xchg
dec
push
xchg
icebp
push
les
les
sbb
shlb
aam
push
sbb
stos
insl
push
xchg
mov
fwait
mov
mov
repz
aad
add
jnp
fidivrl
adc
adc
daa
std
jnp
sub
xor
lret
stc
fcompl
pop
fbld
pop
dec
sbb
mov
cmp
push
adc
insl
xorl
sbb
cli
pop
push
xchg
pop
xlat
sahf
cltd
outsb
jg
lret
mov
dec
mov
cmp
cmp
lods
xchg
mov
xorl
popa
in
push
scas
into
sbb
jns
mov
pusha
cs
enter
es
mov
add
xchg
mov
ret
arpl
xchg
imul
stc
fbstp
js
addr16
xor
xlat
adc
shrl
cld
add
xor
xchg
stc
addl
loop
ljmp
add
dec
dec
push
mov
cmpsl
inc
divl
rcr
push
add
lret
mov
and
enter
push
sahf
mov
sti
mov
fbstp
dec
push
adc
cmp
sarl
stos
cmp
fstl
testl
cs
lahf
cmc
in
mov
hlt
mov
sarb
mov
and
repz
fdiv
pop
push
sub
fwait
xor
mov
insl
sub
aad
addr16
ss
add
mov
out
xor
mov
mov
pop
inc
daa
mov
and
and
mov
pop
mov
icebp
sub
mov
jbe
es
stos
cs
xchg
ljmp
sbb
mov
mov
inc
aam
stos
bnd
jl
pop
popl
clc
inc
dec
pop
pop
fmuls
inc
test
loope
les
xor
xor
mov
and
idiv
popf
js
sub
fimuls
out
push
xchg
mov
ss
or
bound
jp
inc
repz
cmpsl
dec
adc
pop
repnz
out
insb
stos
push
fs
rcrb
push
mov
xor
xchg
stc
mov
or
mov
pop
insl
xchg
enter
leave
mov
dec
sub
pop
pop
add
popf
jecxz
dec
lods
sub
std
ljmp
sahf
fs
mov
repz
in
loopne
jp
xchg
out
shll
ljmp
or
insb
jmp
xor
ret
imul
jmp
sub
push
pop
and
sub
divl
jae
dec
mov
call
cmp
jno
fldt
xchg
lods
neg
add
mov
mov
cwtl
add
cmp
sbb
jp
dec
das
ljmp
mov
inc
push
mov
pop
mov
shll
daa
push
fsubrs
or
xor
mov
int3
jecxz
or
cwtl
ljmp
jge
mov
aam
addl
push
xchg
iret
and
scas
or
add
sub
pushf
inc
stc
cmp
mov
xor
xchg
ss
popa
xchg
imul
pop
pusha
mov
inc
mov
jp
cmpsb
int3
mov
cmp
add
fadds
cmp
cmc
mov
mov
jmp
sub
xor
cs
add
scas
int
jg
pusha
jns
push
sub
mov
or
and
mov
dec
sub
insb
mov
mov
inc
out
pop
push
pop
cmp
icebp
lea
pop
data16
add
mov
push
jo
out
repnz
push
pop
pop
cli
pop
cmp
inc
rcrb
sti
rorl
test
and
push
dec
std
mov
mov
into
and
pop
dec
adc
jae
mov
mov
fs
cmc
and
pop
jb
fisubl
sar
sub
hlt
fbstp
mov
loopne
xchg
aad
inc
dec
adc
sbb
fildll
ss
stc
pop
scas
jge
out
sbbl
stc
sub
inc
inc
cmc
jle
fisubl
xor
les
std
xor
inc
repz
push
clc
fcmovb
lea
imul
add
std
jns
scas
mov
and
hlt
mov
xor
jl
cwtl
in
jno
pop
sub
fldenv
jp
into
js
stos
lret
jge
push
mov
inc
movsb
movb
stos
add
sub
mov
fsubr
xor
pop
shrb
cmp
inc
fiaddl
fnstsw
pslld
lret
fwait
aam
jno
and
das
dec
lea
data16
out
lcall
add
add
push
inc
mov
xor
imul
fs
jl
mov
xchg
aas
lcall
int3
fsub
add
xchg
cmp
dec
scas
lods
test
and
aas
sub
sub
lret
ficompl
mov
jo
inc
xchg
pop
mov
clc
jecxz
mov
jle
pop
inc
pop
push
testl
rorb
pop
outsl
lret
pop
daa
xchg
test
loope
ret
add
scas
pushf
mov
fildll
inc
pusha
nop
pushf
or
int
bound
shlb
mov
or
pop
cmp
or
or
mov
and
xchg
dec
dec
cmpl
sub
lret
fs
in
lods
xchg
xor
mov
add
icebp
jl
xchg
or
pushf
push
mov
ljmp
stos
inc
jne
ja,pt
and
cmp
mov
lods
scas
inc
test
hlt
cmc
fwait
or
sub
dec
rcl
nop
int
hlt
or
loopne
pop
cs
push
neg
in
addr16
movsb
movb
xchg
loopne
fucomp
test
add
ja
mov
inc
xor
outsb
sbb
mov
mov
int3
outsl
push
mov
fidivs
enter
push
shll
cmp
lret
pushf
or
jge
inc
fiadds
out
inc
fmuls
popf
popf
pop
mov
lods
and
aaa
lret
pusha
push
int3
pop
fwait
inc
mov
jg
adc
test
imulb
or
std
push
sbb
pop
movsl
mov
lret
subl
stos
add
adc
fmuls
aam
lahf
mov
mov
or
jb
cmpsb
jmp
mov
xchg
aad
sbb
lea
test
loopne
insl
mov
inc
sub
inc
fbld
push
xor
jnp
aaa
xchg
or
xlat
loopne
inc
jl
xor
outsl
inc
lods
jp
stos
sbb
dec
inc
mov
xchg
mov
ficoml
cmp
jmp
adc
sub
das
loopne
pop
lcall
mov
mov
jo
inc
mov
or
inc
ds
mov
insb
movsl
jmp
ja,pt
xchg
xchg
outsb
outsb
mov
xchg
rol
push
lock
cmc
jns
es
dec
insb
mov
cmp
insl
xchg
enter
iret
sbb
mov
push
adc
dec
push
xchg
and
popf
cmp
shlb
lret
mov
mov
inc
push
lret
call
push
xchg
lds
and
dec
shl
ds
or
sbb
mov
les
and
jb
outsl
pop
mov
loop
lods
js
in
mov
push
sub
mov
push
inc
rorb
and
lock
mov
jecxz
and
out
pop
pushl
or
mov
fs
fld
pop
jmp
test
scas
push
lret
jb
into
pop
mov
dec
pop
sbb
lea
ret
movsl
ror
mov
xor
and
xchg
nop
mov
xchg
fwait
and
inc
dec
cmp
mov
jne
faddl
fwait
lds
dec
pop
and
mov
stos
xor
or
sbb
push
popf
aaa
push
pop
jge
bound
repz
aas
repz
daa
push
ja
pushf
lock
cmp
push
and
sbb
push
fcmovu
ficompl
das
push
clc
fldl
clc
das
mov
xor
shrb
fsts
clc
call
aad
test
stc
xorl
idivb
mov
in
adc
sti
sbb
mov
dec
push
xor
sub
xor
push
jae
add
push
jg
cmp
cmp
jbe
inc
inc
xchg
push
insb
xchg
push
mov
iret
clc
jo
mov
jns
lock
fwait
ljmp
pop
jno
sub
pop
movsb
push
jno
shlb
out
pushf
cmp
pop
cld
decl
sub
mov
andb
imul
nop
test
jge
shll
dec
xorb
movsl
push
sub
inc
pop
ja
aaa
cmp
fistl
sub
les
add
cmp
inc
in
and
arpl
mov
lret
es
test
inc
sub
inc
add
add
das
mov
sbb
add
mov
xlat
cmc
push
fisubrl
mulb
jg
arpl
pop
xchg
loope
or
lock
dec
inc
push
jge
push
inc
test
xor
push
nop
and
dec
loop
push
js
aam
aam
ret
pop
push
xchg
inc
test
inc
pop
dec
cli
js
xor
in
popa
mov
movsb
mov
jne
mov
adc
and
jg
ds
outsb
push
ja
rcll
int
mov
mov
xor
adc
in
test
xor
mov
cmp
cmc
sub
xor
vandnpd
xchg
pop
mov
stos
sahf
push
push
dec
sti
movsl
rcr
cld
addr16
outsl
fstpt
ljmp
test
jl
mov
pop
inc
inc
cwtl
add
ja
lcall
push
sbb
push
and
xchg
inc
mov
sub
mov
not
mov
sub
pushf
int
dec
adc
xchg
ficoms
loope
add
loopne
mov
fsubl
or
or
adc
ja
rcl
mov
shl
scas
jo
jl
stos
int
stos
cmpsl
sbb
fcmovne
add
enter
cld
xor
mov
es
je
jge
notl
mov
lea
daa
sbb
jle
cmp
fildll
jno
push
daa
and
xor
or
mov
push
push
adc
mov
fmull
pop
inc
and
int3
repnz
inc
cmp
les
jg
jmp
jl
dec
into
cmpsb
and
xchg
and
xchg
in
pusha
mov
in
test
inc
xchg
aaa
pop
das
sbb
inc
xor
pop
sahf
push
pushf
mov
add
insl
xchg
ret
ja
mov
mov
mov
jmp
push
sbb
frstor
into
nop
jl
test
or
sbb
inc
jmp
pop
or
filds
stos
xchg
dec
xchg
clc
or
pop
cwtl
mov
push
jecxz
jp
sub
lahf
cmp
adc
pusha
jb
fdivrs
loopne
xchg
cmp
xor
mov
dec
pushf
sbb
ja
outsb
fcomip
cld
movsl
es
fidivrs
push
incb
and
xor
push
cmp
pop
pop
mov
adc
adc
mov
imul
iret
popf
loope
mov
cmc
dec
pop
push
xchg
icebp
nop
cmp
hlt
xchg
aad
cld
cld
push
push
ret
shlb
popf
arpl
add
or
mov
jno
enter
lcall
inc
add
enter
mov
les
jle
or
sbbl
inc
cmp
push
xchg
loop
icebp
imulb
test
xchg
sti
mov
mov
out
rorb
mov
mov
mov
clc
sub
lock
les
lcall
jge
add
push
fnstenv
mov
pop
cmc
sbb
mov
sbb
out
shll
mov
xchg
jp
scas
xor
push
xor
stc
leave
out
and
stos
cs
jb
mov
push
mov
rorb
xor
mull
lahf
mov
ss
jb
push
lret
inc
mull
sub
imul
adc
test
sbb
dec
out
outsl
or
cmpsl
imul
fwait
sbb
in
int
cmp
push
mov
jo
inc
cwtl
cmp
add
sahf
out
inc
cmpsl
or
jmp
mov
aas
mov
xchg
mov
push
in
sub
adc
mov
xchg
mov
sbb
xor
out
adcb
or
fidivs
std
dec
cmp
pop
adc
jnp
gs
cmpsl
sbb
mov
je
cmpsl
mov
cwtl
inc
cmp
jg
ljmp
sar
clc
mov
mov
add
push
push
cmp
sub
jbe
xlat
sbb
and
arpl
dec
fwait
or
jnp
jge
push
add
outsl
outsl
or
mov
cwtl
iret
repz
sub
inc
shl
dec
mov
clc
fldcw
adc
fwait
out
insb
push
fldl
rcrb
icebp
ret
mov
push
inc
or
jge
inc
mov
into
aam
jmp
and
push
imul
clc
loope
imul
pusha
dec
pop
sti
pop
addb
pusha
and
jl
aad
clc
pop
lea
hlt
inc
iret
jb
outsl
sarb
outsl
stos
pusha
pushf
cli
push
mov
dec
or
xchg
cmc
adc
test
iret
push
mov
popf
in
adc
ficoms
popa
mov
data16
cli
call
mov
mov
dec
ja
test
mov
and
inc
lcall
cmp
fsubrl
into
js
loop
xchg
ds
dec
xlat
cmp
aas
sahf
adc
or
cmpsl
and
iret
mov
inc
sbb
aad
or
out
ljmp
es
insb
jge
mov
aad
iret
push
adc
jp
sbb
and
outsl
push
mov
bnd
jl
mov
insl
cmpsb
sbb
ss
repz
in
jbe
pop
out
jle
lahf
jno
and
cmc
pop
test
into
push
repnz
fcompl
sub
add
dec
movsb
out
mov
punpckldq
cmp
jp
cmp
or
adc
push
xor
add
add
jecxz
jp
jb
pmulhw
push
push
addl
sarl
pop
pop
mov
jns
jmp
pop
pop
insl
stos
mov
pop
pop
test
fcoml
mov
leave
rep
sarl
dec
mov
mov
mov
repz
mov
sbb
xchg
and
xchg
ljmp
or
je
jne
xchg
lock
cmp
push
jns
popf
cmp
pop
sub
mov
mov
shrl
inc
adc
arpl
push
adc
insb
mov
adc
fwait
loop
sbb
push
sub
jnp
cmp
adc
dec
push
push
aaa
push
into
xchg
stos
pop
mov
push
mov
call
xor
jg
mov
push
sbb
cli
pop
sub
xchg
ss
popf
icebp
lcall
mov
and
in
dec
xor
mov
mov
inc
dec
xchg
std
mov
lret
or
andb
rcrl
sbb
xor
push
idivl
jne
inc
adc
add
jno
mov
jl
in
jnp
ret
inc
in
lret
jno
clc
pop
subl
insl
pop
mov
push
loope
out
pusha
sbb
or
cmp
mov
mov
pop
add
jle
dec
xor
pop
cld
xchg
outsb
push
jo
mov
and
insl
jno
scas
or
xor
imull
push
es
sbb
push
arpl
or
out
cmpsb
jge
ds
jbe
sahf
adc
mov
adc
jmp
loope
jl
call
adc
push
or
xchg
cmpsb
mov
ret
dec
call
shrl
cld
out
icebp
mov
ret
lea
negb
add
sbb
jle
add
cmc
xchg
clc
adc
arpl
fsubs
jbe
int3
jno
movsl
mov
push
je
cmpsb
mov
fs
mov
push
pushf
dec
lds
es
pop
std
inc
ret
adc
lea
iret
xor
orl
paddsw
xor
stc
lock
jp
gs
ds
sbb
mov
aas
addr16
sub
je
call
mov
dec
mov
incl
iret
test
stos
jb
clc
pop
inc
sub
pop
in
cmovae
jae
jae
lret
sub
sbbb
inc
dec
lcall
inc
mov
sahf
mov
xor
loop
pop
mov
push
cltd
ds
repz
aas
xor
mov
pop
inc
fsubrp
mov
outsb
in
or
imul
cwtl
in
sarl
adc
pcmpeqd
daa
mov
dec
out
jmp
popa
jle
add
jb
cmp
cmpsb
test
mov
mov
xor
jo
ret
test
ds
jmp
outsb
mov
push
test
push
sub
and
xchg
ret
cld
es
lock
decl
imul
outsl
ss
es
outsb
sub
lahf
clc
daa
mov
mov
movsl
fs
xlat
xchg
cmp
int3
xchg
lods
adc
test
add
pop
push
call
mov
push
outsl
mov
sbb
mov
sub
outsb
jle
inc
sbb
icebp
ds
clc
aaa
mov
rcl
mov
int
sbb
mov
lods
dec
and
sub
dec
ss
sub
int3
jp
inc
dec
ds
mov
hlt
aad
imul
ljmp
int3
lea
mov
cli
mov
iret
je
repz
sarb
ret
cpuid
inc
aam
out
xor
sbbl
xor
push
pop
mov
xor
lock
iret
inc
test
push
int3
cmp
mov
insl
in
mov
dec
lea
or
into
int
add
adc
dec
mov
push
stos
xchg
sarl
and
in
adc
inc
fdivrl
enter
cs
fcompl
nop
mov
inc
or
lret
pop
mov
sbbl
xchg
jb
jle
cs
push
mov
out
pop
adc
dec
push
xchg
lods
sbb
int
fcomps
das
mov
and
lret
inc
jmp
ja
dec
wbinvd
xchg
loop
push
push
fldl
cmp
daa
lret
push
or
mov
nop
adc
cmp
insb
imul
xchg
push
cmp
shll
dec
push
jo
stos
imul
or
nop
aad
out
repz
adcb
jg
das
mov
fcmovnb
pop
out
add
das
cmp
movsb
mov
out
ficompl
icebp
jge
add
aam
xor
sbb
mov
jne
adc
aas
sbb
inc
test
rcll
pop
bound
adc
clc
int
add
hlt
add
scas
pop
imul
pusha
inc
cwtl
xchg
ljmp
mov
aaa
icebp
icebp
in
out
mov
pushf
aad
cli
arpl
push
scas
out
cmpsl
pop
jp
mov
lds
mov
xchg
addr16
cld
xchg
fmull
mov
or
movsb
aad
inc
xor
inc
sub
outsl
mov
cmp
sar
and
mov
incl
sub
pop
dec
mov
mov
xchg
cmpsb
fs
roll
or
jne
adc
fadd
sub
test
or
lds
mov
es
inc
in
push
fmul
sub
out
xor
sti
les
mov
and
sbb
sbb
and
push
or
fs
mov
pop
scas
fwait
pop
in
xlat
inc
or
ds
shlb
mov
aaa
rcll
xchg
fidivrl
push
xchg
jp
outsl
scas
xchg
xlat
fcmovu
push
mov
add
lds
insb
push
mov
xchg
shrl
mov
cmpsl
pop
js
aas
adc
sbb
cwtl
bound
push
decl
daa
fwait
popl
imul
push
xchg
cmp
or
xchg
push
inc
out
test
xor
sub
ss
fstpt
aaa
mov
call
sbb
add
sbb
add
adc
out
sub
sbb
xchg
mov
jae
shlb
or
xchg
stos
push
icebp
movsl
cs
scas
cmp
out
push
aas
ret
jo
and
in
jne
sbb
push
pop
and
push
shl
ss
sub
fnstenv
or
dec
jns
dec
jmp
outsb
jg
stos
mov
bound
xor
cmp
inc
sbb
cmpsb
mov
mov
ret
mov
add
test
push
mov
dec
stos
xor
cmp
adc
adc
out
pop
loop
xchg
jge
push
hlt
outsb
rorl
pushf
xor
sbb
cmpsl
movsb
loope
iret
fwait
or
cmp
mov
xchg
add
or
aaa
into
push
cmc
push
arpl
jecxz
add
push
or
and
lods
aad
mov
js
dec
adc
jecxz
lahf
pop
lds
pop
outsl
cltd
daa
dec
push
outsl
sbb
ss
jnp
jge
jnp
push
lds
or
cmc
gs
mov
sub
out
mov
fidivl
sub
popa
add
shlb
jns
shll
push
jecxz
fiaddl
int3
cmp
dec
push
hlt
pop
or
ljmp
sub
iret
gs
or
loope
movsb
and
mov
fnstcw
add
fmull
test
pushf
or
push
mov
push
es
mov
scas
push
push
jge
aaa
jae
xchg
scas
insl
mov
and
mov
sbb
test
movsl
xchg
mov
mov
rorb
repz
adc
dec
leave
inc
jg
pushf
lods
clc
push
xorb
ljmp
jmp
push
dec
push
orb
movsl
in
add
jecxz
shll
inc
inc
in
cmp
jmp
notb
xchg
jecxz
rorl
sub
xchg
jle
mov
mov
rolb
mov
popf
fwait
lds
shlb
dec
mov
sbb
xchg
repz
jnp
xchg
andl
fsubl
mov
hlt
addb
xor
jno
sbb
jge
repz
push
push
data16
mov
adcb
adc
mov
xchg
jmp
mov
mov
push
and
mov
repnz
push
pop
add
pop
pop
xchg
in
add
ljmp
test
xchg
jns
pop
cmp
sub
sbbl
pop
xor
mov
jbe
loop
inc
dec
popa
scas
stos
mov
rcll
std
scas
sub
mov
adc
or
pop
cmp
or
inc
clc
add
cmpsb
out
sub
nop
mov
pop
negl
or
dec
sbb
cmp
aam
cmp
cmp
xchg
fs
and
shrl
jb
sahf
mov
mov
add
lret
in
or
mov
stos
adc
das
fidivl
mov
push
cli
rorb
xor
js
int
mov
inc
mov
aad
fs
fldt
in
xchg
loop
jbe
and
out
cmp
dec
jae
inc
sub
test
pop
inc
mov
xchg
add
js
pop
sbb
pop
inc
lcall
mov
into
call
dec
pop
lods
aam
sub
mov
sbb
stc
pop
insb
mov
enter
fst
xor
push
cmc
imul
adc
ss
data16
pop
xorl
push
push
outsl
enter
jb
movsl
mov
and
ljmp
lret
inc
mov
lods
add
mov
add
dec
stc
scas
push
cltd
lcall
repnz
inc
xor
outsl
xor
ret
sbb
xchg
adc
dec
pop
dec
nop
dec
ficoms
loopne
cmp
push
ficompl
push
rol
sub
mov
fs
scas
push
push
inc
pusha
in
xchg
lahf
jle
inc
ss
ljmp
cmp
sbb
xor
int3
imul
mov
sub
inc
xchg
xlat
insl
mov
loop
sahf
push
jbe
clc
jne
xchg
nop
add
cmp
xlat
cs
dec
bound
pop
jo
push
out
dec
loopne
shll
sbb
addr16
scas
insb
fs
mov
xchg
pushl
push
lahf
dec
push
xchg
and
adc
leave
inc
or
xor
fidivrs
pop
dec
fs
mov
hlt
stc
adc
inc
or
bswap
jl
ds
xchg
pop
adc
mov
outsb
stos
push
mov
imul
adc
lods
dec
daa
jle
popf
sbb
loop
sub
cmp
push
mov
jecxz
outsl
push
mov
scas
iret
and
out
scas
hlt
or
std
adc
pop
pop
xlat
xor
adc
enter
push
daa
xorl
dec
lret
mov
out
cmp
push
pop
inc
loopne
sbb
loopne
xchg
or
hlt
pop
fs
xchg
sub
out
mov
stos
pop
push
inc
add
cwtl
and
lods
sbb
jb
inc
fdiv
mov
lods
je
outsl
inc
out
daa
insb
stos
inc
lods
fstl
jae
imul
or
out
adc
enter
lret
mov
test
mov
lahf
dec
xchg
stos
xchg
push
ljmp
in
xchg
ret
pop
lahf
arpl
mov
int3
outsb
fidivs
adc
mov
or
sbb
xchg
cmpsb
or
adc
inc
adc
cwtl
push
in
inc
jp
ja
cmpsl
test
sbb
sub
mov
push
test
jmp
cmpsl
lret
xor
jecxz
xor
stos
push
test
iret
test
sbb
cmp
dec
pop
jnp
cmp
cmc
les
xchg
imul
cmp
bound
or
sub
call
lds
popa
or
ficompl
jno
sub
push
inc
stos
dec
push
mov
cmp
mov
jle
or
outsb
mov
adc
sub
mov
mov
pusha
xchg
cmp
insl
enter
pushl
inc
arpl
mov
jg
dec
add
into
mov
inc
lods
out
sbb
jge
push
mov
add
or
push
mov
add
mov
add
sbb
mov
stos
adc
xor
and
pop
jbe
sub
mov
adc
add
push
jmp
sub
inc
sahf
push
and
mov
repz
subl
jnp
xor
inc
or
dec
and
mov
add
imull
cmp
sbb
shl
imull
addl
pop
sub
int3
sti
aam
fldenv
orb
mov
or
sub
and
push
filds
add
push
iret
jo
xchg
dec
cld
rorl
roll
pop
mov
push
cmp
jbe
xchg
in
push
insb
push
subl
inc
fsubrl
mov
sub
xor
rclb
bound
inc
sbb
dec
scas
jle
movsb
xor
mov
jecxz
outsb
xor
je
push
repz
enter
xchg
rorl
mov
xchg
cmp
and
jno
outsl
rcll
ja
pop
pop
jbe
sbb
jnp
xor
bound
xor
jle
jle
dec
jno
inc
clc
out
ret
inc
or
cmpsb
pushf
call
and
jne
jae
mov
xor
out
inc
sahf
sahf
sub
sub
lods
jae
mov
push
mov
popf
adc
mov
test
pop
sub
loope
xor
pop
aam
push
addl
jp
inc
addl
call
lcall
xchg
cmp
lret
add
in
cli
orl
addb
fwait
pop
mov
inc
pop
pop
xchg
jle
or
lods
inc
test
xor
decl
push
jge
pop
mov
push
sub
jle
in
dec
dec
fcoms
jge
sbb
jns
pop
iret
mov
xlat
leave
adcb
jne
pop
mov
pop
xchg
ds
fs
loop
pop
mov
inc
ja
xor
scas
dec
cmc
in
cs
mov
pop
ljmp
push
clc
aam
mov
insl
push
sub
xor
dec
ret
test
add
xchg
mov
roll
lcall
cmpsl
rclb
test
pop
ret
aaa
push
lea
std
xchg
xchg
pop
mov
sbb
mov
xchg
out
outsb
inc
mov
mov
pop
sub
setbe
cli
ret
daa
stos
popf
add
ror
stos
enter
pop
push
cli
sbb
rcrb
in
fs
icebp
sarb
dec
aas
xor
pop
mov
std
jl
hlt
ljmp
test
xorb
imul
sbbl
push
jp
gs
cmpsl
ss
daa
xor
enter
lret
test
cli
sub
popa
mov
push
add
xor
inc
cld
jp
arpl
dec
in
sub
mov
test
mov
sbb
adc
adc
imul
mov
ds
push
movsb
xor
popa
add
xor
test
outsl
shll
insb
sub
scas
insb
adc
cmp
outsb
mov
dec
jbe
xchg
loope
cmc
fcomp
das
pop
pop
pop
outsl
dec
inc
fisubrs
dec
adc
pop
jo
fisubs
aad
scas
fists
jge
xchg
mov
xchg
jns
xchg
mov
mov
jne
rcrb
cmpsb
fsubrs
insl
jg
ficompl
dec
repz
int3
or
sbb
and
mov
int
fnsave
daa
scas
insl
sarb
test
sub
cmpsb
sub
outsb
inc
and
adc
push
xor
shl
pop
jge
jecxz
clc
repz
cmp
movsl
pop
xchg
jb
icebp
int3
cmc
push
fbld
pop
stos
mov
jno
xchg
push
mov
jno
js
sub
push
sub
sbb
outsb
sub
pop
cltd
clc
push
mov
pop
popa
adc
out
scas
dec
cwtl
lret
into
dec
mov
inc
xor
dec
add
mov
inc
xchg
and
push
push
out
sarb
out
pop
xchg
xor
mov
das
mov
repnz
dec
popf
cmp
rcr
lret
andb
or
aad
and
adc
ret
cmpsb
cltd
pop
jmp
fmull
aam
xor
ret
pop
cmp
pop
int
push
out
sub
mov
aad
sbb
ret
mov
into
out
shl
sbb
push
sbb
jecxz
sbb
adc
mov
adc
jno
pop
push
jns
push
loop
push
movsl
out
pusha
dec
pop
and
jge,pn
or
jp
fnstcw
xchg
pushf
adc
adc
cmpsl
jge
jnp
mov
scas
or
mov
mov
push
rcrb
cmp
shr
lods
ficoms
inc
mov
mov
jne
enter
sar
pop
fcomps
loopne
test
jl
push
adc
inc
or
jecxz
mov
cmp
ja
push
leave
lock
and
pop
push
in
mov
fdivl
repnz
jmp
fbld
jmp
lock
outsb
pop
leave
clc
mov
icebp
add
fdivrl
pop
and
mov
out
imul
inc
sub
push
rcrb
mov
or
jns
outsl
loopne
inc
fstpl
pop
and
data16
push
or
xchg
and
xchg
call
adc
sarb
jmp
or
mov
sbbb
js
ljmp
rcl
cmp
mov
sbb
leave
xor
jno
dec
cmpsb
fsubl
lcall
aad
xor
rcrl
rolb
and
sbb
mov
loopne
and
dec
cmpps
and
cli
xor
lods
mov
lock
and
jb
bound
jbe
mov
mov
es
int
mov
aaa
jne
inc
inc
add
popa
push
test
loopne
jb
lcall
and
push
imul
inc
pop
adc
mov
jo
daa
mov
shll
je
inc
cmc
mov
jne
push
cmpsl
pop
stos
sub
bound
ja
push
pop
rcr
mov
cmp
ss
mov
xchg
adc
shll
cmc
cmp
mov
popf
push
xlat
icebp
test
pop
pop
inc
je
in
gs
or
fisttpll
or
insb
jge
and
sub
pop
fsubs
das
inc
push
pop
jp
les
aas
popf
jmp
shrb
enter
jmp
repnz
out
in
pop
in
adc
rcr
inc
setno
and
pop
or
and
testb
mov
aas
and
pop
mov
enter
cmp
clc
in
cmpsl
sub
inc
xor
add
gs
rcll
mov
mov
enter
jae
sub
xor
addl
fidivl
rcrb
xchg
adc
pusha
outsl
mov
popa
cltd
stos
sti
add
cltd
and
sub
mov
or
xchg
push
xor
lret
jecxz
jo
negb
push
mov
sub
xchg
int3
outsl
rclb
aaa
push
pusha
cld
pop
jno
jns
dec
orl
ja
push
fdivrs
pop
cmp
pop
es
cltd
pop
and
fidivrs
in
mov
sub
mov
xchg
inc
mov
mov
js
imul
adc
sbbb
test
mov
push
pop
in
test
pop
nop
outsb
roll
xor
push
sub
clc
lods
inc
add
dec
shll
test
pop
test
or
cmpb
je
lods
rcrl
xor
cmp
fadd
scas
push
pop
push
paddsw
mov
jne,pn
ret
jo
je
fmul
out
sbb
inc
inc
dec
jnp
jmp
clc
fistpl
faddl
sub
and
in
in
jge
push
test
pop
jnp
pop
add
fwait
shlb
cld
sub
ja
insl
or
jecxz
enter
aas
out
inc
rcrl
sbbl
test
ret
push
or
or
add
mov
xor
dec
movsl
pop
jp
xchg
cmp
or
in
mov
adc
push
fmul
faddl
mov
mov
mov
loope
rcrl
xor
lret
jb
enter
rorl
or
sbb
or
in
mov
lods
ror
syscall
sbb
xlat
pop
lcall
cli
sbb
leave
cld
pop
or
cmp
aam
xlat
pop
lods
push
out
pop
mov
clc
sbb
lahf
add
fistps
xor
mov
mov
cmc
xchg
inc
adcl
push
jp
ds
mov
sbb
outsb
mov
cli
adc
pop
mov
rol
bound
inc
lret
sbbl
lret
dec
xor
push
call
cmp
wrmsr
out
in
cmpsl
dec
sub
je
in
dec
pop
test
or
int3
popf
paddd
cmpsl
add
out
adc
out
insl
dec
xchg
adc
jo
aad
push
ss
mov
sbb
sbb
ja
bound
mov
jne
xchg
cwtl
sub
cltd
mov
dec
or
out
lret
aad
testb
sbb
mov
insl
shlb
inc
and
sub
mov
loope
repz
sbb
scas
insb
or
xchg
daa
jmp
inc
xor
mov
shll
bound
popl
fs
fwait
in
mov
loop
mov
mov
pop
pushf
push
xchg
ja
inc
mov
adc
imul
call
mov
outsb
lds
sub
mov
repz
mov
sub
es
stos
lea
out
sbb
out
sti
fmuls
in
dec
jge,pt
push
out
add
jge
pop
jge
pop
inc
mov
dec
ja
outsl
pop
loop
sahf
jo
cmp
dec
inc
push
dec
fwait
pop
loope
jno
xchg
jl
push
xchg
dec
inc
xor
movsl
shrl
xchg
jbe
fistpll
push
cmpsl
lock
pop
adc
cmp
inc
add
leave
or
inc
push
inc
xchg
aaa
imul
sub
mov
or
aaa
mov
xchg
jge
insl
xchg
jl
rcll
fisttps
xor
sub
xor
add
lret
ss
test
clts
mov
push
sbb
sbb
inc
push
pop
mov
shrd
mov
les
ds
mov
loopne
cmp
cmp
lahf
or
mov
into
cmp
push
dec
cmp
int
cmp
mov
mov
xor
adc
mov
sarl
xor
es
dec
xor
fucomp
fbld
ret
sbb
cmp
scas
jae
inc
pushf
popa
sarl
add
jnp
inc
jle
dec
cwtl
pop
stc
repnz
cvttps2pi
mov
addr16
add
lret
inc
stos
ss
adc
dec
xchg
pop
int
cmp
das
popa
ret
les
call
jp
push
sub
sti
add
sar
cli
xchg
inc
mov
dec
sbb
or
xchg
xchg
jb
mov
pop
int
pop
mov
test
sti
inc
lds
pop
ret
pop
rol
ljmp
or
testl
ss
and
xchg
adc
aas
andl
sbb
pushl
xchg
movsl
mov
mov
ret
push
and
or
or
jnp
daa
or
xor
shl
test
add
sbb
les
cmp
lahf
add
sbb
js
lret
sub
and
sub
std
call
int3
testb
insl
cmp
mov
cmp
and
xchg
pushf
fldln2
aad
pusha
std
into
out
mov
jo
cmp
adc
xchg
pop
jge
cmp
lods
adc
out
repnz
in
mov
lock
sbb
sub
hlt
dec
popf
imul
call
cmp
jo
gs
stc
ds
inc
stos
nop
mov
out
adc
lret
loope
add
mov
pushf
mov
jle
dec
inc
fisubrl
jg
jp
mov
sbb
dec
xchg
mov
ljmp
jle
jae
ljmp
repz
mov
push
sub
out
sub
aas
mov
dec
lret
cltd
fstps
jp
inc
and
inc
mov
xchg
mov
dec
es
leave
pop
inc
lret
pop
daa
lock
cmp
xchg
xor
push
jnp
jle
cmpsb
mov
or
add
inc
xlat
cmp
movsl
push
int
mov
mov
test
mov
in
insb
sub
lds
add
and
push
xchg
push
sub
cwtl
mov
out
jae
jecxz
addr16
xor
std
movsl
mov
jnp
fwait
ja
sub
jle
mov
mov
mov
push
mov
ret
mov
aam
jb
xor
mov
fxch
lock
push
or
mov
mov
and
scas
pop
in
call
popl
inc
adc
sti
xor
push
sbb
cltd
adc
mov
lock
jge
jmp
sub
js
jmp
sub
xchg
pop
sbbb
jle
pusha
inc
and
sar
add
popf
in
inc
xlat
mov
pop
inc
xchg
stc
std
pop
or
xchg
rol
xor
ds
call
fwait
in
pop
test
enter
push
sub
jne
xor
out
addr16
in
inc
push
gs
lds
push
or
out
cmp
aas
cmp
mov
in
push
push
scas
pop
aam
dec
daa
mov
inc
jae
cltd
mov
pop
call
mov
je
int3
pop
out
mov
mov
push
pop
mov
sbb
cmpsb
sbb
mov
sbb
sahf
out
iret
adc
int
cmp
or
sbb
xchg
dec
jle
push
and
int
mov
or
cmc
and
push
lock
xor
xor
pop
cmpsb
lock
or
fchs
inc
leave
sub
pop
mov
stc
pop
adc
jbe
cmp
xchg
adc
jb
sub
insl
loopne
add
loop
in
cmp
ret
cltd
mov
out
push
fwait
push
imul
shll
inc
mov
roll
pusha
sbb
xchg
daa
jnp
jl
cmpl
test
lret
daa
orl
and
pop
mov
lahf
cmp
enter
mov
movsb
idiv
mov
leave
and
pop
sbb
andb
lods
sub
subl
sar
mov
das
ret
loop
addl
cmpsb
cld
gs
add
dec
inc
repnz
push
into
inc
fs
sub
push
or
push
sbb
jns
mov
lods
lock
ret
sbb
int3
fcomi
pop
dec
mov
icebp
out
adc
or
fbld
mov
push
ftst
sbb
cltd
sarl
into
mov
sbbb
lds
xchg
repz
jne
inc
and
idivl
add
aas
jns
push
jo
das
shll
xchg
mov
ret
popa
push
inc
xor
lcall
pop
dec
fdivl
xorb
repnz
push
cmp
pop
sub
scas
mov
arpl
add
mov
inc
lret
xor
push
popf
adc
sti
inc
ret
outsb
jmp
sbb
es
ret
icebp
cmp
add
ljmp
dec
add
inc
push
add
test
cmpsl
add
push
arpl
adc
roll
leave
adc
dec
das
pop
adc
enter
cli
xchg
sbb
cld
mov
pop
cwtl
or
and
popa
xchg
inc
add
ja
cmpsl
mov
fimull
mov
xchg
outsb
or
lret
js
clc
add
dec
daa
and
mov
jne
xchg
lret
sti
gs
cmp
cwtd
mov
cltd
or
aam
ficompl
aam
leave
lahf
aaa
pop
adc
sti
mov
xchg
jg
call
add
test
in
jmp
add
sbb
push
loop
ret
mov
lods
mov
call
jge
mov
push
push
pushf
ret
jecxz
cmp
fs
cmpsb
stos
pusha
adc
and
stos
mov
inc
push
fmul
lahf
iret
fsubs
xlat
xchg
iret
xchg
in
sbb
mov
jp
mov
cmp
add
inc
xchg
mov
hlt
outsb
into
or
dec
mov
sub
mov
adc
call
pop
bound
cwtl
push
gs
sub
xor
mov
xchg
push
hlt
lahf
stos
push
sub
daa
and
dec
cwtl
lods
call
in
xchg
lcall
hlt
mov
lret
ss
ja
int
mov
pop
pop
and
fcmovnbe
int
pop
sub
int
xchg
push
mov
shlb
or
lcall
mulb
icebp
fs
xchg
jmp
cmc
in
xor
push
je
ljmp
xchg
mov
sahf
es
inc
sub
je
mov
add
adc
insl
fstp
jp
sub
or
mov
mov
in
and
sub
cmpsb
lret
in
adc
cltd
repnz
push
xchg
dec
or
mov
dec
in
xor
into
imul
pop
addb
and
bound
sbb
jne
adc
mov
popf
cmp
loop
push
gs
xor
and
loopne
cmpb
aas
and
cmp
sub
fwait
std
lcall
xchg
sub
addr16
jae
jbe
jne
xor
jnp
dec
push
aas
imul
adc
popa
popa
adc
push
sub
inc
inc
mov
xor
clc
lods
cmpsb
loope
push
inc
aaa
add
nop
es
pop
fwait
clc
xchg
sbb
cmpl
push
js
pop
inc
fwait
xchg
in
push
xor
rclb
inc
negl
push
and
mov
adc
ret
jg
mov
gs
adc
or
popa
add
cmp
aaa
jo
pop
inc
repz
and
push
ret
sub
ljmp
popa
or
push
clc
jmp
add
cli
fisttps
repnz
cmp
sub
cs
dec
test
adc
mov
mul
sbb
mov
inc
stos
loope
xchg
out
mov
fchs
cli
xchg
lcall
pop
mov
jmp
pop
call
inc
pop
sahf
xchg
inc
sub
pop
sub
clc
pop
pushf
flds
sbb
les
pop
mov
push
fnsave
pop
and
rorb
cmpsb
outsb
ret
push
insl
and
jb
cmpl
repnz
xorl
jb
cmpsb
ret
inc
sbbl
and
xor
xchg
test
xchg
bound
pop
add
cli
inc
iret
in
stos
mov
shrl
xchg
adc
mov
inc
xchg
shll
jmp
cld
xchg
ljmp
int3
jb
gs
out
loopne
out
test
pop
mov
xchg
cmp
loopne
ds
pop
hlt
aaa
lret
out
mov
dec
nop
lret
sbb
xor
loopne
sbb
cmp
or
mov
add
mov
jns
aaa
add
popf
cld
cmp
push
xchg
out
sbb
in
js
and
repz
clc
arpl
mov
lea
fsub
fwait
mov
jmp
inc
jno
daa
dec
call
in
or
sub
inc
lret
mov
movsl
pop
int3
outsb
cld
sahf
ljmp
mov
push
movsl
mov
xchg
xchg
mov
test
dec
outsb
jle
outsl
mov
cmpsl
ja
push
xchg
push
test
insl
fmul
push
sbb
xchg
jne
pop
inc
push
adc
mov
shlb
std
inc
jge
and
dec
xlat
out
add
mov
xlat
pop
outsb
decl
cmpsb
or
lods
std
loope
aas
dec
xchg
mov
push
sahf
pop
sub
std
push
push
xor
rolb
pop
inc
jge
sbb
sub
jg
into
jp
cmpsl
int3
into
sub
sub
lods
out
cmp
bound
jae
or
sbb
xchg
mov
adc
pusha
mov
and
loopne
pushl
cmpsl
pop
and
fs
js
call
xchg
lcall
mov
pop
push
lock
inc
mov
sbb
jmp
out
test
adc
pop
filds
cwtl
and
jbe
adc
xor
lock
ret
add
fs
addl
add
roll
clc
out
test
cmp
test
xchg
repnz
cltd
gs
sub
int3
adc
fisubrs
adc
pushf
rorl
push
adc
mov
enter
jb
push
int3
dec
fwait
add
inc
jo
out
and
xchg
dec
cmpsb
mov
jecxz
mov
stos
lods
xlat
and
rolb
jle
out
dec
lock
popf
sahf
dec
and
dec
gs
stc
mov
push
das
int
or
fiadds
aad
xchg
xor
sbb
sub
movsb
test
scas
push
scas
cmp
xchg
push
stc
sbb
or
push
sub
orb
adcl
std
xchg
mov
adc
jge
mov
jne
cmpsl
in
seto
mov
mov
loopne
xchg
call
or
mov
sbb
dec
std
mov
cmp
cmp
xor
and
sbb
pop
push
pusha
or
ret
pop
dec
jb
cmp
out
jge
push
fucom
jl
sbb
flds
scas
xor
je
rorb
popa
hlt
pop
sub
adc
fs
popf
cmpsb
imul
cmp
fldt
add
je
mov
adc
outsl
mov
dec
scas
jmp
or
push
cli
lds
call
xor
sar
shlb
mov
jmp
gs
or
sbb
mov
pop
or
cmpsl
jge
and
xchg
mov
mov
mov
mov
xchg
xchg
int3
jmp
push
dec
dec
push
xchg
ljmp
inc
push
inc
js
lret
sbbb
mov
call
add
mov
mov
jle
jnp
lods
mov
jge
lock
adc
cmc
fucomip
jne
xor
bound
mov
and
adc
inc
int3
mov
xchg
xchg
sub
sbb
lret
jo
addr16
stos
mov
push
repz
mov
mov
out
flds
sub
ret
inc
daa
ss
and
adc
xor
test
sbb
mov
loopne
sbbl
and
mov
loopne
loope
jp
add
xor
cwtl
bound
pop
xor
mov
jb
shrl
fsts
aam
out
mov
adc
cmpsb
fisttpll
shlb
clc
mov
and
decl
push
pusha
mov
lret
sbbl
sub
iret
gs
and
fdivl
push
mov
cmc
mov
mov
inc
inc
pop
dec
or
mov
xor
and
inc
movsl
xchg
push
sub
ds
in
and
lea
jl
sbb
rorb
mov
pop
fs
inc
insl
les
cmp
mov
rclb
xor
mov
mov
daa
ret
aad
js
icebp
and
scas
jo
xchg
pop
lods
pop
xchg
mov
cmp
mov
sub
inc
dec
adc
add
xchg
mov
imul
pop
sub
and
mov
lock
fwait
mov
or
cmovge
stos
adc
mov
jecxz
fs
pop
cwtl
ret
icebp
mov
sbb
mov
leave
shll
add
sbb
or
or
and
cwtl
negb
and
or
mov
jle
sarl
incb
sub
popa
cmpsl
mov
jmp
fnstcw
inc
fistpll
adc
pushf
sbb
repz
int3
repz
insb
push
fwait
mov
sub
lahf
cltd
push
mov
sahf
pop
push
and
push
xchg
lods
mov
jecxz
adc
adc
fwait
outsl
fadd
adc
or
fmul
dec
mov
lcall
scas
sub
xchg
or
shlb
dec
xchg
add
dec
mov
dec
or
inc
add
and
inc
test
pop
adc
jae
xchg
ljmp
gs
mov
mov
loope
pop
jo,pn
mov
pop
cs
repnz
add
test
sarl
xor
push
xor
popa
imull
pop
push
arpl
dec
ja
dec
out
cmc
sub
fidivrs
cmp
test
mov
mov
xor
fmuls
push
jns
outsb
roll
and
ds
jg
std
fists
push
push
push
mov
icebp
sbb
sbb
or
or
jge
ret
or
loop
or
pop
mov
cmc
test
and
sub
pop
fwait
push
and
mov
push
xchg
and
sub
push
fcompl
cmp
or
push
add
push
fucomi
cmp
stc
dec
mov
xor
xchg
outsb
mov
push
in
in
ret
inc
sarb
jg
gs
push
cmp
jl
daa
cmp
sbbl
lcall
lcall
inc
movsb
aas
sarl
gs
add
cs
adc
jp
dec
push
xlat
mov
cmc
aam
andl
outsb
ds
loop
xchg
dec
lret
sbb
push
sub
xchg
push
jne
jo
adc
loop
mov
dec
sahf
icebp
xor
or
inc
ds
stc
gs
clc
std
roll
imul
inc
addb
xchg
xor
stos
xor
stc
push
enter
insl
and
mov
loop
adc
mov
lret
jge
nop
loopne
or
dec
inc
inc
push
jecxz
sarl
lock
pop
jnp
sub
rcll
sub
les
xchg
add
sbb
popf
sbbw
xor
and
inc
push
fnstcw
push
push
mov
sbb
ljmp
insb
mov
xchg
xchg
stos
fbstp
inc
mov
xchg
add
adc
ss
inc
add
lcall
fucomi
cwtl
mov
in
mov
xchg
std
cmc
insl
mov
popa
out
cmp
test
cltd
pop
ficomps
inc
js,pt
clc
loop
stc
xchg
mov
dec
rcl
and
or
jmp
inc
dec
lock
mov
dec
pop
call
imul
repnz
rol
sbb
or
fs
mov
sub
and
and
lahf
add
jb
cmpsb
adc
test
xbegin
shrb
jle
add
pop
bound
insb
mov
mov
gs
pop
sbb
repz
movsl
scas
in
mov
insl
aaa
fwait
adc
insl
pop
mov
not
or
fdivrl
callw
pop
and
out
cmc
push
mov
and
dec
dec
xchg
dec
adc
mov
out
out
icebp
out
or
popf
fucomi
mov
in
xor
inc
add
xor
lret
jno,pt
push
nop
jle
adc
push
and
cmp
pop
xchg
pop
popl
out
xor
dec
jno
out
mov
cli
sahf
mov
mov
hlt
xchg
nop
cmp
mov
or
and
mov
decb
xchg
push
aam
or
xchg
popf
test
fcoml
dec
inc
pop
push
lret
xor
sbb
popf
fnstenv
mov
idivl
push
lods
cwtl
lret
outsl
es
bound
mov
mov
cld
sarl
loop
and
dec
xor
imul
push
or
loop
das
aas
jecxz
xor
ss
mov
addl
jge
stos
cld
pop
rorb
pop
sti
push
lret
shrl
outsl
daa
push
mov
hlt
and
pop
cmpsb
popl
popf
sbb
loopne
adc
push
cmpsb
sbb
js
outsb
loopne
jae
sub
mov
xor
insl
lods
in
loopne
out
les
xor
add
sub
add
push
js
cwtl
rcrl
push
outsl
push
js
call
out
mov
cmp
addr16
adc
sbb
xchg
jg
add
dec
ds
push
int
inc
jae
movsl
in
jno
std
imul
lret
adc
pop
jp
shll
and
jo
cwtl
cmp
lcall
out
inc
mov
jno
or
popf
mov
pusha
in
ret
cmc
imul
sbb
sbb
add
adcl
xchg
push
pop
in
ljmp
shrl
or
test
inc
or
pop
dec
jmp
std
das
inc
fwait
pop
mov
jecxz
sbbb
sbb
movsl
fs
movsl
jo
pop
sbb
mov
xchg
les
jno
pop
cs
sbb
mov
outsb
sub
mov
cld
in
fwait
mov
push
add
dec
adc
dec
in
xor
mov
loope
and
dec
shr
mov
orl
cs
xchg
cmp
dec
movsb
jnp
sub
mov
sbb
ret
dec
xchg
cmp
sbb
xchg
or
out
sbbb
sbb
jg
or
lret
je
mov
cli
ret
mov
fistpll
cmp
mov
cmpsl
add
cmp
and
orl
push
cmc
push
pop
lods
xchg
jp
xor
push
cmc
mov
lret
movsl
dec
scas
sub
xor
pop
das
dec
jb
pmaddwd
call
xor
ror
repnz
cmpsl
outsb
add
dec
loope
movsl
mov
test
cld
cmpsb
imul
test
sbb
cmpsl
push
jno
out
or
insl
adc
hlt
cli
mov
bound
ror
repz
xchg
pop
push
rorl
lods
and
xor
pop
pushf
ss
xchg
inc
ja
cli
sbb
imul
xchg
das
mov
or
xchg
adc
in
adc
lds
jne
daa
xor
mov
xchg
push
scas
and
out
xchg
imul
cmp
aad
cld
lcall
enter
mov
lret
ret
ljmp
dec
les
xchg
loopne
cld
movsl
outsb
adc
test
ja
mov
xchg
insl
lods
js
lahf
xchg
lahf
loopne
mov
out
call
ss
pop
and
xchg
or
sbb
jno
pop
addr16
xor
aaa
mov
std
sbb
shrb
insb
aas
andb
faddp
adc
cmpsl
pop
xor
mov
sub
mov
sarb
jg
outsb
push
sub
xor
pop
jae
fstpl
mov
mov
dec
lea
std
mov
ljmp
daa
mov
xor
leave
xor
mov
mov
clc
and
dec
pushf
stos
cmp
mov
les
lret
lahf
sti
adc
xchg
fldt
mov
stos
inc
popf
nop
push
dec
shll
pop
push
jmp
mov
and
jno
lods
mov
fistps
jge
jp
dec
leave
jp
adc
cmpsl
add
mov
pushf
mov
cwtl
aas
sub
nop
xor
clc
std
sbb
orl
pop
decl
int3
loopne
into
pop
mov
dec
int
iret
in
sub
and
ja
mov
cmp
xor
mov
ljmp
push
mov
and
test
ret
cmp
lods
repz
aam
divb
jae
dec
fwait
pop
xor
and
sub
sub
cs
test
xor
lds
addb
out
mov
das
and
pushf
sub
sbb
sti
fdivl
push
insl
pop
jno,pn
addr16
xor
xchg
fdivrs
addr16
add
notl
aaa
popf
popl
iret
cli
bound
mov
gs
jbe
inc
inc
insb
out
or
dec
outsl
adc
scas
out
repz
out
jae
adc
mov
jns
xchg
daa
call
mov
ljmp
sbb
jne
andb
inc
pop
xor
repnz
call
int
push
int3
cmpsb
push
xchg
mov
ret
std
rcrl
sub
rcrb
and
aam
cmp
xchg
cmp
sbb
ret
mov
fdivs
dec
sbb
jnp
xchg
cmc
lcall
mov
xchg
scas
mov
mov
sbb
fst
xchg
dec
cmp
inc
inc
pushf
inc
scas
xchg
outsb
pop
aad
or
ds
add
rcr
pop
or
and
hlt
pushf
fs
stc
insb
push
test
rcr
scas
cwtl
cmp
pop
and
mov
sbb
pop
xor
aaa
mov
mov
ficoms
test
in
js
inc
cmp
push
fnstsw
mov
shll
stc
or
add
out
pop
adc
mov
push
mov
jge
jno
sbb
subl
mov
sbb
dec
push
dec
pop
lret
jns
das
outsl
into
push
lods
jg
cwtl
int
adc
xchg
mov
xchg
fidivs
outsl
dec
movsb
mov
sbb
push
sbb
out
pop
add
sahf
setnp
inc
mov
adc
out
jmp
jp
fmull
imul
shlb
adc
fldt
je
mov
data16
in
push
mov
adc
mov
mov
insb
mov
or
xchg
popa
mov
dec
inc
cmp
mov
dec
in
or
inc
dec
cld
xlat
insl
push
fwait
inc
push
test
testb
sbb
inc
mov
sbb
mov
in
mov
dec
lds
icebp
jmp
mov
mov
shrb
adc
lds
xchg
mov
xor
imul
ficoml
add
clc
lods
insb
mov
in
mov
adc
inc
testb
mov
adc
sub
adc
xchg
ss
xchg
or
mov
lods
pusha
add
mov
mov
dec
mov
jno
xchg
out
aad
mov
push
adc
rcl
mov
test
mov
add
dec
fimull
arpl
push
pop
xchg
lock
stos
cmp
add
jmp
mov
dec
mov
sti
outsl
pop
dec
scas
jp
cmc
repnz
enter
sub
aad
shlb
add
jbe
sbb
push
xor
dec
mov
popa
jb
push
ret
jb
mov
mov
cltd
popf
adc
pusha
adcl
or
iret
pop
test
push
mov
int
ljmp
jecxz
jmp
sub
int
dec
sub
xchg
push
or
adc
sbb
mov
loop
or
or
mov
test
test
sbb
pop
ret
fnstenv
lahf
xchg
mov
cmc
popf
fwait
sbb
xchg
loope
stc
int3
mov
rorb
js
xlat
add
enter
fldl
fwait
lea
jecxz
push
repz
sbb
cmp
jno
mov
mov
icebp
aaa
stos
mov
loop
outsb
jns
push
rcl
pop
or
pop
out
xor
lret
rsqrtps
bound
xlat
fbstp
test
sahf
lret
cwtl
and
cmp
inc
cmp
xor
mov
outsb
sub
mov
push
and
mov
lds
mov
ss
dec
dec
or
lcall
jecxz
jb
pop
dec
or
fdivr
repnz
push
add
mov
into
pop
xchg
mov
addr16
push
popf
pop
xor
jge
cmp
lahf
or
mov
shrl
jbe
dec
nop
imul
jae
mov
test
movsl
mov
rorl
in
push
inc
call
or
bnd
lea
imul
sbb
mov
stos
scas
mov
push
sub
cltd
aas
xchg
in
pop
int
movsb
xorb
pop
fidivrl
testb
sbb
cmpsl
or
daa
xchg
inc
lods
mov
xchg
inc
mov
in
inc
and
pop
mov
add
and
sbb
add
lods
sub
sbb
mov
fs
push
xlat
out
lods
icebp
fwait
ret
sbb
jl
and
das
je
out
lds
es
int3
out
ds
sbb
enter
js
mov
inc
scas
jmp
fists
mov
aaa
push
imul
fcmovnu
loop
cmp
add
call
lahf
in
call
std
popa
mov
stos
sub
pop
jl
dec
ret
add
adc
out
adc
sub
add
xchg
pusha
sti
xor
cmp
and
jp
fisubl
aas
or
movsb
adc
or
sti
cs
test
int3
sbb
ret
arpl
jne
fistps
xor
pop
je
push
push
dec
dec
pop
pop
fnsave
and
sahf
xorl
push
fstps
scas
test
ss
sub
add
test
xchg
lods
movsb
and
aas
lock
mov
cmp
mov
or
or
mov
test
jg
inc
xorb
stc
sub
push
das
mov
mov
test
jecxz
mov
cmpsb
sbb
ljmp
fsubs
clc
sbb
popf
rorl
shrl
pop
pop
daa
in
inc
ja
dec
loopne
out
shll
push
popf
xchg
add
insl
ljmp
push
ljmp
stc
sub
xor
adc
pusha
pop
rep
push
mov
mov
popf
mov
inc
inc
pop
out
shrl
cmpsb
jge
scas
cmp
mov
xchg
jecxz
loop
mull
cld
aaa
lods
push
nop
cld
sbb
notl
shlb
inc
cmpsb
lcall
push
mov
std
dec
out
add
cmpsb
inc
xor
fbld
movzwl
jb
inc
inc
ja
out
mov
sub
sub
sbb
in
mov
flds
dec
icebp
and
out
lods
fnstsw
jmp
xor
sbb
xchg
test
psrlw
inc
adc
aad
jle
mov
dec
pop
pop
or
or
dec
jns
or
mov
xchg
jns
push
jle
push
loop
push
inc
sbb
daa
adc
sarl
nop
push
mov
or
loopne
lret
push
or
shll
out
pusha
sub
lds
push
cmpsl
movl
faddl
mov
jl
es
xchg
or
cmp
pop
xor
ljmp
cmp
ret
addr16
or
xlat
sub
nop
fisttpll
leave
mov
in
mov
rorb
das
insb
das
dec
int
les
leave
dec
xchg
mov
testb
adc
xor
addr16
push
push
flds
mov
adc
pop
pop
hlt
stos
add
test
push
and
and
jae
clc
sub
sub
hlt
dec
lahf
stc
bound
std
rcrl
sub
bnd
pop
push
jns
xor
jns
lret
mov
mov
fists
sarl
push
push
mov
les
dec
ja
pop
dec
push
lret
sub
outsl
dec
lret
test
rcr
or
adc
xor
dec
inc
cmpsl
jbe
std
push
or
shlb
pop
sets
loope
repnz
fisubl
lods
lahf
pusha
pop
fcompl
adc
mov
xor
cmpl
pop
loopne
lods
xchg
pop
pusha
mov
mov
movsl
add
cmpsl
adc
xchg
hlt
mov
push
mov
jno
jcxz
jl
into
ljmp
add
sub
push
jle
push
mov
popf
loope
jle
stos
rcll
aaa
jne
inc
hlt
inc
xchg
jp
mov
xor
stc
test
jnp
outsb
pushf
loopne
mov
push
xor
sbb
mov
pop
or
mov
and
jns
pop
fcoml
in
sbb
in
or
and
nop
xchg
jecxz
imul
push
inc
mov
loopne
xchg
mov
in
xchg
js
mov
or
and
xchg
dec
into
loopne
lahf
jg
mov
call
push
push
inc
cs
and
pop
and
add
imul
out
jbe
xor
cs
jecxz
and
or
lahf
mov
lock
mov
add
pop
xchg
fs
adc
jmp
jp
push
shrl
repz
sub
adc
sub
xchg
sbb
jbe
mov
out
jo
mov
sub
mov
add
mov
pop
cmpsl
fidivrs
mov
jl
rorl
lock
push
popa
cltd
call
jl
popa
or
cmp
jg
lret
int3
loope
inc
or
xor
sub
repz
stc
les
push
and
enter
add
outsb
or
adcb
test
sbb
jmp
mov
jmp
cmp
call
outsb
mov
push
cmc
pop
add
and
mov
test
inc
popf
cmp
xchg
out
mov
fs
mov
mov
and
dec
addr16
sbb
add
orl
outsl
ss
xor
push
push
xlat
mov
xor
arpl
mov
mov
jo
cltd
ja
mov
lea
cmp
xchg
jmp
pop
sbb
inc
fcomps
in
lcall
sub
std
ja
subb
sub
push
jbe
stos
js
scas
and
int3
stos
bound
sti
stos
mov
push
cmp
fldenv
xchg
stc
ja
push
nop
fisttpll
pop
arpl
mov
xor
inc
iret
in
insl
sbb
or
sub
inc
aaa
daa
sti
inc
jmp
xor
jo
rolb
jle
leave
inc
dec
mov
add
addb
xchg
mov
cmp
sbb
fcoml
or
cmp
add
fdivrs
rcrl
ja
or
cmpsb
lock
subb
or
push
imul
sahf
sti
and
test
test
repnz
shr
out
mov
icebp
push
insl
rorl
cwtl
nop
scas
add
popf
push
lds
and
push
push
fstp
xor
inc
in
cli
andb
or
push
mov
repnz
jge
arpl
daa
cmc
lret
xchg
dec
or
test
mov
dec
jno
dec
nop
int
loop
mov
or
loope
sbb
sbb
mov
ds
aam
dec
in
jl
ret
gs
sbb
xchg
insl
dec
cmc
je
out
in
jbe
dec
sbb
fisubl
mov
dec
adc
mov
jns
sub
mov
fxch
mov
jp
xchg
push
dec
xor
adc
scas
lahf
sbb
sub
imul
stos
jo
setbe
jecxz
or
xchg
xor
and
aaa
aam
test
dec
mov
push
daa
cld
orl
xor
push
adc
outsb
cmp
out
inc
xor
cmp
xor
je
mov
cmpsb
cmpsl
push
mov
pop
sbb
adc
lahf
push
repnz
pushw
lcall
insb
mov
in
lods
sbb
and
xor
sahf
or
cwtl
fwait
das
jmp
mov
mov
adc
repnz
mov
xor
cmp
xchg
mov
fsts
jbe
dec
ljmp
sahf
lock
push
fldenv
adc
aad
shlb
aad
mov
dec
outsb
and
cmpsb
icebp
mov
dec
sbb
aad
sbb
out
push
and
out
dec
test
xlat
cltd
scas
mov
mov
into
sbb
idiv
pop
in
push
sub
lods
arpl
mov
inc
ljmp
loopne
inc
sbb
xchg
in
xor
sahf
push
mov
lea
fcmovbe
add
lea
and
pushf
in
sarb
clc
mov
mov
xor
je
mov
mov
pop
sarb
inc
dec
xchg
or
pop
aaa
or
inc
cs
xchg
xchg
push
in
es
ficoms
pop
fwait
inc
inc
jb
popl
push
lods
and
enter
mov
adc
xchg
pop
mov
inc
dec
and
pop
test
idivb
in
push
int3
fwait
mov
mov
lret
mov
xor
fcmovbe
push
test
outsb
ja
jmp
add
cmp
xor
fnstsw
jbe
pop
lcall
xor
xor
mov
or
add
xlat
push
push
dec
xchg
das
dec
jle
sub
cwtl
aam
inc
sahf
in
stc
call
insl
jg
or
or
loopne
in
movl
jo
sbb
test
call
aad
std
icebp
ds
or
scas
cli
lea
and
movsl
enter
loop
jns
movsb
mov
add
mov
jg
push
sub
stc
test
lea
dec
shll
add
push
cmc
mov
aaa
mov
pop
sbb
mov
bound
mov
adc
aaa
cmp
add
xor
cmp
test
and
add
mov
pushf
xchg
inc
shrl
iret
insb
cmp
pop
clc
bound
mov
iret
push
ret
push
sbb
cmp
or
pop
pop
out
aaa
mov
inc
push
jge
mov
sbb
sbb
or
loope
sar
push
hlt
incl
mov
sbb
mov
push
jne
out
fstl
lret
pop
adc
mov
sub
jnp
push
mov
push
nop
xchg
adc
push
es
insl
imul
or
addl
stos
mov
push
sbb
movsb
push
xor
notb
ret
test
pop
push
ljmp
push
das
les
jl
popf
dec
sub
dec
sbb
xchg
clc
test
pop
sbb
ficoms
push
adc
lock
cmc
or
inc
cmc
push
jnp
shr
cltd
sbb
mov
sub
pop
jecxz
rcr
dec
pop
xchg
lcall
fstp
add
xchg
cmp
je
sbb
sub
pop
cltd
push
jns
adc
xlat
push
cmp
popa
imul
sbbl
clc
mov
hlt
mov
adc
push
cs
fidivl
or
ret
mov
add
stc
lahf
jp
dec
inc
jae
out
scas
ret
adc
jmp
je
xlat
mov
xchg
jl
cmp
lea
lods
fcompl
dec
rcl
cmc
mov
cmpsb
adc
cmp
shrb
stc
rolb
mov
gs
les
test
rol
push
jne
cmpsl
mov
arpl
mov
ja
lsl
jle
add
hlt
cs
pop
dec
bound
jle
mov
mov
add
sub
cli
test
pop
dec
icebp
jl
push
fildl
mov
dec
insb
and
jo
mov
test
add
or
punpcklwd
fcmovnu
in
jecxz
mov
pushf
ja
sbb
xor
notb
fs
cmp
pop
adc
loopne
das
sbb
inc
out
fsubrl
add
or
dec
loope
fildll
ds
insb
mov
pop
mov
gs
mov
push
adc
imul
cli
push
divl
lods
add
stos
test
adc
mov
hlt
add
loop
roll
add
inc
jp
jge
stos
cmp
or
push
adc
add
scas
lcall
push
ljmp
push
push
mov
mov
cli
jg
mov
lcall
sub
push
cwtl
outsl
addr16
jecxz
in
sahf
daa
out
adc
sarb
das
adc
outsl
pop
das
testb
loope
mov
and
jle,pn
outsl
mov
cmp
or
push
std
add
push
pop
enter
jbe
xchg
sarl
inc
xchg
adc
xchg
mov
popaw
orl
sub
insl
mov
inc
daa
cld
sarb
outsb
xchg
inc
pop
leave
sahf
pop
int
xchg
int
fsub
mov
lret
fnstcw
clc
or
adc
in
dec
std
pop
xor
je,pt
mov
jmp
in
movsw
mov
ss
mov
inc
push
lahf
push
cmp
dec
aad
imul
sub
lds
cmpsb
ljmp
or
into
int
cmp
inc
test
mov
mov
jo
push
push
jno
shrl
lret
je
mov
xor
sub
subb
push
or
stos
mov
in
into
cmp
pextrw
inc
mov
arpl
movb
adc
lcall
sti
dec
jno
mov
cmp
or
jne
cltd
mov
mov
mov
lods
pop
cltd
jg
lods
pop
outsb
test
test
dec
sahf
cmp
push
divl
lock
adc
or
jl
fstl
or
pusha
xchg
sbb
aam
in
sub
xchg
mov
mov
xor
adc
daa
shll
lea
jl
dec
filds
out
and
les
ret
and
and
call
push
inc
jno
dec
push
arpl
cmp
pop
movsb
mov
fs
mov
not
jle
mov
cld
hlt
xor
pop
jp
inc
add
cld
roll
sbb
out
mov
jle
mov
mov
out
dec
and
mov
dec
into
movsb
pusha
loopne
mov
imulb
sub
fildll
dec
loope
jle
insl
adc
inc
mov
pop
push
cli
in
testl
mov
repnz
adc
and
xchg
sahf
shll
aam
iret
push
and
xchg
push
mov
dec
push
cli
test
lahf
push
hlt
fwait
mov
xor
jnp
shll
mov
dec
in
outsl
in
movsl
add
pop
xor
inc
inc
sbb
or
cmpsb
and
sbb
aaa
xor
jne
adc
adc
mov
pop
andb
lahf
xor
and
cmp
out
mov
mov
adc
pop
rclb
and
icebp
sbb
dec
fwait
mov
cmp
adc
shlb
gs
add
add
lret
cwtl
ficompl
or
and
lds
popw
mov
divl
mov
fucom
mov
jp
mov
mov
gs
aaa
add
lods
xchg
les
xor
cmpsl
cmc
std
and
jge
aaa
sarb
push
dec
in
rclb
in
mov
dec
jbe
js
into
lret
bound
and
data16
mov
fcomip
add
lds
dec
jecxz
pop
aam
push
fucomip
test
or
mov
xchg
repz
cmc
sub
rcr
push
sub
dec
and
test
pusha
pop
and
push
fsts
adc
arpl
fsubr
jmp
mov
inc
mov
sub
movsl
leave
cltd
loopne
mov
in
jae
inc
fwait
adc
rcll
bound
sti
shlb
or
les
addr16
cmp
pushf
out
inc
scas
sti
xor
cmpsb
sbb
xchg
cltd
adc
mov
mov
jno
jl
sub
stc
mov
jmp
or
cmp
loop
xchg
xor
mov
sahf
mov
jb
cmp
fistpl
scas
inc
mov
inc
or
clc
lret
cld
mov
int
mov
xor
add
cmp
sub
mov
push
loop
xor
sbb
call
mov
adc
bound
add
imul
mov
incl
jno
xor
push
enter
lahf
add
mov
push
mov
inc
inc
clts
dec
clc
cs
dec
mov
cli
mov
fdivp
inc
pop
cwtl
nop
cmc
inc
jp
pop
stc
xchg
xor
inc
dec
add
loope
adc
and
gs
negl
push
sbb
fistps
icebp
aad
pop
repz
pop
lea
dec
lret
or
test
outsl
shl
insl
movsb
or
push
xchg
bnd
jae
adc
movsb
xor
xor
imul
fwait
sbb
iret
ja
fcompl
jo
sahf
enter
mov
repz
push
repnz
rclb
nop
jl
imul
mov
les
cltd
aad
test
out
push
fnstenv
cmp
xchg
dec
jg
es
sti
mov
sub
adc
int3
pop
jle
mov
cmpsb
pop
adc
rcrl
ficoml
xor
sbb
movsb
addr16
jnp
loop
call
xchg
inc
rol
jne
out
repz
jmp
fiadds
repz
add
adc
push
mov
clc
repz
jmp
fisttpll
push
jb
pop
lret
jl
insl
test
mov
dec
pop
dec
mov
sbb
add
dec
add
je
icebp
daa
dec
aas
inc
clc
push
in
jnp
adc
cmp
jecxz
add
cmp
mov
sub
popf
push
in
sbb
dec
insl
sub
pop
pusha
sub
and
sbb
stc
xorb
xor
cli
mov
rcll
xchg
jae
mov
adc
fs
push
inc
clc
test
aas
xor
bound
ret
inc
ret
in
int
inc
xor
cmp
jne
leave
adc
jecxz
xchg
dec
dec
das
stos
cmpl
xchg
mov
inc
mov
fsubrs
mov
inc
pusha
pop
repnz
sysenter
sub
sbb
xor
mov
and
cmp
dec
and
add
andb
jle
cmp
sbb
lds
int3
cltd
mov
scas
inc
inc
sahf
pop
dec
movl
out
mov
fldl
lods
ficomps
jl
rorb
js
sbb
sbb
mov
jl
pop
fs
pusha
adc
sarl
and
mov
decb
sbb
push
icebp
daa
imul
push
mov
shlb
add
mov
test
lcall
pop
pop
and
cmp
xorl
sarb
scas
cmpsb
and
mov
mov
scas
mov
or
inc
cltd
xchg
mov
stos
mov
test
cwtl
in
insb
shl
pusha
gs
lds
cmc
mov
cld
mov
call
push
fadd
adc
xchg
xchg
or
movsl
rcrl
inc
and
xchg
or
jnp
mov
xor
out
mov
cs
jns
xchg
mov
movsl
faddl
call
insb
jp
jb,pt
or
imulb
aaa
xchg
aam
xor
inc
out
lea
test
cs
pop
rcl
and
push
outsb
cld
adc
push
jp
pop
imul
inc
mov
pusha
mov
ffree
xchg
mull
and
mov
xor
in
inc
cmp
jne
jbe
test
incl
mov
adc
or
shlb
iret
or
lock
add
cmp
dec
movsl
dec
dec
insb
cmc
xlat
pop
mov
fxch
sub
dec
ljmp
jecxz
stos
dec
add
negb
xlat
sbb
sbb
cwtl
pop
imul
call
inc
mov
inc
fnstenv
scas
sbb
mov
and
shll
dec
frstor
scas
daa
nop
add
pop
dec
jp
andb
ret
imul
cmpb
jns
inc
cmp
cmpsl
jg
cmpsb
stc
fs
fs
andl
jl
mov
enter
add
bound
icebp
or
ret
xchg
lahf
sub
ret
jecxz
daa
imul
in
xchg
jecxz
mov
xor
outsl
xchg
add
push
daa
in
sbb
scas
and
and
rcll
inc
jo
xchg
sub
ja
out
mov
outsb
jecxz
pushf
sub
inc
insb
inc
ficoml
xchg
pop
loope
mov
mov
dec
gs
push
je
lea
repz
addb
push
lret
mov
insb
jg
xor
mov
pop
mov
mov
das
gs
jbe
repz
in
out
fs
cmpsl
inc
xorl
cmp
add
sti
es
xor
je
mov
add
imul
cmp
fsts
lock
jbe
mov
repz
int3
aas
mov
in
pop
in
ficompl
out
arpl
or
and
pop
int
mov
mov
jecxz
push
mov
rol
adc
ret
push
clc
cmp
call
out
popa
mov
adc
mov
jbe
xchg
shlb
jecxz
pop
push
mov
outsl
mov
inc
stos
add
xor
sahf
dec
scas
daa
pop
and
call
repz
scas
shll
dec
int3
mov
xchg
push
loop
mov
or
lds
fcmovnu
pop
mov
lret
cltd
and
or
test
xchg
pop
sbb
stos
test
pop
scas
popa
in
mov
mov
xchg
and
mov
pop
add
push
out
dec
mov
and
lock
mov
repz
out
sti
inc
call
xor
fstps
nop
mov
inc
daa
or
push
in
inc
iret
stc
fists
mov
xor
lcall
push
jl
cmp
sti
push
adc
inc
mov
xor
xchg
arpl
shlb
jl
pop
hlt
push
sti
mov
js
xchg
addr16
or
test
xchg
cmp
loop
mov
sub
icebp
pop
ficoml
dec
das
sbb
insb
stc
arpl
fnsave
test
inc
mov
xchg
mov
imul
icebp
add
addr16
imul
adc
and
and
dec
ja
mov
jge
jl
push
sti
fcoms
scas
jl
and
mov
sub
loopne
enter
fmulp
sbb
fidivrs
cli
lcall
push
push
or
inc
jmp
std
jmp
jno
adc
test
jecxz
mov
fidivrs
cmp
rcrl
lahf
dec
out
lea
jp
xor
lds
fiadds
jge
daa
imul
addr16
adc
leave
mov
cmp
push
inc
or
jno
and
loop
xor
add
rcrl
scas
adc
fildll
jmp
lock
repnz
loope
ret
in
shll
pop
inc
cmc
push
xchg
pop
mov
ret
loopne
or
jnp
mov
xor
jne
sbb
push
cmp
inc
aaa
xchg
push
cli
jle
mov
inc
xchg
pop
pop
push
pushf
stos
xchg
popl
inc
leave
sahf
mov
scas
stos
mov
test
aad
std
lret
repnz
mov
data16
frstor
pop
out
imul
fistps
push
repnz
decl
push
inc
mov
cmpsl
lods
inc
ret
cmpsl
aam
clc
dec
jecxz
popf
test
dec
xor
nop
lea
and
jmp
dec
movsb
das
cmp
mov
or
test
pop
or
sub
insl
sub
fsub
inc
ret
scas
jg
jne
iret
pusha
lcall
aas
xor
or
rclb
je
push
jbe
dec
xchg
dec
out
inc
xchg
je
mov
mov
fcomi
jb
xchg
and
scas
adc
mov
push
fildll
xlat
push
cmp
iret
xor
fsubr
aas
stos
out
push
repnz
mov
js
adc
add
movsl
and
jp
into
xchg
mov
jle
loopne
inc
and
in
and
lahf
sub
or
add
shlb
mov
insl
dec
dec
or
andb
jecxz
mov
pop
dec
or
pop
pushf
pop
out
dec
ficompl
les
add
inc
aad
mov
aas
sti
and
inc
inc
fsubr
xor
aam
clc
push
mov
popa
sub
hlt
dec
mov
stos
sub
or
jbe
mov
lock
in
nopl
subb
jbe
mov
xor
inc
push
xchg
call
test
mov
test
lods
cmp
or
stos
add
iretw
inc
into
jecxz
dec
movsl
in
dec
fs
cmp
add
jle
sbb
xlat
mov
cmpb
cmp
movsb
mov
and
or
mov
cmpsb
out
cli
and
jmp
js
push
jg
loope
inc
fisubl
ret
imul
mov
mov
cltd
sbb
push
dec
lret
es
pop
loope
in
pushf
and
cld
push
adc
aas
ss
cmp
addb
cmp
scas
or
jp
adc
xor
and
cmp
mov
aam
clc
sub
addl
leave
movsb
sbb
adc
or
enter
int
add
lahf
mov
mov
out
icebp
pop
sbb
call
sahf
lea
imul
mov
dec
mov
icebp
xor
push
repnz
movl
jmp
sub
stos
mov
xor
dec
dec
inc
xor
in
xor
nop
pop
ja
shlb
cli
push
push
loopne
loope
push
shrb
jnp
insb
mov
sub
movsb
jns
adcl
xchg
or
loopne
outsl
gs
out
fiaddl
ja
lea
add
add
out
jo
test
call
imul
loop
dec
mov
out
in
out
inc
cwtl
stc
ficomps
sub
jae
jge
add
fnstenv
es
arpl
mov
fisubs
sub
aaa
push
in
sarl
mov
xchg
jge
dec
repnz
notb
and
push
xchg
clc
sti
bound
pop
add
ss
xor
jo
fidivrs
arpl
clc
and
cmp
mov
add
adcb
xor
push
into
sub
sbb
pop
pop
iret
push
cmp
add
sbb
jecxz
pop
ret
stos
dec
out
xchg
inc
or
scas
mov
and
push
adcb
pop
sub
xchg
fdivrs
pop
shlb
inc
in
loop
pop
jno
sbb
push
int
xchg
mov
or
pop
out
adc
scas
mull
shl
lret
push
inc
adc
test
mov
movsl
pop
dec
mov
adc
xchg
nop
lods
adc
adc
lods
imul
sub
je
es
jnp
mov
adc
dec
mov
inc
in
popf
mov
xlat
sbb
or
sbb
jb
mov
cmpsb
je
push
mov
mov
adc
js
xchg
in
fsubl
xchg
aad
mov
and
mov
jb
mov
repz
fcomps
cs
adc
sbb
sub
mov
mov
inc
push
scas
or
roll
xchg
mov
popa
push
mov
push
pushf
lahf
lahf
out
push
aas
and
cmp
lock
js,pn
mov
pop
mov
mov
iret
jns
orl
mov
jb
cwtl
in
xlat
mov
and
or
jno
ret
mov
cmp
adc
out
and
cmc
add
inc
cmp
mov
loopne
sbb
rclb
call
loopne
jecxz
js
imul
in
pushf
xchg
push
ljmp
jae
push
pop
adc
test
mov
addr16
mov
xchg
leave
xchg
negb
xchg
testl
dec
mov
insb
or
cmpsl
push
mov
or
fdivr
mov
inc
shrb
dec
pop
insl
les
out
ds
jl
ljmp
fldpi
and
cwtl
pop
invd
scas
test
xlat
test
les
imul
sub
cld
arpl
leave
in
sti
mov
cltd
mov
mov
ror
push
daa
mov
sbb
pop
call
xor
ljmp
sbb
add
ljmp
push
jb
imul
jl
ds
mov
mov
popa
movsb
movsl
cwtl
lock
xor
jae
cld
rol
xor
dec
dec
dec
sbb
in
or
adc
mov
pop
push
in
sbb
nop
popf
adc
icebp
push
mulb
pop
push
in
and
sbb
dec
xor
sahf
ret
xor
xlat
jge
lahf
pop
mov
sub
notb
push
cs
dec
daa
leave
sub
pop
int
mov
jno
in
push
inc
fdivl
int
js
arpl
addr16
cwtl
fadd
pop
fmull
inc
mov
rcl
jno
clc
xor
xor
push
push
cltd
mov
fs
gs
fdivr
sub
lea
int3
sbb
mov
dec
mov
imul
js
push
mov
push
push
inc
shll
push
pop
xchg
stos
int
jb
push
mov
inc
pusha
push
adc
arpl
rorl
add
insl
imul
pop
andl
daa
les
jnp
xchg
insb
shl
mov
hlt
js
in
addr16
xchg
jns
mov
xchg
enter
cmpsb
xchg
sub
dec
or
jne
call
xchg
cwtl
inc
mov
xchg
int
lods
xchg
adc
mov
cmp
inc
cmc
cmpsl
es
jl
sub
inc
xlat
fistpll
push
lea
fwait
adc
je
push
adc
ljmp
loop
out
jns
sbb
push
mov
xchg
dec
cmpsl
dec
scas
fwait
aad
sahf
push
js
push
mov
fwait
and
lods
daa
lcall
and
pop
or
xchg
and
fsubrs
pop
imull
sbb
push
mov
cmpsl
shr
les
jecxz
push
iret
pop
pop
movsl
idivl
call
daa
les
ret
xchg
adc
mov
cmpb
dec
adc
rcrb
test
out
xchg
or
mov
push
ljmp
pop
xor
mov
daa
bound
jmp
push
int3
and
mov
test
jg
les
inc
aad
push
adc
add
mov
into
jmp
mov
mov
xchg
shrb
add
or
push
xorb
xor
push
sbb
push
bound
mov
jle
popa
hlt
and
rcrb
dec
mov
xor
or
ja
aas
movsl
popa
divl
bound
cltd
jae
xlat
jnp
add
stos
add
jb
push
jae
mov
filds
cmc
or
add
popf
push
subb
cs
cltd
jbe
or
adc
sahf
dec
ret
pop
iret
cmc
mov
xor
mov
subb
cmp
out
mov
jmp
repz
sbb
mov
pop
jmp
mov
scas
fwait
cmpsl
xor
jge
test
inc
cltd
fistpll
xor
dec
dec
adc
cli
clc
movsl
ds
cwtl
gs
gs
outsb
push
stos
sbb
imul
jmp
and
xchg
cmc
sbb
pusha
popf
jg
adcb
fists
push
sbb
cltd
scas
pop
mov
ds
insb
sub
dec
test
mov
sbb
inc
sahf
ss
fistpll
scas
imul
je
add
adc
aam
and
les
xor
push
pop
clc
outsl
sbb
mov
lret
movsb
rcr
mov
cmp
pop
mov
test
shlb
pop
mov
fidivl
add
xchg
xchg
dec
dec
cmp
dec
aad
insl
lea
dec
push
xchg
cmp
lock
out
in
test
mov
inc
in
adc
pop
sub
lea
arpl
pop
or
mov
mov
sub
xor
hlt
es
pop
mov
jge
iret
aaa
inc
xchg
add
inc
cmp
sub
add
dec
push
out
call
xchg
and
mov
mov
int
int3
pop
dec
test
jae
and
stc
xor
xor
cmpsl
and
push
xlat
test
arpl
mov
fcoml
in
sbb
xor
pushf
jge
lods
xlat
xchg
clc
adcb
dec
cltd
loop
cwtl
aad
repz
adc
fbstp
test
cmpb
test
jbe
xor
mov
test
inc
mov
inc
mov
mov
mov
pop
dec
pop
sbb
mov
mov
mov
test
sbb
dec
imul
and
repnz
jp
lahf
or
stc
lea
gs
aam
fsubr
push
add
loop
aas
ficoms
stos
loop
mov
xor
bound
out
mov
pop
pop
pushf
into
and
adc
pop
and
out
test
popa
bound
pop
cmp
mov
mov
lds
add
jne
cmc
aaa
jmp
cmp
rolb
inc
das
shrb
push
fndisi(8087
mov
push
ljmp
bound
xchg
rcl
in
fiaddl
jno
xor
loopne
in
mov
mov
xchg
sub
xor
xor
xchg
jno
add
mov
ljmp
mov
in
imul
inc
and
mov
test
cwtl
pop
in
and
mov
lods
jne
insl
jl
xchg
shll
push
mov
and
or
adc
push
pop
pop
push
ret
shlb
xlat
pop
pop
sbb
add
mov
mov
lcall
xor
and
xor
mov
dec
push
lahf
ljmp
sub
push
jg
scas
mov
xor
pop
or
cmp
in
mov
dec
or
in
and
adc
jae
lock
in
cmp
lret
mov
sub
dec
adc
in
inc
add
pop
sbb
test
inc
jnp
js
mov
movsb
test
shll
lods
repnz
pop
in
sarl
mov
jb
in
jb
fists
fsubl
pop
lret
ja
outsl
rcrl
or
fildll
jb
xor
aam
leave
xor
loop
dec
ljmp
in
jmp
push
mov
jo
push
add
addb
shrb
mov
lret
and
inc
lcall
xlat
mov
aaa
repz
xchg
mov
sub
jl
jne
lock
jp
mov
jl
fcoms
push
dec
fistpll
out
adcl
enter
pop
iret
and
mov
mov
and
inc
push
dec
xor
int3
les
mov
test
sbb
push
add
xchg
jl
std
es
dec
mov
cmpsb
in
loope
fists
xchg
adc
ret
fisubs
and
inc
popa
out
push
jne
jmp
add
in
pop
push
and
xor
adcl
daa
cld
cmp
std
rcll
sbb
fsub
add
int
in
adc
ret
icebp
or
iret
movsb
add
mov
pusha
xchg
inc
pusha
nop
and
pop
inc
data16
dec
cmpsl
leave
or
in
add
mov
sub
mov
scas
push
pop
sub
adc
mov
or
dec
pop
xor
in
and
std
les
jp
adc
repnz
test
cmpsb
sbb
mov
andb
test
mov
mov
sub
cmpsb
inc
cltd
adc
mov
sbbb
insl
pop
sbb
lock
popa
push
xor
in
daa
pop
dec
or
popf
push
repz
ret
leave
add
sahf
ss
cltd
cmp
stc
and
jbe
push
jns
adc
adc
mov
dec
sub
movsl
es
fwait
pop
fwait
mov
pop
mov
mov
mov
xor
xor
arpl
pop
sahf
xchg
xor
mov
xchg
sub
nop
popf
dec
jb
mov
ss
ret
push
cmp
mov
jno
adc
pop
mov
adc
loop
cmp
jne
pop
rcrl
es
push
leave
cmp
mov
lret
xchg
xchg
jo
fildl
sub
jl
push
push
int
mov
or
mull
xchg
ds
das
int3
mov
xor
test
xor
bound
jmp
inc
pop
shrb
filds
int
jecxz
add
ljmp
test
xchg
fnstenv
mov
or
in
stos
cwtl
dec
fbstp
lods
xor
cld
lahf
lret
cmc
push
hlt
mov
xor
addr16
cmpb
sub
aam
testb
outsb
xor
in
mov
movl
js
mov
stos
jb
inc
mov
push
stc
mov
and
into
cmp
loop
lock
cmpsl
mov
push
add
sub
xchg
xchg
push
push
cmp
sub
scas
inc
add
pop
dec
insb
aad
loope
or
loopne
and
shlb
mov
dec
mov
aam
pop
ret
in
aad
insl
jge
fsubrs
mov
mov
mov
dec
out
leave
and
jmp
insb
negb
ret
xor
add
xchg
aaa
fisubrl
adc
xchg
and
dec
out
jns
clc
or
idiv
jo
inc
lahf
pop
shlb
fisubrl
fsub
xor
adc
addr16
push
rclb
push
jns
or
popa
add
push
ja
imul
out
in
lcall
or
cmp
push
cmp
adc
xor
scas
pop
pop
jecxz
cs
lods
fimuls
in
dec
sbb
fimull
scas
xorb
cmp
push
gs
dec
push
or
fistpl
cwtl
push
lea
fmul
fisttpl
int3
mov
mov
cwtl
inc
push
scas
mov
jnp
pop
add
repz
gs
ljmp
lahf
mov
push
lds
pusha
mov
xor
outsb
inc
jns
inc
sbb
sbb
push
mov
loop
xor
sub
push
add
sub
cs
sti
imul
sbb
sub
faddl
out
add
sbb
jp
fdivs
push
aad
sarl
and
fadds
icebp
lcall
inc
add
or
inc
xchg
xchg
scas
xor
scas
loop
jae
fidivs
xchg
repnz
ja
pop
cwtl
enter
fisubs
dec
in
xchg
mul
jp
shrb
xor
stos
xor
mov
and
mov
ret
pop
xor
lret
cmp
add
icebp
add
lds
sbb
sbb
fsubr
push
out
inc
test
rorl
pop
cmpsb
cmp
jecxz
sbb
lods
into
or
dec
loopne
mov
xchg
push
loope
insl
pop
pop
xor
or
dec
cltd
call
xor
call
aad
imul
aad
inc
leave
cmc
add
inc
mov
test
and
test
sub
and
inc
jnp
nop
push
xchg
add
dec
cmpsb
cmc
push
sti
loopne
mov
aad
stc
push
loope
outsb
jmp
in
sub
cmpsl
mov
jg
sbb
ja
test
cs
mov
mov
mul
cld
cli
decb
loop
ss
xchg
or
imul
into
insl
mov
inc
nop
xor
inc
pop
push
ss
shll
xchg
pop
mov
xchg
pop
sbb
adc
outsb
cmpsl
daa
add
fiadds
sub
je
rol
fisubrl
push
push
jns
popf
jp
cmp
xchg
pop
inc
push
cmp
lock
popa
in
xlat
sub
inc
mov
out
inc
ret
cmpsb
jg
jmp
loope
shlb
lods
stos
xor
and
inc
mov
mov
repnz
xchg
pop
jne
xchg
xor
les
cmpb
push
add
pop
aaa
popl
or
xor
daa
lret
data16
xor
insb
inc
clc
mov
mov
sub
std
push
insb
inc
repz
shrl
stos
jnp
int
bound
in
lret
fsub
push
sub
js
sti
xchg
outsb
in
xor
cmp
mov
sti
or
repnz
xchg
fstpt
stos
imull
inc
mov
in
in
cmovge
jb
xlat
xor
xor
ja
push
fldcw
pop
int
mov
ds
cmp
fwait
jmp
sub
xor
call
push
nop
outsl
add
add
mov
mov
push
mov
gs
insb
lds
mov
mov
loop
gs
lods
dec
push
add
mov
rorl
mov
dec
dec
mov
adc
pop
sbb
pop
cmp
lods
xor
test
loope
adc
pop
xlat
out
sbb
dec
jecxz
lret
push
fcmovu
adc
sub
mov
outsb
xor
sahf
jo
test
test
mov
xchg
fucomp
cwtl
sub
sbb
scas
pop
test
in
adc
cmpsb
stc
or
cmc
pop
mov
out
ljmp
cmovl
mov
hlt
cli
stos
xchg
addl
ficoml
sbb
sub
jb
bound
mov
loopne
mulb
mov
cs
ror
mov
addr16
inc
xchg
mov
jbe
inc
daa
popa
out
adcb
lcall
insl
test
sbb
pop
jl
adc
andl
and
lods
xchg
ds
ss
sbb
leave
movsl
fildl
lahf
jmp
pop
movsl
lea
sbb
mov
cmpsl
das
jmp
loop
cmpsb
popf
and
mov
cmp
je
sub
adc
or
push
and
mov
outsl
inc
mov
nop
mov
lret
hlt
fdiv
roll
dec
xor
push
mov
sub
and
idivb
mov
rcrl
push
cwtl
out
fdivl
rcl
pusha
std
dec
mov
jmp
repz
enter
mov
sbb
in
popa
push
rolb
and
and
rorl
sbb
jecxz
mov
cmp
mov
cmp
xor
pop
jne
aaa
std
xlat
out
fsts
xor
pop
repz
and
movsl
int3
cld
mov
les
inc
enter
jns
xchg
mull
sub
cmp
dec
pusha
aam
xor
mov
int3
xor
pop
cmp
sub
lods
jl
repz
jmp
lcall
or
sub
inc
cwtl
out
mov
sbb
push
adc
sbb
dec
jae
lcall
sbb
push
mov
addr16
cmpsl
cmp
jae
rcll
or
jns
add
or
pusha
je
cmp
inc
pop
fstl
and
sbb
test
jno
test
aam
out
imul
adc
fcmovbe
push
add
ret
or
cmpsb
sbb
adc
outsl
adc
mov
push
jb
fs
iret
jp
fwait
ljmp
jle
call
lds
push
ss
mov
outsb
cs
push
les
push
fildll
cld
mov
xor
daa
je
loopne
inc
out
mov
pop
in
and
outsb
icebp
lods
xor
mov
or
cmpsl
lock
das
pop
lods
inc
dec
add
lea
inc
inc
inc
mov
enter
divb
add
orl
repnz
gs
cmpsl
aad
sbb
int
cmpsl
clc
inc
test
int
icebp
mov
ss
mov
mov
movsb
pusha
xchg
xchg
jno
fisubs
push
or
xor
pop
xorb
je
dec
and
or
shll
xchg
jge
dec
or
rcrl
orl
xchg
inc
mov
std
mov
into
cmp
mov
loopne
sbb
test
mov
lret
add
jmp
xchg
leave
add
inc
adc
jge
hlt
jne
mov
pop
stc
mov
lahf
sub
fdiv
or
rolb
aam
push
lds
arpl
pop
xor
jbe
mov
ja
xchg
fidivrs
fcoms
adc
arpl
lods
frstor
mov
jl
loop
fnsetpm(287
xchg
push
sub
cmpsl
lcall
push
mov
pop
or
pushf
jl
imul
push
ss
loope
pushf
cwtl
mov
je
stos
ja
or
and
inc
testl
pop
ret
ljmp
cmp
jl
repz
movsl
call
cmp
data16
xchg
xor
call
cld
sub
lock
mov
stos
addr16
std
mov
leave
push
cwtl
sbb
es
jp
movsl
sbb
jecxz
idivl
push
jecxz
inc
add
pusha
psllq
or
inc
dec
scas
pop
lods
jnp
and
mov
ljmp
sti
scas
and
inc
js
and
out
jg
xor
movsb
pop
sub
stc
adc
xor
mov
sub
xchg
movb
pand
mov
sbb
xor
sub
xor
push
test
je
aam
and
fisubl
add
sub
fistpl
test
lock
mov
imul
cmp
adc
xor
dec
int3
dec
rcrl
sub
pop
lret
fs
pop
and
stc
mov
es
mov
cs
mov
and
mov
std
les
sub
outsb
mov
insl
adc
sbb
shrl
inc
sub
mov
cmpsb
aas
add
test
or
jmp
loopne
mov
pop
outsl
adc
mov
sarl
push
mov
sub
lea
movb
arpl
mov
mov
fdivl
pop
push
pop
cmp
cmp
jg
mov
push
add
andb
xor
jo
loopne
push
fnstsw
jmp
loope
fldenv
sub
sarb
or
out
mov
add
lret
ret
mov
mov
add
cmp
lahf
push
test
je
repnz
inc
mov
adc
xor
and
in
rorb
dec
js
movsl
jns
sub
cmp
out
shlb
push
add
sub
pop
call
lods
push
xor
mov
inc
test
dec
pop
ret
rorl
mov
push
mov
cmc
fmul
rolb
pop
out
xchg
fiaddl
insl
into
xor
xor
sahf
mov
insl
jp
data16
gs
lods
xlat
icebp
jb
dec
sub
jg
cmpsl
mov
inc
push
cmp
nop
mov
mov
testb
cmp
jl
pop
ret
mov
out
leave
mov
mov
test
test
xchg
and
cld
cmp
push
push
push
dec
or
loope
sbb
pop
jns
dec
mov
cmp
out
fistps
push
lds
leave
mov
adc
jo
sti
jl
pushf
dec
gs
cmp
mov
ret
xchg
cmp
adc
insl
pusha
jo
stc
fsubp
test
ret
adc
inc
dec
das
popa
push
push
or
pushf
push
adc
mov
shl
push
rcrl
cmp
inc
int
add
shll
pusha
mov
inc
adc
and
je
ror
add
ljmp
add
dec
cmp
sbb
mov
or
add
call
ret
sub
bound
icebp
mov
push
jae
cmpsb
cmpb
inc
scas
mov
rorl
or
ljmp
push
ss
xchg
in
filds
xlat
mov
mov
adc
enter
push
mov
iret
movsb
js
mov
push
dec
icebp
xchg
pop
push
push
mov
and
lods
pop
imul
lock
jbe
xchg
or
cmpl
xchg
jp
inc
iret
mov
mov
sahf
xchg
pop
sbb
push
cs
cmp
sbb
arpl
cmp
cltd
pop
shr
insl
imul
rol
out
xchg
mov
clc
pop
sahf
out
or
negl
hlt
push
popa
cmc
pop
dec
test
loop
int3
fsubrs
notl
inc
leave
movsb
roll
pop
mov
lock
loope
adc
stc
addb
xchg
loope
loop
push
adc
adc
nop
jnp
imul
stos
imul
daa
and
sub
xchg
cmpl
out
rclb
pop
or
into
fstps
cmc
mov
pop
test
fildll
push
adc
sbb
adc
add
xchg
in
mov
mov
push
sti
rorb
bound
popa
sub
add
pop
insl
pop
or
testl
cmp
jo
lock
push
lahf
clc
cmpsl
mov
jl
movsb
das
fldt
pop
test
std
push
sub
fisubrs
mov
aas
inc
cli
ljmp
or
inc
mov
jle
out
and
repnz
dec
scas
aaa
cmp
dec
mov
andb
stc
pushf
inc
repnz
std
mov
ja
pop
sti
dec
outsb
adc
lock
inc
jl
sti
fisttpll
and
xor
sub
inc
xchg
sub
or
push
fnstenv
jns
mov
sti
lcall
jecxz
pop
mov
jecxz
xor
or
movsb
or
scas
icebp
lods
sbb
xchg
shl
fcomps
and
lods
xchg
pop
popf
out
js
pushf
mov
jmp
inc
push
add
cmc
lcall
in
pop
in
add
pop
test
setbe
pop
fisubl
add
sub
popa
pop
hlt
mov
ret
insb
movsl
push
or
das
mov
jbe
pusha
and
std
sbb
pop
jl
jae
mov
cs
sar
int3
xor
aas
clc
jbe
leave
roll
mov
sti
in
iret
xchg
push
test
shll
xchg
jmp
test
sub
sbb
and
dec
mov
lret
sbb
mov
pushf
jne
adc
pop
mov
inc
inc
adc
pop
and
pop
add
leave
jbe
dec
xor
outsb
and
out
xor
push
subb
cmpsl
stc
and
pop
inc
jl
mov
pushf
mov
movsl
cltd
arpl
sub
dec
jbe
fcomps
mov
ret
mov
sahf
cmp
inc
jge
bound
inc
rcrl
out
push
inc
mov
xorl
jo
ret
movsb
and
mov
dec
decb
je
xchg
add
mov
sti
sbb
inc
add
pop
bound
lock
adc
jge
push
insl
mov
gs
inc
pop
or
fisubl
mov
jge
fsubrl
repz
int3
mov
cltd
xchg
inc
sbb
sbb
cltd
arpl
sbb
sub
mov
dec
mov
pop
hlt
pop
pop
push
test
inc
addb
mov
jge
into
popa
stc
mov
into
loop
in
dec
fcmove
push
dec
clc
adc
adc
sub
pop
mov
push
lods
out
stos
aas
mov
pusha
insl
xchg
xchg
adc
jnp
xchg
cmp
js
fdiv
inc
mov
mov
cmpsl
std
inc
int3
push
and
adc
std
xor
stos
xlat
xlat
cmp
test
rorl
rclb
add
addr16
repz
mov
ja
in
lcall
lahf
pop
scas
cmp
xor
dec
iret
mov
jecxz
rclb
jae
inc
ja
sbb
jle
sbb
sbb
add
mov
and
dec
imul
xchg
adc
xchg
xchg
xor
dec
mov
adc
cmp
push
push
lahf
out
push
inc
cltd
dec
ucomiss
dec
aaa
sarl
sub
mov
lahf
cwtl
mov
sub
cli
inc
mov
cmp
xor
dec
inc
mov
and
inc
cmp
js
ss
sub
inc
popf
hlt
sub
enter
adc
xor
and
dec
lret
cli
cmpsl
jmp
jle
adc
out
test
xor
jb
or
mov
outsl
leave
aam
adc
jecxz
das
cmpsl
in
jecxz
icebp
enter
and
sub
int
rorl
fs
adc
sub
pop
mov
gs
fcmovnb
xor
rcr
ss
mov
xchg
add
push
outsb
pop
insb
cmp
mov
push
sub
int
adc
xchg
xchg
lret
sbbl
lods
out
jp
xor
outsb
movsl
into
mov
mov
and
ja
jmp
js
imul
cwtl
lods
push
mov
cs
mov
int
mov
adc
xchg
sub
inc
lods
rcll
les
test
mov
sub
in
dec
cmp
out
mov
je
adc
je
mov
ss
mov
repnz
insb
out
mov
sbb
mov
and
stc
adc
pop
sub
xor
pop
insb
jl
cmpsb
iret
imul
shlb
cltd
push
xchg
add
xchg
push
jmp
or
cmp
movsb
push
push
jno
or
in
adc
push
cmpsl
test
das
std
mov
imul
xor
ja
adc
dec
test
ja
aas
bound
fstpl
test
pop
je
pushf
add
cwtl
jl
mov
adc
lods
addr16
push
pop
and
mov
cmpsl
popl
xchg
xor
incb
shrl
mov
stos
mov
mov
jnp
mov
fnstsw
gs
dec
mov
lods
movsb
repnz
adc
push
inc
aaa
lock
fisubl
leave
pop
xchg
sub
xor
mov
xor
js
jnp
pop
mov
and
popa
arpl
aam
std
mov
add
test
fildll
cli
fbstp
js
jp
adc
repz
aad
pop
dec
leave
lods
loopne
ffree
loope
loop
ljmp
xlat
cmpsl
jg
xlat
notb
or
inc
mov
mov
sub
sti
push
pop
out
shlb
out
inc
in
insl
pop
jle
mov
cwtl
mov
test
push
dec
pop
xchg
jbe
push
cs
pop
popf
mov
mov
lcall
add
dec
clc
xchg
adc
mov
ret
mov
popa
andl
dec
js
or
in
cmovno
cli
jg
mov
mov
push
mov
scas
popa
adc
ror
inc
daa
aas
ljmp
les
movsl
sbb
jo
es
xchg
add
lock
inc
add
xor
cmc
mov
sub
mov
sub
adc
rorl
stos
pop
out
jmp
add
pop
jne
out
cmp
sub
and
cmp
mov
inc
mul
fstl
cld
sbb
pop
int
stos
push
rorb
jno
andb
hlt
mov
push
xor
mov
jnp
sub
cs
popa
sbb
mov
sbb
push
jmp
push
push
dec
cs
ja
int
repz
sbb
addl
aad
jae
test
rcrl
dec
je
mov
and
dec
or
xor
xchg
fistpll
inc
xor
adc
mov
jae
dec
dec
adc
cmc
int3
addr16
sub
lds
incl
outsb
sbb
push
mov
mov
out
rcrb
sub
iret
pop
adc
lods
lods
push
imul
addr16
xor
pop
or
add
jl
push
xchg
or
and
test
repz
popa
jl
daa
jne
or
jl
xor
adc
pop
cli
jno
call
adc
pop
push
rcll
scas
or
mov
dec
jp
popf
fstps
pushf
icebp
out
fistps
sti
xchg
xlat
mov
and
push
fsubrl
pop
imul
outsb
xchg
jne
or
jbe
xchg
outsb
xchg
daa
je
xchg
bound
loopne
cltd
stos
imul
stos
xchg
adc
push
rcl
outsb
in
nop
xchg
testb
fidivs
push
sbb
jl
pop
xchg
or
leave
dec
mov
xor
mov
ja
mov
jg
jg
xchg
inc
mov
push
sarl
scas
jne
sbb
inc
mov
pop
mov
mov
nop
loopne
lock
fidivrs
dec
add
fnstsw
mov
andb
pushf
inc
lret
test
in
adcl
or
cmp
mov
rcll
xchg
mov
inc
push
insl
nop
fsts
sub
clc
pslld
popa
pop
xor
dec
sub
xchg
out
fwait
xor
cmp
push
shll
rolb
mov
aaa
xchg
mov
into
jo
push
sbb
lret
scas
jge
push
or
add
aam
jp
mov
shrl
call
cs
jl
or
aad
inc
mov
lock
pop
push
jb
push
adc
xchg
bound
shl
dec
out
adc
jmp
dec
gs
and
in
sub
push
push
aam
xor
pushf
decb
ljmp
pushf
adc
pop
sbb
jecxz
pushf
inc
inc
mov
lret
std
inc
jno
subb
cmpsl
mov
fs
push
jns
out
push
in
mov
test
movsb
sub
fsubrs
and
jo
mov
inc
jle
rcr
adc
ljmp
inc
fcomps
inc
leave
lahf
fiaddl
inc
hlt
add
shll
mov
stc
mov
xor
pusha
adc
mov
inc
roll
mov
jno
les
ficoms
jg
xchg
in
mov
scas
adc
mov
test
fwait
jmp
push
push
out
cmp
in
dec
mov
inc
jp
xchg
out
push
ret
or
loope
fadds
out
test
mov
pop
loopne
cmpsb
adc
rclb
add
add
ds
jle
adcb
in
add
mov
dec
cmp
or
cmp
js
xorb
in
nop
xlat
dec
cld
push
cld
mov
mov
xchg
leave
in
fs
mov
or
scas
cmp
cmp
jl
xor
mov
pop
mov
test
pop
cld
or
fnstcw
jns
jno
pop
ret
daa
gs
dec
inc
jmp
cli
sbb
xor
incb
cmpsl
cmp
jl
flds
mov
in
adc
mov
jle
outsl
mov
sbb
jle
mov
sub
push
adc
xchg
sub
add
jg
aad
mov
jl
ss
xchg
xchg
jb
rcl
xchg
sub
mov
sbb
leave
mov
inc
mov
loope
lods
in
mov
dec
frstor
jg
dec
mov
js
push
out
add
stc
push
push
incb
cli
and
adc
sbb
adc
cmp
stos
shll
add
push
push
push
sarl
dec
xchg
bound
mov
sub
loop
sti
repnz
stos
ss
mov
jb
add
or
fisubrl
notl
jb
daa
add
xchg
cs
scas
adc
and
cltd
sbb
pop
cmc
add
int3
mov
cmp
mov
sub
scas
xor
iret
dec
pop
mov
les
jp
add
movsl
cmpxchg
jmp
ss
outsl
sbb
enter
xchg
loop
or
dec
cmp
jmp
nop
into
adc
das
sub
test
lret
mov
cmc
sub
mov
test
adc
jae
mov
mov
pop
and
mov
xor
sbb
test
and
call
in
cli
fisttps
mov
push
iret
mov
push
inc
xchg
cmpl
jecxz
fisubs
or
test
xor
cld
fucomi
jl
in
repz
add
dec
sub
jne
scas
pusha
pop
cli
xchg
aam
cmp
ljmp
mov
push
mov
inc
dec
mov
xlat
imul
push
aaa
jl
push
lret
mov
mov
lds
and
cld
xchg
push
pop
sbb
stc
jle
lret
icebp
pop
dec
sbb
or
and
icebp
or
jmp
add
aam
cmc
into
sub
fstpt
and
iret
insb
pop
nop
push
pop
push
jnp
sbb
scas
loop
jmp
and
sete
pop
jb
cs
add
adc
cmp
add
add
xor
arpl
push
fdivs
js
loope
ret
dec
imul
mov
lret
dec
adc
mov
mov
fildll
mov
and
ss
sbb
cmpsl
out
ja
loop
xchg
mov
and
push
mov
test
ja
jae
mov
leave
es
xchg
idivl
mov
mov
mov
aad
and
sbb
lahf
mov
adc
dec
jmp
hlt
or
sub
stc
cmpsb
or
mov
mov
jne
push
mov
mov
dec
adc
adc
mov
xchg
pop
rcr
fldl
orb
inc
pop
adc
jg
lds
pop
subb
inc
inc
loopne
pop
add
bsf
push
or
stc
inc
enter
insl
iret
iret
xor
inc
jle
in
test
mov
in
iret
loope
add
add
out
xlat
inc
sub
mull
push
pop
shlb
push
js
sub
xchg
dec
pop
sbb
pop
jmp
inc
adc
test
push
test
jo
aad
mov
sub
std
loop
les
lds
imul
mov
addr16
imul
out
insb
test
rorl
adc
daa
lods
popf
jmp
rorb
mull
xchg
leave
iret
cmpb
data16
pop
jge
imul
mov
mov
adc
test
lcall
jo
outsl
imul
clc
jns
and
sti
mov
fstp
testb
shll
pop
push
dec
mov
pusha
test
mov
call
test
sbb
icebp
push
into
stos
pop
pop
mov
out
in
notb
test
in
ljmp
fdivs
jge
mov
jg
in
add
mov
testl
xlat
pop
inc
jecxz
lret
adc
add
loopne
lods
je
orb
jmp
mov
dec
in
mov
jo
dec
js
xchg
mov
outsb
aad
add
jo
xor
cld
hlt
cmovno
and
add
lea
js
bound
xor
push
in
mov
ljmp
int3
stos
sub
push
sub
je
mov
lret
das
push
dec
or
inc
mov
xadd
pop
xchg
test
jno
es
pop
inc
ds
or
inc
push
cmp
and
lea
jecxz
add
adc
out
sub
nop
inc
jo
fildll
addr16
jo
inc
pop
fldl
cmpsb
fdivp
outsb
push
pop
std
dec
pop
push
outsb
sahf
mov
std
mov
jl
xor
outsl
into
in
xchg
stos
push
lods
in
and
cwtl
aaa
xor
mov
lahf
in
cmc
fs
xor
sbb
and
mov
or
icebp
fistpll
xor
sub
sub
inc
lods
nop
insl
stos
pop
arpl
shl
in
mov
popa
jle
mov
xor
sahf
pop
fidivs
pop
fnstenv
cmp
test
mov
xor
out
pop
ficoms
lret
pop
mov
mov
jecxz
or
cmpsb
les
xor
push
rorb
pop
bound
jb
es
out
cmp
loopne
mov
movsl
cltd
xchg
xor
and
push
aaa
push
inc
out
fcmovnbe
test
jecxz,pn
loop
addl
xor
add
or
jmp
es
ds
fs
aam
inc
mov
sbbb
jnp
and
movzwl
test
or
mov
push
inc
cmc
push
repz
inc
call
fnsave
mov
out
dec
inc
sub
add
xor
pop
sbb
das
lock
in
out
jbe
pushf
mov
call
adcb
add
push
notb
dec
mov
xor
xchg
add
sbb
fbstp
cmpsl
mov
fcomps
test
and
insl
sub
in
inc
cmp
jg
scas
stos
cmovge
jmp
pop
pop
repnz
and
insb
std
mov
adc
pop
div
shl
adc
mov
fcmovnu
mov
movsb
pushf
or
rcll
xchg
push
pushf
xor
jnp
sbb
shrb
xchg
jl
jnp
push
out
movsl
push
xlat
dec
xlat
cltd
lds
xchg
adc
and
arpl
rcrl
fadd
ret
push
incb
in
push
and
hlt
xchg
xchg
fldenv
les
fdivrs
adc
loop
inc
jmp
dec
or
sub
xchg
pop
jo
jae
lods
adc
mov
mov
nop
sti
and
mov
dec
cmc
sub
cmp
pop
frstor
dec
jmp
out
jge
in
inc
dec
pop
push
jae
cmc
mov
sub
loopne
ja
mov
xor
push
xchg
dec
nop
push
test
cltd
pop
push
lods
sbb
ss
test
jle
jmp
addr16
stos
mov
cmp
cmc
in
and
add
fmull
test
inc
or
cmpsb
jp
cmp
popf
cmp
and
jno
xchg
dec
pushf
pop
adc
ljmp
cwtl
or
insl
test
sahf
in
add
inc
push
dec
lods
aaa
iret
arpl
mov
aas
dec
push
dec
jb
test
mov
adc
subl
cwtl
cld
leave
pop
or
fstpt
mov
xchg
mov
sub
rorb
and
rclb
pop
jp
mov
cmp
push
pop
insl
push
fsubr
xchg
mov
xor
sarb
mov
cmp
cmp
popf
and
movsl
shlb
or
cmp
shrb
adc
jns
xor
fmuls
call
lahf
cmp
mov
adc
nopl
cmp
icebp
jle
push
shll
test
mov
cmpsl
push
lret
dec
cmp
js
test
dec
xchg
imul
pop
push
mov
lret
xor
loope
repnz
pop
mov
fwait
hlt
dec
cmp
pop
xor
dec
les
repz
outsb
dec
incb
fisubs
xor
in
add
jae
popa
fwait
xchg
scas
enter
shrl
mov
mov
aam
and
in
mov
xchg
inc
or
add
lock
ja
icebp
es
adc
inc
dec
ja
or
pop
ror
mov
in
cmp
ret
ja
ds
rcrl
notb
jno
pop
dec
movsl
mov
daa
adc
ja
sub
shr
jmp
jl
dec
pushf
cmc
ss
lret
cltd
icebp
or
xor
call
or
ret
add
or
sub
and
sub
sub
mov
or
push
incl
mov
jp
adcl
in
aad
cmp
pop
mov
arpl
mov
pop
sub
sbb
loopne
add
dec
or
push
scas
jno
sub
stc
loopne
outsl
xor
sbb
mov
test
je
rcr
gs
stos
lret
push
idivb
out
ret
lret
push
lds
and
mov
mov
pop
lahf
jbe
fsubs
xor
stos
lret
mov
js
mov
movsb
notl
fstpt
mov
ds
jge
xor
inc
dec
cmp
or
int3
int3
imul
add
popf
pop
mov
imul
test
ud1
cli
sub
mov
cmpsl
jg
jnp
inc
daa
inc
lds
jp
pop
outsb
iret
shlb
mov
lds
mov
or
sbbb
adc
pusha
xchg
xor
inc
add
je
mov
pop
sub
jns
or
jnp,pn
ljmp
sub
scas
dec
pop
loopne
cmp
cmpsb
pop
inc
test
jne
lods
jle
xchg
nop
test
add
inc
push
mov
sbb
stos
lea
lock
rdtsc
mov
es
and
mov
push
std
cltd
xchg
sbb
dec
xchg
xor
ficoms
je
inc
pop
dec
sbb
push
out
nop
cmpsb
inc
stos
xor
subl
mov
mov
bound
pop
push
montmul
cmpsb
adcb
nop
xchg
sbb
mov
xor
incb
adc
loope
sarb
ret
cmpsb
outsl
mov
dec
rorl
jnp
push
mov
mov
ja
jg
jle
xchg
sbb
aaa
das
repnz
mov
and
aaa
iret
xlat
cmp
enter
cmp
aad
mov
cmpsl
andb
sub
in
cmpsl
imulb
dec
push
add
addl
arpl
adc
ss
outsb
add
mov
mov
bound
jo
int3
and
shll
lret
or
mov
cli
pop
fisubrl
push
mov
dec
pop
mov
lods
jmp
sub
add
dec
hlt
mov
jno
jg
sub
out
inc
mov
push
xchg
adc
mov
pop
sbb
outsb
ret
outsb
jae
addl
js
mov
dec
inc
cli
aad
push
outsl
lods
xchg
dec
dec
inc
push
jbe
xchg
mov
ret
pop
xor
in
adc
or
and
mov
ja
test
icebp
mov
cltd
dec
arpl
ss
dec
test
cmp
mov
fwait
scas
inc
pop
arpl
dec
enter
lods
test
ret
icebp
inc
sub
shlb
jmp
lahf
push
fwait
mov
and
inc
jmp
push
pop
jo
sub
lcall
push
or
push
insl
stos
xchg
lds
fsubrs
mov
pop
lods
add
pop
dec
pushf
mov
xor
jns
add
addr16
jecxz
dec
and
out
movsl
leave
jp
ja
addr16
adc
shrb
scas
push
das
into
loope
cmp
stos
pusha
enter
fnstenv
enter
push
mov
loop
adc
or
dec
sbb
add
inc
gs
iret
mov
test
scas
ljmp
adc
insb
push
rcrb
cltd
rcrl
jl
stos
inc
aaa
dec
push
lock
stc
int3
leave
cltd
or
imul
xor
dec
and
mov
inc
add
pop
sub
fistpll
addr16
lock
cmc
out
les
fsubrs
mov
pop
adc
cmp
das
int
dec
nop
inc
mov
mov
xor
ud1
pop
fs
cmp
lock
aad
cmp
fcoml
xor
xor
cltd
mov
adc
bound
shr
out
loop
push
ja
dec
add
jb
ficoms
cmp
sbb
out
mov
adc
and
mov
cmp
icebp
pop
sub
xchg
insb
pop
loope
xchg
into
pusha
pop
add
stos
add
test
add
inc
cli
pop
push
push
and
and
sub
das
movsl
xchg
clc
int3
out
jo
add
rcrl
fsubr
ret
xor
clc
adc
data16
pop
dec
aas
inc
inc
jne
arpl
xchg
arpl
push
icebp
mov
or
cltd
fildl
cld
je
inc
sub
test
pushw
cwtl
fnstenv
lock
or
sbb
stos
cmp
or
push
test
js
imul
mov
call
mov
mov
cmp
inc
arpl
mov
ds
sub
into
mov
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
lods
mov
sbb
stos
nop
cmpsb
xor
mov
notb
push
xchg
sahf
int3
movsl
pop
negl
shrb
xchg
mov
pop
sahf
inc
pop
in
cs
adc
cwtl
outsl
mov
jp
test
xchg
jle
add
clc
inc
stos
jnp
add
imul
mov
dec
fcomps
lods
mov
xchg
scas
pop
rorb
iret
jns
cmp
pusha
iret
mov
and
nop
add
xchg
shlb
or
outsl
mov
mov
inc
add
push
mov
adcb
in
or
sbb
mov
outsb
xchg
sti
sub
pop
xchg
cmpsb
cld
inc
shl
mov
enter
xor
loop
mov
inc
inc
fisubl
sbbl
inc
inc
or
mov
enter
rcrl
xor
lret
dec
jae
push
mov
mulb
add
and
jns
add
cs
xor
push
push
jno
iret
mov
sbb
pop
stos
jnp
mov
mov
push
outsl
mov
ja
je
or
inc
mov
insb
mov
scas
shrl
xor
es
test
ficoms
mov
inc
xor
or
in
stc
dec
popl
cmpsb
mov
mov
in
mov
cmp
jns
mov
and
pop
xorl
pop
add
inc
xchg
fnstenv
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
jl
outsb
add
cmpsb
insl
