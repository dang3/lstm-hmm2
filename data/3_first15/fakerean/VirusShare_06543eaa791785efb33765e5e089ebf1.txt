push
mov
mov
inc
sub
inc
inc
and
lea
mov
dec
inc
sub
inc
xor
lea
mov
dec
inc
dec
call
call
call
inc
add
lea
mov
call
dec
inc
inc
inc
and
lea
inc
call
call
dec
push
inc
call
inc
xor
call
lea
imul
inc
dec
inc
dec
sub
lea
imul
pop
dec
inc
dec
add
inc
pop
or
lea
pop
mov
inc
dec
add
pop
dec
and
lea
mov
dec
dec
inc
sub
pop
and
lea
pop
imul
dec
mov
dec
inc
call
inc
and
lea
movzwl
ret
dec
sub
push
sub
dec
push
add
lea
push
movswl
dec
push
dec
sub
push
dec
or
mov
lea
mov
push
dec
ret
push
inc
dec
dec
and
lea
mov
inc
dec
add
inc
add
lea
mov
dec
inc
inc
dec
or
lea
mov
inc
inc
dec
inc
sub
lea
imul
dec
dec
add
dec
add
lea
mov
jmp
and
mov
lea
mov
movzbl
sub
inc
add
dec
dec
and
add
lea
movzbl
mov
dec
xor
inc
inc
inc
sub
and
lea
imul
dec
add
dec
inc
sub
lea
dec
jne
mov
mov
inc
dec
pop
sub
inc
pop
sub
lea
pop
mov
inc
dec
inc
inc
add
lea
mov
add
add
inc
add
ret
push
add
or
lea
mov
dec
add
dec
inc
push
push
push
push
xor
lea
mov
push
dec
inc
inc
inc
sub
lea
mov
inc
inc
mov
add
push
inc
or
xor
lea
imul
push
inc
inc
push
add
inc
pushl
add
call
lea
add
movsbl
inc
inc
inc
inc
sub
lea
pop
ret
lea
mov
sub
sub
sub
inc
dec
and
mov
lea
imul
inc
dec
inc
inc
cmp
jb
add
xor
lea
mov
inc
sub
mov
add
inc
inc
and
lea
mov
inc
dec
inc
mov
inc
xor
cmp
jb
lea
mov
imul
dec
xor
add
inc
xor
dec
add
pop
lea
mov
test
jbe
add
dec
add
dec
or
lea
imul
inc
dec
dec
dec
sub
lea
mov
inc
inc
sub
inc
inc
add
lea
movzbl
dec
dec
and
inc
inc
mov
or
lea
movzbl
mov
dec
add
add
inc
and
dec
add
mov
lea
mov
mov
sub
dec
mov
dec
dec
mov
xor
lea
sub
inc
sub
dec
jne
dec
mov
and
lea
imul
inc
dec
inc
dec
xor
lea
mov
mov
dec
inc
inc
dec
add
lea
imul
add
mov
add
sub
test
jbe
inc
or
lea
mov
add
dec
inc
dec
add
lea
mov
dec
add
inc
sub
inc
xor
lea
mov
add
inc
dec
and
inc
and
mov
lea
mov
movzbl
sub
inc
add
dec
add
and
xor
lea
mov
mov
inc
movzbl
dec
sub
mov
dec
jmp
inc
dec
dec
dec
or
lea
mov
dec
inc
dec
inc
or
lea
pop
ret
push
add
dec
inc
dec
and
lea
imul
add
sub
dec
inc
inc
xor
lea
imul
inc
add
inc
sub
add
lea
mov
dec
add
dec
inc
and
lea
mov
inc
push
dec
sub
push
add
xor
push
lea
call
mov
push
inc
inc
pop
inc
inc
mov
or
lea
push
imul
inc
pop
add
add
and
dec
and
cmp
je
lea
imul
dec
inc
inc
dec
and
int3
lea
mov
inc
dec
inc
inc
add
lea
imul
dec
dec
inc
dec
sub
lea
movzwl
inc
inc
sub
add
sub
lea
movzwl
inc
ret
add
inc
pop
inc
ret
push
or
push
lea
imul
push
inc
push
inc
push
add
sub
push
and
lea
mov
sub
inc
call
inc
push
inc
and
lea
mov
mov
mov
dec
sub
mov
sub
inc
test
je
and
lea
imul
dec
dec
sub
dec
add
jmp
lea
mov
imul
dec
add
add
dec
add
lea
movswl
repnz
inc
dec
add
dec
jmp
inc
and
lea
mov
dec
inc
add
inc
or
lea
mov
add
pop
pop
ret
push
inc
inc
dec
xor
lea
movsbl
dec
sub
inc
dec
and
lea
mov
inc
add
add
inc
xor
lea
imul
dec
inc
dec
dec
or
lea
movsbl
dec
pop
ret
sub
add
mov
add
add
mov
sub
lea
mov
mov
dec
mov
add
sub
xor
dec
xor
mov
lea
imul
inc
inc
add
add
add
add
lea
cmp
jb
mov
push
add
dec
push
inc
dec
push
sub
lea
mov
movsbl
dec
xor
dec
inc
xor
dec
and
xor
lea
mov
push
add
sub
xor
add
sub
mov
add
lea
mov
movzwl
dec
movzbl
inc
dec
add
sub
add
lea
add
inc
dec
movzbl
inc
inc
and
jmp
adc
mov
xchg
inc
push
jnp
pushl
cmpsb
dec
insb
inc
inc
add
ret
rorb
hlt
sub
inc
push
stos
inc
pop
aam
jp
adc
jns
push
dec
xor
sub
add
sub
mov
jns
sub
gs
push
adc
jl
fnstenv
add
in
mov
jecxz
jl
lcall
out
cwtl
mov
cwtl
rcl
mov
repnz
out
js
xchg
scas
or
ret
jno
or
fsubr
dec
add
bound
push
jbe
adc
ficompl
imul
xchg
inc
lods
repnz
push
dec
icebp
ja
jne
sbb
rcrl
mov
jle
dec
je
stos
repnz
jmp
xor
test
insl
pop
mov
out
xchg
sti
popf
inc
xchg
lea
hlt
nop
push
push
mov
loopne
inc
outsb
and
push
fstpt
les
xchg
push
std
es
jb
or
into
pop
mov
hlt
or
iret
xchg
jno
test
inc
mov
mov
jns
push
pusha
adc
outsl
in
ds
cld
push
xchg
repz
push
xor
pop
loope
jp
test
loope
pop
cltd
imul
dec
add
scas
sub
lahf
adc
jnp
mov
jmp
and
cmp
adc
rorl
ds
cwtl
aam
add
pop
addr16
xchg
cmpsl
xchg
xchg
pop
mov
enter
jns
and
imul
repnz
cmpsb
mov
jnp
xor
mov
pop
cmpb
lret
sbb
sub
aam
idivl
mov
out
cmp
nop
inc
xchg
fst
pop
stos
add
mulb
adc
leave
loopne
test
mov
vmread
leave
rcrl
xor
cli
pop
scas
or
and
imul
fidivrs
jb
outsl
pop
stc
ret
repz
insb
cs
inc
in
leave
xchg
push
loop
adc
xchg
push
xchg
push
lock
aam
mov
jno
cmp
test
inc
fmul
imul
movsl
mov
push
loop
push
xchg
fucomi
addr16
cmp
in
pusha
push
mov
and
jp
les
or
test
gs
imul
fadds
pop
xchg
push
pop
fwait
subb
mov
rclb
add
jl
mov
mov
insb
mov
popa
leave
and
outsl
push
jecxz
push
inc
les
sarb
mov
andb
stos
inc
insb
push
into
cwtl
push
mov
in
xor
dec
push
and
push
jge
pop
cwtl
das
push
xchg
or
sti
mov
cmpl
icebp
inc
js
xlat
loop
in
mov
scas
jmp
movsb
and
and
ficoml
mov
fsubrs
cld
push
imull
sub
push
popf
add
mov
fucomp
jge
fistl
adc
mov
dec
mov
add
mov
xchg
push
jl
or
add
jbe
ficomps
sbb
lds
int
sbb
fwait
push
stos
pop
jb
jb
add
leave
jae
sarb
mov
insl
jae
imul
scas
xchg
jg
adc
jmp
xor
cwtl
shrb
es
sbb
add
ljmp
fcmovu
push
xchg
lods
pop
push
dec
inc
xchg
mov
scas
loope
call
pop
jmp
add
mov
jne
adc
data16
shl
and
fwait
in
cs
cmp
inc
push
lret
stc
xor
addr16
adc
mov
inc
sarl
jecxz
sbbl
mov
sbb
push
pop
jecxz
dec
jg
andb
mov
hlt
test
call
sub
fadds
loope
mov
cli
inc
popa
push
lods
dec
xlat
leave
movsb
insb
iret
mov
and
pop
mov
jnp
jmp
daa
loopne
fimull
popf
sub
jl
jge
pop
sub
push
adc
and
mov
aas
xor
les
daa
sbb
rolb
and
dec
pop
test
std
cli
fisubl
in
fistps
fwait
ret
aaa
cwtl
repnz
addr16
in
repnz
sbb
xchg
mov
mov
push
sbb
inc
rcl
mov
or
add
mov
outsb
mov
ret
outsl
mov
shlb
sbb
push
xchg
jp
pushl
xchg
andl
pop
jnp
loop
addr16
add
cmp
mov
mov
jae
outsl
in
xchg
sbb
and
loop
lcall
loopne
mov
gs
pusha
out
sbbb
or
add
shl
push
lcall
mov
mov
mov
test
ficoml
imul
fcomps
das
repnz
adc
mov
pop
push
negb
xchg
test
pop
sbb
fbld
add
out
fidivl
add
jbe
dec
adc
cwtl
add
pop
mov
cmp
add
xor
dec
insl
sbb
jp
in
push
nop
xchg
dec
mov
je
cmp
subb
jns
in
and
pop
sub
pop
out
into
out
insb
cmp
jp
arpl
es
nop
scas
push
jecxz
hlt
mov
jp
and
mov
pop
push
addr16
jno
daa
setle
and
stos
jno
out
xor
jle
push
mov
addr16
xor
ljmp
into
cwtl
je
popf
xchg
call
sub
adc
out
fcmovb
adc
or
xchg
shll
pop
push
cwtl
mov
ljmp
push
cld
int3
push
out
pop
test
negb
jmp
lret
cwtl
cwtl
mov
decl
dec
mov
adc
jns
push
xchg
imul
mov
dec
add
lock
outsl
jno
out
add
icebp
pop
lds
xlat
call
cmc
push
jl
fbstp
dec
sub
add
sub
outsl
and
lock
sub
lods
js
notb
hlt
jg
fs
jle
adc
popf
mov
jecxz
in
inc
imul
sub
out
or
icebp
dec
xchg
mov
lea
stc
cld
outsb
mov
or
push
mov
jnp
loope
insl
nop
or
dec
sub
cs
mov
add
lret
rcll
cmp
jp
dec
cmp
jno
jnp
xchg
mov
sbb
and
fcoms
dec
sub
xor
xchg
adc
shll
inc
enter
jge
inc
jmp
mov
je
pop
daa
loope
adc
sub
jns
cmp
mov
movsl
gs
insl
scas
push
cmp
icebp
pop
mov
jle
cltd
sahf
pop
gs
out
sahf
orps
and
icebp
rcrl
fwait
int3
push
mov
and
inc
repz
sbb
or
xchg
nop
popf
imul
aaa
imul
cltd
hlt
icebp
add
in
xchg
dec
mov
adc
cmpsb
popa
push
leave
out
jns
popa
loopne
call
lods
lea
jle
subl
rcrl
sub
and
roll
pop
xor
inc
in
cmp
ret
mov
outsl
sahf
dec
xchg
dec
cmp
mov
adc
or
mov
xlat
rcrb
sub
ja
mov
mov
mov
ret
std
lcall
std
sbb
stc
jnp
faddp
push
adc
fists
push
sub
xor
fwait
mov
adc
lods
bound
jne
or
jge
popa
js
push
adc
dec
sbb
push
enter
movb
hlt
inc
xchg
sub
das
or
lods
sub
in
rcll
aad
dec
xchg
daa
mov
or
inc
pop
cmp
pop
xchg
push
and
dec
test
jno
rclb
jmp
pop
dec
xor
xchg
sbb
mov
mov
fnstenv
fisubrs
sbb
dec
xchg
sti
jge
xchg
add
push
sarb
sbb
sub
in
push
mov
into
push
pop
fwait
pop
test
mov
push
mov
xor
cmpsb
mov
fldcw
push
lahf
fisubl
leave
incb
fidivs
lcall
jbe
or
xorb
lds
into
insl
bound
popf
add
sbb
xor
lock
mov
fnstsw
jbe
xchg
test
into
in
rcl
xchg
mov
mov
sbb
leave
xchg
mov
test
mov
sar
nop
add
ds
aam
inc
jne
inc
xchg
mov
push
imul
rcl
xchg
shlb
pop
jmp
aad
and
xor
and
out
popa
out
out
int
dec
pop
mulb
or
pop
sub
cmpsb
push
outsb
out
in
je
inc
scas
sub
addb
xchg
sbb
xor
fmul
dec
xor
js
insl
icebp
push
dec
shlb
icebp
and
mov
sahf
cmp
idivl
mov
jmp
jp
add
mov
xchg
dec
stos
fsubr
fdivl
scas
into
imul
fs
sbb
loopne
jo
mov
xchg
scas
xor
pop
aas
in
stos
mov
pop
andl
call
push
repz
add
popa
xchg
inc
addr16
dec
ds
inc
pushf
rolb
sar
mov
loope
or
fnstsw
mov
mov
dec
pushf
fcomps
cld
icebp
cmp
cmp
cwtl
push
loope
les
cld
jecxz
dec
imul
das
fistpll
imul
jecxz
subb
pop
cli
sub
loop
fwait
stos
aas
iret
cs
inc
dec
push
add
out
sbb
mov
les
cltd
out
loope
pop
add
xorb
imul
mov
add
pushf
cmp
jno
sub
and
in
stos
push
loope
inc
xor
loop
in
push
add
icebp
sbb
out
loopne
xor
xor
outsb
mov
sbb
mov
dec
adc
in
cmc
jae
test
aam
inc
shrb
mov
repnz
dec
adc
bswap
aas
lock
dec
stos
add
pop
pop
je
movsl
mov
loop
mov
out
lahf
dec
repnz
test
and
jns
dec
dec
inc
mov
sarb
inc
mov
es
std
rolb
mov
or
push
adc
test
push
arpl
in
ret
popf
nop
dec
ja
int3
jno
into
cmc
xorl
mov
out
ss
push
adcb
leave
lods
test
out
push
mov
push
lea
add
sub
jbe
dec
je
icebp
mov
mov
and
pop
lahf
test
stos
mov
xchg
pop
inc
fsubrs
mov
in
or
loopne
es
aad
fwait
mov
xchg
mov
lahf
mov
mov
imul
std
or
popa
mov
xchg
and
mov
sub
mov
enter
jl
pop
jnp
mov
mov
sub
push
insl
stc
stos
pop
inc
cs
pop
out
fwait
pop
adc
xchg
mov
pop
outsb
popa
push
and
adc
hlt
push
imul
push
shll
pop
es
repz
cli
and
stos
mov
bound
ret
lods
imul
xchg
stc
scas
add
and
jl
call
jp
or
aam
mov
inc
inc
mov
and
mov
adc
lret
adc
pop
push
pop
insb
add
jp
xchg
fildll
cmp
popa
lds
push
sbb
je
dec
out
lahf
xchg
gs
jbe
stos
iret
inc
pusha
adc
or
sbb
data16
aam
sub
out
mov
sarl
sub
jp
and
test
sub
pop
mov
cmpsb
shll
movsb
cmp
enter
or
push
int3
mov
pushf
stc
stc
rcr
lahf
pop
xor
cmp
cmp
add
push
and
mov
jne
fistps
ret
lahf
mov
xor
daa
pop
inc
sbb
dec
adcb
sub
and
xlat
jbe
lea
aaa
test
dec
mov
and
lods
dec
mov
push
out
dec
mov
test
mov
inc
into
mov
in
aaa
outsb
mov
dec
repnz
adcl
mov
dec
scas
adc
and
repz
aad
aas
repz
sub
sbb
lods
fndisi(8087
aad
leave
xor
adc
inc
shl
mov
mov
out
inc
push
sbb
dec
ljmp
call
xchg
and
fnstenv
jecxz,pt
push
xor
imul
ja
mov
je
dec
je
sti
scas
lock
and
ret
daa
test
add
bnd
loopne
push
jae
mov
or
das
dec
sbb
inc
jne
mov
mov
int3
jge
jecxz
lea
sub
loop
and
pop
aaa
aaa
hlt
inc
push
dec
and
push
lret
lds
lret
jb
shl
or
in
dec
ds
and
gs
lods
out
jp
jno
pusha
rcl
or
pop
dec
loope
inc
scas
in
cmp
outsb
jecxz
dec
fucom
imul
xor
xchg
stos
movsl
cmp
pop
mov
sbb
lcall
sub
sbb
xor
les
mov
fldl
push
add
loope
xchg
mov
std
movl
out
aaa
movsb
movsl
sub
or
test
jno
pusha
inc
iret
nop
mov
dec
ror
add
imul
icebp
dec
xor
adc
orl
insb
push
add
adc
fdivl
rorl
sub
and
sahf
sahf
ja
cmp
pop
sbb
cmp
mov
jmp
cli
adc
sahf
jae,pt
dec
xchg
loopne
movsl
xor
inc
adc
xchg
scas
and
loop
mov
fwait
movsl
dec
in
out
inc
mov
pop
scas
rolb
aas
and
ret
pop
mov
xchg
inc
xor
inc
cld
or
sbbb
jg
mov
stc
test
fdivrs
subb
aad
mov
imul
fmul
jp
addr16
push
mov
pop
hlt
ror
test
lea
xchg
push
xchg
pop
mov
pop
adc
js
or
scas
stos
dec
push
jge
cmp
push
ss
mov
mov
cltd
mov
loopne
sub
ret
arpl
inc
dec
inc
mov
inc
dec
outsb
es
inc
mov
out
mov
test
mov
mov
jl
fsub
xchg
sbb
pop
inc
dec
pop
cmp
movsb
aaa
daa
popf
push
pop
dec
xchg
and
mov
sub
outsl
call
daa
jnp
dec
in
stos
adc
sub
enter
movsl
xorb
pop
lds
imul
mov
mov
pop
rorb
add
enter
pushf
stos
jmp
pop
mov
xor
lods
jnp
xchg
jb
mov
icebp
jp
inc
mov
mov
sahf
cmpsb
adc
test
jae
outsl
dec
or
in
xor
imul
cmpsw
or
sbb
pop
stos
enter
in
lea
sarb
dec
das
adc
dec
filds
cmp
addr16
push
insb
dec
adc
loop
mov
lret
test
out
mov
push
pushf
clc
xor
pop
mov
stos
pop
leave
cmp
lret
xchg
in
out
sbb
rcrb
sbb
iret
dec
fists
dec
std
fstpt
rorb
jecxz
clc
mov
lahf
inc
enter
sub
inc
ret
cmp
fidivs
add
adc
adc
xor
out
mov
sbb
mov
stos
push
sub
push
inc
xor
push
or
xchg
inc
sub
pop
nop
test
or
out
in
shr
pop
and
call
shll
adc
addr16
and
add
jmp
shrl
and
arpl
mov
and
cmpsb
out
pusha
std
inc
inc
movb
cmpsl
mov
adc
inc
cmc
arpl
jae
xlat
repnz
dec
loopne
in
lahf
dec
cli
mov
clc
jecxz
xor
dec
adc
push
dec
sbb
mov
and
addr16
jbe
mov
das
jl
xorb
xchg
in
xchg
repz
adc
mov
or
repz
jp
sarb
sbb
in
sub
cmpl
pop
jg
or
jg
adcb
jnp
and
xchg
xchg
clc
icebp
test
repz
mov
sub
sub
rcl
lcall
mov
aas
push
pop
cltd
scas
xchg
stc
adc
inc
call
loopne
popa
imul
jl
call
std
les
testl
jge
push
lahf
sub
jle
pop
adc
or
dec
inc
lret
mov
std
fsubl
fisttps
sbb
jp
sub
pop
outsl
push
inc
mov
mov
popf
fiadds
or
loop
push
sbb
std
std
jmp
insl
icebp
iret
adcb
dec
fldenv
jbe
sbb
sti
outsl
lea
pop
stc
gs
push
aas
pop
bnd
xchg
ret
jns
idivb
add
pop
xchg
test
sbb
daa
cmpsl
or
in
inc
inc
mov
sub
mov
xchg
test
sub
xor
imul
sti
and
push
clc
adc
scas
jmp
or
xchg
xchg
dec
rolb
int3
shrb
mov
loop
fisubrl
test
lods
mov
movsb
je
jns
pop
jle
xchg
sahf
test
in
ret
pop
loop
hlt
inc
js
shl
cmp
imul
ja
inc
ljmp
ror
mov
add
xlat
clc
fs
xor
imul
jnp
mov
mov
xor
adc
mov
pop
outsb
adc
xchg
sbb
pop
popa
jmp
jne
add
and
lcall
jnp
rorb
popf
bnd
das
push
addr16
xor
sbbl
mov
sub
and
jo
push
and
jmp
sub
insb
insl
jle
dec
mov
adc
mov
lock
inc
sar
or
pop
inc
jl
popf
ljmp
aas
mov
jl
dec
sub
out
std
cmp
mov
ror
out
add
aam
repnz
or
aas
push
dec
mov
bound
dec
xchg
int
jle
sub
xor
out
push
and
shlb
test
fistpll
movsl
sti
and
bound
sbb
dec
or
add
mov
rcrb
mov
jl
cmp
add
out
stos
outsl
test
loop
inc
nop
addr16
cmpb
sbb
orb
mov
test
add
pop
pop
and
fwait
je
mov
fimuls
xor
mov
pop
jno
pop
jb
adc
addl
cmp
sub
inc
inc
mov
pop
repz
in
cmpsb
imull
fyl2x
arpl
into
je
inc
inc
mov
mov
mov
int
out
and
pop
fisttpl
adc
fsubrs
ja
fcomps
push
bound
push
sub
xor
pop
inc
scas
dec
fidivrs
pushf
lock
jl
stos
ss
dec
pop
fimull
xor
xor
fsubrl
adc
mov
or
sbb
inc
clc
hlt
add
arpl
rclb
mov
hlt
aas
test
inc
and
stc
inc
outsl
xchg
notb
shlb
xor
xor
stc
jbe
iret
repnz
sbb
jns
sub
inc
dec
jb
orl
pop
push
pop
xchg
cmp
mov
jg
jo
inc
mov
out
adc
rcl
lcall
mov
xchg
xchg
jmp
sub
xchg
and
xchg
pop
pop
stc
adc
mov
push
repz
iret
xlat
in
into
negl
in
es
insb
test
das
ss
sub
hlt
out
in
jns
les
push
adc
mov
ret
push
push
fisubs
std
mov
cmc
xor
adc
dec
mov
scas
pop
sbb
bound
insb
or
es
pop
or
cmpsl
push
add
mov
adc
xor
leave
push
mov
pop
xchg
sbb
and
adc
and
mov
xchg
mov
repnz
shl
or
mov
js
popa
pop
add
jb
lds
loop
and
rol
jnp
leave
loopne
lds
dec
xor
xlat
ds
adc
sbbl
pop
idivl
lcall
xchg
int
jecxz
or
add
mov
movsl
popa
sti
sbb
cld
adc
jecxz
mov
inc
mov
fcmovbe
cmp
iret
rcrl
mov
push
pushf
xchg
js
pop
dec
jmp
ret
jmp
ror
mov
cmp
cltd
push
fcoms
and
data16
punpckhbw
out
mov
push
xchg
mov
mov
and
cli
fwait
pop
negb
dec
and
sbb
jne
fstl
inc
pop
xor
mov
inc
inc
bound
inc
and
ss
mov
pop
pop
jbe
mov
xchg
mov
lods
jns
mov
cmp
lods
lods
push
rcr
jne
not
arpl
aam
std
and
jb
xchg
and
ljmp
jne
arpl
imul
cwtl
add
clc
inc
or
inc
lods
aad
adc
mulb
rcrl
stos
loopne
into
mov
add
aas
fs
jb
mov
xor
adc
outsb
dec
xchg
cmp
fisubs
not
out
inc
rorl
cwtl
ret
xchg
pusha
scas
rorb
xchg
jmp
or
loope
mov
jge
mov
popf
test
jns
icebp
aaa
cmp
inc
cmpsl
movsb
fs
incb
pop
movsb
lahf
int3
jge
sbb
int3
nop
push
cwtl
inc
lds
xor
enter
mov
xor
out
xor
push
mov
add
push
mov
dec
push
pushf
outsl
xchg
jno
shrl
lea
xchg
sbb
add
adc
add
lock
sbbb
leave
or
in
inc
mov
scas
cltd
cmpsb
dec
dec
pop
sub
adc
cmp
jo
pop
jbe
jle
repz
out
push
jne
fisubl
leave
mov
ficompl
adc
push
dec
mov
cmp
mov
test
mov
lret
mov
and
push
jge
or
int
aad
jns
add
loop
and
lds
clc
mov
insl
or
cmp
ss
add
and
mov
pop
push
cmc
rol
push
fstl
xchg
mov
sbb
inc
std
inc
inc
shrl
mov
int3
or
cmpl
pop
dec
xchg
mov
jb
das
bnd
jae
dec
lods
mov
pushf
dec
fildll
jmp
ficomps
pop
inc
and
in
ret
scas
ror
stos
jns
xchg
sub
je
aaa
sahf
lock
adc
in
in
push
or
int3
jle
js
inc
scas
stos
and
scas
and
int3
dec
mov
cmp
mov
push
ja
inc
ljmp
sub
loope
fcoms
cmpsl
jo
jg
mov
add
mov
or
jg
lret
cmovo
adc
xlat
jb
and
jl
cmpsb
test
sub
scas
jo
push
int
sbb
flds
les
mov
xorb
stos
movsl
lret
push
pop
lock
jns
icebp
mov
imul
adc
sbb
adc
lahf
and
mov
loop
mov
js
mov
pop
fs
popf
test
lods
jb
cmp
and
and
xchg
test
int
add
ss
mov
push
loope
sbb
loop
xchg
pop
mov
stos
jnp
movsl
testl
push
dec
jno
xor
sbbb
push
and
and
push
bound
mov
mov
or
sbb
cmp
and
test
xchg
pop
mov
in
cmc
push
and
jo
icebp
arpl
ficompl
stos
lods
ljmp
cmp
in
push
cmp
movsl
out
fstp
imul
adc
mov
cltd
nop
mov
call
and
fldenv
xchg
inc
bound
xchg
cld
pushf
fldenv
movsl
nop
shr
outsb
in
cmpl
cs
js
pop
xchg
pushf
ret
sub
adc
sub
cmp
xor
shlb
in
jl
scas
cld
adc
sbb
addl
fcomi
xor
pop
call
cmpsb
pusha
add
bound
pop
rolb
fs
stos
cltd
pop
mov
pop
lea
dec
sti
xor
insb
shr
cs
xchg
mov
lahf
ficoml
inc
fisttpl
mov
scas
int
adcb
insb
sbb
pop
mov
jge
inc
int3
lods
xor
xchg
out
aad
and
mov
xchg
rolb
in
adc
or
scas
and
fincstp
je
pop
xchg
popa
push
cs
sbb
sub
xchg
pop
mov
mov
sbb
icebp
xor
call
mov
mov
out
inc
sbb
in
in
andl
pop
xlat
out
or
nop
jl
jae
jmp
jns
push
jne
pushf
test
addr16
add
sub
jns
daa
mov
aad
sbb
mov
or
jnp
imul
jno
shll
hlt
fldenv
fstl
cld
in
add
jmp
data16
testl
roll
push
ss
mov
loopne
fcmovnu
arpl
rol
je
cmp
xor
pop
addr16
ret
mov
mov
sub
enter
repz
sbb
xor
sub
std
sbbl
jb
cmp
scas
les
in
cmc
lret
fincstp
pop
js
push
xor
or
sbb
and
pop
dec
ja
stos
jecxz
icebp
or
cmpsl
test
push
or
cmp
sub
sub
cmp
fdivrp
inc
and
dec
imul
adc
mov
sbb
lea
mov
fsubs
mov
fidivl
out
shl
fstpl
dec
rcrl
xchg
mov
cld
adc
addr16
arpl
jbe
pop
cwtl
pop
int
sbb
mov
xchg
push
fcoml
rclb
mov
lret
jp
jb
outsb
inc
negl
jbe
fabs
fisubrl
das
push
stos
add
fistps
cli
aaa
daa
and
pop
inc
rclb
leave
cmp
add
and
dec
sti
mov
aam
inc
and
push
mov
pop
icebp
push
mov
testl
sub
mov
fsubl
push
out
mov
push
mov
xor
cmp
push
std
push
in
and
mov
jo
rclb
pop
dec
adcl
push
icebp
mov
sahf
shrb
dec
out
stos
xchg
cmp
test
movsb
rcrb
mov
stos
and
fidivrl
pop
data16
mov
daa
jmp
pmaxsw
imul
pop
and
lcall
das
sbb
xchg
rol
adc
test
mov
or
xchg
stos
jecxz
xchg
inc
jmp
in
adcl
dec
in
xor
pop
and
pop
mov
daa
lahf
loop
pushf
cmp
jmp
gs
dec
xor
sbb
mov
xor
mov
or
mov
add
clc
ret
addr16
out
lea
pop
jbe
outsb
rorb
int
jg
dec
cmp
and
push
dec
inc
add
lods
daa
add
xchg
inc
add
mov
pop
mov
and
mov
fcmovnbe
push
cmpsb
sarb
mov
adc
ret
aad
outsl
idivb
inc
std
jge
xchg
pushf
inc
ret
out
lods
add
hlt
lock
jle
jl
aad
mov
out
mov
popf
mov
adc
clc
cmp
cmpsl
test
scas
pushf
testb
bound
push
out
jne
push
mov
mov
add
jmp
pop
jg
inc
cltd
adc
les
mov
les
and
nop
push
mov
push
clc
dec
les
enter
outsl
seto
fidivl
mov
jmp
ja
add
pop
test
inc
inc
loop
adc
or
xor
push
and
rcrl
stos
dec
push
jne
mov
mov
add
mov
addb
cmp
dec
push
push
xchg
mul
add
jp
and
mov
jns
clc
clc
or
cltd
cmovno
inc
inc
inc
lahf
mov
fcoml
jno
dec
mov
and
mov
mov
mov
push
sub
inc
xor
scas
les
jle
dec
mov
mov
inc
cs
mov
rcrb
mov
rcrl
jbe
push
mov
mov
imul
fdivrs
or
mov
rcr
sar
cmpsl
daa
xchg
xlat
pop
loopne
lret
lcall
or
nop
fs
push
hlt
leave
stos
pop
push
sub
call
mov
cmp
mov
jle
fists
jg
mov
jb
loop
add
mov
jecxz
das
cwtl
xlat
dec
cmpsl
or
bound
cli
cwtl
adc
jns
jbe
or
jb
imul
inc
adc
mov
popf
pop
pushf
push
xchg
pushf
cmp
cmpsl
imul
int3
mov
int3
in
addr16
cs
cmp
dec
addr16
cltd
xchg
shl
add
mov
test
xor
movsb
mov
push
push
lahf
ss
lret
mov
sbb
and
in
fsts
dec
imul
or
scas
loop
jns
lods
adc
rcrb
shrb
int3
or
idivl
popf
aad
jbe
xchg
dec
nop
jae
pusha
hlt
daa
leave
fwait
data16
jg
sub
ret
and
and
cmpsl
push
xlat
dec
cvttps2pi
pop
nop
inc
test
sub
pop
sub
imul
sbb
dec
sbb
adc
mov
jbe
loop
cmc
lods
mov
xor
mov
into
arpl
push
push
dec
mov
fxch
push
xchg
xor
shl
mov
cmp
sub
jb
hlt
rcrb
mov
add
daa
push
and
xor
fwait
mov
inc
aam
lods
dec
mov
jmp
mov
mov
in
jmp
mov
icebp
in
cltd
pop
dec
mov
mov
out
aas
pop
out
repnz
sbb
scas
repnz
test
insb
cmp
pop
data16
lock
mov
ljmp
lret
sbb
mov
push
imul
or
icebp
cmpsl
pushf
out
out
xchg
adc
push
sub
mov
leave
out
orb
dec
inc
cmp
push
jmp
xchg
lahf
sahf
orl
sti
iret
imulb
negl
xor
or
mov
pusha
fwait
js
jge
enter
std
jp
xor
es
cs
xchg
bound
dec
je
mov
out
popa
push
out
and
aaa
call
subl
out
lods
sbb
ficomps
sub
dec
data16
inc
pusha
and
addr16
ret
dec
sbb
sub
fidivrl
paddd
clc
mov
in
inc
in
add
iret
cmp
divl
out
mull
daa
pop
lea
fcompl
and
dec
clc
or
inc
jge
aam
bt
pop
add
inc
in
aas
into
ljmp
dec
lret
fs
lret
ds
mov
addr16
cmc
push
mov
movsl
cltd
sbb
or
decb
cmp
or
inc
xchg
push
add
sub
and
movaps
pop
std
pop
inc
jmp
fiadds
push
rorb
out
ja
fdivr
cli
mov
stos
std
adc
mov
push
ret
pop
mov
fwait
jmp
sub
nop
xchg
cmp
dec
dec
or
jle
xor
add
call
frstor
and
imul
lds
nop
lret
adc
jns
jp
mov
aam
mov
jb
sahf
pop
dec
cmp
in
bound
and
in
out
ja
into
push
mov
ja
pop
out
fists
dec
je
mov
add
arpl
or
icebp
pop
or
in
cmpsl
movsl
add
icebp
lcall
lret
xor
outsb
and
pusha
test
adc
mov
cmp
js
fwait
cmp
cltd
test
inc
sub
sbb
mov
pop
mov
into
jmp
jle
psubd
aad
cmpsb
lods
pop
xor
xor
or
or
call
bound
lds
mov
loope
iret
in
push
mov
pop
lock
js
jmp
enter
xor
and
lock
and
adc
fmul
pop
rcr
sti
jl
nop
dec
xchg
dec
push
dec
pop
cmp
jl
inc
or
test
xchg
hlt
and
pop
lret
and
lods
inc
jl
add
loop
jecxz
ret
fsubrs
stos
dec
pop
jns
dec
movsl
push
inc
dec
pop
cmp
popf
pop
sub
iret
cld
aaa
mov
or
pop
jo
dec
stos
add
xchg
xor
mov
ficomps
sub
arpl
sbb
jecxz
sub
pop
jbe
add
push
xchg
push
fdiv
call
ja
jno
pop
rorb
fcmovnb
dec
jle
xchg
repz
shr
pop
dec
roll
pop
hlt
mov
inc
subb
fwait
test
mov
aad
mov
xchg
rol
fldenv
inc
xor
or
das
xchg
inc
je
sub
pusha
add
jo
shl
pop
adc
daa
adc
test
sbb
adc
push
xchg
ds
jae
jo
add
scas
sub
sbb
sub
sbb
iret
mov
loop
add
cmp
and
movsl
add
push
nop
sahf
pop
sbbb
or
cltd
push
rcr
push
ljmp
adc
mov
test
sub
fsubl
push
rolb
mov
xchg
ret
iret
adc
add
js
mov
jmp
jp
jmp
mov
and
sbb
dec
mov
stc
sahf
or
push
sbb
fdivrl
int
fsubrl
inc
mov
rcrb
push
dec
sbb
adcb
imul
js
xchg
aad
or
inc
sub
xchg
jb
ljmp
pop
xlat
js
xchg
xor
cmp
push
cmp
aam
add
inc
inc
dec
int3
daa
jbe
jae
out
sbb
cmp
in
fwait
and
dec
lock
inc
jl
repz
mov
inc
and
push
shr
scas
pop
ror
outsl
jbe
adc
cwtl
sub
and
sbb
lods
cmp
movsb
mov
stc
je
lds
push
cmp
pop
xchg
into
ljmp
ja
dec
div
push
mov
adc
es
xchg
rcrl
and
repnz
sub
outsl
ljmp
mov
loopne
xlat
clc
dec
leave
repnz
mov
dec
icebp
fistl
and
insb
jo
loopne
iret
daa
sub
js
cmpsb
ret
adc
cmc
mov
xor
jecxz
or
int
xchg
or
pop
pushf
addl
nop
leave
or
push
inc
lods
pop
loopne
dec
out
popa
and
lret
sbb
push
icebp
and
mov
aaa
or
xchg
push
adc
add
gs
mov
js
nop
push
xchg
or
scas
mov
mov
out
imul
rep
das
sbb
lods
or
cli
stos
xchg
inc
adc
xchg
xchg
sbb
mov
fs
add
mov
jb
jp
loope
outsb
mov
aas
dec
mov
jg
insl
jl
mov
addr16
int
leave
pushf
adc
mov
lret
lods
push
loope
sbb
pop
pop
dec
in
lcall
out
xchg
and
sarb
test
lcall
arpl
in
add
fmull
mov
fwait
sbb
jmp
push
or
mov
std
outsl
fcoml
lcall
out
test
xchg
cmp
adc
sarl
pop
mov
mov
and
xor
cld
adc
dec
stc
ljmp
hlt
pusha
pop
daa
test
adc
icebp
push
aas
cmpb
sbb
subb
test
adc
jl
js
pop
ja
sbb
mov
mov
inc
lcall
pop
adc
in
xor
aad
mov
fsubl
sub
daa
mov
aaa
inc
imul
jp
push
sahf
dec
bnd
mov
adc
test
dec
into
jge
mov
in
hlt
adc
cmp
fsubrs
rorb
dec
or
jnp
mov
pop
jmp
in
in
pop
or
in
xchg
xlat
cmp
lock
sub
add
sbb
in
mov
aaa
fs
xchg
and
iret
lahf
push
rolb
movsb
push
mov
pushf
mov
shrl
adc
andb
jb
push
fdivs
ret
rorb
jmp
pop
cs
lods
or
outsl
pop
jns
cltd
lcall
pop
mov
adc
and
aaa
add
and
aaa
pop
and
fistpl
add
jno
loop
jns
stos
or
jge
xchg
cmp
xchg
test
push
mov
add
call
sahf
and
out
dec
jge
cmp
mov
insl
stos
sub
dec
fiaddl
mov
add
out
adc
jmp
psrlw
scas
inc
test
cld
push
mov
inc
xchg
push
jbe
cmp
jns
mov
sub
int
jbe
enter
lods
sarb
stos
out
mov
insb
pop
sbb
sub
aas
lcall
int3
in
mov
xor
push
loopne
jne
outsb
sub
insl
push
stc
in
outsl
add
push
ss
shl
pop
mov
push
rep
adc
icebp
mov
imul
or
mov
lods
pop
xor
rorl
pop
jnp
dec
std
outsb
xchg
js
insl
jo
ja
mov
push
cld
inc
push
mov
aas
mov
loope
lahf
mov
addr16
mov
xor
das
and
and
lock
arpl
leave
sub
jmp
shr
sbb
aas
pop
push
sub
rorl
mov
push
shlb
test
jae
xor
sbb
xchg
lea
andb
dec
add
jg
dec
xchg
sbb
cltd
mov
inc
movsl
jle
cmpsb
sbb
mov
sbb
enter
clc
mov
cmp
mov
mov
cmpsl
aam
rcr
adc
ljmp
test
add
ss
aad
addr16
sub
sbbb
loope
or
fwait
xor
fs
push
ret
adc
and
in
cmc
xor
mov
cltd
jl
add
sub
jae
lods
fsubrl
sub
movsb
xor
mov
pusha
and
sbb
rcr
in
mov
push
arpl
pop
cmp
loope
ds
data16
xchg
push
lea
pop
js
test
cmp
or
fldcw
mov
sbb
leave
add
gs
pop
inc
or
pop
scas
fmull
fmull
mov
dec
xor
movsb
addr16
push
cmp
popf
in
pop
lret
inc
addl
cli
mov
xor
outsl
pusha
jnp
ja
xchg
inc
add
mov
inc
mov
pop
out
sbb
fs
cmp
inc
jmp
xchg
cmp
dec
add
add
xchg
dec
lods
cmc
sbb
and
mov
fistpll
loopne
repnz
loop
fwait
adc
cld
ja
stos
sub
mov
dec
loop
inc
add
mulb
insb
ret
cmpsl
cmp
insb
loopne
imul
jnp
pop
xchg
loop
or
push
fildll
aaa
sub
mov
or
add
pop
fidivrl
mov
adc
in
aas
mov
es
dec
adc
pop
int
cltd
iret
xlat
scas
rol
and
jbe
in
enter
jge
mov
cmp
arpl
shlb
jp
sub
xor
je
jl
ficoml
jmp
gs
and
bound
pop
push
shl
fs
popf
push
adc
push
or
loopne
enter
mov
enter
add
dec
mov
mov
int3
out
sbb
fucomp
repz
cmp
lret
mov
add
inc
cs
sub
jnp
sub
mov
pusha
push
incl
push
inc
xor
xor
ljmp
jmp
add
in
mov
cmpsl
mov
negl
ss
xor
jg
mov
push
lret
dec
lods
hlt
mov
outsl
mov
sbb
cmp
insb
jne
out
push
sub
pop
sub
hlt
jno
jle
xchg
loop
sbb
pop
cld
loope
popf
ret
cmpsl
cltd
movsl
and
lret
adc
fisubrs
jg
push
sub
mov
mov
lock
loope
xchg
sub
leave
dec
or
fld
xchg
cmp
push
cmp
and
das
pop
ret
out
push
jmp
iret
fs
lods
xchg
hlt
mov
lcall
or
jmp
loope
push
stos
insl
cmp
mov
xor
dec
popf
mov
push
cwtl
sbb
js
std
inc
push
leave
cmc
icebp
mov
sbb
jb
mov
shlb
mov
pop
movsl
mov
cmpsl
insw
ss
outsl
int
pop
clc
mov
sub
sbb
cli
push
dec
imul
inc
scas
clc
jle
ds
je
jmp
cli
ds
in
mov
sub
shrb
jne
out
dec
out
mov
jecxz
push
mov
add
and
and
sbb
push
xchg
cmpsl
or
pop
push
mov
pop
cli
mov
inc
adc
rcl
ret
adc
or
mov
jbe
lahf
cmpsb
idiv
outsb
std
insl
sahf
sbb
push
jae
lock
dec
hlt
daa
inc
inc
xchg
pushf
jae
cmp
mov
gs
pop
icebp
lret
or
loope
cwtl
jp
mov
pop
push
push
int3
jmp
lds
insb
shl
or
jne
push
mov
push
xor
jmp
mov
pushf
inc
add
pop
pop
sub
sub
or
sub
cwtl
sub
cwtl
mulps
shll
pusha
iret
outsb
or
fimull
sub
rclb
mov
imul
jbe
push
int
cmpsb
adc
out
dec
and
mov
pop
imul
repnz
dec
mov
xor
pushf
sub
mov
out
adc
pop
lret
popw
aas
add
clc
sbb
ja
shlb
jnp
fdiv
dec
ret
cmp
push
inc
inc
xchg
and
jae
js
push
push
fildll
xor
sub
ja
fsubrp
mov
sub
lods
pop
mov
cmp
icebp
xchg
or
int
test
adc
jbe
sub
sub
push
test
nop
cmp
mov
outsl
insb
inc
jp
mov
sub
dec
inc
mov
sub
cs
mov
or
leave
mov
sbb
sbb
nop
inc
scas
ljmp
insb
lea
sbb
rorb
mov
sti
loop
test
aas
push
mov
mov
cwtl
pop
mov
loope
int3
lahf
aad
movsl
add
inc
dec
xor
jbe
leave
xlat
pop
out
or
cmp
stc
popf
popa
add
jnp
ja
push
loop
jo
in
jge
xor
cmp
mov
xchg
cmp
xor
rcl
repnz
push
inc
in
test
sbb
xchg
adc
je
xorl
mov
dec
dec
ds
test
testl
push
push
iret
mov
push
sub
pop
xor
or
push
jmp
popf
sub
and
outsb
xchg
inc
in
dec
dec
jg
mov
add
jae
iret
dec
into
ret
fmull
arpl
push
adc
jb
lahf
fistpl
mov
pop
adc
fisubrl
cmp
xor
test
inc
mov
movsl
bound
add
jo
in
mov
inc
jecxz
and
adc
test
test
ss
push
mov
pop
fwait
jnp
add
jg
and
fs
out
pop
and
mov
mov
xchg
or
sub
jns
xor
inc
push
xor
dec
adc
or
sahf
ss
push
push
cmpsl
shll
mov
scas
jmp
jg
push
push
pop
sbb
jge
jbe
pop
jno
movsb
jecxz
push
mov
sub
adc
dec
mov
or
mov
adc
insl
pop
orl
mov
call
add
in
mov
cmc
jle
cld
cmpsl
pop
adc
out
ret
in
pop
xchg
or
xchg
add
pop
sub
enter
incl
or
mov
mov
int3
mov
add
ret
cmp
insl
xor
daa
mov
adc
nopl
aaa
add
add
data16
inc
jg
lods
inc
lret
repz
sbb
in
adc
rcr
fsubrl
iret
cmp
das
pop
add
mov
outsb
sbb
push
cwtl
lds
stos
inc
cs
dec
std
mov
inc
xchg
mov
push
scas
dec
popa
mov
adc
in
shll
je
sahf
out
stos
xor
jmp
cwtl
lds
orl
outsb
lret
in
mov
sahf
cltd
cmp
js
clc
or
popf
push
sbb
fs
jbe
arpl
shlb
mov
jb
je
fldl
pop
data16
cwtl
arpl
or
cmp
loopne
sbb
mov
test
in
and
bound
mov
add
fistpll
fiadds
jno
mov
pop
sbb
in
sub
shlb
aad
push
xor
add
xchg
mov
or
and
or
scas
icebp
sbb
mov
mov
dec
sahf
fxch
push
insl
adc
or
cltd
xorb
jecxz
and
jp
call
andb
xlat
imul
stc
mov
call
jle
out
fwait
rol
fmuls
jg
shlb
push
ret
popf
cmp
mov
notb
xchg
pop
sbb
mov
clc
fadds
divb
pop
mov
pop
xor
lods
mov
ljmp
cmp
hlt
pop
cmc
addb
pop
testl
mov
jp
adc
inc
pusha
jne
test
movsl
and
shr
imul
iret
pusha
aam
pop
xor
rcl
scas
bound
sti
leave
or
les
cmp
xchg
mov
ss
dec
fadds
std
mov
xorb
cmp
mov
fistpll
push
outsb
outsb
push
inc
icebp
pushf
ds
push
popf
in
shr
setb
in
or
insb
dec
push
dec
scas
imul
sti
cwtl
mov
pop
int
add
xchg
and
inc
out
cmp
cmp
or
data16
mov
imulb
mov
insb
or
outsb
loopne
inc
push
mov
sahf
pop
repnz
sbb
ds
add
xchg
es
stos
jbe
inc
jmp
push
jecxz
test
insl
pop
ret
das
cs
fimuls
cltd
mov
sbbl
sti
je
arpl
leave
aad
enter
das
add
sub
pop
movsb
add
mov
rorl
js
out
push
fwait
adc
sub
cmpsl
mov
pop
or
sahf
aam
mov
outsl
adc
cltd
cmc
in
shl
push
pop
inc
mov
cmpsb
lods
pop
inc
fstpl
negl
aam
sub
out
iret
movsl
and
sbb
int3
imul
sarb
cwtl
jecxz
cli
add
sub
xchg
std
sahf
xlat
hlt
insb
loopne
sub
push
or
outsb
xchg
ljmp
mov
cwtl
xor
adc
xchg
adc
push
movsb
sub
sbb
pop
shr
insb
mov
xor
cmp
les
lods
jnp
sub
orl
cmp
dec
hlt
clc
mov
arpl
les
sbb
aam
adc
sub
mov
sbb
mov
loop
js
dec
fsts
mov
sti
stc
aad
cmp
aad
testl
xchg
jno
mov
popf
dec
call
sub
mov
insl
adc
out
mov
add
hlt
jne
xor
lods
ljmp
imul
aas
inc
inc
sarb
push
cld
jecxz
cmp
addr16
and
inc
pop
loopne
lods
aam
pop
dec
arpl
inc
pop
sub
fs
push
scas
sub
sbb
pop
shll
out
and
lret
mov
adc
xchg
mov
lcall
or
mov
xchg
ret
test
fbstp
mov
push
cmpsl
fmulp
shlb
lds
push
dec
push
jbe
add
mov
in
lods
enter
imul
dec
dec
lahf
sahf
add
mov
mov
pop
addr16
ss
cmp
in
jecxz
dec
imul
jo
push
sub
cmp
iret
shlb
xchg
test
cli
pop
xor
adc
sub
outsb
lret
out
sbb
jne
stos
pop
clc
dec
sbb
mov
shlb
shrl
rorl
popf
roll
repnz
mov
mov
xor
push
les
jecxz
insl
ficoms
mov
iret
add
in
mov
hlt
jbe
test
xor
inc
mov
test
mov
fwait
lds
inc
mulb
inc
out
mov
mov
jmp
jl
jp
iret
mov
js
xor
rolb
push
push
in
lock
lret
cld
xor
lahf
jl
ret
insl
aaa
pop
adc
aad
cmpsl
mov
inc
xor
clc
jnp
inc
mov
ljmp
xor
sti
add
out
sub
popf
jl
sarl
sub
mov
aaa
data16
aas
dec
addb
sbb
mov
lock
imul
push
mov
aam
nop
jb
jbe
sbb
out
push
cmp
daa
mov
mov
adc
addr16
stc
pop
cmp
lret
sbbb
adcb
lea
stos
jg
add
outsl
into
rolb
rorl
pop
cmc
test
mov
clc
mov
aaa
inc
mov
call
xor
outsb
cmp
or
cmp
cmovge
add
pop
or
shlb
or
sub
icebp
sar
aas
mov
jne
je
shr
mov
add
aaa
rcrb
push
test
mov
dec
inc
fisttpll
outsb
add
fsubrl
sub
mov
mov
mov
and
mov
js
loopne
cmpsb
popf
inc
cltd
sbb
stos
mov
push
ja
add
push
lahf
cmp
aam
xor
sub
cmp
lret
in
jbe
mov
lret
les
adc
add
inc
or
jecxz
mov
sarl
mov
and
sbb
imul
push
push
lds
loopne
fistpl
test
or
fistpll
xchg
mov
loopne
lods
and
lret
sbb
or
jle
mov
repnz
es
hlt
stos
jg
push
pop
popa
enter
shl
or
enter
add
sub
jmp
ds
sbb
repnz
add
sbbb
lea
dec
movsl
push
lea
jecxz
sbb
xchg
cmp
xchg
cmpsb
push
fcompl
jns
leave
scas
push
push
dec
rcr
outsl
inc
hlt
inc
repnz
icebp
dec
mov
clc
and
inc
sbb
cs
int3
ss
hlt
shlb
mov
xor
cmpsl
rcrl
movsb
xlat
out
push
adc
sarb
scas
adc
add
aaa
xor
in
cli
std
test
sbb
inc
mov
and
sbb
scas
mov
adc
test
cmp
pop
fnsave
mov
fwait
xor
into
sti
dec
stc
fildl
out
push
movsb
pop
inc
fs
dec
in
int3
adc
les
mov
mov
sbb
aam
xor
leave
movsb
jp
negb
or
int
bound
jl
mov
lcall
jg
hlt
pop
dec
addl
mov
sub
fsubrs
pop
mov
xor
mov
data16
sub
lds
mov
add
cmp
mov
pop
andl
xchg
sbbb
or
mov
adc
popa
fxch
dec
int3
aas
add
mov
aas
jno
test
add
adc
cld
cs
or
inc
addb
sbbb
xor
imul
adc
xchg
push
popf
mov
testl
stc
adc
in
in
inc
push
pop
fs
sub
xor
int3
dec
pop
inc
lock
cli
cmp
pop
or
cli
mov
sub
js
js
and
mov
add
push
mov
mov
jae
push
jo
cmpsb
pusha
inc
mov
and
or
mov
call
repnz
pop
jg
mov
std
in
add
push
icebp
mov
stos
xor
mov
push
mov
xchg
jp
mov
push
xchg
cmc
call
rcrb
sar
jns
adc
jmp
add
dec
psubsw
movsb
mov
dec
out
into
pop
pop
iret
push
push
xor
sub
fs
fs
int
cmpsl
add
in
push
mov
push
shrl
cli
pop
pushf
cmpsl
and
adc
cld
fsubrl
pusha
inc
push
and
je
or
xchg
sbb
sub
or
and
lods
sbb
sbb
or
jo
cmpsb
scas
cmp
push
fstl
cwtl
fdivs
je
jo
pop
inc
enter
mov
mov
cld
mov
inc
fcmove
dec
dec
repnz
sbb
mov
mov
or
call
adc
mov
into
xchg
jmp
cmpsl
es
fcoms
add
jle
adc
inc
out
frstor
in
cmp
xor
or
sbb
aad
incb
loopne
es
cltd
stos
push
loop
iret
inc
loopne
xor
adc
xrelease
xchg
cmp
sub
mov
xor
sti
xchg
mov
dec
js
stc
pusha
dec
testb
test
idivb
push
lret
sbb
dec
mov
orb
rcl
or
notb
loopne
jle
pusha
jl
cwtl
cmc
push
xchg
jbe
out
dec
pop
inc
int3
cld
cmp
dec
mov
popl
mov
mov
mov
jp
jle
xchg
adc
cmp
sub
into
int3
mov
push
push
mov
aaa
aam
fistps
in
xor
cwtl
into
mov
outsl
in
sbb
addb
gs
push
xchg
les
scas
jle
push
mov
insl
xchg
inc
inc
sub
cltd
rcrl
fadds
cmp
jae
mov
or
xchg
in
test
popa
js
mov
mov
xchg
add
cmp
insl
clc
mov
cwtl
jns
gs
sbb
das
lret
jo
das
addr16
test
mov
pop
xchg
clc
fwait
das
xlat
and
stos
xchg
fs
fnsave
adc
stos
mov
mov
aas
dec
adcb
mov
or
pop
lods
mov
cmc
push
shll
xchg
arpl
dec
adc
nop
pop
movsb
jnp
xchg
xchg
sub
loop
mov
mov
sub
sbbb
lods
jns
ds
xchg
cmpsl
movsb
lret
push
dec
daa
and
or
dec
gs
stos
mov
outsl
hlt
and
mov
mov
movsl
mov
sti
je
dec
int
add
push
cmpsb
cmp
andb
test
movsb
out
idivb
adc
mull
xchg
ret
mov
lea
xor
pop
xchg
aas
dec
insl
and
lds
movsb
insl
bnd
pop
mov
xchg
cmp
ret
daa
imul
mov
adc
adc
addb
mov
div
mov
inc
fisttpl
adc
pop
mov
mov
lods
outsl
inc
sub
and
mov
sub
in
push
or
cmp
enter
mov
jb
stos
xchg
es
mov
inc
push
mov
test
and
xchg
inc
lret
sub
mov
cld
pop
inc
jmp
lock
rcll
mov
fs
data16
mov
mov
ret
mov
pusha
dec
add
jns
fwait
mov
lods
dec
aam
inc
mov
xchg
xor
inc
pusha
adc
mov
dec
xchg
inc
pop
sub
mov
push
xlat
mov
push
lret
adc
sbb
sahf
and
inc
xchg
push
push
pop
daa
and
aas
in
xor
jne
push
inc
dec
or
jbe
adc
cwtl
mov
jmp
lcall
inc
mov
sub
int
hlt
bound
fimull
add
cmp
imul
out
pop
cmp
test
mov
jns
push
loop
and
and
inc
adc
nop
pop
push
pop
pusha
loope
iret
test
pop
ficompl
daa
cmp
aaa
and
loope
add
gs
jg
inc
mov
scas
and
loope
pop
out
imul
shll
popf
jns
lea
mov
idivb
imul
and
inc
mov
lcall
mov
mov
pop
movsl
data16
mov
mov
jae
shl
mov
push
jecxz
inc
and
sbb
fistps
xchg
xchg
hlt
sub
js
ss
ja
je
jp
imul
fists
mov
mov
pop
loope
test
arpl
loop
mov
pop
adc
mov
les
sbb
faddl
and
test
sub
bnd
pop
dec
xor
in
mov
cld
fs
xchg
inc
dec
and
lock
pusha
divb
ja
adc
and
outsb
outsl
xor
mov
out
fidivl
or
lcall
pop
rclb
add
push
fidivrl
stos
fsub
add
lcall
leave
stc
xchg
loop
sbb
adc
fdiv
in
adc
aas
lahf
mov
adc
jns
jbe
pusha
in
push
lcall
xchg
or
mov
jbe
bound
push
bound
cmpsl
clc
sub
or
cwtl
xor
pop
enter
loopne
test
stc
cmpsl
sbb
fstpl
imul
sub
daa
pop
pop
xor
lret
ljmp
movsl
test
cmp
pop
and
sub
out
jg
dec
sbb
out
rcrb
lods
jbe
insb
push
cmp
dec
push
xor
pop
stos
adc
cmp
inc
xchg
dec
adc
lds
xchg
xor
insb
and
xchg
cmpb
xchg
push
les
cmpsb
aam
call
cmpsl
jno
inc
rcrb
mov
jp
push
inc
jb
mov
ret
test
popa
mov
sub
pop
push
jo
dec
or
fdivrs
sbb
shrl
repz
movsl
adc
subl
popa
mov
cmpsl
icebp
hlt
insb
inc
inc
sti
loope
pushf
jg
cltd
clc
ljmp
mov
clc
hlt
lock
sarl
out
xor
arpl
inc
mov
pop
aam
sbb
lea
div
loope
je
js
clc
lret
fidivs
jae
repz
mov
mov
inc
adc
lds
fidivl
cmp
insb
in
cmp
mov
jle
xchg
outsb
xchg
loope
lods
adc
mov
cmpsb
hlt
mov
and
pop
bound
xchg
cli
mov
call
mov
jl
and
daa
movsl
xlat
ljmp
add
stos
bound
jns
ds
insl
xor
iret
adc
inc
dec
or
xchg
push
fwait
stc
cmpsl
add
pop
dec
dec
xchg
adcb
clc
insl
jmp
push
fs
cmp
xchg
hlt
out
aaa
lahf
int3
add
ja
or
rorb
sub
mov
loopne
jo
pop
addb
xchg
lods
insl
push
add
sub
sub
jae
sub
test
fisubs
inc
xchg
push
add
push
es
in
mov
ds
mov
and
mov
lret
in
sbb
dec
or
les
mov
mov
mov
push
mov
mov
sarb
jo
adc
pop
dec
gs
clc
cmp
cld
jne
sub
or
adc
fisttpl
ret
lea
in
fsubrs
pop
mov
movsl
std
dec
xor
fwait
sbb
negl
fidivs
jno
dec
nop
cmp
imul
push
pop
jl
popa
cmpsb
pop
xchg
inc
loopne
or
stc
push
fcoml
fs
mov
sub
jecxz
shrl
cmc
ret
or
shr
mov
enter
loop
pop
sbb
adcl
dec
dec
lcall
adc
push
add
out
mov
sarl
mov
pop
data16
adc
icebp
adc
loope
xchg
sub
cmp
xlat
pop
fsubrl
inc
adc
repnz
or
or
add
jg
fwait
popf
loop
sbb
dec
rclb
inc
mov
loop
test
mov
iret
xchg
jg
and
imul
xchg
js
lret
adc
xor
add
dec
dec
or
movsl
sbb
adc
mov
mov
pop
mov
xchg
outsb
dec
push
jo
mov
addr16
loope
mov
cmc
pusha
test
mov
repnz
outsl
or
push
xlat
add
jae
cmc
pop
jg
int
andb
cmp
mov
dec
cmp
fbstp
mov
xor
iret
js
push
icebp
es
pushf
int3
rcl
cmp
orl
xor
mov
bound
repz
lret
test
mov
sbb
push
jno
das
cmpsl
lods
adc
xchg
scas
push
enter
dec
popa
movlps
icebp
leave
clc
lret
std
xchg
cmpsb
adc
insb
inc
idiv
mov
cmpsb
jns
pop
addr16
add
jecxz
cwtl
rcll
jne
leave
sahf
cltd
push
aam
int
adc
stos
mov
imul
loope
xor
jns
bound
pop
fwait
neg
add
gs
add
stos
jo,pt
fwait
xor
push
jne
aas
push
or
push
stos
sub
inc
in
fildl
mov
mov
fmulp
loope
mov
imul
imul
and
fadds
lret
push
xchg
out
mov
test
xlat
sarb
push
mov
mov
sar
das
in
pusha
lcall
dec
imul
and
inc
lret
and
push
push
out
dec
jo
mov
push
lds
fimuls
xchg
insl
mov
hlt
cmc
mov
xchg
mov
cmpsb
push
inc
stos
push
int
and
pop
add
ficomps
pop
ret
in
lcall
and
mov
pop
mov
and
xor
sti
jne
pop
pushf
xchg
mov
or
jns
repnz
mov
sub
pop
into
clc
mov
test
loope
imul
xchg
jp
mov
mov
insb
ficoms
xchg
inc
sbb
xorb
or
lcall
pushf
mov
je
jns
mov
daa
shl
pop
repz
sti
dec
push
push
imul
sub
out
pop
xchg
call
repz
data16
jae
dec
pushf
jle
cltd
adc
sub
lcall
mov
cltd
ja
pop
pop
jb
push
adc
mov
mov
jge
xchg
js
dec
adc
daa
fldcw
lock
mov
or
xchg
or
je
mov
cmp
insb
lea
in
cwtl
pusha
cwtl
cli
sbb
fists
outsl
outsl
imul
mov
or
jae
cltd
je
fldenv
aas
cmp
sub
out
xor
fwait
add
lods
mov
mov
add
push
std
add
pop
aas
pop
xor
dec
fdivrs
js
push
jg
unpckhps
out
mov
enter
outsb
lock
xchg
test
sub
cs
ds
sti
cli
fwait
nop
scas
stos
xchg
jle
sbb
cwtl
add
arpl
sahf
sub
mov
test
imul
mov
pop
mov
faddl
inc
mov
mov
movsb
lods
insl
sbb
jp
js
fs
xor
imul
rclb
xchg
add
sbb
insb
dec
pop
pushf
or
push
les
add
call
push
push
lret
or
push
pop
or
or
rcll
sub
jecxz
or
add
lods
pop
mov
cli
add
test
inc
lret
mov
cmc
andb
add
cmp
adc
push
lahf
enter
adc
lcall
test
pop
mov
mov
lahf
loope
in
xor
cmc
pop
in
and
add
and
js,pn
mov
mov
xor
push
das
and
jp
sti
ret
das
cmp
xor
jge
cmpsl
adc
in
add
popa
fmul
mov
stc
mov
call
mov
scas
adc
loopne
sti
imul
dec
lahf
lret
sbb
cmp
ljmp
and
lock
fists
pop
push
ds
sahf
dec
lea
pop
cmc
jo
xchg
cmpsl
aad
jg
cli
xor
stc
pop
mov
mov
jle
mov
lock
std
pop
lret
jecxz
inc
mov
xchg
add
mov
call
cmp
push
pop
negl
repz
pop
cmp
sub
icebp
xlat
les
lahf
lods
pop
lretw
data16
mov
sbbl
pop
xchg
mov
mov
mov
iret
add
cld
out
add
adc
mov
fwait
cmp
stos
lea
push
push
stos
pop
ljmp
mov
cmp
das
xchg
pop
lock
insb
mov
and
push
insb
sbb
dec
icebp
arpl
sarl
pusha
jno
scas
sub
inc
stos
mov
jno
pop
jne
sub
inc
decl
pop
push
and
mov
dec
in
sbb
and
test
fsubr
rclb
add
inc
fisubs
or
cli
dec
negl
inc
cld
dec
xor
rcr
xor
cmpsb
mov
out
inc
sub
call
xchg
sub
loop
scas
in
cld
xor
push
pop
mov
adc
and
sub
pop
shl
das
dec
sbb
cmp
in
movsb
lret
adc
out
imul
sub
and
pop
addb
xor
pop
outsl
fisttps
sbb
push
js
insl
data16
lcall
adc
fistpl
jle
mov
in
iret
ret
lret
mov
stos
movsl
mov
cmp
xchg
mov
ds
mov
aaa
and
mov
mov
int
fists
xchg
fxch
cmp
cltd
jne
mov
jge
xor
pop
jmp
xor
push
gs
mov
or
add
adcl
std
mov
pop
outsb
adc
inc
call
divl
int
mov
roll
mov
mov
dec
divps
loopne
dec
or
icebp
xchg
repz
xchg
lahf
outsb
adc
lods
or
sub
xchg
mov
xor
mov
mov
mov
lret
add
mov
push
pushf
add
repnz
testb
shll
jbe
es
rorb
push
adc
push
cmp
inc
lcall
insl
jo
cmpl
pusha
push
jl
add
mov
std
inc
cmp
fistps
aad
adc
repnz
or
jecxz
mov
stos
xchg
ficomps
jbe
divl
jnp
and
sub
push
lods
in
inc
mov
lret
cmc
mov
andb
sti
stos
cmp
aam
scas
pop
or
jmp
cwtl
sub
lea
ljmp
and
cld
push
cmp
inc
sbb
mov
and
cmp
ficoms
outsb
icebp
lret
aam
push
lds
and
mov
mov
add
lahf
push
mov
mov
mov
mov
icebp
decb
in
inc
push
ret
inc
outsl
xchg
cltd
andb
xlat
adc
mov
ds
cli
cmc
inc
pushf
outsb
sbb
mov
jmp
mov
push
cmp
inc
pop
mov
es
xor
fst
lret
enter
sbb
and
mov
inc
fwait
mov
mov
insl
icebp
sbb
or
and
sub
push
mov
imul
sub
or
popf
cmc
or
cmc
mov
pop
jae
mov
inc
sub
fdivrs
je
push
ret
out
insb
pop
js
pop
mov
cli
pop
hlt
mov
std
in
test
shll
push
inc
rcrb
jo
dec
push
or
mov
jb
adc
mov
push
sbb
cmp
aas
stc
cmp
xchg
inc
and
out
sub
dec
mov
out
xchg
and
mov
dec
add
repz
mov
leave
jnp
inc
jo
pop
inc
mov
sub
dec
sub
cmp
shll
xchg
xchg
or
out
jbe
dec
xor
lods
out
push
xchg
out
pop
addl
sti
clc
sbb
mov
icebp
mov
iret
fcoms
fwait
rorl
imull
pop
add
fsubrl
cmp
mov
jae
sub
lahf
sub
aas
out
adc
mov
iret
insl
push
cli
xchg
int
test
mov
test
add
cmp
pop
in
test
jb
dec
dec
sahf
int
or
adc
jo
xor
bound
lret
xor
cmp
stos
push
pop
pop
ds
shrb
cmp
jae
cmp
inc
out
cltd
shlb
push
fimull
ja
cmpsl
push
fldcw
jge
lods
mov
stos
int3
mul
insb
adc
out
mov
fs
mov
bound
rolb
nop
shl
mov
std
lret
pusha
int
ficompl
sub
fwait
inc
inc
mov
push
adc
ret
out
lods
push
dec
or
lds
ret
adcl
enter
xchg
movl
adc
push
out
dec
xchg
push
loop
scas
lods
cmc
in
or
push
aam
adc
and
cmpsb
pop
adc
or
adc
fisttpl
out
xor
inc
xor
les
mov
mov
lcall
sub
mov
jbe
mov
inc
repnz
sbb
cmp
adc
aad
lods
pushf
das
mov
leave
push
pop
mov
aas
dec
push
test
or
push
insb
and
outsb
dec
pop
stc
jle
pop
cmp
sbb
pop
inc
adc
sub
add
lods
or
add
jg
ret
ljmp
jbe
or
inc
call
lds
xorb
add
and
stos
or
mov
jmp
ljmp
and
dec
mov
or
ror
add
cmpsl
repz
pushf
cmpb
or
rorb
jecxz
scas
pop
fcmovnbe
add
idiv
in
clc
mov
fisttpll
add
jmp
sbb
cmpsl
dec
mov
jae
insb
adc
mov
adc
mov
jno
fwait
andb
ret
push
sbb
inc
dec
jp
scas
xchg
cmpsb
or
push
daa
and
pop
out
out
cmp
popa
ret
dec
add
mov
shll
pop
jle
je
dec
jno
hlt
cmp
mov
add
int3
cwtl
aad
pop
fwait
mov
cmp
in
jg
xor
mov
xor
cmc
fcom
into
insb
jne
dec
stos
adc
hlt
mov
loopne
sbb
jns
sahf
and
lahf
push
mov
imul
pop
cmp
pusha
add
lds
xchg
jbe
or
or
mov
les
mov
dec
or
rcrl
push
and
mov
mov
pop
dec
jp
mov
test
push
mov
lret
in
ja
shrl
inc
enter
push
inc
jmp
mov
push
fistpll
push
and
mov
and
or
pop
mov
inc
mov
shr
mov
sti
xchg
cmp
fisubl
daa
jmp
mov
iret
mov
divb
in
jecxz
push
lahf
xchg
xchg
shrl
sub
aad
mov
cwtl
xor
cwtl
dec
mov
inc
mov
xchg
lahf
cli
adc
xor
push
rcrl
and
pop
jns
enter
xor
mov
push
jp
insl
jp
dec
in
dec
and
push
movsl
jp
cmp
push
dec
vmovdqu
cli
jno
aam
jnp
lods
in
iret
mov
dec
adc
ficomps
jno
add
rcr
push
push
cwtl
inc
addr16
test
mov
movsb
or
xchg
push
mov
roll
lcall
mov
addr16
sbb
push
fs
jp
outsl
les
mov
aas
cmp
xor
mov
fcom
pop
paddw
or
lret
fstps
mov
xchg
inc
fimuls
jmp
jb
nop
dec
inc
xchg
mov
add
popa
jno
mov
mov
fwait
insl
sbbl
int3
nop
shl
cmc
mov
pop
inc
int3
mov
xchg
scas
sbb
push
clc
xor
jecxz
stc
imul
or
mov
fldenv
outsl
sti
andl
insl
aad
in
ja
test
out
add
add
out
mov
out
xor
push
adc
mov
out
pop
idivl
pop
sub
divb
jmp
mov
inc
ljmp
mov
and
sub
mov
jge
lods
fs
aaa
jbe
or
add
ret
test
sti
add
sub
repz
dec
push
daa
mov
test
dec
pop
xchg
gs
xor
sub
dec
inc
push
mov
loop
call
jmp
push
cmpsl
mov
cmp
mov
lock
pop
idivl
cmc
adc
test
ss
fsubp
push
mov
insl
mov
outsl
sarb
inc
in
pop
cltd
mov
std
insl
mov
xchg
ds
enter
lahf
mov
repz
insb
popf
pop
push
or
push
inc
insl
mov
in
or
shlb
jle
lock
jecxz
outsb
popf
sbb
call
xchg
jge
push
aas
xchg
xchg
in
dec
aas
clc
mov
ss
inc
negb
mov
add
movsb
mov
cld
stos
out
sbb
fmuls
data16
pop
jge
xchg
aaa
popa
gs
out
dec
sbb
jns
scas
add
add
or
call
es
mov
ret
add
jle
inc
mov
jp
and
cli
push
mov
ret
lock
outsl
inc
mov
movsb
lahf
arpl
rolb
out
subb
lret
pop
sub
scas
rcrl
mov
inc
stos
fbstp
neg
sub
outsb
int3
xor
aad
mov
mov
and
xor
rcrb
shlb
cmp
aad
les
aad
popa
jp
xor
stc
out
fistpl
insl
or
sub
insb
out
ret
adc
adc
sub
into
or
ss
outsb
adc
push
jb
or
leave
std
mov
mov
push
mov
shrl
test
xchg
sbb
mov
les
pop
jns
idivb
adc
ret
xor
xor
mov
insl
mov
xchg
jnp
lcall
or
xor
inc
out
push
xchg
ljmp
dec
pop
aam
jbe
dec
dec
sbb
xor
loope
jp
dec
cmp
add
mov
cmp
xrelease
shlb
ja
add
std
mov
sarl
lods
les
iret
jns
mov
clc
sbb
cmp
cmp
mov
adc
shl
push
movsl
xchg
fisubs
adc
bound
push
scas
cmp
fnstcw
lea
pop
stos
fimull
stos
sbb
idivl
add
sub
xchg
xchg
std
push
fstl
orl
lcall
lock
shlb
xor
pop
into
add
aad
adc
add
shlb
ja
cs
loop
mov
inc
and
and
inc
test
aad
sbb
test
sti
sub
retw
pop
shrb
pop
movsl
pushf
xor
rorl
push
push
cmp
inc
in
shl
gs
cld
pop
push
xchg
sbb
add
xor
fstps
add
std
pop
jb
mov
add
add
out
mov
sbb
lret
lods
fdivl
clc
les
movsb
sub
add
lret
adc
mov
jno
jne
aas
push
add
ljmp
jne
inc
sbb
ljmp
jbe
xor
sub
data16
sub
ret
les
roll
push
fnstsw
scas
push
cld
cwtl
sub
sahf
sbb
push
inc
cmp
mov
mov
sbb
pop
cmp
cmp
sbb
push
or
pop
lret
lods
ja
add
out
sbb
pop
pushf
repz
les
cmpl
daa
outsb
dec
das
testb
sbb
xor
jge
xchg
push
cmpsb
and
xchg
fldcw
xorb
lcall
mov
out
mov
mov
movsb
jnp
lea
cmpsl
dec
add
aad
or
mov
ss
dec
pop
mov
cmp
mov
imul
lods
ret
xor
aad
hlt
test
test
mov
iret
push
mov
add
or
xchg
mov
pop
add
jg
mov
ds
cmp
je
and
jbe
outsb
push
and
stos
jae
loopne
fs
or
mov
sti
lret
lahf
cltd
push
mov
or
fstl
fwait
sub
sub
je
xchg
pop
and
jp
arpl
mov
cltd
js
cmp
in
ret
das
add
jno
push
pop
and
rcl
repz
mov
mov
cltd
jno
stos
or
inc
xchg
ja
or
push
leave
sbb
lea
popf
mov
outsl
in
cmp
lds
adc
mov
test
stc
lret
xchg
imul
fisubl
push
pop
pop
lods
mov
loope
repz
mov
push
loop
sbb
in
sub
test
xchg
push
mov
adc
out
loopne
add
cmp
jmp
mov
add
sub
sbb
sub
xchg
lret
inc
clc
xor
lcall
adc
sbb
cmp
sub
cs
dec
push
or
dec
push
inc
push
push
icebp
fistps
pusha
imul
pop
mov
loopne
iret
pop
ds
push
shlb
in
xor
mov
xchg
sar
adc
mov
repz
fs
inc
mov
jmp
out
sbb
mov
cmpl
or
xchg
xlat
out
xor
bound
push
dec
xchg
adc
insl
mov
push
lret
mov
inc
lock
mov
push
add
imul
lahf
pop
jp
xor
xor
jecxz
jge
jbe
shlb
shlb
cmpsl
fldt
stos
or
pop
loop
ljmp
pop
mov
dec
xchg
and
idiv
cmpsb
arpl
and
loopne
jl
xor
pop
inc
sub
mov
mov
inc
mov
adc
test
push
aas
loop
and
mov
dec
int
pop
add
add
andb
aaa
xchg
jo
rcl
stos
inc
shlb
inc
sbb
pop
jo
aad
inc
dec
mov
mov
mov
push
call
in
out
sub
xor
pop
or
jnp
pop
in
jae
fidivrl
adc
in
jl
cmp
lds
outsl
ds
dec
mov
int
fdivrp
mov
addr16
pusha
jae
int
fistpl
jae
push
sbb
and
pop
shrl
mov
fcmovu
mov
push
inc
xor
xchg
xchg
loope
xchg
fstp
les
mov
test
scas
clc
ret
xchg
iret
loop
sbbl
sbb
push
jno
and
adc
xor
mov
outsl
pop
sbb
in
mov
repz
sub
inc
dec
aad
outsl
push
inc
add
add
stc
cmp
lock
add
cmpb
lcall
into
out
fs
xchg
out
pop
xchg
addr16
insl
inc
and
push
and
sub
lds
inc
jo
stos
js
jns
into
roll
test
sbb
scas
jl
aad
push
popa
mov
or
jle
lods
jns
outsb
lock
movsb
call
mov
or
pop
arpl
shll
rcr
or
les
scas
das
pop
push
xor
lret
mov
stc
fnstcw
and
cld
mov
add
or
out
repz
out
enter
push
sbb
test
jg
pop
mov
jbe
loop
dec
fiadds
mov
andl
xchg
and
lds
jle
xlat
les
cmp
in
pop
sbb
insl
les
or
ljmp
in
iret
xchg
and
das
clc
mov
push
hlt
jno
lcall
stos
cmpsl
add
loopne
into
push
inc
lret
aam
stos
aam
cltd
mov
pop
push
mov
fnsave
cmpsb
stc
adc
lahf
loop
jl
add
into
popa
repnz
enter
xor
aaa
lret
dec
jb
add
and
cmpsl
xlat
fisubs
addr16
pop
and
pop
fs
jle
iretw
jmp
pusha
push
jne
cmp
daa
mov
iret
jo
push
daa
fdivl
mov
enter
jae
xor
pushf
sub
sbb
cmp
or
mov
leave
loope
mov
jb
addr16
js
push
pop
popf
or
inc
dec
fsubrl
ljmp
jno
ljmp
das
repnz
imulb
addl
mov
aam
vphaddbw
sub
clc
push
mov
jne
jl
dec
push
popa
push
xchg
mov
xchg
inc
jnp
cmpl
jp
jp
imul
xor
out
les
add
mov
push
sub
adc
mov
inc
xor
arpl
aas
jg
in
lea
addb
xchg
jecxz
lods
inc
add
xchg
pop
pop
adc
nop
cmp
xchg
jp
pop
sub
inc
adcl
sbb
rorl
es
sbb
std
and
fcmovu
icebp
mov
xor
mov
ds
js
mov
inc
push
push
sti
cltd
xor
mov
push
shrb
loop
incb
stos
push
es
xchg
mov
mov
xor
jp
lock
leave
mov
xor
xchg
divps
testb
enter
and
sbb
stos
int3
mov
push
ficompl
pop
sbb
insl
inc
push
loopne
adc
test
cld
adc
popa
jo
sbb
jge
jecxz
add
jns
nop
mov
jne
dec
jmp
mov
sti
cld
xchg
hlt
fwait
add
or
imul
lods
sbb
imul
xchg
enter
outsl
dec
mov
out
jmp
add
lods
add
mov
xchg
push
dec
lds
or
dec
cli
sub
stos
push
iret
inc
cmp
ja
loop
adc
jge
lahf
cmp
cmp
mov
fimull
jmp
inc
test
lcall
into
jbe
push
push
stos
aam
jne
aad
adc
loope
xchg
stc
jbe
fcmovnb
sti
pop
fiadds
dec
arpl
cs
jp
mov
cwtl
lahf
lods
mov
gs
pop
add
jg
xchg
cmp
xlat
ror
mov
push
sbb
mov
sbb
rorb
inc
addr16
mov
and
push
dec
push
ljmp
mov
add
fcoms
int3
dec
xchg
add
repnz
xor
in
push
push
mov
push
pop
lret
sbbb
fiaddl
mul
pop
mov
xchg
jae
fsubp
fxtract
gs
je
fsubl
scas
sar
mov
xchg
or
loopne
jne
sarl
xchg
jne
and
hlt
pop
popf
sbb
pop
adc
mov
mov
push
xor
scas
icebp
dec
push
je
enter
in
test
adc
lret
mov
mov
inc
jge
jb
in
clc
add
fisttps
in
mov
enter
js
xchg
sbb
incb
push
lods
xorb
enter
test
mov
loopne
lods
adc
fs
repnz
sbb
add
or
jp
jbe
inc
popf
repnz
neg
nop
mov
test
mov
sub
cmpsl
push
sbb
mov
lea
bound
repnz
or
out
mov
add
pop
pop
lcall
adc
pop
sahf
mov
insl
aam
popf
repnz
cmp
clc
jl
gs
xchg
scas
lret
arpl
push
int
leave
add
cwtl
cmpsl
push
loopne
pop
mov
out
sub
mov
je
int3
std
xchg
dec
neg
ret
dec
clc
hlt
and
pop
fdiv
or
cwtl
mov
ljmp
mov
fs
or
repz
mov
cs
sbb
inc
push
sbb
pop
sbb
inc
or
pop
and
and
fldl
repnz
stos
cwtl
mov
jg
out
pop
or
icebp
cmpsb
cmp
lock
das
je
sub
loop
jecxz
popf
or
sbb
push
stos
lahf
mov
cltd
jp
push
mov
scas
inc
dec
jecxz
pop
xor
xor
out
out
movsl
jns
int3
push
daa
bound
movsw
into
fldl
or
mov
scas
mov
cmp
adc
inc
hlt
jl
test
sub
add
add
add
add
aam
adc
jno
or
push
inc
mov
xor
jg
sub
sahf
out
inc
in
push
pop
jbe
repz
inc
pop
rcrl
sti
xchg
adc
pop
xchg
iret
in
pop
enter
aam
arpl
xchg
out
inc
lock
popf
dec
pop
das
jg
xchg
jg
sti
jne
mov
pusha
sub
mov
ljmp
jge
rcll
add
jno
cmc
out
pop
out
adc
enter
push
ret
adc
rolb
pushf
and
mov
sbb
jne
push
xchg
stos
sbb
mov
or
xor
lcall
fs
out
mov
std
cmpsl
and
pop
sub
adc
inc
nop
fidivrl
pop
add
outsl
push
mov
add
sbb
or
mov
jae
fstpt
test
jmp
jge
lret
add
xchg
inc
mov
stos
insl
add
push
bts
cmp
add
aam
push
test
insl
mov
popa
cld
int
xchg
insl
dec
mov
fsubrs
mov
sub
fs
jecxz
mov
cmp
jg
dec
push
cmpsl
rcr
hlt
stc
dec
xor
test
lret
jb
int3
push
pop
sbb
sbb
inc
out
pop
inc
pop
mov
and
adc
in
inc
jl
pop
push
push
stos
jae
inc
mov
gs
and
jg
idivl
lods
cmp
cwtl
fmuls
mull
push
das
rorb
rcll
pop
loope
dec
xchg
outsl
add
push
push
sahf
icebp
inc
adc
mov
dec
cltd
aaa
and
xor
stos
sub
out
xchg
outsb
dec
inc
jg
lcall
or
mov
inc
mov
ja
call
stos
and
pop
push
mov
in
cmp
fcoms
xor
pop
repz
sub
push
sub
popf
add
clc
sub
jle
add
mov
sub
shll
sbb
addr16
mov
mov
push
int
inc
mov
mov
mov
mov
pop
adc
cmp
outsb
adc
repnz
mov
pop
cmp
inc
es
cmp
add
addr16
sbb
cwtl
push
xor
popa
shrl
cli
jge
fisttps
pop
insb
or
imul
add
imul
dec
sbb
jb
flds
or
psllw
imull
dec
rclb
cltd
enter
and
out
cmp
ja
jg
mov
les
adc
cwtl
inc
xor
mov
lods
dec
fs
dec
inc
test
pop
cli
mov
out
fildll
ficoms
sahf
shll
arpl
xor
pop
addr16
je
shlb
jge
loope
sub
inc
dec
ja
add
cld
hlt
stos
aam
mov
in
test
pop
inc
inc
in
mov
cmp
mov
pop
mov
fimuls
xor
fildl
jb
mov
fistl
add
sahf
cld
mov
ljmp
insl
lock
mov
jge
xchg
pop
xchg
cltd
push
stos
mov
outsb
mov
sbb
cmp
icebp
int
mov
inc
xchg
cs
sahf
mov
outsl
xchg
mov
or
pop
outsb
fiadds
cmp
test
iret
cld
push
dec
les
repnz
movsb
xor
imul
or
add
add
add
cmp
ja
push
cmp
mov
aam
mov
incb
cmp
mov
or
int
xchg
cmp
xchg
addr16
fildll
xchg
cmpsb
cmp
in
jns
test
jns
popa
mov
inc
and
mov
ret
mov
test
scas
loope
or
push
xchg
inc
sbb
jb
rcl
sbb
arpl
or
clc
decl
mov
pop
xor
mov
xor
or
jnp
push
push
jno
int3
push
mov
pop
int
inc
and
insl
inc
pushf
pop
push
repz
mov
and
rclb
sub
mov
pop
mov
xlat
ljmp
lcall
mov
sti
cmp
sbb
test
leave
vpavgw
dec
mov
in
xor
iret
adc
dec
nop
jl
enter
cmc
xchg
mov
jns
push
pop
mov
cmc
sub
rcl
mov
subl
cltd
and
mov
out
mov
out
daa
daa
movlps
xchg
scas
sub
add
push
cmpsl
aaa
fldt
xor
decl
xchg
sbb
inc
xchg
outsl
rorl
dec
mov
pusha
cli
push
ja
lcall
push
sub
push
push
and
in
jnp
mov
mov
in
nop
inc
mov
or
push
lret
pusha
pop
stc
jl
fwait
aam
xchg
sti
mov
pop
cmp
ss
and
adc
xor
mov
cwtl
aam
in
cmp
stc
pop
sarl
pop
leave
negb
fadds
fsubrp
call
mov
loope
pop
in
sub
shlb
out
clc
xor
dec
ljmp
mov
jge
outsl
jmp
lret
pop
ficomps
movsl
xchg
rcr
xorb
popa
ljmp
sub
and
mov
cmp
sub
cld
xchg
xor
pusha
div
mov
jbe
jmp
std
pushf
pushf
lahf
push
push
or
int
push
leave
mov
mov
cmp
popf
aas
adc
cmp
cmp
xlat
stos
mov
stc
mov
inc
addr16
pop
and
jmp
test
das
jnp
scas
scas
mov
xchg
mov
popa
jns
arpl
in
in
rorb
testb
stos
aad
jnp
loop
xchg
mov
subb
insl
xor
repnz
imul
inc
jnp
fildl
and
cmp
insl
add
out
je
scas
leave
outsb
fwait
sahf
aaa
and
test
and
push
push
sbb
dec
push
fnstcw
dec
inc
jl
pop
mov
clc
mov
sbb
out
sub
mov
push
and
inc
xchg
or
lods
dec
inc
gs
pop
das
cwtl
dec
or
into
fwait
mov
mov
xchg
sbb
mov
sub
sub
or
fcmovnu
lahf
clc
or
repnz
pop
push
or
push
sarb
fisubrs
rcr
or
inc
jbe
mov
cmpsb
xchg
lods
push
sarb
bound
stos
push
push
stos
out
push
xchg
jne
stos
or
idivl
in
fcoml
push
bound
inc
movsl
ss
inc
mov
aas
scas
sub
mov
std
js
inc
push
xor
lret
or
movl
jne
imul
stos
or
rorb
test
imul
repnz
out
fxch
pop
iret
xchg
iret
loopne
nop
mov
sub
inc
ds
or
push
mov
outsb
test
mov
mov
push
and
inc
pop
test
sahf
loope
aad
mov
sbb
pop
jnp
nop
jbe
mov
sub
movsb
nop
pop
insb
sbb
std
add
pop
pop
adc
in
push
dec
int3
xlat
test
aaa
shr
clc
push
lret
pop
or
aam
sarb
inc
mov
mov
int3
sti
push
dec
push
fwait
in
les
xor
jecxz
call
lock
sti
add
pop
popa
push
or
cmp
dec
in
adc
or
test
xchg
fcmovnu
lcall
daa
dec
faddl
movsl
mov
addr16
cmpsb
addb
roll
add
inc
xor
push
or
mov
and
xor
mov
cli
mov
ja
sbb
rep
inc
pop
mov
mov
mov
daa
xchg
out
add
xor
cmp
adc
push
popa
aam
pop
jb
xor
js
outsb
loopne
loopne
test
fsubrl
sub
out
mov
cmp
fs
push
jne
int
push
sbb
add
inc
pop
js
cltd
rolb
aaa
ja
pop
push
jno
pop
loope
rcrl
scas
rclb
loop
sbb
mov
xlat
cmp
imul
jnp
es
aam
inc
bound
test
sub
pop
inc
fnstsw
mov
pushf
push
jae
out
mov
mov
cmpsl
sub
mov
xchg
scas
mov
fistl
add
rclb
pushf
icebp
push
flds
xchg
sub
lret
cmpsl
cmp
js
jne
inc
cmp
ficompl
ror
sub
movsl
pop
in
mov
mov
leave
bound
data16
dec
add
and
movsb
pop
movsl
or
outsb
gs
xchg
xchg
ds
xor
test
sub
loope
cmpsb
and
repnz
lods
xor
xchg
or
cmpsb
repnz
fcomip
jns
fidivs
ss
imul
lods
mov
mov
and
aaa
pop
inc
push
test
pop
jo
insb
push
push
pop
test
aaa
push
ret
repnz
scas
sbb
mov
data16
ss
lret
jl
pop
loope
int3
negb
cmp
jbe
mov
push
sbb
pop
setp
clc
pop
mov
nop
mov
cwtl
mov
daa
add
shl
addr16
sbb
out
push
fdivrl
or
bnd
leave
inc
adc
out
sarl
inc
dec
repz
cmpsl
arpl
and
xor
popa
call
pop
xchg
sbb
out
jns
mov
hlt
pop
enter
mov
dec
lahf
mov
and
sti
push
stos
dec
and
and
ds
and
shlb
addr16
in
mov
frstor
dec
and
fstl
pop
adcb
por
or
sarb
imul
mov
icebp
xchg
sbb
sub
push
jbe
imul
stc
int
mov
xor
sbb
mov
inc
mov
or
jne
pop
adc
adc
mov
cwtl
xor
sub
dec
clc
and
cmp
ficomps
cltd
xchg
das
jge
xchg
in
nop
mov
add
sub
sahf
clc
out
jp
movsb
push
les
lret
inc
xor
cmp
or
les
punpcklbw
inc
push
mov
xor
jl
mov
sarb
jmp
hlt
sub
sub
xor
in
dec
cvtpi2ps
enter
jno
in
mov
or
lods
divl
out
cmpl
lcall
add
pop
dec
js
in
cmpsb
xor
mov
aas
dec
rolb
pusha
adc
sbb
pop
fmul
sbb
stos
sub
sbb
mov
add
lret
adc
mov
xlat
mov
fbld
jecxz
lret
ficoms
mov
mov
mov
icebp
jo
or
adc
mov
push
jne
test
les
test
ds
into
xor
xchg
out
loopne
in
ljmp
out
cmc
test
xor
out
in
cmp
mov
mov
int
pop
out
mov
ja
aam
insl
dec
pop
pop
add
cli
dec
bound
mov
jne
lods
pop
pop
sbb
mov
iret
push
imull
jo
cmp
jecxz
pop
mov
add
and
hlt
sbb
insb
je
push
push
adc
sahf
nop
lcall
mov
jns
call
xor
sub
out
or
daa
and
sub
mov
iret
lods
cs
cmpsb
imul
inc
dec
adc
xchg
cmp
insl
scas
xor
insb
cmp
dec
insb
sbb
gs
pop
pusha
std
mov
jbe
cs
jl
jg
aad
sahf
lock
and
imul
add
dec
fdivrp
adc
in
imul
out
adcl
push
inc
imul
push
mov
enter
insl
sub
sbb
mov
dec
jnp
rol
jecxz
int
xchg
shlb
mov
outsl
inc
push
inc
xchg
int3
testl
lcall
xchg
mov
jae
shlb
mov
xchg
aam
loop
dec
in
xchg
outsl
adc
or
stc
xchg
das
or
call
andl
xchg
scas
adc
xor
push
push
or
pop
inc
adc
and
cmp
mov
mov
dec
push
mov
into
pop
push
cmpsb
int
loope
lea
movsl
or
test
orl
sbb
cmc
call
pop
std
iret
inc
jmp
notl
adc
and
pop
icebp
or
jbe
jno
or
movsb
aaa
in
fcomps
sub
mov
pushl
xchg
pop
add
adc
pop
lods
jno
arpl
or
jb
insb
add
fsub
pop
pop
outsl
aas
xor
movsb
std
bound
xor
inc
cltd
sbb
adc
stos
std
negb
arpl
add
add
fucomip
lods
dec
sbb
ret
inc
pop
call
sub
fisubrs
loopne
sub
add
jmp
clc
push
pop
jp
out
push
sub
xor
xor
test
sbbl
out
xlat
push
stos
mov
nop
add
cmpl
shll
push
lret
ret
aaa
pop
push
adcl
dec
sub
sub
cmp
sbbl
std
cmp
xchg
add
xchg
pop
sbb
adc
sub
repnz
fisubrl
jb
les
cmpl
pop
pushf
aam
ret
subl
cltd
add
inc
push
add
mov
sbb
inc
push
xor
sub
add
jo
xor
shll
hlt
leave
push
add
ret
sub
out
fnsave
out
jle
mov
mov
aaa
out
in
mov
insb
das
lock
or
jecxz
mov
bound
push
adc
push
push
jg
scas
sbb
or
push
push
or
jl
std
push
jo
aas
rorb
stc
fsubl
hlt
or
mov
leave
mov
fldenv
mov
cli
inc
stos
jmp
push
ret
repnz
mov
hlt
enter
push
mov
add
out
subps
leave
or
jae
scas
out
call
shlb
sub
jno
xor
jo
pop
push
popf
mov
in
loope
sbb
cmpsl
mov
in
or
push
lods
call
das
inc
dec
insl
sbb
lret
or
loopne
repnz
and
jg
rcrb
mov
movsb
call
in
fimull
fwait
xchg
and
out
out
mov
ret
mov
mov
push
xchg
xchg
or
hlt
add
xchg
push
mov
add
test
xchg
mov
mov
in
pop
clc
rcrb
jg
mov
sti
mov
pushf
ljmp
popfw
gs
popa
and
movsb
cmpsl
lods
adc
out
and
or
mov
pop
loopne
rclb
pop
or
jnp
mov
bnd
pop
testb
in
arpl
aaa
dec
mov
pop
in
lds
test
push
add
divb
xchg
inc
cli
mov
imul
ds
sub
sbb
pop
push
aad
stos
icebp
xchg
and
shlb
push
jp
movsb
lret
sbb
adc
or
pop
movsl
push
bound
jp
jmp
lods
add
call
jo
mov
call
xor
shlb
mov
jecxz
push
sub
add
jp
ficompl
pop
pop
sub
jmp
daa
cmp
mov
cltd
xchg
add
or
add
fcoml
in
lcall
icebp
or
aad
adc
inc
call
adc
cmp
pop
or
mov
sub
or
push
sub
jle
outsb
ja
cmc
add
mov
cs
or
shl
stos
xchg
jo
mov
push
imul
add
adc
rclb
xchg
sbb
ret
sbb
lock
inc
into
clc
lock
mov
fisubrs
je
mov
test
mov
xor
outsl
outsl
loope
xor
into
sub
pop
js
fwait
sbb
cmpl
add
xchg
mov
cli
loop
addb
test
aaa
clc
sbbb
cmp
icebp
adc
sub
jae
adc
xor
in
std
das
pop
dec
icebp
pushf
sbb
mov
dec
mov
sub
jmp
loope
mov
sub
cmc
mov
into
inc
addr16
sbb
ljmp
test
cmp
ja
dec
pop
enter
pop
sbb
lret
test
and
pop
mov
mov
leave
scas
push
lcall
das
cmpb
jg
aas
adc
dec
jge
mov
sbb
sub
cld
ljmp
dec
pop
mov
sub
cmc
cmp
sbb
pop
test
cmp
add
lock
sbb
sahf
sub
or
loopne
push
lahf
enter
pop
xchg
sarb
cmp
xchg
out
ss
bnd
cmp
movsb
cmp
js
mov
and
in
cmc
sub
inc
mov
mov
jp
mov
pop
xor
cwtl
pop
jmp
mov
mov
ffreep
jmp
sub
andl
mov
mov
cmp
cmp
inc
jne
mov
jno
divb
lods
push
enter
sarb
sbb
adc
in
ljmp
cs
arpl
sar
test
pop
insb
pop
xchg
xchg
iret
xchg
iret
aad
dec
loop
loope
sub
lea
scas
cmp
cmpl
and
cld
jge
xchg
fs
test
add
cli
rcr
mov
jmp
outsl
test
iret
push
call
fdivrl
dec
inc
stos
pop
cld
inc
jo
add
pusha
sti
sub
loop
cmp
jno
out
adc
add
and
fwait
jl
call
dec
xchg
pop
in
sbb
jbe
mov
aad
or
sub
or
repnz
cltd
filds
cmpb
xchg
mov
addr16
push
xor
sbb
out
xchg
cltd
lret
push
popf
dec
ret
adc
xchg
mov
cmpl
inc
xor
mov
pop
mov
xchg
lret
xchg
xchg
in
stos
loopne
sahf
xchg
jmp
nop
push
inc
stos
js
dec
cmp
imul
es
fimuls
les
sub
loope
jo
and
add
out
dec
int3
add
push
xchg
mov
or
pop
adc
xor
push
jecxz
rcll
testl
pop
mov
xchg
and
xlat
ljmp
dec
in
push
xchg
inc
add
ljmp
mov
pop
push
xchg
fisubs
jae
mov
xchg
movzbl
or
aam
add
jb
fiadds
push
clc
xchg
mov
xchg
xchg
push
cmp
pop
xor
frstor
sbb
lret
rorl
push
std
jl
pop
leave
mov
mov
fs
cmpsl
mov
in
sbb
data16
js
sub
inc
mov
push
pop
cmpsb
cs
push
pop
ljmp
ret
test
inc
sbb
fisubl
repz
negb
dec
loope
xor
xor
enter
inc
std
and
dec
mov
mov
das
push
sub
pop
mov
inc
adc
sub
lods
pop
push
push
ja
test
push
lea
std
mov
fucomip
loop
mov
mov
or
out
dec
gs
push
lret
push
sub
jae
repz
xchg
jp
jno
push
cmp
mov
lret
lcall
xchg
lret
aad
sbb
rcrl
xor
jecxz
sbb
dec
mov
outsl
movsb
inc
xor
pop
cmp
lahf
cmpb
arpl
shl
sti
gs
fwait
shll
sbb
sub
jae
inc
jb
add
inc
movsb
or
sub
lret
fimuls
jge
mov
popa
jbe
or
sbb
xchg
push
sub
jle
cmpsl
repnz
mov
mov
push
push
aaa
imul
mov
sub
leave
outsb
jnp
shlb
xchg
pushl
in
pop
pop
inc
xor
add
or
cmp
call
cmpsl
jno
fistpll
int3
cwtl
pop
mov
xor
lea
push
loope
xlat
pop
or
shl
ljmp
mov
sub
nop
test
pop
mov
out
into
imul
mov
loopne
cwtl
jb
mov
rcrl
adc
jl
and
add
xchg
jle
push
sahf
push
hlt
lock
inc
pushf
sbb
sub
call
sub
xchg
dec
mov
mov
js
push
inc
insb
jno
clc
mov
cmc
pop
rol
movsl
mov
or
xor
int3
pop
ljmp
mov
lods
xchg
stos
xchg
mov
iret
sbb
push
inc
mov
or
mov
pusha
popa
cs
dec
or
and
addr16
xchg
add
and
xor
loopne
in
xchg
mov
pop
xchg
jle
aaa
andl
mov
xorl
insb
aas
inc
xor
xchg
sub
adc
in
bnd
mov
pop
push
orb
pop
and
into
lahf
mov
push
sub
dec
xor
fs
fstps
gs
cmpsl
shll
sbb
int3
sub
aam
dec
and
or
sub
lahf
xor
push
cmp
aaa
and
jp
mov
mov
mov
mov
mov
shrl
xor
pop
xchg
sub
adc
pop
daa
push
in
pop
mov
popa
mov
rdtsc
rclb
movsl
pop
pushf
pop
and
int3
test
ret
inc
sbb
sbb
popa
or
std
into
mov
push
jl
mov
in
mov
xchg
dec
aaa
jle
faddl
jp
xorb
les
pusha
orb
ds
adc
pusha
inc
nop
push
je
int
or
pusha
int
mov
sbb
sbb
push
lcall
pop
data16
imul
mov
test
mov
xor
fwait
dec
jb
mov
push
fbstp
push
mov
mov
add
lock
mov
aas
dec
lcall
outsb
dec
jl
or
mov
mov
fwait
sbb
out
movsl
std
pop
jmp
shlb
add
dec
jle
shll
sti
mov
cmp
push
jne
or
ret
bound
xchg
or
mov
pop
sbb
pop
test
out
test
ret
push
adc
mov
ds
insl
mov
lret
rcrb
sub
pop
dec
lea
stos
adc
dec
mov
mov
mov
xchg
dec
loop
sbb
inc
sub
orb
hlt
jecxz
mov
das
loop
loopne
pushf
xchg
cli
idivb
stos
add
loopne
pop
push
icebp
adc
sbbb
dec
es
out
jns
mov
add
jns
sahf
ret
testb
add
push
mov
test
push
test
xchg
scas
in
andb
mov
pop
adc
cli
mov
clc
xor
xchg
imulb
push
xor
add
mov
bound
js
push
mov
test
shll
mov
pop
and
mov
push
inc
clc
cs
inc
and
js
testl
xchg
cvtdq2ps
in
jmp
and
shl
sub
mov
stos
lret
call
jecxz
adc
test
mov
xor
inc
or
js
scas
scas
rcrl
jg
popa
dec
stos
inc
jb
ds
lods
mov
or
test
mov
add
mov
stc
xchg
movsl
insl
cwtl
adc
push
adc
mov
ret
insl
leave
mov
cmpb
lret
test
ret
jnp
lock
sbb
xchg
xchg
sbb
jmp
or
daa
mov
std
int
sbb
sub
xor
jp
jne
mov
jmp
adc
mov
fwait
ljmp
and
sub
sbb
icebp
dec
arpl
or
pop
push
lods
mov
push
int
mov
negb
cmp
sbb
out
mov
leave
sbb
sub
mov
pop
mov
pop
inc
ret
pushl
add
add
std
cli
sbb
repnz
fstl
mov
ror
add
push
repz
push
sbb
inc
xlat
add
sbb
in
mov
pop
bound
mov
insb
jbe
mov
insb
stos
nop
mov
cltd
test
imul
xor
insl
in
iret
ja
push
adc
popa
mov
dec
jl
sbb
xor
stos
adc
lret
and
popa
cmp
add
push
push
sub
sub
ret
jle
cmc
jne
jecxz
pop
inc
jae
mov
pushf
sub
xor
pop
fwait
fwait
cmc
sub
fsubrp
mov
xor
addr16
xchg
pop
jp
cltd
sub
mov
pop
lea
adc
xlat
mov
addr16
xchg
ficoms
stc
mov
cmpsl
out
xor
imulb
test
add
in
mov
inc
mov
mov
mov
outsb
inc
faddl
popf
jnp
clc
in
or
and
push
outsl
int3
popf
out
sbb
in
int3
mov
mov
jmp
nop
push
out
sbb
leave
add
outsl
lock
mov
in
bound
sbb
js
shlb
fisubl
jmp
and
xchg
dec
push
loop
fdivrs
pop
pop
jnp
frstor
push
xchg
push
add
scas
mov
fnstcw
pop
jno
xchg
jecxz
pushf
jbe
and
sbb
in
les
jge
jl
fldcw
icebp
adc
jo
push
insl
sbb
sub
xor
mov
aaa
enter
and
icebp
add
and
push
movsl
in
pop
insb
mov
das
jae
daa
jno
and
push
leave
das
scas
je
lods
inc
jmp
mov
clc
aam
test
sbb
rorb
xor
cld
xchg
fwait
inc
popa
lret
xor
loopne
and
mov
pop
lock
jmp
cwtl
ljmp
cli
loope
dec
add
adc
loope
lcall
jns
cli
mov
xchg
insl
push
cli
push
sbbb
mov
cmp
jl
rorb
das
xorl
jecxz
jg
fs
ljmp
sub
fisubrs
nop
enter
sub
adc
pop
dec
imul
popf
call
stos
sbb
outsl
adc
adc
loop
push
aam
fsub
insl
stc
push
pop
ja
cld
test
add
sti
sub
fldcw
inc
push
inc
inc
sub
test
dec
popa
aas
js
add
mov
lods
adc
mov
xorl
xchg
out
dec
shrl
push
in
add
sbb
cmp
scas
fwait
cltd
add
nop
enter
dec
push
popf
cmp
fisttps
test
rcl
cmp
fmull
rorb
sub
cmp
data16
stos
mov
xor
out
push
sub
mov
insb
sahf
pop
rcrb
and
xchg
or
std
call
cmp
inc
jo
mov
incl
mov
jmp
inc
in
sbb
mov
lahf
es
ret
scas
lds
pop
jb
cmp
add
rorb
add
sahf
test
xor
mov
sub
loopne
dec
or
sbb
add
xchg
inc
into
test
or
jae
push
add
out
inc
gs
xor
xchg
or
call
adc
movl
cmp
int
cmp
test
rcll
das
int
subb
repz
arpl
cltd
leave
sub
shll
push
fnsetpm(287
and
clc
lods
call
jge
inc
test
pop
cs
adc
call
mov
mov
loop
or
into
mov
filds
sbb
inc
rcll
lods
les
addr16
mov
lods
xchg
mov
sbbb
ljmp
mov
ljmp
sbb
aas
aas
das
jp
and
outsl
jecxz
xchg
xor
ss
inc
cwtl
and
sbbb
adc
hlt
sbb
icebp
sbb
in
jno
sub
cwtl
adc
stc
pop
repz
sub
add
sarb
jg
dec
mov
or
inc
je
xchg
dec
lods
mov
fldt
dec
aad
pop
push
mov
xor
xchg
lods
test
outsb
iret
inc
push
xchg
xor
repz
aaa
jg
sbb
sti
gs
mov
dec
ret
stos
int
in
jo
jmp
sbb
out
xor
fistpll
pusha
mov
mov
loop
xchg
push
nop
mov
dec
sub
nop
test
popa
imul
push
enter
push
icebp
mov
mov
mov
add
or
pop
stos
loopne
push
int3
jns
xor
xlat
in
sbb
imul
push
cld
xor
or
adc
sbb
fcompl
imul
and
cmp
hlt
mov
push
call
or
inc
pop
cmp
outsl
out
push
push
stc
rcrl
dec
jo
clc
or
xor
in
push
dec
sbb
adc
jmp
arpl
jne
out
sarl
inc
jecxz
cltd
mov
xchg
xchg
mov
sbb
movsb
cmp
or
push
iret
pop
push
imul
cli
cmc
lock
cmp
dec
or
pop
jle
jmp
sub
push
lret
mov
ds
mov
mov
mov
shll
js
push
out
cs
pop
ret
inc
lahf
push
inc
jbe
sub
dec
sub
jae
test
movsb
pusha
scas
add
sbb
pop
and
or
push
cld
or
xor
rolb
mov
out
xchg
push
roll
sbb
mov
adc
jmp
jo
xchg
xchg
insb
mov
xchg
sbb
jns
lret
cltd
bound
pop
dec
jle
repz
mov
loop
jae
pop
popf
sub
push
pop
scas
jmp
ret
push
aad
int
mov
cmpsl
add
mov
and
out
cld
jp,pn
and
pop
fadds
cmpsl
cmp
pop
lods
cmp
xchg
mov
and
outsl
and
stos
addl
shll
cmpsl
ljmp
sbb
gs
fildl
stc
ss
adc
push
gs
jnp
fnstsw
xor
jno
inc
das
add
cmovb
pop
cmp
push
mov
pusha
outsb
pop
cmpsl
cs
fiadds
es
ja
adc
cmp
xor
popa
cmc
cltd
imul
out
popa
aam
das
mov
or
xor
mov
push
in
out
fbld
pop
lods
sbb
mov
cmp
inc
cli
cmp
cltd
pop
ss
mov
test
or
repz
rcrb
hlt
cli
ja
mov
mov
es
pop
ds
lret
xor
aaa
jp
xchg
jae
sahf
inc
out
jnp
icebp
push
push
movsb
cmc
pushw
sbb
lock
fs
jno
xchg
jge
rcr
inc
sub
jns
cmp
mov
addr16
cmp
xor
push
cmpsl
test
out
out
popa
rcrl
xchg
nop
ljmp
sbb
iret
shlb
pop
push
les
test
fisubl
cmpsl
or
cmpsl
lods
mov
icebp
pop
and
arpl
mov
inc
les
push
adc
shl
dec
imul
jecxz
movsl
adc
push
sub
enter
inc
stc
add
ret
iret
out
jb
icebp
cmp
cltd
sti
arpl
es
ss
fwait
pushf
aas
int
popa
lret
bound
daa
pop
imull
mov
jp
fiaddl
xor
es
mov
cmp
ss
out
call
mov
xchg
ds
sti
insb
or
add
mov
dec
sahf
lret
bound
pop
push
dec
jo
out
fisttpll
subb
ret
add
lods
cmc
dec
inc
mov
add
movsb
or
inc
dec
push
sub
mov
sub
xor
data16
aas
scas
cwtl
cmp
inc
add
jns
adc
into
pop
add
out
roll
jae
lock
dec
repnz
mov
dec
adc
jp
pop
jle
and
xchg
iret
in
sbb
jne
push
push
push
cmp
lds
jo
dec
xchg
or
sbb
sub
out
push
jecxz
cs
adc
mov
inc
push
imul
sub
xchg
push
sub
mov
fildl
or
bound
cltd
sbb
aas
cmp
inc
pop
fdivrl
clc
ja
rcrl
dec
fcomip
add
repnz
call
lret
mov
and
shlb
clc
sbbb
stos
pop
mov
xchg
sbb
pushf
mov
js
push
addl
jl
mov
or
imul
fisubs
rcll
jne
push
push
inc
push
jl
sub
or
cs
movsl
int
imul
iret
test
lea
iret
push
sbb
cmp
cmp
adc
pop
cmc
or
fldcw
push
push
mov
lret
mov
lock
lret
push
xchg
out
cmpsb
test
jbe
dec
xchg
cmp
xchg
mov
add
movsl
mov
pop
in
imul
mov
mov
push
dec
adc
push
mulb
nop
lret
imul
pop
or
sbb
idiv
stc
dec
inc
scas
mov
and
or
cwtl
mov
push
sbb
pop
out
nop
enter
jle
gs
jmp
push
mulb
mov
mov
out
and
rcrb
xor
jp
fwait
sbb
cmp
cmp
es
mov
std
daa
sbb
int3
push
xorb
idiv
mov
scas
imul
ljmp
jl
fdivr
out
or
xchg
das
push
add
mov
mov
add
xchg
mov
outsb
sbb
test
push
aad
test
and
int
ja
sub
fdivs
xor
repz
jo
mov
sub
jne
pop
adcb
gs
xor
insb
mov
iret
pop
lock
or
mov
mov
ljmp
mov
loopne
popf
sbb
std
mov
and
inc
sbb
sahf
shl
es
mov
jno
xchg
and
xchg
jmp
xchg
mov
push
xor
sub
movsb
jne
or
add
mov
les
idivb
inc
sti
insb
shlb
mov
fcompl
and
cmp
xchg
and
cli
repnz
insl
pop
loopne
lods
fstps
and
out
mov
stos
call
stos
pop
xchg
lahf
sbb
pop
lcall
jecxz
and
inc
xor
jb
test
fwait
pop
pop
dec
rorb
insl
xchg
cwtl
cltd
push
data16
rorl
neg
daa
mov
cmp
jl
outsb
and
mov
jo
leave
cmp
mov
sub
jl
cmp
sbb
loopne
sub
cltd
and
jge
inc
aas
mov
dec
cmp
jo
mov
dec
arpl
inc
xchg
icebp
imul
lds
sub
adcb
xor
pop
cld
pop
jae
imul
inc
in
push
pop
scas
mov
cmp
jge
fstl
fld1
jg
insl
stos
adc
fcmovne
sub
xchg
and
f2xm1
sub
mov
pop
addr16
loope
subb
rorl
jl
test
andl
fcoml
mov
cs
mov
add
jg
sahf
sbb
xor
cmc
and
inc
push
lods
push
sbb
mov
fs
and
loope
adc
xchg
mov
ficoml
jg
pop
insb
in
movsl
insb
and
js
jae
sub
js
mov
sahf
fisubrs
test
xorb
jb
inc
sbb
fcmovnu
cmp
add
repz
sbb
outsl
inc
inc
gs
aam
test
push
stos
sub
test
adcl
clc
mov
pop
dec
andb
mov
xor
mov
dec
mov
jmp
lret
mov
icebp
call
xor
mov
adc
cmp
adc
pop
push
call
mov
xchg
out
sahf
js
iret
xor
and
and
push
lock
jmp
lcall
sub
inc
xorb
test
dec
repz
xchg
stc
cld
add
fldcw
push
shl
pop
pop
jbe
sahf
enter
out
idivb
mov
cli
push
fcompl
inc
ret
sub
loop
jg
add
pop
add
mov
jge
dec
es
cld
scas
and
fdivl
aad
or
jae
gs
xor
dec
sub
pop
sub
lds
popf
mov
scas
cmp
mov
nop
xadd
idivl
js
lods
jb
push
in
icebp
pop
pusha
mov
test
jae
sub
mov
ret
cmpsb
and
xchg
repnz
cmp
nop
jbe
push
push
mov
pop
mov
pop
cs
into
pop
repz
or
fs
in
xor
gs
cmpl
cmpb
fstps
push
bound
fcmovnbe
pop
inc
jl
mov
aas
inc
or
cmp
jp
ss
cs
push
inc
inc
add
dec
fcomp
pop
push
xchg
xchg
test
xchg
mov
adc
adc
or
cmpsb
lret
test
lods
test
cmp
mov
bound
cld
sti
out
enter
cmp
je
xchg
mov
js
push
push
sbb
loop
mov
lret
mov
arpl
mov
data16
pushf
push
jne
pop
xchg
fbld
sub
out
jg
rolb
cmpsb
inc
daa
fldl
sbb
mov
in
and
xor
mov
sub
adcb
push
outsb
adc
push
xor
jmp
cmp
lds
fildll
or
out
lea
in
js
xchg
outsl
and
mov
xchg
gs
lret
xor
or
loopne
mov
mov
insl
lods
call
mov
mov
popa
add
mov
xor
or
inc
cltd
lahf
loope
xlat
add
push
pop
mov
mov
mov
test
sahf
adc
dec
push
add
sub
jne
lods
mov
inc
and
mov
pop
cmc
das
dec
imul
clc
add
push
sbb
jle
jbe
push
fisttpll
sahf
mov
xor
inc
hlt
outsb
jnp
addr16
mov
jne
daa
rclb
repz
cmp
add
lods
mov
xchg
mov
xor
loopne
xchg
aam
sarb
mov
xchg
adc
daa
xchg
xor
scas
ss
stos
or
arpl
scas
ss
fucomip
mov
mov
inc
call
aas
sbb
pop
mov
rcrl
cmc
clc
outsb
shll
or
outsb
out
inc
or
fimuls
adc
pop
push
cmp
mov
out
push
jl
ja
jg
inc
and
add
pop
pop
mov
jg
sbb
jge
aad
icebp
mov
fldl
mov
pop
into
mov
sub
sub
pop
fistpl
sahf
adc
outsb
call
xchg
aaa
xor
jle
stos
add
mov
dec
mov
stc
pop
sub
adc
test
mov
inc
pop
pop
adc
lea
fs
stos
adc
movsb
jmp
push
sarl
mov
stos
aad
jmp
cmc
xchg
fbld
jg
push
or
push
mov
les
jb
or
sahf
or
sbb
pop
and
mov
gs
inc
jnp
cmp
xor
push
sub
cmpl
push
push
lods
pop
xor
or
test
fsubs
lahf
testl
xlat
or
in
or
push
ffree
lods
rolb
int
movl
xchg
movsl
fcomps
adc
add
cld
stc
cmp
adc
lret
mov
sarb
fisttpll
dec
icebp
shl
je
shl
imul
adc
pop
sbb
lods
dec
js
divb
aaa
xchg
ljmp
inc
fsub
mov
mov
mov
data16
pop
jno
mov
scas
pop
scas
decb
jge
mov
mov
rcrb
stos
lret
cmc
cmp
pop
sbbb
mov
mov
jne
jo
dec
or
dec
xchg
push
stos
ljmp
lds
adc
out
xchg
iret
cmpl
mov
movb
xor
test
imul
pop
mov
cwtl
jecxz
clc
xchg
and
xlat
pop
push
or
imul
push
rorb
popf
adc
repnz
adc
test
and
imul
or
popa
lret
pop
mov
sub
les
cmp
call
pop
add
aad
das
test
jno
cmp
sub
or
adc
or
rorb
inc
sti
adc
sub
jp
aaa
push
push
sub
into
int
fldcw
lods
fimuls
xor
lret
and
sub
xor
shrl
push
jecxz
jg
dec
jge
xchg
in
push
mov
stc
fsub
test
xchg
push
fidivrs
add
cwtl
repnz
jne
dec
jb
jl
imul
sub
scas
mov
ret
mov
mov
test
cs
test
in
xlat
lock
daa
xchg
jnp
jl
xor
mov
mov
sbb
psrlw
xor
pop
or
cmc
imul
insb
push
mov
lods
loope
hlt
mov
test
ret
mov
into
push
mov
lds
mov
repnz
ret
ret
mov
and
fwait
cmp
inc
adc
or
mov
negl
mov
xor
fnstsw
mov
mov
sub
xor
push
push
fldcw
test
ja
mov
add
xor
xchg
ds
jge
inc
test
inc
mov
push
inc
out
fwait
sbb
cmpsl
cld
dec
pop
mov
pop
fimull
mov
in
mov
sti
repnz
sbb
ljmp
inc
push
daa
out
in
xlat
test
daa
inc
pop
aam
lret
psubw
xchg
stos
mov
cmp
xor
xor
mov
orl
dec
adc
mov
out
push
setae
sti
jns
shrl
stos
mov
mov
fwait
pop
outsb
shrl
sbb
xchg
xchg
push
popa
lds
cmp
push
xor
xchg
cwtl
cmp
pop
pop
jno
arpl
adc
inc
xchg
and
je
clc
pop
rorl
jne
sub
hlt
push
pop
push
cmpsl
lock
cmp
pop
popf
out
fdivl
int3
dec
adc
mov
or
push
inc
mov
mov
dec
jno
sub
add
dec
inc
popf
and
fistpll
popa
jbe
xor
pop
stos
jne
insl
mov
bound
push
xchg
lods
cs
mov
push
push
cmp
mov
jmp
jl
cld
jns
inc
enter
xor
jne
addr16
scas
dec
ficompl
xor
mov
push
lret
leave
or
mov
das
xchg
das
pinsrw
xchg
mov
cmp
push
jmp
cmp
fldt
inc
push
aas
dec
inc
iret
pop
movsb
jmp
inc
pop
nop
jl
out
pop
xchg
mov
dec
leave
inc
and
dec
data16
out
inc
aad
adcb
or
pop
mov
xchg
push
loope
jb
sub
cmpsb
fnstsw
dec
out
push
or
rorb
cmp
pop
jne
iret
loope
pop
pop
insb
or
fmul
insb
mov
inc
mov
lahf
es
aad
ljmp
test
mov
sbb
ja
pop
adc
shlb
cmp
jg
push
lods
mov
sbb
ret
std
mov
mull
fmuls
aas
stc
adc
sub
push
jg
xchg
mov
jae
sbbb
and
mov
xor
leave
adc
in
hlt
fnsave
dec
sub
out
sub
adc
fs
dec
or
push
xchg
popf
loop
fs
mov
and
cmpsl
inc
push
mov
mov
movsb
icebp
repz
dec
sbb
aaa
add
push
rcll
mov
pop
leave
jae
cs
int3
out
shrl
add
shll
add
mov
in
clc
call
mov
push
mov
into
add
xchg
fisttps
sbbl
xor
nop
rorl
or
in
mov
push
sub
lcall
pop
sarb
scas
xor
pop
jle
lret
jb
adc
inc
shr
cmp
fcomps
rorb
xchg
lds
pop
clc
ficomps
popa
int3
or
aaa
sub
idivl
cmc
rol
and
inc
xor
xchg
dec
push
mov
mov
dec
adc
dec
ficoms
or
jmp
pop
lods
sbb
push
mov
xor
pop
mov
leave
aam
push
xlat
jg
sub
fadds
out
outsb
fwait
jno
xchg
and
addr16
andl
lock
ret
push
out
xor
sbb
adc
xchg
shll
sub
jnp
inc
cli
sub
lret
sub
rorb
loop
fnstenv
sbb
gs
jmp
ss
xchg
push
mov
xchg
add
mov
mov
inc
ds
cmpsl
out
mov
xor
sub
xchg
push
mov
xchg
push
ret
pop
mov
sbbl
push
add
pushl
add
push
loopne
sbb
call
mov
in
daa
pusha
pop
mov
test
orl
jbe
sbb
prefetchnta
lea
jge
imul
pop
je
or
xchg
rcrb
loopne
ret
pop
mov
inc
xchg
clc
std
cld
mov
jo
movsb
test
push
popf
bound
idivb
pop
push
and
dec
js
mov
push
jge
dec
aaa
mov
sbbb
scas
inc
imul
out
mov
out
push
push
lods
cld
push
sar
daa
lock
mov
sarl
loopne
xlat
mov
das
and
jae
pop
subb
sub
addr16
sti
dec
jae
shlb
test
out
fwait
lods
out
jno
mov
loopne
mov
dec
adc
mov
xchg
rorb
jecxz
sahf
scas
nop
rcrl
imul
or
shr
divb
int3
xor
jp
sbb
xor
in
or
mov
mov
in
pushf
jo
lret
sti
dec
shlb
and
cmp
cmpsl
jae
mov
into
mov
scas
cmp
fs
stc
cmc
out
ljmp
lret
subb
lock
call
fbld
cmp
mov
fists
inc
mov
sub
aaa
insl
mov
mov
add
and
enter
pop
xor
mov
mov
jb
cli
stc
adc
lods
xchg
sub
aaa
or
push
dec
cmp
ja
jmp
bswap
or
adc
leave
icebp
mov
test
or
lock
cltd
mov
inc
ss
and
xor
add
xorb
jmp
jnp
adc
stos
popf
sahf
push
lods
enter
pop
imul
push
orb
cmp
push
loopne
cmpb
or
mov
out
loope
xchg
bound
sti
lcall
and
sub
lock
notb
mov
inc
imul
leave
mov
pop
add
out
cld
mov
sub
adc
pushf
mov
aad
xor
sbb
cmp
shll
cmpsb
in
loopne
mov
pop
js
jmp
push
aas
scas
xorl
sahf
shl
inc
out
scas
inc
inc
mov
nop
repz
daa
sbb
gs
mov
add
test
mov
iret
jnp
sbb
push
inc
mov
push
out
stc
add
pop
es
stos
push
add
xor
jmp
cltd
fstl
sbb
xchg
out
call
add
or
mov
int3
insb
sbbl
ljmp
out
pop
mov
or
pop
mov
cltd
push
sub
lock
mov
test
lods
imul
loope
mov
sbb
or
cmp
push
cmp
push
inc
adc
mov
sti
cmp
outsb
subb
lahf
cli
les
lods
subb
orl
sahf
test
fwait
lds
mov
mov
cmpsb
cwtl
mov
mov
add
mov
push
mov
mov
mov
mul
cmp
es
pop
jae
jbe
std
inc
mov
das
popa
outsb
cmp
in
insl
test
dec
dec
fwait
inc
jp
in
stos
gs
xchg
fnstsw
fidivrl
xchg
jne
xor
ret
mov
out
int
adc
arpl
mov
iret
cwtl
mov
inc
push
mov
movb
xchg
jp
lds
loopne
adc
jo
shlb
push
pop
je
inc
pop
cltd
ja
stc
stos
xchg
pop
fcmovne
push
inc
and
imul
xor
jne
ljmp
pop
pusha
inc
aaa
or
movsb
rcl
andb
aam
push
gs
test
push
sub
inc
mov
adc
cmp
fucomp
aaa
jne
out
push
shr
cmp
push
je
fwait
std
int
push
pop
jmp
inc
and
xchg
xor
inc
mov
add
and
call
into
ret
sbb
roll
mov
int
pop
mov
inc
mov
mov
je
jne
push
cmp
sbb
mov
xor
inc
xchg
xor
pop
fists
enter
test
cmp
mov
imul
jne
movsl
pop
add
insb
push
adc
mov
add
ficoml
in
cmpsl
std
prefetchwt1
push
scas
or
stos
add
mov
shl
xchg
nop
sub
xor
movsb
sahf
imul
mov
jecxz
mov
push
cmp
adc
outsl
cmp
and
and
and
test
out
dec
bound
in
data16
adc
aaa
popa
cli
push
dec
test
testl
fs
adc
pop
loop
movsl
push
fisttps
push
or
and
or
fbstp
and
shlb
arpl
gs
and
cmp
int
mov
movsb
nop
imul
jnp
sbb
loope
les
mov
arpl
xor
cs
inc
ss
xchg
mov
sbb
mov
data16
out
push
xchg
loop
sahf
cmp
pop
cmp
mov
mov
fstpl
sbb
or
imul
fldcw
daa
loop
pop
adc
scas
or
dec
in
mov
sub
push
pop
mov
and
cmp
mov
fidivrs
in
in
ds
xor
dec
sub
cmp
add
mov
push
jns
cmp
inc
jge
cmp
ljmp
mov
jne
out
movsl
lret
push
das
hlt
ja
rclb
mov
and
cmpsl
jbe
push
push
in
sub
ljmp
ret
push
cltd
cld
nop
sub
xor
fldl
fildl
shl
lods
jne
jmp
or
mov
fcom
push
mov
pop
xor
ja
sub
in
pop
icebp
fs
in
nop
mov
cld
sbb
data16
in
iret
das
jbe
lods
adc
push
adc
lea
xchg
xchg
mov
inc
xor
or
jl
mov
jno
jge
mov
cmp
jp
or
cmpsb
jne,pt
mov
xchg
mov
fwait
xchg
movswl
cwtl
push
xor
popf
jb
add
hlt
add
sbb
lea
adc
inc
popa
repz
cmp
mov
xchg
dec
repz
mov
cmp
sahf
add
sub
mov
ret
dec
mov
inc
sub
xor
sbb
incl
fcmovne
cmp
js
dec
in
sahf
and
shr
lods
leave
xor
test
loope
mov
mov
loope
addr16
dec
sti
insb
inc
lret
fcompl
mov
mov
and
in
adc
mov
fsts
stos
adcl
sahf
je
push
arpl
add
ss
xor
mov
imul
add
testb
clc
sbb
xchg
mov
sub
or
mov
ret
fldt
fcomps
inc
test
sahf
adc
cmp
call
test
pop
nop
insb
pop
adc
jne
icebp
push
inc
xchg
loop
mov
idivl
jae
jae
adc
lods
jo
icebp
cmp
int
addr16
loope
imul
ficoms
adc
dec
jns
aad
sbb
dec
into
lock
test
dec
ret
jmp
cmp
mov
mov
aaa
aad
in
loopne
add
xchg
push
mov
jno
pushf
enter
cltd
pop
fsubrs
push
addr16
aas
and
inc
sarl
jg
scas
into
movsl
mov
call
lds
or
xor
inc
add
adc
add
insb
inc
add
adc
add
inc
inc
add
sub
add
push
inc
add
add
movsl
inc
inc
add
sub
add
jl
add
add
add
