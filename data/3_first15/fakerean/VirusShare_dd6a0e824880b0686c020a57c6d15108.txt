jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
inc
add
dec
sbb
rcrb
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
movl
jne
movl
mov
mov
mov
mov
push
push
push
push
mov
push
lea
mov
lea
mov
call
testb
jne
mov
mov
test
add
sbb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
add
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
mov
mov
mov
lea
mov
push
lea
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
add
mov
add
add
add
mov
lea
sub
mov
movl
jmp
mov
add
lea
push
mov
call
add
add
mov
lea
call
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmpl
mov
jne
push
mov
call
mov
mov
cmp
jne
andl
xor
pop
pop
pop
mov
pop
ret
mov
and
or
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
movl
mov
push
call
jmp
mov
cmp
jne
movl
mov
cmp
jne
xor
push
push
mov
push
mov
push
push
mov
push
mov
push
push
push
push
lea
push
call
jmp
xor
cmp
sete
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
push
je
cmp
je
mov
mov
test
jne
cmp
je
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
pop
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
pushl
mov
pushl
add
push
call
movsbl
add
and
ret
mov
test
je
push
mov
push
lea
movsl
movsl
movsl
movsl
pop
pop
xor
inc
ret
int3
push
mov
mov
test
push
jne
mov
test
je
mov
test
je
push
mov
test
jne
mov
mov
mov
call
lea
mov
mov
test
jne
test
movl
mov
jne
mov
mov
pop
pop
mov
xor
pop
ret
mov
pop
mov
xor
pop
ret
call
lea
call
mov
test
je
fsubr
inc
add
mov
xor
pop
ret
push
mov
sub
andl
push
push
push
push
mov
push
lea
push
mov
call
test
jne
lea
call
mov
jmp
call
test
jne
push
call
test
pop
je
andl
andl
mov
push
push
mov
push
mov
call
test
jne
jmp
mov
lea
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
xor
mov
and
inc
shl
shr
lea
or
cmpl
je
lea
call
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
sub
mov
xor
mov
mov
push
push
push
lea
push
push
lea
fst
inc
add
mov
add
cmp
je
mov
mov
mov
lea
lea
cmp
jae
lea
cmp
ja
cmp
jb
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
and
mov
movb
mov
test
jbe
mov
push
lea
push
add
push
call
add
pop
pop
pop
mov
xor
call
add
ret
cmpl
jg
mov
sub
jmp
in
ret
inc
add
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
movl
movl
mov
test
movl
je
andl
andl
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
push
call
push
mov
call
add
lea
push
mov
mov
mov
lea
push
push
mov
movl
call
mov
mov
mov
movl
cmpl
je
mov
test
jne
test
jne
pop
pop
xor
pop
add
ret
mov
mov
cmpl
je
mov
lea
push
call
xor
ret
mov
pushl
mov
push
call
decl
push
je
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
xor
add
cmp
je
cmp
mov
mov
movl
mov
mov
mov
mov
mov
jne
mov
mov
push
call
mov
call
mov
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
push
jne
test
je
mov
mov
lea
mov
cmp
jne
sub
add
add
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
xor
cmp
push
lea
je
lea
push
push
push
add
push
call
add
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
lea
mov
push
lea
lea
movl
mov
mov
call
add
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
mov
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
lea
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
lea
js
mov
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
pop
pop
add
ret
push
mov
push
push
mov
call
test
je
mov
mov
imul
add
push
call
mov
test
pop
je
push
pushl
push
call
mov
mov
xor
add
and
xor
mov
xor
inc
pop
pop
pop
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
push
push
andl
push
push
push
lea
mov
call
mov
lea
push
push
call
mov
test
js
andl
push
pushl
mov
mov
lea
call
cmpl
jne
mov
mov
mov
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
pushl
add
mov
push
call
ret
mov
pushl
mov
call
add
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
push
lea
mov
call
mov
cmp
je
mov
mov
mov
push
call
test
js
mov
mov
mov
push
mov
push
push
mov
call
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
push
push
lea
mov
mov
call
mov
cmpw
je
xor
pop
pop
pop
add
ret
push
push
call
add
pop
xor
pop
add
ret
push
mov
and
mov
sub
push
push
mov
andl
andl
push
mov
movl
call
test
jne
pushl
mov
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
movl
movl
cmpl
push
je
lea
push
call
add
push
push
lea
movl
movl
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
mov
je
testl
jne
mov
test
jne
testb
pop
pop
je
push
call
add
mov
pop
mov
pop
xor
call
add
ret
mov
call
test
je
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmpl
jne
mov
push
push
mov
mov
push
mov
mov
call
mov
mov
mov
push
mov
call
cmp
jne
mov
add
cmp
jne
mov
mov
mov
add
cmp
ja
pop
pop
pop
pop
ret
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
push
mov
mov
mov
mov
push
lea
jne
mov
mov
mov
push
push
push
push
push
push
call
cmp
pop
pop
jne
mov
mov
ret
cmp
je
lea
cmp
ja
movzbl
jmp
movl
jmp
add
mov
mov
ret
push
movsb
or
pop
movsb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
test
je
mov
mov
cmp
push
jne
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
sub
test
push
push
push
je
lea
xor
inc
add
adc
mov
add
test
jne
test
mov
jne
mov
cmp
jb
mov
push
push
push
call
add
cmp
je
mov
push
push
call
mov
add
cmpb
je
cmpb
je
cmpb
je
cmpb
je
cmpb
je
mov
cmp
je
push
call
add
xor
pop
pop
pop
mov
pop
ret
mov
cmpl
je
push
push
lea
push
mov
call
mov
test
je
mov
push
call
mov
lea
mov
movsl
movsl
movsl
movsl
pop
pop
movw
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
push
mov
mov
push
xor
mov
push
mov
mov
mov
call
mov
add
lea
lea
push
mov
mov
mov
push
mov
movl
movl
movb
call
mov
test
js
push
push
lea
push
lea
mov
call
mov
mov
mov
lea
lea
push
movl
mov
mov
mov
call
test
je
mov
mov
mov
push
call
movl
cmpl
mov
mov
movl
je
mov
test
movl
je
mov
add
push
call
add
test
jne
push
call
add
mov
push
call
add
lea
call
mov
pop
pop
mov
pop
pop
xor
call
add
ret
push
call
add
test
je
mov
call
test
je
mov
mov
mov
push
call
mov
mov
push
push
mov
fs
add
sbb
add
dec
and
push
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
test
jne
lea
cmpl
iret
inc
add
movzbl
and
cmp
jne
cmpl
jne
test
jne
mov
mov
shr
cmp
jne
mov
pop
pop
ret
sub
cmp
ja
movzbl
jmp
cmpl
je
lea
jmp
xor
pop
pop
ret
cmc
cmpsl
or
inc
test
adc
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
je
cmpb
je
push
mov
push
xor
cmp
push
mov
je
push
mov
cmp
je
mov
mov
mov
lea
push
push
push
call
mov
lea
push
mov
push
mov
mov
mov
push
push
call
test
mov
js
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
lea
call
testl
jne
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
push
push
push
mov
call
test
mov
js
cmp
mov
mov
mov
je
mov
cmp
je
mov
push
call
add
lea
call
mov
push
push
lea
call
test
je
mov
mov
add
test
mov
mov
movl
movl
mov
je
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
push
push
mov
push
push
push
call
mov
add
test
mov
jne
test
jne
addl
test
je
lea
call
mov
push
call
add
xor
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
je
cmp
je
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
test
js
mov
mov
push
mov
call
mov
cmp
mov
jne
lea
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
sub
lea
cmp
movl
movl
movl
je
mov
test
mov
je
testb
mov
je
mov
mov
sub
push
mov
movl
call
add
mov
add
push
call
add
test
jne
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
mov
push
push
xor
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
mov
cmpl
jne
push
lea
mov
mov
call
push
lea
call
mov
mov
sub
sar
push
lea
push
mov
mov
lea
push
lea
push
mov
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
push
call
add
cmp
je
mov
mov
mov
xor
cmp
sete
movl
mov
mov
add
test
mov
jne
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
cmp
je
xor
mov
cmp
mov
jne
lea
call
lea
call
cmp
je
push
call
add
cmp
je
mov
movl
movl
mov
mov
mov
cmp
mov
je
mov
push
lea
mov
push
mov
call
add
test
js
mov
test
mov
mov
jne
xor
pop
pop
pop
pop
add
ret
sub
je
sub
je
sub
je
mov
jmp
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jle
mov
mov
mov
cmpb
je
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
xor
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
push
mov
mov
call
mov
lea
lea
push
mov
aam
inc
add
mov
push
mov
movl
movl
mov
call
test
js
mov
mov
push
push
mov
push
call
mov
lea
lea
push
mov
mov
mov
mov
push
mov
mov
movl
mov
call
push
lea
ror
inc
add
test
je
cmp
je
mov
push
push
push
or
mov
call
mov
mov
mov
push
push
push
call
mov
lea
lea
add
add
mov
mov
push
mov
mov
movl
mov
call
test
js
mov
mov
mov
add
call
mov
push
push
push
or
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
lea
call
cmp
jne
jmp
mov
push
mov
test
jne
xor
test
jne
pop
ret
mov
cmpb
je
mov
mov
mov
xor
ret
test
je
push
push
push
mov
call
mov
push
push
call
lea
push
mov
call
mov
push
push
call
mov
lea
push
push
call
mov
add
push
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpl
jne
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
push
lea
push
push
mov
call
cmp
jg
xor
movzbl
mov
shr
and
cmp
jne
xor
mov
cmp
jg
xor
shr
and
cmp
jne
xor
test
jne
test
jne
pop
pop
pop
mov
pop
ret
push
call
add
test
je
movl
mov
movl
mov
mov
push
mov
call
push
call
test
js
mov
call
test
je
mov
mov
push
call
pop
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
call
mov
xor
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
lea
mov
mov
push
push
mov
pusha
enter
loop
std
decl
inc
and
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
call
mov
cmp
je
cmp
je
testb
jne
testb
jne
mov
lea
push
push
mov
call
mov
xor
cmpb
mov
je
mov
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
push
mov
call
mov
cmp
jg
testb
jne
mov
cmpb
je
mov
mov
mov
mov
mov
lea
dec
rolb
call
lea
push
lea
push
push
mov
call
mov
cmp
jg
testb
jne
mov
mov
xor
cmp
mov
mov
jne
mov
xor
cmp
mov
jne
testb
jne
testb
jne
test
jne
testb
jne
mov
lea
push
lea
push
push
mov
call
testb
je
mov
and
xor
or
jne
orb
mov
call
pop
pop
xor
pop
mov
pop
ret
testb
je
jmp
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
outsl
fadds
add
mov
push
mov
mov
push
mov
sub
mov
mov
sub
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
call
mov
mov
mov
push
lea
push
call
mov
cmp
jg
mov
cmp
jg
movl
mov
lea
call
test
je
mov
mov
mov
push
lea
push
push
call
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
mov
jl
cmp
jl
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
lea
call
test
je
mov
mov
pop
pop
pop
add
mov
inc
add
mov
lea
push
mov
lea
mov
mov
push
push
lea
call
mov
lea
push
lea
push
push
call
mov
pop
pop
mov
pop
add
cltd
loopne
add
jmp
push
mov
push
push
andl
test
push
je
mov
lea
push
push
push
call
mov
push
mov
and
jne
pushl
lea
call
test
pop
jne
pushl
mov
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
movswl
cmp
jg
je
dec
jne
xor
ret
dec
je
dec
dec
jne
mov
ret
sub
je
sub
je
sub
jne
mov
ret
mov
ret
sub
jne
mov
ret
mov
ret
mov
ret
mov
ret
or
ret
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
or
inc
add
mov
cmp
je
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
test
js
mov
cmp
mov
mov
mov
mov
mov
mov
movl
je
mov
lea
push
push
push
mov
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
cmpl
jne
jmp
mov
test
je
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
push
movb
call
test
je
movl
mov
mov
mov
lea
cmp
je
movzwl
movzwl
add
sub
sar
je
cmpw
je
sub
add
test
jne
cmp
jne
push
lea
push
call
mov
mov
cmpw
je
xor
pop
pop
pop
ret
pop
pop
mov
pop
ret
mov
sub
push
call
test
je
mov
pop
pop
xor
pop
ret
push
mov
mov
mov
mov
push
push
call
andl
push
mov
lea
call
mov
test
je
pushl
mov
pushl
push
call
mov
lea
call
mov
pop
pop
ret
int3
int3
push
mov
push
push
lea
mov
nop
mov
test
movl
je
mov
mov
push
call
add
sub
jne
lea
xor
call
lea
xor
mov
movb
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
jle
cmpl
jle
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
pop
ret
xor
pop
ret
cmpl
jle
cmpl
jg
mov
pop
ret
mov
test
je
inc
add
mov
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
xor
call
mov
test
movl
pop
jne
ret
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
lea
call
test
je
mov
xor
cmp
mov
mov
mov
je
push
call
add
movl
lea
push
lea
mov
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
loopne
add
mov
movl
movl
movb
call
inc
add
mov
push
push
mov
or
call
add
cmp
lea
je
add
add
inc
and
call
test
je
mov
mov
mov
push
push
lea
push
or
call
mov
lea
mov
mov
lea
movl
movl
movl
movb
mov
push
push
mov
call
mov
push
push
push
lea
call
mov
mov
push
push
mov
push
call
lea
push
mov
call
cmpl
jne
push
call
add
test
je
mov
test
mov
movl
mov
je
mov
mov
push
call
lea
push
lea
movl
movl
movl
call
movl
movb
movb
push
lea
lea
call
test
je
mov
test
mov
jne
mov
add
test
test
add
add
add
push
call
add
test
je
mov
test
jne
test
jne
mov
mov
lea
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
ja
mov
test
je
xor
mov
mov
mov
mov
mov
push
mov
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
push
lea
call
cmp
je
mov
mov
cmp
je
cmp
je
push
call
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
test
jne
jmp
push
call
add
jmp
lea
push
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmp
push
mov
push
mov
je
mov
mov
lea
cmp
jb
mov
cmp
jb
mov
cmp
lea
jne
mov
test
je
cmpl
jg
mov
sub
cmp
jbe
and
mov
movb
mov
test
jbe
mov
add
push
push
push
call
add
pop
pop
pop
mov
xor
call
add
ret
test
je
mov
jmp
and
inc
add
push
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
test
jbe
push
push
push
mov
xor
mov
lea
cmpl
mov
lea
jne
mov
mov
push
push
push
or
call
mov
push
push
push
call
mov
mov
push
push
mov
push
call
mov
push
push
push
call
add
subl
jne
popf
fildl
ret
mov
lea
xor
inc
lock
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
test
mov
push
mov
mov
mov
je
test
jne
mov
mov
and
push
jne
test
jne
test
je
mov
lea
push
push
push
mov
call
test
je
mov
movw
testb
movb
movl
pop
jne
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpb
je
andl
xor
pop
ret
orl
xor
pop
ret
int3
int3
int3
int3
int3
mov
sub
push
push
push
call
test
je
cmpl
mov
mov
movl
je
mov
mov
test
jne
mov
test
jne
mov
mov
lea
push
push
call
movzwl
cmp
jne
mov
mov
mov
push
push
mov
push
push
push
mov
call
lea
call
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmpl
push
mov
jne
test
jl
test
je
mov
lea
push
xor
mov
mov
mov
mov
movl
movl
mov
call
cmp
je
mov
cmp
mov
jne
mov
shr
sub
cmp
jle
testb
mov
push
mov
jne
add
push
lea
je
mov
mov
mov
call
test
je
mov
lea
push
lea
call
add
mov
test
mov
mov
jle
push
push
mov
push
call
add
cmp
jne
testl
jne
cmp
jge
test
jne
push
push
lea
xor
call
mov
mov
test
movl
pop
jne
test
jne
mov
pop
mov
pop
pop
xor
call
add
ret
int3
int3
push
xor
cmp
je
push
mov
push
mov
mov
cmp
push
lea
jne
cmp
je
mov
mov
mov
cmp
jne
sub
add
add
cmp
jne
mov
xor
cmp
mov
movl
mov
mov
mov
mov
mov
mov
jne
mov
lea
call
push
push
call
mov
pop
mov
mov
pop
pop
xor
pop
ret
push
mov
push
push
xor
cmp
je
inc
add
push
dec
cld
mov
call
cmp
je
inc
add
inc
or
jne
mov
pushl
push
call
mov
lea
call
mov
pop
leave
ret
mov
test
je
pushl
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
mov
push
lea
push
mov
mov
call
cmpl
je
mov
loope
add
inc
push
call
add
test
jne
testb
jne
testb
jne
mov
pop
pop
pop
pop
ret
mov
mov
out
call
jmp
pop
pop
pop
ret
mov
mov
push
call
mov
jmp
push
call
test
je
mov
movl
call
test
je
push
lea
mov
cmp
je
mov
call
test
jne
pop
pop
ret
xor
pop
ret
xor
inc
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
and
or
push
push
jne
mov
mov
mov
test
je
mov
test
jne
mov
mov
test
je
mov
test
je
mov
test
jne
mov
test
je
add
mov
lea
call
test
jne
lea
call
test
jne
mov
call
mov
mov
mov
test
je
mov
test
jne
mov
push
push
call
mov
mov
call
test
jne
lea
cmpl
jne
mov
call
test
jne
add
cmpl
jne
movzbl
lea
push
lea
call
call
test
je
movzbl
add
push
lea
call
call
test
je
mov
and
jne
xor
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
call
test
jne
pop
xor
pop
pop
pop
mov
pop
ret
mov
test
je
add
test
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
push
push
push
call
mov
add
cmp
jne
mov
mov
call
test
jne
lea
mov
call
test
jne
lea
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
testb
jne
push
mov
mov
sub
lea
lea
sub
mov
mov
cmp
jne
mov
cmp
jne
add
lea
add
cmp
jle
mov
mov
call
test
je
cmpl
jne
mov
cmpl
jne
mov
cmp
jne
mov
test
jne
mov
test
jne
mov
test
jne
mov
pop
pop
pop
pop
pop
ret
mov
xor
mov
sub
mov
mov
cmp
je
test
je
test
je
mov
cmp
jne
mov
test
mov
jne
test
jne
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
cmpl
je
lea
jmp
cmpl
je
lea
jmp
mov
lea
push
push
mov
call
test
js
mov
test
je
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
lea
call
test
jne
pop
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
ret
push
mov
lea
push
push
mov
call
test
js
mov
test
je
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fsts
push
fstps
push
xor
mov
mov
mov
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
test
je
mov
test
je
nop
mov
test
jne
mov
cmp
je
mov
mov
movzbl
lea
push
lea
call
mov
call
cmp
jne
mov
call
add
movzbl
add
push
lea
call
mov
call
cmp
jne
mov
call
add
mov
mov
mov
test
je
mov
test
jne
mov
mov
test
je
mov
test
je
lea
mov
test
jne
mov
test
je
mov
mov
movzbl
lea
push
lea
call
mov
call
cmp
jne
mov
call
add
movzbl
add
push
lea
call
mov
call
cmp
jne
mov
call
add
mov
mov
call
mov
call
test
jne
lea
mov
add
mov
call
test
jne
lea
mov
add
mov
call
push
mov
push
push
call
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
jne
mov
call
test
jne
jmp
mov
cmp
jne
mov
call
cmp
jne
jmp
mov
cmp
je
jmp
mov
mov
mov
call
mov
lea
push
movzbl
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
imul
mov
call
mov
mov
lea
push
movzbl
push
mov
push
mov
push
mov
call
test
je
mov
fldz
mov
mov
add
imul
fstps
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
mov
test
jg
ret
push
push
mov
push
xor
mov
test
jl
cmp
jge
mov
lea
test
jl
cltd
idivl
mov
mov
test
je
mov
call
test
jne
mov
mov
push
push
push
call
mov
add
cmp
jl
pop
pop
pop
ret
mov
cmp
mov
je
sub
neg
sbb
not
and
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
push
xor
push
mov
mov
call
test
je
mov
mov
add
cmp
je
mov
and
cmp
jne
cmp
je
lea
mov
mov
mov
movl
movl
mov
mov
mov
sub
je
sub
je
push
mov
call
cmp
je
push
lea
mov
call
test
je
mov
lea
push
push
call
add
or
lea
call
mov
test
je
mov
mov
lea
mov
or
mov
lea
not
add
and
mov
test
jne
mov
lea
cmp
jae
movsbw
movzwl
mov
movzwl
mov
and
test
je
add
cmp
jb
mov
push
push
push
lea
push
mov
call
mov
mov
push
call
add
lea
push
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
xor
call
add
ret
mov
mov
cmp
je
movsbw
add
movzwl
test
jne
jmp
sub
sar
cmp
je
movw
add
sub
lea
jne
jmp
mov
mov
lea
push
mov
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
jmp
mov
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
jne
add
xor
call
pop
xor
pop
ret
mov
shr
je
mov
test
je
mov
and
lea
mov
mov
test
je
test
jne
sub
jne
add
xor
call
pop
xor
pop
ret
add
mov
call
pop
mov
pop
ret
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
movl
movl
movl
je
cmp
jne
mov
cmp
je
decl
je
cmp
push
jne
call
lea
call
mov
cmp
mov
je
mov
push
lea
push
push
call
lea
call
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
xchg
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
mov
cmp
pop
jne
xor
cmp
jne
lea
mov
mov
call
lea
mov
cmp
jne
xor
cmp
jne
lea
mov
mov
call
lea
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
cmp
movl
jne
pop
pop
leave
ret
mov
jmp
call
mov
cmp
je
mov
push
push
call
mov
mov
push
call
mov
mov
cmp
je
jmp
int3
int3
mov
mov
test
mov
je
push
lea
push
call
add
test
jne
push
call
add
pop
ret
test
je
jmp
mov
andl
mov
andl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
cmp
push
mov
mov
je
push
call
add
movl
lea
xor
call
mov
cmp
mov
je
mov
mov
test
je
push
lea
call
push
call
add
test
je
mov
movl
movl
xor
lea
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
xor
test
js
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
call
mov
mov
lea
call
test
je
cmpl
je
push
call
add
lea
call
xor
pop
pop
pop
pop
add
ret
mov
lea
call
mov
lea
call
jmp
int3
int3
int3
int3
sub
push
mov
push
push
mov
push
call
xor
push
push
push
push
call
cmp
mov
sbb
push
mov
lea
add
mov
call
mov
cmp
jne
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
call
push
mov
call
test
je
mov
mov
mov
mov
push
lea
lea
movl
mov
mov
call
mov
cmp
jne
mov
push
mov
lea
call
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
lea
call
lea
call
lea
call
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
test
jne
push
push
call
add
mov
jmp
int3
int3
int3
int3
int3
testl
push
jne
mov
push
mov
push
call
add
test
je
test
mov
movl
movl
mov
je
mov
mov
push
call
movl
test
mov
pop
je
mov
mov
push
call
mov
mov
call
test
je
mov
push
push
push
mov
call
lea
call
xor
pop
ret
xor
jmp
int3
int3
int3
int3
push
push
mov
mov
push
call
add
test
je
pop
pop
ret
cmpl
jne
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
movl
movl
xor
push
mov
cmp
mov
lea
movl
mov
je
mov
mov
push
call
mov
mov
mov
cmp
je
mov
call
mov
test
je
mov
mov
push
call
testb
mov
movl
je
fldl
fmull
fldl
fcomp
fnstsw
test
jnp
fldl
fcomp
fnstsw
test
je
call
mov
mov
mov
push
call
add
call
mov
cmp
jb
mov
push
push
push
push
mov
call
xor
add
adc
mov
mov
push
mov
call
lea
add
add
mov
mov
push
mov
movl
movb
mov
call
mov
test
je
mov
mov
push
call
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
mov
je
mov
mov
push
call
call
test
je
mov
mov
push
push
push
call
test
js
mov
lea
mov
mov
push
mov
call
mov
mov
push
call
pop
xor
pop
pop
ret
xor
jmp
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
jne
lea
call
mov
test
je
mov
mov
push
call
push
push
push
mov
mov
lea
add
add
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
push
call
add
pop
pop
pop
xor
pop
ret
push
mov
and
push
push
mov
and
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
je
call
mov
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
test
je
push
push
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
add
movzbl
ret
sub
mov
xor
mov
mov
mov
push
mov
push
push
push
lea
push
push
push
xor
push
mov
mov
call
mov
cmp
je
mov
ljmp
add
mov
mov
call
add
cmp
je
mov
push
push
lea
call
movl
mov
mov
movl
mov
cmp
mov
je
cmp
jle
mov
mov
mov
mov
mov
mov
test
je
and
mov
mov
call
cmp
je
addl
cmp
mov
mov
mov
je
mov
mov
push
call
mov
mov
mov
lea
mov
xor
mov
mov
lea
push
mov
movl
movl
mov
mov
mov
push
push
mov
call
cmp
jne
mov
cmp
movl
mov
je
mov
mov
push
call
mov
addl
push
lea
push
mov
call
mov
cmp
movl
je
mov
push
mov
call
mov
mov
push
mov
call
push
mov
mov
push
push
mov
mov
call
mov
mov
mov
call
test
ja
mov
test
jne
test
jne
mov
add
cmp
jl
add
lea
call
mov
cmp
je
testl
je
push
call
add
mov
pop
pop
pop
pop
xor
call
add
ret
lea
call
lea
push
push
mov
mov
call
add
cmp
je
jmp
mov
lea
mov
mov
mov
push
lea
mov
movl
movl
mov
call
lea
push
call
add
test
mov
mov
mov
mov
je
mov
mov
push
call
mov
addl
push
lea
push
mov
call
inc
add
lea
push
push
mov
call
mov
mov
add
test
mov
je
mov
mov
push
call
movl
lea
movl
call
mov
test
jne
test
jne
xor
cmp
jne
mov
push
call
add
jmp
mov
add
push
call
add
test
jne
jmp
lea
call
mov
cmp
je
jmp
jmp
lea
addl
mov
mov
xor
jmp
lea
push
call
lea
mov
call
testb
je
mov
mov
mov
mov
push
push
push
push
mov
mov
call
test
js
lea
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
mov
mov
mov
test
je
mov
test
push
movzbl
je
mov
mov
mov
call
test
je
pop
pop
ret
mov
mov
call
test
jne
test
je
pop
movl
pop
ret
pop
movl
xor
pop
ret
push
mov
push
push
mov
cmpl
jne
mov
call
pop
leave
ret
test
je
mov
lea
push
mov
call
testl
jne
test
je
cmp
jne
mov
mov
call
test
je
xor
inc
jmp
push
call
jmp
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmpl
je
mov
lea
push
call
test
je
mov
push
mov
mov
mov
xor
pop
ret
mov
ret
mov
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
mov
cmp
push
push
lea
lea
mov
mov
jg
mov
mov
lea
add
cmp
mov
jg
call
mov
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
lock
add
add
sub
repz
add
xor
pop
or
inc
or
push
add
push
or
pop
add
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
add
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
test
je
cmpb
je
mov
push
call
add
cmp
jne
mov
push
mov
movl
call
mov
push
call
mov
push
push
call
add
cmpl
punpckhdq
add
add
cmp
add
mov
xchg
lret
testl
stos
orl
add
lret
lahf
lock
pop
pop
mov
add
add
int
clc
aad
sahf
jae
icebp
fsubr
sub
push
mov
add
push
push
push
push
call
add
clc
in
add
add
out
add
add
add
add
shl
addl
add
repnz
add
test
ret
add
in
jmp
jecxz
rolb
inc
in
push
push
push
push
push
push
push
push
push
push
call
add
mulb
add
mov
fiaddl
into
mov
add
test
add
add
jo
test
cmpsl
mov
in
add
movb
mov
add
in
fdivr
lcall
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
lahf
sti
popa
add
jmp
jmp
xchg
add
sbbb
push
call
mov
add
je
mov
js
jbe
xchg
push
add
lcall
push
push
push
push
push
push
push
lea
push
lea
push
push
call
out
lods
add
divl
stos
add
fimuls
pop
add
add
add
filds
call
push
push
push
push
push
lea
push
lea
push
call
lds
add
add
push
xlat
add
add
add
add
add
stos
jl
jns
lret
icebp
pop
add
rcrb
add
push
add
cwtl
add
add
faddl
sub
pop
push
call
push
push
push
push
push
call
bound
pop
jne
popl
lcall
leave
jle
jnp
push
hlt
add
mov
pop
add
mov
add
loop
jb
jmp
add
sbbl
xchg
add
mov
add
add
aam
fists
pop
test
jecxz
jl
mov
mov
add
stos
mov
lcall
lret
add
ja
push
push
call
add
jnp
add
add
scas
mov
add
add
mov
mov
add
add
lcall
fs
sar
bound
push
in
add
in
gs
test
xchg
add
ret
in
pop
ret
push
lea
push
lea
push
push
push
call
add
add
add
gs
add
push
add
movb
jne
xlat
repnz
add
mov
add
fucomi
in
xchg
add
add
push
std
loop
cmpsl
cwtl
add
icebp
sar
add
add
xchg
mov
popa
iret
addb
ret
xchg
mov
mov
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
add
in
mov
aam
pop
ljmp
add
add
add
add
mov
xchg
add
stos
jbe
lods
je
push
add
jns
outsl
insb
add
mov
rolb
add
jmp
in
loopne
lcall
pop
hlt
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
out
mov
add
roll
add
add
add
jno
pop
mov
add
movsb
add
cmc
add
in
add
cmc
lret
add
xchg
add
add
push
add
lcall
pop
in
push
lea
push
push
push
lea
push
lea
push
push
call
ja
add
add
mov
std
add
nop
add
add
lods
in
push
xchg
loop
add
pop
int
xlat
movsb
jae
icebp
add
test
les
xchg
add
jo
loop
lods
out
out
lcall
add
in
in
lcall
ret
add
add
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
xchg
xchg
add
push
scas
mov
fmulp
int
lds
add
int
add
pushw
call
xchg
add
lcall
ret
lcall
cmc
or
push
push
push
push
push
call
cli
cmc
mov
pop
add
jle
in
add
arpl
mov
mov
icebp
add
xchg
lock
mov
fs
add
add
cmpsl
repnz
fiadds
aad
push
add
in
call
xor
push
push
xor
not
add
push
xor
add
sub
rol
sub
lea
xor
xor
pop
add
pop
push
lea
push
lea
push
push
push
push
lea
push
call
sarb
add
mov
je
int
add
repnz
jb
add
je
add
add
addr16
jnp
jle
rolb
out
add
add
add
mov
in
mov
push
add
add
jle
add
mov
add
lods
pusha
add
add
cli
add
pop
add
in
lcall
jne
call
push
push
push
lea
push
push
push
push
push
push
call
mov
jb
fildl
xchg
add
test
repnz
out
add
movsl
pop
add
loopne
mov
add
movsl
bound
sti
lds
mov
push
add
add
add
pushf
add
add
sub
pop
mov
push
push
lea
push
call
out
jae
mov
fldl
mov
pop
xchg
add
xchg
add
add
add
add
add
mov
fdiv
test
add
add
in
hlt
pop
movl
push
push
lea
push
push
lea
push
push
push
push
call
lock
les
jne
mov
sahf
add
aad
push
add
add
add
call
clc
add
push
mov
stos
sub
pop
lea
push
push
push
push
lea
push
push
lea
push
push
call
cld
aad
add
addb
lahf
scas
add
testb
jns
xchg
xchg
add
sti
add
add
push
add
add
xchg
stos
cwtl
imul
iret
add
lds
aad
shll
add
gs
jns
mov
add
add
loop
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
mov
jge
add
gs
add
mov
push
cltd
add
pop
add
jge
sub
pop
pushl
pushl
push
lea
push
push
lea
push
call
addb
bound
add
add
ja
out
imul
add
mov
mov
jne
add
test
jmp
shll
in
lock
lcall
jne
add
pushl
push
push
push
push
push
lea
push
push
push
call
add
in
push
lods
movsl
sar
testb
add
mov
pop
outsl
add
incb
test
jl
xchg
add
pop
mov
add
pop
pushl
push
push
lea
push
push
call
mov
int3
mov
mov
nop
call
loopne
test
xchg
and
jecxz
loope
push
jmp
mov
add
lods
lods
sub
pop
call
push
push
not
inc
push
push
pop
add
rol
sub
shr
inc
xor
pop
shl
inc
pop
push
push
push
push
push
call
bound
lds
add
icebp
roll
add
mov
ja
aam
mov
jecxz
mov
add
jae
jle
add
into
add
jle
stos
add
into
jle
incb
add
add
add
push
lret
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
outsl
add
mov
pop
jne
mov
add
jo
enter
jnp
mov
les
pop
loop
movsl
lcall
cli
xchg
in
lcall
ljmp
in
fcompl
pop
data16
push
push
lea
push
lea
push
push
call
ljmp
jp
scas
shlb
mov
add
mov
add
add
mov
mov
pop
add
lds
in
in
pop
push
push
push
not
push
push
pop
add
shl
rol
dec
lea
sub
sub
sub
not
pop
add
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
je
jae
sbb
mov
loop
addb
into
ljmp
fdivr
lcall
push
push
push
push
push
push
push
lea
push
push
lea
push
call
lods
enter
test
lea
add
push
mov
add
add
add
add
add
mov
addb
mov
popl
add
or
fsts
cmpsl
or
ds
push
lea
push
push
push
call
jle
add
jge
mov
add
mov
push
add
pop
scas
js
add
pop
add
add
sahf
add
cmpsl
add
add
xchg
add
add
jecxz
sub
pop
call
push
push
push
push
push
lea
push
call
mov
add
into
add
scas
xchg
nop
mov
cmc
add
add
add
int3
add
add
add
mov
data16
add
add
jmp
imul
add
repnz
add
fwait
pop
je
sub
pop
mov
push
lea
push
push
lea
push
push
call
loop
roll
out
xchg
test
add
jno
test
lods
add
into
stc
lret
xchg
mov
mov
pusha
mov
sahf
xlat
stos
add
add
cld
add
add
enter
add
negl
aad
incb
scas
jnp
add
add
in
in
lcall
push
push
call
push
mov
add
add
add
push
leave
clc
mov
jge
int3
nop
jge
mov
add
add
pop
add
add
add
fldl
add
sub
pop
push
mov
push
push
push
lea
push
push
push
push
push
call
add
add
pop
not
push
outsl
xchg
add
add
add
mov
in
mov
lods
add
out
rolb
lock
sahf
add
enter
js
pop
lock
call
mov
add
hlt
stos
pop
pushf
push
mov
loopne
add
push
push
push
call
mov
add
ret
add
xchg
outsl
add
push
mov
add
add
mov
xlat
nop
loop
add
lcall
ret
add
add
push
push
push
push
push
push
push
push
lea
push
call
roll
add
add
add
add
test
rcl
add
add
add
lretw
mov
jae
push
pop
insb
push
in
add
add
xchg
loopne
in
fdivr
lcall
ret
lcall
sqrtps
call
add
lahf
push
lock
add
mov
mov
jns
xchg
mov
add
jge
pop
imul
add
mov
js
lods
add
hlt
mov
add
mov
cmc
add
arpl
js
out
add
pushf
ljmp
xor
or
iret
lods
push
push
push
call
bound
add
mov
stc
fsub
add
cld
add
push
nop
push
mov
add
add
movsl
int3
push
iret
push
add
testb
jle
add
sub
pop
xor
push
push
push
push
call
mov
xchg
jecxz
add
add
cwtl
jle
jns
cltd
loop
jns
add
incb
mov
mov
test
add
add
add
outsl
add
iret
stos
adcb
jbe
in
lock
add
push
push
lea
push
push
call
push
ret
in
cltd
std
movsl
popa
imul
mov
add
mov
lahf
add
gs
popa
add
add
add
add
roll
add
icebp
ljmp
lods
jno
popf
add
ja
add
in
add
out
leave
out
jecxz
xchg
arpl
hlt
add
add
lcall
jne
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
call
scas
add
fdivp
fidivs
add
ret
leave
add
fadds
add
flds
add
icebp
add
lret
jbe
add
pop
push
outsl
mov
lcall
push
lea
push
push
push
call
fbstp
add
stos
add
sbbl
add
out
add
add
jae
pop
add
add
lods
fbstp
pop
jno
call
add
xchg
cltd
out
xorl
lock
lcall
inc
or
mov
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
ret
data16
add
loope
popa
pop
test
data16
xchg
push
fidivrs
add
ljmp
cltd
add
xchg
mov
mov
lock
push
push
lea
push
push
push
push
push
lea
push
push
call
movsl
sti
std
rolb
add
add
xchg
add
test
add
cltd
out
addr16
add
arpl
addw
fnsave
cli
loop
jl
sub
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
popf
add
lock
add
ret
mov
add
pop
xchg
incb
push
mov
add
enter
icebp
add
roll
add
test
add
add
js
call
mov
add
add
add
in
mov
push
ljmp
add
cmp
mov
fwait
repz
lea
push
lea
push
call
add
add
fiaddl
add
add
lret
push
mov
mov
vaddps
cwtl
mov
add
lea
pop
fiadds
xchg
outsl
add
push
add
out
pop
add
fldl
mov
addb
add
mov
cmpb
stos
add
cld
out
enter
xchg
jb
add
lcall
or
push
push
push
lea
push
call
icebp
pusha
gs
add
mov
jecxz
jnp
lea
mov
add
push
add
rcl
add
add
jecxz
add
xchg
add
cwtl
aad
add
mov
fsubrs
add
mov
out
xchg
push
lcall
mov
add
push
push
push
push
lea
push
lea
push
call
push
mov
imul
lcall
add
ret
movsb
push
testb
push
add
mov
rcrb
loop
fwait
insb
push
int3
mov
add
add
xchg
jp
add
add
sub
pop
push
push
push
lea
push
push
lea
push
push
push
call
mov
xchg
lods
add
add
mov
mov
jo
add
add
addr16
xchg
fcoms
push
add
in
in
lcall
inc
or
mov
lea
push
lea
push
push
push
lea
push
call
push
cmpsb
out
arpl
mov
add
leave
repnz
outsl
hlt
cwtl
loopne
add
cmc
test
add
pop
mov
xchg
out
add
add
add
pushf
jp
add
add
xlat
leave
jae
cmpsb
add
mov
out
pop
scas
stos
add
jecxz
add
in
call
sub
push
push
push
lea
push
lea
push
call
xchg
addb
mov
add
push
add
add
push
add
nop
mov
fiaddl
push
add
add
add
fwait
and
add
fs
imul
xchg
add
lret
gs
cmc
xchg
outsl
push
imul
pop
rep
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
jbe
mov
mov
add
std
std
add
mov
ljmp
std
add
imul
cwtl
mov
sti
add
lock
pop
mov
sub
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
push
cli
jge
nop
add
mov
out
jl
xchg
add
jb
leave
roll
xorl
mov
add
flds
add
fldenv
fidivrl
sub
pop
mov
push
shr
add
pop
add
add
push
push
push
lea
push
push
lea
push
push
push
call
fcomps
add
add
sti
data16
repnz
pop
mov
popf
scas
add
roll
cld
lret
pop
rcrl
add
add
ljmp
mov
add
add
sti
out
jne
add
js
imul
lcall
mov
sbb
mov
push
push
push
call
cmpsb
add
addb
push
gs
add
mov
xlat
add
fucom
mov
hlt
je
pop
fdivl
xchg
stc
mov
add
xlat
add
fucom
icebp
add
out
xlat
jnp
in
in
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
jle
out
mov
fldl
mov
push
hlt
bound
push
fnstenv
xchg
xchg
pop
lahf
outsl
out
fdivrl
add
add
jno
add
add
fisubrl
call
fisttpl
pop
ret
pop
push
mov
call
fdivr
lcall
add
push
push
push
push
push
push
lea
push
call
add
add
repnz
lret
add
push
mov
add
add
add
add
scas
mov
cmp
add
pop
inc
pop
je
cwtl
cltd
pop
jge
pop
add
js
in
in
add
push
push
push
call
add
mov
int3
add
mov
add
sahf
add
add
ret
call
imul
add
cmpsl
in
iret
int
sub
pop
mov
xor
push
inc
pop
mov
xor
push
inc
lea
ror
pop
add
add
push
lea
shl
pop
mov
push
push
dec
push
xor
add
sub
shl
sub
shr
shr
ror
pop
sub
sub
ror
pop
push
add
inc
shl
xor
pop
pushl
push
push
lea
push
push
lea
push
push
call
cwtl
add
lods
mov
repnz
jl
push
mov
pop
push
add
jp
add
loope
add
mov
add
add
imul
pop
add
call
call
push
push
push
inc
add
push
sub
add
not
sub
ror
add
pop
dec
pop
push
add
add
sub
pop
push
push
sub
lea
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
push
add
out
in
insb
mov
jge
stc
jo
jno
movsb
testl
cltd
mov
add
movsb
in
in
fdivr
lcall
rclb
inc
pop
mov
push
inc
dec
not
pop
push
push
push
lea
push
push
call
add
add
add
add
scas
mov
mov
pusha
cmpsb
add
test
fdivr
into
repnz
add
push
int
test
add
loope
xchg
add
jge
mov
add
xchg
mov
add
lcall
pop
hlt
push
add
pop
add
add
push
push
call
popf
mov
push
add
jne
jnp
push
add
pushf
pop
add
xlat
pop
add
add
cli
in
add
mov
add
jl
mov
add
ret
mov
mov
add
test
lcall
ret
lcall
xor
push
push
push
lea
push
push
call
mov
mov
add
add
flds
test
add
test
add
add
add
jl
fmulp
xlat
icebp
mov
mov
xchg
movsl
roll
add
add
roll
push
xchg
xchg
fsub
add
add
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
sahf
in
mov
add
fadds
add
add
fcomps
ja
rolb
add
roll
add
out
jge
jp
mov
add
lcall
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
push
mov
push
je
aam
add
movsl
pop
add
add
ljmp
mov
add
jbe
push
add
test
add
test
add
pushf
add
mov
stos
add
lds
jnp
sub
pop
xor
push
lea
push
push
lea
push
push
push
lea
push
call
add
xchg
add
xchg
add
popa
outsl
xchg
in
hlt
cli
roll
add
lcall
push
in
add
repnz
add
imul
add
add
add
xchg
mov
in
popf
data16
lods
filds
mov
mov
sub
pop
add
push
push
push
push
push
push
push
push
call
xchg
add
add
lds
mov
pop
xchg
add
ljmp
push
arpl
add
mov
enter
add
jnp
push
push
out
xchg
add
add
insb
add
add
in
loopne
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
out
jns
add
mov
shrb
fnsave
xchg
roll
jmp
imull
int3
aam
pop
add
lcall
add
push
test
clc
cwtl
mov
add
add
add
add
add
loopne
imul
pushf
push
mov
mov
add
pop
ja
lcall
lcall
dec
and
mov
shr
rol
xor
pop
rep
push
xor
inc
inc
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
push
push
call
jecxz
xchg
add
add
xchg
cwtl
add
mov
sti
add
push
add
add
add
xchg
lods
sti
pop
testl
add
mul
xchg
pop
lds
add
in
fcompl
leave
je
mov
push
push
push
push
lea
push
lea
push
call
mov
mov
stc
test
xlat
add
jnp
add
xchg
lods
add
add
stc
lock
add
pusha
jge
add
push
lret
jp
mov
les
enter
in
pop
xor
push
push
call
mov
add
jae
jp
jge
shlb
ljmp
add
jne
add
aam
test
fldln2
add
les
add
add
mov
sub
pop
add
push
not
xor
pop
mov
push
push
push
call
add
add
jecxz
add
stos
stc
fmuls
add
fucom
add
popl
add
fildl
pop
add
add
add
cmpl
add
add
add
add
std
iret
add
icebp
add
test
jae
addb
xchg
ljmp
clc
lcall
adc
push
push
push
call
mov
in
add
push
add
loopne
out
mov
js
imul
jmp
repnz
cmpb
cli
mov
iret
pushf
add
mov
mov
cmpsl
lcall
jmp
fmul
xchg
mov
movsb
add
in
hlt
lcall
les
sub
sub
add
add
pop
add
push
push
push
push
call
add
mov
add
add
add
mov
add
xchg
add
incb
jp
add
add
pusha
add
add
mov
insb
xchg
add
test
pusha
add
jne
push
not
ror
sub
pop
push
mov
xor
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
push
filds
add
shlb
push
mov
jae
add
fildl
mov
add
pusha
in
xchg
mov
add
mov
add
jne
add
testl
loopne
lcall
lock
push
push
push
push
push
lea
push
push
push
call
filds
mov
add
add
out
roll
loope
fdivrp
mov
add
add
mov
cmpsb
jge
add
pop
add
mov
add
push
push
push
push
push
push
push
push
push
push
call
xlat
mov
add
push
add
pop
add
incb
lods
shrl
add
push
cld
add
stc
out
add
add
out
add
loope
push
mov
jp
cwtl
pusha
add
add
add
fwait
mov
add
pop
rep
push
add
pop
mov
push
push
push
push
push
push
push
push
push
call
js
add
mov
push
icebp
add
add
add
add
add
lcall
or
push
push
call
add
pop
fs
pop
lock
lret
add
js
xchg
add
test
xchg
add
int
add
in
add
int
jns
push
add
jecxz
add
xchg
faddl
jl
add
pop
icebp
std
add
xlat
xlat
imul
push
push
push
push
lea
push
push
push
call
mov
std
hlt
mov
add
icebp
add
lock
add
test
js
add
add
lea
leave
add
mov
movl
jno
add
xchg
rorb
xchg
add
sub
pop
or
je
push
lea
push
push
push
lea
push
push
push
push
push
call
add
test
pushf
movsb
add
add
pusha
idiv
scas
add
imul
add
data16
add
add
add
jnp
jl
jnp
hlt
add
rcl
mov
add
in
fcompl
repz
push
push
lea
push
push
push
push
push
push
push
push
call
lahf
xchg
add
addb
lret
push
gs
lods
cltd
pop
push
add
ljmp
add
add
mov
mov
add
xchg
data16
int3
add
lret
jo
mov
sahf
sub
pop
add
push
push
push
push
call
add
add
stos
mov
xchg
xchg
add
outsl
add
iret
fscale
jae
addr16
add
mov
pop
fldl
aad
leave
add
sub
pop
rep
push
push
push
push
push
push
push
call
xchg
rcrb
xchg
add
add
addr16
addb
out
jno
insb
add
pusha
xchg
pop
add
pusha
addr16
sub
pop
pop
push
push
sub
push
xor
add
xor
sub
inc
not
sub
pop
rol
pop
push
lea
pop
pop
push
rol
lea
pop
mov
mov
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
shlb
js
pop
add
add
add
add
rolb
sbb
movsl
lret
pop
add
pusha
scas
add
sub
pop
mov
jmp
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
mov
mov
pop
add
out
add
cltd
ja
mov
add
mov
add
add
add
mov
add
in
loopne
push
mov
push
ror
not
pop
add
push
push
pop
push
push
inc
add
pop
push
push
push
push
push
push
push
push
push
call
add
mov
push
rolb
cwtl
push
std
cmpsl
xchg
mov
add
push
add
pop
jecxz
add
std
movl
data16
add
fiaddl
add
data16
jmp
mov
clc
add
mov
push
ret
repnz
mov
loopne
testb
mov
sub
pop
push
push
sub
pop
mov
pop
push
ror
shr
dec
pop
pop
pop
push
not
shr
pop
pop
push
push
lea
push
push
push
push
lea
push
call
scas
cmpsl
mov
xchg
add
push
data16
pop
mov
add
add
add
add
mov
pop
mov
xchg
jmp
jnp
jge
add
push
push
pop
int3
loope
pop
add
add
add
add
sbb
add
mov
sub
pop
leave
ret
push
push
call
test
mov
out
mov
xchg
mov
add
outsl
add
jmp
cld
add
in
clc
pop
push
push
add
not
sub
sub
pop
mov
push
xor
shl
sub
pop
add
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
je
jns
add
pop
add
fsubp
bound
aad
imul
push
add
leave
out
cwtl
test
loop
or
mov
mov
add
sti
add
push
cmpsb
lock
mov
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
call
sti
add
add
jp
loop
add
push
pop
add
pop
add
add
add
pop
sub
pop
push
push
add
pop
movl
addl
push
ror
ror
pop
test
je
push
xor
pop
mov
push
inc
xor
pop
pop
pop
push
push
push
push
call
add
xchg
faddl
stc
push
add
int3
pop
add
add
add
scas
loop
nop
int
out
add
add
mov
jb
add
add
add
add
add
repnz
cli
mov
roll
ja
ja
mov
ja
in
lock
pop
push
lea
push
push
push
push
push
call
mov
add
test
lret
insb
push
pop
mov
push
lret
add
gs
add
add
test
and
jecxz
add
add
mov
add
fs
int
in
push
call
ret
pop
inc
lea
inc
pop
leave
ret
push
lea
push
lea
push
lea
push
push
call
insb
stos
add
lcall
add
filds
pop
lods
popf
add
add
add
mov
add
add
fisttps
add
mov
add
add
pop
popa
push
cltd
loope
sti
imul
sub
pop
push
push
sub
add
shl
pop
mov
add
push
shr
rol
lea
add
pop
push
push
push
sub
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
stc
add
mov
lahf
out
shrb
add
add
add
push
push
add
push
cmpsl
ja
add
add
lahf
add
in
push
in
mov
add
loop
mov
mov
addl
sub
pop
push
push
pop
testl
addl
push
rol
sub
shl
pop
push
call
push
lea
push
push
push
call
lret
imul
mov
add
shrl
hlt
cld
add
gs
add
enter
add
mov
add
add
lcall
inc
cld
push
lea
push
lea
push
call
lods
add
jae
add
sbbl
mov
add
into
add
add
js
in
add
add
adc
add
jnp
data16
add
add
add
add
pop
xchg
lods
add
add
add
fiadds
jne
in
hlt
lcall
jne
push
lea
push
push
push
lea
push
call
add
cltd
nop
xchg
mov
cld
fidivrl
leave
fsubl
jae
mov
add
mov
out
ret
mov
js
add
cmc
cli
add
icebp
aam
addl
add
add
add
in
lcall
ljmp
push
xor
add
pop
call
cmpl
jne
push
push
push
push
push
push
call
add
add
rcrb
pop
add
and
add
arpl
lods
rolb
add
xlat
add
add
add
jmp
in
pushf
addr16
add
sub
pop
pop
push
lea
pop
pop
pop
push
shr
ror
xor
inc
pop
pop
push
push
push
push
push
push
push
push
push
call
std
gs
cmpsb
add
fwait
add
add
add
add
lds
add
add
cmpsl
push
xchg
fwait
mov
add
movsl
add
js
add
clc
add
mov
cwtl
add
add
mov
fiaddl
add
add
mov
flds
sahf
add
jnp
add
call
add
rolb
ret
push
push
lea
push
call
fildl
add
add
mov
pop
add
add
mov
out
sarb
sub
pop
push
push
rol
lea
pop
mov
push
shl
add
pop
add
push
push
lea
push
push
call
add
push
add
iret
push
cltd
cwtl
push
xchg
mov
add
add
mov
add
sahf
test
cld
mov
mov
cmpsl
mov
add
int
jb
add
push
add
xchg
aam
add
cmpsl
enter
aad
loop
lods
jno
sub
pop
push
push
push
push
lea
push
push
call
add
jmp
in
lahf
add
shlb
cli
iret
add
mov
cmpsl
add
jge
pushf
add
add
fldl
add
add
add
cli
sar
nop
xchg
add
push
shlb
add
arpl
iret
add
in
lock
lcall
push
push
lea
push
call
cmc
fsub
xchg
test
add
add
pusha
mov
add
add
add
in
lea
je
lods
incb
jge
fdivl
scas
iret
popa
pop
rcl
push
pop
call
insb
clc
icebp
lock
rcrl
lahf
cwtl
cli
lcall
hlt
pop
push
movl
push
lea
push
push
push
push
push
push
push
push
lea
push
call
push
stc
add
test
pop
add
add
jp
cmpb
stos
cmpb
xchg
add
in
lods
add
fs
sahf
add
out
faddl
hlt
jge
add
sub
pop
push
push
rol
not
ror
pop
call
push
dec
add
rol
pop
push
call
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
fadds
add
clc
add
pop
add
add
clc
rolb
lods
pop
fsubl
les
mov
add
popf
push
out
cltd
add
lcall
insl
cld
add
rcrb
cmpl
jne
pop
push
sub
inc
xor
dec
pop
pop
pop
push
ror
not
xor
pop
pop
push
push
lea
push
call
xchg
int
jmp
scas
test
iret
add
push
lahf
add
clc
jo
add
push
sahf
add
mov
iret
add
into
add
push
push
lea
push
push
push
push
push
push
push
call
mov
aam
add
cmp
xchg
sarl
fmulp
add
add
iret
add
ret
add
movsl
add
scas
jge
add
add
std
out
add
in
jbe
add
jp
xchg
add
jbe
add
add
sub
pop
ret
push
push
push
push
push
push
call
add
add
add
mov
pop
mov
jo
pusha
add
movsb
insb
testb
ficomps
xchg
fistl
popl
add
out
movb
pop
push
mov
push
shr
not
pop
add
push
push
call
clc
icebp
test
out
hlt
add
add
add
add
leave
out
add
mov
std
scas
add
mov
test
add
mov
mov
add
add
pushf
mov
clc
pop
push
push
push
sub
pop
push
push
push
push
ror
dec
rol
push
push
pop
add
ror
add
add
sub
add
add
pop
xor
sub
pop
push
dec
pop
pushl
call
push
add
ror
add
xor
pop
call
push
push
add
rol
push
push
pop
add
lea
not
rol
sub
shl
pop
rol
pop
push
sub
shl
pop
pushl
call
push
dec
pop
call
push
push
inc
push
and
add
sub
sub
rol
pop
shl
shl
shl
lea
pop
push
push
push
push
lea
push
push
call
add
lret
xchg
add
lahf
add
add
jmp
mov
add
add
push
data16
add
mov
add
add
lods
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
mov
pop
cmpl
pop
add
xchg
enter
cmpl
mov
cli
mov
mov
stos
call
out
sub
pop
call
call
push
push
lea
sub
sub
push
sub
add
xor
sub
rol
sub
shr
sub
shl
not
pop
shl
shl
pop
push
sub
shl
ror
shl
pop
pushl
push
rol
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
add
xchg
xchg
pop
mov
stos
lods
add
into
add
xchg
aad
lcall
add
mov
xchg
add
cmc
add
jp
imul
add
icebp
add
xchg
mov
add
pop
imul
lcall
shrb
enter
push
push
pop
add
lea
add
sub
dec
ror
pop
sub
inc
ror
pop
push
rol
pop
pushl
push
push
call
xchg
shll
loopne
jbe
jecxz
xchg
ret
popl
add
fwait
icebp
add
xchg
rcl
movsl
out
add
xchg
push
icebp
jle
add
mov
call
add
aad
fcomi
movsl
in
add
in
clc
lcall
push
inc
add
push
push
push
push
lea
push
push
push
call
push
pop
xchg
pop
mov
add
nop
xchg
add
push
mov
mov
cmpsb
stos
add
stos
mov
add
cmpsb
xchg
in
add
aad
add
fadds
add
xchg
add
add
add
add
cmpsb
add
add
add
push
add
xchg
popa
add
pop
call
push
push
not
sub
rol
push
or
inc
add
sub
sub
rol
dec
shl
pop
sub
pop
push
xor
pop
pushl
push
sub
pop
call
push
add
pop
call
push
push
shr
xor
push
xor
add
lea
lea
shr
sub
sub
shl
pop
sub
shr
pop
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
je
rclb
add
cmp
add
add
test
xchg
icebp
add
push
xchg
add
add
in
je
in
rol
add
call
call
cltd
mov
add
add
pop
add
lcall
jne
push
push
lea
push
push
push
push
push
push
push
call
pop
mov
std
jle
icebp
add
add
mov
scas
call
add
lret
xchg
cltd
test
outsl
add
add
jae
add
stos
ja
xchg
cwtl
jecxz
xchg
add
add
add
cmpsl
add
jb
fistpll
call
push
inc
not
add
pop
call
push
push
inc
push
xor
add
shr
sub
sub
add
shl
pop
inc
pop
push
xor
rol
pop
pushl
call
push
push
push
push
lea
push
call
rolb
add
movb
pop
enter
jge
fldl
add
test
lds
stos
add
insb
loop
in
aad
push
pop
add
scas
jecxz
repnz
add
add
add
aam
cli
movsb
mov
jno
mov
addb
add
pop
out
popf
in
mov
mov
add
scas
roll
mov
sub
pop
call
mov
push
rol
lea
pop
lea
sub
push
ror
pop
mov
push
push
push
call
mov
xchg
pop
push
in
add
stos
mov
mov
je
jne
roll
add
hlt
add
out
aam
pop
jmp
insb
rolb
add
cmpsb
nop
movsb
testb
lret
loopne
mov
mov
jle
jle
add
in
hlt
lcall
call
dec
sub
push
lea
push
push
push
push
call
mov
data16
lock
push
jo
lret
mov
nop
add
call
xchg
nop
add
pop
ljmp
xchg
call
add
in
add
int
lock
ja
jne
push
add
add
out
test
mov
add
aam
push
add
jns
out
lods
add
js
fiadds
mov
into
stos
sub
pop
add
push
shl
rol
not
pop
mov
push
pop
mov
push
push
call
loopne
mov
lods
add
imul
fildl
mov
add
add
xchg
pop
push
add
push
lahf
add
add
add
and
shl
add
add
add
sub
pop
add
add
push
push
push
push
push
lea
push
push
call
pop
scas
rcrb
add
cld
mov
mov
out
add
add
add
xchg
add
popl
add
add
lods
iret
fadds
push
popf
mov
in
in
mov
push
push
lea
push
push
lea
push
call
add
add
pusha
lahf
add
in
ljmp
mov
add
cltd
jge
add
out
add
add
popa
pop
add
mov
push
bound
add
add
add
jb
jge
in
in
pop
mov
push
sub
pop
cmp
jne
push
lea
xor
xor
ror
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
push
call
cmpsb
shll
fs
fldl
out
pop
add
cmpsb
add
xchg
mov
std
fildl
add
jae
jno
loopne
mov
jno
sub
pop
movl
jmp
push
push
push
push
push
lea
push
call
push
add
js
mov
jl
add
add
fcmovnu
lds
add
jb
stc
add
arpl
cld
sahf
push
roll
aam
insb
mov
arpl
add
add
mov
mov
add
out
mov
call
mov
mov
push
lea
push
push
lea
push
push
push
push
lea
push
call
push
mov
xlat
jb
add
stc
add
cli
addb
jbe
push
mov
jns
add
add
pop
stos
roll
std
out
add
add
xlat
add
add
repnz
sub
pop
sub
jne
mov
push
push
lea
push
lea
push
push
push
call
movb
roll
mov
mov
add
subb
add
xchg
mov
jns
add
add
mov
cltd
xchg
add
add
jo
add
add
push
push
fldcw
iret
lea
add
hlt
add
mov
in
add
sub
pop
movl
push
push
push
push
push
call
xchg
add
add
cltd
popl
aad
add
rolb
add
in
fwait
cld
mov
icebp
int
add
add
cmpsl
out
add
add
imul
push
xchg
mov
push
add
int
add
push
dec
shr
xor
dec
pop
mov
mov
push
push
lea
push
push
push
lea
push
call
add
add
loopne
add
add
lea
push
add
add
filds
pop
jecxz
int3
push
mov
mov
add
xchg
pop
aad
popa
js
mov
add
pop
add
jl
pop
xchg
jge
int3
scas
add
cli
add
test
add
add
inc
inc
inc
pop
movl
push
rol
ror
pop
jmp
push
rol
dec
pop
mov
cmpw
jne
push
rol
pop
mov
push
push
lea
push
push
lea
push
push
call
add
pop
add
pop
xchg
add
aam
add
pop
cwtl
mov
add
jno
add
add
mov
xchg
in
add
cwtl
mov
pop
bound
out
imul
add
lea
cmc
in
add
loop
insb
add
add
add
add
sub
pop
movl
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
add
pop
lahf
add
movsl
ljmp
jmp
icebp
data16
add
mov
out
rclb
add
add
std
jge
add
push
in
popl
shll
xchg
add
in
in
jmp
push
add
pop
pushl
push
sub
pop
pop
push
xor
inc
pop
mov
push
lea
pop
mov
push
push
lea
push
call
popa
add
orb
mov
loopne
add
add
add
fcmovbe
add
loope
mov
add
test
add
add
mov
pop
mov
popa
add
push
add
jmp
add
mov
pop
mov
push
push
dec
sub
shr
lea
push
sub
add
add
sub
sub
sub
rol
add
add
pop
lea
not
add
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
lret
cld
loope
add
jle
add
push
jp
mov
fisubrs
add
pushf
cltd
test
mov
mov
jle
add
add
les
mov
add
jge
add
in
fcomps
push
push
push
call
add
add
add
add
pusha
ja
in
lret
add
mov
pop
xchg
outsl
add
icebp
jmp
add
bound
add
fiadds
add
into
add
sar
add
add
addb
mov
add
add
xchg
pop
add
call
push
dec
pop
cmpl
je
push
push
sub
not
push
or
not
add
sub
xor
sub
sub
xor
shl
pop
add
shl
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
jmp
arpl
add
jl
testl
cltd
mov
add
xchg
sahf
cld
mov
add
repnz
add
idiv
mov
pop
pop
xchg
jae
jnp
in
loopne
lcall
push
lea
push
push
lea
push
push
push
push
push
push
push
call
cmpsl
push
mov
mov
les
flds
divb
fildl
repnz
add
add
rorl
push
mov
mov
in
fcomps
push
xor
add
fldz
ret
imul
add
ret
test
inc
rol
push
and
add
sub
sub
add
shl
pop
shl
add
rol
pop
push
shr
sub
lea
add
pop
push
push
add
pop
call
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
push
bound
add
add
je
int
add
add
rcll
add
mov
add
sub
push
stos
add
rolb
sub
pop
cmpl
je
push
push
ror
sub
not
lea
push
xor
add
shl
add
sub
add
sub
add
shl
pop
add
pop
push
sub
not
pop
push
push
lea
push
push
call
add
xlat
add
add
mov
add
add
pop
pop
add
je
mov
leave
ret
in
mov
imul
imull
add
add
xchg
fisubs
mov
lret
add
add
add
test
add
fidivrs
test
add
mov
add
push
push
push
push
push
lea
push
push
push
push
call
add
pop
clc
add
test
lahf
add
ffree
xchg
add
test
test
add
mov
add
mov
push
add
mov
js
add
add
jbe
addl
out
mov
test
movsl
outsl
add
in
fdivr
lcall
cmp
rol
je
push
push
not
push
and
add
shl
dec
dec
sub
lea
not
pop
xor
ror
dec
pop
push
dec
ror
not
pop
push
push
sub
ror
not
pop
call
push
dec
pop
cmpl
je
push
push
sub
shl
push
sub
add
inc
sub
add
add
pop
shr
pop
push
lea
dec
pop
push
call
push
push
push
push
call
add
fstps
in
mov
test
jae
add
out
mov
add
mov
scas
add
add
shrb
lock
cmpl
je
push
push
shr
shr
inc
push
and
add
sub
inc
sub
add
add
pop
add
sub
ror
shl
pop
push
push
lea
push
call
clc
add
test
jl
cli
mov
movsl
in
test
je
iret
pusha
testb
int3
add
std
push
add
ret
test
jbe
popa
add
mov
jbe
out
out
push
ret
add
mov
add
mov
add
add
jae
cmc
sub
pop
push
call
push
lea
pop
cmpl
je
push
push
inc
not
shl
xor
push
or
inc
add
sub
lea
pop
add
dec
add
pop
push
rol
pop
push
call
push
xor
pop
cmpl
je
push
push
inc
rol
push
or
inc
add
shl
sub
add
pop
sub
sub
pop
push
add
shr
add
pop
push
push
push
push
push
push
call
mov
add
mov
pop
sahf
jae
faddl
add
popf
mov
add
add
pop
add
into
sahf
test
mov
test
mov
movb
lock
push
add
jl
lock
add
add
icebp
aad
movsb
add
jne
pusha
add
scas
add
add
in
in
lcall
je
add
cmpl
je
push
push
push
sub
add
sub
sub
rol
xor
lea
pop
ror
pop
push
sub
add
not
pop
push
push
push
push
lea
push
call
jmp
add
add
add
add
add
fwait
int3
out
loopne
add
xchg
add
sar
bound
pop
mov
add
add
cwtl
add
add
add
add
mov
loopne
add
add
mov
xchg
mov
add
sub
pop
call
push
push
push
push
lea
push
call
xchg
pop
add
add
add
mov
sti
push
lods
push
pop
xchg
jo
mov
xchg
bnd
decb
add
ja
push
add
into
add
ret
mov
add
test
add
add
ret
add
lcall
cmp
test
add
add
int3
xor
sub
add
push
xor
add
sub
sub
not
lea
xor
shr
pop
dec
pop
push
inc
dec
sub
pop
push
call
push
inc
xor
pop
cmpl
je
push
push
dec
ror
inc
push
or
not
add
not
sub
sub
sub
rol
pop
dec
dec
pop
push
add
xor
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
mov
filds
roll
add
mov
cmpsb
add
popl
add
stos
in
add
hlt
add
lcall
mov
pop
add
mov
xchg
ret
mov
ljmp
ja
out
push
mov
add
add
add
mov
aad
jbe
cmpsb
mov
add
sub
pop
call
push
dec
xor
shl
ror
pop
cmpl
je
push
push
rol
shl
push
sub
add
shr
inc
sub
xor
xor
sub
pop
ror
ror
pop
push
push
push
push
lea
push
push
push
call
push
jno
xchg
out
jns
xchg
add
add
add
cld
add
push
jge
add
add
mov
pop
add
add
add
add
add
add
xchg
add
lods
lret
add
add
lods
enter
sub
pop
push
push
dec
pop
call
cmpl
jne
push
add
shl
shl
pop
mov
push
add
pop
movl
push
shr
lea
pop
jmp
push
push
lea
push
push
push
push
push
push
call
add
add
pop
lods
int
pop
add
add
add
add
gs
stos
add
add
mov
incb
add
int
add
arpl
pop
add
jne
in
push
addl
add
add
cmpsl
addb
push
lea
push
lea
push
lea
push
push
lea
push
push
call
pop
add
mov
add
pop
push
add
add
add
pop
mov
jle
add
shll
clc
xchg
test
pop
lds
nop
lods
leave
jnp
add
push
outsl
add
pop
add
add
add
push
add
mov
add
icebp
test
pop
add
enter
add
add
icebp
cmpsb
sub
pop
pop
push
dec
ror
pop
pop
push
push
push
lea
push
lea
push
push
push
call
add
push
mov
pop
push
mov
lods
scas
aam
fadd
add
add
fs
add
out
aam
lret
add
pusha
into
loop
out
add
add
mov
add
add
test
jbe
jmp
mov
add
add
mov
mov
add
push
xor
not
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
lret
add
arpl
ja
out
addw
lret
add
jbe
add
mov
sub
pop
leave
push
add
sub
not
add
pop
ret
push
push
push
call
insb
add
insb
add
mov
add
pop
lret
xchg
pop
add
cld
push
add
mov
mov
cwtl
cld
add
xchg
xchg
addb
in
hlt
lcall
push
shl
ror
pop
mov
push
lea
push
push
push
push
push
push
call
lods
into
add
add
jmp
add
add
xchg
add
mov
add
add
mov
xchg
rcrb
fs
add
jno
in
in
lcall
in
cmpl
jne
push
push
sub
push
or
not
add
inc
sub
dec
ror
inc
shr
pop
not
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
push
std
xchg
in
mov
pop
mov
xchg
add
in
add
jno
rcl
jmp
jge
add
add
fdivr
lcall
jne
call
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
add
movl
add
add
lcall
add
call
push
not
pop
jmp
push
sub
xor
pop
cmpl
jne
push
push
push
call
movsb
mov
cld
stc
xchg
add
in
jmp
jno
add
lea
cmpsl
add
push
add
add
fisubl
hlt
pop
mov
call
push
lea
push
push
push
push
push
call
pop
mov
popa
leave
mov
jecxz
fidivs
test
add
arpl
add
mov
out
mov
xchg
add
lods
loope
add
in
mov
lods
add
jbe
pop
add
xchg
cwtl
add
add
mov
cwtl
pop
out
push
sar
movl
in
call
int3
pop
jmp
push
xor
pop
cmpl
jne
push
push
add
push
sub
add
ror
xor
sub
shl
pop
add
lea
inc
add
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
fidivl
add
icebp
add
xchg
addb
js
add
bound
movsb
out
push
jae
add
add
roll
shll
add
mov
iret
mov
icebp
cld
add
out
mov
add
add
jne
call
push
push
call
add
add
xchg
jp
fwait
scas
mov
add
add
ljmp
push
mov
add
sarl
lods
mov
lret
nop
add
loope
in
add
insb
push
add
in
add
add
leave
ljmp
add
add
xchg
add
add
rcrl
add
add
rclb
inc
shll
jae
jnp
push
push
call
add
ljmp
jl
enter
add
add
mov
lods
jns
bound
add
mov
add
rcr
xchg
push
hlt
xchg
test
xchg
mov
add
lcall
adc
add
push
push
push
lea
push
push
call
add
enter
mov
add
shlb
pop
add
divl
in
in
jnp
mov
add
mov
push
imul
push
fdivrl
test
add
add
fs
lock
filds
mov
pop
sbb
add
xchg
add
mov
in
lcall
jge
add
test
add
add
push
lea
push
push
push
push
push
push
lea
push
call
add
enter
add
jle
pop
data16
out
add
nop
fsubrs
add
ffreep
test
add
add
cltd
add
xchg
pop
add
add
popl
jge
add
add
push
push
push
push
call
js
scas
add
and
add
add
movb
add
add
ljmp
mov
add
add
add
jle
arpl
add
fsubr
fsubrl
add
mov
mov
loop
sub
pop
mov
push
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
jmp
xchg
mov
aam
ret
lock
push
shl
pop
imul
imul
test
in
fiadds
add
push
add
add
xchg
jle
insb
add
xchg
mov
cmpsb
in
mov
mov
add
sub
pop
call
push
push
push
sub
add
ror
sub
shl
lea
pop
sub
dec
add
pop
push
lea
push
push
push
push
push
call
mov
rcr
add
jne
addl
pop
scas
add
add
add
andl
cmpsl
bound
push
cmc
rolb
xlat
cld
insb
mov
mov
movl
add
push
add
mov
in
call
pushl
push
push
lea
push
call
add
add
add
push
xchg
scas
jecxz
enter
add
arpl
fs
bound
jb
icebp
add
add
mov
add
std
add
add
add
add
popa
xchg
push
add
sti
push
add
pusha
in
add
add
clc
push
jecxz
add
add
lcall
lock
add
lea
push
call
hlt
cmpsl
movsb
clc
or
test
mov
add
lea
filds
ljmp
cltd
add
jbe
loopne
mov
data16
in
jbe
fcoms
popf
add
pop
test
rolb
add
std
enter
add
popa
fimull
cmpsl
sub
pop
call
push
push
sub
not
push
and
add
ror
add
sub
lea
lea
dec
pop
xor
rol
inc
inc
pop
push
lea
push
call
mov
add
add
idivb
rolb
add
arpl
add
push
out
lcall
cltd
sub
pop
pushl
push
push
push
push
push
push
call
mov
cmpsb
xchg
xchg
add
js
loopne
pop
insb
add
loop
jp
out
add
add
out
lret
pop
xor
add
sub
pop
call
push
sub
dec
pop
call
push
push
sub
ror
shr
push
push
pop
add
sub
rol
shl
ror
pop
add
pop
push
push
push
call
add
add
lret
add
loop
pop
mov
add
je
mov
add
push
add
lea
icebp
add
fwait
jb
add
mov
add
add
idivb
ljmp
push
sub
pop
pushl
push
dec
shl
shr
rol
pop
call
call
push
push
shl
not
shl
sub
push
xor
add
xor
sub
not
sub
xor
lea
dec
pop
pop
push
push
push
push
push
push
push
push
call
add
add
add
sti
add
roll
out
movl
add
incb
mov
add
scas
in
add
add
je
in
loopne
pushl
push
push
push
push
call
add
mov
add
add
mov
imul
loopne
aam
add
mov
out
add
add
loopne
lret
add
call
add
xchg
add
add
fldt
sbb
add
imul
outsl
test
jbe
add
xchg
mov
mov
in
xchg
sub
pop
call
push
push
push
push
push
push
push
call
add
imul
je
add
add
fldcw
shlb
jne
out
sahf
add
test
loopne
add
add
xchg
enter
sahf
leave
add
add
lcall
shrb
cwtl
push
xor
shr
shr
rol
push
xor
add
add
sub
rol
pop
add
pop
push
not
shr
add
not
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
icebp
add
lret
add
add
add
add
mov
xchg
cmp
mov
add
pop
outsl
jecxz
ret
add
sub
pop
call
push
add
lea
lea
pop
call
push
push
dec
push
xor
add
dec
xor
add
sub
pop
add
pop
push
xor
shr
rol
pop
pushl
push
lea
push
lea
push
lea
push
call
mov
gs
shl
xchg
fwait
jmp
add
roll
add
imul
xchg
add
mov
pop
fldenv
add
push
add
mov
bnd
mov
call
call
push
push
add
add
not
push
sub
add
shr
sub
dec
sub
shl
inc
pop
inc
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
lret
add
push
fdivrp
int
add
pusha
add
mov
in
rcrb
lcall
mov
in
jae
mov
fsub
push
enter
mov
in
fcompl
jne
call
push
add
ror
rol
pop
call
push
push
shr
sub
push
sub
add
rol
sub
shr
sub
inc
pop
not
pop
push
not
add
pop
pushl
push
push
push
lea
push
call
add
add
lret
xchg
add
add
loope
add
jb
fildl
pop
mov
cli
popf
outsl
leave
mov
push
roll
push
mov
mov
ljmp
aam
jnp
test
lcall
jns
add
push
rol
rol
pop
call
push
push
ror
xor
push
or
inc
add
inc
lea
sub
dec
pop
rol
pop
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
mov
lret
mov
out
mov
mov
clc
mov
jbe
add
hlt
int
add
add
jge
pop
add
sbb
mulb
add
add
fwait
add
add
arpl
gs
add
rorl
fcompl
jne
call
push
push
push
push
push
call
mov
repnz
add
add
into
fs
push
jae
push
pop
arpl
into
out
enter
add
pop
addb
lds
push
cmc
ja
jae
xchg
stos
pop
add
mov
loopne
jb
rolb
lcall
shrb
cmpsb
sub
or
inc
add
shr
add
sub
inc
pop
pop
push
push
push
lea
push
push
push
call
add
jnp
lock
add
xchg
add
mov
xchg
lea
jno
add
add
in
push
add
jl
add
lcall
jne
push
sub
pop
call
push
xor
pop
lea
push
push
push
push
lea
push
push
call
add
add
add
cmpsl
insb
int3
scas
pop
ret
pop
test
jl
add
icebp
add
add
add
add
push
add
add
add
push
rolb
add
jp
stc
add
push
in
filds
add
mov
add
shrb
xor
push
push
pop
add
add
sub
sub
add
pop
shr
pop
push
pop
pushl
push
lea
push
push
push
lea
push
push
call
add
xchg
cmc
add
sahf
pop
add
add
add
add
repnz
add
imul
add
add
subb
add
add
faddl
add
lcall
sbb
add
shrb
mov
int3
dec
push
push
pop
add
shr
ror
sub
add
xor
add
xor
pop
shl
pop
push
sub
sub
lea
lea
pop
pushl
push
shr
inc
not
shl
pop
call
push
lea
push
push
lea
push
lea
push
call
fiadds
mov
fucomi
pop
xchg
add
add
add
add
mov
popl
pop
push
pushf
push
test
add
add
add
sub
pop
call
push
push
dec
add
shr
push
sub
add
shr
ror
sub
sub
add
pop
shr
sub
shr
dec
pop
push
push
push
push
push
push
lea
push
call
add
jecxz
insb
jo
cmpsl
add
mov
mov
outsl
into
mov
add
pop
cli
fwait
push
fmul
int3
add
mov
mov
add
add
add
push
lahf
add
adc
sub
pop
pushl
push
inc
xor
pop
call
push
lea
push
call
pop
fcomps
add
add
data16
movsb
mov
add
add
out
add
out
aam
push
mov
xchg
add
pop
add
test
addl
pop
mov
add
add
add
pop
ja
cmpsl
add
jmp
add
cwtl
lods
fadds
add
pop
call
push
push
xor
inc
push
sub
add
dec
add
sub
add
inc
dec
pop
lea
xor
lea
pop
push
sub
sub
pop
pushl
call
push
push
add
dec
shl
not
push
or
inc
add
dec
ror
sub
sub
lea
ror
pop
inc
pop
push
push
shl
ror
inc
lea
push
or
not
add
inc
rol
xor
sub
inc
add
rol
rol
pop
not
ror
dec
pop
push
push
lea
push
push
push
push
call
pop
cmpsl
add
jns
popa
add
imul
add
add
out
add
add
sti
addr16
add
pop
mul
mulb
loop
out
xchg
pop
sub
pop
call
push
shr
pop
pop
dec
jne
push
lea
push
lea
push
push
lea
push
lea
push
call
add
scas
add
add
pushf
jp
xchg
mov
jmp
hlt
pop
add
rcll
add
gs
add
add
add
xchg
aad
add
jmp
add
jecxz
sub
pop
call
mov
push
push
push
push
call
cli
push
push
add
xchg
repnz
scas
add
mov
add
add
mov
test
sahf
aad
push
add
mov
mov
add
pop
aad
in
lock
lcall
add
shl
dec
dec
pop
lea
push
push
shr
dec
lea
push
sub
add
dec
sub
sub
add
pop
add
pop
push
lea
push
push
lea
push
call
add
add
add
test
jnp
jge
mov
push
add
mov
aam
jns
xchg
movb
iret
fcomps
lock
add
arpl
hlt
mov
imul
lock
lcall
jne
push
lea
push
push
push
push
push
push
push
push
lea
push
call
icebp
jb
xchg
add
xchg
mov
stos
xchg
fistps
aad
movsb
add
add
imul
add
add
push
or
mov
rolb
add
cmp
lds
in
fdivr
lcall
push
sbb
add
push
push
lea
push
push
push
push
push
push
push
call
add
jno
add
mov
jo
lods
add
cld
add
call
lock
mov
jecxz
ret
add
add
arpl
add
clc
mov
out
add
enter
scas
pop
test
add
fadds
mov
push
movsl
ljmp
cwtl
lods
jl
sub
pop
call
push
push
sub
shr
push
or
not
add
inc
sub
ror
sub
pop
sub
lea
sub
ror
pop
push
sub
shr
add
pop
pushl
push
push
push
push
push
push
call
add
add
fcmovnbe
rcr
mov
add
out
sti
bound
lock
add
push
push
ret
add
add
addb
add
cmpsb
mov
sub
pop
call
push
push
push
push
lea
push
push
lea
push
push
push
push
call
bound
jp
add
push
lret
add
add
movsb
lahf
mov
fldl
cld
add
add
loope
lods
in
arpl
shl
add
add
mov
lea
add
add
call
mov
push
sub
add
pop
lea
push
push
add
add
add
sub
push
xor
add
sub
add
sub
not
sub
sub
not
pop
ror
pop
push
push
lea
push
push
push
call
jnp
in
mov
jb
movsl
add
jecxz
movsl
add
out
add
xchg
mov
add
movsb
cltd
add
jle
mov
add
cmc
add
add
lock
xchg
jno
out
mov
in
add
lcall
jne
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
jno
mov
mov
add
sahf
int3
jae
mov
sar
xchg
add
jmp
mov
in
add
add
add
les
movsl
add
add
mov
pop
test
mov
add
add
add
add
leave
scas
sub
pop
lea
push
shr
shl
pop
push
push
push
call
push
cwtl
add
add
add
add
jns
xchg
add
enter
test
lret
push
add
popa
add
cwtl
add
add
add
aad
cltd
scas
jnp
out
fcoms
add
jae
add
out
cmc
push
add
pop
jmp
pushf
rolb
sub
pop
push
push
rol
pop
push
pushl
push
push
xor
add
inc
add
push
or
not
add
add
sub
inc
xor
sub
pop
pop
push
add
ror
pop
push
push
push
push
lea
push
lea
push
call
cwtl
nop
add
int3
arpl
add
add
addr16
push
xchg
fwait
js
out
add
pop
add
je
gs
add
add
add
add
mov
pushf
mov
into
pop
xchg
adcl
stc
add
add
pop
pop
add
jne
xchg
hlt
mov
in
lcall
shrb
lcall
sub
sub
push
sub
add
shl
lea
shl
shr
sub
add
add
pop
rol
add
not
pop
push
not
add
rol
pop
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
jle
push
icebp
add
xchg
test
add
mov
cwtl
mov
ja
mov
pop
fiadds
jmp
xchg
push
add
pop
lahf
add
add
popa
imul
cmc
add
shll
mov
fdivr
lcall
lods
adc
add
push
push
lea
push
lea
push
call
icebp
in
jns
push
movsl
add
add
fwait
add
bound
mov
fiadds
ficoml
add
add
clc
add
add
xlat
push
add
movl
pop
push
add
fidivs
cmc
addw
push
call
push
push
sub
push
or
not
add
not
dec
add
sub
pop
sub
ror
pop
push
push
push
call
pop
add
add
jecxz
enter
push
cld
insb
add
xchg
nop
fldl
nop
push
iret
or
xchg
jmp
lcall
add
lcall
jne
push
add
pop
call
push
pop
call
push
push
push
push
push
push
call
popa
add
lods
in
add
push
stos
js
pop
roll
cmc
fstl
js
fiadds
add
pop
pop
ja
mov
imul
andb
scas
add
int
pop
xchg
mov
mov
add
pushl
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
lods
popl
pop
test
mov
add
iret
pop
mov
jl
mov
add
stc
pop
jp
add
add
add
pop
jno
loope
add
call
ljmp
add
add
loopne
fiaddl
enter
add
xchg
fadd
push
rorl
add
loopne
in
fcomps
mov
jmp
push
push
sub
shl
shl
sub
push
sub
add
inc
ror
not
sub
xor
pop
add
shl
xor
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
add
mov
add
jae
add
movsb
popf
loop
add
roll
mov
addl
sub
pop
pushl
push
push
call
add
add
jo
mov
add
add
shll
popl
out
xchg
add
push
add
add
add
pop
gs
insb
add
lcall
add
add
push
push
lea
push
push
push
push
push
push
call
jbe
repnz
add
ror
add
rorb
add
mov
add
add
add
sub
pop
call
push
push
add
ror
push
xor
add
sub
sub
add
shr
pop
add
dec
lea
pop
push
shr
sub
pop
pushl
call
push
lea
pop
push
call
push
lea
pop
leave
add
push
lea
push
push
push
push
call
add
jle
add
add
add
jo
imulb
add
add
out
add
stos
test
pusha
jne
scas
push
add
add
jns
sub
pop
pop
push
push
push
lea
push
push
push
call
add
in
add
add
mov
jne
jl
add
mov
mov
testl
pop
aam
push
jecxz
add
add
add
in
add
add
jmp
push
add
mov
in
call
pop
pop
push
add
pop
xor
push
ror
pop
inc
push
dec
pop
ret
leave
push
sub
shr
ror
pop
ret
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
push
lods
out
add
popf
clc
add
jne
jecxz
stos
push
add
add
add
add
mov
add
test
add
add
in
fcomps
in
cmpl
jne
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
jp
add
mov
add
add
mov
mov
sbbb
mov
add
mov
ljmp
add
lcall
add
jmp
js
push
add
ret
in
fdivr
lcall
inc
and
jmp
push
push
lea
push
push
push
push
push
call
mov
mov
mov
cmpsl
add
push
add
add
add
movl
loopne
add
mov
add
mov
mov
jae
fldt
add
jnp
fldl
add
add
add
add
add
sbb
in
in
lcall
inc
or
iret
push
pop
and
xor
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
add
add
add
clc
add
faddl
movsb
push
add
imul
roll
xchg
mov
fcompl
add
test
movb
jmp
cmpsl
stos
add
sub
pop
xor
push
lea
push
lea
push
lea
push
push
push
call
mov
add
sbbl
fcomps
data16
mov
add
repnz
mov
add
xchg
mov
movsl
pop
add
push
xchg
add
mov
add
movb
add
andb
add
add
add
lcall
rolb
dec
call
sub
pop
dec
sub
push
rol
shr
add
pop
jmp
sub
push
not
add
ror
shl
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
imul
add
add
xchg
add
popa
add
add
shr
nop
faddl
mov
mov
mov
add
lahf
shrl
add
mov
fcompl
push
push
push
push
call
rolb
fsubr
jns
mov
cld
cmpb
aam
lahf
mov
test
add
jp
add
jmp
add
imul
in
lock
sub
push
rol
pop
cmp
jne
mov
push
rol
sub
pop
lea
sub
push
ror
shl
pop
mov
push
push
lea
push
push
push
push
push
call
nop
stos
jne
xchg
movl
add
add
xchg
add
fmuls
add
mov
add
add
nop
lock
add
add
lcall
push
lods
add
pusha
arpl
jl
push
add
mov
leave
add
sub
pop
shr
add
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
xorl
mov
mov
add
ficoml
xchg
add
push
imul
sub
pop
sub
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
in
push
int
add
add
mov
outsl
sti
add
mov
movsb
add
pushf
fxch
mov
add
cmpsb
xlat
xorl
jmp
cmpsl
mov
je
jge
pop
add
addr16
sahf
roll
add
jns
push
je
clc
rolb
test
sub
pop
pushl
push
push
push
call
bound
lcall
add
push
cmpb
add
mov
add
into
aad
in
add
add
sub
pop
pop
push
push
push
push
call
outsl
sti
push
test
add
add
xchg
add
add
cltd
cltd
mov
clc
pop
enter
out
add
ffreep
pop
xchg
outsl
add
lock
shr
and
push
not
inc
pop
sub
cmp
jne
push
sub
sub
sub
sub
pop
leave
ret
push
lea
add
pop
push
push
shr
dec
pop
mov
push
lea
push
push
lea
push
call
pusha
mov
mov
add
mov
add
mov
lret
add
mulb
xchg
fsubr
scas
add
add
in
ret
pushf
into
add
add
push
lahf
mov
add
stos
mov
repnz
out
test
mov
add
add
cld
push
push
push
push
call
sti
add
add
add
fistpl
add
add
pop
add
icebp
add
mov
cwtl
mov
mov
add
ret
add
sub
pop
push
push
lea
push
push
push
push
call
in
add
int3
loope
add
xchg
mov
jge
add
add
add
xchg
add
jecxz
iret
stc
scas
add
lods
add
roll
movsb
add
add
add
jae
lds
cli
add
js
sarl
in
lcall
push
lea
push
call
test
mov
cmpsl
xchg
ja
push
ljmp
filds
ljmp
enter
movsl
push
add
movsb
jp
gs
add
add
outsl
mov
add
add
cli
data16
rclb
add
add
out
add
add
sub
pop
push
push
push
shl
pop
push
push
xor
rol
sub
pop
mov
push
push
call
mov
xchg
add
stos
add
add
add
push
idivw
lea
nop
out
add
filds
add
add
add
scas
add
add
jecxz
push
out
jo
add
fisttps
pop
lea
push
lea
push
push
push
push
push
push
push
call
rolb
mov
add
je
bound
rolb
jne
bound
bound
imul
pop
add
add
mov
fsub
pushf
test
jecxz
ljmp
test
stos
enterw
add
popa
cmpsl
js
add
sarl
pop
sub
push
inc
ror
pop
mov
shr
push
shl
shl
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
rcr
js
mov
add
lock
test
add
fadds
cmpsb
add
stos
pop
jno
add
pop
add
scas
add
popa
add
add
lcall
fwait
addb
add
ret
sub
pop
add
push
rol
lea
shr
shr
pop
mov
push
shr
sub
sub
pop
add
push
rol
dec
not
shl
pop
xor
push
push
lea
push
push
push
lea
push
push
call
ret
mov
pop
add
out
pop
add
loopne
push
out
aad
add
add
jle
xchg
leave
nop
mov
shr
jle
mov
push
in
mov
les
add
add
sub
pop
mov
push
rol
ror
sub
pop
and
push
push
push
lea
push
push
call
pop
out
mov
in
pushf
in
push
add
pusha
ljmp
ljmp
add
add
xchg
mov
add
mov
jp
add
ja
xchg
add
std
lea
sub
pop
rol
rol
push
sub
lea
ror
lea
pop
xor
inc
push
push
push
push
call
add
out
add
lods
out
add
jns
xchg
pop
add
mov
mov
pusha
add
add
gs
ja
add
ljmp
cmp
jne
push
push
push
lea
push
push
lea
push
push
call
jbe
out
add
pusha
je
scas
out
in
ljmp
stc
lret
add
add
int
addb
pushf
add
add
add
lcall
inc
pop
ss
push
lea
push
lea
push
push
push
call
mov
xchg
add
pop
in
push
fwait
cwtl
add
enter
int3
cld
ror
lock
add
add
addb
popa
push
fwait
rclb
int3
add
mov
add
xchg
cli
add
lcall
mov
add
mov
roll
imulb
add
hlt
add
sub
pop
cmp
je
push
lea
push
lea
push
lea
push
push
call
imul
add
add
roll
in
fwait
add
loope
add
lods
push
mov
xchg
add
mov
jae
push
pusha
mov
pop
xchg
add
clc
in
add
add
add
push
mov
mov
mov
add
sbbb
add
add
imul
sub
pop
add
cmpl
jne
push
lea
push
push
push
call
mov
add
imul
mov
subb
add
add
mov
fiadds
add
add
mov
add
in
add
pop
xor
push
add
sub
not
pop
pop
pop
push
push
push
push
push
push
call
add
pusha
pusha
add
jle
add
add
xchg
add
mul
sti
add
push
iret
xchg
add
leave
pop
sarb
mov
data16
add
in
movsb
bound
add
add
stc
call
lods
sub
pop
pop
push
push
lea
push
call
push
mov
cmpsb
mov
in
movsl
jmp
enter
add
push
add
add
add
jnp
add
addl
add
lcall
push
sub
add
pop
pop
push
push
lea
push
push
push
push
call
add
add
xchg
stc
lods
add
fs
push
add
lcall
jge
xchg
push
pushf
add
lcall
ret
push
dec
lea
pop
mov
push
push
push
push
push
call
add
xchg
add
xorl
push
pop
add
out
add
push
xchg
push
les
out
ja
add
add
add
jbe
add
loope
add
add
push
or
into
xor
pop
mov
push
sub
sub
inc
shr
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
test
addb
mov
aam
jp
xchg
mov
mov
arpl
add
add
les
lock
test
add
pop
jl
add
xchg
gs
add
add
add
push
mov
popf
test
xchg
cwtl
in
jns
add
add
sub
pop
mull
push
inc
pop
pop
call
push
dec
sub
dec
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
aam
mov
movl
mov
stos
mov
add
mov
out
jnp
jb
add
add
int
add
lcall
in
icebp
call
repnz
pop
xor
push
push
push
lea
push
push
push
lea
push
lea
push
call
leave
in
add
cwtl
mov
ljmp
add
loop
jmp
pop
mov
push
add
les
jo
xchg
add
fildl
cltd
xlat
stc
int
lods
addb
add
addr16
pop
pop
push
push
call
enter
add
mov
in
xchg
mov
add
add
add
imul
add
add
pop
in
fucomp
out
push
add
add
mov
popf
mov
in
clc
pop
pop
push
xor
xor
rol
ror
pop
pop
pop
push
push
lea
push
push
push
push
call
add
mov
add
test
out
scas
xchg
bound
movsb
add
fiadds
fucomp
clc
test
jle
add
fs
cld
std
sub
pop
pop
leave
push
pop
ret
push
push
lea
push
push
push
push
push
push
call
add
jo
in
int
add
add
jnp
pop
mov
add
lock
iret
lahf
cli
push
test
jne
add
mov
push
add
bound
roll
xchg
xchg
jl
lret
mov
sub
pop
push
push
lea
pop
mov
push
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
test
xchg
mov
pusha
ja
add
pop
imul
sti
add
arpl
mov
mov
int3
add
aad
mov
add
imul
testb
imul
addl
add
lret
les
cmpsb
std
hlt
add
iret
add
cli
pop
lds
ja
add
lcall
push
push
lea
pop
push
push
lea
push
call
add
add
movl
jl
mov
push
xchg
mov
les
lock
cwtl
add
pop
add
add
lret
add
xchg
outsl
add
sub
pop
push
mov
push
push
push
call
repnz
pop
movsb
mov
add
stos
mov
add
add
test
add
add
add
leave
add
fldl
push
add
add
add
add
add
int
ret
sub
pop
push
push
shl
shr
dec
add
pop
pop
push
push
push
push
push
push
push
push
push
call
add
add
mov
pop
add
mov
cmpsb
jp
jecxz
add
out
jge
lcall
add
add
repnz
add
aad
leave
pusha
pop
add
add
lods
mov
add
add
lea
sub
push
lea
push
push
call
imul
xchg
pop
add
pop
jae
ja
mul
rolb
mov
xchg
rolb
add
mov
loope
add
cli
add
stc
add
lods
add
imul
imulb
add
in
mov
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
call
rcrb
xchg
add
mov
add
int
add
xlat
xchg
in
xchg
jecxz
add
add
xchg
add
jo
int3
add
add
cmpsl
std
add
mov
fcompl
ljmp
ret
pop
add
push
lea
pop
mov
add
push
not
rol
inc
pop
pushl
push
add
pop
popl
mov
push
shr
ror
shl
dec
pop
add
push
add
ror
shr
not
pop
xor
push
push
push
push
call
mov
push
jnp
add
std
jle
xchg
push
mov
out
cmpsb
stc
mov
push
sti
int3
ficoml
add
lcall
adc
push
push
push
push
push
push
push
call
mov
pop
in
lock
add
rol
add
fwait
addr16
fs
add
test
insb
filds
mov
add
sti
std
movl
jl
arpl
add
add
add
mov
jns
popf
mov
jl
add
add
testb
pop
mov
push
push
lea
push
push
call
add
pushf
mov
jge
arpl
add
pop
mov
push
add
out
subb
mov
jbe
pop
nop
stos
add
flds
add
loop
add
add
sbb
in
imul
add
cwtl
hlt
test
pop
add
addr16
mov
sti
add
lcall
rcll
rcrl
rol
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
push
roll
jno
fnstenv
fs
push
cwtl
int3
movsb
jbe
add
roll
add
add
jecxz
sarl
movsb
add
add
clc
add
add
jne
mov
add
into
xchg
add
jo
pop
pop
add
add
add
test
add
xchg
leave
gs
sub
pop
nop
push
ror
dec
pop
nop
xor
push
pop
nop
push
shr
rol
pop
nop
push
shl
rol
pop
inc
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
add
mov
add
add
ror
add
pop
imul
arpl
jl
mov
add
add
mov
clc
sub
pop
nop
push
push
lea
push
push
push
push
push
lea
push
push
call
xchg
mov
mov
aad
pop
add
fistpl
add
repnz
jae
add
add
in
mov
je
add
mov
sahf
add
mov
add
lods
sahf
into
lcall
add
mov
add
fidivl
mov
jns
add
add
jmp
add
sub
pop
nop
cmpb
jne
push
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
add
push
stc
jo
ljmp
int
in
mov
add
mov
in
loopne
add
push
push
push
push
call
enter
fcmovu
scas
mov
add
add
mov
add
add
jns
popf
in
ficomps
jmp
lcall
push
ror
pop
nop
cmp
je
push
push
push
push
lea
push
call
sarl
jnp
add
add
add
lcall
add
xchg
mov
add
jno
data16
mov
jp
loop
pop
xchg
imul
rcrl
in
pop
nop
push
sub
sub
pop
nop
push
not
ror
pop
inc
push
pop
nop
nop
push
push
push
push
push
push
lea
push
push
call
lret
push
add
add
out
loope
jecxz
jecxz
add
mov
out
add
lods
loopne
push
add
add
filds
jne
jb
xor
push
not
pop
jmp
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
mov
test
mov
int
xchg
add
push
xchg
int
mov
add
roll
repnz
lea
add
cli
scas
aam
add
add
fnop
stc
add
add
mov
add
push
push
push
push
push
lea
push
call
stos
call
xchg
scas
add
rcrl
add
jnp
mov
add
scas
mov
add
subb
add
jo
lock
mov
mov
call
int3
pop
add
mov
lcall
mov
jb
lea
push
push
push
push
push
push
push
push
push
call
mov
add
mov
into
pop
add
cmpsl
lods
push
add
add
shl
outsl
lods
cltd
push
add
add
pop
bound
rcl
std
mov
sahf
push
jno
mov
add
add
in
out
mov
xchg
fdivs
flds
push
roll
xchg
xchg
add
lds
add
pop
scas
add
lcall
inc
sbb
push
call
loope
add
push
lea
fisubl
mov
xchg
int3
scas
enter
add
icebp
add
add
mov
push
ror
sub
pop
xor
push
push
push
push
push
push
push
push
call
push
add
call
cld
ja
add
add
add
subl
add
add
add
int3
lods
repnz
add
mov
fwait
add
xchg
fldl
jne
shll
aam
in
loopne
xor
push
sub
rol
add
pop
shl
push
not
add
pop
xor
shl
push
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
add
movsl
add
add
add
jle
add
push
mov
add
loop
add
add
cltd
xchg
fstpl
add
xchg
add
leave
sahf
mov
in
loopne
lcall
dec
nop
add
loop
sub
sub
pop
shl
xor
push
lea
push
push
call
out
stc
add
fmul
mov
add
in
aad
add
add
leave
add
add
movsb
add
mov
loope
mov
loop
add
mov
std
mov
movl
sti
add
mov
push
push
push
push
push
push
push
call
imul
iret
mov
into
add
add
add
leave
push
iret
add
icebp
xchg
shrl
mov
cwtl
addr16
jle
pop
add
sti
add
in
sub
pop
add
push
add
pop
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
push
pop
scas
add
add
add
rolb
roll
test
shlb
add
aad
xchg
add
jo
push
add
pop
add
lcall
pop
push
ror
shl
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
outsl
pop
add
xchg
add
add
in
movsb
add
filds
add
add
js
sbb
add
bound
add
xchg
xlat
xchg
mov
add
pop
add
sarl
test
sub
pop
leave
ret
push
add
xor
rol
ror
pop
push
push
lea
push
push
push
push
push
call
xchg
add
xchg
add
movl
add
lea
mov
mov
add
add
addr16
clc
add
mov
out
hlt
add
data16
add
cltd
repnz
scas
test
cwtl
pop
mov
sub
pop
mov
push
push
ror
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
jo
data16
andb
cmpl
pusha
mov
add
add
jnp
adcl
add
leave
movsl
add
cld
pop
mov
mov
add
cli
cmpsb
xchg
insb
popa
mov
lret
add
cld
add
add
lcall
push
push
call
add
add
test
mov
aam
bound
add
add
add
mov
mov
mov
add
lcall
push
push
push
push
call
cltd
add
popl
add
lock
cmpsl
add
roll
add
les
pusha
pop
add
add
jp
pushf
xchg
jns
add
add
addb
loopne
jl
nop
lods
pusha
add
add
add
mov
addr16
nop
add
add
add
push
addl
in
lock
mov
push
push
push
lea
push
push
lea
push
call
imul
lods
xchg
add
mov
bound
lods
add
mov
add
add
addb
add
int
clc
add
lcall
jp
ret
ja
mov
mov
add
sub
pop
mov
push
push
lea
push
call
fiadds
aad
add
add
add
add
add
repnz
stc
add
pop
outsl
add
lods
add
add
mov
add
jae
faddl
bound
add
in
hlt
pop
mov
test
je
push
lea
push
push
push
push
lea
push
push
call
add
push
andl
push
mov
add
movsl
rol
jge
add
add
push
lods
lea
jo
add
add
add
xchg
sub
pop
mov
push
push
call
pusha
pushf
in
sahf
jne
mov
add
pushf
add
mov
add
pop
xchg
add
imul
add
add
outsl
add
fcoml
add
add
testb
mov
notl
lea
push
call
mov
add
test
lcall
xchg
mov
cld
jl
frstor
jne
aad
add
add
mov
add
clc
call
lods
sahf
mov
push
popa
mov
jno
ljmp
jno
add
iret
mov
lds
int3
push
lds
sub
pop
mov
mov
push
push
lea
push
push
call
mov
xchg
mov
filds
cld
xchg
xchg
add
add
mov
lahf
mov
add
gs
mov
add
push
add
add
shr
pop
cmp
je
push
lea
push
push
push
push
call
loopne
push
add
jmp
add
fdiv
test
les
add
mov
lds
pop
add
lock
into
add
add
rcrl
jae
add
aad
jl
add
jge
std
add
test
pop
cmpsl
addl
push
in
in
lcall
rorb
in
add
add
popf
mov
cmpsl
pop
test
insb
shll
push
call
add
out
mov
add
test
ret
add
adc
add
add
mov
lcall
mov
in
in
mov
push
shr
pop
inc
cmp
je
push
add
add
add
pop
test
jne
push
push
push
push
push
lea
push
push
push
call
jae
mov
les
rcll
lret
add
xchg
xchg
add
push
mov
scas
push
add
add
scas
add
push
push
mov
insb
cld
test
repnz
negb
add
add
add
roll
mov
sub
pop
xor
push
push
push
lea
push
push
push
call
test
xlat
lahf
add
xlat
data16
leave
mov
loope
mov
push
add
iret
cmpsb
add
add
jmp
rolb
lcall
push
ror
rol
add
pop
pop
push
push
push
call
add
add
pop
mov
mov
mov
add
lret
add
notb
jge
repnz
scas
mov
add
xchg
jbe
mov
jl
stos
pop
int3
fadds
mov
orb
pop
pop
jmp
les
add
sbb
js
push
sub
pop
pop
push
lea
push
push
push
push
push
call
add
xchg
loopne
icebp
addr16
add
mov
loope
xchg
xchg
loope
movsl
push
mov
add
jbe
add
fadds
les
add
cmc
out
jns
icebp
popa
popf
mov
xchg
add
add
les
mov
sub
pop
pop
leave
push
push
lea
push
push
call
mov
add
mov
js
push
scas
sti
add
hlt
cmpsl
lcall
add
pop
push
jbe
lahf
lret
aam
aam
lock
jge
imul
mov
fidivl
pop
roll
js
jbe
insb
pop
je
mov
add
sub
pop
ret
push
pop
mov
push
push
push
push
lea
push
push
push
call
test
idivb
std
xchg
add
mov
cwtl
sti
add
aam
in
jno
rolb
add
add
add
push
add
add
test
sti
mov
bnd
add
hlt
add
out
add
add
sub
pop
inc
cmp
jne
push
sub
dec
inc
pop
lea
push
lea
push
lea
push
push
push
call
push
mov
add
jle
add
add
jae
cmpsb
push
add
out
rolb
add
mov
movsb
add
add
stos
scas
add
add
add
movsl
add
add
add
shr
pop
add
in
lcall
popa
add
ret
fadds
lds
in
test
add
add
jnp
push
push
call
add
xchg
add
mov
jnp
fldenv
add
in
movsl
add
cli
push
loopne
call
in
add
jbe
jae
add
add
add
mov
add
jae
add
cmpsl
mov
add
cmc
sub
pop
mov
push
push
push
push
push
push
lea
push
call
add
lods
mov
mov
add
ljmp
mov
mov
add
mov
add
call
add
ret
mov
and
movsl
add
add
mov
sub
pop
add
cmp
jne
push
push
push
lea
push
push
push
call
pop
shl
xchg
lock
fs
jle
lods
add
add
in
lret
add
mov
xchg
out
add
add
add
add
addr16
add
lcall
inc
add
das
int3
jp
push
lea
push
push
push
call
fs
shl
add
pop
fadd
pop
mov
add
pop
push
repnz
mov
add
test
jne
cli
add
add
xchg
mov
jecxz
add
movsb
add
insb
lods
add
addl
test
je
push
lea
push
push
push
push
push
lea
push
push
call
je
int
cwtl
add
ja
insb
add
cli
cli
aam
add
pop
add
add
add
roll
mov
add
lret
lods
loopne
insb
lock
imull
add
push
in
add
add
mov
jno
nop
add
xchg
lea
add
in
loopne
lcall
callw
xchg
push
call
faddl
add
lret
xchg
add
add
fsubr
mov
add
imul
aad
cltd
push
cli
add
loop
jmp
pop
call
add
add
add
clc
add
add
fmul
add
add
add
mov
mov
scas
cli
lahf
jo
sub
pop
add
push
sub
xor
ror
add
pop
cmp
je
jmp
push
push
call
popl
add
test
add
mov
pop
jnp
mov
add
jle
cmpsb
add
movsl
addb
jbe
add
jge
add
sub
pop
xor
push
shr
pop
pop
push
push
push
lea
push
push
push
lea
push
call
add
jge
jmp
rcr
add
lret
fwait
ror
push
adcb
mov
add
mov
add
xchg
add
push
fstp
mov
test
add
sub
pop
pop
push
xor
inc
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
call
leave
mov
in
jo
scas
iret
mov
push
data16
push
sahf
add
add
mov
mov
cmpsb
leave
mov
cmpl
test
add
mov
add
mov
in
loopne
lcall
ret
push
push
push
lea
push
push
push
lea
push
push
call
add
add
push
into
fcoml
add
test
iret
add
cli
pop
mov
pushf
xchg
hlt
add
data16
jno
sti
loopne
xchg
movsl
add
mov
fildl
add
inc
lcall
push
call
scas
ficoml
add
mov
enter
sahf
add
add
jecxz
mov
cwtl
aad
add
add
add
pusha
loopne
imul
pop
pop
push
ror
sub
xor
pop
pop
pop
push
push
push
lea
push
push
push
push
push
call
mov
fs
add
add
lods
add
fisubrl
ret
add
cmpsb
rcl
imulb
std
add
add
add
nop
cli
add
jl
jbe
jo
je
add
pop
test
push
add
jae
call
out
movsl
cld
fwait
add
incb
arpl
mov
sub
pop
leave
push
add
not
pop
ret
push
lea
push
call
add
lods
ja
add
add
rclb
add
add
cltd
pop
mov
sti
add
pop
std
xchg
fnstsw
out
add
add
fldenv
ja
jno
mov
lock
push
push
sub
pop
mov
pop
push
lea
push
call
orb
add
add
jnp
add
add
add
iret
add
call
lock
jns
test
add
sub
pop
pop
pop
push
lea
push
call
add
mov
insb
je
add
add
add
jge
negl
add
mov
add
scas
add
outsl
add
clc
jle
push
add
out
outsl
push
add
mov
fwait
in
add
lcall
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
roll
add
std
insb
lds
add
lret
add
push
std
in
add
lcall
add
out
jmp
add
mov
add
js
pop
add
xchg
pop
add
roll
in
fcompl
push
lea
push
lea
push
push
push
push
push
push
call
add
add
push
aad
stos
in
add
cmpsl
shll
push
mov
add
addb
jmp
leave
add
fsubrp
sub
pop
ret
cmp
mov
xor
mov
mov
mov
icebp
into
mov
ror
mov
mov
lret
or
mov
xchg
lret
or
leave
dec
enter
add
int3
pushf
cmpsb
mov
xor
ret
mov
sbb
lock
stos
sub
sti
mov
jo
add
das
pop
push
add
bnd
dec
es
xchg
push
push
adc
cs
or
pop
xor
mov
xchg
cmp
divb
and
cltd
mov
xchg
rcrb
pop
pusha
xlat
jmp
pop
mov
push
in
sub
pop
pusha
mov
cltd
adc
scas
mov
scas
xorb
xchg
jle
imull
fidivrs
sub
imul
xor
jne
and
fwait
lret
sbb
sbb
ret
and
je
cmp
xchg
mov
cmp
ret
inc
jb
leave
testb
es
cli
rcrb
mov
xor
push
jns
sub
xlat
push
loopne
pop
ljmp
push
jae
cmp
pop
xchg
pop
sub
xor
push
arpl
dec
cmp
hlt
cmp
push
xchg
shrl
xchg
out
jae
adc
ret
lea
sbb
sbbl
leave
aam
xor
test
push
inc
inc
or
mov
jnp
or
aad
adc
fs
mov
mov
ret
adc
mov
xchg
mov
stc
cmp
add
adc
adc
ficoms
sbb
mov
dec
and
pusha
cli
jmp
jne
shr
ja
fsubrp
lds
jne
push
dec
mov
mov
ret
sbb
sub
fldpi
stos
xchg
ret
movsl
dec
mov
aaa
and
inc
inc
mov
mov
cmp
inc
pop
cwtl
mov
ret
jle
xor
aam
inc
imull
mov
and
fidivrl
mov
and
stc
pop
ret
hlt
mov
push
insl
mov
rcrb
stos
stos
cltd
cltd
push
push
lahf
sub
push
sub
shr
mov
repnz
and
push
arpl
and
jmp
cmc
cmp
fldcw
loopne
sub
popa
outsb
out
pop
stos
push
jecxz
fnstsw
lea
fs
mov
lods
stos
sub
pop
movsl
push
loope
xchg
loopne
or
cmp
enter
push
adc
repnz
and
movsl
lret
pop
pop
insl
sti
lcall
dec
add
cs
sbb
push
xchg
leave
cmpsb
scas
mov
into
pop
imul
jge
sbb
cmp
mov
movsl
movsb
or
mov
cmp
dec
jb
push
arpl
lds
mov
cmpsl
jle
mov
data16
pop
les
ds
outsl
out
jmp
pushf
xor
push
inc
shrb
mov
fs
jb
cmp
scas
out
idivl
xchg
rcrl
inc
cwtl
mov
cmp
or
repz
fimuls
pop
mov
adc
sarb
mov
xor
lcall
mov
orb
adc
add
cmp
xor
or
sbb
das
movsb
adc
fstl
and
and
lret
jne
mov
aaa
cli
push
or
in
pusha
fcom
subb
add
mov
and
fdivl
xchg
aaa
hlt
mov
or
sub
add
dec
dec
aad
mov
jnp
inc
out
cmc
adcb
jno
dec
sub
cmp
pop
pop
sub
fdivrs
pusha
cmp
sarb
test
add
cmp
and
icebp
lret
data16
stos
adc
cmp
dec
adc
cltd
lret
and
pop
stos
inc
sub
in
inc
or
lock
lods
fidivs
rcrb
outsl
std
iret
jnp
jo
ss
jo
dec
adc
ds
fwait
std
test
stc
sub
or
xchg
mov
std
mov
mov
add
jae
pop
dec
loop
out
outsl
dec
or
ljmp
dec
cli
out
test
sbb
mov
cmp
popa
jle
cmp
push
mov
jno
sbb
in
xchg
adc
aas
and
sbb
adc
cmp
int
mov
sbb
adc
mov
in
or
inc
xor
cld
and
add
repz
mov
lds
bnd
xlat
jne
popa
dec
xlat
je
push
enter
jl
sbb
push
enter
clc
insl
mov
mov
shrb
push
cli
push
sub
aam
push
dec
lods
mov
hlt
or
mov
cmp
xorb
cs
popf
daa
and
sub
in
or
lret
out
cmp
dec
xchg
mov
clc
out
inc
add
jnp
data16
mov
imul
pop
mov
inc
fistpl
xchg
int3
and
and
dec
add
mov
pop
aam
ljmp
jp
mov
es
pushf
scas
jns
cmp
dec
push
das
inc
xchg
out
addl
fsubrl
push
aaa
aaa
std
jb
mov
cmpsb
mov
xor
mov
ja
inc
lahf
daa
dec
dec
and
icebp
cmp
rcr
mov
sbb
mov
cmp
jl
ljmp
popf
pop
or
lret
sbb
mov
ss
cmpsl
scas
data16
mov
ja
xchg
mov
mov
xor
aam
jl
mov
lret
add
lcall
mov
loope
rcrb
into
adc
xchg
outsb
repz
lock
push
popf
in
out
out
xor
xlat
sarl
rol
repz
ljmp
adc
jo
mov
popw
outsb
ret
pusha
daa
test
jne
es
sbb
push
push
cmp
pop
mov
jp
xchg
mov
cli
jmp
cltd
sub
sahf
jmp
dec
add
je
rcl
xor
mov
inc
insb
xchg
ja
adc
mov
data16
and
mov
gs
divb
push
js
sarl
jmp
xchg
popa
pop
into
mov
popf
mov
cwtl
sub
ja
sub
or
loopne
pop
incb
xor
icebp
mov
mov
or
cmpps
or
xchg
nop
xchg
push
leave
cmp
xor
divb
mulb
je
push
pop
xor
cwtl
xchg
sar
push
leave
jo
fstpl
sbb
adc
lock
cli
bound
cmp
xlat
mov
xchg
stc
push
and
in
adcl
xchg
mov
inc
imul
cmpsb
fsubl
cmc
xor
adc
dec
add
jge
and
js
or
or
push
mov
ljmp
mov
mov
sbb
int3
out
push
stos
cmp
sbb
adc
or
dec
push
cltd
pop
dec
pop
jge
pop
inc
aad
fstl
jle
lods
shl
mov
xchg
dec
mov
sbb
sbb
cmpsb
pop
shll
mov
or
sub
push
xor
sub
pop
pusha
inc
or
out
cs
sbb
stos
arpl
mov
and
sbb
clc
cmp
pushf
outsl
mov
and
mov
push
pop
inc
out
jl
cmp
arpl
je
jae
pop
pop
iret
inc
dec
xor
popa
inc
jo
jmp
sub
in
sub
movsb
cmp
sbb
sub
mov
inc
inc
lcall
sub
add
xor
pop
adc
incb
push
inc
outsl
in
ficoml
sarb
mov
sbb
inc
mov
cmpl
inc
push
fnsave
sarb
jo
sbb
mov
or
dec
test
xchg
add
scas
in
jnp
add
jo
push
jmp
dec
imul
scas
out
inc
mov
int3
test
lcall
ds
push
lds
fldt
xor
stos
pushf
dec
inc
sbb
jp
rcrb
or
add
add
subl
fisubrl
testb
dec
int
lret
jecxz
repz
jbe
pop
mov
jl
nopl
data16
stos
arpl
mov
nop
out
ss
pop
test
mov
mov
andl
add
push
test
add
add
add
aad
cmovg
add
out
lods
jmp
repz
test
mov
mov
mov
dec
pop
mov
inc
adc
mov
xchg
xchg
ds
sbb
mov
sub
fwait
cli
adc
test
mov
in
pop
notl
adc
jae
mov
loopne
add
lea
imul
cmp
inc
adc
push
pop
cmp
std
int
repz
fdivrs
push
test
movsb
add
loopne
mov
push
daa
adc
iret
jle
es
arpl
lret
and
lahf
dec
das
test
sbb
xchg
sti
fnsave
into
inc
add
mov
mov
popf
aaa
mov
pusha
fisubl
decl
shll
push
sub
lret
push
in
incb
sbb
in
mov
in
imul
pushf
or
lret
dec
inc
faddl
into
pop
sahf
das
add
ja
call
push
jno
xchg
ret
xchg
xor
pop
pop
sub
out
sub
mov
jle
scas
mov
int3
testb
fidivs
and
leave
xchg
inc
adc
adc
andb
lahf
std
mov
xor
or
sti
ss
pop
adc
outsl
sbb
mov
insl
adcl
sbb
test
pop
fsubrl
mov
jns
shrl
stc
in
xor
mov
inc
inc
repz
cmc
int
insb
fidivl
mov
aam
popf
out
mov
and
fdivp
int
and
cltd
stc
adc
jmp
xchg
cltd
loopne
mov
daa
push
dec
jp
push
xor
ljmp
sbb
adc
hlt
mov
adc
movsl
pop
mov
jo
fwait
bound
mov
stos
mov
data16
lock
add
clc
out
push
adc
mov
mov
test
sarb
subl
dec
mov
sbb
movsb
xor
aas
int
inc
movsl
int3
lcall
sub
inc
sub
xor
push
adc
rorb
lcall
clc
xor
inc
mov
sti
dec
in
fwait
or
stc
aad
pushf
jp
xchg
insb
xor
fcmovnbe
iret
into
mov
lea
jecxz
sahf
popl
sbb
addr16
adc
test
lock
inc
sbb
jle
mov
sbb
cmp
insb
popf
adc
jo
mov
sub
push
insb
faddl
aam
cmpsl
in
leave
je
lcall
addb
ret
cmp
scas
xor
fdivrl
nop
sub
sti
sub
lods
shld
xchg
out
inc
aas
xchg
xchg
jp
adcl
push
push
xchg
out
jae
stc
push
jmp
in
stc
adc
dec
and
adc
mov
pushf
shl
dec
cmp
subb
xchg
pusha
xchg
dec
inc
insl
xchg
or
dec
xlat
nop
jno
add
xchg
dec
mov
cmp
xchg
xor
mov
mov
or
mov
das
popf
inc
loope
fcomps
push
loope
insb
out
mov
movsl
cmp
mov
nop
int3
rcr
ss
sahf
or
add
or
test
jae
jno
test
xor
mov
lock
or
cmp
add
inc
xchg
adc
dec
mov
and
aaa
dec
gs
mov
mov
push
jae
lock
add
xchg
bound
int
mov
push
mov
mov
rcl
jns
imul
or
popa
inc
and
add
sbb
out
xor
sub
jecxz
data16
lock
adc
outsb
cmp
jle
sub
call
dec
movsl
and
mov
mov
sub
and
inc
lock
jo
and
jmp
push
mov
xor
add
insl
pop
icebp
icebp
aad
movsl
ds
out
nop
adc
daa
test
jo
pop
js
push
inc
or
call
pop
test
pop
rolb
mov
sbb
mov
sbb
hlt
lds
fsubl
jbe
movsl
nop
stc
jae
pop
jmp
pop
ret
and
mov
cwtl
sub
imul
pop
pop
arpl
outsl
or
hlt
xor
or
iret
loopne
jp
test
mov
std
test
aad
xchg
in
ja
jecxz
sbb
enter
mov
mov
add
fildl
call
inc
lock
jno
xlat
outsb
scas
pop
iret
cld
pop
dec
or
mov
dec
mov
test
mov
hlt
or
insb
and
lea
jae
jnp
add
adc
jo
in
jns
mov
pop
or
in
pop
call
out
sbb
popa
aas
pop
cmp
add
mov
inc
lods
mov
shll
lea
mov
inc
sbb
lret
rcrl
ds
jns
jp
add
data16
ja
andl
push
mov
dec
sahf
sahf
popa
push
and
aaa
jbe
lods
and
scas
xchg
pop
push
sub
xor
movsb
sub
xchg
sub
dec
call
push
shlb
mov
jno
rcll
push
push
test
inc
jnp
inc
push
stos
push
cmp
sbb
jmp
loope
inc
sbb
flds
mov
cltd
push
sub
mov
sbb
gs
ffree
ret
or
inc
jno
sub
stos
dec
dec
push
or
mov
pop
or
xor
jmp
inc
mov
daa
int
and
fnsave
fadd
mov
and
jecxz
sarl
xor
add
scas
mov
mov
sub
push
mov
cwtl
inc
xor
add
mov
cmp
in
sub
nop
aam
into
sbb
pusha
xor
xchg
adc
xchg
xorl
xchg
std
jmp
push
ss
or
jbe
push
add
and
imul
lds
xlat
lret
mov
dec
jbe
iret
mov
dec
fsubrs
cmp
fbstp
pop
push
popa
add
addr16
popa
add
or
cltd
in
jmp
stc
pushf
mov
pusha
jo
jnp
xchg
mov
iret
pop
mov
add
insl
xor
xchg
shr
mov
or
stos
addr16
jb
or
pop
push
sub
adc
cmp
insl
sbb
adc
jb
push
add
or
mov
cwtl
dec
out
xor
sbb
ljmp
fisttpll
xchg
add
sub
jecxz
hlt
cmp
xchg
sbb
jg
rcr
dec
xlat
fs
add
mov
les
lea
inc
mov
cmpl
lret
adc
or
icebp
push
out
in
add
xor
pop
mulb
fwait
adc
fwait
xor
dec
cli
sub
icebp
push
lds
cmpsb
stos
xchg
out
adc
jbe
xchg
iret
jge
or
lret
push
jb
hlt
cs
dec
inc
or
imul
cltd
xchg
mov
jns
roll
outsl
cmp
fstl
in
rcl
jno
dec
mov
js
mov
pop
fmulp
sub
xchg
adc
mov
xchg
rolb
insb
test
adc
mov
mov
jnp
sbb
dec
cmp
xor
adc
repnz
lea
mov
decb
mov
xchg
loope
inc
xlat
pop
sbb
jl
cmpsb
mov
fwait
sub
sbb
xchg
imul
fstpt
jbe
lock
sub
dec
mov
cld
test
mov
aad
mov
in
dec
xchg
aad
and
sub
lea
int
ljmp
inc
fiadds
pop
xchg
les
insl
dec
mov
xor
dec
push
sub
mov
pop
sub
loopne
dec
sahf
mov
inc
stc
jae
xchg
sub
fbstp
xlat
popf
and
xchg
int
test
xor
sub
daa
add
pop
mov
mov
sbb
push
and
outsl
sub
negb
mov
jp
xchg
xlat
and
push
fwait
in
add
js
shlb
adc
pop
sub
sbb
pop
out
mov
outsl
icebp
mov
inc
jo
nop
repnz
sub
movsb
leave
jns
jecxz
mov
js
imul
xorl
push
imul
cltd
jecxz
fstl
xchg
push
push
jno
cmp
push
aaa
jl
cmp
rcrb
imul
dec
inc
popa
xchg
sbb
xchg
rcrl
inc
stc
outsb
jmp
push
cwtl
jmp
pop
ss
ret
sar
jl
jnp
xchg
aad
mov
dec
jmp
fcoms
inc
nop
and
cmp
insb
leave
push
sbb
xchg
das
insb
lds
ja
dec
pop
test
inc
jecxz
repnz
xchg
adc
push
fucomp
xor
test
ds
pop
mov
mov
fsubp
push
out
and
daa
adc
idivl
inc
inc
stc
insb
and
enter
inc
cmp
inc
mov
dec
dec
push
les
iret
jnp
fdivs
in
inc
sbb
adc
sahf
popf
pop
xchg
insb
lret
xlat
scas
xchg
adc
stos
pop
add
jp
cld
mov
inc
cmp
test
or
sbbl
and
xchg
or
add
and
hlt
sar
pop
dec
sub
xor
xorb
in
dec
pop
pusha
sub
cmp
xchg
lret
int3
enter
xor
or
pop
jl
popa
icebp
repz
inc
xor
pop
lock
mov
inc
cmp
sbb
out
sbb
out
rcrl
stc
outsl
and
jno
mov
std
dec
sub
call
in
jnp
into
test
push
leave
sahf
aaa
subl
jl
cld
xchg
mov
gs
xchg
sbb
adc
cmp
stc
addr16
es
cltd
jge
rcll
xchg
jne
fistpll
popa
fs
in
push
push
dec
in
xor
or
lock
push
cmp
mov
sub
xorb
idivb
adc
loopne
sbb
jne
out
movsb
shrb
test
enter
in
aad
inc
pop
xchg
les
add
insl
jp
mov
pop
add
jo
rol
ret
inc
jecxz
pop
lcall
pop
xor
scas
sub
stos
fadds
or
pop
mov
movsl
cmp
hlt
mov
ljmp
out
mov
xchg
and
bound
mov
adc
sbb
clc
je
xor
mov
xchg
adc
aaa
jp
cmp
push
or
pusha
fdivl
jl
fwait
dec
mov
dec
adc
jge
push
aaa
cmp
fisubrl
push
adc
sub
cmp
cltd
pop
into
popf
ss
sahf
test
bound
mov
cmc
mov
imul
add
jb
arpl
jae
in
pop
or
insl
pop
lods
and
cmp
divl
mov
ret
mov
out
jge
orb
or
mov
or
xchg
mov
fcomi
clc
pop
sub
stos
push
dec
sub
fiadds
inc
call
cmp
dec
xchg
lahf
lds
aaa
es
cmp
xchg
sbb
jle
inc
jmp
jmp
mov
bswap
push
add
lret
idivb
popa
movsl
testb
fdivp
pushf
in
inc
inc
mov
lret
inc
push
lahf
jns
xchg
add
jle
cmp
mov
loopne
and
push
enter
popa
ljmp
or
mov
out
mov
inc
and
inc
jmp
hlt
out
pop
aaa
sbb
push
adc
gs
jmp
stc
outsb
mov
and
shrl
fbstp
jns
addl
insb
mov
jp
cmp
xchg
inc
mov
cmp
lret
shll
gs
stos
aad
sub
add
jmp
dec
nop
mov
mov
jne
push
rclb
adc
out
bound
out
sbb
frstor
jl
scas
dec
push
repz
out
and
xchg
outsl
jns
mov
lahf
mov
xor
mov
cmp
dec
pop
push
jmp
ret
lret
out
mov
dec
and
std
jle
mov
add
and
inc
adc
mov
aam
inc
jnp
je
jb
bound
mov
pop
xor
add
push
adc
cmp
dec
fistl
aas
dec
fisubrs
call
mov
fisubrl
and
xchg
push
pop
out
int
sub
jp
xchg
push
cmp
inc
lds
pop
sti
orl
insb
sbb
fidivrs
sti
dec
lds
mov
push
mov
out
mov
cld
and
outsb
cmp
xor
xor
movsl
xchg
clc
adc
cmp
ja
mov
icebp
adc
sahf
popa
mov
xor
and
je
cmpsl
jae
push
cld
jecxz,pt
xchg
or
cli
mov
or
cmp
jl
lahf
xor
je
push
dec
jle
jle
aam
sub
xor
push
inc
stos
ficomps
sub
mov
push
lret
jb
pop
xchg
movsl
sub
repnz
add
inc
bound
pop
and
lock
sarl
and
and
dec
lahf
mov
xor
push
imul
idivb
aaa
and
sbb
or
shrb
pextrw
imul
jg
sbbl
add
push
pop
in
jnp
mov
das
add
push
inc
push
or
mov
mov
cmpsl
mov
out
or
adc
push
out
outsb
push
sbbb
sarb
pop
adc
ret
cwtl
rorb
dec
aam
loope
shlb
and
sbb
arpl
xor
jmp
adc
int3
std
mov
mov
and
insl
xchg
jg
add
push
mov
cvttps2pi
in
sti
xlat
xchg
cld
adc
mov
xor
dec
xchg
adc
mov
sbb
in
into
pop
adc
jb
push
mov
test
je
adc
ror
jnp
adc
std
or
add
fistpll
or
ss
stos
jge
xchg
adc
xor
stos
sub
es
cltd
out
das
sub
sti
jns
js
xchg
rcrb
cmp
dec
adc
sahf
test
pop
adc
cmp
lods
add
mov
mov
pop
dec
xchg
pop
scas
inc
sub
clc
or
mov
pop
jle
mov
pop
jle
inc
push
inc
or
jno
loop
inc
lahf
or
jb
jle
inc
imul
jl
mov
dec
jle
cmp
cmp
jno
pop
loopne
fst
imul
jns
and
mov
loopne
inc
fisttpl
mov
movsb
ja
inc
and
notb
mov
sub
std
test
pop
adc
cmpb
lds
add
sub
test
cmp
push
ret
adc
clc
push
sbb
dec
popa
inc
mov
cli
push
mov
add
mov
popa
mov
dec
mov
cmpb
scas
cmp
ja
pushf
cmp
test
cmp
sub
and
cmc
mov
mov
std
jnp
push
ret
lahf
lea
pop
movsl
bound
shll
add
xlat
sbb
sbb
sahf
lea
stos
mov
int
movsb
adc
jne
shrl
and
and
ds
jne
xor
lds
push
in
xor
and
shlb
out
sbbb
adc
mov
scas
xlat
jns
mov
loop
or
insb
nop
push
add
mov
and
bnd
out
mov
sbb
lcall
jle
add
popf
or
int
cmp
mov
push
aad
enter
fldenv
movsl
sbb
cmp
inc
daa
stos
adc
pop
sahf
and
out
add
sahf
test
xorl
adc
lret
mov
xlat
pop
cmp
pusha
or
and
test
or
jecxz
dec
push
mov
push
jo
jnp
and
jno
add
js
pop
pop
jo
pop
pop
dec
lock
cmp
sti
repz
mov
lcall
or
push
sbb
ret
mov
cmc
mov
dec
add
and
clc
mov
or
pop
cmpb
shrb
test
pop
dec
outsl
ss
imul
mov
neg
cmp
clc
mov
aas
mov
clc
jne
mov
push
or
mov
dec
fldcw
out
and
negb
pop
stos
std
lahf
sbbl
xor
mov
xchg
jmp
mov
cmp
xchg
scas
cmp
jb
pop
fwait
gs
shll
out
pop
or
sti
pop
mov
adc
daa
cmp
adc
adc
xlat
xlat
inc
mov
lock
add
fsts
adc
mov
mov
mov
out
pop
arpl
add
hlt
mov
dec
test
and
pop
lret
jge
push
rcll
ds
enter
jbe
sbb
mulb
cli
cmp
jg
outsb
rcrb
loop
mov
enter
jae
enter
cmc
adc
pushf
addb
push
bound
fs
test
sarb
nop
das
test
or
aaa
shrl
dec
popa
test
mov
xchg
xor
int
cmp
les
sub
popa
xor
inc
in
int
cmp
and
adcl
pop
out
mov
jae
lar
push
dec
loopne
xchg
icebp
ss
loop
movsl
cmp
outsb
fs
mov
cmpb
fdivs
xlat
push
rorb
xchg
loopne
dec
adc
and
repnz
cmp
js
cwtl
sub
pop
jno
xor
psrad
repz
ret
dec
movsb
popa
sahf
leave
imul
add
inc
shl
dec
fists
xorb
xor
ret
jb
jmp
cmp
lret
ret
add
sub
or
push
clc
sbb
popa
imul
insb
pop
cmp
cltd
inc
sub
push
mov
inc
in
jge
adc
push
jecxz
dec
add
sbb
add
xchg
mov
ffreep
mov
outsb
imul
jae
inc
icebp
adc
stos
in
push
test
dec
aam
adc
scas
add
mov
add
popf
into
dec
lret
pop
loopne
iret
xlat
in
in
int3
aas
roll
mov
out
push
les
push
test
jl
adc
mov
xor
icebp
nop
sahf
xor
loopne
mov
in
fnstsw
in
push
outsl
push
lods
add
or
aam
pushf
mov
iret
aam
insl
popa
or
xlat
das
pop
fidivrs
and
inc
stos
mov
fadds
fiaddl
les
inc
xchg
dec
sbb
dec
shrb
xor
jle
or
outsl
cmp
repz
xor
mov
push
mov
std
add
sub
add
cs
aas
mov
ds
mov
mov
stos
push
add
imul
lods
adc
pusha
cmpsb
jmp
dec
jp
js
push
jecxz
jmp
mov
adc
xor
imul
scas
sub
pop
jle
pop
dec
cli
dec
adc
stc
divl
xor
xor
mov
xchg
lahf
xchg
incl
xor
out
loope
and
inc
mov
repz
hlt
leave
pop
push
xor
stc
in
xchg
in
inc
sti
push
aas
and
pop
aad
jmp
js
xchg
push
inc
inc
and
pminub
inc
lds
inc
sbb
jmp
xor
sti
and
or
mov
sbb
mov
mov
clc
sahf
lcall
je
pop
push
popa
mov
or
jge
sub
jle
rorl
pushf
mov
insl
or
pop
hlt
dec
subb
fs
jnp
xchg
jp
push
loopne
out
sbb
and
jnp
out
outsl
sti
add
imul
aam
call
cmp
fisubl
stc
sbb
scas
pop
mov
jp
cmp
mov
push
loopne
andb
data16
cli
jae
push
sub
lea
pop
inc
fildll
nop
push
aam
ret
sti
push
sarb
mov
test
jae
push
inc
mov
pop
test
stc
or
cwtl
insl
insb
scas
stos
cmc
divb
lods
mov
shrb
push
pusha
ror
jo
std
into
insb
gs
push
out
inc
xchg
cltd
imul
mov
xlat
test
testl
adc
cmp
and
jle
repz
pop
aam
push
jb
ret
push
mov
jle
bound
fnstenv
fistps
xchg
mov
in
mov
mov
clc
pop
mov
or
aam
push
ja
icebp
call
or
push
adc
cmp
push
out
mov
cmp
clc
or
lret
lds
std
cmc
fildl
cs
cmpsb
lods
inc
mov
add
flds
adcb
into
cmp
push
cmpb
push
xor
stos
sarb
enter
xor
dec
jl
lret
pop
insb
addr16
mov
stc
repz
mov
cmp
cmp
pop
and
shlb
xchg
push
xor
inc
stos
repnz
mov
dec
inc
cmp
jg
push
into
jle
cmp
imul
ljmp
lret
stos
ss
dec
inc
mov
lret
push
icebp
icebp
pop
sbb
pop
outsl
into
sbb
daa
outsb
sub
cmp
fimuls
mov
xor
dec
addb
in
and
sbb
jae
add
notl
xchg
aas
dec
rolb
lret
inc
psrld
inc
mov
jp
fnstsw
pop
test
pop
scas
fidivrs
jle
das
out
xchg
gs
imul
jmp
fmuls
lock
adc
subb
inc
popa
ds
pop
add
stc
ret
or
out
loopne
cmc
cli
mov
scas
mov
mov
iret
pop
mov
xchg
divl
fidivrl
mov
push
mov
shlb
ja
mov
fiaddl
shrb
imul
lahf
sub
sbbb
stos
adc
mov
mov
push
xor
sbb
test
xorb
inc
add
and
xchg
mov
ror
mov
sbb
ljmp
pop
pop
push
mov
jbe
addl
jbe
and
push
add
clc
rolb
sbb
and
js
pop
dec
int3
shr
inc
insb
lods
xchg
sbb
mov
mov
or
jmp
in
xor
imul
mov
aam
sbb
mov
sub
neg
stos
shl
sbb
xor
popf
cli
subl
rcl
and
dec
sbb
repnz
fwait
mov
cmpsb
cmpb
push
enter
jle
dec
mov
dec
aaa
push
mov
add
jno
cmc
add
or
movsb
xchg
jae
adc
inc
mov
lods
es
out
cmc
cmp
xlat
mov
push
lret
or
and
inc
in
mov
std
stc
mov
in
xchg
arpl
xchg
or
push
dec
pop
cmp
xchg
aad
in
xchg
mov
adc
mov
cmpl
das
xchg
pop
out
xchg
stos
lods
xchg
scas
mov
mov
sub
outsl
jp
sarb
and
mov
out
test
cmpsl
out
push
adc
push
movsl
test
in
pop
pop
rclb
pop
scas
pop
dec
clc
cwtl
add
xchg
dec
pop
ret
inc
xchg
jb
mov
daa
cmp
mov
mov
xchg
addr16
fcoml
mov
mov
orb
xlat
sub
push
cmp
push
mov
cmp
cmp
rolb
aad
insl
cltd
out
and
jp
ret
or
imul
xchg
or
add
and
rorb
pop
jl
mov
pop
or
sub
sbb
inc
scas
xlat
inc
test
cmc
ret
je
mov
aad
mov
movsl
sarb
adc
xchg
stc
fs
dec
or
movsb
push
shlb
popaw
and
push
mov
or
cmp
xor
cltd
popf
flds
movsl
push
fdivl
sbb
push
pop
lret
sub
loopne
dec
jge
lahf
mov
fbstp
inc
inc
mov
inc
mov
sub
in
sbb
outsl
xchg
imul
push
fdivr
pop
shll
pavgw
sbb
aam
outsb
lods
jge
aaa
adc
popf
xor
push
xchg
push
mov
xor
shll
or
cmp
aas
xor
data16
js
fisubl
push
pop
sbb
lcall
mov
std
sub
pop
arpl
or
into
push
fcoms
bound
jl
mov
xchg
and
mov
jb
jnp
xchg
add
pop
mov
xchg
sbb
pop
imul
aaa
adc
mov
les
xor
fcmovbe
adc
lahf
mov
jp
scas
sub
pop
mov
jecxz
sub
mov
adc
ret
cmp
jg
lea
and
dec
pop
pop
ds
roll
mov
in
test
jo
cltd
out
lods
insl
mov
and
andb
test
scas
jle
cmpsb
sahf
lret
mov
jne
add
push
pop
dec
cmpsl
cwtl
lahf
mov
dec
or
dec
outsl
lret
test
outsb
inc
jp
push
hlt
adc
jns
dec
pusha
jecxz
xor
mov
pop
std
ret
in
outsl
addr16
push
cwtl
jge
mov
iret
push
rcl
xchg
mov
xchg
push
and
and
mov
pop
dec
add
in
or
xor
sub
xchg
hlt
lahf
hlt
jmp
test
outsb
hlt
repnz
insb
xorl
push
xchg
inc
pop
faddl
mov
xor
mov
sub
sub
mov
les
rcll
push
sar
add
in
pop
xchg
lock
dec
add
push
out
push
sahf
dec
in
xor
inc
or
ret
dec
inc
test
rorl
ret
and
cmp
mov
or
xor
add
dec
mov
push
pop
pop
add
fsubs
mov
xlat
int
int3
sbb
cmp
adc
in
cmp
nop
mov
shrb
mov
dec
repnz
imul
in
sbb
adc
adc
bound
or
inc
sti
xchg
sub
mov
cmc
cmp
fisubl
decl
setl
fsts
icebp
pop
jge
sub
popl
mov
fsubrs
lret
rcrb
sbb
sbb
pop
pop
int3
pop
in
add
clc
rolb
sbb
mov
jmp
je
out
jle
pop
pop
add
scas
bound
test
or
xchg
or
or
loope
jnp
lds
jo
sbb
imul
in
fnsave
lcall
lds
shlb
jg
mov
std
addr16
jecxz
insl
push
push
xor
fdivrs
or
fcomp
xchg
movsb
xchg
xor
adc
and
or
out
jo
mov
out
lods
scas
mov
test
lds
shr
or
ds
and
fistpll
mov
pop
and
sti
jecxz
movsb
mov
xchg
or
fucomi
mov
dec
rol
cmp
inc
insb
arpl
out
sahf
mov
lods
sub
aas
divb
push
leave
jmp
sbb
cmp
out
das
adc
push
iret
xor
sbb
sbb
pop
adc
shll
xchg
lea
push
mov
push
mov
lahf
fcomi
inc
push
inc
pop
dec
stos
mov
push
sbb
add
in
cmp
pop
ljmp
lock
psllq
push
and
dec
das
shll
xchg
les
mov
mov
inc
lcall
sub
dec
addr16
mov
daa
sub
add
in
aaa
shlb
or
push
mov
push
lret
test
mov
or
pop
dec
dec
inc
cmp
jne
ljmp
imul
inc
jae
and
fcomps
psubw
mov
ret
push
inc
push
out
cmp
repnz
out
mov
loop
pop
xor
ficomps
push
xchg
and
movsl
mov
push
imul
sub
sbb
or
loopne
lea
sbb
cmp
and
jp
mov
das
in
scas
cmpsb
mov
push
inc
adc
in
pop
lahf
repnz
push
add
xlat
push
inc
jl
xchg
adc
push
in
xchg
in
cmc
push
cwtl
arpl
xchg
subl
fildl
sti
sbb
jl
pop
sub
push
shl
fisttpl
mov
xor
lret
imul
sub
loop
in
bound
push
shrb
add
xor
xor
pop
rcr
je
fsubrs
cmp
fs
repz
jecxz
fistpl
cmp
cmc
test
inc
adc
enter
and
adc
adc
inc
add
xor
mov
testb
dec
sbb
jge
mov
js
push
movsl
pop
movsl
mov
jae
mov
xchg
aad
jne
cli
push
mov
into
mov
dec
lcall
pushf
incl
dec
test
mov
push
and
jb
lds
mov
inc
mov
ficoml
ficomps
out
adc
and
push
dec
fcomps
cmc
xchg
fsts
scas
movd
mov
cmp
insb
pop
std
popa
movsl
sbb
cmp
mov
hlt
cmp
jmp
ja
xor
jno
xor
pop
pop
js
loope
sub
fstpt
and
jge
mov
jg
add
ret
sub
fbld
push
gs
jno
mov
xchg
imul
je
and
inc
insl
push
push
pop
outsl
inc
int
cmp
mov
mulb
lods
scas
cld
dec
dec
jmp
dec
and
sahf
xlat
cmp
adc
fwait
outsl
mov
test
push
and
cmpsl
dec
rorl
sub
cmc
mov
mov
mov
inc
xchg
inc
ja
movsl
xor
sub
adc
pop
dec
pop
or
sub
lds
movsb
jbe
leave
in
or
ds
or
test
mov
mov
xor
gs
orl
mov
or
mov
lcall
daa
sub
daa
js
jne
dec
outsb
push
xor
sti
data16
pop
lds
in
jo
jae
in
mov
xor
outsb
ret
xchg
into
popa
sbb
dec
mov
or
dec
cmp
lods
outsb
cmp
xor
orl
cmpsl
push
jecxz
popf
cmp
mov
pusha
stos
gs
leave
les
inc
jmpw
pop
pop
adc
movsb
sub
dec
mov
mov
mov
ds
test
out
scas
sub
push
push
adc
fldcw
mov
iret
push
lea
mov
fcomps
xor
mov
loop
je
or
call
pushl
xchg
pop
jmp
aam
or
sub
pop
dec
adc
orl
xchg
gs
adc
mov
outsb
mov
lcall
cmp
lods
pushf
je,pn
mov
xchg
addr16
out
inc
in
pop
rolb
cmp
pop
lods
inc
pop
xlat
mov
jle
outsb
shrl
lret
mov
sahf
frstor
stc
xor
std
jnp
dec
nop
inc
sahf
mov
movsl
imul
xor
ret
pusha
iret
inc
mov
pop
sub
mov
mov
and
ficompl
sbb
loopne
sbb
sub
xchg
aaa
enter
inc
push
outsl
adc
in
adc
or
lea
push
xchg
lds
cmp
jg
adc
push
jp
jp
add
dec
cmp
daa
roll
sahf
add
push
push
pop
adc
and
inc
ljmp
mov
ret
sbb
pop
cmp
out
test
decb
imul
out
mov
test
ret
movsb
je
inc
aam
dec
pop
mov
xchg
popa
sysenter
or
rorb
jnp
mov
xchg
xlat
shlb
or
push
mov
sbb
dec
sub
inc
pop
scas
test
rol
cmp
std
dec
push
inc
and
mov
dec
push
inc
pop
lods
or
adc
sub
xchg
pshufw
jl
sub
pushf
sub
stos
lods
fsub
iret
jl
pushf
sbb
pop
aad
icebp
xor
or
fiaddl
adc
js
or
dec
sbb
jmp
jne
rcll
and
sub
pop
mov
sub
subl
jg
ret
adc
push
xchg
adcb
enter
fists
in
xor
insb
imul
pop
xchg
push
or
cmp
jo
sub
and
js
or
dec
jecxz
les
xchg
inc
lcall
js
sarl
pop
flds
push
adc
dec
add
insb
test
sbb
stos
and
es
scas
scas
aad
rorb
es
loop
stos
jp
pop
mov
imul
mov
or
aas
in
mov
or
jae
and
push
outsb
daa
cld
adc
sub
push
nop
fnstcw
mov
cmp
inc
dec
js
push
sbb
xchg
sbb
rcll
es
test
pop
mov
cwtl
adc
jp
mov
pusha
sub
bswap
sub
fwait
scas
insl
scas
out
fadds
int
add
dec
rolb
sub
add
mov
in
js
xor
bound
add
jle
sub
and
push
pusha
pop
or
add
mov
enter
xchg
push
push
ss
aas
ret
test
and
loope
call
pop
mov
jge
not
mov
xor
test
jnp
sbb
mov
adc
jp
shrb
movsl
ret
pop
push
or
mov
cmp
pop
lods
outsb
stos
mov
sbb
and
outsb
aas
stos
mov
or
add
add
sbb
mov
pusha
inc
iret
int3
xchg
cmc
addr16
jnp
push
mov
cmp
cld
lahf
push
mull
mov
les
adc
fdivrs
jge
sub
sbb
out
xor
adc
dec
xchg
xchg
cld
sub
lret
shll
push
sbb
or
cmpl
fcompl
stos
push
and
aad
mov
mov
sbb
stos
and
push
outsb
arpl
fnstenv
int
mov
push
and
outsl
mov
pop
fisubrs
aaa
and
fisubrl
push
fldcw
out
pop
push
adc
jecxz
adc
daa
fs
or
pop
dec
mov
sub
shr
jne
xchg
pop
mov
fmuls
jge
xchg
movsb
xor
ffreep
lret
xor
adc
scas
loopne
arpl
jno
pushl
data16
push
fildl
mov
loopne
adc
add
scas
adc
or
fucomip
and
add
xchg
mov
aad
data16
enter
mov
inc
rcl
sub
dec
in
inc
stos
nop
or
out
xor
pop
fstps
fbstp
cmpsb
inc
decl
jns
jno
inc
fs
xrelease
not
les
push
sbb
pushf
pop
and
fstpt
mov
push
sbb
aas
push
sbb
lcall
bound
mov
dec
jnp
es
adc
mov
imul
bound
mov
mov
inc
lods
in
xorb
shll
sbb
mov
and
and
das
and
inc
ficomps
mov
adc
sbb
jp
rorb
icebp
rorl
xchg
pop
ja
mov
pop
dec
cmp
xchg
fsubl
cltd
cmp
mov
and
cmp
cmp
cmc
out
mov
mov
fistpl
push
popf
addr16
adc
xor
repnz
mov
inc
iret
pop
mov
mov
mov
push
repz
cmp
hlt
fidivl
fisubrl
fisubl
lods
dec
cli
scas
test
sbb
aam
negl
add
lahf
and
pop
mov
mov
or
or
inc
push
outsl
movsl
in
mov
sbb
push
push
mov
xchg
fimuls
cmpsl
jns
and
jnp
lret
mov
adc
adc
into
aam
icebp
dec
dec
inc
pop
das
push
movsb
mov
pop
call
roll
mov
icebp
push
push
inc
std
cwtl
jne
or
sahf
pop
stos
and
lea
lock
xchg
sti
adc
mov
and
pop
push
sub
jle
add
xchg
imul
pop
movd
mov
or
popf
jne
fidivl
outsl
bswap
mov
jne
jge
into
pop
mov
cltd
mov
push
jle
popf
sbb
out
mov
in
mov
push
js
pop
cmp
jae,pn
or
xchg
mov
sbb
jg
xor
gs
push
xor
jnp
fwait
cmpsb
lds
add
dec
pop
xor
xor
adc
inc
cmp
es
xor
ffree
mov
inc
or
mov
rcrl
xchg
repnz
pop
aad
lret
les
inc
cmp
xorl
xchg
test
imul
pop
mov
sbb
insb
rclb
push
scas
adc
sub
movsb
sahf
mov
shl
lcall
and
mov
xor
daa
das
outsl
pop
int3
xor
push
loop
and
fdivr
adc
jbe
mov
dec
scas
mov
mov
mov
mov
xlat
je
hlt
pop
push
add
push
pushfw
or
fcoms
fucomi
daa
push
inc
adc
in
lea
xor
lret
hlt
adc
addr16
jmp
das
push
js
test
in
mov
sub
sbb
inc
je
cmp
or
sub
jp
and
je
push
xor
dec
imul
shll
xor
jns
and
and
test
or
lods
mov
lods
xchg
lea
or
negl
popa
dec
out
inc
pop
jo
push
daa
mov
sarl
scas
shrw
insl
mov
jo
push
dec
es
push
pop
mov
lea
adc
test
add
inc
xchg
add
addr16
cmp
xchg
adc
sub
xlat
daa
cmp
and
mov
mov
sbb
lock
aam
xchg
jecxz
cmpsl
sbb
pusha
in
stos
ds
adc
insl
ds
dec
stos
jae
enter
dec
or
lock
out
fsubrs
jecxz
jl
int
mov
push
in
aad
orl
cld
cmp
mov
sub
jle
cmp
cmp
in
pop
add
pop
mov
mov
pop
in
mov
jl
mov
stos
mov
and
insl
adc
inc
loope
cs
scas
adc
loopne
mov
mov
in
popf
jne
into
loop
lcall
sti
fdivrp
sub
mov
mov
loop
ret
dec
movsb
cmc
imul
mov
fcmovnbe
cmp
jbe
add
pop
scas
and
adc
jbe
cmp
adc
aam
adc
mov
mov
pusha
jmp
pop
int3
and
clc
cmp
es
inc
fsubl
sub
push
daa
bound
pop
cwtl
negl
loop
inc
int
pop
lret
popa
fistpll
rolb
or
jns
add
xor
mov
jne
inc
or
adc
push
pop
inc
loope
cld
xchg
out
jb
lds
repz
in
mov
fs
rcrb
scas
popa
pop
xchg
and
es
or
stos
xor
xchg
cmc
xchg
rcll
mov
shl
bound
imulb
sub
lret
cwtl
movsl
je
leave
sub
stc
les
mov
ss
dec
mov
stos
xbegin
push
xor
jbe
pop
push
or
fstl
fldenv
xlat
into
out
xchg
aad
jno
xchg
cmpsb
shll
push
jmp
filds
lea
into
pop
adc
mov
mov
jne
aad
mull
imul
mov
ds
mov
sub
xor
popa
lods
outsb
sbb
pop
sbb
test
inc
out
jmp
lcall
leave
and
fidivl
hlt
sub
ja
mov
sarl
lea
sub
and
and
lret
lret
dec
leave
call
out
cmpsl
push
outsb
shlb
lret
and
push
sub
in
adc
push
add
std
pop
jns
and
mov
std
sub
inc
add
test
xor
stos
or
jns
pop
sub
aaa
pop
pop
fwait
and
fs
shrl
xor
or
sub
into
mov
cmp
lahf
lea
in
xchg
pop
nop
sbb
or
jl
push
jne
stos
fwait
fwait
ja
jb
adc
stos
cmpsb
iret
arpl
outsb
inc
mov
xor
push
movsb
icebp
xor
mov
xchg
lahf
or
push
loopne
inc
loopne
mov
jmp
mov
rol
gs
aam
mov
shrl
repz
cwtl
sbb
dec
ficomps
or
xchg
std
and
or
cmp
addb
mov
mov
dec
pop
cmp
aam
adcl
jmp
pop
or
in
cmc
stc
cmp
mov
mov
shrb
ja
mov
or
mov
mov
and
xchg
sub
bound
fwait
xor
shll
scas
cltd
dec
cwtl
cld
sti
fcomip
negl
cmp
cmp
xor
or
inc
daa
xlat
mov
mov
and
push
es
mov
dec
push
int3
mov
push
jge
xlat
iret
mov
adc
mov
xchg
inc
adc
push
lret
pop
fstl
movb
and
sbb
mov
adc
test
dec
and
test
nop
xor
mov
pop
xchg
and
jg
arpl
pop
mov
cmp
or
out
add
xchg
nop
sbb
pop
clc
sub
xlat
enter
je
xor
bound
clc
inc
cwtl
fcmovne
cmp
push
ficoml
mov
cmp
and
clc
cmp
pop
sub
xchg
xorb
mov
arpl
pop
xchg
bound
imul
mov
add
fs
cltd
adc
inc
inc
fsubrs
ret
into
decb
cmpsb
lret
jb
jle
lcall
mov
or
xchg
push
movsl
roll
add
lahf
ret
ret
les
cmp
popf
nop
mov
nop
es
push
testb
sbb
push
cltd
loopne
orl
sub
mov
or
cmp
insb
inc
xchg
enter
xchg
shrb
test
jl
inc
pusha
mov
cmp
ljmp
xor
or
cmp
sbb
pop
mov
mov
leave
call
xor
jno
pop
out
cmpsb
popf
mov
outsl
into
dec
cmpsb
es
inc
das
inc
jp
xor
jl
nop
push
aad
pop
mov
xor
jmp
ljmp
xor
xchg
mov
stos
fistpll
in
call
fsub
mov
sub
and
popf
lods
popa
and
mov
xchg
dec
loopne
sub
add
shll
out
pop
dec
jb
ret
repnz
frstor
mov
mov
stc
xchg
jno
jo
in
popf
xchg
loope
cmp
outsl
mull
mov
pop
insl
cmp
dec
dec
sbb
mov
and
fstps
enter
aaa
fsubrs
cld
dec
lcall
pop
aas
or
xor
test
decb
adc
pop
or
clc
jmp
add
pop
out
loope
daa
adc
rcll
dec
push
or
nop
aad
cwtl
jbe
xor
test
test
sbb
jbe
mov
sbb
push
mov
sub
dec
pop
je
inc
das
mov
add
xchg
push
push
xor
jns
jb
sub
dec
cmp
sub
mov
repnz
sbb
cmp
pop
scas
divb
cmp
pop
lea
pop
rcll
int
sarl
push
fnstcw
or
pop
jnp
imul
imul
mov
and
xchg
pop
xchg
fiaddl
lods
enter
pop
mov
pushf
adc
ret
xchg
mov
mov
addr16
fbld
shlb
jns
movsl
pop
lea
jecxz
mov
mov
out
aaa
cwtl
push
adc
aaa
das
fidivl
jae
push
fs
aaa
sbb
into
mov
mov
mov
lods
imul
aaa
inc
cmp
in
cmp
xchg
jmp
dec
jnp
xor
das
int
lahf
xlat
mov
mov
cmpsb
push
test
xchg
cmpb
adc
inc
push
sub
mov
gs
cmpsl
or
dec
loope
cmpsb
pop
push
mov
in
push
mov
ja
mov
cmp
cs
or
dec
inc
pop
lcall
dec
push
pop
add
jecxz
lret
fiaddl
xchg
jno
shll
mov
pop
push
xchg
inc
pusha
cltd
loopne
movntq
out
inc
test
or
pop
lcall
dec
out
aam
lcall
imul
lds
sbb
pushf
addr16
ljmp
lahf
inc
sahf
jae
add
imul
mov
cltd
sbb
lret
xchg
pop
xor
in
scas
xchg
lcall
es
notl
ljmp
jmp
push
xor
mov
test
in
mov
cli
xlat
fldt
rcrb
movsb
into
call
jo
enter
inc
popf
out
xor
mov
adc
xchg
pop
dec
mov
xchg
xchg
out
xchg
mov
inc
js
shll
xor
sub
imul
cs
xchg
shrl
dec
insb
xor
int3
ret
inc
or
jbe
dec
cmp
loope
pop
out
es
cmp
je
stos
push
mov
lahf
add
jl
scas
mov
fnstcw
and
mov
pop
sub
push
adc
mov
and
in
daa
inc
std
inc
repz
jg
mov
sub
xor
jge
mov
insb
popf
arpl
xchg
sbb
or
cld
insb
inc
in
cmp
cmp
sarb
add
dec
pop
nop
call
xchg
pop
dec
idiv
and
mov
adc
push
stos
push
xchg
daa
sbb
sbb
imul
or
xor
dec
cmp
popa
xchg
cs
and
adc
popf
sbb
mov
fidivrs
sub
cmp
mov
mov
mov
pop
xor
lea
call
mov
les
and
mov
cmp
sub
sahf
adc
dec
pop
dec
sbb
pop
movsl
jne
dec
subl
xchg
sub
sbb
ficoms
jecxz
xchg
sbb
cmpb
pusha
popa
mov
jb
shlb
sub
xor
stos
xor
push
pop
leave
out
jnp
les
aam
arpl
mov
xlat
stos
loope
pop
pushf
adc
insb
outsb
sub
addr16
push
mov
scas
mov
out
mov
jp
enter
movsl
out
scas
aas
adc
pop
lcall
mov
incl
fiadds
mov
and
out
sahf
mov
adc
dec
test
rol
mov
fisttpll
loop
cmpsb
mov
push
lcall
add
mov
sbb
lahf
aad
andl
jbe
out
cmc
pop
push
xchg
shlb
jl
cmp
rcrb
jmp
mov
clc
mov
into
repz
mov
pop
in
cli
xchg
pop
or
fmuls
ss
jge
cwtl
and
push
adc
icebp
cmp
mov
pop
std
aas
and
push
cmp
cmp
or
dec
xchg
dec
xchg
dec
sub
sar
mov
jbe
push
jnp
test
inc
rclb
pop
stos
int3
mov
pop
cwtl
jbe
scas
int3
xor
in
cmp
shr
je
lods
cmp
dec
out
mov
add
or
xor
inc
mov
xchg
stos
fmul
stos
or
imul
xchg
out
cmpsb
xchg
lds
pop
imulb
popa
or
cmp
fisubrs
or
pusha
mov
addr16
mov
push
dec
sti
lret
inc
sub
jg
push
push
mov
push
push
mov
insl
or
out
inc
add
add
test
sarl
sub
testl
pop
mov
xchg
sub
or
sub
jnp
jecxz
cmp
add
sbb
mov
or
in
and
push
xor
aas
jmp
push
cmc
jg
jl
lock
mov
test
jg
sbb
sub
jb
sbb
lahf
sbb
shrb
push
pop
lret
jp
sahf
fdivrs
dec
ret
into
push
out
xor
add
call
lods
mov
pop
or
fwait
aaa
std
jecxz
xlat
xor
ljmp
xor
sbb
mov
sub
cmp
mov
cmpsb
clc
add
loopne
stos
sub
jns
sbb
insb
scas
push
ret
or
lds
out
mov
mov
push
push
popf
xor
int
jns
cli
mov
add
cmc
mov
xor
inc
loopne
aam
pop
in
push
sbb
movsl
stos
shlb
ret
inc
jbe
push
jae
daa
rclb
aad
dec
push
lahf
fwait
adcl
cltd
sub
lods
and
cmp
repnz
nop
jnp
mov
clc
test
mov
cmp
adc
inc
mov
push
fsub
mov
push
es
mov
mov
enter
std
clc
aas
jno
sar
ja
add
or
adc
mov
lahf
fwait
aaa
das
stos
inc
inc
into
fsubr
in
bt
xchg
shlb
jo
pop
andb
cmc
rcll
dec
hlt
pop
scas
xor
insl
push
sbb
mov
ret
push
and
mov
lock
sub
dec
std
jmp
mov
sbb
or
out
ja
test
cmpsl
lret
xchg
sub
xlat
push
add
sbb
sbbl
addr16
cli
hlt
je
mov
mov
xor
jmp
inc
jbe
orl
fsqrt
and
push
icebp
push
mov
in
add
les
lods
aad
cmpsb
sti
rclb
push
cmc
jno
inc
mov
out
xor
out
jle
enter
push
jno
pop
fsubl
in
shrl
cmp
dec
mov
icebp
jne
lcall
mov
inc
dec
fdivrp
pop
xchg
push
enter
test
lret
xor
pop
mov
pop
lret
leave
inc
jo
sub
jg
jg
dec
or
scas
fmul
mov
mov
aad
or
lahf
add
je
or
add
inc
aam
stc
in
out
inc
in
pop
or
decb
jo
xchg
out
enter
notl
cmp
inc
add
stos
pop
test
dec
aam
fldcw
adc
popa
in
jnp
lret
sbb
mov
or
mov
xchg
add
pop
ljmp
mov
int3
push
test
insl
js
cs
leave
add
xchg
rcll
mov
pop
dec
out
cmp
mov
fwait
loopne
mov
adc
es
push
cld
adc
cmp
xor
std
xor
fadds
pop
mov
xchg
cli
scas
mov
cltd
aaa
vpaddw
inc
lods
inc
sbb
sub
push
xor
mov
aas
fs
inc
out
stos
stos
jmp
call
mov
jno
lods
sti
in
push
sub
repz
mov
pop
mov
mov
cmp
push
jl
push
lcall
fsub
dec
pop
decb
jae
pop
pop
push
jne
inc
std
outsl
testb
pop
lods
aaa
cmp
ss
faddl
jle
dec
mov
pop
sub
mov
dec
jge
lods
pop
popf
push
scas
push
and
test
je
lds
movsl
cwtl
mov
loope
or
imul
in
adc
and
xlat
je
or
mov
inc
mov
push
add
stos
movsb
add
fxam
or
stos
xor
push
in
out
and
rclb
movsb
adc
xor
adc
dec
sub
data16
aas
fmull
jae
sahf
loop
push
mov
mov
stos
int3
movsb
rcr
notl
sbb
stos
ja
movsb
xlat
pop
jo
push
rol
cmp
dec
pop
cmpl
loopne
gs
inc
sbb
mov
out
jmp
addl
inc
mov
and
mov
xchg
popl
inc
cmp
push
pushf
je
sub
pop
fwait
inc
test
jmp
jo
mov
rcrl
pop
addb
test
cmc
dec
pop
or
jbe
out
xchg
push
aas
xchg
sub
ljmp
jl
in
inc
dec
jp
push
add
cli
inc
pushf
xchg
lds
lock
push
test
pop
cltd
rcrb
pop
divb
out
adc
pop
repz
inc
inc
das
fiaddl
mov
in
js
aam
jl
jp
insb
jns
fwait
or
fsubs
dec
cmp
and
xchg
jbe
ret
test
ss
or
sub
fisttpll
xchg
or
push
sub
arpl
mov
rcrl
xlat
loopne
dec
aad
out
imul
sbb
mov
rcl
daa
and
mov
cmc
imul
push
jnp
stos
repz
push
and
dec
sarb
iret
hlt
xchg
mov
jmp
jge
gs
pop
lretw
sub
adc
mov
xorb
xchg
lea
inc
leave
rcll
int3
or
and
bound
adc
push
inc
mov
cltd
fdivrs
aaa
or
mov
addb
adc
xchg
push
pop
cmc
fwait
insl
test
in
lods
dec
push
insl
mov
int
out
inc
push
mov
push
mov
lods
data16
adc
lret
cmpsb
cmp
lds
loopne
scas
mov
xchg
inc
or
pop
ret
cmpsb
ficompl
stos
shlb
and
dec
movsb
pusha
mov
lret
lods
jp
gs
cmpsl
xor
movsb
jl
lods
add
adc
xlat
cld
adc
jecxz
outsl
dec
jp
jmp
movsl
clc
or
insl
mov
fcoml
jle
lds
sbb
nop
mov
mov
mov
pop
jb
inc
xor
arpl
add
jmp
cltd
push
aas
ret
xchg
add
aam
add
xchg
test
push
xchg
mov
fdivs
andl
dec
loope,pt
aas
xor
test
sbb
or
rol
call
xchg
pop
inc
bound
mov
adc
icebp
add
jle
shl
out
out
fbstp
cmp
jle
xor
jecxz
push
and
pop
and
sub
pushf
jo
or
imul
mov
cld
or
les
outsl
push
jns
lcall
pusha
not
cld
sbb
jno
shr
cltd
add
fiaddl
mov
sbb
cmc
lcall
arpl
test
fsubrs
mov
jecxz
and
dec
sbb
ret
ja
fcomps
mov
mov
push
test
pop
out
xor
or
clc
adc
shll
push
inc
test
add
xor
fisubrs
mov
clc
repnz
jo
mov
iret
xchg
outsl
insb
add
inc
call
scas
jge
inc
negl
dec
mov
push
pop
cld
stos
mov
adc
dec
arpl
xor
insl
jl
jecxz
cwtl
cmpsl
enter
test
jge
shll
lods
cmpsb
pop
dec
push
into
mov
int
bound
or
mov
dec
push
push
dec
lods
sub
or
adc
xor
sub
adc
sub
sarl
rcl
into
dec
push
mov
mov
lahf
in
push
cwtl
iret
inc
pop
sbb
nop
in
ds
dec
xchg
jle,pn
call
xchg
mov
dec
add
xchg
cmp
jnp
or
inc
ds
pop
js
xor
jl
js
in
addb
cwtl
push
lfs
mov
cmp
cld
xor
into
mov
sahf
int
iret
out
je
add
cmp
mov
addr16
fnsave
ret
ss
ja
and
cmpb
pop
rorl
jo
xchg
sbb
mov
jl
jmp
fists
push
js
outsb
jle
mov
pop
dec
test
sub
or
pop
add
push
call
pop
lds
mov
ja
shrd
out
cmpsl
test
xor
push
cs
test
dec
mov
dec
pop
xlat
imul
das
popa
mov
out
sahf
stos
sbbl
hlt
in
xchg
jmp
mov
add
imul
mov
aaa
aam
aam
imul
mov
add
movsl
mov
cli
or
test
jo
in
mov
sarb
into
stos
pusha
inc
aam
push
add
cmp
adc
cld
add
cld
repnz
sub
mov
pushf
add
cmp
mov
mov
mov
mov
inc
and
je
jp
adc
aas
xor
roll
mov
bnd
xor
leave
push
pop
push
aaa
mov
into
fwait
sub
sbb
test
insl
data16
sbb
or
int
mov
insb
cli
in
mov
imul
shl
jge
in
lret
int3
imul
add
sbb
pushf
jb
mov
ret
nop
mov
test
aad
mov
adc
int
cmp
jmp
pop
dec
jmp
inc
sbb
inc
sbb
out
add
pop
mov
adc
popf
pop
or
mov
cld
mov
fcomps
and
int3
cmp
jecxz
sbb
xchg
dec
add
mov
and
push
push
bound
sub
jae
inc
test
dec
mov
or
daa
sbb
add
add
adc
or
pop
pop
js
test
mov
pop
loop
imul
testb
adc
leave
adc
test
xchg
negb
or
jb
jge
and
fmull
das
ss
jge
pop
push
mov
xchg
adc
sub
aaa
dec
fimull
clc
movsb
xchg
fs
fcomps
jno
lcall
mov
movsb
fiadds
inc
xchg
fbld
aad
cmpl
mov
cmc
push
jae
icebp
repz
fidivrl
dec
addr16
push
mov
inc
cmpsl
cwtl
cmc
lods
fucomp
jmp
xor
nop
and
jbe
and
outsb
mov
in
sub
or
and
movb
cltd
mov
push
pop
mov
ret
ljmp
sub
stc
scas
cmp
sub
fsubl
std
mov
cmc
les
mov
cltd
leave
jmp
mov
inc
sbb
cltd
lock
lods
push
fwait
jae
pop
fldcw
adc
mov
pop
inc
mov
vpmullw
dec
movsl
jge
ficomps
adc
je
iret
xchg
pop
sbb
or
xchg
iret
dec
xor
push
clc
pop
lods
jp
mov
mov
xchg
incl
pop
jne
movhlps
ret
mov
mov
mov
aaa
sub
rcr
dec
mov
outsb
fimull
gs
jge
xchg
cmp
xor
mov
ja
imul
arpl
jno
clc
jb
mov
sub
xchg
adc
xchg
sbb
ja
pop
pop
fisubrl
test
filds
and
fistps
or
and
jg
mov
pop
fs
sti
mov
and
ljmp
sbb
jbe
jne
pop
ja
and
and
call
push
in
mov
lret
insl
test
mov
mov
dec
stos
aas
push
stos
loopne
mov
adc
shl
inc
mov
aad
nop
push
test
pop
dec
push
push
les
fdivrs
jns
jo
adc
push
in
mov
loope
shlb
pandn
in
gs
add
or
dec
in
insl
cmc
loopne
lods
and
leave
dec
testl
inc
shll
lret
data16
xchg
fidivrl
lahf
cli
popa
stos
adc
dec
adc
adc
or
leave
adc
stos
out
xchg
scas
dec
mov
mov
mov
mov
mov
dec
adc
cld
mov
pop
aad
ds
xlat
add
ja
xor
mov
adcl
arpl
arpl
xor
inc
dec
fsubrl
jns
sub
jmp
and
dec
mov
icebp
or
lods
inc
lea
ficoml
mov
jnp
ljmp
pop
adc
or
insl
fadds
sub
and
je
inc
sbb
add
loopne
or
push
pop
bound
gs
shlb
sbb
push
cmp
imul
sub
sub
in
push
and
or
ljmp
loopne
ret
sti
in
insl
mov
xor
lret
enter
cmp
xor
test
clc
popl
and
push
pop
push
arpl
and
cmp
add
inc
mov
test
fs
fnsave
xlat
mov
dec
test
xor
sbb
inc
add
and
repz
xor
inc
decl
jl
xchg
xor
add
xor
lods
leave
arpl
and
js
push
mov
xor
jb
pop
clc
add
adc
cmp
jnp
das
add
int
scas
jno
enter
mov
jmp
dec
adc
push
rorl
mov
test
loopne
adc
push
out
pop
cli
cmp
sar
aaa
mov
jp
inc
xor
gs
or
jecxz
scas
ret
rclb
cmp
pop
pop
or
add
mov
out
outsl
daa
mov
ja
arpl
cmp
push
pop
leave
xchg
cmp
shll
mov
dec
xchg
push
xchg
mov
mov
jecxz
xchg
sub
pop
lret
les
lods
fsubrp
lods
jbe
jmp
jbe
lcall
repz
xor
adc
ja
inc
cld
add
adc
cmpsl
adc
jo
gs
int
mov
add
lahf
test
stos
mov
lret
sbb
xchg
xchg
pop
divl
sub
and
jb
add
adc
sub
dec
je
ss
movsl
test
rep
mov
test
scas
cmp
pop
push
inc
pop
jl
xlat
bound
fildl
dec
movsb
aas
test
cmc
mov
jne
fstpl
or
xchg
fidivrl
fcomps
testl
adc
push
clc
mov
shlb
into
jg
rolb
mov
push
mov
out
push
jae
test
in
roll
mov
mov
je
xlat
xchg
stos
pop
pop
addr16
jnp
in
inc
jb
mov
mov
sub
gs
lahf
dec
push
sbb
in
js
jne
mov
push
sbb
jno
sub
ja
in
xchg
dec
cs
jno
dec
mov
fsubp
mov
pop
mov
icebp
fwait
dec
xor
sahf
call
ret
jnp
std
xchg
sub
push
test
xchg
jmp
int3
xchg
push
adc
and
stc
sub
repnz
sahf
mov
dec
ret
loope
repnz
pushf
arpl
lds
pusha
push
test
jo
lsl
mov
jns
adc
lods
nop
xchg
dec
aaa
or
fldenv
sbb
lret
les
movsl
stos
fistpll
hlt
into
test
shrb
mov
enter
inc
outsl
dec
fnstsw
and
inc
loop
xchg
xchg
dec
mov
xchg
out
cmp
out
ret
mov
test
push
daa
lods
dec
push
shl
hlt
test
daa
outsl
adc
aad
out
in
lret
and
sub
mov
or
mov
push
jb
in
imul
xchg
jb
and
xor
rcrl
les
cld
clc
and
shlb
sub
and
mov
fsubs
dec
cmp
pop
and
sbbl
stos
jnp
jne
sti
aam
pop
stos
xchg
mov
jno
ret
insl
fldl
xor
scas
pop
fdivrl
aam
push
jle
inc
or
jp
and
xchg
inc
adc
mov
sti
lds
pushf
ficoms
and
aad
repnz
push
and
cmp
inc
call
dec
test
xchg
and
aam
add
rep
mov
les
inc
cmpsb
add
pop
jno
mov
push
mov
mov
nop
inc
cmp
mov
mov
or
lock
outsb
cmp
lret
add
fadds
pop
xchg
iretw
sub
add
xor
cmpsl
sub
mov
inc
xor
jecxz
andl
push
jae
cmc
dec
cmp
fstps
sub
dec
push
nop
shr
push
and
push
in
add
std
cmp
das
push
and
cli
cmp
insb
repnz
je
pop
repz
sbb
mov
sti
add
pop
ror
iret
pop
aas
aas
mov
xchg
test
pop
jbe
sbb
nop
adc
enter
mov
jle
js
arpl
jns
cvtpi2ps
push
pop
sbb
or
enter
jg
stc
js,pt
out
jecxz
jbe
cmp
xchg
sbb
pushf
bound
cmp
in
xchg
and
mov
sub
sub
mov
mov
aas
adc
gs
push
and
les
insl
adc
and
adc
add
sbb
in
push
mov
jmp
in
fcomip
adc
xchg
inc
push
popf
jg
sub
xchg
sub
sbb
inc
cs
dec
insb
loope
sbb
movsb
in
ret
aaa
lods
sar
mov
inc
push
pcmpeqd
inc
jae
pop
push
mov
insl
xchg
mov
test
cmp
inc
push
or
stos
idivl
xor
and
sarl
roll
mov
int3
popf
xchg
sbb
sub
mov
dec
sub
dec
mov
and
out
insb
dec
mov
dec
dec
fsts
add
pushf
inc
mov
cvtpi2ps
mov
clc
pop
or
sahf
mov
movsl
pop
orl
sub
shld
inc
jle
les
xor
daa
daa
or
loop
mov
out
jl
test
sub
mov
adcl
inc
es
dec
shl
jns
ficoms
arpl
out
shrl
scas
xchg
lock
lcall
sbb
mov
hlt
in
sbb
std
ja
enter
fsubl
cld
stc
test
cmp
andb
call
push
nop
cmp
cmp
cmc
xchg
ljmp
ja
aaa
xchg
jmp
mov
sub
xchg
push
pop
jg
adc
pusha
and
jb
dec
or
out
mov
and
negl
push
and
out
ja
hlt
push
jmp
movsl
add
jae
loop
pop
push
outsl
push
add
dec
loope
adc
sbb
and
gs
xor
pop
jbe
push
xchg
dec
aam
loope
pop
mov
dec
cld
xlat
jbe
adc
inc
mov
adc
push
lret
out
rcll
or
xor
imul
je
xor
mov
sbb
adc
popa
test
mov
data16
in
xor
int
std
sbb
loopne,pn
lret
movsb
ss
mov
push
adc
inc
inc
mov
jle
cmpl
or
inc
push
sbb
cmpsl
je
xchg
sti
call
fists
mov
push
push
loop
nop
mov
xchg
dec
cmp
cwtl
cmp
jnp
out
fildl
lea
sbb
or
loop
cli
sbb
das
fnsave
mov
cwtl
insl
mov
loopne
inc
shrb
ret
js
push
jb
push
test
or
fldt
jle
pusha
js
jmp
mov
cmp
jb
iret
dec
pusha
pop
outsb
aad
jge
jmp
or
lock
lods
rclb
sbb
xor
movsb
push
inc
iret
cltd
lcall
xor
movsl
loop
push
scas
orl
jmp
icebp
mov
popf
push
hlt
cmpsb
fisttpl
stos
orl
pop
stos
leave
push
xchg
outsl
movsl
adc
mov
and
add
lcall
cli
out
jbe
out
adc
fldt
out
xchg
lods
call
cmp
sub
pop
and
outsb
mov
movb
sbb
jo
jg
or
pop
push
mov
adc
imul
push
roll
cmc
cmp
lcall
mov
jbe
sbb
xchg
xor
jnp
aad
adc
popf
lock
rcr
ret
cwtl
or
clc
push
mov
jecxz
aas
stos
call
dec
add
es
xchg
shrl
pop
mov
push
movsl
in
xchg
inc
pop
dec
nop
jge
ficoml
lret
stos
add
testl
add
fwait
push
cmp
adc
into
add
dec
mov
add
shlb
popf
cmpsl
aaa
lea
or
mov
push
arpl
lods
scas
pop
adc
mov
rorb
inc
pop
sub
daa
sub
sub
sarl
gs
jne
push
push
mov
xchg
lods
push
mov
cmp
lock
mov
mov
jb
insl
dec
mov
out
sbb
cmp
fists
inc
push
adc
sub
sbb
leave
sti
fstpl
ljmp
jl
sbb
repz
pusha
xor
dec
stos
sbb
movsb
jmp
cmp
jmp
lds
repz
lahf
arpl
xor
arpl
cli
stos
mov
std
mov
jg
jmp
jp
xor
in
imul
push
pop
mov
push
movsb
sarl
test
mov
mov
and
cs
sbb
jmp
lret
mov
jno
mov
mov
movsl
push
sbb
mov
fwait
push
je
cli
xor
jno
mov
cmp
ds
mov
xor
pop
xchg
adc
loopne
jmp
add
cmpsl
dec
dec
icebp
cmp
xchg
lea
popa
jns
dec
inc
xlat
xor
bound
pop
lock
sbb
sub
xchg
int
pusha
inc
xchg
add
dec
jle
fdivs
bound
inc
adc
push
push
sbb
fldcw
loope
mov
mov
fsubl
dec
jno
lcall
dec
je
lods
lds
insl
fisubrl
jno
or
test
icebp
jp
nop
dec
mov
dec
push
in
push
mov
out
sbb
add
insb
stc
enter
xchg
push
movsb
enter
dec
push
int
xor
ja
arpl
jmp
push
fcompl
cld
adc
ret
mov
aad
orl
fisubl
lods
fcomps
sti
or
adc
dec
decb
dec
pop
jmp
lahf
jb
pop
push
mov
adc
mov
into
xor
or
push
call
cmc
rorb
lea
xchg
add
mov
jns
scas
xchg
fs
dec
insl
test
xchg
rcr
xchg
cltd
mov
repnz
lret
in
or
adc
jno
pop
aad
ret
or
mov
sbbb
lds
sbb
add
jb
adc
push
int3
mov
adc
jle,pn
repz
pop
or
mov
lcall
pusha
xor
ljmp
cmpsb
faddl
push
mov
les
inc
sbb
fimull
adc
or
aaa
cmp
rcll
test
data16
jne
jae
pop
or
xchg
ud2
roll
dec
cmp
test
mov
test
sbb
aam
sbb
or
mov
fiaddl
sti
mov
cmp
out
jns
mov
cwtl
cmp
cs
in
dec
mov
std
std
movsl
xor
aam
cmpsl
jmp
fsts
add
mov
pushf
jbe
xchg
mov
mov
movsl
or
out
add
sbb
pop
sub
clc
mov
dec
push
add
add
jb
xchg
sahf
cmc
cmpsl
xlat
xchg
sbb
aas
or
das
enter
fld
scas
fcmovne
rcrl
cmp
pop
repz
sar
stos
std
loop
aad
dec
lods
xor
lret
pop
fcomps
shl
aas
xor
mov
stc
cltd
divb
or
mov
sbb
stos
cmp
clc
stc
pop
jnp
out
pop
cmp
pop
pop
push
sarb
jne
adc
clc
and
sbb
jge
mov
fidivrl
aaa
sbb
sbb
fstpt
std
paddd
jecxz
xchg
icebp
inc
imul
std
repz
out
sbb
popf
ljmp
jmp
push
loop
into
cmp
dec
pop
xchg
orl
iret
fstps
inc
insl
dec
inc
cmc
mov
lds
push
gs
push
mov
data16
test
pop
jecxz
xchg
push
xor
js
ss
push
out
repnz
cli
lods
out
pop
aam
into
mov
test
fidivrs
mov
pop
sti
icebp
adc
sub
lahf
daa
movl
mov
xchg
imul
les
mov
adc
sbb
xor
cmp
push
loopne
decl
add
sbb
std
push
cmpsb
dec
pop
jecxz
lldt
pop
xor
testl
jp
mov
jb
das
test
inc
in
pop
xor
fcomp
push
push
jno
sub
inc
ds
pop
jnp
data16
std
mov
shll
jg
leave
ss
pop
sbb
push
jge
loope
and
jbe
sbb
dec
sub
sahf
adc
xchg
sbb
add
push
icebp
out
cli
jle
insb
and
test
sbb
fwait
int3
hlt
mov
push
mov
into
cli
mov
pop
dec
lock
sbb
dec
mov
popa
xor
out
push
fwait
push
pusha
dec
jb
sbb
frstor
aas
and
out
sub
pop
sub
dec
pop
shr
xchg
adc
inc
shlb
je
les
adc
mov
fistpll
pop
ja
sbb
jne
sahf
imul
mov
scas
sbb
aam
fs
push
flds
xorb
push
xchg
cmpsb
mov
dec
cltd
xor
jg
jp
jmp
test
push
sbb
and
mov
mov
sbb
ret
xchg
por
notb
ret
push
and
pushaw
ds
fstp
push
pusha
mov
jg
adcl
shrb
ja
je
dec
fsubrl
into
divl
mov
mov
pop
shrl
sarl
sub
mov
cld
adc
or
lods
jp
in
fisttpl
push
cmp
sub
inc
dec
and
sbb
mov
repz
insl
push
out
fwait
idiv
xchg
mov
dec
cmp
lret
test
js
sbb
dec
mov
cmp
stc
push
lahf
pop
adc
sti
lods
xchg
mov
std
arpl
nop
hlt
lcall
imul
cli
movl
inc
mov
cmpsb
inc
and
jl
arpl
xor
jecxz
sbb
lds
or
cmc
push
jmp
jp
test
mov
movsl
jg
sahf
mov
aam
lret
cmpsl
add
mov
pop
xchg
mov
enter
in
rcrl
es
sbb
in
push
lea
mov
mov
mov
pop
dec
aam
decb
cmp
lcall
repz
and
cmp
xor
daa
inc
inc
sahf
sub
jno
cld
mov
jns
popf
inc
notb
lahf
jp
cmpsb
xor
and
ds
mov
pavgw
dec
into
stos
or
xchg
pop
pop
je
bound
fwait
push
add
dec
les
ret
enter
dec
popa
sahf
jnp
jge
dec
and
jle
aam
outsl
mov
es
dec
sbb
in
int
ficoml
repnz
stos
test
addl
sti
push
add
test
fldenv
stos
sbb
adc
lea
xor
xchg
adc
pop
inc
popa
or
out
ffreep
sub
adc
cmp
push
addr16
inc
pop
mov
ret
lds
xor
mov
dec
and
dec
dec
mov
jle
cwtl
icebp
iret
pop
cmp
push
mov
mov
sub
mov
sub
pop
std
je
lods
push
dec
jo
in
jmp
cwtl
dec
fisubl
xor
lea
loop
add
jle
sbb
in
xchg
test
xor
ds
xor
mov
and
fwait
addr16
mov
stos
cmc
movsb
jbe
call
xor
cwtl
dec
or
jecxz
sarb
dec
shrb
sti
dec
pop
sti
stos
iret
add
jecxz
xchg
mov
pop
pop
xchg
jbe
pop
orl
mov
mov
xor
je
adc
adc
mov
add
iret
mov
or
push
ss
js
cmp
add
or
stc
and
pop
aas
into
add
jecxz
sbb
pop
xchg
scas
movsb
xor
fcoml
loope
sub
ret
sbb
cmp
dec
out
ds
aad
mov
jnp
jp
mov
cmp
fisubrl
xor
lock
test
fadds
mov
outsb
addr16
fsts
xchg
lods
mov
sbb
cwtl
push
xchg
add
sbb
incl
mov
std
pop
fsub
ds
push
arpl
test
ds
xor
or
push
hlt
push
inc
push
lds
cmpsb
cmp
xchg
xchg
lret
les
push
sbb
adc
sbb
cmp
je
dec
pop
lock
mov
xor
fisubl
insl
scas
or
push
and
xchg
sbb
mov
and
shll
pop
dec
dec
sub
aam
in
push
adc
or
mov
pop
mov
add
dec
add
sub
inc
adc
mov
mov
ss
adc
leave
iret
inc
popa
lcall
push
mov
inc
or
push
popf
sub
lea
bound
inc
mov
outsb
outsb
or
pop
add
cmp
push
test
pop
pushfw
nop
cli
cli
lcall
scas
test
cmp
test
or
enter
js
repz
mov
sahf
data16
fdivs
mov
dec
xor
fs
inc
push
pusha
lcall
push
cmc
cs
cmpsl
mov
mov
pop
xchg
push
cwtl
cld
pop
fcomps
xchg
js
loop
push
pop
dec
push
add
call
lcall
lret
gs
divl
in
stos
shrb
out
jp
and
and
lods
das
pop
push
dec
pusha
cmc
mov
fs
sub
dec
and
getsec
pop
cmpsb
sub
inc
xor
loop
adc
push
jle
cmpsl
lcall
xchg
mov
enter
rcl
test
lods
push
adc
std
out
sub
shll
adc
faddp
addb
mov
push
aad
cmpsl
dec
mov
mov
and
mov
pop
add
xchg
scas
cmp
inc
shrl
scas
clc
pop
aaa
or
ds
and
lret
xor
enter
xorb
and
or
pop
in
daa
pop
mov
or
pop
insl
cmp
jle
pop
cmp
loopne
xor
mov
inc
nop
lods
test
xor
and
sahf
push
popf
add
inc
cmp
lret
push
aaa
das
cmp
out
xchg
mov
fldenv
push
mov
adc
and
push
mov
aad
sub
inc
out
nop
add
mov
popf
in
or
int3
lret
clc
push
outsl
arpl
aas
jae
addb
and
jp
in
mov
outsl
lret
pandn
push
std
sti
ret
jns
mov
dec
jo
fcompl
jns
cli
fistps
and
mov
jp
mov
ret
in
out
xor
pusha
mov
fistl
jo
cs
push
pop
push
or
out
push
adcl
xor
test
adc
cwtl
adc
repz
popa
insl
jge
pop
int3
jae
stos
retw
push
add
push
in
sub
insb
std
mov
movsl
stos
push
test
jae
inc
xlat
in
gs
inc
mov
pop
cmp
jp
mov
mov
adc
and
push
sbb
stos
dec
or
orb
popa
outsl
scas
add
aam
mov
callw
mov
outsl
daa
inc
add
gs
lcall
add
xor
inc
xchg
xor
pop
or
call
mov
idivl
repz
cltd
adc
lea
xorb
cmc
cmp
fwait
mov
sub
and
outsl
fs
ret
pop
iret
mov
push
add
cli
mov
repz
sbb
inc
outsl
mov
lods
or
pop
js
mov
jge
dec
sub
jnp
pop
jg
or
or
loopne
jns
pop
xlat
mov
iret
pusha
xor
shrb
je
fwait
dec
das
call
icebp
xchg
sbb
scas
jo
insb
dec
adc
aas
mov
cmp
test
pop
sub
insw
jo
add
pop
les
mov
fwait
pop
sub
adc
mov
scas
or
aam
fadds
mov
jmp
leave
in
push
ljmp
repnz
out
jne
pop
aaa
pop
dec
push
aad
notl
mov
xor
iret
test
jp
cmp
repnz
cmpsl
lods
inc
nop
test
and
mov
ljmp
and
xchg
xchg
gs
test
loop
dec
xchg
int
insb
push
lock
fs
and
dec
inc
fwait
and
das
dec
sbb
mov
clc
sub
cmp
push
dec
sbb
dec
pop
int3
push
scas
aas
call
in
adc
insl
mov
daa
mov
sub
fcmovb
xor
inc
push
addr16
in
out
pusha
push
lock
fwait
dec
xor
xor
add
mov
cmpsl
cs
add
pop
cmp
call
mov
ret
mov
adc
outsl
pop
aaa
pop
test
push
std
push
fbstp
or
sub
loopne
mov
mov
add
mov
push
mov
xchg
ja
je,pt
push
lcall
xchg
stc
cmp
cmp
mov
or
adc
dec
mov
inc
cmp
fwait
test
outsb
sbb
das
out
pop
xor
je
dec
mov
jbe
dec
adc
xor
outsl
stos
out
jne
xlat
inc
xchg
movsb
jb
adc
xchg
mov
mov
inc
ss
lods
jnp
push
mov
jg
flds
test
jecxz
sub
xorb
lods
mov
mov
adc
mov
loopne
xor
lods
rol
sub
inc
decb
fwait
cmp
xor
pop
loopne
stos
mov
xchg
popa
sbb
xchg
test
fdivs
out
cmp
movsb
and
iret
out
push
mov
push
or
mov
push
push
fnstcw
imul
mov
push
xlat
xor
iret
cmp
push
mov
mov
xor
loop
adc
jb
jbe
push
mov
inc
inc
repz
orb
out
leave
inc
js
aad
pop
cwtl
mov
xor
loop
bound
or
in
popa
cmpsb
xor
dec
jbe
cmp
test
push
push
mov
pusha
jge
lahf
adc
test
jno
leave
hlt
push
lea
in
das
ret
cld
push
in
add
div
imul
stos
jne
jecxz
es
mov
jno
dec
cli
dec
and
enter
scas
sub
inc
adc
and
call
daa
test
loop
pop
cmp
adc
adc
or
rorl
daa
fnstsw
mov
inc
xor
pop
sti
data16
mov
dec
mov
or
stc
out
daa
push
xor
pushf
cmp
test
ss
fldt
and
mov
mov
ss
ffree
int3
out
adc
dec
and
outsl
fwait
sbb
cwtl
jbe
mov
insl
sub
pop
pop
mov
mov
outsl
sub
jecxz
pop
aad
adc
jb
mov
cmp
ds
loope
lret
clc
fstl
add
pop
gs
cmp
lcall
aad
cmpsl
inc
sahf
sbb
movsl
stos
inc
push
stc
or
dec
gs
lods
cmpsb
aam
jg
xchg
mov
mov
sub
adc
decb
leave
jmp
movsl
push
insl
out
sub
inc
lock
push
negb
add
sub
adc
hlt
sbb
xchg
sub
lea
outsl
dec
insb
and
inc
push
xchg
aas
inc
dec
ss
push
mov
jbe
in
js
adcb
add
shlb
sti
or
lods
push
xchg
and
ljmp
iret
mov
dec
jmp
push
add
jl
and
cmp
inc
dec
idiv
cmp
into
cmp
sbb
repnz
out
adc
jbe
xchg
mov
add
jno
push
std
dec
mov
jo
and
mov
pop
mov
inc
inc
into
dec
inc
fisttpll
gs
add
repz
inc
arpl
insb
in
cli
das
jo
fnstenv
repz
sub
aam
mov
cld
incb
out
cmp
out
imul
mov
repz
sbb
fstps
jns
pop
mov
imul
sub
push
adc
pop
jb
sbb
mov
in
in
dec
mov
fdiv
push
in
pop
mov
cwtl
lods
call
push
and
sub
and
cltd
cwtl
xor
cmp
mov
pop
xchg
mov
sub
shll
and
jno
imul
mov
daa
ja
mov
inc
inc
pop
dec
ret
dec
mov
nop
pop
addr16
xlat
js
inc
gs
clc
jl
xor
pop
push
movsb
mov
xor
icebp
pop
push
xor
mov
xchg
ja
dec
dec
ljmp
xlat
imull
pop
jmp
outsb
outsb
push
ljmp
mov
dec
push
loope
lock
inc
cmp
sub
sbb
daa
daa
jp
inc
popf
mov
mov
dec
insl
xor
jae
xor
jp
cmp
cmpsb
lods
out
bound
adc
push
push
test
xchg
pop
repnz
fisttpll
and
ret
shl
or
repnz
push
je
push
pop
mov
sub
jb
push
and
daa
popa
out
pop
mov
push
je
jp
data16
mov
jmp
dec
mov
in
ret
loop
jecxz
mov
mov
fscale
and
mov
mov
mov
movsb
insl
cltd
pop
add
mov
shl
outsl
leave
push
imul
fidivrl
pop
popa
dec
sub
jmp
inc
dec
pop
xchg
into
lret
adc
ljmp
cmp
pop
adc
pop
cmpsl
jnp
pop
sub
test
cmp
imull
and
les
sti
outsl
in
fistl
stc
cmpb
mov
jl
cmp
jnp
xchg
andl
jmp
or
and
shrl
jo
sub
in
rcrl
test
adc
xchg
mov
dec
sbb
dec
data16
dec
mov
sahf
scas
imul
push
aaa
adc
ds
mov
push
imul
add
jnp
adc
sbb
adc
loopne
pop
xor
cmp
fdivl
sbb
xchg
pop
cmp
mov
mov
inc
stos
fsubl
shll
lret
sub
push
sahf
fmuls
mov
add
and
sbb
push
outsb
mov
jge
pop
add
lret
movsb
pop
mov
push
cmp
std
mov
insb
mov
pop
xor
inc
push
out
xor
and
inc
cmpsb
cmpsb
mov
push
icebp
dec
or
mov
jge
mov
pop
xor
ljmp
testb
nop
mov
ljmp
out
xchg
jnp
add
lds
mov
xchg
aaa
sbb
lret
insb
mov
imul
add
inc
add
rol
add
pop
mov
push
loopne
fldz
fdivs
mov
jg
push
mov
or
je
mov
lea
sub
xor
push
lea
add
xor
dec
sub
aas
loopne
mov
cmp
pop
js
pusha
jge
je
arpl
sub
push
test
jge
loope
lret
shlb
cmp
aaa
push
sbb
cmpsb
pusha
nop
aad
sub
les
add
and
insl
lahf
push
jmp
or
sub
nop
addr16
cmp
xor
mov
arpl
xor
lea
sub
inc
loope
inc
jle
add
mov
cmp
mov
fildl
hlt
mov
imul
shlb
adc
push
aam
xchg
push
jb
icebp
rolb
sbb
jmp
mov
imul
cmp
negl
push
xor
push
or
dec
nop
aam
sahf
push
sub
pop
adc
xlat
data16
lods
add
movsl
subl
xchg
mov
incl
pop
jp
jp
sahf
dec
jle
pop
jecxz
cmc
inc
xor
add
sbb
outsb
les
sbb
aam
add
xchg
nop
insl
jmp
cmp
cli
addl
cmp
push
mov
mov
pop
cmp
jmp
bnd
stos
add
outsl
ret
data16
jg
and
mov
cmp
xchg
adc
insl
mov
sub
adc
xor
mov
push
cwtl
inc
cmp
daa
test
push
mov
inc
jnp
ret
xchg
add
sbb
pop
popf
cmp
sbb
or
jl
jecxz
test
rcrb
lods
cld
imul
repz
cwtl
pop
inc
xchg
fnstenv
movsl
lret
cmp
push
xchg
add
adcb
adc
sbb
mov
roll
aas
cmp
pop
dec
in
or
sbb
popa
jge
sub
into
stc
stos
inc
xchg
adc
xor
es
jecxz
mov
gs
out
mov
cmpsl
out
push
xor
sub
icebp
mov
int
sub
xor
inc
js
std
cmp
jl
push
jge
out
push
pushf
cmp
ret
cmp
mov
xchg
jb
inc
xchg
xchg
jmp
and
out
lahf
aam
fsts
xor
je
mov
mov
ja
pop
sbb
sbb
or
lods
rorl
fldenv
xchg
mov
ret
or
int
cld
ds
mov
adc
and
sub
mov
popa
cmp
mov
jecxz
rclb
dec
xchg
or
mov
and
out
xor
jbe
inc
inc
xor
outsl
notl
mov
add
aaa
mov
and
js
pop
enter
sbb
les
or
enter
enter
psllw
dec
inc
push
push
shlb
es
adc
inc
add
push
in
cs
pop
outsl
pop
xchg
dec
jo
test
jno
sub
pop
cmp
and
lcall
push
loop
insl
mov
xchg
fidivl
js
in
sbbb
pop
test
mov
rorb
fimull
scas
in
push
ss
xchg
inc
ret
cmp
jp
adc
movsl
sbb
nop
xchg
sbb
push
push
and
ret
js
lret
pcmpeqd
pop
fldenv
dec
test
add
cmpsb
mov
scas
mov
fcompl
or
pop
lret
jle
mov
pop
xchg
adc
mov
sub
lods
rcr
or
nop
xchg
mov
inc
fidivs
sti
jns
call
xor
rcrb
jbe
dec
iret
lcall
inc
push
loopne
leave
sbb
mov
fs
test
xchg
std
add
ret
adc
mov
and
jp
loopne
jmp
xchg
xor
rcr
ficoml
push
inc
cmp
shlb
loope
sub
loope
aas
js
popa
out
lods
and
lea
movsb
je
outsl
sub
aas
mov
je
movsl
pusha
mov
repz
int3
adc
pop
int3
add
loopne
pop
push
sub
dec
es
push
cs
int3
xor
aas
lds
xor
aad
popa
xor
addr16
inc
divl
scas
in
dec
jge
pop
out
cmp
push
mov
aam
cmp
push
outsb
lods
mov
xlat
stos
jns
stc
fidivs
divb
inc
fs
lods
ret
loope
test
dec
mov
in
sbb
dec
pop
lods
mov
cs
jb
lret
mov
mov
pop
mov
add
rclb
push
sbb
pop
push
cmpsl
arpl
sub
sarb
fstps
mov
mov
hlt
lret
test
push
and
pop
bound
lock
sbb
rep
imul
xchg
sub
hlt
inc
jl
xor
sbb
ret
rol
aas
mov
push
adc
add
test
mov
loope
in
xchg
push
negb
pop
hlt
addb
rcll
push
mov
cld
or
cmp
inc
pop
daa
and
push
inc
iret
jecxz
out
mov
into
fwait
push
xor
pop
sbb
fisubl
pop
xor
adc
jns
push
loop
and
hlt
clc
fldenv
scas
pop
call
inc
xor
inc
inc
cmp
jl
mov
sub
xor
mov
jne
imul
popl
fwait
push
xor
test
sahf
and
cmc
xchg
ds
lock
dec
inc
mov
mov
dec
jge
sbb
fmul
repz
mov
mov
mov
inc
test
and
scas
addr16
push
movsl
sbb
bound
mov
push
add
xlat
lds
es
dec
jbe
cwtl
nop
xchg
mov
fsub
lret
ret
add
sub
add
ljmp
xlat
mov
cli
fstpl
mov
inc
adc
sub
cs
roll
pop
pop
addl
xor
xchg
out
or
mov
and
inc
scas
dec
inc
insb
xchg
fcoml
sub
movsl
lret
mov
jnp
ret
mov
jl
adc
push
pop
lock
pop
dec
mov
xlat
es
inc
or
push
xor
add
mov
test
pop
adc
mov
movsl
push
mov
lret
test
or
cltd
pop
adc
ss
jl
push
xchg
inc
jecxz
and
mov
mov
aad
pushf
dec
or
out
xor
jae
outsl
adc
adc
lcall
or
jg
jne
xchg
jl
fwait
in
cmpsl
mov
lds
add
xor
jbe
push
lret
movl
out
dec
xchg
fwait
pop
pop
stos
and
pop
js
and
out
test
jmp
jp
aaa
ljmp
push
test
xlat
inc
fs
fstpl
or
addb
jns
int3
scas
push
cli
or
ret
inc
push
pop
push
fistps
arpl
adc
push
sahf
jmp
jge
and
pop
cltd
xor
lods
cmp
pop
xor
push
mov
int3
fdivrl
cs
pop
add
push
pop
push
push
cmp
pop
std
mov
or
adc
lds
xchg
mov
cltd
lahf
inc
push
mov
add
push
roll
lods
cmp
in
mov
lcall
lret
add
cmp
roll
lods
incl
sub
dec
movsl
into
mov
jmp
out
daa
xor
pop
add
iret
sahf
inc
adc
xlat
xor
repnz
ret
inc
test
stc
push
adcb
loop
jno
mov
rcrb
lds
popa
test
ret
sub
sbb
movb
push
jnp
into
inc
clc
push
call
fidivs
push
jg
mov
mov
bound
mov
mov
loop
movsl
sbb
xchg
cli
push
loop
in
pop
mov
outsl
dec
and
mov
cltd
cld
push
push
popf
notb
push
xor
int
sti
xlat
imul
shll
insl
ds
in
or
call
and
xlat
iret
movsl
fmuls
repz
pop
lds
or
xchg
leave
mov
add
das
data16
push
adcb
adc
push
dec
lret
sub
loope
je
lahf
push
jne
mov
test
sub
push
add
lock
repnz
cmpsl
push
iret
out
mov
int
and
mov
push
add
insl
dec
sbb
inc
frstor
mov
jmp
es
fidivrs
mov
pop
je
cld
cs
ds
mov
sbb
pop
xchg
xchg
scas
popa
sbb
out
pop
mov
push
fsubl
push
and
loop
dec
ljmp
fwait
inc
dec
xchg
inc
mov
sahf
pop
icebp
jmp
push
fidivl
or
aam
push
mov
insb
or
pop
sbbb
clc
notl
sti
and
aaa
sbb
push
bnd
outsl
xchg
add
lods
movsb
jmp
push
cmpsb
shrl
dec
push
insl
enter
sbb
dec
mov
dec
mov
aam
jno
lock
mov
cmp
scas
jecxz
movsb
mov
cmp
sub
repz
sbb
dec
and
add
addb
mov
mov
adc
into
mov
stos
sub
or
jbe
insl
xlat
xorl
mov
aaa
pop
push
mov
xor
insb
aad
dec
push
fisubs
jmp
xor
scas
into
jecxz
fwait
dec
or
mov
mov
scas
cwtl
sarl
jecxz
mov
insb
jle
fsubrs
push
sub
pop
xor
in
jb
xchg
xchg
int3
jo
lret
pop
pop
jne
mov
dec
or
and
pop
xchg
jmp
lret
xchg
cltd
imul
mov
hlt
or
sbb
loopne
dec
push
jge
xchg
cmc
js
ljmp
int
jb
pushf
push
daa
jae
std
imul
test
pop
rorb
dec
jae
ja
jo
jo
add
nop
xor
cli
push
ljmp
add
in
lods
loopne
es
cmc
xchg
mov
jge
iret
repnz
cwtl
inc
popf
inc
lods
pop
lods
int
stc
jp
cmp
sub
mov
xchg
sbb
mov
xorb
test
cld
mov
aam
ja
sbb
ljmp
mov
cmp
loope
in
adcl
inc
xchg
xor
cmp
sbb
scas
jecxz
in
popf
sub
movsl
loope
adc
dec
jne
or
mov
mov
mov
iret
sub
jbe
repz
ja
mov
outsl
orb
sbb
arpl
and
inc
mov
mov
mov
ja
push
stos
testb
test
pusha
flds
imul
dec
lret
bound
outsb
iret
jo
cltd
add
ljmp
icebp
push
insl
les
fstpt
cmpsl
xor
pop
sub
jo
pmulhw
mov
mov
fsts
lahf
mov
or
ret
jnp
sbb
mov
das
xor
bound
inc
pushf
mov
ficomps
sub
sub
mov
cltd
mov
loopne
fbstp
int
sub
jb
xor
push
test
xchg
test
inc
stos
jb
outsl
cld
lds
and
insl
dec
jno
hlt
mov
and
dec
aad
xlat
cmp
es
sarb
or
cmc
mov
outsb
cmp
lods
xor
iret
clc
push
push
push
daa
jo
sub
fcomip
cmp
iret
lock
dec
cwtl
mov
and
push
aam
jae
sbb
loope
inc
aad
xchg
jp
ficoms
int
test
test
mov
add
mov
pop
jge
ficoml
add
cmp
inc
push
cmp
rcrl
sbbl
or
mov
fbld
pop
mov
xchg
cmp
into
sbbb
and
lret
sbb
lret
push
cwtl
dec
movsl
mov
mov
adc
push
in
and
in
mov
dec
jle
sahf
js
cmp
adc
pop
jno
lret
mov
stc
test
push
mov
add
pop
call
cmp
sub
adc
shlb
cltd
lahf
in
jbe
test
enter
incl
inc
inc
je
cmpb
gs
movsl
mov
rcrb
pop
xchg
or
sbb
shl
loope
ds
xor
mov
xor
pop
dec
cmp
xchg
fsubs
xor
std
add
test
test
sbbl
xor
mov
jnp
imul
sbb
or
inc
cmp
push
aad
jle
sub
sub
arpl
dec
add
stos
cmc
sbb
inc
lret
enter
or
mull
sbb
hlt
cmpsb
es
adc
lock
xor
aam
push
out
sub
pop
push
add
add
fstps
fbstp
mov
lock
dec
nop
dec
les
addl
rol
outsl
std
mov
sbbb
imul
inc
mov
cmp
enter
test
orl
adc
xor
cmc
mov
rcl
fnsave
xchg
mov
sbb
bound
lahf
add
ret
sbb
or
sbbb
xor
sub
sahf
xor
xchg
insb
decl
in
movsb
cltd
or
xor
clc
cmp
aam
jo
xchg
xchg
mov
shl
mov
shrl
add
push
sti
lea
in
mov
testb
pop
or
pop
lods
adc
sbb
shl
pop
sarl
xchg
cs
mov
shll
jge
mov
xor
or
cmpsl
scas
xchg
fldlg2
out
mov
scas
dec
hlt
jle
hlt
xor
test
shll
inc
adc
mov
pop
mov
inc
xor
sti
and
push
test
pop
fstpl
add
icebp
fildl
out
jno
scas
mov
subb
adc
push
out
mov
inc
sub
sbb
mov
xchg
mov
ror
popa
and
sub
lret
mov
or
aas
push
mov
repnz
cmp
sub
jp
mov
scas
add
adc
negb
mov
push
out
mov
jmp
fnstcw
lods
sarb
jl
sub
xchg
out
test
in
pop
lock
lcall
xchg
jmp
mov
ret
int3
fwait
mov
pop
inc
fcomip
push
lcall
insb
jns
cmp
push
fbstp
inc
rolb
mov
es
inc
add
dec
xchg
outsb
jb
stos
data16
out
popf
xor
jns
add
cmc
and
subl
inc
push
aaa
std
cmp
test
xchg
sub
cmp
rorl
or
and
clc
jge
add
pop
jg
sahf
fimull
xchg
pop
popf
cli
popfw
mov
sub
or
xor
cli
cmc
mov
lock
outsb
test
sub
xor
push
leave
enter
adc
xchg
push
arpl
gs
mov
and
sbb
mov
or
jnp
push
xlat
insb
mov
or
sbb
pop
shr
in
or
gs
cmp
mov
mov
int
inc
in
adc
repnz
popa
pop
aas
mov
imul
fisubl
push
sub
stos
cmp
adc
xchg
ds
repnz
mov
push
sbb
mov
js
nop
mov
rolb
icebp
pop
mov
fcompl
int3
pop
es
sbb
ss
xchg
icebp
es
lock
pop
jmp
xchg
inc
fsubr
pop
cmpsl
int
and
and
popf
addr16
jns
xchg
mov
add
imul
cltd
movsb
cmpl
lods
mov
test
jne
mov
cwtl
jp
std
dec
icebp
lock
in
aad
push
sti
push
ja
pop
inc
push
lahf
and
in
fbld
or
sub
xor
subb
pop
pop
addr16
xchg
dec
jnp
xchg
ret
loopne
in
mov
lret
fnstsw
les
fstp
push
imul
ret
sbb
cmp
test
inc
cmpsb
inc
pop
test
int
sbb
adc
mov
loope
fdivrp
cmpsl
das
je
sub
xchg
dec
jmp
daa
push
xchg
lret
adc
aad
add
mov
push
dec
lods
cmp
push
loopne
jg
xlat
xchg
in
jnp
stc
pop
add
fs
nop
add
fidivrl
in
in
mov
lcall
sbb
fstl
sub
aad
push
repnz
repz
or
lcall
sbb
pop
dec
inc
in
leave
out
icebp
lea
aas
jmp
mov
fs
sub
pop
iret
jns
jbe
cmp
iret
push
loopne
cli
xor
pop
loope
lcall
insb
out
xchg
movw
int
mov
mov
xchg
push
rcr
push
pop
insl
mov
aas
mov
lods
fsubrs
mov
sbb
push
cmp
add
insl
and
addr16
mov
std
push
cmp
mov
fsubl
push
xor
ljmp
cltd
fsubrp
je
or
add
outsb
ja
xorl
jle
adc
xlat
repz
loopne
and
xchg
inc
adc
push
test
test
pushf
pop
adc
jp
pop
in
out
dec
aam
cmpsl
or
stos
ret
mov
clc
xchg
mov
pop
mov
dec
mov
lret
xor
mov
mov
xlat
je
add
sbb
sbb
test
sbb
insb
scas
mov
mov
push
adc
sbb
push
int3
test
or
leave
and
aaa
lods
lods
stos
in
and
jb
lret
es
mov
jecxz
lret
and
insl
xor
mov
fwait
nop
iret
or
cld
pop
shlb
cltd
xchg
push
xor
sub
imul
inc
and
sbb
js
push
jp
inc
int3
lock
and
lahf
push
xchg
out
jge,pt
int
adc
nop
stos
fdivrl
data16
inc
cld
xchg
jg
out
dec
shlb
mov
push
fisubrl
sub
sbb
add
pop
sub
push
repz
lea
call
jmp
enter
outsl
cli
cmp
dec
lret
arpl
mov
jp
std
xor
fs
sbb
pop
sbb
daa
dec
ja
insl
aad
mov
pop
cmp
push
fadd
mov
mov
push
aad
shrb
sahf
adc
adc
sbb
jg
addr16
dec
xchg
fistl
test
jb
inc
push
movsb
xchg
clc
push
or
xchg
pop
jno
roll
pavgb
sbb
or
lds
jns
and
jns
cmp
cmp
add
in
addr16
lea
rclb
pop
iret
ret
jge
adc
adc
pop
push
cwtl
scas
jg
leave
cmp
mov
adc
popa
shrb
and
aaa
xchg
xlat
rcrl
mov
xor
or
mov
ret
pop
dec
inc
cs
mov
sub
cs
and
push
std
mov
add
add
ja
or
cmp
jb
testb
inc
jp
in
mov
mov
jae
cmp
push
dec
pushf
lcall
gs
mov
outsb
sti
mov
sub
push
roll
add
addr16
adc
mov
ds
push
mov
scas
testb
jmp
push
in
sti
jb
fadds
mov
jae
in
out
movsl
push
and
loopne
fldl
hlt
mov
mov
lahf
xor
push
inc
mov
sti
dec
sbb
and
jb
fimull
ljmp
push
ret
repz
addl
jmp
dec
sbb
mov
jo
dec
mov
movsl
jb
xchg
insl
xchg
rcl
adc
sub
sub
or
rclb
mov
ret
imul
jb
aaa
cmp
out
in
popa
cmpsb
xor
divb
push
and
sbb
fildl
jbe
divl
mov
inc
sbb
xchg
or
sbb
mov
pop
push
jns
pop
jl
sub
adc
sarl
roll
in
push
sub
jg
lret
push
adcl
idivl
inc
jmp
xor
cmpsb
mov
mov
cmpsl
cli
in
in
pusha
or
pop
mov
inc
outsl
outsl
or
sub
hlt
sub
jl
in
in
xor
mov
push
push
hlt
xor
lds
or
js
movzbl
mov
or
jl
cmpl
fimuls
and
arpl
fadd
fstp
and
and
sbb
sbb
ds
mov
adc
lcall
popa
push
push
xchg
pop
push
pop
cwtl
pop
and
repz
std
inc
loope
mov
jno
sub
sub
out
arpl
fldenv
push
inc
mov
xor
cmp
clc
pushf
popf
mov
fiadds
ret
mov
popaw
jb
loop
aam
fcompl
test
lods
das
scas
dec
rorb
lcall
scas
or
jmp
ffreep
ds
outsb
in
cmp
xor
mov
sti
dec
mulb
aas
mov
pop
clc
dec
xor
lret
xlat
xlat
jp
in
daa
test
lret
or
mov
incl
mov
xor
dec
ret
cwtl
imul
xchg
scas
mov
jnp
outsl
out
adc
ja
adc
iret
pop
lret
gs
ja
loopne
adc
imul
sbb
and
push
adc
nop
add
shll
mov
add
ficoml
cmp
scas
adcb
hlt
lods
cmpsl
jmp
push
in
xor
dec
ret
popa
xor
push
or
orl
xlat
pop
push
fsubl
pop
out
pop
not
mov
stos
daa
loope
loopne
movsb
into
popa
pusha
push
mov
xchg
sub
pop
loopne
shlb
ficoml
decb
cmp
sbb
dec
sub
pop
add
mov
pop
mov
sbb
sbb
push
mov
jmp
test
jle
jns
scas
test
xor
shrl
gs
test
mov
mov
push
jge
int
mov
push
pop
mov
or
adc
sahf
add
popa
and
mov
mov
add
sub
inc
clc
mov
enter
clc
dec
push
pushf
mov
jle
ret
ds
xor
daa
pop
xchg
das
in
mov
mov
and
lods
sbb
xlat
inc
insb
es
mov
pop
aad
pop
sub
cmp
mov
mov
test
sarb
xor
fxch
add
imul
repnz
mov
add
movsl
adc
adc
loopne
mov
enter
roll
outsb
mov
pop
jne
jb
push
push
jb,pn
rclb
fisttpl
mov
std
inc
push
mull
pusha
js
xchg
sub
cli
mov
adc
xor
fistpl
rorb
orb
add
gs
pop
push
fldenv
mov
pop
push
xor
sarl
fwait
popf
sbb
sbb
adc
or
mov
xor
mov
push
fidivl
cld
jg
repnz
aas
push
jecxz
sub
jnp
and
iret
or
push
sbb
fcoms
xchg
loop
daa
mov
aad
das
loop
push
repnz
push
leave
add
in
les
push
ja
ret
into
cmp
pushf
adc
jbe
sbb
dec
enter
jns
jmp
mov
test
push
pop
and
aam
sbb
in
movsb
push
aam
out
sbb
mov
xchg
jne
pop
fildl
dec
push
cmpsl
shlb
insl
xor
xorb
clc
push
out
mov
pop
xchg
or
sti
rolb
cmpsb
pop
mov
icebp
cwtl
mov
icebp
mov
sub
push
nop
iret
movl
stc
pusha
dec
test
call
dec
adc
enter
lret
mov
lcall
inc
pop
aam
pop
aaa
xor
jnp
pop
push
cmpsb
jo
push
stos
jno
lods
cld
cwtl
dec
out
cltd
sub
jle
mov
push
pop
and
movsl
xlat
xchg
sub
or
test
dec
cmp
aad
sbb
pop
popf
dec
add
scas
sub
enter
lret
push
sahf
mov
pushl
push
fidivl
loopne
out
lret
and
addr16
imul
mov
adc
jmp
enter
mov
sbbb
xor
shll
push
out
ret
sub
push
imull
fcmovb
call
jl
mov
mov
adc
add
lret
jle
cmp
lahf
and
sti
stc
sbb
inc
cmp
sub
int3
push
pop
adc
cmp
sbb
rorb
into
fadds
lods
fldt
leave
jnp
pop
cmpsl
or
stc
adc
add
mov
add
push
xchg
pop
fnstcw
mov
push
lds
fnstenv
fsubl
dec
pop
rcl
sbb
gs
xchg
jb
mov
sub
pop
nop
jbe
inc
ret
in
dec
push
add
xchg
pop
inc
sbb
inc
int3
jne
or
int3
mov
sbb
pop
hlt
xor
jp
sbb
mov
sbb
add
and
leave
mov
daa
in
dec
fcoms
addr16
dec
stos
mov
cmc
mov
or
cld
mov
xor
test
mov
sub
pop
push
lret
add
test
and
sbb
and
jmp
ss
hlt
pusha
lods
fdivrs
lods
inc
loope
fstps
pop
sub
mov
ret
jle,pt
push
ficompl
push
out
lods
jbe
sub
repz
mov
mov
stos
and
push
in
pop
outsb
inc
insb
jmp
xchg
out
in
fsubl
loope
je
movsl
xlat
scas
flds
sub
es
mov
dec
mov
aam
fnstenv
mov
sbbb
jle
dec
mov
fcomps
adc
xchg
stos
mov
cli
jnp
jno
sarb
sub
dec
pushfw
mov
negb
gs
stc
mov
jne
cmp
inc
fsts
sbb
xchg
pop
ret
or
sbb
je
mov
push
cmc
push
daa
fisubrl
pop
or
xor
jo
mov
shl
jp
add
mov
or
pop
ds
in
mov
sub
aaa
sarl
bound
xor
insl
push
in
inc
add
sarb
push
pop
add
adc
push
mov
shll
daa
jo
popa
mov
nop
gs
filds
adc
and
lock
push
out
je
shll
sub
pop
bound
in
repz
push
ret
in
jbe
push
ret
xchg
ror
and
popf
jbe
fildl
pop
ret
xchg
fwait
cld
aam
movsl
cmp
push
mov
or
repz
push
xor
loop
pop
dec
xor
pop
in
mov
ja
mov
cli
mov
fdivs
out
jbe
mov
out
sub
mov
cs
lods
sub
add
adc
push
adc
popa
pop
ret
adc
movmskps
jecxz
movsb
ret
dec
leave
dec
in
std
mov
fisubrl
cmp
imul
scas
pop
or
orl
incb
popl
and
sbb
push
or
sub
add
push
jge
push
mov
ficompl
push
adc
or
jne
sarl
pop
xor
scas
int3
push
jmp
xchg
push
mov
push
xor
scas
mov
fmulp
sbb
sahf
xor
dec
fcmovu
test
and
mov
das
or
and
cltd
jbe
aam
sub
pop
pop
pop
and
or
std
pusha
xchg
inc
jae
fwait
add
clc
aaa
in
inc
outsl
cmp
dec
in
lret
mov
add
and
std
push
mov
fwait
gs
jge
mov
xchg
push
lret
lcall
jp
inc
cmp
push
mov
push
insb
push
lret
add
mov
ret
mov
xor
push
popa
jp
fisttps
addr16
lds
fwait
mov
aad
inc
sub
insl
inc
cwtl
or
push
jecxz
inc
daa
int3
hlt
add
push
sbb
mov
sub
faddl
insl
fmuls
jmp
out
inc
mov
push
sbb
jnp
imul
dec
movsl
sar
or
fsubrs
pusha
jnp
dec
jge
stos
fstl
aaa
mov
cmpsl
pop
movb
fld
sub
test
jge
or
xor
into
xchg
mov
cmc
jbe
xlat
or
out
pop
sbb
adc
pop
xchg
cmp
or
sti
inc
jb
out
push
cmp
outsb
je
xchg
jns
in
mov
jnp
sub
ja
cmpsb
mov
in
jg
je
adcl
cmp
das
inc
sahf
repz
inc
mov
nop
push
jno
iret
mov
sbb
lods
inc
mov
aad
and
fcoml
ja
add
mov
sub
pushf
andb
mov
mov
mov
sub
add
pusha
inc
inc
mov
mov
rcll
lods
inc
cld
test
adc
stos
clc
pop
stos
cmp
xor
cmpsl
shll
fidivrs
inc
jge
dec
push
fs
sub
pop
jbe
addr16
or
cs
bound
pop
pop
adc
insb
xor
mov
dec
subl
or
loope
cmp
pop
and
adc
lret
daa
mov
sub
sbb
rclb
jb
ret
popf
addr16
dec
and
lcall
lods
mov
add
pop
mov
mov
sub
push
inc
sub
and
or
add
xchg
ror
inc
dec
add
xchg
fstps
cmp
mov
dec
aad
jge
or
mov
xchg
xchg
popa
pmaxub
cld
imul
aas
pop
and
pop
mov
xchg
out
sbb
addr16
or
inc
push
and
fdiv
imul
shrb
fwait
loop
mov
js
push
hlt
negl
popa
loopne
cli
sub
jmp
mov
and
mov
cld
call
outsb
adc
pop
sbb
push
in
xchg
jnp
pusha
mov
fisubl
push
xchg
shrl
dec
in
inc
mov
ret
inc
xchg
cmp
jl
pop
bnd
lahf
andl
dec
std
fsubrs
add
lahf
sub
in
xorl
test
pop
out
dec
sub
into
dec
pushf
mov
dec
push
dec
push
cmp
and
add
std
mov
and
inc
adc
xchg
xor
jne
mov
cmp
cs
jmp
xor
addr16
jns
sub
ss
inc
daa
or
pusha
out
ret
mov
imul
ret
sub
push
mov
daa
iret
push
sbb
sarb
pop
inc
mov
xchg
or
jnp
xchg
pop
nop
mov
adc
clc
mov
cmp
mov
push
andb
lret
cltd
jae
cmpsl
imul
mov
jge
test
jmp
or
popf
cmc
pop
in
lret
xor
push
mov
xor
cwtl
into
fiaddl
and
lock
dec
test
aas
sub
and
rclb
cli
loopne
jnp
xor
test
loop
mov
sahf
sahf
fimull
mov
hlt
mov
decl
xchg
data16
pop
push
lods
scas
push
xlat
sbb
pop
pop
sahf
imul
arpl
stos
push
mov
or
div
pop
es
push
jae
mov
adc
sub
jnp
sahf
mov
mov
roll
maskmovq
mov
dec
fcoms
test
and
fsub
adc
dec
pop
lds
push
mov
imul
in
pop
xlat
test
add
ljmp
rcl
ret
xchg
or
mov
scas
jne
jae
sbb
test
mov
xor
xchg
in
jle
inc
xlat
es
jg
jno
fnstcw
hlt
rcr
xor
fmuls
loope
stc
movsl
jns
push
outsl
and
dec
ljmp
pop
jb
mov
call
lret
jns
call
sbb
adc
je
inc
or
ljmp
pop
xor
dec
cwtl
push
push
push
sub
shr
jne
rcl
js
in
hlt
pusha
adc
ljmp
pop
shrl
adc
pop
push
dec
add
mov
mov
xchg
imul
or
popf
xor
rcll
xor
test
in
xor
pop
dec
xor
jns
fidivs
repz
pop
fdivl
xchg
dec
cld
adc
jle
into
add
loop
push
xor
inc
bound
cltd
fs
imul
rorb
sub
je
test
popa
popl
inc
lods
xchg
inc
cmc
push
mov
cmp
cwtl
pop
fnsave
hlt
jmp
mov
pop
popa
fwait
mov
add
arpl
sbb
inc
aam
int3
xor
cmc
fdivrs
sbb
adc
enter
pushf
repnz
mov
js
pop
clc
xor
cmp
ret
ficompl
pop
in
cmc
in
lahf
mov
sti
mov
imul
jge
inc
pop
mov
stos
int3
jmp
inc
push
mov
sbb
loopne
mov
xor
pushl
repnz
push
stos
daa
push
addr16
addr16
popa
addr16
cmp
pusha
movsl
or
bound
andl
stc
and
je
adc
icebp
mull
pop
adc
jnp
negl
outsb
dec
cmp
jle
aad
int3
xor
xor
mov
mov
lock
jp
xchg
dec
cmpl
adc
in
dec
push
mov
orl
push
pop
testb
fcmovu
out
dec
sbb
and
inc
and
ljmp
lock
dec
shrl
or
test
mov
jge
and
push
xor
dec
insl
ja
sti
les
ret
int
mov
inc
out
mov
jo
lods
fstpl
sbb
stos
out
je
mov
adc
sub
inc
mov
test
in
repnz
mov
xchg
sti
xchg
push
stos
mov
popf
cs
mov
inc
sarl
mov
shll
mov
mov
cmc
mov
sub
lret
sub
xchg
mov
sub
dec
adc
loop
jp
sub
aas
mov
push
lods
and
clc
aad
pushf
hlt
aaa
xchg
scas
dec
push
enter
ss
mov
dec
push
mov
aad
sti
cmp
jge
push
push
or
outsb
jo
mov
popf
and
dec
lcall
jecxz
mov
repnz
adc
idivl
add
addr16
lret
adc
movsl
out
sbb
push
sbb
adc
shrb
sti
scas
cmc
mov
aam
cli
jbe
movsb
adc
dec
sub
daa
adc
pop
jle
mov
cmp
and
lret
mov
mov
pop
push
add
lds
mov
cmpsb
pop
loop
cmp
loopne
stos
out
fnstcw
out
loope
cs
aaa
icebp
dec
movsl
sbb
das
loop
jbe,pt
mov
mov
push
fistpl
test
sti
xor
lds
mov
push
lods
ss
lcall
jg
mov
add
mov
mov
cmc
test
jmp
sub
mov
mov
xor
dec
popf
arpl
pop
pop
push
jecxz
iret
imul
int3
fsubrs
out
stos
in
mov
daa
call
lret
or
aas
sahf
mov
pop
pop
outsl
test
push
pop
imull
mov
pop
fwait
add
subl
rolb
mov
lahf
bound
packssdw
cld
push
insb
mov
pop
outsb
xor
cmp
or
xchg
imul
js
xor
inc
nop
push
pusha
in
dec
scas
jne
in
inc
add
loopne
mov
out
bound
mov
lret
call
sarb
ljmp
int3
pushf
in
inc
jl
stos
das
xchg
movsl
rol
ja
inc
mov
inc
dec
shrl
fbstp
mov
or
jo
and
xchg
sti
pop
jo
sarl
addr16
pop
insl
pop
pop
nop
lock
cld
scas
aaa
push
nop
dec
mov
lret
jne
daa
clc
inc
cmpsb
ja
mov
lcall
inc
add
daa
add
fcoms
dec
test
aas
notl
cmp
jl
inc
ffree
sahf
mov
xlat
sar
lahf
lods
pop
jno
sub
mov
pop
cmp
push
test
xchg
mov
xchg
int
jle
and
stc
clc
push
fcomps
xchg
and
repnz
and
stos
clc
xchg
bndldx
mov
xchg
or
pop
push
imul
ja
mov
push
int3
sbbb
les
mov
jmp
popf
insl
test
add
jno
sbb
scas
into
sbb
cwtl
cmpl
or
fdivrl
jle
out
jg
dec
mov
mov
adcl
int3
lcall
les
and
aaa
sahf
call
push
imul
mov
daa
pop
mov
scas
pop
enter
sahf
mov
cmp
mov
mov
cltd
or
cli
jnp
xor
mov
adcl
jg
dec
jg
push
cmp
mov
dec
lcall
pop
sti
lock
aad
stos
jbe
in
mov
int
cltd
mov
jae
adc
test
or
dec
or
xor
lcall
daa
lods
jl
rolb
xchg
sub
hlt
mov
add
ret
adc
leave
imul
ja
iret
sub
lret
mov
or
push
imul
inc
push
int
nop
mov
cmc
pushf
push
push
iret
movsl
leave
add
and
jg
into
pop
push
push
in
xor
or
in
dec
pushf
push
cmc
lds
int
maskmovq
testl
xlat
in
into
imul
shll
lahf
pop
dec
lahf
std
insb
addr16
fadd
cli
fildll
xchg
xor
andl
push
das
gs
push
xor
stos
cld
lcall
scas
aas
sub
mov
lret
mov
sub
jo
add
loopne
pop
adc
ss
mov
mov
mov
stos
mov
mov
sub
cmp
mov
and
lods
aad
test
mov
cwtl
adc
push
stc
push
inc
dec
jle
xchg
push
pop
aad
push
jp
push
xor
repnz
mov
dec
imul
pop
ss
pop
and
mov
into
jg
lret
popf
jne
jbe
dec
fsqrt
adc
shll
xchg
lcall
jb
lods
xchg
popf
jge
je
jns
adc
iret
fcmovnbe
mov
sub
rcr
pop
test
sti
ret
jle
mov
shll
pop
push
outsb
lret
mov
dec
repnz
cli
and
cmc
push
mov
pusha
pusha
mov
setae
mov
out
sarb
outsl
jmp
cmp
or
shll
cs
xchg
add
idiv
sbb
arpl
xchg
pusha
rep
jns
cli
ficomps
push
stos
call
mov
sub
mov
mov
inc
push
int3
sti
push
mov
xchg
outsb
mov
mov
enter
stos
mov
adc
aad
lods
sti
inc
jnp
sbb
fisttpl
xor
cmp
dec
fistpll
dec
loopne
adc
shr
out
sub
movsl
popa
mov
xchg
pop
scas
sbb
test
insb
adcl
push
in
clc
cld
fstpt
xchg
cmpsl
and
sbb
filds
ss
inc
xchg
aad
test
pop
mov
cltd
cmp
aam
insb
lea
rorl
cmpsb
cmp
cmp
xchg
jecxz
sub
xchg
imul
fmul
sub
movsb
in
jae
xor
xor
arpl
dec
adc
mov
sarb
enter
add
xchg
iret
lds
loop
xchg
sub
into
push
addr16
pushf
sub
lock
xchg
pop
lcall
pusha
push
mov
sbb
mov
mov
ja
and
sbb
in
xchg
xor
rolb
push
js
fstps
jne
shlb
test
or
push
pop
push
mov
mov
xchg
lods
imul
adc
lea
cld
rorl
dec
mov
fmull
rorb
enter
enter
into
das
jp
cli
and
test
dec
adc
pusha
pop
cmc
xlat
je
enter
adc
dec
lds
mov
cmpl
sbb
or
fs
frstor
aam
iret
xchg
cmc
mov
outsb
lahf
and
push
mov
adc
aas
pop
adc
xor
mov
xchg
lret
cmpsb
dec
lret
test
pusha
mov
idivb
das
js
fsubl
fnop
cltd
dec
push
ret
fidivrl
lret
and
jne
test
inc
and
cwtl
dec
cltd
mov
loope
int
xchg
loop
pushf
mov
mov
repz
jae
mov
test
out
push
mov
jne
push
cmp
push
lcall
inc
fsubp
add
jns
adc
jmp
sbb
inc
ret
mov
mov
ret
fcmovne
insl
and
pop
sub
pushf
mov
test
jno
and
pusha
mov
mov
mov
sbb
arpl
out
inc
mov
pop
inc
push
jmp
loopne
push
mov
inc
jno
orb
dec
adc
inc
and
sub
mov
jbe
imul
add
jge
and
mov
lahf
lahf
jns
movsl
in
mov
shl
mov
lea
pop
pop
pop
dec
pop
xchg
mov
pop
hlt
jnp
add
mov
inc
das
or
pop
adc
pop
out
inc
push
jae
adcb
push
sbb
repnz
bound
mov
adc
ja
mov
lcall
push
iret
xor
pop
test
cld
adc
push
ficoml
daa
ret
lret
mov
in
fcomps
pusha
hlt
cmp
shl
xchg
into
jne
and
and
mov
and
daa
addr16
std
xor
xchg
mov
sub
fsubrs
in
and
shll
push
inc
int3
and
cli
jno
in
push
pop
push
push
dec
nopl
lods
test
dec
fstl
int3
push
movsl
out
mov
push
in
daa
movsl
rorl
ds
dec
sub
lock
outsl
shlb
xlat
mull
hlt
jp
dec
or
std
out
ds
leave
pop
fdivrs
xorl
ficompl
inc
mov
stos
scas
dec
xchg
test
add
or
sbb
jo
fsubr
enter
mov
int
test
push
subl
fsubrs
push
cli
sub
mov
cld
xchg
pop
fsubrl
mov
lods
outsl
xor
mov
cmp
or
mov
dec
sbb
pop
xchg
pushf
dec
aas
jnp
xchg
xchg
popf
mov
and
mov
mov
shll
adc
les
sbb
or
push
mov
data16
rcrb
stc
mov
sbb
push
push
andl
sub
repz
push
pop
xor
enter
push
shrb
and
jae
lds
mov
cmpsl
in
mov
dec
je
mov
or
stc
xor
xor
testb
loopne
mov
adc
scas
sub
loopne
leave
pavgw
movsl
xor
xor
stc
out
mov
stc
pop
jge
jge
dec
push
icebp
xchg
out
cmpsl
dec
and
mov
dec
outsb
rolb
mov
loope
push
addr16
pop
sbb
mov
pusha
and
out
aad
jns
rclb
mov
nop
push
bound
mov
pop
in
imul
adc
lea
cmp
mov
jge
or
cmp
sbb
mov
fildl
insb
in
lcall
out
fcmovbe
inc
fdiv
mov
ss
jl
xor
negl
push
mov
std
cmp
subb
stos
mov
pop
loope
push
mov
aaa
dec
cmp
jg
call
jb
mov
xchg
ds
stos
jo
rorl
inc
hlt
rcrb
and
pop
testb
dec
mov
push
mov
mov
mov
daa
inc
jnp
or
ds
mov
add
add
loop
aaa
movsl
lds
call
add
fnstsw
paddb
movsl
sbb
roll
jge
fstpl
addl
pop
imul
jle
test
and
pop
fsubs
inc
icebp
jecxz
jge
rcr
and
int3
xor
push
push
jmp
sbb
jge
lahf
insb
and
nop
aas
xor
es
add
jo
data16
pop
mov
inc
fbld
rcr
and
push
scas
lea
lcall
sbb
imul
mov
jb
adc
mov
pop
faddl
lea
aam
mov
adc
pop
shrb
lods
insl
ljmp
xchg
add
popf
pop
sub
jnp
lods
testl
xor
fistps
xor
push
in
push
pop
xor
popf
test
cwtl
sub
pop
mov
pop
sbb
inc
into
xlat
cmp
and
arpl
aas
and
fcomps
cmp
arpl
dec
push
sbb
adc
andl
in
shrl
sbb
cs
cwtl
std
jnp
loopne
adc
leave
out
sub
sti
mov
movsl
sbb
sub
inc
out
inc
sub
imul
repz
mov
sbb
nop
push
cmp
test
pop
dec
mov
pop
dec
jmp
and
stc
dec
push
inc
aad
ljmp
pop
aam
add
fsubs
test
loopne
pushf
mov
test
scas
mov
mov
jne
sbb
push
sbb
push
lret
push
cld
sbb
ss
inc
xchg
mov
ss
mov
mov
mov
test
test
pop
test
push
pop
mov
pop
out
notb
popf
fs
in
push
aad
dec
or
stos
scas
and
and
insl
test
jno
outsl
add
arpl
add
loope
xor
hlt
inc
jo
sbb
movsb
push
test
mov
mov
or
mov
lret
lds
pop
pop
movsl
xchg
cld
jo
or
dec
xor
sbb
sub
mov
je
aam
dec
faddl
and
call
xchg
subl
add
ret
fs
mov
pop
fwait
mov
shlb
aas
incb
cmp
push
push
mov
or
sahf
pop
out
cmp
test
insb
xlat
jbe
jge
push
std
in
push
movsl
icebp
jne
push
xor
inc
dec
or
mov
iret
jle
dec
fdivrl
arpl
fidivl
push
arpl
gs
in
int
scas
in
inc
pop
lods
jle
popa
outsl
sub
cmp
in
inc
jp
jp
jnp
jl
dec
lahf
scas
test
inc
iret
or
int3
mov
mov
xchg
or
xchg
std
jo
mov
nop
lods
mov
add
aam
loopne
mov
testb
cmpl
jb
aas
adc
pop
cmp
aam
or
jecxz
or
pop
jp
cmp
mov
cmp
jecxz
in
mov
pop
je
mov
rolb
push
add
mov
popfw
jb
or
outsb
lea
fcmovnbe
pop
add
sbb
sbb
outsb
in
xor
outsb
inc
mov
ret
imul
sub
cmc
cmp
sub
push
ds
pop
insl
xor
jl
cmpsl
xchg
or
icebp
and
rcl
adc
jp
lock
rcll
inc
dec
jns
call
xchg
sar
imul
movsl
mov
addr16
sbbl
imul
call
arpl
push
mov
in
fcoml
outsl
andb
add
mov
stc
je
add
xchg
cmp
cmc
out
mov
cmp
outsb
loop
adc
das
add
or
dec
js
cli
mov
movb
push
icebp
pop
jecxz
jns
pop
daa
push
in
fnsave
ret
push
xchg
xchg
mov
call
cmp
mov
inc
add
das
add
lahf
mov
lahf
jo
sbb
hlt
ret
fdivr
push
addr16
sbb
enter
jle
sbb
les
jae
or
or
enter
add
mov
popf
add
mov
jae
xlat
ja
dec
fdivs
add
or
inc
lods
repnz
sub
push
push
sub
and
cmp
or
mov
lods
mov
hlt
mov
xor
push
inc
xor
rclb
jp
sub
jecxz
mov
push
call
jo
jmp
js
push
sub
pop
mov
pop
or
jns
out
push
adc
insb
movsb
or
mov
test
rorl
out
filds
or
pop
imul
rcrl
pop
je
in
cmp
dec
cmc
movsb
sub
lods
mov
sti
xchg
and
cli
xchg
mov
mov
rolb
pop
jo
pop
sub
adc
lods
add
je
mov
rol
push
leave
add
sub
scas
mov
hlt
fsubp
pop
jae
pop
push
mov
ret
dec
outsl
nop
ret
mov
xchg
jg
rorl
mov
jl
cmpl
xor
cmp
mov
loope
dec
add
data16
xchg
shll
jg
loope
stc
pusha
cmc
push
fmull
add
je
jno
mov
adc
push
hlt
add
repnz
aad
push
or
dec
jle
push
adc
bound
lock
xchg
cmp
leave
fmull
loope
int
mov
sarl
daa
scas
lds
fstl
das
mov
shrl
int3
jns
mov
inc
jmp
pop
and
mov
call
mov
lret
rolb
mov
or
jg
testb
addr16
into
push
mov
xchg
mov
mov
outsb
test
fistpl
xchg
jge
cs
lock
jae
push
xorb
fdivp
out
cmc
jmp
test
daa
adc
fstpt
inc
inc
lds
shl
push
fistpll
cmp
scas
dec
push
add
and
mov
cwtl
orb
xor
sahf
aam
cmp
mov
bnd
inc
rcll
inc
mov
outsb
test
je
lock
xchg
add
add
jmp
jle
mov
lahf
push
mov
mov
mov
push
or
sub
test
fwait
arpl
repz
cmpsb
inc
fcoml
bound
xor
inc
pop
je
and
loope
push
jl
push
pop
jno
add
cltd
inc
lret
popf
in
mov
mov
das
jo
leave
and
fiaddl
xlat
or
jbe
imull
bts
outsb
cmp
sbb
adc
inc
scas
lahf
xchg
xor
cwtl
inc
dec
mov
mov
int
and
inc
mov
sbb
sub
add
outsl
lds
and
shll
in
fistpl
das
pop
imul
inc
jle
sub
and
dec
shlb
je
int3
and
je
pop
aas
mov
mov
loop
mov
mov
push
lret
sti
stos
dec
push
in
cwtl
or
cwtl
stc
int
cmp
jo
xchg
jae
daa
std
lret
pop
out
pusha
xchg
call
sbb
mov
mov
or
cmp
enter
xchg
pop
dec
push
jmp
dec
pop
jnp
inc
movsl
ficomps
shl
mov
call
sub
cmp
add
add
xor
mov
or
adc
loope
lret
jmp
addl
lret
xor
push
shl
fidivrl
test
push
cmp
in
xchg
sbb
or
inc
fldt
or
ds
or
xor
popf
mov
push
adc
add
push
int
push
jae
pusha
or
repz
jp
push
pop
fwait
sub
stos
jmp
jg
push
pop
push
cmpsl
popa
ja
mov
test
jle,pt
xchg
xor
scas
and
add
add
cwtl
sbb
mov
shll
out
push
popf
inc
insl
jb
ja
mov
push
mov
adcb
lret
pop
scas
adc
push
jne
mov
aas
aaa
mov
push
inc
and
repz
sbb
xchg
push
sub
xchg
ja
int
mov
sbb
sub
stos
xor
stc
loope
stos
push
dec
sarb
es
lret
add
push
jp
repz
lods
rol
sub
add
jmp
es
cmp
out
ret
jmp
gs
inc
aam
dec
jge
cmp
shll
lcall
shll
mov
je
xchg
push
sahf
fbld
and
adc
aas
rcll
iret
mov
je
push
fsubrl
sti
add
push
dec
mov
sti
sti
mov
sbb
adc
adc
add
or
jnp
xor
fwait
dec
adc
dec
and
insb
lret
inc
inc
xchg
popf
mov
dec
insl
iret
jo
hlt
outsl
jno
pop
sbbl
adc
adc
add
cwtl
jo
ljmp
sbb
clc
ss
out
xchg
fidivs
jne
fwait
outsl
rcll
pop
and
cs
bound
xchg
sti
movsb
mov
cmp
mov
jbe
pop
adc
test
idivl
cmp
cmp
lret
lcall
and
pop
int
or
outsl
in
mov
mov
out
push
mov
testl
pop
shrl
dec
pop
push
nop
xchg
push
adc
jnp
jno
mov
pop
xchg
inc
subl
sahf
inc
jl
sub
adc
adc
hlt
cwtl
push
cmp
xchg
sbb
sub
sbb
test
xor
aas
sub
pop
addr16
into
jl
jb
insl
sbb
rorb
or
ffreep
out
inc
movsb
sbb
data16
negb
mov
mov
push
jno
lds
cmp
ret
jne
stc
lock
or
imul
fnstenv
cmp
xchg
fwait
inc
adc
xchg
inc
out
push
int3
mov
dec
daa
jae
push
sbb
jns
xorb
ljmp
cmp
mov
inc
out
shll
pop
jb
push
std
mov
loop
movsl
xchg
pop
clc
flds
jl
aad
les
add
shlb
mov
cmpb
push
jbe
mov
daa
adc
iret
rcl
enter
and
repz
push
fnstcw
lret
and
xor
cmpsl
cmovns
sub
sbb
movsl
lahf
ja
cmp
mov
cmp
mov
enter
pop
jecxz
fs
jns
not
sub
push
int
loope
pop
push
dec
je,pn
mov
loop
xor
fcoms
sbb
test
sub
cmc
and
or
pop
mov
das
xchg
cmpsb
mov
push
sub
in
cmp
ret
fucomi
mov
or
and
neg
into
adc
arpl
loop
xchg
and
push
pop
lret
xor
sbb
rcrl
mov
mov
fdivrl
push
mov
cmp
test
inc
out
gs
push
push
xor
test
fs
mov
shrl
push
mov
enter
adc
sahf
or
cltd
cmp
fsubr
imul
xor
dec
jbe
mulb
push
or
loopne
iret
shrb
sub
xor
inc
adc
sbb
popf
aam
nop
dec
push
sub
xchg
lret
sub
xchg
mov
xor
mov
xor
out
icebp
mov
pop
aad
mov
mov
pop
and
sbb
bound
mov
sbb
daa
jmp
sahf
shl
add
cmc
lods
shll
lock
icebp
andl
adc
daa
movsl
aam
ss
lret
ret
xlat
cs
das
imul
mov
push
push
cmp
inc
scas
cmp
fs
xor
outsl
xchg
mov
subb
mov
mov
arpl
adc
xchg
mov
cmp
xchg
xor
in
jbe
fstpl
or
sahf
jbe
and
xor
mov
push
mov
mov
mov
repz
and
pop
mov
bound
and
sbb
pusha
adc
xor
lds
das
push
in
fcoml
xchg
add
es
shrl
sub
inc
cmc
ds
cmp
mov
je
adc
insl
fsubrl
mov
and
aaa
pop
ficompl
cmp
call
addl
dec
aaa
scas
repz
sbb
popa
into
mov
stc
sti
push
stos
orb
sub
xor
repnz
popf
dec
xchg
in
je
xchg
dec
push
aas
fcoml
icebp
mov
sarl
shr
mov
pop
daa
cwtl
iret
adc
mov
jg
cmp
inc
js
jb
cs
mov
psubusw
jno
and
cmp
xchg
dec
jp
repz
dec
mov
and
lods
cmpsb
xchg
xor
xchg
movsl
pop
sahf
mov
push
insl
cmp
dec
add
xchg
jp
add
and
or
sub
xor
fnstenv
xchg
jp
mov
das
jns
repz
data16
mov
test
fnsave
cmp
pop
sti
mov
add
sahf
sbb
pop
add
or
and
cmpsl
jle
cld
adc
int
mov
pop
nop
dec
iret
push
or
xor
inc
rol
push
mov
inc
add
pop
pop
add
pop
xor
xor
inc
mov
xchg
jle
sti
jne
mov
aaa
fwait
das
adc
data16
add
dec
xor
call
js
mov
push
sti
enter
ret
or
fcomps
jg
fadds
int3
and
mov
xchg
stc
cmp
xor
jl
xor
mov
cld
xchg
dec
sbb
xor
shl
mov
das
sbb
inc
jnp
mov
sbb
xchg
fs
inc
fdivs
adc
xor
adc
push
dec
fs
sahf
xchg
inc
and
pop
mov
jecxz
sub
neg
lea
aad
mov
mov
clc
or
js
adc
pushf
loope
mov
mov
sti
mov
mov
sarl
repnz
imull
and
push
or
movsb
aam
xor
insl
dec
sbb
inc
mov
ja
adc
stc
or
push
sub
and
int
xchg
jp
jge
stos
sbb
and
jne
xor
es
mov
cmp
push
pop
push
lods
mov
mov
xor
outsb
insl
fcompl
push
mov
aad
jns
scas
cmpsb
xchg
mov
dec
call
sbb
dec
sbb
roll
test
mov
xor
push
mov
lret
pop
rorb
das
and
imul
jb
outsl
inc
push
push
std
xor
mov
adc
pop
sbb
rcrb
sbb
fucomp
fwait
sbb
xorl
sub
dec
cmp
scas
add
movsb
sub
pop
jmp
mov
mov
lea
scas
ret
inc
sbb
test
das
lahf
jbe
jbe
xor
pop
jg
jae
push
repnz
outsl
xchg
add
stos
mov
adc
cmpsl
jne
jo
inc
out
sub
mov
pop
cmpsl
enter
rcll
and
in
cmpb
lock
out
or
cmp
aaa
call
xor
std
bswap
xchg
aad
sub
mov
fs
cmp
in
mov
jo
ja
sub
pop
loop
mov
add
xor
xor
xchg
ljmp
in
les
lods
lcall
pop
mov
mov
cmpsb
jle
imul
enter
fistpl
in
sub
daa
iret
fistpl
xchg
and
pop
sbb
into
push
js
inc
daa
gs
pop
or
dec
sbb
in
lods
push
xorl
pushf
and
push
adc
lahf
stc
ljmp
std
pop
fldt
jge
into
ret
pop
negl
cwtl
xor
js
addl
pushf
or
xchg
les
and
mov
xlat
adc
sbb
add
arpl
inc
cmc
iret
mov
and
push
or
push
push
sub
mov
jl
insb
js
sbbb
ljmp
and
mov
sub
cmp
mov
sub
lds
sbb
jg
dec
pop
mov
and
sub
imul
hlt
orl
fdiv
cwtl
xchg
jbe
sbb
jbe
add
cli
adc
pop
mov
leave
outsl
push
sub
loope
and
les
sub
or
adc
das
mov
sbb
in
icebp
sbb
sbbl
inc
xchg
fidivs
lea
or
pop
mov
leave
push
sub
int
outsl
or
es
mov
mov
arpl
add
ljmp
mov
outsl
sti
mov
push
dec
xchg
push
cltd
jmp
nop
test
push
scas
les
data16
rorl
push
xorb
mov
sbb
dec
jl
mov
xor
cmc
pop
mov
sub
xchg
mov
dec
pop
or
dec
push
sbb
jae
push
popf
in
test
jb
fnstcw
xchg
and
push
add
push
mov
inc
inc
ret
shll
ret
daa
xchg
mov
mov
adc
and
cmp
cmp
dec
cmp
xchg
xor
ja
lar
sarl
sub
inc
mov
xchg
cmc
mov
es
cltd
fisttpll
sbb
and
mov
mov
pop
rcrb
mov
mov
pop
fcompl
add
dec
das
jl
jle
xor
add
incb
sub
movsb
pop
xlat
fucomp
push
scas
push
mov
sbb
mov
and
sbb
sub
maskmovq
mull
lcall
mov
popf
filds
outsl
hlt
jb
mov
cmp
jp
pop
xchg
int
lods
xchg
ret
dec
daa
cltd
jns
ljmp
shll
or
sub
dec
adc
mov
outsb
aaa
mov
rclb
xchg
fists
inc
test
jg
mov
inc
shll
je
or
dec
loope
test
cmp
or
movsb
repz
sbb
sbb
in
subl
push
xor
inc
sbb
imul
into
jle
pushf
js
int
jmp
sbb
insl
dec
sub
add
js
xchg
lods
loope
clc
sbb
ret
mov
scas
or
pop
fistps
jecxz
push
faddl
and
lock
pop
adc
aam
out
sbb
arpl
mov
xchg
mov
shrl
and
sub
mov
leave
les
lcall
scas
pop
loope
int
arpl
adc
pop
push
insl
sub
mov
push
fcomps
add
scas
cltd
mov
pushf
loopne
dec
or
in
jae
cltd
iret
and
test
test
and
movsl
adc
sbb
les
pop
mov
das
cmp
data16
test
push
push
pop
js
ljmp
outsb
xor
sarb
cld
jl
mov
frstor
cmp
mov
nop
out
inc
ficoms
add
out
push
out
xor
nop
mov
insl
mov
mov
stos
dec
lcall
inc
jno
daa
cmp
arpl
aad
mov
sbb
jno
sub
push
jle
xor
mov
inc
xchg
divl
and
mov
out
sbb
mov
and
loope
dec
ret
or
dec
push
shrl
mov
add
sub
mov
add
cltd
mov
in
xchg
movsl
jmp
movsl
fst
mov
fimull
loope
dec
stos
inc
push
es
dec
shlb
sahf
pusha
icebp
jns
scas
mov
mov
call
dec
nop
inc
scas
dec
mull
lods
pusha
leave
or
ret
rcr
dec
lret
lahf
push
scas
adc
cwtl
sub
xor
fcoml
std
sti
or
jae
xlat
int3
add
fldl2t
movb
push
pop
dec
mov
jno
call
jp
sarl
stos
jg
or
nop
push
cli
bound
mov
ljmp
xor
mov
outsb
cwtl
mov
or
and
movsb
aad
lahf
rorb
movsb
mov
xor
xchg
mov
aaa
iret
mov
xchg
push
cs
push
loope
sbb
cmp
xor
add
shlb
insb
pop
das
jecxz
mov
aad
lcall
pop
data16
push
cmp
ror
aaa
stc
enter
ret
shll
mov
adc
int3
pop
imul
orl
xlat
cmp
inc
fmulp
jecxz
scas
add
or
jmp
mov
pop
cld
fnstcw
jnp
mov
or
fsubrp
push
adc
pushf
addr16
add
daa
pop
pop
ds
push
jb
xlat
in
mov
and
or
lea
mov
push
call
icebp
push
adc
imul
sbb
xchg
addl
fstpt
ss
lret
add
xchg
int
fs
shr
push
mov
and
test
pop
in
lcall
mov
stos
into
loopne
push
pop
aas
mov
and
or
add
add
je
push
aad
or
jno
xor
jns
mov
test
in
mov
jne
or
fbstp
dec
test
lret
jg
dec
and
lock
inc
lock
int
or
pusha
stc
cmpb
stos
xchg
inc
jg
cmc
and
jmp
idivb
fisubrs
pop
xor
ficoml
jns
and
sub
sub
jmp
dec
arpl
out
cmp
aam
inc
aam
xchg
retw
stos
test
mov
clc
push
adc
roll
add
xor
push
add
jbe
lahf
into
xchg
xchg
dec
push
jns
loop
imul
jne
fbld
daa
ss
leave
mov
or
mov
fdivr
lods
sub
scas
mov
xchg
into
ss
stc
sub
push
fs
repnz
js
mov
jecxz
sti
pop
mov
in
sti
lahf
lock
cs
push
jae
pop
dec
cmp
movsl
mov
fsubs
or
inc
in
addl
ja
pop
dec
fistps
push
jl
sbb
cwtl
loopne
out
cmpb
and
data16
pop
hlt
ja
icebp
jmp
cli
in
jbe
mov
shl
inc
loope
fstps
jl
mov
mov
scas
fistpl
jl
jnp
push
push
mov
inc
mov
push
leave
dec
rorl
inc
orb
out
xchg
push
mov
push
sub
sub
ljmp
ret
push
adc
push
xor
sti
lret
iret
cmp
fisubl
mov
mov
add
ja
cmpsl
and
xchg
or
cmp
mov
in
or
sbb
in
xchg
icebp
sbb
dec
scas
jl
jns
lahf
xor
int
or
scas
mov
lds
or
pop
and
les
cltd
mov
js
jge
mov
mov
pushf
out
or
lret
rcrb
mov
cmc
imul
fsubr
ds
loop
add
mov
add
push
xchg
mov
lods
xchg
arpl
fs
sahf
ja
lret
mov
dec
enter
push
scas
test
lcall
hlt
jl
out
flds
cmp
xchg
sbb
mov
cmp
pop
adc
xchg
and
xor
lds
pusha
in
fs
fiaddl
cli
dec
inc
movl
xchg
add
mov
cmp
or
push
jne
jb
push
sub
mov
xor
push
push
js
sub
adc
push
iret
sar
inc
aas
aam
imul
mov
inc
jmp
cli
pop
adc
mov
mov
adc
popf
or
ljmp
push
push
pop
cs
shl
mov
ljmp
and
fdivr
ret
movsl
in
mov
mov
sub
jecxz
lds
inc
data16
sub
out
pop
loope
pop
jle
lods
sbb
push
imul
pop
jp
adcl
incb
int
mov
mov
cmp
popa
cmp
lock
dec
adc
rcrb
adc
rcrl
outsb
jl
inc
pop
fistpl
and
xor
mov
lock
into
mov
xchg
testb
pop
mov
gs
xlat
add
cs
cmpb
cbtw
lret
les
imulw
ret
into
nop
dec
icebp
adc
xor
mov
push
jne
fistpl
lods
mov
loope
in
popf
pop
jnp
xchg
rorb
in
adc
adc
xchg
lahf
dec
arpl
add
jb
cld
repz
xor
ljmp
ret
jl
test
mov
test
adc
mov
xchg
inc
insb
jg
xchg
fs
mov
fdivp
mov
aas
inc
int3
loope
out
sahf
cmpsb
jns
pop
sub
in
jbe
test
leave
into
push
lahf
add
sbb
or
ss
scas
sbb
clc
popf
or
xrelease
adc
mov
cld
inc
arpl
jecxz
jmp
lods
repnz
adc
sbb
xlat
test
stos
inc
aas
mov
loop
adc
push
stos
loopne
les
cmp
mov
lret
lahf
repnz
push
ficomps
adc
add
mov
stc
adc
jg
ret
lahf
add
mov
mov
in
xchg
sbb
push
add
loopne
xor
jge
fwait
je
fcmovne
cmpsl
mov
jge
xchg
imul
jo
sub
or
imul
sbb
out
jl
jo
pop
sbb
divl
sub
insb
cld
jae
sbb
je
push
add
in
xchg
addr16
mov
cmpl
aaa
push
jo
outsb
data16
in
popf
addr16
fldcw
mov
pop
sahf
rep
sub
push
ds
push
jle
into
cld
js
aaa
cmp
or
enter
cmp
adc
xor
adc
xorb
test
sub
stc
pop
sub
lock
ja
rcl
in
subps
sbbl
mov
aad
out
mov
ljmp
sub
jbe
rcl
sbb
in
jne
fstpt
pop
pop
mov
sti
clc
push
loop
rcll
xchg
lock
les
mov
in
xchg
cmpsb
popa
push
xchg
sub
dec
xchg
or
ficoml
roll
or
cmp
movsb
test
pop
das
xlat
test
push
mov
lea
or
sub
inc
fnstsw
cmc
inc
notb
pop
sbb
inc
mov
sbb
pop
xor
mov
xorl
sarb
xchg
daa
cmp
mov
dec
pop
in
add
dec
xchg
fisubrl
iret
push
dec
jo
loope
push
push
divl
incl
gs
lret
push
icebp
adc
cmp
cld
push
push
andl
adc
stc
jp
pop
push
dec
test
sub
sti
icebp
mov
adc
stc
idiv
in
xor
nop
inc
xchg
cmc
inc
add
and
loopne
sbb
out
jbe
cmp
enter
jo
push
testl
das
mov
adc
sbb
cwtl
jg
fdivl
popf
pusha
sub
or
jnp
stos
sbb
int3
add
int3
fidivrs
loop
gs
lds
push
lea
fnsave
mov
sub
mov
cwtl
fcmovne
pop
fdivs
push
sub
cwtl
shll
jae
stos
mov
xor
push
jmp
in
mov
iret
pop
popf
mov
push
push
xchg
pop
roll
outsl
scas
mov
cmpsb
loop
clc
insl
popf
repnz
mov
push
add
filds
push
inc
pushf
out
mov
iret
ret
lahf
or
test
and
add
pop
fwait
std
push
arpl
mov
xchg
push
dec
dec
inc
dec
xchg
mov
fistpl
jne
daa
popa
in
gs
jmp
aaa
push
stc
insb
inc
enter
and
inc
mov
adcb
imul
stos
push
add
std
pop
test
sti
cmp
andb
nop
xchg
add
pop
jmp
outsl
jbe
sbb
scas
pusha
cs
sub
dec
mov
xlat
pop
je
pusha
cmpsb
arpl
bound
lcall
ljmp
mov
adc
popf
cmp
mov
adc
jmp
ficoms
shrb
adc
sarb
sub
nop
int3
test
add
filds
adc
jp
lret
xchg
cmp
fsubl
push
stos
out
pop
mov
push
fsub
dec
leave
dec
fstpl
xchg
xchg
cmp
or
dec
push
movl
aad
jo
movsl
pop
and
in
iret
aas
sbb
insl
pop
or
or
test
xchg
lret
xchg
dec
addr16
adc
mov
jmp
leave
dec
in
or
fcmovnbe
xor
and
sub
jne
pusha
shrl
pop
in
rcrl
mov
dec
mov
imul
roll
and
push
or
mov
int3
test
dec
adc
add
pop
icebp
dec
xchg
pop
in
sti
push
aaa
jle
andl
mov
mov
je
push
pusha
jbe
jle
jecxz
lock
xor
pushf
and
xchg
in
adc
inc
xchg
popa
cmc
dec
push
dec
dec
xor
mov
and
dec
xchg
bound
xchg
dec
lgs
lods
mov
cwtl
addr16
mov
mov
pop
xor
in
add
xor
dec
stos
fstpl
movsl
in
push
stc
outsb
dec
jge
jne,pt
pop
adc
adc
test
fiaddl
shlb
iret
add
loop
mov
pop
cli
jb
test
popa
pop
push
inc
bound
adc
ficoms
cmp
insl
imul
dec
adc
cmp
inc
jl
jnp
fdivl
and
dec
shll
inc
or
inc
add
jl
add
insb
xchg
pop
addb
sbb
fdivr
or
and
mov
insl
cmc
xor
add
mov
out
notb
aas
movsl
clc
mov
push
ror
imul
inc
mov
outsl
loop
xor
scas
sbb
in
lea
or
mov
adc
mov
imul
leave
add
inc
daa
sti
int3
pop
rorb
cmp
call
sub
stos
ja
cmp
repnz
fstpl
pop
mov
gs
fcmovnb
jle
and
scas
roll
sarl
outsb
ljmp
cmp
sub
cmp
outsl
xchg
lcall
repz
pop
ljmp
inc
pop
clc
sub
aam
das
jle
mov
or
lock
loopne
dec
fnsave
pop
les
or
or
add
sbb
mov
dec
scas
cmpsb
cmp
dec
insl
aam
addb
xor
inc
lds
push
ret
pop
bound
push
scas
and
ret
adc
jle
not
cwtl
cmp
fstpt
pop
cmpsl
push
test
repnz
scas
pop
inc
or
daa
xchg
mov
fs
add
add
add
iret
ret
rdtsc
mov
push
xor
or
rorl
pop
xchg
je
inc
mov
inc
das
mov
int3
and
adc
or
xchg
xchg
cld
fmull
clc
mov
inc
insb
jl
xor
lret
lods
gs
rolb
sarb
inc
jno
mov
inc
cwtl
imul
shlb
cmp
in
into
pop
lcall
inc
sbb
push
push
aas
scas
stos
ss
pop
ss
ret
dec
push
and
test
jle
aas
stos
div
mov
pop
outsb
lcall
push
push
pop
mov
fdivr
dec
ja
mov
xlat
enter
iret
in
ss
mov
mov
sbb
add
mov
lret
xor
xchg
sbb
xor
repnz
sbb
cmp
test
popa
mov
push
jae
arpl
xchg
ja
sti
arpl
sti
xchg
push
add
out
sqrtps
add
push
in
jns
adc
push
cltd
push
xchg
int
dec
push
std
lods
inc
in
and
roll
mov
subl
xchg
push
jno
pop
sarl
and
sub
jb
jns
andb
cmpsl
sbb
xchg
ds
push
test
jb
popf
stos
push
add
cld
or
scas
mov
sub
mov
cmc
sarl
mov
adc
loopne
xor
scas
out
xor
jp
xorb
xchg
mov
nop
insl
and
push
xchg
loope
or
mov
jecxz
pop
xor
fisubrs
jae
stc
addr16
sub
jbe
in
jns
add
out
jmp
sbb
gs
push
nop
lcall
test
cld
bound
repnz
movsl
add
xchg
xor
lea
ja
call
gs
shr
arpl
dec
popl
ret
and
xlat
mov
xchg
in
cs
lock
outsl
shrb
shlb
mov
sbb
stc
int3
ja
cmp
mov
cmp
jno
aaa
xchg
out
dec
sbb
popf
hlt
cmp
pop
sti
clc
xchg
cmc
add
insl
xor
pop
pop
jae
repz
sarl
jl
mov
arpl
out
pusha
iret
pop
daa
or
out
insb
and
test
dec
sbb
cmp
dec
fdivr
sub
imul
fnstenv
into
stc
cmp
in
push
mov
clc
or
leave
push
repz
sub
push
add
dec
sbb
in
call
aaa
sti
pop
ja
inc
adc
scas
mov
cmp
jecxz
add
pop
jo
fsubl
sub
jmp
and
fstpt
cld
xchg
roll
pop
sub
cwtl
mov
mov
clc
push
push
lret
inc
int
pushf
push
add
xchg
sub
cmp
sub
cmp
mov
cmp
cmp
xor
add
pushf
sub
test
sti
and
dec
arpl
mov
test
in
adc
push
push
cmp
xchg
test
or
outsl
cmp
cmp
dec
dec
add
jmp
lds
daa
push
shll
sub
push
aad
jnp
xchg
push
inc
add
loope
test
fsubl
faddl
and
inc
stc
loopne
jb
mov
inc
mov
js
ret
pop
jp
xor
add
dec
out
int
fsub
mov
add
dec
loope
pop
xor
xchg
xchg
hlt
andl
sub
ljmp
scas
jnp
sarb
arpl
mov
cmp
xchg
mov
aas
jae
mov
push
rorb
sahf
adc
rorl
sub
dec
xchg
das
push
push
subl
dec
mov
rorb
mov
int3
inc
lods
aam
push
xchg
lods
das
adc
dec
out
shrb
in
fdiv
push
mov
arpl
inc
mov
mov
jno
loopne
or
imul
in
into
ljmp
dec
das
stos
iret
push
fisttpl
xor
dec
insl
cmp
pop
xor
add
fsubl
cs
push
mov
cli
xor
scas
das
jmp
cltd
subb
sub
in
loopne
test
push
cmc
pushf
jne
add
leave
or
mov
jb
out
jge
mov
daa
mov
inc
cli
add
push
pop
ja
jl
lahf
mov
leave
icebp
out
ds
add
es
cmp
ficoml
divl
loopne
lret
xor
jnp
pop
loopne
pop
int
pop
rcrb
cltd
lods
push
cli
out
aam
hlt
xor
cmp
addr16
and
stos
cli
sub
hlt
aam
out
mov
ret
jo
sub
jae
mov
push
sbb
lret
mov
xchg
jl
movb
std
push
test
pushf
cmpsl
leave
sti
pop
int
cmp
mov
fimull
push
jecxz
cli
out
or
mov
cmc
in
sbb
or
mov
xchg
mov
push
push
push
xor
xor
testl
or
test
pop
es
jg
adc
mov
push
fnstenv
pop
dec
dec
mov
or
mov
push
dec
outsb
adc
push
mov
cmp
cmpsl
lret
mov
les
dec
mov
mov
sub
add
push
vmovddup
mov
rol
push
out
xchg
and
jl
cli
xchg
dec
mov
les
and
cld
cmpsl
test
in
xchg
adc
into
push
pop
xlat
dec
mov
inc
fwait
mov
ret
into
jge
psubd
stc
adcl
add
shrb
add
hlt
xchg
loope
fstpt
lods
xchg
jns
push
pushf
test
push
or
push
mov
mov
cmc
inc
pop
hlt
fwait
mov
out
inc
mov
stos
pmaddwd
movsb
mov
fcoml
jle
mov
cmpsl
mov
pop
cli
stc
aas
mov
subl
sub
es
mov
enter
xchg
mov
lcall
adc
push
int
push
xchg
pop
adc
push
ss
rorl
or
add
stos
cwtl
and
add
scas
ja
push
xor
data16
inc
iret
add
es
mov
inc
fwait
pop
dec
cmp
inc
sub
rclb
cs
int3
adc
clc
adc
loop
icebp
or
push
bound
pop
pop
push
lcall
sbb
jo
data16
push
mulps
mov
or
repnz
lahf
pop
add
into
mov
inc
sarl
sbbb
dec
fcompl
sub
jp
adc
mov
ficompl
in
mov
repnz
sub
js
outsb
cwtl
stos
out
into
mov
ret
les
add
pop
lods
push
sub
or
pop
and
sub
xor
stc
loopne
std
fisttpl
outsb
pop
mov
xor
add
cmc
negl
ret
ror
cmp
xor
cmp
or
mov
xchg
or
or
cmp
movsb
inc
adc
and
cmpsl
repnz
in
pop
das
int3
data16
and
adc
xlat
jecxz
stos
int3
out
and
mov
ljmp
inc
mov
sbb
adc
out
das
jge
fstpt
movsb
mov
cmpsb
cmpsl
inc
ja
int3
cmp
shlb
cli
out
xchg
jl
mov
mov
lret
cmc
pop
push
mov
jae
les
fmul
test
call
aam
pop
mov
adc
fstpt
cs
add
add
dec
fucom
xchg
mov
cmp
pop
sbb
fs
push
inc
andl
mov
xchg
leave
sbb
lret
aaa
cmp
in
std
movsb
xor
and
outsb
jle
or
mov
inc
pop
imul
inc
js
incb
ljmp
test
push
mov
adc
inc
cs
cmp
pop
fisttps
fsubrp
adc
sbb
std
psubusw
test
sbbb
jg
arpl
xchg
sub
sub
xchg
or
das
std
mov
stc
inc
in
inc
cmp
mov
or
in
sbb
jle
repnz
cltd
cmp
sti
js
daa
and
stos
rcr
outsb
movsl
test
lods
mov
lret
les
idivl
gs
ret
xchg
or
pop
sub
mov
pop
pop
leave
ljmp
dec
in
insl
gs
xor
pop
dec
mov
mov
shll
add
nop
mov
rorl
jb
or
jno
je
xchg
je
jmp
and
int3
jb
push
dec
icebp
pop
jmp
adc
jp
sbb
inc
fbld
cltd
jmp
cmpsb
pop
movsb
xchg
out
outsl
pop
ret
jno
cmpsl
dec
adc
jnp
inc
push
ficomps
repnz
and
mov
scas
adc
cmp
push
jnp
rorl
loope
daa
sub
or
mov
sub
dec
xor
popf
xchg
sbb
mov
add
and
imull
stc
cmpsl
icebp
vmovntdq
add
pop
out
or
stos
movsb
xor
mov
insl
loope
add
int
and
sti
push
jl
int
jl
sbb
pop
mov
xor
sbb
sbb
jbe
fldenv
sub
iret
mov
lds
cwtl
stos
push
test
lods
imul
addr16
pop
and
pop
ret
arpl
and
xchg
pushf
inc
shll
std
dec
sbb
mov
sbb
push
and
xchg
sub
in
ljmp
test
push
xchg
xor
call
clc
fiaddl
sub
mov
dec
adc
and
rcrb
scas
mov
cmpl
cmp
loopne
cmp
adc
scas
in
imul
fcomps
jb
sbb
jle
orb
or
pop
jecxz
push
nop
pop
xchg
ret
ret
lcall
adc
es
or
and
pushf
mov
test
insb
inc
popf
pop
fyl2x
fimull
dec
push
gs
or
insl
das
cmp
mov
or
cmc
xchg
fcompl
mov
jmp
and
out
push
repz
je
dec
ljmp
ds
mov
lods
sbb
push
pop
test
sub
dec
sahf
add
cmp
cmpsl
push
add
outsl
pop
insb
popa
and
xchg
cltd
shlb
jp
stos
lret
cmpsb
mov
pop
setl
push
mov
fidivrl
dec
inc
dec
insb
repnz
hlt
sbb
cwtl
cltd
mov
pop
push
dec
aaa
ret
push
add
push
js
push
mov
lret
push
lock
mov
repz
out
add
out
pop
popf
add
mov
stos
leave
push
mov
fidivrl
outsl
sub
fstps
xlat
or
mov
bound
stos
aad
cmpsb
je
lret
adc
in
jmp
cwtl
rcl
cmpsb
in
pop
sbb
int
cltd
add
sbb
arpl
adc
pop
push
xor
jg
mov
sbb
aas
xor
mov
mov
movsl
pop
xchg
icebp
push
in
roll
and
push
out
arpl
adc
mov
aas
inc
iret
mov
add
stos
shr
neg
mov
adc
xorl
imul
add
cs
mulb
js
cmpsl
inc
je
or
jp
pop
and
pop
lods
fnstsw
inc
pop
lock
ret
cld
adc
adcb
dec
iret
xor
imulb
inc
or
leave
addr16
stos
cmc
hlt
xchg
cmp
or
cmc
shll
rcr
fsubs
add
push
jo
int3
leave
mov
push
pusha
jnp
movl
test
sub
cld
lcall
aam
aad
aam
dec
and
js
xor
mov
aaa
dec
xchg
test
xor
popa
xor
adc
adc
cmp
mov
int
xlat
cs
call
xor
dec
decl
mov
jp
es
repnz
dec
push
outsb
pop
jl
mov
dec
jae
les
fnstsw
or
xor
jbe
or
fistl
ss
xchg
sahf
loop
mov
push
mov
inc
xchg
fcomip
loopne
ds
mov
aas
jo
pop
lret
cltd
push
sbb
mov
push
mov
fwait
adc
xchg
loop
imul
out
or
mov
push
xadd
push
ret
incb
adc
cld
aam
inc
imul
inc
dec
loop
mov
push
test
push
ret
or
sub
in
adc
fwait
sub
mov
cmp
sub
mov
pop
out
add
sub
mov
js
fcom
lret
loope
out
mov
push
and
mov
scas
jno
add
mov
xor
imul
xchg
insb
sub
test
xchg
out
fistpll
push
sub
cmp
int
testl
push
lret
jb
add
cld
in
add
and
xorb
mov
or
dec
cltd
enter
aas
cld
mov
jbe
dec
mov
shlb
add
das
les
sbbb
sbb
push
add
mov
dec
pop
dec
stos
push
sub
push
cmp
sbb
adc
dec
cmc
dec
pop
fstps
xchg
mov
ss
jo
dec
cmpsb
ss
inc
pop
aaa
ljmp
jnp
aad
adc
inc
out
out
push
je
sub
dec
and
sbb
pop
sbb
and
cwtl
jne
add
dec
sub
fucomp
sub
lret
sub
mov
pop
cmp
out
nop
inc
xchg
mov
les
lods
lock
mov
imul
and
pop
ret
cmp
mov
dec
flds
mov
lods
out
pop
stos
add
push
mov
adc
into
rorl
rol
cld
ljmp
cmp
fwait
xchg
cmp
mov
leave
pop
dec
out
int3
insb
mov
push
in
mov
outsl
push
rcll
mov
cmp
mov
adc
or
sub
dec
fstl
enter
xchg
push
pop
lret
jae
and
cmp
stos
in
cmp
dec
sbb
mov
out
sti
ret
insl
adc
xor
cmpsb
hlt
cmp
pop
test
jge
in
sarb
cmp
bound
mov
push
ss
int3
popa
or
or
xchg
scas
inc
pusha
insl
jp
and
divb
mov
adc
into
incl
shrl
dec
push
adc
xchg
mov
xchg
xchg
push
out
push
int3
arpl
adc
dec
push
xor
rcl
mov
je
and
repnz
mov
cwtl
dec
sbb
mov
scas
jmp
jp
pop
push
ret
xor
inc
inc
incl
fsubl
hlt
bound
jb
into
cmp
mov
inc
xchg
fmull
pop
pusha
pop
fcoms
push
out
adc
jl
nop
xchg
adc
sbbb
ds
dec
xchg
cmp
outsb
lods
xor
xor
push
fucomp
movsl
cmc
and
mov
mov
mov
test
add
mov
data16
sbb
mov
shr
jle
imul
out
jp
fsubs
pop
orl
and
sub
add
test
push
pop
scas
cmp
ds
mov
or
or
sub
mov
xor
mov
nop
out
xchg
mov
pop
jb
ljmp
lret
adc
lret
gs
mov
and
xchg
mov
mov
lret
cs
dec
addr16
xchg
lahf
sarl
lahf
into
lock
xchg
mov
pop
cmp
dec
int
fidivrs
cmp
sub
jp
xlat
mov
push
cltd
scas
sub
xor
pop
lahf
lea
imull
lcall
lret
fbld
pmullw
jo
xor
imul
sub
sahf
xor
fsubr
jle
out
incb
ljmp
test
dec
mov
push
mov
push
js
daa
dec
ret
and
les
adc
pop
jge
pop
add
mov
jle
jo
add
popf
mov
sarl
and
outsl
mov
cmp
cmp
dec
sarb
fnstcw
mov
out
adc
pop
inc
and
pop
pop
dec
jae
mov
cmp
push
in
add
roll
jl
in
mov
xchg
in
imul
mov
std
dec
clc
inc
push
outsb
push
sarl
popa
lods
dec
adc
push
jo
cli
jg
cmp
cmp
imull
es
jno
lea
jo
pusha
int
xor
xchg
insb
add
mov
nop
push
sbb
btr
cltd
inc
mov
aas
and
out
fld1
pop
mov
mov
pop
pop
mov
nop
test
fst
pusha
push
int3
add
and
out
int
fcmovbe
inc
fisttpl
filds
xlat
mov
imul
test
mov
movsb
adc
xlat
cmp
mov
mov
xor
jno
std
negb
int
pop
inc
fs
fwait
cmp
add
addb
sbb
mov
add
adc
inc
bound
push
shll
fwait
rol
lret
cmp
lds
dec
flds
imul
daa
mov
ss
lods
mov
add
mov
test
mov
sub
jp
jge
xchg
mov
cmpsb
xchg
xchg
insl
mov
xchg
pop
rcrb
nop
lods
pop
lahf
jmp
push
in
sti
test
mov
sbb
fstp
xor
xchg
iret
inc
mov
xchg
pop
pop
inc
mov
xlat
add
mov
mov
ss
xor
dec
mov
int3
in
mulb
add
call
mov
mov
test
jb
add
sbb
psadbw
xchg
repz
sbb
xchg
or
adc
push
movsl
sub
mov
jnp
out
sbb
inc
mull
mov
stc
jns
movsb
pop
les
outsl
lock
popa
pop
sbb
push
push
rclb
xor
cmpsl
dec
xlat
cli
lret
mov
sub
add
inc
repz
xchg
std
call
repz
dec
sarl
fs
sarb
lret
mov
push
lahf
push
test
inc
hlt
sbb
pop
jge
lcall
mov
jne
mov
pusha
xor
and
lret
xchg
leave
data16
cs
push
pop
lock
fs
xor
pop
dec
sub
xor
push
faddp
lcall
in
xchg
sbb
das
xchg
dec
divl
repz
push
xlat
aam
jnp
pmaddwd
xchg
in
xchg
inc
mov
inc
pop
xchg
xorb
jae
and
imul
inc
nop
popa
std
fiaddl
movsb
pop
sub
ss
dec
mov
fs
adc
popa
mov
shlb
pop
mov
xchg
jp
mov
sub
or
pop
push
cli
inc
movsl
int
out
or
out
or
jg
xchg
and
addb
mov
mov
inc
mov
add
inc
scas
leave
pusha
mov
or
lods
mov
dec
jl
or
leave
std
xor
dec
inc
roll
clc
push
xchg
jno
add
das
sbb
enter
add
add
lret
fidivrl
push
pop
mov
clc
adc
lahf
jmp
pop
bound
arpl
popf
fs
push
lcall
fcmove
lahf
mov
icebp
mov
bound
inc
negl
mov
jnp
mov
jl
hlt
lcall
int3
mov
popl
add
lods
ret
rolb
sarb
stc
out
add
imul
or
subb
or
push
cmpb
mov
sbb
mov
mov
sub
arpl
rcr
aam
lea
sub
sbb
mov
test
scas
and
das
fstpl
clc
arpl
cmp
cmc
ror
subb
testb
pop
int
lahf
pushl
sub
in
packssdw
inc
push
push
mov
cs
roll
dec
fstpt
dec
or
insb
jo
in
dec
movsl
xor
insb
adc
dec
and
xchg
sub
xchg
adc
mov
imul
cmpsl
adc
ret
fisttps
inc
mov
fildll
pop
pop
iret
rcrl
push
outsl
int3
mov
add
xor
cmpsl
std
inc
and
mov
jb
in
cmc
jmp
shr
or
jmp
xlat
xchg
jl
shlb
sub
mov
jb
jo
inc
shll
lods
jae
push
and
repnz
out
mov
push
mov
je
push
sub
mov
sub
aam
mov
test
jb
aad
lods
cld
je
lds
cmc
stos
lret
lds
jmp
inc
cmp
insl
out
pop
sub
sarb
cld
stos
lret
fucomp
and
pop
fildll
out
lea
xor
ds
jno
popf
cmc
cli
stos
add
incl
mov
lret
inc
fistl
push
sub
add
sbb
or
jae
jmp
xor
and
add
add
xchg
jae
scas
je
mov
into
and
loopne
sub
jns
xchg
sub
pop
sbb
loope
insl
push
push
add
sub
or
ss
push
pop
jmp
scas
jmp
stos
inc
jge
cmc
jns
cld
dec
push
mov
aas
xchg
and
popa
mov
or
sub
fdivs
add
in
xor
les
mov
add
imul
cld
push
mov
jge
das
jno
xor
movsb
mov
cmpsl
pop
jno
bound
sbb
push
add
xchg
aaa
inc
fstps
jg
fadds
pop
aas
les
subb
rcl
jb
pop
ret
movsl
gs
das
xchg
mov
pop
movups
xchg
outsl
cmp
add
out
jmp
jge
cs
fnsave
dec
push
into
dec
and
and
testb
fs
repnz
cmp
out
or
dec
cmpl
loop
pop
dec
imul
insb
aad
sbb
lret
lcall
xchg
jo
mov
cmp
or
shll
xor
mov
jo
aad
mov
hlt
push
adc
xchg
je
mov
mov
cmpl
jle
stos
std
mov
mov
add
addl
rcl
jo
jl
push
ds
mov
and
insb
jne
mov
nop
andl
push
popf
ja
and
ljmp
mov
lea
inc
jne
mov
cmp
mov
pop
test
jmp
loop
call
cmpsl
mull
adc
sub
leave
adc
incl
xchg
outsl
cs
inc
rorb
push
lret
faddl
add
dec
mov
repz
pushf
push
sub
stc
out
jb
ljmp
jnp
sbb
or
pop
push
or
cs
push
adc
cmc
sbb
jle
fmull
inc
lock
js
lcall
ljmp
xchg
pop
enter
rol
repnz
pop
xor
filds
push
sub
cmp
pop
aad
test
push
add
adc
popa
daa
push
fistps
dec
mov
mov
stos
stos
mov
ja
addr16
cs
jmp
fcmovnu
jg
fs
loope
mov
rcll
pop
mov
fidivrl
inc
fadds
daa
test
andb
mov
fs
push
lcall
inc
dec
movl
inc
fsts
adc
fisubrs
sub
icebp
sub
cmp
das
int
lods
pop
pop
add
jecxz
mov
mov
mov
or
lret
roll
inc
or
pop
cmp
xchg
and
push
ret
add
in
lret
shrb
adc
or
loopne
mov
in
stos
dec
bound
xor
pop
in
call
mov
int
jmp
mov
or
pop
scas
xchg
aas
or
dec
mov
das
mov
cld
push
push
arpl
jmp
sbb
mov
adc
xchg
int3
inc
sub
loope
jmp
imul
dec
insb
outsl
shlb
sub
test
test
lods
dec
cmp
mov
es
cmpsb
fdivs
adc
xor
hlt
test
test
pop
fildll
add
inc
push
in
adc
cmp
out
jo
jg
test
add
or
jo
pop
lods
ljmp
cltd
jp
or
jmp
jl
mov
sti
inc
dec
test
mov
lahf
js
cld
sbb
jecxz
scas
call
inc
xchg
and
pop
in
enterw
in
mov
and
add
dec
inc
xchg
sbb
or
inc
lahf
sub
or
or
aam
aad
je
xor
mov
jecxz
aas
push
out
push
fadds
jno
jnp
push
adc
cmpl
sahf
xor
add
push
dec
frstor
dec
je
push
pop
cld
ja
lock
push
sub
stos
cwtl
movsb
inc
jae
test
notb
decl
shrb
outsb
jmp
xchg
es
mov
and
mov
das
sbb
adc
mov
xor
addl
stos
push
mov
inc
dec
arpl
jae
orb
or
sbbb
jl
das
stc
sbb
add
ss
mul
jg
std
lret
fidivs
push
xchg
mov
rclb
stc
pop
adcb
inc
aad
or
xchg
jbe
jnp
push
stos
test
mov
aad
ret
lret
jne
mul
adc
xchg
push
jl
data16
mov
sti
mov
adc
mov
test
ljmp
cmp
pop
enter
xlat
pusha
out
sahf
cmp
pop
mul
xor
push
cltd
mov
cwtl
mov
in
push
or
aam
mov
mov
stos
arpl
pop
adc
ds
pop
add
adc
mov
lods
jmp
imul
sub
adc
jmp
inc
xchg
in
test
push
xchg
mov
mov
ffree
fadds
fidivrl
inc
jae
aaa
mov
fnstcw
sahf
adc
xor
jns
icebp
nop
jge
xchg
and
aas
testb
fwait
imulb
xchg
cs
flds
fdivrl
push
sub
xchg
xor
iret
daa
repz
ret
xchg
jmp
mov
iret
ret
or
mov
jmp
and
subb
sbb
int3
lds
inc
xchg
push
lret
ss
aam
cmc
sbb
and
cmc
fwait
sti
jae
lds
mov
aam
gs
aam
mov
in
sbb
cltd
xor
mov
addb
jns
shrb
add
push
shl
jnp
jo
out
hlt
sub
lret
cmpsb
shll
repz
scas
daa
dec
ret
xchg
pop
push
dec
lcall
mov
and
or
push
aas
outsl
leave
jns
adc
pop
adc
dec
xor
mov
scas
fs
push
out
vpmulhw
mov
mov
cmpsb
push
mov
cmp
int
repnz
loop
mov
hlt
inc
and
mov
cmp
pop
mov
jb
push
jle
dec
mov
es
xchg
insl
outsl
or
mov
mov
xor
xchg
les
pop
add
xchg
and
test
mov
cmc
push
dec
sub
xchg
sub
mov
movsb
in
push
cmp
test
test
xlat
test
dec
out
fistps
mov
js
or
subl
or
cwtl
inc
outsl
hlt
dec
pop
cli
ret
inc
push
lods
sub
out
cs
out
jae
sbb
fwait
idivb
lods
pop
outsb
int
mov
movsb
pop
pop
xlat
inc
mov
fmul
gs
hlt
add
cmovbe
jp
popa
in
orb
add
add
push
pop
jg
ret
pop
int3
xchg
insl
outsb
rcr
push
or
out
aas
jo
mov
stos
notl
jg
sub
dec
cltd
mov
jmp
sub
cmp
movsl
cmp
xor
test
mov
mov
imul
jge
push
xchg
pop
push
aam
mov
push
aad
int
ret
xlat
jp
mov
mov
push
cmpsb
out
lods
dec
test
sub
outsb
lret
sub
outsl
xchg
mov
mov
xchg
test
shlb
xor
lea
mov
fsubrp
and
mov
mov
jb
fsub
pop
push
xadd
cmpsb
sub
and
leave
enter
rorl
imul
inc
jne
out
jnp
and
sub
push
dec
dec
cmc
jo
rcrl
pop
mov
mov
test
mov
adc
hlt
sub
push
loopne
lahf
cltd
adc
negl
cli
fcompl
jmp
sbb
mov
in
fstpt
mov
imul
sbb
in
sub
sahf
cmp
and
push
pop
or
fstpt
xchg
fbstp
sbb
inc
in
and
and
push
pop
out
xchg
nop
stc
fdivl
in
cwtl
xchg
ret
ss
popf
das
push
loopne
test
icebp
loopne
aaa
xchg
add
test
or
mov
decl
mov
dec
inc
dec
or
adc
movsl
xchg
jg
std
insl
pop
ljmp
fwait
push
push
mov
dec
cmc
cld
mov
lahf
adc
movsl
inc
lret
push
mov
faddl
mov
test
push
dec
mov
fs
mov
cmpb
test
fbld
jmp
cmp
fldl
jg
cmpsb
incb
shrb
cmp
stos
fistpll
jg
loop
aam
stc
bound
pop
and
mov
jbe
cmp
xor
ret
push
std
jmp
jno
cmp
xor
ret
mov
cmp
xor
add
add
dec
push
inc
dec
dec
sbb
sub
mov
jb
mov
mov
jb
lods
sti
imul
cmp
dec
lret
ret
scas
inc
cmp
and
add
scas
daa
xlat
loope
xchg
in
mov
xor
adc
push
push
dec
stos
lret
xlat
sti
jmp
sbb
pop
mull
jb
push
pop
jp,pt
aaa
lods
imul
lods
jecxz
fistl
dec
sbb
lret
test
mov
mov
and
lret
mov
add
cs
fucomp
xor
sbb
jne
out
stos
jl
gs
scas
or
outsl
sbb
cmpsl
daa
add
adc
mov
add
lret
sub
pop
jnp
cmp
and
fmull
stc
stos
sub
loopne
dec
or
jo
adc
popa
loopne
test
cs
or
adc
jp
sbb
jno
aam
inc
pop
mov
imull
pop
scas
stos
inc
sbb
inc
in
dec
insb
pop
cmc
jp
js
sbb
repz
scas
popf
inc
dec
push
or
shll
or
jns
inc
cltd
les
das
sbb
adc
out
xlat
out
stc
or
scas
pusha
ret
jl
pop
mov
call
and
jne
int
adc
sbb
mov
sbb
pop
gs
cli
out
pop
rcrb
cmpsb
adc
not
mov
outsb
pop
aam
lock
inc
add
insl
ss
sub
sub
into
mov
insl
push
inc
cld
in
daa
sbb
inc
arpl
out
popf
jno
add
adc
movsb
into
add
rorl
ss
sub
shll
fldl
pop
fmulp
test
and
adc
dec
mov
js
xchg
push
das
push
adc
subl
xor
aam
push
cmp
cmpsb
push
fld
jb
xchg
pop
cs
xor
jbe
cmpl
sbb
jl
add
fstpt
bound
fwait
out
inc
inc
cld
xor
inc
add
sub
in
cmc
loope
sbbl
call
push
sub
and
jp
jns
fwait
hlt
and
xchg
test
notl
adc
pop
inc
sbb
add
out
cs
fwait
push
add
fnsave
cmp
call
setbe
insl
add
mov
mov
dec
xchg
hlt
into
mov
cmc
pop
int
mov
jo
sbb
aas
xor
data16
fwait
mov
mov
repnz
gs
cli
and
sti
mul
jle
scas
pop
xor
nop
std
lret
imul
and
mov
popa
pop
or
cmp
dec
fidivs
sbb
aad
aad
mov
adc
xchg
cmp
inc
mov
leave
mov
xchg
add
lahf
or
jno
xor
fmull
add
xor
aaa
pop
xchg
adc
insl
lret
fbld
mov
inc
in
push
gs
inc
repz
out
sbb
cmp
sub
aaa
movsb
or
jae
push
push
push
mov
arpl
push
pop
adc
int3
aam
inc
dec
and
xchg
inc
or
aam
lahf
or
xor
fwait
push
lret
stos
push
fbstp
movsl
fwait
lods
and
dec
int
fwait
pop
jmp
shl
pop
aaa
setle
or
mov
xchg
mov
sti
sti
mov
fst
mov
inc
nop
dec
mov
dec
dec
jo
aad
test
idivb
jecxz
pop
sbb
xor
aam
ja
jno
test
test
cmp
mov
pop
in
test
dec
and
hlt
and
loopne
dec
pop
clc
add
sbb
addr16
flds
mov
sbb
int
cmp
popf
aad
jmp
or
cmc
jbe
mov
xor
or
outsl
loope
icebp
jns
mov
std
in
push
cmp
sbb
fsubrs
out
xlat
push
js
or
popf
push
lods
or
jnp
or
popa
jge
idivb
addb
loop
jecxz
clc
or
loopne
add
decl
dec
inc
push
and
and
mov
xchg
push
cmp
ret
inc
inc
ror
or
mov
fs
inc
push
scas
xorl
cmp
inc
subb
dec
xor
loope
xor
cli
xor
je
rclb
or
and
sbb
push
sub
sarl
or
jns
movl
out
flds
add
or
mov
push
addr16
jecxz
cmovns
jbe
or
mov
test
aad
mov
fwait
inc
call
cmp
aaa
xchg
mov
inc
int
adc
push
mov
add
aaa
loope
out
sbb
jns
aad
cmp
cltd
pop
sub
ss
xchg
mov
dec
push
je
cmc
fbld
xchg
ret
lods
rolb
nop
out
inc
iret
mov
xor
or
lret
cmp
inc
dec
push
imul
clc
xor
fstl
cmp
ret
shlb
mov
jns
mov
or
add
das
mov
int
lods
scas
inc
aam
int3
fcoml
inc
xor
sbb
xchg
movsl
mov
or
dec
sub
loopne
add
lods
test
inc
lods
dec
mov
imul
inc
and
lock
inc
xchg
xor
jecxz
lods
ljmp
test
cmp
sbb
mov
bound
aad
sbb
mov
pop
inc
inc
jl
stos
in
sbb
push
sub
dec
fsubrp
inc
xchg
int3
sbb
test
sbb
inc
idivl
std
jo
or
clc
or
insl
dec
popa
loopne
mov
insb
out
jp
and
push
test
inc
icebp
sbb
pop
xlat
or
loope
hlt
and
sbb
inc
loope
xchg
shl
test
push
cmpsb
xchg
bnd
dec
jmp
add
adc
mov
cmp
lods
dec
movb
pusha
les
xchg
sbb
incb
xor
pop
add
adc
addr16
mov
imul
ret
xchg
movsb
pop
push
and
pop
fstpt
jecxz
jb
xor
or
xchg
test
lahf
mov
insb
push
mov
jmp
cmpsl
fistpl
lahf
cmpsb
aas
ds
jne
fistps
shlb
adc
push
icebp
xor
mov
mov
out
xchg
insb
sti
data16
push
ljmp
daa
mov
mov
std
add
je
fstl
mov
jle
mov
cli
outsb
mov
pop
call
imul
adc
push
push
mov
insl
imul
xor
add
aas
in
and
std
inc
test
push
adc
mov
iret
push
cwtl
imul
jl
xor
loope
adc
push
jg
ss
in
pop
mov
inc
jbe
dec
fadds
jbe
push
icebp
jo
pop
push
sti
inc
push
rcrb
dec
cmp
fadd
pop
and
out
xor
jg
pusha
iret
scas
cmp
xorb
cmpsb
add
xlat
inc
fildll
hlt
adc
loop
sbb
out
les
xchg
push
or
cmp
bnd
das
ss
xor
lds
mov
outsl
adc
mov
push
test
cmpsl
pushf
mov
add
mov
lahf
mov
pop
cmp
or
add
rcll
push
sarl
pop
je
adc
mov
lret
inc
sti
mov
inc
mov
out
sub
in
xchg
sub
dec
rclb
adc
sbb
jmp
or
adc
dec
ljmp
xor
fisubrs
or
lss
jae
sub
mov
hlt
arpl
xchg
fcomi
lds
stos
push
cmp
adc
dec
adc
xchg
iret
cmp
divl
inc
add
fdivs
push
jo
call
xlat
sub
xor
lock
jl
sbb
cmp
clc
scas
movsb
cmp
pop
and
std
xchg
popa
lret
jb
add
and
adc
and
sbb
push
dec
lret
push
or
fsubl
inc
fnsave
jg
out
fs
xchg
sub
test
cs
in
cmp
pop
xor
jge
roll
push
xchg
pop
inc
aas
inc
jo
xchg
jle
push
xchg
int
sbb
pop
lods
out
dec
int3
mov
cli
jne
add
aad
add
ret
std
std
pop
push
inc
mov
xorl
adc
fs
lods
shll
test
sub
ja
loopne
fcompl
popl
xchg
mov
enter
xchg
jno
dec
lods
popa
mov
sbb
aas
leave
aam
mov
leave
jp
rcrb
pop
xor
out
cmc
hlt
out
mov
add
mov
xchg
xor
sub
cmpsl
clc
hlt
test
jg
stos
inc
mov
xchg
push
shl
in
or
cwtl
fiaddl
popf
test
mov
popl
pop
ret
pop
and
cmp
ss
cs
inc
rclb
cld
mov
dec
xchg
addr16
call
push
in
cmp
mov
jo
dec
mov
in
inc
pop
sahf
insb
lods
bound
mov
popa
je
andb
shl
aad
scas
jmp
in
lret
mov
pop
aaa
sub
lds
stos
dec
sub
pusha
mov
jmp
imul
mov
and
or
in
test
out
fwait
ss
pop
mov
das
jg
sbb
iret
adc
jo
pop
pop
stos
or
pop
sbb
fists
xchg
dec
adc
out
je
xchg
xor
fists
out
push
ljmp
xchg
mov
add
aaa
or
mov
das
mov
mov
pop
or
or
stos
mov
add
xchg
mov
mov
and
cmp
mov
jnp
push
fsubs
or
pop
das
push
pop
cwtl
cmp
jne
mov
pop
fwait
push
and
fsub
pop
dec
into
cli
and
jno
inc
mov
or
cmp
fsub
sub
jae
stos
xchg
adc
ds
sub
dec
sbbl
bound
sub
push
adc
and
int3
clc
jge
add
jb
xchg
push
mov
pop
mov
fcomi
sbbl
jae
leave
inc
addr16
fwait
dec
sub
adc
jnp
adc
sub
xor
add
push
push
sti
clc
cmp
aad
sub
mov
inc
jno
dec
out
jns
jle
gs
sbb
jl
adc
das
das
or
or
ds
adc
ja
ret
cs
xor
stos
adc
test
aad
jecxz
or
sahf
jp
bound
rorl
ret
fadd
sub
pop
das
mov
sar
add
cmp
jg
sbb
inc
sahf
push
sbb
cmpsl
pop
lret
jmp
out
in
jg
aad
cmp
bound
call
inc
adc
popa
sub
loopne
in
push
andb
add
jb
mov
cmpsb
pop
inc
push
arpl
test
jp
jne
shl
fbstp
cmp
aaa
sbb
push
sbb
xchg
test
cs
lcall
mov
mov
mov
fsts
and
fidivs
dec
enter
cli
push
je
dec
popa
inc
inc
push
js
loope
push
cmpsl
loop
lret
hlt
dec
and
adc
xor
push
movsl
inc
push
rorb
mov
fsubrs
in
stc
dec
adc
enter
sub
dec
out
mov
pushf
dec
rcrb
subb
mov
in
dec
shll
push
insl
fisubl
and
out
test
or
inc
icebp
lods
jb
and
mov
scas
hlt
in
jmp
mov
mov
fnstenv
leave
sub
scas
and
or
jns
xor
movsl
push
stos
push
push
mov
push
pop
ficompl
jo
sub
fs
cmpsb
mull
pusha
add
add
jnp
repnz
push
sbb
dec
or
stos
das
rcr
inc
pop
push
sbb
rcl
lea
dec
sbb
data16
xor
cmp
lret
pop
dec
sbb
jmp
lcall
inc
sbb
adc
sub
and
jbe
jae
jno
mov
hlt
dec
mov
orl
fildl
push
jl
push
sub
and
or
pop
mov
xor
rcr
push
outsb
xchg
cmp
lock
testl
repz
int3
aaa
inc
and
xor
inc
leave
push
and
out
or
xor
fs
stos
jp
bound
fisubl
mov
push
notb
lret
insb
mov
ja
mov
out
sub
jmp
push
into
mov
mov
jb
inc
js
lahf
outsb
adc
out
dec
test
push
iret
adc
xor
loopne
dec
adc
outsb
adc
mov
movsl
int
jbe
xchg
pop
xchg
int
dec
movb
cs
mov
sub
insl
aam
pushl
lods
lea
es
sub
xchg
jecxz
dec
mov
inc
push
dec
push
stos
pushf
lahf
push
loope
jne
jne
xor
jo
cmp
mov
cli
xchg
pop
repz
cmp
mov
bound
mov
dec
xchg
sbb
test
pop
add
pop
xor
cmp
lods
xor
cmp
xor
pop
ss
loop
push
xchg
fbstp
or
mov
fdivrl
test
int3
adc
ret
movsl
js
jl
insb
or
into
jle
insl
add
and
adc
push
sub
or
jo
shlb
repnz
loop
sti
scas
adc
pop
sti
aam
je
jecxz
in
ljmp
xchg
aad
pusha
xchg
bnd
out
nop
jle
outsb
mov
popa
sbb
cmc
stos
sbb
in
push
mov
loop
cmc
or
jo
xchg
std
mov
adc
jmp
jb
sarb
clc
push
push
into
xlat
mov
xor
iret
enter
mov
bound
lods
adc
mov
add
sub
in
outsb
cmp
mulb
shl
xor
sbb
push
pop
push
leave
insl
mov
push
lcall
scas
adc
je
out
fnstsw
pusha
repz
sti
in
shl
pop
mov
jbe
dec
sbb
push
nop
lret
sub
fs
mov
mov
push
dec
ja
shrl
mov
dec
jo
xor
rorl
leave
div
outsb
pop
push
push
adc
loopne
stos
ss
jecxz
xor
xchg
addr16
jnp
ret
fldpi
adcb
ret
cmp
adc
leave
jae
mov
outsl
add
ja
jge
mov
les
subl
stos
pop
outsb
sbb
mov
das
stos
filds
repz
addl
sbb
aad
test
xorb
push
cmc
sbb
loop
adc
iret
xchg
lods
movsb
dec
in
pop
call
pop
shlb
mov
jae
dec
mov
pop
test
adc
push
loope
test
popf
push
cmpsl
cmp
movsb
int3
gs
push
in
rcrb
dec
mov
mov
xor
or
push
mov
sbb
mov
outsl
idivl
lds
dec
xor
sub
inc
sub
loope
mov
push
std
cwtl
out
leave
adc
std
add
loop
xchg
cmp
aas
push
loope
xchg
shlb
or
cmp
sub
lret
dec
fsubs
sub
pusha
pushf
sub
pop
inc
stc
sub
arpl
popf
ljmp
imul
add
arpl
inc
rolb
inc
sbb
sbb
xor
jp
dec
rcr
popa
cmc
fsubl
dec
in
icebp
int
mov
or
sbb
push
fdivs
in
jb
and
mov
popf
test
and
pop
add
sbb
fstp
movsl
dec
inc
into
push
addl
lret
stos
fidivs
mov
cltd
aaa
xor
int
sbb
sbb
pop
push
out
out
pop
sub
in
dec
loopne
adc
mov
jmp
xchg
sub
lds
das
mov
inc
fisttps
mov
inc
push
lret
push
push
cs
rol
cmp
inc
mov
in
stc
mov
mov
lods
jecxz
push
out
xchg
lahf
sub
lret
aas
xor
add
imul
into
sbb
fiaddl
inc
cmpl
add
idiv
cmp
push
jl
push
adc
mov
rorb
test
lods
dec
jecxz
dec
add
xor
mov
mov
stos
movsb
arpl
outsb
dec
xchg
into
mov
repnz
xor
xchg
in
push
mov
push
loope
test
mov
out
xor
push
test
pop
enter
ja
push
mov
rcrl
sub
jo
dec
test
ret
in
fisubrl
js
shlb
shlb
sub
push
xchg
pop
cmp
push
rcll
and
or
jne
imul
mov
fs
int
push
add
shll
add
mov
push
jg
or
mov
xlat
test
xchg
add
pop
pusha
popf
adc
push
pop
roll
das
adc
jb
std
push
mov
rcrb
in
adc
fisttpl
test
shll
popf
pop
fldt
xchg
dec
in
pop
and
scas
sahf
adc
add
push
loope
aad
cmpsb
cmp
lret
rcr
imul
xchg
sbb
cs
push
adc
cmp
rorb
filds
data16
jecxz
push
add
ret
add
icebp
lea
pop
shll
sub
push
fstps
adc
push
push
into
push
aad
and
mov
xchg
das
dec
lods
xorl
adc
rcll
int3
mov
jecxz
mov
pop
leave
leave
xor
int
push
sbb
daa
inc
out
inc
lea
add
hlt
sbb
mov
loopne
fxch
jo
push
and
jo
cli
mov
push
leave
mov
xchg
jp
jge
pop
inc
dec
add
and
mov
ja
test
shll
mov
dec
mov
inc
push
lcall
jnp
cli
loope
ljmp
jmp
push
aam
mov
aas
mov
push
dec
test
inc
pop
pop
mov
inc
test
sub
nop
xchg
mov
xchg
cmp
mov
aas
inc
pusha
pop
jl
mov
sbbb
icebp
cmp
mov
mov
sub
pop
lret
in
and
and
mov
xchg
js
sub
add
xchg
data16
mov
out
adc
jge
aam
les
mov
repz
sbb
inc
add
test
in
sub
testl
loopne
jne
stos
pop
dec
cmp
sub
sbb
mov
sbb
dec
sub
jbe
lods
or
ja
int
in
inc
jno
jbe
mov
adc
and
popa
repz
cmp
cmpsl
push
inc
rcrl
mov
or
cmpsl
aaa
dec
adc
movsb
in
mov
dec
mov
shlb
adc
lcall
push
adc
inc
sub
add
sti
jg
aas
xlat
push
repnz
insl
and
std
fnstsw
ja
stc
mov
dec
pop
fdivl
lret
xlat
jmp
push
in
mov
cmp
loopne
adc
mov
cmpl
movsl
js
pop
aad
arpl
gs
js
pop
das
insb
gs
decl
push
dec
mov
sarl
xchg
sbb
jecxz
sahf
cmp
pop
lods
jne
xchg
movsb
jmp
shrb
lret
sub
lods
cltd
push
enter
adc
addl
lea
insb
mov
and
cwtl
sbb
idivb
cmp
les
cmp
sub
jne
sub
mov
add
or
sub
iret
daa
shll
sub
xor
mov
popf
xor
lea
sbb
jl
mov
lods
jmp
or
addr16
loope
and
xchg
loop
cmpsl
and
mov
push
call
adc
pop
ret
sub
fstl
aad
int3
cld
test
push
mov
adc
mov
cmc
mov
inc
and
mov
scas
rclb
mov
xor
xor
mov
hlt
inc
inc
push
imul
repz
dec
jo
out
jmp
adc
dec
pop
outsb
mov
es
jne
leave
aad
add
incl
push
add
arpl
xchg
out
push
cmpl
fsubrl
mov
inc
sbb
lahf
mov
jae
movsl
aaa
push
clc
addr16
dec
sub
in
mov
sbb
inc
sub
mov
push
jno
dec
mov
arpl
pop
cmp
gs
add
jge
ja
outsl
popa
adc
aaa
cli
lea
adc
mov
lea
push
into
outsb
jmp
bound
push
popa
ret
mov
adc
pop
ret
icebp
jle
daa
lret
mov
stos
mov
xor
sti
jne
adc
jae
lods
sahf
shl
ret
xchg
inc
inc
pop
or
add
popf
inc
inc
aaa
cmp
xchg
std
ja
xchg
push
lahf
cmp
mov
iret
enter
dec
nop
test
stos
insb
adc
xchg
loopne
repz
xchg
sub
mov
loopne
sbb
mov
mov
insl
ljmp
dec
test
pop
push
jo
lret
sub
inc
sbb
bound
adcl
mov
mov
jne
ja
add
mov
mov
mov
mov
push
mov
adc
mov
jmp
daa
cli
out
or
dec
sub
loope
xor
out
arpl
pop
pop
pop
lret
xor
jno
mov
icebp
pop
cmpsl
out
pop
and
int3
out
jns
inc
into
icebp
and
cwtl
push
cmpsl
and
daa
ss
pop
mov
pop
adc
int3
bnd
and
testl
jns
xor
rcrb
mov
xor
inc
push
in
testl
lea
pop
outsl
push
dec
xchg
jmp
add
rclb
daa
xchg
mov
pop
and
call
mov
cmc
sbb
xchg
push
pushf
adc
mov
incb
mov
push
inc
sbb
mov
in
mov
in
lods
cmp
jnp
ret
popf
fildll
loop
and
in
mov
pop
jnp
jmp
inc
into
jg
test
sbb
fstps
data16
pop
inc
pop
popa
rclb
inc
inc
cli
aad
mov
sti
ret
jecxz
pusha
dec
pop
mov
dec
or
ret
and
iret
test
ss
add
xor
cmc
inc
mov
lods
pop
jb
xor
mov
test
xchg
cmpsb
mov
or
fwait
jno
mov
fidivrs
loopne
mov
adc
pop
btc
into
jb
xlat
sbb
push
test
mov
dec
dec
sahf
and
push
mov
sbb
inc
into
ljmp
flds
cmp
pop
je
push
insb
lret
orl
out
pop
loop
xchg
xlat
mov
repnz
mov
daa
adc
sub
les
aam
fs
and
sub
call
jno
inc
aas
add
pop
enter
ss
and
mov
inc
ffree
mov
lret
aas
ficoml
repz
lcall
iret
push
test
enter
lods
jge
icebp
loopne
lret
push
ror
mov
sarb
mov
push
xchg
into
pop
dec
add
push
or
loope
cmp
lret
sbb
daa
inc
dec
push
mov
mov
or
das
and
push
enter
rclb
jnp
enter
cmp
test
fsubl
rcrl
mov
mov
dec
outsl
sbb
jns
push
mov
mov
lds
ja
es
jl
sbb
and
insl
mov
ljmp
loopne
push
xor
arpl
rep
jmp
push
mov
jo
aad
adc
es
jbe
mov
mov
je
push
int3
add
cltd
inc
jmp
popa
dec
sub
pmaxub
jns
push
ror
sahf
divb
das
ja
mov
or
sub
pusha
fwait
fwait
push
cmpsb
ljmp
test
or
test
sbb
adc
out
xchg
adc
in
xchg
jnp
cld
clc
and
popf
dec
imul
stos
sub
mov
cmp
in
adc
outsb
jns
leave
icebp
inc
mov
cmpsb
testl
push
outsl
xchg
idivb
pop
pop
sar
cltd
xchg
jb
pop
lcall
pop
bound
or
cmp
aad
int3
cwtl
mov
in
das
jb
adc
and
sub
dec
ds
cmpsl
sti
push
int
pop
dec
sub
lret
fs
sbb
push
lods
xlat
mov
sub
dec
lock
scas
mov
imul
or
in
xchg
inc
dec
outsl
or
cmp
stc
ret
or
pop
fmull
xlat
inc
and
imul
cmp
int3
or
divl
ljmp
addr16
hlt
add
xorl
in
lret
and
and
fucomip
pop
xchg
icebp
pop
fistpll
push
adc
data16
movsb
xchg
jnp
cmc
adc
stos
add
orb
negb
adc
sahf
inc
in
jecxz
inc
movsb
push
push
insl
mov
mov
loope
shrl
out
addr16
int
push
insl
icebp
sbb
jle
imul
jns
fnstenv
or
imul
scas
push
mov
mov
push
sbb
ja
cmp
mov
inc
xchg
inc
push
pop
jbe
inc
mov
gs
inc
aad
sbb
push
cmpsb
xchg
popa
add
call
ret
adc
mov
mov
imul
cmp
push
jp
sbb
jmp
pushf
js
jne
dec
jo
jmp
mov
nop
test
sahf
adc
mov
jno
pusha
mov
pop
mov
stos
jle
xchg
aam
cmpsl
loopne
mov
fs
or
in
or
push
hlt
icebp
mov
ss
lcall
aam
ja
movsb
ss
sbb
pop
imulb
mov
add
outsl
push
adc
xor
test
sub
rcl
les
mov
aad
shlb
jp
fxam
xchg
or
in
dec
cmpl
lret
scas
push
insl
lcall
sub
out
pusha
or
and
rcrl
aad
pop
arpl
ds
les
jmp
icebp
pop
jp
repz
out
insb
push
int
fisubl
cld
push
cmc
add
pop
sbb
lcall
sarb
aas
cs
imul
cli
or
aad
mov
lcall
sbb
lcall
popa
sbb
addr16
in
dec
sub
dec
sub
scas
dec
and
dec
add
push
inc
and
mov
cmp
xchg
test
cmp
in
push
add
xchg
adc
adc
or
es
int
inc
mov
repnz
aad
pop
icebp
fucom
pop
testb
ljmp
std
rorl
mov
push
aas
lret
enter
cmpsl
lret
add
out
loope
ficoml
shll
inc
cmp
xor
mov
or
and
xor
scas
or
add
sub
mov
mov
cmp
xor
mov
xchg
idivb
pop
cmp
adc
add
pop
xlat
aaa
xor
xchg
iret
lock
adcb
or
cltd
gs
mov
jg
aad
and
xchg
adc
lahf
sub
test
sub
rorl
jle
movsl
cmpsb
sbb
jo
xlat
movsb
mov
loop
mov
cmp
inc
push
orb
cmc
jge
cwtl
cmpsb
shrb
jne
push
add
das
jmp
jmp
test
jo
repnz
jg
mov
cmpsl
scas
loopne
lcall
pop
pop
insb
movsl
adc
xchg
xchg
mov
je
ja
jg
xchg
and
out
jge
push
add
mov
movsb
pop
sub
dec
loop
cmpsb
jmp
jns
jnp
call
sbb
pop
aas
sub
mov
aas
scas
sub
enter
enter
lret
or
and
fsubl
add
sub
dec
stos
pop
int3
outsl
xor
mov
push
faddl
in
jo
xor
or
daa
xor
aad
test
mov
out
loope
sub
jbe
imul
in
jne
and
fs
jl
mov
dec
cs
into
jae
xor
into
mov
out
ljmp
out
stos
cmpsb
ljmp
popf
sahf
cmpsl
addl
jne
stos
mov
push
cltd
sub
mov
movsl
pop
jno
idivl
movsl
mov
cli
cmpsb
jp
and
add
hlt
mov
jb
scas
fidivs
std
jae
cltd
pushf
adc
jecxz
add
mov
popa
adc
and
shr
push
sub
xchg
insb
push
jg
xchg
mov
xchg
stc
dec
pop
repnz
fdivrs
mov
and
xchg
fcompl
cli
pop
push
xchg
in
mov
xchg
out
jno
arpl
out
pop
mov
stc
mov
test
sbb
xor
shlb
negl
sbb
adc
mov
and
adc
pop
das
hlt
js
orb
imul
add
lret
push
roll
pop
sub
lret
das
cmp
dec
mov
in
push
push
sbb
adc
dec
push
call
inc
faddp
js
aam
jmp
mov
xchg
fsts
ret
imul
inc
adc
push
inc
int
pop
or
data16
rcl
in
add
xor
adc
push
xor
mov
cmp
cld
adc
in
sub
out
xchg
mov
sub
dec
jmp
push
mov
ljmp
aas
jge
or
mov
lcall
xchg
jg
sbb
out
negl
cmp
push
imul
mov
xchg
sub
mov
aad
outsb
repnz
fadds
mov
push
popf
lret
or
repnz
in
xchg
test
hlt
repnz
xchg
inc
out
jb
xchg
out
dec
push
mov
cmpb
push
lret
test
into
and
fcoml
xchg
mov
imul
lea
ljmp
push
jns
shl
mov
movl
mov
xchg
jl
and
mov
mov
aaa
ret
es
mov
cmp
nop
push
sbb
jmp
dec
jae
fsubrs
shl
add
sbb
cmp
call
mov
jo
mov
pop
adc
or
mov
fisttps
xor
jmp
aaa
push
xchg
adc
jl
mov
inc
leave
push
jl
loope
jne
mov
sbb
or
cs
and
sub
in
push
dec
cmovp
bound
lcall
add
xor
out
arpl
loop
pusha
in
fmul
sbb
test
imul
fcomp
out
sub
out
sbb
fwait
movsb
mov
or
out
xchg
insb
out
xorl
psubusw
mov
pop
jno
add
int3
adc
and
xor
enter
sub
dec
xchg
mov
add
ja
or
mov
insb
loopne
cmp
push
jmp
sub
adc
repnz
mov
mov
add
stc
cmp
pushf
ret
pop
outsb
pop
into
adc
xor
xor
mov
xchg
lcall
mov
mov
leave
aad
pop
adc
lds
stos
jne
leave
pop
xorl
push
pop
rolb
push
fistpl
shr
loope
dec
sti
cmp
pop
xchg
mov
cmc
adc
xor
inc
inc
mov
loop
call
cmpsb
stos
popa
xor
decb
das
and
idivl
push
js
pop
scas
xchg
test
push
push
jo
inc
pop
add
stc
mov
push
or
add
push
popl
sub
outsb
mov
test
xchg
cwtl
mov
sbb
inc
addr16
pop
mov
popf
loope
das
xor
inc
mov
ss
inc
push
cmp
aaa
stos
cmpsb
mov
ret
sbb
sarl
lahf
clc
fcoms
pushf
xor
push
xor
adc
mov
lock
cmpsb
in
or
mov
pop
xor
mov
cmpb
outsb
fwait
popf
inc
jle
mov
pop
cmp
add
mov
out
in
xchg
in
xchg
sbb
pop
fsubp
pop
fwait
lret
mov
dec
mov
shrb
push
aaa
negb
into
mov
cmc
push
sub
inc
dec
hlt
mov
jl
xchg
roll
jb
xchg
cmpsb
sahf
adc
xchg
cmp
dec
loope
mov
scas
adc
fsts
xorb
leave
dec
fadd
je
jnp
jp
sbb
add
cwtl
mov
adc
aad
dec
cmp
jbe
add
cmpsl
setg
inc
adc
inc
cmpsb
popa
push
pop
push
fcomi
push
pop
add
es
ss
pusha
pop
mov
daa
mov
push
aaa
lahf
mov
stos
fidivs
cmp
fucomi
adc
stc
mov
test
jnp
rclb
adc
scas
hlt
into
dec
popa
pusha
pop
cmpsl
pop
shlb
or
outsb
insl
push
imul
fbld
xchg
outsl
aas
mov
add
sbb
cmp
fcmovu
es
jno
cmp
mov
or
sbb
pop
mov
test
adc
sub
in
inc
inc
mov
lods
in
leave
dec
ror
into
sub
add
pop
lods
je,pt
aas
jo,pn
mov
scas
lock
adc
pop
sarl
out
mov
cli
xchg
roll
xlat
xlat
outsl
adc
sbb
pop
mov
testb
lea
in
xor
mov
pop
xchg
mov
push
nop
sahf
nop
test
loop
les
sub
ja
arpl
cli
shll
jge
xor
jge
jl
pop
stc
std
test
xchg
xor
in
cmp
sti
push
mov
sub
lods
cmp
sahf
loop
imul
lods
int3
pushf
pop
sub
or
inc
xor
dec
cmpsb
sub
jno
out
dec
sub
lret
sbb
inc
popf
popf
pop
push
xor
mov
adc
mov
movsl
add
cmp
pop
lahf
xor
push
ja
inc
push
mov
das
mov
or
pop
daa
lods
add
pop
fsubrs
mov
ror
xchg
aaa
mov
xchg
call
cltd
add
das
mov
rolb
dec
cmc
pop
call
jmp
inc
aas
or
lret
xchg
fcompl
pop
and
xchg
enter
pop
or
cmp
popf
popa
or
xlat
fsubp
lcall
or
lret
nop
fmuls
mov
sahf
fcomps
and
or
ljmp
insl
leave
mov
xchg
sarl
mov
psubw
inc
pop
mov
cmp
lods
mov
jecxz,pt
fdivrp
add
sbb
lea
int3
lret
mov
shl
bound
xor
pop
sub
mov
push
insl
fsubl
cmp
stos
test
mov
jb
jg
adc
and
inc
push
push
mov
clc
lods
jbe
mov
fstps
and
sbb
dec
int
dec
das
dec
daa
xor
inc
das
mov
bound
jbe
mov
andl
jg
pop
loope
xor
lea
lret
jge
push
mov
sbb
rorb
sbb
mov
xchg
out
push
jnp
mov
sub
cmp
inc
lock
movsb
test
icebp
sbb
push
out
sti
jg
les
jecxz
or
mov
sti
xlat
mov
cwtl
hlt
sub
aam
test
psrlw
mov
rcll
pop
leave
xor
pop
pop
aaa
cmpsl
iret
jnp
jge
js
push
loope
xchg
jmp
dec
and
sub
sub
imul
daa
dec
or
movsb
mov
sbb
pushf
xlat
mov
nop
mov
pop
call
lock
push
testb
int3
lret
pop
out
rcrb
cwtl
xchg
or
inc
lret
enter
push
cmp
cmp
dec
fldlg2
xchg
or
and
or
daa
leave
push
xor
out
mov
dec
iret
je
or
movsb
inc
fbstp
repz
and
lret
xchg
outsl
jno
mov
imul
dec
jp
cmpsl
push
nop
int3
push
cmpsb
mov
or
lcall
aaa
sbb
daa
outsb
lea
inc
pop
test
push
fwait
and
jecxz
xchg
loop
mov
dec
push
lds
ss
mov
cmp
fdivrs
jmp
clc
mov
scas
xchg
stos
lea
rolb
xchg
outsl
jnp
or
push
mov
pop
adc
pop
push
aam
dec
mov
mov
adc
lahf
sbb
test
mov
sub
movl
add
and
push
lds
in
lret
cltd
xchg
fldcw
aad
pop
ja
mov
mov
mov
pop
jbe
stos
int
adc
imul
cmpsb
ss
pop
popf
dec
outsl
mov
cvtpi2ps
pushf
sbb
mov
or
mov
mov
notl
mov
lahf
aad
cld
jnp
out
lret
lret
push
cmp
mov
imulb
mov
out
das
faddl
add
xor
sub
outsb
ja
aas
adc
mov
xor
int3
pusha
imul
in
out
fwait
div
mov
test
sahf
xchg
outsl
lods
add
or
aam
add
in
push
fmull
and
xchg
lret
xchg
outsb
cmp
sbb
mov
xchg
mov
int3
jp
scas
push
pop
push
adc
out
mov
or
leave
nop
cmp
inc
repnz
and
and
dec
jne
push
mov
jge
jl
jne
sti
jbe
xor
lcall
leave
jne
in
stc
inc
sbb
push
out
stc
in
pop
daa
in
xor
xchg
and
cmp
sbb
sbb
insl
stc
add
gs
push
movsb
imul
mov
adc
mov
adc
fcmove
mov
or
sub
test
add
call
mov
dec
icebp
ss
cwtl
sub
adc
lods
push
iret
xchg
insb
push
dec
lods
dec
pop
orl
mov
or
orb
adc
mov
adc
out
ss
lea
and
movsl
inc
aad
mov
sti
pop
fiaddl
dec
dec
cmp
lahf
push
xor
fsubrl
dec
pop
cmp
cmp
xchg
loopne
dec
inc
mov
in
push
push
mov
lahf
lock
push
sahf
inc
shlb
inc
jg
subl
mov
adc
psadbw
pusha
dec
push
mov
pop
pop
ret
daa
mov
mov
jecxz
pmulhw
adc
pop
loopne
cmpsl
sti
xchg
cmpsb
imul
stos
repnz
adc
cs
jne
loope
adc
mov
out
push
lods
xor
mov
jl
sbb
push
xor
push
out
into
imul
sub
or
aaa
testb
sub
mov
and
sub
repnz
addr16
mov
in
gs
into
add
cmpsb
dec
outsl
shl
imul
icebp
sub
ds
lods
icebp
ret
cmp
push
jns
nop
xor
std
lcall
jecxz
in
aad
inc
xchg
arpl
mov
aad
fiadds
sub
lret
mov
add
xlat
mov
ret
or
dec
and
xor
clc
ror
fwait
mov
mov
mov
push
push
in
push
inc
sub
aaa
push
icebp
test
sub
leave
cmp
adc
movsl
arpl
sbb
jge
icebp
mov
test
aaa
mov
mov
mov
stc
adc
lods
xlat
lock
or
sub
add
lods
cmp
cltd
adc
xchg
sbb
xor
xchg
mov
xor
jae
xchg
rol
call
loop
sub
inc
call
fimuls
jo
xchg
loop
xchg
insb
add
pop
pop
fmul
mov
addr16
rcrl
imul
push
lea
cld
lods
cmp
pushf
sub
xor
adc
es
push
mov
dec
cmp
sub
or
scas
sbb
hlt
lahf
pop
pop
pop
arpl
repz
ljmp
rol
adc
mov
icebp
iret
movsl
mov
andb
jae
adc
mov
ljmp
std
mov
push
xor
mov
test
jecxz
jae
push
push
inc
scas
rcrl
aaa
push
inc
xchg
fs
jbe
pusha
cwtl
dec
mov
pop
adc
or
pop
adc
cmp
inc
outsb
shlb
jne
into
jmp
or
subl
add
repnz
out
mov
and
inc
mov
adc
cmp
cmp
clc
mov
inc
arpl
sbb
push
sub
jmp
push
and
mov
mov
add
enter
mov
nop
cmp
cmpsb
or
mov
daa
hlt
into
insl
fnstsw
and
adc
dec
or
bound
hlt
repz
pop
dec
inc
mov
rcrb
sub
jne
mov
subb
xchg
les
ljmp
push
divl
loope
in
pushf
iret
sub
mov
repnz
jae
out
xlat
bound
test
aam
jp
aaa
xor
cli
movsb
sub
cmp
nop
xor
xchg
mov
insb
inc
add
and
push
dec
mov
mov
cli
in
movsl
mov
xor
xor
pop
insb
enter
inc
scas
mov
jns
adc
test
mov
gs
pop
mov
out
stc
mov
pop
aam
out
xchg
xor
sub
dec
ja
xchg
push
sarb
push
mov
push
ret
stc
gs
xor
adc
lcall
jl
push
pusha
sbb
sub
and
gs
hlt
cmp
mov
imul
mov
fnstcw
shll
lea
insb
xchg
lret
mov
and
mov
push
flds
sub
jle
xchg
pop
shrb
or
sbb
mov
mov
sub
add
mov
int
mov
push
pop
mov
mov
xchg
ljmp
inc
pushf
add
inc
imul
mov
mov
add
test
negl
sbb
and
xchg
dec
aad
lret
cmpsl
or
jno
sar
loopne
mov
xchg
aaa
lret
sbb
jg
xchg
add
addb
pop
add
mov
mov
sti
jl
popf
pop
sub
push
lret
movsl
mov
xor
imul
xchg
insb
adcl
fbld
incb
test
mov
int
mov
mov
and
cmp
cmpsl
jle
pop
inc
jg
cmpsb
sbb
data16
sbb
jns
cltd
out
push
pop
repz
js
addr16
push
push
inc
mov
testl
incb
xlat
xor
push
sub
out
and
push
aam
fwait
and
sbb
mov
sbbb
dec
lcall
cmovb
jmp
xchg
sub
ror
jo
mov
push
enter
add
shr
data16
xlat
cmpsb
add
sti
ror
sarb
jnp
sbb
jge
dec
fucomi
pop
ret
mov
sub
pop
mov
imul
xchg
mov
ret
fcomp
xchg
dec
inc
jno
dec
ret
or
insb
or
orb
cmpsb
repnz
jp
in
aas
xchg
dec
xchg
data16
outsb
inc
cmpsb
aas
inc
into
cmp
imul
fwait
jns
in
fincstp
dec
js
mov
sarb
inc
push
push
cmp
stos
clc
cmp
popf
push
imul
or
hlt
pmaxub
pop
inc
adc
jae
ret
insl
sub
shll
int
push
cmp
xor
or
cmpsb
sub
dec
or
cwtl
inc
adc
stos
cmpsl
and
adc
pushl
rorb
adc
lret
sub
fucomp
out
add
aas
add
test
or
aad
pop
mov
mov
add
fldpi
out
iret
jnp
into
lahf
cld
ja
mov
repz
lret
jnp
out
stos
in
mov
jnp
xchg
pop
lret
loopne
ss
test
pop
fcmovnu
jb
mov
and
lret
pcmpeqw
mov
or
xchg
and
movsl
inc
out
jns
inc
clc
xchg
cmpsl
jb
mov
wrmsr
dec
xchg
loope
dec
jmp
arpl
xor
dec
sub
or
and
or
sahf
adc
cli
cmp
xor
js
and
sar
data16
xchg
js
xchg
add
jns
ljmp
mov
mov
ret
adc
cmp
push
xchg
icebp
loope
xchg
dec
jp
ret
mul
into
xlat
jmp
ljmp
sbb
out
std
repz
sbb
pop
in
ss
std
mov
outsb
sub
mov
iret
rolb
pop
jl
lret
call
daa
popa
mulb
inc
xor
insb
daa
popa
mov
gs
ret
jns
push
stc
dec
add
or
push
xor
ficomps
mov
test
idivb
popf
and
mov
adc
and
int3
aaa
sub
test
adc
pop
bound
scas
cmp
sub
adc
jae
test
inc
jo
xchg
mov
bswap
div
pop
aam
sbb
lret
int
push
xor
cmp
cmpsl
gs
xlat
ss
call
rcrb
xchg
cmp
mov
sub
mov
jno
fbstp
fdivr
jns
imul
sbb
call
and
mov
sub
in
jmp
mov
jbe
rcrb
sub
adc
cmpsb
call
shlb
pusha
or
or
sub
gs
mov
outsl
push
pop
jl
fs
movb
or
mov
jmp
jmp
sbb
sahf
mov
add
add
lock
inc
jae
inc
stos
adc
xlat
adc
adc
imul
jb
pop
mov
sbb
xchg
mov
cmpsb
jno
push
arpl
mov
sub
lret
jns
fs
icebp
loop
xchg
repnz
sbb
into
jle
test
lods
test
mov
add
inc
fldenv
sbb
jmp
aad
cmp
gs
xor
adc
daa
jnp
pushf
and
mov
popf
inc
out
js
out
xchg
mov
sbb
dec
jle
mov
das
test
sbb
and
int
inc
add
std
sbb
add
shlb
cwtl
in
insl
push
cmp
loop
test
xchg
int
add
push
sub
lahf
lods
sbb
sbb
sarl
or
cltd
and
xchg
fstl
mov
push
jg
jne
fstp
mov
dec
xchg
out
mov
xchg
ret
jge
in
xor
dec
xor
sub
rolb
repnz
mov
add
mov
add
jp
ret
xchg
negb
ljmp
push
shr
call
sbb
notl
popa
and
push
jle
insb
ljmp
push
into
sbb
mov
mov
adc
sub
imul
mov
pusha
int3
ljmp
adc
adc
cmp
out
into
add
jp
stc
jno
dec
mov
lea
sub
mov
jl
sbb
cltd
jne
push
xchg
cmp
cmp
loope
push
inc
lahf
cmp
cmp
movhps
xchg
xlat
push
sub
xchg
int
dec
xchg
mov
mov
aam
outsl
pop
sub
es
fld
sbb
sub
insl
dec
push
mov
xchg
and
mov
xchg
call
fnstcw
mov
pop
xor
mov
cmp
inc
mov
fildl
lds
mov
jb
shl
sahf
movsb
addl
fs
sub
mov
shrb
push
jb
adc
movsb
sahf
sbb
jge
xchg
jl
push
dec
add
or
jp
pop
pushf
add
shrb
xchg
mov
je
dec
sbb
cwtl
nop
xchg
ds
sbbl
shrl
inc
call
outsl
jns
cltd
popa
test
or
pushf
ret
lahf
push
xchg
ja
adc
aam
shlb
stos
cld
xor
outsl
aas
inc
xor
test
ljmp
daa
cld
inc
adc
push
mov
mov
clc
mov
dec
push
inc
push
push
lahf
gs
mov
shrb
push
cli
xchg
pop
in
xchg
jne
push
int3
jne
push
mov
out
gs
jmp
sub
mov
mov
xchg
int3
cmp
inc
mov
dec
jb
sahf
adc
pushf
xchg
mov
imul
mov
dec
adc
push
mov
dec
xor
pop
imul
loopne
and
jbe
fwait
dec
xlat
adc
hlt
test
test
dec
ja
cld
jae
xlat
pop
pop
pop
push
jns
into
cmpsl
and
into
inc
lahf
mov
icebp
pop
push
cmp
es
movsb
or
dec
pop
cmc
xchg
xor
aad
sub
out
jmp
jne
or
je
inc
cmpsl
cmp
cltd
cwtl
pop
movsb
push
repnz
dec
je
xchg
sub
scas
cmp
xor
mov
imul
leave
mov
cmp
test
js
sbb
shl
jl
sbb
loope
mov
imul
push
mov
push
aaa
sarb
dec
rcll
add
hlt
insl
popf
xchg
push
adc
ss
dec
shll
fcmovu
in
lods
iret
mov
mov
xor
jmp
pop
and
cltd
xchg
jae
test
imul
mov
lahf
inc
out
and
adc
fiaddl
fstpt
mov
sbb
ds
mov
shl
int
out
out
rclb
mov
push
mov
or
inc
ss
xchg
adc
outsb
repnz
psllw
test
and
insl
cltd
ss
mov
mov
out
mov
cmpsb
cmc
enter
mov
push
call
xor
add
xchg
mov
push
sti
ret
vandnps
jne
scas
mov
mov
es
loope
pop
push
push
pop
daa
pushf
lret
xor
movsb
jmp
test
sbb
adc
enter
test
and
fidivs
cmp
add
ror
aaa
js
mov
in
push
nop
es
in
or
jmp
fldt
jnp
inc
xchg
cmpb
dec
arpl
xor
xor
lods
out
push
mov
xchg
sar
sbb
mov
notb
outsl
fstpl
dec
or
lcall
jge
xchg
call
sbb
addb
push
pushf
pop
xchg
fdivrl
out
adc
stos
mov
xchg
sbb
loopw,pt
xor
aad
push
sub
adc
into
mov
fmuls
pushf
jmp
fsubrs
lods
jp
jnp
sub
loop
mov
arpl
sbb
shlb
cs
scas
cs
cld
sub
fdivs
lret
dec
jmp
xchg
cmpsl
or
cltd
mov
push
sub
lret
xor
push
mov
xchg
js
cmp
pop
jle
mov
lahf
mov
lea
in
cmp
or
sub
cltd
repz
aam
lods
pop
or
lea
shl
inc
adc
mov
imul
pop
push
and
out
sti
lahf
lcall
pop
sahf
xchg
jae
mov
jl
push
push
outsb
iret
out
imul
mov
push
iret
and
push
loope
stc
or
out
cmp
mov
lods
popl
sbb
pop
loope
mov
aas
movsb
imul
dec
mov
push
das
mov
scas
or
dec
and
in
popf
imul
arpl
je
or
daa
scas
ja
cmp
sbb
fsubr
das
push
fcmovnbe
jo
repz
test
loopne
aaa
rorb
pop
sub
shlb
fwait
adc
pop
add
loop
jb
mov
mov
ja
adc
and
repz
gs
push
push
dec
lret
jmp
xor
pusha
into
insb
fnsave
arpl
pushf
jmp
aaa
xchg
dec
or
sarl
pusha
scas
imul
orl
xor
leave
add
jb
aad
mov
and
pop
cmc
xor
mov
or
fisttps
inc
or
adc
mov
adc
addr16
fcomps
inc
adc
or
add
cmpsl
or
dec
sub
sar
rcrb
jge
push
rorl
push
test
cmpsl
enter
inc
stos
cmc
cmp
xchg
pop
gs
addb
inc
jg
jo
jp
and
inc
lcall
xorb
cmpsl
xchg
mov
xor
mov
loop
insl
sub
bound
pushf
mov
js
repz
cmp
dec
sahf
fadds
or
sbb
aaa
or
es
fisubrl
push
cwtl
lea
popa
adc
das
std
pop
push
shrb
xchg
jecxz
push
sti
push
adc
mov
sub
ja
cmpsb
clc
loope
dec
mov
fs
push
xchg
add
rorb
fs
push
dec
int
iret
mov
xchg
pop
sbb
out
dec
adc
pop
call
ds
es
lock
mov
pop
add
add
jp
mov
das
dec
push
or
andl
addb
daa
inc
mov
sbb
dec
cltd
out
sub
ljmp
sar
and
adc
ret
notb
testb
aaa
call
push
cmp
dec
xor
xchg
movsl
and
insb
roll
cmp
scas
jg
nop
add
lods
pop
dec
xchg
repz
mov
outsl
jl
jb
mov
jno
icebp
loop
jne
push
ja
mov
mov
loop,pt
sahf
out
cmp
dec
push
xchg
leave
jbe
scas
mov
jo
mov
paddsw
fsubr
jne
mov
jecxz
mov
mov
adc
dec
mov
inc
stos
push
ljmp
mov
push
popf
out
sub
les
jge
add
push
cmp
inc
inc
into
pop
orb
mov
rorl
lahf
in
loopne
lcall
jle
mov
ljmp
push
cmp
mov
call
pop
mov
out
dec
and
push
inc
add
inc
icebp
pop
aaa
sub
adc
lods
mov
lcall
test
cmp
and
lret
adc
inc
cld
jae
imul
test
push
inc
push
test
dec
push
mov
jns
pop
je
pop
scas
mov
icebp
shll
and
in
test
gs
inc
or
outsl
rcll
mov
bound
mov
mov
lods
pop
pop
sti
xchg
add
fs
ljmp
inc
test
or
xchg
leave
dec
insb
xor
rcrl
into
jnp
dec
movsb
add
mov
xchg
lods
push
pop
rolb
fcmovnbe
je
inc
push
xor
mov
leave
mov
movsb
ret
ja
mov
mov
mov
insb
aaa
push
iret
xor
push
int3
adc
loop
inc
loope
xchg
ret
push
ja
xchg
sbb
and
and
pop
mov
lock
pushf
push
dec
cld
jno
in
xchg
dec
pop
add
push
pop
inc
push
cmp
movsl
push
repz
xchg
pop
adc
cmp
lea
lea
adc
xor
mov
lahf
adc
jbe
stos
lock
inc
or
hlt
push
outsl
insb
push
stos
jbe
fwait
add
mov
dec
test
gs
or
ret
mov
push
sbb
shll
popa
iret
or
test
call
mov
pushf
fcoms
mov
xor
out
bnd
mov
rcll
data16
shl
xor
test
xchg
pop
daa
out
sbb
mov
movsb
jae
xchg
inc
push
or
push
push
das
out
leave
push
cmp
xor
inc
arpl
sub
ljmp
mov
nop
sub
in
sahf
jmp
and
test
mov
lret
dec
cmp
mov
movsl
psubusw
and
bnd
mov
pop
lret
outsl
imul
aam
mov
cltd
imulb
push
cwtl
mov
inc
sub
push
lcall
inc
mov
lret
movsb
movb
push
mov
mov
in
jae
fwait
mov
stc
mov
fpatan
push
sub
or
dec
sbb
mov
push
arpl
push
inc
insb
mov
sub
jl
sbb
adc
rcrb
inc
aam
mov
mov
pusha
dec
cmp
xorb
inc
or
mov
scas
mov
ret
sarb
cmp
imul
jmp
nop
pop
dec
mov
xchg
bound
sub
pop
stc
push
sti
out
iret
out
mov
test
sbb
lock
fdivrl
mov
push
bound
dec
insl
pause
shl
out
in
pop
sbb
add
ret
mov
inc
gs
icebp
aad
fwait
xor
jmp
and
xor
aaa
in
jne
into
test
call
pop
inc
mov
pop
popa
lret
rorl
inc
out
sub
mov
push
insb
call
jmp
orl
mov
cld
sub
addr16
inc
out
cmc
jbe
mov
sbb
in
add
lret
les
push
testb
cs
mov
in
aam
mov
or
add
lods
pop
inc
out
test
test
call
gs
int
xchg
test
push
nop
test
pop
int
fwait
jmp
or
jmp
mov
ds
adc
fiaddl
mov
adc
sub
notb
push
add
imul
jmp
push
jb
cwtl
adc
mov
in
orb
ss
mov
push
fst
adc
cmpl
enter
repnz
les
push
add
js
clc
bound
push
and
pushf
sarb
sahf
icebp
pop
std
into
jmp
inc
and
pop
out
push
or
in
dec
subl
subl
pop
insb
cmp
inc
ja
cmp
fisubl
adc
movsb
cltd
cmpsl
inc
icebp
cltd
mov
xor
cmp
adc
in
cmp
jg
fbstp
mov
mov
cs
mov
movsb
dec
lods
sbb
div
test
pop
mov
insb
pop
add
repnz
mov
or
sbb
inc
push
jg
lret
ja
xor
adc
xor
lds
sub
xchg
loope
xlat
jae
dec
scas
push
popf
fsubrl
sub
cli
iret
mov
sarl
sub
mov
scas
sahf
fidivs
sahf
jbe
imul
pop
lahf
inc
mov
pop
daa
repz
xlat
mov
ret
out
sub
adc
inc
inc
jg
inc
stos
cli
mov
test
sbb
clc
stos
out
jmp
in
rol
cmpsb
inc
mov
test
jecxz
call
jmp
cmp
push
dec
mov
mov
adc
mov
mov
xor
imul
jmp
and
shll
xor
xchg
mov
rcll
xlat
pusha
movsl
pop
xchg
mov
insl
xchg
insl
mov
imul
and
sub
jo
rcrl
mov
dec
outsl
inc
sbb
das
jo
dec
add
js
scas
push
mov
mov
lock
add
adc
xchg
dec
stc
push
rcrb
jnp
inc
sbbb
xchg
cld
out
shll
fldl
insl
xlat
aaa
stc
adc
cwtl
sbb
xchg
xchg
mov
shrl
cmp
nop
xchg
and
std
shr
movsb
in
mov
fmuls
fstpl
fdivrp
mov
test
insl
inc
sub
cmp
bnd
stc
insl
fisubs
push
inc
sbb
adc
and
je
mov
pop
dec
jge
bnd
arpl
sub
sub
jg
sarb
mov
lea
nop
call
aam
mov
lea
mov
inc
aaa
mov
cmp
jmp
cmc
sbb
jb
aas
fstcw
cmp
out
pop
jnp
jl
push
mov
sbb
cmp
pop
lods
je
xchg
stos
adc
push
add
xor
cwtl
dec
scas
sub
cmp
or
jg
fstpl
push
lahf
adc
push
inc
js
mull
jp
aas
jbe
je
mov
rcpps
push
jbe
shl
sbbl
inc
mov
pop
pop
call
xor
sar
push
and
adc
dec
daa
add
cli
xchg
test
mov
shrb
inc
add
push
xor
mov
test
ror
adc
sub
insl
outsl
xchg
or
mov
cmp
or
jnp
cs
xor
sahf
mov
lods
lcall
test
dec
xchg
xor
mov
xchg
in
int
inc
insl
pop
jo
fldcw
rcr
add
aad
cld
push
mov
push
jmp
in
or
xchg
jnp
add
jge
mov
fs
movsb
dec
xchg
pusha
in
sbb
mov
push
dec
int3
jge
std
lret
inc
jge
jb
adc
and
pop
cmp
into
sbb
dec
je
jae
out
dec
and
in
loope
shll
and
adc
mov
xchg
test
movsl
push
sbb
rcrl
pushf
dec
dec
je
into
mov
mov
fwait
adc
sub
add
and
mov
push
pop
push
dec
stc
xor
dec
push
push
cmp
push
fs
mov
mov
das
sbb
mov
loop
jb
das
jl
lock
pop
loop
xor
pusha
jbe
cmpsb
js
sub
or
cmpb
sahf
ret
test
xor
xor
js
sub
in
mov
add
sub
sti
mov
sarl
ret
dec
cmp
sarl
shlb
add
mov
shrl
pop
fmull
push
xchg
mov
stos
jmp
pop
data16
and
inc
repz
mull
fidivrl
sarl
and
imul
loopne
ja
ret
add
xor
and
fnstsw
inc
repnz
adc
push
rolb
pop
jo
push
push
imul
mov
scas
mov
movsl
add
shrb
pop
das
dec
shrl
inc
test
sub
aaa
pop
test
xchg
fcoms
xor
jae
sahf
lods
xor
fldcw
rcrb
test
push
addl
repz
lods
movsl
jns
cmovb
and
ret
pop
xchg
fdivrp
dec
ret
ljmp
leave
cs
loop
std
flds
mov
cmc
sbb
sub
mov
es
pop
push
lock
daa
dec
lcall
or
or
xchg
cmpsb
lcall
test
fdivrs
bound
shlb
fcomps
out
cli
push
orb
lea
mov
mov
add
adc
cmp
xchg
popa
push
call
loop
xor
and
and
cwtl
js
cltd
inc
lea
std
and
lret
ret
lcall
sub
xor
xchg
roll
in
test
mov
push
andps
arpl
fsubrp
fidivl
int
sub
js
test
add
divl
mov
outsl
insl
mov
mov
call
pop
dec
dec
dec
sub
cld
dec
arpl
fs
push
pop
ljmp
div
sub
stos
mov
or
daa
movsl
mov
push
inc
js
pop
iret
cmpsl
adc
shl
pushf
lds
mov
jo
mov
sbb
jbe
jns
cmpsl
loopne
push
les
imul
pop
xchg
or
repz
mov
adcb
test
dec
fsubr
ret
enter
sbb
out
jnp
inc
outsl
dec
repz
divl
sub
insl
mov
push
lods
push
lahf
push
ljmp
jge
pop
insb
cmp
pop
sbb
cli
push
dec
cmp
add
mov
push
imul
sub
lret
or
mov
mov
cmp
movsl
xor
push
inc
xchg
repnz
daa
test
repnz
pop
stos
aam
cli
out
adcl
aad
xchg
js
mov
scas
arpl
mov
ljmp
loope
cmp
hlt
jne
aam
leave
and
shlb
jnp
cmp
clc
out
flds
xor
inc
scas
jmp
movsb
mov
jg
cltd
jmp
mov
push
cmpl
pop
in
mov
or
mov
fdivrp
in
xchg
fdivl
inc
cmpsb
cs
nop
scas
xor
dec
lret
cmp
sbb
add
adc
enter
add
and
in
push
pushf
jle
adcl
and
add
sbb
jecxz
test
std
jl
outsl
add
jmp
mov
push
dec
fidivrs
in
sub
push
ret
ficomps
or
mov
mov
cltd
ficomps
push
stos
xor
push
adc
into
xor
int
pop
loop
daa
mov
mov
shrb
loope
in
stos
fadds
pop
mov
das
inc
dec
or
aam
shrl
cmp
push
pop
cmpl
fucomp
les
push
add
loop
sub
inc
push
lret
in
push
mov
jmp
int3
sti
or
clc
cmc
jno
jnp
xchg
pop
fisttps
add
out
jne
cli
pop
stos
les
jl
aas
push
mov
push
xchg
jb
divl
lcall
jge
mov
ret
mov
pop
push
int
inc
addl
pop
cwtl
mov
push
and
xchg
adc
into
add
adc
and
and
test
sbb
sub
push
idivb
lods
int3
cmpl
pop
lret
mov
test
loopne
ret
outsl
ficompl
aam
nop
lcall
repnz
insl
mov
das
sar
int3
push
sub
frstor
mov
or
pop
adc
loopne
pop
jne
or
int3
adc
jecxz
jle
push
dec
mov
push
aas
pop
repz
pop
lret
inc
sub
pop
shll
inc
xchg
clc
pushf
or
xchg
sub
jmp
push
mov
testl
mov
sbb
ds
ficompl
mov
or
fistpll
arpl
jo
les
aam
sub
pop
fs
arpl
cmpsb
fsubrl
mov
cltd
das
sbb
mov
icebp
jp
gs
xchg
push
test
adc
repz
or
adc
setno
mov
cmp
or
adc
loopne
push
ret
stos
add
repz
cld
mov
mov
pop
xorb
js
sahf
or
lods
pushf
in
jg
jae
mov
inc
push
mov
iret
mov
daa
int3
shrl
loop
fidivl
fbld
pusha
insb
push
sbb
dec
pop
ret
lods
lods
xlat
in
mov
inc
jmp
insb
cwtl
xchg
xchg
mov
jno
mov
test
sub
mov
adc
jae
inc
jmp
xchg
dec
out
pop
and
and
mov
mov
jmp
aas
mov
jne
rcrb
push
or
cmp
mov
push
pop
jle
push
cmp
or
or
ja
jns
loope
inc
cmp
mov
int
insb
add
ret
xchg
aaa
push
inc
xor
cmp
adc
push
push
les
inc
sub
sub
or
js
add
push
sub
test
jmp
jb
mov
shll
cmpsl
adc
imul
adc
pop
mov
xchg
jns
or
push
cmp
lcall
fwait
mov
xchg
sbb
rcl
pusha
sarl
adc
jbe
xlat
stos
or
pusha
fdivl
and
hlt
push
adc
or
mov
lahf
lret
push
pop
lea
imul
enter
sbb
push
jnp
sub
std
pushf
fdivrl
cmpsl
rcrl
jb
rcrl
pusha
or
xchg
cld
adc
repnz
es
into
cltd
std
sub
jnp
or
jl
cmp
in
or
cld
data16
add
mov
dec
mov
aad
lcall
mov
and
sbb
stos
sub
add
insl
fsubrs
jo
push
mov
xchg
xorb
push
push
lret
xchg
or
inc
xchg
sbbl
and
lods
or
jp
push
or
loope
mov
daa
ret
pushf
adc
push
js
or
sbb
mov
mov
iret
mov
cmp
mov
sbb
cwtl
rcl
enter
stc
fnstenv
mov
pusha
jge
std
cmpsb
int3
addr16
dec
gs
fs
jo
out
idivb
lock
fisubs
je
repz
add
lret
popf
or
push
sbb
adc
lcall
xchg
gs
jl
sbb
inc
ret
sbbb
insl
adcl
push
dec
xchg
loope
repnz
int
xor
out
sbb
cwtl
sti
sbbl
sbb
jae
movsl
and
mov
lcall
or
mulb
dec
jb
nop
dec
aaa
cmp
add
int3
mov
jp
lods
mov
jl
pop
jae
xchg
jne
and
dec
pusha
xor
pop
mov
adc
xor
out
les
imul
faddl
scas
mov
add
fdivl
push
fimull
dec
dec
rorl
lds
dec
es
popa
popa
sub
mov
xor
mov
addr16
push
imul
subb
aas
fwait
xor
fimull
jmp
inc
jmp
mov
gs
int3
insb
jp
dec
dec
cld
sub
jb
out
aaa
call
dec
dec
imul
push
rorb
mov
iret
pop
pop
cld
pop
sub
dec
adc
xor
sahf
add
push
xchg
add
jecxz
xor
rcl
scas
or
cmp
ss
scas
faddl
imul
add
scas
lret
repz
mov
xchg
dec
out
sbb
jno
movsb
les
fdivrp
loop
push
rcrb
and
fistl
jb
out
xor
mov
inc
cmp
dec
mov
aas
mov
cmpsl
iret
xor
jp
insl
lods
sub
dec
test
adc
xor
mov
test
sbb
xchg
mov
push
push
test
es
pop
and
ljmp
leave
std
push
call
or
rcr
retw
cmc
sub
or
subb
fwait
and
jp
lret
aam
fsubl
sub
cld
xchg
loopne
mov
push
cmpsl
lcall
lahf
inc
enter
sub
cmp
inc
xchg
cmp
pop
call
mov
in
sbb
in
sti
adc
xor
fucom
jmp
push
cmp
lahf
cmp
loope
test
and
insl
loopne
push
sub
addr16
das
imul
lret
mov
adc
pop
and
and
negl
ficompl
dec
scas
addb
cwtl
inc
cmpsl
mov
dec
dec
jl
and
aaa
test
test
mov
push
mov
push
movsl
xor
loop
imul
inc
dec
mov
mov
push
xor
out
mov
sub
movsl
arpl
scas
test
fildll
loop
std
xchg
mov
lahf
adc
sbb
inc
dec
stc
fmull
fildll
push
js
mov
gs
std
imul
push
cld
sbb
lret
xor
cltd
pop
mov
dec
lret
mov
cmc
fldl
jmp
push
add
push
hlt
mov
je
mov
daa
fwait
cmp
dec
mov
dec
xchg
xchg
es
adc
cs
jno
or
sahf
push
mov
fsubrl
in
dec
loopne
mov
inc
iret
addb
inc
pop
push
push
test
dec
push
in
sub
loope
add
jne
mov
or
je
inc
push
roll
ror
lahf
stc
flds
shl
mov
push
cltd
fldt
out
mov
outsb
pop
jecxz
add
test
mov
fimuls
cltd
lret
ds
mov
pop
pop
xor
lcall
and
fcmovne
not
scas
nop
jmp
int3
xlat
enter
jns
sahf
mov
push
insb
pop
pop
in
jns
adc
cmp
inc
mov
add
stos
neg
cmp
das
shrb
add
inc
lret
cmp
or
xor
jb
das
ret
ror
xchg
cmp
mov
aaa
push
mov
push
gs
mov
outsb
cmp
jle
lea
xchg
aad
imul
arpl
orl
std
xor
movsl
rcrl
xchg
sub
std
pop
loopne
notl
xchg
adc
jge
enter
or
cld
aas
gs
leave
fistpll
scas
fstps
xor
nop
cmp
and
adc
dec
cli
lds
test
sahf
and
mov
push
or
mov
pop
push
pop
sub
hlt
and
xor
mov
pop
pop
out
mov
or
sub
lods
sub
xor
daa
std
adc
jp
and
add
cmp
add
mov
xchg
adc
adc
fcompp
outsl
sbb
sub
xchg
mov
mov
into
xchg
movsl
outsl
lods
rol
dec
adc
cli
outsl
add
imul
jg
xchg
orl
sub
pop
aaa
inc
jo
rclb
pushf
scas
mov
jns
cmp
xor
loope,pt
fsubrl
stos
loopne
fcmovnu
inc
movsl
mov
sub
sbbb
popf
sub
ljmp
repz
fsub
les
sbb
aaa
push
inc
subb
loopne
push
push
test
pusha
loope
xchg
add
js
movsb
add
mov
dec
sbb
and
pusha
shlb
cmp
jmp
pushf
pop
xchg
stos
stos
jmp
cltd
adc
pop
push
ja
jo
sub
sbb
sub
int3
in
pop
stos
call
leave
pusha
sbb
adcb
fiaddl
shl
insb
cmc
clc
dec
in
negl
in
aas
mulb
push
cmc
mov
mov
or
and
stos
lods
push
loope
shlb
std
addr16
add
mov
sub
je
bound
adc
or
adc
dec
xchg
sahf
insb
dec
lods
cmp
dec
and
and
jl
cld
jns
sbb
rorl
iret
add
cmp
dec
mov
push
sbb
cmp
or
addr16
cmc
add
addr16
xor
enter
cltd
cmp
ja
es
ljmp
lret
lods
inc
add
iret
mov
addr16
insb
jl
add
add
ds
xor
jo
or
mov
ret
imul
je
mov
nop
mov
sub
bound
sbb
add
icebp
outsl
out
lahf
addr16
adc
and
in
pop
pop
fidivs
jle
lds
sbb
les
cmp
lds
push
jno
test
ret
ret
cmp
xchg
lock
dec
adc
push
leave
out
add
rolb
stos
inc
dec
lret
stc
dec
cld
jb
pop
leave
mov
sub
mov
cld
sbb
fisubs
pop
mov
enter
inc
pop
shlb
icebp
add
jecxz
sarl
mov
test
out
fcmovnu
or
out
xor
pop
stc
icebp
sub
mov
mov
and
push
bound
dec
addr16
mov
or
inc
pop
and
cmp
call
inc
inc
mov
fstpt
jbe
fsts
rcll
test
inc
ret
jb
idiv
mov
cmp
paddb
nop
sub
insl
add
daa
push
or
aad
or
sbb
scas
and
push
sbb
xchg
pop
inc
xchg
leave
xor
iret
jg
icebp
xor
inc
xor
pop
movsb
adc
repnz
popa
call
and
xchg
test
mov
roll
mov
lds
scas
loop
adcl
jg
call
lds
xor
ljmp
push
adc
subl
pop
push
mov
and
pop
out
fwait
out
flds
ja
mov
inc
loopne
orl
lahf
xchg
hlt
repnz
mov
lret
fbld
lret
testb
stc
std
cmpsb
pop
dec
mov
mov
js
mov
ret
xor
xor
mov
or
pop
jns
lods
clc
xor
inc
je
icebp
xchg
pop
imul
sbb
daa
orl
es
adc
add
mov
sbb
pop
sbb
sgdtl
pop
cmp
mov
sahf
popf
addr16
mov
outsl
dec
hlt
adc
adc
jb
xchg
icebp
mov
mov
shrb
cmpsl
adc
cmpsb
cli
mov
je
sub
jo
cmpb
add
out
test
lea
sbb
out
sbb
sbb
test
sbbl
lahf
add
nop
out
popa
enter
les
fwait
mov
cmp
adc
bound
fdivs
sbb
leave
fcmovnu
in
outsb
push
pop
out
std
movsl
cmp
mov
cmp
cmpb
lods
jne
pushf
jg
lahf
jo
in
jns
div
push
test
das
xlat
divl
aam
pop
cmp
cmp
mov
mov
unpckhps
push
inc
add
inc
adc
jl
in
call
cmp
inc
push
add
pop
inc
call
cs
push
xchg
push
fwait
pop
sbb
and
add
out
loope
sbb
and
xchg
lds
cmp
xchg
dec
inc
mov
jns
and
cmp
ficompl
iret
sbb
js
mov
mov
dec
inc
xor
out
cmp
out
pop
mov
fs
jae
push
mov
roll
outsl
iret
icebp
mov
adc
out
mov
cmpsb
pushf
iret
mov
das
jg
xchg
jmp
dec
das
ja
popf
aaa
loope
dec
loopne
outsb
pop
mov
arpl
push
or
add
std
jnp
add
movsl
pop
test
dec
notl
outsb
das
mov
mov
push
gs
pushf
mov
cli
ret
jl
add
sub
push
ficoml
in
inc
jb
and
mov
lret
negl
cmpsb
xor
je
bound
push
sti
mov
sbb
sbb
cmp
mov
cld
and
push
and
insb
lret
pop
adc
sbb
and
in
cmp
push
jp
xchg
cwtl
cmpsb
arpl
jmp
push
scas
daa
arpl
scas
pushf
das
divb
dec
jno
out
scas
cmp
insl
rcr
dec
push
inc
pop
outsb
scas
scas
adc
mov
pushf
dec
jle
outsb
and
in
push
stos
or
pop
inc
mov
pop
inc
xor
jle
insb
jp
mov
stc
push
insl
mov
int
ficomps
nop
pop
sub
daa
xchg
mov
add
adc
jmp
dec
lahf
test
fistl
adc
inc
lds
jbe
cli
adc
xor
lds
dec
xor
dec
iret
pop
rcll
mov
lods
jle
add
mov
dec
push
fs
or
mov
into
cltd
ffreep
push
mull
lock
testb
pusha
test
sarb
fcomps
fs
dec
cmpsl
call
fwait
lods
sub
xor
or
and
push
push
shll
xchg
outsb
stos
jbe
inc
and
and
in
adc
adc
js
cwtl
lret
sbb
in
cmp
xor
rclb
mov
push
cld
pusha
cmc
js
pop
movsb
in
out
or
mov
push
lods
cmpl
or
mov
mov
cwtl
cli
out
xchg
mov
cs
xchg
out
inc
in
adc
xchg
lock
mov
push
mov
xchg
mov
or
fidivs
addr16
mov
adc
pop
dec
out
jo
shl
shll
inc
aad
loop
xor
scas
adc
or
lahf
lcall
mov
mov
xchg
aaa
and
fisttpll
mov
dec
inc
icebp
fnstenv
xor
das
cmp
sbb
pop
or
jbe
or
clc
in
xor
pop
mov
les
out
repnz
popa
addr16
push
in
ja
pop
cmp
add
pop
cld
jle
js
lret
sahf
and
loopne
mov
dec
or
enter
in
mov
mov
fwait
es
in
mov
hlt
xor
into
rclb
loope
pop
jge
dec
ja
mov
pop
ss
sub
les
dec
adc
loopne
push
jl
xchg
in
pushl
mov
scas
mov
fiadds
cmpsb
rcll
sub
mov
cmp
xchg
insb
iret
mov
out
jge
and
cld
mov
in
add
insb
mov
pop
test
inc
inc
sub
popf
add
pop
lds
enter
sbb
jb
bound
addb
lret
and
ljmp
cmpl
dec
jne
mov
cmp
ss
aas
cld
jae
mov
sbb
ljmp
pand
mov
inc
mov
cltd
sbb
adc
xchg
or
cmp
sub
hlt
in
or
andl
fwait
inc
movntq
mov
lcall
fcoms
jnp
xchg
jne
lock
pop
xlat
fildll
lods
insb
fcomip
push
sub
es
std
cmpb
or
dec
xchg
push
iret
pop
and
int3
lret
push
cmp
pop
shll
or
cs
movsl
adc
push
inc
in
mov
in
jno
es
fmull
sub
insl
fcomp
mov
int3
and
sub
and
shll
les
cmp
loopne
pop
or
outsl
and
push
lods
out
gs
jp
adc
cli
fsubp
push
mov
std
sub
cmp
aam
xor
lcall
or
fidivrs
mov
addb
mov
mov
push
leave
xlat
in
inc
movsb
dec
lea
lods
add
das
shl
dec
pop
fidivrl
xor
xchg
aas
mov
jmp
dec
sub
imul
cmpsb
and
adc
js
das
daa
out
fstl
xor
movsb
adc
leave
mov
or
repz
add
mov
xor
test
ja
mov
jmp
sbb
cmp
xor
mov
icebp
and
cmpsb
pop
cld
subl
pop
mov
sub
frstor
pop
andl
icebp
outsl
xor
outsl
pop
push
jge
adc
aam
xchg
cli
xor
jns
push
loopne
shll
fs
shrl
dec
repz
and
sub
fistps
hlt
cs
and
jp
xor
dec
clc
stc
shlb
cwtl
sahf
xor
lods
cli
and
pop
xor
jno
sbb
lahf
mov
out
xchg
inc
imul
adc
push
jo
repnz
xor
pop
ss
aas
scas
out
pop
mov
je
dec
cltd
mov
fcomip
cmpb
sarl
cmp
add
jbe
jno
xor
repz
in
lret
sbb
mov
add
jmp
and
sbb
lret
js
xchg
push
push
pop
fildl
add
js
inc
data16
xchg
js
filds
mov
in
sub
dec
movsl
imul
cli
mov
loop
sbb
xchg
or
rcrl
adc
adc
push
imul
lock
jmp
cmpsl
and
lds
add
mov
xchg
sub
mov
pop
fdiv
mov
movsb
jle
cmc
aam
mov
lock
imul
mov
imul
dec
in
cmp
sub
mov
mov
cmpsb
leave
call
sbb
ret
repnz
sub
mov
bound
xchg
mov
cmc
insl
out
shl
inc
mov
pop
movsl
pusha
jae
sbb
xor
dec
pop
es
repz
xor
popa
push
aad
inc
into
mov
mov
jmp
xor
push
lods
incb
mov
cmp
mov
out
insb
sub
mov
je
and
mov
xchg
lea
push
or
cmp
dec
je
test
push
xlat
and
sub
mov
je
sub
lahf
jecxz
dec
mov
aam
adc
xchg
int3
scas
xrelease
lock
add
js
push
cs
xor
pop
and
fldl
adc
mov
mov
jne
adc
and
push
xchg
fisttpl
push
imul
ret
mov
test
xchg
es
popf
jne
cmp
stc
jecxz
xor
mov
mov
adc
xchg
insl
inc
xor
jecxz
mov
mov
js
inc
push
cmp
repnz
mov
mov
lret
inc
shl
xchg
sbb
jne
mulb
je
add
fnstenv
cwtl
enter
clc
das
adc
ds
inc
fcoml
cld
in
jb
mov
test
enter
inc
rcrb
dec
test
adc
adc
les
xchg
leave
or
fisttpll
cmp
sub
adc
iret
or
mov
sbb
adc
in
pop
cmp
add
adc
out
add
test
cmp
add
shr
outsl
add
sahf
pushf
ja
js
fmul
or
or
out
lods
add
jecxz
mov
shrl
dec
movsl
mov
push
xor
insb
mulb
in
addl
dec
mov
shr
mov
add
aas
int
push
sub
daa
repz
xor
xchg
push
sbb
out
and
or
push
lret
push
sub
popf
icebp
lods
pmullw
push
sub
adc
out
mov
pushf
test
fdiv
rorb
shlb
push
mov
inc
push
adc
pop
test
or
faddp
lret
sahf
sbb
sbb
inc
das
cmpsl
mov
outsb
cmp
lret
aad
arpl
roll
push
dec
loope
int3
xchg
inc
aas
push
xor
cmc
mov
adc
pop
test
lock
mov
fdiv
cmpsb
iret
push
cmp
rcr
dec
outsb
add
pop
mov
sbb
mov
pop
inc
dec
jne
clc
jle
pop
xchg
out
out
or
in
mov
adc
out
test
pop
mov
jno
aam
pop
js
ljmp
inc
mov
pop
inc
and
repnz
xchg
pop
popf
outsb
lods
test
mov
inc
outsl
ret
stos
xchg
adc
xor
xchg
mov
pusha
cmp
les
sbb
sub
mov
mov
jno
pushf
les
dec
insb
dec
sar
pop
cmp
xchg
mov
push
jne
xor
pop
inc
data16
mov
loop
xchg
or
lods
cmp
sti
sub
inc
jb
lea
out
pop
lea
ret
sti
shl
and
cmp
pop
jecxz
jp
outsl
lret
rcl
lret
cmp
gs
movsb
popa
push
scas
add
pop
cmp
xor
inc
imul
and
test
xor
jo
stos
and
adc
leave
pop
testl
cmp
jecxz
popf
cltd
mov
adc
fnstsw
mov
mov
mov
mov
xor
mov
shl
push
inc
int3
cwtl
not
cmp
insb
add
dec
add
clc
mov
push
jb
and
jmp
imul
jp
out
mov
xchg
or
cmp
dec
out
mov
out
fcoml
ret
or
cmc
not
repz
and
push
jge
aaa
fidivrs
mov
fsts
jmp
jmp
inc
pop
out
sti
div
cld
loopne
sbb
in
or
dec
mov
loope
out
or
fcoms
cwtl
loope
shlb
out
ds
or
push
and
fildll
in
xchg
mov
aas
jmp
inc
add
xor
push
pop
jl
movsb
test
scas
cwtl
lock
int3
pop
cmpsl
cmc
inc
div
push
testb
cltd
xor
std
in
inc
repnz
push
mov
or
mov
and
cmp
sub
sbb
add
sbb
cmpsb
mov
sub
ss
mov
xchg
into
inc
enter
push
enter
pop
jmp
cli
popa
push
test
int
fildl
sub
xor
out
mov
popf
ret
lea
inc
dec
sahf
cmp
cmc
inc
test
push
movsb
mov
pop
jnp
push
ljmp
sbb
and
and
dec
aam
aam
in
mov
push
shr
js
in
sar
test
stos
fsubrs
cmpsb
dec
mov
fdecstp
imul
mov
cld
inc
sbb
rclb
jl
outsl
ret
insb
xor
push
hlt
cmp
jb
std
xor
dec
or
dec
xor
cmpb
jecxz
outsl
test
and
ss
icebp
inc
inc
orl
pop
je
ss
jmp
cmpl
sbb
sub
mov
int
bound
fstpl
test
dec
out
add
mov
xchg
push
addb
test
aas
or
fcompl
shll
push
add
push
push
rcrb
cmpsl
repz
inc
dec
and
lahf
test
test
jns
sahf
adc
int
leave
and
jle
adc
adc
pop
push
sub
add
jp
dec
mov
pop
add
cmp
shll
xor
mov
aas
sub
incl
cltd
xor
xor
push
and
pop
pushf
pushf
inc
addb
mov
sahf
out
pop
call
and
bound
cmp
inc
adc
leave
jne
cmpl
icebp
sub
pop
jg
push
mov
out
lods
sbb
push
add
loopne
roll
xor
test
leave
cli
ret
or
pop
lret
add
call
out
scas
mov
adc
test
xchg
adc
jp
pop
dec
and
out
xchg
push
add
in
jno
cli
imul
xor
pop
and
stos
icebp
pop
xchg
lret
jb
pop
and
cmpsb
sub
cmp
aad
dec
fisubs
mov
pop
pop
add
test
xchg
adc
xchg
xchg
es
mov
stos
inc
mov
lods
int
popf
push
sbb
iret
or
test
shr
xchg
dec
sbb
add
jmp
shll
imul
scas
add
in
loopne
call
decb
cmp
movsb
pop
pop
push
push
loopne
xchg
and
aad
sub
hlt
addb
jmp
add
in
sub
xchg
popa
lods
in
dec
push
das
jge
sti
xlat
add
test
xor
or
aas
aam
hlt
fidivrs
pop
pop
jbe
jns,pn
adc
inc
loopne
addr16
pop
dec
add
fwait
add
nop
sub
lcall
cs
loope
jmp
mov
hlt
popa
int
push
sbb
lds
pop
movsb
jbe
and
aam
stc
fldl
inc
leave
mov
gs
adc
add
mov
inc
aad
mov
xchg
inc
xchg
pmulhw
std
mov
and
jb
out
lret
movsb
ja
xchg
pop
lds
out
pusha
mov
scas
cmc
mov
stc
sub
sub
jno
pop
xchg
and
adc
inc
out
sti
mov
fiaddl
rol
popf
mov
sarl
ja
xor
insl
lret
mov
adc
lcall
es
out
jle
sub
hlt
into
pop
outsl
inc
xchg
push
fs
in
insb
or
push
test
stos
adc
xchg
outsb
jl
inc
mov
pop
or
and
mov
aas
test
cmp
dec
jno
mov
lret
gs
fisubs
dec
cmp
cmp
repnz
out
js
mov
mov
and
pop
aaa
or
cmpsl
decl
or
xchg
fmul
jae
jns
dec
xchg
pop
movb
or
cmp
pop
sbbl
mov
test
pop
adc
inc
add
and
pop
sub
cmp
jnp
fs
xor
clc
add
sbb
test
jb
inc
divl
pop
push
push
push
aad
call
mov
mov
push
xlat
mov
and
mov
sub
daa
icebp
sub
scas
hlt
repz
sti
popa
int3
cmp
mov
scas
adc
jae
test
rorl
adc
inc
mov
flds
cltd
clc
ret
xchg
sub
lock
rcrb
mov
dec
stos
test
scas
sbb
in
icebp
push
push
cs
cmpsl
movsl
sahf
adc
sbb
xor
pop
xchg
rol
add
sbb
arpl
lods
or
dec
out
xorb
call
jnp
fcomp
imul
jae
lds
scas
aad
popf
mov
jp
in
rol
ret
dec
idiv
cwtl
cwtl
imul
arpl
stc
lods
jne
pop
sbb
out
aas
xor
sbb
mov
push
ja
or
pushl
sahf
fimuls
mov
sbb
and
out
cld
adc
cmp
mov
jecxz
jmp
dec
mov
das
xchg
xor
push
iret
fisubl
push
jg
scas
pcmpgtb
mov
cmp
test
adc
scas
push
dec
hlt
popf
fsubs
mov
aad
in
lods
xor
stos
or
xchg
ds
jle
stc
outsb
cwtl
jge
lea
cli
bound
movsl
jle
orl
arpl
lods
cli
push
outsb
push
jp
mov
aam
clc
inc
loop
pop
push
scas
fwait
loop
movsl
jno
jne
sub
bound
cmp
xor
xchg
dec
cmp
and
test
rcrb
pop
push
mull
xchg
adcl
add
jmp
sahf
jl
jge
pop
mov
fldt
dec
out
sub
fisubrs
adc
jmp
and
dec
in
cmp
mov
push
mov
lock
sbb
or
daa
loope
xchg
jecxz
push
mov
sbb
sarb
or
dec
incb
push
insl
insb
aad
mov
pop
divb
icebp
in
pop
mov
adcb
les
imul
iret
cmpsb
loopne
test
mov
popw
add
sbb
adc
mov
rcrb
clc
xlat
fs
js
imul
push
cmp
incb
dec
add
pop
mov
ss
add
sbb
mov
jno
mov
rolb
hlt
push
adc
stos
pop
inc
mov
push
imul
push
cmp
jmp
cmp
in
gs
sbb
inc
pop
pop
and
out
mov
roll
xchg
xchg
add
xchg
inc
lock
or
das
inc
mov
gs
divl
jb
es
mov
inc
sbb
rorb
push
cmpsl
inc
imul
ret
add
mov
aaa
mov
shl
scas
fchs
idivb
mov
pop
mov
mov
das
jbe
sub
cltd
clc
cmpsb
sub
mov
das
shll
cmpsb
or
sbb
mov
pop
jbe
mov
scas
sbb
pop
xchg
push
cmp
movsl
call
out
pop
out
add
lahf
mov
push
sbbl
mov
out
mov
xchg
popf
out
mov
sub
xlat
lods
pop
ss
push
mov
mov
xchg
lods
mov
fwait
std
movsl
add
into
daa
into
sbb
mov
cwtl
mov
pusha
es
sbb
test
std
xchg
orb
sahf
mov
adcl
jnp
or
mov
xchg
andb
stos
push
add
ficompl
jne
popf
cmp
jl
push
imul
sub
arpl
shll
mov
hlt
dec
xchg
jo
cmp
lret
jnp
inc
mov
scas
into
in
xor
cmp
daa
loope
ret
cmpsl
push
ret
pop
cltd
mov
ret
popa
adc
popw
xor
shlb
mov
notb
aaa
xchg
or
iret
daa
sub
cmp
mov
mov
sub
notb
fsubp
inc
pop
gs
mov
push
xchg
imul
push
push
mov
push
add
or
test
dec
inc
aad
mov
push
mov
push
js
cmp
mov
adc
data16
sbb
push
movsb
or
shll
xor
std
xchg
jl
adc
sub
pop
jne
jbe
pop
mov
imul
xchg
stos
xchg
pop
lock
add
out
adc
jnp
pop
pop
and
dec
push
stos
sub
mov
mov
arpl
int3
mov
lret
gs
dec
mov
adc
mov
jno
int3
dec
push
mov
or
jp
test
mov
xlat
sti
dec
popa
jl
and
xor
adc
inc
mov
mov
das
push
sub
cmpsb
inc
push
adc
cld
and
jl
out
mov
fldl
push
inc
or
inc
dec
dec
lds
cli
jb
xchg
xchg
lret
lods
sub
movsb
pop
test
shl
rorl
sbb
xchg
inc
pop
add
add
inc
lret
sub
addr16
xchg
mov
or
pop
outsb
lret
sar
mov
in
pop
xor
pop
clc
nop
cltd
adc
stos
jbe
adc
mov
movsl
ds
out
lds
aad
xor
or
ret
add
or
or
lods
pop
add
scas
mov
addb
aaa
jnp
lds
adc
xchg
in
aam
in
lret
fcompl
les
cmp
outsl
mov
push
sbb
jmp
jne
out
xor
and
sub
mov
add
ror
popf
in
jmp
negb
fistl
jae
push
jp
ss
and
or
add
mov
sti
les
outsb
test
inc
dec
outsl
ret
mov
inc
nop
stos
lret
or
addl
ljmp
sti
jnp
xor
dec
push
mov
cmp
sbbl
outsb
or
or
aam
aaa
pop
cmp
push
mov
xchg
mov
adc
lock
push
hlt
xchg
mov
rol
jp
or
lods
mov
hlt
inc
pop
xchg
jl
pop
xor
jnp
nop
push
sahf
enter
in
leave
dec
int
or
in
push
sub
jecxz
push
xchg
std
int3
shrb
xchg
adc
mov
mov
mov
test
loopne
stos
sbb
mov
xchg
sub
mov
je
ret
lods
lcall
mov
popa
subb
int3
pop
sbb
jle
add
pop
lea
jl
sbb
int
loope
call
js
shl
sub
inc
and
add
jmp
ror
xor
loope
inc
xchg
adc
aad
pop
push
mov
call
mov
jno
inc
mov
xor
inc
enter
jmp
cmp
mov
adc
loopne
test
push
and
push
leave
jnp
jae
or
int
mov
inc
jge
int3
push
jmp
inc
inc
clc
stos
inc
sarl
jmp
insb
call
ljmp
aad
nopl
cld
mov
aam
sub
out
in
pop
pushf
mov
arpl
xor
pop
sbb
inc
icebp
incl
insl
iret
or
mov
push
leave
pop
dec
stos
xchg
addl
mov
adc
shlb
cmpb
push
push
fnstcw
push
int3
mov
inc
push
int
ret
mov
mov
jb
outsl
fdivrl
xchg
insl
mov
sub
test
add
push
call
pop
popl
enter
sbbb
jge
dec
mov
xchg
stos
jp
lods
jbe
icebp
xchg
mov
inc
data16
test
inc
jns
xchg
filds
cmp
sbb
dec
loopne
test
fwait
pop
lock
add
dec
mov
jle
mov
jmp
pop
pop
scas
mov
int
or
mov
cmp
mov
in
cs
fwait
inc
pop
mov
mov
xchg
pop
pop
push
and
out
inc
andl
jge
adc
cmp
rcl
scas
mov
mov
lods
or
icebp
insb
outsb
and
int
mov
xchg
xchg
scas
mov
or
xor
adc
fcmovbe
stos
test
dec
shrb
lds
in
push
in
mov
jne
daa
out
insl
shl
pop
push
mov
push
aad
inc
into
add
pusha
shld
jmp
jb
dec
push
mov
pop
jno
xchg
into
xchg
mov
call
sbb
push
mov
xor
and
sub
or
ds
imul
outsb
cs
mov
mov
sub
ud0
fcom
ja
lds
aad
push
fmull
jg
sti
adc
scas
les
test
xor
pop
lea
dec
icebp
sub
sub
jle
lock
add
mov
sub
adc
sub
mulb
mov
or
and
jg
or
mov
mov
adc
mov
mov
das
mov
fldz
or
dec
jbe
cmpsb
adcb
cmp
jp
pop
movsl
loopne
stos
cwtl
std
vpshad
inc
mov
testl
mov
mov
ror
mov
sub
mov
in
cmp
add
loope
ljmp
popa
pop
sub
or
mov
sbb
mov
mov
jo
jnp
lret
sarl
test
xchg
sub
inc
xchg
push
mov
test
sbb
pop
aad
aas
add
shlb
push
subl
dec
and
xchg
sub
jp
jo
movb
sbb
movsb
mov
add
pop
out
outsl
or
add
dec
adc
xor
clc
iret
adc
outsb
shrl
pop
popf
pop
scas
leave
das
xor
testb
jbe
lea
xlat
negl
inc
fs
rcll
fldenv
mov
pop
jle
or
jbe
mov
jae
pop
xchg
push
and
and
das
push
nop
inc
add
mov
add
leave
dec
add
push
cmp
sub
cld
dec
cmp
pop
sahf
push
fwait
mov
pop
xorl
xchg
mov
daa
jb
push
pop
pop
and
push
mov
pop
loope
mov
dec
cmp
dec
jge
test
sub
pop
adc
andb
movsl
ljmp
mov
and
int3
sub
jp
mov
ja
es
adc
icebp
daa
inc
cli
andl
xor
jo
outsb
fs
push
lret
adc
dec
dec
mov
pop
incb
lret
jb
pushf
sahf
sbb
mov
push
mov
loop
out
mov
xor
movsb
loope
cmpsl
scas
js
mov
loopne
xchg
dec
sti
loop
pop
dec
std
shr
movsl
or
lock
dec
cmc
add
fldl
shlb
mov
inc
inc
fcomps
movsl
push
sub
je
addr16
test
rol
stc
sub
mov
enter
push
cmp
shrb
mov
sbb
div
test
jns
cltd
mov
mov
jne
les
dec
dec
push
lds
sarl
push
push
add
repnz
pusha
fwait
xchg
cmp
cltd
fxch
and
push
iret
sub
inc
sbb
scas
fimuls
out
jae
and
push
js
or
or
scas
push
cmpsl
dec
inc
pop
push
cmp
xchg
jmp
int
mov
loop
fs
mov
mov
sti
movsl
mov
mov
jecxz
std
jnp
mov
or
and
sub
xchg
insb
loopne
push
icebp
cs
loop
sub
pop
imul
out
aam
repnz
push
jle
test
jge
sbb
push
arpl
dec
imul
jbe
or
add
ljmp
fwait
lcall
pusha
pop
xchg
jae
ljmp
call
mov
jnp
add
stos
stos
sub
xchg
out
xor
mov
adc
xchg
insl
int3
xor
mov
mov
mov
mov
js
aaa
sbb
cmp
xor
push
mov
and
ds
sbb
lret
pop
or
add
and
dec
mov
jb
frstor
repnz
enter
into
mov
sar
cwtl
in
dec
xchg
rorb
fdivrl
and
mov
jecxz
cmpsb
outsl
adc
ret
sbb
mov
test
std
enter
xchg
xchg
inc
lock
mov
inc
xchg
xchg
cmp
js
inc
inc
loope
nop
fcompl
sbb
inc
sbb
xchg
jmp
lds
sub
push
shrb
pop
test
aas
movsl
pop
fs
gs
inc
push
push
js
and
inc
call
jg
mov
dec
xor
sbb
hlt
stc
push
mov
stos
repnz
into
cwtl
mov
mov
sub
and
daa
cmp
sub
insl
std
shll
stos
sbb
cltd
movsl
jnp
fs
addr16
push
jmp
ja
addr16
in
popa
das
int3
out
xor
clc
sub
jb
push
lea
adc
sarl
inc
dec
test
add
mov
mov
inc
inc
dec
add
xchg
sarl
mov
lods
outsl
push
pop
pop
ljmp
lahf
dec
adc
pop
xlat
sahf
xchg
jle
xor
scas
inc
dec
adc
mov
ss
push
mov
push
lret
shl
fidivl
add
fldcw
xor
xchg
pop
fildll
ljmp
ret
test
mov
scas
or
xchg
jecxz
fimull
cmp
push
cmp
adc
inc
out
cmp
push
or
pop
xchg
aaa
movsb
out
inc
xor
sbb
inc
testb
mov
flds
adc
mov
lds
jge
push
or
das
cmp
pop
mov
cwtl
push
inc
xlat
mov
popf
cmp
outsb
pop
adc
nop
sub
adc
das
push
and
sbb
jge
xchg
mov
cmp
pop
or
push
push
xchg
std
lods
ljmp
icebp
lsl
dec
imul
adcb
mov
dec
cltd
leave
movsl
adc
mov
roll
jg
int
jge
mov
dec
bound
mov
std
pop
pop
push
xchg
adc
bound
test
popf
jo
xchg
xchg
fstpl
push
and
sbb
out
mov
repz
add
mov
mov
data16
pop
popf
mov
dec
sahf
gs
xchg
lcall
inc
inc
mov
outsl
cmp
popf
pushf
xchg
mov
nop
add
int
adc
push
pop
cltd
pusha
or
jnp
cmc
aam
inc
jb
push
push
addb
insl
fld
push
dec
or
cltd
popf
addl
pushf
sbb
test
xchg
sub
pushf
push
iret
jg
leave
in
icebp
dec
mov
nop
dec
mov
pop
in
jns
pop
fidivrl
loopew
sbb
or
push
jg
adc
cmpl
out
daa
cltd
test
loope
jg
sub
lods
fimull
hlt
sbb
pop
enter
aas
aam
mov
iret
lods
xchg
jo
repnz
pusha
insb
mov
ljmp
flds
jmp
out
inc
and
mov
xor
jbe
add
pop
dec
jno
fmull
pop
jnp
sub
inc
sahf
sbbl
insb
das
shll
mov
adc
out
xchg
pop
jmp
lods
pop
xor
sbb
outsl
fsubrs
push
push
xor
inc
push
adc
ljmp
gs
lahf
jae
addl
ret
sbb
scas
xor
xor
or
inc
add
cli
push
jnp
push
cld
adc
pop
sarl
xchg
jae
xchg
adc
mov
sub
lods
into
mov
fldcw
sbb
es
mov
test
dec
sub
out
iret
sbb
imul
and
xchg
pop
int3
into
in
fsubs
lret
dec
adc
xchg
mov
cmp
ljmp
mov
mov
xchg
pop
shll
icebp
add
jmp
add
xchg
sbb
fs
jns
in
sarl
popf
jecxz
jle
jb
sarb
sbb
xchg
mov
js
push
push
mov
aas
insb
and
jbe
xlat
xchg
push
cmp
pop
mov
xchg
rorb
aad
lock
fs
dec
clc
jae
pop
dec
shl
into
push
xor
ljmp
jne
std
xchg
aas
sub
xchg
cmp
inc
sub
jbe
xchg
fisubl
in
lret
push
test
sub
bound
nop
divb
cmp
cs
push
cmp
aad
inc
cmp
jno
sub
filds
daa
dec
scas
xchg
and
fs
pushf
mov
imul
sbb
sbb
dec
add
sbb
and
std
pop
popf
lahf
push
call
add
or
cmpb
xor
int
mov
popf
test
lcall
pop
std
mov
stos
pop
jb
loope
xchg
jmp
push
aas
in
in
idivb
sub
cltd
inc
mov
dec
and
mov
test
int
cmpsl
cwtl
and
incb
mov
mov
jb
mov
or
adc
push
cld
and
fadds
push
or
imul
and
xchg
bound
lahf
cmp
jno
sbb
inc
rol
pop
mov
lret
aam
sbb
mov
xor
sub
sub
sub
jl
sbb
xchg
add
jnp
jnp
nop
repz
or
mov
jno
cmpl
pop
enter
and
mov
pop
loopne
movb
in
mov
addr16
xchg
jecxz
inc
clc
call
sahf
testb
cltd
push
pop
inc
pop
mov
xchg
ret
mov
sbb
push
adc
jne
outsb
fisubrs
add
pop
push
repnz
mov
cmp
or
testl
xor
or
orb
aad
in
ret
sub
pop
and
sub
cld
inc
mov
dec
or
dec
int3
roll
xor
dec
push
inc
ret
lahf
cmovne
mov
push
sahf
fiaddl
xchg
fcoml
xor
and
dec
inc
nop
bound
xor
gs
daa
jecxz
mov
push
dec
xor
testb
pop
sti
inc
ud2
mov
mov
sub
mov
test
call
icebp
inc
dec
es
icebp
sub
push
rorb
xchg
int
in
inc
push
ja
and
jae
mov
mov
hlt
pop
xchg
cmp
xchg
pop
cltd
jg
push
jnp
xchg
mov
sbb
into
pop
jo
popf
push
mov
fcompl
add
rorb
aad
imul
fs
aaa
push
mov
or
or
adc
insb
or
jb
fiaddl
adc
aas
push
cmpsl
clc
enter
rcrl
dec
bound
hlt
dec
dec
lods
cmp
mov
mov
out
mov
push
dec
mov
in
scas
xchg
pop
pop
pop
sbb
cmp
je
xor
adc
scas
mov
loope
cli
inc
mov
push
stos
lea
xchg
and
arpl
ljmp
out
decb
and
aad
add
xorb
roll
setg
jns
cli
mov
test
rcrl
cld
push
dec
mov
cli
xor
ret
mov
push
and
fwait
add
mov
pop
sbb
push
jbe
inc
lods
push
inc
clc
or
mov
cmp
cli
sbb
in
stos
loopne
cmpsl
xor
dec
test
out
pop
aad
data16
pop
cmp
je
adc
and
arpl
and
pcmpeqb
nop
xchg
adc
repz
aad
out
cmpsl
lcall
or
addr16
xchg
push
enter
push
lock
xchg
rolb
mov
nop
sub
or
cmpsl
pusha
stos
and
dec
add
mov
stos
roll
cmp
lea
sbb
jo
jge
xchg
imul
cmc
mov
fsubr
mov
mov
sbb
insb
push
add
add
mov
mov
xorl
adcb
xor
mov
mov
add
stos
rcl
dec
fsts
leave
cwtl
arpl
xchg
in
add
out
mov
cmpsb
mov
call
fsubrl
pop
cmp
sub
dec
inc
clc
fwait
or
cmp
pop
adc
lahf
nop
aam
mov
push
imul
inc
cltd
cmpsl
jns
xor
pop
shll
fwait
adc
add
ficompl
mov
and
ss
cwtl
mov
cmc
add
je
sbb
mov
pop
pop
push
lret
imul
sub
inc
xor
les
lock
ret
mov
into
mov
or
add
push
or
sbb
in
bound
aam
push
xchg
adc
hlt
mov
lds
adc
sub
fwait
pop
xchg
mov
pop
dec
push
mov
ljmp
push
imul
and
shrl
int3
sub
arpl
stos
lret
dec
pop
jb
test
add
push
iret
and
in
cli
ljmp
xchg
test
mov
fs
jo
cmp
dec
mov
dec
popf
lret
mov
in
out
mov
sub
ds
js
std
sahf
dec
test
mov
or
sub
popf
fcoml
test
and
cltd
push
cmpsb
push
mov
insl
insb
push
int
push
dec
imul
jns
jp
cmp
hlt
rorb
or
push
ss
ret
mov
es
fmull
xchg
or
ss
les
nop
leave
push
test
inc
push
faddl
test
push
icebp
pop
or
mov
sub
sbb
lret
pop
sub
sub
loope
mov
icebp
into
push
pop
dec
cli
mov
gs
shll
mov
cmpsb
fwait
repz
xchg
lret
xor
inc
push
pop
test
jecxz
or
out
test
andl
mov
mov
push
or
test
cmpsl
bound
movsb
call
sbb
mov
xchg
and
and
mov
test
sahf
jmp
xchg
repnz
mov
hlt
xor
xchg
mov
outsl
and
test
hlt
out
jne
rolb
fsubrl
scas
pop
and
cld
or
pop
jg
cmp
add
xor
sub
arpl
adcl
sbb
mov
adc
dec
shlb
mov
sub
push
cmp
or
xor
cmpsl
sahf
jo
mov
out
test
push
cmc
mov
inc
das
roll
mov
lea
sub
fisttps
scas
push
cmp
adc
xor
mov
push
jg
jb
dec
xchg
enter
xchg
cltd
sub
pop
add
addr16
jge
push
in
je
jmp
fisubs
test
lret
sub
inc
mov
jo
in
mov
xchg
mov
dec
mov
xor
jbe
fcoml
mov
pop
addl
nop
outsb
stos
cmp
dec
mov
out
cld
cmpsb
imul
decl
test
push
cmp
icebp
aad
mov
sbb
jo
pop
push
sub
imul
mov
xor
out
addb
call
and
and
loope
movsb
add
jle
int3
out
sub
shlb
add
scas
loopne
pusha
or
mov
xchg
adcb
sub
call
repnz
movsl
dec
cmpsb
es
sub
ss
add
mov
jmp
mov
cmp
fmull
mov
sar
or
popf
jbe
xor
movsl
mov
dec
add
push
xor
xchg
imul
mov
cwtl
cmp
cmpsl
testb
push
jnp
and
into
push
mov
lods
mov
iret
sub
sbb
stos
xor
mov
xchg
and
mov
pop
xor
call
xor
ljmp
sub
sbb
and
leave
cwtl
xchg
jnp
inc
mulb
in
fldt
cmpsl
int3
cli
sarb
push
xor
sub
int
insb
aam
in
ja
xchg
and
mov
sbb
xor
sub
fdivl
mov
mov
pop
test
mov
test
mov
mov
cld
xchg
add
push
enter
sub
scas
mov
jno
fimull
xor
xorb
icebp
roll
push
fwait
and
xchg
jecxz
inc
gs
popf
mov
movsb
pop
add
and
push
mov
shlb
mov
mov
sahf
jns
inc
jnp
jo
cmp
xor
shll
xchg
sub
pushl
mov
xor
pop
and
sbb
xchg
out
in
stos
mov
ds
ljmp
insl
lret
dec
mov
inc
add
sbb
push
jmp
int
mov
jnp
fnstsw
jmp
repz
mov
clc
mov
aam
test
pop
insl
sub
shll
adc
test
aad
jns
add
cmpsl
call
repnz
sub
fwait
test
in
sbb
fwait
xor
and
mov
xor
mov
inc
mov
out
ret
dec
js
jecxz
arpl
add
mov
sbb
pop
ret
jns
sbb
and
xor
fdivl
push
push
mov
cmp
sbb
dec
add
inc
xchg
add
ljmp
enter
lahf
dec
push
cs
push
mov
sub
inc
pop
lea
mov
loope
ja
fimull
ljmp
dec
jge
dec
mov
cmpsb
je
ret
sarb
lock
lret
adc
outsb
mov
jbe
fsubr
cmc
pop
bswap
fldpi
pop
nop
test
stc
fcoml
sahf
out
shl
repnz
ljmp
sar
lcall
inc
adc
fsubrl
call
adc
stos
fwait
shlb
mov
jp
mov
sub
imul
outsl
in
push
xor
lret
pop
es
cli
fdivrs
icebp
mov
xchg
shrb
xor
fs
ret
jns
or
fcmove
scas
mov
xchg
mov
aaa
dec
nop
push
pop
gs
test
jne
std
sbb
adc
decb
arpl
hlt
leave
adc
mov
add
fidivl
add
sbb
repz
xor
orl
or
jae
mov
mov
out
and
int3
jl
mov
loopne
inc
xor
push
xchg
lods
sbb
es
fldenv
cmp
jnp
inc
xchg
pop
cltd
mov
bnd
sub
cli
dec
xchg
loop
pushf
mov
es
pusha
loope
lock
add
inc
ret
mov
xchg
add
and
hlt
fs
xchg
sub
imul
push
cmp
push
jae
test
pushf
addr16
dec
jno
cltd
enter
push
std
xchg
movsb
inc
xchg
hlt
test
add
into
leave
movb
jo
nop
shll
xor
lahf
jg
push
inc
and
inc
jle
push
das
ljmp
scas
jl
jg
cmpb
push
push
sbb
and
fisubs
push
sti
loop
mov
sbb
out
fiadds
pop
jp
adc
dec
push
push
sub
cmp
jb
push
push
in
fwait
dec
add
aaa
jbe
in
aaa
jle
pop
jg
iret
dec
nop
dec
jbe
xor
and
shrb
mov
popa
jnp
jecxz
xchg
pop
scas
mov
adc
inc
aam
sub
inc
adc
cmp
mov
mov
inc
les
inc
mov
mov
loope
enter
pop
pop
fnstsw
pop
into
stos
fs
xor
xchg
pop
xchg
nop
mov
adc
and
inc
sbb
pusha
les
nop
stos
adc
rol
inc
enter
xchg
stc
outsb
ret
xchg
fldl2e
sahf
cmp
cmp
lret
dec
aam
in
pop
xchg
sbb
std
pop
cmp
dec
stos
add
cld
and
mov
mov
xchg
xchg
and
or
push
mov
fists
in
jmp
outsb
clc
int3
cmp
inc
push
mov
mov
in
xchg
repz
push
in
jp
sbb
mov
xlat
in
sbb
cs
or
in
out
inc
iret
jae
mov
dec
movsb
add
push
pop
xchg
rorl
mov
or
jl
out
call
fmuls
shlb
jbe
pop
push
add
popa
lock
pop
loope
sahf
aam
nop
push
mov
cmp
subl
out
mov
push
mov
mov
inc
clc
adc
test
lods
mov
sbbl
push
shr
pop
test
in
test
nop
adcb
and
push
sub
xchg
mov
fnsave
push
dec
xor
pop
cmpsl
js
add
adcb
jns
cmp
clc
ja
jle
pop
xchg
addl
and
sub
test
std
jp
cmpsb
push
adc
xchg
pop
xor
cld
xchg
out
stc
dec
fnstcw
ljmp
inc
and
movl
js
xchg
cli
enter
push
pop
mov
sbb
pop
cmp
enter
sub
dec
adc
mov
dec
enter
insb
push
xor
test
insb
mov
or
daa
js
inc
enter
sub
push
mov
jmp
jnp
andl
sub
pusha
mov
cmp
adc
pushw
movsb
and
xor
inc
inc
adc
addr16
lret
xchg
gs
popf
dec
lock
mov
mov
fnstenv
arpl
mov
sub
fmuls
push
sti
mov
inc
and
outsb
adc
scas
mov
movsl
lea
add
jle
jb
pop
push
popa
popa
std
ja
nop
add
pop
test
out
scas
std
je
push
cld
shll
cmp
in
mov
jns
jo
jne
mov
and
rcll
mov
push
xlat
les
mov
add
add
add
insl
mov
mov
or
pop
lea
add
iret
fs
push
jecxz
mov
out
mov
ret
mov
xor
sti
cwtl
mov
sub
aas
idiv
cmpsb
stc
fidivrl
and
ucomiss
js
mov
loope
pop
std
xchg
pushf
mov
and
imul
pop
add
pushf
dec
mov
or
stos
dec
push
and
push
pop
mov
data16
sbb
rcl
cmc
movsl
pop
xlat
loopne
mov
mov
test
xchg
or
ret
jno
pop
xor
repz
out
jge
ret
inc
pop
push
xor
jns
fdiv
cs
and
sub
fnsave
push
xlat
xchg
nop
iret
dec
add
sub
je
fstpt
and
xor
sbb
jl
cmpsl
xchg
mov
ret
push
inc
lahf
das
add
cs
stc
dec
jp
ds
or
in
lret
scas
je
mov
mov
mov
loope
mov
push
inc
mov
fstl
mov
or
push
sbb
and
xor
ljmp
ds
and
mov
movsl
push
mov
or
insl
adc
or
stc
mov
mov
leave
mov
in
outsl
add
mov
lret
adc
push
sbb
out
adc
in
fisttpl
rcrb
lcall
loop
xchg
dec
cld
movsl
sub
icebp
scas
pop
orl
pop
ds
sti
dec
sub
push
aas
scas
pop
mov
into
or
insb
cmpsb
outsl
outsl
jmp
pop
es
jae
stc
mov
mov
add
fldl
data16
push
ret
jb
test
xchg
adc
jne
jb
roll
sub
adc
xor
adc
pusha
inc
addl
xchg
in
xor
mov
stc
popa
xchg
orb
jnp
cmp
jbe
repnz
jecxz
sbb
es
lcall
in
cmp
movsl
xchg
insb
or
cli
out
push
jno
jae
test
cmpsb
or
sbb
mov
or
xlat
jle
jno
jg
jp
push
jle
jp
ret
sub
ret
add
push
sub
add
push
cmp
nop
outsb
scas
insb
mov
xchg
sub
inc
xchg
imul
mov
jb
subl
insl
hlt
or
adc
sbb
in
push
loopne
js
mov
lcall
xorb
sbb
mov
pop
xchg
ret
loop
sub
inc
lods
loopne
cmp
cmpsb
frstor
mov
pushf
fimuls
insb
call
jg
inc
dec
test
insb
adc
imul
stos
popf
in
enter
jle
xchg
test
shl
jge
jnp
jmp
andb
int
cltd
rorb
xchg
xor
xor
or
arpl
mov
out
cmp
ficompl
lods
inc
sar
notb
inc
xchg
xchg
mov
jp
push
test
inc
mov
xor
lock
mov
outsl
xchg
pop
jmp
sbb
jle
xchg
stc
ret
fiadds
mov
clc
xchg
sub
sbbb
or
popa
mov
jle
mov
push
xchg
add
cmp
sub
popa
cmpsl
cmpsb
stos
jl
push
jnp
jbe
mov
imul
push
fs
mov
fwait
jno
pop
xchg
cmc
push
xor
mov
push
les
sbb
push
jmp
outsl
sub
fwait
subb
rcl
push
hlt
pop
xor
in
in
sbb
imul
inc
mov
jl
xor
mov
icebp
or
clc
xor
gs
and
fs
cmp
hlt
mov
adc
or
jnp
jns
cmc
es
shrb
ret
notb
repnz
cmp
xor
and
loopne
mov
lcall
add
daa
xorb
ljmp
rorl
jno
mov
inc
out
insb
xor
xlat
andb
adc
or
mov
lcall
insl
popf
pop
cmp
or
cli
fstpl
sub
mov
cld
xchg
int
add
mov
sarl
arpl
pop
les
outsl
es
out
push
dec
mov
sti
roll
mov
in
dec
or
test
jg
movsb
jp
jmp
jle
shlb
inc
mov
adc
in
pcmpgtd
popf
xor
sbb
cmp
dec
in
test
xorb
loopne,pt
stos
lcall
hlt
fadds
add
and
std
xchg
test
xor
fidivrs
mov
add
jle
pusha
dec
out
imul
stc
xchg
fs
fisubl
int3
mov
mov
idiv
adc
pop
leave
lock
jne
sti
mov
cld
xor
das
orl
xchg
scas
pop
mov
push
mov
test
cli
xchg
lcall
hlt
sub
jb
ficompl
mov
xlat
push
idiv
xchg
xor
push
imul
enter
xor
or
ds
lret
pop
aad
fstpt
xor
add
shrb
xor
fadds
data16
sbb
fnstenv
jno
jae
mov
adc
out
adc
inc
mov
xchg
rorl
mov
lds
mov
cmp
jmp
mov
popa
cmpsb
cmp
jp
cmp
cltd
sub
sbb
mov
mov
inc
fcompl
pop
adc
xchg
pop
xchg
jecxz
and
int3
cmpsb
bound
push
fs
in
push
popf
add
andb
popf
ljmp
mov
cmp
xchg
daa
fidivl
mov
lds
mov
enter
test
daa
mov
in
adc
addr16
fwait
scas
pop
dec
jnp
sub
cmpsb
lcall
push
push
scas
dec
gs
xchg
or
decl
pop
rcll
pusha
xchg
repnz
mov
cs
jns
fbstp
sub
inc
out
sub
mov
mov
xchg
inc
cltd
inc
pop
arpl
mov
mov
mov
mov
and
lret
popf
in
dec
or
xor
add
stos
cmpsb
aad
mov
imul
cld
mov
outsb
inc
ss
ss
test
xor
out
in
hlt
and
push
xor
das
arpl
decl
adc
cld
jg
loope
sbb
xor
enter
pop
inc
jecxz
mov
fcmovnb
rcrb
popf
pop
cmpsb
sbb
std
jge
test
xchg
pop
mov
push
lret
daa
lea
cmc
cmpsl
push
stos
fldenv
xchg
fildll
nop
jnp
mov
aas
stos
mov
jge
mov
sbb
int3
std
out
mov
mov
cmp
iret
and
jae
push
dec
mov
adc
pop
jae
negl
sub
mov
rcll
xchg
cmp
xchg
movsb
mov
out
push
and
in
sub
xchg
movsb
mov
inc
test
int3
push
inc
ja
and
bnd
add
or
lock
popa
and
test
aam
xor
idivb
jo
ret
inc
scas
bound
mov
xchg
sub
ja
mov
or
fwait
mov
mov
sub
cmp
adc
push
sbb
popa
bound
adc
jns
out
pop
mov
loopne
adc
xorb
jb
xor
inc
jnp
inc
mov
pop
jl
or
add
push
and
jge
pop
shll
sti
icebp
and
push
fisubs
cmp
xchg
jmp
jns
out
fmulp
mov
and
daa
rorb
cmpsl
and
int
mov
jg
test
pusha
sbbl
xorl
lods
inc
xlat
out
hlt
xchg
in
mov
inc
xor
ret
pop
faddl
ljmp
or
cmp
rcl
vunpckhps
dec
outsl
fnstenv
out
fisttpl
fcoms
mov
xchg
rorb
push
mov
and
mov
subl
movsl
cmp
and
hlt
les
mov
sbbl
and
dec
push
jge
pusha
iret
adc
lods
pop
cmpsb
sbb
xor
aas
sub
dec
xchg
jl
cmp
stos
stc
popf
push
stos
xor
push
ja
clc
push
leave
popa
xor
or
xchg
pushl
scas
mov
incb
ljmp
scas
ja
mov
jmp
sbb
cmp
leave
test
inc
gs
stc
and
xchg
fisttps
jle
sbb
pop
and
sbb
cwtl
ret
es
dec
jno
jge
iret
jo
or
jae
lock
dec
in
adc
pop
xchg
adc
or
mov
xchg
push
test
pop
bound
or
iret
stos
sbb
sti
mov
mov
xchg
mov
xchg
ds
sarb
pop
jecxz
dec
pop
push
dec
cmpsb
xor
imulb
lcall
cmp
xchg
inc
daa
jl
cmpl
adc
adc
jno
leave
jp
imul
popa
dec
loopne
mov
push
out
jmp
fwait
es
shlb
iret
sarl
jge
adc
adc
inc
jnp
ffreep
add
popa
pop
xor
jno
fdivp
test
dec
out
jnp
mov
pusha
shl
mov
pop
ret
aam
rclb
fwait
ss
jno
cmp
outsb
mov
popa
imul
dec
push
pop
repz
mov
xor
ljmp
test
int
dec
sub
xorl
or
xchg
xor
int
shlb
lret
ret
std
inc
fcompl
mov
popa
push
push
pop
aad
pop
lock
or
in
sbb
add
sub
addl
adcb
mov
jp
sbb
dec
gs
adc
dec
xlat
sbb
inc
mov
adc
out
in
mov
push
push
aad
add
mov
fs
out
cld
mov
and
mov
xchg
mov
inc
dec
dec
fs
das
push
and
mov
jmp
push
jl
xchg
adc
mov
xorb
sub
mov
xchg
imul
sub
jecxz
popf
cmp
mov
popa
std
test
popf
neg
inc
lcall
mov
adc
test
shrl
and
test
mov
lods
add
sub
dec
xchg
outsb
or
or
out
int
cwtl
or
cmpsl
jae
shlb
mov
push
jns
sarb
mov
ficoml
cwtl
sahf
or
test
cmp
call
shlb
mov
mov
test
cmc
adc
pop
xchg
mov
adc
cld
inc
pop
dec
sbb
fisttpl
dec
leave
pop
rcl
xor
sbb
jbe
outsl
js
ror
icebp
and
mov
movsb
mov
addr16
push
and
cmp
add
pop
std
addl
dec
xor
inc
jp
cld
mov
mov
leave
ret
jl
xchg
cmp
mov
mov
mov
dec
pushf
int3
inc
mov
jne
sti
cmc
leave
adc
sub
lods
xchg
fsubs
ret
test
jb
xchg
rcrb
into
idiv
hlt
push
mov
imul
es
cmp
fistps
push
jecxz
in
pop
push
sub
addr16
xchg
mov
int3
rcrb
jns
push
stos
push
sti
cmp
ja
mov
mov
dec
inc
sub
dec
push
sub
js
test
aam
and
adc
pop
lods
sub
mov
inc
int3
sub
push
ja
jmp
shll
test
adc
push
mov
sbb
addl
mov
inc
mov
or
cmpl
inc
popa
sub
add
es
mov
je
nop
fwait
dec
mov
push
idivb
mov
sahf
push
iret
stc
cmp
sbb
cli
shl
js
in
inc
pop
jo
inc
mov
sti
repz
add
andb
scas
pop
push
jle
popa
sbb
scas
std
ja
dec
cmpsl
jecxz
data16
add
cmc
xchg
fstps
xlat
mov
mov
pop
mov
hlt
adc
rcl
bound
cwtl
push
dec
xchg
pop
insb
andb
xchg
or
and
add
aaa
cli
mov
sarb
neg
add
orb
push
and
sbb
inc
and
fdivrp
in
sbb
sti
je
popf
rolb
mov
push
fneni(8087
pop
scas
gs
xlat
mov
adc
loope
sbb
das
cltd
in
in
scas
dec
in
xchg
add
add
loopne
repz
inc
mov
pop
test
in
push
mov
lret
nop
aam
adc
jge
xchg
jecxz
xor
dec
imul
dec
aam
andl
xchg
int
push
rclb
pop
mov
stos
in
jne
shr
lds
pop
push
jns
push
push
bound
shll
push
adc
xchg
ds
mov
xchg
sbb
lds
mov
sbb
leave
out
lea
push
dec
out
pop
pop
push
scas
std
clc
cli
rol
jp
sub
push
aam
repnz
scas
cli
fsts
inc
loopne
cwtl
cmp
xchg
xchg
aam
push
popa
sbb
or
push
xor
jns
mov
push
mov
adcb
les
mov
mov
xchg
jbe
xor
lods
pop
dec
and
xchg
pop
jmp
bts
fimull
fisttpll
movsb
loopne
push
inc
inc
push
cmc
outsb
lret
push
sbb
sbb
das
dec
shr
cld
jl
and
cmc
or
ret
dec
cmp
subl
pop
adc
add
insb
inc
jno
bound
add
loope
fnsave
pop
stos
mov
dec
popa
dec
xchg
push
mov
mov
enter
bound
jo
fsubl
lods
and
lock
daa
and
int
push
adc
push
out
jmp
jo
cmp
mov
std
out
add
pop
push
ret
insb
nop
dec
lret
and
jno
mov
push
pop
inc
mov
dec
push
push
mov
jmp
add
mov
xor
xor
bound
in
ja
fcomp
js
fsubl
and
add
xor
pop
mov
shll
flds
je
loop
mov
inc
mov
call
in
in
cmp
gs
in
bnd
mov
mov
xchg
pop
scas
jne
push
cmp
jecxz
int
lcall
add
fstl
repz
cmpsb
incl
adc
ljmp
sbb
mov
fwait
mov
mov
jmp
ret
lret
std
pop
xor
cmp
stc
adc
push
fs
leave
or
fnsave
ss
sub
pop
iret
stos
sbb
or
pop
or
pushf
cli
push
adc
xor
out
lods
push
jns
xor
call
mov
xchg
mov
shl
stc
mov
test
loopne
add
push
jmp
lods
add
gs
or
mov
sub
jns
call
movl
mov
xor
dec
aas
adc
adc
push
jae
and
cmp
in
add
das
adc
scas
int3
inc
mov
loopne
mov
mov
cmpsl
or
inc
pop
push
loop
adc
inc
scas
jo
pop
cltd
int3
xor
mov
xchg
xorl
or
outsb
or
mov
jecxz
fwait
inc
movsl
add
pusha
xchg
jge
adcl
gs
movsl
cld
cmp
sbb
loop
sub
movsl
lds
test
ret
sbb
je
cmp
cltd
xor
xchg
fs
sbb
imul
mov
or
add
andl
stos
and
dec
sub
das
jns
inc
je
adc
inc
or
xchg
lcall
movsb
cld
push
in
popf
sbb
daa
ja
mov
pop
stos
movsl
mov
inc
sbbb
jg
dec
pop
ret
nop
loop
adc
in
jnp
cs
daa
or
and
xchg
pusha
fstps
mov
lock
pop
and
mov
push
arpl
fcomp
out
push
mov
in
sti
push
mov
in
sbb
adc
cli
lcall
int
out
hlt
jne
push
mov
ret
jle
imul
imul
pop
push
aam
push
les
fsubp
sbb
pop
push
xchg
pop
lea
jbe
push
mov
lods
sar
xor
inc
fsubrs
jmp
out
cmpsb
pop
mov
cmp
out
pop
xchg
pop
cmp
push
cld
inc
sti
sub
call
cmp
fsubl
add
je
mov
mov
pop
sub
pushf
dec
clc
std
dec
push
ds
cltd
sub
xchg
push
cld
cs
xor
mov
insl
push
stc
addr16
mov
jnp
out
fstpl
sarb
jo
rcl
jo
shrl
jmp
ret
int
inc
aaa
cld
out
xor
sbb
inc
inc
repz
push
jb
inc
adc
pop
push
pop
stc
jne
sub
inc
icebp
xchg
mov
jp
mov
lock
or
push
mov
ja
lea
sbb
mov
push
or
lock
lcall
jbe
idiv
pop
mov
inc
cmc
in
gs
icebp
xor
sub
adc
push
add
xchg
aaa
sbb
fwait
dec
aaa
mov
inc
cmp
les
jo
aad
sti
mov
inc
orl
jp
int
inc
shll
je
and
or
das
mov
xchg
and
mov
gs
jo
mov
ficomps
push
mov
push
mov
stos
std
into
mov
insl
movsb
pushf
movsl
dec
cmp
jb
or
jnp
mov
mov
loop
scas
lret
xchg
inc
repz
adc
sbb
and
mov
push
outsb
loopne
pop
xchg
jecxz
adc
roll
in
mov
andl
dec
pop
pop
and
aaa
cs
or
repnz
jbe
lock
mov
test
jae
sbb
pop
insb
dec
out
je
lcall
lds
fsub
stc
pop
or
mov
pop
lods
add
mov
shll
imul
push
jae
aam
lret
cltd
hlt
loope
jl
scas
stos
cmp
pop
mov
mov
movsl
cmpsb
fs
ds
and
push
pop
and
mov
pushf
adc
pop
pop
into
push
cmp
add
mov
icebp
adc
lods
lock
jae
int3
pop
ljmp
addr16
push
stos
adc
mov
push
cmc
jns
xchg
pop
xchg
sub
pushf
cli
add
sbb
pop
mov
adc
iret
cmp
sub
push
mov
sbb
sub
push
adc
popa
adc
stos
lret
dec
add
lock
loope
ss
mov
pusha
mov
dec
scas
sub
mov
stos
insl
dec
and
xor
insl
ljmp
sub
dec
stc
mov
inc
xlat
jecxz
push
call
cmc
es
mov
outsb
mov
add
nop
outsb
cmp
push
and
aad
cmc
sub
orb
ja
xchg
push
fstpt
xchg
cltd
nop
enter
filds
clc
add
or
cmpsb
mov
cmp
jno
mov
jmp
jmp
pop
pop
in
dec
das
xor
loope
sbb
loope
ret
nop
mov
out
pusha
xchg
movsl
sub
mov
les
cmp
add
in
or
cmp
cmc
faddl
dec
pop
out
sbb
mov
cmp
and
je
daa
gs
out
cmp
dec
xor
xor
hlt
insl
int3
icebp
iret
or
cltd
sub
and
fwait
jo
add
fsubrs
sub
icebp
sub
jb
jge
dec
mov
icebp
stos
jns
mov
lea
mov
xrelease
mov
divl
inc
mov
mov
aam
stos
mov
leave
stc
xor
xchg
pop
pop
mov
pop
outsl
in
add
out
nop
fwait
push
cltd
dec
std
sbb
xchg
mov
inc
add
mov
pop
fnclex
mov
fidivs
popa
test
and
inc
sub
out
mov
mov
mov
ds
shr
rcr
adc
pop
push
jb
outsl
xlat
lods
mov
int
in
clc
imul
xlat
xchg
test
loope
xchg
pop
adc
dec
std
xchg
in
xor
xchg
mov
sahf
and
sti
cmp
push
gs
out
bound
xor
jne
pop
sbb
pop
adc
cmp
pop
popf
int
cmp
xchg
pop
sbb
mov
clc
fistpll
test
and
xchg
insb
xor
jl
jo
int
and
stc
inc
incb
lahf
jns
xchg
inc
mov
mov
inc
pop
adc
sbb
pop
shlb
mov
mov
or
and
mov
faddl
xchg
sahf
stos
jecxz
mov
push
dec
andl
mov
je
and
gs
ret
pushf
add
sbb
sbb
mov
or
sbb
mov
lock
enter
cwtl
add
icebp
push
xor
xorb
dec
dec
pop
test
pop
mov
stc
cmp
nop
callw
and
jnp
inc
mov
negb
jg
js
call
add
stos
xor
dec
pop
daa
cli
xchg
jecxz
push
mov
jge
add
push
sti
in
jbe
data16
cmp
sahf
jle
and
pop
ds
lods
pop
push
test
sbb
cmp
inc
jne
cwtl
pop
outsb
jmp
dec
lea
dec
jge
jg
and
or
sub
out
xchg
push
add
mov
sbb
jno
std
or
jecxz
sub
in
and
cmc
cli
ret
in
fwait
and
add
xor
dec
adc
out
mov
js
inc
dec
std
xor
fsub
shrb
inc
mov
ret
add
out
in
xlat
xchg
add
js
test
in
xor
popa
jp
mov
pop
xor
inc
and
push
ficoms
sbb
repnz
inc
outsl
adc
mov
mov
out
lods
bound
mulb
mov
cmpsl
jo
in
jge
les
popf
sub
and
xor
dec
repnz
mov
pop
outsb
mov
js
inc
xchg
fmull
scas
js
xor
jo
lods
xchg
xchg
sbb
ss
cmp
out
lods
imul
mov
das
jecxz
in
lahf
ret
loop
jno
std
mov
or
mov
adc
jecxz
mov
jne
je
push
dec
les
nop
sbbl
cltd
popa
sub
mov
cltd
fisttpll
pop
rorb
mov
or
imul
iret
sub
push
xor
dec
push
jl
xor
sahf
cwtl
les
enter
sub
mov
fxch
int3
jp
addr16
dec
mov
js
imul
sahf
addb
sbb
popf
nop
out
mov
daa
pop
or
pusha
lcall
push
fmul
dec
jnp
repnz
lcall
xlat
xchg
mov
ja
and
push
inc
outsb
js
mov
idivb
cmp
nop
mov
shrb
adc
leave
fildll
je
push
data16
lret
mov
dec
jl
sub
arpl
pop
out
les
push
adc
or
rorb
negb
repz
cld
cs
in
cld
insb
sub
mov
sub
sub
push
mov
mov
dec
xchg
jae
in
xchg
dec
sbb
mov
cltd
jmp
arpl
cmpsl
inc
cmp
xchg
push
stc
mov
cmpsb
loope
push
scas
je
or
xor
xchg
lcall
sub
push
scas
fsub
adc
jb
xlat
or
fs
subb
jmp
ja
cpuid
test
int3
adc
and
dec
leave
hlt
flds
xchg
jl
push
pop
mov
movsb
adc
movsb
lcall
lds
mov
movsl
pop
mov
in
dec
jge
inc
stos
fld
nop
inc
mov
stos
lock
into
mov
xchg
sub
sub
xor
adc
mov
add
js
lock
cmp
xchg
mov
jns
dec
mov
mov
cmpsl
mov
jnp
int
xchg
popf
pushf
push
ljmp
data16
push
lcall
pop
jecxz
sub
aas
ja
push
fs
cmpsl
sbb
fwait
data16
or
leave
loopne
nop
xchg
add
mov
cld
xor
clc
pushf
add
mov
mov
mov
sbb
out
sub
push
ds
lds
fs
cmp
and
pusha
notl
cltd
addl
sub
movsb
lret
iret
inc
sbb
xchg
fwait
inc
orb
xlat
cld
mov
inc
xor
out
sbb
pop
mov
xchg
pop
hlt
and
push
scas
ja
or
mov
in
push
arpl
repnz
imull
xchg
push
in
push
cli
rolb
sub
mov
dec
stos
inc
mov
mov
fidivrs
in
aaa
add
aam
popf
fsubrs
mov
movsb
or
mov
mov
movsl
jmp
fisttpl
xlat
push
insb
jecxz
mov
mov
mov
jecxz
pop
enter
cmp
cmp
and
std
lret
mov
ljmp
fadds
sub
mov
nop
cld
lds
dec
imul
icebp
jl
orl
pop
inc
dec
popa
or
push
lds
fwait
adc
pop
je
cmp
fwait
int
mov
pop
sti
test
out
or
ret
adcl
or
mov
sub
dec
dec
ret
push
mov
inc
icebp
inc
dec
jg
mov
arpl
pop
and
idivl
mov
sbb
mov
cmc
iret
scas
pop
xchg
and
shll
adc
testb
push
nop
sbb
add
xor
loop
or
add
dec
out
xchg
movsb
push
lcall
mov
pop
scas
mov
sub
mov
dec
sub
shrb
stos
sub
adc
mov
push
inc
test
or
fmul
pop
push
push
popf
movsb
pop
stc
out
idivb
xor
jae
adc
dec
xor
adc
std
xorb
enter
mov
xchg
jne
in
push
mov
mov
arpl
inc
loop
inc
pusha
jae
loop
ficomps
push
shll
sbb
pushf
dec
xchg
add
push
mov
jno
adc
js
pop
icebp
xor
scas
xor
imul
dec
cmp
lods
leave
sub
imul
dec
mov
cmp
push
sbb
stos
fs
xor
or
mov
or
mov
mov
imul
addr16
ds
decb
addb
ds
cld
sbb
pop
cmc
mov
aas
lahf
movsb
mov
add
jge
mov
fdivl
in
stos
add
jno
sahf
mov
xchg
lods
mov
pop
mov
cmp
jp
sub
pop
jge
adc
adc
aad
adc
rol
fstp
mov
lret
shlb
xchg
and
and
add
push
ret
jp
fwait
negb
or
dec
movsl
pop
xchg
jns
scas
aad
add
lods
out
in
mov
repnz
or
and
ja
push
out
xchg
ljmp
xor
std
xchg
xor
sbbl
stc
sti
or
aam
xor
and
push
and
aad
mov
xchg
pop
dec
sbbb
xchg
aaa
call
int
std
popa
jae
or
jne
in
cmp
xor
test
std
mov
mov
jmp
inc
int
popa
aam
push
testb
or
add
and
and
ljmp
xchg
imul
inc
imul
push
push
inc
sub
mov
es
ljmp
pop
mov
add
sub
pop
mov
sub
leave
fldz
fsqrt
pop
mul
sub
xchg
les
adc
test
jmp
into
hlt
add
jo
sbb
mov
mov
mov
lcall
scas
into
fisttpl
incb
out
aaa
repz
insb
pop
xchg
hlt
in
fwait
xlat
jle
inc
bnd
inc
xlat
sbb
xorb
das
outsb
cwtl
pushf
or
jge
push
scas
push
adc
mov
orb
aam
ja
es
cmpsb
into
insb
add
flds
xorl
imull
hlt
mov
mov
mov
pusha
mov
pusha
inc
sarl
push
add
add
orl
iret
fldenv
xchg
pusha
movsl
loopne
jno
push
ljmp
adc
iret
xchg
pop
push
xchg
lcall
enter
inc
and
mov
iret
push
lods
pop
dec
push
mov
cmpsb
jp
xchg
inc
pop
jmp
int
in
xor
test
inc
mov
add
pop
jecxz
fldcw
das
sbb
pop
fbstp
adc
std
pop
push
cwtl
xchg
jp
js
aas
loope
fwait
pusha
movsl
ljmp
inc
pop
sub
test
lret
or
stos
push
dec
lret
lea
cwtl
lods
rcrb
mov
adc
stc
and
enter
jmp
pop
fs
adc
mov
aad
popa
mov
fucomi
mov
xchg
sub
popf
icebp
cmp
mov
fs
rorl
push
lcall
fsubrl
or
popf
add
insb
pusha
xchg
sub
and
xchg
xchg
pop
repnz
jne
cmp
push
clc
adc
add
xlat
in
ret
es
and
jge
stos
xchg
addr16
lods
out
or
mov
js
dec
jge
mov
scas
xchg
jns
dec
outsb
hlt
sub
sub
cmc
jle
fcoms
lods
popf
xchg
mov
add
subb
hlt
cmpsl
push
xor
ss
push
in
push
cld
movsb
rorb
mov
jb
pushf
jne
movsb
loop
mov
jg
or
cmp
fistpl
push
movsb
leave
jmp
imul
mov
adc
ja
stos
inc
add
sub
dec
push
rorb
cmp
sbb
insl
out
out
and
jb
lods
shl
ret
aaa
sbb
jg
jp
mov
fimuls
and
xor
and
xor
jl
push
mov
imul
pushf
in
sbb
out
cmp
divl
mov
add
movsb
mov
pop
fisttpll
js
inc
movsl
pushf
and
pop
cltd
jnp
sarb
lods
lret
imull
jp
pop
rcl
mov
xchg
repz
movsl
rclb
jb
or
xchg
loope
dec
or
xchg
pusha
cwtl
sbb
adc
fcomp
jge
mov
roll
movsl
sbbl
or
mov
sbb
pop
sbb
or
jmp
xor
fdivrs
or
sbb
addb
inc
rcrl
push
or
xor
test
sub
mov
hlt
cltd
addr16
cmp
pop
push
or
add
jp
cmp
mov
incl
jns
dec
cmpsb
mov
aad
movsl
pop
pop
push
cmc
mov
inc
scas
repz
arpl
out
mov
xor
repz
cmp
mov
mov
ret
inc
leave
cld
aam
jb
or
sub
call
aam
jb
pop
rorl
aad
jo
aam
mov
mov
cmc
inc
rclb
pop
test
movsb
imulb
scas
test
mov
xchg
xor
enter
std
cmpb
add
add
and
xor
les
mov
test
fisttps
js
mov
ret
movsb
daa
sbb
mov
mov
addr16
loopne
es
nop
pusha
push
xor
xor
cmp
js
in
mov
arpl
inc
fptan
aas
lock
fcompl
jns
dec
lods
bound
add
fsub
mov
add
outsb
push
aas
rcll
pop
cld
popf
rorl
in
dec
enter
inc
cmp
xor
scas
pop
scas
andnps
mov
pop
add
test
xchg
mov
stos
sbb
rol
xor
fld
fdivrl
pop
mov
mov
int
cmpsl
cli
sbb
cmp
sub
in
aam
rcll
cmpsb
scas
test
leave
pushl
push
daa
dec
ja
xchg
insb
adc
data16
scas
outsl
faddp
cwtl
out
jg
leave
sub
jle
enter
inc
pushf
movsb
int
mov
mov
clc
call
int3
movsb
and
or
arpl
lods
aad
rcll
lahf
cmpsb
and
or
cmp
in
arpl
add
ret
push
in
mov
jns
cmp
mov
lods
jne
fstpt
push
sti
push
test
cmpl
arpl
mov
and
in
inc
jne
cmp
aad
sahf
add
add
enter
xchg
mov
mov
inc
adc
lds
and
xchg
test
sub
sbb
ja
cmp
or
add
xor
out
mov
inc
pop
rolb
jmp
test
mov
lahf
mov
mov
inc
xchg
mov
inc
cld
in
push
mov
std
xchg
mov
mov
push
lret
out
xor
pop
scas
sbb
or
test
xchg
stos
ja
out
aad
xchg
dec
out
push
gs
xchg
mov
cmc
ss
repnz
out
or
cmp
bound
push
cwtl
aad
mulb
pop
add
dec
jbe
inc
shll
mov
loop
movsl
mov
push
fisubrl
dec
fstpl
cmp
ficoml
test
gs
xchg
mov
pop
rorl
xchg
aad
insb
insl
adc
std
sbb
cmpsb
test
mov
je
mov
mov
push
dec
sub
fcoml
repz
hlt
sbb
push
ja
loopne
pop
pusha
aas
dec
aas
push
mov
mov
test
xchg
scas
jl
and
insl
inc
repnz
outsb
inc
push
and
or
shlb
test
fldenv
je
mov
sub
mov
or
dec
push
test
pop
scas
mov
stc
cmpsl
enter
ds
adc
adc
icebp
xchg
lret
stos
jnp
lret
cmp
cmp
inc
and
sub
test
cmpsb
push
pop
mov
push
faddl
pop
jg
jl
mov
aaa
mov
inc
lahf
adc
scas
jecxz
xchg
xchg
in
xchg
jns
mov
das
je
cmp
push
popf
xorl
mov
movsl
or
xchg
popf
icebp
test
es
aad
xchg
xchg
fimuls
mov
lahf
xchg
sarl
mov
add
data16
xor
push
add
xlat
xchg
fcompp
repnz
push
leave
jl
fnstsw
cld
mov
das
push
in
inc
clc
jnp
mov
cmp
fucomi
decb
xchg
loop
je
rorb
lods
imul
add
scas
pop
movsb
sti
jp
sbb
and
ret
test
scas
add
dec
push
cmpsb
or
ss
in
imul
clc
xchg
pop
nop
jnp
aas
or
lcall
test
push
push
jp
popf
bound
adc
mov
adc
add
test
xor
jno
push
adc
lock
decb
sub
lcall
sbb
int3
push
mov
xchg
sub
stc
xor
push
das
rol
push
iret
dec
push
pop
or
ljmp
sbb
sub
add
fldcw
pop
aaa
add
repnz
mov
pop
movsl
sbb
das
adc
js
les
test
mov
push
push
xchg
xchg
stos
jnp
dec
cmp
sahf
sahf
fildl
mov
push
lahf
push
mov
mov
sbb
leave
jbe
leave
in
pop
xchg
dec
mov
lods
or
lcall
lock
add
push
jns
les
hlt
mov
mov
scas
loopne
notb
adc
fucomp
adc
fsubrs
cmp
or
subl
and
sub
adc
xchg
xchg
mov
cmpsl
inc
test
ffreep
je
xchg
adc
pusha
das
inc
movsl
js
push
lret
dec
mov
aam
mov
les
fdivrs
xchg
mov
cmp
pop
fst
lret
jmp
into
and
push
push
add
push
jnp
xor
scas
push
ljmp
dec
xlat
pop
fnsave
jae
adc
jmp
lds
mov
loope
cmpsb
add
push
hlt
push
loop
imul
push
inc
mov
mov
add
sbb
xchg
leave
mov
lea
or
movsl
pop
popa
mov
ja
in
mov
arpl
push
push
aad
add
nop
sbb
into
pop
scas
test
dec
mov
test
mov
ss
and
jl
repz
sub
scas
scas
add
in
mov
mov
add
or
and
push
popa
jl
mov
fsubs
movsl
je
mov
stos
inc
dec
bound
mov
jp
xor
rolb
pushf
negl
sbb
mov
jo
cmp
adc
enter
out
pop
xorl
addr16
stos
imul
mov
sub
mov
mov
cmp
movb
mov
adc
push
cmp
xchg
jge
imul
jne
or
dec
rorl
in
mov
jmp
mov
fdivs
or
fs
inc
gs
cmp
xchg
mov
int
cmp
add
pop
jg
lea
popa
and
dec
lahf
out
jle
mov
out
sbb
aaa
sbb
mov
xor
fisttpll
out
addl
popa
add
rorb
fsubrl
xor
in
outsb
dec
mov
out
imull
add
xor
mov
cmp
jl
popa
addr16
cmpsl
adc
or
pop
push
jns
adc
adc
pop
xor
sub
xor
movsl
pop
call
test
push
das
xchg
jecxz
cmp
and
and
jns
lret
stc
data16
jecxz
pusha
lods
inc
sub
jnp
adc
loop
stos
sbb
in
out
test
sub
pop
adc
nop
ljmp
jg
xor
xor
sub
shlb
mov
out
data16
dec
mov
cmpl
nop
shll
mov
jp
fnstcw
mov
sub
fldl
lcall
push
ds
and
test
or
xchg
sbb
aaa
rcrb
lret
jmp
mov
inc
jl
pop
in
mov
lds
push
jo
rcr
ja
test
clc
xor
out
mov
mov
fisubs
scas
mull
loope
mov
shrl
mov
int3
mov
sub
push
push
sbb
push
rol
sbb
mov
jne
jl
cmp
fiadds
pop
or
or
repnz
xchg
mov
hlt
mov
jle
dec
cmp
adc
pop
das
into
xor
sub
sub
mov
push
mov
mov
add
adc
fs
fisubl
js
pop
sbb
cld
jmp
outsb
pusha
nop
scas
inc
push
sub
inc
rorl
into
arpl
gs
test
and
lods
insl
or
popf
test
push
in
dec
inc
cmp
mov
xchg
xor
jg
mov
cmp
pop
imul
pushf
stos
sub
xor
testb
stos
mov
mov
add
sub
inc
cmp
sbb
jecxz
pop
pusha
jae
mov
or
mov
aas
dec
pushf
mov
xor
fisttps
jmp
adc
rcll
jle
cmp
faddl
adc
mov
add
sub
je
into
fs
movsl
hlt
jne
jns
pop
add
loope
jnp
pusha
rorb
inc
fs
adc
lcall
jb
cld
cmc
or
jae
push
xor
clc
repz
test
and
es
mov
mov
ss
push
add
xchg
sbb
iret
xor
out
movsb
dec
aad
mov
add
pop
iret
fadds
das
sbbl
dec
or
cmp
mov
sub
xchg
xchg
xor
enter
and
xor
ror
fisttps
lods
and
pop
jg
stos
sbb
xor
sub
xchg
pop
dec
inc
fnstcw
push
mov
cmp
mov
fnstenv
dec
sbb
mov
or
lahf
pushf
stos
pop
add
mov
sub
repz
imul
and
add
mov
mov
or
insl
inc
jg
xorl
rorb
xchg
aam
mov
mov
mov
mov
jnp
lret
fnstsw
fists
adc
inc
out
cmp
sbb
stos
xchg
hlt
mov
jecxz
inc
sbb
in
subl
add
inc
push
adc
imul
dec
popf
push
lock
mov
int3
inc
xchg
bound
hlt
xchg
mov
or
mov
das
or
jl
mov
sahf
mov
add
push
fidivs
cmp
mov
std
push
pop
mov
sub
call
leave
rcl
pop
xor
lods
dec
cld
psraw
lcall
xchg
fcmovnu
mov
loopne
xchg
sahf
mov
int3
sti
movsl
and
jmp
inc
cmp
js
imul
mov
insb
cmp
xor
inc
inc
je
inc
xor
xor
aaa
sar
cmp
pop
imul
mov
cmc
jne
repnz
les
fstps
insl
xorb
aas
fildll
aam
cmc
xor
arpl
jbe
xlat
aas
xchg
mov
pop
sub
nop
sbb
outsb
adc
ds
cmp
lock
call
mov
sub
jmp
push
cmp
aas
sbb
jns
jno
pop
inc
orl
dec
adc
fbstp
pop
rcll
fisubrs
push
sahf
out
push
pop
mov
cmp
outsb
jecxz
push
lret
mov
sub
xor
mov
nop
sbb
cmpsb
jle
pop
adc
loopne
or
jp
stos
movsb
inc
out
pop
add
xchg
push
scas
test
pop
add
adc
sbb
fadd
mov
mov
loop
adc
into
mov
loope
fs
dec
lea
mov
or
int3
in
in
stc
cmpsb
lret
mov
lods
push
or
cmc
inc
mov
lret
pop
jg
mov
xlat
jae
fisubrl
out
dec
leave
je
mov
es
mov
ret
add
in
and
ljmp
xor
cld
add
idiv
xor
push
aaa
sbb
notb
sti
stos
fsubl
push
clc
xchg
jae
jecxz
aad
xchg
dec
lea
leave
cmpsl
and
mov
fmull
mov
pop
ficomps
adc
or
sub
jle
scas
rorl
or
nop
test
or
dec
mov
adc
cld
jno
jo
mov
in
loope
or
sbb
test
add
aas
mov
adc
or
push
sub
sub
pop
dec
xchg
pushf
sub
fwait
sub
mov
int3
dec
pop
or
inc
sub
sbb
dec
in
hlt
into
scas
aas
and
add
cmc
in
fsubp
push
loop
xor
cwtl
stc
mov
mov
mov
mov
push
dec
add
iret
inc
std
sub
lods
jnp
jle
push
push
push
test
xchg
add
insb
pop
sub
push
push
aaa
xor
sub
pop
mov
add
mov
sbb
mov
mov
mov
adc
and
clc
movlps
in
pop
sub
filds
mov
and
and
outsb
push
insl
push
es
inc
and
pop
movsl
stos
mov
mov
dec
pop
sbb
cmc
das
fldl
call
or
stos
dec
shll
mov
dec
loopne
jmp
aas
inc
daa
sbb
xchg
stc
sub
mov
pusha
lods
leave
mov
and
cltd
in
in
out
call
mov
imull
mov
pop
jl
stos
xchg
addr16
push
sbb
jmp
js
mov
and
push
in
jle
out
ret
jo
popf
pushf
add
pextrw
mov
test
adc
dec
dec
lods
xchg
stos
and
pop
fstpt
push
mov
int3
push
or
pop
mov
lahf
cmp
mov
in
sbb
testb
xchg
sub
jmp
jbe
ret
jo
dec
push
lods
iret
mov
cmp
clc
je
lret
mov
sbb
push
dec
fucomp
aad
in
out
fs
test
jno
push
movsb
xchg
iret
mov
lret
stc
stc
cmpsb
stc
mov
cmp
shlb
push
or
push
js
mov
jns
adc
pop
rorb
cld
jmp
xorb
pop
add
mov
mov
pop
pop
sub
testl
fsts
push
cmpsl
xorb
test
inc
data16
aas
decl
inc
mov
inc
cmp
int3
fcomip
repnz
cmp
lcall
in
pop
mov
and
dec
movsl
cltd
cmpsl
mov
sbb
sub
lahf
xor
scas
adc
cwtl
sbb
daa
jo
loope
sub
pusha
add
xor
repz
das
add
leave
cmpsl
mov
lret
nop
shr
cmp
adc
pop
jmp
js
ja
mov
hlt
pop
inc
jmp
push
pop
mov
les
mov
add
adc
mov
sub
nop
mov
test
lret
aad
pop
popa
and
pop
sbb
sbb
mov
fcomi
pop
aad
rclb
inc
or
ss
in
sahf
sub
aad
adc
leave
cs
testb
dec
jcxz
mov
or
push
push
mov
shl
push
ljmp
xor
xchg
mov
loopne
dec
inc
xchg
shlb
out
pop
aaa
pop
lods
sub
lahf
pop
lods
movsb
or
sbb
shlb
xlat
or
gs
jmp
pop
inc
mov
mov
cmp
inc
inc
push
add
mov
mov
dec
inc
ljmp
jne
jge
lret
inc
filds
cmp
xor
push
rorl
lcallw
dec
xchg
mov
push
mov
cli
les
sub
int3
pop
into
push
cltd
cltd
and
xchg
add
sub
daa
jp
mov
repnz
ja
mov
out
or
mov
stc
sbb
and
pop
add
daa
shrl
lcall
andl
xor
fistpl
cmpsl
orl
mov
rorb
sbb
and
ror
les
xchg
out
inc
and
pop
stos
imul
sub
fisubl
or
cmp
jecxz
mov
js
gs
stc
icebp
mov
js
jne
mulb
test
mov
sti
dec
cltd
inc
into
mov
lock
in
xchg
sub
cld
sarb
jns
xchg
mov
push
push
or
mov
jecxz
and
movsl
mov
xchg
mov
xor
repz
xlat
push
ret
pushf
hlt
sub
inc
xor
dec
cld
mov
sbb
loope
hlt
pop
stc
rcll
xor
mov
cmp
push
cmp
jnp
jb
call
sub
inc
cmp
out
xchg
sar
imul
stos
fbld
push
popf
mov
add
push
divb
lock
adc
add
cmp
inc
and
fisttpl
jl
popf
cmpsb
add
lods
jmp
xor
inc
outsl
mov
inc
cmpsb
jne
je
add
adc
mov
cmpsb
and
das
jmp
jno
out
xor
lods
push
sbb
push
aaa
mov
stos
push
clc
jge
fisubrl
outsb
enter
xor
lahf
push
and
mov
ret
and
insb
les
xor
movsb
xchg
and
lods
xor
pop
sti
inc
loope
adc
lods
mov
cltd
sub
adc
nop
jbe
and
cmp
mov
mov
sar
mov
outsb
and
movsl
aas
addb
int
aaa
shl
mov
sarl
scas
push
test
cltd
repnz
rol
fsubl
jae
int3
ror
sbb
scas
lahf
cmc
dec
jmp
scas
popf
gs
jo
and
sbb
push
aad
mov
jo
push
sahf
xchg
std
mov
mov
add
inc
aas
jl
out
int
pusha
xchg
pop
sbb
add
clc
pop
or
fdivl
pop
cli
or
and
ds
mov
adc
cmp
pop
mov
aas
mov
lock
nop
hlt
adc
mov
or
add
pop
scas
aam
add
cmc
loope
jae
cld
pop
or
hlt
lret
sub
stos
adc
sbb
movsb
insb
inc
dec
mov
inc
cmp
add
enter
es
ljmp
clc
mov
jb
andl
lahf
sub
test
rcrl
insl
out
mov
xchg
addl
in
dec
int3
loope
add
jne
push
mov
push
lret
int3
mov
fmul
stc
inc
inc
andl
push
sub
xchg
int
daa
push
shr
in
sub
sub
dec
push
push
insl
aaa
jo
enter
fcomi
mov
cmp
pop
or
mov
jle
pop
cltd
mov
or
in
inc
and
mov
insb
mov
movsb
stos
inc
call
inc
jae
dec
in
dec
xchg
inc
adc
inc
xchg
ss
cmp
sbbb
out
sbb
clc
fsts
popf
push
icebp
mov
bound
insl
cltd
jb
jo
mov
cmpsb
add
ret
xchg
out
jo
aas
cmp
loop
adc
mov
sbb
push
add
es
sbb
insl
insl
fmuls
aaa
sub
sbb
jbe
test
xor
mul
adc
adc
sub
cli
inc
mov
js
fmull
je
lret
clc
push
cmc
jecxz
pop
xor
jns
std
jae
sbb
mov
and
into
adc
movsl
sub
lret
icebp
fcoms
or
loope
sbb
subb
incl
mov
sahf
dec
testb
push
push
pop
pop
fisubl
les
xor
clc
add
and
add
sbb
ss
push
ja
mov
rcr
dec
out
jo
fimull
inc
xchg
stc
subl
mov
sbb
loope
lcall
jmp
or
loop
pop
cmp
dec
pop
je
scas
mov
push
add
sahf
push
adc
add
enter
shl
fmull
roll
push
lahf
and
fldl
ljmp
push
mov
mov
push
mov
mov
or
mov
lds
and
xchg
cltd
xchg
xchg
outsb
jne
mov
dec
sub
faddl
sub
movsl
and
into
cmpsb
xor
push
mov
movsb
adc
mov
or
pusha
jae
xchg
aad
mov
insb
leave
je
sub
dec
push
jecxz
push
into
mulb
pusha
mov
jne
or
ds
dec
inc
out
ret
in
dec
imul
xor
insl
dec
je
ljmp
push
mov
test
xchg
mov
rolb
mov
push
sbb
aas
lds
sbb
mov
mov
mov
out
sbb
jecxz
in
jb
xor
scas
cli
inc
inc
popf
jnp
or
mov
xchg
xor
clc
jecxz
sub
roll
shl
dec
or
sub
pushf
inc
imul
inc
sysexit
pop
mov
and
jmp
jl
sbb
mov
loop
cmc
adc
imulb
or
cmc
clc
ret
and
cmp
adcl
mov
jecxz
leave
dec
hlt
adc
in
cs
cmp
pop
push
xchg
push
push
mov
enter
cmp
lock
or
das
or
push
sbb
addr16
mov
icebp
inc
scas
jmp
sub
fmul
pop
arpl
je
repz
lea
inc
jle
xchg
ret
adc
ret
lds
int
inc
add
push
dec
xchg
iret
add
jmp
xchg
scas
xor
std
and
mov
out
ret
pusha
sti
cmpsb
leave
call
fsubrs
icebp
add
cmpsl
cld
bound
xchg
sbb
insl
sub
fs
push
cmpsl
mov
add
repz
js
std
mov
mov
mov
jo
mov
aad
sbb
sub
pop
or
xchg
in
xchg
xlat
scas
gs
and
in
adcb
mov
dec
lahf
xor
xor
enter
inc
xchg
and
mov
addl
push
cwtl
lds
loopne
icebp
outsb
ja
pop
out
sbb
movsl
cmp
push
dec
ret
testl
sub
lret
stc
call
jns
sub
pop
jg
cmc
push
xor
mov
loope,pn
out
hlt
aam
or
mov
mov
loopne
and
sti
mov
push
addr16
jb
lods
rclb
stos
and
pop
sbb
sbb
test
xor
add
out
jb
pop
aaa
push
iret
aaa
pop
push
nop
jg
dec
addr16
ja
mov
sbb
adc
xchg
loopne
addr16
movsl
inc
cmp
mov
jae
sub
fmulp
jmp
adcb
and
cmp
scas
add
in
ret
lods
xchg
jg
mov
adc
or
adc
sbb
pop
push
mov
xchg
pop
dec
nop
xlat
cwtl
fwait
das
inc
push
out
loope
cmp
add
test
mov
sti
dec
inc
ss
rcrl
inc
pusha
adc
mov
push
cmp
test
xlat
daa
out
jb
cmp
lcall
inc
or
xchg
bound
xchg
inc
mov
mov
sahf
push
sub
adc
mov
xchg
popa
lock
cmp
icebp
jo
jnp
sbb
mov
jne
jmp
jo
call
mov
arpl
in
or
mov
mov
sub
pusha
int
testb
loopne
pop
and
cmpsb
stos
pop
aam
and
cmp
cmp
sub
insl
jge
mov
jns
mov
into
add
call
test
test
push
mov
das
mov
test
mov
adc
sbb
xor
out
mov
pop
sahf
add
add
sarl
dec
daa
xchg
inc
push
icebp
mov
mov
cltd
adc
push
push
inc
divb
sbb
ror
adc
xor
sbb
inc
enter
pusha
pop
sbb
pop
popa
and
inc
ja
or
pop
sub
and
decl
and
js
test
fwait
mov
ja
add
aam
roll
jp
or
mov
jl
or
xor
mov
jne
sahf
jecxz
ja
ret
sub
xor
inc
cmp
pusha
and
cmp
fnsetpm(287
sub
jbe
and
dec
pop
mov
fldl
xchg
test
lock
dec
mov
lcall
test
push
push
addr16
js
or
or
push
mov
cli
mov
lock
and
dec
sti
out
mull
mov
and
mov
push
pushf
push
fldt
dec
pop
jmp
je
into
jns
jbe
dec
sub
sub
adc
mov
pop
inc
push
xchg
mov
arpl
sarb
adc
les
jns
cmpsb
notb
lret
in
jo
sti
xchg
mov
mov
pushf
in
dec
xchg
pop
scas
sahf
sub
jns
shlb
mov
xchg
ja
daa
mov
insb
sbb
sbb
sub
fldenv
adc
mov
xor
dec
and
loop
imul
jo
cltd
scas
xchg
push
dec
sti
jne
mov
adc
or
test
lret
mov
adc
aam
pop
mov
sbb
jg
rcrb
push
addr16
xchg
push
je
in
imul
jnp
mov
cmpl
mov
lret
cmp
je
or
and
lods
add
mov
xchg
sarb
test
xchg
or
call
pop
push
scas
xor
popf
add
push
xor
fwait
es
push
dec
or
cmc
cmc
adc
xor
sub
loop
mov
cmp
or
or
jns
fs
arpl
or
pop
inc
jns
push
rcrl
cmpsl
scas
mov
mov
inc
dec
jp
xor
ret
add
insb
mov
sub
cmp
or
insl
mov
fs
add
adc
arpl
pushl
stos
mov
mov
loopne
mov
cmp
or
inc
nop
push
lods
jp
push
xchg
dec
cmp
nop
ret
sub
arpl
push
popf
jnp
hlt
add
outsb
out
pop
mov
push
pop
movsl
and
push
xor
or
cmpsl
sbb
clc
mov
mul
sub
and
inc
rolb
movsl
inc
jge
mov
xchg
daa
jo
test
dec
mov
mov
cltd
movsb
sub
fnsave
mov
shrb
ret
popa
lahf
stc
fld
int3
into
mov
repz
dec
xor
shll
pop
scas
mov
test
inc
pusha
and
xchg
xor
addb
mov
es
push
pop
andl
sarl
pop
dec
mov
rorb
inc
xlat
add
inc
out
pop
mov
in
cmpsl
jno
mov
int
test
out
xchg
and
mov
sti
push
sub
popa
and
jl
clc
mov
and
fs
push
mov
xor
shlb
adc
sbb
and
mov
popa
mov
cwtl
fs
mov
mov
cmpsl
out
rcll
xlat
mov
or
clc
cmpxchg
sub
xor
movsb
mov
fcomp
pop
jecxz
mov
jae
push
push
cmp
arpl
push
out
xor
scas
into
xor
lods
and
imul
add
addr16
mov
push
in
mov
scas
jbe
pop
ljmp
xor
stos
cld
mov
cmp
sub
enter
jmp
mov
cmp
popf
jmp
mov
xchg
stc
cmp
cmp
jle
in
cmp
sub
aas
sbb
xor
hlt
scas
ret
mov
testl
jl
mov
dec
xor
lods
mov
imul
xchg
sbb
inc
add
imulb
sti
pop
pop
push
popa
shl
movsl
nop
mov
add
nop
sbb
jg
add
pop
imull
fs
rol
popa
lock
in
lods
mov
daa
add
dec
in
stos
mov
jbe
addr16
ret
jle
stos
and
push
sbb
or
jmp
pop
xchg
push
leave
pop
xor
jb
sti
sub
and
pop
dec
xchg
mov
sarb
mov
push
dec
adc
dec
pusha
mov
inc
lcall
add
and
inc
repnz
mov
aam
sbbl
out
cmpsb
outsl
ja
into
or
iret
mov
pushf
sbbb
decb
mov
adc
jne
push
mov
mov
jmp
test
xor
mov
jo
mov
cmp
pushf
insl
add
lock
mov
loope
scas
fadds
mov
mov
sbb
imul
mov
add
cmp
rcll
fwait
push
inc
fdivrl
adc
xlat
ss
or
mov
fnstenv
loope
and
push
mov
and
push
push
sub
pop
jg
cmp
jl
mov
xchg
or
mov
push
jb
xchg
adc
xchg
sub
subl
mov
sub
andl
stc
pop
mov
jmp
add
loop
outsl
negb
fisttpl
push
push
cmpb
mov
sub
and
push
rorb
icebp
stc
and
mov
or
cmp
idivl
shll
stc
nopl
jno
js
lock
jle
jbe
xlat
ret
add
clc
shll
das
mov
bound
adc
jge
dec
imulb
push
and
cld
out
dec
loope
clc
or
inc
cli
lds
sub
and
dec
cmpsl
mov
mov
shrl
mov
sbb
dec
jnp
add
jp
loopne
mov
sar
jl
inc
ret
add
xor
gs
insb
pop
sub
int3
sbb
pop
cwtl
addr16
imul
lret
push
stos
lret
mov
add
and
jbe
enter
sbb
push
inc
mov
aaa
and
xchg
dec
pop
pop
aas
lahf
inc
sub
mov
inc
fdivp
mov
add
xchg
sub
int3
test
jb
jmp
xlat
dec
lahf
icebp
stos
adc
jmp
inc
mov
pop
insl
xchg
pop
dec
pop
fs
pop
pop
out
lods
repz
mov
repnz
jnp
cmp
popf
das
fidivrl
fcompp
es
or
push
stos
mov
mov
aaa
ficoms
icebp
aaa
ja
jp
mov
xchg
repz
aad
jecxz
or
insb
cmp
fwait
xor
arpl
sahf
or
enter
mov
into
sub
in
cmpl
inc
into
dec
mov
loopne
or
aaa
rorb
in
adcl
pop
bnd
lahf
out
cli
adc
pop
dec
mov
mov
mov
xchg
mov
lcall
sbb
jbe
xor
xchg
loopne
adc
cs
jno
push
shl
cmp
and
sbb
mov
push
mov
mov
in
jle
enter
call
push
mov
es
jmp
jecxz
rcrl
js
mov
leave
filds
cmp
jne
es
outsl
lea
ret
jns
pop
je
sti
bound
mov
push
aas
jno
cmp
mov
cltd
xchg
xchg
mov
push
fsubl
loope
push
xor
lock
pop
pusha
mov
cmc
stos
xchg
mov
or
in
and
mov
sbb
jnp
dec
imul
lods
xlat
loope
in
cmp
mov
rcl
jp
and
and
jns
lock
sbb
inc
xchg
pop
cmp
popa
xchg
gs
or
xor
aaa
xchg
loopne
mov
in
or
xchg
loope
das
mov
mov
pop
cs
cmp
std
lods
es
cmpl
imul
and
adc
jne
add
xchg
rorl
lret
mov
xchg
add
adc
jmp
imull
popl
outsb
xchg
rorl
sbb
push
or
cld
and
dec
icebp
mov
pop
sbb
fsubrs
pop
aas
stc
mov
push
aad
hlt
adc
or
inc
add
sbb
arpl
xor
sbb
nop
and
jmp
dec
cltd
and
mov
mov
aad
out
adc
sahf
mov
sahf
mov
inc
pop
fsubl
xchg
cmc
pusha
push
cwtl
inc
call
shr
lahf
fwait
cmp
aam
addb
loopne
call
mov
shlb
push
jl
mov
lahf
cmp
roll
mov
insl
cwtl
push
cli
test
addr16
sub
cmp
outsl
dec
in
dec
repz
sub
in
adc
sub
inc
push
js
cmp
pop
mov
lret
push
fucomi
lahf
mov
adc
nop
std
push
xchg
notl
xlat
rolb
aaa
or
sub
sbb
test
or
pop
fs
push
fwait
and
xchg
insb
js
xchg
pop
test
inc
mov
lret
and
push
and
call
cmc
sbb
lock
daa
cmpl
jle
mull
jne
in
clc
mov
jae
hlt
leave
imul
push
pop
or
cmpsl
adc
ds
jecxz
cmp
test
insb
push
shlb
aas
test
mov
push
mov
pop
inc
or
js
xchg
aam
aas
mov
stos
xlat
xor
add
pusha
sub
push
ja
imul
jns
jnp
cmp
loope
pop
xchg
xor
and
and
mov
das
and
inc
push
std
shrl
out
and
jo
add
push
cmc
mov
mov
push
or
sbb
lea
xor
loopne
std
int
in
movnti
fisttps
dec
cld
pinsrw
leave
or
pusha
xor
mov
pop
insb
mov
outsb
cmp
xor
push
fs
mov
dec
mov
and
add
lret
test
push
fs
ljmp
adc
jb
int3
mov
gs
add
out
sub
popf
push
xor
scas
lret
fimuls
adc
inc
mov
mov
fwait
je
outsl
aas
ror
mov
js
loope
inc
add
std
into
inc
mov
mov
outsb
xor
js
mov
pop
pop
shll
sbb
sarb
push
add
pop
xor
aaa
mov
push
mov
and
test
lea
jo,pn
jge
lret
xchg
iret
or
icebp
fdiv
movsl
hlt
cld
test
mov
xor
dec
lret
call
ret
out
jne
jecxz
divl
jnp
loopne
mov
fsub
or
cmp
jl
cs
or
aad
push
cli
mov
mov
cmc
jns
daa
or
cld
lock
or
xor
cmp
mov
fneni(8087
mov
sahf
and
sahf
imul
sub
inc
mov
lds
out
ret
out
jl
sbb
int3
punpckhdq
ret
leave
imul
inc
push
imulb
loope
orb
xlat
pop
iret
mov
repz
inc
imul
mov
jg
cmp
mov
add
in
add
lahf
outsb
xchg
pusha
and
test
test
test
pop
mov
xor
inc
cmpsb
sahf
ret
dec
jns
cmp
ss
dec
mov
aas
hlt
nop
adc
dec
and
movsl
andb
movaps
shl
mov
lds
int3
daa
push
mov
addr16
sub
sahf
cld
in
mov
inc
adc
fisubs
xor
out
gs
or
xor
into
repz
dec
lret
ljmp
leave
mov
aaa
jmp
sub
xor
mov
and
or
sub
mov
notl
lds
repnz
mov
les
dec
push
cltd
movsb
imull
jge
pushf
jle
xchg
aad
fisubrs
and
inc
lcall
sarl
sbb
ss
pop
fxch
fmuls
mov
jl
adc
jnp
mov
jno
or
xor
mov
or
xor
mov
mov
xor
mov
cmpsb
sub
lea
sub
sub
js
fmul
xor
inc
imul
in
and
shr
adc
mov
fs
inc
andb
mov
jbe
fwait
pusha
pop
push
mov
mov
jle
popf
pop
int
scas
in
mov
push
mov
in
out
jo
mov
push
sbb
cmp
ffree
xor
data16
mov
mov
call
je
lods
clc
enter
addr16
pop
lret
jb
es
sahf
popf
ja
mov
jo
inc
sbb
pop
pushf
add
inc
pusha
ds
stc
or
inc
outsl
sbb
int
or
cld
sub
fsub
fildl
jg
ja
aaa
mov
ficompl
dec
jl
insb
out
add
sbb
pop
push
popa
movsb
mov
and
rcl
add
push
ss
sarb
cmp
jo
inc
pusha
xchg
sbb
mov
gs
or
dec
fadd
lcall
and
out
and
sub
jb
and
cmp
push
nop
cmp
mov
mov
sbbb
mov
sbb
cld
xchg
inc
idivb
mov
inc
dec
xchg
test
inc
mov
xor
dec
jno
adc
sbb
sub
es
pop
test
cmp
push
scas
hlt
ficoms
dec
stc
subl
pop
xlat
pop
adc
mov
std
outsb
sarl
es
fsubl
and
jo
adc
pusha
pop
stos
dec
or
sbb
subl
push
or
sub
shr
bnd
shlw
subb
ret
lds
dec
cmc
fcmovne
ss
push
popa
arpl
std
fcoml
jnp
xchg
push
in
fsincos
stos
testl
push
fnstcw
cmpl
test
dec
jp
add
cwtl
dec
mov
mov
ds
push
test
dec
xchg
mov
xor
inc
int3
int
jmp
mov
and
xchg
mov
cltd
xor
add
mov
mov
bound
dec
push
adc
cmpsb
add
rcll
and
mov
add
fstl
scas
xor
mov
mov
sub
aam
xchg
aad
popa
jo
add
fiadds
shlb
bnd
aas
pop
imul
dec
cmp
push
pop
pop
aas
sub
lods
enter
xrelease
dec
dec
pop
push
and
fistl
jg
pop
mov
imul
jb
push
xor
and
jb
push
int
sarl
in
mov
stos
out
aas
sbb
repnz
inc
sbb
scas
sub
fnstsw
jnp
sub
loopne
jl
daa
xor
or
iret
sub
jb
or
sahf
mov
dec
xor
jmp
repnz
mov
fld
scas
arpl
add
pop
pushf
fstps
std
push
frstpm(287
lds
xor
pop
xor
sub
jbe
xor
rcr
lahf
xor
and
lock
push
mov
push
outsb
cmp
dec
dec
inc
fmul
xchg
repz
sbb
divl
cli
dec
das
xchg
mov
lock
inc
push
rorl
pop
ret
rorl
push
xor
pusha
xchg
loop
pop
out
jb
cmp
scas
int
adc
insb
xchg
or
imul
icebp
add
aaa
fidivl
pop
mov
pop
lahf
dec
gs
scas
and
mov
push
push
cs
push
mov
rorb
scas
sub
xor
in
sbb
pop
push
scas
xchg
or
cs
stos
cmp
sub
subl
cwtl
cmpsl
inc
pop
sbbl
push
sub
pop
cmp
aam
jae
ror
scas
ljmp
jne
daa
fists
je
idiv
xor
mov
xor
imul
or
adc
inc
aam
out
fdivrl
test
aam
scas
mov
test
ljmp
add
test
stos
shll
xchg
mov
sbb
sbb
int3
jmp
pop
inc
data16
pop
insl
ror
ret
out
add
add
xchg
nop
imul
sbb
data16
fs
mov
popa
pop
mov
push
adc
and
xor
loop
call
cmp
loop
outsb
push
jle,pn
std
pop
lahf
pop
arpl
daa
cmc
rcr
aad
jge
xor
addr16
dec
daa
fs
sub
js
push
cmp
cmp
xor
stos
mov
out
sbb
out
mov
ficoms
std
int3
enter
cmp
lahf
sbb
les
xchg
stos
fwait
mov
icebp
xchg
arpl
nop
mov
rorb
cmp
pop
mov
xchg
notl
sbb
push
push
mov
ret
mov
dec
je
je
in
push
test
cs
xor
pop
in
xor
mov
cmp
test
pop
cmp
xchg
in
sub
mov
cmp
sbb
popa
xor
jo
adc
dec
mov
mov
lret
cs
push
call
insb
mov
adc
xchg
mov
jmp
push
jle
inc
in
adc
lock
ficoms
xor
rcrl
fwait
xchg
cltd
or
outsb
cmc
in
stc
jns
jns
jno
add
mov
dec
out
mov
adc
mov
repnz
adc
std
mov
je
ds
jnp
push
pushf
push
nop
pop
sub
es
out
fidivrl
inc
fstpt
sbb
sub
lods
je
add
add
sub
dec
repz
fucomp
mov
loope
cmc
push
ljmp
jno
les
sti
dec
loopne
call
cld
stos
jecxz
sbb
dec
int3
mov
cs
ja
aam
xchg
and
dec
int
push
leave
mov
cmp
dec
out
cs
dec
jno
lcall
inc
icebp
xor
sub
push
mov
aam
lods
cmp
cmp
push
cmc
mov
addr16
lods
insl
add
push
rolb
pusha
xchg
mov
add
rcl
testl
stc
into
inc
arpl
pop
add
loop
push
xlat
outsb
pusha
mov
jmp
loop
mov
movsl
sarb
adc
jno
test
inc
ljmp
insb
out
aam
dec
cmc
mov
cmp
sahf
push
cmpsl
out
and
ret
scas
les
movsl
add
call
sub
or
cmp
int
inc
jne
jns
push
inc
pusha
mov
repz
push
lds
xlat
out
sub
add
pop
loop
mov
insb
adc
mov
bound
cli
test
add
xchg
xchg
fistl
dec
adc
pop
push
jo
inc
lea
sub
adc
inc
mov
jne
lds
sbb
in
adc
cmp
into
cwtl
lea
cmc
push
adc
fldl
out
test
xchg
sub
xchg
out
pop
sbb
movsl
in
jb
dec
jecxz
int
jnp
insl
in
add
pop
mov
imul
jb
mov
out
and
add
dec
mov
push
loope
test
lea
push
or
jl
sbb
es
sub
loopne
cmp
lods
fwait
mov
test
scas
xchg
mov
cmc
add
push
mov
ljmp
jl
cli
dec
push
dec
repnz
push
xchg
mov
cmpsb
fs
pushf
cmpsl
push
mov
lock
dec
cmp
inc
lcall
dec
cmpsb
repnz
mov
rorb
fisubrl
cmpsl
outsb
dec
xchg
xchg
call
arpl
sbb
out
fwait
or
ficomps
lods
clc
mov
or
pavgw
and
xor
out
mov
push
lret
repz
or
add
dec
mov
mov
jno
and
lods
hlt
popl
jbe
and
or
mov
test
js
fnstcw
imul
or
imull
stos
and
filds
outsb
mov
xchg
sbb
ret
xchg
mov
iret
adc
jnp
stc
xchg
and
adc
push
push
cltd
mov
or
xchg
xchg
sbb
jge
ss
addl
cmpsl
test
mov
adc
mov
ljmp
or
sahf
add
jno
les
movsl
mov
pusha
xchg
pop
sbb
dec
cmc
das
ret
stos
repnz
and
dec
cmp
jno
push
xlat
arpl
pop
mov
popa
cmpsl
or
cmp
mov
pop
ret
dec
rcrl
mov
pop
push
std
mov
bound
mov
sub
xor
stos
fwait
mov
push
repnz
or
or
xor
orl
movl
push
add
aad
mov
sub
scas
cmp
push
dec
inc
mov
sbb
in
push
aaa
bnd
mov
stos
sbb
loope
inc
cmp
popa
and
lret
cld
scas
inc
ret
cmc
in
imul
mov
cwtl
jbe
ret
push
int
and
cmc
ss
ss
fs
insl
xor
in
or
jge
cltd
jbe
and
test
add
ja
sti
sub
or
adc
fwait
push
dec
shrl
mov
fstpl
nop
mov
les
imul
popf
push
sbb
js
lret
gs
push
mov
sahf
in
push
in
mov
add
or
and
fidivl
inc
test
pop
pop
outsb
je
lods
xor
xchg
negl
cmc
cwtl
cmpsl
xchg
sahf
repz
xor
cli
xor
popf
adc
mov
xor
sub
repnz
out
add
div
pusha
aas
pop
mov
std
imul
xchg
pop
int3
icebp
notl
pop
int
test
int
mov
movsb
mov
scas
lahf
xchg
adc
inc
xchg
sub
jb
gs
xor
out
add
scas
inc
push
or
cltd
mov
xor
push
sbb
push
or
xor
movsl
add
cmc
cmp
adc
out
mov
mov
adc
call
es
pusha
sbb
and
stc
fsts
sbb
int3
xchg
inc
insl
xchg
int3
inc
cmpsl
movsl
adc
pop
add
inc
in
mov
popa
js
or
or
jle
push
mov
lcall
mov
xor
and
ret
cmp
xchg
aas
inc
arpl
dec
insl
xchg
push
gs
nop
in
jp
adc
mov
fs
mov
aas
aas
cld
push
xchg
movsb
jecxz
and
dec
popf
sub
mov
insl
push
shlb
daa
dec
inc
adc
lahf
arpl
int3
mov
lret
mov
inc
addb
xor
js
adc
adc
mov
lcall
into
cmp
mov
jmp
loop
rorl
cmpsl
xchg
bnd
cmc
sub
push
ljmp
xor
xor
or
adc
add
ret
jb
mov
rcrb
mov
fstpt
test
lods
dec
jbe
push
imul
clc
and
add
cld
xchg
push
xchg
js
hlt
pop
xchg
adc
ds
scas
and
or
pop
jbe
jl
adc
lcall
outsb
add
adc
iret
pop
pop
mov
test
jmp
mov
sbb
inc
sub
xchg
xchg
inc
inc
xor
mov
jae
loopne
ret
push
es
xor
imull
sub
or
mov
mov
ss
inc
pop
and
mov
mov
in
lahf
movsb
dec
push
xchg
int3
mov
mov
adc
cmc
push
mov
pavgw
inc
xchg
dec
outsl
xor
jns
fisttpl
pop
mov
xor
pop
pop
addr16
mov
roll
xor
and
cmp
mov
test
jne
mov
mov
imull
sbb
push
mov
lock
fiadds
pavgw
into
aam
mov
addr16
push
jne
outsl
fsts
iret
jb
shrl
lret
jg
ss
pop
daa
hlt
mov
mov
rorl
or
adc
dec
mov
adc
xorb
icebp
push
or
lods
inc
imul
sub
mov
dec
push
jmp
mov
dec
jmp
mov
mov
dec
inc
xor
pop
pop
push
lret
mov
push
xlat
lret
pusha
fldcw
enter
add
imul
jmp
xlat
ficomps
cmpsl
mov
xor
mov
gs
out
pop
or
push
cmc
sub
pop
pop
stc
daa
jne
bound
xchg
sahf
adc
pop
xor
xchg
aas
sub
lret
stos
subb
cmp
jbe
sbb
fs
adc
or
lret
inc
loope
test
mov
xchg
mov
sahf
test
sbb
rol
or
lds
add
loopne
sarl
xor
add
insb
aad
fsubrl
imul
pusha
jl
sub
adc
sub
mov
jno
bound
add
jmp
jae
jo
stc
sub
daa
aaa
or
push
rol
pop
arpl
or
inc
fldln2
mov
es
leave
cmp
xor
xchg
mov
mov
dec
push
cmp
ret
dec
ss
mov
xlat
add
adc
jo
add
sbb
or
adc
inc
pop
jnp
and
test
mov
cs
add
jge
bnd
sub
dec
xor
daa
repz
pop
push
adc
lahf
cld
xchg
lods
pusha
dec
and
movsb
shrb
in
sub
add
cmp
pushf
mov
mov
mov
inc
lea
inc
arpl
add
dec
mov
and
je
add
addl
pushf
insb
push
sbb
pop
je
adc
insl
into
jno
xor
or
jge
mov
jae
push
iret
mov
or
das
stos
cwtl
adc
and
std
fiadds
mov
sub
xchg
mov
jl
xor
mov
outsb
stos
aam
enter
push
cmp
xchg
dec
sub
sub
xor
jmp
and
movsl
test
imul
scas
inc
fists
jecxz
push
mov
add
push
divb
pop
nop
imul
mov
mov
push
add
scas
aas
mov
push
lds
orl
jecxz
xchg
mov
popf
inc
jp,pt
mov
pop
mov
xchg
fwait
iret
mov
sbb
lods
aas
inc
jl
xor
iret
mov
push
mov
inc
out
lds
xchg
mov
pop
leave
pushl
icebp
loopne
mul
shlb
cmp
fdivrs
ficomps
addl
jno
push
incb
xchg
inc
add
cmp
mov
pusha
pop
xchg
push
cmp
sbb
and
or
add
fwait
add
orb
sbb
xor
add
dec
or
pop
fwait
push
or
inc
sti
jmp
or
andb
loopne
dec
adc
push
jo
imul
or
mov
rep
into
xchg
xor
lods
adc
cmp
ss
cmpsb
movsb
pop
pop
push
js
cwtl
enter
bound
popf
out
dec
fidivs
ja
cld
jo
imul
jmp
lret
pop
cltd
daa
jecxz
mov
notl
jbe
aam
ret
scas
lret
mov
fldcw
pusha
aas
gs
lods
lahf
movsl
sbb
std
outsb
or
loop
xchg
jmp
in
push
sbb
xor
notl
push
loop
stc
cmp
add
cmpsl
adcl
mov
sbb
aam
push
bound
cmp
std
mov
sub
sub
push
lods
mov
sbb
lods
fs
enter
xchg
out
orl
jbe
test
pop
cmpsl
mov
int3
popa
out
int3
push
cmp
loopne
pop
in
sbbb
sbb
pop
aam
add
imul
ja
icebp
sub
aaa
jl
call
mov
pop
mov
jmp
fadds
das
sbb
dec
jg
out
pop
cs
mov
out
scas
pusha
movsl
in
mov
push
outsl
in
subl
icebp
and
aas
dec
pop
test
frstor
xchg
or
test
aaa
jmp
stc
jbe
mov
and
rcr
andb
sbb
or
in
pop
push
pop
mov
movsl
mov
sti
cs
cltd
hlt
push
loope
fcompl
mov
les
pop
mov
add
lock
lods
sti
pop
pusha
dec
movsl
xor
sbb
adc
jo
and
sub
jbe
out
es
dec
mov
fldt
mov
xor
addb
push
mov
pop
mov
das
and
add
pusha
adcb
mov
icebp
fisubl
sbb
mov
fwait
sbb
pop
clc
or
fnstsw
jo
nop
mov
and
add
mov
je
in
jecxz
pop
add
jno
addl
sbb
repz
leave
lcall
sbb
pop
xor
lcall
mov
xor
popf
mov
into
fwait
cmc
mov
shl
push
lahf
sbb
or
pusha
jmp
fbld
into
dec
fwait
insb
imul
mov
fldcw
mov
jecxz
sub
jle
xor
into
aad
dec
imul
fistps
mov
xchg
shlb
dec
cmpsl
das
jle
iret
push
or
loope,pn
or
sub
cmpsb
sbb
sbb
dec
setg
add
mov
jae
adc
or
hlt
pop
inc
fcom
cld
mov
xchg
mov
es
loop
mov
mov
js
imul
adc
sti
sub
adc
xor
in
cwtl
mov
fildll
or
divb
call
xor
lahf
out
inc
jbe
jmp
add
lret
adc
mov
jmp
aam
jp
or
pop
dec
xchg
fidivrs
insb
add
push
cltd
mov
mov
dec
dec
xor
lods
cmp
incb
add
inc
pop
cmpl
in
sbb
and
push
xchg
jg
cs
or
aad
mov
outsl
mov
push
add
and
push
dec
ret
in
iret
fxch
or
inc
pop
in
or
sbb
imul
pop
mov
push
shrl
or
shl
call
fsubrs
jno
scas
lea
cmp
push
repnz
jmp
sub
adc
pusha
fs
orb
daa
pushf
and
mov
mov
and
sub
inc
xchg
mov
out
inc
mov
stos
push
jge
sbb
and
xchg
mov
pop
vpcomb
xchg
mov
mov
ljmp
imul
jno
nop
jne
lcall
fnsave
push
hlt
add
pop
sbb
cwtl
ljmp
or
stos
fstps
das
sahf
test
cmp
out
mov
mov
sbb
movsb
je
ret
dec
aad
xor
cmp
cwtl
loop
js
xor
sahf
fstl
push
push
pop
rcll
xor
mov
loop
xor
call
sbb
cltd
pop
movsl
and
mov
and
shrb
adc
ret
test
mov
or
push
sub
ret
ror
in
fs
fildl
mov
xchg
ret
mov
mov
mov
and
into
add
test
leave
clc
ds
mov
mov
sub
mov
and
mov
fs
notb
std
mov
repnz
sbb
pop
fmull
push
outsb
leave
sbbl
insb
lcall
nop
fstl
outsb
sbb
or
shlb
cmp
jae
test
lahf
mov
dec
ret
dec
imul
pop
lock
jbe
pop
jecxz
dec
shrl
mov
jo
lods
inc
xor
arpl
inc
cwtl
pop
test
fcompl
mov
or
icebp
add
jns
adc
dec
xchg
icebp
xor
jmp
add
mov
cld
rolb
mov
jle
or
dec
sbb
cmp
add
lock
sbb
loopne
cmp
in
jb
jb
ja
jb
fwait
jno
jmp
jo
shl
in
icebp
dec
push
adc
xorl
out
divb
mov
sub
fcoml
add
dec
xabort
jb
roll
mov
jmp
xchg
xchg
inc
sbb
pop
popa
jge
or
ds
bound
icebp
mov
inc
fs
mov
push
cli
cmp
repz
js
sub
or
fbld
clc
mov
stc
shrl
dec
movsl
and
nop
push
out
push
leave
and
ret
mov
xor
cli
lret
dec
mov
mov
jge
je
arpl
sub
movsl
ficomps
ror
mov
mov
daa
xchg
jl
adc
in
add
xchg
mov
sbb
ficompl
std
xchg
rorb
xchg
pop
fists
jb
daa
cmp
pop
lret
pop
testl
outsl
pushf
call
push
imull
loope
decl
idivl
and
inc
dec
and
test
mov
mov
and
jne
adc
fsubrl
mov
mov
imull
insb
or
jge
adcl
sub
or
ds
mov
les
jns
in
ret
test
dec
xchg
xor
fildll
dec
enter
jo
push
dec
das
or
pop
adc
push
sbb
xorb
cmp
xlat
enter
xchg
adc
xor
rolb
fists
addr16
sub
add
loope
adc
or
push
shr
mov
int
mov
pop
mulb
pop
sarl
mov
cmpsb
nop
mov
sbb
cmp
sbb
jle
or
dec
adc
sub
push
ds
repnz
xchg
adc
fstps
push
cmp
push
inc
out
push
mov
inc
dec
popf
sti
test
jl
orb
fwait
inc
xchg
xchg
repnz
fs
clc
mov
in
enter
fisubrl
pop
dec
popa
mov
mov
cwtl
inc
test
dec
cmc
cmp
sbb
add
jecxz
negl
call
pop
lock
cmp
push
insl
xlat
imul
pushf
jb
pop
sbb
int3
adc
aaa
and
jno
jnp
incb
mov
rorl
pop
in
or
xchg
jmp
aas
aaa
bound
sbb
mov
pop
mov
out
adc
mov
xchg
jle
adc
out
pop
pop
in
jle
add
pop
sub
push
jns
call
lods
scas
or
pop
aaa
sub
sub
imul
jnp
adc
push
push
aas
cmp
xchg
shll
out
mov
lds
movsb
pop
ret
mov
adc
xor
dec
mov
orb
inc
xor
pop
or
fs
popf
xor
dec
lds
das
lds
xchg
push
jnp
mov
cltd
aad
jo
iret
inc
mov
in
sub
shr
lret
inc
push
in
xchg
add
fiadds
or
mov
mov
sbb
xchg
mov
notb
sbb
insl
mov
sub
std
adc
fldenv
scas
test
push
loopne
movsl
mov
popf
ficoml
fsubrp
cmpsl
testl
hlt
jno
and
pop
and
mov
jecxz
xchg
inc
jle
movsl
fimull
mov
lcall
push
test
data16
aas
dec
or
adc
xchg
out
divl
xchg
data16
ljmp
sub
lds
or
nop
cmp
pop
xchg
sbb
and
pop
in
xor
ljmp
hlt
mov
pop
int3
add
push
arpl
jmp
rclb
cvtps2pi
popl
inc
adc
inc
pop
cmp
lods
loopne
mov
iret
add
in
fs
mov
dec
in
lock
js
inc
decl
inc
sub
adc
arpl
dec
push
or
xchg
fs
repnz
or
sbb
xlat
repnz
ljmp
cmp
adc
stos
push
sub
shlb
ret
cmp
push
sub
mov
jnp
test
pusha
or
push
pop
jno
shlb
cld
rorl
leave
cmp
ja
push
push
adc
push
aas
mov
faddl
sbb
and
iret
xor
push
imul
pop
pop
loopne
pop
popf
mov
sub
jle
adc
pop
or
ds
lahf
mov
inc
mov
mov
out
xor
xchg
push
ja
add
add
les
subb
xor
outsb
test
mov
mov
scas
test
inc
jp
outsb
cmc
cmp
cmpsl
sbb
push
xchg
iret
inc
cmp
gs
mov
inc
lahf
xchg
inc
xor
roll
repz
out
pop
pop
ljmp
faddl
inc
insl
inc
push
push
xchg
cmp
pop
es
adc
mov
inc
xlat
cmpsb
mov
pop
lds
jbe
or
lahf
shll
dec
sbb
ss
jg
xchg
dec
pop
sti
push
jle
aad
out
jl
pop
jo
enter
sub
test
pop
out
pop
gs
out
jbe
and
sar
scas
repz
push
inc
dec
les
xchg
cmp
arpl
std
pop
pop
mov
jmp
dec
movsl
adc
lret
mov
dec
addr16
ss
pop
test
jle
adc
jmp
cmc
fidivrl
pop
mov
lret
push
mov
call
inc
pop
clc
push
push
dec
sbb
pushf
les
jmp
mov
sbb
iret
inc
int3
cwtl
jmp
sub
cmpsl
xchg
mov
inc
icebp
stc
add
dec
loopne
in
test
mov
std
sub
adc
pop
ja
jl
into
out
jbe
repz
in
sub
lods
lret
in
js
aaa
cwtl
mov
mov
enter
sub
adc
and
repz
mov
call
sahf
cld
jo
cli
ret
pop
lahf
inc
stc
das
dec
std
shlb
orl
and
jl
xor
sar
and
ret
call
jne
jno
and
rcrl
or
loop
sbb
aaa
inc
jmp
cmp
movsl
subl
dec
xor
in
push
pop
imul
cmp
outsl
cmc
loopne
push
xchg
and
mov
aas
inc
push
mov
sbb
lea
xchg
out
adc
inc
pop
mov
dec
dec
cmp
mov
dec
inc
adc
add
insb
add
sbb
and
imul
mull
mov
lods
ljmp
or
mov
mov
jbe
mov
pmuludq
je
mov
repnz
popf
fists
outsb
inc
scas
sub
pop
sbb
pop
mov
xlat
ja
cmpsl
mov
jecxz
add
ret
xor
stos
cmp
mov
js
popf
jmp
das
add
je
jbe
mov
int3
sub
call
mov
sbb
popa
mov
jmp
lcall
lret
insb
xor
nop
stos
jnp
in
repnz
jmp
test
sarb
imul
jg
push
movsb
pop
std
sub
inc
xor
cmp
and
cmc
out
add
mov
icebp
cmp
push
fiadds
ja
outsl
outsl
icebp
mov
dec
outsb
adc
andb
adc
jmp
cmp
lock
into
jbe
push
mov
mov
repnz
pusha
xor
pop
into
mov
jg
xchg
mov
push
xchg
mov
divl
jns
jno
jmp
inc
cwtl
mov
xor
nop
insb
sub
addr16
and
and
jecxz
mov
sbbl
aad
inc
cs
cmp
sti
rol
popa
ds
out
fstp
sbb
cld
mov
or
or
xor
hlt
dec
pop
int
addb
add
pop
cwtl
jno
jmp
jg
push
sub
sbb
fsubrs
fldcw
xchg
mov
xchg
cmp
sub
sti
inc
test
cmpsl
mov
dec
inc
mov
mov
adc
xchg
mov
mov
icebp
inc
dec
aad
or
loop
mov
pusha
dec
xchg
in
dec
fmull
sti
xor
xchg
xor
shlb
rcrl
push
adc
cld
shl
mov
jne
xor
xor
mov
jge
xlat
xor
push
fdivl
mov
cld
or
outsb
jns
nop
dec
xor
in
punpckldq
scas
rclb
pop
and
cmp
loope
sub
xchg
gs
imul
stos
adc
add
mov
push
inc
cmpsl
fmull
loope
hlt
push
inc
pop
and
movsl
xchg
jnp
roll
add
cmp
js
rcll
push
clc
insb
jecxz
sub
push
dec
inc
mov
push
dec
cmpsb
dec
cmp
fwait
add
test
dec
jecxz
pop
sti
jne
lods
int3
ficoms
pop
decl
cs
cli
or
lret
flds
dec
out
mov
xchg
adc
and
or
test
das
addr16
aad
pop
mov
sahf
inc
lock
xchg
int3
adc
jle
test
cmpsl
notl
test
cmpsb
mov
sub
jge
push
sub
add
pop
mov
jno
add
in
dec
aam
int3
mov
jmp
shl
subl
in
xchg
std
daa
int3
loope
cld
adc
movsb
shr
test
pop
dec
dec
js
imul
sti
push
sahf
int
out
pop
xchg
les
gs
leave
mov
jnp
out
shlb
cmp
dec
cmp
sub
mov
rcll
lods
roll
mov
out
xor
cli
inc
cli
pop
gs
lcall
iret
daa
or
push
add
sub
cltd
add
jmp
repz
or
addr16
aas
push
sub
inc
inc
outsl
jg
movsb
cmp
imul
mov
stc
vmovshdup
negb
lock
ss
sub
cwtl
lcall
adc
sub
dec
cmpsb
adc
pop
repz
stos
inc
pop
lods
push
pop
loopne
mov
xchg
jecxz
inc
cmp
dec
xor
jne
jnp
popa
push
jp
fsubrp
cmp
bound
push
push
mov
cs
inc
mov
xchg
aam
dec
aad
int
sbb
fidivrs
cmp
or
or
push
mov
xchg
mov
aas
les
jae
cmpsb
stc
pop
cmp
adc
adc
mov
dec
ret
fmul
mov
adc
adc
js
mov
lret
add
sbb
pusha
stos
leave
jle
enter
xor
ret
sbb
iret
jp
cld
pop
rclb
inc
mov
stos
outsb
cmp
pop
sbb
cmp
and
inc
cmpsb
pop
sbb
inc
push
xchg
cwtl
dec
jno
loop
mov
jmp
adc
popf
das
xor
lahf
inc
out
push
sbb
push
or
jne
mov
jb
outsb
loopne
insb
sub
out
cld
fidivl
pop
jnp
test
and
xor
outsl
adc
ljmp
mov
out
dec
outsb
popf
repz
jp
mov
xchg
mov
mov
mov
movb
lahf
xchg
cmc
adc
push
jl
xchg
jg
mov
mov
xchg
xor
loope
sbb
xchg
cmp
inc
mov
out
inc
repnz
sti
cmp
mov
push
movsb
mov
fwait
sbb
shrl
add
insb
mov
int3
and
fs
or
mov
pushf
pusha
iret
or
stos
xchg
dec
dec
sahf
and
test
aaa
pop
and
push
mov
fildl
xchg
lods
mov
dec
cmp
sub
lods
mov
add
in
mov
mov
cmp
mov
outsb
pop
lods
push
and
adc
scas
daa
mov
mov
and
and
iret
fwait
mov
call
out
andl
add
sti
daa
push
lods
adc
cmp
mulb
in
mov
jmp
push
dec
ja
pop
js
push
fildl
add
sbb
adc
lahf
lret
cltd
pop
sbb
cs
je
imul
add
cwtl
ret
imul
movsb
test
push
out
fnstenv
popf
aas
clc
dec
pushf
jl
dec
pusha
xchg
sbb
add
sub
fwait
push
cmp
mov
test
jne
xorl
add
popa
hlt
rclb
lahf
jns
repnz
mov
inc
add
rcr
push
push
push
push
lahf
in
je
dec
sti
in
add
inc
xchg
aam
inc
push
mov
stos
lret
xchg
and
inc
inc
or
movsl
lea
test
dec
and
js
out
fst
ret
jg
ret
cmp
and
inc
rolb
test
adc
lea
insl
or
in
cmp
enter
sbb
outsb
pushf
repz
cmpsl
mov
xchg
xor
pop
movsl
mov
cmp
lret
xchg
shlb
mov
xor
mov
pop
and
mov
cmp
loopne
cmp
into
sub
pusha
ret
and
cmpl
dec
arpl
xor
dec
notb
ret
lock
mov
push
xchg
sahf
stos
xchg
sti
dec
into
aad
pusha
lahf
pop
subl
mov
add
dec
mov
dec
inc
stos
mov
sbb
js
sbb
fcoms
jne
mov
lods
jnp
xchg
ficompl
mov
decb
js
stc
dec
adc
loopne
cmp
in
dec
push
dec
push
add
ljmp
mov
into
shlb
lds
aaa
daa
pop
cmp
pop
insl
push
popf
das
xor
mov
mov
push
neg
scas
test
fisttps
and
cmpsb
mov
int3
or
mov
hlt
mov
cmpsb
pusha
xlat
sbb
sarl
cli
movsl
or
sti
into
inc
stos
xchg
dec
sub
js
mov
push
shl
shl
cld
and
rclw
adc
or
dec
jl
mov
lret
int3
cmp
pop
push
adc
or
fsubrs
aad
jmp
iret
and
andb
test
and
mov
into
jp
outsl
sub
test
je
repz
ljmp
filds
cmpl
xchg
and
xchg
cmp
lret
xchg
movsb
icebp
sub
hlt
nop
in
pop
cmp
push
pusha
mov
fdiv
jnp
mov
adc
leave
bound
jns
and
fwait
inc
xor
adc
addl
adc
jo,pt
std
or
dec
mov
sub
addr16
cmp
mov
in
pop
cmp
or
icebp
int3
lock
int
popa
cmpsb
pop
or
outsl
test
push
cs
mov
mov
mov
xorl
popf
int
repnz
out
mov
daa
dec
xlat
jle
adc
daa
andl
sbb
push
dec
mov
xor
in
pushl
dec
iret
cltd
rcrl
icebp
sbb
orb
pop
test
sbb
pop
insl
mov
cmc
imul
lret
neg
jno
mov
dec
dec
sbb
or
or
jge
dec
add
dec
mov
xchg
xchg
lods
sbb
je
clc
sub
int3
xor
push
stc
adcl
jecxz
xor
jge
cld
mov
xorl
pop
repnz
push
ret
inc
mov
sub
repz
ss
in
lahf
mov
loopne
mov
cmp
or
inc
sub
pop
jo
xor
stos
dec
fsub
pop
dec
mul
stc
xchg
dec
lock
std
sbb
jo
xlat
jle
adc
adc
mov
adc
inc
out
lcall
xchg
loop
xor
or
scas
mov
fxch
push
test
outsl
lcall
in
sbb
mov
into
insl
inc
imulb
jecxz
and
imul
and
hlt
enter
jne
add
xchg
lcall
xlat
std
data16
jp
mov
fucomip
push
loope
and
jno
mov
push
xlat
ret
in
dec
inc
loop
negl
jae
in
sbb
sbb
mov
shl
mov
push
into
movsl
in
test
dec
mov
push
inc
mov
xor
pop
dec
jmp
cli
jae
jmp
push
adc
push
or
icebp
mov
js
mov
shlb
sahf
mov
out
in
icebp
sbb
shll
and
cwtl
dec
in
and
ja
xchg
jae
add
mov
das
add
std
addr16
cmp
mov
shll
aas
cs
lds
xchg
adc
jae
sbb
mov
pop
andl
inc
int
dec
xor
xor
jo
cmpsl
cmp
cli
xchg
jecxz
movsl
ficomps
jo
punpckhwd
push
icebp
and
jnp
fistpll
in
ret
dec
sbb
jno
notl
subb
xrelease
jbe
cli
stos
add
push
fs
pop
and
or
add
iret
xor
imul
les
scas
insb
lcall
jecxz
xchg
or
or
inc
pop
in
ss
and
popf
jle
mov
push
inc
nop
pop
cmpsb
daa
insl
push
pop
int3
addr16
out
xchg
aam
cmp
push
sub
movsl
xor
repz
xor
xchg
and
lahf
or
daa
or
xchg
xchg
dec
inc
sbb
mov
jo
sahf
adc
mov
mov
das
div
pop
or
and
xchg
negb
sub
jb
xchg
pop
dec
pushf
inc
imul
push
xchg
test
fdivrl
outsl
shrl
cs
mov
stc
pop
mov
jno
or
js
inc
dec
neg
jns
add
xchg
mov
inc
mov
mov
daa
lcall
ss
sbb
lods
jne
adc
inc
push
mov
inc
jmp
mov
cwtl
icebp
mov
sub
jae
pop
ret
push
stos
sti
add
jp
mov
or
xchg
cwtl
inc
popa
push
mov
mov
bound
cmpsl
jmp
aas
stc
mov
cmp
jecxz
test
push
std
loope
outsb
jns
inc
sbb
stos
gs
or
and
adc
mov
addl
push
rolb
icebp
xchg
and
xorl
mov
addr16
pop
mov
data16
jae
nop
sub
cli
fsubrl
outsl
xchg
hlt
test
or
jecxz
jmp
filds
jne
in
mov
ficoml
out
push
add
in
ljmp
and
rcrl
int3
loopne
xchg
popa
cmc
cmpsb
out
jp
out
sub
mov
push
or
repz
add
es
imul
pop
sbb
fistpll
into
add
pop
aas
fadds
subl
jmp
insb
dec
imul
push
cli
jo
pushf
repz
push
fucomip
scas
aad
add
jns
movsl
xchg
cmpsl
mov
xchg
fisttpll
fs
xchg
xchg
jbe
dec
jbe
aaa
sub
stc
jge
or
add
mov
and
mov
outsb
fstps
cmpsl
push
sbb
dec
lea
les
cmp
fisubrs
ds
push
or
inc
lcall
imul
cli
sub
int3
or
push
cld
mov
dec
push
fildll
inc
pop
ljmp
cmpsb
loopne
xor
lods
push
push
movsl
sub
sub
cmc
or
pusha
fwait
add
shlb
mov
fcmovnbe
cmpsl
push
std
and
sbb
pop
cmp
fadds
pop
sub
pop
pop
out
orl
jg
dec
in
sbb
scas
loopne
cmc
inc
push
in
xor
pop
mov
fisttps
mov
push
das
jae
mov
and
mov
repnz
inc
les
cltd
andl
dec
jbe
or
push
mov
insl
bound
lret
es
mov
enter
cs
ret
push
fsubl
add
jb
inc
aaa
adc
ret
je
or
pop
lods
sbb
cmp
push
pop
lea
clc
icebp
lods
ret
mov
cmp
lods
push
fisubl
mov
dec
xchg
sub
jecxz
or
scas
sub
dec
cltd
mov
ja
jno
imull
cli
add
mov
lcall
add
imul
mov
adc
jnp
cmc
inc
adc
mov
cmc
fdivrl
test
push
sub
mov
pop
xor
cmpsl
mov
outsl
cmpl
sub
mov
dec
mov
popf
rclb
popa
clc
xor
loopne
jp
test
scas
into
dec
jge
jl
add
sbb
adc
subb
sub
ret
fsubrp
sub
sub
stc
dec
cmp
pop
jp
pop
les
aam
mov
sub
sbb
mov
push
push
js
fldenv
sub
mov
pop
jl
cmp
ret
ffree
aad
test
pop
es
and
data16
sbb
cmp
cmp
sub
lret
ret
push
sub
xchg
xchg
push
or
cltd
jecxz
mov
xor
lods
mov
mov
add
aad
jp
inc
sub
push
xchg
pop
mov
mov
cmp
sub
or
jge
jne
lods
push
repnz
idiv
sbb
add
fwait
jle
loop
xor
xchg
and
stos
add
mov
mov
cmp
ficoms
mov
ret
dec
add
pop
jp
shll
mov
pop
cmc
shrl
lret
ret
sub
pop
ja
or
or
jno
test
gs
ss
popa
dec
jl
popf
pusha
mov
out
ja
ds
xlat
and
in
mov
inc
rclb
stos
cmp
add
hlt
sarb
xchg
outsl
xor
scas
loopne
xchg
daa
adc
mov
cmp
es
js
dec
or
inc
mov
dec
push
addr16
mov
shll
sti
jle
adc
jl
loop
gs
fisubl
hlt
scas
pop
sahf
mov
jl
cwtl
mov
cmpsb
xor
jns
lods
xchg
add
dec
push
push
mov
push
mov
push
scas
pop
adc
pop
mov
add
fwait
mov
dec
pop
cltd
mov
xor
scas
loope
out
or
mov
jmp
popa
or
xchg
pop
test
mov
cmp
cmpsb
les
mov
lret
and
repnz
stos
out
mov
pop
addr16
iret
scas
inc
push
add
call
stc
out
jg
xchg
out
jo
out
cmp
in
sub
sub
push
sbb
xchg
adc
subl
jg
jno
dec
call
pop
bound
adc
pop
enter
sahf
rcrl
push
cmp
jae
fdivr
ss
lods
test
gs
mov
xor
pop
movsb
pop
add
push
arpl
mov
sbb
add
mov
lods
sbb
push
xchg
mov
push
mull
push
mov
mov
sub
jb
xor
loope
sub
jl
scas
xchg
imul
test
or
ja
mov
jg
jmp
cmp
mov
daa
stos
lcall
in
call
add
daa
xor
js
in
mov
loopne
adc
fistl
add
sub
outsl
call
or
xchg
imul
xchg
test
test
cld
mov
test
adc
mov
out
mov
ficomps
in
mov
mov
shr
in
jne
iret
out
aad
fnsave
cld
mov
fidivrs
loope
cmp
cmc
fwait
rcrl
addr16
inc
xchg
ret
int
clc
lods
xorl
punpckhwd
pop
scas
mov
in
mov
ja
sub
sbb
rclb
aaa
popa
lret
inc
scas
shrb
dec
xor
cld
outsl
pusha
pusha
mov
mov
int
xchg
sbb
arpl
cs
pop
in
notl
std
sub
std
rolb
cltd
push
mov
jne
xchg
in
push
inc
sbb
pop
lret
mov
mov
and
imul
ljmp
xchg
call
aas
jp
outsb
push
in
je
push
sub
cmp
mov
mov
or
mov
inc
cmp
aam
imull
mov
and
mov
rorl
scas
xchg
inc
mov
xchg
push
insb
mov
das
mov
loopne
add
cmp
std
popf
mov
sbb
xchg
push
adc
jno
inc
call
pop
adc
jge
arpl
call
cwtl
mov
in
lret
xor
rcrb
data16
jns
ret
sub
iret
fildl
or
mov
sbb
movsl
xchg
add
mov
pop
mov
push
and
jg
out
xor
in
js
insb
int
jnp
xor
in
dec
lret
mov
mov
cmpsb
pusha
xchg
cmp
scas
js
orb
inc
fdivs
inc
je
mov
in
in
xchg
popf
leave
arpl
adc
mov
add
pop
icebp
dec
mov
jmp
pop
mov
enter
jb
loop
mov
fisttps
sub
popa
mov
data16
mov
cmpsb
push
push
ret
inc
mov
adc
pushl
cmp
pop
rcrb
inc
testl
loop
fstl
popf
ret
stc
mov
negb
xchg
xchg
xchg
jo
dec
cltd
push
sub
adc
out
mov
dec
dec
xchg
inc
inc
inc
xor
cwtl
adc
pop
add
fcomps
je
sub
cs
test
inc
popa
js
mov
jns
mov
cmp
lds
test
push
add
movsb
jnp
insb
push
popf
sahf
int
fnstenv
sbb
stc
or
test
nop
and
gs
mov
iret
pushf
std
xor
sub
jp
aaa
xor
fwait
insb
pusha
jecxz
push
int
mov
push
lcall
xor
popa
and
test
cmp
pop
sahf
adc
fcmovnbe
inc
negl
pop
sbb
xchg
loope
stos
mov
or
ja
xchg
adc
push
pop
or
dec
sbb
iret
sahf
fmull
adc
addb
enter
dec
push
add
sbb
cld
add
es
incl
fidivrs
stc
cltd
dec
fmull
aas
js
mov
mov
xchg
data16
sub
and
jmp
in
lret
repnz
mov
mov
orl
inc
sbb
out
daa
fists
iret
xchg
ficomps
add
mov
mov
js
mov
add
sbb
pop
cs
jmp
stos
inc
rcll
int
fistpll
test
pop
jge
lods
xchg
and
dec
or
gs
sbb
lcall
mov
adc
loop
mov
adc
and
movl
push
jmp
adc
jae
pop
fcoms
xor
mov
ljmp
jecxz
orb
jl
outsl
int3
hlt
or
mov
jne
stos
fistl
mov
sbb
push
stos
sti
add
dec
cmpsl
mov
movsb
cli
jg
cmp
sub
sub
aam
xchg
xchg
in
fxch
subb
cmp
hlt
dec
fwait
cmp
pop
pop
lahf
mov
scas
and
push
pop
and
lret
nop
inc
dec
cmp
dec
data16
setbe
jnp
mov
fsubrl
stos
xchg
mov
xchg
aaa
loopne
cli
adc
andl
cld
push
sbb
inc
cmp
pop
loope
sub
js
jp
or
push
outsl
cmc
movsb
adc
loopne
dec
mov
mov
xchg
xchg
mov
mov
inc
mov
daa
test
cmp
dec
inc
pop
xchg
clc
arpl
mov
xlat
sbbb
mov
mov
cmp
adc
cmc
sub
pushf
push
cmp
push
jle
test
lock
mov
insl
pop
aaa
pop
push
dec
aam
idivb
pushf
aaa
pop
mov
out
push
cs
mov
stos
sub
xchg
cmpsl
push
neg
mov
test
jae
push
push
inc
sub
pop
incl
jns
or
fucomp
mov
orb
pop
mov
mov
fs
and
and
xchg
out
mov
mov
cmc
aad
aad
push
sahf
mov
ror
dec
call
add
imul
aas
pop
mov
cltd
pop
sbb
test
mov
lods
push
mov
lss
mov
and
out
pop
sbb
fcoms
insl
pop
push
adc
sahf
mov
dec
add
sub
mov
roll
test
cmpsl
pop
fisubl
mov
in
and
push
cmpsl
fs
rclb
and
mov
imul
je
xchg
mov
jl
insb
scas
push
rcrl
cmp
sub
pop
or
jle
xor
mov
cltd
cmp
sbb
test
mov
jg
fstl
mov
and
mov
pusha
sbb
cmp
iret
mov
js
lret
pop
jg
adc
fwait
dec
lret
aad
test
je
mov
mov
pop
jp
int3
js
push
lods
add
cmp
pop
xchg
inc
gs
mov
dec
jno
push
popa
loopne
in
and
int3
xchg
adc
in
mov
movsl
dec
cmc
mov
ljmp
scas
fisubrs
add
jne
fcompl
inc
pop
mov
scas
adc
add
gs
and
int
xor
lcall
aaa
pop
xlat
pop
or
xchg
mov
bound
mov
das
push
sbb
push
punpckhbw
adc
loop
adc
cmc
enter
decl
test
adc
push
fstps
sub
fisttpl
sbb
xor
stc
out
dec
or
xchg
dec
adc
mov
fcoms
xchg
es
sub
add
push
stos
cmc
test
mov
into
insl
adc
jecxz
cmp
jp
lock
xorl
das
mov
sbb
mov
pop
loop
cmpsl
in
scas
or
ret
aad
orb
jne
arpl
paddw
sub
dec
sub
sbb
xchg
or
std
std
xchg
inc
jmp
xor
mov
jns
xchg
popf
mov
mov
subb
sbb
sbb
shll
popa
ror
int
enterw
imulb
push
inc
call
shl
and
test
push
pop
xchg
pop
push
pop
push
pusha
ret
dec
outsl
pop
femms
fs
adc
mov
orl
mov
pushl
test
lds
sbb
xor
push
fsubl
mov
movsb
mov
pop
push
jae
pop
ret
xchg
xchg
sti
loopne
pop
popa
repnz
dec
mov
mov
into
xor
add
repnz
lock
out
or
dec
testl
or
insl
adc
mov
sahf
mov
mov
add
pop
cmp
movsl
add
pop
pop
mov
or
add
push
jb
rep
iret
mov
call
mov
jg
mov
rcrb
mov
and
cmp
and
push
mov
inc
in
aad
cwtl
dec
cltd
int
mulps
movsb
or
dec
std
and
xchg
xchg
sarb
fisttpl
stc
lock
and
test
popf
dec
cmp
mov
inc
xchg
outsb
decb
jg
ja
dec
popf
es
leave
mov
adc
sbb
mov
subl
mov
jnp
fstps
stos
cs
add
xor
jnp
or
loopne
scas
inc
fsubs
sbb
les
mov
push
repnz
testb
leave
jmp
jne
cmp
addr16
xchg
jo
pop
inc
pop
rclb
mov
inc
xlat
or
shlb
in
ja
popf
inc
cwtl
mov
mov
cmpsl
js
mov
pop
mov
fmuls
pop
outsl
sahf
or
cli
arpl
push
sbb
mov
mov
mov
xchg
xor
sti
icebp
xchg
insb
jmp
dec
or
scas
mov
insb
mov
daa
mov
push
movsl
cwtl
ljmp
rorb
ret
sarb
add
jmp
jbe
pop
pop
lock
pushf
idivl
int
sti
repz
jns
mov
mov
mov
push
loopne
add
addr16
ret
or
push
adc
xchg
popa
mov
out
jo
movsl
push
cmpsb
es
popf
adc
or
mov
cmpsb
fcompl
je
xor
xor
les
out
into
ret
jg
ret
mov
addr16
add
dec
or
add
ds
es
sub
add
add
inc
mov
fwait
dec
cli
inc
addl
repnz
push
mov
iret
pop
add
popf
cltd
fnstsw
push
mov
mov
dec
ljmp
in
daa
mov
sbb
jg
out
popa
lret
jp
xchg
jns
popf
mov
pop
and
and
inc
test
inc
mov
adc
mov
adc
push
js
jmp
or
test
loop
test
cmpsl
stos
push
cmp
xor
cmp
inc
subps
data16
andl
ljmp
mov
aad
inc
lock
jmp
fwait
addb
jmp
or
jb
pop
sub
lret
test
mov
xchg
jne
mov
and
jl
pop
jne
adc
gs
lahf
fs
jnp
pop
mov
xor
pop
in
pop
pop
or
fwait
push
cmp
or
fistpl
insl
daa
jle
or
cmp
lods
xor
vpmovusdb
call
sbb
pop
arpl
xor
sar
xor
jp
stc
cld
jge
mov
mov
mov
and
dec
inc
xchg
scas
sub
shr
jge
js
pop
loope
sarb
mov
leave
addl
fistps
pushl
push
inc
xchg
xlat
ja
mov
push
cmpb
arpl
ss
inc
pop
mov
jp
cli
jne
cltd
pop
fwait
mov
mov
pop
shrb
in
sbb
hlt
test
divb
add
lods
adc
fcmovnb
out
and
or
test
scas
pop
xchg
push
pop
mov
insb
pop
adc
xchg
iret
mov
enter
mov
dec
adc
inc
sbb
adcl
xchg
cwtl
add
in
push
mov
add
imul
xchg
pop
sbb
or
aad
inc
fistpll
pop
call
fs
cmp
gs
bound
jp
sbb
sti
out
call
dec
mov
xchg
gs
cwtl
pop
scas
push
loopne
xchg
mov
add
xlat
imulb
or
adc
sbb
stos
sahf
cmp
xor
or
pop
push
sub
xchg
mov
add
pop
cld
dec
fcmovnbe
cmp
mov
ret
push
sti
roll
scas
in
test
push
iret
ljmp
add
insb
adc
pushf
mov
pop
js
push
dec
pop
jmp
mov
pop
and
stc
jbe
xchg
out
add
mov
mov
divb
xor
cmp
xchg
inc
jmp
int3
dec
imul
lods
in
inc
pop
lods
mov
inc
sahf
push
in
lds
aam
adc
mov
adc
or
adc
fdivrs
push
cmpsb
movsb
mov
cwtl
xchg
mov
mov
inc
aad
int3
dec
pop
dec
xor
gs
ud2
scas
mov
icebp
mov
mov
dec
or
adc
fprem
xlat
shr
lods
dec
fs
ja
dec
mov
add
mov
mov
cmp
out
pop
test
shl
mov
mov
mov
and
test
daa
enter
mov
mov
xchg
jmp
fs
bound
and
xor
jo
testb
iret
sbb
lret
bound
je
mov
cltd
test
les
pusha
push
out
sbb
cmp
mov
pushf
aaa
loopne
mov
jp
enter
js
push
xchg
loopne
mov
and
jmp
push
in
loop
pop
pop
fstpt
cmp
dec
decb
mov
adc
xor
ja
outsb
int
jo
inc
push
in
push
mov
dec
adc
push
mov
out
fiadds
lods
push
inc
in
imul
jecxz,pn
jp
mov
dec
sti
repnz
cmpl
mov
hlt
roll
mov
mov
sbb
faddl
sub
sub
cmp
adc
cmpsb
dec
nop
inc
adc
pop
repz
hlt
xor
out
movsl
je
cmp
data16
jb
sub
ja
nop
test
fdivr
popf
fildl
xor
pop
dec
leavew
adc
or
mov
lock
outsb
out
xchg
or
cmp
or
enter
les
push
sbb
mov
push
cmpsl
insb
scas
push
adc
sbb
imul
rorl
leave
pop
pop
push
push
mov
jge
frstor
push
mov
popf
nop
adc
rcll
popf
xorb
mov
add
sub
std
mov
rolb
sbb
mov
movsl
subb
daa
clc
lock
pushf
fs
das
dec
push
jno
aas
out
cmp
rolb
pushf
jae
enter
and
and
cld
ss
aas
push
andb
in
add
jecxz
aas
mov
lahf
pop
scas
push
popf
das
cmp
out
dec
push
loop
xchg
cwtl
xlat
mov
mov
fisttpl
stos
aaa
dec
push
push
shr
push
mov
int
lea
sub
sub
testl
pop
addr16
and
ret
push
mov
repz
jno
cmp
pushf
dec
inc
mov
push
xchg
mov
out
mov
imul
in
mov
in
xchg
pop
dec
cli
inc
dec
lret
jmp
inc
inc
jg
cmc
mov
cmpl
push
xor
loop
push
sbb
jg
push
sub
lret
dec
and
cs
fimull
adc
push
jb
sbb
lahf
imull
inc
std
or
daa
xor
in
sub
and
push
sbb
and
fistpll
in
jg
std
inc
je
jo
mov
adc
fidivl
fcompl
mov
mov
jne
movsb
sbb
std
pop
mov
pop
inc
adc
imul
lret
adc
jns
or
add
push
outsb
add
ficompl
jno
xor
mov
push
dec
push
xchg
or
xchg
push
rol
scas
es
mov
leave
or
xchg
mov
mov
in
xchg
sahf
js
fdivrs
pop
adc
repz
cmp
scas
hlt
mov
lret
inc
ja
mov
ret
out
mov
out
push
pop
int
sbb
and
xchg
or
daa
jo
popa
or
stos
mov
repz
add
add
in
add
cltd
popa
inc
pop
mov
adc
out
push
mov
jl
testl
mov
add
push
sahf
jp
and
pop
sub
mov
xchg
or
daa
lahf
data16
xchg
fmuls
xchg
loop
push
cs
mov
mov
jmp
sub
repz
jb
mov
mov
xlat
lock
ds
inc
movsl
cltd
cs
dec
imul
cmc
and
xor
inc
es
cmc
mov
popa
jg
inc
jl
sbb
mov
cmpl
daa
stos
cmc
mov
mull
push
or
std
adc
out
stos
inc
cmp
dec
in
jp
imul
shrb
or
insb
mov
and
ret
fwait
mov
xor
jecxz
sbb
add
xor
mov
cmp
cmp
xor
ds
mov
addr16
mov
repnz
inc
cld
push
rorl
pushf
int
lods
jo
ljmp
xor
cmc
mov
lock
cmp
inc
cltd
xor
cmc
mov
sub
push
push
insb
pop
loopne
imul
lret
into
jnp
jle
add
fiaddl
dec
stos
inc
dec
inc
lods
push
push
mov
inc
faddp
movsb
outsb
pop
push
stc
scas
orb
pop
lds
inc
mov
repz
insl
cmp
xchg
pop
js
jmp
mov
xor
and
mov
adc
mov
cli
dec
mov
xchg
add
mov
lahf
clc
out
jb
sbb
daa
data16
sub
shlb
cmp
add
and
mov
call
cmp
leave
jg
dec
not
lds
in
xor
dec
int
in
dec
dec
mov
loopne
jle
jle
insb
and
sbb
add
add
movsb
inc
add
add
xor
lock
test
lods
or
jnp
pop
lods
add
into
sbb
shr
loope
mov
cmp
jle
mov
aam
ljmp
sub
addl
call
mov
repz
je
pop
fwait
push
inc
add
call
lret
int3
shlb
mov
outsl
push
lea
mov
fldenv
jb
and
insl
pusha
imul
in
mov
push
stos
jnp
repnz
outsb
adc
push
mov
test
push
jge
sub
mov
mov
cltd
sbb
loope
sub
pop
cmp
and
dec
mov
pop
adc
lods
stos
add
pop
inc
sarb
daa
xchg
fsts
sub
flds
sbb
frstor
jecxz
cld
or
or
out
push
idivb
mov
xchg
mov
cmp
aam
adc
leave
movsl
cmpsl
arpl
shll
loope
insl
in
xchg
adcb
xchg
xchg
and
sbb
inc
push
jne
in
push
pop
in
stc
push
jo
cmp
inc
sarl
cs
imulb
enter
dec
or
sbb
mov
push
lret
mov
jp
fwait
cmp
mov
jb
sub
arpl
adc
push
xchg
adc
mov
lret
popl
ds
mov
or
mov
or
pop
add
sub
xor
sbb
cs
xor
fcompl
fisttpll
insl
inc
sbb
fiadds
sbb
je
iret
xchg
mov
fidivl
jmp
fwait
or
repnz
jl
repz
jne
leave
lock
int
jmp
enter
add
or
xor
mov
cltd
rep
mov
iret
sbb
push
shrb
sub
or
ja
or
xor
in
aad
push
into
add
xchg
aaa
ret
mov
js
sti
adc
jne
int3
or
or
daa
sbb
push
jno
fimull
in
mov
mov
or
lret
les
bnd
pop
imul
scas
pop
es
arpl
xchg
sbb
bound
repz
loop
incb
inc
jl
dec
inc
outsb
sub
mov
sti
lea
sbb
cmpsl
adc
pop
cltd
jp
ja
inc
push
movsb
xchg
mov
test
mov
cltd
lods
lcall
sbb
jl
pop
sbb
cmp
aas
sti
inc
and
ss
xchg
mov
jl
add
mov
add
aam
ss
daa
fldenv
lods
pusha
mov
inc
cltd
arpl
pop
cmp
enter
sbb
rolb
mov
cmpsb
jns
dec
and
mov
cmc
push
xchg
cwtl
or
mov
out
mov
repnz
in
adc
push
arpl
sarb
xorb
cmc
lea
push
add
repz
fwait
add
add
sub
and
dec
xchg
sbb
sub
sti
jae
sbb
out
into
das
outsl
inc
jb
adcb
movsb
pop
imul
btc
pop
mov
sti
daa
enter
divb
mov
mov
adc
jle
add
push
stos
dec
test
iret
xchg
mov
mov
idivl
add
sbb
jne
pusha
xor
add
test
dec
mov
aad
mov
shrb
mov
das
add
xor
push
add
test
fistl
and
lock
daa
pop
and
inc
adc
sbb
xchg
mov
ret
dec
fnstcw
and
add
ljmp
xchg
mov
add
pushf
std
xchg
mov
mov
sbb
xor
sahf
inc
push
mov
fldl
negb
sub
push
adc
pop
pop
inc
xor
scas
pop
adc
popa
stc
stc
out
arpl
and
imul
and
test
mov
sbb
lret
and
mov
add
data16
dec
adcl
sbb
sbb
nop
bound
push
or
add
lahf
sub
dec
or
mov
repz
cmp
mov
xor
sbb
ljmp
rcll
mov
push
out
sub
push
stos
and
or
aaa
cs
aaa
push
push
sbb
imul
out
ficomps
inc
lds
loopne
mov
stos
sbb
cmpsb
imul
jl
js
xchg
lret
xor
stos
cmp
mov
lcall
mov
stc
mov
adc
inc
xchg
insb
fwait
xchg
mov
xor
test
adc
mov
call
je
sub
and
and
cmp
push
out
jbe
pusha
push
mov
xorl
popf
dec
dec
mov
hlt
jne
pop
lcall
jb
sub
jbe
scas
fcoms
mov
repz
sbb
sub
shl
adc
shlb
mov
into
sub
mov
pop
push
add
mov
pop
js
push
aam
dec
out
test
inc
out
jl
xchg
cli
int3
fs
dec
out
sahf
int3
xchg
adc
arpl
cmpsb
adc
add
jo
adc
or
das
inc
and
jle
xlat
adc
in
insb
mov
sahf
out
loope
js
in
loopne
outsb
mov
mov
movsb
dec
sub
pop
mov
mov
shrb
test
add
pop
or
mov
push
mov
lahf
sbb
loope
dec
fsubrl
add
sub
bound
es
adc
xchg
scas
dec
mov
data16
fwait
pop
stos
mov
adc
data16
les
movsb
pop
inc
loop
fisubrs
scas
ret
xor
add
lods
ja
cmpsb
inc
cmp
adc
jbe
stc
push
mov
lcall
les
jno
mov
jge
pop
test
mov
leave
je
fdivrs
popa
cmp
leave
xchg
sbb
xchg
inc
push
imul
cmpsl
sub
or
sub
das
dec
call
pop
aam
hlt
iret
ss
push
shrb
clc
sarl
jg
and
popf
dec
xchg
arpl
add
fdiv
icebp
xor
or
dec
les
pushf
jecxz
pop
out
xchg
push
xor
push
sar
popf
lcall
ljmp
xchg
mov
inc
push
imull
neg
mov
adc
pop
out
mov
mov
leave
jecxz
btcl
fwait
mov
adc
out
into
cmpsb
test
out
insb
and
and
test
test
dec
out
or
push
imul
mov
test
sub
jle
and
js
mov
add
aaa
cmp
sbb
loope
pop
subb
push
push
leave
in
mov
sub
jle
mov
pushf
mov
fcomi
mov
mov
inc
jno
rcll
leave
inc
jp
das
arpl
mov
lcall
scas
aas
push
out
jmp
cmpsl
sbb
pop
mull
es
ljmp
pop
cmovnp
pop
std
fisubrs
fidivs
inc
xor
fwait
stos
aad
cmpsl
sbb
mov
cmovge
pop
dec
or
mov
add
std
cwtl
push
adc
add
mov
int
sbb
les
xchg
inc
movsb
into
and
les
fisubrl
sub
mov
cmpsl
test
enter
pusha
and
call
pop
cwtl
mov
or
js
xchg
or
mov
mov
and
repnz
rcrl
enter
pushf
jno
mov
and
stc
or
dec
pop
repz
jb
into
int
add
adc
sahf
testb
sub
insb
stos
out
mov
push
popl
xchg
fsubs
xchg
aas
inc
push
pop
outsl
add
sbb
sbb
in
pop
sub
in
insb
fdivrl
mov
in
mov
cmp
cmp
xor
jmp
fwait
mov
je
mov
dec
lods
rclb
pushf
fstl
cmp
test
add
jne
jne
lods
scas
xor
movsl
xchg
lock
dec
lahf
cmc
sbbl
orl
mov
jge
das
jl
and
inc
jns
ja
mov
fwait
arpl
xchg
sbb
jge
pop
jl
fs
repnz
sbb
push
xor
xor
cmp
repnz
xchg
push
mov
scas
jecxz
mov
mov
and
ret
addr16
cmpb
add
ficompl
add
es
cmp
mov
std
ret
xchg
pop
push
fdivrs
add
in
movsl
jle
test
repz
fbstp
stos
subb
and
loop
insb
out
iret
xchg
adc
fcompl
xor
scas
push
ss
mov
xchg
jb
push
mov
push
lret
std
and
pop
adc
insl
or
cmpsb
fimuls
ja
xlat
leave
push
movsb
out
pop
and
dec
sbb
mov
sarb
sbb
pop
stos
inc
insl
sti
loope
add
ret
pop
out
cmp
adc
adc
cmpsl
xchg
cmp
mov
sahf
pop
adcb
xor
out
mov
das
jmp
leave
lahf
dec
sbb
xchg
outsb
add
dec
mov
add
cmc
hlt
pop
stos
cmpsb
mov
lods
mov
std
and
popa
testb
shl
add
mov
lds
fs
dec
stos
movq
faddl
imul
int3
faddl
inc
jl
xchg
repz
push
xor
inc
cmp
cmp
out
xchg
mov
pop
imul
inc
jae
cmp
ss
gs
mov
sub
and
mov
pop
dec
jg
jnp
dec
jns
pop
adc
xchg
dec
fstpl
mov
int
and
pop
adc
pop
push
popf
mov
pop
inc
fwait
cmpb
addb
xchg
fcmovbe
mov
aad
inc
xchg
adc
push
adc
movsl
lea
mov
outsl
addr16
addr16
out
in
sub
sbb
xchg
out
add
cmp
xor
loopne
inc
mov
and
enter
mov
jp
mov
rcrl
aas
push
scas
iret
jmp
xor
call
call
mov
and
fnstcw
add
hlt
daa
pop
xchg
dec
push
sti
jge
pushf
scas
add
xor
xchg
jle
js
in
push
test
and
push
es
popa
mov
mov
pop
or
call
movsb
loop
and
lds
mov
jmp
push
jbe
dec
dec
cmc
or
mov
cmp
push
sbb
int3
or
sub
cmp
xchg
push
adc
ficompl
stos
or
xor
out
cmp
xchg
in
xor
inc
les
lahf
xchg
cmp
jbe
dec
popf
loope
insl
es
push
movsl
mov
cmpsb
ret
xchg
negb
es
lods
push
pop
fisubrs
xchg
jbe
movsl
cmpb
addr16
sbb
push
ja
lcall
jns
inc
lret
add
aam
and
adc
sar
lea
mov
adc
adc
bnd
push
mov
fs
das
dec
sbb
repz
scas
mov
les
cmp
lcall
mov
orl
or
xchg
dec
or
push
ficompl
sbb
jmp
adc
loope
loope
das
les
xchg
out
loope
sbb
inc
clc
jne
mov
hlt
bound
test
mov
jo
and
jmp
mov
insl
jmp
sti
mov
mov
or
sbb
sub
xchg
or
cmpsl
jo
push
ret
pop
lcall
xor
cmp
jno
ds
or
daa
sbb
test
push
pop
and
jae
or
pop
fsubl
int3
aam
adc
mov
popf
popa
test
push
mov
imul
popf
pop
std
jns
shl
jns
inc
cmpsb
mov
pop
add
cmp
pop
cwtl
out
adc
aam
lods
or
xor
mov
push
fs
call
dec
sti
sbb
arpl
xchg
cmpl
iret
pop
inc
push
inc
outsb
mov
pusha
or
push
push
jmp
lcall
popf
stc
add
ljmp
in
jle
into
out
sub
mov
outsb
sahf
incb
mov
das
inc
jnp
es
add
inc
jecxz
mov
push
sub
lea
aam
pop
mov
outsl
pop
add
push
pusha
fwait
add
cld
sbb
out
bound
jge
scas
inc
aas
add
mov
mov
xchg
push
add
xchg
mov
test
sbb
enter
fldcw
lock
lods
call
sub
cmp
mov
adc
add
push
xor
xchg
mov
mov
ret
shl
out
das
and
pop
mov
inc
and
jl
lea
outsl
and
sub
das
dec
js
and
ss
adc
imul
jne
xchg
fists
stos
pop
ss
pop
pop
adc
stos
daa
xchg
pop
mov
rcrb
hlt
cmc
xlat
sub
pop
dec
outsl
dec
loope
add
and
push
or
dec
xchg
gs
stc
and
dec
arpl
fstpl
pop
int3
push
pop
or
out
push
arpl
mov
insb
inc
pop
sub
push
mov
jmp
mov
lea
jb
dec
and
mov
arpl
int3
aad
int
adc
mov
mov
cmp
mov
incl
jb
push
std
in
mov
jl
inc
pop
mov
sbb
adc
xchg
fdivs
das
inc
sub
xchg
sbbl
daa
cmp
mov
sbb
add
cwtl
dec
inc
cmp
cmp
xchg
xlat
pop
xchg
icebp
dec
inc
add
mov
push
and
cltd
cmp
data16
cmp
imul
pop
in
xor
aam
rcl
cmp
xchg
dec
jo
fs
gs
lahf
stos
stos
push
inc
shrb
inc
popl
push
jnp
andb
sbb
sahf
iret
dec
xorl
jns
cltd
xchg
sub
adc
mov
or
jbe
test
andb
sub
dec
mov
xor
data16
mov
or
lods
cmp
lds
pop
loopne
cmpsl
inc
jle
loope
cmp
mov
movsl
mov
cmp
adc
ljmp
adc
sub
lock
lock
lods
xor
cmpsl
xor
enter
call
roll
mov
cld
test
inc
shlb
jg
pop
fdivrs
push
insb
fcmovb
jnp
into
add
pop
mov
das
pushw
push
into
les
into
scas
addr16
xchg
mov
mov
daa
jns
cmc
mov
xchg
fdivl
cmpl
je
sbbl
popf
mov
out
pop
mov
dec
sbb
xor
aad
push
mov
lods
cmpb
xor
jns
int
mov
mov
aad
push
push
mov
pop
jnp
add
leave
inc
test
mov
cmpsb
adc
sub
push
inc
pop
xchg
push
js
mov
out
enter
jns
add
mov
cmp
flds
jge
xor
lahf
xchg
add
fxch
ficompl
lcall
bound
outsl
dec
iret
pop
cmpsb
jp
pusha
sahf
scas
pop
xchg
test
mov
outsb
leave
addr16
fcoml
or
jle
sbb
cld
scas
cmp
inc
lea
gs
les
out
test
jg
cmp
jns
mov
push
shll
pop
sub
cmp
xchg
in
xorl
rcll
sti
sub
neg
mov
cs
iret
xchg
cltd
data16
adc
pop
dec
sahf
cmpsl
xlat
and
add
mov
push
sti
dec
sub
inc
out
arpl
mov
std
shlb
mov
mov
and
jg
insl
outsb
jbe
lret
das
loope
ds
testb
sbb
cmp
inc
xor
push
jg
cwtl
jne
int
mov
and
jnp
cld
loopne
jno
loop
mov
outsb
outsl
xchg
repz
and
in
mov
fildll
sahf
xchg
ror
inc
lret
lea
hlt
scas
pop
xchg
mov
cmp
or
mov
js
pop
add
ret
sar
xchg
or
or
fimull
sub
adc
sbb
jmp
xchg
lods
out
inc
pop
ret
cli
icebp
daa
in
mov
jne
sbb
mov
out
adc
stos
les
mov
xor
lahf
subb
sbb
add
sbb
aas
pop
popa
push
lret
pop
loope
and
dec
test
pop
pop
arpl
in
mov
mov
out
mov
mov
dec
pop
pop
bound
insl
andl
addr16
addr16
pop
ds
sub
pop
cltd
cwtl
pop
cwtl
outsb
test
iret
cmpsl
cltd
or
insb
pop
insb
fdivrl
popa
cmp
fsubrp
mov
jl
fnstenv
fcom
push
das
mov
movl
push
xor
jbe
cmpsb
lret
cmp
or
mov
into
fcmovne
scas
dec
lea
repnz
in
jle
ja
xchg
cltd
adc
lea
popf
inc
xorb
aaa
jno
add
pop
hlt
jns
shrl
or
scas
jg
cld
mov
sbb
and
int3
sbb
cmp
sarb
sub
adc
jg
in
in
int
xchg
mov
add
dec
cld
lret
ret
mov
sbbl
pop
mov
imul
push
push
inc
fwait
or
xchg
es
ljmp
idivl
outsb
daa
jmp
mov
mov
pop
mov
mov
fnsave
jae
int3
test
adcb
gs
jae
xchg
add
pushf
lock
mov
inc
xor
daa
jns
or
ja
scas
and
push
pop
pop
lea
push
push
fst
aaa
cmp
sbb
sbb
lea
shrl
or
les
insl
mov
mov
cmpsb
int
pop
fldcw
lcall
movsb
fcmovne
mov
push
fcompl
fucomi
pushf
shll
or
sub
xchg
pop
cltd
pop
repz
mov
sub
sti
adc
sbb
sbb
enter
cmp
outsb
int
push
xorl
fsubl
frstor
mov
call
inc
jno
sbb
jle
out
push
inc
shrl
jmp
pop
out
mov
dec
adc
add
mov
andb
mov
push
dec
insl
fxch
and
std
adc
push
push
rorl
add
in
pop
scas
xchg
or
or
fbstp
mov
les
out
cltd
push
xor
sahf
in
leave
lods
mov
jge
jle
cld
and
mov
sti
into
push
push
pop
std
loop,pn
or
add
push
sbb
push
in
pusha
sub
loope
mov
pushf
cmp
adc
xchg
and
lods
pop
call
or
dec
mov
and
inc
dec
std
cmp
frstor
adc
inc
mov
shl
aas
sarb
jae
add
out
jg
mov
ds
and
adc
ja
lret
scas
pop
mov
add
pop
adc
arpl
mov
lahf
mov
jecxz
ror
xchg
jmp
mov
xchg
lods
out
xor
cmpsb
xchg
imul
cmpsl
cmp
les
pop
std
rclb
inc
bound
mov
sub
cmpsl
dec
cwtl
mov
cmp
pop
test
xchg
or
sti
inc
dec
stos
fldt
lds
adc
imul
jno
xchg
jg
popa
lds
mov
stos
movsb
xchg
lods
dec
insl
mov
and
cmp
ja
sbb
adc
test
xchg
popf
and
fimull
and
aas
dec
or
xor
cmp
fwait
xor
fstpt
jne
push
push
das
pop
leave
ret
nop
repnz
sbb
cmp
inc
fsts
filds
test
lods
sbb
xchg
sbbb
mov
cmpb
test
lds
insl
inc
cld
xchg
push
mov
jle
mov
push
shlb
jp
cmpsl
adc
aas
and
inc
pop
xchg
and
mov
aaa
test
ds
in
mov
leave
push
shlb
repnz
sbbb
pop
lods
in
xchg
adc
clc
sbb
dec
aas
je
pushf
mov
rclb
inc
xchg
cmp
arpl
push
add
push
je,pn
int
xchg
and
inc
ret
stc
loopne
sbb
leave
jle
jmp
pop
dec
dec
push
mov
inc
scas
inc
jp
xor
lret
push
xor
jl
and
xor
gs
jns
pop
cmp
in
mov
add
test
das
sbb
out
dec
sub
icebp
mov
jle
lret
movsl
mov
cmp
insl
adc
movsl
cmc
inc
xchg
inc
cs
dec
sbb
cmp
fmull
xor
pop
mov
jge
pop
add
push
mov
imul
jmp
lods
xlat
jg
out
lret
xor
push
push
icebp
data16
das
cmp
in
xor
pop
incl
cmpsl
xchg
mov
and
sti
xor
jb
jbe
and
xor
les
sub
sti
push
adc
xchg
adc
loop
xlat
leave
adc
mov
insb
push
or
cmp
repnz
sarb
dec
dec
inc
arpl
dec
jp
jge
xchg
lock
inc
push
add
mov
jo
sti
loopne
lods
push
mov
fwait
push
jns
paddw
add
call
into
cmpsl
push
jo
decl
xor
aaa
fsubrl
fadds
cld
imul
js
cmpsb
cmpsb
fnstsw
std
clc
das
test
cmp
xchg
jecxz
iret
mov
pushf
les
mov
mov
lock
push
and
es
xchg
push
sub
lods
sub
leave
jo
pushf
mov
ja
dec
test
divl
cli
mov
xchg
mov
loop
nop
insb
sub
or
dec
inc
add
cmp
or
adc
sbb
pop
inc
xchg
jbe
mov
or
push
pop
and
subl
enter
or
popf
lret
dec
push
adc
repnz
mov
ret
jne
xchg
mul
stos
mov
scas
xor
into
data16
in
dec
mov
ficoms
mov
cmp
sbbb
jne
fisttps
sahf
mov
arpl
in
aad
adc
mov
or
icebp
call
std
movsl
jns
sbb
popf
mov
jmp
jecxz
or
sbb
clc
sbb
cld
jmp
pop
pop
mov
sub
jno
and
dec
add
ret
pop
jno
ret
pop
mov
push
bound
mov
adc
fsubrp
pop
add
insb
movsb
mov
lds
cmpsl
xchg
xchg
into
repnz
les
lods
cmp
mov
dec
and
jge
mov
adc
es
data16
pop
adc
dec
push
lods
inc
pop
inc
cmpsl
repz
sbb
sub
and
hlt
sub
mov
mov
mov
aad
out
mov
sahf
and
es
sub
mov
and
add
shll
std
xchg
xchg
adc
fs
and
and
ljmp
add
xor
imul
pop
add
xchg
jp
loopne
icebp
mov
add
insb
inc
jnp
xlat
sub
cmp
mov
mov
call
fwait
cld
dec
xchg
sub
xchg
mov
dec
adc
or
jbe
sub
out
outsb
mov
les
mov
push
adc
mov
sub
icebp
pop
cmp
mov
xchg
test
cwtl
pop
ja
lahf
clc
pushf
add
mov
in
xor
pushf
imul
adc
mov
add
dec
xchg
movsb
shll
in
arpl
pop
movsb
sub
out
cmp
mov
pusha
fwait
sahf
jp
mov
cmp
fistpll
neg
ja
or
mov
push
mov
aaa
inc
fimuls
inc
or
stos
push
mov
out
outsl
repz
add
rcll
stos
je
lds
mov
fcompl
cli
or
mov
cvtps2pd
xor
orl
fucom
ret
mov
cmp
daa
stos
xorl
jmp
inc
into
jae
jp
addr16
and
mov
mov
and
pop
sahf
insb
cmp
or
xor
add
jle
pop
sbb
fnstcw
jno
cmc
pop
insl
xabort
jmp
xlat
aaa
xchg
mov
inc
adc
and
adc
jae
sbbb
mov
daa
fdivrl
xor
add
sti
pop
sbb
lcall
push
push
stos
idivb
mov
mov
addr16
cmp
into
cmpsl
xor
icebp
rorb
inc
ror
or
gs
daa
mov
imul
cs
mov
push
das
xchg
jne
repz
xor
jge
inc
rcll
xor
popf
mov
fsubrs
jns
mov
push
lea
or
xchg
stos
xor
cmp
test
sub
xchg
sub
stos
mov
push
push
imul
cs
push
ss
push
mov
jns
mov
jns
mul
rorl
lods
notb
mov
and
adc
mov
jno
cmpsb
adc
pop
fstpt
mov
test
jmp
jecxz
in
fistpl
testb
push
push
mov
push
xlat
inc
inc
sub
mov
out
stos
stos
loopne
mov
test
cltd
sub
stos
mov
jno
lret
rclb
cmpb
jle
and
lods
out
or
push
cli
xorl
movsl
or
or
in
or
mull
out
xor
mov
inc
xchg
ror
js
adc
dec
jnp
jo
divl
and
dec
fwait
imul
or
dec
add
cli
inc
pop
test
stc
lock
scas
fmuls
push
push
push
cmp
ja
outsb
lods
lock
inc
lret
cltd
daa
xor
arpl
loope
dec
add
jns
mov
outsb
fsubs
sbb
push
aad
hlt
rorl
movsl
xchg
and
ficompl
ret
test
out
push
test
roll
pushf
dec
jg
mov
inc
mov
sbb
nop
inc
testb
gs
fsubr
pop
aas
aad
std
mov
pop
xchg
das
notl
push
sub
mov
cltd
xchg
and
leave
or
mov
out
mov
outsl
rcll
adc
lods
fmuls
in
sub
dec
xchg
add
mov
lahf
sub
scas
and
cmp
mov
or
or
xor
cmpsb
and
aad
repnz
sub
test
and
movsb
jmp
pop
dec
push
sbb
negl
iret
gs
incl
loop
mov
dec
rol
stc
pop
jg
lds
jns
lds
out
int3
cltd
sub
out
and
xchg
mov
push
inc
cld
outsb
mov
lods
movups
dec
dec
cmpsl
mov
pop
push
packsswb
loop
inc
sbb
test
aad
lds
or
popf
outsb
lcall
out
popa
add
sbb
dec
sti
aas
mov
scas
xor
push
nop
lock
mov
insl
orl
cmpb
mov
add
addr16
or
and
test
add
xchg
loopne
test
bound
rol
aad
pop
movsl
push
iret
fsubp
andb
push
ljmp
sete
pop
jecxz
fwait
sub
cmp
xor
je
mov
pop
xor
jp
in
sti
sub
addr16
dec
movsb
xchg
in
and
dec
hlt
adc
add
aam
push
stos
cmp
fdivr
and
cmpb
clc
aam
jl
fbstp
xor
fsubs
cmp
cld
sbb
shl
lods
dec
jle
jnp
sub
pushf
cmp
int3
or
lret
push
cmovl
ret
push
cmp
in
mov
cwtl
mov
jp
aam
push
lock
ja
cmp
mov
xchg
in
mov
jns
xorl
lods
stos
mov
sub
adc
movsb
or
faddl
ss
jge
mov
pop
dec
bound
jp
xor
lods
add
inc
adc
xchg
or
fisubs
lods
out
clc
inc
fisubrl
iret
aad
ja
jbe
fnstsw
push
mov
rorl
xchg
or
jmp
xchg
push
jnp
and
lret
repz
jne
pop
mov
add
add
or
lock
movsb
lods
ja
xor
nop
push
add
test
out
xor
sub
push
ficoml
add
xorb
loop
fsub
cmp
mov
mov
push
jecxz
out
or
sarb
dec
mov
push
loopne
imul
in
das
insl
pop
mov
cmpsb
xchg
andl
or
adc
cli
pop
in
pop
aaa
add
or
jns
aad
jecxz
dec
fsubr
rclb
lods
pusha
xchg
pop
and
insl
add
adc
cmp
sbb
push
inc
or
xlat
je
lods
or
push
imull
mulb
and
push
fcmove
shrb
fadd
es
lcall
pusha
or
dec
adc
mov
lea
or
pop
inc
pop
insb
cmp
out
mov
push
pop
loope
shll
push
adc
mov
adc
mov
dec
xor
sahf
dec
bound
lcall
push
fcmovu
pop
mov
adc
gs
inc
mov
pop
sub
or
mov
mov
push
out
lahf
add
inc
mov
adc
cmpsb
push
lahf
mov
fwait
jns
pop
push
mov
jne
push
into
stos
pop
xor
lcall
push
or
andl
xor
rorb
pop
ss
repz
cmc
enter
adcl
lahf
push
fnstcw
sub
int
psubb
dec
out
fcmovnbe
adc
out
outsl
lret
mov
xlat
push
mov
xorb
inc
sub
hlt
test
sbb
and
mov
mov
inc
push
scas
aas
jp
mov
in
jb
cmp
imul
loope
xor
add
movsb
dec
push
das
inc
imul
sub
movsb
jae
enter
push
push
or
mov
into
aam
xchg
cltd
jbe
xor
sbb
ret
mov
in
jecxz
inc
into
mov
cmc
cmp
mov
imul
mov
pop
push
and
mov
shlb
or
or
inc
aam
mov
add
adc
jle
cld
jo
push
inc
sbb
pop
add
lret
sub
in
in
mov
jo
push
xorl
push
cmpsb
xor
cmc
xchg
xchg
or
ljmp
int3
mov
out
add
sbb
dec
pop
call
loopne
jb
adc
nop
xor
or
inc
and
cmc
ss
jne
aaa
pop
mov
xor
movsb
and
aad
shl
and
mov
fstpt
imul
es
sbb
repz
fcoms
or
scas
pop
ljmp
xchg
xor
inc
shl
mov
dec
cmpsl
movsb
sub
pop
push
aaa
adc
stc
out
in
dec
sbb
jg
and
jo
push
add
lea
inc
jge
das
je
jl
out
hlt
jne
subb
call
shll
sahf
cmp
aaa
call
enter
popl
push
mov
shlb
push
notl
push
insl
orb
and
movb
punpckhdq
in
pop
mov
jno
fildll
xchg
mov
scas
pushf
fcmovnbe
jg
aam
cmp
scas
sbb
xchg
push
pop
repnz
sbb
and
sti
arpl
nop
pop
out
je
or
je
rclb
in
xor
push
cltd
add
shr
lock
ljmp
out
in
rol
sbb
dec
in
fadd
sub
inc
cmp
das
adc
setb
mov
jnp
cmpsl
pop
ljmp
outsb
lcall
dec
sbb
dec
push
pop
dec
jbe
into
repnz
add
sbb
inc
lea
gs
sub
cld
xchg
mov
hlt
cmp
jle
cmp
mov
mov
push
xchg
in
add
mov
or
jmp
adc
pop
cmp
idivb
mov
jp
divb
outsb
sbb
stos
xchg
cmc
enter
mov
ljmp
jnp
sbb
arpl
jmp
sar
jae
gs
add
sahf
pop
lret
inc
repz
inc
icebp
xchg
pop
inc
xor
push
loop
leave
jecxz
decb
imul
push
lods
out
mov
ret
packssdw
incb
addr16
aaa
jns
mov
push
mov
lds
iret
sbb
imull
mov
loopne
jne
int3
mov
mov
cmp
jo
jbe
int3
xor
mov
jmp
lcall
mov
fsub
or
jae
cmpsb
mov
shll
je
xchg
dec
sbb
aam
push
out
mov
sub
push
lds
pop
sti
or
int3
xor
lret
sub
pop
fisubs
jae
jns
data16
mov
cwtl
inc
nop
stos
pop
mov
jl
aaa
mov
xchg
lret
or
js
xor
loop
call
leave
mov
dec
ret
xchg
int3
dec
pop
popf
test
add
xchg
in
jnp
adc
andl
pop
inc
xor
rcll
sbb
aad
stos
add
mov
push
mov
inc
aam
clc
push
sbb
mov
mov
xchg
stos
pop
fdivrl
push
jbe
in
jns
mov
xor
mov
adcb
add
and
sub
testb
jae
sub
lret
test
mov
imul
lahf
mov
pusha
fldl
inc
add
mov
lods
daa
test
dec
jle
enter
pop
das
addr16
and
test
hlt
repnz
inc
loope
mov
jne
and
outsl
lods
push
pop
fsts
sbb
lahf
pop
sti
adc
pop
fsubrs
jae
mov
into
push
test
sbb
rcll
lods
outsl
sahf
pop
jbe
and
daa
push
imul
stc
or
jp
test
cmp
insl
adc
cwtl
adc
jmp
xor
movsl
pop
aad
dec
mov
and
cmc
cmp
andl
and
pop
mov
cmpsb
gs
aam
xchg
cs
scas
rcrl
xchg
roll
adc
popa
cmp
jnp
lds
xorb
nop
pop
addr16
jns
pop
mov
imul
shl
call
jns
test
fimull
pop
ret
and
aam
fdiv
cld
push
jae
jns
sti
xchg
shrb
inc
into
pop
testl
lock
aam
or
mov
enter
mov
mov
lods
aad
jecxz
fst
popl
lods
or
xor
mov
out
test
shlb
jmp
gs
ror
inc
jns
cmp
xor
mov
in
outsb
arpl
sbb
cmpsl
inc
mov
int
mov
in
add
cmp
insb
lods
sarb
pusha
andb
sub
sbb
daa
loop
or
pop
jge
js
stos
mov
xchg
scas
mov
or
mov
bound
pop
push
or
insl
push
add
push
push
aad
jge
sbb
scas
xchg
push
das
movsb
mov
fsubs
jnp
sbb
mov
adc
mov
sub
or
les
and
cs
gs
jae
cs
lcall
pop
mov
pop
inc
sahf
or
into
push
ret
dec
xchg
ja
fildll
scas
jmp
fisttpl
adc
inc
outsl
jp
inc
xor
dec
lcall
imul
mov
shlb
test
scas
pop
loop
sbb
shll
pop
orb
pop
xor
stc
scas
cmp
mov
fnstsw
push
jae
cltd
ljmp
mov
add
movsl
jmp
mov
in
lahf
inc
shlb
dec
fs
xchg
fdivr
dec
xchg
adc
sarb
testb
mov
pop
cmpsb
sbb
and
dec
in
and
andl
ds
test
lock
stos
lds
sub
pusha
aam
test
test
ficoms
popf
push
daa
ja
stos
cmpsl
push
adc
or
sub
repz
sbb
mov
and
pop
adc
sub
push
or
into
jno
lds
xchg
or
dec
inc
fstpt
mov
ss
dec
in
mov
movsl
mov
push
sub
hlt
mov
dec
scas
test
loop
das
adc
xchg
pusha
jb
add
nop
ljmp
xor
aas
jg
push
insb
dec
xor
les
and
and
psrld
aad
jp
xor
dec
enter
stos
pop
jb
cli
xchg
add
adc
xchg
mov
int3
std
repnz
mov
adc
ds
add
inc
cmp
fwait
inc
ja
push
cwtl
clc
cld
insl
imul
sub
adc
scas
dec
dec
aaa
outsl
pop
pop
xor
sub
inc
lret
ret
inc
pop
haddpd
push
xchg
xchg
faddl
cltd
jnp
and
mov
ds
mov
pop
xor
adc
das
out
or
test
mov
push
add
insl
push
fdivl
mov
mov
sbb
and
jns
cs
cltd
adc
es
inc
insb
jbe
push
cmp
sub
cmp
loope
test
inc
and
and
push
mov
and
call
cwtl
mov
push
xchg
adc
sub
pop
test
cmp
stc
lock
add
cmp
out
jle
sub
jmp
nop
xor
inc
lret
mov
dec
pushl
dec
mov
xor
stos
in
inc
cmp
imul
pop
mov
out
ss
into
adc
jae
dec
sbb
sbbl
and
mov
fldenv
dec
popf
hlt
mov
call
xor
jmp
inc
or
jl
pop
je
mov
in
cltd
in
imull
popa
fs
ror
pop
mov
sub
mov
push
push
dec
inc
xchg
sbb
icebp
repz
out
push
insb
xor
adc
insl
dec
cmp
ds
mov
cmp
movsl
insb
and
lea
lret
xchg
inc
or
jb
aad
cmp
arpl
test
jae
xor
push
mov
sbb
and
sti
dec
xchg
push
test
dec
push
imul
xchg
scas
push
add
fistpl
in
cld
orb
push
jl
pop
cmp
cmp
mov
add
xor
inc
push
adc
test
dec
push
test
pop
cmp
pop
inc
lods
ret
xchg
dec
rorl
or
ret
out
cmp
loop
scas
mov
pop
inc
jge
cmp
push
inc
jp
adc
popf
je
out
hlt
int3
leave
lret
xchg
add
arpl
jp
cmp
xchg
mov
dec
ret
mov
std
shll
mov
jb
push
xor
push
lds
sarl
lret
lret
adc
pop
mov
push
adc
xchg
inc
add
cltd
mov
adc
loope
decb
mov
dec
add
sub
shlb
xchg
insb
cmp
push
lret
xorl
aaa
adc
pop
call
push
fcoms
jmp
adc
push
xchg
addl
adc
addl
movsb
sbb
nop
je
adc
rcpps
cmc
cmpsl
jle
add
xor
ds
inc
jecxz
mov
icebp
rclb
mov
xor
cmp
pop
or
out
cmp
inc
cmp
add
lea
pushf
pop
cmp
rcrl
aas
xor
test
jnp
aad
das
out
inc
push
jg
add
xor
aas
hlt
pushf
outsb
leave
mov
cmp
gs
push
inc
test
dec
pop
jmp
push
pop
icebp
push
fidivs
sub
mov
xor
ror
xchg
or
cmpsl
test
enter
sub
sub
jp
into
xor
pop
dec
push
lock
and
xchg
cmp
decl
sub
sti
xor
push
imul
mov
cmp
jb
orb
cmp
ljmp
mov
jne
div
insb
push
scas
imul
push
rorb
inc
sbb
push
adc
mov
aas
add
mov
sahf
jnp
out
rcl
cmc
jo
sbb
mov
mov
out
test
jl
movsl
adc
clc
cmp
in
and
call
xchg
popa
or
mov
lock
sub
and
out
lods
and
imul
and
fstpl
jecxz
jnp
imul
push
lret
dec
lcall
clc
add
xor
xor
cmp
sahf
stos
jg
setg
jo
push
ljmp
test
stos
and
or
jge
mov
mov
out
aas
pop
sub
mov
int3
enter
xchg
fs
sarb
sbb
dec
push
dec
push
sub
or
mov
mov
gs
icebp
cwtl
lret
lock
test
mov
mov
aad
in
sbb
lahf
mov
inc
push
xchg
xor
xchg
mov
and
jge
dec
lods
and
mov
cs
arpl
ljmp
inc
and
cmp
xchg
or
fildll
mov
ret
inc
xchg
imul
mov
push
cld
inc
mov
ds
sub
sub
pop
scas
xlat
push
aad
push
cmp
decb
cwtl
jbe
fdiv
cmpb
xchg
and
jo
jecxz
popa
sbb
jb
icebp
jp
and
inc
out
sahf
inc
jg
lahf
repz
leave
imul
xor
pop
adc
push
stos
cmc
repz
cli
inc
cmp
mov
lret
lock
mov
rorl
fidivs
lods
sbb
iret
test
cmp
adc
mov
aad
rorl
mov
repz
dec
cltd
dec
push
xchg
je
in
cmc
insb
cmpsl
xchg
popa
rclb
lret
sbb
pop
nop
jl
or
adcb
cwtl
fmull
outsl
add
and
frstor
inc
inc
ret
sbb
movsl
pop
lds
or
add
ss
mov
fisttpl
sbb
movsl
fs
inc
and
daa
dec
cld
sub
jecxz
std
xor
jbe
mov
push
push
add
and
push
dec
aam
scas
mov
cs
pop
rep
int3
arpl
push
or
xchg
movsl
dec
or
sub
jge
dec
sub
xor
push
mov
jne
mov
movsl
mov
outsb
adc
dec
loopne
mov
sarb
ret
test
pop
aas
jb
mov
fs
pop
cmp
int
mov
es
and
test
cld
in
hlt
xor
add
push
mov
adc
insb
sbb
sbb
push
mov
add
cmpsl
mov
mov
fbld
xorl
lcall
inc
xchg
sub
mov
bound
and
pop
mov
addr16
adc
lods
or
pop
inc
sbb
push
test
shlb
gs
xchg
in
mov
add
loopne
pop
inc
clc
in
fcmovnbe
inc
and
or
outsb
jno
in
add
pusha
outsb
pop
xchg
pop
sahf
dec
xor
add
ret
mov
jns
addl
mov
test
in
jle
dec
xchg
pop
pop
mov
out
mov
outsb
fsub
addl
lds
fildl
popa
xchg
adc
push
lds
sbb
out
int3
pop
mov
cmp
push
xchg
adc
cwtd
sbb
mov
dec
pushf
jg
jb
int
inc
adc
mov
dec
and
out
push
jb
push
lahf
cmp
adc
or
sarb
mov
adc
mov
pop
fildl
mov
lahf
and
movsl
push
jbe
iret
pop
sbb
ret
lahf
adc
add
test
stc
lahf
inc
aaa
xchg
sub
xchg
push
jo
les
sub
std
sti
ss
jp
call
daa
in
jne,pt
lods
and
cmpsb
pop
pusha
push
cmp
mov
repz
and
addr16
loopne
mov
pop
push
ljmp
or
sbb
mov
pop
mov
sbb
popf
out
and
sbb
push
mov
cwtl
arpl
mov
rcll
imul
mov
popf
pushf
call
lret
sarl
mov
pop
and
dec
dec
inc
add
inc
xchg
lods
dec
in
jp
push
out
inc
lahf
jmp
cltd
add
xchg
push
mov
ljmp
add
cli
into
jp
mov
mov
jle
lea
fcomi
mov
repnz
test
mov
mov
adc
fwait
scas
pop
push
jg
clc
inc
jecxz
mov
stc
fwait
insb
inc
lock
dec
xchg
movsb
sti
mov
mov
fimull
pop
out
sub
cli
call
xchg
les
and
sbb
icebp
push
fimull
movsb
gs
xor
int
mov
xchg
scas
inc
sbb
sub
mov
fwait
mov
pop
pop
leave
xor
mov
cmp
enter
ret
push
loop
dec
adc
pop
leave
xchg
ror
push
iret
in
xchg
dec
aam
mov
add
sbb
ret
dec
lahf
cmc
xchg
cli
xchg
lret
cltd
mov
pusha
mov
imul
dec
jp
inc
shlb
ljmp
cmpsb
or
loopne
in
cmpsl
mov
ljmp
push
out
scas
inc
jnp
inc
and
jge
jo
pusha
loope
sub
shrl
or
lods
insl
push
or
insb
jbe
sarb
mov
lods
cmp
or
or
xor
xchg
add
inc
leave
popa
mov
jno,pt
xor
xchg
nop
xor
jno
cmpb
and
push
dec
sbb
lret
outsb
test
xchg
pop
in
adc
stos
mov
insb
or
add
sub
mov
ret
cmp
in
mov
adc
ret
aas
inc
push
pop
aad
addb
jb
repnz
pop
insb
and
stos
jl
stc
cmpsl
jecxz
or
subb
cmp
xchg
les
fisttps
push
mov
fs
mov
lcall
inc
pop
and
call
fstps
push
sbb
lret
mov
fs
jno
enter
scas
add
addb
ja
sbb
and
xchg
push
int
ljmp
icebp
addr16
dec
mov
push
pop
repnz
out
jg
or
sbb
stos
fstpl
mov
mov
inc
dec
adc
inc
sub
jno
cmc
mov
fiaddl
aad
dec
clc
xor
jnp
push
aad
outsb
and
pop
lret
mov
pushf
add
into
ficompl
mov
popa
inc
sub
clc
fcomip
xchg
rol
xchg
cmpsb
mov
mov
lret
push
fists
and
dec
cmp
add
or
push
mov
mov
xchg
mov
addl
sbb
lahf
je
pop
mov
cmpsl
shll
je
pop
inc
or
test
mov
dec
cmp
lcall
loopne
mov
mov
sbb
add
mov
push
dec
mov
sub
ljmp
daa
mov
test
xor
iret
dec
add
mov
das
cltd
sti
adc
aad
push
mov
mov
popf
xchg
xor
xchg
das
in
ljmp
xor
rcrl
pop
ja
jge
push
dec
sbb
outsl
jb
arpl
xorl
cmpsb
aad
sbb
shll
nop
mov
sub
or
cmp
fwait
je
adc
pop
loopne
outsl
mov
cmp
mov
fstpl
push
cmpb
leave
mov
xchg
mov
mov
mov
mov
ret
jmp
jne
testb
into
clc
cs
arpl
repnz
push
flds
xchg
in
add
into
lcall
and
enter
ret
pop
fnstsw
gs
sbb
or
lods
dec
jns
shlb
inc
add
pushf
lods
xchg
int3
fnstsw
dec
cmp
jmp
jmp
test
into
cs
repz
xchg
popf
sahf
xor
sub
or
fdivrs
mov
sti
xchg
xchg
mov
mov
mov
stos
xchg
dec
xor
cmp
stos
push
sbb
aas
xor
mov
cmp
imul
push
test
jl
dec
and
adc
loopne
popa
cmp
push
lods
imul
adc
push
das
jne
cmp
mov
jb
insl
mov
mov
adc
fcompl
mov
ds
lahf
mov
aaa
int3
add
imul
sbb
fimull
lret
pop
or
lods
pop
ljmp
ljmp
dec
adc
cmp
jnp
shrb
pop
repnz
shlb
nop
mov
xlat
push
pop
mov
mov
inc
std
mov
push
cmp
ss
sbb
jle
push
adc
jge
aas
loopne
mov
ja
mov
popa
insl
mov
sbb
sbb
sbb
mov
xchg
or
adc
out
ficompl
xchg
loopne
rorb
sub
mov
fwait
push
popf
sbb
out
subb
mov
mov
jp
dec
push
pop
pop
mov
jp
sbb
pop
xor
scas
dec
xor
ficoml
push
das
sbb
xor
adc
imul
jno
es
aam
je
mov
ret
push
loop,pt
mov
loop
bound
fisubrs
shll
mov
push
ret
cmp
frstor
lods
pushf
or
sub
add
repnz
pop
addr16
decl
imul
jl
pop
jns
sbbb
lahf
sbb
push
cmpsl
daa
ds
addr16
out
js
sub
stos
movsl
lock
lret
movsl
fs
fnstenv
sbb
sub
jno
xchg
lea
fwait
or
mov
out
add
cmp
shlb
mov
inc
loop
sbb
test
jno
cmc
sub
jg
jle
cmp
clc
imulb
int
ficomps
loopne
enter
adc
pop
push
subl
mov
incb
pushf
sbb
orb
mov
fst
ds
sarb
or
mov
or
push
mov
pop
cli
out
andl
xchg
push
cmpsb
bound
imul
aad
xchg
jo
adc
stos
scas
lahf
cmpsb
mov
dec
mov
cmp
adc
mov
pop
test
add
xor
test
sbb
or
out
or
and
lret
mov
or
mov
cmp
rcrl
jae
xor
in
adc
ret
mov
loope
jae
sub
and
das
adc
movsb
pop
fwait
xor
lret
subb
dec
out
sbb
xchg
fmuls
mov
gs
sahf
test
pop
sbb
cmp
fwait
adc
call
inc
xchg
fstpt
sbb
add
inc
push
int
icebp
adc
adc
es
dec
jg
ja
mov
pop
adc
ja
fldcw
fstps
arpl
jmp
fnstenv
xor
mov
je
js
in
fs
adc
or
adc
jl
mov
dec
pop
jmp
sbb
ficompl
shrb
pop
mov
pusha
mov
push
mov
mov
or
imul
out
sbb
and
mov
pop
xorb
dec
adc
movsl
pop
pop
pop
hlt
inc
jge
mov
jge
sub
in
add
sub
mov
cmp
cld
push
and
jb
xchg
push
push
push
or
dec
je
inc
in
mov
sbb
add
arpl
mov
repnz
cmp
cs
sahf
cmpl
outsl
je
mov
cmc
lods
out
sbb
les
cmp
iret
pop
loop
and
xchg
in
jnp
loope
jl
add
call
xchg
int
inc
add
add
clc
cmpsl
daa
outsb
xchg
add
lcall
hlt
in
popf
jns
lods
xchg
mov
enter
aas
aas
or
add
repnz
add
add
mov
hlt
pushf
inc
push
js
pop
jne
icebp
adc
mov
push
xchg
jo
pop
dec
cmc
jg
sbb
lcall
jl
aad
stos
cltd
xchg
sub
xchg
cwtl
imul
inc
roll
mov
imul
sbb
stc
mov
push
shll
dec
testl
mov
lds
int3
loope
das
and
xor
mov
repz
fs
lret
scas
int3
or
add
mov
dec
and
jb
std
lcall
mov
aas
mov
outsl
pop
push
xchg
and
jp
lea
pusha
xlat
cmp
sahf
lcall
iret
popa
or
lret
incl
add
loopne
xorb
lahf
lcall
mov
dec
push
in
jo
inc
push
mov
jg
or
fimull
push
jg
cmp
xor
xchg
dec
jne
sbb
jne
inc
cmp
xor
in
into
popf
inc
pop
cwtl
xor
lods
or
sbb
imul
push
sub
fidivl
je
lods
push
imul
xor
fwait
and
inc
insb
mov
jmp
out
jns
push
popa
mov
mov
sbb
out
xor
lock
xchg
ds
mov
sub
add
sbb
test
xor
jne
sub
add
imulb
ret
sub
dec
push
push
popa
jnp
fbld
shll
imul
inc
add
shrl
mov
add
jp
mov
add
dec
push
and
dec
and
mov
clc
cmp
into
cmp
inc
fimull
sbb
inc
loopne
stos
dec
jge
movsb
loopne
lahf
sbb
sub
clc
mov
sub
int
fadd
sub
iret
push
adc
mov
dec
fstps
sbb
push
popf
movsl
scas
mov
cmp
arpl
outsl
cld
inc
rolb
or
lcall
sti
test
cmp
dec
push
push
into
jl
lods
inc
sbb
dec
enter
adc
in
cmpsb
test
fnstsw
jae
mov
or
push
pop
fwait
dec
dec
xor
jmp
add
pop
in
xlat
test
sub
mov
mov
or
mov
aaa
in
stc
nop
add
xor
test
dec
cmpsb
loopne
sbb
add
cwtl
imul
dec
mulb
pop
jle
arpl
ljmp
pop
push
jno
jne
mov
sbb
push
or
cmpsb
aad
jne
sbb
cmp
push
imul
mov
xchg
mov
cli
jbe
xor
dec
out
mov
movsl
cwtl
daa
sahf
sub
xor
push
xor
jecxz
setno
mov
xor
mov
mov
cmpsb
pop
outsl
inc
std
pop
sbb
jbe
aas
xchg
shll
insl
or
movl
outsl
loope
jmp
sbb
mov
push
mov
xchg
jbe
xor
pop
fwait
and
imul
push
add
dec
pop
inc
arpl
sbb
lods
mov
popa
pop
pop
push
xor
jl
xchg
or
call
mov
sub
mov
test
sbb
into
sbb
mov
mov
call
xor
jnp
loop
push
into
repz
test
insl
repnz
or
mov
cmp
sti
addl
imul
mov
mov
add
nop
and
push
xor
push
cmp
add
mov
xchg
xor
mov
mov
xchg
push
pop
std
xchg
cs
aaa
mov
adc
adc
xchg
aam
mov
push
mov
jae
fs
mov
or
mov
cmp
push
das
push
cmp
pop
xchg
test
outsl
adc
dec
jg
mov
addr16
pop
inc
int
mov
or
es
xor
mov
movsb
es
int3
daa
inc
sbb
xchg
adc
pop
pop
test
stos
sub
push
ss
push
mov
sbb
repz
popa
add
pop
out
mov
es
mov
data16
je
push
lret
shlb
mov
mov
dec
xchg
subl
pop
pop
gs
fdivrs
dec
addr16
icebp
pop
mov
mov
mov
frstor
mov
mov
repz
xchg
fldt
and
cmp
push
pop
inc
dec
lds
push
jae
in
incl
iret
ljmp
cli
cmp
mov
xchg
data16
mov
mov
push
jo
xor
xchg
or
subl
mov
xchg
inc
sub
or
or
outsl
lret
adc
fstp
stos
or
shr
sti
mov
add
lods
sub
mov
sbb
inc
jmp
lcall
cmpsb
aad
lods
jecxz
dec
test
fadds
popa
pop
mov
xlat
pop
push
shrl
cwtl
jb
xlat
decb
mov
mov
pusha
test
sbb
lret
aad
inc
sbb
sub
inc
leave
jnp
stos
test
lods
es
dec
imul
inc
dec
and
ja
fsub
xchg
inc
and
adc
xlat
lahf
lods
js
repnz
mov
scas
pop
cltd
push
popa
dec
lock
test
sub
mov
leave
dec
ljmp
cmpsb
daa
pop
mov
mov
dec
or
hlt
adc
pop
jb
fisubs
gs
add
mov
add
hlt
push
sbb
mov
loopne
xlat
fidivs
sarb
inc
push
shll
mov
and
cmove
and
loope
xor
icebp
outsb
push
jns
imul
aas
fs
dec
cmpsb
pop
inc
and
add
mov
ret
and
lock
popf
rcrl
mov
xor
movsb
push
lcall
mov
pop
xchg
mov
call
js
dec
cwtl
rep
push
push
je
aam
dec
shlb
push
out
mov
cs
fsubs
xor
loopne
pop
push
aaa
lcall
imul
scas
lods
rclb
arpl
fistpll
int3
ds
mov
dec
xor
adc
and
jb
stos
mov
cmpsl
or
pop
test
mov
add
sub
inc
popf
jae
push
inc
iret
cmc
xchg
cmc
filds
fildll
out
jne
ficoms
inc
cmpsb
adc
into
xor
push
enter
or
shrl
jb
scas
mov
rcrb
push
incb
das
and
push
shr
out
shlb
jns
sbb
mov
fdivr
lret
into
movsb
xchg
int
push
std
imul
cmc
js
sbb
aad
pushf
add
int
gs
jg
pop
ret
pop
mov
adc
pop
mov
dec
mov
xchg
jmp
pop
sub
lret
cmpsb
add
test
in
aas
dec
cmovns
rcrb
sub
xchg
adc
filds
push
sub
xor
push
lret
nop
sub
mov
mov
and
and
loopne
adc
les
aam
divl
push
and
pop
mov
jbe
imul
adc
std
sbb
insl
and
mov
call
push
and
cmpsb
loope
popa
int3
push
dec
fdivr
xorl
and
cltd
mov
sbb
dec
sahf
inc
inc
inc
negb
or
lods
test
cld
dec
mov
adc
sub
xchg
ljmp
push
push
es
mov
fisubrl
scas
xor
popf
sbb
in
jo,pt
and
sahf
sub
rcrl
popf
cld
xchg
fucomp
cmp
aad
iret
add
adc
xchg
dec
test
push
and
pop
out
push
div
fwait
adc
stos
sti
movsl
invd
mov
stos
cs
push
adc
or
xor
aam
jge
adc
dec
pop
pusha
hlt
icebp
sub
fidivrl
mov
cmp
mov
icebp
push
js
cltd
dec
lahf
mov
ds
pop
ret
and
mov
mov
mov
xchg
adc
xchg
sbb
int
mov
test
mov
pop
xchg
movsl
mov
jmp
aad
je
ljmp
insb
sbb
adc
jbe
icebp
mov
xor
xor
or
gs
mov
movsl
ret
xor
mov
inc
fldl
mov
adc
sub
xor
out
xchg
dec
and
cwtl
shlb
push
nop
loopne,pt
dec
cmp
les
adc
roll
leave
iret
xor
lock
pop
fs
sbb
push
sub
cld
popf
scas
or
jg
cmpsb
push
mov
arpl
mov
sbb
addb
fisttpl
lret
ds
push
jae
cmp
pop
outsl
imul
bound
ret
mov
ret
aam
cld
xchg
test
cmp
fs
lock
push
xchg
fucomip
mov
js
push
push
lods
and
sbb
add
sbb
scas
cmpsb
icebp
sbb
jns
mov
inc
or
inc
xor
sarl
cltd
fnstcw
cmp
stc
add
iret
rorb
enter
repnz
inc
shlb
sub
push
jl
and
mov
xchg
jae
cs
les
call
cld
push
negl
shlb
hlt
cld
js
push
dec
out
xor
mov
nop
cmp
inc
xchg
mov
cmp
ljmp
xchg
ljmp
and
in
cltd
push
fdivrl
sarb
inc
jae
sub
sti
and
xchg
pop
shrl
jl
movsb
add
mov
push
out
test
in
push
dec
out
test
pusha
adc
inc
call
mul
data16
das
push
and
gs
inc
jae
jb
mov
ss
push
lahf
adc
push
cmp
sub
or
stos
sbb
dec
adc
push
ss
rorl
lret
xor
cwtl
inc
sbb
test
cmp
divb
mov
push
sbb
insl
pusha
dec
stc
outsl
addr16
loope
inc
mov
fstl
and
push
and
push
lds
fidivs
lods
nop
cmp
jb
mov
seto
sbb
mov
fwait
shr
add
push
lcall
lock
and
out
call
call
out
cmpsb
aas
adc
cwtl
adc
inc
lahf
jl
or
out
ljmp
icebp
mov
dec
dec
push
lahf
push
aad
icebp
decl
xchg
imul
lea
in
lcall
mov
sub
cmpsb
lcall
les
add
xchg
xor
mov
adc
jae
mov
mov
test
pop
adc
fisttps
scas
lea
mov
push
adc
mov
das
je,pt
adc
call
bound
movq
xor
lret
jb
pop
ss
nop
inc
ret
movsb
cmp
mov
addb
jp
enter
inc
xor
fisubs
pop
fstps
pop
push
mov
jnp
jb
mov
mov
pop
and
stos
dec
mov
popf
test
xchg
imul
xlat
inc
lret
push
cmpsb
cli
cmp
inc
filds
or
in
mov
jecxz
outsb
mov
and
outsl
iret
cltd
xchg
daa
jge
adcb
shll
stos
into
mov
sub
iret
or
xchg
jp
mov
push
adc
inc
sub
movsb
xchg
lods
jae
js
inc
into
fmul
dec
dec
adc
subl
pushf
pushf
test
adc
sahf
sbb
sahf
jmp
aas
push
pusha
jecxz
sahf
int
add
mov
cs
adc
cmp
and
and
mov
jp
adc
sub
xor
jmp
mov
sub
adc
sahf
fwait
or
mov
sub
stos
cmp
mov
popa
je
gs
xor
adc
jle
mov
cs
cmp
pop
cmp
aas
aas
xor
jae
mov
inc
pop
sarl
jg
jge
je
inc
shrb
xlat
sub
mov
and
stos
push
scas
leave
lods
int3
sub
mov
hlt
pop
movsl
push
cli
pushl
and
push
lock
xchg
imul
jbe
clc
ljmp
jne
stos
imulb
xchg
cwtl
jnp
sub
ss
bound
cmp
jbe
cmp
push
push
sahf
test
orl
inc
lds
inc
jg
mov
dec
daa
cs
stc
mov
mov
push
lcall
cltd
or
cmp
inc
sbb
mov
jge
out
repnz
mov
sbb
add
xor
repz
out
bound
add
adc
cltd
add
adc
dec
repnz
xchg
and
xor
and
sti
out
xchg
stc
cmp
sub
das
xlat
icebp
mov
dec
adc
leave
mov
xchg
adc
stos
mov
jb
rcll
movsl
mov
loop
mov
sub
pop
outsb
cmc
mov
dec
inc
rclb
cmp
outsl
ror
fwait
sbb
cmp
cmp
cwtl
mov
mov
pop
inc
out
scas
adc
xchg
iret
xor
xor
repz
sub
outsb
fld
and
xchg
inc
pop
or
inc
movsb
add
mov
inc
mov
dec
fstpt
ret
inc
imulb
clc
cmpsb
mov
push
mov
mov
int3
push
scas
lret
inc
mov
lock
push
fidivs
enter
push
jge
out
pop
jnp
mov
add
mov
xchg
pushf
sub
sbb
and
jge
nop
aaa
ds
mov
push
inc
mov
xchg
sbb
cmpsl
xor
pop
jp
call
lcall
sub
shlb
jecxz
dec
ret
push
jnp
adc
add
in
add
cmpsl
popa
addb
insl
mov
inc
int
out
clc
and
jp
lret
scas
mov
inc
ja
sub
push
gs
sahf
fcmovbe
sub
jae
clc
outsb
jg
rclb
mov
cmc
shrb
mov
cmp
mov
outsb
js
in
sub
pop
les
rol
inc
mov
push
push
cmp
or
xchg
ljmp
mov
fnsave
jl
jle
nop
shlb
jg
push
sbb
xor
mov
add
adc
lret
xchg
testl
imul
fcompl
mov
data16
and
fidivrl
mov
push
jecxz
pop
mov
dec
or
or
shrl
jo
xchg
push
dec
mov
jns
paddq
xchg
fwait
or
jecxz
push
movb
xchg
lods
jo
jmp
roll
dec
arpl
in
or
inc
pushf
sub
mov
mov
pusha
push
movsl
andb
push
sbb
pop
jo
data16
les
adc
xchg
mov
popl
pop
sub
sti
lea
xchg
and
bnd
mov
xlat
fisttpll
xchg
int
ja
push
add
sbb
push
or
aas
fildl
xchg
mov
mov
cmp
push
in
outsb
cmp
test
pusha
xor
pushf
loop
jl
jmp
add
lea
push
test
imul
adc
clc
jns
fs
mov
mov
sbb
rcr
inc
sbb
mov
lahf
xchg
cmp
in
pop
imull
rorl
mov
cmp
mov
data16
mov
push
or
cli
pop
testl
mov
sub
in
add
jecxz
fdivrs
mov
test
push
mov
cmc
mov
sti
xor
xchg
adc
cmp
pop
pop
stos
nop
movsl
adc
es
repnz
addb
jmp
pop
push
mov
mov
in
jl
inc
in
xor
cmp
fwait
mov
popf
int
outsb
out
mov
js
dec
and
push
fs
sarb
pop
push
cmp
fidivrl
int
or
jb
pop
adc
and
dec
push
adc
mov
add
les
sbb
and
push
jmp
xor
or
xor
mov
adc
sarb
pop
lods
jp
sub
and
sub
sub
pop
das
jp
insl
lea
aaa
stc
imul
add
pop
cli
cmpl
or
jle
sar
rcrl
scas
jns
dec
loop
in
mov
xchg
repz
iret
jb
insl
jp
lahf
adc
repnz
lret
fwait
les
cmc
in
adc
dec
and
sub
std
cmp
lcall
jp
lret
pop
out
or
xchg
jle
jno
js
and
stc
inc
adc
push
cmp
add
loopne
out
enter
push
xchg
decl
xchg
adc
push
cmp
test
cltd
out
sub
add
ret
jge
mov
fcompl
dec
outsl
imul
push
and
ds
clc
lods
dec
stos
push
in
es
loope
ds
push
adc
add
js
pop
sbb
xor
sub
test
adc
fwait
aad
mov
fistpll
fiadds
pop
out
out
mov
std
xor
cwtl
loope
jl
push
les
lods
push
dec
xchg
mov
and
dec
sbbb
push
outsb
inc
jno
lret
jbe
pop
xor
jecxz
clc
jne
iret
popa
cwtl
add
and
test
loopne
jno
and
jg
mov
lods
lods
cmp
sbb
pop
in
sub
in
fldl
and
fwait
pop
sub
int
jne
add
mov
loop
ljmp
in
cmp
into
inc
xor
mov
negb
push
pop
test
and
and
cmpl
push
xchg
or
leave
jge
imul
std
lret
icebp
dec
pop
lret
push
outsb
lcall
or
std
inc
nop
andl
gs
mov
lret
inc
movsb
lock
jbe
fs
das
lret
in
repnz
leave
cmpsb
pusha
js
or
les
adc
jle
adc
xchg
ja
lret
in
stc
xchg
mov
push
mov
dec
lea
push
and
xlat
and
in
inc
sbb
scas
movl
clc
xor
ficoms
fdivrl
outsl
rcrl
pop
dec
ja
xchg
inc
sub
outsb
fs
out
mov
movsl
sub
push
push
mulb
mov
jb
add
mov
lcall
mov
mov
jbe
push
push
pop
sbb
addr16
jno
xchg
sbb
pop
push
loopne
pop
imul
sbb
fiadds
cmc
cmp
pusha
inc
mov
jmp
lock
ret
fld
dec
pop
cmpsl
cwtl
push
sti
and
testb
jecxz
movsl
arpl
adc
mov
mov
mov
out
ds
stc
sahf
mov
add
mov
jmp
mov
loop
cmpsb
cli
adc
fnstcw
lds
lret
mov
or
addr16
jecxz
mov
lock
fs
xlat
dec
ret
dec
lret
lds
cmp
stos
movsl
cmp
jecxz
addr16
insl
add
dec
adc
jae
mov
pop
mov
popa
fs
xor
icebp
sarb
outsl
test
mov
adc
enter
fildll
jl
inc
mov
inc
cmp
adc
call
gs
sahf
ds
test
jmp
adc
push
pop
cld
data16
lcall
cli
ja
sbb
mov
sbb
push
mov
or
mov
pop
lds
test
or
push
cwtl
hlt
add
sub
inc
es
add
sti
shr
je
mov
and
ret
jns
mov
xchg
mov
or
cmpsb
sbb
push
ja
push
inc
mov
movsb
dec
or
cmc
jmp
shlb
cmp
dec
test
or
movsl
in
lds
into
add
push
jp
sbb
inc
sbb
dec
push
sbb
cmp
test
psubusb
ja
pop
sub
cmp
add
cmpsl
je
sahf
daa
mov
xchg
out
pop
or
pop
arpl
or
cmp
pop
mov
scas
and
dec
pushl
dec
outsl
pextrw
pop
xchg
push
mov
dec
adc
cmp
adc
xchg
imul
gs
in
stos
mov
inc
test
xor
mov
out
fcomp
popf
pushf
sub
push
aam
and
jno
push
clc
xor
mov
sub
push
and
aas
mov
movsl
scas
pop
xchg
mov
andb
iret
add
insl
pop
mov
loop
out
add
inc
or
mov
cmp
scas
jnp
and
in
add
mov
mov
in
lock
lea
jo
sbb
pop
icebp
fdiv
push
lahf
push
mov
jl
imul
fcomps
xor
jae
push
or
lds
scas
loope
push
xchg
dec
adc
fisubl
pop
outsb
sub
push
or
jle
sub
jle
and
insl
lret
xor
mov
mov
push
mov
mov
cwtl
das
xchg
jp,pt
int
cmp
push
daa
and
mov
mov
cli
icebp
mov
xor
imul
jle
into
jnp
xor
mov
sub
out
inc
lret
fmul
imul
xchg
lret
in
dec
lcall
out
push
push
adc
push
sbb
notb
push
cmpsb
mov
or
mov
rolb
js
inc
pushf
fwait
rcrb
in
cmp
scas
and
loop
jno
add
or
stos
pop
gs
mov
pop
leave
mov
mov
jle
push
mov
sti
fs
inc
nop
and
push
pop
into
mov
add
jmp
fimuls
mov
mov
and
cwtl
rcl
pop
rcll
xor
push
lret
push
loopne
adcb
pop
jae
in
mov
andb
enter
or
test
and
and
sahf
mov
pop
lods
push
xor
fcmovnbe
insb
pop
pop
mov
ret
push
add
lods
add
jb
enter
xchg
or
jnp
cmp
roll
dec
mov
mov
je
sbb
ss
mov
sti
cltd
pushf
sahf
xchg
xor
shrl
xchg
pop
pop
push
xor
mov
dec
iret
sub
cmpsb
mov
daa
add
add
add
ljmp
test
mov
pop
ljmp
sub
addr16
js
add
sarl
test
add
jnp
pop
inc
bound
sbb
xor
sub
adc
loop
call
adc
lahf
dec
push
jo
or
jae
push
scas
push
fmul
jne
cmc
and
lret
jecxz
cwtl
mov
mov
or
lea
jns
lret
and
adc
add
xchg
sub
arpl
jle
scas
cwtl
xchg
ds
push
mov
data16
sbbb
xor
int
mov
or
fcom
loopne
bound
sbb
das
out
sub
sbb
cmpsl
ljmp
sub
push
push
jg
mov
xchg
or
pop
mov
xchg
scas
test
mov
daa
ficoms
fisubrs
les
dec
push
jge
jmp
mov
mov
adc
inc
mov
popa
lock
call
loopne
push
mov
xor
pop
adc
out
out
fs
xchg
and
loop
nop
std
arpl
adc
xchg
mov
fadds
add
pop
jmp
sub
sub
into
fisubrs
in
fdiv
or
daa
cmp
cmp
push
out
cs
jge
pop
sarb
push
cltd
sub
mov
mov
xor
ret
sub
mov
dec
adc
cmp
cmpsl
repnz
je
call
add
fsubl
lock
inc
xchg
mov
adc
push
sahf
pop
fcoms
jg
cmp
stc
lcall
xchg
aam
inc
mov
mov
aad
orl
mov
inc
push
xor
jl
out
stos
mov
ret
in
cmp
mov
cmp
shll
and
xchg
out
repnz
inc
add
jmp
lods
push
adc
insb
cld
scas
out
cmp
loopne
imul
sbb
sub
out
or
xchg
bound
jne
fdivrs
xchg
inc
mov
pop
in
cmp
inc
inc
insb
es
fistl
xor
inc
push
cmp
rcr
mov
jp
xor
popa
sbb
lods
repz
sbb
cmp
jmp
xchg
push
jbe
aas
mov
ret
pop
into
pop
dec
adc
ja
lret
sti
cmp
in
xchg
cmp
test
aam
mov
scas
icebp
xor
idivl
in
add
xor
pop
out
xor
sub
movsl
test
andl
frstor
xchg
testb
cmp
call
xchg
mov
xchg
pushf
pop
mov
mov
pop
inc
insb
inc
add
cs
mov
mov
mov
lret
xor
pop
push
cmp
or
imul
push
repz
pop
sub
into
in
scas
cld
mov
loop
push
inc
into
in
bound
push
sub
mov
sbbb
xorl
sbb
inc
ret
sub
push
sbb
fisubrs
jns
mov
adc
es
mov
add
bound
push
aaa
mov
leave
pop
sbb
sub
and
xchg
out
aad
aad
mov
push
xchg
inc
movsl
sub
cmovnp
aas
xchg
outsb
repz
xor
jae
lock
fmull
mov
in
repnz
sbb
mov
out
insb
mov
pusha
mov
mov
into
push
repnz
in
fcmovne
push
imul
mov
bound
add
sub
xchg
mov
es
or
inc
adcb
pop
jp
push
sub
pop
out
bound
and
xchg
pop
shl
cmp
mov
aam
aam
mov
xchg
and
push
andl
shl
lods
xchg
mov
es
in
cmp
dec
push
shrb
adc
iret
pop
mov
out
adc
and
sbb
stc
gs
add
jmp
mov
cmp
mov
mov
outsb
pop
or
mov
mov
push
ljmp
repz
bound
pop
test
add
mov
mov
scas
hlt
xchg
out
cmpsl
daa
sub
push
mov
adc
outsb
les
cli
aas
ljmp
sbb
inc
sub
push
mov
and
mov
and
and
inc
sbb
dec
lret
mov
inc
xchg
icebp
std
outsb
pop
xchg
or
sbb
mov
in
mov
shrb
inc
jg
movsb
xchg
idiv
mov
and
xlat
sub
cmp
dec
je
mov
sub
adc
pop
and
clc
std
cmp
cmc
sbb
add
inc
mov
scas
insb
and
repz
xchg
ja
cltd
jge
rclb
scas
stos
push
iret
fwait
push
ljmp
imul
jns
leave
adc
mov
xchg
push
arpl
cmpsl
lds
inc
push
xor
sbb
jl
mov
ja
int
add
adc
mov
aas
push
idivb
jecxz
subb
jnp
pop
push
test
aas
mov
adc
xor
adc
xlat
xchg
dec
and
repz
in
jb
sub
aad
sub
cmp
push
nop
xchg
jne
jbe
dec
dec
sub
lods
and
mov
test
out
push
outsl
mov
inc
add
push
fwait
push
inc
daa
jl
dec
xchg
dec
aam
test
sbb
or
push
jle
divl
dec
gs
aad
cmc
lods
cmpsb
adc
inc
sub
adc
lret
movsl
insb
sbb
pop
xchg
sahf
pop
xchg
add
pop
insl
insl
arpl
ret
in
add
cmp
pushf
stos
fisttps
aam
int3
iret
imul
lock
jle
out
stos
stc
les
mov
add
push
jb
push
lahf
in
lods
sbb
mov
roll
fwait
imul
mov
es
xchg
outsl
das
mov
push
mov
dec
mov
cwtl
ss
push
cmpsl
les
sarl
fldcw
add
and
ret
mov
adc
sbb
loope
shll
aaa
or
outsb
mov
add
cmpsl
cltd
js
nop
mov
sub
sub
es
xchg
inc
adc
push
add
fcoml
or
jnp
push
dec
or
fsubrs
mov
pop
in
mov
movsb
mov
gs
pop
cmp
push
mov
xchg
aad
jecxz
outsl
arpl
mov
loopne
xor
pop
pop
xchg
nop
push
hlt
iret
dec
cmpsb
inc
cmpsb
pusha
loope
rorl
into
jmp
idiv
fists
ljmp
and
hlt
movsl
test
push
xchg
andb
or
dec
in
mov
inc
cmpsl
mov
xor
mov
aas
mov
es
mov
or
pushf
lods
pushf
mov
dec
sub
sbb
rol
bndldx
and
inc
mov
dec
mov
lret
ja
sub
mov
inc
repnz
clc
movsl
jge
pop
aam
dec
inc
jge
push
jecxz
sub
scas
in
shlb
push
xor
inc
fstps
hlt
cltd
test
fisubrl
pop
and
cmp
inc
int
mov
pop
pushf
xor
jno
mov
test
mov
dec
stos
lcall
or
push
out
adc
in
pop
sti
subb
xchg
add
mov
jg
adc
nop
mov
mov
cltd
jne
adc
and
xchg
popf
sub
dec
xchg
arpl
out
stc
push
xbegin
push
stos
lcall
push
cltd
cmp
sbb
rcrl
lods
and
xor
add
inc
cli
xchg
jne
test
ja
repnz
leave
mov
push
gs
cmp
sahf
cmp
xchg
pop
xchg
ljmp
adcl
pop
cmp
rolb
enter
fsts
sub
and
gs
in
test
outsb
orb
cmpsb
xchg
xchg
lods
cmp
loopne
mov
stos
push
push
mov
xor
lret
shrl
dec
sbb
insl
adc
mov
test
cs
ret
aad
sbb
mov
adcb
push
lea
dec
jne
sahf
les
in
mov
shlb
stc
loop
ja
xor
push
aas
outsl
push
insl
push
xchg
mov
add
sahf
jl
dec
and
pusha
pusha
mov
push
in
inc
pop
mov
xchg
jns
push
or
lods
xchg
sbb
and
inc
outsl
in
or
xlat
push
xchg
cld
wrmsr
out
inc
cmpsb
jb
sbb
inc
inc
mov
insl
pop
push
inc
pop
and
cmpsl
add
mov
lods
shrl
push
mov
ret
into
adc
sbb
stos
mov
lods
fwait
inc
mov
jmp
mov
stc
mov
pop
lret
and
ret
nop
xchg
or
es
jge
mov
cld
insb
xlat
lds
inc
fadds
int3
pop
or
jp
loop
negb
fsts
fcmovbe
in
cmp
pop
movsl
clc
loop
lds
lods
sbb
add
xchg
das
loope
hlt
lcall
int
cs
adc
jnp,pn
out
push
sub
loope
adc
mov
in
add
imul
fdivrp
push
xchg
ja
arpl
lahf
sahf
and
gs
mov
or
jae
push
daa
pop
out
xor
scas
sub
pop
dec
pusha
inc
insb
cli
add
inc
mov
push
push
mov
sahf
aad
jecxz
mov
arpl
imul
enter
push
push
jne
mov
movsb
lcall
jne
xor
add
cmp
int
xor
sub
adc
into
or
cli
jp
bound
flds
pop
mov
fwait
movsb
arpl
imul
ds
cmpsl
or
pop
fs
jp
leave
fisubrs
rorb
ficompl
aad
int
add
and
mov
repz
xor
test
repnz
cmc
jmp
js
add
jge
outsl
and
cmc
int3
xchg
push
test
stos
sbb
xor
push
jb
leave
pop
mov
int3
and
push
mov
pop
in
push
out
leave
xor
int3
inc
mov
ficoml
jg
lcall
outsb
or
mov
xor
ret
out
mov
call
push
mul
gs
mov
sub
adc
addr16
iret
dec
jle
mov
aam
mov
jns
les
icebp
mov
and
test
aad
es
xor
pop
cltd
shrl
cmp
mov
jo
jnp
dec
cwtl
mov
dec
pusha
mov
mov
add
sub
icebp
mov
push
mov
scas
xlat
mov
mov
push
sub
cmpsl
sub
push
xchg
jge
dec
std
cmpsl
mov
push
dec
mov
inc
inc
stc
cmp
dec
movsb
out
movsl
mov
les
pop
dec
ret
stos
mov
nop
fs
mov
jo
or
fucomi
inc
fcmovne
adc
inc
loope
ja
mov
add
mov
lock
movb
outsl
imul
pop
inc
dec
cmp
inc
sbb
les
lds
add
cltd
out
fs
insl
xor
cmp
inc
fists
imul
enter
dec
jbe
pusha
push
enter
adc
add
ficompl
dec
pop
insb
cwtl
sub
inc
test
cmpb
stc
or
popf
shrb
jle
add
ljmp
mov
shll
scas
addr16
stos
dec
and
xchg
sub
cmpsl
inc
fxch
fcomps
pushf
or
jnp
adc
out
aas
into
pushf
aas
fs
int3
xchg
xlat
ljmp
xor
decl
xor
js
ds
clc
cmp
lcall
cld
pop
das
testb
loopne
sbb
fstpt
or
push
out
add
addr16
int3
aam
fisttpl
call
sub
scas
out
inc
mov
dec
test
add
enter
dec
mov
jmp
push
ljmp
jne
push
cli
aaa
mov
in
mov
mov
daa
pusha
loopne
jmp
aas
loope
cmp
movsl
addr16
lods
cs
out
fwait
xchg
jno
test
cli
push
sub
pop
js
mov
push
push
add
je
sub
int3
pop
repnz
adc
lret
jge
push
rol
mov
inc
push
push
mov
mov
xor
jns
shrb
mul
dec
xor
and
or
xor
cmpsl
pop
xchg
xchg
push
jmp
jnp
jg
fs
push
jbe
pusha
rolb
pop
loope
adc
xor
cmp
sub
mov
mov
xor
xchg
and
in
scas
or
mov
or
scas
xchg
frstor
add
xchg
push
jecxz
scas
pushl
testl
mov
mov
cld
inc
cmp
adc
jecxz
xchg
lret
inc
js
xor
insl
and
adc
push
xlat
scas
xchg
mov
sahf
add
pop
and
push
dec
jmp
cli
and
cmpb
cmp
add
push
js
outsl
popf
xor
inc
inc
imul
xchg
icebp
repz
sub
push
out
aam
push
rcr
cld
loopne
fucomp
jp
sbb
cmpsb
adc
push
popf
push
mov
and
and
out
imul
into
ret
adc
ret
pop
lcall
fst
je
daa
fsubl
push
xchg
dec
jbe
loop
mov
imull
mov
push
les
mov
push
or
mov
mov
xchg
insl
lcall
jmp
and
push
or
addl
xor
mov
rcrb
cmp
and
jmp
or
cltd
jg
adc
push
cmc
add
rolb
mov
movsl
popf
jo
in
imul
call
push
loope
loope
and
cmc
adc
mov
insl
stos
jbe
fiadds
push
je
popf
sub
stc
loopne
scas
fistpll
mov
addr16
leave
aad
cs
sub
xchg
call
add
fnsave
xchg
dec
ficompl
cmp
cmp
fldcw
aaa
out
ret
in
js
pop
sub
cmpsb
mov
es
sbb
ja
add
enter
lods
bound
or
lahf
or
les
fdivl
dec
ret
out
jbe
xchg
sbb
outsl
hlt
sub
dec
gs
jmp
mov
xorb
jns
sub
div
xchg
je
int
push
push
dec
inc
test
sbb
or
push
mov
es
cmc
cmpb
push
mov
pop
imul
add
insb
adc
mov
jge
cmpb
popa
popa
pop
xlat
fldenv
test
sbb
jo
arpl
jns
xor
mov
mov
mov
jb
fdiv
cmp
jbe
inc
out
inc
jno
mull
sbb
gs
loope
mov
repnz
das
jbe
repnz
push
mov
pusha
jle
test
cwtl
mov
dec
mov
outsb
or
aas
lret
lock
xchg
push
popf
pop
jbe
shr
test
lods
sbb
sbb
cmp
dec
mov
pushf
mov
lods
pop
mov
shlb
repnz
fmuls
sbb
pop
push
mov
lock
loop
rorb
xchg
jmp
jbe
xor
loop
aaa
mov
xor
xchg
add
lret
mov
and
inc
jle
push
into
jg
leave
jnp
push
jmp
mov
add
cs
cwtl
fs
call
inc
fstpt
std
std
xchg
jmp
in
and
add
ss
sbbl
pop
mov
stc
cs
out
pop
sahf
sbb
jl
into
adc
pop
dec
lds
pop
sub
jmp
iret
lds
mov
ret
orb
lods
cmc
ljmp
jne
loopne
aam
imul
ret
es
cmp
mov
mov
push
pop
push
fisubl
sbb
flds
mov
xor
and
sarl
adc
aas
test
mov
cmp
mov
mov
fnstsw
jns
xchg
cli
sbb
cmpsb
imul
out
sbbb
mov
icebp
sub
mov
cli
repnz
sbb
fmuls
fldenv
ret
out
pop
and
imull
push
jecxz
add
mov
movsb
jecxz
mov
or
loop
sub
insb
sbb
jo
call
es
inc
mov
sbb
lods
jmp
sbb
shr
xchg
addr16
push
pop
in
add
das
dec
iretw
jmp
mov
dec
xchg
stos
jo
inc
sbb
and
push
clc
cmp
inc
jns
add
push
mov
sbb
sbb
js
call
cmp
sub
inc
cmp
cs
ja
xor
nop
daa
out
cld
xor
dec
mov
push
sti
pop
jbe
or
or
cs
stos
mov
out
jle
pop
inc
out
dec
sub
stos
push
repz
popa
test
ds
in
add
mov
sub
xor
cmp
sub
ja
mov
jae
pop
jle
or
or
lcall
cmp
bound
mov
xlat
xor
jg
lock
lcall
pop
jp
push
mov
mov
xchg
xchg
push
jns
shll
add
fstpl
inc
cli
push
xor
push
or
pop
je
mov
xor
cltd
mov
push
xchg
mov
test
xchg
dec
loope
stos
mov
insl
bound
add
gs
sti
dec
ss
sbb
and
loopne
xchg
lcall
fwait
xchg
xor
fisubrl
mov
cvtdq2ps
clc
scas
out
dec
lahf
mov
jl
pop
stos
mov
dec
dec
ficoms
clc
ja
or
jge
das
shl
xchg
roll
sbb
pop
mov
in
out
out
and
pop
cmp
jl
iret
dec
jno
cmp
push
sub
lods
std
ret
mov
clc
aam
gs
lock
cmp
inc
fsub
sbbb
stos
subl
mov
sub
scas
movsb
popa
add
xchg
mov
mov
popa
mov
fs
jle
mov
out
iret
bound
pop
imul
lock
sbb
push
es
and
bnd
hlt
pop
mov
jns
sbbb
sub
xchg
shll
cmp
cmc
js
sub
ret
scas
shrl
inc
negl
aas
sahf
out
jns
push
or
repz
xchg
jbe
inc
sub
inc
sbbl
pop
mov
adc
mov
or
ds
xlat
inc
shrb
nop
movsl
mov
aad
push
sbb
sub
ss
xchg
clc
insb
xchg
pushf
rolb
mov
out
decl
mov
data16
jo
pop
js
jmp
pop
movl
push
jns
adc
sbb
mov
dec
xchg
mov
mov
hlt
push
push
das
jmp
mulb
mov
sbb
jmp
out
dec
flds
adc
cmp
mov
out
test
call
fildll
notb
aam
adc
xor
mov
pop
mov
insb
dec
jecxz
shll
sbb
xorb
adc
mov
lcall
test
rclb
push
jg
xor
inc
cmpsb
add
fisttps
fs
inc
pop
in
mov
and
push
jp
dec
out
fld
nop
inc
lock
push
mov
outsl
cmp
sub
adc
ret
inc
stos
add
divl
std
ja
js
adc
insl
add
in
lcall
mov
mov
mov
cmp
lods
fbstp
pusha
fbld
and
clc
flds
add
cld
aas
fld
push
mov
loope
mov
lea
ja
push
jnp
or
cli
or
or
pop
sbb
mov
popf
daa
pop
cmp
inc
mov
stos
fucomi
neg
testl
dec
shll
shl
xlat
pop
sarl
dec
mov
mov
ljmp
xor
ss
cwtl
in
mov
cmp
les
push
shll
les
in
popf
xchg
mov
lock
dec
mov
cmp
data16
adc
add
test
jg
dec
mov
pop
loopne
cs
rorb
fwait
out
outsb
mov
or
push
notb
sbb
pushf
xchg
sbb
insl
xlat
xchg
adc
aam
pop
std
lods
lock
mov
lea
aam
aad
xchg
lods
sub
dec
xchg
icebp
popa
cmp
mov
cld
xchg
mov
jno
inc
mov
outsl
mov
add
adc
dec
add
mov
mov
jmp
cmp
pop
pushl
dec
int3
jnp
xor
ss
fistpll
adc
fistpl
cmpsl
adc
mov
xchg
mov
push
cmpb
jmp
mov
push
imul
or
mov
cmp
jl
xchg
push
mov
les
xchg
mov
jo
jg
icebp
mov
add
in
mov
fistpll
dec
push
sbb
enter
and
mov
imul
cmp
lds
ljmp
hlt
nop
jge
add
jns
mov
ret
push
mov
xchg
cmp
pop
fadd
out
sub
stos
insb
aaa
mov
push
cmp
daa
add
push
or
stos
mov
adc
addl
push
stc
and
cmc
pop
incl
pop
lret
xor
or
hlt
arpl
repz
in
popf
mov
shll
add
pop
mov
jge
inc
int3
jb
daa
andb
cmp
mov
lods
cmp
jg
sti
dec
fcmovu
aad
shrl
stc
xchg
cmpsb
hlt
shl
mov
std
pop
stos
cmp
lea
add
sbb
lret
out
enter
push
mov
and
pop
ror
cli
or
clc
and
add
pop
mov
push
push
jnp
xor
push
mov
cmp
stc
xor
outsl
xchg
sub
aas
sbb
cmp
sbb
lods
mov
fst
cmpsb
data16
lahf
out
cmpsl
jecxz
lods
jb
xchg
leave
dec
xchg
sub
cmp
mov
cwtl
xor
mov
ret
mov
insb
fs
dec
add
inc
push
mov
push
sub
jmp
jge
and
sub
outsb
js
sbb
xor
aaa
jge
jns
mov
call
pop
pop
mov
push
jge
push
mov
or
icebp
cs
add
mov
sub
in
pop
lock
pop
mov
jb
jb
insl
sti
mov
icebp
or
pop
imul
mul
mov
xchg
cmpsl
es
mov
ret
push
bound
test
dec
loopnew
in
push
leave
dec
in
movsl
add
adc
cmp
mov
lcall
mov
add
out
sti
fdivp
push
ficomps
data16
fs
push
mov
push
push
jp
jle
stos
sub
pusha
adc
cmp
ret
mov
hlt
or
xchg
mov
enter
int
lcall
ret
inc
sbb
push
jmp
ret
or
outsl
push
xchg
leave
cmp
push
es
bound
lret
mov
or
push
add
rolb
cmpsl
stc
movsl
mov
mov
fwait
mov
gs
gs
lret
mov
add
push
out
call
sbb
adc
shll
mov
push
leave
add
pop
jne
hlt
sbb
mov
mov
xchg
mov
outsl
inc
ret
fsubs
mov
mov
popa
out
push
out
jmp
stos
xor
je
pop
sub
jnp
push
cmp
lahf
xlat
push
mov
call
xchg
mov
add
jno
add
cmp
xor
jl
data16
jle
lods
inc
push
pop
and
enter
out
jmp
adc
push
int3
lods
jne
add
pop
lahf
jmp
jg
stos
aam
mov
sub
das
sar
fistpll
fwait
xchg
mov
jns
in
xchg
arpl
fucomp
mov
out
test
jle
sub
xchg
add
repz
push
dec
int3
xchg
add
add
mov
xchg
sbb
loop
or
enter
xor
cmpsb
dec
stos
mov
popf
ret
push
mov
xchg
mov
stos
push
call
cmc
mov
incb
inc
sbb
fidivs
cmpsb
daa
lret
push
xor
pop
and
cmp
mov
jmp
imul
xchg
dec
stos
mov
jmp
icebp
fld
movsl
inc
xchg
mov
sub
mov
rclb
sub
mov
repnz
repnz
fisttps
inc
in
mov
add
pop
rcll
pop
push
aad
js
pop
sti
stc
stos
insb
add
dec
aas
xor
sbb
mov
aam
lcall
cmpsl
or
xchg
jnp
movsl
mov
lret
mov
and
pop
call
push
and
sub
sub
daa
xchg
xchg
out
scas
jnp
fs
push
out
sbb
push
in
jo
inc
inc
scas
jns
xchg
lea
out
push
std
test
mov
push
sahf
and
jle
mov
inc
test
and
and
fisubrl
aaa
bswap
js
lcall
jne
mov
pushl
or
jle
add
xor
iret
outsb
add
mov
inc
sub
fadds
pop
rorb
fcoml
mov
movsl
mov
in
test
jl
call
dec
filds
rcl
out
dec
or
mov
lock
hlt
sub
insb
mov
sahf
lahf
scas
imul
mov
adc
mov
adc
dec
mov
je
icebp
fwait
stc
sbb
adc
gs
push
lods
sbb
push
jns
rcll
ret
push
lcall
into
mov
mov
jne
jnp
jae
mov
and
loope
aas
mov
ss
push
fbstp
divl
out
xchg
scas
clc
cld
xchg
add
add
add
stos
stos
sar
fwait
pop
push
lods
loopne
add
inc
inc
aaa
dec
std
insl
test
gs
dec
adc
stos
xchg
xadd
mov
sub
std
pop
flds
mov
sbb
inc
addr16
cmc
sbb
push
mov
ljmp
iret
dec
out
mov
out
jmp
out
dec
and
test
xor
mov
mov
lahf
or
push
enter
cld
movsl
mov
push
shlb
sub
in
mov
mov
call
xchg
mov
sub
jg
lea
adc
push
mov
mov
mov
inc
test
pop
mov
es
push
movsl
xor
xor
std
in
shlb
mov
cmp
lea
jmp
fldl
xorb
clc
fldcw
lods
mov
sbbb
into
mov
fldenv
lahf
or
sbb
push
and
add
imul
shll
fdivs
cmp
cmp
cld
inc
mov
mov
inc
inc
adc
mov
pop
js
jl
adc
inc
movsb
add
cmp
sub
adc
xchg
icebp
dec
cmp
test
xor
sahf
xor
jmp
cs
xlat
jb
adc
mov
add
lcall
push
in
add
ds
clc
icebp
sub
push
repz
mov
orb
rcrb
movsb
mov
aaa
dec
sub
mov
add
mov
mov
lock
mov
add
es
jbe
movsl
inc
mov
outsl
leave
jmp
push
cltd
mov
jb
adc
push
inc
xor
inc
ret
pop
fmuls
outsb
mov
add
cmpl
adc
mov
pop
aam
cmp
and
pop
sbb
notl
int
and
adc
ljmp
js
repz
dec
lcall
stos
jns
mov
xor
xor
adc
jne
scas
inc
insb
push
xchg
cmp
fidivrs
mov
inc
xor
jb
push
sbb
mov
mov
lcall
pop
nop
jno
enter
pop
cmpb
push
in
pop
or
fisubs
mov
div
rcl
pop
mov
adc
push
lods
jecxz
or
test
xchg
cwtl
add
das
inc
push
hlt
sbb
and
mov
je
or
inc
lock
xchg
aas
sub
in
mulb
fsubs
xchg
jno
int
faddp
movsl
cltd
jo
daa
sub
ss
xchg
cmp
inc
pop
push
sti
std
and
inc
and
cmc
fwait
xchg
icebp
mov
fdivrs
pop
js
cmp
stc
das
mov
inc
xchg
enter
pop
inc
jecxz
pop
xchg
and
out
xchg
std
fdivs
mov
add
xorl
repnz
dec
push
sub
adc
dec
aaa
arpl
sbb
pop
xlat
sub
push
sbb
sbb
int
xor
push
jbe
xchg
jb
jge
int
mov
mov
xor
into
push
or
add
mov
loop
xor
mov
mov
call
sub
lahf
adc
push
inc
lea
mov
pop
enter
pushf
mov
and
pusha
negb
clc
aaa
mov
xchg
xor
inc
repz
arpl
xchg
sarb
cli
lahf
jle
addb
gs
sub
pop
pop
mov
dec
movl
es
or
gs
cmpb
out
test
int3
int3
pop
out
push
cmp
inc
adc
push
lahf
in
sbb
sub
xchg
lea
xchg
fldl
fcmovnu
sub
mov
jge
pop
pop
mov
insb
add
xchg
outsb
and
fwait
aam
loopne
sar
in
xor
push
push
loopne
mulb
adcb
pop
mov
fwait
xchg
inc
mov
xlat
xchg
dec
sahf
sub
in
mov
nop
or
mov
loop
cld
fldl2t
es
insb
call
mov
stos
shrb
cmp
cmp
mov
ja
fisttps
and
aas
lods
inc
iret
lds
leave
cmp
sub
pop
stos
ds
mov
arpl
mov
mov
cli
push
sub
sete
aaa
iret
jae
push
inc
dec
jp
loop
into
iret
lods
jns
pop
jae
mov
outsl
push
sub
ss
xchg
sti
shl
adc
and
mov
add
movsb
push
cld
sahf
fstpt
lahf
cmc
data16
loopne
sbb
pop
lahf
xchg
adc
mov
mov
push
mov
xor
rcrb
popa
test
and
push
leave
mov
popf
out
cmp
bound
aad
and
lds
movsl
pop
add
insl
fwait
and
repz
pop
add
push
je
lea
call
hlt
jnp
or
and
push
jne
lods
push
sbb
inc
arpl
outsb
daa
repnz
mov
or
movsb
cmp
xor
in
inc
jb
cmpsb
test
push
imul
test
inc
pop
clc
outsb
test
inc
xchg
pop
and
sarl
dec
dec
push
mov
sub
dec
cmpsb
xchg
sti
sub
push
mov
mov
lea
sbb
test
mov
pop
imul
add
cmp
enter
out
pop
mov
jb
mov
sbb
je
add
insl
outsl
mov
test
cld
dec
pop
or
call
pushf
aas
cmp
movmskps
xor
movsl
mov
dec
dec
mov
out
daa
shl
and
pop
inc
pop
push
mul
imul
mov
mov
cmp
add
sub
scas
fsubrl
push
jne
cmp
mov
stos
aam
jmp
xchg
cmp
movsb
and
rorl
mov
cwtl
test
cwtl
push
sahf
or
repnz
es
sarl
and
insl
xor
sub
push
push
ret
inc
movsb
mov
cmpsl
adc
and
xchg
outsl
push
xchg
loop
insl
daa
cmpsl
jno
dec
movsb
out
inc
sti
push
mov
loop
xchg
in
scas
inc
sti
popa
stc
dec
xor
dec
movsb
cmpsb
pop
jae
xchg
add
imul
int3
push
xor
out
push
pop
lods
repnz
dec
add
sub
popa
sub
dec
push
inc
jl
pop
mov
xor
sub
popa
jle
scas
pop
sbb
int3
int
pop
jmp
cmpsl
icebp
or
insl
loop
or
mov
aaa
cli
cld
js
adc
daa
and
cmp
mov
adc
loop
fdivs
jne
cmp
shlb
daa
push
insb
push
jne
pop
into
mov
push
mov
out
or
mov
iret
jnp
or
sub
sti
cmp
mov
and
mov
rcrb
pop
ss
push
push
cmpsl
lods
sbb
test
and
lretw
popa
aad
ja
fsubrs
fwait
dec
mov
int
push
and
jge
xchg
dec
mov
sbb
jle
jmp
add
or
insb
dec
push
sub
popa
test
repz
inc
add
in
xchg
inc
jl
test
mov
stc
aaa
pusha
scas
mov
fidivrl
in
sbb
adc
mov
loope
or
push
loope
sbb
stc
inc
mov
push
out
sahf
and
insl
out
jmp
andl
ja
adc
fisubrs
mov
xor
adc
push
push
imul
push
leave
cmp
or
cmpxchg
icebp
test
sbb
xlat
test
and
in
pushf
pop
dec
jp
xlat
enter
fnstcw
push
in
sbb
sub
cmp
arpl
push
loope,pn
mov
jo
rcl
sub
negl
rcrl
iret
cmpsb
jnp
movsb
das
sbb
ds
into
jno
pop
out
dec
jnp
lret
call
pop
xchg
mov
lahf
sarl
dec
pop
pop
outsb
xchg
jecxz
jns
lea
and
std
xor
xchg
mov
jbe
addl
jne
ja
ret
in
mov
pop
outsb
lea
xor
out
mov
mov
into
out
mov
ljmp
lahf
push
iret
icebp
ficomps
jb
push
xchg
inc
jnp
pushf
cld
insb
mov
lcall
mov
mov
popf
loop
into
cwtl
inc
jmp
aam
aam
ja
sub
push
rcll
xor
push
dec
repz
in
or
and
test
push
aas
sbb
std
mov
dec
call
xchg
sub
mul
imul
push
popf
jl
mov
or
popf
ficompl
jp
mov
jge
iret
leave
movsl
push
insl
int
in
and
test
mov
push
pop
xchg
sub
jmp
mov
jno
subl
filds
inc
pop
aaa
rorl
inc
or
lret
jle
cmpsb
mov
cmp
fsubp
loop
rol
insl
xor
lret
sbb
icebp
fcoml
inc
fstpl
push
mov
or
clc
clc
pop
jns
and
cmp
pop
lods
dec
nop
imul
push
out
mov
xchg
ds
xor
icebp
jge
inc
mov
cltd
out
xor
adc
fisttpl
outsb
jae
in
cmp
sub
cmp
dec
imul
into
lea
mov
movb
data16
push
pusha
out
les
cs
insl
and
test
pop
and
cmpsl
imul
imul
push
inc
cmpl
mov
popf
pop
sub
mov
mov
fidivrs
sub
iret
cmp
cmp
sub
icebp
jp
out
test
push
mov
rorb
or
imul
cmp
push
cld
xchg
sub
adc
cmc
mov
push
clc
test
std
scas
or
lcall
pop
xor
jmp
and
das
int
mov
stos
in
jmp
push
jae
subb
mov
or
adc
xchg
add
loopne
pusha
jg
sub
or
shl
lret
iret
sbbb
xchg
aas
pusha
or
jbe
in
in
push
sbb
xor
and
bound
enter
inc
ss
movsb
push
lods
mov
jge
fcomps
icebp
fnstcw
push
fsubrs
and
mov
xchg
cmpsb
push
ljmp
jp
insb
sti
cmp
sbb
int
xchg
jb
test
inc
adc
or
je
out
or
dec
sbb
cmp
mov
mov
and
mov
clc
imul
loope
inc
cmp
je
popl
or
lds
adc
out
stos
shrb
sbb
shrb
jp
test
cmc
sarl
pushf
sbbl
xor
add
push
out
dec
into
lods
enter
jbe
mov
pop
lods
mov
jno
in
lods
fsubrl
in
cli
xchg
jbe
xor
lret
lods
pop
andb
out
out
sub
and
push
int
lods
movsb
cli
pop
scas
sbb
mov
test
cmp
adc
pop
add
or
mov
dec
cmp
xchg
cld
jmp
ds
inc
sub
cmc
adc
sar
xchg
sbb
sub
xor
jbe
lahf
lea
pop
test
add
lahf
inc
shlb
mov
adc
xor
push
loop
insb
mov
xor
sbb
xchg
mov
pop
in
and
outsb
jmp
dec
lret
iret
push
bound
arpl
pop
push
mov
mov
inc
icebp
lret
adc
inc
mov
mov
out
orb
ja
filds
cmp
jb
or
jg
jae
lcall
aad
fldt
mov
jp
dec
jl
push
test
dec
clc
xor
push
loop
scas
push
sbb
scas
mov
jmp
cmp
mov
push
mov
fnstcw
repnz
dec
sub
pop
inc
cmp
sbb
fadd
inc
or
imul
xchg
mov
out
lds
xor
lcall
mov
sarl
loopne
fsubl
pop
mov
in
mov
push
mov
mov
mov
sarl
loope
bound
rep
pop
push
jno
xchg
xor
inc
add
xor
ljmp
dec
mov
pop
xchg
xchg
iret
sbb
mov
push
sahf
dec
push
in
xor
xor
fxch
test
dec
xchg
cli
out
in
sbb
data16
xor
dec
pop
pop
xchg
shrl
popa
fists
dec
shlb
das
lahf
xchg
mov
add
inc
fbld
sbb
xor
fisttpl
subb
jg
sbb
popa
sub
aaa
loope
mov
rcll
int
jmp
ret
inc
jg
divb
je
push
popa
loope
sarl
push
xor
adc
rcll
dec
scas
mov
enter
stos
call
out
jns
or
mov
pop
pop
mov
cmpsl
lock
jbe
das
pushf
dec
call
cs
mov
xchg
jne
dec
aad
xchg
inc
push
jns
mov
pop
scas
out
fildll
xchg
arpl
xchg
adc
xor
jb
int3
xchg
int3
in
or
mov
mov
fadds
pop
cmpsl
push
cmp
jo
and
frstpm(287
xor
jbe
push
cli
subl
jle
mov
sbb
aam
push
xchg
loopne
ds
std
js
iret
adc
mov
xchg
push
pop
rclb
pop
test
jge
adc
xchg
in
fisttpl
aas
sahf
and
xor
aam
mov
dec
jne
call
mov
popl
lahf
cltd
cmp
orb
nop
pop
insb
repz
xor
sub
jmp
out
mov
add
orb
cmpsl
jbe
push
dec
jbe
jnp
push
inc
xchg
xchg
xchg
cmp
push
loope
inc
arpl
cmc
sub
inc
jp
and
or
sub
push
and
fdivrl
sub
push
push
or
stc
xor
mov
popa
mov
sub
inc
sub
stos
jecxz
cli
push
jg
inc
outsl
jecxz
jne
test
rcrl
sti
in
rcrb
leave
sbbb
jg
jbe
shl
shrl
pop
movsb
adc
and
add
dec
hlt
in
cmp
jno
sbb
jnp
fnstenv
inc
test
dec
lcall
repnz
mov
sub
mov
mov
pop
aad
icebp
mov
mov
in
sbbl
gs
xchg
pop
mov
mov
rcr
dec
push
fdivrl
arpl
sub
enter
push
sbb
inc
leave
call
cs
or
push
mov
pop
xchg
imul
inc
loope
movsb
add
mov
or
stc
fdivr
pop
mov
lcall
stc
movsl
mov
xor
mov
test
in
or
lea
scas
mov
sub
lret
mov
sub
mov
sbb
dec
cwtl
push
jge
cmp
inc
push
das
imul
jo
and
xchg
mov
aam
divb
or
aam
popa
lods
inc
push
test
lahf
xor
xchg
xchg
movsl
push
out
ds
flds
push
add
outsl
stc
out
mov
jne
aaa
popa
fstpt
int
pop
jge
mov
leave
xchg
adc
aaa
add
test
rcrb
mov
mov
scas
mov
lcall
xchg
stos
xor
rcrb
mov
jge
je
and
in
cld
jmp
push
and
lea
test
repnz
mov
sbb
lock
fsts
fwait
mov
rorl
mov
pop
mov
xlat
mov
pop
shll
fsubr
out
dec
mov
mov
inc
outsb
nop
mov
stos
mov
inc
adc
sbbl
imul
mov
das
int3
int
mov
cmp
pop
es
push
or
fxch
out
xchg
fistpl
aad
repz
mov
push
pop
cld
ret
dec
mov
out
aaa
rorl
or
sbb
adc
xchg
cmp
inc
les
cmp
xor
mov
xchg
ja
or
inc
int3
mov
lret
icebp
jo
pop
int3
add
arpl
imul
jbe
add
pop
or
in
cmp
fnstsw
mov
das
into
lods
jns
hlt
dec
repz
and
cwtl
les
jnp
mov
mov
xor
pop
mov
mov
pop
xchg
movsl
cmc
xchg
and
ss
push
in
xchg
jo
xor
nop
outsl
jae
es
fs
mov
cmp
loop
icebp
daa
jp
jp
jb
mov
or
in
xor
nop
out
lcall
lock
aas
mov
mov
rolb
clc
shlb
pop
cmc
adc
cld
sahf
cmp
xchg
mov
sbb
add
loop
xchg
movsl
call
xor
add
in
call
or
cld
xorb
rorl
pop
mov
cwtl
push
popa
outsb
in
mov
jmp
mov
add
push
mov
clc
mov
repz
cld
loope
jmp
pop
xor
jb
fnstcw
repz
pop
sbb
push
sub
xchg
repz
fnsave
inc
clc
cwtl
insb
negl
pop
scas
mov
pop
lock
mov
fdivrl
inc
hlt
lcall
neg
cmpsl
test
xchg
daa
lds
dec
loope
in
push
inc
or
push
in
jno
and
push
mov
xchg
mov
cmp
inc
sti
repz
push
inc
push
in
and
js
fwait
and
push
pushf
push
sub
adc
cmp
push
add
ss
jmp
sbb
insb
sbb
sbb
js
pop
outsb
gs
or
outsl
mov
mov
xchg
xchg
sub
das
add
inc
popa
sbb
pop
ja
inc
stos
popf
bound
inc
outsl
test
lea
mov
inc
test
push
mov
dec
in
push
mov
fwait
js
rol
inc
mov
imul
repz
cmp
cmp
jne
xchg
and
mov
out
mov
imull
adcl
out
inc
sahf
mov
imul
and
dec
xlat
pusha
int
mov
add
jo
cltd
pusha
sbbl
aad
and
xchg
and
sbb
orl
xor
cld
call
sub
xchg
mov
xchg
push
test
push
cs
cwtl
jl
shll
xchg
mov
loope
pushf
push
sbb
mov
sahf
lea
mov
sti
or
inc
mov
push
xor
mov
jmp
mov
es
cmp
lahf
lahf
inc
jmp
cmpsb
lret
popa
push
inc
shll
ret
dec
inc
aad
mov
stos
rorl
popf
fs
loope
xorl
jo
cltd
xor
pop
or
xchg
mov
or
in
dec
sub
loop
mov
ret
pop
sbb
sbb
sbb
imul
mov
mov
sub
add
adc
pusha
fcoms
fmull
orl
cltd
notb
das
leave
or
decl
fldcw
dec
dec
adc
imul
xor
add
xchg
cli
xlat
inc
divl
fdivl
iret
ret
shrl
xor
adc
xlat
gs
cwtl
ja
leave
in
mov
xchg
dec
pop
cmp
mov
bound
roll
or
mov
sahf
xor
pop
cmp
decl
push
push
hlt
mov
test
jmp
sbbb
cltd
ja
mov
mov
testl
and
add
outsb
mov
fldenv
sub
xchg
inc
dec
dec
mov
mov
movsb
aad
mov
adc
dec
sub
jb
daa
lods
ficoml
aad
sub
pushl
shl
pop
xchg
xchg
xchg
inc
call
test
inc
sub
out
bound
call
cmp
into
int3
xchg
out
mov
scas
lds
or
mov
int
or
in
repnz
mov
cld
sbb
bswap
outsl
inc
in
add
inc
or
mov
rol
test
ret
fisttpl
cmpsb
mov
jp
pop
xlat
pusha
mov
jle
loop
js
pop
mov
xor
pop
addr16
mov
and
rol
bound
loope
xlat
stos
push
or
pop
mov
sbb
pop
nop
mov
mov
inc
ljmp
jne
stos
sub
and
mov
fidivrl
repz
mov
lret
fisttpll
push
pop
mov
adc
adc
addb
jns
aaa
out
rcrl
cmp
pusha
pop
mov
cmp
das
dec
or
insb
fs
mov
testb
xchg
jae
iret
cmp
push
ss
and
data16
inc
xchg
xor
lds
out
sub
mov
jbe
inc
push
mov
aas
popl
es
lahf
pop
in
test
pop
in
lods
repnz
call
pushf
outsb
inc
fisttpll
lods
aas
js
fisubrs
cmpsb
ljmp
cmp
subb
ficomps
pop
les
push
mov
loopne
pop
push
repnz
out
pop
jo
fmull
shlb
rorb
daa
and
xor
push
push
es
cmpsl
push
cmp
mov
mov
test
jns
mov
cmp
jb
push
pop
gs
pop
push
mov
shld
adc
mov
imul
inc
sbb
outsb
xchg
inc
mov
push
out
loope
mov
jnp
ljmp
iret
xchg
or
scas
inc
push
push
es
cmp
mov
pmullw
adcl
xchg
add
divl
gs
std
call
imul
adc
dec
mov
in
cwtl
cmc
mul
stos
dec
test
inc
and
push
mov
rorb
rolb
cmp
push
daa
cs
icebp
loopne
jb
pop
and
and
jge
lock
push
inc
adc
repnz
pop
and
out
or
inc
ljmp
push
imulb
xchg
arpl
lea
inc
pop
xchg
sbb
sti
jnp
imul
push
or
inc
into
push
adcl
lds
and
aas
pop
movlps
xchg
fildll
jecxz
mov
mov
adc
js
test
mov
pop
cltd
movsl
outsl
imull
jle
mov
mov
das
cmpsl
push
sbb
add
dec
test
icebp
cmp
rorb
fucomip
and
stos
and
mov
lods
push
in
shrb
loop
add
and
cmp
js
pusha
inc
in
test
movb
inc
fistl
push
lret
test
fmuls
dec
lcall
daa
pop
mov
popf
call
rolb
and
shll
add
sbb
lods
std
shl
inc
loope
jmp
xchg
stos
sbb
or
sbb
and
cwtl
movsb
mov
subb
imul
hlt
push
add
xchg
sub
stc
jns
sbb
add
mov
xor
mov
stos
cmpsb
mov
dec
cmc
rorl
cmp
lods
orb
jbe
rcrl
and
add
fsubrl
and
pop
xchg
push
shlb
or
iret
fistl
mov
arpl
push
dec
pusha
sti
scas
movsb
mov
cmp
dec
or
lcall
add
test
fwait
movsb
mov
stc
and
clc
xchg
lret
adc
mov
test
loop
hlt
imul
xor
data16
and
shlb
sub
mov
or
sbb
jno
sbb
mov
call
pop
mov
movb
repz
pop
add
scas
sub
pop
sbb
stos
push
lods
push
cld
inc
ja
in
pushf
cs
add
dec
dec
clc
in
cmp
mov
iret
lds
outsl
out
push
cmpsl
push
add
adc
cmp
inc
orb
jecxz
push
cmpsl
mov
dec
std
aam
aas
and
dec
test
dec
popl
sub
repz
push
das
push
rcrl
inc
sub
pop
cwtl
or
stos
pop
cmpsb
lret
mov
and
adc
cmpsl
gs
loop
lods
ja
push
and
test
repz
std
pop
or
sub
push
mov
push
lds
sti
fsts
jae
dec
orl
lcall
jo
sti
inc
mov
and
jae
clc
mov
and
inc
pop
js
ds
ljmp
int3
sub
out
shl
pop
mov
sub
dec
push
cwtl
push
jb
pop
xor
ret
stos
pushf
dec
ficoml
pop
mov
insl
fidivs
sti
and
outsb
pop
xchg
push
test
aad
out
mov
xor
lahf
cs
out
mov
insb
add
loope
in
mov
xor
shlb
inc
testl
repz
xchg
mov
test
adc
mov
xlat
mov
ss
sub
and
enter
mov
push
mov
addr16
add
mov
inc
lea
sbb
mov
cmpl
jne
std
std
push
cmp
or
jae
cmp
in
ds
mov
xchg
sbb
ja
xor
xchg
or
outsb
mov
or
pop
mov
dec
roll
inc
movsb
xchg
inc
pop
jp
cmp
add
je
bound
cmp
mov
cmp
dec
sub
xchg
sub
aam
jle
and
mov
inc
bound
test
push
jno
dec
add
cmp
aas
int3
xchg
sbb
push
das
jp
xchg
mov
addr16
inc
fsub
jl
push
ljmp
dec
jmp
test
cmp
lret
jo
sbb
xlat
rorl
and
repnz
loop
clc
xor
outsb
dec
jle
xor
mov
add
cmp
mov
push
mov
mov
frstor
adc
adc
xlat
icebp
in
mov
and
jg
mov
xchg
mov
pop
out
in
cmp
jle
push
xor
mov
iret
push
jns
pop
dec
int3
mov
jge
xchg
jge
inc
mov
cmp
sbb
cmp
push
stos
imul
ljmp
cmp
insl
popl
add
sub
fsubrp
mov
sub
jnp
or
leave
inc
cmpsb
fdivr
pop
les
jmp
ret
dec
cmp
into
sub
std
mov
adc
mov
push
push
mov
or
and
inc
sti
arpl
dec
jge
pop
pop
aas
bound
push
std
xchg
lret
adc
sbb
mov
mov
adc
cmpsl
dec
xor
mov
mov
les
in
pop
xlat
in
push
inc
repz
arpl
aam
mov
jns
call
xor
sbb
xor
jbe
and
in
adc
movsl
push
xchg
inc
dec
je
test
xor
frstor
push
inc
sbb
fnstcw
mov
rclb
repz
xor
insb
xor
dec
pusha
popf
aas
nop
and
rol
repnz
orl
sbb
cltd
push
call
enter
mov
xchg
and
mov
stos
stc
cwtl
lcall
mov
adc
lret
or
les
and
mov
adc
lods
fstps
pop
pop
mov
adc
sbb
out
inc
xor
pop
push
mov
or
xor
xchg
inc
add
pop
hlt
test
scas
mov
adc
sub
mov
xor
lcall
fbld
ja
add
cs
inc
enter
mov
jne
pop
adc
or
inc
adcl
pop
inc
add
lods
les
pop
vaddsd
fs
inc
imul
enter
inc
in
ds
push
mov
and
adc
inc
mov
dec
xchg
cld
test
test
lcall
push
cmpsl
xlat
and
dec
jns
mov
or
pop
ja
sbb
subl
inc
fistpll
mov
or
sbb
iret
mov
push
ss
xchg
add
and
addb
ds
testl
jnp
sti
fistps
or
btr
scas
notl
das
mov
sub
pop
xorl
inc
test
movsl
imul
push
nop
add
mov
and
mov
or
int
out
gs
lret
xlat
inc
jle
mov
pop
jg
cmp
outsl
lds
sub
fistpl
in
stos
rcrl
and
faddp
push
stos
orb
push
xchg
sahf
enter
lcall
xchg
and
repnz
stc
jno
ret
lods
mov
push
test
maskmovq
inc
mov
iret
in
cmp
push
pop
mov
xor
push
pusha
call
in
jmp
add
stc
xor
and
jnp
lea
pop
mov
fisubrl
jl
pop
jbe
fs
test
lret
and
pop
inc
xchg
faddl
push
sarl
xor
mov
jbe
iret
inc
and
mov
mov
fsubs
nop
lods
ret
adc
adc
adc
ss
xor
and
adc
cmc
cld
shll
cmp
popa
rolb
mov
inc
jmp
hlt
sbb
popf
inc
jge
mov
fistpll
loopne
sbb
dec
leave
dec
test
scas
xchg
lahf
in
sbb
inc
decl
lret
je
and
xchg
in
dec
popf
das
lahf
mov
jno
inc
das
aas
sub
popa
dec
stos
aad
rcrb
jp
push
adc
jnp
sbb
arpl
push
outsb
push
imul
imulb
pop
cmp
fbstp
pusha
cmp
mov
adc
jecxz
lods
sarb
sbb
and
adc
mov
das
fwait
lock
in
cmc
push
lods
mov
mov
cli
je
xchg
out
cmp
adc
mov
nop
pop
test
inc
fisubrs
jecxz
jl
push
imul
adc
add
xlat
shrb
ja
dec
ret
fmull
gs
jbe
leave
mov
orb
rcl
push
ss
or
cs
lea
adcb
xchg
hlt
in
and
fcompl
xor
inc
xor
or
mov
shl
incb
fsub
test
mov
test
pop
or
push
movsl
sahf
lea
lcall
fs
repz
xor
mov
mov
jno
and
sahf
add
sbb
mov
mull
call
loop
enter
daa
inc
push
je
ja
adc
movsb
cmpsb
mov
imul
adc
cltd
xor
in
mov
xchg
jp
mov
scas
addr16
add
lret
mov
dec
cmpsb
adc
jo
jae
cmc
fdivl
cmpsl
cmp
jg
push
lods
std
pop
cmp
push
add
outsb
jge
pop
sahf
sbb
push
in
lock
xor
push
ret
es
mov
lret
jbe
unpcklps
jge
stc
mov
fs
gs
outsl
or
shrb
jno
pop
sub
xchg
add
and
shrl
push
mov
pop
test
push
dec
scas
test
loopne
xchg
imul
sar
jns
imul
inc
dec
lds
fistps
adc
add
add
xor
adc
or
or
lds
pop
and
or
roll
test
add
cmp
xchg
mov
push
jg
fcoms
sbb
lret
or
ret
xor
outsl
lds
loopne
sub
test
js
mov
sbb
mov
sub
aam
ret
inc
and
popa
add
inc
out
fcoms
imulb
or
scas
cltd
outsl
icebp
sub
aas
in
lret
aaa
lret
pop
not
xor
jecxz
repz
addr16
out
test
fnstsw
into
lea
fbld
mov
xchg
arpl
shufps
mov
xchg
pop
out
aam
aam
enter
mov
push
lcall
inc
add
filds
pop
add
push
pop
mov
sbb
adc
push
cmp
outsl
jae
dec
xchg
mov
and
cli
rcl
and
and
and
movsb
jl
xchg
jl
jae
lea
push
mov
aam
orps
xchg
loopne
mov
aas
add
push
and
ss
push
in
in
inc
cwtl
pop
mov
rcrl
mov
fs
lods
cltd
ljmp
sub
and
aaa
outsl
push
jl
js
mov
nop
ljmp
cwtl
add
pop
data16
pop
pop
add
test
dec
mov
in
xchg
enter
jnp
xchg
mov
nop
jecxz
out
rcrb
mov
lods
sti
jp
and
pop
ljmp
mov
arpl
jne
jp
adc
aam
mov
inc
imul
cmp
add
out
lcall
daa
add
mov
addr16
mov
xlat
cmpsb
pushf
sub
mov
dec
shl
std
test
leave
xchg
adc
pop
ss
push
mov
call
push
pushf
popf
daa
add
sub
adc
cli
add
xor
dec
enter
xor
scas
les
fstl
cmp
lea
mov
pop
mov
aaa
gs
sbb
repnz
dec
adc
mov
ds
jmp
aaa
jae
jg
pop
lods
mov
push
push
sahf
sub
fildl
add
test
mov
inc
jmp
mov
jp
mov
push
clc
insl
sbbl
inc
or
xor
dec
push
jp
jle
pop
sub
push
aam
cs
push
es
ret
adc
in
push
mov
scas
xchg
cs
xlat
mov
mov
cmp
adc
pop
pusha
mov
ds
inc
xlat
fdivr
xor
daa
stc
mov
sbb
fldenv
jns
inc
orb
sahf
cld
or
cld
ds
outsl
lea
mov
jmp
inc
lods
js
das
add
dec
in
ds
jb
cmpb
mov
lods
jne
pop
fwait
outsb
xchg
mov
insl
jns
shl
push
lods
aad
iret
ret
cmp
jmp
ljmp
xchg
rorl
ret
movsl
outsb
xchg
daa
sbb
repz
rcrl
or
mov
mov
sub
pop
push
mov
call
mov
loop
in
jb
jne
jnp
bound
mov
cmp
dec
scas
push
jae
mov
adc
mov
repnz
mov
rcll
push
pop
inc
cwtl
dec
cmpsb
hlt
loopne
movsl
sbb
inc
sbb
shlb
xchg
test
push
stc
fsubrs
xchg
mov
loop
push
call
sti
out
rcl
xor
in
add
in
mov
push
sub
out
and
xor
inc
xor
pop
add
adc
stos
scas
mov
cmpsl
inc
add
mov
fcomps
scas
mov
ljmp
divl
imul
and
and
andl
mov
and
int3
repz
sub
adc
call
add
or
pop
push
jg
mov
cmp
mov
cs
int3
and
mov
adcb
mov
loop
andl
nop
mov
insb
ljmp
imul
jns
mov
loop
push
in
push
adc
ljmp
sbb
xchg
push
cmpsl
cs
and
lret
xchg
mov
pop
or
cltd
xor
dec
fisttpll
fcomps
hlt
mov
pushf
jl
ret
pop
stos
add
mov
fildll
repnz
mov
out
cmp
xor
jg
fiaddl
pushf
loope
sahf
test
pop
out
mov
xchg
mov
hlt
pop
mov
or
mov
mov
adc
dec
sbb
pop
add
mov
mov
push
icebp
arpl
jo,pn
and
sbb
loop
movsl
out
xor
outsl
and
mov
push
stos
lds
xlat
mov
sub
mov
movsl
jecxz
cmpsb
les
dec
mov
dec
rolb
mov
repz
js
push
pop
sbb
pop
fsub
ret
test
fldenv
es
mov
ja
rcrl
out
or
push
or
outsb
aam
ja
lahf
adc
ds
mov
loopne
pop
push
jl
cmp
shlb
push
incl
in
fwait
mov
cmp
pop
lret
test
cli
adc
outsb
popf
mov
xchg
clc
xor
xor
xchg
ret
jge
sahf
push
divb
pushf
movsb
dec
pusha
test
mov
pop
test
daa
xchg
xor
sub
sti
loop
push
pop
sbb
rcrl
data16
pop
fadds
xlat
dec
mov
mov
das
xchg
xchg
xchg
mov
out
fwait
jg
fs
mov
lea
repz
cmp
inc
loop
add
js
cmp
add
mov
xchg
sub
lea
cmpl
pop
pop
adc
rolb
add
aad
leave
pushf
ds
dec
repz
test
sub
test
sub
cmp
jl
in
xor
movsb
xchg
imul
sbb
cmp
push
lahf
add
cli
ficoml
or
ljmp
outsl
dec
addr16
xor
adc
aam
lock
jecxz
ljmp
xlat
jns
rclb
sbb
jo
sbb
mov
je
outsb
xchg
add
nop
jmp
fcompl
or
and
cmp
cmp
test
cmovae
orl
loope
add
mov
hlt
xor
mov
roll
iret
cmp
out
add
ljmp
mov
jle
stos
cmp
loopne
test
je
mov
mov
aas
out
in
sbb
sbb
sti
sti
pop
les
stc
les
pop
test
jo
jl
pop
bound
sbb
jne
stc
lcall
fstp
mov
sub
inc
mov
add
cmpsl
lods
stos
call
xor
pop
mov
xor
add
inc
insl
cmpsb
push
cmp
hlt
adc
int3
jae
dec
in
sub
pop
or
mov
inc
loope
pop
outsb
xor
add
movsb
sub
xchg
out
cmp
and
sub
and
mov
pushf
cltd
fisubrl
shl
xchg
cli
or
enter
movsb
push
ds
ret
push
jns
jbe
pusha
mov
push
add
ja
or
add
lods
mov
shll
mov
inc
mov
sarb
jns
sarb
adc
push
movsl
push
mov
jb
stos
es
cmc
sbb
push
pop
lcall
sub
ds
inc
sbb
iret
sub
imul
lods
pop
rcrb
arpl
test
sbb
xor
lahf
aad
sub
insl
into
mov
mov
lret
xchg
pop
pop
ret
mov
in
mov
dec
jecxz
lods
ret
mov
fnstenv
pop
je
push
or
adc
js
jmp
pop
ret
inc
xchg
pop
xor
mov
fdivr
inc
sub
dec
pop
inc
xchg
leave
and
insl
adcb
in
inc
addb
sub
bound
in
pop
dec
dec
mov
in
lahf
sbb
mov
jmp
jp
mov
int
or
xchg
inc
js
xor
xor
xchg
jmp
cmp
out
jp
jne
js
lods
add
fsubrs
fs
aaa
inc
mov
mov
xchg
jno
inc
mov
cld
rcrb
mov
add
dec
push
or
dec
add
ret
push
jns
in
mov
inc
push
fwait
dec
les
push
icebp
add
push
cmp
sub
xor
adc
pusha
daa
add
dec
lock
push
into
xchg
and
mov
fwait
mov
push
add
enter
rolb
add
arpl
aas
movsl
pop
dec
pushf
xchg
mov
sub
repz
jnp
loop
cmp
pushf
movsl
bound
push
ficoms
or
jne
in
lods
push
xchg
es
dec
mov
xor
stc
mov
add
scas
sub
insl
pop
push
mov
cld
fdivr
lahf
dec
movsl
cltd
in
addr16
push
or
out
mov
in
cmc
add
or
sbb
push
in
sahf
push
imul
xchg
dec
add
xchg
push
push
gs
mov
int3
ret
sahf
les
aam
and
xchg
sarl
mov
mov
stos
xchg
lret
imul
cmpsb
sbb
xchg
adc
adc
xor
ror
jb
sbb
sub
push
xchg
lods
inc
imul
js
ret
push
pop
xor
sub
jg
adc
mov
lret
sub
cmp
mov
inc
ss
fistl
into
mov
daa
arpl
outsb
pop
or
mov
ss
mov
xchg
adc
sbb
pop
sub
mov
push
insl
add
fidivrl
adc
dec
sarb
mov
mov
pop
addr16
sbb
nop
repnz
sub
xchg
sbb
ja
inc
sbbb
les
or
inc
and
mov
pushf
push
inc
into
out
sarl
in
cmp
mov
jb
out
inc
andb
xchg
mov
ficoms
stos
stos
sbb
cmpsl
jns
insb
cmp
inc
lods
sub
cltd
inc
cs
push
aam
pop
inc
sub
sub
sti
pop
sbb
cli
jb
std
jl
je
insl
fwait
mov
dec
out
das
in
mov
les
push
xlat
jnp
jl
dec
popa
or
cmp
sbb
or
ret
lock
lea
mov
pop
jns
int
cmp
adc
daa
and
push
int
mov
mov
loop
aas
xchg
xchg
push
aad
adc
add
in
shlb
inc
inc
xlat
jle
es
mov
hlt
rclb
jbe
out
inc
rorl
pop
add
jns
and
mov
loopne
inc
sub
or
mov
jecxz
push
xchg
jmp
cltd
je
fcomps
sbb
sahf
adc
inc
mov
push
test
fidivrl
lret
sti
ljmp
mov
xchg
push
jle,pn
fsub
mov
pop
or
das
inc
in
pusha
cmp
jbe
outsb
stos
adcb
xchg
cmp
dec
pop
lret
icebp
leave
fldl
and
sbb
sub
lea
adc
push
dec
repz
sar
inc
mov
iret
in
sub
pop
mov
mov
sub
lret
outsb
add
loope
jg
aaa
in
dec
out
cmp
mov
mov
or
sub
int3
loopne
sub
sbb
xor
aas
enter
add
hlt
or
pop
aas
adc
pop
inc
jmp
pusha
xchg
lahf
jns
push
mov
addr16
shlb
xor
add
jle
dec
pop
jmp
xor
pop
xor
fldenv
fistpl
dec
mov
icebp
jns
sbb
testb
lret
pop
icebp
mov
sub
jecxz
sub
and
xor
jl
and
pop
adc
add
bound
sub
pop
inc
push
jge
cmp
jo
lret
gs
dec
xlat
mov
inc
pusha
rcrb
mov
fnstsw
insl
push
mov
inc
jecxz
stos
ret
int
push
xchg
pop
push
hlt
push
outsl
fnstcw
jns
repnz
scas
or
cltd
mov
mov
icebp
cmp
call
adc
and
test
dec
or
dec
das
mov
sbb
or
and
dec
fninit
fwait
and
inc
fs
push
in
inc
rcrb
dec
dec
out
add
lea
stc
test
clc
subb
imul
ja
inc
out
mov
mov
insb
rcll
xchg
cld
std
xor
inc
pop
fnsave
sahf
dec
pop
inc
xor
aaa
inc
add
xchg
pusha
xchg
push
mov
add
add
call
fwait
sbb
pop
cmp
adc
add
js
cmc
xchg
adc
pop
jmp
mov
packsswb
ljmp
stos
cltd
adc
enter
push
fwait
pop
cmpsb
outsl
jle
idivl
xchg
mov
xchg
sub
pop
cwtl
push
or
movb
xchg
jno
inc
xor
xor
cmovne
mov
cmp
push
imul
sbb
push
pop
ljmp
dec
js
ret
sub
fidivrs
insb
rol
dec
xor
scas
adcb
jp
xchg
xchg
fidivrs
idivl
and
je
inc
mov
in
out
ss
push
or
add
mov
in
cmp
aas
shl
sti
int3
js
mov
xchg
jg
int3
aaa
adc
xchg
shlb
das
sbb
jmp
jo
mov
pop
or
sbb
int
stc
sub
push
js
fidivs
hlt
imul
popa
leave
lcall
scas
pop
inc
fmull
shr
loope
xor
pop
pop
fcomps
insl
out
pop
mov
movsb
test
xchg
and
scas
insl
addr16
push
fcoml
enter
leave
adc
push
xchg
adcb
cs
adc
mov
popf
popa
push
inc
sbb
out
inc
mov
mov
push
loopne
inc
pop
daa
sub
pushf
jo
dec
dec
jo
hlt
movsb
jle
bound
mov
pop
ljmp
imul
xorl
std
push
jbe
inc
stc
lods
mov
adc
xchg
loopne
pop
outsb
or
mov
imul
mov
insl
je
pop
out
jg
push
stc
add
mov
inc
orb
dec
mov
daa
sub
stos
cld
ss
test
aad
fldt
lock
lahf
dec
int
or
jne
stc
xchg
scas
xchg
sbb
xchg
and
ja
or
pushf
or
or
shlb
mov
or
jmpw
pop
fisubrl
cmc
adc
loope
jb
inc
js
xchg
cmc
cs
xchg
push
jmp
inc
stos
push
dec
push
mov
push
jne
shl
sbb
pop
jb
mov
adcl
movsb
lods
push
push
cmp
daa
adcb
inc
sbbb
arpl
or
add
cltd
jmp
xchg
and
add
add
push
cmp
adc
adc
mov
pop
sahf
sub
xor
sahf
jbe
test
xor
cmp
shl
shll
std
data16
in
push
mov
ss
daa
bound
insl
ljmp
in
xor
add
pop
mov
loopne
mov
mov
insl
test
or
xchg
inc
cmpsb
cmp
nop
test
stc
sub
call
outsl
rorb
inc
push
ljmp
cmp
pop
clc
aam
dec
mov
jnp
lds
mov
jle
jmp
dec
jp
cwtl
aaa
stos
xchg
or
in
jg
leave
mov
xchg
jae
xchg
jmp
xor
in
clc
mov
mov
dec
cmpsb
pop
subl
push
mov
stos
dec
les
push
je
push
icebp
jb
dec
and
jmp
push
addr16
je
int
xchg
aaa
fwait
in
mov
ret
dec
std
mov
sbb
mov
lret
push
fwait
or
fistpl
mov
pop
cmp
mov
jg
inc
fistl
dec
push
inc
jle
mov
imull
call
dec
dec
push
push
xor
hlt
mov
mov
daa
orb
push
repnz
ret
mov
sub
jbe
fwait
inc
add
rcr
fmuls
je
mov
inc
andl
cmpl
aas
xor
pop
aas
jmp
imul
lds
inc
icebp
test
inc
sbb
lea
mov
out
dec
or
movsl
clc
jmp
or
out
movsb
out
test
sub
xor
pop
jmp
and
imull
add
scas
or
int
mov
arpl
mov
pop
call
clc
cmp
inc
jge
pop
pushf
xor
mov
mov
shll
data16
test
movsbl
push
xlat
mov
dec
clc
jg
mov
les
push
cwtl
push
jns
and
sbb
inc
cmpsb
arpl
int3
dec
pop
dec
fmull
dec
outsl
inc
lret
mov
jne
negb
adc
add
cwtl
jl
repnz
pop
ret
xor
push
push
out
lretw
sub
jae
sub
das
mov
mov
test
mov
test
pop
and
push
and
lock
cmpsl
pop
popf
clc
in
sti
rclb
fwait
or
aas
xor
lahf
fstl
mov
inc
mov
jmp
jge
push
jecxz
push
mov
frstor
push
mov
or
out
and
mov
jno
movsl
or
mov
jp
push
sahf
mov
mov
imul
mov
mov
xchg
cmp
mov
jle
mov
jmp
mov
push
test
pusha
sbb
mov
in
push
sahf
shr
mov
sbb
in
inc
packsswb
pop
xor
lahf
cmp
push
sub
cs
mov
fiaddl
leave
push
mov
pop
into
lock
xor
fnstsw
jnp
pop
cmp
call
jo
int3
mov
in
mov
mov
sbb
leave
ljmp
xlat
xor
adc
push
mov
shlb
dec
and
stos
ja
in
dec
mov
in
test
pusha
popf
fxch
inc
aam
scas
mov
adc
dec
cmp
aas
mov
add
gs
lock
fldt
lahf
jmp
pushw
cmp
stos
shlb
mov
popf
test
fcmovnbe
mov
sub
shrl
lods
jne
in
xor
shll
repz
and
push
jmp
mov
dec
out
cmpsb
cmp
and
movsb
and
sub
arpl
or
lret
push
imul
inc
jae
aad
int
add
sbb
inc
mov
add
jl
add
iret
mov
mov
testb
mov
int3
xchg
xor
jo
or
pop
sbb
repnz
cmp
movsb
pop
mov
pop
lea
shrl
test
cmp
mov
rcrb
add
inc
push
pop
clc
loopne
lods
ljmp
dec
test
sahf
xchg
mov
mov
sbb
jne
inc
movsb
pop
sarl
pop
ja
and
jbe
xchg
mov
mov
sbb
adc
sub
outsb
cli
jnp
int
pop
leave
imul
inc
pop
inc
clc
sbb
push
mov
adc
jnp
xchg
mov
ret
jp
jmp
inc
dec
add
rcrl
inc
or
andb
adc
popa
out
pushf
xchg
sbb
ss
push
mov
inc
ljmp
mov
out
pop
int
add
clc
in
mov
push
push
hlt
dec
fmull
dec
mov
jmp
lds
push
test
pushf
cmc
out
hlt
ljmp
mov
cld
jp
lock
stos
in
lock
dec
and
or
xor
mov
loope
sbb
adc
mov
push
mov
sub
scas
adc
aas
movsl
aas
and
mov
and
xchg
les
sub
pop
nop
repnz
jbe
subb
orb
xchg
orb
mov
jmp
xor
xor
pop
testb
push
cmp
dec
pop
push
movsl
jno
push
scas
and
lcall
xor
icebp
pushf
inc
lods
pushf
cmp
pop
sub
xor
cmp
les
je
pop
fildl
add
hlt
sub
pop
mov
lcall
mov
je
or
shrb
dec
inc
jg
lods
movsl
mov
ret
inc
lods
xchg
jle
sti
mov
push
add
mov
mov
mov
loopne
cltd
ljmp
or
xchg
sub
xchg
cs
xchg
or
jns
pop
dec
dec
cli
or
fisubs
push
adc
pop
popa
mov
mov
pop
sysexit
insb
push
cmovae
pusha
xorb
sarb
mov
sub
xchg
hlt
dec
push
adcb
fs
call
push
cmp
pushf
fdivs
addb
pushf
enter
add
push
mov
in
scas
adc
pop
lret
sbb
mov
rclb
test
lahf
leave
ret
sbb
inc
subb
mov
insb
repz
dec
push
int3
das
pop
add
mov
scas
sti
aas
or
or
pop
mov
int3
push
sbbb
aad
push
ja
loop
lods
or
mov
out
lahf
lds
sbb
push
jns
dec
mov
stos
jecxz
arpl
rolb
mov
rcll
mov
sub
push
outsb
aas
fs
pop
inc
sub
inc
cmc
mov
mov
pop
pop
test
push
or
dec
lret
sub
pop
mov
add
add
cltd
int
sti
incl
and
pop
jne
shl
cmp
pop
or
inc
jae
push
loope
aad
xchg
mov
pop
xchg
enter
pop
and
insl
movntq
sbb
or
cmpsb
mov
push
mov
sub
cwtl
xor
popf
jae
push
sti
pop
xor
mov
jmp
mov
pop
xchg
jg
pop
pop
gs
mov
je
sbb
lods
loop
cs
enter
jg
jno
jle
jb
imul
test
imul
pop
shrl
movsl
js
mov
pop
hlt
mov
cmp
cmpsb
out
sbb
mov
sub
mov
adc
lret
dec
arpl
or
stos
mov
jge
pop
xchg
enter
sahf
repz
clc
cmp
add
rorb
fidivrl
filds
cwtl
xchg
ja
xchg
xchg
repnz
mov
jae
jp
call
jns
xchg
add
sbb
jl
test
jbe
pop
inc
xor
scas
leave
loopne
cltd
rolb
push
cmp
inc
cli
and
inc
or
out
ljmp
cmpsl
xor
pop
loope
dec
inc
es
or
sbb
adc
add
test
jp
repnz
mov
adc
xor
addr16
pop
ret
mov
push
push
or
aad
mov
mov
jg
xlat
call
push
out
int
push
or
cmpsl
mov
pop
jbe
aaa
xchg
push
inc
add
push
xchg
shlb
adc
adc
out
scas
jmp
aam
jb
add
or
jo
add
pushf
fimull
jb
and
bound
fidivrl
bound
adc
fneni(8087
lret
shlb
shll
mov
js
mov
xchg
repnz
push
mov
in
jge
sbb
mov
inc
mov
mov
fildll
xchg
into
add
iret
cli
mov
pop
adc
mov
cmp
shlb
orl
stos
nop
push
sbb
dec
sti
pop
mov
lock
cs
addr16
inc
push
into
das
lods
js
imul
out
out
enter
out
xorb
arpl
pop
lds
movsb
xor
xor
in
cwtl
imul
cmpsl
push
jbe
add
push
inc
scas
rclb
test
aam
sbb
sbb
sub
stc
addr16
mov
call
sbb
push
dec
ret
xchg
mov
dec
mov
xchg
test
xor
sbb
lcall
call
sub
mulb
shrb
je
ja
dec
fisubs
test
sub
mov
out
popf
mov
scas
push
push
dec
push
cmp
js
mov
movsl
cmpsb
sbb
xlat
inc
stos
fsubrp
in
jge
testl
xor
and
inc
hlt
enter
shl
imul
fisubrs
mov
xor
stos
push
inc
xor
sub
inc
enter
inc
xorl
inc
jns
inc
in
imul
xor
cmp
in
add
inc
lods
mov
push
es
xchg
outsb
stos
ds
jno
lret
cwtl
pop
int3
repz
push
xchg
or
add
mov
jl
ret
sbb
jne
addr16
hlt
inc
xor
and
mov
pop
std
dec
adc
pop
test
stos
inc
ja
arpl
add
pop
std
jp
push
inc
lret
or
mov
rcll
shll
cltd
movsl
cmc
jle
pop
mov
test
mov
fisttpl
push
ljmp
or
inc
mov
incb
idivb
lods
test
out
push
es
cwtl
decl
jns
fs
mov
mov
add
idiv
and
inc
pop
xor
scas
daa
test
add
mov
jnp
ja
stc
jo
sti
xor
loop
mov
lock
add
sahf
gs
jb
sbb
sub
pushf
popl
je
dec
and
and
xlat
movswl
inc
pop
cmp
inc
lods
push
jl
rorl
and
shl
in
fnstcw
sahf
shl
add
leave
jmp
stos
add
xor
std
add
aas
pusha
cmp
fwait
aaa
mov
xchg
or
adc
lret
cmpsl
xchg
cmpsl
arpl
jmp
mov
xor
push
in
rolb
pop
vmovhps
add
inc
xchg
sub
pushf
and
stos
stos
adc
push
gs
sbb
inc
fnstenv
xchg
mov
adc
pop
xor
subb
dec
ret
fstpt
push
or
cmp
jecxz
hlt
gs
push
inc
popf
fstps
test
addb
xor
lds
test
loope
int
subl
ja
cmp
out
pop
inc
fnstcw
and
ret
jnp
hlt
mov
mov
cli
ljmp
pop
and
decl
ja
aam
mov
jmp
jl
mov
fldl
out
pop
lds
adc
sbb
and
or
pop
jmp
pop
inc
add
mov
push
dec
test
mov
mov
dec
ret
mov
mov
ljmp
rcrb
bound
or
cmpsb
pop
rorb
xchg
mov
pop
lcall
addr16
outsl
cli
cmpsb
cli
fcoms
pop
jmp
mov
inc
icebp
jno
sbb
jl
mov
aaa
aam
push
outsl
inc
lret
push
pop
dec
mov
jo
stos
out
cmp
adc
js
push
loop
mov
push
cs
or
mov
mov
aam
lret
xchg
loope
js
xchg
xchg
inc
adc
jmp
and
fwait
cs
enter
cli
icebp
xor
push
dec
gs
or
mov
mov
sete
cmp
rcrb
loopne
loope
loopw
cwtl
ja
addr16
fcmovb
jge
xchg
lcall
and
sbb
inc
jg
xchg
cwtl
lret
fldl
jne
jecxz
add
xor
jns
mov
les
stc
clc
jo
xchg
imul
pop
mov
adc
js
in
rorl
xchg
fwait
dec
sbb
cwtl
mov
push
or
ljmp
push
push
shr
add
push
mov
cmp
mov
push
and
add
je
sbb
lds
repnz
adc
repz
pop
int3
and
repz
mov
adc
xchg
cs
int
in
bound
cmp
push
and
jge
push
or
xchg
pop
sbbb
scas
in
pop
push
adc
and
xchg
mov
push
fwait
pop
lret
cmp
popf
sub
mov
mov
mov
mov
ret
xor
lods
in
ret
adc
loopne
insb
and
jmp
push
test
out
hlt
sub
rolb
fs
push
out
insb
cli
rclb
jl
int3
fldz
add
aad
daa
data16
mov
daa
sub
sti
stos
jno
fstpt
adc
adcl
xchg
notb
and
cmp
lods
test
subl
lcall
pop
ret
jp
int3
addr16
sub
pop
enter
hlt
in
in
mov
jg
int
and
cmc
pop
cwtl
outsl
add
rclb
subb
iret
nop
scas
fidivrs
mov
out
std
jl
imull
pusha
push
inc
xchg
jae
cltd
mov
pop
test
sub
dec
sub
mov
hlt
icebp
loop
imul
std
idivl
outsb
cmp
mov
sub
cli
fcomp
js
inc
movsb
std
fdivl
mov
negl
nop
mov
ja
adc
sub
ds
xchg
mov
push
cmp
add
cmpsb
xchg
cmp
pusha
sub
push
cmc
sbbb
lods
adc
cmp
fldt
loop
push
or
popf
mov
pop
pushf
inc
mov
xlat
inc
pop
aad
shll
and
cli
in
and
add
cwtl
cmp
pop
stos
add
mov
mov
pop
dec
shl
movsl
movsl
pusha
xor
pop
jo
jmp
mov
adc
imul
sbb
sub
inc
or
mov
xor
cmpsb
stos
les
xchg
xchg
jecxz
imul
jbe
outsb
dec
icebp
sub
pop
adcl
adc
daa
sbb
cltd
push
pop
int3
or
jge
cmp
lock
xor
jb
or
xorb
push
fcomp
pop
insl
jl
push
jp
add
repnz
dec
push
ss
dec
inc
rcrl
add
lcall
mov
mov
fstl
sbbl
cmp
call
mov
inc
sbb
ja
subb
jl
sub
cmpsb
movsl
sub
push
cmc
cli
movsl
inc
adc
daa
scas
xchg
xchg
fidivrs
jbe
in
mov
pop
pop
jp
fs
insl
cld
shlb
xchg
dec
in
add
push
call
jno
pusha
sbb
scas
sub
stos
pop
inc
stc
iret
jge
enter
mov
inc
lock
sbb
push
xchg
dec
push
gs
divl
push
stc
fiaddl
mov
iret
mov
mov
jne
in
icebp
jecxz
cmpsb
jp
mov
push
cli
xchg
sub
inc
mov
xor
jge
adc
orl
xchg
push
ss
enter
xlat
pop
push
out
test
sbb
dec
imul
push
or
and
nop
in
mov
sbb
fmuls
xor
sahf
lret
xchg
das
xchg
mov
out
mov
dec
call
mov
imul
xor
fimull
in
out
xor
push
fbld
movsl
push
or
lcall
sbb
sbb
mov
lods
xchg
xor
