sbb
add
mov
sbb
push
ret
inc
aam
movsb
mov
iret
lea
insl
push
cltd
jno
sti
mov
add
out
jbe
pop
ret
add
aad
mov
or
mov
cltd
and
jle
js
aam
push
adc
pop
mov
enter
ja
and
in
adc
cmp
cld
xor
mov
aam
aaa
bound
loop
in
xor
push
jne
push
sbb
push
pop
push
std
lea
mov
and
shlb
or
bound
in
push
and
movsb
imul
adc
pushf
stc
dec
mov
nop
mov
cld
adc
das
call
pop
test
mov
jle
lret
push
mov
and
andl
sahf
js
jnp
scas
cltd
xchg
aad
and
adc
inc
dec
sbb
jb
popa
sbb
pop
push
inc
popa
push
add
movb
pop
shlb
out
int
cmp
rcrl
inc
lods
dec
addr16
out
xor
outsb
sub
mov
push
or
cs
lahf
inc
mov
pusha
pop
dec
cmp
fldt
and
aaa
stos
cli
mov
ret
shlb
mov
jecxz
sbb
jp
fistl
notb
lret
add
rcll
aad
mov
sub
scas
xchg
popa
das
xchg
inc
xor
mov
iret
mov
fdivr
and
and
cmp
ljmp
mov
cmp
cmpsb
cmpsb
into
sub
enter
inc
mov
lcall
ss
push
lods
rorb
cmpb
push
imul
adc
mov
outsb
jnp
scas
lods
shlb
rclb
cmp
jb
lea
sub
pushf
pop
jecxz
jmp
inc
or
dec
push
fadd
int
cmpsb
cli
loopne
ret
mov
addr16
inc
adc
ror
mov
loop
int
movsl
mov
cmc
js
and
mov
fmuls
pop
jbe
inc
hlt
daa
js
aad
and
mov
xor
dec
repnz
push
jl
jecxz
xor
cmp
mov
pop
lods
cmp
cmc
add
mov
push
or
cmpsl
je
ljmp
cmp
popf
les
das
xor
adc
andb
inc
mov
xor
xor
jl
mov
xchg
xchg
sub
repnz
ds
popa
fbstp
dec
mov
push
and
pop
mov
jo
dec
jmp
stos
dec
sub
mov
insl
outsb
sub
mov
cmp
inc
leave
dec
dec
movb
data16
inc
mov
jnp
pop
push
in
push
pop
addb
insl
push
test
xchg
inc
lods
into
loop
push
test
push
arpl
test
andb
and
mov
cmpsl
mov
add
lds
pushf
shr
mov
and
aas
jne
push
adc
icebp
jp
lea
adc
xor
sub
pop
lods
cmp
sahf
jmp
mulb
fistps
leave
sti
les
scas
jb
mov
mov
testl
add
int
cli
sub
cmp
sbb
push
popf
and
sbb
aam
and
ljmp
cmpsb
outsl
lahf
lock
sbb
ret
push
call
test
test
sub
jl
jnp
push
cs
jecxz
das
pop
test
or
ret
mov
imulb
mov
jecxz
mov
push
sbb
or
cmp
scas
ret
test
adc
and
rorb
cltd
dec
fsts
xchg
das
xorl
insb
int3
hlt
in
push
adc
mov
push
cmp
loop
inc
adc
js
stos
mov
jmp
in
sub
inc
arpl
jle
adc
mov
jae
out
in
inc
xchg
mov
insl
das
lahf
fwait
add
push
leave
js
sub
dec
jp
ljmp
pop
imul
adc
cmpsl
pop
subl
inc
fidivl
fsubp
push
loop
loopne
xchg
into
pusha
sbb
jmp
bound
std
sub
mov
mov
nop
movsl
pop
jecxz
dec
shll
jnp
jecxz
dec
in
pop
pop
mov
sub
cmp
aaa
jecxz
ja
jle
fwait
sub
and
gs
enter
lds
adc
inc
xchg
ret
inc
jne
inc
repnz
test
pop
loop
bound
popf
sub
pushf
icebp
test
lcall
and
rolb
mov
fidivl
xlat
lds
ljmp
mov
sub
loopne
scas
xor
adc
sahf
stos
xchg
mov
and
pop
pop
sub
icebp
jge
gs
jge
push
aam
je
test
fildl
aam
sub
adc
ja
jne
sub
dec
mov
scas
test
sub
mov
jg
mov
cld
mov
lret
xor
xchg
mov
mov
lret
sub
dec
cmpsb
stos
and
adcl
inc
cmpsb
test
add
pushf
jae
in
add
adc
outsb
xchg
hlt
and
xlat
pop
jbe
xchg
inc
or
adc
sbb
orb
pop
mov
scas
xchg
lret
push
mov
mov
aaa
das
mov
fcoms
cmp
repz
jno
mov
dec
xchg
in
push
or
addr16
mov
mov
popa
fwait
repnz
andb
mov
and
mov
insb
pop
out
pop
out
pop
inc
and
push
mov
and
jns
dec
inc
mov
jae
and
pop
add
sbb
jbe
pusha
cmp
mov
ljmp
cmp
cmp
scas
sbb
mov
lock
jg
imul
lcall
pop
arpl
add
fwait
outsl
sbb
mov
and
fidivrs
aas
int
xchg
jmp
cmp
fs
inc
pop
stos
outsl
movsb
nop
es
sarb
jnp
pop
xchg
cmpsb
xchg
mov
push
inc
mov
jmp
frstor
jle
xchg
mov
scas
test
in
lock
jecxz
shrb
lock
std
nop
jg
sbb
inc
fisubl
ds
leave
repz
in
lds
imul
pop
jbe
sti
adcb
cli
pop
loope
sbb
aad
sbb
mov
jmp
xchg
sub
out
xor
pop
aad
aad
idivb
fldcw
jge
cmc
shll
push
test
jmp
jo
cmc
xchg
and
and
mov
arpl
mov
inc
sub
mov
xchg
dec
jo
fmul
test
dec
bound
mov
mov
clc
sub
lea
jae
rcrl
or
and
cmp
xor
fmulp
movsl
or
ficoml
and
add
push
mov
lahf
rcrl
mov
test
sub
scas
add
add
ljmp
test
sub
lcall
sub
lock
sub
mov
xor
clc
sarl
out
pop
pop
inc
fcmovnb
loope
outsl
movsb
stos
insb
cmc
add
lret
sti
fsubrl
in
in
push
sub
mov
jns
mov
jae
jecxz
icebp
cmpsb
aad
xchg
xchg
imul
cld
pop
gs
pop
ret
int3
jo
mov
nop
lock
pop
hlt
cmp
ds
cld
pop
test
xchg
sahf
jl
les
adcl
push
cmp
cld
adc
mov
in
in
dec
sbb
fisttpl
lds
stos
xchg
fmul
jbe
push
mov
in
mov
xchg
add
add
call
loope
leave
das
mov
leave
cmpsl
adc
subl
jg
mulb
fsubl
xchg
fistps
sbb
outsb
mov
xor
popf
jp
xchg
sti
aaa
jp
test
ret
sbb
cltd
push
sub
mov
cmp
xor
mov
or
sbbl
jns
or
sbb
sub
pop
mov
inc
cs
inc
sbb
cmp
daa
xchg
fcomps
mov
push
ljmp
push
push
daa
sahf
lods
adc
outsl
in
test
out
xor
mov
sub
lds
faddl
xchg
jnp
or
scas
sub
inc
jae
lods
push
and
and
sahf
les
nop
jne
out
adc
lea
ret
stos
fs
cmpsl
or
movsl
pop
mov
dec
lret
pop
add
leave
shl
mov
mov
js
xor
into
repnz
inc
mov
push
lock
fisubl
cmc
pop
lock
xchg
push
gs
mov
xchg
call
jne
in
leave
out
call
movsb
jnp
adc
cmp
shll
or
jne
in
sbb
ds
orl
or
jo
mov
mov
jbe
add
arpl
fnsave
xorl
jmp
pop
out
and
aaa
sahf
push
and
or
jmp
pushf
adc
pop
or
adc
pop
sbb
repz
push
scas
cmpl
jg
mov
jae
xchg
ja
stos
cld
je
jae
fmul
or
mov
int
loope
shl
mov
icebp
hlt
negl
push
fdivrl
sti
lea
add
inc
sbb
stc
sti
push
jae
mov
xchg
loop
movsb
int3
push
sbb
ss
fisubrl
notl
cmp
sbb
lods
cmp
data16
inc
xchg
xor
das
test
mov
mov
cmp
insl
mov
dec
push
and
inc
cmpb
or
ret
cmpsl
jno
mov
inc
je
mov
pop
aaa
dec
push
sub
out
outsb
cmpsl
es
mov
scas
xchg
fsubrl
and
add
mov
out
sub
loope
lock
sub
stos
dec
pusha
aas
cwtl
pop
call
mov
and
insl
das
lods
cmpsb
into
pop
test
es
cmp
mov
arpl
jecxz
out
mov
dec
or
je
test
aam
dec
pop
ljmp
mov
hlt
ds
adc
into
das
xor
test
test
push
outsb
jbe
push
jbe
rcrb
aad
out
mov
in
jmp
cwtl
aam
insb
lock
jp
daa
mov
xor
movsb
out
cmc
repz
bound
nop
mov
add
mov
int
cmp
and
xor
leave
mov
mov
and
fistl
out
xchg
inc
push
xor
or
lahf
mov
inc
mov
mov
and
mov
pushf
cmpsl
pop
fwait
and
jle
ss
ret
roll
stc
sbb
sub
mov
add
xchg
cmp
popa
inc
sbb
loopne
sub
adc
test
inc
fwait
test
and
push
or
jmp
call
xchg
movsl
js
testl
out
pop
popf
cmp
xlat
jae
hlt
int
ret
xchg
xchg
pop
cmp
pusha
addb
movsl
adc
sbb
xlat
or
inc
pop
jecxz
jae
jecxz
dec
add
mov
mov
or
test
es
xlat
dec
dec
fwait
shrb
fisubrl
les
or
and
pop
lret
and
push
xchg
xchg
jmp
push
arpl
or
push
inc
arpl
cmp
jmp
test
and
add
cld
scas
mov
cwtl
repz
enter
jo
add
sub
push
and
and
dec
mov
or
sub
popa
cs
jno
insb
mov
daa
mov
aaa
mov
mov
ljmp
or
sti
jns
fidivrl
mov
shll
mov
ss
outsl
pushf
popf
mov
pop
ret
push
mov
push
cs
xchg
mov
cmp
insl
sbb
or
sbb
mov
cmc
out
sub
arpl
andb
xchg
mov
mov
nop
inc
subl
pop
pop
pop
dec
out
andl
leave
fistps
jg
aam
or
data16
cmp
jg
push
dec
or
sti
adc
or
sbb
xor
das
lret
xchg
mov
lcall
push
icebp
inc
test
mov
cmp
lods
rol
and
xchg
inc
mov
dec
inc
pop
test
sbb
out
lahf
loop
xchg
adc
lea
movsb
push
or
fimull
imul
inc
sbb
out
cmp
aas
sub
cli
sub
mov
stos
ds
imul
and
or
add
neg
cs
leave
dec
mov
cmpsl
jne
imul
mov
adc
xlat
jmp
lds
dec
add
cmp
out
cli
sahf
repnz
mov
push
daa
out
jmp
push
iret
les
js
popa
ja
lret
lret
or
ret
mov
adc
inc
xorl
xor
fstpl
test
arpl
pop
xor
sbb
stc
sbb
movsl
sub
jmp
sahf
pop
jo
adc
sbb
repnz
shr
cmpsl
lea
push
jns
lahf
xchg
push
decl
call
pop
int
push
lea
call
mov
aas
xor
test
jne
sbb
movsb
movsl
cmp
lods
insl
inc
mov
jg
ret
inc
jb
ljmp
sub
aas
mov
pop
mov
rclb
ficomps
mov
xlat
cmp
icebp
mov
sbb
lock
xchg
sbb
in
cmc
jae
xor
xchg
sbb
adc
or
jb
push
fistpl
dec
jns
push
jl
add
test
mov
mov
adc
pop
out
aad
push
int3
xchg
or
push
jp
ror
loope
add
ror
and
cmp
in
fisubrs
inc
imul
shll
push
push
xchg
jp
lods
sbb
stos
push
cmp
call
add
inc
push
dec
pmaddwd
mov
mov
dec
jmp
sub
call
inc
aam
imul
xchg
jecxz
rorl
push
and
push
jge
sarl
fwait
loope
jbe
ret
pop
adc
xor
in
aas
es
adc
mov
sbb
jno
sub
pop
xchg
ljmp
imul
shlb
aad
ljmp
popf
in
mov
scas
cs
mov
lock
outsb
in
outsl
mov
push
pop
push
add
sub
in
xlat
orl
push
addb
data16
lahf
mov
push
jno
adc
nop
fnstenv
scas
add
js
lret
fxch
add
pushf
and
push
sahf
xor
xor
pusha
sbb
push
lds
mov
cltd
push
inc
popa
jbe
imul
mov
arpl
jle
scas
int
adc
in
inc
cmp
pop
repz
push
out
pop
jns
rcrl
adc
jb
daa
cmpsl
test
cmc
adc
inc
sti
jg
dec
xchg
cmp
push
repnz
push
adc
jl
xchg
xor
xor
sarl
movsl
add
enter
call
jp
shrl
or
ds
xchg
std
popa
mov
aas
ljmp
sbb
jl
jle
xor
mov
add
xchg
pop
cmp
or
mulb
divl
dec
aaa
adc
std
in
mov
aaa
subb
insl
sbb
mov
pop
loope
cmc
repnz
pop
fs
and
mov
mov
bnd
xor
pop
fldt
testl
jle
xor
jle
fdivr
inc
cmp
push
inc
es
fidivrl
inc
pusha
xchg
mov
or
aam
add
daa
bound
lret
into
mov
xor
jl
adc
push
addl
inc
lret
jl
push
dec
pusha
pushaw
mov
scas
fld
mulb
cltd
insb
xorl
mov
sbb
mov
add
sub
xor
xchg
sub
sub
push
xchg
jne
inc
mov
outsb
lods
xor
jl
inc
lock
jg
or
lock
cmpsl
sub
push
sarb
mov
or
and
xchg
bound
ja
xor
jbe
std
push
addr16
sbb
movsl
jge
pop
sub
in
mov
lock
mov
inc
push
cmc
mov
pop
push
pop
adc
inc
lock
ds
xchg
push
test
sbb
adc
mov
adc
sub
jmp
mov
jp
cmp
sub
test
mov
push
xor
jge
jbe
push
cmp
call
sbb
clc
pop
ret
cmpsl
repz
int3
sbb
and
mov
gs
ds
ret
xchg
push
mov
sti
mov
push
mov
leave
cld
dec
test
adc
mov
sub
xchg
loope
inc
push
ss
jo
cmpsb
sarl
inc
les
ss
push
or
sahf
les
sbb
xor
lock
in
mov
lret
rclb
pop
cltd
add
fs
repnz
xor
aas
ret
or
xstore-rng
cmpsl
inc
mov
jmp
in
lods
adcl
fld1
daa
ret
jge
pop
jbe
sahf
mov
sub
push
das
fxtract
jno
imul
scas
mov
adc
sarl
test
inc
dec
jmp
aas
cs
jmp
and
inc
fldl
jle
in
leave
xchg
mov
push
ficompl
call
xchg
inc
or
jo
jbe
rcl
shlb
arpl
cmp
push
sbb
pop
mov
orl
fsubrs
pop
push
mov
adc
push
mov
push
mov
dec
xchg
cli
sahf
fwait
test
scas
pop
test
cmp
mov
in
adc
xchg
addps
scas
xor
shlb
sarb
pop
fildl
cmc
cmp
leave
cs
push
lods
or
push
pmaddwd
insl
pusha
shll
xchg
mov
push
fcomps
push
push
in
sub
or
repz
mov
mov
and
in
jmp
push
fcompl
inc
stos
inc
adc
sub
xchg
test
push
aam
push
aam
inc
sub
scas
lods
pop
vxorps
pop
sub
movsl
jb
sub
mov
fisubrl
ret
inc
adc
inc
jb
or
lret
pushf
and
fwait
mov
xlat
insb
xchg
push
das
mov
mov
lret
divl
pop
lahf
test
push
xor
lds
pop
inc
cmp
fidivs
pop
ret
das
sbb
ret
out
jb
xor
mov
test
mov
bound
mov
adc
cmove
repnz
ljmp
or
jbe
jg
jmp
mov
fisubrl
bound
mov
pop
push
jg
ja
ret
inc
mov
outsb
push
xor
aaa
xor
jns
sahf
int
sub
addr16
inc
pop
ds
jae
fcoms
mov
inc
sub
cmp
js
jecxz
out
leave
mov
pop
daa
mov
subb
rcll
stos
outsb
inc
shlb
js
mov
inc
cmp
popa
iret
add
notl
or
dec
cmp
sub
and
test
mov
or
dec
xchg
xchg
xor
xchg
xor
adc
popf
aaa
cmp
and
mov
outsb
cld
imul
sub
out
jo
jecxz
sub
stc
scas
or
out
ret
dec
sub
int
push
or
mov
and
jno
je
push
stc
lock
or
insl
int3
dec
pop
push
int3
xor
jbe
js
cmp
add
sbb
jecxz
inc
fmull
push
dec
leave
adc
jnp
shl
push
or
adc
roll
jnp
and
shrb
inc
dec
xor
mov
push
mov
test
mov
stos
push
mov
mov
mov
sub
shrb
loop
arpl
xchg
fisubs
dec
inc
out
into
outsb
fidivl
add
sarb
push
jo
lcall
dec
sti
pop
into
sub
cltd
push
mov
sub
insb
and
push
stos
xor
leave
jecxz
mov
test
inc
and
xchg
rorl
push
mov
dec
mov
push
scas
dec
enter
sbb
push
data16
in
xor
insb
jge
mov
mov
cmp
push
jbe
je
push
idivl
int
or
stc
call
inc
std
mov
push
decl
sti
call
xchg
out
sub
mov
imul
sbb
lea
ret
hlt
pop
ret
push
inc
mov
mov
push
and
testb
loopne
or
cmp
cmp
jae
inc
les
call
out
int3
out
into
notl
mov
jecxz
pusha
cmpl
imul
mov
dec
fdivp
push
and
adc
adc
cltd
lret
jle
movsb
push
cmc
aas
fdiv
ljmp
loopne
notb
sub
pop
scas
out
xchg
add
fcoml
test
out
cld
xor
and
les
inc
daa
cmpsb
aad
dec
jno
cmp
fidivl
pop
repnz
in
aad
imul
sbb
sub
push
je
je
mov
and
ljmp
cld
enter
pushf
les
mov
or
in
das
jg
mov
lahf
pop
data16
or
enter
movsl
sbb
dec
push
in
cmp
xor
clc
rol
shl
mov
or
pop
xor
bound
in
into
pusha
movsl
xor
push
push
cmpsl
lods
es
jecxz
pop
pop
sub
das
dec
adc
push
daa
jb
mov
movsb
dec
jno
lds
mov
push
sub
sti
sbb
fdivl
arpl
popa
add
jns
xlat
arpl
test
stc
jo
adc
jbe,pt
adc
stc
and
dec
push
mov
jmp
je
inc
sbb
jl
fxch
lods
stos
dec
cmp
fdivp
dec
int
jp
cwtl
iret
aaa
movsl
add
pushf
cmp
cmpsb
movsb
push
cmp
jg
mov
adc
ret
int3
and
fstl
mov
shl
mov
xor
inc
nop
inc
pop
inc
pop
cltd
outsb
or
pop
mov
push
mov
nop
daa
fisubrs
clc
in
in
insl
daa
push
pushw
int3
and
jl
movsl
pushw
fsubp
into
test
jl
cmpsb
jbe
mov
xlat
push
and
cld
rclb
jae
push
cltd
cld
out
xlat
mov
push
jb
cmp
jae
stos
jnp
lods
jb
cmp
xlat
inc
sti
mov
jle
shrl
mov
icebp
sbb
dec
cmp
mov
xchg
fwait
adc
fnstenv
stos
and
gs
ja
add
scas
mov
mov
adc
enter
mov
push
xchg
dec
push
jnp
fucomi
cld
mov
fsubs
ret
cli
imul
test
stos
jmp
jp
mov
inc
out
popa
aam
mov
js
daa
inc
pop
push
jno
cmp
xor
add
or
cmpb
bound
ret
dec
fists
clc
jmp
aad
fiadds
mov
aas
pop
popa
lea
imul
lcall
gs
jne
fwait
fs
push
push
gs
je
aad
pop
pop
inc
call
xor
dec
hlt
xchg
jnp
aas
add
hlt
shl
add
sub
jp
outsb
sub
xor
aad
sub
sub
sbb
inc
pop
mov
or
dec
loope
mov
aad
add
jb
je
xchg
shl
in
xchg
int
cmp
clc
mov
test
dec
xchg
pusha
xlat
movsb
or
xchg
cmp
ret
call
into
test
lahf
repz
mov
andb
in
stc
cmp
push
mov
imul
inc
or
cmp
test
int
dec
dec
ss
jo
aam
enter
repz
push
mov
push
aaa
repnz
addr16
ds
ret
inc
std
lahf
sahf
sub
jbe
jmp
leave
nop
or
add
lret
ljmp
outsb
pop
mov
cmpsl
mov
jmp
sbb
cmp
xchg
pop
pop
jge
aaa
sbb
int3
in
adc
enter
adc
pushf
jl
movsb
cmp
jbe
icebp
mov
scas
sbbb
xlat
cs
or
xchg
lahf
jmp
sbb
dec
fcmovb
jnp
pop
repz
jne
repz
jb
repnz
notl
mov
pop
and
out
pop
xchg
mov
stos
dec
rolb
jb
push
xchg
xchg
jle
inc
sbb
mov
mov
push
out
jae
ss
mov
xor
xor
outsb
jae
mov
movsb
cmpl
jno
jne
xor
xchg
dec
dec
mov
push
outsb
popa
adc
fs
mov
pop
and
jbe
pop
mov
outsl
cltd
mov
add
xchg
adc
sbb
dec
in
adc
jnp
rol
add
cltd
shrl
xor
js
xor
lods
mov
fsubrs
insl
lock
push
int
scas
mov
or
in
push
or
shrl
or
arpl
xlat
pop
icebp
aad
and
test
sbb
cmpl
arpl
dec
sbb
data16
and
cld
fistl
aad
inc
mov
cmp
loope
adc
test
mov
pop
sahf
cmc
jb
and
and
arpl
hlt
scas
sbb
add
lock
push
sbb
dec
sahf
jo
test
mov
popf
loope
pop
inc
inc
mov
pop
call
stos
mov
push
cltd
inc
add
mov
pop
and
xor
sub
pop
rcrl
mov
xor
scas
jmp
clc
add
sbb
jecxz
xlat
push
sbb
scas
sub
xchg
sub
jae
lods
test
adc
and
outsb
loop
iret
or
cmp
scas
outsb
dec
mov
jge
lds
dec
dec
pop
cmc
push
loop
ja
in
mov
push
add
jae
pop
adc
aaa
test
jmp
jp
ret
psrad
push
inc
loop
test
xchg
arpl
inc
xchg
mov
or
mov
mov
pop
sbb
push
xor
and
push
scas
mov
lcall
dec
lea
jg
iret
movsl
out
dec
or
rolb
daa
je
pop
xor
loop
sub
sub
scas
stc
cmp
sti
cltd
jnp
pop
xchg
inc
xor
or
pop
scas
mov
xchg
std
fdivl
add
add
and
dec
inc
xchg
jge
cmp
sbb
mov
rcr
sahf
sbb
mov
xchg
mov
icebp
sahf
int3
mov
sbb
jno
xor
rol
xor
or
pop
pop
cs
cltd
daa
push
dec
xor
sbb
leave
mov
insl
or
or
es
jnp
icebp
mov
xchg
subl
mov
jg,pn
rorl
pop
pop
cmpsl
nop
inc
xor
sets
loopne
mov
inc
cwtl
fs
data16
add
cmp
lahf
adc
cwtl
push
out
ja
pop
fiaddl
mov
jnp
cltd
loope
mov
stos
jmp
icebp
aam
sub
push
cld
out
sub
sbb
jmp
sbb
mov
push
cmpsb
jns
adcl
test
adc
lods
int3
cmpsl
jge
cmpsb
xor
clc
mov
sbb
jge
rclb
nop
jge
rol
mov
in
inc
mov
outsb
movl
int
push
out
push
outsl
push
jno
leave
pop
push
int
sar
add
lret
jns
loop
mov
add
jno
xchg
xor
rolb
pop
jb
sub
movsb
enter
add
cwtl
push
sbb
shlb
int
out
stos
fistps
and
pop
pushf
clc
add
lds
testb
cmpsl
leave
out
cmp
mov
mov
out
sbb
hlt
dec
xchg
or
sub
cltd
xor
mov
mov
inc
push
popf
xchg
xchg
mov
outsl
fdiv
xchg
xchg
jns
cld
cmc
jae
mov
mov
sti
adc
sarb
mov
leave
shrb
shlb
xchg
ja
push
rol
push
call
or
icebp
dec
sbb
adc
mov
shrl
fistpll
outsb
mov
mov
dec
jns
mov
adc
lods
rclb
mov
ffree
cli
adc
stos
pop
stos
std
and
sub
test
add
leave
lret
xchg
mov
nop
lret
test
in
andl
pop
cmp
inc
popa
fimuls
cwtl
mov
push
fdivrp
adc
xchg
rcrl
mov
test
push
sbb
stos
insl
mov
dec
lret
adc
push
or
mov
mov
lods
ficomps
mov
or
sbb
sub
subb
pop
add
js
xchg
push
fmul
stos
repnz
mov
lock
inc
pop
shrb
negl
adc
ret
inc
cmp
bound
clc
es
pop
cmp
add
mov
daa
inc
and
push
vcvtss2sd
jl
scas
push
pop
shlb
mov
sbb
mov
fmul
les
sarl
aaa
cwtl
sbb
xchg
dec
aad
jae
out
mov
cmp
mov
loope
inc
js
xor
mov
stc
and
xchg
mov
cltd
jnp
inc
fld
xor
call
sbb
xor
and
stos
sub
push
cmp
add
mov
and
dec
rcrb
negl
pop
mov
jmp
jg
or
xor
pusha
movsl
fsubp
pop
sbb
shl
mov
jp
mov
adcl
xor
and
shll
mov
test
and
cmp
das
loop
outsb
push
sarl
outsb
cmp
dec
int3
push
add
jns
ds
pop
cwtl
ljmp
bound
sti
rorl
add
xor
dec
adc
outsb
pop
mov
dec
or
xchg
or
hlt
shrd
leave
sub
xor
movsl
adc
scas
xor
sub
out
inc
pushf
add
jp
mov
inc
cltd
fnsave
push
inc
mov
rcr
mulb
negb
dec
add
jl
imul
xor
inc
adc
xchg
icebp
jbe
outsb
daa
mov
fwait
xlat
inc
add
sub
mov
adc
je
mov
cmp
inc
push
movsb
add
sbb
sub
insl
add
adc
enter
cwtl
xchg
xchg
mov
imul
mov
les
mov
inc
or
notl
xchg
sub
aad
push
scas
je
pop
clc
sbb
loopne
mov
xchg
jl
mov
dec
mov
adc
fsubrl
enter
lock
and
lahf
loope
mov
mov
push
pop
out
sub
push
lock
jl
mov
mov
mov
push
push
mov
repz
cmp
pushf
pop
jle
dec
cltd
cmp
hlt
aas
adc
jne
mov
xor
jb
jmp
push
int
xor
xor
jle
push
dec
adc
pusha
in
xchg
pop
and
lea
sbb
mov
pusha
lea
add
mov
lret
jle
jl
lea
mov
int
sub
lea
lret
mov
dec
fistpll
pop
and
ljmp
lock
push
sub
push
cmp
cwtl
adc
int3
cmp
test
jl
push
pop
xchg
subl
in
les
scas
xchg
dec
adc
ficoms
leave
mov
mov
adc
mov
or
movsl
push
sbb
mov
orl
adcb
fldl
mov
cmp
pop
cmp
jb
scas
mov
add
lods
jle
aas
cs
pop
nop
addr16
call
or
movsbl
cmp
out
cld
movsb
adc
dec
mov
fs
and
jnp
clc
sub
sbbl
xchg
pop
fwait
jnp
sub
imul
sbb
pop
in
fsubs
mov
cmp
xchg
fcmovnu
cmc
mov
fcmovnbe
sbb
in
cmp
fimull
repnz
dec
mov
divb
fimull
aad
add
mov
jno
cli
and
cld
mov
ds
adc
repz
rcr
cld
daa
pop
xchg
push
insb
dec
xor
fisttps
jbe
test
push
lcall
mov
fs
inc
add
add
mov
inc
dec
jbe
jp
gs
cmpsb
mov
push
or
repnz
push
add
mov
insl
mov
popf
sahf
add
aas
xchg
repz
addr16
int3
pop
inc
mov
enter
dec
mov
xor
dec
fs
xchg
aaa
cmc
mov
in
loopne
in
repnz
fwait
push
fadds
movsl
iret
lods
jnp
sub
mov
fdivr
push
jo
loop
pop
cmp
cmp
test
jne
inc
fadd
inc
mov
out
inc
test
cmp
xchg
dec
or
orl
add
negl
repz
stos
mov
and
lock
pop
mov
add
pushf
gs
bound
push
aad
pushf
fiadds
addr16
xor
std
push
addb
out
fldcw
jp
imul
mov
inc
jecxz
popf
push
jbe
sbb
jmp
push
inc
sub
int3
mov
cld
xchg
jns
test
lret
mov
cmp
push
and
pop
es
movsl
push
add
push
mov
pop
outsb
xor
add
and
fwait
stos
or
pushf
jns
mov
in
testb
add
sbb
ficomps
in
subl
adc
adc
mov
inc
mov
stos
mov
fstps
inc
cmc
jbe
push
insl
shrb
pusha
and
dec
adc
imul
adc
cmp
jle
enter
popf
jmp
xor
lods
jge
mov
lret
dec
jne
mov
mov
sbb
sub
lods
movsb
jl
into
pushw
xchg
imul
and
jns
fcmovnb
pop
cmp
pusha
cmp
add
mov
imul
inc
jp
fisubl
mov
movb
outsl
les
int3
int3
insb
jp
xchg
roll
xchg
inc
adc
ret
push
jecxz
pusha
inc
lahf
loope
ret
pop
dec
loopne
fnstsw
xor
mov
icebp
inc
std
rol
test
mov
mov
mov
sbb
fisubs
jae
hlt
gs
in
sbb
pop
xchg
jge
pusha
jae
dec
xlat
mov
imul
lahf
das
add
ret
sbb
out
ficompl
mov
lods
and
sbb
push
xlat
movsb
xchg
insb
or
insb
in
push
pop
scas
add
jmp
sub
lret
shlb
aad
and
rol
out
sub
test
mov
lret
push
sbb
add
or
sbb
mov
roll
mov
mov
addr16
lock
int3
imul
sbb
pop
cmp
xchg
leave
pop
cmp
fmull
pop
jne
fs
push
xchg
push
fcmovnu
and
in
push
add
and
add
repnz
rcl
add
cwtl
cld
mov
inc
into
mov
leave
sbb
pmulhw
push
fcompl
cltd
add
jp
xlat
fldl
outsb
xor
or
pop
cld
mov
repnz
mov
loope
xlat
or
out
push
nop
test
push
sub
xor
mov
push
mov
andb
loop
ret
out
bound
mov
pop
js
add
cmp
ror
scas
dec
push
and
cltd
xchg
adc
dec
sti
xor
lahf
add
and
push
pop
popf
add
aad
frstpm(287
jmp
jno
lock
jle
cmpsl
xchg
cmp
loopne
cmpsl
stos
test
sub
adc
jns
cmp
shll
mov
out
gs
cs
jge
dec
nop
lcall
jp
pop
stos
stc
push
pop
flds
ret
cli
pop
cmp
cmp
cmpsl
mov
out
jb
jecxz
sbb
adc
fldcw
pushf
xchg
movsl
adc
or
mov
sub
in
mov
popa
or
jb
cld
movsl
retw
mov
cltd
or
pop
movsl
fs
cmpsl
inc
bound
scas
push
out
inc
mov
push
sub
incb
leave
rclb
in
jp
aas
ret
dec
aad
sysenter
lods
xchg
xchg
sbb
push
xor
cmp
sub
xor
xchg
cmp
push
add
xchg
loope
jns
inc
sub
aas
and
nop
mov
repnz
sbb
dec
mov
push
jle
aas
adc
pop
dec
fidivl
dec
nop
cmc
jecxz
lea
dec
jle
femms
adcl
loope
imul
adc
push
mov
xchg
xchg
mov
lret
adc
xor
inc
stc
sub
in
outsb
pop
pop
sbb
pop
jo
mov
push
and
jp
sarb
iret
ret
outsb
fidivl
ljmp
stc
sbb
imul
scas
mov
push
and
dec
loope
xchg
enter
fstpt
mov
push
in
inc
adc
or
lret
cwtl
sbb
shll
push
setl
test
lret
or
adc
mov
add
mov
loopne
nop
sbb
sub
xlat
inc
jb
add
xchg
je,pt
jnp
aas
mov
stos
xchg
data16
xchg
int
cmp
int
es
cmc
pusha
cmp
mov
inc
sarl
mov
add
and
inc
cld
lods
sahf
aaa
xchg
mov
cmpsl
mov
and
jbe
mov
mov
pop
pop
pop
jmp
lods
cmp
xor
sub
rolb
mov
xchg
jmp
xlat
loope
add
mov
cmp
jbe
in
mov
or
fistpll
inc
stc
and
xor
inc
rclb
paddsb
dec
mov
sub
push
xchg
dec
popa
mov
and
ja,pn
mov
pop
push
pop
pop
add
clc
mov
test
stc
jb
es
push
cltd
mov
test
aaa
mov
movsl
jle
mov
cmp
sbb
dec
sti
in
call
sbb
inc
xor
in
xor
sahf
ret
jne
ss
inc
push
in
add
adc
sarb
je
addb
mov
popa
jg
pop
js
jne
cmc
jp
push
clc
sbb
or
xlat
sbb
lock
divb
xor
loopne
pop
stc
xor
out
rdpmc
lahf
sbb
test
cmpsb
lea
and
sbbb
xchg
loop
mov
mov
jno
mov
repz
inc
jecxz
test
mov
ret
push
mov
mov
push
cmp
notb
out
jecxz
daa
ret
out
imul
dec
cmp
in
in
ljmp
clc
sbb
js
cmpsb
outsl
sub
or
fisubl
push
dec
insb
jb
inc
or
and
xchg
jnp
xchg
and
pop
out
push
inc
xor
jns
sbb
jb
sbb
testb
mov
push
sbb
cmpsb
jmp
inc
movsl
push
push
xor
rcrl
dec
lock
jno
es
inc
sbb
adc
and
adc
sahf
jge
jmp
inc
pop
jl
fs
stos
aas
adc
sar
jae
mov
shrl
cld
les
add
jle
scas
ret
push
cwtl
cltd
or
cmp
add
jno
cmp
outsl
into
in
jle
inc
pop
jle
jge
mov
and
mov
stos
mov
daa
fists
pop
cmc
adc
xchg
bound
mov
dec
cld
mov
lock
stc
das
rol
add
dec
call
sbb
aam
mov
mov
fcompl
push
mov
test
lods
mov
jno
fucomi
int3
jno
mov
and
push
xor
ljmp
aam
movsb
movsb
mov
adc
cmc
jns
sahf
pop
mov
leave
in
and
jbe
stos
ret
cli
mov
dec
scas
lds
pop
pop
pop
rorb
not
mov
adc
dec
scas
cmp
lahf
ds
scas
clc
cmpsl
out
xor
mov
push
mov
sub
push
push
bnd
xchg
or
push
or
into
inc
push
jns
in
lret
xchg
aad
out
pop
xor
pop
imulb
lcall
insl
push
loop
out
xor
sbb
jbe
mov
fisttpll
adc
shrd
and
jno
cmp
lock
mov
fmul
pop
scas
jo
jae
mov
jmp
dec
jmp
lds
cwtl
mov
out
or
ficomps
divl
or
sbb
add
mov
sub
xor
mov
push
sub
cltd
aad
or
flds
jecxz
lcall
cld
xchg
cmp
lods
repnz
and
lret
push
and
f2xm1
jmp
movsl
sarl
mov
aas
outsl
mov
jecxz
imul
movsb
pop
shll
cmp
mov
cmp
hlt
bound
pop
test
sub
pusha
fbstp
mov
or
mov
dec
enter
and
scas
inc
mov
pop
test
fstpt
push
lea
pushf
cmpsl
mov
pop
test
pop
dec
or
pop
dec
into
out
shlb
sub
push
xchg
inc
mov
push
mov
mov
cmpsb
movsb
repz
inc
loopne
or
dec
sub
mov
mov
or
dec
out
in
cmpsb
or
cltd
xchg
or
clc
call
jle
negb
scas
pop
gs
jno
jno
shll
ljmp
mov
ljmp
mov
ds
inc
rolb
arpl
mov
and
inc
or
je
dec
clc
and
nop
movsl
imull
mov
gs
adc
or
xlat
push
ret
jecxz
and
int
xchg
inc
push
or
mov
orl
hlt
or
cmp
dec
movsl
aad
sbb
lahf
add
scas
lret
and
scas
inc
lods
lea
push
cwtl
stc
arpl
sub
mov
in
xor
cld
sbb
jo
mov
cmp
pop
or
xlat
sti
out
pop
ficoml
jno
cltd
mov
push
push
lea
ds
ss
adc
add
dec
mov
in
adc
neg
xor
xchg
add
xchg
inc
test
mov
ret
dec
cmp
and
jo
icebp
sti
cmpsb
data16
mov
es
dec
sbb
pop
imul
adc
pop
xor
rolb
pop
popa
shrl
dec
js
loop
cmp
push
pop
jne
pop
out
out
push
add
jg
dec
nop
sbb
out
mov
fcmovnu
sbb
loopne
dec
add
push
dec
fcomps
mov
pop
xchg
icebp
pop
adc
mov
fsts
cmp
cmp
cmp
cmpsl
pop
push
sarb
mov
sbb
xchg
decb
jae
adc
inc
psubsb
in
movsb
and
pop
out
scas
mov
xor
add
call
into
jg
andl
adc
push
neg
loopne
pop
dec
pop
lea
sub
test
push
jge
fisubs
dec
bound
jl
push
popa
sub
clc
sahf
inc
aaa
aam
mov
pop
sbbb
aad
or
jns
daa
adc
cmp
mov
jns
lds
adc
cli
add
inc
stos
in
das
jp
test
sbb
std
add
push
out
xchg
xor
jmp
pop
push
cvtps2pd
mov
jnp
pop
aad
xchg
jecxz
fldcw
add
pop
push
nop
xor
xor
notb
sbbb
into
lahf
sbb
inc
pop
jecxz
in
arpl
in
fs
mov
mov
arpl
mov
mov
lds
std
mov
lret
sti
xchg
loope
mov
divl
and
in
mov
in
clc
das
mov
jo
sbb
stos
mov
lock
mov
cmp
xchg
loop
dec
add
push
mov
sbb
cli
and
into
pop
sub
or
pushf
jl
loopne
pop
jmp
fisubs
mov
mov
fldt
jne
mov
xor
loope
daa
das
gs
ds
pop
stos
mov
ja
aad
jl
loope
push
test
cmp
test
mov
jge
dec
int3
mov
sub
pop
sahf
clc
into
lret
test
jmp
mov
xchg
sub
sti
sbb
mov
cli
jmp
push
and
imul
and
jmp
popa
test
inc
imul
or
jmp
add
cwtl
insb
pop
inc
mov
xor
mov
mov
mov
xchg
popa
fwait
jmp
movsb
addr16
loopne
mov
sbb
xchg
dec
ret
jge
push
inc
jns
scas
push
mov
mov
notb
jne
jmp
je,pn
dec
add
out
push
ret
ret
push
add
mov
adc
or
mov
leave
icebp
adc
loop
dec
out
xchg
pop
jb
test
jmp
xor
xchg
out
mov
je
out
pop
lret
outsb
insb
mov
sbb
insb
push
mov
cmp
jmp
negl
out
cmp
mov
jg
sbb
iret
ret
aaa
out
inc
jb
sarb
insl
mov
stc
inc
lret
mov
loope
mov
inc
das
fs
sbb
fucom
int
jmp
popf
stc
adc
fucomip
push
ljmp
fldcw
xchg
scas
mov
mov
or
imull
xchg
nop
sarl
push
mov
lock
aam
mov
inc
shll
int
aas
add
daa
rep
cmp
pusha
imul
xchg
add
aas
pusha
lcall
popf
insl
into
test
add
mov
aam
stos
loop
sub
xchg
incb
std
les
ret
dec
call
xchg
mov
lds
js
jo
jae
and
popf
dec
movsl
mov
xorb
int
xor
dec
dec
aad
pop
sub
xchg
mov
jmp
sarb
push
cmp
and
xor
or
divb
pop
ja
mov
inc
cmp
mov
mov
outsl
data16
jns
pop
out
add
jmp
in
mov
add
dec
insb
jbe
movsb
and
mov
or
popf
cmp
push
pop
sbb
inc
or
call
in
test
cmc
cli
lret
ja
test
jecxz
adc
jbe
xor
or
iret
cmpsb
dec
jl
cs
loope
or
cmp
dec
in
sbb
push
loope
mov
jg
int
mov
mov
mov
scas
mov
xchg
iret
push
adc
loope
jno
adc
rcr
popa
ret
int
icebp
out
lret
cmp
leave
adc
xor
push
and
cwtl
xchg
jnp
or
and
inc
fstps
adc
fsts
minps
fnsave
or
sub
enter
es
inc
ljmp
pop
pop
jne
cmp
iret
pop
inc
mov
adc
and
push
inc
lret
and
mov
sub
mov
icebp
push
loope
xor
fdivrl
cmpsl
mov
mov
mov
push
mov
dec
imul
cmp
pop
lock
es
push
jg
xchg
daa
int3
jb
repnz
lahf
in
inc
arpl
out
sbb
mov
int3
test
xchg
shr
sbb
lods
jl
aam
jne
stos
scas
push
mov
dec
lock
sti
add
and
sub
sbb
lds
mov
into
cld
lret
popa
lock
inc
adc
aas
push
cwtl
or
jo
sbb
adc
loop
cmp
xor
outsb
test
and
js
notl
out
outsl
fstpl
mov
push
add
test
lcall
or
ret
stos
xchg
mov
push
pop
push
in
mov
frndint
shr
xchg
ljmp
repnz
lods
flds
lahf
js
cmpsb
pop
or
push
mov
sbb
cmp
add
fisttpl
jns
out
filds
mov
pop
cli
mov
dec
cmpsl
insb
fldenv
inc
and
jne
pop
cmp
repnz
notb
and
or
shll
inc
iret
std
dec
rclb
stos
dec
daa
cmp
sub
inc
pop
mov
ljmp
or
sar
aas
pop
lods
adcl
mov
aad
mov
mov
ljmp
stc
sahf
gs
mov
xchg
mov
loope
or
sti
pop
or
cwtl
lcall
or
jb
cmpsb
lret
cmc
jne
mov
add
sahf
cmp
pop
mov
mov
cmp
pop
fnstenv
leave
add
pop
push
pop
mov
pop
pop
call
movsl
je
add
jo
adc
mov
mov
mov
push
mov
xor
cmpb
fdivp
pop
mov
ficoms
inc
lcall
test
fstps
lret
sub
outsb
xor
cmp
cmp
mov
test
jl
dec
dec
or
jl
pop
imul
lcall
pop
fsub
push
xchg
sbb
xchg
mov
mov
shll
and
sbb
or
es
iret
aas
cmp
lret
rcrb
add
mov
sub
xchg
dec
ret
adc
jmp
dec
sub
xchg
mov
xlat
lret
sbb
loop
popa
aam
addr16
jmp
add
pop
out
insb
lret
pop
ja
daa
pop
inc
nop
xchg
imul
leave
jge
sti
sbb
lcall
pop
imul
bound
aam
add
push
push
ds
lods
pop
fwait
mov
sub
xlat
dec
jno
push
out
rclb
scas
xlat
pop
ret
pop
or
xchg
xchg
subb
mov
mov
hlt
or
in
dec
and
cmc
mov
data16
pop
dec
out
inc
in
inc
out
adcl
enter
popa
hlt
dec
sub
xchg
sahf
adc
push
pop
adc
test
dec
shrl
add
cmp
sbb
fisttpl
jbe
sbb
xor
push
test
mov
xor
push
in
pop
push
loope
and
test
and
ja
scas
push
lds
sub
jne
mov
cmp
push
lret
mov
mov
sbb
mov
xor
and
jb
lds
cmp
lods
adc
jmp
sub
inc
pushl
int
mov
mov
inc
mov
xor
loopne
les
and
loope
aas
into
mov
fstl
pop
pusha
sbb
loop
and
shl
shlb
jg
fimull
jno
jmp
mov
mov
call
in
outsl
cs
add
sbb
js
and
into
es
loop
pop
out
cli
jle
movsb
jg
loopne
leave
pop
ds
xchg
aas
mov
xchg
or
add
fwait
scas
xor
nop
push
cmpsl
ja
jmp
frstor
push
inc
add
xor
mov
inc
jp
jae
lods
mov
pushf
out
jnp
mov
in
and
adc
lea
sub
cmp
jb
iret
insb
jbe
push
lahf
pop
pop
in
jmp
les
jge
fldl
jae
push
xchg
scas
sub
inc
scas
push
lret
mov
mov
ret
dec
sahf
shll
mov
ss
push
loopne
adc
push
in
sub
cmpsb
insb
mov
jb
xor
ljmp
mov
dec
pop
movsl
xor
and
movsb
insl
iret
jns
mov
fwait
pop
mov
mov
stos
sub
mov
ss
pop
test
mov
loope
dec
pop
mov
add
pop
ss
sahf
push
xchg
in
mov
subb
cmpsb
jge
faddl
mov
jle
daa
jnp
sbb
out
loop
dec
adc
std
ds
fmuls
mov
inc
inc
je
ret
hlt
push
jo
cli
out
mov
adc
dec
cmp
and
mov
mov
or
xchg
add
dec
shrl
jmp
lock
out
int
cltd
and
mov
or
je
into
mov
cwtl
xor
fwait
repz
stos
rcrl
add
mov
and
fs
ja
xchg
mov
adc
in
imul
pop
add
sbb
cltd
xchg
push
in
jge
imull
repz
pop
sar
lock
sbb
xor
inc
add
es
cli
jecxz
fsubrl
mov
aas
jbe
test
mov
dec
mov
gs
push
push
inc
stos
xlat
rcl
cmpsb
mull
mov
pop
roll
sub
pop
push
and
add
call
sub
cmp
mov
loopne
sbb
dec
int3
arpl
mov
gs
leave
nop
stos
mov
xchg
movsl
mov
dec
dec
xchg
mov
xor
push
dec
fimuls
push
push
push
sahf
stos
je
push
jecxz
das
sub
cmc
pop
stos
mov
pop
adc
aam
repz
aas
test
push
add
inc
jecxz
daa
in
test
jbe
aad
inc
idivl
out
xchg
push
ds
stos
cld
jbe
pop
adc
imul
or
aad
cltd
pop
adc
aad
jne
andl
add
dec
subb
das
push
loop
out
dec
xchg
fcmovnbe
xor
pop
mov
adc
sahf
lea
adc
ficompl
loop
push
test
push
enter
jge
or
jno
stos
mov
pop
xlat
gs
xchg
scas
pop
jno
stos
mov
fistl
pop
shlb
lret
fsubrs
mov
add
in
adc
fcomps
into
pop
fists
mov
jge
in
push
repz
push
out
je
xchg
xor
pop
stc
adc
js
mov
mov
bnd
js
into
pop
jl
jno
sahf
pop
mov
mov
and
in
add
jmp
pop
mov
push
cld
dec
sti
and
cmp
cmp
mov
jg
loopne
sbb
mov
mov
jnp
test
ja
stos
sbb
loop
jbe
adc
or
cmp
xchg
adc
pop
mov
mov
rorl
xchg
mov
imul
jmp
pop
ss
or
and
sbb
xlat
mov
sub
cld
mov
jno
lock
iret
cs
push
inc
shlb
xor
daa
mov
sub
sar
jbe
xchg
cmc
lret
fwait
adc
push
and
ret
and
jns
jbe
incl
push
mov
dec
scas
psadbw
rcr
jae
sub
adcb
cli
sbbl
sahf
xor
jle
fs
add
rolb
mov
push
clc
pop
xchg
cmp
lret
xchg
lea
mov
lcall
shr
jae
rolb
push
and
fsts
pop
cmc
imull
out
adc
cld
inc
push
sti
mov
and
in
lret
or
add
push
ja
sub
inc
fdivrl
ret
ss
cwtl
mov
lcall
ret
pop
hlt
cmp
jg
and
or
pop
pop
lds
ljmp
push
movsl
push
mov
loopne
out
sbb
cmp
in
es
sub
outsb
xchg
adc
daa
sub
mov
pop
adc
outsb
inc
test
inc
adc
jb
rorb
test
sti
push
jae
jge
pop
mov
pop
icebp
lea
outsl
nop
icebp
and
test
inc
xor
mov
cli
sub
jl
lret
daa
addr16
sahf
shlb
sbb
dec
aaa
addr16
out
ds
sbb
insl
cmpsl
or
loop
gs
dec
in
cmpsl
aad
xlat
cmpsl
jne
xlat
adc
movsl
scas
sub
push
mov
add
int
stos
or
lock
in
dec
rorb
jb
push
jp
inc
push
dec
cmp
call
cmp
daa
xchg
dec
jno
sbb
fiaddl
or
pusha
int
sub
jae
push
sub
xor
addl
sub
adc
sbb
jl
mov
pop
xlat
push
adc
popf
cmp
sti
pop
gs
cmp
fistpl
xchg
test
in
iret
inc
or
je
addb
push
mov
pop
mov
or
stc
testl
cld
es
xor
inc
xor
dec
outsb
ret
xlat
mov
mov
je
pop
pop
or
push
sar
push
xchg
bound
ja
fwait
add
hlt
sahf
xchg
xlat
mov
std
cltd
cmpsl
movsl
popa
insl
push
sbb
cmpsl
mov
out
xchg
push
add
ret
pop
push
push
stos
mov
or
js
mov
fstpt
stos
jno
mov
shrb
push
xchg
in
xlat
cld
outsb
jne
mov
test
mov
cmp
mov
pop
push
outsl
mov
adc
xor
cmp
cli
test
or
shll
jno
fiadds
sub
or
cmp
jne
in
roll
iret
fstpt
sbb
push
cld
iret
jns,pt
and
faddl
push
je
push
lcall
xchg
push
aad
sub
stos
push
pop
cmp
int
jge
pop
jle
pop
cs
inc
lds
dec
pop
jge
das
std
mov
loop
xchg
ret
out
out
cmpsl
pop
shr
ficomps
xchg
ljmp
ret
cbtw
mov
mov
mov
test
mov
iret
rcrl
adc
loop
clc
int
imul
insb
inc
lds
xor
xchg
enter
sbb
mov
mul
and
loope
inc
cmp
movsb
mov
aad
mov
push
dec
inc
pop
call
es
std
out
leave
addr16
std
inc
adc
insb
lret
and
pop
mov
mov
movsb
bndstx
out
push
cs
vpminub
cmp
fdivs
out
adc
shll
jns
lcall
das
pop
ret
orl
sahf
outsl
inc
sub
sahf
iret
inc
idivb
jne
pop
bound
mov
les
int
add
dec
popa
cs
mov
inc
push
mov
jbe
xchg
negb
hlt
jl
and
sub
mov
faddl
movsl
mov
mov
inc
inc
sti
sbb
mov
mov
mov
cwtl
fsub
pop
inc
scas
mov
enter
loopne
cmc
adc
lock
negb
mov
in
mov
add
sub
jmp
mov
mov
adc
jno
xchg
std
cmp
ss
scas
xor
add
pop
jb
sub
cmp
jbe
repnz
add
mov
jns
pop
jae
push
popf
mov
add
std
fadds
adc
mov
insl
cmp
ljmp
push
push
xchg
cmp
rorl
xor
inc
mov
push
fdivrp
and
es
mov
iret
jo
ja
fdivs
and
popf
mov
shll
mov
adc
xchg
jecxz
mov
int3
out
xchg
or
aad
add
pushf
push
push
cmp
inc
adc
sub
xchg
lahf
sbb
lahf
out
push
lret
pop
mov
dec
adc
push
cmpsl
test
sbb
xchg
adc
jno
add
adc
in
xor
addr16
jo
dec
push
cmc
rolb
mov
jnp
push
jne
or
ret
mov
out
mov
mov
push
cli
mov
insl
dec
loopne
roll
fadds
stos
nop
imul
or
nop
aas
test
inc
test
inc
jmp
pushf
outsl
incb
lea
cmpsb
repnz
enter
cmpsb
mov
add
ljmp
xchg
cmpsb
test
and
mov
and
push
cltd
call
jb
mov
ret
mov
fiadds
mov
xchg
jnp
inc
movsl
leave
out
push
sbb
idivb
aas
flds
add
clc
or
xchg
add
push
sbb
or
jle
pop
fcmovbe
in
iret
insb
movsb
loope
loope
pusha
or
repnz
xchg
jecxz
mov
imul
mov
addr16
imul
sbb
cmc
js
mov
push
xor
inc
loop
xchg
pop
std
cmpsb
lfs
test
ret
lahf
subb
or
jl
shlb
push
mov
mov
pop
arpl
int3
or
outsb
sub
sahf
loop
pop
out
in
scas
jle
repz
add
ret
stc
mov
adc
push
push
push
mov
dec
sarb
and
mov
dec
jp
xchg
inc
ds
dec
or
int
jmp
jle
mov
jle,pt
cmp
in
test
and
aaa
out
add
out
das
pusha
mov
cmp
dec
xchg
and
shll
push
scas
adc
int3
scas
fdivs
jge
dec
cld
sbb
xorb
outsl
mov
shlb
sub
insl
subb
aas
ss
js
and
sbb
sub
in
dec
inc
adc
mov
cmp
jp
dec
ja
xor
xchg
sub
pop
mov
stos
mov
mov
in
xchg
adc
add
aad
mov
fsts
int3
dec
dec
adc
or
outsl
add
out
push
add
mov
out
pop
and
cmpsl
inc
adc
arpl
outsl
nop
js
cmpsb
aad
mov
xchg
pop
push
jno
shlb
xchg
and
movsl
adc
push
ret
push
sub
out
dec
rolb
xchg
and
mov
test
arpl
addr16
mov
mov
push
push
xor
mov
sbb
mov
ds
sbb
fdivrs
push
nop
xorb
lcall
movsl
push
xchg
mov
push
jno
pop
inc
and
push
push
pushw
lcall
stos
xchg
mov
mov
nop
outsb
mov
inc
mov
in
in
test
inc
leave
xor
fisubl
jae
add
or
pushf
es
in
mov
xchg
jp
inc
dec
inc
xchg
jmp
push
outsb
jb
imul
aad
addr16
push
stos
test
movsb
in
jo
ss
jmp
aam
inc
jns
add
mov
cmp
lahf
lret
repz
xor
or
call
push
cmp
fsts
jecxz
pop
ljmp
pop
mov
dec
mov
cli
test
xor
inc
in
lret
xor
mov
les
vpsrld
and
and
xchg
dec
scas
sub
in
push
xchg
mov
addr16
mov
mov
clc
leave
int3
cld
mov
inc
mov
add
repz
sub
rcl
cmpsb
xor
fs
outsb
mov
andl
call
sbb
ja
into
bnd
mov
insb
fsubrl
mov
aad
jle
es
dec
or
loopne
aam
out
mov
push
ds
pop
sbb
push
in
inc
std
icebp
mov
daa
outsl
ja
or
hlt
push
add
mov
push
fists
aam
daa
ds
xchg
les
imul
mov
in
cmp
mov
sub
mov
and
jnp
push
popf
fistpll
leave
int
lcall
sti
xchg
or
jl
pop
sar
jnp
loope
xchg
fstps
jne
test
out
mov
cmpsl
sbb
mov
pushf
mov
mov
sub
stos
shll
fstpl
aaa
xor
push
xor
outsl
lods
cld
xor
inc
bound
pop
inc
cmpl
lcall
into
xor
or
inc
inc
mov
push
jb
xchg
outsb
push
icebp
dec
icebp
xchg
push
das
jge
jl
jle
dec
mov
mov
mov
pop
add
mov
cmp
jl
mov
dec
sub
sbb
jecxz
cwtl
push
pop
mov
jg
pop
lret
cmpsl
mov
fsubrl
shll
in
out
sbb
daa
add
mov
insl
fcompl
enter
jo
and
aas
dec
cli
lods
or
pop
adc
add
hlt
inc
xlat
cmp
outsb
adc
pop
imul
fisubrl
sub
iret
cmp
cmp
mov
dec
xchg
loope
sbb
add
pushl
jmp
jns
and
jb
and
movsl
adc
push
push
mov
sbb
mov
ljmp
mov
call
sub
jp
cmp
imul
xor
jae
jecxz
dec
jne
fs
sbb
rclb
mov
icebp
out
xchg
pusha
sbb
ret
jge
das
jmp
inc
orl
mov
mov
adc
add
clc
pop
add
adc
jb
push
adc
sbb
lret
jb
loope
push
jle
subb
jg
mov
sbb
sub
xor
push
maskmovq
idivl
fstpl
mov
iret
aam
xor
add
repz
dec
cmp
addb
add
adcb
pop
sub
ljmp
add
and
fwait
push
ficomps
cmpsl
loop
adc
pop
jge
lcall
gs
xchg
cmp
fcoml
push
movsl
xor
hlt
jmp
loope
sarl
mov
mov
aad
out
add
aam
sub
fldt
enter
fcompl
xchg
test
push
xor
ret
cmp
std
les
pop
mov
or
mov
xchg
pop
pop
rolb
faddl
cld
push
out
add
pusha
push
xor
and
adc
xchg
orl
xor
cs
jae
outsb
xlat
cmp
jl
call
xlat
fdivrl
adc
inc
aad
aaa
sub
lea
rcrl
adcb
cmp
aam
aaa
jb
outsl
ss
mov
push
enter
push
nop
pop
std
mov
test
adcb
jno
push
push
fsubrs
push
ljmp
adcl
loopne
jecxz
and
push
or
cli
sbb
and
push
pop
jl
int
std
scas
je
push
jnp
aaa
add
push
fiaddl
jnp
lret
push
adc
and
aas
lds
rolb
ja
and
mov
int3
and
cmp
bound
or
dec
aas
mov
dec
pop
xor
or
mov
xchg
ror
lret
mov
shll
xor
and
mov
fs
stos
mov
xchg
mov
dec
mov
repz
aam
out
daa
outsl
pop
inc
fwait
xchg
in
rorl
or
and
int3
data16
pusha
adc
xchg
sbb
mov
data16
xchg
push
insl
test
mov
shlb
mov
jmp
fwait
int3
push
inc
movsl
enter
adc
or
inc
in
ds
mov
ds
int
mov
scas
lcall
adc
adc
jo
mov
jmp
jae
hlt
fadds
stos
sbb
jns
subb
lahf
add
sbb
or
and
or
push
outsb
repz
pop
cmp
dec
pushf
ljmp
dec
add
popf
mov
lods
adc
push
cmp
mov
sub
mov
loop
jg
sahf
out
in
scas
add
mov
mov
push
js
push
add
outsb
sub
ja
sti
fmul
dec
into
aad
sbb
subb
int3
or
imul
mov
dec
sub
lods
inc
rcrb
roll
sahf
cmpsb
xchg
shlb
cmpsb
inc
pop
cltd
gs
or
movsb
inc
popf
adc
push
in
inc
adc
add
cmp
cmp
sbb
mov
loop
pop
test
jb
mov
xchg
or
movsl
cmp
mov
lods
inc
mov
jne
add
lds
and
push
fs
cmpsb
jp
mov
mov
fnsave
jae
mov
lahf
mov
sbb
fwait
cld
cmp
rcll
pushf
xor
popf
rcrb
clc
mov
fcompl
aaa
xchg
mov
adc
sbb
sahf
adc
popa
jbe
mov
pop
inc
sbb
fbld
xchg
mov
xchg
inc
mov
fstps
cmp
movlhps
addb
xchg
push
int
ds
cltd
scas
pop
ss
jecxz
shlb
sti
leave
add
add
mov
cltd
inc
int3
sbb
and
enter
cwtl
lock
cmc
inc
fst
stos
cmpsl
jbe
inc
sub
imull
stc
adcb
pop
ret
lret
cmp
and
dec
sarb
sbb
orb
mov
cmp
aas
lea
cmp
outsb
xchg
repz
adc
adc
jno
push
cmc
pushf
jmp
aam
pop
inc
mov
hlt
and
push
aam
inc
sub
and
jns
xorl
adc
xchg
jbe
push
sbb
adc
cmpsl
push
mov
lea
mov
push
and
mov
outsb
pop
mov
ss
and
mov
dec
sub
rcll
lcall
mov
gs
pop
cmp
popf
push
mov
in
mov
mov
pop
nop
pop
pop
les
fldl
pushf
mov
and
mov
dec
mov
inc
mov
leave
adcb
pop
into
outsl
xor
xor
jg
pop
xor
xor
add
lods
fdivs
lahf
in
inc
lret
data16
cmpsb
int3
sub
or
ret
cmp
or
cmp
push
pop
dec
or
or
mov
scas
push
or
and
inc
jle
xor
push
test
sbb
mov
mov
jp
mov
and
xchg
or
mov
jne
xchg
sbb
xor
out
test
inc
adc
fcomip
cmp
dec
xchg
pop
shl
mov
in
xchg
jbe
mov
push
cli
pushf
push
inc
fistpll
std
mov
ret
mov
add
mov
xchg
or
add
jnp
inc
xlat
cmp
sub
fldcw
cmpsl
mov
lahf
jne
cltd
add
incb
pop
stos
cmp
pop
inc
mov
xchg
testl
movsb
shl
xor
xchg
pop
dec
dec
jns
push
mov
xchg
mov
adc
mov
jo
push
enter
lock
jno
dec
jge
jl
pop
sbb
call
and
frstor
mov
loopne
xchg
pop
add
jae
jae
iret
sbb
dec
imul
test
shrl
es
adc
push
pop
push
scas
jb
addr16
test
jo
jge
cmp
mov
sub
xchg
jo
push
cmp
fucom
das
jl
sbb
aam
push
dec
aad
in
pop
inc
mov
cmp
pop
pusha
in
fisttpl
or
jns
push
ror
xchg
cmpb
je
pop
lds
pop
mov
pop
push
sbb
insb
inc
and
stos
clc
leave
add
addb
xchg
push
dec
sub
ljmp
fildll
rol
aam
outsl
inc
sub
out
imul
sbb
addb
sub
jae
mov
int
mov
movsl
or
roll
fadds
imul
stc
cmp
ficoms
push
ret
aad
cmp
sbb
mov
pop
mov
lret
iret
dec
mov
mov
out
jne
sti
mov
mov
cld
dec
outsl
enter
sbb
mov
lds
push
sbb
lods
mulb
xor
push
push
inc
xchg
adc
out
mov
nop
sub
loop
mov
ja
sub
sbb
sbb
daa
add
cmpsb
xchg
sbb
in
cwtl
in
inc
inc
cmc
sub
in
orb
or
test
popf
sbb
mov
stc
xchg
mov
cmpsl
xor
lahf
test
sbb
loopne
stc
jl
imul
test
iret
cmp
xchg
xchg
sbb
movsb
cmp
mov
add
push
add
cmp
jecxz
push
dec
mov
dec
add
dec
or
outsb
pushf
enter
dec
outsl
adc
dec
orl
notl
sahf
fwait
xchg
xchg
push
insb
leave
cmp
mov
icebp
sbb
sbb
xor
iret
xor
loop
push
jle
push
in
xchg
aam
inc
mov
mov
sarb
jmp
adc
hlt
ja
sub
or
xor
mov
push
jbe
out
rcll
clc
lcallw
or
orb
cld
xor
loope
test
cs
cmpb
addb
pop
jmp
aam
fistpll
mov
xchg
ret
add
lods
int
xor
mov
jns
imulb
mov
outsl
dec
ficoml
and
gs
cmp
pop
pushl
xor
test
imul
inc
mov
sbb
inc
test
pop
mov
and
xchg
shrb
xchg
pop
pop
jb
mov
aaa
xchg
jg
inc
in
adcb
jb
adc
les
inc
loop
pop
jbe
fwait
test
ja
dec
nop
jbe
add
inc
in
xlat
rcrl
pop
icebp
fwait
sub
or
add
push
push
repnz
loopne
orl
out
pop
pop
xchg
imul
pop
or
xor
ret
jmp
or
sbb
mov
sbb
mov
sahf
pop
aaa
pop
sarl
adc
sbb
mov
or
popf
fnsave
xor
int
cli
cmpl
into
rcrl
cmp
adc
xchg
jge
jns
mov
xchg
push
fwait
shll
pop
cmp
mov
sbb
mov
fsub
lahf
dec
xchg
or
mov
xchg
pop
mov
int3
loop
lahf
mov
imul
mov
les
loopne
adc
add
xorl
int
push
test
inc
cmp
mov
jno
js
push
pop
int3
pop
jb
cld
ja
mov
cs
sbb
mov
bsr
and
or
sahf
xchg
sbb
lods
xchg
cmpsl
push
repnz
mov
enter
daa
inc
in
xchg
outsb
mov
in
jo
sub
mov
shr
bound
add
das
aas
pop
mov
shrb
aas
out
add
sub
add
dec
dec
sub
stc
sub
inc
test
enter
jp
or
leave
lock
jge
shrb
mov
mov
adc
jp
xchg
mov
sbb
jl
push
sub
clc
dec
mov
dec
bnd
rcll
dec
std
and
dec
insb
xchg
mov
loope
insl
cmp
js
sbb
and
cmp
adc
adc
ret
sbb
fstpl
xlat
jb
dec
mov
fists
mov
scas
xor
inc
int3
jl
enter
push
xchg
mov
jge
mov
add
ds
loopne
and
shrl
sti
inc
cmp
sti
and
arpl
xchg
xor
cmpb
jecxz
push
ret
fwait
pusha
fistl
pop
sub
cmpsb
push
add
or
gs
push
push
aas
fmul
fcmovb
jg
arpl
push
push
lea
add
inc
repz
inc
jno
xchg
pop
xchg
mov
dec
adc
inc
cwtl
lcall
fwait
cld
sub
cld
sub
out
movsl
mov
mov
js
sub
or
imul
xor
lds
leave
cli
xchg
int3
xchg
cmp
das
outsl
and
sub
aad
in
lods
and
popf
push
dec
inc
xchg
cltd
push
lods
jl
pop
or
shlb
dec
psrld
dec
lret
dec
js
pop
or
mov
test
ficompl
pop
call
clc
loop
xor
cmp
data16
push
push
lret
enter
imul
cmp
sti
aam
shll
mov
aaa
adc
mov
in
sbb
leave
mov
and
rorl
mov
dec
cmp
xchg
mov
jbe
jbe
push
aam
dec
lock
in
subb
test
sbb
out
subb
inc
sbb
add
aam
insl
pop
xchg
sahf
insb
push
pop
sub
xchg
rorb
push
int
push
and
or
std
adc
ret
dec
icebp
lret
mov
popa
dec
andnps
xchg
cmc
jp
popf
jo
sub
pop
enter
inc
imul
sub
arpl
jecxz
leave
push
les
fucomp
aas
sub
push
or
cmpsl
cltd
mov
dec
movsb
lahf
jbe
xchg
inc
in
mov
sub
les
push
inc
or
sub
popa
jae
xchg
sbb
test
data16
sub
pop
xor
mov
xor
inc
xor
shlb
addb
push
xor
out
insb
test
xchg
das
cmpsl
ficompl
mov
cmpl
adc
mov
nop
add
sbb
std
in
jb
jo
and
mov
int
jle
dec
lret
mov
shlb
sub
lret
shrl
mov
cmp
insl
daa
popa
push
pop
out
cmp
popa
dec
lahf
aam
aaa
sbb
bound
sbb
fcomps
mov
or
std
inc
jge
sbb
xchg
stos
push
es
xor
testl
mov
int
jne,pt
jae
cmp
shlb
jne
daa
sbb
add
jb
loopne
pop
xor
scas
push
test
stc
mov
fst
and
int
xchg
jo
ljmp
rcll
cmp
or
pop
mov
data16
xchg
roll
lret
adc
sub
pusha
lods
xor
fstpt
jmp
xchg
sti
shll
lcall
pop
subb
fstp
and
adc
mov
int3
dec
mov
pop
cli
es
test
cld
mov
addr16
es
fsubr
xchg
mov
cmp
push
push
pop
addr16
mov
fiadds
fidivrl
dec
stos
pop
repnz
or
js
lret
xchg
dec
or
push
jmp
add
lret
fcoms
push
les
dec
xor
loopne
das
cmp
leave
jnp
addr16
or
arpl
loopne
aas
out
iret
cmpl
cmp
popa
adc
cmp
mov
sbb
enter
mov
and
in
add
dec
mov
test
push
lahf
movsl
imul
jecxz
push
sbb
fxch
test
movsl
cmc
xor
inc
push
add
mov
je
and
enter
xchg
dec
push
adc
mov
rcrl
inc
mov
jne
cmp
loop
add
pushf
nop
subl
and
data16
sbb
fwait
jl
les
jbe
rol
pop
mov
mov
sub
aaa
jne
mov
nop
or
xor
lcall
sub
fldl
aad
mov
mov
ret
cmp
and
pop
or
lcall
mov
and
xchg
inc
cs
jne
test
inc
pop
mov
sti
cli
xchg
mov
lea
mov
sub
sbb
shll
popa
negb
inc
xor
stos
push
sbb
cmp
jbe
adc
xchg
loope
nop
nop
sub
shr
or
sbb
test
push
mov
mov
idivl
dec
ret
xlat
mov
push
inc
out
fwait
cmp
das
push
and
adc
push
xchg
adc
ret
inc
mov
scas
add
cld
jbe
in
out
aas
pop
fstl
and
mov
in
mov
xchg
imul
or
out
xor
add
xchg
sahf
clc
fstp
loope
hlt
mov
push
arpl
cmpsl
xor
pop
cltd
repz
add
xchg
flds
push
jo
sbb
in
cltd
xor
cmp
dec
cmp
push
std
xchg
js
hlt
pop
call
xorb
push
or
xchg
lods
lret
xchg
mov
jne
mov
jno
movsb
xlat
lods
inc
push
dec
push
scas
sub
sub
or
lds
shll
xchg
or
cmpsb
jle
dec
lock
push
mov
in
mov
mov
sub
pop
test
iret
mov
jne
jg
test
xchg
or
data16
fwait
add
out
ret
mov
sub
in
cmp
lahf
cld
or
jae
cmp
pop
sub
les
add
push
cmp
dec
pop
das
and
pop
pop
and
xchg
push
or
scas
icebp
cli
dec
push
es
jg
call
and
lods
insl
sbb
nop
pop
dec
pop
ffreep
add
shlb
mov
xorl
popf
add
or
adc
in
adc
push
xchg
sahf
mov
int3
addr16
aam
pop
sahf
jnp
imulb
mov
dec
mov
push
dec
mov
imul
cmc
cmp
jns
sarb
lea
aaa
pop
in
push
ficompl
lret
leave
jl
das
pop
js
outsb
cmp
sub
push
mov
dec
jmp
push
mov
movsb
jbe
scas
push
jne
mov
popa
fucom
pop
or
cmp
jae
cmc
push
jne
in
stos
sub
push
jne
adc
std
mov
mov
jne
notl
jmp
test
and
shl
mov
cld
imul
pop
scas
xlat
pop
push
sysexit
cmpsb
rorb
aam
movsl
hlt
push
and
fsubl
xlat
ljmp
jbe
mov
cs
mov
jne
in
xchg
inc
inc
sbb
ret
std
jmp
arpl
pop
shlb
mov
aaa
ljmp
jmp
test
sbb
pop
in
mov
je
jp
and
inc
out
movsl
pop
popf
js
dec
push
add
inc
jnp
pop
out
or
pop
inc
addl
xchg
clc
or
fdivrl
adc
ret
mov
out
test
push
cli
xor
popf
xlat
mov
pop
push
in
adc
mov
jg
lds
gs
mov
sahf
jmp
sub
pop
sub
mov
fldcw
mov
jmp
jae
xor
or
mov
jmp
mov
sub
movsb
push
xor
daa
push
push
mov
and
or
jno
push
aas
fldl
jo
sahf
repnz
mov
jo
and
add
xchg
ss
add
push
push
insl
mov
jb
test
test
xlat
arpl
fcmovne
movsl
sbb
sub
cli
js
imul
mov
jg
pop
or
stos
jg
pop
test
scas
pop
stos
mov
popf
pop
stos
rcrl
adc
test
ret
xor
add
cli
sbb
pushf
mov
adc
dec
jo
popf
fbstp
pop
stos
sbb
scas
inc
lds
fistps
les
scas
adc
add
mov
mov
jge
popa
pop
xor
push
jns
pop
or
add
sub
and
faddl
movsl
and
inc
cli
ss
fisttps
mov
sub
inc
in
push
int3
loopne
test
jnp
inc
call
add
or
repz
faddp
sti
xchg
leave
inc
or
movsb
into
loope
cmp
cmpsb
cmc
jmp
gs
ret
cli
mov
out
cmp
cld
fwait
movsb
pop
das
add
xchg
jp
imul
mov
and
dec
cmp
test
cmp
pop
xchg
add
xor
scas
push
and
test
lret
inc
dec
sbb
mov
test
mov
sbb
cmp
xor
sbb
test
sub
addb
faddl
das
scas
cmp
pusha
leave
dec
inc
add
sbb
in
push
testb
out
xchg
jae
mov
movsb
iret
jno
call
jge
scas
sbb
add
dec
cltd
repnz
mov
jmp
xor
aam
cmp
in
lods
cmc
xorl
add
cltd
jo
sub
rol
test
inc
ja
leave
sbb
xchg
jbe
add
pop
mov
mov
inc
sbb
aaa
repnz
aam
mov
mov
in
outsb
push
mov
into
rolb
and
lods
sahf
dec
sti
xlat
cmpsl
sbb
sub
daa
cltd
sbb
out
pusha
jo
mov
scas
pop
push
imul
daa
inc
fdivl
jbe
pop
rclb
and
mov
or
subb
mov
lret
jecxz
mov
insb
loope
outsb
jmp
lret
jb
stos
leave
lret
inc
xor
movsl
dec
cmp
in
daa
idivb
nopl
fs
sub
sti
ret
cwtl
fiadds
pop
dec
movsb
mov
add
pushl
xchg
and
lahf
dec
popf
mov
jns
mov
or
add
sub
and
xchg
dec
bound
stc
dec
mov
pop
mov
lods
leave
scas
pusha
int3
dec
frstor
adc
mov
orl
mov
stc
je
sub
dec
push
or
mov
lds
jnp
jl
adc
jno
xchg
inc
pop
cmp
jb
adc
das
test
rcr
and
cmp
fistpll
cmp
or
popf
rcrb
cmp
jmp
sbb
cmp
inc
mov
ret
jg
test
orb
insb
xor
lea
cmpsb
das
and
mov
mov
in
dec
pop
xchg
das
jb
xor
mov
mov
push
dec
std
cmp
or
aaa
bound
inc
fiadds
inc
shufps
pop
xchg
push
aaa
or
inc
in
lods
arpl
mov
xor
cwtl
out
std
inc
push
dec
rorl
loop
in
scas
clc
cmpsb
dec
xchg
test
lcall
adc
lret
push
jo
fsubrl
cld
push
jmp
ljmp
jl
ffreep
fcmovne
test
cs
clc
pop
pop
ret
push
sub
xlat
jge
jle
cmp
aam
adc
xchg
xor
and
inc
xor
mov
push
fstpt
cli
es
daa
in
mov
mov
jle
pop
loopne
ret
sub
lock
test
pusha
jo
add
pop
outsb
out
mov
xor
iret
push
repnz
outsl
stos
sub
pop
push
popf
notl
sarl
xor
or
push
sbb
test
in
cld
and
jns
aam
xlat
out
daa
inc
cmp
cmp
pop
xor
mov
lahf
hlt
xchg
rclb
adc
sub
rcll
xchg
jns
mov
lret
or
mov
pusha
push
stos
subl
xor
inc
add
fcomi
xchg
cmp
ss
and
inc
aad
jae
push
in
dec
int3
divl
xchg
cmp
push
jp
mov
outsb
jl
adc
popa
inc
push
movsb
mov
mov
repz
dec
pop
repz
jmp
sbbb
or
out
xor
outsb
push
dec
mov
jne
sub
mov
and
lods
push
inc
mov
popa
mov
aad
enter
sbb
cld
aad
das
xchg
push
inc
je
mov
mov
ljmp
lret
xchg
les
aad
pcmpeqd
cmpsb
test
and
mov
nop
cmpl
enter
bound
in
or
aas
inc
inc
add
iret
pop
or
push
cmp
push
add
scas
out
adc
lret
pop
insl
and
sub
fsubrs
sbb
jnp
cmp
inc
lcall
dec
addr16
push
xchg
dec
cmpsb
xchg
xchg
outsl
dec
and
jle
jae
fisttpll
lret
cmpsb
lcall
add
jl
jae
adc
cmpl
imul
mov
mov
lcall
push
fwait
stos
cmp
inc
lea
jns
cmovnp
stos
adc
bound
cmovb
mov
xchg
xchg
popa
stc
ret
aaa
test
lahf
rcll
jne
outsb
scas
push
pusha
sarb
nop
xlat
inc
insl
enter
popf
movsb
pop
mov
leave
sahf
adc
sbb
dec
jl
mov
pop
inc
dec
jne
int
jp
ds
push
iret
mov
dec
neg
or
add
rol
jne
sub
xchg
std
idivb
xchg
lret
xor
sub
mov
shll
rcrb
mov
add
imul
cmpsl
sbb
rcr
sub
stos
aad
aam
shl
sub
jnp
add
jg
sub
mov
jmp
daa
xor
inc
adc
jmp
mov
aaa
pop
mov
xlat
xor
mov
xchg
jbe
dec
roll
shrb
cwtl
inc
pop
push
cmc
subl
pop
dec
insl
jl
push
cld
xor
je
push
aas
outsb
lret
sahf
and
je
mov
in
pop
adc
jle
sbb
ret
out
pop
fdivrs
jnp
mov
mov
xchg
int
fstpt
jnp
pusha
movsb
inc
xchg
xchg
add
or
xor
int
mov
in
mov
js
cs
into
or
vpextrw
lds
mov
lock
sbb
adc
adc
int3
enter
jecxz
mov
fldenv
movsl
aas
dec
pushf
xchg
or
and
pusha
fwait
call
sbb
loopne
add
mov
movaps
sub
popf
pop
add
xchg
jle
push
test
jnp
lcall
cwtl
jb
imul
push
aad
pusha
pop
imul
ret
ret
lcall
inc
sbb
jo
call
lcall
lcall
jno
mov
icebp
nop
pop
lahf
mov
shll
bound
fsubs
xlat
fistpl
dec
rclb
mov
movsl
std
xchg
cmc
dec
and
sub
imul
mov
jno
pushf
xlat
aaa
pop
movsb
and
out
nop
lds
mov
je
xor
fs
mov
xchg
roll
rcrl
inc
push
add
je
adc
xor
mov
or
in
int
shlb
add
or
pushf
xchg
fbstp
pop
in
cmpsl
pusha
scas
mov
cmp
negb
jmp
incl
sub
push
andb
mov
and
jae
sbb
pushf
mov
jge
mov
and
je
cltd
mov
pushf
dec
inc
mov
mov
push
cmpb
daa
mov
test
add
js
mov
test
and
test
stc
and
enter
jnp
icebp
je
call
add
scas
cwtl
insb
out
mov
shll
lock
rol
mov
dec
cmpl
movsl
push
add
scas
mov
dec
inc
xlat
and
pop
idiv
popf
in
or
outsb
pop
pop
add
and
dec
popa
data16
jge
fwait
dec
lret
lcall
mov
lret
test
add
adc
push
dec
sbb
lods
shlb
xchg
xchg
ss
js
mov
ret
push
lods
scas
push
cltd
push
mov
xchg
sbb
jb
jmp
sarb
ljmp
mov
pop
ja
cmc
insl
ds
pushf
out
mov
xor
sub
push
push
add
lret
cli
jne
adc
pmuludq
jle
cmp
int
mov
sbb
out
mov
push
inc
jge
aas
xor
test
enter
xor
mov
in
scas
pop
lds
es
test
adc
cld
dec
add
pop
pop
mov
pop
roll
jb
lods
shrb
cwtl
mov
push
dec
jne
dec
fidivrs
xor
bound
icebp
inc
pop
mov
push
fildll
mov
fisubrs
mov
adc
jp
adc
mov
sub
stos
cmpsb
cmp
repnz
fdivrl
aam
pop
incl
sbb
jne
push
mov
sbb
fdivrs
and
shl
test
xorb
xchg
cmpsb
xchg
mov
xchg
dec
cmp
enter
rcrb
or
mov
xchg
aas
iret
jbe
mov
sti
mov
int3
stos
or
rcl
adc
jmp
adc
pushf
jno
jb
and
sub
out
hlt
push
mov
xchg
pop
ds
xchg
mov
test
push
cmp
and
mov
sbb
or
popa
incb
int
loope
lret
stos
test
mov
aad
cltd
cmc
dec
testl
jecxz
icebp
out
pop
outsl
push
mov
rorl
pop
adc
and
sub
je
jne
pop
mov
mov
shll
mov
sbb
or
dec
pusha
add
mov
aas
or
mov
xchg
movsb
test
cli
push
mov
push
mov
jbe
popf
enter
adc
xchg
into
jnp
testl
or
push
out
push
mov
mov
jecxz
repz
mov
sbb
lods
xchg
xor
mov
mov
ds
clc
jg
inc
in
ljmp
sub
aaa
popf
js
int
insb
push
xchg
out
cli
push
shl
aad
jl
rclb
mov
inc
jmp
clc
out
mov
cmc
xchg
and
jmp
mov
inc
aaa
in
in
js
das
xor
ss
inc
add
push
hlt
cmp
shr
stos
add
movsl
xor
cli
cmp
inc
stos
xchg
cld
mov
or
cmp
ffree
jl
or
add
inc
push
push
xor
das
popa
inc
pop
mov
xchg
push
scas
insb
in
or
sub
clc
leave
ror
jnp
jle
into
in
into
cmp
negb
in
or
pop
and
out
dec
pop
jo
les
push
aas
ss
idiv
pop
mov
in
and
push
stos
push
out
cmpsb
pop
xor
push
lock
aam
jnp
mov
mov
jl
outsb
nop
jne
sub
or
jns
int
pop
dec
fdivs
lret
imul
add
add
mov
outsb
xchg
adc
fwait
popa
rcl
loop
nop
pop
sub
test
push
movsl
in
insb
stc
hlt
inc
mov
jmp
mov
sub
mov
bound
push
dec
mov
data16
popa
arpl
test
xchg
mov
cmp
or
push
inc
shrl
into
mov
jle
adc
add
mov
stos
and
pop
clc
xchg
xchg
arpl
and
jb
xchg
and
shrl
lods
ret
pop
jg
cmp
add
cmpsb
cmp
ds
not
int3
scas
sbb
sub
sub
mov
push
lods
data16
add
inc
popf
jo
iret
orl
ret
push
outsb
js
ficomps
sub
push
ja
push
push
cmp
lret
add
mov
in
popa
dec
xchg
mov
pop
xchg
lds
bswap
mov
jg
jae
mov
push
sbb
xchg
lea
testl
imul
frstor
and
jnp
xchg
data16
loopne
dec
inc
int3
dec
in
xor
gs
nop
and
jle
movups
mov
pop
pop
ds
jmp
pop
lret
enter
xor
lahf
loop
sub
cltd
clc
outsb
sbb
lcall
adc
inc
iret
or
push
mov
scas
add
rorl
les
sbb
fwait
and
pop
fisttps
push
xor
mov
inc
int
test
jo
adc
pop
cmc
fsts
cltd
test
adc
cli
and
das
loop
mov
fiadds
inc
mov
mov
sbb
ret
mov
repz
mov
inc
rclb
jl
aaa
jecxz
jl
fisttpll
fsubrl
pop
insb
mov
out
orb
lret
push
movsb
out
or
fwait
pop
jecxz,pn
lahf
orl
cmp
cmpsb
mov
dec
sahf
mov
pop
pop
sahf
sarb
sbb
loop
out
outsl
add
xor
adc
sbb
jmp
push
in
rorl
and
cmp
lods
or
mov
shll
les
lahf
or
push
popa
iret
mov
loop
and
aas
mov
jbe
sarb
in
push
pop
adc
bound
dec
mov
jmp
ss
dec
in
add
imul
pop
loop
inc
sbb
sahf
and
call
fstl
inc
sbb
sahf
sbb
leave
or
pop
cmp
frstor
adc
std
cwtl
sub
leave
sar
insb
gs
sti
shl
dec
pop
test
bound
adc
cmc
mov
movsl
stos
mov
adc
test
lods
sbb
jb
pop
push
movsb
and
mov
mov
adc
jmp
arpl
fdivrp
inc
outsb
xchg
mov
fnsave
shr
lcall
jmp
shl
mov
call
negl
iret
push
inc
rcrl
xlat
out
adc
push
add
pop
sub
ret
xor
or
adc
sub
je
xor
sub
subb
ret
add
ret
jne
push
xchg
lods
and
fimuls
cmpsb
mov
scas
jno
out
inc
adc
mov
pop
es
or
in
orl
clc
xchg
push
cld
jns
insb
sbb
leave
add
adc
push
je
inc
std
push
lods
lret
iret
sbb
test
pop
clc
dec
js
ja
scas
pop
int3
add
rorl
and
dec
jmp
mov
pop
mov
lea
js
pop
notl
data16
cmpl
mul
xor
dec
out
ror
das
sub
pop
fimuls
in
sbb
add
outsb
mov
mov
stos
mov
aas
sub
and
xor
inc
mov
mov
popl
enter
dec
imul
xor
and
insl
aad
ja
ja
fidivrs
sbb
pop
stos
dec
aam
aas
popf
fidivrl
inc
jne
fisttpl
sarb
cltd
outsb
jmp
sub
bound
mov
jb
hlt
popa
mov
add
inc
add
movsb
add
inc
inc
arpl
test
les
mov
sarb
sbb
clc
stc
lahf
xchg
push
insb
jp
adc
mov
xlat
dec
or
insb
ret
pop
jecxz
arpl
fprem
pusha
shlb
pop
lret
jo
testl
lahf
scas
das
sarl
sbb
push
fildll
pop
add
cltd
lds
test
fidivrs
xchg
or
mov
lea
icebp
and
movsb
fstl
sub
test
loope
hlt
xchg
fadds
std
incb
test
adc
pushf
loopne
push
ss
push
pusha
mov
fwait
in
into
sub
mov
cmp
jnp
sub
xor
mov
and
in
or
ss
ja
cmpsb
int
gs
push
cmpsl
add
out
pop
mov
and
and
out
cmp
sbb
mov
fwait
xchg
cmp
cmp
std
repz
mov
gs
xchg
jno
or
mov
jno
xchg
mov
inc
xorl
enter
in
adc
aas
adcb
aam
aaa
push
add
jecxz
mov
and
lock
lret
inc
inc
ljmp
scas
aaa
insl
sar
dec
jmp
cmpsb
sbb
mov
js
mov
sahf
fldl
out
mov
dec
push
dec
lock
sarl
mov
mov
cwtl
decl
sub
or
das
in
jns
mov
movl
testl
xor
adc
lock
xor
mov
std
test
mov
gs
and
inc
cld
leave
out
jge
mov
dec
mov
mov
mov
or
cs
adc
in
cs
mov
jmp
mov
cmp
mov
mov
arpl
in
xchg
add
aaa
mov
cmp
iret
cmpsb
inc
lcall
insl
add
mov
in
pop
push
jo
push
xchg
mov
and
ret
fidivl
int3
aas
imul
leave
mov
xor
dec
pushl
adc
fisubrl
and
nop
arpl
cmpsl
int
inc
int
mov
repnz
lock
jle
cltd
dec
jmp
outsl
repnz
and
jecxz
xor
inc
ret
add
movsb
cwtl
pop
arpl
das
test
mov
mov
rcr
xor
add
das
xor
in
pop
subl
hlt
icebp
sbb
int
jl
add
adc
jp
test
adc
shll
scas
pop
roll
xchg
mov
cmp
sbb
xchg
jecxz
jmp
jnp
popf
mov
addr16
sbb
adc
xchg
imul
jl
lahf
cmpb
pusha
arpl
add
loope
adc
scas
sbb
loopne
add
dec
ds
dec
jae
mov
xchg
aad
scas
xlat
out
mov
cmp
mov
leave
call
aam
scas
test
jb
mov
pushf
addr16
test
jae
xchg
pop
out
sub
add
hlt
mov
push
test
cmp
sub
fwait
ret
daa
inc
mov
cmc
rcl
jno
flds
lods
cmpsl
int3
cwtl
pusha
cmp
inc
sbb
and
rcrb
and
in
lds
scas
stos
repz
inc
or
mov
mov
push
mov
mov
jp
call
ficoml
pop
lock
fbstp
pop
js
call
cltd
or
xor
add
pop
lcall
pop
or
jle
ljmp
pop
sbb
lcall
fcomp
rolb
mov
push
push
mov
fstpt
push
xchg
push
xchg
xchg
dec
push
xor
pusha
xchg
les
inc
sbb
sub
insb
xchg
push
shlb
dec
xchg
or
rcr
shll
mov
aam
lock
xchg
fistpll
xchg
aad
bound
xor
orl
lds
cmp
leave
dec
fsub
push
out
push
in
dec
lods
shlb
inc
rcrl
les
jle
jno
xor
push
addr16
mov
movsl
and
mov
dec
mov
int
js
outsb
or
bound
addr16
fisubs
ret
push
push
xchg
xchg
clc
out
xlat
ja
lret
xchg
lret
aaa
clc
aad
pop
icebp
movsl
mov
daa
mov
cltd
fisttps
repz
add
call
push
pop
rorb
pusha
xchg
ds
or
rolb
les
ret
and
xchg
inc
hlt
shrl
insb
jle
mov
mov
sbb
jae
icebp
mov
stos
imul
dec
and
add
jae
jle
fcompl
pop
push
jmp
jne
lock
or
inc
je
rcr
xchg
inc
cli
sbb
push
jg
add
lods
cmp
push
sbb
inc
das
in
inc
ret
sub
in
pop
lods
orl
mov
test
subl
dec
mov
cwtl
xlat
dec
mov
mov
pop
out
imul
mov
roll
or
fs
mov
in
add
cmpsl
jb
out
bound
xor
js
mov
xor
movsl
addb
call
adc
hlt
stc
outsb
in
sbb
mov
shlb
mov
loope
mov
cmp
mov
xor
in
subb
add
fidivrs
push
shlb
les
stos
xchg
jne
lcall
in
fs
sub
push
testb
push
cwtl
push
or
repz
outsl
jae
inc
xor
jge
xchg
daa
shlb
sub
in
stos
add
cmp
mov
sbb
popf
mov
jp
or
popa
cli
inc
fbstp
addr16
xchg
out
ds
and
aaa
dec
sub
lcall
lea
xor
cltd
xchg
inc
pop
stos
fadds
es
mov
inc
fs
pusha
movsb
js
dec
dec
fmulp
add
fmul
add
icebp
mov
pushf
imul
sub
dec
xchg
aaa
pop
jb
fistl
sub
add
jne
sbb
je
cmp
jno
mov
add
mov
addr16
and
incl
lods
pop
gs
dec
pop
mov
and
mov
ficompl
sti
pop
sarb
jne
movsb
int3
into
movsb
jl
push
bndstx
push
sub
adc
jge
add
lock
cli
test
mov
jmp
adc
mov
mov
push
dec
bnd
sbbb
sbb
in
jg
mov
or
sub
imul
lret
inc
xchg
add
movsb
or
inc
lock
andb
test
inc
jae
lods
sbb
pop
cmp
sbb
push
out
dec
inc
movsb
inc
call
shrl
add
fwait
sbb
dec
andl
stos
add
jecxz
ret
dec
lcall
dec
cmp
xchg
and
iret
lods
jp
jmp
repz
into
xchg
adc
xor
or
notb
dec
xor
das
and
lea
mov
add
stos
test
xchg
pop
cltd
jae
pop
xchg
sbbb
ficoms
mov
insb
inc
or
lods
jecxz
lret
roll
mov
pop
dec
and
scas
jl
daa
aam
mov
mov
xchg
fs
or
and
sub
aas
jmp
pop
jl
dec
sbb
outsb
mov
cmpb
and
mov
mov
sbb
mov
enter
add
push
ret
mov
scas
ret
sarl
shl
add
pop
xchg
daa
sbb
jl
jb
cmp
xor
or
sub
out
xor
mov
pusha
mov
cs
sbb
mov
push
cmp
jle
hlt
push
jns
addr16
sarl
je
lret
add
push
hlt
rorb
outsb
imul
out
cwtl
and
nop
loopne
add
mov
sbb
insb
xchg
lret
sbb
fwait
add
inc
cmp
cmp
das
xlat
stc
inc
jle
into
ss
pop
ljmp
inc
mov
sbb
fildll
les
jg
dec
aam
and
xchg
xchg
fstpt
or
cmp
pop
lret
push
add
or
sti
repz
pop
xchg
and
sbb
push
and
dec
dec
adc
ljmp
mov
add
jnp
jo
mov
adc
loop
inc
cmp
inc
notb
add
iret
rclb
not
test
cmp
jbe
xchg
ret
sbb
jo
adc
sub
push
add
or
insb
andb
add
cmp
adc
ret
xor
dec
jo
insb
xchg
adc
cmp
in
insb
sbb
sub
or
xchg
jge
mov
add
out
sahf
pushf
add
ffreep
mov
pop
in
mov
push
adc
out
aas
inc
xchg
sub
repz
jmp
enter
icebp
popf
or
lods
andl
sbbl
subb
or
gs
je
mov
xchg
in
xchg
pop
popa
fmuls
xchg
push
cld
incb
in
or
sub
aam
mov
shlb
hlt
cmp
and
sbb
test
imull
pop
aas
pusha
and
push
push
lret
or
jle
jae
fs
cmp
lods
fnstsw
sti
sub
rcll
dec
push
daa
test
adc
ret
popf
into
jo
popa
jb
pop
pop
xchg
fadds
mov
mov
shlb
imul
notb
fmuls
xor
popa
mov
mov
push
fldcw
leave
fwait
scas
lret
data16
andl
clc
in
sbb
add
sub
push
cmp
out
and
xchg
push
outsl
mov
pop
and
mov
rsqrtps
xor
ja
mov
xchg
dec
push
mov
movsb
jle
mov
sub
xchg
scas
arpl
jo
ljmp
inc
mov
jge
pop
pop
pop
mov
js
ss
js
lods
aas
fbstp
daa
mov
cli
aas
ds
xor
ret
insl
aas
sub
test
js
stos
dec
rol
add
add
cwtl
dec
roll
or
ds
fimull
cmp
in
mov
orb
inc
aad
sub
pop
mov
outsb
push
jg
stc
shrb
mov
bound
mov
or
jle
in
add
outsl
cli
aam
fsubl
xchg
xchg
loope
xchg
inc
outsl
or
dec
jmp
int
jo
jnp
shll
orb
shrl
inc
mov
seta
arpl
and
daa
js
adc
lahf
ljmp
or
push
stc
out
negb
mov
shlb
mov
or
in
jp
sub
mov
xor
lret
pop
xchg
and
sbb
or
add
dec
notb
inc
or
int
int
xchg
icebp
testb
xor
add
jne
ljmp
and
dec
xchg
dec
stos
or
ds
jae
mov
xor
les
pop
addr16
inc
iret
or
in
pop
mov
daa
sbb
inc
into
mov
mov
jae
je
inc
aam
jl
adc
mov
or
icebp
lds
lock
fidivrl
test
cmp
mov
arpl
lods
shrb
mov
sub
stc
arpl
cmpsl
addr16
aaa
mov
mov
mov
sbb
xor
add
xchg
mov
je
rcr
xor
pop
and
or
mov
dec
stc
sub
aad
xchg
divb
jp
mov
fists
or
push
icebp
jno
stos
push
cmpsb
enter
pushf
cmp
mov
mov
xchg
sahf
push
aaa
add
cmp
imul
mov
scas
pop
jg
mov
sbb
push
outsb
insb
sub
cmp
into
push
test
and
addr16
jmp
adcb
add
ljmp
pop
or
cmp
inc
xchg
xchg
xchg
gs
and
fstpl
daa
mov
adc
mov
and
mov
mov
inc
or
into
cmp
sbb
mov
xor
and
andl
jmp
and
repz
pop
push
fdivrl
xchg
leave
fsubl
add
cmp
mul
pusha
int3
ljmp
push
cwtl
fcompl
lods
dec
sbb
mov
aaa
cmp
fnsave
and
dec
mov
out
cmp
xchg
mov
dec
loope
inc
jecxz
xchg
sub
add
cmpsl
fnstcw
ja
or
int3
test
gs
leave
sbb
cltd
stos
pop
test
jnp
adc
dec
aad
push
pop
pushf
push
ret
cltd
aas
inc
cmc
jl
adc
jno
imul
or
stos
in
jne
xlat
bnd
jge
outsb
dec
nop
fcoms
jno
cmp
cmc
shrl
dec
stos
enter
sti
adc
xchg
fildl
loop
mov
cmp
pop
mov
into
cmpsl
jle
xchg
mov
in
fdivs
and
dec
mov
aaa
sahf
ss
lahf
call
mov
movsb
lret
push
mov
test
lds
stos
loop
and
jecxz
sub
cmp
pop
pop
cmp
test
in
into
xchg
or
aaa
and
mov
fisttpll
push
cmp
imul
push
lds
mov
jmp
sub
test
les
scas
repz
and
ret
mov
popa
and
popf
rcrl
movsb
sar
andb
mov
xor
and
pop
push
repz
xor
cli
push
rcrl
sar
push
pushf
jb
addl
inc
add
fists
jae
test
xchg
xor
jne
scas
xchg
mov
cwtl
rclb
xchg
scas
push
cmp
inc
xor
inc
add
sbb
cmp
ret
mov
sub
int
push
addr16
loope
das
mov
lahf
pop
cmpsb
xor
out
push
lcall
dec
repz
xchg
xchg
out
call
push
jo
xchg
sti
stos
hlt
jg
xchg
push
gs
push
dec
xchg
push
out
scas
ds
cli
call
mov
xor
aam
aam
stos
cmc
lret
jge
cmp
nop
add
and
xlat
fidivs
add
es
xlat
mulb
inc
sbb
add
pop
sbb
sbb
xor
scas
mov
add
movsb
imull
pushf
cmp
or
lock
insb
pop
test
ret
pop
cmp
aas
dec
icebp
in
sbb
add
mov
mov
imul
xchg
inc
out
fwait
dec
stos
and
jg
ror
out
out
mov
test
sbb
loope
mov
in
add
popa
and
and
xchg
mov
fistps
pop
out
ret
cmp
jl
inc
push
pop
fists
cmp
cmp
loope
adc
jns
add
in
add
dec
loopne
into
pop
pop
jecxz
lret
pop
addr16
pop
notl
sub
pop
push
nop
ljmp
mov
xchg
xchg
mov
shrb
dec
fldenv
mov
xor
aam
cmpsb
xor
xor
out
jae
lods
cmpsl
dec
mov
mov
mov
nop
dec
test
pop
bound
pop
dec
inc
mov
lock
loope
pushf
jb
scas
divl
push
mov
jge
pop
dec
loop
sar
pusha
sbb
faddp
int
jp
sub
lods
dec
imul
rcll
mov
xlat
decl
iret
loopne
xchg
xor
inc
cmpsl
es
loop
mov
inc
inc
js
xor
stos
cmpsb
push
sub
mov
cli
xor
int
repz
dec
lods
push
lahf
xor
call
out
sbb
int3
push
mov
inc
imul
popa
or
out
dec
jns
and
popf
dec
fstps
xchg
imul
push
cltd
aas
lea
loope
pop
in
shll
mov
shl
fmull
aam
inc
ret
out
inc
cwtl
repnz
dec
sub
pop
je
fbld
icebp
iret
repz
mov
shlb
mov
mov
jmp
mov
and
hlt
cltd
lret
sub
nop
stc
sbb
mov
inc
popf
mov
testb
aas
jl
in
cmpl
imul
jg
mov
iret
rcrl
cmp
pop
jne
xchg
jle
cmp
je
in
and
mov
adc
cmc
sar
pop
jmp
test
popf
jecxz
shlb
dec
call
mov
in
rcr
in
insl
xchg
movsb
aad
les
bound
mov
sub
jnp
lods
pushf
in
sti
shlb
inc
jne
sahf
push
leave
lret
dec
push
add
in
dec
mov
lcall
pushf
daa
andl
and
and
jmp
mov
test
pop
jecxz
push
outsb
pop
mov
rep
loope
nop
jno
or
adc
sub
xor
inc
push
gs
xchg
rclb
scas
hlt
inc
int3
xchg
enter
adc
pushf
pop
add
std
incl
cmpsl
dec
and
fimuls
movsb
dec
out
fcompp
rcl
inc
test
sbb
loopne
sti
pop
into
in
jo
sub
imul
repnz
jg
cs
or
scas
es
aad
and
lds
iret
cmp
pushf
out
sbb
sub
sub
adc
pop
pop
inc
and
xor
pop
sbb
xchg
fdivr
inc
adc
in
jmp
jle
adcb
in
in
dec
ret
imul
adc
mov
mov
cld
mov
adc
dec
test
mov
lods
mov
sahf
xor
xchg
aad
jmp
outsb
je
jb
hlt
sbb
push
push
dec
insb
xchg
icebp
mov
jg
out
xchg
mov
dec
dec
mov
ret
add
out
jne
cmpsl
and
loope
pop
sbb
clc
pop
mov
inc
adc
adc
lret
arpl
xor
lea
or
cs
std
inc
leave
mov
fidivrs
outsb
arpl
fstpl
out
stos
cwtl
add
test
sub
out
or
mov
das
insl
jae
fwait
push
mov
cmpsl
stos
xchg
sbb
cmpsb
call
xor
mov
cmp
sbb
lods
scas
ds
push
sub
loop
mov
dec
mov
es
or
xor
ss
mov
dec
lahf
or
sbbl
mov
xlat
loope
popa
sbb
jecxz
adc
fldenv
and
fldl
fcomp
ds
xor
addr16
out
ret
add
inc
xor
add
loop
into
push
sbb
dec
lods
mov
aam
addl
sbb
outsl
jge
xchg
jns
pop
cmp
out
xor
xor
adc
in
enter
nop
jmp
pop
and
test
gs
cmp
lea
push
sbb
out
stc
pop
mov
movsl
jne
xor
xchg
lds
fildll
fs
sub
shlb
xchg
fs
cltd
bnd
sbb
call
dec
aam
fwait
mov
push
std
jno
inc
cmp
pushf
aas
outsb
rorb
std
or
loop
test
pusha
or
add
adcl
push
add
insl
cwtl
in
cmp
lcall
movsb
aaa
mov
test
mov
dec
cmp
outsb
pop
mov
fmull
jo
xchg
or
cmpsb
mov
push
lcall
sbb
fwait
das
pop
sti
stos
jle
jge
ss
dec
push
mov
sub
imul
adc
ficoms
rcl
pop
dec
pop
xor
fwait
aaa
xchg
pop
or
outsl
std
std
mov
lahf
fs
stos
paddusb
jne
les
rcrb
dec
cmp
jmp
push
xchg
dec
xchg
add
addr16
mov
dec
insb
mov
mov
ljmp
lock
aam
fcmovnbe
and
push
push
les
mov
lret
scas
aas
iret
xchg
cmpsl
fstl
jmp
lret
push
inc
cmp
inc
mov
cmp
push
cmp
inc
cs
dec
jmp
lcall
es
xor
sbb
ja
es
shrl
push
cmp
lea
mov
and
test
mov
push
out
xchg
js
cltd
ret
andb
es
aas
push
mov
aas
cld
test
repz
sub
push
dec
cld
mov
mov
fisttpll
aam
and
sub
xchg
rolb
in
mov
mov
decb
mov
add
mov
push
add
cmp
stos
inc
inc
iret
add
jp
gs
inc
cmpsl
loope
pop
pop
mov
and
or
push
sbb
push
sub
repnz
sub
dec
insb
out
dec
mov
push
adc
lea
mov
sbb
mov
sti
out
xchg
adc
and
push
inc
and
aad
and
add
out
inc
insl
mov
jle
jae
adc
cmp
mov
daa
pop
cmpsb
add
mov
sbb
push
je
lods
jp
jno
repnz
cltd
inc
push
nop
xor
out
xchg
jne
lcall
jmp
call
in
sub
mov
lret
lcall
adc
and
pop
addl
in
imul
xchg
inc
movsl
fbld
cmp
pop
repz
dec
jmp
out
popf
or
mov
inc
out
cld
roll
fwait
push
or
data16
mov
push
add
lret
jl
adc
enter
mov
jle
popf
clc
jl
pop
lcall
pushf
lock
jp
mov
dec
lahf
cld
pop
push
push
mov
dec
mov
push
push
pop
xchg
mov
xor
mov
xor
jmp
xorl
pusha
mov
lods
xchg
fstpl
fstpl
sbb
mov
or
test
mov
push
das
das
cmp
shrl
dec
andl
sbb
idivb
pop
pop
jb
jne
mov
xor
adc
stos
lea
mov
out
xchg
or
cwtl
in
addr16
sti
inc
xchg
mov
xchg
mov
inc
mov
out
xor
xor
fwait
mov
hlt
mov
inc
outsb
mov
pusha
jns
popf
fldl
mov
faddl
stc
inc
out
sub
sbb
in
xor
cmp
and
jns
jmp
fucomip
jg
xchg
pop
and
sub
lock
jno
mov
in
sbb
ds
nop
cmp
repnz
add
je
sub
stos
das
sub
xlat
jg
fnsave
ljmp
lret
mov
mov
and
fstpt
sbb
push
dec
mov
mov
jns
mov
ret
jle
es
xchg
pop
cltd
test
mov
loop
dec
cltd
push
js
or
movsl
mov
sbb
ficoms
test
loopne
and
or
adc
add
shl
movsl
lock
mov
mov
jns
jl
lea
mov
push
out
xor
jae
call
sti
and
data16
dec
in
mov
mov
mov
outsl
out
aas
mov
dec
pop
fistpl
or
std
dec
pop
mov
lahf
jg
outsb
push
or
int
cmp
je
rorl
cmp
pop
lods
leave
lods
mov
cmp
addr16
push
std
xchg
sbb
inc
mov
fldl
xchg
into
pop
test
mov
stos
insb
les
fwait
cmpl
ss
fisttps
lds
jecxz
leave
push
xor
lea
dec
jg
cmc
xchg
xchg
and
shrl
inc
pusha
or
or
or
pop
mov
sti
jmp
add
cli
bound
sub
sbb
js
insl
mov
sub
pop
pushf
insb
inc
mov
fmull
jle
jge
add
sub
out
ljmp
pop
jge
fldl
mov
add
nop
aam
mov
clc
ja
cmpsl
push
and
leave
mov
mov
adc
lahf
push
aad
cmp
cmp
jo
dec
cmp
jo
lods
aas
mov
divb
jnp
xor
mov
xchg
icebp
lock
out
lock
inc
outsl
and
and
push
addr16
data16
or
inc
ret
push
scas
dec
nop
mov
popf
rcrl
cmp
mov
int
pop
push
outsl
or
mov
push
and
cmpsb
cmp
mov
and
xchg
sahf
in
push
frstor
sbb
cmpl
pushf
imul
push
xor
or
push
ds
and
mov
pushf
rcr
fs
push
orb
xchg
sbb
sbb
mov
xor
clc
or
in
push
iret
aaa
mov
and
loopne
mov
enter
adc
andl
inc
jg
or
xor
adc
iret
orl
pop
call
js
sub
orb
lret
cwtl
add
pop
xchg
stos
mov
or
push
popa
xchg
ss
xchg
in
jl
dec
movsb
cmp
sbb
and
lahf
inc
push
ret
loope
sbb
sub
out
mov
mov
push
pop
fimuls
cs
mov
das
inc
sub
movsb
cli
ljmp
push
cmp
adc
fdivrs
jmp
add
scas
pop
push
cmp
xchg
mov
pop
sarb
jbe
das
out
movsl
cwtl
movsb
aas
std
stos
or
ljmp
mov
adc
lcall
or
or
push
push
sub
adc
repnz
rcrl
mov
ljmp
in
mov
and
cmp
adc
aad
push
mov
sbb
movsb
jnp
xor
sbb
dec
xor
pop
enter
jo
xchg
push
ret
push
mov
xor
mov
push
fwait
push
and
fidivl
das
xchg
mov
mov
dec
mov
push
daa
lods
dec
lret
dec
data16
lret
insl
testb
inc
jp
mov
ds
jo
sbb
stos
insl
out
stos
push
adc
push
in
xchg
adc
sbb
inc
lods
cmp
sub
adc
push
inc
dec
lods
lret
cld
and
icebp
dec
jl
sub
and
rcr
push
incl
jnp
out
xor
push
ficoms
imul
mov
sahf
xchg
leave
sub
xchg
call
push
outsl
lcall
mov
push
aaa
xchg
jb
jne
ss
jle
repz
jbe
mov
jo
cmpl
sbbl
bound
mov
insb
xor
out
aas
and
out
or
xchg
cli
loop
nop
cmc
dec
mov
xchg
outsb
push
push
std
sti
pushf
btcl
add
mov
push
push
fldt
scas
jl
jecxz
ret
pop
xchg
outsb
push
mov
pop
lds
cmp
mov
mov
cld
adc
push
test
rcr
push
or
in
mov
xor
xlat
loopne
dec
movsb
adc
nop
adc
mov
adc
add
mulb
lock
jl
ret
cmp
subl
stos
int3
xchg
jmp
sbb
loope
enter
insl
cmpsb
mov
fiadds
repnz
test
fbstp
into
pushw
fldenv
sub
adc
popa
cltd
imul
int3
and
aas
mov
push
sbb
dec
xchg
push
mov
sbb
jb
sbb
sub
fildll
lock
xchg
sub
mov
in
jae
and
mov
insb
ljmp
out
setno
push
pop
out
sbb
jecxz
pop
add
or
mov
stos
rcrb
sub
cli
xchg
out
enter
bound
cmpsb
mov
repnz
ja
test
push
push
lods
or
dec
cmp
jbe
ss
add
popa
lret
jle
sub
add
repz
out
lock
enter
xor
aam
add
je
sub
add
cmp
mov
les
ret
jmp
daa
stos
or
js
addr16
outsb
cmp
lahf
and
nop
jecxz
iret
sub
repnz
stos
push
insl
push
in
inc
cmp
pop
outsb
clc
call
pop
jecxz
inc
xor
push
mov
push
loop
mov
lcall
pop
mov
xor
xorl
jmp
cmp
out
fucomp
xchg
pop
xchg
push
jnp
cmpsl
jnp
pop
aaa
mov
into
cld
jae
vcvtpd2psy
fnsave
sub
mov
in
add
inc
pusha
test
jnp
dec
push
sti
add
in
stos
push
sahf
pop
dec
cmc
adc
dec
and
in
filds
filds
xlat
jb
int3
sahf
cmp
mov
cmpsb
jbe
popa
in
pop
lods
in
dec
xchg
and
jbe
in
scas
outsl
jg
xchg
jmp
in
pop
pop
lahf
testl
sub
imul
shlb
pushf
imul
cmp
mov
rcl
cli
fwait
push
inc
shlb
jle
pusha
sbb
mov
or
cmp
imul
adcl
test
leave
push
xchg
dec
into
push
cmp
push
mov
inc
sub
or
sub
lret
sub
mov
lcall
xchg
insb
lods
lods
push
and
les
adc
sub
add
jle
imul
cmp
push
hlt
sbb
leave
cmp
xchg
push
aam
and
add
test
rorb
call
adc
sahf
and
jnp
or
inc
push
sbb
xor
xchg
xchg
repnz
es
cltd
rcl
lcall
pop
mov
mov
xor
dec
pxor
data16
mov
movsb
rclb
xchg
int3
sarb
and
mov
push
adc
pop
dec
cmpsl
ja
fcompl
icebp
inc
add
and
sub
cs
pop
dec
mov
add
pop
aad
xorl
jb
rcrb
pop
sbb
add
mov
sarb
scas
add
mov
adc
dec
ja
mov
mov
dec
lcall
jge
enter
pop
xor
push
push
jno
sub
sub
mov
clc
sub
scas
jge
icebp
jg
pop
mov
fwait
lret
lret
cmp
xchg
dec
popa
int
cmc
aaa
xchg
jno
roll
out
xchg
test
dec
jbe
sti
push
adc
jb
gs
xchg
jle
loope
enter
xlat
fiadds
add
xchg
adc
repnz
push
dec
addr16
adc
mov
xchg
pop
popa
sub
inc
ja
dec
mov
jae
xchg
jno
dec
inc
mov
xor
sbb
iret
mov
mov
dec
out
mov
mov
xchg
daa
jg
imul
sar
jmp
sti
in
mov
icebp
test
or
inc
mov
mov
icebp
outsl
mov
jge
dec
cli
or
or
or
xor
jge
dec
jmp
xor
add
add
test
test
lods
mov
sub
and
push
clc
ljmp
jno
rcrb
xlat
gs
pusha
imul
or
inc
xchg
mov
int3
add
in
js
out
mov
mov
f2xm1
mov
imulb
sub
enter
repz
icebp
xchg
loope
aas
mov
stc
int
lcall
jne
jae
insl
mov
ret
push
imul
bound
scas
jne
inc
pop
pushf
inc
pop
sub
xor
loope
or
add
inc
mov
jae
pop
sub
aaa
or
rep
sar
and
aas
and
sbb
sub
fwait
les
cmc
js
push
mov
ja
call
daa
insb
jo
adc
iret
cmp
sbb
sbb
lock
data16
xor
sub
sbb
jbe
daa
cld
outsl
xchg
fcomps
aad
mov
sbb
mov
jne
sub
cli
sarb
aad
inc
orb
daa
addr16
cmp
jns
stc
aaa
daa
out
mov
jae
xor
inc
sub
scas
inc
cmp
movsl
xchg
aad
cmpsl
cltd
xor
lret
repz
mov
mov
lods
mov
or
test
inc
push
inc
sub
das
xchg
mov
dec
xor
mov
mov
and
outsl
lock
push
jo
mov
ret
adc
sbb
dec
fistpl
sbb
or
mov
arpl
pop
pop
mov
push
lret
jae
mov
test
aad
lea
lods
leave
fists
loopne
or
cmp
push
lret
pop
mov
out
inc
enter
pop
dec
pop
sub
and
sub
pushf
adc
inc
sbb
daa
enter
mov
jo
stc
cmpsl
fcmovnu
adc
outsb
and
push
or
mov
xor
or
jo
insb
addr16
lahf
pxor
xchg
jae
push
daa
adc
cmc
mov
in
loope
pushf
jns
fcompl
pop
pop
cmp
int
mov
push
stos
cmp
out
or
test
mov
int3
loop
shlb
adc
lret
insb
or
dec
and
inc
imulb
and
sahf
sarl
or
out
pop
jb
pushf
lods
sub
add
add
fisubrs
pop
mov
jge
cmp
adc
mov
repz
mov
icebp
rcrl
pop
shll
movsl
lods
popf
xor
test
cs
negb
push
shrl
or
push
mov
pop
lcall
and
cwtl
sub
cli
xchg
adc
pop
dec
gs
jbe
jbe
pop
xor
cmp
sahf
out
cmp
outsl
loop
ds
mov
iret
inc
jne
stos
xchg
fsubrs
adc
mov
xor
mov
sbb
sbb
stos
cmp
imul
scas
xchg
mov
daa
std
loope
fs
mov
icebp
jb
lret
lcall
icebp
imul
mov
sub
popf
cltd
icebp
jnp
add
pop
jg
and
addb
in
cmpb
push
and
out
adc
fisttpll
pop
sub
cmp
cmpsb
mov
test
jmp
adcl
push
fsubs
or
xchg
push
enter
add
das
popf
jae
jnp
dec
xchg
add
jo
inc
jnp
and
mov
push
lret
stos
or
repnz
arpl
pusha
jl
sub
lret
cmc
lds
fcoms
mov
or
or
jl
mov
fsubrs
add
fs
repz
sbb
jae
pop
push
sub
push
ret
aam
mov
js
sti
jno
aam
mov
dec
inc
dec
xchg
ret
inc
sbb
rcrb
lea
dec
lock
sbbl
ja
xchg
sbb
mov
aam
jb
push
out
ret
test
add
movsb
enter
dec
insl
pop
xor
add
cwtl
outsl
mov
js
fs
popa
adc
movsl
dec
pop
adc
or
jno
xchg
and
popa
mov
imul
sub
in
xchg
ret
movsb
bound
jo
mov
rorl
insb
ds
ficoms
into
imul
js
hlt
fbld
cltd
sbbl
loopne
mov
stos
or
shll
or
mov
fsubp
shlb
insl
cmpsb
sbb
scas
inc
push
fwait
inc
into
outsl
daa
mov
aas
add
hlt
jge
jno
or
test
pop
in
add
jg
xorb
in
adc
cltd
pop
mov
mov
mov
nop
inc
loope
sbb
mov
cmp
sbb
jb
fcoml
adcb
mov
outsl
sbb
dec
or
fstpt
mov
js
xor
sub
pop
sbb
jbe
mov
test
outsl
sbb
push
and
sub
popa
sahf
repnz
xor
mov
mov
fsubs
and
and
or
ljmp
jle
cmp
xor
dec
fimull
pop
jbe
and
cli
mov
adc
pop
test
xor
addb
xchg
or
adcb
pop
add
ss
jmp
testb
daa
sbb
aas
xchg
pop
addl
dec
dec
loope
clc
mov
mov
cltd
mov
bound
pop
daa
repnz
icebp
jp
addr16
fisttpl
dec
outsl
mov
leave
movl
test
jl
pop
or
jmp
pop
lret
xchg
cld
pop
jl
cld
mov
ss
jno
iret
fsubs
or
sti
pushf
sbb
adc
adc
ss
insb
adc
fldcw
aaa
jns
leave
cmp
clc
and
les
loop
jne
sbb
and
dec
jns
xlat
cmp
jg
movsl
out
dec
xchg
cmc
das
mov
insl
out
aam
xchg
das
jo
xchg
push
sbb
lcall
adc
ds
add
sub
push
ficompl
test
mov
adc
push
out
es
push
mov
fnstenv
je
pop
add
repz
test
adc
iret
mov
cmpsb
repnz
mov
inc
mov
mov
rorl
not
das
mov
lret
jecxz
dec
sbb
sbb
add
mov
or
adc
ret
dec
scas
dec
pop
dec
xchg
mov
mov
add
cmpsb
inc
mov
mov
push
jne
gs
adc
into
lea
lcall
mov
dec
or
push
stos
int
jns
mov
jae
cmp
test
scas
jge
sbb
or
inc
in
dec
shrl
scas
mov
inc
fldenv
push
stos
subl
add
fnsave
loop
rcl
dec
inc
int
iret
inc
test
mov
lret
jmp
jecxz
popa
jo
xchg
outsl
in
test
inc
fwait
adc
xchg
push
sti
sub
push
or
movsb
daa
pop
xchg
pop
mov
rcrb
int3
int
inc
xchg
and
sbb
orb
xor
xor
push
icebp
adc
inc
lods
bound
and
and
rcrl
add
push
push
lahf
rcrb
loop
cmpb
sbb
fstps
das
shl
jmp
out
pop
and
push
test
and
xchg
fucomi
xchg
cld
and
lret
adc
pusha
or
pop
test
push
std
or
aas
inc
jle
outsl
into
js
pop
ret
in
jae
xor
and
stos
ffreep
icebp
sub
xchg
sub
mov
fcmovnbe
test
in
adc
scas
adc
adc
inc
jl
jl
in
and
or
lea
cltd
dec
std
or
inc
lahf
lret
bound
enter
add
or
cld
dec
mov
out
into
in
or
test
mov
nop
xchg
sbb
inc
inc
cli
dec
inc
fdivrl
mov
sbb
add
roll
jno
add
ds
js
xorl
pop
jae
js
inc
adc
xchg
in
cmpb
add
lock
pop
xchg
sub
mov
pop
mov
test
sbb
dec
pop
cmp
mov
jnp
lds
hlt
fidivl
inc
imul
sbb
add
in
fldl
les
xchg
push
pop
xor
hlt
test
xorl
dec
lcall
rcrb
cmp
clc
data16
clc
clc
int3
cmp
lcall
xor
xor
inc
icebp
clc
pop
and
lds
sub
cmp
into
pop
pushf
out
jae
push
cmp
dec
xchg
out
fisubs
and
jns
fldt
inc
lret
mov
push
mov
mov
inc
sub
adc
testl
outsl
lcall
repnz
and
mov
es
test
in
loop
outsl
xlat
add
lret
gs
scas
cmp
cmp
or
sbb
push
iret
dec
add
popf
push
inc
rolb
stos
or
pop
jecxz
shll
cmp
mov
mov
in
je
inc
jae
push
insb
pop
lcall
or
xor
fnstcw
mov
test
jns
push
sbb
dec
cmp
in
push
insl
imul
jl
decb
jns
cld
jp
push
lahf
scas
cmp
or
jmpw
int3
dec
setle
imulb
leave
push
xchg
mov
jae
jmp
dec
pop
jl
and
xchg
lds
cli
or
mov
cli
push
xchg
push
pushf
loopne
ret
pop
imul
shll
sbbb
lret
fimuls
int
fwait
mov
cmp
lahf
adc
gs
outsb
and
ret
nop
das
mov
inc
rep
movsb
jae
xchg
dec
mov
xor
gs
add
sbb
xchg
in
stos
fucomi
scas
inc
sub
cmp
mov
out
out
sbb
fisubrl
xchg
xor
in
jl
testb
fldcw
xor
loope
int
add
lods
mov
nop
ret
cs
mov
push
jae
jae
xor
dec
dec
cs
cmp
ljmp
pop
shlb
add
and
mov
and
rorl
pop
push
data16
ja
sub
ret
sbb
xchg
and
in
lock
and
repz
jae
mov
int3
sub
push
dec
adc
xchg
cwtl
sbb
jge
push
aaa
dec
fisttps
jns
loope
adc
or
and
movsl
stos
repz
iret
shr
stos
fcomi
or
jo
push
adcl
sbb
jmp
mov
lea
in
mov
cmpsl
sti
pop
loop
mov
dec
cmp
out
sbb
insl
cmp
jl
jb
fcomp
pop
out
sar
test
cmp
add
and
call
out
dec
mov
mov
xor
pushf
lock
sbb
jmp
aas
aaa
ja
stos
pop
cmp
pop
decb
sbb
loop
sbb
jno
imul
mov
pop
jb
shl
jle
mov
ljmp
orb
stos
sub
mov
inc
popa
or
xor
ret
outsl
and
dec
into
movsb
mov
leave
cmp
test
cwtl
ficomps
or
jbe
icebp
in
dec
jmp
outsb
popa
repnz
dec
cmp
fmull
dec
cwtl
cmpsb
mov
push
lret
push
lods
popf
and
mov
aaa
dec
stos
divb
subl
lea
xchg
mov
add
ds
daa
pop
lds
insb
or
es
test
movsl
xchg
sbb
sbb
xchg
mov
or
subb
shrb
mov
adc
clc
ret
add
lods
jp
pop
cmpsb
and
call
inc
mov
je
clc
xor
and
scas
fadd
lret
pop
mov
out
adc
sbb
data16
sub
mov
xchg
sub
add
cli
in
or
sbb
in
pusha
sti
lcall
sbb
repnz
dec
pop
stc
pop
xchg
push
dec
mov
aam
ret
test
cld
in
xor
in
jmp
movsb
jp
aas
xchg
jne
stos
push
xor
dec
outsl
xchg
xchg
fldcw
sti
add
pop
ret
jbe
inc
test
lea
pop
cmpsl
ja
aam
mov
jns
sbbl
sahf
xchg
dec
push
and
aas
xchg
movsl
js
jbe
and
movsb
cmc
adc
xchg
push
jge
iret
testl
jge
mov
lahf
sti
xchg
and
sub
or
lods
repz
dec
arpl
lcall
cmp
xor
jmp
jecxz
movsl
rcll
leave
mov
cmp
xchg
int3
inc
shrl
inc
xlat
jb
inc
cmp
test
popf
stos
int
xor
aas
lret
mov
mov
mov
xor
cmpsl
arpl
fwait
xor
lds
mov
aas
jp
sbb
inc
mov
xor
ljmp
out
jge
call
int3
stc
mov
fs
iret
dec
lods
jns
adc
pop
mov
sbb
ret
mov
into
scas
jne
out
sahf
mov
mov
mov
mov
jp
mov
cli
faddl
pusha
mov
out
sbb
bswap
shll
mov
and
cwtl
jge
sahf
repz
scas
xor
mov
pop
xor
out
mov
xchg
ss
repnz
ret
add
stos
sub
xchg
mov
push
inc
push
shrl
loope
inc
lret
xor
outsb
xchg
aam
mov
mov
or
jo
or
repnz
shr
fxch
mov
repz
pop
add
scas
sahf
call
and
and
out
out
sbb
inc
addr16
data16
out
inc
dec
and
rcl
push
pop
repz
mov
dec
lock
xchg
adc
inc
push
lods
out
flds
sbb
push
pop
inc
mov
sub
lods
adc
push
repnz
mov
dec
mov
imul
cltd
es
stos
push
xor
and
aam
imul
shlb
cmp
inc
cwtl
out
les
filds
push
xchg
cmc
inc
lods
mov
iret
sbbl
push
mov
sub
jne
lock
cmp
stos
ds
jae
push
lds
int3
aaa
ljmp
lock
aaa
inc
in
mov
mov
out
adc
fistps
pop
icebp
add
push
mov
cmp
xchg
arpl
push
pushf
push
jmp
jmp
add
xchg
xchg
xchg
jne
es
sbb
fsubrl
jmp
into
pop
adc
nopl
push
xor
add
lahf
inc
jno
inc
fstpt
mov
xchg
leave
or
lret
movsb
arpl
mov
cmpsl
mov
out
fnstcw
popa
jne
inc
push
arpl
mov
mov
mov
addr16
lock
mov
mov
adc
cs
mov
sahf
adc
shlb
cmpsb
movq
inc
xor
into
mov
inc
jmp
mov
stos
mov
loopne
xor
pop
push
insl
outsb
out
in
dec
sub
pop
xchg
fimull
mov
shrb
lea
lock
movsb
cmp
pusha
lret
pop
dec
push
imul
dec
sahf
into
add
popl
cmpsb
scas
sbb
add
cmpl
adc
test
mov
jo
pusha
mov
sarl
adc
xchg
jnp
in
pop
insb
or
or
cmp
mov
fcmovnu
add
call
arpl
mov
or
or
cmp
repnz
test
js
adc
jg
stos
inc
xorb
xor
mov
adc
inc
adc
test
es
mov
adc
loopne
and
fmull
popf
cs
and
sub
mov
push
aas
outsl
lock
adc
cltd
xchg
call
fldenv
cmp
sub
ficomps
jge
or
in
sub
mov
push
mov
push
sti
sub
dec
sbb
cwtl
add
cmp
in
sti
fdivrl
sbb
pop
int
lret
inc
lods
jmp
inc
cmpsb
add
ljmp
mov
mov
adc
mov
data16
call
inc
pop
cmp
jl
negl
fisttpl
outsl
or
cmp
add
aam
mov
sar
inc
stc
popf
popf
mov
mov
aad
mov
lea
ja
and
lret
sub
test
out
push
les
sbb
pop
and
mov
js
cmpsb
add
cmp
mov
bound
push
jne
aaa
repnz
movsb
dec
lret
sub
rol
inc
xor
daa
cltd
andnps
xchg
inc
jbe
fldcw
dec
gs
mulb
in
pop
jg
mov
sub
mul
ds
jmp
sarl
test
sub
dec
sub
sahf
mov
jl
cmp
or
std
jnp
and
push
into
push
mov
rdtsc
imul
out
jbe
ror
add
sbb
sub
fisubl
sub
and
in
jne
outsb
and
push
sahf
repz
mov
add
imul
adc
andb
xchg
outsl
add
cmp
mov
xor
mov
cmpsl
mov
sbb
scas
sub
std
idivl
pop
out
test
and
mov
pop
clc
inc
je
mov
out
lret
pop
in
scas
test
and
movntq
sub
mov
cmp
sbb
sub
and
or
rcll
push
in
and
movsb
je
pushf
xchg
ret
int3
inc
gs
jmp
xor
sub
xchg
sbb
pshufw
jge
cli
sub
xor
movsl
lret
int3
jmp
fimull
xchg
mov
pop
adc
sbb
mov
push
sub
and
xchg
into
mov
das
fs
subl
xlat
int
js
xchg
push
icebp
popf
mov
inc
cld
mov
clc
jmp
mov
jb
stos
or
bound
mov
and
outsl
fildll
lods
dec
mov
stos
cmp
lret
pop
sbb
movsl
inc
and
je
push
jmp
dec
imul
jg
lret
mov
adc
sti
dec
mov
add
pusha
xchg
sti
add
jbe
xor
flds
popa
in
mov
lret
std
push
mov
in
outsl
jno
pop
jno
mov
adc
lcall
jo
out
das
add
jmp
mov
frstor
testl
neg
test
je
mov
jl
ss
push
jnp
add
lahf
adc
in
fisttpll
out
mov
out
stos
xchg
push
sbb
add
int
bound
dec
fwait
push
and
adc
cli
mov
pop
std
or
cli
cmpsl
pop
lods
jecxz
jge
and
xlat
aaa
sahf
adc
jo
jnp
xchg
out
mov
out
imul
sub
jnp
pop
cmpsb
outsb
pop
movsb
ret
enter
jg
pop
pop
mov
inc
and
or
lcall
pop
addr16
gs
sbb
sbb
mov
jg
push
add
sbb
outsb
cmp
push
pop
add
inc
jg
testl
outsl
xchg
inc
arpl
inc
test
aaa
cmc
insl
ds
and
mov
and
xchg
sub
popf
and
pop
xor
push
or
outsb
sub
sub
adc
push
stos
sub
inc
pop
sub
fldcw
into
gs
lods
enter
cmpsb
inc
dec
mov
insl
and
pop
lcall
imul
adcl
inc
loopne
and
adc
xor
lods
dec
cltd
or
push
fdivrl
jno
test
js
xchg
negl
out
sbb
ret
and
jbe
imul
outsb
mov
cmp
mov
lcall
arpl
sti
test
mov
fwait
pop
insb
pop
lea
inc
xchg
scas
into
shrb
fs
push
bound
xor
cmp
pop
xchg
les
inc
sbb
fbstp
jae
mov
not
dec
mov
roll
int
jle
adc
xchg
xchg
inc
cmp
icebp
jmp
nop
jl
out
es
jb
xchg
subb
das
int
jp
mulb
or
jno
xchg
jge
lock
adc
jmp
mov
fcmovnu
mov
mov
inc
dec
pusha
xchg
mov
ret
pop
mov
add
sub
fwait
loope
and
testb
out
adc
scas
cmp
dec
xor
rcl
stc
aas
pop
push
shll
jne
in
hlt
pop
mov
test
pop
inc
inc
and
test
push
out
inc
divl
jp
in
sub
lods
xor
sbb
pop
sub
sbb
imul
inc
ret
jae
lods
adc
aas
push
push
jecxz
cmpsl
mov
int
push
ret
gs
dec
clc
repz
das
jecxz
or
lahf
bnd
xor
loop
fistps
jmp
iret
mov
jg
gs
cmc
mov
lcall
test
into
sarl
add
lds
outsb
les
add
sub
jae
rcrl
xor
and
sahf
cmpsl
xor
adc
lahf
adc
xchg
rorl
aas
icebp
sub
sub
pop
xor
test
cli
mov
fidivs
mov
shl
lock
dec
shl
loop
adc
jg
in
jle
pop
mov
and
add
adc
pusha
lock
inc
out
inc
repnz
fdivrs
mov
mov
ja
adc
or
or
jbe
jno
cmpsl
jecxz
adc
fdivrs
push
jno
sarb
imulb
pop
daa
cmp
dec
and
adc
add
inc
xor
dec
decb
sti
xchg
and
in
iret
pop
movsl
lfs
cmpl
add
cmc
out
int3
jmp
fs
inc
outsb
jg
js
imul
scas
cmp
gs
bound
repz
and
push
popf
lahf
fwait
and
loop
nop
incl
ljmp
xor
sub
ret
aas
adc
add
into
xor
outsl
and
lods
pop
mov
rolb
lea
mov
in
adc
negb
sbb
mov
jb
cmp
add
mov
lret
sahf
cmp
dec
movsl
test
outsb
popa
dec
jmp
scas
pop
xlat
aaa
out
sbb
sub
push
iret
lods
push
ret
sub
cld
pop
stc
xor
xor
push
jmp
scas
ret
ficoms
popf
enter
mov
shr
or
jg
jg
subb
push
dec
icebp
mov
dec
push
cwtl
and
xlat
adc
push
xchg
in
pushf
inc
cmpsl
adcb
mov
jno
sub
push
fidivs
lahf
xor
push
sbb
and
sbb
cmpb
pop
repnz
sbb
cmc
out
push
insb
lods
pop
dec
cmpsl
clc
push
sub
fsubr
mov
cwtl
int3
jp
jnp
inc
fiaddl
daa
pop
pop
aad
inc
out
inc
xchg
adc
pop
scas
sub
push
das
ficoms
repnz
stos
les
test
pop
frstor
in
adc
cmp
inc
iret
push
push
loop
mov
fisttpl
sbbl
jmp
xchg
popa
insl
lret
xor
lods
aam
sub
sub
inc
lds
repz
fnstcw
mov
cmpsl
cmp
and
mov
jbe
mov
aas
pop
shll
hlt
inc
cld
xor
and
nop
aam
and
in
xchg
mov
ds
and
push
dec
aaa
andb
xchg
sahf
notl
lcall
cmp
push
pop
pop
jb
movsl
out
dec
push
shr
mov
test
xorl
loopne
or
jge
sahf
jnp
data16
repz
imul
pop
inc
test
repz
fstpl
leave
rorl
push
out
lea
in
mov
aad
adc
xchg
xor
out
or
pop
xchg
popa
rcll
xor
mov
sub
cs
sub
movsl
add
pop
in
mov
enter
aam
or
jae
stos
mov
xor
xchg
mov
cmovs
gs
loope
je
popa
jno
das
or
cmc
push
jp
imull
das
shrb
test
incl
add
loopne
sub
out
scas
aam
sub
iret
pop
mov
push
popf
sub
sbb
mov
or
leave
dec
pop
imul
sbb
movsl
or
sbb
inc
arpl
sbb
loop
xchg
add
cmp
je
in
fisubrs
adc
xchg
out
mov
push
lret
lahf
mov
pop
imul
push
pop
adc
jge
pusha
fimuls
push
test
pop
xor
jae
repnz
lds
adc
cwtl
scas
outsb
push
clc
popl
iret
stos
cs
ljmp
push
fildl
inc
and
mov
xchg
cld
cmp
cmpsl
sysret
test
test
xlat
aam
xlat
int
pop
jge
xchg
cmc
xor
psrlw
push
in
sub
arpl
xor
pop
inc
adc
cmpsl
push
in
stos
or
or
mov
push
inc
add
mov
sbb
push
push
mov
adc
std
je
popa
mov
jecxz
push
xor
sbb
mov
fwait
push
stos
aam
jl
adc
aam
mov
cwtl
cmp
or
clc
and
fldenv
mov
cld
cmp
mov
cld
xchg
repz
jo
jo
lods
pop
test
cmpsb
push
icebp
sbb
or
out
and
popf
sahf
push
lret
popa
mov
and
fs
out
cli
ds
pop
jae
push
popf
push
mov
mov
jmp
mov
mov
sub
data16
pop
int
adc
xchg
cmp
sbb
or
dec
xchg
lock
add
jmp
enter
fldpi
mov
xchg
cmpsl
inc
icebp
sub
mov
lcall
sahf
dec
sbb
faddl
repnz
loop
loopne
pop
dec
mov
pop
cmp
pop
add
xchg
insb
inc
dec
arpl
sahf
push
stos
data16
bound
repnz
jecxz
outsl
imul
rcrb
lods
fidivs
shll
pushf
or
mov
fldl
loopne
mov
add
lret
lret
lahf
jo
or
jnp
dec
mov
push
movsb
xchg
xor
fnstcw
loop
adcl
xchg
divl
ds
xchg
mov
inc
sub
mov
cmp
push
outsb
pop
outsb
fimuls
xchg
or
cli
push
shl
adc
ljmp
cmp
add
add
cmp
sbb
iret
pop
cmp
cmp
cmp
scas
adc
std
or
sbb
add
aam
mov
cwtl
aaa
inc
xchg
in
mov
add
and
shl
ds
stos
adc
and
aas
aad
filds
pop
test
adcb
bound
lock
push
les
lcall
cmp
repnz
shrl
ja
test
push
sahf
push
cs
push
mov
adc
insb
inc
fistpl
adc
cs
cmp
popa
xchg
nop
int3
or
add
int
insl
pop
push
jl
adc
rcl
jo
pushf
and
and
mov
bound
jmp
out
int3
test
jne
xchg
repnz
mov
xchg
inc
inc
sbb
mov
addr16
dec
jmp
sub
jne
push
sub
lods
test
stos
in
lods
icebp
scas
xorl
xchg
add
mov
add
ljmp
lock
adc
inc
iret
sbb
and
inc
out
nop
jmp
icebp
mov
and
jns
inc
jmp
sbb
pop
add
lock
loop
xlat
ljmp
enter
pop
mov
test
mov
jecxz
jp
mov
jo
cmp
ds
or
mov
daa
cwtl
inc
push
hlt
sub
loopne
pusha
add
mov
mov
xchg
lret
aad
jne
idivl
xchg
ret
sbb
add
and
aad
xchg
rorl
mov
lret
cmpsl
insl
sub
clc
cmpsl
psrlq
int3
cld
loop
movl
push
sbb
movsl
add
cli
decb
cmp
ficoms
add
outsl
and
lcall
mov
add
push
mov
fs
xchg
dec
testb
popa
mov
nop
cs
sbb
add
cwtl
sub
mulps
mov
mov
bnd
or
mov
mov
pop
test
mov
movsb
loop
or
mov
sub
dec
and
insb
and
in
lods
cwtl
in
jl
adc
stos
pop
cmp
fmul
aaa
mov
push
or
adc
pop
movsb
xchg
push
arpl
jnp
in
outsb
repz
dec
and
mov
jl
pop
pop
outsb
mov
fcmovb
iret
xchg
push
mov
aam
shll
aam
cmp
loop
cmp
mov
pop
nop
clc
inc
das
push
pop
add
xor
xchg
lret
loope
cld
fdivr
aam
hlt
notl
cmp
push
int
fldl
sbb
sub
movsb
adc
mov
imul
data16
and
push
sub
in
inc
out
mov
mov
pop
xchg
mov
mov
filds
cmpsb
shrl
xor
es
lcall
add
xchg
ljmp
jo
sbb
lret
shrl
jle
inc
dec
lods
aad
sub
in
push
ljmp
enter
cld
xchg
jmpw
iret
jbe
aad
sub
jg
mov
lret
and
sub
fidivl
jp
or
jns
sti
pop
enter
inc
std
leave
push
divb
mov
sarb
pushfw
mov
xor
pop
lock
mov
mov
pushf
push
mov
std
iret
adc
loope
aas
push
pushf
xor
xchg
jg
sub
mov
test
mov
pop
sub
or
stos
pushf
aas
rolb
mov
dec
test
and
roll
subl
aaa
jmp
jl
repz
test
imul
fidivrs
callw
mov
enter
mov
add
jb,pn
push
add
insl
sarl
gs
jmp
mov
lret
lds
dec
sbb
dec
inc
idivb
rcrl
sbb
xchg
mov
push
pushf
les
cli
pop
inc
out
pmulhuw
xchg
mov
xchg
arpl
push
shll
divb
cli
adc
dec
push
pop
clc
addr16
push
pop
pushf
jecxz
mov
jb
mov
fstp
ficoml
mov
mov
push
xlat
mov
leave
or
add
jbe
xchg
pop
pop
and
lods
xor
cwtl
mov
mov
push
sub
xor
push
mov
and
xor
lret
leave
jp
jge
mov
mov
cmp
dec
cmp
mov
cmp
outsb
or
mov
push
pushf
clc
jae
std
xor
out
test
sbb
push
cwtl
push
push
cwtl
adc
addr16
mov
push
push
xlat
arpl
call
pusha
sub
loope
rcll
lcall
add
scas
dec
movsl
and
test
gs
or
xchg
mov
mov
xchg
shrb
xchg
in
scas
sbb
sbb
mov
daa
jg
adc
cmc
addr16
sahf
jb
leave
out
sub
push
mov
call
movsl
add
inc
and
mov
sub
inc
outsl
lcall
xchg
pop
fdivl
cmp
add
cmp
repz
adc
mov
mov
push
in
movsl
mull
mov
dec
mov
xlat
in
xchg
mov
mov
jmp
push
adc
fs
loopne
fstl
pop
cs
iret
ss
push
int3
mov
inc
dec
ljmp
jns
out
jo
sbb
xor
dec
nop
les
cli
jge
pop
xor
or
adc
mov
in
rclb
inc
sar
jmp
cmc
jecxz
jns
inc
shl
mov
add
mov
pusha
clc
mov
cmpsb
add
in
lea
cs
or
jno
jecxz
xor
ja
mov
loopne
or
inc
lret
imul
xchg
and
pop
incb
pop
loope
in
cwtl
out
cmp
into
inc
cmpsl
rorb
mov
icebp
mov
mov
xchg
mov
lret
mov
mov
push
pushf
mov
hlt
inc
xchg
icebp
jae
fs
push
sbb
jbe
in
mov
inc
xor
or
in
mov
sbb
fs
pushl
xor
sub
mov
push
lcall
mov
pop
xchg
adc
sub
pop
and
rorb
cmp
cld
inc
into
clc
ret
cmc
xchg
push
scas
hlt
addl
lahf
push
push
stos
push
mov
lock
sub
push
ret
sbb
fwait
test
dec
cmpsb
dec
mov
mov
lock
push
jle
and
sbb
dec
add
clc
imul
repz
inc
aad
repnz
xchg
push
pop
or
loop
test
in
mov
cli
or
dec
ljmp
inc
jl
push
icebp
sub
push
xor
jle
push
and
add
arpl
dec
divb
mov
rcr
push
xor
pop
psrad
or
into
addr16
shrl
mov
and
hlt
fcoms
int3
xchg
sub
out
das
ret
movsb
stc
js
cltd
and
iret
mov
lret
pop
mov
push
xchg
cli
fnstsw
aam
mov
ss
jg
jno
out
push
push
enter
jno
inc
je
xchg
aaa
in
lret
pop
inc
add
push
mov
loop
into
subb
inc
cli
mov
clc
cmp
xchg
xor
outsl
addr16
fdivl
cmpb
mov
or
mov
rcrl
sub
mov
xchg
clc
inc
jmp
xor
xchg
fs
mov
or
or
adc
xchg
xor
dec
push
outsb
push
mov
xchg
outsb
scas
data16
xor
sahf
sbb
ret
push
xchg
imull
pop
ret
lods
jecxz
cmc
mov
xchg
cmpsb
fmull
push
aad
xor
call
mov
jno
or
int3
int
add
fucomp
insl
jo
jbe
cmc
fldenv
loopne
xor
rorl
iret
and
jo
lcall
dec
jb
sub
xchg
xchg
pop
xchg
mov
outsl
aaa
pop
inc
push
cs
add
jno
rcll
mov
into
add
mull
push
in
in
fbld
fcompl
insb
in
outsb
sbb
ljmp
aad
cltd
cmc
push
fcmovne
pop
stc
daa
and
xor
je
or
mov
adc
pop
jle
inc
lahf
ljmp
divl
pop
xor
std
ret
or
add
xchg
add
sbb
lret
test
cmpsb
xchg
mov
push
dec
jmp
cmpsb
flds
in
pop
stos
int
inc
popf
jb
loope
push
add
ds
jae
mull
dec
jns
mov
aad
shlb
jo
fwait
mov
out
adc
push
mov
adc
filds
inc
push
arpl
mov
test
out
mov
sub
cmp
cld
repnz
js
pop
test
xchg
test
xchg
push
cmpsl
push
sti
cwtl
or
add
jle
das
or
push
test
xchg
and
and
sbb
arpl
gs
inc
inc
ds
mov
test
push
es
sub
sbb
dec
fdiv
adcb
scas
cmp
fcompl
dec
imul
arpl
lods
nop
dec
in
test
loope
pusha
in
cmpsb
or
dec
and
cmp
inc
fnstsw
sbb
jmp
aam
mov
lret
add
imul
int3
outsl
les
push
loope
popf
enter
fs
addr16
sbb
xchg
inc
es
add
aam
xor
sbb
xor
sub
xlat
mov
xor
loopne
sarl
cmpsb
push
add
aam
and
push
inc
inc
data16
mov
mov
xor
ss
add
in
aam
hlt
jnp
stos
and
push
adc
stos
lods
repnz
push
out
push
movsl
mov
sbb
pop
xchg
je
cmpsb
ja
add
ljmp
shrb
xor
and
adc
das
movsl
xor
xor
in
sbb
std
jmp
mov
adc
jecxz
sub
aas
sbb
gs
mov
xor
jecxz
outsl
cmp
leave
pop
into
enter
push
rolb
mov
xor
cltd
jno
pop
or
pop
js
pop
jnp
lcall
cltd
in
lods
adc
or
jns
xchg
loop
aad
ret
cmc
cmp
aad
ret
dec
popf
sub
mov
sub
jne
pusha
ds
mov
lock
or
rolb
and
in
aad
in
fcmovb
dec
push
insb
rolb
out
mov
pop
popa
xchg
rcrl
or
jnp
daa
cmp
nop
mov
iret
xchg
cmp
lods
nop
sti
leave
mov
inc
lock
pusha
out
adc
push
dec
rcrl
lock
and
pop
mov
testb
stos
call
int
divl
pusha
jg
leave
sub
push
xchg
dec
dec
out
adc
loopne
ds
dec
decl
icebp
mov
xlat
rclb
push
out
xchg
test
jle
adc
ljmp
mov
shlb
add
mov
cmp
cmpsl
or
sbb
xor
stc
repnz
addr16
js
js
cmpsl
pop
push
or
jle
add
gs
lock
add
pop
loop
daa
xor
pop
jbe
fbstp
mov
hlt
push
xchg
or
and
mov
popf
inc
push
sub
fucomp
fistl
dec
cwtl
dec
push
imul
fstp
adc
pop
cmpsb
hlt
and
je
cld
mov
sub
and
sbb
jae
pop
lock
stc
fs
in
push
in
pop
mov
insb
das
push
movsb
jo
subl
mov
pop
push
stos
repnz
mov
nop
lock
mov
ror
dec
mov
push
jg
cltd
xchg
nop
pop
sub
mov
jl
pushf
inc
xor
repnz
je
xchg
cmp
mov
mov
adc
pop
call
out
into
xchg
inc
mov
dec
call
das
pop
cmpsl
pop
dec
pushl
cltd
aaa
cld
xchg
pop
pop
test
imul
les
repnz
lods
cmp
repz
cs
mov
xchg
repnz
jns
and
fsubs
sub
cmp
mov
pop
out
mov
mov
mov
cwtl
inc
sbb
xchg
jo
sbb
scas
jne
rcrb
and
jo
call
repnz
sub
push
add
dec
loopne
testl
add
and
add
cli
enter
xchg
inc
or
push
mov
cli
aaa
jp
adc
push
mov
push
or
push
insl
sahf
jae
jb
fmull
xchg
test
in
loop
push
xchg
outsl
das
dec
adc
jmp
adc
sbb
inc
xor
out
jmp
loope
xor
push
loop
push
sbbl
smsw
mov
pop
leave
sub
enter
adc
jecxz
lcall
jmp
push
nop
ret
xchg
in
out
lods
pop
aad
ret
jg
jle
loope
pop
mov
call
or
mov
dec
rcl
loop
mov
cmp
sbb
inc
test
fidivl
sbb
adc
stos
clc
repnz
jbe
cmpsb
pop
push
jle
ror
mov
inc
popa
in
xor
lret
mov
ret
sub
mov
std
pushf
xor
push
ja
lods
arpl
movq
repnz
pushf
cmp
jae
ret
js
and
enter
pop
ror
rcll
mov
adc
ror
dec
dec
inc
lahf
sbb
xor
dec
jnp
stos
xchg
push
or
push
or
js
ljmp
call
lcall
xchg
push
add
push
fists
push
cltd
or
pop
cmp
call
sub
dec
sbb
add
mov
add
push
sub
dec
mov
adc
pop
das
pop
cmpsl
add
scas
inc
jno
xor
lret
sbb
push
sub
push
addr16
cmp
aaa
fldz
icebp
in
inc
gs
movsb
mov
and
or
mov
inc
fs
out
cmc
cmpsb
js
jb
subb
sub
ss
push
call
mov
xor
cmp
inc
int3
lahf
je
pop
adc
stos
push
mov
push
adc
jecxz
jb
push
bound
test
and
jmp
movsl
sub
mov
lods
unpcklps
push
aas
cmp
xchg
adc
hlt
scas
adc
cmp
clc
js
les
inc
scas
lret
or
xchg
movsb
loop
imul
es
cmp
xor
sub
cmp
cli
xchg
sbb
inc
enter
inc
or
cmpsb
shlb
inc
lods
jge
ja
loope
movsb
aam
adc
sahf
cmpsb
incb
nop
out
popa
push
fmull
lds
mov
inc
les
ljmp
sub
aad
fs
jb
test
xor
inc
insl
mov
xchg
dec
adc
jns
pop
pop
xor
aas
testl
mov
push
in
cmpsb
jnp
enter
fiaddl
sbb
or
les
xchg
pop
jmp
inc
pop
push
pop
jge
inc
push
cmp
dec
xchg
sub
mov
inc
cltd
sub
mov
pop
add
dec
jo
xchg
jp
and
mov
js
inc
mov
cmp
mov
sub
add
cld
cli
fucom
and
flds
or
and
shlb
and
cmc
stc
push
stos
dec
daa
xchg
cli
ret
cs
mov
pop
pop
cmp
loopne
and
pop
lea
sbb
fs
inc
xor
lcall
pop
adc
les
popf
mov
sahf
outsb
test
dec
mov
cmp
and
adc
push
dec
dec
bound
mov
int3
jmp
lret
jg
repz
out
jl
fiaddl
in
cmp
jne
std
mov
lock
add
mov
xor
add
popa
sub
loopne
mov
sbb
sbb
notb
aas
inc
fsts
ret
lret
je
jp
nop
ja
ret
adc
push
and
rcr
loope
push
lret
out
sub
rolb
mov
push
xchg
stos
ror
xor
cmp
in
icebp
and
je
dec
or
addr16
sti
lods
cmp
xlat
pop
outsl
mov
out
sahf
cmp
push
fisubs
push
and
pop
inc
out
cli
xor
pop
push
out
mov
push
addl
or
lahf
and
out
jle
ret
shlb
pop
inc
aam
aas
mov
push
ljmp
jl
std
mov
pushf
rolb
and
dec
imul
push
inc
xchg
dec
jge
push
leave
in
clc
sub
or
pusha
pop
inc
les
sysret
push
push
pusha
test
push
dec
fcomip
or
cmp
ljmp
sub
scas
mov
add
dec
push
sbb
sub
cmp
jmp
xlat
lcall
xchg
or
scas
sbb
fisttpl
in
xor
add
mov
movsl
cvtpi2ps
lock
or
rclb
push
fs
mov
mov
mov
aaa
cmc
out
or
jle
inc
cmpsb
in
aad
pop
dec
fstl
xlat
or
ja
jmp
lods
push
sub
inc
ljmp
arpl
test
mov
mov
inc
push
sub
lahf
rorb
les
ss
inc
jl
jecxz
and
sbb
fldt
mov
sbb
cld
dec
inc
push
ss
xor
arpl
mov
mov
cld
sub
sbb
push
dec
jmp
jmp
inc
xor
mov
mov
push
mov
pop
shlb
sbb
add
push
mov
fnstenv
jb
cmp
pushf
sub
fmuls
push
enter
in
mov
mov
or
jae
mov
pop
add
jne
jo
mov
pushl
test
mov
call
mov
popf
and
cmpsl
or
push
jge
jle
insl
jg
jns
or
and
fs
enter
xchg
push
pop
mov
cmp
jp
fistps
sbb
mov
call
repnz
addl
pop
imul
loope
pop
aaa
mov
movsl
push
and
push
adc
arpl
push
jg
xchg
popf
jecxz
cltd
imul
sbb
mov
clc
push
ljmp
mov
aas
test
xor
imul
jmp
dec
push
xchg
jecxz
je
insl
cmp
pop
push
pop
mov
rclb
cmp
pop
sbb
push
imul
xor
cmp
fdivrl
sub
gs
fdivp
outsb
add
test
inc
xor
jo
cmp
xor
cmp
sub
mov
rclb
dec
sarl
stc
lret
popa
lret
lds
jmp
lahf
cs
ja
call
dec
push
sub
cmpsb
cli
test
mov
and
dec
mov
mov
push
xchg
cmp
fidivrs
push
in
sbb
sbb
dec
push
cld
xor
shll
std
jo
repnz
mov
push
out
jle
inc
fcmovnb
sbb
inc
and
repz
out
movsl
inc
xchg
lods
insl
xor
outsl
sub
mov
push
pop
add
sbbb
outsl
mov
lcall
repnz
icebp
aad
push
mov
pop
pop
and
in
cld
jo
hlt
jnp
fbstp
into
fists
mov
orb
movsl
sub
jno
and
cs
inc
loope
xchg
lret
push
repz
and
adc
iret
jnp
sub
test
xchg
outsb
jmp
test
pop
lods
mov
in
es
mov
xor
adc
dec
into
ljmp
les
scas
imul
add
add
xchg
pop
clc
je
pop
mov
push
or
add
mov
psllq
jnp
add
sahf
fwait
popf
ret
fdivp
fwait
sar
std
lods
andl
imulb
inc
sbb
xor
mov
xor
push
inc
stc
sub
dec
xor
pushf
push
dec
lods
stos
adcl
sub
shlb
ja
xchg
inc
inc
ud0
out
outsl
das
pop
xchg
out
popf
hlt
mov
xor
jle
or
clc
jne
sahf
ret
xor
pushf
shlb
sub
scas
push
inc
pop
std
or
lret
imul
je
jne
loope
sti
repz
leave
fwait
sti
sub
aas
adc
push
shrl
sbb
insl
lods
adc
jb
mov
dec
notb
jae
jge
scas
jae
rclb
pop
in
cmpsl
sub
mov
push
dec
arpl
or
stc
scas
aam
fidivl
sbb
sub
sbb
dec
inc
mov
imul
inc
pop
dec
mov
pop
cwtl
lea
hlt
jle
or
lahf
stc
mov
push
jge
jmp
out
inc
push
xchg
fwait
arpl
mov
test
mov
mov
fisubrl
nop
cwtl
pop
jl
ljmp
negb
mov
inc
fsqrt
out
mov
gs
adc
fbld
andl
in
scas
and
jg
mov
pushf
aas
sbb
jge
mov
mov
fs
dec
sbb
push
into
pop
inc
jge
pop
ror
imul
mov
or
idivb
adc
add
pop
and
sbb
lahf
jp
fnstcw
add
fidivrl
inc
jp
int
pop
jb
mov
pop
insl
jg
push
ret
lret
sbb
or
test
rcrb
cmp
aas
jge
and
test
popf
bound
outsb
xchg
and
xchg
jo
adc
dec
and
sub
stos
nop
cmp
or
test
aam
repz
popf
and
push
data16
in
mov
xchg
push
ror
ljmp
aam
int
xor
sahf
cmp
cmp
cwtl
insl
mov
aas
dec
mov
cmp
or
push
das
shll
shrl
stc
in
xchg
and
jnp
scas
pusha
xor
mov
sti
pop
sub
out
daa
and
bnd
cmpsb
inc
dec
xchg
test
add
notb
movsl
hlt
scas
xlat
rcrl
pusha
jmp
cmp
push
hlt
adc
push
and
mov
pushf
aad
vmwrite
xchg
call
dec
sbb
jne
es
jle
jne
xor
pop
repnz
fmulp
sub
cmp
pop
pop
cmpsb
xor
add
adc
clc
jl
scas
push
fwait
xor
mov
and
lea
addb
test
jno
mov
fsubrl
cmpsl
call
js
sbb
or
dec
loop
lret
enter
sarb
mov
cltd
jecxz
mov
push
int
inc
stc
call
pop
cwtl
cmpsb
jle
es
ljmp
or
mov
lods
into
lods
cli
fs
aaa
lods
js
not
push
mov
xor
dec
ret
dec
jnp
xchg
push
adc
lods
stos
push
pop
add
xor
lea
fnstcw
mov
pusha
lret
mov
inc
add
mov
jne
push
lods
push
push
adc
pushl
xor
cmc
mov
xchg
sbb
hlt
xlat
mov
mov
xchg
stc
jae
test
mov
xor
inc
jae
or
sbb
jle
push
fbstp
out
outsb
sub
push
push
add
add
mov
scas
insb
push
jae
or
cs
pop
imul
mov
enter
int3
out
into
inc
push
cmpsb
pop
mov
adc
das
nop
repz
pusha
cwtl
add
push
mov
xor
leave
jmp
and
pushf
jg
push
movsl
mov
dec
sub
dec
sbb
cli
jns
in
dec
xchg
xor
fcomps
clc
dec
push
pop
scas
add
push
add
sbb
add
ret
cmp
out
sbb
pusha
pop
jns
fs
adc
ret
psubsb
nop
mov
bound
xchg
and
mov
jl
mov
jae
daa
lret
rcrb
jo
nop
jo
loopne
fs
inc
dec
or
fs
int
out
xchg
mov
or
mov
inc
pushf
cwtl
mov
inc
sbb
call
sub
pop
adc
jecxz
jae
or
xlat
mov
and
cmp
aaa
xchg
add
lahf
js
dec
loop
xchg
movsb
or
push
xor
stos
add
testl
and
add
lock
pushf
shll
js
stos
jge
cltd
pop
lods
addr16
pop
xor
add
cmp
inc
movsl
and
and
mov
ds
and
cmpsl
inc
adc
push
push
fwait
jmp
insl
jecxz
je
popa
or
or
daa
cmp
pop
push
cli
test
sub
push
dec
cld
jae
icebp
sub
xchg
lods
mov
inc
in
push
xor
stc
jae
sub
pushf
insb
test
prefetchwt1
fsubp
test
sbb
aam
int
fstl
lret
loop
mov
repnz
call
fcomps
lock
repz
cmc
aas
add
jnp
pop
test
push
fidivs
cmpsl
and
push
add
in
pop
adc
xor
pop
out
sbb
ret
scas
fs
pop
push
push
aaa
mov
inc
xor
lcall
push
cwtl
int
lahf
sahf
movsb
inc
test
push
jg
xor
fldt
inc
es
das
and
aaa
add
jb
stos
cmpsl
inc
cmpsl
aad
mov
jne
cmp
and
or
or
xchg
or
mov
pop
insb
cwtl
shrl
lret
mov
test
lret
outsl
lcall
les
jmp
popf
xor
js
mov
les
stc
ja
push
lret
rorb
xchg
sub
mov
mov
mov
mov
psubusw
aad
dec
or
xchg
subl
add
out
adcl
fcoms
mov
xchg
out
jmp
adc
sti
mov
scas
neg
inc
out
push
jmp
dec
sbb
testb
data16
mov
es
push
add
pop
fisttpl
push
push
adc
lea
lock
push
fwait
and
dec
cmp
push
add
cld
jl
pop
jmp
aaa
cmp
xchg
jbe
jo
out
xor
push
mov
jle
movsl
aaa
add
lods
cmp
inc
jae
push
jnp
mov
ficoml
sarl
addr16
scas
idivb
popa
sbb
mov
jge
idivb
adc
movsl
jge
stc
mov
add
inc
cs
idivl
jmp
jg
add
icebp
popa
mov
mov
mov
leave
insb
add
scas
cs
out
adc
lods
and
mov
mov
insl
sahf
out
pop
imul
dec
lock
cmpsl
stos
xchg
mov
xor
jecxz
inc
cmova
push
adc
mov
ja
in
xor
std
jo
cmp
xor
dec
daa
lret
ja
popa
pop
dec
xchg
test
rorb
add
xchg
cmpsb
mov
inc
xchg
adc
jg
ljmp
jns
pop
repnz
mov
mov
push
xbegin
pushf
imul
imul
pop
adc
mov
test
mov
ror
mov
pop
hlt
fisttpll
fdivrl
in
cmp
ret
xchg
sbb
loopne
leave
push
jne
inc
xchg
or
bound
fs
mov
xchg
movsb
cltd
push
inc
mov
mov
cs
lahf
cmpsl
les
jae
sub
ds
xchg
popa
fstpt
dec
add
es
push
aaa
mov
adc
mov
cltd
stos
add
pop
or
or
js
sahf
pop
sub
mov
aad
jmp
addb
scas
sti
repz
fsts
lahf
fnstsw
pop
mov
sub
jo
xor
popf
aaa
add
cltd
add
fidivrs
mov
and
mov
sub
out
leave
push
int
sbb
sahf
nop
jmp
xchg
adc
int
notb
xor
andl
outsb
into
lock
enter
sub
mov
xchg
test
or
lock
mov
enter
mov
push
or
sub
jo
pop
fs
xlat
inc
push
daa
ss
dec
xor
insl
and
xchg
pop
pop
cmp
ljmp
shrb
sub
div
aas
cld
sub
jno
lcall
mov
mov
dec
push
or
jo
shll
int3
out
cmc
mov
jmp
jne
xchg
rorb
dec
cmp
data16
xorl
scas
fcom
ret
es
ret
test
aad
fcomps
pop
movsb
mov
imull
xchg
xchg
push
sub
xor
inc
mov
cmp
leave
lret
js
lcall
sbb
out
outsb
lds
dec
test
add
or
fisttpl
jnp
and
or
in
push
pop
mov
aaa
jp
mov
xor
sub
or
xchg
js
jno
inc
push
sub
lcall
iret
pop
lret
push
movsl
sahf
mov
sbb
pop
faddl
or
xlat
mov
xchg
daa
mov
icebp
lcall
adc
je
add
bnd
cmpsl
out
sbb
test
mov
adc
cmp
lds
pushf
lods
nop
mov
adc
mov
rorl
sbb
cld
mov
push
mov
clc
loope
loop
mov
popa
push
fs
and
dec
cmp
fstpt
mov
cld
mov
fwait
inc
push
ljmp
mov
xchg
arpl
mov
dec
pop
mov
addb
in
lahf
das
aas
jle
inc
cwtl
lret
into
xor
mov
pop
mov
jmp
shll
gs
out
roll
icebp
mov
out
cmc
or
mov
xchg
out
sub
mov
mov
aad
jecxz
add
ret
fs
sti
inc
rorb
mov
dec
sub
dec
adc
dec
lods
add
xlat
xchg
loopne
add
cltd
aad
dec
in
pushf
or
xor
mov
sahf
inc
stc
inc
out
popf
lea
lahf
test
out
cmp
mov
xor
loopne
out
or
ja
into
std
rclb
std
and
frstor
mov
adc
mov
aam
or
mov
scas
push
daa
les
and
mov
mov
cltd
jno
dec
jb
nop
insb
cmc
push
cmpsl
filds
and
lret
push
int3
sub
loope
hlt
cli
xchg
mov
js
out
push
mov
push
dec
jge
adc
cli
aam
lcall
repz
xchg
ja
mov
xchg
mov
hlt
fidivs
mov
pusha
fwait
xor
mov
out
dec
xchg
xor
call
lods
mov
movsb
add
mov
push
and
cmc
fdivrl
ds
adc
jg
mov
mov
xor
mov
mov
call
jno
fdivrl
mov
pop
into
rcrl
or
pop
movsb
les
shll
dec
jl
arpl
xchg
icebp
icebp
push
and
aam
cmp
xor
sub
sub
sbb
loope
add
jo
in
mov
repnz
scas
cltd
lret
jno
inc
sub
cld
movb
push
inc
mov
jle
push
loop
cmp
jne
mov
ja
sub
mov
in
loopne
cltd
add
mov
cmp
aad
in
call
inc
push
stc
mov
and
pop
jo
push
mov
inc
ret
int
fdivs
sub
mov
stos
std
in
adc
xlat
pop
pop
ds
mov
sub
xchg
daa
pop
xorl
inc
sbb
add
add
push
xlat
sbb
jo
fiaddl
clc
lahf
fs
cmp
rcrl
and
mov
pop
decb
inc
ss
xchg
pushf
shrl
lods
jbe
fsubrs
cmp
repz
or
movsl
es
fcmovbe
or
xor
lret
sti
mov
pop
rcl
movsb
or
cmp
xchg
mov
dec
ficoms
and
mov
je
jbe
xchg
push
adc
jp
test
mov
mov
lods
jnp
data16
or
fistps
jmp
in
xchg
mov
movsb
mov
dec
pop
fidivs
inc
cltd
roll
mov
imull
mov
pop
inc
jmp
leave
std
xchg
sub
imul
les
push
adcl
pushl
push
cmp
shr
cmp
stc
inc
movsb
push
pop
inc
or
sub
jge
in
jp
push
adc
cmp
or
ret
cmc
and
xor
stos
and
xchg
out
pop
pusha
pop
gs
or
xchg
and
or
push
loope
jo
sbb
inc
jb
cs
dec
cltd
or
xchg
xchg
fwait
sub
test
jp
xchg
sub
cmp
mov
adc
movsb
fwait
push
xor
sbb
or
addb
pop
stc
stc
call
enter
inc
xchg
ja
sub
ss
adc
pop
xchg
push
rcll
es
lret
and
fdivrl
sarl
cwtl
cmp
mov
movb
cltd
inc
out
fbstp
xchg
into
mov
mov
xchg
dec
cltd
insb
push
test
out
adc
jg
jb
mov
pop
push
push
test
cmp
add
and
shl
sti
out
push
lock
cld
cwtl
mov
jge
push
xchg
push
jmp
out
mov
cmp
jbe
fildl
fdivrp
mov
fdivr
mov
xchg
les
sbb
pop
add
int
mov
std
loopne
test
sub
loop
scas
xor
repnz
add
lret
repz
call
dec
sarl
adc
lods
xchg
sub
out
scas
mov
pop
in
aas
fucomp
and
aad
cltd
es
leave
adc
xchg
shrl
cwtl
lods
enter
adc
ds
outsl
mov
add
cvtps2pd
xor
mov
pop
dec
jl
sbb
pop
js
xchg
push
pusha
mov
add
pusha
add
mov
fcmovb
cmp
xor
sar
scas
and
cmpb
cmp
sub
mov
and
test
js
sbb
orl
ja
iret
aam
ret
xchg
cmc
daa
jge
dec
test
mov
or
or
dec
mov
mov
popa
sub
xchg
sub
adc
jg
pop
dec
mov
sub
fstpt
in
dec
jmp
mov
arpl
fcmovnu
sub
imul
xchg
into
out
sub
fdivrs
std
pusha
loope
push
repnz
pop
add
jle
push
xchg
adc
cmp
and
xor
or
mov
in
pop
and
gs
dec
push
lea
fwait
pop
or
push
out
lahf
stos
jle
mov
mov
idiv
mov
jmp
push
add
mov
mov
and
cmc
int
pop
divb
pop
mov
cmp
push
xchg
sbb
std
pop
int3
mov
fldcw
or
imul
dec
pop
stos
mov
and
das
in
in
fsubrs
push
xor
add
shll
aaa
hlt
or
xor
sbb
inc
xor
jnp
or
call
adc
mov
ljmp
xchg
pop
mov
lcall
cwtl
mov
dec
out
les
ja
pop
sbb
fwait
pop
ret
pop
and
mov
loopne
lods
shlb
inc
out
jg
aas
test
int
adc
test
movsl
add
adc
dec
out
push
insb
xchg
sahf
and
and
push
adc
loope
add
mov
and
lods
out
dec
jp
dec
daa
mov
jp
mov
push
cmpsl
shrb
pop
add
push
ss
adc
movsl
pop
xchg
or
or
jmp
mov
test
fwait
xchg
inc
mov
push
jbe
jge
add
mov
dec
mov
cmp
imul
pop
lea
mov
push
mov
cmpsb
mov
aas
inc
mov
stos
mov
stos
jae
push
xor
pop
mov
lcall
out
pop
loop
lea
call
stos
mov
adc
xchg
lds
popa
and
not
test
cld
fldt
or
jb
insb
sbb
add
out
lods
cmp
and
int3
xchg
sub
add
jge
imull
test
fcmovu
xchg
into
ds
xor
flds
mov
pop
dec
pop
xchg
sbb
sub
test
xchg
scas
out
je
pusha
add
lret
in
lret
xor
jbe
push
leave
ret
in
sahf
sub
rol
sti
push
sahf
jge
cltd
add
xor
mov
test
or
add
popa
lds
aam
rcrb
mov
mov
in
inc
cmpsb
into
add
pop
dec
pop
shr
faddl
mul
loope
fldenv
jecxz
pushf
cmc
xchg
inc
int
pop
sarl
les
dec
cmpsb
mov
xchg
mov
or
fistpl
jne
inc
fidivrs
shl
jmp
dec
into
fldcw
popf
hlt
iret
repz
adc
fcoms
pop
ret
dec
aaa
pop
inc
sbb
stos
sbb
out
sbb
mov
inc
popf
js
cmp
out
mov
or
jmp
arpl
push
jnp
roll
icebp
shll
xchg
adc
fcmovnu
jmp
test
fstpl
adc
sbb
xchg
lret
mov
mov
lods
cwtl
push
lods
pop
imul
jne
mov
out
mov
ds
mov
icebp
xchg
push
mov
call
sub
push
out
dec
mov
push
cmp
out
fldl
fwait
loop
loop
movsl
xorb
sahf
pop
push
sub
mov
sub
xchg
mov
pusha
smsw
aas
ret
lret
scas
pop
cmpsl
les
pop
mov
icebp
pop
lcall
and
in
adc
arpl
andb
pop
inc
xchg
fbld
xor
pop
paddd
dec
in
outsb
add
mov
inc
js
mov
inc
sub
lahf
mov
fdivrp
jmp
dec
adc
mov
xlat
stos
out
idivb
xchg
xchg
and
jno
cld
sub
cli
or
adc
frstor
loop
adc
add
lahf
dec
pop
movsl
arpl
fs
xchg
adc
mov
mov
cmp
sub
scas
dec
ret
cld
arpl
cmpl
dec
iret
adc
fcomi
cli
cmpsb
fisttps
or
xchg
insb
push
mov
pop
movsl
mov
or
loope
pop
dec
sbb
ljmp
xchg
stos
jb
dec
int
divl
cmp
fistps
test
push
hlt
jo
popf
or
fwait
mov
out
inc
push
pop
ss
or
cmp
cmp
subl
jp
mov
pop
aam
cmpl
loopne
sub
add
inc
push
stos
js
jb
cs
jmp
mov
rclb
mov
cmpsl
std
mov
mov
xor
mull
inc
iret
test
push
and
test
push
inc
rolb
adc
icebp
repz
push
mov
rcr
shll
les
gs
push
jbe
adc
daa
fbld
adc
les
pop
popf
jl
mov
daa
sbb
mov
mov
iret
iret
test
push
inc
clc
inc
inc
mov
sahf
leave
sbb
es
cmpsb
adc
fsubrl
add
dec
push
inc
xchg
addr16
test
add
dec
pop
or
fmulp
push
push
pop
stos
daa
lods
mov
sarl
in
icebp
icebp
fcoms
lds
insb
movl
or
stos
aad
mov
nop
inc
movsl
stc
and
cmp
loopne
lea
jg
mov
cmp
iret
mov
shlb
jecxz
sub
outsb
and
mov
aas
pop
push
jne
and
std
fmul
sahf
ja
dec
es
pop
or
mov
cwtl
cmp
imul
mov
lods
shl
jg
cwtl
mov
sbb
xchg
rcr
test
outsb
test
in
inc
rorl
loope
dec
sub
test
push
and
icebp
cmpl
out
lret
add
hlt
shlb
adc
push
sub
incl
mov
test
jl
scas
shrl
or
dec
or
mov
dec
xor
or
je
daa
xor
xchg
and
mov
rcrb
dec
add
fldt
shll
inc
dec
xor
xchg
insb
dec
cmp
mov
int
mov
jl
loop
shr
ljmp
cltd
pop
dec
add
xchg
out
cld
shrb
sbb
mov
cltd
jmp
and
xchg
sub
mov
pushf
aas
cli
pop
push
lds
test
enter
negl
mov
pop
pop
pop
imul
movsb
sbb
inc
sbb
push
jns
pop
sahf
cwtl
les
pop
test
into
in
adc
rcrb
popa
repnz
mov
hlt
lds
out
jmp
nop
test
shll
xor
cmp
test
add
pop
dec
sbb
mov
in
movsb
test
ds
xor
int
inc
insb
push
pusha
mov
loopne
sbb
lcall
pop
lahf
sub
insl
add
dec
test
jns
sub
mov
jp
push
push
stos
lcall
inc
xor
pop
dec
sbb
mov
cmp
hlt
jg
test
lahf
and
push
sbb
adc
mov
inc
xor
sbb
out
sbb
fnstenv
fyl2x
loopne
mov
call
pushf
cltd
and
sub
mov
pop
jl
outsl
fcomps
rcrb
mulb
push
int3
out
pop
mov
inc
inc
pop
aas
or
inc
xor
fs
dec
dec
fwait
lcall
in
adc
fadds
jp
cmpsl
xchg
mov
mov
sub
jmp
ja
add
push
dec
out
inc
mov
push
shl
pusha
pop
fstpt
add
pusha
dec
adc
aas
jge
aad
xor
adc
in
aaa
in
pushf
ja
iret
subb
lods
fisubrl
mov
and
xlat
fdivrl
mov
add
repnz
lods
push
dec
inc
mov
arpl
jnp
test
scas
fs
call
orl
test
lret
test
mov
push
inc
mov
jle
mov
xor
hlt
bound
lret
pop
xchg
inc
dec
push
inc
in
inc
jle
xor
mov
mov
mov
jae
daa
ja
mov
add
xor
clc
adc
jg
lcall
das
icebp
std
or
inc
push
pop
sti
movsl
and
or
bound
jmp
pop
stos
inc
push
mov
movsl
adc
cmp
test
sbb
add
stc
aas
mov
and
mov
mov
adc
enter
subl
mov
jbe
jo
mov
inc
or
push
ret
popf
int
mov
pop
xchg
dec
int
pop
push
mov
or
mov
cmc
add
pop
mov
popa
fstl
lods
pop
repz
ret
mov
js
pop
inc
mov
xchg
mov
push
mov
aas
push
mov
push
out
repnz
inc
pop
fistpll
mov
sub
daa
jmp
neg
lds
pop
inc
xchg
jge
mov
notb
xor
in
scas
push
xchg
dec
call
in
cmpsb
fdivrs
or
out
in
pop
pop
adc
adc
push
adc
stos
js
mov
sbb
mov
cmc
inc
cld
lods
pop
adc
xchg
mov
xchg
stos
rorb
lcall
mov
lds
push
and
or
mov
sub
xor
pop
loop
loope
push
loopne
fstpt
popf
or
daa
push
lea
gs
or
mov
addr16
jno
xor
push
push
push
inc
nop
jmp
insl
xchg
xor
jo
xchg
mov
or
sbb
mov
in
adc
push
jg
mov
movsl
add
jecxz
lods
test
arpl
loopne
lock
dec
xchg
cmc
pop
bound
sbb
jmp
int3
mov
sub
inc
movsl
cmpsl
mov
adc
mov
and
hlt
aad
mov
pop
in
jmp
sub
int3
leave
movsb
pop
mov
das
adc
and
or
push
pop
stos
outsl
jp
jmp
pop
inc
sbb
dec
mov
popf
dec
stos
sbb
enter
xor
inc
js
add
dec
lret
aas
sbb
daa
mov
push
pop
jle
jae
lret
paddd
xchg
xchg
mov
mov
outsb
jge
shrl
and
insl
lret
insl
stos
loope
repz
cltd
xor
jg
jl
sbb
or
repnz
dec
sub
sbb
cmpb
adc
push
popa
fwait
adc
lods
movsl
adc
or
jbe
lods
fcmove
jl
mov
pop
dec
popa
repz
movsb
ficompl
int3
add
pop
pop
adc
add
mov
in
cltd
or
sbb
out
push
popa
xchg
mov
out
lods
sub
inc
scas
jl
xor
stc
fstl
loope
and
insl
mov
sbb
ret
cmp
cli
xor
pop
xchg
mov
mov
jns
pop
push
inc
into
bnd
adc
xchg
daa
pop
clc
push
xchg
pop
adc
in
push
int
sub
xorb
rcr
subl
lds
mov
cmp
sub
leave
mov
push
dec
sbb
test
cwtl
outsl
movsl
cs
div
push
lods
mov
mov
pop
push
dec
out
scas
jp
jmp
push
fsub
adc
pop
inc
das
add
in
movsb
icebp
push
ss
sub
daa
lcall
and
push
lret
push
stos
pop
aas
or
ds
sbb
sbb
sahf
inc
hlt
add
aas
outsb
loop
ja
movsl
dec
cmpb
fwait
rclb
push
cmc
test
lahf
popa
ret
sahf
subb
out
dec
stos
push
adc
enter
aam
jb
pop
lds
dec
imull
fadds
mov
mov
clc
fnsave
inc
lods
aaa
outsl
cmpb
ljmp
bound
popf
repz
mov
shl
orl
scas
insl
sbb
pop
loop
xor
call
dec
and
xor
xchg
push
or
mov
pop
sahf
xor
pop
stos
aam
sub
stos
or
add
daa
frstor
push
popf
xchg
imul
fimull
decb
xadd
arpl
and
mov
jp
shl
sbb
mov
jl
or
mov
or
test
cmpsb
and
movl
mov
lds
pop
pop
in
sub
int
and
addl
icebp
xchg
xchg
jns
mov
or
push
lret
adcl
cli
push
adc
pop
inc
push
xor
jb
add
incl
sbb
ret
or
cmp
nop
and
xchg
adc
adc
mov
cs
out
or
pop
xchg
push
jo
shll
and
xorb
lret
icebp
hlt
loop
dec
ror
mov
movsb
sbb
dec
test
ds
and
shlb
mov
sbb
xchg
or
xchg
push
sbb
aas
sbb
xchg
mov
or
xchg
lahf
sbb
add
cmc
sub
mov
or
or
movb
pop
aas
push
scas
mov
inc
lods
andb
aaa
push
mov
in
push
mov
mov
je
data16
aad
adcb
mov
sbb
iret
cmp
pop
mov
cmp
sub
xchg
nop
out
pop
pop
incl
cmp
mov
xchg
pop
jae
or
mov
sahf
add
fstpt
outsb
mov
mov
insb
jb
repnz
dec
popa
mov
xchg
jle
data16
inc
sub
xor
scas
or
xchg
inc
xchg
mov
pop
jmp
cs
ffree
push
or
data16
push
xor
pop
xlat
sub
data16
imul
xchg
mov
xor
mov
subb
cmpsb
dec
clc
add
scas
insl
push
pop
sub
aas
or
orb
or
aaa
or
cmp
adc
les
jne
loop
pusha
bound
jb
dec
or
or
mov
mov
add
xchg
in
std
mov
movsl
rclb
push
jmp
aam
ss
pop
mov
addr16
shll
lock
pop
ficoms
cmpsl
push
aaa
jl
adc
or
jns
js
mov
in
mov
inc
or
sbb
or
mov
xor
lock
scas
test
pop
and
push
cmp
mov
fwait
dec
rcr
and
xor
into
cmp
jecxz
sbb
xchg
xor
sbb
lahf
or
shlb
pop
pop
xchg
inc
ret
dec
loopne
jbe
push
rolb
ficoms
insl
sub
sub
and
inc
xor
push
sbb
mov
sub
filds
insb
test
lods
push
inc
data16
xchg
jnp
xorb
sbbb
ja
inc
bound
mov
in
imull
pop
or
dec
out
mov
movsb
xchg
mov
inc
push
test
jge
mov
inc
cmp
xchg
pop
mov
out
aaa
mov
adc
mov
jnp
push
push
hlt
xchg
les
pop
sbb
out
and
jae
jae
jns
dec
xchg
out
hlt
jne
xchg
jmp
loope
fists
sarb
pop
add
enter
rcpps
pop
add
dec
and
xchg
sub
in
jae
jmp
add
add
fcmovne
and
add
leave
ljmp
xchg
call
loop
pusha
xor
sahf
mov
sub
fs
pop
repnz
jae
in
fs
movsb
bnd
mov
and
add
cmc
jnp
inc
or
aam
movsb
push
movsb
repnz
test
pop
sbbl
pop
jno
inc
dec
aas
test
jns
adc
push
dec
lcall
negb
loope
int
or
fsubl
push
outsl
movntps
clc
add
mov
xor
bound
movsb
leave
fwait
ret
sbb
fcmovne
cmp
mov
adc
xchg
xchg
std
addr16
hlt
sub
dec
cmp
push
mov
shl
js
iret
and
sbb
outsl
daa
or
in
mov
push
lods
mov
mov
negb
outsl
mov
cmpsb
test
imul
imul
mov
rol
loop
pop
xchg
xchg
insl
out
push
ds
lock
inc
xlat
push
pop
dec
cmpsl
mov
ret
jbe
test
adc
imul
lea
push
lods
xor
daa
push
jo
rol
fwait
idivb
jp
pushf
mov
or
popf
das
push
xchg
clc
mov
mov
fs
les
mov
fimull
hlt
je
popa
pop
test
pop
ja
mov
mov
out
dec
push
in
rcll
dec
cmpsl
mov
add
icebp
pop
add
lret
and
sbb
test
call
pop
mov
sti
lahf
loope
push
or
insl
stc
cmpl
sahf
test
xorb
xor
mov
push
add
test
in
and
rorb
fwait
mov
mov
jmp
push
and
mov
xchg
mov
pop
les
add
les
and
or
xor
scas
fisttpll
lahf
pushf
not
mov
dec
in
in
push
repnz
or
mov
clc
mov
jb
jno
pop
sbbb
fisttpll
lret
inc
pop
sbb
pop
fs
int
adc
dec
clc
addr16
ficoml
dec
pusha
jl
xchg
pop
es
push
or
jl
mov
stc
frstpm(287
pop
gs
lret
fucomip
testl
out
push
cmp
popa
stos
leave
cmp
out
mov
call
sbbl
jo
jns
xor
je
sbb
fnstenv
or
mov
imul
lds
int3
adc
mov
nop
lcall
sbbl
frstor
shlb
mov
outsl
imul
mov
or
fnstcw
pop
in
lret
sub
xor
mov
sbb
ret
dec
nop
jp
mov
inc
and
add
xchg
jp
and
ja
insl
xchg
rolb
insb
add
or
ss
fimull
xchg
fdivl
cwtl
sub
add
dec
push
lret
xchg
cwtl
dec
mov
dec
sub
xlat
inc
out
push
push
int3
ja
mov
push
enter
pop
xchg
mov
xlat
fcmovb
dec
shrl
dec
int3
add
lret
cmpsb
or
cmpsl
lock
stc
inc
cmp
nop
sti
stos
mov
rcll
jb
sbb
xchg
test
inc
sbb
ljmp
cmp
pop
mov
enter
pop
scas
aam
mov
dec
imul
fwait
movsb
divb
inc
in
std
cmpl
int3
mov
or
cs
popf
xchg
data16
sbb
imul
rcrb
roll
xchg
mov
dec
dec
gs
in
push
xor
inc
mov
popa
das
ja
and
pop
mov
sahf
dec
insl
popf
in
lds
mov
fidivrl
sbb
sahf
icebp
adc
out
mov
cmp
mov
inc
inc
or
cltd
stos
push
loope
sub
outsb
dec
inc
pop
mov
mov
xchg
cs
push
rolb
dec
fwait
mov
jb
mov
bound
xchg
leave
mov
push
inc
push
idivb
fiaddl
movsb
fmuls
fiadds
cli
cmpsb
dec
xchg
sbb
cmpsl
fiaddl
dec
mov
sub
cltd
loop
push
xchg
clc
mov
lret
imulb
adc
mov
or
mov
xor
push
add
mov
into
cmc
and
fs
lock
mul
fldt
icebp
data16
pop
pop
mov
iret
mov
inc
es
fstps
outsb
mov
nop
xor
cmp
sti
fdivrl
sub
fs
mov
and
sub
hlt
push
inc
cmp
xor
jnp
lock
sub
addl
imul
sti
mov
les
fimuls
push
add
divl
cmp
aam
add
or
cmp
and
and
xchg
loop
jb
add
xor
stc
xchg
cmp
sub
lcall
insb
pushf
inc
shl
leave
lods
xchg
dec
adc
cmp
push
sbb
sbb
push
std
jecxz
mov
ljmp
push
fwait
popf
xchg
push
adc
pop
movsl
add
popa
mov
mov
test
push
xchg
loope
jne
cmp
mov
int
mov
or
rcll
or
xor
rorb
inc
je
pop
or
xchg
dec
loope
nop
push
adc
das
test
hlt
pop
mov
orl
stos
movsl
fdivs
push
or
pop
adc
xchg
push
in
je
cltd
mov
lock
xor
cmp
lods
xor
enter
adc
out
int
mov
ljmp
lcall
jne
bound
addr16
dec
loope
sub
pop
mov
data16
ljmp
pop
add
outsl
add
cmpsb
loope
mov
hlt
inc
xor
inc
lret
fnsave
ss
pop
aas
and
fadds
imul
or
mov
lret
add
pop
jns
int3
cmc
out
repz
mov
sbb
or
fnstcw
push
arpl
fimull
sbb
push
sbb
inc
pop
cmpl
dec
cmp
xchg
dec
dec
mov
into
je
or
mov
icebp
cld
fwait
lock
es
dec
cmp
xchg
mulb
xor
clc
add
scas
xchg
sbb
and
lods
xor
nop
es
jp
fisttpl
sbb
les
cmp
sarl
andb
mov
shrl
lods
pop
fsubl
xor
sub
xchg
mov
jmp
dec
cmp
icebp
addr16
fstl
push
scas
push
rcr
loopne
ds
xchg
mov
out
test
jno
out
push
jns
jnp
mov
lahf
inc
ljmp
movsl
mov
ds
adc
pop
pop
stos
fs
cmp
dec
das
fisubl
test
jle
adc
mov
mov
xor
lea
andl
inc
dec
or
cmpsl
pop
pop
mov
lods
enter
addr16
inc
pop
add
testl
imul
adc
js
cwtl
cmp
pop
dec
cmp
ja
stc
dec
aam
jne
dec
iret
pop
pop
adc
lods
hlt
add
cltd
mov
xchg
pop
cmp
fmull
popa
add
push
sti
rol
push
pop
ja
bound
gs
out
cmc
shrl
dec
jl
cmp
xchg
xchg
dec
xchg
mov
ss
sub
mov
movb
pop
xchg
cli
mov
sbbb
sub
test
bound
in
jbe
mul
loopne
dec
popf
sbb
imul
pop
fcoml
imul
mov
in
dec
mov
jmp
mov
loope
bound
inc
push
push
int
mov
push
push
inc
jae
out
fcompl
push
mov
leave
aaa
das
or
in
mov
sub
icebp
mov
dec
in
fnsave
mov
jne
dec
push
xchg
lret
fstps
icebp
dec
repnz
movsb
in
in
lea
iret
cmp
inc
lea
sti
clc
fidivrs
inc
data16
and
lods
xor
test
cmp
pop
push
insl
pop
hlt
orl
push
ret
dec
sbb
mov
xor
in
scas
or
aam
add
scas
ret
popf
insb
cli
push
xor
jmp
repz
cmp
pop
jae
es
push
xor
inc
dec
mov
cmpsl
add
or
mov
inc
insb
jge
mov
idivl
clc
stc
cli
mov
repz
addr16
les
in
outsl
sbb
or
je
cli
je
mov
xor
xchg
dec
lods
repz
xor
adcl
fildl
test
dec
mov
inc
test
sub
dec
lods
pop
add
call
outsb
popa
iretw
pop
aaa
push
test
jp
add
inc
fimuls
mov
push
inc
arpl
test
mov
add
mov
dec
and
fwait
cs
scas
cmpsl
pop
inc
pop
or
push
clc
or
mov
cld
rorb
scas
cmp
dec
jp
dec
push
fbld
clc
xchg
push
sbb
pop
sbb
rcl
lock
sbb
xchg
call
push
imul
lods
pop
mov
cmp
add
std
fimull
into
mov
arpl
popfw
mov
je
push
movb
adc
jmp
fwait
orl
je
bound
repz
ds
mov
xchg
in
cmp
pop
scas
dec
hlt
test
test
push
adc
add
in
pop
push
bound
jno
iret
loop
pop
fs
xorb
xor
add
or
dec
dec
lahf
les
xchg
or
mov
movsl
mov
aam
ja
sbb
jno
or
cmp
pop
addr16
jp
pop
dec
and
push
imul
or
xor
adc
mov
sbb
cltd
sarl
push
shr
or
mov
adc
mov
jno
mov
imul
pushf
arpl
mov
push
add
inc
mov
fs
repnz
pop
call
add
cmc
pop
stc
gs
adc
xchg
in
mov
in
ss
out
popf
dec
adc
test
mov
adc
inc
push
gs
ss
loop
cmp
xchg
loop
adc
fisubrs
adc
pop
cltd
mov
aam
inc
sub
int3
adc
lahf
rep
imul
jns
inc
push
jecxz
ds
cmp
test
pop
dec
sbb
int3
test
sti
jl
mulps
push
sbb
adc
in
xor
jne
lds
mov
mov
xor
mov
fwait
push
jns
jg
ret
ret
ss
xchg
xchg
fmuls
jle
int3
mov
das
xor
int3
push
jg
push
lods
lret
into
cmp
jmp
das
add
mov
mov
lods
test
or
lahf
xlat
hlt
mov
int3
mov
push
mov
jb
fidivrl
repnz
and
repnz
in
xchg
scas
sbb
nop
pop
mov
dec
lret
iret
cmpsl
pop
test
mov
ja
mov
inc
rep
jl
jge
stos
ret
xchg
jle
adc
xchg
sbb
movsb
movsb
int
dec
fucomp
push
jmp
into
and
or
push
jb
lea
jg
incb
lock
sub
push
xchg
inc
xor
sub
jmp
fsubrs
push
inc
shll
fimull
add
fcmovnu
push
arpl
into
repz
jno
test
inc
sub
push
xchg
cmp
sub
xchg
dec
sbb
insl
add
addr16
lods
jle
call
movsl
nop
test
pop
jmp
idivb
xchg
lods
aad
insb
and
arpl
movsb
cli
sarb
fmull
sbb
sarl
sbb
sti
mov
in
lahf
outsl
loope,pn
cld
das
outsl
inc
jge
xchg
sbbb
lahf
push
cmpsb
aas
mov
push
ficompl
fs
cmp
pushf
out
xchg
lods
test
fwait
je
stc
clc
daa
test
aas
arpl
das
mov
and
in
les
mov
mov
pusha
fwait
add
push
ja
adc
aam
mov
add
push
cmp
cltd
and
mov
shlb
movsb
leave
ljmp
andb
add
xchg
xchg
fwait
sahf
lods
mov
mov
loop
or
mov
neg
or
lret
inc
repnz
pop
cld
std
inc
les
nop
shll
push
iret
clc
pop
pop
sub
jle
and
pop
mov
imul
push
faddl
xor
loop
or
arpl
cmpb
fwait
stos
fnstcw
das
test
dec
jmp
stos
mov
std
cwtl
inc
push
inc
das
cmpsl
ljmp
sbb
and
cmp
addl
repz
push
or
and
jbe
mov
cs
pop
fwait
mov
sbb
sub
stos
hlt
out
std
push
into
inc
add
mov
add
repz
pop
pop
xor
sarb
and
imul
pop
lods
sub
jbe
out
cmp
sbb
inc
test
aad
sbb
into
test
mov
jle
sti
and
adc
dec
nop
lret
or
lods
add
loope
repz
xor
dec
jmp
dec
dec
xchg
mov
add
out
sub
cmpsb
loope
cs
mov
daa
sbb
inc
shrl
and
or
dec
or
ds
jle
xchg
movsb
xor
dec
sbb
scas
bound
lock
mov
ret
int
test
out
lcall
pop
stc
xchg
jle
ljmp
mov
leave
mov
fldt
data16
add
xlat
sbb
or
lods
mov
mov
aam
cwtl
lret
or
cmp
sub
pop
and
inc
in
hlt
scas
lods
mov
jb
pop
sub
sub
inc
mov
add
gs
in
js
insl
add
cmp
cmp
aad
stos
sbb
imul
mov
fidivrs
xor
or
adc
jge
cld
xchg
adc
pop
jns
js
jo
rolb
xchg
je
out
xor
xor
xchg
fcoms
or
fcompl
push
adc
jns
ss
xchg
sbb
sub
dec
cmp
jne
test
ficoml
push
pminsw
cmp
rclb
jle
fisubl
lods
int3
in
jle
xchg
out
and
jmp
add
lret
ja
dec
adc
sahf
xchg
pop
mov
jne
xchg
js
scas
dec
clc
fistpll
sbb
popf
inc
arpl
sbb
sbb
bnd
sbb
adc
inc
lods
mov
mov
add
lds
push
jecxz
es
push
rorl
movsb
je
call
cmp
xchg
lahf
and
lea
mov
xchg
into
xlat
pop
dec
vmovdqa
push
dec
imul
insb
in
mov
mov
mov
nop
out
pop
dec
jo
xor
in
inc
cs
xchg
daa
cmp
xchg
jle
lret
inc
into
add
dec
enter
int3
jl,pt
mov
push
pushf
jno
jnp
roll
mov
scas
mov
push
mov
xchg
call
insb
jmp
and
xchg
add
push
fisubrl
mov
or
mov
ja
fsub
cmp
ja
cmpsl
aam
into
mov
jnp
pop
out
jmp
je
or
lahf
pop
jp
sbb
insl
outsb
jg
in
mov
lods
mov
ja
fmulp
and
std
mov
inc
jecxz
or
dec
movsl
jae
xlat
rorb
inc
lahf
out
dec
hlt
loop
inc
ljmp
push
lret
add
push
outsl
xchg
inc
mov
dec
repz
and
popl
in
xchg
into
lods
mov
inc
jmp
mov
jno
ja
jbe
sub
js
mov
out
fmuls
arpl
sarl
ljmp
sub
cmp
pop
xchg
iret
push
mov
xchg
fnstenv
cmp
xor
mov
loop
mov
ret
push
cmpl
inc
in
imul
xor
bound
xor
daa
and
xchg
adc
mov
mov
hlt
lods
bound
mull
mov
enter
xor
cmp
fdiv
mov
js
out
icebp
sbb
stos
cmp
mov
frstor
dec
bndstx
cld
sbb
jecxz
or
lock
mov
jp
mov
push
mov
inc
jmp
mov
ja
sub
jne
loope
jno
mov
lret
sbb
add
cltd
xchg
sbb
and
add
lcall
ss
lea
cli
rcl
jecxz
fdivl
xchg
movb
push
push
sub
pop
push
popa
leave
pop
mov
repz
pop
insb
mov
sar
test
push
fildl
insl
js
inc
push
imul
int
fbstp
xlat
push
in
sarl
es
push
jg
xchg
sbb
sub
dec
xchg
into
push
mov
cmp
add
out
jbe
jnp
pop
popf
sahf
sub
mov
push
dec
push
mov
xchg
mov
lock
or
mov
sbb
sub
or
adc
adc
xchg
lea
scas
dec
subb
mov
cli
cltd
adc
fisubl
aam
mov
push
sbb
sbb
sahf
imul
cmp
cmp
mov
mov
mov
cltd
fimuls
aad
imul
fcomip
stos
inc
cmp
rcll
sbb
lret
sbb
popa
mov
std
lods
push
test
or
outsl
lea
inc
mov
jbe
inc
fnstcw
movsl
fcomps
mov
mov
imul
test
mov
cmp
dec
sbb
or
insb
scas
jb
movsl
jl
movsl
mov
ret
or
lcall
addr16
dec
xchg
pop
pushf
mov
sbb
sub
mov
mov
fs
push
sahf
jnp
xor
iret
test
lds
jg
pop
xchg
xor
or
jae
mov
mov
mov
fsubr
ret
enter
push
mov
pop
bnd
mov
cmc
cld
andl
lods
dec
popa
mov
cmp
jge
icebp
jns
xchg
mov
js
arpl
sub
sbb
movsl
sub
mov
enter
inc
push
sbb
fidivl
lret
cmp
jns
idivl
xchg
pop
xor
jp
pop
add
pop
es
jecxz
cmpb
aad
test
sbb
cmpsl
inc
mov
test
or
add
stos
add
fcompl
add
sub
test
cmp
sub
sub
daa
sbb
inc
xchg
dec
xlat
hlt
out
pop
pop
test
adc
mov
xchg
xor
enter
push
cmp
mov
cs
iret
call
aam
mov
lock
out
stc
lret
mov
sub
jecxz
mov
push
scas
loope
or
jno
pop
lds
decl
lock
cmpsb
xor
sahf
clc
mov
add
jge
lret
mov
ret
fcompl
jne
add
addl
sbb
mov
fiaddl
inc
ja
pop
jp
mov
pop
dec
aas
insl
dec
inc
hlt
jbe
outsl
xchg
or
mov
out
fcoml
aaa
rclb
add
sbb
shll
jmp
xor
push
pop
inc
repz
jnp
aad
mov
repnz
fildll
xchg
jle
add
sub
or
add
addl
loop
xchg
aam
xchg
jne
dec
dec
out
cmp
test
sub
mov
lods
fmuls
mov
aad
stc
and
andb
scas
and
dec
adc
adc
sub
cmp
mov
js
scas
push
outsl
sti
in
in
cmc
aad
popa
das
sahf
jle
and
hlt
fiaddl
jns
ds
inc
add
rcl
inc
or
xchg
lret
push
fisttps
and
fwait
outsl
xchg
cmp
mov
mov
adc
gs
cmp
lret
test
in
lret
into
aam
adc
mov
push
scas
je
subb
std
xchg
jae
push
loope
xor
outsl
dec
push
pop
out
not
jg
test
jns
mov
xchg
cmp
xchg
jno
scas
lea
dec
lea
jno
gs
push
pushf
xor
xor
dec
into
lds
jecxz
xchg
adc
dec
jns
push
fldl
cmp
popf
data16
rcll
jge
adc
cmp
stos
ja
sub
lcall
sub
jp
data16
xlat
jl
pop
xor
jne
xlat
fisubs
and
xchg
xor
ret
mov
dec
mov
in
dec
mov
cmp
icebp
push
mov
mov
pop
cmp
adc
loopne
gs
jle
pop
jg
scas
in
popa
cwtl
xlat
inc
daa
jo
lock
mov
or
sbb
outsb
mov
and
lahf
or
test
lahf
xchg
mov
xor
out
insl
jp
mul
in
xchg
fistpll
push
cmovno
je
and
mov
or
repz
repz
push
fbld
aaa
jl
mov
negb
push
lret
mov
xchg
aam
add
test
xor
loop
notl
xor
enter
ficoml
jne
xchg
xchg
jns
xchg
add
lods
mov
mov
dec
inc
and
and
and
xor
xchg
jle
ljmp
mov
js
jmp
ret
add
js
jb
ret
mov
inc
inc
cmp
gs
push
rol
mov
pop
out
pop
push
xchg
or
out
mov
hlt
roll
jecxz
fldt
pop
cmp
or
hlt
xor
jns
mov
jl
cwtl
pop
dec
adc
jne
enter
sti
rorl
pop
pop
sahf
sub
adcl
xchg
and
idivb
mov
std
xchg
xchg
inc
pop
mov
mov
cmp
out
lret
jle
push
fstps
test
xchg
and
mov
pop
lock
fnsave
imul
and
and
dec
cs
idiv
pop
adc
loope
popf
popf
push
xorl
xchg
cmp
add
mov
dec
movl
sbb
imul
sbb
pop
stos
lds
xor
xchg
push
jo
mov
dec
fldl
imul
adcl
push
daa
jb
repnz
scas
xchg
std
inc
jg
push
push
lret
cli
or
or
mov
fadds
push
sub
sub
lahf
or
sbb
nop
adc
pop
mov
test
sub
xchg
stos
inc
jecxz
mov
add
and
push
xchg
das
movsl
lahf
xor
xor
cwtl
into
scas
jle
testb
xor
sub
jg
mov
sub
shlb
sbb
xor
dec
mov
adc
jg
fmuls
and
test
add
cmpb
mov
test
mov
les
mov
out
push
fbld
gs
sbb
adc
aad
mov
dec
scas
xchg
dec
jp
xchg
cli
lahf
pushl
ficoms
mov
in
fdivs
imul
andb
mov
and
jo
mov
push
loop
and
mov
sbb
jae
ret
cld
mov
xchg
or
sub
mov
inc
and
or
mov
cmp
push
inc
jae
loope
add
loope
pusha
sahf
xchg
pop
sahf
aam
outsl
cmp
adc
call
pop
xor
stc
fisubl
mov
sarb
in
imul
mov
cmp
push
idiv
sbb
ja
jp
arpl
xor
je
mov
adc
std
lcall
cmp
pop
jmp
xchg
push
leave
mov
jle
cmp
leave
mov
popa
push
and
add
leave
adc
out
cmp
mov
and
in
xchg
or
clc
or
mov
or
or
cwtl
out
icebp
clc
cmpsb
mov
in
aaa
sbb
pop
cltd
dec
mov
cwtl
aad
andl
mov
out
sbb
in
mov
pushf
pop
scas
xchg
pop
in
add
cmp
sub
cmp
mov
sub
dec
test
dec
pop
fists
andl
mov
push
popa
in
cmp
das
xor
pusha
outsl
imul
and
xchg
sub
in
daa
addb
mov
and
rclw
in
cmp
test
mov
imul
mov
dec
mov
dec
test
cmp
in
or
push
or
loope
pop
xor
xchg
mov
cmp
pushf
movsb
xchg
xorl
push
sahf
fidivl
xchg
adc
cmpsb
push
mov
arpl
data16
jl
lret
mov
aas
adc
mov
cmc
in
rorb
dec
pushf
stos
outsb
fildll
pop
loop
test
jmp
or
and
cwtl
inc
add
pop
rorb
xor
mov
dec
push
pop
sarb
xchg
push
dec
ror
xchg
pusha
jle
in
xor
jle
test
pushf
add
bndldx
bound
adc
aad
imul
into
arpl
jecxz
gs
imulb
loop
pop
jle
cltd
mov
add
xor
mov
aad
push
test
sbb
jmp
add
adc
ja
and
xchg
in
insb
push
jb
aaa
jno
je
pop
jnp
insl
and
cmp
push
test
inc
sti
sbb
setl
icebp
mulb
jns
adc
add
cld
arpl
sub
jae,pt
mov
push
pop
lret
js
dec
mov
mov
cli
push
int
jo
test
and
pop
daa
xchg
mov
fbld
pushf
sub
xor
jns
cli
call
xchg
insl
stc
inc
push
mov
out
mov
xor
dec
sbb
mov
movsl
mov
fnstcw
mov
add
and
pop
shrb
pusha
stos
ret
cmpsb
cmp
fisubl
add
inc
dec
rcrb
sub
push
jns
xchg
cmc
hlt
arpl
shlb
lds
xor
pop
cli
adc
push
cmpsb
lea
mov
mov
cmpl
lret
mov
mov
pop
insb
imul
mov
js
int
repnz
fisubs
xchg
shl
in
cmp
ror
dec
sub
imulb
je
mov
mov
mov
mov
sub
or
xchg
inc
mov
push
scas
scas
insb
gs
cmp
inc
lds
scas
push
cltd
xlat
and
mov
push
out
mov
push
fldl
fisubs
es
adcl
xchg
xor
cmp
push
andb
insl
orl
insb
sub
mov
dec
inc
sbb
mov
xchg
lods
repz
mov
dec
mov
mov
iret
mov
not
into
mov
scas
xor
add
cld
stc
and
xor
repnz
jnp
lea
dec
not
ret
dec
sub
lahf
mov
imul
sti
mov
arpl
in
add
shll
ljmp
in
getsec
adc
jns
mov
rorb
fistl
add
xor
in
addl
test
sub
jle
inc
and
out
pop
lret
mov
cmp
pop
cmp
and
xchg
xchg
adc
mov
pop
mov
ljmp
das
aam
mov
xor
lret
js
push
aas
outsl
icebp
cmpsl
test
dec
jno
outsb
mov
fdivs
sub
or
mov
adc
icebp
in
mov
iret
std
add
dec
adc
xor
sbb
xchg
push
nop
jns
pop
lahf
jg
jp
mov
sub
lea
popa
inc
cmpsl
mov
sbb
fdivs
int3
movsl
mov
xlat
movsl
movsb
push
int3
fsubl
mov
dec
rorb
push
cmp
outsb
ljmp
mov
jle
ret
xor
ljmp
cmp
xchg
mov
shrl
inc
jno
test
push
andl
jns
xlat
movsb
insl
jo
mov
pop
addl
xor
movsl
push
inc
scas
push
lock
test
neg
popf
popf
sti
test
scas
or
inc
mov
popf
not
mov
rorl
fdiv
in
xor
fxtract
and
jge
mov
push
orl
lret
dec
mov
add
add
sbb
rorl
popf
repz
lds
out
pop
and
mov
and
lcall
out
leave
mov
pop
int
fwait
mov
pop
mov
cmpsb
dec
arpl
push
lds
ret
add
into
loop
in
fisttpll
and
add
mov
sub
mov
cmp
adc
notb
jae
clc
fs
rolb
movsl
jnp
inc
movsl
iret
pushf
fidivl
int
mov
xor
gs
stos
out
xor
jmp
test
mov
addr16
sub
jne
arpl
incl
jbe
loopne
pop
test
inc
cmp
pop
scas
jmp
sti
dec
movups
cltd
ret
inc
jmp
dec
inc
inc
repz
std
and
ja
lods
imul
aaa
fwait
loope
jne
push
popf
mov
stc
gs
sub
cwtl
movb
out
mov
inc
dec
adc
imul
fldt
mov
mov
out
icebp
dec
add
xchg
mov
jp
jle
fisubrs
mov
pop
cmp
mov
pushf
cli
in
std
insl
xor
lret
pop
adc
sti
inc
push
push
xchg
add
arpl
ret
loopne
sub
add
dec
add
sub
add
sbb
dec
jg
sbb
and
mov
out
fdivs
lods
pop
mov
push
pop
mov
ljmp
repz
mov
ror
jno
outsb
addr16
int
sub
add
jno
aaa
and
push
sahf
xchg
mov
push
jno
mov
scas
je
rcrb
sbb
ret
dec
adc
and
insb
add
push
inc
or
push
mov
test
pop
lret
jb
popf
out
call
cmp
jns
loopne
scas
imul
fsts
lock
into
or
popf
dec
cwtl
mov
out
flds
mov
sub
sarb
mov
mov
adc
mov
movsb
mov
fmull
ljmp
pop
outsb
jecxz
fwait
add
inc
arpl
decl
je
mov
repz
cmpsb
scas
fwait
add
pop
inc
lock
mov
cwtl
jp
aad
clc
dec
outsb
add
js
lea
xor
ret
and
idiv
test
adc
js
jge
xlat
divb
fists
mov
stos
inc
fs
in
shr
pop
and
mov
jge
je
mov
roll
mov
adc
jb
orb
fidivs
mov
add
mov
fimull
dec
add
sbb
les
cmp
subb
out
jg
repz
sbb
fdivs
dec
adc
pop
jmp
push
pushf
inc
ret
mov
xchg
jmp
mov
mov
xchg
dec
dec
daa
inc
adc
xchg
cwtl
xor
sbb
scas
test
push
sahf
in
or
test
xor
outsb
jle
neg
lock
jbe
gs
dec
ljmp
jecxz
cmp
dec
sbb
ficoml
mov
adc
call
mov
sbb
jo
jp
movsl
pop
adc
cmpsb
xchg
scas
pop
cmp
mov
sub
out
fld
inc
or
aas
mov
enter
testl
lds
xchg
inc
arpl
in
test
cwtl
dec
in
out
jns
add
xchg
mov
aas
les
and
bound
xchg
jge
fcmovnb
xchg
int3
in
stos
inc
pop
sub
jmp
mov
cmpsb
jl
daa
pop
into
loope
or
bound
cwtl
xchg
es
js
push
sti
in
inc
mov
push
pop
out
inc
stos
lock
ja
arpl
mov
pop
dec
sub
bound
paddsb
jl
dec
mov
xchg
outsl
icebp
cmp
sub
inc
xor
nop
cmp
inc
ja
pop
push
push
cmp
cmpsl
loopne
stos
push
adc
loopne
push
std
fistpl
mov
jmp
inc
mov
push
fs
sbb
lds
cs
mov
cltd
lea
inc
adc
iret
jo
and
inc
pop
dec
mov
scas
dec
enter
mov
or
or
adc
xchg
mov
out
push
mov
or
push
fs
or
outsb
enter
lock
out
stos
out
int
ds
call
cmp
sbb
negb
adc
cmp
scas
repz
push
das
sub
ds
lods
call
dec
dec
adc
in
mov
sbb
cmc
xchg
mov
pushf
adc
sti
jne
adc
mov
sbb
jne
and
lods
push
mov
xchg
aam
dec
adc
pop
push
lret
out
lods
sbb
mov
add
scas
into
xor
cli
pushf
stos
cs
mov
ret
xor
inc
push
dec
ljmp
dec
inc
stos
sub
icebp
fdivs
es
push
ds
aad
push
or
push
iret
lahf
rolb
mov
lea
div
ss
ficompl
adc
test
push
xchg
jp,pn
rclb
push
pusha
divl
pop
icebp
fpatan
fsubs
xchg
es
jmp
and
mov
in
inc
mov
movsl
int3
xor
xchg
mov
and
daa
int3
mov
pop
pop
ror
cmp
lea
xchg
scas
xchg
pushf
mov
xchg
ljmp
inc
mov
and
and
sub
push
fstps
pop
out
test
push
imul
imul
xorb
dec
cmpl
jae
push
aaa
push
or
popf
mov
cmp
adc
dec
cwtl
push
pop
jae
cli
notb
sahf
mov
movsl
adc
ret
mov
dec
mov
inc
rcll
dec
insl
xor
out
jo
jo
mov
aas
outsb
dec
jns
out
sub
incb
push
mov
mov
sbb
mov
cmc
lea
in
jb
je
pop
cmp
and
or
push
and
mov
int3
test
push
stc
aaa
mov
mov
icebp
jge
stos
addl
xor
bound
stos
pop
loopne
xchg
in
xor
push
dec
mov
mov
lret
mov
push
push
jl
enter
mov
stos
sti
scas
cmpsl
ret
mov
jno
or
cld
test
ljmp
and
leave
cmpsl
cmp
mov
je
fmuls
sub
cltd
dec
cmp
lahf
push
mov
aam
stos
push
mov
xor
cmp
push
sub
or
fs
mov
push
in
sub
push
cmp
xlat
dec
mov
jmp
sti
sbb
stos
and
adc
push
inc
popl
and
rdmsr
pop
mov
les
fdivrs
jnp
add
jmp
jecxz
pop
inc
imul
rcrb
aaa
mov
mov
les
out
push
lret
lahf
dec
adc
push
jmp
dec
jne
fs
pop
lods
jg
aaa
je
sbb
sbb
es
fildl
fs
jmp
adc
jmp
jne
or
adc
fsubs
lcall
sub
push
call
and
mov
cmp
test
xor
or
fildll
xlat
seta
cmp
or
mov
push
and
add
mov
imul
jl
fwait
jb,pt
sub
ror
faddp
cwtl
cmp
add
shr
mov
stc
add
out
sub
mov
sti
imul
mov
jo
jp
dec
mov
jle
jb
xchg
aas
cmp
sbb
sub
xchg
movsb
inc
je
cwtl
repz
jp
adc
ds
fimull
xor
push
inc
push
jae
test
dec
movb
push
dec
pop
scas
ss
sub
xchg
cmp
adcl
bound
or
sbb
inc
popa
pop
jge
nop
mov
insb
sti
push
mov
data16
loop
jnp
xchg
xchg
adcb
movsb
xchg
xor
movsb
addr16
or
cmp
dec
into
enter
sub
je
sahf
dec
push
cmp
push
mov
adc
sti
adc
xchg
fiadds
cli
dec
mov
std
outsl
nop
push
jno
jo
mov
test
fildl
lods
es
pop
fdiv
jge
bnd
push
imul
scas
sub
mov
pop
sbb
iret
mov
jg
mov
and
mov
pusha
xchg
call
inc
jle
pop
cmp
xchg
sti
imul
push
mov
jne
mov
jns
inc
dec
xchg
incl
xchg
push
loopne
mov
das
push
mov
ret
dec
loope
out
rcrb
aad
push
sbb
and
push
fisttpl
add
jbe
adc
cmp
test
leave
sbb
cmp
mov
mov
sub
xchg
les
inc
lods
int
negl
push
mov
sub
movsl
sbb
pop
mov
and
movsl
or
jle
xor
pop
push
cmp
adc
into
in
fstl
jp
out
aam
shrl
js
std
xchg
das
pusha
fwait
jb
push
jmp
jae
stc
int
jae
pushf
jp
pusha
dec
adcb
or
mov
jb
push
fmulp
insl
and
mov
adc
clc
mov
mov
add
rol
inc
push
push
push
mov
sub
mulb
in
cmp
xor
dec
adc
lds
dec
pop
mov
jns
lds
pushf
sahf
shlb
xor
clc
sahf
add
rol
or
adc
hlt
mov
mov
stos
pop
xor
mov
daa
inc
int3
fildll
sbb
lcall
adc
sti
cmp
dec
inc
fdivs
xor
mov
outsl
ja
test
jl
cmp
jo
jae
in
int3
scas
cwtl
in
out
stos
pop
outsl
gs
pop
cmp
jae
pop
nop
testl
sbb
push
in
cmp
add
cli
fwait
dec
dec
push
mov
cs
adc
add
cmp
hlt
push
xchg
inc
xchg
lahf
push
or
push
push
fmuls
out
das
nop
pop
sbb
mov
jno
loope
pop
push
mov
popa
out
inc
add
stos
je
insb
add
iret
aaa
cmc
jmp
jb
or
jnp
adc
sbb
mov
loopne
sarl
pop
das
shl
pop
divb
lahf
mov
adc
adc
sarl
or
mov
addb
in
mov
mov
loopne
aaa
xchg
sti
leave
aaa
lods
das
mov
std
sbb
cmp
leave
or
cwtl
pop
test
cmp
sarl
daa
push
enter
aaa
mov
leave
cmp
jbe
xchg
sbb
pusha
mov
call
fisttpl
popf
pop
mov
push
testl
add
and
into
push
and
inc
lcall
cmp
adc
lcall
dec
nop
cmp
lret
adc
mov
push
aad
jecxz
mov
mov
aad
jnp
ljmp
mov
lcall
nop
into
push
andps
add
jmp
pop
pop
and
or
pop
iret
fdiv
ret
call
test
in
xchg
rol
jbe
push
adc
adc
mov
cmp
adc
dec
aad
repnz
stos
test
lret
iret
je
xor
mov
rclb
es
int
push
iret
mov
sbb
test
jno
xchg
or
push
mov
xchg
leave
jns
cmc
push
or
add
xor
dec
pop
movsb
mov
xchg
ds
mov
inc
ja
jle
mov
mov
push
xor
mov
jmp
xchg
popa
test
or
movsb
jmp
fsubp
test
xor
test
sub
idivl
es
xor
mov
inc
or
in
or
pop
movaps
sahf
fldl
mov
xor
mov
jb
stos
push
xor
dec
cmovl
mov
pop
xchg
test
test
ret
mov
lahf
stos
aad
aad
push
test
add
adc
and
xchg
mov
test
fcomps
mov
xchg
push
mov
fcomps
aam
mov
outsb
dec
xor
cmpsl
aaa
movsl
mov
aam
sub
ss
repnz
fldcw
pop
xchg
pop
hlt
enter
push
call
or
or
mull
xor
movsl
fs
mul
test
loopne
outsb
jg
pushf
and
jns
and
enter
xchg
cli
test
lods
sub
or
sbb
fistl
and
jns
and
pop
sbb
inc
hlt
addr16
fwait
mov
sti
and
pop
rorl
add
fsts
or
cli
sbb
adc
dec
pop
fs
pop
mov
movsl
fcomps
mov
test
arpl
cmp
mov
mov
mov
sub
inc
insb
add
xor
rorl
pushf
scas
mov
into
jg
mov
test
sub
decl
xchg
xchg
jae
adc
fstpl
inc
jo
lock
cmc
inc
nop
stc
ljmp
dec
xor
and
les
and
dec
mov
fdivrl
clc
xlat
push
mov
jge
test
hlt
xor
addr16
dec
loope
jbe
rcrb
xchg
inc
fisubs
push
shrl
ja
das
inc
cmp
xchg
ffreep
sahf
bndstx
or
xor
inc
in
fdivr
and
or
xchg
push
xchg
stos
lods
lods
les
adc
adc
mov
add
inc
mov
bound
lds
sahf
mov
jl
push
xchg
insb
fwait
leave
cltd
test
add
test
and
divl
push
mov
arpl
and
or
rclb
add
in
ret
jecxz
cmp
loope
push
push
fs
sahf
scas
popf
adc
call
aad
es
sbb
jle
add
jbe
and
mov
punpcklbw
out
out
ret
shlb
roll
call
lret
popf
stos
jns
lock
test
jns
xchg
andl
jge
cltd
xchg
nop
ret
xchg
mov
cltd
test
gs
pushl
pop
push
sbb
daa
mov
movsl
outsl
and
xchg
lret
or
fstps
out
insl
ljmp
mov
stos
roll
jecxz
push
fsts
fstp
shl
adc
popf
leave
jmp
cmp
push
outsl
sbb
inc
add
mov
sbb
aaa
test
jmp
ljmp
or
mov
dec
bound
lret
jno
lods
add
sub
add
sarl
lret
std
clc
roll
adc
xchg
jmp
mov
enter
rcll
adc
push
jecxz
mov
outsb
pop
leave
cmpsl
mov
aas
mov
int
jge
insl
lods
mov
test
xor
inc
xchg
jecxz
mov
stc
ljmp
dec
cmc
mov
add
push
mov
sub
popf
push
mov
sub
ljmp
or
mov
cmp
inc
push
dec
and
jp
sahf
les
or
call
ret
adc
add
sub
or
je
movl
cmpsl
popl
mov
sub
pop
cmpsb
inc
jg,pn
mov
movaps
pop
sub
invd
push
fadds
lds
mov
push
in
ficoml
lahf
adc
inc
fwait
pop
lock
jmp
mov
pop
jge
or
xor
in
xchg
cmpl
ljmp
add
mov
es
decl
or
loopne
shlb
cli
jo
xchg
cwtl
call
or
push
mov
bound
sbb
jmp
mov
mov
jae
pop
dec
push
in
sub
dec
cmp
pop
les
pop
popa
mov
sbb
andb
xchg
stos
cld
jge
stos
pusha
data16
in
fisttps
push
pop
jmp
mov
test
cmpsl
mov
mov
mov
daa
lret
int3
xlat
mov
jbe
xor
test
cld
adc
push
addr16
insb
adc
ja
outsb
add
sub
mov
shlb
lods
pop
jo
mov
adc
pop
mov
data16
mov
mov
xchg
data16
das
adc
data16
or
mov
xor
jp
test
lret
sbb
pop
push
add
imul
lock
lds
adc
dec
outsl
mov
leave
mov
xchg
out
incb
das
mov
pmaxub
loop
and
push
neg
lcall
xchg
insb
add
lret
or
outsb
outsl
push
xchg
shll
imul
pop
jl
fnsave
cli
sti
pushf
shrb
iret
ds
push
cmp
xchg
xor
sbb
pop
js
subl
jp
int
mov
sbb
adc
dec
in
sbb
adc
push
mov
mov
gs
jno
ja
test
push
lcall
xor
jae
jb
rorb
mov
sbb
dec
adc
xchg
lea
jnp
imul
add
mov
xchg
lods
adc
push
test
inc
mov
loope
dec
add
insb
add
add
inc
fneni(8087
inc
mov
mov
pop
mov
add
sub
pop
mov
nop
or
dec
mov
stos
cmp
data16
cmp
loop
arpl
jb
xor
js
push
push
roll
adc
jle
jmp
movsb
negb
popf
ficoml
inc
repnz
movsb
or
loop
mov
imul
das
mov
mov
jl
add
inc
stc
sub
xlat
add
enter
cltd
ret
or
push
cmp
push
into
das
popa
int3
push
ss
or
lcall
notl
add
xor
out
add
pop
jae
mov
fs
sbb
mov
xor
push
nop
int
xor
xor
popa
inc
shl
in
jle
push
inc
shrb
sub
out
mov
je
sahf
or
ret
insb
outsl
dec
and
scas
mov
push
push
xor
jno
sbb
mov
jno
push
xor
cmpsb
jge
in
or
or
inc
cmpsb
adc
adc
and
lcall
test
push
iret
ror
xor
shlb
mov
les
movsl
cmpsb
mov
aaa
daa
cs
out
xchg
ss
mov
mov
dec
jbe
jl
inc
jnp
inc
mov
cmp
fldenv
mov
push
sub
sbb
jnp
in
out
dec
jae
jp
and
and
pop
inc
cli
xchg
ljmp
xchg
test
out
into
les
mov
fstl
push
mov
cmp
std
pop
inc
lahf
or
fidivrl
push
mov
iret
fadds
pop
push
dec
out
inc
loopne
sahf
mov
mov
fdiv
xchg
jno
fnstenv
mov
jle
shrl
imul
loope
jge
pop
fistpl
jl
cmp
sbb
aas
adc
faddl
movsl
sahf
jecxz
sbb
outsb
test
outsl
push
test
mov
lods
sbb
mov
cmp
fs
cmp
mov
pop
out
and
pop
shrb
cmp
cmp
sarl
pushf
icebp
pop
cmc
pop
pop
xchg
dec
sub
mov
cmp
popf
mov
aam
jg
lret
adc
push
adc
daa
addb
push
loope
div
push
lods
and
repnz
enter
xor
fnstsw
mov
inc
cmp
stc
jle
or
pcmpgtw
shll
popf
xchg
inc
iret
loop
fxch
loopne
mov
lods
aam
adc
movsb
ret
mov
mov
sahf
push
imul
aam
popf
sbb
xor
inc
outsl
test
pushf
pop
inc
sbb
push
sub
fdivrl
jmp
fnstenv
aaa
xchg
popf
mov
in
xchg
out
xchg
push
lret
sbb
mov
jo
cmp
mov
lods
mov
dec
xor
add
sarb
or
dec
fcoml
test
pop
bound
adc
lock
or
mov
lret
jle
pop
dec
adc
pop
inc
mov
rolb
in
jne
out
pop
pop
andl
sub
dec
mov
dec
pop
aas
insb
add
jmp
fucomi
subl
std
sarl
fmulp
adcb
adc
cmp
add
sti
in
mov
cmp
add
adc
rorl
adc
shrl
lahf
dec
out
fsts
mul
cli
into
push
mov
icebp
movhps
gs
adc
push
lds
cwtl
pop
mov
xchg
cmp
cwtl
loopne
mov
push
xor
mov
sbbl
pusha
jo
or
gs
mov
pop
xor
push
and
ja
sahf
lret
sbb
imul
jb
adc
dec
fwait
and
and
mov
push
pop
or
outsl
adc
subb
xor
mov
sbb
push
pushf
or
xchg
sub
xchg
loop
push
jp
or
insl
dec
push
lea
repnz
inc
or
shrl
test
dec
pop
nop
mov
stc
jae
outsb
mov
xor
sbb
sbb
xchg
aad
movsl
fdiv
sbb
xchg
ficoms
mov
dec
mov
dec
ret
fisttpl
aaa
loope
sbb
sub
push
pusha
xor
cld
ds
in
test
jl
push
pop
xor
imul
inc
cwtl
or
xchg
adc
push
test
je
ljmp
test
pop
cmc
sub
ret
repnz
fsub
fiadds
jno
xor
fwait
push
aaa
enter
xlat
mov
mov
enter
cmp
jo
cmp
inc
mov
or
jge
mov
outsb
sub
mov
nop
ljmp
mov
pop
int3
jb
sbb
insb
xor
sahf
or
stos
je
cmpsb
mov
popa
jmp
jnp
stc
and
out
push
pop
jp
xchg
loope
mov
mov
push
jg
fcmovb
imull
xchg
and
ficompl
fnstcw
adcl
add
sub
fistps
push
fdiv
aas
inc
aam
push
mov
stos
bound
aaa
cmp
dec
pop
popf
das
out
add
mov
cmc
in
xchg
test
into
jbe
mov
xchg
popf
dec
cltd
mov
inc
mov
mov
and
aas
test
fwait
pop
rcrb
jecxz
sarl
sbb
xchg
xor
push
push
inc
add
jno
insb
bound
into
or
mov
idiv
mov
imul
adc
or
fidivrs
test
xlat
repnz
int
cltd
dec
jle,pn
out
xchg
jns
out
pop
add
lret
push
sub
pushf
sti
ds
inc
mov
outsl
push
push
fiadds
jo
pop
cmpsl
iret
mov
or
daa
pusha
int
addr16
mov
js
mov
push
ficoml
in
or
ds
dec
sub
lock
outsb
xor
adc
fcompl
je
sub
mov
push
xor
pop
clc
out
test
aaa
cmp
mov
setp
std
aaa
and
sub
addl
lock
mov
pushl
pop
mov
imul
xchg
int3
adc
mov
je
cltd
loop
aam
les
lret
jp
shlb
ja
inc
xor
push
xor
repz
sbb
ret
pushf
aad
lahf
pop
icebp
test
mov
jl
pop
loopne
ret
add
loope
stc
nop
mov
mov
sbb
pop
imul
outsl
inc
std
sub
inc
jecxz
push
push
addr16
push
shll
mov
hlt
mov
std
pop
jno
enter
and
dec
lahf
and
mov
lock
int
jmp
mov
jg
adc
xchg
repnz
mov
lds
sub
testl
xchg
call
push
cmp
xchg
leave
cli
xchg
xlat
mov
mov
jnp
cltd
sbb
fs
add
rol
in
inc
mov
xor
mov
mov
into
mov
xchg
push
ja
out
xchg
jmp
movsb
loop
push
and
dec
xor
push
cmp
lods
xor
add
inc
sub
loope
sub
mov
lds
mov
add
mov
inc
outsl
inc
int3
inc
xchg
cld
ffree
mov
xchg
fnstsw
imul
enter
js
inc
cmp
push
imul
cmpsb
cld
xchg
stos
std
out
shll
addb
pop
xor
fisttps
scas
outsl
inc
rorl
mov
ret
cmp
xchg
mov
sub
lods
fsubs
addr16
cld
dec
mov
in
out
pop
mov
mov
xchg
xchg
add
int3
or
rep
xor
ljmp
mov
inc
jp
or
or
and
in
mov
shl
subl
and
jge
in
push
ljmp
xorb
or
ds
sbb
movsl
sbb
mov
cmp
adc
add
or
sub
xorl
std
mov
push
fidivs
cmp
add
jge
xchg
andb
and
js
adc
add
jno
aad
test
lret
and
mov
addl
pop
scas
enter
addr16
leave
cmc
mov
rolb
lret
sbb
popa
je
js
jnp
mov
cmp
stos
jge
or
ljmp
out
sarl
aas
mov
fcos
cs
addl
scas
sub
ds
push
aam
inc
jecxz
jb
jmp
cmp
icebp
xchg
sbb
xchg
mov
mov
mov
pop
mov
stos
loop
dec
leave
adc
movaps
fs
pop
inc
sahf
and
push
repnz
jp
cmpsl
push
xchg
int
jb
mov
cmpsb
ljmp
testl
stos
inc
test
xchg
pop
nop
ja,pt
in
adc
std
nop
mov
stc
adcb
or
lea
cmp
pop
data16
sbb
xchg
xchg
movsl
call
idivb
sub
ja
jo
cwtl
sbb
outsb
lds
arpl
sub
add
xchg
cmp
dec
stc
jl
sub
push
popf
add
sbb
out
fdivrl
xor
cltd
sbb
xor
dec
inc
pop
sub
ror
xchg
pop
pop
xor
stos
scas
dec
imul
inc
and
sbb
sbb
push
shl
fildll
xor
int
enter
pop
loope
sub
inc
mov
jbe
xor
fsts
mov
inc
pop
jae
cltd
fwait
add
lods
lods
push
sahf
xchg
mov
ljmp
mov
out
repz
enter
dec
and
xchg
les
and
mov
cwtl
ljmp
sub
xor
pop
sub
cltd
cmp
or
movsb
adc
call
loopne
mov
jp
ret
jnp
jp
lods
dec
pop
adc
inc
xor
hlt
xor
loope
or
scas
mov
sbb
jne
cli
adc
test
data16
or
arpl
mov
cmp
mov
mov
dec
lahf
xchg
out
leave
ret
call
imul
imul
out
jp
jmp
into
pushf
dec
push
cmp
ja
outsb
mov
jmp
bound
jge
pushf
ja
sub
lcall
pop
in
pop
xchg
fucom
push
xor
add
add
lahf
add
cmp
pop
or
into
xor
and
mov
jecxz
andl
mov
push
adc
aaa
mov
hlt
insl
mov
aam
xor
mov
pop
or
int
call
roll
rcll
sar
loope
sbb
roll
push
ret
enter
mov
out
sbb
test
int3
jl
test
repz
cmp
mov
add
insl
movsl
dec
repnz
and
push
sti
jecxz
push
mov
adcl
pop
gs
scas
inc
cld
popf
lods
sahf
cmc
daa
je
je
cmp
inc
sbb
pusha
jge
fdivs
loop
xor
jno
testb
lret
aam
adc
mov
mov
xor
repnz
sbb
xchg
add
in
jmp
aad
test
push
dec
loope
pop
pop
repz
xchg
into
ja
pop
loopne
test
xchg
xchg
add
aas
sahf
xchg
jae
daa
dec
decb
mov
add
mov
stos
icebp
test
jge
sti
sbb
hlt
popf
push
repnz
pop
insl
mov
pop
jmp
cld
cmpsb
in
cltd
inc
mov
mov
in
cmp
pusha
pop
jp
inc
mov
popa
and
movsb
movsb
fsubrs
lret
dec
sub
cmp
push
jmp
mov
mov
sub
movsb
test
mov
mov
and
push
jae
in
xor
jb
mov
pop
out
sahf
arpl
mov
mov
cmp
aas
leave
cmp
adc
xor
mov
in
fmull
xchg
shrb
movsb
xor
mov
inc
insl
testb
iret
scas
pop
lcall
aas
and
mov
in
cltd
sbb
fs
sub
mov
lock
out
pop
test
xor
out
add
jno
fs
jbe
fidivrs
dec
pusha
cmp
cli
or
dec
push
imul
push
sbb
cmp
or
and
pushf
pop
xor
or
xchg
nop
add
roll
test
sub
sbb
or
and
mov
imul
in
cwtl
pusha
loopne
push
aas
loop
or
dec
sbb
mov
mov
or
sub
xchg
cmp
cmc
fwait
shl
add
loopne
xchg
dec
gs
add
nop
mov
das
fisttpl
mov
dec
add
daa
in
cmp
dec
mov
dec
push
cltd
insl
inc
mov
cmp
rcrb
scas
clc
insl
in
fldt
cmp
adcl
jp
fsub
inc
mov
push
sti
ljmp
es
push
push
orl
enter
mov
jns
aas
mov
mov
cltd
jns,pt
jle
fwait
mov
mov
push
pop
sub
inc
cs
xchg
sub
data16
arpl
outsb
jl
mov
js
imul
jmp
or
nop
adcb
xchg
jns
imul
or
sub
repz
pop
jnp
cltd
lods
add
pop
pushf
cmpsb
xchg
mov
subb
lock
mov
inc
cmpsb
sub
sub
sbb
sub
cli
add
testb
setae
adc
test
push
ret
mov
xchg
xor
xlat
adc
lret
cli
stos
sub
out
cmpsl
hlt
jl
lds
lds
xor
add
xor
push
dec
and
add
in
fsubp
in
xlat
add
or
sbb
loope
movsl
and
lret
adc
pop
adc
aad
inc
and
xchg
push
xchg
mov
imul
dec
mov
ljmp
lret
xchg
stc
addr16
out
sub
repnz
push
jge
mov
mov
lret
dec
cmp
cmovb
pmulhw
xchg
lcall
imul
and
push
cli
mov
dec
inc
mov
jl
aad
jecxz
or
jecxz
idivl
sarl
and
cltd
xorl
or
call
test
loopne
outsl
arpl
mov
dec
dec
stos
push
cmp
ljmp
cli
cs
sbb
es
shl
repnz
cmpl
mov
mov
int
vmwrite
dec
sbb
call
lock
out
lods
stos
mov
inc
ds
fistpll
leave
fsubrl
add
cs
jg
incb
insl
pop
add
add
gs
pop
mov
ret
push
mov
sub
outsl
scas
loopne
mov
dec
push
cmp
popf
frstor
or
icebp
inc
xor
sub
push
xor
sbb
adcb
icebp
xor
push
sbb
cmp
add
test
and
mov
sub
shlb
inc
sbb
out
adc
jbe
sub
pop
push
add
lods
mov
and
loopne
sub
out
cmpsb
popa
xchg
xchg
adc
sbb
mov
mov
popf
aas
dec
dec
out
aad
add
js
ljmp
sub
idivb
cmc
sti
ss
inc
cli
xor
lret
je
ljmp
pusha
out
leave
shll
es
pop
hlt
adc
cmp
sub
mov
aam
xabort
or
push
add
xlat
push
je
pop
adc
sbb
mov
out
cmp
imul
jb
dec
pop
into
add
mov
xchg
adc
loopne
bound
push
sbb
cli
ficoms
push
fwait
cmp
sub
dec
les
popa
xor
add
sub
sar
jg
ret
lds
aaa
cmp
call
dec
cmc
add
push
fiaddl
daa
and
mov
xor
jmp
jb
dec
xor
fidivrs
jne
jecxz
les
mov
xchg
push
roll
jae
cld
pop
call
int3
in
adc
jl
ret
arpl
cmp
mov
push
repz
or
inc
test
call
mov
mov
mov
in
push
add
gs
pushf
movsb
iret
test
mov
push
aaa
hlt
mov
xchg
dec
xor
imul
lahf
jnp
pop
das
xor
push
movsb
out
clc
sarb
mov
leave
xchg
in
cmp
iret
sub
lretw
mov
out
xor
xchg
clc
mov
pop
adc
clc
icebp
test
test
es
decb
dec
jmp
int
adc
outsb
push
mov
cmp
inc
test
jge
test
xchg
and
cli
lret
pop
sbb
insl
std
ret
adc
jecxz
dec
je
in
mov
insb
jnp
xchg
gs
push
dec
imul
add
adc
cwtl
call
jae
mov
lods
jo
add
pop
cmovg
dec
packuswb
test
push
addr16
adc
loopne
scas
je
out
mov
or
ljmp
pop
out
imulb
xchg
sbb
leave
cltd
aas
cmp
mov
xchg
add
jge
push
iret
jnp
clc
out
inc
scas
repnz
rcll
loope
dec
adc
cmc
ss
xor
mov
or
push
adc
jns
fs
lahf
dec
gs
mov
and
in
pop
fists
out
mov
inc
fwait
or
out
loopne
imul
mov
lea
lcall
nop
push
in
inc
test
call
jg
adc
xchg
out
mov
xchg
lcall
push
arpl
ret
xor
lret
mov
or
xor
scas
sub
cwtl
out
ja
lock
lds
sub
pop
xor
sub
rcl
xor
mov
ss
cmp
addr16
adc
lahf
jnp
mov
inc
pushf
mov
stos
jno
imul
mov
jge
ja
and
int
xor
jno
pushf
in
sbb
pop
adc
andb
inc
les
ret
subb
ss
mov
mov
aas
xor
adc
xchg
pop
popf
xor
dec
scas
hlt
push
out
stc
mov
scas
int3
dec
imul
inc
xchg
push
fwait
jne,pt
dec
jne
lcall
fwait
add
aam
or
xchg
sahf
aad
push
sbb
add
lock
xchg
sbb
into
imul
fs
push
daa
and
test
inc
cmp
mov
jle
push
xor
push
xchg
leave
iret
push
mov
xlat
clc
movsl
sub
int3
mov
cmpsl
mov
jno
fistps
or
mov
lret
push
ss
adc
pop
xor
pop
mov
jo
cmp
mov
jp
inc
pop
into
xchg
dec
stos
inc
add
sti
repz
fdivl
test
or
out
insb
sub
fwait
jmp
add
cltd
or
lods
mov
mov
jg
ficomps
aas
sbb
int
inc
mov
cmp
divl
ja
pop
and
push
mov
pop
jno
in
cmp
mov
int
sti
xchg
inc
pop
mov
xchg
scas
popf
cwtl
adc
adc
cmp
ds
stc
pop
cmp
mov
clc
add
mov
imul
call
or
jge
icebp
mov
inc
lret
and
pop
ret
rclb
dec
call
outsb
stos
daa
ja
test
stc
mov
jnp
repnz
mov
jbe
xchg
js
push
inc
in
lret
data16
test
mov
shl
stc
clc
lret
andb
or
addr16
jle
rcll
add
subl
inc
orl
inc
and
outsb
inc
jl
xlat
or
clc
cmc
shll
dec
and
sbb
nop
cmpsb
dec
jno
xchg
lods
mov
shrl
test
rorb
adcb
enter
dec
pop
not
ds
sbb
ret
adc
divl
sub
lds
cmpl
xchg
adc
mov
push
adc
mov
bound
xchg
mov
lock
mov
pop
cmp
sbb
sbb
sbb
sbb
cli
fiadds
xchg
jge
pop
imul
push
xchg
mov
adc
jne
mov
jo
jae
cmp
std
aad
sbb
mov
and
sub
repnz
push
xchg
popa
add
xchg
pusha
push
mov
mov
dec
das
lcall
inc
lods
sbb
jecxz
inc
sub
movsb
xchg
sbb
outsb
fisubs
int3
xor
xor
jge
bound
xor
mov
xchg
xchg
xchg
add
and
jge
add
lods
insb
jns
mov
in
sbb
lods
adc
sti
repz
dec
push
inc
sahf
aam
cmp
jle
call
cmp
lds
inc
xor
into
data16
adc
or
call
jo
dec
jbe
jg
dec
inc
loope
fcoms
or
stos
enter
loope
shrl
pop
dec
jnp
outsl
or
sub
mov
mov
xchg
xor
pop
sbb
mov
je
add
push
cmp
jo
enter
scas
mov
je
sbb
cmp
mov
lahf
push
mov
cli
inc
lods
adc
mov
xor
es
xchg
ror
jge
mov
dec
lahf
push
sarb
xchg
dec
testl
loop
jbe
outsb
mov
aad
gs
pop
pop
jmp
push
push
cltd
int
xchg
mov
loopne
sahf
fiaddl
mov
jge
mov
jb
xchg
stos
aaa
mov
mov
imul
sbb
mov
cld
sbb
shlb
setp
xchg
mov
cmpl
xchg
aam
pop
scas
imul
or
dec
loope
sbb
ret
dec
or
in
push
sbb
loope
jo
jecxz
stc
jae
cmpsl
jmp
sarb
nop
mov
xor
out
xor
mov
and
shl
mov
movsl
fstpl
imul
sub
jnp
dec
test
sahf
cmpsl
cmp
or
int3
nop
jg
jb
scas
sarl
cmp
pop
ds
mov
mov
mov
dec
sti
nop
jle
and
or
pop
push
and
fs
cmp
push
shll
shl
negb
mov
xchg
out
sbb
fs
jg
fcmove
test
enter
enter
sub
in
in
mov
mov
push
lret
les
out
out
xchg
cmp
aaa
ret
popa
sbbb
push
mov
sub
add
push
or
adc
pop
sub
jns
subb
ja
mov
mov
sbb
aaa
ja
fsubrp
insl
test
repnz
push
push
aaa
pop
pop
jno
into
ret
add
in
lods
sbbb
add
aad
jle
push
das
outsb
leave
xlat
aam
xor
pushf
daa
icebp
int
cmpsb
or
in
jns
adc
ror
and
imul
sbb
out
pop
ljmp
inc
mov
mov
pop
rcll
mov
lds
mov
mov
in
push
movsl
stc
cmp
sbb
xchg
int3
and
jae
push
xorb
cmp
push
jo
and
mov
jae
adc
push
out
ret
aad
mov
push
sbbb
insb
push
mov
mov
mov
xchg
popa
jae
mov
xor
pusha
pop
loopne
cmp
add
add
and
sbb
xor
xor
loopne
sub
test
mov
ds
andb
xor
push
mov
lock
fiadds
mov
xchg
mov
movsb
and
fildl
sbb
pop
push
dec
push
mov
mov
iret
scas
fidivrs
in
jle
jno
xchg
lret
fbstp
adc
push
push
inc
mov
pop
loop
subb
cmpxchg
sub
xor
sbb
stos
push
push
stos
sqrtps
mov
stos
sub
outsb
ret
ret
push
sub
sar
subl
pop
movsb
rclb
test
xchg
xor
shll
insl
inc
mov
mov
sbb
je
or
pop
addl
adc
inc
lret
xchg
push
mov
cmp
pop
mov
frstor
call
loop
in
mov
imul
cmp
and
movsl
gs
xchg
subl
cld
push
or
loop
mov
dec
lods
xlat
out
dec
shl
inc
aas
fstpl
rcl
fs
mov
xor
clc
mov
sub
jns
adc
add
mov
inc
xchg
xchg
pop
ss
add
pop
int3
loope
cwtl
sub
pusha
xchg
repz
add
add
add
mov
jne
xor
loope
test
lods
aas
in
js
cmp
sub
push
out
pop
fadds
lahf
cmp
inc
movsl
outsb
mov
hlt
jae
testb
add
add
inc
out
pop
inc
cmp
mov
outsl
push
or
nop
sbb
pop
addr16
dec
sahf
dec
fs
enter
sbb
xchg
adc
mov
aam
mov
es
shl
lds
stc
icebp
or
jb
outsb
cli
in
sbb
xorl
sbb
pop
pop
push
xor
rorl
fs
das
lods
dec
mov
add
cmp
dec
xor
pop
mov
cmc
and
cmp
out
mov
stos
mov
rcrl
cmpsl
ljmp
jl
pop
jb
scas
xor
mov
jmp
insb
btc
test
lahf
cwtl
mov
adc
sahf
push
cltd
inc
psubd
ss
push
scas
jns
or
sub
inc
notb
cli
cltd
lahf
test
and
int
pusha
ret
popa
mov
push
xchg
mov
mov
inc
loope
les
cli
xor
cmc
lahf
jecxz
cmp
outsl
pop
popf
pusha
pop
mov
icebp
es
popf
xor
mov
cmp
loop
pop
xchg
jo
push
add
fsubrs
lcall
push
and
push
inc
stc
pop
mov
jb
push
push
out
aaa
push
movsl
addr16
cmp
sub
inc
sbb
lea
inc
mov
dec
push
js
xor
xchg
xor
mov
adc
fidivrl
cmc
add
popf
data16
push
xchg
jbe
xchg
dec
cli
xor
popl
xor
xchg
dec
fbld
les
push
aad
push
enter
or
call
dec
imul
jbe
cmovnp
rolb
dec
jl
leave
je
and
popf
aad
stos
movsl
loopne
pusha
fsubrl
daa
push
cmpsb
test
in
mov
ret
pop
mov
stc
das
cmp
or
cltd
inc
xchg
jae
les
fs
inc
jb
stos
xor
inc
and
rolb
push
mov
mov
xlat
pop
cli
mov
pop
inc
add
push
cmp
int3
aad
push
pop
sub
lahf
sbb
in
cwtl
aad
cmp
test
mov
mov
push
scas
mov
mov
xchg
int3
sbb
aaa
test
pop
mov
push
mov
inc
cmp
mov
mov
xor
adc
stc
das
inc
dec
or
adc
jle
sub
fbld
jne
xchg
push
int
pusha
or
push
inc
jecxz
int3
or
xor
jle
xor
push
pop
mov
dec
pusha
adc
ljmp
xor
pusha
pop
imul
dec
mov
xor
loop
out
test
and
loope
and
in
gs
mov
aad
push
and
test
add
out
mov
jge
mov
or
jp
cmp
fbstp
test
cmpsl
es
inc
xor
sbb
popa
aad
hlt
sub
add
les
sub
cs
and
push
and
cmp
cli
adc
lahf
fcomps
add
popa
leave
pusha
mov
inc
sbb
out
fmul
jge
std
fdiv
mov
movsl
rcr
and
inc
repnz
icebp
nop
xor
add
pusha
and
push
ljmp
repz
push
mov
fistl
push
test
sti
dec
repz
xor
xchg
mulb
cmpsb
addb
jnp
rcr
dec
gs
loop
mov
stc
sbb
fmuls
fs
hlt
dec
and
xchg
sub
adc
popa
jmp
jne
mov
jno
mov
pop
dec
clc
scas
inc
cmp
mov
push
scas
stc
test
imul
jb
mov
out
xchg
fsub
jmp
xchg
or
fs
inc
pop
outsb
adc
loop
in
inc
ss
ljmp
pop
jmp
adc
mov
adc
inc
sti
cli
sbb
mov
pop
and
orl
mov
shlb
pop
and
sub
mov
shlb
pop
mov
arpl
sub
shl
out
addl
pusha
popf
out
leave
lods
test
movsw
out
std
sub
hlt
cmp
xor
out
dec
sub
shll
test
sub
and
cmpsb
loop
addr16
xor
jno
prefetchnta
out
dec
add
lds
push
sbb
or
lret
lods
pop
lret
pop
adc
in
mull
cmovp
imul
or
test
stos
xchg
shrb
ffreep
dec
arpl
or
dec
xchg
pop
in
sti
xchg
fistpll
sarl
rcrl
stos
push
cmp
ljmp
and
sbb
es
icebp
movsb
mov
mov
out
pop
push
xchg
mov
notb
clc
mov
aaa
in
xor
dec
shll
xchg
sub
mov
push
dec
push
fsubs
cld
ja
dec
xchg
pop
push
jne
sub
add
mov
les
cmpsl
sbbl
sbb
mov
mov
arpl
cmp
mov
imul
cltd
pop
stc
sti
sbb
ds
xchg
jl
es
or
cwtl
in
mov
cmp
mov
jo
mov
mov
mov
xchg
insl
outsb
in
arpl
insb
xchg
lahf
mov
dec
mov
jp
int3
leave
jl
push
mov
out
push
add
add
and
push
je
jne
in
and
cmp
push
stc
ret
adc
mov
stc
mov
add
insl
sbb
inc
or
mov
loope
mov
cmpsl
into
mov
mov
lods
and
out
aam
cmpb
scas
push
test
xor
sub
das
pop
push
jmp
insl
and
sbb
cmp
insb
adc
jge
movsl
push
inc
and
xchg
out
dec
cltd
sbb
clc
xchg
test
xchg
js
in
or
scas
sbb
pop
out
dec
shll
lahf
ja
pop
sahf
pop
loop
push
ficompl
xchg
popa
subb
jae
jl
pop
in
cmpsl
and
mov
jecxz
or
xlat
push
inc
or
push
jo
dec
add
push
push
push
push
jbe
push
out
xor
rcl
pushf
pop
ds
dec
in
jne
cld
pop
pop
sub
imul
and
push
add
insb
jp
inc
and
test
cli
sahf
data16
mov
ficompl
in
jne
pushf
sub
xchg
xchg
sub
loop
leave
inc
jbe
pop
or
scas
mov
push
enter
add
cmc
out
lock
pop
mov
fwait
and
xor
cmp
xchg
add
jnp
sub
outsb
dec
mov
rolb
sti
movsl
loopne
mov
and
int
jmp
dec
nop
scas
cmp
fsubrs
jge
mov
adc
stos
push
hlt
lret
push
push
jbe
sbb
cmp
or
mov
add
sbb
jne
int
pop
ret
out
enter
sbb
jge
jae
daa
push
or
in
fs
push
pop
imul
sahf
adc
dec
dec
mov
in
xchg
mov
clc
xchg
pop
popw
pushf
shl
push
mov
pop
xor
shlb
push
cwtl
scas
adc
mov
aaa
fcomps
add
lcall
push
daa
mov
outsl
xor
fcomps
test
or
pop
mov
jp
sti
in
movsb
sbbb
cmpsl
xor
das
cwtl
sub
aaa
loop
imul
xor
xchg
inc
sub
stos
mov
cmp
pop
xor
sub
aaa
lcall
lea
outsb
push
push
pop
sarl
add
jmp
dec
into
push
loop
mov
stos
roll
add
xchg
jge
inc
inc
dec
inc
cltd
jecxz
fistl
push
push
push
out
and
adc
mov
ds
fstpt
inc
andb
mov
mov
pop
clc
mov
pop
aam
jecxz,pt
test
cmc
push
aam
rclb
leave
jge
and
dec
fimuls
mov
mov
out
daa
pusha
insl
movsl
cmp
jbe
inc
add
sub
push
xor
add
push
mov
mov
and
dec
jnp,pn
das
fimuls
jno
mov
sub
pop
push
sbb
adc
into
cld
jbe
push
mov
in
push
imul
inc
pushf
ret
ja
stos
lret
pusha
fstpt
xchg
rcll
test
js
nopl
ret
cmpsb
int
addl
movsb
into
mov
arpl
xchg
insb
mov
mov
pushf
and
push
or
and
pop
push
enter
and
hlt
mov
adc
test
enter
fadds
xchg
daa
cwtl
pop
ja
aam
push
xor
out
sub
rcrb
push
repz
testl
dec
sub
fcomi
mov
pop
push
test
fidivrl
daa
dec
inc
dec
das
add
xor
mov
fs
pop
cmp
push
mov
push
mov
xlat
loopne
test
nop
shrb
inc
push
sbb
jp
pop
add
outsb
daa
or
mov
stos
aaa
mov
ret
xchg
cld
je
add
popa
mov
mov
xchg
mov
sub
aas
xchg
inc
sbb
lds
lds
mov
stc
xlat
sbb
rcll
or
xchg
mov
xchg
inc
push
fxch
les
xchg
pop
jnp
dec
cmp
jb
pop
in
lret
lcall
in
addr16
repnz
mov
cld
mov
les
adc
arpl
popa
loopne
sbb
push
stos
je
arpl
icebp
sub
leave
push
and
pop
les
push
out
scas
xchg
repnz
out
hlt
lds
mov
imul
lahf
js
fwait
pop
mov
adc
inc
lds
adc
bound
aad
stc
sbbl
inc
aaa
mov
xchg
icebp
add
stc
mov
sbbb
mul
ret
or
sti
in
jns
and
ret
lods
pushf
je
hlt
push
adc
cltd
js
xor
test
sbb
or
mov
push
test
repnz
out
mov
xchg
andb
cli
or
and
jmp
lods
call
xor
imul
lods
push
pop
add
fwait
xchg
mov
cmc
xchg
hlt
lock
movsl
pop
xor
fimuls
mov
lcall
jp
leave
imulb
push
xorl
gs
sahf
test
sbb
adc
out
and
jno
adc
test
xchg
and
jno
cmp
ja
sub
fldenv
sahf
movsl
subb
scas
mov
in
mov
cmp
ss
adc
pop
sub
pop
mov
cmpsl
cltd
mov
mov
movsl
sub
test
daa
lgs
pop
jne
cwtl
imul
sahf
out
shld
test
enter
adc
add
push
enter
fs
pop
xorb
adc
xchg
or
jae
inc
dec
mov
popf
push
add
pop
stc
mov
mov
inc
jl
and
sti
sbb
or
cmp
xchg
mov
loop
mov
loope
mov
jbe
mov
imul
mov
jmp
in
mov
mov
stos
jno
ss
call
dec
push
lods
push
cmp
adc
xchg
data16
rcrb
pusha
out
aad
ret
xorb
lcall
adc
dec
ds
or
loope
push
inc
jbe
scas
jg
leave
xor
and
jle
inc
test
mov
inc
xchg
scas
mov
fidivrs
outsb
jmp
cltd
xor
lret
stos
out
or
ljmp
loopne
dec
shrb
cmpsl
in
ljmp
sub
cmp
mov
xchg
test
rcr
addr16
mov
ja
rcrl
mov
push
cli
mov
lds
icebp
push
jno
xchg
push
jg
fisttpl
stos
inc
cmpsb
into
xchg
fisttpll
rcll
dec
jmp
fistpl
mov
fidivrs
jno
test
outsb
xor
sub
cmp
adc
dec
push
jnp
iret
fimull
dec
jnp
xchg
js
cmp
ljmp
cmpsb
xor
sbb
or
mov
or
mov
adc
test
sbb
int3
lahf
in
mov
and
bound
pop
mov
push
lahf
xchg
pop
jg
mov
or
lahf
pushf
add
add
stos
or
jnp
lods
shll
pushl
inc
test
push
test
daa
adc
push
js
push
fwait
jecxz
sub
lcall
mov
and
addl
in
push
push
or
in
fisttpll
push
adc
nop
enter
or
es
dec
rclb
xor
fistl
sti
pop
mov
mov
imul
xchg
int
mov
divps
dec
dec
aam
inc
sahf
outsb
add
lock
dec
fists
aaa
bnd
sbb
ja
hlt
jne
xor
push
mov
in
push
xchg
mov
std
adc
push
xchg
adc
cmpsl
cld
hlt
cs
aas
jg
mov
fcomps
cmp
jmp
clc
aam
dec
cld
iret
and
push
call
mov
scas
jne
xchg
mov
jecxz
stc
fdivrl
jge
jne
lods
push
fwait
sbb
fldenv
xor
gs
mov
sub
jns
cmp
sub
neg
fsubl
lahf
lock
push
sbb
or
movsb
stos
lcall
addr16
adc
rcl
popf
or
inc
in
mov
pop
imul
push
xor
jmp
test
cmp
xchg
movsb
sub
xchg
orb
jg
adc
lock
xlat
jbe
sbb
and
cld
repz
add
lods
jg
shrl
imul
xchg
sub
pop
hlt
les
je
adc
loop
jge
jo
inc
sbb
sub
shll
lea
and
fiaddl
mov
cmp
clc
daa
cmpsb
out
push
lret
cmpsl
fwait
sub
insl
fstps
icebp
push
mov
and
test
cmp
jne
lret
pushf
leave
fidivrl
popf
imul
mov
pop
dec
xchg
pop
int
sub
sbb
cmp
stos
ret
inc
sub
fistpll
mov
test
sarb
or
test
pop
mov
sbbl
push
mov
in
fdivs
pop
clc
jbe
aam
mov
lret
ss
out
dec
sub
popa
aad
xchg
and
jnp
imul
mov
mov
scas
sub
xor
leave
fstpt
cli
xchg
add
maskmovq
divl
fdivl
or
arpl
out
jl
and
int3
jo
gs
and
outsl
dec
pop
xchg
aas
shll
push
jbe
bound
cmp
scas
mov
pop
arpl
push
cmp
cmp
xor
jne
bound
lret
cli
mov
dec
and
mov
loope
push
mov
fldcw
cmpsl
shlb
xor
fists
jae
mov
jns
sbb
pop
inc
and
lret
mov
ret
xchg
fsubrp
push
jmp
or
sbb
adc
jno
inc
mov
in
mov
and
int
jne
sub
sti
stos
ss
rcr
inc
jge
push
and
push
jmp
mov
push
ss
stos
lock
cwtl
loopne
mov
jg
inc
jnp
insb
leave
push
add
jp
mov
test
test
or
push
in
pop
add
sbb
or
jg
add
cmp
ja
pusha
xor
mov
xchg
mov
xor
add
and
fldt
add
mov
int
lock
test
xor
mov
xchg
push
ds
jo
sarb
std
mov
inc
int
xchg
jnp
enter
stos
stos
rorl
xor
addr16
adc
testl
and
jle
mov
ljmp
push
xchg
mov
loopne
pushf
and
ret
ja
loopne
loopne
push
mov
fcomps
pop
lods
lods
xlat
add
fiaddl
jae
pop
and
rcrl
ffreep
outsb
jge
cwtl
jns
dec
xor
dec
mov
cwtl
mov
and
es
mov
aas
cmpsb
inc
rcll
dec
aam
and
sti
xor
push
dec
int3
jno
sti
orl
mov
sti
sub
xor
in
scas
ret
roll
xchg
inc
mov
inc
xchg
add
cmpsb
les
addr16
fistl
cli
pop
cmc
mov
inc
fucom
int
in
xor
nop
xchg
xchg
mov
jo
lret
sub
cmp
shrl
test
mov
dec
dec
scas
pop
xchg
bound
ds
pop
popa
lods
pusha
bound
out
out
xchg
mov
dec
mov
or
mov
jae
fidivrs
aad
mov
mov
clc
pop
adc
mov
mov
mov
pop
dec
jl
inc
or
jnp
inc
and
addl
lret
dec
je
sbb
xchg
xchg
jae
addr16
rclb
adcb
xor
pop
popf
ret
mov
ror
ljmp
cld
lcall
adc
mov
jns
mov
adc
ret
outsl
xor
mov
pushf
or
les
jl
stc
inc
mov
jmp
addr16
jge
jmp
xchg
dec
adc
add
pop
xchg
cmpsl
clc
lods
ss
xchg
outsl
xor
je
xor
jns
sbb
jne
pop
icebp
add
inc
xor
pop
lcall
cld
mov
pop
jle
imul
addr16
mov
jmp
sbb
lods
mov
stos
cld
icebp
out
or
gs
ljmp
mov
adc
out
outsb
mov
jg
idivb
xorb
inc
jge
cmp
mov
xor
mov
js
jnp
or
push
mov
push
cmovl
sub
xchg
out
inc
leave
mov
es
lock
xor
lock
mov
sub
popf
int
into
aaa
pop
mov
jb
mov
xor
jp
pop
push
cmp
sbb
adc
mov
push
sbb
add
xchg
ja
int3
jp
xchg
loopne
jg,pt
and
cmp
lds
adc
and
lahf
js
les
fiaddl
push
mov
and
cmp
xchg
dec
sbb
insb
cmp
addr16
out
insl
mov
xchg
in
stc
pop
outsb
add
leave
push
push
add
adc
movsb
sbb
add
cltd
fidivrl
pop
adcb
pusha
cmp
in
aad
out
mov
icebp
leave
jp
test
subb
test
ret
inc
mov
subb
pop
test
push
ja
or
xchg
jp
mov
repnz
jns
addr16
or
sub
es
scas
mov
inc
in
jbe
ljmp
bound
mov
and
lahf
jge
testb
std
sub
xchg
adc
xor
inc
pop
xchg
sbb
shlb
sbb
mov
xchg
xchg
inc
add
aad
es
adc
cld
in
addr16
lret
pop
insl
cmpl
mov
shl
pushf
je
fstl
mov
lahf
mov
imul
lock
or
xor
adc
pop
loopne
xor
movsl
push
or
mov
push
call
jo
sub
add
mov
fcoms
imul
jmp
iret
lret
xchg
dec
int3
movsl
pop
xchg
and
cmp
mov
in
cmp
int3
and
mov
lret
fildll
test
jle
mov
dec
in
dec
or
xlat
xchg
sti
or
jle
ret
pop
jge
dec
mov
cmp
and
push
jns
imul
lea
cwtl
jns
add
mov
and
pop
test
jne
in
iret
ja
dec
inc
bnd
cmp
into
stos
pop
cs
cld
ss
and
add
cltd
adc
or
mov
shrb
dec
sub
and
out
in
mov
jmp
cld
mov
loopne
push
loope
pop
and
test
je
faddp
or
stc
pop
adc
sbb
iret
pop
idiv
adc
sub
stos
sub
mov
dec
hlt
pusha
sbb
mov
and
outsl
mov
dec
fcmovb
bound
dec
cld
mov
xor
jmp
sub
jmp
mov
fwait
movsb
lods
sub
lods
sub
xchg
cs
ret
mov
sbb
daa
pop
dec
adc
push
mov
inc
inc
cmp
adc
in
addr16
loope
or
inc
and
jp
add
or
mul
dec
icebp
std
scas
insl
mov
inc
mov
dec
mov
repz
lods
push
fistpll
popf
mov
push
aad
mov
outsl
pushf
lahf
std
lock
cltd
jns
add
imul
xchg
enter
test
dec
sbb
dec
mov
adc
mov
mov
jbe
jno
jl
sti
or
xor
dec
add
inc
ds
cmpsb
cs
packssdw
pop
call
add
inc
scas
repz
mov
sub
sub
add
sbb
ljmp
lods
adc
stos
ss
cli
inc
pop
cmp
push
jg
in
je
xor
or
xor
xor
sbb
icebp
in
faddl
add
sub
insb
rcrl
loopne
sbb
jno
mov
insb
dec
mov
or
in
arpl
enter
arpl
jge
aam
sbbl
loope
subl
sbb
add
les
aas
jl
mov
push
int
stos
rclb
xor
adc
divb
and
adc
lods
mov
cmp
mulb
outsb
pusha
push
mov
cmp
iret
cs
outsb
loope
sbb
dec
outsb
mulb
adc
and
sahf
cs
dec
inc
push
push
lods
xchg
pop
inc
in
fwait
hlt
mov
in
imul
popa
pop
mov
cmp
fsubp
dec
arpl
arpl
lea
cmpsl
adc
mov
adc
insl
in
ja
in
sub
fcompl
addr16
out
and
xchg
push
cmp
push
mov
ret
sbb
std
xor
xchg
stos
mov
xchg
adc
stos
stos
hlt
stos
lea
lock
or
cmp
clc
dec
aam
cmp
pop
mov
in
adc
icebp
inc
cmp
imulb
xor
lds
je
add
mov
shr
pop
shr
dec
xchg
loopne
lea
ds
mov
pop
jle
xor
cmp
or
add
jecxz
fidivs
aaa
jp
or
repz
aaa
jle
lret
xor
bound
push
sbb
jbe
outsl
clc
lods
cmpsl
push
or
add
add
mov
push
fidivrs
jnp
adc
ds
movsb
jecxz
dec
test
out
ja
add
xor
enter
fwait
dec
jmp
outsb
push
ja
adc
push
shll
hlt
aaa
cmp
int
dec
nop
dec
out
out
cltd
adc
popa
popf
push
dec
js
mov
outsb
push
xchg
push
leave
push
aas
lods
test
adc
xchg
int
movsb
std
stos
daa
cmp
pop
std
cs
mov
fstl
out
js
dec
and
in
xor
dec
mov
jnp
push
adc
gs
ljmp
and
mov
ljmp
test
hlt
add
pop
pop
jle
dec
cmp
mov
jb
jl
fwait
pop
mov
adc
or
adc
lds
sub
aad
mov
sbb
sbb
push
sub
jge
jne
inc
jno
outsb
sahf
mov
add
sarl
pop
jns
insb
outsb
sub
negl
out
push
negb
or
cli
addl
mov
adc
xchg
pop
loope
lcall
mov
call
mov
or
mov
daa
cmpsb
dec
xlat
ljmp
pop
cmp
sub
inc
xchg
xor
xchg
js
sbb
mov
jge
or
dec
int3
pop
xor
ds
pop
jnp
cltd
mov
jle
and
aas
cmpsl
cmpsb
adc
pop
jl
test
int3
dec
fstpl
fadds
xor
cs
lock
inc
mov
je
fwait
mov
jnp
loope
mov
icebp
add
andb
sbb
mov
dec
xorl
cld
outsl
push
in
push
test
xchg
outsb
xchg
lods
jbe
jg
push
or
es
lock
or
inc
sbb
sub
push
into
std
out
push
adc
sbb
pop
cltd
jne
or
jge
movsb
cmp
hlt
xor
leave
or
mov
call
add
jp
xlat
jb,pn
fimull
cmp
adc
adc
or
pushf
mov
cmp
and
cld
inc
add
xor
adc
xchg
mov
inc
push
leave
das
inc
ds
mov
popf
sahf
lcall
hlt
pop
outsb
insb
mov
int3
popf
std
push
push
sahf
sahf
push
pop
xlat
lods
in
lds
mov
comiss
push
aam
cmpsb
or
pop
in
pop
arpl
lods
pop
lret
dec
add
sbb
loope
mov
mov
aas
gs
out
je
outsb
test
pop
int
jns
rcll
aas
xchg
sbb
iret
call
arpl
cs
fs
fwait
dec
xor
xchg
cmp
shlb
push
clc
clc
sbb
jp
frstor
jle
sbbl
xchg
xlat
outsl
movsb
adc
sahf
push
xlat
or
xchg
into
nop
push
adc
mov
fsubr
je
mov
pushf
rorl
jo
aam
and
sub
lds
enter
das
jo
adc
sub
in
jge
jl
mov
mov
xchg
pop
fisubl
xor
daa
lahf
inc
pop
lea
mov
adc
iret
clc
push
or
movsb
xchg
mov
xor
lock
xchg
rorb
pushf
mov
dec
cmp
or
mov
jecxz
inc
test
stc
ss
int3
push
adc
and
mov
and
jne
mov
dec
std
adc
pop
jno
cmp
aam
adcb
mov
push
mov
andb
lret
jg
mov
fcoms
sub
dec
xor
psubusw
aas
popf
es
into
fwait
xor
cmp
test
sahf
mov
in
push
push
shrl
pop
aas
jns
push
stos
leave
adc
lret
imul
in
lods
push
das
adc
push
pop
stc
inc
add
lcall
sbb
cmpl
das
adc
sbb
mov
jbe
fadds
arpl
mov
mov
ret
inc
idivl
push
insb
sub
cmp
and
sbb
or
lea
inc
or
push
inc
inc
pop
xchg
xor
mov
mov
insl
pop
push
hlt
sarb
push
sbb
and
adc
xor
mov
and
xorb
outsl
ret
leave
in
pop
jb
cmpsl
inc
sbb
cmpsb
and
sub
xlat
or
adc
mov
idivl
cwtl
lods
lcall
stos
xchg
mov
xor
sub
jge
cmpsb
out
daa
cltd
shl
sub
jg
or
sub
pop
in
lret
xlat
mov
jl
loope
lds
sbb
sub
pusha
jbe
xchg
nop
adc
scas
fadd
inc
lock
pop
and
xchg
or
pop
mov
jb
push
mov
shll
das
fdivrs
xlat
aad
out
mov
dec
gs
jge
clc
sti
sahf
pop
daa
push
xchg
fisttps
fisttpll
cs
inc
mov
jb
adc
xchg
jno
inc
push
pop
add
and
xor
adc
outsb
dec
dec
iret
jne
sub
ftst
rorl
mov
dec
and
and
inc
xchg
popa
push
clc
nop
mov
cmpsb
out
xchg
dec
leave
test
adc
xchg
push
lret
push
mov
outsb
adc
sbb
push
stos
push
mov
jno
fmul
scas
loop
xor
cmp
mov
sbb
stos
test
and
jmp
inc
cmpb
ljmp
inc
imul
pop
lods
push
mov
mov
dec
jecxz
icebp
shl
lret
shll
stos
inc
std
cmp
mov
mov
cli
dec
pop
add
cmp
nop
shl
jae
mov
jbe
pop
push
stos
mov
movq
rclb
jae
jp
out
push
mov
mov
test
lock
push
pop
std
mov
jbe
mov
test
push
add
add
pop
sti
cmp
inc
mov
nop
pop
shll
popa
scas
inc
neg
jo
jmp
add
mov
xchg
movsb
cmp
aas
mov
push
popf
cmc
scas
and
or
mov
push
insl
das
cmpsb
mul
dec
es
xlat
pop
bound
add
mov
ss
outsb
iret
xchg
jbe
dec
pop
jp
push
mov
loopne,pt
scas
sub
shll
das
lret
jbe
adc
or
pop
adc
or
es
stc
lret
xchg
dec
mov
ret
out
ljmp
mov
outsb
ret
jb
in
mov
data16
xchg
fwait
xor
ljmp
mov
out
push
jecxz
fildl
or
aad
flds
add
repz
xlat
and
xor
mov
push
jne
or
sbb
mov
js
xorb
stos
fdivs
insb
jae
push
pop
xchg
es
dec
flds
cld
jno
pop
xchg
xchg
push
test
loope
lods
mov
out
sub
jns
js
xchg
push
xor
mov
xchg
mov
je
push
cmp
xchg
ret
xchg
ffreep
jmp
inc
out
jecxz
idivb
gs
sbb
fwait
adc
inc
sbb
loop
sbb
std
repz
mov
sub
lahf
stc
ret
lods
pop
mov
sbb
xchg
xor
fadd
xor
add
movsb
stc
sub
je
cs
mov
inc
inc
in
mov
dec
loope
xor
movsl
rcll
jg
cmp
std
ljmp
xlat
push
lahf
out
data16
or
jb
lock
insb
push
lahf
cmp
push
lret
lock
sbb
sub
mov
add
mov
or
xchg
jns
or
jo
add
inc
push
push
cmp
pop
sub
pop
es
out
inc
insb
iret
ret
push
jmp
neg
pop
adc
cmp
push
cmpsl
add
lcall
stos
es
and
stc
loopne
idivb
leave
xchg
cmp
pop
das
and
test
arpl
mov
push
sbb
je
sub
in
in
sbb
stc
xchg
mov
push
pop
inc
cwtl
les
cli
mov
mov
fsubl
iret
fistl
lret
pop
or
imul
pop
test
pusha
push
lahf
aas
xchg
push
inc
sbb
out
daa
jle
icebp
test
in
adc
push
xlat
js
mov
dec
xor
pusha
add
cwtl
or
pop
daa
and
dec
lds
adc
inc
push
daa
push
inc
fisubl
loopne
cmc
gs
mov
jp
stos
or
sbb
push
mov
xor
and
push
fmulp
adc
and
mov
xor
inc
movsb
mov
lock
dec
fisubl
add
adc
imul
fsubp
cmpsb
out
out
out
and
popa
add
pusha
jecxz
xor
ss
dec
imul
fucomp
call
je
aad
jbe
push
sub
inc
mov
xor
lods
lods
les
and
push
push
inc
daa
add
inc
hlt
xchg
sub
add
std
fstl
stos
jecxz
sub
pop
fnstcw
push
and
mov
mov
push
sub
les
pop
xchg
aam
mov
jle
jnp
xchg
cmp
icebp
cmp
or
xchg
push
cmp
in
arpl
push
clc
stos
mov
mov
sbb
popa
cmc
andl
ds
push
mov
arpl
ja
int
mov
and
and
xchg
xchg
leave
mov
sbb
push
sub
dec
mov
gs
add
orl
mov
cmp
insl
movsb
pop
lock
push
inc
ret
push
cmpsb
or
into
adc
dec
addr16
sub
mov
sbb
std
pop
pushf
cs
xor
popf
pop
pop
loopne
hlt
jecxz
inc
jg
or
test
xchg
jno
pop
add
xchg
sbb
xchg
mov
cmp
dec
mov
loop
cmp
mov
adc
das
inc
push
iret
out
test
fadds
cmp
inc
pop
push
mov
cwtl
xchg
inc
out
push
repnz
sbb
pop
cmp
and
mov
shrb
rorl
mov
in
out
xchg
push
rcll
pop
pop
mov
test
aaa
adc
xchg
lret
pop
mov
add
jae
lods
in
xlat
adc
add
xor
stc
shl
mov
jecxz
push
push
cli
enter
xchg
push
inc
mov
or
in
or
fs
fcoml
icebp
stos
jae
out
push
lods
rcll
push
sub
enter
inc
pop
mov
call
lds
pop
out
inc
adc
push
and
nop
lods
jb
and
sub
push
jp
hlt
xchg
mov
int3
repz
mov
cmp
out
pop
mov
fisubrl
mov
jae
mov
push
test
mov
sbb
push
push
xchg
cmp
vmread
and
push
enter
sbb
mov
fdivrs
mov
icebp
orb
orb
jns
lds
nop
adc
pusha
rclb
or
cli
pop
test
rcrl
in
cmpsl
jmp
inc
mov
xchg
xchg
insl
or
inc
push
xchg
idiv
cld
sub
sub
rorl
and
xor
scas
or
lods
mov
push
adc
xchg
and
sbb
and
xor
into
adc
mulb
dec
lock
outsb
fidivs
jae
dec
push
mov
jecxz
pop
negb
ficoml
bound
jmp
leave
popa
hlt
dec
hlt
paddq
mov
adc
mov
xchg
push
mov
je
inc
mov
and
lret
sub
jl
fnstenv
dec
jmp
mov
mov
dec
shlb
mov
xlat
add
push
mov
xor
dec
loope,pn
jmp
mov
cmp
loopne
insl
inc
add
fistl
or
cmc
and
mov
adc
and
push
in
mov
sub
push
in
dec
mov
and
mov
std
xchg
mov
sbb
mov
fisubrs
ljmp
xchg
cmp
mov
test
ja
pop
fnsave
xchg
aad
fbstp
lret
je
aas
stos
incb
push
inc
fidivl
mov
jo
loope
outsl
sub
and
pop
sub
inc
cwtl
pop
sbb
mov
jp
push
inc
lods
dec
xor
cmpb
or
test
push
push
roll
call
dec
fs
jl
insb
add
dec
dec
jecxz
aas
xor
outsb
jbe
cmc
adc
sub
mov
and
in
xchg
je
jbe
jno
loop
je
and
jmp
push
mov
cmpsl
mov
sbb
outsl
sbb
out
rcrl
rcrb
xlat
repz
cltd
lds
mov
and
mov
dec
mov
out
push
adc
pop
aad
lds
cmp
rol
jb
adcl
lahf
sub
adc
fsubs
stos
inc
rcrb
jb
pop
pusha
decl
fdivrs
jmp
add
cmpsl
pop
pusha
xchg
sub
aaa
hlt
pop
inc
popf
daa
sahf
in
out
mov
shlb
adc
jnp
jns
adc
roll
outsb
sub
xor
ret
iret
popf
lcall
and
jnp
mov
jp
sbb
leave
rcll
outsl
in
jecxz
push
cmp
fcmovb
scas
aaa
ret
inc
gs
pop
rcll
push
mov
repz
push
addr16
gs
mov
cli
xchg
mov
stos
xor
jb
nop
cmpsb
xor
mov
dec
and
mov
scas
jmp
or
push
sub
or
loope
fstps
jge
insl
adc
pop
push
and
inc
test
jae
aas
xorb
jno
cmp
adc
cmc
jmp
loop
fwait
sub
inc
jne
aam
push
dec
xchg
or
sbb
push
and
fnstsw
push
stos
jl
ds
mov
pop
push
in
sub
lods
cltd
adc
test
dec
lds
xchg
hlt
ja
mov
add
outsl
fcmovu
mov
or
scas
or
or
rolb
cmp
bound
pop
inc
jb
lods
bound
rcrl
sahf
divl
mov
out
lret
loop
das
rcrl
push
sbb
xchg
or
mov
and
pmulhw
push
xorl
xor
scas
and
pushf
xor
mov
sbb
out
push
jg
adc
mov
mov
add
cwtl
push
adc
test
test
sub
lods
cli
ja
inc
inc
jmp
test
sbb
mov
in
xchg
sub
loope
sbb
jne
pop
xchg
lcall
movsb
outsb
aam
sbb
push
inc
out
js
sti
outsl
xor
jno
jo
vcomisd
stos
jnp
icebp
outsb
mov
or
cmp
push
orl
jae
mov
or
dec
push
lahf
push
adc
in
shrl
data16
nop
or
test
adc
adc
sbb
test
daa
jle
nop
xor
pop
cmp
or
jo
push
xchg
dec
xor
nop
jge
out
mov
mov
mov
xorl
fs
jnp
arpl
xor
aad
out
xchg
out
cltd
mov
pop
cmp
mov
das
push
mov
xor
ds
test
cs
inc
mov
mov
iret
lods
cwtl
or
xchg
mov
into
lret
in
add
dec
mov
jnp
outsl
mov
fmuls
inc
lds
push
sub
add
xchg
mov
pop
and
inc
and
lret
pop
sbb
repnz
stos
inc
sbb
mov
fxch
inc
mov
lea
cmp
aam
ret
imul
mov
jecxz
cmp
dec
aad
add
xchg
adc
sub
inc
mov
sbb
imul
rcr
pop
mov
adc
dec
fcomi
push
popa
in
mov
sbb
iret
push
push
dec
ficoml
mov
mov
imul
leave
pop
bound
mov
jp
in
pop
loop
insl
xchg
stos
jle
xor
loop
adc
cli
data16
or
xchg
sbb
movsl
push
mov
jp
xchg
or
scas
cmp
cmp
jg
imul
jmp
pop
pop
iret
cmp
shll
fdivrl
push
fucom
xchg
cltd
test
push
inc
push
scas
adc
cwtl
and
mov
adc
lock
pushf
inc
shlb
test
and
popa
mov
jns
push
ja
fcoml
pop
sahf
mov
jns
pushf
pop
das
mov
movsb
arpl
xor
cmp
add
mov
push
xor
cmovp
ja
pop
cwtl
mov
fldt
sar
mov
scas
aam
out
lock
scas
push
icebp
inc
ljmp
mov
nop
popf
mov
jp
pop
or
xlat
push
rclb
xor
in
int3
xchg
or
and
mov
pop
pop
jmp
sti
adc
jp
xor
ret
cmpb
mov
jno
mov
sub
push
mov
mov
jmp
movsl
and
fisubrl
dec
push
in
inc
xor
xlat
mov
pop
add
mov
rdpmc
jae
or
sub
aaa
repnz
xor
xchg
cli
rcll
mov
inc
xchg
jbe
ret
std
movsb
adc
addl
and
popa
and
push
xor
or
movsb
xchg
nop
jb
sbb
xor
xchg
push
ss
add
dec
push
pop
inc
jns
dec
pop
incb
inc
bound
es
cld
ret
dec
jge
jo
outsb
outsb
lea
imul
lods
std
mov
jae
idivl
rolb
xchg
push
dec
in
cli
jle
mov
sahf
iret
movb
jnp
popa
jecxz
dec
int3
repnz
sbb
xor
mov
or
jle
inc
adc
pop
out
xchg
push
xchg
les
jg
and
sub
out
sarl
jnp
es
dec
mov
in
mov
in
mov
cli
mov
pop
clc
mov
movsl
ss
or
cld
pushf
adcl
stc
out
int
fnsave
sahf
mov
jl
repz
adc
jg
popa
sub
sbb
aam
dec
ljmp
pop
jp
testl
mov
movsb
stos
cmp
inc
or
jecxz
divl
and
adc
rclb
fs
jl
aad
jne
xchg
push
lds
imul
dec
mov
decb
notb
adc
cmp
pop
das
loopne
cmp
mov
mov
divl
jp
idivl
imul
popf
out
jne
out
adc
cs
test
and
xchg
mov
mov
sbb
fimull
ds
js
repnz
mov
cwtl
ret
dec
mov
mov
in
in
pop
dec
sub
add
mov
leave
pop
inc
add
cs
in
lds
push
cmp
repnz
push
xlat
mov
pop
test
fcom
sbb
sbb
mov
cwtl
push
jb
mov
pop
adc
movsb
cmp
loop
cmpsb
in
out
cmp
push
sarb
mov
insb
sbb
int3
dec
push
mov
lods
lahf
int
int
lcall
fsub
xor
xchg
cld
inc
sar
insb
or
push
jmp
sti
and
fisubrs
test
loope
jecxz
jbe
movsl
fsubrl
pop
int3
cmc
mov
cmpsl
scas
xor
mov
test
mov
inc
aaa
lds
and
xor
out
xchg
inc
jne
decl
push
xlat
sbb
popa
mov
xchg
dec
clc
xor
mov
fdivl
insl
mov
ja
sbb
dec
jmp
mov
push
dec
ficomps
sbb
fistpll
cmp
das
int
push
pushf
jecxz
jne
xor
sahf
xchg
addr16
lock
outsb
xor
add
cmpsb
ja
incb
mov
in
xchg
xor
adc
dec
jns
mov
jbe
into
or
daa
cmc
or
and
adc
scas
aad
mov
push
popf
pushl
add
hlt
jnp
in
and
lds
pop
adc
jecxz
pop
idivl
push
or
shlb
sub
mov
push
dec
sub
mov
clc
xchg
leave
sti
xor
cmp
cli
stc
popf
insl
add
push
lret
or
jns
xchg
shll
loopne
cmp
loop
sarl
push
inc
sub
jb
int
test
int
fisubl
jb
pop
test
mov
mov
push
fildl
jo
pop
push
dec
mov
mov
sub
jb
mov
jge
leave
loopne
xor
ret
xor
inc
mov
lods
adc
ja
sbb
daa
sub
adc
dec
dec
jb
sub
pop
mov
jb
loopne
lods
push
cmp
pop
cmp
pop
fnstenv
xchg
data16
cld
pop
mov
xlat
xor
jae
jmp
repnz
push
cmp
mov
cmp
jno
xchg
jnp
mov
inc
dec
xor
icebp
sahf
sarl
cmpsb
faddl
lds
mov
adc
pusha
std
gs
pop
int
xor
dec
xchg
popf
fiaddl
adc
cmp
out
xchg
sbb
jmp
subl
fdivl
stc
jb
xchg
pop
push
mov
dec
call
sti
ja
sub
xor
adc
stos
cmp
fstl
cs
pop
sbb
mov
xchg
xchg
xchg
jae
xchg
xor
adc
aas
das
inc
add
push
adc
or
mov
jns
mov
pop
push
mov
movsb
dec
insl
jle
aam
shr
jae
xchg
test
jmp
dec
outsb
fnsave
push
push
shl
cmp
out
ds
adc
dec
imul
ret
pop
fdiv
jne
mov
ret
and
cwtl
repnz
xor
xchg
adc
cmp
or
xchg
fadd
insl
fstl
ret
test
daa
incl
pop
pop
mov
mov
mov
push
pop
mov
shrb
and
jg
hlt
pop
jge
xchg
and
push
addr16
and
daa
cwtl
aam
mov
xor
out
mov
push
js
add
lcall
add
cmp
inc
inc
mov
add
fs
jo
jle
xor
mov
rol
loop
push
jge
xor
pop
dec
mov
lcall
clc
and
insb
insb
dec
mov
sahf
fldl
mov
xor
push
iret
sub
data16
jg
fs
or
int3
dec
ror
xor
add
cmp
jge
pusha
sbb
adc
cmp
aaa
out
inc
xor
stc
sub
mov
ss
sbb
mov
aas
push
fs
push
pop
test
rcr
inc
mov
in
lods
xor
inc
lret
xchg
xor
imull
push
inc
fnsave
addr16
lcall
or
clc
shrl
aam
int3
int3
mov
jmp
mov
jecxz
jne
nop
adc
sbb
sahf
nop
cli
push
hlt
das
cmp
jb
bound
rolb
xchg
mov
push
frstor
mov
xchg
dec
orb
push
loopne
push
sub
sbb
repz
add
in
jle
inc
xor
push
adc
add
mov
add
push
call
push
shll
jl
mov
bound
add
adc
sbb
ret
mov
das
push
movsb
mov
jmp
cmp
into
mov
out
mov
cwtl
inc
jb
xchg
xlat
fneni(8087
aam
pop
scas
push
loope,pn
inc
rcrl
repz
add
push
adc
pop
popf
inc
sub
sub
inc
jne
mov
in
and
pusha
lret
mov
enter
pushf
data16
lods
add
aas
jg
bound
inc
out
sbb
pop
lock
xor
push
imul
or
dec
push
xor
les
int
pop
lret
push
dec
jae
imul
lahf
and
xchg
shl
lods
imul
stos
outsl
xchg
and
imul
adc
pop
jle
out
js
jne
and
repz
test
adc
push
xchg
push
or
imul
xchg
jg
mov
add
adc
inc
sbb
ret
add
ret
xor
xorl
mov
orl
out
push
adc
aam
movsb
orl
or
or
add
xor
pop
scas
js
push
sbbb
mov
arpl
int
pop
ljmp
push
cmpsl
sub
scas
out
fadd
sbb
lret
inc
stos
xor
sbb
ljmp
lea
enter
mov
mov
rclb
dec
pop
in
hlt
iret
fdivrs
xchg
aam
ficomps
fimuls
aam
mov
mov
out
xchg
lds
hlt
cmpsb
insb
outsb
lock
std
and
pop
dec
mov
in
outsb
sbb
ret
lea
mov
arpl
negb
inc
ret
sub
fwait
pop
mov
ds
push
fs
inc
jle
pop
cmp
rclb
test
hlt
hlt
and
call
xchg
xchg
adc
enter
push
fwait
mov
int
mov
cmp
mov
dec
push
ret
pop
inc
adc
jge
push
imulb
icebp
sahf
push
leave
jae
sub
addb
cmpsb
xchg
mov
pop
inc
xchg
pop
lret
push
cmpsb
pop
inc
or
or
or
mov
mov
fidivrs
call
aaa
test
lods
fidivrs
lock
daa
dec
adc
mov
mov
addb
xor
cli
test
stos
and
sub
test
jae
mov
xchg
jns
inc
inc
out
inc
lds
push
push
inc
pop
movsb
cmpsb
sti
es
aad
ds
mov
xchg
pop
sbb
jno
das
or
and
jl
push
xchg
shlb
shlb
xchg
leave
or
sbb
inc
jae
push
sub
enter
jns
les
or
mov
mov
xchg
int3
mov
mov
pop
outsb
mov
jmp
vcvtss2sd
pop
pushf
mov
xor
pop
in
cmpl
aad
push
inc
sbb
sub
pop
imul
mov
sub
or
in
adc
xchg
iret
stos
fs
out
cli
push
and
mov
dec
mov
lahf
push
loop
pop
imul
pop
xchg
out
ds
xor
test
jbe
mov
hlt
jnp
fldcw
mov
mov
mov
fcomps
sbb
xor
packsswb
adc
jmp
sbb
mull
outsl
push
mov
sub
mov
loop
and
pushf
pop
bound
xor
dec
sarl
inc
adc
push
jnp
mov
lock
push
imul
push
out
xlat
adcl
cmpsb
mov
inc
adc
mov
icebp
das
adc
add
aam
mov
add
out
imul
popa
fisttps
lds
mov
clc
rorb
or
cwtl
mov
add
cltd
insl
or
mov
and
clc
imul
push
jnp
dec
push
fsts
xor
or
or
pop
mov
sar
push
inc
decl
push
jmp
imul
ss
cmp
lods
pop
add
push
dec
cmpsl
mov
and
push
pop
dec
lcall
ficompl
out
inc
les
mov
or
jo
push
pop
mov
inc
in
gs
test
mov
sub
sub
xor
dec
pop
mov
inc
inc
cmpl
loopne
popf
out
jg
xchg
push
cltd
sub
sahf
mov
aad
sahf
adc
iret
adc
rol
inc
shl
jl
dec
jno
insb
push
cli
sbb
fistpl
push
dec
in
das
xchg
fstpt
push
fldl
loop
xchg
sarl
jmp
aas
push
andb
ror
push
loopne
cmpsb
sahf
data16
aas
stos
mov
scas
popf
mov
mov
ljmp
fwait
leave
push
mov
arpl
jmp
sahf
mov
fwait
scas
dec
and
std
outsl
sbb
aas
jbe
sbb
inc
pop
or
adc
xor
jecxz
mov
cmc
sub
scas
or
dec
dec
outsb
adc
pop
in
and
adcb
add
adc
pop
pop
xchg
ret
dec
shr
xchg
sbb
dec
sti
push
cmp
loope
sub
out
cmpsb
add
mov
movsl
mov
in
sbb
clc
mov
jne
push
lret
cmpsl
fs
popa
lcall
dec
cmpsl
call
sub
add
test
mov
popf
jns
jge,pn
ret
mov
int
push
push
pop
mov
lcall
sub
xchg
ds
test
in
xchg
add
push
mov
or
pop
or
add
cmc
addl
insb
jnp
mov
cmp
mov
popf
lahf
sbb
push
rclb
cmp
cli
lret
jbe
das
fisubrl
jbe
int3
pop
pop
andl
call
or
pop
ret
ret
loop
push
neg
stos
iret
aas
es
or
filds
lret
lahf
xor
cmpb
and
sahf
imul
rcrb
mov
jg
dec
shl
sarb
xchg
and
jno
push
jo
mov
cmp
nop
or
mov
loop
mov
jnp
ljmp
add
and
dec
js
jmp
arpl
jnp
out
ja
and
xorl
jl
push
in
xchg
mov
out
sbb
sbb
xor
jnp
pop
fldl
xor
inc
and
xor
mov
add
jb
flds
jg
hlt
mov
xor
push
mov
jns
scas
ja
jb
bound
pop
shll
jmp
xlat
scas
dec
std
dec
in
enter
jle
inc
pushf
pop
inc
or
mov
xchg
and
les
scas
sbb
fistpll
ja
pop
pushl
popa
and
jp
out
mov
in
outsb
out
andb
mov
sbb
enter
dec
fwait
ud2
xlat
sahf
es
xchg
adc
cmp
lock
and
loop
mov
pusha
inc
rcrb
adc
insl
push
dec
mov
shrl
push
pop
iret
addr16
or
out
sbb
xor
pop
adc
insl
nop
shrl
outsl
mov
daa
fstl
mov
cmp
lret
inc
nop
ret
loop
xlat
lock
or
cs
pop
mov
pop
mov
or
in
and
adc
fdivr
fiaddl
ljmp
popf
push
outsl
jae
or
adc
out
rcl
lds
inc
and
aad
xlat
aas
pop
dec
mov
mov
roll
xchg
cmc
mov
out
scas
cmp
pop
cmp
fiadds
cmp
and
shrb
loop
jg
aas
ret
lea
scas
scas
adc
mov
pop
sbb
and
xchg
add
js
or
or
dec
pop
inc
inc
inc
in
jp
out
pusha
xchg
adc
scas
nop
add
mov
das
jp
jb
lcall
mov
ljmp
rcrb
insl
inc
pushf
rcll
mov
inc
repz
out
test
pop
enter
inc
icebp
loop
lret
or
daa
mov
xor
jle
int3
daa
enter
dec
or
or
shr
mov
out
pop
pusha
xor
int
pop
xor
or
repz
jnp
sahf
test
mov
cltd
xor
int
mov
pop
aam
stos
jmp
mov
sbb
sub
mov
rcrb
pop
mov
and
into
popf
faddl
xchg
lcall
lret
adc
push
outsl
fwait
std
fstps
stc
mov
sti
cmpsl
lcall
sbb
cli
jge
push
cmp
xor
icebp
fildll
mov
hlt
sbb
sub
sbb
pop
scas
fisttpl
je
mov
push
sub
cmp
jns
mov
fs
jge
mov
movsb
mov
cwtl
and
movsl
outsb
lahf
sub
xchg
push
bnd
or
jge
jb
mov
jge
inc
cmp
testl
and
cltd
stos
push
mov
mov
pop
loopne
push
xchg
xchg
mov
xor
cmp
cmp
lcall
into
mov
sbb
push
jno
add
lea
pushf
dec
pop
inc
mov
inc
jnp,pt
cmpsb
out
lock
xchg
js
xchg
push
movsb
and
jno
gs
sbb
xlat
jo
pop
jae
add
inc
push
pusha
inc
in
movzbl
rcrl
aam
xorl
cmp
aam
inc
mov
daa
mov
xchg
stos
mov
outsb
mov
sti
cmp
mov
fwait
cmp
lea
in
xor
aam
pop
push
mov
dec
add
movsb
add
mov
push
imul
fstps
jnp
pop
xorl
sub
loope
sbb
pop
out
loope
sbb
adc
pop
pop
sbb
push
push
daa
mov
fistpll
scas
cltd
jecxz
les
lea
loop
mov
lret
rclb
je
mov
push
push
out
jecxz
arpl
lods
outsb
push
xor
add
sub
popa
cmp
rcr
int3
and
sub
test
adc
js
mov
add
dec
sub
inc
shll
aad
shlb
jmp
dec
and
inc
mov
xorl
pop
xchg
or
jns
dec
cmp
add
cli
aas
in
xor
jp
rclb
pop
mov
push
pushf
mov
lcall
in
pusha
outsl
cmp
push
cs
xchg
pop
and
pop
cmpsb
sbb
pusha
mov
aas
outsl
sbb
into
addr16
pusha
jno
jae
dec
push
hlt
std
push
imul
fmull
sbb
popf
sahf
fldt
xchg
push
cmp
xchg
inc
dec
mov
adc
jo
scas
sar
jl
negb
lea
and
inc
movsb
call
push
lock
iret
cmc
les
jns
jb
mov
and
xchg
mov
lret
stos
popa
xchg
sbb
roll
test
or
lret
sbb
fisubrs
inc
int
insb
popa
mov
xchg
lahf
mov
js
dec
or
shll
xor
pop
cmp
push
call
fstl
adc
mov
sahf
xchg
inc
dec
xchg
arpl
sbb
jno
pop
imul
mov
mov
jo
sbb
repnz
xor
je
aam
sub
jge
jmp
dec
or
mov
jno
fisttpll
jno
fsub
test
mov
in
mov
xor
and
xchg
mov
pop
jo
lods
push
sti
cltd
mov
jmp
mov
jno
mov
mov
dec
mov
or
in
mov
mov
dec
or
mov
lret
mov
ret
sbb
mov
lods
push
std
dec
inc
ja
pusha
sarl
daa
daa
inc
add
sarl
movsl
into
loop
add
fs
fcomps
jo
push
and
fidivs
xor
cli
inc
roll
xchg
cld
aam
loopne
sbb
adc
pop
shrl
xchg
jg
mov
popa
add
movsl
jne
mov
test
push
cmp
jnp
and
dec
je
xchg
scas
hlt
cmp
pop
jb
aad
dec
mov
add
scas
add
ds
add
jnp
or
ljmp
add
sub
push
andb
into
lock
testl
mov
call
inc
das
test
ljmp
ss
pop
ret
icebp
pop
test
mov
shrl
syscall
idivb
imul
push
scas
les
ret
fcmovb
out
cmp
jp
or
fistpl
jg
sub
mov
xlat
movsl
rorb
pusha
sub
ss
xchg
fimull
dec
or
ljmp
mov
inc
scas
cmpsb
int
push
pop
movsl
mov
lcall
sbb
sub
mov
pop
or
jge
push
or
cwtl
add
xchg
lock
cmpsb
push
pop
or
inc
adc
pop
sub
lea
into
and
cld
or
mov
lcall
in
inc
xor
rolb
and
adc
xchg
pushf
pop
test
add
scas
sub
insl
mov
inc
cmp
jl
divl
cmpsb
sbb
xlat
std
insl
sbb
fs
bound
add
lret
iret
daa
cmpsb
jp
pushf
std
jb
sbb
in
aam
push
mov
out
mov
jg
fldt
sbb
ret
daa
imul
imul
sbb
repnz
in
nop
mov
jo
jle
enter
int3
ret
leave
pop
add
inc
ds
loope
gs
jmp
lcall
push
lcall
mov
sbb
sbb
jmp
or
or
scas
aam
jb
cmpsb
clc
push
sbb
insl
roll
mov
es
push
or
sub
std
mov
js
adc
pop
push
rcll
mov
pop
xchg
cmp
rorb
dec
mov
movsl
push
push
dec
out
popf
fcoms
rcrl
cwtl
in
xor
shll
in
inc
mov
shl
push
sub
out
bound
mov
sysenter
mov
push
test
insb
jl
pop
les
mov
mov
push
sbb
jo
cmp
fidivrl
in
jne
das
vmovhpd
and
xchg
pop
repnz
sbb
int
cwtl
xor
mov
lret
jns
arpl
in
insl
xchg
pop
mov
pop
cmp
jg
mov
out
push
roll
ja,pt
aaa
push
and
aas
pop
mov
adc
sbb
clc
ljmp
xchg
outsb
and
or
mov
jbe
enter
xchg
sti
repz
lods
xchg
xor
test
cmc
pop
jmp
mov
inc
mov
or
sbb
aas
mov
test
mov
push
aas
hlt
sub
mov
insb
loope
pop
and
test
sub
mov
xor
inc
jge
mov
out
inc
fsubrl
add
fs
sbb
or
mov
adc
or
scas
int3
add
jmp
xchg
inc
fmul
hlt
jo
mov
mov
inc
add
out
cli
cmp
mov
push
fbld
pop
dec
aas
adc
pop
mul
push
adc
xchg
push
sbb
shll
and
insb
push
arpl
cld
test
data16
mov
test
mov
cld
sub
sub
xor
fwait
insb
repz
add
sub
fwait
out
addr16
fwait
outsl
lods
sbb
add
push
mov
xchg
push
insl
add
in
daa
ss
mov
aaa
popa
incl
lock
push
cwtl
xchg
and
push
mov
and
nop
jmp
jae
int
aam
jo
or
pop
sub
pushf
mov
inc
fwait
pop
jns
mov
mov
add
in
xor
repnz
cmp
repz
xchg
mov
clc
or
sti
fmull
mov
xchg
mov
mov
pop
out
outsb
jns
stos
sbb
push
xchg
loop
je
stos
sbb
inc
mov
andb
add
xor
cmpsb
inc
in
xor
mov
movsl
push
jmp
pusha
push
and
jbe
inc
int
mov
mov
pop
repz
cs
ss
cmp
pop
aaa
pop
jo
inc
aam
int
loope
jmp
xor
inc
mov
test
and
xor
cs
cmp
fnstsw
test
in
test
fimull
mov
pop
fdivrs
bound
fs
dec
push
inc
pop
mov
repnz
push
xchg
test
ss
pop
push
out
pop
cmpsb
add
jo
mov
push
xor
pop
mov
mov
jnp
addl
sub
pop
xchg
push
sub
scas
pop
pushf
out
sub
inc
lahf
mov
mov
and
dec
and
lcall
les
sbb
jb
mov
int
jnp
pop
xor
dec
mov
loop
cmpsl
repnz
dec
movw
mov
adc
mov
lahf
add
pop
mov
inc
xlat
imul
dec
fwait
mov
cld
sarb
mov
lret
xchg
jno
leave
dec
push
hlt
sub
scas
les
inc
stos
mov
insb
add
sbb
adc
cs
pop
xchg
or
or
jae
hlt
mov
add
lock
jbe
jno
jmp
adc
into
mov
ss
gs
sbb
or
insl
in
jbe
cmpsb
fimull
mov
test
fs
adc
lods
popf
jmp
xchg
mov
push
leave
fbstp
imul
mov
out
fsubrp
popf
popa
push
std
or
mov
adc
ja
xor
sub
movsb
mov
jns
pop
imul
mov
adc
ljmp
sbb
dec
flds
xchg
fstpl
iret
xor
mov
imul
in
inc
aam
dec
outsb
mov
mov
test
mov
adc
add
jne
movd
gs
loopne
push
aaa
sub
loopne
das
jbe
arpl
in
push
test
xchg
and
sub
out
push
dec
fildl
cmp
add
push
jbe
or
xchg
add
mov
int3
out
mov
inc
and
sub
and
push
and
popf
adc
xor
jno
cld
pop
push
fbstp
add
push
movsb
mov
jb
js
push
push
mov
mov
loop
cmp
push
push
pushf
ljmp
pop
xchg
insl
fnstsw
or
in
push
mov
mov
aaa
mov
dec
icebp
mov
popf
daa
xor
mov
addr16
mov
clc
xor
jg
pop
movsl
ret
negb
les
inc
clc
pop
lock
push
push
pusha
mov
mov
fsubrs
mov
and
int3
push
sub
push
or
dec
scas
and
outsb
gs
push
cli
pop
outsb
sbb
and
pop
lods
les
mov
sbb
fwait
dec
or
pop
dec
jl
or
cltd
jmp
pop
sub
jne
subl
imul
inc
jbe
in
psllq
xchg
je
xchg
push
xchg
in
fists
sbbb
mov
daa
std
cmp
in
fmull
dec
femms
xchg
data16
add
orb
xchg
adc
shlb
pop
and
or
jl
mov
arpl
cmp
pop
lds
ljmp
fs
adc
jae
das
xor
scas
push
sbbl
dec
xchg
mov
xchg
js
iret
cld
inc
repz
std
test
mov
lods
popa
roll
xchg
and
out
fwait
cwtl
fisttpl
and
sub
mov
bswap
adc
push
adc
mov
ja
fcmove
adc
mov
adc
in
adc
cltd
adc
and
movsl
cmp
fwait
dec
stos
dec
mov
cli
and
ja
inc
pushf
xchg
sarb
push
icebp
inc
std
lock
pop
adc
jg
mov
shrl
icebp
and
lea
mov
ds
test
cmpsl
cmp
lahf
and
dec
cmpsl
insl
lds
popf
or
out
jne
outsb
xor
bound
xchg
push
mov
es
xchg
cli
ret
cmp
or
xchg
jbe
repnz
loop
gs
jp
imul
push
fstpl
scas
pop
leave
cli
xor
test
pop
dec
mov
jmp
or
mov
xchg
lcall
sti
mov
les
lock
or
pop
jge
std
call
mov
into
mov
lahf
cmc
decb
jns
push
xlat
push
mov
add
lret
or
push
sub
push
in
jns
sbb
and
push
pop
push
sete
or
jp
negl
sbb
lods
xchg
icebp
test
dec
ret
int
cltd
loop
add
inc
or
into
not
xor
je
leave
movlps
sti
ret
idivb
adc
js
push
adc
negb
movsb
aam
adcl
inc
fdivrl
sbb
popf
aas
xchg
test
pop
jle
iret
sbb
add
pop
fisttps
imull
lods
inc
call
mov
pop
sub
jne
data16
pop
jo
add
ljmp
stc
fldcw
jge
mov
mov
add
aas
mov
cld
scas
sbb
cwtl
movsl
jae
mov
cli
lods
sub
cli
or
xchg
and
cmpsb
sbb
lret
sbb
jnp
sti
jge
pop
xor
rclb
push
sub
push
jbe
subl
test
pop
fwait
das
add
lock
repnz
out
nop
movsl
add
dec
pop
jmp
xor
or
bound
fwait
adc
mov
in
lds
mov
hlt
repnz
mov
fsubrl
insl
lds
add
mov
mov
xlat
xchg
icebp
cmpsb
mov
imul
aas
or
push
fstp
in
mov
sbb
mov
out
xchg
outsl
adc
sub
add
push
mov
cmp
dec
inc
out
push
stos
lock
aad
cs
inc
int3
shl
add
mov
jle
fisttps
add
adc
popl
enter
negl
adc
cmp
jno
in
push
push
mov
cmp
fsubrl
mov
xchg
mov
dec
popf
sbb
xor
imul
jno
ret
sub
and
fwait
add
adc
and
repnz
orb
ja
push
inc
xchg
shll
cmc
daa
cwtl
xchg
hlt
pushl
pop
inc
call
pop
inc
mov
imul
mov
insl
sub
pop
shlb
pop
pop
adc
push
inc
cmp
and
xor
fsts
jge
inc
nop
fisubs
movsl
jo
test
xor
pop
sbb
sub
gs
mov
pop
xor
loop
cmp
call
jns
cmp
jge
dec
repz
fwait
mov
outsl
and
lret
ret
add
cmp
cmpb
jbe
call
push
push
lods
dec
lock
sbb
lret
aaa
cmpsl
jecxz
sarl
adc
cwtl
push
pop
adc
pop
or
aas
xchg
dec
jge
sub
dec
inc
pop
cmpsb
jns
aaa
cmpsl
stc
push
mov
aam
add
sbb
jae
jb
mov
jecxz
stc
ss
mov
ljmp
xchg
shll
mov
loope
push
mov
jo
and
pop
sbb
sub
xchg
je
in
dec
sub
orb
mov
fiadds
stos
in
cmp
xchg
inc
arpl
gs
outsb
jge
xchg
inc
add
push
cmpsl
xor
pop
xchg
mov
mov
notl
jb
out
orl
or
mov
out
mov
adc
int
sbb
idivb
les
mov
mov
mov
sbb
out
bound
pop
xor
inc
push
sbb
adc
nop
shll
sub
dec
jmp
jg
push
add
add
cli
popf
call
sbb
pop
addr16
adc
cltd
jmp
adc
pop
mov
bound
inc
aaa
mov
sar
daa
sti
inc
aad
in
dec
dec
fsubl
js
push
arpl
push
xor
push
or
sbb
xchg
push
jno
cmp
cwtl
jge
js
push
call
sbbb
mov
and
roll
lret
repz
push
hlt
stos
cmpsb
cmpsl
lods
dec
push
mov
cmp
rol
or
mov
jbe
add
dec
sti
lea
loope
imul
loopne
fwait
out
std
icebp
cmp
mov
add
aad
push
xchg
xchg
in
addr16
inc
test
push
mov
out
dec
pop
mov
push
add
dec
cmpb
mov
iret
hlt
xchg
in
mov
pop
mov
test
rcrb
mull
js
div
ja
clc
mov
cmp
push
jmp
sbb
aam
stos
movl
xor
pop
dec
icebp
or
call
ret
pop
inc
insl
inc
mov
mov
int
repnz
jp
xor
push
pop
arpl
rcll
cli
dec
sahf
bnd
jnp
sbb
out
lret
stos
sub
dec
test
sbb
mov
xor
cmp
cmp
daa
xchg
test
push
mov
test
addr16
mov
mov
add
xchg
mov
loop
mov
xorl
sbb
int3
leave
and
inc
adc
cmpsb
cld
jg
dec
out
sub
cmp
xchg
ss
jnp
jmp
dec
sub
test
lret
xor
fs
imul
outsl
outsb
in
pusha
pusha
mov
inc
in
mov
vpsraw
or
rcr
xchg
xchg
lret
jbe
jecxz
xchg
in
mov
lods
sbb
rcll
inc
inc
mov
repz
inc
mov
outsl
icebp
lahf
mov
enter
jae
adc
pop
stos
and
inc
mov
into
pop
in
sbb
jmp
leave
call
or
scas
fsubl
mov
dec
scas
mov
jle
cmp
fistl
xchg
jne
jge
add
mov
push
stos
or
imul
addr16
hlt
sub
sub
mov
jmp
push
sub
jne
push
out
lods
jbe
fwait
mov
xlat
ret
sbb
lahf
and
int3
sbb
dec
sbb
data16
fnstsw
repz
push
or
xor
mov
jno
call
test
xor
jge
jge
pop
insl
mov
sub
out
xchg
scas
and
push
int
push
leave
cmpsb
ret
xorl
mov
mov
adcl
cmp
repz
out
std
mov
xchg
xchg
xor
cmp
scas
jl
mov
fldt
dec
inc
addb
add
jbe
xchg
mov
call
jno
sub
jp
mov
mov
cmpsl
push
xchg
loope
ds
or
fdivr
fldenv
pushl
cwtl
or
stos
rcll
dec
repz
dec
lcall
or
jnp
insb
loopne
pop
sarl
jno
sub
out
add
dec
sahf
stos
repnz
xchg
loop
or
push
test
fwait
add
repnz
cmp
add
rcl
jecxz
push
iret
lods
mov
xchg
add
iret
pop
jmp
pop
data16
sub
aad
cli
add
int3
pop
in
push
test
negl
clc
jge
mov
int
mov
stos
cmp
inc
cmp
stc
add
es
xchg
imul
aaa
hlt
lock
lock
and
pop
sbb
data16
std
sahf
out
jge
jbe
rcr
xchg
push
out
or
add
or
nop
adc
dec
repz
sahf
sbbb
cmp
inc
shrb
clc
std
icebp
movsl
mull
pushf
jecxz
push
mov
cmp
rolb
push
cli
test
mov
dec
sub
mov
mov
dec
fisttpl
aaa
push
pushf
arpl
out
xchg
clc
jo
mov
or
es
mov
ret
fidivs
fildll
es
jle
and
iret
jmp
dec
xchg
xchg
sub
inc
and
cmc
scas
mov
imul
lret
into
dec
sub
shll
adc
add
movsl
sbb
imul
cwtl
jle
ret
cmpsl
mov
notl
mov
repnz
imul
inc
in
push
jbe
xchg
add
lds
sbb
stc
stos
loope
push
mov
loop
fsubrs
addr16
add
xor
push
iret
push
xor
add
jns
shll
repnz
loopne
cmpsb
xor
ret
leave
add
and
jns
and
sub
inc
xor
stc
pop
test
sbb
push
xchg
in
lds
xor
cwtl
push
jno
push
sub
mov
push
xchg
ret
lahf
lods
leave
or
cli
jne
or
lret
call
insb
mov
jnp
bound
cmpsl
pop
fsubl
roll
pusha
test
outsb
push
push
clc
xor
hlt
xchg
jae
ss
mov
push
lcall
addr16
jnp
jno
sti
call
push
dec
add
cmpsl
inc
jecxz
mov
fsubr
lds
sahf
dec
inc
cwtl
jne
and
nop
adc
pushf
pop
sbb
or
in
dec
xchg
mov
and
xchg
xchg
mov
inc
pusha
pop
movsb
mov
das
push
mov
xor
pushl
jns
mov
push
bound
lahf
push
cmpsl
popa
dec
add
mov
sub
xor
sar
addr16
aaa
xor
popa
popa
scas
mov
jno
pop
sahf
jne
lock
movsl
inc
mov
loop
adc
mov
cltd
add
gs
fs
test
inc
add
cmp
dec
in
dec
in
or
and
out
fnstcw
ljmp
shll
push
bound
pop
in
rorb
dec
add
xor
nop
pop
outsl
jge
popa
pusha
push
jne
adc
xchg
pop
mov
jbe
div
mov
lea
inc
ds
add
push
fisttps
jmp
scas
dec
push
pop
mov
clc
into
icebp
scas
pop
ja
mov
adc
adc
enter
dec
sbb
test
iret
lcall
jne
cmpsb
aaa
ja
add
xchg
gs
pop
es
push
cmpl
cmp
pop
popa
lock
sub
fidivrl
popf
test
fwait
inc
cmc
pop
xchg
cwtl
movsl
jp
shrb
popa
scas
xor
mov
in
pop
cmpsl
mov
shl
jno
dec
xlat
adc
mov
add
or
xor
sub
hlt
lret
loope
xorl
scas
int
sbb
or
nop
sub
test
adc
in
scas
inc
jle
popa
jmp
cmp
add
inc
sub
add
mov
pop
fldl
jmp
jmp
mov
inc
push
les
mov
jo
adc
movsb
and
cmp
sub
js
xchg
inc
dec
xor
roll
mov
jmp
stos
insl
daa
inc
mov
mov
lds
loope
lcall
decb
jb
into
test
mov
dec
adc
cli
fiadds
iret
mov
mov
push
inc
push
mov
mov
test
push
cmc
add
sbb
int3
mov
xchg
mov
loop
sahf
enter
movsl
imul
and
inc
movsl
mov
insb
popa
xchg
imul
mov
test
pop
cmpsl
pop
icebp
or
jbe
mov
xchg
scas
js
jns
mov
push
popf
sub
inc
mov
inc
xchg
inc
scas
add
enter
mov
pusha
mov
cli
mov
mov
push
xchg
test
inc
xor
pop
js
insb
sub
push
push
jmp
cmp
rorl
add
sub
or
jecxz
pop
test
loope
add
arpl
negb
dec
movsb
jmp
rcrb
inc
add
cmp
mov
mov
fiadds
push
std
pushf
push
or
cmp
loope,pn
adc
cmp
mov
lahf
dec
push
push
push
mov
mov
loopne
and
cwtl
sbb
dec
mov
or
rclb
push
sahf
jl
mov
jbe
cmpl
clc
fdivs
les
in
pop
pusha
sub
nop
out
inc
ljmp
adc
out
pop
mov
dec
cmp
mov
jno
pusha
movsl
pop
xchg
mov
in
in
and
pop
fidivrs
fs
jne
addr16
nop
sbb
fldt
xchg
dec
push
cmp
or
repz
iret
mov
cmp
xchg
clc
or
cli
cmp
shll
cmc
sbb
cld
push
adc
adc
out
dec
add
aad
rol
vpaddsw
pop
dec
jmp
mov
dec
push
push
into
inc
xchg
stc
jp
int
sbb
mov
shlb
pop
test
rorb
mov
mov
add
cmp
push
xchg
fcmovnb
pop
in
push
out
in
loope
mov
popf
add
dec
daa
arpl
pop
or
sub
imul
outsb
jl
add
inc
cld
and
cld
dec
push
add
mov
imul
xor
ret
fstpt
sbb
fidivs
lcall
and
mov
ucomiss
jp
in
jae
push
mov
push
inc
xchg
insl
addr16
movsl
pop
in
aad
push
call
data16
jne
xchg
mov
ljmp
sbb
mov
js
ss
mov
fcmove
adc
out
das
inc
cmp
inc
je
ljmp
sub
scas
js
cmpsb
jns
inc
cwtl
mov
or
push
fdivs
cmp
loop
cmp
fnstsw
test
jbe
push
pop
add
dec
lret
xor
push
test
lods
and
or
jle
int3
jl
stos
pop
popf
jle
mov
pop
dec
and
xor
lret
lock
cli
mov
out
cltd
out
test
sub
push
js
shrb
movsb
addr16
add
rcl
adc
gs
sahf
mov
jno
mov
mov
sbb
ss
popa
in
in
movsb
and
fidivrl
xor
push
and
rclb
and
imul
sbb
add
sub
inc
loopne
add
jbe
jno
cmpsl
sbb
aad
in
ror
push
ret
cltd
mov
lods
fldl
ficompl
std
fildll
jbe
mov
fistpll
cmp
xchg
mov
test
daa
adc
aam
clc
pop
dec
and
push
add
or
xchg
sub
and
jecxz
adcl
insb
in
lods
or
add
fiaddl
cmpsb
pop
fisubl
imul
sub
jmp
popa
xor
ret
stos
xchg
int
lret
jg
adc
sbb
jne
call
mov
push
int3
mov
dec
mov
mov
cmc
pop
sar
push
push
fcoms
sbb
mov
mov
mov
mov
aas
data16
ret
mov
mov
arpl
cmp
push
dec
cltd
dec
incl
arpl
in
push
sarl
daa
lcall
fmuls
js
insl
xchg
clc
push
mov
in
shll
jg
or
insl
or
outsb
pop
fwait
enter
iret
out
pop
aaa
or
aaa
movsb
fs
test
bound
fstl
aas
sbb
push
sbb
adc
arpl
push
mov
fnstenv
js
xor
jmp
lea
or
xchg
scas
sub
ret
stc
imul
movsl
cmc
fists
insl
jmp
shlb
inc
ret
add
sbb
lock
mov
addr16
mov
xchg
jbe
hlt
push
ja
xchg
or
hlt
push
xchg
adcb
mov
xor
outsb
push
jge
sub
pop
out
scas
cld
dec
icebp
ret
xor
mov
adcb
push
xchg
push
shlb
bound
movsl
pop
pop
or
cmpsb
enter
mov
fldlg2
movsb
popf
add
push
sti
push
push
dec
dec
in
xchg
sub
sub
add
inc
jne
pop
jmp
roll
inc
sub
push
inc
fdivr
sbb
insb
push
ja
cs
mov
scas
imul
fadds
fwait
cmp
and
in
aam
xchg
inc
cmp
mov
xor
test
push
mov
mov
outsb
jb
mov
mov
test
xor
sar
jle
pop
pushf
push
les
xor
vmovups
js
loopne
and
std
imul
fistl
push
push
pop
push
dec
cmp
jne
insl
movsb
fwait
push
das
xor
jg
outsl
pop
cmpsb
int
mov
ljmp
inc
pusha
cwtl
lods
popf
out
sub
push
lods
mov
jle
data16
mov
pop
cwtl
push
cmpsl
xchg
jne
xchg
lret
aad
jae
pop
mov
cmpsb
pop
lret
daa
in
dec
mov
sbb
jmp
mov
jg
testl
cmp
fisubl
negb
lea
pop
sar
xor
jb
int3
imul
mov
lods
scas
jb
sub
decl
in
inc
xchg
faddl
pusha
xor
arpl
scas
jp
fwait
sbb
icebp
cmc
cltd
packuswb
jp
mov
arpl
out
sbb
sbb
cwtl
shll
popa
dec
jno
or
xorb
push
test
cmpsb
aaa
pop
and
inc
and
dec
pusha
in
jbe
jnp
addr16
mov
pop
jnp
pop
out
xor
jge
jns
addr16
xlat
inc
mov
ret
les
out
inc
stos
ljmp
push
in
mov
pop
add
xchg
mov
imul
pusha
mov
call
fistl
jno
inc
ret
xor
test
jns
sub
dec
mov
pop
or
and
hlt
mov
adc
adc
lea
sub
jge
mov
pop
decb
mul
hlt
xchg
ss
outsb
mov
pop
mov
push
pusha
fidivl
push
cld
rcrl
mov
sbb
push
lcall
out
pop
mov
lods
xor
adc
add
pop
cmp
cmp
mov
mov
loopne
xchg
call
dec
push
bound
xchg
loope
leave
inc
inc
cmpsl
mov
push
fs
in
cmc
dec
sbbl
add
and
dec
lods
aaa
jle
icebp
ja
ljmp
bound
fwait
inc
stc
pop
push
ret
or
mov
push
mov
adc
test
or
inc
sarl
mov
nop
inc
ret
inc
mov
fdivs
movsb
and
lahf
xchg
sbb
jmp
jp
cmc
add
leave
adc
push
arpl
push
push
mov
xor
jmp
stc
data16
repnz
dec
and
sub
add
outsl
dec
xor
notl
inc
imul
xor
test
sub
in
sub
rol
jbe
xorb
dec
mov
xchg
cmpb
mov
pop
imul
sbb
lock
cli
int3
cmp
add
xchg
shrl
push
shll
pop
loopne
les
out
sbb
movsl
fistps
in
sub
push
sub
cltd
sub
mov
push
test
shlb
ds
cmc
mov
and
js
or
adc
cmp
pusha
scas
mov
int
cmc
cltd
mov
stc
lock
or
push
test
cs
push
jno
arpl
mov
xchg
push
bound
jbe
cmp
cld
lcall
das
sub
stos
pusha
in
fnstsw
les
mov
push
pop
sbb
or
xor
mov
clc
inc
mov
movsl
mov
jnp
roll
mov
or
imulb
icebp
test
xchg
sub
mov
lcall
je
decb
flds
out
xor
cmc
mov
mov
sub
movsb
dec
inc
pop
cld
inc
in
and
cs
orl
fstl
sbb
cmc
mov
icebp
or
sub
std
xor
ficoms
rcl
arpl
out
call
pop
lcall
pop
sub
lahf
and
jecxz
push
fidivrl
es
in
adc
dec
sti
cli
icebp
subl
push
and
inc
xchg
sub
in
jl
mov
mov
cmp
sub
push
jl
pop
std
dec
push
sub
aas
scas
xchg
xchg
xchg
push
aam
lods
inc
out
inc
ss
mov
mov
sbb
mov
pop
cmp
stos
movsb
stos
ret
cmc
sbb
xchg
sbb
movsb
push
rcrb
cmc
outsb
std
dec
sub
pop
test
insb
call
jp
mov
mov
add
insl
sub
insl
cwtl
loopne
lret
pop
mov
aad
cmp
dec
test
ret
mul
dec
push
cmpsb
push
arpl
or
jno
outsb
mov
test
daa
mov
sub
xchg
push
movw
test
or
dec
movsl
adc
scas
fistps
sbb
mov
jne
addr16
mov
inc
sub
sub
jns
dec
pusha
adc
cmp
in
jns
adc
lock
push
push
push
xchg
cmpsb
push
fmuls
mov
push
orl
clc
push
sti
push
leave
ss
aad
subl
jl
sbb
addr16
mov
jae
xchg
shll
xor
push
pusha
ja
jo
jg
sbb
xor
mov
loopw
push
fidivrl
imul
pop
pop
fstl
mull
shlb
dec
mov
ljmp
out
add
xchg
lret
mov
daa
call
pop
cmp
es
scas
jb
sbbb
lret
mov
loop
mov
mov
xorl
jno
inc
loopne
aam
lcall
pop
dec
movsl
imul
dec
mov
xor
rclb
hlt
stos
loop
mov
mov
inc
xchg
xor
rclb
cwtl
mov
adc
in
sub
movb
cmp
roll
arpl
and
push
sub
in
mov
push
lahf
insb
lret
inc
lods
or
xchg
cmpl
mov
bound
mov
fcoms
int3
push
mov
mov
jmp
ret
rcr
and
inc
lods
xor
pop
jo
lds
mov
mov
cld
clc
add
push
xchg
or
int
add
test
js
call
fimull
outsb
in
aas
sbb
aas
mov
sub
xchg
out
loop
leave
into
dec
push
adc
imul
call
mov
xchg
and
mov
out
int
fsubrs
cmp
popf
les
int3
adc
sub
dec
loopne
in
sahf
shlb
mov
and
inc
in
mov
sti
xchg
pop
jne
loope
xchg
pop
daa
std
push
sti
iret
pushf
dec
jne
xchg
jno
hlt
pusha
daa
xor
pop
popf
and
jo
sbb
cwtl
adc
mov
les
test
lret
pop
jnp
movl
jge
cwtl
test
inc
adc
cmp
add
jno
mov
mov
pop
and
icebp
das
or
or
jns
pop
lahf
dec
rolb
loopne
je
cwtl
add
repz
xchg
outsb
dec
and
or
dec
push
push
push
jnp
pop
ror
adc
and
int
stos
inc
mov
pop
fldpi
std
adc
cmp
adcb
in
lret
xor
movsb
testl
adc
dec
subl
popf
add
imul
mov
xchg
xchg
popf
leave
imul
pop
xor
and
data16
call
test
sub
xchg
jnp
pop
cmpsb
shll
shlb
jbe
test
mov
insl
sbb
or
fbstp
scas
stos
pop
sbb
lea
xchg
mov
push
sub
pop
xchg
mov
shrb
dec
cmp
idiv
cmp
rorl
or
or
mov
loopne
push
adcl
add
mov
dec
or
jnp
mov
adc
jg
ljmp
jp
idivb
icebp
mov
xchg
xor
jno
dec
or
insl
inc
push
jno
add
add
inc
out
xchg
aaa
push
gs
sub
repz
adc
xchg
insl
and
xchg
repnz
mov
btr
iret
jl
jo
mov
xchg
arpl
dec
sub
popf
xchg
mov
into
outsb
cmpsb
xchg
inc
btr
sahf
bound
add
xor
sub
ret
in
cli
cmc
or
fsubrs
xchg
push
popf
sbb
pop
addr16
sub
xchg
and
shlb
lds
push
ret
mov
jns
mov
and
sub
out
dec
shl
popf
lea
sbb
mov
ss
jp
pop
jg,pn
clc
cs
outsl
daa
dec
js
repnz
imull
xchg
push
icebp
test
mov
sub
jb
cmp
xor
jge
popf
popa
das
notl
popa
jnp
jno
or
adc
pop
or
test
pop
sbb
push
ljmp
out
jmp
mov
popf
call
add
jmp
out
pop
loope
cmp
sbb
jmp
inc
repnz
jnp
mov
xchg
daa
popf
adc
mov
mov
cld
mulsd
ficoml
jge
addr16
sub
mov
notl
sub
sub
xchg
bound
out
dec
cmp
and
cmpsl
pop
adc
sti
inc
pop
out
adc
lock
xchg
sub
fs
outsb
iret
jge
int
pop
dec
repz
jecxz
stos
les
rdmsr
inc
sub
xor
andb
sbb
test
xchg
pop
cmp
xchg
add
repnz
cmp
pop
pushl
out
call
add
and
in
cs
mov
inc
mov
das
les
dec
ljmp
es
loope
dec
xor
pop
aaa
xchg
dec
fldl
out
xchg
mov
jge
jns
pop
pop
mov
jmp
insb
push
push
ja
xchg
stc
das
dec
dec
cmpsb
scas
mov
dec
dec
sub
fs
adc
mov
aam
hlt
push
stos
hlt
frstor
add
je
and
iret
fwait
dec
sub
sbb
jne
daa
jmp
lahf
mov
or
ja
lds
sbb
sbb
frstor
insl
adc
int3
bound
mov
imul
sub
sarl
fisubl
jbe
enter
and
and
pop
pushf
xor
or
es
dec
dec
xchg
lock
push
cmc
jno
fcoms
adc
in
scas
lods
icebp
out
xor
insl
cwtl
mov
movsb
mov
xchg
nop
repz
mov
mov
mov
cld
mov
push
pusha
jne
pop
lods
cltd
pop
pop
jecxz
jp
cltd
loope
xor
push
add
bound
inc
fstpl
lcall
aas
adc
lock
fmuls
xor
cmp
fmuls
xchg
lret
sbb
cmpl
lret
xchg
ret
and
jmp
sbb
push
pushf
enter
or
test
ficomps
scas
lret
xchg
cmpsb
jne
filds
inc
inc
and
mov
aas
push
jae
and
pop
dec
adc
cmpsb
gs
movsl
sub
rcrl
and
js
call
stc
dec
mov
gs
mov
int3
je
adc
adc
dec
sbb
das
mov
mov
xor
cmp
into
orb
pop
pop
pop
fdivr
stos
mov
and
xchg
push
xchg
test
inc
mov
jle
in
sbb
push
cwtl
ljmp
mov
cmp
sbb
add
lea
repnz
pop
nop
movsl
sbb
test
arpl
pop
adc
bound
in
ret
cs
mov
es
ljmp
mov
inc
jg
mulb
sbb
jp
or
xchg
mov
or
adc
arpl
dec
ljmp
xchg
andb
xor
cmpsl
ljmp
add
mov
call
imul
cmovnp
push
jns
testl
icebp
lds
pusha
movsl
and
xor
or
mov
mov
pop
jecxz
add
sbb
adc
push
pop
out
add
negl
push
or
push
mov
paddsb
dec
xchg
pop
insb
dec
mov
div
jno
scas
das
das
push
jg
jbe
cmp
mov
mov
call
popf
outsl
mov
jne
pop
dec
and
mov
out
int3
imul
adc
or
imul
insl
popa
adc
test
loopne
pop
ljmp
pop
dec
jns
pop
sub
leave
dec
mov
sub
jae
adc
movsl
cmp
scas
jl
or
into
into
mov
shl
fimuls
jge
push
cmc
cmc
mov
in
lea
push
test
dec
movsl
or
push
out
add
aad
loope
mov
lods
shlb
stos
dec
out
ss
iret
mov
stos
pop
ljmp
add
mov
and
pusha
jae
in
mov
out
jge
cli
xor
xchg
jmp
cmc
les
jne
pop
inc
pop
sub
daa
lock
mov
call
xchg
test
je
inc
jno
dec
idivb
mov
mov
push
sub
testb
pop
and
subl
mov
push
jne
arpl
push
pushf
lock
jb
mov
clc
sub
fmul
mov
insl
lods
lock
add
mov
and
mov
cmc
in
or
or
inc
mov
stos
push
mov
inc
mov
fstps
dec
in
cmp
inc
mov
pusha
and
inc
jns
mov
out
lock
mov
aam
mov
jg
push
scas
mov
rolb
in
imul
jne
inc
ja
test
sbbb
cmp
out
push
hlt
sahf
loop
repz
out
mov
push
fsts
push
sub
orb
loopne
mov
dec
sub
jmp
fiaddl
movsl
int3
fistpl
push
inc
stos
pop
dec
rorl
cmp
xor
out
lret
test
add
stos
add
push
cmp
dec
adc
mov
repnz
jae
repnz
xor
mov
push
in
nop
dec
lret
jns
inc
push
aam
mov
imul
jb
push
out
rolb
sbb
cmp
ss
mov
sub
call
sbb
push
insb
sbb
jp
or
fistpll
xor
popf
ds
dec
xor
mov
adcb
push
dec
decb
loopne
or
xchg
fsubl
jnp
adcb
jmp
lock
dec
push
shl
sub
das
mov
in
add
mov
lock
or
std
xor
mov
cmp
pushf
mov
jne
ret
jg
cmc
imul
lods
imul
inc
mov
mov
frstors
add
test
dec
dec
sti
and
sbb
xchg
and
daa
xchg
add
mov
idiv
call
dec
bnd
arpl
int
cmp
icebp
mul
sub
mov
das
inc
out
cmp
sbb
loopne
rorl
cmp
jg
push
sub
aaa
jbe
mov
mulb
out
jl
out
dec
lds
xchg
lods
imul
dec
imul
lret
push
jb
xchg
sbb
cmp
mov
mov
mov
repnz
pop
jl
dec
ficoms
push
mov
mov
dec
xchg
mov
mov
pop
fisubl
adc
cmp
dec
sbb
mov
and
call
mov
jns
shll
dec
sub
xchg
or
or
shrb
cmc
pop
push
leave
pop
ja
sbb
aam
push
rolb
add
in
pop
push
jmp
push
dec
cwtl
icebp
shll
popa
int3
dec
mov
daa
adc
xchg
pop
arpl
test
movsb
out
mov
loope
lret
adc
arpl
out
test
scas
push
in
and
xchg
shll
mov
push
mov
and
cmp
ja
add
cmc
jne
pusha
push
and
or
mov
xchg
mov
roll
movsb
adc
mov
loop
push
cmp
repz
xchg
stos
es
shlb
inc
push
add
notl
fsubrs
inc
sbb
lock
jg
and
jp
int3
push
enter
xchg
rorl
mov
imul
mov
sbb
aas
mov
daa
mov
lods
add
push
rorl
jmp
sahf
xchg
sub
std
pop
ret
ss
cs
ja
adc
jle
dec
clc
push
mov
nop
gs
leave
das
xchg
adcb
sti
mov
jl
imul
ds
call
mov
xchg
lods
popf
push
sahf
mov
aad
cli
fs
and
call
gs
pusha
mov
jbe
fildl
jg
xchg
xchg
inc
mov
push
sub
js
ficomps
dec
clc
xchg
mov
sbbl
add
repnz
fidivl
insl
jae
push
fs
ret
mov
xor
out
xlat
mov
lods
dec
xchg
popf
cmp
mov
incl
divb
inc
inc
stos
mov
or
lret
and
add
xchg
movsl
xor
jecxz
in
mov
sti
adc
xlat
pop
shlb
cmp
sub
test
or
sbb
jns
xlat
xchg
xchg
push
aas
inc
fisttps
push
or
mov
insl
in
mov
hlt
jg
lods
mov
xchg
sub
jle
xchg
fstl
stos
cmc
and
mov
mov
sbb
arpl
insl
nop
test
repnz
pop
xchg
dec
stos
out
mov
test
and
fsin
xor
pop
stos
cmpsl
dec
negb
out
jnp
pop
sbb
cli
insb
fcmovnb
push
clc
in
mov
sub
sbb
pop
testb
cmp
inc
fistpll
mov
push
xor
mov
lret
int
jp
enter
shll
xchg
aam
and
insb
xor
or
lods
push
mov
cmp
insb
push
cmp
sub
test
sbb
movsb
xor
push
gs
jnp
test
pop
adc
test
nop
testl
out
cli
aas
xchg
mov
pushf
inc
add
int3
data16
or
jno
lahf
cwtl
adc
into
dec
push
imul
imul
jg
arpl
aas
pop
and
test
out
and
out
and
inc
or
and
daa
pushf
add
cmp
pop
add
dec
rsm
pushf
dec
add
int
or
cmpsb
je
es
or
rolb
popf
cltd
push
push
adc
add
mov
out
pop
adc
push
and
arpl
push
cld
loop
push
and
adc
inc
aas
dec
push
and
add
push
movsb
rolb
shl
jae
push
xor
adc
pop
les
mov
nop
jns
add
xor
jne
xchg
out
and
lea
or
add
jnp
sub
fcompl
out
lret
int3
aaa
or
scas
push
add
mov
andl
or
mov
cld
sub
in
mov
outsl
bound
data16
jnp
push
push
pushf
pushf
jb
mov
shrl
jne
cmp
pop
into
loope
adc
std
push
add
insb
shrl
push
adc
std
dec
sti
sbb
push
lret
push
out
aaa
call
cmp
shll
and
pop
sbbb
push
or
lods
pushf
fisubl
dec
add
sbb
xor
test
sbb
loope
mov
push
test
xor
sahf
or
mov
jl
jno
push
push
and
std
xchg
loop
loopne
aas
ds
pop
rolb
shrl
outsl
dec
push
mov
mov
icebp
bound
jo
outsl
or
scas
mov
pop
enter
fldcw
jl
ds
mov
or
jns,pt
insl
pop
cmpb
dec
lods
cmc
adc
push
test
adc
sbbl
daa
pop
test
pop
lods
xchg
sub
dec
cltd
imull
mov
push
aas
dec
sbb
fwait
mov
adc
and
pop
jmp
in
int
movsb
idivb
lcall
cmpsb
jno
dec
scas
jl
add
pop
inc
inc
jae
cmp
fidivl
mov
fwait
or
movsb
xchg
out
int
outsb
push
loope
test
cmp
pop
inc
popa
sub
popa
push
jmp
add
xor
cli
jbe
push
mov
cmp
loopne
mov
lcall
jbe
inc
sbb
fs
sub
cmp
mov
mov
imul
inc
out
lcall
scas
outsb
scas
mov
xorb
pop
xor
sub
pushf
outsb
out
or
jecxz
rcll
cwtl
je
push
pop
lahf
bound
xchg
fsts
dec
out
outsl
xor
pop
fdivrs
bound
mov
add
lods
push
ss
mov
movsl
jl
icebp
push
xchg
lods
xor
rcll
jne
lock
adc
loopne
add
jne
enter
mov
loop
jg
push
jb
xorb
pushf
sub
insb
mov
sahf
enter
out
shl
push
dec
and
mov
jb
int3
iret
or
dec
sub
ljmp
filds
lds
and
jecxz
jb
add
mov
dec
mov
mov
sbb
xor
rcll
add
das
mov
mov
sbb
dec
shrb
dec
sahf
pushf
pushf
aas
adc
xchg
push
lods
pop
popf
mov
fcomip
call
add
xor
aas
sbb
cmp
int3
dec
pushf
dec
xchg
dec
fmull
cwtl
ret
popa
cmp
push
mov
dec
or
out
inc
sub
or
mov
pop
arpl
pop
xor
xchg
adc
sub
xchg
js
ss
popf
dec
shlb
pushf
clc
scas
jne
and
xchg
test
into
insb
fldenv
add
mov
cmp
cmp
cmp
adc
inc
inc
cmp
aad
mov
fidivs
ss
orl
xor
push
jge
sbb
cmp
sahf
cli
adc
cld
mov
xchg
lret
std
fisttps
aam
pop
push
xchg
adc
and
sub
js
rorb
xorl
nop
call
push
lret
mov
and
mov
sub
sub
push
andl
cld
ds
or
adc
jp
dec
xlat
jg
fisubl
jo
fistpll
mov
les
sbb
or
out
into
test
gs
push
lcall
pop
cmp
and
pop
rolb
fucomip
pop
aas
out
add
ret
and
dec
jl
jne
and
dec
mov
aad
test
out
jbe
in
mov
aad
test
push
xor
mov
pushf
pop
jle
xchg
sub
sub
popa
adc
mov
and
popf
clc
das
xor
or
test
mull
lock
mov
mov
and
pop
insb
test
push
ficompl
lock
cmp
aam
xlat
and
cmp
stos
sub
push
shrb
es
adc
clc
mov
ljmp
out
cmp
fstpl
pop
or
xor
dec
rcll
leave
add
xor
clc
lcall
add
mov
pushf
loop
mulb
mov
outsl
mov
stos
fisttpll
jnp
dec
xchg
rol
mov
mov
or
int
cmc
int3
xchg
inc
mov
hlt
dec
loop
cmpsb
add
sub
test
xor
dec
test
repnz
outsb
mov
imul
push
pushf
roll
adc
fldenv
pop
clc
lds
adc
hlt
lock
idivl
dec
mov
or
popa
sub
pop
mov
pop
loopne
or
mov
addr16
xor
scas
icebp
xchg
adc
mov
mov
add
sbb
out
js
stos
dec
lret
imul
sahf
dec
pop
leave
jp
mov
jle
xor
repnz
cmc
pusha
jge
push
testl
shll
incl
gs
scas
cmp
ss
sbb
out
fdivrs
jg
cli
mov
mov
pop
fstl
cmp
cltd
pop
dec
arpl
sub
dec
mov
les
or
push
and
mov
loope
push
loop
adc
mov
fcoml
xchg
sub
cs
in
divl
mov
inc
outsl
lret
add
nop
stos
into
push
cwtl
xor
sub
orb
scas
out
dec
xchg
push
fwait
mov
andb
and
pop
xchg
ret
mov
call
fnstcw
and
cmc
flds
loopne
cmp
pop
cmp
push
and
imul
add
sub
ret
add
idivl
nop
addb
js
sahf
jle
and
cmp
push
add
ret
sbb
mov
aaa
adc
mov
imul
add
xchg
pop
mov
mov
xchg
pusha
in
dec
jmp
push
jl
dec
cwtl
pop
filds
fistps
lahf
jb
cmovns
call
rclb
inc
daa
xor
cld
pop
in
sbb
ficoml
gs
decl
or
pop
in
leave
cmp
jo
jmp
dec
push
repz
ffreep
jl
sub
adc
mov
int
sbb
cmp
inc
pop
pop
call
push
inc
sub
shlb
cmp
inc
stos
add
movsb
dec
mov
push
fs
icebp
xchg
xchg
into
sahf
outsl
out
out
inc
int3
scas
sbb
daa
lret
mov
inc
call
mov
pop
sbb
ds
or
xchg
add
lret
push
fsubl
fistl
nop
int3
js
push
mov
leave
repnz
stc
xor
add
sbb
jl
xchg
cmc
mov
rorl
push
arpl
es
pop
push
loop
cwtl
fistpll
in
xchg
int
andl
sub
mov
jno
mov
cmp
push
outsb
sub
insb
out
pop
sbb
sbb
sbb
push
vmload
or
dec
jl
jno
stos
add
xchg
ds
clc
push
push
hlt
pushf
cld
sbbb
or
stc
dec
and
aad
pop
inc
in
cmpsb
xchg
xchg
xchg
sub
clc
jl
pop
fsubr
add
mov
xchg
jle
push
out
fbstp
and
stos
cmpsb
sub
pop
scas
xor
jno
ret
or
scas
xchg
mov
orb
xchg
push
sahf
lcall
jo
xorl
enter
sbb
inc
and
push
add
or
push
push
xchg
out
dec
cmpsl
pop
push
xor
sub
cmpl
fistpll
out
ud0
dec
mov
mov
or
sub
imul
jle
mov
inc
xor
add
add
or
repz
push
mov
xchg
mov
movsl
push
mov
enter
cmp
cmpsb
jns
xchg
mov
cmp
out
sub
ret
and
sub
stos
jmp
add
out
imul
jno
pop
xor
xchg
xlat
jmp
xor
shlb
mov
out
adc
and
scas
sbb
into
test
aas
xor
push
clc
jp
cld
push
hlt
mov
inc
cld
gs
mov
pop
imul
test
out
inc
add
movsb
add
insl
cmc
sub
jmp
add
subb
test
je
inc
in
xor
cmp
aas
jmp
bnd
add
xorl
rol
out
daa
idivl
or
dec
pop
xchg
cli
fdivp
sub
lret
add
push
imul
mov
xlat
mov
into
scas
out
rclb
popa
xchg
or
repnz
inc
out
testw
pop
jp
scas
pop
bound
add
pusha
data16
inc
fnsave
adc
cmp
push
aaa
bound
in
in
mov
mov
es
or
aam
pop
and
adc
in
cwtl
ja
mov
sbb
adc
mov
xchg
call
outsb
movsl
dec
mov
or
xor
inc
pop
inc
and
enter
inc
mov
notl
aaa
sbb
icebp
test
jno
pusha
jg
lret
lea
je
pushf
pop
add
cmc
and
in
in
into
gs
incb
cmc
mov
mov
xchg
and
dec
loope
xchg
or
jae
push
loop
fnstsw
inc
push
add
ret
push
int3
ss
xor
lahf
mov
and
cwtl
add
cmp
push
adc
ss
mov
pop
outsb
dec
divl
test
outsl
cmc
les
ret
dec
jle
pop
add
cmpsb
loope
or
mov
mov
loope
cli
pop
mov
pop
mov
push
mov
and
xchg
dec
dec
out
clc
and
scas
mov
dec
adc
cmp
clc
add
cmp
push
fwait
mov
xor
icebp
xchg
sbb
cmp
shll
mov
loopne
add
sbb
or
shlb
and
cs
ja
push
push
rorl
ds
movsb
sub
push
jo
js
inc
add
pushf
dec
out
sbb
pop
and
jb
adc
lret
pop
mov
xchg
fdivs
cli
ljmp
dec
popa
pop
rcl
out
ret
or
idivb
lret
push
push
add
out
into
pop
aaa
insl
jmp
mov
mov
adc
je
mov
icebp
xchg
lea
cmpsl
aad
xchg
repz
add
fwait
mov
push
push
fisttpll
daa
cmp
outsb
or
and
fsubrp
pop
arpl
sti
mov
jle
ja
bnd
adc
pop
fsubr
bound
and
dec
lock
cmp
enter
fcompl
imul
mov
adc
sub
cmpsb
sub
jp
loop
inc
sbb
ficomps
xchg
and
jo
sahf
xor
xchg
sbb
aaa
cmp
inc
ds
cltd
and
jmp
xchg
or
xchg
jle
lods
xchg
inc
jle
lods
xor
jb
cmp
cld
cmpsb
in
mov
push
inc
jp
adc
loop
testl
jg
or
or
aaa
shrl
xor
das
mulb
mov
mov
xor
mov
shlb
xchg
aaa
mov
pop
adc
lcall
adc
std
lods
inc
pop
xlat
movsb
das
dec
sbb
sub
pop
orb
cmp
rcrl
fwait
jb
sbb
cmp
data16
mov
pop
push
aad
and
daa
outsb
stos
pop
push
sbb
lret
faddl
stc
jno
jl
sbb
cs
cld
dec
cmc
jns
roll
das
adc
les
andb
aam
ss
inc
mov
lods
shrl
dec
and
jb
cmp
aad
mov
stos
stc
sub
repnz
hlt
std
fs
lea
lods
mov
xchg
idiv
cld
sbb
cmp
fidivs
mov
decl
cmpsb
and
adc
or
jnp
pop
adc
sub
loopne
rcl
fsubl
mov
int
cltd
jmp
push
push
imull
pop
pop
in
inc
in
insl
mov
stc
stos
iret
cmc
ja
das
and
sahf
lretw
cmp
int
flds
and
xchg
pop
in
and
dec
sub
mov
add
pop
jae
jecxz
pop
mov
shl
adc
xchg
lret
push
aad
shrd
subl
sbb
into
push
fiadds
outsl
or
jp
sbb
call
or
imul
xlat
push
push
pop
cld
gs
xor
frstor
ret
jbe
lcall
push
cmpl
lahf
mov
scas
pop
loope
jbe
iret
xchg
fstpt
fcomi
add
inc
mov
fwait
xchg
mov
test
add
fistpl
movsb
mov
jp
ret
cmpsb
roll
imul
xchg
bound
clc
xchg
sub
xchg
mov
mov
push
addr16
add
xchg
jp
jne
pop
mov
dec
cmc
shr
add
out
bnd
js
xchg
inc
and
sbb
lods
iret
lcall
insb
cwtl
out
xchg
inc
cltd
adc
mov
mov
adc
loopne
pop
fcoml
ret
stc
sub
cmp
popa
lret
call
test
arpl
or
xchg
fistpll
fwait
test
add
sarl
test
rcrl
rcrb
jbe
insb
push
mov
jb
push
out
mov
inc
jl
mov
fildll
sub
sub
sbb
loope
mov
sub
pushf
xor
ret
loopne
cwtl
fs
loope
sti
fsub
fldcw
cld
pop
dec
stos
mov
sbb
enter
push
pop
cmp
mov
push
xchg
ss
cmp
test
and
imul
fcomi
push
fsubl
add
ret
mov
sub
jle
stc
and
cmp
cmp
scas
popa
cmp
xchg
sahf
cmpsl
ljmp
rolb
dec
dec
mul
lret
inc
fisubs
mov
cmp
nop
sbb
testl
jp
fcomip
lods
adc
ficoml
shrl
cmpsl
mov
rcl
lea
cli
scas
movsl
test
sbb
cld
adc
jno
sbb
movsl
sbb
sub
jg
mov
sbb
ss
mov
sbb
pop
pop
rdmsr
xchg
and
jge
pop
inc
sbb
sub
hlt
outsb
jo
ret
add
xchg
dec
pop
fsubl
ja
test
jb
fwait
fwait
scas
enter
sbb
mov
cmp
xchg
roll
dec
xor
xchg
push
xor
xor
pop
jge
sbb
lret
mov
add
movl
cli
dec
gs
loopne
arpl
lds
arpl
aad
sub
xlat
xchg
push
aam
adc
cmpsl
cmpsl
mov
movsl
add
sub
push
xchg
cmp
push
xchg
je
inc
stc
mov
ret
inc
add
dec
movsl
mov
add
sbb
xor
imul
pop
push
loopne
nop
movsl
fstpt
mov
push
or
and
lds
mov
shlb
lods
rorl
ljmp
inc
cmpl
add
int
xchg
cmp
cmp
xchg
cmc
xchg
popl
testb
sub
lods
icebp
fs
jns
inc
test
pop
hlt
rcl
cmp
js
cmpsl
out
out
adc
mov
movsl
hlt
pop
outsb
les
repnz
cmpl
and
adc
testl
push
and
mov
out
inc
aam
inc
and
and
jge
out
mov
fcmovne
fdivrl
xor
sub
and
jo
adc
insb
dec
mov
mov
pushf
mov
cmp
mov
bnd
cmp
insl
fcmovnbe
jecxz
sar
je
or
rcrl
mov
mov
pop
pushf
repnz
or
in
movsl
add
xor
outsb
fistpl
insb
into
ktestw
cmp
cmp
out
repz
lret
out
js
bound
cltd
inc
mov
cmp
inc
ljmp
xchg
push
aam
xor
adc
cltd
add
dec
inc
loope
enter
outsl
cwtl
and
lret
adc
imul
aad
jg
iret
out
cli
in
daa
adc
mov
idivb
ds
cmp
mov
mov
int
xor
lods
ret
push
cmp
add
sub
leave
sub
outsl
lcall
or
pop
pop
loop
arpl
mov
xlat
adc
jecxz
jecxz
rclb
in
mov
cmp
mov
sbb
fmuls
cli
sti
and
and
pop
dec
xchg
call
and
adc
adc
std
mov
xor
lods
mov
daa
into
push
mov
mov
ljmp
mov
xor
cmpb
lock
inc
cli
cs
jmp
sub
adc
cmp
jne
adc
popa
in
out
flds
adc
ss
sarb
cmp
hlt
cmp
shll
jp
inc
mov
or
out
int
jg
pop
js
mull
sbb
fucomi
sub
or
mov
nop
xor
ljmp
outsb
jno
add
rclb
xorb
mov
aad
inc
rcr
xor
sarl
shrl
repnz
sbb
idivb
push
les
in
dec
mov
jns
or
insl
dec
sub
fcomi
pop
xchg
and
inc
sbb
ret
insl
xchg
hlt
cs
hlt
or
mov
xchg
mov
push
cmp
lahf
mov
pushf
aas
hlt
aad
sub
out
std
xchg
loope
outsb
ja
push
xchg
pop
jp
cltd
sti
xor
je
jo
push
push
mov
inc
sahf
mov
sub
mov
out
mov
add
stos
dec
sub
sahf
xchg
rsqrtps
cmp
sbb
insb
and
mov
ja
movq
pop
negb
and
daa
les
nop
add
dec
add
sub
lahf
lock
mov
inc
movsl
add
mov
jecxz,pn
cmp
fnstcw
pushf
stc
xchg
inc
and
rorl
xchg
mov
stos
dec
xchg
xchg
push
stos
xchg
push
dec
insl
inc
mov
or
or
dec
es
xchg
test
insl
xchg
fldcw
add
orb
hlt
mov
and
adc
jne
sti
mov
test
sbb
xor
dec
xor
push
add
pop
mov
sbb
stc
daa
stos
nop
or
xchg
mov
mov
cli
pop
scas
test
xor
jge
lret
loope
in
stc
sub
jmp
fs
mov
inc
mov
inc
rorb
jecxz,pt
inc
fst
jge
push
or
mov
inc
fisttpll
mov
jp
cmp
adcl
test
loopne
cmp
cmc
test
ds
sti
mov
dec
sahf
js
scas
aas
je
inc
mov
cmc
xchg
stos
inc
pop
fcomp
push
xchg
dec
fidivs
sbb
sbb
stos
rclb
test
pushf
or
inc
mov
test
dec
push
test
xor
cltd
inc
push
sub
inc
mov
mov
popf
enter
aas
nop
push
in
mov
mov
jg
lcall
mov
cmp
dec
or
nop
lea
mov
hlt
test
sbb
push
sub
mov
mov
into
dec
inc
out
roll
jno
xchg
test
jns
jle
js
inc
cmp
dec
int3
mov
pop
sbb
outsb
mov
rcl
popl
das
push
add
dec
loope
shll
stos
mov
rol
inc
add
push
fsubr
int3
repz
sahf
fimull
inc
aas
dec
int3
sub
cltd
cmp
orb
xor
xlat
sbb
xor
sub
inc
xchg
inc
insb
mov
jmp
loope
add
arpl
nop
ficoms
mov
cmp
xchg
add
or
sub
xlat
dec
or
dec
add
adc
test
aam
add
sub
xor
pop
dec
pop
adc
push
push
push
jmp
push
ljmp
aaa
jnp
push
or
aam
pop
adc
and
stc
mov
movsl
dec
ljmp
cltd
addr16
out
sti
adc
pop
ret
ljmp
ret
mov
sti
pushf
mov
jecxz
les
xchg
inc
mov
push
mov
out
inc
notl
inc
decl
pop
outsw
loope
mov
ja
test
jmp
les
fsubrl
in
dec
jo
mov
lods
push
sbb
aam
lcall
xrelease
adc
loopne
cmp
bound
pusha
imul
daa
sub
and
out
pop
push
cli
in
fiadds
sbb
inc
cli
addr16
out
dec
add
popa
out
es
xor
movsl
stc
push
mov
fdiv
popf
push
loopne
fmul
sbb
out
dec
jbe
roll
mov
sbb
scas
rorb
adc
repz
out
cmp
repnz
stos
data16
xor
sub
mov
ljmp
dec
fsubl
sbb
xor
loopne
inc
leave
sahf
mov
xchg
mov
mov
jl
jp
aad
jl
cmc
pusha
movl
lcall
push
jbe
jmp
shll
sbb
fsts
pop
out
push
cmc
mov
out
xor
sti
roll
fstps
cmp
adc
test
cs
js
add
push
lock
or
xchg
loope
out
mov
push
nop
inc
and
sbb
or
add
push
lods
push
jmp
xchg
int3
sbb
scas
imul
mov
add
mov
pop
pop
jne
mov
imulb
mov
sarl
mov
clc
das
fs
out
sub
mov
pop
add
sbb
add
add
dec
push
jae
or
test
push
sub
xor
nop
mov
xor
sbb
in
pop
fmull
adc
and
or
mov
pop
inc
hlt
jne
cmpsb
bswap
cld
sbb
xchg
push
pop
imul
mov
es
lods
addr16
inc
inc
aas
popf
add
mov
daa
fstpl
outsl
inc
sbb
mov
inc
mov
int
jmp
into
sbb
inc
movsb
mov
in
mov
in
dec
test
mov
stos
stos
mov
sbb
outsb
adc
mov
pop
fidivs
sub
es
xchg
push
jecxz
jne
stc
push
xor
jl
setg
je
pop
mov
shlb
xchg
rcll
rcrb
jecxz
fsubl
test
cmp
or
mov
pop
ds
cltd
sbb
inc
sbb
pop
lods
jns
jle
sub
xor
repnz
adc
std
mov
push
sbb
sub
mov
cmp
cmp
xor
inc
dec
sahf
cmc
das
outsb
jae
pop
out
sub
ret
jecxz
inc
sub
fildll
ja
mov
mov
inc
dec
inc
sub
jb
jae
shlb
adc
mov
loope
in
cmc
jno
jne
pop
int
pop
movsl
adc
cmpsb
sub
outsb
scas
shl
pop
jb
cmpb
add
enter
lret
mov
sbb
jmp
aas
cmp
push
adc
cmp
ljmp
sbb
or
mov
dec
movsb
ja
loop
cmpl
cmp
out
loope
stos
push
add
adc
clc
mov
xchg
loopne
insb
loopne
sub
jge
xchg
xor
add
xchg
and
rcrb
push
xchg
ss
adc
scas
fnstsw
xchg
lret
jl
jmp
scas
xchg
popa
dec
bound
dec
ret
cmp
lahf
cli
popf
in
scas
xor
dec
int3
mov
aam
sub
out
and
xchg
decb
dec
pop
push
adc
test
cltd
sbb
rcll
insb
jmp
stc
ljmp
add
jns
inc
syscall
int
movsl
bound
jmp
inc
mov
insb
daa
mov
aas
loopne
push
fcompl
cmp
or
ljmp
push
and
mov
pop
and
out
sar
add
icebp
pop
adc
cwtl
jno
ret
sahf
sub
dec
xlat
inc
cmp
jne
xor
sbb
push
lea
daa
jne
fs
frstor
fdivrp
inc
subb
cmpsb
sub
mov
cwtl
adc
push
sbb
adc
pusha
out
or
dec
mov
mov
mov
push
cli
push
mov
pop
xchg
push
sub
pop
test
sti
test
cmp
lcall
jmp
or
fisttpl
xchg
loopne
rcrb
imul
aaa
pop
les
hlt
pop
xchg
xchg
push
jg
push
insl
push
rcrl
loop
inc
jne
jg
or
iret
mov
jb
fwait
mov
jl
clc
in
je
test
push
xchg
shll
into
orl
into
scas
idivl
lods
and
je
push
xor
fldt
sub
cmp
inc
sub
push
aaa
mov
iret
xor
xchg
cmp
out
mov
jecxz
xchg
rorl
enter
xchg
dec
jg
mov
aad
stc
movsb
fcmovne
xchg
inc
push
lret
call
cmp
dec
inc
stos
pop
mov
sbbl
inc
xor
xlat
lds
dec
stc
pushf
adc
insb
mov
call
imul
enter
outsb
and
mov
imul
jns
sbb
cmp
cld
fs
cmp
mov
push
mov
and
pop
iret
adc
mov
add
xchg
call
mov
in
cmpsl
ret
cmp
and
mov
cmp
insb
mov
mov
inc
cmpsl
push
cmp
xlat
mov
ficoms
inc
cltd
mov
jmpw
sub
stos
push
xor
pop
addb
push
in
popf
pop
bound
scas
xchg
out
pushf
push
mov
icebp
in
push
pushf
mov
imul
dec
roll
xor
jae
jno
dec
push
mov
fists
imul
push
sti
push
sub
stos
mov
das
popa
cmp
mov
jp
enter
add
dec
inc
js
sub
cs
pop
repz
int3
adc
aad
cmc
or
and
movsl
or
push
loope
add
dec
mov
sbb
mov
fimuls
std
dec
dec
cmp
mov
into
inc
lods
stc
clc
sti
add
cmc
adc
xchg
add
cwtl
mov
pop
jb
rcrl
mov
sbb
cmpsl
jns
push
div
xchg
sbb
shr
or
pop
cmpsb
push
xchg
xor
aaa
cmp
adc
inc
je
add
dec
outsb
mov
pusha
adc
pop
jo
or
xor
sbb
mov
sar
call
pusha
cmp
lea
insl
add
sbb
mov
inc
lret
insb
xor
ss
out
dec
or
sbb
lock
xor
mov
sbb
call
add
jne
fcom
negb
pop
sarb
sbb
test
fsubs
les
push
cmpsl
jnp
pop
dec
inc
mov
in
jnp
xchg
xchg
add
add
pusha
push
xor
mov
ja
imul
dec
pop
lret
jbe
push
pop
fists
and
push
repnz
and
inc
xlat
scas
mov
mov
add
push
fwait
gs
clc
xchg
jecxz
test
lahf
mov
inc
out
jne
dec
aam
push
xor
pop
fninit
jae
jle
push
pop
inc
lods
shrl
xlat
jmp
addl
mov
pop
pop
jge
xor
pusha
lret
dec
mov
mov
je
or
addl
les
dec
xchg
pop
mov
sbb
adc
pop
int3
fsubl
lret
or
cmc
jle
pop
cli
push
out
xchg
daa
movsb
insl
dec
push
loopne
imul
push
movsl
inc
mov
xchg
mov
mov
fmuls
cmp
push
pop
jbe
fisttpll
inc
jne
fwait
xor
call
cmc
popa
fsin
scas
push
xchg
pop
idivl
mov
cmp
loope
sbb
repnz
mov
in
xchg
cmp
or
aad
popf
pop
or
mov
pop
sbb
call
out
out
cmp
inc
les
loope
js
xchg
movl
scas
iret
popf
jp
add
add
push
mov
sbb
clc
scas
push
mov
inc
mov
ficoms
xor
dec
cmp
lahf
popf
push
das
mov
cmp
movb
repz
testb
aad
jbe
imul
cltd
push
dec
add
pop
imul
loopne
and
adc
pop
xchg
insb
mov
fdivrl
mov
push
mov
push
xor
xchg
jnp
sahf
lret
shl
push
cli
in
or
xchg
push
cmp
outsb
aaa
adc
ret
sysexit
rcll
pop
mov
cltd
addr16
or
jp
ss
arpl
enter
fsubrs
movsl
xor
add
xchg
xlat
fprem
xor
cmp
in
sub
lret
bound
pop
cmp
adc
mov
xchg
add
add
xor
pop
andl
add
lock
je
cmp
jge
mov
sbb
insb
jmp
lret
aam
mov
dec
jge
push
push
in
push
push
xor
sub
xchg
sti
cli
xchg
out
pop
mov
push
add
int
push
negb
insb
lock
aas
shll
pop
repz
xchg
and
jne
cmpsb
push
cmpl
mov
mov
stos
cmp
ljmp
mov
mov
dec
sbb
sub
push
xchg
std
sub
jo
sub
fwait
inc
dec
lret
lods
jge
loope
fcomp
xor
lret
je
mov
mov
sbb
mov
push
cmp
call
enter
ret
loop
jbe
test
mov
or
fisttpl
lahf
mov
mov
and
popf
fld
xchg
testb
mov
adc
mov
xor
loopne
lock
cmp
stc
push
lcall
fwait
sbb
push
push
shl
xor
dec
jg
xchg
outsl
sti
cmp
xchg
or
or
adc
stc
dec
fwait
rol
xor
cld
iret
sbb
insl
mov
bound
and
cmpsw
movsb
cmp
dec
mov
push
fdivs
notl
push
push
jl
cltd
xor
push
dec
jecxz
mov
xlat
insb
adc
std
xchg
pop
mov
dec
xlat
push
cmpsl
rol
adc
xchg
jl
push
pop
push
ja
push
popa
jmp
popa
sbb
and
orb
ret
sbb
ret
and
sbb
fimuls
std
shll
cmp
pop
jle
xor
int3
lock
ds
into
push
pop
dec
fwait
dec
pop
mov
inc
jl
imul
and
outsb
lret
add
lcall
scas
xor
frstor
stos
idivl
nop
xchg
dec
adc
dec
int3
push
inc
movsl
ljmp
or
push
or
jmp
cltd
sbbb
sbb
call
pushf
movsl
xlat
mov
push
xor
movsl
mov
cmp
popf
insb
je
pop
jnp
mov
pop
sti
pop
sbb
cmp
cs
mov
fcomip
cwtl
xchg
sbb
mov
jge
xor
add
loope
cmpsl
pusha
push
or
sub
jae
or
ret
fcmovb
mov
lds
pop
insl
mov
and
fisubrs
aam
insb
data16
test
in
fucomp
outsb
jo
sub
xor
jg
sti
das
dec
adc
sub
mov
lock
rclb
clc
sub
cld
and
fcmovne
pop
lret
ret
add
lods
idiv
jg
xor
jo
mov
sbb
ficoml
aas
fnstsw
xor
push
xchg
add
loop
repz
icebp
out
adc
pushf
xchg
mov
sahf
and
or
mulb
push
push
sub
sub
mov
mov
cmc
push
call
fwait
xor
xor
jae
jl
cld
stos
push
xor
xlat
adc
dec
aas
pushf
add
jmp
cmp
mov
xchg
push
daa
xlat
loop
mov
stos
jno
push
cmp
mov
xor
hlt
push
push
flds
stc
mov
movb
ret
insl
mov
faddl
cld
test
test
mov
dec
lock
sahf
lods
fs
sbbb
xchg
sbb
dec
push
xor
das
in
out
dec
cmp
in
mov
sti
cwtl
lahf
test
repnz
mov
xor
in
xchg
dec
das
xchg
imul
push
mov
movsl
push
xor
js
add
xchg
xchg
mov
mov
pop
and
xchg
lea
or
push
or
jge
sub
iret
mov
jo
call
jae
repz
cmpsl
push
inc
and
fmull
dec
test
scas
ficoms
mov
jb
leave
ret
adc
call
lahf
or
push
xchg
or
add
popa
jo
pop
test
rclb
dec
cld
shrl
ds
add
dec
mov
outsl
inc
shlb
movsl
pop
mov
and
cld
sub
pop
add
repz
mov
mov
dec
shlb
rorb
push
cmp
pusha
inc
jne
popf
inc
or
or
push
inc
mov
add
mov
mov
mov
fs
jge
aaa
dec
loope
sti
mov
leave
jnp
mov
add
popa
jno
rcrb
add
bound
push
jmp
jne
daa
sbb
cmp
jmp
fwait
push
decl
xor
sub
jns
adc
and
push
ja
loop
ds
rclb
shrb
fwait
and
mov
movsb
lcall
test
inc
arpl
or
dec
lock
dec
int3
and
jg
fs
cmp
mov
mov
cmp
add
xchg
stc
das
push
push
nop
xchg
push
data16
stos
add
rcll
test
pop
fcmovu
movsl
int3
mov
repz
icebp
shl
cli
or
mov
out
adc
push
pop
sbb
cmp
push
scas
call
add
repz
or
sbb
loope
push
mov
mov
inc
rcll
jl
push
adc
ret
push
xchg
cmc
pop
or
cmp
xor
cli
mov
push
dec
rolb
push
arpl
mov
xchg
outsb
lock
cmp
mov
shr
fcomi
arpl
xor
push
adc
mov
xchg
and
das
push
push
addb
xor
jg
test
mov
fsubrs
jnp
bound
outsl
sub
imul
sahf
sub
jmp
jns
jl
in
mov
fnstcw
je
int
loopne
sbb
test
push
dec
call
cmpsl
aas
lcall
mov
and
cmp
sub
inc
cmc
aam
push
lret
test
xchg
enter
test
jg
in
cmp
jecxz
ss
cmp
mov
into
ficoms
xor
jno
les
jbe
lcall
outsl
int3
jg
mov
mov
mov
sti
sbbb
icebp
mov
add
repnz
sub
leave
ret
btr
hlt
les
jnp
out
icebp
lods
insl
incb
xor
dec
inc
xchg
dec
jno
adc
addb
fld
mov
sub
cld
cmp
cld
sub
mov
fdiv
push
xor
add
icebp
add
or
push
mov
sbb
xchg
shlb
cmpsb
out
and
loope
mov
adc
fs
mov
mov
inc
aaa
hlt
inc
xor
mov
movsl
sbb
in
or
jbe
mov
inc
in
arpl
ficoms
lods
int
out
mov
insl
stos
fbstp
jp
add
add
and
xchg
movsl
mov
mov
sub
pop
cmp
jb
jg
mov
cwtl
pop
xchg
fwait
jg
icebp
gs
popf
push
imul
adc
cmpsl
insl
dec
push
dec
test
push
xchg
hlt
test
call
out
cmpsb
add
addr16
xchg
cmc
sti
pop
or
dec
loop
in
push
lret
sub
arpl
cmp
fiadds
cmp
fsubs
out
mov
adc
push
mov
sbb
pop
dec
sub
inc
jns
cwtl
hlt
lahf
addr16
sub
jmp
stos
lock
inc
cltd
pop
in
daa
cmpl
fdivl
fwait
and
clc
push
scas
xchg
dec
shlb
lcall
mov
pop
sahf
loop
loopne
push
gs
mov
mov
sub
inc
ss
xlat
movsl
les
pop
pop
sub
xchg
scas
negb
and
push
sub
sahf
mov
mov
dec
lahf
sbb
jmp
cli
pop
test
dec
lds
jp
push
int
popa
scas
sbb
andl
sbb
mov
mov
push
add
cmp
mov
popa
cli
push
inc
es
lock
fistps
xchg
sub
fsubrp
test
push
and
adc
jns
lea
movsl
test
mov
dec
mov
sub
push
les
pop
bound
pushf
jae
mov
and
lods
cmpsl
and
xchg
push
jmp
cld
jo
mov
imul
jecxz
shr
pop
xor
mov
inc
pop
xor
enter
pop
adc
or
ss
pop
pop
cmpsl
cli
adc
les
cli
sbb
mov
xchg
mov
lahf
mov
roll
sbb
and
pop
sub
sbb
cmpb
mov
mov
arpl
or
inc
mov
xorl
clc
lock
ret
adc
jle
fimuls
dec
in
sub
aam
sub
arpl
loop
xchg
aad
or
or
cmpsb
pusha
imulb
shl
jge
hlt
iret
jns
call
scas
dec
jb
in
fidivrl
mov
sarl
ja
mov
push
xchg
shrl
and
sarl
fcomp
in
or
mov
jge
xor
in
adc
popa
sbb
aam
lret
add
lock
and
aaa
xchg
xchg
insl
frstor
aad
mov
push
dec
in
out
jne
dec
stos
and
inc
xchg
pusha
es
mov
pop
das
orb
adc
mov
mov
add
lcall
mov
sub
aaa
movsb
inc
in
orb
decl
loop
mov
cltd
dec
das
mov
pop
jbe
adc
push
mov
mov
outsl
ja
rorb
addr16
and
dec
lcall
fldt
jg
shrl
mov
inc
outsl
jge
sahf
cmpsb
push
sbb
daa
lods
mov
lcall
ss
test
and
dec
mov
call
jg
adc
cmp
les
push
cmp
iret
cmpsl
dec
lds
dec
cld
and
mov
adc
xor
sub
push
mov
push
cmpsb
sbb
mov
in
xchg
cli
int
mov
sub
add
push
mov
dec
int
inc
out
stos
in
call
add
sarb
rclb
jp
stos
into
jnp
xchg
rorl
jp
inc
repnz
int3
fnstcw
adc
push
push
push
push
jbe
adc
in
shll
rcr
jl
sub
sbb
pop
adc
test
mov
gs
mov
ds
fstpt
or
jbe
stos
and
repz
test
stos
out
call
mov
clc
in
mov
rorb
cmp
jge
cld
mov
cmp
adc
or
mov
xor
mov
xchg
shlb
or
iret
jmp
jge
dec
push
dec
dec
or
aaa
add
mov
push
xor
or
test
std
sub
insb
loop
dec
mov
add
jle
dec
or
stc
adc
mov
mov
push
push
insl
fcompl
testb
push
ret
mov
and
mov
push
sub
cmp
pop
lcall
or
cmpsb
adc
cmp
insb
push
daa
sub
sub
repnz
jo
std
enter
es
lods
sub
pop
jmp
dec
mov
or
orb
clc
jae
push
nop
ja
and
jns
push
ror
mov
imul
adc
retw
mov
mov
jo
mov
adc
jmp
addr16
xchg
jmp
popa
cmpsb
cmp
cli
lds
sbbl
shl
iret
outsl
lds
fsub
adc
notb
popa
lods
scas
test
std
mov
lods
test
stos
add
shlb
fsubr
sbb
push
mov
cmpsb
push
inc
imul
nop
call
aaa
mov
inc
inc
insb
test
push
adc
sti
imul
add
push
jnp
dec
sbb
js
ret
jno
stc
jl
rcll
jbe
fistl
divl
repz
pop
testl
mov
push
jp
push
push
pop
insb
mov
fnstenv
jecxz
mov
pop
mov
insl
mov
ss
test
mov
add
das
dec
push
adc
mov
lret
dec
mov
pop
or
insl
add
pop
cltd
loope
imul
sahf
test
mov
inc
mov
inc
adc
pop
jb
ret
fcoml
call
into
xlat
or
test
int
loop
jmp
add
movsl
inc
fldl2e
aas
outsb
xor
negb
lock
out
mov
cmp
dec
pusha
aas
pusha
in
je
sti
add
lret
mov
mov
ret
jmp
sbbl
xchg
call
jle
jne
dec
jnp
das
sub
mov
imul
cs
lcall
fstpt
inc
in
mov
inc
mov
std
outsb
jecxz
inc
jns
pop
das
adc
mov
mov
jb
imul
pop
stc
stos
popl
je
popf
jl
jecxz
jle
inc
jae
popf
das
mov
cmp
push
leavew
rcll
inc
inc
loopne
testl
mov
testl
dec
jle
adc
outsb
sbb
mov
orl
jno
insb
lods
inc
push
xor
lea
out
lock
xlat
mov
push
movsb
rcrb
mov
out
mov
pop
push
xor
imul
push
and
in
orl
push
jae
lret
mov
pop
and
imul
sub
dec
and
xchg
mov
push
mov
dec
mov
fsubr
adc
dec
mov
cmp
ficompl
adc
gs
js
sbb
sbb
dec
adc
gs
bound
cmp
lods
push
jnp
into
or
mov
cli
fmull
stos
xor
rorb
and
add
sub
jmp
dec
jns
lcall
dec
out
enter
jp
jp
fstpt
pop
adc
hlt
jb
mov
inc
idiv
ret
lret
cmpb
or
enter
and
cli
sbb
push
in
in
mov
insl
pop
xchg
mov
in
repnz
dec
mov
notl
pcmpgtw
pop
fisubrs
repnz
aad
adcb
mov
push
sbb
adc
cmpsl
push
cmp
mov
lahf
aaa
xor
test
dec
push
outsb
mov
xchg
orl
subb
add
sbb
pop
bound
and
sbb
fbstp
jl
or
pop
mov
rcrb
add
mov
sbb
mov
sub
xor
inc
cmp
aam
outsl
data16
xchg
add
pop
sub
out
sub
test
sbb
cltd
pusha
cmp
aaa
inc
cmpsl
sub
popa
outsb
std
xor
adc
xchg
notb
dec
fldcw
int3
repz
int3
pop
std
add
cmp
or
sbb
add
fidivl
test
hlt
push
nop
popl
out
xchg
mov
jmp
pop
cmp
lret
sub
ret
and
pop
inc
sub
and
pop
add
sahf
mov
call
adc
push
mov
lret
and
mov
pushf
es
test
dec
and
dec
adc
adc
fcomps
sub
adc
pusha
push
out
fiaddl
out
inc
lahf
push
adc
fsubl
push
insl
dec
les
ja
dec
lret
mov
pop
sub
int
imul
call
jb
shlb
dec
scas
push
cmp
add
or
call
push
add
mov
push
push
jle
dec
out
xchg
xchg
xchg
xor
gs
dec
dec
fcmovnbe
push
xor
push
xchg
mov
xchg
out
aaa
cmpsl
push
out
out
jmp
cmc
pop
push
sti
jp
addl
xchg
sbb
xchg
push
mov
jcxz
cmpsb
aas
jmp
mov
push
gs
fidivrl
int
mov
sti
jp
insb
pop
dec
mov
out
sub
cwtl
insl
enter
mov
test
sbb
js
cmpsl
or
push
add
fsubrl
xchg
rolb
xor
xchg
or
fs
pop
ret
sahf
lock
movsb
pop
or
jno
xchg
icebp
out
push
into
dec
xor
cmp
ret
push
scas
xchg
loop
xchg
xchg
push
mov
inc
scas
jg
or
push
cmp
jmp
cltd
iret
inc
aas
imul
pop
push
aam
mov
pop
fdiv
int
jae
cmp
out
xchg
ljmp
enter
notb
xchg
or
int
push
push
mov
push
out
testb
pop
or
pop
fisubs
jae
fstpt
and
xor
lds
mov
lahf
in
sti
pop
dec
mov
cltd
inc
mov
in
inc
sti
adc
repnz
rorl
repnz
aaa
pusha
mov
stos
out
decb
or
out
mov
jmp
or
push
dec
ret
push
sbbl
xorl
jmp
or
in
pop
jae
push
inc
xchg
sbb
mov
pop
push
rorl
cmpsl
xchg
clc
arpl
rolb
cwtl
and
out
js
mov
or
sub
lods
loop
and
adc
aad
add
push
lahf
jmp
ss
shrb
lods
fidivrs
lds
stc
pusha
cs
mov
jns
cmp
jb
gs
or
cld
popf
aam
outsb
fwait
pop
popf
adc
ss
repz
inc
mov
xor
add
call
hlt
stos
jg
in
iret
push
mov
dec
or
divb
loopne
lcall
mov
gs
xchg
pop
pusha
pop
cmp
mov
cwtl
pop
daa
test
sarb
mov
call
clc
sbb
mov
jb
mov
push
xchg
jno
cld
xor
dec
adc
and
sub
subb
xchg
mov
scas
push
dec
aam
int3
scas
push
stos
mov
andl
and
scas
adc
jmp
sub
in
loop
in
mov
je
pop
lea
sbbb
dec
and
in
aad
cmp
subl
mov
imul
xchg
bound
or
mov
pop
pop
fdivl
sub
inc
push
mov
and
xchg
add
outsb
pop
jmp
loopne
nop
jp
cltd
mov
jp
cmp
lret
pop
pop
push
jecxz
xchg
and
mov
imul
adc
lcall
dec
mov
adc
movsb
ret
dec
testl
sahf
push
fbstp
cmpsb
adc
xorl
jg
je
cs
shlb
jecxz
or
sbb
dec
dec
imul
adc
mov
sub
cmp
aam
test
xor
js
add
les
jns
adc
or
jno
inc
ret
insl
frstor
mov
jb
pop
mov
cmp
sarl
pop
cmp
inc
pop
das
jp
pusha
enter
sti
andl
inc
andl
test
out
xchg
pop
in
xchg
fisubrs
orl
push
aaa
clc
mov
pop
and
sbb
dec
cs
imul
jo
or
xchg
ret
insb
lret
jo
gs
push
hlt
mov
mov
int
mov
scas
lahf
mov
sbb
sbbl
test
mov
jae
fsubr
outsl
fs
ss
push
xchg
movsb
mov
push
in
pop
ficoml
dec
imul
repnz
jmp
mov
cmpl
or
adc
adc
inc
push
push
shll
je
cmp
scas
in
jg
mov
jmp
mov
stos
les
pop
cmp
in
adc
popf
out
add
mov
ds
das
pusha
push
imul
test
aaa
mov
push
repz
ret
loop
ljmp
xchg
std
hlt
pop
ret
mov
jmp
inc
es
js
jo,pt
scas
or
and
test
sub
pop
mov
incl
and
lcall
test
mov
mov
cld
sti
add
sbb
mov
pop
outsl
hlt
and
test
lods
ret
mull
add
cmp
mov
pushf
fisttpl
sub
cmpsl
test
cwtl
push
inc
clc
adc
ret
inc
ffreep
hlt
cmc
inc
add
stos
aas
fidivl
scas
xor
insl
leave
and
test
out
mov
aad
xchg
out
outsb
mov
stc
jbe
enter
sbb
push
cmc
lss
mov
adc
lock
jmp
lahf
repnz
sub
loop
pop
test
test
add
push
sbb
test
sbb
mov
adc
lock
shlb
sub
jge
mov
hlt
cmpsl
jo
jo
mov
in
and
mov
scas
std
shll
xor
xchg
rolb
mov
ds
loop
xchg
div
dec
cld
cmp
adc
stos
push
and
jge
or
push
out
std
in
push
xchg
mov
int3
mov
add
into
aam
sarb
cld
negb
and
fwait
gs
dec
push
and
mov
rorb
out
xchg
adc
lock
ljmp
add
jbe
dec
sub
enter
insb
dec
add
mov
shl
in
and
dec
sbb
cmp
dec
mov
push
fs
dec
sub
mov
std
jecxz
fdivl
scas
sub
addr16
dec
jl
ss
or
push
push
or
sbb
dec
xor
fwait
mov
fs
jbe
ret
je
nop
jg
cmp
jp
or
or
dec
inc
jecxz
fildl
sbb
mov
and
xchg
dec
or
out
mov
popf
push
scas
push
or
out
pop
cwtl
mov
xor
mov
xor
jmp
pop
filds
xchg
inc
mov
dec
fmull
xorb
inc
sub
and
push
sub
add
aaa
or
pop
jno
ljmp
daa
lock
aaa
ret
jae
cmc
jl
in
int3
pop
testb
hlt
xchg
jno
cmp
sbbl
xor
or
dec
add
cli
cmp
arpl
jp
jns
mov
sbb
iret
call
push
cltd
sahf
and
pop
or
subl
cmp
in
inc
cmp
les
add
sub
add
test
popf
mov
dec
push
jg
xchg
push
nop
shl
mov
gs
and
mov
cwtl
cs
int
sub
jmp
sarl
mulb
js
sbb
push
pop
cmp
lea
add
mov
stos
gs
frstor
add
push
inc
mov
cld
rcr
andl
xor
add
rcl
pop
andb
daa
int3
aad
pop
js
or
cltd
mov
sub
adc
ja
mov
cmp
andl
inc
inc
push
hlt
repnz
rcrl
sub
insb
fwait
cmc
lret
lock
mov
xor
gs
jmp
or
xchg
subl
mov
stos
add
xchg
pop
lret
xor
pop
fxch
sub
mov
enter
stos
sbb
add
sti
xor
cmpsl
and
in
sub
push
aam
das
xor
loopne
test
mov
push
mov
idivb
or
xchg
inc
addr16
mov
ficomps
lret
dec
lods
leave
xor
out
sti
push
xorl
and
xchg
jl
jmp
jl
sub
inc
icebp
mov
mov
lahf
dec
shl
dec
ss
rcll
jns
aas
mov
cmp
pushf
rcr
pop
into
loope
pop
add
clc
bound
fs
fwait
icebp
sti
fistpll
mov
fmuls
pop
jmp
or
dec
or
jle
aam
jp
pop
xchg
mov
mov
repnz
lahf
orb
mov
fisubrs
scas
shlb
neg
mov
pop
ljmp
mov
aam
push
movsb
aam
imul
sbb
inc
pop
pusha
xor
daa
out
icebp
aaa
xchg
js
sti
sub
orb
pop
fistps
gs
and
out
gs
jmp
xchg
or
jnp
outsb
mov
nop
aaa
loope
push
cwtl
imul
imul
lock
cmc
mov
es
pop
and
mov
mov
shl
sub
insb
adc
push
add
inc
jb
mov
mov
push
out
repz
je
or
arpl
mov
adc
mov
hlt
in
push
test
inc
xor
scas
xchg
jg
js
mov
lods
aam
je
push
xchg
fistl
jl
dec
les
out
lea
pusha
and
and
xchg
test
cmpsb
inc
std
cld
iret
js
not
mov
orb
into
jl
push
or
mov
cmp
mov
hlt
dec
jbe
cmp
xchg
mov
mov
jo
cmp
ja
lods
lahf
lods
icebp
and
lea
pop
rcrl
mov
fisttpll
xchg
dec
mov
negb
jg
sub
push
xchg
addr16
in
ret
adc
lret
xlat
xchg
aad
fbstp
mov
jge
xor
call
or
pop
adc
shrb
dec
add
xlat
daa
andl
sbb
mov
xchg
and
insb
mov
mov
and
popf
mov
sbb
je
test
push
jns
out
lods
push
fcmovnbe
sbb
dec
push
inc
cwtl
vxorps
imul
mov
dec
hlt
jge
aam
adc
cmp
popf
jmp
inc
loope
into
nop
xor
in
stos
pop
stos
fsubs
add
sbb
idivb
fsts
cmc
nop
ret
mov
lods
cmc
adc
sub
xchg
pop
xor
das
jl
fwait
out
mov
jne
jns
stos
or
mov
push
aad
or
pop
daa
mov
xor
xchg
xchg
or
sarl
xor
mov
pop
icebp
repz
repnz
cmpl
lret
cs
inc
mov
cmp
fdivs
hlt
ror
sub
mov
iret
ret
xchg
push
cmp
pop
ret
testl
or
jbe
js
mov
ljmp
dec
add
pop
dec
mov
in
movsl
add
hlt
jo
pushf
inc
adc
dec
pop
ja
mov
jle
je
jnp
in
cld
mov
std
sub
and
clc
mov
adc
jp
xchg
cmp
mov
xchg
cmp
rcrb
mov
into
and
nop
jecxz
repnz
test
test
lods
nop
and
xor
xchg
push
sub
adc
xchg
movsl
pop
das
cmp
out
xchg
stc
aaa
adc
sbb
mov
push
aad
insb
test
rclb
not
xchg
aas
cwtl
cmpl
js
lods
jnp
dec
adc
mov
mov
dec
adc
aaa
cmp
sar
mov
adc
cmp
cmp
push
and
mov
inc
clc
repnz
sbb
mov
pmullw
add
fcomi
pop
repnz
sub
subb
pop
push
lahf
daa
inc
mov
ret
pop
shrl
push
mov
push
jge
fwait
push
fldt
adc
lods
int3
pop
scas
or
rcrb
and
dec
and
push
rcrb
cmpl
mov
inc
inc
orb
inc
int
pop
pop
fcoml
sub
push
add
sub
js
xchg
insb
nop
cmp
daa
mov
xchg
aas
test
pushw
ret
mov
xchg
int3
test
mov
fldl
iret
movsb
test
push
xor
mov
mov
push
add
jg
mov
inc
dec
mov
test
mov
test
push
xor
or
or
lds
or
jmp
push
sbb
addr16
cmp
adc
mov
test
jl
jp
stc
xchg
push
mov
mov
js
push
add
mov
dec
stc
push
push
loopne
and
decb
scas
push
clc
adc
or
arpl
push
loopne
leave
add
jecxz
stos
pop
and
jo
jp
fisttps
xchg
jmp
test
sbb
inc
loopne
sbb
push
pop
pop
fistps
ss
inc
hlt
icebp
jo
fsubl
xchg
andl
mov
mov
pop
cld
pop
push
loope
and
cwtl
inc
rolb
sarl
lods
repnz
xchg
fldt
pop
push
mov
push
adc
rclb
decl
jns
cmp
cmp
cs
mov
inc
or
nop
stc
cld
xchg
imul
or
push
lods
push
lret
mov
andps
sub
sti
ljmp
fistl
dec
sbb
push
dec
outsl
inc
outsb
push
fnstcw
mov
add
stos
cmp
loopne
push
lds
xor
repz
mov
lret
push
lods
cltd
xchg
cmp
push
xor
and
pushf
rcl
movsl
aad
mov
inc
lds
pop
xchg
ds
stc
fstps
ljmp
cmp
cmp
not
adc
adc
daa
shrl
jno
jp
leave
jge
negb
push
and
insb
daa
test
scas
jae
cli
stos
push
adcb
sbb
mov
push
mov
and
iret
cmp
cli
sub
pop
xchg
and
sbb
mov
jbe
sub
inc
jns
cltd
or
aas
sar
addr16
fadds
scas
sbb
sbb
or
jg
cli
popa
xor
imul
clc
pop
dec
sub
loope
insl
xor
imul
jb
sarl
pmulhw
cmp
repnz
push
dec
cld
repnz
dec
mov
pushl
lret
sub
push
jecxz
repnz
pop
mov
int3
pushf
repz
or
lea
xchg
rolb
push
ljmp
push
push
cwtl
add
add
pop
cmp
test
lret
or
into
push
add
in
mov
or
xorb
movsl
enter
loope
cs
ror
mov
out
les
xchg
pop
fildll
scas
xchg
andl
adc
xor
xor
inc
enter
or
mov
aad
and
adc
dec
stc
test
dec
pusha
mov
es
jo
adc
ja
adc
mov
mov
lds
adc
inc
jb
push
enter
lahf
and
in
lret
push
aas
test
push
mov
mov
cmp
mov
pop
rclb
aaa
dec
mov
cmc
xor
jecxz
mov
lret
jns
jl
jo
pop
xor
in
scas
cmc
pop
fiadds
fsub
push
movsl
push
or
fisttpll
cmpsl
in
sub
or
shlb
in
fldl
jbe
cmp
xorb
dec
sbb
fwait
repnz
mov
aam
leave
icebp
fcmove
mov
out
scas
in
push
stos
and
out
xchg
jb
cs
mov
je
xchg
pop
iret
sarl
inc
fistl
inc
lods
enter
pop
or
xchg
push
aaa
lcall
lahf
ss
data16
popf
push
push
sarl
add
or
data16
cld
repz
loopne
repz
adc
lods
fs
pop
pop
popf
test
sbb
adc
add
xor
mov
jns
cmp
cltd
mov
xor
cmp
add
pop
and
or
adc
lret
cmpsb
out
mov
sub
aas
test
add
inc
pop
jbe
lea
sbb
and
cmc
leave
lds
hlt
test
jno
xor
sub
or
adc
flds
loop
adc
out
fwait
out
mov
jo
add
incb
ljmp
and
out
push
sbb
std
out
mov
fs
adc
xor
leave
jge
push
rcrl
push
outsb
and
aas
or
fs
pop
int3
sub
jno
push
pop
mov
gs
cmp
out
ret
imul
mov
xlat
jo
je
and
imul
out
rolb
dec
adc
pop
lcall
inc
xchg
dec
push
mov
or
int3
std
test
adc
loopne
testl
or
movb
out
leave
mov
mov
das
mov
xchg
or
add
xchg
jnp
jle
and
push
aam
pop
into
cmpsb
pusha
filds
mov
shl
add
lret
loopne
or
sarb
shrb
scas
popa
inc
dec
xor
inc
scas
mov
jmp
movsl
jo
xchg
or
shr
jl
mov
xchg
xor
mov
sbb
mov
jecxz
rorl
ret
sar
cmp
cmpsb
cmpsl
sub
pushf
in
sbb
scas
or
lods
and
sbb
in
sub
je
jmp
mov
ljmp
push
inc
and
out
or
daa
idivl
inc
jo
push
sub
nop
es
stos
loop
ror
adc
mov
addr16
imul
shrd
aaa
frstor
xor
sbb
push
fcoml
push
outsb
out
idiv
cli
and
add
sub
fdivr
ss
std
out
mov
push
xor
sbb
push
jmp
clc
inc
lcall
dec
sub
pop
int3
sub
jle
roll
adcb
ret
push
sbbw
jae
add
jmp
out
js
xor
cli
push
fstpl
mov
dec
and
bnd
jmp
push
push
add
dec
mov
test
cmp
jmp
cmc
or
movsl
adc
and
aas
shrl
out
jns
jnp
int3
clc
inc
movsb
testl
pusha
filds
aam
addr16
or
andb
sti
jae
outsl
sbb
out
adcb
adc
jbe
cs
cld
gs
out
pop
mov
lods
mov
inc
ret
dec
repz
cmc
xchg
or
mov
mov
nop
shll
inc
adc
repz
test
dec
aad
xor
push
xor
out
sub
sub
testl
test
sub
dec
fs
or
out
xchg
ret
add
jmp
call
mov
scas
das
cmp
pusha
lret
cmpsb
jbe
fdivs
addb
adc
xor
cmp
test
jne
test
sub
imul
sbb
sahf
pop
adc
adc
orl
push
mov
cmp
fprem
xor
stos
dec
push
jle
xor
push
repnz
dec
arpl
cmp
dec
pop
sub
out
movsb
cmp
inc
jl
in
out
cld
cmc
fwait
sbb
push
cmpsl
mov
out
inc
loope
jge
push
or
cli
mov
push
and
enter
movsb
icebp
mov
sub
cmp
mov
jecxz
push
and
scas
push
add
frstor
or
sub
mov
sub
inc
pop
push
nop
out
sub
add
mull
roll
sub
xor
shlb
fdivl
movsb
rcl
orb
inc
jp
repnz
les
enter
jge
into
cmp
clc
jbe
pop
sub
sub
dec
decl
pusha
mov
fsubl
xor
mov
out
sub
dec
scas
out
cmp
xchg
hlt
jle
in
cmc
incb
xor
or
pop
or
mov
pushf
mov
sub
or
mov
adc
jmp
iret
push
xchg
clc
scas
xchg
jmp
dec
xchg
insl
cmp
lret
inc
sbb
shl
call
push
movsb
xlat
stc
js
movsl
add
aas
adc
in
push
sbb
insl
mov
jmp
push
aas
cwtl
add
pop
cmp
lcall
xor
out
cmp
push
inc
hlt
adc
mov
xchg
add
nop
push
mov
lcall
cmp
shlb
loopne
sahf
jecxz
fs
das
imul
repnz
mov
in
or
mov
adc
push
xchg
jl
fucomi
and
push
and
and
jnp
push
dec
cli
pop
mov
jp
mov
out
cmpsb
repnz
or
mov
inc
and
daa
fdivl
pop
clc
sbb
out
dec
jecxz
inc
rclb
fldl
lock
shlb
push
imul
mov
cmpsl
in
test
xchg
push
repz
pop
jb
dec
daa
or
ja
add
lds
push
mov
aad
inc
mov
lods
adc
test
lahf
dec
ret
or
push
fucomp
dec
xchg
dec
push
pop
xchg
cmp
int
sbb
xchg
add
add
dec
rcrl
mov
bound
and
xchg
dec
or
mov
xchg
daa
jbe
cmpsl
mov
ret
popf
stc
pushf
addb
arpl
sbb
push
and
sbb
lds
lods
sbb
daa
leave
adc
or
dec
mov
fsubrl
lea
cmp
aad
mov
mov
pop
mov
mov
fisubs
out
mov
inc
jg
xlat
mov
mov
fwait
xchg
loope
ret
ret
xchg
sub
add
add
call
jp
and
cs
pop
lods
loop
jecxz
andl
icebp
popf
jg
sarl
mov
sbb
int
jg
push
add
aaa
out
outsl
dec
jg
aam
bound
gs
and
push
push
mov
mov
ja
gs
lds
adc
fsubl
test
scas
repz
notb
push
test
pop
stc
inc
xor
cmp
sub
xor
imul
movsb
xchg
mov
mov
mov
mov
cs
and
jae
pusha
or
jne
pop
adc
call
out
test
into
std
inc
pop
scas
xor
es
xor
jo
pop
push
icebp
in
sbb
inc
and
pop
enter
pushf
repnz
cld
sub
push
test
addb
sub
xchg
test
dec
cld
outsl
int
inc
scas
add
psubw
and
pop
fdivs
arpl
xlat
xchg
mov
jae
dec
outsb
and
pop
sub
out
add
pop
ljmp
push
cmp
dec
dec
inc
aam
jmp
outsb
xor
dec
popf
push
or
dec
jno
insb
push
sahf
jnp
ljmp
fadds
test
cmpsb
inc
inc
sbb
test
pop
daa
pop
sub
jns
xor
mov
fwait
jl
fistpl
aaa
inc
repz
push
int
shl
je
inc
je
sarl
jb
rcrl
sub
mov
jmp
pop
xchg
dec
lcall
rcll
inc
js
aas
std
ss
gs
or
push
sbb
xchg
insl
push
arpl
ja
or
int3
sahf
js
in
pop
inc
inc
negb
ss
popa
mov
mov
and
sbb
inc
xchg
cmpsb
aas
lret
ffreep
pop
dec
and
pop
cmp
das
dec
pop
mov
mov
push
hlt
popa
in
push
sbb
pushf
out
sub
mov
pushf
xchg
arpl
in
adc
or
xchg
lock
rcl
push
ret
arpl
pop
inc
xchg
outsb
in
pop
add
add
and
xchg
mov
xlat
adc
mov
into
out
flds
inc
sbb
jp
sbb
push
rcr
adcl
sub
or
scas
sbb
push
cmp
xchg
jg
sahf
ds
sbb
or
add
push
adc
mov
jbe
enter
mov
or
pop
inc
pop
add
xchg
test
adc
fists
frstor
in
adc
rcl
loopne
mov
inc
mov
mov
fwait
sub
mov
test
clc
sarl
adc
mov
mov
adc
popa
xchg
fidivs
sbb
jne
adc
push
xchg
cmp
and
ret
outsl
daa
push
iret
pop
sub
jp
test
lock
jge
icebp
hlt
outsl
mov
or
or
and
adc
pop
pop
or
and
lock
jmp
fnstsw
shl
push
inc
pop
pop
ja
xor
nop
inc
add
lcall
hlt
mov
mov
ja
outsb
aaa
jmp
lods
push
mov
xchg
out
inc
push
pop
enter
mov
push
sbb
push
mov
xchg
or
xchg
mov
outsb
mov
ljmp
sbb
cmp
aam
xchg
xchg
push
jb
cmpsl
lret
sbb
sbb
push
cltd
mov
dec
push
add
cmpsb
pop
int
xor
dec
add
popf
clc
inc
or
bound
and
jae
inc
cmp
jns
fdiv
sub
ja
push
push
aad
loop
movsl
mov
cmovle
clc
js
add
ret
mov
jge
add
es
jge
cmp
aad
jns
fcompl
dec
sbb
scas
arpl
out
cmpsb
and
add
jmp
add
lock
mov
xchg
arpl
mov
mov
inc
pop
ljmp
jae
pop
sub
xchg
inc
and
xchg
pop
icebp
lcall
mov
cmp
out
mov
repnz
fists
movl
jle
add
mov
sbb
push
pop
cmpsb
gs
daa
sbb
push
push
dec
bndstx
adc
adcb
xchg
jle
cmp
loope
jno,pn
out
jmp
push
cmp
mov
arpl
cwtl
xchg
movl
lods
imul
inc
push
je
ret
insb
add
add
pop
mov
mov
fbld
push
sbb
sub
jno
dec
push
call
shl
cld
sbb
lret
dec
adc
add
gs
loop
scas
call
ja
dec
xor
cmpsb
add
jp
loopne
sbb
out
faddl
in
xlat
mov
dec
repnz
mov
sbb
sahf
jge
pop
sbb
and
mov
inc
mov
jge
sbb
push
add
scas
jmp
sbb
push
loope
imul
push
popf
pop
and
in
push
cltd
ret
push
cmc
jecxz
mov
clc
push
leave
inc
jno
fmul
loop
dec
and
sti
shll
mov
sub
jge
xchg
or
mov
cmp
bound
aad
aas
mov
jmp
add
shlb
or
shr
mov
shld
xrelease
push
jl
ss
push
mov
cmp
leave
or
jno
dec
sbb
push
cmpsb
je
das
xchg
dec
pop
dec
push
and
cmp
mov
fwait
lahf
dec
and
push
xor
adc
test
mov
out
inc
loop
cmp
ljmp
aad
adc
insb
pop
int
push
arpl
sti
adc
repz
movsb
mov
inc
hlt
sub
mov
sub
dec
popa
inc
jp
xchg
mov
clc
out
push
jbe
jo
xor
test
imul
nop
add
mov
mov
into
orw
dec
btr
mov
sub
xchg
pop
mov
lret
icebp
fdiv
mov
fmull
mov
test
mov
inc
inc
mov
roll
imul
sub
jne
cmp
jbe
and
gs
enter
inc
push
or
idivl
lahf
cmpsl
imulb
jbe
or
in
lahf
ficoml
lods
in
sub
add
inc
jecxz
ffreep
and
cli
movsl
clc
test
les
and
imul
pop
les
je
int
lret
in
aas
loopne
jp
xor
mov
lock
push
dec
int
pop
lods
pop
sbb
dec
jge
mov
mov
xlat
in
popf
xor
int3
lds
ljmp
or
sbb
sub
xor
push
lcall
test
loopne
cmp
ret
pop
jmp
and
fdivr
and
xchg
hlt
mov
lret
pushf
or
mov
push
sbb
push
or
fimull
cmpl
sbb
leave
add
loopne
lret
xchg
es
adc
hlt
cs
pop
jae
adc
and
xchg
jl
sarb
dec
or
testb
scas
sub
pop
mov
or
cmp
mov
mov
add
dec
sti
in
adc
outsb
and
jnp
lret
inc
mov
or
sahf
nop
jno
add
addr16
mov
cmpb
inc
mov
jecxz
aas
cmp
repnz
cmp
pop
add
imul
jmp
jne
push
push
pop
nop
aaa
lea
xor
push
xchg
xchg
adc
test
je
adc
push
dec
sti
sub
repnz
mov
sbb
es
fwait
repz
cmp
dec
or
fimull
lcall
daa
sti
mov
jae
fs
adc
sbb
lret
jmp
fisttpl
std
xor
ret
outsl
popl
leave
popf
dec
push
mov
nop
movsl
dec
out
lods
cs
push
fs
fdivrs
out
shll
out
push
stos
outsb
pop
fidivl
mov
enter
inc
xchg
out
mov
or
xor
pusha
adcb
js
lock
outsl
cltd
aam
add
sbb
lods
lcall
mov
push
jl
enter
cmp
mov
cmp
sbb
xor
jnp
lods
or
insb
mov
cmpb
mov
xor
andb
out
inc
test
push
mov
rclb
cmp
cli
mov
das
movsb
mov
dec
mov
sbb
idivb
xchg
mov
test
ret
aaa
push
ja
mov
mov
dec
xor
mov
pop
sbb
jge
pop
jne
fidivl
ret
jle
into
cltd
sar
pop
rcrl
cmp
add
sbb
loopne
push
rorb
push
hlt
aam
inc
shll
jg
cwtl
xchg
nop
mov
inc
cmp
adc
ds
das
stc
dec
xchg
push
sbb
cmp
clc
lret
xlat
mov
js
push
clc
aas
mov
or
jecxz
dec
mov
in
iret
stos
movsb
insb
add
mov
or
jne
mov
sub
jns
int
outsb
push
pop
sub
clc
pop
or
push
fdivs
add
inc
mov
cmp
ljmp
push
out
add
dec
dec
jecxz
inc
repnz
stos
jecxz
xorb
and
xchg
adc
dec
in
mov
and
mov
sub
pop
sub
inc
hlt
xchg
pop
cmp
sbb
fiadds
fsubl
cmp
xchg
dec
jg
sbb
xor
ds
inc
sub
std
mov
pop
pusha
pop
shl
test
add
push
scas
bound
xchg
cmp
jge
loopne
pop
adc
nop
jno
push
and
sub
ret
scas
loope
loope
enter
inc
mov
mov
cmp
mov
dec
sti
dec
xchg
mov
add
inc
mov
xor
imull
out
cmpsl
mov
push
or
clc
pop
xchg
add
inc
mov
adc
cmp
in
sbb
shll
mov
or
inc
subb
iret
xor
test
in
jp
dec
inc
ret
loop
adc
xor
imul
inc
xor
aam
iret
push
xor
int3
jg
dec
sbb
out
stc
lds
ss
lcall
cmpsb
lahf
jno
adc
daa
loop
mov
push
gs
lret
cmpsb
into
dec
xor
test
xor
inc
jb
pop
rolb
jl
movb
push
push
mov
test
xor
stos
jo
shlb
lcall
mov
mov
mov
cmp
jmp
or
leave
hlt
push
js
mov
popa
and
into
jl
js
lahf
ljmp
push
fnstcw
js
push
lahf
inc
hlt
outsb
sbb
orb
pop
call
xor
leave
aad
lcall
mov
mov
mov
mov
push
add
lret
or
mov
push
popf
mov
push
and
mov
ret
clc
in
pop
rdtsc
xchg
adc
ror
push
ja
repz
cmp
scas
ja
xchg
sub
imul
in
pop
js
sbb
jno
mov
daa
jne
or
dec
scas
jmp
mov
push
into
pop
push
fs
pop
dec
insl
jae
jbe
xor
add
push
adc
addr16
adc
addl
push
rorb
cmovg
dec
jp
inc
cmp
movsl
push
inc
negl
cmc
dec
xchg
cmp
loop
insl
mov
jae
in
and
mov
or
cmp
fsubl
das
fwait
popf
pop
adc
ret
aad
pop
and
fwait
loope
outsb
fcoml
add
xor
arpl
in
sbb
adc
loopne
jp
sub
xlat
pusha
sti
cmp
insl
mov
push
xchg
sbb
int
or
imul
sbb
scas
xchg
sbbl
and
sarl
test
fmuls
test
pop
mov
mov
imul
mov
scas
imul
and
fsubr
and
cmp
aaa
fidivl
or
cmp
repnz
and
add
aaa
sbb
mov
inc
sub
aad
movsl
jne
icebp
lods
loope
jo
enter
mov
push
mov
and
dec
loop
lock
hlt
xor
data16
clc
lahf
push
jns
and
imul
sub
icebp
mov
scas
jbe
shll
mov
call
cmp
mov
in
xlat
jmp
jae
fistpl
inc
cmp
mov
cmp
cmp
jno
and
mov
jns
mov
dec
roll
jb
jecxz
sbb
or
std
sub
in
sahf
inc
dec
mov
xchg
add
daa
dec
stos
clc
call
enter
out
and
push
pop
xor
lahf
fidivl
inc
adc
loop
xor
testl
and
pusha
jb
xor
mov
inc
fisubrs
imull
or
jno
dec
test
enter
pop
xchg
adc
sbb
mov
sbb
loope
mov
jbe
dec
or
rorl
mov
popw
fsubrs
lcall
push
pop
add
int3
repnz
adc
mov
push
push
inc
int3
push
mov
adc
inc
dec
inc
mov
dec
rdmsr
repz
jne
cmp
pop
add
jns
add
mov
push
mov
loope
add
dec
addl
push
or
adc
dec
outsl
jbe
cmp
xchg
inc
push
or
xor
inc
loopne
sbb
inc
mov
fprem
pop
jge
fidivrs
icebp
jl
test
add
lea
cmpsb
jne
adc
repnz
pop
flds
xor
imul
sti
andb
int
ja
sub
ja
jl
and
xchg
int
sub
jnp
daa
sbb
into
xchg
popf
xchg
dec
aas
adc
or
subl
int
ljmp
stos
aaa
sub
and
jne
arpl
xchg
fwait
test
data16
test
mov
mov
mov
lods
or
sub
and
or
push
clc
push
lahf
xchg
add
call
push
dec
in
xchg
insl
add
bound
test
dec
sbb
aaa
add
test
sub
push
sahf
xchg
lret
cli
or
leave
addr16
std
mov
push
pusha
add
stc
mov
inc
and
push
inc
std
or
dec
and
loopne
push
les
mov
push
cmp
out
int
mov
clc
jbe
lret
jle
xchg
fwait
or
enter
jne
xor
repnz
ja
cmp
shrb
fidivrl
jae
add
sbb
sbb
nop
inc
into
sub
sub
push
mov
arpl
out
mov
pop
add
fldt
mov
lret
sub
pop
mov
pushf
into
pop
and
bound
out
fstp
in
sub
notb
push
inc
imul
dec
mov
xlat
xchg
cmp
inc
cmp
inc
out
push
sti
clc
cmp
lret
mov
mov
pushf
pop
sbb
xchg
jmp
popa
les
sbbl
jge
cmp
je
out
push
sbb
add
xor
and
inc
adc
fwait
mov
cmp
pop
lds
mov
pop
daa
or
movsb
sahf
dec
push
in
sahf
outsl
int
cwtl
arpl
negl
cwtl
push
adc
cld
cmpsb
add
inc
fiaddl
inc
adc
fucomi
jo
mov
sub
js
negb
cmp
std
lahf
cmp
imul
pop
adc
cmp
pop
repz
ret
test
rorb
insl
stos
ss
pop
iret
and
pushf
insl
lahf
jns
leave
jno
fcompl
mov
dec
pop
mov
and
addr16
outsl
outsl
mov
jl
mov
out
mov
fsubl
cmpsb
mov
pop
jae
push
mov
cltd
subl
push
dec
xlat
iret
shr
or
rclb
inc
mov
clc
mov
fsubrp
xlat
shl
out
jo
inc
aad
lahf
inc
lahf
cmpsb
shl
stos
xor
int
jl
repnz
xor
lcall
push
fcoml
loope
pop
adc
add
sub
das
lock
mov
mov
cmc
cmp
pop
xchg
xchg
pop
loop
push
je
mov
mov
xor
sti
and
mov
std
rcrb
or
rorl
pop
pop
mov
mov
and
rcrb
adc
mov
rcrb
fs
jo
cwtl
imul
jno
jmp
fsubs
adc
xor
cmpl
cmp
cmc
pusha
dec
xchg
aaa
aad
add
push
or
fdivrl
pop
in
push
pop
popl
sbbb
sbbb
or
and
test
and
imul
cmp
or
mov
push
push
mov
xor
mov
faddl
xchg
stos
cmp
dec
jo
lcall
pop
sub
dec
shl
adc
out
hlt
popa
mov
ljmp
mov
add
int
fmuls
jmp
pop
in
pop
sahf
or
outsb
arpl
and
arpl
adc
dec
jo
inc
addb
sub
inc
aad
aas
fists
dec
adc
inc
les
and
sbb
jb
popl
sub
into
or
iret
adc
push
mov
sbb
int3
pop
test
mov
cmpsb
cmp
mov
loope
das
orb
cmp
xor
lds
or
imul
cmc
inc
pop
popa
dec
push
psubb
mov
lock
pop
sbb
push
push
loop
mov
mov
xlat
movsl
je
scas
test
fs
mov
sub
add
inc
dec
xor
inc
iret
hlt
push
std
ljmp
and
mov
in
dec
mov
pop
adc
fldl
mov
popf
adc
pop
call
fcom
cmp
mov
sbb
arpl
xchg
cmpsb
sbb
fcmovu
in
mov
imul
es
mov
pop
idiv
mov
xor
mov
in
fcmovb
add
movlps
xchg
ret
cs
shrb
xchg
fs
cmp
fidivl
in
jg
mov
notb
ret
push
aas
test
add
xchg
and
mov
popf
cmp
add
sub
and
outsb
jg
ss
inc
hlt
mov
push
hlt
xchg
dec
fimull
insb
xor
aam
xor
mov
in
push
xchg
xchg
ss
ret
test
ret
in
mov
mov
mov
pop
mov
pop
cmp
stos
cmpsb
xor
pop
lcall
fwait
int3
inc
dec
pop
negb
nop
xlat
pop
xlat
cmp
dec
jo
xchg
aad
dec
movsb
jo
mov
xor
push
gs
aad
test
mov
ja
hlt
jge
and
sub
dec
pop
scas
inc
test
pop
jns
fiaddl
ror
out
mov
mov
dec
sub
test
push
or
sbb
mov
dec
out
xor
adc
add
rcll
stc
frstor
inc
or
cmp
loope
imul
and
scas
jg
rcrl
popa
cwtl
outsb
or
jbe
xchg
jg
out
pop
sub
pop
add
rorb
pop
fisttpll
out
mov
mov
fcmove
enter
adc
and
inc
jg
pop
movsb
scas
scas
mov
popf
sub
loope
test
cmp
call
repnz
rcl
pop
icebp
test
movsl
iret
push
test
pop
or
and
push
xchg
xor
fdivl
push
adc
jl
add
movb
jecxz
jae
xor
and
ljmp
mov
outsb
mov
repnz
mov
sti
iret
dec
push
lock
imul
cmp
cmpsl
lods
mov
movsl
pusha
les
mov
cmpsl
mov
sub
clc
imul
aam
inc
add
mov
ds
or
dec
dec
pop
inc
in
subb
mov
lcall
mov
ficompl
into
jecxz
sbb
inc
or
push
jg
leave
jae
loope
inc
cmp
pusha
xchg
add
inc
sub
bound
sub
fcmovnb
pop
add
xchg
insb
mov
ds
sub
lret
sub
cs
aaa
icebp
xchg
lahf
lock
xchg
call
lods
mov
rcrl
lahf
sub
add
push
sub
sbb
testb
and
push
push
lea
sbbb
jecxz
jo
xchg
jne
fwait
out
daa
lock
icebp
push
testb
xlat
ds
stc
xchg
out
sahf
jbe
sbbb
fs
pop
pop
xchg
push
cwtl
jo
adc
dec
popf
adc
pop
inc
mov
jb
sub
lret
xor
ss
hlt
jg
pop
mov
jb
js
bnd
insl
inc
and
scas
push
sub
adc
aam
xor
sahf
inc
push
repz
arpl
xor
adc
or
inc
mov
adc
add
test
scas
adc
addr16
mov
repz
sbb
cwtl
addl
push
out
cmpxchg
sahf
inc
adc
pop
or
dec
pusha
push
cmp
repz
lea
mov
or
fidivrs
mov
insl
lea
sbb
mull
cltd
or
in
mov
scas
dec
movsl
push
icebp
and
adc
xchg
lods
mov
ficoml
push
imul
xchg
xor
dec
cmpsl
dec
imul
add
shrl
cmp
movsb
sub
jae
inc
insb
inc
mov
adc
cmp
fwait
scas
scas
fcompl
mov
mov
inc
js
xchg
cld
dec
sti
fisubrl
cmc
inc
adc
dec
aad
jno
es
shlb
ja
push
shlb
mov
jl
adc
fwait
or
and
fnstsw
cmp
in
xchg
mov
dec
xor
stos
jo
fwait
jmp
mov
and
xor
pop
mov
nop
push
bound
sahf
rcl
dec
adc
xchg
push
ds
nop
out
mov
inc
xchg
sub
mov
ljmp
ret
pop
or
std
add
pusha
repz
xor
push
mov
pop
lods
inc
jmp
shrl
mov
pusha
bound
nop
jo
mov
jb
push
in
and
imul
mov
push
outsb
add
lock
push
std
lret
cmp
iret
add
dec
dec
lret
or
xchg
int
rclb
mov
hlt
roll
faddl
and
ret
fsts
out
cmpsb
loope
fisubrs
push
cmp
push
push
outsb
and
pop
or
inc
mov
lds
sub
mov
mov
pop
jnp
ja
push
fsubl
mov
lods
icebp
ds
cmp
lea
lcall
decb
test
loope
or
and
in
push
ret
mov
iret
pop
adc
aas
repnz
adc
pusha
lret
mov
lock
jl
inc
out
mov
mov
outsb
cmp
xlat
and
stc
jae
out
iret
sbb
dec
fstp
ficoms
pop
dec
and
pushl
xor
inc
addb
cli
mov
cld
out
fdivrl
and
sub
adcb
out
push
ljmp
mov
call
fdivr
shll
adc
push
mov
add
or
icebp
loope
sub
sub
cli
or
adc
fiaddl
arpl
aad
pushf
pop
int
cmp
or
mov
loope
fisttps
mov
arpl
dec
out
push
pop
cmpsb
mov
enter
data16
mov
fstpt
scas
call
cmp
test
in
sub
sbb
mov
scas
arpl
stc
inc
stc
in
jne
adc
fldenv
xchg
shll
dec
rorl
rcr
popf
xor
or
stos
jo
sub
jne
cld
mov
mov
push
popa
mov
push
int
in
clc
stos
or
dec
sub
jge
mov
sub
xor
test
movsb
pop
adc
adc
stos
adc
ret
lahf
inc
inc
cmp
cltd
mov
aaa
add
stos
sub
rcr
adc
ds
pop
xchg
and
dec
cmp
std
pop
jne
or
popf
insl
or
leave
cs
loope
mov
xor
rorb
inc
clc
shrb
dec
movsl
int
nop
insl
mov
and
xor
dec
push
add
push
mov
mov
cmp
stc
inc
cli
int
xor
fcompl
xchg
fldl
sub
and
aad
or
dec
fidivrs
movsl
mov
pushf
mov
mov
and
loop
repz
jge
lret
fmulp
and
stos
jbe
dec
push
rolb
sbb
jnp
xor
sub
ret
pop
inc
pop
lock
mov
inc
mov
cmpl
xor
inc
cmp
inc
jp
sbb
sbb
push
aad
pop
pop
mov
push
mov
sti
mov
xor
mov
inc
jnp
mov
pusha
push
sbbl
mov
movsl
sbb
xor
or
push
addr16
add
and
aad
mov
repz
jnp
dec
jmp
mov
push
xor
xchg
jne
mov
ja
mov
pushf
in
mov
dec
xchg
push
or
xlat
scas
mov
mov
sbb
xor
mov
icebp
test
xchg
nop
xchg
cltd
cmp
add
jmp
push
and
dec
jle
dec
jbe
dec
call
test
fs
sbb
les
stos
mov
dec
mov
dec
adc
jmp
iret
test
xor
lret
in
icebp
and
and
push
mov
fadd
adc
imul
xlat
add
xchg
sbb
sbb
mov
arpl
outsb
pushf
sbb
mov
ds
inc
cmpsl
out
and
cmp
nop
xlat
int3
popf
js
lods
xor
lret
mov
or
push
cmp
in
jp
out
ss
ret
jns
push
mov
mov
mull
add
cmp
dec
jns
sbb
loopne
test
mov
repz
into
popf
cmp
ror
xor
cmp
xor
out
jmp
add
mov
test
icebp
inc
push
and
mov
sub
and
xor
popa
mov
and
jp
xor
fnstcw
ds
mov
sbb
add
in
mov
or
lock
hlt
mov
inc
jg
sarl
mov
jne
push
dec
cld
lahf
jmp
and
xchg
sub
lds
cmpl
sub
dec
dec
mov
xlat
das
cmove
das
das
mov
mov
cld
pop
nop
dec
jle
jecxz
mov
xchg
cmp
into
int3
jae
push
add
mov
pushf
daa
dec
cltd
xchg
loop
out
cmp
fsubr
pushf
pop
cmp
pop
mov
or
jae
test
outsl
fs
mov
arpl
fldcw
jo
xchg
sub
add
das
mov
jge
pop
push
mov
repz
dec
push
test
test
sbb
int
jns
pushf
push
mov
in
sar
out
ja
ds
xchg
bound
and
pop
enter
cmpsl
dec
js
rorb
icebp
bound
push
aaa
jl
xor
jge
cmp
rcrb
sbb
and
sbb
pop
push
hlt
into
dec
shlb
jns
jmp
jno
xor
ss
lds
sbb
ljmp
dec
into
fisttps
sbb
fsubl
clc
fildll
push
jge
cmp
aas
movsl
std
cli
xor
loope
daa
dec
or
xchg
aas
xlat
xchg
imul
push
mov
cmp
mov
out
adc
repnz
sbb
jno
sqrtps
cmp
movsl
in
lcall
sti
pop
aaa
aaa
lret
pop
fsub
push
push
jge
or
and
test
pushf
jbe
ljmp
adc
xchg
pushf
insl
daa
mov
jp
fmull
pop
mov
sub
test
pop
repz
aad
icebp
test
xchg
push
jae
xor
testb
and
mov
and
xlat
sbb
fimull
adc
and
mov
xorl
cmp
inc
mov
js
sub
and
jp
shll
jge
insl
scas
cs
push
adcb
sub
sbb
add
push
and
jmp
mov
inc
push
mov
adc
ja
inc
rcrb
inc
mov
loope
push
enter
fmull
subl
xlat
in
inc
pop
inc
adc
stc
cmpsb
dec
sub
sbb
push
inc
mov
adc
sahf
test
dec
jg
cs
cmp
sub
lea
dec
jae
aas
rcll
cs
cli
dec
out
add
aaa
rcll
cld
movsb
push
test
add
jae
mov
pushf
add
nop
pushf
orb
jle
cmc
jecxz
in
xor
mov
orb
jnp
icebp
fadd
add
xlat
xor
or
rcr
das
repz
data16
adc
fnstsw
cmpsl
lea
rol
mov
push
jae
adc
decb
dec
in
push
stos
nop
movsl
mov
cmp
add
push
call
inc
js
sbb
push
icebp
push
pop
and
ds
sbbl
inc
shll
mov
jbe
push
jb
adc
aaa
call
cmpsl
out
lahf
shl
mov
je
dec
push
dec
mull
sbb
inc
sub
imul
and
jp
gs
pushl
mov
ss
push
pop
and
jnp
es
sbb
cmpsl
repz
jmp
adc
in
jp
rolb
or
xchg
fcoml
xor
pop
xchg
sbb
repz
pop
xchg
pop
dec
arpl
push
push
jl
loopne
jle
insb
inc
icebp
xor
aas
jg
xchg
mov
push
shrl
xlat
sub
xchg
and
cmp
pop
push
in
pop
pusha
rcr
lods
jb
pop
repz
dec
fnsave
imul
sbb
jb
and
push
xor
sub
pop
mov
movsb
xchg
lock
pop
imul
shr
add
mov
aad
daa
push
xor
push
repnz
aam
mov
jp
xor
ja
mov
mov
int
faddl
mov
push
sarl
not
push
imul
negl
push
in
xchg
data16
ljmp
bound
or
daa
in
mov
dec
xchg
out
mov
push
xlat
cmpsb
adc
roll
in
dec
jne
jl
inc
pop
scas
loopne
fld1
stos
inc
imul
imul
and
insl
popf
and
and
mov
shrl
mov
test
jmp
loopne
inc
scas
insl
jnp
jo
stos
push
aas
jnp
popf
fistpll
adc
inc
fdivr
mov
repz
and
sti
cmp
mov
mov
xor
mov
arpl
and
fst
lods
xchg
test
jg
pop
cs
adc
or
cmpsl
fisttpl
push
in
in
pop
sub
inc
cs
insb
sub
cmp
xor
cmc
jp
pop
jbe
pop
mov
jne
xchg
sar
mov
scas
inc
lds
lods
mov
mov
daa
mov
xchg
cmp
ja
out
push
adc
add
xchg
pop
pop
icebp
sbb
and
jmp
arpl
mov
add
test
mov
mov
jns
in
sub
jge
jmp
sbb
ret
pop
push
addb
mov
lea
cmc
ljmp
mov
ret
popl
les
mov
cmp
fistl
fsub
fsubrp
xchg
in
xchg
divb
or
mov
pushf
jnp
jl
xchg
xor
mov
adc
mov
cmpsb
jg
clc
movsb
push
sarb
sahf
fcmovnu
in
std
jnp
stc
stos
ret
push
mov
imul
sahf
scas
std
stos
sub
movsb
imul
shll
mov
out
mov
daa
pop
pop
pop
fcoms
pop
lds
pop
push
xor
das
movsl
or
jecxz
mull
sti
xor
ss
jp
aaa
or
inc
push
stos
xor
mov
aam
xor
loopne
pop
pop
jnp
dec
movsl
push
sbb
mov
pop
lds
lods
cmp
pop
inc
in
sbb
in
arpl
cld
leave
cmp
ds
pminsw
std
loope
mov
pop
test
faddp
mov
pand
stc
sub
int3
sub
aad
bound
ror
xchg
lock
or
fiadds
fs
dec
mov
addr16
mov
dec
int
aas
cmp
test
rorl
scas
out
mull
jge
xchg
inc
lea
add
enter
and
iret
push
cmp
mov
mov
movl
fs
adc
mov
stos
mov
jno
push
je
js
sbb
popa
leave
sahf
dec
insb
fimull
das
pop
pop
and
mov
cmp
push
nop
or
sahf
gs
pop
adc
push
mov
dec
xor
mov
jp
out
or
cmpsl
inc
or
xor
ss
mov
cmp
fildl
ret
push
pop
mov
push
push
jne
outsl
xor
jae
call
mov
cmp
mov
xlat
shlb
xchg
sbb
sub
adc
mov
cmp
daa
dec
cmp
sub
inc
in
jbe
scas
fldenv
push
pop
fidivs
cmp
out
pop
enter
repz
mov
insb
jb
xor
jl
add
adc
repnz
sbbb
xchg
call
adc
loopne
iret
sbb
push
xor
jae
adc
in
xchg
mov
loopne
lea
dec
ret
add
enter
nop
push
inc
inc
cmpsl
mov
pop
xor
push
lret
mov
pop
lea
out
mov
jnp
inc
inc
cmc
dec
std
jge
scas
and
je
pop
xchg
mov
xor
popf
sub
aad
mov
mov
movb
sahf
js
ret
adc
adc
pop
inc
stos
add
gs
sub
out
push
cmpsl
mov
int
add
push
jbe
push
test
mov
lock
divl
fsub
cs
mov
jns
sub
cmp
pop
incb
lods
dec
jbe
stos
pusha
mov
scas
enter
lods
inc
ds
dec
fstps
jo
aaa
inc
inc
cld
xor
xchg
dec
pop
mov
mov
jnp
in
sbb
pop
adc
movl
adc
jno
stos
imul
cmp
mov
mov
lods
or
pop
dec
mov
ret
xorb
into
push
and
stos
xchg
sbb
cmp
lea
pop
dec
iret
sub
mov
sbb
mov
pop
add
scas
jo
dec
cmpsb
outsb
sar
mov
push
leave
xchg
adc
adc
mov
push
fmul
aas
lcall
or
push
push
mov
test
test
xchg
or
and
push
stc
pop
pop
adc
jle
jbe
sti
xchg
sbb
mov
hlt
cli
std
jae
je
or
jg
shrl
leave
lcall
add
fidivrl
pop
xchg
ja
call
mov
cltd
and
pop
jnp
push
jo
push
rcrl
xor
aas
ljmp
mov
shll
mov
inc
adc
push
push
fcoml
filds
ja
jno
xlat
rcll
data16
push
sub
add
jmp
cld
test
dec
pop
cmpsl
cs
mov
mov
xchg
cmp
test
outsb
jo
adc
sbb
pop
roll
mov
sub
push
ja
adc
or
call
mov
faddp
adc
pop
and
jno
aas
fs
rorb
enter
int3
xor
ret
in
sbbb
mov
scas
mov
add
sub
xor
mov
stc
cli
imul
jae
shll
or
scas
ja
cmpsl
cmp
hlt
lahf
xor
clc
rorl
jge
sidtl
mov
xchg
out
xor
jg
mov
lret
shr
and
sbb
aam
bound
sar
xor
or
push
add
lods
ds
mov
adc
jnp
arpl
lds
rclb
rcl
es
cli
mov
andl
inc
adc
pop
add
xchg
sub
les
ljmp
pop
pop
xor
xor
in
mov
rolb
lock
cld
push
mov
loope
mov
or
adc
out
pop
cmpl
mov
mov
lock
popl
jnp
pop
xor
test
push
js
fisttpl
shlb
pop
push
xchg
or
xor
xor
jbe
rorb
cmp
rcl
xchg
movsb
test
fwait
jae
cwtl
xor
jp
outsl
mov
sub
push
das
int
icebp
xchg
fstps
int3
aad
adc
mov
aad
add
inc
jge
pop
out
dec
ljmp
mov
inc
jle
xlat
pop
std
insl
and
adc
jle
push
jmp
lods
sub
lahf
pop
mov
outsl
data16
and
into
ret
lock
mov
ret
rcl
xchg
push
xor
jae
fildl
fwait
int3
or
pop
and
pop
cmp
sub
leave
mov
dec
xlat
push
leave
in
push
insl
sub
inc
lods
adc
sbb
mov
sbb
push
sbb
mov
xchg
push
repz
push
std
mov
mov
mov
or
mov
jg
jl
outsl
sub
mov
jecxz
fisttps
dec
in
xchg
xor
or
cmp
adc
frstor
mov
mov
cltd
lret
jae
ds
fisubrs
mov
stc
mov
mov
inc
das
ss
pop
jae
fisubs
jp
pop
mov
sbb
into
out
nop
stos
xor
mov
and
lock
clc
aam
mov
popf
push
rcr
jno
hlt
cwtl
mov
mov
xor
je
mov
lock
mov
aas
xorb
mov
out
xor
xchg
jo
push
fmulp
sbb
inc
sub
jp
dec
jo
or
pusha
das
ror
in
sub
imul
popf
jg
mov
mov
or
stos
xchg
jg
bound
push
test
inc
jbe
push
scas
mov
push
out
and
jmp
daa
cmp
mov
cmp
movsb
daa
popa
cld
ror
cmp
pop
mov
je
out
in
data16
dec
push
hlt
test
sub
mov
and
aad
shl
cmp
adc
fisttpll
mov
cld
inc
push
push
push
xor
jo
leave
xchg
push
dec
push
mov
push
xchg
out
adc
add
out
sbb
test
outsl
xor
pop
push
sub
xor
adc
in
arpl
in
jmp
and
scas
push
das
mov
nop
mov
repnz
in
push
cmp
mov
ljmp
jle
and
sahf
in
pushf
clc
inc
stos
mov
mov
outsl
sub
stc
xchg
repz
loopne
push
adc
and
adc
scas
mov
and
push
fcoml
pop
in
xchg
into
imull
inc
int
pop
nop
sbb
lcall
test
repnz
xchg
shrl
dec
nop
nop
ss
pop
mull
ja
push
or
out
lea
lret
aam
aam
fxch
xor
daa
add
xchg
jae
lcall
aad
jae
ja
aaa
sub
divb
xor
push
mov
pop
mov
fwait
loop
fcoml
adc
les
inc
and
mov
add
jne
xlat
inc
cli
cli
ds
aad
cmp
mov
fidivrl
xor
pop
iret
test
xchg
out
xchg
and
mov
xchg
std
loope
lcall
or
mov
cmp
mov
mov
jl
pop
adcb
test
leave
idivl
adc
mov
iret
movsl
popa
or
xor
aad
sub
cld
popl
scas
je
pushf
rcrb
int3
das
out
xchg
jnp
jmp
mov
gs
push
jbe
cs
out
stc
sbb
mov
cmpsl
adc
adc
lret
aaa
lods
int
or
push
mov
xchg
xchg
inc
ret
nop
orl
push
popf
ds
dec
mov
push
fisubrl
rcrl
mov
lcall
pop
std
mull
sub
idivb
push
test
xor
js
xor
adc
popa
dec
inc
adc
leave
scas
clc
adc
mov
or
mov
fists
insb
jae
nop
call
adc
movb
inc
push
mov
test
notl
jge
adc
inc
test
push
add
push
sbb
repz
das
jae
or
dec
repz
in
lret
fildll
push
cmc
mov
cli
push
mov
jo
subl
andl
inc
outsl
cs
or
pop
pop
pop
or
xchg
pop
mov
dec
fmuls
sbb
daa
jle
mov
mov
mov
pop
dec
inc
pop
rorb
hlt
adc
mov
lret
push
mov
or
or
cs
insl
ret
arpl
incb
jne
jp
xor
push
or
loope
cmp
repz
pmaxsw
mov
inc
and
shrb
scas
aam
push
cmp
mov
fdivl
in
loopne
pop
ja
fwait
add
push
test
imul
loop
out
fstpt
xchg
cmp
lods
incl
cmpsl
punpcklbw
inc
into
mov
inc
aaa
nop
push
int
push
cld
mov
mov
fstpl
test
enter
jbe
roll
mov
punpckldq
and
pushf
out
aam
add
xor
cmp
int
mov
call
scas
out
shrb
loop
or
psubb
fsub
jbe
adc
sti
les
cmp
outsl
pop
xchg
cmpb
imul
pusha
enter
pop
into
gs
subb
xor
add
fisubrl
sub
in
xor
ja
and
jecxz
dec
cmp
and
sub
and
or
sbb
cmp
adc
mov
pushf
push
cmpsb
mov
cmp
inc
add
sub
push
cltd
lds
push
scas
dec
cwtl
imul
mov
jge
pop
push
addl
adc
jp
mov
out
out
fnstsw
lcall
lret
pop
cmp
insb
outsb
push
popa
mov
ljmp
xchg
or
push
leave
sbb
add
into
rcll
xchg
das
gs
repnz
ds
lahf
jl
or
mov
sbb
sbb
inc
aad
jno
gs
je
cmpsb
cld
jo
mov
mov
pushf
lds
jl
out
sub
lds
shrl
and
divb
pop
test
cmp
dec
rclb
jnp
push
mov
jmp
push
subl
dec
mov
mov
clc
rorb
loopne
incl
orb
sbb
dec
pop
mov
cmp
rorb
pop
and
dec
pop
adc
cmp
pusha
mov
sub
dec
and
pop
repnz
or
pushf
sbb
ret
pushf
imul
add
and
adc
mov
scas
rolb
jbe
xlat
ret
clc
out
sti
cmp
and
stos
xor
sub
sub
loopne
and
cli
sti
or
lret
and
jge
stos
push
add
lock
data16
lock
and
imul
scas
jns
jle
lret
fsubrl
scas
vpsraw
int3
sbb
pushw
jl
out
push
es
xlat
jb
testl
cmpsb
jle
cltd
mov
mov
fdivrs
cli
fsub
cmp
mov
mov
xor
add
mov
jnp
test
rcl
outsb
fdivrl
cmpsb
arpl
mov
push
fldcw
mov
lods
jecxz
push
loope
fldl
mov
pop
nop
popl
cmc
sbb
push
xlat
xor
jge
add
pop
cmpsb
cwtl
inc
sub
imul
repnz
bound
pop
aad
mov
sar
ret
pop
mov
mov
sbb
popf
scas
jbe
xchg
cld
mov
push
faddl
inc
mov
clc
inc
daa
or
mov
xchg
cmp
das
dec
aad
xchg
mov
xor
clc
movsl
cmp
fstps
push
out
mov
mov
rcll
push
pop
lret
aad
push
loope
sbb
jle
fisttps
pop
cmp
push
mov
outsb
addr16
dec
jne
icebp
fistps
add
jmp
arpl
stos
adc
inc
call
in
das
push
push
in
lods
in
sti
vpshab
sbb
lock
mov
push
ljmp
jb
xor
xor
jge
mov
mov
add
sahf
xchg
scas
pop
ret
rorl
pop
adc
or
ss
cs
jno
outsl
scas
movsb
and
popa
jnp
out
pop
call
das
cwtl
std
jge
outsl
ds
cmc
mov
int
dec
in
add
andb
push
int3
nop
xor
xchg
push
not
xor
mov
mov
ss
nop
mov
mov
mov
adc
aas
bound
dec
aaa
into
stc
mov
inc
jp
out
xor
out
call
negb
jo
push
push
adc
or
sbb
xor
mov
jno
inc
test
cmpsb
adc
and
and
addr16
arpl
f2xm1
xor
fisttps
and
jmp
xor
stos
and
push
mov
xchg
inc
ja
push
iret
in
adc
sti
xor
lods
test
cmp
pop
and
lahf
dec
call
cli
test
arpl
lret
jecxz
cmp
pop
loope
testb
in
cmc
xlat
test
cmp
iret
lret
lea
mov
jnp
sub
in
imul
js
push
shll
push
ja
pop
iret
xor
mov
mov
add
push
sbb
xchg
xor
cmp
ret
mov
pushf
mov
andl
test
fs
xchg
dec
xor
iret
adc
pop
cmp
lret
sub
jl
loop
shlb
addl
pop
xorb
js
mov
sarl
movsb
mov
pop
imulb
cld
push
or
sub
mov
icebp
mov
jg
test
mov
lcall
add
pop
push
shr
adc
inc
repz
pop
mov
cmpsb
fcomps
mov
lods
jecxz
jg
sbb
pushf
das
mov
xchg
mov
sbb
aam
and
das
bound
and
add
ficompl
xor
jl
xchg
add
loope
clc
mov
lret
dec
sbb
push
orb
xorb
inc
pop
test
fbstp
adc
pop
fucomp
sbb
pop
pop
and
inc
in
sbb
test
cmc
pushf
mov
xor
xor
mov
scas
push
and
adc
and
dec
xlat
inc
fisttpll
xchg
mov
push
or
test
in
fisubrs
or
mov
data16
orl
push
adc
aad
jae
jge
lcall
xlat
or
rolb
mov
outsb
jns
ret
and
push
fs
repnz
out
ret
mov
lds
xchg
mov
pop
xchg
jl
adc
xchg
movsl
jno
push
cmc
addb
mov
mov
or
push
inc
pop
or
xor
xchg
lcall
test
scas
fsts
stos
out
outsb
arpl
push
mov
cmp
sub
sbb
xchg
xor
lds
push
lds
mov
stos
jl
mov
ja
subl
loope
mov
outsl
fsubs
mov
call
sbb
push
rclb
xorl
fdivs
sti
repz
mov
jno
stos
and
add
hlt
pop
dec
jl
sub
repz
or
push
cmp
inc
sbb
push
jmp
dec
inc
push
lea
stos
xchg
sub
imul
xchg
lret
loop
lea
pushf
jp
xor
pushf
ret
popf
add
paddq
mov
jno
xor
out
dec
jle
jp
test
test
pop
testb
or
outsb
fcoms
in
fxch
popf
loopne
data16
imul
pushf
cmpsb
cmp
dec
inc
push
clc
push
jmp
jle
xchg
cmpsb
loope
dec
pushf
jae
repnz
jo
insl
in
incl
in
inc
loopne
cs
xorb
cmp
dec
mov
sub
jne
mov
sub
sub
scas
movsb
cmp
fnstsw
sub
mov
sbb
jne
lods
and
add
ljmp
push
mov
pop
add
popf
cmpsl
ret
ret
mov
fimuls
sub
sub
push
and
pop
sbb
cmp
popa
dec
push
in
or
sub
push
cmp
out
test
or
in
addr16
pop
fistps
sti
adc
mov
jae
imull
fstl
or
xor
xchg
call
pushl
out
lea
stos
test
push
push
adc
mov
int3
dec
push
xchg
cmp
loop
lret
imul
sub
add
icebp
ret
test
push
ss
cs
dec
insb
mov
repnz
cli
pusha
in
out
mov
jno
cmp
or
fs
push
call
add
stos
fsubl
leave
cmp
adc
adc
xor
pmuludq
jecxz
stos
fidivrs
lcall
jge
add
repnz
in
mov
ds
imul
nop
fisttpl
dec
jl
pusha
lods
rolb
push
mov
sub
pop
mov
mov
mov
movq
shll
jg
add
jb
sahf
mov
jp
xlat
insl
icebp
dec
pop
lahf
jo
add
xchg
mov
jmp
push
mov
clc
dec
mov
mov
sti
shll
pusha
sbb
movsb
arpl
dec
adc
clc
lcall
sbb
scas
das
jmp
mov
int
add
dec
sub
bnd
addr16
sub
les
xchg
adc
jmp
mov
cmp
hlt
xchg
je
test
add
add
push
fisubs
popf
ficoms
dec
int3
adc
aaa
dec
mov
push
jbe
lds
cli
repz
cli
clc
ss
mov
sbb
jnp
add
dec
sbb
cli
ja
pop
cltd
les
push
scas
sub
jl
cmp
icebp
mov
lds
inc
adc
adc
test
shl
fnstsw
jle
leave
rol
in
jne
xchg
xchg
xlat
es
mov
stos
out
push
xor
fisubrs
aaa
lods
adcl
ret
mov
pop
push
dec
adc
insb
cmp
adc
and
jae
lock
insb
out
mov
push
leave
push
add
stos
insl
sbb
jmp
lock
sub
pop
or
stc
ss
aam
and
pop
inc
rolb
cmpsb
xor
jns
in
int
inc
aad
ja
in
push
popf
mov
ja
popf
stos
adc
sub
sub
rclb
out
cmp
test
inc
cmp
jae
aad
push
mov
enter
jno
out
jo
jge
mov
xchg
loope
in
sbb
mov
xchg
adc
imul
std
push
shr
cmp
mov
jg
movsl
mov
push
xor
dec
iret
dec
dec
mov
xchg
loopne
fyl2xp1
or
out
pop
cmpl
fdivr
cmp
ret
arpl
mov
xchg
mov
das
fcmovnb
call
or
jne
hlt
push
pop
xor
mov
dec
leave
ds
xor
subb
pop
inc
dec
stc
pop
rcr
decb
sti
aam
stos
sub
xor
sub
outsb
push
xor
pop
divb
pushf
dec
jge
jae
popa
xor
repnz
push
xor
or
xchg
pushl
rolb
test
scas
inc
mov
mov
loop
dec
jmp
punpckldq
push
out
and
add
rorl
pop
rclb
dec
pop
pop
dec
out
add
int3
cmpsb
jno
rorb
mov
cli
movsl
xchg
call
pop
bound
shlb
subb
pop
jo
pop
mov
test
xchg
bound
aaa
sub
pop
lea
aaa
push
les
adc
jecxz
fists
sahf
or
int3
jecxz
out
pop
push
sbb
sbb
dec
mov
add
or
pop
aas
fisubl
or
sbb
xchg
mov
mov
mov
cli
and
repnz
shrl
sub
ja
adc
dec
or
call
aas
mov
aad
xor
outsl
filds
test
arpl
xchg
cmp
cltd
jbe
je
xchg
test
cs
out
push
jle
in
ud1
jle
pop
out
jmp
xchg
andl
pop
and
or
pop
ljmp
mov
cmp
and
and
dec
inc
fidivrs
sti
mov
dec
imul
dec
dec
jo
aad
add
lret
adc
dec
mov
pop
add
out
push
rcrl
jle
dec
xchg
test
adc
outsl
data16
sub
test
test
call
xchg
mov
das
aaa
icebp
add
outsl
mov
sbb
adc
cmpsb
mov
sub
imul
xor
negb
pop
inc
sti
adc
andl
push
adc
jae
sbb
mov
pop
scas
xor
fcmovnbe
xor
jg
out
shlb
jo
imul
mov
xchg
jns
mov
stos
mov
lcall
sahf
xchg
xor
icebp
sbb
and
jae
dec
xor
xchg
imul
adc
movsb
movsl
pop
cmp
mov
lret
pop
sub
and
adcb
jns
mov
dec
ja
mov
andl
aam
mov
in
jecxz
cmpsb
testl
stos
imul
imul
insl
je
inc
sbb
cmp
roll
test
cmp
adc
mov
lcall
xchg
fidivrs
dec
lods
cs
and
xor
push
imul
rorl
out
insb
mov
pop
cmp
xchg
jmp
jbe
scas
xchg
xchg
dec
lds
sbb
cs
cmp
and
push
jno
movsb
xor
inc
sti
dec
and
mov
aam
dec
push
mov
push
rcll
ficompl
jns
aam
lods
lcall
mov
push
ja
and
and
xor
mov
and
fadds
pop
es
rcrb
dec
lock
iret
sub
pop
add
hlt
sub
js
outsl
fs
add
pushf
seta
pop
shrl
mov
jnp
xorl
jns
mov
out
and
ret
fs
adc
rcrb
mov
outsb
add
dec
aas
subb
rol
push
repnz
rcl
pushf
aas
pusha
popa
repnz
xchg
jnp
rclb
cld
sub
cmp
xchg
mov
xchg
xor
cmp
addr16
lds
ljmp
cmpsb
xchg
pushf
shll
out
cmpsb
outsb
clc
lock
shlb
dec
in
jae
ret
push
imul
xor
iret
sar
cmpsb
and
ja
and
jl
mov
pop
or
push
push
mov
cmovne
add
imul
in
mov
or
roll
pop
mov
adc
mov
mov
pop
dec
insl
subl
mov
sbb
loopne
filds
cmpsl
pop
inc
inc
lcall
xor
sbb
xor
or
cwtl
ret
adc
cmp
pushf
dec
sub
mov
xor
not
repnz
dec
mov
fidivrl
mov
pop
imul
in
repz
call
mov
mov
in
xchg
or
out
aas
aad
cmp
mov
fistpll
imul
cmp
aam
aaa
popf
or
sysenter
cmp
arpl
imul
popf
jne
inc
rcll
frstor
pop
jae
popf
jle
dec
jo
jne
push
adc
daa
push
js
shll
je
mov
adc
jmp
mov
insl
jne
push
push
imul
mov
add
xor
jo
sub
data16
add
sbb
inc
sub
or
dec
leave
das
dec
fwait
jbe,pt
cmp
scas
adc
notb
jmp
arpl
test
push
adc
mov
arpl
hlt
jnp
dec
xchg
jbe
add
out
pushf
mov
imul
xor
into
cmp
in
hlt
add
sub
xlat
cmp
push
clc
jmp
push
in
xor
das
pusha
iret
adc
ret
sub
add
iret
repz
cmp
js
sarb
mov
xor
repz
int
enter
in
inc
scas
jnp
lcall
jge
lahf
add
xor
add
hlt
cmp
push
cmc
push
fs
cmc
add
mov
test
icebp
in
fs
mov
jp
adc
hlt
lods
cmp
sbb
ss
enter
movsb
pop
fwait
dec
xchg
call
jecxz
orb
insb
and
clc
fiaddl
add
cmp
pop
in
and
pushl
jg
in
test
shlb
jne,pt
out
pop
pop
pop
into
xor
inc
xor
add
mov
scas
adc
sbb
sub
cli
xor
jmp
pop
fidivrs
test
jp
out
cmp
test
mov
push
cmpsb
mov
lcall
inc
cmc
mov
into
jle
test
sahf
in
adc
dec
sub
inc
bound
fiaddl
int3
push
xlat
faddl
jp
sub
aaa
cli
xor
pop
jbe
mov
mov
mov
adc
lods
movsb
cmp
jns
hlt
or
or
fidivrs
aad
jle
mov
jmp
nop
scas
cmp
sbb
pop
insl
jae
pusha
xchg
sbb
and
add
fstp
ja
sbb
pop
inc
sub
jecxz
mov
add
rcll
adc
icebp
sub
pop
cs
mov
dec
cmp
dec
shlb
dec
data16
sub
pop
push
fstl
dec
cltd
fcom
push
ret
cmpsl
mov
fildl
jne
loope
push
mov
lods
dec
rclb
mov
xchg
pop
xor
std
arpl
xor
inc
or
xchg
mov
pop
test
pop
jmp
push
inc
aam
add
adc
and
imul
jo
xchg
xor
push
jle
stos
sub
sbb
pop
fimuls
dec
add
test
pop
dec
adc
popa
repz
loopne
nop
imul
inc
push
ss
jg
popf
sub
pop
in
cwtl
dec
and
in
lea
inc
xchg
in
arpl
jecxz
adc
pop
mov
push
pop
outsb
and
sub
loop
xlat
mov
fisttps
xor
cltd
loop
mov
cmp
dec
or
adc
jp
add
mov
sub
push
push
ret
or
and
push
dec
test
sbb
sbbb
inc
add
jbe
in
js
sbb
mov
int3
mov
inc
pop
adc
scas
dec
ja
rcll
loop
dec
dec
test
stos
xor
dec
int
or
or
repnz
cmp
push
fists
sbb
mov
in
stos
fwait
sub
outsl
sti
jecxz
inc
daa
fnstenv
adc
sbbl
sbb
roll
push
outsb
insb
sahf
into
mov
stos
loope
iret
xchg
mov
or
inc
les
xlat
sub
loopne
dec
jmp
enter
pop
icebp
or
je
lock
je
mov
xor
aam
cwtl
pop
rol
das
lcall
lret
xchg
and
and
xchg
inc
loop
or
js
cmp
stos
jns
sbb
cli
xchg
jns
dec
dec
popf
fisubl
cmc
jg
mov
daa
push
pop
data16
mov
adc
outsl
cmp
pop
inc
aaa
loope
xor
out
lahf
cld
test
mov
mov
or
pop
push
stos
jecxz
dec
adc
cwtl
popf
int3
addr16
pusha
inc
mov
mov
inc
lods
pop
test
je
pop
push
sub
arpl
adc
cmp
stos
rcl
xchg
rclb
dec
sub
call
sbb
sub
test
enter
add
dec
aam
dec
or
push
loop
mov
lock
cmp
call
mov
sbb
je
cmp
cmp
call
mov
outsb
jb
mov
icebp
lret
stc
es
sbb
mov
loop
and
mov
xchg
jl
dec
or
repz
jo,pt
mov
pop
push
dec
xchg
scas
ret
stos
fildl
xchg
mov
rorl
or
mov
pop
in
lahf
je
out
jmp
in
in
add
mov
sahf
push
cli
add
cmp
pusha
cmc
xchg
jno
out
add
test
xchg
pop
loopne
subb
enter
inc
jecxz
fnstenv
mov
xchg
push
mov
cltd
cmpsb
aam
mov
imul
xlat
fwait
in
in
iret
inc
in
lret
sub
or
in
push
sbb
mov
adc
or
lret
pop
imul
dec
enter
xor
in
pusha
push
jbe
inc
das
inc
pop
and
sub
repz
and
in
pop
sbb
in
mov
aam
jo
mov
out
jae
mov
jg
nop
inc
fld
fisubs
cwtl
testl
mov
dec
sub
cmpsb
into
xor
shrl
imul
gs
outsl
in
pusha
mov
lret
cwtl
push
scas
or
sub
push
lret
push
adc
xchg
in
test
hlt
mov
mov
xlat
adc
out
sbb
shrl
insl
out
in
pop
pop
stc
push
xor
mov
jp
std
sbbb
lods
popa
jecxz
jno
push
cmp
push
rclb
imull
loope
lahf
pop
adc
idivl
ja
icebp
fsubl
add
mov
xlat
in
inc
or
mov
outsl
hlt
inc
jg
je
jecxz
jnp
lods
dec
lock
inc
call
mov
add
mov
or
mov
jg
mov
push
cld
push
aaa
sti
dec
fsubr
pusha
fimull
xchg
mov
push
cmp
scas
ljmp
mov
mov
push
clc
out
adc
sahf
xchg
inc
mov
test
icebp
mov
imul
fiadds
xor
mov
addl
jne
out
lahf
test
and
xor
movsb
pop
iret
bound
clc
cld
aam
stos
inc
lods
div
fldenv
sbb
testb
sarb
adc
dec
outsb
jb
inc
andl
imul
fs
test
jo
shrb
daa
in
fbld
dec
jnp
jno
dec
cltd
xor
mov
sub
enter
sbb
push
aaa
fildll
xor
shrl
sbb
test
js
test
pop
sub
sbb
mov
add
mov
pop
ljmp
mov
cmpsl
outsb
pop
int
addr16
pushf
iret
pop
mov
out
jae
iret
adc
mov
xchg
das
xor
pop
mov
mov
stos
inc
imul
mov
adc
cmp
inc
mov
push
mov
sbb
pop
adc
setnp
add
stos
scas
rorl
pop
xorb
rcrl
jne
mov
mov
aas
fistpl
cmpsb
mov
ja
cmp
xchg
jle
jg
mov
insb
cmc
lret
testl
das
jl
int3
cld
cmpsl
mov
popf
xchg
and
jb
cli
inc
outsl
push
rorb
das
push
mov
stc
mov
cli
fs
push
js
inc
in
outsb
aad
mov
dec
mov
pop
push
add
out
jbe
inc
dec
stos
add
push
mov
adc
divb
out
dec
mov
addl
jge
add
mov
ret
push
scas
loop
sub
mov
xor
push
sbb
add
hlt
adc
cltd
and
jae
and
sbb
sub
repz
ss
aad
outsl
pop
mov
roll
pop
sub
add
xor
add
mov
out
leave
loopne
insb
insl
lods
bound
call
pop
jge
sarb
push
int3
mov
scas
cmpsl
fdivl
bound
push
add
inc
int
dec
scas
xor
push
lds
orb
sbb
mov
sub
jnp
aaa
fisttpl
jnp
leave
push
mov
dec
and
gs
mov
adc
enter
mov
sub
mov
and
clc
or
hlt
or
cmc
add
loop
int3
pop
inc
cmp
pop
push
pop
sti
andl
jae
lods
cli
xchg
inc
int3
mov
clc
sbb
adc
and
ds
sbb
xchg
popf
push
sub
mov
addb
div
call
pop
adc
faddl
pop
mov
movsl
enter
sub
mov
shll
mov
scas
pop
int
jns
scas
inc
test
lcall
inc
mov
sub
scas
xor
jmp
add
ja
arpl
jbe
arpl
pusha
mov
adc
add
jp
pop
addr16
ja
mov
mov
iret
rcrl
and
and
fwait
push
mulb
sub
cs
add
add
adcb
sbb
mov
movl
mov
jnp
gs
xrelease
ret
xchg
in
ret
adc
ljmp
into
xchg
push
adc
test
inc
mov
out
into
cld
stc
mov
imul
mov
or
inc
std
dec
or
cmp
fwait
xchg
dec
inc
in
mov
push
mov
inc
xlat
mov
xchg
mov
bound
mov
mov
mov
push
sub
inc
nop
scas
rcll
inc
pushf
xchg
call
out
or
pop
inc
push
pop
enter
test
fsubr
fdivr
in
sub
sub
mov
popa
pop
adc
jmp
imul
jo
jecxz
dec
out
jp
and
pop
inc
jge
push
mov
add
mov
clc
mov
fadds
add
jae
sub
leave
xchg
xchg
cmpsl
popa
or
mov
outsl
clc
lcall
loopne
popf
repz
aaa
ret
sub
fldcw
mov
push
jns
jb
les
popa
mov
shll
rclb
vpmacssww
mov
loop
push
xor
dec
pop
icebp
bound
dec
push
cmp
xor
dec
cmpsl
sbb
dec
test
push
adc
cmpsb
push
jle
outsb
mov
inc
jno
sbb
mov
repz
ljmp
repz
lods
out
shrl
lretw
leave
add
cmp
test
dec
sbb
les
inc
repnz
mov
inc
mov
hlt
push
std
icebp
jno
jb
sub
notl
sub
imull
into
mov
jbe
loop
pop
xor
scas
cmp
inc
xor
mov
dec
jle
fwait
out
cmp
das
or
fs
mov
fdivs
fldcw
stc
push
arpl
cwtl
mov
lock
int
loop
sub
xor
jge
pop
and
mov
mov
cmp
add
xor
add
bnd
dec
push
cli
fistps
in
imul
pop
mov
pop
inc
adc
dec
mov
les
cs
sbb
mov
jns
pop
flds
divb
iret
dec
pop
in
jae
decl
cmp
and
ret
mov
lea
in
xor
repz
pop
sub
hlt
dec
enter
and
movsl
es
lods
pop
hlt
cld
pop
or
and
push
sub
xlat
int
daa
fists
shlb
ror
and
sbb
cmp
out
loope
cltd
mov
into
push
jl
sub
cmp
mov
cmp
and
jne
sbb
and
iret
bnd
xlat
popf
xchg
dec
lods
ret
out
xchg
frstor
mov
je
pop
enter
data16
mov
adc
mov
pop
ds
popf
clc
xor
pop
cli
fidivrs
lret
sbb
sub
dec
std
cld
mov
inc
add
add
shlb
dec
int3
sbb
pusha
xor
insl
mov
inc
sub
lods
cld
lahf
into
sbb
jl
in
into
jne
in
out
dec
jo
fcmovnu
pop
jmp
rorb
cwtl
std
ret
outsl
cmp
mov
sti
outsl
nop
movsb
imul
loope
dec
aaa
in
mov
cmc
jne
add
xchg
call
sahf
pop
inc
fs
lret
es
cwtl
fwait
mov
push
mov
adc
xchg
xlat
fadds
dec
xor
ja
push
pop
ret
xor
movsb
shll
dec
fistl
aam
push
sbb
inc
lret
movsb
cld
pusha
xor
push
or
enter
dec
fbld
in
jae
cmp
je
aas
inc
xlat
mov
xchg
fldcw
test
xlat
and
jmp
adc
popf
jbe
xor
add
test
push
cmp
gs
dec
mov
sbb
cmpsl
pop
pop
dec
jb
sbb
xor
mov
addb
dec
push
pop
xchg
push
cld
incl
sahf
xchg
mov
inc
jg
sub
jae
sbb
cmc
sar
xchg
fmull
sub
int3
mov
sarb
adc
jge
ret
dec
lock
pop
xor
fwait
les
arpl
mov
fwait
jle
lock
fstpl
mov
push
call
xchg
pop
ljmp
inc
dec
cwtl
add
push
mov
imul
xchg
add
subb
cli
sub
sahf
arpl
cmp
scas
rcll
pop
dec
mov
mov
sarl
push
jbe
aam
fmull
pop
sub
xor
data16
in
jae
add
adc
fidivl
fnstcw
cmp
dec
or
movsb
adc
loopne
pushf
packsswb
xchg
xchg
mov
test
jle
fldenv
out
stos
and
lcall
xchg
js
mov
add
and
test
cmp
xlat
adcl
lahf
mov
loope
push
out
sbb
push
ds
ljmp
sbb
adc
jb
int3
pop
xchg
cld
shl
inc
cmpsl
in
adc
xchg
out
loope
sbb
xchg
addl
les
fnstenv
jns
mov
adc
mov
movsl
lds
les
repz
pop
les
ljmp
imul
add
imul
and
roll
hlt
sbb
mov
or
mov
push
inc
ljmp
sbb
enter
notb
mov
xchg
cmp
mov
jecxz
cmp
xchg
repz
shll
cmc
test
aad
sub
mov
outsl
clc
out
jp
mov
jno
lret
pop
push
jo
dec
je
push
jns
push
or
shll
popa
jl
ret
mov
in
leave
push
js
rcr
rcr
sti
mov
enter
push
xor
and
lods
ficoms
gs
scas
xor
jg
test
or
mov
mov
aaa
imul
mov
repnz
sbb
repnz
cmp
mov
adc
mov
ds
cmpsl
dec
xchg
xchg
and
icebp
xorl
push
repz
jle
ret
lods
das
mov
push
arpl
or
gs
incl
pusha
push
mov
stc
stos
mov
xchg
int3
mov
popa
loope
mov
xchg
sbb
mov
out
test
jmp
xchg
notb
push
cltd
sub
outsl
das
cli
mov
jae
push
dec
mov
add
push
shr
cmp
je
jmp
scas
std
jb
fucompp
loopne
xchg
scas
cmc
add
xchg
mov
jecxz
mov
xor
push
pop
pop
push
cmpsb
scas
cmp
repz
or
lahf
xor
mov
lret
cmp
cmpsb
nop
nop
ljmp
inc
and
sbb
sbb
lods
xor
nop
dec
inc
stos
jae
ret
leave
dec
xchg
add
push
push
int
cmp
mov
dec
loop
cmp
in
sbb
cmpl
mov
jno
pop
fwait
imul
jns
sbb
imul
das
inc
imul
pop
mov
dec
mov
inc
stos
mov
test
icebp
cmp
ljmp
les
mov
and
mov
dec
and
jns
add
fcomps
jne
flds
divl
test
mov
leave
sti
and
bound
lock
jmp
ficoms
cmp
adc
push
mov
sbb
insb
ja
and
xchg
cltd
mov
fmulp
test
icebp
popf
or
scas
jo
lods
cmc
mov
push
cmp
sub
adc
popa
or
test
shll
out
pop
fisubl
add
test
stc
aam
xchg
jbe
xchg
cmp
fidivrl
les
mov
xchg
sti
pop
push
add
out
mov
mov
pop
xchg
dec
sub
lcall
scas
mov
jecxz
pop
pop
cmp
jb
arpl
mov
inc
mov
icebp
mov
test
sbb
sub
mov
popa
fsubrs
test
movsb
jl
in
aam
addr16
push
xor
mov
mov
mov
push
inc
ja
sahf
xor
arpl
popa
int3
dec
dec
xlat
aam
sbb
je
pop
rcrb
dec
pop
sub
jle
pop
mov
inc
jg
leave
es
pop
mov
or
lock
mov
pop
xchg
mov
xor
dec
jb
mov
push
jge
mov
fnstsw
inc
daa
sub
jnp
or
mov
xchg
add
mov
pushf
xchg
fidivrl
enter
push
pop
arpl
push
shl
or
std
inc
in
adc
lret
sub
outsl
popf
inc
dec
scas
ja
stos
addr16
les
std
stos
inc
lahf
dec
xchg
shlb
es
xlat
mov
cltd
xchg
lret
sbb
loope
xchg
mov
pop
stos
ds
fnsave
inc
push
sub
dec
push
jle
dec
push
lcall
andb
push
pop
xor
pop
fxch
fstl
pop
add
shrb
cmpsl
xorl
pusha
cmc
push
scas
mov
insb
leave
das
orb
es
add
and
inc
stos
ss
or
ja
xchg
lea
and
or
push
pop
shll
xchg
stos
pop
shll
cs
xor
je
aad
fsubs
and
mulb
xchg
fldenv
pop
xchg
push
aad
sbb
xor
xchg
and
nop
dec
adc
and
mov
orb
test
cmc
push
fadd
cltd
inc
gs
push
rcrl
fbstp
or
shl
aam
test
scas
mov
loopne
mov
add
dec
loopne
adc
push
inc
sub
jp
mull
lahf
mov
scas
movsb
cmp
imul
gs
cmp
or
stos
add
fdivs
pop
dec
pop
push
jmp
inc
stc
lods
xor
sbb
jecxz
sti
orb
cwtl
lods
mov
pushf
pop
in
sbb
repz
pop
mov
insb
jge
mov
hlt
push
jg
sub
inc
popf
in
adc
xchg
xor
push
pop
push
and
in
lock
sbb
jecxz
or
xlat
and
movsbl
repnz
loope
pushf
sbb
cli
sahf
add
enter
cwtl
scas
lahf
nop
rolb
movsb
pop
movsl
add
xor
mov
repnz
bound
sar
jnp
int
cmp
add
int
add
and
cmpsl
out
std
rcll
pop
cltd
test
jns
fisubs
enter
jmp
test
and
int
jb
xor
aad
mov
ljmp
mov
add
push
jae
mov
add
lcall
sbb
xchg
add
fisubrs
outsl
je
call
jns
sbb
inc
sbb
mov
add
dec
mov
lds
mov
add
sbb
push
aam
out
xchg
lea
loop
call
aas
mov
mov
push
sub
adc
cwtl
xchg
sbb
adc
xchg
popa
mov
jbe
pop
sub
cli
cmpsl
mov
fdivl
dec
jecxz
lcall
shlb
hlt
push
jns
mov
sahf
test
pop
dec
ds
out
std
jne
out
insb
mov
cmpsb
aam
adc
mov
lds
sbb
sbb
in
enter
outsb
push
repz
push
jl
mov
pop
fcmovnu
mov
daa
mov
fwait
clc
dec
cmp
cmc
nop
mov
outsl
cmp
cmp
dec
lods
out
call
pop
bnd
in
sti
cmp
repnz
call
roll
cltd
cltd
out
dec
or
dec
les
fsubrl
test
fsubs
and
sub
imul
popf
lcall
dec
mov
inc
dec
jle
sbb
push
in
jp
gs
add
out
aas
sbbb
cli
xor
inc
bound
lahf
mov
adc
or
push
scas
fs
out
pop
repz
sbb
sbb
daa
loope
xchg
dec
out
aad
rcrl
aas
ret
in
fabs
inc
jg
jmp
pop
adc
stc
std
adc
jb
andb
lret
js
rolb
or
pop
xlat
add
push
daa
aas
push
sub
or
scas
dec
sbb
dec
mov
mov
mov
sbb
mov
mov
ret
divb
mov
imul
push
dec
mov
and
repz
jae
sti
cmp
add
mov
jbe
out
dec
rorl
sbb
xchg
xchg
sahf
dec
or
mov
and
mov
mov
jge
fisttpl
mov
icebp
lcall
jle
add
leave
jo
lea
lahf
xchg
and
daa
repnz
or
cmp
mov
mov
js
subl
in
inc
mov
out
pop
imul
int
mov
and
jo
push
dec
inc
adc
test
push
jecxz
xor
xchg
and
mov
shll
hlt
inc
mov
pop
jbe
mov
sub
test
lret
mov
mov
adc
into
dec
outsb
rclb
mov
test
mov
or
aad
inc
loope
test
mov
aam
insb
hlt
jmp
std
inc
or
mov
xor
sar
dec
pop
and
sub
arpl
add
lea
mov
add
cs
cmpsb
fwait
popf
iret
or
js
divb
in
shrl
hlt
dec
push
movsl
roll
mov
mov
cmp
fsub
gs
adc
dec
mov
pop
sub
xchg
mov
out
push
cmp
push
jnp
shrb
je
dec
jmp
xchg
stos
pusha
mov
cmpsl
or
sub
pop
and
movsb
pop
or
jg
jecxz
adc
outsl
or
and
cld
pop
and
pop
sbb
movsb
in
xlat
sbb
add
or
cmp
xchg
shlb
dec
divl
sbb
jae
add
clc
push
push
jns
imul
and
dec
adc
jns
mov
ficompl
jle
dec
and
int3
cwtl
sub
test
sbb
nop
inc
add
das
out
sub
nop
test
xor
test
repnz
jbe
data16
fucom
and
stc
cmp
mov
test
xor
jge
sub
test
lds
js
aaa
mov
pop
pushf
pop
mov
adc
test
cli
add
aad
cmp
int3
lods
cmp
mov
or
and
popa
dec
pop
mov
repz
xor
mov
out
out
mov
pushf
add
jb
mov
fimull
sbb
movsb
or
or
xor
stos
cmp
arpl
cltd
inc
pop
and
or
lret
stos
rcll
cli
or
mov
negb
mov
cwtl
jmp
push
outsb
cmpsb
hlt
mull
div
aam
pop
cs
mov
push
dec
adc
arpl
pop
add
ds
nopl
std
cmp
pusha
rcrl
dec
into
mov
je
pop
or
and
push
je
jp
sbb
push
pop
stc
inc
pop
andb
popf
daa
lcall
adc
push
stos
mov
add
mov
in
jne
rcr
cltd
push
inc
int3
lds
bound
or
or
xor
cmp
test
push
loop,pt
mov
std
in
jle
mov
sar
xchg
dec
aad
sbb
cmp
cwtl
nopl
mov
mov
popa
cwtl
cmp
xchg
inc
cmpsb
mov
cmpsb
cs
outsb
bound
call
ret
out
shrl
push
and
or
cld
pop
std
fidivrl
jmp
negb
mov
sub
pop
ret
movsb
pop
pushl
push
add
jle
adc
xchg
lret
lods
mov
cwtl
push
cmp
pop
mov
jbe
into
xor
jae
dec
pop
popa
insb
adc
popf
repz
ffree
rcll
loop
and
cmp
jp
lock
push
jbe
adc
inc
sbb
scas
outsl
cmpb
or
add
sti
ja
jns
pop
add
jns
dec
sub
mov
xchg
andl
mov
sub
mov
sbb
push
aam
es
sbb
pcmpgtd
pusha
std
jge
xlat
movsb
test
sti
xor
fdivl
repz
adc
cld
insl
inc
insb
fcmovnbe
out
aaa
cmpsb
jno
jno
outsb
adc
mov
adc
aad
mov
sbb
push
fs
cli
mov
sub
mov
sbb
lock
pop
mov
cmc
adc
adc
and
cwtl
cmpsb
dec
sbb
push
xor
call
lds
mov
mov
xchg
lods
sarl
and
push
mov
stc
xorb
push
call
stos
or
xor
jbe
sub
mov
pop
test
insb
dec
xor
std
mov
xchg
imul
pop
jo
dec
pop
out
jo
aam
stos
lds
jmp
inc
push
insl
jmp
fldl2e
or
fisttpl
mov
sub
push
xor
repz
or
stos
xchg
nop
dec
inc
and
adc
imul
jl
test
mov
cmp
push
and
loop
lods
je
clc
sbb
inc
mov
pop
clc
adc
or
ja
and
sub
fstp
or
xor
das
inc
jge
pop
je
int
popa
xchg
lcall
cmpsl
fisttpll
xchg
icebp
dec
jmp
mull
add
cmc
mov
enter
inc
add
adc
or
cltd
idivb
lock
imul
es
push
arpl
xor
movsl
jmp
cmp
popf
cmpsl
iret
lret
test
mov
sub
sbb
cmc
mov
in
arpl
shll
mov
push
cmp
mov
mov
push
xor
shll
imul
cmp
push
mov
cmp
jnp
dec
inc
mull
jmp
mov
inc
cmpsl
shll
inc
push
jecxz
inc
pop
adc
adc
stos
ss
stos
clc
adc
std
mov
jbe
mov
xchg
jge
sarl
lock
xchg
pop
add
ljmp
lret
pusha
sub
out
roll
rcr
adc
outsl
fwait
adc
in
jo
sti
cmp
and
ljmp
lods
adc
in
arpl
xchg
pop
sbb
rorl
add
mov
xlat
iret
loop
and
push
mov
cmp
leave
cld
data16
aaa
xor
repnz
ja
cwtl
lahf
call
ficomps
sub
scas
std
push
pop
test
repz
daa
or
adc
lret
ss
das
mov
mov
test
out
lcall
dec
fldt
in
hlt
add
outsl
inc
loop
outsb
dec
and
cmc
dec
iret
fsubrp
adc
fiaddl
popa
dec
inc
out
push
mov
mov
cmp
icebp
dec
cmp
push
sub
enter
popf
xor
or
xchg
arpl
aas
add
and
out
cmp
ja
sbb
xor
lahf
sahf
lahf
adc
dec
pushf
out
loopne
cmp
popa
rolb
jne
mov
jl
ss
std
jmp
movsl
cmc
sbb
add
test
and
push
shll
dec
fcoml
add
jge
pop
test
cmpsb
mov
mov
gs
vmovaps
aas
cs
cwtl
pop
mov
stos
cmc
fcomps
ret
cmpsl
jg
sti
xor
sbb
pop
xorb
jne
ret
xchg
adc
pop
add
push
iret
jge
xlat
arpl
mov
cmpsb
xchg
fisttpl
lock
sub
add
fsubrs
lods
mov
mov
mov
inc
adc
mov
pop
lret
ffree
adc
lret
sbb
daa
mov
out
or
add
cmpsl
xor
fildl
jb
mov
aas
cmc
or
addl
int3
mov
fs
push
xchg
arpl
add
aad
sub
xchg
shr
inc
enter
xchg
jne
mov
sbb
int
scas
cmpsl
xchg
and
les
sub
adcl
cmp
cmp
push
push
jae
adc
aaa
test
imul
ret
sbb
add
pop
pushf
stc
cltd
mov
mov
lcall
cld
fnstcw
call
sub
stc
imul
outsb
lahf
push
repz
xor
call
jge
cltd
in
jg
dec
in
adc
gs
std
cltd
pusha
fwait
and
inc
into
iret
jb
lea
ja
sub
out
call
pushf
mov
testb
shlb
pop
call
pop
mov
mov
inc
dec
sub
add
and
mov
lods
add
adcl
xchg
fdivl
push
lcall
sbb
test
mov
adc
add
int
imul
jo
sub
arpl
push
jmp
and
and
mov
test
push
mov
loopne
cmp
arpl
mov
and
adc
scas
mov
add
adc
cmp
cmp
xor
ffree
fisubrl
and
pop
dec
mov
pop
rclb
orb
xchg
testb
fldt
shrb
and
js
lret
or
push
xchg
pop
and
pusha
mov
push
rcr
mov
or
dec
shlb
std
cs
movsl
decl
push
xchg
pop
jmp
sub
cmp
cmp
in
js
adc
mov
sub
cmpsl
sbb
adc
dec
or
loopne
mov
sub
sbb
pop
nop
rcll
clc
inc
ror
outsl
jge
lds
xchg
stos
add
loopne
push
push
ljmp
or
shlb
pop
stos
lcall
js
bound
mov
ljmp
es
or
or
push
inc
in
lahf
pop
xchg
fs
out
push
pop
hlt
in
outsb
testb
mov
push
or
dec
sub
cmpsb
fwait
ja
ret
mov
cmp
in
pop
nop
aas
lea
or
mov
push
sarl
rep
inc
add
inc
ds
mov
out
inc
sarl
mov
stos
aaa
in
iret
mov
inc
lds
repnz
push
loope
cmp
andl
xor
jle
imull
mov
in
xchg
mov
cs
sub
shll
or
data16
sbb
clc
adc
or
stos
in
jmp
fists
test
inc
jb
ljmp
dec
cwtl
pop
fistl
icebp
dec
mov
repz
inc
mov
int
dec
dec
mov
xchg
adc
sub
test
jl
cltd
mov
pushf
out
pusha
ror
fisubrs
push
xchg
mov
xchg
mov
add
iret
dec
push
fsubl
inc
fwait
sbb
jae
mov
sub
jmp
dec
arpl
mov
adc
dec
fwait
or
arpl
push
mov
movsb
clc
xchg
inc
pop
movsb
fiaddl
mov
dec
das
test
push
insb
pop
and
sub
lret
xchg
xchg
int3
lret
hlt
pop
sbb
pop
int3
cmp
fsqrt
das
out
dec
aaa
iret
imull
pop
mov
rclb
shrl
lcall
cmp
push
ucomiss
lods
mov
arpl
test
adc
sub
and
cmc
imul
and
stc
sub
jae
insl
xor
rorl
addl
lock
or
pop
mov
loope
mov
test
aaa
psrld
xor
xchg
mov
sub
fwait
int
insb
push
sbb
push
neg
mov
rcl
ds
dec
mov
xchg
pushf
mov
add
clc
cmp
inc
mov
aas
test
cwtl
pop
iret
mov
cmpsb
pop
jp
inc
repnz
out
pusha
lods
lock
dec
dec
jno
dec
mov
inc
ret
lds
push
outsb
sub
mov
pushf
test
mov
bound
or
jbe
add
fnsave
cmp
shrl
pushf
mov
push
lahf
sub
cmp
lods
inc
or
test
iret
repnz
fwait
mov
or
inc
aam
push
add
rorb
fidivrs
popa
dec
clc
mov
inc
sahf
lods
dec
fldl
pop
jne
sahf
mov
or
addr16
add
insl
hlt
fidivrl
es
mov
mov
push
lret
jns
xchg
insb
ds
test
mov
dec
pop
rcrl
idivb
dec
jb
dec
lret
or
jae
scas
scas
jbe
pushf
out
shl
mov
rcl
into
and
dec
ss
inc
lods
cmp
stc
out
and
jno
mov
subl
or
jge
add
mov
loop
fists
addr16
loopne
sub
dec
push
sbb
cwtl
sub
push
mov
pusha
ret
jmp
outsb
mov
es
clc
mov
push
mov
jnp
stos
jecxz
or
ret
bound
cmp
jg
adc
popw
lcall
sub
cmp
mov
adc
jno
lods
cmp
popf
cmp
addr16
push
jae
sbb
scas
in
add
mov
enter
pop
mov
ficompl
mov
lds
insl
lret
sub
sub
imul
and
scas
mov
sub
into
ret
ljmp
mov
xchg
idivl
push
add
mov
outsb
jbe
jne
daa
in
pop
es
test
push
movsl
push
sbb
lods
and
add
sbb
mov
adc
repz
add
in
outsb
fists
push
call
ficoms
cmp
ret
lock
xor
sub
lcall
and
add
jo
add
mov
inc
xchg
add
dec
les
mov
fwait
jg
sbb
mov
imul
in
pop
shlb
xchg
and
sbb
lret
stos
xchg
pop
int3
popw
mov
pop
pop
or
sbb
mov
lock
adc
stc
movsb
into
dec
jmp
mov
lods
aad
and
ss
jmp
setl
and
into
mulb
shrl
add
fmul
cmpsl
push
stos
jl
faddp
ret
fdivs
das
xor
dec
mov
mov
popf
or
fldenv
arpl
push
movsl
pop
mov
out
and
dec
sbb
stc
mov
jno
rcll
fnstcw
test
jmp
xchg
dec
xchg
pushf
add
pop
cmp
mov
cmp
pop
jb
fbstp
fnsave
pop
shlb
leave
cmp
cmp
repz
inc
push
cmp
sbb
mov
icebp
adc
mov
ljmp
inc
mov
pop
ficoml
retw
xchg
jne
or
add
ljmp
add
ret
scas
mov
xor
xchg
push
ficomps
mov
xor
rcrb
pop
push
outsb
lods
arpl
mov
xor
ror
fmuls
mov
xor
sub
xchg
stos
into
in
pop
insb
cwtl
ss
lret
xchg
adc
dec
mov
repz
sbb
pop
fiadds
or
xchg
adcl
or
aam
into
stos
mov
mov
sbb
cmp
jo
dec
jbe,pt
xor
push
push
push
xlat
rol
xor
les
cmp
mov
scas
enter
push
push
add
adc
movsl
pop
sub
inc
inc
xchg
xorl
mov
int
js
insb
mov
pushl
divl
adc
scas
xor
mov
movmskps
shlb
jecxz
loop
push
adc
lcall
push
test
adc
xchg
shlb
stc
pop
loop
xchg
jg
ror
pop
inc
add
pop
mov
icebp
add
xchg
sub
xchg
inc
daa
test
fists
in
xchg
sub
out
push
imul
mov
jmp
push
xchg
ja
clc
adc
mov
sub
add
mov
pop
mov
cli
cmp
pop
shll
aaa
xlat
insb
push
movsb
xchg
or
dec
xchg
and
mov
xchg
cwtl
pop
andl
mov
loopne
das
xor
addl
cmp
xlat
adc
insl
bound
push
xor
xchg
fwait
xchg
and
adc
pop
cmpsb
and
rorb
out
mov
pop
xchg
add
inc
lods
notl
rorl
xorb
insl
cmp
jl
push
fwait
or
xor
jae
mov
push
loop
cwtl
lock
ret
sarb
xorl
test
sldt
cmpsl
cmpsb
jnp
jae
push
ds
jmp
push
jp
stc
cwtl
mov
popa
push
pop
rclb
cmpsl
jo
dec
inc
lds
cmpsl
jp
movsb
push
outsl
daa
test
or
xorl
xchg
jae
call
daa
cmp
push
shl
mov
xorl
dec
popf
lret
xchg
in
cmc
scas
xchg
mov
outsl
mov
addr16
xchg
jb
cmpsl
in
fmul
fbstp
inc
gs
ret
ljmp
mov
push
mov
jl
or
and
vmovq
cmp
pushf
push
mov
xchg
push
push
fdivr
mov
xor
xchg
add
pop
push
test
or
stos
gs
and
cmpsb
fistps
cmp
popa
leave
pop
stos
rolb
mov
test
in
rorl
sbb
or
out
jno
js
inc
cmp
mov
mul
in
push
shrb
sub
or
icebp
lcall
popf
imul
push
popa
outsl
jmp
push
lods
jo
or
filds
insl
popa
pusha
clc
jns,pt
scas
or
and
jns
or
cmp
inc
push
insl
scas
jno
sub
std
adc
push
mov
lods
mov
and
sbb
fistl
js
mov
scas
pop
enter
loopne
js
outsl
js
test
popf
cmp
std
pop
sbb
add
mov
test
fwait
jmp
dec
addr16
mov
addr16
adc
les
sbb
scas
pusha
push
push
sarl
shl
int
mov
daa
loopne
sbb
dec
sub
out
pop
mov
and
dec
push
xor
xchg
mov
je
rcl
jnp
test
pop
aam
pusha
inc
iret
dec
loopne
mov
fildl
pop
cli
xchg
sbbl
movsb
dec
push
sbb
pop
cmpl
cmp
push
add
or
imul
dec
aad
shll
les
lcall
and
mov
jnp
inc
or
pop
pushf
test
lock
adc
js
or
mov
insb
adc
sub
sub
in
in
data16
cli
fistpll
mull
popf
adc
adc
aas
mov
gs
dec
dec
inc
out
shl
ss
out
int3
mov
jmp
ss
inc
popa
ret
mov
push
stc
push
cs
dec
loopne
fsubrp
add
sub
in
gs
jecxz
insb
enter
sbb
outsb
aad
jo
xchg
mov
lock
xchg
pusha
xchg
mov
cmc
sbb
add
movsl
jl
mov
or
sahf
push
xor
pop
insb
shrl
cmp
dec
cli
sbbb
jg
iret
mov
and
inc
shrb
daa
arpl
lcall
rcr
fmul
xchg
rcr
sub
int
dec
jle
or
adc
sub
pushf
sub
ret
mov
popa
push
jmp
cmp
in
fs
bound
jg
dec
inc
xchg
push
mov
mov
aas
cld
je
dec
sahf
mov
pop
cmp
test
inc
gs
mov
sahf
test
fwait
das
cmp
aad
mov
mov
dec
mov
adc
shll
mov
lret
lods
fs
imul
cli
inc
xor
pop
sbb
je
inc
cmp
das
outsl
inc
dec
cwtl
arpl
out
cmp
lds
inc
fistl
mov
and
clc
dec
mov
mov
in
or
add
jge
mov
pop
mov
and
in
cmpsb
inc
push
add
scas
cmp
out
dec
aaa
je
nop
cmpsl
int3
push
in
xchg
ja
sbb
xchg
daa
inc
fadd
popa
push
lcall
sbb
or
repnz
xchg
dec
fdivs
dec
jecxz
fldenv
enter
or
dec
xchg
in
and
push
insb
ljmp
loopne
add
sahf
ret
inc
rorl
test
rep
mov
jb
popa
add
lock
and
aas
mov
mov
xor
xchg
les
pop
gs
ja
mov
std
test
xor
jge
push
push
lcall
xchg
enter
sub
test
pop
push
and
xchg
cltd
cltd
fisttpll
or
mov
push
jnp
dec
mov
lea
cmc
cmp
dec
mov
xchg
jbe
xchg
inc
lahf
pop
jle
dec
push
verr
add
adc
push
movsl
cmpsl
dec
dec
loop
ja
add
push
gs
fucomp
mov
mov
inc
xchg
pop
sub
xchg
cmpsb
xchg
bound
jg
mov
mov
or
mov
loope
push
adc
inc
call
sbb
push
notl
pushf
jne
jae
dec
repz
inc
inc
insb
pop
andl
jmp
clc
rcrl
mov
insb
in
and
push
sub
nop
mov
imul
jbe
out
pop
sbb
jge
loope
adc
or
push
mov
adc
adc
sti
cmp
std
inc
cmp
in
mov
sahf
popl
js
xchg
fisttpll
adc
in
imul
test
adc
hlt
fildl
sub
sbb
ret
push
test
sbb
xorl
and
jae
stc
fwait
inc
cmpsl
mov
testb
ret
loop
cli
in
stc
cmc
ret
std
test
loopne
xchg
idiv
mov
mov
or
fdivl
push
push
aam
pop
sbb
pop
lods
repz
out
int3
adc
pop
out
jno
jle
jmp
push
mov
cmc
mov
pop
cmp
jmp
pop
xchg
fwait
hlt
jl
shlb
in
fisubs
inc
sbb
sbbl
pop
lods
lods
adc
cmp
jp
inc
push
daa
sub
cmp
ljmp
incl
jb
stos
outsl
jl
push
in
aas
push
mov
out
xchg
pop
sub
ljmp
push
push
cmp
imul
hlt
dec
push
sub
cmp
jge
imul
les
sub
fcompl
xor
pop
jo
inc
inc
mov
into
rolb
jg
sbb
sbb
out
int
lds
fucomi
test
mov
mov
out
ret
push
lea
cmc
fsubs
pop
pushf
int
aaa
cwtl
mov
and
fisubrs
mov
mov
outsb
test
jecxz
icebp
mov
jb
pusha
mov
pushf
pusha
or
wrmsr
add
out
inc
xchg
dec
pop
jle
push
cmpsb
and
pusha
sbb
repnz
stos
ds
jb
xor
ljmp
lea
dec
sbb
sar
outsb
or
xor
idivl
ss
loop
sub
in
adc
dec
push
subl
dec
fmuls
fisttps
mov
sub
pusha
push
xchg
jmp
enter
push
and
stc
dec
pop
push
jnp
xchg
pop
cmp
stos
sti
adc
xor
out
data16
je
push
iret
xor
mov
push
sti
or
loopne
cltd
xor
add
jmp
jecxz
lock
add
mov
mov
add
repz
loopne
stos
pop
jle
xor
cld
test
enter
adc
iret
lods
inc
lret
ffree
jne
sbbb
mov
jbe
ret
lret
jge
adc
out
or
imul
jmp
outsl
inc
xlat
cld
xor
mov
adc
pop
cmp
jnp
test
mov
or
out
or
mov
outsb
or
mov
or
pop
out
xchg
outsb
ds
ficoms
hlt
stos
push
xchg
lock
adc
movsb
add
push
pop
mov
push
shll
and
inc
mov
ds
xchg
xor
adc
outsb
xor
enter
jnp
stos
sbb
push
dec
in
inc
sub
inc
jb
mov
adc
pop
into
xchg
inc
mov
cmp
dec
sub
es
sbb
into
lea
les
popf
pop
les
movsl
push
stc
pop
iret
or
out
bound
loop
xor
lea
push
les
stos
or
xor
orb
out
mov
add
imul
push
xor
and
dec
adc
and
roll
adc
jnp
xor
ret
and
les
dec
inc
push
popl
cmpsb
ss
rep
add
es
lcall
and
mov
pop
lea
rorl
jge
insl
in
inc
jmp
shll
adc
or
mov
jbe
mov
mov
ffree
mov
stos
addl
inc
in
and
mov
repnz
jp
mov
add
and
cmpsl
dec
cmpl
into
mov
adc
inc
inc
jns
jnp
jae
jge
imull
and
rcll
adc
jg
das
call
adc
lods
cmp
imul
lock
mov
jl
xlat
mov
sub
lcall
imul
cmpsb
sbb
fldl
imul
add
psllw
js
mov
cld
mov
test
subb
jmp
jns
mov
jl
je
push
add
jecxz
cmp
adc
mov
ss
int
dec
dec
mov
mov
idivl
xchg
mov
mov
int3
test
rorb
popf
int3
test
dec
mov
call
xor
inc
or
push
nop
push
dec
sub
mov
pop
push
or
or
or
xchg
cmp
mov
lret
es
mov
je
and
in
loopne
fstpl
dec
lods
pusha
sahf
push
jno
in
dec
mov
xor
mov
push
shll
pop
in
or
outsb
and
leave
int
lds
sub
jno
insl
mov
jae
scas
lgs
sarl
in
ss
lea
test
mov
out
popa
sub
mov
or
and
rcl
outsb
out
jae
in
loope
arpl
into
out
adc
and
jo
ret
dec
xor
push
fs
push
push
mov
xor
jbe
sbb
xchg
movsl
aam
mov
mov
mov
daa
adc
out
sbb
pushf
std
xor
pmaxsw
adc
arpl
mov
pop
fimuls
cmp
stos
add
outsl
mov
mov
rcrb
adc
sbb
jl
testb
in
jge
mov
xor
pop
fsubrs
rolb
push
ja
mov
mov
adc
repnz
inc
call
mov
aas
jge
and
jl
loopne
pop
jnp
sub
push
imul
fsubrp
xchg
pop
xor
int3
jl
pop
les
fcomp
pop
or
insb
testl
das
stc
sbb
orl
addb
mov
xchg
rcll
push
push
ret
lcall
mov
mov
in
sahf
xchg
ljmp
inc
dec
mov
out
je
out
add
stos
mov
mov
sbb
mov
dec
xchg
cs
add
popa
inc
pop
out
xchg
test
inc
xor
insb
xor
pop
out
mov
xchg
pop
cltd
push
addr16
orb
inc
imul
dec
jl
jno
lcall
aas
cmc
jp
add
inc
jecxz
push
out
cmp
mov
pop
jnp
sub
pop
cld
cmpsb
negl
cwtl
cmpsl
pop
mov
jmp
jp
lcall
adc
rcrl
fwait
ds
adc
sbb
xchg
cmpsl
mov
pusha
repnz
dec
cli
xchg
aas
fisubrs
push
cwtl
inc
repnz
push
cs
cs
pop
mov
dec
dec
xchg
sub
mov
mov
jle
sub
inc
mov
call
jb
cmp
push
cltd
mov
lods
insb
andl
iret
mov
cltd
xchg
mov
cld
out
xchg
arpl
lock
jne
mov
imulb
jnp
dec
stos
lcall
mov
inc
and
cmp
pushf
popf
add
jns
or
xor
imul
addb
pop
das
push
push
cmp
sub
pop
sbb
mov
adc
movsl
add
push
repz
cmp
mov
lret
es
ret
pop
imul
mov
aad
mov
ds
jne
std
cltd
test
shl
and
repnz
xor
or
jle
stc
int
in
push
cmpsb
popf
xchg
mov
cmpl
nop
rol
xchg
in
pop
xchg
mov
je
pop
inc
pop
sub
popa
mov
pop
add
pop
xchg
mov
test
sub
aad
ljmp
orl
push
adc
es
pop
je
jo
and
cmp
and
and
pop
bound
flds
mov
xchg
call
push
cmc
cltd
and
cltd
add
aad
jbe
repnz
and
dec
adc
push
pop
jp
arpl
or
mov
dec
cltd
int
iret
ljmp
mov
dec
mov
popf
inc
dec
rcl
nop
jp
addl
xor
imul
sub
xchg
adc
cmp
adc
xor
test
adc
pop
cmpsl
in
in
xlat
cltd
xchg
fdivrp
pop
nop
mov
test
icebp
xchg
jns
add
dec
pop
push
pop
lcall
stos
pop
shrl
push
lods
add
dec
add
fs
add
outsb
xchg
in
test
jp
mov
out
mov
sub
outsb
int3
enter
mov
jo
lea
push
insl
inc
sbb
jg
mov
jl
add
cwtl
pop
outsl
stos
lods
jb
pop
xchg
adcl
inc
mov
add
sub
mov
mov
mov
loope
mov
push
push
xor
or
jns
bound
pop
pushf
cmp
jo
call
jbe
or
aaa
inc
repnz
mov
fcmovnu
inc
jge
push
movl
lret
add
jns
jecxz
xchg
mov
iret
mov
movb
mov
testl
test
adc
mov
daa
dec
movsl
push
dec
xor
push
test
dec
inc
mov
roll
push
adc
ljmp
cmc
arpl
lcall
jle
sub
xor
inc
movsb
pop
out
and
mov
xchg
out
push
or
sub
mov
ret
popf
xor
jbe
gs
outsl
push
add
das
daa
inc
movl
adc
enter
rolb
xlat
bnd
clc
mov
stos
xchg
mov
mov
xchg
dec
aam
icebp
das
xor
scas
mov
mov
aad
push
sbb
adc
or
fs
roll
repnz
pop
adc
popa
repz
out
add
lds
inc
add
popa
gs
push
pop
bndldx
cmp
jle
xor
jecxz
and
mov
addr16
stos
xchg
mov
paddb
push
xchg
aaa
inc
jmp
loopne
filds
push
popl
mov
dec
lcall
insb
xchg
jo
outsl
ss
aad
adc
inc
jp
in
rorl
fcompl
lahf
pusha
or
shrl
jne
inc
imul
lds
jno
xchg
cmp
in
nopl
jbe
pop
fdiv
clc
orb
shll
mov
repnz
das
out
cmp
in
test
xchg
sar
sahf
fsubr
lahf
mov
dec
pop
pop
je
cmp
bnd
loopne
cmp
lds
scas
fisubrs
jle
jnp
ret
movsl
out
daa
icebp
in
andl
sarb
adc
mov
jmp
data16
mov
and
cwtl
mov
hlt
or
and
add
dec
push
je
mov
sarl
ret
fmull
mov
mov
mov
or
ljmp
ss
movsb
mov
aaa
pop
pop
cmp
fs
stos
mov
repz
sti
scas
aam
test
jmp
fwait
jb
loop
adc
mov
sub
jae
dec
fwait
pop
pop
test
aam
and
enter
lods
popa
and
sbb
and
push
push
insl
jmp
test
pop
sbb
pop
cmp
dec
xchg
jne
fstps
push
iret
xor
xor
mov
into
add
arpl
mov
icebp
adc
or
adc
push
imul
inc
mov
fucomi
adc
das
adc
mov
sbb
sub
sub
sbb
mov
das
cmp
ja
cmpsb
mov
mulb
repz
outsl
xorl
adc
jge
cmpsl
mov
lods
lcall
mov
cmp
aam
jmp
cmp
imull
mov
dec
stc
jne
and
mov
push
out
jae
xor
add
and
jge
xlat
aad
clc
mov
loop
lret
xor
mov
jo
mov
inc
sti
pop
rcrb
dec
js
out
fdivrs
inc
inc
push
stos
or
mov
sti
pop
cli
ret
lcall
adcl
cmp
ja
mov
adc
incl
mov
adc
pop
and
and
dec
aam
jmp
jmp
imul
dec
pop
in
js
icebp
cltd
in
fdiv
mov
xchg
aas
scas
jb
push
mov
les
aas
inc
sub
sub
dec
inc
mov
push
scas
fistps
or
fstl
addb
inc
aad
imul
sahf
pop
add
or
cmp
and
mov
ss
sti
jecxz
mov
lds
jge
inc
pop
fdivrl
andl
ljmp
sbb
inc
les
sub
repnz
shll
and
sub
lods
test
mov
push
fsubl
jnp
fisttps
cmc
push
jl
mov
cmp
fisttpll
cli
adc
cmp
and
aas
aam
mov
jno
fimull
dec
mov
dec
push
inc
xor
xchg
loop
push
sbb
mov
test
lahf
and
sub
adc
aad
mov
sbb
pop
lods
test
lock
out
into
adc
mov
inc
jecxz
jae,pn
dec
sti
clc
inc
dec
out
push
cld
pop
pop
add
add
outsl
xchg
mov
xchg
stos
cmp
xchg
inc
stc
and
mov
lods
scas
mov
mov
outsl
xorl
jle
scas
and
punpcklwd
mov
out
lahf
mov
pushf
loop
lret
leave
dec
cmp
insb
dec
mov
lds
sbb
mov
iret
xor
test
xchg
xchg
scas
inc
test
aaa
and
fwait
jecxz
scas
test
push
and
mov
mov
push
mov
je
insl
mov
sbb
sarb
add
pop
shrl
test
dec
mov
lds
int3
dec
sbb
sub
mov
imul
push
sub
or
inc
insb
fstps
test
in
xorps
repnz
xor
es
push
xor
dec
or
push
hlt
mov
cmpsb
pop
mov
mov
push
jmp
xchg
cmp
pop
cmp
fnsave
and
xor
inc
fisttpll
push
mov
enter
popf
in
ja
int3
mov
enter
xor
mov
jp
jb
mov
and
cwtl
insb
adc
mov
xor
pop
test
jmp
xor
jmp
clc
mov
mov
repnz
cli
pusha
push
xchg
test
push
xor
in
add
adc
xchg
push
ficoms
daa
clc
adc
movsl
sub
push
sub
sarb
cmp
push
sub
popa
ja
lods
lcall
filds
push
adc
mov
leave
fsubl
cwtl
push
rcrb
jne
es
test
pause
lret
dec
push
add
xor
ret
cmp
mov
mov
mov
cmp
mov
push
ss
xchg
inc
loopne
fdivs
ds
lods
lret
xchg
decb
dec
aaa
cmp
inc
and
outsl
repz
sub
push
pop
sbb
add
lock
aad
push
dec
and
or
push
addr16
out
push
jbe
fistpl
in
push
add
ret
sarb
jp
mov
ss
vlddqu
sahf
int
xchg
out
hlt
adc
out
pop
xchg
jae
pop
or
xlat
in
rol
scas
outsb
js
dec
dec
je
cmp
ret
das
sub
out
inc
mulps
or
push
daa
pop
leave
mov
xor
dec
inc
aaa
and
dec
ljmp
jecxz
mov
rcr
add
and
lods
fmulp
cmp
inc
mov
ja
push
mov
inc
jge
lds
addb
das
adc
nop
lret
popf
je
stos
jl
xchg
sbb
mov
fcompl
int3
xchg
fisttps
mov
mov
imul
pop
les
inc
or
incl
sub
cmpl
mov
jns
packuswb
pop
gs
pop
mov
xor
pop
dec
scas
xchg
aam
mov
stc
sahf
lret
mov
inc
mov
idivl
jno
insb
jge
das
mov
int3
cmpsb
movsb
not
movsb
testl
ret
stc
je
addr16
imul
inc
push
stos
and
imul
add
sbb
xacquire
dec
sbb
les
clc
xchg
int3
cmp
sbb
push
icebp
inc
shrl
jns
push
ret
imul
jp
les
xchg
mov
mov
movsl
mov
mov
and
imul
mov
cmp
test
add
dec
sbb
xor
in
push
mov
push
stos
jp
mov
int3
int3
and
push
leave
add
fmuls
fxch
in
rolb
mov
pop
in
mov
sti
xor
divb
inc
sbb
inc
rorl
icebp
shlb
loope
pop
ljmp
test
mov
out
xlat
and
mov
xchg
loopne
cmp
xor
cmp
push
imul
sub
pop
mov
add
mov
xor
or
hlt
mov
jns
push
fdivl
notl
mov
int
dec
pop
jg
jno
cmp
or
fs
hlt
fldl
cmp
and
mov
test
shlb
jbe
inc
aam
fisttps
in
push
push
pop
insb
mov
dec
add
out
js
jmp
adc
rol
outsl
or
aaa
sub
fs
fsubp
cmpsb
fisubrs
fsubrs
fisttpl
mov
popl
roll
xlat
cmpsb
cmp
mov
stos
loop
xchg
dec
sub
sub
leave
pop
out
xor
jmp
push
aas
or
out
push
rcl
test
int3
lret
xor
and
push
push
jmp
stc
adc
jge
shll
dec
pop
pop
xchg
jge
pusha
cltd
shl
rol
mov
jge
pop
or
mov
addb
jl
xchg
inc
sub
xchg
dec
rcrb
jp
pop
shrb
or
xor
shll
lods
shll
sbb
enter
jmp
jmp
fsincos
lret
nop
cltd
sbb
mov
adc
dec
call
ret
cmp
outsb
mov
ljmp
aaa
sbb
push
imul
mov
sub
pop
push
or
in
dec
cmp
loop
cld
cmp
les
inc
sarb
sub
lock
jne
mov
shll
in
push
cltd
loop
sub
mov
xchg
cmc
or
xorb
repnz
sbb
hlt
dec
subl
mov
mov
push
push
xchg
xchg
adc
sahf
jno
push
psubb
imul
clc
cmc
sub
arpl
adc
xchg
sar
stos
fldcw
jmp
call
fs
pop
rorl
xchg
xor
ret
sub
and
test
xchg
adc
xor
sub
lea
aaa
enter
add
popf
jne
mov
or
and
or
pop
cmp
scas
inc
pop
ds
push
stc
or
push
jb
pop
cmp
xor
pop
out
jae
xchg
jg
rolb
sub
push
ljmp
or
sbbb
sti
lret
mov
je
mov
xor
pusha
cmp
pushf
ret
jns
sarl
out
ja
mov
addr16
cmp
xchg
jne
movsb
inc
adc
js
ret
sub
pop
mov
xchg
xchg
repnz
mov
cmp
fidivrl
push
jae
xchg
push
lods
pop
dec
add
cmc
push
jge
aad
sbbb
negl
pop
inc
gs
fisttpll
pop
xor
xchg
jnp
lods
mov
and
or
adc
ret
adc
sub
ja
ret
dec
xorl
cmpsl
dec
sub
xor
pop
scas
sbb
pop
loope
imul
inc
lock
inc
aam
pop
mov
repnz
scas
sbb
and
push
addr16
pop
fwait
lret
jp
add
push
fiaddl
aad
mov
dec
js
and
mov
enter
xor
pop
in
or
ficompl
jl
pop
add
xchg
or
jle
mov
test
adc
sbb
add
or
or
cld
out
lret
add
xor
dec
shll
mov
sub
clc
js
mov
lock
in
ret
mov
in
les
cwtl
xchg
push
stos
mov
xchg
dec
adc
xchg
shlb
xchg
xchg
add
lods
aaa
iret
and
mov
std
add
jns
stos
mov
jg
fmuls
int3
mov
sti
inc
pusha
cmp
jo
fldt
shlb
mulb
jbe
daa
es
fisttps
inc
dec
push
pop
xchg
mov
mov
fld
push
rcll
xlat
lahf
push
sarl
insl
mov
loopne
jl
dec
je
orl
stc
faddl
jb,pn
je
sbb
iret
and
xchg
mov
jne
inc
push
jb
jne
sbb
outsb
and
fucom
mov
pop
pop
add
lods
cmp
out
addb
xchg
rcrb
push
test
push
aaa
ljmp
push
sbb
lret
cmpsl
mov
cmp
xchg
cltd
sbb
in
inc
scas
outsb
add
shl
mov
bound
ret
in
out
mov
jge
ss
aad
lcall
lret
cli
add
add
push
movsb
lods
cwtl
or
jl
bound
adc
fcmovne
or
gs
mov
test
ficoml
or
and
jns
mov
rolb
pop
mov
in
xchg
jo
cmpsb
xor
mov
cmp
xor
pop
sub
lret
mov
jmp
clc
cmp
leave
stos
mov
addb
mov
cld
add
xchg
cmc
into
lret
xchg
lahf
shr
push
fadds
mov
stc
jne
adc
dec
mov
xlat
and
cmp
xchg
movsl
leave
adc
repnz
daa
push
lahf
jmp
call
ja
push
arpl
fldcw
sbb
fsubrl
rclb
pop
xor
daa
sarb
pop
fidivrs
ljmp
jge
call
les
adc
jl
sub
adc
scas
data16
shlb
icebp
and
xor
pop
sub
outsb
fbld
jns
xchg
pop
stos
imul
into
lock
fdivl
scas
and
adc
call
mov
shl
lea
jmp
in
mov
ret
sub
pop
xor
mov
loop
dec
insl
or
lods
ljmp
sub
ja
daa
xor
add
dec
adcl
xor
mov
inc
std
mov
arpl
sub
nop
hlt
call
dec
mov
popa
mov
cld
jns
aas
inc
call
iret
jge
imull
test
cmp
add
fidivrl
imul
enter
push
jecxz
cltd
out
pop
out
mov
push
mov
lea
stc
xchg
jne
sbb
es
cmp
fidivl
stos
jmp
pop
or
iret
mov
lret
cs
mov
call
int3
test
icebp
repnz
mov
shll
lock
ret
jbe
cld
inc
jno
inc
and
cmp
push
in
inc
push
scas
sub
scas
xor
inc
sbb
stos
xchg
jge
inc
js
inc
icebp
sti
insl
xchg
jo
fs
js
push
xor
add
xchg
adc
xchg
lods
pop
sub
outsb
cltd
add
js
aam
imull
popf
std
push
xchg
xchg
stc
cmp
ss
push
mov
mov
xchg
dec
mov
daa
fdivrl
xor
fisttpl
popf
mov
xchg
repnz
push
rcr
fcmovbe
ds
inc
negl
fists
fidivl
pop
rcl
cmp
testl
mov
push
cmp
sbb
adc
aad
mov
lcall
xchg
dec
mov
push
mov
mov
adc
adc
test
icebp
sub
or
f2xm1
cmc
repnz
and
das
ljmp
xlat
xchg
sub
mov
out
jno
or
fnstcw
mov
mov
ss
sub
pop
movl
push
ret
or
imul
cmp
cmp
jae
rsqrtps
mov
dec
lock
sub
lret
subl
mov
cwtl
pop
movsl
jb
push
mov
insb
fwait
movb
xchg
fsts
push
stos
fildll
ret
inc
mov
add
sub
mov
xchg
adc
lods
cmpsl
dec
and
ffree
xchg
dec
scas
test
insl
es
push
lret
leave
dec
and
ret
sub
xchg
push
dec
adc
test
mov
test
inc
sti
jp
push
loope
subl
add
cmc
adc
in
into
push
loopne
orb
popf
int
or
dec
xchg
cmp
xchg
out
aas
xchg
outsb
mov
inc
and
test
fidivl
gs
lods
jmp
imul
mov
mov
pop
icebp
jg
mov
fdivr
pop
add
and
sub
adc
jg
mov
mov
cmpsl
sti
testl
in
fld
jg
add
sbb
frstor
test
adc
mov
enter
stos
sub
out
outsl
pushf
insl
aas
dec
rcl
jg
jno
popf
ja
test
dec
pop
mov
sahf
enter
out
fists
pop
test
mov
rol
mov
jno
pop
out
xchg
ret
ljmp
or
mov
or
add
cmpb
stos
into
and
inc
and
cmpsb
negl
mov
movsl
sub
dec
cltd
add
cmp
dec
stc
lods
inc
aad
cmp
bnd
arpl
cltd
stos
or
out
push
mov
or
add
sbb
sbb
nop
test
push
sahf
add
sti
shr
xlat
and
jge
pop
dec
std
lret
cwtl
mov
popf
lds
insl
inc
inc
fildll
int
clc
aad
outsl
adc
dec
sub
mov
xor
imulb
mov
or
push
sub
or
int
add
jl
cmp
mov
in
jbe
sbb
imul
mov
mov
cmp
es
mov
cltd
fwait
xlat
sbb
pop
pop
decl
mov
sub
je
sub
push
fbstp
jl
mov
cmp
jle
cmp
add
gs
xor
jp
loop
pop
leave
mov
dec
outsl
mov
rcll
cmp
mull
aas
cmp
xchg
mov
lods
cmpsl
test
fucomi
sbbb
sub
fidivl
insl
mov
push
mov
ret
fwait
mov
shr
test
inc
data16
dec
insb
out
adc
out
dec
faddl
jecxz
div
mov
test
popa
xor
das
cmp
fwait
insb
jp
fidivrl
add
jmp
inc
mov
dec
cmp
fildl
rorb
inc
test
das
lods
adc
mov
sbb
xchg
stc
pop
es
outsb
enter
fmul
adc
repz
adc
and
ja
cltd
push
repz
notb
in
add
rorl
int
or
loop
xchg
test
in
mov
ret
or
push
adc
sbb
jnp
adc
into
and
shll
mov
cmp
dec
scas
into
imul
dec
sbb
loopne
push
cmp
cs
outsl
mov
cmp
imul
test
imul
mov
dec
xorl
add
imul
lahf
xor
xchg
in
adc
stc
sbbl
xchg
mov
mov
and
dec
lret
rorl
mov
fmull
pop
mov
int
mov
cmp
adc
and
hlt
cmp
stos
jno
sti
notl
mov
out
mov
popf
pop
mov
aad
insl
mov
jae
dec
stos
cltd
imul
or
lea
pop
dec
test
jno
imul
pushf
pop
imul
add
hlt
fs
ja
inc
mov
in
outsb
dec
test
sub
xor
nop
mov
arpl
int
xchg
lock
sbb
pushf
cltd
push
rcl
leave
je
adcl
dec
fs
rolb
std
sbb
lods
and
test
pop
pop
push
mov
mov
mov
stos
divb
and
mov
cli
pop
sbb
and
mov
cmp
fsub
or
cmpsl
adc
popf
mov
jmp
mov
sbb
cmp
adcb
sub
mov
inc
rolb
cltd
notb
pop
in
int
movsl
repnz
ss
sbb
jb
push
mov
lret
push
sarl
popa
or
out
fwait
sar
jne
mov
inc
lods
in
lahf
aad
test
sbb
inc
cmp
mov
dec
and
fwait
sbb
jecxz
mov
jge
loop
nop
icebp
cmpsl
insl
mov
mov
icebp
fcompl
in
stc
push
xchg
in
inc
shll
in
call
rorb
lods
int
inc
fwait
pop
inc
faddl
cld
imul
or
push
pop
pushw
fcmovu
clc
fisttps
add
dec
jge
push
jnp
jbe
scas
xor
dec
xchg
sbb
mov
cli
cmp
xchg
cwtl
shlb
imul
je
pop
mov
loopne
adcb
dec
xor
adcb
addr16
dec
xor
cltd
movsl
xchg
je
or
cmp
xchg
lcall
inc
jg
push
sarb
sub
xchg
push
mov
cli
paddd
fcmove
lock
pop
test
pop
sbb
xchg
or
pop
cmp
add
addb
ret
push
lds
pop
and
xchg
dec
pop
iret
jae
ficomps
push
or
popa
xor
mov
loope
lcall
por
push
adc
mov
xlat
and
jbe
mov
adc
roll
mov
nop
dec
xchg
mov
or
mov
outsb
jae
in
dec
jge
and
push
and
ret
movsb
call
mov
inc
adc
aas
add
add
enter
dec
sahf
pop
sbbb
sub
int3
inc
cmp
outsb
jmp
pop
jae
mov
mov
loopne
into
popf
cli
cmp
jns
push
lods
out
and
add
jl
mov
ss
shrb
jge
mov
xlat
xor
enter
lcall
and
mov
andb
adc
out
aam
push
mov
xor
or
sti
inc
test
xor
and
les
dec
inc
sahf
in
add
jl
jl
fwait
sbb
std
call
in
inc
lret
lret
mov
inc
mov
or
fldcw
xor
pcmpeqd
mov
push
xor
pop
test
push
mov
push
xchg
and
xchg
mov
adc
in
bound
popa
loope
outsl
lcall
mov
orb
jae
or
imul
jecxz
add
push
push
sub
fildl
inc
and
add
sub
or
js
add
ficomps
inc
ficoms
push
imul
clc
sub
insl
bound
push
sbb
jae
push
insl
mov
and
enter
in
shr
and
ja
pop
outsb
fprem
sar
mov
push
int3
test
pop
lods
push
inc
test
lock
jnp
xor
or
mov
call
mov
push
cmpsl
jl,pt
sub
rolb
icebp
cmp
mov
or
movb
fwait
adc
mov
mov
mov
xchg
xchg
in
and
inc
in
push
int
pop
shl
cmp
stos
dec
xchg
add
dec
aaa
hlt
scas
hlt
sbb
dec
hlt
cmpb
arpl
stos
cmp
and
pop
mov
icebp
mov
push
lret
insl
rorl
xor
inc
fdivp
dec
aam
js
setb
mov
loopne
loopne
adc
push
fimuls
mov
cmp
push
xchg
loope
ret
jge
and
mov
fsts
negb
sbb
cmp
arpl
jmp
mov
xor
add
inc
rolb
into
lcall
sbb
cld
lea
jnp
cmpsl
js
xchg
sbb
xchg
jecxz
add
jmp
js
sub
stos
ljmp
stc
loope
xchg
std
mov
lret
add
push
out
lods
push
mov
dec
mov
imul
in
and
mov
out
es
xchg
gs
lcall
data16
push
or
xchg
jg
cmp
or
insb
fbstp
fsts
sub
and
fwait
aas
repnz
jl
mov
xor
push
dec
daa
pop
fisttpl
aam
push
pop
mov
cltd
jp
xchg
push
loop
inc
ret
popf
outsb
dec
cmpsb
outsb
nop
bound
int
out
sbb
stos
pop
jp
and
rcll
fcoml
jge
mov
into
xchg
cmp
inc
adc
inc
imul
out
das
sub
mov
les
push
dec
pushl
push
js
push
repz
adc
add
mov
cmp
pop
es
push
daa
xchg
lock
das
insb
sbb
mov
push
dec
lahf
inc
sub
pop
jo
sbb
jmp
mov
pop
aad
sub
out
xacquire
xchg
dec
dec
mov
daa
or
loop
lods
stc
and
fsub
int3
mov
or
stos
dec
std
icebp
cli
mov
push
pop
mov
adc
sub
scas
jge
cld
lahf
leave
repnz
pop
test
outsl
cmp
out
add
mov
popa
sbb
lods
push
cmc
or
cld
cmp
loope
outsl
out
lods
mov
add
out
push
outsb
jns
outsb
push
inc
dec
js
and
loope
dec
sarb
mov
in
dec
lret
or
rclb
fsubrl
xchg
jmp
adc
xchg
sti
fst
mov
push
daa
popa
add
pop
ljmp
loop,pt
add
inc
lea
pop
lret
mov
pushf
in
pop
mov
hlt
xorl
add
mov
inc
rolb
xchg
xchg
dec
cmp
jmp
imul
in
loopne
jle
xor
lods
sbb
ficompl
xor
mov
mov
xor
loopne
push
ss
call
push
jbe
movsl
xorb
in
mov
jbe
stc
test
pushf
dec
ja
mov
loopne
xor
int3
push
dec
ljmp
xchg
rcr
loopne
shl
lea
andb
jmp
aad
cmc
jbe
push
sub
or
negl
imulb
jl
cld
push
adc
jle
pushl
lahf
in
mov
mov
sub
jb
dec
in
repz
pushf
leave
add
scas
mov
dec
insb
rorb
add
shrb
dec
imul
lods
add
adc
push
in
push
push
mov
repnz
loopne
jecxz
or
cwtl
jb
adc
movsb
sbb
push
sub
cs
rolb
jge
jmp
jge
mov
bound
movsb
sbb
jns
push
mov
push
lahf
scas
adc
or
lret
fidivl
inc
shrb
inc
adc
sbb
xchg
les
pop
add
xorb
xchg
movsl
int
andl
in
xchg
jo
movsl
sti
stos
sbb
push
mov
cmp
xor
movsb
fwait
xchg
sub
shrb
imul
shrb
movsb
clc
or
dec
lds
cli
mov
xchg
fmull
mov
fldl
mov
sub
adc
xor
push
in
les
cmp
sub
dec
adc
dec
sarb
xchg
or
pop
add
cmc
mov
jne
stos
test
sbb
xchg
sub
aad
push
ret
jmp
sub
dec
adc
xchg
pop
rcrl
jmp
jp
in
inc
jnp
lcall
xchg
gs
dec
cmp
lds
stc
jle
xor
sub
in
mov
scas
sbb
xor
insl
dec
adc
mov
dec
lds
pop
and
cmp
scas
lea
inc
lcall
xchg
sub
jnp
test
xchg
lret
push
push
pop
adcl
lcall
adc
sbb
mov
cmp
fst
mov
lret
and
jecxz
mov
and
jns
xlat
adc
cli
pop
in
outsb
adc
enter
iret
aad
in
inc
lret
cmpsl
ja
sahf
push
push
sti
ja
lea
and
loop
aas
and
rclb
xchg
xchg
scas
into
mov
repz
jmp
lods
cmpsb
aas
and
mov
mov
pop
inc
and
push
aaa
push
and
aad
mov
les
push
jae
or
sbb
fisubs
mov
push
or
dec
fisttpl
add
sbb
cmpsb
dec
mov
mov
insl
cmp
cmpsl
sbb
pop
in
iret
ret
xor
add
mov
hlt
or
sahf
fisttpl
mov
scas
push
sbb
sbb
popa
testl
or
hlt
imul
jle
es
int
jmp
lea
xchg
jmp
aaa
jmp
or
sarb
sbb
scas
dec
jns
iret
pop
scas
es
into
xchg
sbb
jecxz
and
mov
scas
mov
jg
or
nop
add
inc
sbb
xchg
sbbl
outsb
cltd
in
dec
sti
xchg
in
sar
inc
jb
shlb
adc
jbe
test
popf
movups
mov
cli
sub
push
mov
int
jg
inc
insl
ja
inc
and
push
ret
sub
mov
jns
lods
imul
insl
jle
jmp
inc
jle
out
sub
outsb
mov
loop
xchg
enter
xchg
loope
xchg
arpl
dec
push
adc
shlb
and
lcall
or
shrb
push
in
xchg
scas
insl
inc
orb
iret
call
dec
mov
sub
int
pop
jl
and
aam
mov
lods
shlb
pop
add
subb
push
aam
lret
mov
push
fst
xchg
mov
mov
cmp
or
xchg
add
and
jl
sbb
sub
mov
mov
gs
mov
cld
push
pop
rcr
std
inc
adc
cmpsb
scas
mov
dec
stos
ja
push
les
lea
test
inc
sbb
neg
cli
ret
idivl
cmp
pop
xor
dec
mov
fcmovne
pop
sub
cmpsb
aaa
shrl
pop
shll
mov
sbb
out
loopne
cmp
out
mov
in
shlb
dec
xorl
mov
in
push
pusha
inc
mov
cs
mov
pop
aaa
add
jg
and
rorb
ljmp
lea
mov
inc
incb
mov
pusha
inc
cmp
pop
lcall
outsl
sub
mov
and
jb
push
push
ja
inc
insl
mulb
xchg
subb
jle
cmp
cmp
outsl
mov
pop
pop
jnp
mov
fldcw
rol
pop
adc
jg
mov
jp
aam
pop
loope
cmpsl
pop
iret
in
push
jb
sub
test
popa
jae
cld
sbb
jnp
push
jmp
mov
mov
xchg
pusha
sbb
push
inc
test
pushf
xlat
adc
aas
mov
push
fnsave
outsb
push
dec
mov
sarl
ret
and
scas
int
push
jnp
add
add
or
sub
outsl
sarl
pop
dec
and
je
imul
fldl
jg
inc
xor
rorl
xor
cld
lret
inc
mov
ss
adc
sub
lds
shll
xor
fisubrl
insl
add
addr16
mov
jae
push
lock
ja
cmpb
push
and
mov
pop
imul
mov
add
cmp
xchg
stos
mov
mov
dec
cmp
ds
add
rclb
cltd
inc
out
jl
sub
arpl
push
sbb
scas
pop
aas
jbe
sbb
stc
insb
mov
movsl
pop
or
fwait
inc
in
mov
sbb
jne
and
inc
xchg
mov
lods
pop
dec
mov
and
xchg
sahf
or
ja
mov
cmpl
aam
icebp
pop
fldcw
out
mov
push
mov
icebp
jp
cld
test
movsl
sub
jbe
and
aas
movsl
pop
out
jbe
inc
cwtl
xor
insl
sar
xor
fwait
mov
mov
out
leave
pand
scas
scas
std
ljmp
popa
pop
pop
jmpw
inc
stos
bound
mov
push
mov
mov
adc
lds
mov
pop
ss
and
cltd
dec
dec
mov
jecxz
int
mov
xor
push
add
lret
les
mov
mov
cmp
sarb
test
and
ret
add
cmc
outsl
pop
pusha
js
mul
decl
test
dec
sbb
xchg
popa
adc
mov
punpcklwd
repz
out
jns
ret
loopne
and
mov
sbb
pop
pop
jbe
jp
mov
mov
and
outsl
insl
cs
repz
es
lods
notb
adcb
adcl
dec
jno
cmp
iret
or
adc
xor
aas
std
mov
dec
jno
in
jecxz
cmpsb
in
mov
jae
cld
rcll
dec
dec
push
aas
lock
jecxz
xlat
fdivs
popf
mov
add
sbb
add
sbb
mov
test
jns
pop
repz
sub
push
cmp
inc
fdivs
icebp
xchg
punpcklwd
stos
cmp
jecxz
cmp
cld
mov
out
dec
imul
jecxz
cmpsb
cmp
jo
test
lods
xor
aam
fstps
xlat
fldcw
ret
push
xchg
gs
pop
jae
imul
in
dec
rorl
push
popf
cmc
push
pop
into
jp
xchg
test
pop
pop
and
push
add
rcl
lret
test
pop
cmpsb
das
clc
pop
xor
xchg
orb
adc
push
roll
pop
mov
xor
rorl
jnp
mov
mov
mov
jle
cmp
cmpsb
push
std
or
lcall
movsb
jo
dec
mov
jmp
jmp
mov
aaa
cmp
loope
ja
or
inc
sar
stos
mov
iret
jp
mov
shrb
xchg
mov
pop
fmul
int
ret
mov
adc
out
mov
xchg
popa
jb
xchg
pop
mov
fisubs
out
sbb
aad
pop
rclb
pusha
xchg
stc
cmp
scas
mov
bound
mov
imul
jb
xchg
mov
xchg
xchg
dec
cmp
inc
lahf
jae
or
xchg
and
push
jmp
test
xchg
inc
mov
inc
popa
loop
lcall
stos
inc
outsb
pop
int
mov
adc
jp
in
ja
and
or
cmp
xorl
and
xchg
sub
in
sahf
mov
int
pop
sahf
push
mov
push
ja
jmp
mov
rcrl
mov
xchg
adc
lahf
incb
mov
push
dec
icebp
pop
aam
add
hlt
xor
mov
add
idivl
stc
mov
in
mov
xchg
sub
aaa
clc
inc
sbb
xor
imul
mov
inc
push
fdivs
addr16
outsb
cld
outsb
data16
jo
xchg
adc
int
lods
add
fsubrl
xchg
add
xorb
jmp
or
aad
call
inc
sub
push
es
in
popf
sar
cmpl
ja
adc
jmp
jnp
inc
sub
out
sahf
push
js
in
repz
fcomi
xlat
mov
aaa
push
push
mov
push
cmp
dec
aaa
xchg
pusha
scas
fimull
sub
sub
pop
test
addb
shr
xchg
mov
fs
movsb
adc
les
cli
leave
jne
daa
xchg
jae
mov
xchg
dec
sbb
cmpsl
aad
inc
pop
cld
inc
jp
test
into
dec
stos
mov
lret
mov
mov
cmp
data16
cli
cmp
add
es
jmp
loopne
cltd
jmp
inc
dec
mov
cmp
int3
sub
push
xor
addl
mov
cwtl
push
repnz
dec
mov
add
lods
or
pusha
rol
aas
or
cmp
out
iret
clc
aas
out
and
clc
cmp
or
cwtl
or
cmc
xor
push
fs
push
inc
add
call
data16
mov
or
mov
mov
sbb
lods
push
mov
cs
std
sub
mov
sahf
rclb
idivb
push
xor
es
mov
leave
mov
decl
dec
imul
xchg
mulb
xchg
inc
sbb
adc
cmpsb
and
dec
rolb
xchg
sbb
outsb
testl
push
sub
inc
cwtl
sub
aam
sbb
mov
inc
pop
lcall
xchg
sub
or
pop
mov
js
leave
movsb
cmp
stos
cmpl
popf
iret
jo
adc
push
cwtl
cmpsl
shrb
in
cmp
rcll
jge
out
scas
and
xchg
loope
idiv
pop
jns
aaa
scas
pop
sbb
dec
push
cmp
cmp
out
cmpsl
mov
xchg
add
jnp
mov
test
xchg
icebp
sub
inc
sarl
popf
js
add
popl
lock
lret
cmpsl
insb
sbb
mov
insb
jns
jge
in
imul
jge
movsb
aaa
icebp
shll
sub
fnstcw
arpl
fisubrl
divb
mov
leave
xchg
jo
mov
inc
or
ja
mov
leave
inc
or
xchg
xorb
scas
mov
imul
lock
push
and
xlat
sub
sub
lahf
je
push
add
mov
ret
adc
popf
mov
or
test
inc
cwtl
mov
lods
cmp
sub
xorl
add
push
loope
in
test
ljmp
push
fdivrs
arpl
mov
mov
lock
fdivrl
ret
dec
cmp
shrl
dec
sti
pop
aas
jne
push
repnz
inc
iret
push
push
pop
adc
or
jae
jbe
cmp
mov
adc
pop
xor
and
lret
inc
cmp
push
xor
inc
sbb
fcmovne
jae
push
loop
pop
xor
cwtl
jnp
fwait
adc
dec
aas
mov
mov
adc
sbb
adc
jmp
add
jbe
lahf
out
mov
sbb
into
bound
and
imul
mov
filds
js
into
push
imul
sbb
pop
fs
aas
or
cmpl
int3
loop
lods
add
cwtl
cmc
ret
mov
sub
mov
lret
ljmp
fildll
negb
xor
js
and
ret
xor
out
pop
ret
pop
xchg
jo
inc
fidivrl
mov
gs
loope
sahf
mov
lahf
rorb
mov
xchg
ficomps
jecxz
je
ds
call
out
inc
sbb
mov
xchg
fldenv
inc
into
in
orl
lret
test
adc
pusha
fnsave
popa
pop
das
adcl
mov
push
pop
push
mov
das
aad
stos
popa
aaa
cs
stos
sti
or
xchg
sahf
mov
mov
inc
push
in
lock
jg
jmp
mov
xchg
ret
insl
imul
pop
arpl
xchg
xchg
aas
mov
incb
pop
lcall
sub
int3
fwait
adc
lods
or
and
call
or
ret
dec
pop
xor
or
insl
xor
jns
cs
push
repnz
mov
adc
xor
ja
data16
ljmp
push
dec
aad
lret
out
loope
add
xchg
and
rcr
cmpb
xor
mov
sub
pop
lods
fmuls
test
sarb
es
jle
add
dec
repz
icebp
rcr
xor
add
ja
pop
stos
or
jns
out
jp
pop
adc
fnstcw
adc
mov
or
and
sbb
lods
xor
mov
mov
addr16
filds
mov
sub
fs
insl
call
adc
push
cmp
mov
rorb
mov
add
ljmp
sbb
sub
movsl
xlat
xchg
xchg
pop
std
imul
idivl
clc
cmp
inc
cmpsl
scas
stos
and
mov
jns
fistl
or
xor
sub
sub
in
or
iret
jbe
cmpsl
aam
sahf
rcrl
mov
out
in
dec
inc
sbb
cmp
loope
outsl
mov
mov
add
in
sub
pop
repz
shr
mov
sub
xor
sbb
mov
fisttpll
insb
out
js
mov
xor
add
push
cmp
fwait
pop
sbb
sbb
pop
out
jle
push
sub
jecxz
in
daa
pop
inc
cli
adc
popa
mov
adc
pop
pop
or
pushf
lret
daa
xchg
mov
push
loopne
ljmp
fstl
cmc
les
adc
pop
test
fldl
aaa
fwait
insl
or
stos
cmpb
xchg
jae
cmp
or
into
xlat
mov
sub
push
shll
jl
mov
movsb
fwait
mov
or
mov
bound
cmp
lock
cmc
daa
callw
shl
mov
test
sarl
cltd
lret
jb
roll
add
sbb
mov
cmp
enter
and
loope
dec
inc
loopne
test
cmpsb
xlat
push
shll
dec
cmpsb
fs
mov
dec
jp
leave
dec
aam
inc
add
test
loop
xchg
add
fisubrs
icebp
xor
mov
jl
imul
bnd
fwait
lock
test
xchg
lods
fsubrl
sbb
popa
xor
mov
fwait
and
fdivr
pop
jge
in
out
cltd
fmulp
scas
xchg
xchg
lea
shl
push
nop
test
cmp
mov
xor
jnp
loopne
stos
sbb
leave
mov
xor
dec
pop
iret
lods
popf
es
ficoms
mov
dec
adc
xor
inc
and
pop
test
mov
adc
outsl
fsubp
cwtl
sub
mov
outsb
cwtl
add
test
rolb
gs
roll
loopne
sub
and
bnd
orb
jbe
repz
or
fchs
in
in
idivl
out
in
pop
or
in
and
mov
arpl
mov
pop
insb
fsubrs
scas
pusha
pop
xchg
in
and
lds
fadds
rdpmc
xchg
xlat
xchg
or
adc
mov
fadds
and
sbb
mov
lock
es
mov
in
jge
sbb
pop
pop
pop
insl
repz
fsts
pop
cld
sub
sarl
fsubs
das
bnd
subl
popf
aas
and
dec
out
loope
movsb
push
sub
insb
push
lods
push
clc
cmp
pop
cmpsl
cli
mov
cmc
inc
mov
in
add
ljmp
ds
test
mov
mov
adc
push
push
inc
sub
pusha
mov
shr
cmp
stc
aam
cmp
adc
push
jmp
xlat
dec
sub
cmc
add
push
lods
js
iret
bound
push
fnsave
adc
xor
rorb
dec
sbb
outsb
fsubrp
mov
aas
rolb
ret
in
arpl
insl
out
adc
in
and
sub
in
stos
outsb
inc
push
hlt
aad
mov
outsl
adc
data16
mov
sbb
add
pop
add
shlb
scas
nop
dec
mov
mov
stc
rorl
aaa
and
inc
push
orl
mov
dec
lcall
jae
mov
das
daa
or
loop
in
das
xchg
nop
arpl
xor
and
insb
cmp
test
lcall
mov
xchg
jnp
cwtl
imul
mov
notl
leave
test
jae
nop
test
ss
mov
push
stos
shl
cwtl
lds
adc
dec
xchg
sub
ret
jo
or
sbb
xchg
shrb
decb
dec
stos
inc
decl
xchg
xchg
fstpt
xchg
stos
sub
mov
sub
xchg
popa
pusha
add
insb
test
push
jne
pop
jmp
addr16
mov
push
lods
movsl
xchg
fdiv
cld
mov
movsb
mov
das
cmp
into
push
or
test
mov
outsl
dec
inc
mov
loopne
lret
gs
mov
xchg
jp
imul
aad
adc
pusha
sbb
mov
cs
movsl
jns
scas
mov
test
rcrl
ja
push
dec
jo
fistpll
cmp
bound
pop
cmp
and
xchg
shlb
lods
sub
add
js
and
cmp
pop
in
push
adc
icebp
popa
mov
inc
or
sahf
xchg
add
subb
outsb
test
xor
lcall
push
out
and
inc
xchg
push
mov
shrl
scas
popl
adc
addb
mov
jo
add
cmpsl
pop
sbb
jl
adc
mov
outsl
bound
rclb
dec
push
push
push
cwtl
push
fs
repz
int3
sbbl
das
subb
stc
enter
mov
addb
inc
adc
jmp
call
xchg
dec
outsb
xchg
aaa
mov
into
icebp
lods
xchg
clc
xor
test
mov
scas
cli
mov
lret
cmp
lret
out
inc
pusha
scas
xchg
or
in
in
mov
adc
jecxz
int3
pop
xchg
test
pushf
add
mov
or
hlt
scas
xlat
adc
out
aaa
sarl
cld
jb
cmc
stc
adc
jp
clc
sub
push
or
js
in
loopne
mov
jbe
mov
addl
gs
adc
ljmp
into
cmp
sbb
gs
push
addr16
jge
jmp
movsl
pop
or
cmpsb
dec
lock
cmp
aas
push
cmpsl
pushf
imulb
push
inc
jle
inc
ss
inc
std
xchg
movsb
cmpsb
das
sti
testb
out
mov
dec
fnsave
cmp
sbb
push
add
pop
mov
aam
pop
in
pand
mov
lea
push
idivb
cmpsl
pop
imul
insl
dec
sahf
cwtl
aaa
xchg
cli
addb
stc
pop
addr16
sub
sub
adc
cltd
sbb
inc
inc
or
jo
sahf
cwtl
add
popa
iret
dec
loopne,pt
ja
fimull
test
sbb
jle
in
push
pop
fnstcw
loopne
sti
inc
stc
das
lcall
push
xchg
in
dec
cltd
mov
inc
lcall
aaa
add
imul
pop
cmc
fdivl
dec
mov
push
xor
dec
add
loopne
fimull
mov
bswap
jbe
daa
repnz
jb
mov
bound
stos
xor
test
and
xchg
pop
jno
dec
add
pop
mov
ret
jmp
lods
test
cmpsb
iret
jmp
mov
xor
rolb
cmp
mov
cmp
loope
out
sbb
adc
sbb
scas
sub
mov
outsb
mov
popa
push
aaa
scas
stos
test
movsl
lods
mov
jno
into
fnstcw
in
or
inc
lret
add
out
lods
xchg
cmp
jns
push
sub
push
inc
mov
out
cmp
in
mov
fadd
stc
xlat
push
das
fmull
mov
imul
js
cmp
pop
push
lods
inc
js
pop
sbb
pop
inc
cmp
xchg
mov
addr16
fs
in
pop
fsub
sarl
aad
stc
out
loopne
dec
pusha
dec
inc
sbb
in
jg
fcomps
mov
mov
daa
rolb
push
push
mov
mov
lahf
sbb
das
sub
in
jae
sub
call
int3
jbe
inc
fsubr
in
adc
in
xchg
push
nop
mov
lea
mov
or
cmp
push
cmp
sahf
hlt
and
aaa
sti
pop
inc
mov
xor
ds
xor
cmp
add
adc
sti
and
mov
or
in
sub
sbb
adc
push
pop
js
mov
les
pop
lock
adc
cmp
jp
cmpsb
pop
push
cmpsb
lahf
adc
ret
mov
sbb
jae
inc
outsb
mov
rcll
inc
push
ss
repz
popa
push
sbb
dec
push
jbe
fbstp
sub
pushl
mov
dec
pusha
das
add
or
in
std
ret
pop
xlat
adc
xchg
xchg
cmp
xor
stos
jne
jg
mov
popw
orb
xor
jae
cmp
inc
push
sbb
mov
lea
add
jne
lods
adc
pop
push
cs
and
loope
jecxz
sti
pop
mov
roll
dec
inc
mov
jbe
cli
popa
jo
cwtl
aam
jge
xor
jb
lods
push
or
insl
outsb
scas
fidivl
test
jae
dec
aad
mov
sub
push
fisubl
add
outsb
mov
clc
sbb
sti
out
insl
mov
add
scas
dec
sub
mov
xor
mov
inc
jns
loopne
nop
sub
cmp
xchg
xchg
jo
pushf
lods
fisubrs
test
xor
aaa
in
fisubrs
int
xchg
jle
sub
ret
xor
and
mov
in
xchg
bound
rep
jle
shll
out
xor
outsb
mov
sarb
fdivrl
sbb
int3
jecxz
test
mov
in
mov
in
popa
xor
outsb
icebp
sub
aam
sub
adcl
mov
add
notl
aaa
push
cwtl
fld
mov
sub
xchg
push
xchg
call
out
in
lods
jns
subl
imul
hlt
mov
jmp
call
pusha
adc
xor
xlat
rorb
loopne
xchg
shrb
jbe
aam
out
popf
stos
lea
mov
shll
jnp
cld
mov
aaa
dec
pop
fcmove
sub
rcrl
xchg
cmc
imul
js
dec
inc
cs
movsl
test
clc
lcall
cmc
pop
mov
push
fnclex
jle
xchg
dec
add
stos
sti
cld
sbbl
ret
xlat
adcb
pop
repz
push
adc
sbb
mov
sbb
data16
xchg
shlb
rcr
leave
add
push
dec
movl
lods
mov
pop
mov
mov
insb
xchg
push
out
jnp
xchg
pushl
dec
adc
and
pop
adc
call
mov
mov
push
fcomp
data16
xchg
je
mov
sub
fnstcw
cmpsl
lret
imul
add
and
das
and
sbb
or
bound
xor
mov
imul
xor
sbb
pop
dec
in
jno
pushf
sbb
sbb
adc
jge
mov
stos
or
push
adc
test
inc
test
pop
dec
push
out
mov
icebp
xor
fbstp
enter
out
outsb
sbb
jnp
adc
dec
sbb
inc
movsb
lds
dec
mov
orb
cmp
jmp
cmc
cmc
sub
mov
rcr
cmpsb
cld
aas
ficomps
lea
lods
jmp
fsubs
add
xchg
shll
adcl
rolb
leave
lret
outsb
inc
leave
push
xlat
inc
mov
nop
pop
lcall
adc
xor
inc
movsl
mov
pop
adc
nop
decb
add
scas
cmp
xchg
or
movsl
das
sti
arpl
inc
bound
fsubs
iret
leave
and
data16
inc
mov
aas
rol
adc
popf
in
pop
insl
sbb
add
cmp
pop
jae
jecxz
sbb
lods
fstpt
jmp
pop
add
xchg
mov
movsb
ljmp
insb
imul
outsl
rcr
push
jg
jns
dec
negl
jbe
gs
pushf
mov
aas
je
ret
loop
jo
sbb
fisttpl
jl
or
pop
cmp
sbb
mov
push
pushf
add
dec
iret
daa
dec
dec
pop
pop
xchg
das
push
std
fnstcw
jns
mov
test
addr16
ret
xchg
jg
inc
cmp
scas
in
outsl
jae
repnz
insb
add
xchg
enter
mov
aad
std
pop
and
mov
insb
loopne
sub
cli
imul
pop
test
sub
jp
xchg
imul
and
mov
xchg
mov
cmp
sub
adc
dec
test
lret
add
inc
push
push
mov
sbb
cmp
int
mov
std
mov
fwait
xchg
mov
js
rcrb
dec
pop
push
push
lock
repz
and
inc
jne
hlt
rolb
dec
adc
test
int3
push
xor
mov
xor
jl
shl
aas
mov
subl
sbb
push
or
icebp
sbb
inc
sahf
cmpsl
mov
or
cmp
jb
fsubs
shlb
lcall
push
test
ret
cmp
lock
and
sbbb
or
and
repnz
inc
imul
xor
pusha
insl
je
loop
test
int
jns
cmp
sub
shlb
push
pop
insl
stos
sub
cmpl
loopne
add
mov
pop
push
xchg
jmp
xlat
xor
in
sub
stos
sub
pop
xchg
jne
push
sbb
movsb
imul
pop
inc
dec
xchg
call
adc
pop
sarb
sbb
cmp
div
xchg
inc
in
push
arpl
mov
mov
imul
ss
and
push
popf
iret
pop
arpl
mov
xor
in
inc
movb
mov
test
mov
enter
push
and
arpl
inc
enter
xchg
mov
fisubrs
push
add
vpshlb
cmc
inc
push
mov
dec
xchg
mov
push
clc
cmp
dec
mov
daa
ret
cmpsb
movsl
mov
cli
mov
and
pop
hlt
mov
rorl
cmp
scas
sub
je
sub
jle
dec
sarb
or
mov
xchg
aaa
jo
dec
lods
pop
aam
jo
xor
pop
jge
fs
fwait
and
sarb
xchg
adc
fsub
xchg
rolb
aaa
and
xor
push
int
mov
adc
lret
mov
sub
or
pop
dec
negl
jg
inc
fbld
outsl
jbe
jl
dec
fwait
mov
xorb
aad
lods
mov
movsl
clc
mov
mov
inc
aas
xor
sbb
mov
outsb
sub
cld
adc
mov
ljmp
inc
sub
ljmp
inc
into
scas
push
mov
cmp
inc
sub
mov
xor
sbb
pop
cmp
lcall
mov
iret
jmp
xor
adc
rorb
pushf
sub
mov
sub
cltd
je
cmc
jle
push
push
jno
call
fists
or
or
in
lret
fldl
mov
or
fildl
push
mov
je
cmpsl
sub
test
scas
push
inc
gs
mov
jnp
sub
into
sub
add
cmp
push
dec
loop
popf
out
loopne
pop
push
xchg
add
sahf
inc
repz
sahf
sar
ja
cmp
sbb
mov
dec
xor
sbb
shlb
insb
sbb
repnz
mov
in
jns
jmp
hlt
dec
xor
dec
push
push
nop
sarb
enter
pop
leave
cmp
push
or
jns
je
ljmp
inc
ja
mov
push
ds
insb
cmp
lret
loopne
mov
dec
inc
dec
mov
fs
cmp
std
dec
push
adcb
xchg
push
push
dec
stos
ja
pop
dec
adc
adc
pop
ftst
ss
jo
jo
inc
mov
shll
or
fldlg2
cmp
aam
aaa
push
fisttps
in
mov
jge
in
fildl
cmp
sbb
std
push
xlat
leavew
jns
jg
mov
xchg
pushf
add
jno
in
add
jne
adc
add
sub
and
and
sbb
sbb
xchg
adc
adc
shll
stos
pop
jle
sub
out
jecxz
insl
jb
ss
lds
xchg
shll
fildll
mov
adc
or
movl
mov
popa
lret
stc
shlb
pop
dec
push
and
cmpsl
mov
and
cwtl
sbb
add
add
sbb
packsswb
in
loop
cmp
or
and
fcoms
add
scas
xlat
or
lret
std
pusha
pop
xor
sub
in
mov
cmpsl
icebp
in
aas
add
les
ja
inc
inc
xchg
mov
pop
insb
insb
cmp
dec
lds
mov
xchg
dec
movsb
xor
and
or
fildl
push
test
pop
pop
jns
xor
mov
add
cltd
loopne
xlat
mov
cmpsb
cltd
sub
arpl
lret
xlat
xchg
pop
adc
xor
dec
stos
bound
xchg
cmp
add
ds
cs
cli
pop
dec
inc
push
push
mov
fxch
jo
mov
xchg
and
sbb
xchg
xchg
jp
or
imul
cmp
sbb
inc
ficomps
test
stos
addr16
push
xor
loopne
repz
test
pop
js
push
and
jne
cli
adc
mov
sub
dec
lods
fucom
bound
outsl
mov
stos
xor
mov
pop
rcrl
mov
outsb
pop
ja
lds
sarl
aam
xchg
test
mov
cmc
imul
mov
inc
xchg
push
stc
inc
cmc
push
cltd
add
dec
cmpsb
nop
lcall
jbe
aam
jae
es
adc
test
jb
popa
sarb
jne
out
push
outsb
std
insl
jecxz
dec
cmp
aam
cltd
and
cmpsb
imul
and
rorb
icebp
out
jae
pop
addr16
jno
sbb
dec
mov
psrad
sub
push
jl
lcall
test
rolb
out
movsb
adc
lock
adcl
pop
hlt
mov
es
int
jmp
and
and
xchg
inc
jno
and
mov
insl
pusha
arpl
enter
in
add
in
sbbb
xchg
push
outsl
fcmovu
adc
loope
cmpsb
sbb
jne
fwait
mov
dec
lods
loop
inc
cmpsb
cmp
sahf
repz
and
cmpsb
inc
jne
dec
call
ret
div
cld
xor
adc
sbb
cmp
mov
icebp
lock
jae
imul
push
mov
sub
inc
push
sahf
xlat
sub
fwait
mov
pushl
imulb
cs
adc
xor
cli
shll
mov
fs
cmc
dec
dec
testl
sahf
fisubl
jge
fwait
cld
mov
adc
sub
mov
movsb
popf
jno
fisubl
mov
int3
fiadds
lret
add
imul
imul
mov
fbld
and
outsb
sbb
insb
ljmp
and
mov
add
test
js
or
repz
adc
loope
clc
outsl
jecxz
dec
lods
cltd
inc
dec
or
push
js
jne
testb
push
and
lcall
pusha
sbb
imul
testb
fisttpl
mov
and
mov
mov
stos
xor
xchg
push
jg
mov
popf
xor
xchg
fiaddl
push
push
mov
push
insl
mov
lcall
lds
xor
fbld
xor
and
cmp
stos
mov
mov
inc
scas
inc
into
nop
sahf
out
and
lahf
sbb
xor
dec
scas
mov
cmp
rolb
pop
dec
jecxz
sbb
movhps
add
int
or
push
aaa
popa
push
or
xor
push
sbb
int3
insl
jb
cmp
xchg
dec
sbb
xchg
loope
or
push
mov
out
xor
xchg
test
push
idivl
fdivrl
cmp
pop
dec
mov
sbb
es
cmc
adc
cmpsb
cmp
xlat
cmpsl
mov
out
lret
or
iret
inc
and
inc
pop
notl
mov
dec
std
lret
cmp
movsl
test
pop
jle
das
mov
sub
push
cmc
into
cmp
frstor
dec
int
js
xchg
ficompl
add
fnstcw
jns
push
cltd
scas
out
pop
fisubl
fnstenv
push
orl
popa
or
lret
add
sarl
in
fnstenv
sbb
xlat
push
mov
nop
mov
iret
jno
xor
cmp
popa
jp
push
xchg
fisubl
dec
push
jmp
enter
cwtl
add
scas
movsl
daa
add
add
dec
and
loopne
out
jecxz
jb
xchg
push
jne
cmp
or
mov
xor
andl
xor
pop
mov
mov
je
lds
mov
test
cmp
arpl
inc
mov
xchg
inc
adc
lret
cltd
jbe
push
es
add
cmp
mov
dec
cmp
jle
loopne
repz
sbb
scas
iret
imul
or
or
and
cld
mov
sub
out
mov
sahf
and
daa
loope
adc
mov
in
mov
popf
inc
movd
lahf
or
xchg
pop
test
fs
cmpsb
ret
and
fsubrl
int3
xorl
test
mov
pop
popf
mov
adc
fwait
test
mov
lcall
call
inc
vmwrite
lea
test
xchg
inc
jnp
test
lds
push
xchg
ret
adc
mov
mov
stc
fisubrl
js
imul
mov
mov
or
fisubl
into
jb
mov
xchg
shl
shrl
sbb
stos
add
jg
ret
lods
mov
adc
fnstcw
mov
dec
xchg
dec
and
mov
add
inc
cmp
imul
xor
out
push
xor
sbb
adc
out
fmuls
push
cltd
andl
jge
into
popa
arpl
sbb
shr
in
fidivs
fisubs
test
jns
and
dec
mov
dec
dec
and
inc
push
pop
mov
jne
sbb
xchg
les
jnp
fidivrs
mov
enter
or
test
dec
lret
mov
cmc
test
ret
jmp
lcall
insl
mov
ss
push
push
insb
lret
ficomps
or
or
fdivrs
aaa
imul
loop
adc
insl
shl
mov
loop
imulb
test
and
sbbl
cmc
cld
xchg
pop
loopne
jo
push
sti
inc
outsl
ja
mov
add
cmpl
clc
sub
repnz
out
push
jmp
sub
and
insl
pushf
jno
aas
xchg
dec
clc
aad
lods
cmp
scas
xchg
xlat
add
mov
inc
sub
push
jg
or
adc
imul
pushf
mov
dec
pop
mov
inc
dec
in
inc
xchg
cmp
adc
cmp
jnp
adc
dec
fnstsw
mov
cmp
mov
test
jmp
xchg
stc
pushf
aad
or
mov
ljmp
in
fst
pop
adc
xor
add
mov
mov
pop
mov
mov
mov
js
mov
mov
roll
or
cltd
push
js
xor
ja
push
adc
or
outsb
cmp
js
imul
cmp
movsl
or
jge
ljmp
add
mov
push
out
cmp
jle
xor
subl
dec
xor
mov
lret
rcr
mov
lcall
add
outsb
inc
mov
jl
jno
ss
mov
xorb
fucomp
xor
lret
cld
jl
cmp
js
and
xchg
adc
sbb
scas
loope
jbe
addr16
inc
inc
pop
adc
or
aam
xor
imul
and
adc
and
push
push
sbb
repz
lods
mov
iret
mov
lds
mov
hlt
aas
mov
hlt
mov
scas
scas
add
call
ljmp
lds
into
mov
xor
es
loope
sbb
sbb
pop
fisttpll
or
pusha
adc
leave
xchg
stos
cmp
incl
into
ljmp
and
sub
out
xor
gs
repnz
pop
cmp
popf
sbb
inc
das
hlt
fstps
jp
cmc
push
nop
outsb
mov
mov
mov
mov
xchg
ja
adc
mov
movsl
movsb
decl
and
push
addl
in
cmp
cmpb
sub
push
scas
and
das
pop
imulb
data16
scas
inc
xchg
push
add
push
inc
incb
fdivrs
or
call
mov
and
pop
xlat
push
adcb
sbb
push
scas
ljmp
icebp
mov
xlat
std
xor
or
sti
inc
mov
jg
lcall
stos
mov
jo
jl
sbb
add
ss
jns
lods
jae
dec
fnstcw
sub
mov
adc
xchg
ret
push
jne
push
pop
mov
jnp
lods
xor
mov
lcall
adcb
fisttpl
xchg
in
cwtl
inc
jp
mov
enter
sbb
mov
mov
jl
orb
sub
rol
movsb
jnp
push
mov
sub
jecxz
cmpsl
mov
fs
mov
fwait
enter
lock
aad
cmp
movl
fldt
jae
mov
out
push
sub
ja
dec
movsb
cmp
divb
inc
mov
cmp
cmc
dec
mov
call
mov
pop
imulb
insb
dec
or
movsl
iret
lcall
push
xorl
outsl
fldln2
or
in
pop
inc
setb
sbb
addr16
xchg
mov
js
stos
call
fistpll
clc
xchg
sub
jg
aas
cmpsb
or
jl
xor
xor
mov
xor
faddl
xchg
and
pop
xor
adc
mov
iret
sub
mov
jb
cwtl
mov
mov
push
repnz
aad
mov
jnp
icebp
or
mov
lret
aam
lahf
add
dec
in
push
outsl
sub
and
aad
ret
mov
jmp
jnp
add
aam
jns
mov
adc
mov
loopne
orl
mov
add
mov
sarb
jl
fmull
add
gs
xlat
scas
adc
sahf
mov
xchg
xlat
xor
test
xchg
leave
test
jp
fcmovnu
add
xchg
jnp
rcrb
mov
outsl
dec
cltd
sub
mov
add
adc
cld
jae
ds
or
mov
pop
mov
push
push
dec
or
pop
mov
push
mov
les
add
not
bound
scas
and
jp
fs
cmpsb
xor
push
shrl
enter
xchg
mov
add
dec
mov
leave
pop
mov
rcrb
xchg
push
sbb
leave
xchg
subb
adc
push
dec
loopne
mov
scas
push
inc
inc
outsb
sub
jnp
xchg
adc
fcmovne
out
dec
imul
sti
cltd
aad
ss
pusha
cmp
das
lds
push
lods
cmc
sbb
popf
rolb
mov
xchg
das
outsl
cmp
sbb
push
cli
aaa
cmp
shll
scas
inc
in
xchg
andl
inc
dec
push
adc
dec
xor
std
int3
cli
cmovb
lock
insb
mov
bound
ret
xchg
sti
inc
add
sbb
mov
mov
dec
sub
sub
push
xchg
adc
das
je
aaa
xchg
push
xlat
jae
and
inc
mov
pop
mov
pop
push
sub
ret
pop
gs
mov
dec
fwait
mov
pushf
cmp
scas
dec
lock
inc
mov
dec
mov
imul
cld
cld
sbb
and
mov
xor
enter
cmp
add
push
push
lret
cs
and
sbb
dec
push
sub
lahf
and
dec
shrl
imul
inc
cmc
pushf
xor
dec
into
test
sbb
hlt
imul
pop
cmp
sbb
pop
cmpsb
push
jns
fbstp
dec
cld
jl
mov
subl
push
nop
std
jo
jge
xor
lock
out
or
addr16
inc
daa
rorl
cmp
sbb
inc
ja
repnz
adc
mov
mov
sbb
rcl
mov
cmp
mov
insl
or
popf
xchg
loop
xlat
sbb
sub
cltd
jno
insb
ds
jl
add
jl
pop
jno
iret
popa
rep
sbb
imul
daa
in
mov
pop
xchg
sbb
inc
add
jae
rorb
gs
push
sub
jl
lods
xlat
fld
mov
movsl
inc
test
pop
test
icebp
cmpsl
jnp
sbb
insl
mov
cmpsb
jbe
xchg
aam
add
data16
push
call
xlat
inc
mov
add
mov
push
sub
addb
cmp
mov
es
jl
pop
test
cmp
lret
mov
int3
add
push
ljmp
std
cmp
sbb
xchg
aas
inc
sbb
pop
dec
adc
mov
pusha
insb
scas
into
sub
mov
xor
orl
addb
out
scas
clc
pop
cmpsb
fadd
push
ja
jecxz
jl
ror
sub
inc
pushf
loope
andb
ja
or
dec
jnp
call
repnz
xor
repnz
dec
sahf
insb
mov
and
ret
add
pop
loop
stc
sub
mov
xor
xchg
or
and
sar
add
pop
insl
adc
gs
in
fdivl
int3
daa
mov
mov
or
aam
push
pop
leave
push
mov
adcb
mov
xor
or
sbb
jnp
jbe
pop
sub
pop
sub
jb
notl
aaa
sbb
xor
in
pop
lahf
fxam
out
push
add
and
lcall
mov
out
jmp
stc
out
add
jecxz
or
pop
xchg
inc
cmc
das
shlb
adc
outsb
xchg
into
inc
jl
test
dec
aas
rcrl
xor
movsl
scas
pop
loope
lods
inc
sub
mov
imul
jl
rorb
pushf
mov
ficoml
test
mov
jp
nop
das
mov
aad
cmp
out
pop
dec
nop
ljmp
adc
cmpsl
dec
jno
cmp
sarl
jnp,pt
xchg
and
sarl
sub
and
mov
repnz
enter
call
sub
mov
push
sbb
inc
xor
pop
push
sub
mov
pop
add
ret
into
out
std
cmp
mov
fnstenv
and
ja
int
cmp
pop
int3
add
int3
xchg
jl
fisttpll
sub
fidivrs
movsb
rcrl
xchg
xchg
cmp
mov
xchg
cmp
pop
sbbl
adc
negl
aam
ret
mov
movsb
testb
flds
sub
lret
gs
imulb
pop
es
jecxz
jno
dec
test
mov
add
daa
xlat
mov
inc
pusha
and
sub
adc
sbb
inc
fwait
mov
lcall
js
aam
xor
lea
jmp
ror
adc
xor
std
jle
push
cmp
daa
ficomps
push
mov
and
adcb
pusha
mov
repnz
stos
out
cld
divb
mulb
xor
je
aad
jb
in
mov
js
ja
xorl
mov
ds
stos
mov
push
imul
cmp
or
lods
jge
pop
rcrb
jl
sbb
mov
std
test
adc
dec
test
out
fisubrl
pop
xchg
stos
pop
mov
std
add
xchg
jmp
or
fcomps
pop
push
push
mov
ret
cmp
lret
fimuls
add
sbb
xchg
cs
push
mov
adc
or
pop
inc
inc
xchg
sbb
fidivs
test
repz
clc
sub
movsl
xchg
xchg
fidivrs
dec
out
negb
mov
mov
les
dec
jae
mov
sub
cmp
lea
out
mov
stc
sub
cmpsb
mov
cmp
sbb
cs
into
add
cmpsb
jp
push
filds
mov
dec
repz
pop
sbb
and
or
push
and
stos
mov
stos
dec
pop
inc
sarb
test
or
mov
inc
lret
sbb
fwait
push
adc
dec
test
push
adc
pop
sbb
cmp
ja
push
test
adc
add
repz
and
hlt
adc
cwtl
xchg
adc
mov
mov
dec
out
sub
dec
insl
push
push
aam
testb
rorb
jb
dec
pop
push
push
sarl
es
sahf
jbe
jne
dec
adc
mov
pop
adc
gs
xor
lock
xor
stos
mov
push
or
push
fmul
fbstp
out
punpcklbw
dec
dec
js
dec
lock
mov
mov
push
and
dec
mov
pop
dec
pop
jg
jnp
or
je
push
push
inc
sti
clc
jle
cmpsb
dec
scas
js
or
push
hlt
lods
mov
adc
mulb
test
push
aam
xchg
inc
mov
mov
sub
pop
cmpsb
hlt
rcll
scas
mov
jmp
adc
mov
jge
pop
cmp
or
sub
push
xchg
adc
ljmp
or
ret
mov
xor
mov
xlat
jns
outsb
mov
repz
ds
outsl
sub
or
es
ss
push
push
xor
pop
sbb
push
movsb
mov
out
xor
cld
mov
cmc
dec
jl
es
mov
into
xchg
jg
scas
in
xor
in
cmp
inc
jge
call
vmovq
loope
push
ret
xchg
leave
and
cli
std
pop
push
lock
or
fmuls
lcall
inc
fnsave
lock
lret
arpl
push
mov
sbb
lods
xor
dec
enter
push
inc
cmp
mov
sbb
xor
loopne
cwtl
imul
out
iret
fldl2t
sbb
dec
movsl
not
mov
shrb
adc
popa
and
inc
pop
sub
fcoml
xlat
pop
sbb
mov
fwait
daa
dec
pop
mov
arpl
mov
mov
mov
jbe
ror
repnz
xchg
jb
xchg
addr16
rclb
add
call
mov
imul
clc
stc
push
imul
inc
imul
and
clc
or
insl
outsl
xor
cld
shrb
cld
sub
stos
repnz
dec
mov
jae
movsb
aad
sarl
mov
orb
jae
mov
mov
inc
pop
xchg
idivb
dec
mov
insl
mov
sbb
jge
mov
outsl
or
imul
ds
cltd
cli
lret
nop
jno
fdivr
add
dec
mov
xorb
sub
inc
cmp
sub
and
cmp
testb
xchg
ljmp
lock
leave
adc
mov
aad
dec
ret
mov
xor
mov
cmp
push
dec
xor
add
out
xor
shlb
adc
out
mov
lahf
scas
cwtl
push
insl
xor
xor
mov
xchg
cmpsl
pop
daa
out
outsl
sbb
les
xchg
and
xorb
dec
out
cltd
into
lret
mov
xchg
aas
sbb
int3
int3
shrl
and
sub
rol
scas
sti
xchg
cmp
sub
mov
or
lahf
sub
xchg
pop
dec
lods
adc
das
jno
or
decl
cmp
cmp
ret
fdivrl
xor
jbe
iret
cmpsb
push
loop
out
xchg
jge
pusha
scas
xor
daa
ret
pop
mov
inc
mov
mov
cmpsb
bound
in
lock
sbb
hlt
jge
pop
mov
and
sarb
mov
stos
add
cmp
nop
sti
or
mov
in
xor
sbb
and
dec
leave
sbb
inc
sbb
lds
cld
xor
xchg
ret
and
mov
aad
test
push
sub
aad
mov
out
leave
daa
cmp
call
cmp
and
sbb
or
enter
cld
xchg
adc
adc
lret
pop
xor
shr
mov
mov
outsl
cli
orps
ficompl
repnz
push
daa
test
sub
imul
lcall
les
sbb
adc
push
outsl
mov
test
and
fwait
aam
jge
dec
int
leave
icebp
out
sti
mov
push
lods
mov
rolb
and
jnp
in
jl
lds
sahf
push
adc
pop
jnp
into
push
arpl
xchg
jne
mov
mov
ljmp
cwtl
mov
cli
out
into
jae
inc
jmp
cmpsb
mov
push
cmp
clc
sub
push
imul
sbb
andb
mov
cld
daa
into
mov
inc
cmp
test
rclb
cmc
je
or
call
orps
sub
inc
mov
xchg
das
mov
dec
jbe
push
sti
fprem1
mov
outsl
adc
stc
test
jle
cli
jne
pop
int3
cmp
ja
arpl
push
in
mov
or
dec
jle
push
mov
xlat
mov
int3
jecxz
add
and
aam
adcl
sbb
cmpsb
xchg
scas
inc
sub
fdivr
fiadds
push
xor
sbb
jl
inc
xchg
aas
addl
stos
les
ss
clc
sbb
mov
jbe
daa
pop
jl
lods
xor
cmc
cld
stos
lods
jb
pop
popf
jae
call
cltd
jp
shlb
xor
sub
aam
insl
adc
scas
arpl
dec
inc
test
pop
sub
dec
mov
xor
in
jp
clc
push
adcb
fs
data16
cmp
and
push
push
pop
pop
inc
jp
dec
jecxz
xchg
sbb
mov
popa
dec
xor
xchg
out
pop
lods
add
mov
inc
dec
push
sub
mov
xor
cltd
fstp
or
pusha
lahf
dec
in
in
das
imul
rcrb
test
leave
push
or
test
lret
jbe
shl
inc
push
cmp
inc
xor
fiaddl
or
call
jb
iret
shrl
test
lods
mov
push
repz
lahf
dec
push
lret
outsb
pop
fdivrs
ds
push
dec
push
cmp
popa
aam
dec
lcall
xchg
jg
pop
xchg
inc
repz
push
mov
pop
or
rorl
imul
pop
mov
cmc
sub
loop
das
adc
adc
repz
xchg
imul
jp
mov
adc
pushf
clc
or
imul
cld
sub
in
fadds
and
adc
mov
ja
gs
mov
jae
cmp
sahf
jns
loope
ret
jns
ds
push
dec
call
test
add
ss
dec
daa
add
adc
fdiv
call
ret
gs
push
pop
je
fdivr
push
mov
inc
shrb
call
dec
xchg
lcall
pusha
or
cmp
cmp
push
xor
insl
mov
sub
jnp
into
inc
pop
mov
das
into
mov
ret
push
fisttps
outsl
ljmp
aas
jae
jle
js
pop
mov
adc
inc
cmpl
das
push
out
jle
ja
dec
inc
ret
mov
jecxz
sbb
in
addr16
movsb
sbb
sbb
lret
dec
xchg
cltd
ljmp
pop
jb
cmp
mov
cmp
push
fnstenv
inc
pop
faddl
outsb
scas
adc
bound
aam
fdivs
add
test
inc
jg
rcll
jae
clc
lcall
push
mov
xchg
mov
xchg
leave
shlb
movups
repz
fmull
push
imul
fistl
dec
lock
jle
and
fwait
or
mov
mov
arpl
je
arpl
loop
movsl
into
fldcw
stc
jae
adc
pop
add
or
cmp
ljmp
int3
fmull
sti
stos
pop
mov
cltd
mov
insl
cmp
icebp
fcomps
cld
push
mov
ret
mov
lahf
dec
lds
aad
jnp
iret
addr16
pop
lods
nop
subl
aam
inc
sbb
int3
inc
sbb
andl
into
mov
cmp
push
cmp
in
add
in
mov
cmpsb
fnstenv
push
popf
out
int3
xchg
fisubs
movsl
xor
mov
lods
lahf
xor
shll
fnstsw
aas
lret
pop
push
jmp
ss
pop
cmp
call
repnz
repz
sub
ja
jge
pop
xchg
cmp
jae
mov
imul
xchg
sbb
adc
repz
enter
sti
test
stos
dec
xor
ja
push
enter
lcall
push
loope
loopne
es
lods
xchg
adc
movsb
out
and
jnp
jbe
icebp
cmp
roll
xchg
mov
xor
lock
xor
repz
and
jle
jno
test
adc
scas
cmc
and
xor
push
mov
xor
addb
sbb
jmp
lds
int3
jne
rcr
push
sub
divb
xchg
je
je
mov
mov
insb
mov
aas
idivb
and
xchg
testb
sub
and
xor
pop
mov
adc
jno
loop
andb
test
mov
arpl
dec
pop
fsubs
xor
in
lea
xchg
pop
cmp
and
fisubl
push
mov
xor
mov
jnp
aam
jns
sub
insl
test
xor
js
test
dec
mov
into
fnstsw
sub
jnp
int3
and
sahf
or
jnp
rolb
jnp
pop
xor
das
pop
mov
and
mov
sub
loope
rclb
jge
les
mov
sub
mov
mov
ret
dec
pop
jg
fidivrs
daa
add
cmp
call
pusha
push
or
push
add
jmp
inc
mov
push
or
jae
sub
popa
xor
lahf
sti
xlat
or
xchg
sub
dec
popf
fadds
shrb
inc
mov
insl
xchg
jecxz
popf
push
pop
cs
out
adcb
lcall
andb
or
mov
inc
xor
xchg
push
sub
xchg
int3
pop
aam
das
sub
or
cwtl
es
mov
mov
cmpsb
rcrl
dec
orb
insl
nop
in
xor
incb
fmuls
push
jne
adcb
mov
push
xchg
aas
popf
les
lds
data16
mulb
jb
popf
loopne
insl
out
fdivs
dec
loope
lcall
inc
sbb
lcall
imul
xchg
cmp
repz
mov
std
or
ret
mov
pop
filds
and
adc
mov
scas
xor
bound
jmp
cmpsl
enter
fsubr
or
push
sbb
cld
int
mov
ret
sub
sbb
inc
xchg
cmpsl
xchg
imul
pop
test
jno
test
pop
cwtl
decb
or
insb
and
mov
xchg
stos
fisttps
clc
sub
mulb
cmp
mov
sbb
jae
xlat
inc
or
sbb
test
shl
loope
jle
push
test
push
sbb
fmuls
ljmp
data16
sqrtps
push
outsl
xchg
mov
jl
push
inc
out
repnz
pop
lret
lods
push
pop
test
rorb
insb
ljmp
inc
or
rcl
lds
insl
imul
mov
inc
xor
repz
mov
ljmp
jmp
gs
cwtl
pop
mov
jb
iret
mov
push
dec
or
mov
mov
leave
aam
dec
xor
mov
mov
mov
push
pop
xchg
dec
add
movsl
in
xlat
cmp
adc
das
out
or
pop
repnz
test
pop
pop
fists
shr
pushf
insl
inc
xorl
xor
sahf
adc
les
rol
and
imul
lods
xor
push
jne
mov
push
movsl
movsl
inc
stos
and
loope
sbb
out
sub
nop
pop
mov
popa
or
add
shrb
int3
mov
popf
das
cltd
pushf
int3
and
std
das
ficoms
inc
mov
data16
push
insl
movsl
push
adc
push
mov
adc
jge
push
outsl
pop
mov
push
cmp
adc
xor
mov
jg
mov
out
fcoml
cmp
rorb
inc
mov
jnp
leave
cmpsb
jmp
into
adc
int
lret
adcl
cwtl
les
movsl
aam
add
or
adc
mov
mov
push
testb
push
jo
sbb
enter
imul
inc
adc
das
inc
enter
xchg
sub
fcmovbe
jo
push
mov
testl
insl
or
stc
cmp
rorl
test
fs
push
pusha
xchg
call
aaa
xchg
inc
mov
idivb
movsl
xor
sbb
ror
icebp
ss
adc
add
leave
cltd
mov
mov
mov
sbb
mov
cmp
in
test
inc
lods
add
test
pop
inc
out
jle
rolb
push
mov
sub
mov
mov
xlat
popa
stos
or
xor
mov
bnd
sbb
movsl
or
outsb
xor
cwtl
xor
insb
push
stos
popa
icebp
decb
adc
int
dec
movsb
dec
sbb
mov
push
sbb
sbb
insb
sub
cld
fstl
mov
lret
mov
in
and
sub
cmp
and
mov
mov
pop
scas
push
inc
jp
xchg
xchg
iret
std
or
and
mov
push
cmp
dec
mov
or
cmp
pusha
test
in
out
cmp
sbb
int
adc
xlat
xchg
and
add
xor
movsb
sub
sti
cmpl
loopne
in
jle
jmp
cmp
cmp
xor
repnz
push
rcll
xor
jg
fstl
shr
movsb
dec
cli
dec
or
jmp
mov
in
jecxz
out
adc
pop
jno
mov
stos
sub
and
jmp
sub
imul
enter
cltd
adc
or
dec
push
jmp
scas
fisttpll
mov
xor
test
scas
inc
push
sub
inc
adc
loop
push
jle
push
shl
lods
inc
mov
push
fidivrl
outsl
cmp
dec
pop
clc
mov
loope
hlt
mov
scas
testb
and
aad
cltd
mov
cmpsl
push
sti
vorpd
je
and
xchg
push
jbe
loop
les
fldenv
test
lods
cld
adc
sbb
sahf
je
mov
push
pusha
cs
pusha
out
ret
xlat
cld
int3
jb
sub
or
bnd
ret
repz
out
rcll
cli
jo
sbb
jl
inc
andb
xor
mov
arpl
adc
cmpl
sub
test
push
leave
inc
add
daa
pop
push
orb
dec
jmp
inc
out
inc
test
pop
test
push
pop
xchg
xchg
sbb
movsb
sbb
adc
sbb
repnz
rclb
loope
xor
pop
mov
popa
mov
cs
fiadds
sub
adcl
xor
pop
movsb
test
fcoml
push
and
loop
fistpl
pop
or
mov
mov
test
cwtl
out
cli
bound
xchg
lret
and
fimuls
mov
add
adc
xchg
fldcw
jle
je
fwait
insb
adc
les
int
xor
cli
pusha
icebp
les
into
jmp
in
jge
cmp
mov
ja
lcall
lcall
jmp
push
call
add
pop
and
imul
xchg
pop
subb
pop
and
hlt
fcompl
imul
or
jae
jae
inc
lret
dec
fmul
pop
cltd
xchg
mov
data16
stos
push
insl
pop
push
dec
pop
cmp
mov
inc
jns
jp
repnz
mov
pop
xchg
sbb
xchg
jae
jnp
mov
into
movsl
fwait
inc
sahf
test
inc
xchg
xchg
inc
xchg
add
inc
or
pop
jo
mov
adc
cli
adc
rcr
lahf
popa
cmpsb
sbb
test
inc
sbb
jl
call
lahf
aaa
inc
test
fwait
sbb
aad
mov
cmp
jmp
and
push
adc
push
dec
fdivl
xchg
xchg
inc
add
cli
orl
xchg
and
aad
pop
or
dec
in
xor
xchg
xchg
es
lock
dec
mov
cltd
sbbb
xchg
push
push
ja
inc
sarb
or
popf
sub
les
lock
iret
scas
xor
cmc
call
jge
fistpll
jno
sbb
fcomps
dec
dec
sub
cmp
mov
adc
mov
xor
out
pop
xchg
sub
or
mov
jbe
xor
mov
nop
mov
xchg
pop
cli
fldl
add
dec
scas
into
jne
jns
lret
gs
or
add
xchg
aas
jns
aad
adc
push
push
xchg
push
jbe
imul
push
add
fistpll
mov
sub
xchg
cmp
xchg
dec
add
movsb
cmp
test
add
popf
shl
rorl
outsl
les
das
fstpl
xchg
imul
jmp
jl
scas
es
fidivl
dec
bound
inc
pop
cmpsl
pop
push
sub
test
data16
fbstp
test
cmc
inc
inc
imul
fildl
add
frstor
test
outsl
lods
mov
lret
xor
adc
adc
inc
lret
or
cmp
es
push
fnstcw
testl
movsl
sub
int3
inc
sti
dec
jg
sbb
scas
pop
push
lahf
call
fiaddl
push
leave
mov
pop
insb
inc
out
scas
mov
xor
mov
mov
mov
pop
out
dec
leave
add
xrelease
cwtl
mov
jp
scas
push
push
mov
dec
sub
lahf
jae
inc
sbb
imul
xor
notw
repnz
dec
movsb
stc
sbb
xor
out
lds
stc
mov
xorl
inc
mov
dec
or
push
leave
push
jl
stos
dec
popa
sbb
rcll
outsb
aaa
cmpsl
mov
mov
je
or
xlat
nop
lds
push
cwtl
iret
xchg
adc
inc
jo
es
stos
inc
pop
mov
out
out
add
sub
imul
dec
push
pop
mov
fstps
and
scas
pop
xchg
push
fwait
repz
ficompl
add
xlat
xor
rcll
mov
and
mov
es
ficompl
mov
into
inc
jbe
ror
arpl
dec
sbb
fsubl
je
lea
jbe
jle
inc
mov
cmp
fmull
jns
mov
cmpsl
add
ds
push
lods
mov
mov
xlat
int3
lods
jmp
pop
lods
mov
adc
inc
cmp
push
rcll
call
xchg
push
adc
xor
dec
push
mov
xchg
sub
sti
adc
jmp
jne
aad
jg
mov
or
fdivr
shll
add
and
jno
lock
dec
ret
and
sti
ret
mov
mov
inc
push
cs
std
int3
jl
jns
push
das
inc
dec
cmp
out
jmp
out
mov
repnz
xchg
push
lods
loopne
mov
mov
test
cmp
in
adc
cwtl
addr16
pop
enter
jnp
mull
in
jns
xor
iret
add
mov
arpl
mov
cmc
and
repz
ret
popf
inc
addr16
ficompl
movsl
mov
repz
jno
pop
pop
or
xchg
lret
dec
ret
mov
xchg
shrl
into
adc
nop
pop
lds
jg,pt
cmp
incb
or
jge
xor
pop
in
xchg
adc
pop
mov
mov
icebp
data16
aas
test
out
jg
xor
cmp
aam
push
cmpsl
pop
stc
loopne
sub
in
pop
js
inc
bound
mov
cltd
cmpsb
pop
lea
xchg
pop
insl
test
into
dec
in
test
iret
add
lahf
xchg
addr16
pusha
xchg
stos
ja
test
test
push
adc
xor
in
fstps
cmp
fst
stc
add
push
jecxz
popa
mov
popf
xchg
iret
ljmp
pop
push
das
sub
dec
pop
mov
es
test
lret
push
arpl
fnstsw
outsb
adc
mov
fstpl
pop
xchg
xor
bound
stc
clc
fiaddl
push
ljmp
jecxz
mov
xchg
push
cmp
dec
jmp
lahf
call
in
push
sti
insb
add
add
xorb
out
lds
hlt
ficoms
jb
pop
outsb
sarl
xchg
mov
jb
call
cmc
out
push
adc
cmp
lret
int3
mov
sbb
dec
outsl
loope
xor
cmp
adc
scas
testb
adc
sbb
bnd
jg
mov
xor
divl
jbe
outsl
clc
push
sub
xchg
cmpsl
sub
mov
jbe
iret
aad
aaa
stc
mov
gs
into
adc
cmpl
xchg
sbb
mov
xchg
jo
stos
lret
lahf
inc
push
xor
test
cmp
adc
fsubs
push
mov
cltd
inc
jnp
pop
mov
ja
test
sbb
xchg
sbb
mov
push
xchg
xchg
bound
lret
sub
divl
pop
shrd
inc
sbb
xchg
rol
mov
mov
mov
test
mov
jb
fwait
enter
mov
push
dec
xchg
cld
push
push
push
fsub
xor
mov
les
mov
mov
nop
mov
shrb
pop
shll
jno
test
fimuls
stos
lcall
divb
bound
push
adc
rolb
cmp
fistl
mov
and
xchg
in
push
xor
mov
mov
loop
insb
or
int3
outsl
mov
in
cltd
or
cmp
mov
sub
mov
push
rorb
mov
mov
shlb
ret
mov
jl
mov
arpl
mov
cwtl
and
xor
pop
and
inc
lret
mov
cmpsb
cld
mov
hlt
push
test
mov
cmc
mov
pop
or
idivb
jecxz
popf
cmp
mov
push
mov
data16
ret
or
in
jmp
sub
fidivs
push
pop
sub
mov
insl
sub
push
ds
cmp
ds
pop
push
push
aad
adc
jp
ret
jle
cmp
sbb
cwtl
sahf
mov
cmp
mov
or
in
mov
xchg
adc
gs
jne
sti
adc
imul
cmp
sub
enter
inc
add
pop
out
out
mov
mulb
lods
fistps
lea
ficompl
int3
dec
lret
dec
sub
hlt
xor
and
movsl
cmp
pushf
ljmp
fstpl
aad
mov
mov
scas
cmp
inc
test
aam
cwtl
out
lret
jp
leave
pop
mov
shlb
mov
movsb
pop
and
scas
push
test
pop
loopne
mov
lods
and
dec
incb
dec
sub
das
adc
push
scas
xor
imul
nop
in
add
ret
push
shl
adc
mov
add
sbb
lds
ds
cmpsl
push
cmpsl
or
jnp
pop
adc
mov
pop
imul
sahf
stos
in
addr16
jne
add
cltd
jnp
movsl
mov
mov
gs
scas
sbb
negl
test
pop
into
mov
nop
data16
mov
jge
stc
dec
aam
cmp
mov
ljmp
in
sbb
loopne
push
sti
xchg
mov
mov
xor
out
inc
fwait
es
mov
test
mov
pop
pop
fld
jnp
jbe
push
jge
dec
idivb
bswap
and
dec
cltd
test
pop
insl
jmp
movsb
push
mov
dec
cmpsl
xor
js
or
mov
jp
idivl
mov
sub
test
rolb
daa
test
and
sbbl
xchg
loopne
and
pop
jns
flds
ret
aaa
scas
push
cli
lret
test
mov
scas
out
leave
into
stos
fnsave
nop
inc
push
repz
add
or
mov
clc
cld
and
sub
in
rorb
ret
sub
xor
add
test
mov
cli
mov
aam
xor
push
outsl
daa
add
std
mov
fstl
mov
inc
cmp
xor
mov
jge
cmp
test
or
and
xor
scas
jp
je
xchg
push
sbb
adc
pop
mov
dec
jecxz
mov
add
mov
mov
out
jbe
adc
es
adc
mov
adc
sub
addb
xor
clc
int3
dec
test
push
aam
aad
sbbl
aas
adc
mov
dec
andb
dec
jb
pop
or
adc
loop
pop
mov
push
ret
in
stos
bound
lods
jl
pusha
bound
fs
lahf
adc
mov
in
xor
rcl
popf
mov
lock
inc
cmpsl
hlt
mov
pusha
xchg
cmp
lret
pop
cmpl
int3
pusha
movsb
int
roll
in
add
adc
hlt
mov
jno
pop
adc
testb
mov
shlb
mov
dec
scas
nop
sub
iret
lahf
mov
nop
push
lret
imul
inc
mov
ss
and
or
push
and
shlb
mov
mov
stos
sahf
push
rcpps
pop
in
or
and
ja
ret
sub
clac
loop
adc
shll
xchg
bound
bound
inc
push
push
adc
inc
sbb
push
jae
and
ja
push
je
sub
xlat
test
pushf
movsb
xor
jmp
mov
pop
xor
pusha
xchg
sub
bound
xor
fs
xor
fldt
mov
adc
out
cmpsb
mov
and
mov
cmp
das
out
jle
mov
xchg
lret
mov
or
sub
mov
iret
std
mov
pop
ljmp
mov
jnp
mov
imul
and
fnstcw
lret
mov
clc
inc
fs
add
dec
cmpsl
int3
stos
outsl
mov
enter
ret
cmp
loop
lret
add
xor
add
or
add
gs
mov
pusha
ds
jecxz
icebp
stc
lock
aad
jl
add
mov
aas
mov
test
cld
push
xchg
inc
sub
cmp
ljmp
jnp
mov
lahf
movsb
mov
test
movsl
xor
push
mov
out
pop
sub
mov
xchg
les
pusha
fwait
mov
clc
and
xor
xchg
sub
inc
push
nop
xor
and
mov
xchg
mov
mov
stos
arpl
dec
mov
pop
xchg
ss
mov
or
cmpsl
movsl
out
jl
fldcw
add
mov
cmp
or
cmp
add
loope
push
sahf
push
adc
test
push
mov
and
xchg
xor
cmpsb
frstor
call
push
mov
sbb
addl
mov
das
jae
adc
std
cmp
push
cmp
push
into
push
sbb
sbb
push
movsb
and
mov
push
test
cltd
bound
repz
inc
push
xchg
or
push
push
fldcw
aaa
je
pop
push
in
loopne
fimull
add
stos
sbb
and
mov
mov
sbb
xorl
cmpsb
dec
out
mov
or
push
sub
pop
jmp
xchg
dec
xchg
jg
loop
and
push
or
pusha
out
stos
add
mov
xchg
addb
mov
push
icebp
ret
sub
inc
ret
sub
js
sbb
andl
call
mov
jmp
or
repz
test
push
dec
movsl
test
addr16
in
subb
ficoml
sub
push
mov
jmp
push
std
into
pop
repz
ss
jno
in
ret
icebp
inc
mov
and
pusha
jl
pop
cmp
sbb
scas
cld
mov
jg
sub
test
cmp
dec
mov
insb
pop
sbb
inc
out
pop
lret
test
xor
jp
cmp
clc
mov
inc
stos
push
sub
sbb
ror
test
mov
lret
cmp
adc
mov
loop
fisubs
ret
push
stos
mov
push
or
in
pushf
test
clc
out
xchg
into
es
inc
scas
jl
mov
sbb
jle
ffreep
jl
int3
ret
in
and
adcb
push
outsb
inc
ret
dec
imul
pop
or
sub
xor
mov
lds
js
orb
popa
fsubl
xchg
mov
push
ljmp
out
popa
mov
enter
mov
cs
cmc
push
into
mov
fadds
sub
test
outsb
ja
pop
pusha
std
mov
cmp
cli
scas
mov
ljmp
push
in
sub
xlat
popa
sahf
pop
cmp
sub
adc
ret
mov
iret
lahf
mov
out
mov
movsb
rcrb
adc
mov
mov
sbb
arpl
xor
ds
xchg
add
sbb
lock
adc
adc
shll
into
leave
jle
ds
ficomps
adc
pop
sub
inc
or
add
addl
dec
aam
cmc
call
dec
insl
lahf
std
xor
xor
sub
pop
adc
inc
mov
or
std
jne
pop
add
pushf
push
loop
jp
loop
add
jne
and
rcrl
jnp
lds
dec
push
push
sbb
nopl
pop
dec
xor
enter
xor
pop
inc
push
push
adc
imul
mov
jmp
cmp
push
shrb
lods
std
pop
idivl
out
mov
cmp
adc
fistpl
xchg
and
dec
shll
push
dec
int
xchg
inc
dec
cltd
gs
pusha
and
ret
mov
sbb
and
in
inc
lcall
pop
outsb
inc
jo
dec
jbe
dec
mov
jo
mov
ds
jmp
scas
imul
test
daa
outsl
sahf
pop
mov
jbe
in
pop
lods
mov
xchg
ret
or
lret
and
rcrb
shlb
movsl
fsubrl
mov
xchg
fmulp
aad
aaa
jmp
jne
dec
xchg
test
jge
out
iret
jno
jb
or
xor
mov
popa
shlb
inc
and
arpl
out
push
xorb
std
icebp
ljmp
jmp
cmp
sbbb
xchg
in
inc
mov
xchg
dec
sbb
in
sub
mov
sub
outsl
jo
mov
and
out
mov
lret
iret
xor
or
sub
and
mov
push
mov
and
outsl
or
mov
dec
aas
mov
in
jle
stos
fs
adc
cmp
daa
and
cmp
es
mov
mov
call
and
and
push
ret
xchg
insb
fs
sub
sbb
divb
adc
xchg
adc
mov
sbbb
mov
inc
xchg
push
sub
scas
cmc
popf
jb
mov
lret
imul
bound
add
xchg
jae
jecxz
test
das
int3
insl
mov
xor
or
pushf
jge
push
fistpll
lcall
add
sbb
leave
cld
fxtract
lods
int3
adc
sti
sarb
and
negb
mov
pop
push
sub
xchg
cmpsb
add
lods
test
add
leave
jno
cs
jo
jecxz
in
inc
adc
ja
pop
mov
sub
loope
push
orl
cmp
inc
dec
mov
xor
sbb
adc
cs
packuswb
popf
cmp
mov
ret
jns
xchg
dec
mov
push
in
in
add
popf
in
pop
pop
in
mov
cmp
jnp
sbbl
insb
dec
in
bound
or
adc
aas
enter
cmp
orl
sarb
sub
dec
add
and
mov
mov
test
dec
pop
das
outsl
shlb
lahf
ret
sbb
repnz
adc
xchg
lea
mov
mov
mov
add
lock
or
xlat
inc
dec
add
mul
lock
jle
int
and
cmp
pop
cwtl
imul
leave
or
aam
pop
das
jl
pop
fnstcw
and
and
add
fcoml
insl
shl
js
out
xor
lret
mov
push
inc
js
mov
sti
test
mov
inc
stos
mov
inc
jecxz
jp
adc
and
xor
in
jle
pop
notl
xor
and
mov
sbb
pop
or
jae
ds
lahf
fidivrs
inc
inc
clc
out
pop
mov
ret
sub
jmp
daa
cmp
fs
repnz
out
out
dec
inc
lods
leave
popf
and
shlb
movsl
cmc
sbb
and
xchg
out
mov
add
lods
nop
push
mov
sahf
push
pop
cmp
and
daa
and
stc
lahf
mov
gs
jmp
xchg
mov
or
and
sbb
lock
mov
xchg
xchg
pop
push
lock
and
add
adc
jae
jns
sub
fs
repz
out
and
xchg
push
or
in
inc
dec
fbld
pop
push
cmp
sbb
xchg
push
mov
repz
sarb
dec
scas
daa
mov
aad
or
inc
push
arpl
in
dec
mov
ss
or
lcall
adc
in
les
sbb
lea
mov
jp
out
dec
out
add
cmp
inc
das
scas
and
dec
rcl
and
cld
xchg
testl
js
ficoml
insl
scas
sbb
js
fisubs
push
mov
jle
sarl
out
cli
cmpsb
push
pop
outsb
jge
mov
sub
fdivs
mov
aam
cmp
fisttps
mov
fistpll
shr
mov
cmp
out
sarl
mov
fnsave
add
das
loop
push
xor
mov
dec
cmp
mov
pop
in
addr16
scas
daa
cmp
das
aas
mov
into
mov
xor
push
inc
mov
mov
fs
clc
and
ljmp
cmp
adc
and
roll
pop
push
push
xchg
inc
xor
js
movlps
loope
stc
xor
cmc
or
mov
adc
fistps
add
inc
push
mov
xor
xor
inc
or
orb
ret
mov
add
frstor
dec
pop
pop
out
inc
xor
pop
out
das
cs
pop
out
mov
jl
lds
mov
pop
sub
fwait
mov
pop
or
cwtl
push
push
out
psadbw
mov
popf
mov
and
in
jg
or
dec
sarl
cmp
out
fwait
push
repz
orl
xor
push
pop
movsb
cmpsb
adc
out
cmp
push
lcall
mov
cmp
test
test
jmp
outsl
mov
sbb
pop
xor
ficoml
nop
nop
inc
repz
pop
sti
inc
adc
mov
mov
jle
dec
call
adc
add
divl
dec
sbb
sbb
mov
gs
pop
dec
mov
dec
clc
enter
mov
fnsetpm(287
push
dec
pop
stos
add
test
idivl
in
sub
data16
dec
inc
aad
jmp
stc
in
cmpb
xchg
test
adc
dec
inc
sbb
lods
mov
xor
dec
adcb
jge
dec
repnz
bound
popf
dec
adc
jnp
test
cmp
mov
out
cli
movsb
imul
adc
pop
mov
sbb
cli
lea
push
and
hlt
lret
and
int3
cld
jns
bound
rcrb
filds
test
pop
daa
adc
xchg
cmpsl
aas
xchg
and
xchg
ss
jne
pop
or
push
xchg
ss
sbb
cmp
dec
jge
pushf
mov
and
push
dec
data16
test
sub
xor
cs
lods
cmp
or
test
xchg
xchg
sub
andl
dec
push
nop
cmp
int3
sahf
das
inc
rclb
cmp
pop
es
je
cmp
and
js
jp
fsubs
pop
and
aaa
in
insl
inc
stc
dec
dec
movsb
pop
adc
sub
fidivs
fldenv
int3
or
es
pop
lods
lods
call
inc
xor
push
pop
pop
mov
int3
jo
outsl
fmull
or
adc
push
popf
push
adc
push
les
sbb
mov
mov
mov
popf
xor
sub
add
clc
out
mov
into
lock
loopne
lret
jl
jp
mov
jo
jmp
cmp
cmp
aam
push
in
mov
adc
jge
out
pop
or
dec
repnz
daa
scas
xor
xchg
and
xchg
scas
pop
repnz
pop
mov
rcrl
jb
es
jl,pn
int3
lret
js
dec
out
push
sub
sub
xor
jmp
push
shrb
jne
mov
mov
cmovne
addr16
jo
fwait
jae
push
mov
sbb
add
in
xor
ljmp
xor
push
jecxz
inc
je
inc
xor
sub
sahf
pop
push
bound
sbb
das
inc
cmp
enter
test
cld
fdivl
xor
mov
mov
dec
bound
cwtl
and
adc
jb
popa
dec
lret
push
xlat
lods
daa
dec
movsb
outsl
jl
ljmp
inc
xor
int3
xor
jge
xor
shrb
jmp
fbstp
inc
push
add
add
fwait
mov
or
add
stos
ret
sub
push
cmp
pop
push
jecxz
pop
sub
scas
jle
fnstsw
pop
adc
sti
cld
cmp
push
repnz
rcll
xchg
clc
add
leave
loop
mov
fsubs
stos
loop
cmp
hlt
pop
in
mov
dec
in
pusha
adc
mov
scas
pop
mov
or
cwtl
das
sub
lods
aas
test
in
xchg
repz
out
dec
sbb
inc
dec
cmp
mov
jl
fadd
sub
jle
nop
sahf
or
dec
out
insl
test
jecxz
sub
mov
test
jo
repnz
push
jne
imul
imul
daa
lea
add
lea
gs
fsubl
or
fnstsw
test
cmc
xchg
jge
pop
mov
mov
and
mov
jb
xor
pusha
popa
dec
aam
pop
cltd
insl
pop
dec
dec
imul
push
clc
in
jo
arpl
add
inc
xor
stos
repz
aam
mov
outsb
aas
jns
cmp
and
mov
or
sub
or
or
sbb
xlat
pop
sbb
fsubrl
ret
pop
jecxz
lods
jae
ja
push
pop
stos
ds
or
cmp
add
or
inc
mov
ret
cmpl
jmp
xor
mov
adc
arpl
pop
mov
mov
ja
ret
inc
imul
xor
push
or
je
inc
mov
sti
mov
std
rcr
pop
xchg
xchg
jl
sahf
pop
cmp
jecxz
xor
add
iret
dec
inc
in
arpl
les
enter
mov
push
mov
lahf
and
mov
in
xchg
sub
iret
xor
test
in
adc
push
lahf
mov
into
lock
push
jne
xchg
ja
add
mov
jb
jmp
adc
bound
cltd
mov
popf
in
pop
mov
mov
rcl
jae
scas
insb
pusha
dec
dec
lcall
addl
mov
mov
pop
fisubrl
sbb
lea
inc
inc
jb
adc
std
aam
jnp
sbbl
outsl
pop
and
aam
mov
incl
dec
sub
cli
dec
adc
daa
pop
xor
xchg
jae
arpl
mov
hlt
repnz
div
push
inc
xchg
insb
or
inc
enter
mov
jnp
pushf
pop
int3
xor
mov
addr16
inc
sbb
pop
add
dec
push
scas
gs
mov
dec
dec
xor
cmpsl
imul
jno
jle
inc
adc
and
lods
shll
mov
nop
jp
mov
dec
jl
cmp
movsb
pop
mov
sahf
lret
xor
adc
jl
cmpsb
ljmp
shll
or
ror
sub
adc
fistl
adc
and
xchg
push
fimuls
into
movsl
xchg
push
jns
clc
pop
loope
adc
dec
add
mov
pop
jb
popa
or
mov
in
pop
movsb
add
hlt
adc
pop
imul
fs
sbb
lret
pusha
mov
sub
pop
adc
jle
push
jo
inc
pop
add
push
fwait
add
or
or
sbb
scas
mov
fmull
adc
jne
rcrb
xchg
rclb
outsl
adc
or
leave
orl
in
call
dec
mov
in
icebp
sub
insb
xor
fiaddl
stos
jl
mov
jp
mov
pop
aaa
es
inc
xchg
push
sub
sti
xor
in
mov
enter
or
jge
or
and
gs
cmp
xchg
jno
pop
das
jmp
push
hlt
ljmp
dec
aaa
mov
cs
popa
and
cmpsl
inc
in
dec
push
inc
jge
inc
rcrl
popf
push
out
in
xor
in
mov
lcall
xchg
push
pop
stc
sub
lret
js
mov
jecxz
stos
cs
sub
test
cltd
fdivrs
rcll
inc
xchg
jp
lret
adc
sbb
xor
push
ljmp
or
jecxz
aad
mov
jg
roll
in
sbb
dec
xor
cli
mov
dec
inc
lock
jp
xchg
stos
push
xchg
ror
jg
out
test
ret
mov
dec
arpl
xor
pusha
int3
or
pusha
mov
fdiv
mov
stc
pop
imull
push
push
xor
popf
lret
adc
out
les
ja
or
or
sbb
in
test
test
sub
leave
call
add
aad
push
and
addr16
pop
stc
xlat
bound
mov
sbb
inc
mov
adc
iret
psubsb
inc
stos
xor
and
xchg
stc
sbb
and
add
out
bound
push
clc
data16
mov
mov
push
push
sub
lds
sarl
mov
and
xchg
enter
jp
push
loop
push
xchg
mov
add
xor
movsb
bound
ret
inc
lret
andb
pop
cvtpi2ps
fs
outsb
push
push
mov
repnz
cs
adc
mov
into
rcll
xchg
mov
mov
dec
dec
pop
inc
push
mov
in
and
sub
idiv
adc
dec
push
cmp
ljmp
push
sub
xchg
mov
das
cmc
cmp
push
add
lds
mov
adc
jno
popa
adcl
nop
in
test
adc
dec
sub
mov
test
rolb
xchg
or
and
mov
and
addr16
xor
shrl
or
push
fwait
addr16
add
mov
fisubl
shrb
dec
into
cltd
sbb
inc
dec
hlt
shlb
fcoms
sbb
add
xchg
pop
scas
pop
xchg
decl
add
sub
add
push
sub
pop
ret
cmp
sahf
fistl
push
ret
call
inc
sub
popf
push
loope
xor
insl
addr16
push
and
cli
cmp
sarl
xchg
rcrl
fsts
pop
sti
sbb
roll
cmp
cwtl
pop
adc
or
xlat
mov
pop
shlb
sbb
xchg
pop
mov
addr16
sbb
cmpsl
or
addb
mov
lock
jmp
mov
push
sub
aam
adcl
push
push
and
push
aad
lahf
sti
movsb
movsb
loope
pop
xor
and
les
loop
mov
add
dec
xchg
movsb
idivb
and
pop
lret
pop
rorb
movsb
push
pop
lahf
call
pop
dec
add
int
and
xchg
daa
and
and
or
adc
clc
inc
push
inc
sbb
mov
test
cld
daa
adc
xchg
sbb
shll
fs
stos
mov
addr16
test
dec
mov
imul
push
mov
sahf
mulb
xor
push
add
cmp
inc
nop
mov
in
jmp
sub
fwait
mov
jecxz
mov
into
pop
loope
std
push
mov
ss
loop
out
les
mov
outsl
adc
aaa
nop
jo
loopne
pop
mov
adcb
and
inc
mov
dec
and
adc
js
mov
pop
fwait
loope
add
jge
repnz
jne
push
jmp
xchg
dec
mov
mov
ss
jae
iret
inc
test
adc
adc
out
aaa
xchg
mov
cmp
mov
add
xor
jne
add
shlb
pop
test
addr16
adc
sbb
jl
push
test
xchg
jg
fs
popf
inc
jnp
xchg
push
in
insb
movsb
pushf
divl
in
or
movsb
xchg
jmp
push
out
scas
mov
insb
adc
out
inc
and
mov
or
pop
jecxz
and
leave
cmpsl
jmp
in
outsb
mov
fcmovnbe
fdivrp
mov
pop
fs
leave
inc
insb
lock
addb
bound
out
jl
xchg
inc
test
sbb
cmpsb
inc
mov
or
es
xor
push
pop
jno
and
rol
mov
sbb
arpl
dec
sti
aaa
sti
jecxz
sbb
pop
mov
mov
push
and
or
cmpsb
xor
inc
push
loopne
push
imul
je
dec
mov
dec
das
xchg
pop
std
jp
sbbl
mov
out
add
or
sub
push
mov
lret
ror
sbb
fcoms
jp
scas
scas
daa
icebp
pop
jmp
add
das
xchg
enter
xchg
call
nop
push
loop
lock
inc
and
push
cmp
test
addr16
out
cmp
fld
dec
add
dec
add
inc
inc
aaa
out
lret
popa
rcll
xlat
cmpsl
sub
cmc
ja
mov
fdivs
and
cmp
xchg
repnz
std
divb
jle
in
lcall
or
sbb
jbe
rsqrtps
loope
cmpsl
data16
and
roll
mov
fs
push
or
cmp
cmpsl
cmp
add
insb
push
push
push
xlat
mov
xchg
loop
pop
mov
arpl
pop
in
ds
dec
cmp
push
hlt
daa
bound
push
pusha
dec
jb
mov
jle
dec
fisubs
leave
push
in
int
js
scas
lods
adc
in
dec
shlb
xchg
mov
repnz
call
inc
lret
adc
cmp
test
mov
dec
scas
or
xor
mov
in
or
adcl
out
xchg
pushf
fwait
pop
cmpsl
inc
movsb
dec
or
dec
pop
push
bound
jg
jmp
xchg
jg
sbb
inc
inc
sbb
sti
adc
fimuls
xchg
pop
in
rclb
daa
imul
lods
arpl
sbb
fdivs
inc
ret
push
pop
je
add
outsl
inc
jne
test
jae
addr16
sbb
pop
hlt
mov
dec
jg
push
or
aaa
mov
xchg
sub
adc
in
lahf
js
mov
jle
mov
in
mov
pop
lock
sbb
xchg
push
shlb
xor
and
mov
pop
sbb
and
pop
sbb
sbbb
sarl
mov
add
std
mov
int3
movsb
arpl
pop
lret
stc
fnstenv
repz
mov
icebp
xchg
sub
push
mov
iret
cmpsb
and
jmp
shlb
xor
mov
data16
dec
mov
test
orl
or
inc
mov
and
das
es
xor
cmpsl
xorl
in
pop
push
sbb
dec
sbb
add
xchg
add
call
xchg
outsl
insb
ljmp
and
lea
loop
stos
adc
lds
inc
imul
mov
jle
nop
popa
cmp
sub
int
push
mov
lds
sbb
pop
cwtl
popf
cmpb
mov
or
inc
rcrb
and
mov
adc
sahf
jecxz
mov
dec
inc
addb
lods
stc
mov
dec
cltd
imul
jo
idivb
push
inc
xchg
add
pusha
addr16
cmpsb
clc
nop
push
into
sbb
cmp
add
jne
push
jle
insb
xchg
mov
jae
cmpsl
icebp
inc
imul
dec
call
outsb
dec
mov
in
mov
xor
ss
or
xor
in
xchg
mov
jge
loop
push
add
aad
aas
lret
cmp
imul
in
push
add
jns
mov
icebp
mov
mov
shl
pop
ret
in
cmp
loope
rcl
pop
cmpsb
sbb
enter
adc
repz
movsl
jg
into
pop
insb
fcoms
inc
cmp
lcall
cmc
mov
out
jmp
jno
or
mov
mov
mov
dec
sub
lods
sahf
repnz
sub
pop
add
mov
jb
pop
add
stc
in
call
mov
inc
jmp
xor
adc
dec
mov
movsl
stc
pop
test
mov
ljmp
cmp
adc
ss
rorb
test
ja
push
movsb
pop
nop
sbb
jmp
rcll
insb
cwtl
pop
pop
enter
and
mov
popa
movb
sbb
loope
sbb
outsb
test
mov
pop
cmp
dec
jmp
jmp
push
lods
cmp
out
xchg
ljmp
inc
les
ljmp
loope
xchg
jg
shrl
xchg
xchg
movsb
insb
imul
push
inc
pop
jge
pop
fwait
andb
lcall
test
pop
mov
push
adc
add
movsw
mov
daa
mov
jl
add
xchg
int
jmp
cwtl
pop
xor
mulps
scas
push
cmpsl
fs
push
sbb
out
and
or
jg
dec
sti
dec
xor
mov
xchg
std
popf
lock
pop
movsb
push
pop
dec
rcrl
xchg
sarl
xchg
mov
popa
sub
in
popf
loopne
fsubrl
in
fs
and
pop
sahf
mov
xor
stc
je
in
mov
pop
cmp
and
scas
push
mov
cld
mov
lock
jp
testl
fildl
lods
inc
mov
loopne
insb
jp
sbb
push
sbb
push
push
ja
mov
mov
pop
scas
aam
test
mov
shlb
pop
out
mov
out
jge
test
mov
cwtl
or
xchg
inc
dec
sub
cmpsl
loop
ret
cltd
xchg
lock
andb
pop
ja
sub
dec
xor
inc
shll
js
sub
in
mov
xchg
add
jnp
mov
pop
fidivrl
or
push
insl
daa
scas
sub
fcmovb
stos
daa
pop
fistpll
loopne
mov
shlb
sub
xchg
xchg
cmp
jo
out
arpl
nop
add
outsb
push
cmp
movsl
adc
adc
jo
pop
or
mov
repz
push
int3
xchg
jl
sbb
pop
outsl
mov
mov
das
bound
jmp
xchg
test
add
pop
rolb
fnstcw
push
cmp
cld
repz
cmc
insb
xchg
lds
or
mov
jnp
scas
dec
test
repz
add
js
mov
and
lock
push
ret
jbe
jno
inc
test
adc
js
das
xlat
sub
lds
test
jno
jecxz
pop
push
add
cmp
and
sbb
cmpsl
inc
fidivrs
es
cmpsl
data16
cmp
sbb
mov
loop
or
out
xor
xchg
adcl
ljmp
test
dec
in
cltd
push
mov
or
pop
add
clc
call
cmp
sbb
jecxz
dec
sbb
pop
xchg
xor
pushf
test
test
out
insl
jp
cmpb
fbld
jg
aad
or
jle
jecxz
xor
fsts
cmp
in
sub
sti
pop
dec
repz
mov
push
call
xlat
nop
adc
xor
fmull
push
and
or
push
inc
jg
adc
lret
mov
int3
repz
sub
push
fstpl
stos
and
or
jns
pop
sbb
jge
add
fnstcw
mov
or
xor
or
mov
js
adc
or
fwait
xchg
or
mov
or
cmpsb
lret
adc
addr16
aad
sub
rorl
insb
sub
pushf
jnp
cmpsb
and
fidivrs
pop
mov
xchg
imul
jnp
int
xlat
in
popa
sub
gs
bound
out
pop
daa
mov
or
inc
int3
enter
xchg
xchg
imul
addr16
repnz
or
je
adc
sbb
mov
xchg
sbb
movsl
lahf
je
neg
ljmp
ss
sub
mov
push
xchg
mov
inc
jecxz
ja
popf
sub
scas
cli
cmpsl
jae
jns
mov
pop
cmp
add
cmp
fs
stos
mov
jg
scas
jbe
loopne
push
repnz
in
faddl
into
jle
mov
cwtl
xchg
scas
arpl
mov
inc
daa
push
mov
stos
xchg
inc
movb
mov
fistpl
mov
mov
xor
mov
test
add
pop
lds
repnz
mov
test
aam
xlat
les
fiadds
jbe
mov
arpl
push
dec
aaa
jnp
call
les
cli
hlt
sub
out
bound
adc
lds
incl
cltd
nop
adc
sbb
mov
jle
aam
loop
cld
scas
stos
scas
mov
mov
outsb
ljmp
dec
push
xchg
or
and
imul
mov
xor
ss
ljmp
sub
mov
jmp
imul
dec
adc
sub
mov
lea
aas
fbld
in
test
push
bsf
pop
inc
dec
lods
aam
xor
adc
mov
pusha
outsb
pop
sub
scas
loop
inc
leave
or
mov
loop
arpl
fisubs
or
cmpl
adc
fwait
sbb
inc
adc
mov
dec
pop
sub
lcall
int
das
sbb
loope
inc
cmp
mov
push
loopne
xchg
pop
stos
xchg
dec
idivl
mov
xorb
or
loopne
jge
push
imul
jne
mov
and
or
stos
jo
jp
xor
jb
pop
jg
mov
mov
loopne
xorb
clc
rolb
adcb
or
fs
cmp
call
pushf
cltd
ljmp
loopne
mov
cmpsl
enter
adc
jo
push
sti
mov
sbb
sti
and
lret
rcrb
arpl
xchg
jb
outsb
jg
stc
pop
fsubrs
mov
jbe
mov
pop
lods
das
and
xor
xchg
jne
jmp
or
mov
call
push
mov
subb
sub
and
sbb
es
jmp
xlat
xchg
push
sbb
lock
xchg
mov
outsb
movsl
push
add
lods
das
je
jmp
jmp
adc
repnz
mov
add
adc
or
outsl
je
push
decb
inc
sbb
add
cmp
iret
cltd
xor
popa
xchg
lea
in
js
mov
or
jns
addr16
cmp
dec
xchg
mov
add
test
cmc
sub
movsl
pop
stos
mov
popf
loop
cmp
push
xchg
sbb
int3
and
jl,pn
cmp
icebp
pop
mov
pop
xchg
lea
sbb
push
sub
mov
jae,pt
pop
xor
addb
ljmp
cmp
enter
cmp
xchg
cmp
fsubrs
ss
test
jns
test
add
sahf
sahf
lret
cmp
test
pop
bound
sbb
testl
adc
shrb
ret
sbb
add
pop
test
or
fnstsw
jo
insb
xchg
sub
rorb
repnz
popf
mov
mov
jmp
jl
pop
xchg
add
nop
ret
scas
xchg
aad
push
mov
sbb
sbb
mov
fimuls
dec
out
stos
out
push
out
int
lods
jns
int3
inc
adc
xchg
cwtl
mov
adc
or
adc
push
mov
icebp
xchg
into
fs
push
mov
inc
movsl
jnp
or
testl
inc
out
sbb
cmp
mov
jno
sbb
xchg
xchg
mov
cld
mov
mov
sub
jecxz
and
fs
subl
mov
fisttpl
mov
dec
cmp
sar
xlat
cld
test
test
xchg
enter
mov
lds
sub
mov
mov
pop
cmp
std
sub
icebp
push
and
rolb
and
mov
xor
sub
lods
sbb
add
jg
jge
cwtl
arpl
sbb
jg
mov
call
xchg
pop
sub
xor
mov
bswap
adc
jo
lods
stos
fdivs
dec
inc
xlat
in
stos
mov
add
pop
xchg
fbld
in
idivb
out
push
fidivs
sub
mov
xchg
mov
xchg
cli
sbb
and
add
je
cmovb
aad
adcl
xchg
and
scas
push
adc
jb
gs
ja
mov
pop
dec
cmp
pop
leave
mov
pop
call
test
test
jl
nop
push
push
std
movsb
cltd
mov
dec
jnp
push
bound
jg
xchg
jne
es
test
std
sbb
jnp
xchg
mov
nop
xor
cmp
adc
pop
aaa
and
test
push
mov
push
mov
add
cld
mov
pop
pushf
or
jbe
sbb
loopne
insb
rcrl
jge
xchg
aaa
sti
shrb
sub
fldl
pop
call
lahf
loop
clc
xor
out
adc
repnz
jmp
ja
jbe
adc
insb
pop
lock
jb
aam
mov
and
push
dec
fdivl
fwait
jmp
test
mov
dec
dec
sub
or
mov
xchg
jae
adcb
mulb
and
repz
xor
dec
cwtl
xor
xchg
aaa
add
loop
dec
jl
mov
hlt
out
mov
mov
push
dec
inc
gs
xchg
int
enter
iret
loope
fcomps
cwtl
int
push
ds
mov
push
nop
nop
sub
in
mov
popf
shrl
inc
in
mov
lret
jb
xchg
xchg
and
int3
sahf
ds
sbb
scas
mov
jnp
fs
xor
les
push
sbb
dec
xchg
xor
dec
test
aam
dec
jae
clc
mov
lahf
or
mov
and
mov
icebp
test
mov
ds
push
mov
jno
ds
xchg
cmp
add
es
mov
ret
xor
sub
add
xor
xchg
xor
and
fmuls
sub
mov
pop
jle
mov
out
jmp
out
decl
jns
pop
xor
dec
push
dec
stos
and
shrb
clc
movsl
pop
ljmp
push
jbe
aad
hlt
dec
ret
cmc
pop
in
mov
jge
adc
fcmovu
xchg
insb
xchg
mov
mov
subb
push
xor
fildll
mov
xchg
cwtl
and
pop
mov
decl
pop
movsb
cwtl
pop
xor
sbb
jnp
shrb
repz
stos
bnd
nop
push
sub
inc
sbb
je
dec
xchg
mov
cltd
data16
push
sbb
dec
push
mov
sbb
or
rorl
adc
sti
dec
jmp
pop
pavgb
add
or
adc
notb
jbe
je
push
dec
or
add
mov
jo
and
popa
cld
mov
idivb
addl
scas
pop
inc
push
test
in
sahf
loopne
push
sub
sub
cmp
inc
xor
sti
in
adc
xchg
push
fisubl
mov
xlat
mov
clc
mov
mov
push
dec
jmp
xor
xor
int
xor
mov
cmp
jb
arpl
in
inc
cmpl
cs
jb
outsb
shr
andl
cmp
jg
cmp
mov
adc
out
cmp
sti
shlb
add
mov
adc
jle
inc
jge
sub
mov
push
inc
stos
xor
daa
mov
xchg
std
mov
icebp
cli
xchg
xchg
fwait
stc
fildll
or
adc
test
fisttpl
jg
aaa
mov
je
mov
arpl
jne
addr16
cmpl
inc
ret
and
push
loop
loope
pop
add
xor
xchg
lods
cld
add
cmpsb
mov
test
lahf
inc
mov
mov
sbb
pop
fildll
push
pop
adc
mov
imul
cmpl
into
push
jge
mov
sub
outsb
pop
hlt
pop
enter
add
adc
aaa
pop
mov
mov
clc
mov
push
test
popf
cmp
push
jbe
push
mov
mov
cmp
iret
jmp
mov
push
mov
pushf
loop
int3
inc
stos
test
in
test
and
lcall
push
mov
aam
dec
adc
inc
pop
fwait
daa
test
aas
sbb
shr
ret
movsl
cs
jp
inc
int
mov
shrb
pop
inc
shll
cmovl
leave
push
pushf
aaa
ftst
lret
jo
jle
dec
push
adc
or
xor
adc
pusha
mov
icebp
xorb
jnp
mov
add
dec
shlb
xor
xchg
push
jns
insl
cmp
xchg
xor
mov
ficomps
rcrl
mov
ror
jg
adc
jbe
mov
jnp
adc
pop
scas
push
sbb
mov
xor
xor
pop
in
lods
scas
aas
jle
mov
outsl
sub
cmp
sub
ret
ficomps
cs
andl
push
mov
adc
in
lret
aam
push
push
cmp
xor
mov
mov
in
jne
dec
sbb
pmuludq
push
mov
mov
into
cmpb
outsb
iret
lahf
sub
jo
shrb
out
dec
in
movsl
scas
les
dec
dec
scas
inc
jno
imul
add
ror
push
in
mov
mov
and
icebp
cmp
dec
inc
xchg
jno
bnd
jae
mov
jbe
lods
xchg
repnz
push
mov
int
cmpsl
cmc
inc
cmp
xchg
dec
xor
inc
adcl
mov
jge
mov
test
repz
dec
daa
ja
enter
jns
sub
and
imul
ret
mov
sbb
lods
dec
mov
cmp
stos
in
sub
movsb
inc
and
cs
jp
loop
dec
clc
mov
repnz
jns
mov
xlat
xorb
xor
lret
std
rcrl
mov
jmp
mov
rclb
cmp
bound
lods
insl
cmp
mov
icebp
std
jge
repz
popf
sub
mov
dec
rclb
int3
stc
and
jo
dec
pushf
lods
ja
mov
jne
les
mov
xor
int
scas
mov
add
mov
cmp
test
mov
ret
pop
insb
dec
inc
pop
in
lret
fdiv
and
or
aam
inc
or
adc
lds
sbb
sbb
jmp
mov
push
cltd
and
dec
orb
adc
push
jge
daa
push
and
pop
into
sarb
mov
ret
sbb
cmp
push
mov
add
iret
xlat
xchg
dec
icebp
mov
jle
jl
loopne
loop
mov
pop
pop
icebp
rdpmc
jns
lock
jmp
jge
cmp
push
jge
popf
movsl
push
sbb
inc
xchg
push
mov
push
add
adc
xchg
add
jb
mov
fldcw
orb
rcr
jle
pushw
jmp
cmc
clc
sahf
jns
sbbb
mov
pop
sbb
adc
lock
mov
aam
nop
into
repz
or
popa
cmp
sub
adc
lock
orb
cmp
push
sub
imul
fisubrl
xor
repnz
or
call
xchg
fcmove
outsl
cmp
aad
sar
xchg
int3
cmp
das
inc
out
mov
mov
push
push
push
mov
out
int3
outsb
pop
pop
in
mov
mov
jle
mov
push
lret
into
mov
xor
in
cwtl
xchg
mov
cmp
pop
xor
inc
or
ja
pop
sub
daa
int
fimull
mov
mov
dec
and
mov
adc
mov
and
jle
cltd
mov
stos
mov
adc
lods
aam
rclb
mov
arpl
jno
cmpsb
out
shlb
cmp
push
cwtl
fsubrp
pusha
pop
loopne
cli
dec
mov
jle
dec
mov
out
negb
xor
fwait
and
testb
fmull
inc
push
and
or
jg
test
iret
mov
std
jb,pt
add
cli
cmpl
or
xlat
push
out
outsb
pop
mov
push
int
or
sahf
push
movsl
add
xchg
call
imul
je
shl
clc
int3
xchg
dec
icebp
mov
xchg
gs
push
sbb
int
sub
js
xor
movsb
imul
nop
gs
popf
lea
ret
aas
sbb
adc
pop
daa
or
xchg
fdivrs
in
or
lcall
insl
mov
add
das
jl
pushf
cltd
fs
mov
leave
xchg
xor
loopne
shrb
xor
imul
mov
outsb
into
push
in
out
aam
cld
mov
mov
jl
mov
sti
stos
xchg
insl
loop
ljmp
jo
dec
insb
js
push
mov
lcall
cmpsl
push
fnsave
mov
mull
push
mov
test
cltd
mov
or
cmp
xchg
fsubr
push
add
addr16
ljmp
popa
push
imul
pop
mov
imulb
cmp
sub
popa
imul
shlb
cmpsb
jbe
imul
cltd
clc
mov
xor
neg
clc
mov
xchg
pop
xor
jnp
sahf
in
cmp
and
sbb
loop
sti
dec
shrb
xor
mov
shl
jle
xor
sub
int3
xlat
sbb
push
aam
shll
jae
add
lds
pop
jecxz
push
push
scas
add
pop
std
out
sub
int
scas
add
mov
mov
sub
popa
das
mov
scas
xor
add
jno
adc
loope
out
xor
sub
pop
xchg
lock
mov
or
jle
and
aaa
je
arpl
cmpsb
addr16
icebp
xor
std
sub
inc
imul
cmp
cld
xchg
xor
and
adc
out
inc
inc
ss
jo
les
sti
repnz
jo
je
sti
mov
packuswb
mov
leave
insl
and
and
gs
or
imul
loope
ss
int3
ror
icebp
lea
xlat
int
aaa
popf
jnp
repz
pop
or
fmuls
pop
insb
adc
stos
mov
mov
cwtl
pop
cmp
sub
dec
dec
jle
into
movsb
mov
dec
mov
mov
inc
jo
mov
fists
popf
hlt
loop
sbb
bound
imull
ret
rclb
xor
push
or
scas
loopne
xchg
mov
sub
divb
in
pop
cs
mov
jbe
jecxz
mov
scas
add
and
test
loope
ret
ss
ficoml
mov
xchg
dec
addr16
adc
daa
fsts
sub
outsl
cmpsb
stc
dec
xchg
shll
and
push
in
cmp
stos
pop
clc
leave
mov
aad
cmp
fidivrs
jmp
mov
adc
aad
cmpb
orl
cmpl
lods
cmp
sbb
ljmp
addb
insb
scas
push
jne
lcall
loope
pop
pop
push
jno
jg
inc
movsl
stos
int3
cmp
xchg
in
sbb
mov
aaa
rolb
xlat
fs
out
dec
xlat
cmp
jb
fnstenv
push
fwait
rcll
sti
std
jae
push
sbb
ja
lods
mov
add
sub
push
push
xchg
xorb
push
cmp
out
into
out
mov
sbb
call
xchg
adc
push
jnp
push
rol
jle,pn
in
add
jmp
inc
daa
inc
jle
popa
jnp
imul
rclb
xchg
test
mov
dec
lds
cmp
call
pusha
sbb
mov
inc
mov
dec
mov
sbbb
test
cltd
pusha
mov
xlat
sbb
jg
push
adc
cmp
jae
test
pop
insl
sub
arpl
push
das
cmpsb
sahf
iret
cwtl
cmp
sub
pushf
mov
add
mov
cld
lods
dec
rcll
cmp
pop
push
daa
js
xor
fisttps
aaa
pop
cmovl
mov
xchg
lcall
stc
push
xchg
xor
mov
cmc
cmp
cwtl
bound
adcb
repnz
jle
testl
repnz
idivl
call
test
scas
fnstsw
hlt
not
mov
je
cwtl
aad
imulb
test
insb
gs
mov
out
sub
and
and
mov
lcall
insb
in
mov
shrb
js
push
or
es
adcb
mov
add
scas
adc
xchg
shrb
sarl
cmp
iret
fs
jmp
inc
in
sub
mov
push
aaa
pop
fwait
mull
cmp
fstpt
adc
dec
and
lods
xchg
or
iret
imul
sub
iret
jne
jl
fisttpl
test
int3
pop
cmp
sti
jne
adc
push
jmp
fldcw
pushf
mov
mov
cmp
mov
movsl
scas
adc
lods
dec
mov
incl
sub
shr
dec
maxps
xchg
mov
stc
loope
jmp
int3
xchg
mov
loop
mov
mov
and
cmp
push
xchg
out
lods
mov
cwtl
push
add
pushf
and
jne
in
mov
mov
in
mov
cwtl
lods
loope
cmp
call
mov
pop
or
xchg
arpl
push
fidivrs
call
jmp
xor
sti
test
and
cmp
sub
out
jbe
outsb
pop
sub
adc
icebp
mov
sbb
in
ret
movsl
dec
add
in
orb
cwtl
sub
lods
push
les
mov
int
cmp
fisttpl
clc
adc
xor
sbb
cli
pop
fnsave
jae
and
jl
mov
iret
ljmp
sbb
in
or
in
sbb
adc
cmp
dec
mov
mov
xchg
inc
mov
mov
outsl
fs
fwait
jle
int3
rorl
pop
pop
jle
pop
pop
push
and
xor
jge
subl
xchg
cmp
test
call
dec
and
js
cmp
jg
sar
repnz
sbb
mov
pop
dec
mov
fbstp
mov
and
popf
pop
xor
inc
xor
in
outsb
je
mov
in
add
or
jge
mov
fisubrl
mov
xlat
sbb
inc
mov
sbb
push
cld
pop
xchg
scas
mov
js
mov
mov
int3
adc
push
or
ret
jmp
push
lods
sbb
xchg
jbe
pop
out
inc
dec
pop
sti
leave
out
test
pop
jnp
repz
mov
loope
loopne
stos
adc
cmpsb
mov
test
lret
insb
cmp
or
enter
or
repz
ds
iret
inc
loope
ret
test
push
xchg
and
xchg
iret
push
idivl
mov
cmpsb
arpl
int3
add
nop
inc
ficoms
shrl
cwtl
addr16
jecxz
das
push
mov
into
cli
lods
xchg
lods
sarb
push
xor
sub
ja
es
repz
scas
jecxz
sbb
xor
insb
cmp
adc
fcomps
sub
outsb
xchg
cmp
cs
mov
mov
cmp
cmpsl
mov
lcall
out
adc
imul
roll
pushf
pop
adc
stos
mov
rolb
xor
mov
mov
add
lods
sbb
jb
mov
maskmovq
xchg
repz
and
mov
pop
sbb
scas
dec
push
sbb
jns
add
test
jns
sbb
das
daa
es
xor
sub
insl
mov
jmp
lcall
xor
iret
jmp
jp
inc
cltd
and
mov
adc
add
add
adc
test
scas
dec
xchg
and
jg
jae
mov
and
fildll
insl
adc
jp
loopne
sbb
sbb
dec
and
xchg
mov
add
gs
popa
push
add
push
mov
les
rclb
jns
lods
out
push
gs
call
pop
ret
cmp
mov
push
push
sahf
hlt
mov
sbb
filds
js
mov
loope
pop
pop
xchg
cld
mov
cli
lret
push
pop
nop
mov
stos
cmp
enter
outsl
pop
mov
sbb
bound
and
cmc
pop
ja
push
test
fprem
mov
mov
imul
adc
inc
push
jmp
cwtl
jne
arpl
adc
cwtl
add
xchg
mov
fdivr
or
lahf
repnz
jns
add
lods
jge
shl
lcall
pushf
in
mov
ret
scas
push
sbb
xor
inc
jo
addl
mov
cmp
jmp
jnp
adc
mov
cmpsl
fdivrl
mov
mov
sub
roll
sbb
in
ret
ret
mov
popf
int3
loop
sbb
ret
dec
xor
push
into
mov
mov
xor
pop
pusha
and
sbb
pop
jbe
fisubs
call
add
xlat
and
push
fwait
sbb
out
aad
xor
dec
popf
mov
mov
adc
out
add
negb
inc
popa
jae
in
sti
loop
not
jo
pop
test
pop
inc
push
inc
sub
les
lcall
inc
adc
and
popf
cmp
and
es
push
sub
fidivrl
fmuls
and
cmp
cmp
add
push
stos
jecxz
jnp
jmp
ret
pop
xor
fdivrl
jne
lods
adc
stos
adc
mov
sub
scas
fstps
fneni(8087
nop
xor
outsb
rcr
xchg
xlat
in
outsb
icebp
lea
andl
pop
dec
enter
inc
ljmp
fcoms
sub
xor
sti
mov
dec
inc
ds
xor
sub
sub
lods
outsl
adc
dec
push
hlt
sub
ret
into
dec
addr16
stos
test
fisttpll
adc
pop
loop
enter
inc
jns
sbb
les
js
add
jmp
push
xchg
into
adc
adc
scas
das
outsb
add
insb
mov
push
test
aam
les
fadds
lret
ret
pushf
jbe
inc
mov
lods
sbb
pop
cmpsl
sbb
dec
icebp
dec
jmp
add
mov
dec
dec
and
sub
add
sub
bound
inc
test
and
aaa
jbe
repnz
jne
xchg
test
leave
cld
jne
fisubrl
mov
and
shll
cmp
mov
push
mov
les
fmull
bound
cmpsl
inc
pop
or
pop
enter
testl
mov
aad
mov
xor
dec
sbb
in
mov
mov
pop
data16
mov
sub
inc
cmp
in
mov
adc
aam
lret
int3
sub
js
pop
lahf
sub
lods
gs
cmpsl
insb
push
inc
test
xor
sbb
int3
xchg
inc
push
aam
lahf
dec
or
jnp
in
pop
aam
cli
xchg
pop
jl
jle
stos
mov
sub
adc
mov
mov
pop
inc
pop
pop
cmp
movsl
xchg
fcom
xor
pop
sub
daa
add
push
adc
mov
xor
adc
ja
cmp
xchg
xor
mov
cs
sbb
add
push
int
dec
inc
xor
ja
mov
xchg
sar
fstp
cmp
aam
in
lcall
aad
jno
out
mov
pop
pop
andb
lret
cmp
inc
cmp
xlat
fnstenv
lods
inc
cltd
pop
or
jbe
cmc
pop
push
inc
test
sub
sub
fwait
jbe
jge
bswap
in
push
xchg
adc
jg
cmp
xor
lock
inc
jb
dec
mov
lock
andb
mov
insb
jle
xor
adc
mov
ret
adc
push
sbb
sub
mov
lea
sub
mov
scas
push
mov
push
sbb
pop
add
push
dec
pop
pop
insl
push
cmpsb
xchg
into
jge
out
sub
xchg
dec
pop
jo
and
je
mov
imul
xchg
test
push
and
mov
jmp
sbb
pop
xchg
ret
xlat
in
lret
jne
icebp
xchg
icebp
mov
mov
dec
jge
sbb
add
aam
and
pop
and
jb
lcall
or
not
into
rorb
mov
sub
dec
bnd
cmp
xchg
in
xor
mov
rcrb
fnsave
pop
dec
mov
xor
ret
aad
push
xor
xchg
mov
jo
mov
lock
es
add
mov
out
cmc
pusha
pop
xchg
js
cmpsl
dec
cmc
adc
push
leave
rorb
cmpsb
dec
cmp
jmp
out
inc
jge
dec
sbb
stc
mov
and
dec
dec
push
scas
out
mov
cmp
in
and
sti
imul
test
out
dec
fisttpll
fsubrp
lcall
insb
test
aaa
in
popf
js
mov
cld
xor
xor
jge
jb
pop
or
mov
dec
ficompl
jl
push
jno
mov
push
fists
jb
sub
sbb
aas
fisubl
mov
lods
push
add
jae
outsb
sub
rorl
in
into
js
or
rcr
rclb
xchg
or
movsl
mov
jge
pop
fdivrl
jle
imul
mov
cltd
add
inc
cmc
jp
push
enter
outsb
mov
pop
jno
push
fmul
xlat
fwait
int3
jnp
lahf
cmpsl
xor
jl
lods
pop
aaa
xor
mov
xchg
cltd
push
loop
leave
add
int3
stos
push
loope
push
push
pop
mov
jmp
fisubrs
les
xor
push
push
cmpsl
jle
dec
jae
into
sub
les
leave
mov
jb
in
aam
scas
leave
mull
and
hlt
fidivrs
mov
clc
cli
lds
dec
leave
jmp
add
iret
jae
jmp
inc
or
push
fs
cld
adc
or
lret
loop
pop
sbbl
sub
nop
outsb
cltd
lcall
or
icebp
std
pusha
xchg
dec
push
lea
popa
xchg
rcr
and
dec
lock
mov
lds
add
sub
ret
and
push
ds
xchg
fcoml
pcmpeqd
xchg
out
sbb
push
ljmp
mov
ffreep
xchg
push
xchg
push
push
xchg
sub
add
pop
imul
add
xchg
push
dec
mov
dec
insb
mov
pop
shlb
imul
stos
dec
int3
repnz
cwtl
xor
xor
iret
sbb
popa
cs
fidivl
sub
scas
jb,pn
pop
leave
cld
negb
iret
cmpsl
pop
insl
sbbl
daa
mov
imul
in
movsb
add
arpl
inc
std
jge
or
ds
mov
in
push
cmp
mov
out
mov
in
pop
dec
jle
push
xchg
pusha
cmpsb
sahf
cmp
popf
popa
xchg
inc
out
sbb
int3
stos
mov
mov
pop
out
mov
sub
cmpsl
xor
in
sti
mov
pop
xor
cmpsb
out
push
xchg
popa
xchg
fbstp
jnp
into
rclb
das
scas
pusha
sub
mov
mov
mov
cltd
sub
push
mov
push
out
out
ret
test
cmp
rcr
call
mov
adc
jg,pt
and
repz
iret
or
pop
sub
and
es
lcall
cltd
addps
inc
mov
fcoml
fidivl
stc
cmp
push
ss
pop
xchg
and
xor
xchg
into
xor
cli
rcrb
push
pop
mov
mov
fsts
fwait
test
test
sti
adc
xlat
cmp
push
push
jae
xor
out
test
mov
mov
lcall
aad
sbb
push
or
dec
subb
and
xor
shrb
out
push
lret
sbb
dec
and
pop
aas
clc
adc
nop
mov
and
stos
xchg
nop
jb
add
ds
sub
test
sub
jmp
inc
ret
xchg
pop
xor
sahf
outsl
in
mov
leave
push
inc
jns
aam
ret
cmpsb
mov
inc
sarb
add
cltd
adc
dec
imul
jb
enter
jae
clc
cmpsb
sbb
xchg
lret
movsb
les
icebp
pop
jge
and
loop
je
test
mov
mov
inc
dec
aas
repnz
mov
push
inc
mov
push
xor
roll
pop
jg
jne
add
mov
scas
pusha
or
inc
push
cwtl
xor
push
dec
std
sbb
popf
notl
xor
xchg
test
mov
lds
ror
push
jbe
lea
or
rcrl
push
mov
movsb
jo
mov
icebp
mov
ficoml
cli
xchg
iret
lea
mov
int
stc
int
jmp
sbb
hlt
xchg
xor
adcb
mov
push
pop
pop
mov
ror
mov
mov
push
xor
mov
pusha
xor
sub
fs
mov
jne
or
insl
lea
push
lret
mov
add
testl
out
xor
push
inc
xor
mov
sub
adc
fcoml
jns
inc
stos
jo
outsl
lods
and
addr16
inc
fisubrs
cmp
gs
add
pop
push
daa
nop
mov
xor
pop
mov
jns
sti
push
shrl
dec
adc
add
push
rcrb
dec
fsubl
or
daa
roll
sarl
fcompl
pop
jp
dec
mov
inc
mov
adc
push
jge
pusha
or
or
push
call
loopne
dec
in
test
in
xor
cltd
xlat
test
dec
and
and
xlat
push
inc
xchg
dec
fdivs
sbb
or
dec
dec
int
icebp
jg
cmp
out
call
mov
jo
xchg
push
ss
inc
sbb
pop
dec
cltd
jbe
maxps
push
out
adc
inc
cld
clc
imul
push
lahf
mov
jb
pop
dec
inc
sub
pop
xchg
mov
pop
sbb
test
cmp
ds
mov
fiaddl
ja
outsb
mov
lods
movsl
cmc
cmp
push
inc
cvtps2pd
ret
add
cmp
outsl
mov
pushf
and
push
add
or
mov
add
push
insl
add
js
xlat
bound
clc
push
test
xchg
scas
lcall
and
mov
jno
jb
rcrl
lods
fisubrl
aas
jmp
les
lods
xor
jbe
loope
jno
pop
scas
arpl
inc
int
fsts
mov
jecxz
jo
loop
sbb
notl
inc
jnp
icebp
or
sti
mov
cmpsb
mov
ja
cs
mov
push
pop
cmp
and
std
ret
fmul
lods
in
pushf
jmp
dec
int3
cmp
in
xor
or
das
mov
jnp
jns
xchg
jo
add
pop
int
leave
push
sub
or
or
shll
jo
daa
test
cmp
xor
les
xchg
pop
push
scas
aaa
loopne
lds
and
dec
sub
sbb
dec
pop
sub
mov
ss
lods
push
pusha
sub
adc
xor
pop
and
mov
jecxz
dec
pop
cmp
xlat
cli
dec
test
jae
gs
pushf
imul
inc
data16
out
dec
mov
movsl
push
mov
or
lods
mov
into
mov
mov
mov
sbb
fwait
push
xchg
mov
lds
mov
dec
xorb
push
cmp
lret
push
nop
pop
mov
lret
inc
cmc
sbb
mov
icebp
cmp
dec
pop
adc
lock
xchg
adcl
ss
xchg
pop
lret
test
out
mov
jnp
or
adc
aam
test
inc
mov
test
push
adc
mov
jp
xchg
jmp
pop
insb
mov
xchg
test
mov
sarb
push
mov
lea
pop
add
cltd
jl
adc
ret
adc
popa
xor
or
adc
dec
mov
cltd
and
fmul
jno
inc
dec
lret
adc
sbb
fsub
xchg
lret
outsl
and
aaa
mov
out
pop
out
or
cmp
push
add
jge
fwait
mov
notb
stos
ljmp
inc
sbb
push
insl
push
dec
dec
dec
lret
mov
mov
fisubs
in
jno
mov
mov
lock
jns
imul
jl
aad
push
stos
cmp
cld
mov
sbb
lret
mov
aad
fcomps
adc
jl
sbb
movsb
mov
mov
hlt
into
add
in
pop
test
ftst
lock
mov
inc
push
pop
lahf
cmpsb
xor
cld
add
lcall
adc
std
test
jnp
cmp
sbb
push
lahf
mov
xlat
gs
jl
adc
pop
int
aas
add
call
jge
test
adc
ret
loope
add
mov
int
xchg
jp
and
cmp
add
mov
fwait
pop
pop
adc
fstpt
shlb
xchg
pop
cmpsb
adc
dec
ja
cli
out
cltd
ret
iret
xlat
sbb
inc
xor
mov
js
loop
ud1
lods
inc
test
or
movsl
cs
ljmp
xchg
push
aam
jge,pt
stos
dec
adc
orb
lret
mov
mov
repnz
sub
sub
sahf
xchg
dec
lds
xor
cvtdq2ps
cmc
pop
out
or
es
js
jl
push
jo
fstpl
test
fcmove
fiaddl
sub
mov
ds
mov
bound
mov
jnp
sbb
sahf
xchg
ja
mov
mov
xchg
repnz
shll
insl
dec
add
pop
jb
repz
sbb
xchg
sub
or
pop
and
push
xor
inc
enter
gs
or
icebp
push
dec
push
gs
push
add
mov
ret
pop
sub
inc
xor
jecxz
mov
insb
cmp
repz
pop
and
jecxz
stos
cli
push
bswap
hlt
call
mov
jae
inc
cmp
xlat
dec
test
sbb
sub
out
pop
in
add
cmpsl
xchg
mov
outsl
sbb
lods
cli
js
mov
sti
dec
pop
mov
pop
lret
imul
xorl
jecxz
pop
pop
push
fwait
subl
fucomp
add
roll
add
cwtl
test
ds
sbb
inc
repnz
push
in
lret
pop
push
hlt
add
shl
ret
pop
push
mov
xchg
lea
lds
lret
push
add
xchg
stc
and
js
inc
push
test
push
inc
sar
mov
scas
imul
dec
sarb
popa
mov
add
add
shrb
ret
cltd
xorl
adc
lcall
adc
adc
sbb
fldl
mov
enter
in
mov
cmp
mov
dec
mov
inc
ja
bound
add
orb
push
mov
lods
test
cmpsl
xlat
test
notl
std
or
mov
cmp
call
sbb
sub
jnp
ffreep
sub
ljmp
dec
jmp
pushl
repnz
xchg
mov
sub
inc
add
popa
cmp
mov
mov
or
jge
aam
imul
mov
push
pop
cmp
cmp
or
mov
bound
sbb
arpl
outsl
jl
rclb
rorb
aaa
repnz
int3
cmp
pop
add
dec
cmpb
xchg
cs
insl
inc
ret
jmp
mov
jbe
xlat
jg
add
pop
shrb
shrl
insb
mov
into
sub
cmpsb
push
sbb
inc
xlat
in
adc
nop
and
dec
or
dec
dec
jnp
mov
addr16
xor
inc
adc
sub
aad
pavgw
icebp
adc
ja
sub
mov
pop
fcoml
les
jne
xchg
mov
pop
fdiv
sbb
jnp
pushf
jge
xor
mulb
xchg
jne
and
cmp
push
mov
push
out
mov
gs
fs
dec
adc
inc
roll
xor
rolb
pop
into
in
fidivl
and
push
lcall
aas
pop
daa
arpl
and
mov
adcb
dec
outsb
adc
push
loopne
sbb
aad
cmp
xor
sub
lret
lock
mov
jg
sub
mull
mov
pop
in
mov
ret
cli
push
add
out
and
scas
lahf
adc
or
bound
jge
in
flds
lods
mov
adc
in
imul
pop
mov
inc
dec
and
xchg
jbe
mov
push
mov
out
dec
adc
ljmp
fidivrl
fwait
out
jno
pushl
stos
sub
in
and
nop
inc
sub
push
mov
xchg
sti
xchg
and
in
loope
mov
add
fnstsw
test
test
outsl
jl
pop
js
jmp
inc
icebp
jne
push
add
cmpl
rol
ret
popf
sbb
cmp
xlat
cmc
stos
aam
leave
mov
or
clc
inc
repnz
or
fistpll
push
inc
idivl
mov
add
sub
das
add
jmp
sbb
stos
shrl
xchg
test
push
sub
xor
sub
mov
mov
sub
decb
cmpsl
in
mov
mov
mov
int
ret
das
sub
mov
out
add
push
test
call
cmp
inc
mov
jo
test
int
sbb
mov
mov
mov
repnz
cmpsb
test
mov
les
mov
cmpsl
cmpsl
fisttpll
mov
popf
int
test
xchg
sbb
sbb
addr16
rcll
cmpsl
adc
mov
fs
mov
and
xor
int3
in
outsl
shll
lea
pop
push
stc
pop
lea
cltd
pop
loop
hlt
mov
push
pop
mov
out
mov
call
xchg
xchg
idivb
imul
iret
loop
daa
leave
cmp
push
out
pusha
jp
pop
and
rolb
in
out
insl
cmp
arpl
das
adc
adc
loope
or
xor
out
cld
mov
loopne
xlat
int3
fisubl
lds
mov
jmp
sub
add
lds
jae
xchg
frstor
repz
filds
push
mov
popa
push
mov
sub
stos
dec
jo
outsl
push
or
mov
mov
stos
cmp
mov
int
loope
pop
jmp
push
mov
call
outsb
sub
inc
jmp
shll
stc
xor
aas
push
mov
lahf
adc
cmp
arpl
int
scas
mov
pop
outsb
sbb
pop
cwtl
push
lret
lahf
test
pop
repnz
sbbb
fs
adc
sub
adc
sbb
aaa
jmp
ret
out
inc
adc
filds
and
and
in
ror
imul
xchg
mov
fnstcw
push
fucomi
repnz
lea
sbb
mov
xor
mov
dec
ljmp
stos
fstpt
xor
xlat
push
stos
ja
fisttps
mov
push
sbb
inc
mov
inc
adc
mov
and
lret
push
inc
cs
sub
and
sti
cmc
aam
pop
push
ss
das
mov
call
aam
adc
arpl
arpl
and
ja
mov
sub
xchg
mulb
push
xor
les
ja
push
push
pop
adc
addb
xchg
mov
mov
pop
popa
xor
pop
ret
dec
pusha
stos
sbb
sub
mov
int
mul
loopne
loopne
lods
ljmp
dec
setl
rcl
cld
sub
and
mov
or
add
lcall
fs
imul
jl
std
cmc
faddp
in
or
daa
scas
xor
int3
scas
dec
mov
js
in
sbb
jg
popf
stos
cmp
out
mov
shlb
mov
push
loop
and
div
test
bnd
roll
push
and
jge
dec
sti
mov
popf
mov
call
ljmp
lahf
or
fsubrs
jecxz
ret
xchg
mov
mov
cmp
push
bound
mov
mov
push
jbe
ja
movsl
call
fimull
push
leave
int3
bnd
sbb
in
fadds
lds
jns
insb
mov
cli
cmp
filds
jns
push
lret
adc
arpl
lahf
cmpsb
sbb
sbb
cmc
fwait
adc
sub
add
push
xorb
lods
loopne
imul
mov
push
xchg
lds
mov
or
mov
icebp
xlat
and
mov
pop
adc
and
jnp
push
js
pop
in
repnz
imul
sbb
mov
pop
sub
xchg
mov
addr16
cltd
xor
test
sarb
mov
cld
aaa
pop
or
inc
push
mov
popa
daa
lods
jns
loopne
mov
std
sub
in
mov
lcall
or
fwait
dec
mov
mov
xchg
jo
mov
mov
push
push
mov
les
mov
sbb
sub
inc
cmc
bound
pop
sbb
jmp
sub
cmp
data16
ss
lcall
clc
jno
adc
loop
cld
and
bound
pop
add
cmpsb
xor
inc
test
dec
int3
insb
daa
jno
or
dec
mov
xchg
jo
pop
in
enter
mov
test
adc
cmp
and
imul
sub
cli
pop
push
fdivrl
xlat
roll
jne
push
pushf
outsb
movsl
mov
jle
xchg
adc
and
jecxz
pop
test
pop
mov
mov
mov
pop
pop
jns
xchg
insl
jl
popf
cmp
push
push
popf
test
push
outsl
xor
movsb
fisubs
mov
jae
mov
pop
xor
test
repnz
pop
mov
call
insb
out
aas
in
data16
push
dec
or
in
daa
cld
jno
adc
adc
inc
jp
lret
imul
pop
xchg
out
out
shrb
mov
adc
cwtl
ja,pn
adc
push
movsl
sbb
stos
sbb
lret
and
sub
cmpsl
jp
popf
pop
push
mov
sbb
cmp
stc
rcll
nopl
fimull
stos
in
lods
mov
mov
sar
xchg
ds
cwtl
xchg
adc
stos
cltd
sbbb
cmp
pushf
gs
loope
push
sub
mov
dec
lods
popf
mov
mov
xlat
push
sar
and
xchg
mov
js
xor
repnz
pop
push
xorl
push
dec
jmp
ja
jle
mov
idiv
dec
imul
cld
xchg
loop
scas
push
lods
dec
or
fistpl
xchg
mov
add
bound
fldcw
or
cmp
cmp
xorl
mov
dec
or
shlb
aaa
rorb
clc
fwait
xchg
sbb
or
pop
jns
mov
or
aad
daa
jl
and
addl
stc
jg
inc
mov
stc
in
xchg
pop
stos
scas
push
aam
rorl
pop
jno
movsb
cld
sbb
sbb
popf
mov
rcrb
or
mov
nop
mov
enter
cmp
sbb
jno
lahf
xor
or
xchg
int
cld
sbb
xor
repnz
out
push
daa
pushf
cmp
out
adc
in
add
popl
jp
push
aam
in
jno
xor
mov
xchg
out
hlt
in
pop
mov
and
xor
test
sbb
push
cwtl
adc
adc
cmpsl
aaa
popf
das
cli
ja
test
mov
ret
sub
inc
push
imull
or
or
imul
dec
pop
loopne
jl
push
jbe
pop
das
int
mov
addr16
lods
fidivs
push
dec
outsb
ret
xchg
lret
sub
pop
jp
lock
adc
sub
fmull
pop
and
jnp
imul
cmp
aas
mov
scas
lcall
in
test
sub
pop
mov
inc
pop
adc
and
jmp
fcompl
shrb
mov
lcall
ret
and
aaa
or
call
das
mov
mov
test
sub
jo
leave
pop
mov
sti
jmp
or
dec
cli
scas
sub
mov
cmpsl
mov
xchg
test
mov
in
and
test
in
mov
testl
mov
faddl
jae
push
shlb
gs
or
push
hlt
pop
jecxz
jg
int3
lret
pop
pop
outsl
aad
sbb
adc
inc
push
test
xor
push
mov
jp
cli
xor
push
dec
mov
les
lcall
mov
movl
cli
cmp
fwait
lods
dec
push
adc
mov
push
push
gs
adcb
inc
rolb
push
sub
push
aas
loope
hlt
jecxz
xchg
nop
and
and
daa
mov
movsb
cmpsb
or
xor
mov
adc
insb
mov
jb
xor
lods
mov
and
scas
and
xor
xor
sub
sarb
dec
cmpsb
test
cmpsl
pushl
ret
xor
les
xlat
lahf
das
inc
icebp
adcl
push
jb
scas
test
cmp
add
push
sbbl
je
fiadds
imul
subps
int3
cld
lea
jno
scas
nop
sti
push
jmp
and
mov
scas
add
test
addr16
leave
dec
add
push
pop
inc
inc
mov
mov
movsl
stos
rcl
jb
inc
push
jne
sbb
insb
in
ds
xchg
push
push
and
jp
popf
repz
loope
scas
cli
flds
add
mov
pop
pop
stos
repz
fisttpll
jecxz
int
inc
test
mov
pop
jns
inc
mov
xchg
es
test
in
out
mov
xor
push
pop
icebp
dec
sub
repz
sar
sahf
clc
sub
gs
push
sbb
imul
into
add
cmc
dec
mov
aad
mov
cmpsl
xchg
in
mov
scas
outsb
xchg
jno
sub
popa
jnp
test
leave
jg
cmpsl
filds
mov
xor
sbb
mov
mov
or
test
xchg
mov
jno
push
bound
sbbl
cmp
mov
xor
shrl
lret
aas
pop
sbb
lret
sahf
test
mov
sbb
add
aas
outsl
ret
jbe
std
pop
inc
mov
mov
xor
jb
in
and
push
mov
or
sub
mov
arpl
stos
stos
and
stos
test
pop
insl
jmp
ss
ljmp
mov
mov
sub
ljmp
push
cmp
mov
dec
push
shr
xchg
mov
dec
and
arpl
cs
jl
xchg
xchg
sub
cli
mov
dec
imul
fistpl
mov
push
fcomps
and
fisttpll
negb
mov
cmpsl
mov
mov
lret
je
xchg
jne
push
stos
adc
test
jae
in
cmp
mov
sub
ds
cmpsb
mov
pop
sbb
xchg
pop
sub
xchg
jmp
ss
or
cmp
cs
pop
sub
mov
sub
cld
and
push
adc
jp
outsl
jnp
ds
xchg
cmp
cmpsb
jge
nop
inc
mov
xlat
mov
inc
mov
hlt
sbb
jge
inc
pop
dec
jle
xor
xorb
jns
and
mov
or
fdivp
sbb
lret
out
mov
cld
mov
outsl
xchg
loopne
pop
adc
xorl
inc
fistpl
cmp
iret
pop
and
shrl
mov
and
push
xor
mov
sub
nop
test
lods
int3
sbb
jnp
xor
into
gs
cmp
enter
push
popf
cltd
jg
in
jo
pmaxub
aad
imul
push
iret
pusha
mov
mov
cmpsb
data16
out
jo
xchg
push
sub
gs
filds
xchg
in
es
jle
dec
gs
mov
mov
fistpl
mov
jg
movsl
inc
inc
lret
sarl
out
push
comiss
mov
push
jbe
push
push
and
sbb
pop
out
sbb
iret
pop
mov
pop
mov
clc
fcmove
rcrl
pop
call
mov
push
mov
mov
and
cmp
int3
dec
adc
and
inc
outsb
mov
and
sbb
rcll
in
lock
jns
dec
sub
add
mov
lret
lock
inc
aad
mov
push
sub
push
movsl
das
pusha
repnz
enter
clc
mov
cmp
or
clc
lea
inc
std
or
xrelease
adc
scas
in
imul
std
outsb
sub
stos
sti
and
mov
aas
imul
in
pushf
lret
mov
pop
sbbl
je
repnz
out
scas
fwait
lcall
sub
xchg
js
jne
in
xlat
push
popa
mov
jle,pn
cld
rcr
mov
mov
jl
mov
rcl
mov
dec
mov
xchg
push
rcrb
std
fstl
sbb
test
pop
xchg
push
mov
in
insl
cwtl
pop
dec
and
ret
cmpsl
out
jecxz
push
push
adc
scas
faddl
push
adc
in
outsb
sbb
into
test
shrl
jp
ds
cmp
pushf
fs
inc
dec
pop
dec
mov
iret
cmc
test
hlt
cmp
decb
repz
mov
fsubr
xchg
xchg
cld
lea
test
push
fcompl
mov
push
mov
or
pop
mov
ds
pusha
push
popa
pop
fsubrp
js
cmp
xchg
dec
fnstenv
cmc
daa
es
add
sbb
mov
xchg
dec
lret
rcrl
mov
xchg
shrb
fcomip
add
outsb
stos
stos
aad
stc
dec
idivl
xor
cwtl
pop
inc
in
sbb
mov
mov
xchg
and
and
das
mov
lods
jl
sbb
mov
adc
in
iret
bound
les
lcall
imul
add
xor
shr
or
stos
jl
sub
mov
fmul
inc
push
adc
dec
dec
add
pop
xchg
add
je
and
daa
outsl
cli
mul
adc
xor
das
push
xchg
sbb
jns
ret
loope
mov
rcl
mov
adc
lock
je
loopne,pn
dec
mov
mov
repz
inc
stos
ljmp
push
sub
lcall
mov
out
mov
ret
rclb
je
iret
into
or
lods
add
and
loopne
and
xchg
stos
mov
mov
imul
jb
sahf
decb
add
ja
sbb
out
in
lret
add
in
inc
fwait
ret
ret
add
test
pop
inc
iret
into
mov
sub
mov
in
int3
add
xchg
imul
fwait
stos
nop
dec
js
out
dec
sbb
xor
dec
pop
mov
push
add
aas
shlb
mov
cld
aas
add
xchg
sahf
into
jae
adc
nopl
jg
rcll
jmp
jno
insl
das
int
and
insb
xlat
ret
xor
push
call
mov
int
out
sub
or
aaa
movsl
jmp
push
sub
cmpsl
mov
cltd
jb
or
sub
push
push
or
cmp
stos
sbb
add
lea
dec
repnz
sbb
leave
lds
icebp
pop
push
xor
bound
cs
fadd
sub
sbb
push
imul
stc
xchg
xor
or
push
sar
in
jns
dec
or
adc
cmp
lock
orl
jg
lcall
inc
xlat
jl
lahf
inc
pop
push
mov
and
or
cmp
mov
adc
fstpl
jmp
rorl
pop
cmp
negb
jmp
jo
scas
xor
sarb
je
gs
mov
jno
push
test
jp
inc
mov
aaa
aam
test
sub
adc
adc
pop
repnz
addb
shll
inc
lods
outsl
add
hlt
xchg
pop
xor
sub
mov
test
and
lods
mov
xlat
popf
mov
call
fidivrs
push
stos
push
inc
mov
sbbb
mov
sbb
cmpsl
dec
inc
mov
lds
daa
sti
cwtl
sbb
insl
add
hlt
dec
jae
jp
enter
inc
add
scas
xchg
push
xchg
xchg
fildll
fistpll
mov
cmpl
loop
iret
lahf
ljmp
test
std
add
cli
or
mov
mov
pop
out
push
fldcw
xchg
popf
cld
push
outsl
sbb
inc
push
notl
movsb
or
push
movsl
roll
or
jp
add
dec
in
lods
mov
and
sbb
aad
lcall
mov
jns
pop
mov
lods
mov
in
bnd
pop
push
and
and
sti
mov
in
outsb
movsl
int3
mov
cmp
sbb
xchg
test
push
inc
test
push
mov
cwtl
adc
dec
lea
imul
and
or
aaa
cmp
sahf
insl
scas
dec
adc
jae
push
das
in
lret
xchg
insb
sub
xor
xchg
das
and
out
ret
int
stos
imul
jo
daa
inc
inc
mov
mov
imul
bound
pusha
push
jno
inc
dec
cmp
sbb
enter
push
pushf
pop
iret
in
xor
test
fisubrl
mov
push
pushf
cltd
repnz
mov
cmp
leave
or
hlt
fistps
push
insb
xor
and
jecxz
xchg
neg
or
xchg
insb
lea
bound
or
mov
aaa
faddl
mov
pop
push
inc
movl
in
or
jae
inc
repnz
lcall
mov
mov
stos
fimuls
jl
sub
lock
outsb
push
popf
add
jne
cld
push
mov
inc
lock
pop
cmp
int3
mov
xchg
add
cmp
aas
dec
cmp
and
push
arpl
lret
pushf
enter
xor
cltd
insl
mov
add
ja
cmp
inc
jmp
mov
pop
movsl
push
fists
adc
out
lds
mov
das
or
scas
pop
stos
sbb
push
out
pop
xchg
fimull
adc
push
xchg
loop
sub
cmpb
inc
mov
inc
decl
xchg
outsb
mov
call
jbe
dec
in
loopne
jbe
mov
xchg
stc
cmp
adc
push
lods
push
sub
negb
loope
shll
and
into
xchg
pop
call
xchg
or
add
arpl
pop
dec
sub
lret
aaa
iret
data16
mov
dec
jl
addr16
xor
xlat
int
arpl
or
mov
es
aaa
idivl
adc
lea
js
cmc
movl
daa
xchg
xor
mov
pop
sub
orl
push
mov
push
test
out
push
pop
outsl
cs
dec
loop
xor
scas
loope
or
lock
cmp
daa
jo
mov
stos
mov
and
adcb
dec
sti
rorb
or
mov
xchg
insb
xchg
fisttpll
aas
dec
cltd
dec
pop
push
out
jg
lret
xlat
lcall
dec
scas
movsb
lahf
fs
mov
cwtl
push
fcompl
popa
push
cmp
dec
xor
std
in
out
pop
rolb
sahf
aam
push
test
repnz
dec
mov
js
std
aaa
icebp
push
xor
testl
sti
je
inc
mov
jp
sbb
mov
dec
pop
sbb
push
adc
fldenv
cltd
dec
popf
push
lods
jp
push
cmp
mov
jge
sbb
mov
dec
jnp
test
loope
jle
leave
jne
mov
mov
in
xor
pop
shrb
mov
add
shrb
inc
sahf
pop
lret
adc
loopne
rolb
dec
cmp
and
push
xchg
cmpsb
outsl
leave
mov
shll
leave
xchg
dec
ljmp
in
mov
test
add
repz
repnz
push
nop
lock
int3
dec
jp
inc
test
movsb
mov
addr16
mulb
inc
jmp
fwait
rorb
pusha
out
cmpsl
pop
xchg
inc
mov
push
iret
pop
mov
xor
and
xor
xchg
shrb
push
xor
push
shl
pop
stc
in
jnp
mov
push
mov
mov
xchg
addb
mov
loope
lcall
cmp
in
imul
mov
cltd
add
sahf
and
cmpl
int
out
jno
fdivs
cmp
jne
jmp
add
lea
or
inc
or
lods
shrb
je
lods
mov
push
fs
inc
fisubrs
into
sarb
jno
cmpsl
loop
divl
or
adc
fidivrl
incb
shlb
sarl
lods
mov
or
jl
arpl
jbe
ds
xchg
xchg
sbb
fwait
sbb
aam
int
stc
fidivs
push
ret
cld
int
xchg
cmp
jae
lcall
jns
push
xor
mov
jno
push
push
mov
hlt
sub
fwait
push
xor
repnz
mov
xchg
push
sbb
push
ret
fs
clc
lea
add
adc
arpl
pcmpeqb
lock
in
movsl
sbb
repz
lock
and
out
in
stos
sub
dec
push
push
cmc
add
xor
jl
sbb
dec
push
push
mov
or
jo
movsb
fwait
mov
stos
out
lods
push
aas
add
mov
test
xchg
repnz
push
daa
add
pop
mov
aaa
imul
cli
lock
scas
sbb
jno
dec
xlat
add
shll
mulb
pop
and
and
adc
icebp
pop
fists
cmp
test
jbe
enter
sti
xor
imul
cmp
lds
imul
or
push
sub
leave
push
cmp
shlb
or
es
popa
inc
jne
inc
xchg
push
out
sbb
movsl
rcl
mov
pop
fildl
cwtl
repz
push
movb
inc
ja,pt
fldt
jne
dec
or
mov
cmp
out
in
insl
mov
adc
add
pop
adc
out
pop
vmread
sahf
mov
popfw
pushl
dec
mov
adc
mov
cs
jno
cld
arpl
adc
sub
icebp
nop
lahf
stc
xchg
imul
cld
imul
and
jecxz
popf
xor
jecxz
xor
jmp
or
xor
sub
outsb
mov
mulb
push
cmp
sub
ficoml
ss
push
aad
test
jp
insb
mov
loopne
shrl
xchg
lds
xchg
jge
cltd
adc
repz
daa
push
addr16
arpl
aam
mov
adc
mov
lods
stos
mov
and
push
and
aaa
pop
movsb
push
lea
repz
das
inc
mov
sub
add
lods
push
mov
mov
out
in
adc
je
xor
imul
imul
or
je
push
xor
test
mov
test
push
cmp
lret
daa
mov
cmp
scas
in
xchg
sbb
es
es
add
cmp
lahf
addr16
cli
imul
lods
sub
mov
lods
and
loope
dec
aas
cmp
add
sub
fstl
jmp
jbe
mov
xorb
test
into
test
mov
enter
insb
lock
jns
mov
outsl
jnp
data16
mov
movsl
adc
out
push
xlat
in
xchg
sahf
in
sub
in
data16
sbb
or
stos
fisttpl
fisttpl
jl
cmp
jnp
in
cmpl
daa
lea
call
and
mov
pushf
out
push
ret
call
push
pop
insl
dec
cmp
push
lods
hlt
js
lds
lods
dec
dec
mov
leave
test
movsb
inc
loope
mov
in
push
and
push
push
or
jmp
pop
das
inc
rol
pop
xor
and
mov
inc
lods
es
sahf
fs
mov
cmpsb
cmp
sub
es
mov
cld
jbe
or
imul
mov
pop
xchg
xor
add
int3
popa
pop
and
movsb
lods
xor
incl
inc
sbb
je
sub
cmp
hlt
jo
inc
movl
in
imul
daa
push
mov
mov
mov
dec
ret
jp
and
adc
adc
xor
aam
clc
rcl
add
inc
fcmovbe
ds
mov
xor
sbb
cmp
out
mov
std
addl
ret
mov
cmp
daa
loope
lods
mov
pop
cmpsl
imul
push
out
call
shll
mov
push
inc
jno
test
or
pop
das
test
cmp
pop
sahf
stos
jecxz
pop
movsl
incl
popa
sti
frstors
pushf
push
or
stos
mov
outsb
xchg
loop
xorb
mov
js
ficomps
cli
jecxz
pop
mov
sub
inc
push
pop
xchg
clc
out
or
mov
in
sbb
int
shll
ret
dec
lods
adc
sub
in
std
sub
push
pop
jo
mov
jmp
push
fdivrp
push
dec
lcall
ss
sub
cmp
and
rcr
mov
push
push
or
sbb
bound
lahf
pop
push
popf
mov
and
ficoms
fldcw
lock
jns
std
adc
aad
rcll
push
sub
cmp
shlb
mov
xor
cmp
ds
jno
add
pop
popa
mov
mov
ret
fisubs
outsl
push
test
push
xor
jno
and
fistpl
andps
cltd
mov
mov
or
shll
push
add
js
push
out
pop
sub
ja
stos
in
scas
in
mov
jmp
das
divb
mov
pop
xchg
push
sub
icebp
pop
jmp
enter
imul
out
xor
push
jg
das
push
out
stos
inc
shl
jmp
mov
call
mov
add
fsubrs
lahf
and
scas
decl
mov
jno
xchg
cmc
int
jbe
imulb
cmpl
dec
jmp
sbb
lret
and
add
test
mov
dec
rolb
fs
shrl
pop
pop
sub
clc
adc
xor
pop
jne
sbb
sbb
mov
jno
dec
inc
cmpsl
in
jno
mov
sbb
inc
rcll
mov
xchg
mov
das
mov
mov
loope
jnp
lret
in
clc
js
loope
mov
mov
fs
adcl
pusha
xchg
mov
cltd
and
sub
test
jno
mov
push
adc
daa
jmp
add
mov
or
mov
scas
gs
das
adc
inc
xchg
inc
lock
jl
push
add
popf
imul
mov
mov
in
in
into
hlt
imul
add
sbbl
mov
or
cmp
out
add
repnz
mov
push
ss
scas
jb
pop
cmpsb
es
push
sbbl
mov
xlat
stos
inc
or
ficompl
cmp
sbb
lods
mov
lods
xchg
pop
stc
popf
mov
dec
jle
out
lds
decb
push
test
inc
push
push
dec
or
je
adc
push
shrb
add
sbb
shr
xchg
call
adc
icebp
xchg
inc
outsb
mov
cwtl
loop
fdivrp
cmpsl
or
and
orl
and
lock
insl
sub
dec
xor
xor
aad
cmpsl
xchg
xor
lcall
mov
inc
scas
int
icebp
push
out
data16
pop
pop
lock
jb
inc
js
mov
fwait
jns
fstp
test
cmp
mov
fisubrs
push
call
mov
call
popf
push
sbb
or
add
sbb
es
cmpsb
push
loope
dec
cmp
pop
fimuls
jmp
gs
insb
xchg
mov
repnz
jl
out
pop
loop
and
pop
pop
int
jmp
ret
stos
mov
mov
jae
add
imul
bound
mov
std
test
xchg
dec
lret
xchg
insl
xchg
pushf
data16
lret
call
hlt
stc
cmp
sbb
push
dec
push
add
mov
lods
mov
jb
jg
daa
jmp
scas
jl
sub
call
sbb
adc
int
cs
mov
push
mov
sbbb
cmpl
mov
xor
xchg
mov
fistpll
or
sti
adc
inc
arpl
mov
inc
mov
inc
scas
daa
push
aas
or
int3
int3
sub
jg
or
cmp
fdivrs
and
jae
mov
sub
pop
int
cltd
test
jle
test
mov
mul
lahf
mul
nop
lock
xlat
frstor
mov
xor
xchg
sarb
push
sbb
test
xchg
mov
movsl
jo
popa
repz
or
subl
xor
loopne
leave
pop
sbb
lahf
lahf
cmp
cli
cmp
shrl
int
cmp
push
sahf
or
sahf
shrb
mov
xchg
pop
pop
jmp
push
xor
test
enter
es
mov
jno
push
xchg
das
imul
gs
jae
rcl
and
jo
sub
lahf
push
insl
out
adc
clc
jbe
ljmp
test
and
push
lahf
sbb
hlt
lods
adc
push
jbe
sub
imul
pushf
pop
or
test
xor
imul
inc
ficoms
out
sti
hlt
pop
push
movsl
sbb
scas
or
sub
mov
mov
loope
iret
addr16
cwtl
out
and
sbb
and
mov
ljmp
xchg
lret
cmp
pop
stos
js
pop
out
data16
sub
push
dec
cltd
push
cmp
mov
or
push
icebp
lret
int3
test
jne
push
xor
adc
loopne
enter
mov
mov
cmp
in
loop
mov
xchg
inc
adc
mov
mov
das
in
jo
insb
dec
pop
mov
sbb
sub
fcoms
adc
arpl
jns
pop
sbb
bound
push
sbb
pushf
sub
or
rorb
mov
aaa
mov
jecxz
shrl
movsb
jle
dec
inc
adc
adc
jp
lcall
imul
pop
push
add
mov
insb
dec
xchg
popf
in
out
pop
sub
xor
ss
cmp
notl
xor
pop
dec
mov
outsb
int3
cmp
add
xchg
lea
movb
lcall
push
add
outsb
push
jmp
push
mov
shl
out
mov
fidivrl
leave
pop
and
ds
in
or
push
cmp
lods
xlat
jb
mov
add
pop
call
push
bound
imul
jbe
loopne
and
jmp
sub
lret
andl
xchg
push
cmp
xor
dec
aas
int
pop
mov
cmp
ss
add
jno
cmp
clc
sahf
sti
pusha
push
jl
sbb
and
test
shr
insb
inc
xor
mov
add
ss
sti
add
shll
sti
cmp
aam
xchg
sbb
sahf
cmp
dec
incb
stc
pop
jg
cmp
jbe
sub
xor
and
es
adc
adc
cs
out
movsl
lock
add
in
mov
inc
in
xchg
inc
lret
jbe
sahf
scas
repz
das
add
out
adc
sti
test
int3
add
adc
jae
inc
data16
pop
mov
loope
fwait
test
sbb
dec
mov
and
adc
cmp
cmpsb
test
xchg
push
push
fnstenv
cmp
dec
movsl
scas
daa
test
mov
cwtl
shlb
cmp
mov
adc
pop
ret
js
adc
push
mov
orb
fcmovbe
push
hlt
adc
mov
mov
std
push
push
dec
dec
fisubl
push
jbe
ror
outsb
ss
test
and
xor
jbe
lret
jbe
adc
jecxz
rorb
pop
xchg
xchg
ds
and
push
bound
and
mov
push
aas
loopne
es
lds
xor
jecxz
sbb
cli
dec
push
cwtl
inc
jle
bound
and
push
divb
xchg
add
pop
jmp
mov
fdivrl
jbe
iret
cltd
jno
inc
fnstenv
out
jb
xchg
mulb
pop
fmuls
sbb
jl
dec
mov
cmp
out
ljmp
ljmp
sarl
lret
cltd
dec
movb
jp
jbe
mov
test
int
xor
inc
jl
xchg
cltd
fsubl
aad
mov
out
xchg
dec
dec
cmpl
pop
cld
insb
push
pop
add
pop
stc
xlat
insb
adc
pop
jbe
pop
hlt
cmp
lods
test
pop
ret
xor
fsubs
push
ss
cld
jbe
int
inc
jp
adc
mov
dec
loop
addr16
cmp
stos
jg
push
mov
mov
out
or
push
add
fcompl
gs
cmp
bound
mov
ss
cmp
fisttpll
lahf
lods
or
std
mov
inc
lahf
inc
jge
outsb
psllw
fiadds
xchg
xchg
dec
fwait
pop
hlt
fistpl
jg
pop
leave
mov
add
push
push
pop
and
mov
cld
jge
mov
or
adc
jecxz,pt
cmpsl
cmp
mov
les
xchg
scas
adc
std
sbb
inc
push
into
fs
iret
icebp
add
and
mul
dec
add
and
sarl
push
dec
ljmp
ficompl
sbb
xchg
out
pushf
add
mov
mov
mov
pop
jmp
sub
ljmp
mov
mov
imul
add
movsl
dec
movsb
jno
sbb
movsb
mov
int3
test
lret
jmp
outsb
rclb
adc
popf
andl
jge
mov
dec
pop
hlt
lret
lods
pop
pop
testl
pushf
lahf
mov
popa
xchg
hlt
xor
push
push
dec
push
es
into
insb
mov
add
sbb
cmp
mov
fistpll
out
popf
push
sub
std
out
xchg
sub
xor
iret
bound
mul
aad
outsl
mov
mov
jp
sbb
inc
mov
repnz
outsb
mov
jo
insl
mov
cmc
cwtl
sbb
or
in
roll
cmovbe
divb
ds
daa
into
es
mov
mov
or
inc
dec
imul
cmpsb
jnp
testb
loopne
rcrl
jp
enterw
push
in
inc
pusha
scas
mov
xor
ss
insb
push
or
mov
mov
or
scas
cltd
or
cmp
dec
fs
enter
mov
mov
mov
xchg
popf
push
lods
or
cli
mov
sub
insb
mov
insl
xchg
xlat
loopne
push
or
pop
or
adc
jns
fmuls
lods
cli
xlat
clc
loopne
add
sahf
inc
add
sbb
stc
pavgw
jl
arpl
mov
jno
inc
and
popa
fdivrl
ror
xchg
adc
rorl
cmpsl
xchg
fsubr
sti
js
pop
in
mov
sbb
and
pusha
cld
xchg
mov
jns
push
xor
sbb
int
out
popf
aas
inc
mov
pushf
or
call
imul
popf
outsb
add
lret
fst
or
cmpsb
mov
xchg
adc
fistl
push
fdivr
or
xchg
push
inc
scas
loopne
mov
push
int3
mov
mov
cmp
sub
pop
mov
sub
enter
jp
xor
test
dec
lods
jp
fstps
ret
xchg
sbb
push
push
inc
xchg
add
aas
mov
nop
or
es
nop
mov
dec
int
sbb
jo
clc
add
ljmp
nop
push
pop
mov
ja
out
lods
outsl
and
loop
and
insb
nop
fcompl
xchg
push
popf
xor
cmp
or
lcall
jge
jg
repnz
in
test
adc
jg
outsl
xchg
add
call
mov
std
mov
adc
sbb
les
lods
rcrl
imul
pop
cmpsl
ret
out
loopne
add
aam
jno
add
mov
rcll
push
sbb
sub
daa
popf
xchg
lcall
xchg
push
lcall
out
add
pop
rcr
cs
iret
jnp
bound
mov
xor
scas
ss
les
and
cmp
fadd
ljmp
mov
dec
push
xchg
jno
inc
xor
mov
stos
int
dec
dec
jo
scas
xchg
ja
in
int
pusha
jle
cmpsb
loop
push
pop
test
push
add
loop
lods
es
vandps
scas
imul
pop
test
rorl
mov
data16
fstpt
movsb
call
out
lods
ficomps
jno
test
daa
dec
sbb
movsb
and
sbb
call
inc
sbb
icebp
loopne
aaa
ds
into
fstp
sbb
xlat
jle
shrl
lods
dec
dec
cmc
adc
data16
inc
mov
push
stos
push
jmp
scas
ret
fwait
ret
lods
in
jns
cli
add
loope
xchg
daa
pop
mov
jle
xorl
sarl
notl
jecxz
adc
xchg
sbb
cwtl
sub
pop
daa
cmp
les
in
lahf
stos
aad
les
mov
adc
and
push
jecxz
movups
dec
sub
scas
and
jno
inc
mov
pop
gs
cmp
push
mov
or
pop
in
xchg
rcl
lret
out
dec
mov
mov
movsl
add
loopne
mov
add
xor
mov
shlb
stos
movsb
loope
xchg
in
fists
push
add
pop
sub
pop
xor
mov
sub
push
push
mov
push
pop
push
xchg
jb
cmp
je
xchg
jns
sbb
fnstenv
and
addl
xchg
cmp
imull
dec
or
xor
movsl
xchg
dec
or
push
adc
inc
repnz
inc
xchg
mov
dec
lret
pop
adc
nop
xchg
lods
xor
iret
mov
rorb
adc
lods
jo
cwtl
popa
es
dec
cmp
add
sbb
into
outsb
jns
lret
fs
pop
sub
pop
dec
jnp
ret
lret
out
icebp
push
inc
lea
lds
adc
and
jne
cmp
pop
sub
cwtl
mov
jne
dec
mov
or
jnp
adc
inc
leave
outsl
mov
daa
push
sbb
out
cs
or
lods
add
dec
in
push
inc
gs
jmp
mov
add
jecxz
aam
mov
outsb
addb
mov
lahf
imul
mov
cmp
and
fisubrs
xchg
dec
mov
inc
push
stos
jne
cli
sbb
je
sub
jge
sub
jmp
dec
mov
mov
adc
dec
or
mov
push
pusha
test
ds
sub
shrl
sbb
pop
sti
mov
lret
or
roll
and
std
push
dec
jns
xor
push
jne
outsb
repz
shll
push
sbb
out
inc
cmp
mov
fldenv
mov
xchg
lret
pop
pop
inc
cld
sub
aad
pop
inc
mov
add
inc
cs
lods
sahf
test
xor
mov
ficoms
mov
fwait
ds
add
pop
push
stos
pushf
cmpsb
cmp
xchg
dec
jge
not
lods
fwait
pop
pushf
int3
mov
dec
fimull
mov
and
or
push
scas
cltd
adc
jmp
xchg
lods
adc
sbb
aad
jb
add
stc
mov
and
fcmovu
das
pop
lods
add
mov
or
gs
push
or
xchg
sbb
jp
jno
pop
mov
lock
xchg
call
xlat
mov
push
sub
push
repnz
lret
inc
mov
mov
lret
mov
cmp
lds
ret
jbe
test
call
ficompl
sahf
push
jmp
push
add
adc
stos
sub
sbb
scas
loop
jg
xchg
xchg
fcoms
and
rorb
js
gs
arpl
inc
mov
dec
add
daa
mov
insl
dec
pop
pop
rol
ds
push
or
loopne
cld
mov
inc
jno
and
sbb
repnz
gs
stc
sub
int3
inc
xchg
insl
mov
pop
sbb
ja
stos
dec
lods
add
shl
loope
cmp
mov
mov
dec
cmpsb
rol
fstpl
les
pop
jb
outsb
dec
jmp
push
movsl
mov
add
push
icebp
jp
sbb
nop
scas
mov
push
jno
pop
xlat
jo
addl
test
fstpl
jmp
in
xorl
xchg
xor
jbe
lods
aas
mov
add
repz
adc
ficompl
pop
iret
jl
repz
xor
enter
inc
push
dec
frstor
adc
xlat
jl
and
iret
adc
hlt
loop
or
xchg
cmp
mov
divb
daa
scas
jns
pushf
arpl
cmpb
es
jns
fistpl
rcr
out
movsl
addr16
inc
inc
ljmp
jl
repnz
inc
or
dec
cwtl
fstpl
push
lock
cmp
lret
jp
clc
out
cmp
or
lds
jl
mov
push
data16
rorb
pop
and
push
out
fstpt
mov
pop
inc
dec
add
dec
or
jo
mov
inc
in
mov
inc
mov
in
push
mov
cli
stc
and
sbb
xor
xor
mov
loop
and
fcmovnb
pop
into
mov
icebp
xchg
mov
xor
push
aas
jb
xlat
mov
jne
cmp
mov
push
or
push
ds
in
xlat
mulps
aaa
cmpsb
sub
jo
add
xor
in
dec
or
test
shrl
add
outsb
int3
sub
mov
movsb
imul
movl
jl
cmp
shlb
cmp
xchg
xor
test
dec
aad
adc
lods
push
aas
mov
scas
cs
or
dec
mov
dec
aaa
call
call
jnp
push
fstl
mov
imul
test
xor
int3
das
push
xor
js
ret
mov
outsl
rcrb
rolb
cmpsb
push
inc
stc
jo
mov
outsb
lods
pop
cmp
mov
aaa
push
inc
pop
xlat
pop
pop
rcl
dec
jne
xchg
lods
cmpsb
cld
jp
jbe
xchg
daa
loope
sub
push
or
aas
push
mov
pop
jbe
fs
imul
fcos
xchg
push
in
subb
push
dec
dec
loopne
int3
in
enter
push
cwtl
dec
mov
lret
mov
cwtl
cmovg
cmc
rorb
rorl
mov
xor
mov
mov
ret
jecxz
or
xchg
adc
mov
ficoml
fwait
sub
xchg
xchg
pop
loopne
add
add
mov
in
ss
pop
mov
je
into
int3
dec
jmp
es
stos
adc
push
add
mov
enter
jl
cmp
es
out
xchg
add
and
jnp
mov
xor
dec
pop
xchg
movsb
imul
cli
out
data16
movsl
cmp
clc
leave
sbb
add
or
xor
call
sbb
sti
outsl
rol
fsubl
mov
imul
pop
xor
mov
in
shrb
js
call
js
mov
je
jno
jns
stc
mov
inc
test
cmp
adc
mov
into
sub
inc
jnp
jns
xchg
mov
jmp
mov
fdivs
pushf
stc
ja
test
int
popf
test
fidivrl
xchg
rorl
add
leave
loop
aas
adc
mov
sbb
sti
js
jge
imul
jb
fldenv
adc
sbb
add
insl
jnp
mov
add
sub
xchg
es
out
xchg
pop
enter
call
adc
xchg
stos
inc
xchg
jbe
jnp
dec
lock
xchg
cmpl
xlat
mov
icebp
notb
loop
lea
mov
sub
dec
rcrb
in
xor
movsb
sub
hlt
fdivl
int
jae
aad
pop
in
orb
test
inc
repz
and
jecxz
shll
aam
daa
repnz
pop
pop
fnstcw
lcall
sbb
es
mov
ljmp
je
cwtl
add
add
stos
js
mov
pop
scas
sub
push
adc
repz
and
loope
scas
jbe
jmp
into
lahf
test
add
push
cmc
jae
push
sub
jmp
ds
shll
lds
mov
mov
clc
adc
xchg
push
arpl
xor
jge
jge
xor
cld
dec
adc
mov
vmwrite
and
lods
add
fnstsw
sub
iret
and
jb
xchg
xor
sahf
or
inc
lods
jo
mov
iret
unpcklps
imul
sbb
jle
dec
out
mov
sub
sarl
cltd
xchg
andb
or
lea
or
in
mov
in
add
ljmp
push
out
jmp
sti
test
dec
inc
popf
mov
dec
test
xlat
js
xor
fsts
push
je
or
xchg
ds
bound
jns
sti
popa
mov
movsl
xlat
jno
sub
packsswb
ss
dec
sbb
xchg
nop
jne
add
inc
bound
mov
jno
mov
or
dec
aas
loope
mov
adc
adc
insl
lret
jnp
popf
mov
dec
shlb
inc
imul
jecxz
cmc
lds
jne
cmpsl
jg
mov
add
adc
add
in
rcl
sti
lea
stos
mov
lahf
lds
data16
and
xchg
lcall
mov
ret
mov
pop
out
xor
xor
mov
xor
xchg
or
mov
push
pop
xor
mov
into
movsb
add
aas
and
es
sub
cmc
je
fwait
mulb
or
lcall
push
dec
sbb
lods
xchg
xchg
xchg
lock
and
cmp
sbb
pop
adc
std
sub
negb
mov
xor
subl
dec
dec
scas
movsl
js
xor
das
lock
imul
jecxz
nop
and
lods
frstor
cwtl
cltd
pop
push
push
filds
cmpb
lahf
sub
pop
dec
loopne
addr16
inc
and
mov
addr16
jmp
sbb
out
into
icebp
jbe
adc
sti
je
movsb
mov
jmp
jge
and
sub
imul
out
push
daa
hlt
sub
aas
pushf
lret
inc
sbb
xor
push
mov
xchg
js
xlat
lods
icebp
pop
dec
icebp
xchg
mov
push
popa
and
inc
ja
fistl
ficompl
and
jb
inc
adc
cmp
mov
or
and
mov
mov
dec
out
loope
fwait
mov
out
lcall
mov
call
jmp
dec
add
mov
inc
in
cmp
enter
into
ja
mov
sub
pop
daa
inc
stos
add
pop
push
aaa
xchg
in
push
xor
out
xchg
fmull
lret
mov
pop
dec
dec
sub
adc
scas
or
pop
jae
pop
add
dec
sbbl
add
adc
dec
outsb
xchg
sbb
fidivrl
push
or
std
loop
iret
push
xor
sbb
cwtl
into
jbe
adc
mov
xor
loopne
mov
ficoms
push
shr
dec
icebp
push
fisubrl
shlb
mov
inc
test
dec
add
rcrl
xchg
and
pop
mov
push
cs
dec
mov
stc
lea
insb
std
mov
hlt
xchg
decb
ficomps
test
sbbl
loopne
imul
mov
sbb
xchg
rcrl
xchg
in
mov
push
or
jno
imull
sbb
arpl
dec
and
imul
fbstp
lods
add
pop
sub
adc
xor
mov
lahf
aam
lcall
rcrl
xchg
cwtl
in
sub
xlat
pushf
mov
jbe
fs
push
lahf
add
ret
push
inc
sbb
mov
cmpsb
out
cmc
xchg
outsb
scas
jecxz
or
jnp
shl
out
imul
dec
xorl
xor
aad
pop
xchg
andl
test
pop
repz
ficoms
sub
xor
or
and
aas
mov
cs
xlat
inc
sbbl
xlat
sbb
ret
xchg
pinsrw
adc
out
inc
add
jae
xchg
jmp
adc
je
in
xchg
mov
ds
mov
jl
xchg
out
sub
or
ret
es
fwait
arpl
mov
dec
jb
push
enter
and
lret
jmp
or
cmp
add
push
int
inc
stos
in
xor
iret
sbb
mov
bndldx
or
dec
push
jg
andb
addr16
orl
dec
repz
xchg
ljmp
arpl
sbb
jg
sub
inc
inc
sarb
xchg
add
xchg
mov
imul
sbb
add
ret
xchg
out
mov
std
pop
insb
pop
dec
imul
adc
or
sarl
xchg
cmp
xchg
lcall
inc
jne
jns
sbb
test
jno
cmp
iret
neg
in
inc
cmp
out
divb
ret
cmc
aad
mov
push
mov
push
push
and
test
pop
xor
push
scas
js
loop
lea
push
adc
mov
in
jmp
rcr
pop
stos
repnz
xor
xor
cmpsb
imul
lods
xor
pusha
faddl
outsl
bound
add
or
inc
ss
xchg
cmp
icebp
jns
push
sbb
pop
pop
mov
fnstenv
lahf
inc
and
mov
icebp
dec
mov
jle
xchg
push
cmp
or
or
mov
std
sbb
rorl
cs
lret
cwtl
hlt
arpl
inc
dec
add
and
movsb
popa
jno
sbb
mov
aas
ljmp
push
add
xchg
push
mov
lahf
mov
insl
push
test
pushl
flds
imul
or
add
leave
cli
mov
or
imul
xchg
adcb
adc
mov
cld
incl
push
pop
sbb
out
push
add
adc
pushf
in
adc
xchg
mov
dec
fisubrs
mov
icebp
jg
mov
mov
jnp
adc
lods
gs
add
out
add
call
loop
call
jecxz
inc
scas
insl
clc
dec
pop
test
xchg
sbb
loop
xor
test
cmpsb
sbb
mov
mov
imul
flds
mov
je
ds
pushf
fldl
cli
add
sbb
mov
xchg
out
inc
imul
decb
arpl
jle
shl
in
outsb
das
sbb
dec
adc
outsl
sti
in
addr16
fldl
mov
jne
jl
xchg
sub
iret
or
negl
shrl
shlb
std
jg
divl
int3
pop
fs
cmpsl
cmp
pop
cltd
inc
aam
mov
mov
push
add
inc
les
mov
inc
fildll
clc
mov
xchg
nop
xchg
pop
jecxz
cmp
movsb
adc
test
pop
arpl
jne
pop
mov
cmpsl
pushf
aam
lods
xchg
stc
stc
jge
stc
es
cli
js
pusha
call
enter
mov
mov
fcomp
movsb
cmpsl
mov
and
inc
ds
mov
dec
sub
rclb
mov
mov
xchg
cltd
cmp
in
pop
inc
leavew
jmp
jmp
mov
mov
movsl
fs
push
rol
sub
jmp
dec
push
inc
mov
push
xchg
pusha
push
test
pop
pop
dec
lods
enter
lahf
fs
jp
and
xchg
mov
mov
mov
and
sub
mov
cmp
repz
std
insb
sahf
or
lds
or
inc
adc
fs
insl
enter
pop
into
mov
xor
into
adc
xchg
mov
into
adc
lods
mov
mov
pop
dec
clc
mov
aaa
fstl
idivb
out
je
repnz
push
jmp
inc
sub
shr
and
jp
shll
adc
jp
dec
arpl
cld
push
xor
ja
mov
mov
mov
and
imul
push
aaa
stc
inc
sub
sbb
mov
jmp
pmuludq
mov
je
pop
jb
cmp
pusha
sbb
incb
push
sub
adc
add
fildl
dec
arpl
inc
adc
js
ljmp
rclb
xor
out
pop
shll
imul
cltd
xlat
bound
push
mov
scas
adc
sub
dec
fbstp
in
sahf
push
aaa
int3
sbb
scas
sbb
and
mov
inc
negb
sub
add
repz
mov
jns
mov
push
adc
imul
pop
cmc
lock
bound
out
lret
lahf
test
mov
leave
xor
mov
xchg
and
mov
lea
loopne
xchg
xor
cmp
out
jmp
pop
ret
aad
xchg
inc
jne
psubb
cs
add
and
xchg
xor
jb
pop
leave
inc
push
cmp
lods
and
aas
repz
daa
movsl
int
dec
dec
xchg
sub
dec
cmpsb
xchg
in
or
fcomip
rcrb
adc
bound
test
cli
ficoml
mov
enter
popa
fldt
dec
jecxz
xchg
rcrl
dec
js
mov
push
loop
scas
add
leave
inc
sbb
cmp
lcall
popa
sahf
pop
sbb
cmp
and
jmp
iret
inc
leave
xor
add
cltd
pop
and
mov
push
bound
xlat
xchg
pop
movsl
cmp
or
and
jl
push
mov
sub
scas
popf
mov
ret
mov
nop
dec
lock
or
cmovae
sbb
xor
push
push
sub
ja
leave
or
popl
fistpl
das
cmp
les
mov
fsub
fs
mov
stc
addb
jg
mov
je
hlt
imul
jae
pop
and
pushf
mov
push
adc
popf
mov
fbld
ret
and
stc
ffreep
or
fsubrl
je
cltd
adc
shl
lock
adc
fdivl
sti
push
mov
fcmovb
sub
es
xchg
xchg
xchg
out
loopne
and
insl
mov
shll
lret
mov
xor
cmpsl
in
rol
sub
xchg
fldcw
nop
shrb
xchg
incl
lds
cmpsl
jge
bnd
mov
cmp
jnp
mov
outsl
jmp
mov
shll
lret
cmp
mov
ja
push
sbb
add
pop
loopne
cmpl
movsb
mov
in
xchg
mov
mov
dec
pop
mov
xchg
inc
push
push
cs
daa
xor
movsb
loopne
call
sub
rclb
and
xlat
mov
in
negl
push
push
or
test
divl
adc
add
pusha
pop
and
insb
dec
mov
int3
cmp
sti
mov
call
push
cmc
dec
aaa
lock
pop
mov
sub
cmp
add
jp
push
sub
movsl
cmp
das
pop
cld
mov
xor
aas
xchg
mov
xchg
cmpsl
add
rclb
jne
ret
sbbl
cltd
mov
fldcw
sahf
cmc
in
imul
add
fidivrs
or
mov
sbb
movl
jno
fidivrl
les
push
fsubrs
and
dec
shrl
xlat
cmc
cltd
cwtl
push
inc
mov
add
movsl
insl
int
xchg
movsb
sar
pop
iret
xor
inc
insl
push
fwait
dec
into
xchg
shr
fs
or
repz
xchg
pop
stc
xor
cmpsb
loop
push
es
push
int
mov
pop
xchg
repnz
mov
call
or
js
lcall
xor
adc
mov
dec
ja
and
insb
mov
dec
mov
ja
movl
int
test
js
sub
sbb
jp
pop
lret
aam
outsl
sbb
iret
into
and
dec
int
dec
movsl
mov
sbb
jnp
xchg
add
in
jb
push
dec
rorb
insl
push
mov
sub
addr16
test
cmpsl
dec
pop
gs
shlb
sbb
dec
sub
ret
inc
or
movsl
je
scas
xchg
rolb
xor
cmpsb
mov
lods
nop
gs
imul
dec
mov
pusha
repz
add
das
push
jne
push
or
repz
rol
dec
sbb
aam
unpcklps
xor
std
sti
cmp
cmpb
adc
movsl
es
xor
popf
cmc
jne
pop
movsb
mov
shll
xchg
add
orl
inc
sbb
aaa
pushw
mov
outsl
jle
jno
xor
pusha
push
pop
mov
push
xchg
stc
push
aad
out
in
popl
sbb
movsb
and
push
xchg
into
lock
push
cmp
addr16
and
test
popf
fcomps
push
call
add
jge
pop
mov
inc
jb
rolb
out
rol
mov
sbb
cli
adc
dec
dec
ficomps
xchg
je
add
fwait
cmp
mov
sub
sub
roll
dec
popa
jnp
repz
pop
sbb
xchg
rcrb
in
jo
xor
mov
jmp
jg
add
jb
push
push
jnp
sbb
cld
adcl
in
in
outsb
jg
aas
repnz
imul
sub
loopne
movsl
xchg
dec
sbb
sub
add
stos
lret
mov
cmp
mov
fimull
sahf
es
pop
push
jl
fs
mov
pop
dec
jecxz
enter
adc
or
sbb
bound
negl
fucomip
mov
sti
push
loopne
iret
add
add
pop
enter
or
sahf
pushf
jl
jg
pop
mov
xor
add
xchg
xor
push
mov
adc
mov
movsl
das
orb
out
in
js
xor
mov
aad
fdivrs
inc
jmp
push
out
cmp
add
cmp
lea
test
mov
or
xchg
jne
cwtl
inc
or
repz
mulb
inc
lea
jb
lds
adc
cld
in
out
repz
ret
dec
and
cmp
aad
push
shll
push
jne
mov
ret
mov
es
addr16
ljmp
stos
add
imul
cmp
push
xchg
xor
inc
pop
add
ss
add
adc
std
rolb
mov
rcrl
dec
push
xor
nop
dec
pop
fldl
rcll
add
xor
push
mov
repnz
cmp
nop
xor
out
stc
xchg
pushf
clc
jne
data16
repnz
add
mov
add
mov
mov
test
and
repnz
and
xchg
push
mov
or
sbb
dec
cli
les
jns
movsl
adc
das
hlt
stos
scas
cs
in
add
xor
ja
mov
xchg
aas
mov
mov
add
adc
pop
cvtpi2ps
mov
gs
sub
testb
ss
sbb
loop
mov
xor
sub
add
les
jmp
repz
add
jb
lret
sarb
push
popf
daa
in
lcall
jno
mov
push
stos
in
add
or
mov
push
lds
movsl
shlb
and
pusha
inc
insl
pop
fiaddl
rorb
popf
jle
leave
push
mov
sbb
ljmp
gs
push
mov
jne
mov
in
adc
lods
fidivs
lods
cli
je
push
pusha
out
test
dec
pop
in
data16
or
and
es
lret
je
jne
ds
les
inc
das
xchg
mov
jae
push
imul
outsb
ficomps
xor
xor
xchg
out
inc
sbb
fs
clc
or
jle
push
fwait
sub
sbb
xor
mov
xchg
imul
add
rol
xchg
sub
sarb
adcb
or
or
push
inc
sbb
ja
std
xor
call
sbb
sbbl
fidivrl
xchg
aaa
mov
sbb
cmp
xchg
mov
dec
push
push
aaa
aad
insb
push
pusha
pop
jo
pop
jbe
mov
mov
and
daa
addb
jbe
fadds
fsubrs
sbb
imul
push
jbe
dec
mov
out
lret
cmp
or
cld
in
jmp
icebp
add
cs
int3
jae
lods
int
xchg
xor
out
sti
jl
pop
jp
cmove
cmp
mov
dec
xchg
iret
jns
shll
scas
adc
cmpsb
cmp
and
addr16
imul
push
call
insl
leave
psrld
jle
inc
jnp
push
pop
std
js
jnp
int
sarb
lret
push
xchg
inc
mov
jns
rcrl
jns
cli
mov
sar
mov
das
inc
or
lret
clc
pop
sbb
aaa
int3
in
mov
ror
add
mov
pushf
mov
pop
bound
jbe
into
aad
pop
jecxz
mov
pop
dec
stos
leave
sub
or
loope
dec
aam
mov
fdivp
rolb
lahf
xchg
and
pop
xor
fs
pop
pushf
and
leave
inc
aam
xchg
mov
inc
xchg
and
adc
lcall
sub
in
in
inc
and
xchg
add
mov
aas
daa
je
mov
lods
xchg
push
cwtl
and
aam
pop
mov
jp
adc
fdivl
pop
mov
shlb
andl
mov
jb
aam
stos
ror
pop
sbb
adc
data16
dec
xchg
iret
in
loopne
movsl
jl
sbb
push
or
subb
mov
loopne
xchg
aam
outsl
mov
mov
adc
vmwrite
bswap
arpl
cmp
imul
std
outsb
pop
pop
sbb
lahf
dec
test
and
enter
jnp
vmulps
dec
leave
pmulhuw
loopne
pop
mov
rolb
dec
push
mov
hlt
cs
ret
enter
stc
aaa
mov
push
inc
and
xchg
clc
cmovs
sub
mov
cmp
outsl
add
pop
hlt
pop
sbb
sbb
xchg
dec
mov
xchg
jae
or
mov
dec
xor
inc
xorl
aam
mov
test
in
adc
push
mov
sti
test
fisttpl
xchg
mov
xor
add
lahf
sbb
push
into
mov
add
bound
jns
cli
sub
jle
outsl
xor
es
test
and
jl
rcrl
loopne
mov
mov
lcall
aad
cmp
xchg
add
lahf
outsl
mov
xor
movsl
inc
rcrb
fs
lret
push
pop
sahf
daa
push
cmpsb
popa
add
das
movsl
movsb
imul
das
mov
fmul
dec
rclb
fistps
sbb
stc
mov
cmp
and
in
sub
inc
xor
rclb
jecxz
jno
pop
iret
ja
pusha
inc
dec
std
mov
jo
or
ss
inc
insl
insl
fsubr
sub
iret
pop
push
in
leave
pushfw
sbb
aaa
push
lcall
out
cmp
stos
arpl
inc
pop
xchg
add
mov
stc
shl
mov
scas
sub
mov
inc
dec
les
hlt
lret
mov
add
and
ss
dec
jbe
jnp
out
inc
xchg
xchg
jb
lret
xor
add
aam
or
cmp
cld
decl
jmp
out
pop
xor
daa
inc
mov
cmp
insl
xchg
inc
fistpl
movsl
add
pop
in
sbb
mov
pop
adc
and
fwait
jbe
cmp
in
sti
hlt
adc
push
cmp
inc
jle
xor
cmp
jge
and
jo
jae
push
outsl
adc
imul
sahf
lcall
fsubrp
sti
out
popf
xchg
mov
call
ret
mov
das
pusha
sub
mov
lret
mov
and
icebp
adc
sub
in
dec
inc
xor
fiadds
cld
imul
cwtl
shl
cmpsl
rcr
cmpb
ds
insb
mov
mov
rolb
inc
xlat
stc
out
sbb
arpl
ret
pop
into
sbbb
repz
icebp
pop
jb
aad
in
xchg
pop
ja
xor
rcr
ds
test
adc
cmpsl
incb
cmp
in
sbb
cmp
iret
xchg
les
dec
leave
mov
pushf
in
xchg
js
insl
insb
in
xorb
jecxz
inc
sbb
jns
jne
pop
rcr
push
aad
sarb
cmp
jae
fmull
jb
or
pop
test
out
pop
aaa
pushf
mov
and
test
mov
pop
xchg
jo
das
add
push
lret
jmp
test
mov
push
push
pop
sbb
int3
push
notl
xchg
movsl
adcl
addr16
xchg
jb
mov
xchg
inc
and
sub
jg
ljmp
cli
xlat
fdivrs
push
inc
lahf
sti
sbb
sub
jmp
xchg
lock
pop
add
subl
negl
pushf
xchg
mov
sbb
scas
fdivs
mov
jp
fimuls
xor
xchg
lods
cmp
jae
out
into
adc
lods
adc
sbb
jb
mov
cmp
push
fistps
in
mov
dec
loope
into
icebp
pop
jo
cmp
adc
sti
loopne
xor
mov
inc
cmc
cld
lds
js
fistps
xchg
push
cmpsl
mov
shlb
mov
jmp
dec
fwait
jecxz
stc
leave
sub
in
sbb
pop
pusha
mov
call
ficoms
icebp
xchg
int3
sbb
fdivrs
add
nop
pop
lret
pop
mov
idivl
fiadds
mov
das
pop
push
xor
push
test
outsb
testb
mov
jns
int3
scas
mov
xchg
cmpsl
bound
idiv
and
fwait
cmp
sbb
mov
push
mov
fsubrs
add
sahf
push
pop
push
jmp
xchg
inc
testl
adc
push
sti
push
cs
mov
add
pusha
repnz
test
pusha
sub
pusha
sahf
inc
call
mov
cld
mov
lea
lahf
pop
jecxz
xorb
in
pop
into
addr16
cli
push
lea
xchg
subl
cmp
repz
es
pusha
push
jns
ds
xor
push
cwtl
adc
cwtl
mov
xchg
movsl
out
fistps
punpckhbw
stc
jmp
jmp
fstpt
dec
adc
popf
movsb
cmp
sbb
jae
aam
inc
shlb
aas
cmp
ljmp
push
jg
loopne
jecxz
push
je
add
jne
cmpb
das
leave
xlat
decl
test
rcr
push
cwtl
fildll
sbb
mov
loopne
mov
or
mov
aam
mov
jge
mulb
repnz
imul
pop
lods
gs
pushf
cmpsb
fildl
out
popa
repz
lds
test
add
and
test
mov
add
clc
sti
roll
sbb
add
push
outsl
iret
cwtl
aad
pop
test
insl
mov
mov
leave
loopne
leave
repnz
sub
outsl
stc
fldt
and
cmp
inc
cmp
leave
sbb
inc
pop
add
lds
pop
jg
sub
add
in
or
repz
jo
push
pop
cmc
and
movsb
cmpsl
inc
and
jae
imul
cltd
dec
pop
imul
int
xor
icebp
mov
adc
iret
sub
mov
dec
xor
clc
dec
lahf
xchg
stos
or
loope
stc
sub
cmp
dec
add
out
rcrl
ret
sbb
daa
dec
mov
mov
or
mov
loopne
divb
rcrl
mov
fcmovnbe
inc
sbb
pop
daa
ds
enter
aam
mov
outsl
dec
in
push
out
das
scas
xchg
fs
xchg
pop
outsb
popa
stc
cltd
and
jb
cltd
and
mov
pop
mov
call
mov
fldenv
sub
push
pop
and
mov
add
arpl
std
insl
out
adc
ret
xchg
movsb
xor
out
shlb
lcall
mov
jle
inc
mov
and
xchg
out
and
jmp
lds
cmpsb
mov
jl
es
cwtl
jmp
adc
pop
jl
push
outsl
movsb
push
stos
push
rcrb
les
cmp
pop
std
insl
xor
dec
xchg
lahf
adc
and
push
dec
test
mov
pop
or
inc
dec
movsl
test
pushf
jbe
in
push
hlt
dec
mov
sbb
call
xchg
into
mov
lret
push
int3
jbe
ds
mov
pop
icebp
mov
cmp
test
in
sbb
test
mov
lss
dec
insb
mov
lea
dec
pop
xchg
icebp
push
mov
int
filds
test
push
cmp
push
decb
push
or
cmp
gs
pop
repz
pusha
jne
mov
xor
imulb
xlat
jl
inc
sub
addr16
pop
add
enter
iret
stos
aas
stos
cwtl
mov
sbb
push
out
mov
icebp
aad
xor
dec
dec
shl
cmp
cmpsl
adc
mov
sub
cmp
inc
aam
pop
jp
sbb
xor
mov
loopne
pop
fstpt
or
nop
icebp
cmpl
sbb
iret
inc
mov
xchg
mov
push
cld
orl
mov
lds
or
inc
ret
xor
aaa
test
push
mov
push
lea
xor
out
xchg
mov
cwtl
adc
mov
fistps
and
popf
and
mov
inc
or
ds
add
movsl
test
and
jecxz
mov
sbb
xchg
fisttps
jne
mov
outsb
jg
and
sub
dec
xor
loopne
jp
jae
pop
jb
mov
mov
xchg
push
sahf
test
inc
fxch
fldenv
xchg
and
sub
jp
jns
call
or
les
cmp
push
ds
adc
fucomip
pop
shlb
xor
mov
cmp
fstpt
in
jb
pop
in
daa
popa
jnp
xlat
sub
lds
add
cmpsl
jmp
fdiv
rolb
dec
mov
dec
xor
mov
cmp
inc
sti
in
pop
fimuls
xor
outsl
sti
adc
push
loope
adc
pop
jp
push
push
movsb
inc
arpl
sub
hlt
shr
dec
sub
scas
mov
into
push
and
inc
mov
data16
cmp
icebp
or
adc
ret
adc
cmpsb
rorb
cmp
push
xchg
xchg
loop
mov
stos
adc
neg
pop
stc
push
roll
pop
xlat
inc
adc
and
add
mov
andb
push
fbstp
or
and
sub
les
xor
push
xrelease
adc
jno
mov
lods
xchg
dec
lcall
cmp
jmp
mov
lea
adc
cmp
fsubrs
outsb
pushf
mov
jg
mov
or
push
pop
adc
lret
daa
pop
ljmp
mov
mov
xchg
ret
fs
lds
and
and
jmp
xor
or
lods
bound
jmp
shr
dec
iret
mov
mov
cwtl
adc
xchg
in
popf
jmp
adc
into
das
sbb
call
inc
rcr
and
dec
pop
push
add
rorb
xor
pause
scas
lret
cmpsb
out
dec
out
adc
ret
punpckhwd
popf
inc
xor
insl
jnp
addl
xchg
sar
pop
jno
sub
xor
loope
add
sub
jbe
test
fnstcw
shl
push
hlt
push
push
mov
scas
sub
aam
xchg
insb
ret
scas
aas
aam
adc
das
clc
cmp
inc
sbb
dec
in
cmp
sub
mov
je
mov
push
push
dec
int
std
or
clc
push
movq
push
jno
ja
mov
stos
mov
lret
div
xchg
aam
add
jmp
mov
mov
mov
sub
sahf
sub
mov
in
test
sahf
ror
mov
aas
dec
out
sbb
adcb
shl
mov
int
dec
leave
add
test
ja
xchg
mov
or
pop
xor
add
shr
aaa
jns
push
mov
sbb
movsl
addr16
push
into
cli
pop
push
insl
push
pop
or
xchg
nop
je
cmp
mov
push
dec
test
dec
mov
jg
sbb
hlt
mov
decb
xchg
fstpt
xor
mov
repz
repnz
add
lret
xchg
and
je
mov
mov
xchg
incl
nop
jge
pop
add
lods
dec
leave
cmp
lods
and
jae
loop
std
lahf
lds
cs
or
sahf
repnz
mov
pop
test
push
clc
mov
nop
inc
aaa
jae
icebp
ds
pop
les
scas
test
jge
adc
sub
cltd
cmp
cmp
loop
xlat
mov
shll
jmp
mov
push
cmpl
cmc
mov
mov
jg
out
push
jbe
cwtl
imul
inc
mov
dec
push
pop
push
pop
stos
mov
cwtl
or
cmp
lcall
cs
xchg
inc
cltd
xchg
aam
xchg
out
sbb
xor
stc
sub
jmp
fstpl
jo
and
out
add
lods
test
lea
shll
dec
pop
xchg
arpl
ficoms
imul
dec
sub
stos
cld
adc
imul
and
fdivrs
push
into
movl
cwtl
jecxz
andb
dec
jns
push
jb
mov
idivb
mov
push
in
out
int
lcall
mov
mov
lcall
pop
ja
loopne
xchg
pop
pop
in
lea
add
addr16
cld
call
pop
sbb
sarl
and
les
insb
shl
cmp
clc
in
or
aad
push
mov
popa
push
inc
loopne
mov
xchg
hlt
ret
das
xlat
and
jl
fsub
hlt
ret
mov
mov
mov
cld
jae
in
mov
mov
jge
test
xchg
push
mov
sbb
mov
mov
sub
nop
daa
out
xchg
adc
sub
stos
or
ljmp
xor
jnp
inc
xchg
lock
pushf
movsb
imul
cmp
sarb
sahf
fs
rcr
repz
mov
adc
sbb
or
push
call
push
inc
mov
jmp
push
adcb
ljmp
mov
add
daa
inc
add
mov
inc
pop
in
in
sub
std
lock
sbb
dec
fbld
push
jbe
sahf
sti
add
sbb
and
js
dec
adc
jnp
pop
pop
xor
idiv
rcrl
test
test
pop
push
lds
pop
mov
jmp
sbb
dec
push
in
ja
fs
cmp
xlat
sahf
xor
push
mov
cmp
ror
fsubs
out
iret
lcall
gs
dec
push
xchg
out
fwait
je
pop
push
aaa
out
cwtl
loop
adc
rolb
stos
bound
xor
pop
and
lea
cwtl
orl
insb
out
inc
cmp
jnp
in
jge
fstl
add
popf
outsl
imul
inc
mov
cmp
lahf
xchg
push
decb
sahf
and
add
ret
outsb
inc
inc
movd
push
jne
addr16
xchg
push
insl
sbb
cmp
mov
mov
into
test
dec
or
rorl
inc
dec
xchg
das
or
bound
pop
cli
jae
mov
xchg
aad
fsubrl
cwtl
shll
pusha
testl
sahf
les
mov
xchg
cmpsl
in
adc
and
inc
lret
dec
cwtl
sbb
clc
pop
xchg
ret
fdiv
clc
ret
xor
push
adc
xorl
sbbb
cmp
loopne
cld
cmp
stos
into
pop
loope
shlb
cmc
mov
popf
push
mov
sub
idivl
imul
jle
hlt
and
or
mov
pop
xchg
das
fcmovne
popf
push
ljmp
sahf
sbb
xor
sub
add
addr16
mov
loopne
push
sub
pop
call
push
adc
pop
adc
fimuls
enter
jo
daa
jge
iret
stos
pop
sub
mov
cmp
out
xchg
push
pop
xor
gs
es
ds
aaa
inc
adc
sub
cld
ret
jno
dec
sahf
test
push
sbb
rorl
das
cmpsb
dec
test
jl
sbb
stos
mov
push
push
orb
adc
lods
sub
jae
cmp
lds
fdivp
xor
adc
leave
fcompl
jb
xchg
and
lods
jmp
cmp
ret
pop
roll
xchg
lahf
stos
dec
mov
jmp
xor
cmp
adc
and
dec
movsb
push
adc
popa
mov
cmp
xlat
mov
mov
mov
add
or
cmpsl
sbb
bound
enter
push
or
sub
sbb
cmp
enter
gs
pop
add
outsl
nop
cwtl
xchg
in
pop
dec
xchg
std
xor
push
movsl
test
xchg
xchg
mov
or
mov
jl
and
xchg
xor
rcr
lahf
push
aam
test
adc
cld
pop
xor
push
sbb
sub
jbe
cmp
fisttpll
pop
jp
in
xchg
movsl
inc
lret
push
sti
sbb
or
out
test
in
xchg
and
sub
cmpsl
sub
xchg
aam
xchg
sbb
cli
sbb
ja
movsl
into
fldt
xor
ss
adc
adc
aad
sahf
or
or
cltd
shrl
ret
adc
mov
movsl
xor
sbb
or
lcall
xor
sbb
sbb
scas
nop
out
xor
in
jbe
int3
int
push
push
lret
rorb
sub
lcall
mov
push
in
into
sbb
lret
pop
dec
call
fldt
sbb
jno
xchg
push
insb
lahf
or
sbb
sbb
mov
xor
fs
cli
mov
cmp
ss
cmp
scas
mov
fldenv
out
push
loope
ss
mov
mov
jbe
scas
mov
cmp
ljmp
inc
jo
mov
rcr
fildl
js
push
pop
jbe
jns
mov
das
jo
fcomps
int3
jecxz
sar
shll
das
repnz
push
inc
add
push
and
mov
hlt
xor
outsb
gs
push
mov
push
pop
inc
cltd
jmp
repnz
inc
repnz
or
pop
sahf
sarb
movb
inc
test
or
inc
jb
adcl
loope
mov
xor
push
jl
dec
popf
xchg
lret
scas
cmc
push
sub
stos
out
and
hlt
hlt
rolb
adc
test
stos
jp
fistps
push
loop
int
pusha
cmp
xchg
mov
lcall
gs
divl
push
mov
in
cmpsl
popa
dec
lret
dec
popa
mov
filds
mov
push
push
pop
dec
ja
lcall
jne
pop
sub
push
int
out
imul
lret
pop
and
movsl
cmp
mov
pop
pushf
mov
xor
loopne
mov
test
mov
fs
push
jge
cmp
insl
add
stos
sub
ret
mov
int3
sti
pushf
pop
mov
xchg
shll
pop
inc
das
leave
and
int
nop
sub
mov
mov
imul
cmp
cltd
pop
fsts
adc
xchg
mov
sbb
lret
pop
mov
jb
push
mov
test
cmp
xchg
mov
enter
popa
mov
shr
rorb
xchg
adc
jns
xor
int
add
jecxz
mov
sbb
repz
rcr
xor
or
xor
sbb
imul
jnp
bound
lds
cli
adc
das
mov
xor
sarl
mov
repnz
fisttps
xchg
imul
cmp
cmp
loop
mov
in
sti
mov
or
dec
and
repz
sub
jge
in
push
cmp
cmpsl
push
xchg
fadds
pop
pop
ss
aad
in
push
mov
test
fdivr
in
mov
dec
outsb
fsub
mov
divl
cs
pop
and
pop
cwtl
outsl
cmp
xchg
mov
out
call
addl
mov
ficoml
adc
enter
push
xchg
and
cltd
pop
cli
mov
push
sbb
les
out
arpl
aaa
xor
int3
shll
pusha
dec
jbe
scas
mov
mov
mov
movsl
mov
sti
sbb
int
mov
addr16
insl
sub
cltd
lods
sbb
jo
loope
adc
test
or
cltd
xor
sbb
xor
aam
sub
shrb
cs
inc
xchg
stos
mul
rorl
xchg
les
xchg
aas
lods
jmp
adc
add
add
adc
call
cmp
popa
mov
or
jae
and
leave
pop
cmp
loopne
pop
out
dec
fcoms
xchg
nop
jp
jg
push
xchg
or
cld
jbe
stos
enter
pop
jbe
mov
or
pop
pushf
inc
addr16
lods
cmp
pushf
push
xor
out
adc
jg
inc
mov
out
ja
sar
add
lods
out
xchg
in
inc
test
add
pushl
in
scas
mov
add
cli
or
pop
mov
and
mov
xchg
adc
pop
inc
mov
testb
pop
cmp
adc
jb
pop
sub
dec
or
inc
pushf
sbb
fmuls
push
aam
gs
ja
cltd
out
cmp
xor
outsb
fistpll
xor
and
lahf
sahf
push
adc
pop
scas
push
int3
cmpsl
sub
add
xchg
sub
test
mov
add
cmc
popa
mov
in
loope
pop
adc
cwtl
mov
xor
aas
mov
mov
imul
jbe
cwtl
add
sbb
lahf
insl
lods
pop
ret
xor
mov
and
aam
psraw
inc
imul
mov
imul
pop
mov
aad
adc
xchg
xor
add
inc
inc
lcall
cs
push
xchg
pop
or
hlt
es
and
enter
fildl
xchg
loopne
ss
fucom
call
jns
mov
inc
and
sub
xor
ret
dec
mov
scas
nop
pop
cmp
jne
fidivrl
cmp
aaa
addr16
imul
mov
pop
jae
pop
cmp
fdivp
cmp
push
mov
dec
lahf
idivl
xor
sub
pop
xor
imul
and
mov
xor
xor
xor
scas
add
imul
es
les
mov
xchg
inc
outsb
sbb
lcall
in
add
push
pop
xchg
iret
push
mov
outsl
loopne
mov
cmp
cmp
test
dec
jecxz
ret
mov
ss
fdivrs
lods
add
sub
fiaddl
xor
adc
jae
jb
hlt
movsb
xor
inc
inc
iret
and
daa
dec
push
sahf
sub
mov
push
jge
cli
daa
mov
cmp
sub
add
cmc
ljmp
add
xor
gs
test
pushf
in
push
xor
out
jne
mov
cmp
cltd
dec
outsb
adc
rol
adc
cmp
int3
fcmovbe
jae
ss
les
in
or
add
cli
lea
popa
mov
jo
js
out
mov
push
mov
rorb
jmp
paddusw
pop
sbb
mov
imul
jb
jecxz
insl
iret
push
in
call
out
adc
mov
mov
and
mov
and
sbb
in
sti
fiaddl
add
in
shlb
dec
jl
lds
pop
arpl
mov
pop
int3
sti
sub
cld
or
push
sub
clc
dec
subl
loopne
insl
push
mov
movl
sub
in
push
xchg
pop
push
dec
or
cmp
cmp
fwait
cmp
ja
addr16
pop
and
jp
fsts
jae
inc
lret
mov
fistpll
cld
sbb
dec
cmp
cltd
jecxz
stc
xchg
or
and
sub
fs
rorl
insb
out
dec
inc
xchg
jg
loop
stos
push
xorl
cltd
xchg
dec
std
enter
push
ret
pop
movsb
bound
fistpll
jecxz
sbb
int3
mov
jbe
in
add
test
xchg
pushf
cli
inc
sbb
jp
mov
aas
adc
push
pop
jge
test
push
inc
inc
xor
cmpsl
pop
mov
in
lret
leave
sbb
sbb
aas
gs
xchg
gs
add
jb
jmp
mov
jl
xlat
xor
jmp
pop
aam
inc
popf
inc
cmp
add
or
es
sbb
push
addr16
mov
les
test
pop
subb
pop
xchg
repnz
jp
iret
jmp
js
sub
popw
push
rcrl
sbb
repnz
addb
push
fldt
ret
imul
or
stc
fwait
loope
pop
or
out
jns
lods
dec
das
pusha
incl
mov
ja
cwtl
fldl
cmpsb
xor
or
fidivs
push
iret
jmp
xor
test
cmp
jb
cmp
mov
mov
mov
mov
inc
mov
fistps
and
notl
cld
mov
cmc
mov
test
dec
sbbb
repnz
lcall
cld
pushf
daa
or
pop
repz
data16
add
testl
mov
jecxz
pop
mov
pushf
push
cs
mov
int
sub
adc
movsl
ret
mov
cs
cmc
add
xchg
push
jle
sbb
add
fidivs
cli
fstpt
inc
push
ret
xchg
xchg
add
or
je
add
in
pusha
inc
sarl
sbb
adcl
enter
mov
jmp
repnz
fidivs
pop
out
shll
pusha
ja
icebp
rcrb
cmp
xchg
mov
dec
sbb
jnp
stc
decb
fstpl
push
ret
xor
test
and
repnz
inc
mov
or
stos
out
fstl
iret
popf
arpl
xor
loopne
outsl
sahf
sub
dec
pop
pop
mov
dec
push
outsl
ljmp
mov
mov
adcb
mov
sub
dec
pop
sti
push
es
and
mov
enter
xchg
and
push
and
dec
insl
sub
mov
xchg
and
aad
pop
adc
mov
jmp
lret
cmp
add
ja
popa
fcoms
movsl
xor
arpl
pop
test
lds
xor
stos
nop
arpl
and
sub
sbb
repz
imul
loop
mov
popf
jle
es
mov
out
dec
repz
jo
pop
adc
je
imul
loopne
pusha
inc
in
imul
popa
aaa
or
pop
mov
mov
mov
mov
cmpsb
scas
or
outsl
xor
mov
nop
fs
mov
and
cmp
sub
pop
pop
add
mov
jmp
shrd
xchg
mov
rol
mov
mov
fists
in
mov
cld
or
jecxz
sbb
and
sti
cli
clc
xchg
cmp
pop
mov
push
lcall
dec
xchg
outsl
inc
jl
mov
mov
shrb
stc
cld
dec
lods
dec
and
jecxz
andl
das
js
lahf
cmpsb
pop
rcll
or
xchg
mov
push
jae
mov
dec
das
stos
sbb
out
and
incb
ret
dec
inc
mov
aad
arpl
and
mov
push
arpl
iret
loope
sbb
or
cs
mov
es
dec
stos
leave
das
xchg
push
and
jge
or
je
inc
adc
sub
negl
inc
or
jmp
insl
mov
fcoms
int3
out
ror
cmp
xchg
les
fadd
shlb
sub
mov
adc
rcrl
out
rep
pop
push
cmovnp
mov
mov
in
push
fisttpl
repnz
xchg
dec
popf
shlb
pop
add
mov
ret
sarb
ret
lcall
or
xchg
insl
or
adc
ljmp
lcall
in
lea
aaa
adc
das
ja
cmc
jl
pushf
jp
les
and
jne
mov
xchg
cmp
xchg
je
movsl
cmp
test
les
xor
sbb
repnz
lock
jecxz
mov
cld
je
mov
cmc
jns
dec
nop
jno
std
xchg
scas
xchg
into
loopne
fs
jl
dec
mov
sti
sub
inc
mov
xor
rolb
hlt
jl
add
mov
notb
mov
adc
inc
fldcw
adc
mov
imul
dec
dec
in
add
xchg
mov
mov
fninit
test
outsb
adc
or
cmp
bound
and
or
pusha
jae
movsb
outsl
rol
pusha
sub
std
or
pop
push
or
push
call
loope
cs
mov
fnstsw
int3
rcrb
push
lock
cmp
push
mov
pop
ficompl
jbe
aad
mov
inc
cmp
and
arpl
je
mov
insb
inc
fmull
mov
push
sbb
pop
add
sbb
arpl
stos
enter
cld
sub
cmp
mov
or
test
dec
nop
shll
pop
imul
insl
loope
lock
xchg
xor
pusha
add
mov
inc
mov
int3
adc
mov
shlb
cmpsl
cmp
mov
out
pop
movsb
orl
repz
push
dec
in
fidivrl
cld
xor
mov
in
popf
cmpsb
out
mov
sub
sbb
mov
or
call
lahf
cmp
sbb
and
mov
iret
es
rcr
dec
fildl
jg
pusha
dec
dec
movsl
fs
jo
in
cmp
sub
lahf
std
add
shl
pop
mov
mov
es
dec
pop
mov
rcrb
sahf
sub
hlt
test
pop
mov
not
add
adc
or
adc
jmp
mov
push
xchg
test
jae
dec
and
pcmpgtw
movsl
in
xchg
cmp
iret
fnstenv
jnp
stos
jge
movsb
cmpsb
call
jb
stos
jbe
icebp
dec
ret
and
fldcw
mov
sub
cmp
dec
loopne
in
repz
movsb
hlt
scas
insl
xchg
outsl
xchg
pop
stos
iret
stos
cmp
cwtl
inc
sbb
mov
mov
push
jne
das
mov
mov
xchg
sbb
jb
fmul
sahf
adc
push
pop
add
dec
dec
sbb
out
xor
std
mov
pop
cmp
xchg
out
jecxz
and
or
sub
cld
push
xchg
nop
ljmp
imul
adcl
pushf
xor
dec
mov
xchg
xlat
int
mov
addr16
mov
lcall
add
pop
mov
call
xor
cmc
push
add
insb
repnz
aam
jae
aam
dec
jnp
push
push
outsl
mov
stos
xor
test
divl
rorl
and
add
add
and
nop
ret
call
pop
adc
pop
daa
cmc
gs
xchg
stos
paddusw
movsb
sahf
add
dec
in
mov
mov
mov
and
xchg
dec
out
in
mov
xorl
aad
cwtl
or
sub
mov
or
stos
add
xorb
and
lret
fstpt
arpl
dec
pop
adc
inc
or
and
sbb
lock
and
inc
std
fcoms
xlat
xchg
les
hlt
fnstsw
push
addb
inc
mov
aaa
mov
in
inc
inc
xor
scas
xor
cs
adc
sbb
out
push
in
popa
fs
lds
add
adc
inc
adc
lods
stos
lret
sbbl
mov
or
stos
dec
and
mov
xchg
fnsave
mov
pop
out
aad
out
jmp
inc
push
int
int
popf
gs
ss
outsb
push
orl
loopne
in
push
shrl
mull
push
hlt
leave
adc
scas
pop
rorb
sub
pop
loop
lods
add
push
lret
add
push
xor
mov
cmpsb
mov
pop
xor
fidivrs
imul
mov
ds
in
out
cs
jmp
cs
out
sbbb
js
arpl
mov
pop
jbe
jmp
sbb
mov
inc
jge
int3
movaps
loop
sub
outsl
mov
jge
sub
mulb
insb
inc
inc
daa
mov
pop
and
pop
push
adc
jmp
add
sub
rcl
rol
mov
shll
out
xchg
or
mov
lds
enter
negl
ret
mov
xchg
movsl
mov
pop
arpl
push
cmpsb
cmp
xchg
pop
ds
lret
rep
loop
push
inc
shl
jl
add
call
pop
add
mov
push
push
add
mov
outsl
cld
scas
std
out
jmp
out
xchg
aad
lods
sahf
add
add
leave
setp
movsl
mov
push
xor
inc
aaa
push
mov
jo
xor
dec
orl
fisttpl
mov
push
mov
aas
into
sub
pop
mov
or
ljmp
flds
lock
cli
fs
sahf
jae
aam
add
dec
adc
mov
xchg
int3
mov
and
popa
cld
and
sbb
xor
ljmp
dec
inc
jle
repnz
call
jmp
dec
sub
repnz
and
mov
sarb
arpl
test
and
inc
aas
out
inc
and
dec
or
cmp
jnp
cmpsl
mov
sti
outsb
inc
mov
or
inc
cld
in
dec
pusha
xchg
inc
jbe
pusha
jo
cmpsb
jmp
jecxz
mov
js
push
push
fsts
aam
or
cmp
lret
in
push
lods
scas
jbe
ror
push
adc
leave
bound
mov
xor
shrb
cwtl
or
popa
jg
testb
adc
add
mov
mov
inc
adc
out
out
cmpl
adc
adc
shlb
and
data16
pop
and
nop
popf
inc
adc
pusha
sarb
mov
or
rorl
and
mov
mov
fstpl
stos
notb
fdiv
jae
push
movsl
push
inc
xor
or
inc
adc
mov
sbb
inc
dec
movsb
pop
jbe
jmp
int3
pushf
ss
xchg
jae
insb
push
push
mov
mov
lahf
in
jns
xor
cmp
and
mov
cmc
std
jg
jb
fistps
daa
push
dec
daa
pop
shlb
add
xchg
std
and
jne
adc
mov
shll
test
fwait
mov
sub
xor
push
sbb
push
incb
mov
xor
test
fucomp
movsl
jnp
adc
dec
popl
ss
sub
sbb
sbb
adc
add
fidivl
pop
jmp
jns
xchg
lods
inc
cmc
cmp
jne
dec
out
adc
pop
sub
les
add
jecxz
rcll
test
dec
fdivp
ret
jge
mov
xor
aas
mov
and
ja
push
subl
mov
lea
test
pop
sbb
jns
mov
lock
stos
ret
sbb
imul
insb
xor
jmp
dec
cmpsb
mov
sbb
out
mov
scas
push
xchg
js
stos
cmp
mov
mov
out
sarl
mov
movsb
sub
cmpsb
out
adc
loope
jg
leave
les
fsubrs
subl
popf
shrb
inc
test
enter
into
js
fwait
mov
movl
mov
sbb
daa
sub
mov
sub
aam
pop
enter
mov
pmulhuw
xor
dec
bswap
lods
sub
mov
adc
cmp
or
jp
pushf
dec
insl
push
test
je
iret
xchg
lea
inc
pop
test
mov
lods
and
mov
inc
out
cmpl
iret
ljmp
gs
push
or
xchg
lods
jl
mov
test
clc
cmp
xor
mov
xor
push
in
or
mov
call
in
outsb
sub
sbb
xor
adc
pop
or
call
inc
dec
or
mov
jo
push
jmp
hlt
or
jl
xchg
std
or
out
inc
or
in
jecxz
push
and
jbe
movsl
or
push
xchg
setae
lcall
nop
sahf
sbb
test
in
sub
hlt
xor
xchg
sbb
pop
inc
ret
inc
jmp
shrb
idivb
push
insb
push
nop
xor
test
ret
outsl
insl
je
shl
popf
cs
addr16
jle
xchg
jbe
shrb
cmpsb
add
loope
xor
pop
mov
jns
lds
mov
leave
jb
insb
pop
xor
lea
or
ret
es
xchg
mov
aam
mov
psrld
scas
bound
addr16
xlat
notl
sbb
popf
xchg
sub
scas
lahf
aad
loope
push
and
lea
in
cmp
inc
pusha
ds
adc
cli
xor
or
push
pop
add
push
push
imul
scas
mov
shr
jns
inc
imul
xchg
push
jne
lcall
ss
inc
xchg
popa
jecxz
pop
xor
addr16
daa
add
push
outsb
inc
dec
mov
lock
fnstenv
push
and
icebp
mov
cmpsb
outsb
push
xchg
adc
orb
mov
or
ret
into
cmpsb
insl
rcl
cltd
sbb
cmp
filds
inc
pop
dec
ret
notl
mov
pop
aas
inc
icebp
mov
decb
add
inc
push
insl
add
jnp
std
test
adc
mov
adc
jb
jo,pt
push
shl
test
in
mov
mov
out
cli
xchg
bound
mov
sbb
push
pop
jl
out
stos
loopne
int
add
subl
jno
cmp
dec
popw
mov
jmp
adc
push
rcrb
cltd
or
push
jo
les
fwait
aad
lcall
mov
mov
sarb
xchg
pop
mov
pop
js
test
lret
arpl
cmp
lock
xchg
insl
dec
stos
and
nop
roll
aas
daa
ret
rcrb
loopne
jae
sub
inc
xchg
add
mov
and
scas
out
adc
xor
popf
fcoms
xor
push
and
stos
out
lcall
outsl
or
sbbb
outsl
and
int
sti
in
mov
dec
inc
gs
xor
stc
repnz
sbb
rorb
pop
xor
mov
popf
popa
lahf
mov
test
pop
xor
icebp
insl
bound
mov
arpl
outsb
pop
xchg
repnz
mov
daa
cmp
cwtl
mov
push
cmp
rclb
pop
mov
push
and
xor
and
and
sbbl
mov
mov
cld
nop
aam
inc
shrb
pop
test
mov
mov
andb
mov
dec
test
movsb
xor
xor
mov
jno
sbb
dec
lcall
pop
in
pop
push
mov
sti
fwait
sub
aas
je
mov
jp
or
mov
sub
inc
int3
in
mov
js
pop
rep
adc
test
pop
push
inc
mov
dec
push
xor
call
xchg
std
dec
int
mov
rclb
les
adc
mov
test
push
daa
xchg
les
xor
cmp
bound
cmp
sbb
xchg
pop
testb
push
faddl
in
fsub
div
lock
call
outsl
aad
scas
in
xor
cmp
outsb
clc
mov
test
out
xchg
push
pushf
inc
sub
xor
hlt
lods
pop
sub
inc
xor
and
mov
push
js
pop
fistps
add
jg
mov
aad
pop
add
enter
test
or
mov
out
mov
push
jp
mov
sbb
add
rcll
and
sahf
mov
or
dec
adc
dec
pop
roll
xchg
popa
insb
xlat
lahf
push
rcrb
in
stc
xor
pop
orb
lods
subb
cmp
cwtd
js
inc
repz
iret
mov
outsb
inc
call
push
lods
scas
mov
jecxz
imul
iret
mov
sbb
mov
jno
xor
incl
mov
push
cmp
mov
mov
dec
adc
pop
out
jne
rclb
cmp
sti
incb
das
push
mov
cmp
mov
andl
out
pushf
push
fidivrl
mov
neg
jp
or
mov
into
push
aas
dec
inc
vmwrite
mov
adc
sbb
xchg
cmpsb
and
or
mov
or
je
int3
and
xorb
outsl
push
xchg
std
mov
popf
dec
aad
cld
cmpsb
test
jns
je
pop
push
clc
xchg
pop
stos
lds
dec
loopne
cmp
ret
shrb
sub
std
leave
out
test
loopne
mov
fucomi
push
outsb
mov
xchg
lods
mov
mov
sub
loop
in
pop
jb
lret
mov
mov
lret
std
mov
mov
xor
out
mov
inc
das
mov
push
shl
lock
mov
mov
pop
xchg
pop
xchg
lock
add
jb
pop
sub
xor
lcall
mov
aad
lret
sub
mov
bnd
xchg
mov
pop
mov
les
cmp
dec
xor
xchg
and
and
xor
hlt
lock
adc
notl
leave
dec
loope
mov
cmpsl
out
stos
cmp
mov
out
inc
mov
aas
sub
loopne
or
push
push
inc
gs
xorb
inc
repnz
jne
and
int3
lret
adc
lcall
and
les
lods
jecxz
jbe
mov
out
ljmp
clc
inc
add
mov
loopne
sahf
outsl
pushf
or
sbb
loopne
lods
sub
sbb
iret
xor
push
sub
mov
sub
or
mov
add
cmpsl
fcoms
lock
mov
fs
aas
adc
daa
loopne
pop
mov
jo
in
aas
dec
push
gs
inc
inc
test
out
jne
popf
sarb
or
sbb
clc
or
cmp
cli
jo
in
or
push
pop
mov
mov
cmp
xchg
or
pop
cltd
aad
jecxz
icebp
in
pop
aad
or
outsb
push
jecxz
icebp
repz
leave
xor
cli
xor
xchg
pop
cs
mov
lods
pop
xchg
push
cmpsl
mov
add
xor
add
dec
ja
dec
mov
ret
into
xor
xchg
sub
push
jg
aas
adc
iret
std
je
es
imul
or
add
add
dec
int
dec
adc
inc
sbb
push
inc
dec
sub
lret
inc
nop
add
mov
jb
xchg
cwtl
lods
movb
adc
inc
jmp
sarl
dec
js
push
imul
fucomip
xchg
lods
mov
push
mov
sub
lods
add
ret
gs
mov
dec
repnz
mov
mov
sahf
jl
inc
adc
jo
and
sbb
sbb
mov
and
fs
aam
xlat
pop
movsl
mov
pop
push
js
xor
sahf
lea
ds
ds
pushf
in
sahf
sub
test
inc
push
adc
mov
mov
sub
rcl
movsl
jnp
pushf
adc
add
lahf
sub
mov
sets
clc
push
mov
pop
and
mov
nop
call
dec
push
aaa
mov
repnz
roll
pop
call
mov
adc
scas
mov
cli
jno,pn
sti
jg
fs
mov
out
in
and
int
push
arpl
jno
int3
repz
and
cmp
shl
negl
or
lods
aam
cmc
and
mov
xchg
or
xor
hlt
cli
fidivrs
jae
aaa
or
mov
and
xchg
push
inc
popf
gs
cmp
xchg
insl
dec
pop
mov
int3
aam
sub
add
pop
xor
adc
cli
test
adc
or
pop
jb
es
push
pop
shrl
xchg
push
and
test
xchg
rcl
pop
ret
dec
pop
imul
xchg
jmp
jg
andl
sahf
add
ret
lock
xchg
adc
jl
sbb
mov
mov
or
push
add
sbb
and
stos
andb
xchg
push
or
repz
jle
aaa
jl
stos
stos
jecxz,pn
pop
mov
jge
mov
lret
cld
pusha
push
cmp
dec
jae
iret
push
stc
or
inc
xor
sub
adc
addl
fs
adc
aas
adc
inc
push
cwtl
int3
pop
pavgb
push
pop
mov
bnd
sti
pop
repz
push
lods
jle
cli
push
cmp
cmpsb
jmp
addr16
je
xchg
lea
xchg
js
pop
aam
mov
add
xchg
pop
iret
mov
aas
push
inc
xchg
dec
sahf
out
mov
insl
das
outsb
jmp
dec
ljmp
in
add
xlat
gs
mov
js
push
ljmp
inc
jp
mov
mov
cld
leave
cmpsb
inc
adc
lret
orl
lea
insb
jl
pushf
loope
rorb
xor
std
pop
xchg
xchg
pop
mov
aas
jnp
push
cli
jo
mov
cmpl
nop
or
hlt
pop
mov
cmp
ljmp
xor
and
or
sbb
mov
sbb
das
int
xchg
add
iret
xchg
dec
scas
lret
test
xorb
fwait
out
mov
push
cli
mov
dec
jl
xor
cmp
jge
xor
jp
sarl
imul
aad
jecxz
data16
dec
in
adc
shl
cmc
jne
inc
shlb
sar
and
push
repnz
ja
out
cmpsb
arpl
jle
pop
scas
sub
enter
xchg
cmp
add
dec
or
push
push
lods
xor
bound
fisubrl
mov
dec
lock
mov
xchg
add
fwait
mov
dec
add
or
insl
cli
xor
sbb
dec
sbb
lds
or
and
or
sarb
jmp
lret
lock
sbb
dec
inc
jle
push
test
pop
jge
in
dec
data16
pop
xchg
add
xchg
mov
and
xchg
and
stos
pop
ret
hlt
adc
incl
sbb
push
mov
clc
jg
dec
cmp
test
xchg
add
xlat
pop
das
cltd
adc
xchg
lods
jne
push
shl
jp
lret
clc
inc
faddl
sarb
and
popa
xor
test
loopne
call
xor
inc
mov
pop
sbb
movsb
jns
imul
aam
nop
adc
fiadds
push
push
pushw
ds
mov
xchg
mov
loope
leave
fidivl
mov
sarl
cmp
lock
shlb
addr16
in
xchg
push
or
in
jbe
add
cmp
fdivs
movsl
mov
sbb
mov
fbstp
xor
mov
cmp
or
clc
mov
punpckhwd
mull
hlt
ret
fistpl
jl
push
push
inc
aam
gs
mov
pop
pop
mov
mov
cmp
cltd
cmc
mov
sub
aam
dec
sbb
cmp
pop
inc
jp
dec
and
ds
jb
push
push
movsb
cmp
aas
mov
mov
adc
roll
push
sbb
pop
dec
lret
ss
pop
sub
mov
jmp
mov
sbb
xchg
and
lcall
aas
dec
cli
push
outsl
icebp
ds
dec
cmp
gs
ja
mov
call
or
int
imul
lds
clc
stos
enter
inc
outsl
mov
js
popa
push
mov
addr16
cmp
pop
pop
sub
cwtl
lea
jecxz
cld
jg
lahf
pop
cwtl
pop
add
inc
xorb
sbb
mov
jg
mov
lret
cmp
push
aas
jle
test
icebp
inc
jne
and
mov
popf
mov
mov
lret
loope
jp
imul
popf
jne
popa
push
loopne
dec
xor
inc
loop
dec
scas
sub
sub
inc
adc
inc
in
loopne
jne
sarb
arpl
add
sbb
mov
xchg
inc
xchg
arpl
inc
test
add
mov
cmp
pop
imul
daa
test
inc
jbe
mov
xor
ds
pusha
out
adc
xchg
mov
jp
cmp
frstor
dec
adc
adc
fsts
out
jmp
call
pushf
xchg
outsb
cli
pop
cwtl
mov
inc
add
mov
push
mov
das
mov
mov
aam
push
or
xor
lret
js
stc
mov
pop
roll
sub
ficompl
xchg
jmp
enter
xlat
dec
sbb
dec
or
mov
cmpsl
push
cmp
add
push
fwait
decb
dec
sub
call
mov
pop
test
mov
mov
xor
cmp
mov
mov
jnp
xor
mov
es
out
js
inc
mov
and
jne
pop
lds
popf
lea
mov
push
lods
in
rolb
mov
jmp
xor
jb
cld
xor
in
fcoml
xorb
fsubs
mov
pushl
sbb
fstl
je
mov
cwtl
and
mull
das
jle
or
jbe
jp
scas
jmp
xchg
pop
cmp
jne
mov
cmpsl
ja
adc
add
pusha
shll
shrl
stos
sub
lds
mov
mov
xsaves
andb
test
or
nop
sbb
mov
ljmp
push
dec
aaa
dec
xor
push
clc
mull
adc
mov
sbb
out
mov
cmpsb
nop
in
mov
cmc
jmp
sub
test
es
out
test
cmpsl
in
dec
mov
mov
push
jg
or
mov
rorl
mov
shrb
inc
aad
nop
arpl
jns
inc
in
jno
cmp
in
xor
ljmp
cwtl
or
add
flds
cmpsl
mov
ljmp
sahf
add
movsb
fidivrl
cmp
add
or
repnz
lea
xchg
mov
pop
shll
iret
addl
ds
sarl
lret
push
sub
rcrl
iret
inc
addb
cmp
push
jle
enter
fldt
pop
bound
arpl
mov
dec
mov
ret
cwtl
adc
mov
and
mov
sti
add
mov
sub
add
pop
xchg
cmp
add
out
jb
leave
push
pop
loop
out
imul
int3
sub
inc
test
mov
sbb
jns
sub
rcrl
mov
int3
xlat
push
add
faddp
cwtl
insb
mov
mov
sbb
push
mov
cli
scas
mov
add
out
test
notb
fs
cmp
pop
add
mov
test
sbb
sub
stos
sarb
xchg
push
and
adcl
jmp
sub
out
and
in
pop
xchg
push
push
jecxz
mov
popa
sti
mov
add
mov
jge
pop
mov
push
xor
mov
xor
aas
jecxz
aas
cmc
jl
xor
jle
andl
pop
push
repnz
stos
fidivl
mov
inc
lea
mov
mov
mov
icebp
inc
dec
and
dec
dec
mov
imul
push
aam
fisttpl
pop
nop
fldl
jge
push
jb
inc
dec
xchg
mov
or
leave
push
pop
fildll
inc
sub
popa
mov
das
cmp
push
into
and
ss
xor
cli
addr16
lahf
mov
add
aad
pop
mov
clc
icebp
xchg
xchg
pop
mov
test
sub
std
mov
jecxz
cmpsl
or
fstpt
add
mov
push
xor
jae
jo
xchg
in
aaa
mov
mov
test
add
inc
mov
inc
dec
xchg
sbb
cmc
imul
insl
mov
lret
cmp
or
pop
daa
push
adc
ficomps
rorb
int3
xor
inc
fistpl
sub
jle
fsts
push
mov
pusha
mov
cmp
adc
not
mov
in
sub
ja
mov
cmp
xor
stc
xor
pop
out
cmp
inc
dec
add
mov
int3
fidivrl
dec
test
add
mov
imul
add
in
sbb
xlat
xchg
ds
int3
dec
js
push
adc
xchg
cs
sti
and
xor
shr
jle
push
cmp
push
call
divb
shll
jecxz
mov
fistpll
push
and
sub
movsl
orb
and
outsl
test
in
jns
mov
cli
aad
les
dec
pop
test
add
add
int
repnz
inc
dec
mov
stos
pop
popf
mov
dec
xor
dec
dec
cltd
sbb
cmp
sbb
xor
and
xor
adc
mov
scas
mov
or
and
mov
xlat
xchg
mov
nop
sbb
in
loop
cmc
add
decl
lahf
call
cmp
lods
mov
loop
pop
mov
mov
cmp
adc
js
int3
das
mov
xchg
sub
xor
cmc
push
xchg
std
adc
sbb
push
mov
lods
idivb
fucomip
pop
stc
loopne
or
xlat
rol
add
adc
jo
daa
or
add
push
push
xor
in
xrelease
sub
pusha
dec
jae
cwtl
mov
xchg
ds
mov
pop
sahf
jo
sbb
xchg
lods
into
mov
and
jns
test
pop
std
cmp
iret
ljmp
insb
jb
movsb
pop
lods
loopne
xchg
cmc
scas
loop
cmp
lcall
shlb
push
mov
mov
loop
pop
xchg
scas
aam
outsb
imul
es
stos
aam
daa
clc
mov
clc
dec
lods
jbe
test
sbb
and
or
jmp
fildl
jnp
mov
enter
push
fisttpll
pop
loope
rorl
sbb
insb
push
jb
repnz
inc
pop
mov
mov
faddl
ljmp
fadd
lcall
xor
cltd
or
xchg
jmp
call
sbb
mov
test
int
js
orl
sub
in
cmc
jle
cwtl
out
mov
and
pusha
insb
jle
dec
idivb
scas
xchg
fs
mov
push
cli
jg
sarb
subl
add
and
sbb
fs
push
std
mov
xchg
cmp
in
mov
stos
fcomp
inc
rcr
aam
test
sbb
and
mov
cmp
add
lcall
scas
jmp
jg
gs
mov
and
adc
xchg
xlat
mov
pop
fbstp
sub
push
lea
push
hlt
push
push
push
fsubrl
push
or
negl
adc
fs
mov
pushf
mov
dec
dec
nop
sti
cmp
gs
mov
lcall
jle
out
jbe
ds
cmp
loopne
sbb
dec
and
pop
mov
arpl
mov
mov
xchg
mov
inc
sbb
adc
std
mov
xchg
fistl
jns
ss
xor
out
adc
xor
push
imul
mov
stos
popa
mov
or
mov
lahf
mov
arpl
cmpsl
scas
inc
inc
out
push
push
xchg
repz
iret
pop
out
add
loop
jle
aaa
mov
lods
mov
imul
jp
or
fwait
outsb
adc
loopne
mov
mov
clc
mov
mov
lods
shlb
aaa
jae
mov
rdtsc
shlb
cmp
sbb
test
adc
sbb
jge
xor
pop
movsl
call
iret
adc
fists
xchg
xchg
cmp
or
ret
mov
inc
int
fs
in
xor
xchg
out
lock
test
mov
dec
dec
fsubr
dec
pusha
data16
and
and
inc
xchg
daa
sub
loopne
test
ljmp
sub
fld
xchg
clc
adc
cli
push
rorl
push
and
add
cwtl
fmuls
xor
add
push
shll
fs
imul
inc
cmp
dec
xor
mov
repz
stc
or
outsb
adc
loop
dec
sub
sub
xchg
pop
mov
in
ja
stc
xor
mov
cltd
sub
aas
push
lcall
push
sbb
fiadds
xor
into
mov
push
ja
repnz
dec
xchg
mov
lea
or
sub
push
jo
jle
inc
orb
out
mov
and
test
add
in
insl
mov
dec
and
pop
sti
adcb
sbbb
sub
mov
xchg
addr16
gs
xlat
cmp
int
add
dec
int3
cmpsb
int
hlt
add
js
jg
and
xorb
and
pop
pop
int3
xchg
emms
fdivrs
in
push
add
fs
mov
iret
xor
xchg
test
outsl
ret
or
xchg
fimuls
add
push
repnz
xchg
pop
mov
test
inc
mov
mov
aam
cmp
pushf
inc
mov
shrl
mov
and
mov
mov
or
stos
push
cwtl
adc
inc
and
xchg
sti
call
xor
cmpsb
jne
ljmp
pop
mov
adc
out
mov
je
lret
cmp
rcrl
jae
aad
aam
hlt
push
clc
sub
int3
or
rcll
addr16
repnz
icebp
pop
xchg
mov
gs
rcrl
and
xor
out
popa
mov
fidivrs
in
std
lods
shl
push
ret
popf
std
adc
dec
fwait
cli
mov
loopne
aam
es
pop
jl
xchg
leave
cli
ret
pmullw
mov
pusha
mov
das
mov
data16
dec
push
cmp
mov
jmp
pop
cmpsb
cs
clc
mov
mov
xchg
inc
aas
xchg
dec
dec
nop
sub
inc
xchg
jmp
cltd
sbb
push
sbbb
xor
inc
dec
notl
inc
and
mov
stos
or
orb
push
lods
and
xchg
xor
cs
lahf
push
aam
fwait
sub
aam
inc
add
insb
cmpsl
lock
test
ret
mov
mov
jmp
outsb
scas
inc
cltd
and
xorb
cmp
inc
push
js
xor
lret
cltd
icebp
test
adc
xchg
testl
dec
dec
pop
adc
cmp
sbb
out
dec
loope
and
fbstp
shrb
sub
mov
popa
xlat
out
or
mov
push
and
sub
insb
shl
push
pop
insb
mov
lret
loopne
inc
pop
cmp
adc
popf
add
adc
enter
or
mov
sahf
sub
mov
sub
ret
fstps
sarb
inc
pop
or
inc
das
mov
outsl
aad
xchg
pushf
cmp
scas
mov
stc
ret
mov
daa
aaa
pop
adc
int
ja
pop
pop
not
mov
push
lret
vpsubsw
ljmp
popf
sbb
adcl
xor
pop
in
fs
adc
sti
pusha
xchg
fimuls
inc
cmc
xchg
adc
dec
arpl
fldcw
icebp
out
adc
aaa
push
out
mov
mov
imull
adc
jae
lretw
mov
data16
enter
jno
popa
cmp
pop
in
mov
daa
sbb
dec
cltd
stos
dec
sbb
push
mov
cmp
pop
ljmp
aam
repnz
ss
sarl
movsl
aaa
ficompl
sub
or
ja
pop
repnz
je
cmpsb
sub
pop
and
pop
and
sbb
pop
int3
jns
movsl
scas
adc
imulb
pop
jno
or
daa
loope
lods
xor
outsl
sub
xor
lods
out
cld
cwtl
fidivrl
mov
push
xchg
cmp
mov
dec
xor
inc
cmc
push
cmpsb
es
xchg
push
dec
mov
subl
xchg
test
add
pop
and
in
push
cmpsl
mov
stos
mov
xchg
inc
xchg
mov
or
xor
push
fisttpll
aam
adc
xchg
cmpsb
repz
es
sti
pop
adc
mov
enter
dec
jb
xor
xor
sub
inc
bound
pusha
sub
int
lret
les
filds
popa
adc
jnp
ljmp
jbe
pop
arpl
popa
pop
inc
lods
push
mov
sub
and
stc
jns
popa
aas
pop
lea
and
sbb
pop
repz
mov
and
stos
push
push
cmp
jge
push
inc
lcall
push
loope
sahf
adc
jns
lods
add
fmuls
mov
dec
add
mov
push
cmp
mov
push
add
pop
mov
adc
out
rclb
push
out
push
inc
into
leave
mov
inc
xchg
sbb
leave
mov
mov
stc
xor
push
mov
add
xor
test
xchg
mov
out
push
daa
ret
mov
push
push
aaa
pop
push
cmpsl
pop
dec
jne
push
sub
xchg
xchg
icebp
popf
test
lahf
mov
nop
cmp
jne
add
cmpsl
or
pop
push
test
sub
iret
cmp
dec
inc
or
out
in
sti
lret
sbbl
xor
mov
mov
push
test
pop
cmpl
scas
or
popf
xchg
mov
adc
mov
mov
or
mov
jns
sbb
inc
out
cld
mov
add
movsb
imul
dec
inc
call
xor
in
stos
hlt
movsl
adc
inc
subl
movsl
mov
xchg
daa
out
ret
and
fisubrl
aaa
insb
inc
cmp
or
xchg
int
and
push
jo
xlat
int3
rcrl
out
mov
inc
daa
adcl
mov
addb
or
out
ja
dec
xor
aaa
pop
mov
hlt
sub
inc
stos
or
sti
loop
scas
test
xchg
rcrl
stos
add
sbb
mov
xchg
aam
test
mov
lret
push
cmc
lret
icebp
mov
test
fwait
paddb
sti
dec
lret
gs
push
aas
pop
jns
test
cmpsl
insb
bound
test
repnz
inc
cmp
add
push
cmp
pop
into
out
push
sbb
pop
sbb
jae
test
inc
aam
fcmove
in
js
mov
fstl
xor
ja
xor
jae
pushf
sahf
jnp
xor
mov
mov
jg
jge
adc
fnstcw
sub
add
inc
mov
outsb
aas
movsl
xchg
mov
jmp
mov
je
and
cmp
add
repz
mov
lahf
out
dec
movl
lret
fidivrl
mov
call
push
mov
sbb
cmc
je
lret
push
mov
lea
jg
test
mov
push
aad
xchg
dec
sub
shrl
lcall
mov
mulb
stos
sbb
shrl
enter
aaa
lret
in
add
fsubs
fstps
imul
popf
push
pop
mov
pop
dec
arpl
push
mov
cmp
mov
clc
fdivrs
jl
mov
call
idivl
sbb
pusha
push
imul
mov
fcoml
jl
pop
je
insl
aam
sbb
dec
fyl2x
cmpsl
sahf
cmp
pop
outsb
and
xor
mov
pop
iret
arpl
popa
in
xor
testl
mov
xor
stos
fsubl
inc
int3
and
pop
andl
adc
mov
ret
sbb
xchg
mov
xchg
nop
and
cltd
push
inc
out
xchg
jecxz
lahf
negl
testl
out
fxch
mov
add
cwtl
cmp
jge
sbb
pusha
dec
and
jb
jmp
dec
add
add
pop
bound
popa
lods
scas
push
jl
fidivrs
in
loop
inc
mov
xchg
scas
xchg
pop
push
sahf
ret
aam
popa
mov
testl
scas
fadd
push
fwait
imul
outsb
push
push
pop
lods
xchg
jmp
test
mov
lahf
mov
hlt
filds
sbb
inc
or
xlat
in
and
push
sub
insb
pop
xor
int
mov
sarl
dec
and
mov
rcr
outsl
mov
jne
dec
inc
ficoml
mov
inc
mov
daa
cmp
and
dec
cwtl
or
data16
hlt
pop
dec
mov
pop
sti
or
popa
xchg
pop
mov
sbb
loope
pop
scas
jp
dec
mov
pop
or
jp
js
imul
xlat
pushf
add
lods
jle
aaa
jnp
pushf
lods
cmpsl
adc
xchg
ds
loop
and
pop
popf
add
sarb
mov
mov
sub
test
je
sub
outsl
das
das
fstpl
inc
mov
mov
aaa
push
mov
mov
push
mov
movsl
loope
ljmp
mov
adc
jo
push
mov
pop
aaa
mov
out
in
pop
ds
push
ret
sarl
sub
aam
pop
movsb
or
and
push
jno
mov
sbb
or
and
imul
add
push
inc
adc
mov
inc
js
mov
adc
divb
add
rcr
xorl
inc
in
sub
stc
scas
ja
xchg
mov
sahf
aaa
xchg
mov
and
repnz
or
lea
inc
mov
test
decl
xchg
xorb
mov
fs
push
pop
out
dec
pop
mov
pop
jae
push
out
jb
icebp
add
sbb
dec
adc
push
ret
je
ds
shlb
xchg
flds
out
or
aam
sahf
jns
loopne
aad
lds
sbbl
add
pop
cmpb
dec
stos
lds
xchg
push
es
xor
subl
mov
inc
adc
stc
outsl
pop
test
lahf
sbb
iret
nop
jbe
xor
mov
aad
ror
data16
push
inc
cmpsb
in
dec
fwait
mov
addl
in
iret
inc
in
inc
repnz
gs
sub
pop
pop
popf
xor
push
scas
push
push
sbb
dec
loope
pop
push
js
aam
les
jg
lcall
clc
lods
mov
pop
outsl
lahf
outsb
xor
cmp
enter
or
fs
mov
and
and
jmp
push
daa
ss
sbb
jp
cltd
mov
dec
gs
or
lret
inc
xchg
ret
mov
outsb
sahf
test
lret
in
jb
test
mov
mov
xor
mov
or
cmp
mov
nop
int
xor
imul
int3
push
cmp
cmp
imul
movsl
xlat
aas
negb
push
jge
mov
js
add
addb
sbb
inc
arpl
xor
xchg
fcmovnb
inc
test
adc
int3
psubsb
int3
sbb
and
aam
loope
jne
in
mov
cmp
scas
or
mov
xor
test
sahf
jo
aas
push
push
stc
fsubrs
push
jnp
int3
insb
rcrl
cmp
out
jae
mov
shl
push
leave
xor
pushw
xchg
scas
int3
inc
pop
push
loop
mov
in
cmp
jp
fidivrs
jle
mov
repnz
test
sub
push
inc
mov
in
addr16
push
ficompl
sub
jmp
mov
test
out
mov
mov
mov
cmpsl
jle
out
or
pusha
jecxz
adc
dec
sub
mov
pushf
sahf
cmc
lea
dec
cs
xor
push
daa
or
in
inc
fwait
outsl
or
hlt
pop
mov
jmp
movsb
sbb
pusha
ds
stos
sub
scas
add
jge
int3
sbb
pop
hlt
push
test
push
push
push
and
inc
in
ja
subl
cmp
dec
cmp
mov
stos
insb
out
ss
dec
nop
mov
cmp
arpl
fs
adc
push
xchg
in
es
xor
pop
fists
sub
loopne
jmp
sbb
call
gs
mov
lret
xor
sub
leave
xchg
sub
dec
jb
jo
or
into
imul
xlat
fsubrl
adc
adc
push
std
aaa
repz
es
inc
lret
and
lea
inc
cmc
loop
fwait
mov
int
ret
jge
andl
arpl
les
dec
imul
mov
int3
xchg
icebp
int3
adc
dec
mov
loop
pop
cmp
jnp
dec
inc
push
inc
dec
ljmp
mov
mov
mov
pop
and
lcall
dec
imul
in
bound
xchg
daa
mov
mov
adc
pop
out
data16
pop
mov
adc
insb
mov
and
out
hlt
loop
push
ja
mov
dec
inc
dec
lcall
clc
jecxz
shrb
outsb
scas
mov
addl
jb
jns
dec
fcomps
pop
jb
push
jg
icebp
loop
js
outsb
test
loopne
mov
jecxz
add
and
cmc
fwait
and
roll
push
lret
push
jge
notl
push
mov
mov
xor
mov
inc
cmp
stc
sbb
fmuls
add
and
dec
xchg
int
mov
fxch
dec
push
adc
pop
fisttpl
and
dec
fadds
add
insb
mov
dec
jecxz
or
mov
pushf
filds
rolb
stc
mov
mov
push
xchg
mov
roll
test
inc
mov
sbb
pop
es
mov
dec
das
int
dec
pusha
scas
jg
mov
mov
hlt
jae
mov
mov
adc
pop
and
add
push
xchg
aas
jns
dec
aaa
test
js
fmul
adc
and
or
shr
xor
cmp
imul
adc
adc
fwait
mov
jno
inc
ja
jns
push
cmpsb
inc
ret
pop
dec
sbb
jge
fsubr
mov
outsb
mov
fst
sbb
push
dec
rolb
push
sub
mov
test
fstl
rcrl
arpl
pop
data16
xchg
adc
inc
rorl
mov
add
pushf
outsb
lods
imul
cmp
lods
scas
std
and
lret
push
scas
cs
mov
pop
dec
scas
popf
add
push
adc
nop
dec
push
loope
jne
fstps
dec
shll
mov
sub
mov
cmp
push
xchg
mov
ret
bnd
imul
dec
push
push
xlat
mov
sub
mov
mov
sbb
or
inc
lds
pop
cmc
and
aaa
sbb
scas
lret
jle
add
ljmp
push
pop
outsl
mov
adc
push
js
inc
adc
push
mov
and
ljmp
push
in
mov
xor
xor
push
add
pop
shrl
push
jno
pushf
adc
sub
bound
test
subl
jnp
je
xchg
daa
cmp
push
xchg
adc
adc
fldenv
and
xchg
in
mov
inc
pusha
ja
dec
pop
ds
mov
or
jb
dec
mov
mov
dec
jae
push
jl
adc
mov
xchg
add
jp
xor
das
add
xchg
adc
push
lock
scas
hlt
out
push
aaa
push
enter
cmp
lret
mov
dec
xchg
dec
mov
leave
jl
push
in
cld
inc
xchg
pop
clc
icebp
adc
mov
and
sub
ja
cs
or
outsl
aam
xor
lcall
popa
shlb
test
xor
push
dec
cli
adc
inc
insb
or
xchg
push
jg
xor
add
mov
xor
add
jl
adcb
into
aad
xor
push
dec
fimull
mov
popf
outsl
jl
sub
inc
rcr
mov
arpl
scas
aas
sub
into
dec
lcall
aam
dec
mov
adc
pushf
pop
cmc
pop
fwait
mov
push
and
mov
push
int
sub
mov
sbb
es
xchg
add
out
lahf
aas
sbb
push
mov
adc
popa
and
pop
les
sub
fldl
nop
scas
push
mov
nop
out
or
rorl
mov
outsb
cmp
jmp
cmp
dec
dec
or
push
and
pop
fnsave
sub
lret
mov
mov
test
jp
loopne
jns
addr16
ss
imul
mov
push
lds
jnp
fldt
jne
data16
jecxz
or
lods
repnz
iret
sbb
xchg
xchg
mov
ja
and
std
pop
ss
push
sub
push
jmpw
and
fisttpll
adc
stc
mov
test
push
test
ja
push
ljmp
sub
push
mov
mov
iret
fisttpl
push
in
adc
sub
adc
mov
insl
xor
shr
pop
aaa
dec
mov
sbb
mov
push
pop
xor
int
arpl
test
mov
clc
mov
es
xchg
fmull
add
xchg
mov
cmc
sub
popf
dec
pop
or
add
popa
pop
call
inc
cmc
test
adc
xlat
adc
in
inc
jbe
mov
dec
pop
outsl
lods
jp
xor
lahf
pushf
add
pop
mov
test
push
cltd
insb
cmove
jb
mov
scas
das
xchg
dec
aas
dec
xchg
frstor
and
xchg
add
mov
mov
movsb
push
sbb
cltd
jg
outsb
mov
dec
testb
and
and
in
stos
scas
fs
xchg
iret
and
repz
inc
test
loop
idivl
and
insl
stos
cld
aaa
gs
jge
negb
push
push
adc
imul
shll
xlat
rcll
das
or
jle
cmc
bound
enter
subb
mov
aaa
les
inc
sub
lods
in
subb
jns
mov
ret
je
sub
pop
jge
and
sarb
mov
sub
pop
sbb
dec
sahf
jmp
mov
xchg
bound
les
inc
or
add
or
mov
xchg
jb
jnp
mov
push
sub
pop
mov
pushf
cmp
mov
std
dec
cmp
push
sarl
fcoms
jg
mov
inc
mov
stc
adc
or
adcl
pop
ret
mov
jo
negl
dec
aas
jno
sbb
iret
jecxz
je
pop
call
mov
hlt
cwtl
add
inc
imul
xor
sub
mov
dec
scas
cmc
inc
push
xchg
arpl
fidivrl
inc
lcall
and
sub
push
ds
mov
sti
fcmovnbe
or
mov
mov
pop
xchg
mov
inc
test
filds
xchg
repnz
insb
pop
aas
sbb
lcall
mulb
js
sarl
mov
imul
pushf
in
outsb
popf
out
xchg
adc
ret
lds
into
fiadds
or
sub
sti
xchg
sbbb
push
cmpsl
cmp
ljmp
lahf
mov
lret
cli
pop
jnp
repz
adc
pop
fisubrs
js
int
adc
cltd
mov
stc
iret
cmp
in
mov
mov
mov
push
and
mov
inc
dec
ja
cli
jb
decl
and
mov
inc
stc
insb
mov
and
int
xor
in
or
cs
jbe
push
data16
jmp
push
adc
sub
push
in
orb
icebp
pop
adc
xor
loope
dec
out
leave
xor
push
jle
lds
push
mov
xchg
test
lods
and
push
adc
stc
dec
daa
repnz
fbld
push
mov
enter
xchg
push
xor
icebp
adc
mov
pop
mov
push
jb
add
inc
addl
xchg
pop
lret
push
sub
adc
ds
xchg
out
lret
inc
fstpl
adc
out
jmp
outsl
ret
sub
mov
push
out
sub
xchg
inc
lock
sarb
fbld
test
push
mov
add
inc
loope
popa
inc
ret
pop
or
dec
xchg
mov
or
test
sub
js
inc
scas
ds
push
sub
imul
jg
aas
push
cltd
loopne
imul
mov
in
cld
xchg
ja
inc
mov
je
dec
inc
mov
pop
push
inc
nop
daa
scas
sub
and
cmpsl
aad
mov
and
cmpb
daa
inc
mov
vunpcklps
dec
pusha
cs
dec
fwait
push
adc
xchg
cmp
pop
jl
jbe
jp
addb
int
je
mov
push
push
xor
mov
in
mov
jl
mov
mov
cmpsb
out
push
mov
mov
inc
cmp
aam
cmp
in
repz
movsb
cltd
ret
or
lods
ret
add
int3
pop
push
shll
aad
push
sbb
int
test
sti
jae
hlt
jp
into
das
lods
ljmp
jle
dec
push
xchg
push
inc
xchg
inc
cmc
out
cmpsb
scas
insb
xor
or
out
ja
xchg
push
shlb
adc
sub
subl
mov
inc
das
ja
lea
and
pop
push
repnz
repnz
aad
xchg
frstor
shll
outsl
cmp
nop
fbld
pop
pop
mov
push
insl
lods
sbb
xor
out
sbb
loope
int
test
sub
dec
test
mov
jb
shrl
into
add
repnz
mov
lods
ja
and
jns
shrl
stos
sbb
sti
adc
ds
loopne
shl
imul
mov
fs
int3
sub
stos
mov
mov
cmp
mov
fcoms
adc
xor
mov
push
dec
movsb
mov
es
js
lods
iret
and
jno
cmp
xor
xor
pop
hlt
sahf
sub
sbb
out
movsb
lock
stos
pop
push
pop
out
sub
jmp
sbb
cld
fimull
inc
adc
es
jne
flds
jle
add
scas
jg
xor
sbb
add
sub
cmp
stos
loope
push
or
jmp
lods
and
in
and
add
ja
popa
mov
popa
sbb
adc
inc
mov
push
add
inc
and
loopne
dec
or
test
call
and
adc
xor
shlb
push
insb
push
jno
test
jne
fisubrs
or
mov
pop
or
lahf
mov
scas
sbb
and
xchg
mov
mov
sub
repz
xor
fisttpll
fbld
mov
daa
sti
dec
dec
xchg
dec
and
cmc
mov
mov
pop
jmp
cld
jg
mov
rep
jecxz
shl
test
lea
sbb
adc
mov
and
test
int3
xchg
fs
mov
imul
xchg
js
sbb
fisttps
daa
aam
jae
adc
in
mov
inc
adc
mov
outsb
cmp
add
xlat
adc
popf
test
scas
dec
rcll
jb
faddl
pop
mov
jmp
lcall
mov
add
mov
xchg
cmp
xchg
jge
jne
inc
scas
pop
push
fwait
inc
lods
pop
insb
sarb
les
js
scas
out
repnz
test
mov
or
jno
or
mov
aam
cli
movsb
pop
ljmp
sub
jae
add
xchg
xor
movsb
fs
sti
out
or
jp
in
or
test
ds
rol
xor
lods
or
push
insb
dec
aad
popf
std
adcb
es
scas
pop
movsl
out
pop
jge
add
outsl
push
addb
xchg
mov
fwait
jg
out
loop
jg
popa
pop
jbe
cld
adc
sbb
bound
xchg
cwtl
sarl
cltd
in
push
dec
aam
imul
popf
push
pop
mov
jns
pop
aad
xor
je
xchg
jb
mov
cwtl
jo
ja
push
mov
add
scas
movsb
xchg
xor
jge
dec
lock
outsl
pusha
mov
jmp
inc
jo
mov
in
mov
inc
xor
cli
adc
in
inc
pop
scas
cmp
movsl
xchg
xor
bound
push
repnz
or
jle
push
push
pop
jmp
or
pop
out
mov
scas
mov
sbb
push
loopne
je
push
sbb
pop
out
and
sbb
mov
xchg
testl
jg
decb
mov
insl
ficompl
cltd
insb
add
and
roll
daa
sbb
clc
jecxz
mov
scas
inc
adc
mov
call
dec
mov
out
sub
jo
xchg
pop
test
je
pminub
rep
push
sbb
popf
or
jns
mov
incl
shll
int3
xor
ljmp
pop
mov
in
lahf
xchg
xchg
xchg
pop
ret
loop
arpl
in
scas
jo
inc
jle
inc
mov
test
jp
cmpl
mov
jl
rcrb
dec
repnz
pushf
push
xor
jle
stc
loope
loope
cmp
les
cmc
push
rcrl
jae
or
out
dec
pusha
pop
mov
hlt
xchg
pop
rol
sub
jg
push
out
dec
mov
aam
addr16
cwtl
cmpsl
clc
mov
inc
iret
or
jge
mov
mov
pop
mov
dec
push
xchg
jno
push
add
or
sahf
pop
leave
lea
or
mov
dec
popf
sub
out
mov
jmp
test
ret
rorb
int3
shl
lcall
dec
insb
js
ret
cmc
repz
je
adc
mov
or
ret
mov
mov
shll
push
shl
cmp
lahf
inc
subb
inc
fwait
xor
and
das
xchg
xchg
cmpb
push
xor
scas
shrb
pop
push
push
push
sbb
je
neg
push
scas
fwait
jle
adcl
cmp
divb
out
outsl
mov
sti
call
jb
xchg
mov
outsl
xchg
lock
ret
mov
or
mov
or
ljmp
sti
sbbl
pop
in
jge
cld
jecxz
sti
negb
mov
std
int
repz
cmp
movsl
js
stos
mov
test
inc
call
mov
mov
or
xlat
out
pop
pusha
aas
ljmp
imul
mov
cmp
sbb
pop
adc
test
mov
add
dec
sbb
cli
mov
push
cmp
dec
sahf
sub
js
add
out
xchg
mov
cltd
mov
arpl
or
notl
sub
psubsw
sti
stos
inc
rorl
arpl
enter
lods
jo
sbb
outsb
into
push
test
pop
out
stos
fdivp
enter
fstpt
push
mov
sti
fisttpl
mov
lods
inc
stos
xor
out
jns
bound
xchg
and
pop
adc
int
cmp
lods
shlb
push
incb
js
outsb
mov
test
loope
popa
push
xchg
jmp
dec
xchg
adc
aas
mov
add
aaa
push
jne
adc
test
mov
test
ret
mull
es
dec
int3
dec
test
sub
repnz
xchg
fscale
or
push
out
ja
gs
cmpsl
nop
jmp
mov
call
je
xor
add
icebp
rcrb
roll
mov
cltd
sbb
and
adc
inc
sub
fdivrs
inc
call
aam
dec
popf
xlat
mov
mov
mov
or
mov
adc
cmp
scas
mov
imul
fnstcw
test
jbe
mov
cmp
fwait
push
cmpsb
push
mov
cmp
adc
in
xchg
xor
or
cwtl
test
mov
mov
imul
mov
xor
pushf
shl
add
loopne
lea
in
jmp
pop
xor
cmpsl
cmp
xchg
or
scas
and
scas
test
lds
or
push
frstor
mov
js
sub
mov
daa
or
inc
cmp
push
mov
xor
mov
lret
jl
and
adc
dec
mov
cmc
push
orb
fcomps
cld
push
adc
cltd
mov
or
inc
je
mov
lds
ret
bound
lds
iret
mov
mov
lcall
jl
imul
fs
mov
lahf
add
das
cmp
pop
adc
jno
hlt
lods
push
dec
int3
call
aam
idivb
xchg
sub
push
or
xlat
push
scas
sti
mov
mov
xor
mov
test
in
mov
lret
pusha
sbb
fisubrs
movsl
aaa
lods
sahf
fldenv
gs
pop
adc
xchg
inc
push
push
cmp
or
or
cwtl
leave
pusha
nop
inc
stc
fstps
enter
fidivrl
cmc
sbb
imulb
inc
jo
ljmp
leave
xor
jo
lds
fs
ja
test
adc
adc
idivb
lock
enter
jne
leave
push
les
xorl
in
pop
add
jle
out
jne
jb
fdivl
loopne
lcall
sbb
adc
mul
inc
in
scas
dec
xor
fmulp
and
arpl
and
xor
xor
pop
pop
sub
pop
fistl
or
pop
adc
adc
mov
cmp
adc
int3
or
fsubrl
xchg
movsl
leave
push
adc
add
aas
xor
pop
mov
out
jbe
inc
shll
decl
test
in
loop
pop
sub
lret
jle
icebp
sub
jnp
xor
jae
imull
in
lods
inc
jb
pop
addr16
inc
std
filds
test
or
add
test
enter
adc
dec
adc
jecxz
in
jns
pop
test
mov
lret
pop
or
and
xchg
xor
push
jbe
sbb
in
loope
lock
aaa
xor
push
adc
gs
sub
shlb
sub
xchg
in
movsb
movsl
ss
in
out
adc
and
imul
and
aaa
fildl
pop
popf
mov
lea
push
xchg
dec
sahf
mov
mov
xor
ja
xchg
lea
rclb
rcll
adc
cwtl
inc
pop
mov
fucom
dec
or
bound
inc
out
rorb
xchg
movsl
scas
mov
shlb
adc
xchg
push
jne
inc
add
les
nop
sbb
adc
mov
cmp
mov
dec
xor
sub
sub
cs
shr
adc
or
jns
shlb
mov
jbe
mov
or
push
mov
mov
mov
cmc
push
and
fdivrs
mov
or
push
adc
pop
sub
dec
fnstenv
pop
cmp
insb
add
mov
nop
subps
fwait
push
jl
push
adc
inc
sub
aaa
pop
dec
fisubl
mov
stc
mov
mov
lahf
pinsrw
pushf
loopne
insl
inc
xchg
pop
aas
cmc
add
loope
mov
sbb
lods
rclb
pushf
lds
int
sub
jmp
cmp
dec
mov
ret
pop
jno
add
jmp
ja
xor
cltd
xchg
sub
jno
mov
jnp
xchg
lret
xor
jmp
and
mov
dec
dec
sti
in
sub
ret
pop
loop
inc
in
xchg
or
dec
das
jle
mov
mov
stos
std
mov
sub
xchg
sub
push
push
gs
aas
sbb
cli
mov
jmp
nop
push
pusha
pop
or
xchg
movsl
jo
jge
cmp
vpinsrd
fmulp
movswl
inc
cmc
push
and
jl
dec
add
pop
lds
in
lods
int
fisttps
and
xchg
push
or
xchg
rcl
movsb
mov
jmp
and
stos
add
daa
cmp
push
in
ljmp
aas
sbb
pop
xchg
cltd
push
jp
push
xor
mulb
cmc
pop
pop
cmc
es
push
out
push
popa
mov
inc
and
and
repnz
jno
lea
in
bound
add
pusha
outsl
xchg
dec
ljmp
xchg
and
movsl
aaa
stos
fimull
xor
push
push
sar
push
hlt
fst
sbb
imul
inc
lods
lcall
push
int3
jmp
mov
adc
or
icebp
daa
xor
push
mov
es
inc
mov
add
enter
adc
lret
test
and
ret
mov
add
pusha
in
adc
jecxz
jle
mov
xchg
mov
negb
scas
cmp
lahf
mov
cmp
xor
das
sub
outsb
les
scas
out
sbb
push
dec
and
xor
mov
rcrb
mov
sub
mov
scas
sbb
shlb
cli
lods
xor
inc
gs
flds
push
cs
aad
push
mov
ljmp
cltd
push
ss
mov
icebp
cmp
fldz
icebp
insl
test
aad
mov
ss
rorl
jno
mov
add
jle
dec
sarl
cmp
or
xchg
dec
lods
das
daa
imul
dec
xchg
sub
outsb
and
repnz
pop
xor
fldl
lret
insl
sub
fildl
popf
aaa
mov
lret
xchg
mov
cs
repz
push
ds
push
inc
and
adcl
jne
xor
mov
jl
sub
xchg
pop
mov
lea
pop
movl
jbe
mov
shl
add
mov
ret
aam
add
jle
js
inc
xchg
aam
in
fucomip
xchg
aam
mov
inc
mov
pop
inc
mov
inc
ja
cmp
scas
sahf
jno
lds
inc
xor
sub
imul
dec
add
fsub
ja
sub
xor
jmp
lock
mov
mov
lds
mov
mov
out
adc
shlb
mov
repnz
or
mov
daa
sbb
xor
shl
cmpb
xchg
mov
jl
sbb
mov
jmp
adc
cmp
lret
lahf
movsb
mov
rorb
or
fisttpl
mov
pop
adc
jmp
in
fldenv
mov
xchg
movsl
or
iret
mov
mov
sub
adc
jmp
enter
iret
shrb
pop
mov
stc
mov
out
push
pop
xchg
clc
js
pop
jae
mov
mov
aam
or
fs
stc
ljmp
cmp
lcall
movsl
pop
or
inc
or
aaa
arpl
cs
in
gs
jmp
addl
or
push
pusha
mov
lcall
lds
xchg
xlat
mov
sbb
test
test
arpl
insb
in
cmpsl
popf
xchg
lcall
daa
imul
or
push
xor
mov
pushf
in
mov
and
sub
jmp
roll
scas
or
jg
jb
into
or
xor
and
out
js
js
inc
sub
xchg
int3
or
lods
and
ljmp
test
sti
in
mov
mov
lods
ss
or
adc
popa
or
or
adc
subl
std
neg
sbb
std
jge
and
arpl
pop
lcall
jmp
call
mov
sti
insb
cli
scas
mov
jae
cmpsl
push
imulb
insl
inc
loopne
lds
pop
in
or
push
test
test
hlt
int
lods
mov
insb
lods
lds
loopne
dec
jecxz
jbe
fwait
out
mov
mov
fidivrs
xor
mov
and
mov
repnz
stos
xor
dec
cmpsb
repz
push
in
pop
fnstsw
arpl
xor
mov
or
pushf
push
sarl
imul
bound
loope
adc
xchg
sub
stc
jp
adc
pop
lcall
daa
imul
push
hlt
shrb
or
enter
inc
push
popa
add
repnz
repnz
lock
and
inc
mov
push
loopne
pop
sub
dec
sub
and
lret
cwtl
int3
xorl
mov
pop
cltd
repz
xlat
shl
int
movsl
sub
pusha
inc
fsts
push
jg
mov
or
in
dec
inc
test
scas
add
mov
mov
ljmp
sbb
mov
jnp
rorl
fsetpm(287
push
xchg
into
push
dec
fsubl
add
aaa
jae
sahf
or
push
out
jl
xchg
and
pop
sub
jle
sbb
inc
sub
rclb
push
cltd
ret
hlt
ret
sbb
cs
sub
push
in
out
lds
jnp
jg
pusha
pop
push
inc
arpl
ljmp
lahf
imul
stos
mov
fs
outsl
bound
jl
add
dec
inc
jmp
inc
push
lds
popf
and
popf
movb
cmpb
xor
aaa
jns
jne
push
mov
mov
add
cmp
popf
insb
cmc
inc
jne
sbb
mov
or
es
aam
imul
xor
out
aas
sub
or
mov
cmp
mov
mov
sahf
inc
pop
lret
ds
cmp
addr16
push
xor
or
cmovbe
fidivl
fdivrl
lret
insl
imul
dec
jge
xor
ficomps
gs
decb
mov
gs
enter
lods
mov
in
jecxz
shl
mov
pusha
jns
mov
inc
sbb
aad
insb
adc
pop
mov
ds
loop
inc
xchg
aaa
sub
sub
insb
scas
rcll
rclb
adc
dec
xacquire
xor
dec
stos
or
popa
mov
cmp
pop
add
or
out
push
xchg
imul
adc
cmp
pusha
sub
or
pop
adc
dec
lods
lds
xchg
inc
cmp
inc
adc
adc
mov
mov
dec
pop
mov
pop
fwait
push
push
push
add
mov
jns,pn
out
cmp
cmp
stc
and
and
jecxz
lds
scas
mov
or
cltd
arpl
mov
xchg
sbb
sub
mov
pop
inc
fisubs
ja
fucomi
mov
imull
ds
fwait
scas
inc
stos
stos
das
pop
mov
or
andl
pslld
or
lea
jge
push
daa
xchg
mov
xchg
ds
lret
mov
sub
mov
lds
arpl
mov
in
mov
adc
into
jae
lcall
push
out
adc
fstps
sbb
push
push
mov
push
mov
lret
insb
pop
rorb
cmpsb
add
cmpsb
inc
sbb
inc
mov
fistpll
mov
cltd
dec
test
push
adc
ds
sbbb
mov
clc
stos
movsl
sbbb
out
mov
mov
movsl
push
popf
cli
cmc
mov
and
pop
mov
inc
dec
rolb
xchg
rcrb
addr16
fcompl
subb
and
insb
out
test
xlat
dec
movsb
cmpsb
push
cmpsl
pop
fidivl
xor
aad
testb
dec
pop
nop
mov
jae
test
cltd
cmp
aam
push
imull
jge
ret
or
jns
popf
push
or
shlb
push
sarl
outsl
ljmp
mov
mov
jl
mov
popa
pop
std
or
sub
mov
inc
enter
outsb
push
es
fdivrs
addr16
repz
push
aas
and
push
stc
jnp
divl
and
lea
repz
in
jle
cld
rcrl
sub
xor
pop
bound
inc
mov
fistpll
jp
fcmovnb
pop
imul
cmp
out
mov
nop
jbe
sub
mov
sarb
fcoml
xchg
and
test
push
fs
and
mov
in
sub
stos
xor
mov
out
ret
loop
jne
out
adc
push
cwtl
pop
jbe
loope
mov
test
adcl
test
and
loopne
dec
lock
cmp
cmp
mov
adc
ja
aas
mov
in
test
aad
outsb
in
lret
icebp
les
dec
xchg
cmp
or
or
push
and
inc
push
sub
adc
mov
mov
arpl
sbb
cwtl
enter
xlat
cmpsl
movsb
in
rcl
mov
sub
orl
fsubrs
jle
dec
stc
je
fistpll
lahf
mov
mov
push
xlat
and
cmp
fildl
jg
or
jg
pusha
sahf
pop
push
mov
es
jge
mov
and
mov
mov
jmp
add
push
dec
push
xchg
out
repnz
sbb
daa
and
jge
jnp
gs
ds
int3
es
stc
movl
aam
out
jnp
inc
subb
xor
push
push
test
pop
xchg
dec
xchg
sbb
lret
jl
cmp
into
mov
mov
sbb
movsl
sbb
mov
testl
pop
cmc
in
rcll
cmp
sahf
test
imull
xor
fwait
xchg
mov
in
repnz
mov
cmp
push
jecxz
xor
dec
ljmp
addr16
xchg
jbe
int3
jmp
push
mov
adc
scas
fcoms
inc
in
pop
sub
mov
int
inc
ljmp
ror
shl
ss
inc
pusha
shlb
push
js
leave
sbb
add
movsb
js
mov
nop
out
mov
enter
xchg
arpl
inc
icebp
mov
mov
out
mov
fadds
push
xchg
and
jno
popa
push
xchg
pop
gs
insl
dec
mov
cltd
out
push
xchg
sti
int
push
push
je
movsl
jbe
jb
sub
sub
lds
lret
in
fcmovnbe
inc
mov
pop
aas
cmp
mov
and
xor
xchg
scas
addl
shr
dec
or
sbb
adc
push
icebp
sbb
sbb
mov
loope
loop
adc
and
mov
shrb
sub
outsb
js
or
outsl
inc
je
std
cmp
mov
jp
xchg
nop
in
test
mov
jmp
mov
js
cmpsl
pop
and
mov
adc
add
pop
sbb
and
sub
jmp
push
mov
push
pop
fildll
pop
pop
lret
sub
mov
or
dec
inc
clc
shrb
push
dec
lods
mov
push
add
pop
cmp
cli
movsl
dec
scas
dec
inc
add
xor
xor
dec
jmp
dec
inc
nop
ret
imul
xchg
xchg
pop
dec
jmp
mov
rorb
mov
push
call
mov
sub
lods
cmp
lret
je
dec
adc
sbb
popa
cmp
or
repnz
mov
cmc
mov
mulb
loop
js
int3
push
lret
pop
dec
sti
push
cmp
ret
pand
xor
in
rclb
push
scas
jns
jg
out
jge
push
in
mov
sti
popf
movlps
fiaddl
inc
fstps
fstp
insb
sub
mov
in
and
adc
stos
popf
ret
mov
fs
jmp
shr
addr16
icebp
cmc
adc
aam
add
lock
push
repnz
cmpb
mov
or
cmp
mov
imul
int
shrl
lahf
shrb
fdivrs
jbe
cmpb
jp
sub
lock
push
lahf
fcomps
xlat
mov
cs
js
xchg
inc
pop
rcl
sub
test
fdiv
dec
cmp
out
sarb
aas
clc
rolb
cmc
mov
add
cmp
pop
pop
cwtl
int
jne
and
aam
cmp
stos
add
rorb
std
jb
int3
nop
lea
xlat
sbb
mov
adc
sbb
pushf
inc
and
out
call
gs
fistpll
dec
data16
cld
adc
stos
pop
cmp
je
jle
adc
jnp
into
pop
sti
adc
nop
sbb
test
scas
and
orb
adc
ficoms
test
jmp
jo
shlb
ljmp
lds
rclb
lods
mov
or
mov
add
inc
mov
push
shl
mov
mov
and
fstpl
lea
lcall
cmp
add
mov
push
mov
cmp
adc
loopne
adc
aad
mov
mov
aad
xor
inc
sahf
das
adc
enter
adc
rcrl
and
roll
ret
popa
xchg
aad
jl
or
rolb
sarb
into
ja
subb
pop
xchg
adc
sbb
and
pop
sub
stc
out
xchg
inc
push
dec
pop
cmp
adc
cmp
mov
ja
lea
or
jae
adc
xchg
xchg
adc
jmp
enter
inc
jb
cmp
xchg
pop
popa
pushf
mov
into
xchg
loope
jmp
faddp
lods
pop
sub
iret
push
shrl
push
lds
cmp
jmp
mov
and
in
adcl
mov
jne
pop
push
in
jae
adc
add
fdivl
inc
mov
pop
sbb
imul
push
jecxz
pop
fwait
inc
je
xor
std
jge
call
cmpsb
andb
iret
scas
jg
test
dec
xchg
test
jnp
add
es
hlt
leave
popf
or
rcrb
dec
mov
fsubs
pop
mov
stos
scas
data16
jnp
das
mov
test
add
mov
mov
dec
loopne
and
arpl
leave
jae
mov
mov
lcall
sbb
push
ljmp
sub
sub
iret
mov
in
mov
push
mov
adc
int3
sahf
loopne
addr16
inc
and
mov
rcrb
imulb
jmp
jmp
cmp
xchg
pop
jg
sub
shll
and
add
loope
lods
mov
pop
push
lcall
jne
shll
mov
in
xchg
cmpsb
js
xchg
cmc
push
mov
scas
mov
fisttps
stc
pop
sahf
push
sub
arpl
dec
sub
mov
addr16
lret
and
xor
popa
lock
dec
jne
mull
push
inc
int
das
sahf
les
cmpb
shrl
js
lahf
cmp
mov
mov
jnp
bound
js
mov
pop
jo
sub
mov
lds
dec
in
push
int3
inc
jl
push
dec
lahf
js
in
popa
jne
or
xchg
bound
fstps
push
imul
sti
insl
je
rolb
daa
sar
mov
push
or
mov
cmc
inc
adc
lods
out
ja
mov
inc
in
aad
lea
push
push
xchg
lahf
mov
xchg
mov
aas
dec
mov
cmpsb
cmp
out
fisubs
iret
clc
and
mov
imul
xor
xchg
mov
jl
ret
push
xor
push
scas
push
push
or
outsb
mov
lds
dec
aam
mov
call
xchg
popa
es
insb
fs
mov
sub
mov
gs
inc
mov
and
repz
out
mov
shrl
ret
shll
mov
gs
sar
out
repz
mov
sahf
roll
aaa
hlt
pop
jp
jae
pusha
cli
xchg
mov
stos
jl
and
pop
lds
mov
nop
jb
ds
mov
mov
xor
adc
push
bound
in
pop
fs
nop
xor
es
sbb
pop
mov
inc
jne
dec
imull
mov
lea
and
js
clc
sub
bnd
cmpsl
int3
mov
push
addr16
lahf
in
out
data16
and
inc
scas
cmpb
cmp
cmp
loopne
aad
mov
stos
and
mov
cmp
mov
je
mov
add
shl
jae,pn
add
fcompl
ficoml
jp
sbb
lods
hlt
push
iret
add
fnstsw
ret
int
test
adc
imul
icebp
leave
xchg
dec
into
add
fimull
lods
cmp
enter
sbb
into
push
sti
jecxz
in
cmp
jo
lods
xlat
add
cmp
mov
pushf
stos
shll
int
cltd
or
aas
lret
mov
push
push
mov
jl
cmp
adc
fdivs
add
test
xchg
insb
cltd
es
pop
daa
outsb
stos
xchg
xor
mov
loope
sbb
ss
fwait
popa
shrb
enter
mov
push
jl
popf
dec
addr16
les
xchg
dec
push
xchg
clc
xchg
adc
test
pop
out
inc
jno
jg
in
testb
or
cwtl
movsb
sarl
xchg
movsl
jae
xor
jp
testw
in
pop
popf
movsb
je
jmp
xlat
aaa
es
bound
and
scas
sbb
lea
fidivrs
shrb
jno
ljmp
or
and
dec
movsl
cmp
xlat
mov
fcmovne
or
xor
push
test
jnp
adc
mov
not
add
movsl
inc
lret
or
mov
pop
xor
outsl
test
push
pop
mov
push
cltd
mov
jno
scas
jo
dec
test
shl
jb
adc
sti
cs
push
jb
lock
mov
add
jecxz
jb
inc
pushf
jp
jp
mov
loope
jae
xchg
outsb
inc
xchg
push
inc
add
lret
out
adc
mov
xchg
adc
aad
mov
inc
fiadds
lock
clc
jno
mov
and
fstps
and
and
cmpsb
out
sub
push
jge
mov
push
into
jecxz
ljmp
sub
inc
push
xor
push
jecxz
jl
pop
sbb
shlb
pop
and
xor
cmp
stos
sbb
and
and
dec
mov
push
iret
mov
out
jp
ss
inc
xchg
std
xchg
adc
adc
insb
rorl
out
sub
inc
fistps
pop
push
push
or
push
or
shrb
aas
arpl
lods
pop
mov
shlb
inc
and
test
mov
inc
mov
cmp
mov
mov
gs
xchg
pop
mov
mov
push
push
mov
xlat
mov
jns
mov
sub
push
push
push
inc
mov
mov
enter
cmpl
cmpl
and
inc
icebp
cs
mov
std
pop
dec
mov
xorl
pop
mov
mov
into
sbb
int
ret
jg
jnp
arpl
rorl
sti
dec
inc
daa
add
jae
push
insl
notb
and
xor
test
aad
xor
int3
pop
xchg
outsl
dec
push
dec
lds
mov
cmp
rcr
sub
cmp
fdiv
jno
hlt
sbb
mov
jp
sbb
jns
ljmp
pop
js
sub
jns
fsubrl
adc
movsb
popa
mov
ret
xor
test
sub
loope
sbb
push
add
adc
fisttpl
add
pop
roll
dec
or
xor
dec
shr
or
push
popf
cli
adc
pushf
and
cli
rcr
jae
adc
outsb
ud0
and
fcmovnu
pop
jmp
popf
hlt
divb
push
loopne
fwait
sub
jno
data16
insl
jae
insl
mov
ljmp
rep
mov
dec
cwtl
jp
push
dec
inc
imul
leave
scas
lock
dec
aad
sub
inc
movsl
stos
aad
mov
lcall
aam
xchg
test
ss
xchg
adc
add
es
mov
xchg
add
aam
in
add
data16
js
sub
cmp
outsb
lods
mov
rcl
in
jae
sub
aad
fldl
loope
or
cmc
fucomp
pop
test
ljmp
pop
les
fmuls
je
jno
stos
lods
test
mov
sar
mov
test
stc
in
dec
mov
mov
leave
jg
out
call
push
mov
add
lds
jg
cld
lahf
mov
int3
std
push
ljmp
adc
lods
mov
lcall
jp
push
sub
decl
out
xchg
hlt
in
stos
nop
adc
pop
sub
lods
and
cmp
and
cmp
aam
sti
out
xchg
xchg
cmp
out
in
inc
mov
add
scas
hlt
xchg
pop
pop
and
pop
inc
idivl
aad
arpl
pushf
adc
cltd
dec
bound
inc
shll
push
les
std
repz
stos
jno
les
shlb
leave
adc
inc
pop
and
mov
mov
stc
sub
jmp
add
xor
or
push
stc
mov
loop
outsb
repnz
mov
cmpl
push
shll
mov
and
mov
push
jge
mov
xchg
std
jne
inc
mov
mov
sarl
imulb
mov
or
cmc
imul
mov
push
shrl
push
repz
push
push
and
sub
and
cmp
mov
and
call
mov
ljmp
stos
divl
or
sbbl
sbb
mov
scas
xchg
inc
les
out
outsb
fimuls
push
test
xchg
lret
jg,pn
repnz
addb
adcb
cmp
lds
das
cwtl
cmp
movsl
js
pop
or
nop
xor
test
mov
cmpsl
jge
into
jecxz
pop
nop
push
sbb
xchg
imul
mov
adc
mov
inc
or
outsl
xchg
testb
aas
movsl
ret
pop
cltd
mov
aad
mov
xor
outsl
xchg
cmp
gs
sti
sub
aaa
ja
rorb
mov
repnz
into
clc
into
add
bound
or
jg
mov
cmp
jecxz
nop
add
and
fmull
faddp
out
jb
dec
cwtl
leave
pop
mov
add
shll
mov
sub
mov
push
testb
mov
jne
pop
std
add
icebp
xchg
push
fistpl
and
movl
jae
in
ja
mov
nop
leave
scas
sub
cmpsb
mov
and
sub
das
inc
and
fidivs
arpl
mov
push
scas
mov
and
sbb
pop
mov
imul
mov
sbb
lods
orb
ja
add
sub
add
pop
test
lods
mov
add
add
pop
gs
lock
mov
push
je
pop
ret
lahf
mov
jp
mov
xchg
xor
inc
add
xchg
roll
cltd
mov
fwait
pop
add
in
and
js
mov
cmp
mov
or
mov
cmp
mov
andl
insl
mov
xor
jne
mov
mov
stc
lods
cmp
pop
pop
mov
add
mov
sti
mov
stos
and
and
inc
dec
and
ds
push
mov
lds
ljmp
test
imul
sbb
inc
sub
xchg
cmpsl
ficoml
popf
mov
sub
and
mov
pop
std
mov
std
fwait
repnz
mov
insl
cmp
mov
mov
outsb
pusha
test
mov
sbb
xor
stos
iret
sub
addr16
pushf
jge
mov
shlb
pop
sarb
test
dec
add
push
iret
mov
andl
ds
sbb
int3
movsb
push
lret
dec
lcall
push
jmp
fsubrl
xchg
into
jno
dec
cli
dec
mov
xchg
xor
lods
sbb
add
or
dec
cmp
dec
cs
out
pop
xchg
sbb
jecxz
jbe
loopne
ss
sbb
test
jnp
mov
and
enter
iret
dec
cld
imul
cmpb
out
cmp
sub
ss
and
push
add
xchg
hlt
mov
sti
into
ja
fndisi(8087
lods
jge
adc
popf
outsl
jo
imull
call
cmpsl
or
nop
and
je
mov
push
stos
leave
loopne
ret
pop
call
sbb
movsb
iret
inc
cmpsb
scas
je
dec
lret
sub
sbbb
shl
rcr
sub
mov
mov
pop
sbb
mov
xor
mov
push
stc
inc
dec
jp
dec
pop
mov
insb
fstps
mov
iret
aaa
add
pop
dec
stos
mov
int3
stc
mov
fsubrl
adc
in
testl
in
inc
lds
cmp
scas
mov
shlb
out
dec
addr16
and
pop
or
in
or
or
fstpt
add
fisubrs
dec
add
sub
ret
out
vlddqu
push
stos
das
loop
leave
lods
adc
loope
jns
add
and
stos
fldl
out
mov
ja
fsubs
inc
add
cld
and
xor
lret
mov
mov
fwait
out
pusha
aam
or
add
adc
insb
xchg
xchg
outsb
addl
pushf
cmp
xor
xchg
sub
cmp
sub
and
enter
loope
mov
mov
daa
mov
sub
hlt
pop
addr16
fldlg2
pop
dec
jecxz
sub
and
adc
jmp
movsb
lret
cmp
lods
imul
imul
xor
cwtl
and
and
das
mov
ja
cld
es
cmp
rcrb
xchg
sbb
mov
sbb
xorl
scas
push
pop
push
xchg
pop
daa
shrl
cld
add
fs
jg
adcl
mov
pop
insl
gs
shll
in
pop
dec
mov
push
inc
mov
jne
push
mov
adc
push
cltd
jmp
mov
cmpsb
insb
scas
daa
jns
add
lods
inc
mov
adc
mov
xor
divb
mov
push
sub
pop
pop
mov
jo
cmpsb
cs
test
repnz
lods
call
lret
stos
je
pusha
mov
push
cmp
mov
push
in
mov
popf
mov
xchg
cbtw
push
shll
repnz
fcoml
cs
xor
dec
fsubs
adcl
jle
rcll
jl
leave
inc
subb
pop
xlat
xchg
pop
imul
sbb
test
lret
pop
in
pop
pop
int3
xor
sbb
xor
mov
push
mov
cmpsb
mov
filds
cmpl
dec
cmp
or
stos
les
mov
or
cs
fcmovne
pop
pop
aad
inc
adcl
pop
enter
and
out
dec
push
in
lods
insb
jbe
repnz
in
jg
bound
in
jo
dec
lahf
leave
out
popf
cmp
lods
int3
int
dec
lock
shlb
mov
hlt
std
loopne
cmp
stc
sbb
inc
adc
sub
mov
ja
add
or
out
push
mov
xchg
xor
cld
pop
lods
sbb
mov
ja
and
push
lods
test
arpl
or
mov
xchg
fwait
dec
enter
push
hlt
push
insb
sbb
rcr
fstps
and
outsl
inc
mov
mov
addr16
leave
insb
in
pop
lds
mov
fsubs
cmp
jns
clc
ss
jbe
or
nop
cmpsl
cmpsb
repnz
das
mov
loop
jge
lret
es
dec
push
loope
gs
cltd
aaa
stos
addr16
add
aad
dec
cld
sbb
lock
ret
int3
cld
inc
inc
push
sub
fcoms
cs
jno
pop
dec
mov
int3
vmovupd
push
mov
adc
mov
inc
imul
push
imul
andl
push
mov
or
in
out
mov
mov
inc
in
div
iret
iret
leave
dec
cli
idivb
xor
jecxz
mov
xor
shll
mov
jmp
xchg
sbb
ret
lret
xor
add
and
imul
jle
sub
xchg
dec
or
and
scas
jl
mov
push
add
push
push
stc
xchg
add
es
in
or
inc
fwait
lret
inc
sti
dec
mov
idivl
popf
insl
sub
leave
iret
loope
test
outsb
fs
ret
adc
sbb
js
call
add
mov
arpl
push
cli
test
and
cmp
loopne
add
fadd
dec
hlt
shrl
pop
cmc
subl
mov
cmc
pushf
adc
push
or
add
and
or
sbb
pop
and
dec
mov
mov
inc
out
test
lret
sbb
jmp
and
sbb
insb
fisubrl
xor
pop
in
pop
clc
cmp
xor
setnp
sub
push
mov
adc
pusha
mov
jns
adc
into
xchg
jge
out
push
push
sbb
nop
adc
mov
into
xor
sbb
popa
fldcw
int
fwait
movsb
sbb
mov
nop
mov
sbb
test
mov
xor
jp
shll
shrb
daa
xchg
orb
adcb
sbb
xor
lods
roll
and
dec
or
rcr
into
out
testb
push
push
pop
xchg
dec
aam
jp
fidivrs
notb
std
pop
pop
outsl
orl
xchg
rcr
cmp
adc
test
std
cltd
loope
imull
das
inc
jno
adc
xor
addr16
dec
data16
lock
cwtl
xchg
sahf
pop
push
aas
iret
sbb
clc
xlat
jmp
xchg
jmp
stc
xchg
inc
test
popa
xor
lds
mov
cwtl
fidivs
lods
mov
push
cmp
push
cmp
adc
mov
int
pop
sbb
movsl
mov
in
push
popf
push
outsb
push
pop
inc
jo
xorl
out
into
dec
jae
fsts
fcoms
outsl
and
orb
jno
pushf
and
cmp
ja
xlat
js
sti
jl
lea
mov
andb
xlat
iret
divl
call
ja
xor
mov
pop
movsb
clc
out
dec
mov
in
je
sti
xor
sbb
cld
fcmovnu
nop
inc
mov
xorb
push
mov
inc
jbe
sub
mov
and
adc
ret
ds
pop
out
sbb
lods
and
pop
ljmp
mov
xchg
daa
stc
leave
fsubrl
icebp
or
lock
pushf
shr
shl
notb
daa
cmp
or
cmp
dec
cmc
in
jl
lahf
mov
pusha
push
mov
push
or
enter
fwait
test
push
movsl
push
stc
mov
mov
add
fldcw
push
and
cmp
jmp
mov
mov
jno
shr
sub
lods
xchg
cmp
loope
aas
in
movsb
jnp
mov
pop
test
bound
das
inc
xor
xchg
adc
inc
or
in
shr
xor
xor
js
loopne
aaa
add
mov
mov
ja
lock
lods
add
inc
mov
ss
flds
xchg
push
andl
mov
mov
repnz
dec
mov
mov
ret
push
pop
fildll
push
orl
scas
fcmovu
ja
cmp
bound
hlt
bound
lret
xchg
add
or
inc
insl
shl
pop
outsl
clc
imul
enter
xchg
push
stos
jecxz
mov
in
aad
stos
test
dec
and
adc
andl
push
jne
rcrb
xchg
or
pushf
jecxz
jne
sub
in
enter
out
mov
mov
mov
cmp
pop
or
or
js
mov
and
les
or
dec
push
cmp
xchg
int
outsl
inc
sub
lods
sub
jne
jo
icebp
xchg
in
in
ret
insb
xchg
lret
arpl
mov
mov
pop
jns
dec
mov
jns
lock
imulb
bound
ds
dec
push
outsl
mov
orl
xchg
jl
popa
fsubs
add
cltd
inc
roll
out
nop
push
pushf
mov
decl
mov
inc
ret
out
push
loopne
in
sbb
sbb
ret
xchg
addr16
mov
lods
mov
int3
fiaddl
loopne
andb
in
xor
pop
int
push
repnz
rcr
push
mov
and
stos
xor
lahf
jo
mov
inc
add
call
pop
add
in
jecxz
push
pop
out
add
lcall
int
clc
pop
sbb
lea
repnz
push
clc
out
xlat
jb
into
popa
inc
loop
and
jl
out
lds
fs
pop
icebp
fmul
and
and
pop
scas
fwait
or
sarb
xchg
mov
inc
test
cmp
dec
pop
jbe
mov
xchg
sub
arpl
fs
or
and
mov
jmp
insl
pop
jnp
pop
fadd
sub
inc
shl
jb
xchg
xchg
pop
xchg
jae
or
push
inc
test
cmpsb
ja
mov
sub
pushf
ja
cmp
push
cmpsb
adc
dec
shll
outsb
mov
adc
sti
je
or
mov
stos
dec
rorb
mov
jl
lds
or
dec
imul
jg
sub
xrelease
jns
jno
outsl
cwtl
ds
pop
sbb
sbb
add
in
ljmp
xchg
cmpsb
jmp
dec
mov
inc
sub
lds
cld
ljmp
int3
push
jbe
orl
pop
xchg
lds
mov
and
inc
ret
dec
sbb
orl
loope
lds
sbb
test
outsb
sti
sbbb
jnp
icebp
test
gs
lcall
dec
les
aad
jp
mov
arpl
pushf
sbb
ja
outsl
sub
push
jne
xchg
or
enter
inc
jbe
mov
pop
jno
fiadds
insl
cmc
dec
and
or
xchg
mov
sub
jb
pop
push
xchg
movsb
pop
cwtl
pop
jmp
or
cmpsb
xchg
shr
lret
shll
sti
hlt
xchg
lahf
lret
mov
sub
inc
adc
and
pop
lahf
cmpsl
icebp
test
jmp
adc
xor
cmp
lods
ficompl
lock
pop
mov
lret
jecxz
adc
pop
dec
pop
jmp
ja
dec
scas
mov
daa
loop
inc
cli
adc
iret
push
insb
fisubrl
xchg
xchg
dec
test
sub
in
stc
xchg
stos
inc
fiadds
mov
dec
fisubs
adc
scas
test
xchg
in
imulb
pop
mov
mov
andb
and
mov
mov
int
ficomps
jmp
mov
cmpl
ja
jg
add
dec
shll
mov
out
jnp
cld
outsb
sbb
je
push
shl
or
cmovle
imul
dec
inc
lcall
push
sbb
sub
pushl
ret
adc
cmp
imul
mov
outsb
mov
xchg
xorl
cmp
adc
xor
xor
adc
paddd
add
dec
lds
jp
test
rcrb
repz
jecxz
loope
testl
mov
pop
push
lods
cltd
inc
je
xlat
sub
dec
ja
jmp
enter
out
pop
pop
insl
sbb
call
sbb
push
or
fwait
scas
pop
aas
push
shlb
mov
pop
add
push
int3
iret
push
mov
cld
mov
je
clc
shll
jnp
es
mov
and
mov
sub
sub
and
sti
ljmp
hlt
ja
mov
add
ljmp
or
adc
mov
or
fistpl
cltd
pop
sub
mov
cmp
inc
clc
dec
popf
push
mov
aaa
movsb
add
add
xchg
adc
jmp
pushf
cmpsb
push
stos
lret
shll
sti
push
sbb
pop
jnp
sub
pop
std
movsb
adc
dec
lods
movsl
mov
mov
fldcw
mov
cmp
and
xor
in
sub
cmc
xchg
pop
push
sbb
push
out
scas
test
jmp
mov
adc
xor
pop
dec
cld
in
sbb
sarb
push
insl
int3
fisubrs
or
insl
or
cmpsb
addl
loope
in
jo
push
movl
cmpsl
in
cld
test
lea
or
mov
lods
les
cmp
cli
lds
das
or
imul
jbe
push
jnp
xchg
sbb
mov
and
xchg
xchg
and
out
mov
adc
fdivs
push
mov
mov
dec
add
lods
inc
cmpsl
fdiv
es
loop
cmc
pop
or
movups
sbb
je
fidivrs
push
icebp
cmp
push
adc
xchg
imul
sub
pop
stc
inc
jmp
lock
int3
lock
out
in
aas
mov
dec
jmp
xchg
pop
push
roll
int3
repnz
rorb
jecxz
adc
mov
aaa
sub
bound
scas
mov
dec
adcb
pop
int
inc
push
roll
insb
lret
loop
test
mov
fildl
xlat
add
pop
hlt
scas
loope
mov
test
cmp
inc
dec
mov
repz
jl
cmp
dec
mov
je
shll
orb
dec
in
push
xchg
inc
inc
lods
popl
lds
into
into
adc
outsb
lds
shrb
loop
scas
inc
jmp
jno
fisubs
orb
cwtl
pop
into
add
cmp
daa
push
lea
xchg
push
push
jno
jns
mov
jg
call
cwtl
sbb
cmp
jmp
cmp
repnz
dec
xchg
sub
ja
repnz
jg
rcr
sarl
jle
mov
xlat
xor
movsb
aam
adcl
xor
push
adc
gs
testb
dec
movsb
pop
jnp
aam
insb
dec
loope
inc
leave
adc
mov
pop
jo
cmc
xlat
fildl
add
jecxz
cmp
xchg
dec
add
loope
push
ja
pusha
les
je
dec
dec
pop
jmp
daa
stos
popf
and
fidivrl
pusha
add
sbb
mov
ret
lock
cmp
repnz
inc
ficoms
arpl
insb
push
clc
inc
mov
lea
xchg
cmp
push
push
mov
adc
pusha
sub
test
sub
jb
jns
jmp
dec
imul
sbb
aad
mov
xor
out
mov
sahf
push
or
mov
icebp
scas
lods
pop
xor
cmp
js
pusha
push
out
popf
mov
aam
les
aas
popa
inc
xor
mov
ljmp
das
jno
pop
jne
fwait
sub
pop
xor
cli
inc
xor
inc
mov
or
jno
popf
orb
test
sub
mov
cmc
and
adc
lcall
add
jb
adc
mov
mov
and
fdivl
dec
push
outsb
sub
dec
cmp
cmp
inc
inc
in
cli
idiv
lcall
leave
push
stos
hlt
repnz
addps
hlt
mov
sarl
pop
fcompl
xchg
inc
jmp
shlb
cmp
rclb
das
xor
test
dec
arpl
call
inc
dec
mov
dec
mov
xchg
in
arpl
jne
push
rclb
icebp
leave
push
lea
push
push
mov
subl
xlat
test
gs
fisttps
adc
out
xchg
lods
or
and
mov
fsubr
shlb
repnz
fcmovnbe
lcall
sbb
dec
push
add
les
or
mov
inc
inc
lods
je
ss
push
or
jmp
mull
xchg
mov
jp
sbb
dec
std
jae
adc
es
xorb
mov
jno
and
insb
movsl
leave
decb
mov
fwait
pop
pop
ret
and
and
dec
jge
pushf
or
sub
ss
add
or
inc
lods
sub
std
dec
mov
dec
sub
add
ret
inc
add
xor
mov
aaa
push
push
fdivp
sbb
out
lock
arpl
mov
add
pop
sbb
xchg
js
inc
pop
sub
bound
inc
scas
addb
stos
mov
sub
sub
jp
mov
insb
insb
mov
shrb
icebp
in
mov
pop
and
add
jno
add
in
push
data16
mov
in
fstpl
or
ret
and
pop
xor
pop
adc
sbb
daa
add
out
jo
movsl
daa
out
push
sbb
loope
dec
cmp
inc
aad
mov
data16
sub
lret
push
pop
clc
aaa
pusha
dec
ss
xchg
dec
insb
nop
leave
fisubrs
int3
test
jmp
inc
adc
push
ret
cmp
insb
or
sbb
jns
addr16
scas
dec
enter
mov
or
repz
test
fistpl
shlb
test
mov
ret
leave
int
push
lds
movl
gs
movsl
out
push
ss
lahf
cmp
sbb
add
repz
lret
add
and
clc
jp
xchg
mov
les
dec
xchg
xor
mov
inc
jmp
mov
push
push
mov
call
inc
xchg
and
mov
xchg
sub
pop
outsl
std
int
inc
ret
ret
jnp
movsl
xor
xchg
inc
fsubrl
mov
movsl
addl
sbb
je
call
push
xlat
dec
mov
mov
lea
or
adc
fs
inc
mov
addr16
push
sbb
or
ljmp
fcomps
je
mov
add
xor
es
shll
push
sbb
and
jle
adc
shl
cmp
adc
sub
or
loope
and
jb
stos
fwait
or
pop
and
les
loop
popf
lea
dec
sbb
sbb
push
or
ffree
fadds
push
pop
dec
ja
dec
cmp
cmp
mull
cmpsb
imul
or
or
pop
ds
sub
shll
xor
jno
aas
mov
or
je
lods
push
rcll
mov
cwtl
fwait
addr16
adc
sbb
jb
inc
xadd
movsl
push
movsl
movsl
jle
mov
adc
data16
push
roll
dec
sahf
stos
aad
cld
daa
clc
dec
or
gs
inc
aas
push
cmp
cmpsb
jno
mov
fnsave
loope
cmp
xor
pop
inc
xchg
gs
mov
sti
xchg
rorl
jb
outsb
push
xchg
test
add
fdivl
int3
out
cvtps2pi
outsb
sbb
loop
sub
xor
sti
es
lea
add
inc
xor
pop
mov
bound
rep
adc
clc
cmp
fwait
cmpsl
out
jne
mov
pushf
push
out
sbb
dec
test
lods
adc
lret
cmpsb
pusha
fiaddl
sbb
sub
adc
pop
loope
test
fmul
jo
mov
mov
pushf
dec
js
push
mov
push
out
shrl
add
movsl
mov
cmpl
xchg
mov
add
sub
xchg
test
subl
cmpsb
mov
fimuls
pop
ja
fs
bound
icebp
pop
clc
mov
shrl
pushf
mov
pop
jnp
pop
popa
sti
fcomps
xor
lds
fadds
mov
and
mov
push
outsl
dec
cmp
pop
xor
or
lods
sub
pop
adc
add
sub
icebp
outsl
dec
lret
jbe
dec
jmp
cwtl
mov
and
int3
ret
and
cld
and
mov
push
aas
inc
push
fbstp
or
orl
mov
pop
sub
cmp
pushf
fcoms
fwait
adc
fnstsw
gs
stos
inc
arpl
les
ja
js
jo
pop
pop
jo
mov
shr
mov
test
dec
jne
ret
jb
push
hlt
dec
test
add
sahf
push
data16
push
mov
sbbl
je
roll
rcll
lods
push
test
and
shlb
mov
xor
ds
and
inc
insb
dec
dec
mov
add
sahf
add
inc
adc
jno
es
insl
mov
fisttpll
in
inc
mov
out
fs
sub
mov
push
inc
mov
nop
mov
int
ror
or
push
add
ret
jle
js
jle
aaa
fildl
nop
push
jns
add
outsl
imul
cli
jb
test
xor
adc
stos
movsb
xchg
xchg
es
mov
pop
push
mov
andb
aam
sub
ljmp
cld
mov
or
mov
insl
and
inc
lahf
adc
mov
xchg
or
out
inc
or
fnstsw
sahf
mov
xlat
dec
outsl
or
inc
mov
mov
outsl
pop
xlat
push
mov
in
sbb
fcoms
out
js
jbe
in
pop
xchg
adc
mov
ljmp
out
and
pop
daa
cmp
popf
xchg
mov
icebp
out
clc
pushf
jge
stos
mov
stos
jg
dec
xlat
ret
popf
add
fnstcw
jnp
xchg
jae
pop
dec
in
cmp
push
xchg
shlb
xchg
mov
xorb
jo
popa
stc
cmp
or
mov
test
enter
daa
test
push
mov
rcll
jbe
inc
lods
mov
push
mov
mov
push
test
sbb
pop
xchg
pop
jnp
xlat
pushf
imul
shrl
jno
sub
sub
mov
mov
imul
imul
xorb
js
jns
mov
xchg
pop
fmul
sub
rcll
jmp
mov
sub
mov
mov
push
cmp
or
push
fdivr
mov
ljmp
cmp
hlt
dec
pop
aam
add
mov
data16
cmp
lock
push
xchg
js
adc
adc
inc
and
inc
mov
adc
xor
outsb
sbb
jmp
sbb
sub
add
rcll
adc
hlt
nop
jl
push
ljmp
mov
and
push
out
repnz
xlat
movsl
jo
sbbl
xchg
pusha
mov
loope
in
fdivp
pusha
sar
cmp
sub
and
cwtl
cltd
fdivrs
pushf
dec
les
roll
add
addl
jo
sub
outsb
je
sub
lock
imul
stos
loopne
pusha
mulb
adcb
mov
shrl
mov
inc
ljmp
pop
test
jo
mov
mul
or
sbb
int3
sbb
pushf
mov
or
jnp
into
cmp
mov
push
popf
adc
xor
or
loopne
aad
jl
jp
mov
outsb
sahf
xchg
jecxz
or
inc
pushf
and
pop
dec
in
lea
cmpb
add
cwtl
xchg
xchg
mov
pop
mov
in
xlat
ss
jl
and
pop
cltd
pop
add
aam
and
push
sub
icebp
movsl
push
lret
mov
movsl
movsl
pushf
jbe
andb
mov
inc
dec
jl
sahf
add
lcall
bound
mov
jno
mov
pop
repnz
into
test
jb
inc
and
cmp
loop
dec
and
aas
lret
out
mov
addr16
push
push
jge
repz
cmp
pushf
es
fnsave
jl
push
js
mov
ss
fwait
pushf
lock
add
test
or
stos
mov
pop
daa
stc
stos
add
in
sti
pusha
push
insl
imul
rcrl
jbe
out
mov
pusha
adc
mov
jmp
push
cs
mov
mov
push
dec
hlt
iret
int
and
sub
stos
test
mov
push
or
xor
mov
out
lahf
push
xor
imul
aam
cmpsb
or
sub
mov
ffree
sub
imul
aam
mov
pop
cmp
insb
pusha
pop
cmp
lcall
inc
hlt
sub
imul
xchg
mov
pop
and
imulb
push
lahf
stos
mov
xchg
shlb
arpl
xchg
sbb
jecxz
adcl
ret
lock
icebp
mov
ja
cmc
cmpsb
and
mov
movsl
sbb
je
fldt
popa
cmp
jg
push
inc
jl
jle
cmp
push
jl
mov
gs
js
test
sarb
mov
iret
shr
test
out
rorb
and
fsubrl
push
inc
xchg
jge
out
xchg
insl
or
icebp
push
jno
mov
ret
shufps
add
scas
ret
sub
push
cmp
jb
inc
bound
cld
adcl
adc
and
xchg
and
je
aas
xlat
fadd
add
mov
push
mov
std
cmp
iret
or
xchg
mov
jo
pusha
mov
mov
test
push
mov
pop
daa
ss
fs
dec
popf
ss
adcl
cmp
mov
pop
rorb
pushf
xchg
and
mov
pop
pop
mov
fs
outsl
addl
icebp
lea
jbe
inc
jne
int
cmpsb
pop
xlat
movsb
repz
jle
or
mov
push
push
dec
push
or
test
stc
xchg
xlat
hlt
stc
ljmp
movsb
movsl
cmp
mov
or
imul
adc
rolb
fdivrl
sbbl
pop
push
jge,pn
xchg
test
rcll
inc
xchg
clc
cmpsb
fbld
movsb
push
pop
dec
add
pop
push
lods
push
mov
pushf
int3
xor
sbb
shlb
or
in
and
scas
lock
xlat
jmp
testl
xor
adc
icebp
testb
jl
jb
adc
xorl
xor
les
push
or
sahf
xor
int3
pop
xor
fcoml
push
mov
mov
sbb
push
pop
fnstsw
xchg
daa
les
xor
lret
mov
cmpsb
cwtl
xor
push
std
cmp
pop
push
inc
inc
pop
mov
sbb
push
lahf
les
loopne
and
pop
xchg
xchg
mov
lret
mov
and
xor
jge
fisubrl
clc
mov
nop
test
inc
aas
xor
cmpb
mov
pushl
pop
sahf
jecxz
xor
pop
ds
pusha
cmp
pop
mov
lret
icebp
inc
popa
inc
out
add
jmp
mov
movsl
inc
nop
push
cwtl
mov
jns
sub
sbb
pop
push
mov
mov
fwait
lret
addb
xchg
das
aaa
loopne
jl
mov
loope
jp
or
push
dec
movsl
pushf
js
in
shlb
movsb
ss
xor
sbb
xorl
stc
cmpsl
scas
xchg
mov
outsb
addb
enter
xor
loop
pop
test
pop
cmpsb
pop
mov
xor
jge
sub
cmp
and
fldenv
jecxz
pop
push
into
shll
lahf
cmp
dec
into
into
fdivr
mov
mov
bound
std
pop
imul
pop
mov
cld
sub
push
xor
xchg
ja
dec
sahf
lods
js
dec
arpl
cmpsl
dec
jp
mov
xor
push
in
or
insb
xor
call
outsb
stos
or
mov
enter
call
push
pop
out
lds
scas
out
addl
nop
cmpsl
jle
iret
mov
dec
cmpsb
out
inc
outsb
and
pop
and
dec
push
imul
push
push
xor
lret
cld
adc
mov
pop
pop
clc
mov
sbb
and
out
es
and
xor
int
mov
or
jne
dec
arpl
jecxz
xor
cmc
xchg
mov
repnz
sub
mov
imul
in
shrl
cli
aas
cmpsl
loop
xchg
mov
mov
pusha
pusha
xor
sbb
insl
xor
or
out
sub
xchg
push
cmp
push
addr16
cmp
pop
xchg
jmp
sbb
js
mov
mov
sti
jp
pop
call
cmc
mov
adc
movsl
repnz
cmp
mov
ret
cwtl
xchg
nop
pusha
pop
es
imul
jecxz
and
test
dec
inc
ret
and
pop
mov
jb
dec
movsb
loopne
jns
jl
and
push
fxch
stos
dec
test
mov
cmp
leave
adc
jg
jg
sub
dec
pop
push
mov
rorl
dec
movsw
xchg
repz
add
xor
inc
dec
jno
stos
out
xchg
aam
xor
mov
repz
inc
iret
mov
mov
cs
dec
push
fs
mov
mov
loopne
jp
fstl
xchg
negl
cli
mov
addr16
mov
xchg
push
adc
test
ret
pop
sbb
les
mov
push
rcll
push
mov
and
ja
andb
fcomi
push
adc
cmp
add
imul
jge
fs
and
xchg
mov
sbb
sahf
cli
mov
xchg
jg
stos
sti
mov
jg
sbb
lret
xor
popa
mov
xlat
lods
mov
popa
roll
lods
xchg
stos
jno
lret
jl
jl
insb
jne
leave
int3
mov
pop
repnz
xor
arpl
lods
ja
rolb
and
fbstp
mov
push
insl
xchg
test
dec
ret
shl
sar
rcl
mov
fistl
mov
mov
push
adc
jbe
push
mov
lcall
sub
mov
sbb
pusha
out
add
dec
lret
ja
fmull
or
xorb
xorl
mov
jecxz
push
adc
inc
push
jno
dec
cmp
pushf
add
push
lahf
aam
pop
adc
xor
dec
leave
repz
fwait
or
leave
lret
mov
repz
outsl
pusha
sub
inc
or
or
mov
dec
movsl
or
dec
pop
xchg
sbb
jle
daa
jb
push
in
ret
jp
orb
mov
movsl
jge
push
add
inc
ja
mov
in
add
cld
xchg
scas
xor
movsb
pop
cmp
fwait
shr
jle
push
hlt
xor
sarb
mull
and
adc
fistpl
hlt
add
outsb
fcoml
adc
clc
pop
dec
fidivrl
mov
cmpl
sarl
test
sbb
out
pop
xor
or
scas
movl
mov
divb
jo
adc
ret
push
add
mov
in
mov
fmulp
mov
sub
push
andb
in
add
inc
and
enter
pop
xchg
les
sbb
mov
sbb
out
add
popa
adc
inc
in
jecxz
pop
inc
je
add
pop
out
shr
cmpsl
aas
xor
in
add
inc
mov
sbb
adc
mov
or
jecxz
jp
movsl
shlb
push
neg
jmp
shrl
or
les
movsb
je
pushf
popa
dec
scas
inc
mov
rorl
push
adc
pop
dec
dec
pop
add
xor
in
xor
mov
mov
xlat
lods
jnp
jne
loopne
adc
imul
in
and
cmp
fsubr
sbb
or
repnz
fstpt
or
jo
xorl
stc
sbb
cmpsb
int3
pop
dec
mov
jl
jbe
and
movsl
scas
cmpsl
dec
addl
int
lds
inc
imul
mov
add
add
incl
out
mov
push
sbb
adc
dec
jne
push
insl
pop
jno
pop
xor
jp
push
clc
mov
popl
xchg
loope
push
cmpsl
dec
sub
fldcw
jle
push
pop
mov
insl
jae
test
cli
ud1
mov
dec
sbb
je
cmp
cmp
sbbb
fwait
lods
mov
sbb
fstl
das
mov
popf
cmp
test
jae
push
dec
fcoml
in
jecxz
adc
or
jle
outsl
and
icebp
fldenv
mov
lret
dec
dec
and
mov
rclb
pushf
sti
inc
rcll
or
xor
mov
out
ds
movsl
mov
push
pusha
and
and
mov
mov
xchg
leave
nop
mov
dec
int
dec
mov
sub
and
jb
jb
or
xchg
pop
daa
cmp
mov
cli
and
leave
nop
jg
xlat
xor
loop
sti
jmp
mov
stos
pop
mov
je
imul
jb
jnp
enter
cmp
insl
push
sub
sbb
sub
pop
rclb
cwtl
xchg
or
out
cmp
adc
xchg
pushf
popa
out
and
and
jle
push
push
cmc
mov
rorb
sti
xor
mov
bound
addr16
sti
imul
jg
fsubrs
sbb
xlat
lret
fcmove
jl
ret
mov
adc
inc
push
sbb
adc
jg
dec
insl
fidivrl
jae
test
inc
dec
aad
xchg
fbld
mov
lods
jl
mov
jb
jns
sbb
testb
sahf
push
mov
out
dec
inc
lahf
test
lret
push
and
loopne
push
push
dec
jns
dec
cmpsl
loopne
adc
popa
mov
lcall
inc
es
jnp
mov
push
in
sbb
dec
jbe
sub
mov
iret
jb
aam
sub
push
test
xchg
sbb
aad
jbe
mov
sti
jbe
sti
loope
jge
sub
hlt
mov
mov
inc
divb
sti
or
push
sub
lret
cmc
in
fldpi
sub
xchg
fwait
lock
pop
in
mov
fisttpll
jnp
dec
xor
sbb
and
cmp
adc
push
mov
or
lods
mov
xor
lods
mov
fsts
mov
fdivp
cmc
lods
sbb
test
xlat
movsl
int3
jp
sbb
pop
iret
adc
pop
cwtl
ds
adc
in
push
adc
inc
dec
xchg
loopne
push
or
jae
popf
jbe
adc
jns
dec
ds
rcl
push
leave
cs
js
inc
loopne
loop
xchg
aam
test
nop
test
bound
dec
stos
cmp
sti
loope
fwait
xchg
insl
pop
push
inc
dec
inc
pop
jmp
int3
cmp
iret
stos
sbb
pop
stos
fdivs
sub
or
je
dec
sahf
jg
loop
inc
sbbb
movb
push
mov
stos
pop
popf
pop
xchg
jp
xor
leave
aad
sbbb
pop
leave
pushf
mov
scas
and
outsb
cmp
movsl
and
adc
ja
repz
mov
and
scas
xor
rorl
adc
lcall
aad
dec
and
outsb
jl
int3
mov
mov
mov
ret
iret
aaa
in
bnd
push
xor
lret
cwtl
push
stc
sbb
push
pop
adc
adc
jne
mov
jno
adc
jb
test
mov
out
rcll
test
bound
inc
pop
popf
inc
sbb
jns
loope
or
xor
int
out
in
push
les
adc
fwait
mov
ret
mov
xchg
data16
jne
loop
pop
push
in
mov
stos
add
arpl
inc
mov
cmc
pushf
sbb
sbb
sbb
int3
cli
les
ds
out
rolb
inc
xor
jge
nop
iret
adc
xchg
sbb
test
mov
and
cmp
dec
and
xchg
aaa
jp
repnz
and
lret
aad
xor
pusha
outsb
insl
adc
xchg
sbb
dec
sub
mov
pop
cli
sarl
mov
iret
ficoms
stos
rorl
in
adc
jge
inc
lcall
into
jb
dec
lcall
je
insl
and
rcrl
push
ss
cwtl
adc
mov
pop
sub
rorl
insl
xor
ret
inc
in
xchg
mov
idiv
push
jnp
fnstsw
push
inc
pop
nop
push
inc
push
testb
callw
imul
shr
dec
mov
xchg
cli
movsb
in
add
insb
mov
xchg
jo
lret
and
add
lods
sub
js
push
xchg
mov
push
pop
jg
outsl
aaa
in
lret
dec
xor
dec
dec
out
jge
filds
cmpsl
add
mov
mov
mul
add
add
fcom
inc
or
inc
cltd
loop
out
xchg
fadd
repz
cld
mov
rcr
int
pop
mov
pop
pop
cli
mov
popf
xor
pop
adc
enter
xorl
jge
mov
pop
adc
sub
adc
add
mov
fdiv
loope
mov
mov
push
jns
pop
sti
jnp
fs
cli
test
mov
pusha
gs
rolb
dec
inc
sbb
popf
add
imul
lods
jmp
cmpsl
jle
push
in
and
subw
mov
addr16
dec
ret
jecxz
push
or
jnp
bound
outsb
loope
call
rcrl
jnp
ja
stos
and
sahf
sbb
imul
cmp
imul
pop
xchg
push
lods
push
js
insl
mov
or
lods
icebp
push
adc
mov
mov
repnz
pop
stc
stos
ss
or
jp
adc
jae
sub
cmp
sbb
mov
sbb
lret
iret
test
sub
in
jg
mov
and
lds
sub
mov
out
pop
cmp
ja
mov
mov
aad
add
arpl
andb
ljmp
sbb
mov
xchg
lods
fdivl
sbb
cmp
ror
imul
and
ljmp
xchg
loope
repz
cmp
roll
ja
adc
pop
mov
sub
mov
jb
add
xor
cltd
inc
xor
sub
dec
gs
mov
cli
testb
mov
stc
rcl
movl
lret
mov
pushf
leave
dec
dec
cs
lret
mov
xchg
loopne
dec
push
in
mov
imul
test
sbb
push
mov
add
lock
mov
push
mov
rcr
pushf
addr16
push
pop
xor
sarb
pop
shr
imul
xlat
outsl
mov
ficoml
pop
int3
jne
jecxz
sbb
dec
lds
push
push
mov
mov
pop
lret
sub
test
push
les
jo
call
sub
jns
aaa
sti
scas
or
lods
cwtl
xchg
mov
adc
jno
scas
lds
cmovs
pusha
sub
rcrb
ljmp
ficompl
rcll
mov
hlt
dec
aam
jbe
mov
lahf
test
or
imul
in
leave
sub
pop
pushf
mov
bound
fimull
mov
mov
in
xchg
lcall
xor
cli
xor
xlat
movsb
push
out
push
cmp
mov
jecxz
xchg
ret
scas
add
and
test
jae
cmpsb
lret
out
pop
xchg
test
adc
outsb
adc
out
aas
incl
leave
enter
mov
sbb
outsb
add
int
bound
sub
inc
int
or
or
in
ja
cmp
and
mov
outsb
call
clc
imul
xchg
xor
xchg
movsb
stos
int3
pop
jle
loope
mov
movsl
cli
cmc
jg
cmp
lock
dec
in
lcall
cmp
cmp
xor
xchg
mov
add
hlt
and
ja
adc
adc
pop
scas
outsl
or
movsb
stos
cltd
les
pop
js
xchg
outsl
add
pop
adc
xor
test
stc
ss
test
orb
cmp
imul
xchg
or
push
iret
cld
xor
out
pop
mov
not
ret
sbb
pushf
push
mov
mov
jmp
mov
cmpsb
mov
fsubrl
jae
xchg
rcrl
dec
mov
xchg
dec
mov
pop
mov
loopne
mov
adc
jbe
int3
ja
sbb
cmp
xchg
sub
outsb
adc
and
push
jge
mov
mov
or
dec
and
movsb
cmc
sti
fcmovu
js
and
jmp
mov
shlb
or
add
jp
sub
rorb
xor
xchg
cmpsl
adc
popf
dec
cmp
and
je
sub
inc
out
fisubs
addr16
push
lds
push
int3
mov
jecxz
sbb
lods
lds
cmp
inc
dec
sbb
pop
mov
addr16
shll
std
jge
add
jae
clc
xlat
int
add
mov
xchg
push
inc
int
leave
push
fmull
mov
mov
and
mov
fucomip
pop
and
imul
add
xor
jl
cmp
ljmp
jno
fs
leave
push
dec
daa
pop
idiv
inc
cmpsl
and
mov
clc
cmp
pop
inc
mov
sub
arpl
ss
jp
mov
sbb
movsb
sub
test
outsl
ljmp
sahf
sbb
or
shlb
xor
cmp
and
dec
fs
loop
cli
mov
adc
xchg
mov
fildll
pop
js
jnp
mov
jnp
mov
jmp
inc
in
xchg
and
mov
dec
pop
fs
jle
out
jo
lcall
das
fidivs
gs
icebp
popf
lret
mov
clc
jl
adc
popf
jp
push
je
dec
dec
int
xchg
lret
or
sub
jmp
mov
xor
negb
stc
xor
or
fmul
or
divl
std
inc
das
inc
cltd
insl
mov
xchg
push
cld
ret
sub
mov
inc
mov
and
data16
cmp
mov
sbb
inc
pop
shl
aaa
lcall
fs
jo
jp
cmc
mov
lods
adc
adc
jmp
inc
adc
mov
icebp
lret
adc
idiv
test
xor
xor
out
rcrb
jnp
mov
outsb
and
ficoml
sbb
ljmp
xor
mov
lcall
pop
xchg
and
or
cmp
orl
fs
aaa
mov
sub
push
aas
int3
push
das
xor
mov
xchg
stos
push
dec
sarb
mov
lods
rorb
out
xlat
ret
inc
xlat
xor
fmuls
inc
push
pop
jns
adc
mov
arpl
test
sbb
add
ss
ds
mov
sti
sub
add
cmp
push
xchg
rcll
adc
enter
int
cwtl
xchg
cmp
xor
ret
sbb
hlt
xor
in
cs
sbb
xchg
sub
cltd
lock
data16
test
push
ljmp
sbb
ss
mov
jo
adc
es
cmc
sub
pop
scas
sub
mov
mov
sti
pop
and
push
cmp
cmp
cmp
insb
in
stos
imul
add
mov
pop
pop
sbb
aas
scas
mov
mov
hlt
popf
mov
das
mov
jp
roll
cmp
and
stos
dec
mov
mov
mov
inc
pop
mov
in
lods
fistpll
sti
mov
mov
stc
int3
sti
inc
add
jg
adc
pop
pop
jge
lea
jne
addl
popf
xor
add
mov
sub
xchg
lock
mov
fcoml
cli
fsubrl
or
xchg
mov
dec
xor
sarl
insl
das
je
cmp
and
push
call
mov
sbb
insl
inc
and
fldln2
in
int
and
xchg
mov
add
xlat
movsb
or
push
in
inc
pop
pop
pop
mov
stos
jae
ss
mov
xchg
les
jae
in
ds
sbb
inc
mov
fimull
repz
loopne
hlt
pop
sbb
inc
pop
cmc
push
inc
test
in
add
or
imul
jno
mov
pusha
cmpsl
xchg
cmc
dec
neg
rcrl
cmp
pop
adc
in
fs
sub
into
aad
sub
cmp
out
test
pop
or
mov
push
addb
mov
cmpsl
inc
mov
stos
mov
aad
dec
mov
scas
sar
sbb
dec
out
xor
ljmp
cmc
bound
pop
js
fdivr
or
sub
enter
arpl
das
adc
jp
add
sbb
add
push
cmpsb
icebp
daa
popf
out
xchg
cmpsl
test
pushf
jo
popa
dec
repz
cmc
xchg
cltd
push
jmp
xchg
aad
cs
fmuls
mov
sbb
rol
jns
outsb
and
fnstcw
xchg
rolb
and
jno
cmp
stos
push
push
mov
int3
call
sbb
mov
pop
repnz
test
pop
inc
loopne
jle
mov
pop
rolb
add
mov
pushf
testb
je
sub
rclb
pop
mov
jg
xor
jnp
fstps
popf
add
lods
fnstenv
add
enter
out
cmp
shlb
iret
add
mov
mov
cltd
sti
filds
in
shll
sbb
mov
xchg
pop
cmpsb
inc
or
sbb
adc
dec
push
adc
cmp
sub
ljmp
test
test
mov
shr
pop
imul
sub
addr16
dec
adc
outsl
pop
cmp
fwait
mov
out
aad
loope
imul
out
cmc
xchg
into
cmpb
ljmp
mov
dec
std
xlat
adc
inc
jb
ja
sti
sbb
mov
lds
sahf
dec
adc
inc
in
xchg
mov
out
repnz
pop
xchg
and
jb
std
inc
or
xchg
aaa
inc
dec
push
sbb
adc
cs
int3
and
into
mull
and
clc
in
inc
aam
fistpl
pop
outsb
sub
in
jnp
push
xchg
xchg
xchg
xchg
mov
icebp
or
frstor
and
push
faddl
out
daa
cmp
ds
sti
pop
add
outsl
add
mov
jmp
aad
add
jg
es
push
inc
loope
insb
push
push
mov
pop
mov
popa
fsts
ds
xor
movsl
cmc
lcall
xchg
xlat
mov
ljmp
test
sub
sub
push
pop
out
adc
mov
pop
sbb
fimuls
mov
xchg
add
and
lret
lcall
lret
leave
out
movsl
addr16
xchg
les
mov
lds
pop
hlt
mov
jb
adcl
adc
stos
inc
test
cld
adc
jl
cmp
shrb
mov
in
add
pushf
pop
xorb
xchg
pop
hlt
cmp
outsl
cmc
push
out
mov
push
js
add
loop
lock
iret
pop
xchg
mov
fstl
out
mov
mov
stos
jb
jmp
mov
push
or
test
lret
repnz
cmpsb
stc
xchg
xchg
or
sbb
shll
cmp
andb
mov
dec
mov
hlt
filds
sbb
lea
in
call
imull
flds
jecxz
pop
sub
push
mov
mov
fmuls
xchg
imul
pop
ds
mov
fadds
xor
call
lds
dec
into
jmp
in
xchg
mov
pop
les
hlt
repz
pushf
idivb
adc
jg
inc
sub
fsubrl
mov
pusha
and
sub
fcmovnu
sub
dec
and
sub
xor
negl
in
dec
sbb
std
icebp
jle
sbbl
popw
pop
push
mov
pushf
adc
adc
add
dec
lcall
sbb
mov
mov
jns
mov
jge
or
ljmp
repz
pop
fisubrl
sub
lcall
lds
nop
ret
frstor
mov
inc
mov
addr16
or
jle
sub
inc
pop
xor
mov
mov
xor
mov
mov
jbe
or
dec
mov
mov
jge
pop
pop
mov
add
push
and
repz
loope
insl
mov
inc
in
lock
dec
aam
loopne
mov
shlb
mov
mov
insb
adc
push
outsl
mov
xchg
xchg
arpl
jecxz,pt
mov
sub
cltd
adc
hlt
and
test
or
int
cmp
jb
adc
int3
lret
xorl
ret
pop
iret
cwtl
rcrb
rcrl
mov
lds
and
fidivs
aas
fsubr
cmpsb
movsb
mov
dec
jno
xor
ret
xchg
cs
scas
cmp
fsubrs
in
lods
xor
xchg
xchg
mov
lret
mov
xchg
jecxz
pop
ret
jle
push
dec
jmp
pop
popf
test
add
mov
in
repz
inc
push
lret
fsubs
int
imul
test
dec
add
dec
imul
jo
xchg
fisubrs
adc
iret
fwait
les
adc
rcrl
in
cld
xchg
test
mov
das
mov
mov
pop
notl
inc
ret
or
cs
movsl
nop
xchg
orl
mov
pop
cmp
mov
nop
lret
xor
inc
jmp
clc
aaa
mov
stc
adc
bound
fs
rcrl
cmp
inc
add
loope
xchg
push
jl
stos
push
enter
cmp
into
data16
das
mov
insl
mov
fistps
ret
mov
pop
sti
mov
loopne
leave
mov
dec
inc
incb
mov
dec
dec
and
pop
pop
call
ljmp
out
push
cmc
inc
cmpsl
pop
out
shll
add
ds
and
push
lret
orl
pop
sbb
xchg
ds
loop
enter
in
pop
pop
fcoms
scas
xlat
push
popf
clc
movb
mov
push
cltd
dec
lret
or
data16
jge
scas
aaa
jle
add
notb
popl
or
ret
pop
and
push
or
pop
mov
adc
movsl
xchg
jnp
dec
es
pop
outsl
adc
ret
push
jle
inc
fxtract
xor
xchg
ljmp
sbb
fidivrs
mov
push
pop
xchg
scas
std
inc
inc
add
dec
mov
shl
bound
sarl
fbstp
sbb
jno
pop
out
ds
lds
fisttpll
jecxz
dec
repz
inc
add
jne,pt
and
xchg
sti
bound
gs
inc
xor
imul
pushf
jne
call
jmp
xor
sahf
mov
ret
nop
mov
mov
add
lret
outsl
jecxz
sbb
xlat
and
addl
and
sti
pop
mov
sbb
push
out
add
fsubs
add
je
and
pusha
mov
loopne
pop
sub
jl
push
adc
sbb
es
push
mov
js
xchg
popf
movsb
popf
cmp
or
lcall
mov
stos
xchg
mov
ds
xlat
aaa
inc
fildl
mov
xchg
jno
mov
movsb
add
sub
mov
mov
fstpl
push
push
rorl
xor
gs
mov
loopne
lods
lcall
outsl
pop
pop
inc
addl
xchg
out
add
or
jge
stos
push
inc
es
fadds
loop
xor
add
cmp
or
ds
push
push
mov
xchg
in
add
popf
dec
mov
leave
dec
ja
mov
pusha
fdivrl
nop
jmp
fisttps
xchg
stos
nop
sahf
sub
movsb
xlat
popl
pop
gs
cmc
out
movsb
lods
xor
rolb
cltd
test
in
add
bnd
push
dec
aaa
and
jns
xchg
test
push
lock
xchg
pop
sbbl
jp
xchg
cmp
xor
cmpsl
xor
in
add
test
cli
adc
scas
sbb
icebp
adc
mov
shlb
or
in
push
inc
add
dec
pop
pop
mov
add
and
lock
sub
ljmp
xchg
lods
addb
or
mov
mov
sbb
aas
mov
int3
test
mov
cs
leave
mov
or
cmp
popf
push
fadds
xchg
daa
jg
xchg
add
addl
xlat
mov
jmp
outsl
and
pop
sub
testl
in
xchg
adc
xchg
xchg
out
mov
repnz
sub
popa
adc
dec
cmp
daa
es
cmpsl
cs
lods
xchg
inc
push
nop
lahf
mov
shlb
iret
cli
inc
mov
ds
enter
sbb
adc
sbb
add
fiadds
push
xchg
sbb
cmpsb
or
xor
push
mov
dec
in
xchg
adc
scas
ficomps
out
leave
adcl
cmp
pop
mov
xor
into
pushf
push
cmp
call
push
mov
add
jno
data16
cwtl
cmp
add
jo
lahf
push
ljmp
sahf
popf
bswap
add
das
and
repz
or
stos
xchg
repnz
aam
aad
xorb
xchg
dec
inc
inc
push
lret
push
push
mov
add
and
leave
andb
pop
out
add
inc
add
mov
mov
xchg
int3
mov
out
mov
cmp
push
cs
pop
incb
pusha
mov
inc
imul
lods
movsb
out
add
fdivl
cmpsl
shrb
sahf
in
cs
xchg
mull
fdivrs
out
xor
cmpsl
in
jp
inc
loop
pop
adcb
outsl
or
daa
sub
dec
jb
jnp
lcall
mov
out
icebp
lcall
push
dec
pushf
cli
dec
dec
adc
xlat
dec
addr16
inc
cmp
dec
inc
sti
cmp
ret
push
fdiv
mov
fisubs
sub
mov
mov
lcall
lds
fnstsw
nop
scas
mov
lods
mov
push
mov
in
xchg
cmpsl
xor
movsb
mov
test
fistpll
jmp
pop
push
add
aam
mov
jp
xlat
dec
daa
pop
aaa
inc
inc
cmpsl
cmp
fwait
xor
or
adc
popf
jp
cwtl
xchg
mov
mov
icebp
cmc
cmp
dec
or
cmpsb
sub
jno
mov
dec
inc
lods
sbb
add
sbb
hlt
mov
sub
ss
push
je
mov
dec
pusha
lea
adc
jae
or
popa
pusha
jge
or
xchg
lcall
mov
lock
out
call
sbb
sarl
dec
inc
fbstp
mov
add
call
loope
mov
pop
cs
xchg
xchg
rcll
sar
shlb
xchg
shr
xchg
mov
inc
mov
enter
dec
jne
xor
data16
or
cmp
ss
je
xchg
xchg
pop
or
mov
add
dec
mov
mov
lcall
ss
xchg
sub
xor
pop
mov
or
test
add
jno
mov
in
or
test
repnz
pop
cli
add
cmc
fadd
and
xchg
mov
xor
jmp
inc
jbe
sbb
sub
sbb
popa
adc
in
jl
movsb
mov
roll
add
push
mov
jno
mov
fsub
push
popa
xor
xrelease
dec
data16
jnp
xchg
rolb
iret
ret
rcll
or
xlat
mov
mov
dec
dec
enter
mov
xchg
loopne
adc
mov
pop
stos
div
sub
ret
jle
sbb
mov
push
pop
les
out
les
pop
inc
pop
scas
fsubrs
mov
fmull
inc
loope
fnstcw
gs
cmp
in
pop
out
jge
mov
sbb
jne
aaa
ds
les
mov
cmp
adc
adc
and
inc
push
ss
jg
call
movsl
jg
xor
adc
add
imul
adc
adc
int3
pop
and
nop
dec
fcmovne
sub
mov
xchg
push
fwait
pusha
mov
cli
pop
jmp
insl
xchg
test
or
stos
popa
push
xchg
jns
pop
int3
mov
add
imul
mov
daa
ficomps
stos
xor
fisttpl
adc
mov
rorb
xchg
aaa
dec
pop
shll
out
xchg
cwtl
mov
jb
pop
jno
fnstenv
shr
rcrl
add
pop
dec
jmp
sti
dec
jns
out
sub
sahf
stc
push
testb
jmp
or
push
inc
out
xor
jb
xor
add
pop
jb
lret
cmp
aas
and
rcl
fwait
push
hlt
mov
add
cmpsl
out
mov
mov
jno
mov
add
mov
aaa
cmp
dec
rcrb
jmp
addr16
decl
pop
loopne
cmp
ficoml
jp
cmp
xorb
adc
cwtl
bound
clc
mov
cmp
push
mov
lods
outsb
mov
test
cmp
mov
out
or
cmpsl
xor
jae
add
and
sahf
mov
push
cld
or
cmpb
jl
or
lods
mov
mov
dec
mov
fsubs
loop
push
ret
jle
shrb
sahf
std
mov
pushf
cmp
pop
lcall
xchg
mov
repz
mov
cmpsb
pop
and
push
into
dec
clc
or
and
lods
mov
push
dec
xor
jle
pop
mov
in
pop
push
or
xchg
fisttpl
enter
inc
xchg
jbe
shl
leave
xor
and
pop
lock
or
ljmp
add
mov
cmc
and
xchg
xchg
popa
and
movsl
push
mov
xchg
dec
popa
call
repnz
adc
inc
mov
inc
mov
movsl
pop
sub
idivl
into
push
mov
mov
jae
xlat
jno
xchg
fs
push
loop
pusha
test
fisttpl
stc
jp
dec
and
and
dec
add
test
mov
sub
cmp
pop
lods
cmpsb
mov
adc
loope
orb
cs
adc
xchg
test
lahf
sub
lret
andl
jo
adc
out
into
aam
sbb
pop
rorb
sub
neg
inc
out
mov
aad
aaa
jecxz
push
mov
add
push
in
xor
mov
ss
cmpsl
cmp
call
inc
mov
es
mov
mov
in
mov
fildl
xchg
cmpsl
popf
cmpsl
popa
cld
mov
add
fistpl
jg
fidivs
sbb
fldt
mov
cmp
jb
scas
cmpsl
mov
push
dec
cmp
pop
push
cmp
adc
jle
mov
outsb
dec
fcomp
imul
cltd
lcall
mov
xchg
sub
scas
pop
imul
jle
mov
mov
enter
aas
shlb
or
pop
jo
or
loope
push
pop
pop
xchg
push
push
je
pop
inc
aam
loopne
jb
int3
in
xchg
int3
ret
dec
inc
lahf
cwtl
inc
sarl
xchg
inc
or
push
frstor
stc
lahf
clc
enter
sbb
push
lds
and
nop
js
repnz
std
pop
pop
fistl
and
pop
xor
pop
push
mov
lds
call
adc
out
push
lods
insl
ret
jmp
or
cmc
push
cltd
bound
decb
xchg
jg
add
push
neg
push
push
rcrl
or
and
xchg
mov
and
ffree
pop
fwait
rcll
pop
hlt
push
cmpsl
xchg
pop
push
sahf
sbb
test
mov
and
mov
mov
arpl
pusha
sbb
pop
jecxz
cmp
movsl
pusha
vmread
dec
lods
add
rorb
mov
pop
cmp
nop
pop
ja
push
or
stos
xchg
jecxz
sbb
sbb
add
rorl
into
and
mov
xchg
test
jge
sbb
push
scas
js
popf
sti
arpl
inc
clc
cmc
out
jno
int3
dec
repz
adc
dec
mov
adc
or
pop
cmp
test
lret
mov
adc
ret
mov
sbb
push
dec
insl
cmp
cmp
inc
int3
loope
bound
rol
out
aad
daa
inc
add
mov
inc
pusha
jo
xchg
jbe
xor
in
aam
aam
and
into
push
xchg
mov
jae
int3
mov
jmp
cmp
pop
cmp
in
loopne
movsb
pop
push
dec
lahf
shrl
mov
lods
pop
mov
idivb
pop
jmp
add
sti
dec
push
mov
dec
add
loop
pop
or
dec
cmp
push
adc
add
pop
sbb
icebp
jge
sbb
mov
adc
sbb
xchg
or
incb
outsb
push
sti
jl
push
lahf
repnz
xchg
stos
lock
arpl
jnp
jge
sar
daa
cld
sub
mov
mov
cltd
xchg
ret
sub
cmp
clc
lods
ret
js
popl
sbb
xor
pop
adc
das
incb
sbb
ds
dec
fiaddl
aaa
xchg
rcrb
and
inc
mov
ret
test
pop
mov
or
inc
cwtl
mov
sbbb
jnp
fnstcw
or
popf
mov
pop
pop
gs
clc
push
mov
pushw
fnstsw
js
rcr
push
push
adc
add
inc
je
imul
sarb
add
mov
inc
cltd
xor
inc
in
add
xchg
jle
pop
mov
out
hlt
mov
popf
adc
pop
lcall
outsl
ss
lahf
cmpsl
notb
cmp
jno
pop
add
fiadds
add
std
adc
repz
out
dec
mov
rcll
xor
popl
dec
cmp
sub
dec
adc
jo
pop
jecxz
jmp
ret
add
xor
mov
pushf
push
stos
jns
repnz
mov
movzbl
and
int
imul
pop
paddsb
sarl
test
jo
pushl
scas
mov
fs
fsubl
and
mov
fisttpl
xor
mov
or
fnstsw
adc
sbb
mov
popa
dec
sbb
vmread
xchg
and
adc
repnz
iret
stc
das
stc
xchg
jl
into
repz
mov
pop
mov
mov
and
xchg
cmp
inc
and
xorl
sbb
mov
cmp
jp
andb
in
or
dec
add
jo
iret
movsb
ficomps
add
mov
fwait
inc
mov
lahf
lods
cs
repnz
xchg
dec
jg
pop
outsb
xchg
mov
aaa
je
lods
dec
js
dec
negl
outsb
cwtl
cmpsb
enter
cmp
mov
sub
lcall
and
cmp
xchg
aaa
mov
mov
dec
adc
stc
out
adc
rcl
clc
outsl
push
and
in
ds
je
pop
push
and
or
mov
int
mov
pop
int
outsb
or
iret
sub
mov
cwtl
mov
fdivs
push
mov
adc
pop
pop
sub
arpl
inc
notb
fisubl
push
pop
sbb
es
cmc
xor
ret
scas
mov
clc
xchg
cmpsb
pop
ljmp
aam
pop
jmp
test
inc
jmp
xchg
xchg
pop
mov
dec
arpl
mov
jae
adc
ds
and
stos
aam
js
rolb
jae
popa
ret
stc
outsb
inc
or
inc
and
sub
rcll
push
sahf
mov
jne
negb
std
js
dec
fisubs
lret
fwait
jmp
data16
mov
cmp
push
loopne
or
mov
inc
add
mov
lods
and
cmpsl
cmpsb
ss
test
add
xorb
shr
cwtl
jge
xor
push
sbb
xchg
cmp
mov
pushl
test
sbb
push
xchg
addb
lods
mov
loop
popf
xchg
mov
fcmove
mov
lahf
jnp
iret
out
jmp
scas
or
test
test
jo
out
pop
pop
pop
orb
daa
push
push
lods
or
push
add
hlt
out
sbb
pushf
and
sbb
mov
sti
inc
hlt
xchg
xor
mov
xor
push
inc
xor
ljmp
int3
add
push
jbe
push
lcall
fcomps
pop
out
inc
lret
mov
sar
sbb
shll
mov
dec
xchg
push
xchg
mov
das
push
xchg
ss
push
pop
mov
lahf
push
mov
mov
fidivrs
mov
dec
dec
sahf
mov
xor
int3
das
fldl
mov
or
shrb
mov
pop
das
or
mov
push
jnp
in
inc
inc
push
push
cs
ljmp
inc
pop
enter
inc
ret
aad
iret
pop
jl
sub
lea
scas
int3
popa
in
jnp
ds
nop
movsl
and
pushf
mov
dec
ret
insb
pop
jecxz
xor
cmp
dec
fs
mov
stc
or
inc
cmp
and
add
xorl
jbe
pop
inc
fidivrs
cld
js
and
in
mov
scas
jp
jno
xchg
pushf
out
xor
jmp
inc
and
pop
cli
mov
arpl
leave
es
mov
hlt
xchg
inc
or
jns
ret
aas
mov
adcl
int3
test
ljmp
xor
xor
inc
cmp
outsl
pop
lods
mov
dec
cmp
loop
and
stos
pop
xor
test
in
inc
push
outsb
cld
cli
outsl
dec
mov
stos
xlat
inc
jmp
filds
mov
insl
enter
shlb
push
push
xchg
or
mov
sti
inc
or
sub
mov
dec
jne
cld
rsqrtps
movsb
sub
sbb
ret
vcvttpd2dqy
out
loop
les
ret
and
pop
push
in
stos
or
jne
cli
icebp
sbb
in
lock
int
xchg
sbb
inc
and
out
inc
xchg
fimull
jns
in
mov
xchg
and
imul
pop
cwtl
inc
mov
push
je
jnp
rclb
jno
mov
aas
out
popa
movsl
push
leave
jne
stos
lcall
divl
jbe
and
dec
lahf
imulb
lea
sarl
test
aas
mov
fiadds
sbb
or
add
js
pop
sbb
iret
fisttpll
inc
cmpsb
mov
subb
xor
mov
sahf
jno
xor
pop
adc
pop
mov
mov
les
xchg
mov
cmc
and
add
ds
xor
push
mov
lret
divl
jmp
in
push
sbb
pop
push
jge
icebp
sbb
inc
loopne
pusha
lock
std
xor
insl
jge
fldcw
call
bound
ja
dec
ror
iret
jbe
inc
xlat
sub
andb
je
shlb
ja
fstpl
fimull
xchg
cs
mov
subl
inc
lods
stc
lret
out
out
mov
imul
mov
jle
push
jbe
xchg
out
pusha
dec
fdivrp
cs
mov
scas
xor
sbb
dec
lock
lods
sbb
sub
pop
push
loopne
xor
lret
ss
sti
dec
fwait
cmp
mov
outsb
xor
sarl
push
xor
push
lods
push
notb
mov
jns
lcall
enter
or
mov
lret
outsl
pop
sti
dec
xor
add
dec
and
inc
fwait
dec
pushf
xor
mov
cmp
movsl
insb
gs
cmp
pop
push
mov
call
loop
pop
aaa
push
dec
daa
je
das
pop
pushf
les
fs
sti
nop
jmp
aad
push
aad
out
or
add
repnz
xor
sub
mov
fwait
xchg
xorb
scas
mov
fldl
sub
dec
mov
js
cld
pushf
negb
dec
sarl
and
and
mov
andb
mov
jae
stos
add
data16
cli
push
bound
mov
and
or
loop
ss
dec
mov
sarb
jg
insl
xor
clc
nop
mov
imul
push
fists
iret
loopne
or
jnp
pop
add
aam
add
mov
test
xchg
out
lret
outsl
into
fisttps
mov
pop
dec
mov
enter
aaa
pop
pop
rorb
or
ss
adc
pop
add
in
nop
adc
sbb
test
pop
push
pusha
and
lea
jle
lods
cmp
or
mov
ds
sbb
mov
lret
xor
les
sbb
adc
xchg
push
adc
ss
jle
jbe
outsl
jecxz
cwtl
dec
cmp
sbb
sbb
imul
jno,pt
imul
adc
les
sbb
pop
cmp
push
sub
lods
mov
or
int
call
pop
cld
jnp
pop
sbbl
xchg
mov
ljmp
mov
jg
jno
fildll
and
outsl
in
cmp
sub
cmpsl
mov
pop
sub
roll
bound
es
sbb
sbb
mov
xchg
jecxz
jmp
xorps
jb
xchg
outsl
or
fbstp
mov
mov
sub
data16
pop
hlt
in
mul
mov
xchg
cmpsb
imul
mov
mov
mov
add
jo
js
cmpsb
cs
cltd
or
shll
insb
jmp
mov
adc
movsb
dec
xor
dec
outsb
adc
jg
and
push
shlb
js
pop
mov
imul
stos
add
push
add
arpl
fs
aad
icebp
int3
jmp
lea
fcompl
imull
inc
repz
popa
outsl
mov
dec
outsb
roll
ret
ret
mov
call
sub
cmp
and
incl
push
or
sub
jo
std
add
mov
sub
sarl
push
jmp
sti
cmp
mov
mov
xor
dec
aas
sbbb
sub
in
fistps
pop
aad
addr16
insb
sti
int3
sub
lods
scas
ror
lods
jmp
out
adc
pop
pop
stc
pop
xor
lods
pop
sbb
mov
dec
stos
cmc
cwtl
insl
or
and
sti
lret
and
sbb
sarb
add
lds
shll
or
mov
push
inc
out
popf
arpl
cmp
xchg
mov
mov
ja,pn
data16
in
pushf
sbb
sbb
inc
repnz
or
call
call
dec
mov
lods
jecxz
and
in
out
dec
push
fcmovne
dec
or
lea
pop
xchg
mov
les
lods
pop
and
fwait
loop
adc
dec
and
rcrb
outsl
aam
jmp
je
insl
pop
jle
pop
iret
inc
ja
cltd
push
pop
mov
out
dec
sahf
mov
in
push
xlat
je
sbb
pop
pushf
std
jb
lock
jl
rcrb
data16
push
call
sbb
push
cmpsb
xchg
int
dec
mov
cmc
movsl
pop
jbe
repnz
test
fisttpl
bound
mov
leave
mov
fidivs
xchg
fldpi
ret
and
dec
xchg
mov
mov
in
xchg
icebp
push
imul
ja
test
lea
shl
dec
adc
out
jl
and
and
cmp
lock
or
movsl
mov
mov
out
mov
cli
mov
pop
and
sbb
adc
lcall
inc
pop
xor
or
push
shlb
xchg
push
jg
mov
int
jmp
push
data16
push
ud2
or
stc
pop
sbb
xor
out
pop
cmp
test
loop
jle
sbb
push
xchg
dec
dec
mov
inc
nop
loop
lret
idivb
fdivrp
dec
out
inc
rcr
jge
pop
jl
dec
push
das
stos
sub
sub
test
sub
jns
xor
push
rclb
divl
xchg
jmp
mov
into
das
aad
pcmpgtb
mov
xchg
daa
lret
inc
sahf
in
rolb
rol
fldenv
shrb
cmpsl
xor
es
sub
in
sub
stos
subb
jmp
addl
mov
xchg
push
imul
pushl
loopne
jecxz
and
test
adc
pop
ljmp
adc
sbbl
push
add
mov
lea
cmp
outsb
andb
pusha
pop
into
sbb
and
std
inc
fwait
rclb
push
imul
jnp
inc
jnp
fidivrs
sbb
mov
inc
in
ss
push
and
std
repz
clc
push
imul
es
movsb
insb
mov
mov
pop
mov
out
cmp
rclb
and
sub
lea
cmp
insl
cmp
fsubrl
mov
or
ljmp
add
mov
jle
and
inc
xchg
and
fsubrl
dec
cmp
leave
dec
mov
xchg
xor
xor
jmp
inc
shll
mov
dec
es
repz
and
pop
roll
sbbl
repz
mov
popa
lods
std
lret
lcall
adc
sahf
push
sub
std
mov
stos
jle
sbb
arpl
je
pop
mov
cmp
push
inc
add
xlat
clc
jnp
cmp
sahf
int
popf
lfs
xchg
dec
fdivl
xchg
daa
mov
sub
xchg
mov
test
loop
mov
inc
stos
test
jmp
popf
mov
push
imull
dec
xor
inc
popa
cmp
xorb
clc
or
test
insl
xchg
xlat
loop
xchg
pop
jl
das
pusha
fstpt
add
cmp
aaa
fs
add
jne
cli
add
ret
sub
jecxz
mov
jb
je
jo
mov
or
mov
mov
sahf
push
sbb
dec
fwait
dec
xchg
aaa
lcall
xchg
jg
sub
dec
fildl
leave
add
lret
leave
or
adc
jo
lock
negb
leave
dec
movsl
mov
into
icebp
out
adc
es
cmpsl
cmc
pop
mov
pop
xchg
mov
cmpsb
xor
pop
sbb
and
imul
xor
xchg
jmp
mov
fsubrl
les
adc
add
push
xor
jmp
and
popa
iret
xor
mov
imul
and
stos
cmp
sub
je
inc
pop
stc
dec
jbe
out
cld
test
notb
xchg
inc
inc
add
push
loope
das
les
mov
mov
xchg
lcall
jbe
rclb
mov
mov
mov
xchg
scas
mov
xor
push
mov
dec
fwait
mov
xor
xchg
xlat
ror
lcall
jne
push
inc
stos
loopne
push
push
clc
jl
inc
jb
xchg
ficomps
mov
push
lods
mov
push
cmc
push
lock
je
loope
fsubp
insl
jb
das
cmpl
popf
loopne
inc
or
mov
loope
mov
mov
sbb
fs
inc
testb
add
pop
cltd
inc
cs
push
mov
sbb
xlat
imul
aas
dec
popa
or
fwait
js
repz
fcomps
cld
mov
mov
js
lea
and
adc
ret
mov
sbb
lock
xchg
das
push
pop
pop
jmp
ret
cltd
sbb
push
push
outsl
mov
mov
mov
sub
loopne
xchg
pusha
leave
cmpsb
pop
or
cld
sbb
fsubrp
adc
jne
sarl
into
xor
push
xor
iret
xor
enter
ljmp
mov
icebp
ds
jl
fdivr
pop
xor
jnp
mov
out
jmp
inc
sbb
jmp
inc
xlat
mov
test
mov
lods
fldenv
mov
mov
sbb
push
adc
and
imul
out
inc
aad
pop
mov
pop
sub
jmp
popa
and
jae
in
mov
inc
les
insb
mov
mov
shl
icebp
xor
rcrb
push
int
outsl
inc
loopne
adc
jmp
ss
mov
adc
shlb
pusha
cmpsl
xchg
stc
dec
inc
repnz
test
test
scas
cs
ds
xchg
dec
fcmovne
sti
sbb
jbe
or
ret
icebp
js
cmp
lret
xchg
adc
jmp
pusha
subb
in
dec
add
cli
scas
addr16
adcb
cmp
aas
mov
pusha
mov
test
das
movsb
testl
enter
lret
incl
mov
mov
stos
faddl
mov
lahf
dec
test
lock
shll
fwait
push
pop
in
lods
lret
mov
jg
mov
sub
add
ret
dec
lods
adc
ds
jp
sub
and
lods
or
or
subl
push
mov
and
pop
ret
imul
cltd
mov
es
push
lret
aaa
adc
mov
and
cmp
or
mov
lock
cmpsb
cmp
fs
lods
push
or
xchg
adc
leave
inc
sbb
xor
je
push
mov
imull
mov
fidivrs
cmc
dec
mov
insb
jp
inc
xor
cli
into
stc
ss
xchg
ljmp
mov
or
xor
inc
xor
test
fildl
xlat
sub
ss
cli
mov
pop
daa
sub
test
ret
push
mov
xchg
fs
out
sbb
js
cltd
mov
loope
pop
jb
dec
and
bound
aaa
xor
xor
movsb
movsl
jne
sbb
fimull
inc
add
inc
mov
add
inc
sub
add
cmp
push
and
or
xchg
fs
stos
pop
pop
rclb
pop
les
lock
sarb
aam
rcl
shr
fwait
xchg
add
mov
adc
lcall
mov
das
call
aad
nop
mov
dec
sub
movsl
push
daa
mov
sbb
mov
mov
lret
aaa
ds
aam
xor
or
mov
jae
mov
add
adc
sahf
mov
push
jns
nop
mov
sbb
out
push
icebp
adc
lcall
mov
xor
mov
pop
or
mov
inc
insb
movb
cltd
adc
mov
adc
sbb
mov
jo
in
cld
mov
iret
movsl
sbb
jle
mov
xor
outsb
xor
ffree
imul
int3
mov
fdivrp
push
stc
xchg
lret
ja
push
loopne
inc
push
rolb
lret
xor
adc
and
daa
inc
test
rcrl
xchg
add
sahf
mov
xlat
sbb
push
pop
insl
or
leave
mov
call
pop
lahf
inc
cmpsl
in
addr16
pushf
jo
xchg
xlat
scas
sub
mov
adc
mov
inc
nop
inc
cmpsb
mov
insb
inc
aad
mov
aam
scas
xor
roll
xchg
aaa
fnsave
clc
push
icebp
sbb
ror
out
jl
pop
mov
inc
mov
popf
jo
cwtl
pusha
and
cmp
jl
addr16
sahf
arpl
mov
fwait
lea
and
jno
push
ror
and
pop
jo
adc
sar
xor
pop
push
test
adc
or
stc
das
lret
inc
idivb
cmpsb
or
xchg
mov
cmp
fidivs
jns
jg
mov
adc
hlt
jbe
xchg
xchg
ficoms
adc
adc
xor
or
xchg
push
lret
push
jge
cmp
lods
adc
ds
xor
mov
jne
inc
dec
daa
rclb
test
push
in
je
stos
arpl
pop
pop
or
add
jne
inc
inc
in
sti
cli
lahf
dec
gs
lret
mov
jno
lahf
mov
sbbl
pop
jns
cmpsl
jp
xchg
ja
sbb
mov
add
mov
pop
xchg
jbe
sbb
int
push
or
imul
cmp
sub
xor
xor
lea
cmp
rcll
aas
mov
and
and
fstpl
and
leave
push
ja
add
divb
nop
jmp
or
jle,pt
inc
test
mov
je
xchg
outsb
add
bound
push
pop
or
cld
jae
out
xlat
cld
fmuls
rcrl
fimull
mov
cmc
out
loope
lcall
cmp
and
cld
cmpsl
out
pusha
ret
repz
dec
insl
pushl
mov
push
mov
and
and
call
or
push
mov
imul
pop
mov
push
cmp
int
icebp
xchg
cmpsb
sub
ficompl
les
xlat
repnz
mov
sbb
loop
inc
imul
ljmp
add
xor
xchg
sub
repnz
pop
fdivrl
push
cld
cwtl
mov
xor
fldl
jns
mov
cs
or
pop
dec
lods
and
fnstenv
aaa
sub
inc
mov
jne
scas
pop
lock
and
push
test
cmp
pop
pushf
adc
mov
je
test
mov
add
cmpl
pop
push
fistl
out
lea
lcall
jns
pop
add
fcmovnu
fimull
mov
movsb
xor
pop
fdivrs
mov
mov
jns
xor
sbb
lock
mov
js
cmp
mov
xor
jo
sbb
fwait
shrl
ficoms
mov
stos
idivb
xor
das
jecxz
insb
xchg
dec
cmpl
mov
push
mov
aad
mov
sub
adc
cmp
sub
test
rol
dec
out
lcall
pop
and
cmp
sbb
adc
cmp
cld
jle
xlat
mov
sar
jg
xchg
in
dec
xchg
xor
add
rcr
jg
icebp
inc
xor
fwait
cmp
pop
push
divl
aad
mov
stc
cltd
jle
and
add
addr16
and
jb
ja
mov
fbld
adc
inc
sbb
mov
dec
cltd
adc
dec
je
add
lret
scas
jle
inc
and
cmp
sti
push
mov
sbb
jg
inc
push
test
adcl
jns
lahf
inc
lods
out
test
mov
mov
ret
dec
aad
shrb
jns
icebp
cltd
pop
dec
or
add
push
jge
mov
enter
fs
lret
jg
and
cmpsb
jne
nop
inc
leave
sub
lret
mov
mov
cld
inc
sub
jae
scas
and
or
and
fldcw
mov
dec
and
push
jmp
mov
mov
add
jmp
push
dec
lcall
rorb
or
push
cmpl
sbb
cmpsl
push
enter
repnz
jg
shrb
jne
xor
push
jecxz
enter
sbb
lock
gs
mov
test
mov
mov
jae
xor
cmc
in
fwait
ds
inc
cmpsb
xor
ss
adc
int
icebp
sti
adc
adc
repnz
scas
test
ret
lea
pop
addr16
mov
pop
cmc
int3
sti
xchg
outsb
mov
cmp
xor
mov
add
sbb
dec
shrl
imulb
das
lcall
out
fildll
pop
inc
gs
repnz
dec
clc
jecxz
lock
lods
mov
cmp
in
js,pt
xchg
xor
bnd
in
sub
xchg
fnstenv
jp
std
es
push
jmp
mov
popf
inc
xor
cld
clc
fsubs
inc
sbb
adc
xchg
stc
addb
pop
push
ja
xlat
jecxz
addr16
push
and
sub
outsb
daa
sarl
pop
movsl
lods
dec
pop
push
sti
cwtl
xchg
xchg
sbb
aad
jg
adc
fwait
out
je
mov
mov
jno
loop
pop
xchg
in
inc
mov
push
cs
fs
xor
push
add
jmp
fisubl
mov
mov
jns
rsm
sub
adc
sub
xchg
and
mov
inc
dec
or
test
cltd
push
clc
jbe
mov
or
bound
sub
adcl
dec
sub
shll
out
int3
test
mov
scas
fadd
sbb
movsl
std
jle
mov
inc
insb
pop
sub
mov
jae
cmp
xchg
aad
xlat
stos
adc
mov
or
cmp
dec
or
icebp
fwait
in
and
sti
jno
es
xlat
inc
movsl
push
jl
shrb
jno
push
sahf
divb
mov
mov
enter
cld
sub
je
cltd
dec
inc
nop
lods
dec
popa
lret
push
lret
out
cmp
cmp
xchg
movsl
test
aas
inc
xchg
jb
stc
mov
inc
fisttpl
jo
dec
pop
clc
jo
dec
dec
add
xchg
inc
daa
xchg
bswap
loopne
mov
or
das
scas
lds
mulb
jns
sbb
fstps
call
xchg
mov
aam
mov
daa
sbb
cwtl
test
pop
loope
mov
cmp
adc
arpl
mov
sub
dec
push
dec
sbb
in
call
sbb
pop
xchg
fcoml
std
mov
test
cmp
iret
pop
mov
add
ds
add
sbb
sub
lcall
pop
mov
sub
cmp
stc
sbb
jl
add
int
gs
stos
xlat
push
int3
cmp
mov
in
test
push
xchg
or
jo
shll
cmp
cwtl
arpl
jbe
ret
iret
out
sub
push
aaa
jg
push
movsb
jo
loopne
add
stos
push
push
ror
imul
pop
repz
mov
addr16
jmp
or
sub
adc
inc
jmp
aam
in
lret
sub
ficoms
jae
aad
xchg
jb
and
mov
ja
leave
inc
ss
movsb
test
mov
ljmp
sbb
sbbl
xor
shll
and
cs
xor
std
and
mov
push
stos
xor
cmp
repz
jb
aad
imul
iret
xor
inc
test
outsb
out
jbe
inc
pop
repz
push
arpl
sub
rcrb
add
push
sbb
xchg
push
cmpb
test
pop
mov
dec
jo
mov
inc
insb
popf
jl
mov
fisttpll
loope
add
fwait
ds
scas
sub
cmpsl
push
or
mov
xor
push
dec
cwtl
sbbl
daa
xor
push
clc
sub
push
mov
jmp
or
dec
outsl
clc
push
movsb
ds
mov
lcall
push
pop
cwtl
cmp
dec
xchg
andl
clc
sbbb
push
test
inc
sbb
lods
jl
ds
aas
pop
xchg
imul
add
aam
aas
fwait
or
or
pop
mov
mov
stos
xor
clc
dec
mov
mov
push
int3
and
or
fldl2e
sarl
pusha
js
add
addl
jp
daa
add
call
jl
sbb
fwait
cmp
int
or
jnp
push
mov
cmpsb
daa
shlb
cli
shl
inc
clc
push
filds
inc
lock
mov
mov
mov
add
and
lods
cmp
mov
pushf
dec
push
cmp
cld
mov
jb
jb
cmp
pop
fmulp
es
adc
jmp
cli
stos
hlt
sbb
jo
mov
aas
jmp
call
hlt
dec
cmpsl
fnsetpm(287
addr16
das
fsubl
imul
fstl
repnz
sahf
mov
dec
xorb
sbb
cmpsl
mov
scas
enter
mov
mov
rcrl
jle
sbb
insl
sahf
sbb
mov
popa
mov
mov
and
jl
cwtl
insl
enter
push
cmp
mov
push
mov
mov
jnp
hlt
mov
sub
push
pop
repz
movsb
sbb
lcall
fcmovne
stos
sub
push
mov
fimull
hlt
mov
jo
js
sub
mov
stc
pop
jecxz
adc
adc
loopne
insl
shlb
fiadds
in
adc
adc
xchg
sarb
pop
mov
into
leave
xlat
ret
sub
mov
fld
fildl
sub
xorl
stc
xchg
lock
test
orl
cmp
push
fsubl
cld
xor
stc
cmp
xchg
lds
pop
xor
pop
aaa
inc
mov
cmp
lds
jle
inc
and
push
mov
lods
jno
push
fstpl
adc
in
fsubrl
ret
test
rclb
lea
dec
jae
lds
adc
test
iret
mov
dec
xor
cwtl
enter
and
fmuls
repnz
xchg
imul
xchg
jb
mov
lcall
fdivrl
daa
pop
ret
cmp
and
push
shufps
sarl
es
pop
push
cmp
test
lock
push
lock
mov
cld
mov
fistpll
adcb
pop
cmp
aad
inc
dec
imul
jmp
popa
push
dec
rcr
mov
arpl
aam
fs
repz
mov
cs
or
mov
xor
fcomp
xchg
cwtl
popf
das
push
inc
iret
xchg
adc
adcl
fidivs
pop
inc
ss
aaa
xchg
mov
sbb
xor
clc
pop
adc
push
out
les
adc
loopne
xchg
sbb
cmp
push
pushf
loop
push
add
ret
cmp
and
lahf
pop
or
xor
int
push
add
je
mov
adc
ror
sub
add
jno
in
push
sbb
push
or
aaa
js
jmp
push
lret
jge
inc
ja
sbb
rcrb
xchg
add
icebp
nop
movsb
sub
mov
jnp
cli
mov
mov
xor
sahf
in
pop
fs
loope
cmc
imul
cmpsb
leave
and
push
int
push
hlt
insb
je
jo
dec
add
mov
popf
mov
or
dec
mov
xor
call
push
push
test
outsl
jge
repnz
stos
jp
jno
lea
jecxz
and
xchg
negl
and
dec
repnz
xchg
mov
repz
aas
sti
fwait
or
sub
leave
cmp
and
pop
push
pop
enter
out
xchg
shl
outsb
shlb
cmp
fisttps
mov
push
sub
sti
testb
xlat
sbb
push
jl
jbe
divb
test
cltd
je
imul
add
shlb
lcall
repnz
sbbl
push
imull
dec
es
push
rcrb
iret
cs
js
dec
je
push
inc
les
mov
push
shll
adc
mov
mov
sub
sbb
ret
jnp,pn
out
push
jmp
lahf
mov
pop
sahf
out
push
mov
stos
sub
fcoms
mov
repz
dec
inc
adcb
data16
inc
pop
push
jns
xchg
out
push
mov
sub
in
addr16
mov
mov
push
sub
outsb
mov
movsl
fstl
sub
mov
movsl
jns
jb
cmc
adc
clc
sub
in
push
cmp
popl
jl
push
sub
lret
jb
in
or
ds
das
mov
dec
fxch
ret
mov
pop
jmp
out
adc
cltd
push
pushf
movl
fistl
arpl
add
adc
xor
add
imul
or
or
cs
mov
adc
gs
in
adc
addr16
shl
hlt
lds
insb
sbb
jp
lock
mov
into
jb
shrl
cwtl
pop
sbb
jecxz
cs
adc
pop
inc
dec
push
push
mov
mov
loope
mov
je
aas
aas
jno
mov
jno
ret
lods
or
pop
fstps
mov
inc
push
in
bound
or
pop
mov
or
sbb
jne
push
scas
push
cmpsb
mov
and
add
lea
mov
xor
or
xlat
aam
loopne
push
sub
xchg
testl
add
fistpl
mov
sub
js
pop
jbe
dec
outsl
pushf
call
adc
dec
aad
movsb
arpl
cmp
jle,pt
movsb
out
shl
stc
sahf
loopne
insb
pop
xor
ret
push
mov
dec
jb
add
in
mov
lods
add
dec
inc
sbb
sub
mov
inc
mov
dec
scas
pop
fldcw
daa
call
jl
pop
sub
enter
mov
pop
add
stos
xor
popa
cmpsl
fcmovne
push
sub
mov
or
inc
sbb
in
jb
push
sub
push
adcb
je
and
mov
cmp
es
dec
add
adc
mov
fidivl
jmp
xchg
or
out
jnp
pop
inc
arpl
mov
sti
fimuls
xor
test
xor
push
mov
pop
clc
jmp
mov
movsb
add
inc
jo
adc
rcl
bound
out
and
mov
test
inc
mov
jge
xchg
push
jnp
call
cltd
rorb
adc
xor
insb
pop
mov
add
jmp
jnp
lahf
sar
pop
xchg
add
popf
jecxz
dec
mov
mov
outsl
mov
sub
or
js
sbb
call
xor
aas
testl
jne
xchg
test
inc
add
popa
in
imul
jnp
push
adc
mov
int3
sahf
cs
dec
ret
push
jo
sub
sub
fldt
push
bound
fcmovnbe
add
and
sub
ja
int
mov
xorb
sbb
add
sub
repnz
dec
jecxz
nop
jge
ret
inc
ljmp
jmp
sbb
movq
sti
xlat
mov
fcmove
dec
sub
stos
xchg
mov
out
ja
sbb
insb
mov
jne
fimull
scas
inc
push
lcall
adcb
mov
and
arpl
or
jnp
ja
cli
push
lods
pop
cmp
fiaddl
mov
hlt
mov
negl
xor
adc
pop
add
cs
mov
ljmp
or
pop
in
mov
xorl
push
adcl
out
xchg
and
je
jge
aad
dec
jecxz
xor
movsl
div
jb
jp
push
fsub
daa
popa
dec
mov
call
add
adc
inc
in
es
mov
mov
dec
hlt
mov
es
pop
jp
dec
test
pop
pop
jnp
cmp
clc
mov
or
incl
test
imul
sti
push
fwait
inc
sbb
hlt
adc
and
or
js
insb
movsl
fwait
pop
or
lcall
xor
sbb
data16
add
jbe
push
mov
addb
mov
push
int3
sub
xor
xor
in
dec
sbb
push
mov
push
or
cmpsl
mov
sbb
ss
mov
mov
sub
dec
out
jg
stos
ja
cmp
je
and
add
iret
mov
jae
lahf
and
lret
adc
fidivrs
fimuls
inc
push
mov
imul
imul
cmp
fadd
push
insl
pop
pop
push
push
pop
enter
xor
xchg
inc
cmp
ret
lcall
dec
inc
test
cmpsb
mov
stos
loop
ret
in
sbb
mov
loopne
or
xchg
test
mov
xchg
jp
lods
or
ja
sahf
xorb
inc
imul
enter
lods
push
sub
xor
mov
scas
mov
loope
in
sbb
adc
inc
int3
mov
dec
fidivs
ret
icebp
mov
loopne
inc
loopne
xor
loop
jge
mov
ss
fdivs
popf
jmp
mov
pop
and
insl
loope
imul
leave
ret
jbe
outsl
mov
mov
jns
pop
inc
inc
dec
cmp
pop
fs
incb
pop
mov
mov
or
rcr
sub
mov
clc
sbbb
fiadds
movntq
dec
xchg
out
jp
push
repz
inc
xor
pop
test
outsl
mov
aas
data16
lret
xchg
pushf
insl
xor
xchg
xchg
ror
shlb
sbb
popf
xor
jbe
ret
pop
in
jmp
mov
dec
jp
dec
clc
mov
cmp
mov
inc
popa
add
fimuls
push
mov
cmpsb
loopne
cs
faddl
jp
push
mov
mov
repnz
cltd
data16
cld
lea
or
orl
cld
jno
mov
fisubl
cmp
adc
scas
out
mov
loop
inc
jbe
xchg
mov
pop
or
mov
push
xlat
pop
fwait
mov
imul
popf
push
loope
cltd
les
scas
or
loop
pop
inc
jecxz
dec
mov
push
leave
mov
mov
sub
test
adc
inc
dec
sbb
cmp
cmp
xchg
stc
sub
add
xchg
cmp
shl
insb
add
into
inc
add
dec
cmp
dec
ret
xor
into
scas
jl
xchg
arpl
mov
daa
inc
pop
or
stos
ret
sbb
idivl
cmp
faddp
mov
cmovne
lret
rcl
pop
imul
in
pop
js
jbe
mov
arpl
mov
mov
subb
cmp
arpl
mov
lods
out
pop
out
inc
inc
addr16
out
stos
cs
repnz
out
pushf
and
jmp
cld
iret
ja
call
lock
fdivrs
mov
or
dec
jo
xchg
cmp
orb
lea
mov
dec
xchg
addr16
mov
lods
fstps
nop
sbb
jns
adc
out
xchg
push
pop
in
pop
jle
xchg
sub
into
mov
lods
xchg
shrb
cmp
push
pop
nop
ja
mull
aam
out
xchg
adc
in
clc
dec
push
xchg
pop
lret
pop
cmp
int
aad
into
mov
scas
mov
push
xchg
clc
fidivrs
in
pop
ds
scas
fadds
shll
shr
mov
stos
dec
mov
xor
inc
inc
pop
and
adc
outsl
adc
mov
cwtl
xchg
cmp
shrl
lock
aaa
test
lret
pop
pop
ljmp
mov
sub
cmp
incb
mov
mov
out
jns
fdiv
or
and
xchg
pop
mov
sub
loope
xchg
stos
or
test
xchg
invd
xchg
add
imul
dec
add
sub
pop
push
xchg
sbb
mov
lds
or
test
push
dec
xchg
sbb
imul
xchg
loope
daa
fxam
add
mov
movaps
sahf
pop
outsl
adc
stc
pop
ficompl
mov
xor
mov
rcr
popf
mov
stos
enter
jl
bound
and
and
dec
mov
movzbl
je
mov
cli
ja
ljmp
cmpsl
iret
lahf
js
cli
or
fnstenv
jae
sti
mov
nop
push
add
cltd
mov
adc
lahf
cs
loop
cmp
push
insb
out
icebp
jle
ds
lods
and
adc
mov
mov
call
add
add
xor
pop
insb
fs
movsl
or
les
mov
push
aas
push
les
jg
into
xchg
inc
pop
lea
idivl
gs
lock
jae
dec
repz
cmc
inc
dec
dec
mov
inc
inc
jp
cmp
movsb
xchg
mov
aad
jb
cmpsb
jnp
sub
clc
popa
mov
std
jecxz
jno
push
daa
dec
mov
push
das
jecxz
imul
push
adc
mov
in
mov
lods
adc
mov
movl
xchg
mov
pop
sbb
add
mov
cmpsb
lds
jae
roll
call
mov
sahf
ljmp
mov
push
pop
rcr
push
lret
cmp
clc
xor
jl
call
push
jl
mov
faddp
loop
add
mov
fwait
adc
stc
ss
movsl
xchg
repz
in
bound
mov
xor
clc
daa
jne
loop
int
inc
push
out
ror
cld
pop
jmp
ret
aas
js
jle
fbld
aaa
mov
mov
sbbl
cmp
mov
dec
adc
aad
sub
ret
sbbb
pop
and
popf
jo
subb
cs
daa
ss
ret
cmp
dec
aam
push
ds
lret
or
lods
jle
adc
and
mov
and
sbb
test
int
xchg
in
lea
pop
adc
jns
test
leave
mov
xlat
add
push
in
pop
sub
call
sti
lock
mov
sub
mov
data16
lahf
dec
fnstsw
ret
xchg
or
push
iret
mov
and
ret
ds
jl
sub
insl
nop
out
outsl
pop
popf
xor
jl
jb
mov
push
test
pusha
nop
and
mov
leave
mov
lahf
int
xor
pop
xchg
sbb
rcrl
push
loope
xlat
lcall
test
fisttpl
sub
rcrb
adc
jbe
cmp
ficompl
xchg
inc
sub
mov
ret
sub
orb
push
push
call
ficoml
mov
js
push
mov
sub
ljmp
dec
dec
cmp
dec
mov
inc
mov
hlt
daa
inc
into
ljmp
test
inc
dec
jb
sti
and
stos
into
rcr
push
lret
push
mov
push
cs
fidivl
js
mov
jg
das
pop
sbb
add
fstpl
cmp
outsl
adc
add
enter
and
lods
push
and
mov
pop
ja
hlt
int
mov
push
or
out
push
testb
push
xor
cmp
adc
pop
cmpb
cwtl
dec
outsl
js
enter
push
inc
adc
loope
hlt
lock
ss
sbb
bound
test
scas
into
cmpsl
jne
ds
adc
iret
pop
jnp
popf
jns
jl
xor
cmp
out
enter
fistpll
adc
sub
nop
scas
movsb
jo
call
rcrb
xchg
popa
xor
addb
push
pusha
add
cmp
push
xor
adc
jge
cld
push
adc
lods
sbb
idivb
ret
push
subb
in
fsubr
xchg
int3
es
jg
xchg
xchg
push
and
inc
add
pushl
sbb
cmp
mov
test
adc
xchg
inc
insl
fstpt
or
scas
and
add
push
or
imul
andb
xor
push
inc
pop
cmp
in
xchg
jnp
dec
ljmp
pop
push
adc
imul
xor
fs
add
mov
and
clc
testb
mov
jmp
push
out
jo
hlt
addr16
insl
jp
stos
in
mov
jmp
mov
sub
int
xlat
fbld
vphaddbw
xchg
cld
cmpb
into
and
cwtl
out
jmp
and
rcll
andb
inc
leave
push
dec
jle
sahf
shlb
dec
jg
or
ret
cmp
bound
leave
mov
push
lods
push
mov
lret
cmp
and
mov
dec
sub
mov
fwait
or
cmp
scas
in
repz
shrl
mov
fidivrs
decb
cmc
xchg
stc
mov
cmp
inc
cmp
add
sub
out
cmpsb
sbb
xchg
cmpsb
sbb
mov
rcrb
fstpl
into
xor
push
mov
jle
stc
ljmp
jecxz
or
test
push
dec
cltd
push
pop
mov
pop
fldenv
push
push
out
mov
cmp
dec
stos
insb
sub
outsb
lea
ret
stos
dec
fmuls
js
xor
dec
sbb
sbb
aam
out
xchg
loopne
jo
ja
lret
sub
into
push
out
and
push
mov
sub
jge
mulb
fistps
or
gs
mov
cmpb
add
xchg
sub
scas
stos
notb
js
jecxz
mov
pop
mov
loop
xchg
xchg
lods
xchg
insl
clc
and
adc
inc
push
xor
mov
and
push
lahf
inc
cld
cmp
pop
inc
sahf
mov
sub
out
mov
mov
mov
test
sbb
shlb
psrad
bt
pop
je
xor
les
loope
ficoml
push
test
cmc
pop
into
ja
mov
and
mov
loopne
pushf
pop
test
leave
sbb
or
lahf
rcrl
mov
add
flds
aad
jne
outsl
fdivrl
adc
hlt
mov
aam
loop
mov
sub
sahf
jne
lods
scas
dec
jl
out
push
std
and
repnz
inc
out
sub
subl
fwait
outsl
jmp
out
adc
hlt
mov
inc
push
and
pop
mov
enter
pop
jg
cmp
imul
sbb
cmpsb
and
push
out
fisttpl
inc
loop
mov
mov
es
jns
add
and
mov
xor
xor
mov
sbb
ja
jmp
mov
dec
les
xor
cmp
fcoml
inc
push
popa
mov
cmp
inc
sub
aaa
fwait
or
ret
and
lock
pop
mov
mov
mov
test
pushf
cmp
xor
fisttps
add
push
and
add
mov
loope
movsb
movsl
xor
js
rcrl
pop
mov
inc
dec
and
xor
add
fwait
iret
inc
xchg
incl
cmp
xchg
loopne
adc
jl
push
scas
icebp
ss
pcmpgtw
das
mov
shr
inc
call
push
mov
add
add
out
mov
repnz
out
sti
mov
aaa
cmp
fisubs
mov
mov
sub
mov
sbb
sub
add
or
aam
push
dec
jnp
jge
xchg
jae
xchg
dec
pop
outsl
mov
popf
sbb
sub
aaa
mov
xchg
cmp
mov
jno
gs
adc
les
fisttpll
xor
scas
shl
jnp
test
adc
adc
mov
or
mov
push
imul
jae
jns
sarl
leave
stc
pop
fdivl
push
mov
push
test
inc
dec
mov
lds
lret
pusha
jp
cmp
mov
push
jbe
jne
loopne
inc
mov
xchg
iret
push
cmpl
pop
or
jl
loopne
repz
sbb
push
lret
xor
aad
fmull
popf
cld
cmpsb
filds
in
sbb
mov
push
loop
fnstcw
dec
or
test
je
movsl
dec
gs
fnstcw
outsl
mov
lahf
pusha
fwait
les
in
xor
ret
xchg
pop
pop
stc
cmp
loop
add
cld
pop
sbb
dec
std
or
mov
iret
sub
push
es
sti
mov
mov
adc
iret
sub
mov
sub
mov
mov
stc
xchg
push
les
or
fstps
xchg
les
adc
xchg
cmpsl
cmc
adcl
scas
or
sub
iret
test
mov
addr16
sbb
mov
ss
sbb
add
mov
clc
repnz
xor
ret
add
arpl
push
or
adc
fmuls
mov
aaa
bnd
xorl
movsl
stos
xchg
into
jbe
cmp
push
movsb
dec
outsl
test
xor
int3
mov
lods
dec
pop
mov
test
pop
mov
add
cwtl
mov
mov
and
cmc
cmp
cmpsl
inc
icebp
and
gs
insb
pop
xor
adc
lea
cwtl
or
lahf
inc
jbe
test
adc
sub
jne
ja
mov
cli
idiv
adc
in
add
mov
mov
repz
daa
lret
pop
xor
pushf
das
xchg
into
decl
aaa
xlat
bound
arpl
add
in
push
or
addr16
mov
xor
add
xor
mov
aas
js
scas
and
dec
xchg
xor
cmp
ficoml
sbb
ret
sti
outsb
jb
sbb
insl
lea
call
ljmp
add
orb
jne
and
test
adcl
xchg
cmp
or
inc
pop
es
mov
insb
addr16
dec
cwtl
rcr
xor
sti
xor
out
adc
mov
in
xor
or
ljmp
test
je
int3
pop
in
add
mov
inc
mov
adc
into
int
dec
cmpsb
pop
out
adc
out
sti
dec
rcll
mov
jg
jno
testb
insl
shll
and
and
dec
add
inc
push
add
xchg
adc
jmp
jb
outsl
js
mov
mov
cwtl
push
or
loop
cmp
clc
cwtl
mov
push
xor
shll
loope
icebp
cmc
mov
lds
jp
stos
cmp
iret
popf
test
push
cmp
mov
cmp
xor
fisttps
pop
out
mov
dec
mov
inc
mov
sub
enter
xchg
or
mov
jo
scas
insl
push
dec
loopne
sub
clc
add
in
xchg
lahf
addl
repnz
cmp
dec
add
cltd
mov
test
arpl
push
sbb
std
mov
add
mov
pop
add
pop
lods
fildll
xlat
outsb
sub
push
cmp
push
xlat
iret
adc
xor
jns
std
push
jns
cmp
dec
mov
sbb
inc
adc
cmp
sbbb
mov
jl
xchg
jbe
jge
sub
imul
and
js
sbb
jne
popa
mov
pop
hlt
hlt
jmp
cmpb
into
cmovg
out
sbb
insl
addb
or
xchg
adc
inc
and
push
jns
fstpl
xor
aam
ja
xchg
pop
loop
xchg
movsl
push
insb
cwtl
and
push
sbb
ljmp
xchg
ficoml
xorb
add
in
in
imul
push
push
or
stc
adc
mov
ret
loopne
aam
mul
aad
mov
add
lds
pushl
loope
and
insl
lods
int
and
xor
int3
gs
push
cmp
cmp
cmp
fisttpll
mov
push
es
mov
pop
adc
leave
ret
mov
sbbb
sti
mov
fsts
mov
jbe
fmuls
sub
jl
jp
lcall
sti
xchg
xlat
pop
rorb
les
mov
pop
jo
movsb
into
inc
push
dec
imul
data16
popf
dec
pop
push
xchg
jne
in
and
lea
jl
or
shll
mov
repz
push
cmp
das
or
sub
dec
cmp
pop
cmp
jae
movsb
mov
inc
pop
ja
js
mov
rep
sbb
stos
insb
nop
mov
jns
lock
mov
xchg
push
enter
lcall
inc
jl
fists
dec
or
mov
jecxz
pop
push
aaa
cltd
aam
push
adc
subb
je
push
adc
std
mov
sub
filds
mov
fsubrl
jge
pop
cmpsl
das
inc
adc
jmp
les
jge
notl
lods
movsl
cltd
inc
outsl
fucomi
je
std
jmp
push
xchg
and
sbb
ds
mov
jns
into
lahf
and
push
lcall
loop
pop
imul
outsl
mov
scas
daa
pop
les
cmpsb
xchg
sub
cmp
mov
xchg
dec
xchg
fmull
ret
test
ja
push
push
cs
out
repz
push
xchg
mov
and
and
lret
ds
mov
lea
lods
mov
pop
psubq
cltd
pusha
inc
add
subb
cwtl
lret
setge
xchg
test
inc
rorb
inc
pop
out
js
scas
mov
jecxz
push
jae
push
fs
das
mov
out
inc
out
cmp
mov
pop
sbb
movsb
sbb
lock
inc
mov
sub
add
sbb
clc
jp
jmp
lcall
and
ret
lods
int
imul
dec
out
cmp
push
fs
xchg
mov
ja
and
fs
outsb
push
rolb
push
inc
sbb
cli
inc
out
rcr
push
or
xor
repz
cli
loope
push
jmp
mov
xor
das
testb
sbb
xor
je
pop
mov
mov
and
add
addl
out
out
adc
mov
jl
outsb
adcb
flds
cld
test
enter
jecxz
and
repz
lcall
adc
ss
insl
push
mov
popf
xor
push
cltd
or
inc
push
pop
addr16
inc
inc
jae
xchg
mov
xor
cltd
pavgw
sbb
js
arpl
cmp
or
fnstsw
lahf
push
cli
scas
cmp
jns
sbb
into
pop
pop
sbb
hlt
testb
dec
ret
add
mov
push
jg
inc
in
stos
adc
sbb
imul
jecxz
leave
jns
call
inc
mov
icebp
push
inc
push
subl
das
sbb
loopne
jbe
rcr
mov
cmp
add
and
aam
or
jne
add
xor
mov
mov
inc
xor
pop
and
mov
push
enter
mov
mov
in
xchg
sbb
sbb
mov
sbb
stos
pop
mov
or
inc
inc
adc
or
pop
pop
mov
sti
test
ja
mov
dec
shl
mov
cmp
sbb
mov
xchg
or
sub
mov
adc
adc
sub
fcmovnbe
inc
adc
fs
into
adc
or
std
and
leave
pushf
outsb
xchg
inc
es
add
int3
pop
std
dec
push
inc
ffree
and
clc
ficompl
insb
pop
ret
daa
pop
inc
stos
mov
lock
sub
adc
bound
lahf
les
shlb
xor
ja
cmp
xlat
sbb
jne
lcall
das
shlb
push
fcom
push
cmp
or
xor
aad
call
ds
adc
or
fdivs
push
scas
test
push
mov
jmp
test
xchg
outsw
inc
gs
jne
out
mov
ss
xchg
fadds
testb
cmp
jno
mov
xchg
add
out
out
sub
xchg
mov
mov
aam
jp
jb
inc
mov
loop
mov
jmp
lret
roll
inc
jae
fwait
daa
in
add
stos
addb
mov
cmp
push
jmp
cmp
mov
pop
movd
inc
jp
add
les
lds
push
or
xor
mov
xor
mov
and
cmp
dec
rcll
push
push
cli
ss
cmc
sub
enter
add
sub
xchg
sti
pusha
lods
imul
jle
rcll
mov
repnz
clc
fistl
into
mov
push
and
inc
xlat
cmp
pop
int
or
pop
lods
push
sbb
pop
ss
into
movsb
nop
mov
hlt
ret
aas
push
sub
repnz
leave
lcall
add
push
int3
mov
ss
out
in
rorb
mov
fincstp
inc
push
xchg
ficoms
cmp
gs
popf
outsl
lock
loop
sarl
add
leave
push
popa
inc
pop
cmp
and
adc
push
lret
into
lea
out
test
mov
mov
pop
mov
inc
and
push
ja
out
lods
pop
add
rorb
mov
sub
add
fcomip
out
repnz
lods
test
xor
fiadds
dec
sbb
add
aaa
push
rcrb
out
loop
and
mov
andb
fmull
das
lret
dec
and
ret
out
push
xchg
push
out
cwtl
sbb
sbb
and
adc
mov
push
movsl
js
sbb
stos
out
sub
std
ud2
mov
cmpsb
xorb
push
scas
cmc
dec
xchg
out
dec
jecxz
pop
imul
clc
mov
lock
into
jecxz
fildl
push
xchg
insb
dec
je
cld
push
inc
jnp
imul
xor
inc
xor
push
nop
stos
push
inc
mov
or
xor
cmp
ret
test
int3
pop
shl
sbb
adc
xor
mov
add
pop
mov
movsl
lods
sbb
loop
imul
mov
adc
xorb
movl
int3
bound
mov
xchg
std
ss
xor
mov
decl
pop
lock
mov
xor
loop
fisttpll
pop
xchg
pushl
movsb
shll
and
sbb
jmp
lret
gs
pushf
inc
testl
popaw
mov
cmp
xchg
add
xchg
sub
inc
lcall
movsb
or
jnp
test
test
aas
cmp
imul
or
scas
cli
fwait
jb
je
lea
mov
int
jo
cmp
hlt
xchg
dec
sti
imul
idiv
subl
lods
pusha
xor
dec
ret
leave
mov
pop
fisubl
and
rol
rolb
dec
sub
and
xor
jbe
pop
inc
add
dec
cli
push
js
xchg
fisubrl
outsl
jbe
aaa
je
pop
adc
jmp
xor
cmp
fmuls
outsl
jmp
scas
xor
pop
jns
aad
scas
xchg
ljmp
in
mov
push
int3
int3
je
pusha
xorl
push
dec
js
xlat
lds
gs
loope
dec
cmpl
pop
cmp
aad
imul
lahf
repz
push
adc
dec
sbb
add
xor
cs
add
mov
enter
iret
mov
mov
jnp
or
cli
pop
push
mov
fcmovbe
fcoml
movsl
cmp
rcr
pusha
mov
call
mov
sbb
mov
pop
or
sbb
jl
cmp
adc
xchg
bnd
movsl
push
das
push
sbb
push
inc
xor
repnz
mull
lret
pop
xchg
pop
adc
bound
scas
inc
push
add
lret
int
jecxz
cmp
popa
outsb
rcll
inc
repnz
addr16
pop
filds
stc
test
dec
push
dec
add
enter
dec
call
push
addl
jns
mov
divl
dec
push
stos
push
faddl
gs
jmp
jne
loope
dec
out
fdiv
sub
lret
add
mov
add
ds
lcall
cmp
lahf
dec
je
jne
jmp
jl
inc
xor
add
xchg
int
pop
mov
push
js
in
inc
pop
push
mov
cmpsl
int
mov
pop
pop
stos
jb
jmp
in
lds
adc
dec
out
aaa
xchg
imul
in
fcmovnu
inc
xor
pop
gs
cmp
std
idiv
aas
ret
pop
mov
pusha
mov
loope
jecxz
xchg
lcall
cmp
xchg
cmp
iret
lret
jge
jbe
push
sub
test
cmc
std
or
adc
mov
je
push
ficomps
xchg
into
and
xchg
jns
push
mov
dec
mov
gs
insl
mov
or
inc
cmp
mov
cwtl
shrl
in
shl
pop
xchg
into
test
in
loope
mov
sub
fadd
xchg
mov
or
mov
imul
ret
mov
rcrb
mov
adc
pusha
dec
push
inc
jo
loope
dec
ljmp
pushf
cli
jno
pushf
or
aam
mov
lds
mov
push
inc
out
out
lret
jl
push
sti
test
dec
je
cld
cwtl
frstor
push
fwait
pop
call
pop
jge
sti
sbb
jbe
cmp
test
push
jns
dec
add
mov
pop
or
mov
sbb
mov
test
mov
je
es
mov
and
mov
cld
cltd
cmp
push
ss
push
insb
orb
bound
mov
or
jno
fcom
lret
js
in
sahf
jbe
out
push
cmp
add
cwtl
lock
fidivrs
mov
xlat
bound
sub
movsl
cmp
sbb
ret
adc
das
mov
jno
or
pop
jb
mov
insb
int
sbb
nop
cmp
or
xor
data16
xor
pop
es
xor
movsl
and
lods
test
jno
add
popf
mov
movsl
add
cmp
sub
jne
xchg
jg
xchg
dec
fiaddl
outsb
cs
aam
roll
jmp
inc
out
cli
mov
inc
and
adc
clc
dec
stos
or
mov
ja
mov
inc
test
pop
mov
add
movsb
push
adc
mov
shl
push
mov
sbb
adc
jbe
cli
outsb
cltd
pop
jecxz
and
push
pop
pop
sub
sti
sbb
sub
fdivp
pop
ret
push
jne
cmpsl
cltd
pop
insb
mov
mov
in
lret
inc
insb
fadds
aas
call
or
notl
cmp
test
outsl
fs
inc
bswap
cmc
pop
data16
or
clc
pcmpgtd
aad
rcl
hlt
mov
mov
loope
add
mov
add
add
ret
xchg
xchg
sbb
daa
xorb
out
xchg
xor
push
fs
test
lret
lcall
pop
dec
and
shl
cltd
sbb
popf
lods
mov
mov
mulb
in
nop
inc
test
xchg
cmp
sbb
push
stos
mov
aaa
out
push
rclb
cli
sbb
mov
pushf
pop
jns
dec
adc
push
test
lea
xchg
dec
and
or
inc
shll
sbb
xor
push
pop
inc
dec
mov
sub
iret
push
pop
ljmp
push
jp
cli
ljmp
rclb
sbb
repz
mov
jl
in
in
loop
fmuls
imul
call
dec
lahf
jmp
out
lret
push
mov
fs
mov
jle
push
inc
dec
xor
pop
jae
popa
mov
fists
pop
shr
imul
sbb
ficompl
rcll
int
jmp
call
push
push
loopne
stc
jnp
mov
add
xchg
lcall
daa
and
stos
cmpsl
aam
scas
xchg
fnstsw
add
mov
lods
iret
loopne
hlt
cmp
movsb
cmp
jnp
mov
daa
add
sbb
out
sti
jle
jns
xor
popa
push
inc
xor
insb
in
xchg
rorl
ja
mov
outsb
rorl
mov
testb
mov
jmp
icebp
loopne
iret
sti
pop
scas
xor
mov
mov
cmpsb
clc
push
mov
les
aam
cmp
push
loopne
mov
fnstsw
popa
js
dec
xor
xor
fcmovnu
pop
dec
xorb
loopne
ja
push
insb
dec
and
cli
xor
or
sub
in
mov
push
aas
mov
imul
ljmp
lcall
push
imul
mov
jae
pushf
jb
loopne
inc
and
lea
xchg
pop
mov
aaa
aad
aam
mov
gs
ficoms
mov
dec
bound
aad
fistps
repz
inc
in
ret
outsl
mov
mov
int
out
data16
and
xchg
sub
pop
notl
dec
xchg
aam
mov
filds
stos
mov
negb
lcall
xchg
xlat
sbb
pop
popa
les
mov
lret
or
mov
sub
jb
cmp
ror
dec
and
lods
mov
inc
pusha
clc
leave
dec
cmp
mov
test
inc
cmp
jb
pop
mov
dec
inc
shlb
aaa
adc
xchg
sub
or
jle
sub
sub
fisttps
sub
xchg
sub
jp
xchg
mov
fwait
loopne
mov
cmp
inc
ljmp
and
cmp
ds
ds
sbb
mov
lock
xchg
cmp
jmp
cmp
sbb
inc
jo
push
sub
jle
jno
das
ljmp
add
out
in
int3
imul
pusha
sahf
pop
adc
clc
sti
mov
out
and
fcomp
ds
scas
icebp
mov
or
mov
repz
int3
nop
push
pop
pop
int
push
mov
mov
lds
lods
push
leave
and
fldenv
push
in
daa
mov
fistpll
push
or
punpckhdq
mov
add
movsl
movsb
gs
loope
and
dec
rol
push
ljmp
inc
movsb
test
outsl
outsl
mov
imul
add
cmpsb
mov
ret
sar
int3
jo
or
sub
inc
inc
data16
je
jge
sub
jne
mov
rcrl
fimuls
daa
sahf
pop
imul
pinsrw
ret
hlt
xchg
or
or
lret
fsubrs
mov
push
pushf
in
add
popa
cmpsl
cwtl
mov
std
dec
ds
fsubrp
mov
push
and
int3
xor
scas
inc
inc
jmp
mov
xchg
cmp
adc
fcmovnb
aas
jns
mov
lock
fld
adc
mov
outsl
ret
inc
cmp
pop
or
lods
clc
xor
inc
sub
pop
je
imul
mov
add
adc
push
cmp
inc
mov
jne
fsts
iret
sub
les
test
hlt
test
or
add
and
lret
lds
sub
je
xor
xchg
cltd
jb
add
sub
ja
clc
cmp
in
lock
push
adc
pop
vmovd
scas
dec
repz
pop
loop
pop
shrd
xor
rclb
pop
in
and
xchg
mov
mov
xor
xlat
mov
lods
dec
push
add
ljmp
xchg
xchg
aam
adc
sti
xor
inc
sub
jp
movsl
sbb
frstor
data16
dec
icebp
adc
cltd
inc
pop
xchg
add
mov
or
mov
daa
mov
sti
out
xchg
pop
in
orb
push
jbe
lahf
stos
mov
xchg
or
jg
mov
loop
lcall
mov
mov
sub
popa
lods
and
fistpll
stos
cmp
mov
adc
into
call
and
push
xchg
nop
push
push
sub
mov
lock
insl
pop
mov
outsb
pusha
adc
popa
cmp
pminsw
mov
inc
push
insb
daa
stc
test
nop
mov
out
push
sub
xchg
out
outsl
movl
test
test
mov
mov
jb
call
xchg
cmp
jge
pop
sbb
or
call
sub
pop
cld
jnp
pusha
mov
fadd
decb
adc
jmp
cmc
sub
mov
xchg
pop
jle
ficomps
xchg
inc
mov
push
lcall
pop
imul
cmc
mov
cwtl
jmp
xor
lods
push
orb
xchg
xlat
arpl
adc
not
enter
pop
adc
fldcw
les
add
ret
inc
data16
jmp
or
xorl
jne
ljmp
jo
enter
sbb
sub
repnz
es
or
or
push
xchg
in
call
inc
bound
lcall
pusha
add
mov
arpl
test
xchg
inc
pop
push
sahf
dec
jo
adc
jnp
sbb
test
mov
push
dec
adc
push
movsl
or
fcoml
sbb
xchg
fnstenv
mov
lods
cli
scas
test
in
or
jmp
aam
insl
mov
les
push
and
sub
fistpll
or
xor
jmp
push
mov
addr16
add
pop
das
jnp
sub
adc
and
mov
mov
stc
lods
test
fwait
cmp
inc
ror
std
shll
mov
or
insb
je
and
clc
insb
mov
repz
repnz
fimull
stos
std
je
or
sbb
jge
shrb
lret
not
adc
mov
std
pusha
arpl
ror
ror
adc
pop
sbb
pop
cmp
js
int3
stc
andl
imul
daa
sub
or
push
cltd
lea
repz
push
jl
dec
adc
inc
mov
loopne
jmp
dec
pop
cli
pushf
imul
pop
sbb
pop
push
insb
push
subl
and
lods
push
fs
int3
push
or
les
mov
test
sub
stos
and
pop
mov
pop
push
adc
shrb
daa
lock
and
xor
repnz
xchg
or
push
notl
mov
jp
mov
lods
aad
cli
sbb
add
sub
sahf
pop
jno
cltd
sbb
and
inc
push
popa
sub
adc
into
push
xchg
call
xor
cmpsl
sahf
dec
insl
fmuls
add
mov
pop
ds
sub
imul
mov
int
dec
fmuls
test
repz
andl
mov
arpl
or
cli
xchg
movsl
insl
push
in
mov
aas
out
ja
gs
fiaddl
mov
outsl
popf
adc
lahf
mov
mov
inc
cmc
ljmp
inc
fwait
or
adc
out
cs
mov
fstps
mov
enter
and
fldcw
ret
lods
jne,pn
mov
mov
outsb
xchg
js
adc
mov
and
inc
add
push
sahf
mov
jne
jmp
cmpsl
sti
push
push
or
pop
xchg
and
ljmp
lods
cmpsb
push
mov
loopne
aam
sbb
imulb
sbb
mov
mov
shrl
nop
pop
sub
push
jne
jnp
test
test
fnstenv
cmp
sbb
mov
std
cmp
das
mov
cmpb
hlt
sarb
pop
das
aas
mov
mov
xchg
dec
jg
jno
imul
movntps
iret
test
push
xchg
data16
movsl
mov
iret
mov
xchg
push
je
scas
inc
repz
shlb
xchg
fimull
xchg
iret
sub
adc
js
mov
push
xchg
mov
sbb
adc
pop
cmovne
lret
and
ljmp
cmpsb
add
int3
mov
and
outsl
xor
arpl
xchg
shl
cs
fisttpl
mov
xchg
lea
inc
dec
sbb
lds
mov
add
xor
sub
test
into
loopne
xchg
ljmp
int
arpl
lahf
cmpsl
push
cmpsl
icebp
cmpsb
lock
ljmp
push
imul
push
sub
add
stos
push
mov
int
mov
sub
jb
test
push
addb
shrl
add
or
pop
jmp
mov
aam
ja
shlb
rcll
js
jb
mov
frstor
jnp
test
fmul
push
aam
jmp
add
addr16
sti
fwait
pop
shll
cmpsb
in
stos
mov
cmc
or
cmpsb
sub
loope
sarl
add
xchg
cmc
stc
and
mov
and
inc
xchg
aaa
mov
sahf
add
mov
ret
lret
push
lds
mov
cli
data16
add
sub
or
jmp
adc
mov
mov
sahf
add
mov
jmp
xor
sarb
js
and
outsb
jb
mov
sub
jecxz
or
jmp
jl
into
std
sub
ret
test
shrl
mov
sbb
js
xor
xchg
and
in
gs
cmp
js
inc
lahf
and
ss
add
cwtl
lock
pop
mov
push
jb
push
in
dec
lret
xchg
pop
jg
mov
pop
pop
addb
pop
xchg
jg
xchg
push
cmp
mov
enter
mov
mov
pop
xorb
nop
test
xchg
push
xor
mov
mov
and
rcrl
lock
rorl
jb
and
push
mov
int
cs
xchg
and
stc
add
inc
cmp
jbe
mov
pushf
and
lock
into
push
jb
sbb
movsl
lahf
pop
dec
es
mov
testl
pop
jp
lds
xor
push
aaa
ljmp
sgdtl
loope
fists
xchg
xchg
fcom
in
sti
adc
rcll
push
adc
cld
notb
adc
and
mov
sbb
fiaddl
lods
jno
lods
loope
jmp
ret
cltd
pushf
fisubrl
testb
add
bound
adc
pop
mov
mov
insl
mov
ret
jae
xor
inc
mov
mov
lret
sbbb
cmpsl
cmp
adc
lea
mov
fwait
ret
out
sbb
and
ljmp
in
test
pop
sbbb
dec
cmp
and
rcll
orb
clc
rolb
lcall
lret
adc
pop
popf
dec
shll
loope
jle
push
xor
xlat
push
mov
shl
sub
add
and
lods
fsts
divps
push
addr16
jns
or
ja
aas
test
xor
sahf
cwtl
inc
cmp
pop
imul
lock
movsb
push
xchg
or
data16
hlt
xchg
and
jle
or
jb
adc
cmpsl
scas
das
pop
lcall
dec
shll
outsl
ss
mov
push
fsubrl
pop
test
rorl
rcl
xchg
fistpll
leave
es
outsl
mov
icebp
or
sub
into
add
test
sahf
in
push
ret
xchg
sub
or
lds
aad
rcll
jecxz
adc
testl
loope
and
incb
jo
repnz
xor
in
mov
movsb
add
push
and
jl
jne
push
xor
inc
jne
mov
jno
in
xchg
cmp
popl
add
adc
push
dec
pop
fdivs
cs
inc
pushf
add
xchg
or
xor
pop
sbb
cld
inc
inc
outsb
imul
jb
push
pop
lock
or
jbe
mull
lock
shr
push
mov
xchg
mov
xchg
push
and
fadds
mov
jle
mov
jno
or
cmp
pop
adc
dec
xchg
sbb
movsl
ds
ret
sbb
jmp
mov
jmp
inc
mov
loopne
in
sub
ljmp
sti
add
or
push
lret
fcom
fincstp
mov
test
lahf
xor
xorb
test
dec
cmc
cltd
xor
sub
es
xlat
fdivr
ret
arpl
insl
frstor
mov
adc
mov
jmp
xorl
das
rorl
and
mov
lods
jb
mov
dec
cmpb
ljmp
scas
add
es
leave
jbe
gs
imul
mov
rcrl
mov
fstl
mov
mov
push
lahf
cmp
bound
jbe
inc
adc
cmovge
pop
lds
xchg
xor
or
test
lods
lret
add
shrl
jno
pmaxub
dec
mov
insb
cmp
fistps
int3
adc
mov
dec
mov
jbe
or
mov
pop
rcl
or
or
inc
mov
pop
aas
out
xchg
enter
hlt
pushf
dec
and
cmpb
ljmp
sub
jle
push
ljmp
les
sbb
cmp
not
imul
rorb
sbb
and
rol
dec
jno
nop
mov
mov
or
loope
adc
cmp
push
mov
mov
fiadds
mov
fistl
scas
cs
shll
pop
lret
xor
loopne
rcrl
push
push
ss
or
aaa
push
add
fistpll
or
push
mov
mov
imull
jge
jle
mov
ljmp
ljmp
push
or
js
test
and
inc
xchg
push
call
mov
jle
jg
sub
cmp
lods
pop
cmp
hlt
mov
enter
int
cmp
xor
je
sbb
lock
inc
xor
cld
sbb
dec
scas
mov
sub
std
xchg
sub
mov
mov
fadds
inc
pop
jmp
lock
imul
imul
test
adc
adc
sbb
cmpsl
lcall
xor
lcall
and
pop
mov
xor
stc
mov
inc
imul
pop
in
test
aam
adcl
jg
add
pop
aad
xchg
out
push
dec
lret
sti
call
inc
loopne
int
loope
xor
xor
inc
xchg
loope
xchg
push
in
mov
adc
stos
xchg
sbb
out
xchg
push
mov
mov
jmp
mov
mov
xor
pop
push
fmuls
test
xchg
push
add
push
adc
push
lock
repnz
popa
enter
iret
jne
pop
push
jnp
sti
lea
lods
sbb
ds
in
dec
clc
cmp
xchg
pop
imul
sub
cmp
inc
pop
sysenter
push
lahf
insb
add
add
mov
inc
lcall
pushf
insl
xlat
scas
cwtl
mov
repnz
test
subl
xchg
cmp
add
stos
xchg
push
pop
xchg
lods
enter
mov
ja
dec
jmp
nop
mov
mov
bound
pop
ljmp
jp
adc
mov
xchg
xchg
mov
stos
push
push
xor
inc
mov
ret
cld
pop
lock
andl
adc
outsl
sbb
inc
pop
jp
adc
je
in
rolb
xchg
xchg
xor
pop
xchg
mov
sub
fisttps
push
gs
iret
mov
aad
cmp
fdivs
mov
mov
cmpsb
cmp
lods
mov
or
cwtl
jns
jmp
sbb
xor
xchg
insb
mov
cmp
cmp
push
fsts
lods
mov
mov
repnz
jge
pop
dec
xchg
xor
push
leave
and
popa
dec
orb
jl
cmp
cwtl
mov
sbb
nop
mov
inc
daa
insb
adc
xchg
outsb
aam
mov
mov
cmp
out
mov
pusha
push
or
pop
testb
xchg
xchg
in
sbb
mov
es
push
pop
lods
ret
add
pop
or
pop
popa
mov
imul
mov
inc
sub
and
push
or
pusha
loope
arpl
outsl
xchg
mov
lea
push
cmpsb
in
rorb
sti
popa
push
das
dec
stos
push
scas
fs
fcomps
in
and
jecxz
pop
mov
movsb
test
test
push
fnsave
in
movsb
xlat
rorl
mov
sbb
mov
jmp
sahf
jecxz
jns
or
roll
stos
jl
adc
dec
push
mov
push
xor
mov
jae
pop
pop
aas
mov
cmp
mov
test
jb
movsl
jne
sub
jnp
pop
dec
test
lcall
xor
cmp
roll
sbb
test
or
es
push
js
inc
cmp
mov
xlat
mov
lret
xchg
mov
xchg
push
mov
or
rcl
cmp
inc
xchg
fsubl
jp
or
inc
mov
fists
int
and
dec
cmp
dec
lahf
push
mov
and
ljmp
ret
std
ss
xor
xchg
xchg
mov
dec
mov
fidivs
add
emms
rorb
ljmp
and
outsb
xlat
insb
fstps
jle
mov
pop
in
and
movsl
push
adc
adc
mov
sub
push
sub
push
aad
lea
and
ja
and
dec
cs
jg
jl
lahf
mov
xlat
pop
in
loopne
test
xchg
mov
ds
movsb
mov
ret
sti
ficompl
dec
fiadds
mov
es
jge
int
dec
jns
in
stos
ds
xlat
imul
fisubs
cmp
and
mov
sub
pop
loopne,pn
sbb
fwait
xor
and
sub
sub
xor
mov
xchg
xchg
fsubrl
leave
xor
bound
pusha
fadds
sbb
push
jmp
pop
call
jmp
fidivs
add
push
dec
push
fldl2e
sub
in
add
inc
mov
popa
ret
enter
iret
arpl
fwait
xchg
ds
pop
cmp
repnz
sbb
stc
dec
nop
sti
loopne
int
add
nop
or
xchg
push
mov
or
sti
out
pusha
pop
or
imul
jbe
pushf
scas
pop
add
push
sub
in
inc
cltd
mov
cld
int3
xchg
scas
jl
dec
mov
push
fdivp
xor
cmp
mov
fwait
test
cmc
pop
sub
fcomps
push
das
jle
push
add
xchg
leave
rcl
scas
dec
ret
push
loop
mov
lahf
or
push
ja
fisttps
andl
out
mov
shrb
add
repz
push
nop
mov
test
push
cmp
mov
dec
xorl
ret
and
sarb
les
mov
aam
lods
es
push
push
movsl
jnp
adc
pushf
adc
loope,pt
imul
aam
xchg
xchg
xor
fiadds
cwtl
dec
fisubl
mov
cld
mov
movsb
xchg
stc
popf
mov
jno
lret
mov
ficomps
sbb
mov
stos
out
aaa
cmp
mov
push
xchg
cmp
mov
pop
pushf
adc
cmp
sbb
std
fstpt
aaa
shll
pop
imulb
adc
or
rcrl
fimuls
addl
jmp
dec
add
stos
int
jb
pop
and
aas
mov
or
rclb
xlat
mov
lea
outsl
scas
inc
push
fmul
shl
push
roll
add
adc
jo
pop
dec
xchg
xchg
daa
push
scas
call
pop
inc
arpl
push
out
ja
push
and
sbb
arpl
insl
shrb
dec
jbe
loope
adc
fxch
xorb
mov
add
or
xchg
xchg
pop
inc
and
ficoml
test
loope
pop
jle
imul
cwtl
shrb
pop
ret
cmc
jo
sub
ret
cmp
enter
ljmp
add
adcb
dec
pop
xchg
xor
stc
push
es
arpl
or
inc
push
sti
jns
sarb
into
mov
jno
test
push
inc
lods
push
jae
shl
inc
pop
icebp
mov
popa
scas
mov
fnstenv
mov
lods
adc
dec
dec
xor
pop
lret
iret
enter
imul
test
xchg
popfw
pop
pop
adc
test
es
icebp
ret
pop
dec
dec
sub
stc
inc
outsb
js
xchg
lds
sbb
and
mov
adc
dec
fmul
bound
fsubl
fwait
jae
fwait
cwtl
mov
adcb
scas
sub
mov
mov
pushf
cld
iret
cmp
cmp
pop
ret
pop
xchg
scas
fcomps
inc
je
jmp
add
cli
les
mov
lock
mov
mov
add
cmpl
in
dec
ret
xor
or
jne
pop
pop
jp
stos
lea
dec
jb
hlt
push
or
sub
xchg
aas
pop
mov
loop
adc
jb
cld
test
sbb
lock
or
out
das
es
pop
inc
push
sbb
icebp
xchg
testl
movsl
pushf
and
push
pop
jmp
add
enter
lcall
fs
gs
push
adc
imul
aas
add
sti
push
repnz
lock
lcall
gs
jo
push
xchg
xor
nop
jp
nop
mov
aad
dec
pusha
in
adc
fs
cmp
push
cwtl
xchg
lock
loope
outsb
xchg
aam
subb
cmp
inc
lods
mov
and
jmp
out
sub
cmovo
push
in
pop
mov
insb
out
mov
cmc
cmp
decl
imul
xchg
push
movsb
scas
out
fists
or
add
adc
popf
ja
imul
inc
outsl
inc
jnp
in
hlt
or
cmp
aam
xor
lret
lds
sub
dec
pop
push
stc
push
xchg
fdivp
pop
dec
scas
add
lds
xchg
xlat
dec
or
cmpsb
js
dec
dec
mov
dec
xchg
ljmp
lds
int3
and
mov
shl
xchg
xor
jnp
push
push
xor
inc
setbe
mov
cmpsl
and
enter
aaa
movsl
nop
push
inc
dec
cmp
or
push
je
mov
jle
add
sbb
adc
icebp
test
lock
pop
jl
roll
push
aad
inc
popf
popl
sub
mov
sub
xchg
pop
sbb
test
adc
sbb
dec
fdivr
repnz
repz
adc
or
jo
movsl
sti
cli
pushf
les
ljmp
repz
aaa
test
dec
lcall
push
sbb
mov
cmp
cli
mov
popa
aaa
jne
inc
roll
sub
divps
adc
aas
into
and
pop
add
fs
loopne
fmull
in
cmc
lds
ljmp
jmp
xchg
xor
and
testb
insb
push
es
sbb
clc
push
sbb
popf
test
and
int3
outsl
mov
cmp
lret
mov
adc
notl
xlat
push
jno
ret
movsb
pop
add
mov
pop
or
inc
xor
cmp
pop
jb
sbb
push
mov
sbb
fwait
bound
roll
loop
or
pusha
mov
xchg
stos
mov
sbb
jbe
shlb
push
pop
data16
pop
outsl
enter
mov
inc
lret
push
jns,pn
in
or
outsb
push
xchg
xchg
xchg
js
cs
iret
mov
loopne
pop
loopne
adc
sbb
shrb
adc
cli
xchg
adc
ss
test
std
loope
adc
sahf
shll
mov
push
pushf
jne
or
test
leave
leave
ficomps
test
stc
pop
mov
or
sti
push
jnp
aad
std
lret
cmp
enter
sti
loopne
fisttpl
out
popf
jp
popf
inc
dec
jb
inc
inc
xchg
fistl
popf
daa
push
xchg
out
dec
movsb
cmp
push
adc
lock
cmp
and
cmp
adc
jbe
jns
mov
test
ja
shlb
xchg
jbe
mov
xlat
repnz
push
dec
test
imul
aas
lea
dec
xchg
shrl
mov
pop
repnz
mov
push
out
sub
aas
pop
mulb
dec
cmp
push
jmp
outsb
adc
in
jecxz
test
push
jae
aad
shl
fs
jbe
xlat
cmp
gs
sbbl
sub
mov
enter
mov
xor
pop
roll
pop
test
es
cmc
xor
in
mov
nop
cmp
add
inc
sbbb
ja
and
lods
cmp
sbb
iret
xchg
push
dec
jbe
lods
adc
fs
test
adc
jns
cmpsb
jmp
push
aaa
inc
fwait
adc
cwtl
int
adc
popf
pop
and
sbbw
scas
xchg
xchg
fnsave
push
icebp
sbb
lret
inc
inc
cmc
sub
fadds
or
cmpsl
popf
cs
cmpsl
dec
mov
xchg
push
ljmp
es
je
aam
jno
xchg
push
scas
add
sbb
je
mov
loop
iret
sti
nop
stos
addl
cmovle
mov
mov
xchg
jmp
bound
push
outsb
jge
add
pop
into
cmpsl
dec
push
dec
daa
lcall
rclb
sbb
pop
inc
jg
lock
mov
test
adc
pop
dec
lock
mov
lahf
call
mov
adc
inc
push
cmpsl
xchg
es
add
jmp
les
xchg
dec
shl
push
rclb
aad
mov
lcall
out
pop
mov
mov
push
mov
icebp
addr16
in
dec
dec
sbb
bnd
dec
bnd
stos
xorb
shl
mov
aas
iretw
mov
cld
inc
aad
movsb
xor
nop
xchg
ja
pop
push
ja
clc
add
inc
sbb
stos
sub
lret
enter
int
and
adc
xorl
cmp
and
xchg
aad
cli
xor
sub
mov
jno
inc
fcompl
dec
cltd
adc
xor
push
cmp
iret
fnsave
int
jns
jecxz
inc
push
xchg
inc
mov
sbb
cmp
mov
leave
jae
mov
out
sbb
pop
adc
sub
xchg
mov
xor
pop
jbe
std
pushf
xchg
lock
fs
stc
enter
sub
sub
cmp
mov
mov
cld
push
sbb
stos
lahf
lds
loop
mov
lahf
lcall
lahf
pop
nop
scas
mov
push
pushf
cld
dec
imul
push
addr16
add
and
xor
ret
inc
pop
add
pop
jp
pop
inc
bound
daa
and
loop
out
imul
movsl
aaa
icebp
cmpsl
xchg
push
push
cwtl
sub
call
add
mull
ret
fistpll
mov
inc
ljmp
mov
jnp
adc
push
std
scas
cmp
push
mov
adc
repnz
adc
xchg
push
pop
mov
xchg
add
call
loop
fucomip
inc
sbb
fucomi
lea
xchg
roll
add
pushf
orb
inc
pop
push
jge
sbb
xchg
shlb
xor
out
stc
and
fmulp
sbb
out
mov
xchg
cld
jo
mov
adc
or
mov
sbb
adc
sub
addr16
in
and
repnz
lods
jmp
and
out
jmp
lret
cmpl
enter
fistps
mov
mov
push
cmp
fdivrl
pushf
stos
sbb
gs
pop
enter
mov
cltd
jge
rclb
imul
mov
outsl
in
sub
inc
xor
add
shl
imull
in
out
cmp
cmc
fucomip
lea
mov
fwait
pop
lahf
daa
cmc
add
fstp
jne
incb
dec
mov
mov
jge
mov
cmp
xor
push
pop
movsl
cwtl
outsb
ficoms
pop
fiaddl
adc
popa
xor
pop
test
cmp
in
insb
mov
xor
cmp
in
xor
pop
loope
adc
pop
xor
mov
insl
in
fadds
dec
mov
xchg
cmpsl
cmpsl
in
dec
std
cmp
push
jmp
ret
mov
sbb
mov
push
add
mov
cmc
add
jmp
mov
or
sub
add
push
pop
mov
cmp
addr16
adc
fs
aas
mov
lds
jne
cltd
jns
adc
push
xor
loopne
sbb
or
mov
int3
mov
das
cltd
hlt
dec
in
jle
es
stc
adc
lea
mov
sub
jecxz
mov
pop
in
nop
push
fwait
and
mov
push
out
in
mov
mov
popf
adc
xchg
jo
cltd
lea
loopne
ficomps
pop
push
lea
pop
xchg
add
add
aas
daa
popf
mov
mov
mov
fldt
xchg
dec
push
popf
andl
push
mov
adc
fbstp
push
lock
xchg
loopne
push
xor
iret
pop
or
mov
mov
outsl
dec
mov
dec
inc
arpl
out
movzwl
out
xchg
ljmp
dec
mov
mov
pop
clc
mov
ja
and
push
ficompl
xchg
jmp
imul
jbe
pop
adc
push
outsb
mov
imul
in
push
adc
nop
fdiv
or
inc
push
insb
fwait
roll
mov
sbb
jmp
xchg
push
aad
fildl
movb
jnp
rolb
xchg
lods
icebp
aaa
jg
push
out
sub
cld
fwait
inc
sub
mov
xlat
aad
cwtl
jg
das
cmp
test
test
call
xchg
inc
je
imul
push
les
sbb
int
sub
cmpsl
out
fldl2t
pushf
dec
fbld
xor
inc
xor
fisttpl
pop
test
jle,pn
push
jge
cmpsl
pop
push
fstpl
mov
fbld
movhps
inc
jl
daa
mov
xor
sti
dec
fwait
mov
sbb
push
xchg
mov
cs
mov
fbld
fnstcw
fsubr
xor
pop
repnz
in
enter
add
jbe
pop
xor
add
lock
int3
push
test
nop
lea
push
stos
inc
xor
out
movsb
mov
adc
cli
push
jnp
fdivrl
and
pop
into
or
xchg
jmp
sub
fwait
pop
mov
mov
cmp
stc
pop
xchg
adc
in
bound
jecxz
xchg
movsl
mov
mov
stc
add
cs
pop
test
push
xorl
or
cmp
jae
call
cmp
dec
fidivs
sbb
hlt
bound
xchg
aas
mov
jns
cmpl
inc
ljmp
and
shl
jp
or
in
scas
in
dec
push
pop
push
dec
xor
fistpll
adc
inc
insl
add
cmp
sbb
lret
add
iret
ljmp
in
cld
mov
jne
and
mov
push
insl
les
dec
fwait
jl
xorl
popf
stos
pop
icebp
mov
sarb
inc
xor
jno
add
or
pop
jne
dec
scas
xor
fucomi
test
in
andl
jb
xchg
add
sub
repz
int
mov
bound
sub
rorl
rolb
sub
mov
enter
inc
sub
pop
cmc
clc
add
lcall
mov
push
jge
jns
xor
pop
test
out
push
push
and
mov
sub
test
out
out
mov
mov
push
cmpsb
arpl
test
xchg
cs
aas
xchg
and
in
mov
arpl
sub
adcl
repnz
mov
lock
int3
shrl
cmp
dec
sarb
aad
jmp
push
shrb
xchg
mov
mov
dec
pusha
dec
ljmp
decl
mov
stos
rorb
lods
mov
lret
movsb
aas
dec
xlat
push
aaa
lea
scas
dec
jl
movsl
scas
ss
jbe
cmp
xor
test
xchg
mov
xchg
ss
sbb
loope
movsl
mov
pop
scas
or
das
add
addr16
jmp
push
adc
loopne
push
lret
popf
mov
jp
inc
aas
sbb
cmp
push
cmpsb
andl
scas
push
lret
orl
xor
xchg
lds
leave
imul
fs
aaa
sub
fdivrl
sub
jp
sbb
stc
xchg
lods
mov
stos
sub
push
insb
addr16
jne
cmpsb
in
cmp
fimuls
dec
not
imull
push
fwait
push
das
jmp
pop
mov
sbb
adc
sbb
les
lock
xor
fsts
adc
and
push
andb
mov
add
or
out
xchg
mov
scas
ret
ds
push
and
mov
mov
shll
mov
pop
mov
and
xlat
xlat
imul
into
ja
or
shll
roll
fimuls
xlat
add
xor
hlt
int3
sbb
dec
or
jecxz
or
or
test
xor
xchg
movsb
or
xchg
mov
sub
push
dec
sub
mov
idivl
xchg
das
xchg
dec
insb
ret
xchg
sub
lods
mov
fistl
hlt
int
std
test
mov
xchg
stos
roll
adc
lods
pop
dec
adc
fcomps
mov
mov
daa
push
cmc
push
adc
dec
add
dec
adc
leave
enter
dec
shl
sbb
shr
imul
sbb
xchg
fisubrs
jae
xor
dec
ss
mov
mov
xchg
cld
cmp
dec
dec
cmp
in
in
nop
je
jp
test
xor
mov
imul
push
add
inc
mov
pushf
add
pop
repz
xor
insb
lds
test
mov
adc
sbb
lcall
add
adc
mov
or
add
std
or
rcrl
mov
nop
mov
cmp
lods
xchg
hlt
fisttpll
popf
mov
adc
aad
lea
dec
aas
iret
gs
fcom
decb
mov
fs
and
mov
lret
xchg
jb
inc
rcl
repnz
mov
sbb
test
add
mov
lock
or
cmp
std
test
mov
loope
fstp
add
idiv
in
iret
arpl
bound
scas
dec
inc
in
icebp
inc
lcall
xchg
mov
lea
xor
lahf
push
ret
adc
jno
out
addl
repz
add
dec
cld
stos
and
imul
sti
dec
jbe
call
add
sub
add
addr16
mov
inc
enter
test
lea
xchg
ret
mov
inc
adc
push
insb
mov
cmpsb
jo
dec
bound
sarl
shr
fwait
arpl
jmp
ja
test
daa
or
dec
xchg
cmp
sub
repnz
sbb
out
xchg
sbb
mov
rclb
mov
lret
pop
push
adc
int3
pop
test
nopl
iret
inc
push
pop
xchg
sub
stc
lret
test
pop
ds
ret
mov
mov
bound
movsb
test
xor
lea
cmp
push
or
subl
int3
aas
call
cmp
inc
sbb
mov
cs
ret
ror
sub
xchg
mov
or
cmp
imulb
es
jae
mov
jnp
cmp
sbb
and
jmp
mov
cmp
ljmp
push
xor
leave
cmp
cmpsl
lea
pop
pop
mov
pop
push
sti
daa
push
jo
cli
aas
pop
mov
enter
xchg
fldl
jns
xor
lret
xchg
push
jmp
call
outsb
mov
insl
lods
decb
setne
dec
cmp
dec
jae
in
test
push
ficoml
sbb
mov
aad
mov
insl
adc
mov
cmp
xor
mov
mov
daa
cld
movsl
negb
add
adc
cmovg
leave
xchg
jae
fimull
xchg
xlat
jns
push
sub
popa
push
xchg
mov
std
bound
movsb
out
cmpsl
bnd
push
and
pop
mov
inc
add
and
push
xor
cmc
lock
loop
cmc
push
xor
inc
sti
add
mov
mov
push
jp
mov
sti
scas
sub
mov
add
scas
outsb
add
add
mov
aam
or
jp
xchg
adc
mov
jnp
pop
mov
jnp
out
out
arpl
cmp
jp
js
cs
mov
mov
out
in
aaa
inc
jge
rorb
pusha
fxch
push
sbb
xor
jecxz
push
cmp
inc
mov
fwait
je
dec
push
aaa
mov
sbb
loop
xor
cli
ret
dec
cmpsl
cmp
cwtl
jl
and
sbb
add
lds
sub
add
pop
test
aam
mov
and
rorb
aaa
pop
inc
es
mov
fstpl
fildll
call
icebp
or
ljmp
test
mov
ss
mov
leave
xor
rol
sub
pushf
je
cmp
xchg
sarl
xlat
dec
pop
out
sub
xor
das
cltd
fdivl
jle
or
pop
dec
xor
and
mov
xchg
test
decl
mov
jle
jns
mov
mov
sbb
nop
clc
jo
add
add
scas
ds
data16
mov
cmpsl
ja
cmp
xor
test
push
addb
push
filds
aas
adc
push
jae
jg
lcall
lret
das
mov
sub
dec
or
ret
movsb
mov
and
fadd
in
jae,pn
addr16
cs
in
fnstcw
cmp
pop
imul
in
adc
lcall
inc
imul
sbbb
inc
inc
adc
xlat
cmp
inc
leave
shl
push
xchg
ror
movsl
adc
stc
and
mov
inc
and
sbb
jecxz
xchg
push
aam
cmp
mov
sub
stc
push
bound
inc
ljmp
in
rcrb
iret
sahf
fidivl
mov
cmp
sub
popf
repz
shl
inc
jbe
xchg
iret
sbb
ja
shrb
and
in
sub
imul
jb
lret
lcall
xchg
or
addl
or
sub
into
rclb
ret
mov
jae
idivb
into
imul
repz
and
inc
mov
pushf
loope
jnp
inc
mov
fdivl
jb
jge
fists
sbb
mov
inc
or
pop
cmc
dec
fwait
xor
jge
enter
jbe
cmp
mov
push
jecxz
and
scas
push
pop
cmp
cmp
cmpsb
stc
popf
mov
lods
push
popf
pop
dec
iret
jb
out
inc
shll
movsb
xor
xchg
pop
xchg
cmp
les
loope
aad
call
push
jno
stos
adc
scas
mov
jecxz
fmull
shlb
sbb
adc
mov
inc
jns
dec
loop
jae
dec
inc
mov
fwait
arpl
dec
fstl
movsb
mov
adc
scas
loope
test
xor
jge
pop
les
jbe
cmp
push
in
sub
and
mov
es
hlt
pop
out
pop
adc
imul
loopne
mul
cmpsl
or
test
sub
leave
pop
pusha
mov
ja
push
addr16
jecxz
mov
cmp
shlb
jb
cld
mov
mov
or
inc
int3
cmpsb
push
and
xchg
xor
mov
fdivp
mov
mov
cmp
into
lods
in
push
dec
push
popa
shlb
sbb
sub
jo
mov
es
fsts
mov
mov
cwtl
sbb
out
mov
test
and
fwait
cld
sub
dec
jge
lret
lret
or
ja
xchg
inc
inc
inc
pop
push
aaa
dec
fwait
and
mov
mov
xlat
shrl
mov
xor
iret
xchg
mov
cs
mov
push
loop
adcb
and
cmp
lods
lahf
dec
test
dec
sbb
mov
in
xchg
aaa
cmpsb
jl
test
mov
mov
imul
push
insl
jg
enter
outsb
sti
dec
dec
mov
in
lret
sub
movsb
mov
sub
mov
fbstp
push
dec
sbb
sbb
mov
add
subb
enter
movsl
mov
mov
mov
mov
outsl
pop
mov
aas
sub
push
xor
pop
xchg
dec
mov
xor
js
jnp
inc
das
out
loopne
cwtl
mov
fnstcw
adc
cli
adcb
push
dec
jb
out
mov
std
ret
mov
test
jle
inc
add
xor
movsb
sti
imul
push
and
xchg
popa
xchg
mov
cmp
fbld
cld
shr
xor
pop
shll
dec
mov
adc
add
mov
ret
data16
mov
mov
in
ds
mov
or
mov
hlt
inc
repz
out
mov
push
sbb
jmp
test
pop
and
push
xor
inc
dec
xlat
pop
cmpsb
sbb
popa
fists
xor
sarb
jg
sbb
mov
cmp
mov
hlt
aas
add
bnd
xor
adc
adc
pop
jle
into
sub
repz
scas
mov
xor
fisubs
call
mov
je
inc
or
mov
fisttpll
sti
hlt
adc
je
add
mov
xor
xor
mov
mull
xchg
fdiv
jecxz
bound
rclb
sub
or
adc
fstpl
lahf
imul
lds
enter
sbbb
in
inc
xchg
dec
mov
shll
mov
int3
mov
add
movsl
push
cwtl
mov
stos
push
add
cmp
ret
add
or
jmp
mov
sarl
orb
mov
rclb
jecxz
push
in
jae
sarb
push
push
not
jge
and
push
test
pusha
jbe
fs
xlat
lods
lods
js
sub
add
cmpsl
sarb
popa
cltd
fdivrs
add
add
push
mov
push
mov
push
push
fcmovne
mov
fwait
mov
sbb
mov
jl
add
mov
inc
clc
adc
notl
sub
xchg
mov
dec
pop
dec
cmp
dec
pop
cmp
sbb
pushf
gs
push
hlt
xor
jns
fisubrs
enter
rcll
lret
mov
pop
popf
in
imul
sbb
inc
push
int3
mov
dec
sub
or
adc
mov
cltd
xchg
adc
fs
pop
movsb
cmpb
adcb
mov
push
jl
hlt
or
fsubr
test
insl
lods
aas
mov
mov
sti
adc
sub
int3
mov
shl
push
movsl
adc
mov
push
daa
mov
fwait
or
push
insl
pop
sti
pop
loope
pop
add
push
fmull
rcll
sarb
xor
pop
jne
sub
fwait
insb
pop
and
mov
fs
out
push
mov
sub
ficoml
outsl
pop
mov
and
cmpb
inc
pop
arpl
add
push
ret
xorl
jbe
dec
int
jo
es
rcl
cmpsl
add
decb
or
jge
or
mov
jno
loope
dec
std
jb
and
lods
fcompl
mov
inc
or
lea
push
data16
movsb
ss
mov
in
scas
inc
jmp
shrb
jl
lret
out
js
loopne
nop
imul
cmp
aam
cmp
push
rorb
mov
data16
mov
mov
insl
out
jmp
aad
cmp
sub
or
js
jecxz
insl
pushf
mov
and
loop
clc
xor
sub
dec
sub
dec
ljmp
xchg
pop
jno
in
sti
dec
mov
cmp
sub
lahf
cli
test
add
push
loop
out
xchg
std
xor
xchg
push
jbe,pn
outsb
cmpsl
test
xor
aam
inc
xchg
xchg
pop
inc
and
cmp
jle
cmpsb
in
push
or
das
lock
ret
ret
movsl
and
inc
lods
or
dec
in
mov
sbb
icebp
mov
add
push
imul
sbb
push
add
repz
pop
add
das
test
lcall
enter
adc
xlat
mov
push
sar
mov
push
nop
repz
aad
or
insb
push
dec
in
mov
shll
daa
ret
or
and
pop
push
jg
push
insl
cltd
inc
out
test
and
inc
leave
jl
fdiv
fwait
mov
in
push
sbb
push
mov
out
pop
sbb
fcom
jecxz
int3
ret
dec
ja
dec
fldl
xchg
bound
ret
repz
push
jnp
jmp
mov
lods
pop
sarb
fcomp
mov
xor
xchg
repnz
cmp
inc
lret
mov
dec
adcb
mov
mov
mov
adc
and
fwait
xchg
and
or
xor
popa
xchg
int3
repnz
into
xor
pop
xchg
cli
andb
adc
push
push
and
gs
lock
rorb
loopne
jae
xchg
sbb
aam
xchg
loope
and
cmpsb
out
jo
repnz
lock
jl
hlt
pop
out
pop
sbb
jb
jo
cmovo
xchg
mov
and
pop
cli
and
pop
stos
fistl
sbb
jnp
mov
dec
pop
call
jl
pop
push
sub
xor
pusha
out
jmp
or
mov
jno
push
pop
scas
daa
or
int
xchg
bound
lcall
xchg
mov
outsl
push
aas
lock
popf
adcl
cld
mov
out
dec
rolb
fxtract
popa
test
push
cmp
fisubrs
inc
sbb
popf
scas
or
push
test
arpl
call
pop
pop
daa
push
sti
pushf
jae
imul
mov
rcrl
iret
addr16
fld
lret
xchg
mov
jb
pop
inc
cwtl
jmp
outsl
les
mov
popf
sbb
scas
add
sub
into
fistpll
jo
jbe
dec
adc
pop
inc
push
fs
xchg
mov
arpl
lods
out
mov
sbb
xor
xor
int
add
movsl
into
lret
icebp
dec
jnp
push
cltd
aad
sub
inc
adc
int
and
fs
lret
mov
jbe
leave
or
xor
fcompl
in
adcl
mov
mov
icebp
mov
push
sbb
push
cs
movsb
xchg
pop
dec
mov
jns
cmp
xlat
sbb
add
pushf
ljmp
jo
out
push
loope
push
shll
sbb
dec
out
cmc
push
in
push
pop
cmc
inc
aas
jmp
lcall
ficomps
gs
inc
lret
push
add
mov
xor
in
sbb
cmpsl
dec
or
xchg
dec
fcoml
outsl
adc
dec
mov
pop
xchg
clc
ljmp
fcompl
cmp
scas
arpl
adc
push
stos
andl
jge
pop
push
push
pop
mov
mov
fucomip
or
cld
cmp
push
loope
inc
cmp
scas
daa
cwtl
sbb
not
pop
mov
push
in
sbb
leave
xor
daa
mov
out
loopne
mov
and
loop
dec
cwtl
mov
insl
ja
imul
inc
mov
fdivrs
cmp
add
ds
jns
inc
stc
mov
icebp
pop
mov
das
inc
shlb
mov
push
mov
sbb
add
fmulp
in
jnp
sahf
sub
fndisi(8087
mov
sbb
sub
jl
repz
xchg
and
mov
cli
cmp
add
lds
and
ret
jle
cmp
ret
pop
aaa
mov
les
add
ds
add
outsl
push
mov
loopne
aam
add
sarb
popf
cmp
xchg
lret
aaa
sbb
sbb
cmc
adc
fmul
cmpxchg
inc
mov
stos
decb
jne
ss
mov
cmp
adc
vpcmpgtw
shl
stc
jecxz
mov
cmp
ljmp
lods
and
lock
loopne
lods
xor
pop
cmc
cmp
or
push
jp
jle
jl
mov
cs
mov
cmp
cmpl
test
fs
dec
push
lds
xlat
sub
lret
add
and
adc
add
mov
pushf
lods
xor
add
stos
mov
push
xlat
aad
icebp
in
test
mov
dec
pop
dec
push
pop
push
xchg
jns
js
xchg
das
sbb
push
xor
ja
faddl
cmpsb
out
lods
or
pusha
push
mov
das
fldl
xchg
push
mov
jmp
sti
or
inc
push
push
add
mov
xorb
neg
and
xchg
xor
into
mov
ljmp
or
outsb
das
and
mov
push
cmp
in
insl
or
cmp
roll
les
mov
cmp
gs
cmp
sbb
mov
mov
fcmovnb
mov
xor
push
mov
roll
xor
add
xor
inc
les
lret
pop
lock
cmp
add
lret
jp
in
clc
jno
out
mov
das
jne
inc
mov
stos
enter
sbb
or
idivl
mov
push
lret
push
cli
pop
mov
push
mov
dec
mov
outsb
add
xor
jo
jmp
cmp
shlb
repz
test
and
es
inc
mov
std
ret
sub
je
imul
mov
sub
or
lods
stc
fstpt
jno
stos
sbb
sbb
sbb
rol
or
sbb
inc
pop
xchg
inc
pop
stos
jb
aam
dec
dec
xchg
ficoml
jg
popa
cmp
movsb
fwait
sbb
dec
push
pop
and
sbb
pop
mov
or
arpl
xchg
out
cs
ds
std
jp
xchg
fmul
call
daa
cli
pop
cmp
outsb
sbb
jg
and
ret
movsl
and
cmp
cmp
mov
xorb
cmp
and
mov
movsb
lcall
sahf
in
arpl
ret
or
hlt
jmp
cmp
test
pop
shl
call
aas
jns
idiv
mov
jb
test
and
sarb
mov
gs
mov
add
xchg
stos
jge
mov
push
and
cmpsb
test
mov
xor
xchg
gs
pop
insb
sti
lock
test
into
dec
les
cmc
cwtl
insb
fsubp
inc
xchg
mov
mov
and
icebp
xchg
scas
pushw
loopne
or
pusha
xor
sbb
dec
adc
inc
shrl
mov
dec
imul
aad
fstps
mov
cmpsl
sbbb
dec
sub
inc
testl
mov
add
sbb
fisubs
xor
lock
ljmp
subb
movsb
mov
sub
mov
cmp
xor
fcoml
cwtl
pop
add
or
insb
fldcw
xor
jle
pusha
lret
in
outsb
cltd
outsl
and
in
out
inc
jg
push
lret
dec
mov
adc
scas
lret
pop
and
mov
int3
or
jge
ss
ror
mov
sbb
and
cmp
add
pop
in
push
or
iret
lods
cli
xor
ficoms
or
in
movsl
add
lock
sub
jl
outsl
mov
out
jecxz
cmp
xchg
mov
add
push
xchg
mov
inc
jp
mov
dec
xchg
outsb
out
sub
or
lcall
sub
push
insb
outsb
pop
scas
in
or
repnz
cmc
jo
dec
rclb
sub
iret
ja
cmp
cwtl
push
subl
push
lret
or
mov
mov
mov
dec
lcall
aad
xchg
das
xchg
jbe
jae
data16
sub
inc
scas
nop
fwait
or
xor
addr16
xor
into
insl
movsl
imul
addr16
push
decb
xor
cltd
jle
stc
mov
incl
sub
out
in
lret
leave
daa
xchg
lock
sbb
je
sbb
int3
std
mov
in
mov
mov
cmpl
js
jnp
pop
lcall
dec
sub
adc
jno
inc
or
mov
or
mov
dec
mov
push
cmp
dec
in
andb
cmp
mov
out
lds
nop
lahf
jne
mov
push
out
xchg
repz
mov
mov
fincstp
pop
xchg
movsl
repz
loope
pop
fcmovbe
sbb
fildll
call
mov
mov
jae
imul
sub
stc
stc
xchg
push
mov
or
mov
jge
sub
fcomp
push
lret
jg
inc
sub
imul
dec
cmp
lods
outsb
fwait
loop
sbb
popa
popf
push
mov
fs
je
and
enter
mov
inc
mov
sub
mov
cltd
pop
insl
lcall
lcall
mov
inc
push
scas
jmp
das
shll
mov
rorl
ds
std
xchg
or
sbbl
xlat
pop
out
test
xchg
int
stos
pop
and
mov
cli
mov
inc
sub
popf
mov
mov
xor
out
lcall
cs
sub
mov
mov
cmp
icebp
ss
fmuls
xor
imul
imul
test
outsl
cmp
dec
xchg
or
mov
int
xchg
je
int3
cmp
adcl
xor
fs
push
cmp
cld
sbb
or
jp
imul
inc
daa
mov
cmp
int
pop
cmc
fs
cmc
fisubs
repnz
dec
inc
xchg
test
mov
test
jb
or
sbbl
xor
and
jb
in
sbb
scas
or
pop
je
mov
pusha
jecxz
jb
or
outsl
fwait
and
push
xor
clc
or
test
pusha
in
in
fiaddl
xchg
or
pop
daa
sbb
jbe
loope
xchg
add
push
cmp
stos
pop
popa
mov
stos
push
xchg
pop
cmp
insl
scas
leave
jae
jno
orl
out
dec
push
iret
xchg
push
pop
push
mov
ja
out
out
add
inc
and
cmp
jae
inc
mov
test
test
fdivs
jge
push
pop
mov
push
mov
mov
test
pop
pop
addr16
rclb
dec
inc
mov
cmp
jns
mov
lods
inc
pop
enter
cwtl
cmp
add
jb
xor
repz
pand
mov
adc
jo
movsl
sub
xor
push
jge
bound
call
dec
mov
loopne
call
lret
out
loope
sbb
sub
cmp
das
xlat
iret
arpl
add
in
or
push
push
test
and
cmp
mov
sbb
dec
enterw
or
rcrb
pusha
nop
mov
sub
cmp
mov
xchg
lods
sarb
sbb
fdivrl
mov
mov
adc
lods
addl
lds
pop
pop
andb
xor
cmp
out
cmpsb
add
inc
enter
dec
jno
pushf
mov
jne
sbb
and
xchg
xchg
xor
fscale
loop
xchg
jnp
mov
mov
cs
mov
pop
les
mov
in
inc
adc
pop
dec
mov
ljmp
adc
scas
cmpsb
sbb
sub
dec
xor
xchg
or
pop
nop
stc
lds
out
inc
cs
stos
repz
mov
xchg
mov
fldcw
mov
jb
dec
xor
mov
lds
xchg
jo
or
lods
xchg
add
shlb
popf
cmpsl
jle
fstpl
lcall
call
clc
xor
jmp
dec
gs
popl
fistps
lret
mov
int3
loop
iret
into
or
in
iret
mov
mov
xor
add
cmp
jmp
inc
inc
inc
dec
xor
pusha
adc
adc
or
sub
jle
js
mov
push
addr16
push
xor
cmp
jne
leave
test
movsl
cmp
push
add
sahf
inc
mov
pusha
repz
add
movsl
mov
jno
mov
sub
imul
sbb
mov
mov
rorl
scas
stc
int3
js
cltd
test
js
pop
push
push
fs
jmp
shlb
fsubrs
fcmovne
sbb
pop
xchg
jb
loop
or
cs
inc
inc
cmp
add
rorb
rcll
fldt
pop
mov
push
outsl
pop
fsub
cmp
lock
in
sub
sahf
sarb
iret
inc
scas
mov
push
int3
xchg
int3
jge
mov
xor
mov
jge
stos
mov
inc
or
cmpsl
mov
inc
stos
cmp
jle
pop
or
test
xchg
dec
loope
xchg
jbe
hlt
mov
sbb
hlt
cmp
mov
adcb
mov
stos
cli
jbe
and
arpl
mov
adc
jbe
std
push
aad
push
aas
gs
inc
std
js
movsb
push
lds
scas
and
cs
and
test
ss
outsl
sub
mov
adc
sbb
pop
mov
outsb
cmp
mov
mov
mov
xor
clc
fsubr
in
xchg
cld
addr16
jp
sbb
xchg
cvtdq2ps
es
mov
rcl
lods
cmpsl
push
jge
xor
lods
pop
or
inc
cmp
mov
jge
mov
pop
mov
pop
mov
repnz
rcrb
sbb
lret
inc
mov
setle
adc
mov
lret
push
add
push
and
outsb
and
sbb
ret
adc
int3
mov
sahf
xor
push
push
and
cmp
add
push
sbb
shll
fs
ds
xlat
push
icebp
ret
sbb
dec
inc
or
and
mov
sbb
xor
inc
mov
out
loop
or
pusha
mov
adc
push
mov
or
or
int3
cmpsl
jecxz
add
mov
fcmovb
jb
mov
movsl
sarb
ds
push
pop
js
pop
mov
lea
mov
or
test
push
xor
jno
pop
pop
jl
mov
sub
imulb
cmovl
lods
lea
fwait
popa
loopne
dec
int
psubsb
adc
mov
test
push
lds
popf
sub
inc
push
push
sbb
jle
mov
addb
and
pop
cmp
xchg
push
repnz
iret
fcmovu
xlat
xchg
test
loop
test
addb
ljmp
test
xor
push
dec
lock
push
test
and
sub
ja
popf
push
bound
int
ret
and
sub
cmp
push
jge
adc
push
lea
dec
int3
fstpt
sbb
negb
mov
movb
test
aas
daa
dec
or
dec
pop
mov
in
dec
dec
inc
and
and
add
adc
xor
jp
les
lods
in
arpl
pop
push
sbb
push
cwtl
fs
jb
pop
xor
shll
xor
jp
sbb
sub
sbb
add
lods
aaa
test
imul
mov
xchg
mov
mov
mov
notl
cmc
push
push
xor
cmpsb
inc
outsb
daa
repnz
inc
jle
into
xchg
xchg
pop
and
shlb
loopne
lods
cmp
adc
dec
popa
mov
aaa
pop
jecxz
sbb
add
add
inc
mov
in
repnz
into
cmp
jno
dec
lidtl
std
rcrl
pop
not
in
push
cmc
jg
mov
cmp
mov
insl
std
stos
pmullw
or
push
and
adc
add
lods
lods
push
xchg
add
loopne
lea
xor
stc
test
out
daa
dec
ret
cmpsl
inc
cmp
xchg
xchg
arpl
outsl
add
push
jg
into
sub
jle
stc
movsl
inc
adc
mov
mov
in
cmpsl
sbb
cli
cmp
cltd
shl
test
jnp
sub
movsb
and
pop
hlt
mov
gs
pop
push
hlt
cmpsl
and
out
cmp
bound
add
clc
fs
rorb
xor
push
mov
es
mov
out
push
pop
movsl
mov
ds
jl
xor
ljmp
push
stos
pop
push
pusha
enter
pop
les
sub
sti
rcrb
push
xor
movsl
and
inc
adc
mov
sbb
and
fisubrs
dec
push
loopne
out
cld
outsb
cs
mov
push
ret
scas
mov
inc
cs
loop
mov
hlt
inc
mov
xchg
fcom
jo
mov
insb
push
mov
fiadds
repnz
cli
aaa
pop
and
lret
popf
mov
xchg
test
xchg
insb
les
fwait
stos
rcrl
call
aas
and
and
pop
fs
sbb
repz
sub
leave
shll
stc
mov
or
test
pop
fstpt
std
xor
fabs
addb
mov
adc
cmc
dec
aam
jle
pop
lcall
loope
dec
popa
sub
xor
lret
dec
pop
xlat
test
pop
xor
pop
jmp
sbb
mov
push
mov
cmpsl
in
stos
mov
mov
adc
and
pop
addr16
filds
bound
ljmp
in
pop
adc
aaa
idivb
jne
lahf
mov
mov
mov
cmpsl
arpl
int
mov
lahf
push
or
push
pop
inc
mov
pop
mov
pslld
inc
adc
or
sub
loope
je
sub
rcll
js
aad
jno
call
or
pop
mov
and
mov
xor
jmp
stos
mov
cltd
jae
divl
lods
movsl
pushf
jne
stos
dec
mov
dec
or
pop
pop
es
es
push
rorb
fsub
test
lret
pop
popf
cmpl
fs
mov
hlt
and
sbb
mov
popf
and
aaa
mov
les
fisubl
cld
roll
pop
adc
bound
out
sbb
jecxz
mov
hlt
fisubl
insl
cs
mov
imulb
lcall
imul
or
das
add
pop
sbb
cmpsl
mov
or
dec
push
imul
add
cmp
jb
xlat
pop
pop
outsl
sarb
push
fs
pop
sti
and
mov
dec
cmp
push
loop
fistl
imull
test
shrl
push
pop
imul
add
stc
jp
xchg
mov
inc
sub
sti
jl
in
inc
dec
ds
sub
daa
sub
rorb
andb
lock
outsb
jno
jmp
sar
sbbb
and
adc
scas
imul
pop
out
jg
fdivrl
in
or
pop
xchg
jl
cld
repz
out
and
xor
ljmp
push
adc
dec
aam
xor
js
movsb
jnp
xor
icebp
mov
dec
movsb
xor
test
cmp
push
push
mov
imul
mov
sarb
inc
and
fnsave
mov
or
fdiv
cmp
mov
and
repz
adc
mov
mov
inc
add
mov
cli
movsb
xchg
popf
dec
stc
xor
mov
mov
cmc
outsl
sbb
in
xchg
xlat
fwait
test
xchg
add
and
dec
inc
mov
sub
add
jne
addl
xor
test
mov
das
outsb
cld
cli
mov
aam
jecxz
add
xchg
call
fdivl
lcall
and
data16
int3
lcall
xchg
int
sbb
sub
stos
xor
adc
mov
mov
mov
out
divb
xor
mov
sub
gs
loope
scas
push
aad
leave
inc
jnp
xorl
es
mov
cmpsb
inc
ret
test
cltd
mov
inc
xor
in
incb
jp
imul
push
push
lahf
ds
je
xchg
imul
add
or
int3
imul
inc
mov
jns
out
sbb
xchg
dec
or
sbb
loope
cmp
xchg
repz
sub
pop
int3
mov
mov
xchg
lock
add
jbe
lret
mov
int3
das
inc
ljmp
xor
test
int
in
cmc
pusha
fstps
dec
add
les
mov
jno
push
stos
sub
or
mov
sub
pop
xor
cld
adcl
in
js
pop
insb
movsl
popf
cmp
int
ja
addb
cmp
shll
or
loop
fisubl
push
sub
int
repz
es
pop
jns
inc
cmp
outsb
mov
inc
movb
jae
and
jnp
enter
cmpl
cwtl
dec
xor
xlat
push
jb
sub
xlat
aam
cmp
cmp
mov
out
jge
fcoms
sahf
vmaxpd
jno
pop
jge
pop
out
out
int
je
sar
sub
push
or
les
xor
xchg
dec
into
cmp
popl
mov
fiadds
jg
mov
lahf
inc
xor
mov
jnp
sub
mov
cmp
xor
addr16
xchg
aad
pop
add
push
mov
xor
subl
inc
jne,pt
movsw
cmp
shr
out
fcoms
jbe
mov
mov
mov
and
cmp
mov
add
dec
fadds
push
pop
fmul
call
movsl
jno
pop
mov
clc
mov
adc
cmc
sarb
movsb
pushf
jmp
inc
add
or
mov
cltd
stos
xor
imul
sub
inc
and
hlt
jo
outsb
xchg
leave
pusha
aaa
arpl
jb
pusha
jmp
divl
add
xchg
inc
fcom
ljmp
fmulp
pop
sub
pusha
dec
jl
cltd
fimuls
cld
pop
adc
add
jg
imul
jp
test
cwtl
out
inc
jle
js
push
fwait
jns
loope
or
outsb
out
cli
sti
pop
xchg
mov
jle
cmp
fiadds
mov
daa
mov
out
pop
flds
mov
jmp
cli
add
jge
ret
cs
outsl
push
roll
and
dec
scas
xor
mov
jae
add
dec
fisttps
or
cli
movb
pop
das
jle
mov
lods
adc
in
add
cmp
cli
xor
pop
loop
hlt
int
mov
add
and
test
mov
lock
out
je
faddl
inc
cmp
je
xchg
xor
and
sbb
push
dec
mov
push
dec
jne
gs
jle
push
xchg
das
clc
push
mov
outsb
int
sub
imul
insb
clc
or
mov
ret
add
fistpl
ds
rcrb
in
dec
outsl
outsl
push
mov
inc
pop
lea
leave
movsl
dec
push
loope
jno
mov
inc
xor
mov
add
and
pop
sub
xchg
mov
ja
pop
lock
or
insl
xchg
xchg
mov
sub
jl
sub
mov
dec
add
dec
mov
jp
stos
sub
stos
jne
mov
jno
push
lods
jnp
push
lock
jp
push
ds
pop
lods
xchg
mov
outsb
dec
mov
sub
inc
jmp
add
mov
scas
lea
xlat
cmpl
inc
dec
and
cmp
out
addr16
rclb
cs
cmp
divb
mov
or
mov
lock
fadd
pop
clc
sub
xchg
and
xor
cmp
xchg
adc
je
mov
cwtl
and
adc
movsb
test
insb
jns
mov
and
mov
sahf
jp
orb
popa
pop
jmp
divb
mov
lods
cmp
and
std
mov
pop
bound
or
inc
pop
cmp
mov
xchg
popf
adc
dec
loope
jg
int
xor
sbb
pop
insl
or
leave
inc
lahf
push
xchg
inc
push
cmp
jo
pushf
xor
sbb
test
add
dec
sub
mov
cmpsb
out
lret
push
test
rcrl
xlat
mov
and
xor
leave
movsb
fisubs
lds
aas
dec
xchg
das
inc
mov
into
aaa
jno
xacquire
xor
sub
rcll
pop
xor
sub
loope
inc
hlt
rcll
dec
sub
leave
mov
hlt
scas
push
call
in
fists
pop
sub
pushaw
pop
nop
jmp
cld
lahf
xchg
and
fstpl
mov
adc
mov
test
push
add
shlb
lret
push
loope
cli
sub
scas
out
and
in
dec
sbb
push
loopne
mov
add
stc
ds
mov
sbb
mov
dec
scas
mov
inc
push
pop
repz
pop
cmp
daa
mov
ljmp
adc
and
inc
sub
test
and
jno
stos
rcll
dec
pop
add
rorb
adc
lods
jnp
push
int3
pop
cli
lock
jne
xlat
fndisi(8087
in
lahf
push
sbb
xchg
xor
scas
loop
jns
mov
push
in
xor
xchg
aas
push
lcall
loop
ja
or
lods
hlt
nop
or
or
lret
xchg
test
cld
js
push
xor
cmc
or
pop
cltd
jecxz
jge
andl
cs
mov
mov
cmp
fucomp
pop
js
out
dec
lods
and
sahf
das
int
pop
iret
cmp
xor
cmp
mov
ljmp
mov
jl
xlat
ljmp
stc
imul
mov
cmpsb
cmpl
movsl
std
loop
ret
or
test
sub
int3
push
xchg
scas
pushf
mull
and
mov
mov
dec
movsl
adc
add
dec
shr
into
and
pop
pushf
aam
pop
xchg
je
ficomps
clc
into
icebp
orl
jp
out
jecxz
xchg
repz
lea
and
cmp
jo
aas
ljmp
pop
cwtl
push
mov
pushf
xchg
stos
sti
stos
adc
mov
divl
rcrl
adc
dec
push
outsl
and
minps
inc
jb
dec
pop
adc
dec
test
jmp
test
adc
lock
jp
ds
sub
dec
xor
xchg
mov
out
loop
shrb
std
mov
dec
pop
std
pop
mov
out
test
push
dec
into
adc
mov
mov
rcr
mov
ret
jno
dec
xchg
sahf
or
sbb
repz
into
fisttpll
jae
popa
dec
jp
and
adc
adc
lcall
movsb
add
decl
in
into
rclb
in
outsb
cwtl
test
rcll
mov
inc
push
imul
sbb
pop
cmp
cmpsb
or
les
xchg
das
pushf
mov
sub
add
shrl
in
mov
push
push
outsb
adc
jo
dec
sahf
push
push
add
je,pn
mov
sbb
test
je
jbe
in
std
cmp
iret
xchg
push
lcall
or
jno
test
and
sub
cmpsb
sub
or
jo
push
or
sbb
fnstsw
xchg
out
pop
pop
sbb
or
faddl
sbb
cmpxchg
roll
aas
scas
sub
pop
or
fdivr
sbb
cs
insb
inc
or
lods
imull
call
lahf
es
mov
int
mov
and
add
add
or
push
push
subl
lcall
das
xorb
jns
jmp
mov
cmpsl
jns
and
mov
add
into
arpl
jo
repnz
or
xchg
mov
pop
pop
push
push
adcb
mov
and
and
xchg
pop
jmp
loope
xchg
ds
repnz
mov
xchg
inc
push
sahf
cmpsl
outsl
sahf
mov
jmp
popf
dec
sub
xchg
jmp
das
out
and
mov
xor
dec
jecxz
sbb
sub
cmp
mov
or
push
push
or
push
or
shll
push
pop
fmuls
aad
lds
jae
es
cmp
cmp
push
add
mov
inc
pop
outsb
mov
ret
scas
mov
and
sahf
inc
xchg
xchg
adc
adc
pop
mov
mov
fildl
cmpsb
aam
cmp
xchg
cltd
cltd
fidivrl
sub
or
mov
fwait
mov
xor
scas
fstpt
adc
push
outsb
and
cmp
push
pop
and
aam
fwait
jnp
lret
jg
arpl
cli
jae
sahf
in
das
shrl
scas
inc
xchg
sar
leave
sub
pusha
out
addr16
sbb
in
addr16
push
jl
mov
insb
dec
insl
movsl
outsl
pop
out
xchg
push
pop
or
frstor
sti
push
ficompl
jnp
or
sub
addr16
inc
mov
mov
pop
sti
fldl
lds
pop
es
cmpsb
stos
dec
push
aam
enter
xchg
enter
loop
adc
cwtl
cmp
fwait
sub
pop
out
sbb
push
or
jg
daa
out
imull
mov
movsb
cmp
int3
mov
jge
jns
mov
lock
lds
xchg
pusha
daa
leave
rcr
cmc
dec
add
xchg
dec
sbb
icebp
call
inc
pminsw
test
or
mov
ja
mov
mov
push
add
fdivrl
mov
sub
lock
out
movsl
adc
pop
jne
sbb
mov
call
mov
pusha
pop
xor
and
mov
ret
push
call
andl
mov
push
daa
adc
pushf
sub
je
pop
cmc
jbe
mov
popa
fmuls
add
jle
mov
fadd
lcall
test
test
mov
mov
jns
fdivrl
loope
jg
pushf
mov
cmp
popf
neg
xor
or
mov
xor
outsb
add
cmp
jge
cmpsl
arpl
add
shlb
ss
mov
sub
pop
push
jg
jle
jecxz
arpl
rol
lea
xor
mov
sbb
mulb
mov
mov
pop
sbb
test
xchg
jb
adc
fsubrp
fidivrs
mov
inc
nop
sbb
or
test
aas
sbb
testb
out
nop
arpl
xor
cli
mov
fs
les
inc
jns
adc
push
data16
inc
std
insl
mov
jmp
mov
out
lds
pop
xchg
add
pushf
das
icebp
loop
push
stos
shll
push
es
scas
into
stos
mov
fidivrs
xchg
mov
pop
xor
cltd
js
adc
pop
xchg
aad
shl
mov
pop
ret
inc
dec
scas
imul
lret
dec
and
ds
cltd
adc
fisttpl
mov
xchg
aas
repnz
mov
mov
fisttps
lahf
push
lock
mov
repz
push
orb
mov
inc
adc
cmpsb
hlt
cmp
mov
push
lods
cmpsb
xchg
imul
aam
scas
sbb
int3
rorb
loop
sbb
sbb
nop
inc
jmp
insl
sbb
lock
or
imul
imul
pop
jg
insb
xor
cmp
mov
loope
imul
mov
negl
test
data16
mov
imul
data16
jne
xchg
add
in
rcr
les
int
fldcw
adcl
jp
outsb
call
ss
repnz
mov
pushf
cmp
pop
and
pusha
dec
add
cmp
sub
arpl
and
xchg
popa
pop
or
adc
mov
push
mov
jl
rcl
test
loop
fsubs
shlb
lods
push
cmp
fmull
cmc
xlat
shrl
outsb
movsl
cmp
xor
call
ret
adcb
loop
pop
jg
or
lea
xchg
lahf
out
lret
loope
push
jnp
add
jno
mov
test
mov
inc
push
das
arpl
sti
mov
insb
or
sti
add
imul
pop
std
xor
and
mov
inc
std
in
push
mov
roll
push
lods
mov
cmc
test
imul
lret
cmp
mov
sbb
dec
adc
nop
ficoms
stc
push
ds
jmp
sbb
scas
shr
sbb
pop
dec
jmp
cmpsb
dec
mov
mov
inc
mov
pop
imul
sbb
cmpsl
js
sbb
push
xlat
mov
sbb
jnp
xor
lahf
inc
push
in
lcall
inc
cmp
push
repz
dec
push
mov
pop
jbe
add
mov
stc
popf
test
xchg
popa
pop
hlt
arpl
cmp
outsl
ljmp
in
pusha
sbbl
std
xchg
sahf
cwtl
mov
dec
and
test
sbb
lcall
leave
addr16
in
or
and
inc
dec
jmp
inc
mov
mov
cwtl
adc
mov
daa
pusha
pop
rcll
cwtl
jne
cmpsb
fcoms
in
mov
pop
in
push
add
icebp
or
out
pop
fwait
pusha
xchg
icebp
add
mov
sub
mov
sbb
push
push
or
push
daa
mov
cmp
mov
int
imul
xchg
mov
and
js
arpl
sbb
dec
push
add
popa
fs
imul
fistpl
pop
push
cmp
ds
clc
shrb
push
rclb
lds
dec
mov
out
push
mov
sbb
aam
ss
lret
push
insb
ljmp
fs
and
in
mov
cmp
pop
ljmp
jecxz
jle
pushf
add
cwtl
inc
or
inc
test
filds
inc
inc
xor
fmul
rcr
dec
arpl
pop
mov
jp
lahf
sbb
outsl
mov
inc
lahf
stos
imul
jne
scas
idivb
cli
faddl
aad
leave
ja
lcall
and
nop
popf
inc
loop
and
mov
jne
sbb
mov
jae
sahf
and
ret
int3
ds
aaa
or
loop
mov
jle
dec
xor
imul
xlat
mov
push
xor
push
adc
mov
clc
in
mov
dec
ret
adc
inc
out
xchg
inc
xor
mov
cmpsb
push
call
mov
add
jp,pn
sub
popa
xchg
in
cmp
jb
arpl
push
sub
push
xlat
loopne
jo
jmp
sbb
sbb
rcrl
lcall
dec
mul
lcall
add
imul
xor
sub
adc
shlb
in
mov
xor
call
xlat
stc
popa
dec
lahf
sub
push
adc
mov
imul
dec
push
push
out
mov
je
lds
std
or
adc
loopne
int
inc
xchg
adc
cmp
leave
push
pop
aam
ljmp
sub
fcmovbe
das
cld
inc
pop
push
aad
aas
dec
or
popf
testl
inc
dec
mov
sbb
pop
fnsave
pop
push
cmp
ret
xor
aam
and
aad
cli
mov
fcoml
fs
fs
sub
sbb
test
or
in
pop
push
mov
aas
xchg
shll
inc
lcall
cmp
aaa
or
dec
icebp
out
and
dec
jns
inc
ss
mov
lret
jp
xor
cmp
pop
jne
ss
push
lods
jae
idivb
cmp
fsubs
andb
jl
or
cmc
or
in
and
jns
inc
xchg
xchg
mov
ljmp
fildl
cli
mov
insl
cmpsl
das
shlb
fnstcw
dec
xchg
lahf
mov
adc
mov
cltd
repnz
mov
shr
subl
adc
std
rorb
xor
arpl
lods
xchg
lods
das
mov
repnz
pushf
stos
add
mov
mov
cmp
icebp
insl
sti
push
les
fadds
icebp
fcmove
mov
icebp
test
sbb
sbb
xlat
and
into
mov
imul
lods
fucom
mov
inc
cmc
push
aad
lcall
mov
fst
pop
mov
in
shll
or
pop
dec
sbb
cmp
cmpb
xchg
jnp
cmp
inc
or
pop
testb
pop
sarb
lds
ror
stos
lock
cmpl
icebp
add
xor
dec
jg
movsl
imul
dec
jno
pop
mov
imul
mov
pushf
xchg
xor
xor
das
sub
cmp
nop
leave
pushf
mov
lods
shlb
sahf
adc
popa
xchg
jns
add
and
cltd
adcl
add
fcomp
ljmp
xchg
bound
and
sub
loope
dec
aam
mov
ret
sbb
clc
arpl
mov
inc
sarl
xchg
xchg
push
imul
repnz
mov
mov
xor
hlt
sti
call
into
inc
in
js
and
int3
lret
xchg
inc
frstor
sarb
psadbw
push
inc
add
arpl
stos
mov
xchg
es
inc
mov
jecxz
mov
adc
insl
jne
jbe
lret
fldenv
ret
test
mov
rorb
sub
fnstcw
sti
out
test
cmp
xchg
dec
jp
sbb
or
sbb
dec
mov
sub
xor
inc
js
jle
mov
adc
ja
mov
pop
pop
adc
div
aam
lret
cmp
insb
xor
jae
call
inc
mov
pop
nop
mov
sub
push
test
inc
hlt
jge
adc
enter
mov
icebp
adc
not
repz
stos
or
or
js
sub
out
popf
in
test
fwait
inc
or
dec
and
xchg
movb
stos
repz
jmp
xlat
out
lahf
push
sbbl
cmpsl
mov
mov
pop
jbe
xor
inc
in
or
mov
lret
mov
pop
dec
pop
inc
add
add
inc
pop
mov
push
push
out
cld
les
stos
cmp
aad
mov
rorb
push
jl
int
leave
push
mov
cmp
lret
loopne
push
rcl
cmp
repz
insb
cmpsl
pop
cs
xor
icebp
flds
jmp
inc
mov
sbbb
call
sti
repz
pop
xor
hlt
pushf
sbb
xchg
mov
mov
ds
dec
mov
mov
xor
xor
nop
clc
inc
push
movsb
test
mov
ror
push
push
cmp
push
dec
mov
jae
push
gs
stos
les
fsubrs
inc
pop
je
and
insb
or
pusha
in
das
jb
mov
mov
xchg
jae
fsts
out
shrl
aas
clc
jmp
add
sbb
push
das
jmp
mov
lods
xchg
repz
inc
mov
adc
push
stos
inc
mov
sahf
rorb
fbld
repnz
ret
fmuls
dec
lods
ss
outsl
add
xchg
lock
sti
insb
jne
ds
and
aam
popa
pop
inc
dec
ds
cmp
dec
jl
mov
int3
inc
gs
sub
adc
jnp
mov
mov
xchg
sahf
ret
lahf
arpl
mov
xor
cltd
arpl
std
ja
cld
addr16
aaa
call
inc
xchg
dec
out
pop
popf
mov
fs
aam
orb
aas
pop
jmp
mov
je
inc
cmp
fs
outsl
sahf
fisubs
sub
jecxz
hlt
jo
cmc
imul
sub
jae
enter
sub
jl
fsubs
inc
addl
rorl
mov
mov
sub
out
mov
outsl
xor
scas
jmp
adc
jbe
loop
mov
les
cmc
jmp
xchg
mov
cmp
sub
xor
push
dec
sarb
stos
mov
xor
dec
lahf
cld
mov
movsl
popf
adc
sub
push
in
andl
hlt
cmp
cwtl
cmp
mov
dec
daa
test
mov
push
mov
sub
jnp
fidivrs
add
and
test
jne
ss
cmp
addr16
pop
out
dec
push
inc
push
lcall
addr16
fisubrl
ss
xor
sub
pushf
sub
push
in
dec
rorl
lcall
pop
mov
and
adc
xchg
imul
out
mov
int
stc
leave
test
loope
or
add
fcomi
lods
les
stos
add
mov
lock
dec
mov
fcmovu
lock
pop
lcall
mov
dec
lock
jle
nop
or
dec
push
cmp
pusha
jne
xor
cmp
repz
call
mov
fdivrs
fdivs
mov
fcmovnbe
pop
test
ret
adc
push
pop
sbb
mov
sbb
movsl
cmpsb
dec
push
sbb
sbb
call
sub
cs
push
pusha
or
mov
push
gs
add
dec
aaa
or
push
sbb
fdivrl
inc
es
mov
divb
popa
xchg
cltd
rcrb
shlb
xor
hlt
dec
roll
xchg
xchg
or
push
pop
xchg
iret
in
push
inc
jb
hlt
je
iret
xchg
pop
pusha
jae
inc
adc
aad
or
shrb
jecxz
ret
or
into
rorl
lret
mov
pop
mov
sbb
jae
jge
and
fs
sbb
push
lods
bound
dec
sarl
cltd
mov
jo
test
jo
mov
jg
jo
and
dec
movsl
in
mov
cmp
adc
fists
pop
jle
inc
fidivl
outsl
mov
sbb
js
cmp
push
ds
inc
leave
adc
mov
push
lahf
mov
jg
xchg
jb
testb
pop
not
fcmovnbe
scas
leave
loopne
cld
add
loope
push
xor
loop
subl
push
push
sarl
shlb
aam
scas
insb
inc
lret
sbb
loope
dec
jmp
ret
mov
xchg
dec
test
pop
fbld
and
and
adc
mov
xchg
insl
adc
data16
mov
xchg
out
mov
and
movsb
mov
ret
lods
pop
fistpll
xchg
mov
xchg
mov
pushf
add
lret
shll
in
jle
outsb
int3
dec
insl
add
cmp
test
xor
push
mov
aas
sbb
jnp
cmp
rorb
jb
push
stos
xor
xchg
in
xchg
and
cwtl
pop
cltd
push
xor
enter
jne
inc
stos
add
mov
out
cli
adc
mov
fildll
cmp
jbe
clc
ja
mov
loopne
mov
inc
dec
in
add
xor
stos
or
sub
les
xchg
das
mov
xor
dec
cmpsb
call
push
pusha
mov
call
roll
in
mov
jb
cmp
fisttpll
mov
sbb
sub
mov
xchg
or
hlt
xchg
cs
popf
icebp
or
dec
xchg
mov
fwait
jmp
adc
add
push
add
jl
shrl
dec
sbb
daa
push
pusha
cmp
inc
stos
mov
pop
and
jle
mov
jbe
insb
ficoms
int3
cmpsb
out
mov
aas
mov
and
sub
call
jnp
sbb
std
fsts
inc
cmpsb
das
decl
in
pop
jl
jmp
out
in
sub
and
fcmovne
jmp
xchg
loop
jg
cltd
outsb
insb
cli
inc
push
setbe
xor
mov
mov
notb
jb
js
ljmp
lahf
arpl
or
movsb
push
dec
jp
mov
or
add
adc
ret
xorb
pop
jb
xchg
pushf
sub
xchg
mov
push
xchg
sbb
pop
mov
push
xor
dec
lahf
jbe
leave
mov
data16
sbb
pop
dec
movsb
popa
hlt
scas
pop
sub
sub
gs
mov
xlat
dec
sbb
mov
push
dec
loop
sti
stc
push
inc
push
loope
sub
outsb
fwait
push
adc
sub
pushf
xchg
insl
lods
imul
push
sbb
mov
aas
cmc
movsb
dec
lods
cltd
xchg
cmpsl
push
mov
loop
xor
push
leave
dec
test
xor
xlat
xchg
fstpt
mov
lret
addr16
mov
mov
and
daa
fstpl
mov
cld
pop
pop
xor
stc
jge
loop
cli
xchg
inc
mov
stos
mov
xchg
imul
mov
lret
xor
sbb
inc
in
sub
sahf
mov
or
hlt
and
xor
push
cld
fisubl
cmp
jne
add
aaa
cmc
push
cwtl
jle
pop
mov
inc
pop
push
pmulhw
out
xchg
dec
pop
inc
add
hlt
inc
jns
mov
cmp
push
ret
push
adc
mov
dec
mov
imul
clc
and
cld
pushf
loop
add
mov
push
gs
or
jno
aaa
ljmp
ja
sub
out
inc
loope
les
xchg
in
mov
mov
lock
dec
sub
xchg
lret
jb
and
push
cmp
pop
pop
mov
mov
adc
push
and
sbb
mov
or
out
sub
cmp
inc
sub
rcr
or
incb
fld
out
cmpsl
pop
repnz
xor
lds
pop
xchg
push
hlt
add
add
jne
jbe
adc
sbb
inc
ja
mov
jecxz
cld
pop
je
adc
xchg
ds
pop
adc
inc
insl
push
pop
das
pslld
outsl
mov
pop
inc
imul
fcomi
icebp
das
xchg
add
js
jecxz
js
cmc
adc
xchg
xor
pop
dec
cmp
push
add
jne
addb
xchg
cmc
xor
out
pop
popa
lods
push
adc
cmp
mov
repz
mov
shlb
in
push
mov
gs
xor
mov
cs
jne
dec
mov
sbb
pop
lcall
or
cmp
mov
aaa
sbb
or
ljmp
xor
shlb
daa
mov
int3
sbb
push
jge
mov
daa
movsl
push
and
mov
sub
pop
data16
sub
jle
push
mov
cwtl
inc
iret
cmp
cmc
inc
jbe
mov
mov
divb
popa
push
xchg
lock
iret
imul
push
data16
mov
stos
or
aaa
aam
mov
mov
mov
sbb
dec
push
test
mov
dec
jmp
and
adc
je
std
jmp
call
lods
fiaddl
push
inc
xor
je
jg,pn
xchg
in
mov
jge
or
ror
cmp
push
sahf
out
adc
jge
pushf
sarl
sbb
mov
sarl
ss
sub
cmp
das
xchg
xchg
ss
test
mov
adc
cmp
dec
pop
pop
push
fwait
jg
lods
mov
sbb
subb
xchg
shlb
pop
shlb
push
cmpl
pop
fsubr
stos
clc
and
jnp
jge
out
es
xchg
insl
test
mov
push
ret
and
jp
test
stos
dec
mov
push
imul
jno
idivb
cwtl
xchg
cmp
cld
jno
jae
adc
rcrl
xor
mov
aas
add
cmp
inc
fisubl
jns
lods
mov
mov
notl
daa
sub
cmpsb
sbb
sar
fxch
jbe
loopne
in
add
js
into
push
pop
mov
pop
cmpsl
int3
sub
mov
jecxz
push
push
add
ret
pop
pop
loop
leave
lret
pop
mov
dec
push
rcrl
push
outsb
cmpsl
adc
ljmp
mov
cmp
add
adc
push
test
xor
and
sbb
clc
or
subb
loope
xchg
int3
push
or
into
imul
sbb
mov
sub
cmpsl
aaa
icebp
cli
push
xor
mov
or
and
je
lock
sbb
xchg
in
cs
scas
inc
iret
pop
push
mov
cmp
cmc
test
jle
fldcw
push
pop
das
sub
push
sbb
push
icebp
mov
fstps
push
clc
stos
xlat
sub
orb
scas
fdivrl
mov
pop
mov
mull
adc
out
push
or
jno
and
pop
roll
jg
xor
adc
jo
lahf
popa
jle
pushf
pop
leave
cmpsb
lea
in
jle
in
xlat
jnp
adc
xor
push
sub
adc
inc
out
and
gs
insl
pop
inc
adc
les
mov
mov
dec
lea
fsts
cltd
div
js
jne
ljmp
mov
xchg
xchg
and
test
sub
dec
loopne
mov
out
sahf
dec
or
pop
out
push
out
sti
jae
sbb
movsl
fld
je
sbb
mov
mov
outsl
add
pop
add
cmpsb
adc
pop
ficomps
in
movb
fsub
sbb
add
adc
in
addr16
xorl
mov
fidivrl
test
repnz
jg
adc
inc
push
loope
sarb
je
fwait
loope
lds
inc
mov
pushf
rcr
mov
jnp
fmuls
jmp
push
movsl
and
pop
or
push
test
jno
repz
inc
in
outsl
mov
xorb
fsubrs
add
adc
call
test
mov
repnz
and
cmp
enter
inc
repz
popa
xor
cld
sub
mov
jne
cwtl
inc
cmp
int
rcl
add
mov
push
int
add
std
stc
cmpsl
pop
cmpsl
xor
outsl
sbb
pop
stos
inc
mov
mov
add
add
adc
mov
outsl
sbbb
pop
pop
sub
adc
ret
in
imul
pop
dec
jge
movsb
in
cs
and
cmp
push
cld
cmpsl
xor
bound
add
leave
dec
fsubrl
call
inc
mov
push
inc
dec
out
call
cmp
pop
popl
push
hlt
ss
fwait
adc
dec
ss
inc
add
mov
and
repz
cmp
cmp
add
orl
push
cmpsb
jne
pushw
orb
ret
dec
cli
xchg
mov
sbb
sbbl
out
jae
push
xchg
inc
mov
push
mov
sub
fimuls
jle
icebp
test
mov
lods
xchg
push
jnp
arpl
sub
call
inc
or
xor
mov
jne
add
dec
or
repnz
jbe
scas
jl
or
dec
nop
lahf
sbb
clc
clc
pop
mov
lret
dec
out
xchg
pop
jl
push
sbb
stos
and
das
insl
outsl
and
pop
out
dec
inc
cmc
movb
sahf
addr16
mov
cmpsb
inc
inc
in
dec
cwtl
inc
ficoms
cmp
push
scas
inc
lcall
xor
or
call
int
adc
pusha
gs
pop
dec
and
gs
and
int3
daa
pop
xchg
xchg
mov
out
aaa
adc
mov
cmp
daa
adc
lret
jb
or
lret
shl
dec
pop
add
lods
jb
pop
leave
inc
push
xor
imul
mov
and
in
decl
inc
cmpsl
ror
xlat
push
push
mov
cmc
adc
mov
xor
out
adc
in
cld
push
icebp
test
pop
repz
pop
nop
in
movsl
inc
out
scas
push
pop
test
scas
loop
add
push
das
dec
mov
mov
sti
push
dec
lcall
mov
sub
sbbb
int
mov
mov
cmp
add
fildll
inc
cmp
aam
hlt
ja
fs
or
xchg
mov
xchg
loopne
add
addl
sbb
mov
loop
repz
pop
fadd
mov
sub
and
jno
push
dec
popa
out
scas
popa
mov
nop
clc
gs
cmp
pop
jno
cmc
das
pop
jge
inc
or
test
cmc
lcall
je
jmp
loop
aam
push
push
fprem1
pop
rcrb
fdivr
mov
sbb
stos
cltd
imul
notrack
ret
pushf
cmp
lock
loope
popa
notb
incl
lods
add
jg
push
dec
pop
adc
jg
scas
int3
mov
xor
xchg
in
jg
rcl
insl
in
enter
addb
pop
mov
bound
jecxz
adc
adc
pushf
sbb
adc
xchg
xlat
mov
or
sub
xor
inc
sbb
jp,pn
movsb
sbb
push
mov
and
jmp
xor
pop
js
pop
nop
inc
loopne,pt
adc
pop
cmp
cwtl
leave
xchg
shlb
cmp
gs
cmp
pop
test
dec
in
push
imul
inc
out
cmp
xor
ss
roll
dec
push
pusha
loopne
popa
jmp
push
mov
fsubrs
mov
rorb
mov
mov
pop
push
jl
sar
jp
outsb
iret
mov
roll
ret
xchg
es
xor
xchg
sub
inc
ja
fldcw
xor
or
das
es
sbb
sub
push
push
add
dec
xchg
dec
jp
or
jno
lds
pop
mov
jo
fistpl
fcomi
fsub
xor
in
jns
add
and
xor
xchg
fsts
mov
mov
add
mov
push
mov
xor
xchg
sbb
mov
hlt
jg
jo
hlt
ficomps
xchg
ffreep
pusha
or
js
fcomp
pop
iret
test
or
jb
pop
out
lods
lret
sub
test
xchg
mov
pushf
scas
loop
jmp
pop
and
cmp
sbb
xchg
mov
mov
enter
xchg
sbb
dec
test
jo
pop
xchg
or
cmp
mov
xchg
push
scas
inc
rol
cltd
nop
loopne
xchg
and
mov
pop
and
push
cli
cmp
loop
inc
out
sub
dec
adc
sub
scas
pop
mov
aad
out
xchg
pop
popa
rcr
ljmp
cmp
jl
jg
enter
inc
int3
mov
mov
nop
push
aam
shlb
inc
icebp
imul
movsl
test
out
aam
int
je
jmp
and
xchg
nop
imul
mov
push
dec
pop
inc
adc
in
imul
test
out
ss
out
inc
add
or
out
jns
es
fs
in
sarl
mov
pop
imul
bound
or
push
dec
xchg
outsl
test
in
mov
es
pop
ficoms
cmpsb
cmp
lods
shr
aam
pop
mov
sbb
outsb
xchg
xchg
test
mov
cmp
sahf
mov
inc
shrl
jo
dec
pop
xchg
jnp
push
pop
lret
int
mov
int3
mov
push
inc
in
lea
cmpsl
lods
gs
xlat
movsb
incb
xchg
test
and
push
subb
enter
bound
adc
out
add
imul
int
das
mov
loop
jb
pop
cmp
test
xchg
cmpsb
xor
xor
sarl
test
loope
test
pusha
das
iret
iret
adc
fs
sar
cs
push
notl
or
adcb
movsb
fistpll
insl
ja
pop
negb
mov
cmpl
mov
and
cmc
xchg
push
shlb
hlt
cmpsb
test
push
aaa
aaa
je
xchg
ljmp
mov
inc
cmp
rcll
xor
mov
xor
pop
cmp
cmp
jp
pop
pushf
inc
and
mov
test
dec
scas
sbbb
cmp
lods
mov
and
fcoml
popa
pop
jae
cmpsb
gs
shlb
stos
in
sahf
in
in
push
adc
pushf
cmpsb
out
adc
sub
out
jg
mov
cwtl
in
dec
mov
jno
cmp
lret
jmp
fyl2xp1
stos
xor
popf
cli
lret
add
inc
outsb
mov
shll
and
push
pushf
jle
jbe
pop
rcr
or
cli
mov
mov
inc
jmp
leave
int3
sub
dec
push
lock
jp
dec
int
scas
rclb
pop
nop
and
test
pop
divb
and
movsb
aam
xor
and
and
je
cwtl
scas
aaa
je
mov
ret
stos
insl
adc
mov
xlat
add
insb
imul
dec
data16
pop
cld
add
sbb
jl
lahf
stc
sbb
add
mov
dec
test
jno
xor
subl
sbb
dec
sbbl
dec
push
mov
call
jmp
aad
sarb
test
dec
xor
mov
dec
mov
scas
dec
jno
sbb
outsb
and
xor
push
pop
xchg
cmp
adc
dec
jnp
dec
jmp
sbb
xchg
cmp
dec
jb
cltd
pop
pop
adc
mov
repnz
xchg
push
movsb
mov
xchg
mov
clc
push
icebp
test
iret
jnp
fldenv
pop
or
sub
push
movsl
xchg
mov
inc
scas
push
add
or
dec
loope
testl
repnz
cli
cmp
adc
push
mov
sub
mov
xchg
pop
pushf
dec
inc
push
jns
loopne
jbe
gs
mov
sbb
fists
sar
adc
mov
inc
aaa
adc
jg
push
movsl
test
ljmp
dec
push
dec
push
jg
stos
push
sbb
fildll
jne
sub
jnp
jp
insb
inc
adc
pop
sbb
push
sub
in
daa
add
jl
sub
mov
stos
mov
xchg
sub
xchg
insl
lods
les
jge
dec
fstpl
lret
and
stc
xlat
loop
cmpl
mov
xor
lahf
xchg
call
add
lds
mov
movsl
sbb
movsl
mov
sbb
call
mov
scas
mov
jge
mov
mov
leave
outsl
add
idiv
mov
cltd
les
sbb
xor
pop
and
imul
test
xor
popa
lds
dec
jo
sub
jg
arpl
scas
cli
jo
push
in
dec
xor
loop
mov
and
push
push
subb
imull
and
jecxz
inc
add
dec
sarb
test
dec
fldt
aaa
test
stos
cwtl
push
ret
pop
fsubr
adc
aam
fiadds
cltd
test
dec
push
hlt
aad
data16
mov
mov
adc
mov
icebp
jmp
pop
cwtl
mov
into
lods
dec
daa
call
int3
mov
popf
mov
loope
in
lods
stos
cwtl
sub
das
mov
inc
sbb
lcall
inc
add
iret
aad
sub
jecxz
nop
icebp
movsl
inc
mov
iret
jge
mov
cs
sti
mov
cmp
clc
xorl
imull
push
das
cmp
cs
sti
sub
mov
xchg
test
in
sub
test
cmc
dec
mov
subl
pop
testl
test
pop
call
mov
in
jns
les
push
push
inc
sub
lea
lret
mov
in
int3
fstl
mov
cmp
mov
js
sbb
pop
mov
ljmp
je
lea
jo
sarl
outsl
pop
cmp
cmpsl
out
mov
mov
jg,pn
push
cld
ss
aad
jle
pushf
jg
fldcw
push
aaa
add
cmp
mov
in
mov
mov
negb
dec
cmp
pop
loope
jmp
xchg
js
adc
int3
pop
pusha
xor
aaa
pushf
int
push
xor
adcl
test
adc
inc
xchg
xchg
xor
std
adc
je
push
orb
inc
gs
hlt
or
test
xor
lret
mov
sbb
push
icebp
push
cli
dec
push
inc
mov
sbb
lds
fadd
imul
in
xor
repnz
add
rclb
cmp
test
js
arpl
cmp
jo
sbbl
or
sub
shl
test
test
fxam
repnz
mov
push
mov
rcll
outsl
sub
xor
popa
jns
aas
mov
xchg
shll
jae
pop
adc
inc
mov
push
mov
xor
xchg
jle
in
imul
aam
sbbb
int3
in
out
sahf
insl
sahf
notb
lods
inc
mov
cmp
mov
push
xlat
orl
xchg
scas
stos
and
inc
outsb
icebp
cmp
cmp
ss
test
movsl
stos
pop
inc
push
notl
test
shr
push
xchg
sbb
push
dec
sarl
jno
aad
out
movsb
ja
xlat
insb
cs
loope
add
lahf
sub
or
and
inc
pop
xor
fistps
or
arpl
sub
or
mov
subl
sub
scas
fs
mov
iret
jo
ret
out
dec
push
sub
jmp
lahf
mov
in
imul
aaa
in
ret
in
add
push
ret
aaa
dec
icebp
daa
dec
dec
iret
jae
cmp
cli
andb
lods
dec
lea
xlat
push
test
into
xor
sti
fnstenv
fmull
in
xlat
pop
aaa
std
iret
ret
inc
pop
cld
and
jge
jno
loope
nop
pop
out
push
lahf
pusha
je
jecxz
add
mov
mov
leave
cmpsl
imul
ds
pop
mov
scas
dec
shlb
rcll
pop
cwtl
aam
sub
shrl
shll
lcall
gs
cmp
dec
push
or
out
dec
in
adc
repz
jb
pop
andl
xchg
jb
mov
dec
dec
sti
lcall
mov
mov
mov
int3
pop
pop
mov
in
inc
ret
mov
mov
push
jns
lods
loop
inc
bound
push
sbbl
push
aad
scas
pop
jno
or
mov
push
scas
flds
lock
mov
pop
arpl
gs
mov
adc
scas
jl
loop
data16
daa
add
xchg
inc
lods
sti
dec
mov
xchg
repz
mov
out
cwtl
dec
into
gs
cld
jge
adc
das
push
push
out
cmp
jmp
dec
lods
jp
loopne
call
lret
fstp
push
shlb
sbb
dec
jno
sbb
fcoms
scas
jno
push
shr
cmpsl
shlb
pop
imul
es
cwtl
das
fisttpl
cs
sub
push
adc
shrb
mov
sub
mov
or
sub
out
clc
and
pusha
stos
lock
out
enter
dec
jo
js
pushf
or
fcompl
push
cmp
push
adc
insl
adc
jg
imul
data16
faddl
ret
lods
and
inc
ret
push
cwtl
sarb
pop
and
jge
rolb
xchg
sahf
fucomip
sbb
jo
aaa
aaa
loop
lods
lds
mov
fbld
adc
dec
aaa
inc
mov
bound
incb
int3
das
sahf
inc
push
cltd
js
leave
and
sub
gs
in
fcomip
pop
daa
in
mov
loop
sbb
stos
mov
fbld
popf
cld
cmp
mov
mov
push
add
dec
icebp
mov
xchg
stos
pop
jg
sub
xlat
aas
push
js
dec
cmp
loopne
sbb
xorb
in
or
ja
push
filds
and
sbb
das
enter
pandn
mov
jg
in
fs
jne
add
gs
mov
add
xchg
addr16
mov
cs
push
shll
push
mov
in
jae
cmp
adc
xchg
and
pop
mov
das
mov
gs
dec
mov
sar
mov
lds
adc
mov
pop
adc
xor
pop
out
push
push
shrl
arpl
add
inc
in
repz
je
jno
test
shll
insl
ret
push
inc
mov
test
pop
mov
imul
inc
cmp
aaa
enter
pop
dec
jbe
jns
lret
sbb
mulb
popf
jle
xor
into
clc
adc
xor
outsl
in
shrb
js
add
push
sub
insb
adc
jp
sub
push
cmpsb
jbe
jae
xchg
lret
cli
cmp
insb
jnp
xlat
outsb
into
imul
adc
fisttpl
mov
test
and
call
xchg
dec
xor
call
pusha
pop
xor
xchg
dec
fwait
mov
push
inc
xor
jo
or
aaa
sbb
mov
hlt
and
mov
fs
repnz
push
inc
xor
cmc
arpl
jnp
inc
icebp
pop
jmp
call
add
jg
ja
add
inc
pop
sub
mov
mov
pop
add
ja
int3
enter
test
cmp
rcll
inc
es
popf
sub
adc
push
fldpi
mov
mov
adc
inc
xchg
pop
inc
in
mov
cmp
lods
out
mov
aam
xor
mov
fsub
lods
and
pop
xor
inc
cmc
fbstp
test
sub
mov
pusha
incb
loopne
adc
jne
add
ds
xchg
imul
les
xchg
dec
push
notl
addr16
sahf
xor
out
aad
push
fucomi
fidivl
mov
xor
fistpl
fs
ss
push
stos
popa
ret
pop
fwait
shrb
push
into
mov
mov
mov
push
idivb
add
jnp
xchg
jns
jmp
inc
into
push
sahf
ds
sbb
jg
jle
add
aam
mov
push
xchg
fisubs
cmp
mov
jnp
pop
mov
adc
xchg
cmp
ficoml
and
sub
fcomps
and
sub
hlt
and
dec
insb
push
lret
dec
jle
inc
xor
lahf
push
cmpsl
pushf
pop
jae
push
jns
out
pop
into
mov
das
xor
dec
push
fildll
xor
mov
imul
pop
ffree
mov
mov
clc
testb
icebp
jnp
arpl
mov
adc
mov
mov
adc
repnz
dec
loop
icebp
jg
xchg
ja
push
inc
mov
shlb
pop
sub
iret
push
jns
add
aaa
adc
mov
fsubrp
movsb
or
stc
mov
xor
sar
xchg
lahf
mov
das
hlt
repz
push
sub
inc
cmp
xchg
int
mov
lcall
xchg
sub
fimull
bound
push
jo
mov
jle
fs
nop
cli
cltd
out
jnp
out
in
pushf
mov
int
ficoms
fwait
mov
cli
scas
mov
call
sub
outsl
shll
and
cmp
mov
pop
sub
rorl
push
repnz
pusha
stos
xchg
or
push
adcl
add
xchg
iret
push
mov
pushf
sti
pusha
cmp
pop
or
shl
adc
xchg
in
adc
pmaddwd
loop
ffreep
rorb
sbbb
enter
sbb
aad
adc
lods
and
fisttpl
fstps
fstp
dec
mov
add
enter
dec
enter
dec
call
mov
inc
pushf
push
adc
repz
aaa
sbb
adcb
cld
imulb
xchg
rol
sar
dec
xchg
and
push
push
jmp
jno
mov
dec
xchg
jmp
cmpl
ret
pop
je
lret
cld
inc
insb
push
fs
mov
aam
adc
dec
stos
dec
adc
scas
jno
mov
and
dec
stos
subl
test
cmp
dec
pushf
sbb
and
in
in
xchg
ja
scas
enter
xchg
mov
inc
cwtl
lahf
lahf
je
cld
ljmp
lahf
xor
in
rcl
addr16
fmull
imul
add
aam
add
loop
subb
mov
cmp
push
fsubl
test
adc
loop
lock
xlat
sub
pop
sub
cwtl
and
sub
aam
dec
ja
or
push
xchg
or
xor
xor
bound
out
and
push
pop
out
imul
and
sbb
xor
push
popf
adc
call
cmp
je
mov
in
mov
sub
sti
pushf
lahf
push
addr16
arpl
xor
mov
adc
and
mov
hlt
jnp
cli
idivl
sub
scas
ja
or
or
xor
lods
out
sub
aas
outsb
push
push
into
lods
jecxz
in
imul
cwtl
and
stos
mov
jge
add
dec
movsl
fmuls
lcall
les
push
loop
mov
aad
xchg
adc
mov
roll
mov
pop
loopne
jecxz
ret
sbb
movsb
es
loopne
dec
pop
adc
loopne
push
fucom
popf
cmp
cmpsl
sub
xor
xchg
xor
jp
sbb
adc
mov
adc
lret
out
mov
push
rorb
push
ror
cmp
rorb
xchg
outsl
push
lea
mov
cmpsl
enter
push
aaa
jg
xchg
call
adcl
push
cmp
add
inc
jne
or
jle
xchg
fiaddl
or
out
mov
fildll
mov
sbb
xchg
jae
sbb
stc
sub
fdivrs
sbb
add
inc
stc
pop
xchg
or
mov
jp
out
sbb
in
mov
jle
jno
aaa
push
lods
sti
jge
sarb
cmp
dec
stos
push
imul
dec
jmp
insl
test
jo
xlat
stos
xchg
lahf
sub
je
out
pop
pop
sub
jns
push
mov
dec
xor
mov
or
inc
fcmovnb
xchg
inc
pop
cld
jne
and
divb
int3
hlt
dec
pop
jl
pop
test
js
push
or
cmp
inc
mov
call
push
lret
mov
or
xor
iret
repz
ljmp
int
jae
lock
mov
ss
stos
xor
and
divb
ja
cmpb
fildl
movsl
imul
nop
jmp
out
push
popf
inc
cmp
out
or
sub
push
repnz
gs
push
jmp
fisubrl
int3
jp
rcrb
lock
insb
out
out
jle
sub
xchg
mov
jbe
add
mov
add
imul
je
or
jle
movsl
mov
insb
sbb
scas
fnstcw
shlb
gs
push
mov
and
adc
inc
push
jo
cli
mov
mov
xor
inc
dec
call
jle
scas
mov
inc
and
test
mov
scas
and
cmp
outsb
jns
mov
jmp
roll
and
and
or
inc
mov
add
push
sti
outsb
mov
aas
xchg
pushf
test
pop
push
push
fs
int
mov
lret
sub
sbb
shll
and
repz
sub
xchg
mov
stc
lcall
jmp
rol
inc
pushf
jns
cwtl
pop
mov
out
cmpb
pop
jl
imul
inc
inc
fistpll
mov
xor
pop
into
leave
jnp
test
jle
inc
sbb
inc
mov
sarl
cmp
paddusw
clc
hlt
mov
inc
mov
lock
jmp
shlb
mov
dec
int3
jle
cmpsb
cmp
dec
push
decb
test
sti
lods
cwtl
mov
aaa
add
sbb
sbb
sub
aam
adc
or
inc
divb
adc
and
fs
nop
mov
cltd
outsl
mov
clc
fstpt
inc
push
mov
scas
inc
jecxz
jg
lods
mov
jmp
mov
in
push
jo
inc
mov
push
outsb
xchg
adc
jp
scas
fwait
push
jo
imul
mov
sub
ss
dec
mov
addr16
cmp
mov
inc
loope
cmp
xor
lods
dec
frstor
inc
dec
sbb
pop
xchg
jecxz
cli
jne
mov
fcmovu
mov
icebp
movsb
ror
js
sbb
mov
int3
mov
mov
sahf
pop
outsb
call
rolb
mov
fstps
xor
push
lds
scas
push
cmp
inc
xorb
stos
mov
jp
xor
nop
mov
push
cmpsl
and
or
call
add
add
aad
mov
inc
arpl
pusha
mov
xlat
pop
in
push
shrb
ss
aas
jge
lret
pop
sub
outsl
jecxz
adc
cmc
and
in
les
in
rclb
push
in
xchg
xchg
mov
adc
movsb
mov
mov
lds
and
fsubr
mov
dec
push
pusha
pop
sbb
sbb
adc
inc
cwtl
inc
inc
cmp
ficomps
jno
adc
andb
xlat
inc
mov
pop
sbb
cmp
out
sub
adc
stos
add
lcall
inc
enter
dec
adc
popf
ficomps
jl
mov
xorb
xchg
push
mov
dec
push
xchg
shlb
test
mov
push
mov
int3
sbb
mov
test
xchg
aas
xor
xchg
add
mov
ret
push
inc
sahf
nopl
jle
popf
push
iret
sub
sahf
shll
es
imul
xor
shll
jecxz
sbbb
fldenv
lea
orl
sbb
test
daa
inc
cmp
mov
sub
jae
inc
enter
clc
imul
popf
daa
imulb
in
ret
dec
adc
adc
arpl
inc
pop
hlt
mov
xor
mov
jmp
daa
andb
test
iret
stos
je
and
jae
je
push
add
xchg
or
fnstenv
test
xchg
dec
dec
test
mov
into
daa
out
cmpsb
lods
xor
ret
in
mov
mov
leave
pop
aad
adc
jecxz
xchg
push
add
mov
fs
dec
mov
sub
ljmp
stos
insl
mov
jecxz
stos
lods
notb
xor
xchg
pop
xor
or
icebp
pop
sub
cmc
sbb
in
jo
ds
loope
pop
fsubs
out
push
mov
mov
inc
cmp
sbb
movl
test
into
shrl
mov
filds
dec
aad
cmpb
pushf
sbb
sub
jns
push
and
rorl
ficoms
sbb
in
inc
mov
pop
sub
xchg
rcrb
nop
push
pop
ffreep
jg
adc
and
decb
xchg
jp
dec
lahf
and
mov
test
xchg
repz
shll
add
lcall
std
push
adc
shl
mov
adc
xchg
push
fsubrs
or
jl
push
push
pop
adc
cli
jle
clc
lock
xor
mov
push
loopne
outsl
jle
ds
add
inc
mov
push
fsubrp
mov
push
stos
ss
ljmp
cs
jmp
ds
incl
and
test
adc
jne
stc
call
dec
mov
movsl
xchg
dec
inc
mov
xchg
adc
inc
lods
push
popf
xchg
or
mov
or
or
pushf
dec
mov
movl
in
and
jge
in
cwtl
xor
bound
addr16
pop
dec
imul
xchg
xor
mov
and
dec
in
and
dec
xchg
mov
mov
fwait
shr
sub
lods
hlt
mov
iret
add
fdiv
xlat
adc
adc
sbb
cmpsb
jnp
sbb
rcl
mov
fnstsw
outsb
movsb
dec
push
aam
inc
push
mov
lods
mov
inc
clc
add
repz
jbe
adc
adc
cli
adc
or
mov
mov
shl
pop
push
jle
cld
and
mov
idivb
jb
mov
in
dec
repz
fcmove
dec
lods
jbe
dec
adc
popa
jo
xchg
ljmp
push
pop
cmc
inc
popa
imul
sti
arpl
andb
inc
add
imul
testb
sbbl
ret
xchg
pop
stos
sub
clc
pop
or
lds
lds
or
and
sar
fs
adc
in
in
mov
js
cmovp
dec
lods
dec
jne
sbb
pop
outsl
sub
mov
push
cmpsb
push
jmp
loope
push
js
ja
xchg
and
roll
or
into
fwait
scas
movb
lcall
fadds
ljmp
xlat
cli
jp
push
popf
les
negb
xor
add
inc
cmp
pop
xchg
fildl
cmc
xchg
mov
push
fildl
mov
inc
mov
into
ja
jno
pushf
outsl
dec
inc
fldenv
aad
add
outsb
xchg
and
or
cmc
push
jnp
dec
jle
push
lcall
pop
cmp
mov
lods
push
cmp
fistpl
std
dec
hlt
aas
or
out
lds
les
jno
dec
push
mov
loopne
jne
cld
push
out
mov
xchg
push
xor
sbb
xchg
sbb
lock
push
push
and
or
aad
ja
cmp
in
rorl
push
test
mov
jb
jmp
mov
add
dec
jo
mov
pop
sub
negl
pop
lods
cmp
push
xchg
dec
pusha
fsubrp
movsl
sub
adc
inc
mov
add
xor
and
xor
fisubrl
jle
mov
pop
sub
adc
int
mov
and
inc
xchg
mov
enter
fstp
and
enter
enter
or
add
dec
mov
sbb
repz
or
and
lds
cld
es
jnp
add
fdiv
mov
cli
js
stc
outsl
out
jle
sub
mov
cs
push
cmp
dec
mov
scas
sub
push
lods
xor
jge
jbe
mov
mov
cs
cltd
push
adc
lret
push
mov
and
dec
sbb
inc
sub
testb
mov
sub
scas
sub
les
sarb
sti
ljmp
in
lock
lret
cmp
js
inc
or
push
jg
and
std
pusha
jge
dec
mov
sub
mov
mov
cs
adc
lock
mov
or
scas
or
dec
sbb
bound
mov
lahf
inc
xor
adc
add
sub
arpl
push
cmpsl
mov
push
pop
mov
fiaddl
lock
rorb
shrl
inc
ret
dec
addb
jo
dec
dec
xor
push
add
sub
subb
pop
sbb
and
inc
adc
adc
in
add
inc
mov
outsl
adc
xor
lods
out
jg
lcall
iret
ret
scas
scas
push
cmp
aaa
cmpsb
arpl
jb
pop
in
out
idivb
dec
jp
cli
pushf
lcall
mov
jmp
push
adc
std
mov
jge
or
sub
cmc
int
int3
sbb
lea
sub
dec
jecxz
mov
adc
jg
divb
imul
fcomp
pop
xchg
sbb
xchg
gs
arpl
nop
jp
in
mov
cmc
pop
or
addb
xor
mov
pop
mov
jbe
shlb
nop
aad
jecxz
insb
ret
ret
xchg
pop
xchg
adc
cmp
xchg
jp
or
dec
sub
mov
shll
mov
xorb
pop
jns
shll
or
or
ret
int3
iret
mov
jp
mov
inc
fs
enter
inc
cmp
leave
sbb
jmp
insb
xor
outsb
out
lea
pop
stos
mov
or
mov
sbb
fdivrp
test
mov
push
xchg
jo
pop
out
out
inc
push
pushf
sub
ja
mov
xchg
jge
repz
pusha
hlt
movsb
mov
fs
andb
mov
pushf
adcl
or
mov
das
adc
in
test
loopne
iret
mov
lods
arpl
fstps
xlat
imul
int
into
xor
push
fcoms
in
pop
stos
popa
test
mov
shr
lret
push
fisubl
jne
insl
mov
push
mov
in
pop
or
dec
arpl
cmp
cli
notl
cmp
jo
or
loop
lds
pusha
mov
call
mov
xchg
negb
mov
sub
lods
adc
inc
xchg
outsl
js
mov
mov
cmp
stc
insl
ljmp
call
or
cltd
loope
int3
enter
repz
negl
and
mov
nop
xchg
imul
stc
and
xchg
pop
rcll
mov
dec
mov
xor
push
jl
cmp
sarl
cwtl
popf
xchg
shrl
subl
aad
adc
xlat
mov
call
mov
dec
cltd
push
inc
pop
push
adc
mov
jge
push
xor
and
popa
pop
insl
daa
sbbb
sub
daa
imul
mov
das
loope
push
in
popa
jl
out
rcrl
hlt
xchg
out
out
cmc
nop
lret
push
fmul
sahf
push
nop
fdivrl
or
sub
pop
xchg
adc
inc
pop
dec
dec
call
adc
lret
xorb
lock
jle
repnz
movsb
aaa
lret
aad
sbbl
popl
mov
mov
nop
mov
jg
mov
loop
rcrl
dec
mov
and
adc
jmp
push
imul
and
xchg
adc
shlb
lret
aaa
shlb
shrb
push
sub
rcll
adc
dec
icebp
pop
dec
or
mov
ljmp
add
dec
mov
cld
push
push
mov
out
test
gs
cmpsl
pop
and
or
and
inc
or
es
sahf
inc
sbb
xchg
fcmovb
and
xor
lret
imul
mov
pop
mov
add
adc
cmp
fs
jmp
cmpsl
mov
xchg
lahf
fistpll
fstps
call
push
pusha
cmc
jns
imul
mov
push
lcall
mov
push
fldenv
mov
cltd
dec
push
or
inc
sbb
cmpsl
push
in
rcr
ds
xchg
push
jg
and
scas
rcl
test
and
shr
repz
shlb
out
mov
or
pusha
and
adc
push
into
jl
xchg
sub
cmpsb
dec
mov
stc
push
repnz
lds
rol
push
add
imul
xchg
fcmovb
mov
test
dec
sub
int3
je
insl
mov
jns
seta
xchg
pop
pop
pop
arpl
call
insl
mov
ret
scas
xchg
mov
cmpsl
lods
bound
std
dec
sbbl
test
insb
or
iret
xchg
outsl
fdivr
dec
and
mov
and
cli
push
add
daa
ss
ljmp
xchg
nop
xchg
add
dec
cld
add
pop
mov
jae
cs
mov
andl
idivl
jle
fsubl
push
jmp
push
xchg
cltd
shlb
roll
rcl
mov
in
call
push
popf
fldenv
cmp
icebp
out
mov
fidivs
and
jnp
or
sub
rclb
mov
pop
pop
scas
push
mov
mov
pop
fistps
pushf
out
sbb
push
fst
fisttpll
inc
xor
incb
test
xchg
xor
dec
jl
jno
push
dec
and
jecxz
jae
mov
andl
cli
movsl
lcall
mov
fstp
fnsave
add
or
pushf
ror
or
fisttpl
cld
mov
sbb
mov
shrl
mov
pop
cli
outsl
pop
jl
std
shrl
shrb
imull
xchg
inc
jb
mov
lret
andl
out
mov
fnstcw
test
cmp
push
push
adc
add
mov
int
repz
movsl
repnz
cmp
dec
das
decl
jnp
loope
and
jnp
popa
xchg
pushf
jae
jne
aaa
inc
jae
getsec
pop
inc
popf
ds
mov
push
arpl
notb
data16
das
loop
sub
rclb
aaa
ds
cs
sqrtps
sbb
cmp
into
dec
stc
loopne
push
fldcw
mov
adc
push
cmpsl
out
movsb
clc
jecxz
mov
or
inc
cmpsl
test
cmp
inc
xchg
push
dec
xchg
je
out
rcl
or
adc
inc
scas
jl
push
stc
push
jbe
inc
push
int
stc
test
mov
cld
mov
pop
sbb
cmp
bound
fdivrp
sbb
inc
inc
and
pop
test
iret
test
jae
lods
adc
and
xor
aas
lods
mov
mov
cmp
mov
push
sbb
sbb
jmp
scas
data16
mov
aam
adc
pop
sub
fldenv
les
out
push
std
xor
xchg
pop
fmuls
cmp
cmpsl
fwait
sub
jnp
xchg
jae
mov
cmp
into
psllq
gs
xchg
cltd
pop
fdivrp
mov
mov
hlt
les
call
je
adc
cmp
mov
popf
lds
dec
scas
lock
xchg
ljmp
out
mov
shrl
dec
mov
out
lcall
scas
movsb
in
xor
loopne
jne
dec
sbb
push
add
dec
xchg
movsl
pop
lods
mov
mov
jl
addb
loope
cmp
fidivrs
inc
nop
cmpsl
dec
bnd
fsubs
imul
cmp
sti
sub
or
mov
out
mov
jnp
mov
jecxz
mov
and
mov
fidivl
jne
in
fsubrp
cs
push
cmpsb
rcll
outsb
les
mov
les
pop
xlat
dec
pop
adc
cmpsl
cmp
xchg
retw
cld
gs
dec
test
jle
movsb
push
mov
mov
int
scas
iret
sbb
cmpsl
xchg
adc
dec
dec
gs
addl
jnp,pn
pop
dec
scas
and
jmp
cmp
loopne
cmp
scas
sbb
xor
test
loopne
outsb
inc
shl
and
out
clc
daa
push
out
stos
push
xchg
jbe
jbe
test
mov
addr16
insl
scas
ss
mov
fsubs
xchg
jmp
aad
es
repz
divl
mov
push
ljmp
stos
imul
pushf
stos
icebp
pop
pop
jnp
ljmp
lods
gs
jbe
arpl
pop
mov
cmpsb
mov
js
or
inc
or
and
mov
xor
int3
cs
sub
sub
mov
ja
lods
push
jp
add
scas
addps
pop
repnz
lods
imul
jbe
pushf
or
jecxz
roll
movsl
fwait
mov
add
sub
pop
lea
mov
jno
jmp
cltd
xor
mov
adc
mov
inc
jecxz
adcb
roll
fisubrl
mov
inc
pop
fdivs
or
sbb
jo
add
aaa
cwtl
fiadds
fmulp
xchg
fadd
add
fmuls
jo
sarl
mov
outsb
cmp
adc
adc
repnz
imul
iret
and
mov
les
jmp
mov
hlt
push
insb
in
into
outsl
aam
mov
mov
in
cli
mov
jl
push
mov
sbb
pinsrw
out
mov
addr16
push
std
jbe
out
gs
or
jno
jb
xchg
addb
cwtl
cmpl
cwtl
pop
fwait
pop
xor
cmp
inc
testb
jle,pn
dec
push
mov
lods
fwait
and
rol
push
stc
sahf
call
lcall
and
push
mov
movsb
outsb
enter
dec
jge
stc
lret
inc
push
mov
aad
test
xor
mov
xor
or
sub
into
ss
mov
cmpb
icebp
scas
in
mov
das
and
inc
mov
or
xchg
mov
jb
jmp
and
cmp
lods
lret
add
mov
push
fnsave
out
or
xchg
adc
lea
push
and
xchg
dec
and
stos
inc
into
adc
lret
outsl
cmp
mov
jnp
fimuls
shll
inc
test
push
fcmovu
test
js
aaa
add
rcll
and
inc
imul
scas
mov
hlt
pop
pop
out
arpl
fmull
dec
aad
test
stc
push
outsb
loopne
mov
jo
aam
fldt
test
stos
ret
jecxz
iret
sti
scas
pusha
jbe
insb
fmuls
cmp
pop
insb
pop
dec
repz
xchg
decl
int
movsl
out
sub
mov
loop
lret
ss
mov
cmp
aaa
sub
jo
mov
jle
lret
mov
dec
and
out
loop
popf
pop
je
mov
pop
sub
dec
cmp
jns
mov
add
mov
sahf
scas
mov
jp
pop
scas
fst
bound
cmp
jne
mov
enter
pop
es
dec
data16
aad
leave
scas
adc
or
leave
rcrb
inc
out
imul
fcomp
or
cmpsb
outsb
push
shrl
rorb
outsb
cmp
mov
mov
in
mov
ret
js
js
sbb
pop
xlat
push
mov
mov
rclb
pusha
push
mov
lret
enter
lahf
mov
ljmp
add
cmc
mov
cmpsl
mov
mov
jl
imul
push
push
xor
xor
outsb
lret
adc
cmp
fdivr
lock
out
mov
jmp
enter
pop
xor
add
xchg
pop
mov
push
inc
test
ljmp
aas
pop
enter
sub
or
and
fidivl
movsb
ss
rcl
cmpsl
push
loopne
lahf
and
test
pop
pop
xchg
jo
sub
jg
pushf
jbe
inc
test
push
jne
jg
cmp
pop
cmp
bound
jg
add
lods
pusha
mov
rcrl
push
fucom
cs
insb
adc
psubq
adc
or
xchg
push
daa
out
js
or
cmpsb
jae
out
xchg
push
adc
jecxz
pop
or
cld
xchg
jne
cmp
rcrb
xorl
loopne
std
test
push
cmp
shl
repz
in
popf
adc
mov
js
jo
int
cmp
notb
push
shlb
add
or
int
clc
dec
mov
jl
mov
aam
cld
aaa
mov
ja
mov
xor
popf
mov
call
push
rcrl
aaa
push
cs
mov
imul
dec
loopne
repnz
xchg
push
pop
repnz
daa
scas
in
cwtl
out
cmp
adc
ret
inc
dec
mov
cld
mov
push
test
shr
sbb
add
loope
lock
das
cld
sbb
or
cmc
xchg
xor
sbbl
loopne
aaa
inc
dec
addl
aam
sbb
in
inc
call
lret
jle
mov
adc
and
cmpsl
ds
test
xor
cmpsl
scas
pextrw
sbb
mov
push
popl
pop
mov
pop
or
andb
enter
sbb
jp
outsl
xchg
mov
cmp
cmp
sbb
push
repnz
pop
imulb
xor
pushf
add
incl
add
dec
fimull
jl
ds
bound
arpl
dec
test
sub
clc
mov
pop
or
lahf
xchg
int3
jb
dec
add
mov
pushf
sahf
add
outsl
fsubrs
hlt
movl
lcall
int
nop
and
pop
push
pushf
and
into
ret
add
test
xchg
ss
inc
mov
xchg
dec
sbb
and
nop
movsl
cmp
decl
and
fidivl
out
xlat
push
sbb
sub
pop
xchg
mov
jl
das
push
sub
ljmp
shrb
cld
mov
fstpl
int
push
std
pop
add
pop
xor
xor
roll
cmp
push
subb
xchg
fidivrs
adc
push
mov
mov
and
imul
cs
int
in
lret
sbb
dec
dec
data16
or
sub
aas
xchg
pop
cmpsb
sub
adc
insl
cli
popa
sahf
jnp
sub
decl
lea
jl
cltd
ja
das
popf
xor
jmp
fsubs
or
dec
or
add
in
xor
pop
shr
jno
push
pop
pop
jns
and
leave
or
or
cld
mov
sti
mov
jl
out
sub
nop
add
xlat
or
ret
adcl
push
lcall
je
pop
dec
xor
xor
sub
int
add
jmp
fsubrl
arpl
sbb
fs
and
mov
aas
mov
lret
jp
sbb
dec
or
cmp
cmp
add
jmp
insl
lret
inc
inc
and
movsl
cmp
aaa
subb
xchg
ret
icebp
adc
dec
cltd
push
pop
popf
xchg
movsl
or
inc
bound
insb
lcall
out
and
sbb
fcmovb
cmc
or
xchg
inc
mov
inc
mov
xchg
rcrb
adc
std
inc
inc
add
cld
ret
sbb
push
clc
lahf
je
ss
cmp
sbb
mov
addr16
cmpsb
insb
and
sub
or
and
pop
scas
bound
test
iret
sbb
adc
iret
jle
aaa
dec
cli
inc
stc
push
mov
pop
rolb
push
or
pusha
daa
repz
and
mov
std
scas
sarb
lcall
mov
les
lods
cwtl
jmp
add
rclb
mov
popa
push
shll
shlb
int3
rorl
xchg
push
xchg
mov
stc
push
das
jne
add
imul
sub
popa
mov
loopne
push
js
adc
xor
dec
loope
cli
or
push
lret
add
sbb
push
mov
mov
ss
je
sbb
sbb
push
leave
pop
loopne
jecxz
sbb
push
aas
lods
add
nop
push
sbb
adc
shrb
xor
testl
cltd
xlat
out
in
popw
ds
adc
pusha
xor
jbe
cmp
xchg
sahf
jg
repnz
in
pop
mov
adc
push
push
mov
stos
repz
loopne
and
pmullw
push
xchg
cmp
sub
fstpl
mov
pop
sbb
aam
pop
jne
push
addr16
dec
out
lret
push
pop
sarl
out
mov
pop
xlat
xor
je
mov
daa
dec
iret
cmp
out
pusha
leave
out
rorb
xchg
call
or
test
add
mov
dec
inc
test
xchg
sub
xor
mov
rcll
shlb
stos
icebp
mov
mov
xor
push
int
out
cli
ljmp
ljmp
popa
jbe
je
clc
add
adc
xor
dec
stos
sti
popw
dec
imul
or
xor
jecxz
and
shll
fidivrs
add
pusha
pop
dec
test
and
out
out
sub
out
bnd
fsubl
call
push
lock
add
xor
and
mov
mov
add
mov
stc
mov
inc
cmp
mov
xlat
scas
add
cmp
cmp
push
dec
insb
mov
call
pop
dec
xchg
loope
inc
addr16
ss
hlt
push
and
pop
stos
dec
or
mov
xor
mov
lahf
je
or
scas
cli
sbb
or
mov
negb
jmp
or
jae
bound
scas
out
cmp
xchg
outsl
ret
dec
adc
popf
in
inc
fucompp
movsl
cmp
mov
ss
sub
push
test
adc
dec
xchg
ret
test
in
cmp
adc
cmp
call
test
fnstcw
or
jecxz
loope
mov
push
push
fldenv
fdivrl
pop
mov
jae
jbe
addr16
test
shrb
lret
mov
sub
test
fsubrs
ljmp
xchg
jmp
adc
mov
imul
inc
dec
pop
xor
icebp
clc
jl
mov
fbld
add
jo
xchg
inc
push
dec
imul
shr
dec
aaa
jl
lock
fmull
sub
pusha
lret
test
aas
inc
sbb
xor
fwait
shlb
push
dec
fxtract
lods
jp
mov
inc
sbb
mov
push
cli
mov
sahf
add
inc
iret
lea
sbb
repz
push
and
mov
pop
pushf
loop
push
in
enter
rclb
or
std
pop
xor
dec
mov
cwtl
inc
dec
sub
in
xchg
sbb
mov
add
es
or
jne
ret
jo
pushl
icebp
cmp
jo
xor
pop
add
daa
data16
movsl
adc
fsts
arpl
aas
or
out
adc
icebp
or
decb
jne,pt
cmc
push
cmp
dec
jne
mov
jo
aam
pop
daa
aaa
incl
xchg
stos
cli
push
inc
movsl
push
or
mov
and
or
stos
xchg
sahf
std
xorb
mov
push
lcall
sub
stc
push
lds
dec
push
lock
int
push
sti
sbb
into
cmp
inc
xlat
aas
into
mov
push
and
insl
rcl
pushf
inc
leave
jp
arpl
sahf
sbb
stos
mov
inc
out
cmp
mov
mov
xor
jbe
insl
pop
fdivr
aaa
lcall
jecxz
ljmp
in
in
int3
add
bound
pop
repnz
mov
cltd
imul
je
jmp
push
adc
scas
mov
cli
inc
int
sbb
std
mov
aad
push
cmpsb
movsl
lds
jbe
mov
inc
pop
fsubrp
push
out
inc
jmp
xor
jmp
shlb
cmpsb
pop
lods
dec
enter
inc
adc
fimull
in
out
out
fcoml
sti
pop
repz
cs
push
xor
std
in
sub
add
cmp
add
stc
push
roll
pop
repnz
add
repz
cmp
loop
shll
leave
mov
and
fldcw
pop
dec
bound
adc
stc
insl
aaa
repnz
push
sbb
lds
sbb
adc
enter
pop
test
pop
mov
inc
outsl
test
adc
test
inc
mov
and
imul
push
cmp
push
insl
aam
push
popa
or
out
cmpsl
push
pop
dec
sbb
inc
mov
xchg
sub
pop
push
push
shll
fs
movsb
jecxz
push
je
mov
jns
std
jns
or
cmp
xor
sub
daa
cltd
jge
or
iret
pushf
xor
nop
lret
xor
xor
repz
js
ljmp
test
push
sbbb
nop
jae
adc
and
test
sbb
sbb
in
jno
out
inc
fs
and
fs
outsl
clc
jnp
jge
sti
ret
leave
subb
dec
mov
or
filds
gs
inc
mov
xchg
clc
xchg
std
jle
sbb
cli
jo
jns
test
pop
push
mov
ds
hlt
inc
mov
daa
ljmp
cli
jmp
or
adc
in
dec
mov
ljmp
sub
ljmp
xor
cmp
in
pop
ret
test
dec
int
repnz
movsl
jg
mov
mov
jae
fwait
push
add
jecxz
add
packsswb
sub
movsl
mov
adc
push
loop
arpl
loop
dec
mov
and
jg
add
push
bound
mov
roll
inc
aam
add
jae
mov
loopne
adc
add
mov
roll
mov
test
iret
negl
mov
cmp
jle
test
in
xor
mov
sahf
fisttpll
daa
or
jns
dec
ja
idiv
stc
or
xchg
out
ds
stos
adc
pop
decb
or
sbb
jle
addr16
pop
jp
data16
lea
in
and
stc
js
mov
pop
lods
push
jmp
imulb
movsl
jne
add
popf
pushf
fsubl
jo
pop
and
push
pop
pushf
jb
pop
and
pop
add
stos
mov
jle
sub
push
fsubs
sub
mov
fadds
mov
scas
mov
pop
sub
shlb
jmp
das
mov
imul
push
rcr
rcrb
add
mov
pop
sbb
xchg
int3
shl
cs
outsb
into
add
outsb
lahf
inc
into
cmp
or
jg
xchg
mov
jg
jmp
divl
mov
push
sub
repz
inc
fisubs
mov
xchg
dec
jp
scas
imul
pop
mov
fcmovnu
add
mov
mov
add
sub
xchg
les
push
jg
fildl
ret
fists
insw
es
dec
dec
int
bnd
pop
xor
fisubs
int
xor
stos
popa
test
adc
stos
cld
enter
loop
les
dec
je
sarb
lods
sbb
out
data16
dec
nop
ljmp
cmc
sti
xchg
insl
add
div
adc
add
cltd
bnd
inc
out
dec
ljmp
add
outsl
mov
mov
imul
enter
cmpsl
sbb
jnp
cltd
sbb
pop
cmpsl
mov
popa
push
or
mov
loope
inc
sub
dec
je
fdivs
divl
mov
dec
inc
adc
je
popa
push
insb
mov
dec
mov
dec
mov
jle
outsb
in
add
cmp
out
test
fldcw
aad
imul
push
sub
je
or
data16
movsb
std
jg
or
add
xor
hlt
mov
mov
xchg
xchg
sub
mov
mov
popa
inc
movsl
int
jns
loopne
aad
int3
pop
lods
inc
and
jne
inc
cs
incb
dec
sub
das
mov
es
sbb
fwait
mov
dec
popa
ss
sub
sbbb
add
xor
mov
push
xor
roll
imul
xchg
sbb
jbe
add
and
push
jecxz
adc
pop
lret
push
ror
das
lock
sub
mov
add
add
cld
push
mov
mov
repnz
push
cmp
lock
jge
pop
pushf
cmpsl
mov
ret
lods
jbe
mov
in
mov
jp
inc
dec
adc
sub
inc
mov
sbbb
icebp
or
xor
mov
xchg
jns
nop
xor
popa
pop
sarb
adcl
mov
adcl
xor
fcmovbe
jno
or
int3
jmp
ds
mov
aas
mov
bound
movsb
enter
lahf
xchg
sbb
in
or
xor
pop
clc
scas
push
std
inc
mov
fisttpl
inc
daa
bound
sbb
or
mov
mov
xchg
mov
mov
leave
lret
loopne
into
xchg
sub
pop
inc
or
push
fadds
int
insb
in
dec
add
mov
lea
jmp
repz
jle
stos
cli
lea
negl
mov
mov
add
scas
add
cmp
fmull
or
mov
test
pop
sub
add
loop
adc
push
orb
jge
jne
insb
btc
aaa
sbb
dec
into
adc
mov
mov
adcl
cwtl
xchg
dec
movb
xor
push
frstor
pop
cmp
dec
push
movsl
ds
push
xchg
inc
inc
je
fnsave
js
mov
rorb
adc
push
xor
call
sahf
push
test
scas
sub
enter
in
into
dec
popa
and
andl
dec
aaa
addb
repnz
xor
pop
push
stc
fwait
outsb
pop
int
and
adc
pop
sub
cmp
push
add
mov
das
testl
mov
inc
insb
inc
cs
jnp
sahf
fadd
add
jnp
mov
aaa
adc
jae
sbb
addl
push
xor
arpl
outsb
lret
fsub
mov
mov
in
hlt
or
mov
jb
push
cmpb
insl
test
mov
bound
xchg
repnz
into
sbb
es
test
adc
mov
mov
test
aaa
hlt
testb
lods
loop
bound
loope
add
jbe
jmp
pushl
mov
xor
jne
xor
fdivrl
cmpsl
mov
jmp
adc
out
aam
pop
orb
pop
je
cmp
xor
mov
lock
cmpsb
sbb
sub
int3
mov
sbb
pop
lds
pop
out
mov
push
lods
push
mov
or
mov
mov
cmp
les
cld
xor
outsb
movsl
adc
mov
sbb
hlt
sbb
adc
out
add
das
test
sbb
in
push
int3
mov
nop
shlb
scas
ja
pop
jg
adcl
out
loop,pt
ljmp
ja
mov
xor
scas
push
sub
or
cmpsl
jg
mov
test
mov
es
mull
inc
adc
pushf
je
add
pop
imul
jnp
dec
dec
loope
add
sbb
push
xor
push
mov
stos
dec
aam
shlb
notl
movsl
outsl
push
data16
fwait
sbbl
inc
push
bound
mov
aad
shl
jg
mov
iret
or
pop
loop
mov
subl
adc
lea
dec
lds
mov
lock
popa
jae
lret
dec
inc
in
std
pop
loope
loop
pop
int3
adc
mov
arpl
pop
fnstsw
popa
outsb
dec
jl
push
inc
fmull
in
add
lock
decl
cli
jbe
cmpsb
or
scas
rorl
out
aaa
popa
sbb
add
movsl
inc
rolb
mov
push
lock
pushf
outsb
mov
mov
out
add
insb
pop
repz
inc
ss
or
rol
jle
fiaddl
into
cmp
and
pop
aam
inc
dec
jnp
fsubs
inc
mov
hlt
mov
loop
inc
adc
sbb
dec
and
mov
add
add
pop
and
pop
cmpsl
lea
or
dec
dec
jecxz
pusha
lcall
adc
mov
pushf
jns
in
jnp
push
xchg
daa
in
inc
jae
push
lods
test
lahf
mov
je,pn
dec
and
sub
push
push
dec
sahf
outsl
or
mov
sahf
adc
js
add
jb
or
cmc
sbbb
xor
outsb
out
sub
lcall
stos
push
cmpsb
push
jg
push
ret
mov
mov
pop
jle
mov
push
cli
mov
sbb
imul
cltd
mov
jl
cmpsl
loope
add
sbb
or
inc
xchg
push
inc
xor
mov
mov
sbb
adc
add
jp
jp
adc
jmp
xchg
aas
sbb
bnd
shl
xor
stos
aaa
loope
sub
sbb
xor
dec
dec
loope
mov
add
sahf
mov
sgdtl
pop
insb
rolb
pop
xchg
test
cmpb
push
insb
dec
ljmp
xchg
jl
mov
or
aas
mov
out
jmp
inc
xchg
imul
imull
sbbb
or
push
data16
inc
out
inc
fwait
into
jp
fistpl
test
mov
int3
mov
je
lcall
cmp
imul
inc
xor
xchg
push
fwait
push
mov
test
fs
in
push
dec
sub
ljmp
or
scas
inc
stos
cmp
push
bound
fcmovbe
xor
xor
and
fisttpl
pop
xchg
inc
mov
pusha
pop
xor
dec
out
add
sub
aaa
pop
sbb
inc
and
mov
dec
add
xcrypt-ofb
cmpsl
scas
jle
lea
inc
lret
push
mov
aad
dec
into
mov
and
aas
stc
mov
leave
inc
or
add
in
dec
cli
insl
mov
push
test
ror
fdivr
push
lds
sbb
inc
fsubrl
dec
mov
lret
push
idivl
rorb
mov
push
jecxz
jg
addr16
inc
mov
aaa
dec
jnp
mov
aas
lods
loope
sub
cmp
jmp
push
xchg
lock
cmp
lret
sbb
pop
xor
sub
pop
fisubs
dec
jae
lcall
es
adc
jp
call
aam
add
push
push
xlat
fwait
movsb
test
mov
mov
add
gs
cwtl
repz
adc
push
test
imul
mov
insb
mov
push
popa
stos
or
fdivrl
insl
jmp
cli
and
push
mov
xchg
xor
jbe
imul
lret
stos
cmpsb
and
call
sbb
std
int3
clc
push
adc
js
test
decb
push
and
jo
xor
inc
dec
push
cmp
push
popa
xchg
xchg
xor
scas
fcoms
sub
mov
addr16
dec
lods
inc
dec
mov
aas
xor
cmp
out
test
lret
shll
scas
lret
inc
or
test
jge
pop
lods
aam
fnstenv
inc
int
mov
cli
dec
xchg
gs
jecxz
nop
gs
pop
inc
or
rcr
inc
jg
stos
or
fwait
insl
push
pop
stc
loopne
int3
test
faddl
jae
cmp
outsl
aam
sbb
lret
stos
mov
sahf
outsl
cwtl
mov
xor
mov
andl
dec
jne
mov
shrb
adc
lods
push
jg
and
inc
int
dec
clc
sbbl
movsl
inc
arpl
push
ret
push
imul
jle
mov
in
dec
out
ja
lcall
rcl
mov
inc
rolb
lret
push
jmp
test
ret
mov
imul
je
mov
push
mov
jmp
adc
sbb
je
bound
out
inc
loope
mov
cltd
maskmovq
divl
xor
mov
aas
inc
out
add
sbb
repnz
lods
mov
jle
movb
vmwrite
stos
push
notb
fld
call
jmp
add
xor
insb
jnp
out
aam
lock
loope
inc
ss
dec
rep
or
std
push
testl
jmp
in
fistpll
ficoml
push
dec
mov
iret
inc
ja
and
loop
daa
insb
aaa
mul
jnp
popf
decb
pop
addb
xor
mov
push
movsb
dec
test
xor
inc
shll
mov
sbb
push
inc
ljmp
jb
dec
pushf
jns
sbb
aaa
int3
lods
es
clc
xor
fisubl
sub
nop
push
aas
out
dec
cmp
vpmacsdql
imull
aad
and
pushf
and
enter
sbb
xchg
mov
jmp
add
jle
sbb
lcall
aam
jecxz
es
repnz
cwtl
push
sbb
mov
dec
in
xor
adc
lret
xchg
dec
maxps
addr16
mov
js
cmp
ret
push
xor
mov
inc
jg
cwtl
sub
jecxz
mov
loope
mov
outsb
cmpsb
add
add
mov
pop
push
mov
sub
adc
inc
rclb
ret
push
cmp
bound
mov
mov
jp
or
js
in
scas
mov
push
ljmp
jns
ss
lds
nop
or
mov
and
cmpsl
adc
inc
inc
jb
dec
out
jp
push
aam
scas
adc
dec
mulb
xchg
mov
sahf
cs
sbb
into
sub
sub
test
fs
mov
mov
sbb
movsb
aas
jae
add
jno
xor
sub
add
add
popa
enter
jp
leave
imul
test
and
int
in
clc
aaa
lcall
cltd
mov
daa
cld
stos
lock
sbb
sbb
jb
notrack
incl
out
add
dec
and
fiaddl
scas
shr
inc
movsb
sbb
lcall
jecxz
leave
add
cmc
add
adc
shlb
sub
jo
ljmp
xchg
out
es
jo
cmp
shlb
dec
cmp
aas
cld
dec
adc
jg
cmp
push
push
test
xor
jbe
enter
stc
cmpsl
jns
and
nop
sub
lods
mov
jmp
lods
sbb
and
aad
or
lock
sbb
jo
cmp
pop
imul
sti
add
mov
jo
push
pop
lcall
testb
call
movsb
pop
jno
sub
pop
insl
xchg
mov
inc
testl
or
pop
gs
xchg
jmp
call
mov
ret
or
jge
and
or
and
outsb
cmp
lods
lods
data16
ljmp
dec
mov
cwtl
mov
pop
dec
or
inc
push
push
scas
test
loope
mov
lea
push
inc
ret
jg
push
push
addr16
push
jmp
fldenv
jg
leave
mov
test
lock
adc
jle
lods
dec
cmp
xchg
outsb
dec
xchg
jecxz
mov
xchg
test
add
out
outsb
aaa
pop
xchg
fiadds
inc
rcll
add
xchg
jg
xorb
jb
mov
fdivr
mov
jle
out
sub
jb
add
pop
out
leave
std
and
addl
mov
inc
sti
xchg
or
iret
jb
out
ss
mov
out
and
mov
xchg
cmp
push
cmp
sti
push
into
ja
jns
outsl
insl
hlt
cmpsl
pushf
shll
je
dec
and
in
add
enter
pop
mov
ja
add
push
in
mov
xchg
ret
sti
imul
xchg
repnz
xchg
inc
cld
pop
inc
insb
dec
jb
enter
aam
repz
xchg
mov
out
jecxz
sbb
lds
xor
rcll
sub
push
cltd
add
test
or
pop
adc
dec
orps
adc
dec
adc
outsb
scas
sub
sbbl
fiadds
sub
test
repz
nop
xchg
dec
sub
mov
lock
adc
iret
inc
pop
or
xchg
lods
xchg
mov
pop
sub
rcrl
xor
cmpsb
dec
test
test
int3
out
sarb
lret
lock
add
out
dec
das
add
sti
adc
mov
cmc
push
fldenv
mov
jmp
pop
je
in
call
test
mov
adc
lea
es
loop
mov
call
mov
pop
rcrb
sbb
pop
repnz
mov
aaa
jmp
xor
mov
lret
or
sub
xorl
std
inc
mov
add
insb
popf
or
js
imul
pop
xchg
mov
out
dec
mov
xchg
movsl
xchg
imulb
mov
adcl
dec
fstpl
aaa
testl
faddl
or
cmp
aam
mov
mov
jge
std
add
mov
mov
cmp
movsb
jb
and
faddl
add
pop
jae
push
inc
dec
cld
aad
movsl
mov
add
lcall
ja
test
notb
push
sub
adc
xchg
mov
xor
mov
push
je
jo
jl
arpl
imul
fpatan
push
jne
jge
iret
fiaddl
fsubs
loope
mov
or
je
cmp
imul
dec
lods
stc
add
sbbl
enter
aaa
pusha
movsb
pop
mov
das
mov
fwait
enter
mov
jle
xor
mov
pop
mov
jg
movsl
hlt
icebp
lea
xchg
sub
outsl
lods
hlt
movsl
loop
hlt
pusha
cmp
gs
push
sbb
or
iret
sbb
fldt
push
xlat
inc
mov
cld
shll
mov
push
mov
aaa
hlt
mov
dec
fcmovb
and
stos
imul
pusha
or
fwait
sbb
loop
gs
lret
jae
jb
jbe
test
pop
sbb
adc
adc
sbb
lcall
xchg
ds
stos
pushf
adc
mov
dec
lret
fxch
inc
lds
lret
stos
cmp
ss
cmp
out
cmc
nop
or
std
in
xor
dec
pop
into
mov
jb
mov
rsm
test
loope
sub
cs
loope
sub
cld
test
stos
cld
pop
push
push
push
call
mov
fbstp
cmc
pop
mov
popa
in
xchg
mov
cmpsb
lea
mov
xor
insl
lret
adc
dec
cmpsl
sbb
into
dec
add
mov
int
inc
rcl
or
aas
cmp
lcall
iret
ret
lahf
mov
xor
imul
push
popf
mov
icebp
pusha
test
inc
fs
mov
inc
in
sbb
add
jmp
pop
inc
jbe
adc
in
inc
dec
jmp
dec
and
inc
inc
xor
iret
clc
cmc
mov
push
add
add
or
add
fst
scas
sbb
pop
sbb
dec
inc
pop
mov
call
mov
adc
lods
inc
testl
shl
xlat
push
movsl
pop
lret
pop
bound
dec
pop
sbb
aas
push
and
mov
lret
mov
inc
iret
repnz
loope
adc
mov
cmpsb
add
ds
ds
decl
xlat
cmp
jnp
imul
pop
push
shlb
mov
fisttps
and
sbb
cmp
xchg
bnd
ret
jo
adc
push
cs
jg
stc
das
pop
xor
mov
shll
ret
xlat
dec
dec
idivb
out
xor
imul
mov
aam
and
int3
cmc
mov
outsb
orb
lea
gs
mov
and
mov
push
inc
push
cmp
sub
push
pop
push
inc
movsb
out
or
jno
cmpsl
mov
sbb
test
inc
mov
loopne
dec
js
fwait
mov
jno
cli
imul
lret
insb
jge
in
push
test
out
sbb
test
std
jle
out
mov
stc
dec
mov
or
or
sbb
cmc
sbb
mov
jl
cmc
mov
fldl
sar
js
xor
and
les
xor
or
das
lds
addr16
jbe
adc
mov
nop
incl
adcl
xchg
jg
out
into
push
incb
pop
push
mov
mov
or
loop
cmp
fucomi
int3
cmp
scas
lcall
cmp
sub
cmc
push
or
aam
sbb
mov
lcall
insb
jl
dec
mov
mov
sub
shl
adc
fistpl
fnstcw
cs
add
rcll
mov
test
popa
mov
movsl
fcomi
pop
mov
aad
aam
inc
rcll
xor
jns
rcrb
pop
push
idivb
mov
jnp
jo
int
rcrl
and
stc
subl
jge
test
or
mov
inc
lcall
addr16
inc
pop
mov
fisttpll
je
xchg
sbb
xor
rclb
cld
xchg
int
cmp
test
test
int3
mov
repnz
adc
and
push
jecxz
or
rcll
mov
cwtl
imul
or
mov
scas
add
and
in
cmp
inc
cltd
xchg
mov
cmp
sbb
lods
or
pop
in
movsl
jns
int3
insb
out
and
mov
pop
push
xor
bound
test
mov
subb
fisubrl
into
sub
ljmp
dec
imul
mov
cld
xchg
stos
call
sti
push
fldl
sub
fisubrl
rcrl
test
xchg
nop
dec
rolb
sub
rol
mov
mov
test
mov
iret
sbb
xchg
cmpsb
sub
fnstsw
cmc
add
add
shlb
cmp
push
popa
cld
mov
jle
ret
and
dec
push
cmovne
jb
ja
fstpl
sub
movsb
push
mov
xorl
adc
divb
cmp
mov
pop
std
and
add
in
test
gs
dec
outsb
loopne
inc
out
adc
idivl
xchg
shll
hlt
pop
dec
aam
ja
xor
pusha
mov
xlat
jmp
fsubrl
inc
cmp
mov
xchg
push
fisubs
mov
fiaddl
sub
pop
xor
mov
inc
cli
sti
push
mov
dec
daa
sub
pop
popa
pusha
push
aad
fcmovnbe
lock
mov
scas
test
pop
push
fldcw
jp
mov
int
stos
movl
pop
xor
inc
sub
repz
lock
arpl
cmp
mov
or
stos
sbb
add
pop
dec
test
sbb
pop
lret
pop
or
add
and
mov
scas
lret
dec
jo
stos
imul
hlt
stc
sbb
orl
lods
pop
outsl
and
nop
jl
loopne
or
lea
popf
stc
mov
movsl
in
outsb
mov
movsb
fucomp
pop
inc
xchg
mov
cmp
fstps
outsl
jl
fsubrs
push
cmp
pop
cmp
out
enter
pop
nop
or
ds
out
mov
cwtl
popf
push
or
loope
in
lea
testb
and
in
pop
aaa
es
mov
mov
ds
sahf
int3
adc
lret
pop
daa
movsl
jecxz
int
cltd
adc
roll
mov
xor
mov
ss
cltd
push
push
pushf
js
rcl
mov
sahf
adc
mov
mov
xor
and
movq
adc
and
and
mov
push
push
fimuls
movsb
insb
xor
cmp
mov
stc
pop
sub
adc
fldt
mov
jne
adc
popf
filds
sub
leave
push
xchg
xchg
cmp
ret
pop
sbb
jp
jbe
dec
shrb
xor
push
loopne
lods
fs
cli
cmpsl
sub
ret
xchg
and
out
sbb
fldcw
mov
cmp
add
mov
movsl
inc
push
sti
test
and
sbbl
dec
insl
sbb
or
leave
add
pusha
dec
in
lods
pop
mov
jbe
mov
mov
daa
sbb
out
and
add
loopne
push
add
xor
inc
inc
nop
and
inc
nop
neg
imul
mov
movb
js
push
movsb
shlb
mov
sub
imul
gs
aaa
dec
fwait
int
pop
mov
inc
aad
stos
cmp
mov
dec
sbbl
sti
lds
push
pop
pop
xor
arpl
mov
mov
enter
lock
fmuls
nop
negl
xchg
rolb
lods
or
ror
xchg
pop
mov
loopne
mov
sbb
fcoms
inc
mov
aaa
mov
ret
xchg
cs
in
daa
idivb
xor
pop
test
and
xor
js
and
and
fistps
lret
inc
pop
insb
inc
int
push
xchg
lcall
mov
repnz
imull
pushl
roll
xchg
xchg
insb
push
arpl
add
cmp
es
nop
test
dec
lock
cmc
loope
adcl
push
pop
mov
test
ret
mov
repz
or
daa
rclb
add
and
push
mov
or
cmp
lcall
sub
xchg
stc
xchg
outsl
enter
insl
cltd
mov
shll
hlt
dec
xchg
test
arpl
jnp
scas
xor
cmp
cmp
push
and
fxch
xchg
xor
pop
or
mov
daa
fsubp
mov
xchg
inc
jne
in
repz
popf
push
mov
cld
xchg
inc
repnz
jmp
ljmp
jae
clc
fsts
cmp
loope
je
or
dec
sbbl
mov
pop
loope
jge
inc
cwtl
loop
rclb
xchg
pop
mov
adc
inc
shlw
adc
insl
int3
and
jmp
std
loope
test
ja
jno
xor
fsts
stc
sbb
sarb
out
mov
inc
xor
mov
movsl
pop
sbb
fcomip
or
adc
jg
cli
cmp
aaa
dec
imul
jg
pop
outsb
adc
stos
mov
pop
sub
addl
lcall
sar
or
adc
inc
cmp
std
inc
dec
outsl
add
jne
and
adc
shrb
nop
add
out
adc
std
push
test
xchg
mov
incl
inc
rorb
and
pop
mov
fst
and
inc
idivl
xor
jne
add
cmp
mov
je
fbstp
loopne
mov
aas
xor
add
js
sbb
mov
stos
popl
push
cmp
push
pop
jl
stos
sbb
mov
out
mov
movsl
dec
pop
push
adcb
js
mov
fstpt
fldcw
sahf
add
push
aas
xchg
adc
in
es
add
mov
push
jo
fsubrs
ret
pop
ljmp
fistl
mov
mov
pop
das
pop
aaa
pop
lahf
icebp
popf
imul
push
adc
hlt
xlat
or
bound
jmp
mov
fisubs
push
repz
jae
rclb
mov
xchg
cli
mov
pop
je
jg
push
jle
lcall
ret
mov
pop
aad
xchg
insb
jns
mov
or
add
push
or
aad
push
cmp
aaa
xchg
test
aad
outsb
daa
pop
rcll
cld
jno
mov
push
stc
xchg
std
add
sub
imul
outsl
sbb
ljmp
jmp
adc
dec
bound
pushf
jb
movsb
sub
add
fdiv
rcrl
cmp
xor
data16
lahf
dec
sahf
mov
xchg
jmp
nop
test
push
call
cmpsb
aam
negb
notb
sqrtps
mov
rclb
rorb
ret
mov
cltd
leave
push
outsb
insl
inc
push
mov
cmp
dec
ffree
aaa
pop
pop
adc
div
mov
sub
in
inc
xchg
not
je
packssdw
test
xchg
in
pop
xorb
xor
inc
stos
call
fwait
test
add
sahf
add
shlb
mov
mov
push
lods
dec
pop
jne
xor
dec
pop
xchg
mov
pop
push
fimuls
cmc
and
mov
add
outsl
mov
fdivrl
sarl
int
push
inc
sbb
in
mov
mov
xchg
push
out
outsl
popf
cmp
mov
push
cmp
jmp
or
je
in
mov
mov
xchg
adc
fst
xchg
push
jbe
popa
xchg
mov
sbb
scas
lret
pop
pushf
fnsave
inc
fwait
mov
xor
pop
inc
loop
fs
mov
icebp
mov
sahf
test
loop
nop
les
shlb
imul
cs
std
aaa
bound
jne
enter
adc
mov
dec
mov
fdivs
fnsave
mov
mov
loope
lret
test
ficoms
ffreep
ss
ret
add
ds
push
lock
xchg
sub
push
jp
sub
xor
push
lret
mov
mov
mov
mov
scas
ret
dec
lret
sbb
dec
sbbb
mov
daa
std
loopne
aad
cmpsb
out
in
lret
addl
out
jg
push
push
or
fs
cltd
stc
xchg
jp
xchg
out
lea
ja
adc
mov
fsubs
into
mov
daa
lret
popf
adc
rolb
dec
jmp
ret
xor
sub
cmp
imul
adc
sub
movsb
pop
xchg
pop
call
mov
mov
lahf
bound
and
test
loop
dec
iret
inc
ljmp
push
insl
mov
out
cmpsl
and
mov
scas
mov
sub
mov
sub
inc
jl
adc
enter
mov
sub
sbb
push
mov
stos
mov
shll
out
les
test
cmp
xchg
adc
icebp
adc
sub
mov
dec
mov
or
cld
xchg
cmpsb
repnz
call
xchg
xor
jmp
jnp
lcall
je
shl
out
jne
test
ret
push
mov
cmpsl
mov
pop
pop
jmp
inc
push
inc
rclb
cld
cmpsb
mov
cmc
dec
cwtl
xchg
mov
popa
sub
or
pop
loopne
cmp
and
and
sbb
call
insl
popf
jecxz
dec
cwtl
les
ss
addl
xor
dec
mov
aaa
add
test
xchg
icebp
test
pop
adc
out
popa
adc
mov
sti
adc
lods
xlat
xchg
pop
test
hlt
cmp
cmp
xchg
xchg
or
cmp
out
dec
add
jg
add
imulb
loope
fs
cmp
cmp
pop
inc
cmp
movsb
in
dec
lea
dec
lea
lcall
iret
cmp
fs
bound
xchg
pop
pop
sub
ja
cmc
or
fiaddl
int
arpl
pop
fnsave
aad
pop
push
xor
xor
dec
iret
xor
mov
or
insb
lods
mov
sub
mov
push
xor
push
lea
gs
int
scas
js
sbb
montmul
cmpsb
inc
xor
testl
add
inc
fiaddl
fbld
inc
fwait
inc
mov
adc
cmp
in
enter
and
repz
jecxz
or
xor
xchg
dec
push
mov
lret
dec
icebp
call
xchg
and
in
pop
out
loopne
fisubl
ret
mov
ret
das
pop
mov
and
jbe
repz
mov
xchg
jb
sbb
pop
xor
fmull
sbb
scas
repnz
stc
add
mov
mov
insl
enter
cld
pusha
dec
cltd
lods
stc
pop
dec
and
out
xor
cmp
test
fildll
mov
pop
test
mov
pop
cmpsl
and
inc
movsl
mov
jno
push
out
xorl
leave
add
insl
dec
sbbl
psubw
mov
hlt
or
jne
adc
or
add
les
push
into
cmp
test
stc
popa
jl
mov
mov
outsl
cmpsb
xchg
dec
pop
and
dec
jnp
xor
hlt
xchg
xchg
xchg
pop
jnp
and
jmp
xor
xchg
jo
and
out
rcll
jg
out
shll
int3
mov
push
data16
xchg
nop
and
sub
mov
hlt
rcrl
inc
sub
insb
popf
inc
inc
std
xchg
out
das
and
fbstp
pop
push
popf
repnz
jg
mov
pusha
ljmp
pop
enter
adc
test
scas
js
out
insb
imul
add
pushf
inc
idivl
mov
test
xchg
add
sbb
test
mov
cmp
xchg
punpcklwd
mov
adc
incb
pop
ret
jp
out
outsb
int
cmp
cmp
xchg
pop
adcl
int3
scas
xchg
notl
push
dec
lods
out
ret
lds
loop
mov
pop
push
push
sub
adc
lods
outsl
jno
cmp
ja
les
js
jne
stc
xchg
push
jbe
or
scas
sbb
push
mov
pop
mov
dec
fadds
lcall
movsl
mov
adc
jbe
sub
nop
in
int3
stos
out
sbbb
pop
sahf
lods
shr
inc
inc
adc
adc
mov
sbb
mov
pop
inc
jl
pop
mov
dec
icebp
sub
repnz
jno
mov
mov
pop
add
mov
cmp
jne
shlb
xor
les
cmc
or
fcoms
test
aas
push
pop
or
imul
mov
sbb
int3
nop
jecxz
iret
subb
loope
daa
mov
inc
push
xchg
mov
pop
popa
inc
xchg
int3
shll
adcl
ds
stc
mov
mov
in
enter
icebp
imul
push
in
mov
les
aam
sti
outsl
addr16
inc
cltd
mov
fisubl
rcll
pop
arpl
xchg
loope
scas
mov
loope
xlat
movsb
iret
sbbb
popf
fidivs
rorb
sarb
int3
xchg
jbe
scas
in
mov
xor
mov
xor
or
cmp
in
in
add
gs
dec
inc
and
addr16
adc
mov
iret
jns
cmp
inc
mov
rolb
pop
std
mov
fisttpl
or
add
push
mov
xchg
sti
fwait
insl
add
mov
std
sbbl
jg
daa
out
lea
into
inc
push
test
push
pop
pop
dec
loop
test
fsubr
and
mov
sbb
enter
pop
test
movsb
pop
push
mov
push
sub
sbb
sahf
mov
push
jmp
add
mov
clc
adcl
jmp
aad
xchg
ljmp
std
xchg
lea
dec
ljmp
mov
sbb
xor
es
pop
sbb
inc
lods
inc
push
neg
push
mov
leave
mov
repnz
fmuls
xchg
test
clc
jne
movsl
outsl
fstps
loope
xchg
pushf
aam
movl
nop
cmpb
dec
jle
outsl
or
mov
stos
sub
ret
nop
outsb
cmp
pop
fisubs
fucomi
mov
stos
shrb
subl
sahf
xlat
pusha
insb
pop
and
sub
stos
bound
pusha
mov
sbb
adc
sub
sbb
add
repnz
ror
push
lahf
sub
enter
jnp
js
iret
out
daa
mov
call
push
dec
mov
pop
shll
popa
mov
xor
adc
sub
iret
inc
cli
cmovne
scas
repz
lds
jg
lret
sub
xor
pop
xchg
lods
xor
jo
into
jl
mov
in
or
mov
pop
scas
imul
dec
jb
mov
xor
mov
cmp
shll
gs
dec
xorl
lahf
and
cmc
outsb
inc
imul
push
mov
sub
fwait
stos
mov
pop
mov
add
mov
adcl
xor
ss
push
inc
sti
movsb
das
xchg
test
fdivp
and
jecxz
js
mov
add
sbb
mov
xor
xlat
cwtl
push
inc
or
rclb
jge
fidivrl
das
lahf
jno
loop
lods
loop
inc
addl
ss
sbb
out
std
sub
insl
mov
jge
imul
shr
jae
enter
pop
test
cs
out
push
inc
cmp
sahf
add
jns
and
clc
mov
in
jb
pop
cmp
sbb
add
test
sbb
mov
data16
adc
mov
mov
xor
fnsave
cmc
mov
lods
mov
mov
sahf
mov
je
stos
dec
rcr
rcrl
cmp
lods
lods
mov
push
jmp
push
jnp
repz
inc
pop
add
mov
insl
dec
cs
jecxz
push
jns
xor
inc
fwait
adc
xchg
dec
add
adc
push
xorl
ds
mov
inc
out
int
cwtl
push
add
add
test
sub
pop
movl
cmp
push
aam
aad
jp
mov
leave
fdivs
decb
inc
cwtl
subb
int3
aaa
iret
das
scas
ja
int
sbb
inc
and
push
out
xor
repz
stc
xor
mov
mov
xlat
dec
cld
inc
mov
lods
pop
in
cs
ror
adc
push
ljmp
mov
inc
idivb
lret
loopne
mov
ss
cld
push
push
int
ljmp
add
or
jle
sub
stos
scas
jmp
push
inc
mov
test
cmp
and
cmpsb
pop
jbe
stos
inc
test
jnp
repnz
adc
and
ss
test
xor
popl
push
outsb
inc
cmp
jnp
jl
imul
jno
lods
leave
ss
not
sub
and
and
cwtl
jp
push
cwtl
xchg
pop
push
or
push
sub
fisubrl
pop
jae
dec
fistpl
sbb
stos
mov
lods
leave
xor
xor
mov
cmp
cmc
jae
sbb
hlt
and
stos
aas
fdivp
ret
xor
shlb
xchg
enter
jle
mov
cltd
hlt
fisttpll
push
mov
push
in
mov
cmp
sbb
jl
mov
mov
adc
cltd
loope
in
outsb
cmp
push
insb
popa
jae
arpl
ret
mov
test
test
into
fists
or
ja
movsl
nop
test
mov
sub
das
dec
dec
negb
leave
je
in
shlb
dec
mov
sub
notl
sbb
push
and
lcall
popl
in
out
cmp
fwait
add
adc
lods
cli
cmpsb
add
loopne
daa
test
ljmp
inc
addl
les
ja
aad
xchg
pop
dec
lcall
sub
stc
ja
inc
loope
lds
push
addb
repnz
lds
daa
rolb
xor
xchg
scas
into
add
mov
rcrb
imul
int3
add
jo
or
inc
fsubrp
mov
js
outsb
lods
loopne
cmp
js
mov
mov
inc
xchg
mov
sbb
je
test
mov
mov
pop
inc
adc
jo
cmp
out
pop
push
cmp
inc
iret
fwait
and
das
inc
cmp
outsb
xchg
pop
mov
adc
cmpl
shrb
or
add
rcrl
repz
arpl
out
movsb
call
mov
fistpll
xchg
mov
mov
stc
mov
aas
pop
inc
movsl
stos
roll
mov
hlt
loop
pop
sbb
fwait
mov
pop
cmp
mov
pop
cmc
pop
lahf
sub
xchg
add
mov
sub
js
push
loopne
jp
pop
stc
daa
mov
sub
inc
cmc
or
daa
sub
div
ret
and
aaa
aas
push
sbb
cmp
test
movsl
jae
or
lret
cs
sub
xchg
lahf
mov
hlt
mov
xchg
out
inc
lahf
cmp
adc
push
mov
push
iret
out
clc
cmpl
mov
stos
mov
shr
sub
cmp
aam
jp
jg
and
mov
stos
cmpsb
into
jp
iret
mov
lret
mov
or
mov
and
push
rorb
mov
out
fstpt
sbb
outsl
mov
je
loopne
das
fucom
mov
cmp
xor
pop
xchg
mov
std
push
imul
int
push
repnz
jns
pop
or
xlat
pop
pop
dec
das
pop
xor
dec
mov
xor
sub
jae
gs
sub
subl
fistl
xchg
mov
les
cld
mov
or
sub
sub
jecxz
aam
loopne
and
movsb
into
dec
add
inc
clc
enter
xor
push
push
rorb
out
hlt
fildll
cwtl
inc
pop
mov
dec
test
repz
popf
xor
stos
fwait
daa
data16
insl
inc
int3
rcrl
push
pop
sub
cmp
xchg
cmp
pop
stos
add
stos
push
sbb
andl
push
push
scas
dec
aad
xor
sub
test
mov
cmp
dec
mov
jno
cmpsb
mov
jecxz
sub
in
mov
xor
inc
cmp
pop
lods
mov
push
or
lret
xlat
ljmp
popf
rorb
sbb
imul
test
int
jle
and
fdivs
pushf
ficomps
int3
addl
or
jmp
inc
pop
sub
lcall
sub
adc
and
movsl
sbb
cmp
je
or
push
mov
popa
aaa
mov
shrw
push
clc
out
imul
fwait
es
or
testb
fucomi
lods
filds
lcall
loopne
in
rclb
mov
lea
sbb
inc
outsl
and
icebp
mov
inc
cmpsl
cmp
into
mov
sbb
mov
leave
sar
push
stos
mov
testl
test
xor
inc
iret
adc
xlat
pop
and
pop
jbe
inc
adc
pop
mov
insb
xchg
jno
jmp
lods
popf
mov
sbb
dec
inc
cmp
push
mov
lahf
stos
out
es
mov
add
rcr
lret
and
adc
xchg
xchg
inc
mov
jecxz
jl
iret
mov
cmpl
push
jl
and
orl
scas
insb
mov
or
in
xor
addr16
lock
sbb
mov
add
pop
ret
cld
outsl
push
jl
in
inc
ret
aad
jno
xor
mov
leave
mov
push
out
sub
imul
frstor
js
dec
stos
mov
jns
jb
pop
mov
mov
aam
push
nop
mov
add
add
divb
lahf
add
adc
cli
xchg
fcomi
xchg
call
leave
xor
pushf
and
and
xlat
shlb
push
leave
adc
xchg
lcall
adc
mov
and
lahf
mov
jecxz
aaa
dec
lcall
sbb
mov
sub
inc
lea
ret
pop
mov
outsl
movsl
bound
testl
outsb
stc
xchg
mov
outsb
gs
fsubrs
sbb
loope
push
cmp
js
lds
push
das
dec
rol
mulb
mov
int3
outsl
cmp
dec
or
out
add
mov
lahf
sbb
aam
xor
or
jno
shl
mov
icebp
movsb
mov
xchg
mov
movsb
dec
sub
adc
mov
pop
roll
dec
xor
jecxz
jnp
jbe
mov
pusha
in
stc
xchg
inc
lea
ret
jbe
xor
daa
xchg
ficoml
sub
lahf
lret
xchg
sbb
fstpl
mov
inc
sub
aaa
movsl
lret
jo
aas
mov
mov
lods
adc
imul
add
icebp
inc
cs
outsl
pusha
dec
ret
xor
insb
insb
imul
insl
sub
loopne
and
adc
in
test
sub
pop
add
je
in
or
js
add
shl
jbe
sbb
push
cli
popf
popa
dec
fs
jmp
fistpll
lret
xchg
push
push
xchg
mov
ret
popf
inc
aam
push
rorl
sbb
cmp
sub
popf
adcb
aad
das
push
and
add
addr16
insb
add
add
imul
stc
push
addr16
cmp
xchg
push
xchg
wrmsr
mov
inc
adc
push
push
mov
add
pusha
xchg
shl
sahf
sub
dec
in
pop
lea
sub
mov
or
pop
and
inc
adc
enterw
push
inc
cmp
lock
lret
add
in
in
into
lock
pop
es
inc
loop
mov
pop
icebp
hlt
setb
je
int
adc
cmpsl
mov
pop
push
ss
jo
sbb
pop
xor
inc
push
fwait
push
insb
mov
and
jmp
popa
mov
in
loope
sahf
add
dec
sbb
pop
lcall
mov
push
pop
lock
fwait
popa
pushf
das
inc
mov
lock
mov
sbb
jo
mov
icebp
push
sub
cs
test
jnp
popa
lds
rol
aam
pusha
mov
loope
cs
mov
shlb
xchg
fwait
inc
adc
lods
xchg
xchg
adc
pop
out
mov
and
std
or
ljmp
dec
dec
mov
inc
inc
inc
mov
lock
leave
adcb
push
inc
push
imul
iret
xor
mov
mov
leave
jnp
test
push
inc
mov
loop
stc
es
popf
add
push
stos
mov
int3
fstl
cmp
insb
push
mov
movsl
xchg
incb
push
mov
push
clc
loope
xchg
jmp
test
imul
xor
test
mov
data16
adc
insb
mov
enter
in
mov
lods
cmp
jo
inc
leave
stc
jo
fisttpl
jg
pop
ss
mov
lea
xchg
mov
gs
mov
push
es
nop
jo
push
cmpsl
insb
loopne
sahf
mov
loop
cmp
mov
sub
and
xor
jge
lea
push
pop
pop
jbe
xchg
std
in
inc
sub
loop
movsb
or
push
or
shlb
shlb
fsubr
aas
or
mov
adcb
das
icebp
jb
push
mov
inc
in
sub
repz
imul
fisubrl
inc
lcall
int
jge
rorl
notl
jo
mov
shll
jmp
shr
xor
nop
loop
mov
or
mov
mov
cmp
shlb
pop
in
mov
adcl
push
aad
outsb
cli
sets
xchg
and
loop
adc
dec
pop
push
jns
pop
ja
mulb
in
xchg
cmpsl
mov
les
aam
out
and
std
inc
inc
or
inc
push
adc
adc
pop
cmp
push
add
loop
leave
movsb
in
sbb
sub
shlb
inc
dec
mov
add
sub
adc
jp
fcomp
or
xor
fcompl
je
cmpsl
cli
push
sbb
pop
push
int3
xor
aam
sahf
in
cmp
insb
inc
in
cmpsb
js
jae
ret
add
pop
dec
adc
ret
scas
fisubrl
out
lods
addr16
xchg
cmp
aam
jae
lret
sbb
sub
xor
push
jb
mov
lea
insb
xchg
aaa
mov
aam
jge
sbb
sub
inc
or
cmpsb
jl
aas
pusha
mov
dec
fisttps
std
xchg
mov
hlt
lds
xlat
scas
scas
into
daa
push
lret
or
cs
sub
dec
lea
std
sub
xchg
and
bound
in
lods
lahf
jnp
sub
insb
or
test
rcll
lds
js
cli
add
push
pop
pop
outsl
jl
mov
pop
bound
jb
jb
icebp
mov
sbb
or
popf
movsl
jne
fs
rorl
add
int3
dec
cmp
call
xchg
sbb
push
pushf
fstpl
and
hlt
xor
int3
cltd
call
pop
xchg
insl
xlat
push
dec
rclb
cs
dec
cwtl
xchg
pop
cli
mov
xchg
xor
pop
inc
mov
dec
push
add
mov
sbb
daa
loopne
add
jecxz
imul
jl
roll
jns
jns
int
xchg
sbbb
out
imul
dec
movsl
imul
imul
cmp
cltd
imul
xorb
aaa
jecxz
pop
xchg
dec
pop
fstl
lahf
and
push
stos
add
mov
adc
loop
mov
inc
inc
insl
mov
jg
int
cli
aas
in
out
fs
bound
cs
arpl
sbb
out
stos
andl
adc
lods
cmp
cmp
mov
cmp
xor
sub
cmpsl
fsubrl
fidivrl
cmc
jecxz
push
fidivl
fidivrs
out
add
cmpsb
ret
xor
aad
jno
and
push
je
adc
push
loop
je
inc
in
das
stc
int
jp
add
and
sbb
ret
adc
pop
mov
aas
cld
loopne
lds
insl
add
fidivrl
jmp
inc
lahf
test
xor
ds
mov
dec
lock
push
cmpsb
sub
pop
xor
fs
loop
incl
dec
xor
mov
cs
outsb
push
insl
cmpsb
in
subb
dec
imul
popa
mov
les
and
scas
mov
les
lods
add
push
sbb
dec
push
xor
insb
jp
cli
jo
ds
jo
movsl
popl
jle
sub
movsl
pop
stc
int
dec
scas
sbbl
ret
jmp
pop
lods
or
mov
add
jo
push
test
cmp
jle
rcrb
push
cli
pushf
out
scas
cmp
cwtl
cmpsb
push
or
cmpsl
repnz
xor
mov
repz
add
push
cmp
out
mov
cs
repnz
testb
mov
push
je
jnp
jo
or
js
sbb
inc
icebp
push
rol
mov
ret
pop
inc
or
cmpsb
out
sti
leave
ja
andb
push
jae
mov
sbb
push
cli
mov
cmpsb
xor
xchg
int
mov
jnp
push
repz
dec
or
cli
xor
mov
inc
insl
out
pusha
in
pop
and
add
lcall
jne
cltd
cld
pop
imull
jg
js
mov
lret
jbe
es
cmp
mov
fisubl
sbb
jnp
lret
fidivrs
xchg
jne
and
adc
test
add
add
rorb
test
icebp
mov
sti
xchg
adc
in
std
mov
mov
je
pop
xor
xchg
sahf
ljmp
cmc
push
mov
sahf
dec
insb
test
pop
lret
xor
in
sbb
push
pop
mov
das
sahf
jl
xor
inc
mov
mov
cltd
xor
xor
ret
test
dec
xchg
mov
sbbl
mov
sub
xor
hlt
xor
aaa
cld
fbstp
jbe
mov
jle
loopne
mov
xchg
lahf
mov
out
aaa
clc
xchg
cmp
out
sub
and
repz
jno
sbb
mov
and
sub
int3
mov
lods
push
pop
icebp
inc
mov
loop
stos
push
int
cli
aas
mov
fucomi
xchg
inc
mov
es
sub
fisubs
icebp
fsubrl
mov
fistl
popf
mov
jno
addb
inc
inc
stc
mov
mov
pop
sub
pusha
xor
mov
insl
lcall
imul
sub
pop
les
clc
inc
add
ror
inc
insl
int
stos
cmp
into
pusha
xor
in
jbe
push
push
push
in
mov
jns
xor
loope
mov
xor
sub
mov
pop
lods
mov
cmp
mov
pop
aaa
mov
jge
insl
inc
jns
lret
int
jae
int3
mov
pop
jbe
pop
cs
mov
dec
adc
ja
scas
lods
je
sbb
mov
gs
push
xor
mov
mov
inc
xlat
das
sahf
push
test
orb
sarb
xor
imul
fucomip
repnz
popf
cmp
jo
add
sbb
pop
sbb
je
inc
jp
push
xor
nop
fwait
push
in
rorb
xor
xlat
repz
cmpl
cmpsb
inc
push
push
mov
and
dec
cmp
inc
and
add
adc
in
xchg
lahf
aad
cmp
js
movsl
jo
sbb
pop
add
dec
enter
add
fcmovne
mov
sub
ret
enter
xlat
cli
ds
daa
pmuludq
cmp
ret
and
inc
adc
clc
xchg
cmpl
push
xchg
sbb
mov
sbb
test
cmovno
push
enter
pop
call
jbe
dec
test
out
add
sti
pop
lret
xchg
cmp
dec
stos
stc
sbb
inc
pop
pop
xorl
dec
and
push
loope
and
cli
xor
jle
sbb
xchg
sub
outsl
test
testl
adcb
push
scas
xor
sbb
jl
sub
popa
dec
push
scas
loopne
pop
jae
dec
movsb
movsb
and
xchg
cli
cmp
mov
ja
sbbb
out
adc
push
add
stc
or
pop
imul
xchg
cmpsl
push
xchg
jmp
lea
xor
ret
push
out
or
dec
adc
and
ljmp
jnp
dec
push
push
call
and
or
adc
inc
pop
enter
jbe
xor
cmp
mov
repz
in
push
jno
jae
adc
fnsave
js
ljmp
fsubrl
aad
imul
sbb
mov
mov
dec
xchg
push
fcompl
pop
imul
lock
mov
sub
sbb
cmp
add
shl
daa
scas
scas
aad
sub
pop
fs
and
or
icebp
mov
cmp
xor
std
arpl
push
xchg
or
insb
pop
out
shr
cmp
pusha
add
test
inc
jge
cltd
pop
aas
sbb
and
outsb
xchg
jle
mov
int3
divb
add
test
inc
sar
mov
int3
nop
test
cli
and
in
dec
jns
add
mov
xchg
sbb
dec
xchg
clc
inc
sub
mov
in
cli
push
ja
jle
cld
cmpsl
mov
jge
pop
mov
fwait
pop
xor
mov
mov
mov
pop
mov
mov
fucomip
mov
cmc
test
stos
jo
fwait
xor
add
xchg
mov
xchg
ret
rol
sub
sub
movsb
nop
add
jg
and
xchg
lret
icebp
sub
xchg
jb
enter
les
add
sub
and
push
aad
fnstcw
pushf
pop
imull
jecxz
stos
shrl
aas
icebp
daa
imul
repnz
and
ds
imull
test
jo
ja
fwait
cmpsl
jg
mov
and
or
mov
push
popf
dec
xorl
sub
insl
xor
mov
loop
xor
icebp
inc
adc
bound
lret
and
leave
imul
cmpsb
mov
xchg
or
lods
adc
inc
pop
pop
push
es
std
std
out
dec
ret
ss
push
sbb
mov
xchg
icebp
loop
sub
clc
test
add
or
sbb
rcr
fwait
rorl
push
dec
gs
xchg
xor
int3
pop
adc
dec
rorl
imulb
aam
dec
jmp
stos
loopne
fbld
les
sbb
ret
mov
xchg
xchg
adc
mov
cmp
clc
or
adc
call
or
clc
test
jecxz
lds
add
stos
or
arpl
cmpsl
jns
mov
xor
popf
dec
es
push
icebp
inc
pop
orb
adc
mov
divb
test
jle
call
es
cld
into
enter
lea
push
lret
inc
xor
mov
cmpb
popf
push
cld
sub
mov
ret
mov
cwtl
pushf
nop
pop
test
js
lds
leave
imul
sgdtl
fs
mov
push
mov
sbb
int
mov
add
pop
xor
lahf
dec
adc
aas
lcall
or
aaa
repnz
jmp
mov
call
popf
mov
lret
pop
pop
fcoms
mov
xchg
mov
add
in
lods
xor
addr16
cli
gs
pop
mov
loopne
dec
inc
add
mov
jns
jp
mov
push
cli
mov
xchg
jae
mov
pop
sbb
mov
jnp
out
cs
inc
mov
sub
dec
jo
in
daa
stos
xchg
xchg
cmp
push
inc
sub
nop
sub
dec
negb
dec
pushf
popf
jo
ret
or
cs
clc
and
inc
enter
out
add
mov
fisubs
loop
mov
jp
push
in
test
clc
rorb
jge
or
pop
xlat
enter
push
popa
nop
push
xchg
add
negl
push
xorb
fldenv
add
ljmp
pop
adc
int3
xchg
icebp
insb
lods
jne
ja
lods
inc
push
aad
push
xor
or
inc
sarl
imul
add
mov
in
das
sti
add
cmp
or
fcoml
fdivrl
insl
sub
cmpsb
in
inc
daa
sub
mov
movl
xor
sub
lods
outsb
adc
mov
mov
mov
adc
arpl
outsb
fsubs
aaa
popf
inc
adc
dec
sub
and
sub
js
aad
pop
mov
adc
aam
or
cmp
nop
jp
sti
fistpl
cltd
fdiv
or
sub
dec
jns
sub
mov
into
lock
in
dec
dec
pop
scas
aaa
inc
cmp
pop
sub
ret
xlat
add
push
hlt
mov
lds
jb
in
repnz
clc
cmp
push
cmp
enter
std
out
push
sbb
daa
popf
repz
dec
xor
cmp
cli
pop
adc
inc
push
push
mov
inc
adc
lods
add
jb
push
jnp
xor
insb
loop,pn
mov
stc
mov
push
movsl
or
cmpsl
mov
fs
movsb
movsl
call
mov
inc
push
xchg
outsl
xor
cmp
lret
cmp
mov
dec
stc
repnz
adc
mov
icebp
jne
jne
loop
ficoml
ja
out
pop
sub
fsubrl
pop
notb
dec
add
les
xchg
mov
push
push
sub
addr16
add
outsl
mov
cmp
loop
loope
data16
push
mov
sub
sub
xchg
rcll
out
enter
lods
sub
jecxz
lcall
and
out
test
jae
jecxz
sbb
xchg
and
test
push
inc
cmpsl
sti
jle
lock
stc
add
stos
fmull
jp
pop
scas
test
loop
cmpsl
leave
sub
js
inc
mov
jl
cld
mov
movsb
pop
andb
lsl
scas
insb
std
sbb
sar
adc
cld
ljmp
repnz
clc
in
fistpll
inc
jecxz
scas
sarb
xchg
out
insb
inc
lea
push
cmp
daa
sbbl
mov
xlat
xchg
testl
ror
push
jno
sub
pushf
cwtl
or
adc
popa
sbb
dec
mov
xchg
pop
sbb
fists
pop
cli
ds
mov
addr16
pop
insl
popa
push
movsb
movsl
test
jo
or
xchg
push
jmp
mov
mov
xlat
iret
xor
test
cmp
scas
push
mov
jl
inc
and
xlat
mov
mov
imul
jno
push
loope
daa
js
push
test
ja
sub
cmp
es
je
sub
and
dec
lea
aas
cwtl
ficoml
adc
jae
in
arpl
mov
sbb
jmp
out
ja
bnd
push
jecxz
and
xchg
aas
mov
mov
cmp
jge
hlt
insb
shl
mov
pop
cs
cmp
leave
out
sti
out
lods
rol
movsb
mul
fidivs
repnz
mov
shr
xor
lahf
sbb
fldt
pop
fdivs
outsb
arpl
pop
and
scas
pushf
and
js
mov
jmp
mov
js
lret
aaa
les
inc
ret
adc
das
out
mov
pop
cmp
mov
into
in
adc
push
or
loope
mov
mov
xchg
xor
test
sbb
loopne
cld
ljmp
mov
rol
fadd
lret
push
sbb
in
xchg
mov
mov
jbe
insl
insb
sub
fcomps
cmp
iret
dec
fisttpl
cmc
and
mov
jb
or
lret
add
and
and
in
add
movsb
lret
mov
jno
pop
movsl
test
iret
mov
push
jo
mov
mov
and
icebp
sub
dec
push
adc
call
mov
or
test
bound
gs
xchg
outsl
popf
pusha
sbb
cwtl
dec
mov
out
xchg
push
addr16
clc
fistps
lds
test
mov
sub
faddl
mov
inc
mov
rolb
movsl
and
jbe
xchg
jo
jb
rolb
adc
dec
jge
ds
jne
mov
push
shl
fs
imul
cmp
ss
outsb
mov
hlt
cmc
js
mov
push
or
rclb
cmc
out
dec
push
mov
lds
adc
dec
stos
xor
xchg
or
mov
movsl
iret
push
clc
mov
call
cmp
mov
pusha
mov
ficomps
out
jle
adc
lods
orps
sub
mov
lods
jmp
sarb
and
subl
lcall
cwtl
int3
push
xchg
mov
sub
inc
loope
andb
push
fidivl
fldl
add
inc
dec
insb
das
loopnew
gs
mov
push
jbe
aam
sub
lcall
cmpsb
mov
pop
mov
mov
aam
adcl
std
in
sub
stos
mov
andl
nop
leave
sub
mov
fdiv
mov
movl
loopne
stos
nop
mov
inc
add
push
mov
lds
adc
inc
mov
in
dec
das
shlb
inc
pop
jo
cmpl
movsl
fucomip
sahf
add
xor
rcrl
push
inc
jo
pop
push
daa
and
xchg
pop
cmp
and
or
icebp
pop
test
pop
cmovle
fld
out
and
adc
add
sbb
or
cmc
rorl
cmpsl
insb
aas
rolb
sub
enter
call
mov
push
cs
lods
adc
stc
mov
in
lahf
sbb
or
jge
inc
imul
insb
cli
cld
xchg
xor
inc
jnp
sbb
stos
data16
sbb
mov
mov
cmp
frstor
aas
test
dec
and
or
jmp
mov
jo
test
cmpsb
xchg
pop
inc
in
jbe
cmc
push
in
inc
jge
pop
lds
sub
pop
aaa
cmp
mov
and
outsb
pop
and
rorl
icebp
out
add
lret
aam
mov
aas
jns
push
inc
popf
mov
mov
push
movsb
lcall
pop
cld
jns
fbld
scas
jno
lea
arpl
iret
lret
mov
bound
jns
test
mov
shll
imul
pop
stos
ss
loopne
pop
in
adc
aad
xor
add
xchg
adc
stc
outsb
sti
or
loop
inc
jns
ror
lcall
add
push
push
jmp
xchg
loop
into
test
movsl
jne
jae
pop
aam
cmp
push
or
ficompl
popf
xchg
or
ljmp
loopne
add
xor
movsb
es
test
sarl
inc
lret
loope
or
dec
lods
add
out
stos
stos
push
push
clc
ret
cmpsb
mov
jecxz
jno
mov
rorl
inc
std
mov
sti
jge
nop
ljmp
adc
add
push
or
inc
xchg
pop
mov
push
stos
repz
decb
sub
daa
nop
popf
mov
aaa
or
push
push
pop
movsb
lock
ret
daa
scas
enter
pop
shrb
jnp
fsubl
lea
sub
push
fwait
mov
add
sub
pop
mov
xchg
jecxz
jmp
rolb
iret
sbb
sarl
inc
push
scas
pop
and
mov
mov
cwtl
sbb
aam
push
cs
test
mov
mov
cld
cli
push
dec
aaa
loopnew
bound
jecxz
dec
dec
pushf
stos
xlat
cmp
push
les
imul
sub
popa
pusha
test
adc
fidivs
mov
scas
daa
sbb
mov
sbb
shlb
out
xor
sahf
and
stc
jo
sahf
in
cld
xchg
je
push
fldt
lods
pop
adc
mov
and
pop
insl
mov
pop
adc
stos
pop
jno
in
imul
add
push
lcall
int3
out
sub
xlat
andb
cmpsl
xor
fsubs
adc
outsl
pop
mov
xlat
std
mov
add
idivb
jecxz
fisttpll
popf
dec
fsubl
cmp
inc
into
aaa
lret
or
mov
cmp
lds
sub
clc
sub
sub
adc
repnz
stos
jmp
dec
jns
cmp
cs
mov
lret
movsb
mov
leave
cmp
xor
pushf
cmpb
pop
arpl
xchg
jge
cltd
dec
rorb
hlt
testb
sbb
push
in
sub
ds
aaa
pushf
mov
mov
sbbb
xor
das
int
pushf
xor
mov
mov
jg
and
mov
cmova
fbstp
and
cwtl
fists
repnz
or
sbb
int3
in
xor
shlb
sub
sbb
and
lcall
scas
mov
in
icebp
and
arpl
jg
dec
int
mov
movsb
and
jnp
mov
cmp
push
and
aas
test
mov
into
scas
pop
lods
dec
push
nop
push
cmp
jmp
add
fnstcw
pushf
fisttpll
push
rol
cmp
or
fildll
jns
fadds
sub
pop
or
out
push
add
lahf
and
iret
and
fsts
sub
in
mov
gs
xchg
sub
ja
loopnew
arpl
mov
add
cwtl
xor
rorb
leave
xchg
jg
ret
dec
data16
xchg
out
sub
cmp
sub
call
mov
mov
lea
aam
mov
cli
push
sbb
mov
std
jae
jle
dec
mov
out
cmp
sub
xor
insb
or
rorl
popf
cmp
mov
mov
sub
hlt
adc
insl
inc
jmp
outsb
push
xchg
test
mov
mov
xor
loop
std
hlt
cwtl
mov
rorb
xchg
loopne
mov
out
aaa
inc
xor
lds
jp
push
cmp
mov
mov
imul
push
xchg
stos
or
inc
xor
lds
stos
pop
mov
hlt
addb
inc
xchg
mov
arpl
add
inc
daa
and
cmp
fistps
aas
add
fldenv
sbb
xlat
movsl
jp
pop
imul
loop
xlat
mov
ds
fadds
and
pop
mov
aam
jmp
inc
cmp
pop
int
mov
dec
gs
mov
in
jge
loope
inc
sti
loope
aas
stos
in
imul
stc
mov
int3
pop
push
adc
mov
mov
cmpsl
lret
es
inc
mov
ffreep
or
pop
test
xchg
jb
shrl
jne
cmpl
movsb
or
mov
jae
add
xchg
fcom
push
cmpsb
mov
sahf
and
decl
in
dec
cmp
lret
fs
xchg
dec
outsl
jmp
arpl
call
mov
fldt
or
sub
sbb
int
arpl
pop
les
sub
inc
inc
jle
pop
cli
andl
movsl
or
dec
mov
iret
jnp
jb
xchg
mov
imul
or
rorb
inc
xchg
pop
jo
insl
adc
pop
adc
adc
add
data16
jge
inc
or
add
mov
int3
mov
xchg
fstps
test
sub
in
pop
xchg
xor
addr16
jmp
nop
jp
arpl
dec
sbb
push
or
shl
and
jl
add
push
mov
and
int3
lcall
in
mov
insb
fbstp
push
sbb
dec
rclb
add
add
cmpsb
sarb
clc
cmp
or
loopne
icebp
pop
or
pusha
das
ds
mov
int3
cmpsb
fsts
or
add
popf
test
lods
and
dec
mov
and
shr
mov
je
pop
inc
jp
gs
call
or
push
in
mov
cmc
inc
ss
push
lea
pushl
sub
dec
mov
xchg
stc
mov
or
cmp
cmp
mov
fidivs
ror
inc
xor
enter
add
jb
pop
and
xor
mov
sub
and
add
inc
nop
dec
xchg
jg
out
sub
decb
cmc
push
inc
adc
sub
lret
and
mov
pusha
std
or
repz
lret
lock
ret
xchg
pop
add
cmp
dec
lods
fwait
dec
sbb
out
or
cmc
adc
dec
ljmp
in
das
jle
loop
lcall
int
fnstenv
inc
arpl
mov
ret
fwait
push
enter
sub
stos
outsb
ret
adc
fwait
cmp
pop
mov
stos
in
popa
les
loopne
lds
mov
cmp
add
jne
test
sbb
add
push
std
incb
jne
int
testb
orl
mov
cld
mov
jge
cld
dec
mov
jle
sbb
mov
dec
loop
and
and
cmp
mov
mov
adc
cld
out
mov
andb
fstl
push
outsb
cmp
mov
inc
jbe
fisubs
sbb
imul
cltd
shl
xor
push
shll
rcll
dec
mov
popa
mov
lcall
ror
inc
inc
ds
jns
insl
out
scas
push
jle
popa
pushf
ja
daa
xchg
fldt
mov
movsl
out
sahf
jb
sub
mov
outsl
aas
insl
xchg
test
sbb
stc
add
test
scas
jmp
push
jmp
mov
negb
out
popa
push
xchg
mov
and
pop
xor
rorl
ret
jns
adc
add
sub
js
sbb
cmpsl
std
addr16
addr16
negl
into
push
out
jbe
inc
xchg
scas
lods
cwtl
mov
jno
mov
adc
arpl
or
vpmulhw
mov
cmp
adc
sub
adc
xor
inc
inc
add
out
inc
testb
mov
ljmp
xchg
sbb
fsubp
mov
jecxz
push
inc
fistl
imul
sbb
and
stos
rcll
cmpsb
cltd
sbb
jbe
pusha
outsb
xchg
fldenv
stos
and
or
jg
aam
daa
mov
cwtl
xlat
test
jle
mov
daa
adc
stos
hlt
or
out
sub
loope
adc
divl
dec
mov
test
leave
cmp
mov
jle
add
xchg
inc
int
insl
pusha
repnz
mov
add
xor
orl
lods
push
adc
fdivrs
inc
jae
sbb
out
jo
mov
and
bnd
push
icebp
mov
stos
dec
testl
mov
or
lods
pop
lds
repnz
jg
push
sbb
push
sub
loopne
ficomps
jnp
cmpsb
std
push
or
hlt
lods
aam
jmp
bound
das
ljmp
aam
adc
pop
leave
push
int
fucomp
adc
add
mov
out
or
cwtl
xor
in
and
std
ss
xchg
dec
pop
and
or
rcll
sbb
xchg
jg
rolb
jmp
dec
inc
and
mov
filds
rcrl
mov
inc
sbb
sbb
mov
add
xchg
add
push
lods
pop
pushf
sbb
push
dec
sbb
cld
sbb
stos
je
test
shrl
std
call
clc
stc
mov
xor
scas
les
subb
inc
lret
out
in
hlt
scas
loop
push
popf
pop
stos
js
fs
repz
push
xchg
clc
and
xchg
mov
and
stos
xchg
loope
pop
cmp
sbb
repnz
sarl
push
sbb
into
std
pop
aaa
push
mul
inc
adc
insb
pop
test
mov
movsl
dec
and
cs
sbb
xchg
lods
pop
js
sbb
sub
aam
scas
mov
push
fists
push
fsin
leave
out
xchg
hlt
divb
mov
xor
addr16
cmp
into
cmp
mov
add
aam
repnz
movswl
or
imul
fstpt
inc
mov
les
shll
push
in
push
push
insl
lahf
in
jmp
or
cmp
and
dec
dec
push
and
test
xor
adc
dec
xchg
push
imul
sbb
push
mov
xor
mov
xchg
push
cmp
xchg
shlb
xchg
pusha
mov
push
cmp
lret
flds
add
jp
sti
mov
test
or
push
mov
in
push
inc
inc
xor
fcmovnu
fidivs
lea
xchg
jmp
test
and
xchg
lahf
cmp
mov
ds
adc
pop
cld
jg
addr16
fdivr
or
inc
aam
lcall
jp
pushf
push
adc
pop
lcall
inc
stc
jp
mov
mov
push
mov
cs
pop
lods
daa
shl
out
jle
mov
add
test
pop
add
mov
push
rorb
mov
mov
pop
push
mov
daa
sub
add
in
adc
inc
xchg
shll
sub
add
mov
xor
imul
call
andb
xchg
cmp
inc
xchg
rcrl
or
shl
adc
sbb
mov
push
cmp
sub
xor
ljmp
movsl
lea
push
addr16
rorb
push
arpl
test
cld
mov
xor
dec
sbb
sbbl
cli
inc
inc
push
fwait
mov
mov
cmp
icebp
pop
add
out
aaa
mov
dec
ja
lcall
js
push
ret
out
int
addr16
out
mov
notl
and
jns
sub
push
test
mov
pop
pop
iret
pop
push
jl
stos
sub
xor
cli
jb
adc
fwait
jmp
cmp
scas
jg
addr16
mov
std
stos
dec
dec
lock
xchg
rcr
inc
sub
cmp
ret
adc
add
lea
js
jg
adc
inc
jne
sub
je
xor
leave
xor
dec
js
jle
jae
stos
pop
inc
cmc
and
push
pushf
cs
int3
in
sbbl
sbb
aad
or
jns
addr16
jmp
dec
mov
call
add
cwtl
popa
sbb
push
aaa
jle
sbb
aaa
jle
pop
jecxz
fwait
push
out
jge
xchg
pop
or
mov
iret
mov
push
inc
orl
roll
test
push
rclb
cmp
idivl
mov
loopne
mov
lret
sbb
and
jge
sbb
jle
adc
push
lret
aaa
addl
jge
mov
mov
mov
sbb
fldenv
hlt
int
sti
sbb
sub
mov
push
fists
in
and
dec
stos
mov
jl
mov
and
mov
sbb
popa
hlt
sbb
push
je
out
vmwrite
insb
cld
fisubrl
or
cli
stc
jmp
push
mov
test
push
hlt
out
add
aam
leave
add
mov
lea
jnp
pusha
loope
fiadds
xchg
pop
mov
dec
popf
adc
call
cmp
imul
fldcw
xchg
push
adc
enter
rorl
xor
xchg
jnp
mov
pop
incw
dec
jp
dec
mov
mov
jle
leave
sub
xchg
sub
insb
dec
ljmp
repnz
and
add
fdivl
sahf
incb
dec
int
mov
mov
dec
dec
mov
xor
push
insl
mov
mov
or
sub
ror
fstpl
arpl
fsubrl
lret
adc
mov
xlat
or
mov
adc
inc
sbb
and
push
out
sahf
pop
ljmp
jns
xchg
mov
divl
dec
aad
pushf
pop
pop
div
push
and
push
adc
lock
sbb
mov
iret
cmpb
and
test
cmpsl
repz
dec
ret
call
cmc
dec
xor
cmp
xor
outsl
dec
gs
mov
sub
inc
les
sahf
inc
lahf
mov
mov
cmp
adc
add
cmpsb
fucomip
jmp
jmp
mov
iret
cs
inc
loopne
jbe
cld
sbb
stos
mov
xor
aas
adc
add
es
test
dec
xchg
adc
dec
inc
inc
jecxz
lock
in
adc
fsubl
imul
clc
pop
lods
mov
dec
pop
jno
add
xchg
push
push
scas
mov
aam
inc
andb
roll
stc
das
loop
inc
dec
jnp
mov
adc
aas
fldenv
xor
adc
cmp
loopne
mov
and
test
outsb
mov
dec
mov
jns
inc
iret
mov
jp
inc
jns
aad
mov
fdivrp
aaa
inc
push
inc
sbb
dec
lock
mov
jge
dec
lcall
mov
dec
push
cwtl
rcll
mov
je
test
punpcklbw
vpavgb
loope
cmc
jle
andps
cmp
outsl
xor
xchg
test
push
cmp
or
inc
push
shl
xchg
iret
mov
subl
cwtl
push
push
or
shll
push
mov
adc
xor
adc
bnd
inc
add
pop
or
jle
fimuls
cmp
fadd
lds
adc
sarl
adc
ret
and
pop
and
inc
cs
sub
push
push
mov
lods
clc
mov
insb
nop
xchg
std
mov
test
mov
imulb
repz
repz
sub
add
in
push
fidivrl
shl
xor
jp
adc
xchg
lods
int3
pop
dec
push
fwait
ds
jl
int
push
push
xchg
cs
imul
mov
cmp
push
cmp
jge
stos
inc
and
gs
or
inc
and
cld
call
insl
iret
clc
outsl
das
xchg
sub
or
imul
aaa
sub
cmp
ja
mov
push
lret
in
lock
into
mov
es
sti
popf
inc
gs
xor
dec
or
xchg
cmpsb
inc
lret
test
jmp
pop
jne
dec
inc
inc
sbb
push
in
mov
inc
gs
xor
push
or
sub
pop
adc
out
mov
sub
jne
mov
xchg
scas
dec
ss
xchg
xchg
or
lret
mov
push
xor
jmp
loop
addr16
cmp
adc
in
js
sti
dec
xor
jge
arpl
adc
mov
jno
nop
int3
jl
fldenv
popa
sub
mov
scas
out
cmpsl
sub
inc
dec
mov
adc
push
idiv
dec
mov
cmp
hlt
or
mov
wrmsr
adc
data16
dec
jge
adc
aas
iret
xchg
aam
lock
rclb
hlt
push
mov
push
pop
repz
negl
stc
xchg
repnz
jne
dec
jmp
rcl
ret
jge
cmpsb
insl
subb
pop
add
imul
push
adc
punpckhdq
and
dec
cmpsb
nop
les
out
push
pop
test
test
add
sub
lahf
cmpsl
mov
mov
add
and
mov
nop
lock
arpl
pop
mov
ds
mov
mov
sub
dec
fwait
hlt
vmovlpd
stos
leave
pop
mov
call
jnp
mov
sahf
les
pop
jno
mov
jmp
pop
sub
fs
scas
sbb
xchg
jns
push
cli
and
loopne
push
out
or
dec
and
iret
scas
rcrb
xchg
jo
push
or
cwtl
cmp
xor
xchg
jae
xor
cmc
sub
mov
add
iret
push
gs
divl
lret
pop
cmp
fsts
jg
insb
divb
sahf
xor
and
out
icebp
xor
icebp
ljmp
nop
pop
sbb
dec
int
mov
jne
addb
cmc
mov
xor
psrlw
inc
cmp
pop
mov
cli
js
stos
and
pop
sbb
int
fstpl
cmp
sub
inc
aas
jp
fistpll
inc
fistps
cld
das
xchg
push
outsl
mov
and
mov
jae
test
adc
mov
imul
inc
push
mov
cmpsl
icebp
outsl
sbbl
xchg
cmp
stos
ja
ret
je
in
xchg
into
test
movswl
jno
sub
in
sub
pop
andb
out
add
jecxz
in
jg
mov
dec
ja
xchg
pushf
pop
push
inc
inc
sti
pop
data16
sbb
nop
addl
in
sbb
mov
arpl
or
sbb
push
loopne
xchg
test
inc
andl
and
out
sahf
test
test
pop
jne
mov
outsb
cmp
push
cltd
adc
aad
push
xchg
add
mov
lahf
lcall
ds
in
out
addr16
lods
fisubrl
test
imul
stos
mov
adc
inc
out
mov
or
outsl
mov
pop
and
arpl
pushf
push
adc
pop
or
rcrb
cmp
cmp
push
jp
lock
outsb
in
mov
add
mov
xchg
push
jmp
pop
dec
aaa
jp
mov
mov
mov
cltd
xchg
scas
dec
mov
mov
push
xchg
mov
mov
xchg
mov
out
xchg
outsb
push
sbb
push
cli
in
or
cmp
sbb
cs
pop
cli
mov
sbb
xchg
pop
xchg
jbe
lock
push
fistps
stos
ja
add
mov
stos
xchg
loop
test
and
aad
mov
hlt
push
in
mov
je
add
add
scas
pop
xchg
mov
inc
stos
imul
mov
xlat
xadd
sbb
cwtl
repnz
adc
scas
sti
cmp
fs
les
imul
inc
ds
dec
cmp
fadds
and
add
shll
adc
js
mov
les
add
adc
cmc
dec
and
mov
out
pop
or
pop
xchg
xor
jbe
adc
sub
dec
jns
inc
mov
xchg
loop
cmpsl
vandnps
ret
xor
add
jp
inc
aad
cmp
movsl
mov
stos
mov
xchg
scas
addr16
xchg
out
or
mov
pop
out
fsubrl
mov
inc
jg
sbb
mov
icebp
faddp
push
out
or
repz
dec
adc
or
mov
je
shrl
dec
shl
leave
push
mov
cmp
mov
dec
pusha
mov
push
mov
push
mov
jge
test
div
xchg
dec
cmp
xchg
aas
jg
add
dec
lods
jne
addr16
xchg
mov
adc
shlb
insl
gs
mov
mov
dec
adc
jp
inc
push
push
add
mov
add
mov
imul
in
push
inc
rorb
push
rorl
add
xchg
adc
push
in
mov
outsl
stos
jne
pop
adc
hlt
dec
add
sbb
fidivrs
sub
js
fcmovu
addb
mov
jnp
jnp
add
and
and
xchg
lahf
je
inc
push
mov
inc
mov
adc
mov
fcmovb
cmp
xor
les
fistl
push
mov
ljmp
movsb
push
imull
rcrb
fs
mov
xor
pop
dec
lea
ljmp
cmp
dec
notb
ljmp
out
jle
imul
inc
or
out
jl
inc
addr16
mov
popf
mov
ret
sbb
mov
mov
push
jnp
dec
test
gs
enter
push
cwtl
dec
scas
sbb
mov
mov
outsb
dec
insb
fsubl
std
cmp
cld
xchg
jno
mov
in
xchg
loopne
loop
xor
call
inc
outsl
push
mov
jbe
movups
mov
out
imul
jnp
jne
ljmp
lds
cli
xor
mov
dec
cld
push
jle
rorb
inc
into
xor
incl
int3
sar
insb
fs
pop
lea
push
ror
mov
adc
inc
sbb
dec
cmp
sub
inc
ret
pop
lahf
subl
stc
clc
cmp
dec
popf
and
mov
addr16
sbb
daa
in
push
lahf
or
out
push
mov
fisttps
cs
inc
jle,pn
shll
fbstp
xor
aad
mov
lret
dec
out
ficoml
push
mov
addb
clc
push
gs
in
ja
imul
sti
jnp
fsubrs
insl
imul
jno
repnz
sub
mov
xor
sub
into
add
xor
push
es
pop
xor
mov
cmp
pop
lcall
mov
sub
dec
jle
push
lret
leave
arpl
popf
push
pusha
testb
adc
leave
push
popf
imul
nop
dec
dec
mov
repz
test
out
jb
in
mov
es
and
inc
fs
adc
sbb
ret
roll
inc
lds
dec
mov
or
mov
clc
jmp
jp
mov
cli
jo
hlt
ds
aad
imul
or
out
gs
nop
mov
imul
push
and
mov
sbb
push
test
leave
into
icebp
mov
pop
lods
adc
cmpsb
or
loope
mov
out
mov
cmpsb
jb
fnstenv
stc
js
mov
add
adc
jmp
mov
repz
shl
mov
jo
jne
hlt
mov
mov
fs
xchg
jecxz
call
push
sub
or
stc
inc
xchg
dec
push
mov
jo
out
pop
inc
fildl
add
sbb
insb
es
popf
ja
data16
out
aad
imul
jp
adc
dec
inc
xlat
mov
or
or
xchg
push
or
data16
jge
push
loope
mov
push
jl
xchg
pop
xchg
je
fiadds
mov
xchg
xchg
xor
repnz
and
loopne
clc
mov
mov
sub
jp
add
cmp
call
push
sub
in
cli
push
testb
jb
xchg
xor
das
ret
adc
pop
xchg
fistps
sub
repz
icebp
cmc
clc
rclb
insl
mov
es
loope
lret
pushf
out
xchg
xchg
mov
mov
lret
inc
inc
sbb
es
nop
xchg
movsb
ret
ja
loop
rclb
and
fnstenv
push
jne
push
inc
cmp
xchg
jo
jge
push
push
jecxz
xchg
inc
pop
mov
nop
out
dec
dec
in
scas
mov
mov
je
ds
cs
repz
xor
xchg
sub
xchg
mov
inc
xlat
sbb
mov
xchg
jmp
aad
xor
xchg
mov
push
fildll
mov
insb
xor
outsb
jne
push
mov
repz
enter
mov
sub
cmp
xchg
outsb
out
outsl
or
nop
push
inc
cs
jnp
pop
and
dec
cmp
decb
loop
stos
sti
aam
mov
scas
gs
sbb
push
ret
icebp
outsb
das
out
test
es
sbb
repz
jne
adc
in
popf
xchg
xor
add
arpl
fcmove
iret
aad
add
push
xlat
xor
jnp
es
les
sub
dec
scas
jno
mov
cld
pop
cmp
cmp
scas
push
mov
adc
rol
dec
adc
cmp
mov
dec
xlat
adc
xor
add
lods
fistpll
xor
and
in
push
adc
mov
std
pop
xlat
out
pop
xor
icebp
enter
aad
outsl
out
in
int
add
test
in
aaa
mov
lret
addb
jle
mov
add
jmp
shll
jecxz
xor
fcmovu
loopne
call
stc
jp
pop
adc
xlat
repz
mov
pop
mov
xchg
push
add
movsb
pop
push
sub
mov
or
das
testb
pop
repnz
xchg
mov
mov
sahf
in
mov
adc
rol
mov
rol
stos
sti
icebp
and
cld
dec
cmpsl
cmp
and
jns
jg
jae
les
call
sub
dec
sbb
test
cmc
fcmovbe
push
cmpsl
xchg
dec
repnz
sub
push
inc
adc
jmp
mov
adc
stos
pop
xor
ret
jb
stos
ficompl
inc
jns
jno
dec
sub
fistpll
or
jg
stc
and
shrb
inc
xor
and
ds
ds
jp
scas
or
out
insl
inc
inc
sbb
jl
add
clc
int3
insl
nop
push
test
cmp
mov
jae
orl
inc
mov
xor
dec
jno
out
dec
ret
mov
add
add
imul
push
inc
fs
iret
jle
inc
and
ret
test
xor
cld
in
stc
clc
pop
xchg
dec
notb
das
and
iret
mov
xchg
pop
sti
rorl
fwait
or
imul
fcomps
loope
push
rorb
cmp
incl
stos
lahf
cmp
sahf
jg
adc
xchg
imul
adc
insl
incl
std
xor
movsb
jns
inc
ret
adc
ret
in
adc
mov
pop
xor
lods
mov
fsubs
xlat
xchg
sahf
xor
xor
mov
shr
lods
notl
pusha
dec
sub
cmp
sbb
andl
xor
push
daa
inc
xchg
adc
lds
ds
test
sbb
cmp
and
dec
mov
mov
call
add
mov
in
nop
addr16
mov
leave
ret
sub
push
mov
dec
mov
mov
dec
hlt
ja
and
cmpsb
adc
test
mov
repz
push
sbb
repnz
comiss
subb
js
pop
push
cld
ret
pusha
cld
pop
inc
jge
add
dec
ds
push
mov
cmpsb
lea
outsb
ja
xor
push
lods
aaa
inc
dec
fisubl
jmp
mov
mov
ss
mov
push
mov
rcll
mov
add
mov
outsb
xchg
in
mov
roll
call
jbe
adc
lea
pmuludq
or
mov
cs
lods
test
inc
inc
js
das
mov
outsl
fs
lcall
xchg
je
test
add
cld
aad
mov
imulb
gs
hlt
mov
mov
stos
adc
push
push
and
push
inc
add
cli
shrb
jae
stos
inc
add
les
inc
out
in
push
jg
adc
xlat
movsb
mov
lret
jp
sbb
cmpsb
outsb
xchg
cs
lea
mov
pop
in
and
daa
add
push
daa
dec
push
shll
les
cs
mov
lcall
jp
jecxz
roll
cmpsl
dec
enter
mov
mov
push
jg
jmp
jp
push
arpl
adcb
sub
std
pusha
cmpsl
cwtl
mov
lcall
sbb
loope
lods
aam
mov
fisubrs
jl
dec
mov
add
jne
repnz
adc
cmc
jnp
or
adc
xchg
gs
outsb
lock
inc
pop
repnz
rcrb
jg
arpl
dec
movsl
push
or
scas
negb
mov
dec
mov
push
out
inc
xor
aaa
outsl
insb
mov
cmp
imul
jmp
jne
xlat
mov
negb
aas
loope
addr16
popa
add
lret
dec
mov
pop
fiaddl
mul
test
jmp
jg
or
stos
inc
xchg
fidivl
lahf
hlt
in
out
aam
int
repnz
rcll
lods
and
xchg
pop
popf
stos
cs
inc
jbe
aaa
shll
inc
fdivl
mov
notb
sub
add
loop
xor
and
jno
cmp
cmp
or
shlb
pop
mov
shlb
jae
popf
dec
dec
push
cmp
adc
aad
sbb
xor
mov
sub
ret
gs
mov
out
mov
mov
adc
ret
pop
imul
mov
subb
push
pop
ss
mov
pop
ret
add
repnz
ret
adc
mov
mov
icebp
data16
add
cbtw
ret
pop
push
lahf
popf
les
push
ss
dec
mov
sub
mov
inc
xor
push
lcall
jp
out
negb
outsl
mov
dec
ljmp
popf
clc
and
mov
pop
jne
lar
push
jp
lret
pop
pop
mov
int
popa
mov
push
mov
push
pop
js
jae
add
push
iret
jle
mov
lahf
lcall
jecxz
lret
push
push
fcoml
ret
sbb
mov
xor
repz
iret
push
mov
xchg
ljmp
sub
push
in
fwait
mov
outsb
xchg
pushf
aad
je
xor
cld
icebp
push
jge
jo
es
nop
in
js
mov
and
dec
aam
sub
test
es
hlt
aaa
and
hlt
push
sbb
loop
jae
adc
pop
das
jbe
sub
cmc
mov
jb
cmp
frstor
xchg
add
bound
lahf
mov
std
iret
and
cwtl
jne
sub
adc
and
leave
ljmp
test
xchg
jmp
addr16
push
aad
dec
adc
shrb
movsb
jno
sub
leave
in
xor
adc
mov
aas
flds
iret
mov
mov
adc
xchg
fidivl
and
push
out
scas
push
pop
jo
jmp
andb
std
and
nop
sbb
cmp
mov
sahf
mov
jne
int3
fmul
xor
fs
jp
add
cmp
jb
push
gs
pop
push
xor
repz
pusha
fwait
xchg
lret
mov
loopne
ja
ja
cmp
loope
dec
icebp
loop
test
test
je
pop
cmpsb
sub
jnp
out
push
jb
fcmovbe
mov
and
enter
jecxz
mov
push
je
xor
popf
or
repnz
adc
sbb
daa
push
inc
mov
cmp
sbb
jecxz
aam
or
movsb
imul
mov
jb
insl
xchg
ret
push
call
cltd
jmp
push
jmp
mov
lods
mov
cmp
xchg
sub
imul
std
or
imul
adc
andb
je
sahf
sub
cmp
xchg
lods
push
rolb
arpl
test
jno
out
gs
test
inc
adc
or
push
ret
jb
aaa
inc
mov
cmp
cmpsb
jo
push
arpl
jo
dec
jl
jnp
fcmovne
xor
lds
aad
int3
xlat
je
test
xchg
fstl
or
test
aad
pop
test
lahf
mov
out
hlt
insb
movsl
lock
mov
outsl
je
xchg
and
sbb
test
sbb
mov
sbbb
lea
shr
xor
xor
jg
mov
xor
sbb
cltd
fidivrl
xchg
cmp
pop
mov
icebp
cmp
movsb
or
les
jecxz
fstl
add
push
lds
enter
push
xor
in
pop
mov
repnz
insl
dec
scas
push
subl
out
xor
xchg
push
popf
inc
popa
push
dec
dec
or
test
fstpl
jg
scas
push
mov
mov
loopne
fcomps
xor
shll
loopne
stc
jmp
aam
movsb
jb
mov
js
xchg
stc
add
or
mov
or
std
fdivrl
pop
sarb
cmpsl
cmp
je
xor
mov
jl
jge
xchg
cmp
and
and
jne
cltd
in
call
movsl
lds
xlat
aas
add
add
inc
sbb
and
pop
out
mov
or
ss
xchg
inc
mov
add
pusha
dec
fistps
xchg
inc
mov
push
ds
mov
iret
xchg
insl
pop
mov
hlt
add
add
pop
pop
pop
add
dec
out
mov
dec
shrl
out
mulb
add
clc
push
push
or
or
inc
mov
xor
bnd
sbb
mov
mov
pop
sub
add
xor
jmp
outsb
outsb
das
inc
sbb
mov
dec
pop
roll
dec
sbb
cmpsl
add
dec
and
insb
xor
fldt
es
jp
orl
inc
xchg
and
push
xchg
push
into
shrb
outsl
adc
cmc
sbb
push
inc
xor
mull
std
xor
mov
and
or
push
xor
or
subl
out
sbb
sbb
and
jge
lret
xchg
jo
pushf
lret
xor
movsl
es
ljmp
rorl
jno
sti
dec
loope
push
stc
push
jbe
rcrl
ljmp
jge
fbld
mov
cmpb
sbb
shll
mov
out
nop
mov
fwait
xchg
jl
lock
sub
test
xchg
rcll
hlt
pop
or
sbb
rolb
test
cmp
stos
jne
adc
ret
push
push
xor
pop
sub
div
jno
sub
mov
cmpsb
ret
loopne
mov
mov
je
divl
pop
inc
push
pop
movsl
stos
dec
out
jl
js
ret
pusha
test
push
mov
cwtl
cld
push
lods
xorps
fmuls
sbb
push
add
cwtl
mov
icebp
inc
mov
negl
push
inc
lret
lret
mov
lock
insb
push
frstor
add
lret
xchg
cmp
pop
mov
jge
rol
into
stos
into
mov
jl
sub
push
test
jge
inc
add
xor
stos
pop
cli
add
insl
sete
jl
stos
fwait
aam
pop
es
in
leave
data16
into
push
les
cmp
es
mov
cmp
test
lcall
mov
fldenv
int3
shlb
adc
adc
and
xchg
cwtl
rcrb
mov
daa
idivl
dec
pop
aaa
pop
mov
out
jbe
outsl
mov
incb
lret
sub
int3
mov
data16
movsl
aad
dec
jno
xchg
add
orb
mov
in
in
mov
clc
loop
sub
shlb
pop
or
mov
add
lahf
imulb
pop
cmp
cld
jnp
in
xchg
in
mov
sub
sub
aaa
push
daa
cmpsb
pushf
sub
pushf
leave
test
jnp
out
stos
lahf
push
or
cmc
add
cmp
adc
lret
popa
xorl
lock
fcmovbe
add
int3
cwtl
lock
dec
loope
mov
mov
or
nop
daa
cmp
xchg
into
test
sbb
mov
inc
push
inc
rcll
lcall
pop
push
jb
fisubl
pop
out
aam
dec
mov
pop
notl
enter
push
jge
les
pop
int
outsb
les
in
jmp
mov
adc
imul
lcall
hlt
sub
mov
ret
push
push
xor
add
cld
push
and
inc
das
mov
test
sub
or
bound
push
xchg
sub
enter
jl
and
sbb
cmp
fdivrs
mov
cwtl
inc
pusha
inc
xchg
mov
mov
cmp
inc
dec
lret
pop
mov
insb
inc
je
mov
ret
and
cmp
mov
adcl
es
subb
shll
stc
jno
and
inc
sub
xor
movsb
and
dec
xlat
sbb
add
mov
shr
shlb
sbb
stc
jcxz
jo
jmp
jle
pop
lret
and
movsb
or
jge
scas
cwtl
lds
aad
sub
jo
leave
xor
push
in
sarb
ret
outsb
call
in
xor
mov
out
pop
xor
or
adc
inc
out
or
lea
or
ret
lods
or
or
xchg
in
dec
jp
pop
add
fwait
lahf
fchs
enter
jbe
repnz
sbb
cmp
mul
idivl
test
movsl
mov
stos
sbb
dec
int3
adc
ja
jecxz
jge
dec
mov
jb
dec
sbb
add
cltd
and
sbb
dec
inc
adc
jo
lret
sub
push
jbe
stos
scas
pop
jns
imul
push
pop
pop
ret
hlt
faddp
and
sar
ss
testl
lret
xor
lds
shll
mov
push
dec
and
ret
stc
jg
add
mov
xchg
adc
dec
fsubrl
xor
cmp
stos
sub
cmp
adc
jnp
aad
outsb
shl
icebp
decl
popa
out
dec
add
pop
dec
add
ja
popa
fucompp
xchg
mov
mov
or
subb
mov
stos
cmpsl
shrb
mov
or
aaa
xor
xchg
sbb
add
pop
lods
ficompl
sub
loop
or
pop
cmp
negl
adc
in
xor
cmp
xor
mov
xchg
cmpsl
inc
test
push
stos
mov
je
mov
fbstp
adc
pop
inc
xchg
pop
inc
push
xor
test
add
jl
outsl
sbb
sahf
lret
sahf
outsb
pushf
mov
dec
pop
adc
fimull
cltd
lret
cmp
roll
in
lods
xchg
cld
lods
cs
xor
xorb
cmpsb
xor
add
pop
inc
cmp
scas
in
scas
pop
xor
sbb
jg
in
mov
fwait
ja
pop
mov
repnz
jl
lahf
xor
rcrl
mov
xchg
imul
pop
mulb
into
mov
sbb
scas
pop
ds
sahf
mov
pop
sbb
xchg
push
dec
std
jae
lcall
push
lock
imul
cmc
mov
int3
push
pop
loope
sbb
enter
or
test
push
mov
aaa
shl
jp
xchg
movntps
cs
cmp
mov
mov
pop
stos
xor
test
enter
xor
push
or
mov
xchg
mov
fcmovu
mov
loope
jge
inc
popf
or
cmp
jg
gs
pop
int3
mov
push
xchg
sbb
sub
sub
outsl
xchg
dec
cmp
clc
mov
fldenv
out
fs
popa
adc
aad
inc
jecxz
jne
pop
push
rorl
int3
in
xorl
loopne
inc
lods
out
out
mov
testb
or
lock
outsb
jb
sub
inc
lahf
mov
xchg
lret
push
lret
cwtl
int
jno
fs
dec
aad
shlb
cmpsb
pop
dec
movnti
stos
ss
es
xchg
mov
push
mov
or
add
adc
mov
mov
cmpsl
xchg
xor
ret
mov
mov
nop
aam
or
push
mov
icebp
add
stos
adc
pop
mov
and
push
bound
push
mov
aas
movsl
cmc
das
pop
pop
xchg
xor
out
mov
sub
mov
bound
add
sub
lahf
push
daa
push
adc
adc
adc
pop
aad
push
scas
cs
fisubrl
fwait
ret
cmp
mov
sar
nop
push
test
pop
pop
push
insl
ds
push
scas
rol
cmp
pusha
add
popa
xor
pop
or
jae
pusha
push
cmp
mov
mov
ret
xor
adc
and
repnz
xlat
adc
sbb
and
cmp
sbb
add
mov
push
sbb
stc
aad
cs
push
or
movsb
shlb
icebp
shrl
mov
add
push
mov
mov
add
cwtl
cs
mov
cltd
mov
push
mov
pop
cli
pop
mov
in
insl
in
sbb
xorb
add
xor
pop
mov
cld
push
movsb
leave
ljmp
mov
inc
jg
jo
inc
adc
adcb
in
std
mov
call
rcll
xchg
xchg
imul
es
cs
lock
pop
push
mov
mov
cmp
fidivs
lock
filds
dec
or
rcll
xor
std
xlat
and
mov
cmp
adc
testl
xlat
push
inc
insb
or
jp
outsb
sub
cwtl
cli
pop
add
mov
and
push
add
scas
je
imul
cmc
cmpsl
lret
sub
sbbl
xor
xchg
ss
repz
and
test
or
add
lods
mov
jb
add
xorb
repz
mov
insl
mov
mov
adc
sbb
test
cmpsl
cltd
into
stos
inc
jge
scas
popa
mov
mov
jne
lcall
addr16
pop
xchg
pop
pop
out
mov
xlat
xchg
cmp
scas
enter
xor
test
xor
nop
inc
rorl
mov
dec
sub
fsubl
cmp
call
dec
xor
lods
daa
ja
gs
jne
data16
adc
enter
aaa
jo
inc
ret
push
cltd
push
mov
shll
out
clc
aad
dec
out
cwtl
out
lds
fsts
xor
mov
insl
lds
cld
aas
arpl
jnp
ret
mov
in
rcrb
xor
lcall
cld
add
enter
dec
je
aas
lods
imul
cmc
pop
mov
and
adc
dec
and
mov
xchg
cmp
and
jmp
aad
and
xor
pop
inc
mov
int
adc
push
daa
cmp
test
dec
jp
lea
jl
xchg
es
jl
out
pop
cmp
adc
xor
insl
into
into
ret
in
xor
cltd
adc
inc
xor
ret
rorb
dec
jp
movsl
pop
flds
in
cmp
mov
jno
xor
and
cmpsl
add
add
rcll
mov
add
addr16
sarb
stos
mov
cld
fwait
xor
xor
scas
jo
mov
mov
insb
out
cmp
int
mov
sti
sub
push
jns
icebp
ds
sbb
sub
add
push
pop
xchg
jle
insl
sbb
mov
dec
mov
jecxz
or
mov
pop
cmp
add
sub
inc
outsl
das
jns
icebp
pusha
jl
xchg
xor
dec
fcmovu
xor
movsl
stc
cwtl
mov
push
insb
mov
sti
mov
fdivrl
cs
sub
push
lret
cmp
fstl
cltd
pop
pop
jno
jl
jg
mov
test
fdiv
mov
lods
pandn
lods
ficoms
mov
addb
stos
push
ljmp
stos
mov
pop
pop
mov
test
roll
add
xchg
xor
and
cmp
xchg
push
dec
cwtl
inc
or
push
jecxz
lcall
pop
and
mov
and
loope
sbb
sub
pop
add
add
int3
push
adc
pushf
mov
shll
sbb
aad
rcrl
mull
scas
sub
mov
dec
test
cmp
loopne
ljmp
ljmp
cwtl
rcrb
or
cwtl
int3
lret
out
pop
in
mov
xor
jge
shl
ja
pop
mov
cltd
xor
lret
pop
sbb
lahf
repnz
mov
cmc
lods
movsbl
push
hlt
xor
mov
or
pusha
in
movsb
mov
cmpsb
inc
jno
adc
mov
sbb
xchg
xchg
movb
pop
inc
js
lret
lahf
xor
push
sbb
mov
xlat
cmp
dec
xchg
sub
push
push
nop
cmc
adc
jle
aad
inc
or
mov
aas
in
hlt
adc
mov
fcompl
push
mov
std
sti
mov
std
jbe
add
sbb
js
dec
inc
xor
add
sub
push
sub
cmp
cmc
sti
sub
aas
dec
xor
jns
cmpl
rclb
cmp
jbe
repnz
aad
mov
sarb
dec
jae
cmpsl
add
jo
minps
mov
mov
pop
push
stos
sub
mov
cmpsl
arpl
fbstp
dec
movsl
dec
aaa
push
in
or
insb
cmpsl
pop
pop
scas
adc
ss
pop
sbb
test
and
push
les
mov
push
xor
out
ljmp
mov
xor
lds
out
jnp
les
or
pusha
push
fmul
pop
int3
imul
jg
pusha
sbb
arpl
notl
xchg
movsl
push
aad
scas
sub
divb
scas
jno
pop
stc
adc
fnstenv
test
push
and
shll
test
lds
fprem1
sbb
icebp
inc
dec
and
pop
test
sti
push
xchg
mov
mov
out
fdivr
jp
adc
in
rolb
hlt
rcr
pslld
test
push
mov
sbb
mov
pushf
stos
mov
mov
lahf
shrb
add
push
sbb
jecxz
pop
in
jmp
push
mov
popa
inc
imul
stc
xchg
mov
jp
js
stc
or
or
xchg
jmp
cmp
ljmp
adc
jg
addr16
or
add
test
pop
into
xchg
jno
pushf
xor
loopne
outsl
xor
inc
and
jne
ret
scas
cmp
or
dec
das
loop
sub
loope
xchg
loope
jno
out
mov
lcall
in
add
movsl
loopne
gs
call
push
sub
loope
adc
xor
mov
aaa
loopne
inc
add
aad
jp
mov
mov
sti
mov
repnz
sbb
jns
bound
push
push
jns
shll
cs
lods
xchg
cmpsb
test
add
ljmp
stc
mov
mov
mov
push
cmc
pop
aam
mov
push
imul
sub
mov
dec
mov
cld
hlt
mov
aas
dec
lea
mov
jae
dec
xchg
mov
mov
add
jle
loopne
jecxz
rclb
inc
xor
mov
xor
test
pop
loope
sbbb
xor
fcmovnbe
fistl
add
jns
mov
loopne
jp
mov
xchg
mov
mov
and
das
nop
mov
inc
mov
nop
ret
stos
pop
lea
xchg
imul
adc
mov
fs
xchg
dec
push
in
add
lret
testb
roll
or
loopne
mov
fs
js
xlat
xlat
lea
pop
sahf
dec
sub
sbb
int
shlb
xchg
lods
inc
in
mov
sbb
or
jge
mov
insb
fmul
or
add
cltd
popf
std
insb
mov
out
imul
dec
or
in
sub
es
sub
ret
imul
pusha
and
fnsetpm(287
fsub
rclb
adc
xlat
jnp
sbb
aas
adc
out
fistpl
clc
add
adc
and
or
ds
testb
test
shlb
mov
cs
mov
mov
cwtl
stos
fldcw
pop
in
mov
fadds
adc
dec
cmp
jne
fsubrs
cli
mov
dec
lea
cmp
in
dec
loope
add
lods
rcl
scas
in
mov
std
dec
xorb
in
cli
xor
shl
iret
ljmp
inc
dec
loope
filds
in
adc
data16
sbb
mov
mov
jo
test
mov
xor
push
ret
and
iret
lods
jne
mov
pop
inc
outsb
dec
loope
fs
inc
mov
xchg
cmc
cwtl
std
adc
inc
aas
and
xchg
loop
cmpsb
cmpsl
push
out
rcrl
push
mov
sub
inc
or
lock
mov
mov
loopne
dec
jp
mov
xchg
sarl
cmp
loop
daa
jle
sbb
into
jae
push
and
xor
sub
orb
mov
int3
mov
in
pop
imull
fldenv
or
mov
xor
sub
inc
cmpsb
sbb
push
ljmp
and
lahf
add
clc
clc
adc
ss
fidivrs
gs
ja
xchg
or
ffree
test
pop
stos
test
cmp
push
add
or
inc
jb
cs
orb
push
jg
pop
loop
les
pop
cmp
cwtl
pusha
add
sbb
xor
sbb
pop
jno
dec
dec
add
jg
cmc
inc
enter
and
insl
push
loopne
mov
out
std
sbb
mov
dec
insb
mov
push
les
aam
std
xchg
sbb
gs
int
mov
sbb
jns
jae
roll
lea
jmp
mov
sbb
pop
int3
push
add
jbe
js
jl
in
cmp
mov
mov
addr16
movsl
or
nop
rorb
xor
mov
and
nop
pop
outsb
pusha
ljmp
jmp
push
dec
add
cltd
inc
jne
mov
ljmp
es
sbb
or
and
sbb
js
shll
xchg
leave
neg
insl
adc
mov
mov
addr16
rol
lea
in
add
imul
adcl
lcall
in
push
shlb
movsb
cmpsl
jb
cmp
lret
pushf
scas
xor
xchg
stos
inc
sub
and
xchg
jbe
pop
adc
ficoms
aaa
outsl
xchg
jo
mov
out
fsts
jbe
push
cmp
mov
jno
out
aad
mov
sub
mov
add
adc
inc
dec
xor
lock
xchg
in
call
enter
loope
xchg
ja
js
push
enter
cltd
addr16
movsl
popa
sbb
testl
cmpsl
inc
lcall
bound
cld
jnp
test
xchg
mov
push
jp
or
jle
in
test
cmp
popa
and
cmp
rcl
in
aam
push
cmp
push
es
jns
repz
xchg
nop
mov
ret
mov
insl
add
mul
lahf
data16
xchg
push
xor
repz
lock
repnz
in
stc
pop
cltd
outsb
xor
repz
adc
bnd
aaa
sahf
les
add
pop
lods
sub
cmp
sahf
xchg
or
push
mov
mov
adc
add
jecxz
xchg
fisttpll
add
lret
xor
call
test
pop
stos
fstps
testb
rorb
push
jae
dec
fisttpl
cli
jg
mov
mov
insl
fs
addl
push
cmp
xchg
add
mov
pop
sub
xchg
dec
cmp
add
push
mov
outsl
fs
pop
fs
sarb
push
xor
orb
roll
and
xchg
inc
lods
or
fstpt
mov
fdivrl
scas
sbb
jecxz
mov
and
jne
scas
idivl
rcll
rcl
out
clc
cmp
jb
add
subl
pop
sbb
push
std
mov
lret
push
aam
nop
push
les
outsl
bound
pop
mov
movsb
imull
add
mov
cmp
popf
fs
outsl
pop
push
inc
and
jmp
dec
or
dec
data16
jecxz
inc
fists
fs
or
andl
push
in
mov
inc
sbb
mov
jne
sub
pushl
mov
add
pushl
inc
mov
lds
push
xchg
mov
fdivr
adc
sbb
jb
psrlq
pop
lods
repz
push
cmp
fstl
add
lods
push
xchg
loopne
and
xor
aam
jae
inc
ret
add
adc
jno
outsl
fdivl
and
and
stc
aam
jge
jns
mov
mov
jp
setne
lock
xchg
push
std
cltd
or
inc
iret
add
and
fcompl
pusha
xchg
ljmp
or
pop
or
aas
lods
test
xchg
test
in
xchg
mov
leave
repnz
mov
adc
cltd
add
jne
test
in
stc
add
popa
add
adc
mov
pop
jae
stc
fdivs
push
mov
aaa
sub
shl
fisubs
mov
add
imul
mov
lock
cmp
or
hlt
pop
add
add
negb
sub
dec
lcall
mov
loope
or
outsl
sub
inc
mov
cmpsl
in
cwtl
push
fldt
mov
mov
loopne
xchg
pop
movsl
call
mov
cmc
adc
cmpsl
cli
sbb
xchg
rdpmc
xor
std
shll
pop
xor
xchg
sub
cmpsl
mov
and
mov
sub
not
fidivs
and
sar
fcompl
jle
pop
mov
insl
pop
cmp
ja
orb
or
idivb
ds
rcll
fsubs
sbb
xor
out
hlt
dec
int
jnp
pushf
sbb
les
ret
or
aaa
mov
into
pop
or
xor
xchg
and
stos
in
lret
cmp
cmp
sarl
int
inc
sbb
sarl
or
aam
jg
jo
or
add
ret
fcoml
pusha
and
fsts
ljmp
push
clc
dec
fbstp
icebp
pop
dec
sbb
fsubr
add
sti
xor
sub
fisttps
stc
inc
lock
xchg
call
sbb
repz
icebp
xchg
cltd
dec
dec
mov
pushf
ror
imul
aad
stc
sbb
jge
push
add
mov
add
cli
and
sub
pop
sahf
push
lock
pop
push
mov
lock
mov
mov
push
jno
jle
pop
pop
call
repnz
cwtl
les
orb
cmpl
push
mov
xor
add
jle
adc
sti
ret
jp
sbb
sbb
call
xor
daa
ret
aas
ret
test
leave
loope
lds
rcrb
es
push
xchg
icebp
dec
aas
pusha
add
push
fimuls
pop
push
pop
add
sub
mov
jp
jno
es
mov
loop
push
ret
inc
incb
push
and
adc
xchg
xor
push
mov
sbb
pop
pop
dec
add
push
iret
xchg
imul
sbb
int3
cmp
pusha
sahf
or
adc
push
lods
sub
cmp
cmpsl
mov
in
loopne
xor
scas
add
mov
xchg
mov
jle
dec
jg
pushf
pop
fdivs
mov
clc
mov
rorb
subb
mov
or
dec
pusha
int3
pop
insb
inc
push
mov
lods
dec
inc
bound
add
ss
sahf
inc
inc
test
sub
icebp
std
mov
jecxz
fdivs
xchg
cmpsl
call
mov
xor
lret
mov
or
xchg
inc
mov
sbb
hlt
pop
fildl
mov
mov
imul
xchg
shll
sbb
or
sub
push
jecxz
cmpb
mov
test
xor
insb
ficompl
enter
adc
push
pop
push
mov
stos
jbe
lret
cmp
and
xchg
mov
pop
sti
mov
pusha
pushl
adc
dec
push
imull
lds
sbb
push
lods
xor
and
ficomps
aam
add
lds
inc
in
std
lret
lret
sub
mov
rorb
sbb
sbbb
cli
or
xor
pop
jge
pop
inc
sub
mov
shlb
bswap
cmpsb
inc
mov
rcl
pushf
imul
addb
fidivrs
xor
fwait
inc
popa
shrl
jne
sahf
mov
test
lock
jns
adc
ljmp
and
jno
jecxz
add
push
xchg
jl
dec
out
jle
cmpsl
mov
xchg
inc
sub
loopne
mov
daa
push
iret
sbb
jo
aad
aaa
movsl
sahf
add
lea
addb
subb
dec
xchg
ja
mov
stc
or
mov
mov
shl
fdivr
je
decb
ja
dec
ds
jno
cs
mov
ret
push
jo
lret
out
movsl
xchg
lea
jne
xchg
inc
daa
ds
bound
lret
cmp
inc
inc
mov
sub
jecxz
stc
out
lods
inc
cli
push
xchg
jnp
inc
sbb
cmpsb
or
mov
out
inc
mov
xchg
pop
cmp
test
loopne
lret
and
stc
notb
xor
push
fwait
adc
inc
sub
fs
jge
add
pop
and
mov
pop
ret
sbb
pop
pop
dec
inc
cld
or
sahf
or
cwtl
cmp
pusha
js
mov
lds
mov
lea
test
lea
rcr
out
daa
scas
cmp
mov
sahf
clc
adc
test
xchg
jl
push
out
test
jg
clc
or
pop
mov
push
leave
out
scas
add
shlb
rclb
mov
pop
ds
stos
or
mov
sub
gs
sub
jbe
aad
imul
inc
mov
jecxz
lds
arpl
repz
fmuls
sub
scas
mov
icebp
call
imulb
enter
adc
flds
sub
enter
ret
mov
stos
cwtl
mov
xchg
xchg
push
pop
xchg
or
fdivrl
pop
dec
test
inc
out
pop
mov
xor
popa
loopne
dec
push
lret
mov
jno
testl
int3
ljmp
and
fildl
mov
mov
in
incl
popa
cmpb
mov
frstor
dec
jp
mov
mov
loop
pop
mov
dec
xor
ljmpw
push
and
enter
clc
adc
lock
mov
or
adc
push
jge
dec
xlat
aaa
cld
xor
and
cmp
stos
lcall
ds
fisubrs
cmp
int
xchg
je
dec
lret
xorl
jmp
mov
jae
mov
add
sub
push
cmp
imul
pushf
cmp
daa
ret
pusha
es
leave
sub
xchg
leave
dec
popa
pop
jnp
das
xor
adc
rolb
jmp
jae
mov
xor
push
xor
cmp
mov
push
enter
cwtl
dec
out
xorl
addr16
mov
fldt
in
negb
push
sub
sub
fstpl
daa
and
lret
xchg
sarl
and
jns
loop
sub
cld
pusha
ret
jmp
add
push
and
mov
in
lock
dec
je
imul
fadd
cmc
hlt
mov
aad
inc
cmp
enter
pop
scas
rclb
add
cs
sbb
addr16
add
cmp
push
fcoms
pop
add
xchg
clc
inc
sahf
add
pop
daa
add
out
push
xchg
xchg
insb
xchg
mov
jg
loopne
stc
out
xchg
out
add
cmp
lret
enter
shll
cmc
scas
add
inc
lahf
fmul
repz
cmp
sub
scas
mov
insb
sahf
daa
rorl
xchg
cmp
arpl
or
loope
jo
add
and
dec
test
xor
push
mov
push
dec
push
pop
cmp
fildl
mov
gs
out
jmp
sbb
es
dec
push
sub
mov
mov
lods
hlt
bound
int3
fdivl
pushl
mov
cli
sub
ret
mov
jle
or
jo
sbb
sbb
xchg
aas
mov
sahf
bnd
incl
loop
lods
add
shrl
jbe
fnstsw
inc
xchg
jne
in
ret
jmp
mov
in
add
xlat
adc
mov
mov
pop
and
jmp
and
add
aaa
sbb
lret
lods
lods
cmc
cmp
fbld
in
imul
jbe
addr16
imul
lret
mov
fisttpll
and
inc
mov
inc
or
aam
dec
xor
iret
lcall
xlat
cmc
cs
mov
mov
popf
sub
sbb
test
mov
addl
and
cmp
int
cmp
mov
push
shll
mov
out
push
push
insb
pop
inc
push
out
sub
push
and
mov
jbe
das
into
rcrb
sarb
sbb
scas
jmp
andl
sbb
popa
cmp
jne
sbb
pop
cmpsl
ret
clc
shlb
fs
loope
es
mov
daa
mov
push
mov
pop
lret
icebp
mov
scas
pushf
mov
mov
sahf
sub
push
jge
mov
mov
gs
lret
pop
shlb
leave
test
pop
adc
mov
leave
jge
arpl
in
aas
xchg
dec
mov
xchg
pop
je
inc
dec
movl
adc
das
sahf
jle
movsl
cwtl
jae
fists
jge
jnp
mov
cmpsl
jae
repnz
push
jle
rol
dec
lcall
ds
xchg
dec
pop
adc
push
inc
push
pop
fnstsw
cmp
test
xchg
push
cmp
lds
mov
daa
jle
fstl
lds
sti
sbb
inc
adcb
xchg
mov
jecxz
adc
test
xchg
or
mov
cmp
outsb
and
testl
loop
mov
ss
popf
movsl
xor
pop
xor
cs
mull
lret
hlt
scas
std
mov
xchg
sbb
stos
test
inc
into
ffree
xor
outsb
mov
mov
and
dec
mov
dec
xchg
or
or
divl
jbe
in
pop
movsl
das
lock
imul
stc
push
xchg
jle
aam
mov
out
aad
inc
addr16
sbb
es
and
inc
rol
stos
sbb
scas
stos
ja
sbb
xchg
mov
jbe
aas
add
jecxz
push
inc
stos
aad
adc
in
aam
ja
fbstp
or
xor
xlat
push
cmpsb
roll
xchg
iret
and
jnp
das
shlb
cld
mov
popa
mov
int3
cmpsb
adc
das
jns
outsb
lock
test
testl
and
ljmp
sub
test
mov
xchg
inc
jnp
in
push
pop
imull
jb
sahf
mov
mov
xchg
mov
sub
jnp
lods
orl
pop
pop
dec
pop
push
ret
jo
pop
sbb
dec
fucomip
rcrb
stc
cmpsl
data16
and
mov
mulb
sub
repz
add
stc
mov
add
pop
lret
gs
fnstsw
insb
test
adc
cltd
ret
mov
in
adc
pop
aad
push
test
sahf
vcmppd
adc
sbb
jmp
lock
push
add
jne
arpl
xchg
xchg
loope
iret
inc
or
inc
andb
fstl
jl
addl
ret
xor
das
xor
cld
sub
ss
cmpsl
popa
fwait
push
jp
data16
rclb
sbb
ss
shrb
test
pop
cmp
ret
and
outsl
lret
leave
adc
mov
xchg
les
jns
or
call
sub
xor
pushf
push
and
testl
pop
enter
jns
jnp
xchg
int3
ret
mov
dec
fwait
dec
sub
leave
addr16
lret
or
pop
js
icebp
rcrl
add
adc
mov
in
ljmp
jns
rcrb
pusha
cmc
push
dec
sub
push
push
ret
pop
mov
imul
cmp
push
imul
pop
sbb
aad
xchg
shll
dec
lret
jg
and
pop
dec
aad
mov
xor
sbb
push
movsb
jne
ja
fdivs
jl
out
mov
lret
push
pop
in
mov
ljmp
cs
and
add
sub
loop
inc
cmpb
out
test
movsb
imul
push
ds
sbb
int3
lret
sti
aam
dec
sbb
das
int
and
out
cmp
out
imul
out
in
aas
jmp
insl
xchg
in
mov
push
push
ja
test
and
fdivr
cmp
and
mov
ret
mov
or
adcl
ljmp
dec
push
jae
and
mov
xor
fnstsw
std
xchg
mov
fdivr
nop
ret
stc
jmp
stos
nop
pop
pop
push
push
sbbb
xlat
push
stos
jne
cmp
sarb
pop
cmpsb
cmp
pop
xchg
imul
pushw
lods
push
push
pop
sbb
inc
dec
lea
std
add
dec
cmp
xor
cmp
sbb
inc
jns
cmp
push
lahf
iret
inc
mov
jb
sbb
sub
test
lahf
jnp
cmp
outsl
pop
aam
jb
leave
outsl
pop
sbb
popf
xchg
mov
push
add
inc
and
pop
jle
inc
sbb
xchg
mov
mov
sub
out
add
xor
cmp
and
sbb
or
mov
adc
lret
sub
cmp
fs
clc
mov
jge
lock
loop
add
mov
hlt
mov
and
pop
sub
leave
adc
test
mov
insl
xchg
add
mov
and
jecxz,pt
mov
mov
icebp
out
push
loope
and
cmp
add
mov
cs
dec
imul
sar
mov
cwtl
mov
pop
or
xor
popf
push
int3
xchg
in
xchg
outsl
int3
fidivs
lcall
push
mov
push
inc
mov
les
movsb
sub
fildl
je
loope
sub
notl
push
jbe
hlt
sbb
push
outsl
out
xor
dec
mov
mov
imul
dec
and
mov
adc
mov
adc
insl
mov
dec
bound
cmp
fiaddl
sub
das
or
xor
xchg
cmpsl
mov
push
xor
push
das
adc
sarl
dec
mov
insl
cltd
call
jae
push
cmp
loope
outsl
mov
xchg
cmc
and
daa
dec
pushf
movsl
mov
mov
data16
leave
and
sbb
out
xchg
sbb
add
fwait
loop
add
sbb
and
aad
ficompl
sbb
mov
xor
mov
sbb
fstpt
aam
pop
vpsraw
std
dec
ret
psllw
mov
cmpsl
mov
xor
jns
and
sbbl
push
inc
ds
xchg
repnz
imul
adc
pop
mov
cwtl
pop
push
rcrl
mov
stos
dec
add
test
cmp
inc
mov
aas
ss
pop
adc
les
inc
sbb
and
mov
in
sub
rcrl
icebp
pushf
sarb
jne
jne
lock
xchg
push
sbb
scas
out
shll
mov
arpl
xor
outsb
cmp
loopne
add
stc
js
cmp
pop
xlat
bound
ficomps
xchg
stos
imul
mov
sub
dec
xor
xor
aam
and
test
sti
adc
jb
inc
ret
out
daa
int
fstpt
ss
jo
inc
iret
pop
xor
mov
push
jmp
insl
fsubr
out
sub
aam
sbb
in
mov
sub
cmp
mov
sub
fnstcw
jae
push
sbb
pop
jno
add
sti
mov
int
sbb
jg
sub
jno
adc
jbe
cmp
sbb
movsl
mov
inc
pushf
dec
into
push
dec
ret
jnp
xor
add
pusha
inc
xlat
call
mov
test
fs
je
in
test
imul
decl
inc
ss
imull
repz
mov
add
xor
cmc
xchg
push
leave
sub
mov
enterw
pop
cs
int
xchg
push
sahf
jbe
test
sahf
push
insb
out
push
lret
adc
mov
push
jg
clc
add
xchg
add
or
in
pop
push
xchg
push
sbb
xor
sarl
adc
or
stc
data16
insl
or
dec
lahf
push
popa
in
fstpl
inc
imul
mov
sti
adc
add
loop
mov
cwtl
sbb
mov
inc
inc
daa
cli
adc
mov
sub
jge
xor
cmp
mov
mov
adc
in
xchg
call
test
sub
fistl
jnp
leave
sti
mov
arpl
ljmp
adc
push
jo
ljmp
shll
mov
shr
mov
push
dec
lret
int3
adc
sub
test
cmpsl
clc
push
call
fwait
mov
popa
sub
cmp
inc
pop
sub
cmp
adc
rclb
inc
sub
out
adc
bound
push
imul
sub
jle
nop
mov
js
daa
jnp
clc
mov
sahf
nop
faddl
sar
push
iret
jmp
in
test
cli
inc
cmpsb
add
fmull
jo
push
pusha
jp
lock
mov
add
lret
add
push
jnp
push
mov
sbb
fsts
add
js
dec
scas
add
addr16
jmp
mov
mul
enter
sub
lret
jle
enter
sbb
push
sub
lea
sub
nop
lock
jl
dec
fwait
rcrb
add
jns
sahf
xchg
mov
jne
mov
jb
cmp
mov
pop
mov
inc
sub
aas
xchg
adc
pushw
scas
lods
clc
mov
adc
mov
add
inc
and
pop
sub
aaa
push
in
add
iret
cli
cmp
jnp
shl
nop
jns
lock
scas
popf
pop
lret
push
jns
repz
enter
ja
out
inc
fs
adc
loop
dec
adc
enter
je
mov
rorb
jnp
mov
rcll
loope
cmp
sub
mov
jne
xchg
mov
or
mov
dec
divb
xchg
popf
aas
stos
cmc
mov
xchg
sub
popf
mov
push
cmp
xor
mov
js
jmp
in
mov
in
pushf
arpl
jb
sbb
andl
cmp
mov
inc
sub
sbb
loope
jle
aad
fwait
add
inc
arpl
out
iret
mov
add
insb
inc
or
push
mov
pusha
outsl
and
or
test
cmpsb
xor
push
mov
pop
dec
testb
jno
lods
icebp
test
add
xor
mov
mov
lock
cmp
or
xchg
inc
pop
cmp
mov
cmpsb
rclb
fsub
loopne
fsubl
inc
inc
dec
mov
add
les
fwait
adc
test
stos
je
xor
lret
call
mov
jle
mov
xor
cmp
jns
sbb
cli
aaa
or
imul
or
push
or
cmpb
sbb
dec
push
scas
dec
or
lcall
jne
pop
xchg
stos
jmp
jmp
add
pop
mov
inc
fwait
fs
add
test
lret
out
cli
arpl
lock
psllq
jns
inc
and
rcl
es
push
lea
ret
mov
into
repnz
or
sbb
lcall
mov
pop
xchg
pop
inc
dec
in
mov
fiadds
sub
in
into
pushf
int
jns
into
jno
dec
les
pop
sub
jp
stc
mov
adc
fwait
mov
mov
pop
xlat
hlt
outsb
inc
bound
pop
mov
shr
test
gs
aas
fstl
fiaddl
lds
hlt
dec
fs
sti
xchg
sbb
sub
subb
fsub
sub
and
mov
cmpsl
popa
mov
jecxz
jg
imul
imul
inc
repz
adc
in
sbb
jl
push
shlb
vmwrite
bound
mov
push
sbb
mov
test
imul
push
iret
inc
xor
sahf
adc
scas
aam
or
jno
pop
enter
repnz
cli
cmpsl
mov
add
jnp
xorl
xchg
in
push
sti
xchg
cmp
pop
aas
xor
shl
mov
sbb
jl
xchg
dec
push
dec
xlat
loop
sbb
movsl
dec
jns
jo
nopl
sub
sub
sahf
dec
mov
inc
imul
xlat
fs
adc
call
inc
jg
popa
cmp
mov
jno
movsl
pop
rorl
into
gs
push
pop
aas
lods
or
sbb
cld
pop
jp
pop
xor
xlat
push
lcall
xchg
shl
pushf
push
adc
adc
pusha
adc
and
mov
pop
push
inc
add
mov
mov
inc
aaa
sahf
out
add
push
fstpl
bound
fcoml
or
sbbb
cmc
and
mov
bnd
sbb
stos
pop
rorb
stos
pop
pop
pop
out
xchg
and
jmp
add
idivb
std
out
lds
fsubs
ss
iret
es
scas
push
xchg
push
je
repz
or
dec
lds
xor
xchg
jnp
jp
sti
push
pop
fisubrl
popf
subb
outsb
mov
loopne
insl
dec
pusha
test
jp
add
or
add
loope
shrl
dec
cmpsb
jecxz
sub
xchg
sub
mov
sub
cmp
stos
mov
loopne
outsl
rorb
dec
sbb
jb
addr16
jmp
inc
xor
jbe
and
fdivrs
xchg
ret
lock
push
popf
call
pop
ldmxcsr
outsb
loopne
sub
test
pop
ficomps
push
cs
mov
aad
lods
inc
scas
jmp
fcoml
cmpl
and
ss
loopne
inc
inc
inc
testl
lods
mov
addb
jp
mov
and
lods
in
or
inc
stos
js
and
pop
mov
inc
mov
or
xor
lahf
int
test
push
adcb
mov
xchg
xchg
es
scas
lock
xor
daa
cmp
shl
xchg
add
mov
fiadds
mov
jbe
push
inc
sub
lcall
fnstsw
add
pop
push
jnp
pusha
adc
mov
cmpl
jo
sti
adc
mov
sub
jne
std
in
aas
jno
inc
insb
adc
cmp
and
adc
pop
mov
mov
lods
orl
xchg
jae
jg
mov
inc
xor
mov
in
or
mov
dec
int
add
add
xchg
ret
sarl
mov
or
or
pop
dec
xor
inc
add
push
pop
loopne
dec
xchg
inc
iret
cmpsb
fcoml
cmc
add
xlat
and
aam
divl
arpl
loopne
mov
jae
cmp
pop
insl
add
outsl
cmpsb
pop
pop
jns
inc
cmpb
popf
jmp
jno
andb
iret
add
test
adc
loopne
xor
sbb
adc
fwait
xor
loopne
pop
subb
jne
fsubrs
adcb
ret
lret
test
mov
xor
loop
inc
and
xor
pop
fucom
mov
in
sub
int3
mov
fmulp
sub
add
loop
testb
stc
push
push
mov
cmp
cmp
pop
or
pusha
subl
fistl
add
aas
or
lcall
out
out
xchg
jbe
inc
cmp
cmpsl
test
js
xchg
rcrb
sbb
xor
dec
test
leave
stos
in
call
pushf
jno
imull
insl
mov
imul
in
cmc
dec
add
cmp
mov
aas
mov
mov
dec
and
out
adc
cmp
adc
mov
nop
int3
divl
fdivrl
mov
cmp
and
and
jno
ss
xchg
lods
iret
sub
fwait
pop
fistps
filds
leave
jp
test
inc
sbb
mov
sub
sub
pop
sarb
push
pop
inc
test
mov
sbb
mov
jne
mov
sub
push
jnp
scas
mov
outsl
daa
and
lods
je
adcl
clc
mov
mov
mov
nop
xorl
subb
sbb
mov
xchg
xor
stos
mov
pushf
xor
xchg
adc
jp
cmp
call
repnz
fldt
cmp
enter
sbb
ret
adc
jge
ficoml
psrad
leave
fadds
cmpsl
mov
jle
xor
test
xchg
pop
push
cmp
aam
sahf
xchg
and
repz
mov
cltd
push
rorl
in
push
int
into
jno
mov
aas
push
imul
and
call
lea
clc
sub
sbb
jecxz
inc
push
jge
add
xchg
jg
jge
fistpll
jle
cmp
mov
mov
adc
bound
je
sbb
rcrb
orb
push
xor
outsb
sub
xlat
mov
js
sub
mull
ret
xchg
aaa
es
dec
add
lcall
and
adc
mov
xchg
repnz
jmp
fisubl
lahf
shrl
cmpb
mov
inc
pop
inc
repnz
cld
test
fsubl
xchg
aas
iret
jmp
mov
cmp
add
mov
shll
xchg
fadds
rclb
mov
adc
push
inc
pop
bound
push
mov
popf
ljmp
sub
outsb
scas
adc
imul
scas
xor
in
stos
xor
mov
inc
shlb
cmpsb
mov
das
out
mov
dec
xchg
xchg
jnp
lods
test
or
in
mov
add
iret
adc
sti
mov
dec
outsb
mov
ljmp
jg
ss
inc
call
dec
mov
sbb
jbe
xchg
and
xchg
cwtl
andl
mov
add
cmpb
or
add
and
or
fildl
dec
nop
jno
xor
xchg
sbb
jp
jno
mov
cmp
ret
mov
inc
js
mov
mov
outsw
sar
int
jo
xchg
sbb
mov
int3
scas
hlt
push
adc
mov
mov
ja
jnp
sti
cmp
rclb
stos
popf
bound
rcrb
adc
and
xor
lods
andb
pop
pop
and
sub
sbb
dec
jmp
pop
addb
xchg
xor
mov
mov
xchg
ret
mov
sub
mov
imul
push
jmp
scas
mov
ret
lret
lods
push
dec
pusha
adc
cltd
sub
lea
lcallw
loope
mov
inc
and
sti
jbe
mov
icebp
xor
dec
packuswb
rcr
cmpsb
lret
xchg
sub
in
push
ret
jg
aad
adc
mov
decb
loop
add
rorb
xchg
jg
mov
xchg
scas
dec
stos
sub
sbb
popf
lock
push
stc
int3
iret
jmp
mov
or
push
xlat
in
lret
loop
mov
jnp
jae
jnp
mov
pusha
or
push
ret
pop
jo
aam
imulb
mov
fbld
jmp
jmp
int
cmpsl
loop
es
data16
jmp
inc
mov
stc
pop
jle
imul
sub
mov
mov
pop
gs
mov
xchg
ds
mov
popf
aaa
pushf
cld
sub
xlat
mov
pop
loopne
mov
add
loope
jmp
xchg
inc
pop
or
pop
test
fidivs
and
fwait
xchg
imul
les
js
add
xchg
add
cmc
leave
cmp
jmp
sub
mov
push
icebp
cmpb
nop
xchg
xor
adc
adc
inc
data16
insb
movsb
int
push
testb
push
mov
sub
test
pop
mov
xor
xchg
outsb
cmc
rcrl
add
xor
mov
rcll
xorl
mov
nop
cmp
or
rorl
push
add
push
leave
popf
jb
or
mov
sub
mov
fnstenv
cwtl
aam
movsb
mov
pop
mov
addr16
in
xchg
push
jl
or
lds
cmp
flds
mov
jmp
mov
mov
cltd
mov
mov
daa
and
add
loop
mov
mov
xchg
push
movsb
adc
jno
in
push
xchg
cmp
movsl
jne
mov
fmull
repz
sbb
rcrb
push
xor
push
sub
lea
push
push
dec
ret
or
add
rcll
adc
lods
mov
pop
mov
imul
push
dec
shll
dec
loop
mov
pop
bound
subps
sub
fnstenv
add
fwait
out
cmpsb
jmp
xchg
notb
pop
mov
mov
add
test
mov
lock
mov
jge
inc
mov
sahf
push
dec
pop
fldcw
dec
lea
lret
inc
mov
adc
dec
pop
push
push
xchg
inc
mov
outsl
sbb
dec
push
inc
repz
mov
push
shll
mov
ds
pop
xchg
xorb
and
mov
out
stos
movsl
dec
jl
sub
adc
subl
cwtl
mov
and
shll
insb
stos
int3
pop
packsswb
mov
push
mov
cld
mov
mov
pop
lahf
fsubl
mov
dec
hlt
test
xchg
inc
mov
cmp
push
iret
cld
mov
es
jne
xchg
mov
mov
mov
lds
xlat
sbb
push
fwait
pop
pushf
outsl
xchg
cmp
imul
sbb
dec
test
mov
aam
or
mov
push
decl
loope
out
idivl
mov
pop
sbb
insl
xchg
mov
out
add
fnstenv
hlt
insb
sbb
inc
push
or
or
mov
jecxz
int
jae
pop
jno
jmp
or
mov
jns
jbe
mov
mov
push
add
popf
stos
out
jo
pusha
sti
pop
test
lret
int3
jecxz
in
cmp
xor
xlat
aaa
xchg
fs
sbb
sbb
xor
sub
iret
les
stc
pusha
and
jb
sbb
push
lret
cmpsl
mov
xor
popf
and
mov
cmp
imull
int
jecxz
xor
data16
rcll
test
push
add
fcompl
in
mov
pusha
adc
imul
daa
pop
sahf
push
xor
mov
int3
mov
outsl
mov
not
test
ss
xchg
mov
js
iret
cli
shll
xchg
xor
clc
xchg
sub
lss
icebp
jle
cltd
test
cmpb
roll
cmp
pop
loop
rclb
icebp
and
xchg
xchg
in
fimull
in
jns
xchg
ret
leave
sbb
cmp
inc
dec
rol
jns
sbb
aam
lea
out
add
ficoms
mull
inc
imul
in
in
dec
push
cltd
mov
jno,pn
sbb
lods
rcl
jbe
sbb
fisubrs
sbb
out
jmp
pop
add
aaa
sbb
loope
and
mov
loope
inc
insl
xchg
insl
pop
sbb
mov
enter
inc
incb
xchg
sub
xor
repnz
jp
inc
mov
iret
psubusb
xchg
xor
jno
lret
loope
scas
je
push
shlb
add
pop
pop
mov
clc
adc
add
leave
lret
arpl
int3
adc
dec
mov
out
and
sti
imul
fdivl
lret
clc
scas
scas
sbb
fwait
cmpb
dec
lcall
pop
add
cli
xchg
pop
mov
jo
je
jne
jmp
jb
insb
movsb
xchg
aas
fwait
sub
leave
mov
mov
push
movsl
push
gs
mov
pop
testl
call
and
rcrl
push
clc
fwait
xor
jmp
nop
mov
jnp
dec
cmp
xchg
insl
in
cmpsl
ja
loop
jle
jb
loop
popa
bound
push
pop
inc
or
and
fadds
icebp
pop
jne
cltd
loop
push
sub
outsl
int3
pushf
xchg
ret
inc
stos
fsubrl
xchg
ret
lcall
adc
jae
sub
sti
mov
jl
outsl
xchg
add
aas
loop
popa
pushf
push
fwait
xchg
lahf
addr16
sbb
or
lods
add
sbb
dec
mov
mov
roll
mov
hlt
fcoml
rorb
les
insb
sub
sub
inc
sub
sbb
inc
cld
mov
dec
or
stos
cmp
jb
scas
inc
and
fcmovnu
mov
mov
popa
mov
shll
data16
fisttpl
daa
cmp
loope
sti
dec
icebp
repnz
xor
imul
fs
mov
scas
push
ret
adc
dec
fs
sahf
xchg
ror
and
and
out
push
es
push
test
imul
jp
mov
adc
jno
add
mov
fidivrs
jmp
jb
cld
pusha
jb
mov
pop
testl
fstps
pop
inc
fistpll
sub
sbb
jne
mov
inc
js
lcall
idiv
mov
lret
scas
pop
js
sbb
jp
mov
cmpsb
push
aaa
mov
lock
or
xchg
ljmp
arpl
icebp
cmpsb
cwtl
xor
addr16
insb
push
enter
adc
jbe
dec
mov
jge
mov
push
shrb
mov
jge
test
add
adc
in
scas
jns
push
jl
xor
insb
sbb
ret
xor
ja
mov
es
testl
dec
jbe
lods
movsb
dec
insl
lds
jmp
mov
rclb
adc
lret
je
out
sbb
scas
cld
shrb
mov
xchg
and
adc
dec
jbe
clc
xlat
fnstenv
cmpsb
and
jmp
xchg
sbb
adc
push
xlat
cwtl
cld
filds
xchg
gs
xorb
daa
ja
sub
and
mov
imul
dec
pop
mov
mov
aam
or
in
add
mov
hlt
ljmp
jle
dec
int
pop
dec
or
jecxz
cli
dec
sbb
cmp
inc
cs
call
fcmovnbe
inc
fisubl
aas
inc
cs
jno
mov
sub
loopne
roll
xlat
test
icebp
fistps
mov
cld
jb
hlt
out
in
fstps
aaa
faddl
test
or
test
xor
cmc
xlat
mov
out
es
dec
fdivl
sahf
test
dec
xlat
sub
mov
je
in
stos
and
push
jp
xor
enter
mov
xlat
pop
clc
stos
stos
adc
and
mov
lea
xor
outsl
jecxz
daa
mov
fmull
or
outsb
out
sub
shrb
int
sub
xor
cmpsl
push
int
sub
insb
imul
sahf
iret
not
mov
outsb
das
xor
mov
dec
js
or
stos
mov
sub
pop
nop
push
scas
xor
arpl
imul
dec
dec
push
fdivrl
int3
dec
inc
int3
mov
lods
movsl
adcl
ficomps
cmpsl
push
or
add
popf
xchg
adc
adc
shrl
shll
dec
cmpsl
cwtl
xchg
out
mov
aam
mov
jmp
jne
sub
jno
mov
or
out
fs
pop
pop
adc
outsb
in
fucomp
pusha
je
cmc
mov
sbb
pop
jmp
test
push
je
mov
mov
cmc
daa
sbb
push
insl
xchg
incl
in
xchg
stos
mov
jl
push
cmp
outsl
mov
ja
pop
icebp
ret
xchg
pop
adc
jge
or
fmulp
fs
or
pop
inc
adc
inc
adc
xchg
mov
les
or
adc
dec
add
mov
mov
es
xchg
fwait
dec
cmp
jns
lea
xchg
sbb
mov
xor
adc
jo
outsb
ret
push
repz
inc
inc
popl
or
pop
xor
xchg
int
repnz
push
ficoms
xchg
je
cmc
xchg
fidivs
push
subb
add
popa
sub
xchg
ljmp
jp
rcll
jmp
inc
cmpsb
test
mov
xchg
jp
movsl
mov
loope
xchg
sarl
push
sub
pop
lods
dec
loopne
mov
push
jnp
test
ds
loop
in
and
inc
stos
xor
ret
jb
js
mov
jne
or
inc
mov
xchg
decl
xchg
sub
in
inc
cltd
xchg
outsb
and
daa
test
and
dec
dec
pop
cmp
mov
inc
inc
rcrb
das
int
adc
or
aad
iret
cmc
in
movsl
andl
jecxz
inc
inc
jmp
mov
icebp
inc
cltd
pop
cmp
insb
xlat
or
xchg
jb
jns
cli
pop
das
and
push
stos
or
jno
stos
jecxz
mov
andl
adc
sbb
in
inc
fistl
adc
add
repnz
inc
mov
and
mov
push
push
cmpb
dec
lret
out
mov
add
sbb
xchg
loopne
adc
test
or
xor
cs
and
push
cmp
mov
sbb
inc
aas
inc
xchg
pop
test
pop
jecxz
test
outsl
data16
popf
mov
repnz
imul
adc
in
xor
and
imul
mov
repz
mov
mov
adc
jne
xchg
sbb
test
ret
xchg
or
sub
and
pop
ret
mov
sbb
or
outsl
sbb
or
mov
ja
pop
or
loop
add
push
and
inc
into
stos
sub
shrb
jno
sub
or
mov
enter
ds
stos
mov
test
sti
pop
mov
pop
std
push
aam
inc
pushf
aam
cwtl
sbb
stos
and
aaa
jmp
frstor
push
sub
sub
sub
jnp
outsb
out
int3
fisubl
mov
imul
cmpsl
fisubrl
xchg
daa
sub
ret
add
mov
call
dec
jo
shlb
mov
and
negl
pop
cs
addr16
lcall
jg
mov
jmp
shl
mov
adc
aas
in
stos
push
gs
jecxz
jmp
dec
sub
lods
inc
pop
fsts
scas
pop
stos
fcoms
dec
push
xor
cmpsb
je
or
cmpsl
cmp
popa
pop
sbb
mov
push
inc
cli
iret
mov
shlb
xorb
fcoms
std
stos
jno
jg
xlat
adc
leave
push
fidivrl
gs
mov
jl
les
jecxz
add
andl
push
out
jbe
adc
mov
enter
adc
dec
in
imul
jg
repnz
mov
mov
scas
out
dec
dec
jno
jge,pn
jg
add
lahf
lock
notl
sub
imul
aad
enter
test
inc
cmp
adc
in
in
sbb
cmpsb
lock
int3
hlt
mov
cmp
ret
insl
mov
push
pop
filds
out
add
inc
or
mov
out
add
int
orl
shlb
cwtl
xor
jb
and
jb
xor
adc
adc
jns
and
popf
xchg
arpl
mov
adc
outsb
int3
cmp
sub
xchg
mov
cmpsl
xchg
inc
mull
xor
xchg
mov
adc
cmp
mov
xlat
lret
jp
xlat
cmpsl
cmpsl
inc
push
add
add
rcrb
xor
push
and
pushf
sarl
pop
imul
mov
dec
sarl
jecxz
mov
or
xchg
jp
out
je
subl
mov
xchg
push
andb
mov
push
mov
mov
or
jno
movsb
shll
sub
jb
int
out
add
dec
mov
push
cmp
outsb
cwtl
dec
push
js
xchg
adc
cli
adc
inc
cmp
sbb
adc
jecxz
nop
aam
stos
pop
and
cmp
and
jg
mov
sti
fdivl
incb
push
movsl
mov
push
lods
test
lock
inc
add
mov
das
jae
stos
push
adc
test
sbb
fst
cltd
mov
mov
movsb
cmp
shl
in
scas
inc
sti
insl
mov
out
pushf
ss
sahf
mov
push
mov
lods
aas
out
nop
in
cld
test
xchg
and
les
add
rcrl
add
js
inc
xchg
push
shl
loope
push
xor
aad
inc
sub
push
js
rcr
je
jle
mov
pop
popf
push
rorl
xchg
add
ds
scas
cwtl
shll
and
loope
jg
mov
cmc
test
sbb
adc
cmp
and
or
movups
sbb
fisubrs
leave
mov
pop
clc
cmc
lret
sbb
lods
sub
mov
pop
xchg
mov
pushf
push
popf
push
push
and
cmpsl
mov
ret
fiadds
push
xor
jb
mov
mov
mov
enter
jbe
out
xor
sarl
outsb
sbb
dec
movsb
jae
push
imul
insb
dec
push
add
in
loopne
adc
je
ss
pop
mov
add
xor
xchg
or
ja
cmp
lds
lret
dec
ret
cmc
stos
adc
loop
cmp
pop
fs
cmpsl
pushf
or
iret
sub
fimuls
sbb
jo
sbb
cld
mov
mov
lods
enter
lds
fstps
insb
jnp
fsubl
dec
push
or
sbb
insb
filds
fstpt
xchg
or
mov
xchg
sub
xchg
js
mov
fstpt
pop
and
aas
ss
jbe
dec
push
sbb
cmp
add
fsubl
xlat
imul
insl
jne
fcmovu
jp
out
mov
aaa
addr16
psrad
pop
insl
int3
gs
xor
dec
push
sbb
cwtl
xchg
pop
insl
pop
xor
fbstp
rorl
popa
gs
add
mov
aad
movsb
fldcw
dec
pop
mov
stos
pop
and
mov
push
icebp
mov
repz
push
scas
fs
push
int3
dec
in
clc
test
jle
adc
int3
sahf
cmpsb
cmp
test
or
into
clc
in
loopne
in
cmc
neg
add
sbb
hlt
mov
mov
test
jne
add
jmp
dec
jg
pop
pushf
inc
pusha
pop
dec
cmc
mov
mov
repnz
loope
pop
xchg
loop
loope
or
sbb
scas
inc
lea
insl
mov
xchg
pop
or
sahf
rep
sub
sub
adc
test
ficomps
xlat
pop
lret
sbb
dec
ljmp
std
inc
repnz
jnp
pop
jmp
fmuls
jbe
push
mov
inc
gs
mov
cs
lcall
cmp
scas
aad
insb
adc
pop
mov
mov
push
je
mov
add
or
jbe
sub
mov
cbtw
leave
dec
cs
in
mov
loopne
xchg
add
shrl
mov
lret
push
add
inc
lock
jnp
cmpsb
inc
imul
les
nopl
jnp
and
testl
mov
ljmp
xor
pop
test
mov
cwtl
adc
push
je
cmpsl
les
lea
pop
or
shrb
sbb
pop
sub
leave
or
sub
xchg
ret
xchg
andl
idivb
cltd
inc
data16
movsb
push
jp
push
jmp
mov
and
fisubs
pop
xor
sbb
insb
aad
arpl
movsb
or
pop
pop
sbb
xor
icebp
rcrb
push
xor
sti
insb
xchg
addr16
sub
inc
fldcw
ds
out
cmp
push
test
xchg
xchg
roll
popf
xor
sub
jae
adc
sub
lret
and
dec
scas
daa
sbb
int3
or
mov
fcompl
or
mov
xchg
jp
push
add
inc
movsb
dec
xchg
xor
lods
push
fisttpl
inc
xor
imul
mov
cmpl
ds
es
or
sti
inc
adc
or
shll
and
pop
xchg
sub
and
test
in
adc
out
cmpsl
cmp
pop
pop
lahf
and
adc
add
mov
cwtl
pop
outsl
inc
sub
test
jae
and
sbb
out
xor
aam
rolb
mov
jo
les
inc
aas
cmp
or
and
movsb
push
sub
fwait
xchg
push
bound
aas
push
std
add
les
jb
popf
setge
dec
mov
jg
cmp
push
xlat
insl
dec
push
pop
push
push
leave
int3
or
xchg
outsl
pop
mov
out
sub
add
dec
shll
sbb
add
push
dec
ds
ret
push
fs
pop
loop,pt
fcmove
lahf
push
mov
sbb
stos
hlt
fisttpl
insl
xchg
push
lret
cwtl
das
inc
or
arpl
cld
add
and
cmpb
xor
ja
jno
sti
mov
negb
mov
push
in
xchg
push
cltd
cmpsb
repnz
out
jmp
mov
mov
or
into
aad
notb
lods
pushf
mov
mov
dec
test
mov
sub
cmpb
in
xor
jbe
pop
jecxz
out
fcoml
icebp
xchg
mov
in
push
mov
aas
inc
dec
popf
xor
loop
ja
or
jo
jg
sarb
testl
lahf
stos
mov
mov
aad
adc
mov
notl
jge
pop
inc
dec
into
inc
mov
fcmovu
mov
ret
cmpsb
and
xchg
push
aaa
mov
insb
fidivs
sbb
sub
clc
mov
icebp
stos
dec
xor
lret
hlt
xchg
test
loopne
mov
cwtl
cmp
pushf
mov
jo
fiadds
arpl
popa
insb
call
mov
cmp
das
cld
cmp
int
xchg
stos
cmp
popf
mov
sti
xchg
sub
add
jecxz
jmp
shrl
or
cmp
shll
mov
mov
cmpsb
mov
imull
ljmp
mov
cmp
adc
pop
push
cmp
mov
adc
sub
cs
rorb
sti
aas
mov
cld
inc
dec
scas
mov
mov
cmc
sbb
mov
mov
pop
das
aaa
inc
add
ret
pop
xchg
mov
and
dec
enter
call
fsubrl
mov
adc
sahf
xchg
inc
daa
movsb
push
rcrl
cmp
push
push
pop
jg
mov
clc
cli
pop
aam
jne
mov
xchg
xchg
xchg
sub
loop
rorb
ud0
ret
sahf
lock
cwtl
mov
cmp
xchg
ret
push
scas
sbb
dec
mov
ror
outsb
mov
ljmp
push
lods
cmp
adc
push
mov
and
and
cltd
fisubrs
xchg
outsl
push
fwait
xchg
jp,pt
sti
cmp
pop
icebp
sbb
fdivrs
scas
cmp
and
push
sahf
popl
test
mov
notb
cmp
loope
loopne
repnz
arpl
mov
mov
outsl
loope
inc
mov
and
lea
mov
mov
lret
ja
int3
lock
sarb
nop
daa
xor
test
mov
jo
jecxz
pop
ds
xchg
mov
inc
adc
push
ds
loopne
pop
aas
sub
repnz
mov
pop
int3
cmp
xor
mov
in
int
fsub
lods
cltd
fdivl
and
mov
imull
and
mov
pop
pop
dec
inc
cmp
mov
jno
mov
dec
out
je
mov
fs
pop
jne
mov
jnp
gs
push
insb
xor
xorb
jnp
or
mov
icebp
andl
aam
xchg
fstps
mov
push
pop
sbbb
test
jo
cmp
roll
xchg
out
inc
inc
xchg
hlt
pop
pop
sahf
add
cmp
sub
mov
cs
cmp
mov
inc
sub
cwtl
mov
pop
cmovnp
inc
es
jne
or
fs
and
jge
lahf
sub
jbe
dec
clc
cmp
dec
pop
in
dec
mov
es
dec
add
pop
loope
push
pop
jnp
je
mov
adc
cmp
js
and
or
add
jp
jge
std
imul
mov
pop
or
es
push
push
or
aaa
and
dec
dec
rorb
dec
mov
out
pop
fdivrl
jae
pop
jae
dec
add
xchg
or
aam
inc
cmp
mov
into
inc
dec
sbb
pop
push
shl
cmp
jp
ret
lret
in
addl
in
dec
dec
sub
aam
mov
sbb
aad
repz
fcompl
mov
or
andb
in
dec
add
fsubs
idivb
je
jo
jno
ds
mov
and
mov
lahf
push
dec
xchg
stos
lock
xchg
aas
sub
into
xchg
mov
in
pop
push
push
add
mov
mov
jne
dec
cmp
imul
xor
lret
dec
dec
dec
push
test
xlat
popa
xchg
hlt
cli
push
cmp
imul
nop
ficoml
xchg
cmp
hlt
or
movsb
xchg
cmp
loop
sbb
repnz
lds
int
pop
jmp
mov
and
fisttpl
jae
sub
inc
shrl
jns
jmp
lods
dec
ds
dec
pop
xlat
movsl
pop
xchg
push
add
bnd
or
sub
inc
mov
add
add
ficoms
call
roll
js
xchg
bound
sbb
fnstenv
sub
jl
sub
sub
clc
nop
xchg
add
pop
sub
out
loopne
jno
pop
push
int
rolb
adcl
jo
push
in
daa
pop
pop
mov
sbb
jp
mov
add
mov
clc
and
or
testb
and
xchg
lret
fs
stos
loop
mov
mov
movsb
popa
add
lea
sbb
lret
fisttpl
mov
loop
imul
outsb
out
sbb
int
rcl
pushf
add
or
sbb
outsl
pop
iret
dec
dec
adc
lret
pop
dec
pop
pushf
adc
arpl
insl
mov
mov
dec
fs
aaa
imul
mov
jnp
xchg
loopne
mov
and
and
popa
cmpsb
outsl
push
je
cmp
inc
mov
lcall
cmp
movsb
push
js
arpl
sahf
movsb
jnp
pusha
pop
mov
pop
les
adc
rclb
test
mov
xlat
inc
push
push
mov
loop
hlt
cs
aam
mov
ret
pushf
push
cmpsb
jecxz
pop
push
push
pop
push
or
icebp
iret
int3
ret
sbb
pop
pop
sub
iret
xchg
sbbl
cmpsb
aas
fstpl
imul
adc
sbb
jmp
jnp
push
leave
mov
cmpl
adc
arpl
pop
add
pop
or
xchg
xchg
jge
hlt
adc
jnp
push
arpl
xor
add
mov
out
sbb
int3
pop
jmp
adc
xchg
push
xor
loope
and
fldl
test
xchg
mov
ds
mov
or
adc
adc
xor
adc
add
mov
scas
xchg
or
pop
adc
lret
or
dec
jmp
push
adc
sub
jae
jmp
push
testl
stos
mov
and
and
mov
jae
ja
inc
les
setno
ret
xor
dec
mov
fisubrs
cmp
sbb
and
int3
out
mov
sbb
insl
xor
clc
daa
ret
repnz
arpl
xlat
shlb
test
adc
jg
xor
push
les
mov
clc
cmp
inc
sub
mov
dec
cmpsl
rorb
or
push
int
shlb
push
stos
fistpl
sub
repnz
aas
aaa
ljmp
xorl
sub
pop
scas
mov
xor
sahf
cmc
imul
cmpsb
stos
xor
xchg
pop
sub
je
arpl
in
jle
ja
and
xchg
mov
xchg
jo
nop
cmp
mov
mov
jne
pop
dec
and
loope
xor
xor
fwait
mov
repz
adc
popa
dec
jb
imul
mov
in
push
push
repz
lahf
xor
sbbl
aad
pushf
jl
cld
sub
lods
pop
popa
dec
leave
pop
sub
or
cld
js
mov
mov
popa
inc
pusha
sub
jo
cmpsb
test
ljmp
out
mov
bound
mov
pop
dec
out
xor
xchg
push
fldt
xchg
add
stc
scas
clc
jnp
scas
cmp
xchg
test
mov
stos
sbb
pushf
and
or
mov
jne
sub
hlt
ljmp
mov
nop
cmp
fsub
aam
and
inc
mov
jp
mov
or
add
xchg
rcrb
and
ss
call
xor
jne
insl
nop
test
cli
fimuls
fsubs
pop
xor
fbld
out
mov
mov
jge
mov
rcl
imul
add
xlat
and
xorl
mov
arpl
jl
xor
test
sub
jnp
lea
push
inc
hlt
gs
pop
insb
jg
scas
inc
enter
stos
into
xor
ja
imulb
xchg
pusha
daa
dec
out
pop
sub
ljmp
jnp
sahf
push
scas
push
repnz
jo
shrb
les
rorb
pop
mov
mov
sbbl
jne
jmp
jno
scas
gs
and
and
test
jmp
lcall
xorb
std
cmp
int3
pop
in
hlt
in
cltd
sub
add
adc
pushf
jg
dec
mulb
add
stos
mov
adc
sbb
xor
push
push
test
pop
jbe
and
jl
je
ja
jb
fildll
mov
sti
pop
jle
ret
fwait
lods
mov
and
push
call
imul
dec
jl
and
jae
mov
scas
pop
inc
fdivr
add
xchg
lahf
mov
jg
xlat
insl
loopne
push
adcl
lcall
negb
cmpsl
push
or
fbld
repz
jmp
in
cmc
dec
xor
data16
jae
cmp
xor
adcl
dec
int
pushf
xlat
sbb
scas
test
in
mov
inc
in
pop
mov
push
xor
push
std
mov
sahf
mov
mov
leave
or
test
mov
hlt
mov
aam
outsl
cltd
ds
xchg
repz
pop
mov
das
sahf
xor
lods
inc
pop
sbb
mov
adc
jle
xor
inc
sbb
flds
movsl
in
mov
adc
inc
pop
repnz
jnp
dec
lret
sahf
jae
mov
pushf
dec
insb
ficoms
cmp
nop
xor
lock
adc
lret
xchg
arpl
mull
pop
xor
jb
or
push
pop
movsb
sub
ud2
inc
fsts
fwait
xor
push
xchg
cmc
stos
dec
in
sub
mov
cmp
insl
inc
in
push
pop
clc
or
in
lcall
insb
imul
loopne
rcr
fwait
adc
arpl
adc
in
aaa
add
adc
cmp
sub
in
rcrb
sub
lahf
fistpl
js
and
lods
and
jb
jmp
inc
jne
push
fdivs
ret
aam
mov
jb
scas
mov
fcmovnu
shrl
pop
clc
mov
or
int
mov
and
push
mov
dec
daa
pop
jp
cmp
ss
mov
test
enter
shr
mov
pusha
lea
clc
or
mov
xchg
xor
in
ret
stc
inc
inc
push
jecxz
dec
push
xchg
ja
mov
fnstsw
dec
imul
shl
mov
sbb
jns
cmp
sbb
lods
hlt
and
scas
mov
pusha
aaa
jbe
hlt
ja
rcr
inc
pop
enter
jecxz
aam
add
fwait
pushfw
and
xlat
test
dec
mov
pop
jl
mov
lock
xchg
pop
or
push
add
sub
push
and
mov
inc
mov
sbbb
test
mov
es
cmp
lcall
shrb
bound
push
cmp
jmp
popf
inc
dec
clc
push
pop
jmp
lods
or
test
push
fwait
nop
ja
hlt
cld
mov
sbb
ret
sbbb
icebp
mov
or
rorl
test
ljmp
rclb
mov
xchg
cmp
pushaw
cmp
mov
inc
fiadds
rcl
inc
fistpl
jbe
cli
fs
mov
fldt
dec
in
das
mov
mov
or
dec
loop
jle
pop
ja
cmp
aaa
push
jl
or
ljmp
or
loope
test
inc
icebp
leave
nop
sarb
sbbl
jge
scas
push
shl
dec
push
sbb
pop
pushf
mov
test
int
inc
sub
xchg
pop
sub
repz
mov
dec
es
ja
jle
pop
mov
mov
push
add
js
xchg
ds
add
insl
shll
xor
xchg
mov
push
cmp
jo
xor
adc
pop
dec
movsb
dec
sbb
fst
add
push
or
cmp
out
sbb
jge
push
and
mov
icebp
cmc
sbb
or
pushf
scas
cltd
push
sub
fimull
xchg
mov
adc
and
pop
mov
enter
mov
int
inc
hlt
sbb
fsts
or
stos
ljmp
sub
dec
sbb
imul
clc
pop
and
iret
ss
dec
cli
or
rorl
mov
rolb
add
mov
mov
or
stos
rcll
addr16
cmpsb
adc
nop
jle
cmp
xor
popa
add
in
add
mov
mulb
imul
pushf
mov
jge
mov
mov
cld
clc
cwtl
in
mov
rcrb
negb
cmp
cwtl
call
subb
fldl
jbe
lds
fldenv
mov
sub
adc
dec
mov
scas
leave
ret
das
popw
cwtl
cs
stos
add
xchg
adc
dec
sti
popf
or
inc
sub
mov
movsb
ret
sub
adc
dec
push
out
jge
sub
mov
inc
repz
mov
cmp
rcll
jo
bound
sbb
mov
xchg
sub
xor
adc
cmp
imul
out
jg
xchg
repz
push
pop
xor
movsb
pop
lds
test
mov
sti
pop
mov
faddl
mov
rcll
xor
mov
notb
jbe
icebp
int3
inc
fcoml
and
int3
cwtl
push
mov
incb
lahf
aas
lcall
enter
loop
orb
lcall
cmp
xchg
or
adc
jae
popa
andl
data16
subb
mov
jmp
or
add
and
pop
insl
and
into
sbb
mov
mov
push
pop
ret
clc
cmp
inc
call
mov
insl
clc
sbb
mov
mov
pop
outsl
lods
test
shr
inc
cmp
dec
out
fstpt
hlt
jnp
jb
push
mov
jno
sub
adcb
xchg
ja
mov
pop
mov
xchg
xorl
pshufw
mov
or
loop
addr16
xchg
inc
xchg
mov
mov
mov
jae
lds
in
jmp
xor
bound
fbstp
stos
mov
inc
cmp
scas
push
imul
das
xchg
in
mov
lock
push
cld
push
mov
fwait
xor
push
nop
movsb
sbb
push
mov
pop
into
push
or
ljmp
mov
sbb
push
sbb
call
in
cmp
addr16
dec
jl
aas
movsl
arpl
or
mov
jbe
push
dec
mov
loope
std
lods
adc
ljmp
mov
aad
jl
call
inc
aaa
xchg
jge
mov
lea
int
into
dec
cmpsl
mov
push
mov
cmp
aam
notb
sub
outsl
scas
sbb
popf
dec
outsb
add
push
out
mov
pop
or
jle
hlt
or
pop
test
stos
xor
push
cmp
movsl
into
mov
sbb
push
add
data16
sbb
push
pop
lods
enter
push
cmp
pop
lds
es
outsb
cmpl
outsl
test
cmpsl
cmp
mov
lock
loopne
sahf
pop
js
xchg
pushf
fbstp
fmulp
lods
mov
fisttpll
mov
pop
add
mov
into
std
xorl
pop
call
hlt
movl
ret
pop
dec
push
xor
loop
xor
cmp
sbb
jmp
decl
mov
repnz
push
fdivs
shll
clc
pop
push
jp
sub
sarb
int3
es
jl
or
add
push
nop
enter
imul
fcmovu
add
sarb
push
loope
dec
push
int
adc
call
leave
push
in
hlt
gs
push
gs
cmpsb
mul
cmpsl
addl
mov
ret
mov
into
cmp
clc
sub
xor
jg
cmpsb
dec
imul
and
mov
xor
ss
fwait
mov
les
out
int
or
mov
xchg
out
gs
orl
vsqrtsd
ss
adc
clc
mov
hlt
icebp
mov
add
in
jg
mov
arpl
es
adc
push
push
sub
stc
lods
mov
push
jge
add
in
mov
lock
sbb
jo
loopne
sbbb
cwtl
xchg
ja
mov
jge
sub
push
add
lock
xchg
iretw
sahf
outsb
add
pop
add
push
movsl
sbb
loop
shrb
adc
popf
fld
push
shlb
sbb
push
aaa
sbb
je
mov
adc
aas
stc
rcll
and
pop
inc
call
xchg
idivl
sub
add
daa
stos
mov
push
add
aam
adcl
jle
sbbb
dec
int3
test
shll
ret
sub
pop
push
jmp
fldenv
sbb
inc
lods
xor
sbb
insb
aaa
es
test
sbb
push
pusha
mov
int3
shlb
loope
add
mov
mov
adc
lcall
inc
mov
call
jecxz
jne
stc
or
cli
and
popf
sub
pop
jne
adc
bound
int3
cmp
lds
or
pop
cli
sub
repz
sub
aaa
mov
insb
fwait
add
mov
fists
push
stc
aaa
cmpsb
cmpsb
sbb
repnz
and
shll
mov
adcb
fistpll
sbb
lret
mov
mov
out
idivb
imul
ljmp
push
in
cld
jge
ja
jge
in
push
cmp
dec
jnp
xchg
scas
push
lret
pop
ror
jne
mov
int
ret
mulb
outsl
test
and
dec
dec
cmp
paddq
pop
lcall
ds
outsb
shl
cli
sti
stos
fnstenv
testl
cmp
pop
push
fs
inc
push
cmovnp
rorl
xor
popa
push
loopne
aad
push
pop
push
xchg
insl
dec
sub
and
pop
jmp
push
popf
rclb
movb
pop
cmp
mov
cmp
fcoml
imul
ret
and
loop
js
add
jns
pop
xchg
dec
cmp
and
dec
hlt
out
push
ja
syscall
bound
push
bound
add
or
cli
and
jns
push
ret
push
stos
shrw
cmpsl
ds
add
pop
pop
xchg
xchg
pop
fsubs
fsubs
imul
push
push
test
or
int
xchg
xor
lods
jne
lea
lret
and
adc
mov
fisubrs
sub
test
jecxz
in
cmp
xchg
inc
notl
lret
cmp
jg
jae
decb
cmp
mov
xchg
xor
dec
sti
rorb
adcl
pop
lds
popa
lods
jae
andl
inc
xor
push
xorb
fstpl
inc
pushl
pop
cmpsl
pop
enter
lcall
shll
and
cli
push
shrb
pop
mov
mov
aas
ret
aas
adc
push
in
stos
jl
ljmp
sahf
adc
stos
cltd
push
je
in
int
mov
mov
add
cli
jge
jmp
inc
sbb
icebp
rclb
test
pop
mov
ljmp
dec
mov
xchg
or
adc
imul
cwtl
pop
jmp
lock
xor
cmpsb
adc
aas
xor
popf
dec
mov
dec
mov
dec
inc
adc
cli
inc
cmc
mov
mov
and
ficoml
sbb
gs
out
cmp
dec
add
dec
stos
mov
cmc
add
push
fnstcw
hlt
imull
shrl
mov
ret
mov
push
push
ss
out
aam
gs
xorb
add
ljmp
int3
out
in
repnz
inc
lret
xor
jns
mov
ret
lahf
add
mov
cmp
xor
jmp
pop
mov
clc
xor
scas
in
jno
fmuls
filds
enter
iret
cmp
in
lret
aam
shr
lret
pop
fcomps
or
in
adc
xor
sbb
add
loop
ljmp
xchg
pop
popf
push
nop
roll
cmp
ds
rorb
or
imul
ret
mov
jns
sub
xor
cmp
and
sbb
js
xor
cmp
add
mov
inc
mov
xor
adc
shll
mov
cmc
out
push
in
out
cwtl
pusha
insl
sub
push
jmp
push
jp
or
in
in
int3
gs
leave
loopne
sub
stc
pop
or
mov
cmp
push
jg
add
cmp
jg
gs
dec
push
xchg
nop/reserved
stos
mov
pusha
mov
imul
xor
jo
dec
dec
ljmp
or
or
imul
decl
mov
ja
repz
push
mov
jg
loop
dec
das
mov
inc
lcall
fimull
std
or
xchg
mov
xor
movsl
jno
cmp
xchg
sbb
xchg
movsb
cmp
sub
mov
rcl
xor
or
iret
pop
std
push
cwtl
xorb
insl
or
add
mov
mov
insl
pop
dec
sbb
loop
push
mov
lret
add
dec
insb
cmpsl
pop
out
jns
sub
mov
add
sarl
pop
sbb
inc
dec
je
dec
into
or
test
sub
out
imul
cli
js
cli
push
lds
inc
inc
dec
mov
fisttpl
js
daa
loope
pop
xlat
ret
or
push
test
out
jge
int
leave
jecxz
xorb
and
pop
pusha
fwait
orb
add
push
int
dec
psllw
cmp
jno
outsl
aas
xchg
insb
xchg
lret
divl
add
ljmp
inc
push
cmpl
enter
push
dec
ja
mov
xchg
in
int3
or
arpl
push
mov
mov
cmp
popa
ret
mov
xor
mov
mov
aas
dec
ret
push
dec
lret
push
fisttpll
push
in
and
or
loopne
jp
or
push
popa
rcll
nop
divb
add
dec
xor
in
aaa
aaa
or
aaa
mov
outsl
ja
out
xchg
outsb
jo
cmp
pop
cltd
hlt
fdiv
xchg
mov
xor
cmp
stos
test
ret
and
xchg
cmc
int
xlat
int
aam
mov
imul
lret
lahf
sbb
arpl
cwtl
and
add
pop
or
fistpll
push
mov
roll
add
mov
jecxz
jp
cwtl
outsl
shlb
cmc
add
adc
ss
sbb
imul
lahf
mov
mov
push
and
push
xor
ljmp
or
push
dec
mov
and
std
setbe
adc
jnp
push
insb
fcom
ret
ss
mov
mov
fldl
sahf
je
hlt
test
jae
pop
test
mov
add
xchg
adc
pusha
out
aam
jl
in
xor
jb
or
mov
jg
inc
repnz
push
sub
push
xlat
subb
add
addr16
pop
loopne
or
bound
push
out
test
movsb
ljmp
xchg
mov
jg
ds
movsb
mov
jecxz
or
lods
push
jg
mov
insb
aaa
push
scas
and
jae
lods
imul
sub
add
fcoms
mov
cmp
stos
fmull
add
int
push
popa
ljmp
and
notl
adc
push
iret
aas
adc
push
push
shrb
push
cmc
add
daa
push
mov
pop
fildll
imul
je
xchg
dec
test
fcompl
mov
add
inc
mov
mov
cs
mov
test
xchg
or
bound
xchg
call
das
adc
cli
fisubs
dec
jg
rclb
xchg
call
cltd
data16
mov
mov
adc
xchg
cld
jmp
mov
mov
cmp
imul
jb
mov
mul
adc
cwtl
sbb
jmp
jle
pop
pop
into
and
sbb
mov
mov
xchg
in
add
nop
or
fsub
test
mov
pop
dec
mov
data16
add
xchg
pop
aas
push
das
mov
xor
sahf
adc
push
shrb
notb
fildll
test
inc
mov
and
in
or
add
push
pop
inc
adc
sbb
movsb
repz
jle
xchg
cwtl
mov
enter
movsb
push
or
les
inc
add
sub
hlt
add
inc
loope
icebp
cmc
js
xchg
aam
cmp
push
dec
popf
in
cmp
and
aas
mov
cmpb
inc
or
jl
dec
xchg
lret
jne
push
cli
cld
or
jno
dec
aaa
test
push
arpl
out
pushf
fnsave
test
orl
adc
sbb
add
push
fiaddl
arpl
sub
push
cli
push
fnstcw
pop
movsb
mov
add
sbb
xchg
mov
fistpll
push
or
adc
cmp
sbb
add
cld
icebp
aas
testb
push
xor
jle
pop
test
push
dec
pop
bound
mov
dec
inc
je
adc
dec
outsl
inc
movzbl
xor
push
les
xchg
lret
into
mov
inc
pushf
cmpsb
test
cmp
fcoms
arpl
imul
cli
test
mov
dec
and
inc
pop
cmp
addb
das
addb
mov
cs
sarb
fwait
dec
and
jmp
xor
sti
push
sbbl
mov
adc
sbb
aam
or
jp
pop
fs
and
pop
and
aas
pop
leave
xchg
push
jp
jl
cmp
mov
and
ret
fcmovbe
mov
idivb
lahf
mov
dec
leave
inc
popa
push
dec
jg
mov
clc
xor
inc
jbe
push
aam
or
pop
cmpb
mov
push
and
or
clc
jnp
repz
sbb
stos
add
sub
or
daa
push
loop
rclb
xchg
dec
push
test
cli
ljmp
popa
mov
aaa
in
or
cmp
dec
xor
push
inc
cli
jbe
je
aaa
mov
sub
xor
xor
sti
mov
inc
in
movsl
int
out
mov
mov
pop
or
mov
nop
sbb
mov
and
push
cld
mov
cmp
adc
adc
adc
mov
leave
mov
push
mov
iret
in
fnsave
js
push
xchg
lds
or
aam
sbb
lret
mov
mov
adc
sbb
xor
ss
scas
mov
pop
outsl
popa
clc
pop
jmp
or
leave
pop
pop
ret
and
loope
mov
sarl
mov
add
inc
lahf
test
xchg
sbb
ja
push
popa
xchg
outsb
xchg
popa
lcall
sub
loop
and
rcrb
jne
outsb
pop
and
adc
cmpsb
in
int
jo
sahf
sbbl
push
divb
test
out
mov
push
lock
adc
and
dec
push
not
call
dec
jmp
jns
fwait
lret
cmp
js
and
xor
push
ds
stos
xor
inc
mov
insl
mov
lahf
xor
into
mov
pop
lahf
pop
daa
movsl
das
inc
xchg
jae
mov
loope
loop
arpl
lock
pop
iret
repnz
sub
lock
inc
sbb
sbb
stos
push
pop
sbb
pop
mov
loop
jl
jge
push
sarb
aam
jmp
stos
mov
es
jl
xchg
sub
inc
cmp
ljmp
or
lock
mov
pop
adc
outsl
inc
xchg
mov
in
jno
aaa
mov
loopne
push
mov
or
xchg
out
cmpsb
aaa
sti
test
hlt
jmp
pop
pop
dec
notl
sub
jno
pop
shll
stos
xor
inc
call
adc
rolb
mov
xchg
out
pop
inc
pop
scas
sbb
or
mov
push
fsubrs
js
insb
xchg
popa
ds
jl
inc
jmp
cmp
inc
xor
mov
sbb
mov
rorb
xlat
loopne
lods
inc
test
xchg
aaa
subl
and
inc
not
imul
mov
push
mov
sub
mov
insl
std
pop
ffree
lea
aam
jl
lcall
fnstsw
adc
or
fidivrs
cmp
add
pushf
out
scas
dec
add
popa
add
adc
pop
popa
scas
dec
jecxz
cmp
enter
fndisi(8087
dec
mov
ja
scas
inc
enterw
jbe
fsubrs
sbb
lock
mov
cmp
pop
jo
inc
dec
cltd
ficoml
or
jo
aaa
cwtl
jb
jmp
xlat
lret
dec
popa
adc
add
xor
jmp
xor
xchg
fsubp
push
push
orl
add
adc
imul
sbb
leave
mov
push
cltd
push
sbb
inc
arpl
or
scas
sbb
or
lret
pop
xor
fwait
enter
push
out
in
lret
dec
xor
je
cltd
xchg
inc
popa
jmp
stc
jge
in
imul
lret
testb
jnp
push
int3
and
lock
repnz
pop
adc
insb
add
lods
adc
loope
icebp
jno
test
add
jb
lcall
sarb
xchg
sbb
mov
push
push
mov
into
jb
pop
faddl
shlb
inc
stos
xchg
addb
pop
int
arpl
mov
jae
cld
sbb
pop
jl
lea
jae
pop
dec
mov
bound
sub
dec
loopne
adc
rcr
jnp
or
gs
sub
rcrb
push
jbe
add
cmp
loope
mov
mov
sbb
jae
cmc
ljmp
mov
cmp
jo
enter
and
mov
insl
ss
or
pop
cmpsl
movsl
int3
dec
mov
cmp
notl
jp
jb
and
stos
hlt
hlt
cmp
and
iret
ds
enter
push
mov
mov
push
stc
mov
inc
decl
mov
jle
and
test
and
std
scas
popa
inc
mov
xchg
or
push
xor
xor
mov
jns
mov
lods
cltd
jp
mov
imul
clc
pop
sbb
mov
add
in
lahf
sbb
dec
test
inc
add
popa
jge
cwtl
adc
stc
jl
shrl
inc
dec
inc
adc
test
jae
lahf
decb
mov
ficoml
and
outsb
aam
mov
cwtl
outsb
and
push
add
mov
or
mov
push
out
cli
inc
add
jg
icebp
popf
jno
adcb
popa
insb
sub
adc
or
mov
jp
sbb
movsb
push
push
jnp
dec
jle
or
pop
adc
jae
das
lahf
jmp
lret
ret
pop
cmpsb
mov
xchg
push
pop
pusha
pop
xchg
cwtl
dec
aas
cmp
int
in
mov
jae
fimuls
xlat
or
adc
dec
and
lea
mov
xchg
test
mov
lods
and
insb
push
jp
and
out
jecxz
jmp
xchg
data16
inc
repnz
insb
mov
or
inc
add
imul
and
xchg
enter
fstpl
fwait
mov
cli
pushf
test
sbb
aaa
addb
pop
jp
popf
movsl
outsl
ja
adc
mov
out
sbb
lods
fistps
sub
imul
imul
mov
sub
mov
lret
pop
mov
sub
xor
adc
pusha
push
imul
pusha
cld
out
cli
adc
gs
jno
mov
mov
jb
out
ret
sbb
stos
rcrb
xor
inc
in
jmp
jle
mov
test
int3
dec
jnp
adc
mov
aam
jnp
cmp
inc
sbb
es
in
jecxz
pop
xor
adc
dec
shll
mov
mov
jmp
sti
lret
xorb
jnp
popa
rcll
xchg
popf
xorl
sbb
or
mov
into
push
hlt
mov
pusha
jle
push
repnz
dec
dec
jmp
es
int
popa
inc
xchg
xor
and
das
mov
mov
push
sahf
push
test
adc
and
mov
inc
std
push
sbb
mov
fisttpll
out
xor
ret
adc
mov
or
xorl
pop
and
ret
imul
dec
jl
cmp
sbb
test
nop
shlb
jns
repz
dec
mov
fmull
movsb
dec
adc
adcl
andb
xor
inc
and
cmc
test
ret
rcrb
xorl
pop
mov
in
mov
mov
push
dec
outsb
mov
test
pop
mov
mov
jbe
jae
into
xlat
lar
rolb
lods
bound
xlat
add
adc
scas
cmpsl
push
into
iret
bound
movsb
xchg
mov
or
xlat
mov
out
jg
mov
popa
jne
dec
je
or
popa
daa
mov
inc
loop
mov
jae
jge
dec
jl
ljmp
faddl
arpl
iret
aaa
add
loope
pop
mov
xor
das
dec
or
daa
ror
mov
mov
dec
mov
jbe
mov
dec
add
mov
cs
in
cmc
push
xchg
push
jmp
and
nop
xchg
xor
sbb
add
dec
and
push
push
fcompl
mov
push
mov
mov
fldt
stos
addr16
sti
and
out
mov
scas
pop
xchg
jge
dec
stos
inc
adc
roll
inc
push
xchg
pusha
test
clc
cmc
xorb
push
lods
into
aad
adc
icebp
out
xchg
fdivrl
dec
jb
daa
jo
xchg
jae
leave
or
fidivl
arpl
rclb
popf
cwtl
sub
leave
popf
stos
fiadds
dec
call
push
lods
cld
adc
push
inc
or
stc
jl
mov
push
push
push
and
daa
out
xchg
jle
leave
out
adc
out
dec
add
test
fdiv
hlt
in
popa
out
notb
insl
inc
ret
adc
cmc
adc
movl
or
xchg
in
jge
rolb
push
sahf
push
insl
mov
xor
sub
cmpsl
ret
mov
mov
cmp
pusha
xchg
bound
gs
imul
mov
lds
sbb
mov
fdivs
pop
repnz
or
cs
sarb
fcmovnb
cmpsb
cmpl
mov
and
inc
outsl
iret
push
mov
scas
lahf
into
mov
and
test
mov
movsb
sbb
pop
mov
pop
or
cmp
mov
fucomip
xor
push
cli
xor
std
push
inc
imul
mov
xor
pop
clc
add
jmp
adc
xchg
add
ror
xor
int
lcall
scas
and
xchg
xor
repz
leave
push
out
pop
pop
inc
notl
sub
cmp
or
jbe
orb
sbb
outsl
and
sarb
push
pop
cmpsl
cld
xlat
cld
push
pop
dec
je
mov
repnz
push
xchg
cmpsb
mov
fmul
and
cmp
jmp
sub
sahf
xor
jns
aad
jo
jle
jg
sahf
mov
fs
inc
mov
push
jge
out
imulb
rcrl
out
imul
mov
scas
popa
mov
enter
sbb
leave
sbb
add
dec
jecxz
scas
pop
xchg
pop
sbb
push
cmc
pop
pop
xor
stos
sub
addb
sar
push
sub
loop
ljmp
inc
jge
or
stc
and
imul
xchg
inc
dec
subb
int
xor
mov
jo
jecxz
cmp
xor
xchg
inc
sub
xorl
xor
lret
fisttpl
or
out
outsb
cld
ffree
ret
sti
cltd
pop
out
push
idiv
jecxz
test
aaa
int
rclb
jb
jecxz
add
ret
movsb
test
test
daa
adcl
push
subl
push
in
mov
decl
sbb
lock
loop
mov
stos
shll
fnstsw
push
inc
jnp
rcrl
add
dec
or
es
push
sahf
cmpsb
int3
lret
rorl
rorb
cmovg
mov
xchg
add
fs
data16
adc
mov
das
mov
cmpsl
push
pop
mov
inc
sbb
mov
jne
in
out
icebp
mov
loopne
and
xchg
stc
adc
push
hlt
xchg
out
mov
jmp
packsswb
popf
scas
sahf
dec
std
sarl
dec
pop
jne
pop
mov
call
add
xchg
add
adc
dec
dec
xor
repz
ja
adc
rorb
xchg
sbb
sahf
insb
lods
jp
inc
mov
jp
push
es
xchg
vextractf64x4
movsl
jo
lahf
mov
inc
mov
mov
fs
mov
dec
int
pop
cmp
sbbl
add
daa
bound
scas
mov
jge
call
mov
mov
mov
cwtl
fwait
aad
faddl
ljmp
fbld
fidivrl
scas
dec
jp
pop
inc
dec
jo
or
mov
mov
mov
cld
add
xchg
shlb
xchg
mov
xor
into
mov
jnp
dec
xchg
pop
cmpsb
negb
les
pushf
jle
clc
sub
sub
ss
xor
add
xchg
iret
shrl
dec
negb
or
push
aaa
push
mov
outsl
ljmp
or
cwtl
negb
jo
xchg
mov
xor
rcl
stos
xor
pop
das
mov
addr16
mov
dec
fstl
xor
xchg
in
push
adc
cld
sbb
pop
lock
sub
mov
pop
shl
leave
enter
pop
lods
std
inc
or
imul
subl
movsl
push
lods
mov
sub
out
ljmp
mov
mov
rep
inc
call
std
daa
dec
lcall
cmpsb
lret
add
lods
mov
lret
pop
rcr
and
fiaddl
andl
clc
mov
add
pop
shll
or
jno
stc
gs
mov
hlt
cmp
loop
push
jl
xchg
add
mov
adc
push
sahf
ret
sub
fistpll
insb
push
sbb
xor
bound
lret
int3
dec
and
sub
dec
mov
sarb
jg
push
js
clc
mov
xchg
xor
fmul
sbb
cs
push
inc
jne
adc
cmpsb
push
pop
pop
insb
inc
lret
push
xor
pop
insb
push
into
in
jno
test
aam
inc
pop
or
pop
cmpsb
and
out
cmpb
andl
addr16
adc
movsl
xorb
shrl
out
cwtd
mov
sub
fsubl
and
jecxz
mov
lods
xor
sti
xor
sbb
rolb
adc
js
repnz
mov
xchg
jle
xchg
outsl
leave
sub
test
add
pop
ss
roll
aas
test
mov
mov
sahf
xor
jne
push
cmp
je
adc
test
out
xlat
cmp
mov
or
mov
cmp
out
ljmp
out
jb
push
mov
mov
jns
mov
mov
dec
out
xor
push
outsb
lods
or
add
dec
inc
fildll
dec
lea
lret
stos
pop
lret
jo
xor
je
in
lret
cwtl
fbstp
filds
xor
fisttps
daa
cltd
xchg
mov
and
sbb
shlb
idiv
ja
sti
ss
pop
and
pop
cwtl
ss
jne
mov
rorb
test
rcrb
sbb
jl
cmp
cli
xchg
popf
jp
shll
inc
lods
xor
stc
out
sbb
je
xorb
xor
outsb
repnz
xchg
aaa
mov
jle
or
jge
cmpsl
leave
inc
popf
or
sbb
dec
andb
into
inc
out
fnstcw
xlat
lcall
pop
outsl
lods
cmp
ret
xchg
lods
iret
push
dec
loope
out
adc
cmp
and
jecxz
adc
fs
xchg
push
in
fcomps
sbb
out
dec
mov
nop
movl
popf
sti
add
cmp
cs
sbb
in
cwtl
in
icebp
cmp
sbb
and
std
sbb
subb
mov
dec
push
fisubs
mov
repz
and
loop
add
dec
pop
pop
adc
imul
adc
ja
cwtl
lret
test
imul
aam
xchg
sbb
bound
push
adc
jp
daa
adc
outsb
inc
std
mov
jae
mov
cwtl
xchg
push
mov
push
or
cs
xor
clc
fucomip
cmp
push
mov
subb
repz
push
mov
mov
dec
ja
imull
push
sbb
testl
fsubl
sub
pushf
push
loope
or
mov
dec
xchg
test
pop
lea
mov
xor
icebp
stos
and
fisubs
rep
push
dec
sbb
test
inc
pop
ja
leave
sub
loop
pop
sub
pop
push
sub
cwtl
addr16
xor
std
mov
in
cmpsl
cmc
jg
or
ja
mov
fwait
ja
mov
lock
shll
es
pop
adc
notl
mov
das
dec
sub
repnz
test
push
cmc
xchg
ret
and
out
add
cmp
mov
aas
sbb
dec
mov
xor
or
inc
in
cmpb
pop
insl
sti
popf
bound
jmp
lcall
test
icebp
jle
dec
jg
movsl
cmpsb
shll
inc
outsl
mov
mov
push
xchg
test
fstpt
dec
sbb
lods
dec
xchg
xor
cmpsl
stos
sub
jb
and
mov
rcrb
add
cmp
xchg
mov
ja
cld
call
gs
push
xchg
xor
pop
mov
bound
jo
scas
aaa
mov
pushf
outsb
add
xor
sarb
cmpsl
xor
fmuls
frstor
push
dec
xchg
mov
lret
inc
mov
jb
or
add
xor
mov
sbb
jl
movsl
loop
aad
jg
push
xchg
pop
xlat
xchg
in
jbe
add
sub
rol
fdivrl
push
cltd
or
mov
sbb
lret
mov
out
xchg
jmp
or
cmp
in
jmp
sub
inc
mov
aas
cmp
cmp
or
jns
cli
lcall
pop
xor
ds
pop
inc
mov
and
lock
aam
sub
mov
add
jo
add
jne
mov
xchg
lret
call
loope
push
sub
push
sub
aad
pop
mov
mov
xchg
push
sbb
add
cmc
mov
or
sub
lret
in
inc
xor
into
arpl
xchg
bound
int3
sub
mov
mov
jge
popa
addr16
fwait
shrl
pop
fiaddl
enter
test
push
pusha
add
test
xorl
jg
pop
arpl
mov
int3
sub
pop
adc
adc
add
scas
stos
mov
push
pop
int
imul
pushl
arpl
pop
xchg
add
push
lods
mov
test
sbb
adc
hlt
sbb
test
jg
and
cmpsl
popa
sti
inc
pop
icebp
fbld
mov
icebp
lcall
push
popa
dec
push
inc
add
add
popa
int
mov
inc
push
mov
lret
popf
sub
or
enter
enter
mov
xor
inc
int
loop
in
int3
incl
push
ffreep
js
jge
nop
inc
mov
xor
aas
sbb
ja
mov
mov
lods
lret
int3
adc
leave
shlb
dec
jl
or
movsb
cmp
les
movsb
pop
je
pop
push
fisttps
add
xor
pop
push
xchg
loopne
push
outsb
cmpsl
mov
sbb
xchg
loopne
icebp
jne
pop
pop
clc
lods
inc
cltd
repnz
pop
pop
addl
push
scas
shrl
hlt
mov
arpl
clts
repz
es
xor
pop
fldl
sub
test
ficompl
ja
dec
rcrl
lock
out
lahf
adc
roll
xor
test
mov
scas
cmp
imul
xchg
loop
loope
jae
movsb
mov
push
mov
inc
mov
lret
pusha
into
cmc
lds
sbb
fisubrs
adc
fcompl
idivl
popf
aad
inc
add
lea
adc
adc
mov
sbb
fsubrl
adc
mov
add
or
sar
push
rcr
hlt
js
adcb
es
cs
repnz
lods
xor
push
push
dec
inc
fsts
std
xchg
rclb
cmp
xor
push
testb
movsl
xchg
inc
ljmp
mov
sub
insl
mov
into
pop
xlat
push
cmp
mov
and
push
jae
gs
dec
es
lret
xchg
sbb
aam
gs
pop
mov
fildl
loope
adc
push
jl
aam
dec
aad
xchg
dec
push
add
outsl
fadd
add
sbb
adc
sub
lret
mov
icebp
adc
sbb
or
push
push
xchg
or
dec
pushf
xchg
stos
sarb
sub
inc
scas
mov
cmpsl
xor
adc
je
inc
jge
shlb
lods
jbe
cmp
adc
jl
repz
pushf
fidivrs
pop
mov
mov
and
and
lahf
imul
mov
adc
add
js
mov
ds
sub
mov
push
dec
mov
cmp
mov
mov
push
movl
imul
inc
adc
sub
xchg
call
mov
imul
fldenv
jmp
loopne
ljmp
aad
push
xchg
imul
lods
mov
loopne
mov
jg
push
jbe
movsl
daa
fistps
and
xchg
test
stos
scas
push
repnz
lock
loope
xchg
lahf
dec
adc
aas
push
adc
jae
lret
loopne
loope
stc
insl
inc
push
adc
aaa
aam
pop
push
mov
xor
cli
movsl
das
outsl
lcall
push
xchg
inc
mov
movsl
arpl
push
jnp
aam
ss
push
jge
stos
push
call
pop
and
out
stos
dec
jmp
or
nop
mov
cmpsb
ljmp
cmp
xlat
add
mov
xchg
cmpb
mov
stc
cwtl
jns
and
or
mov
loope
or
xor
cmp
pop
xor
ja
inc
pusha
sub
out
insb
xchg
xor
mov
jb
xor
adc
xchg
idiv
pop
inc
fdivrl
dec
jo
cmpsl
cmp
clc
mov
jge
aaa
test
fistl
bound
jle
jge
mov
lret
dec
and
out
out
sarb
and
insl
push
sbb
adc
fidivl
xchg
push
icebp
incb
jae
jnp
cwtl
and
scas
lea
push
jmp
daa
jmp
jg
inc
sbb
fwait
int
push
sub
jne
seta
std
div
inc
adc
imul
movsl
lret
and
shrl
mov
inc
fwait
or
pop
inc
into
push
push
and
sar
js
fwait
sub
dec
push
les
sti
sarl
addr16
inc
cmpsb
int3
int3
das
rcrl
xchg
outsb
ds
lret
xchg
jp
inc
sbbb
pavgw
mov
sub
pop
push
out
fmul
pop
mov
cli
shrl
dec
dec
xor
outsl
aas
je
arpl
mov
sahf
pusha
cmpsb
negb
arpl
xchg
lea
push
aam
cli
xchg
fcmovne
lea
jecxz
les
jmp
jp
clc
xchg
mov
cmc
je
xchg
xchg
loopne
arpl
pop
call
sbb
xor
inc
icebp
mov
cwtl
mov
test
aaa
mov
push
dec
imul
add
cmc
xchg
pop
pop
mov
shrb
jg
popa
outsl
adcl
lods
scas
rcrl
cmp
arpl
adc
mov
loopne
mov
sub
fneni(8087
aaa
incl
mov
sub
cmp
lcall
inc
hlt
enter
push
stos
inc
cltd
jmp
cmpb
lcall
xor
xchg
shll
sub
enter
dec
add
mov
lock
rol
mov
and
test
ret
cmp
movsl
cmp
bound
gs
pop
iret
or
adc
out
or
cs
push
into
lret
jne
fs
pop
movsl
or
jo
insb
mov
stos
mov
das
lods
outsb
ds
sub
fildl
dec
push
insb
loopne
aad
out
fucomip
push
jo
mov
ss
outsb
les
sub
arpl
in
arpl
outsb
sbb
jle
and
pop
jle
pop
loop
rcrb
cmp
mov
iret
negl
add
hlt
std
push
sar
xrelease
sbb
popa
xchg
xchg
xchg
fwait
mov
jo
inc
loop
pop
pop
jp
cmp
in
loopne
mov
inc
inc
inc
push
sbb
cmp
sub
push
add
sahf
pop
ds
xchg
inc
enter
shl
js
aaa
int3
sbb
pop
stos
inc
push
jbe
mov
daa
stos
ffreep
dec
out
hlt
mov
popf
sub
movsb
add
es
pminsw
pop
enter
or
pop
fs
enter
call
cmc
mov
inc
xor
pop
xchg
mov
or
mov
inc
out
mulb
iret
pop
pop
data16
std
in
or
enter
jae
mov
ljmp
fildll
push
inc
jnp
je
stos
bound
xor
lods
push
xchg
sub
add
xor
daa
gs
push
or
movsb
pusha
cmp
and
int3
xor
or
mov
loop
dec
sahf
ss
out
pop
jge
adc
mov
scas
mov
push
inc
mov
cmp
insl
cld
xor
pop
rcrb
xlat
or
mov
out
data16
push
mov
mov
shll
aam
lret
test
out
push
jne
cld
fidivs
notl
pusha
mov
push
mov
pop
push
scas
popf
pushf
shll
push
int3
loopne
inc
mov
mov
imul
lea
outsl
sub
or
loopne
mov
adc
and
ret
pop
mov
sahf
push
pop
mov
fadds
hlt
cs
aad
call
int3
xchg
add
data16
mov
dec
jb
push
adc
mov
mov
dec
mov
mov
scas
pop
sti
xchg
push
add
in
xor
cmp
into
xchg
xor
insb
cmp
push
imul
xchg
cmp
test
pmaxsw
ljmp
mov
or
stc
call
cmc
nop
sub
push
rcrl
inc
adc
jmp
push
fstpt
mov
out
jle
in
or
std
dec
aam
lods
push
jge
sub
fwait
lds
push
inc
add
mov
movsb
cmp
jge
add
dec
adc
lds
mov
jle
inc
bound
sbb
jge
aad
jns
ret
in
divps
jp
xchg
jp
pop
jb
iret
xchg
stos
mov
jnp
lods
rorl
out
ret
imul
gs
pop
in
push
iret
cmp
adc
loopne
in
sbb
jns
add
mov
xor
pop
sub
mov
xchg
pusha
fidivl
inc
mov
add
jo
mov
addr16
add
add
mov
mov
cmpl
cmc
cmpsl
sub
lea
inc
sub
jecxz
adc
mov
mov
push
addr16
dec
jne
dec
dec
mov
jo
int
leave
xor
xor
sbb
mov
pop
cmp
loopne
sub
mov
inc
clc
stos
notb
dec
xor
pop
test
js
mov
lods
adcb
push
mov
pop
aam
sub
add
add
in
shr
fwait
dec
fstps
mov
lods
mov
bnd
das
loope,pn
sub
test
mov
scas
inc
dec
idivl
jp
jle
push
xchg
je
sub
cltd
scas
add
add
lock
popf
and
pop
or
sub
cmp
inc
fldt
mov
outsl
dec
inc
js
mov
sub
push
mov
pop
adc
jne
or
fs
scas
add
paddsb
incl
sub
mov
pop
stc
int3
lods
jne
in
js
jns
popf
push
dec
andl
rorl
int
xchg
xchg
inc
push
imul
popf
cltd
mull
mov
jae
push
rclb
rorb
imul
mov
xlat
testl
sti
push
mov
movsb
mov
sub
mov
mov
cltd
ljmp
cmp
pop
inc
out
push
std
lahf
mov
lahf
pop
out
xor
cli
repnz
cmp
ret
mov
cmp
mov
nop
or
cmc
clc
cmp
push
mov
daa
mov
inc
fistpll
xor
or
test
jp
cmp
mov
xor
cmpsb
pop
mov
and
aaa
mov
test
jne
outsb
icebp
pop
sbb
sti
test
adc
loopne
or
push
adc
pop
lods
test
icebp
mov
inc
je
mov
cmp
addb
mov
ret
fcompl
or
cmovp
pop
insb
xchg
into
out
mov
push
lahf
push
mov
pop
mov
movsb
scas
adc
push
mov
push
test
or
cmp
add
pop
adcb
sarb
out
inc
and
mov
cwtl
aam
test
push
test
roll
dec
mov
mov
dec
push
scas
sbb
test
outsb
push
inc
pop
pusha
lods
cmp
jp
mov
mov
sub
aad
pop
xchg
lods
incl
push
repnz
mull
jge
nop
pop
mov
rorl
jae
mov
mov
jp
or
jg
push
push
out
in
movsb
fsubl
jp
enter
jl
pop
dec
sbb
fwait
or
push
mov
dec
xchg
mov
cli
or
mov
ss
jbe
out
mov
pop
arpl
out
adc
add
dec
imul
and
pop
dec
jp
call
call
pop
mov
xlat
int3
mov
in
call
std
leave
cmpsb
shlb
and
lcall
push
lea
xchg
cmpl
jbe
jle
pop
repz
jnp
sub
jae
add
sbb
mov
mov
xor
ja
rcr
fstpl
les
jg
push
out
notl
sahf
out
jmp
mov
xchg
stos
mov
xor
arpl
jnp
push
xor
cltd
pushf
mov
test
testb
push
pusha
inc
jg
and
xchg
xchg
das
xor
inc
fdiv
jp
pop
inc
sbb
iret
out
daa
cmpsl
je
xchg
lahf
outsb
ljmp
pop
jo
and
mov
jns
fisttpll
enter
mov
cmpsl
and
scas
jo
daa
daa
out
inc
mov
mov
bound
mov
rclb
imul
add
popa
mov
mov
paddusb
and
inc
mov
test
sbbl
push
jno
jmp
xchg
inc
jae
xchg
push
pop
pop
cmp
jle
lret
cmp
bswap
aas
fdivp
sahf
xor
aad
js
pop
jle
xor
xchg
in
and
dec
movsl
add
fwait
outsb
mov
dec
xlat
mov
fldenv
inc
rol
ja
pop
repz
outsl
in
out
stos
sub
jo
out
loopne
imul
cmp
test
loopne
sub
mov
xchg
or
aam
dec
sub
lock
cltd
jns
jne
and
and
fadds
ss
cmp
inc
mov
mov
mov
dec
jnp
xchg
xchg
cmpsb
sub
xor
insl
pop
sbb
in
ret
adc
xchg
stos
or
fisubs
mov
out
adc
xchg
jns
mov
movsb
lcall
or
stos
jge
mov
dec
cltd
call
pop
jns
jno
cmp
bound
mov
into
cmpsl
mov
or
mov
jae
int
cmpsl
pop
iret
fnstcw
mov
in
xor
les
cmp
nop
mov
cwtl
loope
mov
fdivp
push
shll
add
pop
xchg
loope
imul
and
icebp
cwtl
nop
dec
xor
ljmp
dec
push
jl
pop
rcrl
jecxz
stos
aam
movsb
add
aad
push
pop
push
push
in
in
push
adc
popf
pop
lods
adc
mov
fadd
cld
sub
ss
push
inc
das
addr16
ret
insl
test
lret
cltd
xchg
cld
adcb
arpl
lcall
cmp
std
fnsave
fistpl
les
push
shl
sub
xchg
lcall
or
shll
and
jno
lock
push
mov
dec
jmp
xchg
fstp
shll
into
test
lahf
add
lods
or
call
les
pop
lea
popa
dec
add
hlt
pop
dec
fldcw
hlt
mov
mulb
shll
stos
outsb
cmp
xchg
jl
cmp
sbb
jno
or
sub
pop
lods
mov
cwtl
cmp
test
mov
scas
std
call
cmp
mov
bound
roll
andb
jmp
lods
jb
dec
pushf
jg
cmpb
lods
and
mov
scas
movsb
data16
in
enter
std
sbb
notl
adc
outsl
sbb
insb
pop
push
loopne
dec
push
dec
dec
mov
and
ja
sti
dec
cs
pop
fldt
mov
into
dec
fs
sub
out
adc
mov
mov
or
dec
push
push
aam
xchg
fsubl
inc
pop
and
mov
jae
or
sub
cli
and
inc
insb
call
int3
imul
adc
mov
out
dec
vmptrst
in
cmp
xchg
adc
stc
mov
and
mov
out
mov
rorl
pusha
jmp
mulb
push
dec
inc
mov
fists
and
lcall
daa
push
pop
mov
or
sub
mov
add
jne
ret
scas
cmp
scas
push
and
xor
and
mul
xor
sahf
addr16
fnop
lahf
repnz
pushf
jp
lods
pop
push
pop
adc
add
out
rolb
iret
or
push
and
ret
loop
jge
dec
into
lea
cs
movsl
push
inc
sti
fldl
pop
ret
dec
ljmp
sbbb
jle
out
int3
jb
insb
ret
jp
iret
xchg
inc
movsb
rcl
shlb
push
cltd
push
outsb
mov
xchg
push
stos
sbb
inc
sub
mov
xchg
mov
sub
and
lret
xchg
mov
call
add
sub
lods
jne
fcoml
bound
aam
or
inc
xchg
test
mov
inc
inc
jmp
lahf
idivl
and
and
adc
xchg
daa
out
mov
sub
ss
ss
in
dec
in
mov
jnp
lret
add
mov
shll
leave
xor
jle
jp
insl
addb
fcoml
sbbl
pop
adc
add
push
lcall
cli
push
cwtl
fwait
sub
pop
pop
inc
lret
popf
popf
sbb
mov
xchg
push
popf
xchg
push
inc
pop
jecxz
and
adc
pop
les
icebp
insb
xchg
adc
adc
mov
out
jmp
inc
xchg
cmp
js
push
loope
mov
jp
nop
shrd
jnp
mov
jne
sub
push
loope
divl
xor
loop
xor
es
lret
sahf
fiadds
add
pushf
outsb
add
cmp
sbbb
jns
xor
stos
iret
mov
push
push
inc
test
pop
clc
and
cmc
shrb
sbb
xor
cmpsb
int3
xchg
sub
cmpsb
sbb
and
mov
cltd
xor
negb
dec
daa
popa
repnz
loop
das
pushf
xchg
mov
ds
test
push
jge
cmp
cmpsb
sahf
add
push
repz
xchg
jg
pop
test
mov
aaa
out
inc
into
and
fcomps
cli
repz
mov
push
mov
dec
inc
aaa
or
mov
adc
fistl
pushf
ret
mov
pop
xchg
push
xor
imul
popf
push
cmpsb
outsb
fldl
fwait
jle
lahf
into
jns
adc
xchg
sbb
and
or
xor
outsb
aad
adc
mov
sbb
or
xor
add
sbbb
outsl
add
xor
clc
shl
ljmp
fadd
xchg
push
push
adcb
sub
out
lods
and
aaa
lods
xor
mov
inc
aas
loope
fisubrs
sub
gs
outsw
pop
outsb
cvtps2pd
test
push
dec
pop
lock
xor
daa
addr16
xor
ja
mov
leave
and
cmpsb
dec
adc
add
xchg
and
cmc
mov
pop
push
jl
decl
pushf
mov
mov
jae
push
adc
es
filds
faddl
pop
inc
adc
lds
pusha
adc
in
test
mov
loopne
mov
notb
add
leave
xchg
inc
xor
imul
out
shrb
sti
inc
or
andb
aad
call
jle
push
rcll
cltd
mov
pop
adc
pop
push
dec
ds
mov
xchg
cld
jno
cld
push
sahf
pusha
in
jb
pop
adc
les
jnp
xor
les
and
or
fimuls
adc
aam
out
call
jl
aam
negb
notl
dec
scas
fsubr
cmp
push
adc
ret
jo
lret
pop
pop
jp
nop
mov
dec
movsb
and
cmpl
aam
in
aam
mov
jns
xor
out
mov
addr16
mov
mov
cld
and
int
lods
bound
and
jnp
add
bound
push
test
xchg
xor
outsb
lods
sbb
les
add
lds
in
ss
movsl
loope
mov
loope
aas
aad
loopne
inc
ret
add
and
push
dec
popf
insl
in
gs
dec
mov
jne
adc
xchg
test
rorl
ret
adc
out
out
std
xchg
jmp
and
inc
xchg
mov
clc
push
sub
out
cmc
jns
or
or
fcompl
add
mov
daa
loop
loop,pt
das
repnz
adc
jle
mov
cmpb
xchg
mov
fwait
mov
add
cmpl
push
rcl
push
add
cmp
jg
shll
push
popa
out
cmp
scas
pop
mov
cmp
out
jnp
movsb
movl
jbe
cmp
stos
sti
imul
fisubrl
rolb
or
xchg
push
stos
movsl
nop
or
mov
sub
adc
inc
les
cs
mov
fisubs
mov
loop
mov
push
in
lret
popf
popl
or
ljmp
add
mov
shl
adc
dec
cmp
fmul
iret
dec
stos
dec
hlt
das
sub
sbb
das
iret
xchg
fists
out
cmp
lcall
sti
jge
mov
sub
jo
test
pushf
enter
mov
movsb
rclb
lahf
jle
sub
mov
insl
add
imul
push
stos
mov
xchg
dec
xlat
test
icebp
rcll
lock
loope
sub
repz
or
shl
sbb
or
leave
gs
fistpl
push
ret
hlt
jae
mov
lock
js
stos
sbb
and
pushf
pushf
fiadds
push
ret
aam
push
das
and
in
adc
in
ret
in
sahf
jge
jae
sub
sarl
ja
jno
cmp
mov
cmc
leave
mov
pop
jo
insb
dec
fwait
jmp
xchg
inc
inc
mov
out
add
sub
inc
or
or
jno
or
jnp
add
and
aas
in
movntps
xlat
mov
inc
cltd
shl
push
rolb
movsb
cmp
cmp
sbbl
js
in
out
and
mov
bound
jp
adc
mov
xor
mov
lahf
sbb
lret
fs
daa
test
repnz
in
frstor
mov
pushw
lods
cld
lock
imul
and
or
out
in
add
mull
insb
js
in
xchg
repz
mov
sahf
ljmp
inc
notl
jno
fists
inc
lret
jo
adc
push
sbb
add
mov
rcl
fimull
jo
cmp
dec
add
push
xor
lret
hlt
push
lahf
je
sbb
mov
mov
sub
push
test
lods
jmp
push
lret
out
jnp
sub
je
mov
sahf
rclb
popf
cld
sarb
add
neg
push
cmp
daa
insl
sbb
lea
stc
mov
and
pusha
sbb
dec
popf
add
mov
jno
sbb
jl
repnz
jne
fsubrl
pop
popa
mov
cmpsl
int
imul
xchg
cmp
out
xchg
cmc
jmp
pusha
cwtl
or
scas
xor
or
sbb
sbb
mov
push
movsl
int
mov
inc
les
imul
and
adc
push
sub
jmp
lds
sub
sti
loope
and
and
sub
movsb
test
call
push
push
adc
sbb
xor
outsb
or
sbb
jp
lcall
pusha
pop
sub
xorb
inc
cli
shll
out
shl
pushf
dec
cmp
jmp
imul
fwait
mov
repz
mov
bnd
xchg
push
rcl
jae
cmpsb
lret
movb
in
jp
test
jnp
aas
pop
cmp
dec
jns
sub
push
jns
sub
nop
cld
daa
sbb
test
sub
mov
dec
int
dec
pop
pop
roll
mov
mov
jmp
mov
push
clc
mov
cmpsl
test
adcl
push
sahf
call
xchg
aas
repnz
in
pop
mov
negl
cltd
dec
popa
enter
fwait
jne
mov
cmp
cwtl
ret
jecxz
ffreep
scas
mov
fdivrl
icebp
test
mov
pop
lods
hlt
push
lahf
stc
lahf
frstor
js
jge
cmpsl
loopne
mov
pop
pop
push
jecxz
aas
cwtl
mov
jle
daa
jmp
push
lahf
out
sbb
push
int3
xor
pop
cmp
test
inc
and
pop
imul
jb
fwait
add
popa
mov
fldcw
push
hlt
or
mov
rorl
fsubrs
fmuls
cmp
pushf
sahf
pop
xor
sub
fisttpll
clc
outsb
push
xor
int
xor
lea
mov
call
enter
test
inc
push
movsb
jmp
mov
outsb
push
scas
jecxz
pop
mov
ss
sysenter
or
mov
xchg
int
push
sub
pop
push
dec
sahf
leave
inc
inc
iret
pop
sub
mov
frstor
cmp
cwtl
sbb
fldl
std
xor
inc
ret
outsl
jne
iret
fsubs
mov
stc
and
dec
in
push
popf
sub
sub
add
cmp
mov
mov
ds
cld
sub
sbb
sub
frstor
call
adc
mov
and
pusha
inc
subb
repnz
mov
inc
cmc
sarl
adc
gs
xor
insl
dec
push
cltd
enter
popf
je
xor
mov
shlb
jl,pt
test
scas
cmp
sti
lods
aaa
adc
jle
hlt
das
mov
sub
pusha
dec
sub
in
add
scas
inc
fisubrl
rcll
adc
mov
ja
xor
mov
clc
aas
mov
movsl
es
cwtl
cwtl
xchg
flds
aad
pusha
das
pop
pop
xor
lcall
movsl
dec
pop
popa
mov
fwait
insl
in
push
jb
dec
inc
push
cmp
mov
sbb
cmpsb
ret
mov
mov
out
mov
push
into
cmovns
xor
or
test
pop
fmuls
pop
data16
das
cmp
and
out
dec
xchg
enter
sbb
addr16
or
or
push
test
sarl
cmp
pop
mov
ss
addr16
jmp
mov
pusha
insb
pop
test
jg
xor
stos
arpl
pop
adc
sub
sahf
cmp
xchg
xchg
sbbb
shrb
sub
xchg
lahf
push
insl
mov
xlat
cmp
hlt
sub
sti
movsb
cld
loopne
fstpt
xchg
out
xchg
lret
lock
sub
cmp
mov
xor
pop
mov
roll
jge
and
inc
xor
cltd
bound
or
rclb
and
xor
fcompl
ficoml
mov
push
cli
pop
mov
and
fwait
into
mov
adc
jl
add
mov
cwtl
loope
jl
test
gs
test
aam
stos
xchg
jae
push
jo
or
jno
rcl
decl
xchg
dec
mov
dec
jae
call
lcall
mov
sbb
add
mov
out
pop
xlat
setb
addb
inc
mov
nop
mov
xor
cmpsl
push
outsl
and
fldcw
cs
data16
jg
lcall
dec
inc
je
cmpsb
mov
fistps
push
mov
push
int3
dec
lret
pop
and
push
adc
mov
vcvttps2dq
mov
les
frstor
mov
in
aas
cmpsl
int3
xchg
rclb
fwait
sub
xor
int3
dec
lods
cmp
jmp
out
jne
jnp
adc
cmp
and
xchg
ja
add
mov
adc
mov
fcom
mov
push
cld
mov
push
popa
xchg
dec
dec
popf
es
jp
push
iretw
lods
cmpsb
dec
test
out
add
sub
fcompl
ljmp
push
pop
push
cld
test
cmp
cltd
mov
insl
fbld
push
rcrl
repz
pop
dec
es
jp
cmpsb
les
lock
add
cmp
mov
jae
push
jl
and
or
mov
gs
je
outsl
inc
xchg
xor
lea
int3
aad
js
xchg
jmp
lcall
xchg
xchg
ret
dec
and
repnz
or
or
ret
mov
inc
xchg
sarl
mov
jo
xor
add
sbb
data16
push
das
mov
bound
push
sbb
aas
xor
lock
jecxz
ret
scas
jmp
scas
shrl
or
std
push
mov
repnz
popa
cmp
and
xor
fiaddl
out
test
mov
orb
aam
outsl
cmp
push
inc
out
push
lcall
fdivr
xrelease
aad
stc
add
int
sub
push
add
jl
dec
xor
pop
fisttps
jne
test
add
push
rcrl
in
push
jb
mov
pop
es
jge
pop
cmpsb
in
mov
scas
mov
and
dec
outsb
xchg
sbb
shlb
faddl
repz
sbb
test
aas
aaa
fsubp
std
into
lock
outsb
repnz
fidivs
jae
cmp
lods
imul
lods
data16
sbb
xor
scas
frstor
sub
xor
movsb
pop
mov
pop
lret
stos
lods
ja
xor
xchg
repz
test
outsb
xchg
movsl
mov
xor
sub
push
sub
fsubrs
pop
mov
or
or
dec
inc
push
dec
insb
leave
mov
push
ja
cmpl
dec
cmpsb
mov
push
outsl
frstor
ret
jns
filds
data16
jae
ffreep
add
mov
test
popa
movb
fldt
daa
jae
lods
pop
lods
sarb
cltd
push
dec
xchg
add
lret
sbb
inc
or
push
push
fisubrl
mov
int
push
add
pop
mov
or
std
adc
fnsave
pop
add
mov
cli
lock
mov
cmp
inc
hlt
sahf
hlt
out
cmp
adcb
dec
stc
ljmp
mov
fildll
inc
cli
jno
lret
sub
xor
loop
loopne
mov
cmp
out
sbb
jb
inc
xchg
std
test
sub
jbe
sbb
stos
sbb
pop
fsubrl
xchg
ss
jb
repnz
cmp
cmc
cmpsb
sbb
cmp
mulb
push
sbb
sbb
lods
mov
xlat
aaa
mov
testl
testl
mov
or
xchg
or
xor
sbbl
mov
sbb
cmpl
rcr
aas
stc
inc
or
sub
sub
mov
bound
orb
scas
daa
mov
mov
add
sbb
fsubrs
ss
les
sub
ljmp
nop
jae
fistpl
leave
lods
rcll
and
pop
arpl
xor
dec
push
mov
fisubrl
divb
loope
push
stos
xlat
jae
popa
mov
dec
sbbb
mov
and
ret
and
outsl
jo
repz
push
xor
mov
popa
lret
jle
stos
mov
movsb
push
mov
dec
hlt
xor
icebp
pusha
push
and
pusha
push
push
or
cmpsl
or
cmp
sbb
mov
sub
imul
les
in
jb
mov
lret
out
fdivr
lcall
pop
lock
outsb
push
pushf
or
pushf
pushf
cmp
jae
jp
adc
popf
xlat
clc
add
sub
pop
and
adc
lds
mov
sar
and
arpl
mov
scas
xlat
loop
jmp
arpl
push
stc
ss
lods
in
xchg
imul
shrl
jg
sbb
icebp
fldt
lcall
jo
push
dec
stos
pop
sub
xchg
icebp
cmp
bound
jno
orb
lahf
fcoms
push
xor
inc
jae
ret
stos
and
mov
in
jno
test
subl
jb
dec
jb
loope
mov
int3
pop
lret
mov
stos
fcoms
cmp
jb
fwait
fildl
pop
mov
out
mov
test
fldenv
and
icebp
sti
dec
xchg
push
sub
sub
cwtl
mov
icebp
cld
mov
inc
adc
sbbb
push
cmp
data16
push
iret
out
pop
fs
mov
addr16
mov
lock
jbe
jno
pop
cmp
stc
test
cld
mov
enter
cmc
sbb
popa
xlat
push
sbb
adc
outsl
push
lcall
adc
in
mov
jns
cmp
sbb
mov
dec
add
push
or
ja
and
addr16
in
nop
cwtl
nop
adc
cmpsb
pop
mov
cmc
jne
pop
cld
sahf
push
push
and
scas
mov
data16
push
cmpl
mov
push
pop
dec
insb
push
sbb
add
xchg
xchg
cwtl
in
or
outsb
push
jp
sub
mov
adc
fisubrl
loop
call
cmpsb
push
shlb
xchg
sti
stos
xor
xor
int3
imul
fisubl
inc
xchg
fwait
jne
jge
comiss
out
pop
mov
dec
fadd
nop
dec
pop
and
lods
jmp
cwtl
jae
popa
jl
adc
adc
das
cmpsb
xchg
sub
dec
dec
cmp
sahf
dec
mov
cwtl
or
enter
cld
jmp
add
jle
ret
jmp
js
cwtl
test
test
jge
repnz
mov
mov
sahf
sbb
push
movsl
mov
sub
xor
adc
push
sbb
in
iret
mov
xchg
push
add
jbe
pop
jg
popa
xchg
cld
popa
sub
js
jl
sub
xchg
sbb
sbb
clc
or
arpl
xchg
adc
lahf
xor
or
xchg
outsl
push
outsl
xor
les
addr16
dec
je
loope
sub
sbbl
xchg
sbb
mov
cmp
inc
loop
fists
sub
pop
cli
dec
xchg
fstpt
mov
adc
subl
add
and
mov
mov
rorl
js
xor
pop
cmc
sbb
add
jg
xchg
mov
jne
mov
je
in
std
jge
or
test
mov
add
outsb
scas
and
mov
mov
pop
pop
sbb
in
aam
or
jg
popa
xchg
dec
adc
out
out
leave
mov
enter
hlt
jns
imul
cmc
lret
jnp
mov
faddl
cld
inc
xor
imul
cli
pusha
fistps
mov
inc
dec
sbb
out
int
lods
imul
add
roll
out
fildll
jmp
movsb
pop
es
xor
das
mov
mov
jb
mov
mov
pop
cmp
insl
fs
push
adc
lahf
xor
out
jmp
int3
dec
inc
idivl
xor
lods
add
add
sub
push
imul
cli
lods
adc
ss
stos
pop
push
sbb
insl
fidivrl
lcall
xchg
call
xchg
inc
js
mov
ja
dec
subl
addr16
pop
fisttpll
rclb
es
xchg
subl
jne
lea
xor
mov
push
xor
fnsave
push
es
lock
dec
cld
mov
xlat
test
mov
push
movaps
jmp
sbb
pop
xor
clc
cmp
popa
cmc
mov
insl
lret
pop
jecxz
adc
jg
sub
movb
inc
cmp
aaa
pop
loopne
stos
cmpsl
push
addr16
or
push
xor
push
cmp
sub
bound
cmp
lea
cwtl
or
repnz
jle
xchg
jp
pushl
jl
or
jne
inc
jp
into
sbb
fucom
push
jp
leave
jecxz
aam
rcr
lea
test
repz
sarb
xorb
and
js
mov
dec
xchg
mov
sbb
leave
loopne
push
movl
insb
xchg
call
lds
lret
and
orl
repnz
jo
xor
bnd
leave
ds
lea
imul
out
fbstp
js
dec
or
push
add
or
aam
jecxz
mov
jg
jl
sbb
in
xchg
loop
and
mov
aad
addr16
icebp
ss
sbb
xor
lea
dec
repnz
pop
cmp
push
sbb
ret
dec
or
icebp
jne
mov
in
jae
push
rol
inc
stc
sbb
lea
adc
pop
imul
and
loope
jnp
xor
sub
xlat
lcall
dec
pop
fiaddl
mov
outsb
push
jg
in
sbb
fildl
out
mov
pusha
mov
test
into
or
fbld
mov
lcall
xorl
imul
test
sbb
shrb
sahf
pop
sub
and
scas
leave
cmp
pop
push
xor
fisubrs
ret
dec
mov
pop
in
cmpsb
inc
in
cmp
jnp
fimuls
cltd
repz
cs
fs
cmp
dec
sbb
xlat
arpl
rorb
add
pop
inc
jno
and
cmc
cwtl
mov
fbstp
ljmp
mov
pop
je
jge
pop
rcll
scas
cmp
lea
in
fwait
xchg
push
sahf
cmpsl
inc
push
movsl
iret
in
cli
repnz
and
cwtl
sub
cli
aaa
stos
adc
in
fwait
out
pop
adc
js
or
rcl
dec
sub
into
lock
cmp
push
xchg
xor
popa
sbb
lret
xor
leave
and
sbb
add
adc
dec
pop
pop
jno
cmp
loope
out
xchg
lcall
add
in
sti
push
xor
outsb
mov
negb
dec
pop
sub
out
pop
xchg
inc
mov
imul
mov
sub
mull
and
jnp
fdivrs
outsl
dec
or
mulb
in
ficoms
out
hlt
mov
sub
ret
lds
mov
adcb
pop
in
stos
mov
push
push
cli
punpckhbw
and
mov
stos
insl
icebp
or
xchg
arpl
add
repz
lcall
into
jmp
in
xorl
movsl
unpckhps
aam
adcl
pop
daa
aad
xchg
xor
out
jbe
repz
xchg
cmp
and
add
out
subl
in
es
jmp
movsl
je
add
sub
dec
adc
xlat
ss
rorl
add
xchg
sarl
inc
jl
ja
and
out
mov
mov
cmp
push
add
jno
nop
or
cltd
cld
pop
imul
sub
push
ret
inc
fstpl
inc
mov
mov
rolb
xchg
aas
cmpsl
insb
fstpt
popf
pop
in
dec
mov
and
sbb
xacquire
sub
jns
cmc
int3
mov
jo
in
sub
add
ljmp
push
jne
int3
arpl
mov
cmpsl
leave
xchg
xchg
mov
iret
test
fs
fs
mov
jge
mov
mov
or
mov
sbb
and
out
loopne
repnz
mov
and
sbb
or
je
push
and
dec
popa
daa
pop
out
daa
xchg
pop
insl
aaa
dec
and
lds
cmp
shll
and
cmp
sbb
ret
ret
inc
call
int
or
daa
lret
sub
mov
divb
push
adc
dec
xor
adc
popf
or
loope
movsl
push
stos
mov
jle
loope
pop
xchg
xchg
add
pushf
stos
pop
aad
jno
sbb
cmpsl
mov
fcmovnbe
ret
mov
lock
std
test
lods
fbld
leave
and
ljmp
enter
stc
mov
jmp
les
and
stos
xacquire
cmp
clc
xor
or
pop
push
loop
into
xchg
jns
sub
and
fldenv
mov
out
movsl
pop
mov
inc
fnstenv
and
xor
hlt
sub
add
cwtl
xor
sbb
cmp
push
push
cmpsb
loope
or
push
dec
mov
pop
mov
pusha
clc
repz
and
iret
loop
pop
cmp
ljmp
cmp
or
sbb
fs
lret
push
inc
sub
push
add
inc
sti
lret
fs
push
stos
inc
push
sbb
rcl
push
xchg
ds
adcl
push
std
xchg
mov
pop
out
push
das
stc
push
cmc
insb
jp
xor
add
ficoml
outsb
jmp
xor
int
cwtl
je
in
aam
sub
mov
ror
xchg
popf
ss
inc
and
pop
out
sub
cltd
in
in
adc
adc
pop
xlat
adc
cmp
jecxz
lret
push
jo
or
int3
xor
shlb
int
fisubrl
mov
xchg
cmpsb
pop
imul
pop
in
stos
adc
jns
pop
adc
add
loope
and
dec
cmpb
cmp
mov
arpl
sub
and
or
push
js
mov
hlt
push
jp
insl
fsubp
jae
lea
push
pop
into
shll
dec
push
ds
sub
sbb
sbb
sbb
jg
call
push
cmp
cwtl
push
sub
mov
jb
lahf
sbb
enter
pusha
mov
jmp
in
push
jns
fstps
fsubs
in
xor
adc
fiaddl
sub
cmpsb
jle
push
dec
push
addr16
push
addr16
dec
xchg
sub
mov
sbb
cwtl
adcl
jmp
fsubl
dec
mov
adc
adc
leave
scas
cmpsl
std
cmp
mov
scas
push
jmp
int
push
cmp
xchg
jecxz
adc
jle
repz
xchg
and
and
sbb
in
sbb
fimuls
jae
and
int
dec
movsb
push
push
je
test
rolb
stos
pop
or
adc
mov
xchg
and
aam
xchg
inc
mov
sub
mov
in
or
inc
sub
jle
test
std
mov
sbb
cmc
xor
push
sub
xchg
lds
mov
xlat
xchg
outsb
stc
xchg
mov
pop
pop
ret
sub
adc
adc
rorb
sbb
lahf
out
xchg
arpl
test
es
sti
add
repnz
push
cmpsb
dec
mov
shlb
and
add
mov
lods
insb
jb
outsl
jb
push
mov
sbb
xchg
fcomi
inc
stos
fisubrl
scas
imull
insl
cmpsl
dec
jno
mov
lds
mov
clc
stc
lods
jmp
or
daa
mov
bound
scas
inc
pop
dec
idiv
stc
sub
add
add
icebp
repnz
fcoms
cwtl
sub
test
push
lods
jnp
rcrl
pop
andl
xchg
loopne
mov
fucom
jae
jecxz
jns
xchg
adc
dec
test
pushf
lds
and
ror
cmp
enter
fsubrl
mov
xor
icebp
nop
adc
shlb
xchg
push
mov
xor
out
mov
dec
ss
jmp
add
and
cmc
arpl
test
es
in
cld
sbb
hlt
pop
jmp
mov
mov
push
push
test
adc
ss
cwtl
imul
mov
xchg
clc
loop
and
mov
movhps
mov
push
xchg
ret
cli
dec
xor
mov
xchg
je
fstps
push
int
adc
add
dec
or
jp
dec
xchg
pop
decl
sbb
push
mov
push
sbb
ret
sbbl
hlt
sub
inc
sbb
rolb
ljmp
int3
xchg
or
negl
sahf
stos
loopne
jae
sti
jmp
test
ret
dec
jl
push
in
mov
popf
cmp
icebp
xchg
nop
cmp
bound
call
or
in
mov
push
add
mov
dec
aam
arpl
push
jmp
je
pop
pushf
daa
sbbb
aaa
repz
push
adc
lret
jle
pop
dec
outsb
test
push
mov
xchg
fdivr
fldcw
sbb
ds
sbb
scas
xchg
mov
ds
sub
icebp
loopne
cmp
xchg
addb
mov
loope
aas
and
xchg
sub
jo
test
pop
sub
push
mov
fwait
rcrl
hlt
sub
pusha
mov
jp
push
dec
in
lret
daa
cltd
out
and
bound
out
mov
fs
aam
outsb
stos
fdiv
pop
lret
pop
push
imul
stos
jg
loope
sahf
and
jo
js
xor
shrb
test
pop
mov
and
addr16
inc
fstpt
mov
jnp
push
out
sbb
mov
mov
xor
jle
rcl
ret
les
mov
jo
push
mov
bound
and
and
add
in
shl
jo
xor
jg
or
imul
lret
jno
fs
and
mov
loopne
mov
nop
or
push
add
cltd
add
int3
mov
jl
aad
test
pop
push
cltd
ret
jge
jg
mov
loop
imull
fwait
and
lods
mov
xchg
lds
fwait
mov
adc
imul
aas
push
jge
lahf
mov
push
or
lods
ss
mov
pop
imul
xor
sub
outsb
inc
mov
and
and
addr16
sub
sub
movsl
and
ror
pop
cmp
mov
push
cs
lock
push
sbb
lods
xor
subl
mov
mov
add
clc
or
and
or
and
inc
fidivl
pop
sti
add
xchg
cmp
cmp
xchg
into
pushf
pop
pop
inc
inc
adc
jb
xor
aad
cmp
push
push
stc
outsl
pop
jl
push
cs
push
imul
addr16
pop
and
lea
mov
sti
in
push
mov
cmp
mul
mov
cwtl
jno
mov
add
testb
inc
add
shll
push
inc
sbb
add
fildl
lret
sub
mov
push
pop
adcl
dec
movsb
mov
cmpsl
pushf
sarl
pusha
call
repz
div
arpl
pop
push
mov
sub
mov
adc
cmp
jmp
sbb
xor
or
lea
mov
icebp
aad
xchg
xor
jo
inc
lods
repnz
push
loop
sub
repnz
das
lahf
mov
and
icebp
inc
jo
stos
mov
jmp
inc
sbb
xchg
inc
xlat
stc
and
pushf
jno
xor
cmp
and
in
push
in
push
pusha
bound
push
int
rcrl
sarl
cmpsb
sbb
loop
xor
push
xor
push
lret
xchg
inc
in
pusha
inc
loope
arpl
and
xchg
lret
loop
xchg
fstps
and
pop
addl
je
fs
pop
cmpsl
xchg
add
mov
inc
sbb
or
mov
insl
push
push
fcom
push
dec
jo
enter
cmpsl
rol
stos
pop
fwait
int
scas
add
pop
push
xchg
stc
add
push
jmp
adc
insb
cmp
mov
outsb
call
jne
stos
lcall
in
adc
cmp
test
xchg
pop
push
cli
xor
push
add
dec
mov
shll
fcoml
ljmp
push
lds
bound
adc
mov
fstpt
jge
stos
inc
mov
mov
aam
mov
in
jne
pop
mov
nop
pushf
loopne
cmp
scas
sbb
in
push
add
std
rorb
icebp
and
std
popa
xor
push
add
push
and
fisubrl
and
out
sbb
movb
pop
jecxz
outsl
pop
mov
mov
or
sbb
ds
je
testl
push
in
repnz
sub
sti
or
or
dec
dec
dec
out
mov
subb
mov
out
xchg
inc
outsl
mov
jl
mov
gs
imul
push
iret
pop
push
xchg
sub
or
sti
scas
fdivrl
mov
sbb
pop
dec
add
insl
adc
shr
inc
sbb
aaa
in
insl
adc
pushf
pop
jecxz
sbb
mov
daa
dec
test
jl
mov
cmp
sarb
shl
and
sti
sub
arpl
sbb
sub
aad
lock
push
out
sub
fisubl
jmp
jne
nop
mov
mov
test
and
sub
in
jmp
mov
and
adcb
pusha
push
int3
or
mov
inc
adc
xchg
aas
pop
mov
cmp
jmp
mov
or
adc
sub
xchg
xchg
test
mov
loopne
cld
jbe
xchg
cli
popa
loop
jge
xchg
cmpsb
jne
lret
dec
cmpsl
bound
push
arpl
and
movsb
push
mov
pop
push
insb
lods
mov
xchg
scas
cmp
mov
inc
sti
sbb
lret
mov
cmpsl
cmpsb
xchg
push
pop
into
les
jmp
inc
repnz
jbe
fldl
push
popa
leave
cmpsl
or
and
mov
adc
stos
fisttpl
cmpl
mov
jne
push
addr16
das
or
loopne
sbb
fdivs
fcmovnb
nop
push
mov
int3
out
loope
xor
repnz
dec
or
or
xchg
pop
ss
adc
and
test
mov
sub
mov
or
mov
mov
sbb
pop
jae
cmp
ret
inc
push
dec
cld
mov
mov
sbb
and
sahf
jecxz
aas
jo
adc
mov
adc
movsb
mov
out
test
bsr
js
pushf
gs
ret
inc
add
add
and
mov
cwtl
xchg
pop
mov
cld
mov
es
push
lret
shlb
test
aas
and
mov
push
sbb
inc
xchg
les
mov
jo
ss
mov
ret
ret
dec
mov
mov
mov
or
jl
dec
jne
shll
pop
pop
inc
cmp
dec
test
pop
jl
dec
hlt
pop
stos
scas
imul
mov
dec
icebp
vmaxpd
das
outsb
mov
pop
mov
lods
arpl
xchg
dec
fstps
gs
scas
push
das
test
jp
shrl
std
iret
or
mov
rcrb
mov
add
scas
push
out
mov
fsubr
adc
push
cmc
xlat
insb
js
fsubr
lods
and
daa
leave
xor
pop
test
loopne
dec
shlb
add
stc
push
mov
pushf
xor
xor
xor
dec
scas
dec
xor
lods
fmuls
jb
inc
pop
push
fistl
fdivrs
movsl
shl
cld
pop
cwtl
outsl
enter
cltd
cmp
push
sarl
sbb
mov
fmull
mov
lds
and
or
xor
das
pop
jl
xchg
pop
adc
arpl
insb
and
out
xchg
xchg
mov
xchg
in
hlt
mov
jnp
push
mov
fildll
lods
repnz
jnp
iret
pop
enter
adc
in
mov
cs
adc
or
xor
int
xchg
inc
clc
sti
push
or
aad
adc
adc
add
mov
xor
out
ljmp
test
cmp
std
xor
insb
mov
xchg
loope
sub
idivb
sarl
sub
lods
pop
pop
push
fists
cmp
arpl
xchg
push
mov
jl
mov
cmp
pop
mov
push
xchg
adc
adc
and
mov
adc
mov
jne
int
rorb
xchg
adc
add
cmp
icebp
lods
jae
mov
ret
fsubl
or
jb
adc
inc
mov
jb
call
adc
mov
dec
fwait
cmpsl
xchg
mov
push
cmpsb
mov
fldenv
push
pop
xor
cmp
cltd
dec
loope
dec
data16
das
adc
inc
sub
cld
or
stc
gs
call
aam
mov
flds
pop
push
test
pop
inc
sub
test
orb
sub
pop
cmc
mov
and
jne
rcl
push
mov
xor
pop
sbb
jb
pop
jg
and
jge
push
arpl
fdivs
orps
dec
shrb
bnd
mov
jg
ss
mov
and
cs
cwtl
decb
out
push
arpl
in
fdivrl
dec
cltd
popa
push
sbb
adcl
push
add
jne
push
xchg
or
cld
jne
sub
xor
sub
push
insl
sbb
add
addr16
out
mov
hlt
int
sbb
fmuls
sbb
es
ds
mov
inc
jmp
idivb
cs
test
dec
pop
ret
clc
adc
aam
pop
pop
mov
lock
shrb
jo
mov
mov
repnz
into
xchg
aas
add
xchg
xor
push
in
clc
adc
push
mov
mov
dec
sub
pop
dec
sub
int
sbb
add
jno
sub
add
mov
je
nop
addr16
add
sbb
sarl
or
jnp
cli
pop
xchg
movsb
push
fimuls
mov
cmp
mov
sbb
lea
mov
and
out
push
repz
adc
mov
cmp
xchg
mov
sub
fwait
push
movsb
push
call
mov
or
inc
push
sbbl
and
sbb
stos
fnsave
stos
addr16
push
cmp
daa
add
mov
dec
loope
jbe
enter
aaa
mov
outsl
ljmp
fbstp
xor
pusha
clc
cli
mov
pop
mov
pushf
lea
xor
and
sub
shrl
mov
dec
xlat
add
ja
mov
cmpsl
rcll
scas
enter
and
dec
push
mov
mov
aas
jns
int3
pusha
and
jae
xchg
hlt
dec
push
or
fidivl
jnp
and
adc
mov
cmpsb
mov
inc
pop
and
jmp
addr16
xchg
ret
stos
test
inc
shrb
pop
rorb
data16
mov
mov
inc
dec
and
inc
shll
insb
sahf
fdivl
xorl
outsb
lahf
out
inc
sti
mov
xchg
mov
es
jo
ret
std
push
iret
rcll
push
adcb
cmp
adcl
mov
inc
xor
aaa
into
into
add
mov
mov
ret
js
call
stos
inc
adc
shl
clc
push
inc
pusha
fst
xchg
rol
test
dec
jg
out
add
sbb
movsb
cmp
push
lcall
jo
daa
inc
shll
fidivrl
sub
sahf
jp
adc
jno
sbb
loop
aaa
test
mov
test
push
lcall
xor
sbb
jb
dec
std
iret
adc
iret
dec
mov
jle
jmp
stos
sbb
mov
inc
sub
and
fdivl
lret
mov
push
dec
scas
and
pushf
imul
pop
mov
lret
push
aaa
aam
and
dec
cltd
int3
cwtl
add
loopne
leave
add
jmp
dec
mov
dec
and
cli
or
jecxz
cmp
lcall
push
sub
in
mov
xchg
in
aas
insl
mov
adc
and
push
ss
fucompp
jb
push
add
inc
add
pop
inc
add
inc
cmp
mov
sar
inc
packssdw
das
push
and
mov
lods
jo
jmp
jp
je
mov
nop
cmpsl
bound
andb
sbbl
sbb
lcall
out
stos
test
call
mov
in
pop
pop
mov
and
scas
rcr
hlt
jne
out
es
dec
jle
xor
sti
in
mov
cmp
dec
nop
and
xchg
or
sahf
stos
cmp
lods
iret
repz
push
lea
xchg
clc
xchg
jle
fs
lods
sub
push
cli
push
pushf
pop
or
mov
lds
sub
add
in
jge
jp
push
dec
jnp
fsubr
push
nop
es
cmp
jns
jbe
fiadds
mov
add
popa
les
mov
fcomps
in
or
add
jo
mov
adc
jns
fwait
pop
aas
or
das
dec
add
mov
push
xchg
pop
jg
aaa
ret
push
and
fisubs
nop
shrl
sbb
sarl
mov
shll
mov
jae
mov
cmp
pop
jnp
cmpsb
sti
sub
mov
inc
cmp
aad
push
divb
push
cli
mov
iret
fstl
scas
mov
mov
lcall
pop
fsubr
shl
popa
clc
fcmovnbe
test
cmp
lods
mov
es
cmp
out
mov
addr16
xchg
xchg
test
js
push
inc
cwtl
sub
mov
add
insb
dec
xchg
dec
nop
lret
dec
mov
pop
xchg
mov
iret
les
pop
add
and
add
dec
popf
fnstsw
out
repnz
ja
out
and
pop
outsb
push
sti
shrb
jle
jne
mov
imul
xchg
or
movsb
shr
fsubl
inc
aam
and
cwtl
fs
inc
xchg
aam
out
sub
fsubl
cmp
or
rcrl
mov
mov
imull
inc
jmp
mov
adc
outsl
aad
cmp
pop
adc
ret
xlat
sub
inc
fcmove
std
sbb
sarl
into
test
adcl
fsubs
nop
test
mov
outsl
inc
sub
push
cmpsb
out
mov
in
mov
pop
out
das
mov
call
and
xor
dec
sarl
adc
sbb
mov
lods
movsb
add
leave
fstpt
mov
test
mov
push
mov
loop
scas
loop
test
popa
or
nop
jle
push
daa
fdivr
push
inc
ss
shrb
push
fsubrl
inc
jo
adc
leave
out
mov
mov
jp
leave
cmpsl
pop
push
repnz
dec
je
les
adc
nop
aad
jmp
mov
dec
cmp
fmul
sti
popf
inc
in
jb
mov
ret
fnstsw
sub
or
enter
out
sub
xor
inc
push
mov
or
shlb
fadds
ds
test
fwait
push
mov
das
cmc
sub
and
and
add
mull
scas
jnp
pop
sub
cmp
xchg
loop
dec
loopne
pusha
mov
cli
rolb
mov
push
mov
and
add
xchg
je
pop
cmp
into
ds
shl
inc
sbb
loopne
rclb
cmp
jl
ja
cmc
jl
add
lock
outsb
inc
cmpsl
xchg
into
xor
mov
pop
lahf
test
aam
and
repnz
inc
addr16
mov
pop
pop
xor
xchg
loope
out
pop
out
sbb
jo
sub
mov
idivb
aad
inc
shrl
or
mov
enter
push
aaa
xlat
jo
mov
jmp
shll
adcl
xlat
std
push
dec
lock
lods
sbbb
lcall
dec
jne
mov
shlb
int
xchg
sub
or
mov
sbb
add
outsl
es
rolb
int
jae
sbb
and
inc
fimuls
aad
sti
dec
mov
jl
ja
adc
cmp
cmp
ds
dec
mov
jmp
imul
mov
scas
jp
jno
das
pop
lock
adc
jnp
insb
repnz
xlat
rolb
adc
mov
push
cmp
loope
pop
add
clc
xor
je
imul
jg
ljmp
in
enter
mov
jmp
out
test
loopne
fisubrs
testl
push
ds
fs
push
repnz
dec
sub
ja
pop
pop
cmp
xor
adc
xor
adc
dec
lcall
mov
arpl
xchg
jg
mov
test
bound
push
divb
xchg
push
jmp
stos
outsb
movsl
dec
stos
cmpsl
daa
stc
adc
lcall
pushf
mov
scas
and
sbb
fwait
cmp
stc
sbb
mov
sbb
cmp
lret
inc
pushf
xor
push
jmp
add
enter
jmp
push
in
fistpl
test
pop
les
cmpb
pop
add
push
and
outsl
inc
ljmp
push
pop
jmp
adcl
adc
stc
add
hlt
xor
roll
push
jge
test
stc
out
dec
out
popf
sbb
dec
lea
inc
adc
sbb
lea
lret
cmp
ja
jbe
add
arpl
inc
jne
lahf
mov
mov
test
push
popa
mov
cmp
pusha
ja
or
add
jmp
push
mov
adc
mov
push
dec
inc
adc
aaa
fcomps
or
and
outsl
or
pop
lods
rolb
nop
inc
add
xchg
inc
aas
pop
rclb
mov
sbb
sbb
clc
stos
daa
jmp
cmpsl
int
stos
or
pop
pusha
gs
mov
ficoml
popa
push
jl
mov
les
dec
das
out
cld
sub
roll
add
pop
or
call
cmp
fisubs
sbb
xor
inc
push
sbb
nop
pop
push
ss
sub
push
jo
insl
add
imul
adc
adc
xor
not
sbb
sbb
negl
fcomps
fisttpll
stc
sbb
add
add
cmp
and
or
in
lods
test
inc
stc
out
inc
or
js
dec
daa
sarb
mov
sbb
jl
ret
dec
mov
aaa
adc
mov
gs
call
add
mov
mov
mov
aam
push
dec
sbb
repz
xlat
and
pop
iret
ja
lods
out
cli
addr16
lret
push
pop
adc
data16
mov
sbb
jle
push
cmp
push
cld
dec
lahf
test
leavew
bts
aaa
ret
inc
sub
cmp
pop
push
mov
daa
nop
faddl
jg
add
jbe
push
push
adc
cmc
ljmp
pusha
imulb
popa
inc
xchg
push
pushf
scas
pop
sub
call
push
inc
mov
dec
inc
mov
mov
mov
sbb
adc
shr
jecxz
and
ljmp
jmp
pop
mov
mov
add
testb
xor
es
mov
sbb
ret
mov
imul
mov
movsl
out
sbb
clc
mov
ffreep
pop
std
leave
dec
jne
cmp
push
xstore-rng
cmpsl
inc
movsl
mov
icebp
je
jg
jns
je
aaa
or
and
mov
sbb
fdivrp
fwait
ret
mov
in
addr16
mov
pop
or
out
ja
in
fsubrl
adc
push
ss
mov
test
mov
lods
es
movsb
xchg
sahf
into
jne
mov
rolb
shrl
push
mov
add
jge
mov
inc
scas
lahf
xchg
rcll
pmaxsw
sbb
sub
sub
mov
adc
hlt
subl
cmpsl
fucomip
daa
fbstp
push
movsl
lcall
hlt
push
mov
cmc
test
out
test
mov
sub
xchg
hlt
pushf
adc
js
test
imul
mov
sub
push
inc
add
fs
shlb
in
fcmovu
fnstsw
inc
aas
mov
mov
xacquire
push
mov
imul
and
jle
leave
push
mov
mov
cmp
sub
mov
lock
jne
add
xorb
pushf
push
inc
lds
mov
stos
sbb
dec
clc
das
xor
stos
test
in
clc
leave
jg
scas
cmp
push
and
arpl
xchg
sbb
jno
adc
pop
pop
mov
cli
ficomps
and
sbbb
push
pop
pop
sti
jge
or
cmp
push
fistl
mov
xor
aam
push
fwait
adc
adc
cmp
gs
insb
insb
add
push
mov
or
or
jp
xchg
xor
dec
cmp
out
mov
inc
pop
notb
stc
adc
aas
cmp
adc
repnz
outsb
xor
test
or
inc
pop
pop
and
mov
xor
iret
ds
daa
out
xor
and
xor
jne
pop
mov
jge
sbb
jmp
out
mov
imull
fstl
xchg
ret
sbb
pop
shlb
jg
sbb
rcrl
sbb
adc
cmc
in
and
mov
movsl
fsts
stos
dec
push
shrl
cmpsb
mov
sub
loopne
xor
dec
and
hlt
icebp
jmp
test
mov
xor
mov
test
or
xchg
fisttpll
mov
fisubrl
call
sbb
inc
jns
xor
adc
fcomi
out
cmc
cmpb
mov
sub
aad
mov
js
lret
xor
add
insl
xor
fs
sub
pusha
xor
adc
vshufps
jmp
dec
mull
pop
call
cld
fwait
xor
outsl
pop
fwait
sbb
loope
or
out
mov
sbb
mov
out
sub
aaa
cmpsb
jo
adc
mov
pop
sbb
jae
push
adc
push
push
sbb
push
jg
push
lods
pushf
pop
aad
push
pop
xchg
cmp
push
sub
and
mov
out
pop
add
push
fisttps
xchg
xor
ret
push
push
lods
das
add
push
out
shrb
and
sti
bound
addl
jg
aaa
repnz
mov
pop
push
mov
iret
in
add
xchg
or
dec
imul
jae
cmp
mov
push
mov
cli
pop
cmp
or
test
pushf
mov
xchg
pop
cmp
xchg
pop
jo
or
mov
sub
cmpl
mov
enter
or
testl
inc
popf
test
push
shrl
sahf
push
pop
mov
add
shll
popf
push
aam
adc
fiadds
cmp
mov
test
mov
int
scas
inc
in
pop
xchg
int
jg
andl
imul
adc
pop
and
add
sbb
out
test
and
addb
push
mov
jl
paddsb
int3
adc
cmp
inc
sub
adc
push
lcall
or
mull
jp
or
push
sub
popf
pop
jle
sbb
jae
or
jl,pn
adc
ret
rcrl
jne
rorb
lret
cld
mov
mov
xchg
and
mov
loope
or
or
xchg
inc
sahf
sbb
xchg
out
jns
lcall
inc
ss
sarl
jae
iret
outsl
jge
scas
ljmp
ret
out
inc
jno
jecxz
aad
loop
lds
stos
cli
popf
sub
inc
cli
loop
xchg
add
hlt
mov
repz
xor
mov
mov
xchg
cmp
aas
enter
add
stos
jmp
leave
pop
pushf
pop
xchg
dec
sbb
jb
jecxz
dec
pop
push
outsl
out
decl
or
clc
jns
cmc
loopne
adc
sbb
push
xor
pop
xor
and
xchg
cmp
and
std
cmc
and
lcall
addb
push
add
inc
cmp
and
mov
xor
jge
and
fldl
dec
aas
inc
out
cltd
lea
cltd
lret
scas
mov
lahf
cli
xorl
mov
fisubl
clc
mov
add
jle
pop
push
push
add
lcall
outsb
jg
gs
xor
xlat
jg
rclb
dec
push
ja
dec
mov
mov
lods
mov
cltd
jp,pn
sub
test
mov
mov
sbb
or
push
ss
cltd
iret
jmp
add
lods
mov
call
loope
sub
adc
shrl
jns
or
lods
daa
outsl
sahf
push
mov
or
cmp
lods
or
lret
sub
pop
add
rcrb
jae
jns,pn
cld
sub
jg
outsb
ficomps
inc
push
iret
clc
adc
inc
jns
pop
iret
pushf
jne
das
sub
jns
xchg
push
and
add
dec
sti
inc
fsubs
in
mov
sbb
jmp
loope
push
in
mov
adc
mov
inc
insl
add
lock
into
jo
xchg
insb
loop
iret
aam
dec
adc
lds
pop
ja
pop
lock
ss
adc
pop
out
mov
nop
xchg
out
cmpsb
cwtl
aaa
adc
cmp
or
addl
mov
add
push
cltd
fdivl
mov
pop
mov
mov
dec
dec
cmc
movb
jno
clc
xor
sti
xchg
ljmp
enter
scas
aam
inc
jp
sub
mov
mov
ljmp
or
daa
or
or
cmp
cmp
fwait
and
enter
paddw
inc
jge
iret
cmp
jae
pushf
cld
lret
mov
cwtl
inc
and
add
adc
jne
cmp
in
iret
push
stos
or
dec
dec
xor
push
xor
pusha
rclb
jmp
daa
ljmp
fbld
scas
adc
rcrl
sbb
push
sub
aas
jle
insl
arpl
in
dec
int
add
test
jle
popa
cmp
push
dec
enter
mov
push
lock
mov
xchg
jb
mov
inc
dec
cmpsl
xor
sbb
mov
popa
sbb
movsl
cmp
cmc
cld
pop
or
je
sarl
mov
cmp
mov
push
sub
arpl
rcrb
lods
outsl
repnz
push
push
push
mov
ja
cli
arpl
stos
push
cltd
inc
adc
inc
lock
or
add
push
test
subl
xor
mov
adc
inc
dec
test
insb
xor
push
fsubl
cmp
mov
inc
sbb
idivl
ss
mov
rclb
lods
sub
xchg
mov
mov
addr16
jne
jle
cltd
xchg
mov
insb
push
jg
aam
int3
jno
movsb
push
inc
clc
mov
test
and
aas
arpl
lcall
push
insb
jp
cmpsl
cmp
ja
lret
xor
push
cmp
ret
xchg
test
rcll
mov
dec
shll
fsts
sbb
pop
imul
jg
mov
xor
jne
lret
fistpl
push
cli
gs
pushf
mov
jbe
nopl
sbb
fdivrs
sbb
inc
cmp
jb
jne
test
repnz
inc
imul
mov
xchg
test
inc
jmp
das
add
xchg
mov
adc
dec
iret
test
repnz
out
jle
push
daa
jp
pop
dec
jl
dec
std
cltd
inc
mov
mov
push
mov
pop
jns
dec
adc
adc
sub
out
test
aas
shll
mov
xlat
mov
mov
mov
insl
les
or
test
push
movsb
jl
jb
fisubl
inc
xchg
and
inc
rorl
cmp
ss
pop
push
push
sub
inc
leave
adc
dec
jmp
loop
pop
pusha
icebp
dec
mov
inc
push
mov
push
cmc
rcrb
call
test
clc
cmp
rorl
out
mov
pop
aas
mov
sub
mov
ja
int3
pop
addr16
dec
stc
or
sub
fsubr
fdivrs
or
popf
int3
shl
lods
clc
sar
adc
out
lret
and
icebp
ret
xchg
shrl
js
repnz
xchg
sub
cli
icebp
lds
jge
mov
inc
je
sub
out
gs
xchg
stos
pop
fimuls
movsl
int3
cmp
mov
das
std
cmp
mov
es
mov
pop
sbbl
mov
push
call
decl
push
jno
mov
ja
inc
dec
adc
mov
ret
jae
test
sub
jmp
sbb
mov
cld
pop
sbb
jge
aas
hlt
jle
imul
rcl
cli
xchg
push
adc
push
xchg
div
sbb
mov
sbb
call
lods
and
sub
pop
and
scas
xchg
movsl
dec
mov
jecxz
outsb
fldt
xchg
mov
je
xchg
cmp
xchg
and
adc
pop
adc
inc
shrl
movsb
fidivl
imul
ret
pop
testb
mov
add
inc
inc
mov
idivl
aas
loop
mov
daa
pop
repnz
mov
pop
add
cmp
or
stos
lahf
push
in
pusha
bound
nop
lea
add
xor
pop
jle
pushf
mov
leave
xchg
popa
mov
hlt
pop
movsb
xchg
testb
jg
ss
jnp
push
sbb
inc
xchg
out
mov
xchg
repnz
fidivs
fdivrs
mov
pusha
jg
add
or
pop
xor
jl
sbb
mov
fcomip
sbb
iret
ret
dec
enter
mov
adc
mov
jp
cmpsl
dec
and
push
push
xor
aaa
daa
cmp
xor
fists
or
gs
add
jg
pop
stos
pop
repz
pop
aam
cmp
or
mov
dec
fsubl
fdivr
fbld
lcall
or
xor
dec
sbb
aad
push
jne
daa
pop
iret
in
loopne
icebp
adc
out
lods
in
into
loop
outsl
ficomps
fcoms
dec
mov
dec
pop
add
shl
lock
stos
iret
push
mov
sbb
and
pop
lcall
adc
cmp
or
push
test
les
pop
out
imul
add
mov
push
push
lea
cltd
pop
fs
xchg
popf
movsl
jo
js
adcl
xchg
xchg
jl
xchg
pop
sbb
mov
dec
sub
stc
inc
test
cwtl
shlb
dec
jae
cmpsl
subl
movsb
pusha
or
ja
dec
push
jne
push
push
mov
mov
jne
adc
adc
in
jmp
and
jmp
or
adc
mov
out
jo
ss
inc
lcall
rclb
in
cmc
imul
ret
or
loopne
mov
pop
jle
add
gs
sub
and
xor
pop
repnz
or
mov
or
xchg
jbe
dec
or
stos
cld
push
push
scas
push
cli
dec
pop
nop
jbe
push
outsl
jecxz
dec
lock
jb
mov
mov
jp
push
mov
mov
inc
call
adc
fucomi
cmpsb
mov
dec
mov
lcall
push
jnp
fistpl
xor
push
mov
sar
jns
gs
jmp
rcrb
popf
psrad
push
in
xor
lds
pusha
adc
sub
enter
pushf
push
and
sub
aad
inc
out
mov
jb
aad
sub
lock
inc
inc
ffreep
cmpb
xor
jo
adc
mov
jae
or
xor
push
jg
daa
push
lods
sbb
mov
inc
cmp
mov
or
scas
sub
xchg
adc
test
aaa
clc
push
push
lods
fisttpll
fs
jl
cli
out
xchg
sub
fimuls
insl
lret
insb
xchg
sub
pop
xor
data16
dec
sbb
jbe
les
mov
xchg
or
jg
pop
iret
xlat
jno
xor
pop
mov
xchg
lods
int3
lock
lret
lcall
mov
popf
mov
xor
pushf
push
push
mov
mov
cld
outsb
popa
clc
pushf
mov
pushf
dec
xor
xchg
movb
inc
andb
out
pop
sub
bound
icebp
push
jp
jmp
int3
stc
sarb
out
jbe
cld
mov
and
out
cmp
adc
sub
ds
sub
hlt
jmp
dec
fcmovnbe
enter
sbb
les
jge
movsb
inc
fs
pop
dec
inc
cmp
out
or
inc
pop
mov
lcall
adc
loop
in
fcoml
lods
jb
fiadds
lods
jns
outsl
add
cmp
adc
inc
pop
rol
inc
jns
push
xor
cmp
hlt
stc
das
cmc
pop
adc
inc
sbb
cs
fmull
call
cmp
lods
jno
out
daa
dec
push
test
xchg
movsb
rcr
push
fs
or
aad
fidivrs
sub
cmp
push
dec
daa
les
imul
xchg
in
push
jae
push
sti
loop
mov
pop
xchg
popa
cli
mov
jmp
cmpsb
inc
stos
cltd
xchg
cs
mov
lds
mov
imul
sbb
mov
mov
and
add
fdivrl
adc
test
mull
add
push
xorl
rclb
ret
cmp
mov
iret
addr16
add
push
scas
clc
jl
push
push
pop
mov
pop
adc
test
shl
cld
sarl
jns
cmovbe
in
mov
cmp
jecxz
popf
out
sti
dec
xchg
xchg
fiaddl
push
xchg
xchg
inc
loopne
pusha
popf
iret
int
cld
je
mov
push
insl
adc
out
out
push
imul
mov
add
jecxz
inc
push
or
out
sub
cmp
fists
push
xchg
jmp
push
out
in
or
mov
pop
cmp
jno
inc
dec
jnp
insb
insb
pushf
xlat
pop
xchg
test
stos
adc
xchg
aam
stos
scas
xchg
mov
fnstsw
dec
adc
adc
btrl
outsl
cmp
xor
jl
das
jbe
into
mov
fcmove
int
fstps
cmp
inc
mov
fnstenv
test
mov
lock
mov
notl
faddp
or
mov
mov
cmpsb
inc
sarb
pop
push
dec
lret
pop
fildl
les
iret
pop
popa
adc
ds
in
cmp
or
enter
add
cs
cmp
imul
and
cmc
cs
or
scas
dec
xchg
adc
leave
push
testl
icebp
jecxz
mov
push
push
mov
adc
shlb
loopne
lret
dec
push
push
cmp
imull
movsl
jb
jecxz
push
lcall
data16
bound
adc
test
aad
push
cmp
xchg
ds
jne
xchg
daa
xchg
sub
xlat
sub
roll
push
adc
cld
je
fstps
add
cli
or
test
les
inc
lret
aam
add
add
popf
dec
dec
ss
dec
mov
nop
mov
xchg
popf
mov
push
aaa
rcrl
mov
fs
hlt
insl
outsl
rorl
call
cwtl
enter
sbb
vpackuswb
addb
sub
in
or
inc
es
fwait
inc
daa
test
int
sub
pusha
push
fstl
loopne
adc
cld
shrl
adc
sahf
subb
pop
inc
fwait
inc
push
dec
push
push
sbb
shll
cmp
xlat
lods
sbb
push
fs
push
out
mul
scas
ljmp
outsl
fnstsw
lret
les
jb
xor
stos
xlat
cmpsl
out
lods
adcb
cld
test
shlb
in
cmc
sub
cs
dec
addr16
cmovbe
push
mov
sub
lea
testl
scas
adc
sub
int3
mov
sub
mov
sub
mov
scas
pop
pop
push
pop
mov
daa
pop
pop
out
xchg
aam
aaa
fiadds
cs
mov
out
ror
mov
xor
rcl
push
pop
cmp
xor
ret
add
insl
movsl
fneni(8087
push
test
mov
adc
dec
es
dec
and
cmpsb
out
fimull
call
out
and
push
mov
movsl
divl
dec
sub
clc
cmpsl
mov
mov
shll
mov
xchg
or
inc
aas
mov
arpl
fisubrs
mov
std
mov
cwtl
mov
fldenv
fwait
insl
dec
xchg
movb
pop
mov
or
pop
sub
iret
dec
push
mov
mov
dec
insb
add
xchg
popf
dec
dec
stos
adc
pop
icebp
fdiv
ret
jne
mov
sbb
ret
and
fistl
ss
xlat
rorb
lahf
push
sub
jp
bound
or
sub
stos
xor
cmp
fidivl
movsl
push
or
and
push
std
hlt
lods
imul
stos
ficoms
cltd
dec
stc
sbb
mov
mov
inc
xchg
gs
mov
ds
mov
ljmp
cmp
test
int
adc
dec
in
mov
outsb
popa
loop
roll
push
mov
mov
add
push
pop
lea
sar
pop
mov
out
enter
repz
pushf
gs
scas
outsl
shrl
dec
bound
adc
incb
pusha
pop
or
fnstcw
or
sub
imul
out
xor
push
subl
cmp
shrl
pop
and
enter
sub
mov
mov
jnp
sti
inc
and
mov
or
sbb
jmp
or
and
pop
and
sahf
pop
or
jo
pop
nop
pop
sbb
xor
sub
mov
dec
jbe
and
imul
mov
pop
imul
sbb
jle
xchg
inc
or
out
pop
mov
imul
push
lods
mov
cs
test
xor
popf
inc
cmp
and
dec
and
jmp
cmp
andb
je
arpl
subb
orl
stc
or
in
adc
mov
dec
les
mov
push
xchg
aam
jb
jmp
sub
in
pushf
adc
repnz
ljmp
outsl
push
je
fisttps
lds
out
rorl
rcll
inc
iret
mov
mov
mov
sub
lret
das
aas
dec
mov
sub
ret
mov
pop
in
lret
pop
fimuls
call
push
lods
inc
rcrl
fwait
mov
cltd
sub
lcall
jge
xor
test
or
jg
scas
jo
jnp
sub
shll
mov
or
lock
sti
aad
pop
push
addr16
test
aad
add
pop
out
mov
jb
or
dec
sti
stc
pop
push
mov
push
adcb
cmc
arpl
aam
pop
js
arpl
fcomps
mov
cli
sbb
pop
pop
movsb
fwait
sbb
daa
incl
adc
jg
and
push
jbe
xchg
mov
std
imul
cmc
test
mov
out
xor
push
addb
cmp
sub
in
ret
pop
sbb
inc
aad
cwtl
mov
mov
jmp
je
dec
adc
sbb
mov
lahf
jbe
inc
jecxz
or
sbb
movsl
negl
popa
push
mov
outsl
loope
dec
das
mov
and
jnp
imul
addr16
push
adc
bound
jns
sarl
xchg
fabs
popl
xchg
adc
mov
js
push
push
ss
sub
adc
cmp
or
mov
scas
push
repnz
add
mov
cmp
or
xlat
loopne
add
popf
incl
dec
scas
mov
cmc
insl
loop
cmpsb
or
xchg
cmp
in
mov
js
cmpsl
jne
sbb
and
inc
mov
in
push
mov
test
fsubp
popa
jne
cmp
lds
jno
push
notb
cwtl
gs
shl
push
xor
loopne
add
mov
jecxz
push
or
or
ljmp
mov
push
cmpsl
sub
cmp
xchg
or
mov
or
xchg
or
movl
cmp
adc
jo
dec
pop
je
mov
fldcw
sbb
pop
mov
ret
cmp
ja
in
stos
lcall
ret
mov
out
mov
addr16
xchg
mov
mov
out
xchg
cmc
mov
push
cmp
cmp
xchg
jne
adc
cmp
test
xor
sub
push
icebp
push
add
ret
cmpsl
jp
jo
mov
test
push
int
mov
fistps
lcall
push
and
pop
in
inc
in
or
mov
push
das
jbe
mov
es
add
xchg
and
aaa
cmp
pop
fadds
xlat
adc
dec
sbb
jle
xor
sub
inc
push
mov
scas
ljmp
subl
sub
or
sub
push
mov
and
ret
lock
push
add
test
mov
and
xchg
jo
pop
in
cmp
add
lock
xor
pop
sbb
mov
sub
imul
stc
jne
mov
repz
cmp
sahf
cmp
loope
mov
arpl
jge
jp
hlt
rclb
dec
or
stos
dec
test
mov
push
inc
push
mov
push
ds
mov
dec
or
les
stos
ljmp
adc
pop
mov
add
mov
mov
mov
outsl
mov
jno
dec
lcall
movsb
push
mov
xchg
add
in
adc
and
jge
jae
out
lret
or
cmpsl
out
cmp
mov
andl
bnd
iret
push
adc
cli
push
es
gs
add
or
push
xchg
push
cmp
shll
test
cwtl
imul
lds
or
cmp
mov
add
sub
inc
push
inc
mov
dec
dec
aaa
sub
into
repnz
div
andl
ret
outsb
mov
popf
mov
cli
adcl
push
enter
sbb
aaa
inc
or
sahf
out
das
lahf
lcall
jno
shll
cwtl
stos
inc
add
lods
cmpsb
add
xor
lahf
enter
jne
xchg
pop
loop
data16
or
enter
ja
add
lock
add
fs
push
loope
les
push
sahf
aam
push
scas
dec
pop
mov
add
jl
scas
jnp
xor
dec
lret
int
fnsave
mov
test
xchg
mov
adc
sbb
dec
inc
rol
adc
ljmp
adc
sbb
dec
push
mov
std
mov
gs
in
sub
fdivs
daa
test
sbb
outsb
push
clc
bound
xchg
iret
push
push
mov
shll
mov
xchg
shl
lret
xchg
je
stos
in
rcrl
rcrb
pop
in
lods
inc
jo
and
outsb
imul
fs
out
push
xchg
loop
jns
addr16
clc
dec
and
jo
popa
dec
outsl
pop
or
gs
pushf
push
clc
fimuls
push
loope
jmp
jb
jbe
mov
test
addr16
sub
xlat
lret
push
mov
add
movsl
xor
ljmp
adc
cs
cs
cld
fnstenv
pop
in
std
lcall
mov
scas
fs
sti
int
jbe
mov
lods
sar
and
data16
lock
mov
mov
fidivrs
xchg
mov
bound
jle
or
mov
repnz
scas
jne
jecxz
mov
insb
leave
stos
xor
dec
xchg
mov
cmpsl
lea
or
lahf
leave
pusha
add
sbb
inc
icebp
lret
addl
iret
mov
daa
lahf
cmp
xor
repnz
sbb
scas
shlb
movsl
js
xor
popa
pop
call
jo
pop
xor
repnz
mov
fbstp
mov
push
stos
pusha
iret
xchg
cmc
test
lods
test
xchg
leave
add
mov
add
dec
inc
or
inc
adc
dec
pop
pop
push
mov
pop
or
popf
xchg
mov
jnp
add
test
cmpsl
adc
daa
cmc
andl
cmpb
push
xor
lods
test
js
fwait
cmc
cmp
mov
fisubs
in
pop
ljmp
clc
dec
adc
mov
add
ds
divb
sti
aad
jle
andb
dec
or
dec
and
lahf
jno
sbb
popf
shrd
mov
loop
ret
sbb
add
jo
cmp
xchg
ja
add
xor
rorl
cs
fdivrp
cld
or
dec
jle
xor
push
add
aad
test
jae
mov
mov
je
ret
test
sbb
fs
popa
push
nop
fistpl
adc
mov
mov
inc
add
addr16
into
lods
repnz
das
lods
inc
and
aaa
movl
repnz
shlb
les
xchg
inc
and
mov
mov
pushf
mov
adc
cmp
fs
cmp
mov
nop
add
sub
pop
int
push
xor
insl
arpl
xchg
adc
gs
sbb
ja
jae
notb
aam
xchg
xor
xchg
push
xchg
mov
add
fdivr
jle
movsb
cwtl
or
sub
cmp
xor
jno
pushf
fwait
mov
mov
fistl
push
jp
sbb
cmc
repz
fs
push
xchg
sub
jmp
pop
stos
jle
sub
pop
daa
push
push
sbb
cmc
or
xchg
enter
addr16
out
repnz
jecxz
inc
and
out
repnz
mov
dec
mov
push
and
xchg
xchg
adc
mov
daa
in
addr16
fnstenv
inc
call
push
sahf
jg
or
in
adc
push
add
bound
ret
dec
mov
xchg
sahf
sbbb
ud1
or
xor
rol
icebp
xchg
jle
stc
sahf
bound
sbb
mov
pop
xchg
push
test
or
sahf
sbb
inc
sbb
negb
js
leave
leave
arpl
sbb
inc
test
pop
mov
andb
cli
fnstenv
cmp
cmc
add
movsl
xchg
insl
test
fwait
cmpsb
push
pop
lds
jmp
pop
sub
es
mov
test
and
out
inc
fwait
in
int
mov
ret
lahf
inc
mov
inc
jns
inc
xchg
out
xchg
repnz
lods
in
xchg
mov
fstpl
idivb
xor
cmp
cmp
xchg
incl
cs
pop
xor
pop
mov
stos
cmp
fbld
add
idivl
cmp
inc
inc
std
cmp
aas
mov
leave
cmpsb
enter
mov
es
ljmp
imul
mov
sub
dec
js
ljmp
sub
sbb
in
mov
out
dec
enter
or
fidivs
push
mov
push
test
pop
jbe
std
mov
dec
push
leave
rcrl
or
into
mov
lret
sub
sbb
std
data16
aad
data16
xor
xchg
mov
sub
insw
push
push
sub
pop
mov
or
dec
mov
or
mov
jl
sub
cmp
pop
mov
or
daa
rorb
jnp
into
imul
ret
sahf
push
sti
lret
sbb
jl
jmp
sub
test
xor
test
mov
shrl
mov
imull
lock
xchg
push
cmpsb
mov
aaa
jg
aad
dec
ret
insb
popa
jmp
sbb
push
jge
and
mov
lds
ja
inc
push
shlb
shlb
jle
into
mov
daa
fmuls
adc
jp
inc
xor
insl
imulb
stc
xor
inc
add
mov
imul
and
jl
imul
inc
stos
inc
movsl
mov
repnz
jae
in
loop
pop
pop
xor
scas
pusha
xchg
and
xorl
sahf
loope
xor
mov
push
movq
fs
inc
mov
pop
push
bound
sbb
enter
bnd
repz
xchg
mov
jne
popf
inc
jle
js
hlt
xor
in
pop
jl
inc
scas
inc
aad
cmp
adc
mov
inc
mov
and
popf
and
daa
cld
and
sar
jecxz
mov
ljmp
sti
push
xchg
sarb
push
nop
hlt
xchg
js
js
jns
lret
decl
jge
cmp
jb
ret
inc
adc
scas
and
test
jge
xor
push
fmulp
xchg
pop
daa
cmp
cs
push
sub
mov
add
or
and
sbb
mov
loope
sbb
std
mov
add
push
mov
jl
hlt
inc
or
jl
pop
mov
int3
add
hlt
test
lds
out
or
mov
pusha
iret
mov
and
fcomps
rol
sub
lea
out
out
push
mov
push
cmp
xchg
rcll
or
sub
aad
pop
push
ljmp
inc
shlb
dec
fld
pushf
push
xor
dec
add
or
ret
ret
push
xchg
adc
sbb
jmp
lods
arpl
xchg
in
and
lcall
sbb
push
xor
pop
ljmp
sub
shll
leave
mov
lock
rclb
ljmp
jp
or
lcall
popf
pusha
push
pop
scas
out
fsubrs
mov
sti
cli
inc
mov
outsb
loope
or
jns
mov
dec
mov
dec
push
into
sub
daa
inc
ljmp
mov
cmpsl
mov
pop
push
fcoms
dec
loopne
mov
out
inc
pop
stos
jg
jae
push
mov
cmp
cli
das
jmp
and
cmpsb
mov
scas
pop
repnz
adc
xchg
stos
fildll
jo
std
inc
leave
xchg
lock
aam
jg
pop
mov
add
sbb
aad
and
sub
testl
sbb
jb
mov
and
into
js
arpl
ljmp
mov
add
addr16
mov
mov
push
cld
mov
aas
jmp
sub
mov
rolb
scas
test
test
or
imul
xchg
fstpl
pop
jae
jnp
dec
pop
and
jae
and
and
fimull
js
cmp
sub
push
jns
push
xchg
jg
add
xor
lret
fbstp
loop
aad
push
outsb
lods
in
mov
addb
ss
sub
repz
jg
or
cmp
sbb
popa
adc
or
shrl
mov
adc
push
jnp
int3
jmp
imul
sbb
sahf
mov
xor
mov
out
jge
ret
gs
clc
cmp
enter
lahf
rclb
mov
in
stc
push
aaa
insb
iret
js
jns
xchg
mov
test
sbb
cmp
mov
add
movsb
adc
xor
dec
adc
jp
sbb
in
pop
mov
push
jge
mov
add
xchg
xchg
incl
xchg
popf
jo
add
sub
xor
cmp
jo
out
rcrb
mov
mov
dec
filds
push
dec
inc
mov
sub
nop
arpl
testl
jl
dec
stc
inc
outsl
sub
fmull
cmp
cmp
jp
mov
int3
mov
mov
xor
stc
add
and
std
push
subl
les
sarl
imul
jecxz
xor
jnp
pop
mov
dec
push
mov
popa
cltd
jns
jle
data16
jmp
fst
xor
mov
jp
or
adc
shll
lret
mov
cmp
loop
mov
xor
add
and
imul
mov
cmc
xchg
dec
insb
xor
xor
xchg
cli
inc
jne
mov
sti
test
stos
jb
enter
test
repz
cmpsl
pop
add
insl
lahf
xchg
push
sub
cmp
lods
fnsave
cmpsl
and
xor
lcall
je
jle
loopne
push
and
mov
mov
inc
jp
in
and
loope
xchg
into
mov
subb
mov
ret
ja
or
outsb
xor
inc
jno
and
sbb
cmpsb
call
lock
movntq
and
add
ljmp
push
cmc
jg
xchg
popa
inc
or
fnstenv
and
pop
lcall
cmp
scas
add
or
jns
xor
jo
ret
cli
jg
cli
outsl
lahf
outsb
push
int3
xor
xchg
sub
push
jp
cmp
not
leave
or
das
mov
or
push
stc
jmp
xchg
jno
test
dec
inc
popf
aam
fwait
xor
out
sbb
out
xchg
lods
ljmp
sti
repz
adc
negl
popf
leave
into
mov
jp
mov
aad
or
add
repnz
test
jmp
or
nop
pusha
test
push
mov
shlb
or
nop
das
rolb
xchg
push
sbb
int
in
out
fs
loop
loope
iret
mov
jmp
clc
adc
and
sbbb
nop
xor
xchg
ret
lahf
ss
mov
dec
mov
fs
in
pusha
add
ljmp
in
inc
adc
dec
lock
fstpt
andl
ret
hlt
mov
dec
lods
cltd
adc
roll
fisubrl
push
xchg
addr16
xchg
pop
std
fsubl
inc
mov
dec
push
das
sub
add
cmp
pushl
divl
aas
pop
mov
int
xor
mov
in
adc
cmc
dec
push
outsb
push
and
fisttps
push
sbb
push
popa
push
mov
push
dec
aas
xchg
dec
sarb
arpl
jno
xchg
daa
enter
test
sub
adc
outsl
test
adc
loop
sub
sbb
rcll
stos
add
dec
pop
dec
aaa
loopne
adc
jbe
push
jge
cmp
mov
add
and
das
mov
jl
xchg
in
mov
repnz
cmp
insl
popa
sbb
shlb
sti
in
popf
aam
mov
nop
xchg
nop
jmp
into
out
sbb
mov
sub
push
sbb
test
in
inc
sub
cltd
xchg
push
bound
fsubs
mov
adc
push
inc
lods
dec
mov
dec
sub
icebp
in
push
lret
out
push
movsl
sarb
cld
inc
loope
enter
pop
andl
imul
jge
sti
mov
sti
and
mov
xchg
daa
fdivrl
push
adc
dec
ds
cwtl
jl
cmp
or
sti
mov
lds
cwtl
inc
sub
push
or
imul
cwtl
pop
fdivl
repz
fucom
xchg
add
xlat
aas
mov
lock
mov
xchg
sarl
rol
out
sub
fistpll
inc
dec
mov
in
cwtl
cmp
insl
xchg
int
mov
inc
mov
pop
xchg
pop
xlat
and
pop
push
pop
push
stos
in
mov
push
xor
clc
pushf
dec
xchg
dec
dec
push
push
mov
jns
shlb
sahf
pop
inc
fisubrl
lock
xor
mov
adc
dec
dec
pop
xchg
cmp
div
fbld
fisubl
push
stc
mov
mov
mov
js
mov
push
testb
sti
testb
lock
out
cmp
fwait
stc
lret
sbb
and
xchg
jbe
cwtl
sbb
xor
cld
xorb
push
xor
add
jae
je
sbb
aaa
scas
nop
imul
ror
ja
mov
cld
mov
mov
sbb
notl
sarl
push
mov
mov
mov
repz
dec
popf
movsl
cmpb
mov
push
xor
and
sbb
rcrb
or
xchg
add
hlt
add
movsl
pop
lods
lock
icebp
push
jno
mov
jecxz
pop
popl
into
mov
out
negb
idiv
xchg
test
insl
mov
dec
or
mov
fidivs
jle
or
jo
rcrb
movsb
xchg
loopne
aas
out
iret
sub
ja
sti
daa
dec
int3
add
andb
pop
or
pop
and
mov
xchg
mov
icebp
pop
hlt
sub
decl
add
add
imul
mov
mov
ja
fwait
xchg
jo
dec
or
loop
mov
scas
dec
or
popf
lret
insb
mov
mov
sub
stc
mov
xor
repz
outsl
cmpsb
xor
sbb
imul
ret
fcmove
adc
int
xor
add
andb
or
mov
lods
jg
sbb
orb
sub
mov
fcmovu
add
and
in
int3
jb
pop
jge
sbb
dec
leave
loope
add
fidivrl
and
pop
outsb
into
mov
sbb
in
and
mov
inc
shl
mov
sti
or
adc
push
jge
dec
in
vpextrw
pop
test
stc
adc
rolb
dec
adc
add
lds
xor
mov
lcall
cmp
mov
ret
jnp
sbb
mov
repnz
cmp
push
out
pop
gs
fsts
jo
jbe
dec
test
fs
inc
pusha
in
inc
pop
mov
jg
cmp
push
push
les
cmpsb
stos
mov
pushf
repz
pop
test
mov
push
movsb
enter
test
in
aaa
test
pop
repnz
xchg
int3
cmc
ds
ljmp
or
add
push
add
jne
in
fsts
cwtl
rclb
adc
jne
in
rcll
pop
sbb
je
adc
repnz
fisttpll
mov
lahf
scas
in
ds
in
filds
jl
jecxz
mov
aaa
jae
jnp
xor
lea
pop
mov
les
mov
pslld
dec
cmp
mov
xchg
leave
cmpl
into
hlt
add
sbb
shl
pop
fiadds
pop
mov
add
lods
push
inc
inc
loopne
mov
jbe
lahf
mov
jmp
pop
add
test
dec
and
sarl
outsl
mov
push
hlt
rolb
pop
jnp
inc
pusha
and
jae
nop
ret
mov
mov
pop
daa
cmp
hlt
arpl
xchg
push
test
lcall
or
sub
and
cwtl
fisttps
push
push
and
push
in
mov
dec
pop
push
inc
shrl
ss
incl
dec
loopne
loopne
mov
movsb
ja
fs
insb
pop
adc
xchg
mov
mov
mov
stos
and
lods
mov
pop
push
push
aam
lods
mov
push
loopne
or
and
jns
jno
inc
test
cmpsl
inc
push
fstl
fimuls
adc
add
pop
inc
jbe
cld
pop
out
addl
loope
and
jo
push
ds
mov
cmp
icebp
adc
shl
stos
pop
xchg
xlat
fcmove
shll
imul
or
xor
mov
je
sbb
data16
lods
out
loop
dec
or
sahf
jnp
cmpb
pop
gs
loopne
sub
fists
inc
cmp
jecxz
in
imul
pop
in
mov
dec
pop
int3
es
arpl
add
sbb
das
mov
push
iret
dec
pop
pop
add
dec
pop
mov
pushf
or
pushl
sti
movsb
adc
insl
movsb
fsubs
add
adc
jno
or
cmpsl
adc
int3
pop
push
push
xor
jbe
insl
fldenv
inc
ja
fs
sub
add
dec
nop
xchg
shrb
mov
lea
loope
stos
ljmp
cmc
pop
lods
sub
insl
adc
scas
test
mov
jmp
enter
arpl
loop
pop
inc
mulb
pop
inc
lds
cltd
and
sbb
mov
adc
push
ret
xchg
faddl
xrelease
xor
push
aaa
ja
fmuls
or
adc
push
imul
mov
imul
push
mov
inc
leave
push
adc
or
lock
mov
xor
pop
mov
mov
outsl
in
mov
sbb
adc
and
pop
es
lret
les
lock
movsb
dec
or
and
loop
pop
ret
cmpsb
mov
sbb
add
je
or
sbb
test
ret
inc
inc
sub
addl
jnp
imul
sbb
imul
mov
rol
push
push
cmp
fs
cmp
or
jno
insl
rolb
pop
xor
jo
pop
xor
dec
rcrb
stos
sub
out
in
les
mov
out
xchg
pusha
mov
dec
add
out
cld
test
mov
mov
inc
push
sahf
iret
push
inc
mov
inc
cmpsl
sahf
or
orb
scas
shlb
mov
wbinvd
mov
push
popf
in
inc
sub
int3
popf
sahf
jp
aas
cmpsl
pop
or
pushf
pop
or
test
or
push
lods
cld
ret
cmp
shlb
sub
pop
dec
lret
fiadds
jo,pt
aas
pushf
mov
lcall
inc
stc
xor
insb
in
fidivs
inc
or
or
movsl
test
mov
dec
movsb
bndldx
cmp
or
mov
push
loop
ret
xchg
cmp
shrb
lcall
jmp
aad
movsb
dec
imulb
push
cwtl
jl
stc
mov
dec
es
les
xor
and
dec
xlat
das
mov
out
add
loope
push
dec
cli
mov
mov
into
aas
arpl
sub
rcll
jae
sarb
pusha
and
lods
int3
push
push
mov
lds
sbb
cs
mov
push
shl
sub
cli
ljmp
es
inc
jb
imul
lret
gs
mov
jne
jp
and
xor
push
push
cmp
cmp
loope
or
cmpb
in
xor
sub
ret
sbb
cld
mov
pop
push
mov
int3
sbb
or
stos
push
pushf
sbb
mov
push
fists
or
cmp
or
das
jo
fildl
cmc
in
or
push
xchg
xchg
xchg
or
test
ljmp
out
sbb
sbb
pusha
or
movsb
add
loop
and
mov
cmp
flds
fsts
mov
sub
adc
dec
lcall
loop
jae
adc
outsb
lods
out
add
lcall
mov
cltd
pusha
in
mov
sbb
outsb
rorb
pop
jmp
cmp
mov
les
and
jle
and
mov
jg
sti
daa
mov
push
dec
jge
pop
cld
movsl
rol
xchg
xchg
pop
sti
pop
scas
in
movsb
jb
sub
dec
mov
into
loope
imul
aas
cmp
mov
mull
fldcw
sbb
pop
testb
in
mov
mov
out
pushl
cmp
fisubs
dec
xor
popa
dec
roll
lods
xchg
mov
rcrl
jle
sub
and
dec
and
ficomps
sbb
shll
aad
cltd
rorb
adc
xchg
jae
ret
mov
pop
jb
cs
mov
mov
lcall
repnz
jl
pop
cmp
sub
mov
mov
js
ud2
stos
cmp
ror
loop
or
push
test
xlat
jae
test
adc
jmp
xchg
dec
push
dec
insb
addr16
xchg
rcll
in
fs
iret
jno
sub
stos
fimull
insl
adc
repz
out
dec
in
push
hlt
or
bound
push
push
aam
mov
insl
mov
shll
mov
cld
push
add
push
jns
pop
mov
or
mov
mov
dec
pop
lods
dec
int
clc
sbb
xor
inc
stos
or
cmp
pop
mov
jp
or
fdiv
dec
fcmovu
out
pop
aad
mov
lock
jecxz
scas
inc
int
jge
push
mov
dec
js
mov
loop
cld
jg
movsb
cwtl
mov
or
dec
jg
shll
push
jp
inc
sarb
mov
andl
movsb
fsts
mov
arpl
mov
and
jge
xor
icebp
xor
jno
test
fnstcw
sub
adc
mov
fistpl
jmp
xchg
cmpl
xor
mov
cltd
mov
shl
jns
sub
add
inc
pop
jp
repz
ljmp
mov
das
xor
inc
or
dec
cmp
and
mov
loopne
cld
xchg
daa
mov
ljmp
imul
popf
dec
push
mov
mov
push
pop
fstpt
mov
push
scas
loope
std
and
icebp
or
add
pop
sub
mov
aad
mov
xchg
ja
fiaddl
jl
std
jns
js
imul
inc
lret
mov
dec
adc
in
les
aaa
cli
fwait
std
xor
fstpt
inc
pop
xor
je
in
adc
or
jle
test
jle
sub
in
push
jno
sarb
shrb
or
jb
fcomps
into
lods
inc
insl
fmull
or
mov
insb
insl
fnsave
adc
mov
ja
ja
lret
and
mov
notb
push
ss
stc
dec
outsb
jl
icebp
mov
sub
les
xorb
dec
leave
and
jl
sti
sub
push
cld
xchg
test
icebp
cli
adc
mov
xchg
lcall
xchg
mov
jle
sub
insl
sbb
and
pop
dec
jle
pusha
dec
repz
mov
adc
push
ds
push
rorb
add
mov
fisubl
jne
xor
jp
cmp
and
push
mov
cltd
cld
femms
outsb
xchg
sbb
es
adc
push
inc
enter
sbb
fldcw
pushf
mov
ror
test
leave
mov
in
cltd
mov
push
fistpll
cwtl
movsl
std
movsl
test
and
arpl
or
shll
pushl
bound
add
push
mov
pop
dec
fistl
xchg
push
jmp
adc
inc
or
inc
inc
call
dec
adc
xchg
jmp
xchg
mov
and
pop
pop
subl
dec
dec
mov
gs
xor
jo
jg
jae
fcomps
ret
jae
repnz
sarl
pop
icebp
mov
jmp
rcrb
dec
movsb
push
xchg
sub
out
or
out
imull
jp
mov
int
iret
rol
add
aas
lock
push
loop
xchg
adc
push
pop
or
cmpsb
sbbl
ljmp
call
rcr
and
dec
xor
mov
push
sub
dec
and
jns
xor
shr
mov
push
mov
push
cmp
cli
fidivl
popa
jae
push
inc
insb
cli
repz
jnp
jp
xchg
in
inc
mov
push
enter
mov
mov
jp
incl
mov
stc
or
loop
and
jle
lret
push
xchg
pop
insl
push
adc
mov
xchg
repnz
pop
or
dec
mov
fiaddl
nopl
jae
add
outsb
jmp
out
andl
adc
push
push
pusha
sbb
mov
push
push
fistpll
cmp
mov
mov
lret
lods
mov
mov
jg
repnz
lret
jne
sub
lods
sahf
rcrl
jnp
mov
xchg
add
mov
mov
scas
in
cld
sub
sti
test
mov
adc
pop
neg
out
and
mov
iret
push
mov
rorb
fwait
mov
xchg
aad
test
or
jb
sbb
or
shlb
push
add
in
cltd
dec
adc
jecxz,pn
mov
or
enter
mov
lcall
lret
inc
cmc
sub
test
inc
aaa
dec
cmp
mov
xchg
jbe
imul
aaa
push
push
jecxz
out
stos
arpl
into
mov
xchg
pop
sub
dec
lret
loop
lods
gs
rcrl
int
aam
xor
xor
inc
add
push
lcall
adc
gs
adc
dec
push
pop
outsl
inc
lods
lcall
jmp
mov
pop
adc
push
mov
mov
dec
out
jbe
loopne
jae
xor
pop
repz
or
les
sub
pop
add
lods
jmp
cmp
cli
test
mov
mov
add
jp
aaa
dec
fwait
insb
mov
push
mov
push
mov
cmp
pop
jbe
cmp
and
out
idivl
imul
add
jecxz
xor
xchg
shrl
cmp
loopne
or
adc
sub
daa
xchg
jge
test
ljmp
mov
xor
insb
lahf
inc
ja
xchg
push
push
sti
fildl
mov
movsb
fs
xor
jl
or
pop
jl
mov
aas
xor
or
cli
pop
stos
ret
mov
pushf
pop
arpl
ret
imul
or
dec
adc
fs
sti
sti
je
lods
lret
inc
inc
pushf
jns
cmp
icebp
icebp
aam
and
lret
inc
sub
pop
pop
xchg
jg
xchg
mov
dec
movsl
int
dec
pop
out
fmul
xor
or
mov
mov
pop
mov
and
stos
mov
and
mov
aaa
add
cli
mov
pop
sub
xchg
xchg
bound
mov
xchg
xor
mov
mov
sub
leave
inc
fistpl
adc
imul
mov
cld
mov
fs
icebp
pop
mov
and
push
lea
mov
xchg
mov
push
xchg
sub
dec
fdivs
das
push
lock
daa
jle
pop
mov
hlt
call
sub
mov
nop
stc
loope
lret
rorb
scas
pop
xor
stc
xchg
and
jb
rcll
sbb
mov
fwait
pop
pop
mov
pushf
pop
pop
sbb
mov
ss
cld
bound
mov
add
imul
insl
jbe
and
or
notl
je
sub
inc
je
pop
add
icebp
ret
aas
dec
and
imul
sub
je
jo
or
jno
cltd
mov
mov
fcoms
imull
fwait
xor
inc
loopne
dec
xor
jbe
add
rorb
orl
push
imul
icebp
push
fisttpll
gs
dec
lret
lods
cmp
orb
jp
mov
repnz
stos
mov
sbb
repz
push
push
mov
cmp
xchg
cmp
popa
repnz
sahf
idiv
out
pop
shrl
int3
into
pop
les
scas
or
pmaxsw
int3
cld
clc
adc
add
and
loop
fisubs
inc
ja
inc
pushw
xchg
jbe
test
push
xchg
xor
and
into
push
jecxz,pt
sbb
sub
in
jbe
lds
fidivs
xchg
movsb
jns
test
ret
xor
pop
mov
cmpsb
lret
cld
pushf
rorb
xchg
pop
mov
xchg
xor
push
mov
xor
lcall
negl
push
insl
pop
lods
sahf
mov
add
lea
push
push
mov
lret
push
jns
ret
pop
std
mov
sub
insb
sub
dec
add
out
test
call
push
xchg
cmc
subl
jnp
mul
hlt
test
fs
cmpsb
lock
iret
mov
push
data16
xor
jae
xor
aad
std
adc
shll
ds
xchg
xchg
cmc
imul
out
test
ss
outsl
and
scas
xchg
push
in
push
stos
sub
js
aad
adc
add
dec
out
test
fnstsw
ss
push
loopne
jmp
dec
xchg
ds
dec
jmp
inc
rcr
cmp
inc
movsb
cmc
cltd
or
sbb
cmpsl
daa
or
cmp
cmp
inc
dec
sbb
and
adc
mov
fs
outsl
test
lret
adc
cmpsl
fwait
push
push
xor
out
leave
rorb
dec
push
jne
cmp
test
lods
push
cld
into
push
movsb
push
add
jp
jbe
cmpsb
inc
daa
xor
aad
icebp
adc
iret
push
leave
dec
jl
pop
or
fistl
test
fcmovbe
sbbb
sub
dec
mov
add
mov
fcomi
add
iret
adc
scas
leave
xlat
sahf
pop
push
rcrl
pusha
or
addb
fcoml
stos
pusha
push
push
movsb
mov
out
movsb
ret
rcrb
adc
adc
icebp
adc
jne
sti
andl
xchg
xchg
loop
add
mov
lds
add
push
mov
jne
dec
xor
push
shll
jbe
sub
sub
dec
sbb
cli
dec
sahf
das
rorb
cs
sti
iret
jns
out
rclb
jecxz
in
jle
es
push
mov
lds
shll
or
bnd
in
lahf
add
into
adc
inc
adc
dec
imul
mov
push
popa
or
in
inc
sub
mov
push
or
xchg
adc
and
push
sub
lret
inc
bound
dec
fcomps
and
lea
dec
mov
mov
cmovns
les
ds
add
adc
jecxz
subb
aas
and
in
mov
sub
pop
aad
testb
and
xor
mov
cltd
jecxz
sub
mov
pop
in
cmpsb
cmpsb
gs
aaa
xor
rorl
mov
stos
daa
add
adc
mov
add
cmp
js
push
push
and
sbb
sbb
xor
xlat
and
sub
inc
xor
clc
inc
push
push
mov
mov
mov
sbb
enter
sbb
cmp
fwait
mov
sbb
xlat
lahf
loop
rcl
mov
roll
push
dec
orb
fsubp
test
jb
shlb
mov
enter
jbe
cmp
std
xchg
push
lret
popf
mov
fnclex
push
push
sbb
es
xchg
jmp
cmp
push
mov
pop
rclb
push
repnz
popf
xchg
xchg
sbb
in
adc
fbld
mov
enter
xchg
ret
or
pusha
dec
cli
jnp
imul
and
jb
jp
push
lods
jno
dec
lods
xchg
in
shl
and
shlb
jno
push
fidivrl
in
cwtl
mov
arpl
in
add
mov
mov
or
pop
outsl
imul
cs
pusha
push
ljmp
ds
mov
and
sub
loopne
dec
mov
add
pop
jno
adc
adc
in
sarl
pusha
inc
cld
rcrb
push
push
mov
sahf
bound
cs
sub
sbb
ret
cli
pushf
mov
or
mov
nop
leave
int
add
lret
adc
mov
xchg
popa
data16
popl
add
out
push
addr16
mov
jle
in
dec
push
mov
orl
mov
movsl
mov
fs
ljmp
fistpll
ret
ss
cmp
mov
aas
in
adc
jne
lret
stos
mov
and
imul
imul
jp
adc
rolb
sbb
imul
outsl
sub
push
dec
mov
int3
out
or
cmp
push
ja
pop
jp
dec
imul
inc
loope
dec
inc
and
sbb
xchg
shlb
mov
jbe
mul
cmp
pusha
pop
mov
mov
xchg
mov
shl
jbe
jne
fstps
mov
cmpsb
fstpt
notb
divb
push
fisubl
in
loope
xchg
fbstp
cmp
sub
push
add
rcll
mov
ja
xor
xchg
jo
lahf
outsb
or
xor
jge
stos
sbb
or
aaa
add
mov
inc
jae
in
mov
push
jp
daa
cmc
mov
pushf
test
inc
adc
cmp
lcall
cli
shr
out
sub
in
mov
adc
mov
lods
sbb
in
and
add
mov
outsb
subl
pop
mov
mov
jge
and
sub
jle
fildl
loopne
out
xchg
mov
lcall
and
pop
add
movsl
dec
xchg
mov
xchg
mov
xor
pop
pop
ret
jge
add
pop
cmpsb
adc
std
xorl
mov
int3
mov
mov
dec
adc
or
fstp
sbb
fs
das
leave
jae
popf
frstor
je
jle
fwait
mov
int
imulb
lahf
mov
insl
rolb
insb
imul
push
into
dec
cmc
movsl
pop
nop
push
and
and
or
ljmp
xchg
icebp
inc
aam
cmp
xchg
xor
xchg
or
addl
cmp
loop
adc
add
pusha
dec
mov
jo
lea
rclb
shrb
ljmp
sub
pop
movsb
xor
popf
mov
mov
lods
pushf
je
subl
rolb
aas
dec
cmp
loope
es
mov
incl
inc
lods
addr16
andb
inc
jmp
test
call
xchg
xor
cmc
inc
jo
std
dec
ret
pop
stc
addr16
ds
dec
mov
or
add
subl
test
push
sub
push
pop
bswap
es
cmp
cmp
sti
xchg
jb
in
mov
and
cmp
cmp
jmp
push
in
stos
movsb
mov
sbb
rcrb
push
adc
mov
and
pop
lock
fsubr
cmpsl
xchg
imul
lret
out
sub
ljmp
dec
mov
adc
in
test
adc
mov
sbb
pop
int3
lahf
leave
add
test
inc
xor
sub
outsb
pop
jl
sub
test
mov
and
lods
fmul
out
or
inc
add
mov
sarl
fsubrs
imul
jne
cli
stos
ror
daa
fucomi
jl
cmp
add
sbb
jne
add
jnp
jb
cmp
sub
dec
lods
fcoms
fidivrs
pop
push
cmpsl
push
xchg
jo
push
mov
adc
movsl
jge
mov
adc
pop
cli
into
and
aaa
dec
andl
xor
jg
fnsave
inc
arpl
test
pusha
enter
dec
lret
xor
push
loope
lahf
ret
jp
mov
push
mov
adc
mov
scas
lds
daa
jae
or
cmpsb
cwtl
mov
sub
ret
fidivl
test
shrl
shrb
mov
arpl
fists
movsb
adc
pop
jne
and
xor
jp
sbb
sbb
movsb
repnz
inc
out
xchg
mov
out
mov
outsl
jmp
dec
dec
insb
fwait
pop
jge
imul
out
daa
adc
ret
aad
adc
pop
enter
stc
repnz
xor
rorb
jno
in
test
jae
filds
mov
jp
cmp
pop
fnstsw
pop
ret
sbb
pushl
addr16
into
hlt
pop
bnd
mov
shrl
daa
inc
int3
shll
pop
and
pop
sbb
cmpsl
xchg
outsl
lahf
sbb
jnp
xor
and
test
dec
movsl
aaa
lret
xchg
data16
push
mov
push
scas
add
testb
jnp
pop
mov
add
jmp
push
into
negb
notb
inc
sub
es
adc
lret
cmp
pop
lds
movsl
iret
enter
fldcw
cmpsb
or
into
pop
imul
jp
sub
stos
imul
jl
lahf
jno
jecxz
cmp
pop
and
sbb
insl
mov
mov
jno
sub
pop
in
adc
dec
sbb
mov
xchg
ljmp
fld
andb
cmp
das
or
and
fistpl
movsb
mov
gs
pop
lock
data16
fisubl
xor
pop
fisttpll
sbb
icebp
aam
cs
mov
test
mov
jbe
cmp
lret
push
sub
nop
sub
ljmp
movups
xor
sbb
or
jge
fisubl
pop
pop
ja
aas
cltd
jg
rolb
out
scas
mov
inc
aad
and
xor
icebp
xchg
lcall
loop
jge
and
pop
insl
repz
push
xor
aam
sbb
out
movsl
xor
sub
jns
test
lret
jns
fildl
inc
stc
mov
jns
mov
pop
mov
test
xor
je
sub
xor
xorb
sub
nop
xchg
ds
or
popa
int3
lret
dec
stos
faddl
jl
and
cmpsl
imul
inc
dec
repz
pop
js
mov
scas
mov
push
push
insl
dec
dec
int3
inc
out
lret
cmp
push
shl
jns
xchg
mov
out
xchg
xchg
add
sbb
nop
xor
jnp
jns
and
cmpsl
jnp
cmp
xorl
inc
and
pop
inc
call
out
mov
adc
sbb
pop
push
inc
fwait
pushf
push
call
mov
aam
sub
out
jecxz
sub
sbb
aas
inc
mov
mov
loope
pushl
pushf
popa
shll
fwait
int3
stos
mov
ds
lret
ss
xchg
sub
cmpsb
xor
div
xchg
push
lods
lret
add
pop
sub
outsl
stc
je
mov
mov
bound
jne
cmp
sbb
pop
pop
fs
ret
xor
push
mov
mov
sub
iret
jno
push
cmp
and
mov
jne
pop
pop
imul
ret
jo
orl
icebp
pushf
mov
aas
test
sub
and
jecxz
fstpt
stos
push
mov
mov
mov
push
fstl
addr16
aas
xchg
xchg
ss
clc
adc
repz
add
push
lds
dec
dec
test
jle
push
adc
mov
js
push
mov
jbe
mov
sub
movsb
das
cli
stos
dec
cmp
mov
sub
loope
in
cmpsb
mov
rorb
mov
repnz
adc
add
mov
lcall
in
cld
adc
movsb
jl
mov
daa
lcall
pop
fstl
outsl
je
dec
loopne
and
dec
std
aas
adc
dec
inc
scas
loop
mov
xchg
xor
inc
push
repnz
aaa
or
cmp
gs
cmp
xor
cmp
push
or
pop
les
hlt
enter
pop
pop
cmp
push
and
xchg
nopl
and
fildl
dec
shll
mov
aas
daa
insl
jno
pop
stos
xor
lret
cmpsb
out
jecxz
rcll
adc
mov
sbb
ds
pop
das
subl
push
sub
dec
data16
leave
dec
aaa
leave
sbb
data16
jb
dec
pop
or
pop
mov
jbe
in
sarl
mov
movsb
xchg
hlt
sahf
sub
pop
push
in
and
pop
mov
cld
js
negl
inc
xor
lods
dec
insl
das
push
mov
cs
test
ja
jmp
inc
adc
and
shl
movsb
sbb
jmp
in
and
jge
push
jl
add
pop
mov
jns
xchg
inc
xchg
enter
bound
lret
cmpsb
mov
mov
jmp
push
clc
int3
je
shll
and
jg
inc
push
outsb
inc
jg
in
je
aas
pop
dec
fdivrp
cmp
scas
mov
imul
gs
rorb
idiv
push
xor
xchg
dec
cmp
cld
xlat
jg
xorb
pop
mov
sbb
xchg
add
mov
and
in
and
ret
int3
rcrl
mov
dec
jne
xchg
push
js
dec
and
fwait
dec
fistpll
popf
in
aad
lods
out
popf
jno
pop
jle
mul
cmpsl
xchg
pop
movsb
js
inc
push
ss
mov
dec
ffreep
pusha
sti
sub
inc
das
or
jbe
push
js
or
sub
mov
fxch
or
leave
mov
fs
pop
adc
pop
fmul
stos
xchg
ds
and
adc
fxam
test
dec
test
movsl
inc
pushf
cwtl
push
xlat
jl
sbb
shlb
mov
aaa
movsb
idivl
sbb
shrl
divb
push
push
lahf
fucomip
cmc
imul
or
fwait
pop
mov
repnz
mov
dec
sub
dec
iret
mov
push
dec
gs
sub
repnz
cmp
sbb
outsb
mov
daa
mov
inc
inc
out
fdiv
inc
sbb
push
pop
push
inc
inc
ret
and
mov
jo
incl
int
jmp
loope
dec
push
and
or
test
rcrb
rorl
mov
movsl
sysenter
clc
inc
fwait
ss
mov
adc
sbb
xor
mov
pop
addl
sti
mov
jp
shlb
imul
xlat
loope
sbb
add
push
sbb
push
inc
test
sbb
mov
daa
push
test
xchg
ret
mov
sti
mov
sub
xchg
out
fcoms
dec
dec
mov
notl
xchg
cwtl
imul
jno
or
sub
imull
gs
std
inc
push
mov
jecxz
testb
dec
int
jle
xor
sub
jb
adc
nop
sbb
cmp
adc
and
sahf
push
mov
dec
popa
and
push
mov
push
cmp
pop
push
cmpsb
sti
insl
or
fisttpl
and
push
inc
push
in
testl
push
testb
sub
insb
mov
mov
imul
movsl
xor
mov
or
in
faddl
test
arpl
sub
lcall
xchg
jne
out
lea
imul
adc
jecxz
sub
cmp
inc
adc
and
adc
data16
mov
cmp
push
in
outsb
clc
sub
cli
adc
mov
das
or
xchg
or
jns
lahf
jo
mov
mull
mov
iret
cwtl
mov
mov
xchg
jp
xchg
mov
cltd
fwait
pop
loopne,pn
sub
lock
das
fs
dec
xor
sub
insb
dec
mov
pop
sbb
divb
pop
mov
outsb
xchg
imul
imul
adc
hlt
test
popf
mov
jns
dec
push
mov
imul
cmp
push
jle
lret
mov
in
inc
mov
aaa
shl
sbb
ret
sub
cmpsl
xchg
cld
mov
fstl
mov
sub
call
push
into
cmc
sub
xchg
jb
es
or
inc
xor
or
clc
push
and
xchg
inc
add
cmp
das
xor
cmpsb
in
cmp
xchg
fs
jo
outsl
and
pushw
or
mov
movsl
out
or
jnp
push
jne
mov
cs
push
pop
addr16
dec
mov
push
mov
in
pop
mov
xchg
dec
mov
and
jge
in
popf
pop
sub
mov
pop
repz
sahf
push
ds
cmp
arpl
clc
mov
push
insb
xchg
push
cmp
ja
popf
into
pop
shll
adc
in
inc
sub
in
call
mov
push
ficoml
adc
ds
mov
popf
sarb
negb
add
call
dec
jp
xchg
mov
mov
jp
mov
push
jne
rcrl
roll
cmp
scas
and
xchg
and
mov
fldl
movsl
int3
add
xor
cmp
test
lea
mov
fldl2e
insb
mov
sti
push
sbb
add
cld
lock
popa
lret
and
mov
sbb
cmp
lock
cmp
pop
sbb
in
pop
mov
xor
in
sbb
pushf
jb
mov
pop
mov
rcpps
mov
hlt
xchg
and
sbbl
mov
xchg
int3
je
out
clc
imul
leave
sarb
shlb
ss
fisttpll
into
rcrb
mov
inc
loope
jbe
fisttpll
in
adc
adc
sub
call
adc
outsl
push
adc
pop
mov
ret
sub
aaa
pop
mov
inc
cmp
xchg
xor
popa
inc
push
and
dec
dec
fbld
outsb
jns
lods
xor
ret
clc
cld
cmp
into
adc
adc
dec
orb
cwtl
mov
or
movsb
and
shlb
jg
mov
mov
enter
add
in
mov
push
mov
dec
in
outsb
imul
push
test
jecxz
aam
lcall
jae
mov
sub
push
cmp
or
lea
call
or
xchg
in
dec
sbb
pop
inc
mov
sbb
out
mov
xchg
je
cmp
test
ss
je
or
adc
repnz
push
cmp
jmp
push
pop
xlat
jns
inc
cmpsl
add
and
clc
and
xchg
inc
cld
or
out
in
rcrl
scas
stos
pop
xor
adc
jmp
adc
ljmp
inc
in
sbb
cmc
test
mov
push
pusha
pusha
icebp
adc
xchg
stos
adc
xchg
and
pusha
push
jns
xchg
or
and
dec
mov
jbe
push
in
push
mov
loopne
cmc
push
ss
out
pop
dec
psllw
popf
stos
xor
aam
dec
rorb
in
dec
int3
push
push
rcrb
cmc
xor
mov
adc
clc
data16
int3
test
inc
lahf
loopne
push
xchg
cmp
sbb
mov
inc
jbe
add
mov
clc
ss
mov
sbb
mov
ljmp
mov
repz
in
nop
sbb
pusha
pusha
mov
adc
xor
rcrl
push
aad
in
jo
jl
icebp
test
adc
pop
cli
push
lods
insb
ret
mov
or
dec
jbe
mov
add
sahf
xchg
lahf
xor
pop
mov
mov
cmpsb
inc
cltd
outsb
jbe
mov
out
jno
push
push
jb
test
adc
mov
mov
sub
repnz
dec
jmp
xlat
mov
jno
mov
mov
iret
std
lock
fsubrp
sbb
mov
xor
fildl
loopne
xor
shrl
sbb
fidivl
or
and
sahf
call
je
cltd
rolb
aam
or
shr
and
stc
in
jb
rolb
mov
xchg
subb
add
mov
into
or
arpl
push
rorl
or
jo
xor
mulb
jb
adc
sbb
mov
cmpsb
and
call
repnz
mov
jne
cmc
shrl
push
mov
dec
xor
add
pop
mov
cmp
das
mov
jp
decb
mov
xchg
scas
inc
pop
jnp
dec
flds
iret
sub
inc
sub
cmpsb
jno
push
setbe
mov
jbe
ret
movsl
dec
lds
es
mov
inc
lcall
hlt
inc
lods
scas
rcrl
push
prefetch
loope
mov
sbb
addb
in
test
and
in
dec
dec
jb
pop
mov
push
and
js
sub
sti
movsl
sti
out
test
cli
mov
dec
mov
and
ljmp
sarl
cwtl
sub
adcl
clc
sbb
jecxz
sbb
inc
pushf
outsl
leave
jge
repnz
add
paddw
sar
sbb
dec
ds
rcll
push
fs
adcl
mov
fwait
mov
rol
pop
sbb
xchg
icebp
repnz
pop
sar
in
mov
ret
adc
jge
jns
sub
data16
fldcw
roll
pop
mov
add
aaa
pop
dec
std
mov
mov
sbb
jmp
in
mov
or
test
or
push
sbb
dec
testb
test
push
addr16
inc
xchg
rol
dec
aaa
jp
jb
sbb
into
sub
add
icebp
sbb
or
sbb
rolb
iret
testb
lahf
xchg
mov
xchg
xchg
movsl
and
push
les
cmp
rorl
pop
ds
sti
pop
jns
add
outsl
mov
lret
mov
mov
call
loope
dec
movsb
out
mov
mov
leave
test
insb
movsb
aad
gs
cmpsb
mov
lcall
xchg
hlt
and
cmp
sbb
push
mov
xchg
dec
xchg
jecxz
cmp
adc
xchg
mov
movsl
xchg
sub
frstor
cld
or
cmp
mov
sarl
cwtl
hlt
push
shl
lcall
pop
xlat
mov
fcoms
imul
mov
adc
popf
cmp
pop
mov
or
adc
mov
mov
out
mov
pop
lahf
push
and
add
ficoms
pop
jb
out
in
mov
push
adc
push
dec
lds
or
scas
in
sbb
push
or
mov
xor
call
sbb
cmc
mov
xor
fs
ffreep
and
xchg
xlat
popa
addr16
xor
sbb
jle
repz
lcall
add
mov
fs
sub
in
mov
or
xor
xchg
es
dec
jb
sub
popf
cmp
test
xchg
inc
aam
std
cmpsl
xorl
push
bound
aad
mov
lcall
stos
std
fnstsw
je
xlat
sub
cmp
cmp
repz
jmpw
lods
mov
pop
jg
cmp
cmp
sub
es
push
popa
cmp
push
dec
jbe
loop
frstor
call
pop
xor
aad
mov
xchg
gs
inc
mov
jnp
jb
sub
fldcw
out
stos
ljmp
jp
aas
or
cmpsb
mov
mov
dec
xchg
xchg
dec
mov
sub
ljmp
push
add
outsb
arpl
jl
jns
test
dec
addr16
and
mov
cmpsb
push
xor
fists
inc
add
cmp
and
insb
inc
mov
cmpsl
xlat
cmp
lret
cmpsl
sub
mov
adc
fldt
xchg
jmp
test
daa
sub
out
lock
xor
loop
xlat
mov
scas
cwtl
pop
jb
pop
push
jle
inc
cmc
xor
fbld
negl
cmp
out
test
and
pop
sub
mov
in
xchg
jb
lea
fdivl
aaa
push
mov
mov
inc
pop
mov
lock
or
scas
popa
inc
popa
or
fbstp
adc
aad
lea
inc
adcb
imul
cs
xorl
push
aad
xchg
pop
out
jb
add
sbb
or
mov
js
sub
xchg
jecxz
cmpsb
push
insb
xchg
cmpsb
stos
repz
fdivrs
mov
sub
xlat
inc
and
cwtl
lret
movsb
adc
sub
loope
out
mov
ficoml
inc
sbb
inc
dec
mov
pop
pop
mov
jecxz
jne
popa
test
vpsraw
mov
sub
adc
sbb
test
jmp
rolb
jbe
lds
or
jno
jp
cmp
dec
loopne
and
stos
cmpl
dec
mov
jbe
lret
imul
arpl
aaa
cmpsl
pop
or
push
fcmove
adc
je
stos
mov
test
jge
xchg
dec
xchg
adc
xor
and
inc
mov
mov
aad
xor
pop
imul
test
push
mov
repz
ret
idiv
sub
dec
shll
mov
mov
lret
into
arpl
js
outsb
into
lds
jmp
out
xchg
das
and
movsl
sti
or
ljmp
dec
notl
pushf
inc
andb
into
pushf
fst
js
fldenv
loope
jge
gs
inc
into
cwtl
inc
scas
mov
lods
jl
pop
cmp
or
test
out
cld
rcll
lds
or
icebp
pop
xchg
inc
jbe
sbb
subl
sar
mov
mov
cmp
lcall
scas
decb
jge
faddl
inc
fnstcw
mov
test
mov
mov
xchg
testl
cmp
or
test
or
sbb
add
ja
pop
sbb
fcomip
sti
pop
add
mov
inc
mov
push
cmp
mov
cmp
jmp
and
sub
in
xor
int
cli
cmp
and
js
sbb
sub
jnp
shll
loopne
or
loopne
int3
xchg
cwtl
les
mov
lret
int3
cwtl
in
fnstsw
out
fs
std
xor
mov
pop
mov
pop
or
mov
fnsave
add
enter
adc
stos
mov
loopne
loop
sahf
loop
mov
test
or
xor
repz
pop
into
add
in
data16
mov
inc
daa
add
fsubs
and
cmp
jbe
out
arpl
inc
cmpsl
jg
and
sbb
xlat
xor
mov
push
addr16
inc
mov
xchg
cmp
lret
daa
insb
icebp
add
and
mov
jns
data16
jmp
roll
add
mov
jg
adc
mov
lret
fs
pushf
lahf
sub
popf
pop
lea
pop
clc
cmp
sahf
leave
pop
aas
xor
xlat
repnz
stc
inc
cld
out
jle
stc
sub
shlb
xor
cmp
std
dec
cwtl
movsl
enter
fadd
call
mov
jle
jmp
jge
fcompl
hlt
test
mov
dec
jnp
push
mov
ja
dec
sahf
jnp
jae
dec
push
xchg
sbb
sbbb
inc
cmp
mov
lock
mov
push
inc
scas
imul
test
adc
bound
xor
enter
pop
in
push
xchg
outsl
into
xlat
test
subb
lahf
addl
fnsave
mov
cmpsb
push
pop
aad
pop
stos
lds
adc
mov
loope
loope
lea
adc
fisttpll
ljmp
mov
enter
inc
jne
pop
insb
mov
mov
mov
mov
mov
stos
jmp
shlb
divl
daa
add
sub
push
and
test
int3
into
mov
pop
push
fwait
adc
pusha
sahf
mov
out
mov
jb
adc
mov
sahf
test
rol
aaa
fld
addb
fstpl
pop
xchg
lds
lret
and
nop
arpl
push
push
js
mov
stc
ja
adc
push
iret
std
mov
or
outsl
jb
xchg
cli
sub
in
rorb
mov
sbb
xchg
cmp
push
insb
cmp
stos
sub
dec
pop
dec
mov
pop
jb
fstpl
jno
fmull
out
dec
or
out
orb
insl
std
xor
inc
repnz
hlt
dec
lahf
in
sub
filds
incl
dec
ret
add
test
scas
push
lods
xor
in
or
stc
imul
ja
xlat
pop
aad
and
std
sbb
aas
jns
dec
clc
dec
psrad
enter
clc
jbe
arpl
scas
inc
out
dec
loope
inc
mul
mov
rcrl
dec
mov
stos
clc
jne
jne
jecxz
add
popl
pop
leave
push
outsb
jnp
outsb
mov
inc
jp
pop
inc
mov
adc
inc
popa
xor
loop
and
ds
in
and
inc
push
push
jecxz
sti
aas
and
mov
scas
jmp
icebp
xchg
xor
jge
jne
cmp
mov
cmpsl
fisttps
icebp
out
mov
jmp
jg
pushl
fmull
sub
add
jae
aam
mov
in
xchg
std
jno
pop
sbb
repnz
clc
cmp
in
add
sbb
insb
shrl
pop
xchg
fst
cli
inc
enter
scas
push
lock
dec
cld
mov
movsb
sub
cwtl
std
push
cld
pop
stc
cmp
mov
fcoms
jno
cmp
call
jno
sub
mov
testl
lahf
jo
int3
mov
addb
sahf
pushf
sbb
lret
popa
ljmp
or
movsl
cmp
pop
out
xor
in
sbb
and
xor
call
aaa
fnsaves
push
out
cmp
sbb
adc
call
cmpsl
push
mov
add
mov
loopne
cmp
jnp
push
dec
adc
lret
lret
dec
test
movsb
in
aas
jae
and
mov
test
fildll
xor
loope
jns
out
xchg
or
cld
mov
inc
std
cwtl
inc
shr
jge
cwtl
in
js
xor
mov
adc
mov
mov
push
cwtl
mov
out
xor
jmp
sbb
fsubr
mov
mov
mov
xchg
inc
inc
ds
out
sub
xchg
clc
dec
repz
adc
mov
loopne
jp
fidivrs
or
into
jge
pop
mov
sti
lods
cmp
aad
mov
mov
outsb
pop
cmp
xchg
push
out
adc
adc
clc
xchg
sbb
lea
mov
loop
or
xchg
jmp
jb
jp
mov
adc
in
pop
lock
mov
xchg
das
aam
cmp
add
mov
xchg
daa
shlb
adc
jmp
lods
loop
cmpsl
pop
and
push
inc
mov
xchg
dec
loopne
popf
cmp
pop
loop
ss
dec
daa
js
push
frstor
arpl
subl
inc
mov
leave
cli
test
ret
or
xchg
cmpsl
add
aam
mov
xor
data16
jge
xchg
mov
es
pop
insb
stos
loopne
into
in
enter
sbb
sbb
repz
sbb
mov
jl
subb
xor
dec
pop
shll
aaa
pop
push
cmpsl
and
fs
test
adc
test
ucomiss
cmp
pop
repz
scas
mov
jecxz
inc
in
aad
push
xlat
and
inc
lret
aam
pop
jge
roll
xor
mov
sbb
xchg
push
jmp
jmp
xlat
or
jge
sbb
jp
push
and
insb
cmp
or
and
pop
jb
ja
pop
pop
shr
fimuls
xchg
xlat
cwtl
lods
test
xor
pushf
mov
or
xor
test
mov
cli
or
in
mov
and
insl
in
cs
lahf
or
aas
push
test
adc
ucomiss
icebp
xorb
sbb
cltd
mov
cs
loop
ljmp
mov
sub
out
xchg
enter
fdivs
mov
leave
jns
scas
cmp
je
add
xchg
or
std
enter
les
push
aad
xchg
mov
mov
cwtl
sub
fwait
lock
xchg
test
adc
aam
outsl
insl
lods
test
data16
ret
xchg
mov
push
ret
into
orl
inc
pop
test
stc
sarl
jle
add
inc
pop
push
repz
loopne
inc
push
or
dec
sbb
push
rorl
pop
orb
add
shrb
loope
ret
sbb
adc
loopne
jne
and
sbb
push
pop
les
bound
mov
std
mov
inc
mov
leave
lea
je
pushf
pop
add
mov
add
jg
testb
fs
push
lret
stos
sub
or
sbb
adc
xchg
or
sarl
push
ret
or
cs
and
mov
bound
and
icebp
fistps
push
inc
faddl
outsl
pop
xchg
push
addb
inc
jp
pop
or
push
aaa
into
hlt
push
popf
sub
fbld
gs
sbb
adc
mov
incb
jl
cmpsl
movsb
jle
and
mov
pop
xorl
clc
mov
icebp
rorb
int3
cmc
or
leave
mov
sub
nop
ja
fucom
cmp
das
xchg
add
xor
lret
dec
insb
inc
pop
push
out
outsl
xchg
test
adc
fdivl
cmp
loopne
fcmovnb
dec
mov
sub
cmpsl
mov
inc
sbb
pop
mov
fnstenv
mov
jae
or
icebp
pushf
sbb
cmp
std
and
mov
stc
sub
inc
jne
mov
mov
inc
dec
shrb
ds
mov
popf
outsb
pusha
lock
or
mov
lock
shl
dec
mov
mov
push
call
fs
sub
nop
adc
ret
sar
xchg
inc
pop
pushl
nop
call
adc
pop
je
negb
jecxz
cmpsb
xchg
or
sti
sbb
mov
push
fisubs
xorb
call
sbb
insb
sti
outsl
mov
mov
mov
rolb
lods
cmp
pop
movsb
into
or
int3
stos
scas
cli
mov
and
cmp
lret
fwait
sbb
mov
loope
xchg
inc
sbb
pop
mov
jae
jns
movsb
sub
adc
adc
loope
or
test
xor
cmpsl
cmp
and
jns
stc
ficomps
xor
cwtl
sbb
cmp
sbb
jne
or
mov
mov
dec
enter
pop
cld
mov
xchg
xchg
or
mov
in
sbb
push
mov
sbbl
sbb
adc
lahf
sbb
sub
rcr
int3
rolb
xchg
mov
les
lds
jo
rorl
fs
orl
xchg
add
add
mov
pop
lret
and
insl
mov
arpl
addl
xor
stos
pushf
jge
cmovs
mov
es
or
enter
add
push
popf
icebp
push
insb
nop
in
movsb
lcall
mov
in
not
js
dec
scas
jns
stc
ret
xor
pop
ja
sub
mov
daa
je
add
inc
sub
dec
and
test
pop
jo
pushf
jns
daa
pop
cli
into
push
jg
pop
sub
outsb
push
mov
mov
add
gs
outsb
xor
aaa
mov
xchg
cli
loope
lods
or
fwait
inc
loopne
ds
mov
pusha
xchg
mov
jg
mov
add
dec
xchg
ficoms
xchg
push
inc
lcall
pop
sub
xchg
push
repz
inc
loope
mov
mov
sbb
and
loop
mov
in
out
xchg
push
iret
rorl
or
mov
xchg
mov
ss
sub
fnstsw
xlat
rcr
mov
or
aam
add
outsb
in
mov
shll
pusha
mov
xor
push
neg
xor
rcl
dec
decl
leave
add
and
inc
mull
test
test
aam
pop
sub
jno
out
stos
cltd
cs
stc
mov
sub
xchg
aad
test
bound
ds
faddl
cs
push
or
cmp
imul
dec
fdivr
xor
idivl
test
xor
shl
in
in
testl
inc
fnstenv
sbb
call
cmp
ret
shrb
gs
mov
pop
inc
je
inc
les
xor
push
mov
out
lods
ds
jg
add
push
cmc
adc
xor
or
in
xlat
test
pop
mov
je
inc
cmpsb
cmp
jmp
fwait
inc
pop
mov
scas
mov
into
lahf
sub
pop
insl
dec
scas
dec
push
add
js
lock
xorb
test
mov
jb
push
je
add
mov
jmp
inc
fmull
nop
bound
shll
jo
dec
dec
ret
cmp
or
je
test
iret
jo
cltd
pop
pop
call
mov
call
leave
mov
xchg
xchg
scas
pop
pop
cli
cmpb
pop
test
cmp
lea
jb
and
cs
lods
out
and
test
fldenv
jnp
xchg
cmc
repz
sbbl
clc
test
das
xchg
add
xor
das
cmp
jnp
adc
ror
out
sbb
movsb
and
fisubl
lret
bound
add
adc
adc
dec
dec
popa
push
stos
aam
pushf
pop
dec
push
or
xchg
pop
xor
mov
in
mov
sub
xlat
movl
jp
mov
adc
jns
decl
xchg
mov
jb
cli
hlt
lea
fcomip
ret
rorb
jne
and
sahf
add
mov
movsl
push
in
repz
add
mov
cmpsl
mov
gs
sti
jne
lcall
addr16
and
movsl
pop
movsl
inc
iret
repz
jecxz
pop
popf
ret
into
jae
dec
mov
sti
sbb
push
adc
popa
xchg
sbb
mov
push
cmpsl
pop
fistpll
repz
sbb
lret
pop
test
sbbb
cmp
in
sub
sub
mov
dec
sbb
adc
inc
mov
xor
or
adc
movzbl
add
sub
push
lret
and
sti
sub
stos
mov
mov
shlb
enter
and
outsl
mov
into
fwait
and
sbb
test
mov
sbb
pusha
or
ret
mov
mov
mov
lods
jne
fdivrs
lret
and
sub
add
lock
jge
imul
dec
jl
adc
in
mov
jg
adc
cli
jmp
mov
fldenv
clc
and
scas
adc
lcall
negb
push
insb
dec
and
mov
jnp
daa
mov
pop
call
rcll
ret
popa
int
sub
subb
mov
inc
jmp
sbb
xor
sbb
clc
and
call
stc
cmpsb
xlat
pop
sti
and
out
not
test
test
repz
fiaddl
cmpsb
and
or
mov
fnstenv
ret
jbe
prefetch
or
adc
sbbb
dec
add
js
xchg
push
int3
bound
cli
mov
mul
andb
lock
mov
pop
xchg
jne
cld
das
movsb
das
sbb
jb
sbb
ss
cmpsb
mov
aam
mov
push
sbb
push
shr
ja
lcall
and
pusha
aad
gs
aaa
popf
andl
jne
inc
daa
sub
lea
or
sbb
mov
cmpsl
and
xchg
xor
pop
jmp
sbb
test
stos
repz
pop
rclb
mov
push
pop
fnstenv
rol
iret
sub
out
aad
push
jmp
pop
mov
je
lahf
lods
lret
loope
jbe
cmp
adc
jl
sbb
pop
les
or
fucomi
sbb
push
mov
inc
out
sub
fldenv
or
mov
cltd
addb
lret
push
push
jb
aaa
in
xor
in
das
test
dec
mov
mov
aam
xchg
push
adc
mov
mov
sbb
pop
out
adc
or
arpl
jbe
xor
mov
inc
or
xor
push
xchg
xchg
loopne
jns
ljmp
out
mov
dec
imul
test
mov
aaa
test
inc
test
mov
mov
mov
mov
insl
test
fcompl
daa
rcr
insl
test
pop
mov
sbb
sahf
xor
rcr
jge
fildl
fs
test
cmpsl
jae
cmp
mov
scas
adc
mov
push
dec
sbb
movsl
gs
std
inc
push
std
push
js
test
in
test
stos
fbld
imul
sahf
jl
inc
cwtl
je
or
xchg
pop
push
rol
push
mov
inc
ss
inc
xor
add
dec
aad
aas
mov
imul
cli
adc
mov
xor
mov
mov
mov
jl
in
fadds
pop
lret
outsb
ljmp
lahf
dec
cld
mov
pusha
xchg
jo
pop
mov
jp
scas
or
xlat
sbb
mov
cmp
les
and
jmp
push
jge
cli
or
ss
push
les
popf
arpl
cmp
and
sbb
sahf
jb
out
popa
push
jg
loopne
fs
cwtl
jns
jns
jecxz
fdivs
xchg
andl
jl
sub
dec
mov
jmp
sub
jno
fstpl
dec
nop
pop
es
pop
xchg
ficoms
or
xchg
xchg
emms
lret
and
rclb
mov
xor
mov
mov
dec
fwait
aas
neg
repnz
mov
cli
cmp
insb
ds
dec
pop
icebp
outsb
dec
jecxz
ja
jo
movsb
idivl
aad
pop
dec
mov
add
mov
adc
rclb
jnp
movsl
push
inc
shrb
jl
icebp
and
cmpsb
mov
clc
out
inc
icebp
pop
fwait
stc
inc
push
mov
xchg
push
aam
sti
int3
test
cmpsb
xchg
nop
xor
cmpsl
js
out
cmp
stos
mov
push
imul
or
popf
adc
aaa
cmovnp
movsl
xchg
mov
sub
xor
rorb
push
lods
sbb
popa
mov
das
and
sub
inc
into
std
daa
push
sar
dec
mov
loope
mov
xchg
popa
stc
xor
push
mov
lock
mov
push
insb
lods
and
lock
in
icebp
jns
int3
sub
push
loop
aas
fisttpll
sub
add
imul
lods
es
jp
pop
pop
pop
jp
push
out
adc
xchg
or
xor
xchg
cmp
ret
arpl
jg
ljmp
sub
out
jno
xor
lret
cmp
sbb
mov
imul
mov
pusha
cli
cmpsb
add
xor
fcmovnu
mov
sub
nop
fsubrs
rorb
or
cs
fsubrs
insb
ljmp
sbb
into
cmc
out
movsl
mov
fnstsw
sub
fwait
push
ds
jbe
mov
mov
mov
dec
xchg
push
push
lds
jl
test
mov
add
aad
clc
jl
in
js
ss
loopne
push
and
and
pushf
ficompl
pushf
xchg
stos
or
imul
and
cli
stos
pop
adc
sbb
sub
into
mov
mov
adc
enter
or
sarl
enter
mov
pop
mov
pop
mov
stc
dec
fnsave
popf
repnz
pop
add
mov
dec
bound
sarb
inc
jb
push
cwtl
sub
stc
ficoms
push
sub
or
lods
pop
popl
aad
jl
fmull
lods
push
pop
mov
jae
jb
data16
push
push
push
shll
mov
adc
cmpsl
mov
in
push
repz
push
mov
and
subl
jmp
sub
xchg
dec
out
imul
int3
jl
loopne
loop
ds
inc
xchg
mov
lret
ret
insb
sbb
dec
mov
lret
scas
mov
test
jb
lret
push
add
pop
push
fwait
mov
aas
xchg
push
push
mov
mov
or
or
rcrb
addl
cld
loop
ja
in
adc
cwtl
stc
push
jno
stc
sti
xor
lock
add
cmc
adc
in
inc
cld
inc
stc
pop
sub
stc
mov
sbb
xor
movsl
mov
xor
and
in
test
push
xor
ja
adc
xor
aad
xchg
clc
pop
cld
mov
sbbl
mov
xor
pop
ljmp
ss
inc
nop
test
scas
pop
push
pusha
std
xor
fldt
in
add
and
mov
cwtl
scas
or
in
inc
adc
nop
and
je
shll
pop
pop
mov
addr16
mov
outsl
lret
xor
test
cmp
popa
ja
xor
lds
mov
inc
les
test
stos
mov
and
and
xor
mov
pushf
outsb
mov
fs
dec
sub
adc
push
inc
fistl
das
jbe
add
testb
flds
inc
stos
fisubl
sarb
sarl
out
mov
lcall
int3
ret
xlat
pop
and
push
imul
adc
fnstcw
sbbb
mov
aas
push
adc
jne
xchg
dec
lret
add
stos
jg
inc
xchg
dec
outsl
gs
mov
popf
lcall
jge
cmp
cmp
push
lret
mov
pop
test
adc
push
adc
push
add
in
or
mov
arpl
loope
lret
scas
lret
inc
loopne
imul
fisttpll
insb
cmpsb
mov
cmpsl
jno
enter
xchg
into
and
pop
adc
ljmp
ss
insl
jecxz,pn
ficompl
adc
lret
mov
ljmp
mov
cmp
rorb
out
add
rcll
adc
adc
out
xchg
pop
inc
out
dec
inc
jo
cmp
je
leave
pop
jmp
idivb
bound
xor
imul
pop
xlat
in
scas
inc
stc
mov
and
daa
xchg
dec
in
fidivl
pop
sbb
mov
loop
rclb
xor
out
jae
inc
insl
pop
xor
dec
fldenv
inc
jecxz
or
add
sub
pop
jo
sub
sarb
sbb
pop
adc
daa
mov
and
popf
ret
sti
dec
mov
mov
aam
and
or
xchg
dec
js
pop
mov
sub
push
lcall
in
jb
clc
lock
inc
sub
sbb
fcomip
push
loope
mov
cwtl
cli
imul
sbb
pop
adc
adc
mov
stos
cmp
xor
mov
mov
jo
imul
clc
cmc
xor
pop
add
pop
aaa
push
test
dec
and
repnz
int3
mov
mov
out
fstl
adc
mov
fbstp
andb
xchg
test
lock
insl
clc
lods
jecxz
cmp
cmpsb
xchg
or
popa
fnstcw
scas
jl
rorl
push
fs
int
and
pop
daa
push
xchg
jbe
and
xchg
pusha
dec
sti
inc
sbb
sbb
inc
adc
mov
push
or
sbb
out
jo
add
mov
frstor
mov
imul
mov
pop
inc
adc
dec
push
sub
int3
fscale
or
test
sbb
negl
jmp
out
push
mov
mov
adc
sbb
mov
lea
xchg
sbb
mov
pop
sub
iret
jl
ja
push
int3
xor
jecxz
dec
scas
stos
adc
inc
inc
test
pop
cmp
stos
sub
jle
sbb
mov
fwait
movsl
xchg
inc
xor
adc
add
stos
icebp
jb
ljmp
sbb
adc
fiadds
bound
push
ss
mov
aad
jae
pop
in
addr16
idivb
popa
popf
mov
jo
dec
sbb
mov
cmc
push
into
cmp
inc
dec
pop
jmp
jle
icebp
cld
pop
push
xchg
fisttpll
mov
push
sub
push
and
sub
cmp
jmp
jbe
test
mov
mov
icebp
dec
gs
mov
pop
add
xchg
repnz
loop
imul
and
pop
sbbb
inc
push
and
movsb
les
jb
xor
shll
dec
negl
data16
lock
jmp
push
popa
in
pop
orb
cwtl
push
lods
into
mov
xor
cmp
xchg
roll
je
cwtl
dec
ret
int
mov
test
add
mov
cmp
cmpsb
jbe
jne
xchg
out
call
icebp
les
pop
jg
inc
push
push
fdivrl
or
add
push
add
test
leave
lea
xchg
and
add
jp
js
and
fnstcw
mov
cmc
mov
adc
scas
lods
mov
idiv
test
push
mov
idivl
adc
fisubl
ret
mov
insb
ljmp
jp
bound
add
fistpll
mov
sub
add
push
lcall
clc
lods
jg
ja
cmpsb
cwtl
jecxz
repnz
xor
lods
or
call
sbb
sub
icebp
mov
dec
dec
fidivrl
aam
data16
ss
sbb
rcll
cltd
pushf
das
cmp
lret
cli
ficoms
jge
push
sub
shr
test
mov
or
cmp
clc
dec
xchg
out
cmp
cmp
fdiv
fsubrs
arpl
cmp
loopne
hlt
fists
ja
add
loop
cli
mov
inc
andb
repnz
and
cld
and
ficompl
pop
jno
pushf
push
inc
xchg
xchg
dec
xchg
jo
gs
emms
nop
inc
fsubrp
mov
cmp
inc
push
in
jbe
inc
mov
int
dec
orb
ret
jns
xor
push
xor
dec
mov
mov
pushf
lcall
cmp
orb
lea
and
adc
sbb
dec
enter
mov
test
sub
setno
out
sub
mov
decl
aam
popf
cmpl
loop
inc
sahf
and
push
aas
jns
outsl
sub
pop
dec
lock
mov
ss
adc
ss
movsb
pop
mov
sbb
xorl
adc
inc
mov
ss
adc
sbb
adc
movb
fidivs
fdivs
stos
iret
xor
dec
jp
hlt
mov
jl
adc
stos
xchg
rclb
mov
lds
push
lds
push
and
popf
les
out
sub
sub
xchg
lea
adc
stos
int3
arpl
cmpsb
loopne
sbbb
sub
lods
mov
jmp
shr
or
sbb
sub
sub
mov
pop
jge
push
xchg
pop
cmp
or
xchg
repz
sbb
jge
xchg
repnz
pushf
in
xor
inc
and
sub
fnstenv
add
jae
jp
jo
inc
mov
lods
push
into
ds
in
sub
inc
int3
dec
insb
rcll
sbb
imul
adc
pop
inc
cmpsb
pop
mov
or
jb
scas
dec
rorl
sbb
pop
aas
xchg
pop
push
ljmp
mov
fmul
imul
pop
add
jle
jg
fstpl
outsl
in
mov
call
inc
mov
leave
sahf
inc
fdivrp
sbb
pop
daa
inc
addr16
roll
push
mov
stos
inc
loop
int3
and
push
jg
mov
or
mov
jmp
aaa
push
cmpsb
shlb
xrelease
lcall
mov
adc
cwtl
cs
push
dec
fnsave
dec
idiv
popa
or
jnp
rclb
rcrb
or
lods
xchg
imul
push
ss
lcall
out
pusha
xor
jp
addl
cmpsl
mov
and
xchg
orl
xor
aaa
out
and
pusha
vfrczsd
mov
lcall
push
push
daa
inc
xor
lock
loopne
jl
pushf
fcomp
jne
adc
push
dec
fwait
ljmp
psubsw
loope
out
cmp
and
cli
mov
lcall
ret
cmp
leave
mov
lret
sub
or
lds
sbb
jl
jle
dec
pop
cmp
das
mov
cmp
jle
jecxz
and
mov
ret
xor
dec
cmp
add
add
scas
xlat
pop
test
dec
ds
jle
jle
or
into
imul
lea
jno
call
push
clc
aas
out
cli
add
xlat
jb
pop
pop
dec
sahf
mov
pop
js
ret
movsl
test
shl
inc
mov
dec
call
ud0
jmp
xchg
cmpsl
push
sub
xor
insl
mov
rcrl
adc
and
jge
pop
sahf
mov
jb
pop
sysenter
out
sahf
addl
outsl
inc
das
test
das
mov
sbb
clc
mov
cwtl
iret
bound
dec
test
rorl
mov
test
add
aad
fldt
jl
sti
into
sub
popf
cwtl
and
ja
push
sbb
cmp
shlb
cmp
int
popa
loopne
dec
sarl
xlat
rcll
out
pop
subb
lret
insl
adc
add
add
dec
lret
dec
icebp
hlt
push
incl
cmp
mov
loop
imul
fisubl
ffree
mov
cmp
enter
push
aad
xchg
mov
mov
cmp
push
popa
jg
add
scas
jecxz
test
adcl
fdivl
sysenter
ds
dec
jl
cmp
dec
dec
lods
push
js
das
and
lcall
jl
xadd
sub
rorl
test
push
and
push
out
xchg
jg
push
xor
xchg
inc
sbb
mov
jp
mov
pop
ja
das
scas
sarl
hlt
lcall
sub
add
popa
mov
adc
xchg
mov
xor
ss
negb
imul
xor
shlb
cli
loopne
cld
imul
aas
push
shr
test
arpl
mov
jg
addl
dec
das
mov
xchg
add
outsl
mov
mov
popf
call
lret
mov
cld
push
loop
sbb
sub
addr16
dec
inc
jb
xor
jno
ret
jbe
bound
nop
xchg
cld
mov
aad
sub
cli
mov
xchg
and
scas
test
mov
xchg
xlat
loop
inc
xchg
inc
pop
or
xchg
jl
cmc
push
int3
insl
push
inc
jns
stc
and
add
loopne
ja
icebp
daa
mov
xchg
lds
lock
ds
mov
sbb
iret
negl
mov
inc
out
pop
or
xchg
adc
dec
int3
and
mov
xchg
fdivr
lock
pop
data16
ja
cmp
mov
test
sub
pop
mov
or
dec
adc
jno
aam
xor
jnp
jge
sub
insl
or
aaa
add
and
lds
push
leave
jo
add
rclb
imulb
testb
mov
cmpsl
outsl
mov
incb
out
repnz
inc
dec
ja
shrl
inc
movsb
popf
mov
imul
sbb
mov
fs
jb
shrl
in
imul
or
lret
jne
in
jecxz
jp
sbb
cwtl
mov
or
in
icebp
lcall
scas
jno
dec
cmp
stc
add
pop
jne
cmpsb
xchg
stos
mov
pop
stos
jge
jnp
xchg
insb
aam
insb
ljmp
mov
test
adc
pushf
std
fsubrs
jg
sbb
push
lret
dec
popf
outsl
repnz
push
mov
mov
cmpsb
cli
adc
pop
xchg
mov
daa
out
adc
jae
pop
sub
add
adc
mov
iret
in
mov
leave
mov
popf
bound
xchg
cmp
int3
sub
dec
and
mov
pushf
add
dec
mov
rcrb
lcall
ja
pushf
jp
lahf
jmp
popa
push
push
ja
xor
xor
xchg
loopne
leave
pop
ljmp
mov
and
xorl
xorb
jno
and
cmpsl
push
cld
stos
jo
and
cmc
sti
je
imul
loopne
es
xchg
pushf
xchg
rorb
lods
pop
push
jecxz
cli
sub
lcall
out
test
rorb
or
sbb
xchg
fdivs
movl
pusha
jnp
mov
gs
incb
mov
jp
aad
sub
pushf
xchg
incb
nop
imulb
fdivrs
test
xchg
ret
adc
movsb
test
pop
jns
bts
addr16
sbb
js
clc
fs
cli
loopne
mov
mov
nop
mov
sti
call
stos
xchg
ss
sbb
mov
in
fwait
cwtl
fdivl
stos
mov
sbb
test
clc
in
xor
scas
fildl
imulb
xlat
fsubrl
decb
movsb
mov
fcoms
pop
cmpsb
mov
out
je,pn
addl
outsb
mov
mov
xor
idivb
scas
rcl
jns
dec
stos
add
push
sub
dec
and
sub
mov
cmp
dec
add
xor
jnp
fistl
inc
or
push
stos
test
push
pop
add
fwait
sbb
shlb
insb
mov
push
ret
popf
or
gs
nop
inc
xor
dec
lods
pop
stos
cmpsl
sti
iret
sbb
in
push
test
push
xlat
sub
je
dec
gs
clc
rorl
mov
xor
aas
add
or
pop
into
pop
lret
imul
add
mov
mov
bound
in
ficompl
mov
xchg
mov
xorl
adc
inc
sbb
dec
xchg
mov
lahf
adc
add
xor
push
jbe
mov
push
jb
shlw
or
icebp
xchg
adc
and
mull
dec
fisttpll
sub
push
iret
mov
and
stos
adc
faddp
subl
cmp
sahf
mov
pop
pop
sarl
add
and
adc
mov
js
cld
divb
inc
jmp
ret
jno
cmp
pop
lea
mov
jb
lret
ret
jo
stos
data16
jns
lret
mov
pop
xchg
std
out
enter
fs
rolb
pop
xchg
push
push
inc
mov
dec
stos
inc
cli
into
push
jl
inc
dec
cmp
out
xchg
sub
jae
adc
dec
icebp
adc
imul
sub
xor
sbb
fistpl
or
mov
fmul
fistpl
les
dec
cmpb
dec
pop
shll
std
dec
sub
popa
xchg
fistl
jo
fsubl
lods
xchg
push
movsb
xor
pop
lock
add
cvtps2pd
inc
pop
add
popf
jb
stos
cmp
inc
or
clc
loopne
mov
sbb
out
scas
jno
sbb
or
mov
sub
sar
das
imul
push
xchg
dec
in
and
insl
lahf
sbb
mov
shlb
mov
sub
mov
mov
mov
lds
or
dec
jl
and
adc
jbe
jne
or
push
insb
jns
and
add
jb
mov
jmp
push
push
mov
xchg
push
adc
fistpll
xorb
cmc
cmp
loopne
mov
lret
lock
fldenv
push
or
mov
cs
inc
movsb
je
inc
leave
sbb
fisttpll
stos
cs
ret
pop
add
pop
add
subl
mov
movsl
pop
mov
mov
mov
or
jmp
lcall
cmpsl
rclb
mov
sbb
out
lahf
out
push
cmp
repnz
mov
std
fiaddl
into
push
test
and
fcmovu
mov
inc
mov
sbb
es
and
or
loope
enter
fcoml
repnz
mov
lods
aad
mov
or
movsl
dec
cmp
rol
cmp
and
lods
push
pop
shrl
lret
pushf
mov
or
mov
lret
aas
xor
dec
dec
mov
inc
test
je
push
and
mov
js
push
test
jmp
scas
push
stos
test
std
lock
inc
xchg
or
xchg
mov
sub
cld
lcall
inc
dec
mov
jno
jne
movups
mov
cld
or
lret
out
add
xchg
mov
std
movsl
mov
test
xchg
xchg
fabs
pop
pop
pop
loope
arpl
adc
movsb
inc
fmuls
aad
sbb
mov
iret
sbb
pop
push
inc
adc
dec
xchg
jle
dec
in
sbb
cmc
cmp
imulb
lret
mov
jmp
xlat
and
jne
movsb
dec
adc
inc
or
cld
in
in
in
out
inc
test
ret
adc
movb
pop
data16
sub
scas
aad
cmc
and
xchg
pop
mov
adc
cmpsb
subl
bound
cmp
jecxz
push
cmp
sbb
pop
and
jmp
adc
je
mov
and
inc
push
sub
cld
add
sbb
mov
lds
inc
xchg
push
sti
and
out
inc
cmpsb
add
test
inc
jbe
movsl
test
sbb
cmp
dec
mov
movsb
mov
nop
int
lret
ja
adc
loopne
adc
xchg
call
pusha
pop
popa
xor
clc
les
or
mov
sub
dec
mov
sbb
or
jne
pop
lahf
jecxz
inc
push
cmp
loope
rcrl
js
imul
nop
jns
subb
jnp
and
dec
insl
inc
dec
adc
sub
repnz
push
dec
mov
or
inc
dec
cmp
nop
mov
pop
pop
lret
cmp
in
inc
and
jb
dec
jecxz
shlb
stos
cltd
cmp
fadd
div
bound
int3
lahf
inc
rcr
mov
add
xor
push
stos
xchg
mov
push
inc
sbbl
xor
jp
leave
cmp
adc
sub
sbb
out
shlb
daa
and
lea
iret
ss
std
pop
inc
cmp
fcmovnbe
mov
in
pop
pop
adc
or
icebp
sub
xchg
fbld
mov
scas
call
push
enter
movsl
cmp
push
adc
sbb
sub
iret
xor
cwtl
mov
jo
jbe
xor
mov
fistps
jp
stc
out
pushf
mov
mov
inc
add
sti
mov
fwait
es
mov
mov
cltd
pushf
out
sbb
icebp
cmp
pop
gs
dec
push
xchg
loop
addr16
or
test
push
ja
cltd
mov
bound
sti
jecxz
jl
enter
xchg
fwait
push
stos
fwait
lds
or
aam
mov
pop
sti
xchg
icebp
out
scas
sbb
mov
inc
pushf
mov
mov
repnz
mov
xor
pop
scas
sub
xchg
lock
inc
sbb
xchg
jle
or
or
das
lea
bnd
sti
fwait
test
xchg
jae
and
fsubs
push
add
mov
xchg
mov
inc
gs
in
jno
push
ljmp
lret
jns
xor
mov
cmpsl
sub
inc
mov
mov
test
mov
aad
idivb
and
adc
cmp
sbb
in
mov
xor
cmpsl
pop
jl
sub
dec
nop
cltd
and
push
adc
lods
pop
rcll
jae
sbb
leave
test
add
test
pop
xchg
dec
mov
push
aam
push
xorb
xchg
jb
sub
pop
dec
pop
or
cld
ret
dec
clc
dec
push
ret
mov
aam
add
insl
lea
jg
icebp
and
inc
stos
test
xor
scas
and
std
mov
stos
pusha
mul
push
cli
cmp
fnstenv
pop
pop
xchg
lret
repnz
mov
shlb
shl
lea
rcrb
jp
das
fbld
pop
cmpsl
xor
pop
dec
jp
cmp
dec
cmp
in
leave
es
xchg
pop
adc
and
mov
es
sub
sbb
mov
sarl
addl
rorb
testb
int
cmp
cmp
push
and
xchg
mov
out
nop
lock
sbb
adc
rcll
das
sahf
or
andl
int3
clc
sahf
pop
jbe
test
xor
mov
jns
pop
jl
xor
adc
sbb
jecxz
aas
cmpb
push
test
idivl
adc
adc
subb
inc
jnp
pusha
imul
jno
fstpl
fisubrl
xchg
js
and
push
mov
out
sbb
out
cmpsl
mov
out
mov
mov
mov
mov
gs
mov
in
fdivrl
push
adc
mov
sbb
call
fsubrp
mov
mov
jle
iret
shlb
jno
pop
test
sbb
sub
scas
mov
mov
stc
enter
xor
aas
adc
ja
arpl
push
add
popf
inc
adc
inc
aaa
stc
lods
iret
test
addr16
pop
sahf
ja
decl
fiaddl
repz
setns
pop
in
inc
mov
hlt
adc
in
pop
dec
repnz
test
mov
jae
rcrb
rclb
stos
push
pop
mov
jl
push
xchg
xor
aam
cmp
mov
mov
jbe
lret
jnp
add
jne
and
mov
scas
jnp
das
push
mov
inc
into
cs
addr16
mov
xor
popf
movsl
mov
dec
ret
push
addr16
std
into
push
leave
push
mov
aad
divl
les
pusha
or
test
lods
arpl
add
mov
imul
cmp
and
mov
pop
mov
lods
mov
lods
jp
mov
js
lret
cmp
jne
cmp
sub
xor
lods
or
jnp
ret
sbbb
test
or
mov
bound
push
push
mov
pop
pop
ret
es
scas
stos
out
push
jns
push
fdivrp
dec
sub
clc
cwtl
cmpsl
or
daa
inc
pushf
daa
jge
add
jnp
scas
sarl
sub
fdivrs
imul
lods
enter
aas
lods
add
sub
in
popa
mov
inc
aaa
push
push
sub
lret
dec
cmpsb
cltd
pop
cmp
imul
lahf
int3
xchg
mov
imul
cmpsl
cmp
xor
sub
aas
repz
adc
add
into
sbbl
cmpsb
lcall
xor
and
xchg
mov
push
push
jnp
mov
jmp
insb
cmpsl
push
add
ja
jns
add
xchg
movsb
in
insb
cmp
negl
and
ljmp
dec
rolb
cld
sbb
jnp
fisubrs
mov
jo
xchg
or
mov
and
xchg
dec
fists
fadd
mov
loopne
cmc
in
push
pop
frstor
mov
mov
dec
aaa
and
test
loop
out
sub
cmp
add
in
push
cltd
jns
fisttps
xchg
dec
rcrb
sbb
nop
add
ret
mov
cld
jns
jno
mov
icebp
mov
add
ds
and
push
adc
mov
mov
jg
out
pop
pop
xlat
imul
and
aaa
dec
iret
test
lahf
rorb
jmp
or
outsl
lock
jge
jg
int
jl
mov
xor
nop
push
sti
sti
lods
xchg
sub
in
jo
leave
scas
pop
xor
ret
lret
pop
xor
stos
mov
sub
cmc
jge
jge
cmp
sti
negl
rcrl
inc
daa
pop
xchg
fidivrl
mov
jns
ret
push
adc
imul
push
incb
lods
inc
pop
mov
jne
add
xor
cmc
xchg
mov
sahf
addr16
bswap
bound
int3
int
outsb
jnp
cmp
loopne
pushf
or
mov
inc
inc
int3
mov
mov
xchg
lds
dec
pop
pusha
leave
rorb
add
mov
lea
mov
mov
mov
xor
cmp
sbb
xor
imul
mov
pop
xchg
pop
mov
mov
jns
jp
cld
and
jmp
lock
add
add
lods
pop
dec
arpl
popf
push
fincstp
fs
add
push
test
das
mov
jle
sub
jb
aaa
mov
xchg
frstor
adc
data16
pushf
xor
out
mov
aam
jne
jge
pusha
adc
into
push
in
lret
inc
sub
inc
push
mov
pop
int3
cld
xor
cmp
pop
sub
jno
push
mov
or
loope
xlat
add
and
scas
sub
jb
pop
push
into
in
jo
jl
mov
xchg
andb
inc
or
outsb
ds
push
xchg
rcrl
testb
test
orb
sbb
pop
pop
andl
dec
das
mov
mov
jo
sbb
adc
shll
subl
dec
cmpsb
jbe
lret
jmp
fs
cmpsb
xlat
repz
mov
adc
cmp
or
pusha
ss
movsl
in
in
out
aaa
jb
xchg
mov
shlb
mov
sub
aad
mov
out
mov
stos
ds
mov
jl
or
pop
xchg
xchg
push
repnz
in
xchg
cmp
repz
in
ja
xchg
add
cmp
scas
cmp
push
sbbl
push
dec
rorl
jae
inc
test
add
add
sub
jno
mov
pop
sti
cmpsl
and
cmp
pusha
mov
adc
cli
xor
aaa
xchg
jecxz
and
dec
xchg
cwtl
adc
fisubs
aam
mov
popa
jl
stos
sbbl
mov
lds
lcall
stos
imul
fisttps
xchg
jecxz
lock
mov
rcr
add
push
lret
xor
lahf
mov
jle
andl
mov
dec
cmp
jp
das
nop
sbbb
inc
mov
into
mov
iret
mov
popf
xlat
xchg
into
shlb
sub
and
xor
popa
xchg
jecxz
xchg
sub
mov
bound
inc
jg
xor
mov
sub
adc
pop
mov
cli
mov
add
lahf
xchg
mov
pop
fsts
inc
push
movsb
outsl
xchg
adcb
adc
sub
hlt
push
int3
push
loop,pn
fistl
mov
add
daa
test
nop
aaa
or
push
push
push
lret
xchg
mov
test
mov
outsb
aam
in
into
int
xchg
aam
mov
inc
imul
jae
and
aas
jo
imul
adc
sub
and
std
out
scas
jge
sub
fcoml
movsb
lret
inc
dec
hlt
gs
imul
mov
sbb
pop
pop
sbb
outsb
jne
jl
insb
stos
push
mov
ds
aas
xor
mov
and
adcl
xorps
popl
mov
stos
enter
fstpl
jb
and
enter
js
cld
fdivl
mov
aam
xor
add
lret
mov
pop
fstl
xchg
pop
shll
adc
test
jp
jnp
and
sub
push
mov
popf
lock
and
xor
jb
cmp
or
xor
iret
pop
aam
jge
arpl
fucomp
inc
fdivrl
mov
xor
adc
and
adcl
cmpsb
cmp
out
sub
dec
jmp
repnz
in
inc
lahf
inc
or
cmp
mov
lods
shrl
std
sub
xchg
imul
dec
mov
jge
repnz
adc
call
mov
daa
je
outsl
adc
adc
ja
mov
sbb
stos
or
movsl
add
jae
mov
mov
jl
jg
push
icebp
test
adc
addr16
repnz
xchg
and
cmp
repz
add
into
inc
mov
pop
decb
orl
mov
add
std
jno
test
xchg
movsb
mov
js
or
mov
mov
repnz
adc
inc
pop
lock
jmp
mov
sub
jp
cmc
xchg
daa
loopne
andl
sti
jge
cld
jb
or
dec
clc
in
inc
mov
mov
pop
inc
shlb
scas
or
test
mov
ds
lret
xor
cmp
sbb
sub
pushf
fsts
dec
int3
arpl
sahf
adc
mov
xlat
test
adc
cmpsl
push
je
mov
aas
loope
decb
mov
fstl
popa
test
jne
pop
push
popa
mov
fiadds
inc
setge
in
adc
fmull
pop
mov
or
xor
push
lods
fcmovbe
add
inc
out
sahf
fisubl
rolb
test
scas
aam
sbb
sbb
xchg
cmpsl
and
lret
ds
and
out
cmp
xchg
dec
fisubl
add
je
ss
add
es
loop
cli
ret
xor
data16
inc
xor
sbb
fisttpl
addb
data16
push
jge
js
out
or
cli
movsl
xchg
iret
pushf
sahf
cmp
mov
mov
cmp
dec
insb
dec
cmpsl
fcomp
aam
pushl
inc
lret
out
jne
or
or
push
push
mov
aad
jae
and
and
sbb
fcomip
cwtl
push
outsl
push
insl
lahf
dec
test
mov
in
xor
loope
xchg
mov
adc
xchg
nop
pop
mov
mov
pop
lcall
cld
iret
pushf
or
jle
mov
or
jns
mov
push
frstor
lcall
dec
push
jns
sub
testb
lock
fbstp
ljmp
push
int
and
pop
or
loopne
inc
cmpsl
mov
std
iret
dec
or
mov
repz
mov
add
ds
arpl
dec
rorb
icebp
add
fwait
lock
cmp
rorb
dec
push
or
cmpl
sub
adcb
test
pusha
iret
jne
add
je
dec
loopne
iret
add
out
shll
test
scas
xor
and
mov
jp
adc
dec
dec
iret
inc
xchg
nop
xlat
jo
inc
lret
cmp
repz
sub
pop
inc
scas
fsubrl
adc
aas
aaa
aaa
fisubrl
mov
cmp
loop
scas
test
fiadds
adc
sbb
in
xorl
test
cli
and
test
lods
dec
pop
or
addr16
pusha
cmpsl
mov
xchg
lock
push
fidivs
jo
out
shr
pop
sub
push
mov
aas
sahf
std
inc
mov
lea
nop
repz
add
jo
dec
lret
or
pop
xor
in
lret
bnd
lea
pushl
cmp
dec
popa
mov
inc
jne
mov
fwait
shlb
stc
xchg
fbstp
xchg
out
and
cmp
jnp
popa
jbe
inc
jg
mov
and
test
adc
add
inc
clc
push
nop
insl
add
add
inc
stc
lods
loope
and
jno
cld
lcall
pop
pusha
outsl
mov
push
sti
insb
fisttps
aam
ja
mov
cmpb
sarl
and
dec
pusha
pop
aaa
sbbb
and
push
bound
rorl
and
xchg
xchg
dec
dec
mov
cld
test
adc
mov
xor
fwait
sbb
fs
fisubs
imul
addr16
repz
add
mov
add
sbb
sub
xlat
jno
mov
lret
jp
setne
push
ja
lock
pop
sbb
dec
xchg
or
jmp
dec
iret
cmc
mov
iret
std
psadbw
adc
inc
cltd
xchg
js
out
push
push
idiv
dec
xchg
clc
out
push
mov
inc
xor
mov
mov
mov
pop
aad
rcrl
aaa
fcoms
sbb
push
cmp
jmp
out
or
test
subb
mov
jae
pop
das
or
pop
mov
mov
cli
callw
ja
cmp
and
push
scas
xor
push
aad
pop
in
or
jge
mov
nop
mov
call
decb
divl
hlt
adc
ja
push
pop
mov
xchg
sarb
pop
push
add
ror
xor
inc
sbb
and
inc
mov
jecxz
sbb
jb
or
insb
jb
out
icebp
hlt
mov
addr16
imul
shll
push
or
unpckhps
pusha
sbb
mov
insl
js
popf
dec
jecxz
push
test
inc
scas
mov
sbb
hlt
cmpsb
jb
cmp
or
js
aam
shll
or
and
sub
popf
push
imul
iret
inc
lret
jg
fwait
mov
bnd
cmpsl
sub
scas
jle
test
cmpsb
xchg
pushl
dec
cmp
pop
xchg
mov
out
cmpsl
adc
mov
in
push
push
je
sbb
outsl
or
jne
cltd
adc
mov
lret
and
fwait
lahf
pop
sbb
xchg
pop
sub
add
adc
in
loopne
gs
and
out
test
jecxz
xor
lea
addr16
lret
push
cli
cmp
jae
lods
popf
jl
cld
repz
enter
dec
out
or
xchg
cltd
cmp
dec
imul
sbb
inc
and
sbb
lods
fs
mov
ret
mov
mov
add
mov
ds
out
ret
inc
jl
fimull
pop
xor
mov
mov
loop
sbb
xchg
test
pop
loopne
fsubs
leave
movsl
notb
addr16
les
arpl
popa
pop
sbb
cmc
sub
mov
sub
inc
mull
imul
in
stos
add
fldl
mov
outsl
fsubp
dec
cmpsb
sub
test
pop
addr16
inc
pop
mov
sub
pop
inc
test
and
mov
xchg
sahf
aam
mov
loopne
push
xorl
push
xchg
cmp
fmuls
gs
icebp
ret
sahf
fcompl
int
stc
stos
arpl
dec
lcall
mov
sub
lds
and
int3
sahf
pop
dec
push
mov
or
inc
sub
pop
idivl
das
in
mov
lcall
hlt
adc
mov
aas
imul
mov
mov
jnp
dec
cmp
cmc
mov
inc
in
icebp
push
xor
cmp
inc
push
and
imul
outsl
hlt
dec
mov
shrl
in
push
push
dec
fisttpl
das
ds
mov
scas
in
fsubl
call
and
int
xchg
icebp
jmp
and
inc
popa
cmp
movsb
lods
pusha
lea
fdivs
pop
push
and
or
mov
mov
dec
and
lods
and
imul
scas
adc
push
and
mov
cmp
adc
clc
or
movsl
pop
mov
lret
or
addb
sbb
popf
cmpsb
jno
dec
or
out
xlat
loop
enter
call
sahf
orl
push
cwtl
cltd
repnz
clc
pop
out
scas
adc
inc
cltd
stos
mov
jne
sbb
ficompl
xchg
mov
out
push
cmp
dec
int
jns
out
cmpsl
test
andl
jbe
add
mov
push
ret
sub
or
aas
iret
mov
mov
mov
stc
cli
jp
pop
xchg
and
cld
xchg
jae
sbb
push
pop
in
enter
stos
xchg
aaa
loop
xchg
cmp
es
push
cmp
leave
fnstcw
pop
inc
ds
add
call
sub
xchg
imul
xlat
aas
mov
repnz
cmp
dec
mov
mov
mov
sub
jo
test
into
scas
xchg
out
gs
inc
mov
repnz
mov
add
cmp
pop
aaa
xchg
mov
leave
fdivl
lock
sbb
jmp
test
leave
jno
aam
xor
cmc
cmpsl
lahf
xchg
fs
scas
out
ds
lea
insb
jno
jne
insl
xchg
jae
into
jmp
cs
xor
fstpl
inc
mov
xchg
inc
test
iret
push
inc
push
aad
lahf
es
imulb
mov
mov
cwtl
dec
adc
stc
fst
xchg
and
ds
in
dec
push
out
sti
adc
in
ja
add
dec
in
mov
jae
aas
nop
cmp
jae
cmpsb
ljmp
das
xlat
dec
dec
inc
insl
push
enter
call
cmc
jnp
hlt
jne
and
test
jecxz
fldt
fs
xor
cli
cmp
dec
lret
mov
mov
out
lret
pop
sub
or
mov
mov
jmp
sahf
mov
xor
subb
out
xor
jmp
imul
pop
sahf
cli
pop
mov
in
cwtl
cmp
fisubs
sub
pop
loope
or
push
adc
int
xlat
out
rolb
xor
es
inc
stc
jns
mov
dec
sbb
cli
inc
jo
nop
loop
sub
jo
mov
pop
xor
mov
mov
sahf
xor
in
test
inc
add
mov
cmpsb
cmpsl
fstpl
mov
push
jnp
pushf
fucomp
rcrl
sbb
sbb
pusha
sbb
rorl
dec
push
insl
push
out
dec
push
xor
daa
dec
and
xor
mov
xchg
outsl
fs
push
pop
jnp
push
ret
inc
pop
inc
lret
xchg
xchg
ror
sbb
dec
adc
lds
and
loopne
jne
push
push
inc
in
test
mov
ljmp
sub
sub
mov
loope
lahf
jnp
cmpsb
lcall
adc
aas
adc
in
int3
dec
dec
jbe
insb
int3
jl
stos
pop
imul
ret
jl
rclb
negl
jp
sbb
dec
mov
cwtl
pusha
jbe
ljmp
mov
xchg
xchg
inc
push
test
stos
les
es
cmp
add
out
adc
cmp
mov
pushf
ds
lret
std
pop
sahf
inc
icebp
lret
cmp
stc
pop
popa
lahf
xor
sti
adc
lahf
push
adc
mov
xor
shll
push
shlb
in
int
push
inc
lock
or
sbb
cmp
xchg
hlt
ja
je
leave
pop
xchg
inc
or
jns
outsb
inc
jp
in
clc
lods
ja
mov
mov
jae
jno
outsl
aad
cld
or
aaa
mov
repnz
stos
lods
ds
add
sub
popa
ss
add
add
les
mov
imul
mov
fs
cld
xor
lahf
and
xchg
les
jno
movsl
filds
decb
or
xor
mov
pop
out
xor
push
pop
mov
jp
add
dec
test
and
in
pop
cli
cmp
xlat
repz
add
fistps
mov
inc
add
andb
cmc
fdivr
stos
add
and
in
cmp
cmp
rorl
loope
mov
sbb
gs
scas
lds
jnp
cmpl
or
add
in
push
aad
lret
and
roll
nop
pop
add
jp
or
imul
scas
sti
outsb
mov
jno
lret
scas
push
mov
xor
les
jmp
in
jne
call
xor
stc
mov
xchg
sbb
lret
ss
jle
or
cmpl
add
add
jle
and
cmp
mov
xor
mov
test
mov
sbb
repnz
dec
or
fiadds
hlt
xor
dec
add
sbb
pop
add
lock
out
sub
out
push
push
sbb
mov
repnz
sub
ja
mov
jae
mov
inc
dec
add
mov
test
leave
sti
push
vmwrite
ret
add
sbb
jne
imul
loopne
push
mov
dec
arpl
fs
jb
out
iret
adc
sbb
push
push
or
push
sbb
sahf
jnp
pop
mov
jle
mov
lret
cltd
mov
test
xor
inc
insb
lahf
add
push
addr16
fnstcw
push
mov
dec
dec
push
das
movsl
iret
sti
cmp
movsl
out
mov
das
jmp
stos
xchg
nop
mov
scas
pop
sti
push
stc
imul
cmp
aas
out
mov
pop
add
out
ja
jb
sbb
inc
dec
aas
pushf
mov
aam
sbb
loop
out
push
out
cmpsb
cwtl
movl
mov
stos
and
mov
cmp
jo
insl
jnp
into
sub
pop
dec
popa
loope
jmp
lcall
shll
int
out
fstp
mov
mov
pop
sub
mov
cld
add
xchg
imul
popf
push
adc
out
mov
jl
daa
jmp
test
cmpsb
push
lock
xchg
dec
xor
dec
sti
arpl
ljmp
or
jne
lods
mov
xchg
adc
insb
mov
mov
dec
lahf
xlat
fs
sub
addr16
iret
stos
jp
sub
clc
arpl
repz
sbb
into
sub
bound
inc
js
loop
arpl
pop
mov
inc
aas
push
mov
lcall
or
xchg
xchg
fsts
push
xlat
in
push
inc
add
push
aam
xchg
imul
ret
stos
inc
pop
xchg
adc
dec
dec
or
mov
mov
pop
mov
pop
inc
inc
push
imulb
push
add
das
mov
pop
rorl
push
mov
sbb
adc
jnp
outsl
fadds
pop
or
fistps
mov
mov
rcrl
pop
lods
pusha
fsubrs
inc
adc
dec
and
lea
xchg
int
pop
cld
mov
jge
fdivp
sti
push
lods
mov
pop
stos
movsl
ja
cmp
aas
jmp
idiv
sbb
sbb
push
daa
lcall
sahf
je
jo
cmp
dec
mov
sbb
test
sub
jae
pop
in
lds
aaa
sbb
mov
push
xorb
cwtl
xlat
dec
insb
fsubl
fdiv
sub
sbb
or
lock
pop
jae
inc
dec
jae
and
adc
lahf
cmpsl
cmp
fcmove
add
push
pop
jno
mov
jbe
dec
negb
movsb
ss
outsb
sbb
mov
lock
into
mov
bound
xchg
scas
loop
fstl
arpl
pusha
bound
mov
nop
mov
xchg
shrb
or
in
jecxz
add
mov
cltd
mov
sbb
movsl
ja
lcall
lahf
xchg
enter
inc
mull
lcall
adc
push
fwait
bound
or
bound
or
sub
or
div
mov
jns
out
jno
mov
out
xor
and
xchg
lret
cmp
pop
dec
movsl
xchg
push
sbb
int3
hlt
adc
popa
mov
adc
scas
out
call
out
adc
loopne
sbb
mov
push
sub
leave
lds
add
out
scas
jo
pop
pop
pop
leave
icebp
add
jmp
jae
jns
pop
pop
jmp
cmc
addr16
insl
hlt
nop
ret
mov
and
jb
and
mov
gs
jno
xchg
loope
cmpsb
dec
add
xchg
xchg
icebp
sahf
xchg
adc
lods
pop
lds
mov
sbb
incb
repnz
pop
aaa
mov
mov
mov
int
add
repnz
pop
mov
xor
sbb
ret
push
mov
cmpsb
jo
fdivl
inc
inc
lock
pop
movsb
mov
jb
jecxz
xchg
sti
sbb
arpl
data16
pop
jae
xchg
cltd
add
mov
sub
sbb
add
test
imulb
cmp
inc
nop
addb
fadds
rcr
add
add
inc
int3
insb
in
imul
push
or
sysexit
pop
or
xchg
jmp
outsl
add
aas
arpl
sti
fdivrs
mov
pop
roll
mov
xchg
mov
cs
xchg
loop
jl
xchg
cmp
add
jne
or
mov
adc
dec
jmp
push
sbb
push
inc
mov
cmp
sub
jmp
stos
inc
std
jl
cli
ret
icebp
in
mov
mov
into
dec
mov
pop
nop
mov
lds
shl
jno
pop
das
std
test
test
xor
lock
push
in
pop
fnstcw
push
fmuls
test
fdivr
jge
jae
clc
jns
xchg
adc
dec
xchg
inc
addb
fnstenv
add
jge
xchg
outsl
fistpll
xor
ret
mov
aaa
bound
ds
hlt
and
daa
dec
mov
and
xor
xor
or
inc
cmp
imul
xchg
mov
xor
fisubrl
dec
out
imulb
dec
lods
push
push
lret
push
jns
jns
cwtl
push
sbb
xor
mov
xor
ljmp
out
mov
pop
pop
xchg
sahf
test
cmpsl
and
lods
jecxz
cmpsb
mov
leave
mov
fidivs
addr16
pop
pusha
mov
mov
imull
inc
aaa
cmp
imul
test
insb
cltd
xor
and
insb
jns
sub
and
fcomps
xchg
scas
adc
ret
icebp
popf
imul
xchg
mov
jp
mov
cltd
pop
mov
push
andb
inc
ds
js
add
jnp
imul
lea
mov
imul
jae
or
inc
movsb
jmp
aam
leave
aaa
pop
cwtl
repz
jo
stos
imul
add
add
or
sub
adc
pop
iret
adc
sbb
fcoms
into
inc
fsubrp
or
dec
insl
push
cmp
stos
in
pop
push
test
push
les
aad
xor
mov
repnz
ds
and
cwtl
xchg
scas
ret
mov
mov
or
fdivrp
xchg
add
clc
pop
ljmp
cmp
les
jge
mov
int3
lods
adc
add
notb
jl
push
or
aaa
xchg
adc
ror
sub
jecxz
dec
into
sahf
aam
fcompl
ja
adc
addr16
ret
dec
movsl
les
negl
mov
mov
mov
jmp
jns
iret
xchg
mov
jnp
test
aas
lcall
popf
lock
mov
imul
sub
push
stos
pop
cld
mov
data16
push
test
inc
scas
cli
sbb
cmovae
imul
imul
sub
movsb
pusha
mov
or
cmpsl
xchg
pop
fistl
fs
jae
dec
mulb
mov
sbb
pop
insl
cwtl
jp
test
push
xor
shlb
push
in
out
iret
sahf
stos
dec
inc
mov
loopne
adc
jg
xchg
add
inc
pop
hlt
mov
addr16
mov
and
scas
out
mov
daa
or
jae
adc
das
es
mov
aas
and
jmp
leave
and
pop
lahf
dec
pop
push
leave
add
dec
sub
loope
cld
mov
sub
mov
mov
fwait
xchg
rolb
adc
popf
movsl
lds
lcall
push
loop
add
fists
cmp
xor
adc
icebp
int3
roll
outsl
adc
pop
sub
out
pop
inc
jns
adcl
jmp
adc
sub
push
and
jns
xchg
lods
mov
mov
imul
pop
pop
and
lahf
popf
xchg
aas
mov
push
out
ss
stos
data16
mov
adc
in
push
xlat
ret
outsl
sbb
fs
mov
addr16
add
xor
leave
outsl
push
ja
imul
sbb
xor
inc
cmpsl
nop
lods
adc
repz
sbb
lds
in
cmp
pop
cbtw
xchg
sub
xchg
pop
cmp
and
dec
nop
sbb
jae
xlat
xchg
dec
jl
cli
inc
js
pop
jns
cli
and
imul
mov
cld
sahf
in
cmp
rorb
mov
ljmp
push
pop
and
jecxz
xchg
lahf
je
out
inc
out
jnp
cmp
aas
mov
dec
cmp
xor
fxch
pushf
mov
cmp
fstpt
ret
ljmp
dec
out
inc
sub
test
mov
call
flds
or
and
imul
xor
sbb
shrl
mov
insb
pop
clc
ja
lea
jg
push
xor
sbbb
mov
jp
mov
add
fstpt
mov
outsb
sub
stc
jecxz
popf
cltd
rclb
xor
push
inc
and
mov
and
cld
pop
pop
mov
or
sbb
imul
das
loopne
or
sub
inc
shlb
sbb
into
scas
or
xor
sarb
out
leave
cmp
pushf
and
hlt
mov
adc
push
inc
vmwrite
js
add
xor
out
cwtl
ljmp
or
and
jge
cmp
aad
xchg
pop
pop
out
bound
lret
xlat
loopne
and
dec
cmpsl
jmp
sti
cmp
push
outsb
sbb
xor
and
xorl
scas
out
jmp
pusha
sub
test
das
adc
jmp
fnstsw
sub
int3
into
xor
dec
fimuls
pop
stc
fs
cmp
cli
adc
adc
lods
andb
add
mov
aam
mov
dec
sbbl
pop
pusha
adcb
xchg
int
ja
mov
dec
cmp
loop
int3
or
outsb
in
jle
jo
jb
lds
mov
adc
inc
call
lods
push
js
and
dec
outsl
sub
mov
adc
call
cwtl
pop
cbtw
int
aad
lods
sahf
inc
mov
call
leave
xchg
mov
add
cmp
sarl
fwait
mov
popl
inc
mov
dec
dec
jae
bound
or
jne
xchg
cmc
add
orb
arpl
inc
int
push
cmp
add
adc
push
and
jl
mov
adc
jno
sahf
cltd
test
lea
dec
jmp
aam
and
lods
cli
sarl
adc
jne
sar
adc
cs
sbb
test
mov
xor
aas
stos
jmp
mov
aam
or
test
mov
mov
sbb
push
push
lea
mov
es
rorl
or
movsb
sub
outsl
iret
addr16
push
out
test
push
mov
inc
out
push
pop
mov
popf
stos
jmp
dec
sub
cltd
int3
mov
adc
push
movsb
xchg
cmp
out
mov
rcrb
inc
pop
enter
aad
cmp
xor
sahf
movsl
or
lea
test
ja
jle
ret
movsl
xchg
sub
add
loope
fcomp
adc
rcll
les
testl
xchg
aaa
fidivs
cwtl
out
rcr
mov
lahf
pop
xchg
jne
mov
push
fdivs
push
mov
lods
jge
imul
testb
enter
sarl
push
mov
jb
cmp
stos
int3
xchg
jp
negb
mov
aam
inc
aas
daa
cli
mov
sbb
push
adcl
push
pause
movsb
test
sub
add
movsb
negl
insb
sbb
jb
pop
xchg
lock
addr16
mov
and
test
icebp
mov
inc
jmp
das
jl
mov
or
cmc
insl
dec
push
fdivrl
ret
outsb
movsb
xchg
bswap
mov
pop
lods
jle
lds
mov
xchg
inc
dec
pop
hlt
jo
shrb
or
or
fbld
mov
js
outsb
mov
adc
popf
lods
ret
dec
inc
rorb
aas
gs
cmc
push
es
hlt
shrl
fdivs
lcall
mov
data16
pop
mov
ret
repnz
sub
lods
or
mov
sbb
adc
cmp
shlb
dec
dec
inc
outsb
imul
int3
pop
ret
aas
mov
pop
call
mov
mov
jnp
movsl
js
mov
xchg
mov
js
cli
inc
js
idivb
lahf
mov
jb
insl
xlat
lods
xchg
fcompl
xchg
add
movsl
imul
jl
cmp
in
and
sti
pop
and
and
movsb
mov
inc
repnz
call
fiadds
cmp
into
je
daa
inc
in
ret
daa
dec
pop
adc
cmp
jge
nop
xchg
sub
es
mov
push
add
test
sub
jecxz
loopne
es
mov
pop
mov
or
mov
movsl
pop
xor
sbb
das
fwait
leave
or
movsl
out
push
cmp
test
int
xor
add
push
test
dec
xor
adc
jno
adc
out
nop
subb
stc
inc
lock
push
sarl
sarl
fsubl
stos
sub
cmp
push
leave
inc
mov
xor
sbb
mov
or
insl
mov
cmp
test
mov
jecxz
pop
leave
mov
xchg
enter
out
fisubrs
rcll
push
xchg
imul
adc
pop
jb
jbe
gs
iret
dec
movsb
xchg
push
js
shlb
sahf
xor
je
das
divl
call
inc
sub
push
jl,pt
cld
jnp
add
dec
in
lods
inc
stos
pop
adc
pop
jnp
add
xor
xchg
push
mov
mov
lds
push
rclb
xchg
dec
xchg
pop
mov
iret
cmpsb
jnp
cmp
mov
outsl
es
fdivrl
push
jnp
out
daa
jbe
mov
addr16
sti
jge
jge
fisubl
stc
lock
sbbl
jbe
enter
call
fistps
push
push
or
adc
divl
xor
out
mov
jge
pop
imul
sbb
dec
push
test
mov
lock
inc
adc
out
ljmp
mov
ljmp
cmpsl
cmp
xlat
popf
lret
fldl
and
xor
enter
repz
pop
out
mov
sbb
daa
popf
pop
fimuls
pop
test
mov
jle
push
ror
dec
adc
inc
push
incl
stc
mov
lds
fldt
ds
insl
pop
lret
in
sub
sub
push
push
test
subb
sub
xchg
mov
jne
mov
cwtl
cmp
push
adc
mov
mov
mov
cwtl
sbb
outsb
inc
sbbb
or
mov
cmc
jne
ret
pshufw
aas
lock
pop
dec
pop
jo
loope
sub
cmpsb
pop
push
in
xor
stos
fcoms
lds
imul
sbb
jmp
lret
push
sti
mov
dec
sbb
or
xchg
into
dec
or
enter
shlb
mov
out
pop
rclb
aaa
cmc
push
into
xor
push
aaa
insb
movsb
das
out
neg
into
adc
jg
dec
outsl
jno
sbb
test
cmp
adc
mov
loopne
add
adc
mov
mov
add
decb
scas
lea
add
out
imul
mov
rcrl
lahf
mov
xor
daa
pop
arpl
add
mov
aam
inc
cmpsb
addr16
mov
mov
dec
insl
or
mov
inc
arpl
mov
movsl
cmp
cmp
xchg
or
mov
mov
or
add
negl
cmp
insl
mov
shl
invlpg
pop
call
lret
movsb
or
or
iret
jle
outsl
scas
addl
insb
sub
cmpsl
xor
mov
or
dec
xor
iret
mov
cmovl
cmp
mov
xchg
mov
pop
out
arpl
idivl
and
pop
and
pop
xchg
adc
mov
roll
dec
xchg
pusha
pop
mov
or
daa
cli
mov
xlat
int
push
jnp
pop
lods
push
outsb
pop
in
xchg
int3
cmc
and
xor
stos
iret
or
cmpsl
js
add
insb
add
jecxz
in
lcall
sbb
stc
add
mov
dec
inc
stc
in
insb
aas
sub
dec
cld
or
push
cmp
aad
inc
mov
adc
jle
and
lcall
in
push
ficoms
les
inc
dec
adc
pop
xchg
xor
adc
mov
cmp
push
pop
out
inc
xor
adcb
inc
icebp
mov
sahf
testb
xor
ret
add
xchg
add
out
scas
and
adc
ret
or
test
pop
stos
cmp
std
push
movsb
xor
xor
inc
test
sti
aam
sti
sbb
lock
dec
test
dec
cmpsl
jmp
adc
test
int
les
mov
jb
cmp
mov
jg
adc
nop
mov
sub
sbb
cmp
subb
aaa
or
inc
shl
adc
push
outsb
sbb
sub
inc
hlt
jmp
fldt
les
cmpsl
xchg
inc
sbb
pusha
hlt
add
int
lea
decb
mull
xchg
sub
or
adc
rclb
and
outsl
fstpt
or
push
pop
addl
cmc
shll
aam
sub
rorb
arpl
aaa
xchg
cmp
mov
ret
sbb
xor
inc
fadd
and
aaa
push
cmpsl
push
mov
lret
negl
sub
enter
sub
pusha
jne
xchg
jl
lds
cmpb
lock
mov
rclb
out
leave
sub
js
xchg
mov
lods
js
roll
or
dec
mov
inc
stos
xchg
add
fisubl
jbe
push
xchg
js
mov
lea
and
push
les
jmp
lea
mov
sbb
fidivrl
pusha
mov
call
mov
inc
xor
mov
xor
imul
outsl
pop
gs
out
xchg
jge
mov
test
and
mov
fmull
sub
cltd
adc
sub
cmp
shrb
addb
cmp
lret
inc
mov
pop
mov
or
mov
dec
in
cli
test
or
std
pop
push
xchg
inc
loope
xchg
cs
add
sbb
shl
loopne
sbb
sbb
lds
mov
sbb
iret
or
inc
mov
outsl
adc
inc
lods
or
pop
test
call
mov
int
pop
and
jp
in
ljmp
or
adc
mov
lcall
sahf
sahf
cmp
cli
hlt
jge
add
jb
xchg
icebp
sub
in
int3
sbb
iret
lcall
xor
cmp
mov
cmp
sub
int
call
aam
lds
pop
pmulhw
add
out
adc
dec
sbb
add
inc
inc
xor
lods
insl
cltd
pop
lret
pop
gs
out
push
push
cmp
xchg
lock
jbe
lock
mov
xchg
nop
cltd
in
leave
and
scas
xor
scas
xor
cmp
push
mov
sub
add
lds
xor
dec
dec
or
mov
push
sub
xor
mov
or
mov
xchg
fdivrl
gs
pushf
push
adc
and
and
and
lahf
aam
jmp
aam
jbe
inc
add
jp
in
ror
lods
ja
jecxz
data16
xor
fstpl
mov
rorb
xchg
mov
inc
in
test
call
mov
daa
add
jge
lcall
imul
adc
shlb
and
mov
mov
mov
lds
bound
sub
sti
add
push
mov
mov
ja
pop
push
lock
mov
inc
mov
daa
imul
mov
sub
js
dec
pop
cli
mov
inc
scas
mov
adc
push
fs
or
sub
in
hlt
ss
pop
push
jle
loopne
jmp
fdivs
push
shlb
popf
int
test
sub
icebp
pop
and
nop
mov
add
ret
fnstsw
jnp
insl
pop
add
push
push
std
lock
pop
mov
arpl
mov
pop
pop
mov
push
mov
sub
mov
pop
mov
lods
xor
sbb
outsb
add
daa
into
mov
in
or
mov
jno
pop
arpl
mov
fbstp
cmc
xchg
ret
fwait
lcall
aaa
loope
scas
testb
lds
test
lcall
cmp
or
inc
jg
add
pop
push
iret
bound
xchg
pop
xchg
cmc
jmp
mov
loop
sub
add
jmp
in
mov
dec
sub
sub
adc
push
sub
movsb
cmpsl
lret
dec
and
mov
ljmp
sbb
add
pop
xchg
add
fst
popf
xor
mov
movsl
mov
push
push
xchg
out
in
mov
jg
rorb
dec
fs
enter
cmc
sbb
inc
add
outsl
repnz
lret
mov
pusha
mov
and
sti
addr16
daa
lods
sub
sub
and
dec
xchg
jnp
fcomps
lds
lret
push
nop
out
jnp
cld
dec
cmpsb
sub
or
mov
dec
popf
and
xchg
push
in
mov
addr16
sahf
lret
fistpll
jle
movsb
or
and
sbb
aaa
xchg
cmp
shrb
int
ret
fsubrs
cmc
add
lock
stos
cmpsl
cmpsl
xor
icebp
and
and
xchg
push
cmc
mov
cmpsb
movsb
cmpsb
test
fistps
mov
xchg
addb
inc
cmc
icebp
inc
aaa
icebp
je
xchg
loope
scas
inc
xor
cmp
jns
inc
test
push
or
add
xchg
mov
popa
cmp
arpl
repnz
cmp
sbb
js
test
jle
in
cwtl
movsl
in
gs
xchg
pop
out
xchg
pop
add
xor
sub
sbb
cmc
jecxz
sub
mov
nop
adc
lahf
push
sub
ja
movsl
jmp
inc
mov
xor
out
pop
stc
jne
les
push
aad
adcb
mov
cmp
mov
adc
roll
rclb
adc
call
call
movlps
or
jae
push
pusha
or
test
jo
popw
cmp
repz
xchg
push
jecxz
pop
and
pop
mov
mov
sub
mov
testl
fcomps
jae,pt
insb
es
pushf
add
shlb
add
jo
sbb
es
dec
insl
xor
dec
aam
stos
adc
cld
jno
aaa
call
xchg
jae
xchg
hlt
pop
add
loope
in
out
ja
push
or
push
fdivp
sub
jnp
jecxz
icebp
sub
fwait
pop
jne
inc
cmp
jmp
aam
in
dec
fmul
ds
xchg
sbb
insb
lods
cmp
push
in
and
jae
test
je
loop
xchg
add
in
adc
mov
inc
cltd
push
imul
push
movsb
test
pop
imul
arpl
mov
cmp
xchg
sub
lods
cmp
dec
xchg
pop
mov
adc
aad
sub
inc
dec
fldcw
insl
cmp
insb
insb
mov
xor
or
movsl
mov
dec
pop
filds
cmc
movsl
inc
xorl
lock
cmp
xorl
repz
jbe
add
mov
rorb
sbb
sbb
xchg
mov
lods
sub
and
cli
pop
jg
cwtl
pop
inc
sub
or
shl
pop
ret
imul
pop
test
cltd
bound
clc
stos
repz
xor
stc
lods
xchg
mov
and
imul
in
subl
lret
mov
lock
js
in
inc
inc
std
les
std
mov
lea
nop
or
movb
mov
jmp
icebp
pop
in
cmp
and
push
je
shll
xchg
dec
adc
in
and
jns
adc
bt
and
add
sub
dec
and
mov
enter
and
mov
shlb
xchg
rclw
shl
fstpl
fisttps
and
add
add
vmwrite
jb
sbb
jno
jg
out
cwtl
inc
xor
es
fstpl
and
test
xor
or
jns
loope
inc
lcall
subb
xor
rorl
fdivl
mov
mov
pop
arpl
mov
test
jnp
lret
cmpsb
and
xlat
lds
cmpsl
or
adc
lods
ds
fwait
sbb
leave
mov
adcb
push
dec
fwait
in
mov
dec
pushf
jno
daa
mov
xor
stc
adc
mov
pop
xor
jns
in
push
or
ljmp
dec
loope
cmp
pop
inc
adc
dec
in
addb
push
xor
ret
test
dec
roll
jne
sub
call
bound
leave
and
sbb
hlt
repz
sub
jmp
adc
mov
inc
outsb
adc
insl
sarb
sub
and
cmp
loop
inc
stos
iret
mov
dec
aaa
sub
fdivrs
in
ljmp
push
je
loope
rclb
mov
lret
ds
aas
jnp
sbb
xor
jne
inc
push
inc
push
push
imul
cmc
jecxz
sub
sbb
cmp
jb
adc
imul
je
loope
sti
adc
shrb
cmp
icebp
std
jl
pop
hlt
jp
ja
mov
or
sti
dec
xor
sti
dec
xor
fcomps
cltd
or
cmc
imul
int3
jecxz
adc
js
jecxz
or
xchg
ret
scas
sub
mov
outsl
or
ret
sahf
pop
adc
cltd
mov
daa
hlt
pop
dec
iret
pop
jne
mov
leave
jo
stos
or
repz
xchg
pop
cwtl
cmp
out
dec
stos
cmp
leave
insb
and
or
subb
in
mulb
loope
mov
roll
mov
sub
xor
dec
out
clc
out
sub
sub
mov
jns
push
mov
mov
push
jp
ljmp
push
hlt
dec
loop
push
xchg
mov
pusha
push
out
jg
test
adc
mov
inc
mov
and
std
popl
scas
sahf
xchg
arpl
sbb
andb
and
cmpsb
sar
sahf
mov
popf
stos
pop
push
push
mov
aaa
fstpt
in
lock
jecxz,pn
andb
adc
xchg
pop
push
add
push
pop
pop
fnsave
push
xchg
add
mov
hlt
push
cmp
data16
in
pop
daa
jbe
or
out
subl
cwtl
xchg
out
outsb
xchg
add
add
or
les
cmp
mov
mov
lahf
or
repz
push
mov
lods
xlat
mov
cmp
push
mov
clc
push
jno
paddw
repnz
pop
repnz
pushf
test
mov
fildll
hlt
outsb
jge
aad
sub
outsb
cwtl
mov
pusha
jae
mov
push
inc
push
push
xor
in
push
outsl
sti
outsb
pop
insb
pop
dec
testl
in
orb
in
addb
push
lods
pop
or
sbb
lods
insb
jnp
xor
add
popa
add
mov
and
shlb
cwtl
mov
jg
adc
push
or
jne
push
mov
xchg
les
hlt
aas
mov
sub
aad
cmp
es
jo
test
push
es
out
jl
std
jge
das
xchg
mov
pop
sbb
pop
xor
xorb
test
ret
mov
scas
add
or
std
jge
fmul
fwait
ljmp
popa
aas
leave
jg
push
pop
push
gs
cmc
mulb
or
rorl
lret
add
inc
aad
jl
jecxz
push
xor
lret
std
loop
fdivrl
dec
repz
sbb
jecxz
in
mov
adc
loop
pop
sbb
ret
xchg
js
lods
mov
pop
enter
pop
insb
sbb
adc
push
jne
cmc
dec
rcrb
sbb
and
push
or
push
or
or
dec
mov
dec
in
or
xor
sbb
gs
add
push
pop
pop
aaa
add
xchg
call
add
mov
push
xchg
lock
mov
pushf
dec
mov
mov
lods
jecxz
scas
inc
rclb
add
in
jne
push
mov
lea
divl
sub
pop
lock
xchg
adc
inc
pop
dec
or
stos
xchg
xchg
dec
dec
test
cmp
test
mov
popa
out
addr16
call
push
popa
mov
cli
enter
or
shrb
sbb
imul
hlt
push
mov
leave
into
jle
or
mov
and
mov
popa
push
out
movsl
insl
jecxz
out
pop
out
mov
dec
cmp
mov
xchg
call
mov
xlat
xor
or
push
push
pop
mov
js
divb
mov
adc
dec
idivl
mov
dec
enter
add
and
loop
adc
mov
movsl
adc
cltd
xchg
mov
xlat
lea
sub
dec
popf
lret
push
sbb
lods
adc
js
test
jg
cmp
into
ret
xorb
das
mov
cmpsb
sub
ret
cltd
and
and
aaa
mov
aaa
dec
sub
adc
jmp
aam
cmp
lcall
imul
and
aaa
mov
push
imul
sbb
jg
cmp
lahf
dec
inc
mov
inc
fwait
inc
arpl
mov
call
push
or
in
xor
fistl
dec
pop
movsb
and
loop
push
gs
mov
bound
lds
xchg
call
ret
sub
push
jecxz
lahf
iret
cmp
les
addl
push
imul
and
movsb
inc
mov
adc
out
or
mov
adc
int3
cmp
outsb
xor
pop
sahf
cmc
mov
aad
clc
lcall
ret
pop
xor
or
pop
sahf
enter
push
adc
mov
jp
dec
mov
ljmp
dec
dec
movsb
sub
cmpsb
jecxz
int
cmp
adc
rorl
lds
jmp
xchg
mov
cmc
sahf
imul
iret
sbb
loop
mov
bnd
inc
xchg
roll
sbb
popa
dec
pop
cmpsl
fdivrl
mov
sbb
push
loope
ljmp
xchg
pusha
sbb
inc
sbb
test
repnz
pop
jmp
jp
pop
std
hlt
xchg
lock
sub
push
das
xchg
sbb
mov
xchg
arpl
sbb
rcrb
xchg
add
add
or
add
push
and
inc
xchg
xor
or
jp
movsl
and
cmp
xchg
inc
pusha
pop
mov
stos
push
adc
imul
fistpl
push
inc
rorb
lcall
mov
leave
dec
jge
and
inc
jb
jbe
sub
jecxz
fdivr
imul
push
push
outsl
mov
dec
dec
test
sbb
fisubl
ret
out
das
push
adc
leave
insl
add
pop
mov
sub
sbb
movsl
lret
pop
and
inc
inc
pusha
cs
cld
xchg
stc
sbbb
jg
inc
fwait
push
clc
sbb
sbb
loop
pop
inc
scas
sti
xor
xchg
popf
adc
dec
xlat
ja
scas
inc
adc
adcb
pop
adc
lods
fdivs
fists
xchg
lea
cvtps2pd
fiaddl
or
nop
xor
adc
dec
imul
pusha
icebp
dec
or
sub
psubusb
dec
cmp
push
stos
lea
arpl
mov
aas
mov
dec
xchg
pop
jl
sub
sbb
movsb
ret
mov
adcl
cmpsb
or
push
push
and
xor
or
mov
shrl
add
xor
iret
andl
xlat
imul
and
xor
sub
jl
jp
out
push
fisttpll
dec
imul
mov
pop
mov
stc
pop
push
pop
in
inc
xchg
sbb
repnz
xchg
cmp
sbb
cwtl
pop
cmpsl
xchg
inc
fcoms
ret
int
test
sbb
adc
mov
hlt
out
ds
or
test
pop
fisttpll
jge
mov
scas
mov
cwtl
into
pop
or
dec
jmp
nop
aad
xchg
add
xchg
pop
rolb
ja
mov
cmp
cli
nop
or
shl
jnp
add
das
inc
xlat
orl
insb
stc
adc
dec
testl
push
mov
xor
dec
aaa
mov
push
and
movsl
cltd
xchg
int3
dec
xchg
jb
cmp
push
dec
pop
jnp
cli
minps
loopne
or
loop
adc
cld
xchg
adc
es
clc
bound
popa
icebp
add
adcl
pmaxsw
nop
cmp
hlt
or
jmp
fdivp
mov
testb
frstor
lods
sarb
and
into
inc
daa
in
scas
aad
inc
push
pop
sarl
xchg
add
lret
setne
js
or
cmp
jg
fldcw
imul
inc
enter
xorl
push
sbb
popf
sub
xor
leave
jp
mov
into
pop
out
hlt
test
mov
lret
cmp
jns
inc
jg
outsl
mov
jge
sbbb
jne
mov
insl
das
pop
pop
and
mov
and
sbb
mov
xchg
fwait
aad
jp
push
dec
push
lcall
in
jb
js
cs
adc
out
repz
jne
dec
fildll
ja
xlat
mov
sub
ljmp
push
jne
cmp
or
pop
push
ror
or
xchg
cmp
ja
cmp
data16
testl
loopne
lret
xchg
xlat
or
loop
inc
and
and
leave
mov
dec
inc
gs
dec
stc
xchg
test
pop
cmpsb
les
mov
mov
aad
popf
xor
gs
int
jge
pop
test
mov
cmp
xor
xchg
pop
aad
lret
mov
lea
cltd
lods
mov
and
or
sub
cmp
cmc
rorb
ja
cld
sbb
testb
js
dec
test
lock
cld
cltd
and
xor
cmp
sub
imul
fnstcw
daa
or
aaa
xor
lret
in
cmpsw
fsub
mov
jns
pop
xchg
push
xor
rolb
jle
enter
leave
ret
pushf
insb
call
sbb
in
cmp
xchg
filds
loop
scas
icebp
xor
dec
scas
push
daa
popf
mov
outsb
dec
or
imul
pop
mov
lods
rorb
or
mov
idiv
cltd
imull
arpl
mov
outsl
adc
add
mov
sub
adc
or
fidivl
call
push
sbb
dec
and
jns
mov
mov
in
in
das
js
dec
enter
push
cmp
and
mov
bound
cmp
leave
mov
test
test
scas
xchg
mov
jg
lds
or
fisubrl
int3
cmp
cmp
jb
jl
mov
pop
cltd
jp
and
and
mov
pop
xchg
outsl
mov
dec
sub
scas
lret
dec
pop
inc
insb
push
xor
fdivrl
sarl
jl
jmp
pop
stc
mov
adc
mov
adc
scas
inc
les
enter
mov
sbbl
jno
fadds
sub
clc
cmpsl
aam
aad
in
cli
mov
inc
mov
js
sub
sbb
ss
ds
dec
adc
xchg
cmc
mov
inc
push
repz
push
pop
shl
xchg
xlat
lods
ror
mov
sbb
cmp
mov
and
addl
dec
add
aaa
inc
cmp
pushf
or
in
pop
push
fsubl
and
test
clc
les
or
mov
leave
xor
pop
mov
clc
in
mov
cmp
clc
lea
sub
push
pop
mov
scas
aaa
sbb
std
jae
in
loope
clc
push
or
loop
mov
dec
adc
cwtl
stos
testb
push
jge
jne
out
mov
cmp
xor
or
cmp
data16
stc
mov
stos
mov
in
dec
sbb
mov
xor
mov
hlt
or
dec
jp
cwtl
add
mov
jne
jmp
dec
pop
int
out
je
jle
ljmp
loop
int
cwtl
xchg
aaa
dec
loop
movsl
mov
rcrl
cmp
in
jo
jb
lock
cld
test
sbb
add
pop
loopne
pop
mov
sub
hlt
inc
sbb
mov
or
imul
shl
lock
mov
and
inc
insb
scas
and
aas
pop
lock
lcall
xchg
mov
pusha
sub
lods
mov
mov
imul
xor
ja
jne
sbb
push
xor
jbe
aaa
xchg
mov
sbb
mov
jecxz
pop
popf
pusha
scas
pop
call
popa
fnstcw
jmp
pop
jl
pushf
stos
pushf
cmp
not
push
ret
sahf
mov
ret
jbe
mov
stos
movsb
mov
cld
mov
and
loopne
sub
jo
out
orl
jae
xor
xchg
mov
push
dec
dec
js
out
movsb
popa
insb
xor
inc
lods
mov
int3
ret
pop
pop
movsl
clc
int3
pushf
mov
jmp
and
in
mov
lods
xor
and
ret
jmp
dec
fwait
sub
sub
pop
push
outsb
lret
loop
nop
mov
inc
js
outsl
mov
and
mov
or
mov
jae
faddl
xchg
pop
dec
mov
mov
pop
lods
inc
aaa
pop
sbb
divb
int
cmp
out
inc
push
adc
movsl
movsl
pop
inc
fstpl
ss
xor
aaa
adc
int
mov
test
adc
mov
sti
jl
call
xchg
pop
jne
pushf
data16
or
ret
pusha
sarb
inc
mov
lret
mov
xchg
add
sbb
sub
test
out
fldenv
jae
aaa
ja
lret
jb
jl
mov
int
fidivrl
mov
push
jp
add
stos
cmpb
outsl
daa
sarb
dec
add
sub
lock
call
jne
test
nop
insb
or
mov
mov
shll
fcom
pop
push
shrl
cmc
dec
sub
mov
divl
dec
lock
dec
xchg
xor
out
shll
pop
scas
xor
pop
gs
data16
lahf
leave
lret
ret
cmp
mov
and
cli
cmp
cwtl
sub
in
mov
xchg
iret
scas
into
inc
and
pop
push
and
insl
scas
cmc
jge
add
xor
mov
xchg
mov
ds
fcoml
push
jp
jae
fadds
notb
out
add
cli
mov
sbb
xchg
sbb
sbb
jg
xor
hlt
or
addr16
aad
mov
pextrw
popf
inc
test
cmp
or
popa
or
push
mov
cmp
movsl
push
in
cmp
cmpl
dec
push
lock
insl
lret
xlat
lock
lret
dec
mov
ds
mov
xchg
xchg
sti
fbstp
divl
imulb
sub
push
pop
or
pop
rcrl
repz
in
mov
out
lcall
outsl
cmpsb
les
test
xchg
lods
leave
test
xor
cs
pop
sub
pop
pop
cmp
mov
sbb
push
mov
fwait
pop
js
lret
scas
rcll
add
insb
xorl
repnz
stc
push
pop
int3
subl
ficoml
cli
push
mov
in
push
testb
jne
aaa
xchg
xchg
incb
ficomps
adc
addr16
sub
out
and
or
rcrb
inc
loop
pusha
xchg
cmp
mov
mov
mov
js
ljmp
cmc
lcall
cmc
mov
xchg
lcall
pop
cli
mov
daa
xor
cmp
cmp
sbb
fldt
inc
clc
insb
jp
push
pop
in
xchg
shrl
mov
pop
adc
lret
outsl
ss
fstpt
push
xchg
sbb
push
in
fcoms
or
fisubl
es
sbb
push
push
cmp
sbb
push
jmp
adc
xor
fldln2
add
into
sti
jo
push
push
xchg
jecxz
xchg
je
mov
aam
inc
int3
les
lcall
out
fimuls
repz
push
lea
or
mov
mov
jne
add
enter
test
mov
call
ds
add
fdivrl
inc
push
pop
jnp
pcmpeqd
shll
cwtl
hlt
int3
in
xchg
std
push
ja
mov
sbb
sti
scas
and
test
int3
sub
xchg
lods
mov
ret
sub
subb
pop
cmp
adc
ja
sbb
xchg
xchg
xor
mov
mov
dec
cmc
dec
andb
mov
mov
movsb
xor
mov
ret
outsb
mov
cmp
lock
cmpsb
ret
mov
xor
mov
sub
lods
sbb
out
pop
loope
sbb
pop
pop
addl
gs
and
cmpsb
cmpsl
cltd
daa
xchg
cmp
mov
movsl
push
push
testb
and
xchg
inc
out
aad
std
test
jl
adc
xlat
inc
fdivr
cwtl
mov
scas
fidivl
fisttpl
fprem
fldt
or
dec
cwtl
mov
xlat
movsb
dec
and
shrb
xor
mov
popa
pop
jp
popa
loop
xor
jle
imul
cwtl
add
dec
cs
jle
enter
sub
xchg
xor
fisubs
pop
sub
push
adc
xchg
pop
out
pop
push
add
call
outsb
dec
rcll
int
push
sbb
mov
add
fistpl
test
push
xchg
mov
jnp
popa
mov
ds
cld
push
adc
mov
inc
insl
sahf
das
inc
cmp
aad
cmp
xor
dec
and
cli
cmpsb
sbb
cli
pop
pusha
mov
mov
mov
into
lods
fsubrs
jno
sti
ss
pop
sbb
xchg
test
jge
fidivrs
cltd
orb
enter
sbb
mov
and
int
xor
mov
adc
pop
push
push
dec
scas
sub
hlt
fs
pop
xchg
xchg
test
insb
aad
test
aas
lcall
xchg
lret
jbe
dec
shlb
js
mov
stos
xchg
lds
popa
lods
xor
sbb
adc
pop
das
loopne
dec
mov
sub
dec
add
xor
test
loop
imul
adc
fwait
xor
push
cmp
mov
imul
adc
imul
rclb
push
add
and
mov
xor
dec
push
inc
mov
mov
or
jns
dec
or
ds
adc
call
shrl
xchg
int
testl
test
cmpsl
add
pushf
pop
xor
cwtl
cmp
aam
ja
add
xchg
jg
mov
stos
dec
cld
pop
enter
push
sub
add
int
psraw
lahf
xor
aam
or
adc
lods
mov
in
and
negl
ds
sub
test
xchg
sti
pop
dec
fnstenv
add
ror
mov
fstpt
std
nop
jbe
pop
sbb
adc
mov
sbb
pop
push
mov
ss
in
sti
cmp
push
push
pusha
adc
loop
mov
fldt
shlb
jbe
daa
sti
je
in
jne
out
js
inc
lahf
xor
mov
cmp
stos
sbb
mov
mov
and
add
cmp
mov
jmp
push
notb
push
xchg
or
jle
out
hlt
push
mov
lcall
mov
pop
cmpsl
adcl
inc
xor
dec
adc
fldl
mov
add
outsl
jge
jno
mov
out
inc
int3
jno
cwtl
mov
lock
xchg
ktestw
adc
jns
bound
mov
in
addr16
push
das
pop
cli
insb
ret
xor
lds
idivb
loop
insl
aaa
shll
in
inc
push
out
das
mov
fwait
xlat
movsl
sbb
sahf
stc
push
test
in
and
mov
and
loopne
or
dec
jb
stos
and
sbb
movsl
dec
mov
sahf
ffreep
jbe
lret
or
mov
sbb
adc
outsb
lods
inc
je
mov
js
add
sub
mov
and
ret
push
and
mov
xor
addr16
pushf
aam
pop
jmp
lret
xor
data16
sahf
pop
and
xor
cmp
divl
add
sub
gs
sbb
adc
ja
popf
xchg
ret
or
cmp
pop
fstps
decb
push
stc
in
in
and
adcb
outsb
jno
and
sbb
mov
imul
ja
xlat
adc
inc
add
test
add
mov
cld
jg
adc
pop
lret
outsb
pop
mov
jge
adc
inc
lret
lea
popf
pop
jp
add
jmp
sbb
int
std
sbb
mov
cs
in
aas
into
shll
adc
data16
enter
int
out
ret
jns
pop
scas
test
cmp
aaa
aas
xchg
rolb
push
mov
xor
cmp
popa
jle
sti
lcall
or
xchg
and
leave
push
arpl
sub
adc
add
mov
leave
or
adc
cli
dec
mov
or
pop
fisttpll
cli
pop
cmc
cmp
jl
add
xchg
shrl
loope
push
jmp
shrl
mov
xchg
cld
mov
inc
pusha
push
inc
in
or
rclb
push
leave
sbb
sub
leave
adc
test
pop
mov
insl
clc
sub
int
shll
fisubs
in
enter
push
loope
adc
andl
test
mov
aas
ss
daa
adc
push
adc
mov
sahf
sub
push
xor
inc
cmp
jno
add
xlat
mov
and
xchg
out
jle
mov
pushf
xchg
lea
popa
mov
arpl
adc
lea
push
jmp
or
nop
xor
adc
loop
xor
add
lock
pop
jne
outsl
popf
loop
lods
dec
adc
je
ss
fs
ja
aas
es
mov
or
mov
add
lds
fucomi
cmpl
lret
sbb
adcl
jb
cmpsl
daa
test
push
mov
fcomi
jno
or
loopne
outsb
xchg
in
hlt
xor
das
mov
out
jae
jmp
in
mov
sub
sub
xchg
pop
test
mov
sub
sbb
jb
lahf
test
pop
dec
mov
pop
sub
mov
and
dec
cli
jp
scas
add
jo
sub
inc
xchg
nop
add
cmp
lret
movsl
lock
inc
pop
fwait
lahf
jl
dec
stos
and
mov
pop
rorb
lock
push
push
int3
or
pop
ja
xor
cs
sbb
mov
jns
lret
mov
loopne
aad
push
aaa
cli
pop
inc
add
mov
mov
mov
xor
or
test
fidivs
adc
shl
adc
mov
pushf
lahf
pop
mov
bound
sub
adc
pop
pusha
jno
inc
inc
int3
dec
pop
loopne
mov
sahf
mov
xchg
sahf
sarb
sub
in
cmpb
rclb
pop
xchg
mov
adc
pop
jge
lods
pushf
and
sbb
hlt
popl
push
mov
scas
and
movsb
pop
cld
dec
add
lock
shll
jmp
fstps
loop
mov
adc
aam
mov
dec
xchg
adc
test
es
and
fsubs
pop
sbb
std
push
and
fildll
fcmovnu
out
shrl
dec
xor
mov
iret
mov
fisttps
jp
invd
sub
fdiv
stos
xor
jecxz
xor
pop
and
dec
adc
mov
inc
mov
rolb
xor
leave
cmp
in
jp
push
nop
addr16
push
popf
xchg
or
cmpsb
mov
or
ret
cmp
into
gs
mov
mov
stc
mov
out
add
xorl
pop
cmpsb
jmp
adc
push
jle
lcall
jbe
inc
jae
punpckhwd
push
xchg
mov
and
pushf
movsb
add
xor
fsubrs
sbb
test
pop
sub
add
fisttpll
and
jp
xchg
movsl
add
lret
roll
xchg
scas
icebp
je
and
xor
push
xor
test
loop
mov
xor
jbe
mov
insl
mov
push
fs
scas
xor
inc
imul
push
mov
add
mov
mov
insb
and
pop
aas
xadd
aas
loope
mov
pop
imul
outsl
mov
sbb
cmp
pusha
lock
cmp
mov
mov
or
mov
or
sti
hlt
loope
lock
push
ds
repnz
stos
push
std
pop
pop
insl
and
shrb
pop
mov
shrd
pop
mov
mull
inc
pop
jb
mov
fstps
rorb
dec
scas
xchg
or
repz
inc
aaa
mov
test
out
fisubrl
out
andb
mov
fnsave
testb
out
pusha
fwait
jno
mov
mov
mov
es
stc
popa
jne
sub
imul
mov
cmpsl
adc
and
xor
cwtl
adc
push
mov
xor
jl
xor
pop
and
cmp
mov
imul
icebp
xor
roll
jmp
mov
insb
insb
jmp
fs
inc
inc
push
and
and
cld
xor
loope
popa
inc
and
mov
std
jno
jae
cmp
mov
sahf
mov
rolb
sbb
xchg
sti
lret
and
sub
fsubl
ljmp
jb
icebp
lea
cltd
sub
test
push
fcom
ja
out
in
testb
fidivl
pushf
insl
and
cmp
pusha
xor
clc
fcomps
mov
push
bound
xchg
jg
sbb
pusha
int
insl
lcall
and
push
sub
mov
or
push
jbe
scas
mov
fmull
pushf
cmpsl
mov
popa
dec
xchg
inc
in
orl
push
mov
mov
mov
pop
push
mov
gs
fildl
rorl
sbb
xlat
cs
cmc
and
fbld
int3
push
orl
stc
jl
or
lods
jg
out
insl
clts
repnz
push
stos
fstps
daa
das
test
mov
fwait
jns
hlt
push
sub
mov
mov
je
push
xchg
ds
dec
mov
and
fistpll
jp
or
loopne
or
js
pop
and
xchg
cmpsl
mov
stos
cli
movsb
into
cmp
stos
fcom
lea
in
scas
add
jns
cmp
pop
aaa
repz
jle
in
ret
jmp
sbb
dec
inc
mov
xchg
push
das
sub
cmp
inc
xchg
push
fsubrs
push
xchg
push
jecxz
push
dec
pushf
adc
sbb
cmp
int
add
and
mov
divb
dec
xchg
cltd
test
mov
dec
shll
sub
or
rcr
cs
leave
in
push
xor
jge
test
pop
xchg
push
cltd
dec
pushf
or
fstpl
or
lods
movsl
xchg
scas
mov
testb
mov
jno
cmp
xor
pop
dec
sbb
xchg
test
je
pop
inc
movsb
mov
jnp
lahf
sarl
lret
js
sti
jg
lds
cmp
mov
lods
add
jb
push
mov
sbb
dec
test
jae
jns
enter
jo
adc
popf
dec
in
fistl
lret
out
mov
pop
and
jmp
pop
and
sbb
xchg
outsl
test
sub
xchg
pcmpgtw
xchg
mov
std
leave
or
cli
adc
cmc
je
sub
aam
mov
push
push
incb
std
enter
repz
loope
dec
cmp
nop
xchg
rcll
xor
scas
pop
pop
xchg
cmp
mov
mov
jp
movsb
xchg
rcll
dec
jg
bound
outsl
out
jl
repnz
or
cs
or
push
push
stos
push
pop
test
mov
pop
jbe
out
inc
stc
inc
add
cmp
popf
test
int3
es
dec
mov
cmp
dec
mov
or
lea
ror
or
cmp
cmp
cld
add
xchg
dec
sub
in
and
dec
mov
sarb
inc
shrb
dec
mov
enter
pushf
push
shll
cmc
mov
push
mov
cli
push
leave
gs
push
test
push
loopne
out
push
push
or
out
sti
arpl
jno
inc
cli
fimull
roll
lods
mov
arpl
adc
fistl
xlat
cld
pop
fsub
faddl
inc
fwait
pop
imul
push
sub
arpl
jge
jno
das
dec
xchg
loopne
xchg
int3
mov
loop
in
and
mov
call
lahf
lret
dec
fsubr
adc
out
pop
add
cmp
imul
scas
pop
add
gs
push
in
insb
fldl
jb
fdivl
loope,pn
sbb
and
or
xor
xchg
adc
and
push
dec
gs
pusha
loope
rorb
cmpsb
mov
jmp
sbb
jecxz
or
ret
lahf
inc
inc
jecxz,pn
mov
mov
flds
gs
std
xor
fisubl
add
test
xchg
mov
nop
xorb
imul
movsb
lods
aaa
push
and
mov
cmpl
and
pop
fistps
fnsave
mov
xchg
ret
arpl
cmc
js
cmp
in
rcll
stos
loop
ficomps
iret
rcl
mov
and
cmp
pushf
shrl
or
add
and
hlt
pop
data16
sbb
adc
outsl
shlb
addr16
sub
lods
jecxz
or
int3
push
addl
mov
shrb
and
jmp
sbb
shll
mov
aad
and
cld
daa
inc
mov
outsb
inc
dec
negb
jno
jl
repnz
push
pusha
sti
mov
ret
ja
cld
divb
stos
cmp
int3
mov
subb
mov
or
jae
test
adc
inc
test
mov
iret
arpl
xorl
mov
movb
cmpsl
in
dec
int
in
pop
pop
movsl
jne
insl
bnd
xchg
jmp
fnsave
jecxz
fs
sub
inc
sbb
cltd
gs
aaa
pop
push
fisubl
nop
push
cmp
inc
or
xchg
push
imul
lea
pop
or
cmpsb
push
negl
lods
adc
mov
push
aam
addl
xchg
ret
cmp
dec
mov
pop
inc
push
stos
mov
and
sbb
in
jle
hlt
jl
sbb
mov
lret
negb
cmp
mov
push
mov
push
scas
jecxz
popf
xchg
mov
and
jp
add
jnp
dec
das
pop
mov
push
out
aas
push
xlat
cmp
xor
lds
cmc
leave
xor
or
xchg
and
popa
mov
jecxz
cmp
fildll
imul
pop
mov
or
in
adc
fbld
inc
scas
imull
je
hlt
ret
cmp
cmc
mov
aam
out
push
cmp
xor
xchg
jns
pop
cmc
sahf
jg
loop
and
push
in
push
mov
xchg
jbe
bound
lret
and
inc
hlt
je
add
out
in
add
sbb
shr
bnd
or
pop
nop
sub
pop
cmpsb
lods
out
ja
dec
negb
fldenv
xchg
out
std
jmp
cmp
xchg
leave
jb
ret
dec
jge
pop
test
xor
mov
push
xchg
movsb
movsl
mov
xor
shlb
movsl
shrb
and
jmp
push
imul
cltd
xchg
popa
daa
insl
fistpl
mov
test
adc
loopne
inc
pop
mov
jg
dec
fcoml
data16
std
test
push
sub
or
rclb
outsl
or
in
in
cmp
cmp
sbb
pop
jnp
nop
fisubrl
hlt
sub
sub
in
divl
fisttpl
jp
sbb
dec
nop
and
jle
inc
out
cs
dec
fists
les
cvtps2pd
pop
mul
mov
lods
imul
rcl
xorl
leave
lcall
call
fmull
jbe
jb
pop
mov
cmp
dec
loop
jl
pop
out
out
sbb
inc
add
addr16
outsb
adc
test
pop
xchg
or
push
push
cmc
fwait
jo
inc
pop
adc
xchg
loop
sbb
test
jmp
jae
mov
xor
push
mov
adc
mov
pop
cmp
aad
data16
add
xor
insl
fchs
push
add
movsb
sbb
and
dec
cmp
hlt
add
xchg
imul
rcrl
addr16
sub
and
xor
lods
xchg
jnp
mov
dec
inc
cmc
outsl
scas
roll
push
lea
arpl
inc
fprem1
xor
xor
into
and
out
in
out
jge
jnp
mov
ret
dec
cld
testl
mov
pop
std
icebp
shlb
ret
es
fildll
loop
sub
je
jmp
add
mov
dec
push
inc
mov
cmp
inc
xchg
cltd
fwait
imul
push
push
sub
add
psadbw
xlat
cmp
sub
mov
mov
push
and
mov
ret
sbb
ds
out
mov
xchg
lock
add
and
mov
inc
jno
mov
mov
push
lea
jge
or
jb
xor
idivb
inc
out
and
jp
sbb
adc
mov
xlat
popf
gs
inc
sub
push
stos
sub
hlt
pushf
ja
xchg
les
mov
xor
test
inc
sbb
lcall
inc
dec
aas
sub
test
fnstsw
test
cmp
xor
scas
jg
lret
sbb
add
cwtl
adc
mov
popf
sbb
push
subl
inc
push
and
pop
xor
scas
out
test
into
push
sti
mov
and
or
inc
int3
inc
or
cld
adc
push
mov
jl
test
daa
cmp
cmp
jbe
fisubs
iret
pop
jo
mov
mov
jecxz
xchg
inc
push
fiadds
inc
jb,pt
xor
adc
lret
dec
sbb
pop
rcrl
data16
incl
sbb
dec
jmp
adc
lcall
sub
pop
adc
movsl
pop
ret
stc
imulb
iret
pop
push
mov
loop
insl
orl
and
lods
pusha
add
adc
aas
les
js
scas
dec
stc
movsb
push
pop
mov
stos
dec
std
or
adc
jo
in
xor
pop
sub
test
jecxz
pop
flds
xlat
sub
shll
mov
mov
scas
inc
and
xchg
stos
pop
out
popf
pop
pop
stos
mov
add
inc
mov
cmpb
push
dec
scas
pop
jo
out
or
rorl
xor
stos
icebp
add
int3
or
jne
xchg
pop
or
sbb
movsl
inc
mov
cs
dec
mov
hlt
and
inc
or
andl
xchg
ret
repnz
and
mov
enter
mov
lret
add
dec
mov
icebp
inc
in
ret
aam
sti
mov
fsubs
sahf
inc
lods
inc
or
xchg
aam
inc
xor
lods
dec
imul
aas
int3
out
inc
shll
xchg
and
push
xor
hlt
push
dec
aam
mov
bound
shlb
xor
xlat
xchg
dec
fldl
int
dec
jge
cwtl
insb
addl
lret
fstps
iret
ret
loopne
push
aam
xchg
cld
xor
mov
jl
mov
inc
popf
mov
data16
mov
cwtl
mov
adc
cmp
push
std
outsb
pop
sub
pop
mov
gs
lock
test
mov
push
enter
in
xor
repz
sub
sbb
shl
xchg
jnp
sbb
cli
xlat
andb
jae
sub
ja
xor
xor
test
mov
dec
call
bound
icebp
lcall
cmp
pop
loopne
rorl
cltd
jg
shlb
scas
stc
sbb
or
loop
pop
cs
inc
outsl
sbb
lock
icebp
xchg
mov
mov
mov
cmp
cmpsb
xor
lods
out
adc
xchg
push
cli
negl
fmul
or
fdiv
pushl
cs
adc
sbb
rol
out
sub
std
fisubrl
les
sbb
ret
mov
jns
and
jae
or
push
addr16
push
imul
mov
mov
and
cmpsl
push
xor
jb
mov
arpl
outsb
adcb
out
jle
jo
xchg
mov
dec
inc
xchg
and
sbb
or
cmp
rolb
jmp
inc
pushf
into
into
inc
jmp
sbb
or
sarl
scas
pop
push
or
sahf
aad
test
or
pop
cmc
add
jo
shrl
mull
das
lcall
jecxz
mov
lret
inc
push
mov
and
lods
push
nop
js
mov
roll
adc
pop
mov
adc
inc
dec
mov
je
xor
cmpl
and
sahf
xchg
mov
rorl
in
ljmp
cmp
mov
stos
push
xor
jae
out
sbb
std
push
shr
frstor
jmp
fstl
mov
test
cmc
xchg
insl
pop
out
mov
fistpll
and
ss
dec
int3
sbb
cmc
dec
jo
cli
jo
lock
addr16
fdivp
push
xor
mov
inc
dec
pushf
xchg
aam
and
movsl
jb
jl
adc
loop
sbb
out
mov
push
call
mov
test
je
inc
shlb
and
xchg
negb
push
int3
fcmovnu
jae
cmp
pop
and
ficoml
push
jg
scas
or
jo
sub
or
inc
idiv
into
fisttps
mov
sub
das
outsb
ds
sbb
jns
mov
test
cltd
repz
sub
inc
pop
mov
fidivrs
imul
xor
sub
lcall
cmp
jle
movsb
insb
test
jo
sub
xchg
xchg
fldt
mov
inc
je
and
data16
cmp
bound
add
popf
push
fists
jp
dec
int3
int
and
dec
aam
dec
aas
stc
lahf
addl
xor
xchg
fcoml
xchg
outsl
sub
sar
dec
lret
push
cmpsb
inc
les
repz
push
jno
lods
fcompl
pop
dec
mov
fidivrs
xor
and
add
sar
adc
dec
pop
test
push
jecxz
mov
dec
mov
imul
lret
xor
and
push
or
scas
dec
mov
mov
xchg
je
sbb
sub
fs
pop
cmpsb
mov
mov
incb
pushf
int3
xor
and
xchg
push
sqrtps
loopne
adcl
push
sarl
decl
lea
stos
aam
cmp
pop
pop
call
icebp
push
xchg
add
xor
jbe
data16
testb
cmp
adc
adc
fsubrp
bound
test
mov
stos
test
mov
cmp
aaa
fistl
loopne
and
and
mov
inc
mov
pusha
or
arpl
jo
lods
popf
ja
lahf
push
lods
cmp
sub
jl
cmpsl
xor
fsubrl
push
pop
cwtl
subb
incb
es
push
test
lahf
pop
imul
cmovl
rorb
mov
xchg
cmp
mov
push
imul
lcall
mov
aas
fadds
and
cmp
cmp
cmp
fwait
jp
mov
in
iret
add
aaa
dec
jne
hlt
aaa
cmc
bound
inc
pop
inc
push
insl
insl
pop
arpl
out
dec
xlat
insb
sbb
pop
mov
cmp
dec
cmp
push
stos
testb
pop
sbb
add
ret
lock
std
sub
pop
dec
push
popa
xor
inc
mov
adc
jmp
jbe
jle
cmpps
mov
gs
mov
stc
inc
cwtl
mov
xchg
jae
shlb
adc
leave
rcr
adc
add
push
xchg
movsl
cltd
orb
fsubl
jns
imul
cmp
push
int3
cs
mov
push
xchg
mulb
cli
in
mov
push
jl
jmp
inc
jle
pop
sbb
aad
sahf
jne
je
outsl
fwait
dec
loop
mov
jmp
jecxz
cmp
adc
xor
cli
xor
adc
adc
cmp
and
sbb
js
dec
dec
in
inc
mov
dec
rcll
mov
mov
dec
nop
adc
es
nop
aas
ds
in
cmc
jns
lcall
and
int
or
push
iret
and
and
cmp
das
jge
out
pop
add
sub
jne
out
push
cmp
shlb
outsb
in
les
add
mov
mov
rorb
sbb
push
sbb
addr16
sbb
pop
sub
sbb
daa
jb
push
gs
popf
sahf
inc
rclb
jbe
add
push
push
xorl
test
xor
cwtl
subb
push
add
push
lods
adc
inc
inc
pushl
mov
xor
fwait
shl
test
jl
jne
inc
je
imul
stos
aad
mov
arpl
pop
out
pushf
cmp
stc
in
pop
lock
dec
shrb
nop
add
adcw
dec
ljmp
shl
ret
mov
and
sbb
or
enter
adc
into
mov
lods
xor
es
xchg
xchg
mov
or
add
addl
mov
pop
loop
xor
and
jbe
mov
addl
mov
sub
ljmp
mov
jb
xchg
jnp
imul
or
add
ja
insb
aaa
negl
inc
nop
int3
jmp
or
aas
hlt
sbb
movsb
into
negb
inc
cltd
sbb
icebp
xor
addr16
inc
rcl
adc
dec
stos
call
es
daa
fcoms
sbb
jae
push
push
xchg
adc
cmc
inc
add
jae
and
add
test
jle
cmp
pop
mov
lcall
fadds
jno
mov
not
out
jno
jg
lods
mov
add
xorb
push
mov
pop
sub
pop
jg
insl
inc
sbb
mov
pop
fmul
mov
mov
add
mov
pop
sbb
xchg
xchg
and
pop
inc
xlat
push
and
mov
jecxz
std
push
test
int
es
xorb
fstpl
and
push
aam
lahf
sub
test
scas
pop
ret
add
ss
aad
pop
loop
jecxz
pop
bound
scas
push
stos
cmp
push
or
sbb
jae
arpl
cmp
dec
pop
and
sbb
cmpb
inc
es
xor
jmp
stos
xchg
cli
out
pop
fs
sub
or
enter
and
jo
xor
or
cmp
push
test
scas
pusha
mov
cmp
hlt
cwtl
or
inc
mov
outsb
mov
push
add
dec
cmp
and
xchg
outsl
in
adc
cld
mov
push
mov
push
cltd
sbb
hlt
mov
jle
push
addl
shl
lds
or
loop
pop
shll
and
push
pop
popa
arpl
mov
rcrl
fnstenv
mov
xchg
mov
inc
movsl
push
popa
mov
cmp
fimull
xchg
rcrl
cmpsl
or
jo
mul
inc
clc
hlt
scas
cmp
and
or
call
imull
dec
jle
cmp
adc
sub
cmp
pusha
and
fisubs
inc
fildll
sub
mov
dec
scas
mov
sbb
ss
push
repnz
stc
mov
pop
mov
subb
test
aad
je
cltd
pop
dec
sub
ds
mov
xchg
lcall
mov
les
fistpll
jmp
rorb
jg
test
ss
int
icebp
mov
js
mov
jmp
sarl
sub
pop
mov
into
dec
sarl
inc
scas
mov
add
xor
daa
movsl
rcll
and
xor
xor
or
lcall
imul
cmp
add
lock
adc
cwtl
subb
mov
cmp
sti
fmuls
push
pop
mov
lods
jl
adc
add
or
inc
pop
pop
call
adc
js
xchg
and
orl
jo
xchg
mov
sbb
rcrb
addl
xchg
push
and
pusha
loope
jnp
lahf
aas
xlat
push
iret
insl
iret
mov
jns
loope
xchg
mov
inc
jae
inc
add
dec
loop
aaa
cmp
js
mov
pop
push
mov
pop
into
push
jmp
sbb
jmp
leave
ret
outsb
stc
test
cs
jl
fwait
lds
lret
inc
loope
adc
insl
fwait
aaa
mov
push
add
sub
mov
xor
icebp
xor
fld
add
mov
mov
adc
xchg
addb
mov
orl
pop
jl
movsl
adc
inc
xor
sbb
mov
dec
fisubl
test
xor
xchg
or
mov
sarl
xlat
xchg
inc
in
insl
js
sti
add
lock
sub
cmp
xor
sub
into
outsl
imul
pusha
xor
inc
mov
xchg
insb
push
push
dec
pop
stos
cmp
shrb
xchg
and
sbb
ja
sbb
sub
pusha
or
inc
push
popf
fs
cmc
pop
or
enter
shl
scas
cwtl
lea
or
lods
das
in
bound
or
xchg
sbbl
mov
or
jl
pusha
enter
mov
cmp
imul
imul
pop
push
out
sbb
mov
cmp
aad
inc
sbb
or
cmpsb
loope
loopne
or
cli
pushf
sbb
mov
lock
in
rclb
hlt
and
mov
add
mov
stos
mov
cmp
arpl
repz
cltd
pop
xchg
mov
mov
mov
jae
mov
cltd
xlat
out
fcoms
mov
sbb
clc
fstpl
mov
mov
mov
sbb
pop
repnz
lds
sub
jge
filds
faddp
out
sub
iret
mov
rcrb
jg
sti
notl
pushf
mov
add
dec
sbb
insb
repz
mov
cmp
call
cwtl
stos
mov
daa
popa
push
mov
punpcklwd
cs
lods
pop
scas
shll
mov
push
sbb
aad
mov
aaa
je
sbb
mov
loop
xchg
cld
and
pop
popa
testb
push
icebp
or
sbb
xchg
pusha
mov
xlat
cmc
or
fadds
mov
scas
je
mov
dec
xor
jge
aad
pusha
mov
jbe
pop
or
ret
adc
in
shll
scas
cmc
inc
inc
jecxz
cmp
aas
sbb
mov
daa
int
dec
cmp
cmp
mov
xor
rolb
test
lahf
push
xor
out
lods
cmpsb
imul
lods
jmp
add
pop
xchg
mov
in
test
xchg
cmp
xchg
mov
cmp
adc
lcall
mov
pop
ljmp
aaa
ret
sub
sti
mov
sub
push
and
rcll
sbb
stc
aad
jne
jb
sbbl
loop
aad
stos
mov
mov
scas
mov
lret
jp
push
push
scas
sub
mov
or
ss
out
je
push
cmp
push
xchg
mov
outsb
jne
mov
mov
movsl
dec
sbb
cli
loope
in
jg
test
cmpsl
int3
out
fistpl
jae
lahf
sub
xchg
loopne
pop
rcrb
mov
xor
sbb
inc
repz
gs
or
jns,pt
shl
xor
out
or
test
cld
cmpsl
and
adc
add
sarl
cmp
mov
jp
xchg
jo
and
pop
mov
fstp
outsb
dec
ljmp
pop
mov
int3
sbb
push
and
pop
sahf
jl
add
mov
out
xor
mov
pop
repnz
nop
mov
dec
test
mov
enter
fnsave
jmp
cltd
out
pop
push
and
mov
cli
or
ret
lea
loopne
sub
mov
mov
pusha
pop
ljmp
mov
sbb
sub
fs
inc
push
loopne
test
shll
test
add
imul
out
fbld
add
pop
imul
mov
stos
inc
fs
cli
jp
and
cmp
sahf
sub
fsub
not
cld
pop
in
fcoms
ja
out
and
jle
mov
push
jg
scas
sbb
loope
pusha
fwait
cli
lcall
call
stos
shlb
sbb
fs
mov
jge
push
addr16
test
out
mov
push
mov
stos
insb
push
push
leave
inc
popa
js
push
mov
mov
sbb
mov
pop
mov
mov
mov
jb
adc
adc
sub
movsl
cmp
xchg
inc
daa
scas
xchg
sub
adc
xchg
call
xlat
or
je
sbb
pop
and
mov
sti
mov
mov
push
clc
xor
cmpsl
inc
outsb
js
lahf
outsb
xor
ficompl
stc
cmp
or
loope,pn
cmpxchg
inc
subl
movsl
jno
jb
shll
ljmp
lods
mov
cli
rorb
dec
sub
repz
sub
adc
sub
aam
subb
fxch
test
cld
xrelease
jno
into
mov
push
and
jle
dec
dec
js
mov
loopne
jo
or
push
xchg
adc
pop
push
std
sbb
jmp
mov
mov
cmp
jg
imull
fnstenv
add
mov
ret
xchg
jbe
pop
push
lret
pop
jb
idivb
jle
insl
ss
and
loop
and
pop
push
insl
sbb
mov
js
sbb
jne
test
mov
add
faddl
outsl
mov
fs
sbb
cmpsb
adc
push
gs
adc
out
mov
jno
ds
pop
cmp
nop
outsl
mov
mov
lods
cwtl
mov
jae
push
and
repnz
test
push
lret
inc
cmp
cmp
neg
ret
stc
cmovs
jg
les
mov
shl
lds
addr16
sbb
jle
or
sbb
push
jb
jb
sbb
push
daa
outsl
pop
mov
sub
stc
inc
mov
leave
addr16
pop
lds
add
out
mov
sbb
and
popa
pop
pop
add
stc
dec
aam
xchg
andb
jnp
pusha
test
std
or
insb
in
push
jb
dec
sub
cmp
mov
ja
sbb
or
sub
out
ljmp
and
sbb
mov
inc
bound
ret
jge
pop
adc
sarb
scas
into
fistps
outsb
sbb
fdivp
repnz
mov
stos
mov
jmp
mov
cmpsb
mov
and
cmp
cwtl
ficompl
mov
addr16
addl
sbb
in
out
ljmp
xchg
fdivl
fsubrl
xor
fistl
mov
and
adc
jmp
pop
rcll
loopne
or
es
scas
in
mov
sbb
pop
movsl
mov
inc
lods
mov
mov
cli
test
cld
notb
ret
lret
dec
inc
movsl
push
jmp
adc
popa
xchg
orb
and
in
pop
in
sarl
xor
aad
repnz
out
out
mov
loope
mov
xor
xor
push
leave
insl
push
push
add
mov
push
and
hlt
testb
jle
pushf
cmp
cmpsb
pop
int
arpl
test
add
sub
push
cltd
or
inc
cmp
mov
or
mov
insb
xchg
mov
scas
fs
sbb
xchg
xchg
xlat
outsb
mov
test
mov
pop
je
into
int
stos
xchg
out
ret
faddl
mov
dec
aas
mov
mov
push
fwait
jmp
push
mov
int3
xorb
jle
mov
jae
jmp
insb
jnp
insb
jge
or
lods
lds
or
fiadds
hlt
aaa
push
pop
shll
mov
mov
pop
xor
dec
mov
xchg
jno
loopne
sub
aam
push
out
std
mov
jg
loopne
cltd
jl
inc
lods
xchg
push
imul
mov
add
add
or
movsl
inc
jns
lods
or
push
inc
pop
pop
cld
rol
ret
mov
or
iret
push
je
sub
insb
out
shrb
push
jb
jns
js
int
mov
rolb
lock
push
xchg
cmp
test
insl
mull
fwait
arpl
push
cwtl
push
mov
cmpsb
inc
mov
pop
xor
xchg
ds
loop
cmpsl
pushf
add
call
xchg
orb
rclb
imulb
repz
loop
and
ror
xchg
inc
cli
push
jne
lcall
inc
jmp
xchg
sub
mov
cmpsb
and
inc
push
pop
add
test
or
or
add
loopne
pop
icebp
dec
das
push
add
jo
mov
jg
je
push
sub
or
inc
jne
jmp
push
movl
stos
jbe
adc
xchg
pop
inc
and
push
inc
xchg
jecxz
sbb
inc
mov
dec
outsb
push
push
imul
inc
mov
xor
repz
movsb
in
push
hlt
mov
dec
out
sbb
dec
and
add
pop
mov
pop
stos
movsl
insl
jmp
add
in
cmp
pop
xor
call
cmp
addb
add
into
imul
mov
clc
inc
mov
test
xor
lods
push
js
movsb
in
cmp
mov
cmp
je
xlat
sbbb
mov
mov
decb
mov
mov
shrl
adc
test
jmp
inc
and
js
cmp
sub
push
xchg
fstps
cmp
leave
xor
stos
jmp
std
jmp
aas
pop
add
pop
repz
jnp
aaa
inc
into
mov
add
push
lret
adc
push
push
es
sbb
inc
pop
loopne
ret
lea
mov
xor
or
inc
cmpsb
movsb
push
cltd
add
dec
pop
hlt
subb
and
or
hlt
cmp
push
pop
pop
sarl
cmpb
adc
sub
jnp
lea
pop
cmp
lods
mov
mov
notl
sub
dec
push
jbe
in
lea
xchg
stos
xchg
sahf
push
mov
pushf
out
icebp
ss
xchg
lret
push
mov
and
int3
rcrb
sub
cmpl
in
jge
xor
add
es
leave
push
dec
xadd
aas
sub
lahf
push
xchg
xor
inc
jle
mov
push
and
pop
out
add
jbe
rcr
mov
ja
cli
scas
flds
push
repz
pop
push
adc
cwtl
push
loope
adc
xor
jno
jns
add
pop
push
push
mov
shlb
inc
pop
mov
call
jbe
ret
jo
inc
mov
push
aad
dec
xchg
jbe
adcb
pop
lods
cmp
sbb
rorb
mov
sub
pop
pop
repnz
pop
icebp
test
imul
add
std
negl
addr16
std
nop
add
mov
sarl
adc
dec
or
mov
sub
push
rolw
cmpsb
jns
sub
cwtl
push
xchg
pop
into
or
fdiv
xchg
test
ret
test
sbb
in
ds
or
jmp
mov
out
or
lcall
and
mov
dec
pop
and
inc
inc
iret
sbb
and
mov
sahf
dec
jns
sub
lret
fwait
js
popa
push
jnp
clc
cs
cwtl
icebp
arpl
sub
mov
ror
out
mov
hlt
iret
dec
mov
aad
mov
rclb
jecxz
sbb
lock
je
push
mov
lret
jno
sbb
aas
sub
xchg
push
addr16
and
fs
cmp
int
jo
outsb
mov
sti
bound
ss
push
fsubrl
enter
nop
orb
lods
mov
push
ds
cs
xchg
test
loopne
mov
mov
mov
sub
out
jae
in
xor
repz
dec
outsl
push
mov
idivb
push
inc
mov
mov
out
cli
nop
mul
cmpsb
mov
and
adc
inc
cmp
add
ss
push
imul
das
je
pop
mov
cmc
add
scas
xchg
sbb
push
xor
das
ret
inc
xchg
in
aad
jns
loop
ret
sbb
aas
and
or
ds
fdivs
inc
adc
lea
pop
repnz
lods
mov
xor
sbb
mov
jns
aad
mov
es
cmpsb
ja
addr16
addr16
xor
les
fimuls
sub
dec
or
cmp
mov
lret
fs
mov
or
loope
and
pop
sahf
and
popf
sahf
dec
dec
dec
sbb
addr16
sbb
jmp
fstl
mov
sbbl
lret
xchg
das
out
loopne
imulb
mov
jno
int
inc
andb
int
ret
rorl
mov
dec
cmpsl
mov
and
or
lcall
leave
cmpb
mov
pop
cmp
xor
push
lret
and
je
out
fcmovnbe
nop
jno
orb
stos
ja
pop
shll
jge
sub
call
xchg
and
mov
jl
iret
push
lods
mov
fistps
das
shll
pop
repnz
mov
inc
jns
mov
push
dec
stc
mov
fs
outsl
shlb
push
and
jp
in
pusha
int
ds
or
adc
pop
mov
adc
or
adc
rolb
inc
xor
adc
dec
mov
ja
sbb
add
xchg
adc
bound
sub
cli
enter
mov
fwait
in
mov
js
mov
rorb
mov
and
negb
imul
stc
std
inc
roll
jnp
adcl
pop
push
insb
push
sub
popa
ja
push
mov
leave
mov
inc
leave
icebp
call
pop
test
es
stos
jb
sub
lret
pop
or
adc
pop
test
xchg
data16
cmpsb
pop
mov
sbb
inc
xchg
push
or
sub
dec
xorl
sbb
mov
test
imul
das
cltd
fwait
mov
inc
nop
adc
dec
stc
les
enter
arpl
ret
or
push
ss
in
aaa
pop
outsl
ja
fldcw
xchg
fadds
xor
cmp
xchg
or
testb
std
movsl
ror
icebp
std
stos
fnstsw
lea
jno
jmp
mov
pop
add
push
popa
int3
es
mov
stc
fstpt
jne
xlat
push
xchg
and
pop
add
iret
jl
push
aas
or
iret
cli
lods
rolb
fcoml
or
mov
add
aas
stos
rol
pop
cmpsb
sbb
out
loope
popa
mov
sub
sub
mov
mov
push
adc
push
ljmp
pop
cmp
scas
in
jmp
mov
fbstp
inc
xchg
mov
stos
sub
push
rcr
lret
mov
and
and
sub
movsl
inc
outsl
js
es
imul
jo
push
ljmp
add
cli
fstpt
jnp
push
lds
and
rcrl
das
fwait
cmc
sbb
add
insl
inc
and
lcall
and
push
add
ss
dec
xchg
ja
jecxz
fstps
leave
and
lret
test
mov
xchg
cmpsl
into
repz
in
jns
jae
pushw
or
pushf
addr16
in
mov
sub
lret
sbb
push
frstor
cmp
mov
in
xchg
movsl
cmp
enter
popf
adc
sbb
insl
mov
jbe
ret
mov
out
add
stos
mov
sbb
sbb
cwtl
sti
pop
jmp
jecxz
in
and
ja
inc
dec
mov
mov
or
jo
addl
popf
insb
xor
sub
sub
das
out
dec
fs
ja
mov
xchg
dec
mov
and
xor
sarl
leave
out
icebp
xor
and
pusha
xchg
pop
loope
aam
pop
cmpsb
inc
ss
addr16
adc
inc
ficoms
ja
loope
pop
fdivl
adc
lea
rcll
push
xor
rorb
jle
mov
and
scas
shlb
rolb
dec
scas
pop
adc
imul
inc
std
jne
ficompl
lods
aaa
cmp
mov
mov
emms
js
in
out
pop
cli
dec
stc
es
inc
hlt
jg
push
dec
jge
adc
jl
ficomps
js
shrl
mov
mov
out
shl
roll
pop
shlb
popa
icebp
sbb
popa
ret
dec
mov
mov
fstpt
xlat
sbbb
aad
ds
sub
mov
std
inc
in
pop
imul
mov
inc
jno
or
pop
enter
dec
cmp
inc
aad
jmp
sti
call
icebp
jmp
ret
inc
movsl
adc
mov
inc
aam
das
out
je
out
gs
loope
mov
test
sub
mov
fwait
mov
and
mov
cmp
lds
pop
shr
jnp
cmc
or
ja
jecxz
inc
sbb
sbb
popa
lds
sbb
mov
outsl
pop
mov
sahf
adc
les
jno
adc
repnz
cwtl
stos
mov
repz
jp
arpl
sbb
dec
fisubl
mov
in
sub
outsb
fs
adc
pop
mov
loopne
ljmp
sahf
pop
je
xor
sarb
sbb
mov
inc
ja
ss
in
mov
jle
testb
fstpl
push
sbb
xor
and
insb
pop
xor
leave
outsb
and
push
cmp
arpl
and
ret
dec
aas
and
aam
cmc
aad
loop
mov
aaa
pop
dec
sti
addr16
mov
test
push
adc
lret
pusha
dec
out
cs
jl
popf
sbb
lds
aam
rolb
mul
pop
adc
mov
setno
lock
xchg
clc
adc
out
insb
gs
in
out
ja
push
sbb
mov
cmp
mov
mov
cmp
das
arpl
push
loopne
scas
in
pop
sub
daa
cwtl
xchg
mov
mov
mov
cmp
push
pop
mov
mov
sbb
cmpsl
js
dec
adc
js
xchg
jmp
jp
lds
cld
fistl
push
xor
call
jmp
jne
out
mov
or
push
or
pop
push
test
xor
testl
scas
fadds
push
arpl
dec
dec
in
xchg
add
and
scas
lahf
and
cmpsb
xor
xchg
fwait
dec
inc
xorb
dec
adc
mov
or
fdivrs
dec
aam
fstpt
cltd
scas
stos
pop
pop
adc
das
push
cltd
stos
iret
sbb
out
adc
jb
pushf
imull
push
ret
jb
fstl
adc
sub
mov
mov
pushf
jmp
pop
leave
adc
push
loop
add
rorb
adc
clc
outsb
push
jmp
pushf
ja
adc
mov
test
adc
and
pop
lret
cld
mov
test
dec
cwtl
sti
sub
out
xlat
into
pop
inc
insb
movsl
in
sbb
lds
rorl
loopne
mov
jo
and
icebp
scas
sbb
jns
clc
cmpsl
cmpsb
add
les
sub
test
shll
divb
mov
mov
orb
ret
popf
dec
mov
fdivs
inc
push
iret
mov
sti
jle
sbb
mov
lods
sub
int
sub
gs
js
jo
mov
jmp
outsl
ljmp
ss
out
mov
std
lock
loop
push
push
movsb
push
mov
ss
leave
cmpsb
scas
movsl
and
and
cltd
mov
push
cltd
sbb
outsl
xchg
dec
adc
jne
repnz
xor
lods
adcb
cmc
cmpsb
in
mov
lret
sar
aam
mov
addl
cmp
out
call
mov
insb
mov
out
push
add
loop
xor
lods
jns
repz
cs
cmp
pop
dec
mov
sbb
dec
fwait
bsr
lret
cmpsb
sbb
add
mov
adc
pop
inc
shll
jl
inc
testb
mov
adc
mov
movl
mov
repnz
mov
dec
jle
push
jle
outsl
xor
js
cs
cmp
addb
inc
iret
test
xchg
pushf
fists
stc
xor
scas
xor
xor
and
dec
cmp
cwtl
aaa
mov
cmp
movsb
test
jns
xchg
cmp
test
jnp
push
and
mov
inc
call
ljmp
push
push
dec
pop
pop
movsb
pop
hlt
push
pusha
dec
icebp
popa
jbe
outsl
and
inc
outsl
insl
in
mov
and
loop
roll
xor
cmp
test
ret
pop
sub
repnz
inc
scas
mov
in
xchg
cmc
or
imul
mov
or
mov
je
aam
shr
mov
ss
or
stos
dec
dec
jne
adc
mov
sbb
scas
popa
add
mov
mov
push
mov
js
in
in
inc
push
mov
packsswb
pop
mov
or
dec
mov
stc
jl
arpl
in
cmp
pop
sbb
push
orb
popf
xchg
add
and
pop
test
outsl
add
mov
je
pop
cmp
int
adc
shl
add
arpl
inc
lahf
fsubrl
pop
pop
aam
aad
push
fadds
mov
and
in
repnz
arpl
dec
ret
les
mov
cmp
pxor
cltd
pop
insb
push
dec
pusha
dec
pop
and
pop
std
jo
rcrl
add
and
or
mov
popa
cltd
mov
sbb
cs
pusha
je
mov
and
cs
jb
push
fsub
cmpsb
lret
and
andb
jno
data16
test
dec
cltd
mov
imul
sbb
unpcklps
adc
testb
and
sub
add
outsb
xchg
mov
lods
ret
sub
and
in
nop
sbb
jg
iret
or
push
jmp
int
mov
cmpsl
inc
mov
cmp
aaa
mov
xchg
imul
mov
jecxz
loope
pop
xchg
and
rcrb
jbe
aam
fstpt
out
mov
test
pop
mov
test
sub
and
out
mov
pop
jo
adc
call
sar
test
xlat
neg
sbb
shll
xor
mov
mov
roll
sahf
in
xlat
or
mov
push
and
inc
xor
or
shl
sub
push
sbb
fsubrp
lret
dec
sub
imul
int
push
mov
rorl
mov
push
fstps
sbb
jno
and
cs
cmp
call
dec
mov
clc
and
pop
aad
pop
jmp
pop
cmp
bound
pop
shrl
cmp
movsl
jg
and
dec
jge
les
and
loope
add
fldl2e
cmpsl
outsl
jno
mov
mov
cld
shlb
dec
mov
cmp
loop,pn
and
mov
leave
push
fcoms
mov
cld
test
mov
inc
add
js
jge
dec
shlb
dec
and
stos
cmp
fimuls
dec
push
mov
orl
dec
ret
imul
movsb
mov
and
and
in
adc
out
mov
cmp
mov
adc
leave
lret
sub
popa
or
mov
add
jp
call
adc
testl
lret
les
lods
or
sar
test
mov
fcom
jnp
mov
and
loop
lret
xlat
jmp
stos
stos
inc
sub
and
cltd
dec
and
jecxz
sti
repz
or
ficoms
dec
fidivrs
inc
out
and
out
sub
mov
cltd
mov
dec
std
mov
sub
xor
cmp
test
pop
mov
outsl
jbe
xchg
push
cs
mov
or
sti
fmuls
xchg
cli
out
iret
test
push
jge
aad
fcmovnb
daa
pop
add
bound
mov
sar
push
dec
xor
push
data16
scas
jle
inc
int
xor
enter
xor
cmc
xchg
mov
xchg
push
into
jnp
gs
notl
adc
inc
or
mov
pusha
les
ja
inc
add
rcl
xor
jecxz
pushf
jecxz
pop
movsb
cld
icebp
mov
sub
xor
out
cmp
stos
inc
fistpl
add
xor
subb
sub
or
push
mov
es
scas
test
daa
mov
shrb
mov
inc
sbb
inc
clc
lret
aas
rcll
adc
cmpsb
in
cli
aad
sbb
inc
adc
sbb
inc
pop
push
add
aam
clc
lret
dec
adc
adc
xchg
or
test
push
gs
mov
lret
mov
inc
outsb
add
mov
jns
sarl
sbb
jo
into
xor
ret
fildll
add
sbb
add
shll
lahf
js
daa
aaa
xor
dec
push
dec
repnz
repnz
sbb
push
addb
inc
sub
dec
scas
mov
aam
test
xchg
rcrb
leave
les
push
test
roll
or
js
test
sahf
mov
mov
cmp
imul
xor
add
mov
mov
lds
mov
popf
add
pushf
or
jnp
test
pop
into
aad
in
xchg
add
jl
dec
sub
and
in
mul
lahf
jno
mov
add
roll
sub
jl
xor
es
dec
aaa
cmpsb
sbb
jnp
jb
into
cmp
clc
and
mov
dec
popf
xchg
xor
xor
push
ss
cltd
jne
xchg
mov
ss
sahf
mov
sub
adc
out
mov
cmp
and
je
fwait
mov
out
sbb
inc
outsl
dec
aad
lds
lock
jle
sub
dec
ffreep
add
lock
pop
push
add
push
icebp
aam
or
mov
and
lods
jne
mov
cmp
add
inc
repz
xor
aam
xchg
loopne
jmp
in
cltd
jmp
sbb
cmp
add
adc
and
and
lods
test
mov
dec
adcl
sub
xor
xchg
sub
push
dec
mov
daa
stos
push
andb
mov
fdivrs
inc
xchg
cwtl
sbb
das
shlb
pusha
scas
cltd
xor
add
inc
lods
sub
and
dec
lock
gs
pop
outsb
aaa
xor
push
dec
jbe
xchg
mov
xchg
mov
sub
xchg
pop
movsb
xor
xchg
out
cmp
ror
mov
movsb
outsl
cwtl
ret
shlb
jb
mov
adc
adc
addb
std
add
jns
cltd
data16
cld
andl
mov
cmp
pop
and
mov
insb
cwtl
daa
inc
inc
cmp
inc
addr16
mov
movsb
nop
or
inc
pop
cwtl
jle
nop
cmp
add
push
jp
popf
or
imul
add
inc
mov
mov
cs
lods
in
cmpsb
clc
icebp
icebp
enter
sbb
jae
jne
adc
jle
cmp
outsl
pop
push
or
lods
cli
test
fbld
jg
test
push
sub
faddp
lock
or
xor
out
mov
mov
mov
ja
shlb
jns
sti
or
incb
xlat
cmp
mov
sub
jp
cmpl
repz
faddl
in
mov
icebp
popf
ret
leave
xchg
cs
ss
jnp
stc
push
cmp
clc
push
iret
fprem1
sbb
subl
scas
lock
jp
jle
cmp
sarb
sbb
mov
jge
es
cs
and
lods
int
mov
sarl
xor
push
ja,pn
leave
jnp
mov
aaa
movb
outsl
mov
pop
jge
in
dec
sub
jae
fcmovnbe
scas
mov
add
test
jg
push
mov
push
inc
test
mov
add
test
js
jbe
nop
ljmp
dec
mov
fidivrl
cs
inc
xor
jbe
jno
mov
or
or
mov
in
fsubl
push
stos
xchg
jb
popa
fmuls
or
incb
mov
add
push
out
repz
dec
mov
inc
arpl
fwait
clc
leave
push
pop
out
ljmp
pop
nop
loope
or
sub
mov
lock
and
nop
ljmp
popf
lahf
out
mov
adc
add
sbb
inc
xor
sbb
mov
mov
sti
xchg
sbbl
leave
sbb
test
test
repz
scas
cmc
jb
fadd
push
test
icebp
push
sbb
xlat
pop
mov
movsb
xor
mov
or
pop
rorb
lock
in
ss
xor
pusha
popf
xlat
into
inc
out
dec
sbb
cmp
les
stos
arpl
xchg
das
push
test
movsl
push
into
jbe
mov
cli
jg,pt
insb
dec
loope
or
pusha
xlat
xchg
pop
and
mov
jae
pop
jbe
sub
xor
xor
cmp
cmp
and
out
adc
call
call
push
nop
jg
push
jge
mov
or
je
ss
push
sbb
mov
mov
fs
mov
ret
mov
sub
mov
sub
rdmsr
call
out
add
xchg
cwtl
das
mov
xchg
xor
fldenv
jmp
cmp
lcall
pop
pop
sub
iret
push
cmp
add
nop
xor
inc
xchg
mov
or
xlat
xor
inc
fidivs
inc
lds
mov
mov
repnz
movsb
xor
jge
fidivrs
dec
test
mov
mov
fdivl
inc
lds
insb
push
repz
icebp
enter
cmp
sub
sbb
mov
aad
mov
or
loopw
movsl
xlat
push
push
mov
imul
out
cwtl
lret
icebp
push
rcll
pop
mov
lods
cmp
cmp
inc
dec
mov
std
aas
cmpsb
xchg
dec
cmp
into
in
pop
jmp
enter
mov
rorb
out
daa
pop
sbb
inc
sar
mov
ret
ja
cmp
fdiv
popf
sub
mov
scas
jns
sbb
je
jmp
popa
pop
ds
adc
dec
add
push
inc
inc
gs
push
pusha
sahf
loop
pop
std
arpl
adc
bound
in
sbb
shrb
xchg
jp
aaa
int3
pop
test
xor
lods
in
ljmp
sbb
xchg
fisubl
push
mov
dec
movsb
mov
scas
in
pop
int3
sbb
sub
fwait
inc
and
test
adc
mov
inc
add
mov
pop
ljmp
shll
pusha
xchg
sbb
popa
js
jb
jbe
adc
std
loope
adc
sbb
jp
ljmp
jb
xchg
fwait
sar
popf
shrb
mov
stos
mov
outsb
dec
add
mov
add
fdivl
fidivrl
or
rcl
in
loop
mov
mov
notb
aam
jmp
sub
push
cmp
hlt
mov
sbb
sbb
aaa
sbb
sbb
leave
cmp
ljmp
in
test
insl
dec
cmp
cmp
jbe
add
jp
dec
std
jns
imul
jae
enter
add
xchg
jo
mov
lea
push
lret
pop
or
or
push
gs
loop
xchg
push
and
pop
cld
cmp
mov
imul
cmc
sbb
clc
lds
add
mov
ds
les
fld
fimull
xchg
jg
dec
fisttpll
gs
daa
lret
lods
sub
dec
dec
sbb
lods
outsl
jno
fdivl
stos
jle
dec
push
into
outsl
inc
cmp
add
xor
aas
dec
pop
cwtl
mov
sbb
ficoms
or
arpl
ss
push
jle
nop
ds
into
adc
int
daa
int
jbe
adc
sub
subb
dec
inc
xor
fadds
fisttps
cmpsl
mov
lock
add
adc
out
ret
xor
outsb
xor
negl
aas
mov
pop
pop
pop
jl
std
xlat
mov
sub
sub
sub
mov
out
mov
or
mov
aam
sbb
cmp
movsb
sbb
mov
and
rcrl
inc
imul
sti
test
popa
fcompl
iret
lret
lods
enter
mov
mov
sbb
mov
jge
adc
ret
std
out
xchg
fcompl
xor
sub
push
jg
int
cmpsl
andl
lods
ficoms
sbb
je
xor
mov
ljmp
sub
dec
cmp
lret
arpl
push
add
xor
jl
mov
or
or
insb
insl
lret
fcmovb
mov
push
jne
xchg
push
es
lds
test
push
mov
inc
or
rorl
sbb
pop
mov
jno
sbb
cmc
pop
push
stc
call
sub
dec
push
imul
rclb
mov
push
jnp
leave
cwtl
ret
daa
pop
xor
adc
mov
and
out
lahf
mov
ja
bound
mov
test
or
pop
dec
jb
fisubrl
lods
aam
std
bswap
mov
xchg
lea
sub
aas
sahf
mov
fstpt
subb
push
or
adc
gs
xchg
push
add
xor
mov
daa
mov
add
jl
xchg
rorb
or
lahf
hlt
adc
mov
mov
xchg
andb
test
mov
xchg
xchg
outsb
inc
xor
push
loope
enter
sbb
mov
jle
aas
add
rdtsc
hlt
outsl
pop
pop
int3
mov
mov
inc
pop
sub
mov
dec
push
pop
mov
add
jle
fmul
xor
lcall
sub
sarl
pop
xchg
aam
repz
dec
rcrb
sub
inc
mov
in
cwtl
std
jno
cmpl
xor
call
lret
mov
aad
rorb
xor
lods
and
stos
xchg
or
mov
cmp
outsl
push
inc
sub
out
mov
mov
mov
pop
dec
mov
cmc
in
pop
mov
stos
pop
adc
subb
and
sub
repnz
pop
or
enter
jne
inc
push
adc
addl
test
xchg
sbb
les
mov
mov
push
ret
xor
xchg
sub
test
jae
idivl
int3
push
mov
in
lods
in
jecxz
xchg
pushf
dec
inc
fstl
jmp
or
sbb
sti
clc
xchg
ret
das
stos
inc
fmul
cmp
inc
imul
or
pop
or
repz
xchg
mov
int
and
pop
in
je
jp
fimull
dec
xlat
mov
add
mov
hlt
in
push
adc
daa
mov
add
insl
lret
pop
add
lret
push
push
pop
push
imul
scas
pop
jb
cmc
jecxz
pop
dec
jb
je
dec
mov
hlt
add
mov
out
pushf
push
adc
xchg
xchg
cmp
jns
or
inc
adc
xchg
sub
or
shl
or
xchg
xor
mov
rcrl
into
fsubrl
in
and
push
out
sub
adc
mov
sub
shrb
out
xchg
scas
adc
mov
pop
int
aad
rcrl
aas
inc
repz
mov
adc
mov
cwtl
xlat
cltd
xor
dec
adc
mov
dec
or
ss
not
adc
cmp
hlt
inc
pop
dec
or
icebp
fcomps
xchg
push
adc
or
lret
fistps
mov
cmp
sub
cmc
das
ss
daa
dec
jno
jle
loope
fs
inc
out
sub
xor
ret
shlb
adc
iret
mov
cmpsb
xchg
and
mov
test
lret
stos
out
sbb
das
shll
lret
adc
out
cmp
adc
inc
xchg
lods
out
jae
push
push
shrl
inc
aam
fwait
push
in
pushf
mov
fbstp
or
inc
mov
lcall
aas
in
fdivr
mov
aas
movsl
lds
xor
inc
push
loope
pop
mov
push
frstor
sarb
jno
sbb
sti
scas
jle,pn
push
mov
add
lret
ja
fwait
xor
test
bswap
shl
sub
ret
cltd
sahf
and
clc
add
bound
sbb
or
mov
add
roll
sbb
xor
push
xchg
fistpll
nop
push
jo
fwait
mov
leavew
xor
and
mov
sbb
cltd
pop
jo
or
je
outsl
dec
push
aad
fidivl
ja
test
jge
pop
shrl
nop
jno
push
mov
je
pop
icebp
or
pusha
je
lcall
das
aad
inc
lcall
xorb
or
add
mov
xor
imul
out
mov
sbbl
mov
xchg
jge
out
andl
or
icebp
aaa
inc
dec
stos
push
out
pop
mov
hlt
jle
add
pop
add
dec
sti
dec
mov
cmpsb
cmpsb
cli
pop
rclb
movsb
outsb
ja
mov
mov
hlt
cmp
pop
test
gs
rcrb
lea
sub
fiaddl
sub
xchg
pop
xor
inc
push
xor
aaa
dec
jecxz
add
sbb
mov
mov
fwait
pushl
add
jb
sti
mov
push
int3
add
mov
push
sbb
dec
out
les
cmpsb
mov
sub
jecxz
rcrb
gs
sub
in
and
inc
aad
push
mov
lret
je
add
xchg
cmpsl
inc
stos
cld
add
push
pop
jmp
mov
shr
add
push
shlb
cmp
jae
sub
mov
sbb
cmc
icebp
daa
popf
dec
sbb
sbb
cmp
mov
outsl
xchg
orl
lahf
nop
add
dec
jno
pop
mov
sub
cmp
inc
mov
pop
mov
sbb
mov
xchg
xchg
bound
sbb
aam
lock
cmovb
push
jl
and
sbb
in
xchg
cmp
sub
adc
mov
icebp
shrl
lcall
dec
push
inc
push
insl
dec
imull
out
in
rclb
aad
in
xchg
push
movsb
xchg
mov
xchg
inc
cmp
ret
push
add
sti
je
mov
mov
dec
adc
and
mov
xor
fildl
push
sbb
je
ret
repnz
jecxz
sbb
mov
pop
and
cmpsl
inc
xor
xlat
xchg
mov
out
aas
dec
into
sbbl
cmp
inc
cmp
sub
pushf
addr16
dec
ret
mov
mov
cmpsb
mov
xor
inc
movsl
mov
iret
dec
mov
orb
pop
xor
scas
popf
mov
in
dec
notb
es
ja
loopne
xchg
cmp
gs
leave
data16
mov
jecxz
lret
add
mov
lods
sarb
pop
cs
ret
icebp
ljmp
ret
outsl
pop
and
pop
imul
pop
je
insl
xor
xor
push
xlat
or
sarb
js
stos
jno
cmpsl
mov
cmp
cmp
imul
leave
xor
adc
jmp
les
std
cs
fbstp
push
in
out
je
pop
sbb
xchg
popf
push
adc
nop
fadds
adc
sub
jbe
lcall
xchg
aam
xchg
clc
cmp
xchg
sbb
sti
jmp
fists
xor
cmp
jae
push
std
leave
and
adc
fdivr
or
imull
sub
frstor
stc
jle
inc
add
shrl
sbb
sbb
lds
out
ss
js
add
sti
jg
mov
adc
repnz
dec
into
sub
dec
gs
mov
enter
xor
xor
neg
divl
push
clc
icebp
adc
jg
popa
mov
int
sbb
int
bnd
loopne
mov
mov
dec
fimull
sub
ljmp
mov
jg
mov
mov
dec
or
and
out
xchg
scas
adc
cmpsb
add
fstpl
cmp
sbb
mov
in
mov
adcl
ret
jmp
xchg
sbb
cltd
pop
loopne
inc
popf
int
xor
rclb
in
cmp
xchg
push
data16
cmp
mov
sub
xchg
dec
adc
arpl
cli
pop
inc
stos
dec
and
mov
cmp
jle
lret
push
or
sbb
mov
add
in
fldl
and
ja
mov
insb
aad
sbb
lret
mov
and
lahf
lods
cmp
push
sbb
adc
xchg
test
lods
stc
daa
or
push
jns
cmp
jmp
xchg
bnd
cmp
fildll
sub
or
inc
fisubrl
or
and
shr
mov
lcall
not
or
lret
mov
dec
ljmp
nop
lock
xor
push
loope
fcomps
push
dec
pop
lods
adc
pop
jp
xchg
inc
shr
xor
mov
dec
out
mov
xchg
push
std
aam
xchg
push
inc
mov
nop
std
cmp
jmp
adc
and
fidivs
sbbb
dec
pushf
test
push
pop
les
in
pop
clc
testb
sbbl
xor
leave
rcll
jno
in
out
addr16
pop
mov
or
adc
mov
pop
pop
fmuls
push
mov
or
push
cmp
jbe
or
fsubrs
scas
add
jge
xchg
stc
push
mov
clc
xlat
stos
ret
mov
pop
jle
orb
push
cmp
mov
mov
in
repnz
cmpsl
shr
scas
add
cmpsb
jbe
cld
loope
dec
ret
mov
cwtl
cmc
jmp
and
or
movl
insl
adc
mov
jo
inc
sub
sub
jmp
sub
xlat
inc
cmpsl
lahf
jl
call
in
stc
adc
ss
dec
sbb
push
mov
int
gs
mov
sub
lcall
out
and
mov
inc
xor
jge
clc
ds
shrl
aaa
push
cltd
add
mov
notl
imul
cmp
testl
data16
adc
mov
pop
pop
mov
andl
iret
dec
cmpb
lret
sub
add
jp
movsb
sbb
add
jne
adc
in
les
inc
xor
xchg
sub
lcall
test
jecxz
xchg
jb
cli
data16
inc
stos
xor
and
testl
int3
stc
scas
ret
jmp
or
outsl
adc
pop
or
add
stc
rorl
jp
push
mov
xchg
iret
andb
rcrb
push
cmp
loope
loopne
adc
cmc
xchg
xor
cmp
sahf
in
pop
inc
dec
adc
mov
xchg
int3
jl
dec
daa
loope
in
and
out
nop
push
cmp
push
in
adc
xchg
orl
stc
aad
repz
cli
jecxz
into
or
mov
cs
mov
jle
movsl
inc
jl
and
mov
sbbb
femms
push
inc
mov
out
mov
or
mov
jnp
aas
jb
inc
sbb
das
and
cmpsb
inc
or
dec
jno
ljmp
add
repnz
test
daa
int
jmp
ja
sub
imull
fdivrs
fwait
or
shll
enter
push
cmp
lds
call
aas
xchg
insl
dec
fsubrl
test
sbb
int3
jns
mov
icebp
or
fstpl
dec
lahf
xor
sbb
sub
and
sbb
inc
into
mov
negb
stos
mov
add
andl
xlat
stos
aad
stos
les
outsl
fnstsw
fisubs
jmp
cltd
mov
int
ja
out
rclb
sbb
fs
rorb
hlt
add
push
insb
push
icebp
push
lcall
adc
dec
outsb
jb
sub
lret
pop
sarl
mov
or
lods
insl
mov
lea
ficomps
mov
test
add
jl
hlt
fsubl
shrl
add
popa
mov
aad
xchg
adc
pop
rcrb
adc
cmp
jl
out
and
shlb
xchg
or
cmc
es
push
fwait
xor
bound
inc
sarb
cmp
cmpsb
repnz
xchg
cmpsl
mov
pop
mov
inc
add
rorb
mov
jns
lds
inc
cmc
fiadds
cmpsb
jne
and
out
xchg
fisubrl
cmp
xor
jmp
cmpsb
and
mov
rol
out
rcll
pushf
leave
das
lock
fisttpll
cwtl
or
push
and
mov
mov
sub
shll
mov
lock
push
cld
ja
jnp
aaa
pushl
lea
sub
sbb
bound
repnz
out
in
into
dec
mov
outsl
add
sub
or
pusha
data16
mov
rcll
loope
mov
nop
daa
xchg
popl
stos
and
cmp
xor
mov
movsb
and
cltd
pop
jnp
mov
and
cmp
arpl
mov
fcoms
ret
add
sbbb
in
jp
or
or
jmp
mov
mov
mov
add
icebp
cmp
js
mov
subl
push
mov
xor
out
dec
movsb
incl
or
jp
xchg
faddl
inc
xchg
and
and
dec
mull
mov
pushf
test
jae
shll
mov
push
mov
out
xlat
loop
test
mov
add
jb
xchg
lods
adc
xor
iret
mov
sbb
fwait
test
in
and
repnz
or
add
daa
dec
fsubrs
adc
ss
mov
lret
stc
push
push
sub
jle
fidivl
aaa
sub
loope
mov
mov
and
pop
fxch
enter
jbe
inc
adc
push
test
dec
paddb
push
cmp
cmp
mov
std
mov
sti
cmpsb
sbb
dec
paddb
add
sbb
mov
outsb
scas
lcall
mov
mov
subb
fsubrp
lcall
outsl
jg
dec
push
into
movsl
xor
cmp
lock
pop
mov
rcr
out
call
movsl
hlt
mov
aam
jbe
push
add
test
mov
test
add
cmp
into
dec
mov
insb
loopne
stos
and
xchg
xor
xor
jecxz
adc
push
mov
mov
and
inc
jbe
into
into
sub
lcall
clc
fdivrs
stc
mov
push
movaps
dec
mov
push
mov
mov
cwtl
test
adc
jecxz
sub
jge
or
subb
js
cmp
cmp
scas
mov
aam
pop
fwait
sbb
jns
fsts
shlb
stos
pop
cs
data16
mov
mov
pop
pop
mov
sbb
dec
insl
fwait
test
pop
sub
sbb
xor
jo
mov
leave
inc
pop
in
movsl
lcall
loop
mov
jns
test
fcoms
jo
out
mov
arpl
inc
xor
das
test
std
movsb
lea
ljmp
icebp
shrb
jp
cmpsb
pop
repz
loop
push
rcll
or
lods
xchg
gs
mov
xor
addl
push
mov
rclb
mov
sub
sbb
inc
out
mov
pop
ret
or
adc
xchg
push
stos
pop
inc
xchg
negb
outsl
ds
orl
daa
cmp
sub
jle
jnp
into
cmpsb
bound
xchg
jle
xor
pop
shl
cmc
mov
sub
sahf
xor
pop
ret
xchg
nop
or
xor
inc
push
xor
lret
push
incb
mov
mov
push
mov
iret
inc
fstpl
shll
xor
sub
icebp
add
mov
mov
and
push
xor
xor
dec
jl
inc
jne
fs
sbb
in
jge
ds
imul
pop
or
cmp
sbb
sbb
loopne
roll
mov
xchg
pop
jmp
push
mov
inc
inc
or
lret
push
in
out
es
mov
mov
add
mov
aas
dec
ljmp
enter
and
incb
xor
fistl
aas
xorb
insl
fbstp
stc
out
push
mov
rorl
adc
ret
ljmp
test
pushf
or
mov
ss
fsubr
xchg
aam
repz
ja
cmc
push
xlat
mov
ds
bound
xchg
xchg
sbb
aas
imul
add
hlt
push
in
mov
divb
sub
ds
dec
mov
cmp
in
dec
imul
jbe
js
mov
frstor
es
or
xchg
sbb
rol
sub
or
and
mov
shll
mov
sbb
pop
xor
orl
push
adc
in
mov
adc
xchg
adc
add
cmpsl
add
mov
data16
icebp
adc
int3
in
sub
jmp
clc
daa
das
cmp
ljmp
mov
push
mov
aam
lock
dec
leave
push
xor
push
sub
jns
and
lds
mov
adc
icebp
xchg
cmc
mov
stc
insl
cli
or
fsubs
adc
mov
pop
push
inc
imul
rcrl
xor
movsb
int
ficoml
pop
fldenv
and
cmp
pushf
mov
fwait
clc
add
js
dec
bound
lret
enter
inc
fst
or
jecxz
in
push
fiadds
mov
cmpsb
imul
mov
sbb
or
cld
xchg
push
xor
or
or
jg
sbb
cmpsl
mov
pop
push
or
pop
pop
xlat
sbb
jbe
cli
pushf
xor
jno
cmp
xor
push
mov
inc
je
aad
pop
mov
out
mov
pushf
push
push
mov
ljmp
xchg
fs
js
mov
adc
in
inc
jns
jnp
ja
pop
pop
xor
lret
sbb
cmp
cld
xchg
hlt
int3
add
mov
xchg
mov
xchg
inc
enter
lea
aaa
lret
push
push
int3
aam
daa
in
sub
mov
sub
cwtl
fs
fstpl
xchg
mov
je
xor
mov
add
mov
jecxz
data16
idiv
cs
mov
mov
hlt
testl
clc
dec
jb
and
jp
sbb
cltd
add
xlat
inc
sbb
lcall
outsb
mov
fwait
xchg
add
test
nop
mov
xchg
imull
mov
stos
popf
cmp
adc
out
cmp
sbb
mov
pushf
mov
add
add
or
loop
call
xchg
mov
mov
add
mov
and
cld
xchg
outsb
xchg
lcall
inc
and
jo
adc
pop
add
jle
into
bound
sub
ljmp
jmp
aaa
aad
pxor
inc
mov
and
pop
pushf
pop
xchg
divb
out
pop
out
xor
insb
daa
dec
icebp
xor
pop
out
and
call
rcrl
movsl
out
test
lock
dec
xor
andb
data16
push
adc
sbb
inc
pop
cs
push
cltd
pop
pop
fstps
sarb
push
adc
jnp
sbb
and
adc
sbb
imul
and
mov
mov
jbe
in
xchg
test
fdivrl
scas
stos
lcall
cli
mov
xchg
cmp
sub
inc
adc
outsl
popa
dec
lahf
jb
gs
pop
ret
push
mov
add
xlat
mov
cmp
pop
mov
jnp
out
xor
add
sbb
inc
xchg
sbb
inc
and
xchg
mov
and
lahf
mov
and
out
fisubrl
mov
pushf
mov
jecxz
dec
iret
mov
psrlw
gs
repz
cmp
or
insl
xchg
mov
or
push
adc
pop
or
scas
jnp
mov
in
aaa
in
push
sti
test
loope
and
sti
enter
setge
jp
addr16
negb
xchg
sub
or
and
cmp
sub
cmc
fs
movsl
popa
push
xor
movsl
cmp
dec
mov
xlat
jns
fimull
xor
insb
cmpsl
xor
pop
and
mov
push
in
fldl
inc
xchg
dec
je
aam
mov
sub
sub
xchg
bound
xchg
cmc
cmc
push
and
or
cld
outsl
insl
nop
sahf
jae
testb
das
je
and
stos
mov
movl
popf
inc
cltd
jle
lods
pop
out
jge
js
add
and
data16
dec
in
aas
push
aad
xchg
jmp
push
pop
sbb
mov
pop
shrb
inc
bound
fistps
fldt
jo
jno
sarl
test
adc
jae
popl
cmc
xchg
cld
mov
push
jp
loop
pushf
push
sub
xchg
sti
rcll
pusha
popf
mov
jecxz
jbe
mov
xor
dec
ret
cli
lret
xor
push
xchg
mov
jne
pop
push
cmp
sarb
aas
into
outsl
sarb
mov
push
sbb
jno
fdivrp
pop
or
je
fisubrs
stos
mov
subl
mov
fisttpll
sub
xchg
jne
mov
inc
inc
mov
push
jge
dec
insl
mov
push
push
repnz
sub
lahf
pop
shlb
push
adc
daa
shl
imul
push
leave
das
popa
ljmp
mull
cltd
sub
dec
sub
xor
add
xchg
shlb
shlb
or
pusha
inc
test
mov
mov
daa
dec
add
mov
and
jg
push
repnz
test
xchg
dec
andb
xor
jmp
cmpsb
in
sbb
mov
add
xchg
das
dec
aam
inc
add
aaa
add
adc
scas
mov
pop
cmpsl
inc
push
xchg
pop
mov
jnp
sbb
dec
decl
lock
mov
shlb
or
dec
leavew
or
jb
in
jo
clc
inc
push
call
adc
test
pop
repnz
mov
dec
das
dec
xorb
int3
push
stc
in
and
sbb
daa
and
or
pop
mov
xlat
pop
ret
lods
inc
cmpsb
cmp
cmp
cmp
movsl
pop
jnp
fildl
cmc
push
push
fidivs
inc
jae
hlt
sti
xor
loop
add
adc
mov
mov
adc
jns
js
imul
mov
push
adc
or
jns
jmp
fidivrs
fdivrs
decb
aad
fs
push
jge
sarl
sbb
cli
sub
sbb
fucom
or
aam
loope
rcrb
inc
pop
imul
push
xchg
push
sahf
jp
decl
sub
repnz
inc
mov
fisttpl
in
ja
cmp
pop
iret
test
xchg
xor
in
mov
sub
mov
adc
cmp
mov
push
jno
cmpsb
sbb
fs
push
fwait
into
mov
popa
scas
and
sub
sbb
jnp
add
push
lret
xor
cmp
lds
push
xchg
ds
sahf
negl
out
dec
xor
jae
push
test
mov
es
call
enter
fimuls
je
push
adc
inc
add
and
fsts
rcl
mov
mov
fnstenv
mov
cmp
data16
es
pop
repnz
mov
and
xor
adc
xlat
ficomps
push
pop
jno
push
mov
cltd
cmp
or
mov
iret
bound
int
sbb
arpl
shrl
push
dec
mov
bound
iret
scas
aam
outsl
subl
popf
xchg
cld
in
in
cmp
jmp
and
mul
push
fdivs
adc
pop
xchg
push
push
je
push
movsl
or
mov
xchg
mov
ss
in
fs
mov
sbb
xchg
movsb
mov
mov
sub
repz
cmp
sub
leave
jecxz
or
dec
sub
inc
pop
lcall
cmp
sbb
push
mov
jo
cmpl
lea
imul
fsubrs
xchg
and
adc
in
lds
jecxz
dec
xlat
or
xchg
into
xchg
push
rorb
jge
sub
mov
push
stos
jl,pt
mov
ja
jle
dec
test
mov
fs
mov
dec
push
or
jle
cltd
dec
sbb
stos
dec
imul
cmpb
mov
in
ret
jne
mov
stc
movsb
jae
nop
push
movsl
xchg
fwait
push
in
sbb
fld
inc
int
aad
loope
lret
mov
and
aad
push
lret
cmp
xor
add
and
insb
mov
leave
test
sub
stos
fdivrs
jns
xchg
jbe
in
andl
jb
bnd
out
enter
in
pop
dec
outsl
inc
sbb
cmp
add
sub
insb
mov
and
mov
js
and
in
inc
rorl
jg
popa
cmpsb
xchg
dec
mov
and
fistl
iret
je
repz
outsl
push
repz
inc
xor
decb
mov
ret
pop
mov
fcomps
shlb
outsl
lret
nop
xchg
inc
out
xchg
inc
jmp
lock
test
and
test
scas
and
pop
mov
push
inc
pop
jbe
mov
push
xchg
cwtl
loop
pop
xchg
cwtl
add
mov
sub
push
mov
fwait
pop
arpl
push
subl
rcl
out
xchg
mov
xchg
mov
lock
les
idivb
xchg
imul
sub
popf
cmpsb
mov
out
lcall
mov
mov
loope
ljmp
sub
repz
ret
pop
scas
ds
pop
loop
dec
jmp
popf
fidivs
jno
loop
jmp
push
jecxz
mov
fists
sahf
mov
mov
inc
stos
push
mov
mov
xchg
aaa
ljmp
ror
scas
pop
add
xor
movsb
xchg
mov
xor
outsb
ficompl
shlb
push
pop
ficomps
mov
sbb
repz
fcompl
xor
cmp
fmull
push
mov
out
push
arpl
jecxz
xor
lea
xor
or
test
inc
cmp
mov
cli
aaa
insb
in
scas
jo
mov
xchg
in
or
into
in
in
or
cmp
std
test
or
xchg
push
lret
in
dec
insb
stos
movsb
pop
or
dec
cmpsl
xchg
lret
sbbl
ret
std
into
add
das
jge
dec
mov
movsl
pop
negb
mov
jp
iret
fnstsw
sub
dec
push
push
outsl
lret
and
cmp
mov
fdivs
in
icebp
cld
out
int3
jp
cmp
in
xor
in
add
test
lret
add
pop
les
push
out
add
jo
pusha
push
adc
ljmp
or
sub
lock
pop
sbbb
add
out
enter
xor
mov
or
cli
mov
inc
pop
outsl
fcom
push
pushf
pop
fildl
sahf
push
cmp
lret
lcall
mov
das
pop
setne
cmp
je
cmp
int3
pop
in
leave
mov
iret
test
mov
jl
and
repnz
and
jae
and
cmpsb
test
add
insl
out
jg
subb
jmp
adc
jl
scas
dec
jle
das
xchg
adcl
cmp
fistps
pop
cmovbe
mov
mov
mov
out
push
aam
hlt
jmp
and
out
mov
adc
jl
mov
hlt
in
and
xchg
repnz
in
push
out
shr
push
jns
mov
mov
fidivs
in
sub
arpl
xchg
out
sti
push
cli
dec
jp
inc
mov
inc
int3
movsb
out
adc
fmull
scas
es
out
pop
lock
or
sbb
sub
push
fs
out
rclb
test
push
mov
inc
nop
sub
sub
out
xor
pop
dec
popa
push
push
ror
into
adc
imul
fwait
pop
inc
sub
mov
push
jecxz,pn
dec
adc
xor
adc
pushf
outsb
adc
js
or
lret
lret
adc
pusha
daa
lds
loopne
xchg
enter
jmp
cmp
cmp
in
cmp
sub
pop
xor
mov
or
jne
adc
mov
add
inc
xor
pop
mov
adc
jl
mov
in
mov
cmp
adc
and
pop
and
dec
out
int3
xor
lahf
mov
xor
jbe
jge
mov
cld
adc
lods
push
jno
mov
addl
outsl
dec
call
sbb
push
cmp
stos
stos
mov
mov
dec
xor
add
jl
adc
test
add
lods
repnz
sub
jle
adcb
mov
mov
add
xor
inc
test
in
arpl
outsl
push
jo
cmp
inc
shlb
imul
out
xor
std
cs
lret
std
leave
bound
and
push
movsl
or
jnp
stc
fldt
fs
or
clc
dec
imul
mov
das
push
sbb
pushf
mov
mov
or
daa
decb
leave
les
mov
out
dec
xchg
pop
adc
jmp
pop
iret
mov
out
jbe
xchg
jne
jmp
dec
pop
loopne
mov
rolb
mov
or
hlt
mov
or
xchg
mov
mov
push
insb
ret
jne
dec
xor
repz
lret
mov
adc
xchg
jle
and
imul
fimull
and
sti
enter
sub
scas
and
sti
mov
inc
adc
in
mov
xor
outsl
clc
inc
push
fmuls
mov
fcomps
and
inc
mov
repz
cmp
es
dec
fdiv
adc
gs
mov
jmp
shlb
bound
frndint
or
cwtl
dec
mov
push
icebp
clc
shl
sbb
insl
test
lret
shll
aad
xorb
mov
out
lods
push
sub
jb
out
orb
mov
dec
data16
mov
rclb
add
and
enter
in
lcall
jno
sub
sub
sbb
sarl
shr
or
stc
scas
lahf
clc
mov
mov
add
lods
xchg
stc
loop
xor
lock
pop
jb
movsb
sbb
iret
stos
sub
push
pop
jp
scas
mov
xchg
ficoms
mov
hlt
ret
jp
lcall
rclb
sbb
imul
xor
loopne
adc
xor
fcmove
shrl
pop
or
out
js
adc
into
arpl
cmc
dec
push
js
loopne
stc
or
dec
sbb
rcll
xor
scas
sub
pop
sbb
testl
xchg
sbb
imul
dec
mov
cmp
ds
aas
addr16
rcl
pusha
inc
mov
xchg
fcompl
or
xor
jp
aaa
lahf
popa
insb
pop
add
inc
push
cmp
or
cld
clc
popa
popf
mov
pop
cltd
into
sub
cmp
dec
in
out
cwtl
push
repz
mov
sbb
insl
jns
insl
outsb
inc
dec
jnp
pop
jae
sbb
fadd
lcall
mov
jo
test
dec
sbb
or
push
cmp
xchg
pop
sbb
ss
out
daa
or
out
in
add
or
xchg
mov
lds
aam
filds
cmp
dec
lods
data16
mov
test
push
cmp
sti
push
pop
mov
add
fnstcw
adc
clc
adc
pop
enter
lock
scas
dec
push
cmpsb
dec
fstps
mov
loope
inc
js
cltd
shll
inc
into
test
xchg
mov
dec
jnp
add
sbb
fstp
cmp
sub
xchg
sbb
jmp
xor
hlt
enter
mov
movsb
sbb
addr16
or
add
mulb
jmp
jp
out
repz
mov
hlt
popa
or
mov
adc
cmp
add
push
sub
std
cld
xchg
pushf
in
pushf
ja
adc
data16
jmp
pop
pop
push
pop
cmp
inc
aam
pop
ret
mov
adcb
mov
pushf
in
push
pop
aam
lods
xor
inc
push
lahf
add
xchg
mov
mov
data16
jno
jle
lahf
add
mov
imul
inc
xchg
inc
dec
pushf
lcall
mov
inc
mov
add
or
mov
pop
add
mov
inc
dec
dec
add
orl
xorb
test
sarb
mov
mov
ficoms
movsb
stos
dec
dec
lcall
mov
mov
pop
and
shlb
or
cli
push
jb
dec
out
ret
lock
mov
call
inc
dec
fwait
dec
in
inc
pushf
or
cmp
xchg
fbld
sti
mov
mov
out
dec
lock
sub
enter
dec
aad
pop
pusha
pop
movsl
xor
cld
fstps
repz
push
pop
cmpb
or
add
pusha
and
adc
cltd
dec
jp
ret
dec
adc
push
adc
xchg
dec
fmull
mov
push
dec
enter
fiadds
sbb
sub
xchg
fsubl
stos
push
pop
cmp
mov
pop
movq
arpl
insb
sub
adc
fcompl
mov
cmp
daa
scas
xor
imul
adc
lcall
adc
sbb
inc
inc
jle
mov
das
jb
inc
ret
sub
lcall
in
and
xor
lods
bound
jecxz
cmp
fdivrl
iret
cli
shrb
movsl
into
xchg
adc
jp
and
int3
and
in
xchg
testb
fidivs
mov
shrd
sub
gs
jnp
or
das
inc
rclb
rcrb
push
jmp
or
aam
xor
sub
jecxz
inc
pop
stc
imul
shll
aas
arpl
idivl
xchg
xor
imul
adc
mov
push
lret
dec
jmp
flds
int
testb
or
and
movsb
jbe
mov
pop
inc
push
lahf
xor
aad
inc
js
sti
daa
test
adc
mov
mov
push
fcoms
xor
mov
pop
push
sub
jl
xchg
sbb
xor
shr
xor
gs
jge
push
shl
into
sarl
mov
mov
push
enter
pop
test
and
add
fs
lea
adcb
cmp
pop
mov
repnz
out
test
in
push
fs
inc
sbb
jp
iret
fldenv
decb
adc
push
jbe
cmp
sub
xchg
fistpll
mov
iret
xchg
adc
adc
lret
push
int
mov
xor
mov
or
lods
sub
adc
insl
outsb
popa
pop
mov
dec
aad
push
stc
fisttps
cmpsb
dec
and
cmp
sbb
test
jo
mov
fistpll
adc
xlat
jmp
fldcw
add
sbb
test
cltd
pop
sub
aas
pop
jnp
popa
sub
mov
movsl
xchg
jmp
cmp
in
test
idiv
js
or
sbb
add
or
fdivrl
pop
ret
rcl
dec
inc
pop
pop
add
test
lcall
outsb
dec
loopne
sbb
into
dec
xor
outsb
cmovne
ss
push
mov
lea
pop
ja
pusha
jae
cmp
mov
mov
imul
stc
bound
dec
cmp
jne
lods
sbb
hlt
stos
sub
lret
cli
cmp
xchg
mov
std
push
dec
fwait
repnz
aam
outsb
pop
cld
xor
pop
inc
in
add
xor
mov
dec
into
fisttps
cmp
or
and
rclb
shlb
add
repz
adc
out
sbb
sbb
jge
lret
add
gs
mov
jge
mov
jb
lds
inc
cmp
js
dec
lds
pushf
xchg
mov
or
insb
lock
shl
jae
push
ret
addr16
repnz
mov
imul
movsb
lahf
stos
fldl
xor
outsb
stos
insl
aaa
dec
mov
stos
outsb
xor
xor
xchg
jl
xchg
xchg
loop
adc
sbb
cmc
not
pop
sub
dec
iret
xorb
sar
nop
mov
clc
pop
xor
jl
fwait
rcll
add
or
sbb
cltd
enter
sbb
dec
lcall
and
stc
sub
or
adcb
fsubrl
inc
adc
push
fmuls
repnz
dec
cmpsl
arpl
push
add
sub
xchg
das
cmc
repnz
sub
les
es
mov
pop
sbb
insl
inc
xor
mov
movb
in
addr16
sub
jmp
les
es
hlt
and
mov
xchg
movb
insb
adcl
rol
insb
movsl
sbb
jge
or
test
adc
sbb
push
xchg
pop
push
jle
pop
xlat
sbb
lds
pusha
push
pop
std
add
or
lahf
imul
adc
jl
mov
inc
stc
adc
pop
adc
dec
loope
gs
mov
in
cmp
imul
sbb
aad
out
mov
ret
lahf
flds
rcr
scas
mov
scas
in
test
rorb
jns
and
inc
mov
imul
jle
cmp
idiv
nop
sub
fsubr
lods
xchg
pop
or
rclb
xchg
cs
pop
xor
xor
out
shlb
imulb
or
jb
into
jl
jae
xlat
jae
inc
mov
test
rclb
out
pop
into
jle
push
movsb
scas
and
cmpsb
mov
dec
ret
xchg
sbb
scas
cmp
fcoml
mov
mov
adc
not
dec
cmp
and
fstps
jne
sarb
into
inc
outsb
fsubl
outsl
outsb
ljmp
sbb
mov
mov
jae
in
add
pop
outsl
push
xor
jl
lods
xor
nop
in
out
testl
addr16
test
std
outsl
cmp
push
aam
lcall
aad
sarb
mov
push
fwait
inc
jne
out
pop
sub
mov
adc
xor
ret
jmp
inc
jecxz
inc
mov
ret
sub
gs
test
dec
mov
inc
sbb
mov
mov
pop
cmp
cwtl
out
pushf
sub
popf
xlat
xor
mov
jecxz
and
nop
cltd
push
repz
fwait
les
out
push
je
xor
pop
mov
sub
aad
xor
fbstp
jmp
xor
mov
mov
jmp
cmpsb
iret
loopne
loopne
inc
lret
repz
xchg
mov
add
adc
push
aam
in
mov
decl
push
test
push
xchg
sub
or
ficompl
pop
lock
mov
imul
fs
xchg
pop
push
mov
dec
cmpl
test
cwtl
mov
lds
mov
dec
int3
jecxz
iret
aad
and
and
orb
jb
mov
cs
ror
arpl
int
add
xchg
pop
push
test
mov
cmc
dec
push
mov
lret
rcr
aam
int3
mov
push
or
xchg
jae
cmc
test
sub
test
mov
or
xchg
adc
adc
mov
and
nop
aaa
pusha
mov
popf
daa
xchg
cltd
push
jecxz
pop
sbb
test
je
push
push
ja
movsl
jno
adc
cmpsl
lcall
or
mov
add
add
iret
xchg
sub
aas
mov
sti
sub
fmul
jns
daa
fnstsw
popf
pop
add
push
ss
jg
repnz
jl
xor
int
and
mov
jle
mov
dec
sub
mov
xchg
lock
and
ret
cmp
jns
das
cltd
push
fists
and
jb
sbb
outsl
push
xchg
arpl
andl
dec
daa
sbb
nop
sarb
add
leave
or
pop
out
js
leave
lods
xchg
jae
outsl
insb
arpl
addr16
dec
imul
mov
mov
shl
mov
cli
insb
ror
dec
mov
inc
imul
mov
leave
mov
sbb
out
jmp
mov
xor
jb
push
les
mov
ss
mov
dec
pop
movd
sbb
imul
insb
out
fstps
ds
jb
jle
jo
cmp
mov
sbb
int3
sub
aaa
and
sbb
inc
adcb
xor
pop
ds
pcmpgtb
mov
xchg
sbb
pop
jne
push
daa
mov
gs
js
mov
mov
sbb
lcall
lahf
jae
movb
xchg
lods
fistl
insl
xchg
and
shlb
aad
es
xchg
notb
push
je
xor
mov
shlb
cmp
fxch
fiaddl
or
or
mov
adc
cmp
repnz
mov
xchg
shrl
inc
jle
fld
pop
mov
cwtl
popf
mov
cli
inc
jae
or
subl
mov
sub
leave
movsl
xlat
inc
or
xchg
xor
and
push
fwait
aad
sar
mov
jo
ja
mov
mov
imul
pop
mov
push
loop
cs
mov
lcall
cmp
cmpsb
cmp
rorb
pushf
invd
mov
adc
mov
in
cmp
repnz
jp
fwait
ds
outsb
jae
adc
push
outsb
add
outsb
jg
adc
sarb
add
int3
fistpll
mov
repz
xor
fwait
adc
dec
leave
jns
xchg
push
or
push
in
add
daa
jle
int3
jae,pt
inc
lods
pop
inc
je
cmc
inc
pop
push
inc
and
xchg
loop
outsl
jecxz
or
mov
mov
or
mov
push
out
in
mov
xor
pop
gs
push
mov
notb
loopne
fs
cmpsb
push
std
lods
pop
xor
clc
sahf
int3
adc
dec
adc
inc
mov
mov
jl
insb
or
fwait
pop
mov
push
std
lds
dec
mov
fdivl
fcomi
inc
mull
in
pop
sub
mov
nop
xchg
les
cld
loope
jecxz
pop
les
cmpsb
les
fld
insb
outsb
sub
addr16
imulb
push
jl
icebp
xlat
push
jg
test
cmc
shlb
push
and
cmp
aaa
mov
leave
rcrb
pop
pushf
fisttpll
into
add
and
add
iret
jno
insl
iret
imul
xchg
xor
dec
xor
pop
ficoms
push
nop
sub
fidivrs
je
pop
jb
inc
pop
sbb
mov
cmp
and
sbb
jne
and
cmp
mov
cmpb
out
sbb
ficomps
fsubs
int3
xchg
rolb
xchg
pop
lods
xchg
jbe
push
cmp
test
xchg
mov
mov
into
mov
js
dec
and
stos
sbb
icebp
xchg
adc
ja
imul
into
cmp
test
hlt
aas
lods
insl
mov
arpl
push
pop
popa
test
pop
cmc
mov
cmc
dec
push
push
sbb
stc
aas
fiaddl
push
jno
repz
sbb
push
into
and
sub
push
stos
inc
loop
rorb
xor
std
fidivs
das
fsubs
xchg
cltd
inc
mov
int
cld
and
cmp
dec
cmp
pop
rclb
fsubrs
lret
mov
mov
xchg
inc
cwtl
cltd
call
jnp
mov
popf
mov
cmp
lcall
inc
xor
jno
out
cmp
xor
into
outsl
leave
inc
add
and
fdivl
and
test
aam
fsubrs
jne
push
stos
add
out
outsb
jb
mov
lret
lds
xchg
add
sub
mov
push
mov
mov
les
add
ret
inc
repz
push
push
insl
adc
mov
js
and
sbb
xlat
jmp
movsl
push
mov
enter
jbe
cmp
sbb
loope
xchg
ja
mov
lcall
mov
mov
jl
mov
mov
dec
add
push
dec
mov
es
fldenv
inc
sti
cmpsb
ret
scas
pop
insl
sbb
lret
sub
xchg
or
andb
inc
cmp
fisubl
fistl
into
ret
or
adc
add
fsub
aaa
jg
shlb
add
and
mov
adc
inc
mov
test
ss
in
sar
and
sub
int
fiadds
jo
dec
sbb
mov
adc
mov
iret
cs
out
je
mov
jbe
out
aaa
rcrl
lea
push
push
pop
mov
and
xor
and
xchg
ret
rcll
aas
mov
pop
jo
fstps
mov
xchg
mov
movhps
icebp
mov
aaa
test
sbb
push
push
adc
scas
stos
test
adc
adc
in
xor
mov
inc
jno
bound
stos
es
pop
or
out
sub
dec
rolb
inc
dec
arpl
clc
cs
mov
adc
mov
mov
pushf
fs
and
xchg
jae
stc
frstor
dec
xchg
sub
push
outsb
jecxz
push
movsb
xchg
movsb
insl
test
outsb
cmpsl
sbb
or
jge
pop
orl
shrb
jne
or
cltd
aas
xchg
iret
mov
sbb
jge
call
scas
adc
pop
jno
out
pop
or
xchg
inc
inc
sbb
lret
outsl
sbb
jno
pop
pop
dec
inc
mov
add
jl
mov
leave
leave
clc
add
cmp
sbb
pusha
aaa
push
push
js
fdivrp
lret
add
mov
sbb
fidivrs
hlt
rclb
cmp
push
inc
mov
add
xchg
fucom
roll
imul
inc
arpl
push
scas
fs
lods
inc
adc
mov
cmpsb
imul
add
stos
outsb
inc
int3
jnp
popa
xchg
jnp
pop
cmp
jns
movsl
jmp
mov
pop
push
fisubrs
jb
pop
jl
imul
fidivrl
xchg
inc
sarb
pop
cld
push
pop
xchg
daa
push
mov
js
shrl
mov
mov
cmp
ss
push
ja
dec
addr16
mov
jg
jae
arpl
test
mov
sbb
or
inc
mov
inc
cmpsl
xor
mov
cld
std
or
call
arpl
insl
add
cld
jb
repnz
test
cli
jp
jmp
movsb
or
mov
mov
jae
mov
push
add
fiaddl
push
imul
idivl
aad
jbe
imul
cmp
xchg
outsl
lock
pop
mov
test
push
pusha
sbb
pop
mov
scas
mov
lcall
hlt
jg
dec
sbb
jmp
cs
sbb
jl
aaa
cmp
pop
ds
jmp
mov
in
das
nop
jmp
sbb
dec
push
sub
cmp
lds
movsl
fdivl
mov
or
scas
dec
push
out
gs
cmc
movsl
mov
shlb
or
out
jns
repz
in
leave
mov
xchg
loopne
sub
xor
hlt
lret
popf
cwtl
adc
xchg
jno
fucom
mov
std
lcall
adc
pop
xchg
adc
loopne
xchg
or
mov
jle
aam
jle
lahf
imul
xlat
sub
loop
mov
addr16
scas
sahf
icebp
insb
subl
aas
aam
mov
in
mov
pop
or
push
jb
cmpl
adc
sahf
or
mov
es
mov
imul
mov
int
pop
sub
jbe
pop
mov
das
pop
testl
fildll
add
xchg
xchg
mov
push
in
movsb
ja
mov
test
rorl
adc
stos
outsb
cmp
or
jle
test
lcall
dec
mov
pop
dec
mov
out
xor
nop
inc
mov
call
pop
popf
push
movsb
sbb
push
call
mov
cli
lods
mov
loopne
xor
outsb
cmc
jb
lret
aas
jo
or
jmp
loopne
test
imul
int
adc
dec
inc
add
cmp
loopne
jne
cld
adc
mov
push
hlt
js
mov
dec
pusha
inc
xchg
inc
ds
adc
pop
mov
repnz
dec
cmp
pop
pop
enter
sti
shr
and
jns
aas
mov
jle
mov
out
xchg
jns
xor
ret
or
call
xchg
mov
mov
sbb
ja
cmc
push
mov
mov
loope
sbb
dec
mov
nop
jne
popf
inc
shll
cmp
leave
cld
ret
jno
aam
mov
bound
sub
aam
bound
cmp
or
test
stc
mov
pushf
test
mov
mov
lods
xor
cmp
mov
jg
gs
jp
insl
push
lret
loop
addr16
pmullw
lock
cmpsb
out
movb
dec
push
cmp
xchg
mov
dec
add
cli
sbb
sbb
mov
inc
ja
fdivrl
fists
out
aad
call
rclb
or
ror
xchg
sbb
sbbb
jg
adc
and
adc
sbb
sbb
psubq
jmp
xor
and
ss
je
negb
push
push
cmp
cmpsb
cli
lret
pop
inc
xchg
popa
or
stos
fiaddl
pop
cs
xchg
in
jp
mov
cmp
pop
push
sub
xchg
and
adc
pop
pop
out
and
xchg
lret
in
nop
pop
xchg
rolb
cmc
mov
fwait
mov
push
mov
add
push
fimull
fmulp
xbegin
mov
pusha
mov
mov
fisttpl
push
movsl
jo
or
out
cs
sub
xor
mov
or
loop
sbb
pop
mov
inc
cmc
push
std
and
cwtl
xor
fstpt
cmpsl
cld
sahf
push
xchg
outsl
or
or
loope
or
ret
mov
jo
in
sub
nop
lods
sahf
loopne,pt
mov
or
sti
addr16
icebp
imul
jle
mov
adcl
stos
mov
mov
cmc
aam
shll
dec
loope
ret
push
mov
mov
and
add
aad
iret
in
jge
jae
mov
dec
mov
xor
jo
ret
negb
std
jl
xchg
push
sub
mov
and
movsl
push
iret
cmp
sbb
lock
jle
adc
or
dec
and
adc
jg
mov
out
and
shlb
sub
popf
je
sub
das
aad
pop
sbb
dec
int
mov
jg
fs
fwait
mov
fistpll
stos
jg
push
mov
loope
xor
add
les
xchg
sbbb
pop
call
adc
nop
sub
sbb
sub
mov
enter
clc
gs
arpl
insl
stos
movsl
sub
mov
fs
cli
inc
enter
or
inc
sub
inc
repz
hlt
mov
sub
adc
push
jmp
into
jne
aaa
lret
inc
xchg
lods
movsb
incb
fs
xchg
push
xchg
add
mov
dec
cmp
dec
hlt
cwtl
pop
aaa
js
jno
push
ficoms
pop
ret
mov
dec
pop
cmp
cli
and
jno
std
sub
test
sbb
xchg
decl
out
shr
adc
add
mov
push
pop
cmp
push
mov
fs
dec
and
scas
add
lds
ret
negb
filds
arpl
or
mov
out
jmp
adcb
sbb
mov
mov
xchg
test
pop
adc
and
decl
fwait
addb
test
push
push
ret
int3
ficoml
call
lret
pop
jae
fs
pushf
xchg
push
fisubrs
inc
pop
sbb
leave
ficoms
sbb
cmp
dec
aaa
jbe
aam
scas
push
and
test
call
mov
and
adc
test
ret
loope
incb
or
pop
sti
jp
dec
adc
pop
int
insl
adc
or
jno
dec
mov
leave
idiv
fs
inc
adc
je
adc
sbb
dec
daa
dec
cltd
xor
sbb
cld
xorb
mov
push
xor
stos
push
mov
enter
test
sub
fcomp
jecxz
cmp
ds
push
pop
xchg
dec
mov
xchg
sar
xchg
sti
frstor
sbb
imul
loopne
dec
pop
movsl
bound
ret
insl
or
jle
adc
popa
repnz
mov
movsl
and
js
outsb
mov
or
push
call
and
sahf
les
jns
lods
jge
test
jno
mov
imul
cltd
push
xor
lahf
gs
dec
sub
bswap
cmpsl
or
push
lret
rcl
jl
imul
dec
outsl
enter
sar
mov
loop
popf
pop
data16
nop
and
xorl
push
xchg
add
dec
push
xor
mov
push
jl
or
aad
inc
jbe
sub
cmp
push
dec
lret
jnp
xchg
mov
push
fcoml
rol
jle
sbb
scas
inc
iret
or
mov
lds
jl
gs
mov
mov
push
test
sbb
shlb
call
call
addr16
pop
fiadds
push
cmp
pop
movsb
testl
arpl
fmuls
mov
ret
paddusw
cmp
push
test
cld
cmp
dec
dec
loope
xor
nop
sub
pop
in
mov
add
add
fstpt
push
shr
hlt
in
fs
mov
add
movsb
nop
aad
shll
imul
jno
fstp
add
in
cmp
pop
out
xchg
mov
daa
jb
pusha
adc
xchg
push
shlb
scas
and
movsl
lods
pop
dec
sub
jle
je
movsb
imul
cmp
add
xor
shlb
and
outsb
mov
stos
pop
pop
cld
xor
jl
clc
lds
adc
jbe
adc
psubd
adc
ficoms
outsb
insb
dec
fmul
or
xchg
daa
unpckhps
cltd
jl
push
call
stos
clc
xchg
xor
adc
mov
sub
sub
sbb
mov
icebp
movsb
and
loop
std
mov
mov
cmp
push
mov
sub
clc
icebp
out
add
add
xor
mov
push
or
jno
and
loop
push
mov
adc
add
jp
sub
int3
sahf
call
out
inc
sub
sbb
lds
leave
mov
jno
sub
addr16
dec
pop
adc
adcb
test
jp
lock
xlat
les
mov
mov
testl
cs
add
in
xchg
sahf
repnz
into
and
aad
ja
cmp
push
inc
add
cmp
bndstx
pop
mov
out
pop
add
sbb
mov
push
test
and
mov
outsb
mov
sub
mov
scas
clc
cmp
sbb
pop
hlt
mov
inc
test
dec
repnz
sti
dec
adc
lcall
push
dec
cmc
and
movsb
add
add
push
fwait
idivb
je,pn
lcall
mov
mov
pushf
dec
pop
and
xchg
cwtl
sub
xlat
mov
filds
inc
in
mov
adc
cwtl
mov
adc
mov
adc
dec
adc
pop
insl
scas
xchg
push
mov
popf
cmpsb
out
popf
aas
repnz
pop
in
inc
inc
mov
mov
and
jg
repz
inc
stos
jbe
out
xor
mov
push
shl
jecxz
push
jl
cmp
or
or
mov
mov
sbb
cli
imul
out
or
fidivl
jg
cmpsb
jne
cltd
cmp
xchg
mov
imul
push
push
enter
mov
ljmp
mov
stos
push
dec
and
push
add
sub
mov
loop
push
outsl
or
and
cmp
jae
adc
sahf
into
inc
sbb
sti
push
inc
dec
sub
xor
sbbb
lods
lahf
outsb
xchg
popf
inc
mov
and
mov
jns
arpl
ret
sbb
push
pop
push
or
xchg
rcll
adc
mov
push
sub
xchg
fstl
scas
ja
stos
stos
mov
out
push
mov
and
push
arpl
mov
push
inc
loop
jge
js
mov
mov
add
pop
in
mov
lret
out
fnstenv
repnz
adc
pop
adc
repz
loop
iret
push
aaa
xchg
push
loopne
repnz
sbb
lock
push
mov
mov
inc
jae
xor
cmp
sar
cltd
cmp
rcrl
dec
jno
dec
scas
fdivl
pop
inc
add
inc
mov
cs
aam
or
adc
inc
cmpsb
rorb
sub
test
lods
cmc
movsl
insb
pop
cwtl
lcall
call
cli
addl
jle
ds
jmp
sub
jb
ljmp
mov
xorb
jb
mov
adc
jl
sti
ljmp
push
sbb
aam
xor
imul
pop
inc
sub
icebp
jmp
cmp
mov
fidivs
pop
add
sub
aas
cli
dec
fs
sub
mov
or
cwtl
pop
cmp
xor
push
adc
add
gs
cmpsb
repz
xchg
push
xor
popf
lahf
fisttps
ljmp
mov
xchg
mov
xchg
cmp
gs
jo
je
arpl
mov
adc
js
inc
xchg
gs
test
ret
aad
mov
ja
pop
sahf
int3
test
mov
cmp
dec
cs
xchg
jg
pop
rcrb
sysexit
dec
fs
mov
and
rorl
xchg
popf
xchg
add
adcl
enter
xchg
dec
mov
xchg
fdiv
notb
rorb
adc
enter
les
pop
mov
cmc
sti
aaa
out
leave
jb
jns
jo
dec
mov
xchg
mov
push
call
mull
mov
enter
sub
push
sarl
mov
shll
icebp
inc
mov
sahf
xor
cmp
add
cltd
cmpl
fisttpl
add
imul
and
sub
jbe
sbb
scas
or
mov
push
insb
sbb
or
notl
dec
xchg
jne
add
mov
jp
cmp
lret
fadds
insl
jge
fmul
pop
and
xchg
dec
out
cmp
adc
cli
imul
dec
and
inc
test
out
sub
cli
xchg
cmpl
mov
imul
dec
lret
pop
push
mov
jne
cmp
popa
sbb
sbbl
je
loope
sahf
inc
sbb
shll
xchg
dec
scas
or
shlb
lds
xlat
shrl
and
jo
jns
adc
pop
mov
test
ljmp
add
test
nop
or
and
out
mov
dec
dec
jl
inc
sbb
sub
rcrl
minps
leave
pop
loopne
xchg
mov
es
jmp
mov
mov
push
jg
jnp
mov
jge
dec
mov
sahf
lret
pop
adc
loopne
cld
bswap
push
iret
aam
mov
icebp
sbb
ds
pop
mov
lahf
jbe
outsl
es
lea
sti
in
push
xchg
mov
lea
daa
lahf
jmp
ret
add
dec
pop
scas
leave
test
cli
loopne
push
xor
aam
jns
or
xchg
xchg
jo
lds
and
or
test
cmp
les
sub
xor
adc
jge
and
xor
adcl
sub
inc
add
lcall
mov
popf
mov
stos
rorb
imulb
pop
xchg
addr16
sbb
in
mov
test
push
bnd
leave
add
pusha
mov
dec
add
sub
xor
js
dec
mov
bound
lds
cmp
ret
sbb
cmp
jns
and
mov
movsb
push
ja
cli
jno
je
and
rclb
adc
stos
sub
add
lret
dec
push
sub
adc
adc
cmpsb
outsb
lret
cmp
adc
outsb
nop
adc
hlt
dec
std
push
pop
adc
cmp
mov
push
test
mov
lahf
sbb
jge
push
cs
push
push
leave
xchg
into
mov
aam
and
loope
cmp
or
out
mov
fcom
int
dec
add
dec
xchg
cld
jp
aas
fidivl
or
dec
add
mov
adc
add
je
mov
jmp
outsb
les
push
pop
dec
inc
lahf
jmp
xchg
pop
or
or
call
fst
jb
cmp
mov
mov
ds
jg
mov
jecxz
cs
and
adc
sub
mov
cmpsl
cmp
popa
ffree
daa
les
out
pop
rcl
push
or
sti
cli
frstpm(287
fdiv
movb
lret
add
lret
push
push
jl
xchg
push
enter
int
and
scas
xchg
xchg
mov
sti
xchg
xchg
dec
cs
popa
ljmp
cwtl
jl
mov
and
aad
push
xchg
jg
in
mov
mov
push
xor
cmpsl
pop
or
call
subl
push
leave
sbbl
pop
mov
lret
push
adc
inc
add
loopne
jb
lods
jne
daa
fs
mov
repz
sbb
inc
fldl
ficoml
xor
xlat
dec
push
insl
cmp
jmp
xchg
int
adc
bound
mov
mov
negb
push
and
sbb
jg
jecxz
call
inc
xchg
sbb
loop
xor
cltd
lret
sub
arpl
lods
dec
pop
ds
jae
stc
mov
xchg
lock
fildl
mov
sbb
xor
shlb
pop
into
icebp
int3
call
jno
lods
mov
movsb
jecxz
in
hlt
stos
js
mov
pop
cmp
mov
mov
pop
pushw
lahf
outsl
xchg
fs
add
sbb
stos
pop
pop
cmp
cli
nop
test
inc
add
xor
inc
mov
push
push
adc
mov
jne
add
pop
lock
aad
jmp
fsubrl
fnstenv
into
push
mov
xchg
mov
pop
add
negl
jle
repz
movsb
rcrb
sar
mov
lea
or
lds
mov
push
pop
inc
xchg
inc
dec
cltd
aad
data16
pop
xchg
pop
adc
scas
mov
or
sahf
in
xlat
adc
std
push
sbb
rol
sbb
fwait
inc
push
mov
pop
push
xchg
fisubs
in
sub
mov
and
mov
dec
leave
mov
pop
ja
xor
fistpl
aad
jbe
int
mov
nop
out
into
xchg
xor
push
js
in
ljmp
jae
sbb
jge
call
adc
pop
in
dec
rol
fmul
mov
pushf
adc
sub
fisttps
das
out
int
mov
pop
inc
jno
sahf
pop
push
xlat
pop
nop
test
jbe
in
aam
dec
dec
xchg
mov
add
je
in
jno
mov
stos
mov
add
xchg
mov
bound
jns
cltd
cmp
out
or
scas
xchg
sbb
stos
cmp
xchg
mov
push
mov
push
xor
jne
bnd
outsl
ret
movb
mov
loop
mov
xor
adc
push
sbb
negb
push
and
divb
es
mov
dec
ja
dec
mov
cmc
push
mov
fdivs
push
dec
out
loope
rol
sbb
fstpl
fidivrl
sti
inc
xor
ljmp
lcall
jae
rcr
fists
out
mov
and
inc
pushf
sbbb
xchg
ljmp
or
jg
cmpl
adc
jmp
fiadds
mov
popa
movsb
push
lcall
inc
mov
lret
cs
outsb
out
xlat
cmp
xchg
mov
ret
inc
mov
lds
pop
repnz
in
repnz
adc
fcompl
test
xor
inc
dec
xor
loope
add
xchg
push
bound
sub
lods
xor
call
loop,pn
or
in
hlt
xchg
push
test
ja
mov
push
in
cs
sbb
cmpsb
lret
sbb
cmc
jne
pop
sub
lock
push
and
cmp
jle
sarl
xor
cmp
addr16
sbb
mov
sub
lea
cmp
fdivrs
out
and
roll
mov
and
fucomi
sbb
popaw
adcb
xchg
in
sbb
rcr
ljmp
imul
ja
jg
add
dec
jo
loop
imul
in
into
data16
lahf
insl
out
dec
test
push
add
loope
push
loop
idivb
out
jecxz
jecxz
jno
sub
dec
push
sub
sbb
je
cmpsb
sub
lods
mov
and
call
and
subb
pop
sarl
aas
pop
mov
pop
ret
stc
adc
add
lods
addr16
outsl
pop
pop
cmpsl
cmp
adc
repz
jge
dec
enter
and
cmpsl
cld
pop
sbb
in
push
testb
mov
stos
je
cld
mov
mov
addr16
and
adc
inc
xchg
mov
sub
or
add
mov
lahf
adc
sahf
xchg
outsb
pop
inc
push
cld
and
arpl
xor
arpl
pop
bound
pushf
adc
repnz
jae
dec
movsl
ss
sub
or
push
cmp
push
and
push
push
std
repnz
bound
clc
mov
arpl
dec
aam
ja
inc
jnp
out
cmp
dec
xor
jmp
or
test
mov
in
rorl
arpl
lea
push
cmp
mov
icebp
xchg
add
pop
pop
mov
xchg
and
andb
cmpsl
test
shrb
arpl
jae
push
jb
or
aad
xchg
or
test
insb
cltd
ficomps
pop
aad
pop
mov
stc
mov
sbb
lcall
cmp
loope
shlb
sti
loope
fldcw
fistl
or
xchg
out
test
mov
iret
std
or
sbb
xchg
xchg
sub
subb
popa
pop
int3
fdivrs
sbb
mov
test
in
dec
popl
jmp
sbb
out
arpl
je
mov
neg
shl
jnp
ret
push
adc
add
lret
stos
or
sub
sti
movb
and
icebp
int
xor
mov
ds
mov
xchg
inc
loopne
pop
imul
aad
cmp
popf
enter
add
scas
lock
jns
jns
pop
andb
and
add
mulb
sub
cltd
push
pop
ja
shll
insl
mov
fisubs
pop
fucomp
hlt
sahf
subb
jl
imull
xchg
icebp
rolb
ret
push
repnz
dec
loope
pop
xchg
shlb
xchg
jge
mov
out
nop
add
rorb
xor
shll
push
sub
loop
lret
popa
shlb
scas
lcall
movsb
in
add
ja
stc
xlat
adc
ss
jno
bound
xchg
xchg
dec
ss
pop
std
imul
cmp
pop
lcall
insb
sbb
or
movsl
inc
call
jmp
sub
sub
ss
mov
in
dec
mov
sbb
rcrl
inc
jge
js,pn
xor
in
fcompl
pusha
ret
in
leave
das
sbb
and
hlt
call
pop
fimull
xor
inc
das
insl
and
jp
aad
push
mov
les
mov
rolb
test
leave
cld
into
fimuls
es
mov
ud0
mov
mov
in
or
jmp
jmp
sbb
adc
cmp
xor
add
insl
imul
and
incl
pop
mov
mov
sbb
js
mov
mov
ret
mov
push
movsb
push
push
hlt
mov
gs
into
stos
adc
add
push
test
stos
inc
xchg
pop
mov
xor
iret
jp
and
jg
adc
lret
xchg
lods
js
clc
lcall
mov
scas
stc
imul
lea
mov
movsb
xchg
xchg
jl
sbb
hlt
sub
lret
mov
stos
or
int3
xlat
dec
jnp
daa
imul
sti
mov
sub
pop
push
xchg
das
mov
scas
insb
xchg
repz
xor
ds
pop
nop
cmp
psllw
add
sbb
sarl
fmull
push
in
fstpt
cmpb
add
insb
xlat
dec
and
dec
jo
sub
loope
dec
xlat
stos
outsl
xchg
or
dec
adc
xor
inc
daa
ss
out
ljmp
add
xchg
sahf
iret
sub
daa
in
stos
enter
stos
push
dec
sar
dec
push
je
stc
and
rcrb
aad
enter
xor
jnp
or
xor
stc
rcll
sub
add
push
sbb
jecxz
rcll
sub
arpl
or
jmp
les
push
addr16
cs
lds
jge
lret
cli
push
fisttps
inc
and
fs
mov
mov
mov
xchg
mov
push
push
jo
imul
mov
notl
ficomps
mov
xlat
push
dec
push
pop
adc
jb
cmp
push
sbb
adcl
jno
jo
aaa
pop
mov
jp
jg
sub
jmp
sub
es
or
or
and
add
cmp
push
inc
jg
incl
push
outsl
in
cmp
push
daa
imul
adc
data16
xor
movsb
mov
inc
mov
cmp
dec
jne
mov
orl
or
sub
popf
out
test
cmp
and
sbb
push
pop
sbb
sbb
js
fwait
cmpsl
push
jnp
adc
dec
in
aas
shl
into
push
test
fisubrl
pop
adc
jns
orb
pop
cmp
gs
movsl
fnstsw
xchg
bound
imul
adc
cwtl
loope
cld
loopne
fsubs
xchg
mov
fidivrs
push
fs
add
jae
dec
in
pop
lcall
test
imul
jbe
data16
jge
pop
ficomps
xor
mov
pop
inc
stos
cmpsb
sbb
pop
popf
jae
pop
fisttpll
pop
push
pop
mov
mov
addl
enter
std
add
or
push
or
out
or
out
sub
xor
test
jle
sbbl
or
mov
sbb
sub
stos
jnp
dec
pushf
and
pop
xor
mov
jne
stos
add
cmpsb
and
pushf
cwtl
ret
lock
out
arpl
lods
scas
aad
and
lds
xchg
xchg
push
sub
cmp
xchg
fnstsw
loop
or
xchg
adc
xchg
push
and
xchg
std
andl
cli
cli
cmp
fwait
sub
dec
push
inc
push
or
pop
or
pop
and
push
loope
int
push
call
jle
inc
xchg
stos
inc
iret
and
scas
insl
add
cmpsl
decb
dec
sub
xchg
cltd
mov
popa
push
mov
lcall
daa
xchg
push
dec
mov
xchg
sub
push
mov
test
testl
push
and
or
cmpsb
addr16
add
sbb
addb
fsubrp
and
in
inc
dec
adc
repnz
and
xchg
setbe
jecxz
inc
sbb
sub
jo
dec
xchg
faddl
and
cmp
js
xor
sub
dec
lock
push
xor
jno
pop
cmp
sahf
sbb
clc
out
fnstenv
xor
sbb
ljmp
pop
repz
cmp
sub
iret
sbb
dec
mov
mov
pop
sahf
lea
lock
dec
ror
and
push
inc
cmp
mov
jae
pop
sub
dec
fisubl
mov
mov
jb
popf
in
lock
inc
xorl
repnz
jmp
mov
repnz
fdivrs
adc
sbb
dec
je
inc
sarl
fbld
add
and
das
imul
dec
jle
repz
in
mov
push
jge
sar
leave
cmp
sbb
cltd
daa
cmp
jp
or
out
and
mov
and
data16
fistpll
fs
push
testl
out
out
and
push
int
popa
xor
pushf
gs
mov
scas
push
add
push
insl
fmulp
popf
fdivrl
int3
pushf
ja
lods
mov
inc
mov
out
mov
adc
and
scas
xor
ja
repnz
das
hlt
insl
or
movsl
div
mov
cltd
jno
pop
push
stos
xor
cmp
xorb
leave
dec
sbb
pop
inc
sti
sbb
xchg
aas
adc
add
sub
jnp
loope
jmp
jb
sub
adc
into
mov
cmp
hlt
sti
dec
dec
xor
xlat
pop
outsl
xor
rcrb
jno
xor
loopne
enterw
insb
and
mov
cltd
push
or
fcomip
pop
mov
roll
frstpm(287
stos
jbe
pop
sub
je
inc
shl
fcoms
clc
or
cmp
lods
jbe
sahf
xchg
jmp
sub
sub
jl
fmulp
and
cmp
pop
scas
testb
add
mov
add
jnp
pushf
and
fcomps
sub
dec
push
sbb
pop
pop
cli
and
fstpl
mov
subl
push
cmp
in
inc
jmp
fmulp
push
aaa
enter
sbb
outsb
xchg
mov
pop
dec
jno
push
xchg
lock
das
mov
mov
mov
neg
aad
dec
mov
sbb
or
lret
and
lods
add
sbb
sub
popf
sti
stos
in
or
fcomps
fldt
insl
jecxz
jg
in
mov
lahf
cld
pop
sbbb
cld
xchg
lds
negb
lahf
ret
testb
sahf
mov
sbb
std
or
xchg
inc
pop
or
adc
xor
pop
add
jg
xchg
sahf
adc
dec
ret
test
mov
subl
or
pop
mov
imul
imul
std
pusha
adcl
xchg
mov
dec
pop
jnp
in
lds
icebp
mov
jp
ljmp
or
mov
loop
adc
fisttpl
xchg
mov
cmp
mov
outsb
subb
pop
mov
lods
pushf
in
aas
pop
shll
out
repnz
mov
push
jb
fs
mov
xchg
xor
mov
adc
xchg
jmp
in
in
inc
out
pop
outsb
rcll
inc
lahf
xor
jnp
xlat
daa
mov
mov
dec
push
out
loop
cli
mov
fisttps
xchg
inc
jo
lds
imul
pop
stos
xlat
mov
and
popl
aaa
pop
jne
sahf
out
in
dec
push
mov
rcrl
xchg
sbb
xor
out
push
iret
pop
jnp
mov
add
js
cmc
xchg
test
lahf
cmp
dec
clc
cmp
jb
xchg
sahf
xor
and
jg
insl
mov
jno
mov
cmp
xchg
in
push
lds
mov
aaa
repnz
dec
cli
out
fnstenv
stos
cmp
adc
jbe
ljmp
xlat
mov
jb
inc
pushl
or
shl
enter
inc
push
jp
popa
dec
pop
inc
mov
pusha
clc
subl
fldl
mov
sarl
outsb
inc
ss
ljmp
decb
jb
jbe
xor
test
mov
scas
fwait
lock
inc
hlt
cmp
mov
in
divl
push
dec
pop
xchg
mov
mov
cmpl
daa
inc
and
sub
cld
sub
es
or
dec
movsb
sbb
arpl
dec
xchg
test
or
and
inc
xchg
jo
outsb
bound
and
cmp
arpl
jmp
inc
int3
adc
mov
addr16
mov
movsb
push
or
aas
stos
sarb
xlat
sbb
mov
imul
je,pt
mov
mov
jo
insb
into
sbb
sahf
icebp
ss
xchg
fimuls
ror
sub
xchg
mov
and
cli
pop
dec
xor
out
cmp
notl
icebp
sbb
inc
mov
test
les
mov
loop
pushl
xor
inc
and
mov
pop
mov
andb
xchg
in
movsl
int
pop
pop
out
pop
mov
rcl
cmc
push
fcoml
outsb
inc
dec
lret
push
xchg
adc
mov
test
and
add
test
rcll
jne
dec
or
mov
jne
inc
mov
and
xor
pop
and
mov
cmp
std
sbb
in
add
mov
stos
push
mov
adc
and
mov
and
and
in
loop
xchg
add
adc
xor
and
or
add
fwait
add
push
and
enter
mov
mov
imul
jns
mov
sbb
fidivs
pop
lcall
mov
je
mov
dec
dec
mov
stos
notl
cmp
lock
xchg
push
je
addl
in
dec
inc
lods
aam
sti
inc
call
sbbl
mov
hlt
test
dec
insl
into
xor
lcall
xchg
rcll
inc
jno
mov
dec
mov
stc
mov
adc
pusha
push
fimuls
cli
and
adc
adc
push
jb
push
xchg
mov
movsl
mov
adc
repz
jmp
push
rol
jp
jp
sub
xchg
clc
in
push
aam
sbb
daa
js
push
and
adc
cwtl
mov
das
std
shll
sbb
jo
mov
lret
les
lret
dec
push
nopl
inc
or
pop
add
push
popa
mov
iret
out
push
pop
xchg
pop
jne
sub
cmp
clc
xor
test
sub
js
popa
loopne
cld
xchg
and
mov
lods
xchg
xor
jo
dec
sti
out
xor
icebp
pop
push
loope
dec
pop
outsb
je
pop
pop
xor
inc
incl
jnp,pn
aaa
cs
mov
xchg
inc
pop
and
fsubp
mov
js
mov
mov
inc
fldcw
cli
in
hlt
lds
xchg
out
data16
fildll
jne
hlt
and
repnz
xor
adc
xchg
test
xchg
shl
sti
es
dec
mov
scas
cltd
and
outsb
bound
insl
lcall
jge
mov
sbb
mov
stos
pop
ljmp
mov
mov
es
or
jp
repz
lret
adc
aas
push
xor
mov
xchg
add
and
in
imul
enterw
add
aad
daa
stos
repz
mov
fsubs
pop
xchg
fsubrs
sbb
pop
test
xchg
fwait
mov
mov
jne
and
or
dec
call
mov
lds
xchg
jne
jns
leave
jg
scas
pop
pop
xchg
insb
shll
mov
and
dec
push
sbb
push
jp
outsl
pop
mov
insl
mov
xchg
jmp
jge
notb
les
push
fistl
rolb
daa
in
gs
sahf
pop
cmp
and
xor
in
nop
mov
mov
movsl
mov
dec
cmpsl
and
fidivrs
mov
push
jp
mov
push
mov
movsb
scas
out
fistpll
ret
mov
add
and
inc
mov
xor
stos
lods
cli
pop
add
pop
jbe
lret
out
cmp
scas
or
fidivrs
and
inc
inc
sbb
jp
aaa
push
cs
in
jne
fldcw
adc
nop
aam
add
stos
ja
test
cmp
aam
xchg
push
sbb
fnsave
dec
push
imul
push
mov
jbe
imul
cmp
dec
repz
je
stos
inc
es
adc
mov
dec
mov
sub
lea
fs
shll
out
pop
arpl
rcrb
sub
adc
fnstsw
dec
push
mov
sbb
sti
mov
or
adc
pop
vandps
push
jl
test
scas
scas
call
adc
or
jecxz
call
xchg
inc
pushf
xor
aas
or
dec
or
add
pop
lret
cld
push
cmp
and
out
imul
addb
mov
pop
enter
mov
adc
pop
sub
lret
loopne
and
jg
mov
mov
mov
data16
leave
dec
inc
or
movsb
pop
in
adc
lods
loop
mov
mov
outsl
fstp
repnz
pop
mov
cmp
stc
ja
xchg
add
inc
xor
adc
faddp
imul
sub
mov
adc
xchg
sub
test
adc
insb
sub
fiaddl
movsl
fwait
push
pop
jae
jae
cwtl
pop
test
xor
inc
iret
lea
xchg
xor
sub
lret
outsl
cli
or
shll
rolb
hlt
mov
mov
shl
mov
add
jb
in
inc
cmpsb
jnp
add
cmp
icebp
ret
xor
sub
scas
xchg
int3
fnstenv
xor
insb
push
mov
bound
sbb
repz
testb
sahf
push
dec
fisttpll
and
dec
xchg
imul
rcr
mov
sbb
pop
daa
dec
and
sbb
mov
dec
push
aaa
mov
push
scas
push
ror
fidivrl
xchg
testl
fld
jns
sbb
mov
cltd
jo
insl
mov
jae
adc
jp
push
sbb
repz
sub
imul
xor
mov
js
jl
sub
adcb
lds
xchg
pop
dec
cmpsb
push
jle
data16
bound
jno
mov
test
stc
daa
mov
inc
dec
mov
or
sbb
push
xchg
pop
sbb
scas
pop
mov
or
mov
js
clc
adc
push
adc
lds
inc
cmpsl
loope
nop
mov
pop
and
ret
inc
imul
push
cmp
call
jnp
cs
or
cmp
mov
dec
ret
outsb
or
jno
mov
jge
ljmp
push
pop
ja
mov
ja
lea
cli
mov
add
out
mov
add
inc
jmp
adcl
mov
jnp
adc
push
ret
mov
xor
adc
ret
xor
imulb
sbb
dec
pop
mov
sti
sub
push
loope
adc
mov
out
inc
movsl
loop
pushf
imulb
add
mov
cmp
fisubl
add
in
out
leave
mov
push
jg
or
adc
pop
out
jmp
andb
jno
jmp
inc
fstps
fsubrs
mov
stos
adc
andl
mov
dec
or
movsb
je
pusha
add
push
sub
gs
decb
sbb
xor
ret
mov
pusha
xchg
sbb
sarl
mov
push
add
or
into
movsb
xchg
loopne
adc
push
loope
inc
insb
pop
xor
pop
subl
xchg
cmpsl
notb
hlt
ret
es
jg
ret
test
scas
sbb
sub
aad
ja
fisttpl
add
scas
inc
jno
repnz
mov
jne
sbb
fmul
mov
test
jl
mov
push
xchg
sti
or
xor
loop
lods
stos
jp
cwtl
sbb
fdivrs
xchg
stos
in
lret
and
in
in
sub
pop
test
imul
xchg
in
and
rorb
nop
ja
addr16
and
sub
xchg
shll
cmp
imul
stos
jle
mov
jbe
or
mov
push
imul
shlb
int
fs
push
ret
push
mov
ljmp
cmp
mov
xchg
xchg
mov
adc
xchg
int3
call
sbb
lahf
and
cmpb
adc
push
or
shlb
subl
mov
lea
scas
dec
push
das
outsl
lahf
mov
push
scas
stos
jg
rclb
orb
js
mov
xchg
xchg
cmpsl
movsb
into
adc
pop
js
fcomps
nop
add
xchg
and
push
dec
pop
movsb
inc
cmp
jmp
xor
in
stc
stc
repz
inc
pop
mov
daa
or
ljmp
loope
sbb
ret
into
gs
es
push
out
push
cmpsb
add
sub
adc
adc
sub
pop
divl
jne
js
pop
and
dec
mov
lea
adc
cli
cmp
cmp
push
mov
test
push
lret
inc
ret
mov
push
mov
dec
xlat
mov
push
stos
je
dec
not
inc
push
notb
lods
call
adc
popf
mov
pusha
push
dec
jl
popf
scas
xor
mov
pop
adc
mov
mov
daa
aas
in
ret
xorb
jb
sbb
sub
in
xchg
fistpl
rcl
jae
push
jmp
mov
and
test
adc
push
xor
aas
daa
sbb
push
mov
push
cmp
mov
push
outsl
cli
add
add
cltd
decl
in
sub
movsl
cmpsl
cmpsb
lods
int3
lock
mov
push
jo
or
test
out
mov
sub
mov
dec
in
repz
cld
aas
les
inc
or
xchg
test
outsl
mov
pop
jb
aaa
incl
sub
shll
xchg
push
rcrb
clc
fsts
push
aaa
xchg
xchg
cmp
das
insl
mov
fimull
inc
pop
jnp
divb
out
cltd
fwait
pop
clc
repz
cwtl
inc
or
in
add
or
mov
mov
dec
ljmp
xor
fwait
inc
or
or
push
scas
loop
in
cmc
pop
push
mov
and
out
cmc
pop
rorb
xor
inc
push
aad
rcll
icebp
jnp
xchg
cmp
mov
lret
test
inc
xchg
fidivs
shll
inc
loopne
out
testb
ljmp
cvtps2pi
cmpsl
cmc
mov
in
sub
lods
push
pop
sub
push
loope
fwait
cmp
xchg
jp
add
mov
ret
inc
push
push
in
lea
leave
pop
cmpl
std
cmc
sub
dec
test
push
cmpl
bound
sbbb
adc
inc
jae
mov
cmp
cs
bound
push
adcl
dec
push
aam
xchg
jp
lds
addb
fwait
pop
int3
dec
and
ret
stc
or
cmc
and
mov
inc
leave
cs
dec
sbb
incl
ss
out
mov
dec
push
aam
enter
out
sub
pushf
dec
fsubrp
fldcw
pop
dec
mov
sbb
xchg
sbbl
xor
sub
icebp
sahf
pop
jo
pop
xlat
jg
fs
daa
xchg
insl
arpl
fsubrp
sub
jno
cmp
sbb
pop
and
inc
mov
inc
inc
cs
or
mov
stos
into
cltd
jmp
push
cli
rclb
mov
inc
insb
lret
xchg
mov
lods
dec
pop
int
push
loop
inc
mov
xlat
pop
and
pop
fnstenv
xchg
and
and
cmp
repnz
mov
add
xchg
dec
loopne
push
fadd
icebp
xchg
jg
lret
insb
int
pop
std
insl
nop
xchg
mov
sahf
in
orb
fstl
lahf
std
cmp
pushf
out
xor
xchg
mov
jg
xchg
mov
fcmovnb
lods
inc
insl
mov
push
and
xchg
jle
in
bound
cmp
jmp
sahf
icebp
fisubs
xor
sbb
lret
jnp
int
cltd
or
or
cld
inc
mov
mov
lahf
push
std
out
push
inc
adc
push
dec
jle
mov
mov
dec
jmp
in
xlat
lods
cwtl
pusha
sbb
inc
sar
jb
pop
sbb
cwtl
les
mov
cmp
stos
adc
sbb
push
push
jno
in
int3
and
filds
dec
fmuls
fs
call
addr16
sub
push
sbb
inc
in
xchg
jp
mov
fsubrl
mov
cmpsb
xor
stos
mov
mov
lahf
arpl
jmp
ret
and
sbb
icebp
adc
pop
push
outsb
sub
mov
adc
jne
repz
pop
je
add
mov
int3
cmp
sbb
mov
fisubrl
lods
add
fistpll
repnz
nop
icebp
xchg
pop
inc
push
dec
sarl
iret
add
ret
mov
push
stc
sbb
push
fistps
insl
jnp
xchg
pop
or
lret
fidivs
jo
cmc
in
pusha
enter
imul
ja
mov
cmp
jae
mov
pusha
popl
mov
jle
pop
add
or
xor
mov
push
push
sbb
jnp
in
inc
test
out
pop
test
lret
loopne
inc
sbb
out
xchg
rorl
adc
stos
loopne
cmp
rolb
push
pop
add
decl
sub
repz
outsb
cmpsb
and
jnp
ja
ret
xor
in
xor
icebp
xchg
shrb
and
add
inc
sbb
je
adc
sub
out
loope
lock
add
incl
vpmadcswd
out
cwtl
fs
add
bound
fs
aas
scas
int
and
dec
into
scas
movsl
icebp
mov
scas
pushf
mov
xor
and
mov
jmp
or
inc
xor
ret
int
nop
enter
in
int
xchg
jle
outsl
jl
mov
pop
cmp
push
push
mov
jle
and
outsl
and
and
adc
loopne
inc
cli
imul
pushf
aam
fcoml
inc
je
pop
and
fcmove
mov
insl
inc
mov
jge
xchg
sbb
push
out
fdivrs
mov
aaa
in
mov
push
mov
mov
movsb
inc
lret
sub
loopne
sbb
jbe
and
repz
adc
jns
inc
mov
mov
pop
add
jge
and
es
inc
mov
imul
mov
fidivrs
fildll
outsb
or
mov
and
aad
mov
je
pop
addr16
ror
aas
fsubs
sub
jle
insl
xchg
pushf
mov
cmp
or
ss
push
subb
nop
mov
dec
ljmp
mov
mov
aaa
push
adc
xchg
sti
jns
add
push
rorl
pop
je
dec
pushf
cmc
call
adc
adc
inc
cmpsb
mov
pop
out
xor
mov
push
fisubs
cmp
mov
clc
fcomps
xor
sbb
sub
mov
sub
or
sbb
mov
cli
fcmovnbe
cmp
pop
add
inc
fists
xchg
in
mov
xor
inc
ret
aas
pop
adc
adc
dec
xchg
mov
lock
dec
fcmovne
aad
inc
inc
dec
mov
ja
dec
gs
and
mov
inc
adc
pusha
lock
and
leave
inc
daa
test
bound
cmpsb
sahf
pop
ret
pop
or
movsl
leave
cmp
lret
pop
jmp
cmp
add
cwtl
in
test
rorb
mov
test
and
jg
popf
sub
or
xor
lahf
jl
repnz
pop
lds
cmp
fsubrp
dec
into
and
popa
mov
mov
pop
pop
test
pop
inc
loop
adc
or
sub
add
jo
jp
inc
fdivr
fcmovb
push
add
cmpb
dec
cmp
mov
push
sbb
roll
roll
xchg
cmp
mov
mov
add
jnp
pop
je
es
mov
cltd
in
dec
xor
test
mov
cmpsb
cld
inc
mov
mov
xorb
adc
mov
jg
adc
mov
nop
pop
or
xchg
addr16
or
daa
mov
dec
sti
insb
lahf
sub
mov
fcmovu
and
cwtl
jmp
jp
sub
inc
ss
stc
xor
repnz
lods
push
ret
inc
or
push
int3
or
mov
jbe
fsubrs
cmp
and
xor
out
loopne
push
or
mov
xchg
dec
xor
xlat
fnstenv
and
nop
pop
mov
jno,pt
cmp
push
imul
xchg
cmp
stos
xchg
fcoms
jnp
or
stos
sub
cmp
int3
jae
xor
fdivs
aam
icebp
push
and
pop
adc
pop
andb
nop
fwait
rclb
push
jb
inc
shll
in
and
in
mov
push
or
add
mov
mov
lcall
push
xchg
das
xchg
nop
add
test
mov
addr16
filds
sbb
loope
push
or
mov
mov
xchg
adc
lahf
outsb
mov
scas
cs
sbb
jno
hlt
xchg
dec
hlt
inc
stc
adc
mov
int
mov
ret
jge
push
sub
push
in
jnp
jno
ficoms
dec
leave
push
push
icebp
adc
sub
sbb
ja
not
loope
mov
sub
add
and
jnp
xor
pop
clc
dec
aad
dec
daa
insb
pop
mov
imul
cmpsl
mov
dec
out
jmp
cmpsb
cmpsl
cli
cli
add
movsb
mov
outsb
push
out
repnz
or
lahf
adc
jne,pt
mov
push
cltd
or
in
mov
enter
lahf
mov
or
jecxz
lds
sbb
dec
jmp
mov
mov
lahf
push
arpl
cs
mov
pop
cmp
jge
jne
and
test
adc
call
adcl
jmp
push
lods
xor
and
sti
push
popa
push
les
mov
test
jnp
int
stos
sbb
aad
jle
rcr
nop
js
pop
je
popf
rorb
in
lods
ja
add
sbb
jae
pop
shlb
mov
xor
xor
pop
or
add
js
in
cmpsl
mov
xchg
xchg
out
enter
jg
push
dec
sti
mov
add
pop
repz
sub
shll
outsl
loope
push
leave
jne
cmc
xchg
fxtract
sar
mov
adc
popa
repnz
pop
ds
add
and
xchg
inc
ds
inc
std
int
gs
adc
mov
jecxz
pop
std
adc
cmp
dec
inc
imul
inc
rcrb
sbb
cmp
and
add
scas
mov
mov
sbb
push
stos
stc
add
imul
insl
leave
push
ret
add
out
and
popa
loopne
es
pop
mov
out
cwtl
and
pop
pop
mov
dec
mov
sub
daa
lcall
jb
pop
mov
adc
gs
negl
andb
sarl
mov
inc
sub
inc
or
xchg
jbe
push
xlat
gs
fdivrl
sti
and
lock
cmp
sub
cltd
jae
adc
pop
cmp
xor
dec
gs
jmp
mov
stos
xchg
fsubr
cwtl
mov
xchg
sub
adc
jmp
sub
movsl
push
or
outsl
shrl
add
incl
insl
and
adc
fimull
and
inc
push
nop
lcall
lea
lret
pop
jmp
call
popf
mov
or
lret
xchg
out
sub
stos
jmp
lock
mov
jl
jmp
arpl
mov
pop
mov
add
push
jnp
in
imul
lcall
jae
rcll
push
dec
loopne
mov
ja
pop
jo
loope
fisttpll
add
outsl
enter
mov
mov
push
sbb
pop
out
xchg
add
nop
rcrl
sub
int3
xchg
fcmovu
lret
sub
cld
popa
dec
pop
test
in
cmp
aam
xchg
push
jle
movsl
insb
pop
push
scas
std
shrl
ret
hlt
sbb
loopne
mov
adc
imull
divb
and
outsb
repnz
nop
adc
inc
aad
jmp
cmc
push
dec
sbb
repnz
fildl
lods
lret
mov
sub
mov
adc
out
xor
insl
mov
gs
pop
dec
shlb
inc
mov
rorb
dec
push
stos
push
adc
or
in
shll
and
push
flds
test
mov
pop
sar
fwait
sbb
cmp
lcall
insl
sbb
xchg
and
faddl
ss
mull
mov
shrb
lds
outsl
xchg
mov
sbb
push
dec
je
shl
outsl
addr16
movsl
cltd
int3
test
sbb
lret
divl
sbb
pop
mov
and
in
xor
pop
push
fdivl
mov
mov
xor
inc
stos
arpl
icebp
or
push
es
mov
imul
nop
imul
xchg
outsl
mov
pop
xchg
lds
aas
pop
out
scas
adc
mov
adc
adc
leave
jns
pushf
jle
call
and
jp
mov
push
adc
cmp
mov
fsubrp
hlt
stc
inc
aad
push
iret
mov
cltd
aas
repz
push
adc
test
and
sub
out
push
cltd
in
cmp
jmp
int
xchg
pop
enter
mov
mov
scas
clc
dec
and
fiadds
ror
push
fldenv
xchg
in
adc
sub
mov
sub
mov
push
jmp
cmp
cld
cmp
jo
ja
insl
mov
mov
sbb
std
insb
xchg
int3
lds
das
and
jae
cmp
sbb
out
aaa
ss
pop
dec
adc
clc
dec
mov
nop
cmp
add
insl
dec
jno
inc
push
inc
mov
fwait
in
aad
add
cmp
cmp
cmpl
jge
sub
bound
dec
scas
cmp
cld
mov
enter
xor
pop
xchg
and
stos
test
rorb
jmp
xchg
adc
ret
mov
mov
jae
addr16
popf
sub
imul
movsl
push
jle
xchg
mov
stos
aas
mov
add
and
push
aas
dec
or
xchg
in
pop
nop
pop
inc
scas
fstl
sub
sub
mov
add
lods
ud2
cltd
cmp
mulb
sbb
xchg
cltd
les
fsubl
pushf
add
das
nop
in
mov
std
jbe
xchg
xor
sub
and
outsl
fistl
and
addr16
jmp
lock
stos
rclb
sbb
lea
dec
out
mov
lcall
into
push
push
inc
jne
ficoml
push
test
add
lock
outsb
xchg
inc
xchg
hlt
fstps
sub
insb
aam
stc
push
inc
cmpb
push
cmp
out
mov
sti
aas
add
jge
pop
push
mov
pop
pushl
adc
push
adc
lret
dec
xor
xor
ljmp
cmpl
inc
push
ror
mov
inc
push
inc
xchg
adc
ds
imul
es
push
mov
ret
adc
mov
jl
hlt
jmp
mov
pop
dec
push
mov
lods
out
movsl
out
rcl
jmp
sbb
dec
outsb
xor
mov
mov
pop
jmp
jae
add
iret
bound
fsubrl
sub
jae
enter
inc
xor
aaa
sarb
jns
test
sub
leave
lock
jg
inc
push
rsqrtps
cmp
sahf
addr16
xchg
or
inc
mov
nop
rep
pop
mov
enter
lods
inc
icebp
sahf
testb
sbb
inc
sbb
adc
xchg
pop
jmp
push
and
ss
jbe
loope
add
std
mov
mov
stos
pop
mov
test
adc
lcall
ss
clc
xchg
mov
cmc
mov
push
lea
pop
mov
xchg
xor
push
mov
incb
cmpl
int
cmp
xlat
inc
ret
std
test
out
add
adc
push
fisubrs
jno
jnp
int3
cmp
mov
jo
cld
popf
mov
imul
xchg
shrl
idiv
pop
and
pop
sbb
adc
cmp
lock
int3
dec
nop
mov
or
rcll
push
and
xor
mov
leave
mov
xor
stos
cmpsl
in
iret
push
aam
into
pusha
popa
sti
mov
ret
inc
and
je
iret
xor
xchg
push
test
mov
inc
add
test
leave
cmp
inc
movzwl
addr16
jl
mov
insb
dec
lods
aam
adc
xor
adc
jmp
mov
mov
push
test
dec
dec
push
into
out
mov
add
jbe
lods
cmpsb
incl
out
or
fists
xor
in
cltd
pop
icebp
jnp
shll
sbb
sub
fstpt
jmp
mov
loope
cwtl
mov
jbe
out
mov
inc
mov
push
stc
inc
pop
push
gs
lcall
inc
pop
std
iret
mov
sbb
mov
xor
sub
in
je
fildl
adc
sub
movsb
ljmp
push
outsb
test
add
mov
int3
xchg
repnz
pop
aas
scas
jmp
mov
xor
mov
loope
faddl
out
push
nop
xchg
movsl
popf
pop
pop
cltd
iret
leave
mov
mov
rcl
sub
in
mov
cwtl
outsb
push
negb
lea
xor
cwtl
cmp
in
dec
ret
cmpsl
shrb
inc
scas
or
dec
ret
sbb
subb
fucomip
aad
cs
xchg
xchg
dec
jns
rcr
arpl
cs
and
jbe
pop
sub
lods
xor
sub
cli
jle
jbe
add
add
clc
and
mov
lds
xchg
stos
jecxz
add
out
in
fdivp
mov
insb
mov
mov
mov
fsubl
lock
mov
fimull
push
sub
cmp
cmp
callw
cmp
adc
pop
sub
jp
sti
ja
hlt
ljmp
hlt
out
jmp
inc
push
dec
das
ljmp
lret
xchg
daa
jg
mov
insb
jecxz
mov
stc
jbe
cmp
or
xchg
in
xchg
jno
inc
fsubrl
das
push
sbb
dec
insl
fmull
movsb
dec
std
or
pop
mov
test
fadds
ficompl
mov
xchg
test
mov
jmp
adc
leave
in
lcall
mov
lahf
shlb
mov
ret
or
push
filds
vmovntps
mov
push
insl
idivb
inc
cmp
mov
aaa
xchg
aad
fcmovbe
and
sbb
jmp
mov
pushf
lcall
xor
es
push
lcall
adc
jae
insb
scas
ret
mov
jb
adc
es
icebp
popf
nop
sub
sbb
push
mov
xlat
cwtl
cmp
andl
fnstsw
mov
inc
push
es
gs
jo
lods
pop
aas
push
mov
inc
loope
xchg
inc
mov
shlb
xor
lret
push
leave
js
adc
insl
stos
cs
popf
sub
mov
es
xchg
movsl
sarb
into
or
fidivs
xchg
stos
or
fnstcw
sub
pushf
or
in
ja
iret
leave
pop
xchg
pop
ljmp
or
js
xchg
add
int
lods
stos
es
dec
dec
push
jnp
mov
call
ficompl
cmp
lods
stos
sbb
aas
cmp
lahf
idivl
mov
mov
ret
adc
stos
and
shll
and
inc
js
arpl
stos
fisttps
mov
cmp
nop
aas
jnp
mov
mov
or
mov
test
daa
or
xchg
test
hlt
jp
testb
imul
shll
inc
mov
mov
mov
mov
repnz
pushf
mov
ja
mov
adc
insl
fildl
daa
dec
jle
outsb
lds
imul
push
aas
mov
push
sub
shrl
or
mov
mov
daa
mov
rclb
ja
pop
xlat
addr16
repnz
add
cmp
cmp
mul
mov
mov
fs
mov
jmp
sti
cmp
es
lahf
sbb
jl
in
mov
dec
test
push
out
fstpt
cmpsl
fistpl
xor
xchg
fdivrl
xchg
mov
mov
mov
mov
dec
inc
jo
xchg
insb
mov
int3
sbb
rol
test
dec
xchg
pop
xchg
and
sub
rolb
push
lock
mov
pop
in
arpl
and
js
fldenv
xchg
imul
pusha
frstor
rclb
pop
jp
sahf
lret
jecxz
sub
mov
leave
int3
pop
cs
mov
insl
ret
fld
test
push
sbb
pushf
imul
imul
or
xor
cli
rcll
jb
cwtl
jp
fsubrs
aaa
sti
inc
mov
jle
cli
ds
lea
test
lock
aaa
mov
xchg
push
arpl
pusha
int
out
push
push
scas
andb
and
fs
lock
fldt
or
rol
inc
sub
mov
or
cmp
loop
test
dec
out
adc
test
pop
out
fsubrs
popa
call
rcll
ret
and
jmp
mov
scas
repz
jge
dec
push
dec
mov
pop
test
or
pop
sar
leave
push
dec
stc
jp
pop
stc
inc
ja
mov
adc
jbe
adc
loope
pop
sbb
into
xchg
sub
jnp
rclb
xor
mov
jae
js
ds
cmp
xor
sub
daa
push
test
es
mov
mov
push
test
sub
lret
aam
rorl
fwait
loopne
test
lahf
mov
lock
dec
pop
adc
add
push
xchg
push
jmp
jno
cmp
out
mov
stc
cmc
adc
or
xlat
or
sahf
cld
push
xchg
outsl
div
insl
subl
pop
call
adc
adc
mov
lods
xchg
adc
push
and
mov
dec
ficoml
jl
xor
inc
jo
dec
mov
cmc
outsb
dec
mov
pop
call
lods
test
xchg
lods
lret
leave
mov
sub
out
mov
je
inc
in
aad
pop
repz
les
ret
sub
in
inc
out
mov
in
lret
cmc
int
jne
mov
imul
cmp
hlt
add
cmp
bound
xor
add
mov
bound
sti
xlat
jmp
insl
loop
push
pop
adc
test
and
mov
movsb
lret
sti
loope
push
jmp
hlt
sub
addb
gs
mov
push
push
lea
adc
mov
jle
dec
outsl
leave
addr16
cmp
mov
ss
push
fsubrl
and
movsl
lods
fidivs
xchg
dec
movsb
cmp
mov
push
lea
sbb
int
out
bound
dec
lock
loopne
xchg
scas
test
fdivl
shrl
out
push
dec
cwtl
cmp
dec
and
sbb
or
arpl
push
out
js
adc
dec
xor
jl
pop
aad
xor
cli
ret
in
xor
push
out
popa
arpl
inc
test
push
xchg
add
ficomps
xchg
and
pop
mov
and
pop
movsl
and
xor
mov
xchg
cmp
mov
faddp
push
jo
dec
scas
subl
cmpsl
lea
pop
cmpsb
and
pop
imulb
mov
or
push
lods
rcrl
pushf
or
cmpsb
cmp
and
test
test
imul
adc
in
xchg
add
ds
ss
jge
xor
add
popf
mov
sub
lods
xor
mov
pusha
in
xchg
call
jp
and
rolb
mov
push
int
fsts
mov
xor
iret
or
scas
or
shlb
mov
pushf
dec
or
pop
push
xchg
cmp
addr16
call
cltd
pop
jmp
filds
sub
nop
clc
and
fisttpl
ja
aad
push
rolb
fisubs
mov
jo
cwtl
scas
adc
or
nop
pop
add
jbe
pop
ret
dec
stos
xlat
int
repz
add
insl
adc
popa
cmp
mov
in
or
rcr
cmpsl
push
sbb
xor
jns
sub
mov
mov
std
or
xchg
loope
sub
js
xor
cmpsb
push
push
inc
push
out
mov
or
div
xchg
sub
std
add
sub
adc
inc
xchg
cmp
repz
nop
out
inc
xchg
fs
cmp
push
popf
jmp
xor
adc
jmp
lods
jb
outsb
xchg
lds
inc
mov
pop
std
mov
xor
adc
jle
loopne
sub
or
cmp
jne
scas
divb
push
cmp
pop
out
out
pusha
aam
or
inc
pusha
daa
xlat
negl
sub
cmp
xlat
imul
sub
out
push
stos
pop
sbb
stos
ror
popa
push
jnp
out
sti
jecxz
or
jo
scas
xchg
icebp
sbb
bound
cld
insl
dec
mov
mov
inc
jle
sub
je
and
shl
out
and
and
test
pop
or
sbb
add
popf
mov
xor
je
cmp
xchg
or
fwait
mov
insb
scas
mov
dec
mov
cmpsl
dec
bound
lods
fcmovu
cli
cmpxchg
stos
push
sub
loopne
push
or
pop
das
dec
jbe
xchg
xchg
jmp
xor
xchg
xchg
ret
faddl
mov
mov
pop
fnstcw
cmp
ljmp
shll
mov
and
pop
push
lods
out
adc
xchg
faddl
fnstenv
pop
sarl
fadds
loope,pt
repz
xor
cld
mov
and
inc
fwait
mov
and
pop
mov
dec
jecxz
xchg
lods
jg
dec
cmp
pop
lret
inc
test
cltd
xchg
dec
dec
xchg
movsl
xor
xor
adc
aas
aam
and
popf
jb
clc
icebp
lock
cmpsl
dec
jno
push
insl
xchg
mov
imul
sbb
iret
mov
sub
xchg
inc
int
nop
fadds
ret
pop
inc
xchg
cmc
adc
bound
loop
xchg
or
in
sbb
jb
add
cltd
add
cmp
leave
aaa
adc
xor
ljmp
xor
lock
nop
fwait
mov
sbb
cmp
push
adc
fnstenv
ja
sub
jbe
xchg
jl
mov
inc
dec
lods
imul
ud0
jmp
add
out
pop
test
push
imul
and
sbb
push
mov
push
add
imul
aaa
jns
or
adc
icebp
jmp
stc
pop
add
in
cmp
lret
mov
jne
rclb
rorl
and
add
dec
dec
cmp
sbb
jb
fnsave
adc
adc
cmp
mov
mov
pop
arpl
inc
and
in
aas
add
add
mov
js
sub
or
cmpsb
pop
jg
sub
insb
xor
cmp
mov
dec
rclb
mov
mov
cmp
popf
mov
aas
loopne
dec
into
lahf
mov
lock
add
add
inc
xchg
enter
outsl
out
xor
pop
inc
sub
push
add
pop
dec
lret
out
jmp
shll
repz
jg
shrb
loope
icebp
test
mov
or
fimull
jae
xchg
mov
cwtl
mov
xchg
jb
xchg
fadd
in
movsl
dec
or
lahf
clc
fdivr
xchg
icebp
pop
sbb
iret
test
mov
je
jnp
sbb
mov
pop
push
pop
lods
sbb
es
shll
jg
push
imulb
adc
adc
out
nop
stos
in
loopne
push
and
fstpl
or
add
lds
in
insb
or
dec
rcll
xchg
mov
outsl
fidivs
xchg
test
sub
lods
pusha
movsb
push
mov
xor
jg
gs
nop
jno
jne
aas
adc
imull
xchg
cmp
mov
mov
xor
pop
push
lcall
aas
ficoms
cmp
xchg
cwtl
cmp
xor
inc
loopne
ret
hlt
rcrl
aas
lret
sarl
xor
ja
xchg
out
addl
testb
push
push
lods
add
insb
pushf
push
sahf
arpl
fcomps
js
test
inc
sbb
mov
out
mov
out
inc
sub
adc
jge
xchg
mov
jae
or
js
cli
orl
shl
outsb
aad
outsl
and
pop
xchg
scas
adc
or
mov
cmpsl
pop
out
daa
inc
dec
in
inc
dec
ss
aaa
mov
mov
ljmp
jo
scas
xchg
shufps
pop
andb
and
std
or
xchg
fdivrs
clc
imul
shrl
mov
pop
in
test
int3
or
jle
adc
cmp
notl
out
xorl
aad
push
faddl
rolb
stos
adc
mov
xchg
aam
andb
inc
mov
ja
mov
repnz
nop
ss
and
sbb
rcrb
pop
and
shrl
out
je
mov
inc
fidivrl
inc
pop
andb
fstpl
inc
out
inc
adc
sub
sbb
scas
aas
mov
xor
sub
mov
pop
pop
arpl
sahf
cmpsl
push
push
test
fcoml
insb
adc
out
mov
fmull
or
lcall
jmp
xchg
loopne
jge
cmp
popa
push
pop
lcall
in
das
popf
push
les
dec
dec
push
cmp
int3
pushf
inc
insb
lahf
pop
sbb
stos
lds
xor
xchg
stc
gs
and
ds
jl
in
nop
lret
mov
cs
mov
pushf
stos
push
in
dec
pop
sub
push
or
mov
xor
int3
push
jl
dec
dec
movb
inc
clc
fsubr
hlt
push
mov
mov
inc
pop
push
mov
mov
mov
int
insb
pop
in
dec
add
aas
jmp
ja
cld
push
dec
sub
push
hlt
fmuls
fcoml
sub
adc
cld
dec
stc
jp
ret
out
mov
adc
pushf
fiadds
lcall
fcmovnb
into
out
outsl
movsl
out
dec
lods
sbb
pop
lret
pop
lahf
movsl
dec
sbbb
add
ret
pushf
fmul
ret
and
cld
cli
cmpsb
mov
lahf
fcoms
lcall
dec
lahf
pushf
fsts
add
push
xchg
and
in
subl
mov
icebp
pop
and
mov
cs
imul
testb
sbb
in
stc
fbld
mov
add
popf
bound
cmc
mov
sbb
mov
mov
mov
iret
dec
adc
add
into
sbb
imulb
or
push
mov
pop
sub
in
add
arpl
mov
cmpsb
out
push
divb
mov
push
jae
ret
aas
xchg
jge
mov
repnz
nop
adc
jecxz
mov
cmp
or
mov
xchg
popf
dec
bound
popa
mov
stos
les
sbb
cwtl
xor
xor
pop
js
push
cld
mov
push
fisttpll
lock
mov
fsubl
aam
xor
cli
subl
adc
push
mov
es
mov
push
fbld
push
sub
stos
insb
xchg
addl
test
subb
jbe
push
pop
push
adc
outsb
and
out
inc
sbb
pop
xor
mov
dec
lds
push
jb
rol
imul
sub
mov
inc
aaa
pop
sti
dec
xlat
fnstsw
adcb
mov
sahf
mov
push
ret
leave
push
pop
imul
push
imul
pop
push
test
or
inc
dec
add
out
xor
sub
sub
pop
movsb
dec
popa
jnp
lret
movsl
xchg
inc
lea
mov
imull
mov
cmc
ret
mov
std
cmpsb
dec
jbe
das
cmp
xchg
mov
fcoml
or
jp
dec
fwait
imul
in
sbb
lds
out
sbb
imul
and
inc
push
inc
rcr
mov
pushf
rorl
iret
minps
test
test
dec
pop
inc
sbb
push
out
mov
sbb
ja
sti
out
ds
cmp
mov
add
inc
sbb
mov
xchg
ss
push
push
sti
or
bound
dec
rorl
out
mov
or
sti
cltd
adc
test
popa
in
push
repnz
nop
sub
mov
cmc
mov
aas
jecxz
or
xchg
mov
out
inc
aam
push
addr16
lock
dec
out
pop
push
clc
mov
mov
imul
lcall
fisubs
ljmp
cli
cmpl
add
out
sub
fwait
and
jnp
cmovno
aaa
das
pusha
sub
cs
loope
mov
inc
int3
mov
xchg
mov
ficoms
mov
ds
ret
scas
in
addr16
subl
roll
sbb
cmp
xchg
ljmp
test
mov
into
cmp
dec
mov
enter
dec
in
std
pop
and
imul
cmpsl
and
out
xchg
repz
lds
push
sbb
ficompl
xor
jecxz
movsb
ret
xchg
notl
in
les
cli
out
andl
jae
ret
sti
fstpt
push
push
xchg
movsb
inc
xchg
jae
adc
xor
dec
mov
pushf
addb
fwait
aam
inc
or
dec
pushf
pop
jp
cmp
aaa
imul
xchg
shll
mov
mov
lea
icebp
adc
mov
xchg
or
sbbl
in
cld
cmpsl
push
aam
orl
mov
mov
arpl
cmp
call
pop
pop
cmp
mov
jnp
ret
sbbb
lds
loop
jge
sbb
push
inc
mov
and
fcmovb
idivl
cmp
jg
and
sbb
xchg
das
stos
sub
insb
outsb
andb
inc
xchg
jb
add
and
clc
push
sbb
push
jnp
into
push
lret
cmp
mov
and
jne
sbb
or
and
in
add
xor
leave
scas
push
xchg
ja,pt
adc
jmp
data16
adc
outsl
mov
test
cmpsb
sbb
xor
je
fadd
jmp
shrb
xlat
aad
xor
jbe
push
xor
push
addl
dec
push
sbb
or
add
loop
scas
jae
notl
movsl
js
mov
xchg
scas
mov
pop
repz
mov
out
pop
scas
pop
jb
jl
shrl
in
sub
enter
xor
dec
mov
push
lods
mov
push
cmp
mov
or
movsl
out
xchg
mov
scas
pop
popf
outsl
push
jbe
loopne
stos
mov
js
add
mov
ds
xor
shll
jno
fcmovne
push
shlb
into
push
mov
adc
cs
setae
mov
xor
lock
cmp
jns
int
sbb
hlt
inc
jo
sbb
cmpsl
xchg
mov
pop
adc
push
dec
lcall
fisttpl
mov
xor
lret
pop
jae
lret
das
push
xchg
and
aaa
lret
lods
jno
and
lock
lahf
ds
imul
and
test
pop
push
aaa
or
insl
inc
xchg
pop
in
outsl
mov
pop
cltd
xchg
into
pop
or
sub
mov
pushf
or
xchg
gs
outsb
mov
jl
repz
pop
sbb
dec
jg
adc
adc
or
sbb
mov
add
or
or
sbb
xchg
fmulp
inc
xlat
mov
push
xor
in
out
call
jg
int3
inc
loopne
or
sub
lods
cwtl
outsl
push
mull
mov
mov
lret
xor
enter
mov
xor
nop
popa
sub
enter
mov
inc
out
call
cmp
stc
cmp
fildl
mov
mov
pop
or
mov
call
adc
or
mov
and
xchg
movntq
inc
jne
push
push
and
iret
sbb
mov
popa
daa
add
pop
repz
sbb
rolb
outsb
daa
mov
jle
je
xor
int3
or
adc
mov
pop
cmpsb
mov
pop
iret
pop
out
lock
and
lods
sub
fwait
mov
pop
xchg
aam
out
cmp
dec
inc
sbb
jnp
jle
jp
out
pop
xor
push
movsb
mov
das
stc
xor
push
sub
iret
int3
pop
call
sub
call
xchg
stos
dec
mov
push
mov
out
into
and
or
sbb
call
push
pop
inc
rcll
pop
icebp
or
xchg
xor
inc
xor
mov
jle
jns
scas
cmp
lds
inc
icebp
mov
push
push
push
cli
ds
rclb
arpl
ret
jl
je
jbe
movsb
dec
pop
scas
popf
in
jecxz
sub
ret
sti
orl
loope
jle
fldenv
mov
xorb
out
scas
lock
dec
dec
daa
es
hlt
jle
and
and
pop
mov
sub
mov
jp
xchg
out
je
mov
xor
or
pop
mov
mov
inc
iret
in
pop
pop
jo
jle
movsb
cmp
test
inc
ret
into
cmp
pop
out
popf
into
cmp
sbb
stc
mov
stc
dec
sti
adc
inc
mov
add
sbbl
inc
lds
push
push
shrb
fbld
xchg
sbb
cmp
mov
scas
lret
das
aas
inc
inc
mov
cmp
test
sub
mov
lahf
lock
jno
das
mov
fs
mov
leave
inc
push
in
and
xchg
jmp
sti
pusha
aas
jl
lcall
cwtl
mov
lods
jle
enter
mov
and
mov
mov
xchg
test
dec
in
test
pop
arpl
jp
sbb
test
xor
rclb
dec
lahf
jl
push
out
repnz
inc
pop
nop
shrb
out
iret
fsubl
dec
sbb
pop
andb
loop
popa
sub
cli
dec
je
and
and
arpl
push
ljmp
sub
out
pop
mov
pushf
aam
arpl
push
sub
mov
std
xchg
pop
sub
xchg
add
enter
fisttpl
enter
push
stos
dec
pop
je
lds
push
aaa
sub
incl
add
sbb
ficoml
aam
xor
xchg
cmp
push
loope
add
jge
inc
daa
fucomip
into
rol
dec
bound
jo
rcrb
movsb
lods
xchg
out
lods
sbb
clc
xchg
push
and
mov
imul
and
scas
mov
outsb
aam
dec
mov
jne
and
fbstp
add
sti
or
out
push
loop
icebp
cmp
adc
adc
out
mov
data16
std
jbe
push
inc
inc
inc
test
cmp
sub
das
pop
pop
loope
sub
jecxz
int
push
idivl
sbb
lods
sti
and
ret
or
add
lahf
cwtl
and
ret
mov
sarl
dec
xor
mov
xchg
cli
fnsave
push
aad
cmpsl
cld
incl
jmp
xor
pop
and
popa
and
push
jg
sbb
clc
xor
add
movsl
sub
dec
xorb
jle
dec
sbb
outsl
xchg
xchg
inc
adc
sub
jp
ret
clc
and
push
jg
dec
sub
pusha
gs
aad
je
sbb
leave
gs
adc
inc
or
sbbb
cmp
mov
sub
push
xor
xlat
jnp
push
dec
cld
add
out
mov
mov
outsl
imul
pop
pop
mov
fstpt
stos
lock
into
push
bound
xor
sti
test
sbb
add
test
xchg
push
dec
hlt
fimull
inc
out
or
cmp
mov
lss
xor
xor
mov
lea
mov
fisubs
shr
sbb
mov
mov
pusha
ret
add
icebp
out
pop
jo
dec
out
sbb
repnz
jnp
xchg
add
into
push
mov
dec
and
sbb
add
sub
xor
lods
jmp
and
or
fdivl
inc
gs
sub
sbb
les
adc
sub
push
inc
mov
sub
dec
xor
push
and
push
jne
arpl
sbb
adc
in
sarl
aad
loope
cmp
aas
and
and
and
xor
push
xor
mov
int
add
fldt
jge
lcall
xchg
mov
push
idivl
mov
push
cmp
test
cmp
idivb
iret
cmpsl
and
pushl
jl
add
cmp
subb
or
divb
rcl
mov
leave
xor
mov
popf
rcrl
test
cli
call
or
std
dec
pop
add
mov
jns
cwtl
test
js
mov
cmp
mov
pushf
inc
int3
xchg
sub
adc
mov
mov
pop
dec
pop
gs
mov
pop
sub
add
or
mov
addr16
mov
mov
rolb
adc
push
push
outsl
sti
or
out
dec
jb
inc
fs
xor
xor
scas
scas
adcb
iret
pop
push
int
lods
int3
or
push
insl
fadd
sbb
and
mov
xchg
mov
fistpll
pop
std
aaa
aaa
dec
jp
data16
sarl
push
stos
mov
add
icebp
movsb
or
out
test
xor
mov
movsb
pop
push
pusha
mov
jecxz
sbb
xchg
popf
push
sahf
inc
ds
sbb
push
xchg
or
and
aaa
arpl
fisubl
push
mov
pop
fisubl
bound
and
es
shl
pushf
inc
addl
fimuls
add
mov
daa
outsl
cld
cltd
fs
mov
inc
add
hlt
into
pop
xchg
pop
call
add
rcrb
cmpsb
popa
and
ror
fimuls
pop
pop
stc
insb
jne
icebp
pop
inc
enter
stc
mov
clc
and
pop
inc
jp
adc
xor
inc
ret
mov
ret
enter
jne
adc
cld
push
test
mov
sub
fdivrl
lret
push
push
dec
jae
jecxz
add
icebp
nop
lcall
loop
scas
and
cmc
push
jle
shl
decb
mov
xchg
fdivs
into
xor
movsl
xor
movsl
add
js
xor
lds
pop
leave
inc
loope
dec
mov
xchg
ss
xchg
jae
or
subl
lret
xchg
or
or
xor
ss
xor
test
orl
cld
lods
push
add
mov
and
xchg
fs
ret
jecxz
mov
popl
aam
jge
les
fs
fstl
ja
dec
xor
cs
xlat
jnp,pt
jge
push
inc
sub
cmc
pop
pusha
push
ljmp
fdivr
cli
push
out
fcmove
xor
dec
popf
jbe
das
add
enter
push
test
mov
ljmp
iret
ljmp
out
subb
cmpsb
fs
sub
inc
mov
je
jmp
or
jle
test
cmpsl
jl
push
inc
sub
mov
xor
fs
bound
pusha
push
cmp
push
ret
popf
add
push
inc
lds
mov
jae
and
xchg
xchg
push
lds
jmp
mov
pop
mov
les
fidivs
jmp
jae
cmp
mov
scas
loope
les
push
adc
fsubl
fs
les
movsb
push
and
sbb
jle
test
dec
pop
add
sbb
es
iret
into
testl
repz
sti
sbb
pop
and
insl
sub
push
sub
sbb
dec
push
xorb
pop
push
into
mov
loopne
and
outsb
mov
add
in
xchg
xor
xchg
int3
sub
in
sub
xor
es
mov
mov
sti
testl
dec
cmp
lcall
int
arpl
iret
push
sbb
xor
cmc
cld
dec
das
push
sbb
addr16
das
shrl
xchg
or
les
inc
sbb
jno
inc
aam
and
jns
shll
nop
mov
nop
cmp
addr16
lcall
out
sub
mov
and
movsb
jg
clc
test
xor
icebp
sub
cltd
xchg
dec
inc
jg
subl
data16
aaa
sub
shll
and
shl
fisubs
into
push
movsb
int3
sbb
mov
nop
dec
pop
lods
inc
fsubrs
jns
aad
test
ss
mov
lcall
pop
hlt
push
std
add
push
xor
adc
add
jb
push
aaa
ja
or
in
insl
xchg
aas
sub
andb
mov
inc
das
pop
ss
add
popa
cmpb
mov
pop
scas
mov
ljmp
loopne
mov
push
jb
rcr
or
repnz
mov
inc
shl
loope
pop
fcompl
lret
pop
pop
ljmp
bnd
icebp
andl
in
fistpll
insb
lods
mov
rclb
add
out
add
inc
aam
movsb
and
int
pop
xor
mov
test
cmpsb
cld
push
jb
popf
aam
test
rorb
adc
dec
dec
les
add
pop
and
add
dec
mov
mov
inc
repnz
or
mov
add
test
cmp
repz
gs
mov
cld
mov
pop
cmp
adc
add
rolb
or
cwtl
mov
bound
mov
cwtl
cltd
ljmp
jns
cs
xchg
ret
jmp
cmp
addr16
popf
adc
sbb
cmp
gs
cmp
stos
or
mov
pusha
lahf
or
inc
jb
imul
pop
push
jg
aas
push
fistpll
pop
mov
shlb
mov
cmpsl
sbbb
addr16
pop
push
mov
sbb
notl
cmpsb
mov
div
cmp
sbb
push
mov
xchg
mov
outsb
ljmp
pop
cmp
inc
cmp
sbb
push
in
sub
call
and
xchg
push
mov
mov
sbb
jo
lods
daa
push
lods
xchg
mov
fistpll
aad
outsb
addr16
out
pop
xor
cmp
cwtl
cmpsb
mov
imul
shrl
mov
bound
arpl
dec
outsl
repnz
adc
dec
xor
pop
sarl
aas
add
cmp
and
pushf
xchg
adc
dec
jno
add
push
and
aad
outsl
ds
loopne
mov
dec
aaa
fstpt
and
dec
ret
mov
aad
mov
jge
cmp
lods
movsb
fs
repnz
xor
outsb
mov
sbbb
mov
mov
out
adc
push
imul
stos
dec
in
sub
subps
rcrl
fwait
in
push
push
jge
insb
adc
jge
aaa
add
stos
jne
rcll
mov
cmpsl
lds
out
ljmp
mov
popf
jecxz
mov
cmc
adc
outsl
and
hlt
pop
mov
repz
out
add
adc
in
dec
std
and
cmp
sbb
lcall
data16
mov
mov
orb
ret
divl
pop
jp
xchg
adc
inc
ljmp
push
sub
test
jg
outsl
lret
lahf
dec
sbb
cwtl
push
pusha
dec
call
mov
testl
dec
ds
push
sub
popa
mov
fistl
jge
scas
xchg
data16
imul
inc
pushf
loopne
jge
loope
out
mov
imul
fisubl
loop
insl
and
sti
cmpsl
shl
pop
dec
xchg
pop
xchg
aam
arpl
nop
insb
icebp
jl
cli
adc
daa
fisttpll
jle
mov
pop
pop
es
adc
rorl
mov
mov
in
jb
clc
mov
xchg
jmp
fwait
pop
mov
cltd
iret
clc
and
idivb
pop
xor
mov
and
xor
test
add
jmp
insl
sbb
pop
int3
ret
pushf
lds
jae
fdivs
fwait
into
lods
shl
fwait
in
lcall
mov
test
sub
push
cli
mov
add
in
sbbb
imul
jp
sbb
inc
rcrb
cli
loope
aaa
lahf
loopne
dec
dec
mov
dec
icebp
fisubs
fstpl
sahf
filds
cmp
inc
in
cmpsl
ret
or
in
or
test
cli
xlat
lahf
jb
cs
xor
jp,pn
shrl
pop
jns
mov
jne
pusha
jecxz
push
js
stos
test
dec
and
addb
sahf
push
lahf
movsl
int
xchg
cmp
fdivs
mov
loope
mov
cwtl
dec
adc
inc
push
sub
data16
jae
loop
outsb
gs
mov
fbstp
jo
sbb
or
adc
xchg
xorl
push
roll
dec
cmpsl
adc
das
mov
mov
scas
xlat
vsubpd
adc
into
ret
lret
mov
push
sub
inc
mov
pushf
rcl
jmp
mov
roll
adc
testb
pop
xchg
mov
push
add
push
icebp
outsb
fdivp
mov
aam
shll
imul
ljmp
jp
inc
dec
pop
adc
sti
sahf
push
push
ja
mov
clc
and
shl
and
mov
sbb
int3
scas
jle
out
jbe
filds
xchg
jg
scas
inc
sbb
or
jg
aas
pushl
lahf
jmp
mov
fisttpll
sbbl
xchg
icebp
cmp
add
ret
dec
xor
mov
insl
sarb
pop
insl
out
inc
sbb
adc
mov
sub
lods
dec
dec
mov
pop
mov
jecxz
jmp
jg
jbe
test
xchg
mov
in
popa
inc
inc
and
jno
push
cmp
cmpl
out
stos
in
inc
enter
les
leave
inc
mov
cwtl
loope
movsl
outsl
pop
xchg
clc
je
xor
addr16
int3
fistpl
mov
test
and
inc
mov
stos
add
orb
inc
cmp
mov
scas
imul
mov
std
xchg
inc
sahf
rolb
in
cmp
mov
les
mov
mov
out
mov
imul
sbb
jb
push
jle
cmc
jne
push
mov
test
cmpsb
or
das
sbb
add
lahf
movsb
pop
clc
jae
test
shll
sahf
inc
pop
sub
sbb
out
in
push
std
pop
scas
xchg
decl
inc
sub
bound
jbe
dec
rorb
aam
mov
into
cmpsb
sub
dec
cli
popa
or
cmpsl
pop
movsl
or
or
subb
cmpsb
adc
outsb
sbb
out
xor
arpl
cmove
push
xchg
inc
xchg
test
push
fwait
je
pop
sbb
std
cmp
jo
enter
inc
fucom
mov
jmp
shll
mov
int
push
jecxz
mov
dec
lods
mov
iret
add
loope
pop
jo
inc
mov
repz
mov
xor
decb
insb
fcoml
pop
mov
pop
movsb
ljmp
xchg
push
adc
stos
push
test
rorl
int
js
push
dec
fldenv
mov
ret
cltd
movb
or
inc
dec
mov
aaa
cmp
scas
lods
adc
fwait
les
testl
daa
or
mov
scas
lds
sbb
iret
push
fwait
insl
lock
imul
jnp
jmp
icebp
add
in
mov
or
divb
dec
ret
jbe
pop
out
dec
jecxz
outsl
pop
aaa
mov
adc
sub
rorb
lret
notb
jmp
sbb
mov
xor
mov
mov
xchg
push
fwait
pushf
xchg
sbb
mov
in
jnp
dec
sub
xor
in
jno
fdivl
mov
out
loope
lret
pop
inc
mov
int
cmp
fs
and
dec
cmp
in
fbld
daa
push
cmp
jle
push
adc
lds
cli
and
cmpsb
xor
cmp
jno
int3
cld
clc
jmp
dec
fimull
gs
mov
scas
aas
test
pop
sub
mov
or
cmp
les
bound
xchg
sub
daa
ds
stos
out
inc
mov
mov
pop
idivb
fnstenv
adc
mov
sbb
int
lret
cmp
in
xor
push
inc
out
ret
aad
jb
cli
adc
pop
int
adcl
int3
mov
movsb
aad
out
loope
insl
jl
popf
iret
or
out
divl
adc
and
inc
imul
es
xor
test
stc
ja
sub
pop
test
xor
cmp
pop
gs
mov
jle
mov
pop
mov
dec
rolb
xor
in
mov
mov
in
emms
adc
inc
cwtl
cld
lea
outsl
ds
pusha
pop
sbb
data16
cmpsl
ss
sub
shlb
out
ret
xchg
movsb
xchg
sbb
subl
xor
mov
incl
lahf
push
jns
lods
xor
fdivrs
arpl
fnsave
cmp
stos
cmc
push
dec
test
sbb
adc
mov
gs
pushf
mov
cmp
fwait
dec
addr16
ljmp
sub
or
sbb
push
push
or
jle
inc
es
cmc
adc
sbb
adc
cmp
mov
sbb
loop,pt
pop
cmpsl
mov
and
pop
nop
aam
daa
dec
dec
cmpsl
pop
ljmp
mov
int3
stos
and
mov
inc
mov
adc
lcall
in
dec
mov
cli
pusha
stc
ljmp
sbb
dec
inc
pop
push
push
cmpsb
push
in
push
or
xchg
daa
jl
sbb
insb
addb
insl
jg
or
cmp
lea
cmpsl
dec
mov
push
repz
aaa
xor
fsub
ljmp
rcl
data16
xor
call
pushf
pop
push
mov
loop
in
lea
adc
fadds
loope
xor
or
rclb
sub
lret
xchg
push
push
push
in
pop
in
add
aad
or
cmp
ret
ds
mov
xchg
pop
push
lea
data16
jmp
mov
clc
xor
and
jo
dec
imul
fdiv
mov
insl
pop
mov
dec
cwtl
out
push
pusha
pop
sbb
xchg
sub
push
inc
and
adc
push
subb
or
out
push
lods
fwait
scas
inc
xor
sarb
push
mov
lret
stc
and
bound
pop
loop
shrb
xchg
dec
shll
stos
sbb
js
sub
mov
shll
adc
sbb
mov
cmp
cwtl
call
icebp
adc
enter
xchg
ret
cs
mov
les
int
das
fnstsw
jbe
add
das
test
adc
call
xchg
hlt
movsl
leave
mov
std
add
inc
sub
enter
mov
mov
arpl
test
push
cli
scas
pop
sar
sub
mov
roll
sarb
cmp
aaa
jecxz
nop
hlt
add
addr16
mov
in
ds
inc
pop
pop
fbstp
es
aad
in
inc
test
pop
mov
sahf
and
sbb
lcall
or
adc
cmpsb
sbb
or
rep
and
inc
inc
imul
imul
xsavec
test
mov
add
mov
cmp
out
push
adc
sbb
rorl
xor
mov
inc
or
push
fistps
pop
loope
jg
jp
movsl
jmp
cwtl
hlt
push
repz
and
out
leave
out
inc
cmp
mov
repnz
cmp
imul
xor
inc
mov
dec
mov
std
add
aad
out
cltd
jb
add
and
shlb
jg
sub
mov
xor
and
pop
repz
fucomp
cmc
lahf
shrb
cmp
das
inc
jge
lret
bound
xor
cmpsb
clc
and
call
push
imul
popl
repz
arpl
sbb
leave
jle
and
addb
jle
mov
inc
icebp
sarl
jmp
add
pop
leave
loopne
pop
std
mov
push
cmc
lcall
out
out
push
scas
mov
adc
ret
or
out
mov
fmuls
repnz
test
lcall
jbe
push
and
dec
popa
movsl
mov
and
push
jbe
jp
pop
adc
gs
dec
cmpsl
mov
jmp
add
xchg
mov
lock
mov
test
rol
stc
xor
cmpsl
add
xchg
aas
jg
mov
lret
sub
lock
into
dec
sub
pop
js
jne
pop
ja
mov
hlt
test
sbb
popl
and
push
or
iret
xchg
mov
mov
enter
push
inc
xchg
inc
cmp
mov
addb
pop
nop
insb
pushw
dec
cs
fiadds
inc
popa
mov
sub
inc
ja
gs
cmp
xchg
cmpb
add
pop
movb
in
cmpsl
lds
or
roll
lock
sarl
mov
ljmp
or
jne
xor
xlat
cmp
daa
fadd
jb
push
pop
iret
iret
dec
mov
loopne
mov
lret
int3
and
cld
push
popa
or
subl
call
inc
mov
pop
mov
into
xorb
push
popa
in
cmp
mov
xor
mov
jbe
fbstp
test
mov
fiaddl
arpl
cld
dec
lcall
jae
jno
js
sub
jne
incb
pop
shlb
fcmovbe
enter
sub
sub
leave
mov
sti
idivl
jno
and
iret
xchg
mov
or
jp
push
stc
xor
test
stos
or
jmp
std
hlt
stc
jle
xchg
mov
jp
cltd
push
xchg
sbb
pop
xor
imul
mov
xchg
enter
or
ret
pop
jl
mov
neg
inc
fisttps
push
mov
push
lahf
push
movsl
add
ss
nop
call
out
loop
loopne
or
and
fimull
insb
aaa
cmp
add
sbb
push
lock
je
and
fdivp
or
xchg
jo
or
xor
loope
adc
sbb
pop
sub
out
xchg
sbb
push
test
sbb
fwait
pushf
pop
mov
jo
sub
sub
cltd
sbb
ja
or
je
int
lods
andl
push
dec
in
sbb
fbstp
leave
cmp
and
xor
cs
cmp
bound
jecxz
dec
mov
xchg
popf
imul
testb
or
shll
jbe
test
fs
add
in
mov
bound
sub
pop
dec
in
shl
dec
cwtl
sub
mov
sbb
or
aas
cmp
sbb
mov
push
push
inc
lahf
int3
fnstenv
cltd
adc
sub
cmp
jo
push
dec
cmc
outsb
test
xlat
pop
push
stos
push
inc
adc
je
das
xchg
push
mov
xor
ret
movsl
inc
cs
int
and
and
test
mov
and
lret
lcall
inc
loop
rol
sbb
aaa
add
cmp
push
or
and
fmull
scas
fistpl
cmpsb
cli
jge
push
lock
fsubp
jae
js
jae
or
xchg
push
xchg
or
xchg
and
mov
aaa
hlt
jnp
andb
cmp
jle
cmp
sbb
push
jbe
jo
mov
xor
jge
pop
gs
lret
pop
dec
adc
mov
jb
cltd
mov
and
cmp
xchg
rclb
mov
outsl
push
arpl
je
aas
adcl
call
xor
push
xor
dec
jae
pop
adc
xor
lahf
mov
pop
inc
aaa
pop
imul
lock
push
iret
jl
jg
iret
xchg
clc
push
add
add
inc
add
and
jbe
cmp
adc
xchg
mov
sbb
enter
cmp
dec
outsl
or
lds
mov
pop
cmpsl
cmp
mov
lds
add
iret
test
mov
push
loopne
dec
and
lret
out
mov
push
inc
clc
push
push
loopne
xchg
js
pop
dec
pop
dec
aad
test
scas
cld
addb
test
adc
shl
add
jmp
add
test
cli
shlb
pop
and
rcll
or
stc
iret
xchg
push
adc
rcll
xchg
mov
out
cmpb
roll
push
fs
sub
push
dec
mov
insl
std
call
sbb
out
xlat
imul
and
out
and
test
fwait
mov
mov
mov
mov
jo
adc
cmpsl
mov
cmp
jns
addl
pusha
mov
jo
je
adc
and
sub
mov
pushf
in
rcll
jl
adc
inc
shr
les
cli
arpl
add
daa
les
mov
fsubs
xchg
mov
dec
cmp
xchg
xchg
sub
dec
xor
jmp
lds
outsb
pop
push
jmp
dec
xchg
lods
add
inc
fcmovnbe
fists
clc
imul
mov
jg
mov
mov
add
jne
add
sub
out
insb
push
bound
push
pop
cltd
cmp
cld
mov
xchg
decb
pushf
jecxz
push
out
or
lock
push
ss
xor
ja
or
loop
in
loope
xorb
dec
inc
xor
cmp
mov
mov
rclb
arpl
aad
test
xor
mov
sub
mov
es
sbb
pusha
add
add
mov
aas
and
shlb
sbb
mov
push
popa
dec
in
clc
clc
cwtl
inc
sub
cmpsl
dec
inc
pop
lea
mov
mov
dec
dec
sbb
mov
xor
lods
cmp
sbb
push
or
or
jb
jg
sub
pop
cmp
lahf
cmc
dec
repnz
fwait
std
mov
jle
inc
adc
and
outsb
xor
and
orl
inc
fnsave
fidivs
je
icebp
and
icebp
push
mov
sub
mov
xor
pop
insl
stos
ficoml
jb
push
jmp
mov
imul
and
pop
mov
jae
jge
roll
or
jp
adc
jnp
adc
jmp
aaa
and
xchg
mov
add
lahf
pusha
aaa
xor
out
lods
sub
orl
shrb
dec
addr16
add
mov
mov
out
imul
sbbb
push
andb
jo
stos
lods
xchg
iret
out
adc
rcrb
mov
ret
lock
mov
stos
mov
aam
aaa
push
aaa
add
mov
in
subb
sub
dec
mov
inc
adc
push
or
rcll
enter
jg
sbb
lcall
rcll
ds
out
mov
lods
out
push
outsl
ret
je
sahf
inc
cmp
push
xchg
ficoml
mov
sub
adc
js
jnp
xchg
and
popf
pop
fdivs
push
cmp
xchg
loope
outsb
xchg
jmp
loop
in
xchg
ret
je
and
cld
loop
and
sub
scas
ljmp
out
scas
shl
mov
fwait
add
push
sbb
shll
sbb
cld
pop
and
mov
mov
repz
sub
es
ret
adc
int3
roll
and
mov
xlat
dec
cmp
adcb
cmp
adc
aas
jo
shrb
mov
ja
roll
lods
int3
pop
clc
test
pop
pop
xlat
or
mov
test
rcrb
push
jl
mov
lock
push
test
clc
cmp
ret
cmp
or
adc
mov
xor
cmp
mov
mov
sub
xor
mov
daa
mov
mov
cs
jnp
push
cs
mov
jno
daa
lret
mov
jbe
ret
leave
je
push
leave
sbb
aaa
das
cmp
les
xchg
mov
pop
roll
sbb
arpl
jl
ljmp
push
cmp
push
cwtl
rep
scas
fcmove
lea
inc
add
or
scas
scas
add
xchg
repnz
stc
push
jmp
xchg
mov
sub
sbb
push
les
push
dec
ja
cmp
loopne
lods
xchg
loop
mov
fwait
cmc
pop
dec
inc
mov
adc
xor
out
pop
out
bound
xchg
and
pop
aaa
sub
push
leave
clc
push
imul
shl
clc
cmpsl
mov
stos
mov
sub
nopl
jo
pop
add
sarb
and
jl
mov
bswap
mov
scas
sub
and
lds
mov
inc
mov
mov
pop
nop
mov
cmpsb
fs
fadd
adc
inc
scas
fiaddl
mov
outsb
mov
test
adc
mov
fbstp
or
iret
int3
movsl
xchg
xchg
aaa
ret
movsl
cmp
push
outsl
inc
push
int3
add
add
xchg
cld
clc
xchg
stos
in
xchg
mov
sub
jle
jge
cmpsl
push
test
xor
mov
scas
sub
dec
jecxz
or
sub
push
popf
push
lods
jne
repz
imul
pop
sbb
lea
fmul
cmp
lret
test
rcl
lock
std
jge
mov
mov
dec
cmp
adc
or
test
shlb
cmp
mov
mov
ret
ljmp
icebp
inc
sub
scas
or
out
in
nop
movsb
scas
pushf
movsb
jl
rclb
test
es
add
stos
sub
add
rorl
push
xlat
xor
cld
idivl
inc
dec
jb
xchg
push
cmp
add
stos
pop
jo
shlb
pop
pop
int3
push
pop
cmc
test
xchg
sub
inc
sub
loopne
xchg
and
test
mov
hlt
sub
in
xchg
loop
fs
ficoms
sbb
xchg
test
mov
jnp
sahf
push
mov
je
cmp
and
jnp
stos
inc
loope
mov
les
lea
xor
cmp
subb
adc
lcall
sub
andb
mov
fwait
leave
or
lcall
ret
lods
loop
mov
mov
jb
add
movsl
dec
jo
xchg
cmp
lods
adc
xlat
mov
mov
aad
cmp
jo
pushf
fmul
in
inc
pusha
and
push
scas
lret
pop
or
adc
push
jnp
sub
or
mov
adc
filds
dec
ljmp
incb
xor
jae
ljmp
mov
cmp
jnp
or
out
push
shl
sbb
xchg
push
test
jne
push
mov
stos
pop
push
ljmp
mov
in
push
jb
inc
push
out
clc
inc
pop
mov
sub
add
es
insl
icebp
inc
out
js
pusha
add
mov
push
or
pop
ds
in
dec
clc
stos
fs
push
cmpsl
jns
ret
stos
mov
dec
and
mov
sbb
xchg
shr
xchg
ss
test
lds
js
decb
jo
scas
cwtl
mov
sti
mov
or
je
lret
dec
and
bnd
and
xor
push
fimuls
out
push
sub
fcomps
and
push
jl
and
add
inc
xchg
outsl
gs
lock
stos
xor
dec
push
lret
xchg
and
pushf
sub
out
pop
dec
movsl
iret
out
xchg
dec
testl
addr16
cld
mov
push
stos
stos
and
ja
mov
div
mov
inc
fscale
xchg
mov
idivl
ret
pop
repnz
ja
test
mov
nop
xchg
jne
push
push
pop
fidivrl
movsb
cs
mov
push
call
insb
lahf
fmull
xor
loopne
or
xchg
pop
mov
and
mov
mov
jo
jne
mov
movsb
jg
into
je
cld
aas
arpl
mov
push
push
ror
aaa
jb
dec
adc
fistps
adc
sub
int3
inc
arpl
enter
sub
jae
lods
dec
leave
rcrl
scas
inc
inc
test
jle
add
fdivrl
popf
and
test
mov
xlat
xlat
mov
into
cmp
and
sbb
mov
sbb
sub
psubd
xor
fisubrl
cli
aam
rcl
push
movntq
out
mov
adc
test
cmp
xor
jge
dec
lods
inc
fidivrl
inc
cmp
add
jo
unpcklps
xorl
ficoms
sbb
sar
push
nop
mov
mov
pop
add
icebp
clc
int3
push
sub
mov
lcall
sub
dec
lahf
movups
sub
insl
into
loopne
cmp
jl
push
cmp
add
xchg
test
mov
out
and
hlt
lcall
out
pop
sub
dec
sbb
cmc
je
and
inc
and
jmp
xor
cmp
sahf
sahf
pop
xor
add
mov
and
sbb
adc
mov
push
dec
cmp
mov
ja
xchg
pop
jp
leave
bound
outsl
add
and
mov
lcall
mov
pop
hlt
xchg
jno
dec
or
mov
inc
pushf
test
xor
into
test
push
iret
imul
push
or
es
rorl
xchg
ja
outsl
or
dec
push
xor
call
lds
in
push
mov
gs
sub
xchg
dec
adc
or
movsb
into
stc
lods
jg
pop
adc
xorl
outsb
mov
cmpsb
sub
jmp
stos
in
hlt
es
into
mov
adcl
ret
daa
subb
push
pop
hlt
mov
mov
movsl
mov
mov
ss
js
mov
and
ffreep
incb
in
mov
sub
cmp
pop
outsb
lret
imul
dec
js
inc
mov
lret
mov
cmp
cmp
push
ljmp
mov
shrb
outsb
inc
dec
push
cmpsl
or
pusha
cmp
jg
adc
cltd
jmp
pop
mov
cld
lea
outsb
paddusb
out
jecxz
insl
jecxz
into
scas
rclb
das
jecxz
xchg
out
loopne
out
cmpl
jo
int
fildll
inc
mov
out
test
mov
fisubl
leave
or
movb
incb
jne
jbe
data16
cli
mov
jmp
cltd
push
inc
inc
cli
jge
leave
outsl
pop
inc
decl
mov
movsb
hlt
jb
icebp
sti
fcomps
hlt
pop
mov
or
inc
add
jns
cmc
lods
cmp
mov
or
pop
popf
rcl
sub
fistl
out
arpl
outsb
lret
andb
mov
and
pop
scas
add
call
into
fists
lea
mov
push
cwtl
pop
inc
cmpsb
xor
enter
sub
lea
shr
cwtl
and
sub
jno
or
arpl
ljmp
mov
ss
xor
orb
pop
mov
jmp
nop
jo
and
imul
mov
out
mov
rcl
dec
cli
push
dec
mov
movsl
hlt
xchg
test
jnp
shlb
mov
push
inc
stc
push
loope
into
xchg
ret
je
jmp
xchg
mov
lock
and
mov
hlt
or
mov
mov
or
adc
loopne
cmp
ss
shrb
inc
lock
scas
vshufps
xor
shrb
add
jbe
std
or
mov
xchg
loopne
push
push
pop
jne
or
push
ficoms
cltd
mov
jmp
cltd
shlb
adc
xchg
test
mov
jmp
movsl
push
fidivrs
mov
stc
and
outsw
scas
add
mov
out
gs
and
adc
sbb
loopne
mov
sub
sub
cld
dec
sbb
in
pushf
sub
stos
xchg
les
sub
cmp
lret
aaa
pop
arpl
arpl
ss
add
mov
lret
xor
mov
cmpb
add
in
cmp
push
repnz
xchg
push
clc
shl
cmc
mov
add
popa
and
sub
mov
popf
jg
jmp
sub
push
xchg
in
mov
in
push
xchg
ja
push
cmpsl
addr16
or
add
mov
loopne
push
sbb
enter
sub
movsl
jl
daa
jnp
mov
add
sbb
mov
and
fs
shrb
ja
cmc
xchg
out
xchg
sahf
test
jmp
xchg
mov
sbb
push
std
cs
or
sub
nop
stc
or
leave
decb
cmp
fcomp
cs
popf
pop
lods
and
jns
test
ja
call
xchg
mov
mov
mov
cmp
loopne
movsl
aad
sub
pop
stos
scas
pop
imul
mov
lods
mov
mov
mov
adc
or
call
fwait
sbb
cmc
push
jle
mov
cmp
leave
mov
xlat
cltd
jae
push
in
push
xlat
fcoml
jecxz
fwait
sbb
xchg
push
mov
dec
setg
jl
push
cli
pop
xchg
std
mov
sub
sahf
jl
lods
jge
mov
shll
mov
adcb
fcmovnb
mov
call
mov
inc
aas
shlb
repz
adc
pusha
mov
mov
sub
and
ficomps
sub
or
gs
lret
pusha
fwait
pop
mov
sar
js
and
lahf
jno
or
ret
incb
test
out
cltd
mov
je
test
add
fnstcw
mov
decl
sub
jne
mov
pop
fstl
in
or
jmp
cmpsl
pop
sahf
inc
lea
sti
xor
sbbl
dec
jg
test
and
jmp
mov
push
fcompl
pop
push
rcrb
clc
movzbl
mov
pop
sub
mov
pusha
addr16
push
mov
mov
inc
sbbl
out
out
pop
push
mov
ljmp
loop
cmc
aam
lods
sbb
sub
and
mov
lahf
add
xchg
mov
and
dec
jecxz
int
fsubl
ljmp
jg
dec
inc
ja
filds
push
aaa
and
cs
ss
jp
aas
in
push
jle
es
adc
mov
xchg
call
mov
jmp
push
adc
push
lret
lea
jg
jg
adc
iret
clc
gs
jl
xchg
lock
xchg
dec
fsub
pop
mov
or
sbb
sub
push
inc
test
imul
and
aam
std
lds
lahf
mov
push
sahf
pop
mov
pop
jmp
movsl
lods
rcrl
push
mov
cltd
in
ja
or
pop
jl
lods
pop
sbb
pop
rcrl
pop
cmp
std
mov
pop
mov
stos
inc
mov
out
inc
dec
jno
repz
jns
outsl
mov
mov
int3
sbb
nop
scas
loope
sbb
push
inc
cmc
push
std
cmpsb
sub
adc
cmpsb
jb
sbb
push
jl
fdivrs
and
jle
daa
rcrl
enter
sbb
cmp
ffree
aam
je
xchg
nop
adc
lea
ret
and
jge
adcb
fsubl
js
mov
pushf
ret
out
cmpsb
mov
ret
and
out
ja
sar
jl
pushf
pop
and
mov
jl
mov
std
inc
cmp
pop
outsb
mov
cli
cmp
pusha
xchg
adc
adc
dec
xor
in
push
push
cmpsb
pushl
mov
ds
push
jge
popl
or
sbb
jp
je
sbb
shlb
xchg
xor
insl
mov
je
notb
adc
ret
push
jle
mov
or
nop
fld
jecxz
push
sbb
xchg
xchg
pop
stc
loopne
ljmp
out
xchg
out
lock
scas
or
ja
inc
lret
pop
add
iret
iret
sbb
leave
ret
repz
mov
push
mov
xchg
sbb
data16
sbb
xchg
imul
mov
cmpsl
dec
repnz
fmuls
sbb
dec
mov
scas
cwtl
sbb
or
sub
pop
sbb
sti
fdivs
hlt
adc
rclb
cmp
adc
mov
cli
jo
mov
test
mov
jmp
push
fcompl
fsub
xchg
push
aaa
xchg
fnstenv
pushf
fucomp
xchg
mov
test
inc
cmp
adc
imull
adcl
ss
push
int
fdivrs
push
iret
inc
enter
nop
div
rol
xchg
xchg
mov
jle
ret
mov
aaa
out
mov
add
pop
in
mov
sahf
sahf
mov
js
in
jns
ret
xor
sbb
mov
jbe
sbb
ret
push
mov
adc
push
push
dec
dec
mov
test
or
outsb
jo
xchg
pop
adc
adc
arpl
cmp
in
and
rcrl
mov
call
adc
dec
vmovapd
sbb
and
loop
movsb
iret
fmuls
gs
inc
mov
dec
jnp
sub
test
dec
out
and
shll
lock
into
mov
je
aaa
rorb
push
add
vmovaps
outsb
ret
sub
rolb
out
push
aas
fucom
fstpl
mov
enter
jb
sub
xchg
aam
jns
in
sub
jne
mov
mov
adc
sub
and
add
mov
enter
jge
int3
imul
xchg
sub
and
adcl
jno
sbb
mov
mov
pop
adc
xchg
adc
add
mov
cmp
and
inc
inc
mov
or
enter
dec
insl
and
mov
push
push
push
cwtl
or
fistl
or
dec
pop
rorl
iret
xchg
shll
mov
mov
pop
loopne
adc
sbb
add
fldt
or
xor
jmp
add
gs
push
dec
mov
fwait
shrb
add
ret
jmp
aaa
mov
sub
sti
sbb
imul
cmp
jmp
sub
das
push
ja
lea
lds
fisubrs
scas
ja
mov
mov
shrb
mov
imul
dec
cmc
btr
jbe
aam
pop
xchg
fidivrl
push
imul
scas
in
inc
xor
jnp
sbb
loop
pop
jl
pop
push
movsl
test
loope
insb
imul
push
test
cmp
xchg
sbb
icebp
mov
out
mov
push
cmp
addr16
mov
cmpsb
sar
mov
pop
cli
jmp
sub
pop
mov
stc
mov
sub
cwtl
mov
out
lret
sub
dec
push
jae
frstor
jnp
jb
inc
pop
js
mov
xor
xchg
jb
loop
icebp
mov
cld
mov
cmpsb
or
mov
sbb
and
mov
lahf
mov
mov
mov
pusha
hlt
movsl
jne
dec
push
mov
adc
cs
cmc
jmp
mov
and
and
aaa
mov
and
pop
mov
pop
cli
movsl
adc
insb
mov
inc
xchg
aad
and
lahf
mov
pop
hlt
dec
ds
dec
cmpsl
mov
iret
sub
cmc
inc
xor
dec
mov
popa
and
fs
sbb
jmp
je
pop
lods
iret
xchg
sbb
push
js
stos
cwtl
outsl
push
dec
push
mov
ret
jg
cmp
inc
out
dec
pop
xchg
mov
sub
dec
add
fistps
aad
cmc
xor
push
fwait
mov
adc
jl
add
hlt
daa
add
sti
pop
frstor
pop
ficoms
jno
lret
cwtl
xchg
andl
scas
and
push
mov
push
movsw
and
adc
or
xor
inc
sbb
sbb
mov
xchg
and
lcall
jbe
cmpsb
dec
mov
pop
adc
lahf
add
inc
or
cmp
shrb
cmp
clc
hlt
jl
inc
aaa
push
aas
lods
dec
cld
idivb
stc
cwtl
enter
push
sub
dec
in
rcrl
test
and
pop
xlat
repnz
sti
repnz
push
ja
adc
sub
jmp
repz
jecxz
stc
mov
add
icebp
sbb
lock
mov
lock
aad
mov
test
in
repz
jecxz
adc
push
fisttps
rorb
jge
aad
mov
pop
int
mov
data16
fidivrs
mov
mov
or
ret
and
adc
sbb
mov
les
int3
jae
push
mov
xchg
repnz
xchg
movsl
sub
out
jo
mov
xchg
mov
lret
mov
mov
nop
das
cmp
cmp
cmp
cmpsb
mov
je
jmp
or
stc
testl
nop
fbld
shrl
inc
cs
cli
xchg
stos
or
mov
lahf
scas
orb
sbb
add
and
rcrl
sti
inc
scas
repz
aad
jne
imul
inc
jle
je
adc
push
ss
adc
sbb
sti
inc
mov
sub
pop
fs
clc
pop
push
stos
subl
cwtl
jae
sahf
lea
pop
in
pop
or
je
leave
jecxz
subl
cmpsl
dec
cmp
push
xchg
adc
sbb
sub
xchg
push
fld
and
xor
test
xchg
in
cmp
clc
std
mov
es
pop
popf
inc
mov
mov
jo
mov
outsb
add
cmp
idivb
push
sub
pop
js
dec
in
cmp
cmp
jne
aad
xor
fnstsw
jae
add
es
sahf
scas
pop
ds
negl
add
jg
rcrl
inc
ljmp
jo
push
cmp
add
jb
lret
pop
pop
mov
pop
sbbl
daa
sub
arpl
pop
jno
mov
in
notb
mov
pop
mov
fbstp
stc
add
daa
sub
push
fnstcw
push
addl
test
lods
mov
push
add
cmp
xchg
bound
pop
jb
mov
cmp
push
xor
mov
es
mov
lods
mov
mov
push
ljmp
mov
mov
inc
xchg
and
adc
xor
dec
lsl
imul
push
push
call
cld
fs
and
arpl
int3
stos
rolb
lret
rclb
push
mov
or
mov
data16
pusha
cmp
xchg
movsb
inc
inc
mov
iret
mov
mov
pushf
mov
pop
icebp
sub
inc
push
call
mov
ja
lock
mov
sbb
stos
aaa
jle
mov
rolb
push
stos
and
jle
adc
lahf
pop
out
lcall
cmc
aad
lcall
in
mov
jo
mov
mov
dec
call
xchg
call
popa
in
jo
fsubs
jg
dec
mov
pop
call
sbb
dec
dec
cmp
cltd
push
je,pt
test
shlb
and
call
out
iret
fisubrs
addr16
hlt
ret
in
or
js
inc
loopne
insl
icebp
push
push
push
gs
pop
mov
call
pop
jnp
sbb
sarl
pop
sbb
out
mov
loopne
inc
jno
imul
push
jne
push
lock
adc
and
rclb
sarl
pop
cli
jecxz
sub
jne
in
out
dec
jbe
loope
pop
enter
and
lods
sti
lret
sbb
int3
movsl
jns
jbe
repz
test
pop
into
insb
sub
js
cmp
jo
add
iret
add
divb
sub
pop
jbe
daa
cmp
mov
xchg
sub
popf
inc
fmul
cmp
mov
cmp
mov
hlt
mov
outsb
mov
in
push
mov
cld
pop
and
and
push
jne
aaa
and
xchg
aam
xor
xor
fidivrl
inc
mov
pop
cmp
mov
inc
movsl
xchg
xchg
ja
jge
mov
mov
and
bound
lods
jle
mov
cmpsl
push
repnz
mov
dec
adc
lock
arpl
push
sub
push
jecxz
mov
repz
sub
leave
xchg
mov
add
xchg
in
sbb
push
pop
inc
adc
push
inc
rclb
pop
lahf
cwtl
jge
dec
aad
out
mov
fsub
mov
jbe
and
enter
mov
jecxz
insb
xor
push
pop
stos
adc
fisubl
mov
loope
outsl
aam
in
outsb
lea
imul
ficomps
mov
and
adc
and
test
ja
push
insb
ja
std
push
js
sbbb
incb
cli
sub
and
xor
xor
std
push
je
iret
aas
cli
push
nop
sbb
jnp
cmp
push
outsl
pop
jae
jle
popf
hlt
imul
cltd
and
cmc
jp
sub
mov
mov
adc
add
push
stos
sahf
xchg
sbb
shlb
jmp
mov
jl
iret
add
cmc
gs
mov
imul
movsl
inc
xlat
xchg
cmpsl
or
pop
addl
inc
jmp
adc
cmp
iret
push
dec
lret
outsl
lods
dec
cli
sub
rcll
or
imul
push
in
lar
jge
insb
xor
sbb
dec
jne
stos
dec
nop
fadd
stos
lcall
mov
sbb
fisubrl
push
jbe
mov
in
popf
push
aaa
jp
jle
loope
enter
pushf
add
mov
scas
jg
mov
fwait
xchg
cld
push
enter
orl
out
ds
mov
push
aas
dec
inc
or
in
lea
add
in
loopne
xchg
fmul
aam
sahf
push
hlt
inc
dec
test
adc
push
mov
testl
add
outsl
jae
aas
dec
mov
subl
push
xor
loope
sbb
mov
loope
adc
cmp
in
xor
fwait
mov
xchg
pop
out
dec
stos
fwait
dec
lods
ret
sbb
or
adc
jbe
popf
add
dec
mov
pop
lahf
sub
xchg
mov
jb
sbb
hlt
push
mov
push
aad
fiadds
roll
mov
fcmovnb
inc
sbb
and
push
mov
mov
lock
lock
push
jge
test
mov
pop
popf
push
notb
subb
pop
inc
xor
or
mov
mov
push
inc
je
faddl
xchg
mov
fwait
pop
std
mov
sub
insl
mov
and
mov
xorl
xor
push
lcall
stos
fucom
adc
test
dec
loop
mov
lock
adc
or
pop
cmp
test
add
nop
roll
ret
inc
lahf
fwait
mov
cmpb
mov
pop
add
jp
cmc
pop
lahf
sbb
js
bswap
lcall
pop
xchg
push
mov
inc
add
xor
adc
jo
shrb
in
jp
test
or
dec
outsb
aam
cmp
mov
ljmp
ret
repz
in
out
das
test
pop
pusha
ret
cmp
inc
aas
and
or
les
fsubrp
mov
sub
subl
jmp
lds
xor
shll
cli
mov
cli
in
and
pushf
pop
decl
and
es
lcall
xor
add
fwait
mov
inc
xchg
nop
pop
mov
dec
lret
mov
cmpsb
fistpl
xchg
ljmp
dec
xlat
cli
into
dec
sti
aas
pusha
cmp
pop
fsubrl
fdivr
mov
bound
jecxz
jge
loopne
loop
mov
mov
insl
push
sub
push
mov
lahf
cltd
and
or
mov
fbld
xor
mov
jle
mov
jmp
fwait
daa
int3
sub
das
push
inc
mov
les
adc
cmp
adc
scas
scas
scas
aam
mov
pusha
rol
test
xor
repnz
idivb
dec
jge
data16
cmp
notl
int
scas
push
iret
add
in
xchg
mov
push
inc
jbe
adc
scas
and
push
mov
das
cld
mov
add
icebp
pop
or
lcall
ret
sbb
aaa
adc
test
push
pop
cltd
out
inc
add
jno
ds
inc
xor
xlat
xchg
lcall
push
into
mov
xchg
mov
jae
xor
ret
jnp
aaa
inc
xchg
inc
bound
aad
pushf
cld
das
das
rorl
mov
lret
sub
and
sbb
jo
xchg
xchg
xchg
sub
jecxz
mov
enter
or
gs
pop
fsubs
mov
movsl
jo
int
add
jnp
pusha
icebp
xchg
sbbl
ret
ret
je
dec
jmp
cmp
jmp
mov
daa
cmp
stos
sbb
push
testl
and
test
adc
mov
add
add
pop
push
inc
dec
ss
test
inc
dec
cmpsl
pop
pop
pushf
pop
lret
out
imul
std
push
dec
shll
sub
mov
mov
fldenv
jae
xor
fisubrl
push
sbb
dec
mov
add
mov
fistpll
clc
inc
repnz
pop
inc
lods
lock
loop
and
stos
sbb
mov
les
stos
sbb
cld
imul
into
shll
js
add
popa
pop
adc
lret
push
cmp
jb
dec
mov
in
imul
bound
inc
jb
and
adc
xor
push
gs
icebp
mov
dec
jbe
fcmovnbe
jge
filds
in
call
sub
iret
xchg
out
lret
pushf
inc
sahf
div
hlt
fs
inc
jg
push
pop
icebp
and
inc
insb
pop
xchg
xor
mov
incb
mov
adc
clc
inc
sbb
stc
and
stc
cltd
mov
popf
sti
es
pop
pop
daa
or
cmp
jg
dec
push
xchg
mov
mov
xchg
loopne
mov
inc
test
or
xor
xlat
or
push
gs
rclb
mov
daa
cmp
test
pop
push
pop
loopne
dec
jle
subl
push
add
jmp
in
int3
lods
dec
outsl
or
leave
pop
iret
ljmp
sub
mov
bnd
test
inc
loope
das
jnp
xchg
or
sti
aas
push
repnz
aas
jno
orl
mov
adc
inc
dec
pusha
xchg
inc
and
jo
mov
xor
pop
fcom
mov
mov
add
push
jg
stos
std
js
arpl
cli
iret
mov
xchg
or
stc
jmp
or
jo
daa
jl
in
mul
dec
add
insl
or
fbld
jecxz
jae
sbb
popa
push
in
pop
cmp
xchg
in
out
sahf
and
dec
pop
xchg
push
and
sub
jp
outsl
imul
fsubrl
mov
xchg
in
hlt
stos
mov
add
inc
pop
test
in
cltd
xor
test
pop
mov
add
test
add
mov
aad
and
loope
in
mov
pop
lods
adc
sbbb
fmul
cltd
aaa
push
popa
inc
frstor
or
sub
mov
in
icebp
out
xor
xchg
jecxz
cmp
andb
leave
in
ja
jmp
mov
push
or
or
lds
div
pusha
stc
ret
mov
push
out
mov
loop
jo
dec
bswap
dec
int
fsubrs
lahf
xchg
inc
mov
fdivrs
mov
add
mov
inc
push
mov
dec
enter
sbb
out
mov
bound
push
out
pop
adc
jno
gs
fistpl
mov
pop
adc
push
and
sub
push
xchg
cld
xchg
sbb
addr16
clc
loope
sub
movl
cwtl
pop
jp
add
jns
test
cs
outsb
icebp
addl
lock
adc
push
shrb
dec
cmc
push
aad
in
bound
pop
pop
mov
repnz
jg
in
fcompl
and
mov
xor
mov
lea
lds
add
int3
ljmp
hlt
pushf
daa
cs
shr
es
cmp
lret
adc
shld
lahf
sub
mov
gs
orb
mov
dec
nop
mov
jne
inc
xor
lret
loop
cmp
sub
pop
xchg
or
into
and
scas
push
ljmp
sbb
aad
pop
jge
dec
clc
mov
aam
and
mov
scas
xchg
pop
pop
jo
jmp
movsb
lret
jecxz
sub
es
inc
mov
aam
jmp
mov
xchg
data16
clc
sbb
int3
mov
out
mov
xor
mov
popf
lods
and
cmpsb
push
negb
jno
lods
xchg
jb
fs
pop
jmp
push
int
cmp
pop
imul
cltd
xorl
dec
xchg
scas
nop
xchg
rcrl
jne
dec
fnop
stc
dec
rcrl
mov
movb
xchg
out
adcl
cmp
sub
imul
ss
push
jecxz
mov
data16
cmpsl
xchg
adc
push
mov
fldcw
ret
rclb
mulb
movsl
mov
jno
jp
shll
jno
mov
and
mov
gs
lock
add
lahf
jmp
fistl
mov
jno
roll
fcompl
pop
imul
popw
add
daa
cmp
jns
inc
push
test
cmp
and
xchg
pop
jbe
lock
sti
test
pop
xor
xor
in
out
test
in
inc
dec
inc
aaa
cli
add
mov
mov
pusha
sbb
stos
inc
rcrl
ss
mov
and
movsb
jno
test
sub
or
and
add
inc
ljmp
lret
sub
movl
lea
or
rcl
and
mov
cmp
mov
fisubrl
rcr
lods
nop
lods
int
fbstp
subb
push
mov
shl
ret
idivl
popf
scas
push
xor
inc
mov
aas
fstpt
mov
jbe
in
and
sbb
xchg
imul
mov
add
inc
jnp
xchg
test
icebp
pusha
sub
pop
jp
and
sub
cmp
or
cmp
mov
lcall
sahf
mov
mov
lea
aaa
fdivp
cmp
rolb
ficoml
mov
pop
jnp
mov
test
mov
mov
aaa
sub
pusha
lret
dec
cmp
push
add
test
adc
inc
icebp
mov
jmp
adc
adc
add
out
dec
pop
pop
lock
add
and
cs
pop
test
jo
xchg
mov
icebp
and
push
pop
ss
stos
mov
add
and
xor
cmp
out
sti
scas
cmp
adc
mov
sub
adc
adc
ret
and
aaa
inc
cmpsl
mov
int
nop
ror
adc
cmp
mov
cmp
outsl
dec
xor
in
mov
insl
loopne
inc
movsb
les
dec
fwait
sbb
jmp
xorl
into
xchg
pushl
mov
addl
adc
jge
pushf
dec
sbb
push
sbb
imul
stos
rcl
addb
jmp
xchg
call
sub
inc
push
subl
xor
mov
or
inc
sbb
lods
mov
aas
mov
cwtl
int3
cltd
jmp
cmc
repnz
mov
gs
or
jb,pt
xchg
aad
cmp
or
stos
lret
mov
daa
repz
push
pusha
xchg
adc
ja
shll
in
or
or
repnz
sub
jbe
jns,pn
sub
enter
test
cmpsb
jle
incl
fs
xlat
leave
inc
pop
push
cltd
cmp
std
push
mov
mov
fldcw
mov
pcmpeqw
sub
dec
adc
push
lods
addr16
add
xor
adc
movsb
lret
push
push
or
ret
sub
pop
xor
daa
frstor
ret
push
jmp
push
fsubs
inc
ret
test
dec
dec
add
inc
cmp
imul
xlat
stos
gs
push
cli
into
xor
jo
data16
xor
adc
lret
andb
ja
pop
fwait
pop
call
fs
into
and
loope
cltd
mov
les
pop
dec
insl
xchg
es
mov
popf
clc
inc
ss
cmp
or
push
test
xor
pop
mov
into
sbb
dec
dec
sub
or
push
mov
andb
outsl
jge
push
lea
fists
xor
xchg
aad
jl
aam
cmp
cmp
shlb
cld
sti
fucomp
fs
loopne
ds
jp
push
dec
xor
adc
hlt
lds
addr16
fidivs
ds
les
out
jmp
mov
stc
call
mov
mov
stos
sbb
push
mov
xor
xchg
xchg
cmp
repnz
ret
stos
andl
or
mov
dec
unpcklps
lods
inc
ja
outsb
sub
push
jmp
repnz
mov
sbb
sahf
movsb
insb
sti
loope
sub
jbe
mov
push
sub
adc
mov
andl
ficoml
insb
cmpsb
mov
lods
xchg
mov
js
fists
sbb
adc
js
dec
sarl
mov
cli
inc
mov
xor
divb
pop
or
pop
loop
fisttpll
test
sub
xlat
push
sbb
sub
xchg
jmp
std
je
pop
int3
ss
mov
cmp
xchg
xchg
pop
loopne
jb,pt
or
sahf
popa
pop
fdivp
mov
jne
test
jg
xor
cmp
scas
add
imul
or
je
dec
cmpsl
mov
sbb
jl
inc
dec
and
stc
xchg
rcr
sahf
lea
sub
cmpsb
rcll
pusha
je
mov
aas
cmp
ret
es
rclb
sbb
xor
filds
sbb
add
sti
stos
call
mov
js
mov
and
in
cmpsl
cmpsb
aaa
pop
movsl
lods
jp
mov
dec
adc
mov
add
mov
push
xor
das
push
jp
and
rcll
jg
mov
stc
cwtl
lea
mov
mov
xor
out
fimull
sbb
jecxz
inc
dec
dec
add
shlb
insb
fstl
and
jecxz
xchg
sbb
iret
insb
adc
or
mov
xchg
scas
jo
push
arpl
push
adc
ret
jge
xor
mov
mov
lods
rcrb
cmp
sbb
dec
dec
mov
iret
lock
jmp
mov
daa
nop
outsb
push
jne
ret
mov
enter
or
adc
enter
inc
adc
mov
setge
scas
pusha
xor
pop
mov
ficompl
out
add
adc
sub
enter
testb
lock
sub
jmp
lods
jno
fwait
sub
notl
pop
lods
sbb
sub
scas
xor
cmp
mov
cmpsl
les
push
insl
pop
stos
lret
xchg
in
decb
or
add
lret
push
mov
cli
fdivrl
fidivl
leave
sahf
mov
ds
addl
sbb
mov
fcmovnbe
lock
outsl
and
je
pop
mov
test
sub
test
divl
fdiv
in
not
or
cmp
pop
repnz
lret
mov
lahf
mov
push
adc
cmp
std
outsb
lods
mov
mov
lahf
inc
in
or
data16
push
test
sub
dec
aaa
push
test
or
dec
mov
push
ds
sahf
xlat
cmp
dec
adc
flds
push
mov
in
pusha
pushf
or
xor
int3
push
pop
gs
adc
aad
pop
or
inc
mov
scas
or
push
cmp
test
mov
mov
or
xchg
jnp
mov
xchg
mov
sahf
jecxz
sub
jo
push
shll
mov
add
inc
cmp
ljmp
jge
and
and
cmp
pop
xchg
and
pop
pop
aaa
dec
jge
mov
lds
nop
insl
pop
sbb
sbb
cmp
cmp
pop
imul
push
out
push
jnp
adc
jo
shrb
cmpsl
ficompl
mov
xchg
psadbw
gs
xchg
xlat
rorb
lahf
mov
sub
jl
out
jecxz
loopne
aad
dec
dec
inc
cmp
rorb
jne
cs
test
aam
call
inc
jae
xchg
addr16
hlt
outsb
lahf
dec
repz
jbe
sbb
mov
mov
jne
mov
out
mov
or
pop
sti
jp
add
mov
rcll
aad
aaa
fbstp
js
je
mov
movsl
jp
iret
ljmp
insb
fmull
jmp
push
inc
ja
shl
jl
imul
fidivrs
dec
aaa
sbb
rolb
adc
add
mov
sti
add
add
mov
xchg
out
push
cs
addl
fstpl
pop
lret
repz
cmp
pushf
aas
les
push
stos
movsb
mov
dec
jle
xor
data16
cld
mov
test
movsl
dec
sub
fs
pop
pop
addb
cmp
dec
xor
fisubs
sbb
xlat
jge
lods
push
push
add
test
fwait
addr16
pop
add
dec
jb
cmp
lock
push
orb
xor
insl
inc
in
and
repnz
add
shlb
xlat
cmp
sarl
jg
arpl
shlb
mov
pusha
push
lret
mov
mov
arpl
xchg
jne
mov
pop
dec
loop
mov
xchg
mov
adc
cmc
push
mov
lods
cmp
out
andb
mov
jnp
cmc
out
loopne
push
popa
add
aad
cs
mov
pop
aam
inc
jle
cmc
xlat
pop
and
mov
cld
fnsave
repz
hlt
mov
int
das
and
push
and
dec
in
xor
fimull
or
es
xor
adc
jmp
inc
jmp
mov
jae
jo
in
dec
movsl
sbb
cmp
jnp
jbe
loope
in
jne
inc
mov
les
nop
lret
dec
imul
inc
adc
pop
out
inc
movsb
jmp
or
lcall
sarl
outsl
ja
pop
xlat
fldt
xor
sbb
faddl
outsl
into
pop
sub
and
shlb
loop
mov
das
cmc
aas
dec
mov
mov
ficoml
fs
adcb
stos
mov
cmp
test
mov
in
inc
mov
daa
xchg
std
pop
jge
jmp
repz
sarb
sub
cmp
ss
sti
lods
aam
add
mov
add
hlt
mov
and
inc
push
fdivl
dec
test
daa
mov
stos
sub
sbb
push
sub
adc
or
mov
imul
cmp
sar
lcall
dec
dec
and
add
cmp
outsb
daa
gs
jg
gs
sub
scas
jp
cld
hlt
push
jp
mov
shlb
dec
stc
or
imul
cmpsb
fidivs
sbb
jnp
cwtl
das
inc
mov
and
dec
mov
sub
pop
int3
hlt
mov
cmp
imul
repz
push
sahf
out
sbb
iret
shl
cli
push
pop
xor
xchg
mov
push
test
je
addr16
getsec
popa
and
nop
clc
jmp
pop
mov
jnp
jnp
cs
ss
in
xchg
lock
cmp
push
lcall
xchg
and
sbb
xchg
xorl
jbe
jmp
test
in
jno
push
push
in
aas
mov
dec
jbe
mov
call
ljmp
cld
cli
ror
xchg
inc
mov
xor
sbb
and
loop
xor
loopne
and
das
add
cmp
imul
les
jno
pop
xchg
rcrl
mov
fldl
push
sub
add
adc
or
push
xchg
das
mov
ljmp
loopne
cmpsl
pop
xor
adc
pop
fidivl
inc
cmpsb
imul
push
cli
pop
cmp
nop
daa
nop
xor
xchg
test
inc
dec
jg
cmp
jo
cli
std
outsl
mov
push
or
sbb
scas
jbe
es
xchg
mov
mov
imul
insl
lcall
shlb
adc
adc
in
xchg
aas
lcall
mov
mov
jns
xchg
lea
xchg
xor
dec
mov
in
cmpsb
aas
loope
sbb
inc
cmpsl
cwtl
mov
sahf
mov
inc
xchg
out
in
sub
pop
mov
addr16
mov
clc
xchg
insl
xchg
clc
in
mov
enter
sub
sub
sar
inc
lcallw
fiadds
or
sub
mov
xor
pop
std
or
sub
cs
mov
lea
jp
aad
insl
out
jge
aam
sbb
js
decl
mov
pop
cmpsb
push
inc
stos
mov
clc
fcompl
mov
sbb
mov
mov
mov
pop
shll
mov
cmp
loopne
rclb
push
fimuls
push
dec
out
adc
adc
clc
pop
icebp
push
bound
in
scas
sub
mov
mov
arpl
pop
or
pop
pop
out
dec
aas
mov
xchg
notb
leave
cs
jno
cli
sbb
sub
test
pop
aam
cwtl
mov
fnsave
popa
in
xor
and
and
lret
dec
and
cmp
mov
divl
xchg
out
cmp
inc
add
fistps
repnz
int3
cs
iret
cwtl
push
cmp
sub
mov
test
sbb
popa
inc
pop
out
cmp
jmp
fnstcw
add
imul
jb
daa
jnp
mov
mov
jecxz
test
mov
add
xchg
mov
mov
fisttpll
lret
lcall
push
sub
inc
pusha
sbb
sub
stos
mov
test
lcall
mov
jg
cmp
add
loopne
mov
jb
jg
lcall
into
cmp
inc
mov
out
fnstenv
push
inc
or
jmp
push
outsl
dec
xchg
test
test
stc
and
addl
fcmovnu
mov
neg
cmp
popa
push
testl
sbb
outsb
or
or
outsb
test
add
lea
or
fwait
test
test
pop
xchg
xor
push
hlt
adc
repnz
mov
adc
lea
clc
shrl
dec
sbb
cmpsl
pusha
push
stos
push
sbb
xchg
in
dec
cmp
jne
test
arpl
mov
fcompl
adc
lcall
pop
inc
mov
push
inc
inc
aam
mov
push
aaa
inc
dec
dec
mov
insl
out
jl
lds
inc
push
mov
or
adc
aad
cmc
fs
in
or
mov
or
movsl
mov
inc
out
fildll
pop
les
adc
and
xor
mov
push
pop
adc
daa
adc
addr16
cltd
popf
sbb
negb
test
or
mov
ror
or
mov
mov
pushf
inc
scas
sub
mov
aad
inc
add
movsl
aam
arpl
fidivl
pop
fdivs
jae
iret
mov
jecxz
push
xor
scas
mov
imul
jnp
xor
lock
cmpsl
sahf
pop
cmp
lods
ja
andb
lahf
pop
sbb
arpl
inc
jmp
adc
sub
xor
xchg
lods
push
movsb
hlt
shl
inc
mov
push
repz
or
addr16
aad
int
mov
pop
inc
sub
jecxz
std
xchg
lcall
cmp
push
test
adc
add
sub
loop
aam
cmp
gs
or
mov
jo
aam
xor
fnstsw
and
adc
nop
cwtl
and
leave
add
lcall
sahf
pop
dec
add
sub
jno
stos
mov
divl
movsl
pop
aas
or
jp
test
cmpsb
mov
les
nop
mov
adc
adcl
lea
loopne
out
lock
push
adc
fcomp
call
cmc
xchg
cmp
sub
adc
lea
movb
insl
decl
mov
xlat
add
pushf
scas
pop
mov
inc
ret
inc
inc
stos
test
dec
fwait
scas
in
xchg
jmp
loope
jge
jnp
hlt
push
push
rorl
push
and
sbb
fwait
nop
pushl
cmp
or
in
ret
leave
sub
xchg
adc
shrb
imulb
andb
and
dec
sub
sbb
jb
add
push
shll
cs
push
fs
mov
inc
mov
lahf
inc
fimuls
pop
dec
ljmp
mov
xchg
push
add
mov
mov
shll
inc
mov
sub
push
bound
jmp
or
cwtl
and
push
in
jbe
cmp
jl
xor
inc
cli
and
bt
xor
sahf
mov
stos
xchg
push
adc
mov
xor
popf
iret
xchg
mov
imulb
pushf
rcll
movsb
jno
jbe
imul
jge
push
mov
mov
mov
loop
add
mov
popf
and
push
jne,pn
mov
mov
dec
test
cmp
lea
lock
push
ljmp
mov
flds
fists
add
cltd
mov
xchg
clc
mov
xchg
sbb
mov
cmpsl
rcl
push
cltd
in
roll
ljmp
mov
rorb
dec
enter
dec
xchg
cli
xor
gs
cmp
ds
pop
stc
fwait
inc
inc
jno
cltd
test
clc
lea
push
pop
imul
fnstcw
mov
inc
cltd
pop
mov
ja
in
movsb
sub
mov
int
cmp
xor
push
aaa
jecxz
mov
sub
repnz
jo
mov
xchg
mov
mov
xor
icebp
stc
fiadds
ret
pop
rcr
mov
mov
inc
imul
add
je
mov
lcall
add
aad
sub
movsl
xlat
mov
ja
xchg
insl
mov
sbbb
ds
xlat
out
mov
popf
xor
test
clc
or
xor
ljmp
sub
mov
sbb
lret
das
add
push
pop
das
adc
aas
test
lret
pusha
cld
pushf
imul
fldl
fdivrs
subl
push
lock
icebp
ja
sbb
mov
xlat
mov
fsubrp
outsl
enter
jno
ret
adc
out
add
push
jge
pop
aad
pop
pop
insl
or
nop
cwtl
mov
adc
push
aaa
mov
jge
je
test
cmpsl
pusha
mov
ficoml
je,pn
nop
mov
dec
push
ja
and
mov
lret
popl
leave
push
mov
int
pop
test
mov
jp
inc
fstp
gs
xor
lock
bound
inc
scas
push
lods
pop
mov
mov
inc
or
inc
sbb
test
dec
stc
sub
pushf
xchg
mov
mov
pop
stc
clc
insb
and
mov
mov
fmul
push
jle
inc
hlt
movsl
daa
jge
adc
mov
add
push
hlt
pop
ljmp
imul
outsl
ds
insl
push
push
xchg
lods
sub
jnp
fisubs
cmp
insb
mov
jmp
mov
test
pop
mov
pop
push
adc
pop
rclb
ljmp
daa
movl
pop
adc
test
inc
mov
inc
cmc
mov
or
inc
sbb
pop
adc
jl
mov
inc
lcall
adc
adc
adc
outsl
xor
jg
adc
test
cmc
stos
pop
and
jp
pop
stos
mov
and
repnz
into
daa
pop
into
jns
out
aam
add
dec
xor
pop
insl
inc
pop
jmp
ret
adc
js
cmpsl
add
push
jecxz
aaa
xor
mov
xchg
push
ds
xchg
scas
int
jmp
sbbb
pop
mov
das
push
jno
lods
jb
test
das
aas
popf
add
or
aad
push
and
sub
call
pop
pop
aaa
je
in
or
enter
aad
sbb
repnz
bound
out
add
inc
aam
jl
jnp
push
aad
popf
mov
inc
push
ja
pop
test
adc
jge
or
pop
jae
push
pop
jl
repz
cmp
in
fwait
or
mov
jle
out
sbb
mov
inc
cmp
mov
dec
push
stos
inc
out
cmpsb
jae
mov
cmc
cmp
jle
ljmp
sti
pop
insl
aaa
in
mov
das
lds
inc
xor
dec
sub
aaa
sub
cmp
jbe
pushf
lcall
jno
popf
leave
jae
mov
ja
es
xchg
lock
mov
sub
fisubl
jbe
mov
bound
cmp
insb
xor
outsb
addl
jp
rcrl
sub
lods
dec
fs
jns
inc
xor
sbb
and
ret
clc
mov
mov
push
jno
push
pop
adc
cli
pop
repz
fucomip
dec
and
dec
xor
pop
repnz
jae
mov
xor
xchg
inc
xor
insb
orl
pop
xchg
out
cmp
dec
imul
test
lods
mov
push
mov
fdivr
mov
cmp
jl
ret
jle
xchg
pusha
scas
int3
xor
hlt
hlt
call
fisubl
cmp
xor
cmp
fwait
inc
mov
sub
repz
cmpsb
jb
or
mov
ss
cmp
scas
mov
fcompl
inc
push
lahf
fisubrs
aaa
adc
add
insb
popf
and
mov
mov
dec
push
fdivrp
pusha
add
mov
jno
mov
test
je
push
mov
adc
push
out
in
int
dec
and
jb
mov
cmc
mulb
cmpsl
sub
mov
icebp
out
xor
add
lret
or
pop
jne
dec
inc
popf
shl
or
inc
mov
pop
dec
mov
movsl
cmp
mov
sbb
loop
cmp
dec
outsb
mov
sbb
push
in
lcall
add
push
pushf
mov
jb
rcll
mov
repz
xor
pop
jmp
lods
sarb
cmpsb
sub
cmpsl
pop
sbb
into
in
lods
cmpl
cmp
jle
sub
in
inc
movl
dec
cmpsb
cmp
insb
or
insl
cwtl
nop
add
outsl
insb
xchg
or
iret
call
ret
or
das
daa
gs
dec
cltd
pushf
dec
and
sarb
movsb
stos
cmpsb
pop
xor
dec
push
subb
inc
insl
jbe
in
add
xchg
inc
insb
decb
mov
fistps
cmc
pop
adcb
pop
pop
lods
mov
pop
xor
movsl
in
push
stc
jb
inc
dec
jle
add
add
mov
cs
outsb
xor
inc
add
sbb
or
sub
lret
sub
jp
sub
mov
fstpl
xchg
mov
mov
sub
inc
dec
ret
adc
fwait
cmpsb
xchg
xchg
xor
mov
movsl
mov
or
xchg
insl
xchg
shr
inc
insb
adc
mov
push
daa
insb
pushf
xor
loopne
push
mov
es
in
cwtl
xor
mov
push
call
sub
inc
aad
xchg
pop
dec
xchg
das
shl
je
popf
lret
add
stos
or
dec
cmpb
test
das
add
inc
das
outsb
mov
imul
cltd
cltd
outsb
ja
sbb
xchg
sahf
adc
jg
adc
leave
xchg
in
push
push
das
stos
clc
mov
loop
outsl
mov
pop
movsl
mov
es
push
repnz
inc
adc
insl
mov
fsubrs
mov
xchg
lret
inc
test
adc
je
in
int
lcall
mov
loope
lcall
bound
sub
hlt
jnp
lods
pushl
pop
mov
sub
int3
add
and
mov
dec
out
outsl
out
rcrl
sbb
pop
mov
pop
jns
and
rol
ja
adc
push
sub
outsl
xlat
dec
scas
add
jns
adc
loope
insl
push
adc
pop
imul
sbb
scas
dec
lret
pop
cltd
mov
hlt
cmp
pop
enter
xchg
mov
pop
in
pop
fsubr
mov
push
mov
paddusw
add
pop
xor
xor
pop
mov
jns
mov
sti
xor
jo,pn
inc
mov
js
xor
out
mov
lds
mov
js
mov
imul
jo
sbb
daa
push
mov
and
jmp
in
inc
push
outsb
fmull
inc
mov
lods
imul
nop
adc
push
cmp
out
mov
add
jge
pop
dec
push
sbb
lret
mov
mov
hlt
or
push
mov
fwait
sbb
mov
pop
mov
sub
movsb
cmpl
mov
rorb
cs
enter
adc
push
mov
xchg
test
rorl
test
dec
jge
and
cmp
fld
in
incb
aaa
push
popa
in
mov
iret
sub
cmpl
or
fadds
imul
sub
sub
mov
cmp
ds
pusha
push
sbb
cmc
push
jle
shr
idivb
shl
dec
fwait
push
fstps
add
addr16
test
fld
cli
jl
xchg
dec
cmpsb
cmpsb
adc
das
xlat
add
rcrl
dec
clc
xchg
stos
sub
sub
pop
dec
out
mov
cmp
into
push
jne
fstl
hlt
pop
rolb
rorl
es
xor
or
addr16
divl
mov
ss
mov
xchg
fcmovb
lods
loopne
or
sbb
xchg
lods
adc
imul
or
xchg
iret
addl
outsl
sub
std
test
push
out
xchg
insl
lret
push
push
mov
repnz
and
es
push
jbe
or
and
lods
loope
mov
lods
pop
out
xor
int
pop
mov
inc
mov
mov
cmp
aas
mov
out
testb
popf
shlb
fwait
out
xor
in
outsb
sub
leave
inc
pop
scas
lock
test
dec
fisubs
cwtl
or
xor
je
clc
xchg
mov
push
add
jae
xlat
or
movsl
loop
cmp
std
stos
jecxz
jo
es
xchg
sbb
or
lret
movsl
inc
cmp
filds
sbb
call
jg
ja
test
mov
xchg
mov
out
popf
or
ds
aas
mov
bound
fdivrp
jge
das
adc
das
cmp
xor
pushf
ficomps
fwait
stos
push
sub
ljmp
push
push
or
sub
loope
mov
cmpsb
ljmp
clc
arpl
ficomps
icebp
pop
adc
and
cmp
lcall
ds
test
mov
mov
cmp
fsubl
sarb
mov
bound
lds
mov
adc
push
cltd
cwtl
cs
and
les
je
xchg
add
sar
call
xorb
testl
push
sbb
test
mov
mov
fs
xchg
rclb
leave
aaa
pop
inc
int
xchg
daa
mov
inc
loopne
pop
xor
pop
add
fidivs
sahf
sbbl
test
sbb
outsb
push
xor
pop
aas
js
xor
cmp
bound
mov
and
sahf
adc
mov
out
testl
loop
cli
fisttpll
xor
lea
xchg
xchg
sbb
adc
out
bound
or
mov
sub
int
xor
aam
loopne
aas
sub
insl
jae
ds
fdivr
pop
in
push
out
cld
test
or
xchg
jne
mov
xchg
dec
mov
idiv
iret
dec
jp
add
lahf
mov
jb
jne
mov
xchg
cmpsb
roll
push
or
test
int
scas
inc
dec
pop
daa
test
mov
js
orb
sbb
out
rcrl
adc
cmpsl
add
jne
cmp
xchg
dec
mov
fnstcw
fmuls
push
out
fmull
int3
mov
iret
push
sub
movsl
jle
cwtl
mov
leave
clc
adc
xchg
aas
outsl
dec
outsl
xchg
push
out
mov
xor
mov
or
pop
cmc
xchg
pop
jg
pushf
nop
addb
repz
fwait
pop
mov
lcall
push
popa
jmp
xor
mov
out
lea
jle
gs
jb
sub
stos
push
push
cwtl
push
test
mov
jl
fidivrl
shl
mov
or
dec
sti
ss
push
sub
enter
imul
mov
test
mov
test
cwtl
lret
mov
xchg
mov
pop
popa
test
mov
jne
test
cmpsl
sbb
cli
cli
notb
in
cli
out
pop
push
jle
xchg
xor
aas
sbb
xor
call
aaa
mov
pop
cmp
orb
es
mov
in
roll
sub
ret
xor
sbb
mov
pop
mov
call
sbb
pop
xchg
push
sti
push
es
adc
pop
aas
call
mov
mov
pop
stos
movsb
pop
and
sbb
or
outsb
or
sbb
cs
sub
inc
sbb
cmp
stc
cmpsl
cmp
jl
mov
mov
xchg
inc
mov
push
sbb
fisttpl
imul
inc
sub
aad
dec
in
out
push
pusha
push
mov
xor
dec
and
jecxz
hlt
mov
lahf
sbb
lods
sub
sbb
call
sub
adc
mov
mov
mov
mov
mov
fcomps
dec
jg
outsl
movsl
pop
xor
inc
push
add
sahf
pop
and
das
xchg
pop
mov
inc
popa
into
cmpsl
adc
cli
jno
in
xchg
imul
xor
cld
mov
mov
mov
xor
jno
pop
popa
test
jp
loop
xor
and
sub
dec
out
lret
out
lret
lahf
mov
test
adc
adc
into
jb
cmp
mov
and
ret
pop
aad
fwait
out
in
mov
xchg
sub
or
clc
cmp
in
pop
mov
aam
adc
cmp
mov
mov
pop
or
loop
push
mov
in
shlb
mov
mov
ja
cmp
fldcw
test
ljmp
jg
cs
push
adc
std
scas
insl
sub
mov
ja
sbb
xchg
xchg
test
xchg
icebp
int3
jecxz
xchg
jge
push
scas
outsl
scas
lods
out
dec
mov
jg
scas
pop
add
fists
sbb
jae
push
cltd
jo
test
mov
das
mov
cmp
cmp
pop
pop
mov
std
lret
lds
xchg
or
push
pop
aad
ret
cmp
add
je
and
lds
scas
lea
dec
fs
pop
fdivs
jp
push
test
cwtl
in
rcr
insb
dec
jae
sbb
adc
and
push
push
std
or
cmpsb
out
xor
lods
out
rol
lock
imul
rorl
inc
adc
sub
aas
pushf
jmp
dec
sbb
scas
push
dec
stc
int3
or
sarb
call
ja
loop
in
push
inc
mov
lret
jnp
pop
mov
jns
mov
xchg
fisttpl
add
out
mov
gs
pop
xor
stc
jbe
cld
jne
lahf
out
adc
mov
bswap
sub
enter
rcll
jge
into
ss
enter
or
xlat
aam
mull
cli
test
xchg
ret
test
fwait
insb
xorl
fcmovu
sbb
out
aam
push
pop
cltd
cmp
or
mov
xchg
lcall
jle
cwtl
cld
dec
nop
xchg
and
movsl
aas
mov
je
jb
push
test
lods
mov
daa
lcall
ja
xor
mov
push
in
lods
xchg
mov
mov
pop
inc
decb
mov
std
call
mov
fstps
mov
shl
xchg
sub
call
lods
sub
test
sbb
imul
and
pusha
fcmovu
sub
push
push
pop
cmpl
ss
rcr
mov
pop
mov
sbb
cwtl
js
rorl
ret
sti
or
mov
adc
pop
cwtl
fsubl
push
fildll
xchg
inc
dec
inc
or
mov
sbb
add
mov
or
cmp
test
sbb
jl
cli
sahf
inc
pop
in
xor
inc
scas
mov
dec
aas
mov
mov
pop
bound
adc
stos
insb
sbb
rclb
nop
fs
push
ljmp
dec
lods
jns
mov
mov
sarb
adc
loop
inc
xor
leave
mov
pushf
or
xchg
and
test
add
lds
sbb
mov
push
out
icebp
xor
pop
ds
dec
push
int
out
ret
pop
and
fstps
cmovno
lcall
nop
push
adc
scas
sbb
push
pop
mov
nop
push
ret
fistl
adc
rcll
popf
jo
subb
xchg
push
sub
cmp
addb
jge
pop
clc
fsubl
jnp
mov
add
xchg
fnstsw
inc
call
xor
cmp
je
in
cmp
inc
fldenv
push
mov
test
adc
cmc
pusha
sub
lcall
sub
outsb
add
or
sti
clc
clc
add
push
inc
test
loop
repz
nop
inc
sbb
aad
movsb
jecxz
xchg
and
lahf
add
add
or
outsl
jns
jb
loope
mov
mov
loopne
pop
mov
jb
xchg
or
sub
clc
cmpsb
imul
push
aam
das
adc
popf
xchg
add
jne
sbb
add
or
inc
jns
lret
cmp
insl
mov
inc
adc
ss
sti
adc
xor
rorb
scas
or
gs
popf
jmp
fwait
sbb
repnz
test
das
jno
ja
push
pop
pop
xchg
pusha
mov
cltd
stc
nop
jmp
fisttpll
xor
add
pinsrw
les
add
and
ds
jp
lods
jmp
popf
in
dec
iret
mov
ds
dec
pop
or
roll
inc
dec
es
clc
imul
mov
test
pop
xchg
cmp
scas
aas
push
mov
dec
in
adc
pop
or
sbb
push
cmpsb
int
test
jno
in
inc
inc
or
push
and
lret
mov
pop
sub
dec
mov
mov
int
fistps
push
inc
pop
repz
jbe
popa
dec
mov
mov
rep
cmp
push
dec
xchg
mov
mov
or
mov
fwait
dec
push
test
loopne
jno
dec
and
sbb
jb
push
inc
nop
mov
nop
sbb
mov
and
mov
cltd
fists
test
in
jl
xor
sbb
mov
in
cmp
in
mov
pop
mov
ret
pop
push
or
push
cmpsl
das
mov
je
shrb
sbb
jne
js
jae
nop
insl
xchg
mov
inc
out
pusha
gs
and
and
jge
cli
repz
and
js
add
test
loopne
and
and
xor
push
jle
cltd
xchg
addr16
and
daa
in
push
rcll
mov
mov
leave
aaa
fldcw
sbb
jg
jb
outsl
bound
dec
shlb
and
out
xchg
mov
push
je
in
pop
mov
sahf
mov
filds
sbb
xor
shll
ds
inc
sbb
fs
sub
out
push
and
dec
gs
or
or
jp
add
pop
nop
scas
and
inc
shl
xchg
push
jle
stos
out
cmp
aas
inc
out
fdivrl
nop
mov
push
pop
test
jno
add
aas
sbb
xchg
fdivrl
shrb
into
gs
ss
insb
mov
push
push
aad
imul
shrb
cmp
out
inc
cli
jecxz
push
push
das
jns
repnz
adc
rolb
int
inc
clc
bnd
fbld
fnstcw
idivl
adc
mov
xchg
xor
fimuls
jno
push
movsl
test
adc
jne
pop
pushf
insl
mov
mov
pop
ljmp
inc
pop
xor
out
mov
inc
call
sub
adc
cmp
sahf
pop
lret
xlat
add
push
fwait
or
or
cmpsl
cmc
mov
cli
inc
xchg
addr16
stc
nop
arpl
xchg
jns
mov
mov
cs
cmpb
push
add
mov
dec
xchg
jg
and
adc
into
inc
lea
xchg
or
lock
jp
mov
or
orb
mov
scas
sar
in
jmp
fldenv
dec
push
push
jle
shlb
sbb
adc
je
fcompl
and
add
mov
jo
cmp
sub
pop
adc
or
mov
out
cltd
aad
and
lods
push
xor
ljmp
push
cmp
gs
push
adc
enter
push
clc
lods
mov
adc
addr16
popa
sub
sbb
cmp
xchg
pop
pusha
mov
out
adc
hlt
jae
into
pop
xor
mov
cmp
cli
call
sub
xchg
sbb
scas
addl
ret
cmp
dec
movsl
rcl
xor
into
lea
or
insl
cmp
stc
repnz
les
mov
xor
jno
adc
cmp
enter
out
sbb
cli
mov
and
jae
je
pop
pop
and
mov
push
sub
sbb
sub
mov
dec
jne
push
xchg
ret
adc
sbb
xlat
outsb
pop
es
mov
dec
push
mov
cmp
xchg
sahf
jno
movsb
pop
xor
jns
fidivrl
adc
sub
jg
xlat
imul
dec
cltd
dec
push
data16
mov
dec
or
popa
into
or
ds
adc
out
icebp
outsl
adc
xchg
jg
mov
jno
xchg
scas
cmp
testl
lods
xchg
fmuls
mov
adc
xchg
jecxz
cmp
sub
mov
jge
sar
divb
mov
push
and
je
cmp
mov
push
mov
inc
int
outsb
xchg
xchg
popf
mov
mov
and
mov
inc
or
inc
outsb
mov
int3
inc
and
daa
fxch
icebp
dec
push
mov
mov
xchg
cmp
pop
xchg
inc
adc
mov
ret
dec
clc
cmp
mov
in
add
packssdw
shl
mov
in
jbe
ret
sub
bound
les
inc
and
pop
vmovlps
or
stos
and
xor
jmp
jmp
iret
xchg
ret
jp
mov
das
fildl
mov
cmp
fistpl
sti
stc
xchg
test
mov
xchg
in
mov
and
movsb
in
jns
call
mov
neg
pop
add
jbe
fisubl
add
popa
ss
jle
loopne
std
or
sbb
cmp
add
xchg
and
sbb
inc
insl
jno
into
mov
daa
sbb
or
in
inc
out
subl
push
repz
cmp
xchg
sbb
or
mov
pop
push
adc
pop
or
cmp
pop
jge
sub
lcall
xlat
mov
xor
divl
sub
flds
hlt
dec
sub
sub
jmp
negb
jb
popf
mov
pop
cmp
jmp
imul
push
pop
repnz
lea
lcall
dec
lcall
xlat
xor
dec
mov
xor
test
ja
ficomps
int
and
xchg
or
mov
xor
test
add
push
mov
jecxz
xlat
xchg
call
lahf
test
test
and
pop
dec
push
adc
imul
cmc
jbe
sub
sub
jl
jbe
and
ret
bswap
pop
cmc
pushl
inc
push
les
push
cmp
pop
sbb
aas
pop
jo
dec
sub
hlt
sub
dec
add
mov
dec
mov
jge
jl
xor
inc
jne
mov
inc
push
push
repnz
inc
push
xchg
mov
push
mov
pop
cmp
loopne
fistps
or
push
fwait
adc
sti
inc
sbb
hlt
mov
cmpb
jp
cmovno
dec
xor
popf
add
xorb
aad
ss
xchg
sub
lahf
dec
mov
les
jne
lods
in
negb
mov
std
pop
mov
fidivrl
xchg
pop
mov
iret
xor
and
adc
mov
icebp
fcomp
mov
cmp
push
push
mov
scas
out
dec
pop
cmp
leave
neg
adc
clc
push
icebp
and
addr16
int3
fwait
mov
mov
mov
cmp
adc
arpl
scas
mov
add
xchg
sub
mov
mov
adc
pop
out
jb
xchg
xor
lock
jb
imul
xchg
lock
jl
fnstcw
cmpsb
stc
mov
cmp
fldt
push
jbe
leave
hlt
fidivrl
cltd
sub
ds
insl
mov
loop
inc
dec
jnp
call
cmp
push
xchg
dec
seto
ja
mov
pop
add
and
repnz
lret
daa
mov
mov
out
mov
cmp
mov
jg
shll
add
popa
data16
test
xor
pop
push
sub
movsl
sarb
sub
inc
mov
add
cltd
xor
aaa
rcrb
loop
adc
inc
pop
pop
stc
fiaddl
and
dec
lcall
lea
cmp
mov
lret
sti
mov
cmpsb
mov
xor
and
in
xor
fdivrl
push
ret
sbb
aam
and
mov
xor
or
cltd
xchg
clc
int
sub
gs
pop
sub
sub
repz
shlb
push
lret
sti
out
scas
sub
cs
xchg
cmpsb
jno
fnstcw
mov
int
lahf
and
outsl
push
mov
push
call
push
mov
mov
xchg
inc
sbb
imull
lret
iret
ffreep
pop
xchg
pop
mov
add
arpl
mov
enter
popf
push
mov
sub
sti
cs
push
into
int3
and
sbb
mov
jo
jp
cmp
into
jno
sbb
out
aaa
mov
mov
lahf
mov
jmp
mov
pop
mov
lods
dec
sub
fiaddl
arpl
adc
outsl
popl
push
cmc
pushf
sti
sahf
mov
xchg
loope
pop
fldl
nop
xchg
iret
ror
cmp
dec
fldenv
shlb
xor
ljmp
sbb
xor
and
gs
or
adc
xchg
xlat
stos
std
cld
pop
sub
lahf
push
sbb
insb
pop
iret
shll
fisttpl
add
inc
movsl
mov
or
test
xchg
out
mov
popf
lret
mov
fnsave
push
cmp
flds
or
xor
add
das
xlat
and
fsubrl
mov
test
adc
or
pop
pop
sbb
jnp
sub
imul
cmp
add
jge
dec
pop
push
mov
neg
sub
inc
cmpl
out
xchg
popa
enter
scas
aas
adc
insl
adc
orb
sbb
data16
addr16
inc
inc
out
inc
jg
ja
fs
xor
int
add
movb
psubd
shl
and
ret
push
in
ret
push
jl
sub
xlat
push
dec
pop
bt
sbb
mov
xor
das
inc
inc
outsl
fdivl
cwtl
jns
ja,pn
jo,pn
lods
or
sub
inc
and
push
bound
rorb
sbb
adc
loopne
dec
es
push
loop
shrl
jge
mov
xor
cmp
insl
icebp
fs
mov
in
fs
pop
test
mov
cmp
repz
and
pop
fnsave
add
outsl
nop
fs
fwait
test
xlat
adc
stc
ljmp
adc
or
cwtl
jo
clc
pop
fs
cmpsl
mov
pusha
jno
xchg
testb
push
movsl
mov
xor
pop
loope
repz
pop
adc
test
mov
inc
and
dec
mov
pop
cmp
adc
push
bound
adc
cmpsb
xchg
pop
sub
insl
adc
xor
mov
push
inc
jno
or
imul
mov
sbb
pop
add
ds
mov
xchg
leave
or
std
xor
dec
ret
je
xchg
mov
rol
stc
shlb
inc
js
cmp
mov
mov
sbb
stos
loopne
mov
sarl
pop
aaa
adc
jo
xlat
shl
sub
mov
shlb
fiadds
je
sbb
push
data16
movlps
dec
sahf
xchg
jne
dec
or
jle
jmp
xor
sti
jmp
jnp
or
shrl
xor
adc
lds
push
sahf
add
fstps
int3
jmp
ret
xlat
adc
loopne
out
cli
sbb
cmp
aad
jg
mov
xchg
jae
aad
repnz
xlat
jle
out
xchg
imul
loop
jp
cmp
mov
stos
add
cpuid
or
pop
inc
das
mov
pop
fidivl
pop
pop
hlt
les
inc
out
xchg
test
mov
les
fwait
out
int3
leave
push
sbb
add
sbb
addr16
xchg
mov
mov
outsl
or
and
sbbb
cmp
scas
and
icebp
dec
jmp
sbbl
nop
iret
add
mov
stos
and
insl
push
iret
push
ja
push
mov
insb
aam
jge
add
int
xchg
repz
out
xor
mov
repz
insb
pop
ret
fcmovbe
lock
insl
in
sub
and
cmp
mov
sub
add
stos
fwait
pop
mov
mov
call
pop
add
ficompl
aad
movl
dec
test
into
xor
jle
mov
xchg
mov
jle
inc
stc
aam
push
xchg
sarl
xor
out
jb
inc
int
mov
ficoml
addr16
call
pop
mov
data16
xchg
mov
fchs
adc
mov
adcb
and
mov
into
xchg
std
jno
mov
inc
xlat
cmp
adc
bound
jbe
sub
mov
pop
xor
mov
repz
mov
fmuls
fists
sbb
mov
mov
sahf
jne
sbb
repnz
mov
outsl
scas
push
mov
rorl
nop
mov
in
dec
out
jl
and
stos
dec
and
pop
dec
enter
sub
push
inc
push
les
lock
int
lcall
cmp
xchg
xor
ss
jg
fsubr
notl
jg
arpl
shlb
adc
jle
adc
int3
sar
rcrw
adc
leave
add
fucomp
add
movsl
out
sbb
in
leave
loop
xlat
sbb
add
jae
int3
jb
pop
jo
add
in
lret
jle
add
int
pop
mov
add
insl
dec
jmp
or
ret
pop
xor
dec
mov
filds
test
outsb
fwait
scas
push
mov
mov
arpl
loopne
mov
lcall
xor
sub
cmp
cmp
push
inc
sbb
push
daa
mov
push
and
into
loope
pusha
andb
mov
mov
xchg
or
fidivrs
jo,pt
and
mov
push
sbb
push
fwait
sahf
es
push
negl
jl
scas
popa
insb
nop
or
add
call
imul
pop
xchg
es
pop
xchg
dec
loopne
mov
xchg
jo
adc
push
mov
inc
xor
xchg
int
add
pop
and
sbbb
movaps
rep
sbb
add
scas
jmp
ss
push
lahf
stos
aas
sub
mov
cwtl
test
mov
cmp
sbb
sbb
cmp
sbb
inc
sub
in
out
insb
repnz
mul
and
addl
dec
mov
add
and
imul
les
ds
movsb
push
lods
push
test
cltd
cwtl
xchg
test
inc
jne
push
mov
shll
rcll
cmc
inc
setl
mov
push
test
cmp
push
jge
inc
adcl
jl
pushf
sahf
xchg
test
cmp
bound
out
in
dec
xchg
mov
test
xor
xchg
jne
scas
sub
arpl
insb
mov
scas
cs
sbb
jbe
mov
mov
mov
dec
sub
imul
push
and
cmc
mov
jnp
jbe
out
stos
inc
mov
jg
insl
loope
or
fwait
mov
fsubl
outsl
sbb
sub
adc
filds
mov
xor
or
cmp
sub
sub
ficoms
clc
inc
cmp
loop
test
shlb
sbb
pop
fdivl
push
mov
inc
mov
cmp
jmp
mov
and
jg
xor
jae
insl
sbb
cmc
dec
lahf
cmp
mov
data16
movsb
xor
mov
sub
jecxz
outsl
push
cmpb
cmp
int3
inc
and
push
sub
loopne
mul
cltd
jle
lods
xor
rcr
cmp
mov
notl
into
mov
fbld
adc
inc
add
jle
fmuls
inc
fs
xchg
mov
adc
jecxz
xchg
inc
scas
mov
mov
adc
xchg
push
arpl
push
cld
pop
shrb
fwait
jmp
lcall
add
adc
inc
cmc
mov
fstpl
sub
pop
cmc
cltd
mov
cmc
icebp
ljmp
loopne
jg
adc
mov
mov
loope
int3
push
cmp
xor
sub
loopne
int
daa
sbb
lods
pop
fs
sub
ja
add
xchg
out
inc
jnp
push
push
or
int
sbb
mov
ret
cmc
xbegin
mov
pop
lds
cmc
fsubrl
push
dec
cmp
xchg
or
mov
movsl
pop
add
push
mov
cld
pop
data16
gs
scas
mov
fstps
sub
aas
dec
jmp
movsl
xchg
shrl
bound
shrl
xor
fistps
int
xchg
je
add
push
stos
pop
cmp
pop
or
mov
jb
pop
insb
mov
out
scas
dec
mov
test
mov
cmc
xchg
or
andb
lock
into
cmp
fstp
push
jne
mov
repnz
popf
xchg
popa
das
mov
popa
inc
push
scas
adc
rcll
roll
adc
or
adc
pusha
out
pop
bound
daa
cli
sbb
jno
or
push
gs
pusha
jbe
enter
mov
adc
xor
iret
xor
add
stc
xchg
xor
aas
imul
cmc
inc
push
and
push
jl
loope
or
mov
int
scas
mov
sbb
jo
fiadds
jno
jg
jne
fs
rcl
jne
add
xchg
xchg
dec
das
das
pop
jbe
lods
pop
lahf
adc
mov
les
push
popa
or
or
and
fs
sbb
lret
out
xorb
ja
lods
pop
pop
repz
pop
or
push
repnz
aaa
or
hlt
ja
lock
data16
jnp
sub
pop
jp
add
mov
setle
mov
sbb
nop
int3
loopne
fwait
mov
xor
lea
mov
lahf
xlat
cltd
scas
xlat
movsb
in
push
adc
test
add
add
push
leave
adc
pop
pop
mov
jecxz
or
ret
aam
xor
cmp
test
dec
xchg
sub
pop
pop
pop
adc
ficoml
repz
ljmp
aam
add
into
cmp
out
cltd
add
sub
sahf
cmp
push
pop
leave
les
je
not
jbe
mov
cmp
push
das
adc
dec
jl
movsl
mov
daa
loope
lock
pop
sbb
inc
pop
stc
hlt
mov
mov
dec
pop
icebp
inc
adc
shr
mov
mov
or
push
lret
mov
xor
cmp
insl
jge
rcrl
scas
fdivrp
mov
in
xchg
mov
dec
pop
popa
aam
lock
jmp
push
jp
or
inc
mov
dec
mov
test
or
push
loop
xchg
and
hlt
stc
jecxz
aam
inc
mov
cmp
xor
sbb
push
mov
xchg
jae
mov
and
mov
push
inc
and
or
cli
pop
fists
leave
sbb
sub
inc
add
jne
add
xchg
push
push
out
outsb
test
cmpsb
inc
movsl
stos
mov
scas
jne
inc
ds
xlat
pop
cs
mov
jp
shrl
lock
adc
mov
test
sbb
inc
popf
jle
xor
test
mov
xchg
pop
clc
mov
pop
out
sahf
mov
lret
inc
mov
pushf
xor
mov
or
decl
sub
inc
lods
daa
rcrl
sbb
pop
in
mov
andb
cmp
or
jge
js
int3
xor
xchg
mov
lret
les
xchg
jmp
xchg
sbb
clc
imul
rcrb
push
nop
mov
ljmp
sub
pushf
mov
and
cmp
xchg
or
mov
sub
inc
or
adc
mov
jne
jp
mov
sbb
sbb
mov
cs
fisttpl
into
dec
arpl
outsb
bound
dec
adc
inc
push
clc
lret
int
fs
inc
push
int
lds
fsubrp
cmpsl
pop
sbb
call
out
dec
sarl
imul
mov
inc
call
sbb
mov
xchg
into
jmp
in
mov
in
outsl
and
cwtl
repz
push
xchg
out
loop
sub
mov
int
sti
mov
lods
cmp
dec
cmp
push
or
subb
andb
push
jle
pop
test
out
mov
scas
bswap
testl
aam
jge
bound
movsb
or
shll
pop
jle
push
arpl
out
mov
push
loopne
jp
inc
fidivrs
jg
pop
push
stc
mov
jae
cmpsb
addl
scas
imul
mov
xchg
lea
xchg
fwait
sub
aaa
add
test
mov
pop
pop
pop
int
cs
mov
push
movsl
mov
aad
shll
sbb
dec
or
ret
mov
pushl
xor
test
xor
scas
jo
or
dec
mov
test
fisubs
mov
int
subb
js
jae
sub
dec
in
jp
je
jbe
jnp
enter
cmp
idivb
or
lret
pop
addl
jmp
mov
xchg
push
mov
out
sub
inc
pop
stos
add
call
or
sub
pop
and
int3
mov
lcall
imulb
xor
lret
mov
arpl
pop
fmulp
sarl
mov
loop
add
fldcw
push
sbb
pop
jl
adc
inc
testl
xorl
xchg
pusha
push
shlb
mov
imulb
lds
in
inc
into
cmp
jb
mov
aam
pop
imul
lods
adc
pop
adc
add
mov
outsl
jnp
loope
fimull
scas
out
daa
push
xchg
dec
cmpsb
repnz
stos
into
xchg
cmp
jge
ret
lds
and
cmpsl
fimull
pushf
mov
and
stc
repz
inc
fadd
dec
inc
sub
or
in
adc
pop
out
adc
ret
ss
mov
xchg
clc
cmp
and
int
jg
cmp
roll
inc
ret
push
adc
mov
adcb
mov
jecxz
xor
jg
out
pop
stos
ss
xchg
xchg
mov
cmc
dec
mov
mov
icebp
lods
lret
xor
movsb
ja
mov
mov
mov
pop
cmp
out
sub
or
xchg
pop
push
xor
xchg
cmp
xchg
cmp
xlat
enter
cmpsl
xchg
xor
imul
gs
and
mov
ds
test
sbb
call
xor
orb
repnz
test
xchg
pop
cld
xchg
adc
adc
bound
cmp
leave
jle
jecxz
sbb
cwtl
stos
js
imul
imul
bnd
fwait
cmpsl
sbb
sbb
in
mov
fimull
push
jb
dec
adc
movsb
lods
jae
pop
mov
dec
ret
jge
int
in
add
xor
iret
xchg
sbb
lret
fnsave
lods
fsubrl
data16
cmpsl
mov
and
adc
bound
ret
cmp
cwtl
mov
fxch
out
lret
in
xchg
cmc
xor
dec
and
inc
ds
jg
sub
in
and
test
pushf
into
scas
and
or
ja
ds
test
stos
sbb
sbb
mov
pop
sub
mov
lods
push
leave
mov
outsl
pop
in
cmp
decb
jmp
sub
out
or
push
scas
pushf
cmp
nop
out
inc
icebp
sub
jo
xchg
pusha
mov
jg
or
adc
mov
les
popf
fwait
shl
mov
sub
jg
stos
cmp
test
xchg
jns
gs
pop
add
adc
out
pop
xchg
xor
add
push
jle
lock
pop
jbe
aam
mov
pop
or
jo
mov
sub
add
jbe
mov
lods
jmp
sub
cmp
cmp
sbb
int3
jmp
or
fnstcw
movsb
pop
xor
mov
loop
mov
dec
sbb
mov
or
push
enter
mov
sbb
insb
jmp
fldl
jbe
inc
xor
aas
sbb
arpl
out
xchg
gs
daa
pop
cmc
ljmp
cmpsb
sub
inc
pop
cld
add
ss
push
sbb
mov
in
mov
sbb
js
lret
xchg
jmp
in
add
mov
insb
mov
cmc
loop
movsl
lods
js
push
sbb
add
stos
and
lahf
rclb
mov
fwait
sti
mov
mov
add
mov
call
dec
pop
xlat
mov
cmpsb
pop
stos
rol
iret
leave
lock
enter
mov
mov
dec
sbb
sbb
pusha
mov
add
imul
fsubrl
pop
repz
push
jo
add
lods
cwtl
lea
mov
sbbl
cltd
das
jb
cli
mov
fsub
subl
loop
sub
xchg
test
push
jae
cmp
jo
hlt
mov
xor
loop
mov
loope
icebp
xchg
cmp
add
add
xchg
jmp
jns
sbb
ret
dec
shlb
mov
stos
mov
and
out
and
jecxz
cmp
mov
cli
mov
adc
sbb
bound
outsl
push
pop
adc
xor
clc
cmp
and
bnd
sub
rcrb
test
int
mov
cmpsl
mov
lretw
enter
xchg
andl
ds
scas
push
out
pushl
mov
jb
stos
call
add
xchg
and
jecxz
mov
loopne
mov
les
dec
fsubrl
leave
mov
ljmp
dec
pusha
in
add
cld
lods
popf
mov
dec
or
add
adc
mov
or
sub
cmovns
cmp
cmp
and
daa
fidivrs
fwait
mov
and
call
lods
fsts
shl
cmp
int3
icebp
xor
out
cmc
mov
les
stc
jae
lret
aad
inc
mov
shrl
cmpsb
mov
adcb
xchg
xlat
aaa
loope
jge
les
out
inc
xchg
into
jb
popa
inc
cld
jno
lods
fistpll
je
or
and
pop
data16
inc
movsb
cmp
mov
jl
cmp
push
and
jmp
jp
add
xchg
sbb
pop
das
shl
pop
lahf
cmp
and
adc
xchg
xchg
out
ja
xor
or
push
fisttpl
sbb
push
add
idivl
sbb
rorb
mov
sarl
cmp
push
enter
sbb
mov
or
call
arpl
fsubl
adc
or
sub
mov
cmp
outsb
pusha
inc
sub
fs
rcll
jnp
adc
hlt
cmc
mov
out
rcrb
into
rolb
sub
jmp
inc
and
sti
out
ja
jo
add
lret
push
clc
leave
in
cmp
pop
sub
push
enter
sbb
das
sbbl
cmpsl
xor
aad
or
jnp
cmpb
sub
das
pop
jle
push
test
jno
outsl
pushf
fiadds
mov
test
mov
movsl
aaa
cld
test
or
jl
adc
jge
xchg
xlat
add
je
ja
imul
outsb
imul
lds
in
or
lods
cltd
lods
jmp
shlb
pop
int3
mov
test
mov
add
shlb
xor
adc
mov
cmp
mov
rcll
sub
mov
sub
repz
mov
adc
adc
mov
mov
outsl
adc
leave
ret
call
enter
es
inc
inc
sub
addl
xor
ror
and
or
pop
xor
mov
add
call
pop
in
sti
aas
outsl
pushf
adc
xor
xchg
xor
sbb
and
cmp
inc
ds
sub
pop
rcrb
pop
cltd
mov
dec
and
jne
mov
xlat
sub
icebp
mov
push
fiaddl
and
popa
testb
or
mov
xchg
lret
sub
add
leave
into
imul
xchg
outsb
loope
cmp
sub
dec
and
cld
fnsave
cli
push
sub
push
ret
pop
xchg
bound
inc
insb
xchg
jl
jmp
sti
jbe
std
rolb
shlb
daa
scas
jmp
adc
mov
lock
leave
or
cltd
pop
cmpb
pop
icebp
add
dec
fidivrl
sub
cmp
outsl
popf
add
pop
aas
mov
jp
ret
jbe,pn
iret
aad
jns
call
push
test
ss
icebp
mov
mov
les
clc
stos
out
fiaddl
pop
jno
pop
cwtl
popa
push
push
js
addr16
dec
jle
cs
mov
dec
ret
in
push
lods
out
imul
xor
hlt
shll
xor
push
lods
out
movsb
jo
cmpsb
sbb
cmp
xor
jmp
ret
mov
int
xor
data16
les
fidivl
push
ljmp
inc
popf
daa
shl
fcompl
cltd
adc
in
cmc
inc
stc
out
test
lret
or
mov
cmp
imul
xchg
xor
push
fwait
mov
sahf
shrb
fldl
out
xchg
and
sbb
into
into
std
gs
ljmp
iret
pop
orb
jbe
add
add
gs
add
push
popf
mov
loop
push
mull
inc
mov
push
insb
dec
movsl
fcmovbe
mov
mov
jle
arpl
movsb
scas
subb
rorb
pusha
jmp
jo
push
popl
xor
adc
fnstsw
sbbb
push
ret
adc
in
and
adc
pop
push
cli
jne,pn
xor
popa
dec
lcall
into
add
mov
stos
movsb
mov
fwait
pop
pop
ds
jb
sub
or
popa
and
shll
inc
arpl
cmp
add
out
pusha
pop
mov
cmpb
popa
in
loopne
inc
sbb
xchg
jge
add
mov
dec
fcmove
fildll
cmp
mov
cmp
jle
mov
adc
push
hlt
sbb
push
jae
ds
loop
jge
pop
clc
incb
int
cmp
cmp
rcrb
sub
sbb
xchg
jno
rclb
sub
lods
sub
xor
mov
insb
shrl
insb
sahf
xlat
and
mov
test
jb
scas
mov
and
movsl
xor
std
in
out
pop
imul
and
cld
jl
push
dec
ds
jmp
push
and
ljmp
lock
mov
push
xchg
inc
xchg
inc
movl
push
mov
mov
jnp
out
sub
icebp
or
mov
mov
cmp
or
pop
inc
psubsw
xchg
push
inc
pop
pop
xor
shl
bound
dec
add
insl
leave
imul
lods
lahf
add
xchg
enter
aad
cmc
jp
mov
cli
mov
mov
xchg
mov
mov
aam
jb
cmp
nop
jae
lods
aad
mov
aam
pop
pusha
in
and
sub
jns
jo
push
jg
sahf
jmp
add
and
xor
push
mov
addr16
adc
iret
les
inc
sub
es
std
or
stos
or
and
fwait
push
enter
ss
mov
lret
mov
push
pusha
sbb
add
cmp
or
outsl
cs
lds
xchg
and
lret
stos
push
jo
xchg
movb
push
inc
pop
xchg
aas
je
xor
jl
and
mov
push
stos
aas
push
in
ss
sti
clc
sbb
out
das
mov
ds
add
std
outsb
push
addr16
xchg
repz
sbb
mov
and
add
cmp
dec
adc
call
push
mov
sbb
jp
push
push
repnz
jg
mov
les
pop
bound
mov
jp
adc
dec
add
cmp
scas
pop
repnz
fiaddl
jle
out
mov
movsl
iret
sbb
jae
inc
mov
sbb
mov
repz
lret
jns
sub
fidivs
pop
ja
jnp
outsl
add
jne
mov
jecxz
sbb
fs
push
push
xor
mov
sub
lret
aam
lods
xlat
outsl
or
adc
push
jb
sub
sti
test
out
dec
or
fcompl
lds
js
or
sub
dec
mov
lock
push
out
sbb
sbb
aaa
jl
fnstcw
movsl
out
inc
xor
push
xchg
inc
and
add
data16
xchg
das
call
sub
out
sbb
push
shll
in
inc
mov
sub
inc
bound
dec
in
sbb
xchg
ficoml
push
repz
mov
ds
mov
dec
push
pop
xchg
jg
push
testl
mov
adc
orl
cmp
std
call
and
ljmp
loope
pushf
clc
and
std
das
and
data16
dec
dec
test
ret
inc
imul
in
jb
push
loop
push
jl
subl
or
adc
pusha
mov
out
insl
loope
ficomps
rol
or
mov
adc
xor
adc
push
lock
test
in
adc
aam
mov
and
mov
cmp
jae
leave
out
test
jbe
sub
clc
ficompl
mov
sbb
cmp
popa
lods
and
push
fidivl
pop
or
stc
inc
popa
cmpsb
loop
mov
ret
adc
sbb
mov
gs
jae
adc
je
lock
repnz
pop
mov
je
gs
dec
sub
cmp
inc
inc
xchg
pop
xlat
xor
cmpsb
movsl
mov
cmp
pop
pop
add
jnp
loope
std
jae
jns
cs
dec
sarl
cltd
out
and
mov
lahf
mov
popa
in
mov
adc
inc
jae
jp
cmp
sbb
lcall
pop
shrb
jo
inc
iret
or
loop
stc
scas
aam
xor
lcall
push
sbb
lretw
hlt
cli
mov
xchg
adc
mov
xchg
jecxz
dec
dec
or
dec
adc
sbb
addr16
out
push
sti
inc
sbb
loop
test
lahf
jno
xchg
mov
movsl
xor
xor
jbe
adc
sbb
stos
push
cmp
lea
mov
dec
outsb
clc
ds
rcrb
jae
dec
int
enter
push
popa
rcll
push
xchg
stos
sub
sbb
mov
in
sbb
adc
push
mov
pusha
xchg
pop
push
ljmp
mov
sub
addr16
outsl
inc
xchg
mov
push
cmp
dec
inc
push
push
sub
pop
dec
gs
inc
cmp
leave
loope
sbb
add
sub
jmp
pop
in
dec
inc
mov
or
jecxz
jl
divps
std
repz
pop
jle
out
pop
in
mov
hlt
inc
inc
stc
fidivrl
pop
jecxz
daa
and
dec
push
pop
pop
movsl
negb
ljmp
orb
cmp
orl
and
pop
mov
jle
push
icebp
fldenv
lock
push
sub
ss
jb
test
mov
into
xchg
xor
aas
fstpl
jge
xchg
in
les
adc
out
inc
add
inc
cmpsb
dec
movsb
add
pop
icebp
pop
pop
popf
cltd
ret
dec
sub
cwtl
push
dec
pop
mov
std
daa
jmp
mov
movsb
xchg
js
sbb
mov
jns
xchg
xchg
mov
aad
nop
loop
add
lods
roll
push
and
adc
mov
popa
fdivl
jle
movsl
and
or
sahf
js
loope
dec
sbb
sub
addr16
or
hlt
mov
adc
cmp
das
mov
aad
mov
insl
sbb
stos
lahf
outsl
cmp
pop
sub
mov
lods
push
or
push
and
out
xchg
xor
and
xchg
nop
fdivrl
add
jmp
mov
lods
mov
mov
rcr
mov
sub
test
mov
lock
hlt
cld
sbb
lahf
xchg
pushf
shrl
arpl
xchg
mov
mov
jno
cmp
in
xor
mov
xchg
cmc
sbb
cld
orb
inc
push
pop
sysenter
icebp
fs
and
or
mov
mov
addr16
add
stc
cld
addr16
mov
mov
adc
or
mov
jecxz
xchg
sub
call
sti
repz
add
and
repnz
rolb
push
xchg
mov
insb
out
cmp
sub
negl
aam
add
bound
xchg
or
sub
fadds
test
add
xchg
add
les
mov
and
popf
nop
inc
ja
cmpsl
pop
hlt
pop
je
scas
sbb
clc
lods
dec
stos
dec
pop
ret
sbb
inc
jbe
aad
movsb
dec
enter
fwait
xor
jmp
jp
cltd
aam
imul
and
fistps
adc
sbb
mov
mov
jne
sbb
jae
scas
nop
daa
xor
aaa
cs
sbb
aad
dec
lods
test
push
call
sbb
dec
mov
out
addr16
lret
mov
sbb
xor
and
dec
aaa
sahf
or
cmp
xor
and
push
adc
dec
insl
rorb
add
sub
loop
inc
gs
mov
or
xchg
sbb
dec
int3
xor
int3
or
xchg
fucomip
jne
mov
fwait
inc
fiaddl
stos
and
xchg
adc
lods
aam
in
or
mov
dec
push
test
fstps
test
mov
jns
xchg
inc
inc
insl
out
popa
xchg
sbb
fimuls
aaa
sbb
xor
dec
mov
mov
sarb
xchg
cmp
xchg
and
cmovnp
mov
imul
mov
in
test
push
cwtl
mov
enter
mov
in
cmp
popa
xor
cmp
lret
or
mov
mov
enter
xchg
inc
or
hlt
ljmp
lcall
insb
je
mov
and
jns
shr
test
mov
xchg
or
fs
fs
imul
jle
repz
mov
cmp
cltd
ss
or
dec
dec
add
inc
lret
mov
cmp
sbb
mov
xor
popf
dec
xchg
jno
mov
push
jns
js
adc
js
jmp
dec
in
mov
ss
iret
pop
xchg
xchg
jge
mov
dec
xchg
ja
ret
lahf
inc
sar
std
hlt
xor
pop
scas
add
xchg
dec
loop
cmpb
push
popa
sub
imul
jl
aaa
cmp
or
lds
adc
sub
testl
lret
or
cmp
stos
out
ret
cld
pop
mov
xchg
sarl
lds
andl
lahf
jg
lcall
int
cmp
rolb
add
pushf
into
jo
shll
push
mov
fnstsw
push
insb
lods
pop
inc
mov
lcall
mul
sub
adc
les
inc
stc
jmp
inc
es
std
dec
ljmp
call
pop
sbb
jmp
mov
mov
or
push
fiaddl
rcll
dec
push
ljmp
sbb
add
addr16
mov
jae
sti
xchg
int
adcb
lock
push
mov
daa
inc
fldenv
adc
and
adc
dec
mov
fmul
mov
jle
rcll
test
sbb
hlt
cmp
push
pop
jae
xchg
sub
jae
fistl
mov
jg
jnp
fsts
enter
mov
dec
xorl
jns
inc
pop
dec
push
pop
or
xchg
cltd
dec
push
shrl
ljmp
mov
xchg
jl
pop
ljmp
loop
sub
xlat
mov
jp
mov
data16
pop
les
or
sub
stos
jmp
sti
cmp
outsl
fcom
mov
xor
filds
and
das
adc
adc
fcmove
btc
popf
sub
test
rorl
repnz
cld
sbb
or
mov
jae
xor
jb
push
mov
add
or
fdivs
insb
cld
jl
xor
imul
xchg
imul
bound
push
xchg
sbb
mov
pop
push
sbb
aam
and
mov
jno
adc
in
pop
repz
or
inc
adc
pop
mov
pop
scas
sub
mov
jo
cltd
repz
pop
and
sbb
push
sbb
inc
mov
mov
cltd
mov
mov
sti
sub
add
rorl
inc
jecxz
pop
inc
push
roll
mov
out
mov
icebp
add
pusha
enter
and
repnz
shl
pop
js
aad
dec
call
add
gs
dec
int3
mov
xchg
imul
push
iret
xchg
dec
mov
clc
lcall
cli
mov
dec
dec
pop
test
data16
leave
cwtl
jno
add
xchg
jmp
jb
push
push
push
jecxz
mov
push
jnp
jl
je
shr
push
rclb
int
dec
les
daa
fsubl
stos
xchg
cmc
push
jle
movsb
lcall
xchg
xor
sbb
clc
adc
sub
adc
xchg
mull
in
cmp
xor
arpl
add
in
lods
jbe
scas
xor
aam
shrb
xchg
add
bound
jno
mov
add
ja
cltd
xchg
outsb
jo
test
jg
ja
add
add
adc
jmp
lahf
cwtl
push
pop
int
push
pop
cmpsl
inc
sbb
xchg
cmc
pop
sbb
insl
in
test
ss
mov
xchg
add
sbb
mov
push
in
fiadds
andb
std
xchg
adc
xchg
out
push
lds
dec
stos
outsl
hlt
pop
adc
xchg
xchg
pushf
ret
cltd
lahf
cmp
mov
pavgw
add
or
lods
outsb
mov
mov
daa
push
push
test
push
aaa
mov
mov
loope
lret
push
ror
mov
out
mov
adc
and
push
xor
mov
add
cmp
push
or
enter
mov
call
loope
mov
sahf
gs
xchg
jp
push
adc
jns
xor
inc
pop
jae
jae
push
leave
imul
fidivrl
arpl
mov
into
out
sbb
out
scas
js
cmc
mov
es
mov
out
add
fwait
cmpsb
mov
pop
sub
push
fcmove
inc
icebp
aam
iret
mov
push
stc
cltd
bound
pop
dec
add
cld
bnd
dec
add
mov
or
sub
and
rclb
loop
inc
and
pop
dec
es
mov
add
dec
stc
or
cmpb
lcall
arpl
mov
jne
out
out
cltd
lret
jmp
xor
cmp
jbe
test
jg
aam
add
into
adc
scas
pop
mov
adc
add
mov
cmc
cmp
fcompl
repz
mov
jnp
outsb
insb
push
js
push
mov
mov
or
into
movsb
and
cwtl
out
sbb
pop
xor
aaa
out
jle
cltd
xor
cld
mov
in
sti
mov
imul
adc
jecxz
dec
cmpsl
repz
cltd
push
jp
sub
cmp
sub
inc
test
hlt
xchg
or
gs
push
scas
mov
mov
xor
mov
out
sub
jae
xchg
inc
mov
pushf
gs
jnp
je
or
or
cwtl
dec
inc
xorl
out
or
push
mov
jo
ja
icebp
jg
je
lock
or
mov
push
xor
and
movsl
mov
inc
push
mov
ret
inc
jl,pt
fxch
enter
and
test
mov
out
push
aad
fcoms
out
pop
scas
gs
out
shlb
movb
lahf
cld
pop
pop
fs
xor
int
inc
cmpsb
sahf
jo
in
es
nop
and
ljmp
xchg
push
jp
loop
lods
jmp
adc
imul
dec
and
pop
bound
mov
mov
add
dec
mov
jo
orl
stos
lds
adc
fabs
fisubl
jo
xor
and
test
cmpsl
sub
sub
inc
out
outsb
sbb
or
fiaddl
inc
outsb
movsb
cmp
mov
cmp
gs
in
mov
pop
insb
test
sbb
pop
mov
and
sbb
sbb
lret
ja
in
into
pop
outsl
das
push
jb
rorb
inc
mov
popa
stos
lret
jge
mov
cwtl
xchg
push
sahf
xor
loopne
mov
pop
mov
out
xchg
fmuls
leave
adc
or
cltd
inc
ljmp
add
jl
shlb
in
insl
fsubr
inc
xchg
stos
mov
mov
jbe
popf
pop
imul
test
adc
push
mov
pop
dec
xchg
jecxz
ret
jmp
stos
jecxz
sub
js
idivb
dec
aad
jnp
or
enter
lods
loopne
outsb
and
mov
in
sub
xchg
repnz
cmp
mov
lock
xchg
jns
sub
hlt
les
and
push
sub
push
mov
sbb
push
sbb
out
das
aas
out
and
push
adc
push
int3
aas
in
cmp
jo
mov
in
adc
lcall
fwait
out
push
jb
and
mov
add
test
push
pop
xor
dec
mov
loopne
add
sub
lods
mov
xchg
daa
out
xchg
cmpsb
sub
sub
xor
fidivs
dec
inc
shlb
loopne
or
gs
and
pop
sbb
mov
push
mov
jb
mov
insb
dec
imul
out
mov
add
and
cli
and
sub
adc
out
sahf
arpl
push
cmc
sbb
lods
push
ja
mov
cwtl
lcall
xchg
cwtl
push
icebp
push
adcb
fs
outsl
jbe
arpl
pop
out
sbb
rclb
mov
and
pop
scas
cld
sbb
es
sub
mov
add
mov
xchg
add
cli
orl
cmp
jne
icebp
push
xchg
push
mov
inc
lret
mov
imul
mov
dec
ret
mov
dec
adc
ja
adc
push
out
xchg
adc
jns
je
pop
pop
cmp
mov
sub
int
and
adc
lcall
bswap
popa
stos
repz
add
push
pop
pop
jl
mov
cmp
out
mov
mov
ret
inc
adc
aas
and
sbb
in
inc
aaa
rcrl
lret
jae
cmp
push
addr16
jg
add
daa
mov
lea
xor
aam
cmp
inc
jp
mov
fistpll
sbb
and
ficoms
pop
push
xchg
cltd
pop
pusha
repnz
xchg
inc
jle
cmp
dec
repnz
and
aaa
pushf
out
clc
std
inc
es
inc
out
and
hlt
inc
test
loopne
jmp
mov
movsb
xchg
in
jne
insl
fnsave
dec
adc
mov
out
cmp
imul
test
and
or
mov
lods
push
fldcw
mov
lods
jb
and
adc
popa
xchg
out
in
ds
call
and
pop
in
add
jno
out
jo
jb
add
repz
push
sbb
sub
push
and
cmp
pop
lods
or
cmp
fwait
mov
test
flds
add
adc
cwtl
ja
mov
adc
loopne
mov
add
mov
mov
repz
cli
scas
dec
xor
jne
pop
dec
jno
rcrl
notb
cmp
xchg
ja
jmp
mov
mov
xor
inc
push
push
lret
loope
int3
push
mov
inc
fdivrl
pusha
and
daa
mov
cmp
dec
call
shl
les
jae
aas
int
pop
jmp
or
lahf
adc
jl
es
stos
inc
lock
pop
shl
cs
pop
pop
mov
aas
and
mov
add
xchg
sub
pusha
int
dec
addb
hlt
add
mov
scas
mov
push
xlat
xchg
inc
into
jecxz
rolb
les
clc
insl
add
push
mov
mov
pop
mov
out
mov
jnp
inc
mov
mov
pop
jns
ljmp
lret
adcl
adc
ja
repz
pop
xor
jns
adc
iret
jp
inc
stos
stos
decl
pop
daa
sub
lcall
ljmp
loopne
pop
push
dec
jno
or
sub
ret
push
cmp
sbb
mov
xchg
cmc
cmp
inc
mov
mov
pop
fdiv
imul
popa
addl
mov
sub
out
cs
add
sub
test
jle
xchg
lods
mov
aad
fwait
and
mov
push
loop
xchg
insb
fwait
push
gs
in
adc
mov
into
sahf
pop
sbb
xchg
fucom
xchg
jge
pusha
pop
and
stos
jo
decb
mov
loopne
leave
add
push
leave
sub
add
mov
inc
lret
cmpsb
inc
add
ljmp
in
and
out
or
dec
lock
add
mov
cmpsb
loop
loope
cs
xor
loop
push
xor
cmc
inc
pop
push
lret
cmp
std
pop
or
sarb
jns
xorl
insb
adc
add
movsb
mov
stos
loop
dec
mov
lods
addr16
pushf
push
std
xor
add
aam
insb
lea
jecxz
and
and
je
bound
repz
shlb
in
sarl
xchg
ret
xchg
sbb
insb
push
pusha
adc
pushf
stos
imul
aas
outsl
out
sub
icebp
and
cmp
xor
mov
jo
push
cmp
stos
icebp
mov
mov
aad
jecxz
sbb
sbb
mov
jg
sbb
fidivrl
xchg
mov
fnstenv
jle
or
imulb
jne
mov
and
gs
mov
das
mov
test
fdivl
adc
xor
popf
insl
or
jnp
decb
lods
mov
add
pop
add
jmp
js
fadd
xor
lret
add
inc
data16
fcmovnb
xor
jmp
xor
in
out
sbb
sbbb
shlb
pop
in
sbb
cli
pop
jae
mov
pop
gs
lock
rcrb
and
clc
in
add
call
pop
in
in
add
dec
fwait
xchg
push
xor
fisubs
into
into
outsb
bnd
popf
jno
pushf
xchg
mov
mov
aaa
sub
cmpb
inc
pop
xor
cmp
std
xor
jmp
mov
in
cld
hlt
lods
fwait
push
and
lock
int
mov
int3
es
in
cmpsl
cmpsb
or
aam
aaa
ljmp
movb
pop
fwait
mov
pop
mov
lret
dec
test
or
pop
cmp
ficoml
xchg
pop
imull
push
ret
dec
and
or
mov
in
or
rcll
mov
pop
jb
inc
push
push
popf
push
mov
addr16
push
cwtl
scas
les
mov
fldcw
push
popf
pushf
insl
sub
notl
cmpsb
push
mov
mov
insb
mov
jbe
ret
mov
jne
cmp
adc
cmp
pusha
xchg
jecxz
inc
sub
andl
enter
popl
xchg
ds
flds
out
cs
inc
adc
mov
mov
adc
fwait
and
rcl
sti
negl
fnsave
fs
adc
int3
cmp
push
sbb
fldt
mov
mov
cmp
pop
inc
pop
push
xchg
aam
jnp
cltd
stc
insl
or
and
sbb
push
mov
mov
dec
jno
push
cmp
sarl
and
pushf
scas
pop
xlat
bound
jle
enter
in
jae
imul
ss
jle
and
in
jns
les
mov
add
inc
mov
es
cs
les
or
inc
inc
jo
mov
cmp
mov
sbb
jg
gs
jne
inc
in
mov
and
bound
dec
jo
xor
out
stc
mov
pop
xchg
leave
stos
subb
xorb
mov
int3
orl
cmp
mov
insl
jno
add
loope
pusha
cmpsl
bound
add
xor
aas
aaa
pop
notl
mov
pop
hlt
mulb
cmp
fsub
lods
jge
dec
scas
pop
dec
push
mov
jg
mov
xor
cmp
and
add
push
mov
sub
mov
data16
movsb
into
jge
push
aad
nop
pusha
and
in
in
mov
mov
sub
mov
mov
jp
mov
mov
pop
repnz
add
repz
stc
push
test
addr16
mov
andb
add
int3
dec
mov
int
clc
lds
jbe
je
sbb
mov
in
and
dec
mov
inc
das
paddsb
loop
repz
aad
push
popa
xor
cmp
das
lods
ret
mov
mov
mov
inc
outsl
mov
pop
dec
movsl
mov
dec
pop
mov
pop
add
jge
push
dec
cli
out
and
das
data16
lods
push
xor
pop
jg
mov
jp
mov
xchg
gs
jp
adc
mov
hlt
adc
inc
push
mov
les
adc
out
mov
shlb
fistl
pop
in
fmull
xchg
fsts
into
test
pop
sahf
sbb
sub
bnd
jp
jmp
pop
xlat
loope
loop
cs
pop
mov
out
xchg
cwtl
cmp
lcall
pop
fdivs
mov
add
aaa
aas
inc
jbe
out
jle
xor
ret
fadds
push
scas
cmp
inc
jecxz
out
test
sbb
mov
push
cmp
mov
or
jle
sbb
rolb
loope
rcr
hlt
loope
nop
dec
push
dec
ljmp
mov
rcrl
and
jecxz
jg
fnstsw
fisubl
mov
in
inc
std
iret
and
clc
jae
jge
jo
or
inc
arpl
subb
clc
mov
xchg
sub
fcmovb
jle
fcomi
andl
jno
add
outsl
sub
icebp
cmp
bound
stos
jecxz
xchg
js
jns
and
test
push
xchg
notb
add
shrl
nop
adc
ja
cmpsl
clc
outsl
iret
fisubrs
mov
xchg
add
pop
add
lret
or
or
or
js
out
or
xlat
xchg
aam
sbb
pop
mov
inc
movsb
shrl
pop
adc
pop
jecxz
sbb
rcll
aaa
out
dec
sahf
jle
leave
shrl
pop
ds
push
ret
js
cli
xchg
jmp
and
imul
adc
push
je
out
incb
jge
jg
pop
inc
pop
dec
jg
sti
mov
adc
jle
cmpsb
pop
outsb
ret
idivb
fwait
lahf
ljmp
rorb
push
lea
sub
add
xor
xor
stc
mov
fiadds
outsl
sbb
jl
arpl
cmp
xor
xor
push
enter
movsb
push
mov
jb
xchg
lahf
repz
and
push
lods
xor
xorl
test
fnstenv
xchg
push
adc
xchg
jae
mov
mov
lods
sti
fldcw
lcall
mov
shrb
testl
sub
pop
rcl
cmp
pop
cltd
dec
out
mov
sahf
in
jb
xor
std
sbb
push
aaa
jecxz
sub
sarb
lret
out
popf
movsb
jecxz
lcall
jge
popa
hlt
out
mov
push
enter
adc
and
lret
push
loop
aas
cmp
ja
out
pop
pop
mov
xchg
arpl
inc
pop
aad
and
add
cli
mov
add
xchg
sub
xchg
movl
dec
mov
mov
fnsave
shlb
or
mov
jp
inc
mov
stos
xor
mov
fmull
jp
xchg
jmp
xchg
insb
addr16
adc
fists
xor
lcall
out
xchg
push
xlat
jge
enter
pop
jae
mov
or
push
adc
jbe
ss
ret
jb
bound
mov
icebp
fildll
mov
add
pop
inc
pusha
and
jae
or
mov
xchg
addr16
nop
pusha
and
out
mov
fcmovu
lds
and
xor
clc
mov
clc
pop
cmp
out
mov
dec
inc
jns
add
add
rorb
test
mov
cmp
fwait
mov
add
add
mov
ss
enter
pop
das
mov
sub
icebp
fiadds
sahf
loop
pop
sbb
sub
stos
stos
enter
in
repnz
mov
push
lea
lret
jmp
xchg
or
mov
gs
jnp
imul
je
cld
jns
in
jl
je
test
lret
hlt
push
add
subl
gs
xor
stos
call
pop
push
movsb
das
mull
xchg
fistl
imul
push
mov
jl
pop
sub
pop
or
xchg
in
push
fcomps
dec
and
pushf
inc
jb
lahf
jmp
mov
cmp
or
inc
mov
and
mov
addb
cmpsl
into
popa
xchg
mov
pushl
scas
int
dec
or
and
scas
out
dec
xor
in
gs
lcall
jae
insl
dec
sbb
enter
lahf
xor
mov
cmp
and
xchg
mov
xlat
push
mov
shll
mov
add
cmpsb
mov
fcmovb
xchg
sbb
vaddss
pop
pusha
adc
jae
pop
ffree
mov
mov
pusha
rcrb
sbb
dec
pop
outsl
sub
sbb
jmp
filds
mov
add
mov
gs
cld
test
enter
out
call
pop
popf
mov
or
mov
add
inc
sub
mov
ficompl
fisttpll
mov
test
inc
adc
jecxz
repz
mov
int3
bound
adc
cmp
pop
ret
xor
into
add
mov
push
lret
roll
jle
in
lcall
dec
and
push
scas
and
add
jbe
decl
adc
or
and
jo
out
jg
xchg
ss
aaa
mov
test
mov
int
mov
sbb
mov
test
jecxz
enter
and
or
and
insl
cmp
imul
jnp
cmc
mov
sahf
unpckhps
popf
mov
sub
xchg
add
sti
adc
xor
lock
mov
imul
xor
ficoms
push
icebp
test
pop
jecxz
imul
test
add
xchg
push
cltd
pop
sarb
in
stc
loopne
mov
mov
pushf
push
ficompl
aam
ds
mov
stos
les
fistps
cmpsb
icebp
mov
fdivl
int
loope
adc
rcll
inc
jns
lret
xchg
sub
xor
or
inc
add
insb
mov
sub
popa
cmp
sbb
in
mov
movsl
imul
imul
fucomip
xchg
sub
into
and
cwtl
mov
test
and
add
sbb
dec
adc
imul
fwait
add
ret
test
pop
cmc
rcll
add
cld
xchg
dec
or
nop
sbb
fwait
jno
pavgw
or
std
pop
mov
cmp
outsl
stos
and
and
or
ss
push
jo
scas
inc
mov
adc
mulb
in
lock
xor
jns
xchg
mov
mov
mov
out
cmp
je
mov
mov
pop
sbb
hlt
lret
test
jb
loopne
and
nop
jnp
pop
dec
lock
fimuls
xor
sub
mov
data16
sub
insb
repnz
repnz
aaa
fwait
sub
add
and
js,pn
sbb
pop
insb
inc
out
jnp
andl
notl
popf
adc
decb
ljmp
rcr
adc
fdivs
inc
dec
enter
jecxz
jnp
pop
mov
test
pop
cltd
repnz
lds
dec
scas
xor
stos
test
add
test
icebp
int
arpl
ret
or
mov
add
sets
ja
or
sbb
pop
bound
shll
jle
pop
xchg
loopne
in
jo
adc
stos
ffree
mov
push
cmp
add
lods
pop
sarl
iret
in
int
mov
sahf
adcl
loopne
mov
adc
aam
push
loop
xchg
dec
sbb
jae
cmp
push
cli
in
fadd
subb
jnp
mov
mov
gs
mov
mov
push
mov
jge
imul
xor
pop
ret
mov
lds
pusha
lds
push
or
or
loope
test
adc
cmp
dec
dec
jne
test
pop
xchg
into
aam
mov
and
outsb
or
sti
jns
sahf
adc
push
out
push
sarb
aaa
or
stc
cltd
test
fs
inc
mov
mov
mov
mov
nop
xlat
pushf
in
loop
add
dec
add
ret
pop
aas
jno
or
aaa
lods
jns
sar
jno
mov
or
mov
test
out
stc
in
scas
addl
push
call
dec
adcl
ret
or
xor
jge
jb
push
mov
and
fldl
popa
std
or
jns
fnstsw
pop
jp
jle
leave
sti
call
inc
xchg
jge
sbb
inc
jb
push
daa
pusha
imul
leave
add
test
leave
mov
ss
sarl
repnz
xor
mov
mov
add
jo
pop
js,pt
test
loopne
and
lds
in
xor
call
stos
scas
xchg
mov
mov
mov
and
jae
icebp
sbb
xor
push
add
add
pushf
out
pusha
fisubrs
repz
subb
xchg
jo
shll
retw
inc
mov
mov
xor
in
mov
clc
sbbl
add
int
sbb
movsl
lahf
push
or
sbb
or
stc
shlb
or
in
mov
decl
ss
iret
and
repnz
cmp
subb
add
xchg
xchg
sbb
pop
in
jnp
sarl
push
add
jecxz
iret
push
xchg
adc
daa
adc
pop
pop
bound
aas
push
imul
mov
insl
in
sbb
add
and
scas
out
push
xchg
jbe
aam
mov
in
sub
movsl
stos
or
and
inc
jecxz
lahf
mov
add
mov
push
es
jp
popf
dec
inc
add
jbe
push
xchg
sub
jmp
push
xchg
adc
in
jmp
dec
cld
es
lret
test
cs
or
mov
outsb
jmp
sub
mov
jns
loope
stos
pushf
cmc
fistl
out
add
mov
xchg
push
pop
jmp
or
lods
xor
dec
push
and
inc
xor
orb
sarl
dec
lods
into
fcomps
fcoms
cmp
cmp
or
xor
push
sbb
add
pop
adc
pushf
mov
jge
in
mov
dec
push
jg
ljmp
pop
add
clc
aaa
mov
cltd
xor
sti
fldenv
fwait
arpl
daa
sub
and
or
test
push
lret
or
es
subb
testl
mov
aas
into
or
test
lods
pop
xchg
ja
push
int3
dec
cmc
daa
cmpsb
ljmp
sbb
lock
add
or
push
ret
jne
and
xchg
cmp
pop
pop
test
addb
xchg
xchg
sub
or
fiadds
push
add
test
fwait
xchg
scas
or
and
loope
out
pushf
adc
sub
jo
lds
in
scas
and
fildll
ret
outsl
icebp
leave
cmp
mov
jne
out
nop
xchg
aas
or
pop
jg
mov
xchg
sub
cmp
sub
pusha
rcr
mov
cmp
jle
inc
fsubr
out
iret
cmp
bound
adc
jne
mov
xchg
shlb
jno,pt
fistl
or
aad
das
bound
mov
test
push
in
or
xor
jnp
xchg
in
ror
add
dec
push
cli
sti
fisubl
iret
movsb
push
inc
jo
and
sbb
daa
cmp
adc
lds
dec
jg
jmp
les
push
mov
pop
jb
into
inc
into
or
fisttps
fbld
dec
rcr
pop
mov
fdivl
mov
loopne
out
sub
and
lods
xchg
les
ret
or
xchg
aam
dec
icebp
and
inc
jmp
cld
xor
mov
xor
dec
es
sub
imul
jmp
cmpsb
add
mov
pop
rclb
imul
cmp
leave
cltd
in
mov
push
mov
aam
mov
mov
inc
mov
stos
mov
jne
or
mov
lcall
incl
in
or
mov
add
dec
test
faddl
rolb
mov
push
mov
inc
xchg
flds
adc
mov
loope
and
lret
inc
out
out
xlat
cmp
push
repnz
adc
mov
dec
jae
and
pop
in
xchg
lahf
aam
jg
push
scas
out
xchg
inc
cmp
setnp
sahf
icebp
incl
fidivs
mov
and
mov
adc
jb
pop
repnz
mov
cltd
fdiv
xor
pushf
shlb
addl
mov
pop
mov
in
out
sub
into
xchg
out
sbb
mov
jmp
popf
cld
test
out
mov
sbb
lock
cmpsb
aas
mov
push
shlb
ljmp
sbb
xor
push
or
scas
sub
push
jmp
sub
shlb
xchg
jecxz
mov
dec
mov
cmp
push
sub
xchg
sbb
nop
mov
adc
cmp
aas
insl
std
out
shlb
repnz
sti
jno
mov
dec
mov
mov
cmp
aaa
jae
imul
cmc
loopne
cwtl
xchg
mov
addr16
pop
imul
in
push
add
fwait
dec
and
adcl
popa
rcrb
adc
loop
notb
mov
inc
and
rolb
lea
add
sbb
jae
test
inc
and
rcll
pusha
ljmp
push
xchg
push
jp
and
add
in
ret
hlt
dec
xchg
mov
jae
mov
data16
out
cli
push
fwait
push
mov
call
mov
hlt
das
int
jle
sbb
push
test
movsb
leave
js
mov
fdivrs
scas
movsl
add
jnp
lcall
cmp
jle
lret
rcll
inc
mov
xor
popf
test
ds
inc
push
or
jnp
rolb
in
aas
mov
add
mov
sub
mov
xor
notb
mov
jo
add
inc
ja
call
sbb
ret
mov
jns
jl
sbb
xchg
cmp
rol
mov
jle
mov
add
ljmp
les
jns
or
add
mov
test
xor
xor
xchg
adc
xlat
dec
dec
popa
insb
mov
ss
and
sub
cmp
mov
inc
insb
jl
sub
cmp
bnd
xchg
xorb
test
movsb
add
sub
jp
or
mov
and
pusha
cltd
jp
test
cmp
loop
inc
in
xchg
adc
push
enter
sub
cmp
loop
and
scas
in
inc
and
cmp
lret
aas
mov
add
loop
or
int
std
sbb
xchg
popa
mov
dec
pop
call
lds
add
dec
lea
add
adc
cmp
dec
mov
sbb
mov
and
push
sub
test
fsubs
rclb
rcr
iret
sti
mov
cmp
mov
sbb
movsb
cmp
incb
sahf
sbb
mov
inc
jmp
cmp
cmp
push
mov
movsb
and
xchg
ss
cmpsl
xor
mov
iret
imul
xor
hlt
decl
mov
push
push
loop
jmp
lcall
fnstcw
or
popf
cmp
pusha
jb
test
xchg
jnp
jb
dec
mov
ficomps
xor
push
dec
inc
xchg
iret
aas
adc
push
jb
out
repnz
scas
mov
sarl
aas
icebp
jbe
mov
fisubs
mov
in
rorb
mull
lret
cmp
hlt
push
jno
inc
aam
push
cmpsb
or
stos
std
jb
es
lahf
pop
cli
mov
xchg
imul
dec
push
dec
sar
loopne
shrl
dec
fsubrs
xor
ds
ret
jmp
shlb
rorl
lcall
or
addr16
cmc
retw
out
xor
outsl
sti
pop
pop
push
outsb
popf
mov
shll
jl
les
std
xorl
mov
jge
jo
inc
cmpb
and
bnd
or
push
sbb
cmp
imul
pop
loopne
mov
in
jmp
imul
pop
pop
push
scas
cld
mov
aas
test
das
pusha
and
pusha
push
out
pop
xchg
ja
and
lods
out
and
and
test
mov
pop
out
icebp
xlat
fxch
stc
add
adc
int3
scas
mov
jne
xchg
cmpb
jnp
mov
cmp
rcrb
jo
pop
in
out
aam
or
ret
rclb
or
mov
addr16
fcoms
mov
mov
not
ret
xor
in
ss
or
in
dec
lret
lret
mov
mov
xor
jne
mov
jge
or
pop
out
rolb
or
outsl
sub
pusha
xchg
sti
mov
sbb
mov
lods
movsl
cs
sub
xchg
cmp
je
ds
sbb
add
loope
pusha
inc
xchg
pushf
sbb
lret
dec
sub
mov
xchg
rorb
push
insl
jp
incb
pushf
push
sarb
fsubrl
adc
imull
ljmp
xchg
push
push
dec
sub
repnz
out
int3
jl
jmp
push
or
push
cmpsb
pop
xchg
roll
enter
cltd
pop
ljmp
pop
push
xchg
add
aam
insb
aas
xchg
out
xchg
sbb
cmpl
mov
cmp
nop
fidivrs
xchg
xor
sub
mov
push
jb
cmp
test
stc
sub
jmp
jno
lods
popa
mov
xchg
sub
adc
sbb
and
subb
xchg
lds
pop
loopne
push
or
pop
pop
jnp
movsb
fs
es
dec
sub
stc
loope
adc
in
push
dec
or
pop
lods
lahf
xor
lods
inc
fstpl
ss
addr16
jns
and
and
jg
stos
adcl
xchg
inc
push
pop
sqrtps
sub
lods
bound
insl
pop
test
adc
pusha
in
add
add
inc
stos
cwtl
inc
lea
hlt
aad
mov
dec
add
jmp
pop
mov
and
pop
cmp
cmp
mov
sub
push
push
dec
cmc
xor
mov
fisttpl
nop
xchg
pop
lret
sub
outsl
pop
lret
jmp
aam
inc
sbb
jo
push
jns
mov
xchg
mov
xor
mov
fxch
or
sti
adc
js
in
data16
cmp
push
mov
mov
sti
mov
cs
fisubs
or
and
adc
shlb
sub
jbe
and
add
inc
xor
pop
inc
es
add
pop
mov
aad
cli
out
adc
repz
xor
movsl
push
xchg
cmp
lcall
sub
imul
cwtl
jg
mov
gs
js
xor
gs
out
dec
cmp
mov
das
fmull
nop
jae
add
orl
sub
sbb
cmp
mov
mov
mov
hlt
out
mov
dec
xor
es
fldenv
adc
cmp
lock
inc
mov
sahf
jg
fs
push
sub
sub
xor
mov
cwtl
hlt
pop
xor
add
fsubrl
cmpl
pop
ja
xchg
negl
pop
cld
aad
sar
or
pop
jge
sti
shrl
push
xchg
decl
cmpsb
xchg
jge
push
cwtl
lock
inc
add
sbb
icebp
aad
ja
push
dec
clc
pop
and
mov
test
or
mov
cmp
inc
js
int3
lret
push
test
sub
cli
cmp
xchg
mov
into
stos
mov
inc
pop
test
cmp
or
jmp
jecxz
adc
and
mov
mov
int3
testb
roll
addl
adc
mov
out
test
xchg
xor
inc
es
clc
jnp,pn
lret
mov
pop
mov
or
or
mov
inc
and
cs
dec
stc
xchg
repnz
sub
push
outsb
mov
cld
sbb
add
push
jno
outsb
mov
pop
in
and
sbb
popa
sti
and
leave
pushf
nop
pop
fmull
jge
mov
mov
xchg
das
push
push
rolb
js
cmp
sub
lods
nop
out
inc
xor
sub
mov
das
mov
ret
mov
xorb
or
cmpb
jbe
std
outsb
mov
gs
adc
mov
in
sarl
cltd
roll
push
sbb
mov
sbb
cmp
fsubs
sbb
ds
mov
fidivrs
push
mov
dec
lds
mov
or
pop
jg
loope
pop
mov
pop
es
mull
sahf
inc
pop
xor
jp
mov
add
sub
adc
cmp
jno
or
ret
inc
test
jmp
inc
movsb
iret
popf
lods
repz
adc
ficoms
jp
scas
xchg
or
jne
dec
mov
mov
outsb
scas
mov
add
loopne
pop
add
mov
inc
mov
shrl
fcmove
jbe
ja
or
shll
cmp
inc
fsubl
sbb
movsb
sbb
ja
mov
arpl
xchg
push
xchg
sar
pop
stc
inc
push
dec
dec
jp
inc
mov
rcr
xlat
or
ret
movsb
loop
jnp
fists
cmp
outsb
and
subb
pop
sub
jbe
clc
nop
mov
mov
or
fsubrs
dec
cmova
jbe
shrl
fcoms
stos
inc
fcoms
add
cltd
subl
test
inc
mov
xchg
jb
fildl
dec
cmp
mov
pop
jne
add
fistps
fwait
out
cmp
lret
dec
addb
xchg
xchg
pusha
mov
xor
mov
sbb
xchg
inc
clc
lret
mov
pop
and
pop
ja
and
ret
leave
mov
adc
mov
cmp
push
jl
jae
push
pusha
mov
daa
xchg
das
flds
add
xchg
movsb
test
lret
movsb
addr16
and
stos
push
push
aam
push
mov
loope
sbb
insb
pop
push
xchg
popf
mov
int
cmp
aam
lahf
fwait
pop
arpl
daa
add
hlt
inc
adcb
cmp
pop
std
or
mov
jmp
lret
repnz
jnp
movsb
bound
jbe
das
filds
or
sub
addr16
ja
scas
dec
push
mov
or
ja
push
movsb
fisttpll
mov
inc
std
dec
movsl
xchg
fnstcw
int
sbb
and
jb
xchg
fiadds
stos
jl
mov
movsb
in
sub
loop
jno
js
ljmp
shrb
gs
insl
pop
inc
inc
jne
xlat
mov
xchg
popf
adc
aad
push
cltd
lods
call
push
int3
cmc
fs
ficoml
test
fidivl
sbb
cmc
ljmp
xor
test
repnz
mov
sbb
mov
xor
dec
dec
mov
mov
and
xlat
dec
or
jnp
push
lods
add
sbb
cs
in
lcall
popa
int3
push
repnz
mov
out
mov
cld
cmpsb
stc
rcrl
das
adc
inc
push
imul
mov
sbb
push
jl
pop
add
xchg
jo
xor
xlat
cmpsb
cltd
out
fisubrs
sbb
and
int
mov
inc
push
icebp
xor
and
fldl
pushf
popa
data16
mov
dec
mov
mov
in
loopne
pop
movq
mov
frstor
scas
sti
dec
movsl
push
popf
push
out
aad
inc
dec
loopne
pusha
cmp
xchg
jge
pop
cmpsl
push
cltd
cltd
mov
dec
mov
lret
pop
mov
adc
mov
ja
scas
push
jecxz
or
jecxz
mov
mov
out
insl
fld1
pop
jno
push
dec
clc
and
jne
inc
add
pop
pop
pop
gs
paddsw
nop
lret
test
push
sbb
mov
repnz
and
inc
xchg
int
add
js
push
insl
aad
xlat
push
fwait
stc
in
gs
xorb
repnz
icebp
push
inc
popa
bound
call
ficoml
and
push
lods
inc
test
aad
popa
pop
xchg
sahf
into
rol
adc
enter
xor
fisubs
xchg
test
xchg
test
jns
les
cmp
xchg
lods
enter
or
sub
mov
aam
add
insb
push
into
cld
mov
cmpsl
daa
dec
js
jno
jns
xchg
mov
into
xchg
cmp
decb
arpl
xor
dec
jmp
mov
aad
xchg
add
xchg
aad
inc
adc
je
adc
or
mov
pusha
rorb
fstps
hlt
daa
cli
mov
mov
out
lds
mov
mov
stos
sub
pushf
cli
aam
popf
push
fldt
movsl
sub
fdivrl
mov
sub
into
push
popa
mov
imul
and
clc
sub
mov
adc
lock
lds
stos
cmpsl
mov
idivb
call
pop
imul
fucom
mov
push
pop
fists
lahf
out
popf
cmc
insl
fmul
pop
dec
or
sbb
or
inc
and
xchg
add
mov
xor
or
mov
daa
mov
inc
cltd
mov
xchg
int3
inc
iret
pop
out
sub
push
mov
icebp
push
inc
cwtl
dec
lcall
and
pop
cmpb
scas
or
add
scas
jo
jo
sub
adc
add
cmp
push
pushf
loopne
fstpl
lret
stc
mov
fcmovb
lock
or
ss
mov
mov
adc
xchg
adc
fildll
and
jb
clc
aam
sbb
mov
sub
test
pusha
aad
push
mov
adc
in
mov
and
mov
lahf
mov
jno
cmp
js
out
push
pusha
iret
and
out
imul
fimull
inc
clc
push
mov
mov
mov
jmp
xchg
es
sbb
jns
das
pop
loopne
inc
arpl
pop
std
adc
push
push
pop
fs
in
popa
mov
sub
mov
push
jnp
push
inc
cmpsl
das
testb
cli
lahf
div
sbb
pushf
sarl
jnp
and
adc
dec
movsb
fwait
add
add
fstpt
lods
lock
xor
jle
add
cmp
imull
adc
mov
pop
add
movb
pop
adc
sbb
shll
int3
inc
xor
inc
mov
test
sub
outsb
mov
mov
and
push
mov
lahf
xor
imul
pop
sub
dec
sbb
nop
and
cmpsl
inc
mov
inc
jo
jno
mov
insl
pop
dec
pop
js
repnz
insl
fldcw
cwtl
roll
or
add
or
pop
insb
mov
mov
popa
pop
jmp
inc
lock
sti
mov
pop
xorl
leave
inc
xchg
jbe
or
addr16
movsl
xor
pop
sbb
mov
sarl
movsl
push
pop
into
enter
mov
fisttpll
mov
enter
mov
cmpsb
mov
or
cmp
and
xor
notl
icebp
dec
es
pusha
push
jle
add
jo
add
jnp
adc
push
inc
adc
shlb
sub
xchg
hlt
cmpsl
cmp
aaa
or
jns
sub
cmc
mov
jmp
xchg
xor
int3
lcall
int
cmp
mov
pop
out
jp
fcoms
je
add
loope
nop
stos
mov
in
inc
fadd
push
mov
jns
mov
ficoml
scas
pop
sbb
in
fldl
inc
out
int3
jl
jns
stc
repz
loop
mov
xchg
scas
pop
adc
pfcmpeq
inc
mov
mov
mov
dec
mov
and
mov
hlt
popf
aaa
lock
es
icebp
mov
inc
push
adc
mov
test
int
andb
sbb
dec
out
lea
sub
cmpsw
stos
and
stos
pusha
fucomi
adc
jb
sbb
xchg
fistpll
sub
push
jbe
in
lret
rcrl
adc
jns
fdivrl
outsl
orb
push
cltd
inc
mov
les
mov
test
pushf
call
dec
test
es
fnstenv
test
pusha
dec
xchg
add
mov
js
push
notb
insb
es
lds
lret
es
arpl
xchg
and
insb
or
mov
jecxz
bound
jl
shll
std
lods
and
shlb
repnz
push
xchg
scas
loop
xchg
xchg
and
insl
shlb
jmp
mov
pop
or
dec
sbb
pop
inc
jmp
lods
mov
cmc
cmp
icebp
lret
lods
shrb
jge
cld
dec
inc
loopne
dec
jl
mov
mov
je
jmp
sub
hlt
js
mov
sahf
addb
and
xor
or
and
push
cmpsl
and
xchg
sbb
fs
add
jg
push
lock
add
arpl
cmp
sub
sbb
sub
test
aad
jb
sbb
lock
ljmp
push
xchg
xchg
roll
rcrb
and
aam
shlb
add
hlt
jno
in
mov
pop
in
dec
dec
adc
test
xor
or
cltd
sarl
adc
inc
pop
test
mov
dec
jae
push
xor
inc
or
scas
ret
pusha
sub
jmp
lret
lret
lahf
scas
xchg
pushf
xor
test
jg
cmp
in
mov
adc
sbb
push
loopne
insb
mov
jl
jl
and
lods
mov
ret
xchg
inc
lret
mov
mov
stc
push
xor
mov
xchg
leave
sahf
stos
loop
push
mov
dec
xchg
xchg
fsubs
cmc
xor
sbb
sahf
scas
mov
js
std
inc
adc
xor
jp
sbb
lods
aas
jle
lods
ficoms
clc
lock
mov
and
jne
ja
icebp
cmp
mov
out
mov
push
inc
push
in
ret
lret
xor
fisttpl
pop
jp
rclb
mov
or
and
scas
pop
mov
lock
add
adc
mov
lods
push
push
cmp
mov
ffreep
std
dec
lahf
pusha
dec
les
sub
inc
xor
enter
cmc
pop
loope
mov
dec
clc
bndldx
mov
out
jge
adc
popf
inc
lds
xchg
addb
aaa
cwtl
cltd
pop
out
pop
ror
dec
leave
je
aas
adc
or
pop
mov
jbe
ret
inc
outsl
cli
mov
mov
fisubl
std
and
jmp
test
enter
int3
cltd
insb
push
fimull
adc
cmpsb
sarb
in
addr16
int3
ret
inc
lcall
lock
jge
arpl
push
push
ret
inc
aad
jecxz
mov
stos
insb
lret
enter
jbe
mov
cs
sbb
dec
pop
adc
addr16
inc
lods
or
pop
pop
dec
sbb
cmc
les
mov
repnz
xchg
cltd
xor
push
cmp
xlat
shrb
add
push
sti
xchg
inc
mov
mov
dec
jo
ror
pop
xchg
pop
push
or
pop
sbb
mov
push
mov
and
sahf
cmpsb
ds
inc
in
insl
test
popf
jno
insl
mov
mov
inc
dec
ret
in
lcall
sbb
lods
add
push
cwtl
cmpsb
mul
push
ja
add
xor
mov
or
adc
mov
ljmp
fcompl
idiv
xchg
inc
push
mov
dec
xchg
or
pop
mov
bound
out
mov
pop
push
push
xchg
xchg
in
shlb
add
dec
test
or
push
ds
xchg
cmp
xor
shll
daa
movsb
adc
add
aaa
xor
pop
fucom
add
mov
outsl
cmp
fdiv
cmp
aam
jbe
sbb
mov
test
cs
cmpsb
out
cld
mov
in
xor
adc
xor
cmc
incb
rorl
bound
mov
aam
push
aas
lea
mov
pop
dec
or
and
aam
clc
inc
jp
adc
in
adc
push
xchg
ret
or
dec
jns
or
mov
int3
mulb
imul
hlt
fsts
add
dec
pop
pop
inc
mov
mov
mov
rcrb
xchg
mov
cltd
mov
dec
mov
xor
pop
jnp
jg
xor
loope
ret
adc
mov
fs
and
jb
les
pop
xchg
add
scas
arpl
mov
adc
insb
add
mov
pop
add
clc
sbb
fnstsw
cmp
cld
sub
pusha
push
jbe
push
inc
insb
adcl
add
es
mov
adc
sbb
jns
aas
test
test
push
imul
std
mov
mov
mov
cmp
xlat
sbb
xor
imul
or
popf
outsl
jle
mov
in
ds
std
jle
lret
int
dec
call
mov
adc
jl
xor
sbb
testb
cmp
push
push
or
mov
scas
sub
rcrb
mov
cs
add
mov
test
sub
lods
mov
pop
lds
inc
in
cmp
mov
xchg
xchg
mov
stos
cmp
sti
fwait
loopne
xlat
inc
data16
sub
out
dec
mov
cli
and
es
xchg
sbb
sbb
jb
jle
cmp
addr16
test
jnp
or
jmp
inc
ss
xchg
add
jo
aam
xor
pusha
jge
popa
mov
mov
mov
cmp
jecxz
xorl
and
into
xlat
sarl
int
mov
aaa
jbe
clc
lret
and
test
call
pop
enter
xor
enter
mov
add
adc
inc
int
dec
add
dec
sub
pop
add
mov
in
jbe
sbb
xlat
lcall
subb
push
cmp
dec
adc
sub
xor
imul
push
lahf
rorl
sar
mov
dec
stos
ljmp
lahf
push
lods
clc
aad
lcall
xchg
orl
roll
push
gs
rcrb
aaa
push
adc
pushf
subl
sbb
fcoml
loopne
xchg
xchg
fwait
and
or
stos
push
in
mov
jne
sti
ret
test
dec
mov
in
jg
repz
sarl
sarl
sbb
mov
cmc
xchg
cmp
out
push
les
jnp
pop
test
and
xchg
inc
sub
hlt
fdivrl
adc
cmp
hlt
aad
pushf
ja
inc
inc
mov
mov
neg
in
fsub
icebp
sbb
cmp
aad
lret
inc
ret
inc
fisubs
fcmovne
jnp
jle
adc
jp
inc
sbb
fldenv
sbb
call
loop
jnp
xchg
jmp
scas
xor
sti
pop
mov
add
and
pop
test
push
ja
xor
xorl
out
mov
sbb
int
push
xchg
lods
mov
and
cmp
divb
push
sub
push
xchg
cmc
lock
add
cld
lret
sbb
inc
pop
stos
out
push
cmp
pop
cwtl
jne
mov
movsl
ficomps
mov
mov
sbb
sbb
inc
ja
inc
daa
xchg
xor
cmp
ret
jg
ja
xchg
fistpll
lret
cmp
cmp
outsb
jno
cmp
jbe
mov
push
cmpsl
ja
xor
and
push
lcall
loope
ja
stc
pop
adc
rorb
or
jnp
int3
leave
cmp
or
sbb
jbe
xchg
lcall
add
push
xchg
jecxz
mov
bound
add
add
out
dec
in
scas
xchg
int3
mov
int
inc
push
jno
and
push
stos
pop
jmp
dec
inc
bound
mov
test
scas
inc
push
mov
adc
scas
push
rcrb
or
fs
xacquire
je
lcall
je
inc
in
lock
add
aad
scas
or
xchg
cmp
call
fidivs
lods
inc
mov
loope
int
scas
jns,pn
or
or
push
mov
lds
test
xchg
mov
popa
outsb
int
pop
lea
adc
hlt
fbstp
sbb
jbe
jmp
enter
std
addr16
push
icebp
inc
pop
mov
cli
dec
stos
mov
loope
hlt
sub
sub
clc
movsb
in
sbb
movsb
aam
push
xor
mov
imul
sbb
into
imul
das
push
jmp
mov
mov
xchg
rolb
scas
lods
mov
cmp
mov
jnp
cmpsb
or
pop
insb
or
cmp
mov
repnz
mov
in
mov
test
fisubrs
add
cmp
fs
bound
addr16
scas
aam
pop
nop
xor
insl
inc
sti
cmp
mov
dec
and
sub
in
xchg
mov
rclb
adc
xor
cmpsl
ret
sbb
repz
ret
arpl
out
mov
xchg
adc
push
push
adc
out
movsl
frstor
or
movsl
adc
adc
sbb
movsb
lock
fs
addb
in
push
imul
inc
int
enter
mov
daa
subl
push
jno
mov
clc
jne
xlat
add
jnp
dec
shll
push
mov
mov
xor
jle
rorb
sub
xchg
clc
sbb
in
pop
aam
test
dec
mov
cmc
fsts
pop
add
jnp
loop
dec
scas
inc
push
fstpl
ds
xchg
gs
inc
sar
adc
sub
clc
mov
mov
js
into
add
jle
pop
or
std
pop
sub
out
stos
repnz
test
movsl
int3
push
neg
inc
insb
pop
adc
push
out
mov
iret
lret
push
xor
movsl
mov
and
adc
add
outsb
jno
aaa
cwtl
cmp
inc
pop
mov
inc
xor
pop
mov
not
test
xchg
iret
inc
aad
ds
test
pushf
jecxz
imul
jne
push
mov
dec
fwait
sbb
push
js
jmp
mov
aad
rcrl
add
pop
fwait
sbb
andb
add
out
pop
dec
nop
jmp
mov
aas
xchg
movsb
gs
sub
es
aas
enter
push
fnstenv
xor
adc
stos
icebp
dec
test
leave
fiaddl
cmp
jge
mov
mov
adc
pop
mov
cltd
cmp
cmp
cmpsb
adc
adc
mov
sbb
inc
lahf
mov
cs
inc
push
or
xchg
sbb
inc
cltd
cmp
cmp
cmpsl
sbb
out
in
pop
arpl
adc
and
jnp
pop
push
jl
loopne
xchg
or
jne
jmp
adc
and
aaa
icebp
cmp
mov
cmp
cld
ja
imul
push
jecxz
lea
mov
int3
mov
sbb
sub
sbb
add
or
cmp
adc
into
pop
loop
enter
inc
xchg
in
pop
cmp
fcomi
sti
add
loopne
dec
in
jl
jle
lahf
inc
adc
mov
addl
mov
and
imul
push
sub
pop
stos
add
pop
jae
inc
pop
ret
xor
repz
xchg
mov
movsb
sub
mov
cltd
cwtl
mov
mov
cld
cmp
jne
insb
jo
inc
pusha
fidivs
and
callw
push
jne
jg
into
jmp
xchg
fiadds
xchg
push
ret
dec
pop
add
gs
hlt
adc
jnp
pop
ds
pop
scas
jbe
add
dec
mov
ja
sub
iret
subl
xchg
rcll
mov
repz
in
push
es
dec
lea
jno
xchg
scas
xlat
movsl
pusha
sarl
shlb
test
nop
push
and
sbb
jmp
lcall
cli
iret
loope
jb
mov
divl
mov
icebp
scas
push
lods
insb
ljmp
roll
stos
sbb
stc
testl
ret
insb
inc
jmp
or
daa
lret
pop
fcomp
js
adc
jnp
sbb
mov
lret
pop
mov
pushf
and
aaa
and
cld
out
out
or
clc
xor
or
loopne
lds
loop
lods
into
push
stc
mov
aam
pushf
pop
mov
cltd
push
gs
lods
sub
lods
push
mov
mov
lahf
xchg
inc
ss
xor
nop
stc
lods
inc
push
scas
dec
das
cwtl
repz
ljmp
int3
scas
xor
lods
mov
icebp
add
xchg
jbe
or
fwait
repz
jbe
add
cmp
lods
xchg
pop
rcrb
add
pop
loope
lcall
mov
jecxz
adc
dec
mov
mov
adc
inc
pop
xor
ret
mov
inc
and
mov
pop
aaa
and
ss
xchg
inc
mov
add
ljmp
jecxz
popl
lock
and
mov
shl
or
xor
call
mov
loopne
sub
sub
xlat
rcll
sub
dec
xor
xchg
test
jb
fidivl
jle
jae
sti
loope
xchg
xchg
roll
mov
push
in
mov
jg
jns
add
dec
addr16
inc
hlt
loopne
rclb
dec
jns
cmp
mov
decl
xor
and
dec
pop
cmp
insb
out
dec
sbb
xchg
dec
or
aas
cmp
dec
mov
lahf
sub
movsl
ss
xor
mov
xor
inc
rcrl
out
jp
daa
pushf
push
cmpsl
add
push
dec
repnz
orl
in
ja
loopne
pop
outsl
loope
dec
xchg
sub
orb
gs
add
sub
mov
add
and
lea
or
push
int3
and
stc
shrl
je
xchg
rcrl
mov
test
test
and
dec
dec
sub
mov
mov
je
shll
push
imul
jl
rorl
cltd
fs
inc
js
insb
out
filds
push
repz
or
ficoms
inc
inc
adc
imulb
cwtl
sbb
inc
mov
mov
jl
push
std
cmp
fcomps
popa
rorb
out
std
mov
or
pop
sbb
pop
cli
rorb
lea
flds
std
das
cmp
cs
imul
push
cmp
cmpsb
iret
ret
ds
pop
mov
or
add
xlat
or
scas
sbb
mov
movsb
push
or
sbbl
push
lret
dec
add
inc
or
xchg
shlb
dec
mov
insl
xor
pop
dec
out
mov
js
pop
xchg
mov
jbe
sbb
xor
and
add
ret
or
adc
jo
sbb
xchg
or
imul
mov
jo
pop
sub
aam
jmp
pop
inc
mov
and
inc
mov
add
or
mov
mov
outsb
xlat
xchg
fwait
add
dec
hlt
sbb
mov
xchg
nop
jo
je
xor
rorl
data16
les
out
loop
das
aas
dec
daa
in
lret
pop
and
xchg
or
fistpl
mov
rclb
jae
jns
test
dec
xor
je
xchg
or
cmpsb
popa
insb
out
popf
mov
or
push
sub
ret
mov
xor
pop
movsl
addb
mov
xor
mov
xor
rclb
in
or
pop
xlat
xor
mov
mov
adc
or
insb
adc
xchg
out
adc
jmp
mov
imul
cmp
mov
clc
xor
push
sar
cmp
cmpsl
leave
sbb
pop
lret
repnz
or
mov
icebp
mov
push
pop
imul
push
push
sbb
cmovo
sbb
xlat
lahf
sub
rcll
jge
mov
popa
add
scas
out
inc
addr16
jp
movsb
int
push
xor
aad
mov
push
adc
xchg
mov
js
cltd
std
aad
jne
sub
pop
pop
sbb
shl
mov
aaa
fwait
or
dec
cltd
sbb
sahf
or
enter
and
mov
int3
push
sti
cltd
lock
out
sbb
scas
xchg
out
jno
ret
or
lds
cs
lahf
out
test
mov
je
inc
cmp
insl
repnz
insb
adc
push
pop
loopne
sub
std
sub
sub
test
push
sub
scas
repz
pushf
inc
aad
test
cmpl
in
icebp
inc
jecxz
into
in
icebp
and
push
bound
gs
and
hlt
xor
mov
into
push
fwait
int
call
je
sub
nop
test
cltd
jb
sbb
and
mov
rcl
inc
in
cmc
mov
call
negl
jb
xor
clc
bound
add
mov
loop
ljmp
cmpsb
push
shll
test
cwtl
sbb
inc
dec
dec
cmpsb
test
sbb
scas
cmc
sbb
xchg
mov
pop
repz
fwait
enter
adc
jmp
jmp
or
push
push
fld
pusha
aad
add
movsl
push
inc
icebp
push
jge
cmpsl
adcb
push
addl
add
inc
sbb
daa
rcrl
out
mov
int3
mov
mov
pop
and
repz
idiv
outsl
push
dec
out
outsb
mov
xor
and
jb
cmp
jno
inc
jae
dec
xor
pop
jg
clc
shl
xchg
imull
push
cmp
mov
rorl
mov
lret
hlt
and
nop
dec
jb
scas
sbb
test
inc
pop
hlt
push
mov
xchg
inc
stc
cmp
leave
add
repz
and
pop
fists
sbb
test
in
inc
js
mov
adc
xor
testl
adc
xchg
sub
mov
mov
xor
in
lret
and
cmp
and
icebp
cmp
sub
sbb
cwtl
xor
mov
cmp
push
xor
imul
jne
cmp
icebp
fisubrl
mov
aaa
jg
and
jle
aam
rol
pushl
add
pop
popl
hlt
pop
dec
lock
shll
mov
fisubrs
cmc
push
jge
and
pushf
dec
mov
add
adc
ret
pop
jmp
or
cmp
lcall
and
xchg
pop
out
jp
or
lret
and
jle
mov
adc
pop
jl
push
push
incl
cli
repz
cmpsl
je
outsb
cmp
jne
lret
jno
dec
or
add
ja
and
inc
in
sbbl
and
cmc
sub
sbb
adc
jb
ret
xchg
sub
mov
test
inc
sysexit
outsb
cld
repz
mov
mov
jno
repnz
imul
loope
cmp
lcall
xchg
jge
rcll
popa
push
sbb
cmp
aam
loope
adc
mov
pop
add
arpl
dec
fsts
cld
lods
pop
xor
fwait
mov
ret
std
pop
mov
arpl
xlat
lock
jae
push
xchg
add
jmp
pop
mov
xchg
pop
repz
pusha
mov
sub
vphsubbw
xor
addl
jae
outsb
cmc
mov
add
inc
sbb
mov
inc
add
adc
and
scas
sbb
cmp
in
adc
jecxz
cmp
jecxz
sub
loopne
sbb
lea
adc
pusha
jno
lcall
pop
stos
cld
adc
cli
test
imul
imul
gs
mov
xor
pop
int
push
bnd
gs
xchg
push
sub
call
cwtl
leave
aad
jbe
js
test
pop
push
cwtl
dec
popl
scas
in
pop
inc
iret
into
and
adc
cmp
jle
stos
inc
loopne
xchg
stos
and
add
fnstsw
lret
pusha
jge
inc
rcll
nop
ljmp
pop
clc
add
sub
sbb
call
test
ret
xchg
and
loope
sub
or
js
lret
lret
jecxz
dec
and
rclb
sub
mov
push
rorl
icebp
push
enter
push
lcall
pop
push
data16
xor
sbb
pop
nop
push
ss
ret
test
mov
pop
out
mov
and
aam
movsbl
push
pop
icebp
daa
xor
inc
adc
es
jo
cmc
inc
sub
jg
aam
jo
add
and
cmc
or
dec
repnz
arpl
loop
pushf
cmpsb
inc
cmp
fadd
in
test
call
ljmp
xorl
mov
inc
es
xor
lods
sar
xchg
daa
sub
cs
or
lea
call
xor
add
in
out
insb
cwtl
insl
sbb
out
sti
test
dec
mov
fidivrl
fbstp
adc
adc
cmc
xchg
mov
sub
mov
mov
add
sbb
push
fisttpll
lods
xor
xchg
mov
and
sbb
movsb
fstpt
xor
add
lret
insb
nop
cltd
fildll
mul
jg
repnz
mov
dec
sub
fdivrs
in
inc
add
jmp
dec
push
push
sbb
push
xchg
jo
mov
and
orb
dec
ljmp
fcomps
mov
rclb
das
popf
ljmp
int3
jmp
data16
sub
inc
dec
jns
push
mov
lea
sub
jmp
mov
test
imul
push
add
or
rep
lret
std
hlt
sbb
dec
fdiv
leave
jno
adc
ss
dec
mov
sub
pushf
int
xchg
push
shlb
mov
es
out
fidivs
into
jl
lods
cvttsd2si
inc
mov
repnz
test
cmp
cmp
and
and
fldt
push
lahf
mov
jg
mov
or
stos
push
push
pop
movsb
jp
fsts
imul
fisttps
mov
call
lret
ds
out
jnp,pn
data16
cmp
movsl
jmp
repnz
les
aad
mov
outsb
dec
out
mov
push
mov
gs
in
jne
stos
sbb
cmp
xchg
push
cmc
add
insb
xchg
sbb
pop
adc
mov
in
in
adc
push
push
mov
pusha
xlat
mulb
popf
in
lret
add
subb
scas
add
pop
aad
out
call
shlb
push
test
arpl
test
bound
adc
imul
cmp
or
int
add
pop
pop
cmpsl
lods
inc
jbe
rol
sbb
push
ja
rorb
push
adc
jb
inc
mov
int
test
dec
cmpsl
cmp
cmpsb
out
aam
in
insb
fwait
popa
fisttpl
loop
and
sbb
push
shll
xchg
or
push
lods
rolb
xor
and
outsb
ret
inc
cmp
and
aaa
rcl
jne
notl
subb
orb
jp
cmc
idivb
dec
jl
aam
cmpsl
jg
lahf
stos
dec
push
mov
xor
rcl
vcvtpd2psy
cmc
mov
mov
cwtl
pop
lock
xor
jnp
sub
or
pushf
push
or
mov
iret
push
loop
mov
out
out
mov
and
push
sub
popa
insl
roll
pop
add
popa
iret
jmp
xchg
dec
xchg
xor
pusha
lret
or
jns
sub
sbb
mov
jb
xchg
push
fcomps
cwtl
adc
xchg
andl
jl
pop
test
ret
inc
mov
cli
jle
sahf
jns
pop
lahf
jno
inc
xchg
cmpsl
adc
fidivrs
hlt
lods
sbb
mov
xor
xorl
stc
dec
pushf
lods
jne
out
mov
dec
fucom
push
push
shrl
mov
out
sbb
push
mov
push
aam
push
adc
repnz
and
out
fmulp
in
arpl
or
xlat
shl
loop
jne
sbb
es
outsb
add
or
mov
mov
out
fcmove
add
push
bound
or
inc
stos
dec
pop
ds
hlt
out
mov
je
push
dec
div
and
push
and
sbb
addr16
ret
mov
out
jbe
inc
add
in
cmp
clc
in
int3
jns
scas
repz
sbb
xor
lret
dec
mov
mov
cwtl
xor
pop
in
lret
nop
mov
push
out
pop
sbb
mov
addr16
addl
jb
jnp
sub
sub
sbb
sahf
adc
mov
mov
pushf
xadd
xchg
sbb
sub
dec
adc
add
ss
jnp
cwtl
mov
pop
stos
add
push
mov
js
xor
push
or
mov
push
cmp
cmp
sub
sub
pop
ja
mov
loope
repz
lea
push
xchg
sub
aam
cmp
pop
out
lock
insb
jmp
jl
cs
cmp
into
xorl
imul
sub
jae
mov
jl
xor
mov
lahf
call
cmp
or
insb
pop
pop
cmc
adc
int
xchg
or
clc
jmp
fisttps
mul
mov
and
fldl
sub
fwait
mov
jge
pop
test
sarl
cmp
imul
fwait
cld
inc
addl
aam
fldz
roll
sahf
clc
dec
mov
mov
xchg
mov
mov
icebp
mov
add
fidivl
mov
lds
cmpsl
adc
push
cli
addr16
inc
xor
jne
xor
xor
les
sub
repnz
arpl
les
sbb
jno
insl
movsl
or
cli
inc
pop
fwait
in
fstps
cmp
sbb
scas
stos
jle
adc
scas
std
lahf
sub
push
aam
out
sbb
lods
xchg
dec
in
cltd
ret
mov
push
leave
or
cmpsl
pop
movsl
insl
pop
adc
push
fwait
add
clc
call
aad
ss
push
ret
cmpsb
inc
stc
xchg
pop
iret
iret
pop
and
fnstsw
pop
cmp
xor
fs
std
mov
test
pop
sahf
jp
dec
jbe
fwait
xchg
cmc
icebp
scas
loope
adc
sbb
inc
pop
pusha
pop
sahf
movsl
push
cmovle
pusha
jge
xchg
cmp
loopne
lock
ja
fwait
outsl
jbe
fs
rcrb
push
add
push
cmp
stos
mov
jecxz
fcomps
enter
push
push
mov
loopne
mov
cmp
jno
sahf
movb
cmc
inc
and
jns
addb
inc
inc
mov
movsb
test
xor
aaa
cmp
gs
lcall
xchg
cwtl
inc
sub
stos
xchg
inc
daa
sub
xorb
adc
inc
cs
test
ss
xlat
imul
jmp
test
sub
aad
cmp
pusha
mov
sub
push
pop
cmp
enter
inc
mov
in
ljmp
xchg
fstl
push
cs
scas
lods
stos
jp
dec
mov
insl
mov
js
subl
or
add
sub
or
fwait
mov
sub
add
js
sub
lcall
popf
push
or
test
push
arpl
loopne
in
jl
faddl
cmpsb
or
out
mov
cmp
mov
mov
ljmp
or
imul
jl
mov
dec
pop
in
aad
sti
sub
mov
sub
shr
xor
cmpsl
mov
mulb
xchg
pop
lret
adc
or
cltd
aas
push
jle
into
adc
dec
test
imul
xlat
mov
ja
jmp
add
mov
pop
inc
mov
and
rorb
and
das
add
mov
xchg
mov
cs
add
jae
push
add
sub
xchg
or
repnz
push
outsb
lea
daa
jp
sub
orl
push
jae
mov
sbb
pushf
pop
xor
lds
into
fildl
pop
lods
jecxz
stc
lods
mov
sbb
mov
movsl
push
out
xor
push
xor
mov
dec
addl
test
push
les
stos
lret
subb
and
dec
xchg
jbe
push
mov
int3
adc
repz
out
mov
enter
xchg
mov
pop
ss
repnz
dec
xchg
ret
ret
xchg
dec
lock
xchg
xchg
shr
mov
xchg
lds
sub
jnp
ljmp
movsl
xor
fsubrs
movsl
pop
xlat
mov
lods
outsl
pop
lahf
pop
jmp
mov
mov
pop
and
out
mov
mov
cmp
cmp
lret
mov
imul
or
jmp
js
dec
jb
imul
cwtl
dec
sub
and
mov
dec
arpl
xchg
mov
ss
pop
and
inc
jg
cwtl
lds
or
imul
jp
inc
jnp
mov
push
jbe
sub
ror
mov
jecxz
mov
cld
inc
orl
mov
lods
jne
mov
inc
xchg
mov
ja
pop
mov
mov
sub
das
sub
xchg
or
xor
stos
stos
mov
mov
test
stos
fdivp
stos
jge
push
mov
bound
std
push
push
bound
ret
jge
lcall
in
and
dec
sub
lods
xchg
sub
fsubrl
call
aaa
and
dec
bswap
imul
mov
mov
sbb
outsl
jb
insb
fsub
jmp
outsb
test
mov
dec
ficoms
xor
jl
aaa
mov
push
dec
push
cmc
in
mov
je
and
cmp
mov
sub
bound
icebp
fstpt
cld
xchg
adc
inc
jbe
inc
out
or
sbbb
push
xchg
stc
mov
pushf
jle
inc
fstl
mov
xchg
and
sub
sahf
jp
in
xchg
fdivs
cmp
pop
pop
and
add
lds
jge
mov
mov
lret
mov
imul
mov
lea
push
pop
pop
gs
lods
mov
jl
hlt
daa
jp
inc
xchg
and
test
dec
sbb
cs
mov
pusha
cld
pop
lea
stos
adc
xchg
fs
scas
or
icebp
mov
jmp
pop
data16
imul
pop
cmp
dec
sarl
and
sbb
push
call
jne
jp
jl
lods
std
lea
push
push
jmp
pop
add
pop
clc
clc
fsubr
out
or
xchg
mov
push
mov
cmpb
daa
dec
call
subl
fucomip
fcomp
and
ret
xchg
cmp
ficoml
sahf
ficompl
insl
pop
cli
sbb
stc
sti
jno
jns
xchg
sub
inc
shr
test
lds
jl
xchg
jl
xchg
test
sahf
insb
add
int
imul
cmp
xchg
cmp
cmp
xchg
push
mov
outsl
pop
imul
std
cltd
je
jns
mov
fldcw
mov
sbb
ljmp
xor
jno
sti
ret
loopne
add
sbbl
mov
test
aam
lock
ret
stos
popf
nop
pop
add
movsl
popf
inc
cld
movsl
mov
shr
sub
test
mov
jmp
das
pusha
dec
xlat
ret
push
in
mov
fisttps
ja
mov
out
sti
fcomps
jge
stc
call
lods
cmp
mov
jo
push
xchg
aad
pusha
shlb
cmp
scas
pop
inc
push
lods
cld
cmp
dec
subl
xchg
test
inc
cmp
int3
ja
mov
mov
xchg
iret
xor
sbb
daa
adc
sti
fidivs
add
inc
gs
xchg
mov
shl
jae
movsb
insb
cld
ret
ljmp
push
push
push
fisubrl
xor
mov
enter
mov
xchg
and
push
repnz
cmp
sbb
fildl
fs
mov
xor
lcall
negl
push
push
stc
insl
xchg
cmp
fimull
loope
lcall
and
lds
in
rcrl
in
jmp
dec
pop
fbld
ljmp
push
inc
mov
insb
and
inc
mov
or
fs
cwtl
xor
gs
fdivrl
repnz
jp
and
push
mov
mov
movsb
mov
imul
dec
les
fcompl
push
aaa
ret
cld
jns
lock
sub
enter
mov
dec
aam
leave
sub
push
fwait
add
je
es
fadds
nop
lock
mov
jbe
jnp
aam
or
mov
aas
xchg
jo
mov
jecxz
out
lods
sub
dec
jle
testl
clc
je
cmpsb
sub
mov
adc
sti
daa
inc
icebp
ljmp
fmuls
xchg
or
cmp
js
sub
sahf
inc
pop
testb
pop
mov
mov
push
xchg
insb
add
mov
jbe
fld1
push
push
cwtl
pop
dec
or
sahf
adc
imul
repnz
xchg
gs
jae
sbb
fdivl
mov
add
sbb
test
or
dec
cmp
cmp
idivl
push
mov
in
push
dec
test
notl
pop
and
in
pop
test
inc
adc
sbb
stc
sub
test
or
jae
push
lea
or
jecxz
and
insb
lcall
sbb
jge
cs
ret
jmp
xchg
sbb
cmc
imulb
adc
int3
adc
cmpsl
xor
sahf
rclb
pop
leave
xlat
loope
stos
adc
int3
add
add
repz
sub
jno
addb
cmp
lock
or
repz
in
sub
stc
mov
rorb
lock
mov
mov
xchg
xchg
lahf
adc
sti
sti
xor
dec
and
jo
cmc
push
xchg
pop
movsl
js
dec
fwait
cli
insb
xchg
cld
xor
insl
xor
pusha
fs
jb
sbb
repnz
data16
sbb
test
rcll
out
enter
cwtl
outsb
cmc
pop
movsl
cmp
ja
cmp
mov
mov
aaa
cmp
jmp
pop
and
add
xchg
loopne
sbb
lret
push
mov
add
fmuls
pop
inc
cmp
mov
mov
pop
jl
pop
and
pop
inc
lcall
enter
pop
mov
add
outsl
push
popa
adc
mov
sbb
les
icebp
ss
aas
into
pop
dec
fdivs
sub
sub
fldt
fwait
jbe
pop
std
or
add
mov
mov
imul
mov
lods
pop
push
adc
ljmp
pop
push
rorb
inc
add
jecxz
mov
lods
add
pop
push
xchg
and
lods
stos
jnp
xchg
ffree
sbb
cmp
into
mov
mov
inc
jl,pn
loopne
push
jl
jno
fstp
add
inc
push
dec
adc
xor
clc
jno
inc
mov
or
in
sahf
jns
movsl
xchg
mov
popf
int3
jno
sub
test
xchg
ljmp
pop
push
lea
repz
xchg
sub
clc
test
loop
lods
jo
or
push
stos
sarl
loop
lcall
cmp
cmpsl
mov
pop
lcall
in
mov
and
sub
rorl
shlb
jmp
out
mov
mov
lret
jb
jmp
pop
add
and
lret
sub
sub
inc
test
dec
mov
jo
ljmp
jne
sub
outsl
pop
fidivrs
xor
or
mov
pushf
fucomp
out
or
jge
push
mov
add
xlat
and
mov
lods
sub
dec
jbe
adc
pop
dec
int
inc
mov
mov
mov
test
je
pop
rolb
mov
sbb
and
inc
out
adc
jbe
sarb
push
cmpsb
shrb
dec
data16
pusha
pop
outsl
xor
pop
pop
mov
and
adc
ds
or
mov
xchg
xor
sub
and
dec
lods
mov
xchg
imul
aas
sub
cltd
stos
into
pop
jb
cs
in
inc
in
hlt
repnz
push
testb
sbb
or
jo
sub
pop
loope
xchg
dec
and
inc
stos
loop
dec
xchg
xor
out
cmp
push
lods
out
inc
jb
mov
dec
clc
pop
xchg
add
out
xor
jae
or
mov
shll
imul
ds
hlt
sbb
sbb
cmpsb
rcrb
sub
negb
mov
lret
sahf
lcall
push
movsb
add
insl
roll
ret
or
cwtl
dec
mov
cld
push
or
xor
in
mov
cltd
scas
rol
ret
das
sub
lahf
mov
rorb
jnp
loopne
jle
dec
nop
test
int3
cmp
imul
daa
int
je
scas
lea
shrl
add
mov
cld
imul
push
sbb
pop
jge
inc
movsb
hlt
js
dec
xor
and
scas
jecxz
inc
xchg
orl
add
push
stc
out
lock
repnz
fnsave
stc
or
aas
push
sbb
inc
scas
jb
mov
mov
sti
pop
xor
xchg
mov
mov
dec
dec
xchg
dec
pop
xor
in
cmp
and
add
hlt
push
xor
mov
call
int3
lods
out
dec
sub
mov
dec
adc
divb
adc
rolb
fildll
dec
xchg
cmp
or
fimuls
push
scas
inc
test
and
ret
clc
test
clc
push
jg
cmp
sbb
sbb
out
and
dec
push
insb
jle
sbb
fwait
sbb
dec
int3
inc
mov
pop
fstpl
fisubrl
pop
push
mov
stc
cli
inc
imulb
or
loope
mov
adc
mov
xchg
out
in
inc
test
pop
xor
xor
mov
call
lret
sub
xor
in
andl
push
jge
data16
and
lcall
mov
sub
xchg
jl
ret
bnd
dec
rcll
outsb
insb
jbe
rorb
mov
sti
mov
outsb
movsl
lock
cmc
lods
int
mov
je
aam
sub
dec
out
adc
or
dec
in
ficompl
out
sub
jmp
pop
sbb
loope
shlb
jp
mov
int
mov
mov
dec
lret
test
sarb
addb
stc
or
ljmp
push
int
shlb
or
aam
test
mov
xor
cmp
or
sbb
dec
shrb
aas
loop
arpl
sub
int3
push
push
shll
mov
pop
xor
sbb
push
mov
adc
sub
mov
sbb
inc
mov
mov
xchg
mov
loope
cltd
test
adc
xchg
movsb
dec
dec
sbb
dec
jecxz
cmp
mov
das
sub
movsl
mov
jp
cmp
xlat
sarb
add
test
mov
xchg
pop
adc
lcall
lods
or
imul
dec
cmpsb
sbb
andl
cmpl
incb
push
in
out
add
pop
add
popa
cmpl
sbb
push
xor
sub
popa
and
out
icebp
in
sarl
inc
push
loope
arpl
mov
es
xchg
jne
xchg
insb
xchg
lods
aas
aam
std
dec
in
loope
enter
add
dec
dec
sub
mov
and
out
out
cmp
jnp
mov
mov
xor
xchg
out
mov
xchg
mov
repnz
shrb
inc
movsb
ss
adc
shll
popf
sbb
test
imul
out
push
jle
loop
add
dec
sub
repz
mov
fxch
mov
or
sub
mov
mov
std
data16
arpl
adc
pop
in
inc
icebp
outsl
adc
ret
sbb
adc
xchg
push
out
loop
adc
dec
lds
lods
dec
lods
call
addb
sub
push
sbb
mov
and
pop
mov
rcrl
lds
es
jno
into
mov
xchg
push
hlt
shlb
pop
lds
test
cmc
add
negb
mov
jnp
mov
cld
cmp
fnsave
add
or
out
ja
es
xor
and
cli
and
repnz
int3
adc
mov
jg
lret
inc
scas
xchg
fcomip
scas
sbb
enter
mov
push
jecxz
add
jae
inc
loope
mov
mov
sbb
mov
dec
xchg
decb
add
mov
mov
dec
push
popf
js
fiadds
mov
outsl
or
push
push
xor
cltd
shr
and
lahf
or
jbe
or
arpl
into
mov
dec
mov
or
xchg
popa
test
icebp
pop
jno
lds
pusha
mov
cmp
stc
dec
stos
test
sti
scas
fbld
mov
mov
outsl
pop
ljmp
mov
clc
push
pop
jb
pop
pop
xor
movsb
mov
test
cmp
lret
xor
vsqrtps
add
mull
inc
add
ja
jp
pop
or
and
sub
mov
adc
outsb
adc
sbb
fstpl
addb
testb
pop
shll
fwait
pop
stc
cmp
movsl
icebp
out
ja
aas
add
je
push
int3
lea
and
call
adc
notl
or
neg
icebp
popl
mov
jns
mov
pushf
jmp
xor
mov
loop
mov
xchg
ret
ds
inc
cmp
int3
cld
lahf
ss
or
or
loop
orl
adc
cmpsb
loope
mov
cs
js
out
mov
rorl
psllq
pop
sbb
ja
movsb
ret
outsb
sbb
adc
sbb
mov
pop
test
stc
loope
fcompl
adc
outsl
push
fld
add
icebp
push
lcall
inc
adc
pop
mov
push
in
cmp
sub
jne
jbe
jmp
rcrl
int
mov
fidivrl
ror
idivb
aam
jo
fwait
nop
add
sbb
jb
fs
popa
in
movsl
inc
adc
xchg
and
push
fcomip
into
aas
xor
cli
xchg
leave
xchg
iret
lods
and
pop
in
arpl
push
scas
mov
das
xor
push
mov
pop
sti
mov
and
repnz
mov
shll
sbb
sub
jp
mov
lods
movsl
sahf
out
sahf
mov
lock
fidivrl
add
popf
bound
xor
pop
lods
jge
dec
fcomi
and
ss
or
iret
sub
int3
imul
pushw
in
xchg
out
push
push
fisubs
insl
dec
fsubl
sbb
jno
add
jg
sti
das
mov
push
add
idivl
test
loopne
test
fiaddl
test
jmp
aaa
mov
repz
aaa
push
inc
mov
bound
pop
shrb
add
loope
xor
xchg
jae
xor
stc
out
cmp
sahf
shrl
sub
sti
cwtl
and
adc
fiaddl
lahf
bound
inc
fmull
aad
and
mov
cmp
loopne
fisubs
jbe
shrl
out
pop
push
int
pop
cmp
xor
fsubrs
jnp
shl
shrb
js
repnz
int
jge
je
jmp
popf
add
add
mov
or
xchg
call
xchg
mov
adc
push
hlt
jne
fsubr
incl
and
push
std
push
jg
enter
mov
cmpsl
mov
adc
mov
xchg
popf
ret
mov
and
sti
ljmp
loope
dec
push
jae
insl
push
dec
test
or
inc
sti
dec
inc
nop
jb
shr
adc
das
xchg
lds
std
lock
sbb
push
shl
fsubrs
int
xchg
inc
cmp
push
xchg
push
cmovo
and
pushl
dec
cli
ret
dec
push
repz
les
cmc
push
cmp
aaa
inc
movsl
mov
cmp
dec
not
stos
adc
addl
mov
xor
data16
repnz
pop
pop
mov
pusha
push
push
test
xor
and
int3
cltd
aas
enter
inc
adc
aad
inc
push
push
and
repz
icebp
and
or
dec
xlat
mov
dec
rorl
sub
fldt
add
fstpt
sbb
fcmovu
add
lret
cmpsl
js
loopne
movsl
lret
icebp
imul
in
sub
sbb
push
daa
xor
xor
adc
sub
mov
cmp
sarl
adc
repz
cmp
sbb
sbb
test
jmp
xor
mov
jmp
cltd
or
cmpsl
and
jle
aad
cmp
push
repnz
add
in
pop
mov
in
jecxz
movsb
in
enter
shr
fsubp
adc
sub
mov
mov
loop
jmp
int3
lcall
dec
je
inc
ja
stc
stc
xlat
jp
arpl
rcll
sbb
adc
lods
roll
inc
and
shl
mov
xchg
test
sbb
ja
int
jp
sub
mov
add
dec
inc
add
jne,pt
jmp
ja
lock
mov
clc
mov
push
mov
inc
in
cmp
mov
xchg
lret
cs
mov
test
xor
lahf
mov
sti
push
add
sbb
ret
fistl
push
cmpsl
jl
mov
xorb
push
cmp
mov
inc
sbb
lods
imul
adc
adc
cmp
jle
xor
or
int
cmc
xlat
sub
pop
fdivrl
mov
xor
fimuls
mov
out
in
scas
scas
popa
leave
dec
inc
mov
in
outsb
sub
test
into
cmp
push
xchg
push
and
fdivl
sbb
xor
dec
push
into
out
xchg
push
aad
xor
loope
push
lahf
imul
movl
fisubrl
mov
mov
jmp
push
fnstenv
setns
lahf
push
cmp
mov
jle
cmp
ror
out
jnp
and
jmp
xchg
loope
aaa
lock
cld
cwtl
daa
inc
mov
sub
xchg
push
push
jo
add
ret
pop
xchg
je
adc
xor
mov
pop
outsl
sbb
int
sbb
push
int3
imulb
push
jle
add
scas
xchg
loopw
xor
push
add
pusha
call
stc
mov
outsb
mov
lret
pop
ss
ja
outsb
pop
adc
cmpsl
xchg
xor
daa
rolb
sbb
sbb
xor
lods
dec
sub
push
sub
add
mov
or
fs
cmc
mov
mov
sub
fdivrp
push
adc
js
or
out
test
adc
sbb
fisttpl
lods
dec
xchg
xchg
mov
add
lock
jge
insl
shll
sub
loopne
popa
mov
cmc
sti
clc
out
loop
sahf
push
mov
out
cmp
xchg
in
adc
fwait
lods
imul
lea
jg
cmpsb
mov
bound
test
rcl
xorl
fisttpl
cmpsb
push
aad
gs
dec
punpckhwd
inc
push
jl
lods
xorb
lods
mov
out
imul
ljmp
cltd
mov
imul
or
ljmp
push
and
xor
je
ss
mov
mov
and
jb
leave
xchg
daa
mov
mov
popf
cmp
pop
xor
push
je
in
ds
loopne
sbb
movsl
mov
add
and
jnp
imul
adc
popl
shlb
cmpsl
sub
lea
mov
or
or
decb
pop
sbbl
push
stc
and
dec
sub
mov
movsl
sarb
or
lret
scas
lock
jno
mov
sbb
xor
aaa
lahf
xlat
and
push
cmp
aad
dec
test
es
popa
jnp
inc
or
adc
lret
lea
daa
add
mov
xor
lret
or
cmp
fwait
sbb
stos
sti
xor
aad
push
daa
shlb
xchg
sbb
or
push
fnstcw
fidivl
xlat
out
movsb
int3
rcll
aam
ja
aam
lcall
mov
gs
xor
jg
outsl
rcr
gs
push
add
push
jp
add
adc
jmp
push
mov
dec
fcomi
and
and
or
insl
cmp
js
jg
call
inc
push
fcomp
sbb
stos
enter
jecxz
push
xchg
cmc
xor
sahf
push
shrb
or
loop
pop
mov
sub
inc
xor
out
shl
add
popa
insb
push
lock
lahf
pop
xor
pusha
loope
mov
out
add
dec
jl
xchg
and
adc
std
mov
scas
loop
cmp
fdivl
mov
jbe
aas
cmpsl
imulb
fisttpl
lahf
out
imul
add
push
push
xor
sbb
jl
hlt
push
icebp
pop
dec
push
sbb
mov
xor
sub
incl
bnd
mov
shll
inc
fbstp
inc
sub
jp
shrl
je
xor
lods
out
pop
push
loopne
jo
in
inc
into
and
and
mov
lods
sbb
insl
sbb
inc
or
jmp
and
pusha
gs
xor
mov
push
mov
jmp
insb
xor
add
mov
push
adc
xchg
lds
stos
repz
das
fistpl
jge
mov
xor
xchg
out
xchg
pop
das
add
lret
mov
push
xchg
xchg
lcall
mull
imul
xor
sarb
stos
loop
and
addr16
mov
popa
add
mov
cmc
das
mov
xchg
xor
adc
sub
hlt
jo
xchg
stos
mov
repnz
xchg
and
mov
pusha
mov
push
das
ss
test
leave
mov
je
or
mov
fdivrp
mov
daa
lods
jbe
mov
push
rcrb
lcall
test
jle
adc
jmp
mov
cmp
pop
mov
xchg
scas
add
sub
sbb
aas
xchg
call
add
cwtl
pop
stos
movl
push
mov
fstp
inc
out
loop
inc
pop
int
mov
xchg
in
pop
icebp
adc
mov
inc
ror
adc
rcr
test
sbb
gs
clc
ret
inc
xchg
or
pusha
push
or
jnp
fisttpll
jb
cmp
inc
xor
sti
out
out
xchg
push
jo
ret
popf
sub
sbb
fidivrl
stos
jmp
push
pop
push
lea
loopne
sub
pop
iret
cmpl
sbb
mov
outsb
pop
mov
in
ja
les
jnp
cmp
dec
jnp
push
popa
mov
jno
or
xchg
imul
rclb
aaa
sub
sarl
mov
out
pop
jbe
jmp
push
or
jns
and
adc
adc
int3
pop
xor
xchg
int
loopne
push
adc
fidivrl
sbb
xchg
add
mov
dec
cs
shrb
ret
ds
fucom
adc
mov
adc
ret
add
repnz
addr16
jg
lea
inc
mov
test
push
inc
add
stos
dec
out
mov
mov
cwtl
pop
mov
cmp
iret
pop
in
ljmp
cltd
pop
in
sbb
sbb
push
jae
pop
push
push
ds
sub
mov
cltd
cmp
mov
pop
xchg
dec
out
adc
jle
xchg
gs
jbe
out
sbb
inc
fcoms
mov
sbb
lds
insl
data16
xchg
jge
jp
gs
xchg
adc
mov
das
fs
aaa
test
fcompl
fisttpl
adc
pop
out
pop
js
sahf
out
ljmp
sbb
fucomi
leave
imul
daa
mov
popf
dec
push
or
lods
jg
adc
aas
hlt
movsb
aam
in
loope
pop
mov
inc
and
jecxz
das
xchg
mov
inc
cmc
cmp
mov
hlt
stc
xchg
das
push
inc
inc
mov
and
cmpsl
mov
xchg
insb
dec
test
sbb
dec
sahf
pop
pop
mov
xchg
std
mov
fcmovne
cmp
and
arpl
das
push
pushf
jbe
insl
and
mov
jb
push
xlat
or
inc
mov
cwtl
out
enter
sub
iret
dec
das
inc
pop
xchg
cmc
sahf
popa
mov
or
pop
mov
shl
jb,pt
leave
imul
cld
sub
mov
fcomps
sbb
rclb
push
cli
add
pop
subl
pop
mov
inc
mov
shlb
pop
and
repz
mov
lods
add
mov
push
mov
lock
mov
lods
or
cmc
cmp
sbb
test
into
mov
lcall
test
jl
lahf
jno
mov
jg
lret
shl
sbb
inc
push
mov
popa
cld
cli
shlb
mov
cmc
fildll
jo
push
or
mov
idivl
sti
fs
mov
add
int3
test
push
psadbw
aad
inc
icebp
sub
jae
scas
fisubs
das
xor
cmp
add
pop
cmpsb
inc
lods
lcall
xchg
or
out
sbb
es
inc
cmp
arpl
sub
popa
les
test
lahf
int3
ret
repz
sarb
insb
pushf
fsubrl
out
rcr
jnp
popf
add
xor
mov
lea
loope
test
and
in
loopne
insl
adc
mov
adc
stos
xchg
loop
shll
mov
orl
rolb
xlat
decb
push
sbb
out
ljmp
jnp
mov
xchg
and
sub
aam
popl
pop
push
ss
and
movsb
aad
adc
addr16
arpl
ja
ficoml
push
popa
cs
mov
ficoms
cmp
push
jo
repz
xchg
movsb
inc
enter
mov
movsb
dec
sub
add
xchg
sbb
rcrb
imul
js
mov
fisttps
xchg
mov
jmp
mov
dec
scas
mov
test
sbb
sbb
fsubrp
cmp
test
push
dec
repnz
idivb
or
xchg
in
dec
mov
popa
xchg
loopne
int
outsb
jle
cmpsb
sub
push
sub
push
cmp
xor
cmc
dec
jecxz
dec
movhps
xor
mov
sbb
jne
sbb
stc
je
dec
push
mov
jg
data16
je
mov
aam
mov
movsb
dec
fisttps
dec
jo
sahf
mov
psllq
test
lock
pop
ja
rcl
aas
icebp
or
lret
loop
jge
mov
in
cmp
inc
rcr
dec
add
xchg
popf
bound
or
cmp
and
cmp
or
cwtl
and
mov
test
sub
push
rol
mov
pop
adc
push
in
pop
sub
cmpsl
fidivs
insb
icebp
divb
inc
repz
fwait
mov
lcall
in
js
xor
cmp
push
popa
out
mov
imul
scas
or
lea
scas
fsubrs
push
cmp
sar
jmp
popf
loop
lock
lds
sbb
stos
js
lret
sub
and
notb
mov
ljmp
aam
nop
movsbl
flds
movsl
js
popf
in
lea
or
dec
jno
cmp
push
lods
mov
or
push
loopne
sarl
push
pop
or
sbb
inc
leave
mov
push
jl
jbe
and
add
jno
push
cmp
leave
aad
xchg
out
xor
ret
std
cmp
loopne
cmpsl
add
or
insl
inc
push
rcrl
popa
repnz
or
and
dec
jg
jmp
jmp
mov
mov
popa
jnp
and
jne
pop
jmp
xorl
rcrb
aas
fidivrl
aas
cld
xor
aad
mov
dec
mov
loopne
sti
es
add
fiaddl
push
pushf
test
and
pop
cmpsl
pop
sub
dec
enter
xor
or
mulb
arpl
gs
xchg
rcl
loopne
mov
xor
sahf
xchg
ljmp
push
xchg
cmp
movsl
aaa
or
mov
fstpl
inc
into
cmpsb
je
mov
push
decl
pushf
push
ss
scas
in
mov
xchg
inc
push
hlt
aaa
sub
rcr
mov
icebp
outsb
sbb
repz
inc
mov
hlt
outsl
push
cld
xchg
aaa
hlt
cmp
and
xor
pop
or
cmpsb
mov
add
shlb
movsl
sbb
mov
mov
lods
push
out
ret
cltd
icebp
jle
adc
ret
popf
ret
int3
lock
aas
fcoml
call
cmp
push
sti
imul
les
inc
clc
fcmovu
decb
push
ret
or
js
and
js
in
ds
fwait
dec
inc
decb
pop
jp
mov
adc
mov
gs
fldenv
addr16
hlt
js
jl
push
xlat
xor
push
inc
icebp
adc
das
cltd
jns
cmpsb
pushf
mov
and
enter
push
xchg
fisttpll
call
not
jnp
or
adc
out
or
mov
jns
inc
movb
pop
push
fildl
jo
inc
mov
mov
push
mov
pop
addr16
in
mov
imul
lcall
ss
add
sbb
lret
scas
inc
mov
mov
stos
jns
call
cs
out
add
test
xchg
mov
ror
mov
cmp
insl
pop
out
mov
aas
ds
loopne
rcr
and
xor
stc
call
mov
out
addr16
jbe
inc
and
in
rcl
sbb
mov
aam
ror
popf
jno
jns
add
pop
cmp
out
ds
pop
lock
push
jecxz
popa
xchg
sub
mov
cwtl
mov
ret
gs
cmp
in
mov
jp
cli
aaa
loopew
enter
shll
adc
xchg
nop
movsb
dec
popf
ret
inc
push
dec
es
jnp
push
sbb
pop
add
mov
or
mov
dec
or
data16
cmp
add
or
cwtl
sub
xchg
pop
push
or
and
and
pop
jo
js
insl
loopne
outsb
jge
imul
or
sub
outsl
jmp
and
out
sbb
or
inc
sbb
aam
mov
repnz
mov
xor
int
add
addr16
jl
push
pop
sti
mov
in
or
data16
stc
adc
into
daa
inc
cmp
arpl
xor
lea
xchg
popf
xor
push
sub
xlat
lahf
insb
mov
adc
xchg
push
aaa
mov
xor
mov
std
cmp
sbb
inc
mov
testb
xor
mov
mov
add
adc
fcmovne
aam
aad
cmp
test
dec
in
cmp
mov
jb
loopne
sub
sahf
mov
jae
aaa
iret
xor
gs
mov
aas
sub
sbb
lcall
es
js
mov
jnp
push
lcall
repz
cli
aad
push
pop
mov
sti
lret
xchg
cmp
int
and
movsl
fsub
in
push
pop
fidivl
or
add
pop
gs
lret
xlat
jp
repnz
call
push
and
or
push
or
fs
mov
nop
test
adc
inc
fdivrl
sub
cmpsb
mov
lods
in
inc
jecxz
lret
lcall
and
test
in
bnd
xor
adc
xlat
int3
lcall
push
in
out
loop
dec
xchg
jns
sub
mov
and
ljmp
mov
test
sahf
dec
jne
bound
dec
out
xchg
int3
insb
ja
out
insw
cmpsb
bound
in
aas
imul
gs
cmp
add
sbb
daa
add
mov
sbb
cltd
stc
xor
test
in
mov
or
sbb
addb
add
lret
lret
in
mov
scas
and
push
cmpsl
outsb
rolb
pop
ja
pop
dec
loope
mov
add
mov
sti
lds
mov
add
cmpsl
ljmp
mov
pcmpgtw
out
xor
jg
mov
popa
xor
sbb
lods
and
xchg
jbe
es
nop
or
add
pop
das
nop
lea
and
dec
fwait
mov
sbb
inc
or
sbb
mov
pop
jle
pop
xchg
jg
adc
iret
fs
mov
and
pop
xchg
xchg
sbb
test
call
add
out
popa
mov
jns
pop
imul
cltd
mov
aam
jl
sub
jbe
fwait
mov
outsb
mov
shlb
nop
pop
enter
cwtl
lods
mov
push
push
cmp
rcrb
jb
cmc
aaa
test
xor
push
enter
in
push
ret
pop
les
js
xor
mov
ja
iret
insl
push
add
or
jnp
sbb
cmp
loop
inc
mov
hlt
mov
adc
movsl
push
push
pop
cmc
add
jno
dec
and
inc
jo
add
clc
aad
mov
xchg
outsb
lret
scas
ss
cmp
xor
andb
andl
push
pop
dec
popf
mov
ret
cmpsb
jmp
jmp
sbb
into
xchg
hlt
xchg
fisubl
mov
test
pop
add
jp
icebp
and
mov
outsb
out
mov
sub
sarb
ret
test
sbb
push
add
jge
imul
mov
mov
jl
sub
popa
add
lret
jae
adc
cmp
aad
sbb
sbb
xlat
xor
or
inc
mov
push
cmp
xchg
fistpll
adc
and
xchg
dec
outsb
mov
inc
sbb
xchg
popf
cmp
insb
fcmovne
xlat
pop
shl
stc
insl
xor
dec
jno
jbe
fxch
cmp
pusha
andb
imul
mov
stc
dec
lahf
sbb
add
inc
or
inc
outsl
xchg
aam
fstps
js
popf
xor
pop
pop
mov
int
enter
addr16
pop
cmp
mov
push
sbb
es
adc
xor
inc
pop
add
pop
jns
cmc
and
push
jno,pn
int3
je
mov
gs
daa
out
mov
dec
sub
popa
mov
xchg
pop
fcmove
jnp
xor
scas
mov
neg
cmc
or
cmp
mov
jae
push
int
dec
stc
aas
xchg
dec
mov
sbb
sub
lds
mov
stos
add
sub
push
mov
add
pushf
ror
popa
outsl
dec
arpl
adc
sub
aas
sub
mov
sub
mov
jbe
shld
mov
orb
jle
dec
in
repz
icebp
mov
add
cmp
scas
cltd
mov
mov
packsswb
xor
lds
and
mov
test
imul
sahf
sti
aad
loope
gs
xchg
dec
repnz
push
dec
jo
lods
jle
mov
xlat
pop
pop
cmp
mov
into
jmp
add
repz
jae
into
mov
mov
cmp
adc
xor
inc
outsl
jae
dec
pop
fnstenv
jle
xchg
ret
mov
or
in
pop
sahf
adc
cmp
pop
int
scas
jne
fwait
jnp
mov
and
imul
ds
cwtl
decl
pop
xchg
sub
mov
xlat
jg
lret
aas
adc
je
jge
int
add
mov
or
xlat
pop
inc
test
test
cmpsb
cmp
shlb
jmp
or
or
cmp
lret
pop
sarb
loopne
shrb
scas
jmp
pop
jno
mov
pop
inc
sub
fstpt
subb
lcall
push
adc
jge
mov
pop
adc
push
into
add
imul
lock
and
sub
movb
shl
sbb
int3
mov
and
mov
push
insb
mov
pop
add
fld
cwtl
mov
mov
cmp
fisubrs
pop
inc
xchg
inc
loope
shrb
repz
mov
adc
mov
aas
in
bound
sub
mov
cld
xchg
inc
iret
hlt
popf
cmpsl
or
repnz
xchg
jno
jecxz
cmp
mov
shll
sub
das
mov
push
xor
ss
loope
stos
xchg
jp
sahf
in
out
push
cmp
movsl
loope
mov
test
imul
add
ss
xor
mov
int3
ss
loopne
adcl
jbe
ficomps
test
mov
imul
cmp
fmuls
sbb
push
call
movsb
bound
fwait
iret
ret
scas
fnsave
adc
push
int3
fldl
adc
push
push
lahf
inc
xor
inc
pop
xor
xchg
ds
jg
cmc
lcall
inc
sbb
mov
sbb
push
push
divb
and
pop
jae
xlat
fistl
les
xchg
jnp
mov
dec
imul
and
pop
jmp
push
dec
xchg
lods
mov
jecxz
arpl
dec
hlt
pop
push
push
pop
push
sub
lock
lds
pop
leave
or
lds
jecxz
mov
out
mov
push
cld
mov
mov
mov
es
pop
dec
xor
xchg
data16
mov
arpl
add
lods
cmp
push
dec
gs
mov
add
sbb
arpl
idivb
test
lock
sbb
lea
ret
mov
subl
pop
loope
pop
jno
pop
fwait
push
lea
push
jae
jae
xor
dec
jne
jbe
in
lods
mov
in
ja
lea
mov
out
inc
jecxz
int3
dec
mov
inc
sub
add
addr16
fnstenv
cld
fsubrs
int3
mov
inc
aam
ds
add
mov
int
imul
fisttps
lret
sbb
out
mov
aam
addr16
popf
test
jns
jg
sub
test
sub
rcr
movsl
push
jo
mov
mov
mov
pop
sbb
ds
add
dec
jge
jge
in
inc
cmp
sar
popf
aas
adc
jg
mov
cmp
int3
leave
adc
jge
jmp
xchg
adc
mov
jo
scas
imul
ljmp
repz
popa
aaa
mov
add
cmp
mov
imul
xlat
daa
jno
sbb
outsb
pop
mov
xchg
lods
lea
cltd
mov
insl
mov
adc
std
xchg
imul
nop
stos
adc
subb
dec
es
ret
pop
cmp
add
ljmp
rcrl
enter
arpl
into
repnz
in
mov
mov
out
mov
mov
push
in
int3
decl
jecxz
sub
push
mov
iret
jl
push
adc
pushf
vmread
or
das
push
movhps
int
adc
jno
sub
push
testl
jge
adc
adc
jmp
fwait
jne
jne
movsl
ljmp
out
xchg
xor
jmp
xchg
add
enter
sbb
jne
repnz
cmp
pop
stc
adc
dec
insl
mov
lods
test
jno
push
inc
mov
or
jmp
lea
jae
test
rcr
insb
xchg
cmp
loop
pop
loopne
sbbb
jecxz
divl
jl
rcrb
movsl
insb
mov
mov
pop
mov
push
test
sbb
sti
and
sarb
ds
cwtl
adcl
mov
inc
inc
xor
cld
repz
push
adc
or
mov
movsl
aam
push
lea
inc
adc
orl
add
jl
aas
inc
add
mov
inc
imul
and
pop
inc
aaa
stos
fiaddl
add
or
mov
ss
fwait
ret
popa
jg
or
shrb
data16
lret
mov
xchg
push
mov
xchg
pop
pop
sbb
jo
sub
sub
jns
aam
lods
addr16
outsl
aas
loop
flds
push
and
mov
testb
sub
pop
mov
sub
test
pop
sub
push
push
test
cmp
out
dec
dec
outsl
adc
ja
ret
lods
fistps
cs
ret
cli
int3
cmp
shll
mov
dec
inc
sbb
fisubs
das
cwtl
pop
inc
js
and
imul
dec
sti
cmpsb
xchg
mov
mov
inc
push
adc
xor
cmp
sub
stos
jge
add
roll
mov
push
int
je
jo
inc
mov
fcomps
mov
popf
cltd
test
mov
and
insl
xorb
filds
inc
add
jae
dec
pusha
mov
test
loope
fs
dec
mov
std
push
out
or
jecxz
js
cmp
data16
hlt
test
sbb
mov
lods
or
pop
enter
imul
adc
xor
dec
jo
shrl
out
mov
mov
cmp
jno
cli
sarl
sarl
and
jnp
call
test
fdivrl
mov
xchg
imul
sub
or
sbb
stc
mov
dec
ret
push
pop
sub
adc
and
xchg
pop
jl
mov
xor
fldcw
mov
or
pop
xchg
cmpsb
loopne
push
cmovge
das
lock
loopne
push
sub
mov
mov
shrl
int
cmp
cmp
into
test
mov
test
fidivl
mov
jle
cmpsb
inc
inc
fisubrl
ds
xchg
fdivp
das
stc
sbb
mov
mov
and
xchg
lea
ret
insl
ss
cmpsl
jp
outsl
fs
paddusb
in
push
xor
idivl
push
sub
lods
cmpl
fisttps
sub
adc
jo
call
adc
xchg
or
sbb
fwait
jne
push
xlat
mov
sbb
jnp
jle
test
lahf
dec
ret
lods
ss
fstpl
sub
mov
inc
in
lcall
out
mov
stos
out
push
jo
mov
push
mov
imul
jns
mov
gs
mov
push
sbb
aam
pop
repz
or
loop
fwait
aam
xchg
pop
dec
in
mov
dec
mov
mov
dec
hlt
stos
dec
push
adc
dec
sub
xchg
dec
data16
mov
orl
lahf
punpcklbw
jbe
sub
cld
sub
dec
ret
insb
popf
int
orl
add
or
mov
adc
sahf
jecxz
cmp
push
xchg
sbb
out
ljmp
mov
adc
push
cs
pop
sti
push
fidivs
or
and
sbb
test
lock
sbb
aam
dec
mov
pop
out
mov
movsb
dec
cltd
iret
dec
pop
rol
mov
inc
inc
stos
inc
cltd
cmp
loopne
add
imul
fistps
lret
loopne
imul
or
sbb
dec
rol
pushf
sub
push
mov
jmp
lea
push
scas
dec
sub
push
sbb
inc
insb
add
ret
push
fsincos
cld
cmp
sarb
sub
lret
mov
cltd
lret
or
addr16
xchg
bound
scas
dec
lods
sbb
sarb
aas
scas
test
cmp
push
ss
fwait
popf
cwtl
jnp
jno
in
xor
jg
fwait
sbb
jp
addr16
rorl
jo
cmc
mov
in
stos
xor
sbbl
xor
sub
std
inc
leave
stos
loop
mov
insl
mov
je
aam
and
mov
pop
popa
mov
stos
imul
cli
inc
fwait
mov
fistps
push
shl
sbb
mov
cmp
mov
sbbb
mov
add
jbe
cmp
jne
lods
cmpsb
fildl
fnstenv
rolb
mov
jge
push
rclb
mov
mov
xor
mov
je
mov
fs
imul
adc
loope
cmp
fimuls
addb
je
or
sar
xchg
mov
xchg
lods
and
mov
jl
loope
or
mov
inc
mov
ret
shlb
push
test
stc
adc
outsl
loop
and
je
xor
shll
jp
pushf
mov
sub
jns
stos
lock
mov
mov
dec
insl
js
jecxz
es
scas
outsb
test
cmp
popf
lcall
dec
mov
sbb
ret
or
xchg
ficomps
xor
movsl
push
xchg
adc
xchg
int
jae
stos
pop
add
ds
lods
cs
stos
cmpsb
xlat
repz
xchg
jno
das
and
jecxz
hlt
inc
aas
inc
insl
xchg
dec
jecxz
movsl
aad
mov
jp
les
inc
xchg
lods
jbe
aad
lret
xor
xchg
cli
xor
lcall
cmp
ret
das
mov
out
or
shlb
mov
add
in
popa
dec
or
mov
in
js
push
sbb
rcr
lahf
jp
cmp
push
fsubl
add
push
lcall
mov
xor
sub
outsb
outsl
icebp
imul
cmpsl
mov
ja
add
hlt
pop
mov
or
xchg
stos
sub
cs
xor
or
cli
inc
lds
subb
sti
inc
repz
cmpsl
or
sti
subl
add
test
or
mov
lods
xlat
std
enter
packsswb
xchg
nop
divl
push
push
in
icebp
mov
mov
or
rorb
xor
out
mov
mov
xlat
jo
out
inc
bound
mov
lret
ret
stos
and
in
jne
xor
fistl
xor
leave
pushf
pushf
fs
jl
call
leave
das
jno
call
adc
movl
and
popf
adc
jl
push
lahf
xor
add
adc
test
frstor
mov
cmp
mov
and
xor
daa
adc
push
jle
add
mov
orl
push
fbld
sbb
push
and
cmp
push
iret
popa
and
jp
push
xchg
pop
xor
push
push
jne
sub
push
rorb
push
ljmp
sbb
mov
jle
or
adc
mov
adc
xchg
movsl
andb
and
loopne
sbb
dec
clc
pop
test
fcmovne
dec
add
jp
pop
mov
sahf
shl
lods
push
and
dec
repnz
repnz
bound
or
cmp
add
sarb
jecxz
and
mov
lcall
mov
iret
int
pop
enter
and
ss
enter
sub
jp
push
mov
jmp
imul
sbb
vmovss
lea
jl
iret
imul
ret
lcall
mov
out
in
ret
cmpsl
dec
xor
inc
decl
scas
jne
pop
bound
jmp
popa
test
arpl
fildl
push
iret
add
ja
sarl
subl
hlt
mov
in
pushf
lea
or
inc
sarb
lea
jle
sub
inc
pop
mov
mov
xchg
or
fistl
rorb
add
insl
mov
xchg
leave
ljmp
aas
testb
int
sti
lahf
add
sub
loop
cmp
xchg
fstpl
into
pop
daa
or
fs
pop
xchg
sub
repz
push
inc
mov
out
jae
cmpsb
mov
faddl
dec
lods
inc
in
clc
ja
fstps
incb
or
dec
insb
adc
rorl
es
push
ds
lock
stos
and
adc
cmpsl
enter
clc
incl
sub
mov
popa
repnz
sub
arpl
and
inc
nop
inc
or
jne
ret
jbe
ja
popf
lock
push
pop
incl
push
insb
mov
dec
xchg
les
sub
cmc
call
cmp
dec
je
rcll
add
in
int3
inc
cmp
icebp
mov
aas
nop
int3
push
push
and
ss
and
in
dec
lods
mov
push
cmpsb
cwtl
sbb
lahf
xor
dec
andl
imul
enter
mov
sub
jp
pop
outsl
fwait
xchg
xorb
xchg
lds
xchg
fstl
aad
out
lcall
adc
mov
fbld
stos
icebp
aaa
dec
adc
adc
jmp
or
scas
aas
ja
and
jle
icebp
loope
xor
das
dec
pop
dec
test
pop
add
lret
dec
pop
add
loop
retw
jns
add
clc
and
jl
and
push
xorl
sahf
jl
mov
in
js
xor
out
cmp
jae
sbb
inc
cwtl
mov
std
add
fists
push
mov
stc
mov
jb
dec
lods
out
orb
shl
add
mov
xchg
and
in
ror
bound
mov
and
pop
xor
inc
mov
mul
push
dec
xor
push
pusha
jae
mov
outsl
dec
sbb
jne
xlat
out
jno
or
dec
push
mov
adc
fdivl
mov
xchg
popa
and
adc
ror
and
sbb
fisubrs
dec
mov
aas
mov
filds
outsb
and
dec
sub
scas
push
cmpl
cmp
add
mov
or
rcrb
pop
shll
lret
ret
orl
inc
cmp
push
mov
daa
pop
mov
notb
push
test
xchg
ljmp
ficomps
sbb
and
out
push
inc
inc
loop
in
xor
stos
imul
ret
pop
aas
dec
gs
adc
xchg
addb
xchg
lods
push
jmp
scas
leave
inc
imulb
lfs
cmp
pushf
sub
or
addr16
int
mov
int
das
sub
pop
push
sbb
add
jnp
add
jmp
movsb
cmpsl
subb
imul
mov
popa
mov
shll
sar
mov
mov
mov
fimull
out
std
sti
subl
in
push
and
push
mov
cwtl
mov
inc
pop
aam
mov
jae
fcmovb
cmp
mov
mov
or
pusha
jl
cmpsl
rorl
jns
cmp
dec
sub
mov
pop
mov
mov
adc
pop
jns
jp
xor
jb
xchg
jae
pause
dec
add
call
push
je
cmpsb
andb
into
ja
add
add
out
or
js
inc
jno
lea
sub
lahf
addr16
scas
sbb
jo
nop
test
xor
out
addr16
add
mov
sbbb
lcall
into
jl
decb
ror
push
lds
repz
fs
leave
sbb
std
or
and
cld
ret
mov
push
jo
js
sub
mov
arpl
push
inc
and
jne
pop
push
aaa
jae
xchg
daa
sahf
pop
add
pop
fs
dec
mov
push
cmp
jp
sbb
jne
and
shrl
pop
xor
pop
call
jge
sub
add
push
divl
nop
movsl
lret
bound
jmp
push
dec
or
mov
jns
fildll
mov
pop
test
popa
or
lret
out
mov
mov
lcall
clc
push
and
fsubrp
jo
sub
scas
xor
xor
jge
adc
dec
jmp
pop
adc
pop
cld
decl
lea
or
or
into
adc
mov
dec
jl
stos
test
xchg
pop
and
scas
outsl
sub
inc
fwait
xchg
scas
inc
lock
sbb
push
cwtl
mov
lock
test
inc
das
in
iret
lods
aam
nop
xchg
inc
pop
push
xor
ds
fnstenv
xchg
imul
xchg
clc
mov
cmp
subl
cmc
push
sahf
lock
dec
dec
xchg
imul
dec
or
stc
adc
movsb
jnp
sqrtps
jl
jl
inc
jg
lock
stos
int
in
push
nop
jb
xchg
inc
loope
dec
stos
xlat
or
and
adc
xor
pop
inc
rolb
es
dec
iret
stos
xor
fcomps
cwtl
push
push
jns
xchg
test
imul
xchg
js
repz
cmp
cs
jno
insl
push
out
andl
arpl
test
pop
ljmp
scas
cmpsl
add
andnps
xor
rcll
cli
inc
js
push
nop
xchg
sbbb
xchg
dec
fwait
lods
mov
mov
sub
and
sub
inc
popf
outsl
lcall
imul
xchg
pop
scas
jg
lret
out
sbb
dec
scas
je
rcll
leave
push
insb
add
sub
pop
pop
xor
int3
ja
in
add
fnstcw
pop
sub
sbb
addb
repnz
push
stos
das
inc
adc
fnsave
or
xor
mov
pop
loope
and
or
xor
jnp
loop
fnstenv
sub
into
scas
mov
xchg
ret
pop
lds
pop
popa
mov
out
cmp
shll
daa
dec
sar
mov
loopne
mov
jns
lret
push
and
scas
into
jecxz
mov
xor
jb
mov
lret
mov
and
data16
jae
jns
leave
push
out
adc
jno
mov
inc
sbb
into
loop
mov
inc
outsb
pop
sahf
mov
jmp
sub
and
lea
aaa
or
mov
fcoml
dec
xchg
in
dec
inc
and
jl
or
movsl
mov
sub
cmp
not
out
or
jno
pop
jo
enter
dec
mov
mov
pop
cli
sbb
inc
jecxz
cmp
push
test
lock
mov
scas
xor
cmp
jl
cltd
fiadds
sar
mov
mov
cmp
or
push
cmp
rcrb
or
jmp
loopne
inc
pop
push
sub
in
xchg
cmp
les
jbe
xchg
stos
mov
push
add
and
repz
dec
ret
jbe
push
inc
jge
popa
vpxor
pop
dec
mov
mov
icebp
out
push
jecxz
imul
xor
call
pop
adc
faddl
adc
data16
icebp
rcr
cmp
sub
push
andl
add
push
push
and
jg
add
pop
xchg
mov
mov
or
outsb
mov
lods
and
inc
sub
ja
fiaddl
mov
xchg
push
mov
scas
pop
add
or
bound
cmp
inc
fwait
nop
cmp
push
outsb
ss
sub
loop
inc
iret
xchg
jne
cli
ss
xlat
pusha
and
rcl
inc
xchg
inc
aas
aad
dec
cli
jno
adc
std
pop
rclb
pushf
and
xor
sub
inc
sub
xor
xor
pop
cmp
push
clc
or
aam
out
and
lock
and
sub
sbb
outsl
adc
pop
jge
sub
ror
push
je
pop
gs
mov
or
push
aad
push
scas
sub
loope
cmpsb
test
sbb
nop
inc
call
ret
in
fsubs
or
test
mov
mov
mov
pop
sbbl
cmp
scas
mull
and
in
clc
adc
dec
gs
pop
add
test
mov
pop
out
and
divl
jb
jmp
add
icebp
adc
daa
test
jge
inc
gs
lods
cmp
sbb
sub
mov
or
fstl
stc
fbld
ret
jg
ret
mov
loopne
jns
sahf
mov
mov
ffree
aas
int3
mov
lods
and
sub
and
adc
aas
out
xchg
xor
sti
cltd
test
lods
fwait
inc
push
scas
or
jmp
cltd
push
dec
inc
ja
nop
and
clc
cmp
int
ja
lcall
mov
mov
ss
mov
enter
bound
dec
fistps
stos
xchg
cli
mov
sub
push
mov
cltd
push
add
and
test
pop
test
mov
mov
add
xchg
push
jp
repz
in
and
mov
in
xor
xorl
jle
and
cli
add
paddb
inc
js
loop
add
pop
and
pop
mov
push
mov
add
lret
dec
pop
mov
push
pop
sti
mov
les
fcomip
adc
fisubrs
ret
jno
shll
in
ljmp
dec
and
jge
add
iret
push
sub
adc
inc
ja
xor
sbb
sbb
inc
fs
mov
int3
lds
pop
mov
ret
stc
bound
mov
and
mov
mov
mov
pop
jle
push
fimull
pop
adc
push
or
jmp
or
push
jle
aad
mov
sub
fsubrp
jecxz
stos
inc
sbb
dec
dec
outsl
rorb
insl
nop
subl
jae
ds
test
imul
mov
mov
adc
shrb
sub
out
lods
pushf
es
addr16
xchg
inc
jo
mov
dec
fdivrl
sbb
adc
shrl
sbb
imul
roll
xchg
repz
xchg
daa
subl
push
test
hlt
scas
in
mov
icebp
in
sahf
inc
cmp
push
dec
icebp
mov
gs
pop
mov
lods
add
orl
mov
cmp
sub
lret
cli
xchg
sub
int
movsb
mov
add
jno
xchg
in
adc
movsl
sub
push
jo
mov
and
mov
jmp
cli
sub
leave
nop
add
pop
add
dec
inc
jbe
scas
mov
inc
jl
pop
jmp
xchg
adc
shrb
push
or
scas
ds
mov
mov
pop
scas
lock
fdivrs
adc
mov
sbb
xrelease
mov
in
lock
xor
push
repz
gs
aad
enter
pusha
jae
xchg
push
ljmp
add
imul
aaa
dec
lret
pop
cmp
and
jo
shlb
arpl
mov
pop
stc
repz
cmp
stc
push
mov
mov
js
loop
das
in
icebp
mov
mov
push
rdtsc
push
rorb
mov
stc
jg
mov
insb
fildl
imul
je
jle
lock
push
scas
mov
and
iret
mov
jmp
or
jl
pop
push
pop
lret
lret
arpl
jns
jp
xlat
mov
roll
jg
jne
inc
sub
cmpsb
sahf
mov
jae
ret
test
adc
adc
jecxz
incl
lret
push
dec
imul
adc
xchg
repz
sahf
sbb
cmc
enter
jecxz
sarb
push
test
and
dec
sbb
hlt
rcll
int3
xor
jns
push
out
imul
mov
cmc
subl
test
rcrl
pop
inc
fadds
xchg
cwtl
fucom
mull
pop
mov
jle
xor
or
cmpsb
push
cwtl
addr16
mov
and
aad
imul
jmp
test
cmp
or
inc
es
adc
ror
push
fldenv
mull
arpl
xor
iret
add
fdiv
fldl
loop
jbe
addr16
or
mov
adc
add
cmpl
pop
in
add
in
outsb
lods
icebp
xor
aam
inc
movsl
xchg
sub
call
sbb
xor
xor
pop
add
fimull
daa
cmp
xor
dec
xor
and
jg
test
xchg
jl
mov
int
inc
fadds
addr16
jg
movsl
aas
mov
dec
pop
xchg
lock
xchg
add
pop
push
mov
or
scas
push
jge
negl
add
fwait
push
sti
xor
mov
xchg
jle
push
cmp
sbb
fwait
out
sub
sub
cmp
push
jl
and
xor
outsl
mov
and
arpl
test
fsubs
cs
fwait
jl
loope
call
pop
sbb
xor
cld
jmp
dec
push
mov
xchg
adc
in
jne
jge
outsl
or
fldenv
in
pop
dec
xchg
pop
pop
addr16
cmc
xchg
push
mov
pushf
fbld
mov
xchg
add
mov
mov
jne
fcoml
cmp
dec
adc
sub
incb
xchg
cmp
mov
inc
cmp
jmp
jecxz
shlb
stos
in
cmpsb
test
int
xchg
pop
nop
mov
pop
mov
sarb
jmp
sti
push
cmpsl
mov
fs
adc
jb
push
dec
jns
test
pop
dec
push
cltd
rol
test
mov
pushf
jl
repnz
decb
push
push
mov
insb
hlt
add
or
data16
ss
test
sti
jecxz
push
popf
or
jae
movsb
cmpsb
xchg
scas
icebp
cli
mov
lahf
dec
mov
mov
aad
shr
fsubs
jl
xchg
inc
aam
jp
mov
push
dec
out
dec
or
mov
mov
cmp
adc
fsubrl
lret
int
pop
cmpb
je
in
add
inc
ror
outsb
es
xor
xor
clc
fldl
cmp
inc
jmp
iret
sbb
int
pop
push
pop
mov
aad
push
mov
jo
aam
hlt
mov
hlt
rol
sub
lret
push
inc
add
and
shll
add
std
lods
push
idiv
jmp
cmp
loopne
or
mov
pmulhuw
sub
test
stos
sbb
inc
jl
and
xchg
pop
cwtl
pushl
aam
hlt
dec
repz
mov
clc
rcl
pop
fbstp
or
movsb
ret
ss
cmp
testb
jp
int
xchg
dec
xorb
aad
sbb
js
mov
outsl
test
pop
ja
adc
jp
sub
mov
ficompl
test
lods
or
dec
add
cmp
subb
repnz
ja
sub
push
push
mul
push
fs
lock
aas
push
lret
mov
ret
js
adc
fs
xchg
int3
and
mov
shl
dec
fisubl
mov
jmp
adc
ret
stos
adc
adc
loope
ret
pop
js
sahf
aaa
jae
out
mov
xchg
and
adc
add
push
out
pop
push
xchg
sub
lock
test
pop
xor
sub
mov
and
lea
jge
add
je
iret
mov
pop
arpl
les
imul
out
sub
or
sbb
and
add
adc
mov
inc
jp
xchg
jle
sbb
jg
cmp
sbb
and
sub
mov
dec
xchg
rcrl
push
adc
push
ret
mov
or
insb
xor
cltd
and
push
and
xorl
push
cmp
pop
sbb
xor
push
ja
das
imul
xchg
cmp
jmp
lea
mov
inc
test
iret
jmp
cmp
xchg
and
xchg
nop
xor
lahf
es
and
pop
popf
repnz
mov
sarb
mov
ja
call
push
mov
jmp
std
mov
icebp
pop
stos
mov
cwtl
cmp
js
push
mov
jnp
and
add
jo
lret
xchg
stos
ret
adc
add
pop
push
inc
xor
and
pop
or
jo
sub
mov
jmp
cmc
add
inc
test
jecxz
jbe
pop
pusha
ffreep
xor
outsb
daa
jno
aad
dec
loopne
outsl
repnz
hlt
mov
das
dec
pusha
imul
xor
imul
cmp
mov
jns
stos
aam
inc
cs
dec
dec
enter
mov
or
ds
xchg
lret
inc
add
sbb
add
jo
cmp
cs
xor
pop
jmp
in
or
bound
lock
ret
ss
jns
jne
and
mov
mov
insl
addr16
jmp
nop
rcll
loopne
push
mov
les
adc
mov
jg
push
scas
jl
jl
mov
leave
jge
and
cmp
lret
dec
push
push
sbbb
lock
push
adc
dec
add
lret
cmc
pop
das
pop
sbb
mov
aas
aad
test
out
cmp
aaa
out
inc
inc
mov
bound
or
sub
adc
cs
push
lods
data16
mov
jae
add
add
je
cmp
hlt
sub
jg
popf
mov
int3
fldcw
xchg
dec
das
mov
jns
xchg
dec
aaa
out
mov
jo
in
pop
imul
fdivp
mov
inc
out
add
jg
popf
ret
les
inc
dec
sbb
andl
test
cmp
fcompl
mov
push
stos
js
or
mov
inc
push
call
or
gs
lret
adc
mov
stos
popa
rolb
bound
stos
int3
push
lods
outsb
daa
mov
popa
jmp
mov
cmp
aaa
add
mov
pushl
repnz
dec
inc
dec
icebp
pop
dec
adc
dec
push
sbb
mov
mov
jb
sub
xchg
and
jp
dec
jnp
out
inc
filds
mov
das
daa
ficompl
sahf
lahf
sub
cld
sub
fisttpll
loopne
add
mov
mov
or
or
mov
sub
fbld
or
and
lret
fwait
aad
push
iret
ds
mov
pop
loope
inc
out
decl
xchg
nop
jo
dec
xchg
cmpsb
push
shl
sbb
jl
leave
add
add
mov
mov
fsubrs
and
push
lret
gs
out
push
nop
and
adc
arpl
fnstenv
xor
jle
sbb
dec
adc
jecxz
sbb
push
push
es
hlt
mov
cmp
xchg
daa
xor
jmp
lahf
into
push
xchg
mov
testb
aam
push
xor
push
adc
mov
testl
pop
sub
ss
xchg
cmp
xor
mov
cmp
and
push
push
adcb
mov
pop
loop
sub
mov
or
jb
xor
dec
dec
pop
movsb
imul
hlt
out
jl
call
mov
into
mov
mov
adc
inc
scas
stos
sbb
cltd
out
jecxz
pop
sub
cmp
mov
mov
cmp
push
inc
mov
jp
and
movsl
int
lock
rorl
jp
test
movsb
adc
jge
jne
sbb
cmpsb
push
xor
cmpb
adc
and
xchg
pusha
dec
nopl
out
sbb
cwtl
mov
test
mov
in
cmp
hlt
mov
jns
inc
cmpsb
sahf
inc
pop
sub
pop
push
xchg
pusha
pop
adc
nop
and
in
jmp
inc
pushf
mov
sub
mov
insb
cmc
jmp
into
mov
lahf
push
jl
cmp
mov
adc
adc
sub
sbb
scas
mov
scas
xchg
jnp
dec
mov
test
add
and
push
das
pop
gs
mov
add
pop
or
fistpl
xchg
jg
outsl
cmpsl
jecxz
call
cmp
in
xchg
xorb
fsub
cli
pop
or
sub
mov
loope
push
fs
imul
mov
aam
cwtl
adc
mov
mov
mov
inc
mov
pop
xor
icebp
push
adc
xor
call
fs
sahf
and
jp
jmp
ds
sub
lahf
inc
dec
pop
loop
scas
std
mov
shll
imul
fdivl
pusha
mov
out
xchg
ja
lods
or
jns
fdivl
pop
mov
testl
mov
ret
push
xor
mov
in
and
cmp
cwtl
adc
clc
push
mov
adc
pop
repz
es
xchg
pop
in
inc
cwtl
repnz
imul
sbbl
mov
loopne
scas
dec
push
jecxz
inc
adc
jge
dec
ds
pop
repz
lds
push
xor
push
sbb
push
and
mov
and
lods
dec
jmp
test
pop
mov
sbb
and
and
add
push
and
or
dec
imul
jmp
xor
jecxz
cmpsb
out
pop
stc
outsb
movsl
fs
imul
lods
lea
clc
or
xchg
cmp
push
xor
xor
lods
mov
pushf
out
sub
daa
dec
notb
cmpsb
cltd
mov
arpl
inc
sahf
out
xchg
out
pop
dec
or
or
jl
mov
mov
stos
mov
loop
mov
scas
jns
iret
gs
sub
pop
pop
sbbl
sar
pop
sti
lahf
push
nop
jae
sbb
push
icebp
cmp
testb
fwait
xor
add
pop
xchg
push
cmpb
iret
ret
out
xchg
mov
iret
insl
fcomps
daa
cmpsl
jne
aas
dec
sti
std
cmc
inc
je
cmp
sbb
push
jns
call
dec
mov
sbb
mov
js
aad
push
pop
pop
mov
lahf
cmpsl
int
popa
negl
mov
push
mov
rorl
inc
cmp
mov
jo
jge
xchg
clc
test
pop
dec
ret
xchg
decl
or
int3
sbb
adc
adc
push
push
jle
xchg
scas
xor
push
adc
inc
mull
or
clc
adc
popf
sub
jle
cltd
mov
outsb
adc
dec
mov
adc
add
out
xchg
movsl
fidivl
subl
testl
fucomp
imul
or
pushf
push
pop
xor
cmpsl
mov
xor
inc
mov
sar
push
mov
sub
sub
lock
xchg
pop
xchg
movsb
movsb
xchg
les
xchg
mov
add
cmp
fstps
test
and
jge
arpl
addr16
push
xor
xchg
adc
imul
jnp
push
mov
adc
jae
movsb
test
inc
inc
mov
test
mov
push
fcompp
jg
std
fwait
pop
xchg
jmp
jae
cmpsl
push
int3
sbb
jecxz
push
lds
sti
fwait
inc
test
shll
mov
call
push
mov
shrb
or
sarb
sbb
outsb
sub
mov
ljmp
lods
outsl
in
cs
mov
mov
daa
jp
sbb
je
icebp
jmp
je
clc
js
loopne
ljmp
outsl
mov
jns
js
fisubrs
pop
fstps
and
out
aam
in
sub
test
addr16
xchg
repnz
sbb
mov
popf
popa
ror
in
movsb
lcall
dec
sti
fists
jbe
mov
sbb
fnstcw
stc
add
andl
test
int
jb
add
lahf
add
xor
and
testb
decb
jle
push
fisubrs
pop
xor
jmp
sbb
sbb
push
adc
mov
add
adc
int
xchg
addb
lea
jmp
addr16
mov
cld
jg
fwait
pusha
push
int
jl
scas
sbb
das
test
std
das
dec
notb
cmp
bound
in
mov
add
dec
dec
out
fs
into
fwait
dec
loopne
mov
push
fsts
mov
inc
pop
xor
dec
inc
and
insb
repz
pop
jo
xor
std
push
push
sbb
mov
cmpsl
inc
ss
mov
test
in
aam
fsts
repnz
mov
stc
mov
adc
mov
into
xchg
fsubs
xor
popa
jo
fwait
xor
inc
cmp
and
or
in
mov
roll
loopne
js
mov
xor
cmpsl
xor
push
dec
mov
cwtl
arpl
iret
cmp
incb
mov
inc
dec
xor
cmp
hlt
and
fld
popl
aaa
dec
mov
jl
jne
inc
popa
in
push
gs
push
dec
jo
xchg
mov
dec
es
aaa
sub
cmp
nop
push
into
clc
sub
or
jb
in
incl
adc
leave
mov
and
cmp
jbe
mov
xor
xor
inc
adc
je
xchg
mov
cmpl
sbb
push
jmp
pop
xor
dec
lahf
test
jmp
pop
bound
in
add
xchg
or
ret
and
icebp
sbb
shrb
sub
adc
mov
mov
and
fninit
dec
xor
leave
or
cmpsl
mov
jge
jg
mov
dec
pop
test
pop
or
and
pop
push
arpl
xor
push
adcl
mov
jg
xchg
shlb
push
int3
sahf
out
mov
addr16
lods
negl
xchg
nop
pop
xchg
cs
xabort
shl
je
mov
xchg
imul
push
enterw
cmpsb
fwait
loope
sahf
aam
jl
jl
movsl
xchg
xor
das
push
ljmp
mov
imul
xchg
lret
and
adc
jl
fistl
cmp
or
xorb
push
sub
cmc
adc
mov
repnz
ss
fmuls
and
inc
xchg
orl
push
mov
je
fildll
ss
sti
adc
sbb
loop
inc
inc
pop
stc
xor
mov
cmpb
jge
push
push
sub
jmp
or
adc
xchg
pusha
mov
out
scas
add
jecxz
mov
dec
or
repz
pushf
in
push
nop
xchg
jecxz
test
call
dec
add
push
fcom
stc
mov
iret
test
and
rolb
mov
outsb
and
mov
repnz
pop
adc
stc
test
out
inc
movsl
dec
aam
movsl
nop
adc
rcll
xchg
cmp
inc
pushf
push
out
mov
dec
shrl
repz
and
leave
daa
add
sbb
sub
popa
mov
or
adc
push
nop
orl
adc
cmc
sub
imul
jge
mov
jle
fmull
or
lret
out
iret
cmp
cld
add
dec
cmpsl
fldt
sub
cmovno
xchg
adc
mov
sub
add
or
jne
mov
cmc
mov
jae
add
or
sub
or
lock
push
sbb
add
cmp
lahf
lds
addr16
dec
xchg
and
and
inc
rep
push
cmp
test
push
outsb
mov
pushf
mov
xchg
std
or
ret
sub
xor
and
mov
or
call
lods
push
aaa
loop
test
inc
adc
xchg
cmpsl
fnstsw
andl
sub
xor
jnp
andl
out
test
xchg
pop
mov
lret
fists
ljmp
pop
push
pop
cwtl
jmp
mov
mov
lock
inc
cmp
loop
add
bound
push
bound
xlat
cmpsl
cmp
sbb
jne
scas
jle
xchg
jbe
and
ret
and
icebp
jge
rcrl
mov
xor
cmp
inc
xchg
add
jmp
or
sub
cmp
addr16
iret
mov
xlat
aas
jg
push
hlt
mov
dec
enter
cwtl
dec
enter
cmpl
lcall
mov
pop
push
add
insl
and
leave
sub
fisttps
and
hlt
xchg
orl
lods
cmpsl
outsl
mov
loopne
or
iret
inc
and
in
cld
icebp
sbb
inc
aas
mov
insb
in
lock
xchg
loopne
sbb
mov
movl
jne
lcall
pop
mov
mov
or
insl
les
add
cmpsb
aaa
cmp
ret
test
sbbl
push
pusha
daa
inc
and
sti
push
mov
lcall
mov
pop
repnz
pop
sti
aam
sub
leave
or
mov
aam
sbb
push
ja
mov
notb
push
test
pop
fucom
or
dec
jl
aad
mov
adc
popf
orl
cmp
std
mov
push
adc
aam
out
rcrl
pop
xor
loop
lea
dec
add
shlb
arpl
cmpsl
data16
sub
out
pop
inc
stos
mov
mov
lds
mov
lcall
shl
scas
loopne
inc
sbb
ljmp
mov
push
inc
push
ds
xchg
in
adc
dec
pop
aas
mov
push
mov
rcr
mov
popl
rcrb
lea
or
fidivl
xchg
inc
in
insl
cmp
adc
outsl
adc
xor
mov
or
xchg
es
adcl
mov
push
aas
int3
adc
jne
lcall
cmpl
cmpsb
cltd
sbbb
lods
cld
adc
xchg
test
inc
mov
xchg
jns
call
rcll
rolb
arpl
lea
sbb
mov
mov
mov
out
jns
fstpt
inc
sub
lock
jge
mull
mov
adc
pop
xchg
adc
faddp
mov
cs
ds
xchg
jns
in
xchg
lahf
imul
push
stc
dec
lods
sahf
cmp
bound
loop
jp
cmpsl
mov
cmp
xchg
mov
xor
ret
aam
test
xor
xchg
sbb
clc
mov
or
add
pop
sbb
loop
mov
jae
in
std
popf
insb
adc
pop
rorb
jno
movaps
mov
pop
adc
mov
test
shl
loop
mov
iret
sbb
mov
rcrb
adc
gs
nop
stc
push
mov
cmpsl
int
lret
pusha
xor
push
adc
stos
pop
cwtl
rclb
mov
mov
shrl
js
pop
ds
mul
cmpsl
ret
out
aad
mov
xor
mov
stc
xchg
xlat
insl
and
jb
adc
sahf
dec
lds
push
rcr
mov
pusha
mov
movsb
pop
mov
outsl
inc
xor
and
xchg
lods
and
outsb
push
jne
aam
bound
inc
leave
js
mov
adc
iret
shr
sti
jle
add
jbe
cli
out
ljmp
dec
ds
data16
call
dec
push
mov
adc
imul
inc
in
jge
addb
addr16
mov
ds
pusha
cmp
mov
mov
in
hlt
push
lret
lret
xchg
movsl
push
dec
adc
mov
push
bnd
sbb
lcall
cltd
and
mov
xchg
add
push
stos
xlat
dec
adc
in
inc
scas
testl
or
mov
cltd
pop
cmp
and
divb
ss
scas
mov
and
iret
cmpsl
dec
aaa
sbb
fsub
jg
notb
pushf
jb
imul
push
and
sub
in
xchg
or
arpl
jl
push
mov
shrl
insb
in
cltd
push
add
scas
mov
loopne
test
pop
cltd
mov
fmull
or
mov
and
mov
lock
xlat
mov
and
jg
jp
inc
mov
mov
in
sbb
pop
addr16
mov
pop
insl
mov
mov
or
xchg
mov
hlt
dec
push
mov
jle
inc
out
inc
leave
sub
stos
out
insl
inc
push
dec
repnz
dec
push
fidivs
jae
and
frstor
sbb
xchg
int3
into
jae
add
mov
mov
test
add
sub
push
imul
cmp
sub
imul
dec
add
jne
lods
or
out
adc
aaa
xchg
pop
in
xchg
xchg
adc
add
shll
jp
jnp
mov
ficompl
pop
inc
popa
jmp
arpl
adc
call
stc
comiss
adc
add
addl
push
dec
dec
cltd
stos
cmp
iret
andb
add
xor
mov
xchg
dec
rcrl
mov
cmc
push
jmp
dec
lock
sub
in
pusha
loope
subl
push
mov
bound
inc
lret
inc
stc
xlat
sbb
shrl
push
mov
cmp
lods
iret
fwait
in
pop
mov
arpl
mov
xchg
f2xm1
or
adc
inc
adc
std
cmpsb
and
sub
test
push
into
test
es
es
inc
inc
mov
js
mov
and
fsubrp
jecxz
aad
and
jno
imul
pop
test
enter
gs
das
jae,pt
out
test
or
mov
addb
ret
jg
cmp
pop
out
adc
and
pop
and
jge
ret
lahf
mov
push
ja
xor
add
pop
stos
lahf
lahf
jae
mov
cmp
lahf
movsl
add
xchg
xchg
movsl
outsl
mov
icebp
mov
add
pop
cmpsb
outsl
les
xchg
js
movsb
add
pusha
shl
sub
fnstenv
cmp
leave
pop
or
mov
lods
mov
outsb
sbb
clc
xorl
add
cmp
shl
int3
daa
mov
in
push
ljmp
sub
das
movsl
or
out
cld
cmp
inc
ret
loope
mov
push
sahf
out
sbb
leave
aad
loopne
xor
and
cmpsb
xor
int
jg
fisubl
adcb
jns
jecxz
js
mov
inc
pop
push
pop
mov
data16
int3
lret
fmul
scas
std
loop
loope
dec
testl
lcall
xchg
xchg
adc
mov
and
cmpsb
push
dec
inc
movsl
push
pop
cmpb
shrl
xor
or
cmp
dec
sub
int3
in
lcall
rclb
scas
xlat
xor
cltd
daa
mov
mov
fwait
mov
dec
repz
data16
adcl
sar
hlt
xor
iret
rorb
inc
stc
fwait
mov
and
in
xor
sbb
sub
cltd
fucomi
mov
push
mov
test
push
movsl
add
push
pop
mov
aaa
roll
push
lods
add
pop
push
sub
xchg
hlt
movsb
data16
cltd
or
pop
dec
mov
add
or
shrl
fidivrl
cs
cli
and
jae
sub
gs
mov
pop
dec
enter
mov
fiaddl
mov
jmp
mov
hlt
and
andb
add
orl
adc
in
lret
jae
in
daa
popl
cmp
aad
push
js
leave
jo
xchg
and
mov
lock
cmp
repz
xor
add
jns
and
clc
push
lods
sub
lds
mov
lea
dec
mov
add
jp
pop
and
sbb
mov
pop
push
pusha
dec
and
call
fwait
add
fsubs
dec
push
sti
popf
daa
xchg
mov
mov
sbb
push
pop
or
pop
xor
push
call
stos
pop
or
lcall
cmp
int
in
ret
xchg
inc
punpcklbw
sub
in
cmc
mov
inc
test
mov
lock
jge
mov
push
sub
les
into
inc
push
out
outsl
insl
rcrl
add
test
insb
pop
clc
xor
sub
pop
jmp
inc
push
jb
out
add
fcomps
xchg
dec
xchg
inc
add
out
push
jp
xor
jne
cmp
mov
jb
or
lods
sbb
dec
loop
iret
xor
fisubrs
mov
arpl
jle
xchg
movsl
test
stc
jne
add
test
pusha
adc
scas
fcmovnbe
imul
js
push
sub
inc
sbb
cmc
nop
mov
adc
aam
in
lret
iret
pop
adc
pop
xchg
push
in
enter
jo
mov
mov
shl
repz
out
mov
in
add
hlt
out
mov
pushf
inc
adc
push
jno
sbb
fs
enter
aas
sbb
mov
push
shll
mov
mov
out
lock
std
jge
loop
lds
movsl
ret
movsl
fidivrl
sbb
fisttpl
mov
jno
shlb
inc
aad
sub
out
push
and
xor
mov
mov
imul
rcrl
inc
mov
imul
int3
dec
xchg
fisttps
ljmp
scas
sub
lret
popf
hlt
pop
fcomi
mov
faddp
ljmp
inc
sub
adc
add
mov
fdivl
xchg
stc
fcomps
dec
in
pop
xor
icebp
jmp
xor
and
in
dec
or
jmp
pushf
sub
push
loop
shl
add
nop
jmp
cmp
fistl
mov
sbb
xchg
mov
jne
jle
fs
popa
je
ds
out
shr
stos
cmc
sub
clc
mov
out
lea
push
lahf
ret
pop
rclb
dec
inc
cmp
cmpsl
push
jl
movsl
lcall
mov
fs
sbb
mov
int
sub
pushf
loope
adc
push
dec
hlt
cwtl
and
xor
fdivrp
or
lret
pop
jecxz
repnz
fwait
clc
pusha
aaa
outsb
jg
stos
pop
sbb
mov
icebp
xchg
lds
dec
dec
xchg
fldt
push
and
xor
sbbl
test
loope
mov
add
mov
sub
xchg
pop
and
jge
xor
inc
pop
cs
or
inc
fistpll
or
jns
sbb
enter
lret
aam
ljmp
test
push
daa
mov
pop
sbbb
imul
dec
or
push
cwtl
bound
dec
fisubs
mov
fidivrl
aad
aaa
push
arpl
pusha
rcll
mov
cltd
lds
lret
pop
fwait
xchg
hlt
shlb
ss
add
xor
xor
add
cwtl
shll
push
cmpsl
cmp
outsb
lret
into
aaa
jno
push
sub
jp
icebp
sbb
gs
stc
jp
mov
adc
jne
push
inc
lods
dec
sbb
and
mov
icebp
pusha
and
cmpsb
testl
xchg
cmp
sub
test
hlt
push
jle
hlt
xchg
adc
idiv
mov
enter
push
add
lret
dec
shlb
bndldx
mov
pop
mov
imul
lods
push
dec
loope,pt
cwtl
insb
mov
outsl
jp
sarb
push
xlat
inc
nop
mov
add
test
call
mov
jg
inc
mov
shlb
mov
lods
stc
xor
cli
cmp
pop
popa
jb
mov
sub
sub
fstp
or
xor
sub
sub
lret
mov
xlat
orb
in
inc
in
dec
adc
and
dec
jg
mov
pop
adc
ss
test
nop
cs
xor
pop
and
fmul
fisubl
add
pushf
jle
ret
movsb
arpl
jo
or
xchg
cmc
repz
iret
pop
dec
and
dec
push
jno
dec
fidivrl
test
orl
mov
pop
inc
imul
push
cwtl
mul
std
pop
push
flds
push
mov
adc
test
data16
mov
les
sub
cmpb
das
or
mov
lods
fisubrl
incb
dec
xchg
mov
pop
test
lcall
mov
adc
movl
push
in
cmpsb
shll
mov
mov
fnstsw
icebp
in
lods
aam
aad
cmc
fs
mov
fsubs
lock
sbb
fistpll
out
mov
xchg
out
jb
pop
mov
xchg
mov
jb
daa
cli
mov
xchg
and
mov
xlat
test
pop
aam
outsb
xchg
jl
push
mov
inc
repnz
or
fbld
sbb
cmpsb
cmp
int3
aas
mov
xchg
mov
int
cwtl
mov
lcall
xor
fsubrs
add
das
pop
inc
hlt
stos
stos
sub
ficomps
jge
dec
out
in
or
fisubl
mov
mov
into
lret
adc
pop
adc
or
xchg
aad
icebp
dec
loopne
lds
dec
sbb
andb
ljmp
mov
popf
negl
xor
lret
iret
or
pop
sub
xchg
sti
sub
leave
stos
xchg
out
test
mov
repnz
push
pushf
mov
jle
cwtl
fdivl
outsb
clc
int3
mov
mov
xadd
mov
mov
insb
jbe
xchg
mov
sbb
push
fdiv
sub
insl
into
scas
pop
push
mov
dec
jne
not
movsb
cltd
les
dec
add
and
or
inc
pop
or
imul
pop
sub
fcoms
pusha
push
lcall
data16
dec
fdivrp
mov
and
push
ret
cmp
dec
jp
add
pop
and
cmp
sbb
ss
push
sub
test
outsl
imul
xor
xchg
add
lahf
insb
ret
jne
xchg
push
mov
ret
lcall
and
fsubrl
mov
xchg
mov
movl
nop
pop
sbb
and
xor
lcall
xchg
add
xor
in
jnp
add
enter
gs
gs
mov
dec
lcall
mov
test
lret
mov
jmp
clc
dec
daa
add
push
cmp
loope
je
daa
sbb
push
imul
mov
mov
push
test
clc
sbb
cmp
and
mov
mov
mov
testb
lds
decl
sbb
popa
jo
mov
hlt
outsb
jge
arpl
push
jb
sub
pop
ljmp
jl
jecxz
ds
and
pop
les
imul
icebp
movsl
pop
jecxz
push
lret
rcrl
pop
ret
mov
movsb
int
aaa
int
cmp
sub
mov
stc
push
andb
dec
ret
fnsave
aaa
aam
jl
xor
test
scas
jp
fists
movsl
fwait
mov
push
cli
leave
cld
push
mov
les
cli
test
out
sbb
cli
adc
add
push
das
pop
sbb
outsl
adc
jb,pt
ss
stos
int
add
and
fdiv
mov
fsubs
ja
dec
popa
mov
clc
push
adcl
repnz
push
sbb
into
pusha
les
push
add
aaa
fwait
mov
push
jns
in
pop
es
adc
dec
push
mov
mov
loopne
pusha
movb
mov
sub
inc
ret
or
cmp
jmp
xor
inc
js
ds
xlat
ret
scas
inc
lcall
cmp
lods
pop
inc
jb
test
push
mov
cmp
push
mov
out
ja
jns
scas
insl
adc
fnstenv
jecxz
and
dec
push
test
aaa
in
rcr
in
sti
insb
lret
imul
cltd
mov
push
cs
cmp
add
xchg
cwtl
lods
jne
lock
fcomps
fcoms
mov
das
sub
xchg
insb
insb
dec
sarb
sbb
push
ja
insb
mov
lcall
out
inc
lods
push
push
imul
mov
push
pop
adc
or
add
cmp
clc
out
iret
int
aaa
js
je
lds
inc
sub
or
mov
fsubl
cld
fisubl
jo
jg
push
fwait
cmp
ret
xlat
les
mov
or
push
in
cmpsl
sub
ds
lods
or
pusha
mov
leave
mov
hlt
mov
dec
jge
xchg
sub
ds
adc
cmp
or
mov
test
int
inc
in
popf
push
sahf
mov
leave
testb
and
mov
pop
sti
insb
cld
inc
mov
out
xchg
scas
mov
lock
inc
fwait
aas
lcall
das
fdivrl
sub
je
fwait
sbb
call
in
cmp
cli
loop
sbb
int3
jmp
xchg
cld
mov
and
cltd
pop
gs
flds
push
fnstenv
cmpb
fcompl
subl
lock
out
mov
int
les
xlat
push
mov
clc
jmp
dec
xor
test
jecxz
in
pop
pop
inc
mov
imul
shlb
fisubrs
arpl
ss
or
pop
pop
fdivrp
lods
or
fidivl
jne
mov
ja
pusha
rcl
cmp
rcrl
sbb
scas
popa
and
xor
mov
push
mov
xchg
aam
sarb
xchg
xchg
idiv
push
inc
xor
das
xor
dec
adc
orb
cmp
test
sbb
nop
inc
xchg
push
sbb
jne
test
mov
jb
adc
cmp
inc
ficoms
dec
sub
pop
and
mov
jo
jmp
ret
or
add
loope
or
inc
mov
and
mov
inc
jmp
cltd
sub
scas
ffreep
mov
sarb
sbb
or
add
in
mov
inc
push
pop
insb
xor
xchg
inc
adc
in
shrl
dec
mov
cmpsb
sbb
mov
add
repnz
les
sbb
sbb
test
mov
xlat
in
add
frstor
lea
sti
aaa
push
xchg
jmp
nop
aam
jbe
fabs
int3
and
fs
dec
or
add
mov
or
js
aaa
cmp
mov
mov
pop
subb
xchg
add
push
and
mov
jae
and
mov
and
pushf
outsb
mov
inc
cli
mov
dec
pop
je
sub
in
jg
lods
lcall
push
push
in
sub
mov
or
movsb
and
add
mov
adc
popf
ret
mov
adc
jle
stos
cmc
jmp
ret
imul
jecxz
mov
xor
imul
daa
jo
ss
addr16
mov
pop
jmp
out
cwtl
sub
xchg
jns
sbb
call
sub
push
push
jp
mov
mov
push
pop
sbb
test
ss
add
and
aaa
inc
outsb
jecxz
add
mov
xchg
loopne
sbb
adc
inc
mov
lret
and
ficomps
pop
js
sub
adc
lea
xchg
iret
ss
mov
jl
inc
out
cmc
mov
xor
mov
cmp
test
test
or
jl
imul
fs
add
and
xchg
sbb
or
mov
sbb
ret
rcrl
andl
lret
xchg
andb
cwtl
jmp
loopne
stos
dec
mov
stc
adc
std
stos
sbb
mov
pop
sbb
add
in
sbb
cli
imul
shlb
pushf
adc
sub
daa
adc
into
shll
add
sbb
stos
and
lahf
sub
mov
sub
sub
call
arpl
mov
lret
and
in
add
cld
push
add
pop
fadds
sub
mov
push
jb,pt
sub
mov
push
jle
popa
insb
and
inc
pop
std
sub
inc
imul
popa
sbb
pusha
inc
je
mov
push
in
lcall
or
push
cmp
fwait
cmp
ds
inc
mov
xchg
sub
in
push
cmp
sarb
je
mov
jns
push
xchg
mov
dec
shlb
fstl
stos
xor
inc
sbb
inc
xchg
fwait
daa
sbb
mov
inc
dec
jno
jp
lods
lods
add
push
lcall
imulb
mov
fcmovnbe
stos
push
xor
arpl
jp
cmp
push
pop
fs
inc
std
jl
ja
std
test
cld
jg
mov
icebp
jae
fcoml
outsl
cmpsl
aaa
mov
call
mov
xchg
sahf
xchg
inc
imul
push
int3
sub
adc
push
push
mov
cli
inc
pushf
lods
mov
xchg
dec
std
jbe
dec
outsb
aas
fadds
jmp
arpl
stos
or
movsb
and
mov
inc
mov
xchg
pushf
mov
ss
sub
push
jns
mov
cmp
leave
insb
imul
jge
loop
jecxz
xlat
andb
mov
faddl
cmovno
dec
mov
xchg
enter
or
sub
mov
xor
jge
mov
jb
inc
cmp
ficoms
in
stos
or
lahf
test
mov
jne
dec
mov
jae
cs
push
or
jl
sub
cli
xor
mov
inc
into
shrl
jmp
movsl
mov
fwait
stc
xor
pop
jns
out
push
lahf
test
ljmp
int3
or
subl
adc
test
rorl
xor
roll
or
xor
dec
ss
sbb
fisttpl
data16
imul
and
pop
subb
xor
dec
roll
mov
cmpsl
mov
faddl
and
jne
aam
cmp
out
sbb
xchg
cmc
je
ds
fs
aad
movl
sub
loope
bound
xchg
js
dec
inc
nop
jbe
sbb
ret
jne
dec
jb
outsb
adcb
sbb
mov
mov
push
loop
arpl
and
in
dec
mov
inc
test
sbb
call
notb
cmp
test
out
pop
mov
sbb
sbb
add
js
mov
out
add
test
in
cmpsb
mov
inc
jg
fcoms
loope
lods
lret
into
aad
in
push
cmp
mov
dec
aad
pop
outsb
mov
push
out
addr16
or
loope
std
cmpb
add
rol
mov
ror
out
fnsave
lods
sti
mov
test
out
mov
aam
por
lock
sbb
lods
leave
fdivp
aam
add
dec
jb
jp
pop
mov
adc
out
mov
dec
mov
pop
pop
arpl
arpl
outsb
shlb
ja
stc
add
and
mov
lret
xor
sub
cs
fstps
pop
and
decb
jo
test
sbb
inc
jno
fadds
push
shlb
vpsubusb
xchg
push
pushf
cwtl
jmp
push
dec
xchg
cltd
lods
insb
mov
sub
sbb
pop
push
pop
mov
sbb
fiaddl
xlat
and
lcall
push
xchg
jp
sti
mov
inc
xchg
adc
movsl
xor
pushf
out
test
pusha
adc
cli
inc
repz
lods
lcall
inc
mov
popf
xor
lcall
jp
cmp
dec
mov
sub
pop
jp
cmp
mov
lods
dec
xor
fcompl
mov
test
ficoms
dec
inc
pop
and
in
sbb
sti
cmpsl
test
out
ds
sub
xchg
jae
pusha
imul
mov
sti
into
mov
mov
and
xor
imul
xlat
repz
popa
in
sti
add
pop
out
dec
jecxz
sbb
fwait
nop
frstor
cmp
out
dec
cmp
nop
loop
enter
mov
scas
arpl
sbb
int3
insb
sbb
js
test
aad
mov
jbe
gs
inc
push
imul
push
lret
cmp
pushf
cvtps2pd
xchg
jl
sbb
pop
mov
lahf
adc
mov
pop
mov
and
out
lods
inc
lcall
inc
sbb
fistpll
and
decb
mov
adc
outsb
fdiv
xchg
test
sub
out
bound
jle
loopne
in
fldcw
dec
bound
in
in
jge
test
mov
repnz
push
lock
mov
stos
setb
enter
jo
jp
sbb
out
sub
inc
and
in
call
jb
scas
push
mov
ds
mov
sahf
daa
stos
cld
mov
sti
adc
jg
push
xchg
push
arpl
fldl
mov
add
mov
inc
or
dec
push
test
rcrb
xchg
xchg
add
icebp
and
jp
pop
dec
cli
push
or
mov
mov
add
sub
je
mov
test
pop
jbe
dec
pop
aaa
cld
sbb
add
sub
insb
add
movsb
add
fimuls
mov
xor
xchg
lret
jge
pop
pop
into
jb
inc
cmp
xchg
je
cs
movsl
mov
and
or
sbb
adc
lcall
sub
gs
pop
fs
mov
insl
out
xchg
jno
mov
jb
inc
xor
sti
push
jp
xabort
aad
jne
fstpt
pop
clc
mul
push
int3
outsl
aad
outsb
fsub
push
sbbl
stc
push
pop
fldl
mov
mov
test
xor
sub
jge
into
add
icebp
movhps
adc
jbe
inc
fnsave
test
jg
inc
xchg
and
fldenv
push
sub
sarb
mov
fcom
cmp
nop
jmp
enter
jne
pop
shrb
jbe
mov
clc
and
ja
lea
popa
das
sbb
dec
sub
out
mov
stos
pop
fidivrs
push
sbb
push
xchg
or
and
lods
xchg
mov
and
shrl
lret
addb
fcmovnb
popf
lock
mov
xchg
testl
movsl
scas
xchg
mov
fidivrs
add
sbb
lods
aad
xlat
cs
mov
jge
xchg
aas
fwait
sti
mov
xor
or
test
dec
lea
xorb
xchg
test
shlb
xchg
aas
mull
add
scas
sub
sbbl
fchs
mov
mov
jl
inc
jmp
xchg
inc
dec
mov
jmp
negb
dec
shlb
inc
dec
std
jp
div
loop
dec
adc
shlb
jl
and
out
rcll
sbb
stos
mov
and
xchg
inc
pop
sbb
cmp
sub
bound
mov
lcall
push
mov
push
push
and
int3
xlat
xor
fdivl
aaa
test
fdivs
enter
xchg
shll
notb
xor
les
ret
lock
fisttpll
cmp
shlb
shrl
cwtl
loope
fs
sbb
cmp
inc
stc
pop
mov
mov
jo
cwtl
mov
xlat
xchg
ss
std
popa
mov
or
mov
and
push
cmpsb
xchg
jmp
cmpsl
nop
sub
das
sarb
jp
out
rolb
bound
pushw
mov
mov
jl
pop
mov
mov
pop
test
mov
or
xchg
or
je
cmp
cmp
xchg
or
pop
push
sub
cmp
add
sub
and
or
pop
xor
push
cmp
push
adc
pop
push
mov
call
adc
fbstp
shl
cmp
and
pop
jb
push
xor
push
movsb
sub
leave
fwait
lods
or
adc
or
push
ja
shrb
fsubp
clc
xor
data16
mov
mov
scas
adcb
xor
in
stos
jae
daa
pop
pop
jecxz
mov
jns
popa
or
stc
push
popf
mov
cmp
repz
adc
clc
loope
out
inc
fxtract
imulb
jne
dec
cltd
lea
and
ljmp
add
enter
ljmp
aam
insb
add
lods
lahf
imul
fnstsw
aaa
popf
jns
sbb
packsswb
push
int
inc
mov
pop
push
or
imul
rcrl
leave
rorl
mov
mov
lock
sub
mov
xor
push
cmp
aad
mov
loopne
dec
lahf
sub
adc
dec
ljmp
jp
mov
or
and
jb
fildl
pop
xchg
pop
hlt
movl
add
sarl
jge
repnz
inc
add
lahf
xchg
or
cmp
bound
xchg
push
pop
jle
pop
or
sbb
aas
testl
mov
mov
and
and
sbb
jecxz
inc
add
cld
mov
or
ja
and
push
and
sub
fwait
push
ficompl
sarl
clc
icebp
adc
hlt
jecxz
and
jge
cmp
jne
inc
lock
bound
test
rcrb
lods
xor
inc
outsb
into
addr16
push
push
sbb
sub
loope
adc
push
test
aam
notl
inc
mov
fcomp
pushf
xor
pop
push
pop
in
mov
xor
divb
cld
dec
cmp
sub
xchg
iret
and
in
jnp
repnz
nop
jnp
push
cmc
jp
dec
dec
inc
pop
stos
scas
or
push
pop
pop
call
sbbl
jmp
mov
cmp
sbb
outsb
sub
xchg
and
cmpsl
sub
negb
inc
jo
or
xor
jle
sub
push
jb
sub
inc
cmp
out
loop
and
repnz
mov
jge
sbb
and
or
sub
add
mov
mov
mov
call
jae
or
dec
cmp
es
jbe
sub
shr
pop
push
daa
roll
out
das
jp
dec
xor
push
push
pop
and
fcmove
bound
daa
sarl
lahf
fucom
adcb
dec
pushf
outsl
dec
mov
clc
lock
scas
ret
cwtl
adc
aad
fwait
xchg
popa
push
add
incb
sbb
out
cs
shrb
aaa
scas
notb
mov
and
testl
out
lods
popf
test
loope
cmpsb
rorb
sbb
jo
leave
fisttps
dec
add
mov
push
gs
push
xchg
sub
jmp
fidivrl
dec
mov
scas
or
repz
xor
push
cli
std
daa
push
jmp
lods
rorl
lds
cli
sub
xor
rcrb
sbb
push
mov
push
lea
daa
mov
fistpll
stos
push
outsb
adc
out
test
dec
ret
lret
rcll
or
pop
fistpl
push
sbb
cs
scas
decb
jecxz
rolb
rcll
scas
xchg
dec
arpl
inc
push
and
sbb
in
lret
jns
sub
mov
insl
pop
ja
xchg
fnsave
jne
adc
add
push
ss
cs
jmp
mov
push
xchg
mov
nop
outsl
stc
push
xor
pop
lods
add
mov
iret
mov
shlb
or
mov
test
lea
dec
cmpsl
bnd
nop
push
sub
cmp
inc
xor
add
adc
sahf
mov
movsb
loope
stc
addr16
gs
sbb
test
and
adc
cmp
fadd
and
cmp
out
es
jb
fisubrs
push
jnp
xchg
test
jb
lret
pop
jbe
popa
adc
and
xlat
inc
xchg
clc
lods
mov
mov
push
add
mov
sbb
add
xchg
in
mov
pop
pop
xchg
add
or
dec
pushf
hlt
mov
clc
pop
in
jns
jmp
xchg
cli
cs
in
mov
inc
cld
xor
or
loop
out
xor
movsb
cmp
mov
fstl
adc
cmp
into
mov
call
test
loope
cltd
mov
jmp
sub
icebp
inc
pusha
icebp
or
aas
mulb
sti
cvtdq2ps
test
rorl
ljmp
mov
sbb
pop
adc
add
dec
xchg
int
mov
pop
add
push
mov
dec
sbb
mov
es
add
xlat
jns
loop
jno
int3
stos
imul
jns
bound
xchg
sti
lds
test
repnz
lcall
out
pop
je
out
lret
xor
fdivs
pop
pop
stc
jnp
push
push
inc
movsb
cltd
hlt
cmpsl
mov
xchg
lock
dec
sbb
mov
adc
pushl
mov
mov
insb
cltd
iret
adc
hlt
cmpsl
movsl
test
orb
ret
or
push
sub
int
pop
or
dec
mov
arpl
imul
xor
cmp
jbe
jbe
mov
sbb
xchg
add
push
xchg
hlt
adc
testb
xor
pop
or
jge
or
nop
mov
sti
rolb
arpl
mov
adc
mov
xor
popa
pop
xchg
cmp
out
int
ss
mov
cmpsb
adc
pop
xor
push
cltd
jnp
bswap
shlb
adcb
inc
add
rcll
add
xor
mov
lods
lods
jle
mov
imul
jmp
and
fwait
out
xchg
xchg
enter
repnz
in
icebp
cmp
pop
and
cmpl
push
inc
mov
loopne
pop
lods
jle
stos
out
rcrb
cwtl
jne
imul
loopne
jp
pop
or
inc
js
dec
adc
jne
cmovle
fwait
jmp
sbb
mov
in
dec
mov
or
fistpll
xchg
loope
lock
mov
push
decl
jle
out
mov
pop
pop
int3
mov
out
mov
bnd
push
cmp
and
arpl
adc
test
jl
xor
add
jae
stos
aas
cmp
or
xchg
mov
mov
in
ljmp
adc
mov
rorl
sub
dec
loopne
add
leave
divl
in
js
andb
push
cmp
add
fsts
mov
iret
jno,pn
sahf
shlb
das
in
cld
rcrl
xor
or
or
outsb
shll
adc
loopne
dec
pushf
test
std
cwtl
dec
testb
lret
outsb
sub
loope
push
mov
xchg
adcb
add
ds
sbb
and
ja
inc
cmpsb
fiadds
sti
andl
shl
inc
pop
push
js
loop
mov
or
mov
fwait
add
mov
push
jo
lea
push
insb
mov
jae
mov
nop
outsl
lods
addr16
jmp
inc
jno
fbstp
test
pop
mov
sbb
fcompl
jns
or
je
fmuls
xlat
and
sub
mov
jns
pop
out
pop
push
hlt
scas
push
orb
test
subl
decb
add
and
push
jo
push
push
mov
push
xchg
pop
jle
idivb
mov
mov
repnz
dec
dec
dec
cmp
orb
insl
sti
inc
inc
mov
inc
xor
ja
test
fisttps
xorl
adc
orb
inc
inc
cmp
jbe
lahf
fnop
xchg
or
push
icebp
and
fdivs
aas
fadds
nop
in
dec
push
dec
ficompl
les
or
cmp
add
insb
add
sbb
mov
in
sar
push
shlb
cwtl
nop
inc
notl
cld
out
aaa
rol
ljmp
mov
add
cmp
orl
in
fsubl
jae
ljmp
pop
cmp
lret
xchg
repz
xor
or
jge
lock
xchg
mov
jnp
mov
adc
mov
push
cmp
lea
mov
rcrb
out
sub
add
test
mov
adc
mov
arpl
mov
mov
aas
std
loop
out
sti
add
pop
and
push
add
cmp
dec
popf
stos
mov
add
pop
cs
pop
jl
push
arpl
shrl
sub
inc
push
sahf
enter
inc
cmpsb
aaa
or
loope
sbb
gs
or
mov
mov
jbe
jle
sub
ds
repz
pusha
test
jle
sbb
inc
lock
test
in
iret
clc
rolb
jne
dec
jmp
add
aas
pop
aaa
js
pop
std
inc
push
mov
sahf
cmp
fmuls
pop
push
push
movsl
inc
xchg
mov
cmp
dec
mov
pop
lahf
nop
pushf
cmp
jo
mov
pop
nop
push
fldl2t
jno
popa
cmpb
push
and
sbb
movsb
jle
andb
aas
inc
push
aam
incl
ljmp
and
shr
js
in
mov
dec
pop
add
or
inc
push
and
outsl
arpl
ljmp
arpl
or
add
pop
imul
call
aam
packuswb
sub
repnz
dec
imul
jne
mov
sub
jge
xchg
fsubrl
xchg
mov
cmp
fistl
mov
into
adc
test
inc
icebp
inc
push
push
hlt
sub
lock
loope
mov
jns
cli
pop
int
iret
jecxz
cltd
fidivl
loop
out
lret
dec
push
xchg
insb
mov
jb
rcrb
scas
sbbb
mov
and
mov
xorl
fs
cmpsb
daa
test
scas
frstpm(287
pop
fnstcw
sbb
out
push
push
inc
iret
mov
cli
jl
out
jge
add
repz
xchg
ds
push
xor
add
lds
push
or
cs
jge
repnz
gs
lea
xchg
fdivs
sub
inc
scas
cmpsb
leave
dec
fmulp
and
inc
icebp
mov
pop
jne
fistps
scas
ret
mov
xor
aas
add
jle
xor
cli
stos
xchg
adc
fisubs
repnz
pusha
popa
jb
mov
adc
xchg
cwtl
jb
mov
or
loop
sub
imul
xor
cmp
lods
push
fiadds
inc
xor
in
or
scas
push
lcall
pop
dec
shlb
aad
cmpsl
mov
addr16
cld
and
popa
sub
pop
mov
lds
lock
js
je
addr16
and
arpl
aad
pop
pushf
cltd
iret
mov
xor
leave
gs
movsl
rcr
out
mov
and
mov
popa
fsubs
push
mov
fs
mov
mov
cmpsb
sbb
add
push
mov
jg
fwait
adc
or
mov
pop
add
nop
inc
ja
inc
and
push
sti
and
pop
mov
adc
pop
repnz
xchg
jp
xor
mov
push
sarl
jp
ljmp
out
mov
sti
pop
leave
test
fmull
test
cs
ljmp
stc
push
loopne
ss
out
inc
iret
push
scas
aas
cld
xchg
inc
mov
lods
jmp
mov
xchg
push
mov
or
adcb
dec
xchg
and
sahf
mov
add
and
ljmp
xchg
and
ret
aam
dec
pop
pop
inc
xchg
mov
lods
aad
pop
and
test
cli
ret
cmp
in
mov
add
add
add
add
jns
aad
dec
jae
cmpsl
orb
dec
push
movsl
push
lock
push
xor
jns
cwtl
lods
lods
lods
mov
xlat
mov
mov
mov
andb
mov
jne
or
mov
or
std
push
lcall
sbb
dec
in
clc
movsb
pop
or
mov
sti
mov
scas
gs
repnz
push
xlat
pop
inc
cmpsb
pushf
xorl
ss
dec
repz
iret
mov
push
dec
in
lahf
in
adcl
cli
ja
int3
pop
pop
jne
cmpsl
and
pop
stos
int3
cli
pop
test
mov
out
xor
xor
test
push
ja
inc
in
push
cmp
jle
andl
not
int3
iret
jmp
iret
xchg
adc
push
pusha
ljmp
cli
mov
cld
in
jno
mov
out
test
decl
test
rclb
sub
ret
out
cmc
enter
stos
inc
stos
sub
xor
loop
push
and
cmp
xlat
lahf
cmp
daa
push
pusha
fisubrs
pop
clc
nop
fdiv
push
and
xor
jb
mov
fs
inc
pop
and
js
nop
xor
pop
or
xorl
adc
ret
xor
add
lods
rclb
jb
fucom
push
test
and
jecxz
push
pop
mov
jmp
insb
cmp
jbe
sub
add
xchg
xchg
mov
xor
sub
push
mov
xor
pop
in
subb
or
adc
xor
pushf
inc
xchg
fstp
arpl
out
mov
dec
xchg
movsb
nop
dec
popa
into
mov
mov
mov
jecxz
stos
sub
jb
push
ja
jb
out
fistpll
sbb
sub
sti
inc
pop
xor
in
sbb
popf
mov
aas
insb
nop
pop
les
xor
movsb
add
and
jge
fiaddl
shr
mov
loope
fld
std
dec
mov
adc
out
data16
sub
nop
shlb
ficoml
pop
stos
lock
xchg
call
hlt
cmpsl
push
push
fchs
jle
jecxz
in
dec
mov
and
pop
pop
repz
mov
adc
pushl
dec
leave
mov
sub
mov
lahf
mov
and
push
rolb
adc
das
aam
adc
push
pop
jg
or
fdivrs
out
test
or
dec
insb
gs
lock
outsb
stos
fs
popa
sbb
out
mov
xor
int3
rorb
push
loop
jo
fcoms
leave
rcll
addb
xchg
bound
rorl
js
out
cmp
and
push
pop
out
div
shrl
mov
int
cmp
xor
gs
mov
mov
and
pop
ret
enter
adc
scas
icebp
jg
sbb
jns
dec
loop
or
sbb
push
ss
loop
xlat
pop
stc
fisttps
push
jnp
fst
xchg
jae
in
push
pop
push
ret
adc
jecxz
je
cmp
jo
into
mov
push
rcr
push
push
orb
lea
nop
jl
or
sbb
test
push
int
xor
add
imul
sbb
aaa
mov
mov
fists
cs
pop
pop
shl
mov
test
std
mov
mov
leave
pop
cs
sbb
mov
and
add
pop
sub
push
out
mov
or
pushf
dec
jmp
jbe
jne
pop
jae
popf
jno
test
int3
adcb
lret
movsb
lods
lods
cmp
jmp
sbb
cmp
pop
fmull
mov
mov
icebp
es
add
xor
nop
jle
lods
push
pop
inc
popf
inc
in
inc
and
lods
je
push
sbbl
fbstp
push
dec
xchg
jp
mov
push
sarb
rorl
aad
and
pop
or
ljmp
mov
jg
cs
neg
fadd
mov
jb
cmp
cli
xor
movsl
stc
sbb
les
and
sbb
sarb
fdiv
xor
inc
cmp
enter
mov
pop
adc
out
xlat
stos
and
aad
mov
sbb
fs
xchg
int
mov
sub
rorb
ficoms
daa
dec
aam
into
sub
or
out
xor
ss
xor
push
inc
mov
push
mov
push
ljmp
in
cmp
in
loopne
pop
outsb
test
push
mov
add
inc
pop
test
mov
dec
cmp
test
jb
ret
xchg
dec
xchg
sbbl
jmp
xchg
int3
in
subb
cmp
mov
sbb
les
cmp
mov
jnp
xor
sub
test
xchg
les
push
sub
inc
xor
mov
dec
cwtl
add
arpl
and
test
jo
or
mov
xchg
data16
mov
leave
xchg
and
xchg
push
out
ljmp
dec
xchg
std
and
pop
adc
jns
jb
shll
pop
push
out
inc
bound
js
push
test
outsl
loopne,pn
add
dec
xor
xchg
inc
pop
cli
in
popa
loop
fcomip
push
xchg
test
pusha
and
popf
mov
push
push
xchg
out
pop
insb
dec
shl
and
sub
pop
into
out
push
out
andl
xor
movsb
mov
jne
fcoml
cmpsl
dec
sub
ljmp
fwait
mov
or
imul
xor
add
mov
in
in
dec
je
xchg
xchg
outsl
movsb
call
cmp
test
jge
addr16
rcll
add
xchg
jae
push
add
push
add
call
add
lods
ret
xchg
jns
fs
cmp
outsl
fs
dec
loopne
dec
daa
add
cmp
inc
filds
aaa
fldcw
out
stc
adc
jge
inc
dec
aas
adc
cld
xor
xchg
insl
jb
push
mulb
arpl
into
ljmp
testl
xlat
sub
dec
imul
add
pop
sti
jo
cmpsl
out
cld
dec
mov
test
lds
inc
mov
mov
xchg
sbb
jle
das
das
pop
es
sub
xchg
xchg
cmp
add
sub
xchg
add
inc
xchg
cmp
jb
stos
loopne
xor
out
rorb
xchg
cmp
test
aaa
lcall
lock
adc
rcrb
stc
je
and
loope
pop
push
test
inc
out
mov
aaa
inc
int
ror
in
insb
repnz
in
insb
pusha
xor
sbb
test
inc
push
mov
int
pop
out
add
sbb
pop
adc
mov
xchg
les
dec
mov
repz
sbb
dec
push
movsb
scas
push
ja
fnstenv
mov
cltd
mov
test
and
punpckldq
add
push
sbb
cmp
jmp
test
mov
push
inc
les
pop
stos
jp
dec
adc
sbb
xchg
les
leave
mov
cld
sbb
mov
cmp
xchg
xor
or
push
shlb
mov
es
sub
mov
imul
cmp
clc
jmp
imul
clc
xchg
mov
movsb
into
idiv
xchg
data16
daa
dec
or
mov
cmp
mov
xchg
mov
sbb
adc
loop
jmp
je
inc
pusha
sub
cmp
sub
push
mov
push
movsb
orl
insl
mov
push
add
jae
mov
pop
cli
jge
sahf
aaa
sbb
inc
inc
lods
dec
jb
mov
out
lds
adc
iret
sbb
xor
aaa
leave
cmpl
insl
out
push
jmp
sbb
out
hlt
cld
lret
int
popa
xlat
pop
mov
out
add
lahf
dec
jp
push
lret
pop
sbb
sbb
add
ds
es
mov
dec
mov
insb
lahf
imul
or
jnp
jmp
jb
lods
add
popf
loopne
cmpsl
mov
adc
out
xchg
hlt
inc
mov
inc
stos
leave
ret
mov
adc
inc
dec
or
pop
lret
fsubrs
lahf
mov
xor
iret
jge
insl
mov
mov
je
push
pop
sbb
out
xor
icebp
ss
inc
sub
jge
mov
inc
xor
dec
lods
bound
pop
add
pop
add
and
inc
adc
int
adc
es
add
call
test
mov
testb
mov
ficoml
fs
ret
or
bnd
scas
sbb
addb
push
fildl
test
testl
push
xor
jne
sbb
inc
cmp
pushf
jle
mov
popa
add
adc
sar
jns
inc
jbe
pop
and
cmp
push
in
jg
xchg
add
rorl
loope
lcall
movsb
pusha
add
cmp
xchg
cmp
rcrb
cmc
jge
push
sub
xor
mov
mov
pushf
popa
popf
movsl
sub
sub
andl
mov
movsb
push
sbb
cmp
dec
in
pop
dec
inc
lods
hlt
lahf
add
lret
insb
jnp
dec
and
test
out
mov
add
sbb
mov
jne
jl
jmp
jge
adc
sbb
shlb
xor
cld
inc
pusha
jecxz
push
and
jne
in
adc
lahf
mov
jne
cld
cmpsb
add
mov
cmp
xor
xor
mov
inc
mov
mov
ss
and
lea
scas
xor
jno
xor
fildl
idiv
or
in
pop
inc
jmp
mov
iret
mov
andl
sbb
mov
xor
rcll
jl
out
push
pushf
in
loope
sbb
fs
test
xchg
in
pushf
push
and
js
mov
fwait
push
jle
or
aas
out
in
xor
sub
sarl
lea
sbb
jecxz
mov
cs
jno
inc
cmp
stc
xchg
jbe
loope
shll
stos
scas
pop
push
push
lret
mov
inc
xchg
inc
xchg
cmp
sahf
and
sbb
or
inc
stos
sbb
out
xor
addl
mov
jne
pop
mov
push
lods
iret
iret
notb
inc
push
push
pop
mov
push
fcoml
pop
mov
js
or
mov
outsl
stc
xchg
mov
cmp
xchg
jne
add
popa
jmp
scas
fstps
loopne
scas
insb
ds
pop
movb
sahf
push
push
mov
rorb
sarb
sbb
jo
call
adc
inc
dec
push
xchg
inc
jne
aam
mov
jmp
scas
xchg
lock
jno
cmpsl
inc
or
aad
popf
push
push
fnstsw
fdivrp
movsl
movb
mov
jbe
test
enter
aad
add
xor
xchg
mov
dec
jae
aam
push
sub
xchg
mov
div
pushf
enter
icebp
push
adc
push
jmp
mov
cld
ret
sbb
mov
ljmp
das
stos
adcl
sbb
pop
shll
cmc
lcallw
sbb
lahf
xor
popf
inc
in
sub
inc
shrl
or
cli
fsubrs
xor
xchg
addb
mov
push
fwait
mov
inc
lahf
jmp
push
cmc
je
outsb
xor
arpl
mov
add
into
lods
stos
mov
xchg
xchg
cmp
addr16
leave
cmovo
pop
orb
mov
mov
adc
push
sahf
push
jbe
je
outsl
iret
jne
stos
fsubrl
adc
aam
push
bound
fwait
pop
push
mov
testl
adc
jbe
xlat
movb
fwait
dec
movsb
ret
cmp
push
mov
push
sub
lock
and
adc
cmp
roll
ret
xchg
cmp
push
fistpll
jle
pushl
jno
mov
idiv
pushf
add
in
mov
iret
cmp
loope
or
flds
cmpsl
addr16
out
outsl
es
dec
movsl
push
loop
loop
dec
cmp
lret
xor
adc
lods
stos
inc
fisubrl
add
loopne
xchg
xor
fldenv
xchg
push
test
ds
je
mov
popf
mov
inc
push
das
mov
inc
add
or
rcl
push
test
adc
test
fs
cltd
cwtl
dec
jo
xorb
imul
popf
xor
pop
add
sub
imul
jno
jmp
shr
clc
ret
mov
jle
js
jae
dec
repnz
outsl
or
scas
sahf
fbstp
inc
aas
xor
add
imul
inc
jo
cmpsl
pop
pop
mov
push
sbb
out
xchg
and
test
xor
cmp
dec
pop
out
cmp
mov
aas
int
mov
movsl
adc
pushf
pusha
mov
and
das
jg
xor
imul
std
movsb
sbb
inc
cmc
and
popf
mov
pop
cmpsb
add
xchg
jbe
mov
stos
adc
jns
movsl
mov
pop
push
outsl
mov
xor
inc
sarl
adc
dec
dec
stc
into
fcmovbe
pop
icebp
sbb
mov
sbb
lds
pop
fxch
int3
sub
pushf
jmp
mov
jecxz
enter
jg
or
xchg
cmp
lcall
adc
in
pop
cmpl
sbb
es
repnz
stos
sbb
test
addr16
loopne
sbb
fstp
mov
cwtl
shrb
pop
fcomps
arpl
adc
out
lods
je
inc
and
adc
cmp
ds
cld
dec
xchg
notl
adc
sub
imul
cmp
in
dec
sub
sahf
add
ds
xchg
pop
pop
rcl
adc
jge
adc
cmpsl
fs
bound
pop
xchg
add
fnstsw
int
fisttps
clc
push
xor
jo
dec
and
or
and
xchg
mov
mov
adc
rol
adc
insb
mov
pop
sub
add
inc
or
rorl
inc
sbbl
mov
jge
jmp
xchg
add
out
cmc
aas
xor
daa
or
lret
cmp
mov
arpl
jmp
push
mov
mov
gs
mov
xchg
adc
cmpsl
xor
jo
fdivs
shrl
inc
xchg
int3
cwtl
sbbb
jne
popf
xchg
add
mov
and
cmc
rcrb
adc
push
or
lea
pop
push
jnp
mov
in
pop
and
jg
fs
xchg
sub
ss
pop
xchg
cld
lock
arpl
push
push
sbb
negl
push
mov
push
adc
and
testl
gs
pop
xchg
mov
pusha
ljmp
adc
inc
adc
mov
mov
cli
clc
int
jle
jmp
popf
movsb
fidivrl
push
pop
aam
add
cli
mov
fcoms
xor
push
iret
jmp
leave
enter
in
xorl
cmp
fwait
jnp
pop
xchg
int3
lock
int
sti
lock
pop
or
or
sbb
push
cmpsl
aam
iret
and
xchg
jle
movsl
addr16
push
adc
cmc
in
push
xor
push
pop
je
mov
mov
or
fistl
jl
xor
adc
jb
adc
push
popa
lea
mov
mov
push
push
inc
fimull
setns
adc
icebp
mov
rorl
and
scas
jl
fldt
fwait
mov
cmc
es
cld
stos
dec
pop
mov
xchg
rcl
push
or
jae
push
fistpl
es
mov
scas
sub
int3
pushl
sbb
pop
mov
inc
imul
jle
sbb
in
mulb
mov
push
rolb
lds
adc
cmpb
flds
pop
cld
ss
shrb
jnp
lcall
push
jmp
orl
out
lret
jbe
rcl
addr16
popa
movsb
jecxz
cmp
add
loope
jns
insb
mov
mov
xlat
sbb
or
shrb
mov
lods
xchg
fstpt
mov
imul
dec
jno
push
push
mov
jo
and
jo
pop
xchg
js
pop
jo
push
fs
cwtl
adc
cmp
pushf
repz
xchg
sarb
or
sbb
or
push
or
add
ret
into
in
call
imul
mov
push
xchg
xchg
sahf
stos
add
mov
cli
fdivrl
out
cmp
mov
roll
or
fidivl
dec
mov
pop
cmp
test
mov
push
inc
dec
in
sbb
xor
mov
jno
dec
mov
mov
test
xchg
cmpsl
inc
out
push
fcmovnbe
xor
nop
jae
cmp
lcall
stos
xchg
pop
push
pusha
inc
shl
mov
movsl
inc
stos
imul
sbb
mov
scas
das
fsubrs
cltd
inc
cs
cs
mov
push
jmp
jb
shlb
push
arpl
in
dec
mov
ja
mov
shlb
mov
adc
jmp
sub
mov
pushf
add
xchg
sbb
pushf
inc
adc
fdivp
sbb
sub
scas
xor
xor
negb
mov
pop
lahf
lahf
jnp
shrb
ja
addb
add
cmp
divb
push
mov
std
mov
mov
and
test
mov
fisubrs
jno
aaa
shrb
into
xchg
dec
loopne
sub
mov
sbb
dec
decb
loope
mov
lods
hlt
mov
fwait
cmpsb
repz
push
pop
pushf
lea
stos
lret
aad
or
mov
dec
jg
ds
xchg
cmc
repz
pop
icebp
outsl
or
xchg
ret
fstpt
mov
fildll
ljmp
cmp
lret
jno
out
push
xchg
int
pop
lcall
mov
pop
mov
dec
jle
ret
aam
inc
cmpsb
xchg
or
sbb
fldenv
add
loop
insl
push
jbe
pop
mov
out
and
xchg
inc
adc
xchg
xchg
hlt
xchg
adc
or
das
scas
inc
inc
sub
push
insb
sarb
sub
ja
push
mov
adc
xor
cmpsb
cltd
mov
pop
aaa
lahf
mov
shrb
es
push
or
mov
lods
xlat
jb
and
xchg
rcrb
pop
and
sbb
xchg
mov
mov
in
sbb
lahf
mov
mov
loopne
iret
jecxz
mov
pop
mov
or
xchg
vpsraw
arpl
mov
cmp
in
xchg
jle
cltd
fbld
xchg
inc
je
mov
stos
scas
rorl
iret
movsl
insl
pushf
push
lret
mov
das
xchg
mov
mov
stos
xlat
jg
cmovns
sbb
xchg
cmp
je
or
xlat
push
push
lret
in
push
adc
adc
mov
and
xchg
adc
js
inc
loope
xchg
into
cmc
or
jae
in
rolb
cmc
popa
popf
iret
xchg
popf
xchg
daa
mov
and
adc
mov
pop
popa
jmp
sbb
call
int
jo
addl
leave
lret
fstp
mov
sbb
movsl
in
outsl
pop
or
push
mov
mov
cld
leave
mov
daa
push
orb
shlb
dec
dec
into
push
pop
xchg
pop
jecxz
lock
test
jae
mov
add
dec
pushf
rcrl
mov
inc
mov
iret
loop
add
sub
rorb
pop
sbb
adc
jl
dec
jmp
test
cmp
lcall
push
pop
paddsb
fwait
mov
add
push
roll
sbbl
dec
xchg
insl
in
aas
sub
jmp
xchg
push
jle
pop
add
sbb
xor
lret
mov
es
adcl
loopne
and
jg
jo
jno
fidivl
inc
int3
cli
jmp
pop
add
xchg
dec
xor
cmp
push
xlat
sub
sub
push
pop
mov
cmp
cmp
outsl
repz
ficomps
pop
inc
mov
mov
inc
addr16
imul
cmp
sub
cmp
adc
pushf
das
imul
and
insl
push
lock
imul
divb
lods
sahf
xchg
pusha
movsl
xchg
call
add
adc
sub
dec
mov
mov
xchg
or
pop
xchg
jle
pop
inc
mov
pop
mov
pop
in
and
xor
cmp
cmpsl
dec
push
adc
xor
mov
push
mov
jnp
popl
mov
push
xlat
shl
mov
mov
sbb
xor
jl
test
loopne
pop
enter
je
xor
cmc
push
add
mov
or
add
xor
pop
flds
icebp
push
mov
push
inc
js
adc
and
mov
jmp
scas
filds
outsl
popf
int
add
std
jns
adc
xor
push
int
or
inc
mov
xchg
sbbb
add
lods
add
scas
in
insl
mov
ret
pop
push
cmp
sub
sti
lret
imul
jecxz
mov
add
ss
cmp
pop
rcll
or
cmp
fidivrs
or
repnz
or
call
dec
xchg
aad
lcall
mov
call
imul
or
add
stc
pop
mov
movsb
xlat
into
les
or
and
push
or
stos
inc
addb
xor
mull
cltd
inc
in
stos
sbb
xchg
mov
gs
xlat
lret
mov
sub
repz
adc
sarb
shll
pushf
sub
jns
nop
mov
xchg
mov
pop
loop
sub
stos
push
mov
jnp
add
inc
icebp
cmp
push
pop
les
xor
mov
cmp
add
clc
lds
mov
repnz
dec
es
add
push
into
inc
pop
jb
dec
shlb
je
cmp
lcall
push
inc
or
int
icebp
mov
jb
push
leave
in
dec
std
mov
leave
cli
sbb
out
test
pshufw
sbb
stos
out
stc
popa
cli
push
sbb
lds
stos
lret
in
mov
xchg
sbb
outsb
cmc
xchg
add
push
sbb
xlat
lods
sbb
outsb
fcoms
divb
pop
cld
xor
leave
inc
inc
in
gs
lcall
and
xor
std
adc
jo
jbe
adc
add
fcmovnbe
inc
mov
fimull
test
shl
addl
or
dec
mov
sub
gs
add
jae
mov
sbb
int3
jle
in
jae
xor
mov
jne
imul
sub
dec
add
jbe,pt
push
je
les
adcb
add
scas
mov
mov
mov
jp
adc
jg
xchg
mov
nop
jle
pushf
mov
xchg
push
mov
out
hlt
mov
inc
lcall
shll
std
jecxz
sbb
push
movsb
orl
jae
es
sbb
aad
mov
inc
pop
imul
lret
fwait
mov
dec
mov
mov
in
inc
adcb
imul
cltd
ss
xor
testb
or
push
and
out
dec
inc
pop
mov
jl
or
loop
imul
jge
and
mov
and
xchg
arpl
cmp
enter
xchg
jle
cmpsl
sub
push
punpckhwd
cmp
push
and
xchg
mov
or
nop
popa
dec
cmpsb
dec
fwait
cmpsb
mov
lods
cli
mov
cmpsl
push
ret
scas
adc
sbb
das
pop
push
ljmp
cmp
dec
pop
xorb
es
pop
cmp
popf
les
mov
outsb
add
mov
cld
jns
fimull
cmp
das
aaa
subb
mov
dec
and
ljmp
cwtl
popa
int
nop
mov
xchg
clc
cld
jecxz
sub
lcall
jmp
cltd
and
sbb
pop
sbb
movsl
stc
js
cmp
fnstcw
ss
mov
fwait
push
push
or
rcll
sub
aas
xor
push
and
arpl
in
add
cltd
xchg
adc
mov
push
push
pushf
add
scas
pop
data16
int3
movsl
jae
in
lods
mov
mov
cld
push
call
shll
mov
stc
cmc
cmpsb
xchg
pop
rcrb
push
cmp
or
push
and
lret
push
iret
mov
out
push
sbb
mov
adc
gs
fnstsw
js
mov
stos
and
rorb
enter
jg
enter
sbb
lret
movsl
inc
jmp
inc
xchg
jne
cmp
or
rclb
and
xchg
data16
xchg
bound
mov
loope
xor
mov
test
fwait
cmp
and
aam
sarl
cmp
pushf
dec
test
cmp
aad
push
fsubp
popa
ljmp
mov
aaa
inc
xor
xchg
mov
scas
sbbb
sub
dec
jne
jne
push
sarb
sbb
sbb
insb
xchg
fwait
mov
adc
jecxz
out
std
aam
mull
enter
dec
push
xchg
push
lock
jb
lods
fstp
xchg
sub
orb
popa
lea
idivl
cmp
sub
jge
mov
cltd
cmp
loopne
out
in
lcall
mov
adc
out
mov
inc
mov
sub
scas
mov
std
lcall
dec
in
adc
pop
test
cmc
lret
mov
mov
jp
xor
js
stos
and
sbb
js
stc
lret
dec
shl
cld
or
popf
stos
jno
jae
out
repnz
cli
dec
movsl
gs
xchg
push
stos
jae
xor
das
inc
not
rcrb
mov
lods
mov
xchg
cmpsb
dec
into
and
pop
cmp
sbb
js
cmpsb
push
pop
shrl
pushf
cmc
divl
in
jge
in
aas
aam
add
loop
lods
add
pop
stos
cld
inc
xchg
cmp
dec
push
shlb
fyl2xp1
fmull
cmp
mov
jns
idivl
bound
mov
push
pop
negb
and
das
popf
push
mov
inc
sub
xchg
sub
and
ljmp
push
inc
mov
lock
shrl
inc
lds
and
in
fwait
jno
push
lods
dec
sarl
addr16
adc
loop
push
push
mov
or
sub
mov
xorb
sahf
pushf
aam
icebp
xchg
and
repz
js
mov
lahf
lods
and
out
sub
out
shlb
push
add
push
or
dec
std
mov
dec
test
scas
ret
adc
xchg
mov
or
imul
mov
jg
xchg
subl
enter
and
mov
add
cmp
jne
mov
mov
lea
call
jmp
xor
pop
imul
pushf
in
sbbb
rclb
xchg
dec
add
sbb
pop
jb
mov
clc
loop
flds
xchg
pop
nop
lds
mov
mov
frstor
insl
pop
lcall
dec
or
push
sbb
aad
mov
xor
repz
mov
jmp
inc
cmpsb
mov
xlat
cs
pusha
jmp
mov
movsb
dec
int3
fbld
adc
or
fisubrs
repnz
dec
and
into
icebp
mov
xor
je
arpl
jno
cmpsl
lahf
or
cmovnp
adcl
push
andl
dec
add
xchg
or
pop
inc
dec
fisttpl
ds
pop
mull
loope
daa
cmp
pop
cs
pop
or
sbb
scas
add
sbb
pushw
or
shl
imul
mov
scas
push
inc
repnz
pmullw
sbb
pop
int3
hlt
and
fcoms
adc
ds
adc
pop
movl
pop
das
mov
sti
cmp
dec
and
rorb
push
into
adc
fimull
call
dec
sub
add
dec
pop
cltd
nop
hlt
jge
jo
adc
adc
cmpsl
cmp
aas
and
pop
mov
test
and
or
push
ljmp
pop
negb
or
adc
jecxz
mov
adc
outsb
push
sub
shr
push
stc
and
test
jecxz
jbe
pop
test
push
and
pushw
ret
jle
nop
test
xchg
sbb
lret
repnz
nop
mov
in
test
mov
cld
and
int
and
sub
sarb
mov
mov
addr16
int
dec
inc
mov
loope
bswap
pop
je
sub
lods
and
pop
xchg
inc
out
or
mov
pop
mov
add
ljmp
dec
inc
popa
mov
jbe
loope
jl
and
jae
sub
inc
add
mov
dec
test
mov
xchg
rol
lea
jle
mov
push
popa
sub
push
ja
adc
je
jne
std
xchg
sbb
into
sbb
mov
inc
jbe
jge
mov
ljmp
sti
jae
lea
add
jno
and
xchg
daa
movsl
and
dec
repnz
ret
je
divl
in
hlt
inc
stc
dec
arpl
test
fdivp
imul
ror
and
sbb
rcrb
push
push
and
sub
push
jae,pn
insl
inc
mov
inc
sub
movsl
mov
imull
pop
jo
pop
mov
dec
pop
push
int
cmp
aad
ret
loopne
cmp
pop
shlb
adc
insb
jnp
mov
ror
sahf
xchg
adc
icebp
and
cld
or
xlat
mov
out
xlat
fwait
pop
loope
sub
mov
add
inc
and
cmp
pop
inc
inc
push
jmp
mov
or
in
dec
pop
cmpsb
clc
cmp
mov
push
loope
std
enter
cwtl
cld
loop
jmp
lcall
or
stc
lea
xchg
movsb
jp
imull
loop
pop
mov
mov
enter
add
lret
inc
outsb
lds
dec
and
hlt
fcoml
js
sbb
pop
roll
lds
cmovo
daa
jg
push
inc
imul
popf
mov
in
and
xchg
sub
insl
leave
movsl
es
sbb
jnp
inc
sbb
mov
movsl
push
xchg
pushf
push
cli
stos
movsb
ficoml
ret
pop
push
outsb
jne
pop
dec
das
pusha
imul
fdivrs
hlt
dec
and
cmp
mov
push
clc
fdivrl
cmpb
imul
add
or
sti
iret
fsubr
or
xor
sub
dec
ss
jne
sbb
scas
roll
pop
mov
popa
adc
push
mov
out
mov
pop
pushf
shrb
push
add
jnp
pop
int
out
lea
sar
lock
fnstsw
jae
aam
push
sub
push
or
call
jl
push
xor
pusha
jns
repnz
cmc
adc
inc
mov
xchg
dec
ds
stos
xchg
lret
sbb
daa
jmp
mov
xchg
dec
loopne
mov
mov
js
or
sbb
js
xor
push
jle
xchg
scas
mov
dec
dec
sub
addr16
dec
es
jnp
mov
cwtl
cmp
jmp
mov
mov
and
fs
jp
xor
dec
fcomps
jp
pop
jg
mov
xchg
and
xchg
rolb
cmpsb
jne
cmp
inc
mov
nop
andl
add
jg
sbb
mov
jbe
sbb
jmp
sub
int3
movsl
imull
out
jae
shrb
pop
jne
inc
xchg
adc
and
fucom
xchg
inc
adc
sti
or
mov
fcoml
insb
jno
roll
js
imul
in
sbb
pop
loopne
mov
xlat
and
aam
pop
lods
bound
popf
insl
mov
pop
sbb
jbe
sub
inc
jbe
xchg
xor
lahf
ret
mov
cmp
adc
jns
push
jne
std
pop
lock
mov
stos
inc
aad
sbb
mov
pop
repnz
repz
in
lret
mov
and
rcl
or
movsl
cmc
inc
es
push
call
pop
xor
aad
jmp
jp
or
std
data16
lea
jmp
xor
iret
adc
xrelease
sub
test
pop
sub
mov
sti
inc
lock
mov
fnsave
jnp
call
cld
jo
add
call
enter
adc
mov
fldenv
paddq
pop
fwait
xor
icebp
int
in
int
mov
je
add
push
inc
push
adcb
ljmp
sti
jo
inc
or
fdivrl
push
jno
loope
out
or
adc
icebp
repz
hlt
into
iret
or
xor
aam
add
jne
dec
mov
ficoms
enter
pusha
les
inc
sbb
out
out
fnstenv
xchg
jne
jmp
inc
enter
cli
ss
sub
mov
into
mov
or
fs
inc
or
xchg
lods
jge
sbbl
ret
bound
sbb
data16
jb
stos
xor
shl
cmpsl
push
mov
mov
inc
mov
scas
std
jns
mov
sbb
rorl
out
jb
and
int
loopne
faddp
or
and
lods
or
fsubrl
and
mov
test
out
ljmp
pop
xchg
jmp
mov
cmp
inc
loopne
popf
ss
dec
mulb
add
iret
sub
leave
pop
inc
jecxz
xor
ficoms
jg
popf
mov
divb
sub
push
inc
push
add
jne
shll
mov
shr
dec
or
xchg
dec
hlt
pusha
in
xlat
ja
out
aad
jne
shlb
cmp
mov
pop
dec
sub
lahf
pslld
adc
int3
jo
xor
xchg
adc
insb
clc
repz
push
pop
int3
in
popl
in
ja
test
idivb
mov
xor
ja
out
movsl
icebp
js
xchg
mov
xor
sub
inc
and
adc
and
in
dec
std
and
mov
xchg
xchg
sbb
jp
fstpt
mov
out
in
sti
inc
or
xchg
test
nop
push
outsl
rorb
in
add
sbb
add
mov
clc
sbb
and
jo
sbb
xchg
pushf
xchg
mov
popf
into
clc
or
cmp
inc
fbld
xlat
pop
mov
je
fisubrl
xchg
dec
mov
lahf
xor
add
cmpsl
shrl
scas
add
jl
cltd
jecxz
sbb
cmpsb
repnz
mov
push
scas
mov
test
jge
ss
push
movsl
dec
adc
sbb
cmpsb
adc
in
mov
scas
fcomip
or
cld
xor
pop
movsb
mov
sti
jbe
sub
cltd
sbb
inc
cs
das
movsl
lahf
cmp
mov
inc
int
mov
ret
dec
mull
push
and
xor
fists
lock
cmp
xchg
sbb
int3
or
jmp
dec
fucom
push
lahf
pop
and
in
dec
lea
push
mov
xor
pushf
dec
call
jns
fnstsw
lret
in
jne
out
mov
adc
adc
sbbl
xlat
imulb
xor
jmp
xor
mov
pop
cmc
iret
mov
jp
lret
aam
out
jg
add
push
dec
imul
dec
mov
xchg
jle
add
scas
sub
sub
outsl
pop
or
out
insl
int3
pop
ja
and
mov
or
dec
outsl
das
pop
or
je
xchg
lea
test
imul
adc
mov
lcall
cmp
pop
pop
test
push
sub
repnz
pop
jbe
add
scas
sub
out
sbb
aad
lock
out
jnp
call
adc
std
hlt
das
pop
cmpsl
ljmp
or
xchg
mov
mov
cmp
lds
stos
or
call
scas
push
ret
pop
inc
ret
xchg
test
push
lods
je
scas
negb
dec
and
xchg
or
jb
shl
sub
cwtl
dec
sub
cmp
leave
cmp
jmp
lret
js,pt
bound
push
dec
js
lret
sbb
lods
adc
add
out
jecxz
or
and
push
mov
ss
push
lock
xor
lcall
leave
arpl
cltd
call
push
sub
pushf
lods
out
test
and
imul
or
and
mov
addr16
pop
dec
pusha
mov
dec
scas
mov
popl
pop
bound
fmulp
mov
pop
pop
mov
pop
sub
mov
xor
dec
out
xor
or
sarl
enter
popa
mulb
popf
mov
ja
mov
xchg
lods
shrb
xchg
and
sub
ret
idivl
inc
call
enter
jbe
jmp
add
mov
pop
pop
testb
dec
ret
cwtl
adc
stos
push
rcrl
jp
int3
sub
out
dec
fidivl
pop
mov
jmp
movsl
cli
test
and
xchg
add
test
dec
jmp
xor
inc
sub
fisubs
cs
xchg
ljmp
push
decl
pop
pop
gs
jp
dec
adc
push
push
sbb
fcmovnb
sbbb
rol
cmp
es
mov
outsb
nop
lahf
mov
mov
adc
fisttpll
mov
add
mov
xchg
jno
cmp
pusha
pop
leave
push
arpl
dec
cmc
adc
ret
into
sbbl
jno
mov
sbb
ja
sub
sub
mov
dec
aam
aad
dec
out
sarb
pop
lahf
sbb
cld
add
imulb
inc
adc
pop
mov
aad
xor
lods
cmp
xchg
icebp
in
test
cli
movsl
adcb
pop
notl
inc
and
cs
outsl
movsb
or
inc
mov
jo
adc
sub
inc
int
cmpsl
daa
lcall
inc
jecxz
pusha
insb
jb
aad
scas
jb
xor
in
cmp
push
pop
dec
rclb
test
dec
push
filds
push
jae
leave
and
int3
mov
xchg
in
cmp
sub
daa
sbb
cmpsb
sbb
mov
mov
fstp
nop
mov
jp
inc
icebp
pop
jne
inc
mov
cld
out
insl
inc
bnd
and
cmpl
and
loop
inc
and
dec
add
stos
add
mov
push
addl
push
in
dec
xor
outsl
loopne
inc
scas
cmpsb
cmp
xchg
pop
fucomp
dec
and
sub
add
add
int3
sarl
pop
jb
iret
push
loopne
lahf
push
fwait
push
adc
mov
or
movsl
cmp
cmp
and
jns
push
inc
inc
mov
addl
add
or
jle
test
in
mov
mov
mov
pop
cmc
sub
inc
pushf
cltd
lret
iret
enter
push
xor
cmpb
mov
add
subl
inc
ja
movsb
sub
inc
add
loopne
mov
shrb
int
fcmovu
ljmp
or
sbb
adc
push
mov
dec
adc
repnz
jmp
lds
aas
sti
xchg
lds
adc
jmp
loop
jae
fisubrs
cltd
addr16
addr16
dec
push
daa
xor
cmp
ret
lods
sub
mov
daa
push
mov
mov
mov
pop
enter
lods
cmp
hlt
push
test
jnp
jl
fwait
jl
xchg
mov
shll
loop
clc
jmp
push
dec
ret
cmpsl
inc
pop
out
clc
pop
sti
jmp
push
je
lea
add
sbb
dec
hlt
std
xchg
mov
loope
xor
imul
push
sbb
rorb
sbb
cltd
push
xchg
inc
mov
cmp
jns
push
shrl
add
and
cmpsb
lea
push
scas
push
jmp
testl
rcrl
inc
xchg
push
mov
test
inc
and
cmpsl
jge
pop
pusha
jne
pop
cmpsb
mov
sub
leave
mov
xlat
negb
test
sbb
jne
dec
dec
jmp
mov
daa
fiaddl
adc
stc
xor
xor
dec
mov
push
outsb
loopne
ret
mov
gs
in
push
test
scas
adc
loopne
xchg
rcrl
call
icebp
cmp
mov
test
insb
test
shll
sbb
mov
aas
cltd
pop
aam
lds
cmp
inc
push
push
push
scas
clc
lods
icebp
xchg
andb
push
and
daa
xor
bound
dec
cld
adc
cmp
jp
pop
dec
dec
adc
inc
hlt
and
in
out
push
sub
orb
dec
or
cwtl
mov
mov
mov
jg
gs
and
out
add
sahf
flds
mov
rorb
cmp
pop
and
pushf
popl
cmp
fsubl
inc
sub
lea
shll
pop
mov
aad
imul
std
add
fstpt
xchg
mov
cmpsb
inc
aam
movsb
jle
push
sub
push
stos
cmp
icebp
and
popl
dec
test
pop
inc
and
fmull
or
ret
test
mov
ss
jae
fcmovnb
or
aaa
loop
add
fistpl
dec
dec
xchg
popf
and
dec
adc
pop
pop
movsb
or
jno
mov
jg
mov
mov
out
andb
or
mov
daa
popf
out
mov
scas
jb,pt
out
icebp
mov
ror
adc
stos
clc
inc
cltd
push
inc
or
scas
lahf
cmp
out
mov
idivl
stos
sub
mov
or
cmp
mov
fsubl
mov
push
cmpsb
pop
iret
pop
push
mov
mov
leave
xlat
imul
in
into
shll
negl
xor
mov
lock
sub
fsqrt
scas
sti
push
scas
loop
decl
and
or
imul
int3
sbb
mov
cmc
fadds
repz
shl
pushf
fsts
mov
fdivrl
mov
xchg
push
inc
int
pop
rcl
das
inc
jp
jns
les
divb
mov
mov
jl
lret
cmp
mov
jns
repnz
adc
sub
sub
xchg
bound
mov
sbb
mov
or
sti
mov
mov
ja
xchg
dec
cwtl
fdivl
pop
push
xchg
xchg
andl
adc
sub
call
rolb
lock
js
leave
mov
sbb
xorl
xor
mov
mov
aaa
jae
mov
dec
mov
in
dec
mov
fidivrl
adc
andb
mov
test
rcr
mov
push
add
push
aaa
cli
out
int3
fs
lret
outsb
sar
cwtl
subl
xchg
inc
hlt
sub
std
fldcw
fisubs
push
jns
mov
pop
xchg
ss
out
stos
dec
loopne
xor
daa
shl
mov
push
addl
mov
and
nop
decl
xor
dec
xor
cwtl
mul
nop
sbb
sbb
mov
lahf
insb
and
jmp
sbb
call
add
xor
ror
push
sub
nop
jp
sub
sbb
aaa
lret
aaa
dec
js
fldcw
in
and
jne
mov
sbb
andb
fcomp
ja
int
shlb
jae
mov
insl
daa
inc
int3
fucomip
test
or
cld
arpl
adcl
cmpsl
pop
dec
fwait
hlt
insb
push
and
jns
mov
xchg
cmp
jbe
subb
jo
sti
out
hlt
pop
adc
addb
inc
repnz
fsubl
or
jns
out
pop
ffreep
lods
cmp
rsm
mov
dec
dec
push
and
add
enter
pop
mov
movsl
in
xor
out
inc
in
or
inc
mov
mov
jb
cmp
in
jne
cli
push
inc
pop
enter
dec
lods
sub
mov
fsubrp
push
mov
mov
movd
pop
cmp
aas
xchg
mov
out
mov
mov
and
mov
insb
push
pushf
stos
cmpsl
mov
adc
dec
xchg
add
stc
cmpsl
gs
and
nop
pop
adc
xchg
test
mov
data16
inc
call
test
lds
loop
and
icebp
or
mov
sub
pop
lcall
jp
aad
mov
jns
test
mov
pop
js
mov
lds
pushf
shrl
sbb
mov
test
inc
subl
adc
cltd
iret
repz
cmpsl
sub
mov
jecxz
fisttps
and
dec
cmp
pusha
mov
or
hlt
cmpsl
out
mov
out
daa
adc
mov
ljmp
jne
fistl
jo
jns
filds
out
or
sub
sahf
hlt
gs
out
movsb
flds
aam
push
pop
jb
fcoms
adc
push
lods
rorl
cmp
mov
aam
cltd
movl
jns
push
inc
mov
cwtl
arpl
js
cmp
add
stos
dec
xor
and
cltd
cmpsl
fsubl
cwtl
out
jmp
movb
push
mov
and
out
aam
cli
push
mov
fwait
mov
and
pop
pop
inc
mov
inc
sub
add
sbb
adc
imul
and
cmp
imul
and
out
dec
mov
ds
dec
jl
mov
inc
sub
lods
dec
xchg
sub
or
scas
push
popa
inc
sarl
dec
fbstp
xchg
adc
shl
cmpsb
daa
pop
test
outsl
lret
lss
cmpb
aaa
stos
rcl
in
insl
jecxz
lds
jno
fisubrs
or
test
dec
cmp
out
leave
mov
cmp
into
adc
jbe
imul
push
jmp
push
jnp
xor
push
jnp
sbbl
out
add
jecxz
jae
dec
fstpl
sti
mov
xchg
mov
jge
sbb
xchg
lea
ret
fsts
insb
push
int
lods
push
mov
in
adc
sbb
mov
or
xor
rcrb
in
add
push
add
jl
or
or
mov
mov
out
divl
mov
xor
mov
jne
ror
out
push
hlt
cmpsb
fiaddl
xor
mov
in
repz
test
cwtl
xor
adcl
jmp
xlat
add
and
outsl
jmp
sub
fildl
pop
xor
lods
sbb
or
mov
popf
cmpsb
scas
xor
xchg
mov
imul
cli
pop
out
orl
xchg
fcmovb
nop
mov
stos
into
cwtl
mov
cs
jp
fists
gs
mov
cmc
dec
mov
xchg
out
mov
iret
cld
lds
xor
insl
xchg
mov
test
sbb
fsubrl
mov
adc
cs
int3
and
mov
subb
out
mov
fnstcw
jmp
sbb
adc
jbe
xchg
pop
adc
cs
jle
lret
sbb
mov
pop
fcomi
jecxz
ds
add
adc
es
pop
shll
inc
clc
sbb
imul
popf
mov
push
mov
fisttps
adc
mov
pop
mov
mov
cltd
mov
sbb
mov
cltd
pop
icebp
sbb
sub
inc
std
pop
pop
js
popa
adc
repz
xchg
xchg
jb
std
mov
adc
clc
adc
and
inc
loopne
scas
jbe
push
mov
lock
sub
hlt
test
sub
add
popa
sub
stos
in
scas
bnd
sub
jecxz
daa
cmp
fildl
adc
inc
idivb
repz
mov
loopne
popl
or
xlat
mov
out
scas
mov
sub
cmpsl
sti
lds
sbb
jbe
arpl
jno
fwait
out
cmp
cmp
jmp
mov
pop
xchg
negb
cmpsb
dec
mov
push
hlt
pop
ss
cmp
cmp
xchg
imul
add
test
lahf
add
mov
mov
dec
push
sub
cmp
jg
in
pop
sbb
jo
cli
scas
data16
jle
mov
iret
mov
rcrl
repz
inc
cmp
data16
daa
cmp
outsb
jp
pop
push
outsl
int
jne
mov
mov
mov
mov
outsl
jmp
in
jns
ja
mov
cmp
out
aas
vmovupd
add
imul
enter
push
mov
loopne
mov
sbb
fisubrs
ret
iret
jmp
sbb
mov
lret
mul
push
imul
pusha
xchg
mov
rclb
inc
clc
xor
fcmovu
rorb
xchg
push
cli
sub
cmc
mov
add
rcrl
dec
ficoml
add
out
push
push
xor
stc
scas
or
sti
xor
mov
test
pushf
cs
sub
std
subb
xchg
sub
stos
push
sub
stos
add
imul
sbb
sub
incl
or
sbb
sahf
jg
xor
mov
mov
and
pop
mov
shl
lahf
enter
outsl
in
xor
addr16
and
sbb
mov
out
cmp
sti
add
and
dec
out
jae
shrb
jge
cld
push
dec
mov
aad
cmpsb
xchg
sub
lods
aaa
notl
push
roll
fistl
enter
mov
lds
andl
stos
pop
or
jecxz
stos
add
int3
or
sahf
enter
sub
pop
mov
sub
xor
cs
popf
dec
add
xor
xchg
or
out
xchg
idiv
ret
hlt
adcb
jns
sub
inc
testl
ror
jo
mov
push
ljmp
subl
xor
add
scas
fidivrs
or
xchg
cld
lds
imul
and
loope
jno
add
cwtl
aad
fadds
push
gs
int
dec
add
testb
mov
pop
decb
mov
dec
sbb
inc
divl
nop
jg
insl
xor
fsts
in
mov
xor
cmc
es
xchg
hlt
sub
test
ja
mov
pushf
into
jo
in
push
dec
fcomi
idiv
repz
movsl
outsl
in
pusha
icebp
jo
ret
divb
jb
mull
xor
mov
rclb
add
pushf
shl
test
bound
jb
pop
pop
lret
mov
push
push
call
and
xacquire
popa
mov
fwait
jecxz
add
fucomp
mov
pop
jb
mov
adc
mov
xor
fucomp
adc
fcmovnu
leave
sub
sbb
negl
push
cmp
stos
jp
lods
dec
roll
jne
inc
pusha
inc
push
inc
int3
or
pop
dec
int3
std
popf
mov
popa
mov
movsb
jbe
cmpl
add
testl
lcall
and
insb
cmp
leave
inc
inc
cwtl
into
jno
lea
pop
pop
or
dec
gs
dec
and
icebp
mov
loopne
jo
add
sub
mov
mov
dec
dec
daa
pop
cwtl
sbb
jns
add
mov
cmp
push
sbbl
iret
mov
jge
xor
sarl
movsl
inc
adc
xchg
cmp
lahf
in
rcrb
or
test
cwtl
lods
xchg
test
or
outsl
and
in
and
and
push
sub
and
push
or
rorb
std
add
xchg
in
jae
mov
add
outsb
mov
lret
gs
pop
push
fmull
xchg
rcll
ja
fwait
ret
add
scas
mov
pop
sub
cmp
test
pop
xor
cmpsl
leave
dec
imul
gs
inc
mov
dec
test
lcall
fisubrl
loopne
pop
shufps
sbb
mov
mov
add
add
jl
inc
inc
or
test
or
and
sti
cmc
cmpsl
lods
xchg
lods
in
mov
popf
jmp
ret
in
xchg
add
into
xchg
inc
add
je
cwtl
test
add
mov
fldt
addr16
sub
shll
or
mov
dec
les
jmp
sbb
xchg
inc
pop
mov
push
sub
and
mov
pop
inc
iret
out
jae
adc
mov
cmp
push
and
or
je
cmc
xor
add
fcoms
inc
jbe
sbb
shlb
rorb
xchg
xorl
mov
mov
pop
jns
xor
std
lret
push
or
sub
call
mov
jg
sub
mov
cli
jl
incb
adc
jae
inc
push
ljmp
inc
jl
pushf
cmp
ret
insl
insl
xchg
pop
mov
in
and
cmc
fisubs
jnp
orb
test
in
sbb
lods
cwtl
jl
push
xchg
and
pop
bound
test
das
roll
arpl
mov
addl
imul
repnz
shlb
mov
jno
mov
adc
arpl
lcall
xor
loop
jl
xor
cmp
lds
xchg
popa
xchg
shl
push
test
cmp
flds
inc
adc
ja
arpl
stos
out
lds
add
lds
ret
push
fsubrp
pop
push
std
inc
bnd
jae
adc
lods
mov
mov
lods
fsts
mov
ret
mov
push
adc
fisttpll
cs
in
mov
cmp
sahf
add
scas
mov
dec
xor
sahf
mov
loope
jl
adc
insl
imul
gs
dec
push
inc
aam
xorb
dec
add
sbb
nop
inc
mov
cmp
push
jo
inc
jnp
push
cmp
ljmp
loopne
push
scas
les
cs
pop
cmp
cmovb
mov
fidivrl
mov
notb
or
nop
loope
jne
mov
lods
push
repz
cmpsl
xchg
movsl
cmp
xlat
pushf
and
mov
sbb
xor
pop
vcvtps2pd
inc
xchg
xchg
dec
leave
pushf
adc
cmp
push
jns
pusha
popa
sub
aaa
ficoml
xchg
inc
mov
scas
inc
stc
mov
loopne
and
mov
out
hlt
stos
gs
repz
js
push
mov
daa
popf
and
pop
lock
push
aad
mov
jle
mulb
mov
cmp
cld
popf
imul
test
cmp
vpsubsw
mov
xchg
call
add
push
cltd
gs
xor
xchg
pop
out
push
cmp
sub
push
sbb
inc
pop
jne
dec
nop
enter
sub
cmp
iret
adc
xchg
add
lods
data16
cli
mov
and
lock
mov
jl
push
imulb
cmpsb
xchg
inc
push
out
pop
push
xchg
minps
cmp
xchg
aad
cltd
or
xlat
jmp
xor
aaa
clc
xchg
clc
or
add
sbb
dec
xor
jmp
shrb
ja
add
ss
pop
adc
outsb
dec
rorb
jae
push
aas
push
shr
out
mov
popa
orl
pop
add
loope
das
jne
pop
sub
or
gs
aad
mov
outsl
pop
daa
adc
push
pop
daa
div
push
loop
cmp
les
gs
push
pop
iret
imulb
inc
in
ja
int
jo
bt
xchg
xchg
mov
mov
data16
mov
cmc
ss
movsl
je
mov
jb
nop
pop
pop
inc
and
jb
je
lea
mov
or
and
cmp
push
ljmp
and
cmpsl
xchg
mov
shlb
lret
hlt
sbb
mov
mov
add
dec
mov
lods
test
cmp
pop
add
mov
imul
cmp
icebp
push
insl
or
je
push
mov
xchg
jnp
fs
imul
test
push
outsb
rol
stos
cmp
inc
fwait
sarb
pushf
or
or
pusha
fidivrl
cwtl
and
sbb
out
mov
outsb
jp
mov
jmp
and
xor
push
jae
movsb
push
insl
sub
mov
cmp
mov
adc
mov
dec
adc
push
push
dec
pop
add
xor
scas
scas
jmp
idivb
rclb
call
jbe
mov
rolb
pop
push
lcall
inc
sub
pushf
dec
mov
xchg
inc
jle
stc
adc
or
shl
mov
pusha
lahf
dec
xlat
add
out
mov
pop
ja
vhaddps
fistpll
sbb
push
lea
in
pop
sahf
inc
repnz
jge
cmc
out
jno
lds
repz
cmp
inc
add
outsb
icebp
out
push
mov
jnp
mov
iret
in
sub
sub
int
outsb
push
mov
das
icebp
mov
lock
movb
add
jmp
sub
call
sbb
sub
and
hlt
pop
xchg
sar
cltd
and
lea
out
or
xchg
jbe
out
xor
lea
repnz
jne
ja
rorl
out
nop
and
push
xchg
mov
inc
lock
mov
adc
test
clc
divl
hlt
popa
testl
lret
xor
mov
adc
dec
loop
dec
push
add
imul
negb
xor
shl
popa
out
cmp
daa
test
mov
add
mov
scas
xchg
ljmp
fbld
jg
aam
add
cmp
adcl
sbb
and
mov
xchg
jns
mov
push
cwtl
clc
push
fsub
lret
ds
push
jecxz
cltd
or
and
ret
sub
leave
dec
or
test
decb
cwtl
and
stos
cmpsb
adc
enter
subb
movsl
jbe
jb
xchg
mov
cmp
repz
push
loope
push
enter
aad
dec
movsl
xor
add
test
push
insb
lret
std
aas
push
int3
xor
lret
loop
sbb
cmp
arpl
jl
mov
daa
push
out
repz
movsl
cwtl
ljmp
jge
push
jae
and
cmpsb
mov
inc
xchg
jnp
sarb
push
das
rclb
add
xchg
leave
mov
xor
dec
loop
mov
loope
mov
sarl
push
cwtl
and
lds
mov
lahf
cmp
push
jle
arpl
pop
imul
sub
movsb
mov
pushf
scas
dec
sbb
mov
adc
dec
add
push
and
outsb
mov
adc
clc
inc
cmp
out
cmc
jle
daa
and
and
mov
adc
gs
es
clc
andb
push
add
xchg
sub
mov
call
mov
pop
out
ja
add
dec
xchg
aaa
xor
cmp
jmp
into
sbb
dec
subl
cltd
mov
push
fistps
mov
inc
ret
xchg
xor
xor
jnp
cmp
call
pop
aam
xchg
cmp
mov
push
add
and
ret
xchg
adc
lret
mov
fadd
adc
sub
add
jmp
push
or
push
xchg
ljmp
jmp
daa
mov
push
imulb
movsb
lcall
inc
scas
stc
outsl
jns
mov
dec
fists
popf
sub
jl
bound
inc
cmpsb
add
mov
lahf
and
sbb
dec
pushf
pop
adc
or
mov
jbe
dec
addr16
and
inc
inc
stc
dec
adc
mov
sub
rorl
xchg
jns
dec
cmp
pushf
fisttpl
outsl
xor
mov
std
in
popa
mov
mov
xor
dec
aam
mov
dec
push
jl
mov
pop
js
scas
imull
push
into
movsl
fs
pusha
test
shlb
stos
hlt
shlb
jb
jecxz
adc
fisubl
ja
xchg
rcrl
xchg
push
mov
pop
jne
push
pop
cmp
jmp
cmpsl
xchg
sbb
ret
adcb
xlat
sub
ss
cld
aaa
add
add
push
mov
ret
sbb
xor
mov
jo
fisubrl
arpl
xchg
lahf
xchg
ja
cmp
ret
loopne
dec
fsub
inc
dec
jne
sti
jo
xor
lcall
pop
loop
cmp
into
sub
movzbl
add
fistpll
push
jg
dec
in
inc
lods
mov
mov
pop
adc
adc
enter
sbb
jg
jo
mov
jnp
mov
jo
lahf
enter
mov
mov
clc
inc
pop
test
stc
or
pop
push
movsb
cwtl
push
int3
mov
jb
leave
mov
fstpl
mov
lcall
imul
lock
inc
test
daa
lea
pusha
mov
mov
outsb
push
lea
movsl
fs
repz
dec
mov
lock
out
add
sbb
loop
or
xor
xchg
xor
pop
mov
test
and
js
add
sbb
mov
dec
dec
xchg
jo
mul
cmp
push
push
mov
or
jno
xor
sti
lahf
shrl
jmp
jp
pop
lahf
pop
ret
mov
mov
and
lcall
jne
imul
lods
insl
lret
xchg
mov
out
push
mov
jl
fwait
cmpsl
into
mov
jl
xchg
int
int
in
or
cmp
jo
cwtl
mov
loop
ja
dec
scas
sahf
dec
mov
xchg
and
pop
repnz
cld
mov
insl
inc
in
inc
out
or
xor
addr16
rorb
xor
mov
sub
test
clc
stos
outsb
call
fwait
aas
data16
pop
enter
pop
cmp
add
pop
mov
mov
lea
add
inc
sbbl
loope,pn
xchg
pusha
idiv
andl
out
fsubrs
mov
sarb
cmpsb
cmp
dec
fwait
mov
and
xchg
test
clc
xor
enter
daa
int
aas
js
pop
sbb
pop
fildl
in
or
jmp
icebp
push
mov
in
jo
jp
pushl
push
loop
out
mov
fidivrs
insb
adc
adc
call
andb
sbb
or
leave
imul
mov
aaa
lea
movsl
ds
sub
mov
jne
cltd
sahf
movb
stc
imul
test
mov
popf
fwait
xor
sbb
jns
rcll
jmp
cmp
pop
lret
jbe
movsl
out
dec
xorl
loope
fidivrl
test
subb
inc
mov
xor
add
addl
mov
sbb
ret
adc
xorb
stos
je
lcall
mov
jmp
pushf
adc
xchg
jb
outsl
mov
inc
jbe
dec
pop
mov
ret
xor
test
sbb
in
aam
cmp
and
add
shrb
dec
xor
popa
rclb
sub
andb
sarl
xchg
push
ss
inc
popf
lds
lods
and
sbb
add
mov
leave
xchg
fcmovne
das
out
lret
xor
test
add
aam
sti
pop
dec
sub
mov
mov
push
dec
push
jle
jo
and
or
sub
xlat
jo
adc
add
inc
mov
mov
cmp
push
or
inc
cmpl
xchg
shrl
lcall
ja
xchg
inc
into
and
movsl
repnz
sbb
mov
loopne
aad
sbb
jmp
outsb
clc
adc
mov
sub
jge
insb
xlat
loop
inc
push
rol
lea
outsl
rcrb
pop
daa
das
mov
dec
adc
pop
ret
aaa
sbb
in
cmpsl
arpl
test
hlt
test
lahf
test
mov
arpl
inc
adc
jg
mov
adc
call
int3
repz
hlt
xchg
mov
flds
loope
push
stc
in
xchg
bound
stos
jle
rcl
dec
adc
outsb
fstl
and
mov
add
shrl
xchg
sub
sbb
packsswb
minps
jecxz
sbb
mov
das
mov
scas
jmp
repz
std
push
inc
shll
and
add
imul
jbe
and
xchg
and
push
repnz
mov
adc
dec
mov
dec
sbb
mov
jo
cmp
dec
jno
xor
push
mov
push
jbe
mov
test
fwait
jecxz
outsl
cmp
xchg
push
xchg
sbb
sbb
rorl
mov
push
sti
mov
sbb
lods
cmp
mov
jge
cld
push
in
mov
and
dec
push
test
jbe
pop
ljmp
scas
inc
xchg
repnz
adc
movsb
jne
or
pop
xchg
add
push
outsb
lock
loopne
or
hlt
push
mov
aaa
repnz
mov
insb
inc
insb
mov
mov
mov
xchg
out
rcl
popf
mov
or
iret
or
pop
fimull
gs
add
loopne
ljmp
js
push
cmpsl
add
xchg
cli
fcmovbe
sbb
leave
ret
out
and
jno
pop
dec
ds
cmp
sbb
push
incl
lods
outsl
mov
or
mov
scas
leave
cmp
mov
and
add
movsb
sahf
cmp
adc
push
fidivrs
stos
push
pop
xchg
imul
setg
stc
mov
inc
mov
imul
sbbl
xchg
lods
call
push
iret
mov
dec
clc
sbb
cmp
leave
mov
out
neg
xchg
mov
cli
xor
or
mov
cwtl
aam
call
inc
pop
pop
sub
sbb
ljmp
inc
cwtl
sarl
test
icebp
pop
ds
adc
xlat
mov
xor
movsb
outsb
fcmovnu
js
push
jmp
push
xor
icebp
dec
jns,pt
hlt
cltd
test
out
in
rolb
add
lcall
ss
push
cmpb
inc
mov
sbb
pop
loope
sbb
sub
sbb
mov
imul
sub
mov
push
lahf
mov
loope
aad
in
sti
cs
leave
std
pop
cs
test
out
mov
push
popf
scas
adc
out
push
jmp
cmpsl
adc
std
mov
lds
xchg
pop
mov
call
mov
scas
iret
divb
cltd
sub
push
xchg
jo
out
adc
lret
f2xm1
xor
add
decb
dec
xor
push
adc
dec
mov
lods
in
inc
dec
imul
xchg
and
sbb
xor
imul
xlat
das
inc
clc
aam
popfw
notl
sub
mov
and
jle
adc
cli
mov
pusha
inc
xor
outsb
and
add
or
jl
xor
sbb
out
movsb
ljmp
movsb
mov
dec
adc
out
mov
test
insl
sbb
out
and
test
sub
clc
sbb
std
inc
fldenv
and
and
test
jmp
add
cmp
lret
int3
daa
paddb
addb
je
inc
mov
ret
inc
in
int3
in
adc
shrl
mov
lods
or
mov
daa
and
mov
cmpsb
ja
inc
add
jns
jno
outsl
and
cmpsl
out
mov
pop
das
dec
or
add
xchg
andb
mov
xor
test
inc
pop
dec
gs
xchg
adc
jno
inc
loope
and
and
loopne
mov
sub
movsb
xor
pusha
iret
das
dec
negl
pop
mov
mov
cli
cmp
pop
cmp
pop
adc
xchg
fwait
pop
ljmp
sub
xorl
inc
xor
je
lea
test
inc
xchg
dec
mov
mov
popf
lods
xchg
jle
fs
leave
jo
in
jae
jne
inc
mov
js
push
je
push
adc
or
aas
das
dec
pop
mov
cmp
inc
cmp
pop
or
rcrl
jmp
dec
jmp
jne
pop
lods
xchg
data16
cld
pop
pop
push
mov
js
push
stos
lret
pop
and
push
lock
das
ficoms
dec
fnstsw
shrb
jbe
in
lods
movsl
aad
dec
xor
dec
ds
mov
imul
imul
lret
dec
fidivrs
popa
loope
pop
sbb
or
pop
ds
push
or
sub
and
in
sub
jmp
push
push
mov
mov
repz
loopne
mov
fdivl
lret
lret
inc
rcrl
xchg
pop
pusha
jp
mov
mov
popf
bound
andl
add
fildl
decb
cli
mov
clc
pop
push
xchg
mov
xchg
xchg
lret
neg
dec
fcoml
cli
icebp
mov
pop
or
jle
jmp
aaa
int3
in
jp
add
rorl
jbe
mov
cmp
push
mov
outsl
cmpsb
pop
adc
fiadds
sbb
sub
adc
mov
xchg
arpl
ss
dec
insl
mov
push
sbbb
inc
jo
xchg
iret
inc
sub
test
mov
iret
or
jns
repnz
test
and
xchg
gs
push
ja
add
cmp
outsb
and
adc
or
ljmp
es
les
push
rcrl
popa
fs
mov
mov
es
cmpsb
xor
in
inc
push
fistpll
xor
movsl
fdiv
arpl
push
cmp
mov
movsb
mov
xor
je
jmp
in
sbb
call
inc
dec
test
shll
mov
fidivl
arpl
ret
out
inc
xchg
sbbb
mov
mov
xor
sbbl
xor
pop
clc
lock
sub
rorl
and
repz
clc
es
rcll
push
pop
xchg
sub
int
ljmp
dec
fildll
fwait
sub
dec
out
cmp
daa
or
mov
test
inc
cmp
push
sub
lret
insl
jmp
lcall
push
in
xor
mov
jnp
mov
sub
inc
mov
xchg
push
fstps
mov
xchg
cli
pop
repnz
lret
lods
setbe
stos
or
out
and
lcall
adc
inc
lret
js
orb
rcrl
insl
add
push
pop
out
repz
push
lret
fcomip
shr
xor
sub
jmp
jno
push
push
imull
int3
mov
insb
push
popf
sbb
mov
insl
push
cld
test
push
sub
pop
pusha
outsl
sti
mov
jl
pop
mov
xlat
rcl
push
in
inc
call
sahf
pop
scas
lds
and
xchg
xchg
pop
mov
data16
and
cmpl
dec
lea
arpl
jl
push
pop
in
imul
in
popf
xchg
add
xchg
fwait
scas
repz
ret
cmp
xchg
dec
dec
pop
dec
mov
xor
pushf
cmpsl
sbb
hlt
mov
inc
and
pushf
push
lea
ds
sbb
movsl
mov
rcll
mov
jo
in
scas
cltd
es
inc
nop
mov
fwait
lods
jno
std
stc
pushf
test
int
ss
mov
or
add
lods
cmp
or
gs
sub
cmp
cli
inc
fs
mov
mov
push
icebp
dec
cli
cltd
xor
mov
imul
jmp
stos
mov
push
dec
fwait
push
addb
nop
mov
out
add
jle
or
mov
and
jecxz
divb
mov
aaa
cwtl
iret
arpl
cs
dec
sbb
cmp
aaa
push
fwait
mov
and
stc
inc
pop
popf
jne
adc
push
add
sub
stc
add
outsl
lock
stos
ret
add
mov
mov
add
and
push
add
sbb
inc
ret
or
inc
jo
dec
dec
loopne
mov
call
test
shll
mov
js
pop
push
ljmp
stc
fistpl
out
jnp
pop
inc
loopne
and
dec
aas
xchg
xchg
cld
cmp
inc
jp
enter
cmp
in
mov
push
lret
xor
inc
dec
loopne
mov
loopne
mov
xor
mov
or
pop
and
movsl
pop
jp
mov
sahf
inc
mov
sbb
scas
mov
sub
fstpl
loopne
push
arpl
mov
xchg
lods
mov
ud2
sub
or
jecxz,pn
xchg
xor
jecxz
push
dec
mov
dec
repnz
and
mov
push
mov
adc
mov
xchg
mov
sarl
mov
mov
pop
sbb
sti
ret
inc
out
test
lahf
mov
test
dec
in
stc
push
sub
mov
sbb
sub
xor
push
jb
pop
les
sahf
sub
arpl
ja
or
dec
add
cld
cmpsb
push
aad
mov
push
xchg
mov
test
sbb
notb
scas
cmove
mov
fidivrl
cmp
mov
xchg
mov
loope
and
xchg
ljmp
dec
jl
sbb
popa
cmpsl
ja
pop
xchg
sub
mov
xor
loopne
in
mov
xor
notb
pop
xchg
jo
add
add
in
jae
nop
nop
cli
inc
test
ret
xor
xor
in
push
push
movl
dec
nop
icebp
and
mov
cmp
mov
cmp
outsl
inc
leave
je
push
mull
pop
lret
cmp
mov
stos
push
or
shlb
lahf
movsl
pop
push
mulb
sbb
fdivr
bound
int3
aad
daa
ja
subb
mov
xchg
mov
or
xchg
out
loop
int
daa
lods
jg
pop
test
mov
bound
jo
rolb
ss
pop
inc
or
and
shrb
hlt
sub
jnp
pop
les
jg
loopne
mov
dec
sbb
mov
clc
mov
pop
jp
rcrl
outsb
jae
xor
add
or
adc
rolb
rolb
adc
stc
pop
jne
int3
mov
data16
out
push
mov
lods
icebp
mov
dec
jae
aas
and
cmc
or
push
addl
ret
push
push
mov
cmp
mov
testl
pop
mov
push
inc
loope
jo
minps
jl
push
push
je
inc
insb
add
mov
inc
mov
pusha
mov
add
adc
xchg
xor
inc
loope
mov
shl
int
jge
jge
add
dec
das
mov
push
jecxz
add
addr16
mov
cs
in
das
xchg
lret
pop
scas
push
aam
outsl
aad
popf
push
in
mov
inc
in
scas
push
mov
sub
in
push
inc
add
lcall
or
jmp
aas
sub
push
or
pop
loopne
gs
push
pop
sbb
xchg
nop
inc
push
jp
xchg
jbe
ficomps
sbb
or
pop
sarb
popa
div
inc
and
dec
hlt
mov
sbb
jge
fidivl
mov
adc
lea
aad
sub
negl
subl
daa
adc
and
push
push
iret
or
mov
into
in
pusha
xor
fnstsw
push
cmp
std
ret
sbbb
fdivp
outsb
test
cmp
inc
cltd
inc
mov
jp
aam
notb
cwtl
int3
aas
ja
into
mov
iret
cmp
or
xchg
sahf
into
cmp
ljmp
push
clc
fwait
mov
popf
pop
or
mov
js
insl
popf
fdivrl
xchg
cmp
jnp
in
jne
test
addr16
sub
sbb
dec
inc
sbb
in
daa
loope
pop
nop
push
inc
jecxz
add
ss
cmp
icebp
rorl
js
imul
cmp
int3
add
inc
sbb
xchg
mov
cmpsl
or
dec
int
in
rolb
mov
push
sub
xor
xchg
movsb
nop
test
mov
pop
inc
aaa
mov
mov
loopne
fdivrl
pop
lods
orb
pop
pop
clc
fmull
push
inc
clc
movsl
or
test
add
sub
push
sub
and
ficomps
in
imul
ds
in
popf
mov
fidivrs
jbe
test
mov
mov
cmp
inc
repz
nop
or
mov
dec
or
sub
jo
push
mov
out
mov
cmc
scas
push
fwait
stos
test
inc
xor
mov
fdiv
xor
pusha
inc
push
xchg
lods
arpl
fwait
jp
cmp
xchg
arpl
cmc
fs
popa
cmp
ljmp
scas
pop
les
ret
inc
in
push
or
lcall
adc
es
mov
scas
pop
cmp
xchg
aaa
idiv
sub
lcall
shr
imul
or
xchg
daa
fcoms
mov
cmc
repz
add
or
sbb
jb
rorl
push
mov
xchg
ja
xor
sub
jg
rcrl
in
sub
mov
mov
mov
dec
lret
scas
test
dec
test
negb
inc
mov
dec
data16
push
push
nop
mov
test
cmpsw
push
jge
xor
cmpsl
and
or
jo
sub
cli
mov
ljmp
popa
into
lcall
xchg
ud2
mov
jno
movsl
test
mov
fiaddl
jno
cld
push
mov
mov
inc
mov
inc
push
mov
sbb
adc
mov
iret
ds
lret
pop
mov
inc
xchg
lock
adc
sbb
mov
push
icebp
jge
aad
mov
pusha
push
loopne
les
push
fcmovnu
sub
stos
cmc
pop
fs
jbe
dec
test
ds
clc
inc
jnp
xchg
call
sti
lea
and
dec
jl
hlt
data16
or
jnp
jb
mov
addb
cmpl
jns
jmp
dec
stc
leave
sbb
les
or
jp
mov
stos
adcl
and
enter
fimull
scas
mov
and
add
mov
cmc
and
push
js
in
mov
pop
mov
mov
test
addr16
pusha
cmpsl
jecxz
rcll
pop
or
scas
or
cmp
das
scas
add
lds
movd
repz
inc
and
mov
pop
enter
decb
ss
cwtl
aad
cs
mov
fsubl
and
and
test
pop
add
insl
sbb
mov
enter
sarb
push
push
jns
sub
mov
int3
imul
cmpsb
testb
push
div
pushf
jns
clc
fcoms
fdivrs
add
xchg
fimull
cmp
or
lcall
mov
sti
mov
jae
jne
push
cmp
jecxz
ljmp
inc
clc
cmpsb
xor
in
rcl
lret
sbb
ja
sub
inc
pop
xchg
leave
ret
fmul
inc
sub
daa
sti
daa
stos
out
jecxz
xlat
stos
mov
push
or
sti
leave
stos
lods
push
adc
sbb
pop
sub
fs
xchg
popa
cmp
pop
subl
outsl
arpl
lcall
cmpsl
leave
ret
imul
adc
outsb
adc
mov
sbb
popf
gs
int
jge
sub
ret
push
pop
pop
fldenv
pop
lea
inc
enter
pop
or
xor
adc
and
add
mov
and
and
pop
xor
jmp
push
sub
xor
or
jp
stos
into
lcall
xchg
sub
sti
or
add
cmp
imul
xchg
roll
inc
sbb
sbb
or
inc
pop
mov
cmp
fmull
lds
pop
into
dec
mov
add
popa
lret
lea
gs
inc
add
repz
int
lahf
les
int
jnp
repnz
jno
cmc
ret
jg
lcall
aas
daa
rcrb
loopne
dec
outsl
popa
jae
xchg
mov
push
mov
push
and
push
jns
lea
in
xor
mov
adc
sarl
fldenv
cmpsb
in
repz
ftst
push
nop
and
popa
icebp
push
push
outsb
mov
movsb
call
push
inc
fisubs
dec
iret
fildl
or
mov
scas
pop
imul
leave
adc
ss
mov
aad
stc
cli
fdivrl
jecxz
or
cmp
cld
mulb
lods
or
and
imul
imul
rorb
ret
jecxz
icebp
jne
inc
lret
sub
mov
cmp
xchg
or
pusha
call
sbb
xor
into
insl
push
mov
sahf
insb
mov
adcb
mov
fldcw
cmp
pop
stos
mov
mov
in
jae
rorb
jg
hlt
adc
inc
aaa
xchg
jge
scas
fldl
pop
add
aaa
cltd
jp
fwait
or
jae
sbb
cs
sub
push
int3
and
and
in
ret
adc
cmpb
or
sub
fwait
inc
fisttpll
mov
jo
add
jb
incb
jmp
pop
inc
icebp
add
and
mov
cltd
les
and
mov
dec
adc
outsb
jle
add
mov
decl
mov
sbb
sbb
cmp
sub
jnp
add
mov
xchg
enter
enter
or
jmp
adc
pop
push
cltd
dec
mov
and
pop
jo
movsl
sub
xchg
popf
push
rcr
ds
adc
xchg
ds
push
aam
lods
outsl
popa
or
dec
mov
popa
fidivrs
pop
sbb
or
mov
stc
push
adc
adcl
insb
add
cli
jmp
push
xchg
sbb
mov
mov
jbe
popa
add
imul
push
fdivrs
cmp
pop
ss
pushl
adc
and
sub
jb
mov
or
xor
pop
inc
mov
pop
or
in
adc
fwait
mov
mov
es
jecxz
add
roll
jbe
out
in
adc
test
push
lods
pop
jge
jg
js
loopne
xor
sub
jnp
jnp
lods
add
out
add
inc
sbb
lret
arpl
imul
mov
js
sbb
inc
testb
jp
imul
out
jge
repz
and
idivb
adc
jle
loop
xchg
ljmp
dec
sbb
mov
pusha
lret
sub
cli
pushf
mov
mov
aam
ss
mov
xchg
mov
xchg
je
xchg
incb
jns
pop
bound
jle
daa
pop
out
inc
scas
mov
jno
cmp
xchg
movsl
xchg
shlb
xchg
lahf
mov
loopne
inc
push
mov
pop
cmp
dec
rorl
push
loope
dec
and
inc
testl
dec
sub
adc
fs
lock
das
mov
push
cwtl
ja
imul
ret
or
hlt
sbb
adc
pop
pop
and
aas
loope
mov
loop
inc
mov
sub
mov
std
sub
aad
xchg
loop
sub
test
arpl
xchg
addb
cmp
add
sbb
sub
push
cwtl
push
mov
push
adc
ljmp
xlat
xor
in
fistpl
pusha
jnp
sbb
shrd
jne
mov
push
xorb
dec
aas
dec
dec
hlt
in
push
repnz
ret
push
data16
sbbb
and
loope
mov
inc
insb
jmp
std
fsubrs
adc
flds
sbb
hlt
ljmp
test
nop
fbld
or
movsl
xlat
or
addl
cmp
sbb
sbb
pushf
fnstsw
scas
mov
ret
push
jg
movaps
dec
mov
and
mov
dec
adc
mov
or
cmp
daa
ja
rcrb
mov
movsb
cwtl
lahf
out
shr
jl
sbb
into
cmpsb
jmp
popa
push
loop
shll
inc
mov
int
mov
in
jo
clc
adc
or
dec
and
addl
stos
pop
repnz
enter
out
out
incb
xchg
cmpb
test
add
and
sub
ret
jle
push
fisttps
push
push
mov
testl
fcoml
test
add
repz
ret
and
adc
lcall
test
or
cmp
imul
dec
ljmp
dec
int3
jge
xor
xor
push
sbb
sbb
mov
int3
xlat
inc
or
mov
hlt
lock
adc
xchg
adc
xor
push
xor
jns
insb
push
pop
pop
shll
sti
jbe
out
adc
sbb
push
imul
xchg
mov
or
jne
cmp
cs
push
fwait
adc
xor
dec
mov
shrl
test
push
shlb
or
sbb
jmp
hlt
dec
jns
mov
mov
inc
aaa
ret
pushf
std
pusha
push
add
cmp
sbb
add
adc
sub
sahf
pop
sub
outsb
out
xor
sbb
dec
jp
pusha
pop
sub
cmp
pop
pop
in
add
adc
inc
and
jmp
fisubs
xchg
outsl
insb
push
sub
add
jo
inc
lods
dec
or
xor
outsb
mov
das
aas
adc
lcall
jl
push
push
mov
mov
bound
inc
stos
pop
lods
subl
push
pop
insl
mov
jae
jle
sub
mov
xor
cs
cs
mov
mov
test
mov
rcll
jmp
aam
nop
mov
inc
lahf
or
ja
dec
loopne
mov
xor
cmp
mov
add
in
imul
inc
inc
mov
sub
loope
out
std
mov
dec
jb
add
push
fistl
mov
adc
loop
insb
adc
call
push
pop
sti
push
sbb
dec
dec
add
push
iret
push
jns
jne
cli
push
xchg
testb
or
pop
iret
and
repz
call
mov
add
jbe
sbb
daa
push
fcmovne
fistps
enter
roll
mov
shrb
repnz
mov
in
mov
xor
xchg
jae
call
lods
imul
aad
aaa
jne
lods
pop
mov
out
daa
test
in
adc
mov
enter
mov
pop
loope
ljmp
inc
enter
fmull
stos
cs
mov
outsl
adc
pop
fs
fsubp
shll
rcrb
dec
push
negb
sbb
cli
cwtl
lods
inc
or
fnsave
sbbl
mov
jge
in
xchg
lahf
pop
shlb
out
adc
ljmp
jns
xchg
into
aaa
lock
mov
in
adc
mov
adc
add
fidivs
or
xor
mov
enter
cmc
push
inc
jnp
hlt
push
xbegin
loope
cltd
push
sahf
ds
iret
inc
cmpxchg8b
lret
stos
or
mov
push
lds
pop
fxtract
jg
or
or
ret
mov
mov
out
out
adc
clc
adc
andb
add
test
mov
dec
push
or
nop
xor
push
inc
imul
or
or
and
xchg
pop
rcl
ss
scas
jno
sbb
and
jne
mov
jno
push
mov
lods
add
imul
pop
scas
push
mov
daa
sarb
xor
xor
les
dec
add
mov
pop
sbb
dec
push
mov
test
pushf
stos
paddsb
push
push
mov
push
cli
dec
je
add
lahf
inc
cld
or
sbb
ja
or
movsl
and
jle
jbe
rcll
icebp
test
sbb
shll
add
sbb
rcrb
cmp
xchg
jp
in
lea
movsl
lret
int3
lret
inc
jae
enter
loop
or
sbbb
push
in
inc
jge
xchg
movl
sbb
std
aad
sub
inc
aas
repz
out
dec
and
sahf
mov
dec
pusha
mov
adc
cmp
pop
sar
inc
jo
insb
insl
mov
mov
cwtl
ds
or
sbb
pop
push
repz
in
sbbb
gs
iret
into
push
adc
xchg
addb
cli
push
jae
out
sub
lock
sbb
psrld
inc
inc
sbb
mov
sub
ret
mov
mov
enter
loop
orb
cwtl
jbe
fimull
pop
movsb
adc
lds
out
testb
call
int
push
dec
loop
push
xor
and
mov
repnz
sbb
imul
mov
popa
fwait
xlat
xchg
sar
das
dec
and
gs
pop
jmp
decl
or
testl
arpl
xor
daa
int
fstpl
out
jl
adc
into
das
and
test
xor
pop
daa
or
adc
jno
push
aam
ss
shll
adc
mov
out
xlat
ret
dec
stc
les
idivb
push
out
dec
or
sbb
shrl
push
and
jne
repnz
push
ljmp
rorl
movsb
add
ror
sahf
lea
sub
sbb
call
push
les
adc
test
mov
ja
cmp
push
xchg
loopne
shrl
sarb
orl
or
sub
fisttpl
mov
xchg
add
jmp
push
cmp
and
add
sets
popa
jle
pop
stc
add
or
fwait
in
pop
mov
and
xchg
adc
xchg
ljmp
loop
es
push
das
mov
lods
popf
call
pop
stos
into
in
jmp
mov
loop
sub
jmp
in
xor
or
int3
xchg
andb
pop
mov
inc
push
ret
cld
in
inc
and
ficomps
and
adc
mov
fs
mov
in
out
sub
pop
cs
push
daa
xor
fcmovbe
mov
sub
out
fildll
sbb
sub
sbb
decl
jbe
add
daa
iret
cltd
inc
cmc
inc
jmp
icebp
sarl
sbb
mov
fnsave
jge
adc
mov
andl
mov
imul
jno
or
sbb
pop
jecxz
xchg
or
popf
test
es
ret
and
fidivs
lods
adc
lret
dec
jl
pop
fucomip
adc
js
jle
and
add
rcr
lcall
adc
xchg
daa
inc
dec
dec
shrb
aaa
xor
adc
in
sahf
mov
icebp
out
mov
or
or
and
jno
lds
lds
pop
ret
int3
ret
cmp
push
fidivrl
popf
out
xchg
sub
leave
ja
dec
mov
and
mov
stc
xor
mov
ja
in
addl
dec
inc
dec
lahf
lods
adc
hlt
mov
lods
fadds
or
lahf
jns
je
in
iret
inc
xchg
aad
es
and
js
loope
int3
inc
adc
nop
mov
testb
and
mov
jecxz
outsl
das
lock
mov
lods
repz
lds
pop
cmpsb
imul
clc
xlat
mov
pop
dec
jb
cmp
push
push
call
enter
mov
addr16
xchg
movsb
fxch
inc
mov
fidivs
mov
out
xlat
jl
fwait
ja
nop
add
idivl
insl
sub
cmpsl
dec
ret
popa
lds
repz
sbb
rep
ror
ljmp
in
sbb
sbb
pushf
lret
add
cld
mov
inc
xchg
lahf
inc
push
shl
ds
subl
mov
lea
into
shlb
mov
ret
rcrb
mov
sti
cmpsb
jl
adc
ljmp
mov
test
or
mov
xchg
mov
cmp
fs
inc
and
leave
imul
inc
add
sbb
or
mov
lods
dec
pop
test
push
inc
mov
push
movsl
sti
xchg
addr16
xchg
mov
arpl
dec
cmp
push
jmp
test
icebp
daa
repnz
shll
push
jne
out
or
adc
mov
mov
sbb
fildl
add
and
pop
ss
mov
pop
je
lds
movsl
cmp
cli
scas
push
mov
repz
adc
pop
lahf
add
loope
inc
dec
jg
mov
push
ds
add
xchg
or
jg
adc
and
cs
imul
inc
addl
mov
mov
pop
in
jnp
cwtl
mov
xchg
xor
dec
add
loopne
cmp
fsts
mov
scas
pop
dec
lahf
outsl
test
ds
fdivp
shll
inc
xchg
inc
sub
test
xchg
sti
jbe
mov
push
test
sahf
jb
lcall
repz
movsb
sub
negl
imul
dec
add
jae
call
mov
xchg
inc
test
repnz
shrb
das
sbb
outsl
inc
fld
and
pusha
and
dec
mov
cli
xorb
adc
popf
xlat
outsb
jecxz
mov
and
std
xor
inc
pop
xor
xor
push
data16
push
push
popf
popa
add
pop
dec
shll
fnstcw
ljmp
xchg
fisttpll
ret
fdivr
loop
lcall
fnsave
xchg
test
push
or
in
iret
or
mov
jne
mov
mov
xorb
jne
push
dec
lock
xchg
push
cmpb
and
andb
loopne
orl
stos
xchg
push
aas
mov
mov
cli
xchg
out
push
xchg
xchg
decb
sub
xchg
dec
dec
xor
and
cld
or
push
or
xor
enter
pop
xchg
enter
dec
das
fsubp
ja
loop
lret
fldl
adc
aad
jmp
cmpsb
dec
xchg
les
cs
fmul
jmp
mov
pop
pushf
pop
xchg
xor
sti
xor
icebp
stos
mov
popl
mov
or
mov
stos
sub
test
cmp
push
or
int3
or
mov
mov
stos
cmp
insl
jnp
repnz
or
in
cwtl
mov
rcll
scas
sbb
push
push
inc
into
cmpsb
ljmp
sarl
push
or
dec
lret
pop
mov
loopne
jns
lahf
sarl
imulb
mov
push
sbb
lret
inc
gs
lret
add
sub
stc
aam
test
fsubrl
xor
dec
and
xor
lret
lcall
jns
stc
lcall
fstpt
sub
pop
out
xchg
test
adc
sbb
mov
push
cmpb
fldl
ja
repnz
sbb
or
test
mov
dec
jecxz
scas
test
sub
stos
add
or
xchg
inc
push
mov
cli
aaa
inc
test
mov
push
sahf
lcall
mov
gs
sti
cwtl
pop
or
jle
popf
inc
and
movsl
out
dec
xchg
ljmp
arpl
std
mov
mov
movsl
sbb
push
xchg
shll
push
add
mov
push
aad
mov
data16
push
sub
and
test
adc
lock
int3
movsb
es
cmp
lds
mov
push
add
and
not
sbbl
ja
mov
mov
sbb
jb
out
sbb
xchg
xchg
pushf
mov
inc
test
or
stos
arpl
lret
jmp
rolb
mov
test
sbb
pop
pop
loopne
dec
loope
in
scas
push
iret
stos
das
out
pavgb
inc
icebp
jge
or
rol
imul
adc
das
stos
or
add
push
test
pop
jne
pop
cltd
or
imul
push
dec
inc
cmp
xchg
xor
xor
push
xor
adc
cmp
pop
dec
mov
mov
ss
cmp
jb
movsb
fdivp
and
lock
popf
test
sub
test
push
stos
imul
insl
je
aam
xchg
out
sbb
push
cmp
sbb
outsl
mov
movsb
nop
cmp
xorb
addl
jbe
and
adc
in
test
push
test
test
imul
add
add
sti
sti
cmp
pop
or
jmp
leave
push
and
repnz
shrb
pop
jl
jne
xchg
in
xor
pushf
aas
inc
dec
ret
test
mov
push
push
add
lea
push
shlb
aam
sti
aam
lock
xchg
fnstsw
imul
lret
ds
insl
fs
push
mov
adcb
mov
dec
loop
fwait
enter
mov
xchg
jnp
or
add
jns
pop
inc
popf
mov
ljmp
mov
imul
mov
testl
les
mov
mov
sbb
cmp
insl
push
scas
lods
repz
test
add
add
imul
mov
repz
lds
push
sar
dec
jo
lret
adc
or
imulb
fs
pop
pop
lcall
out
clc
imul
cmp
sti
enter
roll
sub
adc
sti
sbb
push
fs
cs
or
addr16
mov
cmpsb
out
push
adc
sbb
loop,pn
pop
aaa
ffree
push
cmp
int
or
ljmp
out
and
sub
cmp
ffreep
sub
or
xorl
stos
adc
lock
jae
test
sti
mov
add
arpl
div
rorb
push
lret
dec
push
icebp
repz
js
in
lret
and
xor
dec
sub
cmp
imul
fs
icebp
dec
stos
dec
daa
sbb
and
xchg
cmp
adc
lods
push
shrl
cmp
mov
call
jle
das
sub
jge
stos
fnstcw
outsl
xor
lret
and
lods
or
lret
icebp
or
orl
lods
int3
nop
lret
mov
inc
inc
xor
pop
jae
pop
jmp
xchg
xchg
mov
push
rolb
out
lock
pop
mov
insl
cmp
lret
sbbl
add
cmpsl
pusha
into
popf
xlat
add
sub
ljmp
push
mov
mov
sub
cli
jle
push
in
xor
rcrb
adc
out
rcl
addr16
mov
das
jmp
je
aas
sub
popa
jnp
pop
xchg
aas
cmp
dec
pop
enter
std
aad
jne
rclb
mov
cmp
imul
ret
nop
pop
sub
push
cli
insb
mov
stc
jb
jecxz
xor
dec
sub
idivl
mov
mov
ja
das
xor
dec
cmc
adc
fisubs
add
mov
mov
mov
xor
push
int
jg
dec
into
test
pushf
mov
mov
je
push
jne
loop
xchg
out
das
mov
xchg
clc
lods
xor
bnd
cmp
les
addr16
les
inc
jmp
inc
adc
mov
xchg
pop
mov
in
test
or
mov
mov
add
push
movsl
popa
orb
sbb
outsb
or
mov
sbb
in
or
and
push
aaa
outsb
add
sub
insb
js
sbb
push
mov
lcall
jecxz
movsl
insb
xor
jl
test
pop
inc
ret
mov
inc
inc
mov
push
mov
jecxz
mov
rorl
inc
jae
add
xchg
sbbb
decb
iret
nop
ror
inc
lods
adc
nop
test
inc
aad
out
inc
ljmp
pop
idiv
lret
push
rcrl
mov
movsb
loope
aaa
mov
xchg
ret
cli
jle
mov
iret
or
aas
or
test
xor
push
pop
adc
adc
xor
add
add
lret
scas
int
push
inc
xchg
add
mov
lret
and
popf
movsb
ljmp
adc
pop
sub
cmp
enter
push
push
dec
dec
call
mov
in
or
mov
lods
xor
inc
mov
stos
and
inc
adc
sbb
mov
fdivrl
xchg
call
cmpsl
aaa
aam
das
jne
pop
xor
or
dec
sahf
push
scas
fildl
xchg
sbb
sbb
insl
mov
arpl
cmp
stc
subb
test
lahf
lea
out
jb
lahf
sbb
orl
test
jmp
call
xor
ret
std
add
cmpb
and
add
sub
insb
addr16
jge
lret
pop
mov
xchg
inc
sti
sbb
cwtl
inc
inc
xchg
xchg
insl
xchg
fcomi
cmc
push
and
dec
mov
cmp
int
or
push
sti
divl
mov
into
jmp
jns
fidivrl
icebp
lcall
addr16
hlt
stos
cmpsb
push
sub
popa
into
stos
xlat
jbe
adc
push
xor
cmp
fbstp
pop
mov
or
sub
jno
add
daa
cmpsb
lods
xor
mov
movb
cmp
je
mov
pop
jecxz
insb
xor
pop
popf
mov
xor
rolb
mov
add
xor
test
pushf
ds
mov
sahf
lcall
xlat
inc
jmp
imul
loop
bound
outsb
xor
adc
push
mov
inc
lea
jle
test
out
xchg
mov
insl
pop
mov
dec
sbb
pop
scas
mov
fdivrl
push
fstps
sub
aad
ss
sbb
fisubs
sub
scas
jge
icebp
mov
iret
addr16
cmc
out
test
stc
mov
fdivrl
scas
pop
pushf
sub
jbe
xor
sub
lea
jb
mov
cli
add
mov
cli
pop
add
mov
adc
das
std
roll
cmc
inc
cmp
lods
cmp
jae
andl
outsl
je
cs
aaa
test
push
mov
xchg
or
lcall
xchg
pop
jg
test
adc
aam
inc
xchg
loopne
es
xchg
mov
dec
add
mov
movsl
xor
mov
ret
in
cmpb
cltd
mov
orb
fstps
das
in
cltd
xchg
inc
leave
xor
hlt
rol
xlat
adc
lret
mov
mov
cmp
inc
pop
push
shl
sbb
push
or
xor
xchg
or
or
fists
js
stos
jne
ret
dec
mov
adc
int3
into
and
rolb
cmp
jno
mov
lcall
test
cmp
jge
mov
add
sbbl
nop
pop
rcl
lea
xor
mov
bound
push
mov
mov
mov
outsl
ds
mov
lret
push
pop
sarl
sub
mov
repnz
xchg
push
jl
stc
clc
add
outsl
adc
les
in
andl
call
mov
dec
repz
dec
insb
mov
sub
insb
dec
mov
in
add
hlt
sahf
dec
stc
ljmp
add
pop
xor
xchg
aam
pop
movsl
aaa
pushf
aad
sbbb
jbe
xchg
fsubl
fucomi
push
in
pop
scas
call
notl
scas
lret
movsl
add
out
dec
cmp
orl
add
mov
xchg
dec
icebp
cmpb
jb
dec
sarl
sbb
sub
add
call
mov
inc
ljmp
jg
xchg
or
push
data16
jecxz
test
lock
into
jg
inc
shrb
in
aas
push
sub
pop
push
mov
rol
push
ret
push
pop
fisubrs
or
adc
out
shl
mov
xchg
inc
push
mov
rorb
mov
xor
push
jecxz
sub
fistpll
shrb
sbb
lods
mov
mov
sbb
xchg
push
ja
cmp
les
xchg
jl
and
lods
pusha
sub
push
test
jne
inc
dec
test
xor
sbb
ret
ud0
xor
and
pop
xchg
dec
mov
cli
sub
and
js
push
mov
and
test
call
mov
std
lock
add
mov
fidivrs
pop
cmpsl
inc
jns
xlat
imul
sub
add
out
push
in
pop
sbb
xor
daa
inc
mov
test
out
and
mull
sbb
inc
fs
rcll
lret
loop
push
mov
and
cmp
shrl
xchg
adc
mov
cmp
inc
sahf
icebp
pop
sbb
dec
jns
push
push
icebp
fs
out
addr16
roll
jge
add
dec
or
ss
out
jmp
stos
inc
jmp
adc
mov
rcll
xor
mov
iret
fildll
push
mov
pop
and
pop
popf
rorl
rol
fmull
xchg
stc
pop
stos
mov
rcll
inc
pop
mov
rorb
aam
enter
addr16
movsl
test
cmp
out
stc
cmp
sub
stos
mov
jle
inc
mov
lahf
add
jo
in
outsb
jnp
mov
hlt
xchg
mov
ficoms
andl
add
pop
jl
addr16
repz
mov
jg
out
in
fimull
out
call
out
sub
lea
xor
aaa
sub
pop
pushf
mov
data16
push
adcb
cld
fsts
cs
into
shl
std
adc
adc
mov
jle
lods
loop
lds
jp
xor
or
test
add
sub
xchg
push
stos
cli
data16
mov
outsl
add
cmpb
add
dec
jne
push
adc
fistpl
mov
pop
xchg
xor
jnp
jns
lds
xor
ret
push
lods
ffreep
cmp
mov
mov
adc
cmc
imul
mov
andl
sbb
mov
sbb
lea
and
xor
movsl
sub
mov
xor
call
test
hlt
sahf
hlt
add
mov
dec
dec
add
dec
dec
xlat
xchg
vandnps
shll
notl
xor
xchg
mov
dec
mov
mov
inc
cltd
shrl
out
std
jmp
sarb
adcl
lock
xor
lahf
sti
popa
xchg
cmp
jb
dec
out
add
insb
call
and
mov
je
shll
inc
jge
mov
cs
aaa
out
mov
mov
iret
in
cmc
mov
sub
mov
cmp
les
push
sahf
push
aad
out
in
jne
push
dec
or
roll
movd
orl
adc
fldt
repz
outsb
loope
xchg
add
fistpl
sbb
lret
das
inc
mov
xchg
outsl
repnz
pop
int3
sub
fs
insl
and
adc
xor
jb
out
dec
push
or
cmp
xor
mov
pop
inc
ja
xchg
test
pop
push
imul
add
loop
loopne
jnp
gs
mov
lret
pop
into
out
enter
movsl
sub
out
js
into
ret
xchg
jae
fstl
aad
add
dec
mov
sahf
int3
loope
and
das
sbb
pop
add
movsl
and
jnp
cmp
inc
out
xchg
mov
movsl
mov
scas
mov
push
dec
ds
pop
neg
cld
lea
or
lret
out
pop
push
pop
pop
scas
rcl
in
out
inc
pop
aas
cmp
pop
pop
lret
push
cmpsb
mov
inc
repz
push
aaa
shll
or
inc
fwait
scas
lret
xor
iret
sub
or
je
rorl
jb
ja
fwait
scas
mov
movsl
mov
or
ljmp
jns
mov
mov
repnz
repnz
sti
push
mov
lods
scas
into
mov
mov
pop
cmpsl
push
xor
mov
mov
pop
ja
lods
sub
daa
xchg
dec
pop
or
jno
stc
sub
jns
mov
mov
xor
popa
inc
and
mov
push
mov
lahf
out
cld
or
ret
xchg
aam
rol
or
test
push
jnp
test
iret
adc
mov
loopne
xchg
test
stos
add
sbb
mov
add
iret
out
add
decl
pop
xor
test
add
daa
test
xchg
jl
or
pusha
fs
mov
jge
xchg
add
push
dec
pusha
test
adc
xchg
out
out
adcl
mov
je
mov
mulb
clc
pop
jns
lds
rcrb
xchg
hlt
inc
xchg
ljmp
lods
xchg
in
xrelease
enter
lret
test
push
scas
out
fdivl
cwtl
jg
outsl
pop
pxor
jns
popa
rclb
push
nop
lret
inc
pop
xchg
test
inc
sub
lea
dec
ss
adc
cmc
ficomps
or
outsl
into
push
fistpl
sti
and
add
movsl
pop
outsb
sub
inc
jnp
xlat
rolb
in
or
popa
cld
lcall
or
and
jg
pop
out
lods
aam
cld
sbb
loop
mov
cmp
ds
loopne
repz
mov
cwtl
push
add
addl
repnz
xchg
call
daa
push
pop
adc
movsb
sahf
inc
fsubrs
ret
les
pusha
xchg
sub
std
ds
mov
out
mov
cwtl
xor
xlat
mov
roll
xlat
adc
or
ja
es
cmp
shlb
jbe
inc
fwait
sbb
sub
lret
cwtl
out
dec
push
cwtl
fidivs
ss
xorl
cltd
mov
sbb
mov
inc
dec
cwtl
or
sub
mov
mov
cmc
stos
mov
dec
das
pop
cld
aaa
bnd
pop
cs
push
shll
lret
push
in
mov
or
xchg
stos
or
std
inc
jae
add
sbb
cmp
inc
mov
push
das
repnz
inc
popf
pop
mov
mov
shl
xor
push
shll
mov
sbb
ljmp
pushw
std
hlt
popa
jae
dec
enter
fsubs
ret
addr16
xchg
inc
test
ret
lods
ret
and
sahf
jmp
adc
stc
cmc
mov
fcmovnu
fcomip
clc
lea
es
push
stc
or
and
sbb
das
ret
push
pop
jne
jo
sbb
mov
xchg
std
into
cmc
cld
sbb
fdiv
in
push
mov
mov
jno
mov
add
pop
adc
add
adc
jb
cld
mov
das
and
fwait
negb
mov
mov
or
test
divl
mov
cs
jns
cmp
out
dec
lret
scas
push
add
mov
cld
testl
cmp
enter
imul
mov
mov
dec
mov
subl
pop
cmp
jb
mov
test
dec
popa
out
dec
out
out
test
mov
add
xor
jo
pop
sub
test
mov
bound
add
cmp
sbb
sbb
sub
test
jnp
pop
push
test
cmp
cwtl
loope
enter
js
sarb
lret
call
add
pop
dec
and
mov
jae
inc
dec
cli
btrl
out
jl
cmp
add
jg
mov
inc
jnp
sti
shl
inc
aam
mov
popf
jne
sub
lcall
add
and
mov
icebp
sub
sbbb
decl
push
push
bound
out
push
insl
pop
cltd
les
cmp
add
adc
push
ds
insl
cld
mov
aad
adc
push
insl
pop
jmp
out
sub
xchg
add
adcb
jl
mov
pushf
sbb
imul
add
cltd
movsl
cwtl
pushf
rorl
pop
jp
test
lret
addr16
or
mov
sub
mull
push
sub
mov
xor
call
data16
mov
push
insl
lcall
adc
mov
das
jbe
mov
jnp
xchg
loope
cmp
cs
cmp
into
inc
pop
pop
jns
aas
push
mov
aas
mov
in
icebp
sbb
test
cwtl
sub
mov
data16
jecxz
jo
inc
out
xchg
jbe
fdiv
icebp
cmp
shll
jne
mov
mov
add
int3
cmpsb
pop
das
rcl
cs
daa
movsb
cmpsb
mov
iret
in
and
movsl
pop
mov
mov
xor
xchg
bound
inc
jg
and
mov
clc
jb
cmp
sbb
add
mov
push
fisttpll
adc
xchg
mov
cmpsl
mov
in
out
cmp
int
sti
leave
sub
sub
inc
cli
push
xchg
bound
sti
mov
sub
xor
ljmp
push
jne
pop
rorb
lahf
stos
stc
xchg
aas
sar
lds
pop
adc
sti
inc
cmpb
jb
jb
call
fcoml
sbb
ljmp
ss
sub
mov
push
mov
aad
xchg
mov
jecxz
and
jp
or
mov
xor
imul
gs
mov
pop
out
stos
pop
inc
or
pop
jl
xchg
lret
popa
mov
das
test
mov
pop
daa
xor
push
int
cltd
sub
mov
mov
iret
sub
sahf
sub
decl
or
nop
lret
loop
je
mov
sbb
pop
cmpl
push
mov
outsb
adc
inc
inc
add
es
stos
repnz
in
and
fs
sub
lret
out
loope
movsb
cld
and
loopne
mov
or
adc
in
sub
nop
mov
movsl
pop
mov
cmp
addr16
mov
aaa
in
and
bound
movsl
pop
dec
addr16
cmp
cmp
adc
mov
xchg
clc
or
popf
into
call
add
push
incl
int3
lods
loope
jb
add
lea
test
shrb
adc
mov
push
test
and
adc
out
movhps
cmpsl
gs
lahf
cwtl
stc
loop
and
stc
sbb
push
dec
lret
cmpsb
lret
xchg
push
lods
push
and
cmp
jmp
xlat
lock
in
sti
shlb
bound
or
sub
and
jecxz
test
pop
clc
mov
cmp
mov
or
dec
leave
dec
add
mov
sub
xor
and
fadd
int3
xor
and
xor
repz
or
adc
xchg
mov
pop
inc
xchg
in
movsl
or
pushf
cmc
gs
fidivrs
fistpl
push
mov
sarl
adc
ror
mov
data16
mov
pop
pop
jae
hlt
in
gs
call
imul
lret
int
xor
xchg
mov
lods
or
stos
xchg
dec
jg
movsb
mov
sbb
jno
add
xchg
push
nop
dec
and
xor
fnstsw
xor
jns
je
ss
jno
sbb
test
push
icebp
and
cli
arpl
jo
repz
xor
push
adc
ljmp
rcrb
fnstcw
sub
inc
jae
mov
inc
xchg
gs
mov
and
je
mov
dec
fdivl
cltd
jne
xchg
add
add
dec
cwtl
les
into
dec
inc
lcall
roll
pushf
insb
sbb
mov
mov
pop
cmp
inc
fists
xor
pop
popf
sub
inc
stos
inc
bound
xor
mov
adc
push
and
out
lea
enter
mov
add
ret
xchg
cmpsb
or
imul
nop
in
call
and
dec
std
imul
loope
stos
mov
mov
and
pop
xchg
aad
rorl
mov
mov
stos
std
stc
sub
jecxz
mov
andb
or
test
cld
and
pop
push
mov
aas
inc
enter
loope
les
out
ds
cs
fs
in
lret
push
push
xchg
cmp
cmpsl
mov
pop
push
seto
cmp
cltd
dec
add
sbb
push
jecxz
dec
or
mov
pop
inc
leave
enter
imul
imul
mov
iret
ljmp
aam
scas
push
ss
xor
xchg
test
or
xchg
fwait
pusha
inc
inc
and
je
and
and
xchg
pushf
and
loopne
sbb
push
sbb
clc
xchg
xchg
pop
andl
lock
jl
add
push
bound
cmp
xchg
and
dec
scas
cmp
aad
mov
sub
aaa
pop
lock
stc
inc
mov
repz
add
push
dec
into
xchg
sbb
fcoml
aad
addl
sbb
push
out
push
or
dec
mov
xchg
and
jnp
xor
sarb
adc
ja
push
shll
das
adc
sbb
lcall
ficoms
leave
xor
jmp
cmpb
xor
test
mov
sbb
int
push
nop
jmp
aam
sbb
xchg
mov
adc
sbb
jg
shlb
xor
out
enter
inc
popf
cltd
xchg
add
or
cmpsb
lret
loopne
pop
enter
adc
cmpsl
or
test
loop
add
ja
xchg
inc
aas
call
idivl
imul
lock
shrl
mov
aas
mov
call
insb
xlat
movsb
cmp
mov
lret
aad
das
add
adc
jmp
arpl
pop
sti
jbe
sub
rorb
cmpsb
add
mov
mov
mov
jns
mov
inc
mov
cmp
sub
xchg
cmp
call
add
push
pop
mov
mov
jge
or
cmp
gs
fmull
gs
pop
out
rcrb
xchg
mov
addr16
or
das
xchg
and
sub
push
popf
lret
movsl
loope
repnz
pop
mov
jl
gs
dec
jg,pt
dec
loopne
mov
fnstenv
out
sbbl
icebp
adc
mov
xlat
mov
repz
pop
adc
or
mov
pop
cmp
ret
lret
ret
pop
nop
inc
inc
jge
and
sbb
dec
sbb
dec
xor
int3
adc
cs
rorl
popf
lea
ljmp
test
stos
mov
fcomp
and
or
mov
int3
scas
dec
dec
fnstenv
jo
mov
sahf
insl
popf
mov
push
test
pop
push
jae
inc
sti
jno
inc
cli
fdivl
fstpt
int3
loope
pop
cs
scas
cltd
lret
xor
outsl
lahf
xchg
mov
jns
sbb
loope
push
mov
das
mov
xor
cmpsl
movsw
std
rcll
out
jne
stc
pushf
dec
or
pop
dec
pop
movsl
inc
xor
adc
lea
jge
jae
fistpll
mov
int3
fidivrs
imul
das
or
add
icebp
cmpsl
xchg
cwtl
inc
loope
mov
jmp
push
mov
sbbl
lahf
imul
in
ja
call
mov
cmp
mov
push
test
xchg
xchg
push
push
adc
mov
mov
outsb
xchg
std
xchg
mov
cmpb
stc
push
mov
cmpsl
das
xchg
adc
gs
aad
inc
pop
movsb
sbb
mov
icebp
add
mov
add
push
cmp
outsb
mov
ljmpw
fwait
cmp
lods
sub
stos
cmpsl
mov
or
xor
xor
inc
adc
xchg
aam
inc
push
repnz
or
dec
scas
push
jmp
dec
js
push
cmpsl
sub
xchg
push
add
and
in
mov
iret
jnp
mov
insb
jecxz
jle
dec
and
sbb
rorl
dec
mov
mov
mov
and
mov
ss
sar
fsubl
jg
pop
or
push
or
ljmp
adc
sbb
jmp
fdivr
xor
push
stc
pop
push
sbb
or
outsl
ret
xchg
leave
into
sub
xor
rolb
aam
call
inc
aad
fsubrp
push
scas
test
repnz
mov
imul
outsb
cmp
lcall
jne
cmc
xchg
sbb
sbb
lret
aaa
mov
test
mov
mov
dec
aaa
sbb
mov
cwtl
xchg
add
sarb
pop
dec
jg
test
loop
pop
scas
pop
mov
fiaddl
adc
je
cmp
or
cltd
lcall
cmc
jle
repnz
imul
data16
je
clc
mov
fsubr
xchg
mov
outsl
cld
mov
push
outsl
xchg
mov
push
lods
and
mov
shr
addr16
add
adc
ljmp
or
sub
pusha
sbb
mov
xchg
push
rclb
sbb
frstor
push
mov
jo
fsubrs
mov
lea
mov
aas
call
xchg
ret
push
pop
js
xchg
insl
int
stc
add
in
fwait
pushf
adc
pop
xchg
mov
xchg
ljmp
int
cmp
xor
jno
mov
fisttps
push
jecxz
insl
popf
imul
cmp
mov
js
push
dec
fildll
std
mov
and
mov
std
jl
mov
arpl
inc
bound
mov
sti
fstpt
fistl
dec
sbb
repz
in
mov
mov
pop
and
sbb
sbb
mov
push
mov
jae
jbe
adc
lret
inc
fmul
mov
sbb
lret
add
mov
aaa
shrl
sub
cltd
pop
ficoms
push
iret
in
orb
jp
fimuls
pop
or
cmpsl
pop
xor
dec
push
mov
jb
lds
sbb
aas
jecxz
in
shlb
mov
xchg
cmp
add
dec
ss
lahf
std
mov
adc
lret
inc
jmp
cmpl
lea
pop
add
dec
dec
xchg
cmp
js
jbe
dec
inc
inc
fisubs
xlat
jnp
mov
test
lods
xchg
adc
jns
xlat
cld
jo
loope
mov
sahf
inc
mov
cmc
xchg
nop
mov
inc
repz
inc
jne
push
or
push
dec
repnz
fs
js
cld
mov
int3
mov
in
lods
pusha
fnstsw
xor
cli
jb
push
cmp
xor
pop
xor
or
insb
js
add
push
dec
dec
sahf
mov
icebp
sub
pop
push
cmove
dec
and
jnp
xor
jecxz
mov
or
cli
ja
ret
out
stc
inc
mov
loop
repnz
dec
add
or
add
lret
xor
call
imul
push
push
je
in
or
xchg
fsubrs
cs
fstps
dec
in
test
dec
xchg
add
inc
jecxz
mov
cwtl
nop
or
icebp
ss
in
xchg
movsb
xchg
pop
testl
call
cmpsl
movsl
shll
inc
test
in
pop
xor
push
clc
popf
push
or
push
in
and
xchg
mov
sbb
shr
loope
mov
loop
stos
fisubrs
stos
jp
subb
into
mov
hlt
fucomip
jp
jne
pop
add
cmpsb
inc
shlb
dec
loopne
dec
cmpsb
pop
or
nop
or
in
lock
pop
divl
adc
inc
leave
daa
mov
sbb
setb
pushf
fsubrl
lret
js
mov
loop
test
sub
test
xchg
test
out
aaa
test
out
insl
mov
js
push
scas
shll
scas
cmpsb
cmpsb
scas
mov
mov
pop
xor
pop
mov
shrl
lret
dec
pop
adc
repz
inc
jmp
pop
and
cltd
movsb
fistl
movsl
mov
insl
lea
aam
lahf
pop
aaa
inc
lcall
arpl
and
loope,pt
mov
push
dec
jo
in
adc
dec
test
jmp
jmp
cmp
ds
add
sahf
mov
sbb
imul
ja
mov
sar
adc
pop
das
in
stos
lods
cltd
jl
cmp
dec
ja
dec
test
inc
sbb
in
mov
frstpm(287
aad
repnz
jmp
ror
inc
ret
idivb
dec
mov
dec
mov
push
xchg
pop
adc
dec
in
cmp
adc
loope
loop
mov
cmpsb
push
xchg
push
fsubrs
dec
adc
loope
mov
rcr
cmpsl
pop
fistps
jne
push
mov
cmp
shlb
lods
mov
sti
pop
or
sub
mov
push
mov
add
inc
jno
cmp
adc
jecxz
xor
movsl
adc
cld
adc
cmc
out
adcl
cmp
lahf
test
aaa
mov
icebp
add
lea
and
adc
cmp
sub
jp
addr16
sarl
xorl
movlhps
push
cmp
pop
add
mov
add
adc
cmp
out
mov
xchg
xchg
xor
or
cmpl
jbe
jecxz
dec
mov
lret
xchg
jbe
add
cmp
lock
dec
idiv
push
xor
jmpw
aaa
dec
dec
xchg
jle
push
inc
inc
outsb
out
lahf
add
test
mov
jno
stos
loop
mov
test
xchg
shrl
cmc
fcomps
es
mov
ljmp
push
popa
in
inc
and
daa
or
enter
fs
push
xor
roll
call
inc
xchg
cmp
add
pop
inc
filds
iret
ljmp
xchg
int
fisubl
cwtl
imul
dec
jge
cmc
shl
add
xchg
test
mov
pusha
inc
in
in
or
and
je
xor
cmp
or
das
shlb
and
in
in
dec
clc
clc
scas
adc
adc
fisubrs
jns
mov
daa
mov
pop
lahf
jp
ss
pop
rorl
lds
push
cld
cmp
js
sbb
sbb
adc
jp
cmp
shrb
out
nop
mov
cwtl
mov
sti
test
dec
cmp
mov
outsl
xchg
push
fbstp
xchg
hlt
mov
xor
or
and
out
sub
cld
adc
aad
out
idivl
scas
repz
push
jno
stc
xor
repz
roll
push
inc
ret
cltd
outsl
push
push
push
test
pop
push
mov
mov
mov
mov
sarb
daa
das
enter
rolb
stos
fwait
fisubs
gs
or
dec
icebp
mov
and
xor
and
les
push
sbb
sbb
mov
sub
cltd
jo
mov
cmp
mov
sub
pop
popf
xor
xchg
sbb
or
ret
cltd
xchg
lret
orps
stos
mov
push
dec
cs
out
sbb
outsb
mov
mov
loop
add
add
out
ficoml
ret
out
xor
addl
insl
xchg
or
inc
mov
shl
cmc
out
hlt
inc
mov
xchg
fs
cwtl
push
loopne
jbe
or
jp
mov
ret
test
dec
sub
arpl
lds
outsb
cmp
popa
mov
ja
pop
mov
add
ret
pop
xchg
add
bound
xchg
and
xchg
lret
rcrb
push
pop
cmp
mov
loope
ret
pop
scas
push
mov
jo
sub
jmp
mov
aam
mov
fdivl
mov
xchg
mov
jnp
fwait
movsl
pushf
shrl
loope
push
mov
test
jbe
aam
and
or
cltd
jno
push
sub
jg
ficoml
ror
cmp
scas
adc
stos
and
enter
fcomp
mov
das
loope
inc
push
pop
stc
push
pop
mov
push
mov
xchg
ljmp
out
xchg
das
das
adc
push
js
sbb
push
imul
inc
cli
shlb
add
cwtl
out
push
cmc
fs
popa
cmp
jnp
cmp
sub
in
fidivs
mov
rolb
and
mov
int3
cmpsb
sub
cmpsl
jmp
dec
sub
xor
jae
inc
scas
push
ss
pop
add
imul
fdivs
xchg
adc
add
xchg
dec
or
psraw
or
add
shrb
adc
inc
mov
or
xchg
xorb
push
or
push
shl
sbb
cltd
xchg
popf
int
imul
inc
into
lcall
cs
aaa
add
mov
nop
cmp
bound
movsb
negb
jl
nop
sbb
xchg
sar
mov
dec
fcmovbe
mov
pop
cli
jne
enter
or
cltd
inc
in
lea
dec
mov
adc
ljmp
icebp
outsb
xchg
pop
bound
mov
in
pop
mov
jb
dec
pop
xchg
mov
pop
out
mov
jbe
lahf
sub
dec
mov
sbb
data16
or
das
popl
fnstenv
jmp
ds
push
sub
and
test
or
mov
inc
or
aaa
xchg
add
divl
rcrl
cwtl
push
mov
xchg
push
aad
movsl
ret
stos
mov
mov
stos
lea
out
or
cmp
adc
pop
outsl
cmpb
test
mov
stos
cmpsl
sti
mov
mov
rclb
push
pusha
clc
popa
inc
pop
hlt
push
dec
push
paddw
mov
pop
or
push
cmpsl
jg
mov
and
push
push
outsl
pusha
gs
rcrb
push
push
add
aam
sub
mov
mov
scas
inc
xchg
gs
pop
mov
pop
int3
push
xchg
rorb
data16
add
add
lds
fcompl
dec
imul
mov
xor
xchg
rcrb
or
js
and
lea
iret
pop
loop
icebp
inc
cli
cmp
popa
inc
xor
push
stos
imull
pop
cmpb
push
sbb
sti
test
repz
cli
sub
test
divl
lock
mov
jp
xchg
jle
repnz
cmp
xchg
repz
mov
jmp
lds
daa
movsl
shrb
mov
int
imul
pop
ds
sahf
xchg
arpl
mov
push
inc
in
hlt
out
jbe
pop
sti
pop
sbb
loope
adc
pop
sbb
ja
aad
pop
sbb
pop
cmpsl
sbb
pop
add
add
arpl
je
push
pop
push
jmp
pop
push
sub
jae
push
xchg
push
arpl
into
dec
add
das
dec
mov
xor
pushf
adc
mov
lcall
or
xchg
fisttps
sar
cmp
ja
cmc
adc
sub
popf
lret
in
mov
pop
mov
loope
push
notb
popf
xor
xlat
dec
fldl
jno
lret
dec
xchg
xchg
insb
divb
ficompl
mov
lahf
mov
dec
mov
push
jnp
xor
push
jno
jle
push
sti
add
incb
jno
das
popl
jb
test
and
or
sti
pop
mull
shll
cmp
pop
addr16
addr16
lds
dec
mov
ret
pop
call
or
ficoml
xor
and
shlb
adc
pop
sub
pop
cmovle
cwtl
pop
into
cmp
aas
xchg
jae
ja
and
pop
pop
lds
add
lret
scas
jne
mov
popf
scas
imul
sbb
out
mov
mov
sbb
aaa
clc
insb
cmp
call
ret
roll
pushf
or
imul
push
sti
les
push
ds
imul
outsl
or
aad
test
sbb
pop
fsubp
sub
jle
mov
sbb
push
push
insl
hlt
stc
xor
cmp
lcall
test
es
ficoms
lret
inc
adc
sub
cmp
mov
sbb
sbb
in
jno
jmp
mulb
jl
mov
cmp
push
outsl
xchg
lret
cmp
push
lahf
imul
xchg
mov
dec
outsb
dec
ds
push
call
push
inc
fistps
mov
or
add
cmpsl
jmp
xor
dec
sub
pop
cli
dec
xchg
mov
xor
sub
pop
mov
xchg
ss
mov
inc
add
and
incl
add
adc
pop
cmp
lcall
add
data16
imul
jle
or
jnp
cmp
jl
pop
fadds
mov
mov
ss
test
cs
cmp
mov
enter
sub
ret
dec
pusha
iret
js
jle
sbb
mov
adc
sub
xchg
lods
push
xlat
subl
fdivs
in
xchg
mov
enter
int3
data16
gs
pop
repz
insb
push
nop
add
mov
and
enter
mov
fisubrs
shll
into
imul
and
or
mov
jnp
cmpsb
out
jg
dec
or
cmp
lret
lret
push
cmp
mov
cmp
fwait
and
int3
ret
cld
sbb
jmp
cmpsb
mov
xchg
xchg
test
into
push
aaa
add
mov
test
sub
test
lock
test
je
mov
sbb
xchg
std
fisubs
aam
jb
fstpt
cmp
mov
cmpsl
lock
fldenv
das
xchg
inc
sub
subb
sti
faddl
jne
inc
mov
adc
adcb
xchg
xchg
jo
scas
decb
aaa
push
inc
add
pop
lods
andl
mov
js
out
adc
xor
jecxz
mov
mov
mov
mov
add
xchg
pop
xor
andl
jge
shrl
jle
rorl
and
xchg
std
psllw
and
inc
mov
icebp
shlb
push
inc
stos
into
ja
sub
in
mov
dec
cltd
stc
push
mov
cmpsb
push
mov
ds
std
mov
outsb
and
mov
xchg
push
ja
pop
in
es
les
cwtl
lret
jge
fimull
ljmp
inc
mov
stc
imul
dec
xchg
fidivrs
jg
lret
jo
sub
and
pop
dec
pop
mull
push
push
mov
mov
cmp
xor
push
insl
imul
pop
mov
add
adc
es
dec
sub
and
sub
jecxz
sub
dec
cmpsl
test
dec
dec
add
push
int
push
pop
push
jge
xchg
cwtl
xchg
jnp
mov
lea
xchg
add
lahf
xor
mov
mov
pop
pop
std
mov
pop
int
mov
ss
push
js
lahf
mov
jne
or
loopne
jge
leave
arpl
in
inc
mov
xchg
xchg
pop
mov
push
push
mov
push
in
cmp
aad
out
mov
test
push
push
sbb
push
mov
sbb
movsl
int3
cmpsb
fdivl
sub
sbb
inc
out
shr
xor
xchg
cmp
dec
mov
and
cmpsl
xor
lock
cmp
ja
imul
rorl
or
inc
clc
jmp
inc
in
or
lret
cmp
cmpsl
out
cmp
mov
adc
adc
popa
add
mov
xchg
jge
mov
adc
mov
or
xchg
mov
push
xor
popa
mov
inc
inc
in
xor
repnz
xchg
sbb
cltd
push
pop
adc
pop
pop
leave
cmc
or
push
jae
movsl
scas
or
inc
and
sub
fdivr
icebp
push
or
jp
out
and
xor
add
stos
xor
cli
sub
lret
int3
in
frstor
enter
jae
ret
jmp
dec
fcompl
dec
xor
push
nop
cmpsb
xchg
iret
push
mov
clc
xchg
cmpsl
je
stos
pop
incl
mov
andl
pusha
xchg
jne
push
xor
jge
sub
push
push
jb
sar
in
inc
adc
pop
jl
xor
shrb
fs
leave
or
imul
sub
xor
sub
inc
aaa
sbb
mov
push
dec
and
or
add
cmp
insl
mov
testb
cli
mul
insl
or
cmp
in
add
iret
lret
aad
popf
in
fsubl
sub
push
outsb
adc
adc
les
imul
scas
lods
lahf
cmpsb
repz
jne
pop
daa
jne
insl
mov
ficompl
out
push
add
and
cld
insb
pop
and
xchg
inc
in
adc
jg
and
insl
test
fstl
jno
push
sub
mov
lods
push
xor
mov
leave
mov
out
aam
div
into
icebp
lods
repnz
sahf
mov
and
fsubl
lret
in
add
mov
cmp
sbb
sbbb
inc
push
and
jne
sub
xchg
mov
roll
insl
mov
sbbl
xchg
in
sub
jo
xchg
xor
cmpb
pushf
fistpll
sti
popa
movsl
inc
lods
or
jp
inc
mov
lds
jmp
push
xchg
les
push
aad
add
lds
dec
test
pusha
ds
xor
sbb
cmpsl
int
and
incb
pop
xor
cltd
xor
inc
mov
mov
lcall
pop
xor
or
call
adc
adc
ret
pop
out
enter
push
push
xor
bound
add
mov
adc
out
dec
adc
scas
shr
and
inc
xchg
lock
inc
cmpsl
push
mov
sub
and
jecxz
mov
inc
aam
jg
fistpl
mul
popf
xor
push
movsl
pop
push
adc
dec
out
sbb
and
cwtl
dec
xor
sbb
je
xchg
iret
mov
dec
je
pushf
cmc
adc
cltd
dec
or
nop
mov
aaa
add
push
loopne
out
mov
or
lcall
inc
xlat
arpl
or
ss
push
movsb
shll
stos
sub
mov
mov
mov
mov
xlat
xor
pop
cmp
dec
mov
addb
jne,pt
adc
frstor
iret
xchg
or
stos
fscale
movsb
sub
jb
add
xchg
iret
mov
xchg
push
push
jge
mov
fs
or
sbb
pop
sub
mov
pop
add
inc
xor
sbb
bound
mov
push
push
jle
int3
sub
mov
adc
mov
insb
jl
mov
inc
or
jp
shl
test
add
cmpsl
popa
fidivs
andl
add
inc
dec
sub
repz
pushf
dec
mov
mov
mov
mov
push
mov
cmpsl
fisttpl
out
lock
insl
pop
sbb
dec
jno
adc
mov
loop
sbb
sbb
fwait
pop
invd
inc
rcll
pop
js
jno
sti
mulb
daa
lock
xor
js
div
sbb
push
mov
dec
dec
test
mov
push
xor
and
cmp
outsb
push
xor
adc
fcoml
and
in
inc
push
in
inc
popf
mov
mov
xor
xchg
add
dec
mov
pop
xor
sub
mov
data16
pushf
jmp
sti
sbb
arpl
mov
jmp
aad
mov
mov
nop
es
xchg
sbb
mov
sub
or
call
dec
insl
dec
ds
mov
cwtl
aas
movsl
ret
mov
fisttpl
ja
sub
mov
mov
stos
sahf
outsl
shll
xchg
xchg
repz
adc
mov
mov
xchg
movsb
repnz
pop
mov
xor
mov
inc
cwtl
mov
xor
mov
call
aaa
adc
cmc
xchg
cmp
and
sub
jns
data16
dec
and
popf
test
stc
dec
js
cmp
mov
sahf
ljmp
cmp
lret
mov
cmc
dec
push
and
pusha
add
and
cmp
out
iret
loope
xor
mov
sub
cmp
lret
fcoml
test
outsb
adc
xor
insl
push
in
lods
xchg
frstor
pop
xchg
jbe
out
lret
lcall
adc
add
dec
int3
cmp
movsl
add
sub
aaa
sub
pop
push
inc
shrb
sbb
mov
hlt
aad
cmp
imul
xor
outsl
mov
jge
jns
sub
cmp
add
jge
push
imul
xor
push
in
call
pop
fs
jb
aam
xor
sarb
mov
push
fdivr
ds
fsubs
or
sbb
loop
inc
dec
or
shl
cmc
jp
fs
xchg
data16
adc
dec
push
fmull
loop
shll
push
jae
add
xchg
pop
xchg
xchg
or
ficompl
lahf
ret
push
inc
sti
mov
lahf
sbb
lcall
mov
jle
sub
inc
xchg
dec
pop
cld
lds
out
jl
int
fildl
test
adc
fdivrl
sbb
subl
fdivrs
push
sti
mov
inc
dec
mulb
ficoml
or
jb
bound
call
xchg
xchg
test
jbe
pop
push
nop
nop
pop
pop
cwtl
lret
inc
xchg
lock
dec
out
mov
mov
and
push
ret
stos
mov
lret
adc
jg
fisubrs
loop
movaps
aaa
sbb
mov
jb
inc
inc
xor
inc
add
mov
jbe
movsb
and
cld
movsb
iret
aaa
cltd
in
and
test
push
mov
das
jae
or
out
jp
mov
sbb
push
jg
xchg
cmp
repz
je
pop
imul
out
jno
push
add
push
sub
hlt
test
ja
out
sub
imul
pop
inc
cli
cmpb
mov
or
loope
xchg
addl
mov
push
sub
into
repnz
sbb
test
sbb
push
in
in
xlat
mov
psubd
add
movsb
cltd
mov
pop
pop
ss
aaa
lds
cld
cltd
setns
add
insl
xchg
mov
rcll
lret
pop
xchg
push
nop
cmc
scas
sahf
sahf
cmpsl
dec
in
dec
testl
fcompl
mov
cltd
xchg
int3
imul
mov
jb
cwtl
xchg
adcb
add
mov
pop
or
jmp
dec
popf
pop
in
push
pop
xlat
cltd
jmp
push
pop
mov
lret
jae
fwait
out
dec
dec
ret
inc
mov
jns
or
hlt
lret
movsb
adc
fsubs
mov
add
fiaddl
adc
sub
js
std
mov
das
pop
cmp
lds
movsb
sub
bound
mov
out
mov
sbb
ljmp
lret
mov
in
cld
cmp
xchg
fs
mov
sub
add
inc
aas
mov
fisttps
cs
cltd
scas
sahf
mov
mov
push
scas
movb
lahf
mulb
adcb
dec
xchg
xor
mov
in
adcb
fstpl
adc
cmp
mov
adc
enter
sub
jns
inc
jae
out
fdivp
stc
repz
sbb
mov
fidivrl
loopne
dec
cmp
mov
sarb
mov
xorb
fdivrp
adc
lahf
rep
mov
js
pop
imul
lea
std
popa
and
jne
jmp
rcrl
mov
cmp
pop
repnz
pushf
mov
adc
push
dec
mov
lods
daa
jae
inc
sbb
lret
pop
jno
push
push
rolb
pop
mov
lds
cmp
push
cwtl
in
dec
addr16
cmpsb
mov
cwtl
jne
sbb
dec
repz
push
sbb
add
dec
cmc
dec
mov
testb
pop
pop
into
out
xchg
arpl
lods
aas
outsl
mov
jae
fistps
sub
dec
xchg
out
stc
sbb
or
dec
nop
jno
mov
push
push
and
inc
mov
ss
lea
mov
inc
test
pop
mov
add
pop
pop
fucom
or
add
cmp
nop
pop
les
add
orb
add
push
push
adc
arpl
sti
sub
test
sar
xor
dec
andb
dec
out
xor
sbb
lock
xchg
add
fdivp
fadd
pop
pop
or
mov
lret
out
jns
push
jp
or
adc
jo
push
inc
loope
loope
adc
aas
repz
jg
icebp
orl
loope
mov
in
push
lahf
mov
fwait
lahf
faddp
adc
sbb
divl
out
dec
mov
je
into
or
sti
inc
icebp
push
jmp
shll
int3
loop
pop
aad
iret
or
add
pop
outsl
push
pop
xor
outsb
pop
repz
dec
add
idiv
cmp
and
lcall
orl
push
add
aaa
pop
loop
add
out
sbb
or
inc
push
test
ret
and
mov
mov
cs
lods
ret
repnz
mulb
out
sarl
testl
add
aad
aaa
dec
sub
inc
cld
into
sti
push
jbe
xlat
sub
js
leave
pop
sbb
loope
lock
xchg
and
mov
mov
aam
and
jle
leave
mov
aam
stos
jb
arpl
sub
push
inc
push
loop
push
add
add
add
scas
int
sarl
inc
add
out
sti
lods
mov
and
stos
iret
rcrb
cmpsl
ret
lock
and
loop
shrl
push
aam
imul
inc
mov
cmp
mov
xchg
sti
xor
inc
xor
mov
cmc
xor
xor
ds
clc
or
mov
bound
jg
sti
cmp
mov
xor
inc
push
call
cmp
je
add
subb
cwtl
mov
cmp
mov
add
jp
subb
cmp
addr16
movsb
in
inc
inc
mov
pop
inc
mov
cmp
je
lds
adc
inc
pusha
add
outsb
out
adc
adcl
pop
ret
ret
add
cmp
push
cmpsl
or
xor
mov
inc
push
cmpl
xor
aaa
mov
shrl
imul
jae
and
jb
popf
xchg
ffreep
repz
jbe
fidivrl
and
pop
xor
mov
bound
test
pop
sbb
xchg
pop
mov
shll
jl
scas
popf
cld
mov
mov
lret
aaa
mov
bound
jno
repz
arpl
xor
ljmp
pop
xchg
or
mov
imul
or
mov
pushf
mov
scas
adc
test
roll
cmpsl
cmc
icebp
bound
mov
pop
fsqrt
stos
adc
pop
clc
je
sarb
mov
pop
std
mov
or
int3
push
fimull
aad
daa
jle
fnsave
stc
lds
or
xchg
outsl
push
mov
sbb
sub
jno
and
jno
mov
aas
lahf
daa
icebp
call
test
push
adc
inc
repnz
jb
iret
push
xorb
mov
cmpl
insb
push
cmc
lds
lret
lret
enter
aaa
addr16
inc
xor
sub
mov
adc
aaa
lds
xchg
jne
mov
xlat
rorb
loop
cmpsl
ds
or
or
adc
imul
sub
pop
pop
aaa
lock
loop
leave
cmpl
xchg
loope
pop
stos
pop
or
jns
mov
movsl
push
pop
xchg
mov
neg
enter
and
sbb
cmpl
subb
jae
jp
xchg
js
repz
lock
fsubrl
insl
imull
or
test
mov
jae
addr16
add
inc
es
xor
ljmp
orl
mov
stos
repnz
cwtl
xor
pop
pop
xchg
leave
cli
in
fstl
sbb
pop
ret
pop
insl
sub
aad
outsb
cmp
and
xor
inc
shll
add
hlt
loop
cmc
movsl
mov
xchg
testb
cmpsl
inc
scas
call
repz
popa
inc
sbb
mov
aam
xchg
sbb
inc
mov
daa
fisubs
mov
in
cmc
push
jns
cld
sub
lea
sub
mov
loop
jne
inc
fldcw
ss
lahf
call
pop
clc
loope
inc
movsl
sub
jle
popf
dec
loop
jmp
icebp
loop
jns
push
out
mov
mov
cs
fisttpl
movsl
int3
fisubrs
add
jno
push
call
outsl
jmp
lahf
sub
int3
out
dec
popf
push
sub
fistl
mov
jbe
stos
xchg
stos
jbe
inc
or
daa
mov
test
insl
in
hlt
pop
dec
filds
mov
add
add
enter
jg
inc
test
dec
andb
or
adc
push
mov
mov
xchg
sbb
pop
sbb
jne
mov
dec
iret
fldl
mov
dec
pop
ss
fidivrs
lea
es
mov
mov
out
and
fdivr
inc
rorl
iret
jns
bound
pusha
hlt
cmp
hlt
xchg
mov
pusha
test
mov
lds
popf
and
pop
sub
push
xchg
pop
adc
cmc
mov
jno
popa
pusha
cli
sub
sbb
mov
leave
jge
adc
jnp
ficompl
jp
mov
addr16
lcall
jle
in
movb
fistl
xorl
cmp
jne
push
mov
or
cwtl
lahf
cs
shl
stos
les
dec
mov
mov
shl
loop
and
jl
cmp
sub
fwait
inc
enter
xor
sub
hlt
dec
xchg
rcrl
jns
pusha
xchg
inc
scas
orb
mov
add
movl
or
push
stos
xchg
cmp
loop
sar
push
cmp
inc
shlb
cmpsb
sar
in
out
add
gs
xchg
test
add
dec
inc
push
fmull
jge
movsb
push
adc
in
xor
popf
jns
sbb
clc
stos
mov
push
bound
pop
pop
sub
test
shrl
cltd
js
pushl
mov
pop
cmp
or
or
pop
fnsave
xorb
push
aas
rclb
insl
push
enter
ss
push
adc
clc
les
inc
imul
mov
lret
lods
sbb
aam
dec
and
stc
push
ja
fmull
in
orb
xchg
xchg
inc
and
lock
pop
cmpsl
mov
mov
je
aam
and
add
add
jns
mov
enter
xor
jne
dec
dec
pop
push
hlt
sbb
rolb
fdivrs
push
enter
test
out
arpl
fdivrs
rorb
call
repz
fistpll
lret
xchg
fbstp
add
push
sub
mov
or
fisubrs
fnsave
and
xchg
sbbl
xchg
xchg
outsb
add
xchg
cmp
pop
fidivrl
clc
mov
push
mov
sub
aad
cmp
loope
sub
sbb
jne
jmp
in
sbb
push
mov
shll
jbe
mov
push
mov
mov
shr
fwait
je
jae
mov
and
dec
int3
out
or
cwtl
pop
lds
mov
daa
xlat
cmp
and
inc
sub
imul
mov
andl
in
push
mov
dec
out
adc
sub
shll
sbb
pop
xor
push
add
cli
ja
data16
loop
mov
fstpl
scas
and
out
pop
jp
hlt
int3
jl
aas
mov
in
insb
inc
adc
jmp
or
inc
iret
jo
in
in
nop
fwait
add
xor
test
enter
shll
adc
mov
cmpsb
stc
dec
insb
mov
sub
rcll
push
xchg
pusha
mov
jbe
loope
inc
jp
aaa
push
ret
or
imul
xor
mov
and
outsb
sub
pusha
jns
inc
stos
jns
loope
dec
aad
movsl
fwait
mov
push
cmp
jno
cmp
negb
lcall
aaa
clc
hlt
push
mov
xchg
fprem1
mov
cld
pushf
lock
mov
mov
dec
dec
xchg
jno
insb
mov
dec
scas
xchg
sbb
push
push
ffree
cs
xor
test
dec
enter
xor
pop
daa
loop
inc
clc
popf
call
dec
xor
xor
sub
iret
outsb
test
es
imul
ret
int
fdivrl
pop
stc
ret
mov
jl
mov
rcll
xor
pop
nop
sub
jl
xor
sbb
dec
xchg
pop
lods
push
dec
cwtl
push
mov
cmp
outsb
ret
add
call
adc
push
jnp
fnstenv
mov
mov
add
lahf
xlat
mov
lods
fwait
imul
adc
inc
cmp
inc
sbb
xor
mov
cmp
lods
cltd
adc
std
mulb
xor
mov
es
not
andb
aad
aad
lods
cwtl
imul
shll
xor
jbe
mov
mov
stos
dec
bound
push
sbb
mov
add
jae
push
mov
rorb
xchg
movsl
and
and
clc
xchg
push
data16
in
cmp
xchg
daa
and
enter
sbb
cltd
push
insl
xlat
cmpb
outsb
dec
mov
mov
jmp
mov
sahf
pop
ja
mov
pop
adc
sub
or
xchg
movsb
testl
scas
call
dec
add
dec
imull
rolb
int
mov
push
enter
ljmp
jle
mov
mov
xor
cs
aam
sbb
inc
xchg
adc
push
fs
dec
and
jp
fnstsw
loope
mov
sbb
and
ret
or
frstor
jb
add
fs
testb
jg
mov
inc
or
cwtl
out
adc
rorl
pusha
and
or
in
fildl
aad
popf
xor
and
ljmp
sub
and
addr16
push
incl
pusha
mov
mov
cmp
adc
lcall
fadds
rorl
mov
cmp
nop
cmp
pop
in
adc
sbb
testb
xchg
push
pop
or
mov
outsb
fsubrl
or
mov
shl
cmp
enter
dec
inc
paddsb
jmp
sbb
and
adc
jmp
out
adc
mov
add
test
push
add
mov
cmp
pop
sub
dec
dec
dec
mov
sub
les
push
push
clc
mov
cmovl
insb
pop
fs
mov
or
mov
mov
cli
sub
daa
arpl
sbb
sbb
cmp
outsb
test
imul
aam
into
jno
je
mov
pop
push
inc
mov
pusha
cmp
int3
and
xor
xchg
add
pop
push
jmp
fdivrs
sti
cld
aaa
pop
xor
xchg
or
test
mov
xchg
inc
pushl
ds
pop
push
lds
dec
stos
cli
pop
push
aas
or
xchg
fcom
push
shl
cwtl
inc
mov
pop
loopne
stc
lock
andb
cmp
or
sbb
fs
cmp
js
and
insb
or
dec
and
mov
and
sbb
ljmp
out
pop
cmpb
adc
cs
push
mov
mov
add
inc
fadds
adc
add
imul
and
push
sahf
sub
js
sub
pop
pop
outsl
aaa
xchg
mov
fs
mov
and
mov
mov
psllw
sub
dec
xor
push
pop
adc
rclb
cmpsl
movsl
pop
inc
dec
push
ret
pushf
mov
popf
sbb
xchg
xor
bound
sub
out
ja
xlat
xchg
jmp
aas
sti
out
add
add
xor
addr16
pop
sbb
sbb
lcall
ret
loope
mov
jbe
test
sbb
xor
dec
popf
xchg
test
push
xchg
xchg
sbb
pop
jle
inc
jecxz
xor
sarl
push
jae
lods
and
xor
es
mov
cmc
pop
pop
out
and
inc
ret
cmpsb
xchg
xor
stos
xor
fmull
sub
test
aas
lret
push
sub
add
ret
add
lret
je
lret
push
in
mov
dec
aaa
jne
std
es
jno
jmp
cmpxchg
fdivrs
lock
push
mov
and
je
sbb
add
cmp
jle
mov
in
mov
lcall
cmc
out
xchg
lret
cmc
xchg
pop
mov
and
jge
in
jo
pop
jnp
xchg
xor
inc
xchg
and
push
inc
xchg
xor
xchg
inc
add
imul
cmp
addl
jb
mov
addr16
xor
mov
inc
dec
pop
adc
mov
lsl
scas
cmp
mul
sbb
push
outsl
or
call
sbb
mov
mov
mov
insb
dec
ret
std
xor
cmc
sbb
cwtl
inc
pop
lock
push
xchg
fs
push
mov
adc
xchg
dec
scas
or
das
and
lret
xlat
nop
ret
dec
xchg
sub
mov
mov
xchg
mov
ljmp
push
push
test
mov
xchg
lock
lods
fwait
popa
dec
adc
popf
jae
cmpsb
aad
cli
pop
test
ss
mov
inc
mull
xor
inc
jno
pop
test
and
jno
mov
pushf
int3
pop
xor
and
or
push
cld
mov
mov
int3
daa
daa
lods
push
jns
test
mov
nop
scas
insb
pop
lock
aad
dec
or
push
sti
sarb
lea
cmp
and
jb
dec
mov
and
outsl
xor
fld
cltd
mov
cwtl
dec
leave
aaa
jecxz
cmp
and
out
xchg
push
das
aam
push
ds
xchg
sub
xchg
sub
sbb
dec
dec
cmpsb
push
mov
mov
pushf
adc
cld
jmp
mov
jmp
mov
adc
mov
cmpsl
cmp
loop
xlat
pusha
int3
mov
test
inc
mov
sub
int
stos
test
pop
inc
jo
loopne
add
imulb
inc
jae
jp
das
ss
mov
push
clc
test
cltd
jae
sub
sbb
pop
jne
jp
hlt
jno
cwtl
std
push
add
out
mov
mov
sub
lods
push
fs
leave
fwait
jns
mov
mov
lret
hlt
leave
mov
stc
fs
ret
pop
iret
xor
mov
push
mov
gs
into
mov
jg
sbb
ss
outsb
mov
fwait
jb
or
lods
imul
jnp
dec
adc
add
and
pop
push
ljmp
addl
add
jecxz
mov
jmp
sbb
stc
inc
insl
xchg
jno
sub
mov
jg
call
pushf
pushf
bound
adc
loope
sub
push
cmpsl
sti
push
jns
lea
xchg
sub
jg
dec
das
loop
outsb
cmc
lret
bound
cmc
out
inc
push
into
movsb
cwtl
xchg
loope
mov
std
push
stc
adc
add
vunpcklpd
push
xchg
cmpb
sbb
out
hlt
imul
bound
pop
and
jnp
test
ret
adc
mov
enter
ret
mov
sub
cmp
dec
into
inc
mov
dec
scas
inc
xchg
cltd
inc
sbb
ja
insb
popf
adc
sub
mov
adc
data16
int
cmpsb
jmp
xorl
inc
enter
daa
movsl
out
daa
lods
test
out
xchg
fidivl
out
inc
cmp
rol
sub
cmpsb
adc
xchg
dec
inc
lods
dec
lock
shlb
fbld
pop
ds
pop
pop
inc
add
sbb
jl
lcall
mov
loop
mov
dec
pop
fwait
in
bnd
sub
mov
mov
add
sti
xor
dec
arpl
xor
ljmp
jmp
sbb
test
pop
imul
cli
int
jns
or
xor
out
add
xchg
sbb
sahf
mov
jne
std
mov
push
pusha
cli
inc
jns
icebp
arpl
mov
cli
add
dec
push
sub
push
sbb
stc
mov
rcrb
test
pop
push
mov
pushf
mov
pop
mov
and
cmc
mov
xchg
or
xchg
dec
sub
jp
adcl
aam
add
loop
fsubrl
lods
lret
int3
jno
mov
pop
or
test
shlb
push
xchg
hlt
sub
and
jno
cmc
and
dec
fld
mov
fildll
mov
scas
lods
and
sub
push
add
es
dec
ljmp
rclb
sbb
and
and
push
dec
into
ljmp
pop
pop
mov
fs
mov
pop
out
and
mov
inc
add
fwait
fwait
loope
pop
fisttps
leave
add
and
sarl
mov
fwait
jl
xchg
add
fsubs
aas
mov
jl
adc
out
cmp
repnz
push
jmp
cltd
int
lret
setb
pop
inc
adc
fnsave
or
inc
outsb
sbb
in
mov
mov
popa
dec
mov
lods
cmp
mov
sbb
jmp
xchg
cmp
and
gs
cltd
and
mov
int3
inc
rclb
push
ss
outsb
and
shll
mov
xchg
jne
ljmp
mov
cli
sbb
cmpb
cmp
test
cwtl
nop
pop
fwait
mov
xlat
mov
mov
test
adc
out
jmp
pop
and
cmp
sbb
and
iret
sub
ljmp
jmp
or
imul
push
xor
mov
rorb
int3
or
push
xlat
mov
fiadds
cmp
int3
and
add
dec
cmp
insb
jl
pop
jbe
rcll
mov
icebp
fnstcw
inc
and
cmp
inc
cltd
cli
and
jge
mov
mov
mov
pop
xchg
pop
cmp
pop
clc
stos
push
fidivrs
dec
adc
pop
xchg
lock
xor
test
cmp
daa
push
add
pop
test
sti
jmp
xor
es
add
cmp
fnstsw
insb
call
jne
mov
lds
xor
pop
dec
and
xor
fcoml
jnp
xor
inc
ja
popf
cld
and
out
cli
jb
mov
addr16
roll
xor
cmpl
add
pop
fs
xchg
dec
mov
add
push
mov
test
sahf
movsb
test
jge
clc
leave
inc
outsb
sub
mov
mov
xor
cmpsl
jl
test
sbb
ds
mov
daa
cwtl
add
mov
js
mov
mov
xor
les
pop
push
lods
cwtl
dec
cmp
icebp
addl
pop
adc
aas
ljmp
fs
stos
data16
cmpsl
jne
xor
dec
aad
cmpsb
lret
adc
shl
fcoml
arpl
mov
xchg
add
or
cmp
repnz
jb
push
mov
jae
in
pop
jg
xor
bound
lods
mov
push
inc
lahf
fwait
mov
lahf
fisubs
pop
push
cmpsl
mov
mov
or
or
rcr
push
int3
gs
cmp
mov
pop
cmp
jg
mov
push
push
jg
mov
out
rcrb
roll
ljmp
sbb
or
adc
xchg
cwtl
add
test
std
shr
divl
sti
inc
inc
mov
shlb
pop
sbb
icebp
lods
stos
sahf
cmp
rcrl
adc
mov
scas
xor
movsb
xchg
ljmp
hlt
in
push
into
sub
xchg
xchg
jnp
mov
orb
sbb
out
or
push
xchg
inc
inc
sub
sbb
sbb
aas
addl
cld
pop
mov
repz
in
mov
pop
jnp
lds
fwait
mov
mov
mov
notb
mov
or
cld
dec
xor
cmp
pop
inc
into
aaa
jnp
dec
cmp
pop
lock
inc
loopne
lds
xchg
jno
repnz
sub
jae
cltd
lods
or
pop
test
push
mov
out
push
sub
loop
mov
or
mov
push
popa
xchg
fcomip
clc
shlb
add
xor
fistl
shl
add
icebp
mov
or
pop
xchg
es
cmpsb
and
jp
adc
pop
xor
adc
cmp
or
sbb
xchg
sub
jno
xor
xor
int
mov
and
sbb
cwtl
lods
ret
lcall
inc
insb
cld
sarb
or
jbe
jmp
and
cmpsb
sbb
call
or
push
sbbl
js
xchg
nop
fistps
dec
jmp
mov
les
sub
adc
icebp
dec
xchg
xor
or
cmpsl
push
scas
jns
aaa
out
lods
call
xlat
jb
sbb
fsubr
pop
jne
add
add
xchg
xor
addr16
cmp
xchg
mov
pop
mov
inc
dec
fidivrs
xor
stc
les
pop
jae
ljmp
add
out
xor
hlt
mov
add
leave
xor
fwait
int3
in
jl
push
mov
add
push
sarb
lds
je
dec
out
les
push
lret
adcl
loopne
cmc
cmp
jge
cmc
inc
cltd
hlt
clc
outsb
pop
pushf
dec
stos
sbbb
jb
pop
movsb
mov
sub
cwtl
dec
nop
ret
cltd
shld
inc
jbe
jb
test
mov
imul
loopne
xchg
mov
push
mov
jle
lods
das
out
repz
std
aad
mov
mov
push
or
cmp
pusha
imulb
sub
xor
mov
dec
mov
loop
push
hlt
mov
push
stc
sbb
sub
and
xor
int
pop
push
pop
sub
xchg
pop
outsb
inc
xchg
xchg
int3
rcl
xor
xchg
mov
stos
fcomps
dec
or
das
les
pop
test
imul
in
adc
pop
push
dec
movsb
shrl
sbb
push
mov
and
sub
outsl
scas
mov
mov
or
bound
loope
push
push
call
push
dec
push
and
pop
jmp
insl
pop
dec
push
cli
dec
pop
dec
mov
push
push
or
add
pop
jno
ljmp
xor
fldl
adc
out
pusha
aas
imul
sbb
mov
and
fsubs
xchg
out
arpl
icebp
mov
addr16
and
push
icebp
imul
jne
rclb
add
pop
arpl
imul
and
mov
cmp
mov
mov
mov
into
loop
dec
mov
enter
add
mov
insb
adcb
inc
or
lock
adc
push
sub
dec
icebp
xchg
mov
sub
into
sbb
or
sbb
fnstcw
cmpsb
sbb
dec
push
xlat
mov
lcall
jbe
bound
pop
add
divb
pop
add
and
adc
or
inc
jo
pop
sub
pop
mov
mov
pop
push
in
fwait
ret
add
mov
jns
push
imul
test
iret
ficoml
lea
pop
inc
stc
xchg
xchg
pop
dec
rolb
fistl
iret
jecxz
and
hlt
stc
je
ss
mov
test
lcall
dec
fs
push
push
cwtl
movsl
jge
xchg
cmp
mov
incb
movsb
sbb
sbb
sub
in
test
jle
das
add
pop
sub
cmp
enter
pop
in
jbe
stc
clc
insl
xor
jecxz
bound
mov
ds
push
andl
jo
jno
stos
pushf
rorb
sub
in
test
lret
jb
mov
xchg
xor
xchg
inc
and
int
stos
jnp
cmp
cli
in
mov
or
lcall
mov
mov
inc
hlt
adc
test
jne
xchg
icebp
push
xor
xor
jmp
sbb
mov
add
adc
inc
mov
movsb
idivb
jecxz
or
push
mov
mov
insb
movsl
add
inc
dec
and
mov
mull
sub
test
mov
lcall
mov
add
daa
add
xor
mov
sub
or
mov
xor
loope
cmp
add
push
inc
sahf
es
ffreep
cmovns
lret
mov
add
ret
icebp
mov
push
andb
and
mov
scas
xchg
jle
test
lcall
clc
mov
jae
arpl
pop
xchg
mov
and
cmpsl
xor
repnz
push
mov
insl
arpl
adc
adc
dec
pusha
inc
xor
or
popa
inc
jno
mov
mov
repz
jno
sbb
loop
sbb
or
lahf
nop
out
fisubrl
push
decl
int3
adc
in
scas
mov
or
loope
dec
xor
dec
adc
call
xchg
out
pop
rcll
inc
stos
push
jle
sub
xlat
xchg
js
loopne
je
push
xor
inc
stos
movsl
dec
push
mov
mov
push
pop
mov
mov
js
ljmp
in
pop
pop
jo
lahf
in
and
in
add
shlb
mov
idivl
mov
cmp
flds
mov
sbb
and
jne
fs
ss
mov
adc
ret
or
jg
mov
push
add
clc
xorl
jmp
lds
mov
out
popf
mov
adc
dec
movb
imul
pushf
jge
adc
fmuls
mov
or
mov
push
cs
adc
mov
push
xchg
jecxz
mov
pop
scas
inc
aam
xor
dec
push
mov
add
mov
int3
push
inc
sbb
leave
imul
fwait
xchg
mov
xchg
jb
inc
or
jge
inc
jbe
imul
stos
dec
bound
sbb
shl
stos
xor
lock
cmpsl
pop
lods
hlt
movsl
pushf
sahf
mov
pop
int3
les
push
imul
lcall
aas
addl
fcmovne
loop
lds
add
mov
icebp
insb
mov
cmp
cmp
cmpsb
fsubrp
in
jge
cmp
sub
stc
adc
or
cmc
sbb
cli
mov
adc
jmp
push
cmpsl
pop
rcrb
or
sub
cli
int3
lods
in
xchg
xlat
mov
mov
shlb
popa
xor
insb
adc
sbb
jg
jg
sbb
adc
mov
rcl
mov
js
jge
mov
mov
in
push
add
pop
sub
sbb
xchg
pop
inc
sub
roll
aas
dec
and
adc
sbb
rcl
dec
mov
fwait
cli
sbb
xor
daa
sub
jo
bound
xchg
lds
fadds
add
lods
loopne
add
cmpsb
xor
enter
mov
mov
cmp
stc
aaa
ja
push
stos
xlat
cmp
sahf
mov
push
push
xorb
lret
movsb
outsb
inc
sub
add
dec
xor
lock
test
and
pop
adc
push
mov
addb
add
mov
rorb
sub
in
ret
rep
mov
xchg
shr
jp
loop
push
fcmovnu
xor
inc
cli
ljmp
xchg
mov
fistps
mov
imul
mov
stos
into
sbb
dec
pop
repz
icebp
addr16
jns
pop
and
inc
lea
pop
or
sub
dec
jle
mov
mov
aas
dec
sbb
shrb
and
dec
mov
addr16
jbe
jns
call
sub
push
xor
xchg
sbb
add
stc
dec
and
jmp
mov
add
addb
pop
sbb
je
ljmp
lcall
mov
adc
faddl
out
int
int
xchg
or
mov
xchg
pop
ds
add
dec
scas
mov
cmp
jb
stos
subb
notb
test
jne
push
fistl
mov
leave
fcoms
imul
movsl
inc
dec
mov
push
adc
sahf
mov
shrb
and
in
mov
mov
inc
pop
jmp
inc
shr
push
push
adc
xor
jmp
mov
mov
shr
rorl
add
aaa
mov
add
shll
mov
sbb
call
sbb
int
jno
andb
cmc
lock
cwtl
popa
inc
push
adc
ds
fidivrl
jo
mov
sbbl
push
push
dec
push
sbb
xchg
movsl
dec
incl
jle
sbb
dec
out
or
mov
jbe
pop
dec
jno
shrl
loopne
add
mov
xor
insb
dec
lods
push
mov
mov
pop
iret
cltd
lcall
add
jb
jns
jge
js
data16
fimuls
dec
ret
xchg
pop
int3
mov
jge
rcrl
xlat
rclb
cmp
cmp
test
sub
or
call
xor
movsl
mov
pop
dec
adc
shrl
or
cmp
arpl
int
adc
sub
in
dec
in
popf
in
jae
mov
mov
jnp
sbb
fs
dec
mov
clc
inc
push
pop
fistps
dec
inc
dec
leave
inc
sub
imul
mov
and
sahf
ret
pop
lds
and
and
stc
stc
cmp
movsb
sbbb
ret
sti
mov
sti
mov
add
loopne
dec
mov
xchg
push
iret
lods
adc
and
addb
xor
loope
jbe
and
aad
sbbl
add
inc
cld
or
cmp
push
int
sub
push
push
in
fwait
lahf
dec
lret
out
cmp
mov
xorb
mov
scas
fwait
gs
adc
sub
push
imul
mov
push
xchg
sub
dec
cmp
add
inc
test
mov
mov
adc
lea
dec
cmpsb
stc
and
mov
in
je
movsb
inc
fisubl
dec
les
cmp
mov
fistpl
neg
dec
inc
add
out
leave
dec
mov
push
js
stos
sbb
test
pusha
xchg
arpl
ss
pop
nop
pop
dec
sbb
jmp
xor
dec
cld
push
subb
fsubr
es
repnz
adc
pop
push
imul
mov
sub
in
mov
sahf
ljmp
scas
xchg
inc
xchg
or
in
xchg
xchg
insb
and
popf
in
push
mov
or
mov
jns
scas
in
fstl
enter
dec
loope
jb
xor
ss
inc
inc
lcall
gs
pop
sub
xlat
pop
cmp
std
lcall
iret
sbb
and
cmp
into
cld
pop
sub
incb
insl
xchg
cli
or
test
jns
lcall
jecxz
lahf
and
or
xchg
push
push
jle
pop
sub
pop
scas
stc
fimuls
loopne
pop
xchg
inc
mov
push
xchg
in
jo
xchg
jae
testl
or
jae
adc
fwait
jne
and
les
xlat
movsb
loopne
incb
inc
push
fbld
addr16
nop
xor
es
mov
dec
repnz
push
cmc
lods
jns
jns
xor
pusha
cli
data16
inc
or
arpl
xor
dec
imul
lods
and
popf
repnz
ficomps
push
jle
std
dec
add
fcomps
push
cmp
lcall
shr
fimull
insl
sbb
jo
adc
arpl
xor
mov
adc
mov
mov
mov
add
dec
jecxz
scas
js
dec
and
sbb
data16
test
mov
fisubrs
ljmp
call
into
cmp
xchg
cltd
clc
dec
cmp
sub
or
cmpsb
outsb
ja
cmpsl
movsl
fnstsw
add
cmp
or
ljmp
pusha
stos
sub
xor
in
sub
push
fmul
cmpb
push
insb
lret
loope
dec
xor
mov
or
push
xor
pop
jge
mov
xor
jle
add
mov
mov
inc
pop
add
in
pushf
jne
xlat
mov
xor
cmpl
in
pop
jle
shl
mov
pop
xchg
push
dec
in
es
shrb
or
inc
mov
in
and
test
decl
loope
add
mov
adc
fisttpll
jo
test
pop
mov
and
xor
imul
ds
decl
sub
sub
inc
call
ds
repz
adcl
cmpl
std
lods
sub
pop
sub
dec
sarl
sbb
xor
push
imul
add
jno
int
outsb
aaa
mov
jb
lea
les
je
lcall
daa
ret
mov
mov
xchg
aad
mov
jl
and
xchg
cmp
lret
shll
and
nop
inc
lcall
test
negl
cmpsl
sub
lret
cmpsb
out
scas
insl
push
insb
add
xchg
imul
fmulp
fucom
das
rorl
cmc
xlat
into
aaa
fucomip
test
fwait
adc
lods
xor
movsb
jne
xor
lock
out
cmp
sub
lods
and
push
jecxz
inc
movsl
testl
es
mov
or
xchg
sbb
xchg
and
ss
call
mov
xchg
push
xlat
ja
mov
dec
inc
jno
addr16
inc
pop
and
aaa
push
cmpsl
pop
sub
mov
adc
roll
int
test
lss
lods
test
test
mov
sub
and
mov
push
nop
xchg
fs
and
pop
out
pop
mov
dec
adc
sbb
sub
leave
aas
inc
sbb
pop
in
inc
in
sub
shlb
in
out
dec
add
lcall
sub
xchg
sti
sbbl
inc
ret
push
or
lahf
out
xchg
insl
fsubl
sub
jp
push
mov
and
and
jne
adc
xchg
leave
testl
addr16
fdivl
lods
repz
mulps
movsb
mov
loope
push
xor
pop
lea
mov
in
xchg
push
inc
sti
nop
pop
and
mov
loop
sub
out
mov
sbb
lret
push
dec
cmc
jns
mov
xchg
jg
test
clc
lock
pushf
test
pmuludq
jns
in
insl
xor
popf
addr16
js
jg
xor
adc
mov
cs
test
lock
mov
daa
scas
jo
icebp
dec
push
inc
sbb
mov
sahf
cmp
insb
mov
cmc
stos
mov
fstp
rolb
pop
mov
mov
mov
sarl
push
lcall
in
mov
adc
jge
mov
stos
mov
dec
out
dec
ljmp
mov
jmp
ja
or
ja
popf
cmpsl
sbb
outsl
std
in
pop
xorb
cmp
ds
xchg
stc
stc
shr
and
jb
jecxz
arpl
dec
dec
sub
aam
jmp
jmp
clc
nop
sbb
clc
pop
ret
mov
in
lea
mov
je,pn
daa
call
aas
in
daa
fsubrl
adc
pop
xchg
xchg
jb
fbld
lods
adc
cmc
and
and
cmp
adc
repz
push
dec
repnz
and
test
pushf
xor
cmpsb
roll
fnstcw
test
je
test
xchg
lahf
or
ds
jp
leave
jb
mov
stc
lods
data16
enter
push
push
fs
pop
repnz
or
and
and
add
dec
repz
sub
mov
or
int3
inc
out
sti
or
out
jp
je
mov
add
sbb
leave
call
or
xor
xor
lcall
ret
xor
ffree
cmp
fucomp
jb
into
mov
call
loopne
or
fisubs
lock
cli
or
fsubs
jbe
dec
pushf
mov
cmp
in
xor
rcr
xchg
cs
shll
loop
pusha
add
dec
js
fnsave
jecxz
les
cmp
cmp
xchg
xchg
scas
xchg
dec
xor
hlt
inc
pop
movsb
add
xchg
push
mov
mov
repnz
movsb
gs
stos
roll
xor
push
je
jb
stos
mov
sbb
mov
xchg
lods
js
jae
out
cmc
scas
fistpl
rorb
push
enter
pop
push
aam
inc
sub
arpl
lods
xor
or
aas
enter
loop
lods
ror
push
push
lret
int3
ret
xor
movsb
testl
cmpsl
and
popf
negb
movsb
rolb
inc
add
aad
ret
mov
lcallw
and
push
daa
dec
mov
pop
rcl
mov
mull
mov
add
sbb
ret
ss
callw
pop
ficoms
adc
arpl
jge
jg
jl
jne
jmp
jge
enter
xor
cmp
jne
push
and
xchg
mov
lods
mov
bound
push
imul
dec
mov
inc
and
pop
rclb
and
xor
jge
or
xchg
cmp
jo
mov
adc
test
int
lahf
push
mov
enter
int
cmp
jne
stos
insl
imul
add
inc
xor
pop
out
sbb
xor
mov
fnstsw
popf
out
push
sbb
and
sbb
dec
loop
pop
dec
std
add
xchg
sub
cwtl
shlb
roll
push
dec
jl
dec
and
inc
jo
insl
push
cmp
jae
bound
add
aaa
clc
adc
xor
push
les
gs
je
push
ja
fisubl
dec
jae
push
test
nopl
dec
cmp
inc
push
jmp
insb
xor
xor
cltd
xor
mov
aaa
idivl
cmpsb
or
mov
dec
data16
push
pushf
in
inc
add
and
fsub
xor
xchg
jo
ret
sti
movsb
jbe
pop
ss
jle
sub
pop
jl
push
stos
lahf
or
jo
mov
gs
jno
sbb
ja
mov
dec
testb
jnp
aaa
sub
leave
sbb
cmpsl
jp
and
es
jne
imul
fisttpl
cmp
pop
add
sti
sbb
in
mov
stos
out
add
inc
cmp
dec
int3
repnz
shlb
sub
aas
mov
imulb
popa
pop
dec
scas
fcmovnbe
lret
xchg
out
int
ja
int
pop
imul
and
mov
loopne
lods
aaa
pop
rorl
test
popf
mov
test
push
repz
loope
jae
pop
aam
scas
loop
mov
pop
int3
adc
mov
xchg
js
and
ds
lret
mov
pop
fwait
mov
in
or
sar
cld
inc
outsb
adc
xchg
lods
xchg
adc
lock
mov
push
push
lods
adc
pop
call
neg
fldenv
dec
sahf
sbb
sbb
push
out
sti
clc
xor
mov
jb
jl
add
pop
add
pusha
inc
xchg
bnd
cmp
test
aad
test
les
dec
jp
dec
das
xchg
test
popa
pop
stc
jnp
rclb
mov
pushf
in
clc
dec
es
dec
jle
lret
imul
std
pop
movsb
sbb
test
adc
std
mov
pop
loop
into
aam
enter
cmpsl
js
xchg
jne
cmc
push
mov
adc
push
push
sub
fwait
adc
js
dec
add
cmc
dec
cmp
sub
mov
xorb
fistpl
pop
cltd
shrb
jb
jnp
dec
add
movsl
inc
ret
sub
mov
mov
jnp
adc
push
jl
inc
movl
xchg
mov
ljmp
sahf
jl
in
and
or
popa
stos
push
sbb
adc
in
mov
ja
sbb
xor
imul
fnstenv
xchg
sub
xor
cmp
mov
sbb
daa
sbb
sub
xor
push
loop
mov
test
push
cmc
ja
das
xchg
jmp
mov
sar
out
sub
dec
or
loopne
sti
lods
ffree
lods
sbb
mov
inc
sub
push
mov
mov
push
jo
jae
mov
out
repnz
inc
notb
stos
test
fs
iret
mov
lock
mov
js
lods
mov
pop
xor
mov
sub
cmp
std
dec
sbb
inc
add
out
rorl
cmp
or
pop
xchg
rcr
fsubs
jae
dec
mov
cmp
push
mov
mov
stos
sub
orl
mov
std
cmpsb
cmpsb
add
xchg
into
test
test
inc
mov
adc
movsl
andl
mov
lds
mov
jno
jle
dec
repz
adcb
ss
push
cs
pop
les
jge
adc
add
jg
jmp
adc
xchg
add
push
push
inc
jle
add
test
les
pop
dec
cld
xchg
sub
lcall
int3
sbb
or
cmp
cmpl
in
pop
pop
push
adc
mov
ret
lods
push
cld
adc
push
mov
aas
dec
addl
push
testl
js
test
push
mov
pop
into
in
shrl
orb
lret
sub
fimuls
dec
adc
mov
xor
dec
push
sbb
mov
mov
pop
negl
rorb
mov
loop
in
faddl
mov
rcl
out
in
add
fnsave
xchg
dec
std
cli
rorb
dec
mov
mov
add
push
jbe
cmp
mov
mov
inc
shr
mov
pop
jnp
cltd
push
xlat
mov
lret
bound
jo
xchg
gs
rorl
push
cmp
fiaddl
push
popa
fnstsw
jmp
popf
filds
scas
lea
push
daa
arpl
data16
dec
das
xor
and
mov
mov
inc
push
or
loop
notl
or
adc
in
inc
xchg
ret
hlt
jne
jbe
jae
xlat
loopne
inc
in
pop
pushf
ficompl
sub
movsl
push
xchg
aad
call
push
pop
xchg
jmp
and
mov
and
int3
ljmp
sbb
loope
xchg
jae
or
loope
push
roll
orl
ret
lcall
testl
lcall
xchg
sub
les
xor
idivb
xor
mov
mov
cmp
xchg
movsl
mov
pop
push
dec
pop
push
aas
mov
mov
inc
ss
aad
inc
nop
neg
mov
push
cli
outsl
sbb
popf
vpsadbw
sub
push
mov
repz
or
mov
les
push
push
and
out
dec
cwtl
mov
lret
mulb
jns
mov
push
js
movsl
cmpsl
cwtl
fidivrl
sbb
sbb
xor
std
repnz
xor
mov
es
arpl
jno
and
xor
xchg
mov
push
mov
add
movsl
adc
push
xchg
xor
xchg
aas
jmp
cmc
les
push
es
lds
lcall
into
xor
lahf
jne
sbb
leave
cmp
inc
jne
roll
stc
push
dec
cmpsl
daa
inc
cmp
xchg
ret
orb
call
adc
xor
sbb
sub
sti
neg
movl
jne
enter
les
or
xor
cmpsb
into
add
dec
jle
loop
xchg
in
jmp
push
loope
sub
jp
add
push
cmp
cmp
js
dec
mov
or
mov
push
stos
pmuludq
in
cli
xchg
or
xchg
xchg
or
sbb
cmp
ja
fimuls
pop
jg
sti
cs
cmp
lret
xlat
pop
cmpsb
hlt
mov
xchg
lods
add
or
mov
and
scas
fucomp
out
sbb
cld
jmp
jbe
adc
cwtl
xchg
adc
scas
xchg
adc
hlt
inc
in
cmc
enter
adc
lods
enter
pop
cwtl
stc
pusha
jle
das
push
lret
in
shlb
xchg
cmp
dec
scas
dec
mov
push
jbe
into
pop
cmc
push
xor
inc
negb
adcb
inc
mov
mov
push
ds
cmp
push
das
imul
mov
in
push
rorb
stos
hlt
mov
arpl
jnp
add
out
sbb
stos
ret
inc
xchg
repnz
jns
xor
aam
rcrb
xchg
loope
or
cmp
sub
rcrb
lock
test
data16
outsl
movsl
mov
popa
stos
stc
ds
pop
cmp
push
sub
lret
push
add
imul
xchg
or
ss
mov
and
fdivl
xor
call
cli
mov
les
lret
jns
xchg
adc
out
lods
ja
dec
lods
pop
mov
sbb
add
ljmp
or
mov
adc
ret
jecxz
shlb
push
dec
sub
popf
mov
andb
adcb
jmp
into
test
pop
xor
mov
mov
dec
scas
mov
jae
mov
in
movsb
and
ljmp
and
sbb
add
cmp
add
xor
movsb
out
push
dec
sahf
jnp
pushf
or
cmp
or
fsubrs
or
pop
loopne
adc
add
pusha
push
lds
loop
dec
sub
clc
sarb
add
sbb
bound
xor
cmp
call
inc
out
les
mov
arpl
jl
insb
pusha
add
pop
cli
lret
dec
sub
inc
or
fildll
pop
push
into
inc
xchg
add
push
or
ret
cwtl
adc
adc
mov
shrl
jns
popl
out
jp
in
pop
pop
je
dec
sub
sbb
xor
stos
jge
xor
push
add
shll
pop
dec
lahf
inc
pushf
push
insb
inc
lds
leave
inc
stos
addr16
mov
inc
jo
cwtl
int3
test
movsl
and
cli
cmpsl
mov
mov
mov
push
loopne
xchg
push
outsb
push
mov
in
xchg
pop
mov
inc
mov
adc
mov
fs
sub
xchg
mov
addb
and
lcall
sbb
push
test
out
pushf
mov
cli
subl
rcrb
cmc
lret
ss
jo
pop
enter
jge
adc
mov
fcoms
shll
pop
lock
es
add
sub
jno
cs
mov
scas
mov
mov
add
nop
cmp
bound
call
out
push
cli
jo
mov
push
gs
shrl
push
mov
leave
sbb
test
jbe
inc
mov
cmpsb
sub
clc
aaa
sbb
inc
lahf
pop
jno
test
into
xchg
es
getsec
sbb
xor
out
pusha
rsqrtps
and
jnp
negl
add
test
or
fcmovnbe
jmp
push
aam
sbb
sub
lock
ret
push
adc
xor
sahf
jnp
push
mov
sbb
roll
mov
sub
in
ljmp
xor
lods
cmc
jno
or
outsb
xchg
fists
je
push
inc
loop
adc
pop
mov
rcrl
fstpl
mov
das
fucomip
mov
or
out
ret
dec
jle
mov
or
xchg
xchg
push
and
mov
push
mov
xchg
aaa
movl
push
rclb
scas
jmp
jl
dec
bnd
xchg
inc
jo
inc
ja
outsb
jl
pop
xor
in
push
push
fs
lods
sub
rol
fistpl
jle
dec
fadd
adc
sarb
fdivrl
mov
xor
push
and
scas
mov
mov
loopne
mov
pop
aam
shl
outsb
js
jne
inc
leave
sbb
push
loope
push
mov
inc
js
mov
jo
sbb
jb
or
scas
loope
shl
in
lahf
aas
aas
ja
popf
testb
ret
add
adc
jecxz,pn
mov
ret
subb
int3
inc
add
inc
and
popf
mov
lock
xchg
call
test
inc
mov
ret
cmp
ret
adc
pop
jecxz
mov
sub
je
inc
mov
inc
dec
stc
cltd
sbb
sub
lods
inc
bound
clc
loopne
aad
push
jecxz
ret
outsb
cwtl
jle
push
push
jns
fidivrs
and
pop
mov
je
xor
xor
out
push
ret
jno
adc
ficoml
xchg
scas
xchg
rol
pop
push
push
push
jmp
sub
jo
stc
jp
pop
xchg
inc
stos
or
fnsave
sub
jmp
jnp
lods
repnz
mov
outsl
in
mov
push
dec
mov
sbb
and
and
aas
loop
int
popf
cltd
jb
ret
xor
xchg
fistps
mov
lock
insl
xchg
les
mov
push
ret
jae
mov
mov
fidivs
es
pop
push
lcall
dec
int3
lahf
cs
pop
js
icebp
test
mov
ds
push
jmp
aas
jle
jl
dec
inc
cmp
inc
mov
adc
push
xor
push
push
jbe
push
or
es
into
sub
clc
jo
clc
test
mulb
into
mov
out
mov
and
jne
lret
sub
stos
mov
pop
adc
mov
in
xor
out
cmp
mov
lods
adc
and
inc
fistps
jle
ret
mov
adc
add
push
mov
xchg
push
pop
dec
jb
pusha
test
sahf
in
mov
in
iret
mov
add
insb
mov
mov
icebp
xlat
sub
add
daa
stos
mov
lea
sahf
jge
lods
jo
and
mov
xchg
push
or
and
insb
dec
int
rolb
scas
mov
fcmove
leave
shll
imul
xor
inc
sub
xchg
adc
and
mov
add
loopne
mov
jge
push
test
iret
int3
cmp
orl
mov
mov
jns
add
fcomp
mov
cmp
mov
sub
cwtl
rcll
push
push
aas
adcl
add
ffree
fwait
pop
lret
out
pop
sub
pop
mov
jo
mov
xor
add
rcrb
loop
xchg
cmp
dec
js
fildll
inc
loopne
add
gs
jns
and
lahf
lea
mov
arpl
daa
into
mov
sub
ja
fsubr
lods
xchg
ds
rorb
test
adc
xchg
xor
lahf
add
fistpl
or
ss
aaa
inc
addr16
mov
push
sahf
xchg
jns
xor
add
push
push
or
dec
shlb
pop
movsb
aaa
inc
outsb
inc
jno
cmpsb
push
mov
push
fnstenv
int
in
push
cmc
inc
cli
icebp
ljmp
jmp
arpl
daa
mov
jle
and
jo
add
data16
int
or
call
pop
js
cmpsl
arpl
pop
daa
andl
pop
xchg
ds
je
aad
push
enter
loop
cs
icebp
lret
cli
comiss
dec
imul
fbld
mov
imul
xchg
push
add
mov
sub
add
outsl
xchg
aad
or
mov
test
dec
mov
xor
ret
loope
dec
incb
jmp
and
pop
insl
cmpsl
push
fbld
incl
les
xor
xchg
aad
pop
and
arpl
neg
call
mov
xchg
push
fwait
mov
lea
mov
out
outsb
or
sub
add
into
pop
or
fs
mov
and
inc
pop
mov
jp
pop
scas
xor
xchg
sbb
fs
scas
movsl
xchg
push
js
lcall
sub
sub
cmp
shrb
cmp
mov
in
and
mov
mov
jmp
imul
in
and
and
jnp
fimull
mov
out
imul
xchg
ss
lds
aam
ja
cmp
sbb
mov
dec
mov
dec
aaa
pop
cmp
cmovo
mov
push
hlt
je
std
ja
push
xchg
mov
or
pushf
in
jns
bound
push
fmuls
and
lods
ffree
mov
and
jle
mov
sbb
adc
inc
xchg
xchg
sti
pusha
outsl
mov
aas
loop
add
jmp
pop
call
jae
push
push
push
xchg
rorl
fcmovnbe
lcall
mov
xchg
adc
push
or
xchg
mov
pop
imul
negl
sub
lcall
daa
sbb
sar
or
sbb
pop
xor
xor
not
pop
inc
jecxz
add
mov
cld
mov
test
imul
test
lret
adc
test
inc
shl
subl
jge
or
lds
in
mov
in
and
es
insb
je
cmpsb
inc
sub
fwait
lods
jp
std
and
das
xchg
ret
cmpsl
add
inc
inc
cltd
jmp
adc
xorl
scas
test
adc
mov
popa
cmp
test
mov
ret
mov
ds
enter
pop
popa
cmc
pop
loop
add
inc
sub
push
repnz
dec
fildl
addr16
fnsave
loope
loopne
ror
sub
and
sbb
and
jge
pop
sbb
pop
mov
sbb
rolb
mov
inc
xor
std
dec
lds
insb
xchg
mov
add
mov
mov
jecxz
fs
jecxz
movsb
pop
push
fwait
jmp
mov
xor
lods
out
push
jg
jmp
pushl
fiaddl
das
mov
bound
mov
std
xchg
pop
xor
je
mov
jmp
fnstsw
inc
sub
push
mov
jge
xchg
or
mov
movsl
aad
int3
sub
jbe
dec
out
cmpsb
fisttpl
scas
or
testb
pop
fildll
and
cmpsb
jmp
std
js
jmp
mov
inc
and
mov
push
xor
mov
xor
inc
pop
in
loop
loope
fs
xchg
popa
lret
adc
cmpsl
out
dec
dec
jle
fildl
pop
push
aad
pop
ljmp
daa
leave
out
push
mov
or
pop
call
faddl
sub
push
rorb
xor
add
pop
add
dec
xor
inc
sub
je
adc
or
in
or
inc
into
cmp
dec
push
test
sahf
cmp
mov
mov
jmp
aad
adc
movsb
popa
int3
out
imulb
xchg
add
scas
xchg
dec
aaa
dec
popf
push
cld
data16
in
movsl
fnstsw
pop
sub
es
test
pop
and
movsb
or
dec
dec
push
jle
dec
cs
pop
inc
das
inc
sahf
push
fldenv
je
pop
bnd
lahf
les
stos
idivl
gs
and
inc
pop
ds
popa
inc
mov
push
lock
sbb
sbb
mov
scas
push
and
dec
and
popa
lret
sbb
push
ror
pop
add
test
adc
pop
in
js
fwait
mov
mov
out
stos
add
mov
jp
or
push
jmp
lea
inc
sbb
xchg
pop
xlat
push
add
loop
adc
mov
loope
adc
add
int
leave
dec
into
or
pusha
fmuls
inc
jmp
pop
inc
lret
cmp
aam
inc
mov
jle
xlat
ret
jno
mov
sti
push
dec
movsb
cmp
push
xchg
xchg
pop
cmp
addb
push
and
pop
cmp
mov
mov
pushf
mov
sbb
push
mov
pop
or
push
push
adc
sbb
and
mov
jns
inc
nop
outsb
jo
cmpl
lock
fs
pop
loope
or
pusha
sbb
mov
popa
cmp
push
jae
out
jo
cmp
mov
testb
push
jmp
repnz
ljmp
mov
out
pop
dec
loop
lods
mov
scas
adc
sbb
mov
jl
mov
inc
cmp
dec
lcall
rcrl
xchg
hlt
lahf
xor
sbb
enter
int3
addr16
sub
pusha
jmp
jmp
stos
out
adcb
xor
dec
xchg
mov
insb
mov
adc
adc
outsl
cmp
jnp
aaa
clc
out
jae
add
and
mov
mov
test
pusha
aas
xor
mov
adc
dec
stc
pop
scas
mov
and
mov
inc
and
adc
hlt
jl
jae
cmpsl
sbb
pop
jno
movsl
bound
test
or
mov
sub
push
push
mov
out
dec
cmp
inc
sarb
mov
dec
int
or
inc
in
inc
stos
in
sub
aaa
jns
aaa
mov
push
mov
xchg
ljmp
addr16
lret
stc
inc
test
insb
scas
bound
xor
bound
xlat
bswap
sti
in
dec
and
test
add
adc
jge
test
inc
test
sub
mov
cmc
movsb
ret
in
push
push
subb
push
mov
jge
pop
nop
fsts
iret
lret
xor
imul
push
insb
dec
lcall
add
inc
enter
int3
add
sahf
or
repz
icebp
and
shll
pop
rcll
mov
ss
out
push
pop
dec
je
lock
or
rolb
enter
mov
cwtl
dec
cltd
cld
fucomp
mov
ds
mov
or
hlt
cmp
ljmp
in
xchg
hlt
das
ret
mov
lea
sbb
mov
mov
adcb
sub
popf
adc
fs
mov
int3
sti
or
mov
test
fwait
and
xchg
sub
mov
imul
inc
adc
or
push
pop
test
or
ret
gs
out
pusha
jl
cwtl
stc
ds
call
lret
das
divb
clc
loope
mov
adc
push
in
pop
adc
int
inc
jb
movb
fmuls
sbb
bound
ss
pop
aas
pop
stc
jo
push
cli
cmpsl
mov
inc
inc
mov
leave
pop
gs
cld
xor
call
shrl
jmp
outsl
push
mov
lea
xor
push
leave
les
lahf
test
mov
xchg
std
ja
cs
iret
mov
aad
cmp
xor
jg
out
aam
aad
icebp
pop
sbb
cld
pop
cmpsb
jae
sub
and
mov
mov
inc
or
push
fistpll
icebp
push
xchg
ret
cmpsb
mov
iret
cltd
stos
jmp
sub
dec
pop
fs
sub
roll
mov
cmc
mov
test
pushf
lahf
andb
add
cltd
mov
xchg
push
loope
or
cmovb
xchg
or
loop
ds
sti
lds
nop
mov
mov
mov
mov
jne
mov
jne
sub
mov
push
xchg
cmp
data16
out
cmp
push
jl
cmp
mov
mov
sub
or
call
pusha
xlat
aaa
aad
js
shll
or
add
xchg
iret
or
jl
xorl
lcall
add
outsl
into
incl
bound
fadd
lock
lea
loop
mov
adc
sbb
mov
adc
mov
stc
push
jecxz
mov
mov
and
add
xlat
fldl2e
pusha
add
jmp
inc
lcall
mov
insb
pop
mov
nop
orb
stos
rcrl
dec
jg
or
shr
pavgb
pop
dec
fildll
mov
sbb
sbb
and
xchg
adc
pop
pop
call
arpl
jmp
dec
aad
js
fistl
cmpsl
pusha
mov
jne
jns
test
es
sti
aad
inc
out
fdivp
js
fistl
cmp
mov
frstor
and
jmp
pop
ret
cmp
cmp
loope
or
jno
mov
jo
sahf
dec
pop
lock
in
sub
jle
lods
jmp
adc
fists
and
scas
push
fdivr
lret
sub
adc
lods
scas
test
rcl
cmp
lds
mov
aas
loope
ss
jl
imul
test
or
sbb
scas
bound
xchg
adc
mov
sub
sahf
adc
clc
xor
mov
fimull
cwtl
aaa
add
add
adc
xor
loope
mov
mov
xor
ss
outsb
repz
in
jae
jb
mov
iret
popf
arpl
cmpsl
add
stos
push
movsl
iret
sub
mov
ret
lret
adc
out
and
dec
cmp
fsubrs
es
mov
ret
mov
xor
cmp
pop
adc
inc
xchg
and
inc
div
mov
aaa
in
setp
mov
rolb
pop
popf
gs
rcrl
mov
xchg
push
imulb
fstp
enter
xlat
pusha
inc
mov
xchg
mov
inc
push
shrb
movsb
dec
sub
dec
xchg
nop
sub
dec
lret
mov
int3
ret
movsb
scas
dec
ds
outsb
int
mov
jno
dec
xchg
xchg
mov
popf
dec
adc
rolb
jg
adc
scas
pop
cmp
mov
xor
not
aad
mov
cltd
pop
sub
mov
inc
cmp
xchg
xorl
xchg
jbe
dec
jb
outsl
xchg
into
in
dec
out
xorl
mov
cmp
fs
mov
lds
add
adc
mov
inc
hlt
fidivrs
aam
pop
bts
mov
fiaddl
mov
pop
out
pop
mov
add
add
insb
jae
shrb
mov
cmp
and
into
fst
ret
nop
mov
ss
outsb
cmc
push
rcl
mov
dec
sub
gs
sbb
mov
mov
popf
and
imulb
xor
jmp
out
xor
jbe
jb
cwtl
jl
adc
adc
push
mov
adc
adc
ja
mov
add
mov
imul
adc
xor
adc
and
ret
cmpsb
negb
sub
or
mov
repz
imul
push
rcl
outsl
leave
mov
dec
in
add
subb
mov
pop
push
or
jne
inc
xlat
xchg
add
pusha
mov
sbb
insb
stos
aas
outsb
mov
bound
xor
sbb
shll
nop
inc
js
xchg
adc
push
rolb
sahf
push
std
mov
test
cmp
adc
pop
xchg
test
cmp
mov
jl
int3
or
in
test
sub
sub
adc
add
enterw
loopne
or
cli
xchg
es
rol
mov
jle
jne
xor
sub
add
jns
fstpt
mov
jmp
fisubrl
jne
out
pop
sbb
add
cmpsb
inc
lahf
add
ret
shlb
lods
cmp
iret
xor
dec
fst
xchg
bound
aaa
cmpsb
add
repz
orb
mov
dec
inc
andl
mov
dec
xor
jg
popa
mov
clc
pop
orl
xchg
les
mov
fnstcw
adc
int3
mov
andb
or
stos
lcall
sub
dec
loope
mov
add
inc
push
jns
mov
sbb
mov
cli
std
jp
stos
push
leave
loopne
addr16
xor
fcompp
loop
andb
xor
mov
xor
dec
mov
in
jnp
add
cltd
fsubrl
mov
test
and
pop
mov
das
pop
std
xor
xor
mov
aad
adcb
cmp
shll
mov
cmp
push
test
in
pop
add
sbb
punpckhbw
lret
popf
aas
es
push
mov
jmp
insl
pop
jbe
xor
sarl
pop
mov
adcl
adc
cmp
sub
icebp
jo
inc
gs
adc
sub
and
add
je
data16
and
xchg
lcall
das
fisubs
das
mov
call
dec
mov
les
inc
iret
xchg
lcall
push
or
loop
jbe
adc
add
popf
pop
cmp
xor
rorb
push
pop
mov
and
mov
mov
sahf
add
insb
test
pop
nop
aaa
xchg
sub
jmp
push
es
daa
sub
jecxz
frstpm(287
jns
and
fistpll
cmp
push
jmp
fstl
out
dec
and
xchg
les
fsts
cs
cltd
jle
fs
cmp
mov
fwait
imul
sbb
adc
inc
mov
add
leave
dec
js
shrl
xor
mov
dec
dec
rcr
mov
cmpsb
jbe
mov
lahf
push
mov
aad
ljmp
mov
call
repz
jl
dec
sarb
jecxz
test
pop
add
cwtl
fdivrl
cwtl
scas
pop
push
mov
mov
pop
pop
fs
stos
add
mov
push
cmp
bound
xorb
mov
test
pop
push
movl
dec
push
mov
out
fidivrs
loop
dec
push
xchg
pusha
test
leave
sub
jg
mov
sub
movsl
out
cmc
mov
sbb
aas
or
mov
pop
scas
pop
xchg
lret
out
test
xor
xor
js
xorb
addl
lcall
jbe
sub
xchg
xchg
dec
mov
out
dec
mov
adc
mov
cli
shrl
xor
and
dec
jne
mov
or
push
and
out
mov
ficoms
ss
cmp
insb
in
ret
into
decb
or
sub
repz
jbe
scas
lret
fisubrs
test
movsb
inc
cmpl
add
xchg
adc
rol
sub
xor
inc
or
xchg
ds
cwtl
fsubr
mov
fistpl
xchg
push
jge
sub
fimuls
dec
and
rcrb
add
xor
loop
push
in
es
push
push
aaa
mov
or
jecxz
sub
push
popa
icebp
sbb
adc
mov
add
cmp
test
push
popa
insl
xchg
iret
fiaddl
hlt
popf
fcom
cmpsl
icebp
movl
push
scas
sbb
test
sbb
mov
add
shr
std
popa
call
xchg
imul
stc
mov
int
dec
sti
pop
popf
dec
fildll
sbb
mov
mov
pop
cld
aaa
cmp
sahf
outsl
push
dec
jmp
and
jbe
pushf
xchg
stos
hlt
lret
push
insb
mov
sbb
mov
dec
or
jnp
je
push
push
sbb
test
mov
sub
lret
mov
inc
cmp
pop
adc
rorl
push
xchg
pushf
push
dec
inc
je
test
sbb
cs
add
popa
cmp
aaa
inc
dec
dec
jne
lahf
mov
fsts
xchg
inc
add
xchg
ret
jmp
fcomp
jnp
jle
mov
out
xchg
aad
aad
xchg
pusha
nop
pop
xor
in
das
mov
lods
xor
cli
test
lahf
and
imul
sbb
andl
pusha
loop
outsb
mov
loopne
dec
fistl
gs
push
sub
test
xchg
hlt
fldlg2
push
stos
adc
add
je
fldl
dec
cmp
xchg
mov
sahf
mov
jo
sub
mov
sbb
rol
cltd
pop
xor
sbb
inc
xor
push
fwait
sub
sub
jmp
mov
lret
imul
sahf
leave
or
enter
mov
push
jnp
iret
jae
out
xor
adcl
xor
sub
or
popf
addr16
insl
cs
pop
cmpsl
sub
aas
out
stos
mov
push
inc
push
pop
ljmp
mov
mov
fwait
test
fcomps
mov
push
sub
in
js
or
lods
adc
xlat
repnz
mov
mov
stc
sub
stos
les
jb
jo
out
cmc
js
je
insl
cmp
in
jo
dec
mov
icebp
add
push
insb
inc
sarl
push
mov
and
cli
leave
adc
fisubs
mov
jb
bound
mov
cmp
adcl
mov
sub
or
pop
sahf
dec
mov
sub
sub
sbbb
mov
in
mov
pop
ret
repz
jae
push
clc
cmp
lock
icebp
sbb
cwtl
mov
inc
pop
xchg
stc
sbb
and
ljmp
mov
aad
inc
inc
push
mov
sbb
jne
test
ja
std
cs
mov
or
xor
sub
push
lahf
inc
pop
xchg
sbb
int3
inc
push
sub
movsl
cmp
mov
inc
outsb
subl
mov
cmc
lret
or
mov
andl
popa
mov
mov
mov
decb
push
or
shrb
adc
movsb
divb
arpl
mov
push
push
jbe
xor
xchg
xor
aam
pop
sub
push
sahf
sbb
and
jae
addl
pushf
ffreep
imul
sub
jmp
or
mov
add
jns
jle
fsubs
es
data16
inc
cmp
testl
xor
jno
mov
add
outsl
jmp
addl
jo
sub
add
mov
sub
outsl
push
scas
insl
and
mov
add
sbb
add
push
push
jmp
loop
pop
push
fldl
loope
out
dec
mov
mov
push
pop
in
cli
in
pop
insb
xor
mov
sti
test
les
add
mov
fsubs
stc
pop
icebp
int
xchg
pop
push
pop
jp
inc
scas
add
adc
mov
dec
fwait
mov
push
xchg
test
repnz
sub
jmp
cmpsl
mov
aas
ds
adc
in
sbb
mov
ret
lcall
mov
sub
mov
dec
xchg
negb
cmpsb
sbb
decb
sbb
cmp
out
push
nop
push
mov
stos
lods
insb
stos
ret
mov
mov
jp
pop
dec
pop
push
sbb
fildll
pop
sub
jo
out
ds
cmp
lret
movsl
cmp
loope
mov
in
mov
or
xchg
adc
dec
dec
xor
dec
imul
dec
and
dec
test
ss
xor
sub
in
add
mov
add
lods
insb
loop
popa
imul
xor
stos
push
and
xor
leave
mov
inc
out
jg
push
dec
popa
jmp
aam
fbld
adc
jge
or
and
int
mulb
cld
xchg
outsl
add
lea
jl
pop
mov
adcb
sbb
pop
mov
push
mov
pop
das
pop
iret
jecxz
inc
mov
xor
dec
jmp
movsb
jg
adcl
call
fdiv
in
mov
or
out
push
mov
idivl
ret
cld
lock
xchg
jo
imul
cmp
sbb
xchg
fyl2xp1
out
mov
push
sbb
add
lods
jbe
shlb
mov
mov
adc
lret
sarl
and
fcoml
push
xchg
xchg
sub
pop
rcll
pushf
push
aas
adc
dec
mov
jmp
lds
cmp
mov
cmp
lds
scas
and
sub
xchg
ljmp
adc
inc
movsl
gs
xchg
mov
sbb
sbb
mov
inc
movsl
pop
jnp
out
and
jnp
test
outsb
dec
mov
dec
int3
jp
push
aas
adc
xchg
imul
movsb
sahf
mov
mov
pop
and
cmc
jo
inc
lods
pop
ret
xor
and
dec
clc
mov
lcall
repnz
daa
pop
js
int3
mov
xor
mov
xor
sbb
outsb
lret
sub
jns
outsl
xchg
sahf
xor
nop
push
cld
dec
sbb
aam
test
and
int
cld
les
cwtl
mov
jb
mov
scas
fnsave
mov
add
push
push
inc
sub
pop
inc
jae
add
sub
sbb
shll
inc
and
sbb
and
fwait
mov
push
stos
nop
test
movsl
shll
test
xchg
es
sub
in
imul
call
mov
aaa
mov
adc
push
js
add
adc
int
ret
add
lds
inc
pop
xchg
ljmp
mov
dec
sbb
imull
mov
lcall
xor
fsubr
lret
push
or
xor
pop
in
test
cmpsb
into
push
nop
mov
pop
xchg
jnp
ror
dec
jae
dec
fadds
sbb
mov
or
mov
shlb
stc
sarl
lret
inc
sub
test
mov
fstpt
testb
push
hlt
hlt
lret
mov
mov
and
pop
mov
std
loopne
fisubrs
jmp
lods
cmp
mov
or
sub
inc
lcall
or
int
jns
mov
push
cmp
inc
xchg
lret
push
add
pop
mov
xor
rorb
out
movsl
cli
in
push
adc
sarl
aas
xchg
jge
jge
adc
mov
pop
mull
cltd
dec
test
cmovbe
lods
sbb
bound
pop
int
jg
into
inc
inc
sbb
push
lahf
or
das
xor
mov
test
int
addb
add
les
nop
pusha
jg
cmp
cmp
xchg
arpl
inc
push
lahf
or
mov
arpl
jg
test
adc
fildl
std
je
inc
hlt
cltd
push
jb
rorl
mov
cld
mov
orb
scas
and
sub
and
cmp
jg
test
out
push
mov
aam
insl
sbb
dec
and
leave
inc
push
mov
fsubrl
push
sub
jae
out
and
jo
test
and
xchg
cwtl
or
jno
xor
dec
xchg
icebp
lock
xor
imul
xchg
pop
pushf
pop
adc
mov
ja
and
add
push
aaa
adc
inc
aam
xchg
sub
add
das
jle
popf
fcoms
shlb
push
shl
adc
sub
dec
insb
sarl
sbb
and
je
cwtl
xchg
fsts
push
cli
pop
pop
xchg
dec
sub
xor
add
jge
xchg
aad
pusha
int3
inc
lds
ficoml
push
sub
lret
cmp
push
add
inc
loop
cmp
mov
mov
lods
aaa
into
add
cmp
incb
faddl
sbb
push
sub
cli
shll
mov
inc
mov
mov
inc
or
and
fwait
bound
cmc
push
or
sbb
ret
adcb
call
test
shr
xor
lock
out
test
jae
cs
or
shll
push
call
out
jo
xchg
lahf
xchg
jp
ds
pop
pop
movl
add
mov
and
cmc
notb
insl
fisubrs
xchg
sti
jnp
cmp
or
or
dec
mov
mov
mov
mov
nop
inc
idiv
stos
or
dec
or
inc
adc
sub
sti
jno
add
dec
in
jo
mov
js
in
mov
mov
and
aas
orb
ret
cli
fistpll
inc
pop
sbb
js
je
mov
mov
sub
sarl
fs
fnstenv
push
call
jo
movsb
shll
xchg
xor
mov
addb
dec
enter
sar
jg
sti
iret
xchg
mov
xchg
sbb
or
sahf
ds
stos
add
mov
push
pop
loop
xor
pop
sbb
cmc
mov
daa
jnp
out
jns
xchg
add
aam
inc
jmp
inc
dec
add
cmp
pop
xchg
mov
or
adc
pop
cmpl
imul
mulb
inc
dec
lods
jle
leave
inc
mov
ret
jp
outsl
out
pop
dec
pop
mov
and
das
in
mov
aam
nop
nop
xchg
inc
aad
mov
jae
fisubl
sahf
cmp
addr16
ret
lahf
setl
sbb
enter
mov
xchg
cmpb
cmpsb
jl
in
mov
repnz
ret
rol
js
mov
lea
adc
pop
in
pop
adc
in
mov
and
sbb
cltd
sub
arpl
enter
xchg
sbb
cs
iret
mov
mov
mov
push
inc
fdivrs
rcr
ficomps
xchg
lcall
sti
cmp
popa
mov
pop
bound
test
fs
push
bound
addr16
jo
lret
shrl
rcr
xor
inc
xorb
push
jg
xchg
mov
xor
mov
popf
das
xor
sub
mov
loopne
push
sub
pusha
sub
lret
pusha
mov
loope
xlat
inc
mov
and
jge
mov
call
lcall
or
popa
pop
movsl
inc
scas
sub
jbe
push
push
cmpl
fldt
xor
out
loop
mov
fnstsw
xchg
sahf
rcll
and
fisubl
out
pop
idivl
pop
inc
mov
xorl
test
mov
movsl
fucomp
je
pop
ret
xor
sub
mov
cmp
call
mov
mov
xorb
pop
dec
incl
jg
sub
xchg
stos
cld
loope
jl
or
cmp
sbb
pop
hlt
push
filds
xchg
xchg
cmp
mov
push
jbe
sub
push
imul
loope
mov
jns
js
mov
xor
lcall
mov
in
sub
imul
xchg
popa
mov
cld
or
cs
jge
pop
mov
mov
fimuls
dec
shrb
out
jg
mov
cmp
and
inc
cmpsb
aaa
push
add
insb
inc
bnd
push
push
mov
push
jb
mov
dec
jae
cmp
ret
lock
outsl
inc
xorb
pop
mov
mov
dec
sbb
inc
add
inc
jl
add
and
pop
add
out
jbe
fidivs
fisubs
repnz
adc
aam
lods
shll
stc
js
or
repnz
mov
jecxz
jmp
or
test
xchg
push
xchg
xchg
in
int3
push
and
adc
pop
popf
pop
movsl
inc
mov
sub
lcall
mov
fdivl
mov
add
push
xchg
cmpsl
outsb
mov
jp
xchg
xchg
dec
jb
ljmp
loope
mov
jge
test
out
js
mov
xchg
test
call
push
hlt
xchg
sbb
mov
pop
and
je
popf
cmp
inc
cmp
call
out
sar
stc
mov
xor
jnp
xor
push
hlt
mov
inc
xor
sbb
dec
cmp
es
sbb
lea
cwtl
mov
dec
cmpsb
jecxz
push
in
jae
mov
push
cmp
jbe
fdivrl
in
inc
dec
in
adc
adc
jp
push
lcall
mov
pop
pop
nop
and
test
out
insl
xor
push
sbb
outsl
inc
fdivrs
push
mov
sahf
pusha
pop
mov
inc
xor
pop
imul
cmc
jbe
inc
mov
mov
es
pop
out
cmp
sub
test
and
jnp
lods
shl
adc
lret
in
jecxz
inc
push
outsl
add
dec
cltd
lret
inc
mov
addl
push
sub
mov
and
add
and
repnz
push
adc
sub
rcl
dec
push
insl
push
es
loop
cmc
and
lods
or
movsl
es
mov
in
jbe
jl
popf
jns
nop
pop
imull
xchg
call
aam
out
mov
testl
cli
repnz
ljmp
xor
inc
aam
and
xor
lret
rcrb
pop
jecxz
movsl
pop
pushf
js
mov
call
rol
adc
jg
or
ds
and
pop
xor
test
jb
js
pop
outsb
pop
xor
cli
and
enter
cmp
and
insb
test
mov
mov
push
or
aad
ret
dec
adc
or
jge
sarb
int
stos
pop
into
pop
push
push
mov
movsb
dec
stos
and
push
inc
cli
mov
jnp
lret
in
lret
pop
cmp
jne
xor
inc
xchg
outsb
jne
in
push
testl
rcrb
movl
pop
or
mov
call
mov
outsl
pop
js
out
movzwl
in
pop
adc
rcrb
ss
mov
jecxz
add
xor
jmp
mov
and
cmpsl
sub
mov
jns
bound
and
push
in
jns
dec
push
addr16
mov
loopne
jle
popf
adc
sub
cmp
mov
inc
and
roll
sub
jae
icebp
xchg
sbb
aas
mov
jnp
xchg
enter
pop
cmpsl
dec
out
push
shl
lret
lods
jbe
ss
call
leave
jmp
out
xchg
jbe
mov
fbstp
mov
mov
mov
dec
jno
lcall
inc
inc
dec
repnz
aas
jne
cmp
imulb
ljmp
push
mov
mov
aas
mov
push
rcr
shrb
mov
jle
cmp
push
out
push
xor
sbb
dec
xchg
leave
cmpsl
lods
arpl
push
hlt
stc
test
test
mov
pop
fwait
fs
mov
xchg
push
test
je
pushf
push
or
or
adc
lea
ljmp
mov
xor
jecxz
mov
lret
xor
push
or
pop
mov
xor
icebp
nop
movsb
inc
sub
or
cmp
fidivs
jg
xchg
fwait
pop
xor
stos
jo
bound
lea
loopne
mov
sbb
sahf
daa
fwait
lret
push
mov
mov
and
clc
adc
cmp
add
mov
cli
jg
test
out
sub
cltd
sbb
xor
sahf
jg
andl
in
fadds
insl
movsb
out
aad
inc
push
push
inc
adc
sbb
out
xor
and
outsb
xchg
cmpsb
sarl
test
daa
ljmp
imul
stos
jl
scas
adc
jle
inc
add
rcrl
mov
mov
rorb
push
xor
imull
mov
inc
cmp
adc
call
fildl
lock
jb
in
aad
repz
and
jno
or
nop
jb
adc
and
arpl
pop
pop
pop
cli
stc
insb
test
cmc
loope
xor
mov
jmp
cmp
sub
pop
push
xchg
add
mov
test
incl
cmp
leave
inc
cmp
mov
stc
shll
mov
subl
xchg
mov
xchg
ret
and
rorl
loope
clc
push
mov
push
mov
jb
sbb
mov
clc
insl
loopne
jp
lret
and
sub
mov
sub
mov
movsl
mov
push
lock
shr
lods
ss
adc
cmp
call
sbb
or
jo
or
xchg
fimull
jp
mov
ja
outsb
inc
fsubrl
inc
jecxz
xchg
in
mov
and
or
into
aaa
xchg
inc
ret
sub
aaa
out
fwait
out
in
xor
cmp
add
icebp
mov
fisubrl
push
jp
daa
xlat
push
ret
data16
xchg
iret
mov
mov
jmp
aaa
insl
bound
sub
loope
cltd
insl
jo
stos
nop
outsl
sahf
push
sub
insb
ja
sub
xchg
push
mov
or
loopne
xchg
inc
jbe
dec
subl
rorb
jge
orl
or
mov
jnp
iret
in
push
stos
fdivrs
push
adc
jge
mov
fmull
cld
dec
jo
jle
xchg
lret
mov
or
inc
int
jge
outsl
mov
jo
repnz
aad
lcall
iret
jnp
push
cltd
mov
shrl
pop
xor
stos
and
sbb
or
sti
in
stos
sbb
cmpsl
xchg
xor
fcmovu
and
lock
mov
loope
cli
xor
mov
jns
xchg
sub
push
inc
mov
jns
push
stos
insb
jae
inc
push
xchg
inc
xchg
jmp
lods
lret
mov
test
xchg
pop
sbbl
sbb
flds
rcrb
jno
push
mov
sub
mov
mov
popa
pop
push
mov
out
out
push
push
testl
test
popf
and
xor
fwait
xor
lahf
lret
stos
xor
pop
das
and
xor
cltd
daa
cwtl
dec
aaa
mov
in
pop
loop
xchg
dec
and
mov
rol
mov
jno
cmp
dec
out
outsl
fs
pop
push
xchg
mov
sbb
fimull
cld
addr16
pushf
inc
test
testb
icebp
xor
cmp
push
out
push
dec
loope
jns
int3
sbb
add
xchg
push
mov
scas
das
bound
addr16
xchg
pop
xchg
fwait
xor
xor
cs
mov
mov
add
sbb
push
mov
pop
aaa
les
xchg
dec
mov
dec
in
xchg
rorb
out
jp
xchg
inc
lahf
loopne
lea
shl
and
mov
repnz
movsb
in
fisttps
insb
stos
inc
fs
xorl
lahf
ljmp
into
inc
in
imul
pop
jae
mov
xchg
push
out
mov
pusha
mov
xchg
pop
add
xchg
push
cltd
add
mov
mov
sub
mov
fs
ja
inc
es
xchg
rcr
icebp
pushf
call
adc
xchg
push
cld
mov
and
in
adc
jb
rcrb
jl
inc
adcl
ret
jmp
popa
add
mov
pop
inc
movsl
inc
fildl
rolb
xlat
xor
mov
mov
int
mov
scas
lahf
fistpl
push
outsl
lret
inc
sbb
mov
cli
dec
dec
mov
adc
addr16
mov
ja
ljmp
adc
pop
inc
mov
jmp
in
je
jnp
xor
jge
add
mov
cmpsl
sarl
data16
pop
arpl
loopne
mov
inc
push
aad
hlt
repnz
cltd
inc
mov
in
fcomps
popf
call
es
sbb
xchg
cli
or
scas
adc
lods
mov
inc
adc
jb
loope
pop
push
fucompp
in
invd
jb
jp
jno
pop
pop
cwtl
mov
cwtl
xchg
imul
xchg
int
xchg
and
fdivrl
push
jg
popf
jne
inc
pusha
inc
pop
jmp
fcmovne
es
fdiv
lret
fcompl
pop
cmpsl
push
or
fistl
dec
mov
popa
sbb
test
pop
lods
lods
dec
gs
mov
mov
jecxz
xor
jecxz
xchg
add
clc
push
sbb
mov
add
nop
repz
jno
stc
fsubl
jae
push
inc
pop
sub
jle
mov
mov
adc
cmc
push
rolb
mov
in
xor
adcb
mov
mov
lds
jbe
inc
fldt
mov
in
in
mov
fdivrs
ds
sar
pop
mov
jns
add
xlat
iret
xchg
inc
icebp
sbb
lret
aam
repz
or
adcl
pop
cmp
mov
sbb
or
pusha
adc
jg
mov
popf
inc
hlt
sub
or
mov
xchg
leave
or
jmp
sub
cmp
mov
xorl
addl
stc
imul
cld
popf
mov
popa
fsubl
stc
sbb
dec
mov
inc
stc
mov
adc
dec
inc
ret
aaa
cmp
pushf
std
add
imul
sbb
pop
fnstcw
test
movsl
filds
cli
cmp
cmpsl
jp
push
fisubs
push
iret
xchg
mov
push
mov
aad
xchg
xor
push
mov
dec
add
outsl
je
push
mov
aam
push
cmc
sbb
decb
out
out
mov
and
daa
pop
leave
cmp
imulb
jb
cld
push
and
jae
mov
daa
and
inc
movsl
int3
out
rcll
subb
cmpsl
mov
push
jae
std
andl
negb
mov
pop
popa
into
jmp
jge
pop
add
adc
inc
dec
repz
mov
fwait
repnz
cmp
inc
imul
div
ror
push
decb
popa
notl
int3
cmpsl
mov
mov
ss
sbb
lcall
mov
mov
mov
jmp
out
push
out
mov
jmp
js
push
in
dec
addr16
mov
and
rcll
xchg
roll
xor
xor
pusha
push
push
xor
loope
test
add
and
pushf
repnz
pushf
xor
inc
or
insb
mov
fnstsw
xchg
dec
outsb
popa
jae
and
call
xor
jbe
mov
cli
jno
cmp
xchg
cmp
pop
insb
arpl
insb
mov
dec
divb
or
js
mov
imul
movsl
sti
mov
jge
jmp
out
enter
mov
cltd
push
inc
bound
fildl
push
popf
add
daa
outsl
fidivs
js
cmpsb
out
pop
outsl
add
xlat
shl
ror
adcb
scas
push
outsb
sbb
outsb
aad
insb
xor
lahf
dec
add
xor
outsb
cs
pop
lods
jo
xchg
mov
push
fnstsw
in
cs
pop
lret
jo
inc
mov
hlt
adc
push
sbb
sub
or
lret
fs
jb
push
hlt
daa
je
mov
or
pop
mov
mov
aas
add
or
cwtl
fdiv
dec
lret
in
fcompl
shrb
xchg
dec
jb
test
dec
xor
jmp
jmp
mov
outsl
aaa
mov
cmpsb
clc
mov
cmp
add
out
cmp
fcoms
push
sub
or
inc
in
sbb
mov
sbb
fldl
push
mov
cltd
out
jo
push
pop
or
adc
addr16
pop
mov
pop
aas
popa
dec
subl
jle
sbb
repz
cmp
mov
dec
jmp
pusha
js
mov
push
xlat
cmp
shlb
dec
pop
divl
push
mov
shr
imul
and
jl
add
lcall
mov
aad
popa
out
inc
scas
das
jge
std
cmp
dec
push
add
shl
pop
bound
inc
rcl
fisubs
push
or
jmp
cmc
movsb
sub
pop
inc
inc
in
inc
fadd
in
neg
lods
ljmp
xor
inc
loopne
movsl
inc
mov
add
cmp
and
mov
cmpsb
jmp
fwait
loopne
xor
pop
dec
mov
sbb
jmp
pushf
ss
jns
jp
sbb
mov
and
xorb
aaa
sub
add
pop
pop
in
sub
xchg
rclb
mov
mov
pushf
sar
push
sbb
or
push
cwtl
js
decl
imul
lahf
sar
xor
add
and
mov
scas
aaa
fldl
outsb
push
xor
ljmp
lret
pusha
lea
mov
add
dec
fmuls
insb
xchg
xchg
or
dec
mov
push
or
dec
pop
frstor
dec
push
std
out
xchg
dec
ret
shll
xchg
ss
inc
xor
enter
outsl
popa
andl
jnp
mov
popa
or
push
mov
xchg
out
adc
mov
cmp
in
xchg
cmp
add
enter
jmp
out
mov
dec
cmp
enter
stos
pop
jno
inc
in
pop
jb
add
iret
test
cmovno
push
jb
dec
push
and
lcall
sub
push
fcmovu
pop
add
cltd
sbb
xchg
jne
xor
and
inc
inc
adc
xor
dec
repnz
push
sahf
cmp
outsl
scas
add
incl
sbb
mov
je
inc
ret
adc
int
or
xchg
insl
xchg
jne
repnz
push
jl
les
outsb
inc
mov
inc
xchg
sbb
sbb
fmulp
lods
jmp
bnd
push
out
xlat
sbb
cmp
sti
cld
lret
xchg
ret
add
sbb
mov
nop
cltd
inc
insl
sar
sub
mov
sub
pusha
xlat
fwait
xchg
cmp
loopne
xor
or
mov
stos
pop
mov
mov
add
fiaddl
and
inc
out
movsl
adc
xor
ret
mov
cmp
mov
add
mov
adc
lds
jecxz
popf
add
ja
sub
loope
aas
xchg
push
lods
add
or
pop
testl
fstps
dec
outsl
fisttpl
repz
sbb
int3
push
stc
orb
xchg
cs
aas
test
mov
nop
stos
jmp
mov
jbe
pop
mov
int3
rorl
repnz
stos
negb
mov
and
dec
sbb
push
push
mov
in
mov
mov
adc
fsubl
test
jo
push
aad
add
icebp
fistl
sbb
movsl
mov
push
out
dec
fcoms
sbb
cs
clc
clc
or
pop
xchg
xchg
push
sbb
xor
shll
add
dec
pop
fnstenv
jnp
stos
jae
jg
es
pop
daa
repz
cmp
loope
pop
bnd
and
je
dec
into
adcl
aaa
popf
hlt
std
cmp
cbtw
pop
icebp
arpl
jg
adc
jno
sub
mov
adc
xchg
dec
adc
aas
sub
adc
cs
pop
sbb
out
adc
popf
movl
int
pop
or
insl
insb
jmp
aam
outsl
aam
jb
mov
jno
imulb
jae
insl
outsl
inc
dec
mov
stc
sub
out
mov
mov
sub
imul
mov
test
mov
mov
popf
cs
and
add
adc
jno
or
fwait
xchg
sbb
sub
and
jnp
clc
in
lret
icebp
test
push
xor
sbb
lea
lret
mov
lret
imul
enter
cmp
and
ret
lds
repnz
cmpsb
jnp
adc
cmp
shl
sub
gs
cmpsb
jo
xlat
lret
push
shll
shl
or
imul
pop
outsb
lret
pop
pusha
adc
xchg
je
call
xchg
add
int
test
sbb
pop
push
sub
xor
cli
hlt
push
dec
pushl
shrb
roll
fstpl
or
jmp
lret
dec
sbb
cmpsb
and
sub
add
iret
stos
push
inc
add
lcall
repz
adc
fimull
arpl
sbb
int3
das
push
scas
ficoml
pop
xchg
incb
daa
insb
iret
ror
or
insl
cwtl
scas
cmp
scas
mov
mov
popa
jns
mov
inc
push
xor
jge
or
mov
jns
shll
jb
mov
je
xchg
push
leave
loope
push
mov
scas
add
or
mov
mov
pop
je
int3
cwtl
jg
mov
jmp
cmpsl
shl
xor
adc
in
es
imul
aam
stos
dec
adc
sbb
xchg
sbb
mov
nop
ss
sti
adc
xorl
adc
pop
mov
or
cmp
pop
jmp
jo
cmpsb
and
sahf
adc
jge
loopne
or
aaa
les
jne
inc
cs
and
and
lds
sti
daa
aam
mov
mov
ret
out
pusha
in
pusha
inc
xor
push
les
sub
repz
add
sub
or
mov
aad
mov
pop
dec
mov
mov
fdivrl
add
lret
sbb
mov
cmp
dec
xor
mov
jae
pop
clc
hlt
sub
push
into
pop
int3
mov
das
movsb
repz
data16
roll
xchg
lock
call
icebp
loop
and
mov
pop
add
icebp
daa
dec
aaa
addb
jae
xchg
jl
cmp
sbbl
xchg
sarl
cmp
push
pushf
mov
mov
xchg
in
dec
inc
adc
pop
bound
sbb
cmp
mov
jecxz
inc
repz
jecxz
std
add
mov
je
into
jle
adc
in
push
fadds
xchg
rep
xchg
mov
xchg
cmp
incl
mov
inc
push
xor
mov
jle
ss
sbb
les
dec
jae
push
rcrl
jmp
int
clc
sti
hlt
and
and
dec
test
jecxz
pop
test
mov
cmp
sub
cmpsb
sub
stos
xchg
out
inc
push
fildl
cmp
xchg
std
mov
outsl
lea
flds
add
jb
mov
sbb
pop
and
mov
sarb
fdivrl
rorl
add
cmp
hlt
sbb
dec
das
push
mov
push
cmp
sub
icebp
mov
mov
mov
cmp
or
in
addb
sbb
push
stos
data16
movsl
mov
test
inc
add
es
xchg
in
mov
lea
in
pop
leave
lcall
cmp
or
pop
insb
repz
or
shr
lret
lea
stc
in
push
xchg
fwait
in
fs
xor
lret
mov
cwtl
pop
mov
add
jge
in
adc
icebp
out
push
add
in
ret
adcb
sub
dec
pop
pop
sti
adc
popa
sub
sbb
cmpsb
xchg
mov
pop
cld
mov
roll
stc
jns
jge
or
cmp
or
iret
cs
sub
and
push
in
lcall
scas
mov
xchg
icebp
lds
aam
push
int
jb
lret
sbb
ds
sub
cld
mov
xchg
xchg
aas
xchg
orb
mov
sub
jns
push
mov
or
mov
lock
adc
mov
testl
hlt
fsubl
jno
clc
ret
inc
mov
and
sub
or
inc
jae
bound
push
and
cmp
mov
inc
and
sub
mov
inc
sbb
mov
pop
js
imull
mov
sbb
adc
pushf
xchg
cld
shl
and
mov
out
mov
inc
shlb
hlt
pop
add
cmp
mov
jae
es
into
movsl
and
mov
movsb
xchg
and
aam
xchg
jns
dec
hlt
cmp
push
xchg
add
pushf
lea
lods
ficompl
pushf
adc
test
lods
rolb
sar
cmp
push
rcl
jnp
xor
or
jmp
ja
mov
add
dec
mov
inc
lret
inc
jle
data16
outsb
call
lea
lods
loope
xor
xor
and
xor
loope
push
sbb
inc
rclb
lret
push
in
or
cwtl
pop
fldcw
push
mov
frstor
push
push
loope
mov
mov
movsb
sub
jg
shll
popf
cwtl
fstpt
int
je
aad
push
push
mov
cmp
dec
or
dec
lret
sub
push
dec
cli
aam
cmc
xchg
fiadds
dec
cmpsb
lret
js
lret
cmp
jg
out
sub
mov
fwait
sub
ja
mov
push
out
ja
push
cmc
filds
divl
push
jnp
dec
inc
lcall
fnsave
popa
xchg
xchg
and
mov
dec
out
out
xchg
sub
popa
shlb
inc
xor
hlt
pushl
mov
mov
mov
cmp
mov
sbb
sti
outsl
mov
jl
out
cmp
jmp
fdivp
lcall
ljmp
xor
lds
push
mov
sub
xor
jg,pt
jl
jp
jo
hlt
xchg
aaa
and
movsl
ss
pop
std
aam
sti
out
lret
jns
and
mov
mov
ror
mov
dec
mov
push
dec
je,pt
sub
mov
and
pop
cmp
ljmp
aas
loopne
mov
adc
scas
xchg
daa
shll
jp
ds
insl
jg
pusha
dec
adc
xchg
into
lcall
gs
add
push
sbb
sbb
mov
aas
xor
ss
mov
inc
enter
iret
out
mov
pusha
add
outsl
imul
sahf
in
sub
mov
aaa
shl
mov
fisubrs
fwait
xor
cmc
mov
push
ss
in
cld
mov
in
rorb
jno
cmp
mov
mov
stos
dec
dec
inc
mov
shll
or
add
xchg
das
and
jae
cmp
test
xchg
fninit
incl
imul
dec
rorb
push
nop
or
shrb
mov
add
sarl
inc
xor
mov
pop
or
push
and
shlb
ss
or
xchg
jbe
lock
lret
adc
inc
popf
xchg
mov
not
mov
mov
sbb
sub
and
into
pop
cwtl
repnz
gs
notl
addb
imul
sub
aas
mov
fnstenv
push
jmp
lds
xlat
xchg
shr
xchg
fdivp
push
fiadds
pop
jno
enter
jne
sbb
cwtl
cld
xor
xchg
adc
push
imul
pop
scas
into
arpl
repz
fwait
mov
dec
pop
adc
rcrl
sub
lcall
mov
xchg
xchg
int3
mov
rcr
lds
sub
mov
int
fstl
or
mov
sbb
lahf
aad
cmpsl
push
lea
mov
jmp
mov
sbb
leave
test
or
lret
jb
cld
xchg
mov
or
xor
add
push
ret
sub
test
negb
dec
cmp
sub
fldl
icebp
lock
sbb
hlt
out
push
cwtl
mov
push
cltd
pushf
bound
xchg
and
sub
inc
subl
inc
hlt
lods
stc
pushf
or
mov
bound
and
repz
cmc
es
cmp
clc
pop
and
mov
dec
ljmp
xor
jmp
shlb
pop
add
shl
jp
test
dec
ja
lea
and
cld
out
adc
mov
lcall
add
push
mov
cli
jb
loopne
clc
add
xchg
andb
sti
mov
test
xchg
fldenv
dec
das
das
andl
push
fadds
fcomip
loope
lahf
push
push
add
lahf
mov
push
in
sti
mov
data16
xchg
adc
and
lods
jae
pop
jecxz
fistl
dec
jg
lret
mov
into
mov
cmp
add
dec
stc
div
sbb
mov
dec
sub
enter
push
int
inc
out
mov
jns
sar
and
daa
cli
xchg
push
pushf
fwait
xchg
lock
sbb
jns
push
lret
push
and
sub
adc
pushf
jae
out
icebp
mov
inc
out
mov
loop
jge
jmp
mov
or
call
sbb
stc
daa
into
push
mov
lahf
iret
insb
jp
push
aam
push
jno
fs
mov
in
and
into
or
pop
hlt
jle
outsb
dec
push
cmc
push
or
and
sbb
call
push
lock
in
addr16
jecxz
push
and
aas
cmpsb
js
inc
mov
jno
mov
fwait
popf
enter
mov
xchg
jno
fisubrl
fistl
ficoms
fstpt
jae
xchg
leave
cmc
bound
mov
xor
adc
push
call
inc
mov
sbb
xor
aaa
push
ds
ret
sbb
mov
add
insb
mov
clc
ja
stc
cmp
jp
xchg
push
jbe
mov
push
in
mov
call
ds
jns
push
faddl
sahf
leave
inc
fisubs
sti
xlat
jge
dec
int
stc
jecxz
cmpsl
pop
xor
into
or
jne
jb
xor
clc
cld
aaa
pop
mov
mov
jnp
test
sub
push
lahf
mov
shl
dec
pop
test
sub
sub
mov
inc
dec
ret
sti
not
or
ret
out
push
xor
mov
sbb
imul
mov
enter
in
xchg
test
push
ja
in
inc
and
shl
mov
adc
adc
mov
pop
out
xlat
sahf
xlat
test
fistpll
rcll
dec
repz
fbld
das
fs
loope
xor
scas
mov
arpl
mov
leave
lret
ret
cmp
jg
in
out
test
xor
xchg
mov
mov
mov
mov
popf
dec
std
int
es
xchg
add
flds
decb
lcall
cld
mov
in
sbb
adc
stc
fists
aad
jae
dec
sbb
jne
push
lea
sbb
inc
and
xor
stos
sar
sti
cmp
xchg
xchg
sti
outsb
or
xchg
idivb
mov
dec
push
cmp
sti
fcmovbe
sbb
fs
cmc
dec
mov
inc
dec
je
push
in
adc
icebp
xchg
icebp
test
cmp
cmp
test
dec
in
ret
cmc
lret
loop
inc
jb
and
jmp
ss
call
testb
jo
loop
aad
adc
jge
lret
adc
mov
and
repnz
or
test
jp
lods
mov
fimull
cmpb
ret
lods
sub
in
cmpsl
push
and
fcmovu
scas
mov
shl
jle
dec
sub
adc
or
add
lret
add
push
dec
add
repnz
stos
xlat
xchg
mov
xchg
enter
mov
insb
pop
inc
rcll
inc
add
mov
xchg
aad
push
xchg
sbb
sub
mov
outsb
or
mov
cmp
jnp
dec
and
imul
insl
imul
cmp
jnp
pop
jae
mov
adc
cmp
inc
mov
jb
mov
ret
in
add
dec
fbstp
aad
insb
mov
cmp
test
xchg
test
xchg
arpl
inc
cmc
pop
test
pop
daa
lds
dec
mov
push
mov
lret
cwtl
add
rorb
mov
es
loope
sbbl
jp
and
mov
mov
or
dec
test
les
mov
mov
lods
mov
sarl
popa
cmp
insl
outsb
sub
inc
xor
mov
xchg
loopne
out
aaa
or
int3
loopne
mov
and
lock
enter
inc
ret
out
inc
jp
lods
mov
fwait
add
fcmovnb
pop
je
lret
pop
jmp
mov
mov
jnp
adc
xchg
inc
xchg
fistl
test
adc
dec
nop
in
fnstcw
jmp
repz
jns
inc
sbb
cltd
shrl
mov
push
lods
xor
movl
out
pop
or
pushf
xor
add
in
sbb
and
mov
lock
inc
sub
add
push
arpl
pop
or
loopne
cs
in
cmp
movsb
ss
imull
ret
cltd
cwtl
sbb
adc
fisubl
sti
inc
out
outsb
dec
pop
and
or
adc
add
scas
xchg
and
adc
into
inc
or
stos
rorl
shrl
fwait
dec
mov
bound
popa
lea
xchg
mov
push
popf
dec
cltd
mov
mov
xor
sbb
aad
sbb
cld
push
mov
vaddss
lahf
in
lcall
sti
call
or
call
xchg
sub
cltd
divb
je
or
add
cmp
test
jae
sub
dec
movsb
mov
pop
cmpsl
mov
bound
fs
inc
push
shlb
aad
adc
jl
dec
mov
pop
jg
pop
sbb
push
es
mov
cmp
cmp
jns
mov
pop
iret
pusha
loopne
fcmove
into
daa
mov
arpl
dec
push
sbb
sub
jae
push
hlt
scas
jns
lahf
aam
xor
aas
sbb
mov
imul
add
aam
ss
and
sahf
xor
outsl
je
xchg
cld
mov
lods
lds
mov
adc
neg
or
stc
je
push
mov
fnstcw
xchg
and
ljmp
movsb
enter
fwait
test
js
mov
stos
test
cmpsl
inc
adc
mov
out
cmp
jnp
inc
cmp
ds
cmp
aas
ret
cmp
push
cmpsb
jge
mov
sub
mov
push
movsb
bound
daa
popa
and
and
aas
fcomps
stos
jge
call
cmc
mov
adc
or
in
hlt
sbbb
insl
jecxz
and
inc
pushf
outsb
stos
lret
dec
mov
orl
in
insl
push
cmp
mov
adc
cmp
or
fmulp
scas
mov
adc
hlt
out
sub
or
add
fwait
push
sbb
push
xlat
movsl
mov
mov
xchg
cli
sbb
cmpsb
xor
ficoms
popa
ds
std
cmp
cmp
lock
repnz
lcall
mov
push
rcr
mov
dec
div
pop
xor
loop
xchg
push
push
mov
repnz
mov
inc
inc
fldl
idiv
mov
ss
js
jg
scas
test
outsl
dec
loop
pop
xchg
mov
jecxz
jb
adc
push
mov
lret
lock
test
lods
std
lods
xchg
into
mov
xchg
pop
dec
lret
push
aas
push
inc
ret
xor
and
xor
dec
inc
push
cwtl
inc
lds
movsb
addr16
mov
mov
sbb
lret
mov
repz
pop
lret
aaa
pop
out
leave
jl
or
pushf
imulb
roll
mov
enter
loopne
push
je
push
and
or
fisubrl
cwtl
shlb
sbbb
stos
je
jnp
lret
fs
dec
sub
jns
xchg
leave
popl
insl
and
mov
mov
lea
sub
cmp
stos
jmp
mov
popf
repz
jns
adc
scas
jle
insb
sbb
xchg
jno,pt
into
adc
ljmp
mov
shl
mov
scas
pop
lret
mov
xchg
adcb
sbb
rolb
lea
push
jo
mov
sub
push
imul
andl
lds
mov
jmp
int
shlb
out
jmp
arpl
lret
sub
bound
cmp
cmp
scas
pop
lea
pop
dec
sbb
xchg
lcall
jg
cltd
out
fdivs
mov
decl
add
jmp
shrl
cltd
mov
sub
loop
adc
ret
std
or
or
std
incl
push
aam
pop
jns
divl
fstpl
addb
jg
xor
sbb
int3
lods
xchg
faddl
inc
cmp
inc
insb
into
push
push
nop
mov
lods
xor
andl
prefetch
sub
mov
pusha
imul
xchg
or
xchg
cli
sub
int3
jmp
mov
jno
pop
adc
jecxz
in
cli
add
outsb
sub
sub
push
iret
mov
bound
shlb
test
push
fs
xorl
and
mov
xor
fcoms
roll
jnp
inc
xchg
push
sub
push
pop
sti
sbb
xchg
aaa
mov
js
loop
push
xor
decl
mov
mov
mov
push
pop
mov
repz
ret
fs
in
inc
or
mov
xchg
xlat
cmc
sbb
push
xchg
xor
rcrb
jnp
mov
repnz
fldl
mov
addl
xchg
insl
lods
mov
addl
orb
addr16
or
mov
jmp
xchg
std
inc
xchg
lds
adcl
rclb
std
insl
sub
int3
cltd
mov
ret
clc
push
mov
dec
mov
rcr
pop
add
cmp
push
in
hlt
sar
insl
call
movsb
mov
push
iret
xchg
fs
or
imul
lods
data16
in
sbb
lret
or
adc
adc
cs
sbb
scas
scas
cwtl
imulb
push
xor
lret
pop
out
inc
aad
pop
daa
in
xor
mov
fwait
sbbl
jbe
cs
fstp
sub
jns
adc
pop
rcrb
mov
or
hlt
push
pop
xchg
in
out
mov
pop
in
movsl
popf
cmp
scas
xchg
rcl
subl
push
mov
loop
or
sbb
test
add
inc
xchg
dec
or
shlb
inc
test
dec
xchg
mov
lret
insb
jmp
xchg
xor
pop
int3
sbb
inc
sub
xlat
mov
cmp
pop
mov
sub
bound
cmp
bt
push
pop
loop
push
or
sub
xor
mov
add
push
stos
pop
inc
or
out
daa
jns
shlb
add
mov
dec
xor
sbb
pop
jns
xor
jo
inc
pop
outsl
test
test
lea
mov
arpl
mov
subb
mov
mov
es
adc
cmp
loopne
jns
xchg
dec
add
or
loopne
lea
lret
test
lds
je
es
sbb
xchg
int3
add
fidivs
add
pop
ja
dec
sub
sahf
hlt
into
ja
and
stc
lods
sbbb
pop
jb
xlat
jmp
dec
mov
xchg
xor
mov
faddl
pop
cmp
outsl
jae
in
jae
push
fldpi
jge
dec
and
mov
mov
mov
adc
and
push
jl
jecxz
in
stos
inc
adc
jb
aam
cmpsl
jnp
outsb
popf
jge
dec
dec
jns
sub
lcall
das
imul
xchg
dec
mov
xchg
mov
fstpt
xchg
sub
dec
adc
sub
mov
cmp
jb
cmpsb
pushf
leave
out
mov
lock
cmp
lock
mov
or
lds
and
or
or
mov
call
ret
xchg
iret
cmp
out
dec
fsubrs
jg
mov
mov
push
push
out
idiv
iret
loope
fsubrs
and
inc
into
imul
jb
loope
dec
std
pop
out
fisubs
fsubr
shrl
and
ret
clc
add
xchg
adcl
sar
ss
mov
add
add
pushf
jmp
aad
push
xchg
rcr
mov
popa
cmp
xorb
pop
rcll
and
push
aaa
lock
cltd
or
aas
xor
test
stos
jp
insl
mov
mov
pop
add
jnp
fs
xor
imul
mov
xorb
ret
je
and
je
rol
mov
adc
sbb
add
and
lods
dec
jg
lea
lock
or
mov
scas
sti
fldt
pop
daa
mov
dec
clc
sbb
pop
lock
sub
and
bound
adc
nop
lods
dec
mov
fsubrp
sti
add
xchg
add
loopne
shlb
push
test
or
xor
inc
push
inc
inc
mov
iret
inc
out
sub
cmp
add
xchg
or
cmp
divb
xchg
ret
addr16
addr16
mov
pop
cmp
inc
push
out
test
les
xlat
enter
ja
or
cli
jp
repnz
lods
jo
jae
out
adc
loope
in
clc
jb
mov
add
or
mov
in
les
mov
dec
mov
lcall
xor
push
hlt
or
push
test
cmp
mov
mov
inc
dec
nop
pushf
je
mov
lea
cmp
sub
test
inc
mov
js
jg
push
cmpsb
loop
rcl
mov
and
es
imul
lds
mov
push
out
testb
jnp
pop
jle
pop
add
dec
mov
pop
mov
mov
mov
push
add
test
stc
add
xor
push
std
mov
push
popa
lcall
xor
adc
mov
cmpl
mov
push
dec
sbb
iret
lods
ret
dec
jb
inc
pushf
int3
inc
inc
and
mov
movsb
xor
jmp
jns
mov
sbb
jmp
cld
loope
pop
add
ret
stc
das
cmpsb
cmp
imul
jne
dec
cltd
mov
cs
add
and
pop
pusha
cmp
bound
add
sub
aaa
mov
mov
cld
ds
dec
jl
std
out
dec
mov
shl
nop
xchg
fiadds
fidivl
jecxz
leave
mov
mov
sahf
push
aad
fcmovnb
dec
and
xchg
xchg
test
stos
mov
cmc
pushf
add
insb
fsubrs
pushf
xchg
mov
sti
je
cli
mov
sbb
lcall
inc
pop
sub
jecxz
jmp
stc
dec
stc
and
sbbl
bound
scas
inc
jnp
cmp
mov
pop
ret
mov
ret
lret
and
mov
cmpsb
int3
jecxz
adc
push
pop
ljmp
scas
xor
pop
dec
into
aas
movsl
rcll
mov
stos
shlb
bound
cltd
inc
imul
add
iret
jp
gs
or
out
add
addr16
cli
lods
mov
sarb
or
dec
test
mov
les
in
fdivp
out
pop
repnz
stos
pop
sub
clc
rorl
psubq
dec
ret
inc
xor
cltd
fidivs
xchg
pop
dec
pop
push
out
inc
add
or
jnp
jmp
icebp
cltd
mov
sbb
and
divb
clc
cmpl
mov
or
mov
adc
and
int
inc
call
nop
arpl
fsubr
fnsave
in
cmpsb
pop
cli
push
jno
sub
or
gs
xor
fs
arpl
movsl
push
mov
pop
fstl
cmp
ret
sti
pushl
xchg
xchg
fs
inc
push
push
stos
mov
push
fcomp
flds
mov
stc
test
jmp
cmp
sub
cmpsb
fiadds
push
rorb
test
push
xor
xchg
scas
sti
add
popf
repz
call
rorl
or
inc
sub
mov
inc
in
inc
push
xchg
sbb
mov
fnstenv
dec
in
xchg
push
xchg
pop
icebp
loope
test
mov
into
xor
rcl
sbb
or
sbb
mov
xchg
insl
stos
pop
arpl
mov
shrl
sbb
push
cmp
jle
push
in
mov
outsb
and
push
dec
cmp
adc
mov
push
push
fcoms
out
shlb
add
insl
mov
sbb
pusha
adc
mov
icebp
jp
hlt
xor
push
fcomi
sbb
xor
adc
dec
sbb
cmp
int
sub
sbb
push
inc
scas
stos
repz
jecxz
add
out
add
scas
mov
pop
sub
dec
adc
aaa
fldenv
push
stos
sub
sbb
enter
sub
imul
and
jecxz
sub
jno
sbb
or
fwait
cwtl
cmp
dec
pop
adc
push
push
ret
daa
out
add
out
mov
mov
mov
push
and
mov
push
push
pop
mov
xlat
mov
inc
sahf
xor
arpl
mov
ds
push
xchg
pop
fs
sbb
jne
lods
out
mov
lods
xchg
push
inc
cmp
mov
sub
ja
fisubrs
loope
cmc
and
ljmp
push
xor
test
dec
ror
jno
mov
push
mov
dec
test
out
jbe
xor
or
or
pop
pop
gs
adc
sub
ret
hlt
inc
mov
sbb
xor
mov
stos
push
popf
out
jg
fs
xchg
daa
fistps
cld
cmp
sub
adc
xor
xchg
cmpsl
leave
pop
jecxz
fimull
into
es
dec
or
loop
out
mull
sahf
sti
outsb
mov
es
xchg
pop
ss
xchg
pop
fimull
out
xor
jno
or
ja
daa
jge
in
ds
xchg
aaa
dec
mov
test
fcmovbe
cmp
xchg
fldl
pop
psubb
adc
stc
cmp
in
cli
cli
xor
rol
scas
push
dec
lea
imul
push
mov
sub
inc
cli
sbb
adc
lcall
movsb
mov
enter
xor
sbb
mov
mov
add
jo
push
jae
lods
fwait
pop
loopne
jle
mov
xchg
mov
ja
sarl
xchg
lods
fcomi
mov
add
sbb
mov
or
test
push
adcl
xor
and
pop
mov
and
or
push
addr16
test
cld
push
repnz
imul
imul
je
dec
aam
or
lcall
dec
lock
notl
push
pop
mov
lea
outsb
ds
xchg
enter
je
push
mov
mov
movsl
push
orl
cld
mov
mov
mov
xchg
inc
jle
fcmovb
sub
jnp
jbe
adc
sbb
cmp
mov
xor
lret
cmp
or
sub
scas
pop
data16
mov
mov
sbb
test
cmp
dec
std
into
mov
fwait
hlt
pushf
out
outsl
sub
adc
cwtl
add
adc
mov
sahf
fxch
cli
out
orb
inc
fldcw
aam
stos
and
adc
mov
outsl
aaa
int
negl
mov
aaa
adc
xchg
das
aas
add
leave
dec
sbb
xor
sbb
inc
pop
sub
stc
dec
lret
mov
imul
adc
int3
mov
xchg
testb
adc
jg
mov
clc
test
test
jo
lret
and
mov
lds
mov
sub
js
sahf
call
sub
in
cs
dec
or
fcompl
dec
jns
push
adc
cmp
pushf
out
popf
fsubrl
fistps
jno
aas
and
jmp
popa
outsl
adc
popf
f2xm1
sub
adc
xchg
lahf
and
mov
add
xor
out
fsub
pop
stos
out
lcall
insb
xor
test
lcall
xchg
dec
and
xchg
repz
clc
imul
pushf
cmp
mov
fbld
test
arpl
mov
movsl
out
add
bound
out
dec
inc
push
int3
add
insb
ds
push
test
sub
cmp
movsb
fwait
mov
xlat
push
xor
or
xor
mov
jge
jp
inc
nop
and
bnd
cmp
jb
dec
jno
or
movsb
fnsave
rcrb
ss
jecxz
push
mov
cld
and
sub
or
adc
lret
mov
xlat
pop
shlb
mov
sub
outsl
inc
xchg
xchg
dec
cmp
mov
or
xchg
pop
xchg
push
popf
jle
inc
cmp
cli
mov
call
aad
jecxz
hlt
test
enter
lds
pop
add
mov
cs
cmp
bound
sbb
lods
pusha
mov
sub
shll
jp
sub
mov
in
imul
arpl
xchg
push
dec
mov
mov
push
std
push
push
add
pop
or
jnp
jbe
cmp
push
and
inc
push
push
in
fisubrs
xchg
dec
cs
push
or
std
call
sub
mov
andl
popa
sbb
out
xlat
xchg
pop
in
jae
sub
dec
fs
ja
pop
jecxz
cwtl
stos
es
dec
sub
pusha
shrl
ljmp
mov
xchg
jg
fistps
jl
inc
leave
ljmp
and
sbb
add
test
aam
push
jns
rolb
cwtl
pop
mov
mov
int3
adcb
imul
jle
inc
mov
sbb
aad
mov
ja
mov
les
cmp
leave
aad
daa
out
js
mov
push
daa
inc
nop
push
push
es
push
dec
or
int3
lea
popa
cmp
pop
or
and
or
xor
mov
jmp
jnp
repz
xor
ret
xchg
mov
jl
scas
std
imul
in
movsb
jnp
scas
sbb
or
movhps
mov
arpl
ret
inc
mov
into
push
cmpsb
cmp
pop
pusha
das
mov
and
cltd
stos
shl
push
inc
dec
movsb
test
int
mov
fs
js
test
sub
ret
pop
push
and
mov
sub
ss
int
sarb
dec
lods
cli
pop
jl
ljmp
jl
sub
les
aas
jmp
or
fdivrp
mov
xchg
ss
movsb
cmpsl
xchg
sub
pushf
aaa
stc
sbb
jmp
fidivrs
nop
pushf
add
jae
cmc
mov
hlt
cli
mov
adc
scas
popa
fwait
sub
ja
mov
jb
fisttps
pop
cmpsl
icebp
inc
and
or
mov
and
xchg
mov
mov
dec
cmpsl
add
sbb
add
insb
xlat
cmp
into
daa
and
or
add
jne
mov
loop
lods
pop
icebp
push
xlat
stos
iret
shr
push
sahf
mov
cmc
stos
add
inc
add
popf
fs
shrl
mov
rolb
inc
xor
in
sub
mov
mov
lds
fwait
inc
fnstcw
pop
mov
sub
in
jle
pop
pop
sbb
cmpsb
or
push
out
xor
aaa
cltd
mov
push
push
adc
sti
sahf
sbb
adc
inc
lock
xchg
cmc
je
into
testl
sti
or
sbb
pushf
insb
sub
fildll
jl
xor
and
lods
insl
mov
jne
out
inc
add
pop
push
xchg
subl
lcall
mov
arpl
test
ds
dec
aaa
pop
inc
call
and
aam
stos
adc
sub
xchg
popa
ret
das
icebp
leave
test
and
sahf
inc
xor
and
inc
dec
fsts
scas
pushf
adc
cmp
mov
jb
jg
jnp
test
cwtl
mov
sub
jnp
mov
negl
adc
jo
scas
add
mov
adc
pop
ret
adc
popa
push
sbb
pop
xor
sbb
cld
pop
movb
nop
lcall
ljmp
stos
add
push
test
call
jge
jnp
cld
mov
movsl
xor
cwtl
xor
xchg
jge
xorb
lret
xchg
pusha
pop
repz
int3
cmp
ljmp
or
fcmovb
imul
test
push
adc
xchg
cltd
push
inc
fdivrs
stos
imul
inc
outsb
mov
jl
addb
push
sub
mov
les
sub
mov
orl
mov
mov
xor
push
imull
test
testb
int
xchg
and
dec
out
subb
push
ja
xchg
cmpsl
ds
cmpsl
scas
je
das
ret
hlt
aam
andw
pop
idivl
xor
pop
aas
inc
dec
pop
repz
push
mov
mov
pop
aad
aad
in
fimull
sbb
ds
dec
push
xchg
ret
orl
inc
popf
push
pusha
add
nop
cmp
dec
imul
shrl
bound
dec
jg
jl
inc
cs
xor
mov
lock
orb
inc
adc
mov
or
mov
pop
sbb
ret
push
insb
or
add
cmp
mov
test
addr16
aas
ret
sbbb
inc
mov
mov
fdivrs
ret
mov
outsb
flds
movsl
mov
lcall
sbb
in
es
mov
test
out
repz
ret
xchg
xor
mov
dec
fstpl
les
xor
inc
je
xchg
push
push
aam
jp
mov
out
or
inc
jmp
and
punpckldq
push
ss
fs
push
lret
sbb
mov
in
lret
dec
scas
mov
inc
and
jns
pop
fsts
dec
dec
push
cmpsb
mov
cmp
xchg
movb
and
xor
xchg
push
cmp
cmp
jb
xchg
inc
push
dec
cmp
imul
cmp
lcall
add
and
adcl
mov
xchg
aam
fisubl
inc
sub
mov
std
xor
add
dec
jno
mov
jno
movsb
cmpsl
adc
xchg
push
data16
push
cld
inc
pop
cli
enter
cmp
sub
ret
in
push
lcall
pop
cli
add
dec
sub
pop
lock
sti
inc
das
mov
popa
ret
popa
outsb
xchg
and
jge
repnz
and
xlat
in
cmp
stos
shlb
sub
or
arpl
stc
mov
dec
push
cmp
or
aaa
mov
js
test
jg
xchg
dec
fsubr
subl
jg
out
dec
ja
mov
imul
popf
sbb
pop
and
fistpl
fildl
andb
mov
lock
scas
loopne
out
or
add
pop
fisubrl
or
les
call
sti
mov
fmull
mov
pop
jg
loopne
dec
ret
push
push
out
and
xchg
outsb
mov
lret
int3
mov
movsb
xchg
ret
mov
ret
pop
mov
test
jb
in
into
pushf
scas
xchg
push
es
pop
xor
sbb
outsb
imul
push
test
ja
das
sbb
loop
test
add
xchg
pop
push
stos
xchg
aam
pop
or
test
dec
xchg
fisttps
notl
cmpsl
or
adc
cmpsb
cs
mov
and
add
inc
icebp
cli
add
inc
cs
inc
scas
fdivrl
dec
outsl
dec
mov
mov
hlt
sub
aam
hlt
gs
lea
push
xor
gs
mov
mov
fistpl
jo
jne
cmp
add
sbbb
pop
sbb
imul
insb
enter
stos
inc
imul
imul
add
pop
jne
imul
flds
hlt
outsl
jb
or
xor
and
iret
mov
or
pop
dec
test
cmpsl
loope
lods
repnz
adc
fadds
fsubr
cmp
jp
sbb
mov
fdivs
lcall
pop
xorl
or
nop
push
inc
in
pop
jmp
pop
or
push
cmp
add
xor
pop
dec
rorb
aas
sti
mov
lcall
xchg
pop
jge
ds
fucom
iret
xor
int3
in
testb
in
test
pusha
jo
mov
rcll
inc
fsubrs
or
xchg
push
stos
xor
fs
add
pop
aaa
setle
adc
js,pt
dec
imul
nop
jl
add
xchg
imul
stc
repz
je
sub
lods
stos
cld
incl
cvtps2pd
scas
cmpl
mov
les
mov
test
aad
xor
sbb
jbe
or
fidivs
xorl
cld
test
psubb
xchg
je
jnp
mov
popf
addr16
lahf
xchg
testw
jle
mov
outsb
cmp
out
add
orl
push
push
sti
xchg
pop
or
testb
cmc
movsb
popa
scas
sub
or
and
mov
pop
dec
test
imul
push
xchg
pop
lea
xor
das
nop
out
jle
cwtl
push
push
mov
inc
push
fwait
sbb
dec
jns
pop
arpl
sbb
inc
inc
mov
and
inc
imul
jg
in
filds
cmp
data16
nop
cmp
adc
sub
rorl
neg
shll
pop
mov
sbb
mov
and
xchg
les
xor
int
and
scas
test
pop
mov
pop
loop
lock
sti
mov
push
mov
cmpsl
jns
lcall
sub
push
mov
out
mov
repz
sub
mov
push
mov
adc
stos
jne
cli
popf
fistps
mov
sbb
cwtl
dec
ja
mov
cld
nop
pop
cmp
aas
fst
fidivs
mov
jg
pop
aam
pop
sarb
cmpsl
imul
and
jo
add
repnz
cmc
and
pop
inc
mov
dec
repnz
in
xor
es
inc
jae
xor
mov
out
ss
mov
and
push
inc
dec
aad
jmp
lahf
in
jmp
jns
sbb
push
ret
lret
out
out
call
push
pop
or
cmp
fs
add
dec
insl
outsb
cmp
and
dec
test
fs
icebp
mov
dec
sbb
loope
xchg
out
sub
jmp
lret
adc
fidivrs
sbb
jnp
imul
xor
or
lea
pop
push
inc
in
aaa
aam
xchg
mov
aad
int
scas
lret
cmp
jo
iret
mov
inc
xchg
fs
sub
dec
icebp
hlt
ja
fstpt
push
sbb
les
std
mov
sub
push
test
mov
xchg
and
lock
mov
jne
dec
push
test
push
xor
dec
xchg
in
lcall
add
into
push
out
int3
xchg
lods
dec
inc
aam
imul
pop
inc
mov
repz
push
mov
push
in
adc
nop
jp
repnz
shl
adc
jmp
push
popf
or
sahf
pushf
leave
out
jp
fs
aad
aaa
in
xlat
add
mov
pusha
pop
xlat
fildll
adcb
xchg
std
sete
adc
push
mov
jg
mov
inc
and
mov
push
jo
mov
mov
push
jle
cs
mov
int
mov
in
or
xor
les
add
dec
jecxz
mov
inc
mov
pop
pop
insl
mov
and
jno
mov
mov
xor
rcrl
mov
mov
popl
add
in
and
fldenv
push
add
inc
fwait
sbb
xchg
dec
mov
pop
and
mov
jle
out
lea
jo
fldl
push
sbb
adcb
roll
xchg
mov
mov
pop
loopne
stos
jle
test
loopne
push
rcrl
xchg
xchg
adc
and
inc
inc
mov
ss
adc
add
adc
insl
aas
sti
or
repnz
ss
and
push
mov
divb
jg
cmpsl
sbb
sub
cli
faddl
mov
lds
in
sbb
mov
loopne
xchg
loope
loop
cmc
mov
ljmp
and
repnz
sub
jge
xchg
jae
iret
dec
push
lret
dec
pop
div
cmpsl
inc
movsl
xor
add
ja
adc
loopne
jbe
insb
dec
pusha
movsb
popf
leave
popf
out
loopne
fcmovu
lcall
xchg
cwtl
dec
pop
pop
test
loope
shlb
es
movsb
enter
pop
xlat
cmc
push
mov
jecxz
sub
or
cld
pop
xchg
and
es
xchg
enter
repz
mov
fwait
push
das
sub
movsb
jbe
mov
lret
adc
scas
cmp
loopne
pushf
sbb
sbb
icebp
push
shlb
inc
jecxz
movsl
add
int
out
or
cs
sbb
and
mov
cld
in
xchg
call
pop
test
in
jp
jmp
jo
daa
jbe
xchg
cmp
orl
pop
pusha
out
jne
cwtl
out
xchg
xor
repz
mov
sbb
addl
scas
add
xor
inc
jmp
sarb
adc
in
add
cmp
or
jno
mov
icebp
sarb
mov
iret
inc
sbb
jbe
mov
push
xchg
sub
sbb
fwait
aaa
pop
xchg
sub
das
lds
out
imul
in
adc
shll
push
xchg
rcrb
sbb
lock
ljmp
scas
psubw
lahf
jne
mov
imul
jg
popa
psllw
push
mov
or
jbe
mov
dec
out
cmp
test
mov
dec
mov
pop
sti
iret
fists
insb
push
mov
or
shll
lret
push
insb
mov
mov
movsl
pushw
push
loop
ja
inc
aad
mov
es
inc
jnp
and
mov
add
sar
adc
mov
shrb
push
add
in
stc
leave
add
dec
lods
and
pop
lret
jae
cmp
aad
stos
mov
pop
adc
imul
inc
push
jge
jne
add
jo
jg
arpl
inc
or
or
movsl
test
or
jg
sub
mov
mov
hlt
push
sbb
and
imul
dec
lcall
dec
inc
mov
xchg
int3
sbb
repnz
cs
aam
push
adcb
sarl
fs
and
add
inc
xchg
inc
jl
rcll
mov
daa
jmp
loopne
sub
jne
nop
add
movsl
xchg
xlat
dec
je
ret
sub
jno
jecxz
xchg
cli
jae
jae
add
jp
add
dec
out
sub
fwait
push
jns
int
adc
je
xor
js
aas
sub
mov
test
fadds
stos
add
sub
js
pop
daa
sar
cmc
cmp
mov
fdivrs
mov
pop
insb
addl
lea
fisttps
test
inc
shlb
cwtl
pusha
xchg
sahf
xor
movsl
leave
cmp
mov
mov
xor
nop
xchg
inc
mov
mov
repz
mov
pop
int3
nop
or
xchg
daa
rclb
sti
mov
icebp
push
mov
insl
lcall
or
aad
scas
push
mov
add
cltd
daa
in
outsl
pop
mov
lods
jle
sahf
std
mov
pop
insb
adc
inc
cmp
xorl
in
divb
dec
rol
adc
or
sub
xor
cmp
dec
into
jg
xchg
adc
mov
or
pop
cmp
cmc
pop
ret
arpl
mov
push
mov
in
stos
mov
aaa
orl
sarb
inc
inc
push
jne
sbb
xchg
or
fsub
adc
jl
fsubs
imul
push
out
dec
jb
repz
inc
mov
jecxz
lret
xor
movsl
or
dec
push
mov
sahf
outsb
or
mov
fsubl
sbb
cmp
daa
xor
pusha
dec
aaa
pop
jae
cmpsb
sub
rorb
push
into
pushf
neg
xchg
dec
ja
or
cmp
mov
loope
sbb
test
popf
jb
and
xchg
iret
cmp
inc
out
mov
mov
das
jp
insl
shlb
cwtl
sbb
in
pop
or
loope
cli
stos
movsl
jnp
add
rorb
jbe
lahf
pop
pop
sub
lods
jecxz
mov
push
cld
cmpsb
mov
and
shll
xchg
adc
cwtl
test
and
inc
addl
rolb
inc
add
mov
sbb
dec
daa
sahf
outsl
ja
xchg
pop
arpl
out
fstpt
bnd
fwait
jnp
js
jmp
in
sub
les
xor
mov
and
cmp
ja
pop
pop
test
xchg
and
in
cltd
call
cmpxchg
in
mov
push
pushf
aad
pop
mov
cmp
pop
popa
in
lods
or
fdivl
mov
mov
out
ja
xchg
xor
xchg
mov
jbe
aam
mov
lods
jb
dec
adc
test
insl
xchg
lret
aaa
fistl
repnz
adc
sysret
aam
test
inc
xchg
xchg
in
or
out
dec
enter
cwtl
cwtl
cmp
cltd
mov
pushf
add
jo
es
sub
jns
insl
jge
and
push
outsb
mov
scas
dec
jl
popl
fisubrs
ror
add
mov
sti
shr
iret
lock
repz
or
jle
cmc
add
mov
outsl
shlb
std
pop
loopne
sub
test
lock
fnstcw
shll
scas
dec
xlat
fcomip
jmp
stos
call
inc
sbb
xlat
fimull
enter
cmpsb
es
fs
in
push
stos
fstpt
sub
movsb
or
inc
psrad
inc
mov
pop
cmp
lret
sbb
scas
push
inc
gs
adc
mov
dec
lret
pop
mov
test
xor
jp
jg
mov
cmp
xchg
dec
lods
mov
lods
cld
bound
or
xlat
mov
mov
fs
aas
stos
in
mov
test
xchg
push
dec
test
push
jl
cmp
mov
pop
sub
cld
sahf
add
xor
jne
or
adc
pop
sub
dec
scas
inc
adc
in
add
cmc
sub
ret
in
clc
cld
aam
inc
xor
and
pushf
ja
lock
xor
fcmovbe
sub
dec
jnp
and
xchg
out
fiadds
sbb
cmp
mov
arpl
data16
mov
push
sahf
fildll
sti
sub
nop
push
std
adc
mov
mov
ss
cmp
outsb
sbb
mov
iret
idivl
nop
xor
les
popa
push
mov
popa
add
movsb
jo
mov
movsb
push
dec
mov
jno
jbe
test
mov
or
daa
mov
mov
sarb
js
or
push
inc
les
add
lock
es
pop
lahf
arpl
push
mov
notb
loop
cmpsl
test
cs
or
xchg
push
xchg
divb
or
aad
jae
test
lods
jbe
rclb
push
stc
gs
jmp
or
inc
cmpsl
push
mov
push
adc
adc
movsl
int3
cmp
xchg
fwait
pop
rolb
movsb
mov
pop
out
sub
lahf
mov
add
mov
cmp
mov
aad
lret
lret
pop
sub
mov
jmp
cmp
add
pusha
xor
inc
sub
cmp
pop
mov
aad
mov
mull
push
fucomi
hlt
std
ficoms
pop
push
jecxz
pop
repz
jmp
ds
movsb
rcrb
das
xchg
loope
pop
in
je
inc
daa
imul
out
and
stos
adc
ja
xor
popf
into
mov
sbb
les
sbb
movsl
rolb
rcrl
sti
push
jl
add
mov
push
scas
jns
jmp
xlat
sub
outsl
ret
jecxz
mov
mov
faddl
out
das
mov
and
mov
cs
fmull
xchg
mov
add
lock
mov
nop
pop
jns
jb
or
test
xchg
push
jge
ror
xor
stc
push
lahf
enter
pop
shrl
cmp
mov
ds
sbb
and
nop
mov
xchg
ljmp
sarb
loopne
and
inc
cwtl
adc
jmp
ljmp
sbb
inc
pop
and
faddl
out
aad
pop
and
f2xm1
out
xchg
insl
test
and
dec
addl
aaa
xchg
or
cmpsb
mov
cwtl
add
xorl
std
sub
push
clc
add
xor
dec
cmpsl
icebp
rcl
iret
sub
gs
fidivrl
movl
pusha
and
arpl
js
mov
sti
es
sub
sub
paddq
inc
jbe
add
cs
lret
inc
leave
sahf
stos
xor
push
cld
cmp
gs
jecxz
lahf
push
mov
ficomps
and
push
and
sub
imul
daa
xor
icebp
mov
mov
fadd
sbb
cld
pop
xchg
add
xchg
pop
dec
adc
push
sub
insl
inc
cmp
and
sbb
loope
into
pop
adc
xchg
cmpsb
or
shll
lock
hlt
pop
out
rcll
mov
sbb
and
mov
imul
sub
add
ret
push
push
pop
jbe
sbb
addb
sub
push
je
dec
in
mov
cwtl
or
dec
call
dec
ret
or
mov
aad
push
loop
test
push
testb
insl
ljmp
aas
lcall
lret
mov
or
flds
mov
shlb
jmp
push
fldcw
or
sbbl
sbb
mov
fsts
cmp
mov
jp
sub
and
in
shr
cs
pop
mov
or
jo
sub
push
xor
arpl
mulb
inc
and
jp
psraw
pop
mov
stos
mov
bound
sub
xchg
jae
mov
in
mov
testl
pop
dec
mov
dec
sbb
push
xchg
push
test
mov
fdivrs
repz
sbbl
in
mov
jnp
jg
cmpsl
stos
orb
cmc
adc
std
sbb
popa
push
pop
sbb
sub
stos
mov
pop
into
jp
fiadds
iret
data16
adc
je
rcrb
jae
pop
sbbl
xor
and
in
dec
or
aam
out
popf
test
mov
bound
jmp
mov
xchg
leave
jge
aas
test
les
adc
shll
fucomi
lcall
js
or
cld
push
lods
mov
cmp
and
mov
sar
pop
insb
and
fisttpl
in
mov
int3
xchg
jge
subb
aad
dec
mov
inc
cmc
lea
int3
xlat
icebp
mov
jbe
mov
movb
cmp
pop
setge
call
aas
cld
cmc
and
cmp
xchg
push
aam
xchg
xlat
cmp
pop
cmpsl
mov
outsl
mull
push
lret
add
into
lods
or
ja
pop
orb
js
lods
mov
das
jmp
sbb
add
dec
aaa
imul
je
data16
ret
sub
add
jmp
jb
dec
shl
mov
fdivrl
mov
clc
and
add
cmp
cmc
push
xor
loope
jge
mov
cmp
mov
cmpsl
test
test
push
xor
cmp
xlat
mov
pusha
data16
les
in
pop
fcompl
rorb
lock
mov
rclb
fstpl
movb
and
in
cltd
pop
push
push
xchg
or
sbb
lcall
xlat
int3
add
and
push
dec
pop
lret
adc
lcall
inc
rcll
push
mov
push
outsb
inc
adc
push
add
xchg
xchg
insl
aad
mov
mov
dec
mov
outsb
scas
xchg
sub
int3
push
ja
push
mov
dec
ja
in
xor
push
cmpsl
addb
dec
sbb
xlat
pop
jb
push
mov
lahf
test
cli
movsl
out
daa
in
imul
push
inc
sub
lods
xchg
mov
mov
sbb
add
fsubrl
mov
pusha
pop
bound
xchg
out
test
mov
cmc
inc
aaa
mov
add
jae
xor
push
xchg
add
pop
in
adc
fwait
iret
aam
ss
or
cwtl
fldl
or
adc
push
iret
sub
dec
xchg
movsb
test
cmc
daa
scas
pop
adc
fnstsw
aam
cmp
pop
jne
subl
rclb
add
arpl
leave
ljmp
mov
or
je
xchg
jle
jne
in
mov
inc
pop
push
jmp
adc
mov
fs
nop
jl
scas
xchg
mov
xchg
cmp
xor
mov
mov
cs
sbb
shr
rolb
jbe
inc
insb
cs
sub
push
popf
test
enter
stc
fists
mov
adc
mov
mov
or
sub
mov
cld
ret
cmp
push
cs
jge
jmp
stos
push
pop
mov
push
and
push
push
stc
idiv
mov
rclb
mov
pushf
xchg
xchg
or
inc
movsl
andl
scas
test
mov
cs
sti
iret
jo
wrmsr
mov
jp
jne
dec
cmp
fstpl
mov
aam
lahf
push
clc
xor
fcmove
in
push
xor
cltd
mov
pop
and
jmp
jo
inc
jmp
xchg
pushf
gs
jns
clc
notb
jbe
pop
sub
ljmp
ljmp
push
lock
lods
dec
loope
mov
ss
mov
add
outsl
jno
sbb
mov
add
sbb
jbe
outsl
or
xchg
insl
cmpb
push
int
inc
iret
mov
movsl
mov
pushl
xchg
test
pushf
test
jno
dec
xchg
jge
call
movsb
pop
fisttpl
js
cmp
push
ja
cmp
fsubrl
and
push
stos
ret
sub
push
int3
stc
pop
mov
lcall
push
iret
cmp
fimuls
add
adc
insb
subb
nop
or
in
jp
adc
lcall
or
mov
xor
mov
dec
cmpsl
dec
aas
sbb
jae
lods
jo
pop
repnz
lahf
dec
xchg
dec
ficoml
sbb
mov
repnz
lcall
in
fs
addr16
adc
repnz
cmp
call
stos
mov
xor
lds
jp
sbb
int3
mull
sbb
insb
fstpl
jbe
dec
cmpsl
lock
and
jbe
inc
outsl
rclb
sbb
xchg
cmp
xor
inc
push
mov
stos
cmp
lods
xchg
xchg
inc
sbb
mov
sbb
inc
lods
jmp
inc
adc
fs
mov
ret
xor
bnd
xchg
aaa
and
stos
xor
roll
movsl
jno
inc
dec
push
sbb
adc
xor
cmp
minps
stos
test
into
pop
in
push
sbb
lock
aas
popf
daa
les
iret
fists
jecxz
cmpsb
jbe
scas
dec
cmpsb
xchg
dec
inc
imul
sub
out
cld
jg
mov
jl
dec
mov
test
sbb
cmp
ds
enter
adc
stc
jno
mov
and
inc
dec
push
xlat
mulb
push
cmpsl
cmp
lods
in
out
cmp
out
push
cmpsl
pop
xchg
adc
sub
ffreep
pop
pop
icebp
inc
jns
add
mov
pop
jmp
jge
dec
sbb
movl
or
and
stos
and
push
aas
xchg
mov
cmp
pop
mov
stc
mov
add
mov
mov
and
xor
dec
push
push
movsb
pushf
push
loop
xlat
call
pop
loopne
fists
test
mov
mov
ja
orb
mov
cmp
in
loopne
ret
daa
adc
sbb
xchg
cmp
ret
ret
int3
call
and
and
cmp
mov
or
pop
daa
pop
sub
and
sub
stc
sub
mov
clc
push
les
shr
sbb
je
mov
push
mov
pop
js
dec
inc
mov
cmp
sub
repnz
js
xchg
cmp
icebp
data16
mov
mov
or
dec
ret
shll
jg
notl
adcl
xor
cmp
adc
std
push
jbe
xchg
addr16
jno
sub
xor
mov
adcb
test
lds
fistps
les
jns
shrl
push
inc
shlb
insb
insb
xor
jmp
inc
stc
mov
pop
sbb
inc
mov
dec
aad
cmp
sbb
dec
dec
test
imul
enter
sub
mov
fists
inc
or
aas
stos
fistpll
in
mov
pop
daa
and
lds
subl
in
in
dec
sbb
push
xchg
es
and
movsb
push
mov
pusha
pop
sarb
pop
add
scas
mov
pusha
in
push
scas
jmp
push
fnstenv
xchg
jae
push
popf
jno
int3
inc
mov
jb
gs
push
jl
cmp
dec
mov
pop
adc
jbe
inc
mov
sbb
xlat
jbe
or
xor
cli
adc
inc
cltd
adc
das
nop
rclb
scas
jno
fisubrl
cld
cmp
cmc
mov
int3
rcll
cmpsb
rep
inc
ss
inc
out
or
pop
rclb
sbb
pop
xchg
add
addr16
mov
add
xchg
test
push
xor
shrl
push
xchg
jg
fnstenv
lahf
inc
or
mov
mov
push
sub
fdivr
inc
into
sahf
push
push
lcall
push
mov
stos
scas
call
gs
out
ljmp
into
cmp
pushf
push
cwtl
ja
repnz
mov
in
push
cltd
test
clc
ret
xor
loop
fsubrl
repnz
sbb
mov
xor
mov
rolb
out
enter
repnz
dec
sbb
shlb
outsb
dec
pop
inc
mov
in
pop
cmp
lcall
cld
cltd
sahf
dec
mov
sub
mov
ss
enter
cltd
ljmp
inc
test
in
mov
xor
cmc
fistl
mov
das
aad
mov
pop
sub
inc
sbb
add
mov
lock
mov
jmp
inc
cltd
pop
je
lcall
lahf
inc
add
daa
jp
mov
arpl
xadd
les
sti
mov
dec
jae
arpl
xor
or
scas
mov
add
jl
call
mov
xchg
mov
stc
out
push
mov
shlb
mov
jmp
mov
andl
xlat
repnz
lcall
movsl
jne
mov
mov
imul
mov
imul
orl
stc
jbe
xlat
jbe
sbb
jbe
jecxz
sahf
es
jmp
mov
xchg
popf
mov
pop
fstl
sbb
mov
sub
loopne
imul
test
and
dec
mov
sti
aad
xor
mov
adc
mov
jno
dec
cmp
fcomip
xchg
lahf
adc
test
adc
and
mov
dec
rol
insb
daa
sahf
jb
mov
divb
mov
enter
mov
fisubs
mov
lds
cmpsb
or
and
clc
loop
bound
divl
daa
mov
lds
adc
mov
int3
in
je
mov
ljmp
stos
aam
mov
fnstenv
push
fimuls
inc
xchg
jno
les
and
pop
inc
xchg
xor
push
xor
sub
push
out
or
arpl
cmpsl
add
sbb
push
xchg
inc
mov
lea
xor
repz
xchg
ss
aas
xchg
repz
decl
add
jmp
or
or
iret
add
xor
xchg
xor
pop
cmove
clc
pop
hlt
js
int3
sbbl
lods
std
imul
push
xor
xchg
aas
push
lods
add
mov
pop
jecxz
jge
cs
fstpl
push
push
jns
pop
fmuls
iret
fstl
inc
scas
fstpt
pop
and
imul
jno
loop
mov
push
shl
test
out
aas
mov
mov
mov
stos
xchg
pop
nopl
test
xor
or
add
popa
rclb
push
xchg
mov
xchg
sbb
bound
jb
cli
cmc
mov
xor
add
cs
adc
sbbb
rcll
fs
xor
push
or
push
xor
out
and
dec
shrl
dec
fwait
scas
stc
movsb
fsubl
es
push
cmp
lock
mov
sub
mov
aaa
cltd
or
cmpsl
sarl
inc
pop
stc
xchg
add
sub
inc
je
je
mov
sahf
fists
and
sbb
rclb
or
push
xor
stos
or
ret
jne
cltd
and
lret
xlat
aad
adc
xchg
sti
push
fsub
cmc
sti
jecxz
and
mov
in
ret
jno,pt
ret
mov
cmp
add
repz
jne
jg
and
pop
and
mov
cmc
repnz
cmpsl
sbb
lods
aam
xor
outsl
push
pop
add
mov
inc
leave
mov
orb
pop
aas
nop
rcrl
cld
sbb
imul
push
out
mov
mov
sbb
ja
pop
sub
sub
and
insb
push
jp
pusha
xchg
jle
nop
jecxz
jbe
and
add
addb
movups
arpl
cmpsl
mov
pop
clc
cmpsb
mov
nop
sarl
adc
fstl
sahf
hlt
shll
ret
xor
xor
mov
pop
pusha
inc
in
imul
and
ljmp
iret
dec
pop
adc
std
loope
pop
shll
out
mov
push
test
cltd
jl
cld
stos
add
loope
mov
push
lea
cmpsl
call
pop
jge
cmp
fisubs
shlb
test
mov
scas
add
pop
clc
pxor
push
iret
sub
iret
inc
push
out
pop
aas
je
cmpl
sub
stos
frstor
jl
stc
adc
lea
xor
xchg
pushf
or
out
or
popf
cmp
cmp
insb
push
pop
or
push
pop
cmpsl
adc
cmp
push
je
test
mov
jp
push
pop
adcl
inc
cmp
cld
dec
jl
int
inc
cltd
cli
rcr
scas
stc
jp
sbb
mov
rcrb
nop
or
test
mov
in
sbb
repz
iret
inc
and
sti
popf
out
sub
jnp
jmp
add
repz
xor
xlat
jbe
sub
cmp
or
test
ja
mov
mov
sub
rclb
jne
jne
jl
cmp
xor
clc
jae
ret
rolb
mov
call
or
cli
push
sbbl
add
repnz
outsl
pop
jmp
bound
ljmp
mov
add
or
adc
mov
adc
mov
push
insl
lret
hlt
aam
or
aaa
sbb
adc
std
insb
subl
push
icebp
add
das
jmp
and
cli
loopne
mov
and
cld
xor
sub
add
mov
nop
mov
xor
aam
add
lods
das
insb
push
xchg
imul
jle
mov
pusha
jle
jne
cmp
iret
das
mov
pop
loopne
testl
lds
out
xchg
sbb
cmc
sahf
movsb
dec
dec
rclb
cmc
cmp
in
mov
xchg
mov
jge
pop
icebp
or
or
add
xorl
fwait
mov
xor
mov
xor
mov
rcrl
lods
enter
push
out
sub
cmpsl
mov
sub
sbb
mov
jne
cmpsb
and
stos
lret
mov
div
enter
inc
clc
cmp
pushf
add
pop
mov
inc
std
mov
rcll
xor
aad
rcrl
or
sahf
cld
mov
inc
push
jge
out
mov
jo
in
mov
loop
loopne
mov
mov
add
sbb
pop
jnp
and
and
cltd
dec
dec
mov
cmpsl
mov
daa
popa
mov
lea
rcll
insl
lret
lds
int3
ds
ffreep
popf
xchg
inc
xchg
jp
add
les
fistpl
mov
push
scas
sbb
addr16
aas
mov
and
sbb
jecxz
fcoms
cmp
mov
sarb
pop
push
adc
cli
inc
aas
jge
or
mov
or
repz
lock
jecxz
lock
clc
aam
pop
mov
repnz
or
mov
cs
out
fsubrl
int
jp
ret
jo
outsb
lret
push
mov
xor
inc
filds
in
jo
sbb
in
call
push
jmp
pop
pop
lea
cmp
jb
xor
dec
sbb
sub
cltd
push
ret
push
add
sbb
ret
mov
push
clc
xor
pop
and
push
sub
je
adc
je
push
subl
xchg
cmpsb
add
mov
and
aam
int3
mov
lea
xchg
loope
loope
and
iret
pop
push
dec
mov
mov
shll
push
fcmovu
outsb
arpl
andl
sub
cmpsl
push
jo
sub
jno
icebp
or
sahf
nop
mov
push
insb
fwait
sbb
clc
add
cmpsl
mov
int3
and
out
jbe
inc
cmp
enter
es
out
out
gs
cmp
cmpsl
js
sbb
int
push
xlat
mull
jl
insl
aas
jmp
jge
add
inc
fdiv
cmp
cmc
hlt
shl
shr
imul
lcall
xchg
mov
xor
mov
cli
shll
lahf
add
das
pop
inc
jae
xchg
lcall
sbb
lret
fstpl
mov
cmp
inc
xchg
mov
add
in
mov
pop
mov
xchg
fistl
call
into
lahf
imulb
out
adc
push
mov
popa
push
dec
adc
jle
pop
in
sub
lock
and
in
mov
mov
pop
push
ret
sbbb
shlb
cmc
lahf
dec
mov
pop
adc
inc
dec
lods
mov
sbbb
inc
jmp
inc
mov
cmp
push
pop
or
and
mov
pop
imul
add
popf
push
addr16
pop
imul
leave
es
mov
adc
and
out
popf
xor
and
jo
xchg
and
mov
sbb
and
gs
xor
dec
push
xchg
nop
or
mov
or
mov
xor
out
dec
addr16
mov
rcll
adc
cwtl
jle
rolb
cmpsb
mov
call
icebp
out
cs
push
push
mov
push
adc
xor
enter
rol
aad
mov
int
sub
or
in
xchg
clc
xor
leave
jno
negb
shll
jae
mov
ret
jecxz
cmp
cs
add
dec
popf
sub
mov
insb
xor
jge
mov
jle
into
inc
mov
repz
or
mov
scas
jno
pushf
pop
sub
scas
rcr
mov
fcompl
je
jbe
dec
scas
push
aaa
aaa
push
fpatan
adc
xor
sub
inc
pop
jmp
movsb
pop
mov
jo
jb
fstpl
xchg
mov
push
pop
adc
lahf
clc
xchg
movsl
cmp
shlb
into
sbb
push
adc
scas
cmp
lock
pop
pop
pop
sbb
adc
cmpsl
mov
mov
ror
push
adc
sbb
dec
stc
stc
sarl
jb
mov
pop
sbb
sub
pushf
lret
aaa
cmp
repnz
aaa
mov
dec
add
inc
jle
xlat
push
enter
mov
mov
rorb
lcall
adc
scas
inc
scas
nop
stos
nop
mov
mov
inc
xor
mov
out
xchg
sub
mov
in
sub
loope
jo
mov
mov
jg
add
mov
lret
push
pop
mov
test
fdiv
jl
andps
xchg
xchg
push
pop
lods
sarb
out
mov
jno
dec
fbstp
jge
pop
jne
mov
jg
mov
sub
jmp
inc
sub
push
fstp
pop
jb
aad
mov
mov
bound
in
xchg
fistps
fcomi
cli
dec
cmp
add
fstps
cmp
ss
test
nop
pop
jo
jne
addl
pop
js
dec
cli
fwait
adc
and
jl
leave
fwait
mov
mov
jp
cltd
jns
jp
loop
jnp
lret
mov
jecxz
ficoms
and
mov
sub
imul
ja
hlt
inc
pusha
add
ret
data16
adc
inc
sub
push
outsb
inc
cmp
rolb
bound
mov
ret
loopne
xchg
sub
push
cmpl
jecxz
push
xor
scas
push
jns
cmp
or
mov
ficompl
cmp
je
xor
fcomip
nop
mov
jmp
fildll
xor
adc
mov
cmp
sbb
jb
out
cmp
mov
xchg
faddl
cmp
inc
mov
dec
dec
push
stos
sahf
sarl
insl
aaa
aaa
adc
leave
int
shrb
xchg
cltd
out
orb
jecxz
je
dec
out
mov
je
and
iret
and
ret
jg
cmpsb
jae
outsb
push
test
ss
xor
hlt
fnsave
movsl
jo
push
mov
hlt
mov
scas
lods
adc
add
stos
rol
int3
push
data16
data16
mov
enter
mov
and
int
mov
jmp
int3
xchg
mov
cmp
sbb
jge
mov
xor
sets
cmp
adc
xchg
rclb
cmpsl
ljmp
sub
lahf
pop
dec
and
repnz
add
mov
rcl
in
addr16
pop
cld
mov
inc
addr16
sub
arpl
imul
in
inc
dec
mov
mov
pop
pusha
jle
add
jg
adc
pop
pop
cmc
mov
mov
add
cli
xlat
gs
sub
push
inc
lret
dec
jl
mov
stc
cmp
repz
pop
pop
icebp
xchg
jp
adc
aam
inc
fprem
adc
and
push
scas
fldcw
js
and
clc
mov
insb
sbb
sti
sub
cld
ret
cli
pop
fidivrs
daa
loopne
fwait
xchg
xlat
cmc
xchg
jb
dec
mov
stos
inc
mov
outsl
lret
test
push
pop
jecxz
push
mov
scas
adc
cmpsb
jbe
jp
mov
nop
and
stos
dec
nop
inc
or
adc
jle
nop
jnp
xchg
into
js
nop
jp
push
inc
loope
mov
scas
sbb
pop
das
cmp
mov
adc
mov
jnp
jge
mov
push
cmp
addl
fcmove
es
mov
data16
sbb
and
mov
and
lock
push
dec
movsb
sbbl
sbb
jge
jmp
sbb
dec
ljmp
xchg
mov
call
pop
and
inc
sub
jl
lahf
sahf
sub
fidivrs
popa
xchg
jb
subb
pop
hlt
jecxz
sub
jne
push
adcl
mov
test
jmp
mov
andl
add
xchg
adcb
lahf
push
mov
pop
ja
lret
jmp
cs
sbb
dec
xchg
icebp
in
arpl
bound
loop
xor
int
sbb
pushf
pop
xchg
mov
mov
cmpb
shrb
pop
inc
xor
cmpsl
jge
or
xchg
jp
sbb
loop
ror
adc
or
scas
leave
insb
rorb
pushf
xchg
cmp
lahf
sub
or
xor
inc
mov
xlat
shll
mov
es
jge
inc
hlt
dec
hlt
std
out
lods
idivl
nop
jecxz
add
jl
and
loopne
xchg
jbe
mov
pusha
ljmp
cwtl
xchg
mov
jo
add
inc
leave
cmpsb
pop
sub
sar
cltd
mov
push
dec
mov
push
in
and
adc
iret
lea
and
cmp
xchg
jge
dec
cmp
ja
cmp
xchg
lock
xchg
and
mov
cmpsb
mov
cmc
cltd
insb
pop
adc
orb
shlb
leave
sbb
pusha
or
addb
push
cmpsb
test
inc
push
adc
hlt
adc
adc
push
pop
pop
pop
inc
rcrl
mov
shl
popa
fimuls
clc
mov
call
pop
add
cmp
dec
mov
lds
mov
add
xchg
and
adc
lods
and
jae
dec
fs
xor
mulb
ffree
test
xchg
js
push
jnp
push
xor
fs
stos
inc
dec
mov
or
xchg
add
out
mov
ret
dec
arpl
lcall
iret
insb
test
ljmp
pop
lret
stos
and
test
mov
nop
dec
pop
inc
xor
mov
or
mov
dec
adc
scas
fcomi
std
test
mov
sub
mov
jge
sbb
jecxz
test
idiv
fistpl
cmp
out
jle
test
jns
inc
fbld
fdivs
lcall
out
les
push
sbb
mov
jge
and
call
mov
inc
dec
push
xlat
rol
jbe
adc
sbb
sbb
popa
sub
aas
adc
sub
insb
mov
mov
js
test
dec
loope
out
push
cmp
daa
rclb
cmpsl
xor
dec
jae
das
add
and
daa
dec
xor
mov
cmp
mov
lods
add
pop
rcl
fisubrl
inc
adc
inc
or
mov
lret
push
pop
shr
push
add
sbb
jle
add
fwait
push
fadd
jge
and
out
xchg
incl
mov
cmc
mov
xor
or
xchg
outsl
movsb
push
insl
or
jno
stos
push
in
xor
mov
or
std
test
xchg
cmp
push
fcmovnb
mov
jb
push
pop
fidivrs
popl
mov
out
mov
mov
out
add
and
aad
fs
std
adc
mov
aaa
inc
mov
not
push
jle
repnz
add
xor
xchg
mov
test
push
fwait
lret
push
icebp
lcall
jecxz
aam
ljmp
ret
test
sub
push
cwtl
adc
popf
sarb
lcall
inc
aad
xacquire
pop
cmp
pop
cli
xchg
or
inc
jo
jle
frstor
sbb
jne
movsl
jae
fistl
std
hlt
xor
leave
push
ds
movsl
ret
movb
adc
mov
push
mov
push
ljmp
mov
shr
jbe
cli
jno
push
ret
inc
jnp
xchg
imull
out
sahf
cmp
push
cs
jns
fisttps
insb
mov
inc
inc
add
or
xor
mov
test
sahf
insb
xor
dec
js
mov
and
lar
test
cwtl
les
cli
push
jl
out
pop
orb
lock
jle
xchg
push
push
pop
loop
fnstsw
jl
hlt
mov
shrl
adc
popa
mov
dec
mov
loopne
dec
dec
lods
dec
js
dec
outsb
sub
pop
jmp
mov
loope
mov
xchg
adc
lds
add
pop
mov
jo
incb
movsl
xor
ret
fstl
js
leave
stc
imul
push
subl
dec
adc
pop
inc
mov
popa
lcall
in
fwait
inc
aas
pop
xor
idivl
scas
lods
out
mov
repnz
sub
pop
mov
push
push
xchg
ja
mov
mov
loopne
insl
sbb
cwtl
jns
mov
cltd
and
clc
push
add
stos
cmp
mov
test
xlat
inc
adcb
push
in
and
push
push
push
xor
jbe
pop
bnd
out
fwait
push
add
stc
mov
stos
cwtl
or
orb
adc
icebp
mov
cmp
mov
in
adc
inc
andb
push
inc
std
stos
dec
sub
clc
add
loop
cmp
dec
pop
cmp
adc
cmp
jo
sbb
jl
int
xchg
jecxz
add
adc
lcall
mov
and
inc
sbb
dec
aam
adc
jle
xchg
adc
insl
into
push
insl
ss
in
lods
in
mov
sub
xor
jle
jl
std
out
sbb
mov
loope
lret
roll
add
adc
jns
mov
aas
stos
mov
mov
mov
jge
xchg
out
jae
adc
xor
xchg
aaa
lret
ja
repnz
pop
imul
repnz
les
add
mov
cmp
mov
cltd
mov
lret
adc
repz
pop
dec
or
push
pop
daa
das
stos
mov
scas
adc
fwait
aaa
pushf
stos
lcall
push
sbb
aad
mov
mov
and
xchg
cmpsl
dec
xchg
divl
in
ret
mov
jp
inc
xlat
imulb
fisttpl
mov
mov
decb
loopne
dec
loopne
bound
or
icebp
out
and
add
out
inc
pop
push
jg
jge
dec
pop
sub
push
pop
fldl
mov
pop
and
lods
stos
and
sarl
sub
cltd
incb
lret
pop
mov
mov
icebp
lahf
and
int3
pop
clc
and
aas
adc
movsb
push
rol
add
fmull
es
or
repz
imul
lods
aas
popa
out
in
loopne
out
inc
xor
test
loopne
lds
lret
mov
jne
jae
repz
pop
pop
jno
hlt
addl
cmp
insb
mov
pop
sbb
push
push
nop
outsb
push
adc
movsb
jmp
cmp
dec
dec
adc
in
stos
mov
mov
dec
lret
aad
xchg
jecxz
mov
jne
bound
sahf
das
lret
cwtl
imul
fwait
rcrl
loopne
imul
dec
call
roll
insb
mov
into
imul
or
and
push
or
rol
lds
xchg
inc
fistl
jmp
cmp
pop
push
test
xor
in
incb
mov
sub
and
stc
adc
pushw
je
movsb
sbb
mov
cmpl
mov
push
add
fnsave
inc
push
jle
xor
gs
fimuls
mov
movsb
test
mov
aas
pop
xchg
mov
cmp
inc
mov
rorb
push
push
pop
ljmp
sbb
rcr
lock
mov
mov
gs
mov
js
movsl
mov
push
dec
inc
adc
fmul
call
pushf
mov
xor
push
clc
mov
clc
dec
adc
sbb
mov
popf
push
jns
ss
sbb
or
nop
push
push
mov
cltd
push
xchg
or
clc
ret
fidivrl
lock
mov
mov
adc
jbe
loopne
inc
xchg
or
nop
and
xchg
sub
popa
push
jae
dec
pop
sub
adc
cwtl
dec
aas
adc
lret
sub
push
popf
mov
outsb
cli
adc
aam
xchg
test
mov
push
shrb
jle
or
mov
xchg
fimull
js
in
outsl
push
or
sahf
out
incl
outsl
pop
loope
push
xchg
popa
daa
out
jno
mov
icebp
mov
out
lcall
loope
leave
xchg
mov
xchg
mov
mov
divl
roll
sbb
cmp
mov
push
dec
fsts
call
js
mov
or
dec
xchg
mov
xchg
xchg
mov
cmp
xchg
push
stos
leave
cs
aam
cmp
stos
fld
fadds
xor
xchg
data16
imul
inc
int3
adc
leave
mov
fmuls
push
and
iret
popf
mov
xchg
sti
inc
and
lret
call
je
shlb
mov
push
adc
das
lea
xchg
dec
scas
push
cmp
out
int
mov
stc
pop
dec
mov
jge
fwait
push
enter
inc
xor
or
aad
or
jae
cmp
cmpsb
cs
shll
call
lea
sbbb
mull
shrl
xchg
lods
sarb
xchg
in
adc
cld
inc
xor
mov
es
dec
sub
cmpsb
daa
mov
cmpb
or
xchg
imul
int
xchg
testl
enter
insb
lret
xchg
mov
in
lcall
ror
sbb
add
mov
adc
outsb
inc
jns
dec
mov
mov
cmc
and
mov
mov
aad
dec
aad
dec
sti
or
push
es
outsl
int3
lds
jb
scas
add
dec
sbb
mov
mov
xchg
out
das
das
mov
adc
or
test
mull
cmp
and
jge
adc
adc
nop
repnz
out
mov
fsubrs
inc
mov
in
mov
lods
cmc
arpl
js
call
in
movsl
in
push
mov
cmpsl
cmp
add
andb
jo
lock
xlat
roll
addr16
fcoml
mov
je
push
daa
cld
push
mov
int
ret
addr16
mov
or
in
sbb
xchg
repz
xchg
pop
out
je
cmp
movsl
xor
fildll
cmp
lods
aas
push
loop
push
xchg
iret
loopne
push
in
lret
pop
and
inc
xchg
cmpb
sub
pushf
imul
mov
jno
dec
sti
push
jmp
sub
test
fmull
lcall
pop
gs
add
rcrb
stc
dec
add
out
inc
or
or
aam
dec
outsl
mov
cmpsb
push
pop
jle
testb
xor
imul
xor
fimuls
lret
pop
mov
cli
push
and
je
icebp
pop
cmp
xor
insl
psubb
loop
dec
jo
jp
mov
mov
cmp
andb
shrl
test
cmp
pop
and
pop
incb
ljmp
mov
xlat
sub
mov
dec
mov
xor
and
cli
push
mov
lahf
mov
loop
inc
mov
in
loope
das
push
out
sub
pop
dec
popf
imull
add
pop
dec
pop
mov
sbbb
fisubs
fisttpll
and
loope
insb
sbb
pop
out
test
push
outsb
mov
dec
mov
je
test
pop
add
jecxz
xchg
fsubrs
mov
cmp
iret
repz
inc
jb
xchg
sbb
cmc
lcall
stos
xorl
cmpsl
add
or
ljmp
sub
xor
and
jp
popf
into
sbb
dec
pop
sbb
mov
jp
pusha
mov
push
mov
pushf
lret
jno
lods
idiv
jae
roll
lret
es
lret
pop
mov
and
clc
sbb
xlat
test
imul
mov
shr
call
xchg
cmp
mov
dec
js
mov
mov
daa
inc
sbb
push
pop
subl
jno
pop
js
pop
mov
xlat
add
cltd
cmp
imul
sub
xchg
imul
mov
lret
inc
insb
jge
inc
pusha
pop
mov
dec
jns
orb
adc
dec
push
xchg
int3
mov
add
mov
xchg
lea
mov
out
inc
adc
jp
dec
sub
pop
cmc
scas
fmuls
xchg
mov
jae
sbb
mov
cmc
es
fnsave
xchg
jbe
test
clc
test
in
test
sub
xor
ret
iret
inc
ret
lock
bound
sti
loop
je
pop
pusha
push
aas
ds
jne
xchg
test
push
test
enter
aas
dec
adc
stc
dec
xor
nop
inc
mov
jne
popf
mov
dec
or
pop
push
dec
pop
lcall
mov
movsl
andl
dec
dec
shl
mov
sbb
dec
fsubr
push
data16
push
jae
push
addr16
cmp
scas
arpl
dec
mov
or
adc
adc
loop
into
cmpsl
push
rclb
mov
and
aaa
div
jp
or
out
mov
or
movsb
rclb
push
push
sbb
stc
lods
push
pop
pop
in
push
pop
push
adc
mov
or
test
jl
ljmp
inc
jne
movsl
cs
addr16
adc
and
stos
jnp
lods
addr16
aad
bound
std
dec
stos
adc
add
into
jl
mov
stos
outsl
or
jle
frstor
mov
ret
stos
push
cmc
mov
fs
pop
fwait
repnz
or
das
jb
imul
push
mov
and
rorl
and
jo
push
mov
push
rorl
or
lock
mov
mov
ljmp
jge
xchg
in
push
movl
push
jns
jno
ret
dec
rorl
mov
lods
mov
movaps
movsl
xchg
dec
shrl
lock
cmp
rol
pop
sub
hlt
jbe
add
mov
subb
dec
into
xchg
in
insl
or
mov
push
add
jg
xchg
iret
and
enter
mov
sahf
sub
mov
loope
int3
pop
inc
test
dec
clc
pop
cli
jge
sahf
xcrypt-cbc
cmpsl
xchg
in
pop
out
or
and
std
gs
push
xchg
inc
outsl
pushf
xor
test
jbe
in
js
xchg
jnp
add
sarb
xor
lret
je
enter
pop
dec
pushl
adc
shll
loope
cmp
adc
cmp
jmp
movsl
inc
and
clc
in
stos
flds
mov
pop
adc
adc
aad
and
cli
jmp
jmp
inc
mov
xchg
scas
jmp
sarb
cmp
mov
push
int3
xchg
push
outsl
sti
xchg
pop
inc
mov
xor
mov
and
cmpxchg
int3
es
mov
pop
das
inc
and
dec
int
lods
or
xor
lahf
lahf
addr16
mov
into
repnz
mov
clc
loop
dec
xor
imul
int
add
cmp
test
add
idivb
lret
stc
mov
push
js
cmpsl
cmpl
fcoml
add
sub
repnz
popa
jmp
and
pusha
pop
push
or
push
ret
out
stc
je
lcall
add
in
and
test
loop
sbb
shll
stos
scas
and
loop
push
and
shrb
xor
mov
mov
or
xchg
test
dec
sub
or
pop
push
xor
out
lret
adc
fwait
mov
ja
xor
repnz
add
pop
sub
jb
sub
ss
pop
gs
mov
stos
je
jb
lret
push
outsl
out
push
aas
pop
sub
cmpsl
das
xchg
cmc
loop
out
ficomps
sub
sbb
lds
pop
inc
mov
dec
push
repnz
ss
loopne
dec
aad
in
inc
add
fwait
divb
enter
xlat
sbbb
xchg
lret
xor
icebp
fstpl
dec
pop
jbe
or
jns
bound
mov
inc
stc
or
xor
push
mov
mov
js
or
test
cmpsl
in
xchg
int3
xchg
test
fidivrl
nop
sub
xor
dec
clc
inc
lods
lret
outsl
push
in
cmp
and
test
jecxz
mov
popa
adc
cmpsb
shl
repnz
jge
pop
sar
push
and
jne
mov
adc
mov
lahf
inc
push
fistps
dec
dec
shll
jbe
mov
in
jbe
xchg
aad
xchg
sti
push
inc
popa
sub
divl
cwtl
cwtl
leave
adc
cwtl
add
mov
gs
cltd
mov
xchg
sbb
dec
repnz
bound
aam
fiadds
rorl
loope
mov
cwtl
sbb
mov
in
imul
popf
add
adc
outsl
bound
adc
pushf
shl
hlt
jecxz
xor
push
scas
xchg
push
orb
xchg
pop
sbb
mov
shlb
xchg
arpl
rcr
loopne
gs
push
mov
cmp
mov
test
sti
out
fstps
mov
jle
inc
jne
in
mov
add
mov
add
bound
test
jnp
sbb
xorl
push
or
cmp
xchg
faddp
fsub
cmpsl
mov
lahf
in
xchg
mov
int3
shll
scas
xlat
cmp
pop
cli
outsl
mov
xor
xchg
mov
sahf
cli
std
or
icebp
mov
leave
and
mov
out
pop
cli
jb
inc
rclb
stc
hlt
test
imul
push
mov
mov
cli
jl
cltd
push
daa
dec
jae
push
push
ret
or
xchg
jle
or
fidivs
and
pop
xlat
call
xchg
inc
scas
ds
ja
jb
daa
stc
mov
dec
frstor
push
add
add
inc
loope
jg
ret
fdivrl
nop
cmp
fwait
lds
xchg
mov
dec
aas
pusha
in
inc
mov
orps
or
sub
imul
cs
mov
jp
xchg
and
pop
add
inc
push
hlt
dec
testb
lods
lea
in
js
hlt
test
arpl
cltd
cmp
daa
push
push
pop
xchg
int3
rorb
mov
mov
nop
and
add
and
fxch
imul
cltd
ja
jmp
aam
xor
or
mov
pusha
roll
iret
mov
mov
mov
dec
shl
leave
cmpsb
inc
sbb
and
pop
inc
sub
ret
aaa
outsb
mov
out
movsl
stos
js
outsb
add
lods
jae
adc
fidivrs
lcall
iret
mull
or
cwtl
xchg
xor
rorb
fldln2
sub
icebp
lods
mov
sahf
jl
push
gs
inc
jge
aad
inc
movsl
push
stos
or
mov
xchg
and
sbb
ljmp
pop
mov
cld
inc
xchg
sub
jns
xor
jge
lret
inc
adcb
lea
pushf
icebp
mov
enter
cmpsl
or
scas
adcb
mov
ja
mov
jnp
ds
dec
subb
in
xchg
and
push
push
movsb
sub
xchg
test
sub
pop
sub
fiaddl
dec
idivl
push
push
jge
or
pop
incb
push
mov
mov
mov
push
and
test
lcall
or
push
and
out
nop
cmpl
shll
test
xlat
dec
sub
xchg
in
jl
test
or
iret
jns
mov
mov
add
fsts
push
out
loope
test
cs
pushf
mov
popa
adc
pushf
aas
les
loope
mov
pop
dec
sbb
je
stc
adc
sbb
dec
bound
dec
out
xlat
cmpsw
in
out
std
and
dec
ljmp
adc
push
fnstcw
jb
dec
jp
stos
scas
sub
xor
sbb
pop
stc
sub
orl
jp
pop
push
arpl
mov
outsl
xor
xchg
inc
push
loop
xchg
gs
mov
xchg
dec
mov
arpl
rcrb
in
rolb
sbb
adcb
xchg
and
or
push
xchg
in
cwtl
inc
mov
and
mov
and
mov
iret
ss
jbe
int
xor
mov
hlt
sarl
je
rolb
ret
sbb
jo
paddb
dec
or
fiaddl
je
dec
aaa
dec
add
gs
inc
adc
test
sbb
int
pop
loopne
push
add
jnp
clc
mov
fwait
cli
outsl
out
movsl
sub
scas
and
sub
outsl
sub
scas
sbb
rep
mov
add
sar
ss
divl
inc
xor
nop
xchg
ret
lcall
mov
jg
test
imull
sahf
std
pop
divl
lret
loope
and
arpl
fsubr
mov
jmp
std
cmp
mov
adc
lds
in
cmpsb
adc
iret
lock
mov
lahf
cmp
stos
hlt
xorl
jmp
or
push
xor
push
push
popa
out
arpl
dec
mov
push
movsl
cltd
into
adc
mov
mov
imul
cs
push
pop
imul
stc
cmc
addr16
fmuls
jmp
mov
dec
outsb
repz
push
rolb
dec
mov
popf
or
testb
mov
out
adc
lods
in
xchg
or
push
stc
loopne
sbb
mov
std
lods
pop
fimull
sbb
push
or
mulb
fildl
xor
mov
jmp
inc
mov
sbb
jbe
je
imul
or
and
mov
outsl
or
xchg
imul
mov
sbb
inc
sti
loopne
or
outsl
outsl
jne
sub
rorb
dec
xchg
sub
and
loop
xor
inc
roll
scas
lahf
jg
std
or
in
out
lcall
lods
or
push
mov
bound
mov
pop
or
adc
rclb
lds
jno
addr16
sbb
jae
mov
ljmp
imul
pop
xor
scas
dec
push
lcall
out
push
xorl
inc
test
xlat
mov
ret
fwait
push
cmc
jg
in
mov
cs
or
inc
mov
data16
xchg
lods
sbb
add
sahf
jmp
add
pop
in
loop
or
and
in
adc
out
into
add
movb
push
in
je
mov
stc
in
push
mov
dec
test
call
int
pop
jno
pop
or
sti
xchg
in
mov
mov
and
daa
lret
sub
pop
subl
and
and
test
or
fsin
xchg
adc
shr
mov
adc
lds
icebp
sub
cwtl
pop
sbb
aas
out
push
arpl
sbb
push
sub
in
dec
jb
ret
ja
orb
out
push
jl
and
push
mov
mov
frstor
push
cli
loope
mov
pop
add
mov
lds
mov
xchg
pop
ljmp
out
aas
test
jb
loope
test
mov
xor
fistpll
mov
roll
cmp
scas
out
dec
push
cmpsl
xorps
das
aad
cmp
ds
aad
shrl
pop
das
iret
scas
pop
sub
pop
inc
lcall
mov
dec
or
data16
cwtl
xchg
lds
mov
mov
sub
push
push
negb
jecxz
xlat
insb
cs
cli
push
enter
mov
jle
jne
add
clc
or
std
mov
pop
out
jecxz
xor
ljmp
fiaddl
movsl
testl
outsl
not
adcb
hlt
xchg
and
mov
xor
int
mov
aaa
arpl
ds
js
out
pop
ror
push
jns
movsb
adc
outsb
mov
dec
lcall
movb
push
inc
mov
aad
cmpsl
sub
adc
outsl
sti
mov
int3
dec
ret
ds
mov
stc
repnz
aas
or
pop
xchg
cmpsl
mov
out
leave
scas
out
mov
lock
inc
mov
add
or
out
dec
sbb
pusha
add
mov
repnz
push
pop
mov
ljmp
jp
jo
mov
jg
lods
dec
gs
add
or
stc
xor
insb
dec
mov
jnp
lahf
push
jns
dec
dec
aaa
sbb
inc
cmpsl
push
push
dec
push
stc
xchg
xor
test
inc
pop
and
push
into
shll
mov
sbb
outsb
jb
fidivs
sahf
or
mov
jmp
ljmp
mov
mov
xchg
std
cli
xchg
std
test
push
dec
aad
add
push
daa
xlat
mov
and
mov
repz
xchg
sub
test
orl
ret
ds
dec
das
jnp
cltd
mov
add
leave
into
xchg
fwait
pop
cmp
lahf
mov
mov
std
pop
cmc
shll
or
push
dec
push
aas
sbb
cmp
stc
jmp
in
ret
clc
sarl
insl
and
push
and
lea
ds
cli
xor
adc
je
cmpsl
fcmovb
sub
xchg
fldl
movsl
push
hlt
xchg
sahf
movsb
icebp
xchg
mov
lcall
std
cmpsl
add
jl
dec
pusha
push
jge
ret
mov
cmp
cmc
lock
aas
inc
push
mov
sbb
test
lea
pop
loop
enter
pop
push
aad
or
or
cmpsl
jg
in
je
lods
sbb
testb
lods
popf
loope
and
or
add
out
rolb
mov
out
pushf
das
sbbb
test
lahf
pop
outsb
jns
inc
cmpsb
add
xchg
xchg
mov
sahf
pop
push
jb
in
mov
push
iret
mov
sub
outsb
push
fsubrs
jne
fs
push
jmp
inc
and
bound
add
shll
pop
or
ja
xor
daa
test
add
test
movsb
dec
pop
shrl
mov
jmp
jae
and
mov
loop
fdivl
enter
lock
fcmove
popa
adc
or
inc
pop
or
shll
loop
ret
dec
lds
mov
push
push
adc
ljmp
xor
inc
push
nop
jb
and
xchg
out
mov
jecxz
fcoml
jnp
jle
aaa
push
xchg
xlat
dec
push
aas
pushf
or
push
adc
sahf
loop
aad
dec
lret
push
xlat
test
dec
inc
push
jns
jp
pop
inc
stc
sub
xlat
pop
aas
dec
mov
test
movsl
out
bound
shll
push
add
push
fiadds
push
mov
xchg
cmp
ds
pop
push
cmpsb
ja
jge
aaa
jae
mov
lret
lods
xor
jle
sti
shlb
call
clc
repnz
push
adc
rolb
add
fmul
lcall
xchg
push
jo
jb
dec
add
sahf
jmp
mov
and
push
notl
lods
andl
jle
leave
or
or
fistpll
xchg
mov
mov
fwait
rcr
cmc
sub
add
lcall
movsb
jl
pop
adc
cmp
jae
pop
fwait
cmp
js
adcl
xor
sbb
mov
jb
cmpsb
mov
adc
int
movsb
movb
test
cltd
xchg
dec
test
add
outsb
jns
andl
add
mov
addr16
cmp
stos
nop
cli
aam
hlt
sub
cld
xchg
sarl
in
testb
mov
jge
dec
push
cmpb
lock
movsb
lret
pop
xor
dec
or
or
push
mov
insb
dec
dec
mov
test
sbb
and
dec
imul
adc
shl
hlt
jno
push
fildll
jmp
mov
mov
sub
push
mov
repz
push
insb
jmp
cmc
imul
popa
mov
adc
pop
mov
inc
xor
outsb
fwait
sub
push
xor
sbb
lds
mov
test
aam
inc
lods
lret
and
sahf
inc
or
je
mov
out
das
push
adc
pop
jbe
popf
in
add
shlb
pop
insb
xor
test
or
in
sub
and
add
mov
gs
movsl
or
bound
dec
imul
das
mov
loopne
js
ror
mov
cmp
cmp
aaa
jl
jg
fiadds
lahf
roll
pop
push
pop
push
adc
pusha
sbb
push
sub
mov
sbb
add
test
imul
ret
push
shrb
push
mov
cmp
insb
pushf
cli
in
lret
ret
movsl
xor
lea
adc
in
jg
inc
mov
cmp
jns
testb
call
outsl
pop
outsl
sbb
mov
mov
xlat
jge
mov
aas
loop
mov
cmp
sar
sub
scas
push
jne
jae
jg
or
xor
imul
jnp
test
cmp
cmp
cmp
jg
mov
inc
push
xchg
jne
mov
jecxz
sub
jl
pop
pop
aam
mov
movsb
cld
in
pop
aad
mov
movsl
dec
pop
movsb
loopne
inc
scas
imul
add
and
orb
or
icebp
clc
push
mov
fnsave
mov
shlb
and
popf
or
orb
inc
pxor
daa
cmpsb
lret
nop
xor
mov
daa
repnz
pop
sub
outsl
inc
lea
jae
or
xchg
and
push
push
pop
out
aad
shll
pop
cmc
in
mov
imul
jmp
popf
adc
pop
mov
test
test
insl
mov
bound
negb
cmp
aas
stos
scas
adc
stos
mov
call
js
out
push
fisubl
mov
mov
jne
inc
insb
fldl
cltd
dec
scas
mov
or
lds
rclb
inc
mov
mov
dec
sti
mov
xchg
adc
xchg
ret
imul
fldt
and
prefetch
or
inc
push
dec
mov
sub
mov
xor
xchg
in
mov
addr16
and
cmp
cmpsl
in
cli
sbb
std
sbb
xchg
insb
popl
inc
pcmpeqw
dec
fists
or
pop
jl
cmc
push
out
jo
popa
sbb
inc
aad
sar
jecxz
inc
mov
xor
lods
and
pop
dec
xchg
les
add
jns
push
xlat
ja
mov
sub
push
xchg
packuswb
loopne
jmp
dec
mov
rolb
inc
scas
push
sbb
cltd
or
int
aad
sub
or
inc
movsb
sub
xor
cmc
loope
ret
xor
fwait
xchg
adc
cli
and
decb
mov
mov
ja
dec
aam
lock
gs
mov
adc
out
call
cmpsb
fcoml
mov
fdivrl
in
lret
mov
incb
jl
insb
roll
cmp
or
cmp
jns
fidivrs
in
lods
repnz
push
jo
dec
daa
or
jb
xchg
aaa
in
dec
mov
cmpsb
fnstsw
push
xorl
adc
and
jno
mov
lods
sahf
jecxz
icebp
inc
out
out
jmp
lea
dec
negb
and
add
gs
inc
mov
js
push
sub
push
cmp
out
xchg
test
xor
dec
mov
je
cmp
push
cmp
movsl
sbb
xor
and
cli
push
jno
inc
scas
and
jecxz
xlat
ja
shrb
cld
scas
or
sbb
xchg
fistps
xchg
mov
xorl
or
xor
test
popfw
daa
mov
jp
jp
and
cwtl
push
sbb
cmp
mov
lret
idiv
enter
sbb
cmp
or
clc
jle
sub
shll
jne
aad
mov
pop
push
jb
xchg
cwtl
xchg
daa
mov
add
int
push
les
or
out
outsl
dec
cmc
mov
ret
pop
mov
xor
jb
jp
test
sub
fnstenv
cli
mov
mov
lret
jae
sub
ret
sub
imul
inc
jns
pop
jp
sti
xor
mov
sub
mov
popa
dec
out
les
loope
mov
xor
testl
nop
mov
pop
xchg
ss
je
jnp
jg
jle
in
or
js
fsubl
stc
rcll
jp
push
pop
push
pop
pop
inc
sarl
xchg
sbb
imul
push
push
pop
stc
sub
inc
and
into
aam
inc
lods
add
mov
sbb
out
arpl
lods
push
movsl
mov
scas
dec
mov
jp
or
dec
xchg
xor
scas
lret
adc
jg
inc
bound
popf
jle
scas
es
out
mov
push
cmp
and
fnsave
int3
movsl
jecxz
cmpsb
inc
scas
out
or
pop
xchg
lcall
imul
in
shlb
cmpsb
inc
aas
xor
and
pop
ds
test
mov
stos
scas
orl
pop
push
inc
adc
lahf
or
loop
and
negl
mov
push
sar
mov
fwait
stc
in
dec
enter
in
mov
jb
data16
adc
mov
mov
inc
out
xchg
or
clc
into
fwait
popa
ljmp
push
addr16
dec
int
jp
decl
daa
nop
push
sbb
add
mov
adc
ds
adc
dec
pop
lahf
or
mov
cmp
faddl
mov
les
ret
xor
mov
in
xchg
fs
push
dec
lret
and
sbb
or
and
mov
loop
int
rcrb
and
xor
push
pop
inc
rcl
xchg
sub
add
mov
pusha
bound
jbe
or
lods
sub
popl
cwtl
gs
aaa
push
dec
repnz
cmc
jbe
out
aaa
jmp
mov
ret
aad
add
cmp
sub
outsb
add
jmp
add
mov
scas
stos
xor
mov
inc
push
pop
fwait
jo
daa
mov
or
sbb
mov
xchg
adc
push
insl
lret
mov
jecxz,pt
gs
xor
xchg
xor
dec
push
outsb
and
pop
mov
pop
int3
fisttps
mov
loop
bound
xor
and
or
xor
ffreep
xor
aad
pop
sbbl
sbb
mov
js
jnp
dec
cwtl
push
inc
scas
aaa
fsubrs
pop
xchg
pushf
scas
bound
icebp
mov
das
mov
mov
adc
in
test
imul
int
popf
push
lods
inc
fisubl
and
inc
cmp
mov
ret
rcrl
sub
nop
pop
mov
in
push
mov
hlt
inc
cs
adc
sub
fdivl
stos
imul
or
sti
lods
mov
in
push
or
sahf
jb
fldcw
sub
mov
cwtl
rcr
and
cmp
mov
jge
in
push
lods
jp
push
fwait
cltd
je
dec
mov
and
adc
icebp
ds
popa
sahf
scas
push
int
stc
cmpsl
sbb
add
mov
adcb
rorb
add
push
lds
mov
xor
sarl
adc
mov
arpl
adc
xor
int3
lret
test
hlt
adc
pop
stc
or
test
arpl
shll
cmp
sbb
adc
andb
loopne
add
paddw
sti
testl
inc
clc
scas
icebp
xchg
arpl
inc
mov
inc
push
mov
inc
push
xchg
dec
pop
xor
push
adc
loopne
xchg
cltd
dec
stc
dec
pop
jo
sbbb
out
cmp
pop
inc
cmc
xchg
stos
dec
mov
dec
mov
mov
cmp
out
hlt
or
xor
sbb
dec
cmp
add
dec
mov
in
sti
shll
lea
dec
mov
lea
hlt
dec
aad
inc
gs
inc
jns
aad
loope
add
cmpl
shrl
add
mov
les
lods
add
loopne
scas
pop
add
jnp
and
mov
out
push
cmp
add
push
pop
jp
clc
stc
add
outsb
pop
out
out
ja
push
ret
shlb
xor
loopne
push
movsl
dec
mov
imul
mov
inc
and
rcrb
xorl
push
out
fnstenv
xchg
movsb
push
sub
aam
adc
iret
cli
push
jb
pop
movsl
test
jecxz
xor
popa
and
in
stos
iret
js
jb
insl
adc
cli
add
jne
in
mov
aaa
lahf
mov
sbb
add
jb
test
mov
cmp
adc
gs
loop
fdivp
sub
mov
shlb
icebp
loop
popf
out
ror
xchg
cmp
sbb
mov
fdivrl
sub
jne
dec
les
int3
stos
xchg
jecxz
and
sbb
cwtl
stos
xchg
xchg
lods
or
imul
cmpsb
add
stos
xchg
int
ror
ds
mov
jbe
nop
mov
mov
data16
dec
out
stc
imul
lcall
push
dec
mov
jmp
gs
xor
mov
stc
xchg
aam
pop
lea
add
fdivl
sub
xor
dec
test
mov
or
loopne
add
dec
je
adc
and
insl
pop
mov
insb
lods
cmp
aad
jle
push
xchg
mov
xor
add
inc
dec
sbb
lea
das
stos
shrb
xchg
sub
loope
inc
jae
and
icebp
pop
push
in
shll
push
movsl
subl
xchg
scas
imul
pop
mov
jge
xor
mov
cmp
or
push
fwait
loope
aam
push
inc
imul
jg
xor
sbb
aaa
jl
lods
js
jb
loop
dec
mov
outsb
ficoml
loop
cs
inc
je
fwait
inc
gs
ffree
cmc
pop
insl
mov
sarb
and
or
inc
aaa
test
and
jae
movsb
dec
loope
je
jge
mov
dec
pop
mov
int
sbb
push
mov
push
lods
pop
sub
fs
mov
dec
mov
fnstenv
imul
pop
cwtl
or
jb
loop
lret
fldl
and
out
fs
lock
das
loop
outsl
xchg
pop
addr16
lock
cmp
or
pop
mov
and
cld
adcb
lret
movsb
cs
and
ja
movsl
jae
push
or
or
aaa
pushf
inc
push
pop
scas
mov
inc
jns
mov
enter
stc
jbe
jno
fsubp
push
push
cmpsb
xchg
inc
push
arpl
ss
lret
xchg
frstor
push
or
movsl
ja
decb
aad
or
add
push
int
or
jge
bound
mov
add
repz
mov
das
aam
imul
nop
xchg
in
mov
mov
xorl
cmp
sbb
sarl
push
cli
xor
cmp
adc
xchg
out
push
inc
movsb
add
std
mov
aam
lds
mov
stc
aaa
sbb
mov
jge
jp
dec
mov
rcr
xorl
sub
jp
push
mov
lock
xchg
adc
dec
das
mov
push
xchg
add
xchg
mull
sub
insb
cmp
mov
push
outsb
xchg
lret
jnp
hlt
les
imul
and
mov
aaa
mov
inc
or
iret
fistl
mov
bound
cwtl
sub
adc
aas
pushl
sub
dec
and
pop
cmp
sub
jnp
xchg
call
mov
js
lcall
sahf
jae
sub
and
scas
ret
inc
sahf
outsl
sbb
enter
movsl
or
sub
movsb
adc
lahf
repz
sub
ffree
fincstp
aad
mov
mov
in
leave
xchg
xchg
rclb
jns
sahf
xor
mov
fs
jp
loope
cltd
add
hlt
adc
jmp
popa
fnstenv
fbld
xor
jae
push
mov
int3
mov
jecxz
cmp
inc
sub
adc
sub
add
outsl
jo
aas
insb
lods
and
and
adc
sbbb
dec
inc
jle
lods
add
cmp
inc
mov
xor
subl
dec
mov
cmp
scas
push
mov
mov
popa
leave
cwtl
aad
fstpl
sarb
sub
cmpsl
fscale
out
mov
mov
loopne
int
pop
add
and
mulb
pusha
xchg
push
mov
mov
daa
jo
xor
cmp
mov
imul
push
jge
iret
inc
sub
and
in
push
cmpsb
pop
pop
popf
jb
mov
mov
jbe
testb
push
jno
divb
cli
add
in
divl
jo
je,pt
in
out
mov
fcmovbe
sbb
xchg
mov
loopne
repz
or
lahf
daa
jecxz
mov
or
mov
mov
or
repz
jno
jmp
cwtl
xchg
jmp
ret
and
cli
loope
call
js
stos
xadd
xchg
call
mov
xchg
mov
ljmp
in
pop
xor
fidivrs
fbstp
cmp
xor
dec
inc
cltd
mov
fcmovb
sbbl
imul
pusha
or
lods
dec
add
popf
pushf
hlt
add
add
fnsave
iret
pop
addr16
xchg
cld
loope
lcall
mov
in
cwtl
mov
imul
icebp
and
gs
pop
bound
or
scas
jp
bound
scas
pop
pop
sub
inc
aam
xor
inc
sbb
inc
mov
addl
or
jg
inc
gs
das
int3
xchg
bound
cli
filds
popf
aas
jecxz
mov
int3
cwtl
inc
loopne
sub
mov
xor
sub
cs
fsubrs
jne
lods
jnp
xor
mov
data16
fcmovne
movb
mov
and
int3
movsb
pushf
and
cmp
jge
lock
pop
hlt
fwait
or
cmp
cmpsb
dec
add
scas
mov
andl
aad
jbe
inc
lock
xor
mov
leave
clc
adc
adc
bound
ror
push
gs
mov
jnp
push
or
insb
dec
rcr
mov
in
std
ret
adc
adc
sbb
dec
xor
ficomps
sub
sarb
mov
cwtl
cs
movsb
jge
sbb
mov
push
mov
repz
insb
push
inc
or
test
rolb
xchg
jbe
sbbb
pop
test
push
sar
xchg
dec
push
add
pushf
xor
cmpsl
sub
popa
push
cmp
dec
rorb
adc
pushf
mov
stos
xchg
lret
or
ds
mov
or
pushl
les
fsubrp
pop
pop
shll
movsl
out
into
mov
cmp
xchg
jns
icebp
fisttpll
shl
bound
cmc
mov
adc
sti
cmpsb
das
dec
lcall
pusha
inc
clc
ja
or
cwtl
jbe
sub
dec
cwtl
lea
cmpsl
cmp
or
ljmp
push
notl
enter
int3
mov
mov
inc
xchg
adc
dec
movsl
pop
lods
mov
pop
inc
loop
das
rolb
std
aad
mov
in
xchg
xchg
pushf
cli
pop
aam
outsb
sub
jl
lahf
sar
ret
addl
outsl
and
imull
pop
hlt
lahf
dec
dec
mov
loop
adc
fimull
movsb
add
ja
push
in
sti
mov
jb
pop
xor
ja
mov
icebp
xor
es
and
or
dec
shlb
mov
lea
imul
or
cmp
adc
fxch
inc
jl
add
push
xor
leave
jbe
es
fwait
sbb
sbb
hlt
shrb
adc
fsubs
aas
pop
int3
test
or
xor
sub
push
mov
in
xor
sub
jp
ljmp
outsb
or
inc
fsts
dec
mov
push
and
movsb
jp
and
orb
push
das
cmc
or
loop
mov
sbb
out
sti
in
inc
int
mov
imul
dec
push
push
mov
dec
mov
mov
rcrl
lcall
jne
sbb
out
push
rolb
xchg
push
aad
data16
testl
pop
popf
xchg
pop
xchg
and
iret
out
movl
cmp
lds
movb
jecxz
fwait
mov
pushf
bound
lods
inc
fcomp
shl
push
lods
popl
pushf
call
xchg
xor
inc
ret
mov
xor
pop
push
mov
and
push
ficompl
dec
cmp
xlat
js
imul
jns
rcrb
mov
cmp
into
andb
into
popf
cmp
lds
mov
sbb
push
jecxz
sub
pop
idiv
xorb
adc
mov
cmp
fstpl
cmp
push
and
mov
cmp
ss
pop
les
lahf
mov
mov
xchg
mov
mov
jmp
xor
stc
dec
push
dec
out
push
loopne
lahf
cmpsb
jmp
inc
pushf
and
aaa
in
jg
mov
xor
and
in
test
mov
ljmp
jge
add
dec
add
jle
cmpsb
scas
mov
int3
sbb
inc
ljmp
outsb
mov
mov
in
xor
dec
into
pushf
mov
cmp
cld
mov
mov
insl
std
mov
add
jmp
add
lcall
add
jle
push
cmpsb
sbb
addb
lock
cmpsl
cld
out
push
lcall
xor
or
pushf
inc
lret
sub
jns
push
sbb
scas
arpl
sarb
cmc
adc
test
sbb
xor
aaa
inc
jno
call
stos
mov
push
cmp
mov
sbb
sbb
jnp
add
loopne
cmpsb
in
pop
inc
xchg
jns
jae
cmpsl
stc
adc
popa
int3
add
adcb
cld
cmpl
ret
or
sub
roll
mov
dec
xchg
int
insl
and
stos
clc
lds
jbe
mov
inc
jb
jo
push
cld
jo
movsb
cmp
les
sbb
xchg
pushf
dec
icebp
adcb
ret
psubusw
mov
lahf
cmp
out
inc
mov
addl
stos
dec
stos
stos
jns
pop
js
out
lds
shl
cli
lahf
insb
lret
jl
pop
xchg
cmp
sbb
push
jbe
in
aad
push
mov
mov
lret
jns
movsb
les
int3
cmpl
xchg
or
cmc
rorl
sub
adc
imul
ret
xchg
call
sub
std
mov
aaa
fistps
daa
dec
sbb
mov
mov
dec
scas
mov
das
adc
xorb
add
les
rolb
xchg
and
cs
shlb
movsl
jp
lods
push
fnstcw
inc
sub
cltd
popa
movb
and
ret
stos
call
ret
shrb
stc
mov
in
cs
popa
outsl
xchg
and
nop
rorb
sbb
cmp
inc
movsl
add
in
mov
xor
mov
scas
fistl
jne
cmpsl
or
xchg
dec
dec
cmp
shr
movsb
and
loopne
outsl
rcrb
ret
push
push
xor
mov
and
pop
stc
mov
loope
inc
sbb
fwait
dec
bound
filds
mov
adc
rclb
fcomps
push
cwtl
fyl2x
mov
lods
mov
and
testl
lahf
addb
in
ret
cwtl
aas
int3
add
arpl
sarb
sub
add
jnp
cld
repz
jmp
in
xchg
xchg
popa
pop
shr
out
mov
dec
rolb
sub
sar
fistl
push
lret
test
decb
jbe
sub
or
rolb
into
cmpsl
jmp
jg
mov
orb
lret
mov
roll
movsb
push
cmp
cmp
jns
xorb
push
add
int3
mov
cmp
dec
push
aam
gs
and
or
jp
jnp
mov
cmp
in
arpl
imul
add
aas
mov
inc
adc
dec
outsl
lods
aad
cs
cmp
test
or
ret
fstsw
mov
mov
test
in
in
fcompl
arpl
fidivrl
pop
mov
inc
dec
ds
xchg
pop
sti
loop
cmp
xor
or
addl
mov
xchg
cs
aam
mov
jecxz
or
addr16
add
lret
arpl
out
jns
bound
imul
ss
stos
and
shrl
xchg
dec
aaa
xchg
ljmp
jb
lcall
pop
sbb
lods
mov
jnp
adc
sub
aad
test
dec
jbe
std
xor
shll
and
add
jmp
in
ret
loopne
adc
xchg
addr16
lods
data16
jecxz
cmp
scas
mov
fistpll
fstl
sahf
jp
flds
xchg
sbb
push
stos
jmp
jge
pop
dec
xchg
push
in
inc
or
sbb
mov
dec
mov
popf
jbe
jne
xor
mov
lea
ljmp
or
inc
in
into
mov
mov
cmp
mov
jl
adc
test
or
inc
lret
in
pop
jecxz
and
ret
mov
pop
loope
movsb
mov
pop
pop
aam
movsb
ret
sbb
mov
sbbl
push
rcrl
jecxz
jmp
js
imul
dec
mov
mov
mov
dec
lret
arpl
pop
leave
loop
adc
fistps
repz
inc
imul
arpl
and
or
inc
lret
mov
imul
jecxz
fistl
mov
jle
cmp
adc
add
sbb
adc
mov
bound
pop
fbstp
push
cmp
dec
xchg
add
mov
arpl
pop
icebp
fadds
popf
addb
lahf
adc
push
jno
ljmp
pop
mov
int3
jge
pop
daa
les
dec
sub
sti
and
xlat
xchg
add
hlt
aad
je
mov
lods
lret
fisubs
push
ja
imull
subps
inc
idivl
sarb
pushf
jecxz
in
fisttps
sbbb
loope
sub
repnz
dec
lret
inc
cmc
ja
arpl
xchg
xchg
sub
pop
or
rclb
push
jp
add
das
mov
out
xchg
out
sub
lahf
shll
inc
sub
xor
das
adc
fisttps
mov
push
jns
hlt
sub
icebp
pop
fs
or
mull
int3
mov
ds
adc
mov
cmc
shrl
xor
sbb
arpl
sub
pop
ds
icebp
sti
shrl
push
cld
bound
inc
mov
pop
mov
fcomps
pushf
int3
inc
mov
mov
jnp
sub
cmp
pusha
jl
sbb
rcrb
sbb
inc
mov
mov
sub
and
into
jne
sub
sarl
nop
jp
xchg
mov
jle
jmp
cli
add
nop
out
push
test
scas
bound
add
repnz
in
xor
or
or
sarl
mov
xchg
imul
sub
repz
jno
sbbb
mov
xchg
add
xor
mov
adc
jecxz
inc
push
inc
mov
stos
test
cmp
aas
rcrl
mov
mov
or
ljmp
dec
mov
inc
loopne
pop
sub
xchg
mov
jbe
xorl
mov
call
sbb
cs
xor
out
inc
rcll
int
out
adc
push
mov
add
adc
xchg
test
adc
enter
xchg
test
jbe
dec
ret
mov
addr16
push
call
leave
mov
cltd
dec
jb
push
pop
inc
lea
jo
inc
cmpsb
inc
jmp
rclb
into
xchg
and
jg
pop
popa
popf
push
lret
out
and
fistl
mov
rorl
push
scas
inc
xchg
stos
jne
test
lcall
shrl
dec
cmc
frstor
cmp
mov
mov
jnp
mov
outsl
adc
aam
cmp
xchg
push
cmp
or
pop
cmpsl
push
mov
ret
xor
inc
test
xlat
inc
fsts
sub
cli
sbb
inc
popf
daa
cmp
lods
iret
push
enter
xorl
call
stos
mov
mov
mov
sti
fwait
lea
sahf
jb
add
inc
cmpl
aam
fmuls
mov
mov
xchg
mov
xor
inc
ret
push
insl
loope
pop
ja
sub
sbbb
lods
cmp
and
dec
lret
fs
xor
or
stc
push
mov
pop
sti
lds
cli
adc
fistps
or
pop
mov
or
ja
test
outsl
xorl
sbb
hlt
mov
add
imul
push
xor
xor
push
xor
insb
mov
pop
les
or
cmpsl
std
push
fsub
vmovss
adc
in
lds
aas
clc
hlt
popf
jl
mov
iret
int3
mov
add
movsl
and
mov
into
mov
ret
cli
cmp
mov
add
add
scas
gs
out
rcll
aad
ljmp
popa
mov
cmpl
mov
ficomps
imul
cmc
ds
imul
push
fs
push
fisubs
lods
mov
mov
imul
test
push
aam
test
mov
cmpsl
or
mov
or
xchg
test
mov
xor
cmpl
mov
cs
popf
add
sbb
pusha
dec
shll
mov
jae
lock
sar
out
movsl
std
insb
jle
je
adc
mov
dec
mov
and
scas
push
cltd
ret
push
xor
pop
test
add
daa
xor
movsl
xor
pop
mov
mov
sbb
out
add
mull
mov
scas
push
push
sub
dec
adcl
sti
imul
jp
sub
cmc
lahf
add
add
int3
xor
out
test
mov
and
sbb
inc
fildl
mov
movsl
imul
dec
stc
lret
jae
ss
add
pop
xchg
das
lock
push
daa
pop
fs
or
and
mov
loop
pop
popa
pop
inc
or
sbb
xchg
xchg
scas
xchg
push
test
jmp
and
mov
inc
mov
mov
or
pop
js
lret
dec
dec
sbb
and
inc
gs
imul
fiaddl
jns
mov
cmp
loope
pop
add
sub
orb
push
js
cs
add
mov
jb
adc
icebp
mov
das
repnz
cwtl
outsl
xchg
push
jge
dec
jg
jmp
inc
movsl
fldt
icebp
add
pop
hlt
pusha
cmpsl
jb
sub
into
aam
sbb
ss
dec
mov
dec
push
or
mov
xchg
and
or
mov
push
dec
push
nop
cli
xchg
test
mov
rolb
popf
push
sahf
bound
mov
jg
call
cmpb
cli
jle
out
aam
sti
push
add
test
jnp
and
adc
es
cltd
pop
xchg
push
mov
loop
repz
xchg
scas
add
aaa
test
cmp
inc
mov
add
sti
fdivs
aaa
pop
sub
out
out
xor
cli
scas
mov
sbb
not
in
pop
shll
mov
bnd
adc
sarb
dec
outsb
and
dec
adc
enter
sbb
int
pop
push
xchg
mov
pop
mov
sbb
jl
xchg
std
push
or
sbb
ret
ficoms
dec
cmpl
scas
add
ret
les
dec
xchg
lret
inc
jg
xor
mov
pusha
xchg
mov
mov
jo
jl
repz
push
push
jbe
ret
orl
inc
pop
inc
std
dec
sti
inc
cltd
test
adc
in
je
fistl
cmp
inc
dec
pushl
jbe
mov
and
sbb
mov
aas
mov
cli
ds
int3
int3
test
dec
xor
pop
or
lahf
popf
xlat
dec
pop
adc
notb
pop
dec
ljmp
xchg
lea
push
mov
xor
filds
mov
adc
std
cmp
jp
daa
dec
xlat
mov
adc
mov
sub
push
rcr
mov
sub
sarb
pop
fs
ja
sub
dec
add
arpl
jmp
xor
or
jge
mov
outsl
mov
sub
xchg
sub
aam
sub
ja
pop
subl
sti
ljmp
add
xor
mov
pusha
pushf
cld
sbbb
fs
lds
dec
outsl
sub
jbe
cmc
jo
sub
cltd
pop
aaa
idiv
adc
imul
jge
jnp
faddl
xchg
loopne
addr16
sub
rcrb
sub
dec
and
je
cmc
dec
add
call
and
rorl
xor
xor
jmp
jns
pop
scas
into
xchg
sub
mov
push
popf
mov
iret
int
mov
ljmp
out
adc
inc
repz
push
jb
adc
sbb
jg
sub
pusha
in
cwtl
adc
sbb
cmc
mov
fstpt
sub
fwait
pushf
into
popf
push
or
test
imul
fwait
bound
mov
leave
jmp
ror
inc
mov
les
leave
and
jg
mov
inc
jecxz
add
loope
jno
leave
sahf
push
testb
jg
cmp
or
inc
inc
sub
fcmovnb
out
xor
inc
xor
cs
fiaddl
inc
mov
cs
das
repnz
sub
xchg
mov
xor
xchg
into
rcll
rcrl
scas
imul
xor
mov
mov
pop
xchg
ja
jb
repnz
xor
loop
insl
sub
mov
jnp
popf
pop
or
pop
sahf
sbb
lds
adc
push
out
jmp
lea
fxch
mov
incl
in
ss
lea
adc
hlt
dec
or
dec
daa
xor
test
and
cmp
call
xor
int3
or
xor
ret
cmpsb
bound
jns
test
repz
mov
mov
stos
xchg
pushf
dec
jbe
xor
notl
imull
js
sub
cvtpi2ps
sbb
data16
popa
fbstp
dec
mov
icebp
adc
js
test
daa
mov
xchg
sub
cmpl
sarb
cmp
lcall
ljmp
addb
outsl
ret
mov
insl
test
mov
fnstsw
adc
subl
lahf
pop
cmp
dec
mov
addl
mov
pushf
sub
clc
loop
icebp
fst
pop
fdiv
pop
outsl
cltd
decb
jmp
pushf
fcompl
enter
in
xorb
lret
or
cli
mulb
push
cwtd
xor
sub
sbb
ja
push
outsl
cmc
pop
fwait
iret
clc
mov
aam
add
jo
lret
lcall
rorb
push
inc
add
mov
pop
and
rcl
xchg
and
lds
out
sbb
or
xchg
dec
test
mov
js
sbb
cmp
push
subb
xor
cmp
int3
dec
or
test
inc
cmp
mov
pop
mov
lds
out
ficompl
adc
push
cmp
andl
pop
loope
loope
sub
imull
sbbl
xlat
cmp
cwtl
lahf
cwtl
nop
pop
mov
in
xorl
sub
repnz
fwait
aad
or
test
xchg
rolb
rorl
ret
repz
out
loop
iret
in
fwait
sbb
outsl
inc
je
sahf
dec
clc
cld
push
adc
gs
mov
fs
dec
mov
insl
pop
ljmp
lahf
stos
packuswb
push
push
jo
sahf
push
div
out
popf
pop
adc
outsl
dec
movsl
or
cmp
push
pop
adc
xchg
fisubrs
mov
rolb
sbb
rclb
xchg
mov
out
add
pop
mov
sbb
sub
fidivs
push
xchg
dec
push
into
sbb
push
xor
in
jb
testb
std
and
subb
cltd
movsb
pushf
mov
ret
pop
cmp
adc
popa
in
popa
pusha
inc
leave
shlb
mov
xchg
jnp
subl
out
fimull
sub
jecxz
jae
vpavgw
jb
push
lods
mov
jmp
pop
jnp
sbb
out
or
cwtl
add
mov
push
das
or
mov
sub
mov
cmp
fiadds
inc
sbb
jae
stc
fdivp
mov
add
push
outsl
aad
adc
jle
mov
jmp
xor
sti
aad
dec
mov
sub
loope
mov
movsb
push
adc
xchg
mov
push
sub
sbb
mov
push
sbb
mov
mov
inc
dec
insl
push
xlat
scas
push
cs
in
push
add
adc
outsb
movsl
push
rcrl
fcmove
test
push
jg
addl
lods
je
popa
and
push
push
loopne
clc
nop
and
loopne
loop
loopne
fwait
stos
int
sbb
sub
fistps
fistl
mov
dec
or
aaa
lcall
adc
ret
add
jae
cli
push
fnstsw
pop
pusha
inc
lcall
call
xchg
insl
push
fcmovb
mov
rcrb
mov
hlt
cli
je
pop
jg
adc
insl
fmuls
or
loopne
and
addr16
or
xchg
js
inc
xchg
ss
out
ret
sub
pop
dec
ret
int
rolb
push
movsb
insl
fldenv
cld
jmp
enter
test
shlb
das
filds
repz
mov
adc
xor
mull
sbb
js
fsubrl
nop
rolb
enter
fs
sbb
jae
call
or
cmp
inc
pop
stos
cmp
out
stos
cmp
jo
ret
pop
pop
sbb
mov
mov
sub
mov
jbe
arpl
jno
xor
lds
adc
mov
dec
sbb
popa
lods
shlb
enter
sub
mov
cmc
imulb
pop
pushf
xor
gs
push
push
in
cmc
js
dec
insl
add
ss
mov
mov
ret
ret
mov
je
or
call
ret
fdivp
pop
mov
mov
jb
out
cmp
insl
in
repnz
mov
les
adc
test
jnp
jb
ss
cmpsb
mov
lds
movl
lock
mov
push
lea
or
lods
movsb
jne
cld
mov
ss
mov
dec
cmp
daa
mov
loope
mov
push
mov
and
popa
fistps
xor
pop
inc
stc
mov
xchg
cmp
mov
outsl
and
inc
xor
pusha
jg
cld
imul
dec
cmp
rcll
sarl
scas
pop
lods
les
lods
or
repnz
mov
test
jg
adc
mov
push
std
in
shlb
dec
std
jl
hlt
xor
dec
movb
adc
lcall
fimuls
jbe
sub
lret
dec
dec
out
pop
pop
dec
pop
mov
stc
mov
aad
ss
out
sti
in
jp
das
lock
dec
pop
jmp
mov
or
rol
lods
push
xchg
sbb
mov
insl
loope
push
je
mov
mov
xchg
aaa
mov
jl
mov
jae
mov
mov
test
mov
cmp
and
add
xor
xchg
ss
rcrb
outsl
adc
sub
or
xchg
and
adc
pop
mov
repnz
push
sbb
add
and
fimuls
sub
pop
adc
jecxz
pop
cmpl
sub
adc
pop
or
out
lods
pushf
fcomps
push
jmp
aam
cmp
and
add
aaa
mov
xchg
adc
nop
jmp
sahf
xchg
xor
iret
xor
pop
dec
out
jnp
cld
lds
fwait
out
dec
mov
je
push
fistps
shll
repnz
dec
int
cmpsl
jp
inc
ja
sub
cli
stos
dec
std
xor
sub
addr16
xor
icebp
jo
and
test
or
enter
lret
icebp
mov
fadds
add
xchg
aas
mov
jp
imul
adc
sbbb
xchg
imul
shrl
insl
pop
das
adc
fdivrl
shrb
add
jg
aaa
pushf
mov
sbb
xor
xchg
sub
sbbl
call
dec
stc
push
sti
in
add
adc
sub
push
xor
adc
lea
mov
mov
sbb
test
ja
dec
adc
mov
jecxz
mov
or
les
push
push
mov
xor
push
mov
push
cmp
out
or
adc
jb
push
lret
leave
cmp
jbe
pop
fldcw
cli
bound
in
mov
sub
inc
and
ds
jb
add
add
cmp
xchg
jbe
jecxz
movsb
inc
dec
add
bswap
fs
sbb
pop
jmp
adc
add
mov
repz
jp
ret
mov
pop
fisttps
push
jnp
loopne
inc
ret
shrb
into
popa
sub
idiv
dec
jne
loop
sub
lret
lret
push
pop
in
and
insl
outsl
cmc
outsb
push
pop
out
das
shll
mov
in
outsl
push
fstpt
fsubrs
hlt
loop
aas
aaa
pop
aam
dec
inc
daa
ljmp
lret
imul
rcrl
andl
data16
cmp
aad
cld
jg
cs
push
sbb
imul
lret
sbb
data16
jl
push
insl
insl
das
repz
xor
inc
insb
cwtl
pop
es
cmp
xor
fcompl
cmpl
dec
mov
scas
xchg
mov
xchg
adc
mov
or
enter
into
adc
cmpsl
jl
adc
sahf
into
xchg
sbb
icebp
mov
pop
mov
pop
sahf
push
and
sbb
pop
les
int3
xchg
cld
mov
push
pop
int3
or
cltd
hlt
mov
sub
shrb
cmp
mov
mov
dec
ret
enter
mov
fstpt
loop
inc
std
dec
divl
stc
pop
jmp
dec
popf
sub
cs
lods
pop
push
adc
cmp
fists
stos
or
loope
out
push
jmp
cld
jge
addps
div
sbb
test
stos
or
mov
mov
fisubrs
movsl
xchg
psllw
jl
fdivl
add
ss
jg
cltd
stos
mov
es
stos
mov
xchg
jb
pop
cmp
push
cli
push
dec
pushf
sub
inc
mov
pushf
sub
xchg
ss
dec
cs
mov
and
add
mov
add
inc
sahf
pop
js
xor
sbb
mov
into
lock
push
add
fdivrs
ficoml
mov
andl
inc
gs
lea
sbb
mov
inc
push
je
lret
pushf
xlat
call
pop
push
aam
test
mov
pop
outsb
adc
lea
shlb
lock
push
negl
in
inc
push
sarb
fistpll
pop
push
into
test
sbb
in
iret
sub
out
sub
shlb
mov
push
ljmp
xlat
int
push
rcrl
call
adcl
insl
or
movsl
mov
adc
mov
jmp
mov
aam
mov
aad
inc
lahf
enter
cmpb
arpl
adc
sub
cmp
mov
dec
add
adc
mov
scas
into
stos
rcpps
jno
lcall
sbb
xor
cld
mov
sbb
enter
cld
mov
shlb
sub
xchg
dec
stos
mov
cmp
lahf
inc
imul
scas
ret
stos
test
jno
or
add
mov
mov
loopne
test
pop
xchg
addr16
add
out
sbb
cmp
test
and
push
out
out
cmp
or
rorl
stc
test
into
xchg
enter
shl
pop
adc
xchg
loop
xchg
push
lods
gs
jo
sub
xchg
sbb
ds
xor
insl
adc
pop
adc
jo
arpl
cmp
ss
leave
mov
movsl
mov
clc
push
add
ja
fwait
bswap
mov
cwtl
pushf
fs
lahf
push
lock
sub
iret
daa
xchg
push
ret
fidivrl
imul
jle
cmp
lret
adc
inc
jmp
pop
repz
jae
inc
popf
and
push
jecxz
pop
xchg
imul
cs
cmp
xor
fs
or
cld
inc
leave
int3
sub
outsl
push
sbb
or
outsl
lock
cld
notl
jp
pop
outsb
mov
cmp
arpl
cwtl
rorb
aaa
and
adc
add
cmp
cmp
mov
icebp
mov
sub
test
js
mov
xchg
cmp
push
xchg
popa
loope
push
ficoml
les
add
jb
lahf
notl
stos
lret
sti
xchg
sub
aas
aas
xchg
int
jnp
shrl
mov
push
pop
sbb
jge
sub
movsl
fstl
jle
flds
mov
inc
aaa
mov
mov
sbb
dec
and
sub
lret
dec
movsl
rcr
jge
fcmovb
dec
lds
ja
sahf
or
push
movsb
dec
cmp
cld
inc
push
dec
stc
lock
stos
jnp
fsubl
sbb
or
std
xchg
xor
cmp
punpckldq
js
mov
xchg
adc
arpl
enter
lahf
jge
pop
movsb
push
and
mov
mov
lock
pop
and
inc
js
push
mov
pop
pop
and
cli
leave
push
cmp
cld
mov
xor
or
mov
sbb
sbb
xor
add
sbb
push
pop
popa
push
fildll
fsubrs
adc
fildll
xchg
xorl
inc
dec
subl
repz
mov
arpl
stos
dec
jo
ljmp
cmp
mov
adc
test
ss
shrb
sbb
jl
add
shll
int
push
std
aam
adc
mov
in
inc
push
sti
pusha
lahf
sbb
popf
and
aam
mov
mov
iret
or
test
hlt
sub
cmp
add
jg
fsubrp
xlat
add
iret
adc
fstpl
out
in
mov
aaa
mov
stc
adc
stc
fildll
push
addr16
repz
xor
fidivrs
imul
pop
and
es
cmpb
or
adc
push
xchg
lock
sbb
addb
out
pop
xor
pushf
mov
mov
push
adc
mov
lea
cs
cltd
ljmp
cmc
sub
or
jo
cmpsb
fs
mov
pop
fbld
push
mov
mov
dec
aam
mov
adc
enter
scas
mov
cmpsl
add
mov
out
out
ficompl
clc
add
cmp
pusha
mov
xlat
shlb
in
mov
imul
cmp
pusha
sbb
jae
into
and
and
jbe
inc
dec
or
call
pushf
mov
push
xor
xor
inc
add
scas
push
xlat
cmc
pop
les
pop
adc
loope
ficoml
jno
and
outsl
rorl
test
insb
xchg
adc
xchg
in
negl
test
movsl
sub
or
add
lods
xor
jno
pop
xor
inc
cmp
xchg
sbb
sahf
iret
sti
dec
rcll
stc
pop
addb
mov
mov
push
mov
aaa
stos
mov
bnd
ret
addr16
or
jmp
ret
imull
fs
ljmp
in
xlat
xor
ret
mov
pusha
lds
mov
pop
ror
sbb
mov
popa
gs
sbb
jno
cmpsl
or
mov
subb
adc
xchg
fsubrs
push
fwait
push
xor
xor
mov
push
xchg
aam
rorl
xchg
fsubrl
mov
push
push
adc
cmp
nop
mov
aad
mov
mov
subb
sbb
jecxz
pop
orl
movsb
ds
push
scas
inc
push
and
push
xchg
fldt
sar
pop
lret
jg
stos
cmp
mov
aas
cmp
xchg
jo
jp
jle
sbb
out
ds
repz
ljmp
push
pop
and
xchg
scas
inc
mov
mov
dec
rolb
scas
pushf
lods
pop
imul
mov
push
inc
lods
fsubrs
xchg
cld
adc
mov
push
mov
pop
data16
mov
ss
ret
pop
mov
mov
sahf
cmpsl
bts
xor
dec
pop
jae
sti
jecxz
outsb
outsl
sahf
ret
or
xchg
mov
mov
sbb
cmp
fistpl
sbb
ret
shlb
inc
xor
aaa
xchg
jecxz
aaa
cmc
inc
sti
and
pushf
aaa
test
pop
cld
mov
int
xor
fnstsw
dec
pop
xor
push
push
addr16
adc
dec
ds
xchg
icebp
inc
imul
rolb
cwtl
fs
push
aas
pop
xchg
push
loopne
xlat
rcll
loope
sbb
sbb
rcr
cmpb
inc
sub
pop
jge
jmp
or
lods
adc
clc
negl
inc
mov
or
xlat
xchg
xchg
lea
cmc
dec
mov
and
mov
cmp
jle
sbb
mov
das
mov
cmp
pop
mov
mov
mov
inc
outsb
ljmp
mov
sbb
in
pop
mov
int
fdivl
inc
sbb
aad
mov
jge
add
push
lret
test
and
insb
push
lock
jge
dec
inc
or
test
addr16
rcrl
outsl
or
imul
in
push
push
aad
imul
xchg
jo
jmp
push
out
sahf
adc
or
cmp
push
test
dec
ljmp
add
sub
andb
adc
mov
fnstenv
sahf
sbb
jecxz
jno
inc
pusha
je
cmp
mov
xor
repnz
add
pop
push
out
fidivrl
mov
je
rcl
cmp
pusha
es
xchg
mov
dec
movsb
hlt
or
jle
rorl
xchg
push
scas
popl
test
add
mov
sbb
inc
xchg
xor
jne
sahf
pop
jmp
adcl
cld
lahf
sub
xorb
push
cld
push
imul
cmp
negl
repz
aad
popf
dec
cmp
add
js
js
ja
in
sbb
mov
pop
in
loop
mov
scas
stc
add
cwtl
loopne,pt
xchg
stos
cs
aad
movsl
in
loope
cs
testb
sti
dec
jge
loope
cmc
pop
leave
shl
scas
pop
xchg
push
ror
lods
dec
dec
js
and
repz
sbb
iret
les
sub
imul
out
lcall
orl
mov
adcl
popf
mov
jo
xor
lret
in
cli
or
sbb
int
mov
adc
stos
inc
mov
lcall
mov
test
sbb
jne
jbe
pop
mov
pop
cmp
mov
or
mov
push
adc
jp
shll
popf
shr
inc
cmp
int
xor
bound
aas
call
pop
pop
mov
scas
push
jae
lds
negb
rclb
sub
test
outsb
in
aad
pop
stos
cs
movsb
mov
and
xrelease
mov
sub
test
out
pop
insb
gs
jbe
inc
inc
and
mov
push
lods
adc
pop
jecxz
mov
sub
movsl
test
sub
xlat
imul
lock
mov
dec
subl
data16
clc
push
clc
fldenv
push
pop
mov
in
rcrl
movsb
xchg
mov
mov
add
jge
arpl
push
aam
sbbb
ja
mov
loop
sbb
stos
inc
inc
sub
or
dec
xor
call
sbb
into
mov
mov
stc
in
and
fdivp
sbb
shlb
pusha
lods
jbe
adc
jo
dec
and
mov
fmull
jecxz
push
dec
cwtl
cmp
inc
hlt
mov
push
insb
sub
mov
inc
pop
call
mov
in
xor
fwait
neg
roll
stos
jle
adcl
pop
mov
xchg
jp
ss
je
out
cmc
jg
pop
mov
jbe
insb
icebp
dec
sub
jp
in
jae
sbb
adc
insb
test
inc
inc
out
call
xor
inc
inc
mov
inc
popa
fnstcw
dec
mov
das
mov
icebp
mov
mov
iret
aas
xor
sbb
imul
mov
dec
add
stos
mov
xor
sub
xorl
fcoms
xchg
xor
jp
mov
pop
or
adc
orb
ret
adc
push
or
mov
lret
xlat
pop
stos
imul
inc
je
inc
push
push
pop
inc
nop
mov
enter
das
xchg
scas
stos
test
and
jl
adc
mov
shrb
in
push
mov
inc
stos
insb
lock
sbb
in
adc
or
pusha
adc
push
adc
push
dec
cmp
cmp
jb
dec
imul
sbb
or
pusha
cmpsl
aas
push
pop
movsl
aas
inc
enter
pop
push
repnz
inc
pop
mov
sbb
popf
mov
xor
mov
jl
cmp
je
js
pop
mov
or
pop
roll
xlat
adc
pop
dec
js
sub
push
sbb
or
mov
xlat
adc
jge
and
xchg
insb
adc
subb
leave
pop
sub
cmpb
pop
pop
jmp
sbb
dec
pop
xchg
pop
inc
xchg
cmp
cmp
pop
in
cmp
or
cmp
add
xor
inc
adc
sbb
shll
mov
pop
daa
jne
inc
inc
outsl
loop
loop
sbb
jmp
push
jae
jb
mov
das
inc
xchg
add
aad
imul
mov
mov
jae
cmpsl
in
fisubl
js
ficompl
test
repz
nop
mov
repz
cmp
sqrtps
inc
call
mov
jae
mov
push
cmc
jno
adcl
movsb
dec
icebp
in
cmp
mov
ja
push
or
mov
push
aad
bound
jnp
es
xorw
jno
sub
fldt
lods
pop
fisubrl
adc
mov
popa
test
rcrl
and
out
adc
mov
ficoml
mov
inc
div
in
js
arpl
sbb
xchg
outsb
jl
add
sub
mov
mov
mov
jne
nop
xorb
adc
mov
cmpsb
add
adc
stc
adc
aaa
insb
out
xor
pop
test
adc
mov
cli
sbb
xor
rolb
orb
jbe
hlt
lea
leave
iret
dec
fmull
pop
test
add
into
cmp
inc
mov
insl
fs
inc
pop
mov
cmp
bound
divb
jl
in
scas
call
push
mov
incb
inc
and
xor
mov
sbb
pusha
scas
lahf
outsb
jmp
gs
lret
jbe
sbb
aaa
in
push
scas
scas
loopne
fs
mov
pop
fidivs
mov
out
xlat
xchg
sarb
into
adc
mov
js
popa
push
ret
or
lods
shll
dec
insl
movl
and
shll
loopne
shl
push
dec
push
pop
add
in
jo
pop
push
dec
fmull
push
aas
jmp
mov
aam
jbe
dec
jb
adcl
add
ljmp
aam
add
push
lea
dec
aas
iret
mov
loope
loope
cld
mov
mov
shl
pop
movsl
lret
and
xor
or
mov
fs
ljmp
mov
adc
lods
les
stos
dec
jmp
mov
stos
sti
lret
cmc
adc
xchg
mov
pop
xor
add
xor
mov
stc
mov
insl
mov
rcr
es
in
adc
in
ds
stos
and
inc
jmp
cli
jecxz
imul
insl
stos
add
jbe
sbb
add
push
mov
cwtl
rorb
movsb
dec
jle
inc
aad
sti
aad
icebp
jg
pop
sbb
cmp
lahf
push
mov
or
in
aaa
push
inc
jno
sbb
lret
movsl
daa
add
in
sbb
or
mov
nop
test
cwtd
addl
mov
cltd
mov
xor
mov
das
adc
or
shll
pop
setnp
std
pop
xchg
rcrl
lock
add
mov
sbb
mov
mov
fs
xor
test
sub
hlt
inc
pop
cmp
mov
notb
mov
clc
mov
decb
sbb
xor
inc
pop
scas
pop
rcl
fnstcw
mov
mov
inc
jns
scas
xchg
cmp
pop
mov
and
in
jle
mov
mov
aam
push
xor
popa
cld
xchg
pop
aas
popf
pop
adc
push
stc
xchg
dec
push
cmp
adc
ficomps
push
into
dec
rcl
pop
cmc
mov
mov
insl
sub
out
push
push
cmp
loopne
pop
rcr
mov
lret
xchg
inc
dec
xchg
and
jl
jne
sbb
sub
adc
ja
sarb
out
ljmp
jg
daa
lods
es
pop
int
imul
cmp
mov
mov
enter
lahf
lret
pushf
dec
js
push
mov
loop
sbb
xor
or
imul
pop
clc
dec
add
ljmp
lods
enter
or
mov
addr16
jle
xor
mov
dec
lcall
popf
sbb
fs
cmp
dec
out
aad
cmp
xor
out
sbb
cmp
mov
adcl
or
fcomip
bound
fwait
lods
es
jg
rorb
test
gs
push
test
movsb
cmc
das
jg
idivb
jecxz
sub
inc
jbe
jo
inc
pop
pop
int
sbb
mov
out
int
lret
sarb
cmp
cltd
push
shll
cmp
mov
fnstenv
and
xchg
into
aas
xor
lahf
bound
stos
pop
dec
push
es
mov
int3
adc
out
lds
or
push
movsl
push
adc
ret
or
addr16
mov
int
enter
movsl
mov
fidivs
popa
cmp
adc
pop
daa
dec
rorb
pop
xchg
xlat
cmp
or
cmp
test
int3
mov
or
push
push
cmp
arpl
inc
push
jbe
cmp
sub
repnz
cmp
mov
jl
adc
mov
dec
clc
mov
lds
mov
adcb
ljmp
cltd
ret
push
adc
sbb
dec
repz
jo
sbb
call
stc
icebp
stos
add
sub
inc
or
sub
test
rorb
mov
iret
add
pop
add
push
pop
fdivp
mov
cli
icebp
scas
mul
in
jmp
mov
stos
js
mov
pop
hlt
sahf
arpl
xor
add
push
inc
mov
imul
mov
xchg
pop
mov
cmp
push
mov
popa
jp
inc
or
mov
inc
outsl
mov
ss
mov
repz
xlat
wbinvd
fwait
push
mov
loop
aas
js
mov
xor
lret
icebp
sbb
sbb
add
ja
pop
mov
inc
push
popa
jne
int
adcl
idiv
cmp
adc
ds
aas
jne
arpl
popf
cmp
repz
pop
sub
nop
cmc
sub
call
lret
pop
jbe
mov
push
xor
shlb
xchg
aad
cmc
dec
mov
insb
loop
imul
xchg
je
mov
stc
fwait
lret
or
aas
push
pop
cmp
jb
jnp
jnp
inc
lret
daa
mov
add
xor
ljmp
xchg
sbb
mov
loope
push
pop
cmp
pop
push
mov
rcl
dec
shrb
bound
fsts
sahf
mov
nop
add
pop
scas
inc
lret
xor
mov
xor
leave
and
insl
test
dec
clc
jne
sbb
pushl
imul
jmp
lcall
movsl
or
aaa
clc
sbb
fs
fs
jne
or
loop
loope
sbb
in
lahf
ficoml
ficoml
test
decl
jmp
push
scas
lahf
and
adc
adc
daa
add
xchg
imul
packsswb
out
arpl
ja
mov
pop
cmp
into
imul
sub
cmp
mov
adc
adc
inc
jmp
and
jne
sub
and
xchg
dec
sub
and
mov
insb
push
scas
pop
cmc
adc
or
ss
mov
sbb
inc
ret
hlt
adc
test
int3
call
jecxz
and
mov
cli
xor
outsb
lds
int3
push
sub
sub
mov
sub
insb
sub
iret
in
cmp
insl
mov
out
call
aaa
jmp
xor
push
inc
aam
int3
mov
or
imul
nop
pushf
jno
push
dec
arpl
inc
dec
dec
negl
cwtl
mov
pop
loopne
loop
ret
xor
pop
imul
ljmp
fnstcw
jbe
add
dec
xchg
mov
dec
push
lock
daa
dec
sarb
push
repnz
or
or
icebp
sub
addr16
flds
pop
xlat
nop
push
dec
mov
xor
mov
sbb
daa
out
pop
and
cmp
cmpb
iret
sub
out
in
scas
and
ret
mov
in
cmp
xchg
xchg
jp
inc
lahf
ja
xorl
dec
pop
test
cmc
xor
mov
insb
xchg
cmp
aaa
and
mov
pop
and
sub
mov
stc
push
inc
cmp
aas
fldenvs
js
enter
mov
inc
sbb
movsb
aad
jg
xchg
leave
out
sub
and
mov
xor
xchg
xchg
add
jmp
add
mov
dec
sub
sbb
aam
cmp
rolb
clc
pop
cmpsl
dec
pop
push
inc
iret
xchg
xlat
mov
mov
jge
imul
imul
inc
add
int
lds
movsb
inc
shll
sbb
jne
ficomps
fisubrs
push
lea
cmp
int
test
lods
pop
arpl
push
icebp
mov
aam
cmp
adc
jecxz
xchg
pop
roll
lea
shll
insl
add
and
aas
and
xchg
push
shll
fbstp
dec
clc
gs
bound
fadds
jge
cs
fstp
sbbb
jae
or
mov
arpl
cwtl
mov
mov
and
and
es
insl
hlt
aas
xchg
cs
xchg
lret
les
push
pop
and
pop
mov
mulb
fmull
add
pop
dec
mov
enter
sbb
call
nop
lock
xchg
xchg
or
out
les
in
incl
pop
pop
fcmovb
out
insl
lods
xchg
jnp
pop
cmc
cmpsl
cmp
lret
movsb
jnp
xchg
insl
pusha
xor
and
imul
pop
mov
out
fstl
ljmp
arpl
insl
dec
push
xchg
in
dec
dec
mov
jg
jecxz
push
imul
int
xchg
mov
lcall
insb
xor
jl
loope
cmp
rolb
outsl
push
call
jae
inc
adc
fcoml
fnstenv
jns
or
test
lret
lcall
cs
dec
xchg
in
pop
inc
orl
dec
out
setns
cmp
jle
stc
pop
sub
add
mov
add
mov
push
lods
cmpsb
pop
lods
xorb
scas
repnz
push
jge
inc
leave
jae
inc
js
je
jmp
and
mov
adc
ficoml
mov
dec
push
ret
push
jb
xor
bswap
sbb
mov
ret
cmp
jge
cmp
cmp
add
or
add
xor
mov
xor
js
and
inc
icebp
fwait
cs
and
mov
inc
jbe
or
popa
xor
pop
sti
shl
fcomps
lods
call
in
mov
pop
adc
push
add
dec
mov
dec
aas
sahf
cmpsb
fistps
out
dec
int3
mov
or
les
dec
sarl
sub
sbb
in
cli
fnsave
test
fdivs
loop
fwait
sbb
imul
and
adc
cmp
mov
xchg
adc
pop
repz
aam
lcall
pop
das
hlt
in
push
adc
inc
in
lea
adc
aad
cmpsb
addb
aaa
sbb
iret
dec
stos
adc
cmp
pop
sub
lds
and
test
sbb
jae
pop
rcl
jno
in
sub
cmpsl
sub
lock
jmp
shrb
popw
mov
jne
aad
ds
jg
jb
jmp
pop
in
rep
sarb
dec
jmp
jnp
scas
mov
data16
jno
ret
out
dec
sbb
call
dec
push
lock
sbbb
inc
pop
daa
push
or
push
lret
adc
iret
cwtl
call
mov
loopne
sbb
mov
xlat
jnp
mov
jmp
sbb
sbb
mov
int3
out
sti
shl
fildl
jae
push
nop
mov
push
test
lock
inc
jl
dec
sub
inc
ss
outsb
cmp
push
push
inc
push
popf
pop
nop
lret
push
cmp
cmpsb
mov
mov
mov
je
add
jbe
pop
mov
jecxz
daa
notb
pop
add
hlt
mov
mov
mov
notb
nop
je
pop
dec
jnp
adc
fistps
movsl
cmpsb
mov
ja
lods
stc
enter
mov
mov
mov
push
xchg
imul
mov
xchg
xchg
nop
jno
loopne
dec
push
imulb
mov
pop
sarl
sarl
fisubs
add
xor
mov
andl
mov
ja
incb
jecxz
jae
mov
mov
sbb
jns
mov
adc
in
mov
xchg
cwtl
mov
movsl
rclb
pushf
inc
loopne
mov
jl
popa
in
fnstcw
mov
out
cmpsl
jbe
cvtpi2ps
lds
sbb
jns
cltd
adc
das
sahf
push
mov
jno
and
pushf
push
mov
dec
jo
scas
mov
out
xor
bound
cmp
push
popa
adc
xchg
cmpsl
cltd
fdivr
mov
in
jge
sbbl
fnstsw
stc
lahf
xchg
and
push
xchg
aam
xchg
test
out
fldcw
xchg
adc
cmp
cmpsl
arpl
ret
xchg
sub
dec
mov
cmp
mov
xchg
pop
outsl
out
out
xor
aad
dec
xchg
cmc
orb
enter
jecxz
dec
push
push
out
repz
mov
call
cmp
mov
mov
cmp
or
stos
mov
jecxz
or
mov
mov
aas
push
sbb
clc
xor
push
mov
das
shll
xlat
xchg
lods
lock
clc
cmpps
lret
jbe
jl
inc
jno
xchg
ret
loopne
loope
ss
nop
jns
inc
lret
es
loopne
test
pop
out
mov
cs
mov
int
add
aaa
add
pushf
mov
or
mov
mov
insb
aam
cmp
push
sbb
leave
scas
subl
ja
pop
rorl
sti
in
cmpsl
add
pop
push
inc
push
xchg
das
mov
push
add
fcoml
jmp
insb
dec
lea
cmp
pop
addr16
dec
and
mov
mull
into
push
imul
stos
mov
mov
push
jg
sbb
cmpl
fsubl
je
mov
into
inc
mov
stc
movsl
push
cmp
cmp
jo
arpl
adc
pop
addr16
add
out
notl
sti
subb
das
jle
ret
or
fdivrl
outsb
xlat
and
dec
mov
outsb
test
test
sahf
adc
scas
xlat
psubsb
dec
mov
iret
int3
shll
sub
mov
xor
nop
xor
lods
cmp
push
or
add
sbb
roll
jmp
jl
pusha
cmp
in
sub
xor
cltd
mov
pop
mov
lock
aad
sbb
cmp
fs
inc
and
mov
mov
stos
or
lcall
sub
testl
insl
sub
loope
mov
add
je
out
sub
fldl
cmp
adc
fildll
mov
rclb
xchg
inc
mov
setle
sub
pop
mov
stc
nop
icebp
sarb
mov
sub
adc
push
es
fisubl
jbe
inc
mov
cmpl
ret
loop
mov
clc
sub
inc
mov
and
out
push
sub
jne
mov
inc
push
add
mov
inc
aaa
scas
push
inc
xor
call
in
dec
xor
xchg
push
dec
stos
mov
sahf
sbbl
cmp
dec
in
lahf
shll
insl
jmp
imul
clc
or
push
shll
mov
out
jecxz
xor
pop
lcall
out
shl
sarl
and
ljmp
mov
mov
mov
xchg
add
xchg
fiadds
test
sub
imul
or
dec
mov
jmp
push
mov
addr16
pop
add
shrb
gs
jmp
leave
rcrb
pop
lret
out
cmc
dec
std
pop
jno
add
out
jge
loope
sahf
imul
aas
push
sbb
aad
dec
icebp
int
lret
into
scas
fwait
cmp
adc
pop
mov
pusha
sarl
ds
mov
pop
cmp
adc
sub
add
cmp
or
cmp
and
icebp
sbb
add
add
jg
xchg
popl
cmpsb
xor
pop
cmpsb
nop
sub
outsb
lods
inc
out
stc
movsb
dec
sub
jp
add
cltd
mov
mov
jno
pop
mov
test
add
shl
addb
mov
mov
jno
push
movsl
mov
rol
ds
pop
stos
cltd
dec
insb
mov
mov
loop
xchg
flds
mov
pushf
int3
and
xor
into
adc
sbb
test
xor
jl
push
dec
sub
cmp
jne
mov
cmc
cmpsb
mov
icebp
and
dec
scas
lcall
aas
aad
repnz
jo
insl
xlat
lcall
or
sub
pop
sub
popf
mov
loope
mov
fsubr
lds
mov
ret
aas
icebp
mov
pop
xchg
or
insb
jbe
jge
push
mov
cmp
movsl
mov
inc
mov
es
ds
shrl
lret
ficompl
fstl
movntps
sub
jo
cmp
dec
sub
lret
fucomip
lcall
movsl
fwait
xor
outsl
aaa
ja
scas
addr16
sub
or
push
addr16
mov
mov
pop
shlb
inc
push
or
in
inc
lret
xchg
mov
fiaddl
pop
push
sbb
adcb
sbb
xor
insl
cwtl
ljmp
jge
jnp
and
aas
push
inc
dec
repnz
pop
or
lcall
inc
cli
push
pushf
sub
ret
add
or
popa
int3
andb
stos
sub
pop
cltd
cmc
bt
jo
adc
cmpsl
out
fistl
mov
arpl
mov
stos
add
jnp
dec
sti
mov
xor
xchg
insb
or
pop
aas
loop
pusha
dec
sub
xchg
xchg
mov
clc
add
fstpl
pop
popf
dec
mov
sub
lock
icebp
lods
and
push
push
mov
xchg
daa
and
into
call
sub
leave
mov
cmp
and
and
pop
in
fnstenv
jno
arpl
push
jge
enter
into
loop
loope
stos
aaa
or
adc
es
inc
inc
imul
sub
incb
or
fistl
out
popa
je
pop
outsb
push
mov
rcll
xor
jmp
movsl
adc
jno
sar
add
inc
mov
dec
jl
push
aaa
call
testb
nop
int3
dec
push
pop
dec
arpl
push
cwtl
xchg
jg
stos
mov
lock
cmpsl
loope
arpl
popa
jl
add
aam
addl
sbb
or
add
cmp
adc
jp
mov
pop
gs
lods
daa
pop
je
adc
cwtl
push
inc
iret
aaa
pop
gs
cmp
arpl
test
in
cmp
and
outsb
enter
mov
ja
push
jbe
sti
jmp
add
cld
xor
xchg
pusha
add
test
pop
stos
dec
popf
jae
dec
sub
in
jge
imul
lcall
jo,pn
cmp
js
and
movsl
or
sahf
sub
lret
mov
inc
or
repz
test
push
js
jmp
test
mul
cld
cmpsb
add
mov
test
dec
push
leave
mov
cltd
repz
leave
cmp
dec
scas
cmpsl
mov
sub
fidivrl
insb
cmp
sub
loop
pop
jns
test
iret
arpl
ss
mov
ds
inc
dec
jl
adc
out
push
or
call
sbb
sub
adc
mov
adc
sbb
cmp
mov
stos
sub
mov
ret
test
clc
repz
ror
push
or
inc
cwtl
pop
call
cltd
mov
or
xor
adc
inc
jo
mov
movsl
push
fwait
imul
rclb
xlat
adc
in
gs
out
aas
rol
call
sbb
lcall
jns
inc
sbb
ret
pop
ljmp
pop
cwtl
in
cmp
cmp
and
dec
and
leave
test
insb
jne
ret
ljmp
mov
decl
mov
add
sbb
cmp
inc
xchg
pop
je
and
fldt
jns
sub
cld
mov
or
fidivs
popa
imul
jmp
out
adc
int3
inc
jl
mov
cmp
push
fdivrs
imul
leave
adc
push
mov
cmp
data16
jo
pop
nop
jns
add
jp
pop
adc
pop
inc
pop
cmpsl
out
fwait
sub
push
shll
jae
push
cmp
dec
inc
cld
push
mov
cmpsl
js
xchg
mov
pusha
lahf
push
les
push
ret
sub
push
sub
nop
clc
das
mov
test
mov
aas
es
and
jl
jnp
ret
loope
push
loopne
outsb
stos
jnp
xchg
outsl
inc
dec
nop
mov
jg
mov
nop
popa
dec
mov
cli
rolb
add
and
call
inc
and
int3
xchg
jo
call
gs
sub
push
mov
mov
sub
loope
mov
or
lret
mov
or
stos
sbb
sub
xlat
fwait
xchg
loope
movsl
rcl
jb
ret
jno
mov
outsb
adc
mov
pop
add
adc
into
mov
in
outsl
lock
mov
es
imul
sbb
or
mov
fsubrs
sbb
cmp
loope
dec
mov
iret
imul
inc
cwtl
jl
imul
mov
pusha
pushf
lock
mov
ljmp
add
xchg
addr16
jmp
xchg
sub
lret
mov
mov
hlt
sbb
data16
inc
ret
in
outsb
jp
mulps
imul
add
pop
jae
jbe
xor
mov
dec
in
ljmp
and
and
hlt
sub
xor
stc
jg
jno
or
mov
mov
in
adc
mov
ds
or
std
pop
iret
push
in
inc
push
xor
stc
cwtl
in
jae
adc
mov
push
sbb
or
jg
nop
iret
dec
mov
xor
sbb
fldl
push
mov
test
scas
and
aam
cld
mov
push
test
hlt
push
lret
or
xchg
cmp
xchg
mov
outsb
adc
sahf
add
fdiv
scas
lods
lea
mov
inc
jno
sti
jle
ficoms
sub
loop
in
push
sub
je
xchg
push
into
lods
fs
xchg
stos
sub
out
inc
scas
jns
lcall
and
scas
or
loopne
dec
bound
addb
and
push
cli
jb
xor
lea
rorb
out
or
jmp
std
cmp
mov
dec
les
mov
dec
jno
mov
jno
or
daa
les
sub
adc
jecxz
cltd
pushf
leave
das
fnstenv
cmp
jns
pop
ret
ret
pop
rcr
adc
popf
arpl
inc
push
cmp
xor
out
orb
pop
lcall
sub
stc
jnp
hlt
fisubrl
and
lods
xor
lret
add
sbb
je
imul
xchg
xor
xchg
rcll
popa
push
lahf
adc
push
inc
mov
fcomp
push
outsl
mov
sbb
mov
xor
rcrl
adc
sti
jbe
dec
test
inc
out
cmp
mov
leave
xor
cmpb
cmp
rcl
test
cmp
xor
mov
xchg
in
pop
xchg
pop
sub
cmp
cmc
dec
push
xor
or
subb
dec
cmp
loope
inc
cmp
mov
or
dec
es
ds
mov
incl
ficoml
scas
xor
fsubr
and
test
cld
jno
leave
bound
pop
enter
cwtl
dec
add
ljmp
repnz
xchg
into
call
into
shl
xor
add
xor
pop
or
movsl
out
cmpsl
adc
divl
jmp
loopne
in
cmpsl
cmp
cmp
jmp
or
enter
cli
shlb
out
push
push
or
jp
cltd
cltd
cmc
sbb
inc
push
enter
jns
insl
lcall
nop
mov
jne
xor
cltd
pop
adc
imul
sbb
ret
fcmovnu
cmp
sub
ret
mov
xchg
sub
mov
cmp
scas
mov
and
dec
int3
test
mov
xor
movsl
or
sti
aam
pop
sub
cmpsb
and
subb
hlt
jae
sbb
adc
jmp
sub
cmp
pop
xchg
sub
xor
cmp
mov
ds
loop
aaa
stos
into
sbb
aad
mov
mov
sbb
cs
and
dec
imul
mov
mov
pop
js
daa
call
js
xor
lret
xchg
out
mov
cmp
cmp
pushf
aas
mov
testb
andb
xchg
stos
int3
add
push
mov
enter
inc
mov
sbb
and
add
cmp
icebp
mov
add
or
add
mov
sbbb
sub
pop
lret
pop
scas
outsl
mov
bnd
inc
xor
lea
mov
xchg
jo
xor
jnp
leave
adc
jp
mov
lock
or
inc
sbb
scas
insl
flds
and
inc
or
jns
xchg
orl
lods
outsl
mov
adc
mov
clc
xchg
ret
es
mov
loop
sahf
sub
enter
mov
sahf
jo
cmp
mov
pop
mov
mov
sti
leave
lea
cld
push
jge
push
shlb
dec
lock
lods
addr16
testl
cmpl
push
fdivrs
mov
sub
imul
rclb
and
and
adc
mov
xor
test
push
jbe
push
das
fsub
push
xor
mov
sub
inc
mov
daa
and
stc
jae
hlt
fwait
hlt
mov
test
stos
sub
insl
jge
xor
test
rcll
rorb
xlat
ljmp
xlat
mov
push
add
adc
pop
cmp
sbb
sbb
ret
in
shl
das
xor
mov
mov
or
xor
or
sti
sub
push
mov
popa
xor
inc
sbb
dec
gs
repnz
pusha
xchg
push
call
sbb
jae
ja
gs
scas
inc
ss
dec
inc
je
pop
stos
push
pop
lea
and
lods
mov
or
outsl
dec
mov
or
ss
cli
inc
mov
pop
and
lods
xchg
push
in
sbb
jo
outsb
jle
sbb
mov
shll
ret
xorb
fdivp
ljmp
cmp
and
psubusw
pop
jg
jnp
mov
out
mov
subl
add
push
dec
out
push
push
xchg
nop
shrb
mov
shl
xor
cli
in
inc
adc
rcll
add
fisubrs
aam
call
jb
add
cmp
cmp
lret
sbb
add
xlat
jmp
icebp
adcl
jnp
xchg
xchg
popa
in
lret
add
popa
push
lea
inc
rcrb
lret
pop
pop
ficompl
cmp
lds
leave
xor
repz
xchg
push
sarl
jge
add
repz
and
test
dec
add
addr16
cmp
dec
add
inc
lret
rorl
pop
imul
int3
scas
mov
loop
stos
push
jbe
mov
mov
leave
or
out
cmp
mov
repz
shll
nop
arpl
xchg
mov
popa
shr
push
lcall
daa
test
dec
cmp
pusha
xor
xorl
bnd
push
jb
xor
fsts
sbb
jmp
cmp
pop
shl
jbe
in
mov
cmp
mov
xchg
sbb
movsl
ret
inc
pop
nop
inc
xchg
les
xchg
pushf
aad
cli
cmpsb
std
sbb
push
push
mov
mov
xchg
fcomip
out
push
cmp
adc
jg
mov
add
dec
rorl
sbb
xchg
xchg
fsubr
jle
je
iret
pop
std
mov
mov
mov
out
addr16
into
pxor
xor
sbb
sbb
jnp
fdivrp
dec
lds
xor
mov
fnsetpm(287
insb
sub
push
jo
mov
lock
ffree
icebp
rorl
push
lods
sub
cs
cmpsb
std
sub
loope
add
or
lret
dec
sbb
sahf
aas
mov
add
dec
pop
es
arpl
jno
adc
ret
xor
mov
frstor
xchg
xor
push
fnclex
fstpl
ljmp
rolb
lds
out
cmp
int
into
decb
pop
pop
pop
jo
cmpsb
divb
cmc
scas
push
sub
or
add
out
sbb
cltd
lret
mov
push
xor
push
or
mov
cmp
sbb
cwtl
call
add
pop
out
push
inc
lahf
jne
ljmp
xchg
stos
int
xor
adc
cmpsb
jmp
or
je
push
or
call
sbb
mov
shrb
into
and
sub
gs
pop
sbbl
lea
cs
shlb
xchg
aaa
mov
repz
sbb
xchg
stos
or
roll
add
adcb
arpl
faddl
jecxz
mov
bound
daa
mov
dec
roll
cmp
in
jle
aaa
mov
or
and
adc
mov
xchg
push
rclb
in
xchg
inc
dec
mov
cmp
shl
mov
push
outsb
mov
pop
push
dec
jmp
mov
scas
sbb
repnz
xchg
or
pusha
ret
jecxz
add
xor
fs
test
push
cmpsl
xlat
xchg
jne
sub
push
sub
pop
sbb
xor
rcr
dec
add
std
popf
cmp
fbstp
pop
xor
dec
aas
pop
in
insl
add
test
mov
imul
sti
xchg
jnp
fwait
outsb
clc
cmp
push
inc
in
or
outsb
add
and
jmp
dec
outsb
cmc
or
out
inc
xor
pushf
adc
mov
movsb
rcrb
jne
loopne
orl
sub
jo
lcall
jno
xchg
mov
add
ficoms
and
mov
insl
mov
cmp
mov
loope
sub
cwtl
frstor
and
adc
scas
pusha
mov
inc
cmpsb
jbe
repnz
inc
test
in
mov
cmpsl
cmpsl
fistpll
mov
mov
jae
sub
mov
dec
add
roll
mov
mov
leave
leave
dec
xor
gs
jecxz
popf
lods
mov
xor
jno
jae
fadd
or
aaa
movsl
adc
sbb
into
test
fildl
jecxz
cs
push
imul
add
pop
adc
xlat
xor
pushf
test
add
xchg
outsl
rcrb
and
ljmp
pop
cmp
ss
ficoml
scas
mov
jne
popf
fisubrl
sahf
imull
or
idiv
sub
rorl
jl
jnp
jae
mov
jnp
push
in
lods
xor
adc
or
pop
ja
ja
adc
cmp
fsubrs
scas
push
push
jg
add
mov
lahf
out
or
mov
push
dec
lods
adc
gs
push
cld
push
jae
repz
or
std
mov
ret
push
add
leave
push
push
testl
jmp
push
popa
into
xchg
adc
push
adc
adc
add
cwtl
or
rol
pop
xchg
jbe,pn
movsl
shlb
cwtl
adc
mov
dec
mov
mov
ret
inc
xchg
adc
movsl
out
test
cwtl
jno
ficomps
mov
sub
pop
sbb
jne
movsb
and
add
xchg
pushf
pop
repnz
scas
jl
out
or
and
mov
xor
cltd
out
stos
mov
shlb
xlat
das
dec
add
faddl
xor
pop
pop
dec
push
aas
stc
push
pop
mov
fbstp
ficompl
bound
mov
mov
jge
sbbl
mov
jge
js
hlt
and
add
push
insl
pop
sbb
fldenv
xchg
sbb
nop
repz
jne
enter
xor
fnstsw
sbb
adc
incb
lret
sbb
jp
dec
adc
int
loop
ds
daa
imul
push
insl
scas
pop
insl
jmp
lods
test
shrb
fildl
je
and
xchg
adc
xchg
lods
or
loopew
imul
jns
or
mov
pop
loope
xor
xor
xor
jmp
lock
add
cltd
dec
mov
pop
lods
mov
lcall
sbb
lock
std
adc
iret
sbb
push
cltd
jns
jmp
cmp
push
mov
int3
rolb
imul
jg
mov
negl
mov
xor
add
push
insb
xlat
ficoms
lock
jmp
loop
rolb
test
sti
pop
fwait
jle
jbe
repz
xor
popf
inc
cmp
enter
out
jbe
enter
adc
shll
jp
imul
sub
iret
rolb
sahf
and
lcall
sub
lret
sub
and
je
push
and
in
or
gs
dec
repnz
push
andl
insb
add
jl
cmp
cmp
clc
inc
mov
jae
xor
dec
cmp
in
cli
js
mov
mov
lret
fucomi
push
or
pop
jbe
xchg
data16
and
inc
fbld
shll
cmpsb
mov
add
aaa
cli
inc
icebp
mov
push
out
and
xchg
sub
in
push
lcall
pop
pop
clc
bound
mov
dec
jmp
mov
addr16
pop
shlb
adc
add
imul
test
icebp
ja
mov
rclb
lock
cmp
add
jo
fbld
mov
movsl
jbe
nop
xchg
test
ds
sub
sahf
outsl
cmp
cmpsl
repnz
lods
mov
cmp
or
lahf
in
js
int
mov
pop
aam
rorb
pop
mov
rolb
lods
sahf
loope
jnp
mov
fucomp
lods
adc
outsl
jae
xchg
xchg
mov
loope
js
adcl
outsb
scas
cli
xchg
adc
push
out
fwait
repz
sti
daa
ret
mov
jp
fisubrl
cmp
daa
inc
das
xlat
cli
inc
and
cmp
mov
les
cmpb
pop
cmp
pop
add
jbe
jae
mov
gs
pushf
test
hlt
mov
fidivl
push
sub
sbb
jbe
cs
sar
out
sahf
sub
int
stc
xor
push
out
fdivrp
scas
pop
addl
inc
dec
pop
push
arpl
add
mov
clc
addb
dec
jmp
clc
dec
repnz
sbb
nop
dec
mov
pop
jo
icebp
and
gs
popa
dec
es
lock
loopne
nop
xchg
adc
scas
mov
repnz
jns
cmp
repnz
fidivs
out
shlb
jne
xchg
pop
push
icebp
dec
test
cmpsb
mov
mov
xor
popa
xchg
cmp
xor
cmpsb
add
mov
daa
in
insl
mov
loope
inc
loop
cmovne
dec
mov
fimuls
sub
fcoms
dec
xor
jb
outsb
into
stos
pop
rcr
lods
sbb
cld
mov
lahf
lahf
xor
mov
push
loopne
icebp
xor
dec
inc
cmp
negb
dec
std
inc
inc
stos
test
hlt
mov
sbb
inc
aaa
pop
out
sarl
sub
rcr
sbb
insl
popa
mov
loope
xchg
aam
sub
inc
sbb
cmc
icebp
iret
push
imull
pushf
jne
cmpsl
xchg
repz
mov
ja
cwtl
arpl
cld
addr16
out
inc
orl
fucomip
fildll
pop
pusha
dec
jg
mov
rcrl
gs
sar
pop
lds
jg
ja
sbb
or
push
sahf
pusha
sbb
pop
stos
arpl
xchg
movl
xchg
popf
shrb
test
add
push
pop
mov
into
xchg
rclb
cmp
sub
mov
lret
mov
shll
or
mov
jae
test
or
sbbb
fisttpll
or
lret
mov
fmulp
ljmp
inc
mov
cmpsb
nop
repz
outsl
lahf
or
loopnew
jns
arpl
out
jno
jns
mov
int
test
jle
xchg
sbb
sub
mov
pop
das
pop
lret
or
sub
outsb
add
and
sbb
das
sbb
adc
push
scas
outsl
insb
mov
xor
sbb
ret
cmp
cmp
repz
lahf
dec
mov
loopne
push
imulb
push
pop
mov
or
cmpsb
mov
xor
or
inc
mov
sarb
fs
addr16
or
adc
and
aam
xchg
andl
subb
mov
pop
inc
in
sbb
testl
cs
test
subl
mov
adc
ss
int3
pop
das
das
fsubrp
sbb
dec
loopne
xlat
jbe
xor
push
push
cmp
xor
xchg
jnp
sbb
insb
popl
enter
mov
sbb
sti
jg
push
jl
imul
adc
mov
lock
cltd
into
xorb
dec
lods
fstpl
dec
pop
and
shl
xor
lret
dec
cwtl
fs
dec
gs
repnz
ljmp
dec
dec
xchg
outsl
mov
movb
dec
mov
pop
lods
lods
xchg
pop
dec
inc
mov
lea
test
loop
push
shrb
sub
inc
cmpsl
push
xchg
das
lods
jo
data16
push
std
inc
repnz
and
mov
xor
out
xlat
clc
std
movsl
ror
jg
mov
out
sub
push
mov
aaa
test
xor
mov
fsubrs
sub
sub
adc
sub
inc
mov
and
add
popf
sbb
adc
out
jmp
push
testb
or
push
clc
test
filds
movl
pop
fdivrl
loope
je
and
loop
lcall
hlt
xor
fstps
cwtl
lea
out
sbb
sti
scas
andl
fmull
fcoml
fdivrp
lret
std
push
cli
outsl
sbb
sub
mov
sbb
out
aad
xor
sbb
pop
or
rol
adc
ja
sub
push
pop
or
adc
out
cmp
lret
pop
stos
cld
pop
xor
out
xor
int3
jbe
repz
add
lods
stc
lret
inc
and
and
fidivrl
xor
aad
inc
test
mov
js
cmp
push
out
or
pop
nop
push
scas
shlb
pop
pop
sub
mov
cs
mov
inc
push
push
out
sarl
cltd
inc
mov
mov
andb
and
adc
fidivrl
sub
mov
jge
xor
cli
iret
lret
sub
stc
fsts
loope
xchg
fildl
fwait
in
jp
testb
outsb
and
ljmp
mov
adc
inc
jl
mov
and
test
jb
push
xchg
inc
push
imul
out
mov
or
sub
jb
xchg
int3
and
and
lahf
jp
dec
andb
push
push
adc
lret
jns
jo
lods
push
cld
stc
in
xchg
mov
sub
lods
ret
or
and
xor
lods
leave
shll
test
repz
fndisi(8087
mov
push
mov
jle
notl
push
nop
ss
xchg
jecxz
cli
push
xorb
ficomps
shrb
pop
stc
shlb
mulb
sarb
incb
rcrb
mov
or
and
push
sub
mov
jmp
jno
test
pop
push
scas
sbb
inc
sub
idiv
sbb
inc
inc
ljmp
dec
mov
xchg
jmp
popf
lea
addb
push
add
sub
addr16
mov
mov
cmp
fcomps
mov
addr16
loop
add
int
push
and
push
mov
sbbl
mov
in
adc
lahf
cmpsl
scas
les
push
mov
inc
sarl
mov
subl
cli
filds
mov
and
mov
cmp
pusha
enter
adc
and
cli
cwtl
mov
mov
cmpsl
sbb
jg
ljmp
in
push
test
or
daa
push
jmp
mov
rclb
adc
sbb
push
mov
dec
lds
sub
loop
mov
mov
das
imul
out
mov
sbb
ss
mov
bound
dec
scas
insb
jnp
gs
lahf
das
xchg
es
adc
xchg
loopne
push
into
sub
pop
loopne
out
leave
shll
cmp
je
and
adc
pop
test
mulb
std
loopne
mov
std
aas
cwtl
mov
inc
lret
mov
jb
out
jle
jl
sbb
pushf
int3
and
jle
dec
jns
inc
xchg
adc
and
out
dec
imul
aad
fidivs
cs
setl
dec
sub
lcall
cli
fsubrs
sub
sub
jg
repz
mov
cs
push
adc
sub
push
ljmp
mov
clc
mov
aam
sarb
mov
xorl
xor
adc
mov
or
mov
push
ja
push
mov
sub
nop
mov
jno
stc
jns
add
mov
into
jle
jo
lods
sbb
push
push
add
lods
mov
push
lcall
pop
or
cmp
outsl
add
es
and
fs
mov
gs
xchg
out
mov
mov
xchg
sub
inc
adc
inc
mov
aad
push
inc
pop
mov
push
shl
icebp
push
movsb
dec
cmp
inc
dec
test
out
dec
stc
fnstcw
fiadds
push
pushf
mov
cli
lea
repz
cmp
mov
pushl
sub
sub
push
imul
lahf
cld
aaa
popa
jnp
int3
std
xor
add
enter
in
pop
imul
test
jae
jp
xchg
jbe
push
mov
push
xchg
inc
daa
sahf
cmovae
xor
fnstsw
cmp
add
lahf
sub
in
pop
xor
mov
roll
enter
jb
in
sbb
int3
imul
fimuls
adc
int
xor
mov
insl
inc
xchg
push
outsb
add
jge
test
out
or
out
dec
das
mov
mov
imul
mov
cmc
stos
jle
jns
cmpsb
imul
lock
sbb
pop
dec
mov
dec
dec
dec
pop
jle
enter
mov
add
cmp
cmp
insl
sub
std
mov
test
pop
test
lea
ljmp
movl
in
sub
push
or
js
mov
cmp
jge
dec
xchg
fistpl
je
dec
lret
clc
jecxz
adc
daa
sbb
mov
loopne
xor
mov
stos
imul
addr16
dec
mov
cmpsl
lret
inc
push
xchg
sahf
push
and
out
xchg
mov
pop
sti
jae
xchg
test
mov
pop
xchg
out
rolb
jnp
xchg
xchg
loope
repz
ret
leave
cmpsb
xchg
adc
cmp
cltd
mov
cltd
gs
insl
lret
shlb
or
mov
rcll
call
leave
sahf
jne
push
pop
inc
pop
xor
icebp
jp
add
imul
pop
sahf
xchg
rcr
cmp
clc
loopne
add
divl
rcll
mov
inc
movsl
mov
xor
adcb
xchg
out
xor
in
or
jle
arpl
mov
mov
xor
imul
fistpll
xchg
rorb
cmp
out
and
jo
nop
push
in
and
adc
xchg
cli
and
cmp
inc
add
cwtl
in
aam
jecxz
sahf
not
sbb
iret
aaa
icebp
stos
push
fs
mov
jns
lock
pop
or
fnsetpm(287
sub
push
rorb
jg
nop
or
fbld
and
dec
pop
int
push
adc
xor
cmp
mov
insb
pop
jno
or
xor
fdivr
lahf
pop
add
mov
ret
std
loop
xchg
aad
lds
lret
or
sbb
adc
push
xchg
jp
xchg
sub
inc
cmovae
sub
ret
jnp
cmp
cli
xchg
ds
push
shll
sub
leave
pop
jp
fsubs
mov
js
ljmp
mov
push
cmp
in
xchg
jnp
mov
adc
pop
scas
xor
add
divb
ss
inc
xor
jg
push
stos
scas
lret
xchg
je
xor
insl
lret
jge
mov
jmp
les
popa
mov
ljmp
cmp
lret
movsb
imul
les
fnsave
dec
popa
sti
adc
call
jle
loop
pop
sbb
mov
jl
pop
sbb
daa
and
inc
fdivrl
xor
adc
xchg
cmc
hlt
xlat
adc
and
cmp
xchg
xchg
sbb
sub
add
mov
test
enter
cmp
psrld
dec
aas
jp
sahf
test
pop
and
cwtl
jns
inc
ja
fstpt
add
dec
das
jne
mov
es
bound
insb
inc
out
inc
andl
or
daa
cmp
icebp
mov
or
aas
lock
mov
loop
jecxz
or
mov
mov
dec
lds
aas
adc
aad
std
jno
inc
cmp
dec
mov
enter
jecxz
je
lea
icebp
mov
inc
aas
fstps
leave
and
cmpsb
fldcw
test
mov
add
aas
adc
int3
cmp
in
ret
imul
pop
test
ret
xor
mov
bound
adc
repnz
fcomp
sbb
sub
dec
inc
mov
rcrl
cli
and
sbb
mov
mov
cmp
mov
mov
cmc
xchg
jno,pt
fld
imul
push
sub
pop
cmpsb
mov
jb
into
jbe
clc
dec
pop
xchg
out
and
sbb
cmpsl
fs
sub
jns
dec
in
or
fadds
adc
loop
pop
cmp
rorb
lods
fwait
inc
push
sbb
push
in
movsl
cwtl
xorl
imul
sbb
test
pushf
add
pop
adc
push
iret
lds
xor
lock
adc
call
jns
pop
cmp
loopne
cmp
cli
jbe
or
push
ja
imul
hlt
and
ds
arpl
aaa
mov
cmovns
ss
jle
sahf
icebp
cmp
mov
rclb
test
stos
pop
out
aam
cmp
ds
sbb
xchg
out
rclb
dec
fcoml
pop
lcall
fbld
gs
fucomip
loopne
inc
push
cmp
imul
jne
lcall
ja
push
test
movsb
fcomps
jnp
or
hlt
add
cmp
dec
shl
lret
mov
and
outsb
rcll
mov
push
cmp
cmp
sub
push
sbb
jo
bound
test
xchg
fisttpll
lods
jle
bound
aaa
loopne
jp,pn
jle
pop
loopne
cltd
jo
push
fwait
xor
jle
add
push
data16
jo
call
cmp
jp
cmp
sbb
jge
ds
mov
xchg
xchg
loopne
cmp
lahf
jnp
data16
cltd
aaa
data16
clc
shlb
insb
fmul
cwtl
and
and
sbb
aam
lret
frstor
lahf
mov
ss
adc
push
fdivrs
inc
jno
lret
mov
div
mov
cmp
mov
lods
call
mov
jno
jg
sbbl
call
adc
bound
push
or
cltd
add
sub
xor
xchg
xor
add
push
lds
lret
hlt
sub
cmc
pushf
mov
pop
aam
in
and
cmpsl
jo
sbb
jmp
jecxz
ds
popa
sub
movl
adc
add
icebp
fs
stc
mov
xchg
xchg
inc
scas
push
add
and
nop
into
sub
test
mov
sti
pop
xor
subb
xchg
in
in
sbb
inc
mov
cwtl
or
xorl
sti
lcall
inc
and
adc
pop
jns
add
mov
adc
mov
les
sub
inc
cmp
movsb
sbb
push
xchg
adc
bound
popa
jl
orl
inc
mov
nop
pop
mov
xchg
adc
das
lahf
mov
addr16
in
lods
dec
pop
cwtl
jl
dec
lds
movsb
dec
inc
int
dec
popf
inc
in
stos
imul
std
stos
sub
cmp
jno
call
dec
mov
pop
ds
ja
jge
mov
loope
out
mov
cld
jmp
mov
adc
sarl
xchg
mov
xchg
dec
add
shll
fsubrl
sti
mov
pop
daa
pop
cld
arpl
cmp
addl
adc
ficoms
es
call
incl
sarb
mov
xchg
and
lods
ret
mov
imul
lret
in
inc
add
sub
add
mov
inc
in
wbinvd
xor
jmp
mov
add
jbe
mov
adc
test
jecxz
cmp
mov
sub
adc
adc
mov
sbb
mov
mov
test
mov
ficoms
cli
rcr
sub
clc
jb
rcl
push
dec
enter
xchg
xor
mov
testb
xchg
adc
lods
lds
imul
mov
insl
sbb
push
xor
or
add
shll
movsl
jg
inc
xor
xchg
das
add
adc
lds
test
outsl
mov
test
scas
mov
aam
and
pop
jne
dec
mov
je
in
and
adc
dec
sbb
mov
inc
data16
mov
fs
mov
test
sbb
int
popf
xchg
pop
daa
xchg
xchg
je
out
mov
nop
ficoml
sub
int
inc
push
add
pop
or
jle
mov
scas
jbe
cmpsb
mov
push
sub
sub
loop
scas
gs
and
sbb
scas
mov
push
mov
out
std
orl
sub
or
and
js
leave
lock
les
in
loope
inc
xchg
mov
imul
jb
add
lds
stos
ss
jo
add
xor
cmp
sub
dec
loopne
gs
inc
fucomip
jge
sti
mov
fidivrl
jo
pop
frstor
pop
nop
add
inc
les
pop
xchg
movsb
psrlq
or
iret
lret
outsb
add
pop
mov
mov
adc
mov
sti
mov
aam
or
movl
in
aad
push
add
jecxz
pop
adcl
jno
and
lods
cwtl
mov
rorl
cmpsb
mov
fstpt
iret
fcmovne
push
mov
movsl
mov
in
fildll
sbb
imul
inc
xchg
sbb
cmc
dec
cs
rorl
adc
inc
daa
stc
lea
inc
shl
in
and
out
or
ljmp
mov
scas
mov
mov
int
inc
out
cmpsb
mov
addr16
aas
sbb
repz
enter
inc
pop
ljmp
ljmp
popa
fisubrl
push
mov
or
sbbb
fisubrl
and
mov
lds
mov
rcrb
cmp
dec
mov
arpl
jge,pn
push
loopne
mov
icebp
add
cmp
sbb
mov
jo
sub
sub
mov
nop
movsb
lret
jnp
and
cwtl
sub
mov
rorl
rcrb
jge
aad
sahf
mov
ss
xchg
in
xor
out
mov
add
sbb
bound
rcll
pusha
mov
dec
cmp
mov
fists
iret
cmc
sub
addb
pop
test
jnp
ret
push
stc
add
pop
cmp
inc
fucom
fdivl
add
cmpsl
xchg
xchg
addr16
cmp
cmc
repnz
mov
add
xchg
adc
sub
cmp
repz
ljmp
aam
add
cmpsb
mov
fisttpl
xchg
mov
adc
mov
push
cmp
sub
rcl
loop
fisubrl
mov
jmp
jno,pt
add
xchg
in
push
mov
jns
shlb
xchg
dec
fsubl
in
xchg
inc
pop
xchg
gs
adc
jno
pop
scas
std
xchg
mov
jno
je
sbb
in
push
mov
testb
dec
inc
stc
mul
addb
into
les
iret
lds
adc
dec
push
xchg
cmp
cmp
xor
pop
add
add
lcall
in
add
aad
cwtl
mov
mov
push
sub
pop
adc
lea
cmp
mov
pop
mov
mov
xchg
or
or
mov
stos
xchg
dec
movsb
sub
addr16
add
daa
scas
int
xor
lea
divl
lods
push
or
icebp
pop
ja
daa
inc
mov
loopne
or
sahf
sbbb
inc
xchg
sbb
cmpb
fnstsw
data16
mov
lea
insb
test
rorb
cmc
fwait
cmp
jae
push
push
sahf
outsb
lahf
or
mov
sub
add
clc
adc
test
xchg
jl
and
fs
setno
and
sbb
arpl
in
roll
inc
push
fistps
and
clc
cwtl
nop
pop
push
pusha
out
xor
inc
jp
push
push
fisubrs
stc
jo
jne
cmpsl
fldpi
jnp
mov
lods
test
sarl
ljmp
insb
aas
sub
xchg
sub
dec
jno
push
and
jae
sub
mov
stc
inc
rclb
jle
xchg
les
cwtl
lret
ret
in
sarb
stos
fldt
sbb
sbb
push
fdivr
icebp
out
inc
ljmp
jge
jno
mov
mov
in
int3
jo
ss
jge
loop
or
dec
cltd
or
mov
or
lods
inc
push
or
and
es
cmp
dec
clc
test
shll
sbb
sbb
fdivrs
and
push
mov
inc
push
pop
jno
dec
jnp
lds
lret
jle
test
cwtl
outsl
mov
and
sbb
std
movsl
cmp
mov
adc
shl
push
cmp
mov
mov
sbb
in
add
mov
jns
sbb
das
pop
adc
mov
lock
icebp
shlb
js
lds
mov
xlat
ret
scas
inc
dec
fwait
stos
mov
fcmovnb
add
xchg
imul
sarb
roll
xchg
push
test
or
xlat
cmpsb
leave
jo
int
pushl
fldenv
movsl
daa
mov
xchg
sbb
rcrl
scas
stos
mov
push
xchg
dec
xchg
mov
cmp
lret
sbb
jecxz
rorb
frstor
sarl
push
loop
xchg
jmp
out
push
xchg
divl
mov
call
repnz
sub
popf
xchg
inc
sub
movsb
popa
iret
repz
icebp
add
andl
sub
and
sub
and
jne
adc
mov
pop
std
or
dec
xor
fisubrs
fbld
cmc
mov
cmpsl
fmul
cmp
xor
pop
or
outsb
mov
sub
mull
mov
mov
pop
scas
dec
je
ds
mov
sub
movsl
pop
mov
or
or
mov
movsb
fsubrs
jnp
cltd
and
in
insb
push
std
mov
mov
ja
fdivrl
pop
mov
fcoml
xchg
mov
inc
mov
sbb
mov
fmull
int3
scas
xchg
ljmp
mov
push
outsl
popa
dec
and
pop
pop
pop
xor
icebp
xchg
xor
jns
lds
cs
push
pop
dec
ljmp
shl
fistps
dec
jecxz
lret
add
icebp
mov
fists
sub
mov
adc
push
mov
adc
or
mov
mov
mov
pop
arpl
push
scas
mov
or
pop
sub
push
fisubrs
mov
ja
adc
dec
testl
mov
ss
cwtl
icebp
xlat
out
in
int3
push
and
fiaddl
mov
fnstsw
out
test
repz
or
repnz
xor
cltd
aam
ss
push
arpl
pop
jne
xlat
and
mov
rorl
sahf
out
imul
adc
arpl
dec
add
inc
dec
push
xor
ja
imul
repnz
cmp
add
std
divl
mov
aad
mov
xor
test
xor
mov
cmp
cld
pop
pop
cmc
inc
dec
out
jb
stos
lods
bound
sub
jnp
popf
insb
icebp
fsubrl
push
mov
xor
mov
in
push
pop
jne
and
add
xchg
shll
xchg
jb
dec
and
test
mov
in
aaa
xchg
mov
cmp
sbb
jmp
mov
push
out
dec
push
pop
pop
pop
xchg
push
jno
fucomip
inc
or
sbb
or
stos
lds
xor
pop
cmpsb
daa
add
test
sbb
mov
pop
fadd
or
test
or
cmc
inc
rorb
ja
or
sbb
mov
in
ljmp
and
es
cmp
pop
ds
and
or
push
mov
imul
pop
pop
sub
adc
xchg
in
mov
loop
cmp
sti
push
xchg
int3
push
fstl
ljmp
mov
cmpsb
leave
sbb
divb
dec
cmp
lahf
cld
test
mov
and
or
adc
idivb
xlat
ret
loopne
mov
jno
idiv
adc
shrl
jge
mov
mov
adc
outsl
sarb
into
jmp
out
mov
loop
lret
adc
scas
addr16
and
fldcw
mov
in
subb
inc
push
adc
mov
stc
push
das
imul
es
adc
cmp
add
adc
lds
jns
inc
sub
rcrl
mov
push
gs
out
add
lahf
mov
insl
jp
enter
hlt
pop
scas
xlat
loope
insb
stos
fsub
adc
mov
leave
dec
jns
jecxz
dec
lods
out
lret
inc
sti
fs
mov
div
cmpsl
sbb
mov
add
iret
jnp
int3
adc
iret
inc
pop
jb
test
and
cmp
jns
stos
loop
mov
xchg
in
mov
ljmp
adc
xor
test
jle
lds
push
cmpsb
jne
aam
repnz
out
push
mov
cli
push
inc
xor
loopne
mov
icebp
push
jp
loope
dec
rorb
jns
in
fidivrs
movsb
pop
dec
sub
jmp
sub
out
aad
mov
jb
sbb
aaa
xor
arpl
ret
fdivs
push
loopne
insl
dec
test
fcomi
push
inc
and
test
in
int3
dec
xor
popa
pushf
mov
int
cmp
icebp
inc
and
ds
xchg
mov
xchg
push
dec
push
movsb
pop
xchg
dec
xor
push
inc
dec
jns
enter
rcrl
pop
jne
xor
xchg
fcmovnu
into
push
lods
pop
lods
xchg
into
adc
scas
and
dec
int
test
jecxz
adc
iret
ljmp
push
or
push
ss
scas
push
popf
out
pop
mov
pop
pop
pop
xor
les
or
cmp
mov
or
mov
lcall
jmp
sub
aam
cld
sbb
xchg
xchg
clc
inc
test
dec
ret
xchg
mov
jne
enter
mov
sub
mov
xor
rcll
sbb
cli
les
mov
in
lcall
loop
mov
jge
push
push
in
fadds
orb
sub
mov
test
stos
sbb
pop
adc
push
dec
inc
sahf
movsl
mov
rclb
pinsrw
and
push
shll
mov
pop
sarl
push
or
jb
outsl
xlat
inc
out
mov
jae
push
stc
leave
fbstp
or
sub
pop
test
enter
sbb
test
cltd
or
fiadds
inc
inc
sarb
loopne
mov
push
les
test
or
mov
jbe
xlat
fldenv
addr16
xchg
dec
jno
mov
cmpl
adc
add
dec
xor
lds
in
psubd
push
test
scas
lods
out
lds
data16
int
and
sub
imul
daa
mov
push
call
clc
jae
popl
popa
xor
in
or
mov
cmpsl
adc
iret
push
out
dec
inc
cmp
and
sbb
push
cwtl
loop
or
jns
in
loopne
add
bound
inc
sbb
and
mov
out
in
aad
dec
sahf
cmp
lahf
pop
push
daa
push
movsl
ss
sarl
test
rolb
ret
outsl
insl
xor
insb
divb
dec
clc
lock
fldcw
and
nop
lods
dec
pop
popa
stc
mov
rcrl
hlt
xchg
jmp
xchg
imul
lock
xchg
aas
mov
das
cmp
dec
mov
pop
repz
into
jb
mov
xchg
loop
ds
inc
mov
mov
jp
lret
cli
adc
ret
sahf
or
pop
cwtl
lock
xchg
int
loop
mov
push
lock
leave
cmp
pop
mov
jb
push
adc
xor
stc
aas
movsb
or
cwtl
sbb
add
ljmp
jae
pop
dec
adc
rorl
xor
outsl
lds
filds
push
dec
outsl
icebp
ljmp
cmp
push
leave
sub
push
mov
je
fsubr
cmc
or
int
xor
stos
sub
aad
lcall
mov
fldenv
aam
outsl
cld
aaa
xor
lock
lret
mov
leave
inc
lret
repz
or
pop
jne
cmp
shrl
shlb
mov
pop
loop
ds
mov
mov
out
sahf
xchg
adc
cmc
push
pop
stc
sub
std
mov
xchg
iret
sahf
repnz
cmpl
sub
push
jae
popa
push
dec
outsl
dec
cmp
stos
or
sar
outsl
cli
fnsave
in
sbb
xchg
cld
push
pop
in
and
ret
ror
movsl
in
loopne
mov
xchg
shll
rcll
loope
bound
cltd
flds
sbb
add
add
inc
push
pop
or
pop
jge
dec
cltd
jno
mov
bound
lods
inc
js
xchg
rolb
mov
and
adc
xchg
and
into
lds
mov
pop
mov
out
mov
inc
xor
inc
push
shll
dec
fs
nop
or
ficomps
push
pop
adc
jmp
in
in
xchg
arpl
xchg
mov
xor
jle
ljmp
rcll
mov
or
push
mov
or
and
out
push
push
stos
jg
lahf
xor
call
xchg
mov
aas
cmpsb
lcall
push
movsl
insb
in
hlt
add
test
and
mov
xchg
pop
mov
addb
dec
test
mov
outsb
cmpb
out
adc
push
dec
inc
xor
sub
mov
ret
sub
xchg
dec
adc
dec
lahf
insb
add
or
jns
push
mov
mov
cltd
adc
push
lret
add
test
pop
int
lahf
mov
outsl
ja
pop
dec
lret
add
adc
mov
lahf
and
jl
mov
or
mov
mov
or
scas
xchg
in
mov
stc
inc
and
jl
pop
add
sub
popf
std
cmp
push
lret
lret
outsb
cmp
test
push
test
pop
in
decb
mov
push
out
mov
adc
out
pop
pop
dec
lret
sbb
js
dec
mov
inc
xchg
xorb
jne
inc
ret
or
pop
lret
cmpsl
fsubs
sti
stos
cltd
mov
mov
popf
lods
mov
mov
xlat
dec
sarb
imul
loopne
add
cmpsb
xchg
and
insb
mov
arpl
ja
xor
aaa
mov
push
stos
mov
nop
jge
ja
dec
ja
rorb
das
arpl
aad
pop
fcmovu
stc
jp
lea
lcall
mov
scas
lea
cmc
bound
popa
dec
ds
xlat
and
test
iret
fisttpl
addb
in
sbb
bound
dec
mov
stos
ret
decl
xchg
mov
mov
mov
enter
aad
cli
fmull
cmp
cmc
ret
mov
or
sbb
into
insb
mov
adc
pop
es
dec
scas
xor
or
pop
in
fdivrs
xor
xchg
mov
and
jns
repz
arpl
jecxz
push
dec
dec
stc
loopne
cmc
fcmovnu
mov
sarb
hlt
lret
ret
adc
and
jmp
dec
and
iret
mov
jecxz
pusha
insl
mov
pop
mov
lods
es
add
scas
mov
fsubrl
rcrb
jp
arpl
sbb
mov
pop
mov
mov
adc
inc
enter
or
and
mov
pop
jecxz
pushf
inc
and
adc
mov
xchg
cmp
imul
mov
ja
fstpl
push
push
mov
mov
and
std
fsubl
pop
sub
movntps
in
xchg
mov
aaa
ret
lret
sub
das
or
cltd
dec
adc
or
sub
bnd
mov
push
inc
dec
push
dec
push
int3
add
addb
repnz
inc
cmp
or
stc
sbb
add
sti
mov
shrl
push
lods
mov
sbb
lret
inc
sub
mov
xchg
aad
cmp
lds
add
push
or
or
pop
jo
sub
push
mov
lahf
outsl
push
popa
in
and
cmp
dec
jno
push
in
pop
fadds
adc
pusha
daa
adc
sub
dec
int
fbstp
test
adc
sub
lahf
and
loopne
or
mov
rcr
shlb
leave
add
jae
dec
sti
push
xchg
push
nop
mov
lahf
inc
test
xchg
jecxz
inc
insb
lods
pushf
lahf
xor
mov
insb
movsb
xchg
test
das
divl
and
mov
outsb
inc
cld
pop
inc
movsl
add
mov
arpl
push
jle
test
adc
cmp
lods
gs
in
subb
notb
lcall
sbb
lock
mov
test
sub
movsl
sti
pop
faddp
and
movsl
mov
sub
or
jg
fcom
add
inc
popa
jns
pop
fs
ljmp
mov
jno
fcmove
jb
js
cltd
shll
je
inc
int3
loope
sbb
xchg
pusha
lret
out
in
pop
pop
sub
pop
ds
loope
adc
test
cs
sub
jb
push
cltd
cmpl
add
out
jg
or
cmp
push
aam
or
jne
flds
lret
dec
jb
adc
push
jns
cmpl
mov
sub
cmp
dec
das
mov
movsl
push
cmp
in
push
pushf
lret
mov
fsts
mov
or
jo
js
ds
fstl
dec
pop
test
xchg
jge
fwait
inc
jns
es
mov
in
fldl
jle
lcall
push
stos
popw
jmp
mov
popa
mov
mov
imul
cmp
loop
xchg
dec
jno
pop
inc
in
clc
fwait
jbe
fbld
fwait
add
sub
jp
test
mov
scas
out
xor
adcl
repnz
int
mov
das
sti
and
cmpsl
lods
cmp
xchg
mov
and
cmpsl
xchg
sbb
xchg
push
jno
jbe
sbb
inc
lcall
xchg
push
or
and
and
push
pop
pop
roll
call
subl
xchg
mov
mov
lea
jo
push
aas
xor
mov
pop
bound
xchg
dec
gs
test
mov
test
jp
fisubrs
je
and
or
lahf
aam
pop
js
cmp
icebp
xchg
mov
jle
repnz
or
imul
and
adc
mov
ja
js
arpl
adc
and
jp
repz
mov
push
pop
inc
rcrl
rcrb
in
ret
cmp
jecxz
inc
sahf
insl
clc
lahf
loop
pop
sbb
sub
mov
jae
imul
or
mov
push
nop
jl
pop
in
and
xorb
nop
pop
dec
cmp
jno
jo
sbb
adc
loop
xorl
sti
lahf
xor
imull
testb
add
aas
jle
adc
loope
and
lahf
les
test
loop
loop
mov
dec
mov
add
out
cmp
fwait
ret
incl
out
stos
sbb
lock
dec
pop
outsl
sub
clc
dec
fistpl
int3
outsl
mov
pop
add
jmp
test
fwait
test
cld
loope
dec
shll
and
inc
mov
inc
std
test
insl
arpl
ljmp
cs
xchg
dec
sbb
adc
mov
fmul
stos
mov
push
pop
push
ficomps
sbb
out
das
inc
cmp
add
mov
jns
mov
loopne
imul
imul
lret
cmp
dec
mov
outsl
js
cli
jo
paddusw
fsubrl
fsubrp
divb
add
or
js
out
inc
pop
int3
fstpt
sahf
push
xor
into
push
mov
xchg
mov
push
leave
cmp
adc
pop
xor
dec
fs
sbb
cltd
inc
aam
leave
or
popf
mov
nop
mov
mov
cli
enter
inc
dec
cld
mov
push
test
add
es
xor
mov
pop
jae
xor
mov
dec
adc
aaa
scas
push
add
dec
jae
ds
add
push
xchg
mov
fidivrl
or
xchg
pusha
or
sbb
mov
inc
mov
push
inc
sbb
loope
mov
inc
outsl
sbb
js
mov
xchg
cmpsb
cmc
pop
pop
imul
cmp
mov
sbb
sbb
push
cmpsl
dec
cmpsl
cmp
aad
push
mov
lahf
addb
fdivrl
jle
stos
mov
pop
push
adcb
jnp
jle
in
and
mov
mov
mov
mov
aam
fistl
jecxz
push
inc
lods
leave
enter
cmp
inc
iret
or
pop
mov
xor
into
outsb
aam
or
pop
pop
mov
test
div
fcmovne
inc
leave
mov
mov
popl
inc
sub
pop
pop
or
jno
lods
std
hlt
add
xor
fmull
or
push
outsb
mov
push
jne
push
mov
inc
in
push
inc
push
loop
push
loopne
cmc
sub
movsb
lods
in
out
lods
and
jmp
sub
dec
inc
jnp
rcrb
or
adc
lret
cmpsb
test
xchg
leave
lock
dec
imul
mov
movsb
fwait
or
push
jp
out
mov
andb
pop
cmpsl
add
popf
inc
dec
xchg
lods
out
je
ljmp
movw
mov
gs
fimuls
call
mov
shrl
cmc
or
or
dec
enter
sbb
dec
add
cmp
sbb
mov
stc
mov
push
sbb
fbstp
mov
imul
out
icebp
bound
xor
lahf
imul
ret
inc
das
mov
mov
push
inc
pop
ljmp
lcall
out
xchg
sbb
out
add
test
mov
imul
out
adc
push
jmp
add
ljmp
loope
xchg
fwait
stos
and
lock
pop
xchg
mov
js
in
lock
mov
out
xorb
es
adc
inc
or
pop
fidivl
fwait
int3
mov
outsb
lret
mov
daa
ficoms
rdpmc
adc
insb
lcall
sub
xchg
les
aad
cmp
jns
pop
sbb
loope
movsl
xor
insb
scas
lds
dec
inc
fistpll
sub
mov
insb
in
fwait
jge
xor
sti
sub
sahf
shll
imul
cld
adc
add
mov
jb
cltd
test
loop
mov
dec
adc
aad
scas
add
bound
scas
cmp
mov
enter
jae
stos
test
jg
mov
dec
sarl
or
aad
push
inc
lcall
jb
aad
and
jne
cmc
dec
add
in
fisubs
pop
jl
arpl
fs
xchg
outsl
test
mov
mov
pop
cwtl
push
cmp
rolb
mov
add
sbb
repnz
adc
sahf
add
mov
stos
popa
pop
inc
add
mov
push
scas
inc
pop
ljmp
cltd
out
add
loopne
movb
jp
int
cmpsl
xchg
sarl
fidivs
sbb
cmp
xor
imul
nop
enter
pushf
mov
cmp
xor
jno
fnstenv
scas
push
dec
fst
xchg
int3
mov
adc
add
cmpsb
pop
arpl
xchg
and
mov
inc
bound
repz
push
push
dec
aas
inc
sbb
nop
pop
xor
xchg
add
and
pop
flds
sbb
sar
sub
fmuls
sub
popf
mov
pop
data16
jns
push
ds
mov
push
in
cwtl
push
mov
or
ds
mov
vsubss
movsb
dec
pop
xor
adc
sar
packsswb
insl
jp
imul
fcmovne
lock
or
inc
jae
dec
cmp
dec
pop
and
sahf
and
lock
popa
stos
cltd
rorb
mov
pop
das
mov
iret
test
and
or
mov
lock
inc
es
dec
mov
shrb
out
cmp
js
jb
aad
push
ja
or
pop
cmc
leave
jae
fwait
mov
push
imul
mov
xor
ret
test
in
pop
adcl
and
mov
xlat
adc
and
sbb
insl
xchg
add
xor
ss
in
ficomps
cmp
push
xor
pop
test
mov
movsl
mov
sub
pushl
mov
flds
and
jge
popa
int
jno
test
or
pop
jp
leave
mov
sarb
int
fwait
out
cmpsb
jp
adc
inc
fwait
pop
push
mov
push
popf
testb
xor
pop
in
add
inc
ja
test
xchg
rsqrtps
cltd
loopne
add
movsb
mov
mov
cmpsb
out
sub
mov
jle
mov
dec
pop
out
pop
scas
pop
inc
lahf
push
idivb
push
push
lods
leave
adc
outsl
pop
enter
cli
add
lods
add
es
inc
fwait
cmp
push
out
lret
in
test
rorl
movsl
in
jg
ja
and
dec
sub
cwtl
mov
xchg
cmpb
shll
rcrb
shlb
adc
nop
js
push
fmull
int
push
pop
jno
movb
mov
nop
adc
xchg
sub
out
or
and
movsb
sbb
pushf
fdivrs
in
mov
add
pop
push
test
xchg
or
lods
loope
fimuls
out
xchg
les
mov
shl
cmpl
mov
and
aam
add
cwtl
imul
xchg
xor
pop
jb
sahf
out
adc
mov
jo
lock
popa
into
mov
movsb
pop
out
test
pop
das
jb
cltd
out
jmp
mov
popf
fimuls
mov
jp
aam
xchg
bound
pop
sahf
testl
mov
sbb
push
into
adc
add
test
dec
call
loop
lcall
shlb
rol
xchg
movsb
inc
pop
dec
aam
mov
mov
cmc
rcr
and
je
xchg
and
xchg
adc
and
mov
pop
std
push
fists
popa
and
push
sub
cmpsl
jns
in
je
shr
stc
xor
test
lds
std
loop
xchg
push
cmp
add
jbe
dec
pop
adc
idivl
jmp
cmp
cs
push
xchg
lret
bound
std
jp
insl
or
jmp
icebp
and
fnstenv
cmpl
sahf
je
mov
ret
hlt
imul
cs
cmpsl
mov
into
jle
adc
addb
ret
and
sbbb
cli
aas
and
cmp
sub
cli
dec
pop
outsb
scas
incl
fcos
push
mov
cli
adc
sbb
ret
pop
push
fs
inc
pusha
hlt
or
sub
jb
negb
subl
xor
push
dec
mov
nop
dec
jecxz
repz
xchg
push
ror
movsl
jo
cmp
mov
sub
fbld
inc
arpl
adc
push
cmpsb
nop
clc
and
sbb
cs
mov
xlat
mov
xchg
subl
jl
fs
dec
movsb
jg
cmp
insb
push
lcall
jns
ror
xor
mov
push
or
lods
scas
sbb
imul
lods
mov
inc
xlat
insl
mov
add
sti
rcrl
mov
addl
addr16
mov
ja
jne
mov
lcall
or
loopne
lret
insl
loope
andl
and
or
sbb
in
lds
sbb
insl
push
pop
sbb
or
in
insl
push
add
cmp
sub
sysret
test
stos
sti
xchg
leave
mov
aaa
jbe
mov
jge
addr16
jp
popa
scas
lret
jle
add
xchg
adc
nop
pop
repz
jb
cs
out
mov
pop
mov
pop
iret
add
cmpsb
mov
iret
lcall
jnp
adc
clc
rorb
ret
inc
or
pop
xor
lock
mov
sub
adc
adc
lock
add
test
daa
cs
jbe
add
xchg
mov
repnz
lds
cmp
inc
cmc
rcpps
push
sbb
testb
les
es
inc
sarl
pop
mov
ret
pop
stos
scas
lock
push
cmp
test
gs
pop
pop
test
add
rolb
jmp
mov
adc
mov
hlt
iret
enter
inc
inc
ret
or
mov
add
cmp
loopne
clc
push
jg
xor
inc
shll
push
fistps
imul
lcall
adc
lds
shlb
js
pushf
lods
ud2
jmp
jno
sbb
sub
lds
push
sub
jbe
adc
pop
cmp
in
dec
rclb
jno
jmp
cmp
sbb
xor
jg
jmp
fadds
into
shl
cmp
jne
push
jnp
cmp
sub
xor
clc
sbb
sub
fs
dec
adc
mov
fildll
mov
ss
das
cmp
call
adc
mov
pop
cmpsl
fcomps
and
sbb
repnz
jecxz
inc
cmpsb
inc
mov
pop
jae
adc
and
inc
or
mov
inc
cld
repz
jl
cwtl
in
xor
scas
pop
daa
and
add
push
fwait
scas
xor
push
push
mov
inc
gs
adc
or
xor
cmp
imul
shll
mov
jg
test
fwait
mov
ror
in
sbb
push
mov
xlat
dec
mov
ror
outsl
js
stos
lds
in
iret
imull
jecxz
cmp
xlat
push
cs
icebp
mov
cmpsb
fstpl
clc
inc
mov
testl
push
push
aam
cwtl
cld
addl
inc
cli
test
or
out
jnp
in
cmpsb
inc
in
cld
cltd
or
lods
sub
dec
push
icebp
insb
sub
sbbl
out
pop
aad
xchg
mov
inc
jg
pop
adc
or
xchg
aam
daa
jb,pt
cltd
xor
movl
mov
out
mov
mov
cmpsb
mov
jo
fiaddl
icebp
push
clc
jle
shll
idivl
or
xchg
loope
in
and
fwait
lea
jae
or
or
lock
pop
lret
lods
cwtl
stos
enter
jg
mov
mov
xchg
push
loope
in
jmp
roll
stos
pop
js
lahf
add
stc
pushf
fcomip
std
movl
jg,pn
inc
jge
clc
ds
std
nop
call
ret
xchg
faddl
dec
cmpsb
rcll
outsb
pop
pushf
xchg
lret
out
stos
stos
jns
jmp
cmpsl
into
dec
push
insb
mov
add
fs
adc
xor
jnp
mov
cwtl
aaa
cld
out
xchg
sub
sub
xchg
filds
cmp
in
inc
mov
fadd
mov
sbb
outsl
add
add
dec
xor
in
or
fcmovbe
lock
test
jmp
stos
mov
inc
clc
adc
test
cld
negb
jne
clc
mov
mov
hlt
sbb
mov
stos
loop
test
and
loope
mov
les
es
insl
xchg
inc
arpl
flds
inc
dec
gs
insb
push
adc
movsl
inc
loopne
inc
out
and
cmp
sub
adc
pop
xchg
sti
mov
jecxz
mov
xchg
pusha
jl
out
jmp
sub
inc
or
movsl
daa
sahf
jo
mov
mov
pusha
xor
pushf
ss
outsl
and
es
mov
popa
mov
sub
mov
test
movsl
jmp
lods
jg
mov
xor
imul
mov
cld
xchg
and
out
out
sbb
loopne
sub
mov
and
movsl
insb
dec
aaa
push
pop
fisttpll
call
fwait
lahf
cltd
lret
sbb
mov
jb
enter
lds
jle
or
mov
outsl
cmpl
jnp
mov
mull
xchg
lret
push
pop
pop
aam
mov
ljmp
test
mov
mov
add
inc
addr16
arpl
aas
sbb
pushw
mov
dec
les
pusha
imul
js
jmp
xchg
sahf
into
dec
stc
fadds
fidivs
mov
repz
es
cmp
cmp
sti
std
fistpll
pop
sahf
std
mov
pop
roll
in
jge
iret
xor
pop
lods
std
rcrl
push
xchg
outsb
loop
ja
mov
jp
imul
pop
inc
and
and
and
mov
decl
jp
gs
outsl
inc
mov
xor
rcl
pop
pushf
out
stc
jae
sbb
icebp
mov
arpl
xchg
pop
ja
xor
jmp
adc
mov
lahf
or
insl
fdivr
push
insb
inc
pop
arpl
mov
pop
in
lret
popa
cmpsl
jbe
stc
lret
rcrl
pushf
add
int3
roll
mov
lock
int
test
xchg
push
mov
fs
cmp
or
repnz
repnz
out
mov
fidivl
mov
jle
out
enter
push
xchg
sub
push
testl
gs
xor
dec
add
fstl
dec
scas
lds
clc
xchg
lods
movb
mov
in
inc
xchg
pop
mov
jbe
mov
jne
cmp
mov
in
adc
cmp
out
sub
xor
xor
mov
cwtl
out
in
cmc
daa
mov
jl
sbb
flds
push
pop
and
and
adc
jp
push
fiadds
push
subb
cmp
dec
in
jae
inc
setno
test
ljmp
cmc
pop
test
xchg
call
sbb
nop
inc
push
popa
pop
scas
pushf
and
and
js
push
imul
add
aam
or
std
movsb
add
mov
jns
pop
jno
lahf
sub
inc
mov
dec
push
jmp
ficomps
test
or
arpl
push
movsb
test
gs
sub
sbb
fsubs
mov
lds
imul
xchg
enter
push
cwtl
inc
fstpl
adc
mov
es
dec
mov
fsubrl
outsl
icebp
movd
bound
inc
aam
push
mov
ss
mov
dec
jo
cli
xchg
jle
ret
pop
movsl
and
and
stos
cwtl
push
jb
repnz
xchg
or
add
pop
mov
mov
xchg
dec
loopne
jp
enter
mov
add
jge
mov
push
jle
xchg
inc
xor
xor
sub
imul
jae
cmp
cmp
test
gs
sbb
in
std
outsl
lahf
mov
mov
mov
pop
test
das
fisubrl
xchg
push
dec
xor
xor
sub
pop
cmp
push
lcall
xor
ja
dec
out
push
or
stos
shlb
das
sbb
int
cmp
out
mov
int
pop
push
cmp
mov
jb
data16
aam
insl
xchg
sahf
es
cmpsb
inc
mov
icebp
jl
ja
sbb
clc
loopne
dec
adc
mov
mov
icebp
jnp
test
das
mov
inc
rclb
fcomps
xor
pop
int3
mov
repnz
inc
mov
mov
aas
mov
loopne
notl
xchg
cmp
adc
push
jo
mov
mov
jmp
fucomip
or
rolb
sbb
mov
scas
mov
add
xchg
and
mov
or
and
pop
shlb
rorb
and
xor
repnz
dec
add
iret
add
sahf
scas
cmp
xchg
mov
dec
xchg
push
aad
mov
scas
or
add
flds
jo
or
mov
hlt
into
xchg
adc
cmp
sbb
sub
or
pop
lret
out
mov
xchg
ja
movsl
call
push
insl
insl
xchg
kshiftld
push
push
call
std
xchg
outsb
incl
sbb
pop
mov
mov
mov
loope
iret
in
dec
mov
mov
sub
cmp
popf
sub
xor
cmp
inc
pop
add
stos
ret
add
je
out
pusha
inc
lock
les
xchg
and
out
test
sbbl
icebp
cmc
stos
std
loope
insl
jns
int3
xchg
push
lds
xchg
and
or
pop
push
pop
adc
jecxz
inc
dec
ror
clc
and
test
lds
je
loopne
xorl
jmp
mov
dec
cmp
cld
xchg
push
dec
testl
jns
and
insb
repz
xlat
lock
xor
popf
cltd
mov
push
ret
inc
ret
je
rcll
fdivrl
sarb
lcall
xor
fldenv
push
pop
pop
test
std
push
mov
gs
pop
jns
push
xchg
push
lds
data16
pop
xor
rcl
sahf
fdivs
ds
pusha
pop
sub
and
lahf
sub
icebp
dec
repz
sub
in
cmp
shlb
sar
or
mov
jl
cmc
fmull
sti
shll
out
dec
pop
aaa
jge
ja
push
or
cli
sub
adc
mov
sbb
inc
and
inc
inc
into
ret
enter
int3
shlb
push
cmp
push
mov
ds
sub
jmp
lods
pusha
pop
mov
repnz
lods
sahf
rcrl
sbb
push
xchg
gs
mov
dec
mov
lods
cltd
push
xor
mov
in
push
push
mov
call
lock
cmp
pop
cli
fisubrl
jae
mov
movsl
vpmovmskb
dec
inc
int3
push
push
mov
add
dec
cwtl
inc
mov
in
or
sarl
push
inc
rcl
adc
dec
sub
mov
sbb
out
inc
mov
push
adc
pop
add
cs
insl
inc
pop
sub
arpl
inc
adc
dec
pusha
cmpsb
cmc
push
testl
pop
into
ret
add
xchg
cli
push
xor
jmp
push
lahf
xlat
test
les
outsb
es
stc
push
jecxz
imul
mov
cmp
ja
jbe
xchg
push
test
lods
test
call
ljmp
mov
call
cs
and
testl
dec
fisttps
insl
dec
movsl
pop
cwtl
jg
pop
mull
bswap
popa
xor
sti
push
in
lcall
cmpsb
mov
test
test
divl
sub
or
dec
add
mov
popf
push
or
imul
inc
dec
insl
sub
jne
mov
dec
sub
mov
stos
lahf
and
cmp
or
movsl
inc
shll
jmp
push
or
add
jg
mov
loope
cmp
pop
repz
es
hlt
jmp
or
stos
or
sti
cmp
dec
aaa
sbb
ds
jl
cmp
into
pop
adc
jo
sub
xor
dec
dec
repz
ss
movsl
xor
ficoml
in
sub
sti
sbb
xchg
push
outsb
xor
repz
mov
inc
dec
mov
icebp
dec
hlt
aaa
mov
dec
mov
pop
and
clc
mov
ret
inc
mov
fimull
mov
lret
stos
aaa
ror
jle
cwtl
jbe
ljmp
and
hlt
sub
scas
imul
pusha
fisubs
mov
mov
sbb
in
mov
aam
mov
mov
mov
pop
std
sub
inc
and
mov
ret
insl
fimull
mov
popa
jmp
sub
clc
xchg
roll
push
lret
jmp
out
jne
inc
adc
mov
lods
sbb
cmp
rcll
jbe
mov
nop
mov
pop
jl
cmp
out
movsb
sub
mov
jne
fmuls
xchg
xor
iret
mov
arpl
xchg
scas
pop
das
cmpsb
sub
clc
push
pop
xchg
clc
gs
add
movsl
aam
movl
stos
xchg
push
adc
pushf
aad
sub
cmpsl
mov
cmp
test
jle
inc
jo
mov
mov
enter
dec
pop
addr16
leave
aaa
mov
sub
lahf
inc
jno
jbe
inc
stos
dec
push
add
dec
sbb
or
mov
cmp
shll
mov
movsl
xlat
xlat
cmc
xchg
sahf
es
pushl
adc
enter
cmp
lds
adc
mov
fidivl
dec
jo
std
rol
mov
outsl
lods
scas
lods
loop
mov
push
das
xchg
lahf
sub
int
dec
cmp
xor
test
daa
cmp
rorl
outsl
call
insl
leave
fists
pop
sub
xor
cmp
int
loopne
bound
sbb
hlt
cli
outsl
aaa
add
or
sub
repnz
je
bound
adc
mov
cmp
ret
ljmp
sub
mov
aas
xchg
idivl
loop
les
pushf
aad
inc
mov
sub
popa
in
mov
mov
scas
jne
insb
pop
imul
push
faddp
icebp
aam
std
add
push
adc
sub
mov
and
dec
or
lahf
pop
mov
frstor
test
bound
jo
out
fwait
jmp
xchg
cmp
out
out
mov
jae
enter
je
dec
pop
inc
mov
mov
pop
jg
nop
scas
inc
out
pop
shlb
add
dec
in
xchg
addr16
das
inc
aam
push
jns
pop
test
sub
out
jo
dec
outsl
sarb
adc
ret
repz
or
outsl
stos
mov
aaa
or
leave
mov
movsb
add
xchg
and
dec
fcoms
sbb
out
sbb
mov
loop
mov
mov
hlt
xlat
adc
xchg
jb
xor
mov
call
inc
xor
inc
or
dec
mov
lds
pop
loop
scas
cld
mov
test
movsb
add
faddl
iret
lcall
shl
xchg
rorl
lret
inc
jno
test
sbb
inc
mov
sbbb
xor
push
cli
adcl
sub
mov
insb
rol
movsb
dec
lret
jno
xchg
adc
pop
ljmp
jp
test
fisttpll
or
jge
sub
orb
pop
jmp
js
mov
pop
mov
popa
hlt
punpcklwd
movsb
adc
int3
jbe
in
out
ret
cmp
jns
mov
popa
scas
jecxz
dec
insl
cmp
dec
movsl
xchg
adc
adc
jbe
es
mov
outsl
jl
loop
xlat
sbb
in
lds
ficomps
adc
and
mov
adc
sbb
pop
mov
repnz
and
or
mov
ljmp
hlt
or
movsl
fimuls
rcrl
jp
ja
out
cmp
icebp
movsl
test
sbb
pop
addl
rcrl
mov
js
test
sub
lods
sbb
mov
lds
out
repnz
scas
es
jno
out
notb
dec
pop
jbe
inc
cmp
xchg
mov
popa
imul
mov
int3
mov
push
add
popf
stos
mov
sarl
fstps
adc
enter
jle
add
test
push
orl
loope
push
inc
pushw
popa
call
icebp
mov
mov
in
je
cs
test
jecxz
jnp
jno
jmp
jno
or
jle
fldl
inc
inc
icebp
test
fwait
add
xchg
cmp
or
push
js
jg
push
inc
stos
push
inc
xchg
dec
inc
fbstp
jo
and
inc
stos
push
nop
mov
mov
ss
dec
mov
mov
jle
andl
push
daa
movsl
pop
pop
fbld
mov
adc
sub
cltd
mov
stos
cmp
cld
incb
and
pop
xor
sbb
les
out
push
test
stc
bound
mov
xchg
inc
adc
sbb
push
sbbb
or
lods
lds
aam
int
mov
aas
or
jb
push
mov
jl
mov
cmpsl
clc
lret
fisttpll
push
pop
int3
jmp
jle
dec
pop
xchg
lods
test
test
cmp
pop
and
pop
xor
pop
xchg
inc
inc
testl
mov
and
lret
push
and
jnp
jl
dec
cli
pop
sar
pop
inc
pop
pop
je
and
ret
shll
iret
cmpsl
bound
sbb
cli
and
cmp
iret
mov
xor
ds
adc
ds
pop
sub
fisubrs
add
lahf
shlb
iret
inc
testl
dec
mov
fisubl
jbe
jle
mov
dec
fwait
jg
mov
jp
or
aam
push
or
scas
jnp
push
inc
add
xor
cmc
or
dec
inc
inc
fdivrs
adc
fstp
adc
mov
mov
dec
lods
test
mov
push
jno
int3
inc
push
xchg
daa
mov
testb
xchg
repz
lea
lcall
xor
aam
mov
push
data16
sbb
mov
dec
scas
stos
add
xlat
and
test
in
cmpsb
negl
sahf
mov
das
push
lahf
add
add
ljmp
pop
mov
lahf
jg
push
pop
push
test
sbb
arpl
dec
in
adc
inc
jbe
out
adc
mov
mov
shrb
call
aas
repnz
mov
das
stos
push
shrl
pushf
add
jne
adc
daa
sti
test
pusha
in
lret
dec
and
xor
jle
nop
sub
adc
sub
mov
mov
sahf
out
sahf
mov
mov
cmpsl
sarb
adc
jle
or
sub
pop
sbb
mov
and
adc
call
or
dec
nop
adc
inc
in
stos
es
ficoms
jl
sub
addb
rep
into
jge
sub
std
jecxz
test
adc
push
push
test
xor
mov
ret
jo
movsl
and
mov
les
dec
es
adc
inc
cmpsb
jns
lods
mov
lahf
push
mov
shl
fwait
adc
adc
adc
scas
add
dec
mov
sbb
lea
adc
pop
pop
cli
jns
movsl
mov
stos
lret
inc
mov
pusha
jecxz
jb
sub
ljmp
jns
sub
sbb
aas
into
sbb
fwait
repz
add
xlat
mov
shrl
dec
loopne
fdivs
test
push
test
les
xchg
movsb
mov
cli
idivb
xor
js
sbb
leave
movsl
sbb
jns
fwait
mov
sbb
fwait
fs
nop
orl
xor
mov
sub
inc
add
push
ret
xchg
int
dec
popa
leave
add
cmpsb
cld
mov
sbb
xchg
out
adc
fcompl
sarl
cmpsb
cmp
aaa
sub
ret
pop
inc
push
and
sbb
ret
mov
ret
cmp
fcmovnu
negl
es
inc
pop
clc
adc
xchg
aas
cs
lret
imul
aam
sbb
out
ret
int
insl
mov
sarb
mov
clc
push
inc
movsb
pop
add
mov
jmp
pop
ss
mov
iret
push
fidivs
test
scas
add
lahf
cmp
jno
loope
loopne
ljmp
sbb
mov
sahf
nop
ficompl
or
adc
popf
inc
adc
lcall
xchg
jge
sbbl
jmp
dec
mov
mov
cmp
mov
lds
jno
pop
push
test
and
stos
adc
push
mov
lret
sub
aas
lret
inc
xchg
add
mov
mov
shrl
rcrl
idiv
and
or
pop
or
cmp
ficoml
xchg
pop
xchg
in
sbb
sub
push
xor
mov
lret
add
xchg
xlat
call
sub
inc
test
out
ss
iret
aas
xchg
mov
push
pop
lcall
rolb
into
ss
cli
xor
out
mov
into
pop
lret
js
out
insl
fs
inc
jle
cli
lret
pusha
add
ss
fs
ds
xlat
outsb
fists
movsl
lret
loopne
push
mov
fsubrs
mov
lock
xchg
xor
cwtl
mov
ret
cld
add
dec
xchg
mov
pop
cli
push
or
jns
pop
or
mov
xor
testb
add
add
jo
repz
js
jbe
push
dec
test
inc
pop
cwtl
pop
mov
dec
scas
cmp
adc
inc
cwtl
or
out
cmp
hlt
add
es
sbb
rcrb
lret
mov
shll
push
int3
sti
xlat
jnp
std
and
in
popa
xchg
in
push
popf
roll
mov
fdivr
mulb
jg
dec
enter
push
xchg
nop
ja
fldl2e
pop
cmc
push
popf
mov
push
aaa
add
jo
mov
in
stc
add
inc
cmp
dec
mov
std
cmpb
seta
mov
testl
cmp
push
fcomps
arpl
jmp
and
aaa
push
into
mov
cmp
mov
cmp
frstor
aad
incl
movl
mov
xchg
cmp
pop
rcll
mov
dec
mov
ret
mov
imulb
jmp
sub
mov
lcall
mov
jnp
lret
int3
mov
nop
test
inc
popa
add
or
nop
mov
jp
pushf
adc
imul
lahf
pshufw
and
and
cld
jne
out
or
lret
inc
jg
adc
cmp
push
enter
jmp
inc
xor
fcompl
mov
das
loop
adc
adc
mov
cmp
jae
push
movsb
shlb
push
fcomps
movsl
inc
jno
js
adc
js
ljmp
shlb
ja
lock
and
mov
mov
and
aaa
cld
fiadds
push
xor
jp
inc
xchg
outsl
fcoml
inc
test
dec
cmpsb
adc
shll
movsb
pushf
xor
fldenv
jl
xchg
test
jg
sub
shrb
cmp
dec
js
inc
outsb
mov
dec
ret
test
loopne
inc
mul
out
ds
sbb
es
mov
add
mov
sub
push
les
mov
mov
ss
jg
sti
pop
lods
xor
adc
mov
push
sub
xor
jl
dec
std
push
xchg
add
inc
jle
jb
cltd
repz
xchg
xor
sub
imul
and
test
push
test
push
ret
test
fcompl
mov
ret
xchg
add
popf
rep
shl
ret
test
out
jg
sbb
jb
xchg
ljmp
jmp
pop
enter
rorl
adc
push
jns
lock
test
add
push
mov
push
jmp
pusha
and
popa
loope
add
jmp
ret
sar
aaa
addr16
sub
cmp
int3
xor
sahf
and
scas
fdivs
jno
mov
push
xchg
push
pop
notb
bound
lahf
scas
or
sbb
out
push
push
sbb
sbb
xor
jmp
test
call
and
popf
jmp
arpl
popf
mov
iret
in
pop
adc
dec
mov
mov
jl
xor
xchg
rcrb
inc
add
mov
pushf
mov
mov
cli
pop
popf
cwtl
push
repnz
fstl
test
push
mov
sbb
lds
mov
aad
iret
cmp
push
push
jb
cli
xor
cltd
test
fcomi
in
pusha
sbb
and
pop
cmp
arpl
inc
cli
fbstp
mov
lock
push
xor
fldt
jge
inc
push
loopne
aaa
rolb
scas
idivl
in
daa
fsts
inc
xchg
int
push
xor
jecxz
add
pop
ffreep
xor
xor
sbb
popf
les
lods
push
sbb
add
call
dec
loope
adc
sub
mov
cmc
add
push
push
lock
rcr
jns
xchg
xor
push
sub
push
orl
test
mov
fcomi
push
rorb
push
push
lcall
pop
dec
xchg
xor
inc
and
xchg
push
pushf
jmp
test
push
push
aaa
lahf
pop
icebp
sbbl
shrb
cmp
pop
xchg
pusha
xor
mov
jmp
mov
xor
cli
shrb
mov
cwtl
stos
mov
mov
and
xchg
imul
mov
test
adc
push
lds
adc
les
in
test
jo
or
sbbb
clc
out
add
dec
dec
cmpsl
mov
hlt
cmp
addl
mov
imul
mov
push
enter
mov
cmc
shr
cmp
jmp
mov
inc
jecxz
and
sti
pop
mov
jmp
sbb
ret
int
push
dec
lea
loop
inc
jae
mov
loopne
pop
loop
jmp
pop
cmpsb
lds
push
lcall
inc
adc
js
rorb
push
repnz
lea
jbe
mov
push
ficompl
push
into
popf
fistpl
dec
sarl
mov
mov
fs
mov
les
xor
and
dec
fcomps
fwait
sub
scas
in
xchg
ss
push
pop
cmp
inc
mov
cmpsl
out
scas
sub
clc
pushf
out
push
dec
sahf
movsb
int3
pop
data16
mov
mov
sbb
add
stc
xor
mov
or
add
inc
into
cs
lock
mov
shlb
aad
pop
lods
in
mov
xchg
ljmp
inc
and
inc
mov
dec
mov
cmp
cwtl
and
sbb
shlb
cmp
mov
xor
ja
push
lds
js
inc
daa
sub
ja
dec
dec
push
test
in
cli
lods
xlat
loope
mov
mov
jno
push
and
test
fsubl
xchg
add
mov
into
or
test
daa
xor
jecxz
test
test
xchg
cmpsl
loopne
cmp
insb
or
jmp
aaa
call
pop
movsb
jle
push
xlat
or
scas
adc
add
adc
test
test
aad
dec
sarb
test
pusha
mov
add
adc
daa
mov
repz
jp
in
xor
in
add
push
aam
sbb
insb
shll
sarl
xor
sub
std
fidivrs
and
ss
lods
into
movsb
aad
pop
fcomi
push
stos
xchg
lods
rcrl
mov
out
jne
hlt
divb
xor
push
fxch
jnp
fidivl
mov
fbstp
mov
aad
and
dec
sti
pusha
push
repz
sub
mov
clc
push
mov
jecxz
and
ljmp
repz
enter
int3
xchg
or
and
pop
std
jbe
mov
adc
out
iret
faddl
loop
or
dec
adc
cmp
mov
fwait
ss
and
dec
bound
pop
dec
adc
inc
outsl
inc
jns,pt
sbb
pushf
xchg
mov
aam
mov
or
xchg
mov
movsb
fdivs
enter
sub
dec
and
nop
push
inc
dec
pop
dec
add
iret
or
les
inc
mov
andl
mov
lret
lds
pop
add
mov
ljmp
fwait
sbb
push
or
enter
lcall
fildl
rorl
adc
montmul
cmpsb
add
mov
gs
push
add
repz
or
jno
fimull
jmp
faddl
fisttpl
fdivrs
icebp
xchg
pop
xchg
out
jno
dec
cmp
adc
sub
cmpsl
arpl
mov
outsl
pop
pop
xlat
cmp
adc
add
scas
xlat
mov
rcll
mov
mov
and
xchg
cmpsl
cmp
jne
call
mov
fstpl
dec
add
xchg
mov
mov
push
dec
outsl
testl
ljmp
nop
sti
jbe
sub
adc
xor
and
add
or
adc
shr
shrb
sub
dec
add
mov
movsl
and
mov
inc
mov
lret
mov
mov
mov
mov
jge
mov
out
pop
or
daa
cmp
dec
sti
pop
clc
inc
xchg
idivb
pop
push
xor
inc
inc
outsb
test
rcrl
mov
add
leave
insb
dec
insl
ja
dec
inc
adc
repz
aad
mov
lret
lock
jmp
mov
sbb
clc
fcompl
and
dec
fwait
ret
aas
pop
hlt
jbe
repz
in
adc
mov
sbbl
inc
scas
mov
pushf
mov
je
repz
sub
dec
push
mov
xchg
lret
test
addl
cwtl
lds
std
push
mov
xlat
call
mov
jb
adc
push
int
ljmp
push
mov
sti
int
repnz
mov
fisubrl
cmp
les
scas
bound
pusha
mov
sbb
inc
mov
dec
jns
pop
test
or
add
fdivrs
pushf
mov
add
xlat
lock
and
cmp
movsb
movsb
sub
jb
stc
mov
insb
mov
fs
push
daa
cmp
inc
cmp
aaa
cmpsl
mov
and
cmp
push
xor
movsl
and
dec
and
jmp
lcall
xchg
les
mov
cmp
jmp
stos
mov
rcr
movsl
scas
xor
and
mov
jl
out
sahf
or
repnz
cmc
stos
inc
xor
idiv
cltd
jmp
shll
fmull
add
mov
ds
pop
inc
mov
inc
repz
hlt
push
out
stc
and
sbb
cmpsl
pushl
fdivrl
push
daa
loopne
jmp
xor
jecxz
adc
adc
out
sub
dec
or
push
or
loopne
or
inc
xor
mov
lods
cmp
rcrb
and
ss
mov
xchg
add
mov
movsl
sbb
push
aaa
push
nop
sub
stos
ret
lret
mov
lock
push
shlb
pop
sbb
int3
lds
push
xlat
cltd
jb
sahf
jge
scas
lock
xor
cmp
loopne
clc
cmp
shlb
add
adc
in
out
and
ret
sahf
sub
imul
dec
call
sub
sbb
add
sbb
scas
dec
xor
and
outsb
leave
inc
adc
jmp
jl
jnp
ret
adc
movsl
popf
mov
sti
cmpsl
enter
dec
stos
jecxz
push
lds
cwtl
sub
adc
cltd
loop
or
xchg
adcb
push
sub
pop
in
sbb
repz
xchg
ss
fcmovnu
sarl
jbe
stos
ja
mov
cld
push
push
jno
mov
lods
lods
insl
sub
out
cmp
aam
in
lea
test
jmp
setne
or
or
idivb
adc
jne
loopne
cli
lods
cmpsb
mov
call
push
int3
stos
push
jo
repz
int3
cmp
dec
je
cld
hlt
loop
or
pushf
dec
sbb
mov
mov
enter
and
pusha
nop
sbb
and
xor
movsl
lds
test
ja
iret
xor
or
lret
xchg
sti
inc
cmc
mov
jl
xor
in
repz
icebp
stc
push
clc
and
push
sbb
push
xchg
stos
lods
imul
xchg
mov
out
rcrb
cmpb
scas
adc
jmp
lahf
dec
push
pop
pushl
dec
lret
push
mov
add
mov
lret
adc
push
dec
js
faddl
ljmp
pop
inc
ds
loope
pop
js
fdivl
xchg
movsl
mov
out
gs
xor
xchg
lock
sbb
pop
cmpl
xchg
decl
jo
or
xlat
cld
in
xchg
aam
dec
pop
mov
jns
push
pop
scas
leave
sbb
out
jge
ficoms
rcr
sbb
pop
and
loopne
pop
mov
or
mov
dec
and
bound
xchg
loope
fimull
fcomi
mov
xor
push
pop
pusha
xchg
cmc
fs
xchg
xchg
rcrl
popa
inc
daa
in
in
add
or
mov
or
mov
sub
and
into
std
adcb
mov
test
repnz
mov
or
and
jle
jecxz
push
movsl
mov
sbb
js
in
out
jne
aad
and
stc
jb
jb
js
loop
cwtl
pop
push
daa
popf
mov
repnz
inc
and
ret
push
adc
xor
les
sub
setp
and
testb
xor
push
xchg
rcrl
ja
and
mov
cmp
jbe
push
or
pop
insb
sbb
add
xor
push
fdivrl
insl
test
jo
lock
jge
sub
jle
cld
pop
pop
jo
rcrb
dec
rol
jp
mov
repnz
push
stos
clc
push
arpl
cmp
dec
mov
movsl
rcrb
sbb
movsl
dec
cltd
push
aaa
scas
jg
pop
pop
gs
sbb
cmp
dec
fwait
sbb
sub
pop
add
in
test
xor
pop
cs
fsub
mov
fcmovu
scas
xor
mov
pushf
add
fs
xchg
inc
cmp
adc
jbe
jle
daa
adc
test
call
add
icebp
mov
ljmp
dec
xchg
fimull
jnp
mov
xchg
nop
fs
push
mov
enter
xchg
inc
call
sub
push
arpl
mov
add
in
jmp
inc
push
movsb
push
js
or
mov
shrb
pop
repnz
fs
mov
push
push
shll
cmp
lahf
mov
clc
and
imul
pop
pop
xchg
and
push
pop
mov
add
push
add
mov
pushf
aam
ja
adc
lods
xchg
fdivrl
movsl
add
mov
lods
gs
pusha
push
lock
in
ret
or
or
movntps
push
insl
lahf
mov
mov
jg
int
pop
dec
hlt
loope
mov
jmp
sub
mov
pop
sbb
mov
mov
popa
lcall
loopne
mov
xchg
subl
sbb
ja
pop
inc
ds
cmc
mov
cmp
sub
cmpsl
mov
xor
adc
data16
add
and
movsb
lods
push
push
inc
sbb
adcl
dec
jns
dec
imul
sub
lret
call
add
adc
dec
or
and
jmp
imul
ja
mov
or
pop
xor
or
cs
adc
add
pop
pusha
jmp
xor
push
mov
cs
out
jno
sti
mov
mov
jne
test
sbb
xor
xchg
jecxz
xchg
xlat
clc
jmp
popf
mov
mov
or
mov
enter
dec
je
jg
pop
xor
pop
mov
mov
ret
mov
cmp
sub
mov
lock
aaa
dec
push
lods
push
xchg
dec
nop
and
pushf
jmp
outsb
cmpsl
inc
cmp
mov
jb
or
or
add
inc
notl
mov
pop
mov
mov
call
xchg
cmp
mov
xchg
push
fsubl
mov
mov
and
lods
mov
mov
cmp
or
loopne
push
int3
lahf
mov
stos
fidivs
cli
mov
push
in
imul
and
ljmp
adc
dec
push
dec
dec
nop
repz
xlat
ljmp
js
add
lcall
test
lret
imul
out
cld
adc
pop
sbb
lods
sbb
scas
mov
cld
cs
sbb
outsb
pop
mov
push
movsl
test
cmc
test
dec
mov
les
into
call
xor
in
sti
xor
sub
adc
fdivrl
int3
ljmp
gs
lods
movsl
data16
sub
mov
dec
lret
fdivrl
sub
clc
popf
repz
cmpsb
push
lods
mov
insb
in
xor
jbe
sub
stos
jmp
cld
push
pop
adc
cmpsb
arpl
test
mov
xlat
sbb
das
sub
pop
jge
jno
je
pop
gs
push
fistl
inc
jg
into
ds
in
cmp
and
jp
jb
jne
push
shlb
ja
dec
pusha
arpl
push
adc
xor
stos
in
shlb
xchg
mov
shrl
pop
xor
ret
gs
jl
aaa
gs
mov
stc
mov
mov
xrelease
sub
movsb
pop
loop
inc
dec
lcall
mov
mov
xorb
sub
out
aam
ret
in
testl
add
xor
push
adc
xor
xor
mov
xor
cmp
cmp
push
adc
xchg
mov
mov
cltd
inc
into
mov
mov
cmp
lret
mov
daa
sarl
je,pn
test
leave
xchg
ja
rcll
out
pop
sbb
adc
jg
xor
popf
popf
cmp
cli
and
inc
shrb
lea
loope
mov
mov
cwtl
idivb
pop
ret
add
xor
into
stc
push
jmp
xor
inc
mov
jnp
icebp
out
pop
add
inc
aad
sarb
pop
clc
sbb
mov
std
mov
aad
inc
loop
rcrl
vpsubusb
add
mov
repz
jo
jne
sub
jecxz
jl
sahf
imull
aas
fmuls
jno
cwtl
push
xchg
dec
jno
or
ja
arpl
xchg
mov
mov
inc
sub
clc
shrb
cmp
xsha1
cmpsb
mov
xor
xor
mov
mov
stc
js
out
push
gs
cli
je
call
adc
sbbb
push
adc
add
aas
xchg
xor
jmp
jge
scas
adcb
xor
cmp
jnp
nop
out
mov
sbb
sub
pop
xor
pusha
in
in
repz
mov
incl
nop
mov
mov
pop
add
xor
mov
push
insb
int3
in
inc
insb
jbe
arpl
cmp
sub
ret
dec
test
cmp
pop
mov
test
mov
add
sub
mov
jbe
xchg
sbb
mov
scas
xchg
cmp
jmp
or
xor
ret
notl
clc
add
xchg
mov
sti
in
push
mov
jmp
xchg
mov
dec
inc
pop
in
test
push
lea
jo
rcrb
ds
movsl
repnz
cld
push
out
cltd
push
add
inc
enter
and
lcall
inc
outsl
sub
push
aas
pop
sub
lods
mov
cld
sub
pop
push
pushf
jge
ret
outsb
fidivrs
inc
mov
xlat
sbb
inc
fistl
andl
push
or
aad
test
lods
sbb
mov
sahf
loope
and
add
adc
fcmovb
test
xlat
inc
or
cld
int3
aam
xlat
push
or
call
pop
insl
mov
cli
jmp
and
sbb
jns
xor
cli
inc
inc
ja
sub
shlb
adc
loope
movsb
aad
push
shr
jmp
lcall
hlt
xchg
inc
shll
fildll
adc
subb
loopne
outsl
insb
rcrl
push
and
mov
xor
repnz
jecxz
sahf
add
shrl
loop
and
outsb
mov
lcall
xor
xchg
inc
xor
sub
test
ja
cmpsl
add
mov
testb
xor
test
mov
xchg
adc
ja
dec
je
ss
push
pop
sub
arpl
mov
xchg
mov
jl
popf
sbb
jne
rcrl
mov
fsubrs
jne
mov
sbb
ja
into
pop
mov
leave
cwtl
movsl
test
push
repnz
cld
mov
push
rorb
enter
push
jo
pop
xchg
mov
inc
mov
jo
xchg
sub
and
lret
or
or
cli
lock
shll
or
mul
shr
xchg
inc
iret
jg
imul
jp
out
fwait
test
repnz
cmp
les
xlat
aas
mov
mov
imul
mov
icebp
pop
jne
inc
dec
push
cmpsl
fmul
dec
stos
push
xchg
out
aam
xor
or
cmp
aad
push
sbb
cmp
xchg
lret
dec
loop
cli
outsb
xchg
jns
and
ffree
aaa
incb
and
dec
jb
decb
mov
and
adcl
jecxz
icebp
cs
nop
jmp
and
inc
imul
pop
push
mov
inc
xor
pop
jle
and
popl
push
pop
lahf
xor
ret
stos
pop
gs
in
loop
daa
imul
lret
xchg
ss
lahf
push
xor
jne
orl
fiaddl
aas
ja
jle
or
out
scas
test
inc
push
inc
pop
push
sti
aas
bound
aad
out
iret
dec
mov
adc
pusha
inc
mov
jb
mov
jbe
std
sub
das
testl
pop
xchg
adc
aam
push
out
pop
insb
test
repnz
int3
xchg
jmp
dec
xor
cltd
cli
cltd
push
icebp
inc
mov
mov
decb
test
ficompl
cmpsb
fldcw
mov
pop
adc
lcall
xchg
and
stos
sahf
sub
popf
fsubrs
daa
mov
sub
cmc
test
jns
movsb
pop
filds
push
push
ret
js
shl
jns
aas
lret
data16
or
int3
xchg
fcmovu
push
cs
repnz
jge
test
repz
std
adc
fildll
mov
cs
and
inc
dec
popa
or
xor
add
outsb
xchg
insl
mov
sbb
out
loope
mov
and
add
cld
cmp
jno
shlb
popl
ret
loope
mov
bound
inc
or
mov
cs
push
or
and
int3
or
rcrb
mov
fs
loopne
cmp
inc
daa
lret
sub
bound
sub
imul
xor
cld
cwtl
mov
nop
lock
pop
cltd
arpl
daa
xchg
and
sahf
sti
push
or
dec
cmp
sub
mov
jmp
push
and
callw
idiv
and
or
out
and
mov
jno
popf
sahf
test
xchg
ret
mov
notl
movsl
dec
aaa
outsb
movsl
out
lods
inc
mov
inc
mov
shlb
sbb
mov
dec
adc
xor
or
adc
pop
push
sub
cld
sbb
jp
sarl
mov
inc
pop
push
enter
movsb
rol
enter
cmpsl
xor
shl
push
int
ret
adc
mov
jb
mov
dec
aas
pop
aas
in
addr16
hlt
int
mov
pop
loopne
enter
mov
nop
int
enter
in
out
pushf
mov
or
scas
jb
stos
or
dec
shlb
orb
xchg
push
dec
sbb
sub
push
push
xor
adcl
dec
lods
mov
push
in
jbe
in
loope
test
mov
scas
lcall
popa
or
fdiv
inc
insl
push
aas
mov
jb
xchg
push
int3
cmpsl
xchg
sub
push
adc
fimull
mov
fiaddl
cs
outsb
sub
jl
pop
mov
fldcw
mov
dec
mov
repz
dec
add
inc
inc
movsb
or
push
mov
sbb
or
pop
dec
xchg
in
xchg
jbe
pop
sbb
outsl
or
inc
stc
sbb
cmpsl
pop
xor
sub
cltd
popf
adc
shll
fidivrl
fistl
fwait
mov
xchg
sbb
mov
arpl
mov
push
les
xor
out
dec
cmpsb
adc
rorb
popa
daa
cli
push
adc
push
cs
sub
fcoms
jg
fs
push
xor
inc
adc
push
xor
adc
popa
loopne
loope
rcrb
mov
lds
lret
inc
add
pop
mov
adc
sarb
popf
and
jmp
repz
xchg
mov
insl
clc
jae,pn
aas
dec
and
xor
outsl
lock
sub
das
ljmp
mov
testb
jmp
xor
mov
mov
dec
xor
shl
pop
popf
adc
pop
mov
stos
stos
sbb
jnp
sbb
sub
dec
jle
inc
sbb
jae
push
sbb
sub
lea
xor
jno
inc
shrl
sbb
dec
sbb
cmpsl
ret
ds
cld
dec
movsl
jnp
shl
pop
xor
mov
lods
add
xor
xchg
jge
pop
inc
jmp
js
and
cmp
out
pop
or
nop
cmp
adc
cmpsb
aas
mov
or
in
push
cmp
sbb
stos
add
std
clc
inc
ljmp
jno
stos
jbe
and
push
inc
jo
hlt
dec
movsl
das
icebp
sbb
mov
adcl
mov
xchg
hlt
pop
ss
or
lock
xor
in
add
mov
ficoms
pop
adcb
pop
inc
repz
sub
out
fnstsw
lret
out
icebp
sbb
pop
adc
jae
pop
rclb
mov
sbb
movsl
and
subb
sub
std
push
lcall
dec
das
sarl
shll
popf
mov
dec
movl
xor
js
stos
mov
add
sbb
cmpl
add
or
mov
aad
mov
out
cmp
jecxz
call
sbb
push
inc
dec
jg
ds
fnsave
in
std
loopne
test
or
push
int
jmp
pusha
scas
or
cmc
pop
ret
jnp
fcmovnb
scas
dec
and
or
int
roll
outsl
adc
stc
fcmovb
movsl
outsl
je
xor
pop
push
lahf
add
cwtl
in
dec
push
xchg
xor
or
flds
imul
pop
mov
mov
push
cmpsb
shll
aaa
cld
int3
lea
mov
xchg
mov
pusha
xchg
xchg
ljmp
pop
pop
mov
movsl
sbb
or
adc
xchg
mov
fninit
lcall
das
cli
or
pop
xchg
inc
pop
insb
push
stos
adc
inc
or
inc
adc
jbe
sbb
icebp
fs
mov
push
aam
ficoml
cmc
jp
push
xlat
std
or
clc
sub
inc
adc
arpl
in
adcb
lcall
cmp
add
lock
pop
fwait
pushf
mov
or
lods
notb
hlt
and
jno
push
fstl
sbbb
adc
mov
mov
inc
dec
push
mov
or
sub
cmc
jmp
dec
mov
fsin
jmp
lcall
push
push
cmp
out
aad
xchg
cwtl
mov
fwait
lods
mov
jp
lret
and
adc
shrb
cwtl
xchg
push
in
sbb
fcmovne
dec
adc
jecxz
ljmp
mov
add
inc
cmp
sti
inc
sbb
adc
inc
adc
or
vmulpd
dec
dec
mov
shll
adc
and
out
stos
sbb
push
adc
scas
push
jb
add
das
rolb
in
enter
add
dec
stc
icebp
or
out
sbb
mov
xor
cmc
fsub
or
mov
push
loop
roll
addr16
or
clc
mov
or
ja
mov
mov
in
push
imul
insl
xchg
call
repz
hlt
aad
xor
rolb
sbb
inc
cmp
js
fs
test
push
mov
mull
sahf
nop
sbb
lret
inc
sub
and
inc
mov
into
ja
jle
add
mov
pop
pop
push
int
fxch
sti
xchg
in
pop
insb
dec
jmp
fidivl
inc
test
sbb
loope
sub
dec
test
insb
out
add
or
stc
cmc
mov
aam
add
push
shrl
pop
cmp
dec
scas
pop
lcall
lods
pop
les
in
mov
push
lahf
mov
dec
scas
fcmovnb
imulb
pop
inc
cmpsl
xchg
orl
mov
adc
cmp
in
mov
jo
add
sub
jg
cmp
mov
dec
dec
sub
cmp
mov
lods
lock
out
lahf
mov
outsb
push
inc
ss
dec
or
push
mov
movsl
and
stc
xor
in
dec
jg
repnz
xchg
loopne
and
stos
hlt
mov
xchg
inc
push
push
mov
jge
int
push
cltd
test
stos
add
ja
clc
dec
push
pop
pop
sub
fdivrs
lods
xor
mov
add
dec
div
mov
out
fsub
inc
add
xor
sahf
jge
shll
dec
movsb
das
sarb
mov
pop
inc
les
and
mov
daa
in
pop
pushw
adc
cmp
std
loop
pop
shll
xlat
in
jge
jae
cmp
pop
imul
nop
push
add
in
roll
adc
cltd
add
lret
xchg
test
dec
fstpt
sbb
rolb
sub
mov
insl
pusha
ljmp
lea
ret
dec
fdivs
and
ret
mov
sub
xchg
out
enter
and
ja
mov
cmc
mov
jbe
ljmp
sub
xlat
jo
mov
push
test
aas
jmp
mov
pop
sbb
pop
sub
dec
pop
incb
test
mov
mov
lods
pop
xchg
inc
insb
sti
lcall
les
sub
push
and
ljmp
mov
sub
data16
cld
sbb
jns
push
out
rol
jb
jno
sahf
push
rcll
movsl
and
inc
jge
push
dec
out
scas
xadd
in
sbb
lds
lahf
fsubp
pop
pop
push
daa
or
fwait
sahf
pop
outsl
inc
ds
mov
mov
fucomp
and
and
and
xchg
ret
sti
and
imul
enter
sahf
sbb
daa
rcrl
mov
lret
pop
sbb
in
pop
jae
inc
je
loop,pt
popa
hlt
xlat
mov
std
cmc
sub
cmp
sub
loop
or
sub
or
je
dec
pop
pop
xorl
or
les
xchg
pushf
dec
and
xchg
xchg
sbb
jp
mov
test
push
xchg
movsb
rcrb
mov
stc
popf
cmc
ret
int
fisubs
jbe
mov
iret
nop
test
adc
repz
in
hlt
add
icebp
lcall
arpl
pop
add
fs
jp
frstor
jmp
fstpt
mov
fisubrs
lock
mov
and
dec
push
cmc
push
jl
ret
adc
dec
aam
shrb
imul
sahf
jecxz
subb
and
divl
sbb
mov
lcall
and
and
pop
sarl
lea
aas
outsb
and
push
iret
add
pusha
and
inc
sbb
mov
jb
jmp
repz
mov
push
fiadds
out
mov
mov
dec
imul
push
cmp
mov
dec
xchg
pop
jbe
aad
push
mov
daa
adc
enter
pushf
sbb
call
shl
pop
and
xorl
fidivl
push
cwtl
push
xor
sbb
int
std
mov
fidivs
jecxz
xchg
push
pop
sbb
mov
dec
iret
push
inc
cli
shll
into
fs
and
in
mov
push
lret
xchg
inc
fcmovnu
pop
sbb
xor
push
int3
sub
inc
pop
xor
mov
pop
scas
xor
imul
ss
pusha
pop
fsubrl
cwtl
clc
inc
stos
divl
sbb
jno
enter
call
mov
js
xlat
int3
or
and
push
jo
mov
cwtl
and
mov
js
call
aad
lahf
pop
subb
fwait
jno
xor
pop
pop
fcmovne
lcall
and
push
mov
shlb
add
and
rcrb
into
jno
test
fwait
addb
ss
inc
fidivrs
cli
xor
scas
mov
add
ljmp
xchg
iret
pop
sbb
and
pop
aas
fmul
lock
arpl
test
sbb
dec
inc
adc
test
inc
loopne
into
dec
data16
je
stc
adc
aam
jl
test
lods
aam
out
orb
loopne
mov
mov
lahf
mov
mov
pop
inc
dec
pop
xor
jmp
mov
lods
mov
mov
sti
pop
xchg
pop
add
push
mov
mov
or
call
jg
fxch
sar
in
jg
sbb
lcall
ljmp
les
out
out
outsb
es
jae
movsb
sbb
andb
xor
inc
dec
push
neg
mov
dec
xchg
mov
mov
and
sbb
jno
push
add
push
inc
and
xchg
addr16
and
mov
popf
pop
mov
jne
and
push
cwtl
test
les
cmp
repnz
mov
aaa
xor
mov
fiaddl
pusha
mov
fcmovb
gs
mov
and
cli
push
xchg
out
jmp
and
aaa
sarb
cmp
test
hlt
xchg
outsb
jge
inc
cmp
xorb
cpuid
inc
or
push
sbb
inc
mov
sub
outsl
jl
mov
xor
shll
repnz
pop
mov
pop
lret
jbe
dec
sbb
jg
fsubs
mov
pop
jno
xchg
pop
pusha
cmc
test
cltd
jae
sbb
mov
mov
in
jmp
mov
hlt
cltd
pop
xor
getsec
shr
and
andb
test
push
fldl
sub
mov
add
add
out
xchg
add
movsl
xor
in
cmpsb
xchg
xor
inc
mov
xor
into
daa
rorb
push
dec
cld
hlt
les
sub
stc
push
or
fimuls
fucomi
rolb
roll
sub
hlt
cmp
lea
stc
jnp
cmp
popa
dec
movsb
sub
sub
pop
ljmp
jg
lods
mov
push
push
cld
lods
xchg
mov
cmp
cmpb
or
gs
xchg
inc
mov
dec
and
cmc
and
xlat
lods
aas
xor
shrb
jne
ret
sub
dec
mov
mov
or
dec
hlt
rcrl
jecxz
mov
sub
push
cmp
arpl
fs
ja
jb
leave
sahf
jp
inc
push
pop
shll
cltd
rclb
mov
jmp
jne
int3
xchg
pop
adc
es
ljmp
lcall
movsb
dec
inc
stc
mov
jg
iret
add
push
push
add
ja
cmp
fldcw
mov
out
mov
cs
jbe
notb
pop
pop
lret
mov
sub
pop
daa
adc
pop
xchg
mov
outsl
push
outsl
aas
cmp
pop
push
mulb
dec
roll
subb
cli
out
inc
stos
and
rclb
mov
repz
mov
pop
lret
jne
dec
push
loopne
jmp
xchg
mov
in
rorb
xchg
repnz
or
iret
cwtl
ja
mov
in
outsl
sub
jmp
jmp
decb
pop
inc
lods
ret
aam
xchg
sti
mov
cmp
nop
popf
nop
mov
and
ljmp
and
shl
pop
out
xor
iret
es
pop
pop
cmpsb
scas
dec
cmpsb
cmp
fwait
inc
pusha
mov
mov
and
fldcw
outsb
cmp
pop
mov
and
popa
or
mov
ret
insl
fidivs
mov
pop
data16
adc
cwtl
and
loopne
push
pop
data16
rclb
lods
dec
mov
sbb
pop
pop
je
insb
loope
sahf
mov
cmpsb
iret
je
adc
std
std
fdivs
addr16
fimuls
aam
adc
cmpsb
mov
pusha
mov
ss
mov
mov
nop
mov
call
inc
and
in
gs
leave
rorl
cmc
int3
mov
call
cwtl
mov
mov
cld
inc
fsubl
imul
ja
lock
lcall
adc
lock
ss
mov
lods
stos
nop
mov
mov
testb
pushf
fsubrs
mov
and
fs
in
cmp
mov
jns
mov
sbbb
rorl
imul
les
cmp
test
mov
adc
mov
mov
std
dec
stos
mov
mov
arpl
stos
add
popa
push
add
add
lods
leave
mov
imul
pop
cltd
mov
sbb
xchg
out
mul
test
and
daa
lods
jne
adc
push
sub
lret
jmp
mov
lcall
adc
xor
lret
pop
popl
aaa
js
push
outsb
sbb
add
jae
fidivrs
and
xchg
inc
aam
xchg
mov
cltd
mov
iret
dec
sbb
out
mov
pop
insl
add
and
and
pop
shlb
out
pop
das
icebp
jl
jo
push
mov
add
loope
xchg
hlt
mov
sub
scas
ds
jne
sbb
mov
fwait
rcrl
ds
xchg
test
repnz
dec
mov
sbb
lcall
add
movb
addb
xchg
inc
loopne
pop
inc
jmp
icebp
or
mov
das
xor
add
cmp
and
repnz
jp
jmp
push
loopne
lahf
js
push
jb
insb
add
xchg
pop
mov
scas
out
pop
mov
sub
jecxz
stc
adc
out
sbb
popa
imul
jecxz
sti
iret
inc
pop
out
pusha
and
out
sub
test
inc
fstl
cmpsl
addr16
sbb
stos
add
fildll
ret
or
lods
dec
pop
inc
cmpsl
test
mov
movl
dec
mov
dec
dec
data16
or
es
jl
xchg
fisttps
scas
outsl
mov
dec
add
ljmp
add
popf
sarb
stos
jmp
ja
jge
rorb
cmp
cli
jno
mov
mov
cmc
or
lret
jae
xor
inc
sub
mov
dec
push
or
scas
pop
mov
pop
adc
pushf
add
mov
mov
jecxz
push
cld
mov
movsb
pop
jg
stos
add
call
mov
sbb
cmp
inc
shll
xor
out
es
push
xlat
pop
lock
call
push
cld
sar
pop
add
add
test
lret
adc
mov
out
out
stos
add
dec
or
xchg
jge
testb
cld
movsb
data16
jecxz
std
pop
add
push
jo
sbb
sub
xor
in
and
cs
xchg
sbb
inc
xchg
fildll
fwait
test
fmull
in
mov
pop
sbb
pop
mov
mov
aas
fidivrs
inc
fadds
xchg
mov
mov
mov
cmp
fwait
jecxz
mov
push
lock
add
cld
int3
lods
mov
ret
sub
push
push
xchg
shl
xchg
iret
xchg
test
dec
lds
clc
jle
lods
idivb
sub
lds
pop
jno
rcll
mov
jnp
dec
sahf
imul
call
xorb
movsb
push
insb
or
das
out
sbb
iret
adc
lods
push
xor
popa
pop
mov
movsb
loope
leave
mov
mov
or
cld
lcall
jne
cmp
inc
cld
pop
dec
popf
sti
pop
xor
int
or
imul
push
jae
fwait
out
jae
xchg
sbb
jecxz
out
pop
and
or
mov
dec
sahf
sbbl
mov
adc
aaa
add
sub
jb
and
rcrl
decl
pop
mov
sahf
addr16
cs
push
cld
mov
aaa
addr16
aaa
mov
dec
bound
rep
scas
pop
frstor
push
sub
jg
xor
jb
cmp
int
hlt
leavew
pop
shr
mov
orl
test
ficompl
icebp
nop
in
dec
jns
dec
pop
push
mov
pusha
stos
lret
cltd
out
out
shl
jg
pop
je
les
ja
cmp
xchg
les
xlat
jmp
and
xor
mov
sub
jb
sbb
enter
les
mov
push
clc
sbb
and
sub
pop
dec
jmp
sub
sub
or
jge
mov
inc
pop
mov
mov
bnd
sarl
hlt
mov
jnp
ja
fwait
xor
je
push
dec
int3
sahf
or
sub
push
jmp
sub
ja
inc
mov
scas
cmpsb
rol
sbb
stos
and
stc
movsl
mov
fxch
jp
push
jbe
hlt
dec
jp
and
shlb
push
aad
ss
test
in
das
jg
in
fistpll
mov
out
mov
stos
out
rorb
fcomps
jne
aad
mov
stos
sbb
sbb
mov
mov
sub
mov
inc
fldt
jns
dec
ja
cwtl
lret
mov
cwtl
test
mov
mov
cmpl
adc
or
loope
push
adc
push
dec
stos
dec
popa
cmpsl
pop
nop
fnstenv
sub
iret
xchg
das
jne
xor
out
aaa
movsl
pop
popa
cli
sbb
push
scas
cld
cmp
stos
adc
in
cmp
sub
jae
in
loop
clc
fmull
jb
add
ret
push
mov
call
sahf
dec
and
dec
shrl
cld
dec
clc
clc
jecxz
scas
push
inc
xor
pop
push
subb
fildl
dec
ss
out
xchg
lods
push
int
push
adc
mov
mov
outsb
stos
jbe
sub
cmpsl
int
shlb
imul
or
test
cmp
in
push
testb
sub
fcomi
mov
test
packsswb
dec
fwait
jecxz
outsb
lea
cltd
fwait
inc
mov
inc
and
add
push
lea
mov
out
mov
jp
in
mov
mov
pop
sbb
and
inc
xchg
outsl
push
stos
and
jnp
xor
pop
shr
les
mov
pusha
enter
jge
dec
in
sub
sbb
or
imulb
pop
or
pop
mov
int3
aas
mov
bound
shrl
and
fcompl
push
cmp
or
mov
pop
mov
mov
mov
in
test
xchg
adc
dec
adc
sbb
call
jne
push
jb
adc
pop
pop
stc
orl
pop
repz
sbb
adc
das
imul
pop
mov
rcr
mov
xchg
test
shrl
push
test
call
jbe
jmp
push
pop
sahf
imul
leave
sub
mov
shr
xchg
jle
xchg
iret
insl
mov
mov
push
mov
mov
mov
mov
lcall
or
push
add
add
lret
inc
jp
daa
xorb
jo
nop
or
jno
sbb
dec
lock
lods
sti
in
arpl
stc
es
std
or
xchg
push
lds
push
push
mov
adc
pop
mov
adc
mov
or
mov
pop
out
iret
ja
sti
push
shrl
and
in
mov
pop
cwtl
sub
pop
sbb
testl
sti
loope
xor
fnsave
jns
push
cs
call
jmp
xor
outsl
or
mov
dec
test
mov
nop
pop
rol
xorl
mov
cmpsb
mov
popa
dec
scas
inc
cmpsb
int
jmp
enter
jno
jns
loopne
xchg
mov
push
mov
pop
mov
sbb
mov
sbb
shlb
sbb
xchg
out
es
bound
add
ror
jg
cltd
pop
pop
cmp
lods
mov
adc
mov
mov
sbb
dec
push
divb
push
fcompl
xor
jp
fstps
hlt
or
sti
or
sbb
imul
hlt
out
sbb
ss
loope
and
xor
or
roll
or
imul
dec
outsl
xor
jb
movsl
or
push
pusha
jb
jp
pop
sahf
add
out
sahf
imull
adc
jle
jnp
test
loope
out
mov
loop
loopne
sbb
repz
fucompp
clc
int3
test
jp
add
fwait
jns
mov
fmull
jmp
sub
cli
push
jl
aad
mov
jne
cwtl
jmp
cmpb
sub
or
rep
insl
adc
pop
cmp
push
and
int3
mov
ret
sbb
xor
in
push
gs
aad
mov
or
xor
mov
push
sahf
cmpsb
in
cli
jecxz
push
jb
repz
bound
cli
dec
movb
mov
push
fisttps
ljmp
and
dec
lea
cmc
outsb
sub
mov
popa
into
out
aad
mov
adc
icebp
mov
into
sbb
out
pusha
adc
cli
ja
pop
mov
pop
loop
leave
test
jno
aad
insl
push
mov
lds
and
movsb
fs
rep
inc
sub
rcrl
mov
xchg
jmp
das
insl
sbb
adc
mov
cmp
dec
js
jo
mov
movsl
mov
jae
cmp
or
out
mov
sub
out
and
data16
sbb
outsb
sub
sub
cmpl
loope
arpl
and
push
adc
dec
xchg
sub
vorpd
pop
mov
int3
aam
gs
imul
rorb
dec
aam
andl
mov
pop
jge
pop
repnz
movsl
or
adc
cmc
sub
cs
lock
jmp
nop
pop
pop
icebp
mov
es
imul
push
out
gs
cmp
lock
mov
cmp
rorb
jo
ljmp
outsl
xchg
dec
or
testl
into
mov
call
shll
push
sub
jnp
inc
inc
push
roll
mov
mov
and
fisttps
not
pop
pop
cmp
push
push
cmpsl
xlat
push
mov
fldcw
lret
adc
pop
add
mov
xlat
fsubrl
incl
cltd
pop
jmp
push
dec
pop
or
jmp
das
or
stos
cmpb
filds
les
cwtl
popf
sub
sbb
aaa
inc
mov
cmc
aaa
fsub
imul
inc
orb
dec
in
lahf
lock
lds
stos
rol
jno
push
shrl
or
mov
int3
mov
push
inc
mov
sub
xlat
dec
sbbb
sub
mov
mov
sub
jbe
sbb
or
jmp
adc
sbb
push
int
cmpsl
and
clc
mov
jne
scas
lds
cmp
add
push
jmp
scas
imul
jg
mov
fidivrs
jne
mov
add
in
loop
testb
and
sub
push
faddl
add
jge
inc
test
mov
jge
xchg
movsl
sbb
cmp
lock
add
lock
mov
jns
jl
push
push
jo
jle
call
or
pop
inc
jne
push
mov
jnp
xor
mov
xchg
cmpsb
sub
outsl
or
insl
inc
cmp
lahf
shll
cmp
shll
or
js
mov
int
push
rcl
call
or
mov
dec
push
or
push
sbb
aad
imul
cmp
pop
mov
negl
inc
cmp
push
adc
stos
mov
ret
fildll
jl
push
daa
fistl
cli
cli
mov
addr16
or
ds
test
lods
adc
mov
pop
rcll
mov
cmpsl
xor
adc
lds
pusha
int
cmpsl
lcall
imulb
lods
push
iret
jo
push
cmp
inc
sti
repz
xchg
leave
lods
jo
idivl
pusha
gs
outsl
dec
or
inc
and
add
shr
pop
mov
pop
rcl
or
mov
lcall
and
jp
or
and
pop
fwait
ds
pop
lahf
lret
xor
lods
mov
fldcw
scas
xchg
pop
lcall
mov
cmp
cmpsl
repz
rcr
arpl
std
mov
jge
ljmp
sbb
ret
fdivl
addr16
xor
aaa
cmp
shlb
ror
add
mov
bound
mov
jl
imul
fsts
dec
pop
pop
mov
lods
stos
into
aaa
popa
pop
xor
cmpb
sbb
mov
add
mov
mov
das
out
fcomi
dec
jns
inc
lods
insl
fcmovu
and
fdivr
daa
add
jmp
xchg
repz
and
imul
fidivrl
rcrl
push
or
inc
popf
pop
mov
imul
sbb
mov
inc
rclb
inc
or
and
test
adc
inc
popa
push
jb
xchg
mov
xchg
xor
xchg
jo
mov
int3
pusha
clc
dec
test
or
fldcw
aaa
into
sbb
fdivrp
xchg
mov
jle
iret
and
mov
jp
nopl
shl
mov
xchg
lahf
insb
push
jle
inc
push
iret
inc
push
aas
pop
or
sbbl
jo
std
enter
lds
bound
push
movsb
xor
mov
loop
out
push
or
sub
or
jae
adc
outsl
mov
hlt
int3
adc
jb
pop
imul
cli
push
daa
push
and
adc
mov
mov
mov
icebp
enter
push
cld
or
push
xor
test
mov
scas
pusha
fmul
jbe
inc
inc
stos
push
xchg
push
lods
scas
rcl
push
inc
cmc
jmp
mov
jbe
imul
inc
mov
xorb
or
xlat
loop
mov
sbb
pop
xlat
out
fisttps
mov
lods
jnp
aad
rol
in
pop
or
stos
add
pusha
insl
jge
dec
inc
outsl
rorb
dec
push
cmp
dec
inc
cli
cs
mov
shll
sar
mov
cmp
mov
xchg
sti
mov
jae
aam
lcall
push
or
sti
call
aas
jp
in
ss
pop
pop
xchg
mov
xchg
adc
loopne
aam
aaa
outsb
ljmp
fisubl
insb
mov
fsts
or
cmpsl
jne
pop
shlb
dec
int3
lods
cld
sub
sub
or
fnsave
push
rcl
insb
or
cmp
jb
and
sub
pop
shl
addl
cmpsb
and
lret
xorb
xchg
jg
pop
sbb
or
add
sbb
fnsave
dec
stos
mov
test
jne
jmp
xchg
lret
mov
fmul
repz
fildl
out
fiadds
adc
cltd
ja
test
xor
shrl
rclb
mov
dec
loopne
int
daa
jno
loopne
pop
mov
scas
cmp
ds
inc
dec
dec
pusha
add
mov
leave
in
scas
jne
jmp
insb
cvtdq2ps
rcrl
loope
insl
cs
inc
ret
mov
and
mov
notl
jns
lret
pop
push
inc
in
push
pop
add
aam
lds
mov
int3
test
cs
mov
stos
mov
sti
mov
push
adc
jmp
jmp
icebp
popw
inc
lock
pop
loopne
pop
shll
dec
xchg
lea
int3
test
mov
pop
pop
cmpsb
sbb
xor
mov
int
notb
push
xchg
and
jecxz
aad
pop
icebp
mov
sarl
scas
xor
push
lods
js
push
xor
notb
sbb
jae
sbb
das
mov
mov
push
clc
test
addb
sbbb
or
mov
mov
cmpsb
push
or
lea
push
popf
sub
adc
mov
or
mov
leave
gs
mov
ds
mov
daa
push
mov
pop
cs
xor
into
or
andl
iret
mov
loopne
roll
int
cmp
jg
cmpsb
jmp
orl
jns
mov
mov
or
imul
mov
add
std
cmp
cmp
sarl
xchg
sub
sub
popa
fisubs
mov
adc
push
inc
outsb
lcall
or
pop
inc
insl
mov
js
cmpb
pop
jnp
jle
xchg
mov
mov
cmpsb
jg
loope
js
mov
adc
cltd
push
sahf
jmp
xchg
push
stos
les
cmc
mov
mov
repz
daa
fildl
data16
mov
or
mov
cmp
jge
imul
mov
mov
mov
xchg
out
fsubrs
ss
sub
and
xor
or
stc
xchg
pop
sbb
sub
and
scas
or
mov
push
cmp
mov
xor
fdivs
cmp
cwtl
adc
ljmp
cmp
ret
pop
adc
jo
mov
sbb
lock
and
mov
das
test
add
cmovge
mov
rcrb
or
pop
sub
dec
mov
ja
std
hlt
inc
popa
aas
dec
dec
int3
xor
int
sbb
mov
jb
or
mov
xchg
inc
movsl
out
stos
sbb
push
sbb
repnz
sub
and
into
dec
sbb
sbb
repnz
cwtl
mov
in
jae
cmp
insl
movsb
and
sub
lahf
pop
xchg
sbb
cmp
mov
mov
iret
into
addr16
insb
clc
adc
jmp
ljmp
jae
or
mov
sub
loopne
clc
xchg
mov
sub
xorb
enter
cmp
loopne
aam
insl
mov
sbb
imul
icebp
nop
mov
stc
push
mov
and
xchg
fwait
rorb
push
fwait
mov
ja
sbb
jno
scas
sub
aad
sbb
or
in
cwtl
mov
sub
jge
andb
xor
rolb
fwait
ret
mull
pop
sbb
ljmp
sbb
mov
mov
daa
pop
clc
fildll
and
inc
shll
pop
pop
xor
add
push
lret
sub
pop
add
xor
xor
daa
lods
dec
rolb
sbb
inc
fdivr
add
or
js
and
jp
fisubl
xorb
out
stos
fadds
adc
testb
sbb
dec
out
adc
daa
add
ret
xor
mov
mov
adc
pop
cmp
ret
fwait
in
mov
fcoml
test
mov
sub
data16
mov
stc
pusha
fidivl
jnp
lds
dec
arpl
dec
aad
insb
sbb
push
sbb
xchg
mov
mov
cli
mov
data16
ret
xlat
cmp
or
push
inc
out
push
xor
xor
adc
push
vcvttsd2si
push
jno
adc
pop
jb
aad
test
cld
rcl
insl
mov
add
das
add
pop
in
inc
shrb
nop
clc
js
and
sub
xor
xchg
push
dec
jecxz
out
xor
sbb
pusha
jle
lcall
ds
xchg
mov
scas
arpl
fldl
add
je
jne
pop
pushf
jb
pop
out
cmp
in
and
dec
or
popa
add
dec
sbb
push
das
lods
pop
xlat
pop
imul
and
lods
test
loop
mov
or
fdivr
dec
xchg
sub
loope
sahf
mov
mov
flds
dec
cmp
cmpl
mov
stos
jge
add
in
mov
inc
shl
outsb
mov
jecxz
roll
xor
jnp
inc
mov
rcrl
or
movsb
xor
mov
push
adc
add
mov
push
mov
dec
push
xchg
mov
xor
lahf
fdiv
pop
pop
in
sub
and
add
xchg
lods
jbe
insb
or
aam
loope
pop
out
dec
mov
cmp
test
and
mov
insb
adc
xlat
push
sbb
andb
xchg
scas
pop
push
pop
out
dec
dec
mov
fistpl
jge
iret
mov
pusha
mov
xchg
addl
add
popa
xlat
sbb
popa
add
dec
and
aam
leave
sub
ds
call
out
mov
iret
mov
iret
cmp
jl
ds
cs
pop
or
mov
mov
sbbl
jp
jg
xlat
mov
nop
cli
mov
dec
mov
push
subl
xchg
test
dec
cltd
mov
dec
push
xchg
pop
adc
xor
jne
outsl
daa
fwait
out
and
inc
push
mov
repz
cmc
cmp
pop
mov
push
mov
push
mov
or
es
mov
xchg
sbb
jns
xor
pop
pop
out
mov
test
cmp
push
cmp
xor
add
loop
xor
lss
lods
rcll
out
int3
jg
inc
or
jae
push
push
or
xor
shlb
loop
into
push
pop
mov
pop
xchg
pop
ds
mov
fmulp
adc
imul
out
adcl
cwtl
out
or
mov
sub
sahf
pop
lods
hlt
lahf
xor
pop
or
sbb
out
xchg
pop
sub
push
loop,pt
add
in
lock
jb
repnz
fstps
repz
sbb
jl
fwait
xor
adc
cmc
jno
push
je
sarb
inc
or
xor
mov
mov
fdivs
inc
enter
repnz
push
sub
jne
push
sub
into
and
or
mov
jg
in
mov
shll
cs
es
lret
fistpl
cmp
add
add
bsr
fistpl
popf
faddl
out
mov
dec
fucomip
sahf
faddl
cmp
ret
inc
adc
dec
xlat
mov
data16
inc
adc
jb
ljmp
mov
sub
inc
test
pop
aas
push
dec
cs
les
mov
int3
jp
sbb
dec
push
aaa
notl
inc
mov
and
push
pusha
dec
fstpt
scas
repz
push
pushf
lds
mov
push
jg
int
fsubrl
stc
sbb
cmp
lret
sbb
mov
xor
sbb
lret
addr16
dec
sahf
lcall
inc
jg
lods
push
scas
mov
sub
add
je
cmp
std
mov
cld
imul
arpl
pop
bound
mov
adc
jmp
cmp
adc
push
das
sti
mov
and
mov
pushf
adc
pusha
std
and
movsb
xor
js
pop
addr16
and
idivb
mov
shr
orl
ret
jg
outsl
xorb
pop
popf
popa
sbb
push
cmpsl
lock
jno
add
push
scas
loope
outsb
fcomps
insb
add
jnp
or
add
mov
dec
mov
inc
add
cltd
sub
xchg
arpl
lods
imul
pop
ss
lds
sbb
or
sbb
xchg
addl
popa
jg
rorb
loope
xchg
sbb
test
dec
loope
push
aas
mov
data16
outsl
mov
ss
insb
sbb
data16
push
push
push
fcoms
push
pop
dec
stos
add
xchg
je
cmp
popf
jne
int3
insb
mov
aam
std
scas
sub
fstl
cmp
insl
test
mov
dec
push
out
push
fdivs
mov
mov
out
or
shlb
inc
xchg
mov
ret
fwait
int
addl
add
fiadds
in
insl
mov
sub
int3
subl
sahf
cmp
jle
pop
rcl
mov
jecxz
daa
inc
xchg
add
scas
xchg
ja
mov
cld
ds
lods
cmc
pop
iret
mov
sub
int3
xor
daa
xor
popa
scas
mov
xor
hlt
mov
and
mov
xchg
aam
push
inc
int
test
ror
imul
mov
xor
dec
pop
and
movsb
loopne
adc
aas
or
cmp
mov
inc
sti
mov
or
andb
or
sbb
push
adc
pop
adcb
in
cs
aam
and
loop
stc
mov
cmpsb
jb
repnz
mov
inc
pop
dec
push
add
push
cwtl
fsubl
loopne
sub
mov
pop
xchg
and
fdivrs
mov
jns
in
insb
insb
jo
test
mov
les
mov
inc
shrl
add
and
cmp
mov
cmp
rclb
mov
xor
sbb
lds
mov
inc
sarb
clc
xchg
sub
push
jae
and
cmc
push
cmc
out
and
xchg
cli
in
mov
cmp
popf
push
and
mov
adc
in
arpl
sahf
imul
in
inc
cmp
and
movsb
push
pop
mov
xchg
ds
mov
sbb
pop
iret
add
cltd
cltd
lcall
leave
sub
nop
jns
insb
mov
je
jle
mov
or
and
subb
ja
xchg
arpl
fcoms
cltd
mov
jno
push
cwtl
repz
outsl
lock
loope
push
mov
cmp
mov
dec
dec
pop
push
push
pop
push
pop
push
push
push
pop
inc
sbb
jmp
or
pushf
aaa
push
xchg
imul
mov
aam
sbb
cmpsl
negb
int3
popf
ds
sar
sub
push
lret
jns
mov
test
mov
xchg
pop
rorb
jne
cmp
lret
push
int3
mov
xor
lahf
inc
popf
and
ret
gs
ja
aaa
push
in
js
add
or
subb
pop
adc
ja
insb
jl
or
lret
push
lahf
dec
pop
xchg
dec
insl
mov
mov
adc
pop
xor
pop
ljmp
or
jnp
inc
in
inc
ds
pop
mov
push
dec
xor
inc
sub
dec
mov
outsb
jg
sbb
and
cltd
adc
or
fsubr
xorl
arpl
scas
jb
popa
push
cwtl
xor
adc
outsl
out
ficoms
mov
and
sbb
xorb
and
mov
xor
push
insl
sahf
xchg
sbb
stos
nop
and
jg
and
out
mov
pop
testb
inc
in
enter
push
sbb
roll
int3
push
mov
test
aad
or
mov
or
sbb
pop
rcl
xor
xor
fdivl
xor
pop
mov
pop
mov
mov
xchg
daa
stos
push
cltd
sbb
out
pusha
pop
cmc
mov
cmp
push
aas
cli
mov
mov
ficomps
pop
add
mov
and
sub
insl
clc
push
push
mov
sub
lods
imul
cmp
aam
cmp
pusha
jno
and
in
shlb
fdivrs
icebp
or
adc
imul
push
mov
jle
lcall
roll
out
fnstsw
lret
push
push
and
pushf
stc
cmp
jns
je
movsl
jmp
into
addr16
in
xor
inc
lret
jne
lea
mov
mov
out
and
cmp
sub
mov
and
or
mov
sbb
lods
shll
es
dec
mov
mov
call
shlb
sub
inc
pop
xor
push
xchg
inc
mov
imul
mov
shll
and
mov
sub
test
push
push
cld
jl
push
iret
adcl
iret
pop
push
arpl
sbb
xor
loopne
add
test
ljmp
pushf
xor
pop
ror
test
les
frstor
push
adc
inc
pop
clc
jno
cwtl
dec
adc
or
pop
jb
roll
fsubrs
mov
rolb
mov
lds
negl
loop
jle
sar
xchg
aas
ja
int3
dec
xor
popf
call
xchg
rcrl
adc
pop
aas
repz
or
in
xorl
add
je
sub
mov
adc
dec
jns
adc
mov
push
jno
sub
bnd
loope
lahf
in
mov
orl
addl
popa
pop
mov
adc
mov
mov
aas
outsl
out
in
xor
add
xchg
out
and
mov
jne
mov
push
pop
andl
es
int3
lods
sbb
repnz
push
mov
rolb
ud2
test
arpl
ja
pop
stos
sub
and
add
push
les
jnp
test
in
cmp
fsubrl
or
jne
fsub
mov
mov
push
hlt
xor
loope
or
test
and
cs
xor
sahf
ds
and
jno
stos
mov
cmpsl
sbb
int
test
dec
add
jl
cmp
loop
push
mov
out
out
lock
adc
lahf
pop
cmp
xorl
mov
cmp
scas
push
sub
pop
notl
or
rorl
add
and
jg
jmp
lock
andb
push
cmpsl
loopne
test
je
rcrb
int3
gs
sub
or
or
push
loope
leave
lea
popf
cs
aam
test
jb
roll
cmpsb
jp
adc
nop
push
shlb
negl
sti
insb
pop
inc
pop
lret
call
jb
mov
xlat
ret
mov
stos
insb
push
jmp
sub
sbb
fstpt
add
cmp
or
inc
ljmp
push
jae
es
xchg
loope
xchg
aam
jne
and
inc
add
insl
aad
das
mov
xchg
in
in
jae
pop
in
jnp
sbb
mov
adc
fstps
nop
es
or
add
in
pop
out
aaa
lret
fcomps
aad
es
push
adc
and
stos
aam
mov
sbb
cmp
sahf
flds
and
mov
ljmp
dec
mov
and
andb
das
aaa
fisubrs
cltd
mov
sbb
add
arpl
sahf
add
xchg
mov
orl
xchg
fnstenv
lods
xor
and
push
push
sbb
lret
in
adc
add
jge
push
test
lock
leave
push
inc
outsl
sbb
cmpsb
ret
dec
es
mov
mov
and
in
test
mov
cwtl
idivl
add
mov
fwait
xor
ja
fistps
addb
add
sbb
dec
cmpsl
cli
jle
sar
or
xchg
lahf
negl
inc
mov
sub
xlat
pop
pop
cmp
cmpsl
insb
lret
jno
and
fs
push
loopne
mov
into
into
sbb
popf
std
and
dec
push
mov
ja
adc
inc
push
mov
xor
push
or
add
sub
rcr
jge
sarb
das
out
dec
add
into
lret
stc
mov
or
or
pop
and
adcb
add
push
mov
loope
data16
push
dec
or
pop
roll
std
add
inc
enter
lahf
filds
xchg
enter
lcall
adc
xchg
loopne
add
sub
or
jle
sub
mov
sub
cmc
mov
inc
add
les
icebp
es
xchg
loop
fs
movsl
lcallw
lret
in
inc
and
cli
pop
sub
aam
mov
push
out
lock
cmp
outsl
repz
in
and
fstpl
mov
shr
lcall
push
push
je
push
pop
imul
xchg
jns
ret
mov
cmc
fistl
and
cs
addr16
mov
int3
adc
jp
inc
loopne
js
pop
dec
test
mov
push
jecxz
mov
mov
mov
clc
or
inc
fdivrl
sar
loopne
inc
subl
and
lret
add
outsb
movsb
adc
xchg
int3
and
push
xlat
shl
or
les
add
pop
out
lret
jg
cld
mov
pop
pop
dec
loopne
inc
sub
js
adc
jp
imul
dec
fildl
cmp
sub
pop
stc
incb
sbbl
mov
rcll
icebp
mov
jns
daa
adc
fdivp
push
inc
dec
in
inc
imul
out
cmpsb
movsb
outsb
cld
push
ljmp
les
add
orl
flds
cmp
jns
sub
xchg
scas
loopne
je
pop
iret
mov
stc
add
andl
stos
bound
dec
arpl
mov
jl
orb
pop
ror
sub
pop
std
fwait
mov
or
xor
mov
adcl
fwait
mov
pop
jbe
sbb
daa
lcallw
xchg
push
dec
add
mov
mov
insl
and
aam
test
cmc
mov
mul
push
hlt
push
cmpl
xorb
and
andb
les
hlt
xor
cld
clc
pop
sub
addr16
dec
xlat
jle
sbb
out
aam
and
arpl
mov
lcall
sub
je
stos
jmp
shll
in
out
or
jle
lahf
lock
cltd
hlt
mov
dec
inc
lds
jns
out
lock
das
negl
push
rcl
out
push
xchg
into
ds
xor
inc
push
pop
addr16
lds
jle
mov
pusha
push
add
jmp
mov
in
scas
mov
push
push
xchg
and
test
ret
outsb
int3
mov
pop
jbe
xchg
sarl
loop
stc
mov
mov
movsl
xor
sbb
out
movsb
dec
lret
mov
sti
das
jp
lahf
or
sarl
add
fsubrp
xlat
iret
enter
mov
lret
inc
pop
les
mov
dec
aas
cmp
inc
jae
cmp
push
and
push
jge
shll
mov
push
fstpt
dec
push
hlt
pop
xchg
into
cltd
popf
xorl
push
fimuls
jp
loopne
adc
sbb
xchg
jno
cmc
dec
jnp
hlt
cmpsl
inc
js
dec
insb
stos
pop
mov
push
dec
leave
in
arpl
push
ror
push
shlb
mov
mov
lret
scas
adc
data16
nop
mov
xor
sub
movsl
push
push
in
cmp
lods
xchg
fsubrs
mov
test
lea
aam
mov
mov
out
or
mov
in
aam
daa
aaa
fidivrl
sub
xor
fstps
cmp
test
pop
inc
push
push
sti
shl
or
cwtl
sub
or
fisubs
xchg
xor
hlt
out
nop
jbe
inc
adc
in
xchg
push
sbb
loope
ds
inc
cmc
pop
negl
out
sbb
jmp
mov
fistpl
out
lcallw
add
push
and
icebp
test
rorl
mov
lret
dec
pop
inc
out
in
xchg
aaa
inc
xlat
inc
push
mov
pop
xchg
push
inc
ret
mov
lahf
ret
pop
and
xor
in
gs
and
mov
test
pop
incb
and
jmp
inc
jl
mov
or
cwtl
inc
xor
mov
lds
or
pop
jp
sub
popf
jnp
and
in
xchg
pop
push
push
fcmovnb
aaa
or
mov
pop
jge
mov
and
cli
lahf
ljmp
sub
rolb
std
mov
jl
lea
mov
mov
std
xor
dec
xchg
popf
xchg
mov
cmp
jg
xor
add
test
test
cltd
push
imul
jnp
subl
dec
fsubrl
aad
and
mov
mov
daa
or
xchg
adc
dec
rclb
or
enter
lds
and
stos
sub
ds
or
inc
clc
jb
mov
lret
xor
in
push
adc
jbe
inc
jl
pop
push
aam
add
fwait
xchg
or
xchg
data16
es
daa
outsb
jge
das
pop
pop
das
xchg
sub
pop
cld
pop
lcall
aas
xorb
and
xor
aas
cmc
lahf
cli
test
aam
shll
test
subb
mov
mov
pusha
mov
test
loop
xor
loope
inc
mov
movsl
not
push
inc
lods
test
icebp
es
cmpl
pop
push
and
jl
fisttps
cmpsl
mov
xchg
adc
xor
cmpsl
mov
cltd
fwait
xor
mov
inc
sbb
cmp
xor
rcrb
mov
xor
sub
mov
clc
imul
or
mov
out
mov
movb
xchg
pop
js
jecxz
scas
mov
xchg
faddl
or
rolb
xchg
push
fs
movsl
cmp
mov
sub
dec
test
or
mov
je
xor
xor
leave
shr
lock
nop
or
mov
pop
dec
cmpsl
or
mov
push
adc
sub
sub
add
jp
testl
test
into
daa
stos
xor
push
aad
pushf
test
and
in
fbld
push
dec
xor
sub
jbe
test
xchg
mov
std
mov
divl
fcmovnbe
sbb
cltd
and
add
jnp
pop
ja
insl
fldt
mov
jecxz
sahf
sbbl
push
std
cmp
out
loopne
adc
rolb
mov
sbb
cmpb
add
popf
bound
xchg
aad
cmp
sub
lahf
cs
lcall
mov
jl
pop
xchg
push
pop
lret
jp
mov
mov
and
int3
into
dec
ret
cmp
js
int3
mov
repnz
mov
sbb
push
push
jp
stos
sub
xchg
cmp
popa
xchg
fwait
aam
in
push
data16
or
mov
and
pop
cwtl
ret
sbb
mov
aad
or
xchg
jo
push
inc
add
cli
lret
mov
mov
and
push
outsl
jns
push
cltd
adcb
adc
fidivrs
imul
lods
cld
mov
dec
sarb
sub
jmp
xchg
mov
popa
in
aam
pop
fldt
lock
add
int3
outsb
cld
test
sub
pop
mov
mov
fsts
jmp
mov
mov
and
sub
mov
popf
sub
fidivrl
jb
xor
nop
jno
sub
cld
imul
push
in
or
xor
movsl
dec
fiaddl
xor
push
fists
popf
mov
mov
or
add
mov
mov
push
scas
in
cmp
out
xchg
jp
popf
imul
aad
push
fildll
lahf
and
aas
mov
hlt
jle
stos
add
inc
cmp
mov
lcall
sbb
xchg
sub
add
sahf
movsb
mov
jbe
inc
in
push
xor
xor
lret
sub
cmp
iret
xchg
inc
int3
push
outsl
insl
mov
push
out
gs
add
sbb
shrl
mov
xchg
in
ss
stos
and
mov
xor
xchg
adc
dec
xor
jo
aaa
in
out
lods
imul
sarl
or
xchg
cmp
push
shrl
cmc
xchg
sbb
mov
shrb
push
push
test
add
push
xchg
cmpsl
mov
lods
sbb
in
adc
push
or
imul
nop
jne
sbb
fcoml
push
decb
scas
mov
lcall
sub
add
arpl
iret
xchg
loop
sarb
mov
lods
xor
psrld
sti
pop
loope
in
xchg
int
dec
mov
shl
add
decl
fcompl
lcall
xor
aam
lea
fwait
xchg
sbb
cltd
mov
inc
push
inc
or
out
push
stos
lret
sub
cmp
sbb
push
arpl
movsb
scas
mov
xchg
jl
or
lock
mov
data16
mov
stos
outsb
shlb
ds
rclb
pusha
icebp
pushl
sbb
notb
cs
repz
push
scas
mov
pop
sar
rclb
cmp
xchg
pop
cwtl
inc
adc
and
mov
mov
outsl
push
mov
adc
inc
adc
ret
lret
push
inc
push
into
mov
scas
add
sub
insl
sbb
xchg
or
mov
cmp
dec
inc
cmpsl
add
cmp
aaa
mov
mov
inc
cs
imul
pop
out
es
int
popf
xor
dec
sub
sbb
pop
mov
leave
push
fisubs
movb
or
xlat
negl
jae
pop
xchg
inc
or
dec
ret
sarb
and
xchg
xor
xor
xchg
inc
push
cmpsl
ret
daa
test
repz
sub
cmp
ljmp
mov
mov
pop
xor
mov
inc
inc
ja
inc
out
testl
adc
lods
inc
mov
mov
inc
in
fldlg2
stos
or
dec
fcmove
jo
aam
scas
movsb
outsb
xor
insl
daa
mov
andl
inc
cmpsl
mov
xchg
pop
push
mov
xchg
pop
rdtsc
sub
cmp
ret
out
sbb
cmpb
fs
pusha
sbb
mov
or
pop
cmp
and
or
fs
lods
push
scas
or
jns
pop
inc
aas
movsb
jb
leave
or
mov
in
push
dec
scas
cmp
mov
and
mov
xchg
sub
popf
nop
sub
jns
cs
shl
inc
dec
push
jae
jnp
mov
inc
adc
out
dec
icebp
cli
inc
pop
push
negb
inc
or
push
jp
rcrb
jbe
xchg
mov
xchg
and
stc
sti
mov
inc
lods
and
jnp
lods
push
xor
gs
adc
cld
inc
xchg
stos
inc
mov
inc
pop
adc
adc
xor
lahf
idivb
inc
sbb
xchg
cmp
in
add
jg
add
cs
cmp
aam
icebp
xchg
fwait
xor
adc
pop
or
mov
aaa
lock
sarb
sbb
pop
sbbl
ret
mov
nop
mov
sbb
outsl
rol
pop
mov
outsb
popa
push
jnp
outsb
push
cld
add
je
lods
clc
pop
push
les
insb
imul
jle
pushf
mov
jns
icebp
jnp
sbb
scas
push
arpl
addr16
xchg
dec
jge
fcoms
push
call
add
push
icebp
daa
int3
fmuls
inc
cli
sbb
fsts
push
xchg
inc
mov
popa
js
pusha
pop
outsb
je
jp
test
test
sti
dec
mov
mov
pusha
jmp
xchg
mov
lods
jae
jbe
pop
inc
xlat
sub
push
mov
sbb
sbb
dec
sarb
mov
int3
arpl
xchg
xor
push
mov
shr
filds
out
pop
imul
cmpsl
pusha
clc
inc
test
mov
jmp
push
daa
mov
xchg
call
mov
std
sbb
sbb
dec
push
cld
xchg
dec
fcomip
bound
loop
data16
ss
and
popf
psrlw
pop
jae
add
add
jp
mov
mov
or
addr16
in
sbb
rcl
fwait
jecxz
scas
in
pop
add
out
iret
adc
mov
dec
iret
fsqrt
inc
mov
cli
ljmp
inc
inc
fdivl
xchg
shl
inc
jnp
inc
fsubr
leave
adc
add
pop
add
loope
stos
xlat
outsb
adc
xchg
sbb
insl
inc
xchg
xchg
pop
insl
push
and
es
into
push
test
daa
rcr
and
mov
jbe
cmp
mov
ret
call
jmp
jns
daa
repnz
bnd
shll
scas
add
clc
daa
js
movsb
fmull
xchg
push
cmp
jne
lret
push
fld1
addr16
or
push
sbb
sub
int3
cmp
test
mov
lret
pop
dec
int
jnp
mov
sbb
mov
gs
and
scas
out
cmpsl
repnz
ret
pop
pop
xchg
mov
push
mov
inc
imul
mov
mov
or
jl
ljmp
push
jno
push
stos
mov
push
std
sbb
mov
jnp
lahf
jg
icebp
in
sbb
jge
sub
sbb
ljmp
inc
aam
jp
into
loop
push
mul
mov
xchg
rcl
insl
mov
in
sti
test
inc
xlat
sbb
pop
es
ljmp
out
insl
gs
adc
mov
jno
shll
cli
fdivl
inc
cwtl
dec
inc
and
jmp
pop
arpl
pop
xchg
cld
lret
pop
inc
nop
shrb
jne
stos
ljmp
addr16
push
adc
adc
cld
out
enter
add
add
jnp
shll
pop
add
sbb
orb
xor
adc
xchg
xchg
sbbb
mov
iret
cmp
dec
xchg
jns
cmp
mov
pop
js
cli
fildll
lock
push
and
pop
imul
mov
push
lods
jae
cmp
add
pop
ds
lahf
push
scas
addb
and
inc
sarb
add
out
lods
andl
mov
pop
mov
jge
jle
xor
xor
cwtl
and
or
jo
aaa
data16
popa
mov
sbb
lret
and
inc
xchg
sub
or
lahf
int3
popa
jmp
or
lahf
call
scas
mov
pop
fistpl
cmp
push
or
adc
rolb
add
jb
xor
or
in
jo
xor
xor
and
xchg
mov
cmpsb
push
pop
jmp
std
jnp
sbb
add
fcmove
clc
fidivrs
jae
mov
test
mov
push
lret
inc
pop
fcoms
jnp
sbb
cmp
mov
test
inc
ja
xor
pushf
sub
cwtl
hlt
xchg
cli
cmp
movsl
icebp
lret
add
orb
lahf
or
ffreep
xchg
adc
imul
cmp
sbb
cld
arpl
mov
enter
mov
mov
fnstenv
lahf
sbb
pop
jns
movsb
pusha
insl
loop,pn
test
js
push
sahf
data16
jg
jmp
cltd
push
mov
popa
adc
xlat
scas
mov
pop
or
and
pop
jb
sbb
pop
das
into
and
es
popf
addr16
lds
adc
xor
and
xchg
mov
mov
adc
xchg
imul
mov
pushf
xchg
stos
decl
mov
fildl
or
sub
mov
xlat
push
and
jle
jne
mov
dec
sub
sar
xor
adc
cmpsb
gs
xchg
imul
inc
mov
push
xchg
lds
jmp
pop
stos
push
pop
inc
sub
mov
push
aad
test
mov
or
inc
test
mov
lods
outsb
cmp
cmpsl
or
sub
enter
enter
sbb
sub
mov
dec
dec
adc
dec
jno
mov
and
pop
addr16
rorb
pusha
push
lcall
jno
dec
ljmp
xlat
daa
addr16
sbbb
add
adc
mov
rcrb
sbb
jmp
push
adc
lods
xor
dec
mov
pusha
cwtl
popa
sahf
lods
xor
jle
or
and
pop
push
xorb
pop
sbb
fs
fwait
ljmp
sub
mov
push
mov
das
ds
cltd
test
mov
test
mov
cs
out
inc
mov
in
lea
arpl
mov
jecxz
fcomps
out
nop
or
xor
imul
inc
and
in
inc
nop
push
sti
and
int3
arpl
pop
mov
movl
negl
aam
sbb
push
loope
pop
addl
adc
repnz
xchg
dec
cmp
mov
cmc
lahf
and
fisttps
and
and
gs
int
jbe
data16
lds
fs
inc
fdivl
ja
mov
dec
and
popf
adc
into
mov
sub
mov
cmp
fsubr
stc
jbe
xor
popa
xchg
sbb
popf
fdiv
or
add
push
neg
pop
pushf
push
mov
inc
sbb
dec
into
cmp
sbb
mov
push
in
or
mov
pop
mov
mov
or
loop
aad
jmp
clc
call
inc
fwait
cltd
jmp
lret
fcompl
data16
add
icebp
mov
movswl
lds
mov
inc
sbb
xchg
imul
jmp
pop
repnz
mov
mov
xchg
adc
jo
aad
orb
std
cs
orl
ret
inc
dec
dec
cmp
xor
das
adc
test
mov
dec
in
mov
scas
testl
pop
cwtl
push
xchg
mov
cmp
or
push
xchg
mov
jno
push
mov
std
xor
and
mov
outsb
rcrl
fisubl
fnop
jno
adcl
out
xchg
out
fwait
lods
int
dec
sub
ss
xor
inc
push
push
cld
xchg
cld
jl
fcompl
adc
jbe
pop
dec
xchg
subb
arpl
into
xlat
outsl
mov
dec
xchg
sub
imul
std
bound
test
mov
sbb
stos
data16
jne
add
lret
cmp
dec
leave
dec
enter
cmc
mov
aad
shlb
loop
pusha
mov
mov
push
add
loop
and
loopne
outsb
pusha
push
imul
pop
inc
xor
ss
mov
ljmp
or
jmp
sbb
mov
inc
aad
mov
fucomp
arpl
aaa
fdivl
cltd
push
mov
ljmp
jno
and
jmp
fwait
mov
mov
or
cmpsb
push
push
lretw
adc
dec
iret
movb
mov
addr16
mov
call
notl
inc
push
repnz
int3
lds
int
jae
fildll
xchg
cmc
xchg
pop
out
cmc
mov
sbbl
jns
mov
xchg
xcrypt-ctr
cmpsl
fnsave
in
add
scas
pushf
cld
into
inc
lcall
adc
out
fmuls
lea
push
xlat
scas
gs
mov
mov
cmp
int
add
dec
insb
roll
setbe
push
pushfw
aaa
and
loope
jbe
stos
out
push
pop
or
cmp
adc
inc
pop
cmp
cmpb
inc
cwtl
in
xor
stos
mov
jne
dec
xchg
add
xchg
xchg
xor
hlt
ja
sub
shl
or
xor
sbb
xor
inc
and
shlb
loop
daa
sbb
and
push
scas
iret
jp
test
add
inc
popf
rcrb
int
mov
xchg
insb
xchg
testl
push
sbb
mov
loope
mov
bound
sbb
mov
out
xchg
add
xor
int
and
or
ljmp
jmp
jo
cmpsb
xchg
sbb
jp
pop
and
pop
sub
mov
add
out
int3
leave
rcl
mov
loopne
pop
xchg
xor
jecxz
adc
xor
mov
cmp
fists
cmp
sbb
sti
inc
out
int3
fs
lds
and
push
rorl
divl
jge
dec
dec
pop
sarl
lret
scas
sbb
stos
scas
icebp
sahf
adcb
and
xchg
push
rolb
movsb
push
in
mov
inc
dec
fnstsw
mov
dec
lret
stc
cwtl
sub
cmp
lret
lret
shrl
pop
xor
or
pop
loope
test
mov
mov
and
fimull
je,pt
ljmp
or
idiv
dec
push
int3
shll
in
jl
pop
xchg
dec
cmp
ljmp
loop
dec
add
pop
sub
or
into
sub
leave
aad
add
dec
outsb
js
repz
jl
cwtl
xorb
cmpsw
mov
ds
mov
dec
add
add
sti
rorl
pop
popf
int3
and
sub
push
sbb
push
adc
and
xor
mov
and
cmp
inc
xchg
shll
jge
mov
jo
jae
pop
insb
lds
ret
pop
mov
cmp
mov
adc
mov
mov
test
imul
sub
mov
stos
mov
add
adc
cmp
mov
mov
fs
jle
lahf
cmp
inc
mov
cs
adc
dec
push
jmp
std
xor
jle
sub
jmp
mov
cmc
adcl
sbbb
and
jnp
mov
cmp
sbb
movsb
fs
xor
ret
scas
mov
mov
stos
sub
lea
cmp
pop
lods
aam
cmp
mov
mov
jno
jnp
loope
bound
lock
popa
xchg
data16
jbe
loope
dec
xchg
ja
mov
sub
mov
sub
push
and
dec
xchg
adc
push
sbb
inc
sbb
push
inc
cmp
into
shll
iret
popf
rcrl
pop
xchg
mov
inc
lahf
fistpll
cwtl
scas
loope
push
mov
mov
and
ljmp
pushf
es
sbbl
push
repz
outsl
xchg
jbe
outsl
insb
clc
and
adcb
dec
in
int
shlb
jns
dec
out
xchg
sahf
xchg
cmpsb
mov
lret
adc
mov
insl
clc
mov
sbb
inc
push
mov
cwtl
mov
mov
or
mov
sti
insl
and
repz
rcrl
insb
dec
cmp
fildll
inc
shr
push
inc
and
shr
ljmp
add
xor
or
fbstp
pop
add
aaa
inc
mov
jae
jns
hlt
faddl
mov
jno
mov
or
icebp
rolb
test
mov
cmp
stos
addr16
outsl
inc
and
dec
cwtl
lahf
fsubr
addr16
mov
fistpl
mov
cmp
mov
jns
lahf
mov
xchg
out
jle
and
into
cli
cmp
push
dec
lret
inc
fcmove
in
add
test
data16
mov
rorb
scas
stc
jo
pop
popa
adc
cmp
stc
stos
pop
mov
push
cmpsl
push
cmp
mov
mov
shl
xor
push
cli
mov
cmp
cmp
inc
jae
and
jge
fnstcw
xlat
mov
pop
lods
add
out
test
mov
in
add
xor
push
pop
jl
jne
scas
scas
imul
lahf
and
es
push
and
insl
icebp
insb
cmp
outsl
xchg
push
push
sarl
mov
scas
or
jne
push
ror
or
in
mov
fdivrl
mov
fisubrs
outsl
xor
jo
mov
incl
stos
jecxz
cld
cwtl
imul
adc
xlat
aad
pushf
ret
dec
push
pop
sti
je,pn
mov
ret
jp
adc
sub
jp
jno
xor
rorl
xchg
test
aam
out
push
pushf
jp
loope
mov
pop
icebp
sahf
or
test
fidivl
inc
jp
add
testl
sbb
cld
jnp
mov
int
cwtl
adc
test
xchg
push
jae
xchg
jp
sbb
xor
enter
mov
or
add
cmpb
or
mov
xchg
dec
test
add
xor
dec
into
sub
shlb
adc
pop
imul
cwtl
or
pop
inc
daa
roll
insl
pop
stos
inc
mov
outsl
test
cmp
sub
test
mov
cmp
mov
neg
movsb
pop
mov
mulb
adc
sahf
mov
loope
mov
xchg
popa
cli
add
inc
jl
add
mov
cmp
mov
hlt
mov
sbb
add
xchg
divl
jmp
lock
jb
mov
push
pop
dec
pop
jl
outsl
pop
add
out
push
std
fimull
in
jb
jg
nop
aaa
addr16
sub
sbbl
xchg
mov
int
mov
test
or
or
mov
in
shl
mov
xor
enter
outsl
pop
pop
into
jle
lcall
inc
sub
mov
dec
ja
repnz
mov
leave
fwait
jg
fdivrs
mov
js
jae
jbe
test
fld
xor
pop
xchg
dec
aam
in
in
and
fwait
movsl
sti
mov
out
mov
and
int3
push
daa
mov
cs
sbb
or
adc
ja
adcl
sub
and
call
cwtl
push
pop
mov
mov
imul
dec
dec
repz
fst
push
ds
rcrl
dec
push
pop
popa
jg
push
xchg
ljmp
cli
inc
sub
mov
cmp
outsb
xor
mov
jae
sub
pop
in
dec
jg
xor
out
lods
sbb
pop
sbb
inc
imul
mov
bnd
outsb
pusha
arpl
push
fidivl
xchg
jge
fisttps
mov
jns
or
sbb
pop
dec
mov
sub
aas
ja
xchg
outsb
lods
or
insb
xchg
outsl
mov
pop
sub
fadds
push
xchg
pop
stos
mov
push
int3
repz
in
je
sub
shlb
scas
pop
dec
dec
sbb
lret
data16
fwait
addl
inc
sbb
fbld
lock
sbb
jne
test
mov
xor
pushf
outsb
mov
xor
mov
mov
shrl
mov
inc
lahf
sbb
adc
jp
push
and
or
ljmp
repnz
rorb
shlb
jnp
out
outsb
and
mov
jg
inc
jae
aad
mov
jb
subb
xchg
shr
enter
pushf
pop
jne
jae
lods
sub
iret
outsb
add
stos
mov
addr16
sti
lret
sbb
aas
inc
cmp
mov
cmp
sbb
mov
int3
out
rcr
xor
movsl
sub
xchg
in
fs
in
xchg
flds
lods
minps
xchg
mov
pop
mov
leave
stc
or
dec
mov
push
jno
ss
movsl
cmp
xchg
pop
xchg
cld
test
and
mov
pop
jp
xchg
jl
shrd
mov
push
add
xchg
push
push
mov
push
aad
pop
mov
mov
stc
push
repnz
xchg
inc
lea
fidivl
jo
in
inc
cmpb
call
outsl
xchg
in
dec
popf
mov
push
mov
pop
push
cli
lods
sbb
mov
repnz
mov
sahf
rdmsr
jge
pop
fnstenv
pushf
sbb
sub
adc
jnp
shl
pop
mov
push
jg
mov
push
push
lahf
pop
mov
int3
and
dec
stc
cmp
cmpsb
fisttpl
adc
cld
pop
xlat
or
mov
movsl
outsb
enter
cmp
dec
ds
xchg
pop
add
repnz
pop
add
ror
lds
ja
xor
out
xchg
ficoms
or
popa
stos
adc
sbb
fs
out
insl
sub
sbb
add
sahf
shr
mov
hlt
ja
mov
popf
and
cmpl
insb
dec
adcl
pop
jbe
cmpsb
cmp
adc
out
fistpl
pop
sub
movsl
mov
js
push
push
pop
ds
mov
lcall
pop
movsb
das
push
jl
dec
and
jmp
jp
in
pop
mov
sbb
std
lock
mov
jmp
sbb
mov
lods
loopne
arpl
mov
cli
cmp
call
sub
mov
mov
sti
nop
cld
gs
push
ja
mov
add
lahf
push
jns
das
rolb
inc
pop
popf
jns
pop
test
cmp
add
stos
repz
add
xor
fdivl
add
rolb
inc
push
dec
adcb
add
pop
and
lock
sbb
pusha
mov
gs
inc
stos
in
inc
test
mov
jno
mov
cs
push
and
pop
sub
repz
std
push
xor
ja
sub
cmp
mov
andb
fidivrs
fistps
sbb
xchg
outsb
or
out
dec
aaa
pusha
inc
mov
nop
jmp
cmp
into
sahf
inc
in
push
jbe
add
test
fisubs
jb
movsb
hlt
std
aad
mov
or
xchg
and
adc
adc
mov
xorl
pop
lret
push
or
cmpsb
test
xor
jnp
fwait
cmc
stc
fsubs
pusha
inc
pop
mov
stos
mov
fistps
addr16
stos
push
dec
xlat
lds
ja
push
inc
gs
inc
fcmovu
lock
sahf
sub
pop
test
scas
mov
pop
mov
test
mov
in
lock
mov
fisubl
pop
in
pushf
cltd
icebp
jo
pop
jnp
push
mov
push
push
mov
mov
push
mov
sub
ja
loopne
icebp
mov
imul
lahf
insb
mov
mov
aaa
dec
aas
xchg
push
add
mov
cli
cmc
or
or
add
jae
or
mov
aaa
mov
ja
push
sub
ds
cmpsl
popf
jae
ds
mov
jp
mov
adc
sbb
int
dec
inc
mov
in
ret
add
mov
lret
push
xchg
lret
vmovntps
call
push
push
leave
mov
insl
or
cli
ret
add
insb
push
ret
pop
lods
xchg
aam
cltd
int3
adc
fs
cld
clc
jmp
sub
leave
cmp
inc
pusha
movsb
gs
cmp
xchg
push
sub
mov
loopne
adc
out
je
inc
and
in
addr16
pop
int
scas
stos
imul
sub
scas
and
sbb
sub
aas
sbbb
fistpl
or
lock
xchg
xchg
nop
lea
add
stos
pop
or
xchg
fisubs
inc
nop
jge
jns
popa
out
xlat
in
sbb
test
and
fcompl
adc
mov
mov
outsl
loope
std
push
push
pop
dec
fcomps
cmp
or
mov
mov
xor
push
push
jmp
mov
test
sti
sbb
mov
inc
push
and
jns
iret
inc
imul
push
push
andl
dec
mov
lcall
lock
fisttpll
fidivl
mov
in
ja
mov
add
sahf
xor
hlt
div
mov
test
in
fimull
in
jmp
mov
xchg
lods
sub
cmp
mov
mov
stc
lcall
test
daa
sub
out
dec
jns
mov
pop
jae
cmp
enter
dec
mov
sub
adc
mov
or
scas
add
cmp
cmpsl
jno
inc
inc
and
lock
dec
inc
jo
int
je
xchg
pop
push
pop
cmp
scas
and
jbe
pop
inc
sarb
xchg
ja
mov
fnsave
outsl
insb
mov
ficoms
add
int
xchg
ret
stc
mov
xor
or
stos
cmpsb
stos
out
mov
leave
mov
punpcklbw
lcall
mov
lcall
mov
addr16
xchg
push
out
xor
push
cmp
lods
or
push
fprem1
push
imul
pop
pop
jge
cld
pop
aam
shl
nop
leave
lods
jo
test
sbb
dec
push
pop
inc
push
inc
fdivrs
push
rcl
cmp
push
roll
mov
xchg
adc
jnp
scas
dec
pop
movsl
sbb
loop
js
dec
in
outsb
jecxz
mov
pushl
sbb
cmpsl
iret
push
xchg
addr16
push
imul
mov
aad
mov
or
fldcw
pusha
aaa
push
mov
adc
hlt
test
loop
and
push
ret
ret
or
and
and
jle
lcall
inc
cmc
das
in
cmpl
leave
cmp
loop
sar
inc
insl
inc
dec
and
mov
shll
dec
pop
clc
pop
leave
pop
into
pop
sub
lea
nop
jecxz
jl
push
sti
jns
jp
ljmp
in
scas
push
mov
insl
cmp
mov
loopne
imul
daa
movsl
mov
push
les
pop
xchg
cs
fisttpl
mov
rcll
clc
xchg
mov
aaa
cmp
outsb
adc
cltd
mov
inc
or
ret
ja
mov
inc
jecxz
or
pop
xchg
dec
sbb
jmp
fs
sbb
push
and
jo
std
icebp
stc
aam
and
mov
inc
movsl
test
into
inc
popa
js
mov
sub
fidivl
les
dec
inc
les
in
mov
movsl
push
push
pop
mov
or
mov
sbb
loop
bound
or
sbb
popf
add
jmp
and
inc
sbb
and
test
jne
int
fwait
dec
mov
mov
bound
inc
xchg
inc
icebp
mov
in
jo
mov
cs
sbb
dec
dec
jne
jg
jns
cld
cmp
pop
adc
dec
mov
and
cli
pop
adc
mov
insb
inc
inc
stc
push
cltd
cmc
fwait
pop
inc
loope
sbb
dec
xor
mov
into
test
mov
lcall
and
in
loopne
test
fstl
negb
ret
push
jns
inc
cmp
jno
test
sarb
fwait
xlat
add
roll
int3
testl
xchg
notl
jnp
out
xor
mov
and
stc
fidivs
hlt
arpl
mov
pop
push
inc
and
pop
frstor
cli
sahf
cli
adc
outsb
in
or
mov
mov
cli
outsl
das
mov
inc
sub
fsubrp
inc
adc
and
fdivs
int
push
sub
test
loope
es
or
mov
pusha
mov
loopne
rorl
lods
xchg
ficoml
notl
and
mov
fsub
and
popa
and
imul
mov
pop
push
negl
icebp
inc
sbb
push
mov
sarl
mov
out
fstl
idivb
imul
or
mov
sub
sbb
in
pop
cmp
stos
cmc
int
fstpt
xchg
scas
rcll
out
fsubr
dec
inc
repnz
mulb
mov
mov
fstps
add
jge
lahf
lds
mov
xchg
pop
test
sub
popa
js
mov
pop
rol
pop
les
jp
into
xor
pop
jne
mull
cld
jns
inc
mov
mov
mov
adcl
ret
xorb
test
adc
and
pop
jno
inc
cltd
test
iret
or
push
idiv
mov
out
mov
ja
inc
push
and
sub
add
mov
ljmp
jae
daa
jo
jno
sub
icebp
mov
mov
mov
push
sbb
or
je
or
jmp
sub
lret
sbb
ret
inc
in
add
dec
jne
lcall
fldt
xadd
ret
sub
add
cmp
imul
cmp
adc
shll
in
adc
push
xchg
loopne
jb
jmp
mov
xor
sub
sbb
and
mov
call
ds
inc
jle
jo,pt
inc
mov
inc
or
loop,pt
push
mov
mov
cld
movsl
outsl
sub
xchg
xorl
jo
add
js
adc
pop
int
lods
mov
pop
lret
mov
pop
fcomps
lret
in
out
xor
sahf
mov
and
rorl
arpl
nop
mov
ja
and
out
push
push
out
fisttpll
stos
ljmp
lret
and
popf
loopne
sub
divb
test
cmp
iret
fdivrs
jns
push
int3
xor
sub
add
aas
movsb
inc
sbbb
add
pop
inc
mov
incb
repnz
sbb
adc
inc
or
ljmp
adc
dec
inc
int
rorl
arpl
test
jno
imul
mov
jne
insl
cmpb
xor
adc
incb
lahf
lret
loop
xchg
jne
adc
xchg
jle
ficoms
out
movsb
adc
cmp
inc
subb
push
out
mov
fisttpl
sub
ljmp
ja
stos
cld
mov
pop
je
ljmp
sbb
in
imul
xchg
inc
in
xchg
add
dec
sub
ja
xchg
gs
ljmp
xchg
cld
mov
sbb
xchg
pop
sbb
cli
and
adc
es
dec
pop
repz
push
pop
test
push
gs
daa
mov
ds
mov
sbb
xor
pop
dec
jmp
into
arpl
xor
xor
mov
dec
mov
pop
adc
jnp
pop
jns
xor
jmp
sbb
notb
pusha
lret
mov
lahf
aas
fstpt
stc
mov
push
sub
aam
dec
cwtl
xchg
scas
data16
pop
pop
outsb
divl
iret
es
out
xor
and
in
ret
cmp
sbb
out
mull
xchg
std
repz
mov
xchg
shrl
fsts
std
mov
popf
subb
hlt
lds
jle
js
dec
scas
or
fistl
mov
push
sbb
sub
mov
adc
jbe
push
or
mov
xchg
push
lds
ficoml
lods
hlt
dec
pop
ds
cmc
push
or
notb
xor
jo
sub
xor
bound
je
and
aad
add
fldl
aas
or
pop
push
es
movsl
stc
int3
gs
xchg
pusha
adc
mov
pop
fwait
push
jae
adc
pop
sar
xchg
cmp
push
sahf
cmp
adc
stos
ret
dec
dec
fidivrl
mov
fdivr
lods
es
aam
repnz
mov
pushf
and
xor
add
sub
jmp
fs
fcmovne
clc
mov
mov
sub
mov
mov
iret
adc
addb
lods
dec
dec
data16
adc
xchg
mov
addr16
bound
or
lcall
pop
and
lcall
dec
dec
fstpl
xlat
jne
cmpsl
mov
movsl
dec
adcb
push
ljmp
das
in
rclb
push
loopne
adc
pusha
jmp
jmp
mov
jne
sub
or
je
adc
lret
sub
fdivl
nop
xchg
arpl
mov
test
adc
xor
in
jbe
aaa
lock
out
push
mov
sub
pusha
add
add
pop
stos
fldenv
inc
lds
hlt
aas
mov
xor
push
push
jne
push
push
push
aad
mov
cwtl
dec
push
pop
aad
xchg
and
loopne
fwait
jp
mov
mov
and
xchg
test
pop
sbb
fistpll
hlt
adc
cmp
jg
test
sbb
notb
xor
inc
in
xchg
inc
and
cld
int
sbb
sbb
xor
cmp
cmpsl
jbe
fwait
push
and
push
jl
lahf
jne
test
pushl
dec
les
pop
xor
jg
add
dec
addl
mov
into
mov
mov
xor
xchg
dec
cs
inc
cmp
fisubs
push
pop
daa
lret
mov
add
and
enter
idivb
repz
neg
add
repz
jne
rorb
inc
dec
daa
popf
dec
cmp
mov
sbb
fldcw
jno
aam
xlat
jno
or
push
jo
push
adc
call
fdivrl
adc
mov
and
lods
into
ja
popl
pushl
cwtl
stos
bound
add
outsb
iret
sar
cmp
xchg
mov
mov
add
fidivs
imul
inc
daa
jl
mov
push
or
leave
sbb
cli
rcr
and
stos
xlat
movups
pop
add
mov
lods
scas
cmp
lret
or
insl
push
or
popa
mov
mov
xor
fst
fstpl
sbb
test
jae
fdivrs
pop
mov
push
pop
out
cmp
xor
cvtps2pd
mov
pop
divb
sbbl
or
or
sub
aaa
flds
pushf
or
dec
push
add
xchg
lahf
repz
cmp
cmp
pop
outsl
cmp
mov
nop
lret
loope
clc
adc
and
roll
rcrl
out
andl
dec
xchg
lock
mov
jbe
inc
jbe
and
push
inc
pop
inc
stos
lcall
mov
stos
fnstcw
push
jne
and
icebp
dec
xchg
loopne
sahf
fidivl
jmp
jmp
jne
ret
xlat
cltd
lcall
push
jp
scas
out
aas
out
loop
and
bound
xchg
std
xchg
or
jne
dec
lret
and
mov
cld
mov
lret
imul
scas
xchg
and
pop
dec
pop
mov
arpl
cmp
test
mov
push
aaa
jp
mov
ret
mov
dec
xchg
iret
pop
sar
push
lret
lret
push
mov
and
xor
fstpt
jge
bound
xchg
shl
mov
lods
shlb
xlat
xchg
and
popf
jne
shrb
xchg
mov
popa
jno
xchg
idivl
push
or
jnp
pop
sbb
push
pop
leave
pop
push
shr
sub
lods
enter
stos
cmc
add
mov
setbe
and
iret
pop
mov
out
adc
jl
cmp
pop
cmp
xchg
mov
clc
adc
cmp
inc
scas
daa
cmp
mov
push
movsb
ror
sbb
int3
push
sbb
ljmp
mov
mov
jo
push
jmp
int3
fstps
pop
fwait
sarl
sbb
lods
and
cmp
nop
or
fistpll
rcll
jmp
and
mov
adcl
and
loope
push
jns
push
rorl
fisubl
sbb
lods
cmp
clc
pushf
sbb
insb
pop
mov
xor
push
push
stc
xor
aad
push
push
cmpsl
int3
xor
jb
pop
mov
fbld
mov
lahf
adc
sbbl
repnz
popf
rcrl
aas
idivb
mov
in
mov
loop
out
or
pop
inc
insb
lret
lret
call
gs
jns
pop
sub
aad
test
stc
jb
clc
xor
inc
mov
fsubrs
and
aaa
in
shll
cwtl
and
push
mov
pop
jo
in
stos
pushf
xchg
adc
mov
mov
insl
sub
fdivl
dec
inc
inc
inc
dec
dec
cmp
xchg
dec
stos
xor
popa
sahf
orl
jb
cli
mov
icebp
loopne
orl
cmc
das
sti
cmc
push
mov
test
loope
add
xor
ret
jecxz
scas
mov
fwait
out
mov
cmp
clc
xor
fdivrp
sbb
inc
and
and
mov
divb
and
push
scas
dec
cli
jmp
into
pop
and
pop
pop
ja
repz
movsb
test
ja
cmpsb
shlb
pop
ficoms
xor
out
and
cmc
and
push
push
inc
test
bswap
flds
xor
mov
enter
inc
mov
or
sti
sahf
push
sub
mov
mov
cmp
lahf
out
xchg
testl
nop
int3
mov
sbb
lds
dec
jg
fs
dec
rcrb
pop
xorl
dec
aad
add
lods
movsl
add
cmpsb
pop
adc
push
movsl
push
cmc
sub
std
add
dec
cmp
cwtl
rcll
cmpsl
loopne
les
cmp
outsb
sti
dec
and
ljmp
sub
jle
fists
rclb
or
out
adc
pop
subl
or
or
pop
or
sarb
mov
cmpsl
xlat
jbe
ss
pop
push
xchg
mov
ss
jo
cmpsb
loopne
ret
inc
arpl
movsb
push
iret
mov
jo
push
jge
lret
into
ss
mov
cli
ljmp
int
and
faddl
pop
lahf
imul
jle
adc
leave
sub
pushf
rcrb
adc
sub
push
add
ret
or
cmp
shrb
jmp
sub
pop
xor
push
inc
adcb
mov
shll
int3
or
fwait
into
adc
inc
xor
sarl
in
lret
in
jns
inc
or
xchg
or
adcb
inc
cs
jb
popa
in
int
cmp
xor
adc
xchg
inc
js
cmp
mov
cmp
jl
cmp
jmp
inc
or
fcomi
adc
cmp
cmp
mov
xchg
sbb
fadd
popf
push
mov
mov
xchg
mov
adc
adc
mov
popf
sbb
cmc
xor
sbb
nop
lods
cmpsb
dec
icebp
sub
es
inc
movsb
jae
push
daa
aas
jmp
mov
adcb
call
mov
mov
dec
cmpsl
pusha
or
popf
push
aaa
mov
jb
fadds
jne
ffreep
divl
cmp
call
xorl
sbb
popf
daa
lret
movsb
pop
sub
dec
lret
mov
dec
mov
bound
push
inc
mov
lret
fbstp
cltd
repz
std
rcrl
cmp
xchg
pop
push
and
pushf
ror
sub
scas
pop
push
cld
xchg
cld
cmpsl
in
cs
cltd
stos
mov
insl
jne
outsl
push
loop
movsl
pop
xchg
mov
mov
aas
mov
ret
cmp
inc
mov
xchg
clc
cmp
lds
pop
pop
loopne
insb
ja
mov
inc
bound
ret
push
lret
jnp
jbe
mov
stc
sub
lret
mov
int
pop
mov
lcall
mov
scas
mov
scas
ljmp
daa
dec
adcb
adc
fcoms
aaa
std
pop
and
xor
hlt
movsb
push
lret
lods
sub
pop
ret
loop
push
cwtl
cmp
rcrb
mov
push
xlat
lret
lods
inc
mov
repnz
pop
pop
popa
fldenv
inc
mov
lods
imulb
stos
repz
test
cs
xor
lret
or
test
jbe
rorl
jo
push
mov
aaa
add
sbb
jbe
sti
addr16
insb
push
pop
push
enter
sub
daa
lds
int3
add
xor
or
jp
mov
mov
push
jne
or
jmp
cmp
jl
inc
mov
daa
lret
jl
mov
mov
dec
inc
sti
jns
jae
ret
push
sbb
push
sub
les
mov
scas
insb
call
xchg
mov
in
rorb
mov
arpl
stc
sub
sbb
xchg
jmp
mov
and
pop
mov
test
fsubs
adc
inc
in
fdivs
jnp
lahf
sub
mov
sbb
mov
cmp
adc
adc
test
adc
sbbl
push
xchg
dec
repz
sub
adc
out
loopne
popf
and
dec
rorl
outsl
sbb
psrlq
sbb
jb
cltd
pop
mov
int
xor
mov
add
lcall
fs
test
pop
dec
std
pop
fs
mov
adc
push
sbb
xchg
xor
xchg
jp
dec
adc
mov
adc
js
ret
popa
cld
ds
push
push
divl
cmpsl
sbb
pop
xor
stos
mov
jl
and
cmp
xor
daa
leave
jnp
mov
pop
dec
xchg
jge
jbe
adc
sub
out
mov
loop
int3
pop
or
fwait
inc
sub
lret
dec
enter
or
in
pop
fdiv
adcl
adc
jle
sub
hlt
cli
jl
sbb
or
push
imul
and
sarl
fstl
xor
ljmp
or
and
dec
cmp
sti
xchg
cmpsb
dec
insl
cmc
mov
repnz
push
and
mov
jge
cmp
shrb
pop
arpl
out
pop
fsubrs
clc
sub
pop
dec
mov
push
in
xor
jnp
dec
push
fsts
adcb
mov
inc
xor
inc
arpl
inc
push
roll
xchg
push
sbb
gs
test
call
mov
xchg
out
mov
adc
adc
cs
push
shl
icebp
sbb
mov
cwtl
shrl
add
dec
stos
ror
add
mov
cmp
jmp
gs
xchg
stos
iret
mov
sbb
pop
xor
dec
aam
mov
repnz
pop
js
mov
sbbb
push
arpl
inc
stos
gs
popa
mov
ror
xchg
xchg
or
inc
and
mov
jg
jg
jns
jmp
pop
pop
sbb
pop
mov
movsb
sbb
int
repz
adc
dec
add
and
pop
nop
mov
mov
cs
jb
cltd
shl
lock
push
pmullw
fstl
aad
xor
fs
sub
pop
js
inc
lea
pop
sub
push
add
mov
stos
mov
fisubs
jle
sub
orl
sbb
push
fs
mov
xor
dec
mov
mov
repz
xor
sbb
inc
xchg
inc
sbb
push
pop
movhps
pop
mov
int3
xchg
movsl
xor
xor
mov
push
sbb
movsl
inc
mov
shr
dec
in
in
rclb
push
and
and
fnsave
fs
jne
mov
jb
ds
jmp
ss
and
outsl
jmp
sub
or
push
repz
adc
cltd
xlat
jnp
fistps
pop
in
int3
mov
imul
push
pop
clc
rcrb
int3
ljmp
push
sub
test
movb
dec
xchg
cmpsl
sbb
aad
testl
push
ror
inc
pushf
sub
lret
inc
lods
ljmp
pushf
dec
fadds
inc
popf
loopne
loopne
jle
pop
int3
movsl
mov
and
arpl
jl
and
xchg
ljmp
inc
gs
test
and
mov
aad
mov
int
dec
mov
fists
add
enter
les
push
test
add
cld
and
add
aad
jg
shlb
repnz
mov
xorl
scas
mov
sub
mov
add
and
jno
sbb
mov
push
mov
cmp
lahf
xor
int3
jmp
mov
psrlq
cmova
lock
orb
jecxz
jecxz
test
cmp
jae
into
adc
and
in
es
and
lahf
push
mov
cmp
sarb
or
inc
add
fcmovbe
xchg
dec
push
hlt
pop
cltd
leave
aas
insl
setns
fwait
push
es
les
cmp
insl
nop
mov
test
or
mov
cmpsb
and
add
in
xor
test
jmp
lods
sbb
stos
sti
cmpsl
mov
pop
ficomps
testb
arpl
movsl
jl
out
inc
cmp
mov
jecxz
scas
cs
jbe
das
rolb
xchg
roll
scas
sbb
sbb
xchg
fcomp
hlt
mov
mov
fsubrs
jae
mov
ret
adc
call
xchg
inc
in
lcall
mov
dec
mov
xchg
cs
inc
test
pop
cmp
xchg
rcrb
xor
jmp
mov
in
jb
int
sbb
xlat
jb
pop
repnz
andb
mov
xlat
jg
or
sub
scas
push
out
add
sbb
push
sbb
lcall
out
xchg
push
and
mov
mov
inc
xor
fmull
daa
xchg
ret
test
mulb
test
adc
sbb
mov
clc
ja
fidivl
pop
rolb
lcall
adc
movsb
lret
jb
push
fiadds
jmp
lea
ret
lods
xor
popl
and
adc
mov
fbld
sbb
orl
mov
xor
int3
xor
inc
dec
sti
sub
cmp
or
nop
lods
or
test
insl
roll
leave
shrb
xchg
add
cmp
inc
cmp
scas
mov
add
test
test
movsl
pop
or
loop
in
cmp
les
add
testb
adc
fcoml
dec
jecxz
shlb
dec
add
ljmp
jo
hlt
arpl
xor
mov
add
lret
movsl
mov
mov
imul
xor
inc
sub
dec
jg
cmp
movsl
fstpl
xlat
call
aas
jb
fisubs
fcompl
lds
fimull
jne
test
out
xorb
jmp
shll
add
xchg
adc
ja
lcall
mov
stc
xor
add
and
pop
jbe
or
inc
stos
pop
leave
stos
xchg
jmp
pop
test
test
xor
cmpsb
idivl
and
push
sbb
inc
lds
insl
fmuls
fsubr
ret
mov
imul
test
leave
out
int3
ret
mov
pop
out
lea
add
lahf
fbld
out
bound
push
fnstenv
jg
mov
js
add
mov
mov
cmp
mov
cld
loope
loop
jmp
in
in
jg
or
ficompl
push
sbb
test
rcrl
mov
push
mov
fisubl
mov
xor
stos
clc
popf
and
imul
jp
out
xchg
clc
jl
cmp
inc
insl
sbb
enter
fdivrs
xchg
xor
xor
inc
pop
pop
roll
insl
mov
xchg
shlb
xor
insb
outsl
jne
xchg
add
rclb
cmc
dec
or
sub
or
jae
imulb
mov
sbb
xorb
inc
inc
or
and
cmpsl
mov
mov
xchg
ficoms
test
cmc
int3
mov
bound
or
xor
sbb
sbb
enter
jl
and
std
shrb
in
clc
mov
test
cbtw
dec
movsl
sub
mov
cld
and
insb
pop
test
pusha
push
xchg
stc
fldcw
mov
les
dec
mov
lods
push
jmp
and
cmp
adc
mov
negl
mov
aas
xchg
sub
cmp
out
loop
adc
pop
stos
jg
xor
lret
rcll
mov
pop
dec
testl
fwait
int
cmpsb
and
inc
and
inc
xlat
mov
inc
out
aas
push
fldlg2
inc
in
in
xor
popf
push
inc
sbb
in
xchg
inc
adc
into
sahf
ret
xchg
mov
sub
dec
movsl
mov
jge
mov
in
mov
scas
mov
sub
dec
push
stos
aaa
mov
fs
ret
pop
popf
adc
adc
mov
inc
mov
addl
hlt
mov
ret
dec
das
leave
push
stos
scas
fnstenv
push
mov
mov
fnstsw
pop
jno
das
mov
les
nop
sub
jbe
xor
les
nop
jp
dec
jae
cld
pop
xor
stos
fildl
pop
mov
adc
ljmp
sbb
sub
dec
lock
push
repz
cli
xchg
cmp
jnp
mov
mov
mov
cmp
fistpl
adc
add
shll
or
sbb
pop
repz
sarl
pop
jg
xor
test
lahf
nop
and
mov
sarb
fcompl
fstl
jmp
xchg
nop
push
mov
jbe
dec
sub
adc
std
and
das
imul
adc
mov
add
aam
aad
mov
push
hlt
cmp
int3
je
or
sbb
arpl
or
pop
xor
mov
pop
mov
or
bswap
shll
and
inc
inc
jmp
xor
and
inc
rcrb
xor
mov
out
int
out
and
mov
loope
pop
or
ficoms
adc
pop
rolb
xchg
pop
xchg
add
push
sbbl
ret
sub
call
inc
or
mov
mov
sbb
out
loope
lcall
push
ds
dec
nop
je
dec
xchg
xor
and
adc
movsb
rcrb
or
and
std
int
addr16
mov
in
or
and
jae
sub
mov
mov
es
cltd
and
int
into
test
jnp
jb
dec
loop
call
shrl
cmp
xchg
stos
mov
pop
lods
mov
ds
imul
stc
pop
sub
or
cmp
jmp
notl
dec
addr16
inc
or
mov
mov
inc
sub
jns
lcall
push
mov
addr16
ja
stos
or
mov
sbb
test
movsb
ja
int
in
adc
repnz
pop
sti
push
pop
js
or
incl
sbb
and
js
lea
lods
sbb
pop
lret
and
lcall
jmp
pop
insb
cmp
out
sti
push
mov
enter
jae
int
cwtl
sbb
mov
mov
hlt
mov
xchg
push
pop
stc
or
inc
bound
incl
js
jl
mov
loop
fists
mov
cwtl
add
mov
arpl
lds
negb
xor
js
fisubrl
jno
pop
movsl
repz
lret
fidivrs
inc
or
mov
test
shl
adc
int3
adc
cs
fs
cmpsb
cltd
or
inc
aaa
pop
sub
jno
xor
jo
loope
mov
jae
fcomip
dec
adc
fsts
fldl
xor
mov
push
fmul
xor
iret
rsqrtps
aam
push
notb
jnp
cmpsb
mov
mov
pop
xor
dec
sub
enter
loop
jl
jmp
clc
popa
ds
pop
sub
sbb
stos
dec
xor
cwtl
jg
test
mov
push
addl
dec
and
jae
cmc
imul
aad
fwait
popf
pop
lods
popa
dec
cltd
mov
cmc
add
pop
xchg
test
out
scas
jecxz
mov
daa
mov
jo
sbb
or
push
aam
mov
pop
and
xor
xor
lds
mov
jne
addl
push
pop
jge
add
mov
arpl
or
int3
cld
fcmovnb
jns
add
pusha
out
aaa
lods
sub
ja
dec
je
mov
xor
andl
dec
xchg
sbb
adc
popa
pop
sub
nop
or
popf
call
push
xor
adc
cmp
sub
lret
and
inc
xorb
inc
xchg
insb
fbld
stos
test
mov
mov
jne
sbb
jmp
jne
icebp
sti
repnz
xchg
aad
pop
xor
sub
pop
add
adc
pop
mov
mov
jecxz
mov
sbb
cmp
inc
ret
rcrb
ljmp
jns
cmpsb
out
ds
inc
mov
fsubrl
push
icebp
mov
or
xchg
gs
and
xor
add
push
inc
fldt
mov
insb
and
mov
push
add
imul
scas
dec
sbb
jne
jp
movsl
sub
mov
in
cltd
lea
jo
pusha
or
or
lahf
xchg
mov
jo
jo
aad
inc
lods
push
inc
push
and
push
fcmovnbe
mov
or
cs
ss
out
scas
mov
add
cmp
test
sub
adc
int3
je
lds
les
popf
nop
les
lock
jbe
jmp
sbb
mov
add
fsub
ficoms
rcrl
add
inc
daa
and
push
xchg
or
push
xchg
mov
cmp
jmp
sahf
mov
dec
pushf
shl
je,pt
and
fcmovbe
mov
xor
test
clc
imul
movsl
lods
lods
call
xchg
test
push
or
popf
cmp
add
jmp
ja
mov
outsl
mov
dec
mov
xlat
pop
ret
jbe
pushf
pop
cmpb
dec
ljmp
call
push
das
outsl
xchg
call
and
loop
xchg
in
stos
dec
imul
mov
sub
mov
sub
movsl
push
cmp
cmpsl
je
jp
pop
divb
add
cld
add
clc
std
scas
std
and
test
data16
icebp
rcl
lahf
push
adc
dec
scas
mov
aam
xchg
mov
popf
mov
sub
sub
mov
enter
mov
jbe
cmp
push
jb
ret
popa
xor
daa
lcall
insb
and
jns
fstpt
ret
xor
dec
sahf
pop
fstpt
fwait
or
lahf
lea
mov
pop
push
fwait
rolb
mov
mov
rep
fildll
loop
imul
adc
push
shl
cmc
mov
shlb
mov
mov
jecxz
int
xchg
push
shl
jl
and
andb
or
lcall
cmpsl
jno
cmc
je
mov
pop
adc
and
jmp
ret
mov
out
dec
sbb
lret
or
leave
xchg
sbb
mov
out
cmp
nop
xor
xchg
inc
insb
daa
clc
lods
sub
ss
sub
cld
lret
cs
stc
cmpsb
repnz
outsl
shl
pop
out
dec
jmp
lods
xchg
shlb
pusha
mov
popa
int3
and
pop
sub
fistpl
dec
mov
xor
xchg
pop
mov
scas
mov
mov
xor
fidivs
push
nopl
dec
push
push
sbb
vpcmpgtw
test
pop
out
or
popa
insl
clc
hlt
or
das
xchg
mov
sti
dec
mov
pop
in
pusha
or
mov
or
adc
pop
sbb
daa
push
mov
cmovp
test
mov
inc
add
push
insl
pop
jns
gs
or
out
movups
inc
push
pop
bnd
int3
add
dec
xor
mov
jno
fildll
roll
xchg
dec
call
jae
jne
and
sub
repnz
cld
scas
or
pop
jle
mov
mov
add
movsb
inc
es
xor
dec
and
in
adc
orl
xlat
mov
mov
cmc
cmp
jg
aad
pop
xor
addr16
test
inc
and
xor
xchg
mov
out
adc
ljmp
mov
mov
mov
inc
and
xlat
ret
add
out
sub
cmp
out
adc
cmp
jge
inc
frstor
lcall
mov
mov
mov
inc
lea
repz
das
jmp
mov
addl
push
push
dec
lds
sbb
roll
jnp
lcall
inc
cvtpi2ps
xchg
jbe
push
xchg
loopne
cmp
daa
icebp
cmp
out
mov
stc
pop
cwtl
fsubrp
jbe
aad
inc
sbb
mov
js
das
adc
pop
xchg
sub
add
cmp
stos
xchg
lea
sysenter
xor
pusha
dec
sbb
push
or
adcl
sbb
int3
xor
inc
int3
and
push
test
xchg
add
xor
insl
mov
pop
sub
lcall
pop
and
shlb
pop
or
push
push
or
data16
clc
sahf
aaa
in
scas
xchg
xor
and
sub
scas
xchg
fdiv
cmc
push
lock
xlat
leave
xor
sub
sbb
push
pop
add
lock
negl
mov
movsl
xchg
or
push
aad
mov
inc
cltd
adc
ljmp
dec
gs
inc
out
lcall
fldz
adc
jle
add
pop
xor
repz
test
adc
mov
xor
and
or
in
cmp
inc
push
sub
lods
aas
push
lock
repnz
push
imul
inc
jecxz
pop
int
fmuls
out
mov
sub
jns
outsl
lret
and
clc
xor
andl
out
sub
push
cmpsl
pop
jl
xor
insl
or
rorb
fdivrl
popa
xchg
jno
data16
adc
imul
pop
push
mov
lock
cmp
cmc
and
ror
mov
sbb
lret
xor
in
repnz
adc
std
movsb
cld
pop
xlat
shl
ljmp
aam
jmp
scas
inc
mov
js
add
in
repnz
add
pop
or
push
into
hlt
jle
lahf
cmp
add
xchg
cmp
adc
insl
movsl
fmuls
inc
inc
jnp
dec
test
data16
mov
call
ret
push
popa
adc
adc
push
dec
mov
shlb
movsl
adc
dec
xchg
xchg
hlt
loopne
arpl
popa
sbb
je
mov
jmp
cmp
imull
into
movsl
mov
push
test
daa
xchg
and
xor
mov
add
into
sbb
push
mov
ret
mov
push
pop
add
mov
aad
gs
iret
dec
add
pushl
or
hlt
push
mov
ret
dec
xor
jle
out
ss
xor
repz
adc
adc
mov
inc
lock
jl
add
out
cld
mov
inc
xor
popf
gs
adc
jge
inc
arpl
add
dec
aas
sub
and
popf
outsb
mov
fstpt
or
fstpl
xor
ja
mov
pushf
inc
sbb
lret
add
jo
sub
mov
pop
mov
inc
and
push
pop
int3
or
sub
scas
jo
les
pop
sbb
mov
xchg
in
dec
test
dec
mov
and
mov
sbb
mov
sub
jo
lret
test
movsb
sub
js
aam
sbb
out
dec
jecxz
push
pop
mov
in
pop
cmp
lret
pop
mov
mov
int
int3
jbe
cld
adc
pop
pop
movsb
xchg
in
std
inc
out
push
add
sub
cmpsb
mov
sbb
ja
icebp
jle
pop
dec
andl
in
or
mov
jecxz
fdivrs
sbb
push
bound
cmp
popa
push
rol
mov
mov
sbb
add
jge
mov
out
jae
or
sbb
pop
inc
jecxz
or
pushf
out
inc
add
mov
mov
inc
outsl
cmp
cs
jg
jbe
mov
jmp
and
xor
hlt
add
out
mov
mov
mov
or
push
sub
pop
repnz
je
sbbl
cmp
push
popa
les
mov
fiaddl
pop
or
and
mov
ss
lcall
push
mov
cmp
sbb
lcall
sub
fwait
scas
pop
cltd
mov
xor
add
cli
xlat
outsb
or
add
add
pop
inc
jno
jmp
insb
jb
sub
fwait
sub
and
adc
imul
aad
shrb
out
pop
test
lret
call
xchg
movsl
scas
dec
or
ret
arpl
loopne
xor
sbb
fistps
jbe
and
or
jno
fbstp
mov
aaa
mov
cmpsl
scas
in
add
lret
push
out
cwtl
mov
jle
int
adc
iret
js
adc
pop
cs
pop
jno
fistps
test
sar
pop
mov
les
xchg
loop
clc
adc
xlat
jle
adc
por
jne
dec
push
nop
pop
or
pop
add
cmp
jp
inc
aaa
add
and
pop
inc
mov
jne
xor
dec
out
push
adc
lods
jns
cltd
aam
mov
shlb
push
dec
xor
ljmp
jae
xchg
lahf
sub
xor
xlat
lret
outsb
or
jnp
sarb
les
mov
in
inc
xchg
shl
ja
lods
fstl
sbb
mov
sarl
popa
psrad
pop
cmpsb
mov
pop
inc
sub
or
loope,pn
ljmp
sar
mov
mov
lods
add
sub
add
outsb
mov
jb
push
dec
jns
push
lds
inc
into
loopne
inc
enter
cmc
sub
jg
sti
xchg
int
jns
mov
and
jb
call
push
push
jns
xchg
in
and
and
lods
popa
jbe
push
jb
push
and
mov
jl
ds
inc
sub
sbb
adc
call
and
repz
aas
mov
lret
inc
xor
jle
mov
adc
push
xchg
rcl
cmpsl
sbb
push
dec
cld
inc
jno
daa
sub
lcall
inc
pop
xor
ds
pop
data16
xor
ss
sub
aaa
sarl
push
fwait
es
jbe
lds
mov
mov
and
ss
out
or
ja
adc
pop
push
inc
xor
mov
cld
rcr
insb
adcb
cmp
mov
xor
daa
shll
push
pushf
test
test
cmc
xchg
loope
add
out
inc
imul
callw
stos
fs
cmp
xchg
mov
jmp
int3
add
mov
xor
lcall
fistps
out
add
cmp
imul
pop
in
ds
enter
cmc
adc
fwait
and
push
jmp
lods
scas
ds
mov
insl
pop
jno
and
and
pop
test
dec
sbb
sub
outsb
add
fildl
movsl
dec
cmp
mov
mov
xchg
jp
mov
jb
push
cmp
push
sbb
mov
filds
popf
and
sub
push
fs
scas
movsb
push
jle
sbb
sbbl
xchg
aam
out
mov
and
shl
dec
xchg
in
adc
fidivrl
les
outsb
stos
dec
or
mov
movsb
and
pop
dec
test
movsb
mov
xchg
mov
insl
add
incb
ss
pop
imul
shlb
add
fsubs
jge
movsb
pushf
pop
in
outsb
xor
repnz
outsl
adc
inc
aaa
add
call
shr
ja
jae
adc
ljmp
aas
dec
enter
inc
fucomi
jb
sbbb
jo
sti
jo
addr16
jns
mov
dec
in
test
sahf
xchg
icebp
cli
pop
bound
cmp
sbb
mov
clc
jge
mov
vmwrite
sbb
js
jnp
movsl
pusha
lret
mov
sbb
mov
imull
popa
jg
cwtl
and
ss
cmpsb
dec
inc
xchg
jle
inc
in
scas
jae
push
mov
in
shll
mov
int
pusha
pop
aam
push
dec
test
jb
mov
xchg
call
push
notl
in
add
cmp
test
ffree
cmp
jge
xchg
repz
inc
push
add
xchg
lods
pop
and
int3
lods
shll
push
or
push
xor
mov
aas
test
push
dec
lds
dec
and
stos
sub
cltd
sbb
add
push
je
lcall
xchg
rcll
mov
dec
mov
inc
or
or
repz
and
inc
arpl
push
push
out
cmp
shr
ljmp
pavgb
rol
inc
or
xchg
loop
fsincos
dec
mov
jge
loopne
jp
mov
lods
add
imul
mov
pop
cli
test
pop
andl
test
cmp
leave
das
fwait
push
out
icebp
icebp
shl
ficoml
xchg
rorb
test
jle
adc
jmp
stos
dec
jne
aam
push
and
lahf
rcll
sahf
lock
cs
xchg
xor
or
in
push
sub
aad
xchg
and
repnz
clc
mov
pushf
or
xchg
push
push
rcl
lds
popl
sbb
push
scas
pop
lahf
rclb
mov
xor
js
pusha
mov
xchg
pop
jle
mov
mov
jbe
lods
xchg
in
fidivrs
pmullw
je
cmp
push
and
insb
dec
hlt
cltd
inc
or
out
jge
test
mov
pop
sub
mov
pop
lret
outsl
testb
std
mov
add
loop
test
inc
add
cs
cmp
add
mov
hlt
xorb
dec
popf
jl
loopne
shrl
ljmp
fildll
pop
stc
pop
addr16
xchg
in
ds
subb
test
or
jg
in
data16
and
test
fs
mov
xor
jecxz
fisubrs
test
mov
pop
out
cli
in
ret
push
xchg
jmp
ds
jecxz
jg
mov
adc
aas
cmp
rorl
outsl
enter
cltd
loopne
shr
sub
incb
call
and
roll
addl
lods
or
pop
lods
sbb
in
imul
outsl
pop
pop
push
cli
scas
adc
mov
je
cltd
mov
push
out
imul
inc
leave
loope
movsl
xor
std
out
jns
imul
xlat
shlb
add
loop
mov
in
movsb
push
outsl
jl
adc
mov
dec
stc
jge
sbb
mov
test
sbb
inc
test
in
mov
incb
in
mov
loopne
pop
pop
push
mov
jns
xor
loop
fs
inc
push
mov
sti
ret
inc
jle
inc
in
or
clc
mov
sub
enter
adc
push
int3
in
mov
mov
aas
xor
dec
inc
xchg
fucomp
shlb
xchg
ud0
scas
inc
sbb
call
rcr
add
or
cmpsl
jp
push
cmp
xchg
repnz
push
bound
stos
mov
arpl
push
jge
adc
xor
add
inc
popa
stc
jl
mov
repnz
cmpsb
ret
pop
push
cld
iret
mov
inc
loope
mov
outsb
sbb
cmp
dec
shrb
xchg
mov
fisttps
pop
addr16
in
mov
mov
xlat
mov
movsb
push
lahf
loopne
scas
shrl
out
xor
fildl
xchg
fidivrl
inc
xchg
dec
ret
pop
fdivrl
jle
xor
push
leave
jno
pop
pushl
push
or
adc
and
cmp
jg
stos
mov
dec
pop
mov
leave
or
clc
call
sbb
cmc
out
pop
or
insl
adc
pop
push
pusha
pop
outsb
arpl
outsb
sbb
mov
xor
push
jo
xlat
mov
stc
xchg
mov
iret
aas
out
lods
mov
out
loop
divb
fsubl
xchg
mov
xor
lock
lret
xchg
adc
add
mov
push
nop
scas
sub
sub
in
or
xlat
sub
fdivp
sbb
xchg
imul
push
outsb
pop
xor
lock
fwait
pop
mov
cmp
je
add
and
lret
jo
sbb
ja
ss
lea
jmp
fcmovb
mov
or
pop
jle
jno
or
inc
mov
filds
mov
iret
mov
flds
cmp
insb
jb
mov
adc
cmp
mov
adc
enter
mov
cwtl
and
fldenv
jle
imul
sahf
mov
mov
mov
and
out
out
call
pop
fdivrp
stos
dec
or
sub
cltd
mov
inc
sub
addr16
cmp
or
in
mov
mov
outsb
add
cmc
mov
cli
cmc
stc
gs
cmp
jb
pop
jne
push
dec
ljmp
sub
and
pop
cmp
push
xorb
ror
jb
pop
push
inc
or
addr16
inc
loope
mov
loop
jmp
outsb
mov
cwtl
faddl
fisttps
test
faddl
sub
jno
orl
stos
jnp
mov
jmp
lcall
pusha
daa
and
jle
cmp
xchg
fnstcw
mov
mov
repnz
out
push
xchg
and
dec
aad
inc
push
lods
pminub
aas
lcall
test
rcll
mov
pop
inc
addr16
jmp
jb
sahf
adc
add
pushf
cltd
popf
xor
cmp
bound
xor
dec
rcrl
xchg
fnsave
mov
dec
add
cs
xor
mov
jl
adc
ficoml
mov
add
or
addb
scas
jecxz
or
xchg
dec
and
push
xchg
aam
xlat
mov
sub
popa
or
test
and
jns
repz
jo
test
jl
imul
addl
jecxz
mov
mov
insl
jnp
mov
mov
dec
and
sbb
repz
mov
adc
shrb
inc
scas
pop
out
mov
cmp
out
sub
dec
iret
jo
sbb
pop
js
mov
icebp
ljmp
pushf
mov
xor
sbb
hlt
daa
cwtl
lock
rolb
pop
and
lea
or
mov
icebp
jp
aad
insb
jns
sub
mov
and
push
test
fisubs
imul
repz
mov
shrb
xor
push
lods
in
and
sub
out
push
xchg
or
sbb
mov
inc
cmp
mov
aaa
aad
mov
cmp
movsl
xchg
lock
cmp
ja
jae
push
inc
aaa
in
and
and
out
rcrb
pop
out
push
push
loop
repz
test
xor
in
pop
ret
mov
in
test
nop
ja
inc
dec
adcb
mov
push
bound
out
mul
stos
repnz
or
fcompl
or
jo
ja
push
enter
add
mov
mov
lret
adc
cld
frstor
and
xchg
add
xchg
imul
mov
daa
jecxz
incl
xchg
ret
pop
lock
in
int3
into
mov
push
enter
cmpsb
in
scas
js
sub
jecxz
mov
js
out
adc
idivl
xor
and
dec
sti
dec
das
sub
push
xchg
in
out
xchg
sbbl
xchg
mov
cld
jge
inc
lock
inc
clc
lahf
dec
jne
xor
mov
in
lea
fists
out
mov
dec
fmull
test
add
nop
xor
lds
or
je
je
xorl
arpl
dec
xor
inc
xchg
xlat
in
jae
xchg
mov
jp
dec
jnp
sub
cmc
clc
cmpsl
xorb
xchg
enter
xchg
add
je
add
xlat
push
inc
in
jg
jmp
lea
dec
mov
sbb
and
int3
pop
adc
shll
mov
sbb
push
jle
inc
fildl
bound
dec
sti
sbbb
and
mov
cmpsl
inc
ds
adc
imull
cmp
leave
daa
pusha
call
xchg
fidivrl
outsb
jb
and
add
cmpsl
cmp
adc
dec
adc
and
jb
addr16
sbb
into
je
xchg
cld
pop
sub
enter
push
mov
sbb
fwait
push
inc
shl
mov
jno
or
inc
add
cmc
jo
outsb
test
cmc
adc
jmp
mov
push
into
push
add
dec
cmp
sub
cmp
cmp
xchg
stc
arpl
pop
jl
jnp
add
push
push
loope
out
jmp
dec
orb
sbb
dec
mov
rolb
jns
xor
loopne
adc
fmull
mov
add
mov
addb
add
mov
lea
scas
inc
in
sub
push
in
lcall
fidivs
sbb
lds
sbb
push
pop
test
test
pop
loope
mov
push
and
cmpl
or
inc
aaa
pop
add
outsb
push
je
notl
shrl
dec
leave
mov
cmovns
dec
dec
ss
sub
cs
jl
pusha
pop
jno
xlat
jbe
xor
cltd
adc
pusha
mov
ds
sti
adc
add
shrl
int3
mov
cmp
ficompl
mov
xchg
xor
sti
or
jno
test
test
cmp
mov
loop
inc
lahf
mov
aas
sbb
aaa
aad
jae
rcrl
cmp
lahf
jle
xlat
jo
sti
fcmovnb
rcr
inc
jg
add
pop
cltd
cmpsb
aam
test
add
ja
adc
fsubrs
aas
xor
sbb
out
and
mov
add
add
outsl
adc
test
pop
inc
mov
js
decl
cmc
xchg
clc
pop
cmp
stos
test
mov
adc
aas
aaa
mov
dec
xchg
ret
cmpsb
adc
pop
pop
int
pop
xchg
sahf
jg
or
into
je
cld
aas
jmp
call
adc
jbe
or
ficoms
jecxz
mov
out
lcall
dec
les
push
rep
xchg
inc
lods
testl
cmp
add
movsb
ss
je
xchg
popf
mov
scas
shl
inc
cmpsl
test
dec
jl
or
cmp
insw
jle
ds
pop
push
pop
lea
and
test
ss
cmp
fldt
je
xor
pop
bound
adc
outsb
mov
pop
sbb
jmp
loop
xchg
ret
push
stc
cmp
test
jbe
gs
rcr
in
imul
xchg
inc
or
xchg
sub
fisubrs
pusha
mov
mov
notl
pop
jbe
push
lds
jnp
push
jge
in
xor
jae
cld
jg
xchg
jns
loopne
or
inc
pop
orl
rclb
fwait
ret
test
shlb
jno
nop
out
xchg
rclb
test
dec
in
jecxz
adc
cmp
fisubrl
clc
fcoml
or
and
cmp
movsl
jmp
jae
cmp
push
jne
nop
cmc
sti
inc
cmp
testl
dec
daa
inc
inc
xchg
cmp
xchg
inc
pop
into
push
dec
repz
rol
addr16
cltd
jmp
cltd
push
outsl
sbb
incl
lea
notl
cmc
dec
inc
clc
sub
jmp
mov
std
mov
cld
pusha
aam
sahf
jmp
xor
mov
shl
gs
or
xor
mov
xlat
stc
sub
rorl
pop
sbb
xorb
xchg
or
ds
out
xor
pop
ljmp
adc
adc
add
dec
je
sub
mov
lds
out
and
jb
testl
mov
mov
adc
jne
fst
movsb
sub
les
addr16
adc
arpl
rcl
test
mov
fwait
insb
add
outsl
call
cltd
push
cs
fcmovne
fldt
mull
cmpsl
les
mov
and
stos
es
dec
lds
sbb
lcall
lea
outsb
jg
lcall
jnp
rep
cmpsl
inc
adc
int
cmp
pop
lock
xor
enter
pop
xchg
hlt
cmpsb
fwait
dec
xor
jge
test
aas
sahf
int
and
push
test
and
mov
or
clc
into
dec
ret
jp
pop
popf
and
and
add
pop
mov
jmp
int3
es
adcl
lods
outsl
jno
inc
ja
mov
shrd
flds
add
lea
popf
add
adc
sub
mov
lcall
mov
mov
mov
jbe
incl
into
scas
and
and
pop
mov
and
pop
lea
mov
mov
movsl
dec
jne
or
jl
xor
aam
psubw
out
int
push
les
cmp
imul
lock
pop
dec
xor
dec
pusha
mov
mov
mov
loopne
test
xor
inc
inc
fsubrp
inc
cs
mov
in
dec
lods
arpl
and
loope
push
fld
xor
fstp
jb
xor
stc
jp
mov
mov
or
mov
add
xchg
or
inc
push
int3
push
xchg
icebp
mov
pushf
mov
mov
outsl
pop
mov
iret
add
inc
inc
dec
xchg
and
ljmp
stos
mov
movsl
dec
pop
out
negb
fwait
inc
inc
cld
or
xor
mov
xlat
mov
jnp
enter
dec
aad
loop
dec
into
ret
in
mov
jmp
or
loopne
xor
jg
cmp
cmc
mov
push
inc
lds
pop
cmp
bswap
loope
pop
icebp
or
xor
push
xor
jge
flds
jo
jmp
lds
xor
inc
inc
shrb
out
insb
xchg
repnz
sahf
pop
sub
push
ja
push
mov
pushf
push
xor
pop
bound
mov
jnp
cs
pop
cld
inc
repz
pop
repz
push
mov
fs
or
add
iret
mov
xchg
dec
mov
insl
insb
std
cmp
push
mov
jne
lret
sub
fstl
daa
test
jmp
adc
jb
fs
pop
xchg
xchg
shr
or
xor
push
cmpsl
sub
out
lods
fdivrs
pop
sahf
adc
push
fcoml
push
xchg
mov
xchg
pop
or
clc
push
push
fldcw
test
sbb
mov
cmpsb
sbb
push
push
inc
adc
mov
in
hlt
mov
xor
jmp
popa
int3
lret
test
push
mov
int
pop
push
les
outsb
xchg
or
iret
pop
ljmp
or
inc
mov
ja
mov
jle
sub
cmp
cmpsl
adc
sti
cmp
das
das
or
xchg
test
push
lsl
dec
pushf
outsl
cmp
faddl
es
adc
fisubrs
fmull
inc
sbb
cltd
sbb
jg
popf
cmp
sbb
insb
push
add
call
mov
jmp
adc
mov
xor
je
and
xchg
sbb
dec
sub
sub
je
jl
mov
inc
stc
mov
or
aam
pop
jae
push
jp
addr16
rorl
dec
mov
mov
aad
add
aam
sbb
lea
mov
jge
jmp
dec
rcrb
cmp
jecxz
jge
fnstsw
jge
aas
xor
fisubs
nop
sti
push
ret
or
gs
mov
and
jae
pop
cli
xchg
mov
sub
xchg
lret
shrb
or
mov
or
lock
ss
lret
lock
xorb
xchg
xchg
andl
mov
insb
pop
outsb
movsb
mov
mov
arpl
mov
and
xlat
in
fwait
sahf
add
jns
mov
xor
and
enter
lahf
aad
scas
inc
dec
sbb
in
shr
out
mov
push
lods
imul
mov
cmc
adc
stos
xor
adc
inc
iret
adc
mov
mov
ror
dec
popa
xor
adc
fisubs
ss
hlt
push
mov
push
imul
lret
and
add
mov
cmpl
xor
pop
test
inc
jmp
fistpl
mov
xor
lret
mov
cmp
hlt
int
pop
jno
jl
mov
or
ret
mov
sbb
fisubl
add
jbe
test
stos
outsb
or
lods
movsl
lds
mov
jae
add
push
cmp
mov
push
je
inc
xchg
and
out
iret
cmp
mov
push
fsubrs
add
insb
pop
cli
pop
outsb
inc
int
push
mov
fcmovnbe
push
push
pop
scas
and
mov
stos
cmp
imul
mov
in
inc
test
call
cli
insb
sub
lret
shlb
cwtl
insb
push
add
movsb
lret
jo
pop
mov
imul
push
mov
sub
clc
sub
dec
lret
lea
fcmovnb
add
movsl
jl
mov
outsl
fdivs
fwait
cmpsb
in
nop
js
mov
ret
imul
adc
pop
mulb
lock
jmp
popa
hlt
mov
movsl
loop
lret
xchg
loopne
test
call
or
loope
repz
pop
xor
sub
cmp
hlt
lds
pop
jle
push
push
cmp
cmp
subps
pop
cmp
xor
pop
dec
push
aas
inc
mov
in
xchg
mov
push
xchg
clc
push
rcl
out
rcll
loope
sub
in
inc
pop
dec
out
ljmp
int3
mul
add
add
sbb
sbb
sti
and
stos
xchg
mov
cmpsl
sti
adc
push
mov
imull
fsts
cmp
pop
mulb
popa
insb
pushf
sbb
add
xchg
sbb
sbb
repnz
inc
jmp
mov
cwtl
shlb
cmp
push
cmpsb
rcl
adc
adc
xor
outsb
mov
mov
aaa
adc
pop
rorb
adc
or
ss
add
dec
in
fcomps
loop
inc
sahf
fstpt
cmp
mov
cmp
shll
pushf
mov
jb
pusha
clc
icebp
add
cli
dec
inc
shl
push
jne
pop
inc
pop
push
jo
fucomip
in
cltd
sti
test
push
fdivrl
or
int3
lock
stc
in
gs
jnp
stos
rcr
sub
movsb
jmp
push
sbb
shlb
popa
iret
or
mov
jmp
mov
jp
dec
mov
and
cltd
push
outsb
mov
pushf
insb
in
test
inc
sub
mov
inc
dec
inc
lahf
pop
push
inc
push
aaa
dec
pop
lahf
or
mov
fstps
hlt
add
out
add
loop
stc
aam
lret
mov
fwait
clc
inc
or
mov
or
repnz
loopne
les
rolb
lods
inc
dec
imul
popf
mov
jae
mov
pop
shl
dec
ss
pop
aam
xor
mov
jg
xchg
lret
xor
adc
out
mov
jb
sbb
add
les
mov
mov
or
inc
xor
fimuls
filds
jnp
aaa
les
jge
mov
jmp
mov
int
jp
dec
inc
and
inc
pop
sub
lahf
xchg
inc
shlb
loopne
dec
ret
and
imul
jl
push
pop
pop
jb
or
repnz
jl
test
fnstcw
mov
xchg
add
pop
mov
fnstsw
mov
movsb
push
dec
mov
ss
xor
lea
push
push
xor
cmc
shll
xor
push
sub
mov
sub
ret
dec
stos
insl
jnp
xor
lret
jmp
inc
pop
adc
and
lods
andb
divl
cli
int3
std
dec
rorb
mov
jo
or
pop
mov
outsb
stos
int
mulb
sahf
fists
enter
pop
aad
push
add
and
pop
and
mov
in
fisttpll
jmp
popf
xchg
int3
pop
mov
inc
pop
lods
lods
cmp
bnd
xor
cmpsl
cmp
pushf
ja
cmp
lret
inc
ret
push
and
test
mov
je
and
lock
gs
movsb
mov
adc
jb
fldenv
adc
jo
imul
xor
xchg
xor
push
cmc
mov
mov
lret
nop
pop
sub
imul
jl
orb
xchg
or
or
sub
es
jge
cmp
mov
or
mov
daa
jbe
fimull
in
mov
ds
test
or
pop
xchg
nop
mov
mov
mov
fwait
push
xchg
push
inc
jnp
out
adc
sbb
sbb
sub
repnz
mov
lahf
sub
adc
add
jnp
add
adc
or
gs
popa
iret
xor
add
iret
mov
aam
daa
sub
in
outsb
add
ret
mov
in
sbb
fistl
stos
mov
ret
iret
pop
sbb
es
loope
mov
shlb
repz
fucomp
jae
mov
sub
idivl
mov
pop
inc
sub
push
jne
sbb
mov
ljmp
sub
and
fs
sbb
stos
lahf
js
jg
aam
popa
adc
mov
inc
outsb
jne
or
in
cmp
cli
fistps
pushf
jnp
in
mov
mov
xlat
insl
dec
mov
mov
inc
enter
xor
pop
outsl
xor
xchg
sub
pop
push
dec
dec
mov
sbb
std
clc
jle
cld
loopne
jle
loop
icebp
fnstcw
adcl
inc
jno
repz
int
dec
xor
cmp
clc
rcrl
mov
sbb
pop
iret
out
lods
test
dec
shlb
push
jae
ja
jnp
clc
xor
movsl
iret
inc
int3
loope
pop
xor
jbe
js
xor
jne
xchg
push
aaa
in
scas
pop
add
ror
or
repnz
cmp
sbb
sbb
js
sub
cld
xchg
sub
lods
dec
scas
imul
xor
data16
cmpsb
aas
jae
out
daa
pop
sbbl
inc
jbe
mov
cli
pop
ljmp
or
dec
cmp
lcall
cltd
jecxz
insb
jno
push
mov
sbb
sub
fs
sbb
add
push
xor
or
mov
ret
mov
mov
push
pop
jg
sbb
leave
adc
push
inc
sahf
push
out
ret
sarl
inc
fimull
loope
mov
dec
jnp
jg
inc
popa
push
fcomps
mov
insl
jne
fwait
sub
mov
jne
cwtl
cmp
in
or
lock
or
mov
loopne
rol
cmp
add
inc
sti
inc
sub
mov
jle
pushf
fsubr
decb
lods
xor
loope
add
out
sub
dec
mov
lret
pop
pop
push
lock
jne
pop
add
push
mov
shl
sbbl
test
add
mov
cmp
test
pop
loope
mov
fcmovne
aam
sbb
add
mov
stos
mov
mov
xor
aad
mov
cli
add
clc
aaa
aaa
testb
into
inc
inc
lods
lahf
imul
insl
and
daa
or
jg
jne
sbb
xchg
xorb
mov
cmp
shlb
cld
dec
ficompl
int
jecxz
push
dec
leave
mov
pop
pop
sbb
fbstp
fwait
out
scas
test
jb
stos
mov
mov
cli
xor
and
cld
cmp
mov
lods
jmp
pop
fwait
mov
dec
push
adc
shr
or
bound
out
pop
mov
and
into
jg
jo
cmpsb
cs
sbb
negl
icebp
jl
das
inc
sub
sub
adc
bound
sub
mov
into
orb
mov
mov
adc
negb
and
aad
fnstcw
jno
inc
js
cmp
or
sbb
cmpsb
and
sbb
pushl
xchg
inc
lods
add
push
out
push
dec
xchg
jl
dec
xchg
in
sbb
mov
imul
aad
lahf
sub
data16
ljmp
loop
popa
fcom
xchg
movsl
xchg
sysenter
dec
mov
iret
push
out
outsb
cmp
or
or
imulb
clc
jns
mov
dec
pop
icebp
int3
out
fsubr
pminub
cli
dec
push
cs
cld
adc
repnz
in
cli
jo
or
jmp
sti
xor
mov
jno
out
es
push
and
neg
testb
pusha
push
dec
in
jno
enter
cmp
pop
adc
adc
mov
sahf
pop
mov
gs
inc
mov
das
out
mov
dec
jbe,pt
rcl
sub
xchg
mov
aam
je
adc
movsl
ds
sbb
fiaddl
ja
into
pop
dec
and
ja
mov
inc
xchg
inc
xchg
push
lret
cmpsl
push
add
outsl
add
mov
push
repz
xchg
imul
outsl
enter
jmp
sbb
orb
adc
dec
leave
sub
adc
mov
pop
sub
jmp
xor
mov
jp
mov
dec
xchg
push
fsubl
jge
fcomi
adcb
adc
sub
addr16
dec
fdivp
std
or
or
loope
sbb
sub
insl
ja
lret
push
cmpsb
sbb
lret
inc
gs
jmp
pusha
test
dec
pop
jle
dec
add
jno
es
out
jmp
aaa
ret
mov
ucomiss
pop
or
push
imul
sar
insb
int
inc
mov
imul
mov
mov
or
jae
aas
lods
arpl
ja
sub
push
adc
cmpsl
pusha
js
inc
pop
jge
or
fimull
les
xor
std
cmp
popl
mov
mov
add
pop
xchg
dec
lret
mov
fstl
test
rolb
ljmp
push
xchg
loopne
fnstenv
fstpt
test
jg
pop
mov
cmp
add
xchg
test
jp
mov
je
mov
or
movb
rolb
mov
repz
lcall
jle
test
or
adc
lret
dec
cs
hlt
outsb
add
sbb
jo
pop
insl
fldl
mov
jo
rclb
xchg
push
mov
adc
lcall
xchg
jecxz
pop
inc
xchg
addr16
sub
out
cmc
push
adc
sbb
mov
pop
jecxz
adc
sbb
add
imul
out
jl
adc
dec
aaa
jnp
pop
popa
mov
cmp
add
mov
in
xor
popa
jg
sbb
pop
mov
repz
nop
out
sbb
aad
xchg
stos
lea
inc
or
sbb
mov
or
lret
dec
lds
in
xchg
mov
push
and
rclb
jns
lret
imul
pusha
ret
jl
sti
xchg
test
mov
pop
sub
dec
push
or
xchg
push
push
shll
mov
jb
add
sub
ljmp
int3
aaa
mov
cltd
jmp
sub
mov
shll
dec
cmc
jl
mov
cmp
xchg
cmp
or
fcmove
das
aaa
test
es
out
test
in
in
jmp
pop
sbb
out
xor
cwtl
xor
cwtl
dec
dec
push
out
jecxz
add
xor
or
xchg
pop
sbb
pop
sub
mov
mov
es
pop
jbe
xchg
cli
lcall
push
mov
cmp
pop
js
push
lahf
daa
nop
push
ds
pop
jle
dec
jnp
sahf
icebp
mov
pop
je
pop
cmp
xor
lock
and
xchg
sub
pop
int3
es
hlt
pop
push
scas
pop
push
xchg
xor
or
mov
into
and
sub
xchg
push
mov
cli
out
into
dec
dec
mov
mov
fdivs
mov
out
jnp
mov
dec
enter
mov
test
push
inc
sub
mov
cltd
xor
adc
loope
mov
adc
pop
or
js
dec
aam
inc
or
arpl
jge
sbb
leave
jle
mov
adc
sub
ud2
push
sbb
add
test
and
mov
or
sub
add
ror
xor
lods
sub
inc
add
jb
xlat
mov
sub
pinsrw
es
loope
lock
jecxz
lahf
stos
push
add
inc
pusha
lcall
jmp
fs
ror
popa
jg
push
repz
lods
and
jnp
testl
xor
xchg
gs
mov
movsb
repz
mov
stos
shlb
fst
lods
mov
adc
lods
dec
cmp
loopne
scas
inc
xchg
jnp
and
fwait
movsl
fwait
mov
fs
pop
xor
fbstp
int
ror
pop
outsb
mov
test
cmc
lahf
xor
lds
out
jecxz
aaa
nop
cs
xchg
xor
push
adc
lods
inc
xchg
add
xchg
xlat
inc
rclb
xchg
shll
sbb
outsl
inc
jo
test
pop
clc
cmpsb
int
int
jo
pop
cmp
fidivl
push
or
adc
or
outsb
lock
fidivrs
push
std
jl
mov
les
xchg
cmp
das
mov
imulb
adc
adc
daa
pop
cli
pop
imul
xor
out
or
and
or
call
mov
and
imul
inc
out
enter
int
inc
aaa
xchg
rcrl
add
out
lock
pop
push
cmp
imul
outsb
addr16
sbb
xor
aaa
subl
sub
pop
sbb
cltd
mov
aad
in
es
loope,pt
jge
push
pushf
fstl
insl
pop
das
test
insl
mov
cli
mov
hlt
pop
test
and
push
pushf
repz
lock
push
jnp
in
xor
js
icebp
clc
cltd
cmc
sahf
gs
fwait
data16
pushf
out
scas
xchg
test
lds
fnsave
jp
rorl
sti
mov
inc
rcl
sub
xor
jecxz
xchg
push
addr16
orb
dec
xchg
rclb
push
mov
ds
push
in
dec
stc
nop
mov
mov
jbe
fisubs
mov
sub
and
insl
sbb
fimuls
inc
shrl
pop
insb
les
push
jmp
sbb
jo
inc
adc
xchg
leave
gs
cmp
cs
out
xchg
fidivrs
iret
xchg
jecxz
jns
into
or
dec
inc
adc
sub
fs
popf
xchg
ret
jo
dec
inc
imul
cmp
cmpsl
imul
neg
push
sbb
sti
sahf
jbe
xchg
rolb
jmp
inc
lcall
adc
push
cld
sbb
push
inc
dec
jmp
out
lds
inc
enter
clc
xor
mov
sbb
insb
jb
nop
jecxz
stos
dec
imul
pcmpeqb
inc
ds
mov
ja
sub
jns
dec
pop
adc
cmpsb
pop
push
fnstenv
pop
and
loopne
xlat
pop
mov
sbb
mov
mov
movsl
fisubs
mov
dec
pusha
or
mov
loop
movsb
pushf
int3
mov
cs
and
dec
mov
cmp
inc
mov
push
in
cli
out
pushf
repnz
orb
dec
sbb
lods
daa
clc
incb
lods
mov
dec
jo
xchg
adc
or
push
pusha
pop
ss
sbb
out
cld
add
dec
mov
shlw
push
xchg
push
ds
std
aas
push
pop
cmp
mov
rorb
xorb
fnstcw
sub
inc
push
mov
sub
push
mov
cltd
popa
scas
dec
lahf
xchg
fisubl
iret
dec
cld
mov
lret
insb
sub
lret
xor
cld
sub
ret
sbb
mov
and
xchg
sbb
dec
in
shlb
mov
roll
cld
push
popa
xchg
mov
loope
outsl
mov
mov
jg
fdivp
sub
lea
shll
pop
sub
cmp
mov
movsb
imul
sahf
icebp
fs
pop
in
jle
dec
jmp
add
sub
push
inc
inc
into
out
loop
xchg
adc
arpl
cmp
jle
mov
inc
inc
cli
fiadds
inc
push
mov
sub
aad
paddw
add
sti
lea
inc
pop
jno
mov
lcall
fyl2x
outsb
add
ret
fnstcw
push
aam
jecxz
int
mov
jo
adc
fstpt
inc
icebp
add
inc
out
icebp
fistpl
sarl
mov
mov
and
out
push
mov
orl
mov
jle
mov
adc
shlb
in
xlat
lea
lds
cmpsl
push
popf
lahf
cld
in
hlt
cmp
dec
outsb
ljmp
into
inc
xor
into
icebp
imul
sub
loope
mov
outsl
lret
lahf
push
fdivs
and
or
mov
movsl
jl
jne
ret
out
xchg
mov
jge
rcr
or
xchg
into
jns
addl
mov
pop
imulb
dec
mov
stos
es
add
in
inc
and
xchg
xchg
push
fwait
jl
stc
cmp
ret
std
lret
jl
int
cltd
sbb
pop
jge
outsl
test
dec
mov
inc
dec
jmp
xchg
loop
sbb
cs
pop
fidivl
imul
aam
inc
push
cmp
mov
cmp
adc
popf
mov
and
stc
js
cld
pop
mov
mov
jl
inc
dec
add
xor
insb
cmpsl
ds
push
fimuls
inc
dec
loope
dec
es
enter
out
dec
sbb
jmp
insl
dec
dec
xchg
push
daa
jae
and
mov
ss
xor
inc
xor
pop
fxch
sarl
pop
mov
or
pop
inc
add
xchg
cli
aas
nop
mov
inc
pop
mov
sbb
push
pop
or
sbb
or
inc
fistps
lock
adc
insl
stc
rorb
cmp
jbe
sahf
cwtl
outsl
stos
jns
addb
mov
les
pop
lea
fwait
nop
xor
aad
ja
lcall
inc
out
mov
loop
xchg
mov
dec
sti
jo
leave
and
mov
cmpsb
add
cmc
or
ljmp
lcall
shrb
out
mov
push
add
mov
cs
dec
jo
addb
or
scas
adc
std
aaa
aad
shll
push
jp
lret
xor
jno
jne
lods
adcw
mov
call
xchg
jns
xorl
int
inc
sbbb
leave
dec
jl
xchg
lret
addr16
sbb
dec
or
loopne
jp
test
xchg
call
mov
cmpsl
jb
popa
mov
iret
xchg
cmp
iret
shll
dec
dec
in
iret
xor
mov
out
out
out
sbbl
sbb
pop
xchg
scas
jecxz
dec
jnp
jp
push
fst
pop
adc
sbb
mov
jecxz
aam
enter
or
int3
scas
xchg
cmp
xor
pushf
lds
xchg
add
xchg
stos
dec
add
push
lods
inc
dec
aad
insl
adc
cmp
in
test
push
fnsave
jnp
add
adc
sub
mov
sbb
nop
sbb
shrl
sbb
adcb
adc
add
bound
adcl
inc
lods
pop
imul
rolb
xchg
adcb
and
scas
push
sbb
lcall
mov
and
jecxz
mov
das
cmp
dec
ljmp
mov
arpl
pushl
add
push
outsb
xor
add
mov
fldt
lods
js
adc
pop
dec
xor
and
popa
shlb
cmp
or
scas
sub
push
data16
mov
mov
out
scas
rcl
sub
enter
ss
lods
pop
fiaddl
and
sbb
adc
inc
sbb
cmp
mov
xchg
mov
mov
int3
push
jecxz
cmpsb
push
imul
stos
lahf
ds
mov
stos
daa
dec
shrl
scas
adc
and
jecxz
ret
lret
movd
cmpsb
or
xor
aaa
scas
addr16
pop
mov
cmp
mov
dec
inc
pop
je
or
aad
pop
stc
mov
pop
add
movsl
xchg
fnstcw
dec
xor
sar
mov
fbstp
inc
add
fmul
notl
mov
mov
nop
popf
dec
imul
adc
in
jle
packsswb
call
movsb
adc
push
repnz
jp
cmp
adc
adc
les
mov
and
sub
subb
sub
xor
ret
and
adc
xchg
dec
loopne,pn
and
repnz
mov
xlat
subl
aas
mov
jmp
cmp
lcall
fnstenv
test
repnz
mov
cmpsb
sbb
push
jnp
loop
push
lds
cwtl
cmp
dec
sub
push
movsl
and
shl
jne
sub
jo
mov
mov
pop
push
icebp
or
cmp
xchg
mov
lods
xor
sbb
jecxz
inc
xchg
adc
push
dec
cmpsl
push
mov
je
add
and
hlt
mov
xchg
iret
fs
das
cli
lds
mov
cmp
push
out
cltd
add
fcompl
js
mov
dec
mov
imul
dec
fstpl
inc
insl
dec
pop
out
div
add
sub
in
xor
rcrl
in
cmp
and
sbbl
call
mov
pop
or
mov
lods
clc
testl
repz
or
pop
add
popf
adc
orl
fldz
addr16
imul
push
xchg
int3
sub
clc
fnclex
pop
jle
mov
or
in
xchg
and
cmp
pop
std
push
adc
adc
xchg
dec
lahf
popf
cmp
mull
push
push
stc
xor
sbb
fcoms
nop
sub
call
sahf
clc
push
inc
add
stos
mov
mov
jmp
pop
sbb
xchg
ret
sub
imul
hlt
test
push
pop
dec
daa
hlt
pushf
cmpsb
adc
sub
repnz
or
pop
cld
push
arpl
xor
in
mov
or
xor
shll
sbb
xchg
into
push
jns
pop
jmp
xchg
xchg
pop
repnz
xchg
aad
jge
int
jae
mov
std
pusha
jge
jge
into
mov
sub
ljmp
lahf
push
sub
mov
flds
adcb
push
cmp
xor
ja
pop
cmp
dec
stc
sbb
xchg
cmp
fld
sbb
xchg
cld
sbb
repz
jp
shll
sbb
jp
jbe
add
sbb
fmul
inc
add
sti
in
inc
xchg
pop
cld
jmp
mov
mov
flds
mov
es
shrb
jns
in
add
insb
dec
mov
push
sbb
jle
pop
inc
inc
push
ret
sub
sahf
imulb
lahf
mov
and
lcall
and
jecxz
dec
mov
xchg
pusha
testl
shll
test
in
sbb
in
jbe
xchg
nop
pop
fdivl
and
cmpsb
xor
jmp
into
lcall
sarb
fsubl
push
adcl
in
jg,pt
jne
mov
push
pop
test
into
add
xchg
and
cmp
xchg
pop
mov
repnz
jne
jl
popa
fisubs
dec
dec
xor
movsb
inc
adc
sbb
dec
xor
sbbl
out
lret
cmp
test
push
outsb
xor
rorb
adcl
push
push
mov
dec
ljmp
pop
adc
cwtl
rcl
mov
imul
inc
movsl
inc
sub
cwtl
inc
mov
scas
dec
mov
sbb
ja
fwait
lahf
cmp
sti
sbb
push
imul
xchg
loopne
mov
adc
push
cld
scas
dec
jg
cmp
lods
je
hlt
scas
sub
sti
and
std
dec
xor
hlt
sbb
pusha
mov
mov
shlb
gs
popa
jo
pusha
xlat
int
fldl
xchg
imul
jbe
push
psubusb
pop
fcompl
fstps
fcmovnu
push
fcompl
fnstcw
insl
dec
mov
pop
pop
mov
jmp
insb
lahf
jbe
lds
dec
imul
inc
push
out
ret
test
je
ljmp
jne
cs
mull
rorl
lcall
inc
lods
cld
push
loope
fsubrs
rorl
lcall
inc
nop
jge
int3
insb
adc
lret
icebp
ret
pop
mov
sti
pop
push
roll
xor
xchg
fisttpl
and
jns
jecxz
pxor
and
mov
xchg
hlt
js
push
dec
out
jg
xor
xor
and
adc
push
inc
xlat
pop
cmp
jg
ror
push
jmp
shrb
pop
and
cld
mov
push
jne
mov
test
jne
ja
jge
xorb
lahf
mov
jo
xor
jl
and
into
inc
dec
mov
rolb
in
in
push
push
dec
xor
mov
inc
or
sti
ret
leave
lods
push
push
dec
mov
arpl
mov
js
cmp
xlat
sub
int3
cmp
xlat
jb
or
push
sub
xchg
mov
xlat
rol
dec
fwait
cld
push
and
int
xchg
sub
ljmp
xchg
dec
arpl
aad
or
nop
add
jo
and
inc
aad
sti
add
std
jno
lret
push
mov
mov
test
sub
xchg
xor
xchg
mov
aad
je
iret
in
and
push
data16
mov
mov
dec
push
jecxz
xor
rcll
sti
insl
mov
push
in
fstl
jo
mov
sbbl
mov
clc
push
cmp
icebp
cltd
ret
dec
pop
cwtl
rolb
push
imul
sub
lods
addr16
xor
cmp
imul
jp
sub
pop
lret
rorb
ds
mov
insl
xor
add
sub
stos
pop
xchg
lcall
xchg
movsb
mov
pop
jo
mov
fcoms
sub
mov
add
xchg
mov
adc
inc
lds
test
push
leave
fidivs
push
fisttpl
mov
mov
repnz
rcrb
rcrl
add
lret
xor
pusha
jmp
jle
out
test
xor
dec
in
ljmp
in
clc
pop
mov
inc
out
cli
and
inc
loope
push
pop
pop
sahf
or
sub
ds
mov
fdivrs
or
ja
mov
or
push
insl
push
das
aaa
jb
loope
ss
pusha
loope
mov
lcall
out
cmpl
adc
mov
outsb
test
enter
fld
ljmp
out
dec
cmc
es
jge
fcompl
loop
mov
mov
sub
push
into
add
mov
imul
iret
push
inc
imul
mov
stc
xor
into
push
rclb
adc
loope
inc
push
pop
jnp
enter
fimull
clc
dec
cmc
sbb
push
and
clc
push
cmc
outsl
pop
pop
mov
add
scas
cltd
xchg
cmpsl
fcompl
orl
inc
pop
pop
xchg
out
inc
fadds
sbb
ret
je
pop
loope
inc
cmp
jge
loope
jb
and
mov
hlt
sbb
mov
movsl
adc
inc
je
xchg
pushf
sbb
pop
lret
repnz
ficompl
add
jecxz
mov
jle
js
lret
lret
cmpb
cmpsl
lcall
inc
test
inc
cmpsw
push
arpl
sbb
test
dec
aas
fisttps
dec
ret
jecxz
add
pop
xchg
pop
movsl
lret
jg
or
shl
mov
inc
push
xor
gs
test
stos
dec
mov
mov
call
les
adc
call
xchg
jge
insl
sub
je
mov
cmc
ss
pop
xchg
pop
shll
mov
mov
int3
out
and
int3
adc
cmc
cmp
dec
mov
sbb
movb
stos
mov
pop
nop
out
inc
cmpsl
fisubs
test
inc
frstor
incb
push
mov
pop
sub
movsl
cwtl
mov
fstps
imul
pop
jae
cmp
imulb
xlat
pop
pop
negl
fisubrl
cmp
pop
xlat
inc
cs
jge
ljmp
iret
scas
push
fwait
shlb
inc
es
push
xlat
call
jnp
cli
pop
ljmp
dec
mov
inc
movsl
stc
shll
push
xor
dec
xchg
cmc
rorb
test
scas
jo
mov
test
mov
mov
sahf
ja
ss
aam
mov
mov
xchg
xchg
movsb
lcall
gs
mulb
daa
cmc
inc
cld
jo
sti
mov
adc
je
sarl
ds
mov
pop
adc
adc
mov
je
in
mov
fs
testl
idivl
pop
pop
mov
cmp
icebp
xor
xchg
arpl
pop
fistl
add
inc
dec
xchg
cmpsl
iret
hlt
test
int3
in
insl
movsl
mov
cmc
lret
aam
jo
and
add
adc
mov
sub
mov
dec
push
mov
test
pop
cmpsl
outsl
adc
int3
add
jno,pn
jle
into
into
jb
std
mov
cmpsb
inc
mov
jmp
in
scas
daa
pop
sbb
pop
into
stc
mov
shl
popf
nop
mov
inc
xor
jp
bound
fmull
jne
jbe
loopne
inc
mov
loope
jl
xor
push
pop
nop
mov
jmp
ja
decl
or
sti
cmpb
std
sub
hlt
shll
adc
xor
sti
jno
adc
xor
add
das
or
jno
lcall
or
ljmp
imul
sub
fdivl
rorb
fs
cmp
outsl
test
xor
xchg
out
cmp
call
pop
cmp
inc
sbb
push
out
mov
sahf
clc
enter
push
sbb
insl
imul
mov
es
dec
mov
cmp
aad
ja
adc
jo
pop
into
add
mov
pop
xchg
inc
rcr
mov
push
rorl
xorl
sbb
imull
cmp
ds
mov
lea
aaa
xor
cwtl
pusha
test
mov
sub
mov
daa
cmp
not
mov
data16
fchs
stos
cmpsb
imul
pop
lret
cltd
andl
adc
push
imul
lds
loop
inc
es
scas
adc
notl
bound
mov
movsl
cmp
and
outsl
es
and
push
or
std
rcr
popa
sbb
inc
out
movsb
popf
cli
mov
sbb
aad
pop
sub
jns
mov
loopne
pop
xchg
test
add
mov
out
and
pop
push
sbb
lret
xor
cmpl
pop
dec
std
je
push
or
enter
pop
push
outsb
test
sub
mov
lcall
loopne
in
out
iret
or
push
cwtl
sbb
xor
fwait
pop
movsb
jge
xor
ret
jnp
xchg
and
mov
inc
mov
in
cmp
xchg
mov
shlb
icebp
sahf
das
dec
inc
call
mov
lods
jmp
adc
cmpsb
and
sub
sbb
mov
mov
cmp
in
inc
mov
xor
popf
icebp
lea
xor
cmp
lods
push
fs
loop
xor
adc
jge
sub
test
xchg
loope
sbb
push
jl
or
push
xchg
push
push
adc
into
or
int
xorl
sahf
inc
dec
mov
adc
fs
inc
lcall
ss
mov
push
cltd
cld
mov
test
cmpsl
add
xchg
dec
outsb
adc
inc
lret
dec
push
int
sub
sub
xchg
andl
rcll
push
inc
roll
dec
cmp
cmpsl
and
in
push
dec
ret
sub
mov
xchg
mov
jge
cmc
cmp
int
cmp
faddp
leave
xor
xor
shl
sti
imul
in
movsl
fadds
or
jmp
pop
lret
sahf
data16
sub
ret
sbb
jns
mov
fdivrl
push
xchg
cmp
xor
adc
aad
addr16
mov
inc
repnz
adc
xchg
cmp
cmpsl
push
clc
push
inc
fs
dec
insb
pusha
loop
sbb
adcb
and
jle
and
cmp
outsb
xor
jle
adcb
dec
mov
out
daa
repnz
adc
mov
inc
bound
js
shlb
push
or
push
int
xchg
jp
mov
dec
push
dec
or
mov
stc
shrl
es
cs
push
dec
mov
mov
scas
xor
test
call
sti
aas
dec
mov
repz
inc
xchg
mov
gs
mov
mov
out
pop
ret
and
mov
xor
or
inc
pusha
jnp
lea
or
sbb
and
lahf
fwait
jb
into
rolb
adc
pop
pop
aaa
xchg
lret
popf
sbb
test
dec
enter
mov
fsubs
dec
pop
xchg
push
mov
cmpsb
jecxz
sti
adc
fildll
cmp
pop
incb
mov
insb
imul
popf
cli
cmpsb
add
or
ret
pusha
cld
call
push
xor
add
lahf
mov
mov
mov
xchg
imul
adc
pop
faddl
mov
pop
enter
adc
je
adc
push
sti
jns
push
addl
dec
int3
lcall
das
leave
or
or
les
dec
mov
leave
ja
add
nop
add
hlt
out
push
int
mov
sub
int3
xchg
mov
xor
mov
pop
icebp
stos
in
hlt
cltd
repz
arpl
xchg
cmp
inc
cs
shll
aaa
sub
loope
cmpsb
jle
mov
sub
outsb
or
mov
out
jmp
mov
outsl
jns
sbb
cmpsl
sub
add
pop
inc
je
xchg
mov
movl
sub
cmp
mov
dec
push
jge
in
roll
mov
and
xor
push
xlat
xor
out
lods
dec
xor
inc
mov
jl
push
push
jb
in
arpl
dec
mov
xchg
outsb
push
sar
mov
push
jns
mov
aad
test
cli
mov
cld
outsb
test
push
adc
bound
jno
outsl
sbb
cltd
mov
scas
mov
cltd
inc
fstl
mov
pop
sbb
call
in
es
xchg
rcrb
mov
popf
lar
jnp
dec
stc
test
pop
cmpb
cld
dec
pop
fisubs
inc
jmp
push
aad
push
daa
cmp
pop
and
or
xorl
mov
pop
outsl
sar
je
inc
cld
inc
sbb
inc
insl
and
dec
adc
popf
xor
or
js
bound
into
add
or
cmp
sahf
lahf
lea
jne
adc
push
inc
les
testl
loop
scas
popf
cltd
dec
jbe
icebp
ret
aaa
mov
ror
jnp
arpl
push
scas
fcmovb
jl
pop
jbe
mov
pushf
jae
inc
dec
jg
fcomip
repnz
shl
mov
in
adc
call
mov
test
jb
repz
xlat
movsb
dec
mov
ss
jne
push
xchg
addr16
in
pop
cld
pop
sar
push
or
fwait
mov
fwait
push
int
and
test
in
mov
int3
xor
dec
jle
divl
enter
rorb
pop
ljmp
and
adc
or
sar
xorb
repz
pop
dec
call
cmp
mov
sti
lret
add
push
hlt
push
mov
cmp
xchg
mov
lea
cmp
or
setb
xor
in
or
jl
jl
loopne
test
scas
mov
mov
push
insb
dec
jmp
push
lds
inc
into
in
repz
push
adc
aad
ret
dec
into
sbb
jne
or
pop
jmp
addr16
inc
sub
rclb
inc
cs
mov
mov
fsubrs
jb
shrl
or
arpl
adc
sbb
push
pop
pop
cmp
jbe
xchg
pop
iretw
inc
movsb
lahf
outsb
out
bnd
movsl
pop
jg
xchg
inc
iret
add
add
mov
inc
out
lock
mov
ficomps
mov
or
jle
aas
mov
outsl
sbbb
or
add
mov
mov
mov
and
addr16
dec
nop
out
mov
sub
xchg
imul
sbb
test
adc
mov
loop
cwtl
mov
ss
vpsubusw
mov
aam
and
mov
and
repz
jb
adc
stc
mov
push
icebp
lds
jge
mov
dec
jge
add
ret
mov
gs
sbb
push
aad
mov
mov
lret
add
dec
dec
xchg
dec
mov
mov
mov
rcrl
xchg
fidivs
gs
stc
cltd
andb
sbb
xchg
pop
adc
int3
push
dec
pop
scas
pop
jg
lret
in
adc
lahf
add
add
dec
xlat
jmp
popa
add
hlt
adc
insl
fwait
lahf
inc
xor
popf
dec
sarb
add
lahf
in
cmpsl
mov
bound
scas
and
and
push
sbb
push
xor
mov
cltd
adc
inc
lods
and
adc
mov
inc
insl
in
das
mov
dec
mov
addl
xlat
lcall
jmp
push
xchg
mov
add
mov
and
jne
lahf
or
jg
xchg
hlt
int
fisttpll
out
int
jae
test
mov
cmp
imul
add
sbb
add
daa
iret
push
add
mov
dec
cli
scas
mov
pop
sti
insl
adc
cli
cmp
pop
dec
shll
cmc
xor
xor
ret
movsl
inc
fnstenv
push
dec
mov
in
mov
lods
fldl
mov
and
push
pusha
and
rorb
out
in
add
cmpsl
mov
mov
aas
out
jae
mov
mov
nop
push
cltd
fisttpll
leave
xchg
flds
aad
xor
cli
push
mov
jb
cmpsb
and
inc
movb
repz
ds
adc
or
scas
add
in
mov
push
out
ja
sbb
push
push
or
mov
inc
dec
xchg
mov
and
das
mov
xor
and
fidivrs
cltd
cmp
mov
cmpsl
sarl
out
adc
push
stos
icebp
push
mov
push
push
jbe
xlat
int3
sub
adc
mov
out
test
xchg
xchg
ret
dec
dec
inc
gs
les
jb
xchg
int
out
jbe
cltd
sbb
inc
pop
dec
loopne
fcmovnbe
dec
mov
test
pop
pop
mov
lds
xchg
jmp
mov
int
mov
mov
scas
pop
xor
popf
push
xchg
lods
add
push
jl
fcoms
lret
jns
lock
sub
aad
pop
mov
cwtl
or
jg
cs
sahf
push
arpl
not
add
scas
pop
leave
inc
xor
mov
test
shrl
fiaddl
cmp
dec
mov
or
je
mov
ret
xor
mov
add
stos
iret
add
pop
push
adc
inc
jbe
add
scas
cmp
sbb
or
dec
push
out
xchg
and
or
or
sub
mov
mov
movsl
cmpsl
int3
push
xchg
out
xchg
sbbb
cli
xor
or
sahf
xor
dec
jmp
or
pop
leave
fsubl
mov
sbb
jo
mov
push
and
mov
arpl
addr16
add
xor
add
std
ret
add
inc
scas
push
pop
sub
fldt
cmp
shl
shlb
sar
xchg
in
mov
in
push
test
aam
mov
shlb
sub
aaa
push
lahf
xchg
ljmp
inc
popa
jnp
scas
and
outsb
stos
jae
xor
out
pop
pop
inc
pop
pop
mov
pop
jg
aad
enter
flds
jne
dec
test
lods
push
adc
rolb
call
jnp
cmp
mov
mov
out
iret
mov
or
xchg
test
ss
or
adc
dec
test
pop
push
dec
sub
or
nop
notb
cmp
sub
sub
cmp
loop
sbb
hlt
cmp
mov
jnp
outsl
push
pusha
and
or
xlat
fucomip
dec
mov
les
sub
fs
fimull
arpl
cmp
clc
mov
push
jecxz
test
or
cld
mov
fidivrs
cmp
movsb
out
out
cmp
lods
fistpl
fwait
ja
in
sbb
add
pop
test
jl
push
sub
decb
inc
and
xorb
jp
fidivs
aas
cmc
cmp
in
sbb
cmpsb
inc
mov
lods
leave
mov
xor
xchg
fdiv
mov
mov
adcb
test
xor
in
cwtl
jg
ds
in
mov
dec
loope
pushf
stc
adc
call
aam
adc
addr16
inc
add
xchg
sub
je
or
dec
pop
xchg
out
scas
cmp
dec
mov
push
mov
lahf
je
or
xchg
adc
cwtl
aam
int
jae
add
out
add
cmpsb
mov
inc
lcall
pop
cmpsb
sarb
push
inc
rcl
xlat
aam
push
mov
gs
xchg
jb
cmc
xchg
imul
adcl
adc
push
pop
lret
xchg
loope
mov
dec
jbe
loopne
jmp
and
adc
lahf
and
dec
push
loopne
sbb
hlt
jl
sub
xorl
dec
lds
mov
sahf
fcomip
test
xchg
xor
cmc
ja
push
jmp
or
xchg
xor
cmp
xchg
jecxz
stc
cmp
test
cmpsl
pop
push
inc
stos
ficompl
sub
testl
add
sub
push
jb
lds
ds
xchg
scas
ljmp
daa
pop
push
cld
jo
sbb
subb
xor
jge
nop
dec
movsb
mov
mov
pop
pop
adcb
test
movsb
push
adc
rolb
fsubr
test
xor
add
mov
popf
cmp
je
stc
popa
cmpsb
lea
pusha
jo
arpl
or
out
or
jmp
jl
xor
or
mov
sbb
insb
ljmp
fwait
mov
and
inc
pop
es
xor
sbb
insl
shrl
or
es
pushf
cmp
mov
push
adc
rolb
sahf
or
inc
mov
adc
test
cltd
in
push
cld
lret
nop
int3
aas
pop
xor
shlb
gs
inc
dec
add
aas
mov
lahf
sbb
xchg
adc
imul
dec
mov
icebp
sbb
or
popf
lods
orl
shrl
repz
arpl
jge
pop
inc
lret
test
jb
push
sub
ljmp
add
cmp
sub
and
push
jae
test
hlt
inc
movsb
dec
clc
fsubrl
cmp
mov
push
jbe
pop
xor
shr
mov
or
pop
mov
sub
and
imul
mov
test
xchg
stos
cmpsl
insl
mov
mov
loopne
push
xor
cmc
push
pop
outsb
andl
mov
stos
and
nop
cmp
cmp
push
sub
xlat
cmpsl
jge
stc
lcall
xchg
jo
orb
inc
pop
andb
pop
jns
adc
scas
inc
fisubrl
sub
push
fs
sub
sbb
sbb
dec
in
pop
in
lock
sub
lock
add
lahf
nop
push
push
fsubr
shl
subb
aas
in
je
rcll
je
mov
hlt
and
ret
out
cmc
sbb
xchg
psrld
cs
aas
fbstp
push
jbe
cmpb
stos
pop
jge
shll
daa
fstl
pop
ss
sub
xchg
dec
data16
sbb
or
cmp
jle
lods
mov
cmovb
in
sub
fwait
xchg
jnp
mov
mov
loopne
movsl
aas
call
cmpsl
arpl
pop
aam
xchg
mov
pop
mov
push
push
add
push
je
imul
xor
popf
outsb
lcall
jno
icebp
je
aad
sub
aas
cmp
es
push
popf
jb
clc
data16
ljmp
aas
lea
ja
xorb
cs
mov
push
adc
in
lock
and
fildl
enter
adc
rcr
mov
js
push
decb
repnz
mov
sahf
adc
pop
rorb
push
shlb
outsb
jo
std
fcmovnu
lcall
sbb
bound
repnz
jge
mov
rcrb
leave
mov
sub
mov
popa
sbb
xor
dec
lods
pop
leave
iret
sub
inc
stos
lret
inc
cli
mov
test
stc
arpl
sbb
push
xor
mov
outsb
mov
lods
pop
sub
push
mull
lcall
addr16
in
decl
and
adc
mov
aaa
cmp
jbe
mov
enter
mov
xchg
lods
shrb
stos
aaa
or
lods
ret
jg
pop
push
int
jmp
test
test
fs
loopne
outsb
int
mov
test
clc
pop
ret
push
sbb
pushf
xor
notl
outsl
or
or
xchg
add
add
mov
stos
insb
adc
dec
fs
cs
aaa
movsl
jle
and
out
sbbl
hlt
xchg
das
push
sti
inc
pushf
es
mov
movl
xchg
lods
adc
sub
in
push
mov
lock
pusha
jnp
dec
adc
cmp
test
jg
out
or
inc
test
pop
mov
and
icebp
cmp
stos
sub
or
jp
enter
mov
mov
ss
sarl
pop
repz
or
flds
mov
mov
or
or
mov
or
inc
in
subb
xor
pusha
inc
lcall
mov
aas
dec
sar
mov
aam
shlb
sarl
out
loopne
push
mov
jl
leave
mov
sub
fwait
dec
movsb
mov
pop
xor
mov
lahf
cltd
xorl
adc
and
jecxz
adcl
pushf
outsl
loope
int
mov
inc
mov
dec
xchg
xor
push
xchg
pop
daa
sbb
cmp
mov
jo
and
in
xchg
loope
adcl
jle
pop
or
idiv
insb
loopne
add
jg
mov
jns,pt
push
test
push
aas
mov
push
movsb
xchg
mov
cmp
cmp
cmpsb
mov
popf
in
outsl
pop
je
add
jl
dec
add
cmc
ret
jae
xchg
aas
std
mov
les
jno
ja
push
adc
xor
mov
daa
int
jmp
lret
cmc
cs
ja
cli
cld
shl
xor
pop
inc
pop
sbbb
rorl
pushf
push
pop
sbb
aaa
imul
popa
sub
mov
fildll
mov
xchg
pop
jecxz
xchg
leave
ret
arpl
xor
lcall
jge
in
mov
clc
pop
subb
ljmp
cs
stc
popf
push
pop
add
ss
cmp
out
push
xchg
xchg
ret
add
jl
sahf
lds
mov
pop
mov
sbb
xor
call
xchg
inc
push
pop
sbb
mov
loop
int3
xor
push
jno
inc
sbb
das
or
adcb
cmp
mov
stos
and
arpl
rcr
mov
add
out
or
ljmp
test
pop
lret
inc
sbb
stos
cmpb
push
dec
lods
in
mov
pusha
push
es
mov
test
lock
cmp
jl
lcall
mov
pop
cltd
pop
mov
dec
stos
inc
jg
mov
cld
add
scas
sbb
sahf
lea
lock
pop
mov
fisttps
lock
inc
xchg
imul
iret
xrelease
clc
movsl
fsubrs
add
in
dec
loope
dec
jmp
das
push
sbbl
jecxz
xor
imul
xchg
mov
pop
xchg
aaa
dec
imul
stc
mov
inc
not
add
adc
mov
repz
mov
fstpl
xchg
ret
outsb
mov
add
outsl
and
mov
stc
jo
cmpsb
xor
stos
xor
adc
inc
sbb
sub
repz
test
imul
inc
cld
xchg
cli
lods
stc
add
inc
sub
scas
movsl
mov
jns
push
or
xchg
lret
shlb
cmp
fdivrp
inc
jnp
leave
cmp
push
sbb
icebp
and
sbb
pop
lds
mov
xchg
jb
pop
mov
inc
cmp
ret
scas
sub
ret
jmp
push
xor
imul
and
xor
loopne
pop
inc
pop
and
pushf
inc
jnp
push
cmc
cmp
cmp
negb
ret
jbe
pop
in
inc
jae
nop
push
cmp
mov
xor
data16
les
mov
and
insl
in
lock
or
dec
std
sbb
into
out
loope
int3
cmp
iret
loope
jnp
nop
fbld
fimuls
fisttpl
jmp
loopne
lea
lea
or
dec
xchg
add
xor
add
jnp
push
push
mov
sub
in
filds
sbb
add
sbb
imul
cmc
repnz
out
push
call
gs
cmpsl
jmp
jmp
lret
stos
adc
out
int3
dec
test
adc
aaa
cmp
inc
push
sbb
andl
pop
mov
mov
add
div
adc
filds
add
out
xchg
rolb
add
xor
mov
aam
push
stos
les
push
sub
icebp
adc
cmp
add
scas
pop
mov
sub
mov
stc
inc
rolb
inc
scas
sub
arpl
out
mov
xor
cmp
pop
xchg
cmp
push
enter
dec
aad
shll
dec
repnz
and
sbb
dec
cld
sub
push
ljmp
addl
fstpt
xor
daa
subb
add
inc
xor
or
dec
mov
inc
gs
sub
adc
popf
pushf
lock
xchg
mov
mov
hlt
jo
push
out
aam
push
jg
repnz
nop
mov
mov
aas
jge
push
pop
cmpsb
daa
dec
jae
inc
dec
subb
or
ljmp
xor
cli
pusha
sub
ss
pop
bnd
sti
xchg
sahf
xor
jae
sbb
iret
jle
dec
lret
arpl
push
mov
lods
lds
inc
sbb
xadd
pop
add
and
or
outsb
mov
inc
inc
fbld
jne
adc
mov
sub
pushf
addr16
pop
in
sub
add
dec
jp
jno
and
testb
into
fcmovne
sub
daa
or
sub
sub
repz
sub
xor
fbld
rcrl
lea
push
jae
out
jbe
fcomps
ret
test
dec
scas
jmp
dec
nop
dec
jmp
mov
and
mov
fistpl
jb
rorl
dec
push
fsubr
push
bound
adcl
in
fldcw
addr16
sbb
std
ret
push
sarb
int
xchg
out
dec
les
add
rcr
loopne
movb
rol
lds
inc
in
mov
fwait
cmp
aam
iret
mov
test
add
sbb
enter
push
filds
ja
test
cmp
cli
imul
mov
rcrb
aas
mov
cld
push
push
shl
xchg
adc
xor
aad
mov
xlat
ss
pop
scas
popf
xchg
push
loope
cvtdq2ps
icebp
mov
mov
lock
fmulp
xor
cs
fadds
aad
cmp
sbb
mov
xor
imul
mov
pushf
add
mov
jbe
ret
fildll
or
xor
loop
jle
adc
push
pop
xchg
out
fdivs
xchg
aaa
rcrb
int
pop
shll
xchg
bound
fstpt
jbe
packuswb
mov
fldcw
sbb
mov
cmp
test
cmpsl
xchg
stos
jns
cwtl
dec
orb
pop
push
xor
sbb
repz
imul
mov
jecxz
mov
cmp
clc
js
cmp
jae
inc
aas
aam
push
out
movswl
xor
xlat
inc
adc
subb
sub
outsl
ret
iret
push
rorl
cmp
insl
fstps
dec
xchg
sub
xlat
lcall
repnz
les
dec
test
xchg
mov
je
pusha
mov
push
push
dec
je
and
or
mov
adc
jle
lods
mov
je
sbb
jl
adc
mov
cld
mov
pop
pop
sub
mov
cmpsl
mov
daa
pop
mov
jb
pusha
mov
movsb
cmp
xor
out
daa
rorb
je
aam
inc
fldt
pop
xchg
ds
popf
xor
xchg
or
lods
insb
pop
cmp
or
inc
jne
fcoml
das
mov
test
mov
mov
sub
aad
jp
sub
pop
pop
push
jecxz
xorl
mov
jae
mov
push
or
lock
test
or
xchg
in
cmp
pop
push
enter
sub
jo
push
sbb
add
and
pop
mov
mov
mov
add
dec
push
fisttpll
test
lcall
mov
add
jge
popa
cmpsb
test
jge
pushf
aam
inc
je
lds
test
ja
push
addb
adc
pop
dec
jmp
pushf
pop
stos
popf
es
insl
fcmovbe
push
xchg
dec
mov
mov
or
lods
hlt
pop
pop
pop
inc
arpl
dec
mov
mov
mov
or
cmp
iret
xlat
mov
loop
dec
pop
dec
lret
lcall
xchg
mov
sub
push
add
jo
aaa
iret
pop
sbbb
cmc
es
movsl
inc
fwait
idivb
push
loop
adc
divb
in
mov
inc
iret
add
pushf
adc
in
lcall
ror
out
ja
dec
cltd
sahf
inc
addb
adc
shll
xlat
fwait
jmp
loope
add
push
jno
pop
daa
pop
in
and
loopne
rcrl
and
leave
pop
and
mov
lret
adc
adc
adc
jae
xchg
xchg
inc
push
aam
and
mov
stos
dec
inc
cmp
sbb
sub
xchg
sub
jg
jno
xor
aam
cmpsb
les
mov
push
mov
lret
cmp
es
cmpsb
testb
mov
rcl
xor
ss
sub
pop
mov
leave
iret
stos
popa
rolb
out
xchg
cmp
inc
sbb
adc
into
pop
std
leave
dec
filds
into
push
add
inc
addr16
push
cmp
adc
and
iret
and
adc
push
cmpsb
push
push
or
pop
xor
je
popa
pop
lret
sbb
fistl
or
jne
pop
xchg
scas
lods
lcall
cs
in
mov
pop
mov
mov
outsl
mov
inc
push
mov
loop
mov
ds
loop
scas
rcll
dec
int3
push
mov
jp
dec
pop
repz
lock
cmp
fbstp
mov
lock
mov
mov
pop
mov
cltd
mov
jg
das
pop
dec
inc
sbb
jb
jecxz
push
pop
ds
imul
pop
dec
loop
hlt
push
mov
aam
inc
push
xchg
and
mov
fs
out
decb
jbe
daa
pop
in
cmp
adc
loope
jmp
fwait
enter
mov
lcall
sub
and
push
xchg
xor
loope
les
gs
loop
mov
mov
ret
sub
pop
jb
pop
pop
push
fcomi
fmulp
xchg
mov
sub
sbb
fnstcw
insb
cltd
std
add
les
lret
mov
pop
push
inc
mov
in
sbb
mov
fnstenv
into
out
stos
insl
pop
adc
enter
test
fbld
lods
aaa
movsl
dec
in
fdivrl
mov
and
and
xchg
sub
dec
inc
cli
mov
ljmp
sbb
int
jbe
fildl
sarb
pop
add
adc
sub
sub
into
fsin
out
and
icebp
xchg
lock
sub
mov
daa
js
dec
add
ret
cld
cwtl
sbb
sub
pop
xor
or
cmc
icebp
push
mov
cmp
inc
add
into
xor
dec
dec
pop
fcmovne
out
xchg
in
hlt
add
mov
cltd
and
xor
xor
pop
xchg
xchg
test
adc
aad
nop
int3
repnz
and
adc
inc
mov
xchg
dec
fs
jle
lea
out
ljmp
aaa
lret
ret
insl
push
cld
bound
sub
scas
sbb
cmp
std
sbb
pop
or
mov
lods
mov
cli
cmpsl
jmp
xor
enter
decb
add
sub
push
pop
mov
iret
sub
sahf
xor
stos
fstpl
push
ret
xchg
jp
scas
cmp
dec
out
addr16
in
enter
movsl
hlt
cmpsb
adc
push
xor
mov
outsl
xlat
mov
mov
gs
fidivs
loope
sti
jl
in
jmp
xchg
popa
mov
cmp
cmc
xor
add
mov
jns
or
pop
shl
shll
inc
and
add
adc
mov
push
cltd
xor
xor
sub
xchg
adc
mov
js
clc
outsb
imul
fcoms
push
mov
pop
fmul
cmp
xor
jge
mov
push
sbb
aaa
adcb
jmp
adc
sub
dec
mov
je
jecxz
lea
or
cmp
icebp
sub
shll
pop
insb
sbb
inc
out
jne
fbstp
les
add
jp
scas
push
fildll
or
cwtl
loop
adcb
imul
pop
adc
push
dec
into
cli
mov
mov
xor
lcall
lret
add
sub
imul
test
jcxz
out
pop
dec
xor
jge
jae
out
stos
bsr
jno
jge
jecxz
out
cmp
lahf
push
pushf
or
and
xor
icebp
push
sbb
ja
lods
xchg
les
pop
test
cs
iret
fiadds
fs
rclb
adc
testb
daa
stos
iret
pop
scas
sahf
jns
cmp
and
mov
jnp
fwait
adc
push
push
mov
pop
icebp
rorl
insb
mov
dec
ds
addl
pop
enter
stos
fimull
pop
in
mov
repnz
add
jecxz
imul
mov
in
xchg
gs
std
call
add
push
call
pop
cmp
sub
or
pop
sbb
jge
mov
mov
in
jbe
add
les
mov
ja
pop
sbb
and
jnp
cmp
fisubrs
pop
in
dec
cmp
cmp
adc
and
jmp
cmp
stos
int
ds
nop
xchg
shll
insl
rolb
ficoml
es
repnz
push
imul
aaa
enter
arpl
pop
sub
xchg
and
fcmovb
adc
mov
ret
mov
ja
xor
testl
push
mov
popf
lret
jns
lods
jns
shr
testb
cld
ss
mov
cltd
push
push
push
sbb
push
xlat
pslld
aas
clc
fucomip
in
imul
aaa
mov
xor
jl
cmpsb
lea
add
in
xor
insb
enter
push
sub
push
int3
and
and
mov
stos
add
mov
test
jp
adc
and
xor
fsubl
xchg
and
cmpsl
icebp
repnz
push
or
aas
sub
or
inc
push
arpl
fbld
dec
lea
outsb
push
sahf
add
scas
shll
lds
push
mov
fists
in
shll
adc
daa
ja
mov
cmovl
shl
cmp
imul
idiv
push
xlat
dec
mov
lret
sti
insb
enter
pop
fwait
repz
xchg
je
loope
dec
lcall
mov
mov
or
dec
and
out
and
aas
inc
jae
fsubp
popa
lahf
jo
rolb
fsub
clc
jo
xlat
xchg
pop
sbb
cld
lds
push
or
fwait
dec
sbb
fstl
mov
and
lods
mov
mov
push
enter
dec
xor
data16
jne
test
scas
mov
test
ficomps
dec
lods
test
adc
shlb
fyl2x
or
outsb
jl
xchg
int
fsubl
xlat
jl
popa
test
ret
cmovb
xlat
push
or
inc
or
sbb
sub
mov
leave
scas
sti
lahf
add
mov
xchg
push
mov
repnz
push
ret
adc
add
cmp
punpcklwd
dec
and
in
lret
das
pushw
shl
jno
popf
xor
mov
pop
sbb
aad
inc
dec
mov
cwtl
jno
mov
in
out
aas
add
fwait
pop
pop
fstl
iret
aaa
fldenv
stc
repnz
addl
and
js
lcall
inc
cmpsl
xor
mov
sbb
call
pop
dec
lods
sbb
stos
sar
jns
fistl
dec
stc
ja
jnp
cwtl
outsb
xlat
dec
push
call
lret
dec
repz
xchg
mov
je
lock
dec
mov
lock
lahf
pop
pop
sub
push
test
push
dec
lea
dec
xchg
sbb
mov
test
rolb
mov
sbb
push
mov
test
mov
jmp
mov
push
aad
insl
xchg
jp
xchg
push
adc
pop
je
jmp
jnp
inc
sbb
daa
mov
lods
push
call
cmp
rol
rorb
stos
fstpt
sbb
push
daa
mov
addr16
xor
neg
mulb
mov
push
rclb
mov
jge
test
lret
aam
xchg
lret
or
push
mov
imul
scas
mov
std
xor
adc
cmp
mov
pop
mov
shrb
pmullw
sbb
sti
ficoml
mov
scas
xor
sbb
xchg
stos
iret
push
lcall
mov
mov
jb
jns
mov
sub
mov
or
and
push
les
aad
push
xor
das
mov
jg
jns
or
jmp
mov
push
inc
add
adc
cld
cltd
lret
dec
popa
or
mov
les
adc
pop
mov
mov
xor
lods
push
sbb
lods
and
fimuls
xor
roll
jnp
test
xchg
or
test
cltd
test
push
lea
addr16
into
mov
mov
pop
add
pop
mov
lods
xchg
jg
pop
push
mov
std
scas
jno
adc
jb
loope
and
mov
icebp
inc
pop
push
and
xchg
cmp
adc
sbb
in
sub
jmp
mov
jne
sbb
sbb
out
cmp
xchg
imul
scas
cmp
push
cmpsb
in
out
pop
pop
into
cmp
dec
orl
mov
pop
lea
dec
cli
repz
jecxz
jmp
call
je
lahf
sbb
ret
les
jbe
cmp
adc
xchg
cmc
xchg
shrl
jo
mov
iret
sahf
outsb
fnsave
out
add
jmp
or
sub
rolb
mov
jae
add
pop
or
xor
inc
lds
es
gs
xchg
dec
or
into
add
mov
scas
sub
push
push
dec
inc
scas
sub
push
mov
xchg
test
push
sbb
outsl
jmp
mov
shl
cltd
imulb
pop
aam
ret
mov
xchg
mov
sub
std
push
or
xor
inc
mov
ret
add
jg
test
mov
lahf
xlat
add
mov
push
iret
cmpsl
ja
dec
mov
in
std
mov
cwtl
add
stos
xor
test
movsw
mov
clc
dec
and
pop
pop
push
or
jo
das
lcall
sarl
shl
inc
sub
mov
dec
add
push
mov
dec
in
std
push
xlat
dec
insl
inc
ljmp
pusha
add
pushl
mov
mov
dec
out
inc
sbb
pop
jb
addl
arpl
jns
movsb
out
pop
or
stos
sub
and
jne
and
push
inc
ljmp
imul
out
sub
test
or
xchg
xchg
leave
jne
shl
jecxz
or
dec
cld
jmp
mov
test
adcl
mov
sbb
sahf
jle
outsb
inc
imul
fnsaves
push
push
jnp
or
sbb
mov
sub
ret
mov
push
sub
imul
push
or
es
sarb
mov
mov
or
xor
ds
jbe
push
mov
out
shll
cmpsb
popa
mov
inc
je
add
mov
roll
sub
or
xlat
mov
dec
sbb
cmp
aas
fdivp
pop
pushf
fldenv
insb
mov
mov
or
jmp
pop
sub
pop
cld
cwtl
adc
test
sahf
adc
jge
cmp
sub
jno
xor
mov
mov
push
les
shll
mov
mov
fdivp
add
add
rcr
stos
jecxz
in
and
sbb
mov
int
pop
dec
movsl
dec
mul
jae
cmp
ret
sar
lds
js
mov
fnsave
inc
leave
lret
sti
jecxz
dec
mov
aas
pop
mov
mov
mov
jae
push
in
mov
hlt
mov
popf
sahf
das
cld
jns
outsl
std
adc
xor
popa
cld
cmpsl
jnp
mov
lahf
sub
addb
add
pop
push
mov
pop
ret
leave
push
adc
lea
cld
jge
pop
hlt
push
int
add
inc
cmp
arpl
xor
or
xchg
xor
mov
dec
dec
repz
std
mov
scas
gs
and
xchg
mov
xor
into
push
stos
pop
test
sub
mov
fiadds
frstor
hlt
sti
movsl
orb
lock
sbb
mov
in
loop
aaa
js
fsubrl
jbe
mov
sbb
push
and
jle
dec
push
aas
ficoms
push
in
jecxz
fldl2t
popa
shl
iret
rcrb
sahf
jp
adc
jecxz
pushf
mov
aaa
addr16
inc
jb
ret
das
aam
lret
int
jbe
add
fcmovnu
jno
and
call
adc
pop
fsubs
movsb
lcall
fdiv
push
cmp
sbb
cmp
pop
addr16
mov
mov
icebp
rcrb
dec
inc
enter
inc
in
xor
punpckhdq
xchg
pop
sarl
xlat
mov
out
jl
add
repz
bound
sbb
adc
xchg
aaa
mov
cs
aam
jbe
imul
mov
jl
xor
adcb
adc
cld
push
jmp
loopne
in
sbb
sub
inc
cmp
cltd
mov
lret
add
or
es
mov
dec
mov
jno
roll
cltd
jge
je
lret
mov
mov
test
jb
cmp
into
inc
cli
sarb
dec
mov
std
mov
pop
ret
ja
xchg
std
or
pop
xchg
aad
ds
xor
push
add
ljmp
fidivs
inc
loope
cmp
shlb
lods
adc
sbb
ss
sbb
adc
in
mov
dec
aaa
subb
cld
adc
jne
pop
jecxz
fidivrs
push
xor
sub
addl
out
ret
in
push
mov
mov
sahf
pusha
outsl
or
jns
into
jl
jl
push
lcall
std
vandpd
cmpsl
sbb
repz
out
and
insb
jl
mov
mov
mov
std
cmc
add
xchg
jg
jle
loopne
aas
pop
pop
pop
pop
ds
sub
lea
and
jp
cmpsb
or
test
adc
jo
mov
mov
or
dec
in
lods
xchg
shll
xor
and
mov
popf
mov
push
test
jne
lock
mov
fldcw
mov
and
xchg
sahf
xchg
lahf
arpl
in
jl
out
add
mov
mov
jl
mov
lret
ja
cmp
notb
mov
gs
push
cmc
je
push
in
in
add
sahf
das
je
pop
iret
mov
sbb
xchg
jae
dec
xchg
iret
push
ror
xor
pop
sahf
pushf
inc
js
mul
sbb
mov
ret
mov
icebp
int3
cmpsl
das
call
dec
aam
mov
inc
lea
and
mov
adc
mov
and
jg
fistl
pop
jbe
icebp
jmp
jbe
pop
faddl
into
xor
dec
sbb
sub
adc
xor
push
leave
jecxz
into
xor
xchg
stc
push
or
popf
inc
and
add
fnsave
jnp
push
cli
scas
or
pop
ss
mov
pop
cs
andl
je
add
inc
xor
shlb
lock
lcall
cmp
inc
aas
int
imul
mov
cmp
out
test
cmp
cmp
jne
rorl
aad
cmp
aas
jg
adc
push
lret
ret
out
rcrl
push
lret
sub
fldenv
xor
loope
xlat
push
or
popf
test
jb
rcl
push
mov
cmp
test
cld
movl
inc
movsl
lds
mov
scas
jb
jne
arpl
out
mov
movsb
aam
lret
jo
subps
in
fwait
ret
repz
mov
fbstp
mov
push
mov
sbb
mov
cltd
sub
mov
lahf
fldcw
push
fnstsw
mov
sbb
mov
xchg
cmp
add
lea
mov
inc
adc
dec
mov
sbb
arpl
popa
mov
rcll
xchg
jge
add
and
and
pushf
ja
lods
stc
int3
addr16
lret
test
out
mov
subb
scas
rcrl
push
shlb
xchg
pop
aaa
je
fld1
adcl
jl
fcmovbe
outsl
sti
stos
push
sbb
fdivrs
mov
rorl
adc
jmp
mov
pop
jle
in
cld
mov
int
cmp
push
ret
shrl
add
push
jmp
aam
aaa
pop
rol
cmp
add
scas
aam
or
adc
sub
jns
sub
cmpsl
popa
addr16
pop
pushf
xchg
mov
out
lods
nop
cmp
nop
cmpsb
out
and
inc
adc
dec
inc
lods
data16
and
out
pop
popa
addr16
loopne
sbbb
sti
fimuls
sub
test
aaa
inc
les
adc
xchg
addr16
in
add
push
xchg
add
sub
imul
loope
jmp
mov
dec
mov
iret
sub
into
pop
xor
dec
dec
leave
jns
or
and
cltd
leave
pop
and
cli
in
mov
shrb
outsb
mov
mov
aaa
nop
inc
xor
cld
mov
inc
ljmp
je
mov
test
add
ja
inc
cltd
clc
mov
xchg
jg
in
mov
movsl
jge
push
in
pushf
sahf
loop
test
or
pop
dec
and
cli
test
stc
pushf
dec
test
adcl
mov
push
and
gs
fists
subb
push
das
and
mov
jmp
push
incl
push
sahf
movsb
je
sub
in
inc
xor
push
pushf
push
ljmp
pusha
xor
pop
push
mov
push
or
sbb
fmuls
rorl
aam
mov
add
mov
std
inc
shrb
fmull
pop
shlb
sub
cli
pop
xchg
xor
jmp
fxch
adc
ljmp
into
subb
pop
xchg
jecxz
lret
sahf
cs
xor
inc
dec
pop
filds
mov
insb
sarb
insl
stc
lods
pop
xchg
jnp
mov
sbb
negb
dec
hlt
and
lret
out
xlat
adc
push
sti
fcompp
and
cmp
inc
fdivs
sbb
std
ss
jmp
sbb
cmp
mov
in
cwtl
iret
fldenv
and
cmc
mov
lea
ffreep
xchg
mov
popf
jl
test
and
das
xlat
inc
aad
enter
xorl
sahf
mov
call
cmp
xor
push
imul
and
sbb
mov
push
out
cltd
jbe
fwait
aad
pop
jb
add
jno
shr
mov
mov
out
out
cmp
mov
mov
mov
call
cmpsl
dec
adc
mov
in
fsts
xorb
mov
pop
push
fldl
mov
fsubl
loop
or
mov
pop
test
mov
xchg
sub
aas
insb
aaa
psubw
ret
push
xchg
insl
in
mov
pop
push
or
popf
push
push
sub
movl
pop
xchg
cmc
xor
mov
leave
aaa
jle
lods
dec
mov
lret
repz
ljmp
sbb
inc
add
xor
adc
int
mov
sub
jmp
outsb
xchg
push
ljmp
push
into
gs
lods
push
les
or
in
lcall
xor
sbb
movsl
push
inc
dec
cli
les
sub
lahf
mov
sub
out
xor
inc
aam
mov
lods
push
or
xchg
inc
pop
push
xchg
stos
cmp
cmpsl
inc
sub
dec
jb
or
incl
add
dec
icebp
cmpsl
mov
aas
mov
cmp
stos
xchg
dec
into
scas
pop
jae
popf
push
mov
aas
jbe
add
adcb
jo
out
jno
insl
xor
dec
adc
or
loope
enter
push
std
lods
add
mov
adc
add
repz
mov
sbb
mov
fisubl
lock
jb
je
aas
imul
orl
repnz
cwtl
loope
jae
inc
pushf
lret
imul
mov
bound
cld
pop
out
and
jne
dec
add
jno
pop
sbb
fdivl
das
and
call
add
sahf
xor
xor
cmpsb
scas
mov
inc
fwait
mov
mov
fidivl
mov
loopne
fidivrl
xchg
outsb
cli
ja
out
out
icebp
shlb
or
cltd
xor
mov
sbb
clc
pop
pop
pushf
add
test
imul
sub
and
xchg
mov
push
xlat
sub
xchg
ret
pop
xor
ret
fucomi
mov
ja
sbb
xor
je
xor
add
test
mov
cmp
xchg
lods
popl
and
das
jecxz
jge
inc
mov
int3
clc
jne
adc
data16
mov
dec
jle
out
xchg
scas
imul
aam
pop
loopne
or
mov
mov
add
sbb
mov
mov
lcall
sub
loop
jle
dec
ret
cwtl
jmp
sbb
and
sub
shlb
inc
mov
push
cmp
pop
jo
mov
dec
cmpsb
mov
adc
or
or
stos
fisttps
jmp
dec
mov
jecxz
es
int3
and
jb
push
sbb
sbb
sbb
out
or
shrl
sbb
jnp
sbb
xchg
jl
cmc
mov
mov
xor
lock
push
add
or
or
js
push
mov
inc
push
das
arpl
sbb
jmp
inc
mov
fxch
shll
mov
mov
cs
fsubl
addb
cltd
rorb
imul
lea
and
shlb
or
rcrb
jl
hlt
int
sub
fbstp
sbb
cmp
push
ret
xor
in
rcll
lcall
mov
movsb
and
xchg
adc
jmp
icebp
mov
add
cmp
adc
clc
pushf
sahf
add
dec
out
push
xor
inc
scas
xor
enter
das
mov
lds
jnp
sahf
fadds
and
ret
sub
xchg
sbb
mov
adc
jae
cli
xor
jmp
stos
stos
aam
es
out
dec
insl
sbb
pop
xchg
xchg
jae
mov
pop
jl
pop
and
enter
adc
mov
xor
das
jg
stos
subl
mov
ljmp
imul
dec
adc
jno
mov
rcrl
and
and
call
mov
bound
mov
sarb
sub
in
jmp
pop
sbb
add
mov
jmp
lcall
loop
xor
dec
pop
inc
fcmovb
mov
sub
inc
iret
rorb
mov
and
mov
cltd
add
xchg
or
pushf
int
jne
adc
lds
and
ret
dec
addl
repnz
out
sub
mov
adcb
cli
data16
add
mov
push
ficoml
pop
pop
push
js
cmp
orb
bound
iret
das
xlat
mov
and
push
and
fidivrl
ficomps
in
push
in
rorb
arpl
mov
mov
inc
movsb
lret
popa
imul
in
sbb
out
into
outsb
add
jecxz
movlhps
push
pop
std
repnz
test
jne
add
jo
call
divb
int3
ret
das
sub
mov
cmp
cmp
inc
fidivrs
jb
pop
pusha
sub
rol
outsl
mov
mov
andl
push
xchg
inc
popf
and
adc
movsb
cmp
push
imul
xchg
test
cmp
gs
push
pushf
pop
ds
ret
sub
aam
test
dec
dec
loopne
fdivp
mov
inc
push
xlat
mov
pop
test
push
pop
iret
inc
std
jns
in
adc
push
sbb
inc
sbb
pop
mov
stos
test
aad
dec
lods
movsl
std
cltd
dec
call
jle
sbb
ss
pop
mov
sub
cmp
mov
push
xchg
out
ret
loope
test
dec
pop
inc
dec
mov
cmp
sbb
push
push
sbb
add
push
add
nop
cmp
out
pop
rep
inc
sbb
push
ficompl
fnstenv
pop
jmp
andb
frstor
daa
and
ss
push
push
jo
data16
xchg
rclb
loopne
mov
mov
stc
pop
push
mov
cmpsl
pop
sub
jno
adc
cmp
and
push
ja
fnstenv
mov
mov
mov
jl
sbb
mov
dec
jmp
cwtl
pop
rcrl
pop
int3
shrl
in
ret
sbb
and
add
mov
std
movsl
pop
inc
jns
int3
and
xchg
shrb
js
mov
jmp
jle
cmp
sub
in
lret
push
in
in
stc
fidivrl
jae
cmp
vpshufhw
fnstenv
movsb
jg
imul
mov
mov
xor
inc
es
or
cmpsl
pusha
and
add
mov
iret
jecxz
jnp
mov
lock
lret
hlt
iret
in
add
lea
rolb
out
xchg
sbb
shrb
dec
mov
dec
sbb
dec
int
pusha
mov
sahf
sbb
xor
push
jb
fsubp
scas
xchg
add
mov
mov
mov
xchg
test
adc
cmpsl
cli
sub
pop
aaa
pusha
cs
cwtl
mov
aas
loope
cmpl
sarl
xchg
push
mov
adc
popf
pop
sbb
js
jmp
rcrl
inc
enter
in
mov
dec
scas
mov
addr16
push
mov
mov
pop
pop
test
outsb
int3
or
lahf
or
adc
in
movsb
stos
ja
mov
les
push
jl
int
and
fmuls
test
dec
xlat
jns
scas
test
cmpsl
pop
pushf
pop
scas
and
adc
jp
pop
shrb
cmpsl
int
or
mov
sbb
cwtl
mov
push
or
pop
les
aad
dec
pop
imul
out
sbb
sub
and
dec
lcall
loopne
in
lds
mov
dec
push
xlat
loopne
xor
jae
push
mov
test
jnp
push
inc
in
into
sti
cmp
sub
sub
stos
lock
push
xchg
jne
ja
jns
test
and
cmpb
or
shl
mov
jl
insb
icebp
pusha
pushf
enter
std
clc
mov
aad
mov
mov
lret
movsb
js
pop
lret
xor
xchg
mov
jno
in
jo
fcompl
lret
sub
jl
mov
lret
adc
mov
cs
jns
fsub
or
pop
cli
in
lods
daa
xor
scas
mov
push
push
push
into
inc
xor
das
mov
xor
mov
or
xor
sub
lret
xlat
fiadds
inc
in
push
pop
orb
ljmp
imul
test
cmp
xchg
shll
add
cmc
repnz
into
daa
popa
jg
or
sub
pop
pop
rsqrtps
out
dec
inc
jmp
cmp
mov
loope
push
das
and
testl
add
mov
xchg
push
in
jle
mov
and
jl
rcrl
fisttpl
xchg
out
xorl
hlt
bound
aas
popa
and
add
rol
aam
adc
icebp
sbb
repz
in
fstps
mov
fstps
jecxz
pop
adc
stos
pop
mov
dec
mov
lds
insb
and
mov
xor
and
outsl
call
dec
adc
negb
pop
ret
dec
jae
mov
xor
stos
sahf
int
ljmp
bound
add
mov
or
aas
mov
jmp
fs
cmp
out
xchg
insb
mov
push
call
jnp
add
lcall
cmp
push
daa
int
dec
sbb
jge
fstpt
test
pop
pop
rclb
push
push
push
repz
imul
enter
lea
xchg
fdivr
jns
fwait
movsb
xchg
decb
sbb
push
push
add
jmp
fildll
and
mov
hlt
cmp
in
mov
js
push
addl
rorb
jmp
sarl
in
xor
add
xor
xchg
lods
fsubrl
lret
sti
jecxz
stos
lret
xor
pop
jo
or
pop
aas
scas
cmp
lcall
lret
pop
call
insw
mov
les
ds
es
xchg
flds
sub
dec
push
push
cltd
jae
out
dec
fs
rorb
outsl
repz
sbb
dec
mov
ds
mov
sub
cmp
xorl
pop
push
pop
and
mov
cmp
addb
lods
leave
repz
ret
xor
mov
adc
sbb
or
pop
jl
sarl
jb
ds
lcall
mov
jne
test
mov
call
andl
cmp
inc
test
outsl
add
and
pusha
gs
mov
jnp
push
xor
outsl
lret
fs
popf
inc
inc
pop
cmp
jbe
arpl
xor
stos
aad
and
xor
push
sub
jmp
lods
mov
or
sub
sub
mov
add
push
jae
ds
lcall
movsl
xor
mov
int
dec
into
mov
mov
inc
in
pop
out
jecxz
in
push
sub
dec
sbb
std
cld
insb
in
aam
imul
adc
iret
xchg
lods
outsl
pop
stos
push
jnp
pop
stos
ja
cmpsl
mov
test
andl
mov
cmp
insl
adc
into
mov
push
ror
in
cmp
in
test
das
bound
imul
dec
add
enter
iret
cmp
rol
pusha
aas
lret
loop
or
adc
rolb
jns
leave
orl
sub
outsb
jp
or
imul
ss
in
lret
into
xchg
jno
out
xor
int3
cmc
xlat
in
inc
addr16
mov
pop
into
adc
es
push
test
into
pop
sub
stos
pop
lods
fistpl
or
or
in
add
cli
add
jg
lods
pop
cmp
xchg
fildl
loop
cmp
rorb
negl
inc
sub
pop
xchg
jge
sub
movsb
ss
out
xchg
and
aaa
push
cmp
shlb
mov
leave
push
add
inc
cs
popa
or
push
arpl
pop
gs
and
add
xor
shlb
vpsrld
pop
mov
xor
cmp
dec
mov
xchg
test
icebp
or
xor
pop
in
cli
in
add
or
in
push
popa
pop
push
inc
call
add
repnz
ljmp
and
call
cs
jbe
mov
imul
cmp
ss
sub
gs
orl
cmp
lds
cld
sbb
cs
lret
out
push
cmpsb
rcrb
pushf
inc
andb
fstpt
pusha
fistpl
push
inc
in
in
sub
fldcw
push
jp
sub
inc
add
dec
or
pop
mov
adc
daa
adc
sub
stos
mov
cmpl
fadd
lret
adc
mov
lods
dec
pop
sub
and
mov
movsl
movsb
mov
push
sarl
ljmp
ror
mov
call
fidivl
jbe
pop
bound
sub
js
xchg
hlt
repnz
stc
xchg
and
fdivr
daa
or
scas
xlat
out
gs
aad
xor
movsl
jae
sbb
mov
shrl
aad
test
adc
movsl
out
stc
xor
push
movsb
sbb
push
loop
les
push
or
cmpl
addr16
cmp
nop
in
jg
mov
imull
popf
mov
adc
aam
scas
gs
cmp
adc
wrmsr
mov
pop
sbb
loop
lahf
mov
and
sbb
pop
flds
inc
shrb
push
mov
mov
add
clc
cs
push
mov
incb
or
negb
fimull
mov
fldl
xchg
xchg
sbb
lahf
mov
adc
inc
stos
inc
sub
bound
xor
jecxz
xchg
data16
fsubl
call
cmp
mov
dec
jle
sub
scas
jo
push
dec
sub
lods
daa
push
adc
mov
cmp
test
adc
add
mov
divl
push
stos
stos
cmc
mov
push
repz
xor
add
pop
test
cmp
inc
and
jb
sbb
add
cwtl
sub
sti
aad
add
insb
push
push
rorb
and
outsl
mov
shl
outsb
cltd
inc
jae
fdivs
scas
jmp
sti
pop
dec
sahf
fstpt
add
sbb
inc
fisubs
lock
in
xorl
dec
push
addr16
loop
out
test
lcall
lea
jb
mov
sbb
icebp
and
in
outsl
jg
loop
pop
stos
mov
sub
int3
je
rcrb
pushl
adc
mov
rcrb
dec
imul
in
add
sbb
sar
mov
movsl
push
addr16
mov
inc
pop
pusha
pop
leave
into
adcb
leave
int3
adc
jno
add
bound
or
inc
pop
stos
data16
mov
xchg
lods
fldl
push
mov
inc
fs
adc
bnd
dec
lea
scas
adc
xchg
subb
add
jnp
mov
xchg
inc
inc
dec
sub
push
inc
pop
pop
adc
fcoml
cmp
insb
pop
jl
xor
add
test
ffree
lahf
or
ret
xchg
lods
in
adc
std
jmp
shll
or
jl
xchg
cmp
sahf
roll
stc
icebp
add
pushw
cmp
jle
lret
inc
ss
cltd
sub
inc
int
sbb
jl
pop
into
inc
rcr
jb
jmp
mov
pop
xchg
mov
ja
pop
stos
fwait
mov
andl
xor
mov
pop
enter
sub
push
ret
out
notb
ds
testb
pop
mov
mov
and
cmpl
stos
incb
sub
xchg
inc
pop
mov
xchg
mov
inc
xchg
enter
fsubr
adc
and
cmc
data16
divl
fnstsw
jno
xor
movsb
mov
jl
bound
and
es
sbb
pop
mov
xor
xchg
test
and
sbb
ret
cmp
sti
js
ja
in
lea
test
or
je
or
das
push
pop
xor
inc
lret
fnsave
out
xor
cmp
add
test
popf
fcoms
xor
idivl
into
jp
mov
movl
pop
cld
mov
filds
xor
fld
fildl
shr
add
inc
lret
loopne
stos
jp
and
jb
inc
jns
xchg
mov
insl
xchg
enter
hlt
cmp
shll
fisubrl
pop
call
cmp
pop
loope
cmpxchg
es
inc
sub
pop
inc
andl
jmp
stos
fidivrs
jne
mov
mov
pop
xor
mov
mov
imul
inc
je
imul
pop
mov
clc
pop
fwait
test
int
or
inc
mov
js
cmp
sub
shrb
xchg
loopne
push
mov
fmuls
push
xor
adc
aas
inc
nop
jl
inc
add
dec
mov
iret
mov
ret
ret
ja
es
scas
cmp
cmp
push
mov
or
stc
insl
shlb
in
shlb
sub
movl
or
shll
negb
dec
adcl
daa
lods
mov
pushf
xchg
and
inc
lods
push
push
xchg
add
adc
jmp
int
cltd
popa
dec
adc
cmp
xor
imul
iret
xor
mov
addl
cmp
pop
hlt
arpl
dec
xchg
lds
or
stos
das
sbb
mov
orb
xchg
pop
loope
inc
jbe
adc
adc
insl
loope
cmp
pop
iret
mov
fwait
nop
addr16
stc
jp
test
call
ds
out
cmp
mov
jbe
in
filds
or
scas
arpl
lcall
adc
daa
mov
xor
and
sub
jecxz
jmp
addl
xchg
call
loop
stos
icebp
push
pop
divb
mov
sub
add
add
sbb
daa
sbb
dec
xlat
xchg
pop
add
sub
and
int
movsb
xchg
mov
cmp
sbb
test
cmp
sahf
jmp
inc
movsb
repnz
shl
mov
mov
xor
sub
mov
xor
int3
fwait
and
insb
adc
xor
dec
xor
fnstenv
lret
ds
lahf
inc
ja
test
and
mov
lock
push
rclb
push
dec
stos
mov
out
mov
add
lock
add
aad
xor
dec
jg
stc
inc
int3
scas
pop
test
add
mov
leave
gs
and
inc
repnz
mov
into
int
daa
cmpsl
roll
mov
pop
mov
mov
ucomiss
imul
dec
pop
xor
sahf
xor
test
int3
pop
int3
cld
xchg
outsl
cld
pop
add
dec
or
imul
addl
enter
clc
mov
pop
jp
int3
ds
roll
clc
or
stos
add
inc
je
fsubl
or
sub
xor
test
adc
out
add
pop
fs
mov
gs
rorl
pop
mov
cltd
mov
cmp
sahf
movsb
les
fnstsw
and
jns
add
retw
sub
dec
add
les
adc
jnp
imul
dec
dec
jecxz
or
es
mov
pop
sbb
test
bound
clc
push
xchg
ret
and
xchg
rcl
xor
xchg
jno
xor
lods
jno
jge
pop
loope
scas
lahf
sub
dec
cmp
mov
popf
aaa
mov
inc
dec
sub
insb
mov
mov
xor
fcomps
pop
cli
lds
outsl
sbb
pop
mov
out
test
or
sbb
lods
lods
std
and
clc
imul
mov
xor
mulb
enter
mov
aam
cltd
outsb
arpl
lods
clc
dec
loope
push
or
rclb
adc
rcll
pop
inc
mov
pop
out
mov
in
push
dec
jns
out
shll
hlt
xor
lds
lock
add
xchg
adc
lret
movsb
repz
fsts
out
inc
test
movsl
stc
mov
xchg
and
and
loop
into
sub
cmp
sub
jp
mov
xchg
add
jne
inc
sub
jg
fisubrs
sub
into
cmp
vminps
imul
popa
pop
xchg
mov
and
xor
or
adc
pop
mov
mov
add
pop
loopne
outsl
mov
sub
dec
mov
stos
sub
sarb
lods
aaa
js
mov
hlt
jne
sbb
mov
sbb
stos
out
sub
xor
movsl
xlat
mov
ljmp
aam
loope
movsl
leave
test
inc
pushf
push
pop
popa
xchg
clc
cmp
jmp
xor
rol
nop
cmp
jno
ljmp
mov
sub
dec
out
mov
loopw
ss
stc
arpl
cltd
jnp
push
inc
ds
popa
cld
xor
lahf
jecxz
aad
imulb
cmp
sbb
mov
ljmp
pop
pop
repz
jno
mov
bound
stc
ret
insb
mov
loop
add
pusha
mov
add
lods
ja
pop
pusha
dec
and
mov
xchg
add
push
xchg
incb
jae
add
sbb
push
sti
in
in
or
xor
mov
call
sbb
dec
je
enter
loopne
cli
xchg
outsl
xchg
cmpsb
bound
ja
les
fisttpll
sbb
outsl
add
lock
fdivl
xlat
es
mov
aas
and
popa
sbb
mov
push
dec
lret
adc
sbbb
test
mov
dec
lahf
push
adc
add
mov
call
cwtl
mov
clc
lds
pop
test
mov
jno
mov
arpl
xor
sti
out
arpl
clc
mov
sub
jl
jmp
mov
sbb
pop
sbb
adc
dec
ja
mov
cmp
adc
mov
ja
xor
mov
imul
out
out
jns
or
stos
xchg
aas
test
hlt
xor
xchg
push
push
or
sub
nop
inc
sbb
xchg
jns
ljmp
cmpsl
nop
pop
repnz
jle
out
stos
cmpsb
clc
mov
fdivrl
ds
mov
in
mov
je
mov
dec
popa
mov
jns
outsl
int3
fisttpll
lcall
les
stc
ja
bound
xor
roll
test
fdivrp
mov
xor
mov
lret
cld
cmp
cmpsl
add
sbb
inc
bound
adc
and
xchg
mov
or
jbe
inc
inc
jmp
cs
mov
cmp
fadd
aaa
arpl
jno
ljmp
dec
inc
bound
xchg
jne
xchg
scas
jl
push
push
sbb
fidivl
and
fst
cld
shr
sar
cmp
popa
cmp
mov
mov
jns
mov
cli
aaa
inc
mov
mov
pop
aam
cmpsl
jae
jne,pn
out
cwtl
add
jne,pt
out
shl
insl
or
cmp
cmp
pop
lret
pop
iret
xor
and
dec
vaddps
insb
cmp
mov
mov
out
xor
pop
bound
shl
dec
xchg
pop
adc
dec
lret
xor
push
cwtl
pop
sbb
jno
loop
xlat
cli
imul
push
mov
or
jle
stc
and
gs
gs
in
mov
xor
push
outsl
cmpl
xchg
add
inc
dec
mov
stos
cmp
in
cmp
mulb
outsl
or
mov
repnz
xchg
fnstcw
les
sti
fidivrl
popa
sub
or
mov
jns
sbb
xlat
out
sarl
cld
loope
jnp
cmp
add
aaa
mov
push
pusha
scas
mov
pop
sarl
outsb
hlt
xchg
mov
sbb
cmp
rcrb
cmp
shll
nop
test
or
icebp
mov
rcr
mov
dec
divl
sbb
paddsw
repnz
mov
xchg
fidivs
sub
into
outsl
cwtl
stos
fiadds
lods
cmpsb
push
js
xor
es
and
pop
xchg
popa
cmp
inc
es
ss
insl
pop
aaa
ret
cli
insl
push
jge
stos
and
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
mov
fldl
cmp
or
adcb
in
or
pop
push
xchg
cld
out
stc
lods
fdivl
mov
aam
mov
pop
clc
and
es
sbb
or
lea
inc
dec
pop
fs
int
ret
mov
sbb
jb
aad
out
push
popf
dec
or
mov
dec
or
into
mov
shlb
mov
into
xchg
and
sub
add
mov
testb
imul
in
jb
mov
dec
in
jp
push
xlat
xor
aam
jbe
adc
mov
inc
mov
inc
add
subl
xchg
mov
mov
imul
shll
cs
pusha
in
cltd
loope
data16
cmp
pushf
push
in
mov
jg
push
aam
fsubp
repnz
ja
fnstsw
sahf
decb
in
fbld
int
daa
pushf
pushl
push
out
cld
mov
inc
repz
fdivr
fimuls
sbb
inc
sahf
movq
loopne
pop
mov
fs
loop
sbb
popl
mov
pop
ret
orb
and
insb
repz
dec
cmp
sahf
cmp
pop
mov
jns
or
push
push
out
pop
insl
fisubrl
inc
loopne
pop
sub
xchg
loope
sub
aad
add
cmc
dec
ret
lcall
mov
mov
shrb
clc
insl
subb
push
pop
aad
jae
jb
cmp
mov
push
or
jns
into
fwait
pop
mov
mov
sub
mov
sbb
popf
outsl
and
je
pop
insl
mov
fwait
std
sbb
add
cmp
inc
sub
cmpsb
das
in
push
mov
icebp
and
jp
and
dec
mov
andnps
adc
cs
pop
fsubrl
and
sbb
sbb
call
lock
pop
pusha
push
pop
inc
dec
pop
inc
lods
in
pop
adc
push
repnz
fdivrl
mov
inc
sbb
mov
or
sarb
pop
adc
jge
loope
aas
testb
test
pop
inc
sub
jo
adc
dec
pusha
adc
jns
imul
xchg
and
stc
sub
push
scas
xor
cs
mov
call
lock
push
outsl
push
inc
imul
les
mov
test
cmp
aas
fs
cwtl
push
jge
push
outsl
fwait
mov
push
sub
stos
aad
fisttps
lods
aam
and
and
or
or
outsl
nop
movsl
dec
cld
stc
xor
pop
aas
fstpl
adcl
popf
aaa
mov
idivl
imul
test
mov
xchg
pop
cmpsl
lds
jbe
out
and
hlt
dec
jb
enter
divl
notb
test
and
js
pop
imul
mov
and
jg
push
add
sub
or
sub
add
jo
pop
dec
stc
jo
cmp
int
test
fwait
repz
inc
dec
mov
and
stc
adc
inc
lcall
fstps
jae
rol
enter
js
dec
or
jmp
pusha
and
and
cltd
push
add
scas
xchg
roll
in
pop
dec
inc
into
and
sbb
icebp
and
mov
popa
cs
mov
ljmp
inc
rep
push
jnp
lahf
in
adc
push
lret
add
or
mov
sbb
out
mov
aas
jnp
pusha
jmp
ror
inc
aam
ljmp
daa
pop
lret
roll
jmp
xchg
hlt
mov
pop
pusha
inc
hlt
jmp
lods
xor
push
jne
or
test
cltd
cwtl
fdivs
shll
mov
jl
ljmp
repz
mov
jmp
xor
mov
mov
enter
data16
mov
loope
push
aam
add
imulb
xor
mov
notl
lods
roll
frstor
or
push
aas
out
lahf
scas
mov
test
insl
jg
cli
mov
fs
std
dec
lret
in
movsl
mov
and
addr16
push
movsb
or
sub
mov
sub
jnp
inc
cs
or
push
sbb
rcr
cwtl
pop
movsb
push
hlt
out
xchg
inc
les
jb
push
daa
xor
mov
call
xorl
mov
cld
mov
or
push
sbb
fucom
or
pop
movsl
xchg
xor
mov
sbb
fwait
add
in
insb
cs
fildl
fbstp
mov
addl
rorb
mov
aam
dec
cmpb
mov
addr16
or
lahf
dec
pop
fisttpll
in
jbe
add
or
cmp
outsb
shll
inc
dec
cld
outsl
jns
and
inc
lret
fdivrp
jne
xor
aas
lods
stc
sub
cmp
es
jg
inc
adc
daa
addl
pop
rcrb
ror
pop
imul
fsubrl
jne
repz
mov
adc
jno
pmulhw
cmpsb
popa
in
fnstsw
insb
pop
pop
out
xchg
aas
outsb
filds
dec
out
dec
rol
sbb
jnp
mov
pop
push
fwait
or
pop
ja
outsb
push
sbb
xchg
sbb
repz
rep
cmp
outsl
xor
mov
xor
leave
je
jns
dec
mov
in
in
jge
or
mov
insl
scas
and
add
or
stos
mov
scas
fucom
mov
jg
je
jle
cmp
ret
mov
pop
push
enter
js
imul
xor
jle
dec
in
xor
mov
inc
inc
enter
pop
jmp
stos
or
shl
and
es
cmp
popf
daa
mov
out
push
std
pop
and
shrl
or
and
shlb
mov
sub
jg
mov
cmp
mov
adcb
ljmp
xorl
xor
jmp
jno
stos
cli
fs
rol
xor
mov
xor
mov
jl
jne
push
ljmp
push
dec
xchg
sub
mov
jo
add
inc
lret
xchg
inc
or
outsl
not
mov
adc
adc
int
out
xchg
fbld
jecxz
data16
out
jecxz
mov
test
imul
mov
cs
pop
and
test
inc
xlat
sbb
fcmovu
lds
imul
mov
jnp
adc
adc
lods
loop
ret
rcrb
int3
mov
in
fists
movsb
mov
xor
push
out
pushf
test
imulb
add
push
mov
jl
xchg
nop
mov
imul
sbb
or
jecxz
decb
push
push
cmpsb
adc
fnstcw
and
and
dec
imul
jmp
mov
dec
push
aad
or
mov
xlat
xchg
dec
jb
add
test
inc
inc
mov
xchg
mov
and
mov
or
pop
mov
in
mov
or
ss
stc
ficompl
mov
xchg
push
loope
rcr
mov
hlt
ret
mov
call
les
mov
xor
jns
or
cmp
jp
dec
call
movsb
fcomps
mov
outsl
xchg
outsb
jge
in
mov
jbe
push
adc
insl
xlat
push
push
pop
push
test
or
out
push
push
test
in
mov
and
repnz
add
lcall
dec
ss
xor
push
icebp
cmpsb
xor
adc
xlat
les
pop
mov
pop
cmpsl
xor
add
pushf
xor
inc
cmpsb
push
cltd
push
mov
pop
js
stc
cmp
mov
sub
sti
pop
in
and
add
inc
mov
lods
jns
repnz
incb
cmp
cmpsl
xlat
cltd
pop
loop
rorb
test
and
jp
ds
addr16
mov
movsl
loop
push
mov
movsl
outsl
dec
stc
pushf
negb
int3
push
repz
in
dec
sub
mov
jne
cmp
fldcw
daa
in
lea
push
xchg
cltd
push
lea
int3
bound
in
cmp
jle
cmc
jne
imul
shl
push
scas
ret
mov
adc
es
in
and
or
aad
push
das
jecxz
pop
aas
inc
push
ljmp
daa
push
sbb
mov
and
inc
mov
frstor
stos
sub
stos
mov
and
sub
cld
sbb
and
mov
loopne
insb
jno
dec
fdivl
dec
pusha
iret
fmuls
cmp
jmp
pop
cmpsl
sbb
test
jns
std
adc
loopne
test
mov
pushf
mov
sbb
jle
sbb
lea
xchg
pusha
stc
inc
jecxz
sbb
add
mov
shlb
dec
lret
cmp
mov
test
movsb
xor
pushf
fwait
rorl
jmp
sbb
in
aam
xchg
pop
or
nop
cs
mov
sbb
loopne
mov
bound
mov
jns
aaa
fistps
mov
ret
mov
pop
cld
ja
jae
mov
cmpsl
int
xor
jl
add
jp
mov
loopne
jecxz
cmp
dec
shll
into
jne
fcomp
sti
jae
xor
fnstenv
or
cmp
ret
ds
adc
aam
mov
rcll
xchg
cmpsb
lcall
lahf
out
pop
loopne
loop
repnz
jecxz
aam
arpl
mov
dec
adc
nop
pop
pop
in
std
jge
inc
and
mov
int3
dec
sbbl
test
movsb
jl
pop
mov
dec
add
flds
or
dec
and
inc
mov
in
arpl
das
xor
movsb
xlat
in
and
out
shl
xchg
sarl
dec
xchg
or
jge
mov
sbb
outsb
pop
fnstsw
out
aaa
pushl
mov
mov
add
sub
push
ds
mov
sbb
aas
mov
fnsave
mov
inc
cltd
gs
jns
mov
xor
sbb
ret
pushl
xor
cmpsl
loope
jge
push
xorl
mov
cli
test
push
inc
pusha
push
outsb
jmp
pop
cmp
sbb
notb
inc
pop
loopne
xlat
xchg
test
imul
mov
std
je
aam
and
adc
adc
pop
mov
push
cmp
aam
pop
xlat
dec
jb
sbb
movsl
fsubrl
dec
mov
test
nop
xlat
std
lds
out
clc
mov
inc
fisttps
and
jge
or
clc
sbb
add
outsl
sti
loopne
or
aad
mov
mov
jmp
clc
mov
negl
popf
call
push
mov
call
push
push
clc
shlb
xchg
sbb
sti
cmp
in
movsl
cli
push
push
rcl
pop
das
dec
rcrb
fbld
and
fistl
lds
andb
jne
sub
in
inc
movsl
mov
sub
cmp
dec
push
incb
daa
xor
enter
dec
mov
ret
inc
fstl
push
mov
bound
jl
loop
std
adc
clc
or
inc
aam
cld
je
jmp
sub
xchg
aad
mov
jg
in
orl
sub
add
mov
jbe
test
adc
add
outsb
adc
mov
js
or
xor
xor
outsl
fcoml
aam
or
mov
xor
in
mov
inc
xchg
rcrl
mov
push
je
in
rolb
aam
adc
call
jmp
xor
adc
pop
xchg
push
xchg
notl
arpl
test
arpl
js
cs
cs
mov
adc
sbb
test
push
sub
bound
testb
out
test
inc
lods
sbb
lcall
xchg
push
xchg
out
push
xchg
aad
push
shll
or
stos
enter
imul
pop
sbb
push
stos
lods
cltd
lret
loop
cld
negl
push
scas
notb
mov
pop
sbb
add
insb
and
adc
adc
adc
jp
mov
iret
pop
movd
sub
in
or
aad
xchg
xchg
out
cwtl
popa
cmovb
hlt
pop
int3
jecxz
mov
jb
mov
adc
push
lret
mov
add
add
add
inc
xchg
lahf
pop
add
jno
aam
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
ja
add
scas
lahf
