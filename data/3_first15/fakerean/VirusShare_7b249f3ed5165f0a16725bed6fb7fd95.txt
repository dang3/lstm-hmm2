sbb
add
mov
cmpsb
mov
pop
dec
into
scas
or
push
xchg
pusha
ljmp
mov
ret
insl
leave
mov
xor
mov
xlat
imul
jae
adc
rolb
sub
sbb
pop
iret
out
test
jge
lds
out
repnz
lds
shr
xor
adc
sub
decb
fwait
and
inc
lea
lods
orl
mov
sti
and
push
nop
adc
mov
inc
xchg
mov
mov
nop
cmp
mov
ja
out
and
cmpsl
dec
mov
xor
cmpl
add
lcall
std
mov
movsb
lock
xchg
in
popa
adc
adc
xchg
or
jnp
xor
aas
and
mov
or
out
in
js
pop
sbb
dec
push
push
sbb
mov
xchg
bound
rol
shrb
bound
sub
out
in
sarb
sbb
bound
mov
lahf
xchg
pop
pop
mov
pop
sub
loop
push
call
adc
sbbb
pop
push
cmp
nop
ss
fmul
lret
test
mov
imul
jnp
lret
aam
cmp
outsl
jo
fcomps
test
jg
mov
inc
loope
sbb
mov
xorb
inc
jno
push
leave
in
push
mov
and
and
jb
test
pop
dec
roll
inc
pop
cmp
inc
mov
cmp
ljmp
add
sbbb
outsb
pushf
xor
std
add
aas
add
xchg
arpl
and
aam
pop
test
mov
adc
mov
ja
xchg
pop
mov
std
mov
nop
jp
sub
and
lret
cld
xor
xor
shr
mov
daa
fcomps
decl
int
pushf
seto
lods
in
mov
loope
pop
jnp
test
in
and
jne
ret
xor
idiv
rol
test
nop
push
mov
fisubrl
add
xchg
lock
mov
xchg
push
xchg
cmp
pop
lret
xlat
dec
or
out
adc
out
add
inc
or
repnz
enter
add
fwait
rcll
and
mov
arpl
lods
xchg
insb
cmpsl
push
rclb
cmp
mov
ret
loope
sbb
js
jp
cmpsb
mov
jl
fistpll
jp
jmp
int3
stc
pop
dec
pop
mov
jg
adc
cmp
fs
data16
lock
fsubr
jb
add
xorb
mov
inc
sbb
and
stc
lcall
jns
push
js
arpl
aam
addr16
add
jo
repnz
cmp
movl
adc
loop
mov
fnstsw
and
xchg
xchg
movsl
jns
mov
mov
stos
leave
push
icebp
mov
xorb
push
pop
and
and
inc
push
lcall
add
into
loop
sbb
and
int3
mov
add
clc
xor
int
aas
push
aad
xchg
loope
enter
and
add
imul
loope
lret
jg
and
pop
inc
lcall
inc
xor
loop
nop
push
jnp
cmp
xchg
imul
bound
cmpsl
xor
pusha
pop
inc
mov
leave
mov
mov
mov
dec
call
push
mov
jb
arpl
loopne
ret
mov
add
andl
mov
pop
xchg
fdivl
mov
in
cwtl
mov
sub
cmp
sbb
cld
jnp
xor
stos
in
push
fs
cmp
mull
dec
movsb
mov
jge
movsb
lea
inc
dec
adc
das
call
sbb
and
adc
lock
xlat
rcl
je
ja
push
pusha
xor
pop
jno
mov
cli
fwait
add
mov
shrl
popa
lock
xor
sub
adc
jmp
pop
negb
ret
sti
jno
mull
mov
xor
adc
sbbb
popa
xor
lock
or
mov
dec
push
dec
sbb
and
shlb
sub
dec
pusha
add
inc
insl
adc
jl
sub
ja
test
adc
jne
imul
push
cmp
ficoms
dec
shr
mov
add
push
popa
cmp
stc
xchg
sarb
pop
rcrl
cld
addl
xor
cmp
stos
adcb
cmp
pop
nop
stos
popf
mov
mov
mov
std
cmp
int3
dec
and
call
jecxz
into
jae
or
in
ror
movsb
jle
mov
sbb
xor
aas
sbb
shlb
out
inc
pop
shrb
sub
xchg
repz
adc
add
add
jmp
pop
xlat
xchg
xchg
or
push
mov
pusha
push
cmpl
popf
push
xchg
stc
lods
dec
scas
add
mov
mov
mov
adc
mov
out
rcll
clc
icebp
je
call
sbb
scas
ja
and
jle
imul
push
jl
cmp
xchg
out
scas
and
clc
lods
inc
pusha
jbe
pop
jecxz
pusha
nop
or
add
inc
arpl
faddl
sub
add
xchg
ja
ficomps
and
shrl
shrl
cmp
and
sub
cmpsb
arpl
lahf
decl
std
adc
not
mov
push
fcoml
loope
je,pt
sbb
jmp
subb
shll
loop
sbb
sbb
xor
mov
push
mov
test
push
pop
addr16
jo
negl
push
cld
out
js
jl
movsl
jp
jge
ja
sbb
cmp
fldenv
mov
mov
sbb
cmp
imul
cmpsb
or
add
mov
xchg
pusha
ja
xchg
sub
out
cli
je
xchg
cmp
dec
pusha
sub
movsl
jo
lea
ljmp
nop
pop
imul
stos
lods
loop
cltd
test
mov
leave
xchg
xor
jns
inc
in
mov
and
pop
popf
out
xor
pop
sbbl
movsl
adcl
push
jp
insb
mov
scas
sbb
cltd
aaa
nop
cltd
xchg
std
test
cs
es
push
pusha
ljmp
sbbl
inc
cmp
clc
xlat
scas
imul
sbb
pop
push
ret
sub
lcall
mov
and
push
loope
call
loope
int3
in
xor
lods
cs
lcall
stc
push
adc
filds
push
mov
sbb
addr16
dec
les
dec
and
sub
xlat
sub
lods
out
pop
idivb
movsb
adc
ja
in
fsubl
fisttps
stos
pop
aad
arpl
lret
insl
lret
jp
push
jle
push
mov
rorl
maxps
pop
xor
jle
adc
pushw
testb
ret
loopne
jnp
xchg
ja
jmp
push
xabort
inc
test
adc
mov
cld
or
and
fwait
std
sub
mov
and
test
sbb
and
popf
in
xchg
ret
mov
ljmp
and
cmp
inc
pop
pop
repnz
jo
ljmp
out
xor
push
rcl
insl
outsb
mov
cwtl
lods
insl
dec
leave
shr
test
adc
aam
mov
dec
je
xchg
in
movsl
xor
sahf
add
clc
add
xchg
xor
testl
in
lea
lahf
ss
lret
aam
lret
scas
lock
stos
je
and
sub
dec
jbe
xchg
fisubrl
push
sbb
jle
test
sbb
jge
xchg
repnz
call
sub
pop
shrb
pop
push
imul
aaa
xor
aam
addr16
aam
mov
negl
or
outsl
xor
adc
insl
pop
inc
add
and
rcl
je
int3
popf
pushf
push
push
scas
push
mov
int
aam
xchg
test
pop
aaa
in
xchg
jne
dec
mov
rcrl
push
jle
js
scas
dec
call
outsb
mov
add
inc
rcll
sbb
cmp
pusha
cmp
lcall
jbe
pop
stc
aad
int3
xor
xor
adc
jbe
sbb
pop
arpl
lods
test
ds
inc
jmp
call
inc
int3
ljmp
cmpsb
mov
mov
loopne
cmp
adc
movsl
or
and
sbb
in
add
pop
iret
outsb
sub
fsubrl
inc
add
inc
pop
mov
or
icebp
decb
pop
add
mov
xchg
xchg
sub
adc
or
pop
adc
test
test
mov
push
xchg
lret
movsb
mov
das
aaa
xor
jge
dec
enter
cmp
xor
out
and
je
sbb
xchg
cltd
test
pushl
lahf
insl
inc
inc
es
aad
mov
iret
xor
sub
cmp
repz
js
mov
pushfw
jns
repz
aam
pop
mov
inc
fisubs
jecxz
cmp
jne
addr16
lock
test
mov
mov
pop
jmp
add
imul
push
add
fistpll
rcrb
loop
sahf
into
int
jbe
insl
test
cmp
cmc
push
setnp
dec
int
stos
ret
aas
jb
pop
lods
jmp
jg
cmpsl
pop
lret
scas
pushf
mov
movsl
faddl
sub
mov
sbb
add
cwtl
out
pop
adc
les
add
xchg
inc
incl
mov
btr
dec
dec
lahf
stc
arpl
and
hlt
pop
std
jae
xchg
and
dec
cmp
lret
test
repnz
loop
in
insb
loopne
outsb
cmpsb
mov
cmpb
adc
dec
inc
out
fdivrs
mov
out
jo
lret
ja
jge
sbbl
pushf
mov
dec
popa
inc
inc
sahf
jl
pop
xor
push
xchg
inc
lcall
repz
xchg
xor
add
jge
pusha
or
jno
mov
mov
dec
jmp
jb
mov
sub
xchg
leave
ret
cmc
mov
cli
mov
xchg
into
pop
mov
mov
shrb
adc
mov
add
sub
sbb
ds
in
sbb
test
cmc
adc
push
sub
fldcw
in
mov
ja
or
xor
es
repz
setge
inc
cmp
push
dec
fmull
xor
lods
popf
out
push
adc
or
ret
idiv
es
inc
xlat
push
inc
jae
test
lds
out
jle
add
cmp
and
pusha
movsb
imul
lahf
mov
cmp
ret
inc
add
xor
mov
in
shl
cltd
subl
inc
fnsave
bound
notl
lods
insb
mov
push
cmp
rcrb
mov
je
cmp
push
push
mov
sqrtps
cmp
ss
xchg
js
xlat
xchg
push
loopne
std
fwait
daa
setne
mov
mov
lock
mov
ret
xlat
hlt
cmpsl
stos
roll
ljmp
push
repz
pop
dec
xchg
xorl
push
lcall
xchg
in
loop
cld
stc
rorb
dec
push
out
xchg
and
mov
and
mov
xorl
jmp
inc
mov
aas
cmp
das
add
cwtl
push
mov
push
sub
xchg
sbb
mov
sub
mov
mov
pop
push
lret
mov
cmp
and
lret
mov
stos
mov
xchg
fcoml
jmp
js
lods
test
inc
insb
xchg
mov
cld
sbb
jge
sbbl
or
mov
int3
add
cltd
testl
cmp
loop
les
fs
fmuls
popa
pusha
mov
adc
jno
push
adc
mov
testb
sub
adc
outsb
icebp
push
sub
xor
jbe
jns
mov
fistl
sbb
and
adc
or
push
push
jmp
outsl
sbb
xchg
int
cld
inc
lods
dec
rcl
push
mov
mov
pop
rcrl
addr16
inc
div
dec
lahf
jg
jl
addl
inc
adc
paddq
xchg
cmpl
xor
xlat
imul
xchg
add
inc
pushw
in
jns
popa
pop
mov
xor
sbb
adc
pop
and
mov
xchg
mov
sti
fldt
je
sbb
add
popf
shlb
jae
jmp
adc
or
fldcw
out
jno
std
xor
mov
iret
xchg
pop
pop
test
mov
ror
iret
sub
je
push
leave
in
mov
push
mov
or
xlat
adc
loop
sub
out
mov
mov
add
xor
mov
inc
dec
cmpsl
cmp
clc
sbb
ljmp
ss
dec
or
jle
clc
xchg
jo
lgs
stc
int
lock
ja
js
cs
aas
pop
jge
xchg
lahf
fwait
test
in
mov
add
into
pop
and
popa
xor
add
cli
dec
or
call
adc
arpl
pop
adc
push
movsl
stos
sbb
or
es
xchg
jl
jne
nop
std
movsb
or
stc
nop
pop
xlat
push
adc
loopne
roll
mov
cmpsl
fs
ds
and
rclb
pushf
repz
data16
cmp
das
mov
dec
cld
ret
lock
push
stc
mov
jg
push
pop
push
lea
cltd
in
push
icebp
pop
rclb
repnz
mov
shlb
and
xchg
jp
pop
mov
cmp
rcrl
xchg
mov
sub
fbstp
lret
loop
dec
into
sub
and
mov
inc
fsubl
shrb
insb
jo
dec
pop
or
adc
outsb
mov
jmp
xorl
es
cmp
shrl
sub
and
xor
les
mov
mov
lcall
aam
ret
insl
lahf
dec
mov
dec
mov
inc
das
mov
lods
add
adc
inc
sbb
rcrb
xor
sub
push
popf
or
sub
push
inc
mov
cmp
xchg
and
mov
lea
xchg
and
dec
mov
or
adc
pusha
pop
pop
xlat
or
ret
xchg
fdivp
mov
push
cmp
inc
push
jne
xor
test
mov
arpl
xchg
add
divb
ret
scas
adc
iret
mov
sbb
fs
and
push
add
cmp
dec
andnps
adc
cmp
lahf
iret
jb
xchg
mov
inc
imul
mov
scas
inc
mov
push
xor
adc
into
dec
pop
pop
ret
inc
mov
lahf
mov
lahf
mov
adc
adc
mov
mov
fisttpll
cmpsl
push
dec
push
push
je
push
and
movsb
rol
or
in
and
mov
add
mov
cmpsb
arpl
loope,pn
fstpl
and
cmp
pop
push
outsb
jl
and
loopne
xor
cs
mov
inc
pusha
fisttpl
and
mov
mov
push
sbb
inc
jae
mov
push
imul
inc
movsl
pop
cld
and
fildl
mov
mov
push
je
fiadds
frstpm(287
fisubrl
out
mov
cmp
jge
jae
aas
push
in
jg
add
cmpsl
in
jno
dec
and
add
jns
jecxz
add
mov
or
cltd
adcl
push
orl
pop
rcrb
dec
xorl
push
pushf
mov
sub
movsb
out
lcall
mov
sub
push
repnz
ss
xor
shr
xchg
arpl
sub
leave
jge
cld
push
mov
add
test
rcrl
jge
add
imul
dec
cmp
cli
inc
mov
adc
sub
push
or
dec
cmc
stc
loop,pt
cld
mov
mov
lock
cmp
pop
sbb
dec
inc
xchg
cmp
xor
ja
lret
push
cli
add
xchg
cwtl
stc
int3
movsl
or
inc
push
push
testl
dec
inc
div
and
or
sbb
inc
push
pop
repnz
xchg
cwtl
or
cmpb
lea
pop
iret
xchg
negl
lods
jecxz
test
and
fisubrs
lcall
xchg
dec
divb
sub
fidivs
leave
std
pop
jbe
add
push
pusha
into
or
scas
mov
roll
inc
jbe
mov
mov
inc
sub
fimull
inc
lret
cli
sbb
mov
push
fcmovnu
out
enter
xchg
pushf
mov
pop
clc
leave
xchg
leave
jecxz
xchg
fdivs
lcall
rolb
insb
fstpt
sub
movsl
jno
test
dec
scas
sub
add
adc
pop
jno
mov
fidivrs
into
mov
and
dec
mov
inc
sub
movsl
testl
fdivs
push
jns
jge
notl
and
stc
pop
into
or
cmpsb
xchg
pusha
and
lret
data16
ds
out
inc
std
in
imul
or
leave
cwtl
xchg
stos
jno
inc
int
cmp
fidivrs
jg
push
mov
stos
pushf
mov
cmp
add
xor
pop
mov
sbb
cmp
dec
lcall
fwait
into
icebp
jnp
jns
cli
and
clc
lods
cli
jae
repnz
pop
sti
xchg
mov
pop
add
and
testb
adc
push
enter
jb
add
daa
wbinvd
xchg
pop
push
xchg
cmpsl
popa
sbb
stc
scas
fistpll
shr
lret
movsb
daa
out
push
adc
aad
and
lock
inc
and
es
mov
sbb
adc
testl
shrb
jecxz
jecxz
rclb
leave
nop
leave
hlt
inc
and
mov
cmp
in
or
push
lahf
int
adc
push
stos
dec
cmpsl
push
lret
and
add
push
cs
lock
cmpsl
sub
rol
mov
movsb
sbb
clc
ljmp
or
inc
adc
pop
pop
rcl
ficoms
mov
mov
adc
stos
icebp
call
repnz
push
sub
sbb
loope
into
mov
data16
jp
sarl
fmuls
out
fildll
pusha
aas
lods
xchg
cwtl
test
add
movsl
xor
cmpsb
movsl
dec
jecxz
sub
leave
sti
mov
lds
ds
mov
inc
xor
aam
aad
outsb
xchg
sbb
dec
sbb
and
push
push
movsl
nop
or
push
mov
or
in
adc
jb
xchg
mov
ss
jg
lock
jp
fmull
cmp
jmp
enter
xchg
jns
xor
push
xor
ret
and
inc
adc
call
in
lret
int3
jg
lcall
sbb
or
sub
ficomps
arpl
rclb
xchg
data16
faddl
mov
dec
sbb
pop
cmc
xchg
inc
rorl
dec
test
rorl
es
cmp
cli
pop
sbb
iret
xchg
out
mov
mov
out
ret
cli
ret
push
lods
cwtl
negl
fdivrl
in
jns
and
jns
jno
jg
outsb
adc
lcall
jns
ret
cmp
push
jmp
stos
sub
lods
or
jb
repnz
aad
inc
jle
and
mov
mov
push
xchg
xor
fwait
xor
jl
test
mov
jp
inc
cmp
pop
mov
jns
jae
push
into
push
mov
or
adc
movb
mov
pop
jl
xchg
inc
mov
jecxz
cwtl
icebp
or
mov
pushf
data16
cmp
imul
xor
xorl
std
push
add
or
xor
dec
test
mov
mov
arpl
sub
outsb
cmp
inc
iret
fdivs
pop
push
arpl
or
jmp
mov
inc
and
pop
xor
in
inc
xchg
pop
cmp
mov
inc
add
xlat
and
cld
inc
push
cli
icebp
loopne
sqrtps
sbb
inc
lahf
mov
jae
outsb
mov
hlt
push
les
aam
fidivl
or
fcoms
and
xchg
lods
sbb
and
inc
popa
sbb
daa
push
cmc
inc
and
insb
nopl
mov
in
ss
jo
mov
mov
fadd
rcll
dec
loope
xchg
pop
jecxz
xor
cwtl
sahf
js
aad
gs
mov
dec
cmp
or
push
inc
lock
sahf
fisttps
iret
nop
aam
leavew
es
imul
xchg
jecxz
mov
push
push
scas
xchg
or
or
idivl
arpl
cmp
loopne
add
rorb
int3
ret
lret
add
and
or
subl
inc
pop
sbb
mov
or
ljmp
mov
add
loopne
das
inc
in
inc
sti
xor
aas
add
gs
jle
jge
das
rcrl
mov
test
pushf
lahf
mov
sbb
fwait
shl
xchg
enter
loope
aas
mov
xlat
cwtl
lds
fimull
fimull
dec
lea
dec
fsts
jmp
test
aam
pop
mov
cmc
push
js
stos
nop
insl
bound
sbb
das
lahf
in
into
inc
cwtl
push
push
sub
sub
nop
push
test
ljmp
aaa
pop
pop
mov
jo
and
xorb
adc
mov
call
jmp
push
pop
aaa
in
adc
out
in
adc
or
arpl
sub
adc
dec
dec
movsb
jb
mov
fiadds
cld
jg
ljmp
mov
lea
mov
add
and
in
pop
cmp
mov
mov
sbb
gs
cmc
pop
mov
aas
xor
mov
or
ss
adc
inc
inc
mov
adcl
xchg
lock
popf
and
lea
or
jle
dec
fmulp
vmovhps
pop
or
ss
add
adc
dec
mov
stos
and
pop
addl
ljmp
repnz
xchg
jl
gs
in
and
in
sub
jbe
jecxz
adc
xor
jmp
in
int3
call
cli
mov
mov
mov
mov
cs
ret
int3
out
and
jne
xchg
mov
xchg
jbe
or
pop
cmpl
mov
gs
sbb
dec
stc
addr16
test
xor
repz
hlt
hlt
sub
mov
push
cmpsb
lea
imulb
fcmovnb
mov
aaa
je
fsubrl
cmp
clc
add
test
fidivs
lea
fdivs
stc
jns
scas
arpl
movsbl
ja
sub
and
xchg
mov
sbb
mov
xlat
pop
push
jge
pop
mov
ret
mov
lahf
lahf
adc
mov
imul
data16
cli
cli
add
inc
dec
fs
mov
lea
mov
fdivs
lahf
pop
popa
lea
pop
or
loopne
int
lcall
sub
push
loop
imul
mov
adc
in
mov
add
cmp
xchg
sbb
mov
add
sub
sub
es
ss
int
pop
pop
cmp
test
sub
and
shlb
dec
test
mov
loopne
mov
push
jmp
adc
pop
mov
sub
lret
sarl
scas
jno
fwait
arpl
jl
shrb
ret
adc
push
movsb
movsb
lret
dec
mov
not
jb
popa
lret
add
push
in
add
movsl
dec
sbb
cmpsl
movsb
addr16
add
jp
xor
jp
adc
int
xchg
and
cli
repnz
inc
lock
mov
std
call
sub
cwtl
in
pop
push
data16
sub
mov
loopne
cmpsl
fmull
jmp
mov
jb
sti
inc
push
gs
xlat
mov
cmpsl
inc
add
push
push
jb
pop
cmpsb
push
pop
mov
jne
xchg
sub
outsl
jmp
pop
push
inc
fistl
stos
adcb
nopl
mov
cmp
rcll
ret
stos
cmp
push
sbb
xchg
inc
scas
int3
xor
pop
or
aam
xor
lret
rorl
out
fs
stos
pusha
fs
or
inc
sbb
bound
lcall
imul
mov
jp
lds
inc
outsl
je
jl
ja
es
fmull
mov
lods
or
stos
jo
inc
mov
dec
scas
sub
sbb
sti
jp
mov
xor
cld
mov
jno
loopne
aaa
sbb
pop
sbb
popf
mov
pop
xor
pop
mov
sti
or
sbb
popa
lret
add
sub
jns
mov
xchg
mov
mov
and
cli
invd
andl
cmp
ds
inc
loope
mov
icebp
enter
idivl
ficoms
inc
sti
out
sub
jb
add
mov
mov
call
mov
inc
inc
ja
cmp
leave
sbbl
call
clc
push
cmp
pop
xor
dec
clc
cmpsb
sbbb
popa
lahf
sarb
xor
rorb
or
cmp
dec
jle
xor
test
int
ljmp
mulb
cmp
ds
jnp
std
cltd
jmp
sbb
push
sbb
xor
lretw
outsl
fists
cmp
fisttps
lods
sub
test
repnz
mov
jmp
jns
in
add
mov
imul
test
push
jo
pop
inc
inc
push
and
xchg
std
pop
stos
push
cmpsl
loope
xor
push
jae
sbb
or
cmp
in
les
in
sbb
inc
adcb
and
fisttps
in
loopne
xchg
jo
fdivrl
lret
popf
scas
mov
es
loope
int
aaa
rorl
xchg
sbb
insw
and
in
mov
adc
xchg
cmp
arpl
insb
loop
iret
pop
dec
push
lahf
es
xor
xor
shlb
popf
ljmp
xchg
fildl
repz
inc
jg
int3
mov
xor
call
outsb
sub
inc
xchg
in
ret
repz
ret
jns
jg
movsl
movsl
int3
pop
pop
fistpl
xchg
push
sub
adc
das
and
mov
dec
jl
das
push
pop
or
aaa
shrb
sbb
ds
push
cmp
hlt
dec
mov
xchg
out
sahf
push
mov
push
push
add
inc
dec
inc
dec
idiv
mov
lea
pop
jbe
movsb
or
mov
jg
adc
adc
mov
stos
lret
out
hlt
xchg
in
cli
hlt
dec
mov
cs
in
mov
gs
jl
jno
jns
mov
jno
lahf
std
xchg
mov
mov
cltd
xor
fcmovnbe
leave
push
dec
ret
ljmp
cltd
sub
mov
sbb
jmp
imul
pop
shrl
pop
jbe
push
lds
cmp
enter
fs
mov
cmp
daa
and
addb
pop
imul
inc
xchg
sti
out
pop
cltd
les
stos
lahf
and
xor
jae
test
xchg
cwtl
ja
jl
pusha
out
dec
pop
push
lcall
out
arpl
jae
add
pop
xor
mov
jecxz
mov
pop
sbbb
hlt
cmpsb
mov
aaa
or
stos
add
jmp
mov
sti
and
sub
scas
scas
int
inc
test
add
bnd
scas
xchg
out
cmpb
test
jns
jl
lds
cltd
xchg
frstor
cmpsb
xor
sub
or
icebp
sub
or
mov
cmp
pop
adc
adc
cld
push
stc
cmp
cmp
cmp
mov
pop
dec
xor
mov
dec
js
imul
jecxz
ja
mov
lods
pushf
jnp
sub
stc
push
movsl
jmp
int
in
pushf
mov
pop
and
fcompl
adc
icebp
inc
push
ljmp
fnop
int
ss
adc
lahf
push
aam
jb
push
imul
push
add
xor
cmp
mov
lret
lods
sub
mov
or
jle
in
xchg
cmp
mov
lea
mov
xchg
inc
dec
dec
ds
lsl
xchg
jp
sub
mov
sti
lds
lret
ds
mov
sbb
mov
pop
out
imul
repz
xchg
mov
mov
scas
inc
and
or
mov
mov
outsl
push
push
inc
xor
ret
aas
scas
add
cld
hlt
adcb
pop
es
dec
popa
je
mov
lods
aas
imul
arpl
dec
outsb
jp
mov
and
test
mov
inc
xor
js
cmc
sbb
pusha
inc
hlt
shl
insb
aas
enter
cmp
jb
sbb
xor
rorb
ret
mul
push
and
nop
push
stc
shlb
lret
ds
cmp
add
cmpsl
inc
fistpll
int3
les
loop
ljmp
lea
imul
adc
add
dec
ds
sbbb
jg
jp
or
sbb
xor
das
jecxz
ret
mov
jne
sbb
or
pop
sub
test
rolb
loop
and
add
mov
cltd
jl
icebp
stos
rolb
xor
push
or
mov
ss
loop
imul
loopne
rcll
add
loopne
mov
mov
into
mov
and
xor
push
push
mov
and
inc
call
sbbl
mov
shll
xor
dec
xor
mov
iret
imul
test
jecxz
fnstcw
test
cmp
sub
sbb
pusha
lds
loopne
mov
sub
mov
in
cld
push
add
pop
mov
inc
pusha
repnz
imul
cmp
mov
jl
mov
rclb
pushf
add
add
or
add
fcompl
cmp
cmpsl
loope
xor
jg
xchg
dec
jle
frstor
pop
mov
adc
stos
pop
data16
cmc
stc
sbb
enter
xchg
ja
aam
stos
jp
fld
mov
pop
mov
lahf
jl
cmp
lahf
jle
push
jmp
push
popf
xor
notl
out
rcrl
pop
sub
mov
outsb
lods
or
push
sub
jne
aad
mov
movsb
roll
inc
adc
dec
jne
pop
into
ficoms
aad
sbb
add
mov
shll
mov
or
popa
xor
push
std
sbb
cmp
pushf
jnp
pop
fildl
pop
or
pop
jl
jmp
sub
rclb
int
test
push
push
xlat
repz
jp
idiv
sbb
push
in
lret
push
in
repnz
xchg
std
fisubrl
cmp
fabs
pause
or
fs
or
les
cmpl
testl
xor
jmp
xor
cwtl
ljmp
sub
loop
int3
or
xor
fidivrs
mov
inc
mov
add
das
stos
test
fscale
movsl
push
outsl
or
adc
jbe
mov
push
orl
fadd
mov
mov
rcr
xor
iret
sub
push
inc
andb
insb
imul
pushf
call
imul
cmpsb
mull
push
in
sub
sahf
rclb
or
movsl
in
cmpsb
xchg
pushf
lds
add
xor
popa
test
add
jnp
inc
pop
xchg
push
mov
pop
add
int3
adc
inc
mov
fsubrs
js
inc
ret
cmp
loop
push
mov
dec
jge
arpl
cld
push
sub
mov
lds
xchg
xor
push
lods
and
popa
pop
dec
pushf
jno
jmp
jecxz
sub
sti
xchg
repz
out
cmc
test
push
stos
rcl
mov
ret
sub
cltd
cmp
and
imulb
leave
mov
jae
inc
mov
and
movups
movsb
add
and
or
outsb
xchg
pop
clc
arpl
into
adcl
xor
sub
stos
fwait
scas
mov
cli
scas
mov
push
gs
mov
jae
xchg
mov
xchg
xor
ss
loop
rorl
xor
xor
push
sub
cli
sbb
dec
std
push
or
cltd
inc
cmp
out
mov
xor
mov
je
mov
pop
mov
inc
es
mov
cmpsb
adc
inc
fs
jmp
ret
jl
xchg
lcall
les
in
pop
lds
xor
sbb
add
xchg
addr16
test
or
sub
jbe
aas
sbb
and
mov
lock
inc
gs
in
jle
cmc
or
mov
test
mov
imul
mov
push
ret
enter
stos
in
lods
dec
and
push
scas
fidivs
stc
sub
jno
sbb
mov
imul
dec
loop
inc
pushf
jb
push
enter
arpl
lods
add
bound
xlat
cmp
dec
shll
xlat
cwtl
fwait
push
jo
mov
jle
pop
mov
lea
in
call
inc
lea
mov
outsl
jo
dec
call
mov
jecxz
push
loope
mov
sub
call
inc
cltd
sbb
sti
in
or
decl
out
push
mov
stos
fildll
lcall
out
mov
mov
push
jae
xor
mov
leave
cmp
iret
push
ficompl
fstl
pusha
pushf
ss
dec
pop
xor
bnd
adc
mov
mov
or
scas
and
jecxz
mov
jb
addr16
mov
or
lods
push
xor
in
in
sub
loop
xchg
pop
fnsave
shrl
cmp
mov
inc
and
out
inc
push
pop
adc
mov
fmulp
test
pop
sub
movsl
mov
mov
aas
bound
std
icebp
sub
das
jmp
in
mov
add
sbb
daa
adc
fwait
std
in
ficoms
adc
cmp
adc
cwtl
jno
mov
or
xchg
bound
inc
and
rclb
enter
pop
and
inc
or
xchg
loopne
inc
push
fsubr
push
cmp
adc
sub
inc
mov
insl
and
nop
inc
mov
es
ss
mov
dec
dec
leave
ret
push
cmp
sbb
dec
or
pop
lret
jb
push
test
adc
movsl
push
pusha
xchg
out
pop
inc
out
loop
jp
es
je
push
cmpsl
push
mov
xor
clc
xor
xchg
and
repz
lods
cmpsb
mov
outsb
dec
outsb
add
push
push
imul
out
cmp
test
aas
pop
jp
clc
mov
jmp
daa
vrsqrtss
pop
call
mov
jbe
mov
daa
cmp
mov
fnstcw
xchg
test
xchg
mov
inc
pop
adc
dec
outsl
lock
fcoms
popw
lods
cltd
lock
xor
or
pusha
mov
push
pop
jle
outsl
cmp
xor
push
xlat
fisubrs
imul
xchg
xchg
sub
fs
fstpl
mov
std
sub
cld
adc
add
les
fdivs
scas
xlat
or
das
cld
push
push
cli
mov
inc
sbb
cmp
out
call
adc
mov
mov
sub
mov
insb
in
push
inc
into
mov
pop
jo
mov
xor
fsincos
xor
loopne
mov
mov
xchg
mov
push
push
movb
mov
mov
push
lods
mov
jae
and
scas
lds
xchg
sti
or
xor
add
in
ja
lcall
sbb
rcrb
push
mov
sub
cmp
cs
xor
imul
clc
sbb
js
je
cmp
mov
push
inc
adc
jg
fs
inc
jp
inc
pop
lods
inc
fidivl
inc
les
jbe
cmp
mov
inc
push
out
xchg
inc
mov
scas
lret
add
inc
mov
mov
push
adc
dec
mov
push
pop
xchg
scas
dec
xchg
ret
sbb
mov
pop
lods
xchg
inc
dec
adc
xchg
out
imul
jle
imul
ficompl
dec
test
or
inc
in
icebp
in
fwait
bound
adc
lret
gs
cli
jne
lods
jp
fs
jle
xor
sbb
cmpsl
jbe
sub
shr
mulb
stos
dec
nop
mov
cwtl
div
mov
testb
pop
push
lcall
mov
mov
push
cwtl
sbb
or
cmc
inc
sbb
test
test
test
cmpsl
inc
jb
adc
and
lahf
mov
ret
lcall
test
mov
decl
adc
and
mov
das
push
sbb
jge
stos
imul
mov
adc
add
out
cmc
pusha
sub
out
inc
enter
sbb
in
pushl
iret
rorb
pusha
je
pop
inc
js
add
push
jle
cwtl
cmp
or
lock
lock
xchg
and
faddl
add
push
sbb
js
inc
nop
adc
xor
cmp
int3
mov
into
fstl
push
pusha
ror
addr16
jp
lds
adc
outsb
fld
sub
cmpsl
adc
push
mov
arpl
int
shll
jmp
and
mov
adc
les
nop
mov
xchg
inc
jbe
dec
stos
dec
mov
imull
mov
mov
or
adc
mov
insl
cmp
iret
mov
jmp
lcall
ljmp
mov
clc
sti
js
sbbl
lret
or
xlat
xchg
ds
shlb
pop
aad
xlat
out
fwait
jecxz
divb
loopne
scas
sub
rcll
jno
pop
cmp
repz
jns
int
push
mov
jp
inc
movb
push
scas
pop
loop
and
and
pop
pop
es
push
mov
leave
insl
cmp
pop
mov
jle
inc
sahf
adc
aam
sbb
dec
popa
ret
andl
push
or
cmp
cmc
movb
das
inc
dec
mul
cli
mov
xor
sub
int3
mov
stos
or
cmp
adc
adc
fists
mov
or
cld
mov
jl
inc
xchg
mov
pop
adc
inc
test
fnstcw
cmpsl
sti
dec
jbe
js
sbb
ret
xchg
ja
incl
ret
inc
xor
arpl
idivl
mov
data16
pop
hlt
jb
out
mov
out
push
pop
sbb
pop
mov
subl
shrl
cltd
ja
cld
push
and
in
and
outsl
jae
mov
cmpsl
and
mov
jge
xchg
mov
add
movsb
sub
lret
jb
mov
fsubrp
shrl
popf
and
pop
outsl
dec
shrl
push
repnz
mov
jne
cli
jge
push
lea
mov
in
or
and
loopne
int3
mov
popf
push
pop
jg
push
insb
das
loopne
adc
jecxz
push
jne
mov
iret
adc
scas
rorl
xchg
mov
out
jns
inc
dec
mov
and
xchg
sahf
adc
test
sahf
loope
xchg
andb
sbb
stos
mov
pop
loop
data16
daa
insl
dec
popa
insl
xor
inc
fildll
movb
adc
aas
cwtl
cwtl
mov
inc
lds
jg
dec
push
push
notl
movsb
out
jmp
roll
sbb
jp
push
aam
jb
lcall
lcall
jo
insl
aad
nopl
in
push
std
mov
adc
pusha
ja
adc
in
cwtl
adcb
ss
jno
add
repnz
mov
mov
das
inc
adc
pushf
in
xlat
inc
xchg
push
cmp
and
hlt
into
in
push
in
cmp
mov
enter
test
mov
xlat
js
push
cmp
lea
loopne
ror
mov
bound
cmp
push
jne
add
push
js
test
std
mov
iret
movsl
jmp
jp
mov
dec
popf
sbb
gs
aas
push
orl
cltd
ret
fmuls
imul
test
lret
cmp
out
dec
xor
sub
lock
in
sahf
or
adc
add
xor
pop
addr16
cmp
cwtl
dec
push
icebp
push
mov
mov
mov
loop
orb
dec
mov
in
jns
mov
roll
insb
je
and
cs
mov
dec
pop
ja
stos
repz
jno
xor
fs
sub
or
add
sub
xchg
xor
pop
addr16
mov
test
mov
mov
mov
pop
jmp
mov
push
inc
mov
mov
ds
xchg
data16
mov
xor
aam
xor
ljmp
inc
in
and
sub
stos
stos
push
es
jb
or
dec
or
pop
jp
cld
xchg
mov
jbe
mov
push
call
aad
ljmp
lcall
stos
jbe
aas
insb
mov
push
sahf
shr
add
dec
in
cmc
scas
push
add
orb
jae
fsts
push
or
inc
arpl
pusha
or
gs
xchg
push
sub
push
cmpsl
in
xchg
push
mov
cmc
aas
sub
sub
xchg
mov
enter
fisubrl
ror
sub
jecxz
pop
lahf
xor
jle
mov
outsb
repz
divb
lahf
xchg
or
push
or
cs
bound
into
lcall
ss
scas
add
add
mov
mov
cmp
bound
dec
sub
cmp
adc
in
lock
cmp
lret
sub
movsl
push
popf
icebp
dec
out
into
cwtl
mov
and
bound
dec
xchg
fdiv
cmp
int3
mov
xor
aaa
imul
fidivrl
push
and
test
xchg
xchg
repz
in
shll
dec
pop
add
outsb
jae
jl
mov
stc
stc
int3
jb
push
scas
fcmovu
shlb
frstor
aad
or
jmp
or
data16
xchg
outsb
in
inc
scas
and
pop
incb
lea
fdivp
pop
mov
dec
xchg
xchg
sbb
sub
dec
lods
or
add
out
or
popl
or
push
bound
xor
outsb
sub
dec
ds
dec
jae
pop
pop
fldcw
out
mov
adc
leave
xchg
adc
je
sbb
jno
jl
test
sub
mov
aam
mov
fwait
aam
pushf
mov
mov
xchg
mov
in
mov
or
aad
data16
mov
cld
mov
sahf
imul
mov
push
ficompl
adc
mov
adc
or
lea
arpl
jecxz
cmp
idivl
clc
outsb
jno
push
lds
lahf
in
test
sahf
add
xchg
mov
xor
xchg
fsubrs
sub
out
jo
ret
and
and
dec
rcr
stc
ljmp
mov
call
and
movsb
or
jge
xor
sub
es
mov
mov
xchg
add
iret
xchg
outsb
cli
popf
mov
out
push
sub
push
jp
jno
aas
int3
dec
xchg
xchg
adc
mov
bound
or
ja
out
mov
cmpsl
andl
rcrb
push
in
jo
out
arpl
dec
jnp
mov
mov
jno
dec
lcall
loop
inc
push
jnp
mov
push
mov
xchg
aad
push
sarb
mov
cmpsl
pushf
cmp
sbb
repz
jg
enter
adc
pop
hlt
gs
sub
dec
cmp
pop
dec
mov
inc
adc
lcall
pushf
jbe
xchg
mov
cmp
insl
sbb
xchg
or
stc
or
rolb
xor
xchg
aad
lds
sbb
lret
xchg
sub
adc
inc
out
pop
inc
addr16
sarb
gs
add
inc
ljmp
rclb
jmp
loope
in
sahf
pop
loope,pt
pop
in
les
mov
xor
dec
xchg
jns
push
cs
outsb
sub
daa
push
das
lea
xchg
repz
jne
inc
into
adc
xchg
and
dec
in
pop
mov
xlat
sarl
mov
add
movsb
mov
push
mov
in
roll
xchg
int
rcll
jmp
mov
sub
and
cli
pop
insl
pushf
xchg
orb
xchg
mov
push
mov
jne
xlat
mov
aas
mov
ret
ffree
test
pop
insb
cli
mov
leave
push
rcrb
mov
cmpsb
shll
dec
xchg
sbb
ja
cmpsl
xor
adc
or
sub
test
mov
and
sahf
imul
int3
cmp
jo
bound
push
adc
push
out
popa
sub
mov
jns
hlt
lods
ret
ret
les
xchg
or
jne
mov
clc
icebp
push
rcl
into
movb
xchg
xor
int3
mov
iret
and
inc
and
xor
out
lods
imul
mov
mov
test
jnp
xchg
repz
cmp
xlat
ljmp
scas
and
push
movsl
jmp
fnsave
inc
mov
and
adc
fldcw
ljmp
outsl
out
push
in
sub
nop
test
sbb
add
mov
push
jae
divb
shll
xor
fimull
es
jge
add
fdivp
xchg
xchg
push
movsl
jnp
imul
daa
lds
jnp
and
lret
mov
adc
add
jnp
sub
add
jae
xchg
xchg
push
out
popf
repnz
add
mov
imul
fsts
ds
out
jnp
std
in
jbe
jbe
pop
add
mov
imul
jnp
js
inc
mov
cltd
stos
cmc
mov
cwtl
jns
rolb
rep
daa
adc
inc
xor
mov
dec
sub
inc
jb
inc
and
movl
cmp
lds
mov
movsl
mov
jl
mov
mov
popf
lods
ja
lret
inc
push
imul
cmp
push
push
movsl
leave
jb
cli
call
je
cmp
std
jns
xor
adc
pop
push
int
dec
and
sub
push
into
pop
and
shlb
add
ljmp
fsts
mov
xlat
push
mov
dec
cld
fst
adc
inc
push
cmp
push
imul
sub
lret
lret
and
test
add
insl
sbb
stos
mov
jmp
sti
testb
mov
sbb
add
sub
in
or
push
cmp
aas
push
and
push
lea
pusha
daa
lds
xchg
mov
mov
shl
sub
cs
adc
out
xor
test
jno
sub
adc
cmpsl
ret
je
adc
gs
into
out
or
push
mov
inc
sti
jno
or
lret
push
out
cs
jne
test
lock
loop
cmpsb
mov
pop
subb
popf
cmp
or
fcoml
pushf
aas
bound
adc
sbb
orl
enter
cmp
sbb
mov
rcl
iret
imulb
popa
mov
cld
scas
dec
rcr
sahf
jmp
roll
add
rcrl
aaa
mov
jbe
repnz
loopne
adc
sub
fs
sub
dec
adc
jecxz
fwait
out
lds
rolb
sub
push
loopne
pop
add
jno
mov
mov
pop
fidivrs
cmp
pop
fnstcw
or
cmp
loop
sub
push
add
jae
sub
xchg
jno
pop
mov
push
adc
jp
mov
push
and
int3
aas
push
dec
sbb
jbe
cmpsl
rcrb
loope
mov
pusha
dec
lds
push
clc
mov
shrl
aaa
pop
adc
mov
mov
dec
sarb
test
jmp
aad
ret
push
xor
testl
ret
sbb
cmp
mov
adc
mov
push
loope
xor
add
jno,pt
in
sub
out
sub
add
mov
mov
scas
mov
xchg
sarl
mov
dec
dec
mov
cmp
xchg
inc
ret
xor
shr
dec
push
lea
mov
or
divb
add
sub
mov
or
inc
mov
fimuls
loope
adc
iret
addr16
gs
pop
cmp
std
push
sbb
xor
pop
xchg
jne
push
scas
sti
loope
jae
lock
push
shrb
adc
adc
mov
mov
ret
jne
daa
cs
mov
insw
jg
ja
sbb
sub
inc
push
lods
or
mov
mull
inc
sbb
pop
rcl
jbe
adcb
out
loop
decl
cltd
cli
nop
int3
mov
cmp
jmp
sub
cmp
sbbl
das
dec
hlt
pop
dec
adc
mov
outsl
sub
and
xchg
add
ds
les
loop
iret
movsb
test
xor
push
push
out
pushf
mov
popa
je
mov
inc
mov
addr16
sbb
push
mov
fisttps
xchg
sub
jecxz
push
adc
mov
scas
aaa
push
nop
push
sub
shlb
pop
mov
mov
lods
cmc
mov
pop
out
shll
test
pop
std
xchg
gs
add
push
xor
inc
pop
out
push
call
inc
ljmp
xchg
gs
ja
push
int
stc
mov
mov
sbb
xchg
cmpl
loopne
inc
jo
push
mov
ja
push
or
scas
dec
xchg
add
sub
cmp
mov
mov
xchg
sub
pop
mov
fisttpll
repnz
jmp
or
add
sbb
or
cmpsb
dec
gs
xchg
cli
test
sbb
mov
xor
and
nop
pop
addr16
xor
cli
popa
add
sahf
fcmovnb
idivb
shl
iret
loopne
inc
cmp
mov
pop
dec
sbb
movsb
adc
xor
cli
push
bound
xor
and
sub
mov
into
out
test
pop
mov
mov
mov
arpl
inc
aam
jg
jbe
es
add
cld
sbb
or
into
in
jo
shrl
rorb
nop
xchg
test
mov
sub
int3
inc
stc
mov
push
adc
cmp
clc
dec
lds
inc
or
xchg
adc
movsb
imul
leave
rorl
mov
lahf
adc
lds
cmpsb
lret
inc
mov
stos
push
dec
mov
mov
into
scas
insl
jecxz
fsubrl
cmp
adc
bswap
mov
push
or
ret
cmp
test
mov
sub
mov
lahf
fsubl
movsl
cmpsb
xchg
xchg
cli
inc
lret
icebp
les
pop
jnp
icebp
addr16
fcmovu
test
xor
mul
cmpxchg
lahf
js
loop
fistpll
dec
cmp
sub
push
sahf
fwait
test
dec
faddl
xlat
dec
xor
loop
movsb
ja
cmp
inc
sbbb
jbe
dec
dec
push
push
sti
adc
and
in
stc
push
pop
mov
aam
outsl
js
pop
sub
and
pushf
mov
jno
ss
mov
aaa
jae
mov
sub
inc
inc
enter
in
cld
repnz
xor
ds
imul
in
mov
dec
cmpsl
sbb
or
pop
cltd
push
fimull
jmp
mov
adc
test
dec
xor
mov
cld
sub
cs
fisttps
pushf
inc
or
fs
push
mov
mov
nop
scas
cltd
fwait
pop
daa
cmp
out
sbb
sahf
in
push
repz
pop
mov
or
ficoml
test
ficompl
xlat
sub
aam
push
inc
adc
mov
xchg
jge
xchg
mov
sub
idivb
mov
sub
mov
into
out
lods
stos
mov
add
mov
mov
fstpl
outsl
jo
dec
and
repnz
fcom
cmc
in
jno
test
lret
pop
jl
int3
add
imul
push
xchg
das
test
dec
sti
das
push
inc
mov
cltd
insb
stc
mov
lods
dec
pushf
jbe
mov
aad
cmp
add
dec
sub
xchg
mov
fdivrs
jmp
cwtl
inc
mov
lea
push
adc
inc
sub
pop
dec
mov
jl
mov
pop
or
xor
sbb
jo
mov
adc
andb
pop
dec
mov
js
mov
cld
dec
idivl
cmp
inc
dec
fcmovnb
shlb
cmpsb
scas
dec
daa
jno
cmp
jp
pushf
lretw
push
inc
xchg
and
push
stos
pop
imul
fwait
iret
mov
movlps
push
mov
icebp
pop
pop
ret
add
mov
mov
icebp
push
pop
int3
pop
adc
push
cmp
mov
dec
in
pop
or
into
das
jo
inc
inc
and
and
push
adc
push
ljmp
add
or
push
mov
mov
mov
test
shll
notb
push
mov
mov
sahf
aad
pop
lds
sub
decl
mov
scas
sub
mov
popw
mov
jecxz
data16
arpl
inc
lea
adc
jg
jp
nop
dec
push
fimull
jge
adc
stos
mov
std
sbb
lock
xchg
movsb
push
test
mov
xor
jnp
ljmp
mov
mov
jnp
fsubs
enter
push
dec
imul
sbb
pop
sbb
xchg
sbb
aaa
push
fstp
adc
gs
xchg
ss
dec
cli
repz
out
push
adc
stos
mov
dec
fwait
mov
mov
insb
pushf
lds
cwtl
lcall
pop
adc
out
or
sahf
cmp
push
xchg
cmpsb
ret
ret
jmp
fdiv
add
fnsave
je
mov
mov
xor
xchg
mov
imul
pop
flds
data16
mov
mov
jo
cmp
xor
movsb
and
data16
jle
mov
mov
aam
or
mov
jbe
out
hlt
pop
mov
inc
jg
xchg
mov
xor
in
daa
and
mov
pop
cmpsl
in
cmp
mov
push
jmp
add
mov
xchg
xor
in
test
xor
jle
dec
fs
cmc
pop
push
outsl
jge
pop
inc
mov
sbb
inc
push
xor
push
lcall
leave
fistpll
sbb
repz
scas
hlt
movsb
fdivr
leave
in
cltd
call
fstpl
add
popw
lock
fidivrl
xchg
imul
xchg
fcompl
lret
das
push
mov
or
mov
adc
fs
cwtl
pop
pusha
shl
mov
clc
sti
test
jnp
int3
mov
jnp
mov
mov
push
fldt
cwtl
or
push
adc
xor
pop
jle
dec
in
stc
leave
scas
mov
jp
cwtl
sbb
aam
inc
jnp
mov
cmp
push
mov
data16
jnp
int
movsl
mov
dec
xchg
sbbb
and
xor
rcll
mov
push
jno
sbbb
cmpb
sbb
aas
xchg
add
xor
bound
mov
hlt
pop
jmp
ja
or
rclb
inc
jno
pop
hlt
rcrl
xchg
mov
in
rcrb
insl
lods
dec
add
lock
and
cmp
mov
outsl
xchg
jo
stc
sbb
call
std
mov
mov
xor
cmc
sbb
int3
mov
ljmp
in
arpl
push
das
ret
push
mov
xor
fisubl
or
sahf
push
jmp
push
push
mov
xor
aad
jl
adc
aas
sub
sbb
test
movsb
lods
adc
inc
mov
test
lods
push
loopne
xor
mov
imul
mov
or
clc
mov
sub
sub
inc
inc
mov
mov
jae
inc
mov
xor
repz
jo
mov
jns
jo
push
mov
and
in
xchg
sbb
push
jmp
nop
push
fidivl
sub
jno
dec
xchg
mov
aas
xchg
insb
fwait
sti
fwait
cli
in
mov
loopne
jle
shll
push
inc
ljmp
sahf
jmp
imul
sbb
in
int3
push
xor
insb
shlb
push
push
popf
loopne
loopne
inc
xchg
dec
insl
sbb
inc
in
cmp
push
test
inc
jns
jne
pop
inc
lock
addl
nop
daa
pop
jp
int3
xor
jmp
out
stos
pop
mov
mov
in
gs
adc
lods
jg
or
add
ds
push
aas
subl
pop
daa
shl
jb
cmp
stos
lcall
fldl
push
cmpb
push
inc
mov
and
pop
jle
sbb
in
cs
xchg
and
xchg
test
or
pop
jmp
mov
dec
xor
fwait
mulb
mov
out
hlt
inc
ss
sahf
mov
out
into
addr16
ss
jecxz
and
inc
shlb
mov
pop
cmpsl
ljmp
js
xchg
push
lds
xchg
xor
nop
adc
lods
pop
adc
pop
repnz
adcl
jle
out
jo
mov
jno
adcl
inc
push
sahf
cmp
mov
cmpsb
mov
dec
cmp
sub
xchg
lock
jp
xchg
mov
shll
arpl
addr16
sub
push
stc
aaa
dec
scas
incl
sub
xor
inc
mov
pop
mov
push
and
imul
sub
adc
push
shrl
scas
jecxz
sbb
sbb
jae
inc
lea
loop
insb
push
push
decb
inc
xchg
shlb
call
test
popf
jno
mov
addb
and
adc
jae
lret
aas
hlt
call
sub
cs
mov
daa
or
scas
sti
ss
sub
mov
push
fdivrl
mov
repz
hlt
inc
int
dec
xor
adc
ljmp
adc
mov
ljmp
aas
cmp
jp
out
insl
sub
imul
mov
mov
out
sti
xchg
and
ror
imul
ss
movsb
iret
cmp
inc
xchg
ja
sub
std
outsl
jo
push
push
lcall
or
adc
push
or
push
scas
cmc
xchg
and
cmp
pop
cmpsb
push
call
xor
repnz
add
je
mov
mov
mov
and
sbb
mov
xor
jp
xchg
dec
dec
mov
sub
es
lods
push
adc
das
imul
xchg
in
sub
xchg
xor
xlat
std
mov
andb
cwtl
or
cmp
pop
clc
mov
mov
cmp
loop
pop
pop
movsl
xor
popf
inc
pop
std
sti
fwait
xchg
mov
cmp
in
fstpl
sub
out
mov
pmulhw
mov
dec
test
xor
dec
and
je
inc
test
pusha
out
test
clc
data16
dec
xchg
loopne
loop
and
mov
add
in
lods
mov
movsb
clc
push
insl
pop
mov
jg
mov
pop
loope
aas
rorl
jl
inc
and
in
sub
pop
xor
jb
cwtl
push
mov
sysexit
mov
inc
stc
mov
add
add
mov
sbb
aam
fidivrs
mov
ret
shll
shll
data16
mov
mov
cmp
aad
dec
iret
int
out
xchg
inc
and
cld
pop
movsb
in
and
jne
xlat
call
xchg
pushf
push
test
stos
mov
mov
mov
add
or
mov
fisubrl
cltd
mov
jg
shlb
jp
mov
dec
sbb
push
je
adc
ljmp
or
imul
test
cwtl
cmc
lods
in
testb
xchg
movsl
push
dec
pop
inc
mov
sbb
pop
push
ds
xor
xlat
add
xchg
je
sub
inc
xor
mov
sbb
in
rol
mov
jo
ret
add
leave
cmp
mov
jb
test
xchg
aaa
lcall
jp
out
daa
jb
pop
in
pushl
in
sahf
or
jno
std
test
and
sbb
divl
js
add
fistpll
dec
inc
cltd
int3
push
dec
and
push
jns
test
std
xchg
sub
cwtl
mov
shlb
sub
arpl
or
in
dec
push
mov
cmp
mov
subb
lcall
icebp
rclb
sti
popa
jb
lret
adc
fdivs
js
mov
xor
sub
adcb
cmp
loope
push
lcall
mov
cmp
outsl
cs
or
push
aam
add
or
sbb
dec
fmuls
xor
sti
call
das
mov
hlt
test
imul
bound
adc
call
sarb
rorb
jne
mov
movsb
cltd
aaa
pop
imul
ret
fcoms
outsb
xor
jae
loop
and
xor
mov
cmpsb
or
fst
mov
andl
pop
or
add
inc
jl
mov
mov
je
shrl
xchg
popf
pop
repnz
add
popa
mov
pop
subb
or
inc
push
adc
je
shl
stos
gs
and
dec
xorl
pop
jmp
mov
js
hlt
stos
sub
fildl
mov
in
pop
iret
shlb
push
xor
jmp
ljmp
cmp
jge
nop
and
pop
out
jmp
and
mov
fs
jnp
call
movsb
test
dec
jg
xchg
jmp
push
sub
xchg
iret
pop
leave
or
push
dec
cld
and
addb
stos
mov
aas
xor
push
push
or
lcall
sbb
scas
das
pop
xor
lss
and
push
cld
loope
test
cwtl
sbb
scas
sarb
loope
mov
sbb
ljmp
ficoml
cmp
cmp
mov
mov
xor
xchg
and
dec
mov
repnz
mov
adc
mov
or
push
pop
scas
stos
je
repz
mov
mov
and
add
cmc
scas
push
adc
sti
cs
frstor
push
mov
push
cmp
and
cmp
ficoml
ret
push
ljmp
cmp
iret
bound
and
faddl
mov
js
nop
cmp
inc
dec
xor
orl
sbb
enter
cltd
pop
rorl
adc
xor
or
push
lret
iret
sbb
jmp
mov
mov
or
bound
iret
gs
hlt
cltd
mov
fstl
ret
loopne
pop
and
sbb
push
pop
dec
mov
or
pop
fcoms
adc
mov
sub
mov
leave
lahf
pop
xchg
dec
aas
xlat
or
lods
test
or
mov
cmp
sbb
mov
xchg
iret
mov
cmp
loope
stos
sahf
fdivrl
inc
add
gs
int3
adc
inc
cmpsb
ja
test
stos
in
fildll
aad
sbb
sub
jne
repz
adc
mov
cmpsb
inc
int
stos
jo
fsubrl
sahf
cltd
popa
mov
sbb
dec
sub
fs
fstpt
fidivs
notb
lods
aad
sub
out
outsl
xchg
fdivrs
jg
insl
cmp
pop
popf
xchg
xchg
jnp
call
mov
ret
test
and
xor
push
std
push
out
jae
jge
insb
adc
xchg
popl
test
pop
ror
and
dec
bound
loopne
cmp
adc
iret
xchg
lcall
jb
xchg
fistpl
dec
sarb
jmp
cmp
shlb
and
sbb
fabs
add
rcrb
mov
push
leave
sahf
cmpsb
pop
adc
lock
jle
xchg
pop
or
stos
inc
adcl
sbb
mov
jle
add
add
in
sbb
inc
lock
inc
stos
js
out
mov
cwtl
in
adc
adc
je
pop
lcall
rorb
sbb
inc
cmp
out
popf
mov
jbe
xchg
push
xor
cs
ficoml
push
pop
rclb
mov
sbb
cmp
mov
loopne,pn
xlat
popa
sub
ficompl
add
dec
lods
fsubl
xchg
and
fcoms
data16
call
out
cs
fildll
push
fsubrl
mov
dec
iret
movsb
dec
sub
dec
inc
repz
sbb
jbe
leave
popa
mov
jb
mov
addb
aad
movsl
cmc
lods
fs
shll
pushf
cwtl
inc
mov
mov
outsb
jp
jne
rcrl
jmp
lods
sbb
loope
mov
insl
pop
inc
out
cwtl
jae
loope
cmp
pop
dec
and
pop
mov
adc
stc
flds
or
xchg
xlat
mov
and
sub
push
pop
or
jg
adc
jnp
mov
loop
filds
popa
cltd
js
push
inc
insb
fiaddl
stc
arpl
dec
jmp
addb
scas
inc
adc
loop
mov
dec
in
arpl
ds
jno
js
jnp
inc
fsubrl
testb
cltd
mov
mov
mov
xor
xor
out
movsl
mov
lret
incl
xchg
ret
out
jmp
pop
inc
iret
jmp
iret
jp
jnp
outsl
rorb
aaa
push
and
in
add
getsec
push
movsl
jmp
sub
mov
add
xchg
je
sbb
repz
mov
push
icebp
jmp
or
leave
sub
ja
rolb
ret
mov
jo
dec
mov
jno
xchg
stos
inc
jae
je
pop
popa
xchg
test
jns
sub
fwait
leave
cld
jmp
dec
imul
shlb
popf
std
pop
out
pop
cmp
shlb
mov
or
jle,pn
jbe
mov
fwait
scas
pushf
pop
outsb
xchg
movsl
push
imulb
sbb
adc
rolb
int
mov
xlat
cli
mov
and
les
pop
mov
sbb
lods
jmp
mov
mov
outsl
mov
mov
rcrb
loop
clc
xchg
dec
insb
and
xlat
ljmp
daa
mov
enter
fcoml
mov
dec
mov
shrl
lret
pusha
shlb
adc
push
fs
push
cmpsb
dec
jb
enter
mov
lds
pop
push
rclb
clc
xor
gs
dec
mov
inc
daa
or
cmp
in
mov
ja
fucomip
jg
sar
int
push
push
hlt
lods
dec
decb
fimuls
or
cmp
pusha
fdivs
mov
lods
or
add
sub
fadds
in
dec
mov
jmp
xchg
popf
push
stos
push
jmp
mov
out
inc
lods
jo
smsw
cmc
push
adc
fildl
jbe
and
loope
loopne
jo
ror
sbb
xor
dec
fidivl
mov
mov
push
mov
jl
subb
fprem1
mov
mov
adc
jl
hlt
test
push
and
aad
ja
leave
jle
das
pop
mov
push
push
push
cltd
sbbl
mov
movsl
xor
data16
xchg
ror
sbb
dec
sar
cmp
ficoms
jns
push
mov
mov
shrl
sbbb
adcb
into
fimull
cwtl
mov
dec
mov
repnz
sahf
lea
sbb
inc
push
icebp
mov
es
pextrw
outsb
mov
and
mov
inc
dec
out
mov
xor
and
dec
adc
int3
adc
mov
pop
lret
fnstsw
jp
pusha
std
mov
jecxz
es
lock
stc
loopne
mov
hlt
xchg
push
cmp
test
xchg
cmp
sub
lods
mov
sub
shll
or
fdivrl
push
fsub
clc
xchg
nop
lods
mov
sub
cmp
outsl
xor
insl
popf
mov
aad
or
push
cwtl
test
lock
mov
jns
xchg
mov
outsl
dec
push
in
push
mov
adc
addr16
roll
and
inc
fbstp
push
movsb
push
push
pop
cmp
fwait
daa
or
stc
lahf
jmp
jmp
dec
ss
xor
pop
loopne
push
pop
mov
jmp
push
je
pop
stos
dec
fucom
xlat
push
hlt
xchg
or
scas
lock
stos
mov
jl
lahf
fldt
sbb
adc
push
gs
mov
fs
rclb
bound
dec
into
popf
or
fsubp
xlat
es
aad
sbbb
stos
pop
loop
pushf
pop
ret
stos
das
adc
dec
add
ja
inc
or
es
xchg
jp
das
dec
fwait
lret
or
cmp
xor
push
les
xor
mov
cmpsl
lock
out
cs
mov
inc
jae
hlt
dec
mov
ret
fimull
dec
scas
xchg
and
xchg
jg
mov
xchg
sti
loop
sbb
sub
sahf
pop
aas
jle
stc
gs
iret
out
pop
stos
or
xchg
jmp
mov
arpl
ret
xchg
dec
daa
enter
add
cmpsl
mov
mov
lcall
lcall
sbb
rolb
movsb
push
lret
jle
lods
dec
fdivrl
pop
jmp
dec
int
popf
cmp
mov
shlb
pop
shlb
dec
jbe
rol
push
dec
gs
xor
push
int
and
pop
mov
out
xchg
lea
insb
iret
mov
fwait
enter
or
ss
iret
pop
adc
push
js
test
ret
mov
les
mov
push
jae
ficompl
shll
mov
adc
in
stos
sahf
xor
xlat
loopne
pushf
mov
xor
mov
mov
cltd
imul
mov
inc
adc
fnstenv
dec
stc
repnz
mov
mov
int3
ret
dec
out
inc
test
jo
test
std
inc
jge
inc
jnp
jno
sbb
repz
push
cmp
lcall
inc
icebp
cmc
sub
mov
daa
pop
loopne
cmpsb
scas
cmpsb
lods
insl
je
ss
xor
jno
addl
stc
and
xchg
outsb
pusha
and
jg
lods
shl
cs
sub
mul
xchg
jo
sbb
mov
dec
mov
mov
xor
push
add
std
cmc
xor
testb
mov
test
cmp
stc
sub
adc
xor
sub
fimull
out
rcll
js
sub
outsb
popf
jno
les
or
adcb
mov
jne
sbb
test
mov
xor
jns
pop
fs
pop
dec
or
iret
fsubs
lahf
add
mov
xchg
andl
jae
lahf
xchg
shrl
and
inc
ljmp
inc
mov
test
in
test
sub
or
rorb
leave
jae
xchg
std
rcr
gs
add
jnp
push
push
xorb
xchg
roll
call
inc
cmpsl
xchg
cwtl
les
mov
movsb
mov
xlat
es
movsb
xchg
cltd
gs
test
into
lret
mov
push
jecxz
sbb
js
lea
in
in
out
outsl
bound
inc
pop
daa
sbb
int3
add
lcall
pop
jg
jnp
mov
nop
imul
pop
pusha
mov
arpl
and
xor
aam
cmpl
pop
add
gs
cmp
inc
jno
lcall
cwtl
add
shll
sti
adc
push
outsl
jle
adc
fwait
gs
cmp
pop
inc
pop
or
mov
push
repnz
hlt
xor
adc
jmp
cmp
push
mov
cmc
je
cld
insb
enter
pop
stos
cmp
loope
outsl
mov
pop
xchg
dec
add
jge
inc
add
rolb
push
sub
je
cli
jb
loopne,pt
jmp
repnz
push
repz
add
subl
push
aam
add
xchg
cmp
mov
inc
addr16
push
mov
fsubrl
scas
xor
and
fwait
jnp
jb
pop
iret
sub
fwait
mov
jnp
ljmp
fimuls
sbb
fdivs
and
fisubrl
push
jg
pop
inc
fstp
xchg
pusha
jge
icebp
xor
mov
mov
loopne
leave
jp
mov
in
movsl
and
aad
or
out
adc
dec
fcoms
jnp
aad
sbb
mov
repnz
mov
mov
rorb
mov
mov
test
mov
push
adc
lret
dec
xchg
in
xchg
fsubl
inc
add
aas
pusha
stos
in
mov
mov
mov
mov
and
jbe
jne
bound
inc
sub
ss
jne
leave
loopne
inc
outsl
xchg
inc
clc
in
xor
dec
mov
mov
push
test
ljmp
addr16
mov
or
dec
pop
fs
add
sub
cmp
pop
shrb
xchg
push
pop
mov
push
lock
hlt
sbb
jo
or
or
fidivs
pop
push
cmp
jns
sbb
cmp
jl
in
push
out
repnz
jmp
outsb
fcomps
mov
cmp
add
test
out
roll
stos
push
lea
mov
gs
mov
adc
jge
sbb
inc
leave
push
pop
push
sub
sbb
bound
mov
inc
dec
jnp
std
hlt
mov
jl
fiadds
jo
imul
insb
imul
lock
mov
lret
jnp
mov
testb
out
sub
imul
das
bound
rcr
mov
xor
adc
push
push
ror
test
mov
push
jp
cmc
lock
ss
int3
jg
xchg
xor
test
and
xchg
popf
jbe
roll
sbb
cmp
xorl
inc
jbe
in
repnz
adc
jge
movsb
decb
cmpsl
mov
in
mov
fwait
stos
mov
rolb
mov
stos
adc
xlat
xchg
dec
out
sub
int3
sbb
pop
aaa
pop
out
fwait
loopne
mov
dec
sbb
test
inc
int3
aas
or
ss
fs
clc
cmp
in
addr16
cmp
sub
fwait
cmp
push
in
dec
mov
and
pusha
inc
jno
cmp
push
mov
push
fcmovu
addb
mov
jle
jb
pop
dec
pop
in
lods
push
add
lods
jl
popf
mov
pusha
test
pop
cmp
adc
cld
mul
call
jp
jmp
hlt
pop
sbb
mov
adc
mov
pop
into
dec
fdiv
xchg
inc
lret
jg
xchg
int
pop
ret
inc
mov
xchg
subl
xchg
lods
sub
sbb
mov
pop
jbe
adc
xor
mov
fwait
ror
test
aad
push
xor
and
mov
mov
mov
shrb
push
xor
icebp
or
push
incl
dec
xchg
in
lea
dec
adc
dec
adc
mov
cmp
scas
sbb
mov
add
cwtl
out
cmp
or
fs
adc
push
adc
decl
mov
mov
dec
xchg
roll
les
inc
popa
xchg
les
test
cmp
sarl
dec
xchg
xlat
inc
push
rol
aaa
jle
rcrb
rcll
inc
sbb
xor
ret
enter
add
push
sbb
je
jle
mov
bound
pop
stos
cmp
fdivrl
icebp
dec
fldl2t
jb
out
lea
pop
sbb
push
stos
ja
mov
out
mov
cmpsb
inc
inc
lock
push
rol
imul
lea
insb
xlat
inc
leave
mov
xor
outsb
out
sub
xlat
jge
mov
cmc
gs
or
cli
addr16
lods
stos
shrl
cmp
add
inc
je
mov
shlb
roll
mov
scas
inc
ret
adc
test
sbb
sub
in
mov
adc
stos
in
jmp
push
adc
cmp
and
mov
fidivrl
cmp
imul
jbe
pop
pop
out
frstor
cmp
test
test
test
xor
ret
ret
and
in
and
aad
movsl
movsl
lret
sub
enter
cmp
pushf
es
dec
divb
xor
mov
repnz
leave
jno
shll
mov
cmp
inc
push
mov
fisubs
lock
cmp
shl
addr16
in
pop
ficoms
cs
or
cmp
mov
cs
lods
popa
jbe
insb
sbb
inc
push
cwtl
or
fiaddl
and
incb
fwait
jge
and
loopne
imulb
movsl
or
fisubl
push
int3
pop
lret
or
sbb
cli
in
push
jp
push
cmpsl
cmpsb
out
sub
cmp
mov
jno
cs
rorl
jo
es
inc
xchg
lahf
in
xchg
inc
dec
xor
daa
cmp
xchg
lret
mov
pop
aas
in
orb
xchg
jbe
cld
add
ret
shr
icebp
lret
mov
out
cli
enter
push
testl
push
xchg
loope
xchg
xchg
sub
pop
cs
mov
stc
mov
lock
jo
fiaddl
xchg
inc
into
stc
lret
pmaxsw
add
jl
dec
cs
test
sti
out
sti
les
inc
dec
stc
mov
mov
push
pop
andl
jmp
aam
cmp
xor
sub
or
mov
inc
idivb
sahf
sub
sub
mov
stos
and
sub
jle
sahf
jl
xchg
cmp
dec
mov
mov
aas
jge
ja
in
add
cwtl
lret
test
out
icebp
decb
aad
rol
imul
enter
std
adc
xchg
ret
ss
movsl
insl
xor
enter
or
pop
dec
inc
push
pop
mov
jno
out
add
inc
andl
adc
cmp
pcmpgtb
test
mov
mov
push
add
rolb
mov
sub
fisttpll
dec
add
repnz
test
aam
les
and
in
testl
imul
jno
fdivl
mov
scas
imul
or
loope
das
mov
nop
loope
mov
adc
in
xchg
icebp
out
mov
dec
lods
mov
scas
mov
repz
into
jno
or
mov
roll
jl
movsb
push
mov
jns,pn
popw
mov
xchg
cmp
fsts
cmc
test
in
bnd
cmp
fwait
xor
sbb
lret
loop
and
ljmp
or
cld
push
sbb
inc
dec
rolb
adc
dec
mov
or
lock
mov
pushf
rolb
lcall
fs
inc
ja
mov
add
xorl
add
outsl
lea
inc
std
mov
divb
dec
icebp
mov
sub
add
aaa
jp
in
jp
int
adc
dec
iret
xor
nop
dec
adc
adc
or
jae
pop
inc
mov
mov
push
mov
mov
ljmp
sti
inc
roll
notl
or
flds
sub
inc
xor
jno
cmovae
insl
loop
mov
push
push
out
mov
scas
pop
adc
subb
jnp
out
into
jg
sub
and
call
and
fstp
lods
mov
push
outsl
xchg
in
inc
or
jo
lret
fidivl
adc
xlat
dec
cmp
lods
adc
aad
imul
or
loope
cwtl
hlt
cmp
pop
pushf
les
jp
test
outsb
jne
or
xchg
push
jne
mov
test
mov
xchg
cmp
outsb
lods
dec
cmp
in
sahf
xchg
adc
btc
fildl
stos
mov
pop
mov
mov
outsb
jmp
xchg
mov
or
mov
push
jge
imul
arpl
sbb
das
cmc
pop
lret
clc
in
and
cmp
scas
dec
inc
jecxz
in
in
ja
mov
push
js
jo
pop
mov
jecxz
xchg
pushf
imul
cmpb
roll
inc
lea
xor
xorb
popa
sbb
mov
test
xlat
pop
popf
js
and
mov
and
and
inc
pop
rcrl
add
iret
insb
cmp
sbb
jnp
xor
adc
mov
xchg
inc
xor
movsl
test
or
popa
mov
das
shl
inc
sahf
notb
lea
test
xor
gs
push
das
jle
outsl
push
icebp
sbb
sbb
lods
das
cwtl
andl
dec
inc
lcall
in
inc
call
pop
jg
xchg
shl
add
cmp
add
mov
sub
pop
inc
test
fcoms
sbb
sub
roll
push
aam
hlt
sahf
pop
sub
lea
int3
and
inc
mov
or
mov
push
leave
loopne
aaa
cmpsb
adcb
pop
add
cld
cmp
addr16
xorl
fwait
jo
aas
xchg
fnstenv
dec
jb
lcall
arpl
ds
mov
mov
aam
movsl
xchg
mov
stc
cmp
rclb
adc
pop
testl
cltd
mov
lods
cmp
mov
mov
jb
add
mov
mov
push
ds
stos
push
xchg
and
xchg
std
jno
sti
test
or
xor
add
pushf
or
xor
fninit
lock
jns
jbe
fsubs
sarl
pop
inc
jo
jp
xor
insb
repz
outsb
lds
cwtl
xor
jecxz
dec
mov
test
xor
sti
or
adc
lahf
xchg
and
push
cmp
pusha
mov
out
pop
out
cld
or
addr16
ljmp
mov
cmc
jne
fimuls
andl
nop
mov
inc
dec
xlat
sub
les
sbb
sub
or
fimuls
clc
js
cmp
sbb
dec
div
leave
adc
and
imul
add
fisttps
arpl
push
add
add
or
mov
insb
and
hlt
cmp
sbb
pop
arpl
cwtl
mov
jg
sub
add
test
lcall
jbe
test
xchg
inc
jge
mov
int
cmp
adc
and
jg
rolb
sbb
adc
test
push
push
fsubrs
inc
jae
sbb
push
dec
push
sub
mov
ds
inc
es
xchg
test
test
ret
and
xchg
jl
sub
and
cld
jbe
shll
sbb
jne
mov
icebp
mov
dec
adc
adc
jle
push
or
leave
mov
pop
xchg
fistps
out
push
aam
leave
mov
std
mov
ficompl
mov
lcall
pop
stos
fcmovne
roll
loop
fdivl
mov
dec
fdiv
push
pusha
lret
outsl
je
xor
cmpsb
push
insl
into
mov
cmp
popa
adc
mov
shlb
xor
xor
stos
roll
add
lods
into
mov
js
mov
lock
mov
adc
xchg
mov
inc
daa
cmpsl
aam
shll
inc
in
inc
sahf
dec
pop
loop
mov
rcrl
neg
dec
fwait
cmp
repz
pcmpeqd
enter
push
jecxz
push
add
rcrl
ret
cmp
shl
cmp
and
mov
shll
hlt
je
cltd
loop
cmpsl
lock
je
out
mov
pop
pop
jae
les
pop
jecxz
cmp
out
ds
scas
fidivl
cmp
call
add
icebp
lcall
repnz
ret
sbb
mov
cmp
outsb
and
loopne
cmp
pop
mov
ficompl
push
jge
pop
pop
cmp
and
jo
rorl
add
lds
adc
in
sbb
ret
push
mov
std
jbe
repz
add
std
test
jle
hlt
cmpsb
out
stos
sub
mov
fstp
fcoml
loop
rdpmc
and
imul
push
outsb
hlt
nop
adc
xchg
ds
cmp
xor
imul
inc
stos
stos
or
out
sbb
mov
dec
fwait
dec
push
xchg
fldl
jmp
cmp
ret
stos
in
inc
pop
scas
push
enter
stos
xor
sti
lret
dec
mov
loope
pop
pop
push
int3
jmp
jne
and
sbb
inc
jne
mov
aam
and
pop
fsub
mov
pop
cwtl
dec
sahf
adc
pop
cli
test
lods
mov
jnp
mov
push
roll
insb
mov
jmp
pushf
test
into
cmp
mov
fdivrs
ss
pop
notb
movsb
out
push
repz
rcrl
mov
imul
out
js
mov
sub
and
mov
sub
add
daa
jne
in
dec
shrl
jl
push
sbb
movsb
cmp
mov
cwtl
add
add
rcrl
adc
rorl
fisubs
mov
sbb
test
push
inc
fs
fcmovb
fistps
mov
pop
ret
andb
dec
jnp
jg
inc
or
jmp
int3
and
call
dec
repz
push
and
mov
cs
mov
and
cmp
and
mov
jl
shll
add
push
dec
or
aas
gs
dec
cmp
cs
jne
xor
adc
pop
insb
push
adc
push
xchg
sub
mov
loopne
and
dec
mov
mov
notl
inc
fsts
rol
lds
sub
mov
into
mov
sbb
or
mov
xor
dec
mov
cwtl
sub
aad
pop
std
xchg
imul
repz
test
aam
mov
daa
jl
xor
or
mov
mov
test
and
jmp
mov
pop
test
or
pusha
test
inc
nop
xor
mov
mov
arpl
outsl
cltd
and
insb
in
cmp
frstor
das
out
and
add
push
mov
inc
insl
or
cli
lahf
call
jbe
pushf
cmpsb
sti
jmp
mov
psubq
lods
sahf
mov
pop
loop
scas
sbb
in
and
cmpsl
rcrb
pushf
out
sti
dec
push
xchg
or
xchg
add
test
mov
xchg
lret
inc
mov
or
adc
add
xor
cld
mov
jge
cmp
fsubrs
push
outsb
insb
call
mov
sahf
or
and
sbb
daa
popa
xchg
push
or
adc
js
inc
pop
xor
pushf
popa
popf
cmc
jmp
outsb
stc
add
fnstsw
ffree
pusha
nop
sbb
mov
ja
jns
loopne
ljmp
cmp
cmp
das
push
xchg
les
pop
mov
js
movsb
fidivrs
sti
pop
lcall
cwtl
add
loop
cld
mov
push
nop
xchg
cmp
in
add
lcall
push
sbb
pop
imulb
xor
lret
and
shl
jecxz
inc
lods
jmp
data16
sbb
je
adc
dec
pop
mov
mov
add
xlat
call
decb
mov
aad
pop
fldcw
popf
sti
es
add
push
fs
in
xchg
jno
inc
xchg
push
addl
mov
inc
xor
stc
je
stos
leave
push
out
movsb
adc
pop
dec
inc
or
mov
sbb
jno
mov
xor
xor
in
adc
pop
or
push
mov
jecxz
test
jbe
dec
arpl
adc
es
mov
scas
sbb
scas
in
adc
mov
enter
and
icebp
int3
dec
rol
pop
xchg
rol
imul
loope
mov
into
lret
js
dec
lea
jle
adc
fistpll
mov
inc
rol
rolb
and
aas
fbstp
cmp
or
add
push
sub
dec
xor
dec
mov
lock
call
or
xchg
pop
cmp
push
bnd
loope
mov
add
icebp
adc
daa
push
xchg
test
dec
sarb
bound
iret
aas
test
lcall
movsl
pop
aaa
xchg
xor
inc
xor
dec
js
push
orl
inc
in
test
sbb
outsl
xchg
sbb
lods
scas
sti
cld
insb
cmp
out
inc
fs
inc
and
add
scas
je
dec
bound
or
mov
or
jne,pn
add
sub
inc
and
adc
scas
or
mov
mov
cmpsl
fisubl
jl
fsubl
fstpl
push
push
pop
push
xor
jl
pop
dec
add
idivl
test
or
lret
and
sub
or
out
js
lds
popa
das
call
roll
or
inc
dec
rolb
mov
mov
into
icebp
and
aas
or
push
mov
xor
mul
or
push
insl
sub
mov
and
mov
dec
cltd
mov
cwtl
sub
adc
stos
and
shlb
nop
stc
sbb
fwait
add
jns
clc
jl
dec
dec
lahf
sbb
pop
push
or
add
imul
xor
ss
sub
push
int3
outsb
ljmp
and
sarb
in
jmp
push
dec
push
test
mov
adc
pop
scas
addr16
xchg
push
jns
xchg
shrl
sub
les
clc
cmp
add
in
xchg
jo
repz
repz
stos
sub
gs
jbe
lret
shll
daa
mov
pop
pusha
add
pushf
adc
push
jmp
test
mov
enter
xor
xchg
sbb
movsl
and
sub
or
insb
adc
jle
vsubps
mov
cmpb
mov
out
insb
sub
imul
outsl
lret
int
stc
push
and
push
cltd
inc
sbb
pushf
xor
xchg
inc
jns
insb
inc
icebp
jl
and
std
dec
push
inc
stos
dec
add
push
inc
mov
xlat
or
inc
sbb
or
imul
rorb
xchg
iret
es
lock
sub
ret
jno
xchg
jge
xchg
mov
and
xchg
addb
dec
pop
pusha
push
insl
mov
scas
or
ret
stos
cmp
ljmp
mov
add
sub
cmp
rcrb
mov
jmp
add
loope
pop
add
lock
cmp
dec
loope
pop
jb
cmp
daa
cmc
popa
int
iret
mov
test
jg
push
pop
pop
xor
dec
pop
xlat
cmp
inc
adc
jae
sbb
jmp
push
gs
loop
mov
pop
and
pop
not
testl
fs
and
dec
xor
test
or
sub
add
pop
bound
fcompl
into
aad
fucomp
xor
xor
out
aas
dec
fldl
push
in
cmpsl
push
icebp
cmc
in
fstl
dec
stos
mov
and
imulb
iret
aad
das
adc
add
or
lods
insb
and
dec
pop
sub
clc
xchg
push
push
aad
xor
push
daa
cs
shl
in
sbb
push
aad
adc
pop
adc
lods
sbb
sahf
and
imull
add
dec
pop
pop
sub
sbb
add
addr16
jp
fld
cmpsb
mov
mov
in
adc
lea
adc
and
ret
add
fldenv
lcall
rclb
adcl
lret
ja
push
jecxz
cli
out
repnz
jmp
add
andb
mov
fadds
lret
add
mov
ja
repz
add
pop
or
xor
mov
lcall
push
jmp
and
adc
mov
and
lcall
test
mov
add
mov
aaa
or
sbb
mov
push
cmp
lea
dec
addr16
xchg
cmp
pop
lods
inc
outsb
push
pop
adc
inc
divl
ljmp
mov
mov
subb
push
push
adc
or
sub
push
lcall
loopne
lcall
inc
cmp
nop
fmulp
jl
aaa
sub
jbe
into
xor
mov
out
lret
stos
or
pop
sub
test
popa
scas
testb
inc
adc
enter
and
or
and
push
outsl
mov
rcrl
in
decb
lret
notb
dec
jle
add
adc
jecxz
add
ljmp
xchg
mov
xor
dec
inc
dec
rolb
lock
mov
in
or
andl
std
ja
xchg
mov
lock
mov
pop
or
rcrb
mov
iret
mov
leave
popa
sub
scas
lret
adc
lods
xor
andl
sbb
mov
shll
outsb
ret
in
lods
cld
fsts
add
jbe
cmp
mov
scas
jmp
cmp
imul
jae
gs
adc
jp
push
out
add
inc
insb
mov
sbb
mov
bound
fisubs
xchg
cld
enter
dec
or
andb
shlb
aas
scas
pop
jae
xor
pop
gs
push
lods
inc
xchg
sbb
inc
lea
ret
ds
pop
outsb
in
push
ret
arpl
int3
mov
push
ss
mov
ret
jns
mov
jae
mov
jb
inc
cmpsl
and
cmp
mov
enter
push
mov
and
push
adc
xlat
mov
jp
scas
mov
xchg
inc
fstps
cli
pop
pop
mov
sub
xchg
or
xchg
inc
pop
mov
leave
vpcmpgtb
stc
imul
adc
mov
jns
xchg
insb
and
mov
mov
cmpl
jnp
cmp
mov
pop
fimull
pop
sahf
mov
roll
sub
dec
test
sub
fcompp
adc
push
and
dec
rorl
arpl
sbb
cmc
sbb
push
and
loope
jns
loopne
push
push
pop
dec
rorl
push
xchg
push
pushf
aad
cmp
pop
jb
in
faddl
push
mov
stos
cmp
inc
ret
sub
clc
popf
sub
and
cmp
orl
sbb
rorl
jmp
pop
je
into
xor
test
in
pop
add
mov
mov
xorl
sar
mov
fistl
lea
icebp
xchg
into
inc
dec
lock
jecxz
mov
mov
out
jns
pusha
pop
insl
out
inc
leave
dec
lds
inc
std
out
add
ds
jmp
jg
dec
into
push
sbb
mov
in
test
sub
clc
jecxz
inc
push
pop
out
xchg
cmc
sbb
scas
inc
mov
add
mov
and
push
dec
rcll
pop
xchg
jb
jb
nop
scas
imul
addl
aaa
je
xchg
cmpl
flds
push
jmp
xchg
jo
das
rol
out
pop
add
stos
jmp
xor
sub
int
jno
jae
dec
sub
or
xor
push
jae
mov
clc
jge
sub
repz
in
mov
aam
inc
lret
imul
mov
lods
mov
pop
sub
adc
fisttps
push
push
mov
clc
jl
repz
mov
mov
mov
adc
xchg
dec
cmpb
sub
jnp
test
or
xorb
jne
or
push
repnz
xlat
imul
in
jns
inc
push
call
and
aad
cmp
and
imul
inc
xor
mov
lret
sbb
mov
or
pushf
adc
sub
inc
movsb
loopne
or
pushl
pop
testl
popa
and
sub
mov
jns
dec
sti
push
shll
jnp
aas
lahf
push
outsb
repz
mov
addr16
cld
push
mov
sbb
inc
repz
cltd
pop
leave
movsl
xchg
out
and
in
repz
xchg
idiv
iret
fstl
hlt
scas
dec
mov
fbstp
and
dec
out
jmp
loopne
out
sbb
push
lock
sub
dec
loopne
loope
fidivl
jge
mov
lock
mov
xchg
shr
imulb
ss
push
mov
mov
or
adc
xchg
cmpsl
ret
xchg
sub
sub
adcb
loopne
cltd
jb
inc
inc
testb
sub
pop
aas
negl
fs
sub
dec
adc
inc
sbb
ds
xlat
iret
sub
shl
sbbb
outsl
sub
mov
sub
sbb
or
shl
idiv
imul
rcrl
arpl
fwait
push
mov
add
cmp
pop
icebp
push
add
fstl
jne
or
xor
or
sub
gs
cmp
adc
pop
mov
jg
outsl
xchg
dec
add
xchg
fdivrl
xchg
mov
shrb
xor
rclb
xor
dec
inc
inc
loop
ret
inc
mov
cmpb
repz
or
jae
add
fcmovb
push
dec
sbb
out
cmp
xor
jae
and
or
aam
push
sub
xor
or
ja
or
cmp
insb
loopne
lret
arpl
cmp
adc
jg
push
shll
mov
ret
sbb
cmp
adc
or
and
mov
jecxz
iret
and
pop
dec
mov
and
loope
inc
repz
cmpl
les
push
push
stos
or
mov
lret
imul
hlt
xor
xlat
out
loope
ja
inc
xchg
mov
in
xor
stc
push
ret
inc
paddb
stos
js
pusha
inc
cmp
std
jb
lret
fwait
dec
movntpd
enter
sub
xor
inc
push
imul
and
out
std
dec
daa
push
mov
pop
mov
leave
mov
push
mov
and
xor
jecxz
aaa
inc
mov
arpl
sbb
imul
jb
mov
lock
les
pop
mov
push
push
ss
fisubl
shlb
and
add
jne
mov
movsb
lds
addr16
cmc
addr16
mov
mov
fsubl
and
push
fisttps
frstor
adc
pop
jg
mulb
fiadds
xor
enter
lea
ds
fisubrl
sbb
add
or
sti
sub
dec
fidivrl
aam
fcoml
lock
sarb
inc
push
jno
jbe
sbb
and
push
fs
insb
jno
addr16
cmpsl
mov
or
sbb
mov
mov
jae
popa
negl
shr
fisttpll
sti
stos
lcall
sub
xchg
add
add
xlat
adc
xchg
lock
mov
sub
pop
cli
mov
ret
pop
movsb
sub
xor
ljmp
push
enter
pop
sar
rcrl
std
jns
cmp
lret
sub
call
fndisi(8087
pop
fwait
in
loopne
add
ret
aad
enter
fwait
gs
aaa
add
pop
mov
xchg
pop
jecxz
mov
push
or
test
pop
xchg
mov
push
cmp
mov
pop
jo
or
xor
aas
mov
mov
inc
push
add
es
loope
push
fs
inc
xchg
push
lcall
pusha
iret
mov
mov
add
and
jnp
in
out
aaa
shlw
mov
mov
cmp
cmc
inc
out
je
mov
lea
lods
mov
add
int
loopne
fcomp
in
insl
aam
stos
jno
xlat
clc
sub
add
sbb
enter
xchg
int3
pop
mov
and
pushf
mov
inc
mov
cmp
in
dec
jno
sub
xchg
test
sbb
push
push
je
fbstp
xor
cmp
aas
cmp
ret
jns
adc
jmp
in
and
inc
push
ret
jb
repnz
in
test
add
shll
jecxz
xor
lock
xchg
inc
inc
or
adc
pop
lock
cwtl
test
loopne
clc
mov
cmp
fwait
pushf
adc
mov
enter
jl,pt
aas
imul
adc
lea
push
lahf
insb
jbe
aam
push
inc
ja
ss
inc
orb
movsb
cltd
pop
faddl
pop
loope
std
jg
rcll
pop
pushf
ficompl
leave
push
popf
fdivl
inc
and
xchg
sub
add
aaa
imul
out
mov
outsb
cmpsb
jle
rcrl
lahf
subl
dec
inc
dec
fsubrp
dec
imul
cld
or
sub
lret
push
jb
jb
and
mov
xchg
jge
pop
int3
cmp
insl
xor
and
jmp
vpsubsw
xor
scas
or
into
sub
add
sbb
daa
sub
sbb
adc
sub
jo
push
cmpb
adc
or
call
sarb
adc
mov
mov
mov
jne
fidivrl
ljmp
xor
call
js
pushf
mov
inc
mov
jge
aam
pop
and
xor
sbb
int3
mov
repz
cmc
dec
jmp
int3
or
sub
jno
cmp
rclb
cmc
fwait
cmp
and
mov
push
je
addr16
in
outsl
adc
psubd
sub
int3
sbb
out
inc
repnz
cmpsb
repz
ret
popf
cmp
dec
adc
movsb
mov
pop
insl
clc
aas
jl
inc
mov
dec
imul
or
movsl
or
push
int
push
cwtl
push
xchg
push
ss
mov
sbb
rol
sbbl
dec
jg
push
push
loope
xchg
inc
lds
ss
scas
push
ror
lds
cmp
fistps
mov
add
ret
rcrb
imul
xchg
pop
aas
sbb
sbb
adc
fsub
shll
jns
mov
dec
shrb
dec
call
jmp
dec
lea
pusha
sbb
aas
jbe
and
cmpsl
nop
bound
sub
and
mull
sub
testl
test
and
push
xchg
cmp
test
dec
xlat
ret
or
lods
add
addr16
jp
mov
mov
lods
sbb
pushf
pop
adc
mov
inc
cli
mov
lcall
in
lret
leave
jnp
mov
stc
sahf
and
and
movsb
div
daa
dec
mov
dec
or
add
mov
insl
repz
sbb
addr16
and
push
mov
mov
aas
clc
jecxz
cmp
xchg
imul
call
sbb
cmpps
addr16
clc
mov
jg
cmp
and
insl
inc
and
aas
mov
sub
dec
stc
mov
push
iret
adc
cld
push
push
icebp
push
xchg
jno
int
pop
test
mov
iret
add
popa
pop
inc
push
into
and
xor
lods
vpsubb
sbb
frstor
adc
in
cwtl
js
jnp
and
xor
gs
push
xor
dec
stc
dec
in
sbb
xor
aaa
popa
xchg
xchg
popa
mov
sbb
fisubrs
mov
inc
cmp
or
ror
cmp
jg
bound
dec
mov
mov
mov
pop
fbstp
sbb
rorl
andl
sti
or
xor
dec
mov
jae
mov
sub
xchg
fisttpl
push
fwait
aas
loope
push
xor
or
add
insb
pop
in
mov
or
add
and
daa
outsb
mov
cmpsb
push
shlb
sti
imul
dec
sahf
or
jecxz
sub
xor
mov
push
push
and
and
mov
add
lret
mov
or
add
mov
notb
cmp
ja
ret
out
pop
push
xchg
ss
out
cmpsl
daa
loopne
dec
push
nop
dec
shlb
pop
sbb
and
call
push
sti
movsb
aas
xchg
or
fldt
das
push
aaa
loopne
ret
add
push
es
int3
int3
lret
jg
jo
lret
xor
dec
rcrb
dec
repz
inc
xor
lock
dec
and
sbb
inc
push
and
mov
cmpl
xor
inc
lcall
out
cmpsb
mov
daa
jns
shlb
shrl
adc
ficoml
add
jmp
pop
mov
pop
aas
cmp
gs
or
push
pop
or
cmp
mov
push
sti
pushf
mov
jno
push
and
std
stos
mov
sub
filds
mov
push
imul
jnp
pop
pop
xchg
or
xchg
cmpsl
pop
repz
in
arpl
aas
add
jo
test
insl
addl
xchg
xchg
jecxz
jno
mov
aas
xor
lods
aad
rep
dec
sti
fstl
arpl
mov
or
ret
push
xchg
jb
push
ljmp
jg
xchg
xor
jno
inc
pop
add
sbb
movsb
inc
pop
pop
pop
cmp
lcall
xor
sbb
repz
mov
pop
popf
outsl
gs
out
loopne
jb
mov
xor
filds
xchg
lea
pop
jns
xchg
jmp
aad
in
xchg
mov
fwait
out
rclb
xchg
repz
cmpsl
aas
mov
xor
cmc
fsubl
push
int
cmpsb
add
adc
push
data16
cmp
xchg
pop
mov
fsubrs
mov
int3
rolb
je
or
mov
jae
popa
mov
ficoms
sub
inc
divl
or
fwait
in
xchg
xchg
pop
xor
in
add
rorl
xchg
sub
push
out
shrb
fimuls
test
xor
cmpsb
stos
nop
pop
mov
enter
push
sbb
xlat
out
rcr
adc
jns
lret
cmc
lcall
insb
xor
stos
lret
clc
subl
push
add
sahf
stos
js
pop
push
testb
outsb
shrl
inc
mov
mov
pushf
filds
bound
pop
ss
out
mov
xlat
mov
mov
lahf
das
jge
dec
fwait
dec
bnd
jb
js
call
lea
push
mov
lods
rcrl
mov
jge
test
add
gs
mov
dec
lret
mov
sub
inc
mov
lret
ljmp
idivb
jge
inc
xchg
lock
jne
shlb
mov
rclb
hlt
mov
movsb
jmp
mov
nop
push
fldcw
or
xlat
in
jp
sti
repnz
ret
cmpsl
subb
int
les
shlb
stos
cmp
test
in
sub
mov
lahf
call
xchg
orl
sahf
lahf
pushf
adc
nop
enter
in
mov
mov
push
mov
cmp
adc
sti
in
mov
sbb
xchg
int3
xor
mov
jbe
sahf
adc
lahf
mov
lret
addr16
sub
push
adc
cwtl
xchg
mov
pop
pop
and
pop
movsb
xchg
dec
add
push
pop
or
add
in
sub
pop
pop
jne
pushf
ficompl
fidivrl
shll
std
or
decb
push
push
ljmp
inc
add
pop
or
int
repz
dec
scas
sahf
aam
or
cs
mov
push
mov
add
mov
push
cmp
jb
xor
xor
or
dec
mov
rcrb
mov
hlt
pop
mov
pop
sub
dec
xchg
int
pop
ret
jl
xchg
sub
daa
and
xor
xor
test
iret
imul
xlat
data16
push
mov
and
scas
cmpsb
inc
add
sbb
mov
dec
lret
adc
cmpsl
mov
cltd
int
pop
or
nop
test
pop
sbb
or
cmp
pop
cmc
pop
cmp
js
xchg
jne
mov
in
cld
stc
cmpl
jne
add
push
aas
lods
leave
push
loopne
imul
cltd
mov
xchg
adc
les
pop
jae
dec
jb
cmp
mov
gs
push
call
scas
in
pop
imul
test
es
es
mov
loopw
xchg
pop
jne
cmp
or
test
adcb
aam
sbb
lock
loop
dec
ret
cmp
xchg
fldl
xchg
xchg
inc
sbb
xchg
test
imul
pop
mov
xor
xor
fistpll
mov
jmp
or
cmpsl
test
pop
dec
imul
inc
adc
pop
xchg
inc
or
icebp
cmp
jno
adc
pop
mov
sar
pop
lret
and
shlb
jns
scas
and
rcll
ret
inc
popf
push
jp
fs
jge
sub
add
xchg
xor
stos
cmpb
xor
dec
push
dec
mov
arpl
jle
sbb
pop
insb
dec
sar
mov
inc
or
ja
aas
dec
cwtl
mov
test
lods
fnstcw
loope
outsl
mov
ja
sbb
adc
cmp
jp
xor
mov
inc
mov
icebp
mov
aas
int3
stos
ja
filds
sbb
xor
mov
call
push
enter
roll
incb
in
stc
rcrl
pop
mov
xchg
rclb
xchg
pxor
dec
pop
std
rcrl
call
xor
test
ja
jnp
arpl
jl
cld
jo
es
roll
arpl
lds
fnstsw
jge
cmp
rclb
imul
mov
inc
add
flds
xchg
add
add
inc
mov
lods
xchg
or
in
xor
mov
dec
pop
sub
mov
std
imul
inc
push
ja
bound
adc
fisttpll
stos
mov
xor
imul
mov
mov
ljmp
mov
loop
push
or
pop
fisubs
daa
and
cmpsb
enter
pop
aad
push
mov
gs
cltd
out
mov
mov
sbb
xor
stos
xchg
push
in
cmpsl
jecxz
xchg
add
jmp
cmc
daa
pop
data16
clc
lock
sbb
ret
dec
aaa
cmpsb
pop
pop
sbb
aas
push
jbe
cmpsb
mov
aas
jbe
inc
pop
repnz
jae
push
jge
pop
std
cmp
cld
push
leave
adc
jmp
pop
dec
sub
data16
sbb
jmp
jne
pop
imul
ja
push
push
insl
push
and
jb
outsb
jmp
and
pusha
cmp
xchg
dec
mov
std
xchg
or
push
push
es
pop
popa
push
xchg
dec
mov
ljmp
or
iret
xorl
in
cmp
or
or
dec
mov
jge
mov
icebp
xor
je
mov
or
mov
cmpb
lods
push
xchg
cltd
call
adc
dec
push
pop
sbb
aas
xlat
jae
pop
sub
lods
cmpsl
and
outsl
cmp
out
xor
inc
cmp
sbb
jle
pushf
push
jmp
adc
in
cmp
add
pop
dec
movsl
xor
repnz
add
xor
and
stos
sar
sbbb
or
hlt
imul
scas
int3
mov
loope
jns
iret
test
stos
push
out
sahf
xor
add
paddsb
xlat
pop
xchg
js
fidivrs
sbb
out
mov
std
nop
xor
nop
jno
fsts
cld
inc
jp
in
inc
sbbl
scas
dec
dec
insl
xchg
arpl
or
loopne
popf
scas
sbb
pop
inc
test
repnz
movsl
into
sbbb
movsb
std
stos
jnp
jne
push
rolw
outsb
xchg
mov
sbb
and
jmp
hlt
xchg
push
loop
xchg
stos
ja
leave
jne
mov
sub
pop
lea
pop
mov
mov
sub
cmp
daa
loop
sbb
adc
rcr
aad
pushf
jecxz
ffreep
daa
dec
jno
xor
rorb
sub
xor
jb
inc
popf
adc
and
lahf
and
mov
test
jae
xor
mov
sbb
inc
pop
inc
hlt
repz
repnz
test
and
lods
dec
cmc
fcomi
ss
fcmovne
xorb
iret
clc
pop
push
cmp
inc
or
mov
dec
push
push
adc
adc
shrl
cmp
jmp
repz
push
and
mov
mov
inc
out
dec
sub
ds
sub
sbb
daa
pop
lods
xchg
iret
add
cs
movsl
mov
mov
mov
arpl
movsb
dec
xor
push
jecxz
sub
loopne
inc
jl
push
iret
lcall
mov
push
jb
and
cli
add
add
test
mov
insb
enter
rolb
fisubs
out
pusha
test
or
xorl
dec
test
dec
mov
out
jecxz
dec
je
jle
dec
adc
in
add
icebp
mov
pop
dec
push
jg
cmp
daa
jb
and
mov
sbb
pop
cmp
dec
inc
fimuls
sbb
mov
xor
pop
js
mov
gs
imul
sub
cltd
sarl
pop
mov
xchg
psrad
mov
xor
in
popf
xor
xchg
mul
pop
icebp
not
mov
pop
pop
mov
loopne
into
out
out
mov
cli
push
fstl
dec
rorb
or
sub
pop
add
add
orb
stc
xor
loop
sub
pop
out
gs
push
dec
arpl
mov
fs
subps
fildl
aad
pop
or
nop
jae
adc
mov
inc
or
stc
cmp
push
clc
clc
inc
mov
loope
cmp
in
inc
pop
sbb
movsl
inc
ficompl
pop
push
mov
lds
pop
rolb
imul
or
sarb
jmp
cmpsb
push
lock
sbb
add
ror
out
adc
enter
or
dec
inc
pop
inc
jo
lcall
pop
xchg
leave
jge
sub
lds
and
cmp
test
jo
mov
das
add
sub
jl
and
and
cmp
mov
ret
fildl
imul
mov
aaa
stc
stc
sbb
push
jp
subb
stc
push
or
mov
xchg
and
pusha
std
cli
pop
test
insl
xchg
pop
sub
sbb
inc
push
xchg
ljmp
jecxz
lea
dec
data16
and
pushf
repnz
popa
iret
pop
cltd
or
cmp
fildll
pusha
mov
push
test
push
out
push
xchg
shl
sbb
push
inc
add
mov
xchg
pushf
mov
push
test
mov
fs
and
sbb
in
and
mov
pop
sub
jb
push
jecxz
scas
aaa
adc
ja
adc
mov
sub
adcl
add
stos
dec
ret
lret
pop
cld
mov
inc
pop
adc
ja
xchg
push
enter
mov
push
or
pop
data16
inc
daa
push
ds
cmp
pusha
xor
xor
int3
push
mov
ja
in
pop
fldenv
jp
jle
not
das
mov
ret
xchg
js
pop
xor
and
fsubrs
jl
push
or
sub
jns
push
cmp
sbb
xchg
sbb
dec
jl
sbb
push
mov
sbb
in
in
push
add
lea
enter
mov
xor
enter
sub
mov
test
fstpt
add
mov
mov
std
mov
xchg
repz
rorb
sub
xchg
ret
les
push
dec
cli
jp
and
pop
arpl
mov
jg
dec
aad
sbbb
xchg
jle
mov
xor
dec
xor
sbb
push
sub
push
or
call
cmp
data16
je
in
pop
cld
add
mov
mov
dec
loop
sbb
loopne
sub
xor
push
orl
test
idivb
mov
xor
inc
or
pop
subl
enter
addr16
add
sub
les
or
pop
scas
lock
mov
sbb
xchg
or
cld
push
mov
imul
jns
cmpsb
or
jl
repz
push
xor
push
popf
sub
push
or
frstor
mov
push
fsubrs
test
and
mov
or
ljmp
je
call
mov
mov
dec
out
icebp
leave
jg
test
and
bound
mov
ret
pop
movsl
cli
dec
push
scas
mov
jecxz
lds
or
mov
jno
call
faddp
fcompl
mov
lret
sub
mov
push
xchg
cmp
in
push
dec
mov
jb
sahf
cmp
fisubl
loope
sbb
inc
ret
mov
inc
test
aam
outsb
in
dec
adc
sbb
scas
movsl
pushf
dec
inc
inc
ficoml
std
and
out
sub
jmp
aam
mov
ror
mov
push
out
leave
mul
xadd
std
sbb
sarl
dec
or
add
lods
test
gs
push
je
stos
jae
push
imul
test
popf
pop
movsb
jnp
sbb
out
push
mov
sub
movsl
incb
inc
popf
sbb
insl
mov
xchg
popf
add
cld
cmp
xchg
shll
xor
push
cwtl
lods
sbb
dec
clc
sbb
in
pop
pop
xor
jne
inc
cmpsl
mov
rcll
mull
stc
xchg
sbb
aam
imul
clc
imul
in
cmp
xlat
jl
mov
xor
and
cmp
mov
mov
jns
xlat
mov
int3
adc
cmp
mov
or
cltd
scas
cmpsl
lea
sub
sub
sub
sti
pop
fsub
xchg
enter
fdivrl
xor
pop
addb
xchg
jl
mov
jle
les
push
out
lret
push
in
push
inc
enter
mov
dec
sbb
push
fucomp
idivb
bound
nop
mov
test
mov
xor
sub
imulb
rcll
mov
shll
xor
lret
mov
mov
shlb
mov
out
cmpsl
adcl
cwtl
adc
inc
loope
or
jle
inc
xor
std
mov
and
add
stos
push
nop
loopne
out
jb
fadds
sub
push
sarb
cmp
push
test
add
lods
xor
in
mov
mov
xor
out
mov
cmp
loope
xchg
ds
mov
adc
out
inc
je
dec
pop
ljmp
addl
aas
dec
movsl
adc
xchg
inc
mov
inc
mov
mov
std
push
push
mov
sbb
xchg
std
jmp
or
xorb
enter
addr16
mov
xor
enter
fidivs
xchg
jo
rcr
cli
mov
out
cli
pusha
xor
into
fs
pop
cwtl
test
scas
arpl
lahf
rcr
imul
lock
and
call
into
mov
jmp
push
int
xchg
push
dec
das
leave
outsb
and
push
arpl
icebp
pop
shll
ss
inc
or
adc
sahf
ret
sbb
gs
inc
push
in
sbb
pusha
cwtl
movsb
adc
icebp
repnz
sbb
xchg
sbb
cmpsb
push
push
pop
lea
mov
test
ss
test
aas
pop
lret
lret
adc
fs
sbb
mov
sub
mov
push
inc
jp
lret
in
addr16
out
cmp
cltd
pop
std
pop
out
inc
add
xor
mov
pop
or
jp
xchg
aad
repnz
addr16
popf
add
into
stos
lcall
in
lcall
mov
sub
adc
pop
mov
push
int3
outsl
cmpsl
sbb
addr16
fcomps
bound
lret
or
sbb
icebp
jnp
or
scas
jl
in
fmuls
ljmp
adcl
scas
sarl
testb
sbb
lods
cmp
scas
jb
arpl
dec
std
bnd
xor
sarb
ljmp
push
test
mov
pop
mov
mov
in
repnz
xlat
int3
popa
aas
lock
sbb
mov
pop
cmp
pop
or
xchg
mov
xor
inc
push
cwtl
ljmp
jle
add
and
sub
or
mov
pop
or
mov
adc
daa
sbb
and
lods
loopne
sti
and
jnp
clc
xor
mov
icebp
pop
jg
cmc
dec
mov
jle
push
jb
push
lahf
pusha
inc
mov
loop
shlb
andl
lcall
dec
and
push
loope
pop
loope
pushw
mov
push
shlb
and
hlt
adc
jecxz
sub
sub
sub
mov
out
jmp
aam
sbb
sbb
ds
add
loopne
je
push
movsl
cwtl
stc
scas
mov
out
inc
leave
adc
bound
jno
inc
mov
and
xchg
std
xchg
and
adc
push
pop
mov
pop
lret
sarl
out
rorl
xchg
rcrb
push
fwait
lret
add
bound
fstpl
jo
in
xor
sbb
fistpll
icebp
ds
mov
pusha
push
in
pop
cmp
psubusw
push
mov
add
cs
mov
xchg
mov
add
popa
dec
jle
sbb
cmc
add
and
push
out
cmp
ja
jg
lret
repnz
outsb
inc
shrl
mov
jae
insb
je
test
aas
cmp
clc
dec
sbb
cmp
lret
add
test
jns
bound
mov
pop
push
loopne
dec
ret
jb
outsb
push
fld
inc
js
fstp
pusha
cmpsl
test
jmp
xchg
jb
adc
inc
jg
mov
mov
or
mov
dec
jp
dec
adc
mov
outsb
dec
jp
addr16
push
movsb
rcrl
call
sbb
inc
and
mov
sbb
incl
mov
pop
aam
mov
cltd
mov
subl
movsb
int3
adc
push
in
fidivrs
mov
int3
sahf
xchg
push
push
and
xchg
lcall
sbb
jae
rcrb
je
movsb
dec
mov
int
mov
and
jl
lds
call
push
shll
push
sub
mov
cmp
push
lret
adc
inc
xor
add
lret
lcall
jne
mov
fcoml
push
jmp
mov
int
clc
pop
cmp
fcmovnb
xchg
lahf
dec
loopne
sbb
mov
xlat
out
out
cmp
push
pop
sarl
test
mov
sub
and
daa
icebp
inc
xlat
aam
imul
ret
or
scas
push
les
mov
jmp
cs
inc
sbb
lds
sbb
mov
dec
and
cmpsl
push
adc
xchg
and
adc
aad
pusha
add
daa
clc
sub
dec
jno
nop
push
jl
nop
cmc
ss
outsl
push
scas
cmp
jae
dec
pop
shll
inc
or
lock
mov
out
xchg
adc
pushl
inc
ja
loope
aaa
fdivp
push
xlat
arpl
inc
adc
imul
jbe
cltd
jns
cmp
fdivl
enter
xchg
sub
cwtl
push
mov
aaa
push
sbb
mov
or
cmp
in
testl
cwtl
mov
icebp
pop
jo
mov
fimull
aaa
and
fwait
outsb
stc
sbb
es
insb
pushf
sbb
aaa
popf
ficomps
ja
rcr
mov
pop
data16
std
lods
popa
cmc
pop
or
mov
pop
dec
fwait
mov
lcall
pop
fwait
jnp
pop
subb
lret
pop
mov
repnz
lock
mov
fs
int
lds
cltd
or
aad
xchg
inc
inc
or
inc
leave
pusha
mov
aam
rcll
xorl
xchg
inc
int
lea
cmp
mov
xor
test
adc
push
xchg
inc
fdivp
jecxz
xor
mov
sub
sub
movl
dec
stos
mov
aaa
add
xchg
inc
mov
xchg
xor
dec
jb
pop
and
dec
ret
push
push
lds
dec
dec
in
insb
int
test
jmp
mov
add
mov
mov
gs
aad
lods
xchg
bound
lret
mov
inc
cmp
roll
sub
aas
rorl
fwait
data16
int3
fnstenv
mov
es
popa
es
mov
push
sub
push
sbb
rorb
or
call
jno
mov
pop
std
in
sub
je
sahf
test
fs
cmp
lret
aam
popa
ret
mov
mov
jb
push
vcvtpd2dq
incl
lret
test
and
fwait
in
mov
bound
dec
or
leave
sbb
cli
lea
push
adcl
das
cwtl
and
push
es
aaa
jecxz
lock
dec
enter
sub
cmp
sub
insl
shll
push
inc
add
inc
lret
cwtl
lret
es
pop
sub
sbb
mov
aas
cld
jnp
or
shlb
inc
popf
jl
data16
sbb
mov
and
into
loope
gs
or
mov
push
or
push
xor
repz
repz
lock
lods
in
insb
gs
arpl
loope
push
cltd
inc
or
das
int
jo
or
pusha
pop
xchg
mov
cli
add
test
in
cmp
or
nop
test
xor
sbb
mov
dec
shll
sbb
icebp
mov
mov
inc
gs
adc
adc
mov
or
jg
out
push
mov
jbe
xchg
jbe
or
imul
inc
lock
test
lds
push
push
cmp
push
pop
test
cld
loope
cmp
ror
std
jae
into
out
jb
movsl
jae
test
mov
mov
jmp
lds
loope
xor
sub
fs
in
jno
xchg
mov
pop
out
sub
dec
adc
inc
add
jnp
fiaddl
iret
aas
das
xor
aas
or
dec
mov
dec
pop
jb
scas
jge
adc
icebp
data16
jb
cmp
dec
fucomi
out
mov
pop
add
cmp
push
sbb
aam
xlat
jns
stc
in
in
outsl
aas
cmpsb
clc
inc
icebp
adc
push
pop
in
pop
aam
lods
cwtl
inc
and
hlt
in
stos
inc
shll
cmp
and
out
mov
jecxz
cmp
nop
clc
stc
push
adc
ja
adc
bound
cmp
scas
add
or
dec
dec
push
sbbb
dec
push
inc
xor
rorl
xor
movsl
sbb
mov
or
xchg
cmpsl
popf
inc
pop
adc
sti
jle
inc
aam
push
jg
mov
xchg
int
out
sub
mov
movb
xchg
sahf
cmp
mov
ja
xor
add
loope
jae
insb
negb
lahf
mov
cmp
lcall
fists
test
cld
in
cmp
stos
dec
in
dec
mov
or
pop
das
mov
ss
xchg
shll
adc
js
jae
shll
add
cmp
aam
dec
adc
jmp
out
imull
lret
das
out
sub
xchg
mov
cmp
xchg
ret
test
rolb
dec
pop
fcoml
xor
mov
pop
addl
clc
lret
test
dec
pop
rcr
or
andb
mov
xlat
das
inc
push
dec
leave
cmc
xorl
out
testl
fnstenv
cmpsl
cmpsl
cmpsb
push
push
jp
stc
out
shlb
sub
add
xor
out
dec
rclb
sti
adc
pop
mov
push
jb
stos
sbb
add
inc
and
lock
dec
mov
mov
mov
loope
adc
fdivp
into
mov
and
test
mov
das
and
dec
or
enter
sub
dec
pop
adc
dec
jb
sub
in
shlb
lds
and
aad
inc
pop
mov
jno
cmpsb
orb
lods
jo
jo
mov
loop
rorl
dec
sub
push
dec
xor
mov
mov
jle
inc
nop
movsb
inc
insb
pushf
js
xchg
jns
in
pop
push
ja
mov
jg
popf
hlt
aas
add
pushf
outsb
pop
mov
notb
mov
lods
filds
popf
xchg
sub
jnp
mov
scas
negb
cli
popf
std
push
out
jo
outsl
in
jge
loop
shll
jae
xchg
rolb
repnz
lods
jns
aaa
inc
xorl
and
addr16
aad
mov
in
cltd
mov
fs
ficoms
out
fbstp
mov
das
test
xor
pop
push
cmp
dec
loope
dec
pop
stc
loop
mov
jne
fsubs
pop
jo
das
js
lea
and
push
scas
xor
mov
pop
fs
mov
mov
popa
push
dec
mov
mov
lahf
subb
fisttpll
cmc
mov
and
push
sti
sub
repz
mov
mov
pop
adc
enter
fiadds
sbb
pop
notl
and
ret
dec
outsb
mov
cmc
and
nop
dec
mov
xchg
fisubrl
and
jg
pop
loop
and
fbld
ret
shll
or
xor
and
bound
std
out
daa
sbb
bound
cmc
jne
cs
jecxz
addr16
cld
jge
aam
cld
mov
clc
test
stos
mov
jecxz
mov
mov
pop
popa
pop
test
pop
or
cmc
fldt
and
cmc
pop
daa
adc
dec
test
add
push
cmp
mov
cltd
lret
in
pop
inc
int
or
mov
jle
and
lahf
dec
stos
inc
inc
push
popf
and
push
pop
or
aas
out
mov
cwtl
cltd
mov
cmp
or
cmp
lock
inc
inc
mov
or
roll
jmp
mov
sbb
in
dec
ds
fwait
sbb
mov
mov
std
mov
xchg
cmp
ret
inc
xchg
bound
xor
xor
mov
les
and
aad
cmpsl
pop
dec
add
fnstenv
mov
lea
popf
out
mov
pop
aam
fnstenv
shrl
into
shll
lret
adc
pop
int
jno
into
push
sbb
stos
pop
repz
scas
jmp
and
dec
pop
adc
icebp
push
movsl
and
push
mov
ds
imul
movsl
cmpsb
scas
int3
popa
adc
imul
mov
mov
shlb
or
cmp
mov
cmp
stos
lahf
mov
test
mov
ret
cmpsl
fstl
xchg
dec
xlat
icebp
bound
movl
sbb
dec
negb
into
into
and
hlt
add
test
inc
xor
mov
mov
insb
mov
in
jl
or
cmp
in
sbb
sub
jno
in
stos
cmp
mov
cmp
es
stos
mov
std
test
cmp
es
sahf
pop
mov
out
je
xor
xchg
xchg
je
enter
aaa
and
repz
insl
loope
loop
xor
mov
pop
jnp
adc
mov
scas
mul
mov
inc
adc
int
loopne
insl
hlt
mov
cmp
lret
xchg
decl
lods
fcmovu
stos
adc
push
movsb
ja
leave
inc
or
mov
adc
jno
xlat
int3
jo
sarl
sbb
add
loope
sub
inc
cmp
jl
pop
dec
daa
jbe
divl
stc
lods
div
icebp
xchg
jg
jb
frstor
mov
jbe
jecxz
cmp
pop
cwtl
cmp
cmp
adc
out
mov
sbb
jnp
imul
mov
js
lret
jg
adc
sbb
test
mov
pop
mov
push
movsb
mov
xlat
sbb
xchg
jle
fs
repz
inc
fadd
cmp
test
in
cmpsl
xor
lock
jge
xchg
xor
push
xchg
push
inc
sub
inc
jle
out
xor
mov
das
pop
cmpsb
cmp
lcall
lea
dec
js
es
add
aas
inc
rol
xchg
pop
push
xchg
roll
in
inc
adc
mov
es
cmp
idivb
mov
mov
iret
cli
rolb
movsb
push
lea
pop
js
push
lea
mov
icebp
mov
lea
mov
sub
imulb
aad
stc
mov
loopne
pop
cmp
xlat
ss
sbb
je
in
rorl
push
and
mov
in
pop
hlt
jp
mov
xchg
jecxz
mov
pop
loop
jge
xlat
mov
loop
sub
addr16
rcr
and
cmc
push
push
dec
push
ljmp
hlt
inc
cmp
add
pop
and
dec
aam
xor
fdivs
out
insb
jp
loop
and
sbb
test
mov
dec
pop
inc
push
daa
sub
mov
fcompl
js
sti
push
mov
in
or
mov
std
decl
icebp
ja
dec
push
push
xor
push
shrl
xchg
test
push
jno
push
jp
pop
popf
pop
inc
arpl
insl
pop
and
lods
jnp
mov
sar
in
add
and
loopne
xor
insb
add
out
mov
dec
push
lock
pop
jbe
jo
and
sbb
xchg
sbb
rclb
arpl
stos
cmpsl
dec
aad
stos
mov
dec
mov
sarb
scas
inc
into
sahf
movsl
in
pop
mov
outsl
das
leave
popf
inc
jo
adc
sub
dec
stos
pop
or
push
xchg
sbb
stos
pop
xor
jg
mov
dec
fwait
mov
xor
lret
pop
add
sbb
std
jbe
scas
js
mov
jmp
push
jg
push
dec
xchg
test
xchg
jo
push
ja
mov
adc
adc
mov
adc
pop
hlt
mov
sub
sbb
sbb
clc
nop
test
pop
jo
icebp
fnstsw
call
pop
adc
jle
data16
xor
mov
xor
sahf
jns
jle
mov
lret
pusha
xchg
dec
addl
inc
and
inc
or
sbb
inc
push
xlat
dec
rolb
jb
push
jno
loop
mov
call
and
hlt
loope
movsl
mov
lret
mov
in
aam
lcall
xor
sbb
nop
adc
and
inc
sub
pop
mov
pop
pop
cmp
and
push
dec
lods
out
pusha
pop
lea
gs
sub
out
int3
popa
jbe
sub
mov
mov
dec
mov
es
sbb
daa
sbb
divb
fs
test
push
push
push
sti
out
mov
pop
and
in
cmp
adc
test
fsubs
sar
test
mov
jmp
movb
and
enter
xor
add
add
xor
or
mov
ss
out
push
dec
mov
cmp
popf
and
out
xor
pop
mov
mov
pop
xlat
iret
push
sbb
in
cmp
pop
mov
inc
mov
out
or
ds
xor
add
fadd
scas
nop
dec
pop
push
adc
movsl
je
jae
lds
idivl
int
int3
adc
loopne
dec
xor
pop
cmp
pop
das
xchg
sahf
mov
inc
push
jb
add
pop
es
xor
adc
inc
addr16
push
outsl
jle
xor
push
out
adc
std
cmp
push
or
mov
sahf
sub
push
mov
jg
push
imul
and
nop
cmp
dec
jb
xchg
dec
push
stos
pop
data16
stos
xchg
hlt
rcrb
shrl
sbb
lcall
test
int
mov
aad
fwait
mov
lahf
inc
jne
cmovp
inc
dec
rorl
pop
xor
sub
cmpsb
inc
aas
mov
cmpsb
add
icebp
cltd
mov
push
jno
setp
fisttpl
in
push
data16
loopne
jg
cmpsl
pmuludq
repnz
or
push
add
mov
lahf
aas
adcb
dec
adc
inc
into
scas
les
lock
push
or
or
arpl
xor
inc
sub
cmp
dec
jb
orl
fwait
fwait
pop
pop
inc
out
push
mov
mov
sub
cmc
negb
cmpsl
mov
stos
out
dec
lea
xchg
scas
cmpb
in
cmpsb
popa
lret
pop
inc
inc
es
les
movsl
cmovne
das
inc
leave
std
ret
jbe
outsl
addr16
xor
int3
movsl
notb
pop
stos
mov
push
ja
test
mov
sub
mov
inc
adc
add
pop
jnp
pop
sbb
push
sub
rol
aad
xchg
sub
sbb
pop
aam
pop
test
or
jle
sbb
and
popl
imul
gs
stc
div
aas
or
and
es
xlat
adc
jmp
int3
xchg
test
jno
or
push
dec
clc
cmp
and
ret
sub
daa
ret
or
mov
jg
push
xchg
in
in
lret
cmpl
stc
subl
enter
dec
mov
fstpt
lret
lods
es
int3
in
push
repz
fxch
add
pop
jg
repz
and
loopne
mov
aad
and
test
leave
data16
gs
and
pop
dec
imul
roll
imul
fs
cmp
xchg
ds
call
stos
sub
popa
pop
outsb
dec
adc
fsubrl
pop
cmp
test
cwtl
xor
iret
js
mov
pop
jge
stos
sti
adc
pop
aam
push
sub
stos
cmpsl
push
cld
rcr
dec
repz
push
rorb
and
mov
adc
adc
imul
jne
rorb
jo
popf
lcall
lds
mov
and
in
sub
sbb
cmpsl
push
cs
sub
ds
ljmp
ljmp
ljmp
mov
imul
fwait
popf
jecxz
test
jmp
mov
cmp
ljmp
jns
push
add
test
or
es
popf
pop
ret
lahf
cmpsl
or
lods
or
and
cmp
lret
mov
xchg
jns
cwtl
mov
add
cmp
jno
ss
mov
push
in
test
dec
cld
mov
inc
mov
sbb
xor
test
cmp
popa
popf
lods
jp
push
adc
iret
popa
push
inc
bound
or
mov
cmp
mov
cltd
pop
dec
aam
test
pushf
in
sti
movsb
jbe
push
test
cmp
jmp
cmp
cli
bound
mov
or
lods
cmc
ljmp
mov
lea
jg
cld
mov
mov
inc
imul
cmp
popa
mov
jl
out
lods
xor
xchg
stos
imul
lods
stos
add
cmp
xchg
dec
hlt
and
xlat
in
jnp
push
sbb
sbb
lods
std
insl
jp
cmpsl
ds
xchg
hlt
jecxz
add
lds
enter
sti
cmp
push
xor
sbb
pop
fisttps
fisttpll
cmp
push
clc
sahf
pushf
ds
bound
in
rorl
inc
cmpsl
xchg
leave
adc
and
jnp
insl
ss
shll
out
xlat
mov
cs
xor
rorb
aas
pop
xor
ret
loope
dec
pusha
movsb
icebp
mov
or
dec
push
cmpsb
dec
mov
mov
fs
out
ds
cwtl
mov
xlat
inc
repnz
cmc
dec
mov
adc
xlat
sub
stc
popf
js
aaa
aaa
not
add
jae
sbb
shll
xchg
test
mov
lret
into
add
leave
adc
stos
sbb
ljmp
push
pop
cmpb
pop
popf
jp
pop
in
push
inc
in
inc
imul
mov
in
adc
insb
xchg
lahf
mov
jb
jno
pop
sub
push
mov
dec
fists
xchg
xchg
mov
clc
pop
mov
stos
jl
fdiv
push
pushf
add
ljmp
push
jbe
push
lahf
clc
ljmp
push
into
pop
stc
hlt
pop
adc
daa
xor
add
sbb
out
lahf
cmp
in
imul
adc
push
mov
icebp
mov
or
push
xchg
sbb
push
cmpsb
mov
xor
mov
fisttpl
cmc
or
push
lret
lods
push
or
sar
repnz
cmp
mov
mov
test
xor
dec
mov
fs
jmp
mov
insb
sub
fs
jb
cmpsb
add
push
insl
lcall
arpl
adc
adc
xor
in
mov
jmp
xlat
push
sbb
stos
int3
ja
stos
mov
icebp
mov
pop
scas
and
psubsw
and
shlb
ficoms
das
into
vpmulhrsw
inc
fbstp
dec
negb
pop
dec
mov
pop
lds
inc
lcall
cmp
mov
pop
or
xchg
and
add
int
test
jne
jg
popf
fsubrs
add
sbb
add
icebp
test
xor
push
xor
lret
iret
add
repz
inc
test
or
jo
lcall
mov
push
dec
loopne
ret
imul
jb
push
sarl
mov
mov
or
jbe
lahf
test
outsb
les
mov
inc
lcall
fcoms
pushl
and
sbb
call
cmc
das
sbb
push
shl
or
mov
pop
repz
sub
jl
and
shlb
insl
cwtl
and
sub
mov
mov
int
and
adcl
mov
dec
imul
mov
jl
sub
inc
mov
inc
sub
lahf
fildll
inc
cmpsb
cmp
hlt
jnp
and
shll
lahf
add
aam
dec
dec
int
add
enter
mov
xchg
movsb
sbb
jae
fwait
pop
fsts
jne
add
not
jg
test
cmpsl
cmp
sbb
rorb
sti
jecxz
call
and
into
ja
in
in
outsb
outsb
pop
cmp
adc
in
lret
loop
xor
stc
enter
jbe
icebp
ja
mov
xchg
dec
sub
cmpl
cmp
shr
push
jp
xchg
xchg
aaa
addl
jg
sbb
and
pop
js
cltd
shlb
shl
mov
ja
inc
ds
jae
aas
jae
push
shlb
add
push
stc
fs
in
mov
js
aas
inc
or
sub
sti
adc
and
das
addr16
push
lock
cli
cwtl
sbb
mov
xchg
out
dec
in
inc
sub
ret
loop
mov
and
test
lea
sub
xor
xor
mov
pop
push
stc
jmp
mov
push
add
cwtl
lret
lock
stos
js
pop
jmp
repz
dec
jmp
mov
in
pop
jns
sbb
fiaddl
js
and
sbb
clc
rorl
bound
iret
lret
sub
mov
push
cmp
gs
add
mov
rcll
js
sbb
inc
jl
fnstsw
inc
jns
cmp
in
sahf
inc
push
shrb
repz
add
mov
repnz
mov
and
pop
xlat
and
sbb
cmp
repz
out
adcb
mov
mov
sbb
adc
outsl
daa
gs
cld
js
inc
mov
pop
data16
xor
inc
add
leave
out
dec
cld
jp
enter
fmull
repnz
add
cwtl
pop
adc
sub
cmpsb
dec
add
outsb
outsb
xchg
sbb
fcomps
aas
add
imul
adc
mov
arpl
mov
jns
sbb
call
xor
insb
xchg
xchg
outsl
inc
push
scas
mov
lds
sbb
testl
jp
mov
repnz
cld
or
push
mov
cmp
pop
pop
rorb
sbb
lds
push
sub
stc
xchg
mov
out
pop
stos
mov
mov
gs
cmpsb
pop
ret
sbb
sahf
mov
inc
jbe
or
dec
movsl
out
insb
in
and
cwtl
inc
out
jnp
cmp
and
arpl
enter
aaa
pop
cmpsb
pop
adc
mov
sbb
jb
mov
push
inc
push
sti
jecxz
jp
movsl
sbb
imul
dec
or
cltd
sub
adc
test
dec
imul
or
dec
in
inc
movsb
sbb
in
fisttpll
ror
and
loopne
das
dec
cmp
push
mov
mov
xchg
aas
scas
in
scas
jl
xchg
xchg
or
fcmovb
fsubrp
data16
rcr
mov
jo
push
lret
jle
dec
loop
and
push
mov
mov
mov
and
inc
or
push
xor
mov
inc
cwtl
mov
bound
ficompl
add
inc
jmp
adc
jl
hlt
or
jb
sub
rolb
inc
pop
cwtl
popa
cmp
jns
mov
jl
ss
stc
xor
cwtl
mov
cmpsb
cmp
insl
cmp
dec
pop
in
xor
fildll
jmp
int
pushf
pop
push
mov
or
mov
dec
js
and
in
adc
push
in
mov
push
and
push
dec
jbe
xor
push
hlt
sub
addr16
pop
rolb
and
ret
pop
enter
subb
pushf
sub
adc
shlb
lock
mov
push
xchg
push
mov
push
addr16
out
pop
cmpl
adc
mov
lcall
mov
out
add
popa
pop
orb
xor
and
pop
mov
mov
inc
mov
and
xchg
sti
mov
adc
push
or
pusha
jle
push
jmp
pushf
pop
lods
adc
lock
and
cli
cmp
cmc
sarl
ljmp
test
push
cmp
adc
jno
xor
sbb
mov
mov
loop
mov
addb
hlt
std
push
aad
in
popf
in
and
loopne
add
mov
jp
cli
cmp
push
pop
es
cmp
pop
aad
sub
outsb
sbb
sti
adc
jmp
fcmove
in
cmp
jae
push
lds
pop
cmc
pop
ss
and
lods
dec
sub
pop
rcl
push
popf
mov
sub
and
push
lods
dec
inc
sub
or
idivb
cmp
push
xor
xor
test
sub
add
inc
mov
fs
in
dec
adc
sub
nop
ret
loope
push
mov
xchg
xor
aas
mov
mov
or
mov
and
out
test
and
or
jb
pop
fidivrl
dec
dec
and
ficompl
cmp
push
jbe
cmp
inc
pop
or
pop
in
repz
lahf
xchg
mov
pop
sbb
movsb
jns
mov
fnsave
lods
cmc
imul
outsl
adc
dec
cwtl
jp
mov
pop
out
daa
inc
jb
divb
fcompl
out
enter
lea
cmpsl
xorb
and
pop
rol
jl
in
push
mov
adc
push
mov
xchg
scas
jb
outsl
enter
lea
add
jge
xlat
scas
ret
cs
xor
fildll
mov
into
nop
and
mov
bswap
xchg
pop
aas
paddq
dec
int3
xor
inc
sbb
ret
add
adcl
jo
mov
mov
jmp
xor
cmp
xor
fwait
mov
add
loop
data16
inc
les
gs
add
jge
jg
push
out
imul
lock
int3
mov
pop
mov
xchg
icebp
pop
sbb
adc
xchg
dec
fs
aad
mov
mov
aam
hlt
sub
subb
in
sbb
fcomps
jle
mov
scas
adc
mov
fcoml
and
lods
xchg
jmp
mov
xor
pop
jmp
loope
and
cmpsl
cld
and
mov
in
daa
cltd
int
jns
outsl
jecxz
ja
xor
jb
or
mov
sub
shr
stos
clc
cmp
pop
sarb
arpl
stc
jbe
sbb
add
js
daa
popa
fisubrl
fdivrs
fwait
fldln2
mov
push
pop
decl
es
or
lret
in
test
mov
lcall
enter
pop
sbb
pushf
sub
aaa
jge
or
jb
or
mov
cmp
out
iret
mov
test
inc
sbb
scas
add
xor
loope
cli
stos
iret
dec
push
cmpsb
int
jbe
dec
nop
int3
xchg
cmp
cmp
pop
out
out
data16
movsb
mov
scas
cmpb
test
pop
sbb
push
test
push
daa
lret
cltd
sbb
cmp
aam
xor
inc
and
cmp
in
aaa
jecxz
dec
xchg
mov
push
sbb
push
sub
push
or
jbe
dec
adc
mov
pop
mov
pop
jmp
and
xor
pop
pop
inc
lods
mov
mov
mov
movsl
dec
jg
loop
adc
andl
les
mov
je
cmp
enter
push
and
sub
dec
fisttps
dec
pop
adc
lcall
dec
insb
lcall
fistl
jnp
push
adc
push
mov
jp
iret
sti
mov
loope
jmp
jno
jle
in
lock
mov
sub
dec
shlb
call
inc
out
scas
push
mov
adc
into
xor
xor
scas
out
push
ret
cmp
stc
cli
es
push
mov
jae
loope
push
push
and
std
insl
xchg
lret
out
pop
or
and
lcall
push
in
pop
add
xor
sub
add
cwtl
inc
pop
xchg
mov
loope
push
imul
jo
andl
sub
mov
mov
addb
testb
fmul
sub
mov
loop
ret
clc
loope
sub
xchg
das
dec
lods
lods
sub
push
rorl
test
and
stos
loop
push
out
jle
andb
scas
mov
test
xchg
sub
insl
push
notb
dec
jbe
dec
push
mov
adc
stos
jbe
mov
fadds
out
in
or
adc
negl
mov
push
and
testb
cmpsb
dec
mov
popf
pop
adc
jns
xchg
push
sub
sub
xor
push
pop
scas
jnp
nop
je
je
cli
pop
jp
stc
outsl
mov
sbb
xchg
xchg
fwait
sbb
rorb
xchg
fwait
enter
dec
adc
pop
in
popl
movsl
cmp
pop
bound
dec
fadds
hlt
ljmp
cmp
in
loope
leave
mov
mov
popa
pop
sahf
js
or
xorl
lods
pop
dec
loope
adc
push
dec
lods
xorl
adc
lock
repz
lret
rcl
push
jns
push
or
into
je
or
pop
mull
sbb
ret
mov
xchg
dec
xor
int
jg
mov
fadds
jns
out
pop
out
sbb
adc
aad
lock
test
out
iret
mov
rclb
jbe
jge
jae
push
cmp
shl
pop
sub
es
ret
popa
mov
sbb
mov
mov
mov
sub
rcr
cmp
cmp
out
aaa
inc
sub
ror
mov
fcmovnb
jnp
loope
clc
push
push
das
adc
and
xchg
push
pop
mov
into
jle
cmpsl
xchg
cmp
pop
cmp
inc
int3
enter
in
rcl
ret
xor
das
mov
mov
mov
lret
add
mov
inc
mov
pop
shll
aaa
and
ret
popf
repz
pop
insl
push
fimuls
adc
dec
and
cmp
mov
pop
in
xchg
std
lea
out
ljmp
push
push
insl
popa
jnp
dec
push
call
xchg
lret
push
inc
lock
and
jbe
adc
gs
or
loopne
mov
int
push
ja
daa
rcrl
lret
mov
mov
clc
xchg
out
sub
cmp
dec
sub
fstps
pop
in
into
out
sahf
in
or
fdivp
push
xchg
mov
jo
ds
cs
out
mov
out
or
ss
xor
leave
andb
jnp
adc
sbb
fabs
push
int3
mov
push
mov
xchg
push
inc
dec
fiadds
jmp
add
sarb
stc
and
dec
gs
std
fstl
into
out
xlat
mov
add
jae
mov
jno
fistl
sbb
and
outsb
xor
ds
and
testb
push
cmp
mov
xchg
cli
aas
stos
dec
pop
imull
mov
pop
test
adc
imul
fs
mov
sub
xchg
cmp
mov
daa
push
aad
fstpt
mov
or
pusha
mov
gs
mov
incb
into
mov
lods
fldcw
outsb
and
dec
pusha
imul
aad
cld
and
lret
or
stc
dec
ja
in
cs
jns
mov
leave
scas
jno
xchg
push
std
or
xchg
mov
dec
inc
in
lods
mov
rolb
ds
popa
mov
pop
dec
cwtl
fsubrs
jbe
mulb
testl
lcall
in
pop
lret
movsb
pandn
and
imul
out
enter
mov
push
insb
leave
cmc
das
out
xchg
icebp
repnz
subl
and
mov
hlt
aam
mov
mov
iret
jp
imul
push
out
aad
shl
or
sbb
push
mov
mov
and
inc
out
jae
and
adc
xor
imul
testb
and
in
pop
sti
popa
inc
cmpsl
hlt
and
xchg
mov
jae
xor
adc
pcmpeqw
dec
and
clc
dec
stc
jo
jmp
mov
or
mov
lahf
scas
pop
or
test
xchg
data16
pop
mov
shlb
aad
mov
or
xchg
adc
pop
jno
test
sbb
mov
test
and
push
pusha
and
cmpl
dec
xchg
mov
cmp
xor
icebp
insb
loopne
jle
mov
pop
insb
pop
aas
dec
das
call
cld
mov
mov
negl
mov
push
cmp
adc
es
lret
int
jo
loop
adc
outsb
ret
int3
jo
leave
mov
dec
jmp
ret
ds
int3
popf
es
aas
cmpb
or
push
push
fimuls
lret
scas
jle,pn
mov
sbb
push
fs
lret
jp
xchg
cmp
adc
in
mov
xlat
cltd
lods
push
lock
push
mov
movsl
adc
aas
in
shll
mov
dec
fcompl
xchg
adcb
stc
push
or
mov
mov
jbe
mov
sbb
mov
stos
cmp
addl
cmc
fwait
adc
mov
in
das
out
cmp
stos
pop
pop
sbb
enter
movsl
sbb
cli
aas
pop
ret
sbb
dec
fs
pop
lcall
adc
xchg
mov
adc
popl
repnz
dec
push
xor
mov
insl
out
adc
test
aas
xchg
stc
out
movsl
cmpsl
pop
inc
sub
dec
in
cmpsb
scas
sub
mov
cmp
sbb
fnstcw
sub
lret
cltd
std
fnstenv
xor
and
and
push
aad
hlt
loop
xchg
and
loopne
popa
jo
shrb
cmp
xchg
out
xchg
sub
add
je
xchg
adc
pop
jno
insl
jg
mov
mov
jbe
xchg
ret
ds
mov
aas
test
bound
ss
leave
fs
sahf
jno
pop
inc
icebp
mov
sbbl
in
mov
add
fnop
dec
xor
xchg
mov
jae
inc
aas
outsl
push
inc
fadds
pop
fisubs
dec
jb
ret
notb
repz
adc
inc
scas
cmpsl
int
aas
bound
adcl
in
sti
sub
adc
or
aas
popa
std
inc
cmp
orl
and
repnz
sub
in
fwait
mov
push
hlt
mov
outsb
adc
cmp
mov
lds
lret
cmpsl
push
in
add
xor
sub
sti
push
insb
cltd
aaa
jle
aas
mov
repz
mov
dec
cmpsl
jp
scas
ja
dec
mov
inc
ret
stc
jae
mov
test
divl
cmp
dec
jno
xlat
xor
test
aas
imulb
inc
test
push
outsl
cmp
mov
cld
jne
imull
in
dec
jno
cmp
sbb
inc
sbbl
xlat
leave
mov
inc
and
adc
pop
xor
in
pop
les
and
aad
jnp
push
lea
xor
push
xorb
push
sti
outsb
and
insb
cld
lods
shr
or
mov
or
push
push
sbb
aad
and
mov
dec
loop
pop
hlt
jae
in
iret
scas
pop
sub
jbe
stos
mov
lods
add
push
es
ljmp
adc
cli
scas
in
mov
dec
cs
jne
mov
test
stos
or
or
ljmp
test
cli
push
add
in
adc
sub
in
jbe
add
je
mov
xchg
inc
push
cld
mov
sub
lods
adcl
xor
test
sub
aaa
mov
shll
add
xor
cmpsb
mov
sbb
sbb
pop
popa
lahf
scas
xor
sti
inc
xchg
fucomip
fsubrs
in
stos
mov
iret
xor
pop
cmpsl
in
fiadds
xchg
mov
xchg
div
mov
mov
and
pop
lods
add
xchg
push
xor
cmp
stos
out
pop
lods
jbe
mov
mov
test
pusha
xlat
lea
add
ja
jmp
in
pop
lahf
push
push
aaa
xor
cwtl
int3
das
sub
loop
inc
and
cmpsl
xor
jmp
jbe
xchg
sahf
adc
imul
jge
or
fs
mov
inc
sub
int3
xor
cmc
sarb
lods
cmp
xor
and
lods
jbe
lods
xlat
test
adc
cmp
pushf
jp
and
insb
mov
xor
mov
push
sub
fmuls
push
mov
xor
or
dec
das
xor
lahf
hlt
fnclex
adc
vdivps
mov
push
mov
push
jnp
leave
pusha
inc
aam
je
pop
out
push
shrb
and
cmp
out
mov
push
pop
cmp
mov
mov
mov
add
call
imul
fstpl
mov
lret
jl
sbb
aad
and
jmp
cmp
and
lock
cwtl
or
and
or
sysret
push
add
repnz
fucomp
movsb
inc
fmull
pop
add
xor
bnd
xor
inc
outsb
insl
adc
push
imul
push
pusha
xchg
xorb
mov
inc
and
jne
sbb
or
test
jns
ret
bound
and
mov
mov
int3
neg
imul
insb
sbb
pushf
pusha
subb
in
push
aas
sub
mov
jbe
stc
xor
cmp
scas
sbb
in
adc
jg
scas
ljmp
repz
shlb
in
pop
lret
inc
mov
sbb
mov
bound
mov
std
push
xchg
add
and
xchg
test
xchg
dec
pop
sarb
imul
lods
push
sbb
mov
lods
je
sbb
enter
das
out
push
pusha
jmp
mov
mov
push
ljmp
sub
test
add
mov
imul
sub
inc
adc
cmp
sarb
ffreep
push
lcall
push
inc
sbb
in
out
scas
fsubrp
ret
fs
frstors
fs
cmp
mov
scas
inc
inc
add
pop
lods
orl
xlat
fcmovnbe
jge
int3
adc
arpl
dec
sub
ja
or
pop
repz
mov
jo
psubusb
fldcw
fcomps
repnz
out
push
jg
mov
sbb
orl
jae
adc
jle
daa
rcr
push
and
cmpsl
repz
push
addr16
mov
jno
dec
arpl
cmp
incb
xchg
dec
sbb
push
repz
mov
ss
std
dec
lods
adc
ljmp
pusha
or
test
add
iret
cmpsb
pop
adc
mov
into
imul
push
xchg
imul
mov
sub
lock
cmc
loop
sar
test
mov
rcrl
loopne
and
decl
aaa
loopne
mov
ret
in
mov
lds
fstpl
pop
filds
dec
jb
xchg
movsl
and
lock
inc
cmpsl
jo
jbe
outsb
push
jae
in
loop
add
push
mov
inc
jmp
stos
inc
or
push
jb
out
pop
call
or
stos
aaa
add
jo
lea
jl
aam
hlt
rorl
std
sarl
into
out
fwait
adc
cmp
dec
movsb
outsb
cmp
jl
push
daa
fidivl
sub
cmc
inc
mov
cltd
push
sahf
adc
js
test
dec
mov
fidivs
jbe
rorb
cmp
sbb
mov
loopne
jecxz
outsb
sbb
push
push
out
push
add
pushl
pop
push
rol
push
or
xchg
jle
and
mov
jbe
dec
mov
das
ret
inc
and
xor
adc
jo
xor
int
outsb
jne
push
ret
jno
mov
cli
icebp
or
jo
and
push
int
sub
or
sub
push
lock
cmp
jns
subl
clc
rorl
xchg
mov
cwtl
test
sbb
xchg
mov
lods
inc
mov
in
aaa
test
jbe
cli
mov
fldl
into
aaa
fmull
mov
movsl
or
pop
push
sbb
mov
je
jmp
xor
pusha
pop
rcr
dec
dec
mov
cmpsl
pop
mov
gs
jmp
dec
push
push
inc
and
sub
nop
and
sub
shlb
dec
nop
mov
arpl
stc
dec
and
push
adc
and
sbb
int
ljmp
xor
sbb
jmp
gs
lds
jmp
cmp
dec
push
mov
and
imul
fsub
imul
shll
sbb
cmp
xchg
jge
dec
in
pusha
enter
cmp
sbb
mov
xor
cmp
push
push
mov
sbb
jbe
jnp
dec
into
mov
xchg
xchg
xor
faddl
shlb
push
push
out
and
xchg
shr
mov
xor
inc
lahf
movsl
bnd
es
aam
enter
test
inc
ss
mulb
adc
stos
std
mov
xor
lods
in
enter
js
adc
push
mov
int
lods
push
pushf
movsl
adc
mov
mov
shll
dec
imul
pusha
fsub
xchg
fs
sub
fiadds
inc
mov
jbe
loope
sub
sbb
je
movsl
jb
mov
adc
loope
lock
rcll
mov
add
popa
mov
es
clc
adc
pushf
into
rclb
push
inc
arpl
or
leave
rclb
test
test
inc
adc
in
mov
xchg
pop
ja
std
int
jb
leave
shl
sub
enter
nop
mov
loop
mov
inc
adc
dec
cmp
dec
dec
out
inc
call
cmc
ret
clc
dec
pop
aas
cli
add
push
and
or
cwtl
lcall
stos
add
or
movsb
and
cvtdq2ps
mov
cmpl
andl
xchg
mov
gs
pop
ss
int3
nop
hlt
lea
pop
mov
inc
mov
ret
jb
sti
push
and
data16
adc
mov
inc
add
push
lods
push
ret
inc
sub
and
stc
add
add
xchg
repz
lahf
push
lds
add
int3
jecxz
aad
xor
fldt
or
sarb
xor
sbb
adc
and
cld
add
int
mov
jge
cmp
pop
jne
or
test
ljmp
dec
push
lret
cli
xchg
pushf
cld
mov
add
dec
icebp
test
jnp
inc
mov
dec
mov
mov
jp
mov
fidivs
dec
xchg
xchg
mov
pop
fnstenv
jle
jp
xlat
mov
inc
xchg
repz
mov
sub
shlb
xchg
cli
add
mov
adc
test
adc
inc
fildll
shrb
mov
xchg
sbb
in
hlt
cmc
xor
pop
mov
dec
mov
in
push
xor
rol
adc
or
fnstsw
adc
cltd
push
stos
aaa
popf
fisttps
mov
jl
test
mov
imul
shl
jg
jb
clts
aas
mov
push
test
jp
and
add
in
fbstp
pop
pop
mov
and
jle
or
mov
xor
loopne
imul
fistps
mov
mov
out
jl,pn
mov
test
cmp
or
inc
imul
lret
inc
orb
cmp
out
adc
jo
dec
mov
xor
rclb
sub
add
mov
cwtl
or
sbb
lret
jmp
push
daa
mov
jl
mov
lsl
test
repnz
enter
mov
add
fsubrl
or
push
fst
lds
mov
ds
push
dec
jl
mov
push
pop
jecxz
lock
enter
mov
clc
cmp
mov
mov
lods
jne
jp
sub
enter
inc
fnstsw
push
jo,pn
in
mov
cwtl
push
test
push
sub
pop
xorb
or
imul
fnstcw
ret
es
pop
jno
mov
movsl
fbld
das
add
add
rclb
xlat
jmp
sbb
cmpsl
dec
fisttpl
mov
dec
push
push
sbb
or
or
out
cmp
smsw
out
cmp
imul
das
pusha
out
inc
insl
dec
fcomps
mov
add
cmc
mov
add
fwait
fwait
pop
adc
jle
cmp
mov
imul
sbb
xchg
xchg
cmp
xor
push
lret
add
ret
ss
cltd
test
nop
in
sub
movsl
popa
enter
loop
inc
fwait
mov
int
rcr
lods
mov
xor
mov
add
lods
sbb
pushf
jle
adc
add
out
dec
imul
loope
gs
test
out
lahf
mov
addr16
adc
inc
fmuls
adc
adc
mov
loopne
cs
popa
sub
incb
sbb
andb
dec
jp
add
or
mov
xor
stc
iret
not
icebp
jg
enter
xchg
shl
adc
adc
xchg
sahf
push
aas
aad
stos
xchg
in
inc
pop
mov
jae
sub
and
cmp
sub
subl
lock
pop
adc
in
cmp
out
sbb
scas
ss
fldt
jle
std
out
bound
mov
test
push
pop
adc
push
cmp
mov
out
xchg
out
mov
sub
xchg
jbe
adc
movsb
out
jp
popa
add
adc
fwait
icebp
not
dec
call
fcompl
mov
jbe
jmp
push
repz
pop
es
outsl
repnz
stos
mov
mov
dec
jne
mov
add
cmp
dec
or
xchg
stc
cmp
jmp
cmp
or
add
imul
xor
xchg
loopne
pop
xchg
test
pop
sub
and
loopne
pop
xchg
cli
ss
cs
sub
inc
pop
les
popa
inc
imul
adc
sbb
repz
aad
add
pop
jne
cld
jo
cmp
mov
pushf
jmp
dec
adc
test
leave
sti
sub
cmpsl
mov
std
jp
jae
sbb
push
js
pop
fistpl
mov
mov
clc
rolb
daa
insb
push
stos
stos
and
mov
bound
adc
pop
inc
add
add
lea
xor
in
jb
push
xchg
pop
jl
clc
adc
mul
xchg
mov
int3
jno
inc
inc
mov
subl
notl
fsubr
mov
fsubrs
jns
pop
imul
jb
mov
dec
push
push
jae
mov
test
fsubrp
imul
add
mov
nop
mov
int3
cmc
arpl
imul
movsl
inc
xchg
jns
in
adc
mov
test
aam
cmp
test
mov
xchg
jb
clc
inc
push
shl
mov
test
pop
mov
scas
cltd
mov
cmpsl
sbb
pop
jbe
imul
cmp
push
cmp
mov
or
test
je
push
add
inc
mov
ss
mov
mov
imul
dec
js
stos
pop
fdivrl
test
repz
mov
sbb
jg
xchg
pop
out
inc
arpl
add
xor
fiadds
fnsave
cmc
mov
inc
gs
orl
adcb
pop
ret
xchg
fmuls
jnp
xor
sbb
cwtl
mov
je
cmp
pushf
fnstcw
mov
cmp
add
js
pop
pop
sahf
movsl
repz
leave
add
and
cs
and
insl
pop
sbb
lds
mov
add
pop
arpl
mov
add
pop
mov
xchg
shrb
stos
pop
loop
out
xchg
mov
in
mov
in
out
outsb
movsb
jge
insl
pop
out
push
xor
lret
jmp
push
xor
inc
cmp
xchg
mov
repz
jp
push
fisubrs
push
addl
inc
loop
lods
ljmp
add
xchg
sbb
jl
xchg
inc
es
xor
mov
dec
scas
mov
push
fbstp
xchg
or
bound
jl
hlt
pop
mov
adc
inc
shll
cli
push
int
shrb
jo
cmp
or
sbb
push
push
push
sahf
inc
dec
jecxz
jecxz
pushf
sarb
les
popf
enter
std
hlt
dec
cmp
jl
iret
push
in
fimull
mov
pop
add
les
jnp
repz
or
lret
cs
in
iret
pop
mov
testb
or
shll
js
jne
xor
setnp
rorl
jbe
iret
int3
mov
lea
movsb
xchg
fistps
mov
rcll
unpckhps
aam
and
jne
inc
icebp
in
pop
lret
xor
repnz
inc
push
mov
cmpsl
cmp
test
outsb
sbb
push
inc
fcmovbe
loop
call
xchg
dec
int3
jl
pop
lcall
dec
pop
or
sbb
fwait
insb
mov
push
cltd
imulb
mov
ret
and
gs
jle
xchg
push
ds
out
inc
mov
shlb
mov
je
mov
enter
pop
mov
push
lods
dec
mov
clc
push
movsl
jecxz
lods
int
jp
rcrb
mov
jno
pop
xlat
dec
nop
adc
xor
test
mov
jae
popa
ficomps
jo
mov
bound
adc
adc
xchg
cli
cmp
in
cmp
pop
dec
cmp
dec
shlb
pop
sbbl
das
push
push
pop
in
dec
mov
cmp
icebp
test
push
adc
scas
jecxz
pop
jno
add
dec
mov
decl
dec
cmpsb
lcall
or
push
data16
cmp
mov
sbb
outsl
pop
popa
cmp
dec
inc
jno
or
adc
mov
std
and
pop
xchg
push
sub
scas
stc
addr16
adcl
inc
cmc
mov
mov
mov
xchg
adc
push
stos
andl
mov
bound
xor
xchg
leave
adc
inc
incl
push
mov
and
enter
ljmp
xlat
xor
movsl
mov
subl
loop
test
pop
mov
std
test
fisttps
sub
mov
push
inc
jge
rcrl
cli
dec
mov
or
xchg
mov
scas
jnp
aas
jnp
ds
notl
dec
push
lods
or
clc
test
mov
in
mov
fistpll
movsb
nop
push
adc
xchg
test
dec
adc
pop
loope
jnp
pop
lock
insl
or
push
cmp
mov
or
repnz
sbb
sbb
loope
nop
inc
inc
dec
sub
mov
or
std
cli
enter
rcrb
test
xchg
dec
xchg
adc
int
int3
rclb
mov
mov
in
les
xorb
cli
in
mov
outsl
cmp
daa
out
orb
addr16
aaa
test
pop
jecxz
xchg
and
loop
in
in
xor
inc
lahf
inc
sub
mov
adc
lea
add
and
mov
out
repz
rolb
push
pop
and
ja
nop
seta
mov
mov
lretw
pop
jbe
add
jl
data16
jle
ja
shlb
cmpsl
lahf
xlat
cli
adc
adc
lods
sub
xchg
lods
mov
shlb
addr16
test
ds
jbe
jno
test
and
sahf
dec
pop
adc
dec
xor
rorl
cltd
stos
add
in
sub
js
jg
mov
push
pop
xchg
insl
sbb
mov
dec
imul
ficompl
sbb
sub
cmpsb
cmpsl
std
inc
adc
cld
pop
mov
pushf
rcll
mov
dec
or
mov
rorl
push
pop
xor
jae
int3
ljmp
stos
imul
xor
push
mov
sub
mov
jl
pop
inc
add
push
mov
cld
push
xchg
andl
mov
outsb
fcmovnb
inc
enter
mov
dec
sbb
scas
test
fdivl
or
fmul
pop
dec
push
repnz
xor
loope
cmp
ret
adc
mov
in
cmpsl
push
orl
int3
test
cmp
mov
jbe
pop
inc
je
pop
xchg
scas
cwtl
loopne
mov
popf
cmpsl
mov
outsl
lret
and
pop
push
mov
stos
ds
adc
jmp
mov
hlt
bound
jge
lds
lods
cld
mov
inc
outsl
sub
dec
lods
mov
add
loopne
xchg
pop
cmc
test
movsl
inc
ret
cmc
push
ror
jno
mov
dec
adc
fsts
cmp
icebp
push
pushf
jbe
add
shrl
mov
sti
aad
push
push
sub
and
mov
imul
inc
mov
daa
ja
jne
pushf
shll
lret
xlat
cmp
inc
sbb
cmp
cmpsb
mov
repnz
sub
shlb
adc
xor
repz
stos
mov
arpl
fwait
out
cld
mov
sbb
inc
xor
mov
xchg
push
lea
mov
inc
adc
ljmp
fstps
mov
cmp
das
push
je
pop
push
out
dec
fistps
in
jmp
jnp
inc
or
sbb
mov
jge
xchg
mov
dec
cwtl
xchg
jae
aas
mov
das
cs
scas
mov
push
sub
scas
fsubrl
shlb
dec
cli
add
lods
loopne
sbb
push
sbb
sub
jne
inc
iret
sub
cmp
daa
fstl
out
cmp
adc
sbb
loope
lret
pop
sub
das
popa
push
repnz
sbb
push
stos
dec
cmp
push
fistl
push
inc
aam
mov
rcll
mov
lds
pop
jg
sub
out
clc
lahf
cmp
pop
xchg
in
data16
popa
stos
into
xor
lods
scas
lea
aam
hlt
push
ret
push
jo
into
das
insb
pop
ss
sbb
mov
lret
and
shrl
mulb
mov
xor
aas
cmp
jnp
mov
jg
mov
adc
inc
sub
idivl
mov
out
cmc
adc
mov
adc
mov
or
or
popf
mov
testb
stos
pop
pusha
ja
mov
lods
mov
cmp
sbb
xchg
popf
movb
out
push
mov
cmp
fsubrl
lock
sbb
sbb
sbb
mov
out
adc
insl
add
addl
push
dec
fldcw
out
scas
gs
or
inc
dec
fisttps
out
xorl
add
cmp
jo
rcll
mov
xchg
pop
push
dec
cli
stos
fidivrs
imul
jne
rorl
fldcw
cmp
lret
xchg
inc
ljmp
inc
dec
in
inc
mov
imulb
aas
daa
add
dec
mov
subl
inc
fldl
ds
pop
and
movnti
sub
sub
jmp
mov
sbb
test
inc
les
mov
cmp
add
bound
dec
mov
xchg
inc
sbb
es
mov
inc
jno
cmpsl
lea
inc
orb
mov
dec
imulb
test
mov
or
xor
std
cmpsb
mov
outsb
out
xchg
int3
add
pop
push
decb
add
sahf
dec
mov
push
les
add
lods
fdivr
inc
mov
shlb
push
mov
inc
and
pop
and
clc
loop
call
sub
jg
dec
popa
dec
adc
dec
dec
loop
xchg
or
mov
fists
cmp
insb
scas
inc
shrl
lea
mov
loope
adc
xchg
mov
mov
pop
stos
ds
rcrl
cmp
rcrl
lock
out
test
jg
mov
or
pop
mov
jb
stc
mov
scas
sbb
mov
and
xchg
jne
pusha
aas
movsl
sarb
loope
int3
lock
push
les
scas
dec
dec
add
leave
push
push
div
popf
lahf
cmp
mov
cltd
pop
or
xchg
movsl
lods
or
leave
movsb
and
nop
cltd
jbe
out
sbb
pushf
test
fs
mov
cld
push
iret
iret
adc
andl
mov
lea
ja
push
adc
int3
popa
pop
mov
or
sbb
aaa
stos
sbb
int3
xor
test
inc
faddl
imulb
pop
xor
push
lea
pop
ret
xor
xchg
fisubrl
mov
mov
mov
aas
call
fnstsw
adc
adc
jge
jge
jne
xchg
xor
movsl
jecxz
push
loope
push
push
repnz
ss
ret
scas
fnstcw
clc
rolb
cmp
adc
loopne
push
mov
and
lods
test
xchg
dec
and
in
sub
jl
clc
add
mov
mov
dec
mov
jbe
mov
dec
inc
inc
add
and
pop
aaa
and
aam
xor
jge
push
mov
insb
popf
push
fnstenv
inc
or
add
repnz
jne
pop
enter
xchg
sub
xor
cmp
fs
js
stos
test
fnstcw
jo
or
aad
out
cmp
jecxz
arpl
jns
cmc
adc
xor
jns
sbb
repnz
shr
negl
sub
jbe
fidivl
xchg
test
xor
movsb
scas
push
imul
stos
add
out
xchg
fwait
adc
inc
add
sub
mov
pop
into
xor
add
jbe
insl
sub
add
jne
adc
push
in
mov
int3
mov
mov
pop
insb
outsl
or
cmp
call
and
adc
sbb
and
sbb
test
inc
addr16
fistpl
sbb
cmpsl
fwait
push
ret
enter
sub
frstor
dec
lods
scas
test
movsl
sahf
out
push
ds
scas
repz
inc
push
lcall
push
js
subb
ror
push
mov
jo
pop
sub
mov
in
adc
mov
xchg
clc
push
mov
fdivrl
adc
add
imul
lret
mov
inc
push
arpl
and
jmp
std
dec
sti
push
mov
xchg
jbe
mov
dec
mov
rclb
clc
and
xchg
mov
in
inc
stos
sbb
stos
loope
push
pop
mov
cmpsl
and
outsb
add
pop
mov
or
adc
lret
pushf
push
addr16
mov
sbb
dec
pop
rol
aam
mov
mov
push
push
imul
out
dec
push
and
and
and
ljmp
push
imul
fmull
sub
test
mov
mov
inc
sub
ljmp
adc
sahf
jl
cmp
aam
rorl
add
sub
push
mov
loop
inc
dec
xor
aam
mov
push
cmp
or
push
mov
movl
loopne
add
cmp
mov
sub
push
movsl
mov
lahf
popa
hlt
es
adc
adc
jg
aas
xchg
mov
xcrypt-ecb
cmpsl
or
push
cmpsb
jb
xchg
push
fcoms
push
shr
aas
jle
fdivrs
clc
fsubs
add
xchg
xor
xor
sbb
out
jb
pop
cltd
pusha
push
push
sbb
push
fld
in
les
lahf
push
mov
add
jae
lret
movsb
ret
in
mov
bnd
mov
ja
sbb
js
in
nop
orl
mov
ja
mov
add
fsub
mov
dec
mov
dec
or
mov
rolb
sbb
xchg
mov
xor
or
test
cmp
mov
cmpsl
and
pop
jno
loop
inc
mov
call
push
out
mov
std
pcmpgtd
jns
test
icebp
jle
sub
aas
jmp
adc
pop
ja
sarb
xchg
mov
mov
std
pop
jecxz
jno
or
call
popf
cltd
dec
dec
test
sub
mov
aas
loopne
sbb
pusha
add
dec
neg
xchg
mov
jno
and
adc
ret
or
imul
push
data16
push
pop
nop
pop
inc
mov
fbstp
cld
mov
dec
imul
fsubs
xchg
subb
orl
clc
shl
stos
popf
push
push
das
pop
push
stos
jmp
call
and
scas
and
int3
xor
je
addr16
sub
icebp
add
arpl
push
adc
test
sub
or
filds
out
xchg
fwait
jl
clc
and
dec
cmp
mov
mov
imul
jge
dec
push
jae
add
add
int
and
lcall
push
sbb
pusha
xlat
lea
jmp
mov
cmc
and
movsl
lods
ja
aaa
dec
mov
pop
push
and
lods
lret
cmp
add
mov
adc
sub
je
jae
insb
pop
cld
pop
ja
loop
dec
add
push
xchg
xchg
push
mov
sti
in
xchg
inc
sbb
shlb
dec
lods
inc
mov
rorb
and
mov
add
mov
fcmove
push
sarl
iret
sbb
inc
lahf
test
stos
mov
mov
add
mov
ss
mov
mov
sub
pop
jae
js
inc
sbb
jne
adc
mov
cmp
mov
push
push
jg
sub
sahf
ret
cmp
psubq
pop
jge
jle
push
xchg
fldl
jmp
xchg
sahf
cmpl
mov
sbb
mov
push
push
push
jbe
nop
xor
sti
pusha
jle
shrb
js
je
dec
stos
and
sub
notl
push
pop
mul
jne
cmp
call
popf
jecxz
jb
jo
repnz
or
idivb
and
inc
sub
je
sub
loope
xor
push
lcall
jb
rcl
mov
dec
cmc
sarl
sbb
mov
repnz
jge
jmp
sti
push
out
movsl
push
js
add
shrb
adc
pop
jp
dec
out
lods
inc
mov
jae
cmc
mov
lds
idiv
and
xor
incl
push
cli
pop
push
jge
notb
test
mov
fwait
pop
cmp
pop
ja
aaa
mov
jo
jle
jno
mov
gs
push
popa
sbb
cmp
loopne
hlt
adc
in
jecxz
leave
mov
mov
lcall
repnz
sahf
inc
sub
add
pop
je
jp
xor
gs
test
push
xlat
cmp
popf
xlat
mov
dec
dec
mov
sarb
sub
push
rolb
dec
fsubl
and
repnz
cmp
xchg
adc
mov
mov
loopne
inc
outsb
mov
leave
stos
out
mov
loope
mov
inc
mov
lods
fistps
mov
fcmovnb
mov
clc
rorb
test
fmuls
out
ret
sar
scas
sbb
popf
dec
cmc
daa
jbe
mov
popf
sbb
push
loopne
pusha
mov
or
insl
outsb
push
into
orl
stos
xorb
data16
aam
out
jecxz
pushf
jb
sar
dec
dec
push
xchg
lahf
insl
push
stos
fldl
xchg
cmpsb
pop
inc
mov
xorb
cwtl
adc
rep
xabort
jae
mov
xchg
add
mov
fwait
xor
xchg
adc
mov
dec
mov
jle
ret
or
mov
lret
icebp
add
jp
jno
sti
mov
xor
push
dec
ret
cli
push
add
ror
adc
shlb
jle
push
sbb
push
cmp
imul
mov
popf
imul
pop
lcall
or
lret
dec
in
lea
arpl
mov
popa
mov
daa
dec
lods
mov
mov
xchg
aaa
xor
sub
mov
and
and
sbb
or
sbb
jp
xor
dec
loope
bound
add
add
push
jb
jmp
ror
fldcw
mov
inc
pusha
cltd
fistps
inc
mov
sub
mov
jmp
andl
sub
je
loope
ret
adcb
fwait
lcall
xor
jne
or
push
cmp
jae
xor
dec
dec
sub
and
add
call
cmpl
ss
or
idivb
inc
jecxz
rol
inc
xchg
cld
outsb
or
pop
xchg
int
pop
out
xor
add
inc
cli
mov
mov
sbb
fnsave
ret
movsl
sti
movl
add
pop
cmpsb
mov
push
pop
cmp
stos
sub
jb
jle
daa
mov
dec
leave
addr16
xor
jge
jmp
xchg
dec
int
popl
aaa
mov
jne
jo
outsb
jge
mov
lock
pusha
sbb
add
xlat
sub
sarl
mov
and
cli
out
lcall
xchg
arpl
lods
clc
mov
push
jecxz
inc
inc
mov
add
call
sbb
push
inc
test
mov
lahf
adc
and
mov
mov
push
ljmp
js
jae
push
inc
pushf
arpl
test
insl
je
notb
stos
test
push
xchg
adc
inc
stos
xchg
shll
inc
jnp
pop
fldt
push
sahf
mov
push
add
xchg
add
out
xchg
ret
xor
cltd
je
cmp
jbe
fldcw
add
cmc
or
lret
cwtl
inc
ret
mov
out
fists
fldenv
movsl
adc
sbb
nop
imull
loopne
push
push
cmp
adc
gs
adc
call
xchg
inc
sub
push
pop
out
pusha
lahf
mov
ljmp
js
insl
xor
and
xchg
idiv
xchg
jge
xchg
popa
adc
and
jbe
and
lret
popf
mov
lret
xor
outsl
scas
mov
out
fxch
cltd
aaa
mov
adc
les
testl
cmp
rolb
test
fldenv
xchg
jbe
aam
push
mov
or
lods
jle
loopne
add
test
popa
stos
push
push
shl
mov
pop
mov
in
out
lea
cwtl
sub
das
push
mov
cmp
jne
in
dec
in
lcall
les
dec
movsl
fists
stc
cmp
mov
popf
cld
xor
shlb
mov
negl
jmp
lahf
movsl
inc
push
mov
and
addb
adc
cmp
fstpl
imul
sahf
sub
pop
lcall
adc
ljmp
mov
movsb
hlt
lret
inc
andl
push
dec
jns
fiaddl
and
jo
pop
pop
in
movsb
shl
lods
inc
enter
jb
ss
fstpl
mov
cmpsl
add
pusha
fwait
inc
mov
mov
lds
adc
add
add
addr16
cmp
in
in
inc
inc
ret
iret
pop
stc
sti
or
xor
xor
mov
inc
mov
in
in
in
ljmp
jne
dec
pop
xor
xchg
mov
lds
cltd
popf
pop
pop
sub
movsb
cmp
pusha
leave
jl
push
pusha
and
cli
aad
fwait
dec
seta
mov
pop
inc
xchg
or
and
mov
adc
insl
jb
jg
mov
inc
pushf
imul
mov
push
mov
aaa
dec
test
jmp
adc
jmp
adc
les
shll
outsl
in
pop
lret
jae
mov
outsb
pop
add
pushf
pop
daa
orb
and
into
xor
xchg
es
into
mov
lret
dec
fdivs
movsb
int
dec
outsl
rolb
push
push
mov
sub
jo
mov
sub
out
mov
jno
loop
mov
mov
ds
ja
enter
cmp
insb
pop
mov
xor
lds
add
sub
incb
add
cmp
dec
xor
add
lods
lret
adc
push
mov
xchg
mov
lahf
lea
rorb
adc
push
lcall
sti
pop
or
punpckhbw
ret
xlat
xchg
dec
xor
mov
xor
push
lods
movsb
sbb
lods
hlt
imul
scas
gs
nop
inc
lock
fisubrs
in
jb
cmp
ret
lcall
sbbb
push
inc
mov
jbe
xor
cld
sbb
ret
imul
cli
add
mov
movsl
lcall
mov
push
push
add
faddp
xor
fsubs
adc
adc
lds
push
popa
push
popf
stc
fisubrs
pop
in
mov
leave
push
push
inc
aaa
es
stc
movsl
sub
lcall
xchg
jo
ret
add
mov
out
std
cmp
test
xor
inc
mov
mov
ja
cltd
mov
out
leave
aas
push
out
mov
push
pop
aas
or
movsb
andb
daa
psubsw
sar
jbe
adc
inc
idivl
mov
push
add
pop
lea
mov
and
jo
ljmp
out
mov
inc
cmp
ss
cwtl
inc
mov
js
int3
ret
ss
add
inc
pop
cmp
out
xchg
dec
test
ss
in
or
in
xor
or
fdivl
int3
cld
scas
lock
ficoml
cmp
and
int
ret
sub
sbb
pop
jb
adc
les
cmp
xorl
and
adc
adc
sarb
push
out
push
inc
sarb
xchg
jl
xchg
aas
add
and
addr16
xchg
nop
pop
dec
inc
arpl
in
xor
mov
add
push
push
mov
test
aas
adc
cld
inc
dec
std
xor
andl
xchg
idivl
and
mov
and
outsl
out
lahf
inc
in
jns
xor
mov
or
pop
jns
ljmp
xor
mov
lock
fdivs
imul
in
sub
lahf
inc
repz
in
in
lret
push
test
inc
dec
insl
cld
cmpsl
int3
inc
imul
shr
pop
addr16
adc
pop
mov
sub
aad
jae
movl
push
or
movsb
mov
aad
mov
dec
out
mov
insl
packsswb
mov
and
or
sub
dec
fnop
sbb
out
rolb
sbb
push
out
and
pop
mov
out
scas
mov
add
mov
jl
push
fcmovnb
dec
inc
scas
pop
je
fadds
mov
or
and
pushf
xchg
push
jb
mov
lock
lahf
aad
mov
movsl
push
shll
mov
test
xchg
hlt
push
adc
and
das
inc
cwtl
adc
mov
adc
and
cs
fnsetpm(287
sbb
scas
sub
xor
or
out
cmpsl
push
lea
mov
stos
mov
fldcw
mov
sub
ud2
sbb
xchg
adc
sbb
xchg
mov
scas
sub
jo
cmp
iret
cmp
sub
std
sbb
and
mov
stos
adc
mov
bound
das
int3
icebp
pop
jo
mov
jb
adc
addr16
xchg
out
les
xor
add
and
ss
test
in
clc
dec
cmp
xchg
push
xor
jg,pt
jg
pop
cmpsb
lret
out
cwtl
in
inc
jnp
shll
inc
mov
bound
xchg
cmpsb
cmp
aaa
int3
mov
popa
jmp
sub
pop
cld
dec
or
mov
and
or
or
jge
aaa
jo
addr16
lock
test
add
push
out
pop
je
mov
or
dec
test
sbb
mov
or
xlat
adc
fnstenv
sub
sbb
dec
add
into
lret
sbb
add
jmp
in
pop
rorl
adc
mov
mov
push
jg
push
idiv
sbb
inc
inc
add
rolb
cmp
rorb
jns
lods
int
repz
or
push
adcl
or
jp
lret
dec
les
subl
jecxz
pop
mov
mov
mov
sub
shlb
mov
sarl
xchg
iret
jle
mov
leave
cltd
xchg
hlt
stc
or
push
jecxz
daa
loopne
fsubrp
stos
jb
cmp
ljmp
outsl
and
jo
movsb
inc
in
scas
cmp
das
shll
inc
aaa
imul
fisubrl
outsb
pushf
jmp
cltd
bnd
add
or
roll
or
jae
lock
mov
pop
hlt
les
jmp
fimull
and
mov
out
dec
bswap
test
xor
sti
inc
dec
xchg
push
dec
jecxz
or
xor
mov
pop
es
cmp
imul
test
clc
inc
xchg
add
dec
movsl
and
stos
mov
data16
fisubl
sub
in
adc
adc
push
or
into
mov
cmp
jmp
mov
mov
mov
clc
push
adc
gs
ds
pop
mov
leave
mov
mov
mov
sahf
les
mov
lods
and
inc
or
pop
lret
or
push
shl
pop
push
movsl
lods
testl
addr16
sbb
je
jp
lock
leave
insl
mov
pop
cld
ds
add
inc
mov
adcl
xchg
pop
out
vmread
idivb
pop
jecxz
insb
adcl
sub
fbld
nop
push
divl
pop
enter
sub
xor
bound
dec
xchg
cmpsl
in
or
sti
mov
cld
xor
xchg
rcl
or
outsb
add
fdivrp
int3
cmp
mov
or
and
outsl
mov
cmp
repnz
inc
or
jmp
into
sbbl
mov
ds
jge
add
pop
mov
aas
sbb
cmc
hlt
cltd
rcr
insb
notl
into
jns
ret
stos
inc
mov
pop
in
ret
rcl
mov
lret
jae
cmp
loop
in
push
ja
sub
pop
mov
xchg
adc
jne
aam
outsb
int
jno
clc
jne
loop
add
imul
movsl
out
leave
jns
lock
aam
inc
pop
dec
mov
sub
mov
add
cmp
dec
rclb
lds
push
push
and
cmpsl
lods
int
jns
inc
out
in
or
mov
sub
stos
sahf
scas
push
and
popa
lret
or
movsb
fisttps
or
cli
push
sar
inc
js
fisttpl
ret
dec
sub
or
scas
xchg
insl
psadbw
es
in
and
repz
inc
pop
dec
popf
mov
jo
pusha
repz
in
inc
pushf
data16
scas
sahf
or
adc
or
jo
xlat
test
or
loope
sahf
inc
pop
push
xchg
in
arpl
or
inc
test
les
mov
test
lcall
jo
int3
ljmp
mov
mov
pop
jg
rcrb
scas
icebp
mov
push
add
pop
subl
enter
sti
adc
lret
mov
outsb
adc
fdivrs
cmp
inc
out
lods
aas
push
mov
push
cmp
movsb
imul
sbb
out
pop
orb
jge
aam
sbb
pop
add
jb
test
popl
mov
xor
sub
mov
jge
pop
and
push
dec
shrl
cmp
mov
scas
sbb
or
scas
ret
and
jbe
jbe
outsl
arpl
mov
in
pop
outsl
xor
sbb
divl
shll
popf
dec
cltd
lahf
mov
cli
and
mov
mov
les
ja
mov
ret
xor
sub
sbb
push
pop
stos
mov
mov
aas
add
imul
std
pop
jmp
das
xchg
std
popa
mov
pop
pop
xchg
xlat
dec
fsubs
sub
jae
out
mov
gs
push
adc
cmp
insl
cltd
fwait
jne
dec
xorb
push
test
and
inc
stc
aam
stos
shll
jne
popf
xchg
aaa
pop
js
nop
dec
or
rcl
pop
mov
push
pop
jae
dec
andb
inc
in
pop
imulb
in
adc
sbb
lods
repnz
push
add
dec
inc
ret
popa
push
out
sub
ds
pop
cltd
mov
push
push
mov
xor
cmpsb
cwtl
push
shrl
cmp
mov
rcll
jae
insb
nop
aas
sbb
sub
pushf
inc
jecxz
push
scas
andl
jbe
popa
jns
outsb
mov
mov
sbb
push
push
loop
mov
mov
cmp
and
sub
pop
pop
push
outsl
mov
cli
sti
frstor
jnp
push
std
cwtl
jl
xlat
in
jg
xchg
inc
cmp
pop
lds
scas
mov
out
jnp
xor
mov
fnsave
out
lret
mov
or
sahf
dec
mov
mov
scas
and
fisttpll
fcomip
and
jns
pop
or
pop
xchg
pop
lock
mov
adc
sar
jnp
and
ja
mov
and
cwtl
lods
aam
sub
adc
xchg
js
sbb
aam
lahf
pop
jo
sub
mov
mov
xor
mov
xchg
mull
shll
mov
mov
jl
jmp
push
int3
ljmp
mov
xlat
arpl
sub
mov
lea
mov
adc
jp,pt
outsb
scas
rorb
xchg
push
insl
jnp
imul
sub
andb
xlat
insb
jo
out
sbb
pop
insb
jne
inc
testb
dec
repnz
incl
je
divl
loope
xchg
stos
cli
adc
shll
repz
mov
ja
dec
push
dec
lcall
sbb
call
shr
or
cmpsb
sub
popf
mov
xchg
adc
mov
xlat
jg
sbb
jmp
dec
push
xor
dec
or
sub
aas
aaa
add
lahf
js
push
jb,pt
daa
addr16
mov
inc
adc
push
dec
enter
mov
in
pop
stc
in
or
mov
adc
vmovdqu64
shll
mov
rcll
clc
andl
mov
jmp
cmpsl
or
xor
jle
xor
push
jge
mov
fstps
mov
push
adc
aas
and
mov
cmc
jge
xorb
and
fwait
sbb
add
addr16
addr16
pop
sarb
hlt
xor
jns
jne
inc
pusha
xor
shrl
mov
hlt
in
divl
mov
sahf
adc
ss
fstl
jl
push
outsb
scas
shrl
or
movsb
push
push
dec
lret
add
imul
dec
add
ret
insl
and
dec
or
lea
sbb
cmp
in
loop
mov
bound
jns
ss
out
lahf
repnz
cmc
sbb
pusha
dec
xchg
out
jmp
jp
add
add
ret
ds
xor
test
out
jnp
and
push
mov
jae
cs
fmuls
mov
ret
mov
aam
mov
sbbb
pop
lret
lods
lods
lock
outsl
xchg
iret
out
jp
stos
mov
add
and
and
sub
out
xchg
pop
pop
mov
adc
insl
icebp
xchg
cmp
fld
jae
test
fdivrs
push
cmp
xor
aam
push
sub
scas
mov
loope
and
add
and
lcall
or
push
dec
aam
dec
test
mov
push
mov
xchg
adc
xchg
push
mov
mov
cmp
in
fnstsw
jo
jl
fwait
sbb
pop
std
or
pop
sub
cld
and
mov
outsl
lds
movsl
pusha
ljmp
subb
jns
jae
inc
dec
sti
fisttps
mov
or
inc
mov
popf
cwtl
scas
sub
ficompl
int
cld
lret
mov
adc
mov
icebp
sbb
fsubr
ds
dec
mov
in
sahf
jg
cmp
add
cs
mov
xchg
leave
cmp
insb
mov
xchg
mov
pop
or
outsl
xchg
inc
jecxz
insl
mov
bound
fistps
out
pushf
fisttpl
xor
fidivl
push
clc
push
stc
sbb
ss
adcl
or
scas
mov
test
sub
push
mov
add
mov
or
aam
scas
xchg
jle
and
cmp
and
push
push
cld
dec
cmp
scas
fcompl
lahf
jge
jb
push
mov
mov
clc
adc
stos
pop
ss
sbb
cmpsl
cmpsb
adc
sub
cmp
push
dec
or
out
out
inc
fidivs
inc
push
aas
cli
xor
jbe
jae
ret
adc
dec
loopne
iret
adc
fists
push
xor
fdivs
inc
enter
adc
xorl
or
mov
ss
leave
cmc
sahf
mov
out
add
int3
xchg
subl
add
xchg
xlat
adc
mov
mov
test
adc
push
test
insl
xchg
pop
xor
jp
lahf
push
outsl
or
or
imul
cli
lret
daa
push
xor
xchg
lret
jl
cmp
les
ret
jmp
push
fst
pop
sahf
add
int3
cli
dec
arpl
jnp
ja
or
std
push
sbb
sub
lahf
cmp
aad
xchg
insl
push
push
and
sbb
mov
test
push
xlat
sti
orl
cmp
cltd
icebp
sbb
pop
mov
pop
ljmp
add
and
leave
mov
pop
mov
arpl
jl
sub
lds
aaa
icebp
add
pop
pop
inc
mov
sub
pop
sub
xor
sbb
enter
movsl
popf
test
ja
imul
lahf
pop
scas
mov
push
or
pop
std
inc
xlat
add
xor
mov
nop
sti
iret
jo
fwait
adc
iret
psubb
cmpsb
add
cmpsb
out
rolb
lret
cwtl
ret
pop
xlat
mov
xchg
out
add
push
jno
jmp
clc
leave
fldl
sub
push
popa
int3
pop
movsb
and
clc
pusha
push
dec
xor
xor
push
repnz
dec
orl
jecxz
out
std
jmp
nop
xchg
pop
pop
and
add
pop
lods
jecxz
hlt
adc
mov
scas
adc
sahf
add
cmp
jmp
cmc
inc
enter
sbb
or
jnp
push
movsb
fdivp
dec
rcrb
leave
mov
mov
push
mov
sarb
mov
movsl
fst
lock
push
mov
mov
cmpsl
test
lods
dec
testb
jle
xor
cmp
movsl
leave
jnp
push
and
cmpl
jno
pop
add
mov
sbb
aam
or
cmp
lds
movsl
pop
push
orl
inc
and
mov
cmpsb
imul
adcb
je
xchg
hlt
push
sub
add
jns
imul
add
inc
pop
cmpsl
and
jns
fiadds
data16
fistl
shlb
out
popf
cs
xchg
outsb
mov
or
fcom
mov
rcl
mov
jl
inc
inc
and
or
or
in
mov
stos
hlt
xchg
test
loop
push
sub
or
int3
lret
loope
and
push
icebp
dec
into
imul
arpl
jo
jmp
stos
sub
js
loopne
mov
adc
mov
pop
fmuls
rcll
add
std
test
inc
add
adc
lods
repnz
adc
mov
movsl
or
and
push
pushf
xchg
and
jbe
mov
push
in
xchg
cmp
imul
and
ficomps
ds
pop
sbb
jae
aam
dec
or
stc
push
jnp
cs
hlt
inc
scas
sahf
outsl
push
sbb
xchg
cmpsb
sub
mov
lock
scas
aad
sub
mov
jno
dec
sbb
xchg
shrl
adc
inc
cmpsl
jo
mov
xchg
jns
in
addr16
scas
jns
add
push
add
jle
and
ret
push
lcall
rclb
xchg
add
scas
stos
aad
test
push
jmp
mov
cltd
movsl
adc
adc
pop
lock
fdiv
xorb
inc
cmp
scas
add
push
add
jg
andl
cmc
or
data16
scas
lret
cmp
fisubl
dec
arpl
mov
ds
imull
add
les
mov
adc
cmp
add
stos
push
fidivrl
fcoml
adc
test
ret
and
cmc
loopne
inc
mov
mov
rcl
pop
push
mov
ror
leave
sub
jge
sub
jmp
sar
push
pop
cmp
jno
and
and
xor
push
xchg
rorl
stos
int
js
dec
mov
cli
lods
sbb
in
subb
sahf
inc
mov
bound
cli
push
ret
icebp
mov
mov
sub
pop
inc
dec
out
pop
cld
dec
cmp
andl
push
xchg
jecxz
lret
xor
les
ja
jnp
mov
push
cs
mov
lret
inc
ret
cmpl
xchg
sbb
jbe
push
adc
sbb
scas
adc
mov
pavgw
cmpsl
rorl
ja
inc
xor
cmp
ja
sub
fwait
push
xchg
mov
dec
std
jno
push
push
push
cmp
sbb
cwtl
imul
mov
mov
lods
sbb
mov
sti
xlat
fisubs
mov
xor
cli
jp
scas
inc
push
xchg
push
mov
cmp
shrl
mov
enter
push
je
jns
sti
outsb
push
std
out
pop
push
pop
leave
mov
inc
push
dec
push
flds
aam
popa
ret
fs
inc
push
imul
lea
add
out
mov
push
or
xchg
add
fnstsw
add
dec
cmp
mov
lret
lcall
adc
jbe
fimull
push
repnz
mov
xor
xchg
testb
add
jmp
mov
jns
sbb
inc
ja
movsb
dec
jo
and
adc
jl
jne
out
pop
pop
push
lds
imul
xchg
outsl
xchg
mov
pop
outsl
outsl
xor
inc
repz
xchg
sbb
mov
jecxz
adc
das
imul
in
arpl
cld
jb
sbb
adc
cltd
lock
test
inc
mov
dec
inc
faddl
test
dec
cmp
js
jg
push
xor
test
push
jbe
sub
arpl
jb
fildl
sbb
push
cmpsl
popa
lock
in
push
and
and
mov
scas
gs
mov
xchg
sarb
jb
dec
nop
aaa
and
cmc
pop
dec
cmp
mov
stos
or
stos
mov
ror
jp
push
int
adc
fcoml
mov
xchg
fwait
dec
les
pop
in
nop
shr
cwtl
push
mov
cltd
out
int3
jmp
dec
bound
imul
pop
jno
stos
pop
mov
xchg
pop
mov
xor
popf
shll
stos
ja
sub
cmpsb
out
push
sub
int3
cltd
pop
insb
divb
divl
subb
jbe
insb
in
xchg
rclb
in
stos
and
and
sbbl
mov
pop
andl
cmpsl
arpl
xchg
or
xor
cmp
loopne
test
fidivrs
ret
sbb
or
fwait
mov
and
popf
mov
cmp
sbb
aaa
xchg
jbe
or
or
push
imulb
rcrl
in
adc
int3
leave
lock
aaa
imul
mov
mov
jge
and
pop
jo
dec
fwait
orb
inc
insl
jl
notb
push
cmp
xchg
das
rol
ds
inc
sub
sub
enter
pop
mov
xor
adc
inc
add
sub
nop
divb
xchg
mov
es
xorl
mov
das
ficoml
pop
inc
xchg
pushf
out
adc
mov
ljmp
sbb
jmp
cs
add
pop
push
pop
mov
ljmp
stc
add
or
and
rclb
int3
test
lods
push
xlat
clc
xorl
fwait
push
enter
in
inc
mov
in
sbb
stos
xchg
cld
adc
sbb
cltd
inc
inc
rcrb
imulb
sub
push
or
add
sub
int
divb
adc
sub
test
sub
ss
aas
adc
xchg
pop
repz
add
cmp
int
adc
test
out
push
sbb
popa
loop
cmp
push
mov
int
push
add
lcall
mov
fcomps
jb
mov
ljmp
pop
cmpsb
shld
loopne
pop
mov
mov
cmpl
push
out
test
mov
ja
cli
jge
sbb
int3
mov
mov
repz
rol
mov
data16
mov
setns
mov
dec
cmp
loopne
lcall
jns
lods
jecxz
es
pop
push
mov
imul
cmpsl
sub
xor
test
stc
test
int3
dec
xchg
hlt
mov
xor
push
xor
or
mov
push
cli
push
pop
lcall
cmp
mov
pusha
cmpsl
mov
fcom
mov
aas
dec
and
mov
cmp
in
out
sbb
ss
xlat
adc
mov
xor
jae
enter
mov
push
into
out
lahf
lret
push
mov
out
lcall
stos
push
xor
imul
push
jge
ret
push
sbb
out
test
xchg
dec
jg
dec
scas
xchg
cmp
aam
mov
mov
pop
xor
lret
xor
dec
dec
cmp
imul
xchg
rolb
int3
xorb
cltd
add
lcall
movsb
inc
push
mov
aas
inc
iret
push
movsb
lods
or
dec
or
bound
cltd
xchg
jbe
mov
hlt
dec
into
mov
xor
rolb
push
jecxz
repz
mov
or
aad
push
cmp
mulb
mov
hlt
pushf
push
sub
mov
popa
ds
and
mov
jp
shrl
in
iret
adc
pop
inc
ret
cmp
jbe
dec
xchg
pop
cmc
add
inc
mov
lahf
push
sub
dec
mov
pushf
movsl
aad
inc
add
mov
inc
lret
cmpb
jo
xor
add
pop
fxch
pushf
xchg
adc
icebp
cmpsl
sbbb
fnstenv
mov
rclb
setne
add
jb
xor
mov
xor
mov
out
pusha
lahf
or
jae
mov
xchg
push
pop
subb
push
adc
and
inc
ds
cld
jno
js
inc
adc
add
test
and
repz
xchg
mov
inc
je
cwtl
push
movsl
xchg
mov
out
cmp
ret
jmp
sub
xor
ret
xor
push
xor
inc
stos
enter
mov
je
mov
pop
leave
stos
mov
iret
stc
repz
in
xor
mov
jge
adc
outsl
aas
addr16
mov
es
gs
rolb
ja
lds
in
fstpl
shlb
out
shr
dec
loope
lods
mov
cmp
adc
loope
in
sbbl
dec
inc
mov
inc
testl
dec
arpl
and
mov
and
push
jp
push
lahf
shrb
mov
sbb
insl
xchg
cmp
mov
dec
rol
sub
fiaddl
pop
pusha
shrl
jnp
cmc
push
insl
sbb
xor
dec
xlat
xlat
lds
ljmp
in
jl
mov
or
loop
sub
mov
dec
xor
mov
xor
pop
add
data16
jle
xor
push
lret
jle
pmuludq
jns
lret
stos
int
shrl
dec
mov
dec
stos
outsl
js
mov
aam
adc
push
ds
add
or
aaa
xchg
jmp
imul
stos
xor
fcomps
xor
fadds
sarl
pop
adc
mov
mov
pop
in
xchg
sti
rcrl
leave
out
mov
jmp
enter
jmp
stc
jbe
cltd
inc
adc
or
xchg
je
daa
xchg
clc
pop
mov
out
inc
mov
sbb
ss
push
dec
fs
movl
movsb
daa
test
js
cmp
pusha
sbb
clc
cs
jge
and
cltd
out
nop
inc
rorb
stc
dec
mov
xchg
sub
cwtl
ljmp
sbb
movsl
lret
mov
cli
jecxz
in
and
leave
in
or
sub
shlb
add
mov
sbb
cmp
and
daa
xchg
stc
je
mov
aad
push
pushf
fnstenv
dec
push
or
sbb
dec
fstpl
mov
dec
push
add
andl
lcall
loopne
cmp
mov
in
out
in
mov
jb
cmp
insb
adc
xchg
sub
aaa
scas
cmp
cmpsl
mov
mov
test
cmp
loopne
xlat
sub
repnz
adc
es
mov
jecxz
mov
out
out
pop
in
dec
popf
outsb
ficomps
pushf
cmp
xchg
jbe
adc
mov
jg
cmp
dec
and
add
out
sub
loopne
scas
out
fcomp
mov
jecxz
stc
jmp
sbb
xchg
xchg
xchg
fistpll
mov
daa
or
xchg
fst
sbb
stos
add
pop
xchg
fwait
mov
addl
nop
inc
loopne
fwait
xor
cmp
mov
stos
std
or
ret
iret
stc
outsl
stc
inc
out
adc
cmp
jae
adc
xor
cmp
daa
gs
in
cmpsl
fistpl
stc
inc
movsb
out
mov
insb
orl
inc
mov
je
cmp
push
imul
bound
adc
push
and
pushf
or
cmp
clc
cmp
pushl
inc
std
ja
xor
cmpb
repz
rcll
cmp
and
xchg
pop
movsb
stos
lea
mov
out
shrl
or
inc
out
sbb
or
mov
fnstenv
ret
xor
ljmp
xchg
cs
cmp
sahf
dec
xchg
test
loopne
lret
stos
push
jno
pop
pop
jl
inc
jge
adc
nop
cmpsl
inc
jae
pop
shll
mov
ret
jp
cmpsl
sub
stos
cltd
std
mov
loopne
decl
add
out
or
les
adc
stos
push
loopne
enter
push
mov
iret
inc
sbb
mov
sti
out
or
or
pop
sbb
and
pop
cmp
mov
sbb
int3
divb
ljmp
pushf
jmp
ss
repz
push
in
mov
sbb
mov
sub
jmp
pop
clc
pop
in
inc
out
dec
and
mov
cmp
or
xor
xchg
sbbl
sahf
pop
in
ljmp
sar
or
inc
push
mov
testl
imul
scas
pop
or
pop
aad
jnp
sub
xor
cmp
fcomps
test
mov
in
inc
cmp
test
divb
sarl
lret
in
push
lods
dec
test
shll
mov
xor
fisubl
jbe
loopne
cmp
in
cmp
sbb
mov
pop
mov
cmpsl
lret
sarb
inc
mov
arpl
ds
jle
push
ja
add
jl
pop
stc
lods
popf
jne
in
pop
pop
mov
ja
mov
jnp
jo
ljmp
jmp
mov
adc
rcl
or
scas
lods
insl
ficoml
sbb
aaa
or
pop
and
pop
into
in
xchg
cmp
sub
mov
shll
cltd
inc
fadds
leave
fisttpl
add
and
outsb
loopne
les
mov
into
push
stc
push
imull
cmpsb
jle
movsl
push
mov
fcmovne
stos
add
or
fisubrs
fcomps
popf
or
ljmp
and
mov
test
lods
fisttpll
in
add
push
jnp
fisubrs
inc
es
test
in
jmp
xor
stos
sbb
jno
ret
and
pop
xchg
ficoml
nop
nop
aas
repz
aad
mov
cmp
fidivrl
iret
mov
push
cmp
rcl
leave
leave
ret
jno
mov
mov
xchg
sbbl
mov
or
adc
pop
ljmp
shr
add
loopne
andl
movsl
pop
movsl
sub
cmp
xor
cmp
jbe
fbld
and
insl
push
lea
pop
inc
jmp
or
pop
fcompl
icebp
pop
sub
inc
shll
scas
dec
lcall
adc
mov
jge
bound
jne
insb
pushl
fiadds
inc
jno
fisttpll
pop
pop
bound
fdivr
ror
aad
xor
aam
cmc
dec
inc
sbbl
ja
jge
adc
jle
cmp
sub
lea
pop
sbb
mov
jnp
out
jle,pn
dec
popf
inc
insb
test
in
popa
adc
pushf
cli
pop
scas
sbb
jecxz
inc
dec
shrl
int3
sub
imul
fldenv
ja
push
jmp
aad
stos
xor
xchg
xor
lret
scas
pop
ret
pop
mov
leave
mov
ja
scas
arpl
mov
xchg
outsb
rol
jg
lcall
jae
mov
mov
mov
inc
mov
in
push
movl
mov
and
test
mov
dec
into
cmpsl
orl
pop
pop
mov
gs
cmpsl
enter
lret
cmpsl
data16
aaa
cwtl
jecxz
test
cmp
cmp
dec
xor
inc
cmp
jl
les
mov
push
jno
lock
sbb
lock
jmp
iret
mov
test
test
adc
mov
push
fistpl
inc
cwtl
cmc
add
stc
ss
cmpsl
fwait
repz
jp
add
fsubs
dec
xchg
daa
fsts
fucom
icebp
jne
outsl
cli
push
or
xchg
cs
ja
mov
inc
jg
icebp
pop
xor
mov
inc
aas
mov
pusha
out
jmp
pop
in
adc
add
stc
cmp
scas
pushf
mov
in
dec
mov
mov
push
jno
test
std
cs
test
insl
ss
cmp
ret
andl
jmp
push
jge
jmp
xlat
fnstcw
sub
rcrl
icebp
inc
sub
cli
stos
sti
ret
sub
xor
mov
jns,pn
xchg
or
adc
push
mov
dec
addr16
cli
loopne
fimull
pop
jno
sub
cli
aad
push
pop
pop
xchg
jle
iret
push
insb
fistpll
adc
pop
dec
insl
adc
dec
rol
lock
pop
push
sbb
sbb
aas
jb
or
aas
fstl
in
lds
pop
sub
stos
cmp
shl
psrlw
sbb
lods
notl
dec
sub
jge
and
xor
jg
mov
sbb
lods
mov
xor
and
or
aad
popa
dec
xor
lds
mov
sti
inc
ror
jb
test
mov
aaa
loop
in
or
aad
jp
mov
outsl
xor
out
js
jo
xchg
or
outsl
dec
mov
sub
ljmp
xor
in
out
in
in
sbbb
xor
mov
into
jg
int
addr16
sub
xchg
mov
inc
ja
mov
add
inc
cmc
psllq
pusha
js
lods
xchg
into
mov
fsubs
pop
hlt
sub
pop
xchg
ljmp
mov
or
int
mov
push
push
adc
adc
push
xchg
outsl
gs
mov
jno
stos
fcmovbe
ficompl
clc
cmp
divl
repnz
and
pop
pop
adc
cmp
inc
test
pop
jnp
jns
ja
lods
sbbl
pop
mov
dec
loop
xor
adc
mov
shlb
lret
dec
mov
sub
outsb
pop
push
shrb
mov
pop
sbb
movsb
lock
sub
pop
and
xor
inc
cmpsb
fisttps
push
or
and
dec
in
testl
push
adc
inc
rorb
scas
xchg
inc
gs
mov
lret
mov
ja
sub
pop
cmp
add
cltd
jecxz
mov
and
mov
mov
add
xchg
lret
sub
or
cmc
dec
cmp
mov
pop
mov
sbb
lea
dec
fistpll
sub
out
cmp
sub
decl
imul
dec
xchg
gs
jl
loope
incl
mov
adc
push
dec
adc
inc
jg
arpl
mov
das
mov
rorb
leave
dec
mov
dec
arpl
mov
iret
xor
adc
cmpsl
mov
sbb
shll
add
test
orb
xor
popw
and
cmp
push
push
jno
adc
out
or
fdivrl
mov
pop
decl
shll
clc
mov
jp
mov
xchg
mov
cmp
out
fimull
jo
pop
mov
jmp
mov
fucomip
roll
ljmp
or
scas
cltd
jo
or
mov
mov
stos
add
xchg
xchg
gs
dec
rorl
out
int
fs
fldt
lret
mov
stos
or
lods
ja
imul
arpl
and
rolb
xchg
enter
and
mov
push
fstpl
aas
jnp
loop
aad
jmp
inc
xor
dec
fwait
push
loop
add
jp
mov
and
stos
jb
out
jp
inc
jnp
dec
test
sbb
rorb
jl
adc
mov
jno
ljmp
mov
in
mov
sbb
int
push
add
push
xor
and
pop
cmp
pop
mov
sub
pop
daa
mov
dec
sbb
cmp
sbb
add
pop
or
lock
dec
jge
jl
and
fwait
shr
jge
cmp
or
or
rolb
sub
mov
add
and
cli
fs
lds
inc
cmp
or
inc
or
int3
mov
lods
add
or
es
cmp
inc
inc
cmpsb
adc
pop
jecxz
sahf
cmp
popa
jp
pop
in
lds
sub
lret
fisubrl
cwtl
mov
fwait
sbb
shl
push
jge
push
lock
jae
in
test
adc
xchg
or
in
mov
js
popf
and
jg
hlt
aas
mov
sbb
push
mov
fst
mov
jecxz
test
aad
sub
jge
adc
push
je
repz
andl
dec
add
mov
popf
xorl
push
cltd
dec
mov
mov
xchg
sbb
test
pop
mov
ja
mov
stos
adc
shll
cmp
dec
or
scas
pop
std
mov
insl
xlat
stos
shlb
insb
cmp
rclb
and
into
test
mov
pusha
lret
xchg
xor
adc
repz
mov
daa
cwtl
jno,pt
dec
push
push
mov
push
pop
ret
inc
into
lahf
or
lret
dec
dec
mov
push
fistpll
mov
jo
push
push
pop
cmp
adc
push
inc
inc
call
pop
in
fnsave
cmp
add
lcall
adc
pop
imul
mov
adcl
cmp
fwait
mov
dec
icebp
clc
inc
ds
pop
call
sbb
int
fwait
sbb
stc
mov
xchg
scas
xchg
dec
mov
xchg
xchg
and
in
int3
test
aaa
cli
aad
mov
lods
mov
rolb
sbbl
ds
mov
enter
imul
cmp
jo
pop
sahf
movsl
or
loope
pop
ret
lock
mov
sbb
lds
dec
jb
add
jae
jmp
in
jnp
cmp
push
mov
pop
lock
popf
mov
inc
inc
outsl
popa
pop
addr16
or
fdivs
add
leave
stos
inc
lcall
jp
sahf
sahf
rcll
mov
loop
pop
xchg
out
ja
out
fimull
mov
je
in
lods
sub
mov
into
sub
lahf
icebp
pop
xchg
in
js
add
movsb
int3
movsl
jmp
push
lds
cmp
lcall
sub
mov
adc
dec
repnz
sbb
mov
push
insl
popa
fsub
mov
dec
or
add
insb
lock
fdivs
ret
gs
arpl
sbb
mov
in
in
cmp
push
lret
mov
push
pop
into
sbb
xor
adc
jne
mov
push
sub
dec
xchg
inc
adc
cli
out
fisubs
adc
inc
push
cmc
cmp
int
imul
in
insl
enter
cmp
xchg
cwtl
sub
test
lea
movsb
sbb
or
add
daa
test
test
les
fldt
loopne
adc
stos
out
lret
repnz
pop
sbb
daa
dec
sub
es
jg
pop
jge
push
jmp
rcl
mov
stos
pop
mov
or
push
shlb
jmp
and
jne
xchg
jge
adc
rcr
cmp
das
and
jg
and
pop
lahf
xor
xchg
xlat
mov
mov
add
inc
mov
jmp
in
lea
inc
push
sbb
nop
cmp
xor
lcall
fsubrp
stc
xchg
mov
in
cmp
jbe
push
std
bound
mov
rolb
mov
lahf
fdivrs
shll
pop
pusha
outsb
out
lods
enter
sub
sbb
inc
insl
dec
sahf
pop
push
mov
fucomi
rcl
jp
pop
inc
cmpl
jb
jne
mov
scas
mov
push
or
inc
stos
mov
cli
inc
dec
jmp
xor
outsl
adc
jl
mov
and
mov
jnp
push
mov
xor
fcmovu
fnstcw
scas
push
and
sub
adc
xor
adc
movsl
repz
aam
stos
in
jbe
call
pop
xlat
inc
jp
xor
bound
pop
dec
adc
or
push
divl
push
add
daa
repnz
ror
mov
and
dec
rorb
lock
addr16
icebp
jecxz
in
adc
mov
es
push
mov
enter
mov
add
mov
jmp
pop
dec
insb
xlat
push
sbb
inc
sbb
pop
push
mov
adc
mov
mov
adc
dec
push
orl
cmp
pop
fwait
or
test
xor
icebp
pop
icebp
test
lret
lock
adc
insb
xlat
or
jecxz
mov
lahf
adc
push
stos
xor
loop
lret
cmp
mov
popa
dec
mov
scas
popf
mov
int3
les
jecxz
les
js
addr16
repnz
cmp
js
inc
mov
inc
and
push
imul
push
xchg
jl
or
or
loope
fisttpl
nop
scas
gs
loope
ss
cmpsl
jne
jp
and
dec
mov
int3
jg
inc
adc
sahf
stos
sarl
fwait
repnz
ret
stos
jle
xor
mov
test
in
inc
cmp
ret
sub
loop
and
nop
cmc
pusha
dec
xchg
inc
fisttpll
mov
pop
lret
mov
mull
or
outsl
outsl
sub
clc
outsb
push
dec
sbb
inc
xor
mov
mov
pop
adc
sbb
data16
pop
or
xor
imul
sbb
inc
mov
mov
adc
push
or
iret
dec
clc
mov
inc
pop
xor
repnz
and
dec
cmpsl
jbe
pop
stos
push
cmp
add
push
gs
adc
mov
cmc
fidivs
and
lods
and
stc
and
enter
inc
pop
sbb
and
or
cmpsb
movsb
cld
xor
fidivl
jecxz
xchg
jns
xor
ret
jge
adc
insl
sbb
ja
imul
mov
pop
gs
loopne,pt
out
jbe
ja
jecxz
test
pop
and
dec
inc
je
pop
cmp
add
dec
call
ffreep
je
xor
dec
sub
mov
pop
push
jno
add
scas
outsl
cmp
push
in
aaa
ret
sbb
jecxz
and
lahf
dec
xor
or
aad
clc
push
jae
cwtl
inc
js
mov
out
adc
fs
mov
adc
cmp
and
pushf
inc
pop
addl
nop
and
sbb
rcr
mov
fmull
dec
xlat
sahf
subb
xor
cwtl
xorb
aad
mov
in
sbb
jmp
sub
pop
loope
jmp
adc
xor
shlb
jo
xchg
jp
xchg
cli
data16
les
stc
lock
mov
movsb
icebp
xor
jns
shl
xor
mov
insb
mov
shll
dec
das
mov
sbb
xor
gs
mov
inc
es
and
push
test
inc
and
je
jns
xor
stc
loope
in
test
mov
imul
push
sbb
call
or
inc
in
mov
mov
or
xor
dec
mov
or
mov
iret
dec
inc
aas
push
fcmovu
push
mov
in
dec
movsl
repz
aaa
cmpsb
pusha
loop
xchg
add
jo
jo
and
clc
pop
dec
pop
shrl
repz
mov
jmp
andb
sarb
mov
mov
ret
and
cmp
inc
cmp
sub
repnz
idivb
inc
pop
xchg
fs
shll
test
dec
movsl
cli
sbb
out
mov
cli
fistl
int
jmp
mov
xchg
leave
mov
lahf
fisttpll
xor
cwtl
cld
sub
jl
inc
inc
add
xchg
dec
mov
into
lret
pop
pop
lods
add
dec
int
stos
shl
inc
cld
xchg
pop
mov
mov
mov
dec
les
stos
mov
add
aaa
jb,pn
lods
mov
roll
fstpt
mov
adc
mov
pop
js
aam
xor
mov
fistpll
add
push
adc
mov
data16
jge
xor
adc
pop
xchg
mov
mov
mov
in
cmpsl
sub
inc
xor
movsl
insb
or
or
push
popl
cmpsb
mov
add
icebp
adc
sbb
or
imulb
jecxz
test
js
in
inc
pop
jmp
repnz
cltd
and
sub
jno
jns
addr16
and
dec
or
fsubr
fiaddl
andl
gs
jecxz
pusha
pop
adcb
aaa
fcomps
push
out
rclb
add
fwait
stc
movl
repnz
std
push
cmp
or
mov
lahf
movsb
aas
dec
inc
mov
xchg
inc
lahf
fwait
in
xchg
and
pop
jno
insb
out
pop
sbbb
push
push
xlat
fsubrl
adc
hlt
sbb
or
in
bound
push
push
xor
cmp
les
popa
repz
or
loopne
and
and
adc
pop
sbb
mov
mov
adcb
sub
jmp
lcall
adc
dec
push
adc
lods
inc
inc
push
or
call
clc
pop
fstps
sbb
dec
xor
mov
xlat
pop
sub
fwait
xor
scas
adc
push
inc
sbb
outsl
and
mov
sub
in
sub
into
sub
inc
std
mov
fwait
jp
sub
xor
aas
jge
mov
mov
in
stos
or
scas
scas
lret
mov
push
and
mov
adc
les
jmp
addr16
into
aad
ja
inc
mov
fadd
pushf
sub
movsb
stos
ficoms
jne
loope
lcall
pop
push
rcll
mov
add
out
cmp
sbb
imul
dec
add
sub
cmpsb
xor
add
jecxz
das
stos
jmp
mov
adc
lret
jmp
shll
pop
bound
out
inc
fisttps
cmp
mov
jo
xchg
fcompl
out
roll
dec
subl
icebp
add
pop
cmp
inc
and
fisttpl
pop
inc
je
pushf
jle
lods
xor
push
mov
daa
mov
testl
ss
movsb
xchg
aas
cmc
lock
mov
dec
mov
scas
push
mov
std
mov
mov
xor
cmp
je
leave
call
test
dec
mov
mull
js
andb
pushf
scas
call
in
loop
sub
imull
xor
cmp
jle
xchg
loopne
cmp
scas
scas
mov
fnstenv
enter
gs
pop
push
loop
stos
inc
mov
imul
jno
sub
jbe
lds
add
inc
cmpsb
mov
lret
daa
lret
sub
dec
cmp
push
xor
stos
jne
add
xchg
xchg
jmp
or
pop
cmpsl
div
lret
mov
sub
stc
pop
add
adc
or
addr16
mov
outsl
mov
mov
xchg
cmp
add
jb
sbb
movsl
shrl
ss
jp
xorl
fs
cmp
imul
scas
jl
sahf
jp
int3
sbb
aad
jnp
mov
lret
fwait
adc
arpl
mov
add
mov
out
fcomps
xor
jmp
cmp
push
xor
dec
shlb
jne
jno
jp
sbb
test
xchg
cs
fxch
sub
or
movsl
lret
inc
into
out
or
or
adc
int3
arpl
insb
je
sbb
cmp
stos
fnsave
ljmp
jno
sti
cli
xchg
xchg
mov
cmp
sbb
sbb
inc
adc
or
dec
fldcw
pushf
out
sub
movsl
inc
clc
out
loop
add
or
jp
inc
test
sub
dec
sub
clc
enter
insl
out
mov
mov
popa
mov
fcoms
adcb
and
pop
in
fdivl
mov
pop
xchg
mov
call
lcall
pop
jmp
filds
fs
mov
mov
fisttpll
add
sbb
mov
mov
pop
and
hlt
xchg
cmc
insl
sbb
mov
cltd
mov
cmpsb
inc
push
mov
rorl
movsb
lds
mov
mov
cltd
ja
call
cmp
inc
xchg
shll
aaa
jmp
std
pop
pop
movsb
push
jb
je
cwtl
jmp
imul
xlat
sbb
mov
mov
or
fsubl
iret
mov
lods
mov
insl
xchg
stos
push
mov
fwait
outsb
popa
push
mov
ds
call
adc
aad
outsl
pop
adc
cmp
cmp
xchg
pop
flds
jae
xchg
mov
xor
jnp
push
or
mov
loope
push
xor
adc
mov
bound
gs
and
into
cmp
mov
mov
orl
mov
nop
call
dec
xor
cmc
stos
and
test
cld
or
movsl
add
jg
insl
xor
xlat
dec
nop
xchg
dec
jecxz
or
push
mov
jg
andb
imul
aam
arpl
test
mov
mov
xchg
jl
push
mov
mov
loope
push
in
lcall
add
jae
cmp
push
loopne
add
in
gs
jmp
and
cmpsl
adc
mov
lret
outsl
in
pop
mov
jae
data16
out
aas
mov
sbb
hlt
sbb
adc
xchg
mov
ret
mul
xor
adc
mov
movsl
xor
shlb
vsqrtps
test
fists
mov
js
xor
mov
push
sub
je
pop
test
stc
mov
xchg
mov
mov
inc
adc
xchg
cwtl
aaa
mov
or
push
mov
cmp
xchg
daa
pop
in
pop
inc
mov
daa
ret
and
scas
daa
xor
xor
and
les
push
lret
aas
loope
sub
cmp
jg
repnz
lea
popf
mov
aad
adc
repz
insb
mov
sub
ret
mov
push
addb
mov
fistpl
mov
push
adc
or
dec
sbb
adc
inc
cltd
inc
imul
test
in
pop
mov
fyl2xp1
das
mov
mov
clc
mov
loope
lds
jno
repnz
mov
push
jge
out
stos
sti
dec
loopne
pushf
insl
subl
aad
popf
cltd
lods
mov
daa
lods
push
adc
add
shrl
inc
inc
and
int
int
jl
dec
data16
xchg
and
jl
cmpl
mov
mov
js
push
enter
adc
out
push
scas
mov
cmp
sub
test
out
jmp
jmp
cmp
or
or
jnp
iret
lock
pop
daa
cmp
mov
or
or
test
imull
cmp
dec
clc
jo
std
lret
jo
mov
xchg
cs
cmp
aam
in
sbb
xor
lods
mov
in
and
test
scas
sub
test
lods
rclb
xchg
loope
mov
xchg
cmc
lret
insl
cld
les
or
pop
add
out
rcrl
push
push
dec
arpl
mov
push
jl
cmpsb
pop
lods
das
sbbb
xchg
sbb
mov
mov
leave
bound
and
sbb
test
fs
jae
shrl
push
mov
out
in
push
setbe
outsl
mov
push
xchg
sbb
adc
pop
inc
pop
inc
pop
dec
cmp
shll
les
mov
pop
push
ffree
dec
outsb
xchg
call
jg
mov
mov
inc
or
or
jl
pop
lds
scas
rolb
rorb
das
sti
in
or
cmpsl
ljmp
add
mov
push
push
sbb
nop
cmpsb
xor
mov
shr
add
cmpsb
or
loop
xchg
je
enter
int
iret
sbb
cmc
mov
icebp
imul
cmpsb
pusha
add
push
ss
je
arpl
aas
mov
mov
add
test
sbb
push
pop
cmpsb
or
push
mov
dec
adc
cmp
inc
sbb
js
add
pop
into
and
stos
sbb
add
pop
cmpb
push
and
sub
jne
mov
aam
push
mov
dec
or
cmp
fstpt
push
in
mov
mov
lcall
or
jge
loope
js
cmp
inc
je
mov
insl
enter
dec
into
adc
fimull
ret
mov
pop
cmp
dec
mov
in
movsb
cs
jns
add
mov
cmp
pusha
xchg
add
adc
je,pn
xchg
fisubrs
icebp
dec
hlt
jne
adc
mov
cmpsl
scas
mov
inc
cld
hlt
mov
sbb
subl
int3
das
mov
mov
out
repz
iret
mov
pop
xor
int3
adc
movb
push
test
and
jl
sbb
lods
imul
jb
add
in
pop
pushf
push
and
outsl
xlat
adc
outsl
int
xor
sub
and
test
andl
or
pop
cmp
mov
loope
xchg
jbe
shl
ficoml
pop
pusha
jecxz
sbbb
cmpsl
dec
sbb
cwtl
movsl
dec
push
inc
test
or
and
or
sbb
dec
add
flds
xor
mov
shrl
mul
and
mov
push
adcl
repnz
repz
decb
xor
sti
addr16
jge
push
test
or
or
imul
mov
mov
ja
lret
jbe
cmp
mov
and
push
cmp
mov
pop
popa
cld
out
es
in
jnp
jge
int3
jns
jp
arpl
mov
add
mov
adc
cmp
scas
test
adc
mov
xor
stos
lahf
dec
scas
push
xor
and
dec
jle
cmp
dec
xchg
je
add
lret
mov
es
adc
test
ljmp
lods
push
lods
xlat
add
mov
jae
sbb
dec
test
ljmpw
test
or
loop
enter
dec
enter
in
or
ljmp
test
mov
faddp
add
inc
xor
push
popf
fiaddl
push
decb
xchg
pop
aad
aad
adc
mov
shll
mov
cmc
rcr
mov
mov
dec
pop
sub
inc
sub
aad
xor
das
push
lret
fcompl
cli
jbe
enter
test
xor
inc
lcall
jmp
aaa
xchg
icebp
loop
adc
cmp
xlat
ds
lods
jno
fdivrs
shlb
push
pop
inc
inc
or
jge
cmp
dec
test
aas
in
pop
adc
lcall
and
xchg
ret
pop
xchg
mov
daa
fidivrs
and
lret
inc
std
push
popa
push
inc
in
xor
pop
and
das
mov
sub
in
dec
mov
adc
dec
cmp
pop
pop
lret
popf
repz
das
fbld
xor
push
adc
imul
ljmp
scas
clc
loope
mov
add
jns
repnz
or
add
mov
jl
mov
cmp
imul
in
movsl
iret
hlt
cmpsl
xchg
sti
add
sahf
jp
pop
test
xor
fbstp
fidivrl
ljmp
rcll
in
cmp
mov
add
mov
dec
jl
mov
mov
call
adc
cmp
aas
inc
xorb
pushl
mov
hlt
and
mov
lret
icebp
mov
xchg
rolb
xlat
pop
push
dec
stos
push
cmp
pop
popf
jl
ljmp
cmp
imulb
adc
movsl
loopne
sbb
mov
mov
cmp
and
fptan
das
or
fnsave
push
jbe
pop
xchg
cmp
and
leave
jp
add
mov
mov
ljmp
mov
pop
xchg
sub
ds
and
ja
lods
jg
mov
fldcw
iret
testl
jbe
lods
mov
lods
mov
loopne
push
jne
shll
cmp
cwtl
push
shll
arpl
fs
jg
add
mov
push
es
and
mov
out
leave
push
inc
inc
xchg
loope
sub
jbe
jge
xchg
inc
or
cltd
scas
in
mov
adc
mov
js
jp
ja
cmpsl
push
mov
cmp
fsubr
mov
jg
shll
xchg
popf
pop
sbb
cmp
mov
imul
inc
subb
mov
mov
stos
nop
sub
sub
push
es
xlat
repnz
mov
in
sbb
lea
add
insb
minps
popf
xor
ljmp
scas
aad
in
push
xchg
adc
lahf
dec
cmp
nop
out
and
pop
testl
adc
mov
or
test
rorb
shr
insb
aaa
inc
xchg
fidivs
jle
fdivrl
pop
jne
aaa
mov
movsb
cmpsl
test
into
push
jbe
imul
xchg
xchg
sarb
mov
mov
xorl
sub
xchg
iret
xor
int3
mov
in
es
jge
cs
sbb
push
cmpsl
add
pop
int3
cmp
mov
mov
scas
pop
sbb
cltd
sbb
pop
scas
adc
cld
pop
add
xchg
pushf
xchg
icebp
mov
push
add
xor
xlat
jbe
divl
xchg
add
in
call
icebp
les
movsl
mov
xchg
repz
jl
sub
jb
xor
clc
cmpsb
mov
dec
inc
cmpsl
xlat
test
ret
scas
lahf
aaa
xchg
xor
fisttps
xor
insb
fcomps
pop
pop
pop
in
lcall
gs
fwait
dec
cld
xor
fmuls
leave
int3
or
stos
sti
sbb
cli
mov
sbb
push
iret
mov
lret
fisubl
sub
or
stos
in
xchg
mov
insb
lock
mov
jno
mov
mov
mov
jne
dec
add
int
mov
sub
popa
insl
aas
fstps
call
push
pop
loopne
mov
xor
dec
push
inc
push
repnz
xor
clc
jmp
xor
clc
stos
push
es
xor
push
push
testb
aas
out
sub
inc
insb
or
cli
and
jle
imul
xor
ret
sub
mov
cmp
jbe
ficompl
sti
or
push
adc
jmp
cmp
cmpsb
xchg
je
jge
aad
mov
insb
shlb
test
mov
dec
cmc
push
daa
lods
push
xchg
gs
negl
dec
ds
pop
mov
mov
inc
cld
shll
or
icebp
popa
addr16
ljmp
popa
vmwrite
js
and
add
sub
xchg
cmp
push
test
ror
lock
loope
ror
sahf
add
into
and
mov
movsl
pushf
pop
push
repz
cmp
imul
cwtl
sbb
daa
or
jb
out
and
rcll
jns
adc
dec
data16
bound
and
push
add
mov
sub
xor
sbb
gs
mov
lock
mov
jg
pop
mov
push
mov
fisubl
aad
sub
cld
cmp
pusha
or
movsl
in
repz
arpl
adc
cmp
jo
mov
gs
xor
out
cltd
mov
lret
mov
imul
jle
adc
or
add
test
xchg
jmp
sbb
fstpt
dec
mov
add
mov
clc
loope
fisttpl
sub
pop
adc
fiadds
sub
imul
mov
rclb
mov
lock
push
mov
lret
loope
aad
push
ret
jno
pushf
jno
jmp
dec
lahf
js
xorl
out
test
je
xor
jbe
mov
lcall
loop
decb
rclb
scas
cmp
fistl
and
dec
mov
mov
in
mov
mov
mov
loope
sub
stc
xchg
push
out
mov
pop
cmp
je
ds
lock
mov
pop
xor
pushf
mov
pop
add
ss
mov
push
add
dec
cmp
insl
mov
or
push
into
inc
bound
fidivs
pop
fs
push
shr
jne
cmc
or
repnz
test
or
aas
jo
dec
and
aas
inc
push
adcb
int
add
inc
mov
ds
mov
xor
mov
stc
lock
arpl
mov
push
andl
fists
xor
pop
aad
bnd
jecxz
dec
hlt
inc
ficoml
repnz
cmp
fidivrl
icebp
push
stc
lea
mov
std
add
repz
call
fsubrs
push
push
lcall
xlat
inc
fstps
aam
mov
mov
sbb
add
pop
pop
cltd
push
fdiv
ss
out
xchg
sbb
xchg
mov
ret
pusha
test
fsubrs
add
or
and
xor
out
ja
push
out
std
mov
xor
dec
mov
lock
inc
jecxz
hlt
rcll
lcall
inc
out
push
ljmp
cwtl
inc
and
inc
insb
jae
aaa
repnz
dec
cltd
test
adc
incl
and
inc
dec
je
out
mov
addb
movsl
or
or
clc
push
dec
or
stos
jecxz
es
inc
sub
cs
or
insl
out
add
loop
gs
push
notb
sahf
lods
pushf
push
in
es
jecxz
mov
stos
pop
adc
stc
jae
and
lcall
or
dec
stc
xchg
stos
push
lret
pop
stos
mov
xchg
int3
pop
push
and
aas
mulb
arpl
addr16
cltd
sub
fs
inc
xor
push
sub
cmpl
sub
lret
aam
fdivs
sub
fmuls
divl
mov
lret
mov
xchg
xor
ljmp
aad
and
push
push
in
sub
mov
cmp
jg
xor
and
repz
aam
mov
xchg
push
fdivp
sub
inc
and
jge
mov
jbe
xorl
push
sahf
pop
inc
xchg
outsl
bound
mov
xlat
aas
xor
jle
lods
mov
and
cmpb
lahf
pop
sarb
rclb
notb
xor
jno
mov
adc
cmp
mov
mov
icebp
pushf
xchg
push
stc
mov
out
aaa
dec
push
in
pop
mov
xchg
or
add
xchg
shll
mov
aaa
data16
nop
sub
cmp
enter
nop
call
mov
inc
mov
subb
adc
jp
movsl
mov
pop
loop
js
fsts
sbb
xor
pop
xchg
xchg
fwait
sub
popf
das
pop
and
loope
push
and
sbbb
ret
push
scas
daa
jb
lret
pop
and
pop
ss
mov
inc
adc
push
and
adcb
pop
fs
pop
adc
adc
loop
jnp
repz
mov
jo
push
popa
adc
mov
repnz
mov
int3
dec
and
sub
lret
jmp
cld
movsl
int3
mov
adc
xchg
fs
push
icebp
jecxz
or
mov
testb
xor
xchg
sti
and
mov
sbb
pop
and
jmp
lcall
sbb
fld
lock
jle
fbstp
xor
gs
xor
out
pop
dec
ds
dec
pop
xor
and
imul
push
sbb
lahf
mov
data16
clc
cmp
inc
jns
pusha
pop
and
push
or
dec
decb
mov
or
lret
mov
out
fcmovne
imul
ljmp
fdivl
inc
loopne
cmc
pop
pop
mov
xchg
mov
inc
lahf
lahf
stos
hlt
mov
jge
stos
rolb
outsl
cmp
add
add
mov
js
inc
xor
iret
adc
mov
or
aad
add
enter
out
mov
inc
shll
mov
xor
outsb
popf
scas
das
add
pushf
cmc
pusha
xchg
aam
sub
rolb
pop
in
dec
mov
pop
xor
in
xor
stos
repnz
inc
daa
push
lcall
push
popa
push
insl
cmc
or
xchg
sbb
pop
insl
incb
mov
out
aad
cs
mov
mov
ret
repnz
mov
and
mov
in
xor
mov
and
adcb
add
pop
in
insl
jae,pn
add
ljmp
addb
pop
aam
imul
jl
iret
pop
fs
adc
dec
cwtl
mov
xlat
cltd
inc
mov
pop
adc
or
dec
test
outsb
xchg
jns
out
shlb
jg
pop
popf
call
sub
jp
pop
push
push
push
jne
lock
and
sbb
lret
add
inc
add
pushf
dec
cmp
repnz
dec
les
inc
or
aad
iret
mov
stc
mov
jbe
out
test
and
cmpsl
dec
push
pop
lahf
xchg
jg
xor
pop
loope
nop
sub
jmp
and
or
sub
repz
mov
lret
lcall
pop
inc
int3
in
xorb
pusha
dec
cmc
mov
sbb
and
loop
shll
and
pop
push
packuswb
jns
dec
jmp
popf
int
popl
popf
clc
out
pusha
in
pop
lds
xchg
cmp
sti
mov
pop
jne
mov
ja
mov
adc
mov
add
push
adc
xchg
jge
sbb
sub
pop
mov
or
or
pushf
lahf
sti
mov
dec
fcomps
pop
mov
cmp
in
int3
out
jp
inc
add
or
or
cmp
sbb
lods
imul
jmp
push
mov
jmp
pop
pop
lret
cmpsb
loope
cmp
mov
fdivrs
xchg
mov
jbe
fsubr
out
xor
lret
mov
gs
lret
out
and
fmul
sarl
add
ja
mov
pushf
mov
outsl
sub
shll
popf
pop
mov
movsb
fwait
loope
push
cltd
jecxz
sub
and
in
dec
mov
mov
fidivrs
out
test
lds
cmp
inc
add
movsl
aad
mov
mov
cld
stos
icebp
add
test
jmp
ret
ret
mov
cmp
lret
jne
pop
stos
call
stc
adc
inc
jno
jg
add
inc
pop
push
push
cwtl
cmp
jae
mov
sbb
mov
pop
scas
fs
pusha
push
test
mov
cltd
leave
fisttpll
fisubrs
xor
jmp
adc
xchg
test
jne
and
cld
movsl
jns
or
or
jle
mov
ljmp
mov
inc
push
in
push
jb
movsb
stos
mov
test
rorb
cmp
mov
lock
cwtl
test
push
sahf
test
mov
mov
testb
push
pop
lods
xchg
cs
das
lea
and
out
or
cmp
stos
adc
fs
dec
scas
dec
inc
pop
xchg
jb
add
loope
mov
faddl
daa
shrl
jmp
daa
and
test
cmp
andl
fsubl
xor
push
pop
ljmp
pop
mov
or
adc
rorl
xchg
pushf
aam
mov
mov
in
cmp
mov
adc
jo
std
ljmp
xor
add
jecxz
lea
int3
decb
sub
mov
out
jno
pop
orl
leave
jecxz
push
pop
ljmp
and
lea
hlt
mov
cmp
mov
fsts
sub
roll
inc
insl
cmovb
pop
pop
and
lds
mov
scas
sub
xor
loope
shlb
mov
pop
and
lahf
movsl
add
adc
cmp
add
int3
int3
lret
pop
hlt
cmpsl
add
in
inc
or
push
push
div
mov
insl
add
mov
push
adc
xor
pop
in
push
inc
insb
daa
stos
or
imul
into
jbe
fadds
dec
xchg
aad
lock
push
outsl
dec
shl
iret
pop
inc
or
lcall
es
aad
sub
repz
mov
dec
mov
das
cmp
mov
mov
out
push
jo
push
mov
inc
sbb
inc
sbb
xchg
into
icebp
sub
sub
cld
xor
pop
gs
iret
loopne
inc
inc
jg
enter
cmp
lret
test
push
imul
lret
jl
lea
jge
and
cmpsb
mulb
sub
push
mov
jbe
sbb
in
aaa
cmp
lods
adc
push
cld
sbb
shlb
test
cmpsl
ret
mov
mov
xchg
test
pop
or
popf
cmp
mov
jp
leave
cmp
lea
inc
bnd
jle
and
push
movd
in
sbb
adc
loope
cmpsl
and
mov
or
xchg
loopne
sbb
ja
jg
in
xor
pop
inc
dec
das
push
mov
adc
fisubrl
jo
xor
mov
dec
pop
jne
cld
mov
xchg
lret
test
and
inc
or
or
popa
aam
jb
mov
movsl
test
mov
mov
push
imul
repz
es
inc
mov
out
cmpsl
sbbl
loopne
pop
inc
jo
hlt
and
add
decb
lock
call
sbb
cld
out
jne
fcoml
fldl
lret
jecxz
inc
aas
or
or
mull
mov
sbb
out
lret
lock
out
inc
mov
sarb
iret
pop
pop
mov
add
sub
push
cli
push
mov
push
test
sub
sbb
arpl
xor
jb
aad
icebp
sbb
and
adcl
lods
xor
fsubp
mov
pusha
and
lea
xchg
cmp
dec
and
sub
cmp
movsb
xchg
mov
add
prefetcht1
dec
fcoml
push
cmp
mov
dec
int3
mov
popa
inc
jg
sbbl
inc
jbe
ret
bswap
scas
sub
cwtl
rcll
loop
lret
pop
dec
fldenv
in
cmp
imul
pushf
xchg
mov
lret
int
pop
jo
jb
in
jnp
into
jns
pop
mov
ret
je
loopne
cmp
std
movsb
addl
push
ljmp
and
pop
jl
adc
mov
imul
push
add
insl
mov
and
sbb
dec
mov
pop
iret
fadd
insl
fistps
mov
mov
rol
jmp
imul
shrb
push
scas
add
lret
mov
ds
xchg
mov
into
push
sbb
xor
inc
divl
xor
daa
rcrb
jg
stos
fsubl
test
or
or
call
ss
stc
pop
loope
adc
cmp
lds
mov
jl
mov
push
xor
dec
adc
push
and
test
ret
outsb
sahf
movsl
push
cmp
popa
inc
cmp
jp
test
push
and
and
cs
sbb
xchg
sub
mov
jge
aad
mov
pop
add
into
mov
inc
sub
lds
inc
test
test
stc
cli
int
pmaxsw
leave
jno
cs
mov
in
xchg
popf
andb
adc
cli
push
pop
ss
pop
xchg
mov
mov
push
cltd
xlat
imul
ljmp
insl
and
jg
movsl
call
out
mov
lock
movsb
jecxz
jmp
fdivs
out
out
clc
cs
loope
dec
stc
sbb
lret
dec
and
sbb
mov
repz
xchg
roll
jae
mov
out
icebp
xchg
push
mov
inc
mov
inc
iret
xchg
jmp
adc
andl
lea
rclb
loop
into
pop
sar
call
or
clc
das
inc
insb
lcall
cmp
jmp
xchg
pop
xor
imul
mov
lret
insb
dec
pop
jle
int3
inc
pop
lods
cmpsb
enter
stc
lahf
enter
and
jle
pop
in
leave
push
cmp
fnstsw
inc
xchg
xchg
sub
clc
lock
xor
inc
inc
mov
and
xchg
push
or
sbb
addr16
push
into
cmp
stc
mov
sbb
mov
mov
ret
lret
outsl
hlt
in
add
cmp
lret
add
add
ficoml
xlat
mov
add
leave
mov
fimull
lret
lret
lock
pop
push
and
mov
push
out
vpsrad
sub
out
out
xchg
test
mov
fisubrl
andb
fsubrl
int
movsb
aad
lea
aaa
jecxz
sub
lds
xchg
fwait
pushf
mov
in
and
clc
arpl
jb
lret
push
loop
cmpsl
ret
stos
dec
imul
adc
dec
cmp
sub
dec
jmp
clc
mov
arpl
dec
pop
adc
pop
jg
pop
jo
xor
inc
cmc
loopne
insl
cld
fstps
std
lods
je
or
cmpsl
insl
cmp
sbb
nop
loopne
lret
or
sti
mov
jae
sbb
jbe
mov
mov
mov
addl
jl
pop
jmp
stos
adcl
lret
add
jb
inc
mov
mov
jle
pop
scas
push
pushf
or
sbb
out
icebp
xchg
addr16
mov
aad
push
call
lds
mov
mov
test
jl
inc
leave
ss
xchg
out
dec
add
call
cmp
neg
test
jmp
jns
divb
pop
ljmp
pop
inc
push
xor
sub
sti
sub
jg
jnp
xchg
push
jno,pn
mov
inc
mov
mov
xchg
cmp
in
adc
inc
fsts
out
jmp
cmp
cmpsl
mov
aam
push
push
push
push
fnstsw
stos
sahf
lea
mov
jecxz,pn
mov
inc
xchg
ljmp
mov
xor
xchg
xchg
les
sbb
dec
int3
mov
inc
lds
inc
dec
mov
sub
push
push
mov
cmp
mov
sbb
es
adc
and
outsb
ljmp
mov
lcall
ret
insl
scas
aaa
xlat
aad
cld
aaa
cmpsl
sahf
leave
test
xchg
cltd
arpl
ds
popf
sbb
mov
leave
lahf
push
lods
aas
daa
cmpsb
mov
mov
xchg
mov
nop
test
dec
mov
icebp
iret
sahf
xor
xchg
outsl
das
movl
jae
xor
lea
arpl
idivl
dec
into
cmp
mov
mov
dec
test
cli
lret
fstpl
pop
fisubs
adc
lcall
sub
push
sbb
ret
and
pop
xchg
and
movsl
ds
lods
xchg
rcr
inc
sub
add
shl
test
mov
sub
pusha
and
cmpsb
sbb
push
out
dec
xchg
flds
mov
ret
push
adc
dec
aaa
jae
cmc
or
es
aaa
adc
xchg
ljmp
sub
icebp
cmp
sbb
iret
jno
xor
clc
mov
fidivrl
test
insl
cmp
inc
or
sbb
dec
sub
jnp
in
add
jl
call
stos
mov
gs
push
mov
pop
cmc
aaa
popf
pop
jns
dec
std
jb
mov
fstpt
dec
popa
xchg
mov
aad
arpl
push
inc
inc
je
dec
imul
mov
sbb
adc
daa
jae
xor
lock
insl
popf
sub
addr16
adc
mov
push
push
pop
pop
movsb
sub
imulb
in
clc
in
sti
pop
adc
mov
sahf
xorl
dec
fs
pop
push
test
in
sbb
xchg
imul
leave
out
cmp
aas
jns
pop
imull
pop
repnz
push
dec
xor
pushf
mov
fldt
push
xorb
dec
adc
in
int
cltd
xchg
rolb
loop
shrl
xor
outsb
sbb
or
xchg
les
aaa
xchg
adc
scas
ja
xchg
and
and
sbb
lds
sbb
dec
mov
xchg
and
and
sarb
push
lock
pop
mov
add
add
add
dec
hlt
sub
inc
out
jnp
in
scas
pop
icebp
lods
shll
and
das
in
fucom
jno
int
or
in
jno
and
adc
and
mov
out
push
add
add
in
movsb
cmpsl
sti
cmp
pop
enter
or
scas
dec
ret
mov
cltd
pop
lahf
xchg
cmpsb
and
call
test
cltd
loop
pusha
xor
push
mov
arpl
rclb
lock
repnz
hlt
cmpps
fs
lahf
sub
movsb
mov
addr16
les
mov
push
into
lret
and
insl
xchg
notl
sbb
cmpl
push
xlat
pop
fsubs
xor
sti
aas
add
jmp
and
repnz
push
push
cld
mov
add
xor
aam
pop
jge
jno
repnz
inc
in
clc
fistpl
jnp
in
scas
cmp
dec
sub
push
xor
xchg
sbb
into
es
sbb
repz
das
mov
mov
sbb
sbb
mov
fmul
pop
outsb
adc
mov
push
inc
mov
fucomp
rorb
aam
lods
hlt
arpl
cmp
adc
sti
push
add
or
jns
frstor
loope
add
ds
mov
dec
inc
icebp
pop
pop
ljmp
sbb
stos
shll
daa
aas
out
repnz
pop
cld
rol
sbb
loope
into
pop
lret
fwait
cld
pop
push
mov
mov
sub
js
pop
rorl
js
pop
push
iret
mov
out
mov
dec
lea
pop
aas
fiaddl
imul
leave
adc
or
push
arpl
and
lcall
lret
ja
add
xchg
icebp
jmp
aas
push
in
push
xchg
dec
lcall
pop
fwait
das
sub
fmull
lds
pop
dec
mov
clc
mov
dec
int3
ret
dec
add
sbb
push
push
jbe
out
cmp
loopne
mov
xchg
pop
orl
sarl
sbb
repnz
fildll
outsb
jmp
call
or
in
stc
daa
inc
sub
es
push
pusha
and
pop
stc
push
ss
push
push
xchg
test
sbb
loop
ds
rclb
daa
js
sbb
fs
push
repnz
add
cmp
lret
out
cltd
add
out
push
mov
xchg
cmp
ficompl
jns
add
mov
adc
push
cli
sahf
mov
scas
jmp
scas
lret
mov
scas
push
or
xchg
andl
sub
bound
insl
push
pop
jne
jmp
sahf
push
es
loopne
bound
mov
push
cld
fildll
call
fbstp
movsb
out
or
mov
fisttpl
bound
pop
popf
mov
push
int3
pop
stc
adc
adc
repz
dec
xchg
mov
cld
fsubrs
or
lea
les
test
test
mov
ja
insb
jo
sbb
les
lods
sahf
bound
push
sub
cmpsl
jl
ret
iret
pushf
lock
pop
gs
ljmp
add
gs
clc
inc
imul
and
stos
inc
cmp
int3
push
test
xor
loope
rorl
mov
push
sti
gs
adc
push
cmc
testl
roll
adc
out
insl
shlb
or
iret
xor
adc
xlat
movsb
and
xor
xchg
sbb
test
loopne
nop
movsb
jp
or
pop
mov
test
push
lods
out
sbb
xor
adc
push
lea
or
mov
loop
test
in
lcall
pop
xchg
jne
scas
ljmp
cmc
data16
jbe
push
and
xor
xchg
nop
xchg
leave
roll
repz
cmp
ficomps
rcrl
dec
loop
stc
loopne
aam
xchg
leave
fidivl
pusha
pop
ficoml
movsl
sub
daa
rcl
or
cmp
shrl
test
mov
cmp
mov
clc
cmpsb
gs
mov
outsl
mov
inc
push
mov
mov
xor
inc
orl
incl
les
mov
or
sarb
sbb
repnz
push
push
mov
mov
cmp
mov
push
cwtl
fwait
xor
cmp
inc
cmpsl
inc
pop
mov
xchg
mov
js
jbe
adc
mov
sub
cmp
mov
ds
adc
stc
adc
xchg
dec
cmpsl
sbb
lds
ret
mov
incb
dec
mov
outsb
imul
push
pop
jl
adc
lret
jbe,pt
mov
cmp
cwtl
push
adc
and
push
es
in
lret
mov
fisttpl
orl
mov
xchg
jne
pop
xchg
xchg
les
xchg
lcall
test
stos
add
test
sub
addr16
bound
and
mov
add
and
push
rcr
adc
jg
pop
pop
xchg
out
and
cwtl
cmpb
imul
and
pop
add
sub
push
add
jne
cmpsb
out
jmp
sahf
jecxz
mov
imul
rcrb
or
int3
adcl
sbb
imul
rcr
mov
push
mov
clc
pop
call
xor
test
push
mov
xor
mov
xchg
ss
jmp
jl
add
test
test
ljmp
xchg
in
sub
or
push
and
loop
xchg
out
push
sbb
sti
push
rcr
adc
sti
imul
xchg
jnp
shrb
or
shl
icebp
lret
mov
aad
sbb
fwait
pop
sub
mov
adc
cmc
imul
dec
arpl
pop
pusha
jns
mov
mov
dec
xchg
xchg
insl
mov
ret
push
fisubs
aaa
xchg
fmull
adc
pop
aaa
push
popf
stos
xchg
out
sbb
xor
mov
dec
mov
sbb
shl
or
fiaddl
call
cld
mov
pop
mov
mov
jb
gs
repz
rolb
std
or
jnp
pop
dec
push
inc
mov
cmp
es
ficomps
loop
cwtl
jnp
dec
jecxz
pop
aas
aaa
aas
insb
pop
es
inc
sub
push
fadd
mov
inc
xlat
xchg
lret
or
mov
mov
aad
aaa
and
or
xchg
arpl
cmp
and
fwait
push
lock
test
scas
add
add
pop
gs
add
dec
call
jle
lahf
jo
dec
ja
jae
inc
cmp
and
pop
std
addr16
or
rorl
pusha
xchg
cltd
std
insl
mov
add
xchg
hlt
int
mov
xlat
int3
xor
fiaddl
fisubl
jno
out
rcll
xor
jns
pop
jmp
movsl
test
push
inc
xchg
xchg
lret
pop
or
data16
scas
pop
insb
sbb
repnz
inc
fnstsw
enter
mov
fdiv
pop
enter
testb
pusha
adc
js
sub
ss
xor
mov
in
fldl
cwtl
mov
in
add
and
nop
mov
jle
dec
cmpsb
icebp
xchg
add
hlt
xchg
or
imul
push
jl
mov
fs
scas
and
and
filds
out
mov
shlb
neg
outsl
pushf
fucomip
sub
add
add
lahf
into
mov
lret
push
add
data16
xlat
fistpl
mov
mov
pop
and
add
mov
xor
lea
or
lds
mov
ds
sub
cltd
ja
sti
cmp
nop
xor
int
in
rolb
mov
cld
push
fcompl
out
scas
pop
inc
ret
xor
pop
fmull
ffree
mov
ja
sarb
or
decl
add
fwait
clc
aam
repz
xor
shl
dec
sub
push
imul
faddl
xor
jnp
push
lret
pusha
jmp
xor
sbb
fiaddl
jge
sbbb
cmp
ret
pop
sbb
fs
movsb
sub
mov
outsl
dec
inc
pop
cmp
mov
icebp
mov
inc
test
btr
inc
inc
xor
nop
repz
or
loopne
sub
jg
rcr
push
ljmp
adc
pop
adc
call
inc
xchg
cwtl
pop
stos
xor
lds
lcall
pop
cmp
xor
shrl
mov
popf
sub
mov
leave
ljmpw
leave
or
andb
push
mov
pushf
imul
icebp
aaa
adc
jl
lods
mov
lds
shll
test
cs
bound
vmwrite
and
mov
sbb
and
lahf
mov
in
jecxz
inc
sahf
lahf
mov
data16
movsl
or
xor
leave
out
xor
es
pop
mov
lret
lods
fidivrl
and
or
out
int
sti
fidivs
outsb
mov
loopne
jnp
negb
out
mov
ljmp
dec
pusha
mov
add
inc
or
add
test
rcll
sbb
sbb
pop
out
cltd
inc
lods
jo
fbld
fsubrp
add
pop
add
pop
xchg
popa
or
fwait
roll
pop
jnp
pop
lock
sub
xchg
pop
sbb
std
into
sub
and
pop
decl
push
lea
cmp
mov
rcrl
enter
incb
push
mov
mov
cmp
js
and
cmc
ja
fucomip
call
iret
push
sbb
or
cmp
push
cwtd
outsb
lcall
mov
push
adc
fnstenv
repnz
dec
push
jmp
loope
loope
jge
ja
fcompl
in
push
push
inc
push
iret
outsl
adcl
testl
cmp
jg
or
out
sahf
rclb
fildl
sub
fadd
repz
add
and
add
or
push
shlb
sti
sub
gs
cmp
mov
mov
push
push
sub
jb
push
shlb
lret
mov
mov
xor
mov
push
mov
or
insb
cmpb
aas
mov
stos
pop
outsb
insb
xor
or
dec
or
jg
dec
push
dec
xor
mov
xchg
movsl
dec
addr16
aas
lods
les
je
push
pop
pop
mov
xor
repz
mov
xlat
adc
pop
insl
mov
dec
imul
shll
xchg
movsb
cld
frstor
push
cmpsb
clc
xchg
fsub
fsubrl
mov
fidivrl
repz
xchg
enter
ficoms
fmul
mov
inc
lods
inc
mov
add
mov
mov
add
sbb
mov
mov
outsl
pop
ljmp
into
adc
sbb
in
xchg
jo
xchg
adc
aaa
rolb
call
mov
pop
mov
or
leave
push
outsb
push
aaa
call
out
lds
sbb
sub
sub
sub
mov
aam
or
in
adc
dec
and
sbb
jae
shlb
test
xchg
stc
mov
xor
sub
jmp
lcall
push
test
jae
pusha
ss
sbb
sub
out
aam
sbb
xchg
adc
mov
int3
lea
divl
and
arpl
xchg
ret
pop
cmp
mov
enter
aam
into
sti
fld
dec
push
fstl
cmp
jo
mov
mov
sub
push
mov
movsb
pop
and
ret
mov
pop
pop
xchg
jb
sbb
outsb
daa
sub
push
movsl
adcb
cwtl
push
mov
jmp
pusha
dec
and
pop
fnsave
out
mov
adc
sbb
mov
filds
push
popf
xchg
aas
mov
push
sbb
ja
cmp
sub
rorl
xor
nop
adcl
addr16
jno
loope
push
lods
sbb
mov
aas
push
xchg
ret
stos
iret
cmp
mov
sbbb
cmp
sbb
stos
jecxz
dec
push
or
jb
call
xor
and
repz
stc
daa
cli
adc
push
or
out
xchg
add
or
rolb
fcomps
stos
leave
dec
pop
stc
jno
loope
sahf
in
gs
dec
out
fstpl
loope
jle
in
push
mov
add
cmc
inc
mov
jnp
daa
and
in
inc
jae
push
arpl
jno
inc
inc
xchg
fadds
stos
ret
and
cmc
inc
ret
xchg
push
sbb
pop
xchg
jmp
mov
daa
movsl
bound
xchg
hlt
mov
xchg
xchg
mov
lahf
push
mov
cmpsb
inc
mov
adc
cmpsb
into
xchg
sub
call
cltd
add
sahf
negl
adc
push
arpl
std
jo
jp
xlat
cmp
push
adc
outsl
rol
movsb
pop
pop
rcrl
scas
mov
icebp
aad
sbbl
jecxz
cmp
rolb
adc
add
push
jl
mov
inc
jmp
call
pusha
jbe
lods
movsl
data16
xor
outsl
fnstcw
cld
in
and
xor
bound
dec
pop
sub
mov
mov
xor
es
pop
mov
and
daa
mov
imul
lret
lds
push
sub
jmp
add
aas
mov
ret
add
fsts
mov
and
jno
add
add
out
push
jecxz
inc
and
cwtl
xor
xchg
shlb
push
mov
nop
dec
push
cmp
and
fcomps
and
mov
adc
and
sahf
js
aam
dec
mov
sahf
mov
fsub
jmp
mov
mov
mov
push
sbb
stos
and
mov
lcall
mov
mov
sbb
fdecstp
pop
cmc
loope
lret
fsubrs
add
push
sbb
mov
mov
test
icebp
dec
pop
fsqrt
cmpsl
push
fmull
cs
rorb
int
cld
inc
fisttpll
test
add
xor
and
jno
jp
neg
or
inc
fbld
adc
mov
out
rcr
jle
jmp
imul
aaa
pop
pop
out
nop
stos
and
cwtl
mov
xchg
mov
out
fldl
xchg
rcrb
scas
shll
fs
mov
add
in
cmp
mov
cmp
add
sub
out
roll
jmp
mov
adc
fnstcw
aam
popf
inc
les
dec
out
dec
mov
imul
lcall
fwait
dec
mov
les
jns
pusha
jle
push
stos
xlat
dec
fstpt
testb
cmp
jae
lock
xlat
dec
notb
xchg
sti
sbb
loop
in
sbb
andb
and
dec
cwtl
pop
scas
repz
hlt
cmpsl
hlt
cmc
xchg
popf
jmp
xchg
stos
loope
cmpsl
data16
pop
out
aam
jmp
hlt
xchg
popa
addr16
or
jg
xchg
ret
push
pop
out
iret
fcoms
cltd
hlt
jmp
mov
pop
outsl
ja
test
pop
xchg
dec
fcmovb
ja
mov
sub
ljmp
les
in
clc
pop
sub
int
add
add
push
mov
inc
outsb
pop
mov
rcrl
jmp
popf
push
movsb
jmp
inc
lds
xorb
fwait
jl
push
addr16
mov
mov
or
aaa
sub
test
mov
loop
dec
dec
into
mov
xchg
inc
xchg
ds
ret
mov
mov
cmp
inc
xchg
scas
push
inc
xchg
jl
fwait
popl
xchg
dec
push
das
sbb
mov
push
out
stos
test
stos
sar
jns
xor
add
inc
push
add
pop
mov
inc
in
shlb
sub
inc
std
push
test
inc
pop
or
int
and
push
adc
idivl
cli
jp
mov
sbbb
pop
shlb
xlat
mov
insb
mov
mov
or
xor
add
sbb
insl
mov
insl
dec
xchg
xchg
push
pop
aaa
or
xchg
adc
sub
mov
test
mov
out
or
inc
lods
mov
add
xor
mov
movsl
sti
pop
xor
loopne
xor
xor
negl
mov
adc
cmc
cld
pop
push
ljmp
adc
pop
push
xorl
test
ljmp
jns
leave
stc
out
movsb
push
sbb
mov
mov
in
add
add
inc
imul
std
jmp
or
out
lcall
mov
in
int
mov
xchg
pop
sub
shll
aas
pusha
sub
es
xchg
repz
repz
push
and
out
mov
arpl
stos
sub
mov
mov
or
es
pop
mov
hlt
shrb
mov
ss
fsubrs
lahf
outsb
mov
jns
mov
mov
idivb
aam
rclb
test
test
rcl
add
cwtl
psubd
pop
or
push
imul
aas
cmc
roll
adc
cmp
ret
jge
jp
rorb
sub
in
ret
mov
jbe
inc
imul
lds
mov
stc
sbb
mov
fwait
cmpb
inc
mov
cs
cs
insl
insb
sub
cmp
cmpsl
mov
leave
outsl
inc
xchg
dec
or
aaa
jp
dec
adc
sar
test
xchg
push
xor
cmpsb
adc
or
nop
add
fildll
sbb
fs
popa
mov
popa
mov
sub
repz
inc
or
cmp
push
mov
cmc
loop
sysret
sub
icebp
push
fmuls
xchg
push
int
shll
pop
into
xor
inc
push
mov
mov
aam
jnp
xchg
xor
pushf
mov
rcrl
cmp
in
push
cmp
cltd
ret
pop
imul
or
fldenv
popa
in
sbb
sbb
xchg
or
or
ret
sarl
cltd
shl
sahf
iret
lcall
repnz
sbb
insb
shlb
mov
push
adc
idivl
push
std
adc
push
push
push
sub
inc
mov
cmp
mov
add
add
gs
jg
rcrb
jne
mov
sbbl
or
cld
aam
or
jecxz
jne
repnz
and
lret
or
pusha
jp
sub
addr16
mov
mov
pop
int
cmp
fnstcw
push
and
add
inc
or
je
sti
movsb
mov
sub
jg
lret
jge
cwtl
jg
nop
sub
mov
mov
mov
packsswb
mull
imul
pop
push
fistpll
or
jge
aaa
inc
adc
stc
xlat
jne
xor
dec
mov
cld
mov
shll
and
sub
xchg
mov
push
or
je
push
je
and
jmp
sti
cs
mov
js
push
jle
leave
in
insb
inc
sbb
or
mov
inc
jg
out
sub
add
movb
loope
inc
add
pop
lahf
aaa
shl
dec
jno
adc
popa
or
and
xor
jb
or
in
or
loopne
outsb
and
adc
sub
mov
testl
jo
xchg
gs
rcrb
mov
or
leave
cmp
mov
decb
mov
or
lock
pushf
or
sbb
in
jge,pn
xchg
xlat
adc
addr16
das
pop
sbb
jb
xchg
into
sahf
mov
dec
bound
sti
adc
push
and
jne
adc
pushl
cmp
xor
xchg
int
test
adc
movsb
fsub
jecxz
cli
dec
nop
and
push
shrl
xchg
mov
and
cld
outsl
pop
call
cltd
scas
mov
xchg
sub
iret
cmp
xchg
mov
out
dec
add
incb
dec
pop
test
lahf
popa
fdivs
dec
push
xchg
iret
jae
jbe
loopne
sub
sahf
fcoms
stc
inc
sub
sbb
insb
ljmp
mov
mov
xchg
mov
scas
out
into
inc
jecxz
pop
inc
mov
pop
lahf
add
inc
mov
mov
icebp
clc
fsubp
dec
mov
jmp
cmp
mov
push
xor
add
lret
mov
xor
push
addr16
push
mov
lds
jle
xlat
and
call
in
dec
mov
adc
push
stc
out
icebp
mov
mov
xchg
push
push
aas
jl
in
xchg
push
push
mov
cmc
cmp
std
pop
call
jns
ja
stos
sahf
fsubp
mov
mov
ret
or
std
sub
les
dec
ss
xor
lock
mov
les
pushf
xchg
test
jecxz
loopne
movsb
add
in
scas
in
ret
fs
mov
xor
mov
inc
in
jne
mov
lds
inc
cmp
push
sbb
dec
lret
pop
testb
or
int
jnp
sbb
xor
inc
cmp
hlt
xchg
sub
mov
add
dec
or
inc
xchg
cmpsl
mov
adc
push
loope
mov
je
popa
xchg
jmp
jl
mov
ds
push
mov
add
loop
mov
int3
xchg
pop
push
scas
xchg
dec
ja
inc
sarl
cmpsl
push
dec
mov
pop
in
dec
je
and
hlt
int3
mov
mov
mov
xchg
sub
and
or
aaa
xor
lds
xchg
push
jle
cmp
adc
mov
ss
cmpsb
mov
xchg
mov
fdivr
imul
mov
push
dec
out
popf
jns
and
int3
or
mov
test
add
insb
mov
mov
fxch
jle
inc
sub
dec
test
sbb
mov
and
sbb
cmpsb
bnd
sub
std
lahf
xor
mov
adc
cltd
test
out
sub
xchg
js
fisubrl
mov
or
mov
lds
lcall
mov
sti
xchg
insb
dec
dec
ret
adc
or
push
push
clc
add
adc
cli
loopne
mov
sbb
cmpsb
into
fistpl
adc
shll
out
stos
subb
shl
push
ret
imul
cmp
add
sbb
jmp
loope
sbb
scas
pushf
mov
movsb
cmp
ret
ret
cltd
jne
jl
pop
pop
jge
aaa
push
xor
mov
and
stos
xchg
mov
pushf
sub
mov
lock
test
adc
push
mov
sti
xchg
inc
sbb
add
andb
cmp
ficomps
fwait
xor
int3
lahf
adc
and
jae
pop
adc
pminub
push
iret
lcall
pop
popa
mov
lahf
push
pop
imul
push
jmp
add
push
push
xrelease
inc
adc
in
mov
imul
int
jp
pop
jg
xchg
and
mov
test
fistpl
rolb
lea
push
push
out
inc
mov
sbb
jle
sub
add
push
push
sbb
xchg
sub
fstps
push
cmp
cmp
adc
sbb
lahf
jae
fcomps
and
stc
push
fwait
cmp
lret
loopne
cld
pop
imul
dec
leave
dec
jle
stc
add
sub
sub
dec
jl
lods
push
jns
iret
jle
push
push
push
jns
lock
fisttps
lret
jae
adc
xchg
inc
pusha
ds
aad
sbb
sbb
ret
pop
add
popf
in
enter
andb
pop
fbld
lods
mov
fidivrl
xchg
cmpsl
fisttpll
xchg
test
das
repz
clc
call
aaa
and
sbb
popa
rorb
push
incl
cmpl
test
ret
pop
aad
adc
aam
xchg
dec
add
lods
sub
jbe
fdiv
mov
xchg
and
dec
je
xchg
xchg
repnz
inc
mov
mov
shrl
push
repnz
icebp
int3
pop
pop
xchg
sub
ja
sbb
in
dec
test
inc
and
mov
jl
popf
js
cwtl
and
dec
xchg
fstpl
push
add
and
in
xchg
adc
insb
adc
and
int3
clc
aam
inc
aaa
stc
sub
mov
test
cs
lret
mov
es
jns
mov
stos
sarl
jge
dec
lahf
xor
cmp
mov
jp
es
mov
jmp
jae
cmp
mov
mov
lock
jns
inc
fsubl
lahf
jmp
sub
rorl
add
push
dec
popf
adc
or
iret
clc
or
das
and
mov
cmp
or
and
pop
movsb
iret
arpl
xor
scas
jb
jg
mov
cld
cs
sbb
bound
fsubrs
pushl
loope
mov
loopne
lahf
stos
jge
gs
push
movsb
pusha
or
add
inc
jle
cmc
jg
jne
lcall
cmp
mov
xchg
dec
add
fstpt
scas
orl
add
xchg
push
mov
xlat
js
dec
clc
push
xchg
cmp
sub
dec
aaa
ret
ja
outsb
xchg
roll
pop
inc
or
out
fldenv
sub
pop
sub
xchg
out
aas
adc
mov
rcrl
xchg
mov
inc
pop
and
mov
sti
cmp
imul
test
outsl
repz
mov
push
mov
and
lcall
jl
js
jmp
jno
std
test
in
adc
push
push
pop
outsb
sub
mov
fdivl
les
dec
pop
xor
sub
pop
push
out
sbb
xchg
dec
lea
push
cmp
imul
and
and
ljmp
or
nop
push
outsb
mov
imul
imul
fnstenv
mov
inc
rclb
cmp
sbb
pop
jl
lcall
lea
das
adc
add
jne
lea
sbb
ds
out
stos
iret
mov
gs
cmp
cltd
xchg
cmp
adc
lods
in
jmp
inc
rcrl
and
inc
aam
adc
imul
mov
cmpl
push
sahf
enter
mov
testl
push
lret
or
mov
lods
movsl
neg
fs
sub
mov
mov
mov
jae
rclb
lock
loope
jl
cmpsb
sti
add
inc
cld
stos
lods
popl
test
ljmp
cmp
jno
outsl
inc
push
sub
arpl
add
shrb
inc
or
sti
mov
out
mov
lods
lea
mov
inc
aad
and
daa
mov
inc
push
cmpsl
sub
lret
fwait
jno
pop
icebp
xlat
gs
scas
xchg
ja
aas
mov
les
cmp
ljmp
repz
cmp
xor
push
outsb
adc
andl
jae
add
test
rcl
sub
mov
and
jns
int
push
add
mov
push
popl
xor
repnz
jge
leave
sar
mov
xor
pop
je
jo
xchg
jns
or
add
fcoml
add
cs
xor
jo
cmp
mov
xor
sub
repnz
jmp
scas
pop
iret
mov
xlat
mov
mov
jns
and
arpl
ja
daa
dec
jg
add
lock
sub
sub
out
jb
rcll
cli
aad
mov
lret
repnz
pop
push
pop
mov
cld
sub
fcomps
data16
mov
ljmp
xchg
fisubl
sub
test
js
pop
push
push
jmp
sarb
jbe
and
adcb
je
into
jecxz
add
mov
xchg
or
jg
das
cwtl
rcl
lock
mov
or
xlat
shlb
sti
jecxz
cmpsl
jno
jne
imul
xchg
cmp
lea
xchg
sub
fsubrl
ja
out
mov
aas
xor
and
dec
addb
iret
dec
or
pop
sub
ficomps
mov
xchg
dec
lea
ss
psllw
aas
repnz
adc
xchg
sub
cld
push
jmp
hlt
lds
imul
rep
push
pop
xchg
call
imul
push
and
cmp
pop
adc
lea
pop
in
mov
lcall
incb
push
jmp
mov
mov
aam
loop
xchg
xor
nop
pop
inc
sbb
mov
test
adc
loope
fists
xchg
mov
or
mov
dec
push
jo,pt
negl
lea
out
test
cmp
xor
movsb
cli
rolb
mov
xchg
jecxz
imul
pop
mov
fidivs
lcall
popf
add
push
lds
jns
loop
test
dec
jns
pop
xor
in
fcmovu
pop
sarl
repnz
lahf
inc
test
inc
lret
imull
out
sub
mov
mov
xchg
jno
je
sub
and
repz
sbb
adc
add
sbb
in
inc
ja
int3
lret
and
jecxz
pop
xchg
repnz
lret
sbb
leave
mov
sub
jae
adc
jo
mov
adcl
add
inc
dec
fadds
and
xchg
fidivl
and
jo
shl
fcompl
jae
pop
fnstenv
and
jbe
cmp
pop
push
push
ja
mov
test
scas
adc
xorl
aas
mov
lds
cmpsb
mov
xchg
mov
fwait
add
sarb
hlt
inc
flds
or
mov
adc
jne
push
inc
adc
dec
mov
shrb
pop
lock
test
mov
in
mov
lea
fwait
mov
mov
pusha
stos
xchg
xor
repz
dec
lcall
bound
jp
add
pop
mov
nop
popl
push
rcrb
stos
js
cmp
mov
andl
stc
adc
lcall
xor
out
sbbl
test
imul
pushf
sub
push
in
scas
mov
mov
xor
loope
clc
adc
sarl
pop
cmpsl
sub
je
push
inc
dec
inc
movd
adc
mov
jmp
pop
jmp
or
cs
ret
fsubrs
js
in
jle
aam
push
push
inc
aaa
fcomps
leave
pandn
addl
scas
sbb
push
andb
shl
and
dec
add
loope
dec
jnp
insb
jbe
fs
dec
arpl
cmp
xlat
pop
fstpl
xchg
outsb
rcll
cmpsl
mov
jo
mov
fdivrl
movsl
imul
cmpsb
xor
push
jecxz
loopne
movsb
popa
std
sub
jne
fildl
mov
xor
push
mov
ljmp
mov
xor
jno
mov
out
pushl
jg
and
lret
lcall
lock
ficompl
or
push
loope
sbb
data16
scas
dec
jge
adc
sbb
iret
inc
pop
std
mov
test
add
lea
xor
add
inc
clc
leave
push
sbb
cmp
or
ljmp
mov
pop
movsb
int3
jge
mov
cmpsl
mov
rorb
inc
and
sahf
ss
inc
cmp
cwtl
mov
loop
imul
lret
lds
stc
dec
xor
push
jno
ds
out
sbbl
maskmovq
idivl
push
xchg
add
push
cmp
popf
cli
aaa
fadds
shrb
ret
xchg
or
add
cli
inc
adc
dec
cli
nop
leave
int3
and
cmpsl
imul
clc
rclb
adc
jbe
xchg
add
dec
and
or
inc
leave
dec
jbe
ret
into
inc
mov
xor
fistpll
sub
xor
cli
insb
xor
daa
out
int
out
mov
push
shl
fisubrs
inc
sub
add
sbb
or
rcrb
cmp
pop
out
lock
insb
mov
sbb
loopne
loope
jns
cmp
cli
mov
pop
ret
xchg
mov
scas
dec
int3
aas
ret
outsb
fs
aas
xor
or
arpl
scas
pop
jmp
in
or
sbb
testl
push
rorb
lret
adc
shlb
pop
stos
pushf
inc
mull
cwtl
mov
in
and
jg,pt
sarb
add
in
hlt
cmp
testb
sbb
int
and
or
gs
out
pop
loopne
jl
sbb
inc
shrb
fldl
pop
les
add
cmpsw
inc
adc
je
aaa
xchg
in
pushf
rorl
sub
add
mov
add
sti
mov
adc
in
cmp
loop
cwtl
jns
xchg
arpl
fbld
xor
lock
sub
mov
mov
add
aad
xchg
inc
jp
lret
dec
stos
es
aas
add
out
xchg
out
out
leave
inc
in
sub
mov
in
shll
inc
out
mov
aaa
add
shl
mov
imul
sub
jo
data16
lods
mov
enter
jmp
dec
int3
jno
out
mov
iret
arpl
sbb
push
test
iret
das
arpl
cmp
inc
xchg
and
fsubrp
add
or
out
xchg
mov
sub
and
lods
lods
dec
and
push
jne
jecxz
dec
xchg
imul
int3
xchg
repnz
ds
mov
or
mov
cmp
jg
add
adcb
jb
xchg
lods
sbb
push
sbb
sub
fstpt
jnp
fbld
dec
sbb
or
dec
xor
shlb
push
jp
rol
xchg
mov
sub
shl
outsl
lcall
mov
cmc
adc
pop
loopne
aam
jnp
push
sub
aam
mov
insb
nop
movsl
popa
bound
mov
jne
cmp
inc
stos
mov
pushf
jne
cmp
cmp
inc
addr16
clc
loope
push
sub
mov
and
sahf
inc
mov
xchg
jp
push
ret
sti
stc
push
in
fisttpl
cld
lock
aad
daa
scas
lock
sub
push
sbb
cmc
mov
and
mov
les
int3
int
ficoml
es
cpuid
shl
sti
gs
and
pop
pushf
mov
sub
cmp
cmp
mov
sub
pop
cmp
and
inc
cli
push
incb
push
push
pop
push
adc
mov
loope
aad
xchg
addr16
iret
cs
cs
jno
add
cwtl
sbb
sbb
shrb
jecxz
inc
fadd
push
dec
inc
fldenv
outsb
xor
fstpt
sbb
jnp
adc
push
xchg
mov
ficoms
cmpsb
jns
or
push
hlt
push
loopne
fucomip
popf
or
in
push
or
test
add
push
and
mov
dec
loop
out
and
testl
add
and
loop
int3
popa
mov
cmpsb
scas
fidivrs
cwtl
sbb
jo
sub
sub
jge
sarl
jp
in
sbb
sub
repz
jecxz
mov
inc
in
lods
ja
pop
dec
nop
iret
and
sbb
fisttpll
add
loope
sbb
stc
outsl
cli
xchg
fdivr
and
mov
xor
adc
stc
lret
fmuls
imull
mov
ja
cmp
lods
int3
fsubl
pop
mov
cli
push
out
ljmp
repnz
mov
adc
test
adcl
fisubl
frstor
mov
loop
subb
jle
call
lret
mov
lods
cmpsl
jle
lods
dec
push
test
adc
push
sbb
cmp
sub
xchg
aam
xor
sbb
sti
les
jmp
and
jge
outsb
dec
test
adc
jne
ja
fs
xchg
or
mov
mov
jb
shr
rcr
mov
dec
or
dec
mov
enter
mov
add
dec
sarw
xlat
cmp
and
cli
stc
sub
mov
sbb
inc
rolb
lret
imul
cmpsb
sbb
rcrl
jae
or
mov
mov
lock
outsl
or
inc
pop
out
fwait
pop
adc
ja
jecxz
mov
mov
fidivrs
sub
and
gs
cmc
sub
dec
int
cwtl
sbb
add
out
in
mov
call
call
mov
or
shlb
dec
ret
shr
mov
jnp
mov
mov
xor
popf
cmp
cmp
in
stc
or
lcall
lock
and
stos
push
stos
fmulp
jmp
adc
sbbb
stos
roll
filds
and
inc
sbb
je
mov
push
ljmp
jmp
test
jmp
js
fnstenv
das
outsl
mov
in
ror
xor
push
mov
fstp
fdivs
and
and
jl
outsl
xchg
enter
inc
push
mov
push
fstpl
cmp
pop
fwait
mov
imul
cmp
mov
cmp
fwait
js
jmp
add
imul
bound
jb
andl
and
dec
stos
andb
gs
cmc
jnp
push
es
add
out
or
movsl
push
stc
or
pushf
data16
mov
fdivrl
addr16
push
mov
lahf
sub
cltd
idivl
xchg
int
fimull
push
in
call
push
aad
fimull
test
mov
inc
das
add
into
adc
sub
out
pop
pop
jl
pop
cmpl
mov
shlb
jmp
and
jmp
imul
mov
mov
mov
adc
enter
je
movsb
ja
out
sbb
fsubp
pop
adc
int
insb
cld
mov
push
dec
and
xchg
jns
jge
scas
and
mov
aad
dec
iret
arpl
xchg
test
pop
dec
ret
mov
lahf
inc
inc
add
pop
push
enter
jle
das
mov
movsl
adc
enter
insl
stos
les
icebp
int3
mov
addb
in
sub
jge
gs
jnp
jns
out
fs
cs
cmpb
test
imul
js
lds
hlt
shrb
call
inc
mov
adc
fs
fiadds
popf
xor
xchg
xchg
cmp
or
or
out
pop
aas
std
sbb
sub
jbe
outsl
in
and
pop
inc
push
enter
sub
test
xlat
sbb
stos
pop
mov
jl
and
pop
push
mov
mov
add
cmp
lods
push
sbb
test
daa
inc
mov
stos
lock
cmp
test
pop
pop
xorb
mov
fstps
and
data16
pop
pop
jle
jle
outsl
fldl
ffree
imul
or
xchg
mov
frstor
hlt
orl
mov
cld
incl
add
aaa
push
jne
ds
decb
lret
push
in
rcl
adc
ss
pop
push
mov
jl
lds
xchg
pop
fmul
mov
cwtl
mov
jg
je
push
inc
fstps
gs
xlat
xor
pop
pop
jmp
fisttpl
or
push
or
pop
jg
scas
xchg
mov
and
add
aas
sbb
adc
mov
dec
popf
stos
data16
and
fwait
jecxz
rcr
xchg
xchg
rsm
or
lock
mov
aaa
shr
in
jmp
mov
mov
dec
sbb
jge
fadds
ds
out
sub
xor
fistl
cmc
add
test
push
fwait
adc
mov
popf
push
jbe
iret
repz
push
test
jp
shlb
popa
mov
mov
loopne
inc
push
push
outsl
cmc
test
adc
xchg
lea
add
inc
dec
outsl
pushf
int
fstl
int3
dec
xor
sbb
cs
adc
push
cmpsl
lods
sub
ret
jmp
lds
out
ret
idivl
add
push
dec
push
movsl
dec
cld
or
jge
pop
daa
loop
cmp
out
bound
insb
lret
stc
fwait
adc
inc
arpl
pop
sbb
jmp
lret
mov
stos
sub
adc
xchg
push
jbe
pusha
idivb
push
cmp
add
xlat
mov
fadds
pusha
or
ss
adc
daa
mov
gs
pushf
or
test
aaa
rorb
xchg
add
adc
hlt
adcl
in
cld
scas
loope
mov
xchg
rcrb
fcompl
test
fisttps
mov
popa
push
negb
xor
dec
pop
cs
bound
mov
or
fnstenv
xor
xor
mov
data16
inc
pusha
push
pop
ret
or
inc
gs
je
addl
fwait
xor
mov
cmpsb
inc
imul
inc
cmp
scas
test
push
daa
std
or
mov
xchg
mov
fldcw
fildl
cmp
mov
mov
jmp
out
je
jae
dec
sub
ds
mov
push
repnz
ljmp
popa
and
inc
in
dec
loope
mov
cmp
sub
iret
aam
inc
inc
cmpsb
popf
mov
dec
inc
mov
out
sub
or
mov
lock
cmp
dec
data16
push
data16
adc
fidivrl
iret
arpl
into
movsl
insl
fdivs
fcoms
fstps
scas
jp
nop
lahf
clc
dec
adcb
xor
push
call
mov
pop
test
aas
cmp
hlt
dec
adc
int
nop
fwait
popf
scas
popf
loopne
repnz
stc
lret
loope
scas
push
mov
mov
mov
mov
loop
js
mov
push
mov
push
jecxz
gs
jns
xchg
pop
ljmp
into
leave
aas
fsubrs
shlb
mov
dec
inc
xchg
fadd
xchg
push
pop
and
addr16
call
xlat
aam
loopne
outsl
test
mov
aaa
sbb
inc
imul
loope
in
cmp
shlb
jne
repnz
cmpsl
or
mov
in
aam
mov
ficomps
mov
fwait
insl
and
adc
fisttpll
movsb
inc
ficomps
and
gs
rolb
mov
data16
add
mov
cmp
push
jle
xor
sub
mov
push
bound
jle
fildll
insl
mov
add
test
adc
jmp
mov
stos
mov
or
mov
xchg
sbb
sahf
lods
in
cmp
mov
gs
jle
sbb
iret
lret
push
fnstcw
xchg
jle
addb
xchg
movsb
cmp
push
adc
xorb
push
cmp
sahf
in
fldenv
xlat
or
jle
sbb
pop
mov
sub
push
jno
xchg
jl
jp
sar
mov
in
jne
xchg
cmpsl
mov
adc
aaa
sar
dec
out
sbb
fisubrs
test
mov
pop
sub
fdivs
mov
pushf
mov
lcall
dec
push
shr
inc
popa
stos
ret
and
jb
jle
pop
inc
adc
mov
and
dec
les
jl
test
push
movsl
pop
dec
sahf
imul
mov
add
cli
mov
mov
mov
adc
fwait
test
xor
cmp
lret
add
inc
push
sti
mov
mov
jo
loopne
dec
stos
add
adcb
dec
lods
xchg
call
out
lock
std
imul
pop
lret
rcrb
jp
movsb
cltd
leave
push
cwtl
movsb
or
pop
and
adc
loopne
xor
mov
gs
mov
fidivrl
add
xchg
dec
xchg
pop
cwtl
hlt
cmp
mov
push
cltd
mov
ljmp
push
hlt
ljmp
dec
pop
cmp
mov
mov
cli
call
cmp
adcl
mov
cmp
std
or
dec
clc
cmp
cmp
adc
xchg
decb
mov
test
dec
in
push
fldl
add
fnsave
subl
ret
cwtl
mov
pusha
out
jnp
xchg
dec
xchg
push
addr16
dec
lock
or
sti
lds
std
loope
sbbb
ds
lcall
icebp
pop
push
shrb
mov
adc
xor
test
adcl
pusha
dec
shlb
cmp
repnz
mov
mov
pushf
xchg
mov
jp
fbstp
xor
mov
ret
push
mov
mov
mov
shrl
dec
shlb
inc
and
inc
jne
cs
repnz
jp
je
add
shll
mov
dec
aas
les
popf
mov
idivb
push
push
lret
in
fsts
stos
out
in
cld
fiaddl
pop
in
xor
fwait
sub
test
aas
xchg
fwait
out
bound
in
aaa
mov
pop
fcomps
test
inc
adc
imul
sbb
adc
int3
xchg
add
sti
jae
mov
imul
into
cli
loopne
pop
fadd
dec
xor
xchg
jmp
mov
loop
pop
sub
xchg
adc
sub
and
in
pusha
pushf
sbb
popa
pop
jmp
mov
lahf
stc
sub
test
in
xor
jnp
subl
pop
sbb
xor
outsl
mov
mov
inc
dec
fadd
test
into
mov
cltd
inc
add
mov
xchg
mov
inc
insl
push
pusha
pop
mov
pop
mov
sbb
jae
sub
pop
fisubs
pop
mov
cltd
loope
addr16
jecxz
inc
cmp
sub
xchg
sbb
das
fwait
pop
movsb
inc
push
int
mov
pop
stos
nop
ret
int
fnstenv
test
pop
into
lods
daa
xorb
cmp
push
test
rorb
cmpsl
jecxz
je
mov
pop
jl
add
and
pop
insl
push
out
leave
std
jl
icebp
xchg
lods
mov
jl
into
enter
xchg
popa
mov
inc
gs
pop
fistl
xchg
adc
lock
xorb
loopne
in
shll
movsb
fs
int3
inc
lds
xor
xchg
inc
or
pop
hlt
pop
xchg
call
enter
arpl
movsl
push
cmpsb
clc
nop
data16
mov
not
sysret
std
pop
mov
ss
lret
sub
sbb
push
loope
mov
sub
jge
insb
or
pop
stos
repnz
mov
push
mov
bound
push
in
adc
push
or
andl
push
add
inc
sbb
lret
cmpsl
cmp
pop
mov
xchg
imul
xchg
jns
aaa
add
sbb
pop
ds
xor
shl
lret
push
sbb
dec
adc
lea
movsb
xor
cmp
bound
sbb
les
push
or
lahf
es
aaa
shll
mov
in
movsb
sbb
jl
sbb
int3
inc
inc
add
aam
insb
jp
movsb
xchg
shrb
pop
xor
test
sahf
inc
shlb
pop
xchg
cld
daa
push
repz
out
sarl
arpl
stos
push
insb
cltd
push
daa
stc
sbb
js
push
cmp
lock
adc
std
add
insl
out
dec
insb
jns
or
and
outsb
cmp
xlat
inc
dec
rcrb
call
sub
stc
and
or
scas
imul
sbb
sbb
adc
xor
xchg
push
or
hlt
ret
aam
sbb
fnstsw
js
pusha
xor
push
sub
rorl
cmp
or
lahf
shrl
mov
daa
pop
addb
lcall
movsl
cs
cmp
pop
and
test
xchg
outsl
es
cmp
outsb
pop
adc
movsb
push
lcall
iret
shrb
fdivs
mov
pop
mov
mov
es
push
adcb
fcom
push
mov
es
push
mov
xor
sub
mov
xor
sub
adc
sbb
pop
jge
sub
push
xor
mov
test
scas
loop
cmp
add
push
mov
hlt
rol
testl
insb
jmp
sub
cltd
call
and
test
pop
push
popa
push
scas
leave
mov
adc
mov
out
and
sub
push
xor
ret
inc
push
ret
in
jb
add
in
mov
push
pop
fimuls
and
inc
enter
adc
repnz
cmp
sbb
mov
out
aas
push
mov
sub
outsl
lret
inc
loope
repnz
lods
or
sub
pop
dec
jno
std
push
push
out
mov
mov
daa
jae
popa
sbb
xchg
ret
xor
cmpsb
aad
pop
fisubs
xchg
mov
rorl
cmpb
cmp
stos
xor
pop
test
ss
xchg
ror
daa
mov
mov
pop
mov
ret
jno
ror
jae
fildl
xchg
adc
push
mov
gs
push
stc
dec
int
mov
inc
inc
sbb
imul
lahf
sub
adc
loope
fadd
push
fst
and
push
sub
sbb
xchg
xor
cmpl
pop
popf
popa
push
cwtl
in
cltd
leave
add
cld
test
xchg
xchg
pop
cmp
out
push
fst
cmp
push
jnp
jbe
sbbb
lahf
fimull
imul
xor
mov
je
jb
leave
jbe
mov
cmpsl
jecxz
xor
nop
call
and
movsl
inc
insb
inc
cmp
out
stc
pop
iret
inc
cltd
test
push
and
mov
sbb
jg
jno
mov
mov
xchg
insb
pop
push
cmc
pop
cld
jecxz
cmpb
jo
xchg
into
sbb
pop
inc
add
add
pop
lods
insl
or
out
ljmp
repz
sbb
xor
xchg
sbb
jge
aas
arpl
add
xor
fdivrl
mov
push
jnp
aam
rclb
sahf
jbe
out
mov
xlat
xor
cltd
out
js
fildl
push
arpl
dec
adc
inc
or
xor
push
scas
xlat
lahf
in
xchg
xor
std
stc
lcall
inc
sub
cmp
add
addw
notl
fstpt
jge
test
out
mov
sahf
lods
test
testb
jp
cmp
sbb
mov
pop
out
cmp
mov
push
cmc
gs
mov
pop
dec
inc
cmpsb
std
sub
xor
arpl
jle
pop
adc
call
dec
jmp
push
mov
roll
mov
sbb
ds
leave
add
scas
mov
cwtl
and
shrl
insl
and
iret
add
mov
scas
mov
push
cwtl
lods
dec
adc
mov
and
pop
in
test
in
shll
push
aas
lret
push
enter
cs
ja
xchg
sarb
xlat
xchg
jmp
in
lock
push
jns
lds
into
jp
icebp
push
test
push
mov
sub
je
jl
ffree
roll
sbb
pop
out
jne
aas
push
hlt
jae
sbb
jns
test
jae
pop
int3
jnp
mov
out
pop
and
add
sub
or
inc
and
nop
dec
test
in
je
push
jg
push
jge
loopne
mov
pop
stc
roll
lret
ficoms
adc
insl
inc
dec
aas
dec
mov
xor
mov
push
push
shl
decl
lods
inc
xchg
lods
jg
out
jp
inc
outsb
addr16
inc
cltd
testb
xor
push
adc
aam
xor
mov
bound
mov
and
mov
scas
xchg
test
dec
bound
sub
das
mov
sbb
lods
fmull
or
mov
call
stc
mov
lret
add
outsb
lahf
sarl
fst
mov
ficomps
cmp
pop
shrb
faddl
js
jbe
adc
jecxz
cmpsb
out
push
cmpsb
inc
cmc
push
mov
inc
pop
sbb
push
int3
sarb
sbb
cmpsb
xor
inc
fiaddl
jnp
sub
loope
in
pop
pop
fildl
sub
arpl
or
shlb
mov
inc
adc
imul
xchg
movl
jmp
jmp
cmp
out
sub
jle
xchg
cld
and
lret
jle
push
in
sub
jmp
xlat
out
lds
sti
jne
sub
stos
shll
in
push
fiaddl
sbb
xor
aam
or
mov
add
push
das
dec
arpl
out
push
rorl
into
push
inc
and
sbb
lds
test
das
bound
outsb
or
mov
inc
xorl
pop
in
cmp
pop
inc
pop
adc
mov
fcoml
es
or
cmp
test
das
out
sbb
xchg
ja
fsubs
pop
test
int3
lret
popa
push
pop
aam
jo
dec
dec
pop
lcall
push
addr16
xchg
es
mov
add
fwait
inc
sub
cmc
dec
imul
mov
sbb
jns
test
lcall
dec
pop
jne
push
sbb
xchg
and
call
into
jno
div
repz
rorl
out
xchg
ret
xor
pop
fsubr
mov
mov
or
pop
stc
inc
outsl
es
pop
jbe
loopne
jl
sub
mov
adc
cmp
cmp
pusha
test
out
cmp
into
jb
mov
enter
std
movsb
sub
inc
lcall
xor
xchg
shr
das
jmp
jae
mov
aas
in
fstl
fld
iret
insl
sub
and
mov
outsl
pusha
sbb
shll
jp
shlb
inc
pop
fsts
sbb
xchg
mov
dec
pop
inc
lret
xchg
push
sub
jge
nop
lret
icebp
jmp
mov
add
dec
repnz
divb
out
push
push
out
in
adc
popf
stos
sub
add
ret
pop
mov
push
jne
mov
mov
mov
xor
xlat
xor
shll
inc
ja
dec
popf
out
push
std
lods
adc
jp
mov
add
dec
lods
jg
cmp
mov
mov
cld
xchg
adc
jo
icebp
adc
outsb
mov
lret
ret
out
pop
shll
xchg
iret
mov
inc
stos
push
jmp
jnp
ret
enter
mov
mov
lods
mov
mov
test
jae
sbb
in
orb
aaa
lcall
add
push
out
mov
cmc
jp
sub
push
es
ret
dec
fistpl
jl
sub
lea
sbbb
cmp
nop
sbb
adc
into
xchg
xchg
fisubrs
push
pop
fcompl
jl
add
sub
push
and
or
dec
push
xor
jge
cmp
loopne
in
push
int3
ret
aaa
cmp
mov
in
pop
inc
sub
fsubr
mov
jg
data16
push
bound
ja
sub
xor
scas
mov
ds
inc
dec
xor
sahf
scas
jl
insl
inc
pop
and
mov
mov
std
das
out
jb
mov
xchg
mov
mov
idivb
dec
push
mov
sbbb
pop
and
sbb
sub
jl
in
sub
rcr
mov
cli
faddl
adc
push
jae
mov
pop
outsl
cld
sbb
adc
daa
shrl
jl
jp
lret
xor
test
rcrl
ljmp
bound
lahf
sbb
clc
mov
xor
in
sbbb
jp
ss
dec
cli
jnp
push
test
cmpsl
popa
fidivrl
loop
adc
add
incl
repz
sbb
in
test
cld
push
repz
jae
sub
int3
jbe
dec
pop
sahf
jecxz
dec
lods
imul
sub
cmp
ljmp
or
xor
fcmove
cmp
push
cwtl
leave
aaa
cmp
sub
pop
xchg
lret
mov
outsb
lahf
xchg
sub
ficomps
dec
lret
pop
pop
out
pop
push
das
mov
outsl
addr16
sub
sbb
sbb
pop
xchg
call
jae
fbld
xor
stos
in
jp
fimull
jb
fcoms
mov
fsub
push
int
ss
aas
xor
push
lods
inc
push
je
enter
jae
outsl
aas
xchg
mov
xchg
adc
stc
gs
add
aaa
out
lcall
mov
aas
jo
sub
std
enter
scas
lret
mov
test
inc
add
aaa
sbb
xchg
mov
lahf
fmull
lahf
jl
xchg
fstl
push
popa
sarb
movsl
fs
mov
pop
inc
jbe
push
sti
notl
dec
cvtpi2ps
push
fwait
or
xorb
pop
dec
pop
mov
aad
mov
gs
jecxz
fs
and
or
or
addr16
or
out
icebp
add
cld
mov
or
push
repz
sbb
pushf
dec
jmp
pop
mov
xchg
insl
push
inc
lods
rep
movsb
adc
dec
loope
mov
das
dec
jl
jg
push
push
push
push
sbbb
push
sbb
inc
in
inc
rcrl
xor
cmpb
push
cmp
lret
fmull
icebp
cltd
dec
cmpsb
push
inc
sub
mul
inc
adc
int3
pop
testb
mov
xor
inc
sbb
into
cmc
mov
imul
test
inc
mov
leave
out
jb
dec
je
mov
xchg
cmpb
and
cmp
into
shrb
int
jne
sbb
movsl
jle
sub
test
jb
adc
dec
push
popf
lcall
out
pop
mov
add
xchg
jp
filds
mov
ss
lds
add
pushf
push
or
cmp
rol
push
xor
pop
fwait
mov
cmc
push
xorl
xchg
mov
cmpps
xchg
aaa
les
nop
xchg
xlat
xchg
insb
in
imul
into
xchg
pusha
imul
test
sti
fiaddl
mov
es
shlb
push
jecxz
rorl
and
push
inc
jbe
fmull
mov
sub
fs
inc
lahf
andl
test
xchg
ret
fmull
stc
mov
inc
fs
daa
movsl
mov
sbb
or
inc
loop
mov
cltd
xchg
mov
pop
or
jno
das
add
mov
xor
cmc
jmp
mov
jl
sub
lea
in
adc
pushf
in
or
push
dec
cmpsb
mov
pop
sbb
push
sbb
add
push
testb
stos
xor
sub
xchg
cmp
and
into
mov
enter
or
xor
aam
outsb
jnp
and
in
cmpsl
daa
sbb
imul
enter
mov
testl
inc
or
jo
cmp
in
imul
testb
jmp
addl
stos
xchg
stc
inc
je
push
andb
stos
or
dec
daa
cmp
rcll
movsb
js
out
jne
adc
out
pop
or
movsl
xorl
je
dec
mov
and
or
or
add
or
das
and
dec
dec
mov
and
in
aas
nop
mov
push
sbb
cltd
mov
lods
jp
xchg
push
or
push
fistpll
and
dec
cmp
rorl
das
or
stos
or
pop
movsb
sbb
fs
sbb
push
or
add
pop
imul
adc
jb
mov
fstl
cld
jmp
mov
mov
and
sub
cmc
test
sbb
cmp
mov
ret
daa
fadds
jg
out
xlat
xchg
sti
mov
or
cs
sub
in
mov
in
addb
cltd
popa
into
xchg
jmp
sub
and
dec
push
and
stc
fmulp
and
and
dec
push
popf
mov
imul
rcr
jb
sub
mov
push
pop
out
sub
cmp
jecxz
lret
sub
and
and
shll
jge
cmp
outsb
cli
fsub
cmpsb
iret
outsb
xor
inc
imul
dec
pop
int
outsl
push
xor
push
out
sbb
rcrb
iret
or
push
and
xor
jp
sub
std
push
dec
adc
inc
mov
cmp
inc
daa
inc
dec
adc
mov
sbb
out
xchg
scas
pop
dec
dec
divb
test
int
fdivrs
mov
movsb
push
mov
mov
add
sbb
cmpsb
cs
mov
xor
pop
xor
lea
pop
push
outsb
xor
mov
mov
out
xchg
inc
dec
jbe
lods
repnz
outsl
cmp
ja
xchg
call
and
das
inc
xchg
cmp
insl
lea
fdivrs
mov
inc
repnz
shrl
lods
and
xchg
pop
or
stc
mov
repnz
popa
mov
lret
mov
push
pop
nop
sub
pusha
xor
pop
push
inc
div
out
lock
pop
dec
sub
je
dec
lret
jmp
dec
inc
in
jbe
neg
dec
mul
adc
imul
and
push
aaa
sub
mov
loopne
pop
shll
es
test
imul
pop
ret
fildl
mov
into
adc
fwait
bound
out
jne
sahf
scas
lock
or
mov
fsin
je
outsb
cmp
push
popa
cmp
faddl
inc
es
sub
loope
xlat
dec
ret
repz
sbb
xchg
aam
out
lahf
cmpl
sbb
mov
test
leave
sub
push
fsts
xor
out
mov
movsl
sub
add
lcall
sub
xchg
jno
pop
out
mov
xor
mov
dec
jae
mov
jb
mov
mov
imul
stos
dec
jg
push
pop
gs
mov
das
fdivr
cmp
bound
decb
or
stos
push
mov
bound
dec
add
mov
xchg
repnz
pop
mov
add
sub
clc
mov
cld
idivl
mov
int
mov
and
fsubrl
pop
cmp
aam
fbld
rcrl
cmc
lds
and
xchg
pop
push
out
fsubrl
loopne
clc
sbb
inc
jns
negb
xchg
jge
cli
movsl
nop
xchg
cmp
cltd
sahf
lret
rorb
fsubrl
lock
aas
adc
cmpsb
aam
idivl
add
cli
dec
jp
mov
ja
cmp
cmp
xor
xchg
adcl
dec
xchg
sub
adc
es
loop
aad
das
gs
mov
sbb
test
inc
xchg
mov
sahf
mov
es
push
mov
decb
cmp
cs
sbb
in
adc
jl
outsl
repz
addr16
or
movsb
test
jns
mov
dec
popf
lods
in
mov
sahf
mov
insb
cmp
stc
std
jp
jge
jae
dec
pop
or
dec
testb
jno
ja
push
push
shl
ret
push
jb
push
sub
sbb
pop
fxch
pushf
add
bswap
hlt
xchg
and
hlt
movsb
sbb
pop
or
cmp
outsl
inc
pop
in
jnp
pop
mov
or
xchg
sahf
insb
insl
or
mov
addr16
in
xchg
jmp
cmp
adc
outsl
mov
test
dec
or
in
repz
test
xchg
dec
iret
xorb
mov
scas
mov
addr16
push
ja
xor
daa
insb
stc
scas
and
loope
test
mov
sbb
push
push
xchg
js
mov
adc
inc
data16
int
subb
fcoms
dec
loop
push
test
add
pop
in
bound
int
ljmp
jnp
fcmovbe
and
in
aas
decl
fimull
xchg
cli
test
sahf
pop
dec
imull
jae
loop
add
lret
and
icebp
loope
std
int
push
sbb
jl
pop
xchg
dec
fs
mov
dec
xchg
je
lea
pop
or
or
mov
aaa
in
cmpsl
mov
rclb
push
sbb
sub
xchg
cmp
std
fistps
pop
rclb
inc
out
dec
mov
inc
jmp
ret
lods
out
dec
mov
xor
out
sti
outsl
dec
pop
repnz
jp
adc
incl
sbb
call
arpl
outsl
lds
in
mov
js
int
lds
out
mov
mov
add
xchg
xchg
dec
add
add
lds
jno
mov
mov
mov
dec
mov
fildl
and
cmpsl
push
jbe
das
dec
aad
xor
push
jmp
push
mov
pop
mov
not
insl
xor
inc
jno
xchg
sahf
push
int
xchg
mov
mov
xchg
pop
jae
mov
pop
sbb
mov
enter
ljmp
lret
fwait
les
cmpsb
sbb
and
loopne
out
mov
push
scas
or
cwtl
mov
imul
xchg
pop
jecxz
test
icebp
pop
std
adc
repnz
fidivrs
cmp
xchg
loope
pop
jbe
js
loope
in
and
bound
mov
or
pop
xor
call
mov
shld
mov
ds
mov
or
sub
outsl
les
and
cmc
btc
mov
lods
pop
cmp
xchg
xorb
insb
in
ljmp
mov
out
jne
xor
out
xchg
sbb
movsb
add
movsl
sahf
mov
xor
inc
mov
and
call
idivl
cmpsl
adc
sub
adc
adc
in
into
cmp
inc
xor
mov
mov
jg
or
inc
popa
push
cltd
jbe
in
mov
cwtl
aaa
hlt
imul
push
inc
lret
xchg
lcall
inc
push
mov
adc
out
inc
push
jns
jnp
inc
xchg
loope
xor
shlb
out
in
movsl
dec
mov
xorb
popf
push
push
cmpsl
sbb
imul
push
mov
pop
mov
mov
jo
loopne
push
lcall
and
test
ret
pushf
seta
stc
testb
out
jo
mov
aam
mov
imul
loopne
cmpb
dec
or
push
scas
stos
dec
jp
fstl
push
inc
sbb
loopne
or
xchg
in
dec
test
dec
adc
sti
push
out
sub
mov
mov
mov
pop
inc
add
jno
jl
and
out
dec
sub
neg
pusha
mov
jecxz
sub
loop
test
popa
sub
rcll
pop
stos
adc
mov
xor
out
ljmp
inc
jne
cmp
sub
mov
shlb
inc
test
or
jge
fwait
adc
xchg
jl
sti
cs
inc
shlb
test
iret
or
lret
jb
mov
inc
xchg
adc
in
out
cmp
icebp
xor
movsb
add
jmp
xchg
lcall
sbb
mov
jge
jns
ficoml
test
iret
pusha
mov
dec
insl
pop
pushf
jo
mov
push
jecxz
inc
inc
jmp
xchg
cld
mov
ljmp
cmp
add
push
loope
je
sbb
test
or
fcoml
dec
pop
mov
sub
dec
pop
repz
add
push
sbb
xchg
movb
pop
sbb
mov
movsb
xor
cmpsb
pop
lods
nop
popa
test
gs
sahf
andl
imul
addl
pushf
incl
jbe
dec
aas
cmpsb
dec
test
fildll
into
mov
push
mov
je
xchg
mov
arpl
inc
inc
add
lods
mov
push
sub
jle
mov
xchg
sub
xor
jne
pop
imul
ror
jle
push
jo
ja
and
inc
adc
out
std
int
xor
fsts
js
sub
push
int
mov
push
test
xchg
test
imul
inc
lods
or
add
sub
js
xchg
test
je
loop
lods
pop
enter
push
sub
dec
fcmovu
daa
in
mov
push
jl
icebp
jae
movsl
push
push
orb
xchg
sbb
stos
push
subl
loop
sbb
out
add
rclb
call
inc
pop
adc
test
in
and
or
sbb
mov
sahf
int3
or
rcll
hlt
lods
xchg
out
rcll
xchg
and
sar
jecxz
fsubl
repnz
sbb
jle
adc
shll
mov
call
mov
xor
sbb
repz
call
jb
mov
aas
call
jg
aaa
adc
pop
sbb
mov
aam
push
mov
mov
mov
das
mov
jecxz
cmp
leave
lds
out
es
lcall
or
mov
cmp
push
shl
ret
call
push
jge
call
fnstcw
sti
push
pop
and
orb
push
add
fidivs
movsb
int3
xor
loopne
sub
mov
outsl
mov
jbe
mov
filds
push
sbbb
sub
push
out
imul
ret
add
mov
mov
mov
aaa
out
fildll
mov
dec
lods
sbb
adc
inc
pop
fistl
loopne
lods
adc
fstp
stos
ss
jmp
rclb
mov
insl
outsl
hlt
xor
xor
mov
mov
jp
mov
push
enter
ret
push
jno
xor
rcl
add
mov
and
idiv
ds
dec
pusha
cmpsl
xchg
jl
stos
lcall
pushf
mov
cmc
pop
mov
mov
shrl
shrd
adc
imul
popa
pop
leavew
mov
jge
add
jg
mov
rcrb
pop
pop
and
or
pop
dec
xchg
loopne,pn
sub
sub
imul
les
dec
cli
stos
popf
scas
lret
out
daa
jecxz
xchg
addl
push
jnp
in
xor
xchg
xor
pop
push
shll
pop
loop
add
mov
je
gs
mov
pop
ja
sbb
fwait
sbb
dec
lahf
xchg
repz
jnp
mov
push
sti
pop
iret
test
pop
stos
or
and
mov
mov
pop
mov
mov
push
push
jnp
test
add
mov
cmpsl
stc
or
jmp
and
inc
pop
mov
mov
mov
push
sbb
adc
push
call
das
lret
sbb
and
and
out
jnp
jge
xor
inc
xor
adcl
sub
in
and
xchg
pop
inc
mov
adc
pop
cmpxchg
lods
push
adc
fidivrs
in
outsb
out
inc
pop
gs
loop
jb
mov
sub
stc
andl
adc
stos
xchg
push
gs
fbstp
pop
sbb
loopne
adc
incb
add
inc
sti
push
mov
xchg
mov
xchg
push
xor
pop
fbld
adc
jle
cmc
push
xchg
pop
data16
in
clc
mov
mov
mov
rcl
outsb
adc
jmp
data16
gs
ds
out
lcall
nop
inc
test
idivb
fidivrs
inc
stc
adc
out
add
addr16
xchg
and
not
movsl
cmp
outsl
mov
mov
stos
push
mov
out
ljmp
cmpl
pop
pop
divb
adc
sub
cmc
mov
push
mov
xchg
sbb
and
popf
in
push
push
jns
push
mov
iret
push
dec
xchg
pop
sub
lret
rcll
fs
nop
adc
les
loop
mov
add
orl
mov
shll
jg
je
loopne
stc
insb
lahf
adc
mov
ljmp
popa
mov
pop
pop
xlat
in
scas
push
outsl
loop
xor
jbe
jnp
mov
push
jb
aaa
repz
push
out
call
cmpsl
movsl
repz
fwait
inc
sub
mov
and
sub
ficomps
mov
lahf
push
jne
cwtl
ljmp
movb
movsb
inc
mov
hlt
xchg
adc
adc
repz
push
mov
inc
ja
pop
jb
ss
push
push
pop
mov
pop
or
jmp
dec
sti
aas
and
pop
fisttps
je
popa
stos
sbb
sbb
lods
mov
and
jl
iret
jae
xor
and
lcall
pushf
adc
outsb
lret
and
xlat
frstor
dec
inc
stos
mov
mov
add
xor
mov
jne
sub
lock
ss
test
jnp
cmp
xchg
cmp
inc
flds
outsl
or
loop
icebp
aad
movd
mov
dec
repz
dec
rol
jo
add
and
xchg
jbe
loop
addb
dec
aam
aad
add
and
fucomi
mov
jg
shrb
push
push
idivb
xchg
js
and
inc
cli
aad
out
xor
fs
loop
mov
pop
xor
pop
pop
pop
test
insb
pop
test
out
mov
mov
push
cmpb
jecxz
les
js
jle
xchg
mov
lods
sbb
repnz
fsubr
orb
repz
mull
lret
in
inc
fsts
cmc
popa
ds
test
cmp
dec
pop
iret
pop
shrl
popa
dec
and
test
or
popf
push
out
cmpsl
adc
push
aad
repnz
out
mov
es
and
addl
xchg
outsl
lds
shrl
pop
inc
pop
and
add
sub
jnp
rcrb
pop
les
call
in
lret
sub
or
outsl
inc
test
inc
jbe
or
repz
dec
out
dec
rclb
fisubrs
vcvtdq2ps
enter
inc
xchg
sbb
push
cld
xor
test
mov
cmpsl
faddl
or
outsl
sbb
mov
sahf
cmp
mov
push
cld
adcl
leave
std
loop
jl
xor
aas
cmp
jge
cmp
cli
jg
sti
pop
scas
push
outsb
fs
psubusb
mov
pop
fmul
outsl
and
in
aad
mov
mov
ret
push
dec
jecxz
in
xor
insb
imul
cmc
in
jno
mov
scas
cmc
add
pop
pop
and
and
mov
fs
stc
test
xchg
push
inc
pop
popa
dec
and
stc
shl
and
stos
dec
jecxz
pop
scas
gs
fmuls
or
mov
mov
jns
push
jae
imul
clc
inc
adc
jae
and
add
movsl
or
jns
push
sbb
lret
mov
aas
push
mov
mov
adc
arpl
ret
in
adc
lea
repnz
dec
fdivrl
outsb
sbb
loopne
xchg
test
sbbb
mov
fsubrp
sbb
adc
mov
jae
je
fsubs
aas
cmp
mov
fldt
jbe
insb
and
je
out
pop
jp
imul
push
rolb
push
movsb
rorb
je
cld
cltd
aad
adc
lret
mov
lret
idivl
je
or
aaa
lock
in
aad
scas
cmp
mov
mov
cmp
pop
pop
lea
movsb
push
hlt
lock
xor
dec
idivb
xchg
cmpsb
sub
mov
sbb
mov
cs
pop
and
mov
cmpl
pushl
in
mov
sub
mov
scas
mov
push
sub
sahf
int3
icebp
je
xor
cmpsb
enter
lods
sub
push
jns
pop
fisttps
pushf
test
mov
cmpsb
scas
jmp
adc
addr16
sbb
and
repz
push
rorl
lock
push
mov
add
or
inc
cmpsb
in
and
test
xchg
cmp
and
cmp
push
adc
push
adc
push
scas
jle
mov
add
push
xchg
out
iret
xchg
mov
push
in
test
inc
mov
movl
mov
xor
cmp
mov
mov
cli
push
les
push
mov
nop
xor
stc
pop
inc
in
lods
xchg
imul
sub
inc
cmp
jno
ss
cmp
imul
aad
fbstp
mov
cmp
repz
ljmp
jg
les
mov
test
rolb
repz
mov
xchg
xchg
repz
jecxz
mov
stc
sti
jmp
movsl
fs
adc
cs
popf
imul
mov
das
aaa
jecxz
arpl
mov
xor
incl
mov
push
pop
mov
or
dec
sbb
sub
loop
fnstsw
mov
or
imul
ret
loopne
mov
repz
jle
movsl
adc
adc
sbb
lea
test
jmp
roll
out
in
xchg
icebp
mov
scas
sbb
xchg
xchg
push
dec
mov
repz
and
mov
fnsave
pop
sub
cmp
mov
pop
mov
daa
movsb
dec
dec
in
hlt
lcall
lods
jmp
insl
pop
add
xchg
jns
mov
adc
addb
pop
fstpt
lods
lods
xor
jbe
sti
sbbb
addl
fsubrl
sub
fdivl
cld
cmpsl
push
and
and
cwtl
leave
cwtl
sub
in
data16
jle
mov
and
call
inc
add
push
xor
cld
mov
add
data16
xor
dec
and
adc
pop
jns
shrl
sbb
shll
test
mov
adc
lcall
mov
mov
jb
aam
jbe
int3
mov
mov
ja
aad
dec
rcpps
or
lcall
enter
cmp
mov
test
call
idivb
fildl
cmp
pop
outsb
das
cmpsb
lret
ljmp
sbb
scas
mov
popf
inc
jmp
xor
pop
leave
mov
test
std
push
repnz
out
pop
mov
in
loopne
sbb
sub
sbb
ss
pop
ja
xchg
jmp
or
cmp
mov
cmp
mov
addr16
addr16
sbb
jnp
cltd
mov
add
mov
ss
mov
test
xchg
inc
cmp
pop
nop
sti
bound
cmp
out
push
sbb
sahf
push
stc
popf
xchg
sti
leave
fdivrs
inc
xor
cmp
mov
ret
push
clc
lret
push
push
jle
pop
add
pop
out
inc
pop
shr
ss
adc
jnp
jnp
cmp
sqrtps
inc
imul
and
mov
mov
and
pop
leave
cmc
and
mov
or
out
or
ret
out
sbb
fildll
inc
es
leave
lea
je
push
jg
and
or
loopne
sub
and
and
or
push
push
mov
cmc
dec
mov
ja
dec
dec
mov
stc
mov
jmp
cmp
push
pop
xchg
mov
inc
xor
and
cltd
sbb
push
xor
loop
adc
pop
mov
push
sub
jmp
fimull
ss
mov
jnp
shrb
pop
int3
mov
pop
outsb
dec
jl
fwait
nop
out
xor
movsb
xchg
fsubrs
jo
mov
pushf
mov
out
loopne
ljmp
imulb
xor
mov
jl
insb
pushf
mov
inc
xor
aas
pop
sbb
mov
dec
xor
fdivrs
cmc
xchg
add
popf
ret
data16
mov
sbb
cmpsb
dec
sub
pop
sahf
loopne
jge
mov
inc
cwtl
push
sub
xchg
lods
out
sbb
xchg
sti
mov
jp
xchg
sbb
mov
aas
js
out
mov
in
adc
lods
lea
xchg
mov
fsubl
mov
outsl
and
test
xchg
fstps
lea
xchg
repnz
sbb
or
sbb
push
adc
data16
add
add
test
hlt
dec
push
push
ljmp
imul
insl
andl
adc
pop
or
mov
loop
fwait
int3
sub
popl
xchg
clc
lcall
insl
sbb
cmp
popf
inc
mov
inc
jmp
sub
adc
push
outsl
pop
mov
jg
cmpsb
fs
test
jmp
adc
pop
pop
cmpsb
add
mov
cmpsb
std
jg
cmpb
fldcw
addr16
daa
jne
cmp
adc
push
daa
sub
add
xor
mov
shll
in
sbb
xchg
mov
dec
popa
push
dec
dec
sbb
adc
gs
movsl
mov
test
inc
mov
negl
mov
push
sbb
gs
cmp
mov
insl
in
pop
in
and
cmp
mov
in
sarl
lods
mov
rolb
vandnps
mov
sti
push
and
sbb
or
xchg
pop
es
ret
adc
fcomps
addr16
pop
test
fbld
mov
mov
xchg
mov
or
iret
stos
aas
lret
pop
push
mov
mov
jns
andb
mov
jle
pop
lds
lea
mov
or
cld
pop
push
jl
xchg
sub
je
int3
cmpsl
cs
sub
fldt
aad
nop
mov
dec
push
dec
cmp
test
mov
repz
sahf
adc
int3
ret
je
pop
mov
adc
jbe
lahf
rolb
mov
dec
bound
sbb
add
fpatan
push
mov
xchg
test
sub
mov
push
and
test
adc
stc
and
fwait
lcall
subb
mov
cmc
xchg
jecxz
pushf
lahf
and
or
fstpt
pop
in
xchg
add
shlb
and
inc
mov
mov
repz
adc
xlat
pop
mov
fnstcw
lret
pop
scas
ds
test
lock
ret
sbb
xchg
inc
jecxz
fmul
ret
dec
dec
rcll
enter
daa
inc
hlt
ret
pop
or
jmp
icebp
adc
stos
lcall
mov
lock
scas
jmp
test
push
ds
sahf
aaa
popa
adc
sub
lcall
add
or
movsl
es
fidivrl
add
cs
outsb
adc
xchg
pop
push
outsb
shr
lods
lret
lods
roll
sub
hlt
inc
les
sub
movsl
lea
ret
loopne
rcl
mov
sub
insl
repnz
sbb
mov
movsl
in
ss
in
je
bound
sbb
jg
loopne
add
push
dec
testb
pop
adc
cmp
push
fnstenv
jae
loopne
or
negb
sbb
add
cli
daa
and
mov
dec
xchg
jo
mov
push
mov
ljmp
push
mov
xchg
xchg
out
cmpsl
or
jle
pop
mov
insb
xchg
lds
jnp
lock
push
mov
add
sbb
mov
or
loopne
inc
rorl
push
push
push
mov
xor
sbb
addr16
fisttps
sub
mov
pushf
jg
jnp
int3
mov
and
xchg
and
jecxz
scas
je
jae
add
add
scas
sti
lds
fnstsw
adc
lea
xchg
xor
jb
cmp
mov
mov
stos
and
cmpsl
fwait
inc
pop
out
stc
mov
adc
scas
add
and
jno
adc
xchg
faddl
arpl
test
jo
fwait
sbb
jmp
arpl
pop
int3
adc
notl
mov
xor
jge
stos
mov
push
jmp
callw
rep
mov
mov
fsubs
clc
sbb
xor
test
mov
lock
jo
fwait
in
in
jns
test
pop
mov
mov
push
push
sbb
shl
dec
pop
dec
subb
rcr
sarl
jbe
adcl
and
pop
stos
pop
push
sub
aaa
adc
jecxz
popf
das
inc
inc
inc
pop
xlat
cs
adc
divl
dec
mov
cwtl
lock
xchg
sub
imul
add
outsl
sbb
inc
pushf
lock
xchg
mov
mov
dec
icebp
dec
sti
aam
lcall
mov
xchg
inc
mov
nop
or
into
and
sub
jecxz
ret
sbb
movsb
push
mov
or
dec
or
sbb
mov
push
cmpsb
jo
cltd
sbb
std
dec
mov
andl
aaa
cltd
out
out
or
daa
shl
push
mov
add
adc
mov
sarl
ds
adc
popa
mov
pop
jle
int
sub
inc
enter
shlb
jmp
mov
rcl
in
sbb
and
xchg
mov
mov
or
arpl
scas
pop
xchg
fdivrl
mov
int3
mov
dec
mov
xchg
dec
jbe
ljmp
and
aaa
or
push
hlt
aam
adc
sub
jns
mov
call
out
sbbl
sti
push
imul
pop
mov
xchg
dec
lahf
out
enter
or
into
mov
enter
mov
int
nopl
add
add
lods
loopne
sbb
jno
cmp
jmp
daa
and
inc
sub
mov
jecxz
ret
mov
mov
imul
mov
sbb
lods
add
pop
add
add
mov
dec
and
lcall
jp
push
xor
inc
stc
jp
inc
adc
sub
mov
cmpsl
les
arpl
lcall
ret
pop
xor
ret
lret
hlt
xchg
dec
jle
pop
adc
lcall
push
mov
popa
hlt
and
outsl
popa
aam
cmp
stos
test
xchg
xchg
popf
dec
push
mov
cmpsl
adc
rcrb
inc
mov
mov
negl
mov
cmp
mov
stc
in
int3
mov
or
push
jno
aam
sbb
pop
lea
dec
popf
inc
xor
daa
dec
stc
inc
sbb
push
popa
add
pushf
dec
pop
fldenv
mov
xchg
lret
data16
mov
sub
jle
jmp
loop
or
xlat
push
daa
jbe
pop
and
pushf
jecxz
cs
xchg
push
fcomps
xchg
cmp
xchg
mov
sub
fiadds
and
sbb
repz
or
xor
adc
inc
pop
xor
fwait
stc
fisttps
movsb
inc
cmpsb
or
outsb
dec
adc
cmp
xor
push
and
ficomps
mov
jae
push
sub
push
jbe
leave
sbb
dec
mov
jnp
dec
hlt
cmc
aam
xor
pusha
cli
mov
inc
or
dec
xchg
mov
rolb
push
out
test
std
jmp
cli
cwtl
or
sub
adc
xchg
pop
mov
xchg
pop
arpl
leave
pop
insl
cmp
adc
xchg
mov
fwait
adc
jno
ror
pop
ss
mov
aam
popf
sub
cmpsb
jbe
cld
xor
addr16
mov
mov
dec
cs
xor
xchg
cmpsb
loopne
movsb
jmp
dec
cmpsl
mov
mov
fwait
stos
pop
push
rcl
adc
jge
adc
or
dec
ret
adc
sub
inc
add
fmull
fsts
ficompl
mov
ljmp
mov
icebp
js
push
push
popa
jge
mov
clc
and
js
stc
movb
imul
inc
inc
push
mov
into
inc
out
daa
shl
add
xor
pop
arpl
bound
inc
test
pusha
mov
pop
gs
aaa
and
cmp
ljmp
xor
sub
inc
and
dec
test
mov
ret
inc
enter
loop
jecxz
sbb
cld
inc
add
stos
dec
jo
jg
lods
adc
in
nop
mov
in
jg
inc
pop
lds
add
fdivrl
daa
push
adc
lods
adc
cltd
jmp
cmc
inc
aas
xor
pop
xchg
sbb
dec
sub
and
push
mov
aam
push
xchg
stc
shl
dec
xor
inc
xor
int
ja
sub
test
loope
sarb
fldcw
pop
xchg
mov
cmp
add
pop
bound
lock
and
jecxz
in
sub
ss
lcall
dec
jp
cmpsl
popl
xchg
adc
cltd
mov
or
lods
or
cmpsl
outsb
jmp
xlat
adc
pushf
sbb
lea
in
pop
adc
inc
daa
pop
pushf
ja
or
mov
mov
loop
test
sub
jo
stc
ljmp
jnp
add
and
push
int
cmp
insb
sub
lea
int3
subb
and
push
mov
inc
mov
rorb
cwtl
hlt
pop
adc
sbb
dec
ds
fisubs
addb
arpl
sub
jbe
les
fucomi
popf
out
push
add
mov
mov
gs
sbb
std
fdivl
and
and
mov
insb
cmp
rcrl
sbb
pop
leave
test
xor
push
mov
pop
jmp
lock
int3
aam
into
sub
sbb
addr16
and
loop
or
add
cmpsb
pop
std
jo
mov
mov
sbb
aad
or
mov
lahf
mov
iret
movsl
jl
cmp
xchg
imul
mov
pusha
mov
xor
jns
sbb
mov
fidivs
cs
pop
dec
pop
icebp
arpl
mov
daa
das
ds
aam
jg
imul
xchg
cmpsl
into
pop
fisttps
pop
ret
xor
jle
cmp
dec
pop
daa
push
loopne
mov
jp
and
jbe
push
mull
loopne
adcl
mov
cmpsb
xchg
popf
xchg
out
push
adc
lods
mov
popl
push
aas
adc
outsb
sahf
mov
xchg
lock
lea
imul
push
movsb
shlb
jmp
rcl
jecxz
out
inc
cmc
outsb
mov
xor
jl
movl
inc
fdivl
popa
mov
mov
aam
pop
pop
jae
mov
or
mov
sbb
pop
sbb
rolb
mov
cmp
addr16
xor
pusha
aaa
xor
outsb
sbbb
or
cmp
movsl
add
add
cmp
cmpb
mov
push
mov
int
cmp
sbb
mov
mov
push
aaa
add
ljmp
xor
mov
dec
addr16
scas
ror
bound
pop
andb
mov
or
das
sub
in
jns
lods
xor
mov
loop
mov
daa
or
mov
sbb
sub
out
sub
fistl
out
fs
stc
inc
pop
xor
push
aaa
aad
pop
cmpl
and
incb
mov
stc
aaa
add
mov
sbb
popa
add
xor
sub
bound
mov
sti
sbb
ds
lcall
imul
decb
sub
pop
adc
cmc
fs
dec
loop
clc
aaa
movsl
fwait
xchg
cs
mov
stc
into
sub
dec
decl
mov
je
dec
das
sub
push
out
out
dec
sub
sahf
test
jmp
aad
xor
std
mov
js
xor
jnp
push
pop
cmp
repz
out
pop
push
push
pop
rorl
fdivrs
in
adc
sarb
fdivrs
xchg
and
adc
pop
jae
mov
daa
adc
loopne
mov
repz
test
loopne
xor
sbbl
inc
rclb
lret
fcmovnu
sub
or
ret
mov
xlat
and
dec
movsb
cmp
inc
out
in
jbe
aad
inc
push
mov
cmc
push
mov
jnp
aam
int3
pushf
mov
lret
into
outsb
xor
scas
mov
mov
or
in
sbb
pop
lret
sbb
xor
loopne
push
in
pop
into
pop
push
or
xchg
xor
loopew
iret
jge
shll
imul
fsubp
xchg
sub
out
es
sbb
xchg
adcl
jmp
adc
sbb
lahf
cmp
mov
cmp
call
lret
jmp
nop
jns
mov
inc
jg
test
inc
cmp
mov
mov
es
repnz
cwtl
out
mov
pop
xchg
jno
cmpsl
cmp
xchg
lea
or
and
push
inc
xor
js
pop
bound
shrl
or
call
andb
adc
xchg
push
cwtl
mov
das
rep
jecxz
in
es
or
lahf
shll
in
dec
aad
and
shll
xchg
mul
int
int3
jecxz
fsub
jb
roll
mov
shll
push
xor
mov
sahf
pop
sbb
xchg
scas
shlb
lret
repnz
xor
add
push
es
dec
aam
jno
fwait
xchg
hlt
mov
or
xchg
add
popf
test
movsl
xchg
xor
push
mov
hlt
subb
sbb
xor
sbb
repz
push
jae
vandps
xlat
cmp
je
jg
lock
sbb
push
mov
inc
loopne
push
adc
jne
xor
aas
frstor
in
testb
clc
rcll
les
sub
js
mov
fs
aaa
int3
rcrb
inc
ficoml
dec
in
add
or
xchg
adc
xor
cltd
mov
pop
xchg
dec
sti
leave
sbb
inc
lret
shrl
pop
adc
lret
pop
stos
iret
xchg
test
dec
shll
xchg
or
mov
sub
cli
aad
fs
or
out
in
or
add
rcrl
mov
mov
xor
pop
push
xchg
movsb
int
jne
movsb
aad
push
div
stc
mov
mov
inc
aas
dec
movsb
and
iret
push
pop
mov
dec
repnz
sahf
jnp
pop
inc
xor
xchg
and
add
dec
movsl
js
test
popf
rcrb
ret
jp
imul
lods
sbb
int
in
dec
mov
inc
and
gs
sbb
sub
test
insl
rorl
pop
out
or
shrl
jecxz
add
movsl
cli
out
and
inc
sbb
imul
bnd
in
test
call
push
cmc
lret
jle
push
pushf
pop
fistps
push
jae
movlps
pop
inc
adc
pop
divb
stos
jle
orb
sbb
lahf
push
inc
andb
pop
cld
cmp
popf
ret
clc
popf
ds
sbb
scas
rorl
cwtl
jne
loop
inc
lock
sub
inc
mov
inc
dec
stos
adc
loopne
popf
add
sti
mov
ss
mov
insb
movsl
out
cld
scas
mov
jno
idiv
jl
lock
loope
sub
sahf
fwait
pop
push
sarl
xor
lds
dec
movsl
push
jg
mov
dec
and
movsb
or
aaa
leave
loope
mov
cmp
sub
shlb
scas
sti
adc
imull
or
fs
xchg
xor
fs
or
loope
cli
xchg
add
xchg
mov
cmpsl
lock
or
xlat
adcb
add
loope
cwtl
cmp
mov
xchg
stc
pop
imul
cmpsb
inc
jg
jp
lods
loopne
fimull
mov
mov
rolb
mov
jmp
xor
cmp
cwtl
jne
inc
clc
fidivl
cmp
sbb
jge
cmp
fwait
xchg
xchg
push
sbb
sub
movsb
pop
fbld
inc
lods
stos
wbinvd
loope
or
rorb
dec
adc
lret
pop
int3
and
xlat
cld
imulb
ret
in
into
push
stc
out
femms
jne
jb
mov
jp
and
inc
lret
or
test
adc
sarb
or
nop
sbbl
xchg
ds
xchg
or
je
jp
cmovnp
xchg
pop
mov
mov
scas
sbb
cmp
fisttps
mov
fcoms
sahf
shlb
pushf
movsb
push
xor
push
or
mov
imul
fwait
add
adc
add
adc
in
dec
les
imul
xchg
out
and
imul
jo
add
inc
add
or
jecxz
popf
mov
adc
inc
xchg
jp
cmp
sub
jmp
sbb
dec
psubb
nop
insl
sub
xchg
xchg
sbb
or
cmp
test
sbb
fwait
ret
sahf
movl
ja
icebp
sub
dec
cmp
xchg
insb
ja
pop
das
cmpsl
push
mov
jge
popa
mov
dec
popf
push
add
scas
fists
stos
and
pop
cmp
xor
cld
jnp
adc
mov
xor
dec
addl
outsb
dec
mov
push
dec
in
sub
xor
or
mov
fidivs
mov
jo
push
cmp
xor
ss
pop
stos
xor
lcall
mov
enter
lret
insb
and
cmp
push
adc
jne
in
xchg
jle
in
nop
imul
lret
pop
call
push
cltd
addr16
sbb
sahf
scas
popl
sbb
adc
adc
fwait
xchg
add
inc
mov
xchg
push
movb
push
sbb
xchg
adc
arpl
iret
sbb
mov
aad
mov
pop
hlt
dec
scas
sbb
mov
rorb
mov
mov
cmp
lret
ss
xchg
shr
lods
lock
test
xchg
mov
xchg
insb
test
fcoml
pop
pop
pushf
or
fwait
scas
loop
pop
xchg
xor
add
mov
xchg
out
in
cmp
add
cmp
repz
push
mov
and
cmpsb
adc
cwtl
imul
bound
insl
sarb
or
call
cmp
inc
jns
sub
sub
jecxz
js
sub
dec
dec
cs
xor
sub
data16
dec
stos
push
loope
inc
rcrl
inc
pop
xchg
sbb
lock
sbb
lock
ss
xchg
lock
xchg
xlat
or
mov
fnstcw
mov
push
ds
or
out
mov
xchg
xor
jge
pop
aaa
xor
push
pop
lods
mov
jg
mov
bswap
mov
jge
rclb
push
outsb
xchg
pop
mov
or
insl
sbb
clc
push
testb
ret
int3
cli
and
loope
sub
stos
ud0
dec
mov
je
xchg
mov
fisttpl
lods
xor
cs
test
out
ret
call
mov
xchg
imul
in
int3
lcall
push
mov
outsl
in
inc
lods
cmp
mov
fldcw
sub
int3
cmpsb
and
pusha
int
mov
dec
jg
pushw
insb
or
sub
test
je
lods
movsb
xchg
xchg
push
scas
push
lods
mov
fs
cmp
inc
repz
pop
fs
cmp
ja
icebp
repnz
pop
ret
inc
push
inc
pop
push
aaa
shl
push
in
clc
daa
pusha
xor
mov
mov
mov
jmp
out
sbb
fcompl
push
mov
mov
xor
dec
loop
pop
ss
and
add
mov
sub
dec
rclb
dec
xlat
add
out
mov
pop
lcall
cs
sub
pop
xchg
out
mov
jne
inc
mov
repnz
mov
dec
inc
ljmp
mov
mov
popa
xorl
push
add
jge
fdivl
stc
addb
ss
pop
push
add
pop
pop
jae
xor
fcos
icebp
sub
pop
adc
inc
lahf
test
jl
lret
icebp
aas
pusha
mov
fs
mov
mov
jae
and
xchg
sub
inc
mov
rolb
jmp
ret
mov
pusha
xchg
add
hlt
push
cmpl
fwait
or
dec
mov
push
lret
bound
cmpsl
ds
aaa
jne
rcrb
and
rcl
xor
xor
in
cmp
adc
cmpsl
fdivs
ds
out
and
adc
cs
sub
insb
inc
jae
mov
jno
lock
mov
sub
dec
outsb
scas
pop
loope
rolb
mov
ja
push
leave
or
jne
inc
sbb
mov
hlt
and
loop
out
data16
or
add
mov
incb
inc
xchg
wbinvd
pop
mov
imul
xchg
mov
test
rcrb
lea
ret
scas
cmpsb
cmpsl
das
pop
jb
loopne
int3
pushf
inc
adcl
mov
test
push
adc
pop
fmul
cmp
dec
xchg
ss
ds
jg
or
repz
push
cmc
loopne
push
xor
fisubrl
pop
mov
test
push
leave
pop
or
cmp
xchg
lahf
dec
mov
dec
les
push
mov
jne
and
xchg
xchg
jp
jns
mov
imul
rcrb
cld
pop
dec
jmp
adc
cmp
sarl
mov
jbe
mov
xchg
or
ljmp
xchg
jmp
test
add
mov
cmpb
xchg
mov
cmp
jae
cmp
mov
outsl
fisubl
jb
clc
fcoml
jne
push
and
call
test
and
andl
cmp
lods
and
push
or
loop
and
out
pusha
xlat
lock
xor
push
or
fs
sbb
xchg
out
aad
imul
jns
inc
daa
stos
outsb
leave
popf
popf
mov
mov
xchg
aaa
jno
scas
aaa
ret
sub
adc
lahf
stos
fwait
movsb
notb
push
jmp
iret
xchg
mov
or
sbb
xchg
or
testb
lock
cmpsb
pusha
lret
mov
mov
pusha
jg
out
mov
jge
pop
flds
incl
adcb
sbb
arpl
pop
pop
fdivrs
test
mov
mov
out
mov
cmpsb
dec
aam
lods
lret
sti
xchg
enter
cmpsb
ss
subl
je
xchg
daa
jp
adc
mov
mov
sbb
movsl
pushf
sahf
lea
jae
jl
les
fwait
or
ss
bound
add
or
jp
cmp
xchg
mov
add
push
or
mov
aad
pusha
pop
add
fstl
mov
movb
add
in
test
mov
iret
ljmp
mov
pop
aad
dec
jmp
jmp
adc
mov
jno
fmuls
sub
daa
fldenv
out
pop
pop
pop
movsb
inc
sub
pop
cmp
push
data16
adc
mov
mov
xchg
mov
add
jg
mov
imull
ljmp
mov
adc
arpl
adc
mov
cmp
mov
jns
lret
movl
sbb
in
shll
aam
xchg
addb
add
xor
mov
mov
movsl
fs
sub
out
repnz
jne
repnz
pushfw
xor
lods
pusha
fs
imul
add
data16
les
lods
popf
and
sti
dec
in
inc
inc
pushf
mov
test
je
shrb
sub
lods
jne
aam
lds
std
icebp
sbb
bnd
sbb
and
mov
dec
outsl
add
outsb
mov
jns
mov
push
mov
and
push
lock
out
inc
xlat
dec
jl
int
jmp
aam
fildll
mov
add
decl
les
jno
push
fsubrs
lret
cmpsb
dec
int
out
sbb
mov
jge
jmp
test
sbbl
mov
loopne
not
ss
push
popf
stos
add
mov
daa
or
pop
js
std
dec
mov
push
ret
stc
test
cmc
ja
inc
sbb
jl
mov
mov
push
adc
cmp
mov
repz
xor
shrb
pop
ds
mov
add
out
inc
out
mov
mov
add
popa
sbb
jg
repnz
rcl
sti
dec
fsts
daa
xchg
into
push
jns
mov
leave
pop
pop
cwtl
xor
adc
mov
jmp
bound
test
ret
neg
mov
ret
xchg
inc
lock
outsb
xchg
fdivp
je
pop
pop
scas
jno
out
sbb
into
xlat
lock
pop
fstl
sub
inc
cmp
int
cmp
pop
pushf
shll
sub
out
fdivrs
inc
mov
in
fsubl
add
iret
mov
sub
stos
add
jg
or
sbb
imul
loop
add
xor
out
fsts
jg
fldenv
xchg
mov
imul
sub
pushf
mov
loopne
sub
sbb
dec
add
shll
push
pop
out
aas
pop
fcomps
sub
cmp
out
mov
jecxz
out
jns
dec
dec
loope
xor
sahf
shlb
sbb
into
orb
loopne
jne
add
out
clc
in
xchg
push
cli
lahf
mov
add
cmp
xchg
mov
mov
pop
or
sbb
push
cmpsb
loope
xor
sub
daa
sbb
pop
lret
mov
pop
jnp
mov
hlt
fsubl
jne
aas
cmpsl
pop
gs
mov
js
sub
mov
pop
cltd
fcomps
mov
stos
mov
push
std
test
inc
cmp
dec
or
add
int
mov
js
jmp
push
mov
in
mov
mov
nop
mov
xor
push
fstpl
mov
fidivl
sti
inc
imul
in
xchg
mov
jle
jbe
jae
ljmp
inc
inc
add
call
mov
xchg
popa
into
mov
outsb
insb
add
adc
mov
push
push
stc
int
or
push
adc
adc
jb
and
cmp
aam
jnp
cmpsl
dec
pop
pop
xchg
dec
mov
fstl
shlb
sub
in
push
pop
es
and
xchg
mov
cmp
aad
mov
and
cmp
inc
movsb
dec
and
xor
ds
xor
hlt
ds
jle
popa
or
pop
leave
pop
dec
cmp
faddl
std
and
scas
lret
add
dec
rcr
mov
lret
sahf
sub
iret
arpl
xor
loop
sub
clc
sti
loope
adc
fmuls
jmp
decb
mov
int
cmc
mov
ds
daa
popf
jmp
mov
cwtl
les
faddl
mov
dec
iret
in
push
shll
push
insl
xchg
dec
pop
aas
push
sarl
enter
in
addr16
add
cmp
shl
mov
xchg
push
addl
mov
xchg
add
pop
xchg
scas
aam
and
push
push
pop
mov
test
mov
ret
hlt
js
out
lea
and
mov
push
dec
mov
dec
pushf
fmul
xchg
arpl
add
inc
cs
in
mov
lock
inc
popf
sbb
sbb
push
adc
or
in
int
mov
mov
setnp
mov
jb
and
insb
xchg
aad
mov
and
cmp
inc
sub
dec
jo
and
push
mov
xor
sbb
pushf
push
cli
xchg
xchg
jbe
cmp
fscale
xchg
in
pop
jb
repnz
js
lock
dec
fistl
push
divl
out
call
leave
int3
push
pop
test
ret
cmp
and
insl
inc
jge
int
call
cmpsb
das
inc
mov
insl
movsl
imull
dec
dec
lods
mov
mov
in
ljmp
nopl
jns
call
call
ficoml
push
das
lcall
xlat
push
or
mov
mov
js
hlt
pop
jp
push
sub
sarl
sti
jns
pop
jl
sbb
jae
incb
add
popa
testl
sbb
xor
lcall
bound
clc
out
icebp
xchg
add
jns
aam
mov
int
mov
sahf
xor
xchg
std
imul
jle
sub
sarb
mov
ds
int3
pop
popa
imul
mov
sbb
mov
mov
inc
idiv
rcrb
push
pop
cmp
hlt
iret
dec
repnz
dec
inc
add
ja
jg
pop
xchg
sahf
add
push
or
xorl
aam
cltd
xchg
jle
ret
mov
or
addr16
or
push
aas
into
mov
pop
jne
out
movsl
mov
jb
mov
mov
subb
movsl
sarb
in
pop
out
lds
in
pusha
dec
andl
dec
stos
movsl
sbb
pop
xor
mov
in
inc
dec
aad
mov
fbstp
adc
mov
mov
addl
fdivrl
lahf
ja
sub
lock
sub
es
lea
sti
ss
mov
mov
cmc
int
push
xor
cli
dec
or
jmp
roll
and
out
sub
aas
mov
add
fwait
cld
iret
ds
cmp
push
adc
push
das
pop
inc
fwait
xor
jg
clc
imul
loope
jne
mov
push
sbb
or
lret
and
mov
lcall
cmp
adc
jg
xorl
adc
sub
add
lret
and
pop
mov
cld
mov
pop
mov
lret
cmc
sub
sbb
in
shl
and
shrl
push
jg
aas
push
jo
cmpsb
popf
and
mov
pop
sub
mov
and
lock
add
dec
inc
test
mov
je
pusha
into
add
push
aaa
mov
pop
divb
jnp
xor
push
mov
std
fdivr
mov
fwait
outsb
inc
jo
mov
cltd
nop
fs
and
outsb
mov
or
ja
mov
stc
mov
call
dec
push
test
nop
mov
mov
mov
push
in
mov
dec
repz
xchg
adc
aam
mov
ljmp
data16
sub
jge
add
test
pop
mov
fsts
out
add
inc
mov
test
loopne
test
cmp
mov
pop
sub
add
jbe
dec
imul
mov
rcll
cmp
xor
loope
jle
sbb
push
add
sbb
pop
inc
mov
adcl
or
add
popf
int
divb
inc
insl
rolb
test
repz
push
inc
dec
lock
lods
jmp
inc
insl
inc
mov
mov
and
in
repz
loopne
ljmp
pushl
jp
aam
inc
xchg
addr16
out
fcomi
hlt
cld
enter
movsl
push
sub
out
lahf
out
cmp
clc
xor
and
and
std
movsl
jo
mov
packssdw
sub
movsl
jno
aaa
lret
mov
sarb
notl
and
xor
out
loopne
sbb
jne
or
mov
mov
shlb
jne
mov
sub
dec
inc
outsb
or
sub
shll
mov
mov
push
push
js
push
loopne
xchg
pop
sub
xor
mov
mov
inc
outsl
xchg
push
inc
fs
inc
inc
sbb
push
mov
mov
dec
rolb
mov
imul
mov
pop
xor
sbb
sarb
dec
cmpsl
pop
or
xchg
movsl
mov
ret
add
push
dec
sbb
arpl
xor
mov
bound
lock
jnp
psubusb
loop
sub
cmpsb
std
add
xchg
mov
js
addr16
lock
shl
adc
leave
mov
enter
mov
cmc
xchg
xchg
fiaddl
js
mov
pop
dec
ss
inc
cmp
pusha
sub
and
outsb
mov
scas
mov
int
into
push
adc
ljmp
gs
push
mov
loop
push
les
arpl
test
sub
aaa
cwtl
and
or
outsl
push
and
rcr
aas
scas
mov
mov
xchg
mov
test
pop
dec
mov
and
adc
mov
test
and
push
repz
jns
mov
and
clc
cli
ret
pop
mov
outsl
mov
cmpsl
stos
or
xor
mov
pusha
rcrb
xorl
sub
cmp
inc
pop
add
push
pop
mov
adc
mov
and
jnp
js
in
cmp
jno
jo
ds
push
lock
mov
je
lret
rcll
jp
mov
iret
xor
out
and
dec
cs
mov
sub
push
mov
mov
cld
jmp
push
fwait
or
dec
jno
inc
or
adcl
scas
pop
dec
repnz
add
xor
in
dec
and
pop
cmc
cld
inc
outsb
int
pop
cltd
push
bound
lods
cmp
jmp
out
cmp
mov
jno
insl
dec
sbb
mov
mov
xchg
scas
mov
xchg
fxch
ret
testl
pop
xchg
sbb
fdivr
mov
fadds
and
sti
testl
dec
mov
nop
mov
rclb
ret
cmp
mov
daa
inc
cmc
imul
es
push
dec
pushf
add
in
movb
sub
in
aaa
sbb
aam
loopne
cmpsb
fimuls
cmp
test
insl
ds
cmpsl
mov
mov
mov
push
mov
rolb
outsl
push
cmp
int3
or
adc
fsub
aaa
movsb
cmp
add
aam
scas
mov
jb
push
sahf
je
cmpsb
ror
fcmovbe
pop
ret
popf
lds
push
in
cld
xor
and
and
xor
sub
cmp
jo
jmp
mov
out
loop
pusha
mov
xchg
icebp
dec
inc
jo
addl
cmp
sbb
sub
dec
aad
in
add
imul
dec
jbe
pop
pop
ret
push
icebp
push
aad
ret
test
test
xchg
js
lds
pop
cli
mov
push
xchg
cmpsb
sub
sub
arpl
or
and
pop
f2xm1
mov
mov
add
mov
in
add
cmpsl
push
sub
jnp
test
test
push
sub
movsb
hlt
insb
scas
fstl
cwtl
sbb
outsl
and
mov
dec
mov
pop
pop
xchg
sarb
mov
inc
test
cmp
xor
sbb
adc
cmpb
popf
and
add
out
xchg
jp
pop
or
int
jae
cli
rol
out
and
sahf
mov
or
add
xor
xor
iret
cltd
loop
fisubl
dec
pop
add
mov
cs
scas
pop
and
sar
out
mov
out
push
aaa
hlt
or
test
faddl
ret
or
push
minps
test
or
fidivs
addb
cmp
inc
mov
lds
test
pusha
jno
xchg
dec
mov
and
mov
out
enter
orb
sub
pop
hlt
ret
sub
repz
mov
mov
xchg
or
push
cmc
xbegin
cli
fistps
lock
push
std
or
pop
pop
adc
mov
jle
in
bound
xchg
cli
out
stos
out
je
loope
or
xor
je
test
jae
sub
add
rclb
lahf
loope
mov
jle
push
repz
sub
call
inc
push
xchg
sub
sub
shll
scas
psubw
adc
xor
aad
cwtl
aad
jne
sub
or
push
push
test
and
imul
icebp
sbb
xor
or
nop
push
dec
or
dec
xchg
push
aas
cmc
sahf
adc
loopne
cli
ds
jmp
popa
aaa
in
mov
sub
xor
jge
or
jbe
xchg
movsb
xor
fisubs
aas
vmovq
sbb
inc
negb
sahf
movsb
inc
stos
cs
and
mov
mov
dec
or
sti
lock
and
xor
jns,pn
arpl
push
lcall
xchg
pusha
jp
and
int
mov
xchg
xor
sub
and
inc
xchg
out
call
jl
movsl
push
jl
dec
call
mov
jae
sub
sbb
pusha
inc
xchg
mov
dec
imul
cmpsl
loope
fsts
or
imul
addb
push
popf
mov
mov
mov
daa
fnstenv
jnp
jle
and
or
mov
stos
add
int
lods
iret
jb
std
imul
in
fs
fnstsw
ss
orl
push
sahf
sub
sub
add
aaa
outsl
fdivs
dec
fwait
jo
lret
sbb
sti
mov
and
jg
and
sbb
mov
xor
sub
dec
fs
or
push
xor
lahf
ss
mov
mov
pop
rorb
outsl
jmp
aaa
cmp
lods
mov
gs
repnz
mov
jge
xchg
pop
and
sub
sub
cmp
fildl
mov
mov
ficoms
mov
push
jno
mov
in
mov
xchg
adc
lods
sub
adc
gs
or
sbb
cmp
repz
lahf
sbb
inc
or
lret
mov
mov
and
push
pop
pop
in
and
hlt
cld
push
mov
push
pushf
sub
inc
push
cmp
adc
push
mov
pop
dec
std
pushf
out
jnp
and
clc
addr16
into
adc
inc
jge
mov
add
iret
and
movsb
lret
addr16
mov
mov
and
es
mov
cli
nop
rclb
pop
or
in
and
pop
dec
sbb
hlt
cmp
or
jnp
lcall
add
xchg
lahf
fisttpll
dec
jmp
sbb
mov
in
inc
cmp
xchg
dec
jl
mov
jnp
inc
mov
sbb
cmc
or
movsl
popf
sub
pop
movsl
or
mov
mov
movl
push
bound
mov
cmpsb
xchg
mov
rclb
xchg
xchg
sbb
repnz
ja
outsb
push
adc
xchg
mov
fdivrl
add
out
stos
stos
rcrb
dec
adc
pop
into
aaa
cmp
repz
xchg
pop
mov
jmp
pusha
push
mov
dec
and
lret
xchg
lcall
pop
and
inc
mov
sbb
push
sbb
sub
imul
xor
xchg
sahf
add
add
xchg
fbstp
inc
sub
aam
ds
jle
or
test
pop
jle
les
movsl
in
lds
movsl
cwtl
cwtl
xchg
jecxz
sbb
pop
jp
shr
push
out
sbb
stos
outsb
mov
ljmp
or
mov
je
sub
sub
pusha
mov
push
mov
mov
mov
push
fbstp
pop
test
inc
xor
cmp
subb
jo
imul
mov
pop
call
and
push
shr
jl,pn
jne
xchg
mov
inc
adc
xchg
dec
lret
add
dec
sub
mov
jmp
adc
popf
jb
call
jno
fs
fsubs
xor
inc
lock
or
xor
jmp
adc
aam
sub
pop
int3
sbb
jbe
push
lock
pop
lock
jl
push
out
adcl
jae
enter
inc
inc
cmp
scas
adc
aam
testb
adc
test
xchg
sub
ja
xor
mov
adc
outsl
pop
cmp
add
fnstsw
dec
sar
mov
pop
test
pop
mov
pop
iret
jne
xor
mov
into
mov
jb
adc
cmp
sbb
cmpl
cltd
into
outsl
pusha
push
out
and
out
out
repnz
sub
and
and
sbb
push
jnp
pop
cmp
dec
fucompp
insl
mov
sarb
rcr
test
xchg
pop
push
cs
rcrb
mov
cmp
xor
push
lds
adc
push
rorl
push
or
xor
xchg
mov
fsubl
add
push
cmp
jne
test
xchg
inc
inc
shr
cmp
jg
outsb
xlat
or
lea
decl
scas
outsl
push
das
ja
push
les
adc
jl
inc
mov
jle
loope
or
jne
mov
fldcw
fnstenv
xchg
push
pop
mov
mov
mov
ficomps
stos
mov
xchg
sbb
fcmovne
lahf
sub
fisubl
rorl
jns
jne
mov
xchg
pop
mov
inc
push
jecxz
xchg
inc
push
mov
outsb
out
jb
jns
pop
in
jb
jne
adc
pop
int3
popf
aad
popa
out
dec
leave
ret
sbbb
mov
out
mov
pop
cmc
jae
cmp
and
int3
dec
scas
addr16
int
cltd
xchg
mov
sbbb
add
fnsave
dec
fisttps
mov
ret
into
js
dec
sub
insl
pop
scas
jecxz
inc
shrl
aaa
sub
sbb
sbb
jb
xor
xorl
shll
jmp
test
fists
icebp
popf
js
out
aad
dec
adc
sbb
mov
xor
jge
xchg
xchg
lea
sub
dec
jp
cmpsb
push
hlt
out
jbe
mov
pop
sbb
jnp
dec
int
aas
imul
imul
mov
mov
in
cmp
outsb
scas
pop
push
fsubrs
cwtl
rorl
sub
and
idivb
mov
sub
sub
mov
add
roll
roll
dec
sbb
ret
insl
mov
fadds
insl
mov
fstps
pop
stos
test
push
xchg
and
jmp
test
fwait
lods
popa
xor
pop
jge
int3
popf
mov
xchg
dec
sub
insl
test
in
dec
frstor
pop
daa
bound
push
popf
inc
aaa
aam
dec
cs
aaa
sti
inc
dec
loop
dec
popa
lods
jg
loope
mov
aad
pusha
inc
ja
push
inc
shrb
imul
xor
or
sbb
loop
mov
js
mov
dec
and
cmp
fimull
adc
mov
nop
stos
push
lods
cmp
pusha
jmp
mov
xchg
out
andb
push
and
mov
cmpsb
hlt
imul
xchg
cmp
xor
jg
sbb
std
mov
lea
xor
cli
mov
xchg
rcll
mov
pop
outsl
mov
push
loop
inc
arpl
push
pop
iret
call
cmpsb
std
leave
jmp
mov
fists
outsl
scas
fwait
mov
ret
fistl
stos
sbb
out
sahf
push
mov
scas
out
stos
jns
add
in
push
aaa
jb
inc
push
add
mov
mov
mov
mov
rcrl
aad
shrl
lods
ret
arpl
lds
mov
out
mov
inc
fs
mov
dec
xor
xchg
jle
aad
popa
dec
imul
sub
sub
js
xor
add
sbb
sarl
mov
mov
flds
xchg
inc
inc
fs
jns
mov
mov
add
or
popa
cmp
jge
sub
mov
shl
adc
push
mov
adc
push
lods
pop
pop
and
out
inc
pusha
lods
shl
ljmp
jecxz
repz
mov
adc
pop
shll
inc
je
pop
cmp
add
icebp
jp
aaa
sbb
and
dec
jo
or
push
cli
mov
sbb
mov
pop
int3
faddp
add
or
inc
add
push
fbld
dec
lret
jnp
pop
test
sbb
cli
sbb
xchg
popf
add
xchg
inc
popf
repnz
cld
cmp
xor
fldl
movsb
push
stc
pop
movsl
pop
mov
mov
pop
pop
jmp
in
dec
pop
dec
adc
test
mov
jl
push
cs
xor
and
leave
movsb
mov
sahf
repz
loopne
mov
cmpsl
lret
mov
lds
xchg
jmp
sub
add
loopne
mov
mov
test
cmp
push
jp
out
sbb
lret
xchg
movsb
jmp
mov
pop
stos
pop
cli
adc
int
lock
repz
fmuls
adc
loopne
xchg
decl
es
leave
sub
loope
xor
ss
xor
arpl
jno
pop
push
mov
add
data16
loop
roll
and
jb
lea
add
jmp
jae
mov
idiv
ja
stos
and
fisubs
pop
call
movsb
imul
clc
popf
jnp
xor
mov
pop
jo
aas
pop
cmovl
push
fs
sbb
inc
pushf
dec
xchg
mov
push
add
loopne
shufps
adc
fsubl
test
xor
bound
jb
bound
test
sub
inc
add
lea
int
dec
push
or
aas
test
push
pop
push
push
test
sbb
dec
or
inc
arpl
adc
jne
ss
es
lea
mov
lods
nop
push
lock
test
ret
xlat
adc
call
sarl
fcmovne
mov
jae
inc
scas
mov
lcall
repz
adc
sbb
sub
ja
cwtl
jno
sar
lahf
movl
push
mov
pop
sbbl
cmpb
es
inc
sub
adc
ja
aad
jmp
jb
int
push
fwait
jmp
adc
push
cmp
adcl
push
insb
sbbb
ds
cmpsb
scas
rorb
hlt
arpl
sti
pop
xchg
ret
call
mov
add
sub
pop
pop
out
aas
fsubrl
and
xchg
movsl
or
mov
add
push
cwtl
imul
xor
push
cmp
mov
cmp
test
pop
jmp
cmp
addr16
inc
xor
dec
or
lahf
jnp
lea
jae
jl
int
lcall
mov
mov
mov
mov
mov
jle
xchg
subl
adc
sbb
lods
and
test
jmp
add
mov
jge
inc
sub
or
inc
xchg
lds
or
inc
pop
push
orb
jp
scas
scas
fdivl
pop
inc
and
pop
aas
xor
inc
sbb
mov
jbe
aaa
repnz
dec
cmp
leave
in
push
push
lret
add
das
inc
stos
sbb
movsl
push
scas
pop
or
xchg
int3
dec
nop
and
adc
bound
add
test
mov
lods
andb
and
repnz
inc
shrl
mov
imul
and
call
adc
mov
sarb
dec
cmpb
mov
mov
jg
aad
xchg
scas
sbb
mov
jmp
lret
sbb
pop
std
sub
cmpb
cwtl
ret
mov
les
daa
sbbl
insl
add
call
loope
aad
in
pop
lret
push
insl
sbb
xchg
fstpt
addr16
adc
jle
cmp
iret
cltd
in
jae
jle
adc
movsb
lock
pop
mov
sbb
ret
ljmp
mov
inc
jmp
mov
ja
mov
xchg
mov
jl
repnz
aaa
fdivl
clc
fcomps
and
movsl
xorb
inc
cltd
mov
movsl
cltd
pop
push
fwait
and
cmp
enter
mov
xorb
mov
rcr
je
pop
cmp
lret
jl
cmp
lock
pop
adc
orb
pushf
cmp
cld
cwtl
fdiv
cmpsl
shrb
inc
cmp
xorb
or
fadd
inc
and
imul
mov
scas
and
xor
icebp
ret
add
or
sbb
js
jns
ret
shlb
push
popa
xor
or
sbb
mov
sti
enter
and
ja
addr16
add
jnp
and
xchg
scas
sub
addl
iret
frstor
call
insb
or
repnz
push
sti
movsl
loopne
repnz
xor
or
xchg
dec
imul
shrd
mov
aad
mov
xchg
jecxz
scas
repnz
lods
mov
sub
jbe
sub
fcomps
into
lret
imul
xchg
jno
je
and
inc
lock
xchg
test
or
sbb
xlat
sub
mov
cwtl
scas
jne
add
out
cmp
or
iret
dec
js
adc
pop
hlt
jmp
mov
aas
pop
in
int
xor
lret
mov
xchg
jno
shl
push
adc
lea
jp
sbb
push
ja
inc
push
int
mov
fstp
fmuls
shrb
ret
adc
std
mov
jbe
std
rorl
shl
je
movsl
enter
inc
add
or
pop
xlat
test
mov
imul
sub
mov
shlb
and
mov
mov
fisubs
lcall
js
pop
cmc
xchg
lahf
test
cltd
jl
mov
leave
ss
jg
inc
je
dec
sbb
aas
hlt
std
jno
cmp
push
out
rcrb
dec
pop
jne
adc
push
out
incb
nop
daa
insl
mov
xchg
stos
shlb
mov
aas
fwait
cmpsl
xor
bound
sub
cltd
das
mov
push
cmpb
and
mov
les
dec
in
xchg
leave
sub
imul
sbbl
data16
dec
push
in
jle
mov
shl
pop
std
mov
pop
pop
iret
pusha
cmp
push
imul
pusha
arpl
push
pop
sbb
add
or
inc
sbb
xlat
or
mov
pop
push
jo
lock
call
insb
fucomi
out
ljmp
and
mov
ret
roll
push
in
and
xchg
clc
out
jg
std
mov
stc
pop
mov
arpl
mov
aad
mov
push
mov
mov
or
pop
push
ds
pop
jo
pop
out
incl
fs
pop
sbb
lds
adc
loop
mov
lretw
addl
xchg
xor
movsl
cld
das
sub
or
inc
addr16
mov
push
movsb
jae
ljmp
clc
stos
mov
jmp
in
sub
mov
cmpsl
or
sub
xor
mov
cld
cmp
lods
fldcw
testl
mov
sbb
xchg
sahf
push
xor
subb
mov
clc
in
bnd
push
mov
rcrl
xor
add
mov
xor
in
in
pop
xor
test
roll
in
jno
iret
mov
shll
or
push
imulb
inc
cltd
mov
or
mov
xor
das
jo
inc
rorl
fldenv
mov
outsl
bound
jae
push
xor
shll
popl
ds
lods
ficomps
xchg
das
aad
cmpsb
add
dec
aad
ds
stos
push
push
decb
adc
push
dec
mov
fldt
cld
addb
cmp
lods
xor
fcmovu
stc
sti
xchg
jp
jae
mov
sub
std
xor
outsl
fistl
jno
lock
out
cmp
and
add
nop
or
mov
add
push
xchg
jo
loopne
mov
adc
cmpsb
pop
add
jno
cwtl
pop
or
test
inc
xor
loop
gs
mov
push
jo
int3
mov
sbb
sti
jg
gs
scas
and
nop
insl
sbb
test
mov
cmp
stos
pop
jns
mov
xchg
pop
adc
insl
ret
test
push
jne
fs
arpl
jnp
push
mov
jp
or
mov
mov
dec
out
add
js
inc
pop
push
cmpsb
movb
out
dec
push
sub
adc
push
push
hlt
outsl
cmp
stos
add
daa
cmp
jle
sub
mov
pop
sub
cli
lret
les
popa
xor
or
jp
jle
push
pusha
jnp
hlt
pop
in
mov
sub
fmull
arpl
clc
mov
xchg
push
enter
sub
rclb
cmp
cli
jl
sbb
scas
dec
ja
jl
pop
mov
adc
pop
jae
cmc
fldenv
sub
aaa
mov
data16
in
jae
xchg
push
fidivl
lods
xchg
popf
rolb
mov
les
int
movsl
push
lock
mov
adcl
xchg
hlt
lcall
xchg
sbb
gs
adcb
add
pusha
ret
popa
filds
xchg
clc
loopne
insb
sahf
scas
sub
add
or
sub
lret
sbb
pop
gs
es
sarl
sahf
mov
out
mov
adc
sub
pop
add
aaa
push
mov
push
adc
push
sub
pop
aas
jns
cmp
test
cld
clc
mov
arpl
push
xchg
xchg
mov
mov
add
sbb
in
aas
insb
adc
sbb
aas
sub
fs
and
sti
jbe
or
loope
mov
popf
mov
push
jmp
mov
push
test
and
fsubrs
jns
pop
clc
mov
andl
and
iret
daa
sub
pop
inc
inc
das
cmp
xor
shll
jbe
loope
inc
mov
loopne
pop
xor
inc
and
outsb
jle
jo
mov
ds
dec
dec
imul
sbb
jno
ret
test
sahf
int
sarb
stc
scas
dec
seta
clc
pop
xchg
fsubrl
jmp
inc
aas
pop
out
mov
ss
dec
rcrb
rolb
adc
and
cmpsl
insb
out
arpl
xor
inc
lock
arpl
shrl
loopne
popa
in
ret
arpl
into
bound
iret
mov
add
pop
stos
push
jge
addl
clc
mov
test
loope
scas
dec
lods
or
pop
aad
ficoms
enter
sub
dec
in
stos
out
push
jmp
das
out
stos
and
lods
mov
movsb
xlat
dec
or
ja
pop
int3
rcl
setbe
jecxz
fnstcw
mov
pop
sub
shlb
movsb
mov
pop
mov
ficompl
sub
dec
mov
in
xchg
jmp
das
cmc
xlat
je
pop
scas
inc
movsl
adc
popf
cmp
mov
jge
dec
mov
dec
test
add
mov
push
sti
call
cmp
jecxz
fiaddl
das
jbe
scas
pop
dec
ljmp
mov
pop
jge
sbb
push
nop
dec
xchg
leave
hlt
fildl
leave
int
loopne
ljmp
cmc
inc
or
and
int
jbe
mov
popf
adc
push
xor
cmp
popf
xchg
add
sub
jle
jnp
fidivl
add
aaa
fmulp
lods
out
xor
mov
lret
push
or
push
jmp
sbb
paddb
sub
sbb
pop
lods
jge
cwtl
in
jecxz
pop
pusha
adc
lahf
repz
xchg
imul
idivb
xchg
test
push
lea
fldl
cmc
mov
mov
sub
test
xchg
test
fildll
mov
out
mov
jg
cld
pop
push
clc
fmull
popf
movsb
inc
rolb
xchg
and
loope
movsl
jnp
xorb
xor
push
mov
stos
sub
les
rcrb
loop
and
sub
sub
and
lret
or
sti
pop
or
loopne
dec
cmp
sbb
pop
fists
dec
inc
xchg
testb
sahf
mov
popa
sti
int
test
popf
addr16
cmpsl
xchg
adc
mov
and
mov
dec
dec
add
or
xchg
push
fisubrl
sub
jnp
add
and
xchg
or
push
cmpsl
mov
pop
lods
or
mov
or
xchg
xchg
xchg
add
xchg
mov
add
push
fidivrs
pop
xor
mov
mov
mov
push
xor
mov
lock
fwait
mov
mov
inc
sbb
stc
je
sbb
mov
lea
clc
and
loop
testl
xlat
or
push
xor
out
adc
loope
mov
cmp
cmp
fbstp
cmp
xor
dec
mov
inc
das
loopne
mov
ds
sub
lods
lret
in
inc
int
inc
adc
imul
ret
inc
mov
insb
adc
in
xchg
adc
push
sub
cmc
mov
push
aaa
iret
mov
dec
xchg
fisubrs
jl
je
out
mov
mov
push
mov
out
les
lods
mov
pop
popa
sahf
or
sub
xchg
fldl
cmp
pusha
cmp
sub
sbb
insb
push
sub
add
loopne
push
js
dec
vpaddq
xchg
movl
divl
nop
mov
fwait
push
std
mov
cmp
dec
sti
repz
cs
mov
mov
movsl
int3
divl
roll
mov
clc
lea
or
testl
inc
xchg
and
imul
lret
stos
mov
and
mov
das
iret
push
sbb
out
stc
out
lea
scas
adc
inc
jno
and
call
loopne
out
sub
out
fs
scas
mov
xor
in
jne
cmc
xchg
test
test
bswap
add
fisttpll
std
mov
inc
mov
mov
popf
or
sub
jb
nop
push
cmp
cwtl
shl
lret
out
inc
add
push
jle
pop
fwait
insb
dec
std
pop
leave
pusha
adc
adc
dec
sub
clc
sbb
sub
lcall
add
shrl
ret
lahf
mov
movsb
push
push
jmp
fcomip
in
add
mov
mov
jne
push
pop
aaa
dec
cli
sub
jg
scas
pop
popa
data16
ljmp
fsubs
xor
lret
adc
repz
fdivr
loopne
dec
fisubrs
and
nop
push
repnz
ficoml
and
sub
push
xchg
aas
sub
jge
mov
imul
arpl
movsl
lock
push
push
cmp
mov
adc
xchg
aad
je
jecxz
into
aas
xor
mov
mov
clc
ss
mov
inc
nop
pop
add
adc
xor
mov
pusha
or
int3
aaa
cmp
and
jle
push
add
cmp
ret
jbe
call
ret
add
sub
mov
push
fs
dec
cmp
insl
xor
punpckhbw
incb
sbb
hlt
jle
push
or
out
mov
pop
insb
in
fiadds
fwait
dec
es
pop
nop
jp
push
mov
dec
jns
scas
mov
sub
mov
jmp
push
fidivrs
jmp
mov
nop
pusha
pop
push
test
es
scas
xchg
out
push
jg
lret
mov
mov
scas
cmpsl
pusha
or
ljmp
dec
xlat
and
push
push
jge
dec
or
jge
xchg
in
dec
sub
adc
cmpsl
shrb
mov
out
ficoml
xor
jo
into
shlb
sbb
stos
jl
lods
mov
mov
mov
sbb
dec
lock
xchg
sub
push
cmp
insl
test
mov
lea
jns
inc
ja
adc
es
mov
sti
or
xor
les
mov
shl
repz
and
jne
repz
add
lret
jmp
xchg
movsl
test
out
nop
jnp
cmp
or
sti
xchg
js
mov
push
shrl
dec
or
aaa
insb
lret
push
xchg
aaa
inc
dec
clc
les
or
push
add
or
and
inc
sbb
cwtl
clc
sub
xchg
xchg
jno
sub
mov
incb
subl
ret
hlt
xchg
fcomi
gs
cmp
lods
clc
sbb
pop
ss
stos
shl
or
and
mov
add
aad
arpl
rorl
or
gs
mov
subb
pop
cs
mov
xlat
adc
lret
cmpsl
cmp
cmc
sahf
dec
mov
mov
dec
ret
movsl
shrb
imull
add
cmp
inc
ret
pop
xor
sub
and
stos
push
andl
stos
jge
bnd
pushf
adc
sbbl
test
mov
stos
int3
pop
cwtl
xchg
addr16
and
popa
mov
adc
or
jp
adc
jne
and
es
cmpsb
xchg
add
testl
fwait
mov
rcrl
mov
cmp
outsb
and
xor
add
test
push
mov
lret
out
pop
mov
outsb
inc
adc
cmp
inc
outsb
xchg
pop
in
push
add
add
clc
shll
mov
sahf
ja
andb
mov
push
insl
jns
stos
dec
fisubrs
add
mov
mov
jle
cmpsb
and
and
mov
mov
mull
jl
fsubs
pop
daa
xor
sahf
dec
stos
mov
aaa
aad
imul
dec
lea
mov
and
cmc
imull
adc
xor
mov
or
ss
sub
pop
add
xchg
aad
add
jnp
cltd
push
jl
adc
jo
mov
dec
mov
fwait
inc
shr
mov
pop
mov
popa
pop
xchg
sbb
test
cld
leave
fs
jmp
in
loop
dec
lcall
js
add
fadds
add
data16
and
mov
adc
push
jb
aaa
hlt
mov
xor
out
xor
jnp
push
xor
fidivrs
inc
dec
cmp
add
sbb
adc
jecxz
mov
scas
sub
js
popa
push
xlat
inc
cli
add
dec
gs
mov
stc
jbe
sahf
ret
sub
lret
sbb
xchg
and
sbb
and
or
lock
stos
mov
jl
negb
insb
or
push
xchg
pop
add
bound
push
cmp
mov
mov
xor
xchg
push
cs
in
adc
jmp
mov
aad
mov
xor
push
fmull
js
ja
mov
mov
dec
int
mov
xchg
sub
inc
rol
jne
xchg
inc
rorb
jns
sbb
outsl
xchg
lahf
notl
xchg
imul
add
push
jae
cmc
mov
xchg
adc
mov
jno
mov
mov
hlt
xchg
or
icebp
imul
and
cmpsb
adc
fisttps
test
and
mov
push
jecxz
mov
adc
jp
scas
enter
repz
mov
ficomps
mov
jl
dec
dec
mov
inc
adc
ret
pop
fistpl
add
and
sub
js
xchg
inc
test
sbb
cmpsb
adc
xchg
fnstenv
inc
mov
add
cs
rorb
adc
hlt
fistpll
xor
int3
xchg
jns,pt
and
jb
ret
xchg
cli
xor
repz
in
mov
inc
cmp
fwait
dec
psrlq
and
int3
call
icebp
jge
cmpsb
lods
push
daa
inc
xchg
jbe
mov
and
rorl
dec
in
jnp
add
arpl
mov
or
aad
cltd
mov
dec
les
adc
ret
fwait
push
sarb
mov
in
inc
ljmp
jbe
les
movsl
stos
sbb
repz
push
cmp
out
out
int3
cmp
pop
dec
out
cmpl
mov
mov
lret
xchg
push
int3
filds
lods
gs
jnp
inc
pushl
xor
dec
das
ret
je
ja
gs
inc
xor
jae
or
cs
push
es
cld
lds
and
pushl
outsl
repz
lds
sub
sub
adc
dec
add
cmpsl
fnsave
pop
insb
jo
mov
stos
sub
add
inc
leave
ja
pop
lea
pop
sbb
arpl
xchg
inc
jnp
insb
add
sub
lcall
mov
dec
or
pusha
imul
add
xchg
in
ja
iret
xchg
inc
pop
mov
dec
popf
jne
and
das
inc
ljmp
loop
mov
in
test
pop
adc
cmp
fisubrs
fists
call
pop
mov
bound
popa
dec
or
aam
roll
lods
jp
cli
and
mov
mov
mov
stc
inc
in
pop
cli
push
js
sub
test
mov
loop
mov
cmc
enter
mov
or
cld
sbb
ljmp
in
or
mov
inc
shl
fs
cmp
or
test
popa
mov
scas
dec
sbb
push
jbe
jl
and
and
ja
jle
adc
add
test
sahf
pop
push
lret
jae
int
push
pop
mov
inc
in
rorb
loope
sub
pop
ret
jp
insl
push
mov
fsubl
mov
scas
mov
and
mov
pop
dec
push
loop
call
imulb
inc
push
push
negl
jmp
ja
rorl
fisttpl
rol
and
pop
jle
arpl
mov
ja
mov
sbb
inc
daa
into
das
push
xchg
sbb
popa
sub
jns
jl
into
rolb
mov
cmp
out
outsl
inc
dec
and
jae
lcall
ljmp
jne
or
cmp
hlt
inc
push
std
cmp
ja
ds
push
push
movsl
xlat
imulb
neg
jmp
test
std
movsb
test
inc
fs
cmp
pop
push
and
mov
xor
lret
call
fucom
jmp
loop
xor
xchg
xchg
in
inc
xchg
inc
out
loope
clc
imul
loopne
xchg
sub
push
out
jae
dec
pop
shrb
orl
dec
add
jp
push
mov
ret
cmp
cmc
mov
jno
pushf
movb
inc
int3
imul
aam
and
adc
test
cltd
mov
aas
jae
sub
gs
fmul
es
and
sub
push
imull
andb
outsb
leave
cld
fisubrs
enter
sbb
aam
fptan
xor
push
dec
jmp
lock
stos
ds
push
xor
adc
jns
fisubrs
imul
inc
push
push
fldenv
movsb
or
lahf
xor
pop
mov
neg
sub
in
mov
or
sub
fdivl
bound
jg
rolb
loopne
pop
push
test
fwait
das
mov
stos
es
mov
cmp
pop
lret
in
loop
adcl
pop
sbb
inc
push
mov
or
les
push
cmp
bound
lret
cs
push
pop
test
scas
lret
push
scas
clc
sahf
scas
shrl
push
or
stos
fildl
imul
shll
inc
jno
sub
mov
or
and
cltd
jecxz
sub
icebp
and
jae
lods
and
cmp
bound
pop
sbb
mov
ljmp
mov
and
mov
sbb
push
repz
scas
lcall
mov
xor
inc
rorl
xlat
movsb
xlat
xlat
ss
rorb
adc
or
loope
out
jb
and
adc
or
loopne
bound
ds
fxtract
pushf
mov
repz
pop
inc
pop
addl
mov
stc
hlt
push
popf
sub
leave
clc
jp
out
addl
les
jg
dec
sbb
sbb
xor
rorb
pop
cld
in
fsubs
mov
inc
and
mov
sbb
sub
mov
add
jge
jnp
rol
cmp
fadds
add
mov
sbb
iret
sub
add
icebp
in
mov
roll
addb
iret
movsl
sub
fwait
repnz
lods
sbb
movsl
or
fcomp
scas
fidivrs
xlat
rorl
addr16
push
fisubs
movsb
inc
dec
pop
and
jmp
stc
aas
daa
les
pushf
push
xchg
mov
pop
adc
sahf
sbb
xor
sar
xor
movsb
and
enter
jno
jmp
dec
lret
and
adc
jno
dec
jnp
sub
xchg
push
negb
test
xor
mov
int3
aad
mov
jbe
lea
or
adc
es
fstpl
aaa
xchg
inc
and
outsl
and
in
or
inc
lods
inc
daa
subl
stos
cmpsb
push
ja
lods
sti
insb
xchg
mov
and
xchg
and
fwait
push
sub
mov
stos
aaa
imul
and
fs
and
stos
cmpsb
mov
daa
add
dec
jb
imul
sbb
inc
outsb
jb
call
xchg
cmp
es
add
xchg
arpl
pop
jecxz
jbe
out
adcb
sub
test
mov
int
push
or
das
mov
xchg
xor
sub
and
sbb
std
pop
push
lds
or
xchg
dec
push
filds
sbb
adc
push
cmpsb
fdivrs
xchg
fidivrs
fwait
js,pn
sahf
mov
adc
loope
scas
int
lods
or
iret
in
lret
fwait
add
hlt
loope
mov
xor
jle
mov
int
fs
or
dec
mov
sub
shr
xchg
std
int3
frstpm(287
movsb
ret
fisttpl
mov
jns
cmpsl
jnp
pop
loop
mov
sbb
icebp
adc
sub
sbb
aaa
sbb
lock
outsl
jb
cwtl
push
dec
pop
lcall
inc
dec
adc
dec
mov
pushf
add
test
jnp
out
jnp
sets
dec
push
repz
mov
loopne
stos
mov
imul
sub
and
movsl
ret
fadds
pop
or
pop
inc
cmp
push
cmpsb
lcall
test
sub
cmp
xchg
jb
push
aam
lret
pushf
inc
in
jbe
icebp
sub
mov
mov
pop
xlat
std
xor
and
mov
fldcw
and
dec
jbe
fdivs
fstps
fisttpll
sbb
icebp
insb
cltd
ficoms
add
cld
xor
add
mov
mov
xlat
adc
es
popf
mov
push
cltd
jg
in
add
jge
push
or
in
mov
dec
out
clc
call
pop
inc
test
mov
sti
jecxz
sti
mov
mov
sbb
out
xchg
adc
adc
and
cltd
lea
icebp
mov
ss
pushf
cwtl
test
enter
rcrb
mov
rorl
cmp
sbb
nop
dec
dec
movsb
push
inc
in
pop
push
sti
mov
push
pop
notl
xor
pusha
mov
mov
call
adcb
mov
sti
pop
not
in
outsl
and
mov
sub
xlat
int3
aaa
cmp
mov
push
xchg
pop
ss
aad
fs
andl
lods
stos
adc
and
mov
insb
mov
hlt
leave
scas
add
jno
test
inc
cli
cmp
arpl
pop
jge
push
xor
cmp
ljmp
aaa
pusha
mov
subb
mov
cmpsb
pop
es
xor
repnz
push
pop
push
aas
imul
xlat
cmpsb
rcll
int3
mov
jbe
out
and
and
mov
pop
mov
push
dec
adc
daa
push
stos
and
mov
sbb
xor
inc
sbb
mov
aam
stc
jmp
mov
push
nop
out
and
pop
shrl
int
cmp
mov
das
pop
xchg
cmc
rcr
in
pop
bound
sbb
inc
cmp
cli
or
into
fucomi
gs
fwait
mov
call
xlat
xchg
loope
inc
js
jecxz
ret
mov
mov
add
out
arpl
repz
mov
mov
aaa
push
mov
negl
loopne
pop
ja
shrb
imul
repnz
sbb
mov
dec
jge
and
ss
fs
mov
pop
popf
out
dec
mov
gs
aas
lret
mov
pop
mov
hlt
inc
mov
mov
stos
out
repz
mov
popa
pop
aaa
fisubrs
jg
cmp
loop
inc
and
pop
inc
movsb
bound
jmp
push
cmc
flds
filds
mov
xchg
mov
mov
gs
cwtl
aad
in
shl
jp
loope
push
rorb
in
cmp
add
push
sbb
adc
cltd
sub
lods
sbb
dec
dec
dec
jb
sbb
fst
shll
mov
xchg
xor
pop
cmpsb
jmp
cs
std
lods
scas
xor
jnp
stc
cs
jl
push
and
xchg
int
pop
jmp
iret
dec
out
std
inc
lds
inc
xor
inc
data16
movsb
inc
adc
cmp
add
pop
cmpsl
scas
dec
shl
cld
cmp
or
inc
and
push
xor
fidivrl
xor
loop
sbb
add
jmp
ja
or
test
cmpsb
xor
leave
xchg
jge
outsb
pop
inc
stos
inc
push
icebp
jns
int
dec
jno
xchg
jne
sbb
push
pop
cli
mov
or
jle
mov
sahf
add
jbe
test
xor
rcr
xchg
add
add
dec
int
add
fwait
and
call
test
jno
jl
mov
mov
mov
inc
dec
leave
stos
inc
inc
and
enter
push
sarl
sahf
stc
mov
idivl
icebp
ret
mov
fsts
mov
loop,pn
call
jns
bound
ret
shlb
jmp
cmpb
rcrl
outsb
std
xor
pop
fisttpll
popf
cmp
stos
xchg
xlat
scas
inc
cli
ret
insl
cmp
add
loope
adc
nop
add
push
inc
arpl
push
inc
add
gs
mov
add
out
sub
les
mov
mov
stc
in
xlat
in
cmp
in
cmc
mov
adc
cltd
test
into
ja
push
fcmovnbe
ret
sub
cmp
or
aam
lahf
scas
xlat
test
out
nop
jns
mov
ds
daa
out
inc
fnstenv
ss
jecxz
popf
aas
jle
scas
jb
mov
push
add
xchg
pop
jns
roll
cld
cwtl
push
xor
xchg
mov
inc
divb
xchg
xchg
xchg
das
pop
mov
das
aas
pop
push
adc
add
test
sub
lock
xor
push
outsb
jo
into
inc
mov
mov
fsts
outsl
es
pop
sub
jno
push
xchg
cmp
sbb
and
xchg
push
sti
adc
dec
ds
sub
lea
jg,pt
fnstcw
xchg
push
push
mov
roll
clc
adc
bound
pushf
es
out
pop
es
inc
fs
mov
ret
push
inc
ja
out
mov
xchg
fmull
pop
pop
nop
jecxz
sti
cmp
mov
cmp
and
xor
jecxz
shll
test
push
mov
mov
mov
insb
mov
addr16
cltd
in
and
pop
fists
fdivrs
pop
mov
int3
mov
add
call
fcmovne
xchg
push
cmp
push
popa
lret
push
cld
in
sub
jbe
fdiv
fsubp
in
mul
jp
out
pop
xor
jns
mov
pop
cld
fcoms
pop
lcall
jecxz
data16
into
lret
mov
shll
in
cmp
and
xchg
and
sub
mov
push
sub
call
mov
aaa
loop
xor
int
pop
rorb
fwait
mov
stos
stc
mov
mov
popf
mov
pop
sub
push
push
xchg
inc
test
clc
push
into
sub
movb
sub
sub
out
and
inc
ret
adc
pop
mov
inc
mov
repnz
mov
imul
jecxz
dec
dec
dec
fnsave
push
and
in
fsts
jge
scas
jno
mov
xchg
pop
or
and
xchg
lds
jne
cmc
popa
iret
adcl
xchg
push
mov
std
stc
push
imul
fidivs
repz
adc
mov
push
add
popf
in
jle
pop
in
loopne
je
jmp
call
xchg
sbb
jbe
ficoml
mov
mov
dec
sti
in
inc
sti
clc
iret
jne
sbb
shll
stos
scas
jecxz
nop
mov
shll
data16
push
out
testb
xlat
testb
movsb
inc
push
test
xor
add
mov
insl
jmp
nop
fdivrl
push
incb
xor
jbe
sbb
ljmp
popa
dec
jmp
mov
daa
jmp
or
push
clc
fiadds
jp
loope
scas
testb
orb
dec
scas
sbb
inc
pop
jnp
shll
add
ret
adc
jno
aas
pop
pop
div
inc
add
clc
jae
fidivrl
add
pop
sub
aaa
sbb
jle
adc
in
xchg
jmp
and
stc
out
jbe
ds
aam
sbbb
mov
push
or
xchg
push
pop
popf
stos
push
rcrl
leave
imul
jb
out
xchg
add
xor
jo
xchg
mov
add
clc
fwait
inc
aas
aad
enter
int
jne
mov
jecxz
mov
add
push
mov
nop
addb
sub
test
out
movsb
aaa
sarl
mov
addr16
adc
pop
inc
mov
call
mov
fistpll
cli
mov
jbe
out
pop
jle
push
pop
sbb
xchg
out
iret
push
or
jb
gs
ret
dec
out
push
jge
stos
dec
adc
fsub
sbb
xor
imul
insl
push
push
pop
xchg
or
inc
stos
jecxz
repnz
xchg
jae
cmpsl
xchg
xorb
cs
add
int
inc
shl
add
jmp
inc
or
lea
jp
cmp
inc
in
imull
mov
iret
sarl
addb
sbb
test
test
hlt
fucom
mov
orb
out
inc
or
out
jno
add
cld
loope
mov
je
xchg
sub
das
pop
xchg
xchg
call
faddl
sub
popa
out
sub
and
dec
and
add
test
mov
loopne
sub
mov
arpl
fwait
xchg
mov
push
hlt
jae
addr16
add
lods
mov
shrl
lcall
in
sti
ja
pop
aas
pop
sbb
mov
rcl
push
insb
cmp
stos
jo
sbbl
fidivrl
pop
push
adc
xchg
push
adc
sub
pushf
jno
mov
in
sahf
mov
jns
jmp
std
mov
loop
in
hlt
sarl
adc
jmp
push
adcb
jmp
push
imul
xchg
mov
cld
adc
inc
adc
sub
sbb
inc
add
inc
iret
inc
inc
xchg
es
pop
mov
mov
mov
pop
cmpsl
es
sbbl
lsl
mov
mov
js
xchg
push
ljmp
lock
or
pop
xchg
inc
sub
sbb
sbb
cli
add
psrlw
popa
ja
in
call
daa
test
cmc
and
dec
lret
adc
dec
adc
push
inc
push
andl
sbb
scas
mov
ljmp
rcll
test
mov
fmul
aaa
xchg
scas
popa
scas
pop
xor
fadd
xchg
enter
ja
cmp
jne
jmp
jge
in
fidivs
cmpsb
or
lock
sub
ljmp
xor
ds
mov
scas
shll
fs
fnstenv
and
jg
xor
cld
sbb
iret
cli
clc
icebp
sbb
outsl
std
les
fs
movsl
cmp
add
cmp
lds
mov
jne
pop
sbb
in
int
arpl
pop
aam
mov
xlat
fcompl
lahf
fmulp
jge
sbb
and
or
inc
sti
out
out
test
lcall
test
inc
out
push
lods
add
nop
aaa
ror
and
jae
gs
jno
movl
fnstcw
mov
jbe
jb
xchg
mov
pushf
shlb
lods
int
int3
sar
sub
xchg
jbe
pushf
sub
mov
icebp
cld
cmp
nop
inc
cmpsl
js
aas
or
mov
inc
shlb
test
out
fistps
lods
pop
xor
xlat
xchg
movsl
fs
cmpsl
inc
adc
sarl
jmp
lds
cmp
repz
mov
mov
aaa
ljmp
dec
bound
xchg
in
xchg
add
fmull
and
pop
jge
imul
cmp
mov
lret
cld
cmp
jo
jg
xchg
sahf
adc
lret
les
dec
mul
jb
adc
test
push
xor
sbb
pop
pop
xchg
push
or
push
movsb
xor
enter
xchg
scas
xchg
pop
jae
pusha
add
scas
ja
or
mov
les
fsubl
int3
or
and
lods
pop
in
mov
jl
push
jle
inc
lcall
jmp
and
pop
inc
into
xchg
negl
jnp
xchg
call
jle
cltd
xchg
pop
xchg
je
cmp
adcb
adc
decb
lret
pop
sub
push
pop
loopne
mov
popf
push
inc
sub
mov
insb
dec
jge
xor
push
popa
stc
mov
xchg
popa
jecxz
adc
lea
xor
mov
push
xchg
pop
subl
cmp
lcall
sub
in
je
mov
stos
out
idiv
test
mov
mov
hlt
test
or
mov
lds
mov
daa
push
andl
jbe
pop
inc
jmp
sahf
ja
xchg
incb
loope
jbe
jge
inc
leave
add
xorb
stc
and
jl
ljmp
ja
daa
call
dec
stc
cmpsl
push
repnz
xor
pop
mov
stos
outsb
mov
mov
add
xor
mov
inc
xchg
cltd
dec
jo
test
add
and
imul
in
mov
pop
call
and
into
stc
push
xor
xchg
into
push
cmp
imul
out
insb
or
dec
cli
add
push
jp
leave
and
icebp
ret
arpl
cmp
imul
sar
pop
dec
cli
jae
sarl
clc
jg
dec
jb
movl
xor
loope
xor
mov
mov
jl
loope
sbb
ljmp
push
popa
or
insl
fs
push
adc
cld
ficomps
rorb
nop
cld
sbb
out
inc
out
sbb
out
adc
data16
push
inc
mov
jecxz
add
mov
pop
nop
xor
and
push
cs
jecxz
repnz
mov
mov
lea
les
pop
cmp
push
push
add
mov
push
jb
dec
mov
push
pop
popf
aaa
loop
leave
mov
aas
adc
test
cmc
dec
mov
pop
cmp
in
repz
dec
shrb
lret
cmp
sbb
sub
adc
sahf
or
add
inc
inc
adc
clc
jmp
xor
pusha
jle
or
leave
cmpsb
mov
jb
imul
adc
jge
dec
xchg
or
imul
push
jo
and
ss
adc
dec
mov
xchg
push
pop
into
and
push
mov
js
incl
mov
push
cmpsl
out
mov
dec
ret
mov
xchg
out
pop
call
dec
jecxz
xchg
je
or
or
cmp
mov
mov
mov
mov
mov
xchg
inc
add
mov
xchg
daa
pop
das
add
out
mov
pop
jecxz
ret
test
xorl
jmp
out
nop
frstor
in
sub
leave
push
jnp
add
iret
movsbl
mov
pop
jle
cmpl
jne
rorl
fisttps
inc
sub
pop
push
xchg
and
push
inc
mov
pusha
or
mov
push
mov
sub
sbb
push
ret
loopne
fisubrs
bound
cmpsl
dec
int
mov
out
sbb
mov
fs
mov
int3
shll
nop
fwait
adc
cmp
inc
mov
cmc
fldcw
xorl
lods
arpl
pop
mov
dec
xor
and
mov
les
and
sbb
in
js
mov
es
jge
insb
popa
fdivl
dec
pop
mov
hlt
pop
sub
test
mov
cmp
inc
aaa
shlb
fcompl
shrl
pop
fadd
sbb
xchg
lods
mov
scas
and
dec
mov
sub
pop
lods
insl
or
dec
xor
push
insl
fildll
hlt
push
mov
pop
jge
pop
std
fdivs
dec
rorb
jns
push
jnp
add
mov
push
mov
pop
popa
loop
out
scas
add
adc
loopne
stos
loop
outsb
jge
pop
shll
jle
pop
xor
rcrb
imul
addr16
mov
add
mov
mov
aam
lcall
lret
xor
adc
adc
sar
bnd
loope
adc
shrb
jg
sub
leave
mov
sub
pop
addr16
jb
sbb
roll
popf
pop
jae
xor
cmc
inc
mov
push
xlat
dec
mov
xor
push
cmp
add
ljmp
pop
mov
jo
jp
test
scas
push
data16
ret
pop
sbb
test
xchg
adc
sar
aam
test
nop
call
pop
repz
ss
int3
sarb
pop
jecxz
push
and
pop
mov
or
and
xor
mov
jge
inc
xchg
mov
cmp
pop
xchg
sbb
mov
filds
sub
push
rorb
lods
dec
dec
push
pop
sbb
bound
push
add
dec
seto
push
mov
ret
inc
addb
jns
in
jno
out
out
mov
xchg
sub
insl
jle
sbb
adc
or
jmp
add
adc
leave
or
dec
xor
pop
xor
scas
imul
pop
sub
rcrl
mov
pop
sub
test
sbb
ljmp
sbb
out
xor
mov
and
mov
xchg
jl
dec
scas
and
fbstp
jnp
scas
push
aas
shll
lcall
jne
cld
cmpsl
aad
popf
lods
sub
inc
dec
cmp
add
push
imul
jle
and
shrl
cli
jle
mov
test
test
inc
loopne
and
dec
ss
testb
push
daa
adc
inc
pop
mov
push
dec
inc
push
inc
sbb
add
int3
fimuls
int3
loopne
or
aas
dec
mov
lret
sbb
pusha
int3
push
adc
and
and
test
mov
lret
xchg
int
sahf
cmpsb
xor
and
lods
shrl
dec
mov
ret
in
popf
jmp
inc
add
aam
rorl
jmp
outsb
fdivrs
ret
je
cmpl
mov
in
push
ss
xchg
movsb
sbb
lock
mov
mov
ja
cmp
jne
insb
dec
push
out
repnz
andl
in
pop
pop
xchg
jmp
test
ljmp
inc
cmp
sti
scas
cmp
cli
icebp
or
mov
pushf
or
xchg
in
lcall
cld
xor
test
fwait
add
adc
in
xor
jnp
pop
sbb
ret
jb
push
call
jp
cmp
sbb
lcall
dec
subb
into
xor
inc
adc
pop
mov
fstps
mov
outsl
shlb
sub
push
notb
cmp
mov
xchg
fdivl
jae
gs
in
outsl
les
imul
popf
xor
xchg
mov
mov
sti
std
push
mov
mov
je
int
test
loopne
lods
aam
fs
or
daa
call
movsl
cmpb
cmp
test
jae
sub
and
ja
ss
aad
loope
in
pop
and
les
inc
mov
aad
mov
jnp
jnp
jno
mov
mov
addr16
lods
inc
and
clc
jmp
push
inc
icebp
jo
stos
jns
cs
daa
imul
and
dec
pushf
xor
and
insl
les
inc
cli
in
test
rcl
sar
div
inc
loopne
sti
or
jae
es
jg
inc
sahf
pop
mov
and
pusha
and
xor
mov
jg
bnd
cmp
int
push
cmp
lds
test
test
pop
and
jl
loope
mov
in
jecxz
jns
add
sub
inc
adc
jns
insl
mov
jnp
movsb
lret
repz
cmp
sbb
pop
mov
inc
sub
and
test
mov
push
xchg
mov
movsl
js
xor
popf
nop
testb
or
test
imul
cli
daa
or
xchg
mov
repz
mov
inc
mov
xchg
cmp
adc
in
scas
and
loopne
mov
lock
outsl
or
out
xor
and
mov
mov
and
xchg
jo
inc
mov
sub
mov
jae
pop
push
ret
outsb
je
test
repz
faddl
fwait
imul
pop
xchg
leave
mov
popf
sub
inc
fisubl
dec
arpl
mov
js
inc
test
mov
xor
jno
jae
les
imul
xchg
dec
addl
fidivs
data16
notl
push
imul
icebp
loopne
dec
push
jp
mov
sbb
mov
in
pop
enter
push
cmp
add
cmp
jns
mov
in
dec
pop
push
jne
jmp
push
mov
xor
in
mov
fidivrs
jp
rclb
mov
push
xchg
xchg
cmp
push
cmp
je
xchg
in
popf
and
xchg
rcrl
pop
xchg
into
fdivl
adc
es
push
cs
push
js
idiv
imul
js
cmp
mov
and
xchg
sbb
loopne
xchg
dec
jns
dec
sub
lods
repz
add
cs
mov
rcrl
sub
insb
test
cli
outsb
xchg
jle
add
or
jl
andl
xchg
je
xchg
add
sbb
ljmp
decl
jne
mov
dec
rol
cltd
loope
loope
inc
out
add
ret
cmpsl
loop
add
in
sbb
mov
inc
fimuls
iret
shl
xor
outsb
pop
and
dec
dec
push
dec
mov
fs
scas
imul
sbb
inc
inc
inc
xchg
divb
add
cmp
daa
jecxz
adc
movsb
xchg
mov
xchg
les
sub
xor
xchg
mov
lds
fcomps
mul
hlt
xchg
xchg
shrl
sub
cmc
jns
jno
and
adc
shlb
imul
jp
jnp
ret
sub
jge
adc
inc
xor
mov
adc
repz
jecxz
push
xchg
std
jb
xor
leave
enter
sub
shlb
ficompl
jle
lds
cmp
jnp
mov
mov
roll
imul
inc
xchg
sub
repz
mov
and
or
push
mov
mov
enter
jne
daa
or
pop
cmc
add
movsb
jae
sub
jns
scas
shll
mov
xchg
push
out
adc
push
nop
lret
push
ret
mov
inc
mov
adc
in
xchg
mov
loop
lret
rcrb
cmpsl
lcall
adc
scas
jl
shrb
cmc
xor
bound
and
cmp
sbb
outsb
dec
push
pop
ror
sarl
lds
ror
insb
hlt
xchg
js
mov
dec
mov
movsl
insb
leave
ljmp
aam
lods
fninit
stos
sbbl
inc
mov
cmpb
pop
jmp
addr16
jg
push
xchg
push
inc
adc
mov
adc
pop
pop
test
inc
jecxz
dec
mov
inc
mov
mov
mov
xchg
xchg
mov
lods
dec
rol
shrl
sbb
sub
xchg
sub
ror
nop
mov
jb
sub
cmp
xchg
std
mov
movsb
shll
ror
test
dec
mov
dec
in
into
mov
movsl
notl
cmp
mov
adc
rorb
sub
pushf
jmp
insl
sub
sbb
daa
les
and
gs
push
mov
dec
mov
mov
push
insl
push
stos
inc
sub
loopne
mov
jne
stc
clc
pushf
dec
sahf
cmc
jns
xor
jmp
cmpsb
fisubs
lock
sub
out
pop
scas
fisttpl
in
cmp
fcoms
sub
push
adc
jp
and
xchg
or
andb
mov
jmp
fucomp
mov
jo
jmp
sbb
push
pop
mov
aas
popf
mov
mov
push
inc
mov
aas
jne
addr16
jle
lcall
xchg
mov
inc
pushf
push
xor
inc
jne
pop
dec
add
in
repnz
or
sub
mov
outsl
add
pop
jbe
mov
sub
fiaddl
jge
xor
andl
add
cmp
or
mov
test
out
aam
jo,pn
sub
mov
popf
lea
mov
jg
xchg
mov
sub
dec
out
iret
movsl
out
pusha
fsubl
or
pop
jmp
nop
adc
les
xor
mov
pop
mov
xchg
jp
imul
stos
xchg
jb
cwtl
loopne
cmp
and
lods
adc
inc
pop
and
adc
xchg
dec
inc
add
xchg
fimull
cmpl
inc
add
out
int
cmp
mov
xlat
mov
mov
mov
pop
out
int3
imull
in
sub
cmc
mov
clc
in
popf
cs
mov
sub
into
pop
push
ficoml
mov
stos
insl
lods
xchg
xchg
and
sbb
push
out
into
jb
mov
mov
in
aad
inc
arpl
push
outsl
jnp
clc
lahf
icebp
outsb
jg
cmp
aam
mov
std
fisubrl
out
mov
push
xchg
mov
cs
ret
test
rcrl
cli
stos
fisubs
cmp
sub
rorl
imull
or
fbld
movsl
je
bound
ds
and
enter
push
nopl
lcall
jg
jo
sarb
repz
test
jns
mov
mov
sbb
ficomps
jge
xchg
icebp
fdiv
and
cmp
push
or
add
sbb
dec
dec
fcmovbe
jno
ret
mov
xlat
mov
pushf
ret
iret
arpl
jle
cltd
push
popf
pop
mov
cmp
add
add
std
outsb
mov
push
mov
les
cmp
out
sbb
ss
fnsave
div
pop
jno
je
fisttps
add
outsb
cmp
cmp
xor
push
adc
test
stos
ss
pushf
aad
push
dec
mov
mov
jmp
xchg
loop
xchg
dec
jne
inc
pop
cmp
enter
shll
cmp
jbe
jge
adc
int3
pop
inc
aaa
js
sarl
push
or
shl
xorl
or
sbbl
cmp
xor
jp
ret
sub
enter
mov
stos
in
popa
test
repnz
pop
imul
jbe
inc
loope
rolb
aam
insb
call
push
out
ja
sbb
mov
mov
mov
je
sbbb
mov
imul
test
lret
rorl
adc
jb
jmp
jne
sub
push
dec
lcall
insb
jmp
fs
xchg
mov
aas
mov
jb
call
mov
cmc
insl
stos
sub
mov
push
pop
mov
xchg
ja
mov
jne
mov
mov
out
pop
jecxz
iret
push
data16
in
jbe
cmp
xchg
das
cmpsl
pop
pop
xchg
push
fsubrl
outsl
insl
mov
add
sti
adc
mov
movsb
mov
pop
into
jnp
ret
dec
mov
xchg
xor
jbe
mov
cmp
jle
pop
mov
lahf
mov
pop
enter
add
lods
mov
sub
out
sbb
mov
xor
scas
jmp
loop
mov
in
aas
cli
add
cmp
fdivr
lock
cmc
cmp
mov
js
pop
sub
movsb
filds
ror
sub
imul
aam
movsb
xor
subl
outsl
int3
ss
rclb
jnp
push
inc
pop
xchg
mov
dec
or
fcmovnu
xchg
jge
xor
xchg
call
out
iret
lock
addl
loopne
pop
dec
xchg
jmp
xchg
pop
icebp
outsb
cmp
inc
lds
jo
add
lea
mov
add
pop
pop
push
data16
int
cmp
repnz
pop
cmpsl
mov
testl
loopne
fimull
pop
test
pop
add
mov
xchg
xor
imul
adc
mov
ficompl
adc
mov
or
cmp
shr
das
imul
sahf
shlb
xchg
jl
jno
jmp
notl
movsl
push
add
lret
pusha
dec
jnp
hlt
jle
pop
mov
inc
xchg
jae
add
jae
ljmp
lods
mov
cld
sbb
imul
xchg
sbb
aaa
dec
pop
lods
repnz
sub
dec
cmp
lods
mov
loop
or
aaa
mov
stos
dec
jb
insl
jne
push
imul
ja
pop
push
test
mov
add
sub
sti
bound
mov
out
cmc
xor
popf
mov
xchg
les
push
jge
push
fs
push
push
in
xchg
fwait
jle
and
stos
pop
xor
or
ret
push
out
ljmp
inc
fs
rclb
stos
inc
gs
cmpsl
push
test
mov
jmp
mov
sub
xor
cmpsl
sbb
jge
cli
push
cwtl
jl
dec
or
dec
arpl
mulb
jno
in
push
dec
push
add
fmuls
sub
mov
sbb
cmc
push
pop
push
ror
lret
adc
ret
mov
sbb
jne
dec
or
int
fisttps
fwait
sbb
sbb
cmp
lcall
sahf
dec
dec
addr16
xor
fsubl
popf
fisubl
movsb
push
stos
xor
xchg
adc
add
lods
loopne
enter
adc
mov
insl
icebp
sahf
insb
out
out
add
sub
add
pop
in
ret
and
or
jne
or
inc
sbbb
cmpl
dec
sbb
sarb
lods
mov
ja
and
cld
out
imul
pop
adc
fbld
jmp
ljmp
sarl
movsb
push
mov
or
mov
lcall
jno
xchg
scas
pop
movsl
pop
fbstp
adc
cwtl
mov
xchg
pop
in
inc
arpl
cmp
xlat
and
ja
inc
int
push
mov
mov
xor
out
outsl
dec
pop
ss
iret
in
addr16
mov
mull
push
stc
jl
addl
jmp
jecxz
pop
and
insb
inc
divb
jb
cltd
and
movsl
scas
push
pop
rcr
mov
jp
scas
inc
xor
push
mov
push
leave
lea
sbb
pop
jnp
jle
daa
imul
inc
pop
out
daa
pop
cltd
cmp
mov
jge
shl
ss
add
lea
pop
data16
ret
inc
arpl
mov
or
dec
mov
add
repz
ret
lods
xor
neg
adc
fistpl
jmp
sub
push
imul
pop
rcrb
ljmp
in
mov
loope
fiaddl
mov
dec
pop
xchg
insb
sub
jnp
pop
inc
sbb
notl
push
cmp
je
out
sbb
inc
jecxz
mov
popa
lods
and
inc
daa
mov
outsb
jle
xchg
and
push
jecxz
pop
fnstsw
jns
sbb
incl
adc
shll
xor
outsb
sub
addl
imul
mov
int3
pop
test
pop
adc
rcr
xchg
lretw
push
and
xlat
out
shlb
call
pop
xchg
and
xor
add
int3
mov
je
inc
push
mov
xor
btr
into
shrl
jae
out
mov
add
dec
repz
and
push
sbb
cmp
out
fiadds
dec
mov
sub
cmpsb
cmp
test
lcall
sbb
sar
push
cmpsb
ds
mov
adc
insl
movsl
popa
dec
mov
sar
test
cmp
sbb
lret
pop
add
int
bound
xchg
xchg
scas
xchg
xlat
addb
inc
in
jmp
nop
dec
xor
and
js
or
ss
dec
rcll
movsl
rclb
jae
daa
enter
lcall
loope
cmpsl
jb
push
ljmp
or
push
mov
shr
pop
cmc
or
xor
inc
gs
pop
xchg
fadds
mov
jg
ja
push
fbld
pop
inc
cmp
mov
insb
pop
push
mov
push
nopl
jno
push
cmp
jp
jne
pop
loop
inc
lods
aas
daa
int
mov
xchg
add
xor
lea
fimull
stc
cmpsl
sbb
and
push
sub
int
add
push
cli
or
out
dec
repnz
test
lock
xchg
aas
js
cmpsb
cmpsl
jne
sub
dec
pop
pop
gs
jmp
xchg
leave
std
cmp
lret
popf
push
push
mov
adc
into
popa
test
wbinvd
bound
sbb
mov
in
es
iret
sbb
shlb
mov
and
push
cmp
sub
and
xlat
adc
sbb
sub
xchg
enter
pop
sub
jne
lret
inc
jbe
dec
push
jecxz
or
and
sbb
push
jl
int
das
pop
unpckhps
daa
mov
jmp
xor
mov
or
aas
in
movsl
repnz
psllw
fcomps
lods
push
mov
enter
data16
jne
pop
out
inc
data16
cmpsl
inc
aad
mov
and
test
aad
and
je
test
shrb
and
mov
mov
push
inc
ret
sbb
mov
insb
push
test
dec
mov
insb
cltd
pusha
repz
aam
jnp
add
aam
leave
cmc
push
or
jle
pop
pop
test
ss
mov
lods
movsl
pushf
adc
std
add
js
push
in
sbb
xchg
sti
mov
inc
pop
xor
push
dec
inc
cld
pop
pop
and
pop
mov
xor
shll
ficoms
inc
ljmp
movsl
inc
ret
xchg
cli
or
pushf
icebp
stos
in
roll
ljmp
lcall
adc
and
popf
jle
xchg
aaa
xchg
adc
test
jne
mov
sub
push
mov
bound
dec
hlt
mov
int
mulb
cmp
sub
movl
je
adc
mov
shrb
test
xchg
or
loopne
adc
push
iret
js
add
jp
sbbb
and
pop
dec
sub
and
cmp
test
mov
out
jb
jbe
fwait
pop
cmp
add
aaa
mov
nop
pusha
daa
dec
xchg
push
mov
push
scas
and
pusha
jge
dec
cmp
dec
pop
adc
mov
shll
pcmpgtw
cs
jae
and
shrl
cmp
imul
inc
pushf
call
push
xchg
cli
inc
cmpsb
test
dec
xor
pop
lods
push
iret
sbb
scas
clc
pop
push
test
dec
inc
scas
xor
sbb
bound
add
mov
loope
adc
imul
adc
jg
push
shl
xor
pop
adc
hlt
push
popf
mov
out
insb
xchg
push
call
sbb
ds
std
pop
cmpsl
aaa
inc
sbb
dec
xchg
mov
lret
dec
lds
push
fildll
and
icebp
nop
mov
mov
int3
sub
test
jp
decb
fdivrs
inc
inc
inc
icebp
dec
add
pmaxub
push
icebp
sub
xor
pop
add
mov
push
dec
sub
in
or
mov
fistpl
ljmp
fsubrs
xor
sbb
jg
jbe
rorl
cmp
adc
inc
jge
jp
xchg
jl
call
pop
fsub
add
in
cwtl
sbb
stos
push
jo
cltd
orb
dec
lock
fadds
xor
fmull
test
mov
cmp
or
or
lds
bound
mov
and
sbb
outsb
hlt
inc
clc
cmp
test
arpl
pusha
loope
jmp
adc
mov
push
lods
push
xchg
sahf
test
or
adc
ror
dec
std
cmp
fsubrl
push
add
xchg
jg
les
out
sti
dec
iret
cmpsl
dec
mov
sub
loope
xor
shlb
or
roll
mov
inc
arpl
icebp
imull
adc
fidivrs
clc
lahf
aad
fstl
in
enter
mov
nop
stos
inc
push
add
cmp
cmp
jmp
add
add
xchg
or
lret
cmp
das
fdivrs
fcmovne
jb
pusha
dec
mov
jecxz
je
sbb
push
hlt
mov
jno
push
fs
stos
pushl
in
adc
inc
outsb
test
fwait
movsl
stos
xlat
out
ja
push
xchg
jge
push
addb
mov
int3
push
jbe
fucomp
fdivl
adc
hlt
mov
xor
stos
cmp
add
int
into
pop
sbb
imul
cmpsl
sub
mov
fcomps
ja
mov
xorl
sub
xchg
int
sub
xor
xor
and
ret
xchg
fwait
jae
inc
pop
ret
inc
mov
pop
ds
push
xchg
push
insb
push
dec
jns
cmp
mov
cmpsb
add
adc
xor
in
adc
sbb
push
shl
cmp
jbe
out
idivb
adc
pop
jl
sbb
mov
mov
and
mov
pushf
cmp
xchg
sahf
stos
xchg
int
rcr
or
jnp
adc
movsb
push
adc
pop
sarl
repz
push
stos
sub
push
mov
aas
dec
mov
push
data16
adc
push
dec
xor
jp
dec
imull
stos
dec
loop
inc
fsubrs
sub
cld
mov
sub
sbb
xor
and
inc
lret
sbb
lahf
stos
push
ja
mov
pop
pushf
loope
test
xchg
pop
pop
adc
sbbb
add
mov
pop
out
xchg
and
mov
cmp
dec
int3
rorl
sbb
fstpl
sub
testl
pop
fwait
cwtl
icebp
cmpsl
jecxz
jecxz
push
lea
outsl
push
lock
adc
fs
lret
cmp
icebp
lock
jb
fnstenv
arpl
in
cmpl
loop
pusha
inc
xchg
fmul
jg
dec
add
mov
xchg
scas
fildl
inc
adc
pop
cmpsb
stc
dec
jg
jl
jbe
add
push
repz
adc
mov
insl
pop
push
insb
lahf
and
sub
xchg
insb
sbb
dec
fwait
sahf
sub
push
and
and
loopne
dec
psraw
fidivs
jb
fbstp
pop
cmp
mov
adc
mov
out
notl
loopne
ret
xchg
ljmp
pop
jo
sbb
xlat
mov
xlat
sub
xchg
push
mov
in
mov
and
loopne
sti
stos
test
xchg
cld
push
js
enter
in
dec
jae
clc
push
xchg
lods
lds
or
mov
dec
out
sbb
sub
ret
popa
leave
repz
inc
sarb
sub
in
jns
fnstenv
int
adc
js
testb
jle
mov
test
xor
jb
std
jmp
aas
xchg
data16
cltd
pop
mov
xchg
sbb
jnp
mov
js
cmp
and
ret
daa
push
ret
gs
mov
loope
jp
push
mov
dec
and
clc
xchg
mov
xor
push
cmp
mov
sar
mov
testb
xchg
lods
icebp
pop
stc
mov
adc
mov
sbb
cmp
out
loope
in
sub
jmp
push
leave
xchg
inc
xor
cmc
xchg
sarl
ficoml
xchg
scas
and
xchg
mov
loop
adc
repnz
push
mov
jae
mov
xchg
push
fwait
mov
jecxz
add
cltd
loopne
dec
sbb
rclb
stos
add
lret
mov
jne
push
mov
pop
mov
aam
pop
daa
insl
dec
insb
out
cmp
and
ja
jmp
daa
sbb
jns
adc
gs
xchg
add
mov
aas
cmc
sbb
push
stc
mov
mov
and
dec
mov
movsl
or
js
fldt
inc
frstor
pop
fadd
daa
inc
int3
pop
int
push
xor
call
push
jmp
icebp
cmpsb
dec
outsb
fists
scas
mov
add
incl
push
xchg
xor
adc
ja
jle
loopne
addr16
cmpsl
mov
sub
das
or
mov
dec
in
fildl
mov
cmp
cld
imul
sbb
subb
and
movb
mov
insb
icebp
dec
mov
into
jp
jl
iret
movsl
xchg
aad
jb
aaa
or
es
ja
shl
stc
dec
mov
cwtl
cld
and
movsl
xor
cmp
add
jno
sbb
xchg
push
cmpsb
cmpb
fs
mov
inc
test
push
fsubl
or
mov
icebp
hlt
loope
out
mov
mov
jmp
scas
daa
inc
sbb
or
stos
cmc
pop
call
and
jecxz
in
add
lea
push
fbstp
les
test
pop
dec
xchg
mov
pop
push
fsubs
test
movsl
inc
mov
push
lret
fidivs
mov
adc
loop
push
loopne
adc
in
mov
mov
arpl
sahf
pop
cs
in
repz
xchg
jl
dec
jae
sub
dec
push
ja
scas
cmp
inc
movsb
jecxz
aad
in
cs
cli
inc
cmp
xchg
js
xchg
pushf
jmp
dec
test
roll
aas
mov
call
mov
inc
or
adc
fs
outsl
mov
fs
sub
xchg
mov
jge
inc
push
xchg
jne
sbb
add
inc
es
scas
cli
dec
pop
lock
dec
lretw
movsl
inc
ljmp
push
adc
and
or
sub
jmp
jbe
inc
push
adc
cmp
adc
lds
in
add
pop
popa
dec
jnp
aaa
or
fistpl
and
dec
push
lods
cmpb
xchg
cmpsb
sbb
cmp
jnp
xchg
cmp
dec
sbb
pop
ljmp
sbb
mov
int
shl
fsubr
adc
leave
mov
mov
insl
mov
inc
sbb
and
int
int
mov
pop
fimuls
mov
cmc
test
sbb
stc
dec
xchg
pop
in
pop
out
mov
addr16
inc
dec
jne
cmpsl
adc
jb
and
lods
movsb
stc
testb
cmp
pop
dec
shll
xchg
cld
sti
xchg
cmc
pusha
inc
or
popf
shl
aaa
popf
push
adc
xchg
in
cmpb
xchg
lret
xchg
sub
xchg
subl
repnz
adc
pusha
es
sbb
call
adc
xchg
xorl
push
cmp
sub
ret
cli
and
cmp
ljmp
out
test
or
xchg
idivb
xchg
xchg
mov
push
add
aas
ror
add
mov
sti
adc
clc
cltd
std
pop
cltd
xchg
cmovl
pushf
and
xor
push
movsb
fwait
sbb
cmpsb
rolb
lea
ja
mov
fdivl
ret
in
cli
popf
adc
xor
mov
sub
lods
call
dec
into
pop
in
mov
mov
fs
loopne
xchg
mov
mov
push
inc
adc
mov
dec
inc
scas
xlat
cltd
outsb
in
out
mov
mov
mov
dec
jl
mov
cmp
cmp
mov
push
leave
add
js
mov
pop
in
or
out
jl
test
or
mov
popa
sub
pusha
jmp
enter
push
ret
mov
shl
cs
repnz
leave
dec
xchg
fdivl
sti
pop
ret
add
xlat
xchg
in
lcall
mov
or
xor
cmp
mov
test
adc
test
ja
out
vmwrite
inc
xchg
les
xchg
test
jle
addl
adc
xor
cmpsb
sbb
mov
cltd
push
ljmp
sub
ret
adc
inc
inc
sbb
test
fsubrl
add
stos
jge
dec
das
test
adc
dec
aas
lock
shlb
movsb
adc
mov
jb
xchg
aad
clc
dec
ljmp
and
sbb
sbb
and
push
push
jmp
mov
mov
mov
mov
push
dec
pop
push
sub
test
mov
ja
adc
pop
xor
xchg
stos
scas
push
loopne
pop
xor
xor
jge
dec
pop
movsb
sub
mov
or
shlb
jb
xor
js
popa
push
pop
ja
jge
imul
ljmp
push
nop
sbb
and
mov
cmc
dec
cmp
push
aad
mov
push
add
in
nop
sbb
xchg
mov
aas
ja
pop
in
cmp
push
sub
mov
and
jbe
in
push
lods
push
pop
lods
jnp
je,pn
ss
nop
add
mov
mov
jmp
lahf
inc
pop
push
test
dec
ret
xor
pusha
negb
aaa
adc
andl
jle
sbb
xchg
into
repz
jge
mov
testb
mov
mov
test
pushl
icebp
lds
mov
cmp
dec
jp
lret
ss
cmpsl
xor
iret
shl
xchg
loop
aaa
sahf
push
lds
lret
movsl
insb
ja
jno
adc
mov
fcoml
xchg
test
mov
jmp
dec
mov
xor
fisttps
mov
imul
loop
repz
mov
xchg
clc
pop
cltd
outsb
jb
scas
sub
pop
mov
dec
adc
ficompl
and
sahf
test
xchg
xchg
xchg
add
adc
je
mov
jmp
arpl
addr16
movsb
sbb
ja
js
fildll
cld
inc
add
arpl
loop
xchg
fsubrs
add
scas
or
xchg
js
pop
pop
inc
movsl
or
rcr
das
aam
cmp
movsl
fisttpl
inc
loop
ror
popl
xorl
mov
lock
jle
mov
and
into
mov
xchg
mov
fisttpl
data16
and
enter
mov
push
rorb
cmp
clc
mov
mov
dec
js
mov
inc
xchg
pop
enterw
adc
xchg
lods
pop
sub
loop
pop
int3
into
mov
pushf
aas
imul
leave
andl
inc
and
jb
imul
cmp
mov
arpl
xor
xchg
xor
movsl
daa
and
push
push
pop
or
sti
sbb
test
loop
jns
cld
and
and
mov
leave
lret
mov
aas
pop
fimull
sub
push
jo
js
or
jb
outsb
xchg
jne
push
mov
xor
lds
test
and
or
sahf
cli
addl
mov
mov
dec
ss
js
loopne
out
adc
cwtl
mov
sub
call
push
test
sub
mov
mov
inc
scas
fnstenv
inc
push
sub
xchg
pop
adc
mov
pop
xchg
jbe
stos
pop
or
push
add
cmpsb
mov
lret
add
push
dec
push
mov
dec
mov
movsb
xor
sahf
imul
cmp
sub
push
mov
mov
pop
popf
push
lret
jo
mov
in
xor
adc
pop
cmpsl
btc
in
insb
mov
cmpsb
pop
inc
loop
sub
fnstsw
or
xchg
imull
test
cli
in
push
lret
iret
lcall
hlt
in
mov
das
in
add
jecxz
mov
xor
push
xor
xor
lods
das
cmpsb
lods
in
pop
sbb
xchg
rcll
push
sub
xchg
into
and
mov
int
or
sbb
nop
sub
jb
pop
dec
fcos
stc
lret
cmpsb
and
dec
and
mov
add
pushf
shr
inc
inc
mov
or
add
jp
cmpsl
mov
stos
add
sbb
dec
cmp
fcompl
sub
cmp
mov
sub
popa
push
adc
inc
cmpsb
outsb
mov
outsb
test
sub
je
iret
xchg
mov
out
xor
push
inc
adc
or
in
cmp
cli
loopne
les
aaa
adc
aad
xor
xchg
aaa
xor
push
sbb
test
mov
test
lods
xor
fldcw
fucom
pop
xchg
cmpsb
cwtl
inc
push
packsswb
in
lea
jmp
mov
cli
pop
sub
cs
icebp
int3
and
cmp
stc
inc
push
std
pop
xchg
sbb
stos
push
data16
jne
dec
cmpsl
int
dec
sti
pop
out
mov
out
add
inc
loope
sbb
shlb
outsl
mov
cmp
fildl
lods
ss
mov
mov
cltd
test
push
outsl
es
mov
adc
jns
int
push
xchg
int
xor
sbb
lret
jnp
out
push
test
mov
xchg
pop
xor
cmp
push
insl
push
lret
inc
adc
or
clc
jecxz
xchg
cmc
pop
fstps
add
fdivrl
cmp
jno
inc
jg
adc
push
testb
je
filds
mov
subl
out
ror
gs
push
mov
dec
lods
mov
rcl
stos
pop
pop
pop
pop
pop
mov
mov
inc
mov
dec
adc
inc
sbbl
loope
push
movsb
rclb
aaa
fwait
into
std
mov
mov
aas
or
jne
xchg
adc
pop
insb
sub
loopne
xor
sti
ret
xchg
popa
mov
out
xor
mov
mov
dec
adc
loop
fwait
imul
push
pop
jae
jbe
inc
fimuls
jp
push
jnp
and
sbb
push
add
xchg
and
clc
dec
push
insl
icebp
jp
xchg
mov
push
cli
push
push
lock
push
es
into
addl
jns
ja,pn
adc
add
loop
push
outsb
mov
or
mov
jns
dec
ret
xor
push
push
or
or
orl
mov
test
sbb
cmp
push
std
and
cwtl
repnz
cli
push
fwait
push
repnz
ljmp
or
popf
adc
jecxz
dec
icebp
fdivs
push
sti
mov
sbb
outsl
fdivrl
jb
cld
les
add
cmp
shlb
sbb
insl
inc
and
xor
cmpsl
xor
add
push
mov
outsb
sbb
out
loopne
test
gs
mov
test
cmp
push
cmp
xchg
adc
insb
icebp
jge
pushf
cli
or
mov
lahf
push
loope
leave
es
fwait
int3
mov
cs
push
sbb
push
icebp
andb
add
sbb
xchg
sub
xor
inc
push
sti
dec
lahf
pop
rorl
lret
mov
push
adc
adc
xor
inc
sub
shrb
cmp
and
jg
icebp
or
dec
sub
fimuls
cmp
repz
mov
aaa
pop
mov
js
adc
lods
cmp
mov
mov
add
mov
mov
rcrl
cmpsb
pop
dec
jl
adc
pop
jl
xor
addb
jle
imul
cmpsl
add
push
adc
mov
push
mov
jl
gs
cltd
movsb
sbb
imul
cwtl
ja
sbb
mov
int
pop
pop
test
mov
aaa
fidivrs
mov
aas
and
push
mov
and
sti
rolb
jmp
sahf
in
xchg
xadd
mov
shl
push
push
cmp
popa
pusha
xor
ss
cmc
push
repz
dec
bound
dec
dec
pop
mov
cmp
loope
je
dec
insb
mov
mov
jmp
xor
pop
std
js
push
xlat
ret
sbb
imul
jl
mov
and
shll
lcall
push
sub
xor
xor
mov
stc
and
and
daa
push
push
imul
cmp
ret
arpl
aas
bound
movl
jl
repnz
cmc
xchg
orb
cmpsl
xchg
adc
movzwl
pop
nop
mulps
filds
adc
imul
imul
call
and
xor
xchg
pop
test
repnz
aas
sbb
cmp
scas
jmp
aad
and
push
cmp
lods
mov
fsubr
push
cli
pop
push
mov
mov
cmp
lds
cli
mov
mov
mov
imul
imulb
test
fimull
loop
aas
xchg
dec
das
or
xchg
loope
fdivrs
lahf
fcompl
cmc
lret
movsl
jle
push
fldl
mov
mov
pop
rclb
xchg
mov
pop
out
sbb
xlat
pop
aas
mov
mov
sbb
and
or
fwait
and
gs
fcomi
in
push
sub
stc
push
ret
in
xchg
out
adc
xor
mov
add
or
push
xor
and
lret
pop
out
jb
push
jnp
cmp
popa
insb
inc
divb
push
rcl
or
sarb
cmp
popa
jnp
aas
add
mov
pop
add
int3
mov
mov
adc
push
mov
inc
cld
fistps
mov
sub
inc
xchg
ja
jmp
mov
aas
push
adc
adcl
inc
stos
out
push
stos
xchg
jmp
adc
jbe
and
jle
lods
aas
push
cmpsl
outsl
fs
popf
xchg
fmuls
mov
xor
push
imul
loope
push
pop
scas
fs
fisubl
mov
dec
cmp
xchg
push
or
dec
dec
pop
jecxz
cmp
push
or
jle
sub
push
push
dec
jge
aaa
stc
loop
pop
mov
test
sbb
in
inc
hlt
xchg
mov
adc
ss
je
ss
lea
inc
mov
mov
or
lods
mov
insb
mov
popw
xchg
ja
xor
mov
notb
inc
test
aaa
loope
jae
testb
jp
aas
aad
cmpsb
rcll
jecxz
std
pushf
or
mov
cmp
je
push
andb
or
repz
mov
sub
cltd
push
movl
pop
mov
jb
inc
mov
xchg
outsl
xorb
lret
test
pop
bound
adc
push
cmp
fsts
cwtl
jo
cmp
mov
push
push
xchg
cmp
mov
popa
repz
mov
push
daa
cwtl
test
call
pop
negb
clc
xor
popa
add
adc
dec
mov
jbe
xchg
mov
ret
jge
lahf
mov
nop
adc
ret
es
mov
xor
sbb
nop
insl
lret
aam
mov
pop
enter
mov
js
or
jle
adc
sbb
inc
sbb
mov
jle
in
push
jne
popf
ret
leave
xor
sar
test
fs
push
idivl
dec
cwtl
adc
aaa
add
sbbl
push
add
and
in
loopne
inc
rcl
sub
repnz
xor
and
mov
sti
pop
out
ss
push
sbb
jp
mov
cmp
xchg
cwtl
cli
or
or
fs
into
adc
in
test
popw
hlt
push
scas
or
dec
mov
dec
push
inc
jns
rolb
cli
sarb
dec
jae
pop
cmp
stos
jp
orb
loop
xchg
test
fcom
xor
iret
inc
inc
inc
rcrl
cmp
mov
test
xor
cmpsl
cmp
or
mov
mov
jns
ja
movsb
sub
das
mov
xchg
and
dec
out
or
or
mov
add
fcoml
jb
ljmp
push
cmpsl
leave
in
mov
rolb
push
mov
test
fbstp
cmp
push
std
mov
push
into
add
popa
iret
cld
call
push
insb
ljmp
jb
aaa
stos
stos
and
adcb
xchg
jno
test
in
call
cmp
mov
in
dec
cmp
loopne
xchg
rorb
inc
or
sbb
out
mov
ss
clc
add
mov
inc
mov
loopne
sbb
pop
xor
push
jg
dec
pop
cmp
into
mov
gs
dec
mov
mov
mov
sub
cmp
int
push
lods
xchg
fmull
dec
out
pop
sbb
xor
fwait
mov
insl
add
sub
shr
jnp
push
push
loope
in
popa
cmp
or
ret
js
pop
mov
jg
sub
jecxz
arpl
cmpsl
shlb
push
and
mov
xchg
or
je
mov
pushf
mov
daa
and
call
lret
jns
jo
enter
inc
movsl
mov
and
pop
xchg
xchg
jns
test
test
pushf
mov
xchg
push
cmpsl
cmp
test
mov
or
xor
xorb
shrl
sti
jmp
imul
movsl
or
mov
inc
xchg
dec
push
sub
icebp
cmp
insl
mov
and
mov
add
cmp
cmp
lret
lds
or
and
mov
int
mov
add
and
and
cmpsb
mov
sahf
adc
sarb
clc
divl
movsb
out
fcomip
inc
movsl
rcll
mov
fisubrs
stc
shrl
mov
mov
das
dec
ror
jmp
out
pop
sub
xchg
hlt
test
scas
push
iret
mov
adc
shl
jae
es
outsb
jmp
mov
hlt
xor
sbb
test
data16
cmc
in
icebp
test
scas
outsb
pushf
jp
js
xchg
fwait
lahf
cmp
pusha
sub
nop
or
mov
jno
add
stc
push
cmp
imul
dec
cmpsl
mov
inc
aas
cld
in
mov
aam
int
popa
push
mov
push
sbb
frstor
popa
mov
sahf
dec
and
xchg
lods
repz
push
arpl
ja
stc
ljmp
data16
in
xchg
xchg
mov
fildl
sbb
aaa
jle
daa
aaa
cmp
jp
stos
xchg
push
lds
insb
mov
pusha
mov
xchg
aam
lock
pop
push
or
dec
nopl
loopne
mov
mov
out
cld
dec
or
jbe,pn
mov
cs
push
xor
mov
xor
lea
lods
cmp
in
loope
aas
fdivl
lods
lds
fistpll
sub
lahf
inc
pop
ret
bound
fnsave
int3
shl
aam
jo
or
or
insb
jnp
js
jae
outsl
mov
xor
mov
enter
je
inc
shll
mov
in
lea
je
push
aaa
out
xor
pop
add
shlb
in
pop
testb
leave
scas
inc
mov
mov
jge
mov
xchg
push
nop
pusha
dec
add
adc
cmp
testl
sub
mov
cmpsl
fiadds
xchg
sub
jp
xchg
repz
es
sub
sbb
adc
sub
mov
xor
dec
inc
and
push
ss
mov
add
ds
lods
jg
lret
xchg
jecxz
xchg
in
cmpsb
add
sbb
push
je
fcmovb
cmp
hlt
adc
mov
sbb
movsb
xor
add
call
jmp
mov
xchg
xchg
test
js
adc
test
rorl
psubsb
adc
cmp
enter
sub
sub
push
stc
faddp
pop
sar
shlb
jno
insl
xchg
jp
pop
mov
add
fisttpll
fstpt
mov
xchg
mov
sbb
sti
or
das
pop
mov
sub
dec
repnz
xor
fstpl
imul
loop
mov
cmp
nop
aam
jecxz
inc
roll
jb
push
fistpl
xlat
in
aad
pop
sbb
mov
subb
nop
inc
sub
pop
cmp
arpl
inc
sbb
xchg
sbb
push
in
fisttpll
pop
mov
fstp
ret
adc
xorb
orb
push
mov
or
mov
pushf
repz
mov
inc
sbb
push
shrl
or
cmp
cmp
add
jb
ljmp
int
lret
or
idivb
fidivrs
lods
pop
shll
cmc
scas
fisttpl
xchg
xor
jg
lock
shll
cmp
cmp
or
popa
sti
out
sub
adc
xchg
pop
loopne
inc
sbb
push
cmp
mov
daa
sbb
cltd
xchg
divb
mov
cmc
jno
cli
xor
in
nop
sbb
insl
mov
sbb
cmc
mov
sub
insb
cmp
adc
enter
pusha
scas
sbb
adc
jmp
ss
mov
popa
lods
adc
or
sti
shrl
in
cmp
xor
mov
imul
in
jp
pop
pop
xchg
inc
xor
xchg
bound
xchg
sub
jmp
dec
and
or
pop
popa
fcmovnbe
jmp
mov
xor
inc
ljmp
dec
add
test
xchg
mov
lret
push
mov
mov
call
js
hlt
xchg
fists
shl
sahf
arpl
mov
out
pop
xchg
mov
clc
push
loope
jbe
std
fnsave
mov
mov
inc
ljmp
fdivl
inc
mov
pop
sbb
outsb
inc
fisubs
jo
jnp
jno
xlat
pop
or
and
cli
add
sub
push
sub
mov
push
push
push
das
ds
aaa
cs
xchg
in
movsl
outsl
or
ret
jns
or
push
dec
jnp
mov
adc
xor
pop
sbb
xchg
aas
icebp
and
add
cmp
bnd
jmp
imul
pop
jne
je
shll
cltd
adc
std
mov
or
or
in
sarb
in
sub
orb
xchg
jg,pt
js
or
push
or
ret
roll
cli
sti
push
test
xor
push
sub
push
and
and
sar
sub
sbbb
gs
and
jno
push
mov
in
jbe
pop
jb
out
or
add
jl
jnp
and
ja
pop
xor
pop
mov
test
xor
add
sbb
pop
fcomi
fnstcw
pmaxsw
stc
jp
and
xor
cs
icebp
cmc
pop
xchg
fisttpll
mov
sbb
aas
adc
pop
jo
xor
in
ja
ret
loopne
test
and
inc
push
mov
add
mov
cmp
call
int3
push
test
sbb
insl
dec
into
sub
cmc
and
mov
lcall
inc
sbb
nop
mov
pop
mov
jmp
cmc
ja
out
xchg
mov
loopne
push
jp
popf
in
dec
xchg
lea
xchg
fdivrl
mov
jl
lods
rolb
dec
aam
pop
outsb
push
and
repz
xchg
cs
fucompp
insl
loope
outsb
or
and
mov
jbe
mov
ret
mov
xor
lods
insl
mov
xchg
aad
stos
incb
add
test
dec
pop
in
sbb
mov
mov
inc
fsubs
addb
cmpsb
lods
movsl
mov
xchg
inc
into
int
js
jle
pop
dec
in
pusha
mov
jae
mov
pop
lret
sub
inc
inc
jae
jnp
pusha
xchg
mov
sbb
xchg
pop
das
fcoml
clc
scas
mov
sbb
mov
fwait
pusha
pop
dec
xchg
into
out
dec
shlb
fstps
push
sbb
aad
addr16
les
jmp
or
aad
xchg
cmp
lods
xchg
pop
lea
jo
sbb
imulb
sahf
dec
mov
lret
pop
enter
loope
fisubl
sub
jmp
and
stos
jbe
scas
insb
push
xchg
dec
sbb
pop
addr16
mov
test
movsl
xchg
push
outsb
cmpsl
clc
or
addb
sbb
fwait
or
call
std
push
push
dec
jg
mov
xor
clc
out
and
std
andb
adc
xlat
mov
pop
or
or
stc
xchg
add
repz
inc
sbb
mov
add
jecxz
pop
cwtl
mov
or
test
mov
dec
pop
mov
ljmp
fsubl
sub
cmp
andb
lock
out
aam
pop
sbbb
lcall
cld
mov
jb
in
es
or
fadds
xchg
lret
inc
cmp
les
jle
adc
data16
arpl
pop
stos
rclb
jge
add
mov
pop
xor
mov
aad
pop
imul
stos
es
and
loop
mov
jge
outsb
xchg
imul
pushf
push
das
scas
push
xor
dec
add
rorl
jmp
ud1
and
or
mov
dec
adc
pop
rcll
negl
subb
push
roll
jmp
rcrl
loope
les
movsb
mov
add
js
mov
cmpsl
xchg
pop
lds
sub
iret
mov
in
frstor
or
sub
gs
mov
sub
ljmp
shlb
xchg
sarb
stos
and
mov
sbb
xchg
aas
inc
dec
hlt
fs
ja
mul
cmp
lods
jne
or
inc
cmp
fsubp
sbb
stos
add
push
leave
push
dec
pusha
popf
repz
xor
cmp
jae
sbb
daa
sbb
push
pop
xchg
inc
into
aaa
lret
xchg
or
cwtl
int3
push
or
jge
ret
ja
cmp
das
fisttps
ret
xor
cld
inc
lods
ret
in
mov
loopne
add
pushf
mov
jge
mov
sahf
rol
cwtl
dec
fidivrs
stos
loope
orl
mov
push
add
popf
hlt
movsb
push
hlt
fisttpll
xchg
repz
sbb
inc
cmp
sub
mov
adc
xchg
pop
cmc
pop
inc
loop
fdivl
pop
pop
stos
xchg
push
cmp
leave
inc
not
push
add
icebp
mov
testl
xchg
pop
push
cwtl
bound
xchg
jnp
add
jb
jno
addr16
test
jnp
scas
rcll
push
nop
mov
cmp
xchg
scas
pop
push
loopne
add
xchg
lods
xchg
adc
das
inc
xchg
pop
or
or
push
xor
and
aaa
pop
mov
or
sahf
mov
fimuls
cmp
stos
mov
push
dec
dec
inc
dec
cmp
aad
jge
psrlq
push
or
iret
adc
add
sub
lock
mov
push
push
inc
pop
mov
and
cmp
mov
adc
xchg
jmp
lret
lea
mov
add
mov
psubq
or
mov
push
pop
adc
loopne
js
je
sub
push
sbb
pop
cmp
or
in
cmpsl
sub
sbb
pop
dec
cwtl
popf
mov
push
cmp
and
push
xchg
push
dec
in
imul
mov
je
cld
call
push
daa
es
ret
je
xor
test
dec
imul
sub
xchg
inc
das
es
inc
popf
adc
jb
jp
iret
mov
xor
adc
push
fwait
lret
out
stos
sbb
pusha
sbb
xchg
xor
mov
mov
loope
bnd
xchg
sub
outsb
mov
hlt
jle
or
lds
scas
sub
mov
jns
inc
mov
movsb
mov
movsb
mov
pop
cmpsl
cmp
je
ret
js
mov
out
mov
sbb
js
xor
mov
inc
popa
jmp
fs
das
inc
bnd
sbb
mov
das
mov
into
out
mov
imul
nopl
js
sub
mov
xchg
sbb
imul
and
xor
leave
adc
pop
push
dec
cmpsl
lret
mov
movsb
out
lods
adc
dec
fdivr
push
icebp
bound
shlb
xor
push
popf
ja
es
push
filds
or
cmp
mov
pop
jns
mov
repz
sub
xchg
inc
sahf
cmp
movsb
andb
stos
aas
jns
mov
jns
xor
movsb
jns
jno
je
dec
sbb
outsb
jbe
sub
lahf
les
repz
ja
lahf
add
mov
mov
and
insl
shll
adc
out
dec
inc
icebp
dec
mov
push
push
dec
jecxz
push
jp
sbb
ds
inc
push
xorl
aad
jae
xchg
jmp
xchg
fbstp
push
dec
inc
fisttpll
pop
inc
ss
sub
jmp
mov
mov
push
mov
movsb
push
mov
xor
mov
nop
or
fwait
loop
jmp
scas
int3
mov
and
mov
sbb
pop
add
pop
aam
xchg
mov
subl
mov
insl
addr16
or
out
pop
ficompl
jnp
mov
fidivl
scas
rclb
xorl
pop
popf
adc
movsl
aas
add
jnp
shll
jg
adc
mov
mov
inc
adc
push
aam
ds
push
cld
dec
pushf
daa
xor
mov
mov
iret
jne
mov
lcall
jle
xchg
inc
xchg
je
ss
inc
lret
stc
mov
daa
lods
or
mov
pop
cltd
loope
push
xor
and
sub
sub
pop
test
add
adc
aas
sub
daa
shrb
flds
ja
cmpb
adc
lock
jecxz
cmp
pop
lock
adc
clc
nop
dec
dec
cmp
iret
outsb
or
lods
sti
push
mov
bound
mov
push
je
push
lret
mov
pop
bound
lds
fcmovnbe
mov
pop
push
sbb
dec
pop
nop
pop
ret
and
filds
inc
mov
mov
test
mov
lds
xchg
mov
xchg
pop
fdivl
sbb
sub
mov
es
sbb
sbb
in
pop
mov
mov
jnp
lods
pop
inc
dec
movsb
xor
fbld
std
dec
mov
imul
std
push
adc
outsl
rcl
push
call
out
inc
movsl
iret
test
sub
lock
js
aad
cmp
mov
mov
cmp
cmp
xchg
xchg
sub
out
nop
sbb
das
out
pop
dec
movsb
ss
inc
cmpsl
push
movsb
mov
mov
push
xchg
push
arpl
test
push
in
daa
jecxz
fldl
cmpsl
mov
comiss
dec
incl
mov
mull
test
iret
les
cmc
add
popf
inc
sub
scas
mov
mov
sahf
mov
adc
sbb
addps
cli
arpl
in
roll
into
push
das
cld
fidivrs
xor
loop
fwait
loop
in
pop
pop
xchg
mov
frstor
and
ret
inc
sbb
xor
hlt
pop
sbb
fisubrs
insl
stc
adc
icebp
test
push
add
dec
dec
hlt
inc
pop
mov
call
mov
rorb
dec
daa
pop
push
pop
mov
xor
cli
adc
dec
ret
pop
mov
fnstenv
push
faddl
ja
fidivrl
sbb
adc
mov
in
cmp
pop
jmp
xchg
and
push
jbe
xor
pop
test
mov
movsl
xchg
inc
arpl
mov
lods
mov
cmpsb
iret
in
dec
fisttpl
les
xchg
mov
mov
test
xor
int3
push
jmp
jmp
out
aas
jno
sbb
mov
icebp
push
add
je
xchg
pop
xchg
jg
inc
adc
pushf
mov
and
push
lcall
fiaddl
fbstp
adc
std
shl
movsl
push
ret
push
popf
mov
sahf
push
mov
xor
aaa
xlat
xchg
jbe
mov
adc
add
rorb
inc
xchg
in
ja
sbb
in
pop
push
pop
insb
pop
lahf
sbb
jne
test
jbe
push
mov
mov
stc
xchg
lea
pop
sub
into
ljmp
sbb
jp
or
jecxz
and
mov
fstps
mov
mov
int
cwtl
in
jns
aas
jle
ret
call
cli
sub
jno
cmp
cmc
cs
jecxz
sbb
pop
stc
add
in
negl
mov
add
jl
aam
addr16
pusha
loope
clc
rorl
stc
roll
or
test
adc
xchg
mov
scas
pop
pop
mov
push
pop
fsubrs
stos
in
push
lret
rclb
adc
or
xchg
jl
ret
lock
stos
lea
jo
jbe
aam
jp
cmp
xchg
mov
mov
enter
mov
push
cwtl
sbb
mov
imul
cmp
xor
orl
or
cmp
adc
popa
bound
in
popa
bound
push
je
push
jle
iret
sub
sti
jecxz
adc
add
jmp
ja
test
or
fdivl
repz
test
js
or
hlt
mov
mov
or
fstpl
xor
stos
jl
mov
fs
in
ds
push
push
outsl
rclb
cmp
fimull
aas
mov
lods
xchg
leave
lret
push
jbe
arpl
xor
sub
jne
mov
shll
jge
fisttpll
sbb
ret
repnz
push
cmp
loope
cmp
xchg
xorb
mov
call
mulb
out
pop
jecxz
mov
mov
sbb
add
adc
pop
xlat
push
cmp
int
xor
add
out
xorl
inc
add
arpl
mov
and
jmp
xor
loopne
ficomps
adc
xchg
jno
sbb
and
mov
fsubl
fcmovnb
push
insl
stos
hlt
sbb
in
xorl
xchg
ljmp
pop
pusha
push
push
daa
addr16
push
inc
or
popf
cwtl
mov
mov
mov
xchg
adc
mov
sub
cmp
push
das
xchg
stc
cs
xor
xchg
push
sub
popl
lret
mov
cwtl
push
ficoms
repz
cmpsl
loope
mov
scas
sub
and
and
xor
int
mov
mov
loope
push
jmp
rcl
scas
cmp
loope
sarb
call
mov
ja
dec
adc
rorb
mov
ja
push
sbb
cli
xchg
out
push
jne
test
mov
jb
push
ret
mov
daa
inc
aaa
mov
loope
or
iret
add
and
jmp
in
cld
mov
sar
iret
out
pop
xchg
xchg
aaa
pop
pop
or
decl
xchg
xor
cmp
stos
outsb
inc
or
inc
adc
xchg
inc
js
les
shll
jmp
lret
adc
xchg
cmpsb
dec
sub
cltd
stc
enter
popf
and
mov
dec
xor
in
sbb
cli
ds
sbb
in
or
mov
sbb
jge
inc
sbb
mov
das
push
inc
icebp
sti
lea
or
jno
rclb
and
xchg
orb
cltd
adc
lahf
aaa
in
pop
xchg
jbe
inc
sub
das
and
aam
mov
push
mov
push
jge
sbb
mov
out
ljmp
scas
pop
mov
scas
inc
outsl
fadd
xchg
sub
les
sti
push
rclb
fstpt
and
cld
addl
mov
mov
mov
mov
push
mov
mov
pop
mov
popf
or
push
jge
cmpsl
mov
push
movsl
cwtl
fimuls
push
sbb
mov
insl
sbb
inc
jle
mov
pop
and
call
jecxz
dec
xchg
dec
jge
loop
mov
adc
and
jle
jns
lahf
inc
sbb
push
jo
cmpsl
mov
xorb
mov
jg
in
jae
psubq
daa
jae
iret
mov
inc
xor
cltd
mov
test
orb
sbb
jns
sysret
pop
and
scas
push
cmpsl
push
jns
insl
xchg
and
cmpl
push
pop
push
in
mov
mov
lahf
gs
scas
pusha
shrl
mov
jl
dec
xchg
dec
add
lahf
cmp
jbe
mov
and
push
out
mov
push
pushf
insl
inc
lock
inc
sub
loop
scas
insl
gs
ret
dec
mov
push
fst
les
insb
fistl
jbe
pop
push
add
mov
arpl
cmp
push
pop
leave
push
xor
dec
mov
or
movsb
inc
inc
popf
lods
jp
add
pinsrw
push
pop
push
and
cli
jne
mov
scas
cwtl
je
ds
das
push
xor
iret
push
testl
outsb
jmp
jae
xchg
pop
mov
jge
jle
pop
dec
sub
fists
fidivl
test
in
cmp
jmp
imul
jo
in
xlat
lahf
jge
adc
push
push
mov
or
dec
mov
inc
fnstsw
loop
or
jl
stc
cmp
test
loopne
and
mov
add
xlat
adc
inc
mov
rclb
or
mov
jecxz
jecxz
cs
call
sbb
jle
jle
sbb
pop
dec
insl
notl
push
cli
or
iret
lahf
imul
lret
aaa
lcall
dec
push
enterw
adc
jle
popf
subl
add
pop
repnz
adc
les
or
pop
loop
inc
sbb
and
fidivrs
fwait
or
faddl
mov
sub
ret
dec
xchg
testb
or
xor
pop
sar
jnp
jo
inc
xchg
inc
cmp
clc
xchg
aas
leave
shr
sbb
pop
fdivr
mov
or
jno
jp
ds
and
pop
aad
ljmp
inc
imul
push
aad
and
ret
ljmp
cmpsb
cltd
or
shrl
sbb
hlt
pop
mov
mov
add
cmp
inc
loope
sub
rcrb
loope
mov
insb
lret
adc
cmp
movsbl
dec
adc
les
add
hlt
cmpsl
jno
ret
jecxz
bound
mov
or
inc
jle
inc
mov
push
sub
xor
loopne
push
jbe
cmp
mov
inc
outsl
leave
out
push
pop
push
loop
js
sub
lods
add
hlt
mov
mov
dec
mov
add
stos
je
int
sub
jo
ficoms
ljmp
test
adc
mov
push
sbb
adc
mov
fdivrs
repnz
popf
in
cwtl
jmp
push
adc
outsl
sarb
out
testl
daa
dec
outsb
outsb
or
mov
mov
jmp
insb
mov
je
incb
adc
push
dec
sbb
cwtl
cltd
call
sbb
stos
sahf
push
lcall
jecxz
fisttps
push
push
stc
jg
lcall
adc
adc
adc
ds
in
sub
ret
mov
call
pop
mov
add
jae
and
movsl
adc
loope
jecxz
in
shr
sbb
sbb
outsl
sub
xchg
stos
mov
fnsave
xor
push
fwait
xchg
sub
adc
cmp
test
ljmp
sahf
jle
add
sbb
sub
into
sbb
jmp
shlb
lcall
dec
mov
stos
cmpsb
jmp
mov
mov
stos
inc
mov
xchg
in
cmp
clc
pop
inc
shll
ret
pop
push
push
mov
or
dec
add
sti
insl
xchg
xchg
inc
pop
test
insl
push
and
mov
rcrb
xor
xchg
add
adc
add
or
jne
cmp
cmpsb
pop
mov
mov
rcrb
subl
iret
add
ljmp
iret
enter
adc
ss
and
outsl
push
lds
cmpsl
jo
dec
pop
sub
jmp
mov
in
andb
lret
xchg
ret
mov
jae
loop
movsb
or
popf
xlat
mov
or
lock
xlat
dec
add
pop
and
lret
loopne
not
cmp
lahf
push
pusha
pop
mov
or
movsl
mov
cmpsl
mov
push
lret
insb
fnstsw
bound
and
add
rorb
scas
dec
or
in
jo
and
jecxz
push
gs
std
sahf
adc
cmp
ljmp
dec
jge
inc
lock
out
mov
pop
xor
or
pop
das
mov
inc
fcoms
enter
mov
mull
push
pop
cs
ja
mov
insl
mov
xor
pop
test
jl
pop
jp
mov
mov
mov
or
push
add
repnz
pop
sub
mov
lods
andl
lahf
jle
jno
rol
cwtl
bnd
inc
push
jge
add
jno
std
std
jp
inc
pop
add
mov
jge
lcall
mov
mov
xchg
pop
pop
and
ffreep
mov
test
fnsave
mov
lahf
jbe
xor
imul
test
orl
stc
cmp
fiadds
sarl
and
ret
imull
lahf
dec
fs
mov
push
jge
xor
mov
or
add
mov
xchg
xchg
stos
pop
popa
stos
fldt
adc
mov
jmp
shll
sub
je
add
out
rolb
jle
repnz
imul
and
outsl
or
jns
jmp
mov
arpl
pop
cmp
ja
enter
ljmp
insl
leave
rolb
cltd
fcompl
cld
test
sti
xchg
cmc
mov
scas
push
jecxz
inc
fdivp
pop
cmp
cmp
jmp
pop
mov
fldl
in
or
repnz
push
std
int
mov
cltd
and
rolb
inc
xchg
ljmp
mov
in
xchg
popf
mov
stc
pop
mov
insl
mov
xor
dec
cwtl
sbb
cmp
loop
or
frstor
out
jp
stc
arpl
push
adc
lock
out
mov
or
sbb
hlt
adc
add
data16
in
test
into
pushl
dec
iret
add
xchg
scas
imul
cmpsb
push
adc
xor
mov
add
in
sub
mov
and
sub
push
sbb
aas
adc
adc
mov
adc
pop
outsb
addr16
std
shlb
jmp
sub
in
pop
movsb
push
insb
roll
dec
xchg
mov
jmp
pop
inc
into
stos
mov
xlat
inc
sub
int
sbb
std
lret
fstpt
jmp
dec
jbe
flds
imul
sbb
xchg
movsb
sub
hlt
push
imul
jecxz
loopne
adc
lock
into
jge
or
je
repnz
out
add
adc
xchg
xchg
cltd
adc
dec
pop
jge
jle
scas
cmp
scas
add
std
fimuls
inc
in
mov
push
sub
and
cmp
shll
addr16
jns,pn
inc
ja
nop
imul
bound
jg
ret
mov
add
adc
adc
push
mov
push
fwait
sub
fdivrs
fs
icebp
outsb
imul
mov
int
jge
mov
lods
fsts
and
mov
jl
jecxz
leave
xchg
add
stos
jo
addr16
or
fcmovu
jb
cmp
in
lret
sbb
mov
insb
out
mov
mov
push
cli
and
fstpt
lret
push
inc
sbb
cmpsb
pop
scas
clc
in
cmc
sbb
xchg
scas
negb
mov
cwtl
push
jecxz
outsb
lods
push
aam
xlat
popf
xchg
inc
in
sub
jno
addr16
ret
push
xchg
enter
adc
mov
push
iret
mov
addb
sbb
sbb
mov
sbb
out
xor
bound
xchg
xchg
inc
xchg
push
aad
lret
out
int3
mov
jb
dec
dec
or
call
jo
jno
cltd
movsl
inc
lahf
fidivs
jo
std
or
mov
mov
addl
and
jl
pusha
fistps
pushf
faddl
out
push
filds
add
ret
xor
xchg
das
andb
scas
jle
pushf
or
push
dec
cmp
pop
mov
mov
lods
fbstp
or
xchg
mov
add
push
lret
aam
ljmp
push
cmpsl
in
jmp
pminub
pushf
js
jl
mov
repz
enter
push
loope
mov
mov
adc
or
rorb
or
fsub
inc
xor
loop
lds
cmp
out
xchg
jb
cs
sbb
je
test
jg
mov
out
mov
jbe
inc
iret
and
jnp
push
xor
arpl
and
jp
nop
stos
mov
cmpsl
sbb
xor
test
jo
imul
lock
dec
mov
std
jg
cmp
xchg
xchg
int3
sbb
je
dec
or
ror
das
ret
lods
push
mov
add
xchg
cltd
push
inc
imul
inc
sub
mov
mov
cs
mov
xchg
fildl
add
and
jae
add
pushf
mov
jmp
xchg
repz
mov
mov
pop
add
ljmp
xor
or
and
lea
lock
daa
or
add
lds
pop
lock
sahf
add
push
push
push
jnp
mov
sub
sbb
adc
rorb
mov
leave
cmp
hlt
idivl
rcrl
call
test
insl
xchg
pop
push
sbb
mov
xchg
cmp
ja
jl
lea
bound
shl
popf
das
xchg
sti
cld
in
mov
mov
mov
jl
push
dec
pop
sub
icebp
add
sub
mulb
nop
cltd
pop
xor
jmp
movsl
add
stos
add
sti
push
pushf
jp
sbb
loope
mov
mov
fildll
imulb
popf
pop
or
lret
adc
push
cmp
jnp
push
idiv
insl
jle
add
ficomps
xchg
jp
scas
insl
jg
xor
or
out
push
sub
aaa
in
cmp
and
mov
mov
nop
cld
in
stc
mov
cmc
cld
sbbb
js
call
pop
js
es
mov
mov
sbb
sbb
mov
test
pop
cmpsb
lcall
add
outsb
xor
lods
loope
das
push
lea
std
pop
mov
dec
dec
mov
sub
mov
in
insb
jno
stc
sbbl
popf
popa
out
pop
mov
lods
jp
jbe
aad
subb
ret
fimull
shll
imul
movsb
icebp
aam
ret
smsw
mov
rcrl
sub
mov
call
jge
fisubrl
adc
pop
lds
lahf
aam
sbb
shl
cmpsb
ret
xchg
mov
sbb
push
pop
jge
add
ret
icebp
inc
hlt
repnz
out
xchg
ffreep
pop
rcll
mov
xor
jne
jmp
add
fs
out
inc
mov
sub
push
mov
or
push
adc
push
mov
mov
mov
or
sbb
mov
cs
fildl
push
mov
into
rcll
mov
lcall
push
jge
pop
mov
mov
pop
sbb
out
roll
test
imul
lock
xchg
xor
cmpsb
lcall
mov
movsl
mov
or
ja
inc
mov
sub
pop
test
inc
mov
push
leave
test
jns
jmp
or
ficoms
in
out
mov
xor
pop
loope
xchg
cmp
add
mov
sti
jns
mov
adc
xor
jg
cmpsb
push
push
inc
mov
mov
cmp
int3
xlat
repnz
fwait
shl
arpl
test
mov
sub
pusha
shlb
lock
pop
mov
xor
push
mov
loopne
sbb
dec
mov
push
cli
movsb
dec
or
insl
xor
adc
fs
dec
and
gs
loop
xchg
xchg
test
adc
fs
aas
rcrl
cmp
xchg
loop
and
xchg
xor
ret
imul
clc
adc
aas
and
push
lahf
pop
popf
std
jne
js
add
xchg
xor
jge
adc
ds
push
xlat
mov
test
sahf
or
popa
pop
sub
fs
add
mov
imul
stos
iret
push
mov
push
jnp
movsl
ja
mov
das
movsl
dec
cmpb
dec
loop
pop
pop
subb
or
mov
pusha
js
and
int
pop
daa
add
daa
mov
push
les
mov
push
mov
mov
aam
xchg
jle
pop
jbe
sbb
mov
fcomps
wbinvd
je
sbb
add
dec
subl
jb
in
test
lods
and
fsts
pop
jmp
push
sub
pop
xchg
icebp
icebp
lret
int3
test
mov
test
and
mov
in
jg
pusha
adc
or
sbb
pop
pop
xor
pop
ljmp
movsb
xor
pop
cmp
imul
pop
mov
xchg
sbb
loopne
ret
push
sti
aad
dec
test
cwtl
push
adc
jns
int
dec
sbb
icebp
insl
dec
push
push
mov
aam
aas
addb
mov
adc
es
subb
and
aaa
test
xchg
sub
xor
xchg
sbb
outsb
dec
clc
lods
dec
jp
mov
add
mov
xor
xchg
shrb
jl
sahf
push
ds
jb
pusha
xor
addr16
lret
mov
ljmp
es
js
movsl
inc
inc
pop
mov
hlt
inc
loopne
mov
mov
xchg
jmp
sbb
stos
adcb
inc
or
lret
outsb
ficomps
mov
repz
ja
movsl
dec
sub
push
xor
adc
int
add
sbb
shll
lret
pop
hlt
outsl
scas
mov
jge
mov
icebp
pop
outsl
shl
fwait
adc
pop
test
jmp
add
push
out
cmp
push
movsl
rcl
jno
icebp
daa
ss
pop
std
fstpl
lcall
popa
into
ss
arpl
push
and
ds
sbb
xor
xchg
mov
push
fwait
scas
or
adcl
cmp
jnp
cli
outsb
jnp
testb
imul
push
jno
rcl
inc
lods
outsl
push
and
dec
push
ds
add
mov
dec
test
lods
mov
and
insl
mov
imulb
call
and
inc
pop
call
or
aaa
pop
ret
pusha
sbb
ljmp
sarb
ja
xchg
ljmp
loop
cmc
push
sbb
fldl2e
ljmp
cmpb
and
popa
xor
or
loopne
adc
xor
jne
fisubrl
daa
in
push
or
cltd
xchg
inc
push
sbb
push
in
jne
addr16
inc
adc
fmull
dec
mov
mov
xlat
sub
or
push
sbb
mov
fsubl
sub
dec
jns
mov
sbbl
xor
add
push
pusha
test
fsubr
sub
ljmp
addr16
sub
mulb
mov
xchg
adc
xchg
jbe
scas
out
ds
mov
mov
mov
test
xor
fisubs
cmpsb
jnp
mov
mov
mov
push
cltd
jns
and
push
shll
adc
out
mov
in
xchg
add
aam
pop
insl
pop
pop
inc
cmpsl
sub
lret
repz
xchg
divb
test
sbb
ljmp
cmp
out
xchg
jo
inc
movsl
mov
lret
or
or
aaa
sub
nop
int3
inc
std
stos
shlb
dec
mov
and
sub
cmc
es
xor
nop
movsl
call
les
sbb
shrb
mov
mov
out
mov
pop
nop
or
ret
pop
and
push
cmp
jmp
or
sbbb
std
test
and
adc
jp
addr16
pop
les
insb
pop
fcoml
fmuls
adc
add
repz
jmp
add
or
lcall
xchg
push
mov
xor
test
sub
arpl
ret
into
mov
in
or
test
fidivrl
or
nop
shll
and
pushf
and
inc
daa
nop
inc
cmpsb
mov
push
dec
rolb
divb
lahf
pop
mov
add
pop
adc
inc
imul
xlat
jmp
xor
jno
adc
mov
cmp
mov
mov
sub
rcrl
mov
scas
push
mov
outsl
inc
pop
mov
mov
outsl
cs
ss
dec
sub
mov
stc
mov
shl
mov
xchg
mov
aad
data16
pop
repnz
aas
sub
sub
pushf
enter
pop
incb
call
movsl
pop
shll
cwtl
add
sbb
xlat
leave
adc
bound
xor
int3
and
out
out
pop
jmp
rorl
mov
mov
lods
jno,pt
dec
and
inc
lret
jmp
insl
insb
push
rcrl
sahf
cmp
cltd
inc
mov
leave
into
insb
rolb
gs
dec
jnp
cmp
fbstp
jae
cmpsb
sbb
mulb
es
xor
cmpsb
in
push
mov
dec
sub
push
into
iret
push
cmpsl
mov
sahf
mov
shlb
pop
cmpsb
fisttpl
out
sahf
pop
add
or
test
and
popf
adcl
lock
rcr
sub
jecxz
xor
or
mov
fwait
jge
fdivs
inc
cs
pop
cmp
je,pn
pop
and
outsl
vpcmpgtb
jmp
dec
jns
mov
ret
jle
fldenv
jle
jb
in
mov
imulb
insl
cmp
cld
pusha
fmul
mov
enter
mull
cltd
popa
addr16
and
mov
icebp
pop
adc
lret
popf
xor
sub
in
jge
mov
add
dec
cltd
rolb
cld
and
mov
movsl
cmpsb
lcall
bound
or
lods
cmp
cld
and
mov
inc
je
pushf
xchg
sarl
xchg
adc
sub
and
out
dec
jmp
push
rcr
pop
out
mov
in
pusha
xchg
cmp
jmp
cld
dec
cwtl
push
ss
fisubl
out
and
scas
lahf
cmp
and
fidivl
in
jl
inc
repnz
rcrb
aas
mov
xor
es
xchg
imul
add
les
push
sub
push
jl
push
daa
aam
sub
ss
mov
xor
xchg
or
inc
cwtl
xor
repz
mov
sbb
mov
scas
cltd
lret
rcr
hlt
pop
divb
push
cmp
int
aad
mov
movsb
ds
and
fs
fsubrs
fildll
int3
add
mov
dec
aam
loop
jno
push
add
inc
stos
jle
cmp
dec
or
mov
fucom
shll
dec
sub
mov
enter
cli
cs
inc
mov
call
add
xchg
xchg
pop
imul
stc
decl
pop
jne
dec
call
push
jnp
lock
inc
pop
adc
xchg
cmc
mov
call
or
mov
inc
jo
cmp
insl
push
mov
scas
dec
cmp
sti
mov
fcomip
scas
in
test
dec
xchg
std
das
inc
ret
mov
ss
scas
add
jno
mov
adc
stos
jp
sub
adc
xchg
xor
das
sub
xchg
dec
and
mov
push
push
aas
daa
cld
inc
ja
js
pop
inc
repz
cmp
dec
xor
stos
popl
or
cs
ja
inc
repz
jno
mov
dec
outsb
sarl
ljmp
xchg
push
lods
repnz
mov
lods
lahf
xchg
cmp
rep
pop
mov
cld
shrd
decb
mov
jnp
iret
cmp
add
into
mov
cmp
or
cmp
je
pop
daa
ret
xor
outsl
outsl
idivb
test
add
jo
sub
movsb
push
rcll
add
adc
lret
fsubl
loope
lds
mov
lret
cmpsl
cmpsb
and
gs
xor
pusha
insl
jg
adcb
xchg
lods
mov
pop
lock
cmp
cmp
loop
jne
mov
inc
mov
ret
fcoml
sarb
test
inc
push
outsl
test
sahf
mov
push
es
or
shl
xor
jbe
sbb
loopne
xor
sub
jmp
icebp
addr16
fs
nop
inc
adc
push
pop
test
and
mov
mov
push
rcrb
xor
mov
subb
mov
addr16
jp
sbb
dec
adc
push
adc
pushf
cmpb
int
and
fisttpl
jnp
inc
outsb
ljmp
adc
scas
sbb
jnp
pop
mov
aaa
movsb
xchg
decl
mov
cmp
repz
mov
jns
lret
push
psrlw
xchg
sbb
inc
add
sti
xor
into
rcll
jmp
dec
pushf
pop
shl
ret
or
dec
insb
add
dec
int
in
popa
mov
mov
jb
and
xchg
sbb
int3
insb
cmp
std
push
decb
jb
in
pop
popf
out
sbb
xor
cmpb
pop
mov
lods
push
lcall
enter
lcall
mov
dec
enter
add
mov
jno
repnz
sub
fldenv
insl
pop
arpl
mov
lods
push
fwait
aam
or
insb
sti
imul
mov
add
sub
xchg
arpl
sub
sahf
aam
icebp
dec
mov
dec
jb
test
clc
repnz
clc
arpl
dec
lods
xor
sahf
repz
adc
dec
cmpsl
ljmp
mov
dec
fwait
stos
cmpl
mov
arpl
sub
fisubrs
xchg
lcall
aaa
mov
adc
sub
mov
mov
inc
or
lahf
rorl
repz
xchg
or
stos
icebp
inc
mov
arpl
js
dec
mov
leave
push
add
cmp
fisubs
cmp
mov
sbb
sahf
push
repnz
add
int
ds
xor
adc
ror
aam
orl
sub
push
dec
push
enter
fsubrs
popw
pop
xor
jmp
jb
cmp
dec
xchg
pop
rorb
or
jg
jo
int
jo
inc
dec
lods
cmp
mov
pop
jbe
dec
out
inc
leave
cmp
je
movsl
cmp
mov
lods
xchg
bound
pop
and
mov
jmp
adcb
lret
sub
add
mov
adc
jae
xchg
jb
mov
stos
ja
xchg
inc
ja
popa
adc
jo
add
inc
jno
or
jg
popf
cwtl
mov
gs
scas
mov
cmpsl
js
pushf
rolb
fildll
aad
mov
xchg
sub
or
push
out
sub
pop
push
inc
rorb
jge
xchg
push
loopne
and
or
lods
daa
xchg
sbb
rcll
pushf
pop
and
jns
mov
int3
mov
push
jb
addb
inc
sbb
stos
cmpsb
imul
inc
push
dec
dec
pushf
sub
mov
movsl
pop
jnp
mov
dec
movsb
movsl
mov
xchg
xchg
scas
jmp
push
neg
cltd
mov
mov
fs
cmp
mov
inc
int
push
mov
cli
xchg
je
or
cmp
jmp
mov
insl
int
jne
lret
stc
dec
loop
or
xor
lock
inc
mov
add
cld
popf
arpl
outsb
out
hlt
pusha
test
icebp
repz
sub
cmp
pusha
cmp
cmp
fists
jle
imul
cli
insb
dec
add
dec
leave
aas
jns
mov
xchg
jo
stos
mov
cmp
dec
hlt
mov
enter
and
jo
sub
add
or
dec
in
mov
sub
push
pop
fdivs
jle
stos
adc
sahf
movsb
out
or
or
jg
lea
imul
mov
mov
movsl
das
iret
mov
pop
insl
ficoml
ds
add
inc
jae
std
or
mov
roll
push
mov
shrl
mov
sbb
imul
xor
mov
pushf
stos
cmc
popf
popf
sbb
andb
cltd
pop
cld
push
inc
daa
or
pop
inc
sub
mov
inc
cmp
xchg
inc
shll
divb
aas
mov
into
add
jecxz
shll
jecxz
arpl
icebp
mov
sti
testl
jle
cmp
jbe
sbb
inc
stos
fsubl
mov
sub
add
xchg
inc
push
jnp
insl
pop
xor
addr16
cwtl
lret
push
hlt
push
out
popa
jp
addr16
inc
dec
jo
sbbl
mov
daa
or
repz
stos
pusha
adc
lret
mov
pop
xor
aaa
loope
outsb
lock
out
mov
or
dec
les
pop
lcall
and
cmp
add
popf
dec
jge
ja
pushf
mov
or
mov
imul
pop
outsb
push
xchg
jo
mov
mov
fwait
leave
pop
bound
dec
sbb
sub
imull
cmp
or
adc
xor
push
cwtl
xchg
adc
ds
push
movsl
add
and
outsb
pop
sub
or
sbb
sahf
std
out
add
dec
imul
sti
fwait
push
xor
pop
add
pop
fdivrl
je
xchg
cmp
adcl
and
mov
jmp
std
movsb
rcll
xor
jo
stos
jns
fcompl
cld
xor
ret
jmp
jo
push
outsb
sahf
iret
dec
scas
scas
mov
push
cmp
jg
es
test
pop
adc
pop
ficompl
jecxz
inc
aas
shlb
cwtl
out
outsb
or
into
in
jle
scas
repnz
loop
pop
jo
add
inc
mov
cmpsl
mov
dec
xor
aaa
dec
subb
dec
xchg
mov
jo
jge
rorl
mov
mov
int
out
add
sbb
xor
lock
ja
or
cli
push
dec
lds
cmp
pop
cmp
adc
xchg
dec
pop
ljmp
inc
push
jmp
sbb
orl
jae
ret
sbb
addr16
dec
push
test
ds
pop
push
fdivrp
sbb
and
dec
mov
mov
stos
ss
sahf
or
repz
and
push
fdivl
out
jle
xor
add
fbld
cmp
mov
negb
das
lret
divl
cmp
mov
and
jnp
mov
aas
in
adc
sub
cmp
bound
cmp
sub
sub
imul
push
jle
loopne
adc
jle
aaa
sbb
dec
mov
cmp
cmp
add
iret
sbb
push
addr16
add
scas
and
std
pop
dec
test
ljmp
mov
mov
stos
xchg
roll
pop
xorl
push
mov
sbb
pop
cwtl
shll
mov
stos
dec
scas
shrl
mov
dec
add
loopne
addr16
inc
pop
fistpll
push
or
mov
add
subb
push
cmpsl
cmp
iret
and
ja
sbb
pop
in
stc
cld
or
jg
mov
pusha
and
or
cmpsb
push
nop
xchg
xchg
out
test
icebp
inc
outsb
jbe
out
addr16
mov
cmpsb
lods
iret
adc
data16
ja
dec
es
push
pcmpeqb
mov
ds
pop
xor
sbb
add
push
in
add
adc
mov
insb
jge
xchg
inc
cli
lock
xchg
xchg
shll
pop
adcb
fndisi(8087
adc
ss
aam
sub
add
dec
lds
dec
test
or
cmp
mov
inc
int3
and
mov
xchg
xor
out
leave
dec
fwait
test
sub
pop
stos
outsb
push
mov
ret
xor
lds
cmp
add
pop
dec
add
pushl
sbb
or
fstpt
in
jecxz
ss
lret
cmp
inc
iret
rcr
imulb
sub
push
pop
mov
scas
test
movsb
in
add
adc
push
jg
pushf
mov
sub
push
lret
mov
das
pop
inc
ds
bound
aaa
pop
mov
popa
push
and
inc
sahf
pop
cmp
push
dec
mov
in
mov
dec
mull
push
mov
pop
and
inc
jle
notl
cmp
popf
push
fimull
das
mov
and
out
add
dec
fdivl
pop
push
int
in
cmp
ljmp
xor
push
xchg
mov
cld
dec
gs
mov
mov
cmp
stos
mov
push
popf
shlb
decb
imul
into
mov
inc
ja
repz
sub
xchg
xchg
dec
sub
cs
adc
mov
push
sbb
and
ss
push
xchg
mov
test
aad
push
lahf
clc
idivb
push
add
mov
dec
ds
adc
mov
repz
cmp
mov
jns
adc
out
lods
mov
cmpsb
iret
int
in
dec
sub
add
mov
inc
shl
add
xor
cmc
xorl
push
shll
pop
xor
sbb
xlat
add
cmpsl
add
ljmp
jne
add
mov
or
pop
mov
scas
std
sbb
dec
stc
xor
xorl
stos
adc
or
dec
mov
int
int
xor
push
std
xchg
dec
clc
push
fdivr
bound
mov
or
push
push
fmul
clc
dec
ds
push
push
mov
sub
popa
xchg
inc
mov
lret
leave
aad
insl
pop
push
ret
sbb
mov
xor
sarb
sbb
and
loopne
iret
aad
cmpl
cmp
int3
inc
adc
movsb
scas
mov
xlat
lcall
lahf
lods
xchg
cltd
andb
pop
test
adc
int3
pushf
sahf
push
mov
inc
jbe
mov
dec
js
lea
jne
add
fists
call
dec
in
cmp
jne
stos
mov
cld
ss
adc
mov
cmp
aaa
sbb
hlt
lcall
cmp
fmuls
and
dec
mov
mov
aas
cmpsl
xchg
pop
insl
nop
repnz
add
adc
insl
add
aad
jno
dec
stc
insb
mov
add
sbb
push
push
dec
xchg
add
nop
xor
int3
push
xorl
push
daa
shl
sti
add
int
push
push
pop
pop
adc
ror
pop
jbe
movsb
inc
sbb
iret
or
clc
iret
mov
loop
dec
sbb
shrb
int
das
sbb
or
es
call
and
fs
dec
xor
std
adc
mov
rorl
loopne,pn
inc
fwait
les
pop
xchg
jg
dec
out
xor
xchg
pop
out
ss
or
inc
cmp
fs
mov
out
loopne
sub
jp
inc
xchg
and
outsb
rorl
sbb
mov
push
out
mov
pop
adc
xor
aad
cmc
shr
nop
fsub
or
icebp
subb
inc
xchg
push
pop
lret
push
les
popf
mov
cltd
dec
call
add
fiaddl
and
cmp
into
out
shll
dec
mov
sbb
mov
icebp
fs
enter
mull
jae
jae
dec
sbb
add
out
pop
sahf
mov
gs
add
lods
xlat
imull
pop
movsb
adc
push
mov
out
add
test
rcl
and
inc
dec
mov
imul
push
xchg
mov
mov
or
inc
jge
sbb
or
xchg
test
int
fcomps
jb
adc
mov
mov
and
gs
sub
adc
xchg
fs
comiss
inc
aam
das
loop
push
dec
xor
sti
xor
fs
and
jbe
adc
pop
cmp
add
roll
mov
mov
mov
jecxz
enter
xchg
push
into
in
add
dec
sub
cmpl
mov
add
cmovle
sahf
adc
dec
shr
mov
mov
shr
add
or
mov
mov
pop
push
adc
jge
or
push
lahf
ficomps
adc
jae
lods
inc
adc
mov
mov
xchg
mov
clc
pop
sbb
stos
add
mov
out
mov
sbb
inc
es
pop
ds
lret
inc
scas
aam
lods
cmp
and
cs
push
mov
cmp
dec
or
or
lret
ljmp
data16
daa
out
sahf
jb
and
imul
and
push
jge
int
push
ss
inc
addr16
pop
or
fdivrl
dec
adc
push
iret
sbb
sub
aaa
push
inc
sysret
mov
xchg
dec
or
mov
adc
aam
int3
outsb
xorb
xchg
or
push
arpl
mov
mov
jb
imul
xchg
mov
popa
sub
sub
pushf
add
repnz
or
mov
pushf
out
xlat
add
xor
xor
and
add
sub
scas
mov
ja
mov
shlb
dec
fs
cmp
xor
or
pushf
int3
cltd
push
aad
std
sbb
adc
jge
pop
push
arpl
jns
scas
rol
repnz
jecxz
fst
mov
pop
ret
dec
mov
mov
aam
arpl
popf
rorb
icebp
jmp
fiaddl
xchg
jecxz
fistps
sbbb
mov
fcomi
jns
mov
jbe
jb
loope
xchg
call
push
insl
ja
lret
jmp
push
lods
mov
and
adc
test
jne
jne
mov
and
imul
pop
cltd
into
stc
pop
inc
mov
adc
ficompl
mov
push
xchg
es
pop
mov
and
jecxz
or
dec
imul
adcb
mov
inc
inc
das
jnp
and
jp
stos
mov
int
test
insb
dec
mov
lcall
aad
dec
cli
lret
add
cwtl
js
popa
adc
mov
cmp
or
dec
xchg
jne
dec
xor
mov
hlt
mov
sub
cmpsb
subb
push
fnsave
cwtl
out
sub
cmp
cmp
cs
push
xchg
xchg
dec
jecxz
into
jae
cmp
loop
aaa
fisubrl
jge
mov
frstor
jnp
xchg
mov
scas
imul
xor
addr16
aam
lahf
ljmp
adc
or
or
test
xchg
xchg
sub
in
xchg
sbb
arpl
rcr
cmp
push
test
fistpll
nop
nop
jmp
aad
push
dec
mov
insl
icebp
les
cmp
or
lds
sub
jecxz
or
push
mov
test
call
pushf
add
nop
or
sbb
dec
push
loopne
scas
in
jo
mov
stos
and
inc
xor
mov
ljmp
leave
leave
sub
jle
inc
scas
fistl
scas
ja
xor
movsl
testl
js
sbb
cmp
and
imul
push
mov
push
in
inc
cmp
jo
popa
mov
lahf
sahf
fstps
sub
dec
into
jmp
jmp
push
fldl
sbb
int
adc
shll
test
or
fldt
jl
pop
test
or
add
imull
pop
lcall
arpl
iret
jge
pop
and
pusha
cld
repnz
and
punpcklwd
loope
rcrl
xchg
xchg
mov
push
ja
jecxz
xchg
sar
jne
adcl
lods
sub
jo
mov
data16
stos
lods
inc
movsb
sbb
push
pop
push
lcall
xchg
add
cli
icebp
loop
vfnmsub231ps
js
cmp
lock
bound
jo
imul
ret
jbe
mov
movsl
pop
sub
addr16
lret
or
push
sub
dec
jge
sub
rcrb
rcrl
shll
shrl
jbe
loope
lea
cmp
test
out
or
test
js
push
mov
ret
hlt
lods
sti
pop
mov
scas
xchg
push
sbb
cmc
jp
sti
lret
in
mov
mov
sub
call
mov
push
cmp
mov
push
test
jge
sbb
mov
inc
pop
not
mov
cli
cmp
shrl
loop
or
ss
insl
xchg
aaa
mov
pop
test
push
push
test
je
test
push
pop
inc
repnz
into
mov
repnz
std
sbbl
xor
mov
jns
pop
mov
lret
js
dec
cmp
mov
lret
mov
imul
lods
leave
imul
add
dec
mov
mov
lret
sbb
les
out
loope
imul
divl
sub
mov
test
cmc
pop
aam
inc
add
add
cmp
iret
lods
xor
daa
out
lret
cmc
xchg
mov
push
repz
pop
fstl
pop
pop
adc
call
cli
inc
adc
xchg
jns
aaa
jns
pushl
cs
cli
inc
jns
and
cmp
fisubrs
stc
push
mov
jns
jge
pop
sbb
out
push
mov
mov
jp
push
cmp
inc
and
frstor
xchg
repz
xor
or
sub
pop
sub
test
push
push
or
mov
cmp
or
arpl
test
aam
mov
add
cmp
xor
sbb
mov
scas
mov
cmp
or
in
subl
test
xchg
lret
dec
in
daa
jb
shrl
loopne
enter
dec
cmp
pop
cmc
xor
sub
lahf
sub
mov
nop
popf
xchg
sarl
stos
aaa
mov
out
out
and
fmull
mov
xor
lock
sarb
sbb
dec
mov
or
hlt
xchg
ljmp
xchg
ret
ja
insb
out
fcomi
mov
fimuls
iret
inc
fistl
sub
sarl
inc
out
cmp
sarb
pusha
gs
shll
fimull
xor
out
jg
stc
sti
ljmp
sbb
movsl
adc
sub
mov
adc
pop
fadds
add
and
jp
test
mov
lret
addb
repnz
push
mov
cmpsl
dec
cli
or
push
rcrl
jo
dec
setae
sub
leave
and
data16
or
pop
push
leave
adcl
test
aaa
jne
pushw
mov
and
add
bound
or
pop
xor
add
pop
sbb
pop
xor
inc
dec
xor
ret
int3
les
mov
push
fiadds
pop
pushf
and
push
pop
push
xor
jne
cwtl
test
aaa
xchg
push
rsm
cmpb
sbb
cmc
gs
in
dec
xchg
rcr
xor
xchg
pop
dec
fisubs
fisubl
jns
pop
inc
lock
mov
in
sub
pusha
xor
mov
push
test
adc
inc
xor
pop
pop
rorb
sti
imul
rorl
jns
sbb
aas
inc
lods
lea
mov
push
addr16
mov
add
into
fisubs
add
imul
leave
call
aad
loopne
sti
cmp
mov
push
mov
test
fwait
xlat
add
dec
and
lods
or
aad
mov
in
in
out
adcl
je,pn
inc
mov
popl
mov
mov
aam
add
xchg
xchg
mov
ds
add
mov
sbb
jg
cld
jne
outsl
scas
mov
lret
lret
int
mov
pop
mov
inc
mov
adc
or
loope
inc
xor
icebp
mov
pop
inc
out
ja
mov
movsl
out
jmp
bound
aam
enter
mov
fiaddl
and
mov
sbbl
popf
push
into
outsb
data16
insl
or
mov
mov
test
ret
xchg
sbb
push
push
push
pop
mov
nop
sbb
pop
sbb
dec
ss
scas
into
test
add
sub
cs
jmp
jb
xor
iret
es
jg
sub
mov
sahf
mov
mov
cli
xchg
add
das
cwtl
shr
iret
xorl
xchg
ret
cmp
mov
cmp
cli
inc
mov
bound
rcl
mov
aam
jnp
stc
es
out
xor
xchg
and
pop
ret
mov
and
adc
test
test
aam
cmp
icebp
insl
stos
push
scas
mov
into
jb
daa
cmpsl
inc
ja
repz
scas
rorl
sub
sti
daa
popa
cmp
iret
xor
popf
mov
xlat
mov
leave
adc
jno
pushf
or
mov
add
push
jecxz
xchg
fwait
aaa
iret
and
mov
cli
jp
insl
clc
nop
aam
sbb
in
xor
scas
shll
shll
adc
inc
push
pop
lock
arpl
pop
jecxz,pn
jge
push
mov
mov
test
mov
mov
dec
lret
shlb
adc
mov
jle
mov
adc
inc
adc
loopne
inc
ljmp
enter
inc
jo
or
ret
inc
fmul
je
insb
lahf
dec
in
negl
pop
mov
daa
push
sub
scas
mov
xchg
and
jp
inc
orl
cmpb
cwtl
ret
cwtl
xor
testb
inc
enter
inc
rol
daa
ror
je
andl
and
xchg
fidivrs
fldcw
outsl
xor
enter
icebp
dec
out
scas
aas
pusha
cmpl
jns
pop
fs
dec
decl
xchg
ljmp
pop
fwait
dec
and
in
in
mov
stos
lea
mov
inc
jmp
arpl
iret
lock
setne
std
aad
cmp
cmpsl
or
in
out
cmp
stos
cmp
add
cmp
or
fstl
loope
daa
ja
pop
aad
mov
sub
rolb
out
or
out
and
ja
repz
shl
lret
fnstenv
out
and
push
cld
lods
pop
dec
ficompl
sub
aad
adcl
add
out
lock
sub
addr16
sbb
daa
lcall
ret
es
bound
or
push
adc
cmc
test
xchg
testl
cld
movsl
loopne
call
push
popa
xchg
mov
adc
ss
jge
mov
pop
pop
cmp
es
daa
pusha
enter
dec
lea
adc
mov
add
enter
lret
enter
jns
jle
in
push
into
xor
mov
jb
xorb
push
or
add
xor
jns
call
add
loop
or
xor
cltd
call
pop
sbb
xor
mov
cwtl
lds
mov
xchg
imul
daa
add
dec
and
mov
sub
out
sub
xchg
mov
frstor
subl
icebp
fisubrs
mov
sbb
fidivs
mov
or
into
adc
cltd
aam
cltd
pushf
fdivrl
xlat
sbb
addb
les
fldenv
xchg
push
int
pop
inc
mov
dec
xor
mov
jae
jnp
pushf
shlb
inc
sub
pop
rorb
push
or
into
into
sbb
shlb
mov
or
repnz
sub
addb
lods
ficompl
adc
add
xchg
adc
pop
stos
jae
lcall
or
ja
pop
cs
adc
les
mov
add
mov
jle
pop
out
mov
jne
jbe
je
dec
add
jp
jl
fwait
imull
stc
pop
sub
jp
int3
adc
pop
sbb
lret
xchg
xor
lcall
orl
call
mov
rorl
xchg
mov
cs
out
fidivrl
sbb
incb
adc
fdivr
and
lret
dec
gs
and
repnz
and
cmpsl
and
sbb
ljmp
xor
and
imul
aam
dec
pop
xor
adc
push
adc
inc
cmp
cmp
xchg
xor
inc
inc
daa
dec
fmul
hlt
int3
jmp
mov
mov
and
pop
dec
jecxz
or
or
lods
dec
bound
and
sub
cli
repz
push
imul
call
gs
pop
neg
sti
cmp
pushf
dec
xchg
stc
xchg
xlat
in
mov
std
inc
adc
or
cmpsl
filds
mov
fcoms
arpl
cmc
aas
fnstenv
adc
divb
aaa
lahf
xchg
xor
push
mov
push
ljmp
daa
mov
cltd
fildll
dec
dec
fldcw
cmp
ss
into
pop
icebp
jno
xchg
push
int
popf
jnp
fs
outsb
jmp
jg
enter
sbb
std
stc
inc
lock
adc
xchg
stos
add
mov
xor
imul
adc
incl
das
jge
xor
mov
icebp
rcll
sub
push
inc
rep
jae
cmpsl
dec
add
movsl
push
ret
cmp
sub
ljmp
or
push
or
test
negb
in
lret
inc
add
rorb
in
cmpsl
sbb
cmp
repnz
jne
mov
lock
inc
imul
ja
cmp
dec
sbb
jecxz
mov
mov
inc
ret
and
repnz
sbb
mov
fs
cli
inc
fwait
cmpsl
imulb
pushf
jno
fldl
sbb
sbb
scas
pop
loop
and
push
push
push
mov
pop
adc
fmull
loopne
data16
orl
nop
dec
fmull
fnstcw
xchg
add
jp
xchg
push
mov
sbb
sbb
cmpsb
inc
mov
and
mov
pop
icebp
lock
sti
fcomi
test
fnstcw
mov
and
shll
mov
lods
aam
leave
stos
cmp
data16
jae
movsl
push
cwtl
je
cltd
ljmp
add
aam
movsb
mov
add
cltd
ljmp
mov
mov
out
and
adc
or
lods
hlt
and
push
or
loope
scas
ds
push
cmpsb
or
pop
dec
mov
push
int3
jecxz
ret
adc
std
or
loopne
jp
lcall
adc
dec
loop
movsb
leave
cli
imul
pop
rorl
or
test
aam
into
inc
clc
mov
mov
out
xchg
fsubp
fs
ja
lea
pushf
ds
xor
jge
xchg
subl
loop
and
jle
push
and
xchg
add
dec
lods
popf
mov
xor
mov
test
and
sbb
les
sub
pusha
inc
popf
jns
mov
xchg
pop
push
cmp
les
and
dec
das
pop
out
lea
push
lahf
mov
xchg
mov
pop
fadds
sub
ljmp
andw
pop
incb
sete
in
adc
cmpsb
call
cmpsb
mov
xchg
pop
push
mov
insl
leave
frstor
inc
add
sbb
adc
jb
cli
rolb
sub
pushf
clc
outsl
xchg
sub
and
and
add
push
test
std
loop
iret
shr
jl
aam
push
push
dec
or
imul
cmp
clc
add
xchg
daa
lret
fimuls
mov
inc
jbe
inc
pop
mov
mov
add
xor
sbb
scas
xor
popa
mov
pop
arpl
and
es
into
add
jl
sbb
or
push
add
inc
stc
xor
leave
xchg
jl
jecxz
xchg
aaa
mov
cmpsl
lret
mov
or
mov
mov
sarb
sub
fnstenv
add
sarl
pop
pop
sbb
insl
cmp
mov
lcall
ret
add
sub
add
aad
in
icebp
fdivrl
jge
fnsave
jp
jmp
clc
rorb
pop
mov
or
mov
nop
push
lods
and
loop
fcoms
mov
mov
dec
and
rcrb
loop
shll
psllw
and
movsb
popa
arpl
popf
xchg
scas
cmp
fwait
sub
dec
aas
lahf
add
aam
aam
pop
xor
xchg
repnz
hlt
cmp
xchg
dec
xchg
sbb
fsubs
sti
mov
cmovns
enter
xchg
aam
adc
fsubrp
push
inc
and
and
rclb
cs
push
lds
jno
pop
xchg
push
scas
mov
or
nop
or
xor
add
mov
aas
xor
inc
ds
mov
out
sub
mov
push
cs
loopne
into
or
das
jle
pop
bound
sbb
and
push
jmp
int3
xchg
adc
push
dec
jp
sbb
test
mov
cld
test
cmp
mov
and
jo
int3
adc
adc
add
fisubrs
mov
mov
sub
inc
addr16
cmp
pop
cmpsl
icebp
lods
sahf
pop
jne
dec
in
shll
out
jae
fmull
mov
xor
mov
jge
xor
lsl
inc
pop
iret
movsl
dec
in
xchg
xchg
lea
into
into
lds
pop
cmp
inc
inc
push
cmp
fisttpll
iret
lds
shl
aas
cmpsb
mov
ljmp
xchg
cs
ret
popf
mov
add
fs
insb
or
pushf
inc
mov
negl
sbb
fcomps
popf
pop
iret
sbb
pop
out
push
and
dec
test
test
ss
loopne
mov
sub
out
inc
dec
mov
rorb
fidivs
add
jl
cltd
or
xchg
push
loop
xchg
dec
dec
repz
xor
movsl
adc
xor
jo
out
fmull
push
loop
aaa
pop
bound
nop
insb
roll
or
js
jl
add
xor
xlat
je
push
adc
mov
std
shll
mov
push
aam
cmp
mov
fs
jmp
adc
popf
add
cs
xchg
movsl
dec
loope
scas
mov
jmp
adc
push
sbb
mov
inc
push
aam
sti
and
rcll
push
mov
xor
arpl
mov
dec
cs
xchg
and
sti
cmp
aas
xor
jns
sbb
fistps
add
lea
xor
mov
aas
xchg
jecxz
leave
lock
pushf
pop
sbb
pop
ss
mov
sahf
xchg
mov
outsb
lcall
lahf
cli
cmc
adc
imul
xor
int3
xor
loope
xchg
lods
or
fs
sbb
mov
sub
lret
icebp
lods
faddl
rcrl
mov
test
cmpl
jle
adc
movsb
mov
jge
cmp
pop
pushf
adc
mov
jbe
sbb
clc
in
imul
stos
repz
lds
add
inc
lods
dec
push
mov
movsl
jle
mov
insb
popa
rcrl
stos
mov
je
cmp
arpl
xchg
inc
lock
dec
sbb
xorb
in
sbb
xor
and
shll
adc
test
add
pop
mov
repz
jl
sbb
test
lods
sti
ret
in
or
push
lods
arpl
sahf
inc
mov
or
sbb
push
adc
ret
dec
or
mov
pop
pushf
jo
int3
sbb
dec
je
cmp
popa
ret
jb
or
inc
aad
dec
fisubs
jge
lcall
and
push
out
sub
inc
pop
iret
scas
std
sbbb
cwtl
xchg
or
pop
lret
push
in
dec
loope
mov
js
adc
nop
sub
rcll
test
sbb
mov
cwtl
test
in
xor
xor
icebp
stos
pop
jne
es
add
cmp
or
cmp
shrb
cmp
xchg
adc
shl
dec
bound
in
pop
jo
lret
adc
pop
sbb
dec
ret
add
divl
jnp
icebp
loope
mov
mov
fbld
rep
fbld
jmp
es
lret
shrl
push
cmp
hlt
push
cld
in
mov
out
pop
xor
and
dec
movsl
cmpsl
jp
mov
dec
inc
push
dec
aas
cmpsb
sti
adc
jle
push
mov
sbbb
pusha
cmp
push
call
xor
adc
cltd
lock
or
jae
dec
xchg
push
sbb
sbb
fisubrl
rcll
and
cmp
imull
mov
fldt
jne
or
pop
popa
or
xchg
out
fwait
adc
mov
cmp
les
mov
xchg
xchg
fwait
xchg
pusha
mov
ret
xor
lahf
xchg
xor
subl
push
call
jmp
adc
into
jmp
ret
lret
daa
shll
or
push
imul
adc
xchg
push
cmc
dec
mov
pop
lock
mov
int
fadds
sub
ss
movsl
lds
lret
pop
and
xchg
add
or
imul
mov
or
mov
dec
mull
das
pop
pop
or
and
jecxz
cmpsb
outsl
hlt
mov
adcb
ror
mov
sub
pop
dec
outsl
pop
mov
push
fiaddl
rcr
sbb
pop
cmpsl
imul
adc
mov
pop
jl
xchg
lahf
mov
in
ret
inc
and
mov
scas
andl
mov
lods
mov
insb
pop
jae
inc
mov
inc
loopne
sub
nop
jecxz
cmpsb
movsb
xor
xchg
lock
mov
pusha
xor
shlb
add
push
push
lcall
push
fmull
jmp
sbb
lcall
in
dec
stos
push
nop
dec
ror
popf
add
jmp
dec
cmp
lret
dec
push
or
inc
jp
mov
mov
scas
std
test
push
fmull
mov
xorl
loopne
inc
pop
iret
xchg
into
orl
inc
adc
sbb
fcmovbe
sahf
test
xor
add
jp
dec
imul
and
jmp
es
jae
rcll
xchg
sbb
es
aam
imul
jnp
adc
out
push
insb
inc
cmc
outsb
dec
roll
sub
xor
jae
xchg
push
xorl
jbe
in
les
mov
pop
jae
cmp
and
idiv
data16
jb
shl
out
sarb
cwtl
or
mov
pop
mov
inc
cwtl
std
xchg
cwtl
push
fdivs
bnd
mov
inc
adc
pop
fcomp
and
pop
cli
sub
or
ftst
stc
xor
or
jp
add
cmp
dec
pop
leave
lcall
jbe
cmp
dec
jl
and
daa
jp
inc
aad
inc
popa
data16
cmpsl
dec
xor
or
stos
dec
outsl
pop
xchg
mov
aaa
cmpsb
adc
jo
and
test
int
icebp
mov
add
dec
dec
repz
cmp
sbb
cmpsb
mov
cmp
ljmp
test
sti
mov
or
sbb
sahf
dec
push
xchg
adc
test
faddl
or
mov
repz
and
fimull
adc
enter
loopne
or
adc
pushf
fsubrp
adc
pop
out
mov
push
jae
or
test
movsb
xchg
shr
cmp
bound
in
cmp
insl
lods
add
enter
ss
js
cwtl
sbb
inc
fdivrl
es
jbe
mov
mov
stos
mov
mov
pop
inc
push
ljmp
pop
mul
daa
addr16
inc
ja
insb
inc
jecxz
push
mov
or
jmp
and
xor
in
ljmp
in
mov
cli
enter
ds
out
psadbw
xchg
xor
fwait
mov
in
xor
repz
sbb
js
cltd
adc
out
push
loop
into
cs
fadds
in
daa
pop
adc
scas
or
cmp
push
test
lock
int
add
sub
arpl
xor
test
rcl
mov
or
in
pushf
sbb
fsubl
adc
lret
lret
fld1
mov
mov
pop
rorl
and
dec
mov
sub
add
mov
fwait
sbb
and
mov
dec
mov
sahf
add
mov
pop
xor
pop
mov
mov
mov
aam
sbb
inc
jae
sub
add
fs
lea
roll
dec
nop
fadds
les
inc
cmp
pop
call
mov
ficomps
adc
repz
shlb
sub
and
negb
ja
stos
std
cwtl
outsb
cmpsl
pop
jns
sbb
dec
or
das
clc
jg
int
in
es
mov
insl
mov
mov
pop
aaa
sub
mov
fidivs
xor
adcb
xlat
mov
popf
mov
ret
or
fwait
or
fsubrs
dec
ja
jecxz
enter
mov
fisttps
mov
sti
scas
mov
subb
mov
movsb
inc
pop
inc
sbb
scas
jmp
xchg
ja
divb
mov
and
arpl
sub
cmp
test
mov
ja
cmp
dec
arpl
push
sbb
mov
repz
xchg
stos
push
out
pop
pop
js
xor
xchg
and
test
ja
mov
loop
lock
mov
lock
pop
cmp
test
das
push
push
or
mov
mov
inc
rclb
in
inc
dec
push
bound
push
das
dec
mov
mov
fisubs
mov
lcall
inc
fidivl
test
or
push
hlt
enter
pusha
mov
add
mov
repnz
push
xchg
mov
pop
aaa
cmp
lds
pop
in
cwtl
xchg
sub
jecxz
jmp
mov
and
xchg
jmp
nop
jo
jl
nop
ja
ljmp
cmpsb
jmp
gs
fldl
pusha
sub
mov
push
daa
test
js
cmp
out
mov
inc
das
adc
cmp
xchg
rcrb
mov
popf
mov
aad
cmp
test
mov
and
inc
sbb
dec
cmpsl
sub
or
jne
pop
out
xor
fwait
pop
mov
je
adc
jbe
in
cmpsl
bound
pusha
xor
fwait
mov
and
mov
ja
ret
ss
add
adc
cs
fimull
pop
or
call
pop
add
aaa
dec
mov
mov
arpl
sbb
and
stc
sbb
xchg
push
mov
sub
sarb
fabs
cmp
mov
ljmp
std
dec
adc
lock
jae
mov
push
push
les
out
popf
mov
stos
ret
clc
sbb
sahf
mov
cmp
out
mov
imul
mov
jo
xchg
fldt
and
fcoml
hlt
gs
flds
xchg
nop
add
and
daa
sti
and
mov
jp
and
cld
iret
mov
cmc
iret
dec
call
shr
mov
mov
loopne
fs
pop
stos
sub
pop
ljmp
fucomi
inc
imul
and
inc
dec
and
fmul
cltd
sub
mov
jg
adc
cltd
aas
ror
test
mov
shl
inc
sbb
enter
adc
inc
pop
jmp
aaa
add
mov
enter
sahf
lret
cs
testl
lcallw
xlat
je
jge
cld
sub
incl
adc
and
js
jne
repnz
pop
scas
xchg
inc
jp
sub
in
sbb
mov
and
lods
movsl
mov
xchg
loop
das
mov
lret
mov
in
jp
imul
sbb
push
aam
jns,pn
push
rcrb
adc
pushf
push
push
inc
cmpsb
in
fildl
jge
pop
pop
or
xlat
popf
int
mov
stos
push
movsb
push
push
jns
adc
xlat
pop
sahf
mov
fdivs
inc
inc
das
jbe
fs
aas
mov
xor
jnp
mov
pop
jnp
mov
jecxz
cwtl
sub
mov
das
push
xor
push
scas
cmpl
sub
jmp
jne
inc
aad
cmpsl
jo
or
jnp
mov
xlat
push
fwait
pop
xor
in
add
inc
inc
loopne
add
mov
xchg
pop
xor
addr16
pusha
ja
orl
add
or
ficoml
push
xchg
jp
add
mov
int3
lret
mov
sbb
mov
mov
or
push
inc
mov
pop
adc
std
aas
dec
push
adc
pop
out
cltd
or
fistl
jae
dec
outsl
cwtl
movsl
cmp
adc
insb
inc
inc
xor
mov
aad
int
bound
dec
xchg
pushl
pop
jmp
mov
xchg
add
cmc
cwtl
mov
cmpsb
pop
push
xlat
aad
add
push
out
lret
jnp
mov
mov
xlat
sub
insl
loope
les
stos
or
lods
jae
push
mov
stos
dec
cwtl
adc
sbbb
popa
lea
and
cwtl
xor
leave
sbb
fimull
shrl
sub
inc
shl
adc
mov
cmp
mov
jp
hlt
shll
ret
add
jo
out
pop
add
dec
lds
icebp
cmp
mov
or
push
jmp
add
clc
cmp
mov
test
scas
roll
mov
push
adc
icebp
inc
les
sahf
faddl
mov
dec
inc
fsubp
adcl
fistpll
pop
dec
push
sub
aas
xlat
dec
jg
jecxz
sahf
and
mov
pop
cwtl
insb
jecxz
ljmp
xor
ret
test
pop
mov
add
inc
ffree
addr16
fcomps
cmc
xchg
lock
jmp
std
outsb
out
lds
mov
lahf
mov
mov
dec
inc
jbe
pop
mov
ror
jmp
testl
jae
and
mov
xor
movsb
jnp
jnp
cmpsb
inc
ss
dec
hlt
je
or
scas
into
arpl
mov
pop
and
mov
insl
mov
cli
and
lret
push
dec
dec
dec
xchg
lret
pushf
adcl
das
xor
mov
xor
sbb
in
out
scas
push
scas
mov
sbb
mov
ficoml
mov
xor
pop
xchg
add
addr16
out
popf
push
scas
scas
inc
das
adc
and
push
mov
daa
mov
mov
ret
arpl
ficoms
outsl
flds
push
or
int
lret
xchg
mov
das
lods
dec
add
mov
mov
jle
les
jb
rcr
cmpsl
jnp
xchg
push
mov
movsl
pushf
push
mov
loope
out
dec
sbb
icebp
xlat
cmp
push
daa
cmp
mov
mov
outsb
push
push
popf
pusha
dec
and
scas
incb
dec
adcl
sbb
xor
push
sub
sti
stc
cmp
add
lcall
daa
xorl
xchg
adc
sub
dec
xlat
inc
cmp
dec
out
icebp
js
xchg
movsl
push
pop
test
inc
fs
mov
jb
into
aam
xchg
sbb
xlat
inc
pop
movsb
shll
push
mov
xchg
push
hlt
ret
xlat
lods
aas
push
leave
out
dec
push
cltd
pop
sbb
jmp
cs
adc
add
test
xchg
sbb
cmpsl
sbb
sbb
xchg
cmc
rorl
fimuls
jo
jle
std
lds
adc
arpl
aas
adc
mov
mov
pop
iret
int3
pop
mov
xchg
mov
inc
and
pop
mov
inc
inc
mov
mov
cmp
ror
pop
mov
cs
lods
movsb
sbb
adc
push
icebp
jecxz
ljmp
dec
js
sub
xchg
xchg
and
sub
inc
leave
enter
xchg
mov
mov
push
test
sub
pop
inc
leave
mov
mov
ljmp
xor
out
jo
push
lret
xlat
jmp
inc
leave
ja
cmc
and
ret
ss
xchg
in
dec
mov
popf
push
fisubs
lret
sahf
frstor
jbe
fsubrs
jne
popa
js
push
adc
bnd
jae
adc
and
sahf
movb
mov
ljmp
je
push
pop
push
call
adc
sbb
push
add
mov
mov
inc
aam
sub
add
push
in
jp
gs
pop
lods
pop
add
push
xchg
js
subb
and
push
and
fcmove
sub
mov
enter
push
test
shl
cmp
lcall
sub
push
leave
dec
push
mov
lret
push
ret
lret
xor
fs
pop
mov
dec
mov
repz
mov
jno
xchg
rcl
push
stos
stos
cmpsb
jmp
adc
xchg
cmp
pop
mov
pusha
mov
mov
lods
imul
sbb
sarb
cld
ds
inc
ffreep
mov
dec
dec
xchg
push
lret
add
push
inc
cmpsb
lret
bnd
idiv
push
cmp
xchg
or
mov
lcall
ret
pop
adc
in
and
xchg
cli
ja
aas
adc
add
js
cmc
inc
in
xchg
push
shll
stc
mov
fdivs
mov
out
pusha
cli
loope
xor
cld
sti
std
sub
push
jb
out
and
or
or
mov
xor
fidivrs
in
jge
jnp
data16
pop
mov
add
cltd
sbb
mov
xor
lods
mov
jo
xlat
xlat
jo
je
pop
xor
nop
test
loope
pop
lea
jle
lcall
subl
loopne
icebp
adc
push
push
shlb
cmp
cmc
mov
add
sub
sub
lret
inc
insl
jbe
test
pushl
movsl
out
loope
lahf
pop
stc
push
stc
inc
jle
jg
outsb
loop
xchg
test
psubusb
out
sub
inc
mov
push
in
rorl
mov
cmp
and
mov
imul
repz
cmp
push
arpl
jnp
mov
add
daa
ret
adc
out
push
loop
push
popf
mov
mov
lret
jmp
xor
xor
xchg
std
test
cli
cwtl
mov
adc
and
out
ja
call
lret
push
addl
sbb
mov
cmp
fsubrs
dec
nop
jg
das
fldt
dec
mov
lcall
ja
lock
shl
cmp
sub
mov
pop
lea
sbb
loopne
out
pop
outsl
inc
pop
enter
bound
pop
push
jg
pop
out
mov
dec
mov
mov
cltd
and
mov
inc
lret
sub
daa
push
sbbl
xchg
mov
xchg
mov
stos
stos
hlt
cmc
mov
pop
mov
ds
rorb
add
pop
inc
add
clc
repz
adc
push
clc
pop
mov
sarb
add
push
popa
jnp
xchg
sbb
jmp
mov
jb
cld
dec
xchg
push
imull
pop
stos
mov
movsb
stos
inc
cs
jp
lods
xchg
jg
jo
pop
fcmovne
or
sub
sbb
mov
push
les
jmp
dec
jecxz
mov
fwait
adc
fsts
inc
adc
sbb
cmp
into
xchg
sahf
add
fnclex
mov
daa
and
add
into
mov
mov
fcompl
hlt
push
pop
in
movsl
mov
ja
je
ljmp
or
lds
pop
sbbb
add
lods
mov
sbb
xor
and
lret
jmp
out
imul
call
std
out
and
xchg
and
and
cmp
fimull
push
inc
into
add
mov
pop
fwait
test
or
in
out
fisubrl
fldl
aam
stos
pop
fstps
loopne
cmp
inc
inc
mov
int3
add
jmp
out
xchg
ret
sub
scas
cs
int3
fnsave
pop
inc
orl
movsl
dec
lea
mov
push
fistps
loop
and
push
sub
xor
div
mov
mov
ret
jb
sbb
mov
fsub
inc
xor
fimuls
jo
jae
mov
lret
pop
popf
pop
xlat
mov
idivl
sbb
fildll
or
cs
cld
cmp
dec
xchg
or
repnz
fwait
fbld
sti
shrl
sub
mov
xor
inc
dec
dec
pop
cmp
add
ficoms
std
movsb
sub
inc
add
sub
xor
flds
lods
cmc
in
xchg
cmp
pop
push
aad
mov
sbb
cwtl
bound
cmpsl
sub
movsb
mov
scas
adc
mov
lcall
pop
in
and
sub
out
ljmp
jl
adcb
jne
insb
iret
imul
test
ret
imul
into
pop
mov
dec
outsb
xchg
loope
dec
push
fdiv
inc
or
xchg
lods
sub
cmpsb
or
inc
decl
cltd
data16
enter
mov
or
stc
shll
sbb
in
xlat
mov
daa
lcall
stc
adc
pop
mov
pop
jp
pop
mov
xchg
testl
clc
dec
dec
sbbl
add
sub
mov
cmpsb
stos
push
std
xor
outsb
fsubrs
mov
divb
mov
xor
xchg
adc
mov
pushf
inc
xchg
cwtl
pop
lcall
popf
adc
mov
inc
add
mov
mov
dec
push
orb
mov
and
test
pop
xor
repz
pop
jnp
or
lret
pop
mov
aas
mov
mov
aam
add
sub
push
pop
dec
pop
sub
jl
hlt
lea
xchg
cmp
sub
es
mov
scas
pop
aaa
sub
outsl
das
dec
cmp
mov
jns
test
sub
dec
add
push
jecxz
adc
and
mov
int
xchg
cmpl
mov
xchg
test
xchg
mov
fiadds
adcb
test
dec
push
lret
outsb
shrl
testb
adc
int
mov
pop
int3
push
in
mov
dec
hlt
shrl
ljmp
ret
inc
add
fstpt
stc
cltd
cmpsl
dec
and
add
add
jns
popf
mov
jno
pop
clc
arpl
decb
outsb
mov
lret
scas
rorl
int3
mov
sbb
inc
icebp
fisttps
mov
adc
push
cs
lds
scas
fisubrs
and
popa
pop
pop
int3
mov
imul
sti
int3
mov
in
mov
push
adc
fiadds
or
stos
imul
mov
loope
mov
stc
nop
fwait
sub
jb
out
lds
sub
add
lds
bound
xor
or
ljmp
push
les
xor
jle
push
stc
dec
and
addr16
movsb
adc
add
mov
scas
and
xor
mov
or
xchg
inc
xor
push
push
lock
mov
in
sub
jnp
cmp
out
xchg
sahf
xchg
sarl
sbb
or
xchg
sbb
jg
std
in
cmc
adc
and
ja
es
sub
add
mov
or
mov
xchg
jmp
loope
push
cmp
dec
dec
push
js
sahf
shl
fwait
or
dec
les
loop
mov
andb
pop
dec
mov
pop
outsb
push
and
addr16
aad
dec
or
test
imul
fwait
popa
adc
stos
inc
mov
pop
mov
mov
insl
pushl
imulb
sbb
jnp
xchg
in
add
push
arpl
daa
add
sub
mov
cmpsl
jp
jg
cmp
repnz
in
lods
push
enter
push
fsubrl
push
pop
xchg
jl
pop
stos
test
push
popl
sbb
mov
les
jg
sahf
mov
arpl
mov
push
js
pop
cmpsl
jmp
mov
pusha
sti
pop
xchg
add
add
xchg
push
in
fistpll
clc
mov
or
ret
push
sub
nop
sub
mov
pop
cmp
cmpl
xor
addr16
in
xchg
xchg
fists
pop
inc
mov
xor
into
adc
test
stos
test
inc
jb
lahf
andl
adc
jno
lcall
jne
int
sbb
adc
dec
cmpsb
sarl
adc
and
add
stc
push
push
sub
int3
in
in
scas
daa
mov
aad
iret
jo
fidivrs
shll
outsl
xlat
xor
jbe
outsb
pop
das
std
arpl
arpl
sub
rorb
sbb
or
mov
ficoml
aad
jecxz
mov
add
out
or
push
mov
outsl
pop
cld
sti
leave
cs
inc
sub
in
mov
fdivrl
mov
jae
cmpsl
pop
daa
jnp
ret
mov
mov
shlb
ficompl
adc
jnp
push
or
movsl
movb
mov
gs
in
movsb
in
push
popf
cmpsl
test
inc
jg
aaa
loope
pop
hlt
mov
int
jbe
test
jp
clc
pop
xchg
adc
add
xchg
mov
adc
aaa
mov
sti
fs
adc
imul
mov
lea
push
ret
push
jl
pop
sub
pop
pusha
mov
daa
iret
and
add
mov
js
xchg
je
mov
fucomip
mov
cld
add
cmp
int3
add
lock
xorl
fmuls
or
dec
ret
xor
das
std
push
mov
std
inc
addr16
dec
cmc
fnstcw
dec
stos
dec
popa
arpl
mov
enter
xchg
or
adc
or
mov
stos
data16
inc
ss
repnz
lods
pop
aad
mov
mov
les
jp
cltd
fisubl
add
xchg
loopne
push
test
lock
sbb
sahf
or
fs
arpl
cs
imul
addr16
js
sub
cmp
add
xchg
pop
dec
fstpt
sbb
push
dec
gs
sbb
jl
inc
aas
in
xchg
xchg
jnp
ljmp
lret
and
shrb
movsl
and
or
lods
lret
loope
inc
cmp
popf
icebp
xchg
mov
fwait
shrl
imul
dec
sti
cwtl
push
pop
rclb
pop
subl
cmp
pushf
mov
out
xchg
xorl
inc
adc
fmuls
jne
push
out
popf
data16
fbld
test
fsts
iret
inc
xlat
jb
mov
insl
es
jbe
shrb
pusha
fsubs
mov
dec
shll
and
inc
jno
loope
mull
repz
mov
ljmp
push
mov
loopne
mov
inc
sahf
jae
in
aam
and
mov
mulb
mov
pop
insb
push
mov
es
clc
xchg
push
imul
jae
cltd
fidivrl
xor
imul
out
scas
hlt
xchg
gs
rclb
xor
or
dec
mov
dec
push
jbe
stos
cld
cmp
or
pop
mov
lret
sub
xchg
cmp
outsb
xchg
cld
xchg
push
mov
adc
cmpsl
pop
push
rcrl
mov
in
nop
mov
sbb
bnd
push
decl
jecxz
xor
push
cwtl
das
movsl
mov
jecxz
sub
mov
sarb
jbe
xor
xorl
xor
stc
add
call
inc
mov
push
repz
movb
pop
in
inc
outsl
push
cmp
sub
lock
loopne
mov
mov
xor
mov
sti
dec
dec
xor
add
rclb
stc
sub
mov
repz
sub
or
enter
sarl
pop
subl
pop
inc
insb
xor
mov
cmpl
ja
mov
mov
add
jno
push
cltd
movl
loopne
mov
clc
add
adc
inc
fwait
sbb
or
mov
cmpsb
sbb
mov
fildll
test
mov
sahf
pop
mov
mov
jge
ljmp
rol
sub
daa
jp
scas
mov
mov
clc
pushw
data16
dec
dec
mov
cs
pusha
adc
jo
xor
xor
fldl
cmp
cmp
hlt
mov
ds
mov
pop
mov
cmc
xor
jg
inc
repz
sbb
pop
cmp
push
cmc
dec
bound
pop
pop
loope
inc
sub
mov
clc
add
sti
mov
repnz
std
push
out
and
inc
je
aas
sbb
stos
dec
mov
and
mov
loope
popl
insb
jno
mov
sti
xor
push
pop
mov
pop
push
cmp
leave
pop
je
adc
push
rcll
pop
dec
xor
jl
mov
mov
jne
test
and
movsb
push
adc
pop
daa
xchg
imul
and
cmp
in
or
leave
dec
out
leave
dec
fsubl
or
ds
jne
dec
and
adc
fcmovnb
adc
jae
sbb
arpl
femms
mov
sbb
inc
xor
cmp
into
test
push
cmpsl
repnz
jge
in
mov
cs
cld
xor
jle
mov
int
xor
mov
cmc
cmp
cld
push
xor
popf
sub
int3
adcl
inc
pusha
jge
aad
dec
mov
sub
push
xor
clc
shl
adc
inc
test
dec
lock
icebp
mov
dec
enter
jae,pn
sbb
sub
aaa
imul
jg
and
mov
cmpl
cmp
lcall
jae
add
xchg
lods
popf
movsl
jbe
repz
ret
in
mov
addr16
sub
in
js
pop
dec
in
xchg
mov
or
sub
sub
mov
leave
mov
pop
pop
ds
aad
xor
lcall
pop
je
in
jb
cltd
jnp
ret
xchg
mov
xor
inc
cs
faddl
jmp
xchg
movsl
push
outsb
adc
int3
or
xchg
mov
jae
push
sub
xchg
xor
pop
mov
jmp
dec
cltd
pop
fnop
insl
out
pop
push
dec
scas
add
cmc
jecxz
scas
xchg
xlat
push
pop
jbe
aad
ror
add
dec
sub
loop
mov
repnz
inc
je
and
mov
inc
imul
add
xchg
push
push
push
test
fisttpl
mov
mov
cmpsb
aad
sub
xor
and
mov
pop
inc
lahf
inc
sub
outsb
and
dec
push
lods
orb
mov
sub
dec
lds
rcll
int
scas
lret
fwait
movsb
sarb
mov
jmp
fs
mov
mov
negb
insb
push
imul
fcomp
inc
es
mov
ds
mov
les
aaa
mov
jnp
fisubrl
mov
push
xor
add
push
ss
mov
lahf
popa
addr16
or
shll
sbb
sub
dec
cvtpi2ps
cmp
xchg
pop
push
mov
adc
adc
ja
inc
ss
jecxz
jge
mov
cli
fsubrs
gs
addr16
sbb
xor
push
shrl
inc
mov
insb
add
push
pop
lea
sbb
shr
sti
mov
inc
pop
and
adc
pop
pop
arpl
pop
xchg
sbbb
fcomps
fisubrl
sahf
mov
add
dec
js
arpl
call
jle
cmp
enter
pop
dec
mov
loope
subl
sub
and
and
xchg
imul
imul
rolb
lret
xchg
cmpsb
or
arpl
inc
mov
js
out
jo
and
shl
loop
mov
ljmp
cmp
leave
xlat
xchg
andl
mov
sub
cltd
cmp
sbb
adc
icebp
loopne
push
pop
fadds
mov
icebp
add
add
sub
imul
xlat
enter
in
js
push
jne,pn
cli
sbb
adc
jne
xchg
mov
rorl
add
adc
dec
pop
push
pop
outsb
inc
mov
sbbb
in
std
push
cld
pushf
or
in
pushf
adc
cmp
or
jb
pusha
sahf
jae
lret
cmp
fsub
dec
pushf
test
xchg
push
push
pop
xor
scas
xchg
nop
push
or
mov
adc
std
aaa
jle
stc
pop
cltd
inc
jne
xchg
jns
pushf
out
push
add
bound
enter
cli
nop
cmpsl
cltd
xor
xchg
xchg
push
subl
push
lcall
pusha
adc
mov
mov
aad
xor
ficomps
fisttpl
or
filds
push
mov
ja
cmp
cmc
in
in
or
jecxz
aam
lcall
div
test
push
not
in
sbb
out
gs
sbb
sub
je
push
mov
xchg
movl
jns
jne
or
sti
stos
sub
loopne
movsl
ljmp
xor
add
fdivl
lret
jb
stc
dec
sub
cmpsl
mov
out
lods
add
outsb
mov
push
aaa
xchg
std
cmp
mov
insb
aas
cwtl
mov
test
and
cmp
loope
mov
mov
into
out
cmp
and
pop
mov
lcall
dec
pop
push
sti
out
daa
mov
and
inc
std
aad
fnstsw
xor
andl
mov
sbb
data16
frstor
xor
pop
shlb
addl
repnz
loope
mov
inc
in
ret
sub
sbb
aad
xor
repz
adc
andb
mov
mov
jmp
std
cmpsb
sub
add
or
xor
rolb
dec
fimull
mov
sahf
fimull
adc
sub
push
je
add
les
call
push
pop
ja
dec
ja
shl
mov
cmpsl
add
push
bswap
lods
or
fisttps
pop
cwtl
mov
loopne
mov
nop
jb
es
mov
adc
xchg
hlt
out
in
or
or
js
sub
test
push
imul
out
xchg
das
mov
hlt
cmpsl
scas
aaa
into
ja
shlb
pop
push
fs
rorb
push
xor
jbe
mov
jae
mov
enter
cmpsb
call
push
push
or
inc
xor
loopne
inc
jnp
pop
lcall
mov
pop
mov
pop
mov
add
out
xchg
ljmp
insb
insl
fwait
xchg
jb
sub
jns
jle
int3
lods
cmp
cmp
push
fwait
loopne
sub
cli
and
jne
push
cmp
test
pop
sub
movsb
outsl
cmc
cmp
jb
inc
cmpsl
push
dec
adc
xchg
sti
xorb
lds
xchg
sbb
cmp
rclb
int3
iret
pop
nop
arpl
lret
or
test
pusha
push
jno
mov
xlat
outsb
sbb
mov
popa
mov
or
jle
xor
es
shll
decl
mov
lock
sahf
jecxz
mov
and
icebp
dec
pop
inc
pop
and
push
out
jae
iret
aas
std
xchg
push
inc
push
jecxz
daa
mov
push
lret
int
sbb
in
jmp
out
adc
rorl
lret
mov
clc
mov
inc
jl
add
xor
mov
mov
xor
mov
je
std
xchg
and
mov
lahf
inc
xchg
arpl
shlb
cmp
insl
mov
add
jae
sti
push
push
pop
adc
loope
gs
mov
ljmp
jbe
cmp
and
pop
mov
int3
mov
push
loope
gs
fsts
mov
hlt
test
fs
pop
pop
in
iret
loope
inc
add
insl
mov
sbb
out
cmp
and
out
pop
push
ret
jae
enter
add
subl
js
imul
aaa
leave
push
cmpsl
mov
mov
and
lock
in
fs
aaa
loope
jp
or
dec
push
imul
push
es
cmp
dec
cmpl
cltd
inc
jae
fcomps
dec
adc
scas
rorb
inc
inc
and
lcall
insb
fwait
or
jns
mov
iret
in
cwtl
lock
aad
jl
add
cli
shrb
clc
cmp
in
cltd
cld
pop
cli
xchg
and
bound
or
pop
cmpsl
jnp
cwtl
jo
xor
shr
dec
sub
mov
incl
lcall
mov
nop
outsl
test
data16
inc
lods
push
dec
ds
push
outsl
stc
mov
pop
xchg
dec
pop
and
cmp
into
inc
mov
pusha
pop
mov
outsb
loop
outsl
push
push
out
dec
and
inc
lds
pushw
xor
pop
mov
loope
adc
mov
jge
push
cmpsb
sti
fcoml
aaa
aad
sub
imul
lods
test
add
scas
cs
inc
insl
mov
pop
inc
inc
stc
mov
iret
lahf
jo
in
imul
ljmp
dec
add
push
xchg
pop
loopne
mov
cltd
js
mov
fwait
and
cmpsb
xchg
cmc
enter
xor
sub
cmc
push
cmpsb
fnstcw
int
mov
adc
mov
shrl
fcoms
out
mov
roll
outsl
shll
inc
mov
jecxz
jae
loope
mov
xor
or
lret
aas
call
mov
ds
ljmp
iret
add
and
pop
inc
sub
and
dec
cmpsb
inc
jbe
and
movb
mov
fisttps
shrb
push
mov
inc
call
ja
testb
rcl
sub
stc
sbb
xchg
test
outsb
test
or
cwtl
cmp
hlt
or
xor
mov
mov
and
jbe
out
jne
pop
xor
push
test
sahf
jns
mov
in
movsb
sbb
add
ljmp
int
lds
hlt
dec
cmp
pop
push
mov
js
sub
adc
cltd
lcall
pop
in
mov
outsb
sbb
mov
mov
xor
add
xchg
test
fsubrl
movsb
jae
ret
cwtl
in
xor
loopne
xchg
xchg
out
push
out
mov
fistl
pop
ret
mov
xchg
xor
xchg
sub
jno
iret
push
mov
outsb
dec
push
adc
inc
clc
mov
xor
arpl
cmp
pop
or
sbb
jb
inc
lcall
push
stos
pop
test
mov
add
fwait
addb
inc
jle
enter
stos
or
ret
xchg
or
andb
adc
fidivl
pop
enter
test
pop
into
std
dec
mov
cld
js
les
pop
out
sbb
shl
out
sbb
xor
ss
push
pushf
add
xor
insl
xchg
cs
cmp
jo
test
mov
xchg
sub
dec
fnstsw
jb
dec
mov
movsb
mov
cmp
jecxz
dec
push
mov
scas
mov
mov
insb
int3
out
dec
leave
iret
sub
in
fwait
lahf
filds
aam
mov
mov
aam
and
lahf
dec
cmp
pop
cmpsl
mov
jl
pop
pop
out
test
pop
xor
xor
ficomps
in
sbb
in
mov
add
int3
aam
imul
gs
insl
loop
pop
int
adc
cmp
aas
and
add
inc
imulb
mov
and
dec
xor
jmp
je
mov
or
mov
cmp
scas
out
pop
or
mov
shl
arpl
adc
fldt
adc
into
add
hlt
addr16
inc
sbb
jb
mov
inc
cmpsl
mov
xor
fs
and
sarb
adc
push
add
stc
mov
fiadds
mov
push
inc
pop
sbb
ret
sti
dec
in
sarb
add
sbbl
dec
mov
cmp
imul
jecxz
cmpsl
aam
mov
or
dec
sbb
in
pop
incl
out
and
fidivs
js
push
pop
add
lds
jle
daa
add
add
mov
ljmp
cmp
mov
inc
jbe
idiv
mov
icebp
ds
cmpsl
add
push
push
cltd
out
in
repz
les
mov
les
jb
mov
movsb
sub
cltd
mov
push
jmp
fistps
aam
cmpb
sbb
push
mov
inc
cmp
push
sbb
cmp
sub
cmp
fwait
add
test
ja
or
jb
xor
xchg
out
jmp
movsl
fidivl
mov
mov
aad
arpl
cltd
push
int
and
sbb
or
jmp
pop
fsubrl
out
mov
jno
lcall
ds
xchg
add
loopne
dec
es
in
lret
lret
mov
repnz
les
jo
sbb
in
mov
xchg
and
pop
int3
sbb
inc
scas
push
sbb
repz
mov
sub
inc
cmp
push
jne
fisubrl
in
mov
hlt
pop
sub
outsb
xor
push
adc
sbb
leave
jecxz
or
fidivl
inc
and
nop
mov
test
movsl
cwtl
dec
push
nop
push
dec
mov
push
jnp
add
lea
mov
mov
in
shrb
jns
ss
dec
aam
dec
sbb
and
movsl
xor
mov
cld
negb
mov
inc
and
dec
cltd
inc
sbb
jmp
dec
pop
cmpsb
inc
adc
mov
xor
sbb
int
dec
jno
jge
loope
sbb
adc
xlat
int3
out
fstp
aad
push
hlt
mov
mov
inc
mov
scas
xchg
in
lcall
xchg
or
inc
mov
inc
jae
mov
imul
add
or
out
leave
gs
mov
das
mov
sub
xlat
andb
js
insl
mov
push
fptan
int
jecxz
sub
sar
push
vcvtpd2psy
lahf
push
gs
movsl
stc
outsb
cmp
lods
clc
das
in
dec
sbb
and
subb
add
xor
cwtl
ret
jge
ror
xor
cmp
dec
cwtl
push
fcompl
imul
js
nop
enter
or
hlt
ds
push
mov
sahf
loop
bnd
jns
inc
mov
fisubrl
arpl
cltd
ss
into
aam
subb
cmpb
cmpsl
insl
push
cmp
in
jecxz
lret
xchg
icebp
seto
fwait
dec
pop
subl
stc
mov
arpl
sbb
testl
xlat
data16
and
jl
ret
loop
pop
testl
push
mov
fldenv
pop
imul
repz
cld
fbstp
test
pushf
pop
in
ljmp
xchg
fidivrs
mov
shl
or
out
repnz
les
jg
adc
mov
xchg
or
imul
xchg
pop
mov
imul
cmp
mov
adc
mov
scas
add
je
mov
test
iret
xor
push
movsb
adc
and
pop
jbe
imul
pop
aas
push
pop
aas
mov
test
arpl
sbb
inc
push
pop
dec
dec
rorl
mov
insb
shr
cld
pushf
mov
icebp
cmc
push
jbe
sub
cmpl
mov
imul
shl
imul
out
sub
cmp
jmp
jmp
shlb
xlat
sub
push
push
lock
subl
loop
rcrb
push
loopne
cmp
es
adc
push
aad
jne
data16
pop
jno
push
jns
ret
cmc
lcall
lods
push
push
cld
push
stos
imul
fldenv
cmc
pop
cmp
adc
rolb
push
jle
mov
cmp
bound
fsubrp
xchg
push
mov
scas
fistl
test
jbe
stos
xchg
shll
pop
mov
mov
repnz
mov
jmp
sub
in
dec
dec
adc
pop
sub
mov
ret
and
add
loop
in
lods
out
push
mov
cltd
dec
adc
and
xor
pop
icebp
inc
jl
mov
jp
xor
mov
sbb
das
sbb
cld
mov
insl
push
dec
lret
fadds
dec
mov
sbb
jnp
mov
mov
pop
or
pop
out
repz
add
testb
push
data16
xchg
mov
mov
daa
inc
sub
mov
fdivrs
cwtl
jae
mov
sbb
outsb
pop
mov
test
adc
push
push
movsb
jl
test
rcrb
out
loope
mov
add
ljmp
cs
adc
jb
imul
loopne
sahf
mov
add
movsb
movsb
xor
dec
lcall
movsb
jne
movsb
popf
sti
inc
adc
icebp
xchg
cmpsb
idivb
inc
lods
xor
test
cld
mov
and
add
out
push
inc
and
cmc
pushf
pusha
push
aad
iret
rcr
pop
xor
add
mov
and
rorb
xor
gs
std
xchg
mov
xchg
mov
fisubrl
repz
mov
mov
mov
lock
xor
inc
inc
jne
movsb
mov
add
add
les
dec
shrb
jmp
adc
popf
test
dec
aam
and
add
jg
mov
lods
rorb
cmc
xor
jne
fs
lcall
sbbl
jno
in
movsb
mov
jne
orl
jo
xchg
jo
adc
xchg
lret
dec
xchg
mov
dec
sub
popa
pop
jo
sub
loopne
push
lret
imul
filds
mov
lcall
pop
das
bound
mov
mov
lahf
call
arpl
xchg
rcll
popa
mov
nop
add
les
aas
inc
mov
out
jbe
inc
xchg
sub
fwait
or
xchg
dec
sbb
jns
leave
test
and
dec
fsubr
pop
adc
add
out
pop
mov
int3
nop
inc
cmp
mov
test
popa
movsb
hlt
pop
jns
lock
out
ret
jns
dec
push
pop
jbe
movsl
jg
cmp
cmp
and
icebp
dec
sbb
sti
ds
movsl
adc
fiadds
stos
repz
es
fdivrp
inc
cli
ja
pop
std
fstpt
arpl
out
fisubrl
add
xchg
jb
mov
push
inc
pop
rclb
xchg
pop
nop
out
xor
mov
inc
jp
lahf
out
pop
test
xchg
leave
imul
cmp
mov
jne
mov
fcoml
jns
sbb
dec
sub
das
xorl
out
lods
es
jns
inc
fs
pop
cli
insb
xor
test
sbb
stos
sahf
pop
stos
mov
jecxz
mov
sub
or
inc
inc
lea
push
sub
cwtl
pop
pop
sub
sub
call
xor
adc
ret
sti
aam
lock
cwtl
push
out
movsl
cmp
inc
hlt
inc
call
jns
into
imul
out
mov
xor
push
movsb
cmp
jmp
push
sbb
inc
lods
je
jno
bnd
idivl
cmpsl
push
jae
mov
jmp
add
cmp
mov
and
or
xchg
xchg
or
in
sti
sbb
je
pushf
cmpsb
sub
je
jns
add
sti
jmp
lahf
xor
aaa
push
adc
add
movsl
arpl
test
push
shlb
loope
jae
cmovs
adc
sti
sub
push
xchg
hlt
flds
cmpsb
mov
mov
daa
test
cs
out
inc
mov
sub
ret
push
aaa
xor
fistps
adc
lret
loope
test
fwait
lahf
mov
mov
stos
add
add
mov
push
ret
cmp
shrl
ja
jbe
insl
xchg
inc
sub
push
fcoms
loop
jb
mov
lcall
push
inc
push
ret
arpl
scas
adc
sbb
ljmp
mov
push
cmp
sarl
xor
shl
push
xlat
mov
lcall
xchg
shrb
xchg
jg
int3
add
repz
insb
sbb
xor
push
jmp
sbb
jmp
inc
mov
push
mov
js
jle
mov
xchg
pop
mov
pop
push
xlat
pop
repnz
into
push
push
mov
sub
out
or
or
push
or
in
sub
mov
mov
pop
push
pop
xor
mov
sbb
mov
ja
loopew
decl
fwait
shlb
xorl
sbb
movsl
and
cld
frstor
add
lea
lea
sub
js
xlat
cltd
jbe
inc
xchg
in
stos
mov
dec
push
clc
add
lcall
inc
cmp
hlt
loopne
sbb
mov
clc
bound
ds
idiv
idivb
aad
repnz
cmpsb
sahf
je
imul
inc
aam
hlt
inc
gs
movsb
js
test
adc
sub
pop
test
fldcw
insl
das
inc
jp
fisttpll
es
inc
dec
push
mov
sub
addr16
enter
outsb
aam
push
xchg
arpl
test
sbb
jo
or
push
in
mov
aas
iret
sub
rclb
popa
add
sbb
push
movsb
roll
outsb
sub
dec
ret
jno
mov
stos
es
jl
mov
test
ds
jne
subl
lret
shlb
xchg
daa
mov
inc
movsl
in
jbe
ja
jecxz
cmp
mov
push
cmp
sub
push
int3
xchg
pop
pusha
add
push
dec
fnstenv
push
lcall
cmpsb
mov
test
popf
out
out
jle
in
cmc
repnz
mov
dec
jge
pushf
jae
ret
or
lods
stc
cmp
cmc
cmp
adc
jno
xlat
mov
push
jp
xor
loope
fs
sbb
incb
insw
adc
hlt
jp
enter
negl
rcrl
leave
sti
ds
mov
adc
xorb
add
or
xchg
jno
lahf
popa
sub
hlt
fld
insl
jmp
lods
pop
shll
cli
aaa
sub
adc
or
loope
mov
or
int3
shl
xor
push
cs
xchg
loopne
loop
clc
lods
cmp
mov
imul
mov
fstps
sbb
arpl
jne
pop
incl
cmp
adc
test
jbe
or
mov
mull
test
inc
dec
add
push
mov
add
adc
in
cmp
leave
cmpsb
and
pushf
adc
ds
push
sub
aam
in
pop
inc
or
mov
cmc
cmc
lahf
mov
push
scas
or
xchg
aad
sub
rolb
clc
adc
shll
pop
fstl
imul
add
subl
mov
fdivrp
test
test
cld
aaa
jbe
clc
mov
sbb
sub
mov
sub
ret
out
jno
pop
repnz
push
jb
shlb
jmp
mov
jno
and
cmp
push
test
test
fs
xchg
jge
mov
inc
cmp
dec
fdiv
push
inc
jo
arpl
lret
jne
in
jmp
jg
fsts
cmp
sahf
les
inc
daa
sub
lret
jecxz
mov
sub
jp
pop
xor
loope
stos
add
dec
or
adc
xchg
pop
imul
repnz
cmp
arpl
sbb
mov
scas
fwait
push
insl
pop
in
jle
mov
test
sbb
cwtl
mov
add
fbld
sarb
fcmovnbe
mov
mov
dec
out
lret
xchg
lock
out
pop
repz
fnstsw
and
loopne
negb
ficoml
dec
cmp
sub
jbe
pop
mov
test
xor
ret
and
adc
pop
lea
jbe
lea
repz
push
cmp
push
jb
insb
rol
pop
inc
inc
inc
xchg
fdivl
loopne
xchg
in
push
popf
pop
rclb
inc
aam
jge
push
inc
notb
jbe
push
push
push
ljmp
out
or
dec
pop
cld
xor
dec
inc
ret
dec
mov
movsl
lea
out
ret
stos
push
test
push
mov
push
xor
pop
jge
mov
inc
jmp
jecxz
popa
pop
push
xor
mov
add
sub
jl
and
fnstsw
lcall
and
mov
repz
lret
scas
sub
aam
cmp
cmp
jnp
and
enter
or
mov
cmp
stos
cmp
dec
lods
mov
push
xchg
sbb
pop
and
pop
test
pop
sub
icebp
mov
imul
xchg
cmp
repz
or
faddl
xchg
xchg
je
pop
jo
push
dec
inc
inc
add
cmc
ret
jle
dec
pop
enter
mov
mov
in
pop
stc
repnz
pop
int
xor
popa
pop
imul
into
ret
and
jnp
loopne
cmp
inc
loopne
push
xor
inc
negl
aaa
adc
lcall
mov
adc
xchg
dec
bound
mov
jmp
mov
inc
xlat
xor
dec
or
jnp
push
jae
push
cmp
xrelease
aaa
dec
jp
iret
dec
iret
lret
and
lea
xchg
iret
sub
ljmp
mov
mov
ret
adcb
xchg
bound
adc
imul
inc
pop
rol
push
add
mov
daa
out
jl
mov
mov
or
sar
inc
enter
test
mov
stc
cmpsl
mov
cmp
adc
mov
in
or
lock
xor
lret
push
inc
loopne
sub
or
push
push
hlt
hlt
dec
sbb
cmp
lret
pop
jmp
push
dec
in
xor
sahf
movsb
pop
jmp
pushf
sbb
sti
xor
xchg
cltd
dec
inc
dec
imul
and
add
mov
out
sarb
sbb
inc
add
mov
fs
cmp
mov
sub
imul
divl
out
mov
ja
add
dec
push
pop
andb
and
subb
adc
icebp
ret
scas
into
sahf
rcll
mull
mov
lds
jno
sbb
mov
hlt
and
sub
xor
dec
mov
jae
xor
mov
stos
loop
add
out
loop
imul
jecxz
cmp
cld
cmp
add
es
mov
pop
adc
icebp
ljmp
aaa
not
je
imul
out
scas
sub
addl
mov
jb
xchg
out
xchg
lds
pop
cli
in
mov
ds
fcoml
xor
sub
divb
fwait
addl
xchg
ljmp
dec
lcall
inc
inc
paddusw
hlt
push
sbb
hlt
lea
and
and
jge
mov
mov
fistpl
xor
push
sbb
dec
addr16
pop
out
cli
test
or
push
dec
cld
add
jl
jp
push
mov
and
loop
fs
in
cmpsb
push
or
pop
aad
leave
addr16
out
inc
fsincos
inc
xor
inc
or
out
push
add
fmulp
imul
cmp
inc
mov
or
add
pop
out
pop
pushf
ds
lcall
arpl
into
pop
and
add
mov
or
popf
dec
sub
fistpl
add
jmp
repz
mov
pop
mov
mov
add
mov
inc
sub
sbb
add
sarb
xor
sub
inc
and
mov
and
clc
enter
push
dec
sub
jae
mov
cmp
pusha
pop
ja
mov
jecxz
mov
sahf
push
and
sbb
jg
jb
push
call
or
xor
or
je
add
mov
ret
mov
ret
aam
cmpsb
lods
imulb
pop
push
inc
in
cli
add
pusha
sub
ret
mov
xor
lods
mov
fwait
or
xchg
or
lods
cmp
cli
out
fadd
inc
in
rorb
js
daa
cmp
mov
mov
xchg
jl
push
cmovne
lahf
mov
pop
xchg
xchg
mov
in
dec
pop
jmp
xchg
inc
xchg
rcll
mov
jle
inc
aaa
jp
rclb
scas
push
jmp
add
xchg
mov
sub
cmp
sbb
notb
stc
sbb
ja
xor
rol
ret
xchg
lahf
mov
mov
pusha
and
push
movsb
or
pop
push
cmpsb
cld
sbb
xchg
insl
pop
jb
cld
pop
roll
leave
mov
mov
out
cli
ljmp
xor
lcall
xor
das
imul
fistpl
mov
push
push
lahf
push
into
and
mov
cmpl
test
das
cld
and
inc
or
enter
subb
add
outsl
pop
dec
pop
bound
out
pop
cltd
int3
sub
push
bound
sti
mov
stos
dec
and
jno
lret
mov
ret
sbb
push
pop
pop
orl
adcl
cmpsb
jo
shrb
mov
mov
mov
and
jl
test
scas
in
out
or
orl
mov
cmpsb
hlt
or
mov
mov
pop
sbb
mov
mov
xchg
std
in
fwait
sarb
aaa
jl
xor
mov
cmp
add
sbb
call
jp
xchg
push
adc
fsts
test
jne
or
sbb
sbb
xchg
xchg
mov
mov
stos
aaa
scas
xor
mov
lods
ljmp
mov
in
mov
mov
xchg
lods
mov
pop
sahf
lock
sbb
inc
mov
repz
inc
inc
inc
xlat
and
jns
push
cmp
pop
inc
fs
sbb
push
or
adc
mov
pop
fcompl
stos
lcall
in
pop
or
imul
ljmp
les
mov
aaa
bound
add
push
into
xor
das
inc
mov
mov
hlt
out
aad
and
shrb
push
sahf
jecxz
sbb
add
popa
aas
hlt
ret
add
popf
pop
fmul
mov
insb
je
and
pusha
xlat
out
pop
add
jl
scas
into
fwait
pop
mov
sbb
xchg
mov
mov
dec
ds
lret
jno
in
add
sbb
xchg
mov
pcmpeqb
outsb
out
inc
leave
in
and
insb
rorl
and
js
out
cmp
mov
and
jecxz
fdivl
xor
lods
pusha
loopne
ror
lahf
and
outsb
or
mov
movsl
or
xchg
je,pt
push
mov
stos
ja
adc
inc
ds
rolb
daa
outsb
mov
fst
aad
inc
cmpsb
mov
pop
adc
lret
clc
mov
in
pusha
sbb
adc
xchg
leave
lret
int
cmc
or
lahf
dec
sub
mov
sub
les
dec
lds
or
scas
xor
sbb
mov
cwtl
movsb
cwtl
sub
xchg
jno
add
jae
shlb
mov
loope
lods
lds
push
rsqrtps
lret
cmpl
lahf
sub
ret
jmp
pop
xor
mov
add
cmp
pop
dec
lea
cmpsl
bound
mov
push
xor
and
in
push
outsb
push
stos
mov
nop
push
adc
lods
xchg
jl
push
push
push
mov
test
sub
inc
xchg
adc
mov
imull
pushf
xchg
mov
inc
jbe
test
insl
and
inc
in
mov
xchg
xchg
and
daa
and
sub
aam
mulb
jl
sub
jl
mov
or
lahf
dec
frstor
ss
jecxz
inc
sarl
cmp
pop
jne
xchg
test
clc
scas
cmpsb
push
int
cwtl
aaa
into
xor
bound
or
jecxz
aad
add
jbe
in
xor
jbe
sbb
jbe
loop
fldt
push
sbb
clc
jmp
add
jmp
jo
clc
mov
fnstsw
dec
rcrl
fdivrl
popf
sbbl
lods
mov
jns
fsubrl
lret
lods
jge
inc
addb
xchg
push
xorb
push
sub
sub
lret
fs
jp
or
xchg
arpl
out
dec
push
out
jl
sti
cmp
or
pop
shlb
mov
jle
and
mov
xor
ds
in
cmp
jg
mov
scas
add
push
sub
rolb
int
push
addr16
xor
jo
mov
int
shll
arpl
ss
aam
int
xchg
gs
and
inc
sbb
jge
imul
aaa
mov
ds
inc
sbb
or
sub
ljmp
jl
fsubrs
loopne
retw
pop
clc
mov
mov
aas
inc
mov
rolb
mov
mov
cmpl
sbb
sarl
mov
mov
shll
dec
cmpsb
sti
ljmp
add
dec
aam
jno
dec
jbe
mov
push
mull
fists
pop
andl
cmpsl
in
mov
push
fadds
stos
xor
sub
pop
out
pop
xor
call
or
pop
call
mov
popf
jno
nop
xorb
push
and
rcll
cmp
or
jp
pop
sar
loope
xor
jmp
icebp
adc
push
mov
jl
pop
xchg
jg
outsl
xchg
popa
mov
ret
lock
test
adc
adc
into
dec
je
mov
iret
iret
bound
mov
push
pushl
sbb
repnz
cwtl
sub
xor
ret
dec
pop
push
pop
sub
shrb
out
inc
jmp
sbb
fs
out
in
jmp
mov
mov
add
add
std
cwtl
or
mov
add
adc
js
jns
outsl
lea
shll
sub
inc
inc
pop
jecxz
jle
ss
push
mov
lret
sahf
mov
ret
xchg
imul
loope
enter
leave
sbb
jne
rorb
pop
shl
cmpsl
or
loop
pushf
xchg
xor
mov
sub
lods
add
pop
loop
xchg
idivl
ss
inc
ja
jmp
loopne
std
add
sub
call
pop
sbb
and
and
pop
ffree
mov
imul
push
cmp
mov
mov
cmc
cltd
int
jns
test
das
or
test
fistpl
xchg
daa
stc
fidivrs
dec
out
xlat
and
in
mov
inc
sbb
xchg
sbb
sbbl
cs
sahf
jge
fs
cmp
or
inc
jb
testl
loop
cmpl
cltd
inc
fstl
push
pop
fmull
clc
stos
clc
into
hlt
call
data16
enter
mov
cmp
pop
ret
cmp
lods
aam
outsb
ret
shlb
std
outsb
out
js
mov
out
push
push
adc
out
xor
sub
push
or
push
or
mov
lcall
sub
mov
fsubrl
sub
adc
ljmp
sbbl
dec
and
sub
inc
adc
inc
or
lret
fstpl
sub
or
jne
xchg
dec
add
push
je
cld
xchg
bswap
add
cmp
ret
mov
aaa
mov
push
mov
imul
fnstenv
inc
movsl
out
push
ret
popa
mov
add
lods
push
test
adc
js
push
sbb
adc
repz
jae
dec
movsl
push
adc
xor
popf
imul
mov
lcall
data16
fsubl
movsb
sbb
mov
cld
mov
lock
add
mov
addr16
test
fucomp
loopne
call
fstps
test
in
jns
sbb
xchg
aas
imul
jb
pop
inc
scas
pop
int3
mov
xchg
pop
cmp
mov
or
arpl
leave
or
call
mov
pop
cmpsl
in
mov
stc
cld
mov
jb
loope
repz
cs
xchg
dec
movsl
mov
int
outsl
and
push
mov
shlb
pavgw
pop
sub
dec
mov
data16
pop
lahf
cmc
or
out
pop
lcall
lds
test
cmp
mov
shrl
pusha
pop
cs
jne
and
cmpsb
les
jmp
insb
jl
push
or
inc
loopne
xor
add
mov
loope
inc
sub
adc
cli
jb
leave
ret
outsb
cmp
mov
xchg
cmp
fisubrl
cltd
rorb
xchg
jl
ss
daa
adc
outsb
cmpb
and
fsubs
lret
fdiv
xlat
mov
mov
or
aad
fstpt
js
push
fcomps
divl
lock
js
push
repz
ficomps
repz
jae
insb
add
stos
sahf
push
popa
inc
dec
push
rcrb
jecxz
fdivr
mov
call
jmp
fldenv
sbbb
sahf
jne
add
pop
mov
pop
pop
movsl
xor
fildl
clc
push
and
nop
lcall
cmp
jb
add
sbb
mov
roll
push
sub
inc
dec
mov
inc
xchg
fildll
fcomi
mov
lea
and
test
xchg
mov
je
dec
mov
xchg
and
xor
addl
push
inc
in
dec
scas
push
or
in
lds
ret
movsl
enter
pop
cld
xchg
and
dec
xor
push
nop
cmpsb
lret
mov
ret
out
aad
adc
add
xor
and
xchg
imul
cmpsb
sbb
jns
lcall
push
sub
pushw
jp
sub
pop
sub
pop
dec
andb
fwait
push
sti
xor
cmpsb
pop
pop
hlt
sub
leave
mov
cmp
enter
call
fsts
idivb
andl
or
pop
out
movb
adc
cmp
mov
out
lret
sub
mov
add
cmp
mov
stos
rep
or
push
jp
movsl
insb
outsb
pop
movsl
lds
push
and
insl
pop
push
xorb
loop
xor
ret
nop
adc
adc
mov
adc
cmp
cmp
xchg
lret
test
push
fcompl
mov
bnd
pop
jo
arpl
out
mov
call
mov
pmulhw
add
push
out
test
or
adc
iret
stos
add
xchg
sub
iret
or
mov
adc
dec
jg
push
sbb
add
out
mov
mov
jmp
xchg
sub
mov
fidivs
outsb
xor
sbb
or
push
dec
enter
pop
cmpl
insl
sbb
cmp
lods
and
add
push
adc
xor
or
iret
test
ds
jp
fs
xor
nop
fnstenv
sub
inc
push
ficoml
insb
sub
dec
pop
shrl
xor
test
mov
int
jmp
popf
xor
sub
adc
call
fsubl
add
cmp
mov
rcll
loopne
sub
idiv
hlt
push
jbe
jb
test
arpl
xlat
enter
jne
add
cs
pusha
repnz
mov
in
mov
and
cs
inc
lret
pop
lcall
pop
mov
cmp
hlt
arpl
lock
and
mov
xchg
adc
mov
rorb
xor
dec
jbe
add
jmp
gs
mov
sti
and
mov
xchg
jp
enter
inc
in
fdivl
stos
test
rcrb
ret
shll
mov
ss
cli
mov
jl,pn
arpl
or
stc
mov
sbb
or
mov
dec
mov
xchg
cmp
das
pop
orb
lcall
add
scas
outsb
shl
push
ja
dec
mov
inc
sbb
out
cmpl
das
jae
out
loope
movsb
inc
mov
cli
in
mov
jno
pop
jb
pop
jo
or
imul
xor
scas
inc
aad
in
sub
xchg
jp
lea
add
gs
rclb
adc
mov
and
fdivp
inc
pop
add
call
add
pop
clc
pop
mov
xorb
shll
pushf
pop
pop
into
into
cmpsl
sub
addr16
mov
xchg
movsl
mov
imul
mov
ret
cmp
mov
rorb
dec
or
dec
fmul
ret
jle
in
out
fs
loope
rolb
cmpsl
push
jno
lds
in
cld
mov
out
add
mov
pmulhuw
popf
add
js
lods
ret
aaa
bound
pop
popa
xchg
sub
cmp
push
pop
pushf
lahf
mov
sbb
push
lods
push
and
pushf
cmpsb
cmpsl
fcoml
imul
ficomps
sbb
pop
test
xor
int
cmpsl
push
test
adc
jne
inc
bound
mov
cmpsl
daa
sub
or
fidivrl
lcall
or
je
pop
jp
dec
lret
cltd
in
sbb
scas
fwait
push
and
cltd
mov
iret
xchg
movsl
add
dec
mov
imul
popa
imul
movsl
test
leave
stc
inc
sarl
xchg
dec
cmp
js
add
cmpsb
mov
loop
lea
mulb
jne
add
pop
push
sbb
dec
test
sub
cmp
jo
xchg
jo
cmc
flds
fucom
repz
jb
pop
xor
shr
pop
stos
xchg
and
inc
leave
in
daa
push
sbb
push
xor
lret
testl
mov
inc
and
jecxz
insb
jl
nop
mov
xlat
mov
mov
inc
addr16
sub
bound
test
fs
lods
in
jo
sbb
jge
popa
cld
enter
lea
dec
lods
in
push
mov
sbb
popa
jmp
pop
or
outsl
push
stc
int3
shl
lods
je
mov
push
push
cmc
test
push
cmpsb
outsb
pop
sbb
pop
or
movsb
sub
push
inc
mov
mov
cmp
dec
mov
lahf
and
cmp
fnstcw
inc
pushf
jge
push
cmpsl
insl
xchg
test
jge
jmp
lcall
rolb
sbb
pop
das
jmp
sub
inc
outsl
int3
fdivl
fcompl
lahf
cmp
mov
mov
and
mov
lea
fstps
mov
add
sub
js
pop
jmp
orb
test
jae
xor
add
mov
mov
xchg
mov
data16
cld
inc
popa
jbe
test
stos
adc
gs
mov
lods
arpl
xchg
loopne
mov
pop
mov
mov
inc
scas
cmpsl
rcll
icebp
or
outsl
inc
add
jle
and
cmc
in
push
add
inc
push
hlt
mov
cltd
sbb
dec
rcrb
sbb
mov
push
jecxz
add
jo
cmp
mov
adc
xchg
aaa
add
aad
sub
jle
subb
mov
or
add
jmp
cli
xchg
jne
out
out
ja
out
aam
out
adc
xor
jbe
ds
mov
sub
xchg
loope
cs
and
ljmp
dec
das
inc
jbe
push
xchg
cwtl
mov
jne
outsb
mov
sub
push
or
pop
xor
pop
popf
shlb
sub
loop
dec
imul
dec
jle
mov
addl
push
inc
stos
fsubr
movsw
or
mov
push
add
sahf
sub
jg
jns
cmp
fisubs
xchg
movsl
mov
popf
mov
or
inc
jmp
je
xor
icebp
jmp
cmp
mul
rcl
aam
or
cmpsb
orl
gs
dec
mov
adc
adc
ja
mov
mov
stos
inc
jge
sbb
dec
mov
add
pushl
rclb
ret
out
xchg
sub
jecxz
xchg
mov
adcl
arpl
imul
fisttpll
jle
mov
shlb
in
lock
xor
jp
mov
test
inc
enter
xchg
lock
jo
loope
popf
push
inc
xchg
addr16
mov
push
xor
cmc
loop
mov
gs
dec
fwait
sub
add
inc
jb
xor
xor
push
mov
ficoms
mov
test
sbb
cmp
cmp
mov
sti
adc
lcall
pushf
ja
jecxz
push
xchg
insl
pop
fmul
out
cmpsb
scas
inc
cmp
push
lods
jmp
lcall
push
mov
dec
add
mov
inc
rol
test
push
add
ja
mov
dec
add
mov
cmp
sti
mov
mov
fists
lds
pop
add
xor
jo
and
and
mov
inc
xchg
js
lcallw
and
push
or
mov
and
sbb
cli
loopne
loopne
movsl
pusha
and
xchg
xlat
repz
test
das
add
fs
dec
dec
std
addr16
nop
pushf
cmp
lahf
pop
inc
jns
xchg
xor
xchg
mov
bound
mov
push
dec
mov
cld
mov
mov
jno
jmp
lock
aas
scas
jge
pop
push
sbb
dec
filds
fistps
sub
cmc
loope
imul
push
adc
add
xchg
cld
inc
mov
out
push
mov
mov
je
in
in
add
lahf
movsl
and
popf
loopne
sbb
fbstp
pop
dec
in
stos
sahf
lds
incl
arpl
leave
aad
xlat
insl
pop
call
sbb
pusha
popf
jno
fmul
mov
mov
mov
in
or
in
xchg
or
dec
imull
mov
es
adc
adc
pop
adc
shll
stos
add
add
jmp
imul
inc
add
rcrl
push
jno
cmp
and
sbb
test
pop
ljmp
add
mov
popa
aam
pop
and
movsb
outsl
adc
xor
ss
pop
inc
enter
and
lret
in
fstl
in
es
pop
sub
notl
cwtl
add
cld
movl
sbb
outsb
jb
xchg
add
sub
mov
cmp
mov
inc
cltd
mov
inc
leave
sub
iret
ds
push
or
sbb
xchg
jmp
xchg
pop
dec
push
jne
sub
adc
sti
jecxz
adc
mov
pusha
mov
mov
mov
cmp
add
mov
mov
lds
insl
sub
mov
and
sti
cmp
add
xorl
or
vmovntpd
sarb
mov
mov
lahf
lea
sbb
jg
data16
sub
jge
jp
rcrl
dec
decb
mov
xor
or
into
addr16
mov
xchg
ds
call
into
and
fcoms
orb
ret
cmp
mov
jmp
insl
push
mull
outsb
jle
jl
ret
fwait
imul
and
pop
stos
aad
inc
push
fbstp
jnp
scas
mov
aaa
test
bound
inc
scas
ja
gs
repz
fwait
jecxz
icebp
add
mov
std
mov
xor
pushf
push
idivl
jo
leave
mov
dec
sub
outsb
shrl
fwait
fs
aas
xor
pusha
rcr
pusha
pop
lcall
push
cmpsb
idivb
repz
in
mov
xchg
cli
lock
pushf
bound
or
xchg
sarb
ret
mov
hlt
repnz
or
les
insb
test
jne
fiadds
cmp
out
push
icebp
adc
and
cli
inc
ds
lds
in
mov
pop
cmpsl
sbb
mov
adc
les
lods
loope
mov
sbb
xchg
lds
jl
movsb
sub
jmp
xor
daa
or
pop
jns
push
iret
dec
orb
adc
dec
mov
insb
dec
lahf
sbb
andb
and
cmp
shl
lods
mov
into
sub
xor
aas
rolb
in
jae
xchg
dec
loop
jecxz
ljmp
scas
jb
ret
add
pop
push
push
mov
xor
std
inc
into
jg
les
orb
mov
lock
xor
fistpl
pop
mov
inc
dec
cmpsl
lock
push
int3
insl
inc
and
xchg
and
mov
add
xor
pop
lcall
push
shrl
out
jns
or
pop
lret
out
adc
jge
pop
pop
xchg
mov
xchg
sti
jb
ret
mov
out
pop
jne
cmp
stos
fimuls
cmp
stc
aad
jg
sbb
loopne
xor
and
jmp
jg
fwait
bound
cmp
push
sahf
test
les
mov
pusha
inc
jo
test
sub
icebp
cmpsb
mov
lret
xchg
out
dec
sub
clc
mov
push
ret
andl
in
cmpsl
ljmp
dec
ret
ds
mov
cmp
hlt
leave
stos
push
push
cltd
je
mov
mov
out
inc
jg
cmp
jg
mov
add
icebp
arpl
and
repnz
jbe
xchg
lret
mov
insl
xor
push
cmp
fstpt
mov
push
outsb
mov
mov
inc
test
cwtl
add
in
out
popf
jb
push
adc
pop
inc
bnd
jecxz
sub
adc
loopne
adc
testb
call
in
movsb
xchg
xchg
test
je
lds
and
mov
xchg
ja
mov
xchg
ffreep
or
sahf
int
stos
sbb
outsb
rolb
cmp
sub
mov
shll
cmc
addr16
call
pop
pop
xchg
jnp
jg
addb
inc
push
inc
fdivl
stos
pop
jecxz
xchg
and
filds
stc
jne
pop
aad
mov
or
jmp
and
jp
push
in
jge
fdivs
fstps
leave
call
pushf
in
inc
cmpsb
pushf
dec
mov
aad
ljmp
lret
scas
fidivl
roll
test
or
xlat
movsl
nop
cmp
xchg
loop
popf
jns
pusha
xor
loopne
cmp
divb
sub
add
iret
xchg
mov
sahf
jne
xchg
aas
ror
add
movsb
adc
repnz
aam
mov
in
xor
xchg
int
call
lea
mov
mov
js
ret
pushf
push
jmpw
stos
and
in
notb
push
mov
imul
sub
add
loop
jecxz
popf
lahf
mov
sub
jmp
mov
insb
les
lock
sbbl
mov
pop
ja
int3
sti
out
add
test
out
push
add
lret
das
mov
out
incl
push
mov
adcb
gs
fs
add
cmp
in
xchg
and
add
shr
sti
cmpsl
xchg
cmp
mov
cmp
repnz
fsubrs
gs
pop
jo
add
aaa
inc
fldl
mov
dec
mov
popl
mov
xlat
or
fwait
mov
addr16
jbe
push
or
dec
add
divl
testb
push
fstps
fsubs
fcompl
cmc
adc
pop
inc
loop
inc
scas
adc
add
out
jle
sbb
mov
cmpsl
outsb
lret
sbb
dec
xchg
test
mov
pshufw
cltd
sti
or
xlat
push
lret
mov
idivl
pop
mov
jae
jae
dec
mov
xchg
mov
jns
fiadds
inc
mov
mov
jmp
dec
rcrl
inc
insb
jp
insl
xchg
nop
sahf
gs
jl
inc
jae
fnstenv
scas
iret
xor
negl
push
inc
in
pop
fxch
mov
sbb
xchg
sbb
insl
dec
dec
push
sub
cmp
mul
ljmp
mov
jne
xchg
jmp
bound
mov
xchg
push
mov
jg
sbb
ret
rorb
and
lods
cmp
ljmp
add
lret
inc
push
cmpsl
jle
in
xchg
cmpsl
xorps
push
push
mov
mov
daa
call
aaa
mov
inc
sub
cmp
mov
sbb
sahf
cmp
add
add
jge
add
xchg
es
test
xchg
insl
rcll
aam
js
sub
mov
adc
mov
sbb
push
pop
mov
in
dec
mov
int
int3
mov
rol
loop
xor
mov
sub
pop
daa
push
out
popa
add
mulb
repz
add
cmp
dec
int3
packsswb
imul
cltd
push
mov
aaa
sbb
aad
dec
dec
ds
in
scas
adc
sti
lret
loopne
test
icebp
jne
push
dec
stos
sub
jmp
fwait
xor
pop
dec
dec
dec
mov
lcall
jg
je
arpl
mov
gs
sub
pop
nop
push
push
je
xchg
jmp
and
sti
xor
jg
loop
nop
cmp
or
mov
pop
in
sbb
add
pushf
lret
inc
in
pop
jns
addr16
ja
imul
adc
aad
stos
lahf
mov
into
add
cmpsl
jns
imul
popa
es
jns
xchg
jnp
fcompl
add
loopne
nop
shlb
popf
je
cmp
dec
pop
cmpsl
cmp
jo
jp
lock
nop
cs
jl
mov
pop
mov
stos
jnp
rorb
mov
xchg
cmc
repz
inc
loope
out
sbb
jecxz
add
push
sbb
dec
xor
push
sub
repnz
ds
adc
loope
clc
mov
push
xor
repz
xchg
jb
mov
xlat
test
cmp
dec
sbb
sub
sbb
or
fbld
cmp
ficompl
dec
push
jl
into
daa
ja
or
cmpsl
out
and
adc
les
in
mov
into
imull
xor
insl
and
pop
movsl
ja
mov
mov
ret
push
or
jl
jno
push
leave
push
in
loopne
ja
lods
push
scas
mov
jno
sub
or
frstor
mov
dec
mov
mov
inc
mov
pop
or
repnz
xchg
popa
out
cmp
ret
xchg
add
and
sbb
lret
jp
add
xchg
jg
xchg
arpl
jae
fsubs
mov
in
test
lret
xchg
jg
repz
in
sbb
dec
jo
mov
xchg
dec
sub
cmp
je
ficoml
cmp
les
dec
dec
push
outsb
ljmp
adc
clc
sub
jns
sub
jg
movsb
sub
jmp
repz
lods
pusha
in
jg
cmc
and
mov
cmp
js
mov
movsl
or
inc
or
fcmovbe
insl
in
stc
cmpb
cmp
in
or
inc
mov
sbb
or
scas
pop
or
and
mov
xchg
add
xor
xchg
or
lods
ljmp
inc
ja
movsb
icebp
mov
cmp
or
test
lds
sti
xchg
sahf
push
lods
fwait
sub
insb
xchg
aad
stos
jb
xlat
movsb
push
push
jno
hlt
ret
lea
loope
xchg
mov
mov
or
lret
lret
push
imul
or
data16
dec
adc
and
movsl
sbb
leave
mov
addr16
mov
imull
inc
sbb
ds
pop
and
push
out
pop
inc
xchg
movsb
iret
ror
mov
out
pslld
mov
aad
xchg
mov
jae
inc
mov
aaa
inc
inc
sub
fsubrs
rorl
xchg
sahf
push
lret
fidivrs
roll
cs
xlat
pushf
mov
test
dec
push
out
sbb
notb
push
sbb
std
scas
mov
in
outsb
sbb
push
push
sub
cmp
in
fiadds
fnstsw
sti
jno
sub
xor
inc
das
cmp
cld
jle
imul
out
sbb
mov
ja
cmp
mov
pop
cmpsb
orl
and
dec
scas
fadds
cmp
out
add
inc
inc
leave
pop
dec
call
mov
lods
stos
lea
add
xchg
push
or
test
bound
adc
jmp
mov
jo
push
xchg
movsb
jge
mov
add
insb
sub
mov
xchg
ret
in
mov
xchg
xchg
sub
lods
push
mov
mul
cmc
pop
fs
mov
mov
inc
scas
test
xchg
and
cmp
idivb
outsl
scas
dec
push
adc
lods
ljmp
sbb
push
fucomip
sbb
mov
dec
bound
nop
dec
xor
sub
daa
repnz
mov
aam
push
xor
inc
insb
adc
xor
jle
jle
cmp
pop
jle
mov
mov
mov
cli
cltd
movsb
es
xor
jae
mov
testb
xor
cltd
imul
gs
or
lods
mov
cmpsb
cmp
mov
jbe
fldcw
lret
pushf
mov
jo
in
mov
rcll
scas
aad
mov
fsubrl
fisubrs
cmp
mov
or
maskmovq
mull
pushf
cmc
fs
mov
dec
inc
imul
in
popa
pusha
pop
clc
xchg
xchg
sub
js
xor
jl
insb
shrl
push
adc
sub
add
push
data16
fs
mov
mov
inc
scas
out
add
mov
push
mov
mov
test
or
xchg
mov
loope
mov
filds
int3
dec
mov
push
mov
lea
sbb
sub
pop
add
fldcw
shll
pop
test
in
and
cld
pop
sbb
pop
pop
fstps
cmp
pop
sub
lds
jnp
cmp
stc
leave
shrl
add
or
loope
in
xor
addr16
std
fwait
aas
mov
stc
iret
imul
ljmp
in
arpl
cmp
jg
call
add
jmp
nop
sub
adc
gs
aaa
out
lahf
sub
dec
sahf
jmp
fistps
ret
and
shll
inc
orl
mov
call
inc
push
enter
rcrb
adc
jle
shrb
cld
adc
push
mov
mov
int
push
je
lahf
pop
xor
lea
not
adc
xchg
xor
push
leave
jp
dec
jle
xor
pop
insl
push
stos
call
adc
in
out
ret
mov
arpl
dec
inc
xchg
movhps
lea
sbb
jge
fadd
pusha
loopne
add
sbb
hlt
sub
sub
xor
js
sub
bound
repnz
loopne
repz
movsb
aas
mov
mov
inc
inc
adc
insb
adc
and
fnstenv
imul
add
cli
mov
data16
mov
ret
push
mov
jmp
mov
fnstsw
push
mov
jbe
or
popa
movsb
adc
mov
jecxz
add
lcall
test
ret
xchg
jg
cmp
xor
adc
pop
cmp
cli
arpl
xlat
bound
inc
inc
jp
push
sub
inc
add
dec
mov
xor
icebp
loope
dec
adc
cld
mov
movsl
xchg
leave
icebp
dec
ss
outsb
lea
repz
cltd
aad
mov
mov
jnp
jae
lret
movb
jmp
clc
loop
call
xchg
push
push
movsl
mov
nop
xor
out
fcompl
mov
inc
mov
fnstenv
or
imull
inc
outsl
cli
mov
lret
mov
xlat
cmpsb
jg
outsl
out
mov
pop
pop
in
into
das
testb
hlt
add
fwait
data16
fstps
mov
lods
jo
cmc
out
pop
mov
std
push
jle
lcall
fnstenv
jns
stos
xchg
sbbb
aad
sub
jmp
clc
jno
enter
xchg
roll
sub
fs
mov
stc
bound
and
add
fistpl
movsl
clc
dec
xchg
xor
jg
jae
cmpsb
jbe
leave
outsb
mov
shlb
cwtl
jnp
xor
cmp
call
fs
enter
xor
ret
shrb
lods
adc
sti
jae
xchg
popf
aam
popa
popf
mov
imul
int3
mov
stos
cmp
inc
cmp
mov
mov
aad
mov
ds
mov
mov
xchg
pop
add
lea
rcrl
fwait
iret
je
insb
out
sub
sbb
aad
pop
lods
mov
jl
pusha
mov
adc
lock
xor
push
pop
in
push
jb
jne
cmpsb
fadd
fs
into
xor
imul
lock
subl
jo
lods
mov
xchg
leave
inc
or
sub
sub
xchg
psraw
inc
imul
add
test
sbb
aam
push
adc
jecxz
flds
aas
mov
mov
jne
into
inc
dec
shlb
jp
adc
adc
xchg
push
mov
loopne
fstpl
adc
repz
dec
xor
and
sbb
inc
movsb
in
hlt
adc
push
into
call
ret
mov
push
sub
movsb
incl
mov
std
fisubrl
jmp
or
repnz
inc
sbb
jp
pop
xchg
or
or
pop
sub
test
fsubrl
mov
push
pop
sbb
jl
sbb
adc
ljmp
push
aas
mov
mov
ror
fnstcw
das
rcll
movsb
fmull
adc
int3
out
xchg
shlb
pop
movsl
mov
mov
bound
xchg
mov
xor
lods
inc
cmp
insb
sub
mov
jnp
adc
jge
gs
sbb
add
mov
out
xchg
in
push
lods
fwait
mov
add
xchg
std
fs
stos
imul
xor
roll
dec
adc
mov
dec
popa
lret
inc
mov
js
repz
pop
xchg
movsl
inc
bound
sbb
into
sub
shrb
cmp
fistps
rcll
sahf
aas
fst
push
mov
call
add
int3
arpl
or
js
and
cs
daa
cwtl
xchg
scas
adc
mov
sub
push
dec
pop
push
adc
inc
mov
ja
xor
std
inc
testl
jle
into
jo
repz
add
out
xchg
int3
lods
notb
int3
push
icebp
movsb
push
push
adc
int
roll
ja
aaa
imull
cmpl
mov
pop
pop
das
movsl
dec
mov
xor
adc
fucom
mov
jge
lss
sti
movb
lods
shrb
adc
icebp
andb
or
jecxz
mov
int3
sti
cltd
or
icebp
sbb
jae
mov
or
push
mov
das
out
movsl
rolb
adc
push
std
push
pop
js
jmp
mov
out
push
popa
xchg
and
cmp
out
mov
insl
or
mov
cmp
dec
pop
inc
stos
loop
call
hlt
pop
pop
pop
mov
movsb
pop
jg
adc
dec
cli
loope
cltd
pop
cmp
loope
jg
sub
pop
loope
jle
iret
aam
mov
ret
jl
shlb
cmc
dec
ljmp
mov
mov
push
pop
out
inc
iret
icebp
dec
cltd
and
mul
mov
or
aad
cltd
mov
pop
imulb
dec
push
dec
mov
lret
incl
scas
jb
pop
sbb
or
stos
jo
movsl
xor
outsl
fbstp
ss
test
push
mov
jg
lods
add
arpl
scas
jmp
or
incb
mov
cmp
push
arpl
and
add
stc
popa
aam
mov
mov
dec
inc
push
or
push
rclb
push
cmpsb
bound
or
iret
sarl
push
aad
test
mov
dec
add
sub
bound
pop
movl
mov
imul
loope
dec
xor
or
mov
push
insl
cmpl
cltd
push
xchg
xor
or
add
loope
dec
out
fistpl
push
shrb
or
mov
xor
adc
ljmp
adc
in
outsb
sub
cmp
je
push
mov
jmp
mov
cmpsb
jl
js
pcmpgtw
jns
push
jbe
int3
pop
cs
pop
cwtl
in
mov
sub
sub
cmp
icebp
out
xor
rcrl
lcall
jbe
rolb
aad
add
and
inc
stc
das
rcrb
inc
ss
inc
and
div
cwtl
ficoml
sub
jmp
pop
jns
out
xchg
or
sbb
inc
out
faddl
lods
jmp
sbb
mov
xchg
add
mov
imul
jae
test
adc
stos
lret
repnz
cmpsb
cmp
icebp
or
push
arpl
dec
js
inc
aaa
and
xchg
lods
sbb
mov
or
sti
jns
push
adcb
sbb
pop
ret
xor
xor
out
push
pop
pop
pop
shlb
scas
pop
jno
adc
lods
mov
pop
movsb
adc
mov
jno
cmpsb
sub
mov
xchg
jmp
sti
stos
mov
mov
fnstcw
adcb
sahf
jge
mov
xor
icebp
in
dec
lcall
adc
mov
mov
lods
cmp
pop
and
lcall
aaa
adc
sub
loope
inc
sbb
sbb
jae
xor
push
jo
nop
cltd
push
inc
xchg
repz
xor
stos
lds
addr16
ret
mov
pop
repnz
fdivrs
aas
loope
lret
jge
addl
dec
int3
push
and
jns
pop
cmp
or
dec
loope
xor
pop
fs
test
cmp
imul
jge
sub
push
setnp
jb
les
imul
mov
int3
dec
cmpb
adc
sub
dec
sub
push
incl
lret
cwtl
mov
repz
and
and
mov
mov
insb
xor
push
negl
dec
pop
mov
movsl
xchg
adc
int
or
xor
lret
outsb
xchg
outsl
clc
mov
fs
icebp
mov
sar
mov
pop
xchg
int3
fisubs
xor
inc
jne
sbb
pop
shrb
dec
or
arpl
aas
xor
fisubs
push
inc
xor
dec
ret
pushf
mov
lcall
fnsetpm(287
in
iret
repnz
dec
mov
pop
je
xorb
stos
inc
push
mov
and
ror
out
loop
jnp
pop
lahf
sub
insl
ret
fnstenv
cltd
jae
jne
pop
xor
fisttps
xchg
adc
mov
fnsave
push
cli
sbb
js
bswap
inc
add
mov
test
fistpl
adc
add
mov
fimuls
mov
pusha
inc
int3
mov
cs
jle
pusha
push
jp
sbb
in
insl
or
ja
lods
insb
mov
sub
lcall
jmp
test
and
jns
cmp
pop
mov
daa
test
xor
jo
and
lds
sbb
inc
xor
push
mov
out
inc
lods
enter
push
int3
jp
xchg
adc
fs
fldcw
sbb
movsl
stos
or
or
mov
pop
arpl
cmovnp
cmpsl
sbb
and
xadd
cld
mov
push
ret
push
jo
out
js
or
pop
daa
cmc
push
loop
lock
adc
adc
fsubrs
jmp
dec
paddd
add
mov
xchg
pop
popf
subl
push
imul
ret
mov
inc
nop
orb
cmpl
jbe
pop
cmp
jge
sub
out
xor
mov
lahf
lea
lds
rcrb
into
push
push
adc
rclb
pushf
or
pop
lea
mov
addr16
clc
xor
mov
stos
out
jb
int
mov
mov
or
dec
mov
out
imul
pop
jo
data16
add
pop
jnp
xchg
out
imulb
adc
jle
mov
in
fsub
xchg
shl
nop
aam
inc
cli
lods
mov
dec
rep
incb
aaa
dec
ja
jno
jnp
insl
dec
inc
push
jbe
cli
inc
xchg
pop
add
mov
jae
cmp
addl
je
das
mov
imul
push
int
repz
mov
aaa
sub
sub
mov
adc
adc
dec
fsts
inc
enter
xlat
xor
jne
add
pushf
enter
mov
gs
out
mov
subb
dec
push
xchg
add
daa
and
xchg
cltd
gs
jno
hlt
push
jbe
push
jp
les
mov
cmp
jecxz
test
jl
mov
mov
popl
xchg
add
les
xor
xor
jno
mov
in
test
jle
rcrb
repnz
and
or
cli
push
divl
cmpsb
add
sub
jbe
inc
out
mov
jnp
adc
insb
cld
xor
mov
mov
sti
stos
aad
sbb
mov
push
in
fisubs
lods
jecxz
inc
sti
or
fmul
cltd
mov
jbe
ss
inc
or
es
mov
and
popf
mov
mov
add
adcl
or
punpcklbw
cmpsl
push
imul
xor
iret
fnstsw
add
rclb
jp
xor
cmp
mov
xor
jnp
xlat
test
mul
sbb
cmp
clc
pushf
ficomps
sub
mov
aaa
or
in
cmpsl
xchg
out
imul
hlt
cmp
dec
cmp
rorl
adcl
mov
mov
xchg
jb
out
and
sbbl
inc
and
roll
mov
cli
ja
sbbl
jmp
jecxz
or
push
inc
sahf
jo
jno
mov
sub
cltd
xor
bound
sbb
cld
shll
mov
push
xor
ficomps
mov
je
sub
negb
sahf
pop
mov
push
shrd
lods
bound
add
or
or
xchg
out
into
pop
inc
outsl
aam
sub
fdiv
je
dec
and
or
into
xchg
fwait
mov
ds
add
orb
add
cmpsl
add
jmp
jae
sbb
add
jno
add
xor
das
mov
lods
pop
add
and
push
mov
not
pushf
lret
xlat
mov
mov
hlt
loopne
scas
and
fimull
imul
adc
jnp
test
mov
fcoms
pop
or
cmp
and
ret
or
mov
pop
pop
push
xlat
mov
adc
jge
sarl
pop
add
mov
push
hlt
ja
cwtl
ficoms
shrb
es
mov
andl
movsb
iret
inc
sbb
jo
lcall
jbe
jne
orb
push
pop
pushf
sbb
test
pushf
push
cmpsl
ds
dec
mov
sbb
dec
sbb
jne
test
jmp
xchg
add
idivb
xor
pop
std
cmp
dec
or
push
fsubrs
jecxz
jg
mull
adc
outsl
rcl
jmp
sbb
cld
adc
sbb
xchg
xor
add
xchg
out
cmp
or
push
inc
scas
or
sub
rep
scas
lds
movl
pop
cmp
js
ljmp
stc
mov
roll
xor
mov
jnp
xchg
lods
repz
lock
fwait
enter
or
mov
rcl
jae
mov
stc
out
sbb
xor
sbb
xchg
dec
scas
out
outsb
lret
dec
mov
jns
lods
scas
in
inc
mov
cs
dec
push
xchg
pop
jmp
out
or
imul
add
out
push
cltd
test
sub
repnz
mov
lock
jecxz
shll
cmp
mov
jle
gs
fcom
icebp
mov
pop
clc
scas
mov
cmp
mov
xor
in
nop
or
out
sub
mov
xchg
lret
cmp
jge
pusha
jbe
adc
push
xor
jle
xor
int3
cltd
sahf
test
jae
and
inc
fwait
add
cmp
sbb
imul
popa
add
movaps
adc
cmpsl
push
scas
xor
mov
jp
into
lahf
inc
stc
in
in
test
imul
push
or
sbb
add
mov
inc
enter
flds
or
lods
insb
xchg
cmp
inc
jp
aaa
pop
cmp
into
fs
mov
faddl
shlb
add
or
add
sbb
sti
xorps
mov
xchg
and
fs
lcall
and
loop
or
or
inc
and
push
push
push
sub
and
out
jne
out
movsb
stc
dec
cli
dec
out
adc
lret
jnp
mov
leave
shll
jmp
cmp
mov
mov
sub
imul
cmc
xor
stos
mov
and
jl
scas
into
cld
pop
fists
movsb
insb
inc
stos
fists
mov
add
aam
sub
insl
jmp
jecxz
sub
cmp
fists
adc
xchg
dec
xor
mov
cltd
ljmp
gs
in
fsubr
dec
pop
sub
adc
fisubrs
es
pop
das
inc
sbb
shl
rolb
les
push
ja
sub
fwait
add
test
ficomps
cli
add
fxch
xchg
movsl
or
jmp
mov
int
push
shl
lds
jge
loope
xchg
cmpl
stos
test
jge
aam
sbb
adc
mov
sub
incl
sbb
outsb
repz
test
mov
leave
cmc
mov
and
fs
mov
orl
fwait
mov
mov
push
in
sbb
fisubrl
xchg
mov
xor
jle
push
xor
sbb
pop
addl
push
out
data16
arpl
mov
popa
inc
aad
adc
out
and
jb
and
inc
aas
push
cmpsl
insb
xor
pop
adcb
int
fwait
sbb
sbb
or
xor
pop
push
fidivs
inc
aaa
pop
xchg
sbb
imul
sub
mov
stc
dec
or
cmp
in
mov
outsb
mov
sub
push
mov
jmp
les
push
ret
and
jl
adc
add
xor
loop
jo
adc
aam
xor
scas
xchg
icebp
jns
test
test
insb
fsubr
xor
popa
popa
lahf
and
mov
adc
inc
stos
jg
loop
push
pop
pusha
iret
nop
aam
fwait
mov
mov
fadd
inc
outsb
fistl
fcmovne
leave
sub
inc
xchg
add
arpl
xchg
in
loop,pn
clc
inc
inc
cwtl
repz
imul
out
imul
jnp
cli
mov
xor
xchg
jle
jo
lock
dec
sahf
dec
pop
jecxz
sbb
pop
xor
xchg
adc
sahf
stc
push
push
shlb
arpl
loopne
xchg
sbb
dec
fiaddl
scas
mov
fdecstp
ss
mov
cld
mov
inc
mov
xchg
sti
iret
icebp
scas
mov
insb
nop
imul
dec
sub
rolb
pop
adc
pop
jb
sbb
nop
dec
inc
adc
sbb
aas
mov
repz
mov
add
lretw
or
dec
arpl
iret
cmp
ret
clc
idivl
mov
andb
clc
pop
je
lock
jbe
ss
mov
push
push
or
adc
sti
cmpsl
and
adc
and
pop
aam
lock
dec
out
mov
cmp
into
lahf
mov
xor
or
hlt
fstl
add
jmp
rcrb
mov
cmp
cmpb
jle
movsl
pusha
sbb
sti
ret
and
sub
and
lock
mov
adc
loop
lcall
dec
xchg
adc
lock
push
aaa
mov
sub
out
mov
icebp
jno
stos
cltd
push
ret
push
jnp
xchg
adc
inc
aas
int3
lods
push
or
leave
pop
cwtl
sub
or
push
jno
mov
push
icebp
pop
aam
dec
movsb
shr
lea
cwtl
nop
loope
test
xchg
daa
xchg
sub
mov
pop
add
cmc
push
fnstsw
pop
popa
sub
pusha
pop
ss
mov
cmp
mov
nop
test
adc
push
push
xchg
frstor
xchg
int
js
lods
jle
push
loop
mov
scas
negb
test
scas
and
leave
orl
pusha
mov
mov
cli
stc
lcall
add
mov
dec
nop
inc
xchg
jg
subl
mov
cmp
push
stc
pop
out
mov
mov
jmp
rorl
mov
push
add
xor
mov
inc
jle
push
push
daa
dec
loopne
and
and
adc
adc
out
dec
aad
sbb
adc
shl
inc
add
into
inc
loop
xchg
lock
sub
flds
mov
mov
and
inc
mov
sbb
mov
rclb
mov
repnz
in
sub
xchg
dec
test
es
in
inc
sub
clc
dec
mov
ficomps
stos
pop
sub
add
inc
divb
xchg
aaa
ja
push
scas
ja
jle
cmp
xor
int
cmp
das
xchg
xchg
add
or
pop
xchg
and
mov
cli
cmp
fbstp
scas
imul
inc
mov
outsb
sbb
aad
or
icebp
push
jecxz
mov
testl
lret
or
jge
push
adc
test
call
push
pop
dec
and
shrb
pusha
pop
adc
push
negb
jb
rcl
fs
lods
out
mov
in
shrl
jle
in
rorl
fisttpl
and
push
pop
sub
jns
jmp
pushf
push
jmp
mov
nop
or
scas
in
movsb
dec
push
out
stos
xor
sub
jecxz
and
jmp
vsqrtpd
insb
pop
sbb
inc
adc
or
jecxz
mull
sbb
dec
inc
repnz
leave
test
sub
xchg
fs
fadds
sub
lcall
je
jg
cmp
dec
pop
inc
adc
cmpsb
jl
sub
test
mov
sub
jg
jle
or
dec
mov
shll
push
dec
push
shr
fwait
or
in
cmpl
mov
nop
loope
inc
push
aam
sbb
pop
movsl
mov
adc
pop
daa
push
xchg
mov
insl
or
ja
and
negl
xlat
pop
mov
insl
pop
dec
cmp
sub
outsb
mov
cmpsb
pop
clc
inc
add
push
xor
out
mov
in
out
outsl
jnp
pop
xchg
dec
pop
aad
xchg
insl
jg
out
outsb
nop
inc
pop
setg
addl
pop
mov
pushf
sbb
mov
nop
sub
test
in
imul
lods
mov
mov
pop
test
out
ret
mov
or
test
jp
ss
fs
enter
nop
mov
scas
lea
dec
pop
xchg
icebp
xchg
mov
jge
inc
push
test
aaa
subl
jmp
cmp
push
jae
pop
jne
cmpsl
mov
orb
pop
insb
xor
mov
addr16
add
xor
pop
out
sbb
mov
aad
daa
je
sub
movsl
fisubs
jno
lea
adc
mov
jecxz
cmp
add
sbb
xchg
jge
lret
addr16
adc
inc
push
pop
add
jmp
jecxz
cmp
fwait
outsl
jne
int3
test
push
xor
ret
mov
mov
sarb
inc
mov
dec
lods
inc
add
jno
push
mov
jp
icebp
rcrb
movsl
lods
mov
faddl
mov
outsl
xor
rolb
insb
fsubrl
add
and
lcall
xlat
xchg
fimull
and
iret
dec
int3
add
mov
pop
inc
inc
jbe
ret
vmptrst
or
dec
pop
bound
lahf
adc
decl
ljmp
sub
cmp
shl
lret
loope
sahf
shrb
mov
leave
mov
int3
cld
mov
in
out
dec
jnp
fidivs
test
ds
ljmp
dec
out
jb
and
test
mov
leave
out
adc
jge
loop
aad
cmpsl
pop
sub
addr16
mulb
dec
int
dec
daa
inc
addr16
aam
xchg
xchg
dec
xor
jg
lret
nop
lret
push
cmp
and
add
dec
jmp
dec
lods
cwtl
aam
adc
xchg
das
cmpsl
test
sbb
in
pop
add
add
sub
mov
jb
stc
enterw
rcll
outsb
test
jns
and
cmp
into
xchg
into
jg
jbe
sbb
je
or
add
shlb
cmp
fldt
sub
mov
call
add
lods
btr
mov
mov
ss
stos
cmp
fdivr
ret
mov
out
inc
stc
fisubrl
and
push
push
jmp
popa
sahf
bnd
out
lea
dec
sbb
imul
dec
fnstenv
mov
cmp
push
push
mov
inc
ds
ljmp
mov
int3
mov
testb
xchg
insb
xor
lret
iret
or
out
outsb
movsb
sbb
insl
push
je
rcl
loopne
pop
or
cmp
adc
or
mov
mov
iret
in
dec
test
xor
ss
cmp
dec
xchg
xlat
jo
pop
pop
mov
loop
insl
xchg
call
mov
push
push
cwtl
xchg
test
pop
ficoms
cli
ficompl
pop
repnz
sbb
mov
mov
jb
stos
adc
xchg
inc
sti
jb
cli
pop
lock
repz
xchg
adcl
loop
push
mov
and
pop
adc
lahf
lahf
xchg
fldl
xchg
lret
nopl
cmp
push
test
jne
jne
mov
sub
xchg
pop
test
sub
nop
test
fwait
push
inc
pop
cmp
inc
sub
in
adc
dec
mov
sub
pop
lock
imul
cmpsl
nop
push
daa
pop
jbe
sub
in
inc
shlb
ficompl
movsw
ds
mov
ljmp
call
push
scas
pop
fwait
cmp
mov
mov
cmp
pop
push
stos
and
sbb
sbb
cmp
add
stos
mov
sbb
popf
lcall
gs
out
orl
dec
adc
xchg
test
scas
dec
sahf
rol
or
rorb
clc
clc
cli
xchg
adc
lret
fidivl
or
adc
addr16
cmp
mov
loope
push
dec
lods
mov
push
stc
imul
pop
out
out
scas
adc
fnstenv
xchg
mov
dec
popa
in
add
lahf
xor
or
pusha
jns
movsb
mov
call
out
sarb
inc
and
add
call
mov
add
pop
xor
xor
adc
adcl
cli
jp
xchg
pop
inc
push
xchg
add
mov
in
out
psubusw
lret
or
sub
ret
enter
incl
sub
test
mov
push
cmp
jg
pop
push
add
ficompl
mov
aam
sbb
jbe
sub
call
dec
das
sub
repnz
and
subb
xchg
mov
loop
in
dec
and
add
mov
jmp
fcmovnbe
mov
sbb
xchg
xor
pop
and
mov
ja
push
fwait
scas
decb
je
test
xlat
jmp
repz
pop
inc
and
mov
mov
sbb
cmpsl
pop
imul
fisubs
pop
lock
dec
test
lods
lahf
aam
inc
pop
sbb
pop
xor
js
dec
dec
psrld
cltd
add
jp
lret
imul
fcmovu
lret
pop
cmp
jge
sti
add
test
pop
xchg
dec
scas
or
mov
outsb
movsb
xchg
jno
stc
jae
nop
insl
scas
ds
mov
bound
inc
lahf
imul
mov
cmpsb
dec
pmullw
bound
pop
aad
enter
jnp
xor
dec
roll
fdivrs
sbb
in
ss
call
cs
and
cmp
or
fcompl
and
jnp
repz
mov
or
je
imul
aam
xor
mov
adc
inc
jae
test
fsubl
jbe
cwtl
test
xchg
cltd
hlt
sbb
xchg
sub
cmp
or
sbb
cmc
xor
insb
in
add
stos
jmp
pop
dec
pop
in
movsl
int
sub
add
outsl
sub
add
scas
aad
adc
fwait
lahf
jns
jbe
push
pop
cld
xor
push
stos
sbb
push
jnp
cld
mov
out
out
stos
addr16
loope
cld
lret
gs
mov
dec
jp
adc
dec
gs
mov
or
pop
je
xchg
fcomp
mov
ja
sub
subb
or
loop
cmp
ja
std
jle
mov
pop
je
fistpl
imul
iret
stos
or
lret
clc
lock
mov
push
ljmp
movsb
mov
fwait
push
out
and
mov
xchg
insl
dec
cwtl
and
sbb
clc
mov
xor
mov
aaa
es
sbbl
div
lods
mov
or
fidivrs
cmp
or
adc
das
into
dec
sub
sbbl
cs
xchg
sub
in
retw
shll
lret
imul
clc
and
push
and
dec
jbe
fmull
loop
ret
sub
adc
fcmovnbe
push
mov
ret
rclb
jmp
jo
daa
mov
pop
test
pop
shl
inc
cmpsb
cmpsl
lock
mov
bound
loopne
leave
push
test
jg
arpl
daa
inc
jns
xor
jl
negl
fs
movsb
sbb
sbb
and
loope
js
mov
sahf
xchg
mov
mov
push
pop
fwait
inc
sti
adc
adc
push
adc
xchg
push
xchg
aam
xchg
ffreep
lret
pop
xchg
pop
mov
jb
xor
sbbl
popf
jae
push
repnz
dec
lods
mov
or
mov
icebp
repz
std
xor
nop
cli
xor
and
es
aas
xor
adc
sbb
push
iret
or
add
cmp
jns
mov
add
cmp
rcrb
xchg
fldt
xor
xor
lahf
andb
mov
rcl
cmp
or
orb
sti
mov
mov
fs
ret
and
mov
mov
enter
jae
jo
inc
ja
leave
cli
sub
ja
loop
mov
shl
xor
pushf
push
jo
push
popa
inc
lods
cmc
cmp
dec
xchg
jb
je
addr16
mov
or
dec
iret
sub
clc
xlat
mov
pop
inc
andl
pop
cmp
iret
inc
lods
jp
lods
jns
ljmp
push
stos
sub
xchg
fidivs
nop
popl
push
add
loopne
mov
ljmp
es
stos
cmpsl
loop
sbb
mov
scas
pop
rorb
dec
jns
roll
push
aaa
push
xchg
je
fmuls
cmpb
add
mov
cltd
xor
jo
rclb
fwait
js
pop
sub
ds
dec
jae
rcll
scas
pop
fisubs
mov
cli
je
mov
out
jae
insb
and
and
es
lods
push
ret
xchg
out
or
sti
shlb
push
aas
jg
les
jbe
pop
cmp
mov
js
outsb
push
iret
mov
into
mov
call
pop
jp
jb
repnz
adc
xor
les
jp
mov
or
imul
sbbb
sahf
add
pop
xchg
std
js
add
loopne
es
push
xchg
movsb
ret
push
sub
xor
mov
aas
ffreep
stos
push
jne
cmpsl
xchg
enter
jbe
jge
inc
sub
je
inc
idivl
xchg
jp
cmp
cmpsl
repnz
les
mov
pop
outsl
mov
fnsave
pusha
aad
sub
xor
inc
jb
adc
xchg
xlat
jle
jae
or
fmull
push
inc
push
stos
ds
mov
mov
jmp
mov
cli
int3
inc
pop
daa
clc
hlt
jmp
push
daa
aaa
inc
rorl
mov
rclb
sbb
xchg
jae
push
push
mov
jg
popf
in
push
dec
add
jo
xor
lret
xor
or
shlb
cmp
test
test
ja
xchg
cmp
push
push
xlat
scas
fcmovnb
mov
pop
lods
ret
sbb
ret
popl
pop
in
cmpsb
sub
sub
iret
es
adc
sbbb
in
pop
mov
jmp
stc
hlt
mov
jge
lods
ret
xchg
xchg
push
mov
and
sbb
cmp
or
test
in
clc
push
add
fcoms
fs
mov
cwtl
sbb
mov
cmpsl
mov
loopne
fcmovbe
adc
jl
inc
xor
mov
inc
mov
cmp
mov
sub
fdivrl
mov
sbb
addr16
movsl
js
ja
mov
out
gs
mov
iret
dec
sub
sbb
mov
gs
xchg
dec
pusha
out
sti
cmp
jmp
pop
stc
js
mov
mov
in
adc
lea
fisttpl
dec
mov
fstps
jge
mov
xchg
xchg
sbb
aaa
cli
lock
dec
xlat
pushf
mov
popf
inc
insl
int
outsl
mov
push
repnz
push
mov
aaa
lahf
fistps
xchg
push
arpl
push
leave
in
xlat
pushf
push
and
jl
mov
in
lret
cltd
out
push
xchg
jp
mov
pop
xor
stos
pop
jae
dec
mov
adc
test
xor
popf
and
sbb
fldt
jbe
adc
dec
xchg
test
mov
xchg
cwtl
mov
ds
mov
pop
jae
ret
pop
or
sbb
or
in
adc
xor
adc
mov
stos
out
data16
mov
dec
cmc
mov
dec
out
xchg
or
lret
lods
scas
scas
pop
call
pop
out
sub
jge
mov
pop
stos
mov
mov
or
cmp
mov
movsb
sahf
clc
jge
shl
or
adc
fdiv
test
dec
xor
and
hlt
jle
mov
mov
aam
mov
add
adc
add
outsl
adc
out
stc
push
xor
xchg
add
mov
mov
sub
jno
push
addr16
dec
and
pop
movsl
fnsave
dec
cmp
js
daa
stos
jb
cmc
lock
jecxz
push
adc
push
pop
je
add
xor
cmp
fucomp
lods
in
sarb
sub
addb
int3
xorb
imul
loope
xor
subb
sbb
fadds
dec
jl
imul
fistps
js
rcrb
scas
sub
fstl
dec
push
roll
push
into
xor
stos
xchg
jmp
mov
dec
jne
pusha
mov
sbb
inc
dec
dec
rorb
les
les
je
push
mov
and
adc
xchg
mov
push
inc
xor
and
test
hlt
sub
scas
mov
mov
jg
fisubs
cmp
shll
xchg
cmp
hlt
push
loope
fistl
mov
in
bound
xor
aaa
movsl
pop
and
ds
notl
xor
xor
inc
cli
bnd
xchg
jecxz
sbb
inc
mov
xor
or
js
les
mov
adc
xchg
jo
inc
add
imull
mov
fiaddl
dec
sbb
insl
push
cmp
push
mov
jae
into
lahf
or
cmc
rorb
iret
cmpsb
sti
lods
cmp
push
lock
test
push
in
mov
sbb
push
js
mov
jmp
dec
pop
lahf
mov
inc
dec
push
popa
mov
jmp
push
iret
mov
fdivrp
mov
sbb
rcll
xor
insb
lcall
daa
xchg
dec
shlb
and
xor
mov
popa
sbb
push
loope
sub
sbb
and
mov
mov
inc
insl
inc
dec
mov
xchg
repz
mov
xor
pop
push
push
es
das
xchg
dec
rol
dec
and
mov
xor
mov
ret
cmpsl
xlat
and
and
mov
and
pop
pop
test
inc
push
jp
jae
bound
xor
divl
cmp
mov
xchg
and
pop
pop
daa
jb
roll
mov
cmp
pushf
xchg
dec
mov
fwait
leave
mov
mov
out
movsl
push
sarb
xchg
xchg
and
mov
cmp
xor
call
loop
mov
and
in
out
or
notb
lcall
ret
out
mov
js
jecxz
out
test
jl
pop
mov
and
cltd
and
mov
out
loop
sahf
stc
and
jecxz
push
bound
inc
adc
fdivl
pop
push
outsb
sbb
divl
xchg
lret
dec
shrl
ljmp
mov
jne
and
fiaddl
dec
or
pop
aad
movsb
and
movsl
xchg
add
pop
dec
mov
and
xor
mov
pop
sub
xchg
lea
xor
and
push
mov
inc
lea
in
aad
int
fistl
xor
mov
inc
data16
pushf
pusha
sbb
out
je
cmpsl
dec
lods
mov
jno
aas
dec
fsubrs
leave
xlat
pop
js
mov
push
lcall
mov
lret
aas
cli
push
cmp
clc
xor
cld
xchg
xor
pushl
push
dec
inc
mov
subb
and
xlat
movsl
addr16
xor
dec
or
sbb
test
mov
or
scas
sbb
jns
jmp
ret
and
lea
test
scas
or
out
lahf
pop
popa
out
test
sub
push
lea
ds
shlb
adc
dec
insb
ds
push
xor
sbb
sbb
or
fisubl
adc
jns
fsubrs
fcompl
mov
inc
push
leave
ss
cmp
movsb
inc
sbb
lret
into
fwait
scas
dec
int3
iret
pop
pop
xchg
adc
mov
push
ja
pusha
sub
adc
test
repz
cld
data16
dec
inc
mov
sub
daa
and
inc
mov
inc
sub
loop
rcrl
jg
lret
dec
sub
pop
mov
es
flds
div
divl
ss
mov
jne
push
scas
mov
jns
mov
adc
sub
enter
mov
xchg
fidivs
inc
push
outsl
lret
pop
loope
pusha
int3
xchg
push
mov
icebp
fadds
test
cltd
mov
push
stos
in
push
insb
sbb
arpl
dec
sbb
mov
dec
test
fs
inc
cmp
pop
cmp
outsl
cmpsl
push
and
sub
and
jl
inc
cmp
lcall
sbb
xchg
add
out
pop
cmp
or
lods
orb
stos
mov
jbe
ss
out
cmpsb
ret
xor
mov
mov
test
xor
dec
icebp
addr16
std
hlt
outsl
fisubl
push
add
loope
sti
aam
les
popf
repnz
iret
jmp
test
cs
pop
hlt
addl
adc
fisubrl
dec
ret
addr16
loop
cmp
cmp
out
jae
pop
aaa
fsubs
inc
inc
dec
data16
aas
mov
gs
mov
mov
pop
sbb
shll
bound
push
pusha
jg
mov
and
and
sub
mov
jle
test
pop
orl
inc
imul
lock
in
cmp
xor
xor
xor
xchg
sbb
cs
int3
cmp
add
roll
subl
or
out
xor
or
jne
stos
inc
dec
jae
xchg
mov
xchg
int3
mov
jg
cmp
iret
in
sub
jae
cs
add
test
lret
mov
and
movsl
add
push
lahf
sub
ds
ljmp
les
cmc
add
enter
mov
mov
cltd
xchg
popa
arpl
add
pop
jo
adc
fwait
inc
aaa
fadds
sub
enter
sti
jne
popa
les
push
or
xor
jns
outsb
mov
loop
and
sub
inc
dec
adcl
js
inc
cmc
xor
jnp
popf
cmpb
push
mov
xor
mov
gs
js,pt
test
cmp
jns
jmp
mov
shll
das
mov
and
adc
fcomi
test
jns
mov
jmp
repz
fs
mov
xchg
les
and
in
inc
pop
ja
cmpb
mov
mov
mov
int
shr
repnz
outsb
pusha
clc
cs
jl
mov
outsl
inc
sbb
inc
pop
outsb
xchg
sbb
mov
fcomp
or
icebp
pop
inc
in
fsubrp
dec
lods
xor
aad
insb
gs
mov
mov
push
insb
adc
adc
inc
pop
adc
les
xor
data16
out
cltd
fildll
ljmp
inc
dec
movsb
cmpsb
ret
xchg
pushf
aam
xor
mov
pusha
je
mull
add
pushf
push
mov
jno
push
mov
push
push
jge
adc
repz
enter
fldt
or
fdiv
sahf
cmp
xchg
cmc
sub
aaa
cltd
hlt
mov
pusha
xor
xor
cld
adcb
push
add
into
jns
fwait
test
imul
xchg
lret
push
push
fmul
push
pop
mov
fsubrs
jae
xor
arpl
and
adc
lret
shrb
nop
fstl
and
filds
std
or
cmpsb
xor
into
push
outsb
dec
fnstsw
enter
xor
into
jbe
push
pop
lds
adc
mov
jne
and
and
pop
and
es
sbb
ret
inc
idivb
nop
dec
daa
mov
xor
xchg
lds
adc
popa
lods
dec
test
rorl
push
ret
jmp
xchg
and
roll
mov
mov
push
or
mov
cltd
sub
sar
xchg
out
mov
lods
into
icebp
mov
add
jbe
into
sub
or
sub
fcoms
cmp
imul
pop
xchg
pop
mov
imul
lret
xchg
mov
shlb
mov
dec
leave
jns
jbe
push
add
stos
jb
cli
inc
xchg
imul
jp
test
add
jle
stc
dec
add
pop
mov
movsl
arpl
push
jne
dec
mov
cmp
inc
push
rorl
dec
push
movsb
cmp
sbb
cmpsb
clc
sub
inc
xchg
cmp
push
int
push
mov
enter
push
jg
inc
and
cli
xor
imul
enter
mov
xchg
sahf
pushf
dec
andl
aad
and
xchg
outsl
scas
sub
sub
xorl
jno
push
jl
push
push
push
xchg
lahf
mov
mov
jmp
push
stos
jecxz
jmp
push
jp
int
jle
and
mov
xor
movl
mov
rorl
scas
sbb
or
test
ret
adc
and
movsb
adc
cmp
mov
pop
fisttpll
popf
mov
mov
and
mov
outsb
push
stc
fstl
sbb
xlat
stc
mov
negb
mov
mov
cwtl
addr16
adc
jl
xchg
jge
adc
jb
subl
mov
test
loopne
fs
call
sti
mov
mov
arpl
mov
bnd
insl
insb
sbbb
mov
xchg
or
push
cs
sub
pop
mov
movsb
or
sar
and
sub
loop
xchg
dec
loope
sti
into
push
pop
or
cmp
cmp
popa
xlat
adc
jnp
mov
push
pop
rolb
xchg
mov
js
ja
vrcpss
mov
aaa
push
in
bound
ds
iret
fwait
sub
insb
add
nop
cli
into
in
or
bound
xlat
cs
xor
scas
fcmovu
and
pop
decb
std
pop
sub
pusha
dec
daa
inc
icebp
sub
lret
call
test
fisubs
je
cmpsl
repnz
mov
mov
hlt
xor
sbb
pushf
push
scas
ja
inc
jno
fnstsw
popa
pusha
ljmp
pushf
aad
ret
shl
mov
xor
mov
mov
mov
loope
sub
mov
jge
pmulhw
inc
and
push
ss
mov
fwait
insl
cmp
shrl
scas
insb
and
mov
sbb
push
cmpsl
je
lret
cltd
lret
mov
inc
push
bnd
fisttps
sbb
pop
inc
cmp
sbb
lock
and
stos
xchg
push
rcll
test
dec
dec
dec
enter
or
lret
sbb
lods
loope
push
mov
imul
sti
les
in
or
roll
and
inc
xor
aas
add
mov
ss
aaa
inc
xor
lret
mov
xor
enter
and
inc
out
and
mov
push
adc
fnstsw
mov
repnz
or
ds
sbb
loope
arpl
and
fs
aaa
xchg
aas
outsb
arpl
fdiv
pop
jnp
sbb
das
jmp
sub
adc
lret
xchg
and
jmp
movsl
rcrl
stos
mov
mov
int3
cmpb
xor
fcoml
sub
sub
mov
aam
orb
into
nop
cmpsl
outsl
movsb
xchg
imul
data16
xor
int
push
mov
mov
mov
xchg
ss
or
stos
pop
std
inc
inc
or
mov
inc
outsb
rolb
insb
sti
std
push
ljmp
add
gs
mov
aas
or
enter
shll
pop
push
xor
pop
push
cli
cmpsb
cmp
aas
xor
int3
imul
icebp
cmpl
xchg
sbb
dec
dec
and
mov
jp
adc
mov
mov
mov
and
sub
push
add
or
gs
movl
mov
dec
jecxz
xor
mov
or
and
sbb
stc
xor
pop
call
push
scas
ret
mull
cmovnp
imul
rcrb
dec
ror
xchg
adc
push
sub
or
lret
sub
cwtl
ret
scas
stos
pop
sub
inc
add
sub
mov
in
cmp
mov
lods
stos
adcb
mov
xchg
push
inc
mov
js
or
lcall
jo
push
test
rcrb
and
sub
dec
arpl
cmp
add
pusha
in
or
mov
leave
xor
cli
mov
sarb
jmp
sub
ja
push
jg
cmp
ret
aas
xchg
hlt
push
iret
sub
pusha
iret
in
jns
xchg
mov
arpl
in
popl
dec
xchg
mov
out
and
rcll
loopne
inc
and
jge
sub
stc
push
lret
cmp
outsb
xchg
shrb
sbb
xor
test
adc
dec
ficoml
xor
out
mov
int3
push
fcmovu
inc
and
out
mov
push
mov
push
dec
enter
setnp
mov
lret
jb
dec
into
scas
ret
inc
popf
xchg
clc
adc
dec
call
mov
testl
cmp
pushl
or
aaa
add
adc
imul
nop
testb
or
mov
inc
jo
sbb
or
cmpsl
xor
daa
mov
push
adc
pushf
xchg
xchg
mov
sbb
pop
fsub
fcomip
sub
lea
push
add
iret
ljmp
insl
mov
loop
pop
mov
daa
jmp
les
fldenv
rclb
sbb
mov
push
daa
movsl
mov
sub
pop
in
std
adc
insb
out
loop
lds
jge
and
out
mov
stos
inc
or
adc
inc
inc
cmp
push
in
mov
dec
inc
mov
int3
into
les
int
pop
jae
lods
jp
lods
imul
dec
and
dec
rolb
and
lods
lock
and
mov
jns
mov
fwait
cmc
and
cmp
les
add
adc
sarb
push
pop
adc
or
out
mov
jmp
cmc
lds
fldenv
xchg
adc
movsl
fildll
push
push
jbe
inc
xor
daa
lods
cltd
mov
push
pop
lret
add
sub
mov
jb
mov
inc
je
lea
ret
pop
add
lds
cmp
adc
scas
test
inc
jno
jl
inc
test
filds
mov
mov
imul
mov
lea
aaa
push
or
dec
dec
mov
pop
cli
jl
gs
insl
mov
jp
cmp
sarb
ljmp
jae
sbb
xchg
iret
jne
mov
aaa
sub
cwtl
mov
aaa
ret
cli
fwait
sub
mov
xchg
pop
testl
dec
xchg
sahf
jne
fnsetpm(287
and
adc
mov
stos
ja
pushf
repnz
mov
out
repnz
aad
call
sub
push
mov
iret
inc
mov
cli
mov
push
mov
and
inc
inc
mov
inc
clc
imul
sub
imulb
addl
xlat
jle
dec
cmpsl
jmp
lds
dec
hlt
pop
jmp
dec
push
cmp
stos
dec
stc
push
enter
pop
or
xchg
int3
jge
aam
push
cmp
cmp
fwait
or
stos
punpckhwd
cmp
movsw
shl
mov
lret
gs
inc
cmp
in
test
adc
lret
xchg
pop
leave
adc
adc
xor
jbe
dec
xor
jge
fimull
or
or
neg
in
xlat
scas
mull
shrl
cmp
scas
xlat
bound
imul
nop
aaa
mov
xchg
gs
push
js
jno
jbe
mov
cmpsb
jmp
jg
cmpsl
adc
aaa
or
mov
pushf
push
cwtl
mov
jg
js
movsl
jno
je
jg
push
bound
ljmp
xchg
fst
pop
jl
xchg
outsb
and
pop
cmp
lea
outsl
push
push
cmc
mov
lods
adc
and
gs
dec
test
insb
and
fsubs
fsubs
jne
stc
xchg
add
sti
mov
sahf
pop
insb
mov
sbb
sub
fisttps
dec
nop
xor
in
int
jns
push
outsb
mov
rorb
sub
clc
cmp
into
dec
sti
scas
movsb
data16
cmpb
mov
ljmp
insb
movsb
mov
bound
fisttps
mov
lods
xor
sbb
enter
adc
cmp
notb
push
xchg
outsb
movsb
movntq
bound
aad
pop
dec
xor
or
push
aad
jl
loope
outsl
iret
lret
jmp
add
add
xor
pop
mov
addl
xor
jle
push
pop
jg
pop
jno
rolb
out
insl
loop
scas
test
jbe
inc
lahf
xor
jle
jo
inc
dec
sub
pop
imul
je
mov
cmp
jbe
fmul
add
movsb
imul
shr
adc
stc
lods
push
loope
insl
mov
add
push
sbb
out
loopne
add
mov
sub
push
sbb
sbb
stos
es
mov
loop
sub
inc
fnstenv
jmp
jae
pcmpgtw
xchg
loopne
icebp
or
xchg
add
xchg
ret
mov
stc
jnp
sti
stos
test
sar
or
xchg
mov
mov
jb
xor
stos
jo
pop
mov
mov
inc
cwtl
cld
mov
imul
add
scas
sbb
pop
popa
push
ret
dec
ret
dec
push
push
jnp
push
es
lds
ret
fiadds
test
fdivr
or
sbb
cwtl
or
int
loope
out
sub
xor
push
adc
fadds
jb
data16
inc
rclb
fstps
jo
mov
jg
call
inc
xchg
push
mov
mov
lret
sbb
ljmp
scas
lods
xchg
jecxz
and
adc
adc
jg
or
xchg
mov
fistl
pushf
popa
shrb
pop
fcmovbe
pop
pop
ss
jmp
push
in
cmp
lods
loop
sub
or
jne
hlt
mov
popa
jb
popf
addr16
hlt
and
sbb
test
and
out
jae
cltd
dec
lods
xchg
outsl
push
icebp
or
lods
sti
or
inc
pop
dec
rolb
cmp
sub
cmp
call
call
jge
push
pop
loope
cmp
test
das
sarb
std
or
int3
push
fsubr
mov
rclb
inc
imul
pop
aaa
pop
or
imul
fists
inc
sahf
sub
push
shrb
mov
dec
insl
popa
mov
inc
negl
adc
arpl
rclb
jecxz
popa
popa
jno
push
push
loope
fdivrl
pop
inc
xchg
jge
addb
shrb
int
jo
loopne
insl
dec
aam
ds
inc
pop
negl
lcall
and
subb
in
popa
mov
repnz
inc
and
mov
mov
lcall
cmp
das
xorl
adcb
in
cmp
outsb
or
adc
sbb
mov
mov
xchg
and
xor
mov
sub
dec
popa
and
lea
lock
icebp
sti
pop
xchg
cwtl
mov
add
data16
adcb
add
ficomps
sar
outsl
pop
cmp
inc
repz
xchg
int3
xor
dec
rorl
push
sbb
sub
or
jge
pop
loop
jecxz
shlb
or
push
dec
mov
daa
push
cmp
addb
xor
int
ljmp
add
daa
jle
sbb
pop
mov
inc
ljmp
ret
out
dec
popf
and
adc
cmp
movsb
cmp
jbe
pop
jb
daa
loopne
mov
inc
out
sbb
aam
lret
pop
mov
sbb
sbb
mov
add
fisubl
ljmp
xchg
lods
ljmp
clc
or
div
cmp
test
mov
or
cld
iret
jg
enter
les
or
movsl
cltd
sub
add
add
out
mov
sub
sub
fsubrs
cld
mov
insb
fistps
xor
adc
jl
pop
push
jmp
mov
das
insl
adc
mov
scas
pop
jmp
cmp
xchg
pop
pop
mov
add
xor
and
leave
and
or
test
repnz
fisubl
xchg
test
jae
add
fcmovnb
inc
jecxz
mov
fs
push
pop
rcrb
cld
test
sbb
aam
or
mov
cld
dec
jno
pop
je
outsl
ret
or
pop
pop
loopne
sub
adc
je
dec
pop
lds
outsb
or
in
fildl
fisttpl
ret
or
inc
lcall
movsl
xor
sub
mov
pop
aam
xor
aam
sub
aas
int
call
push
sbb
fdivrs
xchg
mov
jno
xchg
dec
std
fcoml
icebp
scas
out
dec
xchg
mov
push
daa
lcall
gs
sbb
aaa
pop
and
pop
popf
xor
jae
pusha
fsubp
mov
dec
repnz
or
push
rcrl
ror
mov
dec
add
testl
inc
xorb
loope
shl
imul
inc
jl
push
shll
and
push
rolb
dec
cmp
or
xchg
add
icebp
lock
sbb
std
mov
jo
icebp
imul
mov
push
or
inc
jnp
fcmove
nop
sub
sbb
sbb
pop
dec
inc
cmpl
mov
sbbl
aaa
pop
mov
sub
mov
mov
movsb
push
notb
sub
lods
jmp
jnp
and
mov
int
shlb
mov
cmp
and
jnp
mov
push
mov
bound
and
pop
arpl
xchg
jmp
dec
ret
pop
pop
les
add
mov
call
repz
xor
push
cmpsl
sub
les
jp
in
dec
sbb
arpl
arpl
xchg
jle
push
and
adc
sti
enter
cs
xchg
shl
pop
cmp
ja
mov
mov
cmc
movsb
sbb
es
int3
dec
incl
jns
testl
xor
mov
pop
dec
cli
mov
test
roll
cmpsb
mov
or
rclb
jecxz
out
stos
jmp
and
mov
subl
or
adc
hlt
sahf
es
loopne
mov
pop
jbe
xchg
mov
jbe
movsw
mov
mov
add
loopne
shrl
leave
sbb
repnz
pushf
and
and
jg
pop
mov
clc
test
cmp
jae
icebp
movsl
nop
jbe,pt
inc
cmc
sbb
icebp
int
ljmp
and
jns
sahf
xchg
cmc
cs
jmp
push
dec
int3
push
iret
sbb
xchg
fisubrs
or
scas
sbb
jge
sbb
sbb
sub
add
mov
loop
repnz
and
pushf
mov
ja
ret
inc
gs
enter
push
mov
mov
pusha
ss
ss
add
in
test
xchg
ljmp
inc
es
lock
repnz
adc
aad
mov
pop
sti
mov
and
mov
xchg
push
rol
push
call
mov
cmpsb
inc
in
inc
mov
lret
sahf
les
jbe
sbb
sbb
xchg
xor
pop
movsl
jb
dec
pop
sub
test
scas
mov
xchg
fs
and
adc
mov
pop
les
cmpsl
lcall
jecxz
vmread
sbb
sbb
sub
mov
and
aad
jmp
mov
mov
repz
adc
inc
movsl
mov
hlt
xor
push
bound
push
js
cs
sub
adc
je
pop
xchg
lahf
js
popa
jmp
std
loop
ss
dec
mov
pop
out
decb
lea
cwtl
push
inc
jo
fwait
lret
mov
mov
subb
or
cwtl
cmpsb
mov
out
jp
js
std
pop
jle
in
add
jg
jo
dec
sbbb
leave
dec
add
add
jns
inc
fwait
popf
and
sahf
cli
ja
mov
shll
jecxz
std
fstl
sti
js
adc
push
shr
push
lods
add
repnz
add
mov
mwaitx
pop
pop
pop
adc
test
ret
nop
add
rcrb
cmpsl
push
push
in
in
mov
sbb
cmpsl
mov
mov
xor
pusha
inc
dec
xchg
or
mov
add
cmp
in
aad
xchg
dec
mov
inc
add
and
ljmp
nop
cmp
into
lret
bnd
flds
icebp
jp
leave
fsubrs
inc
xor
dec
lret
dec
jg
cmp
cmp
cs
lahf
xor
xchg
ja
in
pop
cmp
pop
jb
and
ficoms
or
ljmp
jo
stos
push
jge
lods
inc
inc
loopne
dec
add
addl
ds
scas
dec
mov
lods
repnz
nop
fdivrs
rcrl
les
pop
iret
in
dec
xchg
jl
aad
mov
and
jns
iret
cmp
mov
mov
jge
jo
inc
mov
fimuls
mov
mov
inc
mov
pop
mov
cmp
mov
adc
mov
ret
lock
pop
and
fs
mov
in
or
nop
clc
into
push
push
adc
push
sbb
notb
in
outsb
clc
movsl
add
das
push
xor
cld
jno
in
cmpsb
xor
andl
filds
outsb
fidivs
aad
cmpl
or
pop
or
mov
loopne
mov
mov
adc
sub
data16
or
ss
dec
and
xchg
adc
push
xchg
push
push
and
push
xchg
enter
cltd
js
cmpb
sbb
xchg
mov
mov
adc
sahf
pop
cld
mov
mov
push
inc
jl
jge
aam
push
lahf
cmp
xchg
jbe
js
jmp
lahf
sbb
rcrb
inc
movsb
xchg
shr
fisttpll
lret
jg
add
aam
sbb
sbb
test
pop
nop
xchg
mov
shll
pminub
into
mov
push
or
mov
js
inc
mov
xchg
shrl
test
jp
mov
cmp
or
jmp
pusha
cmc
xor
arpl
clc
add
cmp
mov
xor
mov
pushf
add
add
lods
ss
push
jae
push
inc
fisubrs
adc
sub
mov
cmp
popf
pop
ljmp
pop
add
xor
out
fwait
leave
incb
xchg
xchg
pop
jns
mov
fmull
add
and
int3
fucomi
popa
jg
pop
mov
inc
mov
cld
cwtl
decb
lret
inc
pop
inc
cmpsl
jp
jmp
dec
sub
aas
stos
dec
lcall
repz
push
inc
outsb
std
adc
bound
lea
fisttpll
roll
jns
inc
aas
js
sbb
adc
xor
iret
and
inc
jl
mov
iret
adcl
push
fmull
sbb
mov
es
push
xchg
int3
inc
mov
clc
sbb
adc
pop
add
inc
movsb
push
cmpsb
es
jae
in
cwtl
jecxz
pop
inc
mov
adc
rcll
adc
out
lahf
inc
pop
and
pop
jge
cmpsl
and
sahf
mov
fbstp
sbb
inc
jo
hlt
pop
inc
and
lret
jno
dec
xor
imul
fisttps
hlt
fsts
cmovle
dec
addr16
ss
movsl
sarb
lret
xchg
pop
fdiv
aad
xchg
ffreep
xor
jecxz
pop
adc
outsb
test
cmc
fdivp
dec
testb
add
jno
inc
add
jg
fdivrs
jb
pop
xor
into
cltd
adc
mov
sahf
fs
mov
gs
cld
add
sahf
or
or
xchg
mov
jmp
xlat
inc
pop
inc
pop
push
addr16
ret
nop
loopne
or
ja
push
mov
mov
dec
outsb
sbb
push
sub
dec
adcl
mov
pop
dec
iret
dec
cmp
inc
push
mov
enter
in
flds
orb
lcall
inc
stos
push
jmp
sti
cmp
jecxz
mov
adc
pop
enter
imul
jl
mov
xor
hlt
movsl
and
pop
xor
scas
jae
push
xchg
lods
int3
adc
ds
imul
jns
rcrl
fimuls
js
cmp
aas
sbb
stos
out
daa
push
dec
or
xor
push
sub
mov
dec
jecxz
lock
pop
mov
pop
mov
xor
mov
int3
daa
cmp
push
and
and
or
xor
mov
out
mov
xlat
xchg
lds
xchg
aaa
or
or
mov
mov
xchg
push
stc
inc
mov
mov
ja
loopne
pop
test
lds
insb
xchg
sbb
cltd
loop
add
lcall
inc
enter
and
xor
int3
std
jge
leave
std
mov
out
inc
stos
aam
pop
mov
jecxz
cmp
or
gs
stc
sub
mov
rcrb
mov
dec
repnz
mov
adc
das
das
int3
inc
cmpsb
or
das
mov
into
adc
xor
cmpsb
mov
out
test
into
mov
push
and
mov
mov
test
idivb
push
ret
mov
mov
cltd
jbe
or
int3
sti
dec
popa
push
out
loopne
fndisi(8087
mov
push
adc
pushf
mov
js
lods
es
and
sti
cmp
push
mov
loope
pushf
jnp
in
repnz
mov
cwtl
or
pop
test
add
sbb
movsb
xchg
repnz
push
int3
or
adc
in
inc
int
or
hlt
imulb
int3
jle
daa
push
cs
dec
imul
es
int3
and
xchg
cmc
mov
push
fldpi
shll
push
int
adc
pushf
subb
sub
and
mov
xchg
negl
in
das
pop
jge
pop
leave
xchg
jnp
inc
jae
xorl
rcrb
jle
mov
mov
je
in
nop
js
popf
pop
stc
call
sub
xchg
pop
in
or
iret
mov
cmp
push
ds
xchg
and
xchg
int
jns
data16
dec
xor
sbb
mov
inc
sbb
xor
xchg
mov
push
push
cmp
mov
adc
mov
filds
hlt
dec
add
mov
test
dec
sbb
pop
mov
cmp
mov
dec
mov
test
mov
stos
and
xor
gs
mov
bound
xor
pop
add
in
out
in
arpl
das
xor
jmp
sbb
test
lods
xchg
and
pop
inc
mov
icebp
cmc
and
and
out
mov
fwait
movsl
push
mov
mov
iret
cmp
jle
and
jg
cmp
push
push
lcall
xor
lahf
lea
mov
cmp
out
loope
pop
arpl
lcall
jno
popl
in
cld
dec
loop
jne
inc
pop
cmp
mov
jno
pop
enter
jbe
xchg
jnp
call
fbld
or
mov
mov
jp
rclb
clc
cmp
fimuls
pop
divl
int3
sub
sub
sub
add
fistps
jo
sub
cs
int3
fiadds
lds
stc
jg
orb
dec
in
or
in
out
push
inc
xchg
dec
sub
jae
jge
pushf
mov
movsb
mov
push
dec
clc
scas
ret
and
je
insb
test
lock
push
fisubs
xchg
xlat
js
jno
ljmp
sub
ss
dec
insl
inc
cs
movsl
cmp
and
rcrb
dec
xchg
loopne
push
adc
and
adc
lret
inc
xchg
faddp
mov
xchg
shrl
flds
test
mov
stos
add
jmp
xor
shrl
mov
pop
adc
in
mov
and
jmp
xchg
push
mov
in
addr16
divb
aam
dec
mov
jo
mov
add
rcl
mov
mov
pop
push
lcall
int
rcll
fdivl
sti
imul
pop
push
dec
jbe
mov
cmc
mov
sti
lcall
jns
xchg
repnz
outsb
ja
icebp
test
push
clc
sbbb
fwait
push
push
sub
mov
sub
mov
pop
and
stc
lods
mov
out
jge
sbb
lea
mov
rcr
shlb
xor
mov
arpl
sbb
das
and
and
scas
xor
adc
into
xchg
jae
sub
loopne
test
lret
mov
mov
imul
clc
out
or
jp
fisubl
push
imul
jnp
outsl
cmp
lds
lds
cmp
and
addr16
les
icebp
xchg
xchg
subl
lcall
push
std
pop
pop
jne
mov
or
cmp
jecxz
out
rorl
sub
xor
push
ret
cltd
push
cmp
fisubs
push
adc
ja
mov
lds
inc
outsb
ds
push
push
push
notb
aas
sub
mov
jle
add
pop
mov
sbb
inc
out
insb
xchg
sahf
leave
push
pop
outsb
and
inc
pop
jp
imulb
lock
xchg
push
aas
pushf
fisttps
popf
mov
stos
stos
mov
jp
pushf
mov
jnp
mov
je
imul
orl
test
leave
sarl
lock
cli
pusha
push
xorb
dec
sbb
mov
addr16
test
mov
cmc
jl
xchg
repnz
sbb
pop
mov
mov
int
ret
clc
les
shr
insb
fimull
roll
adc
xor
push
roll
pop
push
mov
cmc
dec
and
jp
mov
jmp
lea
sbb
ljmp
int3
pusha
fisttps
loop
jp
mov
add
and
ds
pushf
push
divl
pop
push
out
adc
sub
inc
out
push
pop
outsl
imul
cmp
add
fstps
or
int3
out
mov
push
fwait
xchg
jb
add
mov
stos
fnsave
fimull
mov
adc
adc
mov
dec
add
mov
mov
mov
lret
mov
mov
jmp
ja
bound
in
lahf
inc
fstpt
outsl
shll
outsb
mov
pusha
sub
xor
pop
add
outsb
les
cld
outsb
mov
std
popf
pop
jmp
and
mov
pop
xor
xchg
enter
mov
aam
mov
aaa
jb
ljmp
jmp
add
mov
iret
push
cld
gs
sub
pop
pop
pop
cmpb
scas
in
xchg
iret
clc
sub
pop
jbe
enter
ds
or
jecxz
mov
mov
xchg
jp
inc
mov
jnp
addr16
stos
int3
hlt
xchg
out
pop
mov
dec
repnz
rol
mov
add
out
nop
addr16
mov
pop
lods
cmp
test
fcompl
xor
add
shl
inc
xchg
xor
push
mov
sbb
and
xor
lret
dec
cmpsb
adc
sub
inc
shl
adc
inc
rcll
or
lret
loop
jmp
push
int
lds
jl
stc
out
testl
out
das
cmp
shrl
stc
in
add
insb
jle
lds
and
movl
dec
ljmp
mov
xchg
rcl
xchg
jnp
push
clc
mov
cmpsb
fidivl
nop
stos
fisubrl
jl
jge
and
push
lods
pusha
ret
jp
lds
jp
rclb
fs
pusha
loopne
or
fistl
adc
js
lods
stos
movsl
iret
mov
stos
cwtl
mov
fisubs
jecxz
pop
out
out
cld
mov
mov
repz
xor
out
jmp
popf
decb
ja
xor
fldl
cli
orl
push
mov
jg
xchg
aad
test
pop
ror
pop
arpl
inc
sbb
lret
iret
outsl
loope
jecxz
out
cmp
dec
inc
insl
cmp
sub
add
add
cmp
push
fadds
xor
xor
inc
and
out
bound
push
mov
jmp
add
sub
pop
add
das
in
dec
and
fisubrs
jne
mov
xchg
test
icebp
lock
repnz
les
or
pop
divl
outsl
jle
xchg
js
inc
jmp
shl
dec
enter
pop
adc
clc
xchg
pop
cs
xchg
sbbl
aam
test
ds
sbb
or
xor
mov
loopne
sbb
push
aas
adc
pop
cmpsl
jecxz
inc
ucomiss
movsl
dec
pop
lock
inc
je
hlt
scas
add
cmp
mov
popa
add
mov
xor
adc
jge
mov
sub
mov
out
cmp
ret
orb
jge
es
std
push
arpl
dec
sarb
dec
jno
fstpl
test
push
das
aas
cmc
mov
insl
and
mov
gs
dec
sbb
cmpsl
pop
ljmp
cmp
add
je
testl
call
mov
jp
leave
test
stos
lods
shr
int
icebp
cld
push
xchg
fcmovnb
testl
and
xor
ljmp
jbe
cmp
insb
add
mov
clc
stos
es
ficomps
in
test
int3
jae
cmp
lea
fsubr
cmpsl
fisttpll
jl
mov
aad
mov
int3
fiadds
jle
addr16
or
xorb
and
mov
dec
ss
and
popf
ja
mov
lahf
fst
fsubs
mov
xchg
jle
xor
push
ja
xchg
stos
xor
lods
dec
mov
das
or
jbe
scas
jb
insl
adc
xchg
adc
loope
daa
sbb
stos
xchg
inc
loop
push
call
andb
jge
cld
popa
push
enter
mov
pushf
sbb
sub
es
fldenv
pusha
cmpsb
sbb
dec
iret
das
mov
lods
repz
and
jnp
int3
cld
push
jo
inc
xchg
movsl
add
xchg
out
cltd
call
lock
out
mov
fmuls
rorb
mov
xor
clc
fs
rcrb
cmpsb
inc
xchg
lea
xchg
dec
stos
push
fldl
sahf
and
mov
call
pop
adc
mov
insb
ret
cmc
pusha
push
or
test
dec
les
sub
fs
mov
dec
adc
aam
in
jmp
aaa
push
add
dec
jae
mov
mov
jnp
sub
push
push
mov
sub
loopne
or
nop
insb
push
lock
in
scas
je
sbb
in
scas
add
clc
inc
mov
into
pop
inc
cmp
or
mov
cld
xor
mov
roll
lret
pop
test
insl
adc
fwait
dec
loop
out
shrl
leave
mov
pop
ja,pn
loop
push
scas
lock
stos
sbb
rclb
dec
inc
lods
into
push
outsb
aam
push
daa
imul
add
push
xor
scas
pop
pop
dec
add
sub
pop
jbe
or
fwait
test
lret
xchg
enter
insb
ljmp
out
js
test
movb
repz
sbb
repnz
daa
imul
mov
mov
push
pop
lret
cmp
icebp
in
addr16
xchg
push
add
sub
fldcw
sub
add
in
cmpsl
das
jmp
das
and
das
cmp
inc
pushl
jbe
bound
cmp
mov
and
mov
sub
pxor
test
into
mov
out
or
mov
dec
dec
xor
fcmove
xlat
repz
ja
jmp
cmpsl
mov
in
push
icebp
mov
push
cltd
xchg
fsub
sub
lods
fwait
lahf
jl
roll
xor
cmp
cli
mov
sbb
pop
lea
in
mov
pop
subl
and
and
jnp
adc
out
jns
rorl
jp
aaa
and
xchg
inc
aaa
sarl
jmp
test
in
adc
lods
jle
xlat
push
mov
mov
es
adc
cmpsl
mov
cmpsl
pop
movsl
xchg
rolb
xchg
sub
lcall
filds
loope
cmp
add
test
les
mov
stos
sbb
xchg
and
pushf
ret
dec
lret
nop
insb
lahf
cmp
in
int3
adc
aaa
inc
push
lcall
jns
xchg
loopne
iret
xchg
shrb
in
or
pop
imul
pop
cmpsl
arpl
mov
add
inc
fcmovb
xchg
movl
jp
pop
xchg
test
sub
pop
int3
adc
xor
sti
scas
xchg
loopne
test
out
add
jecxz
outsl
in
enter
stos
xor
inc
cmp
aam
mov
jne
mov
scas
jnp
mov
jp
imul
and
push
add
ljmp
push
repnz
dec
xchg
add
sub
mov
lahf
outsb
outsl
inc
repz
mov
mov
mov
aad
jbe
test
xlat
xor
pop
sub
cmp
jbe
test
lods
fisttps
jge
xchg
jno
pop
lcall
adc
jns
xlat
cltd
das
jmp
and
lods
das
leave
fdivr
shll
inc
mov
mov
mov
shll
or
mov
rep
dec
stc
insb
xlat
mov
mov
mov
inc
jmp
popa
shrb
xchg
inc
ja
adc
shlb
dec
aaa
stos
mov
mov
push
dec
pop
jl
negb
mov
leave
test
lock
enter
hlt
inc
adc
stc
cmp
mov
stc
stos
cwtl
jae
in
ret
jg
lahf
mov
in
inc
mov
mov
pushf
fcmovnb
cwtl
daa
jg
fs
in
dec
xor
or
push
std
sbb
addr16
sbb
mov
movsb
popf
out
out
jae
add
add
add
lods
mov
movsl
sbb
cld
inc
push
sbbl
notb
mov
pusha
arpl
cmp
add
mov
mov
loopne
lods
insl
xor
fldl
in
ret
lods
dec
mov
js
int3
lea
adc
dec
add
sub
aas
aam
ljmp
mov
mov
pusha
jp
dec
jno
add
inc
pop
xchg
sub
les
push
xchg
loopne
shll
pushf
insl
int
scas
aam
fs
gs
clc
mov
shlb
in
and
gs
fsub
dec
nop
je
mov
and
dec
repnz
inc
dec
sti
je
cwtl
aad
xlat
cwtl
gs
mov
push
jp
cmp
loope
jo
ds
jmp
inc
jg
mov
mov
adc
sbb
xor
ds
in
mov
lock
sti
lds
mov
dec
scas
leave
or
mov
les
rolb
movsl
pop
inc
daa
jg
loope
daa
jmp
or
xor
and
inc
repnz
test
xchg
gs
sbb
xchg
mull
cmp
outsb
push
sbb
inc
cli
xor
and
mov
jg
sbb
inc
mov
adc
das
cmpsl
scas
int
iret
divl
jmp
pusha
cmp
add
les
adc
mov
xchg
daa
jae
nop
xchg
jmp
sub
jbe
dec
loop
mov
mov
int3
inc
movb
into
pop
and
stos
iret
push
push
dec
xchg
jno
stos
pushw
seto
and
ja
push
in
ds
invd
xchg
cmpsl
dec
shl
adc
jge
mov
cmp
sub
mov
int3
ja
in
sub
xor
jae
jl
imul
add
mov
jbe
les
mov
cmpsb
lock
je
test
sub
push
jg
sbb
pusha
out
or
cmp
idiv
sub
pop
mov
pushf
leave
dec
outsl
xor
and
in
add
roll
dec
cmp
cmp
aam
dec
mov
push
loop
test
push
jb
ds
pusha
or
sti
jmp
and
lods
push
xchg
insl
repz
mov
and
lcall
fisttpll
xchg
imul
xchg
int
std
cld
mov
in
pop
add
pop
xchg
xor
lcall
scas
add
loopne
pop
stos
xor
mov
or
sbb
mov
jae
pop
jno
aas
adc
xor
mov
enter
jg
out
push
in
and
in
adc
aad
mov
sbb
xchg
lret
xlat
pushf
in
sahf
es
into
dec
leave
or
sub
jp
cmpsl
dec
ss
cld
add
pop
cmp
jno
icebp
jno
lods
lret
cmpb
jl
sti
loopne
or
in
lods
pop
xchg
arpl
das
push
in
outsl
aam
inc
sti
and
dec
xchg
mov
leave
cld
rclb
mov
jo
ja
iret
std
and
data16
or
inc
xor
pop
pop
lds
inc
xchg
shrb
in
fidivl
cmp
loop
or
xchg
mov
in
pop
jg
fwait
mov
xchg
adcb
adc
add
mov
jmp
sbb
mov
sub
add
xor
addl
cs
pusha
jmp
and
das
mov
mov
aaa
add
loopne
ret
stc
cld
mov
sbb
add
mov
pop
push
jno
mov
push
in
mov
shrb
mov
dec
cmp
lea
pop
or
mov
pop
mov
push
add
shrl
pop
inc
or
cmp
fistpll
pop
inc
hlt
test
mov
rorb
cmpb
or
xor
push
jmp
es
in
cmp
out
mov
push
test
hlt
adc
pop
lock
push
stos
or
cmp
testl
leave
sbb
imul
dec
add
cmpsb
mov
cli
mov
xor
call
jns
or
int3
out
aas
into
notb
and
loope
data16
testb
loope
clc
push
push
pop
sub
mov
pop
out
aaa
mov
pushf
xor
dec
pop
stos
int
mov
test
rcrl
popf
and
pop
jmp
cwtl
mov
std
xchg
icebp
std
mov
pop
fxch
mov
or
stos
stos
adc
xchg
mov
mov
mov
int
and
mov
push
adc
out
incb
mov
mov
xchg
aad
jge
mov
aad
and
cmp
and
push
mov
leave
fbld
stc
ret
ljmp
or
mov
mov
cmp
cmc
and
push
jno
jmp
adc
mov
mov
adc
outsl
or
int3
in
jg
push
jnp
mov
jmp
cld
ljmp
mov
push
dec
std
jl
cmp
or
imul
hlt
push
out
cmpsb
sub
inc
add
scas
cmpb
loop
std
rol
jp
loopne
loopne
add
mov
add
inc
aas
js
mov
shrd
nop
mov
cmpsl
push
mov
int3
sbb
cmp
or
pushf
ljmp
sbb
in
adc
sub
fsubrs
scas
movsb
movsb
add
cmp
mov
push
xchg
jb
gs
sub
inc
flds
ljmp
lods
ss
cld
lcall
jns
pop
mov
xor
sub
jp
inc
mov
mov
aad
gs
test
out
ret
ja
daa
push
test
pop
pop
test
pusha
leave
ret
and
lock
lahf
pop
loopne
jno
aam
and
jae
mov
cwtl
mov
outsb
movb
lret
or
pop
xor
dec
xchg
loope
mov
lea
inc
push
shlb
inc
ret
out
sbb
push
and
mov
es
dec
outsl
loop
or
imul
stos
mov
mov
in
aad
pop
es
fimuls
pop
push
orl
leave
sub
mov
int3
jo
cmp
push
push
ret
pop
push
pop
loope
jecxz
sbb
stc
cmp
gs
gs
addr16
cmp
and
fsubrl
sti
pop
mov
cmc
mov
data16
insl
mov
hlt
push
push
nop
cmpsb
loop
push
pop
fsub
fidivl
jo
lock
mov
mov
pop
inc
jp
sbb
repnz
call
push
loope
xchg
pop
push
imul
orl
test
fsubrl
sub
icebp
and
mov
jnp
mov
pop
test
out
fucomp
les
stos
cmc
push
fstl
fistps
xor
int3
andl
mov
les
mov
pushf
push
pop
jno
dec
rorl
jb
jl
mov
mov
mov
sub
sbb
cmp
inc
pop
sbb
into
jg
lods
sbb
loopne
inc
sti
mov
add
pop
je
xor
fcom
inc
lods
stos
rcr
iret
test
mov
add
jne
cmpsl
cmp
mov
imul
xchg
add
or
ret
xor
sbb
in
sbb
adc
push
mov
das
adc
mov
dec
cmp
sbb
cmp
fidivl
inc
pop
std
sarb
jae
and
addr16
xchg
inc
enter
fistpl
sti
es
pop
andl
outsl
add
and
fwait
sbb
sub
cmpsb
sub
and
ss
stc
lods
adc
lods
jmp
cmpsb
ror
or
xchg
xor
rcrb
inc
js
js
mov
mov
jp
das
pop
popf
push
imul
mov
push
sbb
inc
sub
cmc
mov
push
push
xchg
cli
movsb
mov
dec
add
outsb
add
adc
jns
aad
jmp
or
inc
stc
pop
pop
inc
pop
xor
mov
or
dec
xchg
push
mov
lods
fstpl
xchg
lret
test
or
lret
lock
or
adc
test
xchg
jb
out
inc
dec
lret
adc
test
adc
popf
lret
xchg
bound
mov
xlat
ja
pop
subb
pop
xor
lea
push
adcb
mov
adc
inc
jns
clc
test
inc
enter
push
decl
lods
add
stc
adc
push
dec
arpl
lds
jp
mov
or
pop
mov
fs
aaa
and
iret
push
jge
adc
dec
aad
subb
mov
mov
inc
stc
aas
pop
push
mov
add
outsl
push
jnp
cwtl
je
add
mov
in
push
dec
out
ret
jg
mov
shlb
pop
fdivl
cmp
pop
sahf
pop
jecxz
sub
shlb
scas
mov
dec
mov
jp
xchg
lcall
jmp
xchg
and
js
mov
shll
mov
aad
ret
xor
mov
fs
loopne
addr16
jbe
je
dec
mov
imul
mov
mov
pusha
mov
call
aas
shl
ficoms
dec
dec
and
out
push
add
mov
mov
mov
decl
outsb
cmc
out
xor
andl
fsubrl
dec
mov
push
sbb
dec
xchg
push
cli
scas
cli
jge
add
pop
sbb
sbb
outsb
lret
mov
push
je
xor
or
and
fisttpl
sbb
cmp
push
and
inc
adc
pop
pop
lea
hlt
xlat
scas
js
push
pop
cmp
cmpsl
jo
xchg
mov
cmp
xorl
jmp
inc
aaa
std
add
xlat
mov
lods
and
lds
sub
adc
stos
test
stos
pushf
in
mov
or
xchg
rorb
incl
pop
pop
xor
pop
stos
sub
cli
xchg
lret
es
out
mov
loope
sub
adc
rcrb
rorl
test
sub
xor
ljmp
cmp
dec
icebp
mov
pop
or
mov
sbb
test
and
jecxz
aaa
call
sbb
in
mov
or
mov
popf
xor
sti
sbb
flds
out
data16
outsl
loopne
mov
in
or
leave
ret
push
cmp
sti
dec
cmpb
iret
outsl
dec
sub
ret
ret
bound
jns
outsl
mov
sbb
cmpsl
pushf
push
xchg
and
adc
add
dec
sbb
fcmovu
ja
lods
mov
and
fiaddl
push
jl
cwtl
adc
js
adc
jns
sub
in
jle
xchg
scas
or
jmp
aas
add
sbb
or
out
push
call
pop
loop
pop
cmc
jne
ret
stos
pop
mov
out
mov
sub
sbb
cmp
lret
or
ja
ljmp
dec
cmpsb
cmpsl
test
push
lea
js
mull
andb
sub
mov
int
mov
pop
fldl
dec
xchg
mov
movsb
sbb
sbb
loope
add
xchg
sahf
lock
mov
stc
or
or
repz
push
add
cld
shlb
sbb
ret
and
int
mov
sahf
ja
mov
and
add
or
sub
into
fs
sbb
jbe
mov
fnstsw
out
clc
adc
pop
jl
bound
fsubl
sub
scas
mov
cmc
mov
lea
idivb
push
popf
cmpsb
cld
iret
pop
xchg
pop
test
inc
xor
enter
fstl
outsl
orl
inc
or
jb
fidivl
int3
cmp
or
xchg
ret
ds
into
leave
fwait
sub
push
mov
scas
and
mov
clc
mov
mov
es
jle
xor
jmp
cld
or
jne
cmpsb
subl
int
ja
jecxz
adc
stc
je
dec
das
cmpsl
ss
pop
and
popf
insl
and
xchg
push
in
push
dec
cmpsl
popa
mov
fsubrs
lcall
cld
xor
inc
sbb
test
mov
pusha
pop
cmc
jmp
lret
rorb
xlat
test
je
adc
sti
lods
mov
cltd
mov
push
sub
jge
dec
adc
lret
add
mov
mov
dec
ja
push
add
je
mov
pop
test
shrb
sbb
inc
push
xor
xchg
jno
orb
jle
popa
pop
ss
add
push
testl
es
nop
outsb
hlt
xor
mov
mov
push
pusha
pop
ror
xchg
jb
shlb
lret
mov
inc
test
lea
ret
fcmove
xlat
fs
push
scas
aaa
and
push
mov
int
xchg
aam
and
outsb
mov
ja
lret
add
lea
popa
adc
stos
scas
pop
cld
jecxz
pop
loope
jne
jno
adc
int3
movsb
xor
roll
push
mov
ds
nop
jno
mov
rcl
es
fucomip
xor
add
and
mov
xacquire
mov
fst
cmp
icebp
xchg
mov
fmull
das
mov
lock
shl
test
sti
xchg
add
adc
ror
imul
pushf
arpl
aam
add
jl
test
aad
inc
push
and
repnz
popf
inc
scas
aaa
out
push
mov
add
jge
jns
jne
jbe
leave
push
jle
mov
imul
imul
pop
pop
push
mov
inc
lahf
ret
fldcw
push
mov
jge
inc
aas
adc
iret
and
and
jl
sbbl
lds
xor
mov
adc
ja
mov
cmp
int
pushf
xchg
xor
push
sub
mov
push
sarb
mov
clc
sub
loopne
adc
out
push
testl
mov
cmp
std
push
inc
jge
lret
or
and
xor
cmpsb
sub
xchg
shll
repz
push
shll
sbb
lea
fwait
jo
scas
jecxz
sbb
gs
aam
pop
stos
rol
enter
test
pop
dec
jl
fimull
jmp
shrb
sub
cwtl
mov
mov
inc
push
stos
addr16
pop
or
xchg
orb
push
sub
xlat
int
mov
add
add
xchg
lret
stos
cli
adc
aas
insb
negl
mov
test
int
jns
shl
int3
lahf
adc
jg
out
ret
lret
add
xchg
inc
push
sarb
adc
test
inc
mov
mov
add
aad
xor
or
movsb
add
les
cs
xlat
sub
add
xor
pop
gs
mov
icebp
mov
inc
loope
mov
mov
sarb
jmp
fadd
outsl
cli
pop
bound
in
dec
loopne
ja
and
push
inc
shll
ss
mov
jmp
xor
mov
cmp
pop
negl
shll
es
nop
icebp
mov
pop
lret
or
add
fldcw
pop
mov
mov
insl
lods
ffree
add
or
inc
xor
mov
fldcw
jnp,pn
mov
shll
xor
cli
pop
inc
sub
into
adc
xchg
or
inc
fcmovbe
aam
arpl
mov
push
jb
xchg
imul
cmp
jb
jmp
pop
stos
mov
inc
jl
lea
mov
out
sub
enter
mov
in
bt
cmp
pop
xchg
cli
int
jne
push
test
cltd
jb
fxrstor
stos
inc
in
mov
pop
stc
movsb
cmp
test
les
fcmovnbe
clc
ss
arpl
mov
add
mov
push
add
dec
lods
aas
rcl
fst
sbb
jg
mov
pop
mov
mov
adc
div
jmp
je
or
dec
mov
xlat
jg
cwtl
ret
dec
fildll
or
xchg
push
mov
cmc
sbb
movsb
push
aam
xor
pop
scas
call
adc
lds
std
fsubrp
pop
or
push
enter
aam
mov
lods
dec
popa
notl
out
xor
sbb
adc
push
adc
sbb
mov
outsb
xchg
pop
or
adc
inc
xor
push
insb
or
push
mov
mov
and
cs
xor
loopne
arpl
leave
sub
test
test
push
pop
lea
std
cmc
roll
push
insb
push
pop
testl
pop
jg
cmp
mov
call
cmp
or
adc
mov
and
mov
mov
add
addl
adc
mov
sub
mov
in
pop
mov
fsubrs
jmp
push
hlt
or
inc
lea
lea
adc
mov
outsl
rorl
imul
or
movsl
repnz
xchg
lcall
jns
loop
pop
push
xor
mov
pop
ret
inc
xor
inc
sbb
ja
inc
pop
mov
mov
cmp
mov
mov
popl
mov
ds
gs
add
je
xchg
fldcw
das
sbb
adc
and
mov
imul
xor
mov
or
pop
lahf
or
and
lret
sub
dec
cmc
addr16
xlat
xchg
jae
jnp
sbb
fwait
push
sub
push
fucomip
push
testb
or
add
lea
mov
test
std
xchg
add
sbb
jecxz
and
jae
outsl
xor
pop
ljmp
stc
jle
fsts
les
mov
mov
jbe
push
dec
imul
scas
add
push
cmp
ljmp
jl,pt
push
es
inc
jb
ret
pop
xchg
pop
rolb
ljmp
dec
clc
inc
and
xor
outsl
push
push
mov
xchg
adc
pop
mov
std
push
inc
das
push
ss
dec
dec
mov
xor
imul
or
push
jmp
xchg
cld
sbb
testl
insl
ljmp
in
xchg
mov
lret
outsb
call
bound
sbb
iret
mov
and
loope
dec
fcoms
jne
aam
loopne
mov
add
dec
add
aaa
sub
sbb
in
mov
cmpb
fwait
add
loope
outsb
andb
and
adc
mov
fildll
inc
pop
mov
mov
repz
mov
mov
jp
aam
and
rorl
repz
pop
xor
repz
mov
std
bound
aaa
xchg
cltd
lahf
pop
jecxz
cmp
hlt
fildll
outsb
je
lock
popf
pop
add
inc
lret
mov
dec
aad
divb
bound
push
push
fs
jl
lods
out
mov
push
lock
mov
mov
add
pop
jno
test
xor
and
jp
cwtl
xchg
or
pop
adc
into
mov
and
xor
push
or
pop
cli
pop
cmp
fs
iret
or
push
and
testb
mov
jno
iret
jle
or
mov
pop
and
negl
sub
mov
outsl
loope
aaa
cld
and
iret
sbb
cmp
sub
jmp
adc
pop
stos
inc
test
pop
lods
scas
dec
sub
vmovshdup
inc
xorb
jae
mov
jno
or
cmpsb
and
clc
or
out
test
mov
sub
daa
pushf
mov
lcall
fistpll
js
cs
fsubr
jae
cmp
mov
push
mov
shlb
adc
std
insl
jo
int3
dec
mov
insb
stos
ss
shlb
inc
cmc
or
adc
ss
xchg
or
dec
stos
mov
inc
pop
or
inc
mov
dec
adc
shlb
pop
adc
test
sbb
mov
sbb
mov
ljmp
jmp
out
pop
aad
sub
loope
scas
in
test
push
xchg
fsubrl
scas
xor
sbb
inc
pop
sbb
dec
add
adc
test
fidivrl
sub
addl
push
mov
stc
or
xor
in
mov
and
out
jae
dec
testb
pop
leave
mov
pushf
pop
lock
inc
cmp
stc
mov
mov
out
loop
xchg
mov
in
lret
jbe
in
adc
movl
sbb
psrad
es
out
pop
leave
insl
mov
sbb
mov
sbb
adc
call
rcll
roll
xchg
mov
inc
pextrw
and
pop
lods
scas
pop
and
mov
adc
or
cs
daa
cld
jo
push
inc
xchg
xor
jno
sbb
adc
mov
rol
jns
xchg
insl
sub
jmp
xlat
or
rcll
xchg
mov
data16
scas
daa
cmp
int
bound
fcmovbe
sub
add
xchg
xlat
cs
pop
in
mov
mov
pop
iret
add
push
mov
dec
or
or
sbb
fs
push
cmpsl
outsl
lock
scas
xchg
pop
jl
js
movsb
add
stos
or
push
out
jp
rorb
in
mov
out
mov
xchg
xor
rcr
js
pminsw
or
rclb
mov
jne
sub
push
jns
cmp
scas
pop
xorl
or
les
add
xor
scas
call
outsl
or
inc
cmpsl
shll
loop
inc
inc
jecxz
and
mov
stos
xchg
into
push
jbe
push
insl
pop
in
or
jle
jnp
pop
jmp
inc
push
add
pop
dec
lcall
cmp
gs
adc
push
out
push
addb
or
sbb
stos
push
fadds
pusha
sub
int3
pop
pop
insb
inc
xlat
and
and
xor
jns
dec
add
and
adc
insb
cld
adc
xchg
fcmovbe
xchg
pushf
scas
xlat
pop
das
mov
insb
xor
cmp
push
imul
push
or
sub
mov
or
dec
mov
pop
mov
ficomps
std
adc
cmovs
stc
and
test
cli
xchg
adc
rcl
cltd
xchg
lods
jnp
cmpsb
in
fdivr
and
out
je
push
ret
lock
insb
mov
mov
pop
cmc
add
out
inc
out
cmp
into
popa
movsl
push
gs
nop
ja
dec
and
stos
mov
lock
movsl
out
mov
jns
mov
fld
aad
cmpsl
dec
mov
and
xchg
test
inc
dec
mov
push
xchg
mov
cmp
add
xchg
mov
sub
or
push
pop
jg
lods
cmpsl
mov
bound
jge
outsl
xchg
or
outsb
xlat
pop
mov
push
cs
pop
aad
xchg
ret
daa
xchg
add
or
xor
cld
addb
xchg
test
popf
dec
mov
pop
sub
mov
hlt
adc
into
jp
cmp
ret
xchg
in
jp
cmpb
test
in
jb
jns
mov
mov
xchg
inc
dec
inc
roll
andl
bound
inc
add
xchg
mov
scas
xchg
push
jnp
cmc
mov
mov
in
sub
cmpl
mov
cmpsl
dec
jp
gs
cli
sbb
loop
inc
jle
jl
mov
add
das
fs
sbb
mov
sub
fdivrs
adc
je
jo
scas
test
icebp
mov
xor
push
xor
test
pop
xor
dec
sbb
mov
xchg
repnz
pop
iret
mov
insb
or
push
jno
movsb
idivb
add
push
lds
cltd
mov
jnp
pop
movsb
xor
inc
dec
jb
testl
jnp
xchg
cli
mov
mov
pushf
repnz
sub
and
addr16
aam
push
push
bound
mov
das
dec
int
imul
push
js
xlat
mov
adc
movsb
inc
nop
cmp
aam
std
cli
jge
mov
pop
lret
ret
lock
gs
adc
lret
add
jnp
fstl
cmp
mov
adc
pop
and
inc
xlat
je
sbb
int
adcb
enter
inc
sbb
rcrb
je
cmp
push
xchg
cltd
idivb
call
sbb
cmp
mov
or
cltd
les
jo
jbe
mov
mov
sub
dec
cwtl
inc
pop
jp
pop
call
sbb
sbb
js
adc
sub
xchg
mov
fcoms
inc
stos
adc
lahf
pop
jg
aad
roll
fldl
xchg
enter
orl
mov
addb
push
adc
fistl
push
mov
arpl
ficoms
or
sub
pusha
cld
xor
imul
out
repz
in
sbb
sub
pop
and
in
push
lahf
push
fdivrl
cmp
nop
punpckldq
movsb
rorl
add
fsubrl
push
stos
cmpsl
xchg
sti
jg
jecxz
push
jno
dec
aaa
jge
mov
pop
push
or
outsl
sub
inc
and
mov
push
dec
leave
and
mov
mov
lahf
cmc
add
pusha
mov
mov
das
xchg
sbb
scas
scas
push
inc
pop
jl
adcl
clc
xor
fsts
dec
push
inc
pop
jmp
push
aaa
les
mov
outsl
mov
leave
xlat
jge
mov
pushf
dec
dec
xor
and
xchg
xor
inc
adc
out
andl
fldenv
mov
xor
cmpsb
addb
int3
xor
iret
insb
pop
adc
out
pusha
and
out
push
dec
mov
mov
mov
push
ret
mov
push
pop
pop
lahf
mov
add
pop
dec
dec
jbe
push
jbe
test
push
push
insl
jb
add
pusha
or
add
jle
add
outsl
cmp
ss
push
mov
test
lret
ficomps
popf
mov
call
xor
loop
push
mov
test
loope
sbb
dec
cltd
xchg
lds
test
pop
xchg
ss
and
call
outsb
add
scas
fistl
je
out
rorb
dec
movnti
xlat
adc
call
sbb
pop
xchg
push
lods
cli
mov
jae
loope
xchg
add
xor
sub
int3
jnp
and
pop
inc
push
inc
xchg
mov
insl
int3
pop
mull
call
cmp
adc
cltd
cmp
adc
mov
cmp
cmp
icebp
jnp
fs
mov
mov
cmpl
in
and
sbb
inc
xchg
aam
andl
jmp
loopne
mov
inc
ret
cmp
adc
scas
leave
test
adc
adc
fwait
stc
addr16
pop
sarb
xchg
mov
push
lods
jnp
dec
hlt
and
test
adc
mov
jno
dec
inc
mov
inc
inc
mov
jecxz
xlat
mov
imul
inc
fsubrs
mov
xchg
push
std
xor
push
iret
imul
mov
aas
adc
ret
cmp
or
mov
push
pop
mov
lods
or
xchg
jae
mov
repz
imul
jle
inc
orb
ret
in
popf
push
hlt
cmpsb
lea
xor
adc
out
jno
adcb
adc
add
das
cmpsl
test
mov
cmpl
notl
fldt
mov
pop
call
lret
xorb
sbb
mov
movsl
mov
and
mov
mov
in
out
inc
fdivl
cmp
jne
rorb
inc
popf
mov
aam
push
mov
frstor
into
addr16
sahf
addr16
push
xor
daa
mov
mov
xorb
daa
fs
dec
lret
xchg
or
insb
outsl
fs
fbstp
cmp
xchg
iret
movsl
je
test
popf
adc
ret
dec
cmpsb
fidivs
movl
adc
leave
test
out
les
push
loop
cmp
lahf
dec
jecxz
out
dec
cmp
je
stos
shll
dec
sahf
inc
sub
jmp
jge
test
in
roll
inc
bound
jb
and
pop
jbe
inc
das
mov
xchg
mov
cs
movsl
add
push
dec
xchg
cltd
pop
xor
cmp
cmp
mov
leave
adc
adc
pop
movsl
aas
hlt
add
stos
mov
lds
rcrl
lods
insb
bound
imul
stos
jne
scas
fs
shll
and
xor
fcomps
ffree
xchg
jg
js
jle
jecxz
pop
xchg
dec
add
imul
sub
push
mov
push
push
push
jne
or
addb
cmp
sbb
ret
cld
push
xchg
push
mov
fldt
scas
push
or
mov
scas
xchg
push
inc
arpl
ljmp
jb
dec
lds
aas
movl
loope
aam
mov
sbb
addr16
mov
pop
or
cmpsl
inc
adc
mov
adc
les
lds
dec
mov
js
int
cwtl
orl
out
mov
cmp
mov
shrw
sti
pop
pop
mov
mov
dec
cltd
test
outsl
imull
addr16
add
cmpsl
cmp
adc
jp
jmp
outsb
neg
pop
inc
mov
dec
dec
push
fcomip
sbb
ds
mov
out
movsl
ljmp
data16
ficoms
add
sbb
in
or
mov
repz
movsl
mov
push
pop
or
and
and
and
sub
inc
add
jmp
in
add
adc
or
xchg
popf
adc
loopne
arpl
mov
test
fdivl
mov
dec
pop
fmull
rcrl
lcall
inc
inc
sub
movsb
outsl
mov
push
or
loopne
and
jecxz
cmpsl
mov
dec
inc
ja
fisubs
mov
test
mov
mov
sub
ljmp
jb
mov
jns
in
xchg
mov
std
mov
sbb
and
hlt
push
roll
test
dec
andb
faddl
or
adc
mov
stos
in
jp
out
icebp
aas
xor
addr16
bound
je
mov
addr16
cmpl
outsl
lret
mov
xchg
jne
add
decl
mov
addr16
cmp
jns
fistpl
imul
pop
xor
dec
repz
cltd
ror
or
movsl
mov
jno
mov
lds
inc
cmp
clc
inc
or
pcmpeqb
xor
inc
movsl
lret
dec
jl
jmp
movsl
out
mov
pop
add
stc
outsb
inc
into
dec
mov
addb
fisubrl
mov
dec
cld
out
xchg
into
into
jnp
mov
mov
orb
clc
cs
push
in
nop
jecxz
cli
jge
in
sbb
fs
out
jne
sbb
in
cmp
out
push
out
rorl
fcompl
ret
mov
push
cld
push
push
dec
enter
stos
rorb
jge
popa
mov
fbstp
test
test
icebp
cmp
jne
pop
rclb
lcall
into
ljmp
lret
or
dec
dec
mov
fcoml
push
cld
jae
ret
scas
jb
rcr
les
jl
pusha
fsubl
int3
pop
cmp
and
fcompl
dec
cmp
sub
test
cmp
mov
js
jne
bound
mov
pushf
pop
insb
pop
lcall
jmp
cmp
sbb
lahf
fadd
dec
sbb
scas
lcall
enter
pop
xchg
jno
sbb
lret
loop
xor
xchg
popf
cs
aas
int
jo
mov
xor
leave
or
andb
cmc
scas
sbb
sub
cmp
or
mov
sbb
push
mov
mov
cltd
dec
incb
sub
add
ljmp
gs
shlw
and
pop
inc
jle
int3
arpl
in
jmp
push
or
mov
fimuls
push
out
into
es
dec
fs
or
mov
enter
mov
outsl
test
inc
xor
mov
movsb
hlt
xchg
jae
sub
ljmp
fildll
roll
outsb
add
jno
popa
shlb
pusha
push
cmp
decl
inc
sub
lcall
push
xchg
mov
sti
insb
mov
add
out
inc
cmp
ret
push
out
mov
jae
push
pop
pop
outsb
test
pushf
push
arpl
jle
cmp
sub
pop
scas
add
sub
xlat
nop
cmpl
sub
ljmp
lods
aam
pminsw
mov
into
fistpl
lods
add
cmp
lret
mov
cmp
inc
inc
jo
pop
and
pop
add
cmpsb
pop
dec
arpl
aaa
add
jle
pop
shlb
mov
not
pushf
das
pop
sub
xchg
jge
fcmovne
in
sarl
rcrl
pop
in
cmpsl
pop
loope
aam
sbb
stos
xchg
sbb
arpl
outsb
cli
mov
mov
xlat
cmpsl
sti
jo
int3
stos
xchg
mov
pop
xor
xor
jne
mov
js
jbe
cmpsl
loop
jp
insb
daa
xchg
ja
xor
scas
das
and
cli
cmpsl
ret
adc
xlat
outsl
xor
push
ret
stc
and
and
test
sbb
push
dec
lret
cli
je
fimull
jecxz
pushf
xor
nop
ljmp
and
push
fildll
test
sbb
in
inc
mov
mov
dec
cli
movsl
outsl
aas
inc
cmp
jne
lcall
sahf
in
push
ljmp
dec
iret
fsts
pop
add
test
insl
loope
stos
xor
add
shlb
push
jl
add
into
mov
cmc
mov
mov
sub
lods
pusha
jmp
sub
fdivr
xchg
pushl
in
aam
jmp
into
jge
dec
cld
mov
out
push
lods
mulb
aas
xor
icebp
andb
adcl
push
dec
out
mov
jg
sbb
sub
jo
incl
adc
pop
dec
sub
ljmp
in
jg
mov
push
push
xor
push
sub
fadds
shl
mov
imul
loope
adc
insb
sar
out
loop
dec
inc
xor
add
popf
mov
and
xchg
lahf
mov
mov
jmp
pusha
imul
cmp
cmp
into
cmp
pusha
cld
call
fwait
lahf
xchg
fldcw
repnz
adc
pop
push
add
ljmp
fistl
and
fs
push
mov
jp
lcall
push
inc
sub
push
jno
rolb
mov
cmp
dec
inc
pop
fcomps
and
and
ds
sub
inc
cs
imul
xchg
decb
aam
mov
sbb
aad
mov
pusha
fwait
stos
call
aas
xchg
adc
push
push
loopne
jecxz
test
or
cmc
jne
xchg
aam
xchg
xchg
or
xchg
xchg
jno
stc
add
mov
pop
stc
in
loop
outsl
and
rolb
lahf
jnp
and
mov
fisttpl
add
int3
jle
lds
xor
aaa
pop
test
lret
sti
sar
xor
mov
inc
xchg
xchg
ja
dec
mov
sub
aaa
mov
pop
mov
insb
inc
mov
pop
cmp
rol
sti
xchg
leave
mov
out
sub
jmp
adc
mov
je
call
xor
lods
cmp
and
push
aad
mov
je
fcomip
jb
test
icebp
ds
jle
popa
pop
test
pop
or
dec
dec
xor
cmpsb
inc
adc
cmp
mov
pop
mov
mov
adc
lret
nop
dec
scas
add
shrl
jno
std
outsb
adc
xchg
dec
movsl
test
mov
jl
scas
cmp
mov
test
and
movsb
sub
insb
inc
aam
fsubr
adc
stos
fsubl
scas
jle
and
cwtl
leave
adc
orb
leave
andb
push
xchg
std
mov
pop
add
dec
sub
ljmp
fsubrs
outsb
xor
rcll
daa
test
ja
dec
test
ret
rolb
lea
outsb
test
out
inc
out
sti
fwait
bound
sub
scas
rcr
rcr
stc
push
inc
icebp
jp
push
adc
mov
mov
repz
push
fcoml
fnstsw
mov
add
or
pop
imul
in
andl
mov
push
lds
loope
or
repz
inc
je
add
ja
jne
fsubrp
das
cmp
push
int3
jne
inc
sub
fs
push
cld
or
dec
nop
hlt
add
mov
out
cs
in
popa
mov
inc
push
ret
cwtl
pop
int
jae
fsubr
dec
add
stos
cs
ljmp
lds
dec
jne
mov
jp
push
aas
mov
add
ja
xchg
mov
sub
icebp
xchg
adc
sub
imul
movsb
or
loop
stos
add
je
mov
jnp
jle
je
je
dec
inc
or
pop
scas
lahf
popa
test
xor
aad
movsl
std
pusha
sub
std
ds
subl
outsb
daa
mov
or
pop
lods
fisubrl
test
ret
jp
ljmp
inc
sbbl
add
jle
fsubs
add
das
cli
lods
aad
xor
out
fcompl
sub
jbe
pop
push
inc
inc
xchg
push
push
mov
lcall
cmp
dec
negl
lahf
add
lods
mov
ficompl
dec
pop
outsl
les
and
imul
pop
and
cmc
das
push
lret
loopne
call
sbb
fs
xorl
xchg
sub
xchg
sub
popa
cmp
mov
dec
adc
adc
dec
arpl
lock
push
rorl
icebp
js
inc
push
gs
dec
aam
mov
jne
or
pop
xchg
hlt
addb
add
fstpt
negb
lea
adcl
mov
outsb
addb
pop
mov
add
out
ss
movsb
and
dec
data16
sahf
and
pusha
sahf
ror
sub
sbb
mov
lahf
sub
push
jmp
std
lret
nop
out
jb
int3
pop
pop
jns
jo
adc
stos
adc
mov
push
fucomip
and
jnp
xchg
push
lods
mov
xchg
mov
pop
xor
jmp
pop
sub
mov
cmp
jbe
jb
jge
pop
xchg
outsb
sub
imulb
xor
adc
or
pop
push
repnz
cmpb
dec
jno
mov
and
movsb
je
pop
cmp
pushf
cltd
cmp
or
pushf
and
add
lea
mov
sbb
cli
mov
ja
cmp
add
out
scas
decl
enter
mov
sub
popf
fstpl
and
mov
dec
pushf
xor
pushw
xchg
rep
adc
mov
jns
xchg
dec
clc
xchg
inc
outsb
and
xchg
pushf
das
mov
stos
xlat
insl
xchg
mov
mov
add
jecxz
sub
cmpsl
inc
outsl
sbb
andb
mov
stc
lods
adc
jae
mov
sti
push
mov
sbb
mov
les
sub
jg
push
mov
push
scas
sti
push
in
add
inc
sbb
es
loopne
fisubs
pop
int
add
add
dec
pop
or
mov
out
mov
test
cwtl
out
adcl
data16
rcrl
cmc
push
sti
inc
test
das
push
bound
cmp
ja
push
fwait
repz
mov
sbb
jne
data16
int3
popa
or
mov
pusha
lods
cs
lds
mov
mov
adc
lock
jae
mov
cs
out
inc
loope
sbb
adc
sbb
std
fucomp
or
adc
je
ret
mov
repz
push
mov
aam
mov
in
mov
shr
faddl
mov
xchg
sti
adc
xchg
or
or
roll
push
push
push
jo
lret
jae
imul
rcrl
inc
cmc
popa
lods
xlat
mov
mov
mov
lahf
rclb
aas
push
jbe
or
je
dec
xor
loope
rorl
xchg
loope
fnstenv
cli
int3
xchg
add
rclb
pop
lret
mov
xor
push
mov
out
pop
sti
mov
cli
jbe
cmp
xchg
or
out
lcall
mov
movsb
inc
add
jae
dec
pop
mov
push
fbld
add
cmc
cmpsl
stos
call
mov
rorl
jecxz
aam
into
jae
loop
pop
jo
lret
loop
icebp
mov
inc
sub
adc
xlat
push
xchg
addr16
in
enter
sarl
add
add
adc
leave
jle
in
mov
sbb
insl
scas
mov
lods
loope
or
push
sbb
fistl
jbe
sbb
aad
loope
cltd
cmp
lock
les
stos
outsb
add
insl
aad
jl
jo
sub
sbb
mov
jg
ret
mov
jb
dec
out
shll
cmp
rolb
rcll
mov
dec
fiadds
inc
jecxz
mov
ret
hlt
pop
mov
loopne
enter
mov
repnz
cli
movsb
and
mov
pop
in
or
mov
sti
dec
in
pop
mov
and
jecxz
les
repnz
and
mov
sub
pop
sub
fwait
jg
jnp
sub
mov
sbb
shr
in
aas
dec
loop
test
sub
or
gs
jmp
inc
or
ds
shl
xor
shrl
aas
dec
inc
outsb
shlb
cltd
nop
fs
in
xchg
push
ror
call
shr
test
jg
daa
fwait
lahf
and
daa
fistps
mov
inc
hlt
clc
sarl
out
mov
xor
xor
xchg
cld
andl
int3
out
jae
inc
pop
pop
mov
shlb
out
repnz
dec
enter
ds
ret
xor
push
incl
or
jp
enter
pusha
in
mov
inc
xor
mov
push
jns
cmpb
xchg
mov
push
inc
mov
ljmp
les
out
lods
or
aas
test
std
aad
aam
add
xchg
xlat
cwtl
adc
xor
aam
cld
adc
hlt
inc
mov
pop
jmp
ss
jns
lds
dec
lods
mov
inc
mov
gs
cmp
xchg
dec
jl
and
out
les
sbbb
cmp
cmp
fucomip
ret
in
fbstp
add
mov
imul
das
mov
data16
and
scas
mov
testl
leave
add
push
and
sbb
jp
fisubrl
xchg
mov
xor
sbb
arpl
out
in
icebp
scas
mov
or
push
movsb
jle
sar
push
in
pop
jbe
icebp
lahf
mov
inc
pop
adc
dec
pop
sarl
scas
xlat
loop
jno
adc
lods
fnstcw
int3
push
xchg
in
mov
cmpsb
aam
add
mov
mov
call
jp
sbb
and
lret
daa
and
das
daa
inc
dec
imul
aaa
mov
or
push
jmp
push
cmp
add
adc
enter
mov
loopne
sbb
jb
xlat
and
dec
test
aad
repz
shl
dec
xor
push
std
mov
test
ljmp
daa
insl
push
ljmp
lret
movsl
test
and
and
iret
and
mov
cwtl
sbb
dec
jns
outsl
pop
out
into
mov
std
push
pop
out
jl
icebp
out
and
mov
scas
xchg
xlat
jl
mov
and
lods
int3
jae
and
cmp
sahf
rorl
dec
mov
or
loopne
icebp
mov
je
mov
push
push
xor
mov
je
push
xor
xorl
mov
pop
mov
mov
or
into
push
lods
mov
gs
mov
cmp
rcl
mov
add
jnp
jb
mov
js
dec
push
cli
pushl
jmp
push
cmpsl
jb
les
cmpsl
mov
icebp
add
mov
ds
add
in
push
ucomiss
stc
and
fidivs
xor
les
loopne
loope
xchg
movsl
out
xchg
shll
mov
je
push
jbe
popf
xor
mov
or
sbb
fdivs
ja
int
mov
aam
jb
jp
mulb
pop
call
cmp
sub
fildl
jno
mov
leave
sti
mov
or
movsb
stos
mov
or
sub
fildll
in
outsb
sbb
or
dec
push
fisubrs
add
sbb
mov
sti
sub
mov
jecxz
cmpsl
jae
mov
mov
jmp
scas
sub
cmpsb
mov
dec
pop
jns
stos
fsts
push
in
pop
popf
pushf
loop
jae
fidivs
add
or
iret
dec
add
mov
adcl
cmc
call
cmp
jp
mov
js
rclb
int3
sub
xor
dec
adc
push
or
inc
mov
repz
or
out
cmp
out
jno
mov
stos
adcl
cmp
mov
pop
mov
add
leave
cmp
mov
fs
and
popa
and
stc
sbb
jb
mov
xchg
sub
imul
ss
xchg
divb
or
or
loope
orl
popf
inc
fstpt
pop
push
push
dec
dec
negb
xor
dec
ror
nop
int3
or
push
mov
mov
cmpb
xor
daa
mov
movsl
dec
mov
sbb
jle
outsb
les
adc
or
rorb
hlt
cmpl
jl
inc
leave
das
mov
hlt
cmpsb
jmp
stos
out
aad
cmp
mov
das
xchg
jp
insl
and
outsb
shrb
pop
and
xchg
lea
or
aas
add
das
jmp
insl
and
add
dec
inc
cld
push
fbstp
inc
sub
pop
mov
insl
xor
sub
dec
mov
jge
and
cli
test
mov
flds
das
pusha
fs
sbb
dec
add
pop
cmc
pop
mov
cmp
out
jnp
jmp
nop
or
add
jo
aad
dec
xchg
mov
es
call
and
daa
repz
add
adc
lea
rorl
fsts
pop
pop
testl
mov
sbb
cmpsl
int3
xlat
lea
hlt
repnz
mov
xchg
xchg
push
xchg
push
cmp
jge
pop
xor
lret
pop
jp
mov
lods
mov
inc
or
mov
fsts
lret
adc
sub
add
mov
fwait
inc
dec
mov
rol
dec
sbb
and
xchg
adc
push
jl
and
xor
lahf
cs
dec
addr16
in
pop
bound
sbb
vpsubsb
mov
inc
cmp
cmp
dec
jnp
lcall
sbb
mov
pop
push
mov
mov
aaa
lcall
lods
adc
stos
test
popa
pop
push
out
cmc
mov
addr16
idiv
inc
add
flds
pop
rorb
jmp
mov
push
leave
cmp
es
jp
pop
jecxz
lea
inc
pop
xor
adc
imul
sbb
mov
sarl
push
repz
fisttps
sub
outsl
pop
movsb
mov
insb
inc
mov
and
adc
dec
dec
call
fldenv
ljmp
lds
outsl
jmp
fcomi
xorb
mov
decl
and
adc
push
mov
in
and
stc
xchg
push
loopne
ret
ret
sub
xchg
or
popa
mov
je
sub
aas
mov
mov
jecxz
pop
ret
cli
or
mov
loop
and
adc
sbb
or
or
xor
jge
or
mov
mov
or
pop
mov
pop
test
cmp
adc
lcall
xor
pop
sbbl
ret
mov
mov
inc
decb
cs
sub
xor
fidivs
jne
sub
jb
mov
lcall
adc
adc
clc
ljmp
popa
xor
pop
pop
jmp
nop
xor
mov
sub
sbb
sub
jo
or
and
push
movsb
sub
push
xchg
xor
push
leavew
lret
repnz
xor
mov
adc
add
mov
test
or
xchg
mov
pop
push
add
mov
dec
pop
rcl
sti
rcr
inc
dec
push
stos
mov
fimull
push
and
mov
and
mov
sahf
push
jae
out
call
roll
jg
dec
cmp
inc
out
mov
mov
test
adc
mov
pop
mov
out
mov
push
enter
mov
into
iret
xchg
mov
shll
mov
js
imul
fisttpll
loop
fmuls
icebp
add
jb
outsb
fidivs
sbb
outsb
int
mov
cmpsb
stos
mov
inc
sti
mov
mov
sbb
add
rcll
jecxz
push
int3
jmp
add
add
aas
inc
cwtl
test
dec
sub
stos
ds
cmp
movb
lock
add
lahf
gs
dec
push
jb
stos
dec
cltd
dec
hlt
out
or
dec
jbe
push
push
sub
out
or
imul
mov
sti
mov
mov
fsubl
pushf
jl
add
pop
hlt
mov
outsl
gs
call
mov
out
add
scas
xchg
movsb
stc
mov
and
sub
int
cmc
or
ss
and
sub
leave
rclb
mov
out
test
or
add
mov
push
ret
mov
movsl
pusha
loopne
xchg
and
inc
adc
add
aam
inc
mov
mov
addl
mov
xchg
xchg
xor
int3
call
cli
es
addl
lds
and
outsl
lcall
push
push
mov
push
nop
sub
aad
mov
push
jmp
xlat
imul
adc
nop
and
pop
inc
ud1
pop
jmp
test
mov
scas
jle
cli
ljmp
sub
jp
add
add
add
aas
adc
repnz
xor
repz
hlt
adc
in
push
sub
and
out
jnp
push
sub
outsl
adc
add
cmovle
movsb
adc
jb
inc
adc
test
push
mov
xchg
lret
mov
mov
fidivrs
sbb
ret
out
imulb
movsl
dec
popf
fucomp
inc
inc
push
adc
jl
mov
iret
daa
mov
push
pop
aas
sbb
cltd
cmp
xor
repz
mov
cmp
or
xchg
in
dec
mov
push
add
subl
xlat
jmp
cmp
mov
imul
addl
movsl
xor
in
mov
fs
aaa
mov
xor
in
cld
pop
dec
or
ret
nop
idivl
insl
shlb
cmp
fs
or
pop
mov
sub
out
adc
cmpsb
cmp
testb
xor
add
fildl
popa
stos
cli
arpl
inc
in
jns
adc
push
in
push
or
xchg
nop
add
iret
sbb
mov
mov
xchg
fcompl
mov
xor
push
imul
cmpl
vcvtpd2dqx
mov
xchg
adc
dec
add
cltd
pushf
aas
mov
jg
cmp
sbb
push
in
insl
mov
daa
ja
das
imul
in
inc
js
sub
cltd
shll
rcll
adc
dec
ret
inc
adc
xor
pop
sub
cmc
outsb
hlt
shll
pop
sub
push
jmp
cmp
outsl
push
data16
mov
in
lret
xchg
pop
xlat
mov
pop
mov
cmp
xor
dec
test
ret
out
fcomp
scas
ljmp
jo
sbb
ss
unpckhps
mov
jl
clc
cld
mov
dec
mov
test
movsl
push
les
clc
jae
and
inc
xor
jp
call
jge
out
js
insb
xchg
enter
mov
mov
mov
repz
push
inc
dec
jae
aam
cmp
lods
scas
mov
cmp
pop
repnz
sub
push
sbb
lods
std
add
or
push
jmp
pop
push
dec
mov
mov
cmp
mov
add
or
cmp
adc
movsb
mov
mov
loopne
cmpsl
mov
xor
dec
lahf
fdivr
and
inc
fwait
lret
jg
push
lahf
arpl
cmp
mov
cmpsl
popf
fwait
xlat
jl
jne
mov
or
xor
add
bswap
divl
jle
jb
outsb
xchg
add
nop
dec
push
stos
repz
sbb
cli
xor
insl
ret
jmp
mov
sahf
mov
insw
sbb
cmp
pop
pop
test
clc
test
icebp
and
sarl
out
or
inc
jns
add
fs
push
push
movsl
mov
sbb
out
mov
int3
pop
in
jno
xchg
dec
jl
mov
or
add
rol
xchg
mov
scas
jb
daa
pop
push
mov
js
notl
jl
repnz
mov
and
inc
mov
xchg
sub
inc
pop
pop
add
push
or
bound
dec
cwtl
incb
loop
mov
xchg
lods
insl
sarl
out
pop
loop
loop
stos
pop
jns
or
sarb
nop
adc
sarb
jl
rorb
xor
cltd
mov
pop
dec
xor
ss
jecxz
pusha
inc
or
insb
jnp
jo
sub
inc
out
xor
pusha
push
addr16
lea
shll
outsl
dec
xchg
addb
pop
dec
scas
mov
in
fidivrs
sbb
test
out
pop
sahf
and
jae
push
push
cmpsl
jmp
push
fsubrl
bound
sbb
loop
aaa
fsub
cmp
sub
std
sub
mov
mov
ss
dec
data16
or
lret
mov
jp
mov
cmpsb
pop
mov
inc
add
outsb
and
rcrl
outsl
inc
lods
into
mov
daa
push
pop
add
inc
ror
lock
mov
sub
call
or
sbb
das
loop
jo
sub
cmp
mov
push
std
lds
int
int
fs
dec
xor
enter
dec
cmp
xchg
das
negb
add
mov
inc
push
sbbl
mov
out
rcll
stos
pop
shll
gs
cmp
test
scas
sub
punpcklwd
fisttpl
jo
mov
fs
mov
dec
push
or
lods
jg
jno
xor
outsl
fiadds
push
sbb
dec
or
add
rclb
inc
mov
jb
pusha
mov
xchg
popf
mov
pop
jae
subb
call
int3
rorl
jmp
mov
pop
or
cmp
cmp
daa
dec
push
cltd
repnz
aad
xchg
and
scas
dec
mov
cwtl
xor
je
push
cmpsb
rcrb
xchg
push
sarb
jecxz
xor
and
adc
xchg
inc
stc
cmc
je
or
mov
fnstcw
inc
mov
icebp
push
sub
or
xchg
pop
loope
test
lock
xchg
aad
push
test
inc
cmp
add
and
xchg
xor
adc
xor
and
pop
xor
into
jae
call
daa
cwtl
pop
cmp
cmpsb
pop
xorl
mov
pop
jae
jle
icebp
mov
pop
or
xor
ds
jp
je
cs
xchg
divl
pushf
jae
and
sbb
int3
iret
pop
mov
sbbl
leave
push
out
dec
xor
mov
mov
pop
sub
sub
inc
push
push
int3
sbb
je
sbb
imul
repnz
lret
ret
adc
jae
int
jg
pusha
pop
ret
xchg
push
loopne
out
add
pushf
bnd
and
dec
push
jae
jl
ret
adc
sbb
lcall
pop
cmp
cld
add
cld
add
jp
dec
inc
mov
inc
xchg
xlat
jns
mov
sbbl
scas
push
add
movsl
add
sbb
push
jns
push
popa
loop
xchg
cli
sahf
sarb
cmpsl
mov
inc
cld
and
int3
and
incb
push
xchg
dec
jmp
adc
mov
rol
xlat
jno
push
cmovg
jo
out
or
jmp
adc
jno
clc
push
pop
cld
add
hlt
cmpb
and
add
xchg
mov
push
dec
das
mov
pusha
dec
mov
lcall
jno
mov
in
lock
inc
add
cmpsl
xor
push
sbb
test
hlt
fidivrl
mov
cltd
cli
fstps
mov
fwait
or
insb
cmc
cltd
xor
scas
or
mov
mov
adc
add
cmpb
jmp
cmp
push
insl
andl
sub
aam
popf
lds
or
mov
fdiv
daa
loopne
xchg
mov
adc
decb
mov
scas
decl
dec
nop
mov
mov
adc
out
inc
stc
push
test
decl
fs
enter
pop
aam
aas
xlat
add
xchg
out
test
fstpt
idivl
les
inc
inc
clc
das
sub
mov
add
lcall
inc
pop
xchg
loope
andb
push
clc
jge
xor
fistpll
jle
xchg
and
jecxz
jp
jnp
ljmp
in
mov
xor
add
pop
xor
xchg
sub
loope
adc
lahf
add
pop
jmp
je
xor
mov
mov
jo
mov
data16
dec
les
pop
pop
push
jb
adc
sub
sub
sbb
int3
sub
sbb
inc
mov
jg
mov
xor
std
xor
lahf
fisttps
pop
aaa
mov
mov
and
xchg
fildll
cli
mov
and
das
or
sbb
jle
pop
cmp
dec
imul
cltd
aam
outsl
cmpl
cwtl
lods
loop
gs
pop
je
push
and
movsl
ds
data16
nop
dec
sub
rcrb
adc
mov
push
xchg
popf
out
lahf
insl
cmp
ret
sub
mov
pop
popaw
xor
outsb
mov
les
and
popf
aam
lcall
add
cmp
lahf
dec
std
and
outsl
adc
lret
inc
test
stos
cld
shrl
push
fmull
jb
scas
in
mov
fnstcw
stos
push
lret
cmp
hlt
push
and
xor
outsb
pop
stos
repnz
push
in
dec
rcr
in
ret
into
dec
lmsw
mov
dec
call
and
lods
pop
aaa
inc
lods
or
filds
cltd
mov
and
sbb
movsl
jmp
mov
mov
adc
xlat
cmpsl
add
imul
outsb
stos
shr
pop
add
add
sub
jecxz
jle
mov
mov
aas
adc
sub
mov
or
imul
das
int3
shrl
or
or
int
push
jns
and
sti
outsl
jbe
push
mov
decl
jno
mov
cmpsb
push
inc
adc
adc
bnd
fistpl
in
aam
ljmp
addr16
popf
add
jg
xchg
inc
jp
push
dec
or
dec
mov
mov
ljmp
fisubrl
mov
push
inc
mov
jmp
jp
inc
add
call
movl
inc
push
jp
ja
sarb
mov
dec
subb
xlat
mov
testl
jmp
nop
sub
enter
outsl
jno
cwtl
or
rol
or
jbe
inc
mov
and
in
pop
mov
or
sbb
push
jmp
inc
add
push
mov
arpl
xchg
xor
fisubrs
repz
ss
xchg
pavgw
inc
inc
adc
leave
sub
sbb
mov
cltd
xchg
fwait
andl
orl
xor
dec
gs
into
mov
adc
in
dec
shl
xchg
xor
popf
inc
cld
dec
add
mov
jge
lret
jno
scas
lock
dec
in
es
imul
xchg
xor
into
cmp
cli
or
jne
push
push
push
xchg
or
or
push
sbb
mov
wrmsr
fs
shlb
mov
push
insl
sub
mov
mov
fimull
ret
mov
dec
or
lods
lods
add
push
repz
dec
sar
jns
sbb
jae
mov
outsb
mov
push
mov
mov
sti
loop
adc
test
sub
aaa
inc
dec
fidivrs
xchg
ljmp
mov
mov
scas
push
sbb
lcall
mov
cli
movsb
lods
push
stos
push
sub
fldt
mov
loop
inc
jg
or
add
bound
repnz
xor
loope
stos
fadd
fisttps
xchg
jbe
outsl
jg
ret
jl
push
xchg
cmp
bound
add
add
push
in
adc
sub
aad
or
adc
and
or
in
movsl
movsl
push
xchg
decl
mov
loope
movsb
inc
sbb
jecxz
pop
mov
or
repz
scas
xchg
xchg
and
repnz
leave
mov
ljmp
std
loopne
sbb
aas
stc
bnd
shl
add
xchg
dec
mov
loop
xchg
lds
filds
xor
mov
xor
push
iret
pop
adc
mov
xlat
xchg
getsec
mov
mov
enter
mov
out
push
pop
mov
or
stos
hlt
aas
adc
mov
dec
in
dec
and
popf
ja
add
cmp
test
push
pusha
cld
lahf
mov
in
dec
addr16
push
int3
push
push
inc
imul
and
mov
loop
shl
mov
cmp
cmpsb
mov
pop
jmp
shl
adc
xchg
ja
inc
insb
mov
xchg
or
add
cmp
push
add
pop
dec
popf
cmp
cltd
xchg
lahf
pop
stos
sbb
xchg
andl
sub
dec
popa
aas
and
cltd
in
lods
jmp
mull
cmpsb
and
add
test
in
mov
push
inc
les
jmp
dec
sbb
xchg
orl
fsubl
and
scas
mov
sub
dec
dec
mov
sub
push
or
sub
xchg
aaa
mov
or
lods
int3
out
and
shll
pop
sbb
jecxz
sub
rcrb
dec
and
mov
bound
test
out
pop
cwtl
mov
fsubs
aaa
sbb
out
sbb
mov
int3
mov
test
outsl
pop
or
jle
lock
cmc
jle
xlat
xlat
in
jno
mov
push
cltd
push
addb
push
lods
std
fisttps
or
or
sahf
xchg
cltd
mov
hlt
insb
out
cwtl
nop
sub
ret
mov
push
jne
pop
aas
mov
ja
jp
adc
cli
clc
cmpsb
ss
lcall
xor
mov
xor
sbb
cmpl
jge
imul
xlat
and
xchg
cltd
fbstp
xchg
dec
jne
inc
jmp
outsb
push
or
cmpsb
mov
mul
mov
pop
fildll
sbb
out
add
or
out
fwait
out
mov
lret
adc
xchg
xor
or
int3
mov
push
sti
push
xchg
dec
pop
adc
sub
sbb
lret
nop
or
cmp
nop
mov
mov
push
fistps
dec
lock
dec
out
push
inc
pop
cmp
imul
hlt
xchg
es
push
xchg
cmc
pushl
out
out
jle
pop
cltd
shrl
inc
sbb
push
jnp
jg,pn
inc
push
ret
fcomps
cltd
push
mov
sub
dec
xor
xchg
scas
shrb
lea
xchg
push
xor
test
inc
mov
mov
cmp
popf
pop
je
jb
push
mov
and
loopne
mov
sbb
movsl
mov
push
adc
in
jb
into
movsl
push
push
test
inc
adc
lods
scas
shll
fcmovu
xchg
cmp
cs
mov
mov
adc
sahf
into
sub
cli
and
or
ret
xchg
dec
jp
cmc
je
imul
pop
jge
loop
pop
push
push
mov
je
lret
call
fs
push
imul
mov
lea
leave
cmp
lret
and
mov
push
xor
dec
lock
movsl
adc
sbb
repz
sub
sbbl
sbb
mov
sbb
or
sub
push
nop
sbb
fstpl
daa
rcl
lds
mov
sbb
cmp
shl
push
mov
adc
mov
xchg
lods
ds
punpckldq
popa
pop
out
mov
mov
cld
xchg
push
sub
cld
enter
xchg
lock
ret
insb
xchg
aad
shll
sub
addl
push
xor
or
lahf
inc
and
stos
sbb
mov
inc
out
push
xchg
and
mov
stos
loop
cmpsb
ret
jecxz
aas
out
xor
sub
dec
jle
sahf
push
mov
cli
add
std
mov
loope
xor
mov
fisttpl
popf
insb
decl
sub
in
fs
mov
mov
scas
sub
cmp
dec
sub
sbb
insb
sub
aam
pushf
lods
mov
jp
ljmp
cmp
cmp
jl
push
xchg
arpl
pcmpeqb
les
xor
mov
and
push
or
inc
stos
xchg
in
push
lret
clc
jne
out
fldt
ljmp
push
adc
outsl
xchg
leave
jp
xchg
lds
sbbl
cwtl
pop
pusha
mov
mov
fnstsw
test
test
cmp
inc
xor
aad
std
add
xor
daa
lds
xchg
rclb
push
dec
out
repz
gs
push
fldl
mov
add
ljmp
cmc
mov
aaa
sub
pop
leave
aas
enter
fnstsw
xor
pop
mov
scas
nop
outsl
lret
mov
stos
dec
mov
es
std
mov
inc
pop
cmpsl
stos
dec
rcrl
mov
add
jae
or
sbb
mov
in
lret
xor
inc
js
pop
jp
loopne
cmp
xor
dec
jmp
ss
sbb
sbb
test
add
adc
pop
popa
pop
paddusb
stos
loope
adc
test
insl
mov
or
iret
xor
pusha
lahf
mov
jmp
dec
les
fists
xchg
lret
jle
and
loop
imul
lret
ret
adc
jmp
mov
aas
addr16
movsl
ret
jmp
in
dec
maskmovq
imull
jb
jmp
mov
fldenv
fisttpl
xchg
dec
mov
in
xorl
ja
push
mov
sbb
test
or
fldt
ljmp
ljmp
inc
scas
subb
add
pop
xchg
inc
lods
fisttps
push
clc
popf
adc
adc
cmp
mov
pop
outsb
cmp
or
cmp
shrl
push
push
int3
jo
je
cmp
cmp
orl
adc
pop
pop
add
xchg
ds
adc
pop
pushf
inc
xor
cwtl
std
in
lret
mov
push
fnsave
test
pop
lea
xchg
add
insl
xchg
ficompl
jnp
add
pop
fbstp
scas
lret
lahf
sarl
lea
ljmp
adc
mov
push
pop
es
shll
dec
in
mull
inc
jns
inc
push
mov
dec
ss
lcall
xchg
dec
lock
cmp
pop
mov
adc
pop
sbb
sub
clc
lret
rcrl
sbb
stos
sarl
nop
pop
js
xchg
clc
xchg
mov
inc
addr16
out
push
jp
push
fnstsw
mov
or
pop
fistps
lret
ja
xchg
add
or
inc
hlt
mov
inc
in
fs
into
mov
imul
mov
adc
pop
filds
pop
mov
movsb
xor
inc
sbbl
inc
pop
xlat
pop
cmc
loopne
xchg
sub
enter
inc
pop
shrl
push
popa
lcall
out
push
sbb
fldt
arpl
mov
sahf
insl
fldenv
add
bound
pop
or
idivb
movsb
jecxz
sub
xor
mov
aaa
dec
fwait
cs
aas
add
popf
and
inc
jecxz
out
add
rcll
push
mov
dec
int
add
int3
mov
shl
pop
fimuls
mov
sub
test
xchg
cmpsb
mov
ss
mov
pop
out
cmp
fstpt
sbb
jbe
out
mov
adc
sbb
sub
jne
ror
nop
jge
pop
les
push
imul
jns
test
dec
jo
mov
sbb
in
inc
pop
xor
idiv
lods
inc
arpl
cltd
outsb
cmp
push
ja
cmpsl
adc
mov
sub
add
ds
xchg
mov
rclb
imul
rcll
call
pop
jmp
aad
sahf
jo
mov
adc
inc
jno
dec
and
fisubrs
aas
add
xor
loopew
pop
jg
int3
in
das
mov
pushl
lret
ja
push
sub
fstpl
or
sbb
shlb
cmp
in
sbbl
push
fnstcw
out
xchg
and
sbb
mov
fidivrs
outsb
mov
aaa
lcall
lahf
sbb
iret
insl
jns
lds
ljmp
jge
js
into
mov
push
lret
icebp
arpl
dec
pusha
leave
fistl
and
inc
sub
or
jbe
arpl
xchg
ds
andb
mov
lea
lods
mov
fdivrl
mov
packssdw
sub
popf
adc
daa
in
pushfw
idivl
ljmp
mov
mov
cli
and
daa
les
xchg
fwait
inc
inc
daa
aad
push
sub
xor
ljmp
popf
flds
dec
out
pusha
and
mov
xor
mov
inc
xchg
sbb
push
inc
fistpll
cmp
lret
ds
scas
xor
push
outsb
popf
push
sahf
pop
or
in
fnstcw
and
xor
in
scas
jg
leave
enter
sub
test
add
imul
xlat
icebp
ja
clc
sbb
lret
and
into
pop
or
or
shll
mov
jle
inc
pop
jbe
pop
or
or
mov
stos
xchg
stc
dec
push
das
aas
jns
and
iret
ds
cli
faddl
jg
jg
mov
jo
push
mov
andl
and
inc
lea
sbbl
ret
pop
scas
rcrl
adc
aaa
ret
pop
jmp
pusha
loop
jb
sarl
push
xchg
imul
sar
sbb
mov
and
xchg
aas
inc
sahf
aad
stc
mulb
jbe
and
subw
xchg
int3
cmp
into
sbb
iret
push
test
in
xor
cmc
aam
or
sub
addb
sbb
fcom
mov
xchg
mull
push
sub
jne
mov
xor
sbb
push
cmovno
test
inc
xor
jmp
inc
pop
jecxz
test
pop
clc
rorb
mov
lcall
in
pop
lret
xchg
pop
and
push
dec
mov
daa
psubb
das
or
sub
or
cmp
dec
clc
xchg
cli
fwait
dec
sbb
lahf
adc
and
repnz
stc
filds
scas
push
pop
rcll
inc
xlat
leave
dec
cs
shl
xor
shrb
jne
pop
push
adc
jbe
xor
cs
and
sbb
dec
mov
inc
mov
cltd
int3
inc
in
ds
and
fistpll
insl
push
lahf
out
sub
sub
push
fistps
fstl
pop
cmpsb
add
cli
mov
jecxz
cli
outsb
pop
cmpsb
jns
mov
lahf
sub
pop
int
dec
mov
cmp
aad
shr
pusha
fcomps
aad
sbb
out
inc
xchg
mov
gs
cltd
lods
push
outsb
test
addb
mov
ja
mov
fdiv
and
cmp
mov
pop
sbb
cmp
cmp
in
mov
loopne
xchg
cmp
pop
mov
ret
int
icebp
pushf
pushf
clc
andl
jns
push
loop
incb
outsb
fisubl
or
xor
push
je
sub
add
lds
scas
dec
lret
add
aas
outsb
xchg
mov
mov
movsl
clc
js
push
fidivs
jnp
xchg
sbb
and
arpl
sub
dec
pop
mov
pop
fsts
cmp
lods
push
push
pop
shll
mov
imul
sbb
sahf
xor
pop
inc
clc
sbb
icebp
filds
ljmp
xchg
push
mov
inc
jp
arpl
in
push
pop
rcl
loope
movsb
sbb
jp
test
popf
stos
add
dec
jnp
hlt
push
daa
pop
stos
jb
hlt
mov
dec
sub
sbb
push
inc
mov
out
mov
loope
addr16
jle
mov
or
xor
pop
js
jle
scas
fsubs
loope
inc
cltd
lods
cmp
push
pop
push
xchg
test
mov
pop
push
adc
mov
mov
ljmp
pop
mov
fiaddl
cmp
data16
and
mov
push
cmp
into
in
xchg
test
daa
pop
push
cmp
dec
pop
iret
inc
jmp
sahf
aad
daa
lods
and
dec
les
cmp
js
lock
inc
icebp
imul
cmp
push
inc
jnp
insl
loope
js
outsl
cwtl
pop
out
push
or
or
push
mov
ja
jl
mov
mov
ja
dec
pop
and
xor
orl
das
or
je
icebp
cmpsb
cmp
addr16
xchg
aam
jae
test
push
mov
xchg
shll
fldt
pushf
push
xor
loope
fsubrl
in
in
fs
mov
ret
repz
fmull
jl
cmp
ljmp
inc
inc
rolb
jecxz
jg
sub
or
or
add
mov
add
cmp
gs
or
imul
sbb
movsl
mov
popf
subl
stos
in
jns
aad
push
data16
je
cmp
or
dec
test
mov
mov
popf
adc
push
pop
outsb
sbb
sub
jle,pn
imul
scas
lods
lods
movsb
daa
push
test
lock
scas
cwtl
sub
push
push
xchg
orl
adc
or
dec
aaa
aam
dec
stos
pusha
dec
mov
ficompl
xchg
mov
out
cmp
adc
cmp
push
imul
sub
jae
movsl
mov
ja
sahf
imul
sub
call
aam
and
xlat
pop
sub
xor
push
inc
out
lock
dec
adc
mov
mov
test
test
popa
jno
add
sub
outsb
mov
fstpt
pop
mov
ret
mov
inc
jnp
sub
shl
lods
scas
xchg
add
dec
mov
cmp
negb
shlb
lods
clc
inc
lds
sbb
push
cmp
push
dec
xchg
ss
std
movsl
and
sub
andl
std
jge
outsl
mov
or
fwait
xlat
jge
jnp
mov
loope
xchg
das
xor
std
sbb
mov
call
and
cli
mov
call
mov
push
dec
scas
notl
jmp
push
imul
cs
into
popf
enter
out
dec
cmp
js
out
packssdw
popa
push
and
fcomps
testb
pop
xor
sbb
test
lret
xchg
and
mov
hlt
mov
pop
fstp
iret
mov
mov
jns
xlat
lcall
sbb
nop
mov
scas
pop
inc
fistl
out
mov
push
fisttps
mov
imul
and
jbe
shll
mov
out
stc
cltd
addl
sbb
rcl
sarb
mov
daa
adc
arpl
pop
lods
dec
cmpsl
andl
mov
neg
loope
js
mov
aad
pop
stos
cwtl
inc
sub
jmp
add
test
or
mov
mov
and
mov
and
out
sbb
idivl
imul
addr16
subb
cwtl
test
xor
jbe
enter
mov
std
dec
andb
dec
pop
clc
lret
adc
movsl
loope
dec
cltd
jle
lock
push
adc
into
add
les
dec
call
inc
or
pop
in
inc
fnstenv
pop
in
je
mov
stos
lea
shrb
cli
add
call
lcall
adc
icebp
cmpsl
cmp
cmp
rcrl
jl
mov
and
xchg
or
mov
fstpt
adc
lods
or
cmc
in
gs
lods
sub
mov
xor
aas
jg
push
aad
fnstenv
fbstp
xor
iretw
pop
cmp
mov
pusha
push
mov
roll
shrb
fsts
xchg
pop
mov
mov
jl
loopne
cs
sbb
mov
mov
ret
sub
sbb
rolb
add
dec
or
add
fmuls
call
cwtl
cmp
test
pushf
xor
stos
les
jns
hlt
popf
mov
jno
xor
icebp
mov
sbb
lods
addb
rol
inc
push
outsb
insl
jl
push
pop
lret
rcrb
jae
adc
ret
in
jmp
pop
loope
xchg
inc
rcll
mov
cmpsb
hlt
shl
popl
fistps
inc
mov
xor
in
pop
jl
sbb
mov
cli
push
test
insb
jno
mov
cmp
jbe
mov
mov
mov
push
mov
or
cli
iret
add
sub
xchg
loope
ret
aam
cmpsl
adc
add
cmp
pusha
cmpsb
mov
xchg
fidivl
pop
mov
dec
mov
adc
pop
jne
or
shlb
iret
ljmp
cwtl
mov
sarb
adc
loope
jns
ljmp
jl
shl
mov
sub
fs
test
mov
mov
xchg
inc
dec
or
mov
inc
fmulp
xor
mov
push
sub
inc
sbb
je
enter
cld
test
test
ret
sub
pop
adc
inc
sbb
repz
dec
sbb
filds
jo
mov
cld
sub
loop
adc
fiaddl
sub
fwait
push
pop
jle
jge
lods
jp
mov
rcrl
adc
out
jnp
filds
jmp
fidivrl
je
subl
shrb
inc
mov
mov
jg
shl
scas
dec
pop
daa
in
popf
or
pop
data16
loope
ret
xchg
aas
pop
adc
cs
inc
fcos
push
xchg
int
dec
sub
je
insl
xlat
lods
data16
sub
shrl
inc
pop
xor
data16
or
mov
mov
push
add
pop
cmp
xor
ret
cmpsl
pusha
sahf
fidivrl
movsb
lea
sahf
jo
stos
cmp
xor
sub
test
nop
ljmp
dec
add
ljmp
inc
hlt
inc
mov
dec
xor
pop
int3
jno
and
ret
ja
sub
xchg
inc
leave
es
je
dec
out
pop
sub
stc
pushl
adcl
out
lret
adc
xchg
lods
jmp
pop
adc
mov
stos
pop
jb
pushf
test
lock
mov
jp
loopne
mov
mov
jg
cmp
push
add
out
push
scas
push
dec
es
jle
adc
popa
mov
sti
add
mov
dec
xlat
xor
cmp
leave
sub
frstor
pop
cmpsl
and
scas
mov
loopne
loopne
jp
lcall
add
mov
repnz
add
fistpll
xorl
movaps
and
aas
inc
push
out
rcr
out
scas
add
push
ret
insb
mov
in
test
scas
adc
xchg
mov
push
xchg
leave
shrl
pop
inc
mov
jge
dec
mov
jmp
sub
out
and
mov
adc
mov
and
xchg
or
add
push
aas
mulb
divb
movsb
adc
mov
push
repz
add
in
dec
push
cmp
mov
mov
mov
lea
inc
mov
insb
ss
das
push
sbb
insl
stc
inc
push
sti
dec
outsl
iret
xchg
adc
dec
cmp
and
repnz
aam
ds
jno
orl
lods
out
rorl
push
shlb
dec
mov
push
push
pop
ljmp
and
stos
mov
adc
xchg
sarb
mov
or
ja
push
jno
xorb
aam
shrl
add
ror
pop
lock
jecxz
inc
or
xlat
mov
xor
insl
add
xlat
imul
push
push
dec
mov
push
pop
or
xor
rclb
or
jle
movsb
int
arpl
jg
mov
add
test
mov
pop
rclb
jnp
fwait
lcall
cs
inc
jp
mov
sub
movsl
cmc
push
pop
into
dec
mov
mov
xchg
enter
inc
into
pushf
sbb
or
pop
xchg
cwtl
fsubs
mov
mov
ror
add
ljmp
cltd
daa
or
push
cmp
jns
jle
inc
and
push
fidivl
dec
push
push
ja
push
mov
pop
push
repnz
aad
pop
in
fidivs
xchg
push
in
hlt
push
ljmp
fs
and
jge
cs
inc
je
xor
outsl
xchg
and
cmc
cmc
dec
scas
sub
mov
adc
dec
pop
in
call
loop
mov
lret
push
je
mov
cmp
dec
mov
ljmp
aaa
jae
xorl
daa
lcall
jecxz
mov
test
inc
push
pop
orl
add
inc
mov
add
and
mov
out
inc
push
sbb
iret
pop
mov
repz
dec
sbb
fadds
lods
sub
and
cli
push
daa
test
xchg
pop
xorb
or
add
cmp
leave
xchg
cmovo
inc
add
inc
jbe
adcb
sbb
loopne
jbe
push
icebp
fistl
mov
ret
add
rclb
adc
mov
test
xchg
adc
mov
mov
inc
int3
xchg
fistpll
not
and
sbb
insl
dec
call
fcoms
in
popa
bound
pushf
loop
add
mov
push
dec
movlhps
arpl
add
xchg
andb
je
dec
cld
sahf
mov
mov
lcall
fnsave
out
or
int3
fs
mov
cmp
dec
ljmp
lods
xchg
iret
test
adc
mov
mov
lea
pop
mov
fsub
aas
mov
push
pop
div
fadds
shrl
hlt
pop
lds
xchg
inc
sub
in
addr16
ret
scas
out
cmp
and
lahf
jl
add
repnz
add
cmc
or
imul
out
dec
or
cmp
std
mov
int3
adc
cmp
lret
mov
xchg
xchg
xchg
scas
or
sbbb
mov
cs
ja
mov
movsl
push
pusha
in
adcb
push
shrl
sub
dec
sbb
pop
jp
jns
mov
out
cmp
cmp
pop
int
jle
mov
jne
and
fsubr
mov
push
repz
rcl
cld
pushf
stos
popa
push
xor
insl
sub
rcll
xor
das
iret
push
mov
repz
sbb
ret
ret
mov
and
adc
cmpsl
movsl
cltd
cmp
or
std
fs
and
stc
sub
xor
push
iret
shl
and
dec
in
in
adcb
jns
push
insb
or
lcall
mov
cmp
gs
push
mov
cmpsl
sbb
cmp
lahf
sub
subl
jmp
mov
adc
cltd
xor
leave
sbb
sahf
addr16
popf
mov
enter
push
fmull
jno
shrb
mov
data16
rorb
movsb
sbb
inc
dec
add
or
inc
imul
mov
adc
outsl
ret
inc
inc
inc
pop
adc
filds
rcl
mov
jne
sub
mov
std
mov
rcr
pop
icebp
add
inc
push
shll
cmpsb
fisubl
sub
in
cli
cmp
imul
rcl
test
inc
out
add
loopne
push
mov
and
les
hlt
ficoml
sarl
pop
jb
inc
sbb
jmp
sbb
out
js
rcrb
push
mov
inc
cmp
cmpsb
jb
mov
cli
cs
mull
inc
jmp
cmp
add
lods
push
lods
sbb
and
mov
lea
popf
adc
loop
data16
in
or
insb
cmp
xchg
sub
sahf
imul
jo
fdivrs
pop
cmp
insl
loop
jecxz
repz
add
push
jmp
repnz
ret
out
arpl
lcall
lds
jecxz
clc
sbb
push
mov
mov
jb
or
leave
push
pop
mov
mov
imul
divl
push
cmp
mov
addr16
push
fbld
mov
inc
outsb
jbe
aaa
ss
pop
mov
sub
decl
fcom
xchg
add
mov
xchg
or
fwait
push
or
pop
mov
out
roll
jl
shlb
cmp
lcall
fisttps
add
testl
mov
xlat
mov
push
cld
add
iret
shll
sarl
push
rcrb
fisttpl
xchg
inc
jnp
ds
leave
dec
std
cmc
popf
sahf
inc
dec
xchg
ljmp
fdivrs
cmp
mov
add
imul
or
cltd
and
push
jmp
cmp
aas
aam
stos
lods
sti
mov
or
mov
dec
xor
mov
pop
dec
movsb
cs
add
push
mov
fsubs
sub
scas
pop
std
repnz
fcmovbe
dec
push
mov
je
scas
xchg
fcoml
aas
lods
clc
out
std
jo
pop
fnstsw
cmc
mov
out
call
mov
hlt
mov
pop
int
in
push
insl
xlat
insb
inc
jmp
xchg
aad
sbb
xor
lahf
pop
negl
dec
and
xor
jge
lock
push
mov
xchg
cli
shlb
jo
outsl
out
int3
int
adcl
cmpsl
mov
pop
xor
test
das
sbb
adc
lahf
mov
inc
in
into
xchg
frstor
xchg
inc
aaa
je
fistpll
adc
rcr
jns
shrl
jbe
loope
insb
insb
push
js
add
sub
test
mov
fcmovu
rcr
fldl
gs
lea
loope
outsl
xchg
cltd
sub
fwait
jb
add
or
inc
aaa
push
push
imul
xor
xchg
and
cltd
out
push
movsl
addr16
sub
pop
cld
out
repz
pusha
pop
sahf
outsl
pushw
or
imul
dec
cld
mov
insl
fidivrs
mov
sub
loopne
outsb
pusha
mov
gs
add
cmc
lahf
mov
sub
cld
adc
lock
dec
pop
fisttpll
inc
push
adc
addb
push
addr16
mov
std
pop
adc
push
sub
in
mov
or
adc
clc
loopne
jnp
push
pop
adc
cmc
aad
pop
mov
push
and
and
jmp
mov
mov
add
stos
bound
pop
test
fdivr
jo
in
cmp
pop
push
sub
or
loop
mov
jno
pop
aas
jnp
pop
push
sub
loope
insb
push
ja
pop
mov
pop
fdiv
std
sarl
push
ja
nop
sbb
mov
add
push
ja
sub
xor
inc
int3
arpl
cld
pop
fcoml
test
in
imul
movsb
into
and
test
adc
mov
mov
or
push
into
mov
sub
jg
or
add
mov
test
out
popf
pushf
inc
movsl
movsl
mov
pop
test
mov
cli
push
and
and
stos
call
mov
sbb
shrl
ret
unpckhps
or
repz
jnp
lret
xlat
pop
jne,pt
push
mov
mov
sub
test
imul
mov
mov
lds
lret
out
push
sbb
fneni(8087
lret
push
in
fptan
ja
sub
sbb
outsb
cmp
mov
mov
push
or
xchg
cmp
inc
cmp
scas
pop
push
adc
sbbb
cmp
sbb
subb
jg
ficompl
fcomps
pop
mov
fs
js
out
lods
loope
add
mov
sbb
mov
sahf
test
mov
out
mov
popf
loop
outsl
xchg
cs
insl
leave
rolb
mov
jmp
jno
adc
jne
pop
push
mov
in
jbe
ss
testb
iret
std
sbb
mov
inc
sbb
jg
push
xor
cltd
outsb
psubsw
mov
cmp
jle
cmpsl
or
mov
rorl
nop
js
and
rcrl
flds
dec
outsb
aad
pop
jg
sahf
inc
outsl
inc
and
push
insl
cwtl
sub
mov
adc
inc
lods
stc
aad
imul
cmp
sbb
cld
xchg
xchg
adc
sbb
shll
add
mov
pop
inc
jecxz
out
lods
xchg
push
inc
xchg
push
adc
xor
aas
mov
add
movsl
jl
arpl
std
sar
mov
jbe
adc
aas
dec
mov
popaw
pushf
mov
xchg
xchg
or
std
mov
in
imul
in
xor
stc
jge
jl
aaa
adc
mov
sbb
lods
jl
adc
shlb
sub
ret
es
shlb
or
xorl
std
sub
roll
dec
mov
mov
sub
pushf
mov
inc
cmp
inc
push
xchg
push
dec
fs
lcall
or
xor
repz
rcr
xchg
cmp
lods
mov
mov
fcmovnb
popa
pop
mov
dec
outsl
push
sub
mov
or
stos
pusha
enter
sub
das
or
sub
scas
das
test
pop
fisubrs
xor
lods
pop
sbb
mov
pop
call
aam
fbld
cmpsl
mov
fs
sbb
sbb
es
pop
mov
lods
mov
pop
sahf
mov
cs
cwtl
sti
orb
mov
data16
jb
jmp
mov
jge
jecxz
cmp
cmp
int3
dec
repnz
xchg
lods
shrl
jbe
sub
add
aad
pop
rclb
sarl
inc
das
repnz
ja
aad
cmp
pop
mov
sub
ret
fnstsw
pop
mov
in
mov
jb
jae
fcomp
xlat
fbstp
out
pop
add
lret
add
cld
cmp
mov
mov
xchg
push
hlt
cmp
xchg
and
jns
sbb
cld
lcall
mov
call
xor
les
iret
xor
int
lods
lret
aas
iret
xchg
mov
pop
movsb
pop
lret
rcr
dec
adc
jnp
xchg
lods
mov
jns
dec
fwait
je
loop
cmpb
xchg
mov
call
sub
stos
xor
jle
out
push
pop
cmpsb
lea
test
pushf
mov
sub
or
int
mov
dec
mov
pop
inc
sarl
jns
mov
jle
loopne
inc
imul
cltd
and
std
cli
int3
or
mov
mov
into
lret
loop
jns
mov
adc
stos
jns
lock
data16
cs
dec
rcll
mov
dec
repz
push
jle
mov
and
pop
sub
cmp
jnp
sub
aad
divl
rcrl
push
xor
sahf
xchg
pop
rcrl
and
fcomps
xlat
dec
push
sbb
push
rclw
adc
push
mov
rolb
out
scas
xor
cmp
xor
enter
jl
loopne
and
jbe
scas
jp
add
push
lds
aad
cld
inc
sbb
jbe
inc
insb
sbb
pop
sbb
imul
lahf
sahf
sbb
jb
mov
cli
andb
inc
roll
jns
mov
daa
jnp
mov
mov
mov
js
mov
and
das
int
push
cmp
sub
aad
jg
fildl
mov
hlt
lcall
inc
fmuls
or
push
mov
into
xor
test
mov
mov
loopne
mov
or
ja
inc
jmp
mov
lods
repnz
shr
push
add
pop
sahf
push
sbb
fistpl
loop
div
shl
jg
jbe,pn
clc
pop
repnz
leave
cmp
loopne
or
pop
in
jmp
subl
jne
das
jne
outsl
and
lods
int
or
fcmovnu
cmp
loop
sarl
inc
pushf
adc
push
push
pop
jbe
mov
pusha
into
push
or
adc
ss
popf
ds
test
jge
mov
push
popf
repnz
add
jp
push
adc
popa
lock
movsl
xor
inc
scas
aad
mul
inc
mov
arpl
ret
cmp
cwtl
mov
cmp
fcomi
jbe
add
fldenv
test
repnz
ficompl
fnstcw
icebp
lahf
or
pop
movsb
shll
out
inc
push
adc
inc
and
xchg
cmp
sbb
jg
hlt
ljmp
fcoml
sahf
aam
mov
data16
push
pop
cmp
sbb
adc
in
imul
dec
dec
std
mov
push
in
push
pop
or
xor
scas
pop
mov
adc
stc
ljmp
mov
pop
mov
scas
stos
fmull
repnz
inc
filds
xor
push
movsl
sub
mov
push
push
sub
inc
pop
xor
lret
pop
adc
pop
and
xor
faddl
xchg
inc
push
aam
xlat
adc
xor
sub
clc
pop
lret
sub
cmp
iret
addr16
and
ret
mov
mov
pop
in
insl
add
mov
jns
ja
movb
pop
ror
adc
test
cmp
pop
jp
push
lods
lret
inc
mov
lds
sub
loope
cmp
xchg
shl
or
ljmp
stc
mul
and
push
mov
faddl
mov
clc
xchg
xor
jb
mov
jecxz
mov
lock
iret
xlat
xlat
adc
outsl
or
popf
cmp
mov
loop
popa
xor
pop
aad
cmp
ret
push
push
shll
inc
rorb
inc
push
dec
lcall
xchg
cmp
je
mov
lret
add
aam
xor
stos
into
mov
lods
call
mov
fwait
jg
loopne
lret
sbb
jp,pn
adc
push
lcall
in
loopne
and
lods
sbb
mov
ljmp
or
test
adc
mov
pop
push
push
cwtl
sub
mov
stc
hlt
outsb
stos
jno
fmuls
cwtl
out
pop
sub
push
pop
fwait
stos
in
cmp
sbb
cs
mull
mov
and
popf
jns
push
and
rcrl
cmp
imul
jno
adc
arpl
or
and
lcall
inc
popa
push
mov
frstor
shlb
sub
stc
xchg
xchg
insl
xor
sbb
jl
push
or
ljmp
cwtl
cmp
mov
push
push
push
fbld
xor
mov
and
inc
call
cmp
mov
cmpsb
rcrl
push
loopne
leave
jle
push
das
sub
or
sbb
or
xchg
mov
mov
fbld
add
movsl
mov
dec
pop
jg
in
lret
pusha
mov
mov
dec
or
and
xor
xorb
loope
push
mov
lret
out
outsl
lret
jne
adc
jecxz
add
cmp
sbb
mov
mov
inc
imul
jg
in
inc
mov
add
aaa
dec
mov
or
mov
sti
repz
arpl
fdivl
sbb
mov
out
lret
dec
lods
xor
push
pop
lds
es
aam
and
orb
in
dec
pop
icebp
cltd
mov
ljmp
mov
outsl
fisubrl
sub
and
ret
test
out
xchg
jb
jmp
repnz
inc
jb
adc
dec
test
pop
dec
hlt
cmp
mov
or
jne
and
and
sub
test
add
or
lahf
movsl
insb
es
mov
mov
sbb
dec
test
insl
out
jnp
and
emms
mov
lret
push
and
mov
lods
shrb
into
enter
jbe
cmpb
stc
and
fwait
and
lahf
scas
ret
sbb
pusha
xor
push
jo
pop
ret
xchg
jno
aas
xchg
mov
mov
mov
or
mov
addl
xchg
mov
cwtl
addr16
push
cmpsl
jg
or
push
jmp
test
sbb
xchg
in
inc
scas
xor
xchg
dec
idivb
cmp
data16
add
push
ret
iret
xor
call
sahf
sbb
in
pop
cmpl
mov
sti
cmp
push
dec
pop
out
and
and
sub
push
pop
sahf
lcall
jmp
cmc
cltd
lock
sub
repz
test
lds
pop
cmp
sub
outsb
cld
andl
xor
fmuls
dec
mov
mov
or
jae
imul
cmpsb
lds
pop
sub
clc
cmp
mov
movsl
cmp
dec
xor
lock
lahf
insl
shlb
mov
lgs
adc
mov
lods
push
xchg
cmp
lods
and
int3
std
xrelease
test
add
jbe
fwait
jne
sub
dec
aas
pop
ss
cmp
cltd
shll
cmp
jns
jg
push
or
ret
lret
je
mov
sub
es
movsl
xchg
je
sbb
xchg
adc
arpl
adc
add
clc
add
push
stc
int
stos
push
sub
xchg
sbb
scas
rorb
inc
mov
test
fsubrl
out
ror
mov
push
xchg
shrb
push
adc
xor
mov
stos
add
and
push
sahf
les
out
lds
pop
roll
pop
into
lods
sub
jecxz
jge
mov
in
sub
push
cli
push
or
leave
add
lcall
je
je
push
cmpsb
dec
xlat
clc
cmp
fwait
lods
lret
mov
inc
add
in
xor
xor
fistpll
test
jo
aaa
push
insl
sub
lcall
inc
push
sbb
mov
sbb
adc
outsl
xor
push
xor
mov
xlat
ror
stc
xchg
sub
push
shl
pushf
push
data16
lock
das
shl
int
or
mov
je
outsb
rcr
repnz
jg
jg
aas
clc
cli
pushf
ss
xor
jmp
shll
int3
clc
push
push
nop
divl
in
push
add
or
cmp
pop
scas
sbb
adc
jns,pn
sub
push
xchg
push
jmp
or
arpl
inc
hlt
in
rcll
xor
cmpsb
adc
and
inc
aaa
xor
popa
rorl
negl
add
insl
sbb
jae
loop
pop
dec
dec
nop
jno
mov
stos
cmpsb
dec
lret
dec
inc
loop
cwtl
mov
push
add
inc
test
xor
xchg
cmp
fwait
ljmp
mov
inc
xchg
test
pushf
push
add
jge
add
mov
stos
mov
xchg
outsl
jecxz
test
imul
xchg
fucomip
ja
push
jecxz
sbb
fsubr
sbb
lea
fcoml
cmpsb
cltd
jle
jae
iret
inc
scas
push
and
xchg
shll
add
in
out
rcll
mov
and
dec
dec
push
rorl
pop
xchg
jbe
jle
add
add
jge
pushf
shrb
pop
lock
les
stos
lods
test
std
mov
fmuls
je
cld
movsb
cmp
and
cmp
mov
test
test
cli
jge
xchg
add
cmp
sub
xor
fucom
shlb
insb
scas
mov
test
mov
frstor
roll
sub
cmp
pop
cmp
mov
cmpsb
aaa
jne
into
jle
or
xchg
jmp
cmp
adc
imul
lods
jbe
mov
jno
shrl
iret
add
pop
scas
inc
lcall
and
dec
imul
push
dec
inc
idivl
push
jne
bound
outsb
mov
bsf
mov
xchg
dec
mov
cmp
push
xchg
add
lret
js
cmp
daa
jae
ljmp
and
cmc
adc
mov
jge
push
mov
int
cmp
adc
adc
fidivrs
adc
xlat
repz
or
add
or
cld
mov
data16
out
xchg
daa
mov
mov
add
sub
fnstsw
pop
ret
hlt
scas
in
dec
pushf
xor
cmc
jmp
push
out
fstps
push
sahf
lds
mov
push
lock
xchg
mov
jbe
sbb
outsb
ss
adc
repnz
mov
in
call
stos
push
cwtl
jnp
sti
or
and
stc
popf
lock
les
pop
jmp
jg
and
cmp
xor
dec
adc
xchg
jns
xor
sahf
mov
rep
xchg
mov
mov
dec
add
or
repz
pop
movsb
aaa
fistl
dec
inc
jbe
dec
popf
mov
test
std
push
jae
mov
jo
xchg
mov
mov
xchg
mov
xchg
ljmp
cld
sbb
hlt
or
mov
sbbl
push
xchg
sahf
pop
out
lods
insl
stc
adc
daa
inc
hlt
push
cs
cmc
sbb
scas
sub
inc
jge
xor
xlat
cmpsl
sahf
jbe
imul
cmpsb
call
andb
test
xchg
inc
and
adc
or
pop
loop
imul
ds
std
popa
dec
mov
and
mov
out
mov
enter
ss
inc
push
mov
inc
adc
cmp
jge
pop
xor
leave
nop
dec
sbb
and
dec
movsb
push
inc
xchg
dec
dec
ret
in
les
imul
sub
jge
je
jno
cli
idivl
jno
dec
dec
add
xor
loop
mov
mov
test
rcrl
nop
inc
movsl
and
dec
and
push
jp
roll
pop
ss
xor
mov
out
mov
jnp
cmp
movsb
cltd
pusha
xchg
add
adc
fidivrs
enter
sbb
sti
rorl
test
jp
sbb
push
scas
or
addr16
pop
xor
cmp
sbb
pop
cmp
lret
xchg
xchg
push
sub
in
mov
dec
add
scas
push
lods
dec
pushf
clc
jnp
imul
orb
sub
nop
add
cmp
stos
leave
jbe
fstps
jns
xchg
push
sbb
std
pop
ja
sub
or
aaa
ljmp
mov
or
lods
les
and
sub
stc
scas
imul
loop
fsubs
pop
rcrl
subl
cli
dec
in
xchg
test
lahf
pop
xor
loopne
stos
stos
or
sub
bound
hlt
sub
pop
pusha
mov
push
ds
push
loopne
xor
imul
leave
repnz
jnp
dec
xchg
inc
mov
test
lock
mov
dec
cmp
mov
nop
push
fsubrl
jmp
mov
adc
xor
dec
jge
idiv
rep
rorb
push
test
pop
mov
fisttpl
jl
push
testb
jbe
jecxz
xlat
pop
or
sbb
movsl
ljmp
cmp
jb
pop
sub
sub
and
fdivrs
xorl
xchg
jb
xchg
mov
in
jle
mov
or
jb
data16
add
mov
jecxz
lods
popf
xchg
je
imul
inc
das
pop
jge
sbb
add
sub
dec
sub
push
mov
pop
push
out
addr16
xchg
jmp
leave
push
pop
xchg
or
mov
jl
je
fiaddl
into
subb
fs
sub
cwtl
repnz
pop
dec
push
mov
dec
repz
out
sahf
mov
fsubrl
sti
mov
push
rclb
and
and
xchg
push
les
mov
dec
pop
mov
int3
jl
cmp
dec
xchg
popf
mov
xor
out
mov
aaa
inc
sahf
and
lea
stc
ljmp
push
dec
cld
cwtl
daa
test
jne
push
mov
mov
dec
xchg
adc
out
fidivl
jp
adc
rcr
mov
fistpl
in
jb
leave
in
addr16
inc
aam
push
inc
les
sbb
mov
lret
dec
jns
sbb
xchg
aaa
jae
xchg
mov
mov
stos
js
adc
popf
pop
jl
xchg
test
mov
or
adc
fidivrs
cwtl
mov
mov
or
push
mov
inc
je
pop
xorl
add
mov
rep
lcall
jmp
js
test
std
addr16
into
rcr
xchg
aas
ret
xor
or
xchg
das
mov
push
fisttps
fldcw
pop
pop
jno
sbb
xor
push
push
inc
cmp
pop
adc
lods
cmp
cmp
push
sbb
sti
mov
lods
sub
cmpb
subl
push
clc
nop
sub
js
push
sti
pop
jb
pusha
mov
stos
jl
stos
or
xchg
data16
out
sbb
dec
mov
xor
aam
mov
inc
adc
in
jae
icebp
sub
shrl
lods
push
call
loope
es
cmp
jg
movsl
ret
cmp
lcall
or
jge
sub
pop
inc
insb
adc
lods
sbb
lahf
test
mov
adc
push
cmp
mov
mov
dec
sbb
or
fwait
test
inc
clc
cld
and
and
and
mov
sbb
movsl
mov
enter
loope
adc
fs
and
movsb
mov
push
xchg
andb
das
sub
adc
xlat
mov
sub
inc
pop
mov
flds
dec
or
jmp
mov
call
loop
jmp
adc
push
insb
sbb
iret
movsb
out
cmp
dec
add
mov
repz
fwait
mov
mov
fcompl
cmp
and
mov
bound
cmp
dec
ficoms
js
mov
inc
pop
aaa
insb
andb
clc
mov
mov
pop
mov
mov
mov
xchg
lcall
push
pop
repz
xchg
pop
imul
add
mov
das
loopne
inc
in
xchg
xchg
into
loopne
fs
mov
xchg
std
dec
xchg
xor
xlat
movsb
xchg
sbb
mov
mov
pop
ret
bound
pop
lds
hlt
add
sub
push
movsb
aas
arpl
push
cmp
xor
jp
cltd
xor
adc
and
ffree
ret
sub
loope
test
xlat
xchg
push
ds
pop
into
xchg
nop
adc
in
push
addr16
push
dec
lret
pop
data16
outsb
shlb
mov
notb
cmpsl
mov
lret
inc
or
nop
in
sbb
movsb
repz
dec
sub
movsl
repz
inc
in
int
xlat
mov
pop
cmpsl
jno
cmp
mov
mov
mov
xchg
push
and
dec
out
pop
cvtps2pi
stos
data16
cmp
inc
iret
rorl
fstp
dec
jmp
push
pusha
ret
imulb
data16
fs
mov
push
mov
movsb
add
pop
mov
inc
lds
mov
adc
dec
xchg
mov
sub
stos
mov
lahf
or
stc
stos
mov
insl
sbb
mov
xchg
daa
push
fs
popf
pop
jmp
and
inc
cmpsb
add
xor
je
dec
cli
or
push
mov
push
mov
test
rcll
aad
adc
fwait
int3
or
mov
mov
jl
sub
dec
rcll
mov
jecxz
enter
imul
aam
push
inc
pusha
addr16
xchg
outsl
ljmp
aad
rcrb
movsl
pop
mov
gs
test
daa
adc
pop
mov
scas
cltd
sti
ss
shll
or
out
push
ds
cltd
pop
jp
test
fbld
shlb
cmpsb
scas
test
dec
in
fsubrl
call
sub
clc
mov
call
outsl
lea
das
dec
insl
into
lods
aaa
rol
mov
sbb
mov
jae
aam
rolb
test
sahf
sar
arpl
rcll
push
pop
int
mov
mov
in
scas
xor
rcll
loop
push
stos
jge
dec
or
dec
lret
or
mov
std
inc
mov
hlt
mov
inc
test
mov
xchg
adc
in
sarb
fdivs
mov
and
jbe
arpl
mov
enter
pop
pop
gs
mov
int3
imul
jmp
ljmp
mov
les
xchg
push
push
enter
xchg
sub
add
jae
cltd
popf
sar
aaa
jns
rorl
jnp
insb
xchg
cmp
jb
ret
test
jle
outsb
push
shlb
out
shlb
and
aam
scas
jle
mov
jns
mov
mov
pop
notb
cmp
inc
xor
add
scas
lcall
rorb
jne
divb
dec
mov
push
js
test
push
in
add
push
aad
aam
mov
pop
xchg
push
js
stc
jb
mov
arpl
ficoms
imul
sub
cmp
lods
popa
mov
push
frstor
or
or
jne
sbbl
stc
test
lock
xchg
pop
mov
scas
push
pop
dec
call
shlb
ja
jae
ljmp
or
xor
imul
or
enter
imul
add
adc
pop
cmp
jno
imul
add
js
ja
push
cmc
xor
push
xchg
sub
call
repnz
adc
mov
jae
aam
jno
adc
repnz
cmp
into
push
or
out
cmp
cli
es
js
push
add
sar
mov
das
push
mov
sbb
inc
mov
push
adc
popf
movsl
xchg
bound
cmpsb
sub
mov
and
add
adc
jnp
pop
jae
jle
jne
inc
stc
adc
and
push
in
cmp
pop
call
clc
pushf
lahf
sbb
push
lahf
sub
int
fidivs
cmp
or
in
mov
call
fwait
test
xlat
sarl
lds
and
pop
data16
dec
or
inc
jl
call
sbb
and
bound
stos
mov
mov
idivl
in
sti
hlt
je
push
or
add
pop
xlat
stos
cmc
xchg
and
sbb
jp
mov
xchg
push
std
mov
stc
outsb
das
pop
cmp
jmp
mov
mov
jecxz
jecxz
and
fmuls
mov
jo
cld
mov
jge
lock
dec
mov
pop
xchg
cld
pushf
sbb
jae
push
mov
sub
bound
jg
cmp
sub
sbb
movsb
xor
xor
imulb
jmp
lods
in
push
cltd
cmpsl
shrl
mov
cs
stos
adc
fildll
sub
push
repz
subl
sti
jmp
jae
and
aaa
nop
pop
pop
and
xor
push
out
loope
ja,pn
imulb
adc
cmpsb
stos
test
and
pop
fldcw
cmc
fisubl
insb
xchg
add
inc
inc
push
push
fbstp
bound
adc
lret
adc
or
sbbl
lds
rclb
jnp
sti
and
not
int
cs
mov
aaa
pop
fsubrl
fisttpl
jle
dec
mov
nop
dec
mov
or
sub
lea
sti
clc
inc
xchg
dec
es
cmp
mov
dec
dec
aas
and
xchg
mov
mov
xchg
je
xor
adc
xor
mov
inc
rorb
sbb
xchg
iret
test
daa
cli
xor
test
and
lods
stos
push
mov
inc
mov
xor
repz
jecxz
jno
and
mov
push
sub
pop
mov
lcall
in
add
sti
pop
test
mov
xchg
std
popf
mov
sub
dec
add
adc
sub
cmp
lods
icebp
push
adc
icebp
and
mov
cmp
cmp
mov
push
in
les
adc
and
lods
les
mov
test
mov
jp
dec
loope
imul
push
outsb
mov
pop
xchg
pop
xor
inc
in
and
ljmp
xlat
cmpsb
ljmp
icebp
xchg
js
testb
inc
or
dec
mov
or
sub
flds
hlt
ja
sub
rclb
lods
stos
mull
dec
mov
cli
sub
pop
ret
and
mov
adc
sub
stc
pop
or
sbb
xchg
or
mov
lcall
lds
out
pop
or
push
sahf
xchg
ret
dec
fsubp
mov
and
sub
lods
out
push
pop
movl
jae
cmpl
daa
sbb
mov
sbb
pop
mov
inc
mov
std
lahf
leave
call
jge
push
pop
sbb
hlt
inc
or
sub
insb
inc
fcomp
imul
jp
cmp
jnp
aad
push
sub
add
cltd
lcall
adc
pop
pop
subb
push
lods
cmp
mov
sahf
popa
inc
enter
aad
xor
and
mov
fadds
inc
and
pop
movsb
xor
jno
sbb
cmpsl
fidivrs
sti
lret
adc
inc
inc
repnz
mov
push
les
pusha
sub
cmp
cmp
or
scas
xor
mov
insb
dec
dec
sub
movsb
jge
int3
and
xchg
int3
and
insb
xchg
push
dec
jge
pop
xor
adc
das
push
jmp
mov
adc
jl
inc
lds
adc
mov
lods
dec
pop
dec
inc
sub
adc
adc
push
rol
jns
pop
fs
stc
scas
cs
ss
jnp
adc
add
adc
cli
sbb
push
jl
xchg
leave
cmpsb
jne
movsb
push
movsb
mov
jnp
lds
xchg
or
dec
stos
mov
aas
sub
sbb
xor
hlt
das
pushf
mov
mov
dec
mov
cmp
and
repz
xchg
lods
pop
test
insb
sahf
inc
jmp
in
inc
pop
pop
push
aas
aas
dec
mov
notl
fcomp
inc
cmpsb
aad
lea
sub
shl
jl
cmp
jge
int3
iret
ja
nop
lret
notl
imul
mov
or
inc
add
int
mov
push
adcb
inc
jecxz
jns
cmpsb
xchg
faddl
and
test
fmuls
sarl
and
jbe
mov
xchg
clc
mov
in
push
jnp
lods
mov
mov
arpl
ret
sbb
idiv
fiaddl
scas
in
pop
loop
cld
xor
push
lret
pop
add
cmp
stos
and
ss
or
pop
lock
jbe
aam
sub
lods
mov
fnsave
inc
and
sbb
icebp
xlat
sub
push
dec
or
lea
lret
xchg
xor
jle
add
or
jo
inc
jo
daa
call
add
xor
mov
pop
xor
mov
movsb
or
dec
and
loop
mov
out
pop
ja
adc
xorl
jno
es
sti
mov
insb
mov
es
cwtl
xor
fwait
and
std
enter
mov
addb
jb
mov
out
fmul
xchg
addr16
mov
mov
dec
je
push
mov
fiadds
sbb
push
jae
xchg
loop
call
jns
fwait
jnp
aaa
pop
mov
shll
sbb
bound
test
xchg
fs
pop
andl
sbb
jne
mov
sub
fadds
xor
add
pop
push
jle
dec
pop
bound
inc
test
adc
pop
pop
xchg
add
or
int
sbb
dec
mov
cmp
stc
pop
leave
enter
lds
pop
out
punpckhwd
mov
mov
sbb
repnz
mov
add
lcall
jns
in
mov
xchg
mul
jnp
jecxz
les
add
stos
mov
in
xchg
mov
dec
scas
loop
push
jp
pop
mov
push
das
pop
mov
mov
sub
cmp
in
aad
push
jl
sbb
repz
ds
out
mov
icebp
cmp
in
mov
pushl
les
xor
int3
push
inc
ret
mov
adc
negb
sub
mov
mov
sti
jbe
daa
jge
inc
icebp
and
lret
xchg
mov
cltd
subb
push
pop
test
mov
aaa
adc
call
add
adc
mov
outsl
data16
pusha
dec
pop
cvtdq2ps
and
imul
mov
pop
mov
je
sub
mov
out
test
stc
lock
cmpb
out
mov
das
pop
sbb
scas
mov
mov
in
mov
push
ret
es
lahf
and
pop
jnp
lret
adc
lods
push
mov
sti
clc
sub
cli
scas
mov
das
daa
adc
lods
inc
xchg
inc
pop
fildll
imul
shlb
dec
aas
xorb
sti
je
stos
push
les
sub
jl
aaa
fisttps
ror
or
popf
shrb
and
jne
and
mov
aaa
push
pop
scas
daa
cld
outsb
jns
xor
xchg
mov
push
jbe
add
pop
not
lods
fs
and
pop
test
or
pop
fwait
pop
stc
inc
jae
mov
push
xor
lods
mov
xchg
fistpl
inc
outsl
sar
test
daa
cld
push
dec
pop
aam
mov
sub
inc
mov
leave
jmp
in
push
adc
add
pusha
adc
pop
dec
movsl
mov
push
adc
sbb
push
in
arpl
cltd
test
dec
jns
mov
aaa
and
outsb
lcall
add
shlb
enter
notl
iret
clc
shl
pop
and
push
push
dec
mov
pop
push
mov
dec
jns
out
loopne
lds
pop
sub
pop
add
or
xorb
clc
fwait
xchg
andb
sub
jne
push
test
rcll
xchg
xchg
or
arpl
sub
divb
aas
add
cli
pushf
fcoms
mov
sbb
xor
daa
stos
lret
test
add
or
scas
fwait
fwait
pushf
in
ja
adc
inc
dec
jb
je
test
cltd
nop
xchg
ud0
mov
mov
cmc
push
cmp
leave
push
ret
sub
mov
es
mov
ss
sbbb
mov
xchg
mov
icebp
jb
test
sarl
sub
pop
sbb
mov
cmp
cmp
mov
add
lret
cmp
test
push
sub
gs
mov
push
fdivl
fnstsw
sbb
pushf
cmpsb
mov
pop
push
and
inc
fnstcw
stos
stos
dec
ret
jp
xrelease
enter
pop
jle
mov
popa
out
in
jle
jns
dec
mov
xchg
cmp
out
mov
cmp
lahf
and
dec
sbb
mov
pop
cmpsl
pop
fiadds
pushl
stc
nop
roll
adc
in
push
push
adc
jle
pop
addr16
push
dec
frstor
jae
xchg
test
mov
cltd
jg
hlt
mov
jo
sbb
ljmp
sbb
xor
mov
mov
xchg
iret
test
and
repnz
mov
and
jo
jmp
cmp
pop
dec
iret
iret
add
pop
fwait
mov
jg
aad
pop
mov
fisttpll
inc
ret
es
mov
mov
xchg
dec
iret
mov
add
adc
arpl
loopne
xchg
div
mov
movnti
not
push
lret
arpl
sub
outsl
jnp
mov
std
mov
jno
jmp
mov
xchg
call
sbb
jns
int
je
dec
mov
dec
inc
jle
aad
push
popa
xchg
shll
cld
imul
scas
xor
jbe
dec
add
and
mov
add
aam
lds
rcl
aad
lret
jo
pop
dec
sub
push
orl
cmp
les
je
mov
enter
outsl
lds
jecxz
mov
xor
cli
adcb
lret
push
jne
mov
addr16
call
mov
pop
pop
sub
in
lret
mov
mov
aad
popw
int3
outsl
loop
loope
pop
jg
lret
clc
dec
std
add
testl
sbb
sub
xor
mulb
divb
sub
xchg
inc
mov
and
stc
jbe
add
sub
push
mov
icebp
push
push
push
jnp
adcb
sahf
pop
out
js
jb
mov
lods
jmp
jb
cmp
inc
push
xchg
sbb
int3
dec
ds
insl
icebp
shr
icebp
mov
push
fistl
sub
mov
xchg
push
rcrb
cwtl
mov
push
data16
sub
imul
sbb
mov
push
inc
test
or
mov
mov
push
mov
pushf
loop
mov
popa
push
mov
adc
xor
inc
xor
stos
inc
lret
repnz
call
loop
mov
sbb
and
mov
inc
stc
push
and
jmp
in
test
add
push
out
and
mov
aaa
loop
sub
push
xchg
aam
push
xor
ret
add
sbb
xchg
add
lret
push
out
mov
fimuls
cmp
fdiv
out
jo
inc
pop
sub
shlb
dec
bound
dec
int3
jne
inc
movsl
pop
hlt
mov
fdecstp
xchg
jno,pn
xlat
repz
push
in
mov
test
mov
hlt
cmp
mov
cmpb
pop
mov
mov
cld
adc
xchg
xchg
mov
lock
mov
push
aas
and
sub
sbb
inc
mov
inc
scas
dec
fists
stos
mov
in
out
push
dec
sbb
push
push
icebp
notl
lea
or
in
jle
push
inc
outsl
and
das
pop
fs
outsb
std
sub
mov
rcll
repz
dec
push
jp
pop
sbb
cmp
lea
cmpl
sbb
andb
fisttps
mov
xchg
xchg
pop
dec
or
incb
int3
shl
pop
daa
mov
mov
cs
mov
dec
rclb
or
inc
test
sti
sub
jl
stos
mov
sub
and
lods
sarl
pop
dec
mov
add
jns
push
cli
xor
into
jge
jp
pusha
jecxz
jp
insl
mov
mov
lock
imul
movsb
out
or
rcrl
cld
ss
out
add
jae
pop
dec
cmp
sub
iret
clc
test
push
fs
je
xchg
mov
inc
cltd
imul
pusha
lret
xor
fdivs
rorl
and
jl
push
jns
mov
mov
or
pop
stos
push
out
scas
stos
sub
or
push
sub
inc
inc
inc
inc
repnz
push
dec
sbb
popa
das
inc
inc
mov
imul
rolb
add
in
sub
mov
mov
xchg
mov
jne
je
sub
sbb
lret
jge
adc
mov
sar
push
inc
clc
fidivrs
jbe
std
and
sbb
jle
aaa
fistl
push
in
sub
lods
sbb
mov
fs
scas
fnsave
mov
leave
inc
loope
repz
leave
aas
jle
add
lock
test
fmuls
adc
pop
popa
ficompl
mov
into
aad
adc
add
mov
jne
xchg
xchg
jle
cli
js
or
xor
mov
xchg
outsb
sub
add
and
out
mov
sub
jmp
mov
mov
mov
dec
idivl
sub
mov
insl
stos
adcb
gs
xchg
lods
in
push
mov
mov
inc
sub
jb
mov
mov
adc
or
pop
push
push
cs
dec
sub
shll
movsl
int3
into
loop
lret
cmp
mov
stos
mov
cmp
das
rcll
push
mov
cmp
scas
pop
mov
aaa
sti
shl
popa
jecxz
sbb
dec
and
loope,pt
adcl
stc
xchg
inc
sbb
cmp
fnsave
xchg
and
in
inc
dec
sub
and
jl
xchg
inc
es
in
lret
mov
add
stos
jnp
inc
aas
ret
or
sub
xor
push
data16
and
xlat
mov
sub
in
les
nop
mov
icebp
lahf
cmpsb
adc
xchg
inc
inc
js
adc
cs
pop
testl
cmp
add
sbb
fistpl
push
mov
into
mov
lods
lods
or
repz
sbb
cltd
mov
sbb
rolb
jbe
mov
insb
aad
out
jl
iret
cwtl
mov
sub
or
mov
and
out
clc
fcoml
jl
cmp
xor
push
adc
mov
or
pop
xchg
inc
inc
xlat
fisubrl
lret
sub
ficoms
outsb
aad
aas
jb
dec
lea
fisttpl
sub
stos
xor
add
add
sbb
lods
or
add
jns
outsb
or
hlt
dec
rorb
and
fisttpll
rcrb
xchg
and
push
stos
push
xchg
mov
pop
or
inc
js
imul
imul
mov
jnp
fistpll
pop
mov
pop
sub
test
lcall
repz
mov
pusha
ja
mov
jg
adc
add
pushf
dec
inc
subb
and
inc
clc
mov
das
inc
les
push
mov
xor
adc
jmp
int3
xchg
mov
sub
insl
jb
adc
xor
lret
clc
leave
fucom
xchg
xchg
or
inc
inc
mov
stc
test
ss
je
jb
lret
rol
icebp
mov
lret
addps
jno
stc
and
cmp
add
out
call
mov
hlt
cmc
pop
enter
pusha
push
jns
fistps
test
ret
jecxz
arpl
ja
xchg
icebp
xor
clts
push
push
pop
div
inc
cs
repz
xor
lahf
mov
cltd
lods
mov
push
rorb
pop
jecxz
jmp
mov
arpl
rcll
imul
mov
shlb
into
into
inc
pop
rcrb
mov
inc
jbe
pop
xchg
cmpsl
call
adc
cli
mov
push
jmp
into
repnz
jns
je
sarb
inc
pusha
push
inc
outsb
andb
orb
mov
mov
mov
pop
xchg
xchg
sbb
adc
pop
mov
and
adcl
cmp
adc
push
sbb
in
pop
int
imul
pop
adc
imul
pop
sbb
xor
jno
and
sub
fwait
push
popf
notl
ja
push
scas
ja
sub
and
and
xchg
mov
cwtl
fnsave
push
mov
cmp
pop
shll
fstpl
xchg
xchg
arpl
jbe
in
out
jne
cmpsb
lss
add
mov
scas
or
push
xor
fildl
lods
stos
inc
insl
iret
mov
inc
or
sub
inc
dec
xor
push
xlat
cltd
push
mov
into
lds
std
or
mov
mov
pop
jecxz
jno
lods
xor
push
mov
stc
insl
xchg
mov
inc
stc
adc
and
bnd
xor
cli
enter
and
push
and
gs
mov
add
adc
jb
bnd
sbb
or
add
xchg
sub
testl
repnz
int3
adc
pop
sub
jmp
mov
xorl
arpl
jmp
frstor
ficoml
lock
or
fldl
or
fs
mov
decl
add
xchg
xor
pop
pushf
shll
cwtl
rorb
es
pop
outsl
jne
push
pop
lret
arpl
repz
cmp
push
mov
sahf
push
jmp
pop
pop
mov
sub
jbe
mov
xor
mov
mov
push
pop
mov
jg
loopne
in
lea
sub
push
dec
out
sub
cmp
push
sbb
je
push
inc
push
xor
sbb
jno
movsl
dec
cmpxchg
pusha
add
fidivs
adc
iret
mov
mov
dec
daa
aas
push
adc
mov
std
sbb
test
add
jnp
loopne
mov
outsb
pop
jl
insl
dec
cmpsl
dec
jg
sbbb
sti
pop
stos
inc
inc
call
push
add
data16
stos
adc
sbb
cmpsl
std
fmul
pop
in
mov
push
ds
outsl
xchg
pop
sbb
jecxz
pop
pop
mov
loope
inc
loop
cmpl
ret
cmp
repnz
xchg
jbe
mov
mov
pop
iret
dec
std
adc
pusha
mov
cmpsb
pop
fcmovu
and
cmpsb
inc
jl
pop
movsb
test
push
or
je
addr16
cmp
push
sub
or
aam
cmc
enter
jp
dec
xor
incb
mov
dec
lcall
or
xchg
and
stc
lret
cmpsb
or
cmp
add
mov
faddp
sbb
push
shlb
nop
xchg
jnp
pop
push
add
arpl
insl
and
pop
push
shlb
sbb
out
xchg
xor
dec
add
sbb
bound
push
mov
lahf
shlb
das
out
imul
in
lcall
shl
and
mov
xchg
push
lcall
in
repnz
xchg
inc
rcr
push
dec
outsl
jg
sub
lss
out
pop
cmpsb
xchg
js
sbb
cmp
aaa
push
out
ljmp
xchg
cmpsb
adc
out
lods
xor
ret
cmpsl
fdivrl
daa
aam
inc
js
jecxz
xorb
sub
or
fidivrl
insl
js
jne
mov
xor
adc
loopne
notb
popa
dec
pop
fsubrl
mov
dec
jmp
push
arpl
repz
in
sub
add
mov
pop
xor
push
jnp
jbe
jne
fwait
and
cwtl
cwtl
and
ss
sarb
nop
imul
xorb
inc
stos
hlt
shr
adc
adc
and
jecxz
add
sbb
popa
and
fwait
mov
js
inc
popf
les
lret
jle
aam
pop
and
mov
ss
or
xor
fcomps
imull
inc
xor
xchg
fdivl
mov
jle
xchg
movsb
and
xlat
fcoms
fidivs
pop
adc
aaa
imul
xor
jmp
sahf
cmp
sub
jne
bound
or
test
roll
push
adc
enter
les
jge
inc
std
mov
out
pop
add
cld
cltd
mov
jp
mov
ds
and
inc
fld
iret
push
lcall
mov
push
xchg
or
rorb
dec
push
mov
push
mov
add
adc
and
cmp
inc
out
pop
leave
jl
out
sbb
js
jb
adc
mov
sbb
jbe
jae
pop
gs
xor
nop
shrl
mov
ds
mov
sbbl
xor
jle
repnz
out
jne
push
add
in
nop
pop
cs
movsl
pop
jge
xchg
pop
xchg
mov
ss
cmp
and
push
popf
shl
cmpsb
push
repz
sub
fdivs
clc
das
mov
ja
dec
out
pop
loopne
mov
test
lds
sub
cmp
hlt
xlat
sub
lods
xlat
push
ret
dec
stos
sbb
ss
jge
xor
add
cmpsl
stos
dec
lock
fs
cmp
int
js
mov
add
mov
mov
add
in
pop
add
out
in
push
sub
ja
dec
mov
mov
lea
ja
push
mov
int3
orl
inc
xchg
stos
push
ret
rcll
jmp
mov
inc
add
xchg
cltd
inc
dec
pusha
sbb
fwait
inc
imul
call
and
jae
mov
ss
lret
out
sub
lock
push
ss
clc
jg
notl
xchg
sti
mov
lock
loop
outsl
fstps
fdiv
adcb
scas
pop
or
scas
pop
bound
push
jb
js
in
add
jmp
mov
pop
stos
fldl2e
pop
pop
repnz
adc
dec
stos
aas
mov
cltd
inc
repz
or
outsb
cld
movsb
push
sti
jge
iret
push
mov
sbb
cmp
jbe
dec
mov
dec
jmp
into
push
fimuls
pop
pop
xor
sahf
addr16
loop
xchg
loopne
push
femms
fstp
adc
nop
test
add
jo
inc
aad
and
cwtl
sbb
push
jle
cs
pop
dec
sub
sbb
in
pop
inc
xchg
mov
outsb
insb
daa
lea
xchg
jle
mov
sti
mov
lds
in
xor
pminsw
mov
mov
mov
pop
fs
popf
jmp
fscale
jmp
adcl
sarb
dec
mov
nop
and
lds
cld
jmp
test
pop
push
jl
mov
mov
mov
ljmp
daa
rcll
insb
jle
and
pop
es
cwtl
xor
cmp
imul
mov
xor
and
push
xchg
mov
inc
xor
pop
xchg
aaa
iret
and
cmp
cmp
xchg
ds
dec
addr16
pop
lret
das
or
jno
mov
mov
adc
dec
dec
clc
fsubs
hlt
mov
call
sbb
jns
adc
js
push
dec
jle
pop
xorl
jmp
lahf
cld
cmc
mov
dec
dec
xor
sbb
pop
xchg
inc
sub
adc
adc
pop
push
cld
cmp
mov
mov
xchg
adc
in
add
mov
pushaw
adc
popf
mov
in
mov
aam
notb
outsb
add
divb
cmpb
divb
jbe
inc
aas
jp
and
mov
jmp
push
sahf
pusha
ljmp
stc
lret
ret
cmp
mov
cmp
sub
inc
fistl
push
or
mov
popa
ret
lds
mov
icebp
test
pop
rcrl
add
fildl
out
mov
notb
dec
inc
jp
and
and
data16
pop
mov
test
xlat
call
fisttps
mov
xor
mov
xchg
xor
jmp
pop
inc
and
mov
ret
mov
shr
xor
xor
pop
cwtl
inc
xor
inc
or
fcomps
xchg
icebp
test
xorb
aas
rorb
mov
clc
xchg
sbb
sub
jecxz
and
inc
inc
gs
xchg
push
addr16
sub
lods
cmc
popa
in
jns
nop
cmp
jo
sub
data16
xchg
dec
cli
jg
mov
std
jae
ja
cltd
mov
mov
andl
enter
lahf
outsl
xor
pusha
add
clc
imul
fpatan
hlt
xor
mov
inc
and
add
or
stc
jo
and
cmpsl
push
jnp
nop
push
lea
sub
or
dec
repnz
nop
xor
jecxz
lret
fmuls
mov
sbb
inc
jnp
xor
incl
fsubp
dec
sti
nop
sub
stos
pop
push
jp
xor
scas
nop
xor
dec
cwtl
adc
add
or
push
inc
jb
testb
mov
outsl
fcmove
mov
xor
sbb
mov
rclb
xchg
jae
jo
cmc
sbb
inc
lret
mov
jno
daa
xchg
mov
mov
cmp
pop
sti
adc
ret
fsts
hlt
mov
in
rorl
push
and
cld
and
sbb
xchg
je
sub
xchg
aaa
xor
or
ret
and
push
inc
sub
jg
or
sahf
daa
jmp
adcl
icebp
movsb
sub
sbb
mov
pop
test
fldt
sub
jmp
cmpl
popf
cmp
push
icebp
jb
mull
mov
pop
les
adc
push
aam
xor
cs
loop
xor
push
push
sarb
clc
mov
lcall
mov
push
das
test
inc
incb
jl
es
movsb
scas
mov
cltd
lcall
xorl
dec
xlat
lock
aas
iret
push
cmp
fcmovne
lcall
gs
fisubl
aad
sti
mov
mov
loop
inc
lea
lock
test
sbb
subl
pcmpeqd
insl
mov
xor
mov
mov
out
lock
mov
cltd
pop
push
cmpsb
mov
lret
cmpsb
mov
fwait
adc
leave
scas
pop
imul
and
mov
lret
adc
or
jp
lock
enter
outsb
pop
dec
pusha
add
cwtl
rclb
scas
mov
mov
xchg
xor
push
aam
lret
pusha
out
ljmp
andl
out
pop
std
hlt
jmp
popa
cmp
jl
out
insb
scas
mov
jp
and
pop
mov
pushf
repz
xor
mov
mov
out
jl
and
inc
shll
call
imul
adc
or
inc
setl
mov
outsb
mov
ss
push
push
mov
mov
cltd
lods
popl
hlt
mov
aaa
mov
fmulp
xchg
xor
sub
add
cli
iret
push
pop
test
leave
sub
cmc
ret
into
jne
rcll
and
pop
std
xor
or
and
xchg
popa
push
mov
stc
stos
and
or
pop
jae
add
pop
pop
sbb
mov
mov
mov
sbb
inc
push
cld
sub
xor
pop
insb
hlt
cmpsl
pop
or
adc
div
stc
mov
pushf
mul
movsl
dec
in
insb
sbb
sub
popl
mov
and
test
imul
pop
test
int
dec
push
shlb
stc
push
push
mov
dec
pop
bound
and
scas
xchg
in
outsb
arpl
data16
push
and
adc
push
and
jl
jg
adc
mov
add
pop
int3
xchg
insb
frstor
stc
jo
push
in
lods
jle
cmp
adc
push
cmc
mov
arpl
adc
mov
std
inc
out
aad
sbb
ret
stos
cmp
and
xchg
mov
movsl
ljmp
mov
mov
in
push
xchg
daa
pop
pushw
push
test
jg
repz
pop
push
xor
in
inc
loope
mov
mov
push
pinsrw
mov
les
stos
sub
pop
fnstsw
pusha
mov
xchg
pop
movsl
popa
inc
inc
sbb
enter
add
add
or
and
lea
inc
into
movsl
sbb
pop
mov
inc
scas
fdivl
popf
push
sub
shr
cmp
jnp
pop
and
lods
leave
outsl
hlt
daa
flds
scas
and
mov
cmp
mov
movsb
push
jmp
jno
xor
mov
mov
pop
stos
repz
mov
dec
push
push
adc
dec
inc
ja
mov
sbb
mov
push
repnz
mov
push
xchg
jne
roll
ss
ljmp
push
sbb
int3
adc
pop
fisubl
mov
push
shll
imul
sub
das
sbb
mov
insl
xor
sub
jnp
test
xchg
mov
sbb
loop
jbe
adc
outsl
adc
pop
orb
or
cmp
cltd
jp
and
dec
js
or
mov
mov
xchg
sub
aad
pop
clc
fdivrs
pop
mov
xor
mov
les
hlt
push
sbb
cs
adc
outsb
out
mov
mov
or
mov
fs
sub
jns
movsb
cmpsb
adc
leave
lods
test
stos
sub
in
fs
loopne
mov
xor
jo
outsb
test
rol
inc
inc
lret
inc
out
les
mov
call
pop
out
fiadds
scas
iret
ja
sbb
dec
aam
push
aaa
xchg
scas
je
jo
or
pushf
call
inc
js
sbb
out
push
mov
mov
int
jae
add
or
stos
daa
cmpsl
add
mov
mov
fnstenv
adc
pop
push
lahf
xchg
addr16
mov
adc
in
sbb
std
mov
mov
lods
jne
stc
sbb
sub
lock
rcr
cwtl
ja
in
cmp
imul
inc
sbb
pop
es
mov
mov
nop
mov
mov
sar
xor
lods
mov
loopne
xchg
test
pop
jge
es
js
push
fisttpll
outsb
loope
adc
add
add
bound
or
cmpsl
test
cmp
jo
sbb
cli
stos
mov
mov
sbb
pop
shll
inc
in
popf
aam
mov
in
imul
seto
mov
jo
and
fincstp
insl
and
cmp
ljmp
add
sub
mov
into
xchg
sub
xchg
in
adc
loopne
xorl
mov
out
insb
sbb
outsl
adc
roll
aad
adc
in
jecxz
rorb
pop
mov
fsubrl
and
cs
mov
push
sbb
inc
int3
movsl
mov
push
xchg
int
imul
mull
repz
sbb
push
fldl2e
mov
inc
rcll
lahf
rorl
into
aad
add
pop
inc
mov
movsb
mov
repz
movsl
adc
dec
unpcklps
xchg
ret
lea
rolb
les
adc
sub
mov
test
je
cmpsb
test
in
aas
pop
jp
dec
leave
inc
or
push
int3
push
xchg
sbb
jne
cmp
std
pop
inc
cmp
js
fcmovbe
inc
push
call
xor
dec
lahf
repnz
lret
stos
mov
mov
inc
cwtl
push
xchg
int
mov
sub
stos
xchg
inc
mov
loopne
gs
subb
rcrl
test
sub
xchg
xor
add
sbb
add
addl
mov
pusha
leave
xchg
mov
popf
movsb
fisubl
dec
or
repz
cmpl
std
cltd
or
adc
add
or
mov
shll
movsl
xchg
jbe
pop
stos
add
adc
in
dec
cs
aam
push
jae
sub
lahf
inc
adc
addr16
popf
jae
adc
mov
mov
xor
pop
inc
xchg
and
fiaddl
push
jae
dec
cmp
dec
mov
imul
ljmp
pop
outsb
aas
out
je
add
fmull
scas
sti
pop
cmp
or
xchg
cmpsb
xchg
pop
xchg
mov
push
and
addr16
js
cmovne
int3
aam
mov
insb
xchg
fnstcw
pusha
ret
mov
xor
mov
mov
js
cmp
outsb
or
incl
mov
cmc
adc
sub
aad
xchg
or
es
xorl
insl
in
lods
add
sbbb
in
cmc
jle
xor
add
lds
adc
dec
mull
loope
adc
or
dec
push
cmp
je
dec
repz
xchg
xchg
ret
sbb
or
and
out
cwtl
add
lret
test
add
lret
or
lret
stc
jg
pop
pop
dec
imul
lcall
bound
call
push
add
or
and
shll
mov
rol
or
and
inc
jmp
je
mov
imul
int3
fmulp
gs
mov
sbb
mov
mov
adc
or
imul
cmp
xor
nop
shl
insl
lds
lods
mov
js
fldl
push
imull
xchg
mov
adc
or
fsub
mov
or
mov
decb
jp
pop
sub
in
push
jnp
mov
add
pop
xor
out
adc
or
ret
jnp
clc
popa
mov
sub
aas
push
and
jecxz
hlt
loop
pop
mov
push
sahf
cs
adc
xorb
cmp
push
ret
loope
lds
int3
test
in
pushf
pushf
mov
andb
iret
aaa
pushf
push
mov
mov
inc
popa
lods
je
in
daa
out
mov
loope
cli
outsl
pop
fdiv
mov
in
and
pop
outsb
mov
inc
stos
mov
cmp
aam
xchg
dec
mov
in
push
jp
dec
mov
push
xlat
outsb
adc
mov
mov
jge
lret
arpl
and
sbb
popa
test
adcl
push
mov
out
int
cld
movaps
and
inc
and
xor
or
je
push
div
int3
push
cmpsb
bound
cltd
scas
jle
cmp
mov
or
mov
and
out
push
fistpl
fs
leave
sub
es
test
push
sahf
pop
xchg
and
xchg
or
push
or
inc
in
lods
addr16
sti
push
mov
cwtl
xor
or
mov
push
mov
push
push
js
pop
mov
mov
xlat
aaa
fsub
adc
call
xchg
jmp
test
mov
test
xor
xchg
sub
add
and
and
inc
sti
inc
das
adc
daa
mov
test
test
jae
leave
lods
xchg
mov
push
les
test
test
jg
adc
call
pop
cmc
into
int
ror
fnsave
jns
or
cld
cmp
dec
pop
mov
jmp
cmp
out
mov
mov
xor
arpl
push
mov
mov
rolb
mov
mov
jbe
xchg
dec
jbe
lods
xor
fcoms
jge
orl
out
dec
ds
adc
inc
add
dec
dec
and
cmp
mov
fldl
pop
repz
lock
out
fstl
scas
loopne
repz
mov
andb
mov
movntq
movsb
push
mov
mov
das
popf
lods
movsb
pop
insb
stos
cmpsb
push
or
inc
push
xor
daa
or
lods
ljmp
aad
fcmovnbe
rcrb
xorl
xchg
mov
xchg
jle
scas
jecxz
sbbb
clc
icebp
xchg
das
or
addr16
xor
cmp
dec
dec
jbe
push
xchg
add
xchg
add
ja
fstpl
jo
sbb
and
dec
pop
cmp
adc
cmp
andb
loop
cmp
addr16
mov
push
sahf
repnz
ficomps
mov
cmp
shlb
rcl
pop
jp
cwtl
fwait
pushf
out
leave
andl
dec
mov
xchg
icebp
xchg
add
dec
dec
idivl
aaa
mov
mov
mulb
or
sub
mov
mov
mov
bound
mov
inc
mov
and
mov
clc
adc
dec
mov
dec
out
cmp
jno
orb
scas
mov
adc
lea
popf
aaa
outsb
test
loop
xchg
mov
stc
and
mov
ja
fstps
sub
xchg
sbb
pop
scas
sahf
push
jbe
test
xor
test
jae
push
scas
fidivrs
cs
es
pop
sarl
aad
mov
in
cmpsl
xor
lretw
movsl
jle
and
outsl
and
sbb
or
xor
fstpl
ret
add
mov
lock
test
inc
inc
pop
nop
add
shll
pop
lahf
mov
aam
add
inc
mov
adc
shlb
fdivs
xchg
push
xor
jp
jae
rcll
outsl
mov
incl
aad
enter
lcall
add
fists
cwtl
push
movsb
inc
sbb
push
xchg
jnp
dec
inc
mov
jnp
rcrb
xchg
sub
rorl
xor
arpl
xor
mov
xchg
testb
push
add
loop
es
mov
jo
lods
dec
inc
outsb
dec
xor
adc
pushf
dec
ja
jno
xchg
jge
adcl
cld
cmovs
mov
shll
fstpt
rol
ret
or
lcall
mov
and
and
outsl
xchg
xor
xchg
cld
ficomps
shlb
xor
or
pop
mov
inc
add
sti
mov
xchg
js
stos
or
sub
sbbb
repz
mov
movl
mov
cmc
adc
into
adc
mov
cmp
out
mov
pop
push
mov
pop
jge
bound
lret
push
sbb
mov
aad
jno
xor
fs
pop
mov
inc
test
xor
xlat
dec
int3
out
push
add
pop
xchg
xchg
cld
in
cltd
icebp
xchg
hlt
mov
int
out
stos
ljmp
pop
mov
mov
and
xorb
sub
push
adc
inc
or
insl
fldcw
fstps
push
dec
adc
adc
mov
in
lods
repnz
mov
dec
aaa
mov
dec
into
inc
dec
cmpsb
imul
jne
aam
into
xchg
push
scas
and
mov
sets
aaa
fs
fmulp
lods
rcl
xchg
push
aaa
push
push
sahf
outsb
mov
mov
jge
jnp
mov
js
enter
int
out
pop
dec
sti
xchg
cld
pop
ljmp
pop
cmp
adc
xchg
lock
dec
loope
xorb
aam
mov
fcmovu
gs
pop
pop
addr16
insl
arpl
int3
mov
xchg
xchg
fwait
jge,pn
xchg
sti
push
jne
mov
lods
cli
mov
and
push
push
cmp
stos
int3
jl
fisttps
xor
int
or
imul
jp
pop
mov
outsl
enter
xchg
sahf
push
dec
mov
mov
repnz
into
mov
xchg
lcall
and
cs
ljmp
aas
jp
call
jg
lsl
out
xor
fidivrl
mov
inc
int3
scas
int
add
clc
xor
icebp
in
inc
cli
fwait
pop
inc
imul
imul
dec
fcmovnb
push
pop
test
adc
rolb
cmpsl
lret
and
fcoml
mov
movsb
mov
adc
lret
mov
out
lods
mov
subl
cmpsb
lahf
mov
xor
into
sarb
sbb
cmpsl
cvtps2pd
stos
sbbl
fnsave
pop
mov
jecxz
rcr
lcall
sbb
enter
sub
rcrb
fwait
pop
add
inc
push
adc
popa
outsb
fcmovbe
lods
or
outsb
mov
jecxz
mov
adc
mov
out
out
mov
dec
push
mov
sti
scas
adc
movsb
pop
insl
fwait
sub
outsb
cmp
mov
fsubs
push
adc
les
rcr
sub
cli
shl
or
dec
stc
and
mov
cwtl
mov
add
cmp
sbb
sti
movsl
xor
xchg
lret
jp
lret
and
popa
or
loopne
pusha
push
adc
jge
jge
mov
int3
and
fsubr
pop
cmp
adcb
inc
add
loopne
jne
imul
and
inc
push
sub
fdivs
push
pop
add
fidivrl
std
cs
dec
dec
jbe
mov
ss
sub
scas
lret
loopne
movl
mov
enter
and
jbe
sahf
push
mov
dec
cmp
das
leave
push
mov
push
and
add
mov
xor
mov
lods
out
imul
sbb
cwtl
sahf
ss
fwait
add
sbb
std
sbb
loopne
insb
adc
xchg
add
rorl
call
aaa
mov
inc
andl
inc
push
fwait
xchg
xchg
sbb
into
stos
xor
jb
out
insb
test
mov
mov
ds
adc
push
jl
fwait
or
adc
cmp
dec
call
cmpsl
xor
out
add
ficomps
xor
xchg
js
sub
ret
pop
sub
xchg
and
cvttps2pi
cmp
inc
xchg
mov
mov
dec
adc
mov
jle
popa
add
inc
mov
outsl
mov
shlb
sub
js
and
loop
es
jbe
mov
xchg
mov
nop
inc
adcl
jae
in
daa
xchg
xchg
and
push
pop
ret
outsl
mov
pop
ds
pushf
stos
movsb
pusha
data16
rcrb
cmc
cli
lea
add
ljmp
mov
aas
sub
inc
aad
fdiv
pop
in
xchg
and
xchg
sbb
scas
les
movsb
add
adc
mov
mov
inc
mov
lret
xchg
lret
test
call
xor
lods
lods
mov
cmp
jns
xchg
mulb
icebp
sub
pop
and
add
cmp
mov
mov
lock
pop
inc
loop
ret
xor
clc
mov
dec
jno
ljmp
cmp
or
add
scas
add
or
inc
out
mov
mov
or
mov
je
call
jo
mov
ljmp
shlb
ficoms
mov
mov
sbb
add
dec
pop
cwtl
and
pop
cmpsb
add
xor
lds
das
or
dec
incb
sti
pop
push
psrlq
movsb
add
adc
aad
fsubs
in
aam
dec
add
dec
ljmp
push
pop
in
xor
push
xor
and
pop
or
push
shrb
cmpsl
imul
cld
in
or
mov
ja
jns
cmpsl
in
ret
ret
daa
in
sbb
mov
pop
shrb
bound
pop
and
push
shrb
jns
push
insb
pusha
sub
push
repz
pop
jecxz
sar
push
xchg
add
add
sub
sbb
mov
subl
inc
inc
clc
and
pop
shl
sbb
test
sub
fs
cmp
dec
sahf
mov
test
sub
mov
dec
xchg
mov
push
xchg
pop
inc
xchg
mov
adc
sahf
cwtl
and
mov
in
pop
lods
sbb
aas
mov
loop
sti
cmp
js
xchg
scas
out
jp
jnp
fistpl
ret
insl
stos
in
in
push
push
inc
loopne
xchg
pop
push
mov
inc
or
aad
adc
push
sbb
mov
ja
xlat
xchg
pop
push
mov
pushf
outsl
bound
pushf
outsb
jge
loop
sbb
mul
push
mull
cmp
cwtl
cwtl
mov
push
dec
enter
fs
mov
rclb
dec
popf
into
jns
push
xchg
mov
je
shrl
shr
out
lret
int
in
jne
dec
push
inc
jae
rolb
dec
std
mov
jno
push
nop
push
and
and
je
inc
cmp
adc
pop
inc
test
mov
mov
arpl
xor
sub
cmovno
test
leave
xor
cmp
cmp
sub
xchg
pop
arpl
sub
and
in
jnp
xchg
xlat
mov
pop
push
cmp
add
cmc
imul
fs
add
adc
dec
sbb
test
and
test
test
rcll
test
call
dec
mov
push
adc
xchg
shrb
sti
insb
jle
sti
out
mov
push
lret
inc
in
iret
xor
jp
ljmp
sbb
lds
and
cmpsb
ss
bound
movsl
pop
jl
pushf
into
cmp
insl
clc
outsl
cmp
xchg
push
bound
int3
dec
enter
and
mov
divl
in
jns
test
pusha
iret
mov
jge
outsb
mov
or
or
mov
movd
adc
or
cli
mov
jg
pusha
lcall
mov
cmpsl
xchg
jp
mov
jmp
repnz
or
es
pop
roll
sbb
jp
lret
or
mov
jle
fistpll
mov
call
cmp
pusha
rcrb
cwtl
std
mov
mov
pop
lock
dec
adc
cmp
sub
adc
adc
pushf
aas
pop
clc
jnp
lods
pop
stos
or
out
or
ljmp
into
push
imul
dec
movsl
xchg
mov
popa
movsb
xchg
in
loope
mov
rcl
ret
rol
lods
sub
xchg
push
sbb
cs
test
lea
stos
imul
pop
fcomp
in
rolb
flds
pop
into
orb
push
rolb
adc
aas
sub
xchg
faddp
jnp
adc
in
jb
leave
mov
inc
sbb
data16
mov
movsl
cmp
cwtl
jecxz
sahf
xor
sub
lods
mov
inc
rorl
inc
adc
out
daa
dec
lods
cli
stc
xor
push
sbb
test
rclb
pushf
mov
cmp
cmp
mov
ja
mov
push
shll
mov
mov
lea
imul
push
mov
je
and
jns
aad
push
mov
cmp
fisubs
mov
xchg
sbb
sarl
je
gs
dec
cmpsl
mov
cmpsb
pop
sbb
sub
mov
sbb
add
rclb
cmp
mov
gs
test
jno
pop
js
sti
shl
pop
jmp
out
lahf
bound
test
lret
les
and
push
les
dec
fstp
lret
std
mov
movl
test
mov
cmp
jbe
pushf
ja
arpl
push
or
std
jmp
inc
test
adc
cwtl
incb
popf
mov
pop
scas
inc
rol
sar
sbb
insl
out
stc
xor
xor
jle
sub
in
dec
cmp
in
sbb
loop
dec
test
pop
setg
push
lock
je
scas
mov
sbb
into
sub
mov
mov
dec
and
repnz
rorl
ret
shll
and
fisubs
stos
outsl
mov
fst
jno
out
divl
loope
jb
adc
ljmp
out
jge
orb
mov
fbstp
stos
mov
fstl
dec
cmp
mov
jae
ror
cmp
mov
xor
mov
fidivl
icebp
insb
xchg
mov
push
add
mov
jle
in
inc
jo
cli
xchg
ret
mov
mov
hlt
lret
lock
inc
cmpsb
shlb
cli
fmul
fwait
inc
in
popa
enter
pop
adcl
adc
sbbl
ds
mov
mov
div
insl
seto
pop
out
sbb
push
cwtl
jg
or
ret
sbb
jl
mov
lahf
mov
fadd
loop
push
mov
adc
xchg
inc
iret
sub
arpl
stos
fcoml
sub
into
mov
jno
mov
push
mov
mov
or
dec
aam
movsl
sub
push
dec
cmpsb
fisttps
or
mov
mov
xor
sub
jle
mov
xor
jmp
adc
aam
adc
pop
lock
and
mov
lret
outsl
xor
mov
outsb
and
fnstcw
inc
jne
shlb
leave
arpl
pop
push
mov
dec
sub
ffree
je
add
jge
iret
mov
ja
retw
jg
adc
sub
cmp
xchg
arpl
xchg
add
sub
negb
adc
out
cmc
or
hlt
pop
xor
imul
push
inc
pop
xchg
stc
push
jmp
out
mov
xor
jns
popa
mov
push
test
movsl
das
xorb
mov
fistl
sbb
mov
rorb
fisubs
dec
pop
sahf
aad
lock
cmp
sub
lock
daa
addr16
leave
scas
push
in
fwait
arpl
jl
mov
mov
pop
xlat
mov
xchg
jl
movsb
lcall
pop
sbb
cmp
xor
flds
clc
js
mov
sub
int
pop
jae
cmc
pop
mov
shrl
inc
sbb
shrl
cmp
stc
mov
aaa
push
jmp
inc
mov
loopne
mov
push
push
rol
mov
test
test
repz
rolb
cli
sbb
cmc
repz
hlt
fstpl
out
cmc
adc
fldenv
dec
cmp
jne
xor
fucomi
jg
je
push
aaa
movd
loope
outsl
push
aam
xchg
push
or
add
nop
aas
xchg
icebp
cmp
cmpsb
dec
adc
dec
cltd
mov
das
mov
mov
mov
xor
stc
dec
jl
pop
jg
test
pop
test
jg
data16
push
arpl
dec
fucom
mov
sbb
add
inc
dec
dec
sub
and
add
nop
cmpsb
cmp
jne
stc
into
bswap
xor
lds
leave
ljmp
rorb
push
pop
inc
js
add
insb
lret
add
lock
sbb
pusha
mov
add
mov
mov
sti
minps
adc
addr16
push
fwait
sbbb
imul
add
pop
add
cmp
lods
dec
inc
cli
gs
stos
xchg
add
and
stos
icebp
insb
or
sub
mov
dec
call
aaa
xchg
push
popa
lcall
hlt
push
push
test
pop
add
loope
into
andl
mov
pop
je
push
xchg
std
cs
mov
jne
sarl
xor
dec
pop
lods
popa
adc
push
insb
pop
cli
rolb
pop
and
and
std
fidivs
out
jb
jo
inc
pop
loopne
es
cmp
stos
cmp
xchg
jae
sbb
dec
mov
pop
repnz
mov
cmp
or
and
scas
dec
jl
jo
bound
shll
push
pushf
adcb
fwait
xchg
cmpsb
fs
sarb
ffreep
push
xor
lds
add
cwtl
sub
out
fistpl
mov
in
outsb
jb
testb
repz
ret
mov
xor
pusha
xor
filds
inc
inc
cs
enter
out
int3
inc
cmpsl
or
in
adc
insl
and
pop
jge
out
inc
imul
or
pop
jnp
mov
mov
outsb
push
sbb
pmulhuw
push
dec
ss
dec
rcl
jns
pushl
pop
mov
or
ljmp
and
sbb
xchg
js
or
into
aam
ret
jns
fs
subl
lods
in
xchg
mov
mov
sbb
negb
and
pop
rolb
jge
cmp
imul
aad
push
jmp
sti
xor
jge
hlt
jnp
adc
cmpsl
inc
es
loop
push
rolb
rcrb
and
clc
int
fidivrl
dec
addr16
inc
lods
fcoml
jmp
cwtl
les
ret
loope
push
xchg
pop
shl
pop
jns
movsb
mov
jb
jb
adc
sarb
pop
notb
fbstp
sub
lods
dec
sub
dec
in
test
mov
and
ret
out
mov
xchg
in
xor
call
test
in
fimull
rclb
xchg
cmp
setp
gs
ja
cld
or
add
xorl
add
popa
or
stc
dec
and
pop
jae
jns
adc
jle
cs
adc
jmp
arpl
test
mov
popf
js
repnz
push
cmc
scas
mov
sbb
mov
es
insb
insb
lea
aad
xor
jmp
jnp
icebp
push
jge
pop
bound
xor
outsl
cmp
jl
inc
mov
clc
movsb
lret
sub
daa
hlt
add
xor
icebp
jnp
out
popf
push
sti
mov
daa
xlat
not
sbb
test
inc
and
sbb
and
add
mov
sub
inc
popa
push
enter
stos
xchg
out
mull
test
mov
mov
into
nop
add
mov
jo
and
mov
rolb
data16
jl
lcall
mov
aad
test
mov
xlat
fildll
mov
mov
mov
outsl
mov
xor
lds
and
sti
lock
cs
fcomp
mov
scas
cmp
pop
in
inc
xor
movsb
dec
push
pop
ss
std
sub
xchg
jl
xorb
mov
outsb
xchg
sahf
mov
sarl
mov
fisubl
mov
cmpsb
mov
sub
sbb
ficoml
lahf
sub
adc
gs
push
ljmp
mov
jne
push
mov
inc
ret
lock
mov
add
nop
or
inc
fistl
ss
sub
dec
lahf
cmp
jmp
stos
mov
es
les
cmp
sub
inc
jnp
or
and
adc
jns
mov
je
mov
sub
lahf
xchg
mov
pop
in
call
fistpl
test
inc
stc
outsl
aas
setl
push
inc
push
outsb
fldcw
mov
mov
outsl
das
call
cmp
jmp
push
and
or
or
loope
pop
and
inc
inc
cmp
dec
mov
and
jne
out
subb
mov
lods
loop
pop
pop
loope
pop
and
mov
arpl
test
sbb
dec
add
and
bsf
add
aas
or
jo
int
sbb
wrmsr
mov
mov
pop
dec
jecxz
enter
cmp
mov
and
xchg
push
sub
aas
sub
inc
dec
xchg
mov
jp
repnz
jg
fwait
in
pushf
and
pop
std
add
push
jp
cmc
test
jbe
ljmp
ja
sub
test
js
add
shrb
and
cld
ret
divl
xor
cmpsb
xchg
addr16
or
daa
dec
cld
and
xchg
mov
xchg
pop
ret
sarb
test
pusha
jmp
sub
jne
pminsw
rclb
mov
pushf
pop
sbb
push
pop
xor
out
pusha
xchg
jno
sbb
cmp
lea
lret
lret
ret
mov
or
out
xor
xlat
xchg
sbb
adc
sbb
pmuludq
push
adc
enter
std
push
xchg
repz
mov
pop
lcall
in
fistl
out
xchg
rol
pop
imul
in
add
lock
jmp
sahf
adc
ljmp
aam
or
insb
xchg
cltd
adcb
inc
jne
xchg
xor
xchg
inc
and
rcr
lahf
and
pop
push
stos
lahf
mov
and
mov
xor
xor
adc
sub
jge
test
stos
loop
popf
inc
es
movb
and
pushf
sub
sbb
hlt
in
dec
icebp
fldenv
push
mov
push
and
dec
jg
es
and
xchg
nop
jl
mov
in
pushf
xchg
int
jne
out
dec
cmp
shlb
dec
pop
add
pop
inc
sbb
or
adc
hlt
jp
cmpb
lock
dec
out
mov
and
frstor
lock
push
push
add
sbb
and
imul
or
push
pop
aas
and
cmp
rclb
mov
into
dec
in
mov
testl
jb
shr
data16
mov
out
or
xchg
or
adc
sahf
push
insb
jg
insl
ja
in
lahf
pop
idivl
pop
daa
mov
xor
xor
xor
mov
je
stc
add
in
mov
scas
loopne
scas
lcall
sbb
inc
lods
stos
push
ljmp
shl
test
and
mov
ljmp
sbb
cltd
push
xchg
push
sub
inc
rol
mov
pop
mov
mov
inc
sbb
repz
pop
cmp
call
das
mov
pop
and
pop
dec
mov
and
das
sub
lret
fnstenv
sbb
enter
ljmp
pop
jp
jns
add
mov
inc
pop
in
sub
mov
jg
adc
clc
outsl
jne
div
daa
mov
or
hlt
xchg
xchg
sbbb
push
mov
repz
pop
push
out
mov
mov
sub
aaa
adc
xor
dec
mov
cmpsb
mul
jns
dec
call
gs
xchg
xor
xor
ss
cmp
adc
dec
push
cmp
mov
jl
mov
adcl
aaa
jo
movsb
sub
sub
js
ss
mov
sahf
sbb
sub
shlb
mov
adc
ficoms
lret
daa
inc
loope
xor
cltd
dec
push
pop
xchg
inc
jae
scas
adc
jl
aaa
or
cmpsb
xor
and
test
jo
inc
push
int3
add
push
inc
daa
outsb
inc
jnp
cmp
loopne
cmp
push
popf
notb
xchg
and
pop
aad
cmp
lret
movsb
mov
jo
lret
push
sub
in
aaa
pusha
inc
stc
cmp
cmp
lock
clc
sub
push
div
or
sbb
movsb
xchg
sbb
jmp
and
dec
shlb
jb
outsb
cwtl
xchg
adc
pop
ljmp
sub
jecxz
xchg
mov
mov
push
loope
pushf
jg
cmc
push
aas
shlb
mov
and
cli
out
mov
or
addr16
mov
jl
sarl
cwtl
rorb
mov
mov
mov
leave
roll
cmpb
mov
xor
jecxz
xchg
or
jns
push
mov
in
aad
inc
xor
clc
mov
enter
lcall
xchg
add
xor
xor
mov
push
pop
int3
sar
les
movsl
fmull
pop
inc
xor
mov
xor
inc
adc
jno
imul
jle
inc
dec
mov
es
pop
pop
mov
cmp
sub
xchg
xor
add
inc
jo
xor
mov
sub
leave
pop
xor
pop
cmp
push
es
sbb
fmuls
bnd
mov
lods
cmc
adc
in
jg
xchg
sub
imul
in
loopne
mov
dec
imul
fwait
and
inc
out
xchg
outsb
xor
les
addr16
mov
js
mov
mov
inc
dec
push
jnp
lahf
adc
and
cld
pop
shlb
ret
mov
mov
mov
bound
aad
jno
mov
cs
test
xchg
xor
in
lret
adc
rolb
sbb
and
xchg
cmpsl
int3
cmc
cli
js
or
scas
push
popa
stos
daa
mov
pop
pushf
mov
fimull
pop
pusha
sub
arpl
dec
mov
mov
int
fsubrl
shrb
mov
adc
or
jae
xor
loope
dec
adc
sub
hlt
rolb
enter
add
jp
and
aas
lods
dec
mov
adc
push
inc
mov
jo
out
sub
fwait
xor
clc
mov
mov
fldt
fnstenv
dec
in
and
sbb
xlat
cmpsl
lcall
dec
jo
test
add
leave
dec
iret
cmp
add
sarl
sub
jl
and
in
out
shrl
cmpsb
mov
jbe
pushf
xorb
fdivs
mov
pop
adc
xchg
inc
push
fmuls
push
push
in
cli
pusha
dec
dec
or
mov
leave
std
push
std
leave
cvttps2pi
dec
and
icebp
leave
sbbl
ret
mov
sub
in
jle
std
mov
lods
add
inc
arpl
mov
add
push
sub
lahf
fnstcw
and
dec
push
jb
cli
adcl
xor
jp
adc
cwtl
pushf
icebp
jg
push
sbb
and
lds
subb
cmpb
xchg
jo
shl
insb
lcall
rcll
scas
jle
xor
hlt
sub
ret
xor
sbb
xor
push
rclb
jne
ret
fwait
jae
dec
add
pop
lret
fcompl
jb
or
mov
pop
mov
roll
mov
and
push
imul
test
mov
repz
mov
dec
xor
mov
sbb
mov
nop
pop
push
sbbl
stos
xor
mov
cld
imul
cmp
jg
xchg
sbb
add
cmp
xor
push
je
adc
xor
sub
sbb
in
jg
call
jge
sub
into
into
jbe
push
stc
xor
mov
dec
jmp
addr16
push
pop
outsl
sbb
sti
pop
lock
repnz
and
lcall
int3
sub
pop
jle
fwait
jb
jne
pop
and
jecxz
xor
pop
sub
fwait
arpl
lahf
dec
xor
mov
jnp
daa
mov
pusha
xrelease
mov
std
iret
fcompl
int
into
inc
sahf
int3
mov
lods
mov
nop
xor
stc
fwait
pushf
jmp
sub
scas
lock
dec
les
and
lods
dec
popw
std
inc
js
mov
cmpsb
lods
mov
stos
ja
lahf
push
pop
jp
mov
mov
pop
subl
fadds
dec
fs
fdivs
jg
data16
arpl
pushf
iret
xor
imul
pop
movsl
push
sbb
adc
pop
mov
paddq
mov
pop
push
mov
sti
cmpsl
mov
popf
int3
mov
add
cmp
inc
addr16
jecxz
jno
mov
pop
xor
mov
mov
inc
imul
ror
sahf
fsts
test
sbb
rorb
xchg
dec
push
repnz
pop
rcr
clc
jle
jo
cltd
cld
mov
mov
fcompl
movsb
nop
adc
enter
cli
dec
jge
and
cmp
pavgb
cli
rolb
xchg
pop
xor
mov
push
adc
ljmp
clc
popa
das
add
pop
ret
iret
cmp
call
iret
bound
xlat
fstl
out
cwtl
aas
push
sti
iret
jmp
mov
mov
shlb
cmp
mov
rolb
das
aaa
sbb
call
mov
inc
mov
push
mov
mov
shll
ds
sbb
scas
push
inc
pop
xor
fxch
std
lods
movsb
bound
cmpsl
addr16
clc
sub
mov
mov
ss
loop
cli
mov
sbbb
or
add
test
jge
orb
cmpsl
mov
out
mov
jb
push
inc
das
test
loope
aaa
dec
add
pop
out
in
pop
pause
mov
fs
inc
shll
or
daa
mov
xchg
push
dec
out
push
and
pop
lds
add
sbb
pmaxub
cmp
dec
jnp
addr16
mov
xchg
mov
and
jle
xchg
or
mov
adc
mov
jmp
ret
xor
xchg
xchg
lock
ss
testb
sahf
sub
cmp
sbb
sub
pop
cmpsb
mov
xchg
adc
push
xchg
mov
inc
inc
cmp
push
jo
mov
xchg
adc
xchg
pop
fmull
outsl
push
and
mov
cmp
or
popf
lahf
mov
movsb
inc
shrb
and
mov
test
in
aad
xchg
xchg
adc
mov
cmp
roll
and
int3
mov
sti
dec
pop
xlat
dec
ja
jb
mov
sub
fs
shrl
hlt
jg
jp
pusha
pop
mov
sub
std
and
dec
clc
outsb
insl
sbb
outsl
pop
sub
ret
je
outsl
jl
jbe
jne
imul
test
mov
imul
dec
shl
cmpsl
mov
loope
cmp
inc
dec
data16
xchg
dec
push
mov
or
je
adc
std
inc
mov
aam
outsb
stc
lods
sbb
mov
mov
jle
cmp
test
rcrb
enter
loop
adc
aaa
pop
dec
mov
ja
inc
mov
adc
seto
sub
mov
js
sahf
fisubs
sub
push
sbb
daa
mov
pusha
adc
cltd
call
out
mov
inc
jp
sti
mov
addr16
inc
scas
bound
cltd
or
jbe
add
imul
das
push
out
andl
data16
inc
faddl
push
ffree
mov
mov
lea
fdivl
popa
mov
ror
jg
add
mov
loop
pop
and
xor
test
pushf
xchg
push
test
xchg
mov
int3
mov
scas
push
iret
pop
movsb
or
push
push
enter
pop
movsb
cwtl
mov
and
xchg
out
test
scas
xchg
mov
inc
fucomi
les
out
andl
pop
mov
scas
inc
mov
cmp
ret
dec
pop
and
dec
call
in
and
std
js,pt
inc
xchg
mov
nop
jb
mov
or
dec
push
cmp
adc
bound
inc
outsl
pusha
adcl
pusha
lcall
popa
imul
loop
loopne
jmp
push
pop
pop
mov
rorb
in
jl
pop
add
xor
pop
rolb
dec
inc
cmpxchg
ds
sahf
jle
sbb
out
adc
mov
lods
cwtl
data16
mov
loopne
xor
pop
gs
dec
dec
into
hlt
jp
leave
xor
or
repnz
aas
inc
pushf
inc
xor
shl
push
or
fstpt
mov
addr16
pop
das
cmpsw
out
dec
movsb
clc
test
adc
add
mov
into
in
pop
movsl
mov
shrb
jns
dec
adc
jecxz
sarl
test
pop
fs
cmpsl
mov
shll
dec
addr16
jb
xchg
ljmp
ss
jecxz
mov
inc
lcall
add
test
push
push
out
adc
jle
testb
fsubrs
dec
adc
cmpsb
lea
rcl
mov
cmpsb
out
jmp
insb
divb
fcomps
xor
xchg
sub
jb
push
shrb
clc
dec
call
imul
mov
sub
adc
inc
repnz
es
dec
pop
mov
jae
arpl
mov
outsb
add
outsl
stos
sbb
aad
jecxz
divb
lret
adc
push
xor
int
test
scas
cwtl
popf
rcr
jbe
hlt
pop
jle
jge
push
mov
lahf
inc
movsl
mov
sbb
out
push
cmp
jmp
fistpl
jge
test
scas
sub
pusha
popa
push
sbb
enter
jle
jge
out
rcl
pop
mov
and
ja
les
sub
pop
cmp
or
jge
fstpl
loop
xchg
pop
mov
pop
cmpsl
push
pop
pop
sbb
lds
in
sbbb
das
dec
cmp
dec
mov
in
fchs
frstor
push
sbb
cmp
mov
dec
push
les
cmc
xchg
add
int
je
push
aaa
jb
xlat
push
cli
mov
les
mov
or
clc
cs
loope
pop
gs
mov
stos
daa
mov
fistpll
scas
mov
stos
mov
add
sbb
cmp
cmp
cwtl
push
outsl
cmpsb
fwait
or
pop
je
jg
out
sbb
addr16
jle
cmc
imul
icebp
into
das
movsb
stc
in
jbe
das
in
outsl
jno
ss
js
add
adc
jmp
in
aaa
dec
inc
dec
dec
adc
mov
ret
mov
andl
cmp
js
pop
push
adc
mov
push
leave
dec
xor
or
mov
jb
xchg
adc
adc
insl
ret
popa
adc
dec
push
test
jae
or
and
xor
jbe
mov
scas
pop
mov
fistl
sub
nop
dec
xor
cwtl
dec
push
mov
loop
je
add
cmp
ds
xor
jl
dec
imul
push
mov
andl
les
out
adc
add
xchg
fstps
or
je
pushf
jno
movsb
add
data16
das
ss
negb
pop
adc
orl
mov
adc
push
pop
xlat
jg
cmpsb
add
xchg
lds
cwtl
lret
dec
push
sub
lret
jbe
xchg
ret
jg
mov
jb
je
or
and
gs
push
loopne
outsb
mov
in
fidivs
sarl
jp
and
adc
fbstp
sbbl
lretw
jecxz
lret
clc
addr16
out
unpcklps
mov
and
data16
cltd
push
lods
jecxz
or
loope
fisubrl
jne
int3
out
test
test
mov
subb
int3
push
sub
push
inc
aas
stc
jns
aaa
inc
sub
pop
in
xchg
aas
push
jmp
repz
xchg
cmp
mov
add
int3
lods
push
repnz
mov
sub
pop
fmul
pusha
es
insb
and
je
popl
jp
mov
cmp
ja
repnz
jp
aam
cwtl
push
pop
inc
dec
movsb
pop
xchg
repnz
cmp
popa
lahf
pop
pushf
inc
xlat
fwait
sub
shl
ljmp
pop
jne
std
fcmove
pop
and
in
mov
shlb
jecxz
sub
lds
fisttps
in
pushf
pop
or
or
and
sbb
dec
outsb
into
cmpsl
jne
hlt
xlat
bound
lods
cmp
jl
ret
xchg
jo
das
aad
jae
ret
mov
push
lret
pop
and
cmp
cmp
xchg
imul
mov
mov
ds
jne
into
pop
xchg
js
mov
mull
jmp
insb
cld
jno
inc
xchg
insl
dec
aaa
jmp
arpl
cmp
adc
mov
adc
cmc
pop
push
mov
xor
hlt
ljmp
les
jne
push
push
in
sub
int3
cmpsl
add
adc
icebp
push
aad
xor
xorb
fstl
cmp
lret
cmp
xlat
xor
mov
movsl
cmp
cwtl
dec
repz
out
xor
and
rclb
dec
mov
sbb
insl
cli
les
fldcw
dec
adc
mov
add
lods
jnp
cmc
cmp
push
cmp
stos
imul
call
mov
mov
je
inc
fnsave
mov
xchg
inc
cmpsb
cmp
xchg
ss
cmpsl
sbb
cld
mov
cmp
leave
xchg
inc
divl
mov
stc
out
idivb
add
jle
gs
dec
addr16
and
mov
dec
mov
nop
ds
mov
push
in
notl
add
pop
sub
nop
mov
dec
and
xor
and
test
add
mov
stos
inc
mov
push
movsl
test
sub
mov
aam
cmp
js
pop
mov
lods
sti
pop
sbb
inc
out
sub
push
cmp
mov
cli
loop
jnp
iret
lods
jbe
ret
int3
repz
jp
lods
std
mov
adc
fimull
ficoml
mov
jno
aad
mov
add
mov
test
mov
sti
lret
inc
lods
cmp
test
mov
xchg
ljmp
insl
out
loope
call
mov
adc
shl
mov
inc
jno
subl
mov
ljmp
xor
dec
shl
inc
shlb
popf
stc
mov
das
mov
lahf
jp
dec
int
call
pushf
jnp
sub
add
jmp
or
mov
inc
cmp
fld
dec
addr16
and
into
or
leave
xchg
inc
jne
es
ds
cmp
dec
jno
stc
mov
adc
mov
xchg
inc
mov
insb
mov
mov
xchg
orb
dec
push
lds
call
insl
scas
faddl
lods
or
cli
inc
mov
push
leave
push
leave
cmp
repz
ret
push
adc
loope
cmpsl
mov
inc
ficompl
lahf
xor
movsl
jmp
stos
or
dec
ja
pusha
mov
cmp
add
xor
testl
xor
mov
xchg
jmp
and
int
xchg
out
push
cmp
gs
xlat
outsl
dec
cmc
dec
sub
mov
push
das
adc
dec
xchg
ret
inc
xchg
push
stc
lock
xchg
pop
jg
mov
cmp
xchg
adc
loopne
adc
outsb
sarl
mov
cmc
cmp
les
cs
call
fadd
dec
cmp
push
jle
lods
in
jo
dec
pop
lock
andl
stos
dec
and
out
sbb
sub
and
inc
decl
andb
movb
fldcw
fcmove
andl
cmc
add
lock
shlb
aaa
jbe
fwait
daa
lods
or
mov
aaa
sub
in
cmp
rcll
fstl
andb
inc
gs
add
sahf
mov
mov
or
pop
ss
pusha
clc
pop
insl
sbb
in
or
or
jae
cmp
ret
ffreep
sub
fcmovbe
movsb
xchg
test
out
mov
loope
aam
int
jnp
and
xor
mov
fidivl
clc
mov
jp
cmp
push
push
sub
orb
lea
mov
lret
pushf
add
or
js
pop
jmp
out
faddp
or
pop
cs
test
jae
fsubl
inc
das
scas
and
xor
mov
push
push
mov
or
mov
ret
mov
sub
xor
push
lret
lods
dec
arpl
push
mov
mov
lahf
popf
loope
ljmp
gs
lahf
pop
push
addr16
inc
loope
scas
iret
xlat
stc
pop
mov
adc
aad
inc
lock
dec
imul
xchg
scas
push
mov
ja
stos
adc
inc
xlat
ja
push
lret
mov
test
pop
sbbb
adc
cmp
cmp
xor
popf
or
sbb
mov
mov
adc
pop
in
pop
mov
inc
and
std
stos
and
xor
mov
fadd
sarl
push
les
fdivrl
and
jo
or
shlb
cmc
cmp
jns
sbb
ds
mov
add
cmpsl
stc
fwait
dec
and
outsl
shll
and
dec
mov
mov
es
add
out
cmp
adc
je
jle
call
rcll
add
xor
cmp
jb
xor
pop
jecxz
push
imul
dec
xor
and
mov
es
add
fbld
rcrb
xchg
addb
mov
and
add
mov
fsubl
push
cmc
cmp
sbb
movsl
xchg
jbe
jge
ja
xchg
shr
lock
xor
sbb
insb
bound
cltd
mov
ret
mov
jo
mov
sbb
fs
cmp
cmp
xchg
popl
xchg
xor
out
cmp
and
int
lock
stos
mov
pop
cmp
movsl
leave
mov
dec
addb
into
sbbb
int3
imul
push
cmp
adc
lret
inc
imul
stc
sub
mov
xor
fbstp
xorl
sub
mov
sbb
and
out
mov
fwait
insl
jg
and
mov
push
push
mov
jg
lcall
rol
std
test
lahf
mov
push
jbe
inc
cmp
insl
xchg
fwait
or
xchg
rorl
dec
mov
out
js
out
les
mov
std
xchg
or
and
push
rcr
inc
and
aad
push
push
or
and
push
cmpb
adc
stos
sbb
leave
adc
dec
dec
jns
int
sbb
push
jae
and
mov
fimuls
jecxz
loope
daa
adc
cmc
mov
test
jne
fucomp
stc
pop
dec
cmp
sbb
add
xchg
imul
les
and
data16
pop
push
push
sti
sbb
adc
mov
sub
push
xor
stos
mov
or
sub
mov
lock
xchg
or
out
fstpt
out
mov
pop
mov
sub
or
inc
test
jle
pop
cmpsl
push
lret
stc
test
jp
mov
mov
inc
outsl
adc
cli
add
fbstp
out
mov
lea
push
leave
stc
lret
mov
popf
add
mov
sar
loope
inc
outsl
repnz
push
aas
fisubrl
ror
and
xchg
sbb
shl
jno
xchg
lret
pop
and
lret
cmpsb
pop
int3
addr16
xor
insb
jne
leave
add
inc
jge
popf
in
dec
or
mov
psadbw
push
in
mov
adcb
aaa
stos
testb
inc
xchg
popa
in
int3
fildl
fimull
int
sub
cli
mov
jg
inc
jnp
test
lcall
xor
mov
push
sbbb
push
imul
pop
sti
cmp
or
aam
add
stos
scas
lret
outsl
xchg
and
jne
test
shl
mov
cmp
add
scas
mov
outsl
leave
pop
push
cmp
rorb
sub
test
add
testb
push
jo
add
inc
jnp,pt
xchg
xchg
push
out
scas
sar
mov
out
lods
loop
push
movsb
pop
pop
xlat
mov
push
jecxz
ret
pusha
lods
test
and
jae
cmp
imul
std
hlt
xor
testb
dec
subb
xor
cmpsl
and
jmp
inc
mov
and
or
sub
or
insb
or
in
pop
stos
mov
mov
lods
mov
xchg
cmp
and
imul
fdivl
testb
addr16
mov
repz
inc
xchg
push
add
in
lea
jo
cmp
mov
mov
aas
adc
scas
push
mov
pusha
sub
cmpl
sbb
imul
ret
xchg
out
popa
popa
stc
leave
sbb
fcoms
bound
mov
das
ds
xor
mov
lods
mov
push
mov
mov
daa
sub
mov
inc
sub
shll
pop
je
dec
add
push
in
push
mov
pop
sbb
jno
sub
fisttps
jno
outsl
xor
and
out
mov
add
out
fldl
repnz
lret
dec
lea
jo
mov
jmp
fmull
mov
jo
cmpsl
arpl
stc
sub
lret
inc
mov
outsl
movsl
cmpb
jmp
out
mov
adc
pop
jb
je
loop
mov
sub
fldt
jo
insb
xor
shr
inc
push
lcall
mov
sahf
dec
fmuls
jne
imull
pop
push
fs
add
sub
cmp
nop
bound
dec
mov
clc
ret
clc
lcall
xlat
movsl
xchg
sbb
insl
loop
jmp
test
clc
imul
lahf
mov
sbb
push
movsb
xor
icebp
xchg
out
push
shl
mov
mov
iret
nop
mov
je
cmpsb
les
adc
fsts
and
lret
fsubp
rcll
faddl
adc
outsl
fistpll
and
pop
stos
insb
out
jbe
mov
pop
sahf
or
sbbl
sbb
jecxz
dec
cmp
sub
xorb
popf
mov
lds
ljmp
jae
daa
xchg
add
add
adc
sbb
ljmp
xor
xchg
mov
jbe
pop
shll
stc
lahf
jle
lret
xchg
dec
mov
aas
rolb
mov
push
sub
std
lcall
addl
fsubl
mov
sub
mov
icebp
fsin
cwtl
scas
stos
add
pop
cmp
dec
insl
pop
inc
in
and
cmp
ret
push
xor
into
inc
pop
adc
pop
xchg
mov
lods
mov
scas
ljmp
pop
in
sbb
ds
mov
mov
lret
sahf
push
out
pusha
lds
jle
enter
inc
stos
call
pop
cmp
dec
inc
mov
call
int3
cmpsb
and
push
sarl
mov
xchg
popf
inc
push
cmp
mov
std
daa
out
jmp
pop
jno
movsl
xor
incl
movsb
xchg
stos
pop
push
jae
int
mov
push
lret
adc
jl
outsb
cmp
add
jmp
push
jge
in
imul
inc
cmp
sub
push
mov
lret
pop
jg
aas
jl
inc
adc
in
pop
jae
mov
test
or
lods
xchg
sub
aad
adc
subb
shll
mov
push
fiadds
push
ret
xchg
pop
subl
pandn
in
jle
repnz
mov
or
dec
fistpll
rorb
insl
xor
or
movb
dec
mov
pop
mov
mov
mull
or
add
xchg
pop
test
dec
aaa
out
subl
shrb
sahf
mov
push
sub
mov
push
jns
pop
insb
ja
stc
xchg
movsl
pop
add
jb
push
test
inc
jle
fisubl
xchg
cmp
mov
movsl
cmp
sahf
sbbl
mov
repnz
std
mov
mov
push
rcl
scas
lret
fbld
leave
andl
or
out
mov
sbb
ror
ficoms
jmp
inc
enter
adc
or
pop
sbb
aas
adc
stos
repz
jne
or
stos
daa
and
enter
xchg
hlt
jecxz
adc
fcomi
jno
push
loop
sub
lock
ja
dec
into
and
cmp
mov
paddq
mov
xor
mov
clc
pop
ja
xlat
mov
out
sub
std
dec
imul
and
pushf
or
in
push
xchg
dec
int3
cld
mov
je
xor
xlat
dec
pop
mov
or
clc
mov
stc
aam
xor
mov
outsb
fmul
data16
jle
push
adc
fistl
dec
cs
imul
xlat
dec
orl
popf
fs
aam
xor
xchg
jmp
lret
ds
jg
sub
sbb
mov
mov
out
cmp
inc
and
xchg
mov
loopne
mov
mov
mov
xorb
in
cmp
int3
push
aam
mov
add
in
rolb
insl
or
js
adc
mov
mov
push
mov
mov
pop
pop
pop
fists
add
mov
inc
mov
aaa
adc
dec
lret
imul
and
daa
cmc
xor
repnz
push
jecxz
xor
fldl
sahf
sbb
adc
movsb
leave
pop
cs
mov
pop
dec
cmp
xchg
adc
pop
fldcw
fcoml
cmp
out
mov
cmp
sub
mov
sub
cli
push
fdivrs
pusha
inc
mov
loope
inc
cli
mov
bound
pusha
inc
cmp
loope
push
loop
pop
mov
adc
lods
fstpl
scas
xchg
mov
je
pop
xchg
cwtl
outsl
hlt
mov
mov
fisubrl
xor
sub
shlb
add
add
mov
mov
inc
adc
add
jmp
pop
fwait
xor
mov
jp
test
aam
nop
cmp
cli
mov
out
inc
dec
in
enter
int
ss
jecxz
sti
adc
lret
ret
call
adc
mov
inc
testl
dec
add
xchg
lret
pop
in
jl
mov
or
sbb
sbb
fistpll
das
add
dec
outsl
ficomps
xchg
jae
mov
inc
add
adc
xchg
shll
in
push
and
lea
inc
cmpsb
out
pop
enter
pop
in
push
bound
lods
std
lret
leave
sti
mov
mov
cltd
or
rol
imul
fnstcw
and
lret
daa
fsubs
negb
lock
repnz
movsl
mov
invlpg
pop
mov
repz
mov
rcrb
incb
mov
stc
xchg
ss
xchg
leave
insb
pop
js
cmpsl
lahf
aam
das
call
push
adc
mov
pushf
sbb
pop
jmp
jns
xor
sub
push
adc
lods
into
and
and
repnz
push
push
out
ret
sub
mov
dec
xor
and
not
pop
add
clc
sub
mov
popf
sti
scas
mov
sbb
int
xor
cmp
dec
insl
inc
and
cli
sbb
jl
dec
inc
mov
mov
iret
lds
mov
shrb
pop
pop
sbb
sbb
mov
pop
pop
lea
cmp
mov
jmp
xchg
add
sub
xor
inc
xor
inc
adc
lds
das
add
add
and
add
sbb
scas
dec
repz
out
and
and
cmp
mov
or
das
mov
xor
iret
lea
in
in
and
insl
xchg
pop
leave
lret
mov
add
cmp
ja
cs
dec
jno
lea
mov
imul
incb
jl
mov
mov
jno
fisttpl
xor
icebp
pushf
dec
push
mov
inc
pop
mov
pop
cmc
xor
jmp
inc
out
aaa
push
test
outsb
imul
and
jmp
lods
pop
scas
sub
and
fcompl
aaa
xor
ljmp
dec
lock
push
cmpsb
pop
je
pop
fmulp
mov
les
sbbl
xchg
jmp
out
cmp
push
jecxz
iret
sti
and
js
push
ss
mov
sbb
pop
outsl
adc
aas
loop
fimull
mov
and
ja
cwtl
cwtl
hlt
pop
loopne
inc
pop
lahf
mov
clc
aam
adc
or
mov
sub
fcmovbe
push
sbb
push
pop
sub
fs
insl
xchg
xorl
mov
mov
xchg
push
into
imul
pushf
sub
cmc
mov
xchg
sub
pusha
pop
pop
cs
and
lds
cmpsl
or
sub
xor
scas
inc
xchg
xor
dec
add
pop
cmp
fs
mov
cwtl
cmc
std
dec
jb
ss
dec
jecxz
ret
outsb
xor
xchg
jp
xchg
movzwl
sahf
pop
adc
aam
lock
pop
push
fstpt
test
lock
fisubrl
dec
xchg
dec
ret
adc
xchg
aad
imul
dec
shrl
jecxz
cmp
push
push
pusha
xor
cld
mov
inc
xor
leave
fs
inc
xor
jge
icebp
push
adc
mov
leave
sub
test
mov
and
call
loop
in
lds
lds
stc
cmp
push
or
arpl
lret
mov
mov
xchg
lahf
mov
inc
add
cwtl
stc
add
loop
sub
or
dec
mov
and
cmc
adc
lret
push
mov
jp
pushf
pop
arpl
cmpsb
ror
add
pop
ret
push
imul
cli
dec
sbb
insl
jp
lret
jnp
sub
pusha
lret
fs
add
adc
aad
xor
aam
sub
stc
inc
aaa
scas
mov
and
dec
mov
or
dec
call
cmpsl
aad
rcrl
pop
push
mul
fs
mov
mov
cld
mov
dec
sbb
mov
pop
sub
jle
outsb
es
lcall
jle
push
dec
fadd
mov
mov
fiadds
mov
movsb
sbb
mov
inc
out
pop
in
and
mov
dec
mov
gs
bound
pop
nop
das
inc
clc
mov
push
inc
mov
sub
jns
push
movsb
mov
test
lcall
bound
in
out
cmp
adc
xchg
lods
out
adc
aam
sbbl
add
js
or
xorb
sbb
xchg
mov
nop
pop
mov
push
pusha
nop
aaa
jge
ret
push
or
xor
push
outsb
or
arpl
outsb
jmp
push
pop
inc
pop
sub
pop
arpl
cmp
inc
inc
ljmp
or
pop
cmp
filds
pop
cmp
cli
pop
mov
add
lahf
xor
or
fimull
mull
sbb
lds
inc
adcb
mov
mov
aaa
movsl
lret
jecxz
bswap
inc
sub
add
subl
addr16
lret
cmp
imulb
mov
and
push
loope
cmpsb
xor
xchg
fldt
jmp
mov
in
les
and
popa
inc
mov
loop
stos
pop
das
adc
adc
cmpsl
in
sbb
pop
pop
xor
fxch
fld
adc
and
cmpsb
frstor
dec
enter
add
push
test
xchg
cs
mov
aas
out
outsb
adc
add
push
lret
cli
xchg
loopne
or
mov
pushl
lahf
ljmp
pop
in
fwait
in
addr16
jae
outsb
mov
leave
je
loopne
pop
mov
ja
or
lret
lret
ljmp
mov
dec
negl
ficompl
pop
and
fldt
je
daa
xor
sbb
xor
dec
push
ss
icebp
cmp
sub
mov
ljmp
xor
xor
xchg
lahf
aas
adc
sub
pop
ja
mov
into
popf
adc
pop
lret
mov
jecxz
ss
mov
ja
jl
jg
movsl
or
cmp
shl
outsb
push
xlat
cmp
inc
scas
push
fdivl
jmp
push
ret
cmp
sub
bound
adc
adc
pushf
scas
in
pop
pusha
data16
stos
hlt
xchg
lahf
xchg
jecxz
jmp
mov
aas
push
std
leave
mov
shlb
xor
jns
xor
mov
push
xchg
adc
nop
outsl
cmpsl
out
dec
clc
aaa
jno
mov
xor
aad
into
js
jecxz
inc
mov
stos
mov
andl
add
cmpl
cwtl
aas
in
lods
cmp
sub
icebp
sub
or
push
popa
adc
jl
xchg
mov
aas
and
inc
ja
ficompl
addl
sbb
arpl
hlt
push
mov
cmp
lcall
and
mov
jae
sar
pop
lods
add
xor
or
in
xlat
xchg
xchg
and
insl
jno
pop
fcomps
lds
ja,pn
lret
xchg
inc
clc
in
add
inc
pop
dec
lods
jne
in
dec
fsubr
add
add
inc
in
cmp
das
xor
xor
push
xlat
sbb
add
jnp
mov
inc
jae
out
and
push
and
xchg
sub
cli
adc
adc
rcll
vpaddusb
loopne
inc
pop
iret
std
jae
dec
pop
jns
sbb
loopne
dec
adc
mov
mov
xor
push
mov
fdivrl
mov
pop
sbb
insb
and
xchg
mov
cmp
aaa
and
out
dec
inc
inc
daa
insl
leave
inc
pop
jg
xor
mov
adc
jno
in
dec
out
popf
mov
fnstenv
int
and
pop
decb
loope
outsb
push
scas
sub
cmp
mov
rcl
clc
rol
inc
sbb
cmc
cmc
pop
cmp
sbb
xchg
pop
jge
sti
pushf
inc
xchg
lds
add
es
mov
decb
jp
aaa
loop
xor
je
jl
enter
scas
insl
pop
push
andb
in
mov
pop
out
jb
cwtl
pop
test
lret
push
movsb
dec
dec
push
iret
or
test
pop
inc
cmp
push
outsl
or
loopne
lret
out
mov
sub
int
xor
pop
xchg
sub
push
daa
insb
mov
ss
pop
aad
repnz
decb
xor
inc
sbb
jb
dec
add
in
call
stos
jge
mov
cmp
push
add
icebp
and
xchg
mov
push
push
lods
inc
push
out
sti
sti
cmp
xchg
push
inc
pop
cmp
loop
mov
inc
and
cmc
mov
jne
push
js
or
pop
sub
dec
or
add
pop
sbb
fbstp
fwait
pop
repnz
outsb
sbb
je
xchg
xor
add
popf
lea
add
sbb
push
pop
es
sub
shlb
repz
cmp
push
lcall
lret
cmp
cmpsb
jns
xchg
loope
cli
mov
mov
sbb
xor
adc
gs
push
xchg
mov
add
sub
push
cmp
in
xchg
sub
cmp
popa
sbb
int3
mov
aam
xor
pop
cmc
pop
sub
mov
rol
inc
lods
push
inc
in
xchg
sbb
adc
rcrb
dec
lahf
call
cmc
push
cli
xchg
stos
and
pusha
aad
fcomp
adc
out
lret
jo
shll
inc
orl
ds
mov
mov
les
dec
pusha
and
mov
fistpll
test
por
mov
sub
inc
int3
outsb
jge
xchg
mov
cmp
jnp
test
add
scas
pop
or
jbe
adc
mov
out
cmp
xchg
es
mov
cmp
shr
addr16
repz
cltd
push
insb
jl
inc
pop
xlat
push
cmp
sbbb
rep
in
negl
and
add
cmp
popa
outsl
ret
xor
das
cmp
dec
shr
aaa
cli
add
and
iret
fcomps
nop
adcl
cmp
jg
mov
cli
mov
out
mov
rcr
sti
dec
cmpsl
jecxz
test
and
and
mov
add
clc
andb
sbb
mov
mov
sbb
arpl
mov
jb
das
jns
imul
or
adc
mov
xor
ret
sbb
add
insb
jg
out
sti
scas
rolb
push
lret
push
or
cs
or
aad
fdivl
lret
dec
rolb
cmc
cmc
xor
dec
dec
dec
jb
inc
cmp
pop
ja
mov
jecxz
and
inc
out
push
pop
jae
push
arpl
inc
pop
shll
aaa
flds
push
pop
push
sti
mov
jmp
imul
orb
mov
in
pop
ud0
add
add
fwait
mov
out
dec
cmp
shrl
lock
inc
mov
sbb
fwait
in
and
out
nop
cs
cs
push
iret
stos
mov
dec
clc
jnp
inc
push
mov
loop
fadds
aad
or
lahf
xchg
push
jmp
aas
sbb
lods
mov
pop
push
sbb
lahf
gs
and
sbb
out
stc
mov
mov
popf
mov
addr16
andb
sub
aaa
mov
out
sbb
mov
ror
pop
pusha
cmp
scas
push
into
pop
push
iret
aaa
jge
inc
and
and
roll
popf
push
sub
not
aad
push
mov
inc
ror
ss
push
cli
mov
pop
mov
cs
dec
jns
xchg
rcr
mov
es
xor
cmpsl
xchg
pusha
pop
push
xchg
jbe
jns
mov
lds
sub
jg
xchg
fists
sub
cmc
mov
test
int3
cmp
in
push
jo
ret
lds
notl
cmp
xor
adc
lock
clc
call
pop
repz
inc
mov
sub
sub
xor
fstpl
addb
out
jge
or
adc
ret
sub
xchg
xchg
nop
mov
imul
shrl
cmpsb
fisttpl
sbb
inc
lods
fimull
sarl
and
mov
clc
cs
xor
inc
ja
jp
dec
jno
cli
mov
cmpsl
dec
push
pop
inc
add
lods
jbe
cmp
cltd
icebp
not
popf
pop
and
mov
push
adc
pop
or
imul
jne
or
das
in
sbb
mov
mov
rcr
sub
xchg
out
jo
mov
movsb
jno
div
mov
mov
repz
jbe
pop
pop
push
ret
cmpsb
insl
mov
and
push
or
clc
cld
jg
jns
jbe
dec
xchg
xor
ljmp
movsl
notb
fbld
mov
enter
in
dec
push
and
cmp
cmp
scas
outsb
pop
mov
sti
add
sub
punpckhdq
leave
pop
mov
loop
mov
xchg
pop
aaa
sbb
pop
hlt
dec
or
and
pushf
loopne
xor
sub
loope
dec
sub
ljmp
scas
lret
jb
loopne
dec
lret
jae
mov
mov
mov
inc
xor
jb
test
mov
sbb
xchg
fcmovbe
pop
fcompl
and
cmp
lock
mov
dec
pop
mov
sbb
rolb
mov
or
xlat
insb
std
jns,pt
and
xchg
mov
cmp
inc
jbe
decl
xchg
es
test
std
mov
and
loope
jb
repz
xchg
add
adc
pop
dec
or
xchg
ss
fisttps
xchg
or
add
xchg
add
sbb
movsl
jns
mov
dec
sub
inc
push
inc
rcll
dec
pop
mov
sbb
push
testl
fisttpll
cltd
mov
push
inc
fists
fisttpl
mov
rcrl
imul
adc
or
mul
inc
xor
subps
xchg
lock
cmc
stos
push
xchg
push
push
cmpsl
lock
iret
dec
test
dec
and
mov
call
mov
inc
in
out
jmp
inc
test
divb
push
lidtl
mov
fisubrl
mul
js
icebp
dec
jl
sub
in
push
int
or
adc
div
les
fwait
repz
testb
jns
andb
dec
das
int
sub
or
mov
sbb
mov
js
sbb
repnz
push
xlat
jnp
je
out
cs
mulb
pushf
shl
leave
fwait
sub
popf
sub
scas
cmp
out
mov
aam
push
dec
subb
pop
add
inc
cs
gs
mov
jl
jg
popa
and
xchg
fwait
pop
jp
mov
mov
shrb
std
mov
lahf
pusha
mov
cmc
sbb
xchg
iret
push
jg
or
jo
xor
pusha
adc
imul
dec
sub
push
jl
inc
movb
fistl
push
lock
mov
stos
inc
mov
and
jge
push
js
push
stos
es
mov
sbb
daa
aas
lea
or
pop
cltd
xchg
inc
int3
xchg
dec
cmp
sti
inc
push
add
inc
les
xchg
test
outsb
in
aam
mov
inc
add
add
out
sbb
xchg
mov
int
xchg
dec
js
jae,pn
cmpsl
jns
inc
fsubl
sub
xchg
xchg
in
cmp
cltd
dec
dec
out
jb
inc
mov
mov
jp
xchg
aaa
mov
jbe
inc
call
scas
push
mov
push
cltd
mov
popf
sbb
lock
cmp
std
or
fmull
pop
inc
fwait
cmp
inc
mov
pop
jb
and
xchg
icebp
imul
mov
and
ds
out
mov
add
cmp
inc
sbbl
lock
clc
data16
sbb
int
or
sbb
js
orb
adc
aas
cmpsb
cmp
jmp
rcl
scas
test
dec
sub
imul
aas
shl
ficoml
jo
xchg
cmp
mov
xchg
inc
andb
das
xor
out
lret
inc
stc
sub
lea
push
inc
jno
clc
bound
stos
or
aam
loop
ja
mov
mov
sub
lock
sbb
inc
jns
jb
mov
mov
cmp
stos
fisubl
in
pop
sbbb
cmp
mov
jne
sbb
jne
mov
jae
loopne
je
mov
sub
adc
xor
cmpsl
mov
ss
pop
mov
lahf
fisubl
and
insb
jno
mov
lret
jo
jl
cmp
sub
ds
imul
lods
repz
scas
push
sub
mov
mov
cs
add
shlb
mov
leave
pop
sub
or
imul
fwait
cmp
nop
pushf
mov
xor
inc
sbb
pushf
push
fistps
pop
xor
shl
shl
or
leave
adcl
mov
xor
adc
loope
cmp
add
inc
push
cmpb
lods
mov
data16
and
leave
mov
testb
lahf
adc
mov
adc
sbb
pop
or
mov
xchg
lret
clc
dec
dec
cmpsb
imul
cmp
pushf
in
insl
cwtl
fisubs
fs
js
jb
call
aas
pop
in
scas
sti
dec
sub
xchg
push
int3
hlt
add
shll
cmp
inc
movsl
xchg
ja
hlt
movq
lock
mov
cmp
add
sbb
decl
pop
sbb
repnz
into
mov
rsqrtps
mov
lock
imul
out
mov
jno
test
sbb
hlt
jbe
mov
add
sahf
enter
lea
lock
inc
test
outsb
dec
fs
jo
scas
add
xor
lock
mov
pop
dec
fimull
cs
push
test
lret
std
and
aam
jns
xorb
inc
into
add
shlb
push
ror
popf
xor
pop
dec
ret
mov
pop
aad
cld
cwtl
testb
out
add
sbb
pop
sbb
pop
lret
xchg
pop
xchg
jns
stos
lret
stos
in
inc
dec
sub
cltd
idivl
add
xor
test
mov
pop
bound
push
push
lock
notb
lret
xchg
hlt
std
jnp
je
adc
ficompl
push
decb
nop
imul
pop
mov
sub
sbb
cmc
sbbl
lods
in
xor
cltd
push
push
filds
xor
pushf
or
push
test
scas
jne
test
shrb
mov
xor
mov
aaa
pop
aad
das
sbb
jb
mov
notb
xor
insl
add
out
movsb
add
mov
ljmp
mov
test
icebp
sbb
mov
xchg
cmp
nop
ret
lods
sbb
cmp
scas
lret
test
pop
stos
cmp
adc
data16
add
rol
pushf
push
xor
sbb
cmp
jle
aad
out
sbb
iret
fcomi
imul
adc
enter
jno
imul
inc
fsubs
icebp
movsl
or
xchg
out
das
cmpsb
push
or
loop
sub
inc
push
mov
scas
push
in
jmp
shll
addr16
dec
sbb
gs
loope
xor
jb
or
es
insb
sbb
push
das
inc
mov
nop
cmp
lcall
mov
sub
out
and
imul
xchg
sub
mov
sub
aaa
inc
mov
mov
ret
lods
xchg
stc
cmp
idivl
mov
fistps
dec
gs
adc
pop
je
bound
mov
pusha
shll
inc
jle
pop
mov
sbbb
aaa
ret
adc
sahf
xor
inc
insb
push
mov
std
add
jle
mov
sub
push
pop
pop
lods
loop
sub
lret
add
mov
push
jbe
out
ljmp
pop
inc
jo
repz
bound
jge
mov
addl
in
nop
pushf
test
fwait
sbb
jmp
push
jne
adc
imul
cmp
std
inc
jae
inc
jnp
jnp
mov
jns
and
fstpl
mov
fstps
mov
pop
imul
test
shlb
std
ss
inc
out
lods
xor
pop
mov
fldenv
dec
push
fcmovnbe
dec
add
cltd
xchg
sub
mov
call
pxor
scas
jbe
xor
das
fdivrs
push
icebp
lret
xchg
lret
mov
and
frstor
push
mov
loope
jg
call
test
dec
icebp
nop
xlat
inc
nop
adc
or
in
rclb
cmp
scas
clc
mov
lock
lahf
push
inc
into
push
xor
lret
mov
gs
in
pop
cwtl
sub
sub
dec
loope
fcmovnb
add
jmp
stc
sub
dec
jb
push
inc
mov
test
out
push
mov
mov
xchg
pusha
mov
into
add
mov
push
cli
cmpsl
xchg
cmp
icebp
sub
aaa
mov
shll
mov
shrb
out
test
mull
loop
aam
cli
inc
jae
clc
ret
push
inc
in
decl
xchg
ljmp
scas
sti
add
push
popl
mov
test
imulb
mov
fldl
sbb
popf
dec
ret
and
cmp
out
pop
and
cmpsl
cwtl
push
cmp
roll
repnz
dec
fisubs
ficoms
adcl
out
mulb
out
sub
cmpsb
fdivrp
int3
lods
mov
dec
push
es
adc
outsl
cmp
jg
stc
dec
aad
or
pop
xor
fdivl
push
jg
bound
push
jns
or
or
js
lea
iret
cwtl
mov
inc
sub
cmp
out
jb
or
push
cli
mov
pop
fsubrs
daa
shr
popa
pop
xchg
aad
pop
data16
sbb
adc
lcall
lods
shrl
dec
test
push
mov
repz
mov
rcrl
dec
adc
inc
psubq
pop
push
cmpb
popa
push
mov
cmp
jl
push
inc
sub
jmp
loop
pop
cbtw
shl
xchg
and
adc
jg
lcall
cli
cmp
and
lret
movsl
stos
mov
adc
jno
add
fwait
and
xchg
shrb
hlt
incl
add
pop
mov
lret
insb
xor
adc
out
push
xor
loopne
add
popa
out
leave
hlt
aaa
shr
add
les
adc
std
add
sbb
or
lret
sub
int3
mov
shlb
jle
xchg
enter
mov
leave
xor
cwtl
insl
dec
inc
inc
les
cmpsl
movsl
inc
xlat
dec
lods
divb
out
std
and
stos
cmpb
mov
cmp
cmp
push
fiaddl
notl
pushf
rclb
sahf
mov
leave
sub
movsl
jmp
in
and
mov
outsl
fstl
rol
and
mov
push
push
ja
jp
push
mov
sbbl
push
and
out
xchg
jg
mov
cmpsl
push
mov
test
les
mov
sbb
scas
sti
popf
lcall
mov
or
test
imul
jmp
repz
mov
stos
ss
pop
sub
mov
inc
mov
or
dec
mov
les
push
adc
mov
jp
sub
push
es
push
nop
jb
mov
push
or
add
add
and
dec
fists
mov
mov
ljmp
add
fwait
in
gs
rcll
repz
xchg
fwait
xor
or
inc
inc
leave
fdivrl
xor
lahf
les
jns
sti
aas
or
call
adc
mov
scas
adc
out
shll
cmpb
fcomps
inc
lds
cmp
push
scas
shl
es
insl
mov
add
insl
test
and
push
daa
cmp
pop
mov
fidivrs
or
or
jecxz
pop
sbb
xor
add
jl
fcoml
fadd
fcmovnbe
pop
loopne
stos
jge
cld
iret
insb
push
adc
ss
gs
addr16
out
xchg
push
rcll
insb
repz
pop
push
pop
sti
cwtl
push
ret
dec
xlat
cmp
xor
or
and
scas
adc
xlat
in
cs
lcall
movsl
addr16
push
sbb
sub
cmpsl
stc
pop
leave
xor
insb
cmp
mov
mov
in
enter
xchg
and
adc
xlat
jge
pop
inc
xchg
stos
repnz
dec
fs
inc
insl
clc
in
fldcw
leave
inc
scas
and
test
mov
pop
daa
dec
fs
xor
pop
or
cmpb
aad
or
je
bound
daa
push
inc
pop
in
lahf
mov
or
jmp
xchg
aas
imul
mov
pop
push
test
sti
bound
insl
cld
stos
subl
rorl
jbe
shrb
mov
std
sub
loope
movsbl
pop
dec
in
in
mov
push
repz
pop
idiv
mov
push
mov
lea
cmp
aad
push
ret
call
mov
decb
int
ljmp
xchg
add
int3
dec
sub
pop
or
jle
js
mov
and
stc
push
pop
mov
jl
orl
push
das
inc
popf
push
mov
cmp
cmp
jo
push
inc
xor
insb
add
cmp
ret
adcl
jno
fcmove
pop
add
cmpsb
filds
jns
dec
aaa
aam
nop
jge
dec
mov
pop
jecxz
mov
cmp
lret
into
int3
mov
dec
enter
sub
outsl
stos
inc
sbb
push
ss
cltd
push
push
es
imul
push
add
lods
jb
sub
rol
or
loop
lahf
mov
push
test
call
fsubrs
mov
aad
test
adc
lahf
xchg
repnz
andl
push
cltd
inc
add
cmp
movsb
fs
xor
adc
fstps
movsl
cmpsb
mov
adc
and
sub
out
xchg
or
aaa
push
imulb
push
cld
stos
fisubrl
nop
sub
dec
mov
in
mov
or
mov
or
hlt
ss
fcom
jp
jle
xor
aas
out
dec
adc
push
mov
int
add
push
sub
addr16
sub
test
scas
insl
ret
cltd
rolb
aas
arpl
into
inc
xlat
or
jmp
mov
test
das
psadbw
lahf
ss
in
adc
in
rclb
jg
xchg
pop
mov
and
cmp
stc
call
lock
lcall
xor
jnp
inc
pop
xchg
aaa
push
lods
aas
xor
fwait
sub
pop
scas
aas
push
lods
mov
xchg
and
pop
iret
push
push
cmp
nopl
cmp
pushf
cmp
popf
xchg
cmpsb
mov
and
insb
mov
stc
out
addr16
mov
je
das
push
push
jecxz
sbb
fs
lods
push
xchg
sub
push
pushf
sbb
sbb
mov
mov
and
stc
and
or
cli
aaa
into
orl
outsl
sbb
insb
mov
clc
and
mov
add
daa
cs
adc
bound
mov
or
sbb
inc
or
jb
daa
pop
push
push
adc
div
fcomp
jne
mov
mov
bound
jmp
push
jge
and
imul
push
mov
sarl
cs
xchg
pop
fldt
push
push
sbb
push
mov
adc
dec
add
jecxz
mov
in
cmc
xchg
stc
and
cmp
sub
xchg
or
mov
sbb
imul
cltd
jne
mov
jmp
dec
out
in
mov
aaa
cld
insb
xchg
xchg
movsb
or
jp
icebp
cmpsl
mov
sbb
push
pop
leave
xlat
out
xchg
push
adc
imul
and
into
cld
lea
dec
das
aam
frstor
cld
loope
scas
out
stc
mov
in
mov
push
cli
fildll
iret
mov
ficoml
xchg
sbb
jno
aam
and
in
pop
out
mov
sub
mov
lds
mov
jo
mov
dec
push
xlat
mov
flds
adc
push
adc
jle
inc
mov
test
fsubp
cltd
cmpsb
jp
lods
es
xor
mov
ss
daa
or
hlt
lods
cmpl
sub
loopne
sub
pop
ss
fwait
sbb
pop
movsl
cmpsl
jnp
stos
xor
jge
jecxz
inc
loop
out
xor
aaa
vcomiss
xchg
imull
push
dec
sub
subl
aad
and
cmpsl
dec
jns
loopne
subl
aad
mov
fcomps
sbb
call
fwait
jnp
jp
shr
jl
xchg
iret
into
loope
inc
out
jno
sbb
pop
mov
and
movsb
fdivl
icebp
mov
out
push
or
inc
mov
dec
cli
push
jmp
or
sub
pushf
mov
std
mov
out
or
xchg
sbb
cwtl
fmuls
inc
cmp
in
popa
sub
enter
mov
ds
push
push
mov
dec
enter
ss
fcomp
call
xchg
jo
fs
push
xchg
dec
ret
sahf
mov
sub
jmp
frstor
cltd
notb
push
mov
xor
push
aas
xchg
or
pop
sahf
jne
adc
xchg
sti
test
add
cmp
cmpsb
sti
pop
or
fs
pushl
xchg
test
push
pop
mov
push
xchg
fwait
or
aad
cmpsb
adc
jg
dec
push
jmp
mov
cmpsl
sub
mov
inc
lret
loop
out
adc
outsl
stc
adc
mov
and
inc
in
rol
cltd
inc
cmp
xorb
xor
sub
jb
fwait
push
pop
fisubs
dec
inc
out
xor
es
arpl
lcall
mov
adc
pop
dec
leave
pushf
sahf
data16
dec
jb
xor
ret
lcall
jae
or
out
mov
or
jbe
and
or
push
hlt
cs
or
sti
ss
fwait
dec
or
mov
int3
outsb
mov
sbb
cmp
mov
push
cmp
sub
fisttpll
mov
jns
pop
sbb
push
or
pop
repz
repnz
and
push
or
int
dec
aaa
cwtl
lock
test
jo
cmp
add
inc
jbe
loope
jmp
push
inc
xchg
add
call
push
jle
mov
xor
call
add
inc
adc
outsl
mov
out
mov
enter
xor
call
sub
add
repz
push
jns
test
stc
into
inc
adc
lds
pop
lods
pop
iret
enter
popa
sbb
add
xlat
out
outsl
out
add
das
outsb
adc
rorb
out
mov
cmpsb
lret
mov
mov
cli
mov
cmp
xchg
jp
ret
shl
pop
mov
dec
test
inc
xor
dec
pusha
jae
dec
push
mov
inc
jo
dec
out
cltd
jns
xor
push
xor
clc
ss
jmp
jg
xor
inc
jno
lret
jo
inc
mov
dec
xor
inc
mov
mov
scas
xchg
push
cmc
inc
mov
orl
test
dec
addl
pop
fwait
mov
mov
or
or
jb
jnp
shrb
cmp
cmpsl
icebp
dec
sbb
test
ljmp
jg
mov
sbb
xchg
imul
stos
or
ret
jae
or
shll
cwtl
xchg
jmp
jg
pushf
mov
pop
fmuls
mov
scas
mov
je
xchg
iret
pop
sbb
lcall
mov
inc
dec
gs
pop
dec
repz
imul
add
and
add
jns
xchg
loop
out
in
push
mov
lods
xor
inc
ljmp
fnstcw
lea
ds
mov
cmp
lret
lock
outsl
add
mov
into
add
in
sub
int3
inc
push
ja
bound
mov
scas
pop
and
pop
lock
mov
clc
dec
xor
imul
xorb
leave
or
out
aaa
lret
stc
aad
dec
lret
lds
mov
std
cmp
add
push
cwtl
lea
mov
pop
push
dec
add
aas
xor
jne
mov
dec
insb
inc
mov
cs
movsb
dec
pop
cld
sub
sti
mov
lock
and
cmpsl
push
icebp
stc
cltd
adc
fisttps
xchg
xchg
iret
data16
negl
dec
mov
bound
je
ret
fcompl
test
push
fistps
call
ret
jmp
or
jp
mov
popf
in
or
push
notl
and
cmp
jl
dec
leave
sahf
js
mov
fucomi
imul
xchg
cld
jne
testl
leave
aad
ret
daa
push
cltd
push
cld
push
int3
in
lret
fs
ds
cmpsl
pavgb
int
notl
adc
mov
dec
mov
sub
test
faddl
mov
pushf
arpl
fisttpl
sub
push
mov
out
cmp
xchg
scas
out
call
lds
imul
test
or
cmpsl
mov
and
shrl
dec
stos
in
hlt
or
aam
pop
jns
xchg
adc
ljmp
mov
hlt
ror
jmp
jae
sbb
cmp
cmp
in
adc
pop
shlb
push
orl
push
into
pop
bound
xor
and
and
aad
ret
stc
jl
mov
xchg
xchg
push
adc
out
inc
inc
push
push
int
jle
jmp
or
ja
and
jl
fisubrs
sbbb
mov
pop
xchg
cmp
ret
iret
inc
mov
mov
out
xor
sub
cwtl
arpl
or
dec
jmp
cmp
outsb
pop
gs
ret
push
scas
rcl
jp,pt
shl
mov
xchg
push
in
jmp
repz
adc
or
push
cmc
xchg
outsl
mov
inc
sbb
mov
jo
inc
clc
push
sbb
das
int3
js
jp
jle
fdivrs
push
xor
lods
lock
sub
aad
out
movl
bound
hlt
mov
cs
gs
ss
scas
xor
lods
pop
add
inc
push
stos
rcrl
inc
enter
hlt
inc
int3
mov
push
movsl
xchg
icebp
mov
addr16
mov
fs
push
inc
leave
stc
sar
aad
mov
jle
dec
outsb
mov
fs
lock
arpl
lods
test
xchg
cmp
and
add
sub
pop
iret
mov
mov
jno
adc
das
pop
jmp
adc
jl
mov
pop
outsb
outsl
xchg
inc
into
jae
xchg
clc
lods
in
pop
in
xor
scas
les
fwait
jle
adc
es
push
lahf
inc
dec
subb
cmpsb
ret
nop
add
cli
dec
aas
ja
std
aad
mov
andb
add
pop
ret
movsb
call
insb
leave
ljmp
out
jg
inc
add
fwait
cld
loop
loope
jnp
mov
mov
sbb
jno
fldcw
aas
movsb
cli
push
cltd
push
mov
es
imul
push
adc
dec
mov
in
inc
in
iret
sbb
cmc
xchg
fadd
outsl
pop
iret
sahf
lret
outsb
fimuls
insl
mov
gs
jae
mov
xor
jge
xchg
dec
inc
sbb
outsb
fnstcw
imul
xchg
push
fisubs
jbe
std
les
ds
ljmp
idivl
cmpsb
mov
inc
in
push
inc
dec
or
mov
lea
pop
ja
test
mov
mov
inc
cmpb
cmp
xor
test
scas
loopne
pop
lret
sub
sbb
popf
fadds
sub
pop
jle
mov
movb
rorb
sub
inc
pop
sub
adc
andl
mov
and
gs
fisttpll
add
push
jmp
adc
dec
cmpsl
jecxz
push
sbb
push
xor
mov
push
add
inc
repnz
fldcw
lds
insl
mov
xchg
inc
or
and
mov
xchg
es
ja
and
cmpsb
mov
inc
xchg
add
push
mov
negl
sbb
adc
dec
sbb
lret
and
addr16
sub
int3
adc
mov
pop
inc
mov
xchg
imul
and
sbb
jno
sar
loop
daa
mov
negb
repnz
mov
daa
int
sub
test
cwtl
cmpl
xlat
and
inc
js
mov
pusha
lahf
and
mov
mov
or
xchg
jnp
adc
xor
jecxz
sub
xchg
jno
addl
or
bound
in
cmp
jg
jle
cmp
inc
lea
adc
inc
or
jp
inc
je
pop
js
mov
and
sub
orb
repz
std
sbbb
stc
sbb
jge
in
out
push
cmp
aas
in
loope
push
adc
ja
inc
jae
xor
movsb
sti
std
cmp
mov
loope
daa
inc
dec
adc
frstor
mov
or
jns
sbb
mov
jg
out
insl
xchg
nop
lock
pusha
je
dec
sbb
xor
dec
xchg
in
flds
adc
jns
mov
lea
pop
add
in
inc
test
and
cmp
inc
sahf
and
and
mov
scas
rorl
pop
pop
insb
loop
in
out
or
mov
mov
push
xchg
or
gs
call
repz
mov
mov
xorl
shll
or
pop
or
cmp
push
scas
inc
mov
gs
push
adcl
and
lret
scas
aad
xor
outsl
xlat
enter
popf
dec
cmp
ljmp
in
sbb
das
in
dec
cmp
mov
or
outsb
mov
xor
add
xor
movsl
roll
pop
cmpsl
sub
pop
xlat
enter
popf
inc
jo
or
and
mov
mov
aam
push
mov
pop
cmpsb
addr16
ss
sbb
sub
or
shrb
mov
push
ds
adc
in
jg
xor
sbb
inc
or
push
sub
mov
add
dec
xchg
pushf
mov
adc
pop
fdiv
mov
clc
in
adc
sub
add
aam
adc
xor
fldcw
popa
or
dec
mov
mov
movsl
push
jb
fidivrl
imul
push
push
jecxz
adc
lods
and
push
pop
ret
sbbb
push
les
stos
xor
arpl
xchg
mov
cmpsl
jne
pop
pop
push
dec
ds
fcoml
cmp
enter
pop
pusha
inc
in
sbb
jne
aas
adc
out
push
jle
and
jp
and
or
and
in
xlat
icebp
popf
aaa
lds
loopne
xchg
decb
add
test
hlt
aam
lret
mov
jae
jns
push
mov
stos
je
and
imul
pop
dec
das
fcmovbe
inc
inc
push
jnp
call
add
sub
cmc
or
test
push
inc
and
dec
push
or
xor
push
or
popl
add
pop
push
cld
pop
hlt
fidivs
add
inc
push
lret
pop
mov
hlt
cli
mov
dec
and
pop
pop
lret
inc
insl
mov
lods
cmpsl
mov
cmpsl
fwait
jbe
pandn
loop
xchg
and
add
rep
rep
inc
xchg
orb
pusha
popl
or
aaa
sbb
mov
lahf
lods
loopne
pop
pop
fistpll
xor
xor
sbb
arpl
es
sbb
cmp
popf
pop
xchg
dec
scas
in
and
xor
fistpl
dec
push
mov
or
rep
cmc
push
rcll
int3
ds
mov
repz
mov
push
stc
adc
mov
jo
out
sub
xchg
or
push
jl
aaa
pushf
stc
mov
push
jle
outsl
sub
fnstenv
cmp
lcall
mov
inc
loop
popa
xor
mov
fistl
jp
fdivs
sub
mov
lods
dec
inc
push
sub
push
popl
test
push
adc
mov
jno
inc
mov
add
in
mov
cs
pop
jns
add
popa
cmpsb
push
jns
mov
es
jno
mov
repz
loop
dec
jecxz
mov
out
xrelease
sbb
scas
daa
inc
inc
or
cmpsb
outsl
push
adc
adc
push
into
inc
inc
mov
and
rcrb
and
xor
and
pop
insb
jno
inc
sbbl
cmp
lods
push
out
push
sub
push
imul
dec
pop
sahf
out
hlt
imul
aas
andb
iret
mov
divb
mov
loop
xchg
test
mov
dec
out
out
dec
aaa
dec
fnsave
cmp
or
mov
adc
imul
scas
andb
icebp
scas
inc
pop
into
bound
call
mov
loop
das
jecxz
pop
out
xchg
dec
cmp
ljmp
aaa
flds
sarb
lods
mov
pusha
cmp
in
dec
dec
add
scas
sbb
aaa
inc
movsl
loopne
jmp
sub
mov
loop
jns
arpl
mov
stos
xchg
ficoml
xchg
mov
or
imul
cmc
inc
cwtl
xchg
sahf
xchg
add
adc
fdivr
mov
mov
adc
pop
xchg
outsl
iret
iret
pop
lods
or
mov
mov
sbb
aas
icebp
js
mov
mov
pushf
aas
das
int
mov
test
pop
xchg
dec
inc
lcall
hlt
dec
sbb
and
mov
mov
jmp
fcmovne
adcb
add
cmp
cmp
or
hlt
xchg
add
mov
mov
rolb
repz
test
pop
xor
mov
jb
cmp
add
push
stc
push
jno
subb
les
xchg
push
test
mov
cltd
dec
add
fstps
and
iret
cli
sbb
mov
fildll
mov
add
mov
int3
addr16
cmp
mov
nop
dec
loopne
xlat
push
mov
xchg
lahf
xor
iret
outsl
inc
inc
xor
cmpsb
sarb
dec
xor
xor
push
and
lock
add
mov
xchg
popa
xchg
icebp
and
bound
dec
icebp
mov
out
push
xchg
sbb
inc
mov
xor
in
push
addl
data16
mov
pmuludq
std
adc
xor
jg
mov
cli
pop
fsub
or
ss
cwtl
rolb
sub
dec
cmpb
test
xor
jp
jecxz
jns
add
movsb
ffreep
push
or
movb
or
outsl
mov
xor
mov
insb
mov
aam
ja
scas
and
hlt
xchg
add
rorb
arpl
sbb
or
je
in
mov
je
sbb
cld
jbe
and
sub
popa
inc
sahf
imul
data16
ljmp
xchg
stos
jmp
push
pop
addr16
lods
cld
iret
jmp
sar
push
dec
dec
xchg
cwtl
pop
sbb
dec
ds
mov
pop
insb
or
loope
mov
dec
xor
jg
jnp
lock
lods
or
xlat
fs
sub
in
sbbl
pop
push
cmp
fwait
inc
inc
movsl
inc
push
fstpl
inc
into
int3
xchg
cmp
dec
js
mov
xchg
insl
outsb
imul
inc
xchg
xor
std
lret
push
jg
mov
xlat
jne
leave
cmp
push
push
xor
iret
popf
add
rorb
cwtl
fisttpl
fisubs
loope
xchg
stos
mov
dec
shlb
bound
dec
aam
fimull
popf
fidivl
fdivl
lods
mov
xchg
cli
mov
push
inc
jge
sbb
cltd
or
jp
movsb
mov
xor
add
jae
dec
ss
xor
aas
rcrl
lods
mov
mov
bound
popa
lret
cwtl
fiadds
xchg
xchg
or
lock
inc
lahf
roll
jno
bound
push
dec
xchg
lret
push
push
push
les
mov
mov
stos
rol
add
xor
add
add
out
ret
adc
sub
mov
test
mov
mov
scas
je
jnp
pop
jle
xlat
lret
jnp
xor
std
pop
adc
stc
add
cmp
or
test
cmp
adc
add
jne
xchg
xchg
jge
push
pop
pop
lcall
addr16
mov
pop
pop
jo
inc
dec
jns
cltd
out
pop
mov
and
sbb
xchg
xchg
add
stc
addr16
jmp
jae
jle
stos
test
icebp
cmp
xchg
shrl
mov
jl
movsl
adc
lret
ljmp
sahf
leave
xchg
dec
enter
test
jne
mov
xchg
movsl
or
test
jp
into
or
adc
jmp
xor
xor
jne
cmpsb
xchg
mov
lea
sbb
or
mov
aam
clc
repnz
enter
push
pop
push
iret
rorl
test
bound
or
cwtl
sbb
cmc
fidivl
mov
xor
or
push
loope
mov
imul
addr16
pop
mov
das
ds
sbb
push
sbbl
ret
push
or
mov
aas
sarl
jns
les
cmp
mov
sbb
test
cmp
pop
dec
mov
rcr
sub
jae
cmp
outsl
dec
xchg
mov
dec
xor
jne
sahf
scas
xchg
test
cmp
in
or
sbb
hlt
inc
pop
mov
ret
xchg
inc
andb
jmp
or
jb
aad
ljmp
rcr
fwait
jp
inc
fmull
gs
out
rolb
sti
outsb
xor
out
aas
sbb
sbbl
pop
xchg
lret
lret
fcoms
pop
into
fstpt
loopne
imul
push
roll
mov
pusha
jns
add
mov
std
and
add
mov
sti
mov
sbb
mov
mov
repnz
hlt
mov
pop
inc
mov
sub
ret
cmp
cmp
push
push
in
pusha
add
jo
adc
aaa
pop
sub
inc
pop
mov
dec
dec
mov
clc
out
mov
das
jno
and
push
mov
and
rol
inc
test
jnp
fadd
cmc
outsl
lret
out
stc
ss
ds
xchg
or
and
jp
push
xor
rorl
dec
out
sub
push
adc
bswap
leave
dec
push
cmp
cmp
xchg
lret
mov
cltd
out
inc
inc
repz
and
push
push
js
adcl
dec
pushf
xor
repz
mov
mov
push
mov
cmp
cmc
mov
adc
in
inc
push
jg
movb
jbe
pop
jae
testl
cmp
cmp
or
mov
mov
jb
xchg
inc
test
fnsave
fnstcw
test
lahf
popa
xor
inc
fdivp
push
fldenv
cwtl
xor
add
dec
and
test
aad
adc
push
stos
lahf
inc
leave
lods
dec
cmpb
xor
fwait
popf
dec
mov
sub
mov
xchg
mov
mov
roll
ret
push
in
sbb
daa
jns
cmp
in
cs
nop
sub
je
insb
push
xchg
sub
jbe
inc
push
push
iret
sbb
scas
fcomps
sub
lea
fists
arpl
inc
jle
xor
enter
sub
inc
adc
test
aas
pop
or
and
mov
shrl
movsb
outsl
pop
js
loop
xchg
add
movsl
insb
jo
das
xor
loop
movsb
inc
stc
loope
mov
pop
inc
ss
mov
bound
mov
fldt
mov
jb
mov
inc
add
xor
int
hlt
ljmp
in
jb
or
sbb
cmp
or
xor
hlt
pop
fildll
stos
inc
xor
or
xor
subb
pop
fucomp
xchg
orb
mov
xchg
pop
shr
repz
loopne
xor
pop
lea
stos
sbb
lea
sbb
push
es
negl
push
dec
pop
lea
outsb
jae
mov
pusha
lret
mov
push
scas
loopne
movsb
dec
aaa
mov
sbb
and
notl
add
imul
cmp
lds
movsb
push
lcall
xchg
je
test
aad
fimuls
notl
in
ja
or
mov
cmp
or
sbb
les
movsb
mov
incl
adc
jb
mov
ss
mov
xchg
test
mov
jmp
mov
jge
stos
cli
jae
push
adc
xor
jne
xor
popa
cmp
xlat
cmp
xor
pushf
in
lahf
mov
leave
cltd
scas
popa
sub
jmp
mov
and
cli
xor
mov
or
mov
mov
xchg
xchg
push
push
js
xchg
adcl
test
addr16
cmp
stos
push
idivl
jmp
cli
incl
push
jae
cwtl
les
test
push
fwait
stos
addl
ror
movsl
mov
cmp
aaa
lods
loopne
fiaddl
fsubr
inc
lods
lods
and
add
ret
sbb
bnd
jl
sahf
sbb
lahf
lods
jo
rol
or
dec
jmp
push
jae
cmp
xor
dec
sti
insl
adc
lock
daa
mov
sub
mov
sbb
psubq
mov
xchg
xlat
lcall
ja
repnz
rcrb
inc
jb
inc
movsb
mov
sti
add
and
jle
adc
jmp
loopne
iret
or
hlt
mov
inc
aas
push
inc
adc
pop
in
and
add
aaa
mov
cmp
aam
aad
mov
dec
mov
xchg
stc
push
outsl
mov
lods
notl
push
call
or
jno
repz
cld
sub
out
pusha
cmp
call
dec
cmp
pop
mov
test
jbe
imul
lods
mov
mov
es
stc
mov
push
das
in
sahf
add
cmp
dec
fistpl
add
out
je
clc
outsb
stos
icebp
inc
fdivr
sbb
pop
mov
sub
test
mov
iret
ret
outsl
fcmovne
xchg
cld
std
pusha
add
mov
xor
sbb
js
out
mov
jae
push
lret
sbb
fs
dec
mov
cmp
push
add
pusha
shlb
lea
andb
aad
dec
jg
push
lods
jle
mov
outsl
sub
aas
shrl
sti
lret
lret
les
mov
mov
add
add
std
jnp
xchg
add
movsl
lods
push
push
adc
ljmp
xchg
lods
nop
ret
cld
sub
scas
push
cs
std
dec
sbb
out
iret
lret
cmp
pop
xlat
pop
mov
shr
ds
addps
fisubrl
sub
or
mov
cmp
ret
gs
scas
scas
or
dec
mov
data16
push
mov
aaa
jle
mov
test
push
in
push
clc
mov
jnp
xchg
cmp
fninit
call
cmp
fdivl
xor
popf
jl
sahf
adc
fwait
cs
fmuls
andl
in
mov
aas
cld
jg
and
mov
nop
xlat
lret
popa
add
mov
clc
dec
and
cmp
inc
mov
in
sub
insb
inc
mov
and
or
xchg
arpl
xor
xor
adc
xchg
jo
aam
gs
xor
in
addl
xchg
icebp
inc
push
jbe
push
daa
cmp
arpl
lret
cmp
jp
push
les
mov
sbb
and
xchg
jl
lea
jno
sub
aas
int
loope
ljmp
mov
jns
aaa
movb
cwtl
or
sub
xor
in
out
add
lods
or
jle
ficompl
push
mov
xchg
lods
and
mov
andl
add
sarl
adc
sarb
add
push
jecxz
leave
xlat
lahf
dec
sub
imul
out
clc
pop
jmp
imul
push
sbb
xor
jp
inc
push
add
fwait
enter
add
push
pusha
add
iret
jmp
jg
jge
cld
mov
add
and
or
test
popl
xchg
shl
mov
mov
loopne,pn
xchg
lods
test
pushf
in
lret
call
int3
pop
rol
adc
jle
inc
into
test
xlat
repnz
mov
jle
add
cmp
decb
pop
adc
and
or
mov
fwait
mov
std
sarb
clc
cs
push
cwtl
fs
sbb
repnz
mov
jmp
es
lret
sub
mov
rolb
pop
lcall
test
jae
test
jge
daa
out
jb
movsb
jb
sbb
cmpsl
fiaddl
test
mul
pop
loopne
mov
adcb
cli
jnp
scas
rcrb
cmp
dec
push
add
movzwl
pop
add
nop
jns
mov
cmp
testl
lods
stos
and
icebp
push
push
jbe
mov
cmp
rcll
xchg
jp
cmp
cltd
inc
sti
ja
or
dec
inc
sahf
out
push
inc
ss
fwait
pusha
cli
movsb
movsl
fistps
or
and
cmc
jge
fstl
push
mov
std
push
xor
mov
in
mov
lret
popa
jl
jmp
fs
das
and
xor
insb
jl
sti
add
pushl
clc
stc
insl
lcall
loop
lahf
out
or
sbb
pop
mov
insl
ret
subl
push
or
adc
and
daa
shll
movq
mov
scas
dec
stc
cmp
and
in
cmp
xor
movsl
mov
pop
pop
movl
es
pop
mov
push
push
xchg
dec
lods
sar
fildl
add
pusha
xchg
insb
lea
mov
ja
cmp
imul
mov
call
lcall
clc
out
int
cwtl
mov
mov
nop
out
aam
loope
int
xchg
xchg
enter
jb
inc
pop
cmp
sbb
push
sbb
test
pop
movsb
call
jmp
arpl
adc
mov
ss
mov
dec
push
adc
mov
imul
ficoms
insl
popf
fcoml
pop
int3
push
mov
and
pop
repz
aad
fsubr
ror
adc
mov
jge
xchg
add
out
cmp
push
dec
mov
jb
iret
dec
addl
fists
jge
push
mov
mov
push
out
mov
fldl2t
xchg
sti
mov
sub
loopne
cmp
jp
fisttps
loope
es
sahf
outsb
sbb
fstps
mov
mov
inc
movsb
enter
loope
lea
aaa
mov
inc
scas
sbb
push
enter
ret
adc
jp
xchg
les
jno
call
push
mov
es
jnp
addb
jno
adc
push
imul
xchg
or
mov
pusha
jl
movsb
xchg
cli
cmp
stos
sbb
mov
mov
inc
es
out
or
cmp
fs
mov
mov
cwtl
push
mov
ror
push
xchg
into
and
nop
sub
cmpsl
add
mov
cmpsl
fstpt
sbb
sarl
les
shrl
dec
sub
xchg
inc
out
xchg
ret
cs
fcoms
xor
jne
pop
insl
imul
imul
scas
lock
ficoml
sbb
ljmp
mov
or
adc
lcall
cli
loope
repz
arpl
icebp
mov
cmpsb
sub
and
roll
inc
pop
dec
inc
test
leave
xchg
add
fwait
sbb
pop
cmp
dec
pop
sti
mov
repnz
xchg
jge
mov
fs
lcall
cmpsl
or
xchg
data16
dec
cmp
push
and
adc
test
jle
add
aad
xor
leave
fisttps
nop
push
jb
dec
dec
dec
or
cmpsb
adc
pop
adc
outsb
xchg
and
pop
fldt
sbb
cmp
xchg
push
cmp
jg
data16
dec
pusha
movsl
cmp
mov
movsl
ss
popa
jp
fnstsw
stos
inc
fstpt
adc
sub
bound
and
xor
mov
outsb
movsl
jmp
mov
int3
push
jmp
jns
lds
rcll
mov
outsl
out
sbb
mov
fidivrl
push
dec
add
cmp
ds
rclb
xor
pop
or
mov
xchg
sub
cwtl
jp
call
and
xor
or
repnz
or
mov
sub
sbb
mov
and
pop
test
rcl
popf
and
adc
mov
dec
inc
enter
add
lahf
rclb
fwait
xchg
xlat
rorb
fstl
lret
xor
cmp
cmc
movsb
or
add
loop
sub
mov
pop
mov
stos
ljmp
pop
sti
ja
mov
xor
negl
or
pop
mov
inc
mov
movsb
test
or
adc
adc
mov
mov
adc
dec
push
loope
dec
fs
enter
push
add
fistps
mov
adcl
xor
ds
cmc
mov
and
orl
cwtl
push
add
pop
jo
mov
mov
rol
dec
sub
lcall
fwait
or
js
jns
push
mov
add
adc
mov
xor
sbb
sub
movsb
repz
sbb
xlat
add
xor
jno
inc
mov
inc
pop
push
out
repnz
jmp
mov
iret
pusha
dec
adc
and
imul
pop
jbe
test
or
xchg
std
xor
pop
mov
mov
les
stos
mov
pop
rcll
sub
adc
pop
lods
sub
clc
cltd
stos
adc
jnp
imul
xchg
mov
test
fidivs
inc
fldt
mov
test
stc
gs
push
ja
mov
pusha
addr16
xor
dec
testl
adc
mov
mov
dec
cwtl
out
xchg
xchg
shl
xor
dec
xchg
jo
jle
ficoms
shll
repz
out
push
mov
inc
pop
addr16
aas
inc
mov
test
sbb
mov
add
mov
mov
xchg
ss
mov
out
push
fdivrl
lcall
sub
mov
mov
insb
fs
and
sbb
cwtl
std
test
push
mov
sub
jbe
cwtl
shll
sub
cs
je
jp
dec
dec
je
mov
push
int3
jp
push
lds
xchg
das
sbb
xchg
xchg
insb
fiadds
lock
leave
cld
xchg
fistps
out
call
inc
push
xchg
out
push
in
or
pop
dec
lret
aad
push
jp
insl
aas
sub
iret
imul
clc
xchg
xchg
sbbb
adc
ja
in
loopne,pt
jmp
mov
pop
pop
repz
push
imul
les
pop
mov
mov
popa
push
pop
sub
inc
jnp
inc
bound
scas
xorb
jg
ror
sub
ret
xchg
in
mov
add
insl
cwtl
loop
dec
push
ja
xor
mov
push
lods
test
testb
sbb
loope
sbb
add
push
adc
dec
xor
lods
loope
cmp
daa
push
test
sbb
jno
lods
inc
mov
xchg
mov
stos
cmp
aam
or
dec
das
aaa
std
mov
push
out
pop
inc
imull
mov
aad
fsts
or
mov
loopne
jno
xor
mov
insl
sub
sbb
fdivrs
push
lea
scas
fdivl
add
imulb
fildl
jbe
mov
sub
rcrl
sub
stc
inc
std
aam
mov
lret
mov
xchg
shrb
xchg
xor
or
dec
cwtl
add
or
rcrl
scas
and
pop
jl
gs
aad
in
sbb
leave
push
add
inc
cs
xchg
jecxz
and
mov
fistpl
psllw
or
loopne
shlb
mov
enter
dec
lds
and
movsb
inc
test
cmc
xchg
jl
roll
lcall
fstpt
dec
pop
je
jnp
mov
and
jno
inc
lods
repz
ss
imul
stos
xchg
inc
ja
cmp
mov
xor
mov
mov
loope
int
loope
mov
or
xchg
ja
scas
push
repz
add
push
lods
cmp
stc
or
cmpsb
lahf
cld
push
sarl
cld
das
stc
mov
jg
lods
negb
sub
out
push
andl
shr
mov
adc
jae
cld
dec
clc
cmp
xchg
xor
mov
adc
les
lods
add
jne
push
mov
pop
in
mov
pushf
das
pop
cmp
dec
loopne
shll
shlb
mov
push
dec
cmp
xchg
fcompl
mov
insl
aaa
fnstsw
push
jae
push
sbb
jp
xchg
aas
cltd
mov
add
add
jbe
imul
cmp
ds
jnp
lock
loopne
std
push
push
pop
cltd
xchg
jecxz
jae
add
pop
push
cmp
pop
push
jo
mov
call
dec
leave
ret
shll
outsb
in
mov
dec
jo
ds
out
jae
call
sbb
jae
dec
add
popf
out
mov
and
pop
mov
lods
sub
imul
clc
sub
clc
mov
xchg
and
sbb
xchg
mov
cwtl
xor
or
adc
or
add
ljmp
lea
fwait
xor
aad
stc
or
mov
push
sahf
and
jl
lcall
cmovp
call
xchg
add
mov
adc
popf
in
mov
jns
addr16
inc
or
lret
repz
jp
in
imul
mov
shll
sahf
dec
push
pushf
lahf
jno,pt
lods
scas
pop
imul
mov
and
leave
or
rorb
dec
lahf
push
lods
outsb
pop
push
popa
in
or
cltd
int3
sarl
stos
out
or
arpl
mov
and
popf
pop
ss
jnp
into
outsb
mov
and
add
scas
arpl
pop
sub
nop
mov
pop
out
jle
into
push
imul
mov
cwtl
and
xchg
outsb
add
add
mov
jg
push
jno
pusha
lcall
sub
jbe
xor
aaa
jo
fstps
mov
push
lea
xchg
fsubs
mov
bound
push
inc
nop
xchg
xor
lret
mov
in
out
das
jae
mov
mov
negl
xchg
pusha
mov
add
push
icebp
jmp
sbb
loop
ja
sbb
xchg
out
sub
out
vhsubps
push
negl
push
icebp
test
shr
ret
sti
pop
iret
add
or
jl
lock
dec
jge
and
pop
repz
ljmp
push
cmp
ret
cli
lds
sbb
and
fisttpll
adc
jp
cs
addr16
jbe
outsb
insb
inc
outsl
xchg
loope
add
push
push
movsl
ds
icebp
cltd
shlb
ss
insl
push
negb
push
xchg
mov
dec
push
sub
addr16
xchg
std
jne
lcall
test
test
int
mov
sbb
jo
scas
lea
mov
dec
xor
loopne
sub
lret
mov
shlb
into
push
sbb
lods
subb
and
sub
sbb
fadds
jbe
push
cld
xor
arpl
inc
sbb
icebp
jo
mov
dec
or
mul
das
adcw
sbb
inc
push
cmovle
lret
jle
xchg
js
std
stc
push
inc
insl
js
rorb
leave
adc
mov
sub
fcomps
dec
dec
ja
cmp
sub
in
int
xchg
sbb
pop
dec
xchg
jl
lods
push
or
loopne
mov
adc
push
gs
stos
mov
lret
sti
xor
mov
rorb
inc
fldcw
push
cmp
and
add
int
and
hlt
push
ret
inc
fldcw
xor
xor
add
aas
scas
cmp
sbb
add
movsb
push
pop
pushl
in
stc
xchg
push
movsb
jnp
in
push
daa
dec
cmp
les
scas
lret
sub
push
jnp
or
je
lods
inc
mov
and
popa
push
lock
mov
inc
insl
xchg
jbe
sbb
out
pop
outsb
jnp
aam
xchg
or
or
add
add
repnz
push
jnp
cmc
repnz
scas
push
int3
adc
in
push
cmp
out
sub
jne
push
dec
push
xchg
lret
fdivl
push
inc
bound
pop
pop
nop
sbb
out
fwait
mov
fistl
ret
pop
lret
push
mov
repnz
push
cltd
sti
and
lret
sbb
push
js
mov
cwtl
jg
hlt
mov
sub
sub
gs
test
stos
stos
arpl
or
mov
mov
lcall
lds
jb
pop
mov
push
cmp
pop
mov
dec
jmp
adc
repz
xchg
out
mov
test
test
mov
inc
sbb
jecxz
pusha
xor
lods
adc
adc
repz
add
std
mov
std
les
mov
movsl
clc
adc
sarb
daa
push
or
out
xchg
ret
mov
mov
sub
aad
mov
fstpl
xchg
lods
out
add
mov
outsl
je
mov
fistl
xor
jge
loope
xchg
dec
pusha
lods
lret
pop
jg
insl
xchg
mov
loope
aam
mov
repnz
int3
sub
xchg
jge
xchg
xchg
popa
das
fwait
dec
push
test
cld
loopne
xchg
inc
test
std
pop
xchg
mov
js
jne
les
dec
loopne
int
fnstcw
pop
dec
dec
pop
scas
decl
xor
lret
sbb
cmp
inc
xlat
fldl
pop
sbb
loopne
inc
outsb
lods
int3
outsb
int3
movsb
sub
sbb
fistpl
xchg
bound
loope
outsb
cmp
in
cmp
clc
les
add
jg
jno
push
insb
jle
push
scas
lods
leave
jge
imul
es
pop
jb
repnz
pop
cmp
dec
xor
icebp
pop
and
sahf
loope
mov
sub
push
and
cmp
aas
cmp
mov
xchg
loopne
jo
rcr
xchg
aas
mov
mov
xchg
shll
dec
inc
jbe
cmp
in
sbb
xor
push
push
lock
ss
jbe
cmp
fcompl
xor
sub
xchg
test
dec
popa
out
push
movb
mov
out
push
inc
stos
jg
xor
stc
clc
test
lea
jno
mov
push
xchg
and
and
sbb
fists
sbb
out
xchg
jbe
jbe
test
cmp
inc
popf
dec
dec
sub
inc
lods
xchg
ret
fcomps
jg
aad
mov
xchg
cmp
inc
pop
pop
mov
and
pop
push
test
aam
mov
xchg
cld
scas
loop
lods
dec
in
xor
dec
jne
jbe
mov
dec
mov
cmc
sti
stc
rol
or
insb
sti
or
and
push
in
outsl
pop
push
fsubrl
int
std
add
cmp
arpl
ja
inc
cmp
into
xchg
scas
sbb
xlat
insb
lcall
stc
push
lds
loope
enter
pusha
sbb
mov
jl
aaa
cltd
loop
mov
add
cmp
out
paddusw
cld
dec
dec
push
dec
sub
scas
sbb
push
addb
and
or
mov
cmp
xchg
bnd
sahf
adc
xchg
sarl
dec
pop
and
lock
rcl
mov
loope
icebp
je
fistpll
scas
jmp
inc
test
cwtl
lds
xchg
adc
lods
xchg
sbb
sbb
push
mov
cwtl
fbld
test
pop
shll
xor
ret
pop
mov
lahf
leave
jb
adc
rolb
iret
push
jb
inc
jne
push
push
aas
pushf
les
roll
testb
pop
adcb
pop
jns
clc
add
sets
jge
ret
push
add
add
jmp
aam
rolb
lahf
push
lock
stos
idivb
sbb
jae
and
lea
and
ficoms
dec
push
cmp
pushf
jb
and
es
lds
orl
mov
jno
adc
inc
or
or
jns
mov
xor
lret
cli
inc
lea
fst
jge
ds
xor
scas
jmp
testb
sbb
iret
push
mov
sbbb
rclb
shlb
or
jle
mov
adc
aam
out
jg
inc
dec
lret
mov
cmpsb
mov
std
ljmp
vsqrtss
cmp
fldl
je
test
xchg
sub
or
cmp
cli
xchg
mov
mov
adc
lods
xor
lock
pop
int
mov
adc
bound
testl
xchg
repz
rcrb
mov
insb
inc
je
inc
test
adc
enter
xchg
outsl
dec
fisubl
insl
cwtl
xchg
mov
pop
repnz
and
and
popa
push
lret
les
xchg
mov
stc
cmc
fisttpl
daa
jb
out
pop
mov
repz
scas
shlb
jns,pn
bound
jnp
and
aas
dec
call
jge
call
mov
mov
or
xchg
outsl
insw
pop
add
mov
lds
push
cltd
aam
xor
jmp
rcrb
daa
pop
jg
add
inc
idivl
insl
mov
jbe
punpckldq
and
sub
xchg
repz
jae
pop
xor
lods
into
cmp
adc
in
and
xchg
push
cmp
xor
out
xchg
ljmp
mov
adc
xlat
insb
xor
fnstsw
lahf
nop
aaa
cmpsl
negl
sbb
mov
push
lret
fdivrp
push
lods
das
mov
sbb
das
or
aaa
mov
leave
sbb
dec
adc
xchg
mov
test
fsub
je
jae
aam
mov
jno
movsl
xchg
aaa
sbb
pushf
pop
mov
or
jle
std
dec
sub
cs
fs
inc
push
aad
inc
mov
mov
out
in
test
inc
std
add
mov
repz
lret
cmp
lahf
mov
mov
pop
lds
cmp
mov
pushw
pop
cmp
mov
adc
cmp
dec
cmpsb
mov
out
xor
iret
les
inc
xchg
mov
popa
lock
mov
rolb
scas
aad
and
and
mov
jmp
hlt
jge
mov
shrb
mov
push
scas
xchg
in
cwtl
pop
xchg
sti
mov
jge
or
push
popf
arpl
sub
es
dec
jmp
push
stos
dec
cmp
jge
mov
add
es
push
sbb
sub
negl
cmp
push
mov
cmpl
fildl
stos
mov
shrb
mov
cld
sub
aaa
xchg
xlat
push
imul
dec
dec
or
add
cmp
aaa
ljmp
movsb
out
xchg
inc
lret
jge
pop
shlb
cwtl
or
int
icebp
inc
xchg
add
push
in
xor
inc
jne
cmp
fisubrl
add
popa
push
scas
adc
mov
sub
lret
fwait
test
sahf
clc
pop
subl
negl
or
sub
xchg
scas
pop
mov
sbb
or
cmpb
push
test
int3
pop
lods
fistps
or
jp
adc
add
jle
jecxz
cmc
jns
sbb
test
adc
xchg
scas
lods
sub
inc
in
xchg
mov
pop
adc
pushf
jns
xchg
xor
fsqrt
rcr
inc
mov
mov
mov
lret
je
inc
imulb
push
rorb
loopne
mov
orb
scas
imul
push
mov
sub
xchg
lods
cmp
add
int
sub
lahf
mov
mov
dec
xchg
fistpl
and
inc
stos
fisubrl
ljmp
cmp
clc
out
out
add
or
je
loop
cmpl
fcmovu
cli
mov
xchg
mov
mov
push
rcrb
imul
mov
lods
xchg
lock
xor
stc
inc
add
insb
mov
aaa
rclb
jge
setne
mov
outsb
out
push
cmpsl
sub
addr16
rcrl
scas
je
adc
ud1
loop
fs
repnz
lahf
pop
jecxz
pop
lock
cmp
hlt
adc
hlt
sti
gs
roll
push
mov
fstpl
push
imul
lcall
sub
ja
lea
decb
or
xchg
add
nop
mov
hlt
out
test
jo
xor
iret
sbb
xchg
add
sbb
jl
xabort
addl
xor
add
movsb
sbb
pop
xchg
sbb
nop
cmpsl
cmc
xlat
mov
adc
push
cmp
ja
pop
sbb
push
mov
cmp
and
lcall
push
incb
push
enter
adc
lret
fsin
adc
push
sbb
jle
or
mov
aaa
cmp
xchg
push
stos
rolb
rclb
ds
add
shll
je
push
jne
dec
das
xchg
orl
pusha
pinsrw
or
mov
jnp
cld
xchg
fisttpl
pop
dec
dec
cmp
xor
adc
call
sti
xchg
xchg
mov
cli
jno
pop
lds
lret
and
cli
dec
shrl
cmp
mov
dec
test
jnp
mov
jnp
outsl
jl
out
xor
repnz
xchg
adc
xor
ss
test
add
test
inc
int
add
cs
fmul
insb
mov
je
mov
jb
shll
sbb
imul
shll
iret
mov
push
loopne
inc
xor
fcomps
out
jnp
mov
dec
xorb
dec
mov
sbb
jge
sub
pop
and
inc
iret
gs
push
lds
cmp
cmp
jns
and
mov
mov
les
lods
cs
stos
stc
or
mov
mov
fwait
ret
add
mov
and
in
cld
pop
fwait
daa
imul
hlt
into
pop
push
insb
push
push
jb
pop
lock
mov
or
jge
xor
jae
dec
pop
jae
inc
fbld
ljmp
mov
or
int
cmp
cmp
rorl
cmc
mov
mov
jl
jae
cli
mov
stos
aad
popf
dec
call
jb
xchg
iret
cmp
lods
mov
lret
fwait
cmpl
ljmp
bound
mov
enter
add
dec
mov
sahf
stc
out
inc
movsl
mov
loop
std
repz
cwtl
xchg
aaa
mov
pushl
adcl
sbb
mov
stos
lock
cld
jle
xor
negb
sbb
jge
mov
mov
addb
int
js
enter
inc
sub
push
sahf
push
lea
lcall
icebp
mov
jnp
sbb
pop
ret
lcall
xchg
sarb
fldt
cmpsl
fsubrl
loope
sbb
cs
sub
xchg
dec
jp
test
jae
mov
dec
push
repz
mov
and
stc
inc
fisttpl
jle
lods
ret
xchg
add
jo
daa
mov
mov
arpl
hlt
sub
xchg
scas
push
push
testb
add
ljmp
dec
lret
and
lods
ret
mov
mov
xor
popf
ffree
and
xchg
sbb
pop
sbb
xor
test
sub
ret
lss
repz
xchg
loop
mov
pusha
pop
jmp
idiv
sub
add
mov
out
push
dec
mov
push
mov
icebp
pop
push
fdivl
jge
cmp
aad
or
jne
dec
mov
std
jno
xchg
jb
popf
in
cmpsl
sub
sub
xchg
push
sbb
cltd
int
push
sbb
xchg
mov
push
fwait
outsl
stos
pop
jecxz
or
ds
xor
pop
and
cmp
sti
push
and
xchg
test
out
adc
cs
pusha
pushf
arpl
mov
pop
or
test
movsl
cwtl
dec
repnz
mov
lret
jge
cmc
scas
or
push
push
pop
add
sub
je
lret
sahf
push
sub
pop
sub
inc
dec
mov
mov
sub
test
push
mov
jno
inc
jl
mov
pop
rolb
repnz
mov
daa
test
push
rorl
cmp
repnz
faddl
hlt
mov
xor
sar
xor
mov
faddl
popa
popa
lds
jp
dec
sbb
push
outsl
xchg
push
inc
push
bound
clc
and
jae
roll
mov
sub
xor
xchg
fldt
jl
add
je
and
ja
sub
mov
cld
das
cld
pop
and
out
mov
mov
bound
and
xchg
in
in
jge
jle
hlt
mov
lods
pop
fidivrs
dec
xor
lret
sti
push
in
repnz
pop
inc
cmc
lret
mov
ret
sub
or
clc
mov
fwait
enter
inc
fs
hlt
cs
lea
imul
jbe
lea
push
mov
push
inc
outsb
shrl
daa
mov
jns
push
mov
dec
test
inc
mov
gs
leave
sahf
cmp
sbb
int
or
jecxz
push
lret
cmp
sub
iret
push
push
dec
cmc
ja
pop
sbb
xchg
push
ret
cs
iret
add
xlat
push
sub
jmp
inc
jg
enter
movsb
adc
movsl
stc
push
jg
loope
lret
nop
push
inc
xor
jle
push
xchg
jns
pop
leave
cld
fidivrs
test
sarl
mov
mov
mov
movsl
fiadds
dec
push
xchg
ds
push
jno
in
and
mov
inc
xor
or
clc
sub
popa
loop
int3
sbbb
insb
mov
mov
gs
imul
stos
inc
jmp
pop
pop
nop
fimuls
mov
lret
dec
cmpl
int3
jecxz
jle
xchg
sub
mov
rcrb
xor
rorl
add
mov
xlat
pop
out
out
push
jmp
testb
pop
mov
call
push
and
aam
repz
mov
sub
sub
or
subl
adc
mov
repnz
sbb
fnstcw
cli
mov
mov
or
cltd
xchg
lret
mov
shr
rol
pop
mov
fdivr
or
out
fwait
jg
push
lock
into
aaa
add
inc
popa
add
or
in
pusha
jg
std
stos
mov
dec
int
scas
push
mov
pusha
xor
in
and
fsts
mov
add
mov
daa
push
push
add
jecxz
mov
iret
data16
adc
fsubrp
push
ja
add
test
loope
rcrb
shll
xor
jo
ljmp
loop
jbe
shrl
pop
sbb
test
mov
mov
pop
fwait
mov
std
jge
movsl
dec
stc
js
pop
in
mov
out
ja
push
jns
or
inc
pop
sbbl
jge
ficoms
push
imul
and
inc
pop
insl
and
in
js
cli
inc
jae
hlt
mov
jae
mov
arpl
clc
push
outsb
push
out
add
mov
ljmp
cmc
sub
sti
adc
mov
mov
or
fistps
inc
out
pop
in
mov
shlb
mov
sub
in
push
imul
cmp
daa
mov
dec
lea
lret
mov
sar
dec
add
sub
pop
mov
sub
mov
mov
in
in
sbb
das
shrl
loope
adc
enter
ret
pop
fisttps
cs
push
pushf
es
lods
ret
fstps
imul
outsb
daa
out
ja
xchg
jg
jge
add
push
sti
sub
sub
lds
jp
pusha
push
popa
cmp
pop
test
das
push
sbb
cmp
orl
ljmp
mov
jnp
jl
pushf
cmp
inc
arpl
mov
enter
adc
or
inc
xchg
lret
xchg
outsl
jecxz
add
and
adc
sub
adc
xchg
daa
dec
cmp
mov
xor
shll
mov
jns
das
sarb
into
adc
jp
push
insl
or
outsl
rcl
pop
and
fdivs
dec
dec
sar
push
sub
inc
and
xor
sub
cld
jb
push
arpl
addr16
and
jb
pop
mov
inc
hlt
sbb
adc
fistpl
cltd
mov
sub
gs
xor
or
scas
jg
xchg
cmp
mov
addb
dec
sub
stos
xor
insb
data16
adc
fisubrl
into
mov
imul
rcr
mov
sub
pop
sbb
dec
xor
mov
negl
jecxz
scas
cmp
insl
fadds
repz
aaa
mov
int3
cmp
mov
xchg
pop
rclb
sbb
push
outsb
pop
imul
cmpb
mov
adc
add
push
jl
dec
cwtl
fdivrl
xchg
cmp
pop
les
mov
fstpt
mov
scas
add
mov
imul
dec
test
addl
cmpb
dec
call
arpl
mov
mov
xchg
fmuls
clc
or
push
xor
or
mov
in
push
and
pop
xchg
mov
ds
iret
xchg
rolb
out
popa
jp
dec
and
hlt
mov
decb
mov
ss
push
xor
adc
loope
add
iret
add
adc
push
aam
sub
ret
icebp
lds
pop
cwtl
aad
mov
icebp
add
and
mov
cmpsl
mov
push
aam
sbb
loopne
push
jmp
xchg
subb
push
stc
pop
and
xchg
imul
adc
sub
int3
push
lret
inc
or
sbb
mov
js
inc
out
pop
shl
lock
enter
aad
jae
test
and
mov
aad
pop
repz
mov
pusha
enter
fdivrl
lcall
cmc
add
xchg
js
cwtl
mov
icebp
stos
aas
and
imul
fiadds
push
jl
aad
or
loopne
dec
sbb
pop
ja
inc
mov
xor
stos
out
mov
test
jg
cmp
xchg
xchg
inc
insl
and
test
int
lods
mov
stos
add
movsb
xor
mov
sti
std
push
pop
jg
push
sbb
pusha
cltd
inc
call
xor
std
in
pop
push
imul
jns
mov
loopne
mull
and
test
xchg
push
push
and
mov
jp
push
cwtl
clc
stos
in
add
add
and
xchg
leave
adc
inc
mov
adcl
jge
test
sbb
inc
mov
mov
mov
rorl
and
cmp
jo
adc
je
jne
mov
je
mov
iret
cmp
incl
aam
sub
dec
fadds
adc
cmc
lret
rolb
pop
pop
les
xchg
mov
js
adc
inc
lahf
mov
mov
jmp
jl
fs
sbb
cmp
test
movsl
shl
push
push
xor
shll
jge
jne
loop
jmp
hlt
or
test
sbbb
sbb
mov
iret
push
mov
and
inc
lret
pop
jo
ja
mov
xchg
mov
push
xchg
mov
sub
jge
out
add
out
adc
inc
loop
ss
jmp
insl
sbb
lea
fwait
cld
and
cmp
mov
sub
push
sub
sbb
stc
out
or
cwtl
inc
and
push
in
lock
sbb
cld
mov
js
xor
add
cmc
mov
nop
imul
sub
shll
cmp
jge
movsb
add
xchg
jecxz
pop
pop
xchg
mov
push
leave
add
sbb
js
xor
lahf
movsb
fdivrp
mov
outsl
loop
pop
mov
int3
sub
sti
cmp
stc
and
rorb
xchg
mov
stc
sub
cmc
repnz
in
push
and
loop
inc
bsr
imul
insb
sub
lret
addr16
xor
imul
mov
xchg
mov
cltd
dec
es
xchg
and
sbb
shlb
sbb
stc
or
ljmp
sbb
sarl
andb
inc
bound
lahf
fcmovu
int
aas
xchg
pop
aam
fmuls
inc
xchg
fidivl
loop
jge
push
lret
leave
inc
jle
stos
clc
add
mov
scas
pop
repnz
jno
fldl
xchg
test
add
inc
call
imul
test
mov
sub
test
xor
int3
out
dec
mov
insb
dec
push
out
xchg
in
adc
push
pop
push
pusha
jb
cld
cmpl
les
inc
jg
mov
xchg
test
sbb
dec
enter
add
pop
mov
mov
roll
xchg
movsl
push
and
mov
and
jns
add
jb
sbb
addr16
jge
icebp
out
leave
imul
jns
outsb
inc
jmp
inc
pop
and
js
popf
arpl
cld
rcrl
mov
jecxz
and
adc
movd
jp
jmp
pop
pushf
adc
inc
fisubrs
mov
pop
int
push
jo
xchg
call
cmp
or
shll
mov
or
fdivs
jmp
and
inc
lock
aas
jnp
dec
leave
add
lds
jns
not
pop
jo
test
xchg
jecxz
insb
pop
cmpsb
push
or
repz
fsubrl
push
lret
jl
jb
or
mov
rcl
or
mov
les
lret
mov
loope
addl
mov
xchg
and
jns
push
jnp
rcr
cmpsb
rcrl
adc
jmp
xchg
and
adc
stc
xchg
std
sub
mov
pop
out
mov
adc
loope
int
fwait
or
pop
push
lcall
pop
movlps
pop
imul
nop
pop
das
adc
sub
pop
push
sbbl
mov
xor
lods
pop
mov
negb
or
push
inc
jecxz
push
cli
pop
adc
aaa
ljmp
add
xchg
pop
pop
push
fistps
jns
inc
fnstcw
mov
jle
or
in
mov
add
mov
inc
push
mov
cmpsb
ljmp
pop
add
jnp
inc
jmp
movsl
push
clc
mov
fwait
addl
lahf
les
push
fidivrs
pusha
push
cs
rcrb
xchg
js
sbb
inc
push
popa
adc
cmpsb
xchg
jp
mov
inc
fwait
jb
pop
je
dec
push
xchg
das
gs
in
das
dec
jbe
pop
inc
js
jo
cmp
add
lret
repnz
insl
sbb
adcb
out
inc
aad
hlt
icebp
mov
mov
push
negb
addr16
mov
js
add
pop
jbe
lea
arpl
cmpsl
pop
inc
xor
push
inc
dec
movsl
sbb
adc
into
add
js
aas
movsb
mov
iret
inc
andb
fcoms
xor
repnz
fsubs
dec
dec
in
fisubl
out
add
fiaddl
lods
add
or
or
push
add
xor
mov
loope
ret
nop
nop
pop
dec
ja
or
inc
dec
btc
outsb
mov
cmpsb
push
and
fildl
popf
add
cmp
int3
jae
popf
or
mov
vhsubps
sbb
cltd
clc
stos
push
lret
sub
outsl
mov
add
cmp
repz
out
add
xchg
shrb
mov
xchg
mov
dec
pop
mov
outsb
cmpsb
jecxz
shll
dec
cmp
sub
mov
rcrb
aad
adc
jb
push
test
daa
in
mov
inc
fsubl
push
fmuls
leave
mov
ja
std
inc
out
mov
ficoms
and
shrl
mov
adc
sub
jp
les
mov
ret
ds
mov
dec
dec
divl
int3
imul
sbb
fdivs
andl
mov
out
mov
subb
stos
mov
mov
ljmp
lahf
push
add
sbb
mov
xor
or
inc
dec
mov
push
fsubrl
cmp
pop
xor
loopne
fistpl
mov
jle
jns
sbb
loopne
rcll
lods
aaa
and
rorl
test
stos
popa
scas
inc
mov
das
int
dec
pushf
mov
ljmp
push
xchg
notl
aaa
pop
jle
nop
mov
and
jmp
cli
jb
es
aas
add
jns
sbb
mov
xor
jle
sti
les
outsl
gs
cmp
scas
dec
mov
fmulp
popa
fnstenv
lods
lds
insb
scas
push
pop
popa
xchg
mov
ja
in
stos
sub
fcomip
or
fucomip
gs
mov
mov
std
pop
repz
xchg
lods
out
dec
or
out
roll
mov
pushf
cmpsl
repz
push
push
mov
dec
bound
add
mov
cltd
in
int3
cmp
inc
in
addl
pop
pusha
mov
add
adc
dec
test
xchg
push
sbb
sub
loopne
pushf
push
xchg
out
sbb
pop
mov
and
fidivl
cmp
sbb
jo
ficoms
lds
pop
cs
xor
sub
xchg
xchg
inc
or
lds
and
test
xchg
sbb
mov
leave
cmp
lcall
pop
iret
mov
lods
jno
mov
int
jl
aam
mov
mov
push
ret
adc
add
jge,pt
lret
cmp
rcrb
add
jmp
xor
dec
cltd
movsb
decl
adcb
cmpsb
mov
movl
js
and
mov
adc
scas
mov
insb
mov
in
sub
or
pop
aas
ret
cwtl
adc
push
sub
inc
mov
loope
les
subl
mov
lret
outsb
enter
dec
cmp
cmp
movsb
mov
in
out
push
int3
mov
push
dec
adc
rcrb
jmp
dec
jns
loop
mov
jge
xlat
pop
inc
shrl
mov
iret
push
stos
outsl
or
mov
jle
sarl
mov
mov
outsl
movsl
sbb
orb
push
mov
jle
out
cld
test
sbb
inc
mov
jne
mov
repz
or
xor
or
imul
inc
les
adc
xchg
dec
push
push
mov
jge
in
cmp
inc
mov
push
mov
lea
fcomip
jmp
dec
jbe
int
ds
xor
sub
mov
add
push
lahf
hlt
inc
push
pop
enter
aas
push
stos
aaa
and
jnp
cmp
jnp
jecxz
mov
cmp
push
jnp
imul
inc
cmp
adc
dec
xchg
out
mov
xchg
add
repnz
loop
insl
jmp
sub
add
cmp
cmp
xchg
jnp
jne
addb
sti
mov
add
test
xchg
in
sbb
in
xchg
xlat
enter
aaa
jo
push
lcall
test
lods
test
rcll
loopne
popa
pop
mov
adcb
or
loopne,pn
lret
insl
popf
push
out
and
pop
jmp
mov
jo
add
cmpsl
dec
nop
stos
xchg
mov
jge
jle
dec
insl
arpl
les
xchg
leave
rclb
mov
hlt
shl
adc
insb
stos
cld
mov
stos
jp
mov
sub
pop
movsb
in
ss
mov
call
dec
fwait
mov
push
adc
mov
ds
pop
and
scas
loopne
scas
xchg
mov
cmp
pop
insb
scas
and
sub
aam
cli
sub
mov
sarb
pop
xabort
pushf
or
xchg
into
jge
push
xchg
pop
int
mov
sbb
mov
push
jge
inc
insl
and
iret
aaa
dec
addr16
sahf
jmp
rcr
inc
mov
cmp
pop
xor
imul
jle
movsl
daa
dec
imul
mov
lret
mov
mov
int
dec
jnp
out
mov
cmp
sti
in
or
out
mov
mov
xor
outsb
and
dec
cmp
mov
jl
push
add
sbb
movsl
or
dec
lods
inc
dec
xor
adc
out
fwait
xor
cmpsl
inc
btr
shll
xchg
inc
push
sbb
ss
hlt
scas
cwtl
sbb
xlat
xchg
or
jp
inc
push
pop
push
push
jmp
ret
bound
in
xor
movsl
xor
popf
add
dec
cs
mov
push
xor
adc
test
icebp
mov
pop
cwtl
int
scas
fwait
sbb
je
add
fdivs
in
gs
loopne
cmp
addr16
add
lods
xor
jo
jno
mov
cmc
aaa
arpl
out
int3
test
push
ja
shlb
bnd
adc
ret
mov
mov
sbb
jno
decb
std
idivl
scas
clc
jp
mov
jmp
rcrb
lahf
pop
cmpsb
or
loope
pop
dec
sbb
ja
addr16
and
pop
push
pushf
popf
sbb
mov
inc
sbb
jle
mov
cmp
jo
xor
lea
enter
inc
ja
rcll
push
xor
or
and
jne
cmp
imul
add
scas
lret
xor
push
xchg
sbb
call
into
jo
xor
cmpsl
pop
inc
xor
arpl
push
negb
add
mov
cmp
push
leave
adc
mov
mov
cli
cmpsl
cmp
xor
ljmp
mov
movsb
test
ja
push
mov
js
add
and
rcl
pushf
iret
push
fidivrs
mov
add
sbbb
sbb
lcall
xchg
sbb
jmp
mov
sbb
add
sbb
cmp
sbb
xchg
or
cs
lds
aam
mov
sahf
dec
enter
loope
enter
mov
pop
test
data16
or
in
andl
cmpsb
pop
and
inc
in
cwtl
leave
mov
iret
jns
int3
pusha
adc
cmp
sarb
sbb
pop
mov
sub
adc
movsl
pop
cld
cmpsl
inc
lods
popa
push
sbb
mov
cmpsl
cmp
mov
mov
and
pop
jecxz
push
and
and
lret
stos
fisubrl
scas
push
imul
repz
icebp
jg
movsb
shlb
add
push
adc
jbe
pop
add
outsl
jb
rorl
dec
nop
jo
in
out
pop
aaa
sbb
inc
add
fiaddl
xchg
cmpsl
cmp
mov
jge
cmp
xchg
sub
fs
xor
xor
jno
add
push
jmp
push
out
bound
xchg
inc
push
jbe
test
fimuls
mov
clc
jp
pop
inc
push
cwtl
testl
cmp
jb
pop
jnp
mov
cmpsb
fisttps
scas
in
xor
pushf
mov
xor
ljmp
mov
das
bswap
aaa
mov
lret
insl
ficoms
mov
lcall
and
ror
mov
mov
xorb
test
pop
test
popf
xlat
sub
push
pop
out
lods
xchg
xchg
fwait
push
jbe
in
cwtl
add
icebp
push
popf
ds
push
add
adc
lods
adc
sub
in
and
lret
mov
fldt
out
jle
fnsetpm(287
repnz
lods
and
cmpsb
ljmp
pop
loope
pop
ss
lcall
mov
or
or
mov
mov
pop
in
lret
xchg
inc
or
cmpsb
addb
or
cmpsl
shlb
std
xchg
sub
sub
lods
push
inc
movsb
or
lcall
rcrl
jb
ljmp
mov
sbb
and
push
loope
pop
sub
in
subb
sahf
adc
mov
cmp
jns
mov
xor
cmp
out
jno
push
push
mov
cmp
adc
sbb
cmpsl
dec
stos
ss
dec
sub
sbb
xor
ljmp
pop
or
jae
dec
cmpsl
rcrb
rcr
repnz
mov
lahf
add
inc
push
sahf
adc
aad
mov
stos
and
dec
aad
adc
stos
out
out
push
call
inc
cmp
dec
std
stos
cmpsl
xor
add
icebp
pushf
outsb
mov
mov
inc
pushf
pop
inc
imul
out
xor
je
and
adc
inc
shr
dec
mov
aaa
xlat
aam
out
sbb
dec
or
pop
add
or
nop
push
jbe
outsb
movsl
push
js
outsb
xchg
xor
popa
cmovbe
lret
lret
lret
dec
mov
sbb
icebp
jae
es
out
and
pop
mov
jno
mov
sub
out
jmp
xor
repz
fsubrs
cmp
imul
adc
loopne
je
inc
sbb
add
jmp
push
nop
in
scas
add
pop
loop
pop
push
fnstenv
test
mov
sub
dec
sbb
call
add
test
sbb
arpl
adc
push
orb
sbb
arpl
xor
movsl
out
not
in
cli
mov
and
pop
jb
sti
pop
iret
xor
cmp
fisubs
or
and
push
pop
sub
push
xchg
xchg
jb
daa
pop
aaa
pop
cmp
adc
jo
lcall
into
ret
jg
sub
lods
or
push
mov
pop
ds
aas
notb
aad
and
outsl
ss
mov
cmc
jle
imul
and
out
inc
sbbb
add
arpl
xor
push
and
popf
daa
xchg
test
cmpsb
jecxz
push
lods
mov
out
cmp
or
outsb
and
mov
sub
mov
jne
mov
js
xor
ss
fwait
out
cmp
ss
daa
mov
dec
or
adc
bound
in
mov
cld
lds
sbb
mov
jmp
jae
test
and
lret
and
imul
scas
xchg
hlt
mov
insb
fsubs
xchg
addr16
pop
xchg
mov
mov
jle
lcall
pop
out
mov
test
dec
push
loope
adc
ret
mov
repnz
insb
dec
dec
or
ds
inc
outsb
xor
xchg
mov
jp
movsl
jbe
outsl
or
add
cwtl
adc
adc
mov
sub
or
mov
xchg
push
xchg
outsl
shll
xchg
xchg
stos
add
push
mulb
and
pushf
movl
shl
or
lods
push
push
add
bound
ja
xchg
jns
dec
pop
mov
sub
and
repnz
inc
test
imul
dec
out
add
sbb
fcmovbe
sub
fbld
push
clc
pop
push
or
jnp
sbb
test
inc
inc
aas
mov
leave
mov
xchg
dec
pop
stc
mov
ja
das
xchg
enter
cli
sarl
push
fsubs
sub
mov
mov
jp
xor
loopne
ja
inc
stc
arpl
add
mov
cmp
int3
push
mov
es
stc
push
and
fisubrs
pop
insl
pushf
idivb
loop
push
jne
subl
xor
push
inc
lret
pop
pusha
fistps
mov
xchg
xor
push
pop
mov
sub
inc
cmp
movsb
jp
std
xlat
faddl
lds
ret
jg
and
dec
lock
loope
mov
push
mov
dec
mov
imul
loope
or
jbe,pt
jmp
sub
lret
xor
dec
les
call
push
shll
or
push
mov
fmuls
sub
mov
lret
sahf
pop
nop
mov
mov
inc
mov
xchg
fwait
movsl
pop
mov
ljmp
lds
inc
lahf
push
pop
jge
adc
lsl
push
dec
arpl
xchg
mov
cs
jmp
pop
xlat
out
scas
or
test
js
js
sub
inc
cmp
pop
movsb
sahf
sarb
std
inc
mov
mov
loope
mov
test
sub
lahf
sub
mov
jbe
dec
inc
add
xchg
dec
cmc
xchg
dec
movsb
into
out
sub
mov
fnstenv
push
mov
data16
bnd
dec
xchg
cmpsl
repz
mov
out
or
sub
pusha
sbb
dec
cmp
sbb
movsb
sbb
in
sbb
dec
jl
and
mov
jbe
cmp
pop
gs
stos
mov
lds
out
cli
addb
or
sbb
insb
outsb
mov
into
orl
js
roll
arpl
je
sbb
jg
ja
dec
sbb
int
jb
add
add
jmp
aaa
mov
out
inc
cld
inc
dec
insl
adc
loope
mov
mov
and
xchg
xchg
dec
mov
adc
cwtl
addr16
insl
pop
jmp
adc
out
movsl
cmpsl
outsl
loope
filds
mov
aad
cmp
or
pop
mov
cmpsl
mov
xorb
jle
arpl
fnop
cmp
pop
imul
jmp
imul
mov
inc
in
push
inc
imulb
push
sub
push
test
and
in
xchg
idivl
jle
xchg
mov
scas
cmp
cmc
int
push
repnz
pop
push
stc
dec
test
loopne
mov
adc
mov
popf
xchg
add
fwait
cmp
outsb
dec
push
test
mov
push
test
ret
frstor
call
test
xchg
xlat
and
sub
rcrl
push
jle
push
or
arpl
add
sbbb
inc
add
pop
xchg
inc
fadd
and
mov
iret
push
pop
dec
sbb
scas
fistps
sbb
dec
jnp
push
cmp
lods
hlt
xchg
sub
cmpsl
es
and
popa
bound
add
mov
scas
popf
xchg
push
lret
sbb
pop
out
mull
push
sub
push
iret
inc
jae
arpl
repz
outsl
pusha
cmp
lds
push
mov
mov
nop
ja
or
pusha
movsb
fwait
xor
adc
jg
stos
and
je
pop
mov
sbbl
or
inc
inc
adc
nop
gs
push
xor
iret
push
mov
cli
movsl
popa
test
sub
push
popa
inc
outsl
les
push
test
fs
test
inc
jg
iret
les
pop
and
and
pop
lds
lock
sbbb
outsb
or
cmp
xor
mov
ss
sub
dec
je
jle
repz
adc
cmp
jbe
test
xchg
cmp
lea
sahf
cld
xchg
addb
mov
sti
add
xor
or
lret
sub
cmpsl
das
lods
stos
and
ljmp
add
sahf
push
sub
sbb
fldl
imul
push
cmp
inc
fdivs
pop
mov
cmp
pop
loope
iret
out
leave
rcrb
in
xor
or
and
lea
lods
test
adc
mov
insl
jnp
xor
subb
cmp
xchg
push
mov
inc
loope
add
push
fists
sahf
addr16
mov
push
cmp
add
jne
add
inc
or
adc
push
popa
jecxz
repnz
and
pop
jecxz
push
mov
add
in
and
mov
es
popa
add
xlat
jl
lret
xor
enter
pop
ret
or
mov
lahf
cmp
addr16
adc
adc
daa
xor
loopne
mov
lods
mov
sub
xchg
test
scas
sbb
ret
or
pop
fsubs
sub
pop
dec
dec
mov
aaa
mov
sti
nop
mov
jmp
lods
sbb
mov
xor
inc
lock
in
jns
push
xor
mov
dec
pop
inc
mov
push
cmp
test
mov
in
mov
call
aaa
outsl
sbbb
dec
pop
and
in
mov
cmp
in
jmp
xor
lock
push
push
jle
movsb
nop
mov
jmp
pop
xlat
insl
outsb
ret
sub
popa
xor
xlat
adcl
mov
adc
fnstcw
bound
mov
das
cmp
stos
push
mov
inc
xor
fsubr
cmp
shll
imul
fnstsw
and
lods
fsubp
outsl
sbb
pop
inc
arpl
push
aas
cld
lods
bound
mov
outsb
inc
jmp
push
sub
incl
pop
mov
andb
mov
xchg
ror
adc
ljmp
ljmp
jmp
mov
mov
gs
movsl
xor
xor
jge
aam
and
mov
aas
lret
icebp
jecxz
fbld
rorl
test
push
loop
sti
ret
cs
loop
fiadds
sti
cmp
in
jns
fnstcw
bound
xchg
sub
lcall
pop
xlat
cmpsl
das
fistpll
leave
ret
testb
lods
loop
add
sarl
xchg
pop
cmp
mov
in
scas
jno
cmc
repz
jae
lcall
jle
mov
push
arpl
add
jne
jo
and
adc
pop
nop
ds
ss
outsl
orb
push
and
jne
rol
out
jg
fwait
pop
fwait
and
ja
repz
movsb
xor
stc
subb
dec
sbb
in
pop
aam
scas
xor
rclb
push
ficoms
stos
xor
das
popf
imul
xchg
push
cwtl
ret
js
in
cmpsl
iret
sbb
or
movsb
and
scas
loopne
and
mov
xor
daa
inc
lret
movsl
lods
rcr
scas
popa
mov
popf
and
pop
lods
push
xorb
sbb
lcall
inc
mov
adc
add
mov
movsb
out
mov
or
jge
rcl
push
inc
iret
and
movsl
sub
into
mov
sbb
lahf
into
insl
in
test
imul
adc
fimull
inc
and
data16
sarl
std
or
ds
sbb
cmc
sub
mov
jle
mov
sbb
into
add
movsb
in
xorl
cmpsl
out
ds
xchg
mov
adc
in
mov
cltd
addr16
enter
pop
adc
ret
aad
and
jecxz
imul
cli
sub
mov
push
je
nop
and
mov
nop
aas
cmp
xchg
jmp
mov
in
scas
jae
cmc
cmp
mov
and
mov
mov
iret
or
ds
cwtl
aas
repz
sbb
inc
aaa
stc
inc
mov
lret
mov
outsb
std
in
cld
cmp
test
fs
inc
or
pop
inc
pusha
imul
sbb
jb
orb
lock
cli
lock
mov
pop
lret
push
fwait
xchg
dec
and
xchg
and
fidivl
or
or
pusha
sub
push
sbb
stos
jne
in
insl
mov
and
imul
cs
pop
adc
das
sub
popa
das
leave
dec
out
cmp
cmp
mov
jle
cmc
dec
jmp
pop
hlt
and
dec
aad
insl
add
jb
lods
mov
leave
ficoml
sub
pop
sub
or
sub
xchg
pop
aad
call
mov
fnsave
sub
mov
insb
test
and
int
or
push
sub
out
sti
jmp
sahf
jo
sub
cmp
aaa
addb
adc
aaa
mov
push
add
jae
jg
and
pop
out
ss
dec
fsts
mov
pop
imull
adc
mov
mov
or
dec
add
jno
repz
sbb
lcall
in
fwait
mov
cli
jmp
xchg
jnp
fiaddl
imul
sahf
mov
xchg
jne
data16
nop
mov
fisubrl
in
and
cmp
xor
les
nop
setno
inc
cs
js
mov
test
stc
aaa
cltd
rclb
mov
dec
and
sbb
push
adc
and
out
push
mov
sub
add
jecxz
xor
push
inc
mov
push
repnz
int3
adcb
and
push
sub
add
imul
or
into
cmp
lcall
and
cli
xchg
lock
in
imul
sbb
xor
and
test
mov
jp
xchg
iret
int3
movsl
or
pusha
dec
lret
xorl
xchg
cmp
xor
rcr
test
push
int3
pop
push
xor
cmp
push
xlat
shlb
inc
iret
push
or
push
xchg
outsb
push
mov
pushf
add
dec
iret
sub
lds
sbb
jae
sbb
pop
jbe
cmpsl
add
pop
inc
pop
sub
jle
adc
cmc
rolb
cmp
mov
andb
rorl
dec
adc
push
outsb
xchg
aad
push
mov
cmp
mov
out
cmp
aas
stos
xorl
and
add
jo
xlat
sub
frstor
call
in
lret
insb
pop
shrb
cld
mov
test
add
loopne
or
stc
pop
mov
movsl
mov
sub
sbb
jge
mov
cmp
lret
jb
add
rcrl
aas
mov
pop
cmpsb
ss
lcall
ds
adc
push
stc
fistpll
insl
and
jecxz
lahf
clc
jns
repz
push
mov
iret
stos
rcr
sbb
and
cmp
scas
sti
sti
pushf
dec
xchg
test
fildl
xchg
jl
popa
mov
gs
jns
dec
sti
mov
sbb
push
fmulp
outsb
adc
pop
pop
or
orb
int3
mov
xchg
loop
ficoml
sbb
adc
js
fistpll
cmpsl
mov
sbb
mov
cmp
outsl
cltd
push
test
ja
add
fldenv
les
sub
daa
or
xor
lock
and
xchg
in
nop
icebp
pusha
stos
out
mov
in
mov
lods
jg
repnz
xor
loopne
std
iret
dec
arpl
aas
add
ret
mov
pop
jge
sbb
mov
testb
mov
rcr
cmp
or
sub
scas
push
test
jg
pop
jg
fwait
hlt
movsl
loopne
mov
cmpsb
jge
fisubl
loop
stc
jne
and
and
xchg
ret
jno
scas
hlt
mov
add
mov
in
into
inc
mov
in
dec
stos
test
push
and
xchg
mov
les
imul
in
and
inc
mov
add
pop
and
push
hlt
fadds
pop
shrb
jns
cli
pop
jo
xlat
mov
mov
lea
jl
push
enter
cmp
cltd
std
cmp
insb
xchg
lds
int
cs
dec
ror
js
and
jmp
fstpl
test
shl
pop
jmp
pushf
sti
or
inc
lret
out
jecxz
jg
mov
ret
xchg
fists
pop
lcall
push
mov
sahf
jbe
mov
into
or
and
fs
mov
dec
mov
jg
jns
stc
dec
jle
into
inc
inc
sahf
cli
sbb
xchg
jno
inc
jecxz
xchg
mov
jp
clc
stos
dec
rcr
xor
mov
dec
sub
hlt
add
cmc
xchg
mov
in
in
push
lcall
data16
sub
rolb
mov
lahf
dec
push
adc
inc
std
js
ljmp
out
lahf
and
mov
repnz
push
out
sbb
rorb
out
inc
jne
or
aas
mov
repnz
das
sub
jge
orl
imul
enter
mov
jmp
test
stos
int3
mov
jnp
stc
pop
fldt
mov
dec
ja
nop
add
lods
imul
aam
cmp
in
aas
stos
mov
fucomi
dec
xor
push
and
scas
imul
pushf
fisubrl
cmc
adc
xor
sub
mov
icebp
repnz
gs
xchg
mov
fisttpll
mov
aaa
cmp
adc
sbb
push
movsb
out
into
xchg
nop
jno
push
mov
xor
lcall
xor
mov
adc
fmull
cmp
les
aas
xchg
fisttpl
xchg
push
sub
cmpsb
cmc
cli
std
inc
out
int
pusha
xchg
cltd
dec
lods
push
mov
inc
pop
hlt
test
icebp
mov
xor
sub
jmp
stos
mov
lds
cli
mov
mov
jge
inc
imul
lahf
xchg
or
cld
aas
push
gs
mov
bound
pop
mov
jo
movsb
sub
sbb
je
out
test
push
lret
mov
pop
inc
js
hlt
adc
ret
in
lret
adc
ljmp
mov
inc
shlb
push
mov
stos
xchg
cmc
sbb
test
fwait
pop
into
push
in
js
enter
xor
xchg
cltd
mov
insb
test
jae
in
inc
test
sbb
clc
inc
cmp
push
ljmp
sub
mov
xlat
cld
push
push
sahf
add
inc
repnz
mov
adc
pop
loope
test
aam
mov
pop
mov
add
cmpsb
je
test
movsb
adcl
or
inc
pop
stos
inc
sti
jae
fdivs
orb
out
popa
repz
inc
cwtl
or
add
push
lret
ljmp
cs
xor
dec
inc
xor
aaa
mov
xchg
sub
mov
push
xor
rclb
xor
mov
lahf
loopne
test
int3
repz
ret
dec
push
or
pop
mov
mov
pop
mov
sti
cmpl
cmpsb
mov
imulb
pop
pop
into
repnz
push
and
mov
dec
jne
inc
sub
nop
mov
push
xchg
cs
rclb
loop
mov
mov
lret
inc
sub
aas
push
cmp
in
rcll
sti
xchg
enter
inc
cld
movb
in
pop
in
or
shll
paddq
stos
pop
pop
popa
insl
mov
mov
xchg
pop
dec
dec
shl
divb
shr
pusha
addr16
jne
sbb
mov
jo
mov
push
sbb
hlt
les
mov
es
cltd
inc
mov
mov
or
xor
fs
or
sbb
js
call
mov
jmp
popl
mov
and
sub
adc
imul
out
into
add
movsl
dec
inc
aam
sbb
or
imul
into
sub
push
dec
add
jmp
jmp
cmpsl
mov
lcall
push
aam
push
mov
sbb
push
or
cmp
int
js
das
subl
or
push
test
xor
mov
js
stc
insb
xor
stc
mov
ficoml
pop
data16
sbb
push
jb
in
sbb
ret
add
jb
lods
or
dec
sub
sub
loopne
cmp
cmp
mov
jb
rep
std
lods
negl
cmp
or
mov
ds
jmp
sbb
into
pusha
xchg
mov
in
insb
sti
jg
jp
push
sub
loopne
gs
jb
xchg
rorl
mov
cmp
outsb
mov
dec
add
mov
add
es
rorl
cli
std
and
add
rcll
mov
xor
xor
fmull
sbb
adc
loop
pop
add
stos
xchg
or
inc
cmc
mov
mov
pop
les
pop
or
mov
clc
ucomiss
or
arpl
insl
sbbb
xchg
decl
sub
push
mov
sbb
fnstcw
daa
and
xchg
add
stos
ja
adc
mov
xchg
rolb
push
sbb
push
cltd
mov
xor
and
loopne
cmp
lcall
movsb
xchg
mov
les
or
out
pusha
jo
pop
data16
or
ret
push
lods
push
xor
cmpsl
fnstcw
sub
xchg
cmc
dec
add
lea
shll
xor
pop
pop
mov
xor
inc
repz
push
dec
or
mov
negb
rorl
cmc
xchg
cmp
inc
add
jb
push
sub
jo
dec
cmp
mov
rorl
xrstors
pop
dec
inc
mov
cmpsb
xchg
ja
insb
xchg
sbb
dec
or
test
clc
push
outsb
mov
orb
and
das
or
mov
push
dec
push
ret
and
stos
sbb
ror
pop
xor
decb
nop
ret
sub
mov
and
push
test
icebp
mov
lret
mov
pop
jle
or
loopne
or
xchg
aas
push
mov
iret
mov
sub
push
sub
aam
xchg
ja
cltd
sarb
sbb
cmp
out
lods
jecxz
xor
imul
test
cli
mov
add
scas
add
fnstcw
adc
inc
repz
es
out
shrb
fmuls
push
popf
mov
pop
mov
jmp
push
pop
jnp
pushf
mov
bound
sbb
out
and
inc
mov
daa
mov
or
xor
int
xchg
lret
push
sar
in
xlat
arpl
push
xchg
mov
popa
mov
sub
scas
mov
fisttps
xchg
adc
popf
dec
or
dec
test
mov
adc
xor
push
fisubs
push
inc
arpl
mov
ss
mov
push
gs
lods
cld
cmp
mov
xchg
outsb
push
mov
xchg
jg
push
movsb
dec
insb
ror
dec
cmp
adc
insl
push
cmp
add
mov
test
cmp
movsb
jmp
xor
das
nop
inc
shll
lock
xchg
cltd
push
xchg
les
mov
test
orl
inc
pop
jp
dec
pop
push
and
sbb
push
vsubsd
mov
xchg
mov
jo
mov
jbe
rcr
or
mov
adc
mov
sub
in
in
lret
std
inc
mov
adc
iret
mov
sbb
sbb
mov
sbb
ds
in
cmp
lret
out
lret
pop
xchg
adc
shlb
dec
fs
inc
mov
jle
cmp
mov
rorb
sub
insb
dec
in
stc
movl
mov
push
mov
aam
add
out
xchg
mov
cmp
push
push
fisttpll
xlat
jns
jg
sbb
and
pop
rclb
cmp
fwait
test
das
scas
mov
cltd
inc
cmp
repz
mov
xor
movsl
inc
outsb
cmpsb
pop
add
mov
push
bnd
fisttps
lahf
aaa
icebp
adc
xchg
fnstcw
xchg
lea
mov
fdivl
test
xchg
adc
enter
rcrl
mov
jmp
ss
inc
cmp
lret
xchg
sub
mov
mov
sar
add
movb
cmp
mov
aas
sub
xchg
mov
jno
add
push
pop
dec
xchg
clc
stc
mov
xlat
in
xchg
dec
stc
repz
add
arpl
pop
and
test
mov
ret
cmpsl
int
stc
ret
rorl
mov
loop
mov
dec
mov
in
mov
imulb
jno
lahf
push
jp
shll
xchg
xchg
outsl
aad
repz
jg
jle
xlat
std
aam
sub
orl
mov
cld
mov
mov
add
sbbb
rcr
data16
cli
lock
sti
sub
push
ja
jo
movsl
mov
popf
and
mov
mov
jne
outsl
push
or
pop
xchg
jne
xor
add
lahf
int
cmc
jmp
mov
fcomps
pushf
jmp
into
push
cmp
dec
jnp
and
repz
loope
je
ret
xlat
cltd
push
bnd
mov
fnstsw
mov
es
mov
jecxz
imul
jae
adc
movsb
je
mov
xchg
outsb
lret
stc
mov
out
les
push
sbb
xor
sar
inc
xchg
data16
ss
sahf
lock
cmp
outsb
ja
cli
sbb
pop
push
lea
pop
outsb
push
mov
dec
in
enter
dec
imul
mov
fsubs
or
out
loope
pop
pushf
sti
repnz
cli
movsl
jp
or
adc
jnp
xchg
ret
test
lea
dec
push
sahf
popa
push
jne
xor
inc
adc
add
xchg
push
ljmp
in
jle
dec
repz
add
or
cwtl
imul
mov
mulb
lock
mov
sbb
push
scas
gs
cmp
imulb
daa
push
push
xor
cltd
sbb
cld
in
or
push
div
lea
pusha
pop
dec
imulb
xchg
test
mov
loope
dec
das
je
hlt
lcallw
or
loop
xchg
ss
fnstcw
psrad
repnz
xchg
push
bound
or
or
arpl
es
xchg
jb
ds
or
cmpl
aas
imul
int
pop
push
subl
xchg
lock
imul
xchg
in
jno
fidivrl
sub
repnz
adc
incl
mov
jae
adc
sub
js
loopne
rolb
sub
loopne
pop
push
fcomip
loope
fdivrl
adcb
xor
xchg
jp
je
decb
mov
and
outsb
xor
xlat
jo
inc
push
stc
mov
jle
pusha
adc
iret
xor
add
fscale
adcl
popf
cmp
je
inc
and
into
subb
fwait
nop
cmp
cmpsl
out
imul
clc
xchg
ds
push
aam
ja
jl
dec
ds
mov
stos
mov
mov
mov
int3
inc
mov
or
je
mov
es
lret
sub
push
adc
test
xchg
add
jmp
sub
lahf
stos
mov
inc
push
push
insb
add
fistpll
adcl
add
cld
lret
and
cmp
mov
iret
outsb
jae
lret
rcrb
or
mov
dec
lahf
xor
lahf
fldenv
fmuls
push
aad
aad
and
cmp
loopne
pusha
cmovg
push
cmc
rol
dec
lods
imul
das
dec
in
lret
inc
iret
push
adc
xchg
fdivrl
es
scas
adc
dec
dec
or
fsubl
or
push
iret
inc
fbld
idivb
nop
xchg
cmc
sbb
fists
in
mov
push
push
movsb
imul
cmpsb
test
mov
cwtl
popa
lcall
dec
dec
push
mov
sbb
enter
dec
adc
dec
cmp
mov
sbb
popf
in
mov
jge
pop
jb
stos
test
add
loopne
addl
adc
or
cli
ljmp
push
push
cs
sub
int
sbb
jg
mov
mov
inc
push
mov
out
sub
ljmp
stos
mov
in
dec
insb
sbb
repnz
or
test
out
push
inc
js
sbb
leave
stc
sub
push
in
cmp
cmpsl
sub
dec
insl
shrb
or
sbb
mov
imul
push
cmp
mov
movsl
and
jecxz
jecxz
imul
out
sub
rolb
int3
out
lcall
push
xor
aaa
lock
jge
xorl
push
sbb
mov
mov
sbb
out
out
ljmp
mov
lock
das
mov
dec
int
cltd
dec
sahf
stos
mov
insl
jmp
inc
adc
add
pop
insl
daa
mov
test
cmpsb
sub
inc
push
shrl
xor
xchg
inc
mov
movsl
mov
xlat
lcall
xlat
xor
repz
and
hlt
dec
add
out
mov
mov
shlb
mov
fnstenv
testl
je
test
in
out
sub
xchg
and
add
jge
xorb
mov
fcompl
mulb
lret
fsqrt
push
sbb
add
xorl
pop
mov
cs
mov
mov
xchg
rcr
shrb
xor
xchg
js
push
and
inc
enter
hlt
pop
rol
or
dec
mov
stos
push
pop
negb
leave
mov
int
mov
pop
call
rolb
cwtl
mov
aaa
mov
mov
adc
and
add
and
hlt
sbb
in
xor
mov
pop
fbstp
sub
sub
or
sbb
mov
hlt
inc
mov
push
fs
sti
lock
xchg
orl
pop
and
xor
iret
aad
xor
adc
test
outsb
cmc
mov
cmp
xor
mov
sub
cld
and
es
frstor
cmpl
les
xor
in
sbb
lea
shll
mov
mov
pop
push
cld
loop
stc
test
aas
cmpsb
inc
xchg
popf
stc
test
cs
pop
ljmp
jmp
jo
mov
test
or
xor
add
jl
roll
cmp
push
push
add
mov
xor
adc
call
andl
mov
cld
lret
outsb
mov
test
iret
pusha
fldl
jb
jae
cli
adc
fisubrs
adc
push
push
mov
lock
repnz
xchg
clc
xor
lods
faddl
xchg
call
dec
lods
xchg
xchg
xchg
cltd
int3
ss
push
mov
push
push
xor
xchg
xchg
jecxz
xchg
mov
xchg
lea
or
push
test
sbb
aas
cmpsl
jo
fistps
out
addr16
cwtl
jg
cmpsl
pop
jae
movsl
fadds
fsubs
or
xchg
insl
sub
ja
mulb
test
pusha
add
sub
addr16
outsl
stos
xor
fs
jle
cld
aaa
xchg
fnsave
fistl
nop
fistpl
sti
cmp
jl
dec
fpatan
in
xchg
push
or
repnz
pop
arpl
cwtl
adc
mov
xor
in
mov
cmp
jns
cs
inc
popf
sbb
push
fnsave
push
lahf
mov
inc
and
pusha
inc
aad
lret
js
bound
mov
dec
mov
or
and
and
cmp
pop
test
daa
or
cld
inc
xchg
push
push
mov
cltd
fldl
lcall
stc
sbb
dec
add
emms
and
or
lahf
mov
cwtl
fs
mov
pop
sbbl
jg
outsl
repz
lods
aam
dec
push
ret
repz
in
pop
outsl
outsl
push
pop
test
dec
sbb
imul
mov
xchg
pop
cs
push
jno
inc
fadds
lahf
push
inc
and
dec
andl
xor
xchg
sti
dec
insb
xor
ret
loope
jae
mov
xchg
aam
add
fbstp
jecxz
push
jmp
mov
add
imul
xchg
mov
lds
repnz
pop
sub
int3
loop
cwtl
inc
test
cmpsl
jb
daa
test
xor
add
lds
call
out
pop
and
mov
in
cmp
das
lods
cmp
push
mov
add
push
mov
test
inc
pusha
xchg
mov
inc
flds
and
aam
adc
cmpb
push
xor
std
shl
mulb
ja
adc
jecxz
pushf
jle,pn
jb
sbb
inc
std
pop
mov
es
adc
sti
in
out
inc
sbb
dec
jmp
lret
test
out
in
jge
sub
push
scas
add
dec
inc
daa
out
lret
jbe
loopne
jg
push
movsb
stc
aaa
and
cmp
mov
inc
mov
fisttpl
mov
pop
cmpb
push
fsubs
std
and
mov
in
add
push
jbe
pop
pop
sbb
loop
lods
test
lods
cmp
mov
xchg
in
mov
sub
or
xchg
test
push
ds
arpl
fmuls
push
mov
leave
mov
dec
xchg
pop
testl
inc
adc
push
sub
sbb
add
mov
pop
inc
inc
mov
xchg
outsb
sahf
repnz
shl
ja
loop
hlt
mov
dec
cmp
jge
jno
subb
stos
popf
out
push
cmpsl
ret
push
xor
adc
adc
loope
and
arpl
rclb
pop
sub
imul
out
rcll
pop
dec
outsl
jb
mov
jo
ss
and
loop
mov
xor
mov
mov
jge
jp
push
inc
mov
repz
scas
jne
xor
push
inc
mov
mov
pop
mov
outsl
sub
hlt
mov
cmp
nop
mov
push
out
or
das
arpl
addb
loop
popf
pop
subl
negb
cld
call
sub
cwtl
inc
in
or
mov
int3
call
shlb
out
jle
es
pushf
lods
fmul
ret
inc
mov
and
mov
ret
popa
jmp
ds
shrb
sub
rcll
xchg
xchg
pop
jp
mov
sub
fimuls
mov
aas
iret
jge
xchg
pop
or
ja
mov
dec
adc
jmp
shll
nop
aaa
jo
lret
cmpsl
push
pop
push
xchg
add
push
mov
pop
jge
mulb
div
sub
aad
mov
adc
lret
push
dec
add
divb
sbb
cltd
ficomps
jo
dec
and
sub
push
repnz
jae
jge
sbb
ret
movsl
xor
hlt
bound
movsb
movb
and
std
push
mov
xor
es
and
jge,pn
outsl
push
and
fbld
test
jbe
rcrl
fsts
pop
pushf
or
int
mov
jno
pop
add
adcl
push
sub
dec
xchg
and
scas
ja,pn
ss
repnz
loopne
pop
jmp
push
xor
mov
mov
sbb
inc
push
add
mov
sub
stos
mov
arpl
jo
pop
sbb
adc
into
sub
jnp
rcrb
in
push
adc
bound
movsl
jle
lret
dec
sahf
stc
test
inc
xor
test
ret
push
adc
jp
jo
cmc
mov
inc
enter
clc
je
pop
aas
xor
gs
mov
or
or
mov
inc
test
rorb
lcall
mov
or
popf
pushf
fldenv
or
repnz
in
pop
icebp
cmp
mov
mov
bnd
sbb
mov
xchg
sbb
lock
out
mov
cwtl
add
adc
cmp
test
into
shrl
sbb
insb
rolb
mov
sub
jne
xchg
arpl
dec
addr16
ss
shll
test
mov
clc
lcall
ret
or
out
idivl
in
xchg
repnz
jecxz
sub
out
std
inc
adc
ss
adc
or
or
pop
jmp
data16
jae
mov
jmp
and
jle
dec
aaa
enter
sbb
fcomps
popa
pop
inc
ljmp
or
insb
movsl
xchg
lea
fnsave
and
adc
or
sub
jnp
sub
and
sub
adc
stc
sbb
pop
xchg
cld
bound
sbb
and
jbe
pop
add
inc
and
data16
ss
enter
jg
pop
in
xchg
pop
xor
pop
push
or
xchg
and
mulb
mov
mov
cmp
aad
cmp
fs
int
xchg
loop
inc
add
aad
repnz
data16
push
inc
mov
mov
icebp
filds
jp
in
mov
inc
inc
es
inc
ret
xchg
add
cmpb
mov
cmp
mov
mov
repnz
xor
and
popa
mov
test
jge
jmp
cmpsb
push
xchg
rcrl
pop
frstor
sbb
and
sbb
ss
or
sub
stos
test
or
jo
shl
dec
mov
add
xor
call
push
cmp
inc
and
pushf
aaa
add
or
or
pop
cmp
lret
xchg
push
cld
mov
mov
lret
and
mov
sbb
and
jo
std
jns
or
mov
push
fninit
adcb
lret
int
push
pop
push
arpl
aas
nop
pop
or
outsb
cli
gs
xchg
adc
js
mov
adc
lea
or
push
sarl
loopne
pop
sar
sbb
cmp
sub
les
imul
and
scas
ficoms
test
xchg
inc
rolb
pop
rclb
pop
sbb
add
js
scas
test
inc
cmp
stc
dec
inc
je
xchg
pop
cmp
ret
loopne
adc
add
les
cli
insl
push
dec
xor
and
repz
pusha
cmpsb
rcrl
pop
sbb
and
test
xchg
popa
inc
mov
std
sbb
jno
mov
xchg
lcall
es
jnp
push
inc
dec
mov
ja
jbe
cltd
out
int3
into
add
jno
and
and
jo
insb
out
jo
jns
mov
aam
dec
imul
push
ds
les
rol
jae
push
out
insb
push
sti
ss
push
sahf
test
add
imul
fdivrl
cmp
gs
xor
pushf
push
and
push
sbb
pop
shlb
sti
nop
jnp
mov
loop
es
imul
sub
adc
dec
push
mov
jae
jmp
sti
ds
sub
cwtl
stos
jg
cs
pusha
repz
mov
in
in
loop
fsubs
ret
sub
mov
stos
xor
jbe
dec
xchg
add
in
pop
test
shrb
lahf
sbb
pop
iret
mov
push
enter
pushl
xor
mov
ret
or
unpckhps
jge
sbb
mov
data16
jge
test
mov
pop
in
loopne
push
mov
mov
and
daa
insl
fnstenv
xlat
jno
push
shll
xchg
in
popf
push
xchg
pop
out
push
mov
ficompl
push
test
dec
or
test
mov
or
iret
sti
mov
jo
je
pop
ja
dec
cmpsl
rolb
push
mov
mov
jp
mov
into
test
cmp
stc
cmp
imul
mov
mov
cmpsl
inc
jecxz
jae
pop
xorl
test
dec
aam
sub
mov
add
mov
add
xchg
mov
fidivrs
inc
sbb
nop
notb
dec
cwtl
dec
sub
and
dec
or
push
push
cmpsb
or
mov
mov
xor
shl
dec
pop
scas
and
call
mov
inc
fcomp
fisttpl
jge
push
fcom
pop
aas
es
add
cmp
insb
mov
dec
loopne
push
stos
xor
dec
mov
fistpl
cltd
pop
or
mov
rcrl
push
adc
dec
clc
jge
adc
out
roll
mulb
rcll
jb
mov
sti
mov
xor
lods
xchg
sbb
out
dec
out
dec
clc
lret
rcll
popa
jl
fsubrs
push
icebp
mov
inc
outsl
cmp
rolb
mov
xchg
mov
scas
jne
dec
xlat
ljmp
mov
fists
shlb
out
inc
xlat
lret
test
mov
mov
sub
aaa
or
jns
ret
ljmp
movsb
ds
xchg
jnp
and
mov
pop
fwait
xor
gs
push
add
ret
add
add
cmc
movsb
not
and
add
mulb
sahf
sub
cmp
sub
dec
lea
mov
add
aam
xchg
inc
sbb
xchg
mov
popf
cs
fistl
adcl
outsb
pop
inc
mov
or
xchg
dec
mov
es
gs
lea
or
mov
int
mov
in
mov
mov
lock
movsl
in
push
add
pop
mov
mov
in
add
in
pusha
dec
pop
lahf
pusha
mov
je
xor
mov
sbb
dec
packsswb
pop
inc
call
out
rorb
stos
and
xchg
fistpl
jge
dec
push
ljmp
ret
sbb
jle
push
insb
jle
pop
xchg
fwait
cli
cmc
add
pushl
mov
aaa
in
dec
insb
loopne
les
inc
inc
test
iret
fisttpll
aas
cld
aad
and
push
outsb
mov
cmp
loop
scas
add
xor
rcl
pop
inc
inc
arpl
sbb
inc
mov
lods
and
sbb
mov
xor
outsb
std
mov
aaa
lahf
stc
test
ret
movl
cld
push
sahf
outsb
and
ja
ret
jns
aam
jno
sub
pop
add
dec
push
cli
fs
adc
shll
cmp
inc
cwtl
in
or
xchg
sarl
sahf
pop
xlat
sbb
dec
fisttpll
and
sub
mov
sarb
sub
mov
dec
mov
sbb
or
sbb
adc
jle
inc
arpl
mov
and
cwtl
enter
jge
std
pusha
jle
cwtl
jbe
sbbl
testb
scas
pop
mov
ficoms
push
add
loop
ds
loop
pop
adc
mov
ds
fldl
sbb
mov
subl
mov
lock
mov
and
sar
cs
add
mov
in
loopne
into
push
dec
inc
and
out
adc
adc
adc
inc
stc
inc
cmp
loopne
jb
xor
rol
inc
cmpsb
jnp
sbb
dec
insl
fsubl
pop
xchg
mov
test
fwait
sbb
dec
cmp
inc
dec
pop
icebp
stos
sbb
adc
jmp
add
xchg
jne
fstp
cmp
rcl
sub
cmc
imul
cmp
scas
pop
sub
and
jecxz
mov
mov
mov
mov
dec
out
aad
pop
pop
cmp
mov
and
mov
imul
loope
out
push
out
pop
jle
std
lds
ljmp
lret
add
pop
lea
lcall
sbb
jbe
and
adc
sbb
push
imul
mov
cmp
sbb
int
push
xchg
out
je
adc
call
or
mov
nop
fdivp
lea
mov
push
mov
lock
push
bound
xchg
test
nop
fadd
int
jl
mov
xchg
imul
xchg
fadds
ret
rclb
in
fstp
push
mov
mov
or
adc
mov
pop
out
fidivs
inc
push
das
inc
xlat
popf
dec
cmpsl
xchg
cmp
fadd
sub
xchg
xlat
inc
dec
dec
xchg
dec
ja
gs
xchg
sub
ja
jle
test
rorb
js
orl
fnstenv
xchg
pop
imul
or
mov
int
imul
ret
sub
mov
jbe
and
xchg
int
insb
adc
jne
pop
in
fnstcw
mov
xor
pop
roll
push
outsl
cwtl
lea
or
and
ffreep
jbe
pushf
outsl
in
out
jmp
or
jae
es
cld
mov
inc
shlb
outsb
mov
loop
loop
negb
movsl
repz
push
mov
cs
sub
enter
cli
pop
in
fdivl
mov
mov
jae
bound
mov
adc
or
cmp
sbb
push
hlt
cmpsb
or
pop
jnp
adc
cld
and
mov
xchg
xchg
or
mov
sub
call
pop
out
dec
pop
jns
mov
sar
outsl
sbb
pop
fisubl
pop
negb
lock
jb
sbb
sbbb
push
mov
sub
test
orl
in
out
pop
dec
notl
jo
pushf
test
dec
in
sub
mov
push
lea
cli
mov
stc
cmpb
adc
and
dec
mov
rcl
or
cwtl
fisubrs
fwait
jecxz
add
inc
and
in
and
int3
mov
jg
mov
mov
add
pop
sarl
pop
and
mov
shll
sbb
flds
aam
das
repnz
sbb
push
js
cld
mov
pop
rcrb
mov
dec
pusha
and
stos
gs
cmovne
push
fmuls
dec
aam
xor
cltd
enter
cmp
adc
jne
cmp
xchg
jns
cwtl
roll
cmc
int
ret
andl
div
mov
clc
dec
jle
sarl
aas
cmp
xchg
fcmovbe
push
repnz
mov
cmp
inc
movsb
xor
xchg
mov
cld
xor
xchg
shlb
nop
push
aad
xor
in
pop
in
jno
mov
scas
test
pop
cmp
mov
adc
mov
in
cs
mov
imul
scas
add
sub
push
push
push
test
cmp
mov
mov
xor
or
out
sbb
js
xchg
push
inc
xchg
pusha
and
jmp
pop
mov
das
jns
push
sub
std
jnp
xor
pop
sub
imul
loop
lret
jecxz,pt
add
jno
mov
xchg
lock
sub
pusha
sub
xchg
adc
in
adc
fwait
sarb
xchg
imul
jno
jp
test
mov
xchg
cmp
loop
int
test
leave
shl
pushf
or
jg
pop
stc
mov
cmpsl
sub
stos
xor
cmp
jg
mov
scas
repnz
mov
movsl
jne
push
inc
mov
sbb
push
lea
call
sbbl
jno
gs
mov
mov
sub
aad
jg
pop
ss
daa
in
adc
out
loope
and
sbb
sbb
inc
jl
je
add
pop
inc
push
out
or
fildl
dec
lret
xchg
or
pop
jnp
push
jg
mov
dec
test
jae
movsl
xchg
stos
dec
pop
dec
lcall
ja
mov
iret
xchg
add
movsl
push
mov
xor
cmp
xchg
mov
adc
aaa
test
aaa
lods
jae
mov
int3
jo
fisttps
ret
test
or
hlt
loopne
mov
pop
push
rol
imul
adc
sub
insl
mov
stos
jnp
xchg
mov
or
jg
int
mov
inc
inc
mov
sub
cmp
xchg
add
pop
push
mov
movsb
jmp
dec
push
cltd
mov
pusha
aam
mov
inc
inc
push
mov
jmp
push
push
xchg
cmp
sti
stos
outsb
mov
out
inc
cmpsb
enter
pop
rolb
test
clc
cs
nop
inc
call
roll
mov
repnz
sahf
pusha
or
push
mov
and
push
jne
lds
stos
dec
cmp
mov
inc
es
sbbl
push
ret
out
ja
movsb
pusha
rdtsc
sar
xchg
push
or
push
clc
mov
pop
aaa
mov
les
lret
push
adc
mov
sub
and
lods
mov
aam
hlt
adc
sbb
mov
orb
inc
pop
fdivrs
das
jnp
lods
adc
jb
mov
cmp
sbb
add
mov
xor
aam
leave
or
sbb
mov
jg
mov
lret
test
int3
sub
jg
sub
pop
enter
jbe
inc
out
cmpl
pop
dec
leave
dec
lock
nop
jne
mov
call
std
add
lret
fcoms
push
movsb
lods
cmpsb
mov
adc
in
pop
jnp
mov
sub
aam
scas
test
out
in
add
dec
xor
nop
notb
pop
add
aam
mov
pop
push
mov
inc
push
xchg
xchg
cmp
cmp
xchg
stos
loopne
dec
xorl
mov
or
push
or
or
jecxz
lock
sbb
dec
inc
push
xlat
dec
xor
jae
into
and
roll
loope
xorl
push
cmp
jne
dec
dec
pushl
xor
fwait
adc
xchg
mov
and
jnp
dec
fwait
mov
sub
in
les
push
sub
scas
sbb
adc
arpl
inc
aaa
pop
jp
sbb
sub
cmp
pop
xor
add
mov
movsb
jno
repz
js
rcr
sahf
gs
xor
push
jge
sarl
dec
mov
es
popf
lret
or
fs
sahf
testl
mov
or
in
fmull
outsl
mov
pop
stos
jl
push
lret
push
pop
in
aas
add
mov
add
rclb
cmpsl
jnp
inc
mov
stos
pushf
push
outsl
cli
mov
inc
js
adc
mov
fiadds
cmp
xchg
popa
lret
and
shrl
mov
mov
jno
dec
lahf
lea
ret
dec
mov
pop
dec
inc
lock
es
mov
adcl
dec
adc
in
or
ret
sub
fstp
iret
sti
lcall
push
cwtl
mov
or
dec
or
repz
cmp
sub
lahf
es
and
incb
sub
push
stc
out
xor
mov
jge
stos
mov
sub
and
jnp
dec
jb
daa
sbb
aaa
adc
lds
adc
push
dec
daa
mov
adcb
dec
fnstsw
inc
data16
adc
mov
nop
lods
jo
jno
nop
add
jb
jle
mov
jno
enter
mov
jmp
fistpl
arpl
or
stos
adc
imul
push
pusha
ljmp
push
scas
add
xchg
fninit
clc
ljmp
mov
inc
adcl
mov
mov
pop
push
xor
push
dec
pop
pushf
lea
mov
sbb
aas
push
test
test
andb
int
inc
inc
sub
stc
xor
xchg
and
sub
xchg
idivl
icebp
adc
inc
stc
call
push
testl
out
ja
sbb
cltd
or
push
aas
adc
into
xchg
insl
lock
into
lock
mov
in
das
adc
mov
andb
mov
push
mov
ja
push
push
hlt
in
mov
pusha
jo
test
lock
xor
add
pop
push
sbb
test
repz
test
and
jle
shrb
xor
cmpl
das
pop
data16
push
jb
dec
push
ret
pop
add
mov
fbstp
test
insl
fsub
adc
mov
in
pop
mov
in
or
push
add
aaa
jmp
fisubl
lea
and
popf
test
dec
dec
jge
mov
sbb
mov
imul
dec
mov
sbb
inc
movsl
mov
and
push
pop
mov
jg
or
out
jmp
fcoms
movsl
dec
xchg
imul
push
divl
mov
xlat
xchg
mov
lcall
mov
push
in
data16
scas
mov
inc
inc
cld
sub
inc
mov
cltd
movsl
icebp
xchg
in
call
outsb
testl
icebp
add
test
or
pcmpgtb
xchg
sbb
fucomip
in
in
pop
mov
adc
or
or
add
jl
xchg
mov
cmpb
rcrl
shr
call
and
adc
popa
pop
cld
test
fiaddl
or
mov
movsb
aam
aam
pop
lret
add
dec
adc
insb
mov
sahf
add
popf
jns
mull
loope
pop
pop
dec
jne
pusha
movzwl
lods
push
test
movsb
dec
cs
cwtl
xchg
popa
sahf
insl
fwait
xlat
jo
pop
mov
xor
je
es
daa
out
inc
and
test
and
jbe
add
ds
pop
es
addr16
sub
jae
jg
scas
inc
or
push
sub
bound
xchg
out
stos
mov
sahf
sbb
rcll
rolb
addb
stos
popf
cmp
cmc
lds
incl
aas
pop
dec
aaa
enter
sahf
call
adc
or
jge
lock
cmp
sbb
mov
xor
push
lds
jg
sub
orl
jnp
mulb
imul
popa
aam
adc
stc
movsl
test
mov
std
inc
imul
mull
push
int
sbb
mov
dec
adc
jo
lret
ds
cs
lcall
jnp
mov
shr
push
insb
in
inc
sub
push
cmp
adc
mov
in
loopne
ds
xor
pop
jl
loope
mov
push
cmpsb
ja
lock
xchg
cmp
fstp
outsl
cld
ss
mov
or
or
cmc
out
and
les
insb
sti
and
push
in
jge
repnz
push
aad
fld
and
shll
inc
call
mov
imul
sbb
ja
mov
data16
pop
outsb
mov
push
in
hlt
and
es
scas
push
mov
ret
sbb
mull
sarb
hlt
and
test
inc
lcall
mov
mov
outsb
mov
xor
insb
mov
sub
in
xorl
add
jl
or
mov
filds
loope
int3
hlt
add
sahf
sahf
add
popa
xlat
jnp
rcr
mov
jnp
stc
out
and
testl
je
lods
pop
cmp
xchg
xchg
inc
popa
push
cwtl
pop
mov
adc
outsb
rorl
xor
aaa
mov
test
jp
imul
cmp
shlb
pushf
addr16
movsl
imul
fistl
in
mov
mov
rep
or
das
xchg
push
push
inc
jbe
sub
xchg
loopne
jle
xchg
dec
and
lcall
int3
push
xchg
push
adc
sbb
xchg
mov
mov
fs
int3
inc
jecxz
jmp
cmpsb
int
hlt
inc
jbe
xchg
mov
iret
xchg
mov
cs
ficoml
push
pop
push
adc
and
mov
push
shll
adc
test
shl
sub
or
mov
lret
lret
mov
lret
aam
out
jno
test
or
stos
lods
jecxz
aas
inc
arpl
in
add
popa
mov
inc
cmp
push
add
jne
out
sbb
scas
jg
fisubrs
push
or
dec
xchg
adc
xchg
out
inc
testb
push
or
pop
sbb
sub
xchg
jl
pop
jg
push
nop
jb
mov
pop
sub
xchg
mov
adc
inc
push
fstps
mov
repnz
push
icebp
movb
xor
pop
mov
mov
mov
jmp
aaa
test
sub
xchg
lcall
aas
out
xor
or
test
imul
popf
xor
pop
jge
arpl
inc
and
push
mov
cmp
mov
dec
lock
cmp
mov
ret
into
mov
pushf
fcomps
xor
out
mov
xchg
or
xor
push
inc
cld
push
jno
icebp
dec
mov
sub
cmp
xlat
sub
daa
push
xor
pop
push
inc
jbe
mov
popa
fwait
dec
cmc
clc
bound
jno
loope
in
sub
movsl
or
add
ljmp
xchg
pop
fldl
arpl
pop
popa
push
lock
cmp
sub
mov
cltd
mov
fcoml
dec
mov
jmp
aas
ds
das
mov
adc
fadds
xor
out
cld
nop
xor
mov
mov
repz
jle
dec
jge
cmp
repnz
jl
push
pop
adc
inc
dec
cmp
jnp
cmp
cs
jp
sub
ret
adc
dec
mov
cmpsb
outsb
xor
sti
cld
mov
pop
mov
outsb
cmp
mov
into
aam
shrl
sbb
mov
pop
push
adc
pop
sbb
xchg
cmp
repz
sbbl
loope
dec
mov
imul
dec
jge
loopne
popf
lret
xchg
xchg
fs
mov
jp
pop
push
fistpl
repnz
int3
bound
out
repz
push
in
movsl
xor
adc
int3
insl
xor
jnp
outsb
lret
ffreep
je
in
addl
lods
nop
inc
sbb
jecxz
pop
sbb
cmpsl
fcmovnbe
sbb
mov
mov
scas
sbb
or
lret
dec
adc
sbbl
cmp
push
sahf
xlat
mov
jmp
shll
sub
mov
pop
sbb
fisubrl
fisttpl
jmp
popa
adc
xchg
push
xchg
sub
shrb
jo
mov
and
mov
push
mov
mov
jo
stc
cmc
sub
sbb
jp
dec
shl
icebp
scas
pop
push
pop
aas
xor
mov
rcrl
mov
cwtl
xor
sti
out
das
scas
mov
out
fstpl
adc
out
aad
inc
std
xor
jle
xlat
pop
jo
dec
jecxz
xchg
pop
and
or
hlt
mov
or
insl
push
inc
push
add
sub
cmp
dec
sbb
js
adc
xchg
adc
mov
addr16
lea
adc
ret
push
idivb
adc
fwait
push
pop
lcall
sbb
fnstsw
adc
or
loop
loopne
sahf
call
pop
and
mov
out
sub
lds
jno
fisttpl
inc
mov
in
mov
loopne
add
js
sub
push
cmp
mov
rolb
xchg
sub
push
push
lea
js
xchg
movsl
push
gs
pop
les
sbb
sbb
mov
ffreep
jmp
cwtl
inc
out
sub
decb
jmp
cmpsl
and
sbb
stos
inc
xchg
lea
inc
bound
cwtl
or
or
popf
add
push
in
cmp
jecxz
push
xchg
es
aaa
sbb
gs
or
or
cmc
mov
dec
adc
leave
in
pop
mov
xor
cvtdq2ps
xchg
out
mov
or
mov
incl
dec
in
mov
mov
repnz
push
or
mov
inc
cmp
xchg
jo
pop
clc
adc
inc
test
cmp
cltd
sub
pop
scas
push
test
xor
sbbl
jmp
mov
add
popa
fs
cmp
dec
push
cld
aad
fbstp
loope
mov
lcall
adc
fnsave
ret
std
push
in
xor
push
xor
sti
lock
enter
mov
sub
xchg
or
or
repnz
fstpl
push
aaa
stos
mov
daa
xchg
fsts
imul
mov
pop
repz
repz
xor
and
loope
push
lahf
inc
dec
or
push
xor
sbb
push
rcl
int3
outsb
push
push
sub
roll
jle
stos
ss
push
jbe
or
ja
jns
outsb
testl
push
ss
pop
mov
jns
nop
shll
xlat
fsts
xor
sbb
outsl
mov
insl
out
sahf
xchg
call
popf
add
push
push
cld
jne
shlb
inc
shrl
sahf
pushf
std
inc
add
fimuls
test
je
cmp
jo
fwait
xchg
xchg
cmp
and
add
repnz
mov
mov
dec
add
mov
jns
xor
xchg
out
mov
es
das
xchg
and
jnp
push
jecxz
and
scas
inc
shlb
jl
leave
fwait
xor
repnz
ret
pop
mov
lea
loopne
push
xchg
repz
lods
jno
ret
push
fidivrs
data16
mov
mov
push
in
xor
cmp
movsl
xchg
stc
hlt
hlt
jecxz
iret
dec
clc
sti
inc
shlb
sub
test
push
in
pop
mov
mov
pop
xchg
in
out
xor
jnp
jae
loop
pop
push
pop
addl
sub
fstpl
js
mov
mov
addr16
fcoml
cmp
fcmove
push
lret
mov
sti
xchg
mov
lret
lret
sbb
cmpsl
shrb
cmp
bswap
insl
pusha
lods
mov
aam
and
fldl
lret
inc
mov
out
repz
outsl
jle
in
jnp
stos
push
dec
mov
ja
cmpsl
decb
nop
arpl
pop
xchg
lcall
push
mov
dec
lds
andb
dec
inc
mov
js
add
inc
sub
ljmp
mov
lea
xchg
xchg
stos
rep
stos
in
mov
addl
dec
pusha
mov
mov
dec
xlat
nop
imul
push
jmp
xchg
pop
push
imul
inc
push
jl
push
inc
imul
pop
add
aaa
xchg
test
rcr
stc
in
daa
inc
imul
push
and
push
lret
outsl
cmpsb
mov
mov
inc
shll
sub
cmp
cmc
pop
in
jecxz
push
cmpsb
loope
mov
adc
cmpsb
mov
testl
dec
lock
mov
test
jbe
cld
ja
inc
pop
out
or
rorb
lcall
push
lods
pop
push
push
and
and
aas
out
je
enter
jecxz
mov
mov
loop
xlat
mov
inc
sub
mov
aas
mov
cmp
popl
fisubs
sub
push
in
bound
lods
dec
in
pushf
sub
sub
inc
xchg
lret
mov
sub
add
inc
and
dec
mov
sub
hlt
stos
mov
ds
sub
dec
inc
push
fstpt
ja
aad
popf
stos
bound
mov
and
int
enter
lahf
lret
jns
cmp
or
test
mov
and
push
adc
mov
push
xorb
or
ljmp
cld
jbe
dec
mov
sbb
dec
jno
scas
lea
push
adc
jbe
jge
jns
rcl
cmp
std
js
add
lods
mov
push
mov
scas
pop
clc
loope
mov
mov
loop
lret
pop
fnsave
fwait
in
mov
addr16
cmpsl
push
icebp
jmp
jmp
xor
fdivp
lret
out
inc
js
popa
or
push
je
xchg
scas
pop
ficompl
push
es
lahf
sub
insl
jbe
sbbb
popa
xchg
adc
push
sub
dec
inc
dec
mov
sbb
xor
testb
add
push
jge
push
pop
push
add
push
jge
adc
lock
and
add
xor
cmc
sbb
xor
stc
add
jl
ljmp
sub
shl
cmpsl
ss
ja
out
sbb
jbe
cmp
jnp
cmp
scas
int
filds
rcll
out
cmp
add
ficoml
mov
call
je
mov
inc
jp
push
lret
pop
add
insl
in
cmp
dec
psllq
lds
js
cmpsb
lea
subl
jb
mov
dec
ja
outsb
cmc
call
add
mov
rclb
loop
mov
in
push
jl
adc
mov
cmc
sub
and
cli
mov
sbb
jb
xchg
lcall
sbb
rcrl
mov
push
push
mov
dec
pop
sbb
das
imul
cmc
dec
xlat
mov
push
lea
sub
sub
pop
fsub
cld
jnp
imul
or
int3
arpl
pop
xlat
or
aad
add
pop
aam
mov
repz
mov
and
mov
pop
test
pop
clc
xor
insb
adc
push
sbb
jl
aaa
pop
sub
cs
push
cmp
mov
push
inc
mov
movsl
outsl
or
inc
xchg
xlat
mov
pop
lock
dec
sub
add
xor
sbb
push
xchg
shl
cmp
jmp
ficoms
lret
pop
stos
stc
inc
popf
xor
sub
aad
pop
ja
pop
stos
mov
cmpsb
or
pop
or
les
fdivrp
std
dec
pop
jbe
adc
fsubrs
mov
cmp
inc
js
shlb
cmp
mov
into
dec
ror
enter
inc
jle
dec
sub
clc
scas
cmp
mov
pop
pop
push
test
popf
aam
mov
dec
fmull
jge
push
cmp
add
insl
xor
jnp
dec
and
lods
aas
push
or
push
cmp
test
push
fmuls
scas
push
fs
rcrl
js
mov
sub
jno
lcall
lods
bnd
and
mov
sbb
ja
jae
dec
imul
jmp
aad
push
stos
jbe
add
sbb
jmp
jo
mov
aad
xchg
dec
sbb
lret
pop
cmp
cmp
pop
fnstcw
xor
adc
out
push
jge
fs
pusha
mov
jmp
lock
xor
ljmp
mov
jae
adc
aas
mov
fsubs
pop
ljmp
sub
ds
sti
leave
inc
jns
push
stc
cli
data16
lods
sub
rcrl
sub
shrl
jne
mov
and
test
jmp
mov
fcmovne
adc
ljmp
popa
repz
pop
inc
cmp
fwait
sbb
push
in
repnz
mov
je
mov
push
scas
mov
and
inc
loop
lock
fisubs
addr16
xchg
lods
js
ja
cmpsb
negb
ja
ss
ficoms
jg
dec
and
test
adc
add
ja
std
hlt
mov
mov
jnp
pop
or
jne
orl
aad
loop
lret
insb
loop
mov
push
xchg
inc
cmp
adc
xor
jns
and
or
mov
and
mov
dec
stos
imul
inc
daa
push
jnp
inc
ds
cmpsl
inc
xchg
cld
sbb
adcb
jnp
test
push
xchg
inc
push
push
outsl
push
aam
leave
jg
adc
cmc
dec
add
or
es
push
outsl
ss
dec
int
inc
push
int3
adc
dec
or
mov
inc
popa
jnp
aaa
xchg
aaa
stos
add
inc
xchg
aam
mov
push
jl
adc
xor
sub
sbb
jmp
repz
negb
cli
add
jae
mov
and
ljmp
xchg
dec
pop
mov
xor
call
fmuls
stc
xchg
add
lret
jns
ds
sub
inc
lods
int3
insb
fucomip
fstpt
mov
stos
in
outsl
jl
aaa
cmpb
add
mov
xchg
je
pop
jne
and
mov
xor
pop
nop
or
in
pop
idiv
mov
sub
gs
adc
lock
cwtl
mov
ja
xor
dec
pushf
adc
sub
inc
dec
lock
insl
arpl
add
or
cltd
std
sub
sbb
fwait
add
iret
insb
mov
xor
sub
xchg
and
movsb
push
repnz
call
pop
inc
and
adc
pminsw
mov
or
mul
dec
in
pop
xchg
and
bound
gs
mov
cmp
jno
lret
mov
or
in
mov
jp
jecxz
test
into
or
stc
inc
out
and
sub
pop
cmp
sub
jecxz
int3
xlat
mov
idivl
xlat
pop
lds
dec
pushf
adc
jne
xchg
push
adc
repz
jmp
mov
divl
setg
push
cmpsl
add
fwait
mov
mov
adc
push
test
imul
cmpl
mov
popf
add
dec
xor
fcoms
stos
fwait
cmp
pop
xchg
pop
add
lods
stc
loop
xor
jo
int
testl
cmp
xchg
fcompl
mov
mov
rcr
and
into
jns
lds
inc
js
shll
jp
push
mov
fcom
lcall
je
push
pop
js
and
bound
jno
ret
inc
fiadds
jl
inc
jbe
jle
mov
mov
lret
and
ds
dec
std
outsb
lret
repz
aad
std
xor
pop
test
ss
sti
jecxz
pop
test
sbb
adc
adc
sbb
jne
andl
jg
pop
loop
jne
stos
lcall
daa
test
pop
arpl
cmp
sbb
xor
fstl
jb
pop
fbld
fbld
push
in
mov
lods
dec
jle
cwtl
or
mov
xchg
dec
xor
dec
clc
mov
xchg
cmp
jle
inc
loop
fwait
xchg
push
fcmovnu
mov
rorl
sahf
sub
sub
mov
fwait
cmp
pusha
fildl
sbb
and
push
je
xchg
mov
dec
aad
sti
in
xor
adc
les
adc
dec
jno
cmp
shlb
int
xor
push
mov
scas
mov
bound
in
jne
scas
jnp
mov
lds
inc
mov
jns
xchg
sahf
adc
mov
popf
dec
test
or
pop
call
xor
xor
stos
enter
je
inc
fdivl
pop
mov
mov
adc
pop
mov
add
mov
sub
fisubs
lea
mov
pop
hlt
ficoml
dec
mov
pop
pop
andps
icebp
dec
add
jg
jb
in
lods
loope
cmpsb
and
sub
adc
mov
lcall
aaa
rcll
xorl
test
dec
sbb
cmp
dec
inc
xlat
ret
xchg
das
fdivr
jns
pop
out
cmc
inc
lods
je
mov
cmp
pop
das
dec
cmp
insl
and
in
sbb
cwtl
addb
fwait
stc
jp
negl
movb
call
ret
dec
mov
sub
pop
imul
cmc
fdivr
adc
fsubrp
jecxz
nop
loope
and
loopne
add
cmp
push
sbb
add
push
cmp
daa
push
mov
xchg
mov
jg
mov
sti
jge
into
or
xor
inc
sbb
negl
aaa
mov
pop
js
and
negl
jmp
adc
in
dec
xor
sbb
stos
mov
push
arpl
dec
xchg
mov
inc
xchg
test
out
xchg
inc
divl
cmp
sub
pop
cmpsl
sub
enter
pop
test
adc
rorb
aaa
sbb
jecxz
jae
xchg
push
xor
mov
jo
add
das
daa
mov
fwait
and
loop
negb
lods
aad
sbb
xlat
mov
negb
mov
ret
mov
jle
bound
mov
sbb
scas
mov
push
and
jno
stc
pop
sub
fisubrs
sbb
xchg
shrb
cmp
push
add
shl
les
out
cs
cmp
cmp
pop
mov
addl
mov
lret
mov
or
movsb
and
js
xor
paddw
outsb
cmp
aad
inc
xchg
lds
les
mov
shll
pop
sub
and
xchg
push
out
dec
out
mov
sub
in
mov
push
and
jge
pop
sarb
lahf
mov
cmp
sar
xor
out
loope
outsb
mov
add
test
aam
jnp
insb
iret
arpl
dec
push
xchg
daa
inc
adc
xchg
adc
lcall
inc
out
rcrl
mov
mov
pop
rep
aad
push
lret
jae
nop
std
dec
daa
jmp
cld
scas
movsb
mov
pop
adc
xor
jmp
mov
enter
rclb
test
jbe
adc
xchg
push
mov
clc
push
shll
inc
lahf
push
push
arpl
inc
push
jae
negl
jp
pop
shlb
jmp
push
cltd
dec
add
mov
sbb
xchg
fdivrp
outsb
dec
ret
punpcklbw
inc
cmpsl
push
mov
or
jnp
inc
mov
test
fs
or
dec
dec
jo
insl
sbb
hlt
and
rolb
cld
pop
int
ljmp
fdiv
cltd
push
mov
js
aas
in
pop
sbb
aad
pop
dec
ds
test
push
or
aam
lret
dec
loope
add
mov
and
add
xor
mov
pop
push
or
test
or
test
xchg
pop
and
dec
sbb
test
fwait
shrb
hlt
fisubs
mov
aad
mov
and
sub
cmp
inc
pop
sbb
mov
subb
out
inc
call
pop
out
mov
add
mov
sub
adc
sbb
mov
sti
add
fsubr
mov
cs
data16
push
inc
aas
push
adc
cmpb
cltd
popa
push
cmpsl
sbb
mov
pop
fsubrp
and
xchg
dec
add
test
int
ficoml
scas
cltd
mov
jb
data16
shrl
sti
movsl
movb
mov
xlat
cmp
into
jnp
xchg
cmp
shrb
loope
adc
sub
pop
sub
adc
std
adc
loopne
call
movsl
cmc
xor
fdivrl
in
jb
mov
xor
pushl
daa
xor
lea
popf
dec
fsts
push
repnz
jmp
or
test
ror
shlb
mov
adc
sub
jle
jne
inc
or
xchg
xchg
jo
dec
imul
mov
into
loope
fstp
inc
addr16
mov
cmc
cmp
fwait
ljmp
jmp
inc
xchg
dec
push
xchg
push
hlt
stos
sbb
aas
scas
sbb
push
and
xchg
or
lods
stos
ljmp
lahf
cmp
xchg
cmovb
pop
dec
rcrb
xor
xor
es
mov
and
cwtl
pop
mov
lock
lret
stc
cwtl
pop
sbb
jl
mov
outsb
adc
sbb
inc
pop
cmp
add
enter
mov
cmp
mov
xor
cmp
inc
aad
std
ffreep
adc
lret
add
and
push
dec
push
dec
xor
push
out
pop
lods
xor
cmpsl
jo
out
dec
mov
in
sub
jnp
pop
in
mov
loope
mov
jge
mov
push
addr16
add
ds
test
loopne
jbe
dec
pushf
insb
insb
sub
jnp
mov
sahf
push
xchg
inc
push
cmp
ja
insl
adc
or
test
stos
xchg
adc
cltd
or
inc
xor
lret
push
pop
pop
ss
dec
cmp
adcb
mov
test
inc
subl
xchg
push
pop
push
xchg
cmpsb
shlb
push
out
cltd
out
mov
cs
adc
jbe
mov
jo
cmpb
jbe
jno
shrl
orb
xchg
jnp
xchg
bound
sti
add
pop
add
jb
fcoml
shll
aaa
out
fcomps
sub
xor
add
and
dec
cmpsl
or
add
mov
ret
mov
lret
scas
stc
jns
shll
or
and
movsb
je
jle
lea
sub
mov
mov
mov
out
sahf
ret
mov
lods
shl
lahf
pop
fs
mov
scas
idiv
jno
repnz
mov
add
adc
xor
mov
cli
pop
nop
add
out
and
mov
xorb
sub
xor
sbb
int3
xlat
sub
aas
ret
int3
sbb
cmp
mov
in
and
cmp
and
xorb
icebp
mov
rcl
lea
ret
cld
sti
adc
or
xor
mov
scas
sbb
outsl
inc
mov
cmp
addr16
scas
add
jmp
jbe
pop
mov
cmpl
push
fs
ret
ret
lret
add
lods
and
lahf
push
add
adc
inc
jmp
idiv
out
lahf
cwtl
inc
sub
jl
jno
xlat
out
hlt
mov
leave
adc
xchg
imul
lret
js
je
cmp
in
jne
inc
rcll
mov
inc
nop
pop
xchg
fwait
cmp
sub
xor
jl
scas
adc
xor
xchg
lret
aam
outsb
and
stos
mov
jp
hlt
clc
dec
repnz
aas
xor
xor
dec
add
push
xor
lds
jbe
hlt
xchg
imul
xchg
arpl
iret
daa
scas
mov
sub
es
sbb
movsb
flds
sub
in
xchg
nop
outsb
xchg
fstp
lods
xor
jmp
clc
loop
mov
inc
push
loopne
lea
xchg
lods
rcrb
lret
hlt
sub
movl
in
and
ret
xchg
sbb
fs
jg
adc
push
int
cld
push
add
ret
test
or
int3
jl
sbb
cmpsl
jo
cmp
nop
cli
cmpl
std
scas
or
and
pop
xlat
xor
icebp
xchg
ja
jmp
out
scas
adc
mov
sahf
mov
aaa
push
and
xchg
push
in
iret
fldl
scas
push
mov
or
mov
cltd
jne
pop
jb
pop
xchg
push
xor
sbb
pop
test
out
xchg
dec
out
mov
mov
and
adc
bound
lock
inc
filds
cmp
aad
shrb
out
je
clc
in
push
adc
fcomps
scas
push
out
shll
mov
dec
mov
jns
test
sbb
in
mov
cmp
jae
inc
push
js
in
pop
add
inc
dec
imul
repnz
dec
mov
and
cmp
nop
inc
aam
rolb
pop
sbb
lock
push
inc
inc
iret
mov
mov
sub
fwait
xchg
xchg
lret
jb
daa
mov
mov
sbb
out
std
gs
loop
rcrl
rclb
mov
cmp
jo
jle
cmp
or
ja
xchg
xor
sbb
and
mov
sub
or
sbb
std
mov
adc
fcmovbe
xor
mov
add
sub
and
aas
dec
pop
sub
enter
mov
xchg
jb
adc
sbb
and
sahf
or
shrb
xor
mov
clc
sbb
popa
xor
push
push
sahf
or
adc
xchg
das
mov
dec
push
out
in
les
jge
xor
xor
xchg
fidivl
pop
movsl
and
test
cmp
popf
cmp
cmpsb
mov
ja
ds
dec
xchg
andb
enter
pop
push
call
movsb
and
imul
adc
inc
xchg
rcrl
sub
and
ss
out
sahf
push
ret
mov
or
bound
cmp
shld
mov
mov
add
ret
jae
shlb
cmp
loop
test
mov
mov
push
imul
or
dec
lock
insl
orl
or
call
lret
fstpt
movsb
lahf
loopne
pop
daa
mov
sub
inc
xor
loope
jl
pop
dec
popf
jns
or
jbe
fisubs
gs
call
in
and
and
out
xchg
mov
push
push
jle
popf
scas
incl
jbe
jbe
jne
sarl
dec
jno
cmpsl
adc
cmp
pop
push
xchg
cli
and
jp
sub
shlb
je
hlt
and
xchg
cmc
sbb
divl
mov
adc
pushf
and
test
lods
mov
push
sub
mov
mov
cmpsb
push
fnsave
iret
xchg
outsb
xor
fwait
sbb
pop
dec
jmp
fildll
mov
loop
cli
push
inc
out
dec
mov
sbb
sbb
jg
push
or
adc
mov
mov
adc
dec
daa
or
inc
inc
arpl
or
jns
pop
int
or
jnp
bound
in
sbb
push
data16
iret
mov
ss
out
xchg
sbb
jp
inc
stc
sti
ljmp
daa
fists
fldenv
enter
xchg
inc
jg
xor
add
xor
into
jg
loopne
xchg
push
int
jecxz
mov
xchg
lahf
xchg
mov
test
insb
push
rcrl
xchg
xchg
add
rorb
adc
jbe
mov
test
jl
sbb
jmp
test
jae
shlb
into
loopne
jne
mov
lret
arpl
mov
mov
and
xor
test
cwtl
loope
addr16
xlat
lea
or
addr16
cmp
sbb
cmpsl
out
aam
cli
dec
push
push
xchg
xchg
sub
push
call
lods
inc
sub
in
push
out
xor
and
pop
xchg
inc
mov
mov
ret
pop
cmp
push
jae
xchg
aas
out
ja
scas
hlt
sbb
fcoml
loopne
testl
jns
sbb
xchg
lcall
jbe
leave
mov
in
mov
pop
imul
mov
in
in
js
and
leave
scas
scas
add
inc
imul
shll
movsb
pop
ror
icebp
jb
or
iret
xchg
outsb
out
scas
jecxz
mov
lcall
xor
inc
jno
push
dec
mov
out
sub
pop
sub
cli
mov
in
dec
cli
add
ret
xorl
mov
mov
cltd
fbld
pop
insl
stos
enter
dec
xchg
lcall
lods
xlat
in
out
jmp
cmp
mov
mov
das
inc
sbb
push
lcall
pusha
add
jns
dec
pushl
mov
mov
lcall
lcall
scas
rcll
dec
pop
add
jnp
icebp
add
xlat
lods
mov
pop
sbb
mov
fwait
sub
mov
inc
push
sbb
cs
jle
mov
pop
push
add
inc
cmpsl
sbb
insl
stc
mov
inc
dec
cmp
repz
dec
movzbl
dec
lahf
subb
add
lret
mov
aas
ss
xchg
add
inc
cli
pop
pop
es
outsl
add
iret
and
and
mov
add
jmp
into
or
dec
xor
push
scas
cmpb
xor
mov
ficomps
outsl
fnstsw
ror
outsl
or
cmpb
xor
xchg
sti
je
into
jl
pop
lea
push
xor
adc
jo
es
arpl
xlat
lret
outsb
lock
xor
js
jle
sub
sbb
sub
aaa
js
stc
lock
insl
aad
push
sbb
repz
sti
enter
jae
add
mov
adc
in
add
arpl
adc
mov
jne
dec
mov
mov
push
test
adc
or
cmpsb
stos
fucomp
jnp
lcall
test
fnstcw
repz
push
mov
sub
mulb
je
cmpsl
push
add
inc
in
sbb
cmp
push
aam
dec
sbb
es
pop
xchg
add
lret
xor
jmp
fisttpl
das
sahf
test
xchg
jbe
or
mov
mov
lea
adc
push
roll
or
cmp
mov
adc
lds
movsb
aam
xor
cmp
push
das
imul
popf
or
inc
or
and
sub
cmp
inc
js
rcrl
sub
and
scas
inc
cld
or
add
xor
dec
pop
push
add
cld
fstps
cmp
ja
adc
dec
push
pop
fists
mov
cmp
pop
into
shrd
jne
xor
sbb
insb
imul
jp
cmp
bound
jae
clc
test
sbbl
fsubrl
das
sti
mov
xor
dec
cmc
in
adc
sarb
mov
arpl
cmpb
fbld
pop
fnstenv
inc
or
ljmp
jle
jnp
push
scas
jo
cmpsl
dec
add
adc
jmp
sbb
cmp
pop
frstor
pop
cwtl
push
sub
ret
cs
xlat
adc
test
test
inc
sub
scas
fwait
rolb
mov
jbe
xchg
pop
pop
aas
ljmp
shrl
cs
push
out
in
bound
sub
roll
sbb
jle
sbb
push
dec
loop
dec
out
mov
jmp
inc
or
xchg
xor
xor
cmp
aam
sub
data16
dec
das
sbbb
das
push
out
adcb
mov
dec
in
pop
iret
add
pop
int
adc
je
and
mov
xchg
inc
push
xor
jmp
sti
mov
gs
add
sbb
cltd
cmp
cmp
imul
xchg
add
cmp
lret
mov
shl
sbb
or
jne
pop
mov
jmp
mov
ret
mov
jbe
test
int3
mov
push
jle
fs
push
movsl
adc
daa
push
adc
lock
lods
sti
cmp
add
sbb
push
mov
popa
xchg
testl
xor
rcrb
je
dec
and
scas
inc
pop
add
out
ljmp
inc
repz
jo
jbe
outsl
aaa
aaa
push
push
fmuls
leave
sub
mov
xchg
scas
jnp
jmp
sbb
sbb
push
mov
xchg
pop
movsl
mov
scas
lods
data16
fisubrl
dec
dec
ss
push
clc
jle
fdivrl
nop
mov
mov
popa
stos
jb
insl
push
cmpl
or
jo
or
sub
adc
insl
loope
push
rcr
mov
add
cmp
daa
hlt
test
jl
xchg
insb
push
push
mov
decb
xor
mov
mov
sahf
sbb
cmc
ss
xor
lods
xchg
push
mov
inc
int3
jo
pusha
xor
int3
push
aam
addr16
rcr
cmp
or
int3
mov
rorb
xor
in
mov
rol
popf
pop
mov
jp
dec
inc
mov
test
jmp
repz
stos
loop
mov
std
test
and
movsb
dec
mov
pop
mov
xchg
movsb
jl
and
loop
jne
push
mov
add
mov
fcmove
push
xchg
add
xchg
mov
or
aas
lret
jns
dec
aas
mov
mov
mov
dec
ja
xchg
gs
mov
inc
wrmsr
dec
repz
xchg
jb
jl
ficompl
lods
or
roll
jge
mov
cmc
rcrl
repnz
test
pop
dec
mov
in
push
out
jg
or
nop
push
cld
jle
out
jo
sar
icebp
scas
cmp
cmp
xor
popf
subb
inc
call
pusha
dec
and
test
jae
add
jnp
or
test
mov
leave
dec
cmp
push
leave
jg
fmull
jo
pop
pushf
lea
sub
pop
xorb
les
ja
pushf
jp
jae
xor
cwtl
mov
mov
dec
btc
leave
aam
add
int
mov
jo
data16
mov
jbe
cld
adc
mov
jb
inc
icebp
js
cwtl
icebp
adc
pop
mov
add
ss
sahf
test
aam
xchg
push
lret
enter
pop
stos
int
pop
rolb
jae
iret
mov
std
bound
aam
mov
out
jecxz
divl
cmp
dec
repz
lods
pop
mov
push
push
loopew
inc
aam
out
dec
sbb
cld
sub
aas
mov
scas
inc
pusha
in
sahf
popf
xor
jp
and
pushf
and
xchg
leave
adc
mov
or
shlb
jg
jge
popa
xor
divb
xchg
shr
dec
jge
insb
rcl
inc
add
loopne
fmull
xlat
sub
add
insl
loopne
daa
ficomps
into
add
and
sbb
cmovb
mov
fwait
xchg
mov
enter
stos
inc
sub
pop
inc
fisttps
test
jnp
ret
sub
lea
xchg
repnz
mulb
push
cmp
add
mov
mov
push
stos
clc
push
stc
mov
aad
pop
add
pusha
and
rclb
fnsave
and
mov
jno
scas
inc
inc
jcxz
xchg
mov
lcall
mov
clc
arpl
sbb
shll
addr16
cs
mov
xor
imull
sub
adc
dec
stc
shlb
rcrb
clc
dec
test
lret
sbb
push
ljmp
jge
stos
push
add
icebp
pop
mov
or
ja
inc
lret
mov
mov
dec
or
pusha
dec
lods
lret
out
addl
sar
xlat
out
fsubrs
jb
popa
xchg
dec
leave
or
or
push
pop
aas
outsl
test
push
lods
je
ljmp
dec
xlat
repnz
jae
ds
mov
shr
and
cmc
test
dec
leave
int3
sbb
int
lods
lods
and
xchg
int
push
fidivl
pop
sub
int3
pop
mov
inc
sub
gs
movsb
jle
je
sbb
add
dec
add
fstpl
cmpsl
shrb
add
data16
cmp
mov
xor
mov
imul
jns
jnp
adc
mov
add
enter
aam
cmp
std
sbb
mov
test
mov
outsl
loope
mov
or
pop
push
ffreep
les
ja
pop
fldcw
mov
inc
enter
ret
push
xor
dec
lods
call
mov
xchg
dec
nop
orl
imul
mov
enter
fsub
movsb
mov
stos
mov
and
cli
xor
ficoml
pop
and
push
pushf
cmp
dec
ds
aas
imul
jmp
stc
or
addr16
xchg
jbe
icebp
dec
mov
ja
pushf
pop
mov
lret
adcb
adc
sbb
decb
lock
inc
add
xor
insl
movsb
js
mov
ret
dec
iret
or
and
aaa
movsl
stos
xor
inc
inc
es
push
or
insb
js
mov
sbb
inc
xor
fdivl
shl
ret
bound
jge
ljmp
jp
ljmp
xor
xchg
dec
or
push
sbb
xchg
xor
sbb
call
into
iret
dec
push
in
xor
mov
cmp
flds
fucompp
ja
ds
mov
jno
shr
in
ret
aaa
dec
ds
jno
mov
push
cmpsl
and
jp
or
mov
cmc
fisttps
xchg
or
lret
cmp
ljmp
inc
push
add
test
lret
pop
pop
out
pop
sbb
xchg
in
xor
inc
jecxz
leave
addl
xor
in
loope
push
inc
shl
sti
mov
mov
push
push
repz
dec
mov
inc
jecxz
test
mov
xchg
cmp
rclb
add
cmpsb
insb
addr16
xchg
mov
movsb
data16
push
xchg
imul
repnz
cmc
insb
fsubr
push
xchg
sub
mov
lock
inc
or
add
jmp
jns
mov
xor
cwtl
jae
lcall
std
and
cltd
stos
inc
ss
xchg
and
mov
sbb
or
movsb
stos
inc
call
sub
mov
fiaddl
jb
and
outsb
out
decw
and
ds
popf
pop
mov
lcall
sti
adc
repz
ss
adc
cwtl
aas
test
mov
xor
lock
sti
mov
jno
test
mov
jne
dec
test
jne
insl
ja
xchg
mov
add
sbb
not
sub
outsl
push
add
shlb
xor
push
mov
outsl
repz
mov
pop
pop
pop
js
lods
push
jbe
lea
in
test
pop
mov
pusha
roll
sub
or
outsl
hlt
test
lret
pop
adcb
bound
adc
inc
movsl
sbb
fldenv
sub
out
inc
mov
xchg
jne
fsubrs
stc
daa
cmp
cmc
add
jl
pop
sti
mov
bound
scas
shrb
mov
jge
bound
xchg
pop
int
pop
dec
addl
in
or
in
xchg
ss
out
sbb
inc
clc
test
dec
xchg
sahf
push
fdivrl
pslld
push
mov
movsb
mov
inc
enter
adc
sbb
scas
aas
imul
mov
mov
xor
lods
adc
push
movl
imul
sub
jo
jno
notl
bound
and
or
repnz
adc
adc
lcall
cs
and
lea
jb
outsb
sbb
roll
inc
data16
insb
and
mov
jnp
sub
sti
test
adc
adc
lcall
lock
mov
pusha
aas
sub
inc
and
cs
movsb
stos
inc
ret
add
mov
pop
movsb
push
leave
pop
jb
aam
sub
fnsetpm(287
or
sbb
sti
pop
dec
inc
cwtl
fists
mov
incb
addr16
fstpt
jb
shll
pop
adcl
inc
cmpb
xchg
fwait
push
jae
stos
mov
arpl
mov
ljmp
addr16
jmp
cmp
ret
fstp
add
mov
subb
xlat
pusha
jbe
push
sbb
fsubs
inc
sbb
or
data16
loopne
in
push
pop
sbb
pop
cld
inc
push
add
sbb
shrb
jmp
insl
arpl
adc
sbb
dec
je
outsl
push
dec
enter
in
dec
jnp
or
mov
inc
cmc
xor
clc
cmp
cmpsb
mov
dec
inc
out
xchg
sarb
or
cmp
xor
hlt
adc
outsl
aad
cmp
addl
pop
data16
dec
lea
scas
in
xor
popl
cmp
fstp
and
mov
push
mov
add
addr16
aas
xchg
sub
inc
enter
std
jmp
xchg
lods
fdivl
mov
ljmp
jmp
clc
movsl
push
outsb
adc
jno
rcll
int3
adc
fstp
push
or
push
cmp
cmp
fnsave
mov
out
ds
mov
lea
push
pop
or
int3
cmp
cmp
jmp
mov
ret
fsub
and
repz
fucom
outsb
pop
mov
or
pusha
or
pop
dec
hlt
xchg
cmp
sub
push
dec
jle
sbb
cwtl
in
scas
cmp
ret
je
js
stos
out
and
cmp
mov
daa
das
jne
in
int3
and
stos
sub
lods
sub
adc
inc
mov
push
mov
adc
dec
mov
and
ja
fucomip
test
sarl
push
pop
scas
das
jge
mov
sbb
push
push
mov
test
adc
mov
fimull
out
addr16
inc
xchg
jb
pop
mov
lret
pop
or
mov
fsubr
sbb
les
jno
rcr
dec
inc
adc
add
in
jge
or
hlt
xchg
call
lahf
and
jne
adc
call
inc
imul
dec
xchg
mov
cmp
xchg
mov
and
xchg
pop
sub
xchg
push
mov
sbb
mov
or
cli
xchg
cwtl
cwtl
js
jbe
pop
or
mov
xchg
int3
sbb
xor
out
xchg
xchg
stc
lock
inc
dec
flds
out
outsb
jmp
in
js
mov
pop
pop
sbb
mov
pop
mov
and
cmpsb
lret
jae
sbb
mov
std
mov
popa
xchg
sub
mov
aas
inc
dec
dec
dec
hlt
adc
jmp
sub
inc
push
adc
outsb
and
mov
out
pop
mov
out
or
aas
mov
and
dec
orb
mov
loop
inc
inc
adc
mov
scas
fs
jns
cmpsb
cmpsl
leave
inc
sub
arpl
mov
inc
push
mov
filds
adc
xor
and
fbld
loope
push
mov
notl
push
jo
mov
sti
dec
stc
stos
pop
mov
movsl
mov
or
dec
and
movsb
fstpt
add
xlat
rol
outsl
dec
divb
mov
mov
aas
mov
andps
pop
or
xchg
jle
mov
scas
cmp
mov
pop
cwtl
sub
enter
mov
fwait
addr16
push
test
stc
filds
sahf
inc
xor
les
cmp
cmp
ds
mov
xchg
test
xor
jne
mov
or
or
xor
add
andps
push
into
fwait
cmp
xor
mov
pop
jl
inc
stc
divl
fsub
test
imul
push
lds
arpl
inc
sbb
sbb
or
jae
cmp
test
movsb
lret
subb
addr16
fisubrs
adc
loope
sbb
lret
loopne
inc
into
scas
cmp
push
sub
jb
xchg
inc
lcall
hlt
xchg
xor
pop
adc
imul
sbb
sub
mov
xchg
jl,pt
mov
adc
inc
scas
pop
loope
ds
push
rol
rclb
sarl
fisubs
jle
movsb
stc
cmpsl
adc
xor
outsl
into
mov
stos
or
or
popa
pop
mov
and
imul
inc
pushf
notb
mov
push
movsl
mov
xchg
je
mov
mov
addb
sub
jg
rolb
inc
ret
xchg
dec
fdivr
push
neg
int
addr16
imul
jae
jle
adc
mov
scas
pop
cmp
jbe
push
add
stc
xchg
sub
sti
adc
cmp
mov
jnp
cli
shl
pop
mov
and
lret
mov
std
push
fcomi
fs
cwtl
jl
in
mov
mov
int3
lock
pop
add
gs
aam
fsubr
mov
aaa
add
add
inc
insl
push
jl
mov
xor
xor
mov
xor
mov
test
dec
fsubl
or
ss
nop
ficoms
xchg
mov
mov
int
pop
sbb
outsb
je
mov
les
dec
xor
sub
fdivr
fldenv
imul
jecxz
lret
mov
aam
xor
sti
mov
in
int
and
fisubl
shlb
or
lahf
insb
jle
in
outsb
sbb
gs
hlt
jecxz
push
cmp
imul
inc
shrb
loop
bound
jbe
xor
popf
sbb
add
aaa
in
adc
mov
je
fcomps
jecxz
je
push
js
xchg
xchg
fwait
mov
push
lea
repz
jge
leave
mov
jnp
gs
mov
and
movsl
sbb
mov
cmp
out
sub
push
lret
iret
scas
clc
jns
ret
es
adc
addr16
inc
or
mov
pop
iret
mov
subb
xchg
mov
pop
adc
pop
cli
cld
or
addl
push
adcl
aam
xor
clc
or
sub
inc
xchg
mov
iret
repz
gs
loop
inc
sbb
fmul
sbb
adc
clc
inc
lds
inc
js
movsl
mov
lahf
sub
ja
aad
cmc
dec
dec
push
sahf
and
dec
mov
outsl
fs
pop
push
jne
jo
mov
jns
jne
xchg
xchg
pcmpgtw
mov
lret
xchg
enter
mov
adc
lahf
jg
and
lahf
push
aam
cltd
pop
xor
repz
ficomps
mov
push
daa
jnp
dec
fs
test
dec
adc
lea
push
bound
loopne
xchg
lret
outsb
push
sbbb
aad
push
icebp
cmp
mov
out
jle
in
mov
leave
test
sub
pop
cltd
fisubrl
iret
out
into
pop
sub
fcomps
lret
fwait
lret
or
int3
lcall
inc
adc
sbb
leave
jo
adc
pcmpgtb
test
xchg
ss
xorb
ss
push
and
cwtl
push
add
dec
sbb
mov
push
cs
or
pop
xchg
dec
icebp
mov
xchg
add
fwait
out
das
popa
mov
sub
testb
pop
cmp
shrl
int
add
and
add
test
mov
xchg
inc
push
mov
lds
rcrl
aad
inc
out
push
cmpl
ret
ret
imulb
or
lret
inc
test
jne
cmpsl
push
dec
mov
xor
loop
push
movsl
pop
divl
popf
dec
inc
pop
mov
cmc
adc
push
dec
jne
mov
outsb
out
jnp
insb
pop
jne
fs
push
cmp
adc
dec
out
mov
ret
dec
stc
in
mov
xor
fisttps
aad
aad
inc
sub
roll
aam
sbb
cmp
xchg
fistps
gs
loopne
shl
mov
lock
sbb
mov
mov
outsl
les
push
mov
lret
outsl
inc
dec
enter
xchg
xchg
cmp
fldt
ret
push
mov
jmp
inc
push
pop
popf
push
jmp
ds
add
pop
jle
fnstsw
sbb
aad
imul
out
insb
push
mov
push
mov
inc
orl
jno
cld
out
add
push
xchg
cli
in
xor
outsl
sahf
jp
pop
es
fs
fcomip
aas
testb
mov
mov
test
dec
lds
jo
negl
mov
out
add
add
loope
loop
xor
rcrb
jecxz
push
dec
add
fdiv
leave
jnp
adc
loopne
mov
insb
pop
fdivs
sub
jns
jp
cmp
iret
and
das
testl
inc
cmc
dec
adc
pop
cmp
mov
dec
push
sbb
outsl
int3
sbb
fistl
jl
roll
repnz
stos
movsl
sbb
out
push
mov
and
and
dec
incb
add
or
iret
ficompl
js
jle
rorl
cli
cmp
sbb
mov
aaa
cmp
mov
inc
jb
sub
out
hlt
dec
dec
and
mov
pop
xchg
or
sub
rcrb
and
mov
imul
scas
ds
pop
notb
jecxz
lret
mov
jo
inc
js
test
xchg
ficoml
lods
and
adc
pushf
inc
sub
mov
mov
movsl
out
call
test
pop
in
cmp
jmp
fnstsw
mov
les
lret
outsb
push
mov
xor
imul
push
and
xchg
cmp
pop
jb
ret
inc
mov
popf
in
xor
pop
sbb
movsl
loop
push
test
or
das
sbb
mov
scas
push
sub
xchg
cmp
es
pop
test
rolb
dec
test
lods
ja
adc
xchg
sub
mov
dec
push
push
push
rorb
xchg
lea
inc
sbb
xorb
sub
hlt
inc
in
xor
inc
and
pop
std
outsb
clc
ret
add
nop
dec
out
and
and
leave
mov
add
or
mov
sar
ret
push
pop
pusha
lods
mov
lret
lret
cmp
cmp
fstpl
sub
mov
ds
fwait
dec
mov
nop
pushf
stc
xor
cmp
out
clc
inc
enter
xchg
jecxz
xor
lahf
mov
mov
inc
int3
jg
ret
mov
push
std
leave
and
adc
arpl
aam
mov
dec
ds
mov
shlb
mov
adc
mov
cmp
push
data16
and
mov
lcall
and
xor
and
loop
cmp
fstpt
cmpsb
cmc
aad
pushf
adc
rorb
jnp
mov
xor
push
arpl
lcall
or
sbb
test
add
xor
iret
ret
pop
mov
iret
cmp
les
jge
jge
sub
ljmp
vprotw
mov
in
pop
js
out
popf
mov
add
and
jle
xchg
fdivrl
ficoms
sbb
jge
push
xor
cmp
dec
pop
and
push
je
int3
dec
sbb
out
push
push
push
adcl
mov
cmp
nop
xor
jnp
mov
push
dec
imul
sbb
dec
out
subb
push
mov
popa
jp
mov
enter
out
or
pop
push
pop
or
cmpsb
sbb
hlt
pop
insl
outsl
cmp
or
ljmp
pop
cld
faddl
in
mov
add
loope
loope
cwtl
sbb
mov
push
iret
jnp
ljmp
jae
lock
jl
stos
mov
sub
loopne
pop
cld
push
scas
popf
adc
mov
out
sub
arpl
rorb
cld
shll
mov
les
xchg
jle
inc
pushf
mov
add
aas
inc
loop
mov
shl
sbb
das
or
jb
out
test
popa
sbbb
mov
icebp
and
cmp
adc
lcall
insl
lret
mov
int3
push
push
pshufw
lods
sub
sbb
jo
sub
xchg
ret
xchg
inc
fwait
ljmp
dec
mov
ficomps
mov
movsl
ret
ffreep
in
cmp
roll
imul
mov
sbb
pop
mov
popf
pop
sub
jl
push
inc
push
xchg
movsb
divb
mov
pop
fdivrl
inc
loopne
jae
xchg
add
cmp
enter
cmp
dec
fwait
xchg
mov
cmc
inc
sub
xchg
fsubr
sub
sbbb
dec
insl
and
inc
mov
push
and
mov
mov
xor
lds
dec
int3
enter
xor
and
mov
lcall
push
lcall
push
fstpt
mov
cmp
and
or
es
push
lea
mov
or
mov
bsf
push
call
xchg
xchg
inc
push
inc
shrb
push
inc
mov
jb
stos
mov
stc
rorl
jnp
jae
xchg
sahf
cmpsl
jno
loopne
cld
inc
sub
mov
lea
xchg
mov
jecxz
adc
outsb
add
xor
addr16
std
into
push
rcrl
pop
pop
or
fimull
fiadds
sub
movsb
dec
xchg
cmp
adc
lahf
ss
cmp
cmc
mov
xor
jno
mov
inc
xchg
dec
mov
cmp
jecxz
aam
out
cmp
and
out
imulb
loop
lods
xlat
mov
aad
xlat
or
cwtl
mov
cmp
es
in
and
sub
out
jae
loop
and
or
outsl
pop
sub
aad
or
in
adc
xchg
in
mov
add
in
rcll
sub
addr16
or
aaa
cld
jg
cs
push
out
push
je
lods
adc
inc
mov
ret
lods
push
sbb
dec
pushf
repz
aaa
addr16
test
es
cmp
stos
mov
xchg
ljmp
jge
cmp
or
or
jle
push
push
xchg
mov
mov
shl
fwait
jg
test
adc
imul
pop
jge
lret
ret
jge
gs
lret
das
xor
cmp
sub
testb
aad
mov
leave
inc
sarb
sahf
repz
aam
xor
xor
sbb
jbe
xor
sub
lret
cmpb
jl
xchg
xor
add
xor
lds
rcll
sbb
add
xor
xchg
and
lock
push
cmpsl
test
jb
std
bound
movsl
jno
sub
test
add
pop
bound
add
dec
loop
lret
stos
push
pushf
stos
add
jne
es
fidivrl
fidivrl
daa
adc
sbbb
jecxz
rcrb
je
xor
jbe
inc
cltd
fisttps
or
jecxz
dec
sbb
gs
std
or
into
adc
pop
push
jae
pop
and
stos
adc
cmc
insb
mov
sbb
sti
cmp
es
inc
into
and
inc
inc
xchg
add
inc
pop
mov
dec
xchg
cwtl
or
push
fdivs
fldl
ficompl
dec
xchg
pop
pop
inc
adc
mov
addb
cltd
dec
test
inc
ret
mov
push
rcrl
out
jl
outsl
lds
mov
or
int3
enter
inc
mov
icebp
cmpsb
add
pop
int
inc
xchg
fiadds
push
adc
pop
mov
frstor
ret
sahf
sbb
vandnps
xchg
or
roll
lcall
bsr
test
pushf
hlt
cs
sbb
inc
rol
inc
cmpb
sbbb
mov
inc
xor
pop
inc
add
mov
push
cld
in
or
mov
pop
jl
adc
js
movsl
push
ret
sbb
or
add
ljmp
fdivrl
push
adc
in
into
aaa
inc
lds
repnz
xchg
xchg
insb
int
mov
test
mov
gs
xchg
in
imull
jge
fisubrl
sub
icebp
rcrl
out
nop
mov
adc
in
jmp
outsl
sbb
or
xchg
jge
cwtl
daa
jne
fisttps
repz
popa
jb
out
test
bound
add
cmp
sub
loopne
lret
icebp
dec
sub
push
xchg
jb
push
adc
mov
je
sub
lods
mov
inc
adc
push
fnstcw
push
scas
je
dec
xchg
test
inc
fisubs
mov
test
mov
mov
stc
lcall
push
xorl
cmp
and
movsb
int3
pop
aas
push
inc
flds
xor
xchg
fisttps
fnsave
lea
mull
negb
icebp
loop
leave
sub
push
std
sbb
xor
mov
jp
int3
ds
lahf
sti
in
add
in
xor
dec
xlat
mov
les
gs
hlt
dec
jno
xchg
in
adc
out
pop
pop
mov
int
fisubl
mov
fnstsw
cmp
out
js
add
ljmp
into
push
push
fwait
cmp
les
in
outsb
xchg
pop
mov
push
push
xchg
enter
ret
mov
hlt
data16
jnp
push
icebp
pop
pop
enter
subb
jp
inc
inc
mov
push
out
push
mov
jns
push
repz
push
cmpsb
data16
jno
test
icebp
dec
xchg
sarl
or
fidivl
test
adc
iret
stos
rolb
fldl
out
and
xchg
jns
insb
aad
pop
addr16
push
sbb
cld
ret
je
shlb
ljmp
shlb
repz
cmpsl
lcall
mov
mov
xchg
ds
mov
ret
jo
scas
push
xor
mov
stc
insb
xchg
jecxz
ffree
loop
test
mov
or
and
out
iret
mov
out
pop
xor
push
add
push
sbb
sub
les
xchg
or
and
popa
imul
sub
ds
pusha
jno
push
insl
ss
clc
call
xor
aam
cmp
inc
dec
rcl
aam
sarl
loop
push
inc
mov
lret
push
xor
sti
xor
cmp
decl
lahf
push
hlt
aad
jecxz
je
shlb
and
int
shl
cmpsb
movsl
adcb
or
hlt
or
jecxz
adc
hlt
sub
mov
pop
outsl
lds
and
ljmp
movsb
in
fidivl
scas
inc
stc
or
in
dec
dec
ret
push
inc
or
repnz
add
add
lcall
sub
daa
mov
cmpsb
xchg
shll
add
ja
pop
jmp
adc
push
inc
jge
mov
mov
push
stos
arpl
or
lock
stos
adc
outsb
adcb
imul
inc
mov
fadd
loope
jle
add
mov
mov
cwtl
jg
cltd
addr16
daa
punpckhwd
pop
pop
int3
movsb
movsl
adc
mov
adc
shlb
mov
fdivrl
shlb
mov
lret
sbb
ss
movsb
mov
mov
cmpsl
cmpsl
inc
sub
adc
inc
xor
xchg
mov
inc
push
jmp
jmp
jno
in
outsb
sub
aas
in
ret
mov
jb
xchg
jle
dec
ljmp
lock
jns
divl
pop
adc
cmpsb
inc
inc
hlt
mov
aaa
popf
mov
ja
daa
aad
mov
insl
repnz
loopne
add
add
aad
repz
movsl
shrl
notl
out
ret
pop
add
repz
cs
sbb
push
mov
cmpsl
stc
mov
mov
jmp
pop
xlat
dec
dec
push
lods
adc
pop
mov
add
in
shrl
outsb
cmp
inc
jge
push
and
je
jl,pt
andl
inc
jp
test
les
sub
and
xchg
aaa
or
cmc
or
std
dec
add
stos
xorl
leave
mov
mov
lods
out
lods
jb
or
aaa
jle
aad
cld
xor
es
aam
mov
pop
inc
pop
mov
inc
enter
stc
in
jp
data16
mov
inc
pop
hlt
pop
pusha
mov
push
xchg
mov
adc
shll
insl
add
pop
mov
test
sti
push
pop
or
jl
push
jp
dec
jae
xor
aam
mov
cmp
mov
xchg
repnz
lods
push
ret
hlt
cmp
aam
jne
add
int3
inc
out
minps
dec
test
insl
stc
and
sbb
popa
jmp
push
imul
xchg
push
sbb
mov
paddusw
adc
repz
and
xor
nop
les
mov
cld
add
sub
mov
daa
int3
stc
jp
repnz
mov
dec
cmp
mulb
mov
mov
mov
jge
pop
aad
sub
popa
movsb
mov
sahf
insl
jns
fldl2e
dec
repnz
hlt
fisttps
pop
xor
scas
adc
cmpl
pop
fmul
mov
jo
xchg
decl
lahf
ds
sti
jecxz
aas
mov
rcrl
sahf
movsb
outsb
push
imul
shrb
xchg
lods
xor
mulb
pop
repnz
adc
shrb
xchg
push
and
lret
xchg
fdivs
or
sbb
pop
lret
and
xchg
mov
inc
std
les
add
dec
je
xchg
pusha
mov
and
lret
xchg
cmp
aaa
cs
int
sti
mov
and
and
dec
mov
push
addr16
mov
xchg
aam
mov
adc
mov
stos
test
movb
push
lock
enter
xchg
jns
jl
jmp
push
mov
test
sub
push
xchg
xor
jmp
sahf
push
xchg
cmp
in
cmpsl
ds
and
dec
or
into
or
cmp
mov
dec
xchg
pop
andb
outsl
packsswb
push
mov
fcmove
xchg
fcmovbe
out
pop
repz
and
out
lods
inc
jno
push
jge
adc
cli
adc
inc
jb
stos
dec
pop
add
sahf
fimull
out
fstpt
loope
xchg
cmp
jle
adc
int3
shll
xchg
jl
lret
lcall
inc
int3
lods
bound
mov
mov
psllw
lods
cmc
push
cld
adc
add
jns
fistps
push
fwait
cmp
xor
add
in
dec
push
or
shrb
xchg
sub
loope
mov
mov
inc
sbb
push
addr16
stc
ret
mov
icebp
and
add
das
xor
cmp
pushf
cwtl
std
sub
lods
aaa
xor
shrl
add
es
cwtl
inc
or
mov
shl
and
cmp
jns
xchg
loop
leave
fwait
dec
jg
pop
lds
dec
dec
inc
jl
jae
cmp
or
lds
sarb
enter
cmp
popf
pop
ret
cmp
sbbb
lods
and
imul
pop
clc
enter
scas
cli
add
xor
push
sbb
neg
lds
lret
scas
mov
in
je
mov
decl
in
mov
mov
insb
mov
mov
ja
out
mov
jge
xor
leave
adc
outsl
xchg
or
add
mov
cmp
orb
fs
cltd
jle
jl
lret
cmp
outsl
jle
or
dec
lret
jno
cmp
mov
dec
repz
clc
data16
iret
jecxz
cmpsb
lea
js
adc
decb
and
xchg
cmpsl
jo
imul
stos
movsl
jb
fucomip
stos
out
es
and
lods
sbb
mov
adc
sub
pop
mov
arpl
pop
jmp
sbb
daa
fdivl
jne
pop
in
xor
add
enter
adc
out
and
inc
cli
cs
jb
xchg
xchg
inc
push
mov
iret
sbb
pop
loope
and
inc
enter
lock
aad
mov
sub
jns
aaa
in
inc
lds
fstl
iret
jge
outsb
adc
out
sbb
ljmp
scas
ss
inc
adc
jp
pop
in
cmp
push
rclb
mov
adc
ret
decb
sub
into
pop
adc
mov
cmp
test
push
and
xor
xor
add
inc
mov
adc
leave
inc
cltd
push
popa
and
jnp
outsl
and
popf
cmp
push
lds
mov
pop
mov
adc
cmp
ja
inc
jo
and
das
dec
outsb
add
mov
stc
push
lods
jnp
icebp
push
sbb
stos
jmp
leave
fnsave
cmpsb
mov
out
outsl
paddusb
xor
xchg
addr16
push
fcomps
mull
jb
or
mov
fiaddl
adc
push
cltd
or
push
or
ret
inc
sub
dec
mov
mov
mov
testl
lods
add
mov
xor
std
subl
or
push
sub
in
jp
jge
cwtl
or
lds
dec
push
jne
pop
pop
ret
test
insl
cmpl
enter
dec
fildll
adc
leave
nop
les
in
xchg
mov
mov
fcompl
rcrl
arpl
call
push
fisttpll
mov
pop
sbb
fsubs
loop
xor
xor
aam
rorl
and
imul
outsb
jbe
fs
faddl
or
in
or
dec
xor
pushf
sub
cwtl
pop
jp
push
cmpsb
je
mul
sub
lret
push
mov
mov
or
sahf
lret
cmpsl
adc
push
lea
ret
movsb
repnz
sbb
pushf
ss
insb
hlt
jno
lods
sbb
push
cld
imul
shll
arpl
add
icebp
cmpb
repz
push
lahf
pop
je
mov
mov
pop
inc
lea
xlat
push
adc
in
fnstcw
gs
test
or
jg
sbb
enter
shrb
mov
lds
jge
in
rclb
dec
sbb
in
mov
ljmp
fimull
aad
aad
and
das
idivb
test
xor
data16
imulb
sub
push
pop
xchg
pop
ret
addr16
jmp
lods
push
dec
mov
testb
lret
outsb
pop
imul
mov
cmp
jg
mov
rcrl
sub
std
xchg
ljmp
test
dec
pop
clc
or
push
inc
push
mov
xchg
arpl
adc
push
cli
out
jl
nop
inc
xlat
aad
jl
jle
out
ja
sbb
and
mov
test
mov
push
or
jl
daa
xchg
insl
xor
dec
test
inc
fisubrs
sub
adc
push
and
orl
adc
lds
push
mov
mov
mov
mov
insb
adc
jbe
pop
std
adc
ds
mov
je
pop
mov
xchg
mov
out
jne
outsl
mov
cmp
mov
xor
mov
mov
rclb
int
mov
push
pop
insb
xchg
outsl
adc
into
fidivl
or
mov
dec
in
mov
sub
in
test
js
and
cmpsl
fisubrl
xchg
imul
andl
loop
repz
jo
jbe
in
imul
jbe
repnz
fldenv
jge
enter
pop
jne
aam
or
mov
xor
fildll
xchg
ljmp
fcomps
and
popa
repz
push
addr16
arpl
adc
nop
lea
pop
push
mov
cwtl
popa
sub
fsubrs
mov
mov
adc
aad
pop
xchg
jne
je
pop
insl
imul
jo
mov
cmpl
mov
or
adc
clc
xchg
and
or
inc
sbb
dec
lret
jmp
jno
gs
xchg
stc
fs
imul
add
cmp
xchg
mov
scas
sbb
adc
pop
loop
cs
dec
jle
enter
rol
ret
pop
push
icebp
shlb
fs
enter
push
repz
xchg
push
cmc
repz
mov
enter
sbb
pop
xchg
xchg
or
loop
xorb
arpl
out
ret
mov
jl
push
push
jecxz
lds
pop
add
popf
push
imul
data16
fimuls
adc
sbb
sbb
aaa
out
xlat
mov
jae
scas
sbb
jno
dec
sub
andl
add
mov
das
aaa
aad
sti
pop
adc
lods
mov
inc
xor
jle
imul
or
rcl
push
ret
xor
push
add
xor
sub
call
stos
loopne
aad
push
cli
jl
in
jns
pop
lods
ud1
dec
repnz
jecxz
scas
cld
lcall
test
cmp
add
sub
jne
cld
lods
sarl
pop
xor
or
xor
std
xor
adc
mov
cltd
out
mov
push
fiaddl
out
pusha
push
sub
dec
xchg
sbb
push
sub
cmp
sub
mov
fisubrs
mov
push
lds
xchg
test
push
adc
and
out
push
inc
mov
add
mov
test
rep
aam
add
mov
jmp
push
add
pop
pop
pop
jbe
je
lret
orl
imul
cmp
stc
hlt
push
xchg
pop
and
mov
and
xor
mov
test
cwtl
das
mov
loope
sbb
fistpll
xor
insb
add
push
cmp
add
jo
out
pop
pusha
insb
pop
ja
and
cwtl
add
push
push
dec
cmpxchg
hlt
fcmovbe
mov
push
pop
repz
lods
pop
fs
fnsave
cmp
mov
push
fwait
mov
push
mov
cs
adc
enter
mov
adc
lret
jae
mov
scas
fldl
ja
lahf
fidivrs
into
addr16
lret
test
rolb
sub
jbe
imul
mov
lds
imul
dec
cmp
mov
cmp
jae
imul
jmp
jo
or
mov
shrl
cmp
adc
jmp
push
gs
popa
sbbl
mov
add
jno
aas
jge
push
add
add
and
rorb
cmp
or
mov
js
stos
lret
inc
into
in
pop
cmc
push
or
out
mov
xchg
popf
leave
fsubrs
xor
repnz
add
push
add
rolb
pusha
stos
push
and
xchg
sbb
fidivs
mov
out
inc
mov
sbb
cmpsb
pop
addr16
scas
push
xchg
dec
repz
xchg
ljmp
inc
pop
iret
xor
inc
add
cs
jmp
and
pop
cmc
jo
jle
xchg
mov
jl
sub
or
xchg
fisubrl
or
push
cwtl
mov
xorl
lock
adc
out
sub
imull
imul
sbb
xor
push
scas
push
test
repz
push
sahf
sub
cmp
adc
shr
daa
jno
rorl
out
scas
aad
pop
lcall
push
xor
and
cld
lea
popf
adc
xor
cmp
out
fnsave
pop
test
dec
and
xor
idivb
pop
popl
pop
inc
sub
sub
bswap
mov
xchg
cmp
mov
push
xor
scas
and
into
inc
inc
xchg
cltd
out
arpl
xlat
adc
xchg
stos
aaa
add
rorb
cmp
je
add
icebp
sub
in
adc
repz
mov
shrb
pop
jmp
aas
adc
je
les
add
pop
pop
out
fwait
pusha
daa
fdivrl
or
shlb
pop
push
dec
pop
pop
adc
fdivs
push
jmp
aam
negb
push
rcll
ffreep
mov
shll
aaa
cmpsb
out
rorb
push
btr
cmp
test
fiadds
inc
mov
out
add
out
mov
adc
lahf
cli
sub
iret
add
cmp
movsl
stos
jle
add
jle
xchg
adc
push
pop
and
in
jae
xchg
pop
ds
int
jl
out
das
inc
popf
dec
movsl
push
outsl
cld
mov
mov
arpl
xchg
pop
pushf
cmpsl
jmp
leave
jmp
jp
add
orl
adc
imul
mov
test
call
sbb
je
or
sbb
sbb
mov
cmpsl
fnstenv
jmp
push
les
leave
mov
xchg
stos
inc
mov
or
mov
enter
nop
add
xor
sbb
rolb
rorl
gs
mov
sbb
dec
lret
xchg
sub
add
mov
xor
pop
pop
adcb
cmc
mov
xor
sbb
cmp
jg
push
test
fprem
cmp
xorb
lret
or
arpl
out
inc
rcll
xor
leave
or
ds
xlat
push
cmpsb
mov
or
mov
jnp
cmp
dec
or
and
out
lods
in
or
push
sbb
loopne
pop
add
jne
ss
xchg
inc
xchg
out
dec
leave
lcall
mov
addb
add
dec
mov
mov
jns
jbe
sub
mov
push
mov
push
cs
and
dec
in
sub
scas
jg
sub
outsl
sbb
mov
gs
xor
lods
mov
pop
dec
xor
testl
pop
xchg
in
repnz
fsubl
jge
test
fistl
mov
jle
sti
stc
pop
xchg
nop
subl
push
in
xchg
ja
xor
data16
faddl
les
xor
mov
xchg
push
and
dec
push
push
cmp
ljmp
vcomisd
movaps
test
shlb
rcrb
movsb
mov
bnd
push
popa
sub
mov
push
push
insb
data16
test
inc
jle
mov
mov
and
cmp
in
loopne
lods
jg
mov
jge
pop
fnstenv
or
mov
int
call
sub
cs
out
inc
into
jbe
fwait
imull
test
push
and
js
out
hlt
das
out
faddl
notb
jmp
adc
mov
rcrl
add
sub
push
cmp
insl
int3
dec
mov
js
jae
cmc
lcall
pop
pop
xchg
and
adc
lret
aas
sti
jbe
mov
in
inc
xchg
subl
fsubl
sub
and
stos
das
aas
js
lret
test
aaa
popf
popf
stos
lods
testb
popa
dec
xchg
adc
mov
xor
push
fnstenv
lcall
pop
xchg
sbb
or
lds
int3
mov
icebp
rcr
and
push
lahf
push
and
dec
and
sbb
nop
xchg
sbb
fldl
test
testl
sbb
pop
lods
repz
loop
pusha
push
add
cmpsl
jne
pop
es
mov
add
add
dec
adc
mov
ss
jo
dec
cmp
dec
and
jp
jo
popa
mov
rolb
jae
test
xor
rolb
popf
cld
cmp
into
push
divb
jnp
test
and
popf
ss
mulb
sarb
jbe
mov
jne
insb
int3
daa
clc
mov
test
jno
mov
xor
push
sahf
dec
test
js
push
rolb
call
cs
ret
pop
pop
popf
iret
ss
cli
popa
fucomi
sahf
jge
clc
pop
dec
xor
enter
pop
icebp
inc
push
add
cmp
cmp
dec
repnz
loopne
add
repnz
mov
mov
push
outsl
hlt
imul
into
cld
repnz
xor
mov
sbb
arpl
inc
subl
pop
or
inc
pop
add
mov
out
jne
shl
adc
mulb
sub
push
jnp
movsb
and
mov
xchg
xchg
mov
das
mov
pop
mov
jne
sbb
iret
mov
jae
jno
and
je
mov
std
in
mov
fimull
cmp
cltd
cmc
mov
mov
jns
pop
xchg
out
jo
aad
mov
pop
pop
call
inc
std
das
push
dec
repz
es
jp
loopne
inc
mov
push
mov
gs
divl
xchg
cmp
cwtl
mov
cmp
addr16
stos
scas
mov
loope
popa
cld
sub
popa
sub
mov
popl
ljmp
addb
lcall
cmp
adc
sub
mov
dec
in
addb
jle
repnz
js
cmpsb
rcr
pop
jns
pop
cmp
mov
loop
shlb
rcrb
xor
test
imul
call
jp
push
cmp
data16
sub
mov
cwtl
xchg
xor
adc
jne
xor
leave
sarb
and
movsl
dec
lret
std
inc
add
mov
arpl
incl
or
ds
fsub
lods
test
push
sbb
lahf
mov
int3
sbb
test
mov
sahf
dec
das
testl
das
cwtl
clc
popf
mov
cld
dec
jbe
pop
add
sub
scas
dec
mov
jp
mov
mov
xchg
lea
pop
gs
dec
dec
lret
mov
das
cwtl
ds
and
aam
inc
cmp
pop
scas
add
icebp
hlt
adc
sbb
js
ljmp
fmuls
das
testb
or
adc
sarl
mov
sahf
ss
movsb
scas
adc
mov
psubw
pop
test
jg
jne
xlat
sahf
stos
inc
fwait
popa
clc
push
ficompl
dec
dec
ret
inc
mov
fisttps
add
stos
fbstp
sub
push
add
rolb
lods
aaa
fldl
cmp
addb
sbb
and
jnp
add
inc
movsl
fstl
mov
mov
ret
not
xchg
ficompl
jnp
cli
iret
fildl
mov
and
enter
xor
insl
ljmp
add
outsb
das
cld
in
xor
dec
pop
mov
push
mov
or
outsb
loop
lock
pop
inc
je
shrl
dec
out
enter
adc
mov
jmp
aad
stos
push
sarl
pop
pop
aad
vpand
lds
jmp
insl
pop
fucom
cmp
dec
xor
js
pop
out
mov
cmp
xchg
cmp
cmp
in
ss
and
mov
and
or
sub
fmuls
insl
add
xchg
out
mov
rcll
or
mov
mov
pop
ljmp
mov
xchg
inc
cmpsl
mov
dec
gs
outsl
or
xchg
fnstenv
add
leave
pop
adc
or
xchg
pop
rcrb
inc
pop
pop
jp
in
xchg
dec
sbb
int
ss
xchg
cmp
sbb
ja
cwtl
cmpsl
testl
mov
add
lea
js
sbb
repz
adc
pop
xor
pop
lods
fsts
xor
mov
add
shl
neg
push
notl
pop
outsb
and
sub
test
cmp
cmpsl
adc
in
imul
test
imul
pop
aam
cvtpi2ps
sub
popa
aam
std
cwtl
sub
push
addr16
arpl
jle
rclb
sbbl
mov
testb
jp
enter
cmpsb
mov
xor
ljmp
ja
pop
push
cwtl
jmp
mov
push
mov
out
push
cli
dec
cmp
adc
stos
andl
xor
lret
ljmp
adc
mulb
xchg
jle
sbb
dec
imul
adc
iret
lock
pop
add
es
fldenv
outsb
ljmp
int
ljmp
cld
pop
cli
popf
inc
push
cwtl
mov
setb
jle
inc
hlt
mov
mov
lods
mov
jp
scas
pusha
pop
mov
out
data16
dec
or
testl
stos
and
inc
lea
cs
not
or
cmc
pop
int3
mov
pop
aad
insb
xchg
push
pop
addr16
lret
xchg
aas
fmul
stc
xor
popa
add
mov
mov
cmp
daa
outsb
scas
popf
push
movl
test
sbb
cmp
jb
loop
pushfw
jl
je
aas
mov
fimull
xchg
imul
add
sub
push
inc
outsl
icebp
jmp
lret
cmc
mov
push
mov
sub
mov
push
or
pop
lods
mov
pop
mov
jmp
jp
xchg
push
lcall
cld
jae
lahf
and
sub
test
fwait
rcl
clc
mov
jl
inc
inc
nop
fdivp
push
jb
cmp
xor
inc
jns
daa
push
cmp
dec
insb
cmove
lods
fbstp
mov
mov
popw
pusha
outsb
xchg
push
push
mov
ror
in
test
aam
xchg
and
repz
out
push
and
lcall
lahf
enter
loope
jbe
ret
icebp
js
cmpsl
lret
pop
repz
pop
test
int3
and
adc
pop
testb
cmp
jnp
dec
adc
or
es
and
jecxz
pop
call
lea
add
ds
cmp
cmc
in
ss
xacquire
imul
push
in
mov
fwait
cmp
mov
mov
xor
cmp
mov
jne
mov
xor
mov
cmpsl
pop
sbbl
mov
leave
jne
les
scas
mov
sub
sbb
mov
push
mov
rcl
pop
std
orb
xor
add
rolb
mov
xchg
and
pop
add
test
push
lret
hlt
mov
int3
lcall
insb
jle
call
std
into
popf
mov
sbb
and
pop
push
lahf
cltd
imulb
sub
in
pushf
aad
dec
and
mov
imul
fcompl
sbb
nop
ss
or
jbe
jl
adc
inc
adc
sbb
out
mov
leave
pop
ds
int
pop
mov
clc
and
rolb
clc
lahf
mov
out
aaa
imul
mov
and
dec
mov
bound
push
jno
aas
mov
lret
xchg
sbb
clc
jae
test
adc
pushf
aaa
fisttps
enter
sbb
stos
negb
mov
cmc
push
test
mov
pop
mov
dec
out
adc
xor
add
mov
mov
mov
lret
jle
inc
mov
jae
arpl
rcll
sbb
xchg
add
arpl
mov
ss
ljmp
dec
iret
add
hlt
rcr
ds
xchg
in
sub
sbb
cmp
call
sbb
xchg
sbb
in
jo
pop
rclb
es
hlt
cmp
push
and
ja
rcrb
sti
fists
pop
nop
sbb
push
xchg
in
inc
and
js
and
dec
xor
cmp
and
mov
stc
aad
loop
inc
cmpsb
cli
mov
push
fcompl
push
jno
push
adc
insl
push
inc
add
pop
aam
nop
mov
scas
mov
push
mov
cmp
xchg
mov
test
ret
jns
adc
push
lcall
repz
test
mov
loop
sarl
addb
lret
and
sbb
outsb
sbb
aam
jo
pop
nop
or
pop
pop
push
cmpb
in
and
rcll
cltd
jbe
popa
sti
clc
pop
jmp
cmp
jbe
push
ja
leave
out
inc
pusha
add
into
out
cmp
pop
arpl
jg
scas
lea
sub
adc
popf
mov
push
pop
bound
add
inc
push
fldcw
divl
test
and
dec
xor
push
pop
test
fsubr
push
cmp
dec
jecxz
in
and
mov
dec
out
jo
pop
push
fildl
xlat
push
lcall
and
sahf
leave
fninit
inc
test
into
pop
cmpsl
cmpsb
jno
je
fiaddl
jne
xchg
sti
ja
sub
imull
aaa
call
dec
cmpsl
cmp
xor
fidivrl
out
mov
adc
or
sbb
sub
lea
idiv
hlt
sbb
xor
inc
test
movb
repnz
int
jecxz
push
push
inc
sbb
pop
inc
add
in
dec
jmp
int
add
lret
sub
jae
ja
fsubr
cmc
icebp
push
mov
mov
sub
imul
push
pop
dec
sbb
jp
lahf
mov
mov
mov
int3
jo
mov
mov
into
imul
xchg
jl
cltd
fwait
inc
scas
inc
push
outsl
cli
stos
push
inc
aam
test
add
sub
mov
pop
mov
mov
loop
jne
xor
fimull
inc
cmp
mov
inc
push
or
jne
cmpsl
fwait
shr
mov
pop
out
or
or
pop
push
cmpsl
pop
jno
dec
cmp
out
pop
push
adc
push
in
cld
jb
rorl
push
push
xor
stc
jae
mov
fidivs
std
test
ret
pop
repnz
fwait
mov
andl
es
inc
popa
lock
pop
cmpsb
sbb
mov
push
jne
fmuls
push
iret
inc
icebp
aas
in
mov
fwait
pop
bound
jmp
mov
dec
in
ljmp
sub
js
or
fistps
pop
iret
loopew
push
xchg
out
stos
jb
lcall
push
add
mov
icebp
or
js
cmp
ret
clc
lods
mov
hlt
pop
jmp
scas
fimull
inc
popa
sbb
mov
add
xor
mov
jbe
mov
mov
xchg
dec
push
push
dec
adc
sbb
add
fdivr
mov
push
out
mov
das
sar
loope
daa
mov
sub
jge
sbb
jns
xchg
es
inc
push
out
mov
push
mov
mov
int
mov
std
jecxz
jns
and
shrb
aas
das
mov
jae
call
sub
fsts
jo
shll
and
xchg
fwait
jmp
push
dec
lods
mov
push
xchg
jecxz
jno
dec
mov
lock
aas
and
jmp
mov
lret
stos
dec
pop
xor
add
inc
fcomp
out
decb
add
cmpb
xchg
and
incb
lock
xor
adc
out
mov
daa
fwait
lods
adc
ja
mov
call
nop
sub
movsl
and
lds
cmpsl
in
ds
sbbb
in
imul
fiaddl
fwait
xchg
adc
cmp
enter
add
fildl
mov
jle
ds
inc
dec
mov
subl
sub
mov
popa
pop
inc
out
xchg
push
xchg
push
inc
dec
lcall
xchg
xchg
in
inc
mov
cld
add
jnp
into
fnstcw
scas
fnstenv
ja
cli
inc
or
dec
es
cmp
icebp
dec
add
out
scas
mov
iret
lcall
sub
xor
shl
into
add
mov
cld
dec
jnp
out
mov
jae
punpckhwd
mov
xchg
dec
cmpsl
mov
ficomps
mov
mov
cmpsl
ficoml
pushf
inc
fldenv
imul
arpl
sub
sbb
lds
aam
sub
and
jnp
push
cmc
xchg
jle
fisubs
mov
cmpsb
out
popf
jl
adc
cmpsb
xchg
lret
daa
pop
sbb
outsb
test
mov
adc
sub
std
sbb
loope
cmp
daa
insb
ja
pop
in
into
mov
xchg
push
and
aad
test
dec
sub
ja,pt
and
cmpsl
xor
xchg
adc
test
call
and
pop
fsubl
adc
ret
dec
test
sbb
inc
mov
imul
mov
jl
sbb
mov
or
or
mov
mov
ss
push
dec
incb
and
sbb
inc
out
xlat
mov
movsb
adc
std
nop
loopne
int
pop
pop
aas
push
mov
jbe
stos
sahf
mov
out
ret
fs
arpl
imul
out
push
leave
xor
cmp
orl
push
mov
inc
xchg
adc
jnp
and
rorl
xchg
fisubl
pop
jle
out
test
loope
push
or
or
mov
fsubrs
inc
cmp
clc
lahf
sbb
sub
icebp
jecxz
lods
sti
lock
mov
lahf
ret
nop
dec
inc
inc
ja
push
or
mov
maskmovq
idivl
cmpsb
sbb
aas
mov
mov
pop
pop
cli
orb
mulb
fsubrl
outsb
or
mov
imul
xchg
inc
adc
push
imul
dec
fwait
lods
stc
jo
sbb
incb
ja
sbb
sbb
jnp
scas
dec
lret
xor
xlat
push
outsb
cli
push
je
test
mov
repz
data16
or
xor
mov
inc
sbb
adc
or
inc
loope
push
mov
insl
mov
shll
jno
into
mov
and
jp
imul
adc
push
pop
inc
int
test
xlat
xor
mov
and
aam
adc
jae
and
push
fwait
testl
idivl
data16
jno
cmpsl
cmp
in
jbe
push
xor
push
xchg
arpl
ret
movb
enter
int
fdivs
push
das
ret
cmp
xchg
dec
jae
adc
loop
add
test
sub
push
sub
cld
mov
inc
data16
movsl
pop
test
mov
sbb
mov
add
inc
addr16
mov
lock
lcall
nop
dec
lods
mov
loope
sbb
js
movsl
filds
int
inc
xor
ja
imul
mov
mov
sub
or
jl
jb
pop
mov
outsb
mov
jg
sbb
jmp
pop
jg
mov
mov
out
sbb
add
sbb
mov
xchg
repz
stos
inc
cs
cmp
pusha
cmp
adc
sbb
daa
mov
pop
push
pop
ja
ret
and
inc
push
outsb
out
mov
xor
icebp
add
outsb
sahf
stos
imul
pandn
jne
pop
mov
rcrl
test
jns
das
ljmp
mov
ss
jbe
push
lahf
fisubs
ret
fcoms
scas
pusha
loop
lock
fisttpl
imul
cmpsl
neg
ljmp
out
fiaddl
push
pusha
aam
pop
or
loop
mov
andb
push
sub
mov
popf
jmp
cmpsl
fisubs
in
icebp
cmp
add
lret
outsl
mov
test
jge
jle
sub
pop
sub
imul
inc
in
sahf
xchg
push
mov
pop
mov
dec
je
push
add
inc
cltd
jmp
push
fs
mov
push
push
dec
sub
repnz
cmp
pop
mull
pop
jle
dec
jmp
sti
test
mov
pop
divb
aaa
dec
pop
xchg
std
adc
std
inc
inc
add
addr16
push
jae
dec
pop
fdiv
mov
pop
or
or
pop
outsl
nop
pushf
stc
cmc
sbbl
lock
scas
mov
adc
shrb
jmp
fs
mov
xchg
orb
ljmp
push
xchg
sbb
adc
in
adc
or
pop
cwtl
push
iret
insb
ljmp
dec
popf
js
xchg
dec
movsl
mov
sbb
lds
xor
pop
add
idiv
xchg
mov
pop
mov
dec
push
lock
mov
aam
or
repnz
imul
incb
push
jbe
arpl
xor
fidivrl
pushf
aas
push
cwtl
adc
mov
dec
out
xorl
cwtl
aaa
jle
cmc
dec
mov
outsl
mov
mov
call
aad
fbstp
cmpb
test
fisubrs
push
pop
cmp
xchg
ljmp
pusha
popf
das
push
hlt
cmpsl
out
scas
stos
stos
add
aaa
xchg
imulb
pop
and
xchg
xchg
not
arpl
hlt
fwait
es
inc
and
push
insb
push
xor
stc
pop
jno
xchg
xor
adc
loope
xchg
push
jbe
movsb
rcr
ljmp
sahf
cmpsb
stc
jl
stos
ljmp
call
pop
sti
test
shlb
push
fs
fucomip
aas
and
jae
add
cmp
sbbl
xchg
or
and
ja
or
cmpsb
addr16
xor
js
jae
pop
idivl
sub
and
push
orb
push
sbb
mov
mov
out
fldt
or
cwtl
cli
aas
push
jge
pop
stos
movsl
add
adc
dec
imul
mov
fimull
test
sbb
nopl
into
pop
mov
dec
fsubs
in
enter
sub
arpl
mov
xor
cmp
arpl
cltd
sub
jle
fs
jecxz
mov
int3
adc
mov
ss
lods
lods
pop
xor
repz
xor
or
mov
fwait
adc
out
and
fs
pusha
lahf
lret
cmp
imul
js
aad
add
mov
repnz
xchg
fdivr
ret
add
cmp
stos
cmpsl
mov
shl
in
jle,pn
cmpsb
icebp
and
push
dec
pop
shl
inc
push
adc
push
loope
loopne
outsb
xchg
pop
rcll
dec
into
cs
sub
es
in
xor
sbb
fistl
jg
cmpsb
push
or
jmp
jmp
lahf
out
or
ljmp
xchg
ficompl
loop
push
mov
mov
dec
sbb
es
jle
movsb
push
ret
test
aad
push
sub
int3
cmp
pusha
jno
ficoms
outsl
subl
adc
jb
inc
xor
ljmp
jmp
cmp
ret
inc
push
inc
mov
mov
xor
mov
stos
jo
and
pop
push
inc
mov
and
and
jne
pop
pop
or
sbb
dec
popf
push
flds
and
ficompl
inc
mov
jb
cs
add
cld
xchg
and
cli
imul
leave
test
test
repnz
dec
lds
mov
nop
cld
jecxz
jle
pop
or
das
cmp
shll
js
sbbb
inc
cmp
xlat
sub
subl
inc
fdiv
pop
cmp
jae
xor
mov
mov
sbb
lods
pop
mov
and
pop
loop
add
add
icebp
xor
push
lds
jecxz
mov
je
and
pop
out
popa
mov
js
mov
loope
loopne
in
jbe
dec
fmull
scas
mov
loop
cltd
cs
repnz
push
xor
shll
mov
mov
jmp
xor
jno
add
sub
push
push
sub
inc
fidivrl
jg
sbb
pop
xchg
mov
pop
and
outsl
hlt
xchg
pusha
adc
inc
pop
testl
mov
push
inc
xchg
fidivs
clc
mov
cmc
push
sub
xchg
lock
xor
out
loope
sub
shlb
cltd
xor
out
push
or
and
mov
repnz
out
sbb
montmul
cmpsb
add
push
xchg
xchg
push
js
out
mov
xchg
pop
insl
ret
outsl
sub
or
sub
sbb
push
mov
pop
add
icebp
pop
stos
mov
pop
inc
sub
mov
out
insb
sbb
xchg
adc
aas
into
in
fsubs
push
shll
jg
ss
adc
adc
mov
movsl
filds
clc
lock
das
mov
pushf
and
movsb
lods
aaa
xchg
imul
sbb
mov
std
dec
lret
push
cmc
scas
es
xor
stos
xchg
mov
or
in
pop
arpl
mov
clts
adc
inc
pop
shlb
mov
or
sub
dec
cmp
pop
ds
xlat
xor
int3
adc
dec
lret
xchg
aaa
jns
cmp
xchg
xchg
jns
pop
dec
mov
or
shll
out
xchg
push
insl
and
cld
ja
out
fcomps
cwtl
movsl
leave
sbb
add
pushf
mov
test
fdivs
and
mov
sbb
bound
mov
mov
sub
mov
cld
popf
jo
ja
xchg
lret
rorl
inc
std
mov
push
mov
or
or
test
repz
loope
add
ss
scas
iret
jl
pop
or
in
fistpl
cmp
dec
stos
adc
lds
les
decb
stc
in
xchg
mov
daa
mov
xchg
push
fs
xor
cmp
jbe
add
xlat
outsb
inc
aad
popf
sub
push
cmpsl
enter
test
jp
test
jnp
stc
cmp
jge
fnsave
xchg
xchg
andl
popf
xor
es
fldenv
xlat
out
xchg
xlat
push
push
les
inc
pop
jmp
repnz
es
rcrl
add
faddl
repnz
inc
mov
sahf
popf
pop
dec
cmp
inc
repz
stos
xchg
xchg
mov
push
xor
inc
je
sbb
sub
in
imull
stos
rcll
mov
sub
ljmp
adc
cmp
jbe
xchg
mov
push
xor
dec
cmp
movsl
mov
or
adc
cwtl
mov
cli
movsb
adc
dec
pop
jns
stc
scas
aaa
jge
add
push
inc
xchg
cld
mov
sbbl
sbb
xchg
add
mov
lret
xchg
jnp
xlat
sbb
mov
aaa
push
jae
adc
pop
mov
addr16
xor
xor
test
jle
in
repz
jae
add
sarb
mov
sbbb
cmc
cmp
or
stos
das
xor
jne
cwtl
push
daa
cltd
pop
rcrb
push
cld
arpl
loope
out
and
stos
cld
xchg
test
dec
or
jmp
clc
pop
mov
fisubrs
addr16
or
repnz
out
xchg
les
xor
repz
push
nop
fldt
or
mov
fisttps
cltd
int3
movsb
movsb
lret
dec
aam
cli
or
dec
inc
mov
cmp
push
pop
xchg
lock
shlb
sbb
jge
sub
leave
dec
mov
and
das
int
jle
lea
mov
sbb
andl
xchg
int3
dec
cld
lret
loope
or
lahf
bound
lds
scas
jecxz
ficoml
mov
arpl
aaa
das
int3
mov
jne
pushl
push
leave
xchg
inc
outsb
in
jne
mov
inc
jl
lods
cmp
cli
pop
roll
sbb
mov
outsl
insl
adc
inc
cs
daa
sub
fcomip
and
push
or
add
ss
cltd
gs
cmpsb
jne
ds
xchg
cmp
pop
sub
jl
imul
pop
ljmp
arpl
xor
out
stc
cmp
push
sub
repz
adc
daa
mov
insb
jp
mov
or
adc
or
or
cmp
add
int
icebp
inc
xchg
daa
cli
cmpsl
lcall
aad
xchg
loop
hlt
pop
cli
and
fcomps
xor
jp
inc
add
dec
idivl
fisubl
inc
and
mov
push
push
xorb
push
loop
loop
sbbl
jae
loop
ret
stos
mov
arpl
out
and
add
inc
int3
adc
inc
xor
jl
jo
icebp
movsb
inc
cmp
pusha
iret
lea
jmp
addr16
push
mov
scas
andb
inc
adc
sahf
lds
arpl
xchg
and
jge
cmp
jnp
aas
add
mov
xchg
or
lret
out
aam
mov
pushf
lock
sub
icebp
movsl
mov
loopne
loopne
cmpsb
inc
mov
and
loope
loopne
sub
lret
cmp
or
jle
movsb
jg
pop
outsb
int
mov
das
ss
inc
aad
icebp
or
mov
jp
fdiv
imul
cmp
cmp
pop
ds
mov
hlt
dec
or
mov
shlb
enter
xchg
clc
pusha
inc
add
push
loop
test
mov
adc
xchg
loop
in
int3
pop
mov
cmp
jno
inc
repnz
rclb
mov
xchg
pusha
push
jb
or
mov
adc
and
aas
out
aaa
xor
adc
outsb
sub
push
test
loop
add
inc
jl
pop
and
xchg
enter
mov
mov
mov
mov
xchg
mov
xchg
dec
aaa
jg
add
jae
mov
stos
jge
arpl
jns
fmuls
dec
push
negb
adc
shl
cmp
xchg
lcall
fldcw
ja
fistps
js
inc
pop
mov
mov
mov
aaa
add
mov
in
bnd
test
pushf
push
stos
pop
xor
popa
ret
mov
inc
insl
aam
in
call
fstps
std
out
out
or
das
leave
jge
cmp
cmp
aas
in
or
lds
fmul
mov
aam
nop
test
adcb
lret
popf
fisubrl
es
add
int3
pushf
xchg
out
ja
xchg
jnp
imul
ffree
xchg
movsl
jb
push
iret
and
xchg
pop
mov
mov
fs
sar
cwtl
pop
dec
inc
push
mov
pushl
lods
mov
imul
notb
in
je
add
xchg
arpl
mov
jae
add
fdivrs
aaa
mov
clc
in
mov
in
leave
test
xchg
mov
test
xor
inc
mov
ljmp
jmp
add
je
pop
mov
xchg
fstpt
nop
test
xlat
pop
lahf
shrl
out
mov
push
adc
call
xchg
push
call
and
loopne
mov
test
mov
sahf
dec
push
mov
lret
mov
push
inc
xchg
sub
mov
hlt
hlt
out
push
dec
aam
pop
dec
fwait
sbb
pop
xchg
mov
sbb
jnp
out
loopne
add
xor
or
add
stc
aaa
in
push
pop
aad
push
les
loope
ja
hlt
cmp
jnp
out
dec
cmp
xor
mov
dec
out
fmuls
cmp
sbb
mov
add
pop
mov
dec
shrb
or
insl
mov
fld
icebp
xor
fistps
add
cmp
jb
push
cltd
xor
gs
inc
cmp
inc
rol
push
xchg
push
loop
mov
xchg
jp
out
out
cmp
arpl
pop
pop
sar
int
mov
enter
ljmp
test
and
inc
jmp
cltd
aas
jle
lret
jne
addr16
test
out
pusha
xchg
ror
int
stos
out
sub
jecxz
outsb
scas
mov
xor
mov
xchg
inc
push
inc
jecxz
cmp
bound
jp
jno
and
addb
add
inc
hlt
in
cmp
call
insb
jle
and
xchg
add
pop
fwait
sub
inc
loope
or
add
adc
aas
mov
add
mov
mov
xchg
popf
in
cli
adcb
idiv
daa
mov
adc
roll
cmp
aam
inc
inc
adc
icebp
mov
jg
mov
in
inc
cltd
sbb
imul
sub
sub
lock
add
mov
adcb
pop
inc
dec
mov
mov
push
popa
jnp
xchg
jle
xlat
and
jae
inc
xchg
adc
subb
pop
pop
inc
pusha
lods
add
add
int3
xor
push
dec
mov
shr
movsb
ja
or
push
std
lds
sub
inc
xchg
ljmp
add
mov
bswap
push
jbe
push
xor
inc
dec
sub
imul
rclb
loope
scas
imul
mov
ret
std
insb
inc
in
nop
cmp
enter
sbb
lods
inc
fmull
sbb
iret
dec
cmp
mov
or
dec
daa
mov
movb
pop
mov
adc
bound
push
add
loop
or
xchg
jg
mov
cmc
call
jae
adc
enter
lcall
xor
and
jle
adcl
xor
mov
ds
test
jmp
ss
mov
fildl
dec
ret
adc
ret
shl
les
pop
repnz
xchg
cld
inc
mov
sahf
xor
test
dec
ror
jno
adc
mov
cmpb
inc
push
ljmp
enter
inc
sbb
push
pop
adc
push
push
jecxz
mov
mov
icebp
pushaw
push
or
leave
xchg
jle
jbe
rep
cltd
mov
popf
pop
dec
jne
mov
dec
or
shll
or
shlb
mov
xchg
xor
push
fsubs
sbb
mov
pop
add
lods
adc
in
jg
aad
pop
mov
mov
adc
hlt
adc
and
fbld
sub
add
mov
dec
mov
je
mov
xor
clc
sbb
dec
jb
dec
add
jmp
shrb
adc
and
dec
cmp
gs
pop
mov
xor
add
sbb
and
jne
cmp
shl
add
out
js
in
jne
push
dec
cmpsl
std
bound
inc
jmp
cld
jne
ret
mov
jmp
iret
jp
clc
jge
sub
call
or
add
mov
xchg
rcll
movsb
imul
pop
mov
test
cmc
sub
jge
jo
cwtl
push
stos
repz
jns
mov
and
cmpsl
shr
xchg
sub
cmovl
dec
loope
rcr
in
pushf
mov
pop
pop
mov
adc
xchg
cmpsl
fsts
add
lea
movsb
fdivrl
sub
dec
sub
add
xor
out
pop
pop
repz
int3
adc
xor
std
cmpsl
sbb
flds
rol
jmp
cmp
xor
xor
rcrl
mov
xchg
or
push
loopne
dec
and
dec
rolb
loopne
lret
cmovle
xor
jl
mov
xchg
ret
push
mov
adc
cmp
cmpsb
xor
pop
pop
push
fidivrl
in
push
aas
lods
stc
aam
addr16
inc
nop
adc
sub
popf
sysexit
or
push
bound
in
aad
mov
in
and
in
cmpsb
icebp
adc
inc
xor
push
xor
cmp
lahf
shll
pop
in
lods
out
les
nop
shll
idivl
loop
loop
lret
mov
jmp
dec
pushf
cwtl
imul
loope
addb
fistpl
lcall
fsts
mov
jge
add
sub
inc
sysexit
ljmp
sti
shl
enter
mov
in
xor
lret
or
leave
call
jecxz
pop
cmp
or
push
jp
mov
xchg
enter
or
mov
in
ret
test
jbe
in
cmp
adc
jae
push
pop
outsl
in
xor
fstl
mov
fidivs
loopne
push
rcr
aam
jae
mul
cltd
push
pop
lret
ficomps
lods
xchg
test
test
insl
pusha
jmp
fsubr
and
sti
pop
pop
or
and
and
in
pop
jae
mov
lahf
and
mov
push
mov
out
mov
and
mov
js
arpl
xchg
jno
stos
idivb
add
sub
jo
das
cltd
push
inc
cmp
test
je
or
push
cmc
jno
mov
mov
in
test
ret
jnp
or
mov
out
pop
mov
or
cmp
out
mov
jbe
cmpsl
sti
aad
shll
hlt
int
add
insb
mov
push
pop
and
test
and
push
mov
and
mov
push
icebp
repnz
pop
shrl
frstor
loop
sub
shlb
test
and
push
cmp
stc
fidivrl
adcb
outsl
sub
hlt
orps
jno
cmp
mov
loopne
mov
or
mov
mov
jns
add
pop
nop
sti
mov
jl
push
mov
inc
nop
sbb
push
pop
icebp
neg
pop
xchg
sbb
fistpll
inc
in
cmp
rcll
sbb
and
scas
inc
xchg
rcr
das
mov
stos
nop
lcall
mov
cmpsb
out
insb
pushf
lds
out
stc
xchg
mov
jno
and
xchg
fwait
pop
bnd
dec
pop
cs
addr16
inc
jle
mov
xlat
inc
popa
and
loopne
dec
jmp
mov
add
jl
cmp
sub
xlat
xchg
jbe
mulb
popf
jp
fidivs
jmp
mov
sbb
int3
push
iret
xchg
cmp
je
inc
test
popf
aad
or
xlat
jl
mov
dec
xorl
add
jge
mov
stos
or
hlt
sahf
cmp
mov
int3
cmp
shll
push
jge
aam
daa
xchg
sub
fdivp
in
lea
cmp
xor
dec
and
push
push
pop
cmpl
andb
and
out
adcl
addb
sti
out
insl
out
mov
in
loopne
stc
inc
mov
das
cli
fnclex
aad
test
je
es
mov
jl
jmp
push
mov
fmull
andb
test
fdivrs
adc
mov
pop
and
mov
sbb
xor
hlt
fcmove
mov
leave
xchg
sbb
es
jle
mov
addb
imul
movsl
and
add
outsb
test
jb
mov
or
imul
stos
pop
stos
cltd
lahf
mov
pop
xor
leave
mov
adc
leave
cmp
mov
and
dec
std
ljmp
into
push
inc
dec
lock
push
jecxz
rcl
pop
cmp
jnp
nop
push
stc
xor
push
les
adcl
sti
enter
fildl
repz
and
push
add
call
sub
fwait
dec
adc
add
push
pop
xchg
xchg
stos
cld
pop
notb
daa
push
or
das
mov
daa
mov
mov
popl
adc
xor
iret
pop
jo
jle
mov
jecxz
stos
test
bound
enter
sbb
mov
out
push
cmp
lods
push
repnz
aad
and
sub
add
jbe
jnp
outsb
clc
daa
and
outsl
and
jl
fcomps
ret
out
imul
in
sbb
cmp
mov
inc
add
repz
cli
mov
sub
inc
cmp
in
sbb
repz
es
out
push
dec
xchg
push
mov
mov
dec
xlat
jecxz
pop
fcoms
mov
sub
and
dec
or
xor
out
pop
js
mov
enter
pushf
test
lret
test
push
popa
jne
mov
jp
lods
mov
jecxz
outsl
sbb
outsb
push
aaa
in
addl
clc
aam
mov
cs
insb
dec
in
fdivrl
jnp
cmpsl
shrb
in
loope
shrl
xchg
fwait
xor
pushf
dec
scas
andb
push
sub
sbb
roll
and
clc
cld
in
lds
adc
clc
or
stos
dec
cmpsl
and
and
mov
and
stos
stos
fcompl
push
pop
inc
arpl
scas
in
inc
jmp
inc
jae
push
lret
out
pop
repnz
or
mov
sub
inc
push
fisttps
cmpsl
stos
out
mov
idiv
add
and
movsl
jno
ret
dec
mov
add
cmc
xlat
jo
out
push
sbb
pop
andl
add
push
jmp
ds
pop
fstps
add
jb
stos
inc
mov
je
mov
into
xor
std
and
inc
lods
test
cli
cmp
jns
push
lods
pop
cmp
repnz
inc
dec
shll
or
mov
adc
pop
xor
xchg
insb
sub
mov
add
mov
inc
arpl
dec
loop
cmp
jg
hlt
and
movsb
test
ljmp
jae
lock
or
mov
fcmovnb
pop
faddp
test
lods
lea
push
dec
or
xchg
aad
xchg
leave
dec
adc
jle
and
shl
int3
sbb
jge
stos
bound
inc
pop
pop
out
push
popa
fst
mov
arpl
push
sahf
aam
pop
mov
dec
shll
sub
xchg
je
mov
jae
stos
push
adc
push
aad
jmp
sbb
pop
repz
arpl
sub
adc
pop
gs
fwait
push
sbb
into
push
and
push
add
push
mov
pop
fcmovnbe
fstps
bnd
stos
arpl
ss
rcrb
cli
mov
into
in
add
cmp
ret
pop
pop
jae
push
je
dec
rcrb
fistpl
adc
cmp
jno
mov
int3
add
mov
cmp
mov
inc
jns
mov
lret
ds
add
fnstsw
xchg
adc
jmp
les
cmp
adc
jg
cmp
bound
jle
mov
jmp
pop
mov
dec
mov
pop
add
cmp
fstl
les
adc
jnp
mov
stos
std
int3
roll
and
cmc
xlat
mov
and
arpl
insb
lods
or
pop
adc
cmc
addb
nop
push
add
push
in
imul
cmp
sbb
or
jle
repz
lcall
lret
in
ret
cmp
ljmp
call
insl
sub
movl
push
add
or
xorb
icebp
imul
in
lret
xchg
insb
mov
mov
adc
sbb
loop
mov
int
cmp
sbb
out
push
fwait
or
pop
clc
jg
js
bound
movsb
stos
xorl
stos
es
jge
xchg
fs
enter
pop
sub
lret
jbe
push
jno
pop
dec
gs
pop
sub
cli
mov
jno
jge
push
xchg
and
cmp
xlat
pop
ljmp
jnp
cmp
cmp
jp
out
test
popf
lea
aaa
iret
push
jecxz
in
repz
mov
imul
dec
add
nop
in
pop
jb
insl
das
sbb
in
add
and
push
js
lahf
jns
mov
std
cmp
shl
push
cwtl
jne
data16
ret
sub
mov
pop
in
aad
loopne
dec
andl
daa
jg
sbb
or
into
dec
lds
mov
adcb
push
mov
or
inc
push
xor
dec
int3
test
testl
decl
jp
fwait
xor
jo
in
mov
test
sub
jbe
and
cmp
and
mov
mov
in
inc
lahf
pop
out
mov
lock
mov
aas
stos
mov
mov
arpl
xchg
adc
data16
fnstcw
jmp
pop
pop
xrelease
pusha
mov
dec
xchg
cltd
or
bound
jge
jb
out
xor
gs
mov
mov
xor
out
je
cltd
pop
aaa
xchg
shll
mov
xor
push
mov
lds
jno
cmp
lahf
aaa
dec
sub
mov
adc
not
popa
mov
or
in
fisttps
pop
andl
lds
ds
pop
and
cmp
xor
call
mov
stos
or
clc
add
fwait
sub
adc
dec
and
jno
mov
mov
test
cmp
mov
push
call
jp
pop
popf
iret
add
ss
sub
shl
cmpsl
loope
xchg
jmp
add
test
jecxz
scas
clc
sbb
rcll
bound
cmp
pop
xchg
aam
cli
mov
pop
inc
addr16
clc
popf
leave
ficoml
cmp
mov
loopne
in
xchg
push
jbe
test
loop
add
lret
mov
adc
loopne
pop
dec
js
xchg
and
cmovs
loope
mov
call
shll
pop
mov
repnz
adcl
cmc
xchg
adc
sub
enter
sub
shll
fcoms
rclb
jg
adc
aad
mov
mov
sti
bound
adc
xor
sbb
pop
cmp
cmp
out
mov
outsl
push
test
ret
mov
pop
movsb
ja
dec
push
sub
pop
nop
or
clc
mov
scas
lret
sub
test
mov
push
mulb
sub
or
xchg
addr16
test
push
lahf
push
out
or
out
adc
mov
mov
jecxz
test
loope,pn
in
int
mov
push
scas
pop
ficoms
inc
xchg
or
das
adc
dec
in
hlt
rolb
mov
fdiv
je
cmp
out
popa
lcall
mov
add
jb
mov
or
mov
xor
rolb
inc
push
outsl
arpl
add
xchg
lods
arpl
cs
popf
xor
cwtl
push
pop
es
dec
sbb
mov
cmp
pop
scas
xorb
adc
and
or
std
cmp
push
or
mov
sub
loopne
xor
push
enter
cmp
cli
or
aaa
and
sbb
pop
icebp
popf
rorl
dec
add
mov
loope
movsl
adc
lock
loop
or
fidivs
xor
inc
sub
and
sbb
shr
adc
inc
aas
outsl
mov
insb
jnp
nop
xchg
sbb
decl
xchg
scas
popa
inc
outsb
jns
mov
cwtl
stc
dec
mov
adcl
scas
dec
pop
adc
clc
pop
dec
out
xchg
mulb
pop
sbb
adc
test
jns
ja
jae
xchg
fstpl
or
shrb
sahf
inc
mov
roll
icebp
sahf
jle
inc
and
mov
jb
sbbl
mov
es
lret
push
fisubs
aad
lods
inc
and
pop
jle
dec
pop
push
movsb
cmpsb
xchg
pop
dec
sbb
inc
jmp
arpl
call
jne
lock
sbb
int
test
jecxz
jae
hlt
test
fadd
fdivrs
xor
lods
pop
lea
repz
mov
movsl
dec
add
xor
mov
xor
pop
insl
jbe
inc
imul
adc
jbe
aam
loop
and
pop
sub
fistpll
rorl
js
or
jge
test
jmp
inc
mov
subb
inc
cwtl
insl
bswap
imul
jb
repz
inc
pushf
push
decb
pop
push
bound
sbb
in
dec
pop
xchg
in
lock
cmp
je
dec
aad
sub
push
out
scas
nop
mov
bound
xor
adc
jmp
add
jecxz
not
xor
sbb
lahf
stc
mov
addr16
mov
fninit
dec
cli
adc
rorl
inc
jns,pt
aaa
cmpsb
mov
add
addr16
test
mov
into
dec
xor
xor
insb
loop
cmp
mov
mov
inc
popl
mov
jp
lods
aaa
movsb
mov
and
shll
jp
paddw
and
insl
or
cmp
xor
adc
or
jl
mov
mov
je
in
sub
and
daa
jno
xor
fisubs
jg
into
lods
test
mov
dec
inc
add
or
mov
and
jg
mov
mov
sbb
in
into
testb
xchg
sbb
icebp
pop
ja
push
dec
lahf
iret
and
insl
lods
shlb
push
sti
sbbb
lcall
dec
cs
mov
repz
inc
imul
pop
mov
mov
jnp
or
leave
testl
in
repz
or
movl
dec
cwtl
insl
scas
or
jne
aaa
jg
jmp
scas
dec
dec
jno
inc
cmpsb
outsb
mov
js
mov
sbb
pop
jl
jno
cmp
and
mov
mov
mov
imul
mov
movb
out
or
mov
jp
aam
shrb
mov
lods
mov
pop
mov
and
mov
lods
cmp
pop
dec
push
dec
shll
leave
hlt
push
pop
inc
sub
rorl
insl
pop
xor
lahf
xor
cmpsl
adc
xlat
push
mov
minps
mov
push
sbb
cmp
and
mov
push
sub
xor
sub
roll
in
pop
loop
add
scas
enter
shlb
repnz
inc
xchg
fsubrp
inc
addr16
adc
hlt
ljmp
cs
sar
inc
mov
loopne
lcall
jmp
fbstp
mov
clc
lods
psadbw
mov
inc
and
dec
add
mov
add
movsb
stos
sbb
nopl
rcrl
jb
dec
imul
sbb
movb
daa
adcb
cmp
pop
sbb
loopne
cmpsl
and
sbb
test
mov
jg
sub
das
mov
sbb
dec
pop
int3
es
jne
xor
pusha
pop
data16
subl
push
xor
jle
pop
icebp
popf
xlat
paddusb
jae
bound
lret
arpl
sub
inc
mov
fsub
lcall
xchg
sbb
inc
sub
jne
cmp
rcrl
and
fmuls
hlt
jns
push
scas
dec
adc
mov
jne
or
or
add
aad
and
aaa
addr16
ja
jbe
lock
lcall
inc
out
pop
mov
dec
adc
lds
insb
add
push
mov
or
orb
mov
and
or
add
fwait
cmp
push
mov
pop
iret
shll
cmc
mov
adc
mov
loopne
aam
mov
mov
xor
adc
pop
pop
popa
sub
scas
pop
sbb
mov
pop
or
dec
lock
repnz
inc
add
loope
lods
jl
sub
cmp
and
loop
xor
outsl
repnz
repnz
cltd
subl
or
pop
out
inc
js
inc
shrb
addr16
mov
sub
cwtl
sbb
and
and
ds
push
mov
push
sub
adc
dec
test
mov
std
int
jg
and
jno
stc
push
pop
gs
jnp
xor
outsl
push
sbb
mov
add
sbb
imul
mov
cmpsl
test
cmpsb
jnp
ja
push
adcl
addb
pop
sbb
and
fiaddl
cmp
sub
and
mov
pop
jb
inc
xor
xchg
mov
xchg
dec
mov
cmc
push
mov
inc
mov
fiadds
xor
mov
out
sahf
cmc
mov
into
sbb
add
ds
xor
add
mov
repnz
popa
mov
rcr
cli
push
fwait
test
xchg
rclb
aam
or
jge
adc
adc
shrl
mov
mull
or
xchg
mov
xchg
scas
int
faddl
add
sbb
roll
sbb
in
mov
lock
movsl
sub
xchg
dec
repnz
xor
lock
test
rcrl
imul
jne
pop
xor
fidivs
in
and
mov
sub
cmp
ret
or
jle
cltd
loop
dec
scas
push
pushf
xor
xchg
mov
pop
scas
outsl
mov
cld
sbb
sti
les
mov
add
test
addr16
pop
lods
scas
xor
cmp
xchg
rorl
cmp
jp
mov
imul
jb
pop
xor
push
pusha
push
lahf
xor
das
jne
rorb
iret
test
mov
movsl
inc
test
out
pusha
add
xchg
add
loope
xchg
sarb
out
push
xor
bound
popf
jecxz
sbb
xor
jne
xorl
xchg
mov
enter
jecxz
lock
push
cmc
mov
fistpl
clc
lret
jl
sahf
dec
cmc
sbb
nop
push
xor
jg
mov
loop
cmp
dec
mov
notb
test
movsl
subl
iret
mov
lods
je
jbe
jp
test
push
outsl
lcall
iret
arpl
aas
call
cmpsb
push
jge
pop
fadd
scas
mov
push
int3
cld
jae
lahf
add
inc
and
ds
or
xchg
or
sub
pop
or
addr16
push
cmp
jg
cmc
jne
push
mov
dec
idivb
inc
jecxz
lea
jp
jnp
imul
mov
std
mov
dec
repz
and
idivl
push
jns
inc
mov
jmp
loope
xchg
sub
jmp
iret
jnp
orl
ljmp
fwait
imull
in
outsl
mov
sarb
push
lds
mov
jo,pn
cmp
dec
fisubrs
or
pop
fildl
das
mov
push
pusha
push
xor
cmp
stc
popf
pusha
pop
push
sti
out
stos
push
cld
jp
jne
inc
mov
lret
mov
mov
imul
loopne
ds
and
call
inc
movsb
aam
lahf
jnp
push
sbb
mov
mov
jnp
sqrtps
mov
inc
jl
int3
inc
outsb
andb
out
clc
lret
mov
sbbb
ja
test
lret
push
sub
inc
xchg
mov
psubb
jp
dec
fildll
sbb
push
das
lods
mov
add
or
rcll
in
xor
or
xchg
in
loope
adc
jmp
mov
sub
mov
jle
popf
and
pop
leave
pop
fwait
jo
lock
cmp
pop
adc
rcl
leave
mov
jmp
pop
jno
dec
aam
pop
jg
sbb
sub
and
ror
add
sbb
inc
pop
movl
fisubrs
xlat
lods
mov
xchg
add
jnp
mov
push
popa
mov
and
mov
add
inc
test
test
xor
out
jg
xor
cwtl
stc
lret
notl
and
arpl
inc
into
fmull
out
mov
cmc
sbb
jne
dec
sbb
or
cmp
dec
jo
jecxz
mov
mov
push
xor
sub
xlat
lahf
inc
gs
jo
stos
cmc
aad
dec
lods
adc
cmc
pop
cmp
call
or
lahf
call
ret
push
decb
popf
shl
insb
stc
jg
cmpsl
popa
dec
cmp
addl
daa
mov
out
fisubs
loop
addr16
cmp
push
test
pop
int
push
jne
sub
int
jae
sbb
loopne
incl
ljmp
fnop
lock
dec
sub
pop
or
push
nop
pop
cmp
or
lret
inc
mov
out
cltd
push
push
push
push
lret
push
adc
xor
call
test
mov
in
mov
mov
mov
int3
std
fiadds
dec
movsl
rcrb
fstl
adc
scas
ret
test
push
in
lock
les
mov
movsl
fs
fdivr
adc
incl
pop
push
dec
clc
cmp
out
lahf
shr
adcb
bound
jno
mov
stos
inc
aas
mov
xchg
adc
nop
dec
jmp
je
sbb
roll
add
sbb
fbld
jg
fsubr
hlt
in
insl
sub
imul
jb
push
push
inc
mov
iret
xchg
or
mov
cmp
cs
mov
sub
mov
dec
xchg
roll
hlt
inc
lahf
mov
out
test
push
mov
pop
cmc
cmpsb
sbb
xchg
xor
jle
rorl
cmp
cmp
mov
or
les
out
adc
outsl
lret
add
mov
mov
and
stos
or
mov
cltd
push
push
lret
jecxz
inc
scas
data16
pop
sbb
sub
xchg
xor
stc
ja
js
mulb
pop
in
lock
out
pop
or
sti
rcrl
rorl
shl
push
cmp
imull
and
pop
or
jb
ja
cmp
push
cmc
test
popf
mov
push
jo
je
sbb
cld
hlt
add
or
jge
cmp
sarb
flds
stos
pop
outsl
cmc
pop
enter
add
stos
add
xchg
xchg
push
dec
push
cmc
mov
cli
mov
pop
test
push
cmp
lret
out
xchg
ljmp
roll
cltd
call
inc
mov
fwait
les
inc
es
movsl
test
or
ds
in
adc
cmp
aaa
cmp
mov
xchg
inc
or
pop
xchg
imul
and
xchg
mov
lahf
jge
ja
es
imul
xor
adc
and
aad
mov
andb
scas
pop
popf
in
inc
xor
aaa
clc
mov
mov
sbb
les
test
into
mov
sub
add
push
cli
cli
dec
daa
es
sub
push
fidivrl
jecxz
jb
xlat
outsb
and
adc
add
push
icebp
jnp
popf
xchg
test
insl
sbb
xor
popf
data16
aam
jp
push
dec
sub
repz
lods
dec
test
lods
fsubrs
mov
fsubrl
xor
or
adc
fbld
lea
dec
out
xchg
jo
loop
out
mov
pop
imul
lret
sub
sub
daa
ds
popa
cs
xor
insl
sbb
sub
rclb
repnz
dec
fcomip
out
mov
jns
shl
inc
test
shll
and
mov
mov
lea
fidivrl
add
xor
mov
or
xor
mov
jne
stos
repnz
mov
mov
fiaddl
mov
stos
adc
arpl
sub
push
sbb
mov
repnz
aaa
addr16
push
pop
jnp
sbb
icebp
or
xor
dec
nop
divl
dec
inc
xor
test
lods
shl
pop
sub
and
sbb
mov
repz
ret
add
adc
sub
shlb
sub
in
jmp
aad
icebp
cld
dec
std
pop
dec
shl
mov
adc
adc
lds
ret
hlt
pop
sub
rorb
in
add
jge
hlt
xor
in
pop
sub
xlat
cmp
xor
les
sbb
push
mov
lret
push
mov
stc
jno
sbb
mov
xor
jecxz
mov
repz
dec
sub
stos
outsl
sbb
sub
jbe
xchg
push
xchg
test
xor
leave
lret
int
adc
int3
cmp
dec
repz
shll
xlat
or
pop
icebp
and
push
xor
ret
cmp
stc
loopne
scas
test
cld
jmp
fwait
jbe
pop
sub
push
jle
cmpsb
xor
int3
popa
sbb
mov
daa
shr
lret
mov
mov
mov
out
jp
or
add
adc
cli
mov
cmpb
mov
test
push
pop
xor
pop
imull
mov
out
out
frstor
les
iret
lods
xchg
add
jno
outsb
iret
push
shll
in
dec
lahf
jl
xor
dec
rolb
inc
ljmp
add
sti
mov
cmpsl
pop
call
test
fstp
mov
pop
add
dec
cwtl
xchg
nop
jnp
jne
nop
xor
test
mov
and
sbb
testb
lods
or
loop
loopne
call
out
xchg
arpl
xchg
cmp
jb
mov
fdivrl
inc
sbb
xor
rorb
cld
dec
ret
mov
sub
lahf
movb
sbb
pop
pop
push
pop
jge
pusha
jmp
mov
lret
push
inc
add
inc
out
sub
arpl
cmpsb
push
aas
xchg
rol
push
mov
mov
mov
inc
inc
cmp
pop
or
push
pop
jne
xchg
test
jne
jmp
aad
push
icebp
jp
jle
jno
xor
fdiv
test
jb
hlt
int
idivl
mov
aaa
lcall
adc
mov
outsb
sub
cmp
inc
add
lods
push
aam
push
stc
push
wbinvd
out
scas
inc
mov
lret
pushf
jecxz
rcr
mov
sbb
jg
rcll
xchg
adc
mov
dec
sbb
leave
mov
lret
xlat
inc
jg
cltd
xor
pop
fs
mul
in
lock
dec
mov
or
cmpsl
lcall
xorl
pop
loop
leave
inc
adc
ret
outsl
mov
mov
pop
pop
push
fdivp
push
push
dec
jmp
sub
mov
pusha
mov
inc
mulps
mov
insb
mov
stos
stos
cli
jge
inc
aad
push
dec
lahf
push
sbb
call
adc
das
bsf
fwait
dec
repz
mulb
andb
je
adc
inc
jge
mov
mov
dec
minps
psubsb
rolb
pop
gs
lods
into
xchg
and
and
repz
dec
addr16
xchg
push
in
pusha
int
inc
fsubl
shrb
sbb
inc
add
xchg
pop
mov
gs
push
scas
es
mov
inc
push
ss
hlt
aas
cmc
adcb
sub
jb
mov
rorl
jnp
add
pop
ds
enter
pop
and
dec
xchg
mov
xor
mov
in
aam
xchg
nop
sbb
dec
fimuls
sbb
xor
sub
jno
jg
scas
or
cmpsl
addb
fs
xlat
aad
add
push
jmp
sbb
fcos
shl
rorl
push
aaa
popa
fisttpl
fcmovu
push
dec
xor
daa
fstpt
in
xorb
inc
sbb
jnp
jp
add
xor
push
inc
or
les
outsb
jle
mov
fcoms
mov
xchg
lds
in
andb
jmp
add
out
push
rcll
movsl
jae
stos
cmpsb
repnz
jl
and
hlt
mov
and
nop
stos
test
xchg
add
icebp
dec
xchg
xchg
dec
fwait
push
sub
lret
out
outsl
test
pop
stos
popa
and
mov
inc
push
mov
shl
jo
lcall
add
mov
or
subl
fsubr
push
add
xchg
xchg
sbb
ss
test
pusha
xlat
xchg
pop
aas
mov
sub
dec
push
les
and
push
and
cwtl
loopne
out
mov
dec
adc
pop
mov
pop
push
sbb
jmp
fwait
or
push
or
test
cmp
or
fisttpl
push
sti
nop
jno
fwait
popa
mov
jnp
mov
dec
add
inc
push
sub
or
jg
test
movsb
rcr
ret
push
xor
addb
add
orb
xchg
cwtl
cmp
js
bound
pushf
sarb
cld
in
bound
cwtl
push
int
aam
and
inc
shl
lret
mov
popa
fstpt
insl
cld
lods
pop
sahf
jg
add
bound
or
out
jecxz
pop
bound
xor
std
movsl
es
jmp
in
popa
outsl
jb
xchg
mov
fmulp
setle
xor
xor
add
ds
shrl
or
pop
jg
xchg
jg
sub
and
aaa
xchg
lods
sbb
popl
enter
mov
pop
lea
addr16
lahf
sub
test
das
mov
stos
sbb
fdivrs
add
dec
mov
lods
add
inc
push
stos
nop
insl
insb
loope
das
cli
pop
lcall
stos
dec
jp
test
popf
mov
in
jecxz
ret
jmp
adc
mov
mov
xchg
inc
mov
mov
faddp
addr16
mov
in
jp
cmpsl
test
fisubl
cmp
es
imul
add
push
or
adc
pop
fwait
lds
sub
ret
subl
cmp
loope
push
popf
sub
inc
ja
adc
std
sub
scas
pop
cmpsl
mov
aam
push
mov
sbb
fwait
xchg
xchg
or
aad
mov
mov
jge
fsts
ret
test
pop
push
std
orb
jae
mov
jbe
mov
push
arpl
jmp
and
push
add
mov
ds
pop
test
cmp
aad
xchg
sbb
movsb
aad
leave
and
jmp
and
and
fadds
xchg
inc
out
aad
sbb
jns
sub
ljmp
sub
adc
dec
sub
mov
xchg
movsb
sub
push
out
mov
cmp
or
mov
hlt
out
js
sub
dec
pop
and
lds
or
repnz
xchg
loop
jge
out
push
xor
cltd
mov
xchg
pop
scas
cmp
xchg
sub
lea
bound
sarl
inc
pop
push
mov
lods
test
enter
add
and
shl
pop
push
xchg
lret
les
mov
jnp
mov
pop
out
adc
movsl
out
mov
push
adc
pop
outsl
addr16
std
mov
pop
aaa
repnz
and
daa
test
pop
adc
sub
repnz
out
js
ljmp
jae
xor
cmp
inc
pop
or
inc
stos
pop
or
shll
xchg
lret
hlt
mov
or
cmpsb
sub
jne
clc
pop
and
adc
insb
mov
ss
pop
xor
xor
nop
and
loop
xor
std
and
insb
dec
pop
pushf
jb
ljmp
pop
shrl
inc
sbb
cmpsb
clc
scas
ja
popa
sbb
das
pusha
repz
sbb
insl
add
mov
pop
and
dec
push
ret
hlt
lcall
add
movsb
cs
cwtl
mul
jns
or
pop
dec
aas
movsl
xchg
xchg
fs
jl
add
mov
mov
int3
cmp
xorl
popl
cltd
stos
inc
and
jmp
in
jno
std
divl
call
sub
cs
push
inc
or
push
mov
cli
adcb
push
shrl
insb
test
dec
ret
pushf
dec
in
arpl
push
test
sub
mov
xlat
fs
sub
gs
rolb
push
pop
cmp
dec
jne
jge
sub
sarl
xchg
lods
decb
pmaxsw
mov
mov
push
mov
mov
lea
subb
popa
xchg
push
or
sbb
es
jp
push
xchg
jo
pop
sub
mov
lods
shll
sbb
cmpsb
jns
loope
jg
inc
cmp
jle
cmc
aas
rorl
lahf
mov
mov
pop
fnstenv
dec
mov
cmp
clc
subb
pop
pusha
jecxz
cmp
add
cmp
push
je
sbb
daa
cltd
pop
movsb
hlt
mov
cld
xchg
xor
imul
and
aad
scas
dec
scas
mov
mov
lock
sub
nop
xchg
dec
push
movlhps
out
inc
xlat
insb
or
or
xchg
lea
stos
push
aas
inc
mov
loope
enter
cmpsl
inc
push
ret
xchg
jmp
and
and
pop
imul
dec
shlb
jae
lds
scas
vmread
ss
loopne
push
xchg
jb
push
mov
pop
fsubl
cmp
mov
rcrb
cmp
fs
repz
jl
inc
sub
pop
test
xor
in
push
sbb
sarb
cmp
incb
scas
cs
outsl
or
mov
or
mov
mov
loope
call
and
xchg
fs
xchg
jp
xor
sub
adc
fisubs
adc
and
call
in
push
popf
jge
fucomi
int3
push
xlat
or
movsl
scas
mov
mov
ds
pop
fs
clc
and
addl
cmc
dec
repz
fcomi
rorl
mov
xor
or
ret
shl
in
rorl
mov
push
mov
in
xor
daa
leave
rolb
inc
scas
loopne
loopne
add
cmp
xorb
xchg
lds
push
adc
push
jl
jne
cs
push
in
cwtl
mov
int3
aaa
popf
fadd
or
adc
xor
pop
push
sbb
movsl
adc
lahf
cmp
and
xchg
dec
mov
mov
cmpsl
push
lods
filds
adc
jns
insl
je
aad
mov
or
cs
jb
sti
mov
jbe
add
cmp
mov
jbe
and
jnp
sub
leave
xlat
dec
mov
mov
andl
mov
adc
mov
and
add
cmpsl
fsin
fiaddl
sti
cltd
fidivs
mov
out
xor
push
add
call
sub
je
push
aaa
add
sub
push
push
cwtl
fnsave
dec
xchg
mov
pcmpgtb
mov
jmp
lock
xchg
cmp
mov
shlb
mov
pop
je
or
fwait
mov
aaa
fisubrs
add
xchg
hlt
push
ret
xchg
push
add
cld
xchg
sti
sbb
push
pusha
fst
adc
mov
pop
add
xchg
pop
imul
xchg
and
push
sub
mov
aas
out
cmp
cs
sbb
fnsave
pop
push
xor
sahf
and
popa
into
pop
pop
lahf
push
mov
sub
roll
clc
jmp
mov
and
push
pop
imul
push
inc
jg
inc
imul
nop
jl
jns
inc
xchg
mov
je
repnz
lret
ret
add
popa
mov
push
sub
mov
mov
jne
mov
lahf
sbb
push
out
xor
xor
mov
mov
mov
addl
mov
testl
adc
leave
stc
mov
add
inc
adc
pop
mov
leave
xchg
jns
sub
repz
bswap
dec
jno
xchg
or
out
cmp
push
test
popa
push
stc
and
xor
mov
arpl
ds
arpl
das
fbstp
ss
pop
insb
xor
mov
nop
dec
mov
sub
xor
lret
sub
rorl
in
mov
xor
fwait
pop
int3
cld
adc
cld
xchg
jo
fsubs
cmp
push
cmp
stos
dec
outsl
cmp
aas
mov
cld
stos
xchg
bswap
fsubr
fstps
xchg
or
inc
bound
into
mov
fdivs
pop
add
lods
and
mov
adc
inc
mov
in
imul
mov
test
mov
pop
lret
lds
lcall
mov
mov
xor
pop
add
rorl
in
push
adc
xchg
cs
xchg
daa
adc
orl
mov
and
mov
sbb
sbb
mov
sarb
aaa
cltd
stos
mov
xor
mov
fs
push
lods
sarl
mov
in
fwait
out
mov
xchg
popf
adc
out
pop
jne
neg
push
push
mov
mov
imul
jns
test
cmp
inc
insb
mov
mov
cld
mov
rolb
or
jmp
xchg
mov
mov
add
kmovw
adc
imul
cmp
push
mov
push
popl
jp
lcall
push
mov
lea
push
test
mov
sti
pushf
aas
out
xor
pop
out
pop
cmovnp
add
hlt
lea
mov
mov
jge
out
fnstenv
adc
mull
mov
sbb
cmpsl
mov
cmp
out
xchg
popa
mov
jbe
or
inc
push
pop
mov
mov
mov
lea
or
enter
fnstenv
mov
mov
adc
stos
add
dec
stos
xchg
scas
outsl
sbb
fdivrl
push
sbb
fcmovu
cmpb
sti
xchg
jecxz
or
outsb
rolb
ret
jmp
fstl
orb
sbb
ljmp
movsl
cld
sbb
in
pop
out
dec
jmp
lcall
ficomps
inc
pop
int3
mov
mov
mov
mov
imul
test
jae
xchg
sub
and
xchg
mov
cltd
neg
jns
cmpsl
rcr
mov
sub
xor
lds
or
in
cld
fsubl
inc
fsts
jge
adc
jp
js
mov
popa
lods
mov
and
jae
out
add
sub
ret
stos
cmc
push
pusha
lcall
mov
pop
sbb
or
push
mov
int
sbb
jl
xchg
sub
pop
clc
pop
in
cmp
lods
lea
and
fadds
enter
inc
mov
mov
pop
es
mov
gs
cmp
sbb
xrelease
das
pop
cmpsl
cmpl
cmpsb
sbb
lret
sub
sbb
or
cltd
push
push
inc
mov
adc
sbb
icebp
imulb
jl
fisubs
sbb
inc
in
imul
cmp
stc
imul
inc
push
shll
or
out
mov
jl
test
dec
scas
rcrb
lret
test
fwait
ror
pop
iret
ret
lods
pop
sub
daa
orl
stos
mov
xchg
subl
jnp
push
mov
xchg
mov
sub
jg
dec
orl
dec
xor
clc
inc
punpckhbw
mov
dec
lods
pop
and
and
ja
pop
sub
jnp
in
adc
movsb
imul
in
xor
aaa
popf
iret
sbb
jecxz
or
mov
mov
insb
lds
xchg
sub
movsb
ret
pop
out
push
adc
xchg
fwait
and
add
ret
test
jmp
and
add
pushf
cmp
cmp
mov
lret
fstpl
jno
sub
test
neg
lret
sbb
call
test
stc
out
insb
aas
jg
jmp
bound
lods
cmpsl
pusha
outsl
movsb
orl
xchg
sub
lret
in
or
hlt
xor
stos
mov
sbb
aam
mov
out
test
rcrb
mov
ret
lds
mov
add
inc
aas
nop
rcrb
roll
sahf
or
test
jle
xlat
jmp
push
addr16
mov
insl
in
jae
pop
shlb
push
je
and
movsb
and
pop
jae
ja
mov
add
sti
stos
es
setle
dec
lock
and
dec
ret
fistpl
mov
sub
jo
push
mov
push
push
or
jae
and
mov
xlat
ja
out
nop
and
insl
repz
hlt
ret
mov
cli
pop
lcall
jge
sub
pop
mov
xchg
mov
xorl
push
mov
sbb
jmp
cmpsl
dec
out
inc
sti
jmp
adc
mov
xlat
or
iret
out
dec
fnstcw
sbb
and
shr
jmp
addr16
not
into
cmp
add
daa
scas
xor
mov
out
xchg
call
ror
rolb
sub
mov
negl
negl
enter
fisttps
or
add
hlt
pushf
test
xchg
fbld
movsl
std
xorb
jp
fcomps
test
in
adc
decb
sub
jmp
xchg
in
stc
jmp
call
mov
adcl
sub
mov
jo
sub
out
leave
mov
dec
imul
dec
mov
mov
call
ja
inc
das
mov
ret
pop
shrb
shl
lock
repnz
adc
xor
dec
stos
fisubrl
jmp
dec
or
outsl
xor
jbe
mov
xor
sbb
dec
cld
mov
xchg
lods
jne
fcomip
mov
adc
rorb
dec
fcom
inc
aam
xchg
loopne
popa
bound
add
jnp
out
hlt
loop
push
aas
lock
pop
xchg
push
mov
or
int
out
hlt
pop
fldt
lods
int
lret
adc
js
push
jno
test
pop
sub
scas
xor
adc
mov
pop
push
pop
push
addr16
pop
sub
sbb
lods
jo
inc
push
and
fisubl
mov
in
dec
cmp
push
ds
jno
loope
and
jo
or
jmp
pop
insl
nop
loop
xchg
aad
rorb
mov
push
js
xor
push
outsb
lea
mov
adc
orl
in
in
mov
into
mov
sar
add
cmp
xchg
mov
pusha
jecxz
cmpsl
add
xchg
adc
fcomi
push
add
mov
imul
xchg
xor
sbb
xchg
out
cs
push
mov
jb
cmp
sbb
and
mov
sahf
or
fists
subl
roll
div
jle
pop
fsubs
xchg
movsb
stos
sub
fsubrs
loope
dec
push
xchg
mov
loope
inc
movsl
popf
sub
inc
lahf
push
fimull
push
imul
cwtl
xchg
in
scas
sub
inc
inc
movb
inc
rcrl
mov
pop
push
adc
sti
or
adc
mov
arpl
mov
or
mov
test
or
dec
lea
out
jne
arpl
sub
sub
loopne
out
mov
cwtl
add
xor
mov
imul
jo
mov
mov
push
movsl
fidivrs
sbb
or
das
pop
pop
inc
daa
push
into
popa
inc
scas
pop
jnp
jmp
movb
push
lcall
sub
xchg
pop
roll
lcall
add
movsb
shrb
out
dec
inc
ret
inc
insb
lret
sarb
adc
xchg
fidivrs
or
pop
out
mov
lods
push
push
stos
inc
mov
xchg
arpl
or
add
fiadds
xorb
movsb
mov
xchg
pop
clc
mov
pop
pop
jnp
int3
cmpsl
xchg
xchg
lret
lea
movsb
push
out
js
mov
jmp
stos
push
pop
mov
call
and
mov
fisubs
sahf
das
push
add
stc
adc
cltd
add
cmc
mov
rcrl
add
aas
nop
inc
dec
and
mov
and
push
xor
in
aad
das
mov
jl
add
and
in
cli
mov
popa
pushf
sub
out
jbe
push
mov
push
adc
and
adc
sub
mov
dec
out
out
push
dec
sbb
repnz
out
sbb
cmpsl
loope
adc
dec
mov
jmp
xchg
sbb
jo
out
ret
sbb
pusha
xor
mov
in
movsb
sub
fmull
sbb
jg
insl
sub
jbe
mov
std
xchg
icebp
pop
inc
jecxz
dec
dec
clc
and
insl
lret
mov
push
je
hlt
fwait
fwait
pusha
popf
pop
inc
mov
shlb
jae
in
cmpsb
sbb
decb
jg
adc
test
out
mov
ljmp
pop
stos
aaa
mov
fistpll
bound
fisubrl
je
lahf
out
cli
adc
inc
cmp
xor
jmp
xchg
xchg
pop
cmp
sbb
sbb
pop
dec
mov
inc
jle
lds
push
test
sbb
arpl
xchg
jo
jnp
dec
mov
fdivp
fsubl
pop
xlat
lods
jnp
ljmp
add
ret
lods
jo
cmp
sub
stos
dec
and
pop
dec
pop
mov
xchg
fcompl
pushf
fmull
pop
loopne
or
adc
ja
wrmsr
add
mov
test
and
pop
sbb
push
xchg
mov
dec
sti
lock
pop
add
loopne
sub
leave
mov
pop
out
movsb
push
sbb
and
out
xchg
fsub
aad
outsl
pop
add
add
fmull
enter
inc
cmpsb
jb
fbld
mov
leave
fsubl
sbb
cltd
cwtl
or
test
je,pt
dec
xor
loope
sub
jnp
push
sar
lret
mov
xor
mov
cmp
mov
xor
bound
ja
test
rolb
insb
std
lahf
jle
mov
rcll
and
mov
cmpsl
inc
xchg
and
test
out
cmp
es
iret
icebp
test
popf
jmp
cmc
shr
stc
ljmp
inc
fiaddl
mov
sbb
jmp
not
mov
xchg
das
pop
stos
sti
sbb
add
movsl
test
mov
inc
in
out
ret
sub
mov
jbe
dec
lods
orl
inc
mov
repnz
xchg
decl
cs
mov
clc
jecxz
mov
xor
aad
pop
and
pop
insb
ja
ret
sub
and
iret
push
adc
into
stos
xchg
and
jp
call
movsb
or
sub
lret
outsb
add
mov
in
and
fs
imul
mov
insb
ret
movsl
lret
fucomi
sbb
hlt
fstpl
inc
outsb
dec
iret
daa
test
addr16
inc
test
loopne
cmpsl
pop
lds
fadds
pushf
ficomps
dec
and
adc
mov
test
mov
add
shlb
jb
adc
xor
jl
js
movsl
fwait
xor
pop
or
jno
loope
add
aaa
inc
sbbb
adc
sbb
cmpsb
stos
push
sub
arpl
sbb
sbb
hlt
inc
addr16
cmp
mov
das
adc
sti
or
xchg
aas
mov
loopne
aas
xor
dec
mov
jnp
es
or
push
jge
push
leave
jbe
mov
pop
xchg
jmp
js
xchg
jecxz
mov
insl
push
push
rolb
push
and
into
aas
cmp
add
mov
or
imul
lock
jp
sub
inc
add
jle
push
daa
mov
xchg
sub
xchg
xchg
adc
sub
mov
popa
or
inc
add
xchg
add
loope
lock
lock
call
xchg
fmul
jmp
jno
adc
sub
xor
mov
setbe
addl
dec
adc
add
pop
push
inc
daa
add
daa
les
ficompl
xchg
out
les
xor
out
enter
jb
mov
pop
cmp
iret
add
dec
repnz
fistl
xchg
push
and
imul
repz
inc
inc
pusha
loope
jmp
push
push
dec
test
sbb
int
pop
bound
icebp
push
dec
cld
push
inc
adc
or
fucomp
mov
push
mov
sarb
sahf
xchg
jle
add
pop
outsl
inc
or
fistps
ljmp
cmpsb
stos
iret
lea
imul
jo
add
movb
mov
add
dec
cli
ficoml
je
mov
test
xor
loopne
push
inc
pop
add
nop
xor
and
imul
lret
and
jbe
push
xlat
push
xor
cmp
sub
add
push
mov
shll
shll
incl
mov
int3
xchg
xor
jo
jb
push
add
imul
stc
xor
test
push
cmpsb
shr
cmpsl
mov
insl
roll
adcb
test
push
mov
xchg
lods
xchg
ret
or
cmp
or
mov
mov
adc
int3
sti
push
add
dec
loopne
decl
out
fsubl
mov
mov
jge
jns
or
sti
shrb
xor
jno
notl
aam
jl
sbb
imull
adc
dec
push
push
dec
idivb
fwait
jne
mov
xchg
scas
pop
pop
and
mov
add
les
int3
fbstp
mov
imul
cmc
out
mov
sbb
leave
mov
mov
lahf
in
dec
sub
dec
mov
cli
cmc
xchg
js
adc
inc
or
mov
lahf
add
fisubl
rorb
ljmp
add
add
jno
cli
xchg
adc
subl
ss
push
inc
pop
pop
or
mov
js
js
and
and
push
mov
xor
xchg
aam
push
cmc
pushf
loopne
adc
loop
mov
ds
inc
and
xchg
iret
xchg
fisubrs
fldt
test
adc
sbb
xchg
cmp
int3
mov
out
out
jmp
clc
push
in
sbb
and
cmp
and
test
cmpsb
cmp
loopne
push
or
sbb
sar
repz
clc
push
test
inc
pop
in
aas
icebp
es
test
or
mov
div
pop
inc
cmpl
ja
movsl
aam
cmp
fbstp
mov
and
lea
in
cmpsl
or
jnp
add
cmc
adc
xchg
mov
sti
and
enter
dec
push
shl
out
adc
fwait
sub
shll
gs
cmp
lret
inc
sahf
add
mov
cmpsl
out
xor
ds
pop
sahf
fcoms
pop
sbb
pop
out
ret
repz
shlb
das
sti
in
pop
ds
xchg
sti
pop
out
push
adc
dec
xor
scas
mov
in
mov
mov
mov
cmp
add
ret
push
xchg
mov
dec
mov
push
sar
jo
push
ja
cmp
dec
shll
and
test
popa
push
enter
shr
pop
sub
filds
xchg
jb
outsl
out
add
sub
sub
jmp
jb
pop
sarl
std
sub
mov
mov
in
lcall
pop
dec
push
sbb
add
fidivrs
fsubl
je
fnsave
hlt
xor
mov
pop
push
pop
adc
call
into
int3
sub
jbe
jl
xchg
cmp
repnz
repz
int3
add
popf
adc
push
iret
adc
out
jl
fwait
xor
jecxz
pop
add
aas
in
ljmp
into
scas
or
jne
jae
push
lock
das
fdivl
fisubrl
iret
mov
repz
add
ja
push
and
mov
and
mov
xchg
pop
shll
jecxz
cmc
int3
stc
push
insl
and
jo
or
test
lock
sbb
loope
mull
cmc
movsl
sub
insl
lock
ja
jno
aaa
pop
sbb
das
mov
std
inc
testb
movb
adcb
aas
popf
push
and
rcrb
xchg
cmp
mov
aam
lds
xor
xor
add
xlat
xchg
push
aam
das
jle
xchg
mov
outsl
push
dec
call
cmp
push
xchg
xchg
cmp
add
lods
xor
xchg
imul
repz
clc
loope
and
es
lahf
popa
movsb
and
adc
fmuls
xlat
fsts
sbb
insl
add
mov
xlat
cmp
inc
lret
sub
clc
insl
inc
das
mov
iret
mov
inc
push
inc
sbb
pop
movnti
cmp
mov
pop
lahf
and
fnstcw
popl
pop
add
std
cmp
add
jl
imul
xchg
inc
push
pop
mov
sub
mov
sbb
push
jp
dec
movsl
push
cli
ja
icebp
fmulp
lock
mov
add
fdivl
jmp
push
pop
and
adc
fidivrs
lods
cmp
daa
dec
lea
inc
push
sbb
lds
push
push
repnz
pushf
shr
xchg
movsb
sbb
arpl
ret
inc
arpl
test
push
fptan
lret
sbb
iret
in
adc
mov
pop
fisttpl
jge
bound
and
adc
pop
push
push
aam
out
lock
jae
sub
test
adc
stc
sbb
mov
or
and
or
icebp
mov
mov
aad
mov
rorl
pop
arpl
pop
aaa
shrl
int
dec
stos
inc
gs
mov
movsl
pop
mov
ljmp
inc
push
cmc
es
mov
jae
imul
pop
in
and
out
lcall
fildl
and
sbb
sbb
push
cmp
gs
in
jg
sub
inc
out
sarl
mov
jbe
in
icebp
hlt
cltd
push
sbb
in
and
jo
and
nop
cmp
and
stos
sti
test
icebp
xchg
repz
mov
dec
inc
xchg
push
scas
jae
adc
push
adcl
add
aam
pop
or
in
lods
and
inc
mov
push
mov
stos
ds
inc
jno
sub
loope
fildll
rcll
mov
lods
cmp
and
leave
lret
ficoms
inc
out
ret
xor
dec
lcall
pop
insb
sub
or
pop
lcall
jb
cmp
shrb
jno
ja
inc
gs
cmpsb
pop
mov
add
fcmovnbe
ljmp
jae
push
stos
push
fcmovnu
sub
xchg
xchg
addr16
mov
mov
lcall
jmp
sub
sbb
not
dec
xor
cwtl
call
shll
popf
outsl
clc
jns
push
cmpsl
mov
sub
cli
adc
movsl
jmp
pop
in
or
and
cmp
cmpsb
insl
add
popa
xchg
sub
icebp
sub
imul
icebp
lret
adc
xor
out
pusha
out
js
mov
ret
cltd
and
das
jno
stc
stos
lret
pop
mov
inc
push
push
sbb
test
mov
cli
mov
int
sbb
popa
test
jae
pop
jo
out
mov
add
icebp
inc
push
mov
fidivl
jge
mov
cmp
lret
test
pop
bound
das
lods
xchg
in
leave
cmc
adc
pop
inc
xchg
pop
adc
in
cmp
stc
out
clc
push
out
stc
test
outsl
push
pop
inc
push
xchg
pop
mov
sub
pop
mov
repnz
dec
outsl
enter
push
xchg
out
inc
cmp
jbe
imul
jg
dec
loop
push
sbb
pop
or
xor
stc
mov
sub
js
lahf
jge
inc
shll
and
shll
dec
insb
loopne
outsb
cltd
test
jle
stos
dec
cs
test
push
mov
mov
jl
mov
sub
pushf
adc
shrb
xor
cmp
xor
rcll
shufps
bound
fldenv
popa
jns
in
lret
pop
sub
jp
testb
jbe
orl
or
repz
cli
jno
gs
sub
bswap
cmc
stc
pusha
adc
mov
or
mov
sbb
and
out
adcb
clc
jne
push
inc
sbb
stos
mov
lods
imul
fdivrs
or
inc
popf
daa
adc
mov
inc
cltd
xor
xchg
or
ficoms
loopne
xchg
sbb
rcll
cld
fdivrs
mov
xchg
pushf
sub
fisttpl
jo
jmp
inc
shr
out
mov
mov
iret
cltd
inc
addr16
xchg
hlt
cmpsl
mov
shll
push
inc
dec
imul
mov
inc
loop
and
sarb
xor
incl
mov
sbb
imul
pop
scas
clc
ret
lahf
outsl
shlb
inc
icebp
xchg
fistps
sub
cmp
out
and
dec
jmp
or
add
mov
sbb
stos
fbstp
pop
mov
mov
push
mov
fbld
loope
xchg
push
jmp
out
pop
pop
push
out
test
call
mov
out
dec
addr16
or
mov
andl
pop
pop
dec
je
sbb
inc
xchg
das
fisubs
push
pop
jp
pop
jecxz
out
and
imul
cltd
adc
mov
pop
cwtl
repz
inc
push
inc
push
xchg
pop
dec
addl
fidivl
pop
loop
sbb
roll
sbb
pop
stos
adc
loope
mov
cmpsl
mov
add
mov
jl
jne
pusha
jae
aam
int3
addr16
cmp
xor
cld
adc
stc
cltd
pop
xor
scas
fisttps
adc
lock
mov
sub
aaa
pop
xchg
push
cmp
scas
push
inc
cmp
fidivl
pop
test
stc
setp
mov
mov
push
test
nop
insl
mov
xor
jmp
push
push
and
mov
insb
shl
fs
out
jns
enter
cmp
icebp
and
mov
mov
bound
data16
dec
xchg
adc
ret
sub
ja
adc
xor
mov
fcoms
and
xchg
insb
adc
pop
mov
or
jecxz
fs
test
and
iret
xor
iret
aas
in
scas
push
fisttps
mov
mov
pop
cwtl
loop
fwait
push
lret
push
sbb
sub
decb
push
sbb
cmp
add
mov
jl
lock
pop
dec
adc
mov
mov
iret
jne
addr16
push
or
aam
jb
fimuls
vpaddusb
add
and
push
test
or
pushf
xchg
leave
lret
mov
into
dec
add
mov
mov
cmp
mov
out
or
add
push
jge
out
js
mov
daa
jl
test
shrl
mov
inc
ds
xchg
outsb
repz
cmp
xchg
lret
loop
pop
stos
cmp
pop
mov
xchg
and
xlat
dec
and
in
push
hlt
sarl
jne
das
and
pop
adc
xchg
cmp
mov
sbb
gs
push
clc
dec
mov
pop
cld
inc
sbb
js
lock
cmp
mov
push
or
sub
lret
lahf
mov
subb
sub
cli
and
sbb
sub
xor
std
out
xchg
xor
and
jp
pop
fistpl
or
push
bound
jl
jae
push
and
outsl
push
xor
cmc
pslld
test
subl
stos
sub
push
jecxz
and
outsb
sbb
out
or
cmp
call
cld
or
lods
push
jb
fwait
rolb
mov
stos
fs
test
mov
aaa
push
push
mov
jae
scas
faddl
leave
ss
out
or
stos
pop
sbb
jmp
xchg
mov
in
pop
test
add
out
out
mov
fs
push
aam
in
sbb
mov
pop
push
imul
dec
loope
sbb
add
cltd
xor
inc
adc
jns
sub
js
dec
stc
dec
mov
mov
shl
cmc
xor
in
lock
and
and
int
movsb
addr16
pop
cmp
dec
cld
add
xchg
dec
jge
dec
dec
sete
push
repnz
negb
mov
ja
cmpsb
fisttpl
pop
in
sub
std
aad
sbb
iret
mov
ror
movsb
inc
subl
sbb
adc
sub
out
push
and
xchg
fdivrs
sbbl
sub
movsl
out
dec
inc
loope
xchg
sbb
enter
mov
aaa
mov
vpsraw
inc
dec
push
mov
mov
lods
cli
push
adc
aaa
rcl
adc
lret
cmp
hlt
insb
inc
xor
or
mov
arpl
in
or
xor
pop
push
shr
add
push
or
mov
mov
jne
jae
push
xchg
cmpsb
pop
and
inc
test
test
shll
cmp
loop
cmpsl
xor
pop
fsubs
stos
inc
test
ds
push
aam
sub
rolb
loop
push
idivb
mov
stc
das
je
pusha
mov
jbe
shlb
push
add
or
sti
pop
mov
add
xchg
mov
lcall
sub
mov
pop
mov
mov
mov
rorb
sub
adc
repz
insl
lret
push
out
test
cmp
int
insl
jbe
movsl
sbb
fs
cltd
ret
mov
jecxz
bound
xor
xchg
push
jbe
xchg
shl
popf
shrl
pop
mov
xchg
pop
shrl
loop
mov
in
mov
pop
pop
inc
sbb
enter
decl
push
rep
sub
push
push
pop
ss
divl
in
insl
xchg
add
in
enter
pusha
xchg
xchg
add
test
mov
dec
pop
mov
sub
cmp
pop
xor
loope
sbb
ja
adc
inc
adc
and
adc
mov
push
lds
rcrl
mov
push
pop
inc
inc
jae
fwait
and
stc
mov
in
xor
pop
sbb
mov
fldt
push
test
lock
ss
js
xlat
jns
lret
and
daa
fstpl
movsb
outsb
mov
pop
in
insl
pop
mov
push
or
lods
sub
mov
repz
repnz
shr
xchg
push
cmp
mov
lock
in
cmpsb
mov
adc
mov
repz
mov
adc
add
or
je
xchg
adc
stc
fldt
decl
push
mov
test
pop
xor
mov
lods
pop
add
lea
lds
aad
sti
push
dec
rol
sahf
and
inc
loopne
inc
jl
emms
call
pop
ds
insb
sar
mov
je
jmp
push
in
lds
lret
mov
add
scas
fs
xchg
shll
dec
xor
inc
in
pop
fistpll
fs
stos
inc
xchg
lcall
jns
cmpsl
mov
cli
inc
ja
enter
pop
add
fwait
push
cmc
mov
cmpb
add
mov
andb
popf
test
cmpsl
aaa
and
push
fndisi(8087
and
shrl
cwtl
lret
notl
xchg
dec
mov
sub
nop
xor
movsl
jo
mov
ja
pop
int
pop
adc
sbb
push
pop
pop
cmp
jp
cmp
xor
jg
insb
jge
pop
xorb
inc
xlat
nop
pop
mov
push
xchg
mov
in
mov
shrl
das
sub
push
adc
repz
inc
xchg
fdivl
adc
out
push
adc
mov
das
jg
inc
jmp
fidivrl
push
stc
push
cld
pop
jg
mov
aad
aam
clc
sub
ja
jmp
out
mov
stos
adc
mov
insb
mov
mov
pop
add
outsb
daa
mov
sbb
dec
add
jp
imulb
scas
sub
push
hlt
stc
add
push
mov
and
jg
int3
lods
push
sahf
push
imul
sbb
sbb
push
jns
jae
sahf
push
mov
xchg
sbb
lret
dec
std
insl
xchg
jmp
ror
aam
hlt
mov
jecxz
add
mov
repz
inc
rcr
sub
jbe
xchg
mov
ds
push
cli
jle
inc
hlt
dec
loope
push
sub
sub
outsb
jmp
jns
sbb
fcmovnb
xor
dec
imul
sbb
mov
sub
inc
loopne
xor
mov
cli
mov
out
xor
pop
or
aaa
xchg
imul
test
movsb
xlat
jge
xchg
xchg
mov
sbbb
mov
mov
inc
repnz
andb
adcl
aam
leave
pop
pop
loopne
and
mov
icebp
fcomi
gs
nop
add
les
mov
in
bound
xchg
and
loop
jb
xor
hlt
xor
mov
jbe
push
iret
fildll
lods
ret
and
fsubrl
add
dec
rorl
inc
test
jl
cmp
jbe
inc
std
mov
cli
ja
lock
loop
movsl
rolb
int
add
aad
push
mov
dec
cmpsl
sbb
mov
adc
cwtl
adc
gs
sahf
jmp
lahf
mov
push
int
out
shlb
mov
daa
mov
popa
push
inc
sbb
lds
das
notl
std
jp
outsb
dec
pop
fldl
scas
in
outsb
out
dec
jge
push
bound
pop
sub
or
xchg
push
fistps
xchg
imul
pop
fldt
ret
stos
mov
fstps
ret
sbb
push
in
mov
insl
add
stos
aam
movsl
js
loopne
out
sbb
cmpsl
dec
sub
loopne
inc
inc
test
xor
hlt
lods
xor
rcrb
data16
mov
pop
cs
dec
push
popa
cltd
cmp
jg
and
cmp
and
hlt
iret
jecxz
or
out
shlb
jno
int
mov
sbb
sub
je
loop
pop
cmp
and
pop
pushf
jmp
dec
int
in
frstor
cmp
mov
dec
fcompl
push
iret
ds
addr16
aam
jmp
shll
lods
stos
dec
fwait
jbe
push
test
in
fldcw
cmp
jno
push
xchg
inc
mov
cli
std
inc
adc
or
loope
hlt
or
dec
mov
push
bound
sub
xlat
js
xor
push
push
sbb
cmp
cld
in
sahf
into
push
repz
fisubs
cs
jns
xchg
push
inc
cwtl
push
xchg
xchg
pop
lret
dec
hlt
cmp
arpl
flds
mov
jno
test
repz
sbb
nop
adc
sbb
cmp
push
addl
mov
repnz
cmpsl
add
pop
data16
mov
mov
push
fwait
push
and
mov
xchg
inc
mov
rolb
xchg
insb
inc
clc
jecxz
pop
jnp
add
xchg
xchg
push
shlb
and
cmp
sub
aas
xor
pop
and
sub
clc
repnz
mov
fsubrs
insb
scas
sbb
or
lods
mov
sub
test
fcoms
daa
push
mov
ss
out
fs
mov
int3
jge
addr16
ljmp
stos
xchg
push
mov
flds
in
pop
lret
mov
cmp
xchg
jae
xlat
sbb
rcl
mov
cmpsl
push
out
out
and
or
xor
xchg
xor
inc
or
fs
subl
stos
pop
leave
jnp
sahf
shll
aam
push
addr16
test
test
iret
jbe
stos
popf
pop
daa
sub
mov
aaa
and
jne
inc
iret
jmp
leave
stos
cltd
lcall
gs
push
sub
pop
aaa
and
mov
mov
and
pop
test
mov
fwait
ret
adc
std
std
jp
leave
sub
clc
xchg
cmp
cmpsl
js
in
inc
les
mov
xlat
xchg
std
loop
lock
daa
mov
or
std
lods
js
enter
rolb
cmp
pop
nop
ror
sahf
lcall
jl
cmp
in
subl
sbb
sub
pop
mov
push
out
adc
jno
cwtl
pop
cmp
shrl
scas
scas
push
addr16
rcr
out
mov
dec
sub
xor
xor
and
mov
movhps
bnd
in
int
insl
sub
into
adc
aas
inc
inc
into
jo
xor
pop
cltd
pop
imul
nop
mov
leave
inc
stos
popa
sub
add
int3
dec
xchg
fcmovnbe
jno
inc
ja
lcall
ds
stos
rorb
inc
shrb
xchg
xor
nop
cmc
outsb
ds
pop
cmp
repnz
mov
mov
icebp
mov
movsb
mov
out
test
jb
and
dec
pop
jl
cld
fsub
fmull
jne
fs
ljmp
pusha
lret
and
jns
push
push
pop
iret
cltd
arpl
lret
mov
sti
sbb
adc
nop
inc
jb
jl
sbb
jmp
js
dec
dec
dec
inc
dec
adc
jne
popf
dec
jp
cwtl
push
adc
and
push
xlat
insb
jecxz
sbb
stos
in
jmp
leave
mov
sbb
out
or
fistps
jne
add
sbb
jae
pop
into
movsb
cmp
add
jl
jne
iret
pushf
push
scas
cmpsb
inc
aam
fnsave
test
adc
jg
pop
cmp
imulb
xor
hlt
sbb
or
mov
push
or
mov
aas
xor
add
add
mov
xor
inc
icebp
scas
cmp
test
dec
arpl
push
xchg
mov
pushw
movsl
mov
adc
mov
dec
nop
mov
cltd
popf
xchg
sbbb
mov
adcb
jge
inc
and
dec
inc
loopne
mov
mov
sarl
pop
loope
xchg
dec
inc
inc
mov
pop
sub
and
ficoms
pop
mov
mov
cmp
dec
ret
push
mov
jo
jge
jnp
jmp
add
and
pop
or
rol
sbb
mov
pop
mov
sbb
cli
cmp
jae
scas
aad
sub
cmpsb
pushf
sbb
mov
cmp
movsb
shll
pop
or
icebp
dec
fstps
imul
pop
rcrl
ds
addl
jmp
and
mov
xorb
enter
xchg
lret
outsl
cli
in
shr
push
movsb
adc
mov
in
push
imul
ret
js
dec
inc
loope
pushw
mov
in
imul
pop
push
imul
pop
pop
inc
jo
xlat
das
push
pop
fdivr
push
mov
pop
add
cmp
fldt
mov
push
cmpb
adc
jne
inc
jg
sub
add
mov
popf
xchg
sti
pop
mov
adc
mov
lods
insl
divb
imul
xor
xor
adc
mov
mov
mov
ret
sbb
mov
sub
xchg
sbb
inc
icebp
mov
xor
into
push
mov
popf
cmp
xchg
adc
js
cmpsb
pmullw
pop
test
add
cmp
sub
mov
lcall
adc
xchg
push
arpl
and
aaa
cltd
ret
pop
stos
push
xchg
jne
pop
pop
sbb
pusha
inc
jae
cmpsb
js
subb
fsts
adc
xor
and
sub
sbb
xchg
xchg
push
loope
cmpsl
test
inc
push
adc
aad
outsl
addb
dec
sbb
out
movsb
stos
shlb
add
sub
mov
fucomip
daa
jae
ja
push
xor
sbb
and
pushf
dec
mov
lds
insb
addr16
outsb
imul
xor
mov
frstor
adc
cmp
jbe
movsl
aas
push
shr
and
push
fisttpl
jmp
fbld
sbb
inc
adc
daa
mov
xchg
lods
mov
sbb
lahf
rcrb
push
jle
and
clc
mov
aas
rclb
mov
cmp
jl
decb
aas
jb
mov
lret
push
mov
cwtl
outsl
ljmp
fisubrl
adc
jbe
dec
jp
push
mov
mov
hlt
sub
push
adc
dec
mov
adc
xchg
cmp
add
outsl
iret
imul
outsw
mov
jecxz
jnp
arpl
movsl
repz
ss
inc
sbb
cmp
int3
imul
push
push
cmp
jecxz
adc
inc
add
or
xchg
adc
jl
xchg
cmp
sbb
push
mov
stos
adc
test
sub
lods
jmp
push
mov
jbe
inc
push
adc
mov
or
ljmp
mov
jmp
mov
ret
cld
and
xchg
mov
out
add
pop
jmp
testl
push
xchg
push
in
sbb
cmp
cmc
push
push
pop
insb
mov
aaa
inc
pop
rol
push
xor
push
cmp
push
xchg
xorl
scas
mov
push
je
into
fdivr
popf
nop
incb
pop
xchg
cmpsl
mov
jg
sub
outsb
sbb
sub
bnd
lods
sbb
popa
add
out
jne
ljmp
jge
pushf
adc
mov
or
fsubl
sahf
repz
mov
das
add
add
mov
cmp
pop
shl
adc
in
pop
sub
dec
insb
cwtl
rolb
inc
js
push
repnz
add
add
push
mov
xchg
das
sub
add
xor
call
push
in
mov
and
cmp
loop
repz
and
sbb
out
into
jg
rcrl
sbb
inc
mov
ret
or
sbbb
push
push
inc
cmp
lea
repz
jns
je
mov
pop
add
sarl
jbe
pop
fstl
xchg
int
subb
mov
mov
or
jge
xor
shll
aaa
dec
repnz
pop
scas
push
pop
enter
xchg
jne
sbb
and
lods
push
jge
out
loope
fs
in
mov
stc
and
xor
in
push
mov
out
int
sti
repz
movsl
fidivrl
and
insl
jp
fs
andb
rolb
iret
int
sbb
lahf
lds
in
xchg
cmp
fmull
and
xor
inc
js
shrl
les
or
cmpsl
notb
xchg
push
and
push
in
shlb
or
shrb
nop
xor
cmp
pop
sub
adc
aad
cld
xor
jl
in
add
popa
filds
mov
popf
lcall
and
add
push
dec
mov
fiadds
cmpsb
je
cli
or
out
lea
pop
in
mov
cmpsb
lea
push
aad
cmp
add
pop
lcall
jne
push
in
in
xchg
dec
je
aam
dec
add
mov
xchg
push
pop
pop
test
xchg
int
ret
mov
pop
add
mov
aam
lods
dec
fnstcw
mov
ljmp
pop
jp
cwtl
aaa
lock
pop
or
in
mov
sbb
inc
jns
enter
fcompl
pop
inc
push
inc
js
iret
inc
or
pop
mov
enter
push
jle
sub
xchg
daa
xlat
adc
jns
pop
pusha
sbb
cmp
and
lea
subb
iret
iret
push
movsb
or
dec
outsb
mov
arpl
add
jbe
outsl
outsl
mov
jmp
test
outsb
stos
or
add
inc
xor
fistpll
lods
inc
loop
push
jecxz
jg
enter
mov
mov
pop
and
xorb
test
jecxz
das
xchg
mov
add
andl
push
and
and
iret
push
sbb
lahf
inc
xor
lds
fnstcw
das
repnz
les
rcll
or
mov
movsb
push
mov
movsl
or
fstp
enter
pop
mov
pushf
lds
mov
lods
js
xchg
div
jl
addr16
fcomps
adc
inc
ja
mov
jb
mov
iret
aas
jl
sahf
sti
lods
or
inc
call
inc
test
aad
cs
jp
sub
lret
lds
mov
add
stos
sbb
adc
jne
jle
dec
stos
mov
mov
xlat
pop
mov
sbb
arpl
mov
pop
xchg
mov
inc
into
aas
ds
rclb
outsb
pop
test
mov
pop
jbe
enter
dec
xlat
je
pop
xchg
sub
push
mov
jg
push
outsl
data16
fsubrs
mov
test
cmpb
cld
cmp
cmc
pop
xor
lret
or
push
ss
cmc
cmpsb
nop
sbb
push
loope
lret
popf
cs
adc
jecxz
loope
inc
out
mov
xor
xchg
cmp
pop
fnsave
inc
sti
mov
adc
and
cmc
adc
jns
dec
jns
ret
mov
mov
out
jo
or
cld
loop
xchg
ja
mov
test
push
or
and
bswap
mov
mov
mov
mov
leave
idivl
push
mov
repnz
popa
fsts
stos
test
add
xchg
cmp
adc
icebp
cmpb
inc
sub
mov
sbb
add
pop
xchg
mov
xchg
inc
xor
js
xchg
loop
je
int3
ss
xchg
inc
lcall
jae
mov
into
xor
out
hlt
repz
fists
jle
stos
mov
pop
adc
mov
add
cmp
dec
icebp
fxam
out
fdivr
stos
stos
lret
inc
es
add
orb
into
adc
test
scas
mov
sar
dec
int3
hlt
stos
out
inc
iret
mov
gs
xor
imul
pushf
arpl
mov
adc
mov
lds
aad
add
pop
push
pop
cmp
orl
and
scas
mov
sub
cmc
in
cli
js
inc
jecxz
push
lods
sti
adc
nop
cli
scas
sbb
fldcw
pop
jbe
pop
fcoml
test
int3
mov
inc
iret
loop
or
xor
inc
notb
pop
cmp
push
mov
aaa
cli
repz
popf
scas
push
xchg
fiaddl
rcr
xor
and
fimuls
mov
enter
scas
ljmp
int
dec
movsb
enter
aad
imul
cmc
xor
jbe
fwait
mov
fisubrs
inc
popf
out
shlb
mov
rorb
pusha
mov
or
jl
std
sub
jge
enter
adc
pop
aad
dec
xor
ret
test
and
pop
gs
movsb
mov
jns
mov
dec
sarb
stos
imul
sub
cmp
mov
cmc
daa
xor
stc
mov
pop
data16
fcmovnbe
cwtl
push
addr16
insl
fcompl
es
add
add
sbb
je
mov
lret
cmp
jns
push
sub
cmpsb
insb
leave
jle
pop
or
push
and
ss
sub
outsb
xor
jns
clc
xchg
aas
inc
sub
cmp
xor
dec
pop
rcrl
cli
jne
pushf
stos
call
insb
mov
xchg
das
xor
cli
ljmp
xor
mov
add
xor
xchg
sbb
pand
dec
cmp
sub
outsb
out
sub
inc
loopne
sbb
hlt
add
pop
mov
out
addr16
and
cmp
sti
mov
pop
out
les
cwtl
xor
mov
cmpsl
data16
pop
or
nop
and
int
inc
in
push
jecxz
inc
rcll
faddl
push
int3
mov
dec
add
fidivrl
xor
mov
lret
jo
pop
cwtl
pusha
sbb
xor
int
xchg
mov
imul
out
jne
call
mov
adcl
enter
sbb
mov
rcrb
orl
jp
push
mov
loopne
dec
lahf
jl
inc
sub
and
test
add
gs
xchg
adc
lret
mov
mov
outsl
mov
and
ret
fnstenv
popa
xchg
movsb
mov
insb
icebp
xchg
lea
fbld
adc
pop
pusha
adc
adc
xor
and
jb
popf
ss
icebp
in
pop
sbb
adc
push
sbb
pushf
cmp
outsl
lea
mov
rclb
add
lahf
adc
in
jnp
add
loop
add
rcll
push
loop
sub
mov
push
or
cmp
xor
adc
pop
sbb
mov
into
mov
sbb
pop
test
xlat
pop
and
cmp
incl
addb
push
mov
sub
fwait
sbb
inc
stos
inc
shlb
or
xor
add
add
icebp
mov
jbe,pn
lock
add
lods
jbe
jae
and
outsl
dec
sub
sbb
jns
into
mov
push
enter
adc
cld
push
out
insl
jae
adc
jo
fstps
push
and
and
and
adc
adc
jnp
lret
addr16
cltd
mov
fcoml
fistpl
jecxz
icebp
dec
push
adc
mov
add
sbb
pushf
ss
stc
adc
jno
fmul
idiv
test
sbb
push
inc
xchg
push
stos
aaa
lea
sbb
adc
in
jl
mov
mov
push
xchg
shlb
push
idivb
inc
outsl
sbbb
mov
adc
inc
inc
dec
and
mov
jbe
sub
fsubs
sbb
enter
test
movsl
sub
mov
mov
jmp
xor
mov
fsub
push
add
xor
daa
mov
adcb
adc
ds
sbb
push
loope
add
jns
icebp
outsb
inc
das
push
mov
sahf
or
mov
fdivs
xchg
sub
push
add
bound
stos
lcall
push
popf
mov
xor
fnstenv
lahf
fisubs
adc
adc
xchg
cmp
movsl
bound
jb
sbb
clc
and
pop
les
push
pop
jp
and
jns
sarl
xchg
jno
push
sahf
mov
outsl
rcl
roll
lods
jle
pop
inc
cltd
push
testl
xor
jns
mov
sub
push
in
fcomps
cli
test
push
ss
add
fisubrl
adc
or
sbb
faddp
jp
sar
imul
cmpsb
push
push
jb
pop
cmp
mov
test
jno
jnp
out
xor
add
test
movsb
dec
dec
fiadds
fimuls
pop
shr
jnp
jge
js
cmpsl
mov
ss
xchg
sub
bswap
cmp
pop
sub
jne
stos
repz
fnsave
shrb
sub
ljmp
sti
sbb
outsl
fsubs
push
pushf
outsl
inc
stc
or
cmp
push
fidivs
add
mov
and
mov
cmp
add
xor
push
dec
scas
std
loope
in
test
xlat
das
out
or
mov
nop
adc
xor
int
call
xchg
test
orb
les
andl
pop
dec
jnp
inc
mov
icebp
mov
ret
shrl
push
int
test
dec
lcall
in
faddp
repnz
fld
sahf
andb
mov
sub
sbb
sti
addb
xchg
arpl
ret
and
mov
pushf
stos
jne
pop
call
cmp
mov
jmp
int
clc
sub
add
dec
int3
jo
xchg
pop
in
or
push
cld
adc
loop
add
loope
sub
sub
push
je
mov
adc
and
mov
mov
dec
lcall
fs
adc
shll
mov
adc
cmpsb
out
insb
inc
mov
movsl
fisubrl
loope
jge
cs
add
sbb
fdiv
inc
nop
mov
mov
sub
xchg
pop
cltd
ja
out
test
in
ficompl
hlt
rol
lds
stos
add
fdivrs
xor
dec
das
dec
ficompl
sub
pop
cmc
enter
or
addl
dec
cld
adc
enter
sar
xchg
xchg
rcrl
das
xchg
sbb
mov
rclb
into
sbb
lods
mov
xchg
addr16
fsubl
ja,pt
adc
lock
sub
and
mov
jp
dec
arpl
lcall
xlat
inc
ret
movsl
andb
roll
int3
sahf
jge
ds
cwtl
repz
pop
in
sbb
add
lds
xor
mov
xchg
sbb
push
pop
and
lods
imul
and
mov
fisubl
fsub
xchg
dec
sti
cmp
cwtl
jmp
jge
or
sar
imul
insl
xchg
scas
sub
cmp
push
xlat
cmc
adc
popf
shrb
mov
sub
sbb
or
xchg
lds
filds
movsb
sub
sbb
filds
leave
jp
jl
xchg
add
call
mov
icebp
push
dec
mov
call
mov
and
scas
mov
mov
movsb
in
push
inc
icebp
inc
and
loope
pop
lods
inc
or
lcall
adc
je
or
inc
stos
out
xchg
mov
or
mov
scas
es
addb
jae
sub
jne
push
jl
dec
jno
pusha
addb
test
pop
aad
scas
pop
pop
shlb
jmp
add
rcl
xchg
or
xchg
and
push
push
or
enter
jmp
or
and
into
sub
mov
lahf
outsb
mov
jbe
inc
sbb
sbb
std
cld
sbb
les
iret
jecxz
mov
mov
add
sbb
pop
scas
mov
int
scas
shrl
push
add
es
add
cmpb
mov
mov
jp
in
stos
mov
pop
and
and
aam
lods
mov
xor
adc
xlat
lods
in
arpl
push
add
fidivrl
call
adc
arpl
pop
addr16
cmpl
test
loop
mov
in
cli
test
repnz
adc
cmpsb
out
rcrb
das
mov
cmp
shr
inc
addr16
in
mov
ficoml
inc
mov
push
imul
cltd
pmulhw
inc
es
cli
inc
lcall
xor
mov
mov
jbe
in
imul
and
mov
notb
aam
out
jo
sbb
aaa
pop
sti
adc
aad
fwait
mov
lcall
rcrb
hlt
add
adc
pop
rolb
mov
and
scas
loopne
cmp
out
and
cmp
test
sbb
enter
adc
or
jo
stos
mov
shrb
xchg
or
mov
mov
in
fs
and
ret
or
inc
sub
jns
inc
ss
pop
nop
movb
ja
repz
cmp
fildl
fnstenv
addb
gs
inc
add
data16
pusha
add
out
dec
js
xor
in
inc
adc
and
sub
jmp
add
in
ss
xchg
movsl
inc
adc
aaa
scas
subb
jecxz
fcom
out
gs
xchg
in
sbb
and
mov
fsubrs
sbb
loopne
sub
inc
cltd
jmp
test
movsb
mov
mov
add
fisubs
sbb
imul
sbb
xchg
dec
enter
les
mov
xchg
cmp
mov
pop
pop
push
mov
lock
pop
aam
inc
stos
leave
aas
fsubp
bound
ffreep
pop
js
shlb
loopne
dec
lock
mov
faddl
dec
dec
addr16
in
inc
or
pop
pusha
sub
stos
fs
les
xor
sub
mov
aaa
mov
nop
scas
shll
inc
fs
dec
pop
push
mov
mov
mov
push
rcrl
mov
mov
mov
dec
sbb
rolw
or
jo
aaa
es
scas
pushf
xor
cmc
loopne
enter
xlat
clc
sti
or
cmc
mov
jae
xchg
jg
arpl
xor
add
movb
dec
sub
jbe
push
or
cmp
fisubl
jmp
gs
mov
mov
mov
or
enter
add
xchg
repnz
nop
add
enter
pop
mov
aas
sub
int
outsb
cwtl
dec
push
std
inc
iret
mov
xchg
in
mov
test
xchg
imul
xchg
push
loopne
je
or
out
in
mov
rorl
leave
sti
mov
and
test
push
push
xchg
repz
nop
pop
xchg
mov
aad
cmp
mov
dec
andl
inc
jmp
dec
cmp
lea
inc
imul
hlt
xchg
sbb
int
mov
sbb
movsl
pop
fidivrl
cmp
int
test
xchg
jnp
pusha
mov
test
add
add
cs
mov
add
ljmp
sub
xchg
pop
ror
sbb
dec
mov
cmp
in
jge
sar
dec
xor
mov
jb
in
ret
imul
mov
outsl
cmp
inc
mov
xchg
push
mov
pop
in
mov
mov
iret
pop
pop
sub
hlt
mov
popf
repnz
loopne
xor
jns
inc
inc
out
sbb
imul
dec
sbb
or
enter
lds
push
push
and
pop
lcall
xchg
push
and
or
faddl
sarb
cli
clc
push
xor
arpl
test
test
cmp
or
push
jl
enter
jmp
mov
or
mov
pop
stos
and
fs
sbb
xchg
push
imul
and
jo
lcall
mov
outsb
push
sub
test
and
testl
or
push
std
cli
xor
and
adc
mov
push
push
test
aas
das
xchg
jae
jmp
push
movsb
iret
push
or
mov
cmp
mov
pop
outsl
cmp
dec
lods
push
mov
clc
or
adc
xor
add
iret
and
insb
dec
xchg
es
lahf
cld
push
push
cmpsl
bswap
push
mov
rorb
mov
pop
push
clc
mov
pop
lds
dec
mov
leave
adc
cmp
fadds
add
cld
inc
mov
sub
adc
pop
add
sub
xchg
in
imull
movsb
mov
push
xor
scas
stos
imul
and
stos
jecxz
cmpsl
ja
pusha
mov
pop
push
jns
inc
cmp
js
pop
insb
pop
pop
mov
jle
xchg
outsb
das
cmpsl
or
or
jne
sub
sub
jecxz
mov
stos
xchg
notb
push
cmp
into
fucom
xor
aaa
mov
fldt
lret
nop
jbe
pusha
cs
pop
xor
jg
mulb
inc
aaa
mov
outsl
sti
add
pop
ljmp
or
adc
cld
jno
pop
out
and
mov
and
rcl
fcmovb
push
sti
test
scas
mov
fsub
rcrb
es
aas
in
inc
pop
inc
sbbb
cmp
dec
mov
adc
sbb
test
push
inc
pop
pop
sub
jns
enter
nop
mov
pop
or
out
lahf
cmpsb
pop
xchg
pop
enter
and
std
lahf
movsl
fimull
sbb
scas
sbb
or
outsl
aam
lods
mov
xor
out
ja
pop
push
pushf
sub
jb
lock
push
pushf
or
inc
xor
aam
gs
inc
mov
adc
xorl
mov
xchg
mov
lahf
add
leave
lea
or
cmp
sbb
xlat
jns
repnz
in
aaa
pop
popf
movsb
in
sbb
push
mov
mov
shl
cwtl
sbb
popf
cmp
data16
xchg
jge
mov
or
jns
pusha
out
or
push
fimuls
add
aaa
negb
pop
rclb
xor
mov
dec
or
test
xchg
icebp
loopne
mov
enter
jno
jno
call
in
inc
inc
cwtl
push
push
xchg
ds
xchg
mov
add
and
fs
pop
sub
pop
bound
push
cmp
push
push
xor
into
clc
pop
in
mov
cmp
jecxz
xor
cmpsl
cmp
gs
xchg
scas
mov
mov
mov
hlt
jmp
adc
data16
jno
xor
insl
push
inc
imul
into
lds
or
xchg
stos
sbb
mov
fwait
icebp
fsubr
pushf
sahf
push
mov
orl
pop
fldt
lock
push
mov
imul
or
iret
mov
data16
and
imul
fmuls
push
repz
stc
test
aam
js
dec
add
pop
movsl
push
ljmp
les
inc
mov
mov
push
mov
mov
daa
mov
dec
out
or
jmp
cmp
shlb
mov
hlt
xor
rorb
sub
inc
dec
sarb
sub
or
scas
jnp
imul
aad
cmc
out
sub
das
add
jmp
test
inc
jl
sub
xabort
jle
mov
rcrl
add
arpl
pushf
pusha
dec
cmpsl
mov
mov
push
add
loop
sub
cmp
aad
sbbl
test
inc
sbb
scas
mov
stos
jecxz
add
aaa
and
lahf
js
inc
xchg
xchg
subl
pop
add
call
inc
inc
mov
push
dec
int
pop
push
mov
imul
xlat
cmovbe
testl
movsl
je
lcall
outsb
jno
repz
push
repz
xchg
repz
add
or
push
sub
and
insb
call
lods
dec
adc
sub
push
popa
sub
mov
jl
add
jg
xor
pop
lock
nop
push
mov
mul
loopne
lahf
jmp
sbb
mov
inc
dec
cld
jns
outsb
inc
push
jns
popa
mov
insl
sub
rolb
std
aad
or
add
push
lcall
pusha
pop
sub
cli
idivb
test
fdivl
mov
pop
add
daa
jg
pushf
adc
dec
inc
dec
push
ss
sub
xlat
pusha
xor
orl
sub
mov
and
sub
xchg
test
inc
push
inc
loopne
cltd
lock
xorl
adc
sbb
imul
inc
or
jmp
xchg
dec
xlat
lea
adc
adc
rcrl
dec
and
loop
cmpsl
fisubl
test
push
mov
dec
enter
pop
xor
orb
jae
jl
gs
aas
int3
mov
pop
es
pop
lret
insb
mov
mov
mov
mov
decl
mov
inc
arpl
mov
loope
push
out
jl
ds
notl
mov
addr16
call
test
fucomp
inc
cmc
mov
push
mov
jge
dec
test
filds
stos
jbe
cmp
sub
lret
icebp
dec
jns
or
add
ljmp
aaa
lods
lret
imul
aaa
sub
jb
iret
jp
lret
fisubs
dec
sub
stc
mov
sub
es
dec
mov
mov
sbb
cwtl
pop
dec
sbb
mov
sahf
jb
mov
cmc
cmpsl
mov
jbe
out
xlat
and
inc
mov
cmc
rorl
mov
or
es
cli
sub
mov
adc
cmp
mov
cmc
lods
dec
add
inc
arpl
nop
mov
jbe
mov
aad
adc
stc
rorl
mov
inc
lret
or
mov
in
push
aaa
xor
sub
sti
es
cmc
iret
sahf
inc
in
adc
cmc
dec
dec
enter
mov
test
pop
fcoml
shrb
push
dec
stos
xchg
js
lods
cld
add
pop
and
adc
imul
shl
inc
jns
jae
mov
data16
and
inc
xchg
jne
sbb
jno
sti
lcall
rcrb
mov
xor
sub
stos
xor
fldl
in
jl
fadds
in
and
mov
mov
jne
arpl
gs
neg
jecxz
iret
mov
or
popf
incl
ja
leave
mov
mov
xor
aas
push
pop
arpl
cmpsb
movb
cmp
jns
int3
call
and
push
jo
xchg
stos
subb
bound
pusha
int
idiv
test
mov
or
jle
dec
sbb
je
dec
popf
fs
aad
jnp
movsb
cmp
rcrb
stos
fstpl
xchg
cs
cmpsb
push
sbb
inc
jnp
in
adc
inc
jmp
es
mov
pusha
jp
daa
fninit
push
add
pushf
mulb
cld
jo
ror
push
pop
hlt
shlb
insb
and
add
stc
scas
pop
ja
imul
push
jo
dec
std
xchg
xor
enter
ljmp
insb
idivb
xlat
lods
and
xchg
movsb
xor
dec
lea
ljmp
stos
aam
mov
faddl
xor
sets
jbe
test
pop
mov
clc
jmp
movsl
bswap
cmc
lcall
inc
xorb
arpl
mov
jge
push
add
addr16
les
js
das
pusha
les
sbb
cmp
cli
or
jge
jnp
out
jb
sbbb
jge
add
loopne
cli
add
test
fisubrl
jb
adc
adc
or
jo
pop
push
mov
dec
sarb
les
aad
cmp
jg
in
pop
push
cltd
lea
cmpsb
jno
and
out
mov
pxor
jmp
aam
sub
cltd
jbe
mov
outsb
mov
shr
stc
ret
mov
jne
adc
mov
mov
int3
push
xorb
andb
sbb
jbe
push
sub
ja
push
sub
mov
jno
loopne
xor
ljmp
aad
stc
sti
xchg
mov
sub
pop
gs
mov
imul
adcl
rclb
adc
jo
adc
mov
mov
sub
xchg
adc
and
and
subl
and
add
inc
es
fimull
popf
repz
rorb
js
push
lods
sbb
fsubrl
xor
push
out
cmp
xchg
into
or
inc
dec
daa
rcl
js
xor
adc
sub
adc
xor
sbb
les
dec
int
pop
inc
sbb
sbb
jns
add
shlb
sbb
rcr
jp
jecxz
dec
sub
stc
iret
pop
push
mov
leave
fiadds
cmp
fnstsw
pop
lods
movsl
push
jge
sub
mov
jmp
push
mov
ja
xor
push
sbb
int3
fmuls
jl
inc
sahf
and
sub
fcomps
aam
sub
sub
mov
adc
sbb
nop
scas
adcl
sub
push
pop
lret
lret
push
pop
leave
jp
clc
dec
xor
xchg
fwait
aaa
lea
rcl
sub
test
icebp
testl
repnz
jmp
lret
shrb
std
sub
jbe
add
cmp
in
cs
fcoms
xor
imul
ljmp
sub
dec
aas
fdivs
dec
sbb
iret
push
pop
adc
or
mov
jnp
or
add
push
shrl
in
sub
pop
push
test
pop
cmp
sbb
in
pop
xchg
insb
sub
popf
inc
fistpl
adc
outsb
ret
mov
push
cwtl
nop
dec
data16
sub
xor
addb
popa
sbb
cwtl
mov
mov
inc
out
out
gs
push
lahf
push
adc
mov
rcrb
outsb
pop
das
roll
vxorps
xchg
divl
cmp
addl
inc
idivl
push
lds
cltd
sahf
test
cltd
outsb
xchg
jmp
inc
cmpl
push
in
aam
cmp
cs
fnstsw
out
lahf
scas
jno
testl
outsl
lcall
dec
jno
int3
lcall
adc
in
dec
and
test
dec
scas
enter
pop
mov
fucomi
shrb
out
pop
in
dec
arpl
cmp
cmp
mov
cld
cmpsl
mov
ljmp
mov
dec
and
xchg
jae
dec
hlt
scas
adc
mov
mov
add
push
xor
adc
out
in
hlt
or
in
aas
add
cwtl
es
adc
pushf
aaa
movd
test
mov
shll
insb
add
sub
dec
xchg
jp
inc
xchg
sbb
rcl
rcrl
dec
push
dec
inc
xor
movsl
lods
jo
and
sub
sbb
inc
push
pusha
push
xchg
sahf
stos
loop
stc
dec
sbb
inc
jecxz
mov
js
daa
fwait
int3
ret
mov
sub
sub
sarb
and
jge
push
mov
enter
cmc
call
pop
stos
xor
cwtl
test
iret
or
arpl
push
cld
and
rcrl
insb
push
pop
call
call
jo
jae
mov
pop
pop
push
mov
mov
mov
xor
mov
jb
gs
fsubs
jle
or
bound
ds
popa
insl
repnz
mov
lock
pop
sub
sbb
push
pusha
pop
inc
in
cmp
mov
mov
push
cmp
lcall
outsl
imul
dec
aas
xchg
inc
sbb
pop
out
outsl
in
clc
fs
and
jns
xchg
lock
ret
stos
ja
pop
testl
or
cmp
in
scas
cld
fsubl
shr
jns
cmp
stc
cmpsb
jl
inc
add
pop
jecxz
xchg
cmp
stc
ds
mov
and
test
jge
mov
outsl
sbb
adc
aas
adc
rcr
mov
mov
fidivrs
shll
inc
ret
add
cmp
pop
pop
dec
xchg
int3
add
mov
lcall
xchg
fbld
inc
jl
mov
gs
icebp
pop
add
imul
sbb
dec
pushf
push
pop
mov
pop
or
sbb
cmpl
pop
out
in
cmp
mov
add
xlat
and
xchg
cmp
inc
outsl
stos
mov
test
repz
fadds
xchg
ret
insl
lods
mov
push
push
cmc
sub
icebp
sbb
pop
and
lret
mov
call
incb
sub
xchg
or
inc
sahf
jno
mov
add
movsl
outsb
mov
maskmovq
notl
popa
lock
push
das
jae
cltd
or
adc
sub
adcb
push
add
loop
popa
pushl
test
ss
iret
ret
je
pop
mov
lcall
inc
imul
jp
insl
jb
add
xchg
sub
orb
xchg
and
addr16
jb
fdivp
rcll
push
jecxz
out
xor
pusha
lret
sbb
sub
mov
dec
in
push
jo
sarl
mov
mov
mov
xlat
fisubrs
cli
jecxz
xor
lret
dec
or
scas
add
mov
mov
sub
add
inc
dec
mov
int3
mov
jbe
xchg
pushl
loope
sub
mov
stos
xchg
inc
dec
jo
add
icebp
nop
pop
popa
subb
adc
jle
notb
mov
call
mov
pop
bswap
push
add
mov
cltd
cmp
and
cmp
in
sub
and
addr16
dec
xchg
mov
xor
cmpsl
rcr
adc
repnz
mov
mov
mov
jecxz
jb
push
andl
test
scas
cmpb
jnp
dec
sbb
inc
push
pop
aam
aad
xor
or
test
cwtl
xchg
mov
pop
mov
jge
pop
sahf
fldcw
or
clc
mov
mov
test
xchg
inc
fisttpl
dec
bound
loopne
mov
xor
lock
gs
call
inc
jb
xchg
sbb
lock
ds
and
pop
aas
sbb
aaa
lahf
inc
ja
pop
ror
push
rcrl
ljmp
insb
scas
adc
fwait
lock
sub
push
sub
mov
xor
sbb
xchg
dec
jle
mov
rolb
push
dec
xchg
fdivr
daa
or
bound
adc
inc
dec
pop
mov
rcr
sbb
and
adc
pop
add
les
inc
je
xor
push
push
jle
movsb
xchg
jg
je
push
scas
dec
jb
pushf
insb
jb
jmp
cmpsb
iret
ret
retw
fistps
cmpsb
addl
or
push
jo
nop
jg
cmp
dec
push
mov
arpl
aam
lcall
sarb
insb
insl
sub
cmpsb
jo
ds
mov
mov
aad
int
lods
repz
outsl
jmp
cmc
xor
jbe
call
jns
test
nop
inc
inc
sbb
test
out
adc
pop
pop
push
bound
into
cwtl
and
leave
and
int3
push
stos
loope
jo
mov
push
sub
lds
mov
gs
push
jbe
cmp
cltd
push
stc
aaa
insb
aas
dec
mov
outsl
jp
sub
shll
rorb
lret
inc
cmp
push
scas
mov
mov
xchg
mov
out
out
and
fisttpl
dec
push
cmp
in
jecxz
cwtl
or
lock
ret
dec
jge
pop
cli
xchg
mov
aaa
inc
fcompl
dec
das
loope
sub
fcoms
negb
cs
pop
into
flds
fwait
sti
jp
cli
roll
pop
mov
imul
lea
inc
xlat
test
and
cmpl
or
inc
cmpb
sbb
clc
pop
enter
inc
mov
scas
adcl
or
cmpsb
push
testb
cmp
pop
test
jle
mov
enter
adc
sub
lahf
pushf
nop
adc
mov
lods
insl
cmp
cmp
pop
mov
xchg
cs
sbb
in
mov
adc
test
int
lahf
push
jmp
pop
and
jno
pinsrw
movsb
mov
lret
stc
test
push
iret
xlat
push
out
add
lods
jp
inc
inc
aad
lcall
sahf
in
sarl
cltd
shlb
fdivs
into
lods
hlt
mov
sahf
fcomi
loopne
dec
inc
add
rclb
adc
pop
pop
testb
test
mov
lods
psraw
das
xchg
cld
mov
stc
arpl
pop
stos
mov
add
or
imul
xor
scas
shll
lods
push
fbstp
shrb
stos
fwait
and
add
andb
add
pop
inc
jg
lods
jne
or
mov
sbb
xor
pop
fscale
cmc
out
inc
dec
int3
dec
jl
cmpsb
push
sbb
popf
fidivl
jle
push
mov
stos
stos
cmpsl
rorb
hlt
cmp
bnd
adc
movsb
dec
sbbb
xchg
pusha
cltd
push
movsb
dec
aam
inc
cmp
jmp
jae
ljmp
mov
sti
dec
inc
xor
hlt
cmpl
ficoms
fnsave
mov
push
jmp
or
xlat
enter
push
addr16
fwait
jno
mov
ljmp
push
sub
mov
push
mov
jecxz
xchg
lods
jmp
je
repnz
insl
fs
std
mov
and
paddsb
in
jmp
jl
dec
jge
sbb
or
dec
rolb
cmp
mov
push
repz
je
xor
mov
adc
in
adc
mov
popf
push
inc
add
mov
outsl
adc
xchg
out
sahf
xor
or
dec
stos
adc
inc
sub
rorb
sbb
pushf
imul
jo
stos
subb
call
add
push
ja
mov
es
lock
loope
sbb
and
or
icebp
pop
jge
imul
stos
jno
mov
test
push
cli
add
xchg
push
xchg
dec
cltd
mov
invd
shlb
sarl
adc
and
mov
clc
test
stos
ja
sub
or
ret
popf
icebp
fidivl
jnp
and
and
sub
jo,pt
push
outsb
fisubl
outsb
fs
adc
xor
mov
sub
cmc
push
mov
add
push
scas
mov
popf
adc
pop
fmull
mov
fsts
xchg
pop
insl
arpl
lcall
std
fdiv
sub
xor
imul
pop
daa
xchg
cmc
es
clc
lahf
mov
rolb
shlb
xchg
ds
cmpsb
lret
xchg
push
inc
test
sbb
call
mov
cwtl
push
hlt
add
add
xchg
movsl
and
mov
cmp
aaa
fiadds
inc
push
pop
cmpsl
inc
mov
in
aam
jnp
enter
fbld
mov
mov
and
inc
dec
or
push
test
sbb
pop
push
enter
dec
cmp
lret
cmp
xchg
subl
sbb
push
pop
xchg
nop
dec
or
or
mov
fisubs
inc
cmpsb
sti
pop
xchg
test
adc
repnz
test
popa
lahf
ss
push
inc
into
loop
dec
dec
lds
mov
adc
sbb
add
addl
jge
push
add
xchg
cmp
lods
mov
cmp
add
lret
jle
xchg
mov
sti
cmp
cs
loop
leave
mov
loop
mov
jo
xor
insb
and
lcall
jnp
pop
sbb
leave
fs
sahf
pusha
lds
mov
out
sbb
ficoms
sub
push
pushf
mov
xor
mov
push
aas
mov
int3
loope
icebp
loop
sub
dec
fsubs
fs
add
rorb
adc
mov
inc
push
push
in
int3
lret
orl
ds
loopne
jle
fldt
pop
or
in
data16
xchg
out
rcrl
mov
sbb
mov
jo
inc
lods
dec
jecxz
pop
xor
popf
incl
cmp
push
jle
test
fiaddl
or
jle
flds
sbb
push
daa
test
sbb
adcl
pop
xchg
sbb
xchg
sarl
jl
jge
and
hlt
repz
loop
inc
pusha
mov
fwait
adc
ljmp
pop
lret
pop
dec
int
ljmp
mov
inc
cs
cmp
jp
push
push
cli
divl
pop
cmp
inc
ljmp
push
pop
inc
mov
into
or
push
insl
pop
out
je
lods
cld
pop
int3
adc
lahf
inc
mul
jecxz
xlat
sub
insl
repnz
mov
mov
movsb
bound
aad
pushf
cmp
cli
shld
mov
arpl
mov
add
xchg
lods
rorl
pushf
sbb
adc
mov
push
sbb
in
fdivrs
movsb
fisubrl
pop
mov
xchg
adc
cmpsl
test
sub
js
scas
movsl
ljmp
sub
adc
mov
and
xor
cmpsl
jb
cltd
jno
push
sub
icebp
xchg
test
inc
xlat
mov
sahf
call
sti
aad
jnp
mov
test
pusha
lea
add
lahf
adc
outsb
pop
insl
cmp
lods
cmp
xor
out
out
inc
fadd
xlat
sub
rcll
lret
fldenv
mov
xorl
scas
sub
add
mov
sub
pusha
jne
push
cmp
dec
push
add
fisttpll
pop
loop
clc
jecxz
or
imul
out
jno
jmp
icebp
mov
dec
rclb
pop
clc
mov
dec
or
lds
mov
mov
ret
cwtl
adc
add
sub
push
fimuls
ret
daa
test
into
pop
and
mov
inc
or
sbb
xchg
sub
mov
test
cs
rcrl
push
xor
push
cmp
adc
daa
bound
adc
pop
adc
mov
lret
push
sbb
fsubrs
adc
pop
xor
lcall
bound
pushf
in
aas
mov
jne
mov
cwtl
lds
and
push
xchg
jns
loope
pop
stc
mov
xor
adcb
dec
hlt
rolb
stos
daa
loop
dec
mov
adc
inc
decl
push
pop
sbb
mov
add
lea
push
shr
sbb
rcrl
push
pop
cs
mov
sub
repnz
xchg
or
das
jo
lahf
pop
sbb
mov
pop
sub
cs
test
bound
outsl
jmp
lcall
sub
jg
mov
pop
sbb
jl
int
ficompl
dec
lock
cwtl
push
xchg
mov
xor
mov
aaa
or
jecxz
mov
pop
sti
and
xchg
jno
fcmovb
push
or
cld
js
sbb
popa
inc
ret
add
mov
mov
fistpll
nop
mov
sub
sbb
sahf
adc
imul
sarl
sbb
adc
or
aad
loope
push
sar
scas
sbb
inc
lock
add
xor
imul
int
adc
add
stos
push
jg
sbb
fs
sahf
xor
or
pop
ss
jecxz
cmp
addl
daa
push
pop
xor
sbb
add
mov
adc
add
jmp
aad
pop
pop
cmp
js
movsl
in
cmc
leave
jae
pop
sub
pushf
sub
xchg
sbb
pop
xchg
repz
ja
push
or
pop
mov
push
add
inc
inc
in
pop
and
and
aas
and
cmp
gs
mov
aas
fisubs
xchg
cmp
outsl
pop
and
pushf
mov
mov
inc
iret
and
movntq
out
mov
mov
test
cmp
push
dec
pop
rorl
and
pusha
stc
push
jns
and
int
fcoml
icebp
mov
inc
sub
xchg
jge
mov
mov
push
mov
mov
cli
pop
pop
jne
jo
mov
dec
mov
sahf
xlat
in
xor
lahf
jg
sub
push
test
ljmp
mov
xorl
push
rorl
inc
or
xchg
sbb
sarl
jb
test
scas
ds
addr16
mov
mov
or
add
pop
outsl
pop
sub
lret
in
sbb
ret
lds
xchg
xor
lret
mov
ljmp
popa
push
pop
add
adc
stos
insl
cwtl
mov
jnp
cmp
das
lahf
push
div
rcr
dec
mov
mov
push
sbb
jecxz
lcall
xor
jne
ret
add
xchg
in
jmp
imul
stos
cli
adc
test
call
mov
mov
in
insb
lods
mov
inc
inc
pop
cli
mov
jae
add
mov
or
dec
inc
sub
push
push
xor
out
adc
jne
jp
push
cmp
test
push
add
jmp
sub
and
shl
push
pushf
mov
repz
imul
lret
out
mov
and
inc
inc
xchg
add
cmp
adc
sub
xchg
in
mov
push
rcr
dec
push
jle
test
scas
pusha
inc
mov
add
lods
std
inc
xchg
cmc
jo
xchg
dec
and
sbb
jo
aad
jg,pn
pop
sub
lods
int3
fwait
sub
les
xor
je
mov
sbb
cltd
cmc
pop
hlt
add
inc
js
enter
ss
sbb
imulb
fcoms
iret
xor
orb
loopne
add
dec
jnp
add
outsl
push
jae
and
leave
push
lods
sbb
cmp
adc
lret
and
add
inc
outsl
std
mov
jmp
adc
mov
mov
addl
adc
pop
dec
xchg
xchg
push
xorb
or
addl
sub
or
sub
mov
jmp
insb
mov
sbb
daa
cmp
dec
mov
add
adc
ds
dec
sub
cmp
add
dec
dec
aad
inc
aad
cmp
ds
xchg
bndstx
inc
rcll
xor
notb
std
jmp
lret
push
imul
adc
push
std
test
mov
into
xchg
fcoml
sub
lock
sbb
cmc
add
mov
pusha
in
test
cmc
rcll
lock
stos
inc
sti
clc
shll
in
xor
dec
or
ror
pop
orl
aas
popa
mov
test
out
stos
xchg
pusha
repnz
sub
pop
dec
inc
cmp
lock
ret
adc
out
js
pop
push
loop
pop
mov
jmp
jl
push
scas
hlt
adc
push
sbb
pop
das
lock
loope
aad
aaa
in
rcrb
sub
pop
ficomps
jbe
repz
xor
mov
lretw
cmp
or
lods
or
push
mov
out
out
pushl
cmp
sti
call
imul
js
lret
cmp
in
test
inc
sbbb
loope
loop
and
aas
mov
jae
ja
xchg
shl
cmp
and
sbb
lea
cmpsl
add
and
mov
andb
icebp
xor
push
lret
jns
lret
cltd
loope
out
repnz
or
stos
insb
mov
xchg
lods
daa
sub
andb
sbb
push
mov
ds
sub
pusha
hlt
shrl
repnz
scas
aas
adc
add
pop
ljmp
xorb
insb
outsl
jbe
xchg
decl
push
cmp
popa
sti
jae
xchg
pop
jns
shll
in
in
push
pop
lret
push
fidivs
cs
jnp
iret
fisubrl
sbb
xor
adc
fidivl
bound
add
dec
fwait
sub
jmp
mov
clc
dec
or
ret
or
xchg
daa
stos
jns
pop
lret
popa
add
lds
and
sub
insl
xor
addr16
idivb
outsl
test
cmp
pop
sbb
fbld
das
sbb
mov
jbe
ja
adc
xor
hlt
sbb
adc
mov
mov
lahf
pop
loop
xchg
inc
mov
xor
add
fadd
lcall
jae
pop
outsl
clc
jb
push
aad
enter
fiaddl
aad
out
push
arpl
into
cltd
mov
lock
movl
mov
les
enter
xor
int3
lcall
test
cmc
iret
iret
sbb
fbstp
jmp
dec
inc
jge
rcrb
mov
ja
mov
dec
icebp
imul
dec
mov
outsl
inc
imul
loope
ljmp
dec
push
fsubrp
lret
jae
pusha
data16
loopne
jp
repz
int
popa
jecxz
mov
push
cmc
pop
divl
fidivrl
add
mov
sarb
sbb
sbb
push
lea
xor
cmp
jbe
xchg
add
sahf
push
xlat
jnp
sahf
fs
jle
adc
or
mov
stc
outsb
xor
out
je
dec
pusha
mov
sub
jl
cmp
sbb
mov
mov
cli
sbb
xor
add
fcoml
loop
leave
jae
stc
pop
sbb
rolb
xchg
lods
push
xchg
xbegin
push
fwait
pop
popf
xchg
lret
mov
mov
stos
add
xor
std
add
dec
cmpsl
pop
sub
adc
sub
dec
cmp
jg
orl
add
jnp
push
xchg
loope
mov
mov
imul
mov
cmp
cmp
insb
cmpsb
aad
movsl
sub
movsb
xchg
xor
mov
fwait
inc
insl
in
mov
int3
rcrb
dec
xchg
xor
int
mov
je
cmp
scas
xchg
icebp
and
dec
and
pop
in
jg
sbb
cmp
add
iret
xchg
jne
jne
dec
jno
jb
cmp
xlat
cmc
cmp
and
outsl
fwait
ljmp
or
push
sbb
lahf
imul
mov
push
ret
scas
mov
ret
mov
imul
aaa
jo
xchg
repnz
mov
cltd
nop
mov
pop
jo
sub
out
adc
push
stos
jmp
or
rep
cmc
pusha
inc
xchg
ret
adc
mov
mov
rolb
loope
or
int
cmpsl
mov
mov
xchg
ret
bound
xor
push
aas
mov
push
fldcw
nop
pop
jl
xchg
fsqrt
lds
out
pop
call
out
cmp
rcll
outsl
pusha
enter
ljmp
push
inc
div
dec
inc
out
mov
adc
or
jae
dec
jg
lret
adc
jle
outsb
jbe
mov
in
addb
and
inc
aam
xor
lahf
addr16
js
outsl
pusha
stos
les
fldl
cs
ljmp
add
out
sub
jae
inc
jns
jb
push
subl
add
aas
cli
gs
sub
push
mov
jo
xchg
stos
ret
rorb
adc
push
push
xor
adc
aaa
push
rclb
sbb
jmp
jno
leave
jnp
sbb
ss
repnz
and
loope
lret
lods
or
jle
les
sahf
xchg
scas
in
or
jecxz
mov
cli
dec
repnz
add
aas
scas
les
dec
adc
mov
lods
negb
testl
aad
inc
mov
or
dec
mov
sub
pop
adc
add
sub
lds
popa
add
push
fstpl
pusha
mov
add
xchg
sbb
cmp
push
fsts
and
and
pop
imul
call
cpuid
or
pop
sbb
jle
push
push
mov
ljmp
in
mov
and
mov
xchg
movsb
addl
cltd
add
into
shr
cmp
sub
out
jo
enter
test
neg
fidivrs
jge
lahf
dec
cmpsb
or
push
jg
dec
xorb
out
repz
pusha
pop
xchg
add
popf
mov
stc
imul
inc
sbb
sub
xrelease
leave
test
into
sahf
mov
enter
popa
adc
roll
pop
inc
mov
sbb
loop
dec
pop
xchg
push
dec
push
adc
mov
cmpsb
movsl
or
inc
into
push
inc
pop
xchg
sbb
nop
fcomps
rcrl
shll
adc
lods
nop
sub
lahf
jbe
mov
push
push
ja
sub
add
neg
enter
adc
fisttps
sarl
add
jg
pusha
iret
test
int
aas
sbb
push
xlat
arpl
xchg
in
sbb
xchg
mov
add
cmp
cmp
cmp
insb
arpl
lahf
jge
ss
sbb
aad
mov
and
or
push
and
add
mulb
aam
jmp
outsl
sub
sub
cmp
xchg
mov
mov
sbb
xlat
add
mov
mov
je
cwtl
test
ret
or
mov
lea
es
pushf
loopne
inc
jecxz
mov
lds
fisttps
and
jbe
dec
sub
mov
xchg
sub
aad
unpcklps
out
cmp
in
mov
jg
jnp
rcrl
loopne
xchg
into
enter
stos
cs
push
mov
int
in
mov
cmp
mov
imul
mov
pop
push
sbb
and
or
hlt
jle
dec
pop
adc
arpl
in
mov
out
mov
inc
pop
fstps
addr16
bound
dec
sbb
and
arpl
lret
sahf
lock
jo
leave
sbb
add
jmp
imulb
or
push
mov
xor
ja
mov
xor
popa
fidivs
sbb
xchg
mov
cmp
push
inc
fadds
sbb
cmpl
dec
xor
rcrb
movsb
and
mov
ds
mulb
jecxz
mov
cmp
mov
sahf
dec
ss
mov
mov
xor
addr16
outsb
xor
dec
add
push
xchg
push
punpckhwd
dec
bound
pop
test
jge
xchg
xchg
adc
jo
push
xchg
jo
ljmp
mov
lods
sub
sub
pop
fstps
outsl
cmc
enter
pusha
cmp
dec
cs
and
loope
sti
cli
xlat
int
orl
cmc
rcll
out
lret
jne
fmul
inc
scas
push
push
lods
sbb
les
jns
push
push
sbb
dec
pop
imul
jl
scas
pop
mov
pop
rcrl
arpl
inc
dec
lods
mov
gs
into
sub
push
jae
cltd
dec
rolb
sbb
jbe
hlt
inc
arpl
arpl
stc
push
adc
sub
fidivs
movl
mov
add
jle
xchg
sub
inc
ds
lret
and
popa
lods
das
scas
addr16
test
popa
addb
cmpsl
pop
jecxz
mov
jmp
or
bound
out
xchg
jmp
decl
in
xorl
sub
mov
fnop
addl
sbb
or
lods
and
je
dec
push
xor
ret
mov
and
pushf
push
mov
dec
xchg
ret
outsb
push
pop
or
in
lret
push
jle
fimuls
enter
es
pop
stc
inc
mov
adc
enter
test
out
mov
icebp
sbb
push
je
xchg
scas
sahf
mov
addr16
ret
fisttpll
push
mov
fsts
fimull
sub
cmp
pop
arpl
and
adc
fstl
div
nop
add
popf
add
inc
dec
das
cmovo
subb
and
shll
jle
pop
mov
dec
mov
daa
sti
cld
fwait
cwtl
aam
add
jp
arpl
ss
push
fwait
cmp
sub
je
or
dec
inc
adc
dec
mov
loop
stos
mov
adc
and
call
invd
mov
jle
push
jbe
dec
movl
mov
xchg
xor
and
push
add
mov
cmp
fsubs
jmp
push
loopne
test
xchg
stc
inc
jp
imul
cltd
xchg
and
movsb
or
mov
movsl
bound
dec
cmpl
or
shr
in
adc
inc
daa
add
cli
jo
imul
fstp
cltd
sbb
les
sahf
insl
fisubrs
lcall
cmp
xlat
cmp
lret
fsubs
std
imul
lea
cmp
test
jl
dec
lds
int
push
lock
cld
cmp
mov
add
sti
jno
xchg
mov
out
mov
faddl
lds
shrb
mov
cmp
sub
sbb
push
shlb
idivl
addr16
push
mov
dec
push
mov
push
cmp
dec
pop
mov
minps
push
adc
out
dec
xchg
shr
clc
xchg
pop
lods
adc
push
scas
sbbb
and
sbb
fistl
loopne
xor
scas
pop
mov
mov
ss
arpl
xchg
seto
je
and
jle
push
arpl
mov
les
cmp
out
push
xchg
jne
loope
pop
mov
mov
fwait
and
sbb
pop
cmp
loopne
mov
outsb
or
cmp
xchg
rep
lretw
push
aas
mov
bound
and
negl
sub
into
mov
sbb
std
int
out
lods
ds
cli
lods
in
push
pop
fildl
dec
inc
in
xchg
dec
es
push
or
mov
add
and
roll
test
out
shrl
aas
mov
xchg
shrl
lods
push
sbb
imul
xor
iret
inc
pcmpeqd
loop
rorl
lret
mov
xor
gs
repnz
lret
jbe
fdivs
sub
sub
shll
addl
imul
fwait
dec
jmp
roll
shlb
scas
pop
jbe
cmpsl
mov
push
jno
int
adc
fidivrl
mov
sub
js
cmp
cli
xchg
in
push
lock
xchg
and
mov
mov
jns
jae
call
sbb
mov
xor
mov
sarb
cltd
xchg
sub
xorl
cmc
lea
mov
bound
fildll
mov
adc
inc
in
add
xchg
xor
cmc
dec
cmp
clc
loope
push
mov
scas
push
cmp
or
add
jb
out
adc
cld
outsl
iret
xor
iret
mov
les
pop
mov
inc
ds
adc
fmul
fadd
fsub
daa
and
mov
sarl
cmp
push
in
pop
and
into
ljmp
aaa
adc
jns
inc
clc
fsubr
icebp
xchg
push
cwtl
jle
scas
nop
daa
and
fs
jno
cmpsl
push
jbe
and
shrl
mov
les
sbb
and
sahf
imul
in
pop
cmp
popa
mov
mov
arpl
xchg
int3
mov
jbe
mov
add
jge
mov
pop
into
lret
add
mov
push
out
dec
loope
sbb
lcall
inc
or
jmp
adc
pop
ljmp
aaa
jmp
add
ret
bound
imul
jns
movsl
fiadds
sti
push
sub
rolb
mov
popf
sub
xor
cwtl
gs
aas
mulb
or
ljmp
fsubrl
sbb
mov
push
and
add
aad
or
in
cmp
idivl
movsb
movsb
and
or
sbb
pushf
cli
jno
or
sub
push
fimull
push
xchg
outsb
pop
or
sub
test
imul
and
lahf
sub
icebp
or
aas
xchg
aad
gs
shll
stos
cltd
mov
imul
outsl
into
scas
ret
test
pop
xor
out
sub
pushf
sub
enter
jl
int
test
push
notb
mov
xchg
sub
gs
add
test
lods
jg
loop
lods
mov
lahf
mov
and
addr16
xchg
push
lods
dec
mov
in
imul
cwtl
mov
movsl
sub
mov
dec
out
cli
js
pop
dec
mov
add
insl
xor
mov
scas
orl
dec
push
sbb
notl
lods
mov
pop
pcmpeqw
mov
jmp
das
sti
cmpsl
enter
mov
sub
loope
pop
xorb
push
jbe
cmp
insl
pop
mov
jb
xor
pop
test
fnstsw
inc
sub
dec
lret
test
out
add
mov
cli
and
lods
jbe
inc
rcrb
mov
lods
ljmp
ror
pop
xchg
ret
push
mov
outsl
pushf
or
xchg
andl
in
andl
shl
push
ret
lret
cmpsl
pop
bound
pop
inc
mov
push
xchg
cmpsb
push
idiv
cmp
lods
fiaddl
lret
in
mov
and
ret
aam
or
shrl
add
mov
adc
adc
loope
into
cmp
daa
dec
int
sub
add
adc
xlat
and
sti
inc
adc
cmpsb
flds
orb
lret
add
adc
inc
xor
cltd
negl
imul
incl
mov
testb
push
mov
push
push
lock
fldl
jecxz
add
test
xor
enter
cmpsb
mov
or
ret
leave
out
sub
sbb
andl
dec
lock
fsubs
lret
iret
and
in
push
scas
ss
adc
nop
or
or
and
scas
inc
test
inc
pusha
push
and
or
ljmp
daa
push
xchg
call
insl
sarl
fsub
mov
sub
insl
shll
fs
dec
pushf
sahf
inc
mov
push
adc
fisttpl
mov
outsl
shll
cmp
stos
popf
fadds
mov
sub
jo
pop
xchg
and
add
xor
sub
lds
daa
in
xchg
add
xor
dec
lret
outsb
fwait
mov
sbb
ret
push
jb
push
push
adc
mov
and
pop
or
push
xor
shll
sub
xchg
rclb
leave
pushf
and
mov
add
ret
cltd
mov
daa
pop
lret
call
push
popa
mov
add
repnz
rorb
incb
jae
sub
mov
mov
scas
test
popf
loopne
or
pop
cld
xor
mov
leave
push
or
lds
xchg
fnsave
fisttpl
dec
jmp
shlb
aad
ds
xchg
mov
aam
movsb
sbb
jecxz
jbe
mov
cmpl
cmp
fimull
insb
xor
aad
in
orl
imul
adc
or
push
push
fidivl
xlat
inc
push
inc
adc
aas
sub
jmp
mov
outsb
add
mov
ss
or
dec
daa
pop
adc
sub
add
call
inc
dec
les
mov
push
sbb
adc
xchg
pop
ljmp
out
lret
cmc
mov
jp
jmp
mov
pop
add
gs
adc
arpl
out
add
int
scas
mov
xchg
or
mov
dec
daa
jp
in
scas
pusha
jge
xor
in
or
add
jl
loope
and
and
out
shlb
inc
cmpsb
xchg
pop
mov
ljmp
mov
in
lret
add
stos
dec
inc
fdivrs
xchg
sahf
or
mov
xlat
je
mov
xchg
lret
sbb
in
mov
insb
pop
inc
test
or
outsb
inc
push
or
mov
adc
mov
cmpsl
jmp
or
mov
cmp
fs
xorl
aam
pop
push
loop
rorl
inc
sub
mov
cmp
pop
mov
cmp
jb
repz
loopne
and
xlat
mov
push
out
in
sub
cmpsl
dec
mov
cmp
push
mov
std
pop
out
sbb
cltd
mov
lret
xchg
dec
and
xor
sub
outsb
xlat
outsb
outsl
les
inc
xchg
add
dec
or
scas
ret
repz
lahf
sub
sahf
mov
out
ds
jbe
test
inc
or
sahf
adc
xchg
inc
pop
and
stos
ljmp
jle
pop
sti
jg
adc
faddl
pop
mov
out
dec
and
fcmovnbe
sub
pusha
xchg
lret
xchg
dec
jo
mov
or
xor
or
jno
shll
repnz
mov
stos
loope
add
jne
in
jns
fsubl
addl
je
mov
scas
cmpl
icebp
and
loopne
in
mov
xor
inc
int3
jle
jo
cmp
lcall
mov
ds
push
das
lret
shrl
rorl
dec
ds
add
mov
cs
cmp
mov
popa
jne
and
mov
mov
lcall
dec
lcall
inc
or
dec
mov
mov
jl
pop
xchg
xor
scas
push
movsb
and
stc
dec
sete
mov
mov
jp
bswap
cmc
jg
clc
adc
jmp
cmc
jne
dec
xchg
addb
push
adc
pop
inc
mov
xchg
pop
pop
inc
inc
inc
lcall
and
enter
pop
std
into
mov
jp
outsl
jns
mov
xchg
ss
xor
xor
jmp
lret
pushf
lock
loop
out
mov
ss
jns
sub
daa
xor
pop
enter
sahf
ljmp
jle
cmpsl
cmp
mov
xlat
mov
and
xchg
add
pop
sub
and
jns
push
xor
xor
mov
data16
xchg
inc
mov
mov
ret
dec
dec
cmpsb
cmc
insb
dec
sbb
sbb
mov
cmp
push
in
sbb
push
xchg
xor
jg
xchg
lret
adc
push
aad
out
data16
fisubl
sub
mov
sub
call
add
jl
into
loop
mov
test
cmpsl
fadds
jb
xor
push
jno
call
pop
sbb
mov
pop
push
sbb
jl
scas
sti
mov
lea
mull
add
mov
sbb
cmp
push
rcrl
je
push
mov
mov
lock
stc
notl
cwtl
cmc
add
mov
or
sub
loope
sbb
mov
in
xchg
xor
shl
or
mov
sbb
cmp
cmpsb
push
pop
xchg
adc
jl
push
sub
and
mov
add
add
xorl
mov
jg
ss
mov
mov
scas
push
aam
xchg
std
cmc
les
aad
fiadds
std
lret
sub
pop
inc
jmp
push
loope
out
and
add
add
jmp
push
es
xrstors
jl
push
adc
push
dec
or
sub
pop
clc
jl
gs
xor
push
int
push
cs
pop
test
in
mov
jecxz
scas
xchg
int3
or
ds
scas
push
icebp
imul
out
inc
xchg
outsb
sarl
sub
push
push
lret
cltd
xchg
in
jecxz
fstpt
dec
dec
das
cmp
adc
test
mov
xchg
mov
dec
ss
adc
pop
rorb
cmp
mov
xor
cmp
insb
fs
add
adc
lret
mov
inc
xchg
mov
mov
pop
adc
push
mov
inc
idivb
cmp
pop
dec
ret
daa
sub
rorb
outsb
push
into
xchg
sbb
mov
dec
test
add
jmp
faddl
dec
out
cmpsl
jae
sub
xor
rcrb
jae
test
xchg
movsl
sub
jle
lcall
pop
push
adc
sub
enter
fcmovbe
test
mov
bound
mov
dec
test
xchg
push
cmpsl
or
inc
xor
xor
loopne
lahf
sub
nop
lds
jmp
fwait
imul
test
xchg
lcall
dec
push
aad
call
mov
dec
cmp
jmp
in
nop
imul
test
xor
and
mov
lods
out
sarb
js
push
insb
jge
pop
dec
pusha
adcl
ffreep
rolb
sbb
inc
inc
mov
fdivr
sahf
cli
add
ficoml
and
pop
js
adc
fadd
adc
jp
add
dec
ja
mov
or
lahf
sbb
loope
push
jecxz
lea
sbb
adc
or
xchg
sub
xchg
pop
aad
mov
mov
dec
xlat
xchg
jl
xchg
xchg
pop
cltd
mov
hlt
or
push
mov
add
pusha
pop
or
testb
gs
cmp
test
push
into
jne
mov
inc
cmp
sbb
or
jmp
mov
xchg
cmp
and
stos
push
mov
pop
xor
movsb
insl
sub
and
sub
sti
mov
inc
cs
lods
into
mov
sahf
aas
add
inc
xchg
in
lahf
sub
addr16
cld
mov
std
fwait
jo
cmp
pop
add
lock
imull
jg
cli
imul
add
call
push
aas
pop
xchg
je
push
fbld
outsl
xor
lods
out
xor
jmp
mov
in
xchg
jl
xchg
gs
hlt
jle
aam
hlt
xor
and
lret
rclb
rorb
add
aad
or
and
test
inc
mov
cmc
inc
dec
sub
mov
out
std
xor
adc
cmp
test
es
add
ljmp
xor
call
mov
lods
popf
and
mov
loopne
mov
or
and
cmp
mov
divl
cmpsb
dec
push
leave
push
loop
mov
cli
rcrb
movd
lret
push
aas
adc
sub
mov
fcomi
cmp
xchg
sub
mov
inc
getsec
movsl
sub
push
subl
pop
pop
ljmp
mov
imul
dec
add
fistpl
lds
xchg
push
js
push
push
xchg
xor
jae
or
add
int3
jl
sub
mov
and
loop
dec
add
xchg
sbbl
push
xor
iret
inc
cld
push
ds
ljmp
or
xor
adc
notl
xor
out
jl
ret
imul
das
push
inc
mov
stos
negb
dec
call
lods
dec
outsb
jecxz
adc
lock
inc
into
fwait
jmp
add
mov
pop
ja
push
cmp
pop
sti
jecxz
ja
or
adc
push
xor
icebp
test
dec
xor
push
mov
mov
adc
push
mov
adc
fists
push
fs
cli
in
lret
cs
mov
xor
out
sarb
sbb
clc
mov
sbb
fcoml
jge
or
test
pop
fnstcw
lods
test
outsb
repnz
sbb
xchg
mov
push
sti
mov
dec
cmp
fs
js
sub
mov
repz
andb
xor
or
std
xchg
lcall
lds
sahf
insb
mov
cmpsb
test
nop
int
sub
inc
pushf
imul
fildl
cs
fstpt
mov
mov
adc
into
aaa
adc
inc
adc
pop
mov
ds
mov
pop
add
cmp
inc
gs
aaa
mov
aad
ja
clc
xor
faddl
clc
cmp
xor
xchg
and
loope
fwait
loopne
adc
rclb
stos
xchg
mov
mov
jo
call
in
popf
jno
dec
xchg
push
push
sti
mov
and
or
push
adc
les
adc
mov
pop
dec
int
push
andl
dec
lcall
xchg
cs
pop
popa
sbb
add
mov
repz
adc
cmpsb
jae
xchg
stos
hlt
iret
mov
jle
leave
adc
fchs
stos
push
adc
mov
jb
fs
cmp
aam
mov
sub
clc
jae
pop
mov
xchg
mov
sbb
lcall
cltd
inc
mov
in
cmc
pop
aaa
sbb
adc
aaa
add
dec
xor
lret
inc
repnz
mov
out
nop
cltd
inc
mov
or
inc
dec
daa
dec
insb
xlat
xchg
notb
dec
je
out
cmp
fildl
cmp
add
xlat
jne
mov
fsubr
int
es
inc
adc
inc
push
imul
ljmp
xorl
jecxz
scas
add
adc
cmc
sub
cli
pop
push
or
out
movsb
leave
cltd
clc
into
and
fldl
incl
scas
je
lret
push
cltd
xlat
dec
mov
pop
or
xchg
aas
lds
in
jge
dec
pop
mov
les
es
jo
push
adc
cmp
dec
arpl
fwait
shll
mov
or
mov
outsl
mov
adc
cmp
and
jbe
into
jg
jno
sub
xchg
pop
les
lcall
sbb
imul
mov
or
rcll
sbb
sub
mov
pop
inc
loop
movsb
xchg
cmp
cltd
sti
mov
xor
addr16
fidivs
in
and
xor
add
pushf
rcl
mov
push
xchg
dec
cmpsl
ds
test
pushf
bound
subb
outsb
in
add
push
sub
sti
mov
cmp
into
inc
sbb
fcompl
outsl
shrl
arpl
insb
call
mov
and
sti
out
inc
mov
aaa
inc
nop
ret
leave
pop
and
sahf
lods
jmp
and
iret
aad
pop
push
add
xor
push
insb
clc
mov
lds
and
cmp
sub
add
dec
mov
sbb
mov
ss
push
les
pusha
xor
adc
add
xchg
push
jbe
out
in
xor
insb
dec
cwtl
mov
dec
insb
xchg
cmp
ja
inc
sub
add
clc
out
pop
mov
xchg
fisttps
sbb
pop
pop
dec
dec
gs
dec
xchg
and
cmp
lahf
xor
lcall
sub
movsl
inc
cmc
dec
cmp
je
sub
rcr
adc
cmp
jle
lcall
inc
push
jbe
out
xchg
mov
fnsave
xlat
aad
es
dec
jae
outsb
daa
gs
push
sub
lahf
imul
ds
sti
mov
arpl
int
popf
push
jo
movsl
pop
pop
rcll
daa
cmp
scas
xor
dec
movsl
pop
sub
fnstenv
push
lock
mov
addr16
dec
nop
ss
xchg
iret
add
into
mov
icebp
jle
push
in
mov
mull
jno
push
pusha
hlt
cli
push
imul
xorl
jo
clc
mov
xchg
add
mov
add
mov
mov
xor
lods
dec
flds
es
imul
add
mov
add
cmp
mov
cmpl
repnz
jmp
ret
shlb
fildl
cmc
popa
cs
and
shll
adc
cli
repz
mov
push
adc
cmp
pop
sbb
das
aad
mov
pop
stc
push
lods
inc
add
push
paddq
and
cwtl
repz
or
push
pop
enter
push
sbb
out
std
add
mov
cmpsb
ficompl
adc
out
aam
negl
bound
aaa
lret
pop
aas
adcl
ds
lods
in
jge
test
add
add
lock
inc
dec
lcall
ret
push
mov
dec
pop
imul
hlt
testb
mov
xchg
sub
enter
jae
les
movsl
jns
fyl2xp1
ljmp
std
mov
mov
mov
adc
jo
pop
fwait
cli
cmp
cli
pop
add
ficoml
popf
lea
je
pop
cmp
jns
loopne
sarl
imul
pushf
and
rclb
rclb
jo
imul
clc
sub
loop
outsl
mov
cwtl
mov
add
push
sub
hlt
loope
test
jne
bound
sub
mov
xchg
lock
push
mov
loop
pop
dec
out
test
cltd
mov
pop
in
inc
fnstenv
xor
ljmp
cmpsb
fwait
mov
mov
shrl
push
dec
xlat
cmpsb
adc
es
lods
je
orl
cli
mov
mov
mov
les
out
jb
rorb
pop
pushf
and
mov
mov
and
mov
add
jne
cld
add
enter
mov
cmp
add
in
mov
sub
insb
repz
mov
pusha
mov
pop
sub
push
mov
mov
scas
sahf
shrb
cld
mov
and
push
jmp
out
leave
pushf
and
xor
dec
adc
hlt
push
push
add
test
daa
popa
mov
les
pop
jle
push
push
sub
repnz
imul
inc
mov
ret
outsb
pusha
es
ds
mov
decl
inc
adc
icebp
and
jns
dec
stos
repnz
or
push
fdivl
cmpsl
jecxz
fsub
adc
call
lret
in
xchg
lcall
arpl
mov
addr16
icebp
call
mov
mov
mov
rorl
in
and
or
lret
xchg
add
mov
adc
je
sbb
xchg
popa
mov
and
add
inc
push
addb
jg
subl
sti
mul
fiaddl
aaa
ret
jle
and
dec
jnp
dec
push
leave
insb
inc
xchg
lods
mov
or
mov
dec
stc
dec
xlat
in
ret
shll
cwtl
dec
sub
pop
adc
ficoml
jecxz
inc
into
sub
test
ljmp
je
xlat
mov
mov
popl
jb
mov
jbe
jnp
daa
cmpsl
arpl
add
cli
insl
aas
push
gs
fildl
addr16
jp
movsb
push
aas
cmc
imulb
rolb
cmc
bound
je
pop
and
in
and
or
lock
int
in
loopne
in
cli
mov
pop
ret
mov
js
mov
mov
inc
sub
xor
mov
jno
bound
add
dec
call
jmp
inc
scas
leave
fsub
mov
inc
sbbl
mov
fsubrs
or
ret
mov
xchg
push
movsb
add
jo
adc
pop
mov
leave
negb
push
imul
cmp
cmc
jle
arpl
leave
cmp
scas
int3
mov
mov
stos
mov
mov
icebp
xchg
out
xor
mov
mov
add
fildll
outsl
sbb
mov
ja
idivb
inc
ja
fs
sub
outsl
adcl
loop
es
push
subb
ja
rcrb
cmp
jns
jecxz
mov
pushf
out
push
mov
dec
pop
aad
arpl
sbb
das
jne
insl
mov
adc
pop
sbb
jecxz
sub
in
scas
fidivs
out
fs
fsubl
push
popf
lret
ds
mov
push
pop
cmpl
arpl
pop
dec
sbb
lock
js
sbb
pusha
insb
adc
xchg
mov
enter
xchg
arpl
xchg
xor
xchg
xchg
inc
sub
aad
xor
or
dec
add
test
mov
add
cld
cmp
push
in
test
adcb
imul
xchg
adc
arpl
pop
lea
jecxz
sbb
addl
sub
sbb
push
pop
mov
test
or
sub
mov
sbb
fsubs
int
jecxz
jge
xor
in
cmc
inc
sub
dec
es
test
mov
sbb
jne
and
mov
sbb
and
push
repnz
add
test
movsb
insb
insl
and
outsl
push
test
lods
or
lock
mov
aas
pop
inc
dec
xor
popa
ljmp
mov
hlt
xchg
sarl
rcl
add
or
ret
add
sub
cmp
xchg
sbb
scas
jecxz
xorb
fistpll
pop
jns
shlb
push
mov
sbb
out
in
lods
fxch
call
dec
mov
popf
push
pop
fistpl
cmp
call
insb
xchg
dec
std
jne
adc
dec
sub
fldl
cmp
dec
rorb
push
fisubrl
adc
nop
mov
xchg
test
xchg
lods
jo
inc
rclb
add
jb
lret
xlat
jle
cmp
fmull
scas
adc
add
fistpl
sbb
cmp
jmp
addr16
mov
lods
jbe
in
imul
push
push
shr
push
pop
mov
sbb
loop
dec
mov
nop
push
andl
inc
pop
ss
pop
loop
lret
enter
cmp
add
mov
ljmp
jns
je
sbb
add
mov
cld
jae
fwait
push
loope
xor
xor
test
inc
pop
notb
les
mov
jmp
xor
or
in
or
mov
xor
in
jge
pusha
mov
xor
bound
cmpsb
add
dec
int
iret
mov
sbb
or
shlb
hlt
push
xor
add
pop
mov
bound
les
add
jb
dec
lods
lahf
jge
cwtl
sub
in
and
xchg
inc
jns
mov
mov
mov
adc
int3
add
movsb
mov
or
rclb
mov
ja
test
mov
dec
mov
jmp
call
rcll
stc
loope
leave
jp
loope
sub
adc
int3
bound
test
push
outsl
in
int3
sbb
mov
mov
fbld
loope
adc
int
sub
cltd
jmp
aad
cmp
add
lods
jl
lret
add
sub
and
cmc
xchg
std
shll
push
lea
xchg
loope
push
out
adc
pusha
pop
cmp
in
xor
push
insb
cli
jb
mov
adc
aaa
xor
lahf
mov
rol
sub
adc
fs
mov
test
dec
mov
ror
sbbl
cmp
stos
test
add
pop
sub
inc
or
jl
sub
and
push
repz
sub
sbb
mov
inc
movq
pop
mov
dec
push
jo
mov
mov
icebp
les
mov
mov
in
in
call
xchg
and
push
or
ret
mov
decb
dec
sub
jo
add
xor
or
cmpsl
dec
aas
xchg
mov
cli
inc
loop
jp
sbb
cwtl
sub
cmp
xor
repnz
sbb
and
daa
xor
loop
ds
aad
ljmp
leave
cmpb
pop
dec
pop
out
xor
out
sbb
pop
push
xchg
inc
lock
leave
add
fsts
nop
movsb
or
inc
clc
lds
mov
mov
and
jae
mov
xchg
xchg
std
push
into
mov
push
testb
iret
inc
popa
or
cmp
pop
cmp
add
jg
stos
in
es
daa
pop
leave
adc
in
pop
jb
adc
push
stos
push
mov
mov
mov
ret
or
movb
inc
inc
leave
iret
stos
fs
punpckhwd
mov
cmp
mov
mov
arpl
or
mov
gs
mov
loop
call
and
jmp
cmpsb
movl
notl
pop
xchg
notl
inc
psubd
popa
xchg
das
dec
jno
sub
loopne
pop
jle
pushf
fidivl
mov
xchg
xlat
push
aaa
cmpl
out
mov
cmp
sub
shlb
nop
push
sub
das
mov
cmpsl
fildl
xor
fwait
std
mov
lds
arpl
add
cltd
push
sbb
inc
aad
insl
stos
mov
cmp
cwtl
pushf
jbe
ret
or
sbb
pop
mov
dec
adc
mov
cmp
push
gs
mov
add
xlat
jg
mov
lcall
lahf
sbb
sbb
neg
dec
dec
dec
test
int3
scas
bound
cmpsl
js
in
pusha
ret
leave
or
or
pop
mov
pushf
movb
jns
or
jecxz
inc
inc
daa
out
xor
loope
xor
out
sahf
pop
lods
inc
and
xor
dec
icebp
adc
mov
mov
test
sub
dec
inc
scas
dec
mov
enter
inc
xchg
loope
lret
push
mov
sub
test
call
sub
repz
gs
or
ds
push
insl
fildll
arpl
xchg
jp
mov
and
in
jno
and
popa
pop
int3
lret
mov
dec
divl
xor
imul
xchg
xchg
or
or
sbb
fs
sbb
stos
xor
test
rcll
mov
aaa
push
jb
and
sbb
xchg
repnz
sarl
je
ss
jae
cwtl
decl
icebp
loop
je
scas
cs
jmp
mov
sub
popf
test
call
scas
cmpsb
orl
dec
sub
loope
bsf
mov
adc
cld
outsb
jnp
mov
nop
mov
icebp
in
sub
icebp
in
rep
inc
test
dec
mov
aas
cld
scas
mov
mov
clc
xor
into
jle
in
xchg
xchg
cmp
xchg
rorb
add
xchg
cmp
rol
rolb
faddl
add
cwtl
mov
inc
inc
es
aam
lods
sahf
loope
sub
fsubl
or
xchg
mov
je
mov
aas
ja
popf
cmp
pop
imul
rol
dec
add
in
jae
dec
mov
lock
mov
jae
fnstenv
sub
xchg
adc
xor
sbb
jns
cmpsl
popa
frstor
mov
icebp
inc
mov
rorl
jns
cs
mov
insl
daa
mov
iret
dec
loopne
push
loope
jge
xlat
pop
adc
loopne
dec
mov
push
fs
rcl
sahf
rolb
xor
in
jno
adc
in
into
xchg
push
jne
stos
fstps
cmp
adc
lret
popf
movsb
les
lret
pop
xor
aad
add
xor
cmpsl
mov
imull
cmp
leavew
sbb
adc
sbb
push
cmp
cwtl
jno
push
lods
xor
cld
clc
ds
int
ret
mov
fdivrs
popa
frstor
add
loope
or
adc
outsl
stc
or
sub
cmp
xlat
in
stos
faddp
ret
int3
jns
les
pop
mov
ret
push
inc
ljmp
gs
mov
imulb
out
nop
imul
jb
xor
add
in
sbb
lods
cmpsl
movsl
mov
loop
ss
sarl
ss
jo
mov
pusha
sub
push
mov
add
cmp
sub
mov
pop
iret
mov
xchg
mov
mov
mov
pop
cld
mov
cmc
scas
and
aad
ljmp
movb
fiadds
fstps
mov
mov
sahf
mov
stc
fildll
or
xor
shlb
imul
push
les
cmpsb
lods
lods
out
pop
adc
adc
pop
lea
jl
jle
and
jns
icebp
cmpl
inc
call
add
lock
loopne
enter
xorb
add
or
outsb
out
xchg
inc
push
aam
aaa
hlt
es
xor
repnz
or
lahf
mov
cmc
mov
inc
pop
push
add
repz
mov
iret
push
add
adc
xor
xchg
cmp
cmp
sub
mov
push
adc
ds
mov
jmp
lahf
jecxz
mov
adc
out
mov
rep
push
push
insl
add
popf
fistpl
cmp
xchg
testb
cmp
pop
sub
add
out
mov
or
fwait
xchg
adc
mov
mov
loope
xchg
aas
and
mov
jns
cmp
adc
xchg
dec
cmp
mulb
icebp
or
dec
mov
pushf
xchg
xchg
sub
loopne
shll
add
jmp
inc
add
mov
movsb
scas
into
ret
mov
jg
xor
leave
insl
out
jnp
test
mov
fwait
cmp
movsl
ljmp
xor
aad
cmp
lret
lods
push
inc
mov
data16
aad
dec
sub
or
push
scas
inc
inc
adc
lret
imul
sbb
cmp
jg
loopne
pop
mov
dec
repnz
sub
or
call
fmull
scas
les
lods
or
pop
das
push
out
xchg
ljmp
iret
push
inc
imul
out
out
leave
and
out
cmpsl
sbb
cmc
fildl
xor
jle
mov
adc
js
jle
mov
push
mov
cmp
iret
adc
gs
inc
adc
es
and
or
jmp
cmc
pop
mov
jp
mov
pop
pop
daa
sub
dec
repnz
pop
movsb
pop
loop
out
pop
inc
movl
mulb
or
pop
popa
xor
aad
std
or
mov
mov
mov
mov
ret
in
and
sbb
add
push
sbb
dec
or
repnz
push
dec
addr16
cmp
dec
test
adc
adc
xchg
aam
pop
mov
sub
fidivs
add
daa
outsl
mov
rcrb
ret
loopne
dec
mov
in
sbb
rcll
pop
leave
shrl
lods
mov
adc
ss
leave
dec
cmp
notl
ja
sub
sbb
lock
xchg
dec
cmp
jp
jg
in
dec
frstor
fistpll
pop
shll
fists
xorb
adc
sub
bound
add
and
int
call
cltd
fs
test
sbb
imulb
xor
xor
into
roll
andl
push
je
pop
pop
jg
or
jle
imull
mov
dec
mov
cmpl
jne
addb
sub
dec
test
push
insb
pop
jae
in
fwait
iret
data16
dec
adc
inc
push
push
add
stos
clc
std
dec
hlt
jge
lock
lcall
std
movsl
add
adc
popa
xor
mov
push
stos
dec
jns
mov
dec
xchg
int3
data16
divb
clc
insb
push
jecxz
sbb
popa
dec
push
je
aas
imulb
stc
jecxz
ret
scas
stos
mov
push
call
stos
fiaddl
repnz
es
jecxz
arpl
adc
sbb
aas
cmp
xorl
out
repnz
dec
cmp
call
in
dec
sbbb
jg
cmp
mov
into
les
push
cwtl
gs
mov
pop
xor
xor
inc
addr16
and
inc
leave
xor
pop
cmp
dec
mov
jbe
orl
rcrl
mov
enter
jmp
addr16
out
in
test
xchg
inc
lret
xchg
xor
imul
in
pop
push
std
int3
adc
or
js
aam
js
cmp
aas
movsb
fldenv
test
fwait
scas
inc
mov
std
or
cli
icebp
cwtl
dec
jbe
aad
cltd
pop
adc
xchg
and
es
sub
xchg
mov
arpl
pop
add
je
xor
cs
adc
pop
pop
jge
sub
and
mov
mov
movl
xor
imul
aas
push
fwait
cwtl
sahf
fs
jp
inc
push
sbb
jae
sahf
lahf
cmp
cmp
jmp
inc
xchg
ss
add
test
loop
call
int3
mov
cli
push
or
dec
add
stos
xchg
cli
dec
mov
pushw
imul
loope
mov
cltd
pop
cmp
push
cmp
and
jne
cmc
dec
jp
and
jg
jl
call
dec
sti
mov
mul
lret
lret
arpl
inc
in
push
mov
fistpll
cmp
adc
fimuls
jne
mov
int
aaa
dec
sub
mov
imul
mov
popa
lahf
lret
mov
leave
push
or
test
dec
leave
mov
sub
add
mov
lcall
lds
push
stos
or
popf
jnp
sub
mov
movl
lods
dec
popa
test
nop
fnstcw
or
mov
fcmove
or
call
out
das
mov
ret
xchg
pop
out
sarl
push
and
jae
sub
mov
add
dec
sahf
stos
adc
lods
scas
mov
dec
xchg
push
out
jo
pop
pop
enter
mov
mov
je
mov
clc
adc
jnp
and
ljmp
sbb
int3
sbb
push
xchg
stc
dec
add
fcmovbe
sub
xor
sbb
sbb
lds
cmpl
subps
adc
fwait
sbb
pop
aam
test
sahf
jle
xor
inc
xlat
div
frstor
ljmp
dec
cli
and
and
pop
add
xchg
and
fadd
add
notl
adc
ret
lret
mov
out
mov
std
dec
sbb
push
or
and
mov
or
push
pop
push
pusha
push
jne
int
cmc
shll
pop
test
ficoml
push
in
imul
adc
adc
cmpsb
push
pop
jo
in
dec
pop
negl
in
mov
mov
or
out
jge
rolb
in
push
jmp
in
sbb
push
sbb
lahf
jecxz
out
jge
mov
dec
and
mov
pop
in
xchg
adcl
add
adc
rcl
in
xchg
stos
push
ret
ljmp
xchg
push
nop
or
pusha
fidivrs
in
cmp
in
sbb
shlb
sub
xorb
pop
sahf
inc
ret
in
pop
popa
rol
jp
mov
inc
cs
stos
cmp
mov
jmp
in
sti
and
cwtl
mov
sarl
xor
mov
xchg
mov
insb
mov
pop
pop
mov
pop
xchg
add
lods
popf
data16
adc
mov
mov
dec
leave
jmp
xor
int
sub
popa
jecxz
sbb
fs
lock
push
xor
xchg
ss
int3
jl
stos
or
popf
xchg
and
lret
repnz
les
push
ret
mov
sub
xor
popa
ret
sub
ss
add
andl
pop
or
jp
sub
mov
sub
jne
mov
jno
xor
push
xchg
pusha
roll
adc
outsb
pop
push
movsb
fwait
mov
ret
or
jno
sub
movsb
push
xchg
xchg
lods
xor
js
daa
pop
pop
lahf
or
sub
sbb
xor
dec
arpl
xor
outsb
sbb
lret
loopne
jecxz
ss
mov
lret
mov
push
scas
int
fcoml
dec
jno
add
std
jmp
lret
out
in
push
and
lds
and
sub
test
xchg
fwait
dec
pop
gs
and
and
bound
imul
ja
push
and
inc
sub
decl
mov
movsb
and
stos
std
push
pushf
mov
add
add
push
cmp
jae
pop
dec
inc
xchg
push
rcrl
xor
stos
ret
push
in
iret
mov
lahf
add
pop
adc
decl
cmp
mov
aam
mov
dec
xor
int3
cmp
jo
das
xchg
icebp
outsl
xor
ret
ret
lds
fs
sub
ljmp
cmp
push
in
push
loopne
or
aad
cli
sbb
mov
adc
sbb
loopne
lret
arpl
nop
mov
adc
fbld
jne
xchg
rcrl
test
add
add
cwtl
push
mov
into
xlat
clc
pop
lds
push
sub
gs
xlat
mov
lahf
xchg
je
push
mov
add
dec
xlat
mov
cmp
pushf
loop
dec
out
inc
jl
in
or
lea
xchg
mov
lea
or
adc
stos
dec
test
and
inc
sub
mov
sub
dec
and
pushl
cmp
mov
add
cmp
inc
push
mov
hlt
fidivrs
subl
pop
mov
inc
das
and
and
and
test
adc
xchg
jnp
mov
mov
fsts
cmp
pop
out
push
imul
xor
ljmp
mov
mov
xor
mov
xchg
push
loopne
pop
inc
xor
mov
in
jl
cmp
mov
fnstenv
inc
sbb
in
add
lock
jb
fstpl
std
mov
dec
hlt
or
mov
sarb
sub
scas
mov
xor
xlat
xchg
cmp
inc
push
xchg
cwtl
dec
jl
aas
insl
pop
mov
mov
dec
jmp
and
insb
ds
cmp
jno
mov
mov
or
or
push
incl
add
inc
test
jno
push
rcrb
push
add
notl
sbb
ds
mov
loope
fcomps
jl
js
sahf
ret
dec
cwtl
or
and
in
mov
lahf
test
push
sbb
or
test
loop
fwait
ror
and
jmp
jno
in
sbb
inc
out
out
rorb
adcb
in
dec
lret
inc
cmp
pop
fisubrl
test
mov
push
or
pop
mov
jl
or
test
arpl
dec
mov
imul
andps
orb
jge
repnz
stos
das
icebp
gs
cmp
xchg
pop
xor
or
insb
cmpsl
daa
xorb
mov
into
adc
jb
jmp
add
dec
ret
jg
aad
adc
loopne
gs
sbb
lret
pop
shlb
in
jl
and
pxor
mov
scas
lock
sbb
ret
xchg
pop
push
dec
mov
adc
inc
mov
bnd
jmp
pop
and
fiadds
imul
mov
mov
adc
or
jbe
cmp
stc
fwait
ds
jge
and
lds
ss
jbe
jge
mov
mov
fcmovnu
sbb
mov
insl
and
insb
push
scas
adc
pop
clc
inc
push
jno
push
adc
or
movsb
sbb
data16
sub
add
or
jl
aad
aam
and
jbe
imul
pop
fimull
das
sub
inc
jno
rol
dec
in
and
add
cmp
sbb
clc
sub
jnp
jecxz
push
jae
and
jno
sub
stos
out
clc
sbb
fwait
jnp
movsb
aas
cmpsl
inc
das
cmc
popa
inc
scas
je
push
jmp
movsb
mov
and
jne
sarb
cmp
lds
shl
xlat
movsl
iret
sti
or
lahf
icebp
inc
adc
adc
je
nop
outsl
je
lea
js
mov
je
mov
cld
loop
imul
dec
lods
sbb
jbe
xchg
mov
test
sbb
pop
js
xor
mov
pop
cmp
push
inc
push
iret
mov
push
sbb
in
mov
dec
pop
sub
inc
lds
ss
and
mov
xchg
bound
sub
out
mov
ja
jo
add
int3
out
leave
and
cltd
mov
scas
mov
test
jo
cmp
inc
cmp
in
push
into
mov
xor
aaa
cmp
inc
lret
in
test
mov
nop
mov
inc
ret
ret
sbb
mov
inc
sub
repnz
mov
add
cmp
stos
fists
mov
push
xchg
in
sub
vpaddq
sub
in
cmp
mov
out
push
dec
js
iret
pusha
popf
jnp
mov
push
push
repz
cmp
inc
mov
xor
mov
pop
jmp
cmpsb
jp
adc
xchg
clc
out
cs
jmp
rcll
mov
sub
cmovg
insl
xchg
inc
jg
push
adc
add
push
or
popf
pop
mov
push
or
sti
xor
inc
mov
inc
cmp
mov
ja
ja
sbb
hlt
icebp
ret
sahf
xchg
cpuid
dec
test
mov
mov
jne
loop
fwait
mov
pop
xchg
mov
cld
mov
pop
loopne
adc
and
xor
ljmp
out
cmp
inc
xchg
movsb
add
cli
jecxz
jp
in
imul
mov
mov
bnd
popa
adc
dec
xchg
sub
dec
push
push
mov
inc
cs
or
dec
test
pusha
inc
es
pop
mov
flds
inc
sbb
cli
inc
adc
mov
adc
mov
sub
std
imul
insb
or
icebp
dec
add
cmp
add
dec
mov
pop
mov
sbb
sbb
adc
out
jg
aad
dec
mov
shrl
lcall
jne
xor
out
mov
popa
addr16
ja
push
push
adc
roll
mov
in
mov
sbb
fdivr
add
jbe
xchg
mov
lcall
jge
cmp
mov
mov
adc
outsl
neg
testb
lods
andl
cwtl
bound
xchg
mov
push
jmp
adc
mov
or
mov
sub
outsb
mov
sub
mov
jnp
mov
outsb
std
adc
push
xor
pop
mov
and
add
rcrb
mov
call
ja
std
adc
je
adc
sub
mov
adc
push
nop
inc
mov
inc
adc
aad
push
xlat
aas
xchg
loopne
and
push
jl
pop
inc
jns
jnp
lds
xchg
pop
mov
mov
mov
rorb
fsub
inc
into
xorb
movl
pop
outsb
stos
dec
shll
cmovp
mov
lcall
mov
out
cmp
insl
inc
fimuls
sbb
dec
mov
in
push
je
insl
cld
mov
std
and
dec
sete
xchg
mov
mov
repnz
xor
sbb
leave
mov
mov
stc
movb
adc
sbb
push
out
and
xor
cmp
sbb
or
nop
cmpsb
push
and
in
add
daa
js
int
mov
xchg
pop
es
nop
subl
push
pop
insb
je
inc
movsl
stos
lret
inc
inc
mov
lret
jp
push
dec
pop
and
movsl
bound
mov
cli
mov
mov
add
jbe
xor
cs
jmp
xor
fs
push
inc
xor
inc
je
pop
ss
daa
xor
dec
ja
xchg
lret
out
andb
and
xchg
test
mov
ret
xchg
pushf
mov
std
aad
adcb
aam
xchg
in
or
adc
dec
jl
sbb
sbb
fisubl
sar
stos
std
or
mov
aaa
adc
jle
in
cmp
loope
les
or
dec
nop
sahf
push
adc
xor
ret
shl
mov
das
pop
xchg
adc
adc
xchg
mov
mov
and
bound
test
pop
push
ret
mov
ror
add
xor
sbb
xor
scas
sub
outsb
divl
in
fcomps
cltd
push
jle
push
daa
lret
inc
outsb
sbb
sub
jns
adc
imul
das
or
outsl
sub
sti
jnp
test
cli
pop
xchg
push
out
rcr
dec
cmpsl
pop
cmc
aas
aaa
inc
dec
jecxz
xor
push
sbb
cmc
ret
test
adc
imul
dec
fldenv
aaa
out
sub
nop
sbb
mov
pop
out
adc
iret
aad
jp
xlat
rorl
xchg
pop
in
xchg
cmpsl
push
push
fwait
push
movsb
pushf
sbb
popa
cli
mov
mov
cmpsb
mov
ret
jns
clc
jbe
push
and
scas
das
inc
xchg
popf
lods
subl
cmp
fldcw
repnz
push
jecxz
jecxz
iret
add
mov
xlat
or
dec
mov
and
mov
inc
out
xor
lods
rorb
stos
jecxz
sbb
gs
push
fcmovnu
cmp
lret
aad
jmp
pop
ja
jmp
jns
cmp
ds
enter
icebp
add
inc
adc
icebp
inc
cmpsl
adc
dec
mov
lahf
and
and
jns
arpl
out
mov
in
mov
jae
pop
mov
xor
cs
sbb
cmp
leave
push
xchg
add
mov
repz
pop
mov
mov
jne
and
and
mov
xchg
inc
and
or
cld
mov
imul
pusha
stc
repnz
pusha
cmp
std
ret
mov
out
add
sbb
cmp
add
push
mov
mov
jns
hlt
test
mov
push
ret
jecxz
repnz
xchg
xor
pop
scas
pop
dec
movsl
mov
sbb
addr16
cmp
mov
jge
inc
stos
aad
out
in
sub
xor
push
into
jns
cmp
add
addr16
fldl
pop
and
test
add
repnz
fisttpll
cmp
fcoms
cmp
insb
dec
adc
rcll
mov
mov
leave
lds
and
sbb
add
push
dec
inc
xchg
mov
adcb
and
sub
jns
ljmp
inc
je
and
cs
pop
cli
ds
pop
dec
mov
push
ljmp
lods
fcoml
int
xchg
inc
popa
add
jno
inc
push
fdivrp
sub
fiaddl
iret
xchg
lret
dec
cmp
icebp
fnstenv
xchg
push
cmp
je
in
dec
pop
dec
push
fs
cmp
cs
xor
push
shlb
in
mov
cmp
push
mov
sbb
xchg
divb
es
sbb
mov
shrl
mov
add
out
pop
add
ljmp
outsl
sub
xlat
mov
adcl
movsb
xchg
dec
dec
jns
and
inc
insl
das
lea
cs
gs
or
xchg
adc
call
or
pusha
imul
jno
cmp
ljmp
data16
xor
stos
dec
loop
das
jmp
pop
or
pop
push
mov
aad
and
pusha
inc
cmp
sub
cmp
icebp
fs
cmpsb
test
leave
mov
imul
leave
jns
les
fisttpll
mov
iret
jg
lret
arpl
sub
repz
or
sti
movsl
jmp
sub
mov
xlat
push
xorb
ljmp
add
in
xor
or
pushf
add
cltd
hlt
cwtl
mov
fs
lds
xchg
pop
mov
pop
aam
pop
xor
cmp
xor
loope
push
stos
imul
arpl
sub
lds
cmp
dec
add
jmp
dec
push
pop
fldt
sbb
into
pushf
push
fcomi
xor
sar
xlat
jmp
xor
dec
fldcw
sbb
and
cmp
repnz
test
jo
xor
mov
mov
or
rcrb
dec
data16
std
stos
mov
bound
xor
sub
sbb
mov
pop
outsb
xchg
inc
cld
xor
gs
or
icebp
inc
jmp
push
or
arpl
lret
stos
cwtl
inc
xchg
nop
test
ljmp
subb
jmp
lds
push
mov
fadds
jnp
and
hlt
sub
in
sub
mov
js
cmpsb
das
pop
dec
push
and
push
mov
jbe
jae
bound
sarb
aaa
adc
pop
loope
sub
sub
lahf
mov
pop
cmp
test
mov
es
out
ljmp
popf
bound
pushf
sahf
push
cs
mov
jo
and
push
jge
adc
fisubrs
notb
out
sub
xor
cltd
jmp
out
push
mov
jge
push
mov
xchg
in
mov
pop
mov
mov
pop
xlat
scas
mov
sub
dec
push
out
dec
push
int
xchg
in
jg
push
xchg
outsb
jge
movsb
cld
data16
pusha
mov
jne
and
and
push
into
arpl
or
lods
std
call
pop
in
out
stc
dec
and
pop
push
push
xchg
cmp
fwait
popf
pop
xor
rorl
mov
shr
dec
mov
sbb
xchg
xor
or
roll
les
es
stc
insl
jl
jns
adc
adc
add
xchg
and
js
and
and
mov
lods
adc
push
push
jle
sub
dec
hlt
jno
pop
push
in
add
inc
jbe
ja
xor
nopl
dec
sbb
cmp
std
sbb
lods
jl
js
adc
shl
cmp
xchg
aad
je
mov
repnz
fs
push
out
adc
mov
out
out
aad
int
adc
and
jmp
or
cld
fnstenv
mov
cwtl
nop
inc
inc
jp,pn
pop
sarb
aam
enter
cmc
cs
hlt
mov
jmp
mov
dec
adc
or
inc
arpl
ficoml
pop
mov
bound
data16
cltd
add
aam
jb
dec
insl
mov
lock
dec
sahf
fists
pop
xor
sbb
leave
mov
pop
xor
lds
fldenv
mov
bound
pop
jae
in
fldcw
mov
add
cmpsb
dec
movsl
shl
add
sub
push
dec
dec
cli
add
xchg
rorb
add
cmp
jecxz
sub
jge
scas
popa
and
lods
pop
nop
and
hlt
sub
mov
jle
or
mov
les
test
pop
xchg
adc
mov
cwtl
sbb
push
lock
stos
shll
ds
ljmp
sarb
js
sarl
lret
dec
movsb
push
leave
inc
xor
fldcw
pop
sub
cmp
arpl
inc
inc
shll
mov
fs
cmc
add
shl
xchg
inc
push
into
adc
ret
pop
jecxz
cmc
jb
enter
aas
add
jne
test
xchg
xchg
scas
mov
sub
inc
fstpl
push
popf
add
aas
add
push
add
or
push
sbb
in
cld
es
lods
push
add
or
sbb
lret
std
fs
ror
dec
xorb
es
sbb
insl
and
xor
inc
aas
adc
aad
jmp
push
nopl
cltd
push
adc
je
mov
xchg
inc
jne
xchg
jbe
cwtl
adc
xchg
jb
dec
xchg
shrl
shll
cwtl
fistpll
jns
push
mov
dec
mov
in
cwtl
aad
lds
frstor
xchg
mov
jp
int
test
leave
nop
mov
outsb
xchg
sub
fsubp
cmp
mov
inc
into
sub
xor
add
push
jb
std
inc
cmp
inc
lods
add
cmp
rcr
mov
or
pop
lods
xchg
cli
xorb
mov
pop
push
pop
pop
lea
mov
pop
sbb
push
pop
cmp
aad
push
idivb
sub
loopne
pop
lcall
push
cmp
xor
imul
addr16
es
mov
sub
out
movsb
insl
add
ret
adcb
pushf
orb
mov
xchg
jp
and
dec
outsb
pop
dec
andb
lahf
xchg
mov
sub
dec
xchg
mov
pop
xchg
fidivrs
jle
or
xchg
push
nop
cmc
out
mov
xor
pop
jne
imul
xchg
jge
jge
addl
test
or
orl
popf
mov
nop
xchg
cmpsl
loop
mov
dec
mov
xor
repnz
movsl
xchg
sub
xchg
insb
jge
jo
lds
pop
stos
pop
aas
in
push
sti
in
stos
pop
in
xor
and
repz
data16
jbe
cmp
xor
or
jg
or
fsubrp
clc
inc
out
dec
xor
sahf
cwtl
add
cmpl
clc
rcrb
mov
sub
dec
dec
arpl
fisttpl
pusha
cltd
ja
sub
push
mov
bound
jmp
push
pop
into
sub
adc
mov
repnz
mov
mov
mov
data16
dec
push
movsl
add
and
jo
lcall
cmc
jnp
xor
and
xchg
xchg
out
int
stos
mov
fists
dec
aaa
or
push
lods
mov
je
pushf
and
xchg
mov
cmp
cmp
aas
and
call
lock
dec
mov
xchg
mov
sbb
and
fidivs
jno
fstpl
ja
pop
test
sahf
xchg
dec
cmp
and
cld
mov
insb
dec
add
test
int
mov
add
out
xor
and
or
lcall
dec
cmp
sub
xchg
pop
jb
xchg
mov
fists
jg
inc
xor
jmp
dec
jbe
xor
jo
jp
aad
mov
mov
or
scas
js
jecxz
xchg
dec
test
sbb
xor
popf
mov
xor
pop
and
pop
pop
cmp
fsubs
loope
mov
mov
or
jmp
icebp
subb
pop
das
mov
mov
imul
arpl
add
das
inc
xchg
clc
xchg
int
ljmp
or
push
aas
dec
into
jle
jno
lret
mov
pop
ret
xchg
lea
jns
mov
in
cltd
test
sti
adc
jbe
xor
dec
pop
aam
mov
test
lds
mov
mov
fsubr
jle
push
pop
sub
mov
lea
mov
test
inc
sbb
scas
sti
push
decb
push
lret
dec
loope
adc
and
int
cmp
fnstcw
fmull
cmc
or
sbb
mov
pop
pop
lret
pop
lods
jle
mov
mov
repnz
sbb
ds
xchg
jae
add
cmpsb
lcall
or
int
push
cltd
call
add
mov
push
fdivr
push
mov
fisubl
push
fadds
sbb
mov
ja
jbe
inc
or
enter
mov
inc
jecxz
jl
iret
in
jo
xor
out
decl
inc
movsb
daa
xor
movsb
aad
cmp
mov
imul
inc
rcrl
out
rep
mov
out
xor
scas
pop
ficompl
movsb
lcall
shlb
adc
xchg
addl
push
fbstp
dec
cmp
mov
mov
dec
shrl
bound
call
mov
xchg
adc
dec
jae
dec
stos
xor
sub
sti
repz
bound
je
sub
sbb
test
fbld
xchg
mov
xor
test
lds
push
xor
lcall
dec
iret
push
rol
pop
stos
andl
mov
hlt
pop
gs
xorb
pop
fs
test
cmc
xor
bound
incl
clc
pop
mov
dec
or
or
das
test
bound
xor
icebp
lret
or
mov
xor
sahf
inc
and
push
xor
shrl
xchg
stos
mov
sbb
aas
loop
and
cmp
inc
ljmp
or
fwait
out
and
sbb
add
jmp
push
mov
cmpsl
push
fcomp
sbb
out
mov
push
stc
sbb
mov
testb
cmp
in
fs
ds
test
mov
mov
push
and
push
arpl
lret
mov
jno
negl
adcb
mov
shrl
aam
aad
inc
test
addl
add
sbb
push
mov
push
repnz
lcall
std
mov
push
repnz
xor
mov
rclb
pop
dec
mov
cmc
cwtl
adc
xor
cmpl
addl
jle
and
in
pop
xor
sub
jp
xchg
sbb
hlt
push
push
ret
out
int
popf
mul
mov
mov
jp
lcall
test
sbb
xchg
clc
outsb
or
cwtl
dec
and
mov
ja
jae
shll
setle
mov
jno
push
ljmp
and
in
and
and
inc
aas
cmp
test
cpuid
sti
pop
push
sahf
push
test
stos
adc
mov
lods
testl
jno
rcl
xor
in
pop
pop
push
pop
inc
dec
fistpll
outsb
cmpsl
xchg
int3
pop
adc
inc
push
fs
sub
jnp
leave
pop
pushf
jl
inc
fadds
and
or
mov
outsb
add
mov
add
test
les
cltd
fldcw
dec
sbb
adc
lods
sub
ljmp
xor
jne
lret
adc
stos
sbb
cwtl
fwait
mov
test
inc
les
ret
hlt
adc
xchg
push
xchg
mov
mov
sub
dec
enter
in
mov
icebp
cltd
call
cwtl
icebp
pop
mov
lret
mov
dec
fcmovu
fwait
inc
cmp
jo
sub
mov
cmp
imul
imul
push
fsubl
loop
sahf
cmpl
sub
out
popa
cmp
inc
sub
jge
adc
in
dec
add
jmp
mov
insb
jl
add
fwait
addl
push
mov
stc
jg
shr
data16
gs
mov
add
mov
inc
test
dec
dec
fimull
add
xchg
je
outsl
xor
int3
mov
jp
and
xchg
cwtl
pop
pop
test
rcrb
stos
hlt
out
loopne
inc
xchg
pop
inc
jns
xchg
sub
adc
xor
dec
scas
xchg
lods
or
stos
test
xchg
scas
rclb
gs
sub
xchg
out
add
ja
inc
cltd
inc
xor
jl
imulb
and
aas
or
sub
inc
xor
jmp
out
insb
pop
cld
ret
cmp
xor
lret
loop
cld
stos
and
leave
jbe
loope
xchg
es
mov
mov
in
stos
insb
dec
cmp
pushf
loope
mov
lret
mov
add
mov
stos
mov
divps
add
mov
jmp
dec
sub
cwtl
inc
xor
imull
pop
shl
rcrb
test
aaa
in
ret
mov
fimull
xchg
mov
mov
mov
sbb
adc
xchg
mov
lret
mov
into
les
jo
imul
pop
inc
popa
imul
cld
xlat
test
in
lcall
sbb
push
fiaddl
addb
lds
mov
add
mov
pop
sub
and
mov
sub
fisubs
xchg
out
fisubrl
nop
and
jo
mov
shlb
fidivrs
inc
dec
pop
inc
mov
inc
insl
jp
mov
xchg
dec
xchg
mov
jbe
fwait
inc
pop
or
loope
mov
cmp
adc
addr16
fdivrs
mov
lret
dec
add
inc
rolb
sbb
shlb
jl
icebp
shl
xchg
push
jmp
fdivs
sti
arpl
xchg
mov
cmp
lcall
pop
lahf
cltd
out
mov
pop
jmp
pop
cwtl
push
push
mov
sbb
ficoms
push
test
pushf
push
inc
bound
fiaddl
push
sub
int3
inc
lods
sub
xor
and
cli
fnstenv
dec
idivl
sbb
mov
inc
pop
pop
mov
aas
xchg
or
mov
push
or
push
in
sbb
xorb
mov
inc
add
rclb
push
pop
insl
jp
jno
mov
loop
les
dec
add
shll
ds
inc
dec
fdiv
dec
mov
cmp
shr
aas
cld
cmp
and
sub
ficoml
push
dec
addr16
jne
je
rorl
lcall
sub
add
sbb
ljmp
add
xor
mov
xor
push
movsl
addr16
movsl
ss
dec
xor
pop
and
mov
mov
imul
add
xor
mov
xor
sub
sub
pop
xor
add
sbb
popa
xchg
repz
nop
lods
add
decb
gs
ss
sub
cmp
sbb
inc
dec
jne
xor
insl
mov
je
lods
jecxz
mov
add
ficomps
push
aaa
outsb
pop
cmp
mov
daa
cmp
call
add
lea
test
or
sbb
sub
lret
pop
call
gs
les
fdiv
inc
pop
jnp
insl
fidivrl
les
lret
xor
stos
mov
mov
mov
cli
in
adc
jnp
mov
mov
loope
lcall
pop
es
add
pusha
xchg
pop
cli
xor
mov
cmp
aaa
pop
adc
sub
cmp
adc
test
sub
outsb
cmc
call
fistps
in
neg
lret
mov
xor
mov
loope
mov
sahf
out
js
jb
push
shrl
js
and
loop
inc
mov
fstpt
enter
push
cmpsl
inc
jns
jmp
scas
out
lret
pop
fisubrs
addb
test
xor
shlb
jle
int
and
ror
test
or
mov
leave
mov
xor
stos
mov
cmp
mov
pop
or
pop
jae
dec
adc
pinsrw
imul
jge
mov
push
leave
dec
jmp
into
mov
cld
xchg
mov
sub
js
mov
xlat
mov
call
mov
pusha
insl
mov
add
ret
ds
and
lock
jecxz
cmpsb
sbb
repnz
out
cmp
iret
pop
roll
fists
shll
inc
sbb
xchg
lcall
pop
add
xchg
add
mov
jbe
jmp
cmc
mov
push
fcmovb
je
lcall
les
sub
xor
inc
hlt
and
rol
push
pop
faddl
loope
mov
test
mov
add
imul
push
push
pushf
push
sbb
rolb
ror
inc
pop
stc
aaa
adc
jnp
sub
inc
leave
mov
jge
push
das
dec
mov
mov
cltd
out
pop
jl
mov
add
mov
push
into
ret
stos
test
xlat
dec
andl
mov
iret
inc
mov
les
adc
imul
and
cmpsl
xchg
pop
imul
lock
out
xor
out
repz
inc
in
icebp
inc
and
add
lret
push
mov
pop
mov
pop
nop
and
repz
lcall
fistl
jge
out
ret
mov
jge
mov
ds
mov
add
fistpl
mov
sub
pop
pop
or
les
je
adc
mov
inc
into
xor
inc
inc
sbb
bnd
pop
hlt
pop
cmpsb
mov
mov
mov
roll
aas
xor
dec
sub
ljmp
and
daa
dec
adc
rcl
and
loope
in
sahf
test
in
and
shrl
mov
clc
les
pop
rclb
jno
pop
fists
mov
xchg
push
mov
addl
test
xor
movsb
cli
jb
les
and
stos
out
imul
push
add
insb
xor
movsb
pop
cld
add
or
inc
mov
xor
ficompl
mov
or
mov
push
out
into
add
mov
cmp
jge
mov
int
and
inc
cmpsl
loop
test
and
and
push
aam
mov
cmpsb
test
stc
fwait
sub
aam
out
lods
rorb
jl
or
je
movsl
mov
or
adc
xchg
pushf
mov
cmp
shll
daa
xchg
sbb
mov
movsl
ficoms
out
sbb
loopne
icebp
rol
xorl
push
dec
pop
cmp
inc
in
mov
ret
int
scas
dec
sub
rclb
mov
unpcklps
test
sub
mov
xchg
mull
mov
or
paddw
fiadds
push
cmpsl
js
xor
cmovge
xchg
push
inc
inc
xchg
pushf
movsb
mov
push
jbe
sahf
sub
jecxz
int3
push
daa
adc
cs
push
popl
mov
ret
push
test
mov
inc
lret
scas
aaa
dec
lahf
leave
adc
lods
shlb
movsb
es
fadd
loop
cmp
mov
popa
jp
stos
lahf
in
inc
shlb
mov
icebp
or
sbb
loopne
ret
cmp
lret
mov
cmpb
data16
out
scas
imul
mov
add
mov
inc
jno
mov
jno
sub
outsb
cmp
pop
clc
jp
je
add
dec
pop
mov
xor
loop
aaa
js
ficoms
cmp
sub
fistps
cmp
popf
ljmp
mov
cmpsb
in
loopne
rcll
pop
jb
add
ja
mov
testb
push
mov
sbb
push
sub
ss
adc
xlat
and
push
into
popf
inc
ficomps
insl
xchg
push
pop
cmc
jecxz
mov
stc
es
xchg
icebp
out
insb
out
dec
push
lret
aas
mov
push
inc
xchg
or
adcl
adc
mov
push
lock
cltd
cli
and
add
pop
mov
insb
aam
hlt
jmp
loope
push
fiadds
orb
inc
lahf
xchg
mov
rolb
dec
mov
sbb
insl
sbb
ds
and
mov
bound
stc
sbb
and
lret
stos
sbb
sbb
push
das
mov
mov
xchg
and
add
jns
outsl
popf
push
gs
pop
mov
adc
cmp
and
dec
mov
lret
xchg
inc
xchg
test
andl
lret
and
call
inc
aad
jp
cs
adc
enter
pop
mov
push
push
insl
pop
inc
insb
lods
cmpsb
popf
lock
data16
sarl
test
and
adc
out
mov
mul
repnz
mov
rol
gs
scas
cli
jmp
maxps
pmaxub
scas
stc
pop
xor
jge
add
repz
imul
xor
and
out
mov
cld
in
inc
cmp
mov
mov
sbb
imul
push
stos
sbb
test
jne
jno
scas
mov
jno
sub
dec
cmp
xchg
cmpsb
sub
push
fisubl
cmp
push
in
repnz
outsl
nop
int3
daa
andl
inc
cmc
je
std
inc
popa
stc
jmp
lret
mov
rcrb
aas
rclb
pop
flds
inc
insb
jno
dec
mov
ss
clc
cld
xor
in
std
dec
jo
push
mov
jns
sub
push
or
mov
inc
push
ret
pop
in
int3
sub
ret
int
call
inc
and
sub
ds
jle
pop
scas
loopne
pusha
or
xor
cmp
dec
incl
jl
loopne
inc
outsb
push
pop
andl
cmp
in
lahf
inc
mov
rcrb
mov
push
pop
out
adcb
cmp
rclb
data16
insb
push
repnz
push
push
dec
cmp
sub
dec
ljmp
stc
xor
cmp
out
hlt
lods
sub
insl
data16
out
adc
jmp
in
jno
pop
dec
mov
jo
ficoml
sub
jb
xchg
out
ds
mov
dec
daa
mov
or
sub
ret
std
dec
rcr
push
xchg
cli
pop
and
stos
scas
jp
cmp
testl
pushf
pop
adc
mov
xchg
lret
in
ffree
negb
out
stos
dec
lods
cwtl
faddl
loopne,pt
in
add
shlw
andb
mov
jecxz
hlt
mov
pop
cld
mov
dec
or
lcall
in
shll
jle
clc
sub
pop
or
sub
adc
and
push
jl
enter
mov
repz
mov
or
sub
cmpsl
add
dec
outsb
xchg
jnp
pop
fwait
test
sbb
adc
mov
push
lods
vhsubpd
movsb
adc
jecxz
data16
xor
in
fnstenv
cs
xchg
out
or
sub
cmp
or
pop
das
cmp
cmpsl
push
ret
jbe
sub
cld
jmp
cli
inc
pop
movsl
mov
mov
mov
sub
roll
mov
sahf
sahf
xchg
cld
push
mov
les
jbe
xor
cmp
dec
sbb
pop
dec
lea
jl
pusha
in
add
or
cmp
pop
addr16
adc
movsb
aaa
ds
out
mov
jmp
andl
and
in
push
pop
inc
aaa
and
inc
inc
cwtl
out
or
push
mov
mov
xor
cmp
les
xor
fmul
xchg
push
xchg
data16
imul
imul
pop
mov
cld
sub
sbb
cmp
xor
enter
repnz
sbb
or
jno
jbe
mov
push
sbbb
sub
test
xor
ret
and
dec
fs
dec
repz
pmullw
nop
add
push
iret
aaa
call
fnstsw
cmc
xchg
in
sahf
and
jle
cmp
pusha
jno
xor
and
inc
imul
popf
fldpi
or
cmp
stos
xchg
and
loopne
std
lock
test
nop
mov
stos
test
mov
lock
adc
push
lret
mov
addr16
inc
mov
pop
inc
daa
add
pop
add
push
sub
fstpl
cmp
pop
xchg
xchg
sbb
pop
out
testl
inc
call
mov
movd
sahf
stos
cs
xor
nop
dec
out
jbe
lods
lcall
fcmovnu
mov
jns
cltd
pop
jecxz
xchg
add
jb
and
push
fildll
and
push
popf
sub
jg
add
push
mov
push
jbe
mov
fistps
jmp
sti
aaa
inc
std
lret
jbe
insb
dec
mov
xor
sbb
or
int3
repz
pop
jmp
mov
cmc
in
fistl
pop
adc
outsl
in
mov
xchg
je
leave
ljmp
inc
test
ds
pop
ret
mov
sti
sbb
stos
stos
les
push
push
repnz
test
or
fcomps
insl
pusha
popf
cmp
hlt
pop
outsb
adc
mov
xor
xor
dec
insl
lods
mov
or
jge
pusha
out
hlt
divl
push
scas
pop
ss
adc
cwtl
ja
fsts
pop
out
add
jbe
into
pop
icebp
shll
push
cmp
xchg
jg
shl
mov
stos
jne
inc
and
insb
adc
dec
or
inc
mov
xlat
out
adc
xor
in
into
push
dec
cmc
sub
dec
cmpsb
cmp
push
push
dec
out
mull
sbb
enter
mov
or
pop
inc
xor
mov
and
mov
arpl
inc
push
jb
jp
and
xor
mov
mov
dec
inc
mov
int3
cld
insl
fcomip
aaa
jle
add
mov
scas
aam
test
gs
or
mov
dec
lods
xchg
ret
aaa
nop
adc
jp
mull
push
sbb
push
pop
mov
mov
sbb
dec
pop
xchg
leave
adc
lods
fs
and
mov
dec
stos
jl
dec
lret
imul
in
movsl
in
sub
push
test
aam
or
inc
mov
dec
loope
fwait
and
push
je
dec
lock
icebp
je
inc
push
add
cmp
mov
add
das
aam
test
sbb
or
fidivs
mov
test
xchg
inc
push
jp
loop
mov
jbe
lahf
jecxz
shlb
and
pop
imul
pop
rcrl
push
dec
lcall
lret
dec
inc
mov
lea
in
movsl
pop
inc
mov
fwait
stos
add
lock
fsubrp
adc
xor
xchg
out
sti
movsb
cli
sti
into
das
pop
lds
mov
mov
pop
pop
and
sbb
mov
mov
imul
jb
test
pop
in
or
std
sub
mov
bound
popf
stos
and
xor
xchg
and
adcb
push
and
xor
aas
mov
add
arpl
ret
push
dec
add
jle
inc
xchg
sahf
push
jge
mov
dec
pop
jp
xchg
imul
pop
adc
loop
adc
aad
mov
clc
dec
inc
pop
outsl
mov
cmp
push
insb
xchg
inc
and
adc
jmp
mov
mov
je
jo
and
addb
cmc
pop
sbb
mov
sbb
mov
insl
pop
call
xchg
sti
jno
cli
mov
jb
movsl
stos
das
insb
xchg
adc
cltd
fisubrl
pushf
in
js
jbe
sbb
nop
xor
inc
jl,pt
int3
inc
pop
int
jno
fsubl
xor
popa
dec
addl
pop
push
dec
xchg
inc
lock
mov
call
inc
data16
and
jmp
lahf
pushf
fs
add
test
inc
clc
jbe
stos
hlt
mov
xor
dec
xchg
push
lcall
push
lret
fsubrl
lods
rcrb
fbld
aaa
pop
dec
aaa
stos
out
iret
std
mov
pop
aad
inc
xchg
sti
xchg
xchg
gs
test
out
ss
push
and
jg
leave
jl
lods
ret
scas
mov
push
stc
jl
lret
jp
push
or
cs
cmp
pop
jnp
fcmovne
push
imul
test
inc
lret
mov
out
cmpsl
jge
pop
mov
stos
push
mov
aam
call
add
lret
jo
sub
les
repz
aas
in
jbe
sbb
or
cmp
insl
loope
sub
cwtl
adc
lods
stc
jns
mov
outsb
xor
sbb
mov
sub
lds
jnp
mov
iret
and
jnp
mov
inc
inc
add
inc
jp
aaa
push
add
add
mov
rol
leave
and
adc
clc
or
ja
cmp
outsl
mov
mov
add
sub
lods
insb
lahf
mov
setl
jle
movnti
nop
sub
mov
mov
movsb
mov
cmpsl
popf
imulb
mov
das
mov
inc
adc
sahf
xchg
lock
int
test
push
or
call
jg
sub
push
scas
cmp
jbe
mov
out
shll
lahf
call
sub
mov
mov
ljmp
test
cs
sbbb
xchg
incb
mov
sbb
xchg
aad
jg
mov
bound
add
mov
sub
mov
mov
int3
test
dec
push
mov
xchg
lret
in
jbe
mov
pop
pop
and
mov
xchg
jle
dec
pop
jl
xor
pop
jb
or
popl
and
mov
mov
mov
ljmp
push
sbb
outsl
ljmp
mov
fisubrl
xor
test
sbb
mov
sbb
mov
popa
test
lahf
fldcw
mov
jne
pop
pop
push
cmp
sub
daa
addr16
mov
xchg
inc
adc
scas
nop
je
xchg
test
or
push
dec
jnp
push
add
sbb
scas
or
xor
sub
cmp
out
addb
xor
dec
sub
in
jg
xchg
or
add
imul
test
sub
dec
push
out
movsb
out
or
push
cmp
xchg
pop
xlat
scas
mov
add
inc
pop
inc
in
add
cmp
cmpsl
mov
dec
mov
scas
jl
pop
repnz
add
cmp
lds
push
cmp
inc
pop
mov
loop
pushf
pop
mov
push
dec
addb
sbb
cmpsb
inc
push
std
inc
sbb
lea
cltd
inc
mov
imul
jg
mov
cmp
test
mov
shl
jge
xrelease
inc
in
adc
sti
mov
lds
clc
test
or
call
inc
mov
xchg
in
push
or
mov
xchg
sub
inc
jl
out
dec
ficompl
sub
xchg
mov
ja
leave
les
mov
test
mov
sbb
and
pusha
pop
mov
jo
leave
sarb
cmp
push
aaa
sub
lcall
xchg
repz
mov
test
jno
pop
jno
and
sarb
jne
les
or
cmpsl
pop
jno
mov
inc
ret
adc
jp
push
fs
mov
testl
cltd
int3
or
push
repnz
mov
and
std
sub
cmp
pop
lret
adc
sub
movsl
and
mov
or
out
mov
jge
xor
jmp
lahf
push
or
push
fistpl
cwtl
xchg
mov
lret
push
loope
add
cli
cmp
ret
cli
push
stos
fcompl
mov
sub
xor
mov
iret
cmp
jb
and
mov
movntq
add
xchg
cmc
push
xchg
pop
js
sbb
aam
and
xor
stc
adc
push
dec
clc
int
adc
daa
stos
sub
push
movsl
fwait
mov
cmpsl
mov
into
push
and
sub
fstl
xlat
inc
mov
in
xchg
in
pop
mov
cli
fcompl
clc
lahf
imul
push
mov
lret
add
je
xor
arpl
jae
sbb
into
add
mov
fs
xchg
jo
aas
lods
push
ds
aam
ja
fists
mov
mov
pop
mov
mov
popf
jbe
popl
shll
ds
or
push
pop
sub
xchg
sub
addr16
out
repz
orl
repnz
push
orl
jbe
arpl
arpl
mov
sbb
ljmp
int
je
xchg
push
in
pushf
xlat
nop
int3
dec
sub
mov
lea
dec
or
roll
xchg
mov
pop
cltd
adcl
dec
cltd
pushf
xchg
shrl
subb
int3
push
aas
cmp
cmp
lods
mov
pop
or
jbe
push
xlat
pop
inc
das
std
int3
mov
adc
adc
negl
pusha
stos
pop
push
std
mov
ds
mov
dec
inc
sbbl
adc
xor
mov
cmp
mov
adc
jbe
hlt
cwtl
jle
andl
popa
fmull
out
mov
test
xchg
daa
ret
imul
in
int
sub
daa
xchg
mov
sub
mov
shl
or
int3
decb
pop
cmp
into
mov
stc
push
mov
jmp
insb
insb
shrb
mov
dec
xlat
pop
out
pop
xor
jno
sbb
mull
dec
pop
rcll
popa
imul
fsubs
je
inc
rcrb
sbb
ficoms
je
rcrb
cmc
inc
loopne
stc
fistpll
push
cld
mov
imul
push
jbe
mov
push
cli
inc
dec
xlat
fistpl
cmp
jp
cli
mov
pop
jmp
lret
add
lret
mov
out
xor
push
add
cmp
adc
jns
movsl
push
aas
fiaddl
jmp
popf
sahf
sub
mov
cmc
addr16
lret
ljmp
rolb
addb
or
jl
es
or
jmp
add
scas
imul
test
pop
shlb
mov
add
jno
push
out
and
stos
xchg
mov
xchg
cmp
and
adc
or
mov
jb
insl
lret
in
xor
sub
jo
push
xor
xor
test
mov
inc
jo
out
mov
lret
lods
dec
loopne
push
fwait
push
repnz
les
ja
fsubrs
sti
xchg
fiadds
leave
addr16
cmpsl
rcrl
adc
cld
popl
jle
inc
ds
and
jg
in
jbe
mov
ss
repnz
fadds
cli
adc
jle
rcr
dec
pop
scas
sahf
daa
mov
jmp
sbb
paddq
xchg
sbbb
jo
pop
fistpll
lret
ret
or
mov
jno
es
fstl
or
cwtl
loop
cmp
mov
fmull
outsb
andb
cmpl
mov
push
hlt
push
fsubrs
aad
shlb
scas
les
insb
or
or
les
inc
addr16
sub
shlb
jmp
or
pusha
xor
sub
sub
into
sub
nop
insb
mov
in
movsb
mov
js
popf
mov
and
lahf
mov
or
adc
push
push
xchg
scas
cltd
mov
aam
shrb
sub
andl
call
xor
mov
mov
adc
popf
shrl
hlt
cmp
shlb
out
push
imul
pop
or
xchg
jle
scas
cmc
pop
mov
or
lcall
inc
xchg
and
rclb
mov
xor
push
mov
cli
cmp
in
pop
hlt
or
stc
pop
xchg
jns
call
mov
cmp
push
xlat
jp
neg
lock
dec
mov
push
movsb
in
test
jne
or
jmp
jge,pt
pop
fnstenv
hlt
add
jmp
aaa
dec
shr
loope
mov
scas
cs
addl
jmp
mov
ds
dec
call
gs
stos
stos
cmp
and
js
dec
push
xchg
or
xor
push
push
rcrl
sbb
and
jle
repz
mov
dec
push
mov
push
jle
lret
cmpl
pop
push
sub
sub
outsl
or
cmc
mov
ret
inc
pusha
add
sbb
movsl
adc
push
xor
cld
xchg
in
iret
push
ret
jmp
mov
pop
leave
mov
sti
adc
pushf
xchg
jecxz
cwtl
out
ja
fists
scas
mulb
std
clc
icebp
mov
movsb
cmp
addb
std
rolb
pushl
pop
dec
or
aas
int3
les
outsl
sub
push
mov
subb
sub
push
ret
sbb
mov
jb
xlat
scas
xor
dec
insb
out
push
iret
or
call
sbb
jb
sub
mov
cmp
pop
popf
mov
sub
cmp
cld
xchg
jnp
mov
sbb
and
mov
ffree
mov
or
xchg
and
jl
jmp
rcll
into
dec
lahf
fsts
xchg
leave
lcall
add
lret
mov
shll
mov
mov
cmpsl
push
mov
jbe
sub
negb
sub
call
roll
push
xor
pop
movsb
sbb
leave
lcall
jnp
jb
xchg
pop
cwtl
int
rorb
inc
out
jae
xor
sub
mov
sub
popf
xchg
push
and
movsl
pop
aad
daa
int3
mov
loop
icebp
in
sarl
es
call
xchg
imull
addr16
int
xchg
pop
sbb
les
mov
mov
scas
das
lea
sub
sub
ret
inc
rorb
xor
mov
loop
sbb
xor
test
test
jns
sub
add
ljmp
aas
ficomps
sub
jbe
popf
shlb
in
cli
mov
mov
add
add
popa
jp
test
pop
jp
push
xchg
dec
enter
dec
pop
and
sbb
sub
lret
sub
fcoml
cmp
repz
mov
cltd
stc
xchg
popa
lock
sub
jmp
dec
loopne
xchg
cmovl
mov
mov
pop
lret
adc
inc
inc
jae
fdivl
sub
or
daa
and
mov
andb
or
dec
mov
repnz
xor
mov
scas
pop
fcoms
divl
push
fidivl
and
cmp
pop
inc
in
mov
lahf
pop
aam
sahf
iret
xchg
lock
cmp
int3
xchg
shll
push
rol
pushl
or
inc
mov
sti
ret
imul
xor
xchg
mov
hlt
leave
or
ret
cmp
arpl
xor
jmp
cltd
fst
stc
mov
xchg
jmp
sbb
xlat
sbb
bnd
cmp
jo
jmp
ja
cli
subl
sub
aas
mov
out
loop
dec
cs
repnz
dec
mov
cmp
push
std
in
push
sub
sbb
sub
lret
lods
xchg
lds
xchg
dec
dec
mov
outsl
sub
leave
stc
pop
push
sahf
and
mov
mov
subb
xchg
aas
ret
lahf
imul
pop
notl
add
pop
lcall
adc
xor
lcall
mov
mov
add
aaa
pop
pop
add
push
sub
jge
popf
ds
push
loop
sub
dec
adc
es
fdivr
jge
lea
xchg
rorb
gs
dec
enter
lds
add
add
data16
rclb
arpl
clc
lret
idiv
xlat
outsl
push
pop
fmuls
sub
rcl
push
stos
dec
dec
mov
es
xchg
lods
into
std
mov
lods
pop
and
sbb
sbb
or
push
sbb
negl
mov
jmp
jnp
push
fsubs
ljmp
test
mov
push
push
test
loopne
loopne
mov
mov
push
pop
push
iret
and
fcomip
push
mov
lret
aas
aam
mov
add
adc
stc
es
xlat
clc
push
imul
mov
mov
negl
testb
push
push
add
aam
cmp
outsl
cmp
es
shrl
push
scas
pop
mov
mov
add
xchg
xchg
loope
mov
daa
icebp
cmp
dec
daa
or
push
push
jb
scas
jb
sub
mov
xor
bound
fwait
xor
cs
xchg
mov
cmp
add
outsl
mov
stc
sbb
leave
fstpt
sub
sbb
mov
popa
and
or
int3
mov
cmp
mov
mov
sbb
fstpl
shr
movsl
cmp
push
je
sbb
pushf
add
icebp
jmp
mov
fsubrs
mov
xor
clc
fcomps
push
xor
push
and
jne
sbb
inc
xchg
outsb
push
rolb
jle
cmp
mov
or
xchg
mov
and
das
push
push
icebp
outsl
outsb
mov
cmp
stos
cmp
add
fmuls
or
pop
xorb
mov
mov
mov
call
jbe,pt
add
lcall
adc
scas
aaa
dec
fsubrs
dec
pop
sti
pusha
incb
out
fcomps
mov
mov
mov
pop
push
outsb
jbe
stos
push
xchg
xor
or
repz
push
cltd
fdivs
aad
lret
or
jg
mov
lds
sub
test
rolb
inc
pop
daa
mov
lds
push
fnstsw
xchg
dec
insl
cmp
gs
pop
pop
subl
mov
sub
xor
in
jb
xorl
call
push
es
das
lahf
test
xchg
xlat
mov
aaa
mov
xchg
js,pt
mov
mov
mov
das
fwait
cmp
fistpl
mov
adcl
jbe
mov
nop
pop
daa
jge
mov
sbb
mov
shlb
add
push
test
pop
loop
push
pop
inc
cmp
sbb
add
add
inc
jo
mov
movsl
sbb
dec
xor
stc
mov
dec
fsubs
push
mov
out
cmc
rol
ficomps
sub
cmp
icebp
lods
push
imul
inc
and
mov
sub
mov
lret
aas
and
push
adc
mov
jp
sbb
push
popa
or
lods
outsb
arpl
js
hlt
jae
xor
add
push
mov
outsb
sbb
rorb
icebp
jmp
mov
push
xchg
mov
xor
lcall
rcll
xor
clc
lret
xchg
xchg
jb
mov
pop
dec
pushl
or
adc
pop
orl
nop
aaa
xchg
xor
sbb
outsb
les
shlb
mov
jae
inc
inc
lds
test
push
addr16
sub
jmp
sub
stos
fstl
out
negl
jl
lock
xor
or
iret
inc
testb
lcall
and
push
dec
dec
push
dec
mov
std
jg
add
inc
call
fsubr
sub
nop
scas
stos
sub
ja
jmp
enter
shlb
inc
push
pop
test
dec
cld
loope
fldcw
dec
out
ret
cs
repnz
dec
or
push
push
pop
ljmp
ds
or
push
or
push
xchg
dec
into
fs
call
dec
mov
loopne
mov
stos
inc
fisttpl
xchg
lds
sahf
das
popa
arpl
js
xor
and
xchg
add
dec
adc
popf
dec
rorl
push
lcall
out
mov
and
in
jmp
mov
aam
insb
test
pop
into
aas
ljmp
xlat
pop
out
pop
jmp
sbb
inc
out
cld
xchg
dec
add
xchg
pop
or
ljmp
arpl
add
shll
mov
clc
decb
jecxz
push
dec
jno
sub
inc
mov
stos
mov
nop
dec
cmp
adc
addr16
test
inc
test
add
aas
mov
or
mov
mov
jns
xor
mov
dec
inc
pop
rcrb
pop
mov
mov
mov
sub
icebp
mov
fsub
test
lods
inc
mov
nop
and
int
sbb
add
or
imul
test
lret
clc
jmp
pop
in
test
test
add
mov
stos
mov
pop
test
mov
lea
ss
sub
repnz
mov
cmpsb
mov
jbe
xchg
jecxz
outsb
lds
test
dec
or
repnz
xchg
mov
and
cmp
xor
iret
pop
xor
stos
adc
push
enter
jge
lods
mov
aas
xor
adc
adc
testl
in
dec
scas
cltd
sbb
sti
je
fistpl
mov
dec
adc
mov
pop
mov
loope
js
dec
jecxz
dec
push
add
push
jmp
mov
cmp
inc
jg
scas
stos
inc
fcmovb
scas
hlt
dec
movsl
or
push
pusha
sbb
popa
mov
sarb
pop
add
mov
rcrl
je
mov
inc
and
mov
add
hlt
dec
inc
popf
and
into
cmp
sbbl
imul
enter
adc
lods
push
mov
sbb
inc
mov
or
shl
add
in
mov
xor
leave
loopne
popa
vmovsd
and
mov
insb
jl
ret
mov
sub
or
or
lods
in
int
mov
js
mov
movsb
cmpsl
and
ret
in
and
cli
cmp
xchg
lds
mov
and
stos
xor
dec
lds
sbb
cmpsl
out
jb
pushf
movsl
lods
stos
or
inc
sub
cmp
out
jecxz
test
rcrb
jbe
mov
add
mov
push
data16
pop
dec
xchg
mov
xor
out
dec
push
cmc
test
call
xchg
jne
dec
sub
ss
push
xchg
xchg
mov
dec
dec
out
jmp
jns
mov
jo
jecxz
scas
fistpll
shll
loope
call
adc
inc
cwtl
push
xor
lret
filds
jns
hlt
adc
dec
pushf
jnp
cmp
int3
dec
sub
test
pop
adc
jle
push
aad
shl
or
sub
test
into
or
adc
daa
dec
clc
mov
dec
cmp
or
cmp
inc
icebp
testb
cmpsl
inc
or
ljmp
mov
mov
data16
das
cltd
testb
int3
icebp
jno
push
rolb
adc
push
push
outsb
jno
shrl
sbb
dec
mov
push
pop
or
sbb
dec
inc
ljmp
icebp
lret
adc
hlt
mov
xchg
lret
xor
jle
sahf
jmp
sbb
sbb
and
lcall
nop
mov
push
add
add
fstpl
movsl
lahf
or
hlt
and
out
add
mov
cmp
push
mov
int
int3
lea
cmp
lret
add
mov
add
dec
imul
cld
ds
nop
mov
cld
aaa
test
mov
js
cli
adc
and
sbb
mov
dec
test
fcmovu
fisubrl
ljmp
and
xchg
inc
add
push
roll
jp
loope
adc
out
add
xor
xor
subb
push
arpl
cwtl
or
out
clc
sub
or
pop
lock
cmp
xchg
xlat
mov
addr16
pop
loopne
sub
cmp
xlat
and
push
sti
fadd
dec
mov
jge
dec
nop
push
int3
je
pop
enter
enter
push
test
push
mov
jg
sbb
pop
into
data16
sbb
push
int3
loope
fidivrs
add
lea
mov
loope
sti
or
xchg
mov
insb
in
dec
pop
pop
push
cwtl
in
sti
jns
push
fisubl
inc
sbb
push
loop
loopne
push
add
cltd
in
mov
insl
mov
jp
or
lret
mov
jg
mov
sbb
in
gs
and
repnz
sub
pushf
sbbl
xlat
mov
stos
pop
fwait
add
test
das
push
add
imul
test
hlt
repnz
push
and
insb
push
out
scas
inc
xchg
xor
xchg
mov
cmc
pusha
iret
test
stc
cmpsb
scas
jp
ficoml
sbb
xorb
xchg
push
or
pop
and
repnz
std
mov
adc
shll
xor
stos
jne
mov
xchg
sub
scas
pop
mov
mov
xorl
faddp
mov
inc
cs
sub
sbb
mov
xor
xchg
add
repz
inc
das
sbb
cmpsb
gs
mov
test
inc
pop
out
or
adc
push
mov
or
stos
adc
or
and
clc
testl
lds
inc
ror
jbe
dec
arpl
push
xchg
or
mov
loop
js
pop
mov
cs
add
sub
adc
scas
push
aas
das
dec
add
xor
icebp
push
js
mov
mov
mov
jp
sbb
sub
adc
xlat
gs
jge
andl
cmpsb
inc
and
cmc
or
xor
mov
out
add
push
xor
sub
dec
add
mov
mov
loop
xchg
add
mov
mov
shlb
mov
jb
mov
lcall
add
into
insl
inc
lods
sbb
xchg
out
mov
mov
adc
es
mov
push
mov
lock
xchg
test
frstor
push
cwtl
outsl
jno
add
leave
jp
pushf
fdivs
dec
cmp
push
jo
add
sub
push
aaa
fstpl
sub
repz
push
sbb
les
xchg
lods
xadd
jbe
inc
push
inc
add
pop
sbb
mov
lods
into
mov
mov
fsts
cmpsb
jmp
movsb
fsubs
mov
insb
add
mov
jmp
les
jmp
xor
movsb
mov
cmp
pushl
cld
push
mov
stos
push
mov
sbb
mov
into
in
lcall
ss
dec
push
inc
jb
mov
cwtl
sbb
jns
sub
mov
inc
ja,pt
sti
into
notl
pusha
icebp
es
cmpl
push
push
shlb
jmp
jbe
stc
mov
adc
xchg
ret
sti
or
sbb
pusha
pop
adc
mov
pusha
pop
je
mov
push
sti
sub
xchg
gs
add
push
jbe
je
sub
sub
pop
fsubs
sub
loop
xchg
ds
fmuls
jb
pop
stos
adc
call
leave
adc
cmp
ljmp
and
lods
xchg
inc
jne
out
jecxz
xor
sbb
or
sbb
scas
test
gs
fsts
mov
jl
insb
fimull
push
dec
mov
or
inc
js
imul
xchg
ljmp
jecxz
sub
adc
rcrb
repnz
and
seta
jbe
or
fisubrl
adc
inc
imul
pop
xchg
call
and
adc
aam
cmp
icebp
pop
fldt
cmpsl
clc
fwait
lret
loope
push
data16
jo
nop
or
jb
push
pusha
psubd
pop
imul
adc
test
cltd
push
jmp
shll
lret
add
jbe
push
mov
cmp
gs
lahf
enter
lock
jne
jge
ret
xchg
inc
sub
mov
jbe
cmp
adc
lods
sbb
je
stos
mov
mov
mov
xchg
jg
rcrb
xchg
add
insb
je
pop
aad
cmp
repz
jae
push
jg
outsw
call
push
ss
out
repnz
xchg
nop
aaa
jb
mov
in
mov
addl
lds
add
bound
push
notb
dec
xchg
jbe
jae
inc
adc
pushf
fildl
gs
movsb
sub
cmp
pop
jb
or
pop
cltd
movsl
sbbb
hlt
pushf
sbb
add
adc
fistps
sbb
mov
in
sbb
test
cmpsb
movaps
cmp
sbb
mov
int
pop
mov
stc
adc
movsb
cld
data16
mov
fidivrs
ljmp
mov
adc
adc
test
movsb
lcall
testb
movsb
sub
pop
addr16
movsl
dec
xchg
std
cmp
idiv
and
int3
popa
cli
push
or
sbb
std
inc
inc
and
or
cmp
out
cmpb
xchg
push
out
sub
mov
loope
outsb
pop
and
dec
xor
push
sub
xlat
push
fadd
inc
push
arpl
les
sub
sbb
jo
mov
in
jo
out
inc
popa
ret
mov
xlat
pop
cmp
loop
outsb
and
scas
lds
loop
pop
out
xchg
xchg
bound
pop
mov
mov
xor
jecxz
add
dec
dec
jbe
out
cmp
sub
mulb
cmp
movsb
jg
outsl
inc
adc
daa
jecxz
mov
lea
xor
pop
stc
out
dec
shrd
sub
add
pop
push
add
and
dec
cmp
cwtl
popa
notb
sub
ret
rep
sub
outsb
aad
ljmp
dec
in
mov
movsl
cmpsb
pop
jae
add
sbb
jno
push
insl
testl
jo
and
inc
lods
imulb
rcl
pop
cld
lahf
cmp
dec
adc
adc
inc
pop
in
int3
imul
fdivr
leave
xchg
cld
mov
xchg
fidivl
rcrl
adc
xor
pop
jp
xchg
pop
lods
xor
stos
xor
dec
pop
rcr
push
iret
gs
cmp
and
outsb
pushf
outsb
cmpsl
loop
aaa
icebp
push
stos
test
xlat
imul
mov
mov
pop
jg
push
icebp
out
cmpsb
sub
sub
iret
call
xor
pop
ljmp
mov
xchg
and
orb
inc
test
jnp
fsub
imul
stos
jne
dec
mov
movsl
aam
test
hlt
push
cmp
jnp
sbb
and
jbe
cmp
gs
stos
mov
pusha
test
jp
aam
rorl
inc
xchg
jmp
ja
mov
push
lret
out
test
xor
add
fadds
shl
dec
lods
dec
push
test
push
cmpsl
scas
adc
mov
mov
xchg
mov
mov
ja
pop
movups
mov
test
arpl
jae,pt
mov
sbb
mov
ljmp
fcomip
pop
push
lahf
adc
mov
fadds
loopne
push
scas
fmull
inc
lret
popa
enter
bound
divb
arpl
hlt
inc
xchg
mov
das
inc
dec
jp
mov
xchg
sti
in
pop
mov
jecxz
aaa
test
aad
inc
es
push
sub
add
loopne
pop
cmp
jmp
sub
and
addr16
push
shl
mov
mov
sbb
popa
cmc
xlat
mov
in
int3
loope
aam
fst
xchg
push
popf
push
xchg
mov
movsl
aaa
popa
les
add
out
xchg
jnp
scas
mov
int
sub
imul
mov
mov
popf
lods
sub
pop
data16
mov
outsb
in
cwtl
test
fsubr
inc
out
sub
jno
cwtl
fisubs
sub
fldt
repnz
stos
xchg
sub
ljmp
xchg
imul
ds
xchg
mov
dec
and
mov
jecxz
out
jp
xchg
mov
call
add
jl
stos
call
push
xchg
imul
shlw
int3
icebp
mov
xlat
into
and
aaa
decb
loop
sub
dec
jp,pt
xchg
ds
rorl
xor
add
inc
ret
pop
sbb
stc
leave
repz
fisubrl
mov
mov
jp
xchg
repnz
movsb
enter
or
mov
inc
testb
test
pop
outsb
cltd
aad
jg
push
rcrb
fsubs
out
push
dec
dec
xor
dec
push
fidivrl
mov
jo
cmc
in
lock
decb
push
shlb
adc
in
cmp
inc
jb
dec
sti
das
arpl
add
or
shl
or
or
int
aas
ja
mov
jecxz
and
ror
adc
out
jge,pt
loop
fcmovne
xchg
das
shrl
es
out
inc
out
test
std
cld
sahf
or
or
not
sub
rdtsc
in
dec
mov
inc
inc
jbe
xchg
stc
lret
nop
mov
mov
fsubrl
xor
aad
xchg
clc
aas
push
out
add
pop
and
mov
aaa
adc
ja
adc
lret
std
cmpsb
clc
mov
gs
es
ja
xor
into
push
divb
mov
xor
pop
add
fistpl
mov
addr16
loope
int3
xor
sub
adc
mov
mov
mov
mov
mov
mov
xor
mov
and
or
xchg
cld
jg
mov
or
and
scas
popf
mov
cmp
adc
aas
adc
les
int3
std
jle
aaa
pop
aad
fisubrl
mov
add
mov
and
mov
mov
sbb
subb
in
bound
sti
adc
insl
jl
or
movsb
insb
dec
sbb
sti
xorb
push
fs
mov
test
pop
or
in
jmp
cmp
and
pop
insl
out
hlt
rorl
out
add
jnp
mov
push
inc
les
or
sub
xchg
adc
movsl
mov
pop
test
jp
or
scas
scas
mov
add
adc
enter
shrl
imul
add
loope
mov
and
lcall
dec
testb
fistl
lds
cmpsb
in
int
jne
and
xchg
outsb
jb
stos
enter
xor
daa
cwtl
pusha
push
dec
jl
scas
repz
test
nop
popa
lret
sbb
shlb
addr16
sbb
lea
test
lods
mull
out
adcl
cmp
sbb
cld
out
subl
xor
mov
aaa
cmc
pop
or
xor
mov
inc
mov
inc
js
sbb
pop
sbb
push
loop
mov
adc
and
sub
das
pusha
icebp
cli
div
inc
cld
into
aam
jecxz
push
outsb
imul
mov
inc
mov
xor
rorl
cmpsl
jo
xchg
pusha
sbb
dec
arpl
scas
insb
mov
jnp
push
push
add
shld
subl
push
push
push
fs
and
sahf
inc
push
xor
roll
scas
in
lods
sub
hlt
and
sub
gs
stos
xchg
jmp
cmp
sub
out
loop
hlt
fwait
mov
lcall
lods
loope
sbb
lods
or
fstpl
addr16
loopne
ss
push
mov
mov
cli
ds
xchg
jns
mov
aad
int
lret
inc
and
pop
cmpsb
cld
and
pop
inc
pop
sub
and
xchg
mov
inc
lcall
jns
and
jecxz
push
push
stos
pop
js
ret
cvtpi2ps
xor
xchg
testb
mov
add
jl
loope
cmc
cmp
push
testl
cmc
insb
dec
pop
and
or
cwtl
jl
xchg
bound
xorl
push
dec
xchg
adc
add
inc
inc
inc
pop
scas
orb
nop
scas
cltd
inc
ljmp
xchg
push
les
fimull
jge
push
pop
cli
stos
xchg
scas
cmp
shlb
jae
rolb
adc
test
adc
fdivl
cs
xchg
stc
dec
add
push
jge
jecxz
cli
jge
ror
mov
or
out
mov
stc
sbb
push
loope,pt
icebp
jecxz
push
push
or
xchg
sbb
lods
mov
jge
jo
jmp
mov
pop
adc
jbe
dec
stos
daa
or
jnp
cs
jno
outsb
add
xchg
add
testl
pushf
mov
movsb
js
inc
pop
movsb
in
stos
iret
imul
or
pop
int
pop
int3
jnp
add
imul
pop
pop
shrb
insb
cmp
inc
ljmp
mov
roll
jns
sbb
jg
xchg
lods
popa
imul
or
and
mov
adc
out
dec
ds
pop
ja
inc
pop
push
mov
cmp
leave
loopne
dec
cwtl
inc
mov
jns
out
fistpll
in
push
ds
jp
pop
add
mov
push
or
loop
test
lock
mov
in
and
inc
enter
fsubrs
fildll
push
lods
sub
mov
call
push
mov
sub
out
sbb
push
add
cmpsl
jmp
test
vrcpps
add
inc
pop
jb
pop
dec
xchg
add
pop
xor
imull
jle
jo
andl
nop
xor
std
pop
inc
pop
mov
scas
push
shlb
scas
out
inc
loop
mov
cmp
aas
fwait
out
mov
xchg
fwait
sub
into
lret
dec
lcall
movsl
shll
sub
imul
cmp
jl
cmpsl
sahf
xchg
sbb
popf
pop
cmp
sti
mov
inc
inc
mov
mov
add
lcall
popf
pop
adc
sub
add
pop
mov
push
adc
sbb
mov
xchg
out
pop
insl
mov
or
jnp
shl
shlb
pop
adc
and
std
mov
push
inc
aaa
mov
cltd
bound
mov
inc
adc
idivl
stos
nop
mov
outsl
dec
movsb
adc
das
xchg
stos
dec
xchg
sub
cld
jns
and
lret
mov
and
mov
push
cmp
stos
loopne
mov
and
mov
frstor
xlat
sub
into
dec
mov
es
outsl
outsl
jmp
adc
lods
mov
fcomps
mov
les
xor
dec
or
ret
jbe
add
mov
cwtl
mov
sub
inc
std
lds
cmp
jnp
adc
adc
pop
aad
pop
add
add
cmp
outsl
jnp
nop
adc
dec
in
fsubs
dec
ret
jp
inc
in
xchg
mov
xchg
sbb
adc
xchg
push
cwtl
xor
rcrl
inc
lods
pushf
shl
inc
pop
in
mov
sbb
push
mov
xor
mov
add
push
arpl
inc
mov
rcrb
mov
cmpsb
xchg
push
add
add
cmpsb
loop
push
inc
stc
xchg
dec
aam
rclb
xor
mov
push
lahf
mov
dec
test
mov
pop
xor
andb
and
sbb
mov
test
add
push
sub
out
dec
xchg
dec
xchg
js
out
and
adc
xchg
push
into
and
imul
sti
cli
cltd
test
sahf
sarb
pop
rorb
sbb
andl
xchg
scas
movsb
movsl
jnp
cmp
test
cmpb
les
push
pop
jle
add
jns
mov
pop
add
in
cmpsb
lds
ret
xchg
inc
pop
or
jp
xor
sub
lret
push
fwait
push
push
cmp
lcall
mov
inc
test
mov
dec
ljmp
mov
cltd
sbb
cmp
imul
add
shl
sub
dec
outsb
mov
aad
cmp
stos
int
gs
lcall
mov
inc
fnstenv
lea
mov
cwtl
mov
jge
movsb
mov
enter
sahf
stc
inc
pop
cmp
flds
mov
push
jnp
add
pusha
adc
cs
in
das
and
scas
mov
add
mov
xchg
add
push
jmp
jae
xor
dec
mov
test
popa
add
cmp
lret
add
push
gs
test
pop
fnstenv
inc
mov
cmpsb
and
adc
jb
loopne
pushf
enter
mov
or
mov
pop
xchg
stc
pop
push
adcl
jmp
jo
and
ret
mov
xchg
jne
sbb
adc
lret
adc
into
lods
or
clc
incl
fildl
aaa
popa
or
fwait
push
cli
push
imul
std
mov
cmp
xchg
or
out
and
ret
add
scas
repz
ret
scas
sti
imul
ret
mov
shlb
mov
popf
fists
addr16
dec
or
mov
xchg
clc
scas
cmp
cmp
cmp
add
lahf
insl
inc
xchg
adc
int
adc
push
dec
insb
dec
dec
cld
cmp
sbb
cmp
outsl
adcb
add
pop
enter
pop
sti
cmp
mov
mov
xchg
arpl
hlt
inc
lds
mov
add
xor
aam
xchg
add
adc
mov
rcrl
mov
cs
test
pop
mov
mov
push
pop
push
jmp
bound
out
test
into
jb
jb
xorl
dec
jmp
inc
leave
test
lret
pushf
mov
xchg
mov
pop
adc
mov
lahf
sub
insb
mov
jle
stos
jnp
push
mov
divb
cs
adc
pop
mov
dec
cli
std
aad
push
xchg
dec
sbb
push
lods
xlat
sbb
repz
push
pop
dec
pushf
ljmp
xor
or
add
sub
in
mov
or
adc
lea
enter
push
jo
dec
fildll
subl
xchg
daa
adc
scas
cltd
int3
mov
jp
xchg
in
mov
add
or
xor
dec
jl
cltd
ret
jle
lods
and
cmpsl
in
dec
daa
imul
lock
fistps
xchg
jg
push
xlat
neg
aam
push
lret
xchg
lds
sahf
lret
inc
dec
fstps
add
and
push
fnstcw
push
out
lea
ret
adc
loop
imul
test
outsl
and
out
adc
or
fdivrs
inc
sbb
pop
inc
dec
pushf
push
enter
call
setle
stos
xchg
inc
xchg
pop
loop
mov
insb
push
lret
fadd
mull
mov
daa
jp
out
scas
loop
mov
push
stos
mov
or
aaa
lock
in
shrb
xchg
ljmp
daa
fs
jmp
mov
mov
scas
imul
lcall
mov
leave
cmpsb
inc
loope
xor
int
shrb
outsl
imul
xor
fsincos
inc
inc
loopne
sbb
inc
decb
xor
data16
adc
je
call
xchg
pop
push
js
cmpsl
jp
or
aaa
cli
popf
in
pop
movsl
pop
sbb
add
sbb
test
call
mov
test
pop
xchg
stc
mov
xor
test
bound
mov
daa
inc
sub
xlat
pushf
movsl
test
scas
rorb
push
ja
xchg
test
or
adc
lahf
aad
xor
mov
lock
cmpsl
xlat
icebp
or
mov
push
jno
xchg
scas
mov
dec
roll
push
pop
jns
nop
push
out
cmpsl
dec
mov
aam
push
mov
mov
mov
clc
dec
and
cmpsb
or
data16
lret
hlt
cwtl
jmp
mov
pop
mov
sbbb
divb
pushf
and
add
insl
dec
inc
sub
push
insb
xchg
movlps
out
mov
shl
jnp
or
push
or
inc
and
lods
push
jo
jne
rcl
mov
or
insb
lods
lock
arpl
dec
and
sbb
jl
cmp
jne
add
iret
inc
ljmp
mov
push
add
cmpl
loope
rclb
adc
jmp
mov
mov
add
pop
mov
adc
fcomp
in
fstpl
ss
mov
adc
pop
lds
or
xlat
jg
cmpl
insb
adc
lcall
fadd
cmc
jmp
unpcklps
pop
lret
mov
or
push
testb
mov
jns
rol
push
shrl
leave
repnz
addr16
pushf
sub
dec
mov
mov
cld
test
dec
mov
or
ds
sahf
das
sub
aam
iret
rcrl
inc
test
pop
movntq
out
mov
lcall
lret
pop
aas
sahf
nop
insb
xchg
mov
outsl
xor
and
punpcklwd
test
out
mov
push
daa
cmpsl
jbe
sub
rcrl
add
pop
xchg
cmp
adc
adc
xchg
sbb
mov
les
adc
scas
mov
pop
xchg
mov
cmpsl
mov
movsb
pop
stos
cmpsl
dec
xchg
or
xchg
mov
int
sub
xchg
ljmp
and
jge
and
jg
movb
pop
das
mov
cmp
mov
imul
cmp
add
mov
cld
adc
shrl
xchg
add
push
xor
pop
mov
cmpsb
cmp
jbe
fdivr
cli
inc
insl
push
xchg
jb
inc
loopne
mov
daa
or
pop
add
adc
pop
rol
pop
mov
aas
mov
enter
cld
mov
andl
aam
adc
jge
push
adc
cltd
pushf
in
loop
lahf
cmpb
insl
xchg
inc
or
test
cmpsb
scas
and
jmp
xor
sahf
into
ds
or
out
std
push
or
in
xchg
hlt
xchg
fists
xlat
rcl
dec
repnz
outsl
les
daa
sub
mov
inc
jmp
outsb
and
push
push
mov
pop
shlb
dec
bound
push
push
lret
sub
in
leave
xchg
and
pushf
inc
fwait
pop
jle
fsubrs
lahf
popa
imul
repnz
pop
ffree
stos
pop
mov
mov
cmp
cli
aad
in
in
dec
fstpl
icebp
jecxz
xor
push
mov
scas
nop
mov
xchg
sar
popa
jb
jecxz
lock
pop
pop
cmp
mov
xor
xchg
stos
icebp
in
or
xchg
loopne
jge
scas
mov
xor
mov
movsl
movsl
cld
xchg
sbb
sbb
repnz
fiadds
lods
jecxz
mov
das
lds
mov
xchg
mov
ljmp
les
xchg
subb
lods
cmp
pop
test
cmp
clc
xrelease
dec
jnp
mov
inc
xor
sub
mov
filds
xor
xchg
lock
pop
fcoms
decb
sub
fs
push
lret
sub
and
and
dec
adc
jae
repz
fldcw
outsl
adc
ljmp
fidivl
add
ss
xlat
push
jns
aaa
stos
cli
aad
cwtl
mov
rol
sbbl
mov
mov
or
test
and
lea
in
adc
xor
jle
ficoms
js
cmp
icebp
adc
in
push
fsubr
je
inc
leave
mov
icebp
pop
outsl
scas
dec
scas
pusha
mov
push
call
push
cmp
cltd
cmp
fs
cltd
push
sbbl
adc
dec
cwtl
pop
mov
fistl
rclb
xor
xchg
cmp
imull
bswap
aaa
add
mov
into
dec
test
shll
ret
test
fs
lds
shlb
rcrb
xor
stos
orb
adc
sbb
dec
pop
cmp
sti
cmp
popa
xchg
jo
test
outsl
test
iret
adc
mov
gs
rcrl
mov
pop
and
sub
test
inc
dec
dec
out
call
jp
and
and
add
popf
js
jecxz
xor
mov
out
mov
xchg
adc
xor
mov
or
jmp
xor
lahf
cmc
into
mov
es
sub
lods
jp
fdivrs
pmaxsw
mov
leave
lea
fwait
jmp
jnp,pn
mov
ret
adcl
push
ja
and
scas
mov
cmpsb
and
xlat
jle
xchg
flds
mov
xchg
popf
es
xor
ret
fdivrl
pop
lock
push
xchg
enter
mov
aas
std
out
insb
push
scas
jns
pop
outsl
sahf
mov
out
loopne
sub
mov
sub
out
stos
add
xchg
repz
and
push
cmpsl
and
repnz
mov
lock
fldl2e
mov
jbe
fists
and
dec
add
test
dec
cmp
inc
scas
pop
mov
adc
mov
or
jl
push
mov
sbb
dec
pop
stos
stos
mov
inc
push
cli
div
jns
test
imul
jp
or
or
inc
cmpsl
sahf
adc
aaa
mov
sub
mov
pop
arpl
and
bound
rorb
cmpb
cmp
jecxz
jge
mov
lret
imul
clc
sbb
push
jl
std
fdivp
adc
shl
mov
or
xchg
sbbb
or
adc
push
sbb
cmpsl
xchg
movsb
or
cmc
pop
aaa
xchg
mov
cmpsl
jecxz
sub
add
pop
push
jb
ds
jl
mov
stos
and
push
adc
fmuls
jb
loopne
out
daa
je
fs
clc
movsb
xor
mov
inc
jnp
cmp
test
enter
sbb
pop
cmpb
cmp
aaa
orl
push
add
inc
in
xchg
repnz
inc
sub
bound
scas
in
push
imul
xor
adc
cld
mov
sbb
negl
orb
sbb
dec
xchg
jnp
pop
xor
popf
movsl
js,pt
ja
nop
scas
xchg
mov
cmp
xchg
inc
jl
mov
call
test
push
ljmp
addr16
push
sahf
sbb
in
shrw
adc
test
and
ja
sbb
mov
xor
aaa
call
and
cmp
pop
out
xor
push
mov
sti
sbb
sbb
jle
jecxz
mov
xor
ret
loope
mov
push
sbb
cltd
cs
mov
push
or
sahf
fsubrl
jbe
xor
push
out
stos
loop,pt
push
in
fabs
fwait
inc
jg
inc
sub
pop
jl
insb
mov
mov
dec
or
popf
int
cmpsl
pop
dec
mov
subb
or
xlat
xor
popf
dec
pop
mov
enter
push
add
sub
and
int3
xor
jbe,pt
pop
fsubl
push
push
int3
and
iret
inc
mov
aas
cmc
or
std
data16
aam
mov
sbb
xor
into
pusha
cmp
jp
cwtl
dec
pop
and
sbb
xchg
inc
in
jp
mov
xor
mov
stos
loop
mov
pop
pop
in
fsub
sbb
rcr
std
or
sbb
pusha
cmp
je
out
jns
or
inc
popl
adc
icebp
in
jns
call
jb
test
inc
icebp
mov
insl
cmpsb
fwait
lods
cmpsb
jl
jl
adc
or
pop
jl
sbb
shlb
inc
jmp
jmp
idiv
jns
jmp
jp
mov
shlb
xor
leave
sub
pop
stos
fdivl
jo
cld
add
or
rol
mov
cmp
dec
xchg
adc
pop
cmpsb
lret
outsb
ffree
xlat
mov
adc
sub
jg
pop
push
or
out
pushf
mov
xchg
pop
adc
push
adc
xchg
ret
sbb
repnz
inc
cltd
bound
into
int3
in
insl
inc
pop
adc
push
sahf
mov
out
aas
bound
sti
jp
in
inc
mov
lahf
out
cltd
cmp
repz
add
pop
lds
push
imull
lock
scas
push
xor
dec
insl
inc
enter
fiaddl
arpl
iret
bound
sub
in
es
pop
pop
or
les
adc
pop
jns
scas
adc
sbb
cmp
aad
jno
jg
je
cmp
lahf
xor
sbb
sbb
sbb
pop
int
shl
fsubrp
ja
call
cmp
push
jnp
adc
ret
outsb
data16
cmp
jmp
test
cmp
enter
in
pop
sub
insl
jl
or
std
das
adc
push
xor
or
or
mov
sti
jo
sub
mov
push
out
es
ret
adcl
out
std
sub
mov
and
jnp
ficoms
fimuls
adc
in
insb
stos
xchg
sarb
roll
pop
idivb
or
xor
iret
mov
xchg
mov
push
je
and
andl
ljmp
dec
jae
ljmp
ficomps
filds
xorl
loop
pop
lods
lcall
mov
adc
mov
xor
outsl
test
mov
rorl
es
into
sbb
in
fildll
add
mov
pop
ret
rol
mov
mov
iret
lds
insl
inc
lcall
push
lea
sbb
lcall
add
loope
data16
into
clc
cld
cmp
push
mov
cmc
imul
loop
test
adc
inc
jns
mov
je
mov
cld
push
push
add
loopne
gs
xor
imul
or
pop
ficoms
xor
adc
pop
movsb
gs
loop
cld
xchg
jne
add
dec
inc
cmc
and
test
data16
arpl
dec
jmp
sbb
xchg
or
push
xchg
add
leave
shrb
loopne
out
xchg
dec
dec
pop
fwait
push
dec
ret
sub
lods
mov
std
outsb
outsb
shl
dec
cmp
pop
cwtl
mov
arpl
shr
cmp
subb
adc
rcrb
pop
dec
aam
sbb
push
mov
notl
jno
enter
xchg
mov
inc
and
adc
push
data16
in
scas
icebp
inc
push
xor
mov
lods
sub
push
lods
add
adc
popa
fimuls
adc
js
and
out
dec
gs
nop
test
mov
shlb
pusha
scas
adc
mov
pslld
sbb
sti
xor
lret
or
sbb
enter
orb
or
xor
shrl
add
cmpsl
es
cli
in
ficoms
inc
lret
aad
or
fsubrs
xor
sub
mov
lock
lret
push
xchg
ss
push
std
mov
fisubrs
clc
scas
sub
fwait
daa
pop
jne
mov
mov
cli
push
in
loopne
stos
push
mov
sub
cmp
sub
pop
mov
mov
cwtl
outsl
lret
xchg
xlat
mov
pusha
aad
jnp
xlat
adc
aaa
mov
mov
clc
dec
xchg
xchg
adc
and
cmp
xor
jl
cmp
int
mov
ds
jb
pop
aam
fbld
cwtl
cmpsb
test
pop
mov
daa
xchg
cmp
int3
loope
mov
dec
mov
pop
pop
or
rcrl
pop
iret
ret
push
sub
jecxz
adc
in
stos
jp
dec
and
mov
cmp
movsl
xchg
cmp
add
mov
ds
and
sub
scas
call
jl
out
mov
mov
rorl
jb
int3
lcall
sti
iret
push
xchg
faddp
jbe
and
dec
adc
or
out
lcall
loop
inc
fmul
jae
into
xor
sub
shlb
pop
mov
xor
pop
xor
xchg
dec
fsubr
inc
jge
fistps
cmp
loope
shrb
or
ljmp
mov
xchg
dec
push
dec
call
xchg
mov
xchg
jl
and
pop
push
movsb
ficoml
enter
xor
push
mov
mov
mov
in
mov
mov
pop
mov
or
fs
das
sub
loopne
popf
push
ret
test
data16
jo
mov
std
stos
dec
jno
adc
pop
lret
mov
lret
aad
call
mov
mov
andb
stos
fsubs
popa
test
mov
push
imul
iret
mov
pop
push
cmpsl
pop
cmp
out
push
sbb
popf
mov
stos
ret
cwtl
xlat
sbb
or
add
xchg
mov
lock
dec
jmp
mov
imul
xchg
dec
sub
ss
gs
mov
pop
loope
adc
adc
fwait
aad
mov
jno
mov
fsubrs
inc
lods
xor
fcos
cmpsb
adc
das
in
ljmp
test
xchg
int3
mov
fisubl
lds
mov
jl
and
and
mov
push
sub
pushf
je
jg
mov
ds
fcmovnbe
outsb
test
hlt
adc
inc
leave
sub
dec
push
and
mov
push
dec
push
insb
ljmp
stos
xchg
mov
fisubrl
xor
fidivrs
cmp
cwtl
add
push
data16
fisubrl
push
ficoms
mov
std
jmp
or
adc
orb
pop
ficoml
or
fwait
jns
pop
push
ss
and
lea
xor
shl
enter
inc
dec
rorb
sbb
icebp
sbb
movsb
out
fwait
in
xchg
pop
push
sbb
or
dec
sahf
gs
xlat
dec
xchg
loope
lock
lcall
imul
repnz
aaa
and
sub
shl
ds
in
loopne
cmp
adc
cli
outsb
mov
std
jae
and
inc
jmp
js
jns
clc
or
and
mov
and
aaa
xchg
jge
iret
mov
out
jge
rorl
inc
or
inc
stos
jno
mov
sbb
pop
pop
sbb
pushf
dec
mov
not
inc
inc
fsubrs
pusha
push
adc
cmp
pop
fnsave
addr16
push
fstl
mov
jne
pop
sarb
and
mov
mov
icebp
mov
loopne
mov
fwait
cs
jnp
jl
cmp
out
jecxz
das
insl
imul
out
ret
mov
les
std
jmp
ficoml
adc
jbe
lods
lahf
cmpsb
cld
xlat
adc
repnz
pop
nop
dec
jb
xchg
lds
jb
test
push
fstpl
lcall
mov
xchg
and
enter
cmp
inc
and
sub
daa
cmpsl
pop
mov
fistpll
push
mov
mov
adc
aam
jl
mov
in
iret
jl
testl
notb
in
cmpl
adc
pop
xchg
push
pop
addb
fldenv
inc
sub
xchg
mov
movsb
xor
cmp
cmc
cmp
fstps
loope
cmpsl
repnz
xchg
or
rcrb
xchg
jae
in
xchg
sbb
mov
rcrb
jecxz
mov
and
outsl
sub
ss
pop
rorb
jae
loopne
imul
push
inc
repz
ja
pandn
jb
and
push
mov
int3
out
push
jmp
add
adc
add
lahf
dec
push
test
xchg
ja
push
pop
test
jnp
addr16
mov
lret
jno
repz
sti
pop
xchg
pusha
sbbb
testl
ss
cmp
jnp
in
xor
data16
insl
out
idiv
outsb
xor
call
mov
mov
add
cmp
mov
aaa
icebp
sbb
xor
mov
fisttps
andb
mov
mov
inc
xor
cmpsl
mov
fstl
mov
add
sub
cli
sbb
insb
jecxz
jno
xor
push
cmpsb
add
and
adc
ret
mov
adc
movl
fistpl
in
addb
addb
push
push
arpl
mov
and
push
mov
rcrb
andl
cmpsb
dec
lds
lock
cltd
cltd
dec
fs
cmp
arpl
pop
xchg
dec
iret
push
test
arpl
nop
cli
addr16
incl
dec
mov
xor
jb
xchg
out
xchg
pop
test
sub
adc
xchg
cmp
das
mov
mov
rcl
jge
mov
rolb
jbe
je
or
cs
push
popf
add
pop
rcll
mov
adc
jb
insb
call
dec
icebp
xlat
mov
int3
push
dec
push
mov
mov
push
jecxz
cmpsb
mulb
bswap
lds
xor
jg
jl
pop
popa
pop
loope
xor
pop
stc
mov
jl
cs
jmp
lcall
and
and
dec
fmuls
lret
shlb
xchg
jnp
pusha
pop
sub
iret
cmpsl
jg
shlb
jmp
repnz
popa
mov
sbb
sar
test
dec
xlat
and
mov
repz
cmpsl
test
add
pushf
adc
dec
pusha
xchg
jnp
outsb
insb
test
sub
fs
xor
out
jmp
stos
aam
pop
mov
xchg
push
mov
sub
sbb
xor
mov
and
ds
loope
stos
cmp
mov
lcall
push
sbb
mov
jb
mov
addr16
sbb
int3
test
jmp
jns
push
hlt
mov
add
and
xor
pop
loope
out
fs
lds
push
mov
mov
sarb
push
pop
sbb
mov
mov
sarb
inc
sub
out
adc
sbb
or
out
shrb
mov
andl
hlt
ljmp
data16
inc
dec
push
sbb
loop
and
mov
xchg
test
cmpsl
shrl
jbe
andl
xchg
test
lock
les
jb
in
push
push
mov
mov
add
mov
push
scas
lods
or
into
jle
addr16
insl
idivl
ljmp
push
data16
xchg
gs
fsubr
pop
dec
sahf
xor
int
cltd
cmp
add
cmp
mov
ss
scas
fmuls
cmp
inc
mov
pop
mov
test
cmp
adc
les
sbb
into
sub
inc
mov
leave
inc
sbb
jae
push
sbb
aad
popf
mov
mov
gs
dec
sti
and
mov
stc
adc
mov
iret
mov
and
push
sub
jg
aad
out
and
jmp
pop
mov
push
in
cmpsb
and
and
inc
dec
ret
jmp
push
cmp
xor
jno
and
mov
mov
aad
into
push
shr
push
adc
inc
lret
mov
nopl
xchg
mov
dec
push
push
movzwl
sbb
lahf
lock
mov
bound
jle
pop
adc
ja
inc
ja
pop
mov
mov
filds
cmp
andb
dec
pusha
jg
out
sub
pop
or
xchg
push
fucom
std
or
inc
push
adc
popa
addl
sbb
push
imul
cmc
or
out
sahf
or
pop
sbb
cltd
ret
fdivrs
ljmp
stos
pop
mov
out
push
xor
dec
mov
pop
cmp
movsl
insl
adc
fisttpl
mov
add
adcb
lea
sahf
push
xor
cmp
pop
fldcw
inc
nop
jo
scas
cwtl
push
adc
push
jge
ss
stos
fldcw
inc
leave
sub
sub
mov
and
fwait
and
mov
repz
pop
test
add
popf
mov
adc
inc
mov
add
mov
sub
pop
std
pop
or
pop
subl
jae
mov
inc
dec
push
je
adc
imull
test
sbb
sub
cmp
adc
lret
jge
repz
sbb
neg
ds
inc
mov
xchg
fstl
lcall
daa
aam
mov
mov
mov
test
cmpsl
mov
jnp
push
movsl
faddl
mov
ljmp
xlat
mov
mov
stos
dec
lea
iret
pop
dec
call
and
clc
enter
push
or
xlat
pushf
ficompl
cmp
xchg
out
data16
cltd
pop
mov
arpl
mov
pop
mov
push
mov
inc
cltd
test
popf
mov
jnp
jae
outsl
fs
xor
dec
push
jae
lea
add
dec
ret
mov
cmp
aam
pop
pop
push
inc
sub
and
jb
inc
pop
pop
mov
jne
arpl
cmp
push
inc
stos
fldl
sti
fwait
dec
sbb
sbb
stc
lret
inc
loope
and
mov
dec
push
push
ret
inc
cmp
cltd
andb
repz
out
loope
xchg
cmp
and
sti
cld
js
or
gs
pop
lods
movsl
out
mov
xchg
inc
push
pusha
fcoml
pop
cmp
add
inc
loopne
inc
push
jge
sarl
pop
xchg
rsm
and
shlb
lfence
push
jmp
stos
push
aad
lcall
mov
mov
je
inc
mov
dec
mov
mov
sbb
mov
movsl
jnp
cltd
insl
pop
xchg
inc
lods
mov
pop
stos
scas
xchg
mov
and
sbb
jns
arpl
pop
mov
lods
cmc
outsb
sub
sub
cmp
mov
xor
imulb
rorl
add
and
enter
fwait
jo
dec
ret
xor
clc
xor
in
jmp
out
lods
xchg
stc
test
pop
push
lret
loop
xor
sub
xor
sub
adc
push
sub
jmp
and
jecxz
into
add
mov
fildll
insl
pusha
int3
xchg
pop
mov
arpl
xor
mov
in
mov
das
cli
sbb
add
mov
nop
cmp
aad
push
or
or
sar
out
and
push
push
dec
not
vmovapd
push
fsubl
int
mov
cmp
bound
in
popf
ds
loope
xor
add
movsb
lcall
add
leave
mov
mov
and
mov
jnp
repnz
dec
push
int3
inc
push
repz
xchg
push
add
or
push
pop
mov
imul
mov
mov
pushl
stos
insl
int3
rol
mov
sub
icebp
sub
or
xchg
fwait
xchg
sub
cmp
stos
push
adc
mov
outsb
and
push
sub
in
adc
mov
dec
data16
and
lods
xor
leave
int
sub
movsb
adcl
roll
xchg
jg
xorb
imul
inc
into
pop
cmp
fcoml
aas
inc
shll
and
push
sub
hlt
rclb
jb
test
cld
pop
and
xchg
mov
in
pop
push
sahf
repz
pop
mov
popl
je
lea
shufps
dec
sbb
das
jns
outsb
int3
pop
je
fdivr
adc
and
mov
jle
stc
cwtl
dec
xor
and
js
push
scas
rcll
jle
test
hlt
mov
pop
rcl
sarl
cld
add
or
xor
aas
movsb
fsubl
jne
lcall
int3
and
pop
push
xor
loopne
fadd
adc
mov
ljmp
fwait
or
iret
popa
push
das
push
in
int3
mov
aam
out
stos
loop,pt
je
cmpsb
pop
movsb
and
jnp
dec
pop
ret
xor
aam
nop
js
orb
sbb
int3
dec
leave
out
jbe
out
aad
push
mov
push
add
lock
popf
push
out
pop
filds
pop
inc
fwait
aam
adc
cltd
das
jae
pop
repz
ds
in
jno
pop
inc
cmc
sbb
adc
push
arpl
adc
out
or
cmpsl
ljmp
dec
mov
pop
jae
or
mov
inc
add
ret
pusha
movsb
inc
mov
mov
test
pop
jg
cmp
cmp
push
sub
mov
pop
mov
mov
mov
scas
scas
ljmp
mov
out
fcomps
pop
pop
and
or
test
dec
sbb
lds
dec
push
stos
cmp
fdivr
movaps
fcmovnb
in
pop
cli
xlat
or
pop
pusha
pop
push
jb
in
sub
roll
cmp
push
das
xor
lahf
js
xchg
adc
mov
loop
add
and
push
stos
adc
dec
xchg
mov
and
cmp
jmp
mov
lret
sbb
xchg
negb
incl
inc
in
or
sub
cmp
addb
dec
jb
rdpmc
fcmovb
pop
and
pop
pusha
inc
xor
addr16
xchg
bound
rorb
add
sbb
jp
lret
leave
pop
sub
aam
cmp
push
adc
or
lea
pop
dec
mov
loopne
fsubrl
cmp
mov
jmp
xchg
jmp
xchg
push
imul
xchg
jl
loop
inc
add
sbb
sti
mov
xlat
cld
jl
inc
xchg
and
lret
imul
int3
adc
xchg
jbe
hlt
hlt
push
pushf
cmp
outsl
fdivr
jns
ds
dec
cmpsl
xor
sub
mov
loop
imul
cmp
test
mov
insl
push
sub
lret
cmpb
push
adc
hlt
add
out
lret
aad
cmp
lcall
in
jl
inc
mov
mov
push
mov
and
push
orb
ja
lea
fucomip
xchg
and
inc
lret
sbb
ss
mov
out
shll
adc
lahf
xor
xchg
out
adc
push
arpl
fsubrl
out
pusha
fnsave
scas
pop
jb
scas
or
jbe
lea
add
repz
add
leave
das
bnd
push
inc
sub
out
lods
les
int3
test
inc
xchg
lret
sbb
cmc
loopne
sub
int3
push
cwtl
mov
pop
movsl
test
fstpl
lret
lret
pop
xor
ljmp
test
adc
adc
rclb
or
push
sub
push
dec
xchg
lods
cmc
inc
mov
sbb
gs
pop
cli
pop
lret
lret
mov
repnz
xor
xlat
cmp
repz
sbb
sub
das
push
push
jge
pop
inc
aam
ja
orl
mov
inc
jae
adc
ret
mov
or
filds
outsb
pop
adc
cmpsl
hlt
ja
sub
in
sbb
jmp
mov
ljmp
bound
inc
enter
aad
mov
lret
jecxz
xor
mov
rolb
clc
loope
xor
sbb
push
popa
pop
out
rcr
mov
inc
stos
sbb
sbb
and
or
imul
xchg
and
lea
xchg
rorb
imulb
lock
jno
or
adc
inc
mov
int
ds
or
cwtl
sub
insb
add
js
push
push
leave
icebp
ja
or
iret
jo
push
enter
pop
int
xor
cmp
mov
lcall
add
stos
cmp
out
fs
movsb
mov
mov
sahf
ret
sbb
mov
add
jmp
inc
test
inc
scas
lret
popa
xor
pushf
insl
jae
jl
movsb
inc
add
cmp
push
jne
jp
dec
stos
jno
mov
jp
insl
jns
lds
movsl
pusha
repnz
cli
xchg
add
push
mov
outsb
jge
fldl
fcmovnu
or
push
stc
or
fdivs
xor
in
adc
cld
pop
mov
sarl
scas
call
int3
movsb
xchg
psrlq
xchg
sub
inc
xchg
mov
jb
iret
push
jno
cmp
je
fcmovb
pop
adc
ja
push
sub
test
mov
jns
push
xor
jmp
mov
imul
cmp
cmp
cmp
xchg
pusha
mov
jmp
or
inc
fsts
sahf
das
mov
mov
pop
adc
filds
shlb
shrb
scas
sbb
adc
inc
push
les
add
aas
add
mov
or
push
vcvttss2si
or
xor
inc
xor
out
mov
arpl
xlat
pop
ret
addr16
jns
int
popa
mov
pop
sahf
inc
lret
push
pushf
add
sbb
adc
sahf
es
dec
jp
test
jo
shrl
dec
jg
imul
jmp
mov
xlat
jg
inc
lret
in
jb
and
mov
add
mov
sub
add
push
loop
fmul
dec
adc
lcall
cmp
int
lret
ficoml
jbe
mov
sbb
xor
cmp
es
pop
adc
mov
out
sbbb
or
inc
pop
xor
loopne
pop
in
cmc
les
das
loop
or
or
sbb
sbb
jb
subb
les
in
mov
fs
dec
dec
sub
ds
adc
jns
test
inc
clc
bswap
fisubrl
int3
lret
mov
add
lahf
repnz
xor
xlat
mov
gs
xor
adc
push
mov
cmp
imul
xchg
and
push
jg
popa
call
scas
mov
pop
sub
add
scas
push
jecxz
js
pop
int
xor
sbb
inc
push
mov
pop
inc
mov
dec
cmpsl
enter
and
adc
push
idivl
xchg
cmpb
pop
inc
add
mov
mov
cmpl
es
insl
xor
push
arpl
fldenv
jp
push
sbb
mov
and
orl
cmp
test
mov
out
pop
xor
pop
cwtl
or
jae
inc
xchg
imul
outsl
mov
loopne
loopne
rcrb
les
enter
nop
jle
mov
and
es
jmp
add
mov
mov
lcall
lock
mov
xchg
adc
nop
xchg
mov
adc
into
pop
pop
xchg
imull
xor
mov
add
ret
outsb
enter
inc
not
inc
inc
fwait
xor
xor
test
mov
mov
mov
adc
sub
sbb
iret
lahf
lret
sbb
scas
inc
negb
cmc
rol
adc
pushf
add
push
ja
push
addr16
roll
mov
imulb
mov
mov
imul
ret
shl
fidivrl
sbbl
mov
push
jg
pop
pop
mov
orb
out
movsb
mov
cmp
lahf
and
fsubr
xchg
data16
mov
xor
fsubrl
cmp
in
js
xchg
jmp
insl
mov
push
dec
scas
movsl
push
xchg
loope
fxam
jecxz
lahf
sbb
mov
outsl
mov
fidivs
es
aad
test
add
sub
dec
inc
ret
ficompl
imul
test
push
fucomi
and
add
jle
xlat
je
cmp
es
gs
pop
nop
cmpsb
sbb
shll
push
orl
xchg
or
adc
xchg
in
sub
loop
mov
add
int3
in
push
dec
or
imul
out
push
pusha
test
bound
out
cwtl
outsb
xchg
icebp
ret
cmp
test
cmp
add
jno
mov
ret
test
and
ljmp
addr16
test
cli
scas
add
in
ret
lea
mov
jb
loope
cmp
dec
add
sub
dec
jecxz
cltd
repz
int3
aam
push
dec
xchg
aad
repz
push
out
aam
in
clc
out
bound
cltd
push
add
fildl
ja
mov
sbb
mul
inc
mov
sbb
or
dec
xchg
orb
ja
fs
clc
sub
mov
and
stc
cmp
inc
jmp
cmpsl
jo
or
lcall
and
leave
jl
js
dec
out
lock
inc
dec
mov
xlat
int3
mov
insl
mov
pop
sti
push
jl
and
sub
jp
bound
cmpb
insb
sahf
pop
cmp
xchg
push
cld
jmp
sbb
ret
dec
or
inc
mov
inc
pop
sbb
jo
jmp
xor
stos
nop
xor
je
and
dec
test
cld
cmp
inc
pop
jmp
pop
jae
shlb
jnp
dec
pop
mov
cmp
aad
push
sahf
ret
mov
add
fmuls
push
mov
lea
stos
and
mov
js
push
stos
add
push
push
add
cli
lock
or
jle
xchg
push
or
sbb
mov
lds
xor
mov
stc
lret
xor
test
adc
jp
push
jg
push
out
fnsave
push
loop
stc
dec
xchg
stos
adc
xor
sub
jnp
out
jl
cmp
push
cwtl
outsl
in
dec
mov
xchg
and
cmp
outsl
add
orb
cli
pusha
lcall
mov
and
dec
lahf
lods
mov
cmp
lahf
fadds
mov
sahf
dec
aad
fsts
or
cmpb
mov
aad
loopne
arpl
mov
pop
call
push
mov
ljmp
xlat
out
lds
dec
sbb
adc
int3
xchg
leave
xor
xchg
jo
inc
pop
inc
je
mov
cs
mov
sbb
and
les
push
cli
lds
call
ja
sbb
sbb
cmpsb
or
loopne
aas
cmpb
jecxz
dec
push
fidivrl
loopne
adc
jp
stos
push
or
inc
fs
jne
outsl
xchg
jmp
sub
cmp
js
inc
out
cmp
and
loop
xor
mul
subl
ret
imul
roll
push
shrl
mov
call
dec
cli
mov
outsl
xor
xchg
aaa
pop
cld
mov
cmp
insl
xchg
loope
sbb
pop
xor
pop
loope
repz
xchg
dec
mov
sarl
rol
add
mov
mov
mov
out
add
lea
sahf
ja
gs
pop
mov
jne
cmpsb
mulb
jg
cmpsl
fistpl
loope
cmp
or
aaa
pop
push
in
js
gs
push
nop
adcl
inc
push
cs
std
cmp
mov
jne
cmp
mov
mov
jno
cmpsl
mov
out
jl,pn
adc
sub
adc
loop
sub
lahf
or
aaa
shrl
es
sbb
call
cmp
out
in
repnz
cmp
hlt
pop
mov
cltd
jo
mov
jb
inc
lret
dec
pusha
lods
inc
fcoms
push
push
xchg
iret
lock
ljmp
adc
fdivr
jle
aam
cmp
mov
lcall
and
orb
inc
xlat
bound
ljmp
mov
fcoml
xchg
pop
in
pop
ficoml
lahf
cltd
mov
mov
testl
xchg
push
jno
inc
daa
mov
nop
sbb
xchg
loope
cmp
pop
fs
jmp
cmp
mov
dec
fnsave
or
fimuls
mov
sub
cmp
cmpsb
sub
cmpsb
je
push
int3
push
loope
dec
cwtl
sbb
pusha
sub
pop
inc
fcomps
cmp
out
jbe
cmp
je
mov
dec
push
scas
xchg
rorl
ljmp
in
nop
cmpsl
lods
mov
les
cmc
add
sub
jp
ja
cmpsl
divb
mov
xor
inc
lcall
cmp
and
icebp
and
int
push
aam
or
jp
dec
cld
test
cmp
and
mov
out
sub
lods
mov
xor
rclb
xor
notl
cwtl
mov
sub
gs
dec
inc
in
pop
movsl
xor
mov
push
fbld
push
popl
jg
incb
jle
je
test
lcall
inc
sub
xor
jmp
jge
add
mov
mov
sahf
mov
jg
nop
jns
push
inc
push
push
xlat
push
aad
and
rorb
push
les
fs
lods
loop
dec
lahf
cmpb
jmp
jecxz
xor
arpl
icebp
and
mov
jp
fcomps
sbb
rolb
lret
push
and
add
sbb
test
imul
inc
push
pop
ljmp
mov
pop
push
shll
loopne
mov
jnp
add
aad
mov
enter
sahf
mov
xchg
int
clc
and
mov
xchg
cmc
inc
dec
cltd
leave
xor
insb
bound
inc
xchg
mov
call
std
dec
xchg
shlb
andl
notl
insl
mov
mov
int
or
fwait
xor
mov
push
xor
pop
es
inc
aaa
ret
dec
cltd
xchg
and
sarl
and
xchg
out
nop
sbb
or
cltd
and
faddl
jnp
mov
aaa
leave
sbb
ds
insl
and
decb
mov
cltd
enter
lock
and
adc
cmp
push
fcmovnbe
sub
aam
xchg
xchg
icebp
in
out
ror
dec
test
loopne
aad
out
ja
adc
arpl
repz
out
in
aas
dec
ja
dec
push
sub
insb
sbb
adc
cmp
xor
out
in
pop
into
mov
add
sahf
cmp
jg
ret
fwait
in
jg
pop
inc
jae
xchg
adcl
jns
adc
aas
jle
cmpsb
popa
jnp
pop
mov
jnp
sub
mov
sbb
dec
xchg
or
test
arpl
fucomi
jecxz
xchg
es
xchg
stos
sbb
dec
rolb
jl
fnstcw
jns
xchg
int3
pop
test
fucomi
cmp
cmovno
push
enter
xchg
mov
push
pop
sbb
jle
mov
roll
jg
and
mov
mov
stos
hlt
test
jb
mov
pop
or
sbb
sar
push
aad
and
jno
lods
notb
bound
jmp
add
ret
jnp
sbb
mov
rcl
stos
push
shlb
cli
sub
jp
test
ficoms
dec
popa
stos
adc
push
aam
add
in
inc
push
or
jo
test
lods
and
mov
jno,pn
and
ja
adc
mov
dec
bound
cli
jnp
icebp
cmp
outsl
jmp
mov
popa
imul
and
icebp
cmp
loopne
xchg
push
outsb
xchg
sub
jmp
loop
lods
xchg
cmp
shll
js
lea
popa
mov
and
dec
faddl
jmp
dec
push
cli
ficoms
sbb
test
test
cmpsb
addr16
lret
dec
lods
popf
and
mov
mov
stos
cmpsl
dec
mov
xlat
cmc
or
mov
add
jb
scas
cmp
loopne
call
and
sub
mov
test
push
push
dec
xchg
scas
dec
scas
icebp
jp
vpminsw
sub
fsubl
js
mov
ss
sbb
insl
ret
or
mov
stos
pop
loop
cmp
daa
aas
xor
inc
lret
loop
cmc
push
xor
xchg
inc
in
push
int3
mov
bnd
mov
outsl
push
cli
iret
pop
inc
jp
enter
cmp
mov
dec
out
add
mov
push
gs
add
push
adc
mov
push
fstp
or
mov
pushf
fs
cld
or
popf
cld
pop
adc
mov
push
inc
mov
pop
add
pushf
add
movsl
fistl
sti
mov
inc
or
xchg
jl
inc
repnz
popa
mov
xor
jmp
inc
mov
stc
rcrl
sbb
pop
or
lock
sub
ret
mov
nop
inc
dec
aaa
in
adc
mov
mov
push
inc
sbb
dec
mov
in
movsl
mov
mov
std
push
shll
test
and
call
sub
add
les
icebp
xchg
jle
in
xchg
pop
mulb
repz
hlt
add
fidivs
outsl
shll
outsb
outsl
out
xlat
je
and
ss
push
out
aas
push
pop
pop
ss
outsl
sub
repz
mov
scas
lock
mov
mov
das
int
loop
xor
arpl
mov
and
clc
cmp
fwait
std
in
inc
cmc
inc
dec
jecxz
push
cmc
xchg
sbb
insl
mov
dec
scas
enter
add
stos
fisubrl
push
test
or
cmp
push
push
leave
push
hlt
xor
pop
dec
sahf
jo
popa
mov
dec
dec
mov
hlt
pop
or
stc
cltd
ss
or
dec
sub
ret
movsl
test
jae
loop
leave
push
jns
lahf
mov
shlb
inc
push
inc
adc
jmp
inc
push
dec
lock
cmp
lods
or
mov
mov
add
inc
nop
push
pushf
lods
inc
out
je
push
outsb
and
dec
mov
sbb
hlt
jne
or
mov
adc
add
cmp
cmc
sub
aas
jecxz
je
std
sub
adc
or
xor
sbb
jmp
cmp
pop
das
popa
jns
mov
in
or
fistpl
repz
pop
movsl
push
adc
test
sbb
enter
fbld
mov
jno
rcll
or
cmp
cmc
stos
fs
iret
mov
xor
dec
lret
test
mov
push
lret
psllq
dec
std
push
adc
lea
std
icebp
xchg
xchg
repz
inc
adc
imull
icebp
sbb
enter
clc
sbb
jl
cwtl
repnz
xchg
inc
sub
shl
cltd
and
xchg
xchg
hlt
out
mov
pop
int
and
lahf
jae
cltd
push
repnz
sub
movsb
jl
shrl
adc
cltd
push
xchg
sub
xor
xor
outsl
pop
int
xchg
aas
insb
cmp
stos
or
test
sbb
sbb
dec
jp
or
jl
cmp
dec
lds
insl
hlt
fs
cwtl
js
in
or
xor
jo
lcall
es
sbb
fbstp
mov
xchg
add
fildl
xchg
std
push
movl
out
or
call
cltd
push
popa
cmp
ja
popf
jmp
jne
xlat
pop
jmp
jge
cwtl
push
mov
insb
jo
adc
adc
mov
hlt
in
inc
xchg
mov
adc
adc
adc
call
sub
adc
std
sub
test
dec
test
xor
mov
in
push
mov
push
mov
sub
sbb
mov
int3
int
int
outsl
leave
mov
sbb
into
test
sbb
push
dec
inc
stos
inc
inc
pop
inc
mov
jnp
int
aaa
js
stos
fsts
notl
fs
jae
rorb
or
iret
push
cmpl
cmc
jge
or
mov
int3
lret
das
dec
sub
cs
cmp
fiaddl
shlb
stos
mov
mov
mov
and
and
sbb
pusha
inc
shr
pop
sbb
out
or
cmp
add
imul
sbb
and
movsl
rcll
push
xchg
pop
shll
xorb
mov
lods
sbb
adc
or
inc
std
mov
repz
cmp
pop
adc
or
dec
mov
repz
xchg
mov
jle
dec
out
js
cmp
push
in
xchg
mov
add
jg
popa
xchg
jp
xchg
xlat
test
adc
inc
fidivrs
mov
adc
icebp
fstl
xchg
dec
dec
ss
stos
repnz
add
or
iret
into
mov
js
std
jg
aam
jp
mov
pop
jnp
dec
push
shlb
mov
cltd
add
ja
cmpsl
mov
push
shl
xor
add
jbe
xchg
cmpsb
loop
push
or
inc
out
mov
ljmp
fsubrs
jl
xor
jb
cli
addl
inc
pop
and
mov
mov
adc
xchg
mov
cmp
dec
push
mov
in
and
movsb
adc
daa
clc
dec
testb
fwait
insl
pop
xchg
mov
and
xchg
or
lock
lods
dec
mov
pop
test
sbb
sub
fsubl
nop
adc
adc
nop
xchg
int
sub
mov
out
cs
add
mov
stos
mov
int3
sub
mov
fdivp
inc
movsl
ret
mov
mov
jne
sub
mov
mov
cld
cmpb
jecxz
mov
pop
pop
adc
lods
ret
sbb
mov
leave
xchg
js
cmpsb
ror
xorl
push
push
and
inc
test
inc
aas
sub
xlat
xchg
sahf
mov
sub
std
shlb
jo
sub
insb
xor
inc
or
lret
adc
jl
sub
fbld
call
cmp
pop
fmuls
xchg
out
pop
pop
and
add
jp
pop
ret
jl
push
xchg
leave
inc
shrb
mov
mov
mov
std
scas
sub
cmp
sbb
hlt
mov
or
ss
dec
jbe
test
fiadds
add
test
cmp
mov
fs
repnz
push
lahf
ss
xor
outsb
rcrl
call
xchg
cmp
jl
daa
xor
pop
clc
mov
inc
lret
dec
push
mov
fadds
dec
cmp
lock
ret
jle
aad
or
xlat
lods
repnz
lods
jl
adc
fs
fs
aaa
mov
out
cmp
fbld
repnz
call
stos
or
add
pop
out
cmp
inc
jmp
push
sbb
add
mov
pop
dec
mov
fcoml
sbb
scas
xchg
lods
aaa
push
fnstsw
or
and
sub
daa
fwait
lods
or
js
push
sub
lret
sbb
mov
push
jg
les
pop
outsb
jo
int
mov
arpl
cmc
imul
mov
test
repnz
shlb
clc
pop
dec
clc
and
or
mov
sbb
dec
xchg
lahf
pop
lret
pop
and
ljmp
xchg
popf
fsubl
xorl
pop
vaddss
sbb
pop
insb
aam
cli
in
fidivrs
mov
inc
jnp
xchg
push
jl
sbb
in
std
jle
outsl
cmp
fisttps
jno
sub
jns
mov
xchg
int
aad
addr16
push
cli
enter
mov
cmpsl
inc
dec
and
mov
incb
fwait
cmpsl
adc
cltd
inc
mov
adc
std
xchg
jo,pt
pop
xlat
clc
mov
jmp
jl
sbb
cld
imul
fs
jne
out
add
test
test
test
inc
sub
mov
imul
cmp
bsr
rdpmc
or
sbb
fwait
inc
loop
ret
data16
push
ds
aad
cmp
pop
add
dec
and
popa
xchg
add
mov
ja
nop
mov
sbb
into
pop
cmp
lret
cmp
stc
xchg
adc
xchg
lock
xor
xor
push
sbb
or
cmpsb
xor
in
xchg
js
test
lahf
cmp
push
stc
enter
xchg
push
push
xlat
cmpsb
pop
cmpsl
inc
pop
stc
movsb
lcall
cmp
fwait
mov
mov
push
add
lods
cmc
xlat
aaa
cli
and
and
sahf
pop
inc
push
arpl
jmp
sahf
ret
push
popf
shr
or
loop
xor
bound
sub
cmp
xor
add
mov
mov
or
mov
lds
cmp
shlb
test
dec
sub
dec
add
mov
shlb
mov
or
cmp
shrb
cmpsb
sub
aad
jno
pusha
xchg
mov
js
mov
inc
enter
xchg
lret
ficoms
xor
jecxz
out
cwtl
fiaddl
sbb
not
divb
arpl
faddl
popf
and
mov
stos
cmpb
orl
test
insl
jo
mov
cmpsb
lods
cli
loope
jmp
stc
push
xchg
mov
shlb
mov
rcrl
lock
add
mov
arpl
lock
lods
ljmp
adc
mov
dec
int3
in
adcl
push
addb
mov
std
movsb
insl
push
outsl
lret
add
mov
jb
pop
xlat
xchg
stos
mov
shlb
imul
divl
test
mov
sahf
xchg
out
push
and
push
enter
fsubrl
xor
adc
out
sub
aam
lcall
mov
mov
ret
inc
mov
pop
inc
mov
icebp
je
leave
aam
cli
mov
ljmp
js
rcll
inc
rcl
call
sti
in
lret
push
icebp
test
mov
insb
xchg
push
inc
sub
test
sub
adc
cmc
popa
lods
lea
mov
cli
xor
fimuls
jg
mov
jno
insb
jnp
daa
pop
test
scas
mov
stos
sbb
in
sub
push
xchg
rclb
daa
mov
mov
cmp
cld
sahf
pushf
dec
pop
push
cwtl
cmp
add
loopne
and
adcb
or
xor
addr16
popa
aaa
mul
popf
push
dec
xlat
addr16
inc
int
inc
cmp
out
inc
cmpsb
lock
adc
sbb
and
jo
and
and
sahf
mov
dec
lods
movsb
add
adc
and
loop
int3
in
sub
sub
dec
sbb
sbb
pop
aad
or
add
pushf
fsubrl
mov
stos
push
push
or
ret
sub
ret
mov
in
ret
push
out
mov
mov
sbb
jp
sbb
jp
or
lret
test
roll
stc
sub
cmp
mov
xchg
sti
or
and
repz
or
push
mov
jne
jne
dec
stos
mov
inc
aad
not
out
fimuls
loop
jge
cmp
mov
movsl
pop
inc
aam
sbb
into
jb
xchg
pop
std
fwait
out
mov
ljmp
jge
imul
aaa
repnz
cltd
mov
test
cmp
stc
mov
jb
ss
cwtl
not
cmp
shl
push
add
dec
and
sub
outsl
push
push
ljmp
data16
daa
xlat
les
aam
or
jb
add
jge
dec
cmpsb
nop
jp
popa
call
out
sub
lcall
jg
faddl
out
sahf
dec
pop
mov
add
push
inc
inc
shrl
pop
insl
lret
and
das
or
mov
mov
jl
repnz
mov
push
mov
mov
pop
mov
jno
jp
sub
lock
filds
sbbl
test
mov
data16
pop
add
cmc
ret
cmpsb
aam
jl
push
in
mov
jne
jne
xchg
ficoms
fisubrs
dec
and
enter
cmp
dec
adc
pop
mov
mov
adc
outsb
mulb
jmp
dec
jns
ja
cs
jb
sbb
inc
inc
mov
fadds
stos
xchg
xchg
push
test
sbb
push
ret
xor
cmc
pop
sti
mov
andl
or
sbb
xor
or
andb
cmp
pop
repnz
jnp,pn
xchg
lods
mov
out
mov
scas
cmp
xor
sub
jne
xchg
nop
pop
jle
fisubl
js
jnp
addb
xchg
push
and
push
lods
stc
add
push
mov
jne
loope
cwtl
xchg
and
jg
daa
pusha
mov
imul
into
xor
fcmovnbe
pop
pop
and
addr16
push
adc
xchg
js
push
pop
sarb
fsts
mov
dec
lret
cmc
enter
sbb
jle
into
aam
jg
outsl
lods
imul
dec
mov
jmp
xchg
push
shll
ror
in
push
lods
ja
sub
fidivrs
pop
fildll
cwtl
xchg
jno
or
sub
jp
jg
push
or
clc
push
ljmp
or
inc
cmc
adc
enter
fistl
push
xchg
movsl
mov
push
jge
push
ret
cmpsb
repz
call
into
fucomi
sbb
scas
aad
lcall
sbb
repnz
repz
jg
inc
lret
and
into
popa
jnp
cmpsb
fildl
ljmp
lahf
fists
jbe
iret
add
repz
lock
mov
mov
rcrl
ds
fwait
adc
ljmp
sub
sbb
imul
pop
imul
les
pop
jmp
add
and
inc
xor
mov
lret
idivl
aad
test
in
pushf
jp
jbe
jle
dec
jns
mov
inc
sub
js
dec
cmp
jmp
loopne
shlb
ret
jne
jbe
xchg
rcrb
mov
shll
mov
and
leave
js
cmpsb
shll
mov
adc
aad
insl
std
popa
xor
int3
in
mov
cmp
sub
cltd
sbb
test
insl
dec
cli
mov
ret
xlat
das
out
sub
jo
adc
mov
ljmp
xor
lahf
subb
push
sahf
or
xor
aad
aad
jns
inc
lcall
into
push
adc
sub
popf
cs
stos
cld
out
nop
adc
leave
mov
inc
xchg
xchg
addl
lret
fisttpl
dec
inc
pop
xchg
mov
shr
test
in
sub
aad
fdivr
mov
sub
fcmovnbe
cmc
lods
pop
mov
add
lock
cmpsl
sub
xchg
add
decb
pop
pushf
pop
mov
add
imul
repz
cmp
test
xor
adc
in
mov
loop
pop
scas
aas
mov
jae
enter
shlb
adc
mov
ret
testb
shrb
pop
test
and
or
ret
lcall
aam
idiv
pop
push
mov
lret
dec
repnz
pop
xor
add
and
daa
out
loop
inc
sbb
mov
out
xor
jp
fdivs
sub
pop
sti
jo
popf
int
push
xor
nop
test
out
sbbb
addr16
sbb
inc
and
cmp
cmp
sub
js
inc
sarl
fistpll
loop
push
jecxz
or
add
lods
mov
xchg
mov
adc
mov
in
cmpsl
imul
arpl
sbb
fdivp
jge
popf
enter
add
cmp
dec
xchg
ja
lret
dec
jb
cmp
cmc
add
fsts
fcompl
xchg
or
aas
outsl
gs
mov
lea
test
cltd
test
sub
faddl
mov
inc
in
or
sti
cmp
mov
inc
mov
push
push
sub
mov
adc
pusha
inc
shll
iret
xchg
outsb
jnp
push
pushf
cmp
xchg
and
bound
aam
xor
xchg
add
pop
dec
fsts
aaa
bound
arpl
fwait
pop
sub
sub
iret
ljmp
std
sahf
shl
xchg
cs
rcrl
sbb
adc
push
cmpsl
sbb
mov
dec
das
adc
or
sbb
loop
icebp
sub
movsl
push
leave
out
mov
sbb
outsl
pop
xchg
mov
sbb
dec
icebp
nop
data16
jg
loopne
mov
nop
push
loop
aaa
testb
xchg
bound
inc
mov
sbb
aaa
negl
cs
test
idiv
leave
adc
xchg
inc
jne
mov
stc
mov
and
clc
data16
gs
inc
mov
push
insl
xor
arpl
cmpb
pop
fwait
xchg
push
or
data16
enter
xor
inc
push
pushf
xor
loope
in
xchg
pop
imul
or
or
nopl
movsb
sbb
cmp
mov
inc
dec
pop
imul
add
push
mov
sarb
shll
popa
mov
pop
popa
ret
shl
ret
shll
les
jnp
mov
fwait
in
scas
out
xchg
push
push
sub
inc
imul
shrb
mov
cmp
je
inc
xor
mov
rorb
adc
in
push
mov
data16
shlb
push
testb
mov
cmc
rcll
movsl
arpl
aas
xor
mov
add
aam
test
rclb
sbb
dec
rcrb
insl
or
movsl
xchg
mov
fwait
hlt
test
pop
push
into
mov
push
xchg
xor
rolb
add
or
mov
jge
adc
sbb
mov
push
push
or
xchg
cli
xchg
cmc
and
sub
push
inc
js
int3
or
push
mov
pop
xchg
iret
xchg
or
push
adc
xchg
add
xchg
add
cmpsb
mov
or
push
xlat
stc
lret
mov
lds
jae
xlat
sbb
icebp
pop
jnp
inc
int3
mov
out
pop
popa
and
cmpsl
and
fidivl
xor
ss
push
push
stos
push
push
sub
test
sub
notb
sbb
push
mov
mov
shl
xchg
inc
jae
aas
bound
movsb
js
or
xchg
aas
cltd
or
div
movsb
cmpsb
push
sub
das
mov
jo
lds
aas
shlb
imul
lods
pop
mov
pop
dec
xchg
xchg
add
call
loopne
xor
sbb
nop
icebp
stc
mov
mov
mov
xchg
cmpsb
pop
xchg
pop
cmovno
ss
or
jecxz
cltd
fisubl
adc
jmp
into
orb
add
add
push
jnp
aad
cmp
in
pop
add
daa
sbbl
mov
cld
out
mov
or
in
pushf
sbb
dec
push
mov
inc
cmpsl
in
pop
pop
add
lahf
ljmp
mov
sub
shll
jns
xchg
xor
inc
das
xchg
lock
imul
push
adc
jns
inc
inc
xor
jb
stos
rorb
xor
dec
push
test
pop
add
das
aaa
pop
push
gs
mov
cli
or
stos
dec
sbb
or
enter
pop
or
sub
and
inc
mov
jae
repnz
arpl
push
adc
shlb
xor
xor
inc
lds
dec
fcoms
fidivl
pusha
fstpt
inc
fadds
fldl
inc
icebp
stos
aaa
test
dec
int3
xchg
xchg
bound
pop
je
daa
mov
sub
mov
mov
cwtl
sahf
imul
dec
inc
cmp
push
leave
xchg
lret
dec
dec
dec
dec
lods
cmp
xchg
sahf
cmpsb
cmp
push
mov
mov
stos
xor
cltd
pop
jne
inc
adc
push
lock
add
mov
call
test
fwait
jmp
and
sbb
out
xlat
fcmove
fimull
lret
dec
stos
mov
pop
mov
push
das
into
je
loopne
cmc
push
sar
lods
push
lret
push
xor
inc
adc
sbb
or
dec
dec
cmpsl
xchg
sub
stos
lret
adc
push
lds
in
pop
inc
dec
and
in
fistl
int3
lods
sbb
outsl
mov
pop
push
xchg
xchg
sub
or
xchg
xchg
shrl
aam
sub
stos
ja
pop
test
test
push
enter
mov
sub
stc
jnp
data16
fsubrl
cmpsb
outsl
jecxz
adc
pop
adc
cmpsl
pop
adcb
lahf
adc
xchg
mov
sbb
push
scas
in
adc
je
ret
adc
popf
jbe
mov
mov
fldl
xor
jae
ss
stos
mov
pop
stos
mov
clc
out
pop
inc
sub
sbb
xchg
inc
add
xchg
insb
push
popl
jl
lahf
movsb
daa
div
jbe
xchg
cmc
in
xchg
sub
xchg
sbb
lret
push
or
jl
imul
push
cmp
sarl
sub
xchg
mov
js
jns
loopne
fs
das
push
and
lret
push
lret
jbe
jl
cwtl
xor
stos
xor
xor
sbb
outsl
gs
frstor
jb
stc
pop
cmpsb
jnp
out
add
sbb
rcr
into
test
xchg
or
xchg
aas
das
sti
gs
int3
jge
pop
lods
and
or
mov
sbb
xlat
cmpsl
es
adc
xchg
xchg
pop
nop
imul
iret
or
cltd
enter
sbb
inc
mov
ljmp
enter
jnp
sti
xor
lret
pop
dec
mov
popa
scas
ficompl
rclb
cmp
lods
xchg
or
lods
jne
ds
mov
lods
gs
mov
adc
push
jge
fyl2x
arpl
sbb
test
pop
push
dec
lret
add
test
adc
adc
push
fdivrl
shll
mov
inc
sti
xor
push
ja
imul
repz
dec
notb
mov
mov
fcomp
sbb
movsb
mov
mov
inc
dec
xchg
xlat
imul
sbb
dec
outsl
fnsave
sbb
shll
in
cmp
mov
or
lahf
jbe
add
or
fldl
jo
arpl
sbb
and
leave
mov
aad
and
lea
das
jne
dec
mov
mov
aad
insb
daa
fs
rcll
push
decb
fdivs
icebp
pop
inc
sub
mov
pop
jecxz
and
test
fs
mov
mov
outsl
adc
ljmp
xchg
mov
rcrl
loop
iret
rolb
pop
mov
cmp
out
pop
fiaddl
pop
adc
mov
or
inc
test
fs
aam
aam
jmp
outsb
or
push
rcll
out
test
mov
xlat
lods
xor
inc
aam
outsl
cmp
mov
dec
insb
sbb
mov
or
xlat
adc
iret
push
call
push
loope
sarl
icebp
popa
arpl
push
inc
sub
xchg
mov
mov
push
mov
fnsave
push
rcll
pop
pop
jnp
xor
lret
pop
jnp
mov
out
test
idivl
inc
jp
xor
jnp
rcrb
push
into
sub
call
mov
ljmp
mov
jmp
xchg
xchg
lods
xchg
pop
test
dec
mov
pop
and
fdiv
jbe
push
mov
mov
arpl
xor
ljmp
in
dec
mov
add
jno
movsl
dec
cmpsl
std
out
push
or
cmp
mov
adc
out
scas
rorb
arpl
push
aam
push
das
adc
xchg
ss
loopne
xchg
push
mov
lahf
lds
out
jbe
jno
push
adc
jl
or
or
pop
lcall
hlt
test
adc
enter
out
mov
push
icebp
sbb
push
addl
xchg
arpl
push
fwait
xchg
or
jnp
pop
mov
out
adc
gs
scas
icebp
mov
add
inc
into
adc
inc
cli
lds
mov
addr16
mov
xlat
rorb
lds
sub
jb
cmp
mov
mov
jns
dec
and
jns
out
cmp
fisubs
and
jmp
fwait
mov
mov
dec
cmp
push
dec
adcb
outsb
jle
mov
scas
outsb
pop
pop
rolb
xchg
cmpsb
in
push
lret
dec
dec
ss
jbe
fs
imul
jecxz
or
sbb
orl
push
dec
mov
arpl
jecxz
mov
in
es
jne
loop
push
pop
mov
jmp
hlt
cmc
or
gs
adc
mov
dec
ret
mov
xchg
test
js
in
bound
mov
imul
pop
outsl
xor
xchg
push
mov
lods
loopne
jge
pop
xor
aaa
icebp
popf
mov
cmp
jmp
ret
stos
pop
mov
jmp
or
jb
cwtl
mov
rcll
mov
repz
xchg
ljmp
addr16
ja
rorl
test
add
jne
inc
jnp
ror
imul
or
mov
jno
adc
jae
dec
inc
sbb
sub
jno
fucom
mov
sarb
pop
xor
fwait
outsb
pop
sahf
cs
add
call
mov
pop
adc
int3
jne
lcall
mov
outsl
aam
mov
cmp
cli
adc
push
int3
call
xlat
xchg
jmp
or
fsubrl
fwait
pop
sub
aaa
dec
or
push
sbb
mov
daa
xchg
enter
cmp
ja
jecxz
testb
add
sbb
fmull
arpl
scas
test
dec
xchg
rorl
shll
js
jge
add
add
adc
test
inc
sub
pop
jmp
fs
cmp
jb
or
mov
and
les
dec
enter
mov
in
mov
gs
rcrl
inc
js
cwtl
add
add
sbb
gs
test
xor
rorb
jb
or
sbb
push
inc
daa
out
jp
cmp
insb
sahf
jnp
inc
xor
jae
push
push
cmp
rcl
push
fsubl
cmp
mov
pminsw
loop
pop
lods
sbb
adc
mov
xchg
mov
pop
jns
stos
shll
jp
jns
lock
mov
notl
adc
push
pop
hlt
pop
lret
jg
nop
and
pop
sbb
mov
xlat
push
and
shll
adc
in
addr16
jmp
data16
sti
scas
pop
mov
xor
sub
lret
sar
push
rorl
addr16
sub
dec
xchg
movsb
les
rol
mov
arpl
sub
adc
iret
push
imul
sbb
mov
imul
ss
jge
sub
sti
xor
and
adcl
xchg
imul
pop
mov
push
xor
push
xchg
and
jmp
add
imul
jge
out
lcall
loopne
das
pop
mov
sti
shrl
insl
dec
adc
mov
push
loop
inc
pop
lods
scas
dec
mov
mov
int3
pop
mov
fdivrs
inc
int
out
dec
cmpb
test
or
jge
mov
aam
pop
addb
mov
dec
xchg
ljmp
jecxz
lods
stos
push
les
test
jae
in
and
mov
bound
pusha
int
xchg
adc
mov
add
or
sbb
ja
cld
pop
sub
sahf
sub
repnz
push
lock
nop
adcl
mov
pushf
jno
nop
in
adc
fadd
xor
mov
lea
roll
jmp
mov
adc
xchg
push
xchg
js
and
sar
adc
and
and
add
insl
inc
or
xor
jnp
sbb
lcall
repz
jne
daa
arpl
sub
mov
mov
sbb
jb
jnp
in
push
mov
imul
inc
movsb
je
inc
cmpsb
xchg
or
inc
xor
sbb
mov
cli
arpl
mov
mov
sbb
pop
inc
adc
push
sbbb
jle
cmp
or
scas
in
and
out
dec
bswap
adc
out
fwait
xchg
cmpl
dec
xor
aaa
je
das
and
pop
loope
dec
in
sbb
call
rcrb
inc
pusha
enter
das
stos
iret
mov
inc
daa
fmulp
fwait
mov
and
mov
sub
int3
cwtl
cltd
sbb
cs
xchg
sub
sub
add
scas
dec
add
das
push
out
hlt
jg
dec
adc
repnz
mov
ja
dec
scas
andl
orb
mov
ljmp
inc
hlt
shll
sbb
in
sbb
popa
lcall
cmp
or
rorb
aam
ret
mov
lretw
lcall
mov
shlb
fiaddl
mov
mov
adc
dec
test
sub
mov
mov
jge
loope
lcall
lcall
loopne
sub
outsb
jns
ljmp
aam
jnp
lock
sbb
mov
xorb
xchg
js
xor
fcmovu
cwtl
mov
sbb
jge
cmpsl
roll
lods
repz
daa
test
cmp
mov
pop
xlat
shll
mov
shl
mov
in
loope
clc
nop
pop
lahf
cli
ljmp
cs
push
cmp
in
push
xorps
lret
les
adc
pop
movsl
stc
ret
aaa
add
gs
cvtpi2ps
cmpsb
dec
scas
jno
cmp
jg
pop
das
adc
cmc
out
mov
jb
dec
jno
xchg
sub
ret
ljmp
sbb
pusha
sbb
out
sbb
and
in
je
sbbb
das
mov
mov
or
jns
lods
adc
cmc
aaa
setae
xor
popf
push
aaa
into
aam
dec
mov
mov
fstpt
ss
lods
jecxz
sbb
push
cmp
jns
inc
push
test
lock
in
popa
xor
les
fdivp
or
push
loopne
or
xchg
sub
xchg
mov
and
pop
sti
sbb
adc
sub
rol
pop
xor
and
push
mov
inc
cmp
test
dec
sbb
inc
aas
mov
dec
pop
inc
pop
divl
push
loop
aad
test
loopne
aaa
jnp
cmc
dec
jae
xchg
js
adc
or
and
lret
or
sbb
jl
rclb
sar
dec
scas
shlb
xor
cmpsl
out
lahf
aam
xchg
sbb
insb
sti
xor
loopne
jge
xchg
xchg
mov
out
lds
pop
push
outsl
jl
repnz
pop
fmull
insl
imul
fwait
call
out
clc
test
lret
rol
fbstp
adc
pop
and
lock
mov
pop
add
jo
dec
adc
mov
pushf
push
xor
mov
sti
punpckhbw
mov
iret
sbb
xchg
iret
stos
data16
iret
ja
call
xor
notl
test
popf
cmp
pop
cmpsb
pop
sub
outsb
mov
fnsave
insb
and
leave
roll
loope
les
push
mov
add
repnz
jns
cltd
lahf
or
pop
xor
je
cmp
addr16
inc
and
popa
mov
mov
xor
movl
dec
inc
mov
dec
push
sahf
ljmp
popa
pop
in
sbb
add
popf
aas
sbb
jne
fidivrl
xchg
adc
mov
xor
cmpsl
sbb
rorl
add
adc
fstp
loope
inc
jecxz
cli
les
daa
divl
faddp
lret
sub
cs
jns
adc
andl
aam
mov
popf
inc
mov
cmpsb
cs
out
push
dec
mov
jmp
push
cld
leave
cmp
ret
inc
xchg
ja
bound
jecxz
jne
push
xor
mov
and
inc
ficompl
jo
push
test
xor
mov
mov
jnp
jo
rcrl
xor
mov
xor
int
jne
arpl
xchg
dec
idivl
in
andb
test
mov
rorb
or
mov
loop
fbld
fimull
mov
cmpsl
nop
lahf
jae
pushw
or
das
daa
imul
pop
in
in
or
xlat
cmc
adc
imul
sahf
outsl
mov
sti
mov
mov
pop
xlat
int
das
imul
push
add
xchg
inc
bound
insb
subb
push
push
lock
iret
xlat
pop
sub
xor
int3
cmp
repnz
xchg
or
movsb
loop
cmp
mov
stos
notl
pop
sbb
push
dec
mov
call
mov
std
loope
jp
push
addr16
int3
mov
mov
adc
mov
fcoms
fdiv
mov
idiv
sti
sub
add
add
dec
adc
gs
add
leave
cmp
sub
subb
pop
rcrb
cld
adc
dec
enter
xchg
test
mov
add
rcrb
scas
dec
pop
jbe
jge
sahf
cmp
push
imul
stos
mov
fbstp
aam
xchg
xor
das
and
lods
xchg
bound
sbb
mov
mov
and
addr16
adc
add
mov
mov
mov
push
sarb
hlt
out
shr
movsb
mov
leave
xchg
insl
loope
inc
push
dec
and
popf
ret
push
cwtl
pusha
call
cmp
in
mov
stc
test
adc
or
xlat
loopne
int
mov
jae
inc
adc
outsb
pop
addr16
notb
sbb
dec
or
sub
jbe
inc
push
xchg
aad
cwtl
mov
mov
imulb
jge
fcomp
adc
cltd
xchg
and
pop
lret
dec
inc
fs
in
mov
fidivrs
pop
push
xchg
test
xchg
xor
popf
pop
aad
sub
fsubl
sahf
lcall
cld
pshufw
outsl
adc
add
push
mov
inc
mov
jae
mov
add
loop
mov
xchg
and
pusha
xchg
test
pop
orl
dec
in
lods
push
mov
in
adc
ss
pop
dec
outsb
scas
sub
dec
sbb
bound
rclb
hlt
ss
mov
lock
or
int3
imul
mov
faddl
jns
mov
aam
sub
sub
sub
and
testb
dec
push
ljmp
fs
fdivrl
ficoms
sti
btc
in
sbb
sbb
cmp
aas
or
xchg
mov
fcomi
addb
mov
dec
jecxz
sbb
jno
enter
and
and
into
daa
ss
fsts
cltd
sub
xchg
enter
dec
cli
mov
sti
sub
adc
loopne
test
jbe
jg
dec
jo
adc
cld
jnp
adc
and
push
push
aas
ret
lock
xor
and
lock
pusha
imull
adc
aaa
jns
lahf
jno
push
repnz
out
sub
inc
jb
jne
xor
dec
jg
cmp
and
shrl
in
mov
mov
fcmovu
movsl
out
mov
mov
pop
loope
movsl
dec
xor
and
xchg
sub
movsl
push
pop
pop
into
mov
mov
popl
xchg
adc
mov
pushf
lods
push
adc
and
inc
loope
stc
ljmp
cmp
inc
xchg
icebp
enter
les
arpl
lret
xchg
mov
lods
sub
sub
bound
into
dec
stos
dec
dec
mov
ja
sbb
ficoms
cld
sbb
dec
cltd
sti
inc
mov
jo
test
mov
cld
sahf
adc
movsb
jae
jnp
mov
daa
pop
push
mov
xor
shrl
xor
push
mov
cli
xchg
mov
sub
cmp
dec
push
xchg
and
mov
jmp
cmp
push
jl
aad
pop
loopne
pop
lret
or
mov
jb
insb
add
or
jo
dec
xchg
jo
inc
lods
push
jnp
dec
inc
and
les
sbbl
repz
pop
mov
pop
insl
pop
cmpsb
mov
adc
ret
in
fwait
xchg
xor
fdiv
lret
xchg
inc
rorl
pop
arpl
int
insb
es
push
push
inc
cwtl
fcomip
aas
arpl
and
ror
in
rcl
mov
data16
ret
aad
out
out
push
sbb
mov
mov
outsb
xchg
adc
xor
lret
in
and
pop
mov
add
pop
cmp
test
dec
fwait
and
pop
and
mov
je
xchg
movsb
pop
push
inc
or
mov
ds
ljmp
fistpl
lret
idiv
popa
call
hlt
std
lods
mov
mov
mov
mov
mull
lret
adc
cmp
sub
and
cmp
js
xchg
pop
sbb
add
pop
cmc
jns
js
push
out
push
dec
push
pop
ret
xchg
push
push
mov
inc
rcl
aas
push
pop
rcll
mov
jbe
xchg
sbb
aad
scas
addr16
sti
or
mov
ficoms
insl
ret
push
das
jl
xor
or
cltd
jnp
or
sbb
mov
loope
xchg
lea
jg
shlb
mov
push
ds
or
mov
sub
jb
xchg
push
fildll
or
sub
jle
aad
mov
pop
pop
sbb
xchg
cmpsb
sub
popl
push
cmp
dec
leave
clc
lret
out
dec
cltd
ret
sbb
popa
push
lcall
lret
cwtl
lock
pushf
inc
rorl
mov
shrl
xchg
xchg
jge
jnp
cld
sbb
cld
movsb
dec
fldcw
mov
movsl
lds
dec
fs
aad
fstps
aam
mov
insb
xchg
mov
inc
xor
mul
jmp
ficoml
dec
sbb
mov
mov
scas
mov
cld
dec
push
outsl
fldt
test
out
ret
in
pop
mov
jp
lds
cmp
lods
xchg
subb
xchg
clc
lods
ret
stc
inc
cwtl
mov
pop
jb
loop
ss
jecxz
pop
pop
dec
gs
fimuls
in
std
out
sub
or
mov
and
loop
insb
cmpsb
mov
aaa
mov
mov
xchg
xor
jae
stos
pop
rcrb
push
push
ss
enter
std
ss
sarb
lock
pop
xchg
sub
insb
sbb
or
push
mov
daa
in
push
xchg
sbb
xlat
ffreep
sbb
hlt
ljmp
shrl
jecxz
enter
or
push
mov
mov
std
push
jle,pt
cmc
call
clc
jmp
xchg
stos
loopne
dec
mov
test
push
fstl
adcl
mov
rcll
push
pop
std
scas
jbe
ljmp
add
push
sbb
push
cli
daa
jge
ljmp
xor
aam
fsubs
in
insl
mov
fdivs
add
add
lock
movsl
mov
mov
test
push
push
cmp
or
shl
ret
cmp
shll
xor
mov
mov
das
popa
popa
sbb
sarb
mov
adc
jns
jae
fsts
insb
xor
push
in
out
cld
add
lea
xchg
pop
mov
ds
pushf
or
and
and
stc
sub
mov
movsb
mov
loopne
lret
sub
lahf
mov
mov
mov
xor
popf
add
jmp
scas
dec
js
mov
out
mov
sbb
mov
shll
or
ret
xchg
or
or
xor
dec
mov
rcl
mov
sub
sbb
cmpl
lcall
mov
xor
ss
test
mov
hlt
inc
or
and
cmp
lods
movl
jo
mov
iret
shll
test
adc
out
jns
mov
xor
flds
sub
mov
add
and
enter
ret
sub
adc
or
jg
sub
in
adc
or
sub
sti
inc
test
mov
jns
adc
mov
cwtl
insb
cmp
aam
pop
adc
cmp
cmpsl
mov
mov
cmp
mov
add
inc
je
cld
xchg
fdivl
pop
lock
and
inc
dec
cwtl
aad
dec
add
cmp
and
cmp
dec
and
jae
pop
dec
jbe
mov
push
imul
cltd
xlat
push
fistpll
or
loope
jle
nop
sub
jae
sbb
and
out
cmpsb
cltd
jo
cltd
lret
mov
jg
jns
push
jecxz
add
xor
dec
loope
rcrb
xor
mov
mov
fadds
dec
insl
arpl
ret
adc
repz
mov
shlb
jae
push
mov
cltd
arpl
cmpsl
xchg
and
popf
sbb
mov
popaw
pushf
stos
imul
outsb
push
push
push
std
cmc
jae
xor
dec
adc
ja
jnp
jle
pop
add
stos
jg
cmp
xor
shlb
out
push
jecxz
lods
outsl
or
lea
sbb
xor
dec
cmp
push
bound
xchg
or
jle
dec
imul
dec
cltd
push
or
xchg
int3
lcall
inc
mov
jle
cmpsl
mov
movsb
push
lods
jp
sti
jle
aad
mov
adc
add
aam
push
mov
jg
into
cmp
sub
mov
and
fidivrl
pusha
inc
pop
jg
xor
push
movsl
rcrb
jne
push
repz
fldenv
dec
xchg
pushf
rclb
and
cltd
xorb
lds
sbb
and
incl
and
mov
xchg
repz
fsubrl
js
xchg
sti
roll
mov
pop
sbb
fcoml
pusha
dec
popf
sbb
mov
push
popf
fmuls
push
sbb
xchg
fcmovnb
sub
adc
push
xchg
addb
sub
das
mov
hlt
push
stos
ss
dec
in
fwait
xor
and
mov
int3
scas
sub
into
mov
inc
add
dec
and
dec
adc
sahf
or
pop
lret
inc
ret
push
or
clc
or
push
mov
mov
data16
mov
imul
outsb
outsl
cwtl
pop
mov
mov
shl
or
mov
fnstcw
neg
inc
lret
jmp
push
pop
mov
jmp
test
cmp
mov
mov
mov
mov
lods
adc
and
xor
inc
je
xor
mov
xchg
clc
xchg
xchg
xchg
shll
movsb
pop
add
or
adc
cmp
inc
adc
inc
shrb
fmull
mov
push
dec
sub
push
inc
outsb
call
pop
and
dec
jge
fisubrs
cs
lahf
cmp
je
scas
and
out
and
sub
lods
cli
pop
cmpsl
or
or
sub
push
mov
push
push
inc
movsl
pop
inc
sbb
or
dec
mov
orb
inc
inc
fldz
sbb
mov
push
ja
out
cmp
jae
sbb
pop
mov
mov
jae
ss
mov
sahf
ret
push
adcl
mov
ja
xor
sbb
dec
fists
cmp
call
int
jmp
int
aam
push
incl
ljmp
xor
sahf
dec
add
and
test
jp
jecxz
clc
shll
loopne
cld
xor
xchg
cmp
add
push
int
cmp
pop
jo
pop
cli
sub
movsb
lock
pusha
jne
cmp
fldcw
add
je
lods
jbe
add
mov
aad
mov
pushf
jo
insl
mov
cwtl
ds
sqrtps
add
add
call
aaa
movsl
cmp
mov
sub
pop
ret
ljmp
scas
rcrl
cmp
imull
imul
push
push
addr16
aas
xchg
ret
into
sbb
push
mov
ljmp
cmp
or
mov
mov
addr16
jo
add
ljmp
sub
mov
cmc
sub
fxch
sub
pop
mov
adc
push
addb
fwait
push
ret
rorb
sbb
test
jbe
sub
pop
popf
aad
jle
fimull
fadd
aas
adc
sbb
mov
pop
in
inc
mov
pop
adc
and
pushf
outsb
out
mov
icebp
stc
movb
lds
sbb
lds
sbb
mov
mov
ja
add
sbb
data16
adcb
rcrl
fsts
jecxz
outsb
or
sub
mov
ss
mov
movsl
pop
lret
mov
cltd
fisubl
nop
fdivr
adc
repnz
xor
add
testl
dec
mov
dec
mov
push
jmp
jne
xchg
notl
cmp
dec
hlt
adcl
push
pusha
addr16
pop
and
movsl
jne
push
int3
aad
cmc
notb
rcr
repz
and
inc
inc
into
xor
and
dec
outsb
data16
pop
adc
cmp
loop
push
inc
or
jns
sub
lahf
add
add
out
movb
cld
mov
inc
sbb
push
les
cltd
xor
dec
adcl
push
or
jmp
call
loopne
pusha
or
test
xchg
lods
clc
mov
imul
cmp
icebp
cmpsb
or
push
xchg
cmp
pusha
xchg
stos
les
push
dec
fs
test
adc
fldenv
lea
mov
icebp
lea
mov
loope
xchg
rcrb
sti
rcll
lods
sub
push
sub
aas
cmp
sbb
add
hlt
cmp
jl
cli
cmpsb
addr16
fisttps
fwait
lea
adc
lods
mov
hlt
imul
mov
js
fsubrs
inc
mov
pop
arpl
add
jmp
sbb
mov
and
push
xchg
sub
addr16
pop
lods
xchg
pop
fmuls
pop
das
into
adc
aas
jp
jae
or
and
mov
add
insb
into
mov
xchg
js
test
in
pop
mov
xor
push
jns
xchg
dec
jg
xor
add
sbb
jno
xchg
dec
cmp
mulb
xchg
cmpsb
out
jle
cmp
out
ss
ret
sbb
adc
fs
insl
ret
pop
mov
mov
sub
mov
enter
sar
das
cs
mov
mov
pop
cmpsb
daa
in
adc
cmp
inc
rcl
les
jae
fisubl
push
mov
sbb
push
loope
stos
aad
shrl
lea
ret
mov
jecxz
mov
xchg
shl
in
push
or
sbb
cltd
xorl
mov
call
mov
or
insb
jb
push
shrb
inc
popf
loope
sbb
xchg
xor
inc
insl
ss
std
inc
and
sbbb
fildl
rclb
push
sub
fcompl
jne
in
ljmp
xor
inc
push
adc
add
dec
popa
jbe
dec
test
add
mull
jl
imul
movsb
xor
sub
mov
cmp
or
lret
adc
out
pop
cmp
lcall
inc
cmp
inc
popa
popa
pop
enter
repz
lock
fisubrl
data16
mov
push
ss
sahf
push
lods
and
push
jne
les
ret
lret
stc
push
call
xchg
inc
pop
sbb
fcoml
test
jb
xchg
out
mov
push
mov
gs
mov
and
mov
push
push
int
inc
adc
or
cmpsl
sub
xor
negb
xor
mov
xor
lods
scas
outsl
or
int
out
popf
fidivrs
jns
dec
add
push
mov
daa
mov
js
pushf
jae
add
adc
rol
ret
decb
testl
lcall
push
add
jno
scas
jbe
icebp
addr16
imul
sub
xchg
jne
or
out
pop
push
cmp
push
dec
jnp
jnp
jno
xchg
mov
imul
mov
and
rcrb
outsl
cmpsl
repz
leave
push
dec
scas
hlt
xchg
popf
adc
push
fs
sbb
shlb
cmc
add
add
neg
sub
mov
or
inc
insl
pop
jmp
test
adc
xchg
inc
and
jae
cld
push
int3
arpl
jp
dec
arpl
xor
cmpsb
lds
lock
pop
push
inc
xchg
mov
out
mov
adc
gs
into
mov
cltd
inc
or
insb
jo
mov
xchg
call
fcompl
pop
xlat
cmpsb
jp
pop
add
push
out
stos
les
xor
divb
mov
pop
cmpsl
ja
inc
push
std
pop
cmpsb
add
pop
out
std
in
mov
mov
sbb
adcl
dec
xchg
mov
xor
iret
inc
stos
icebp
sub
in
lcall
mov
cmp
hlt
cmp
xchg
insb
or
std
cmp
cmp
fwait
sahf
push
rcrb
in
pop
lods
sub
movsb
mov
or
rcl
push
jo
or
add
jno
push
pop
andb
adc
pop
sbb
sti
push
movsb
jae
sbb
adcb
imull
mov
add
and
mov
int
les
das
mov
adc
mov
inc
sbb
push
pop
sub
lret
popf
lds
in
int3
mov
xchg
pop
das
cmp
in
pop
inc
or
lock
jne
cmp
jl
sbb
cmp
add
xor
sahf
xchg
mov
enter
dec
cmpb
outsb
iret
aaa
ret
add
jb
and
fnstenv
pop
dec
mov
adc
xor
inc
sub
rolb
mov
lds
das
or
mov
ss
mov
std
popa
dec
or
cmc
jge
popa
cmp
inc
imul
lahf
jo
fdivr
pop
jnp
lock
push
clc
pushf
out
cli
lds
nop
and
xchg
fs
fxch
jns
and
xchg
dec
into
cmc
je
mov
in
mov
sbb
inc
into
ljmp
inc
push
mov
mov
in
fstps
sbb
insb
outsb
rclb
sub
xchg
test
adc
cmp
mov
fwait
inc
arpl
mov
cmp
mov
push
aaa
inc
aam
pop
mov
mov
push
call
dec
repnz
adc
mov
add
dec
in
jecxz
stc
jb
jge
lret
add
addr16
inc
dec
xadd
add
inc
add
aas
int
imul
push
jae
out
xor
jmp
mov
jno
xor
dec
mov
xchg
xor
add
daa
loop
rcrb
jecxz
xor
fcoms
push
call
pop
shll
adc
popf
inc
dec
pop
mov
mov
std
jp
cmp
sub
les
xchg
sub
orb
add
test
add
lock
dec
jno
dec
dec
popl
adc
jge
mov
jns
sbbb
sub
inc
add
decl
push
adc
test
imul
push
inc
adc
insb
lret
cmp
dec
loopne
dec
cs
xchg
jge
pop
push
lea
je
mov
xlat
jno
outsl
mov
sbb
sbb
mov
push
int3
xor
cmp
inc
xchg
test
dec
cmp
xor
popa
lret
leave
jb
dec
adc
push
mov
inc
sahf
pop
ljmp
lret
pop
cmp
fwait
cmp
pop
cmp
jne
insl
shrl
fdiv
cmp
insb
jne
mov
jmp
jecxz
xchg
cld
and
pop
mov
sbb
ficompl
subb
push
push
xor
lret
es
rcrl
or
jb
dec
sbb
jle
inc
sbb
or
mov
fistps
jno
jns
xor
loopne
aas
cmp
es
out
xchg
push
repz
xlat
mov
pop
clc
loopne
adc
xchg
out
mov
push
ret
adc
test
mov
mov
push
sub
mov
cs
lret
and
rcll
out
xchg
in
mov
cmp
jge
fcomi
les
jae
and
inc
mov
arpl
push
in
fwait
mov
sbb
cmp
cmp
ret
xchg
and
aaa
mov
mov
sbb
add
pop
ror
push
pop
and
xor
call
sarl
add
fucomp
imul
cmp
arpl
mov
xor
jbe
hlt
mov
jne
enter
xchg
sahf
mov
cld
mov
addr16
jmp
adc
push
cmp
cmpsb
push
xchg
inc
add
push
cmp
dec
scas
mov
clc
push
mov
int3
insl
and
sbb
cmpsb
orb
xchg
pop
out
adc
outsl
addr16
jl
lret
lock
outsl
xchg
clc
mov
imul
stc
rorb
and
das
adc
stos
aam
arpl
repnz
idivl
push
sbb
cltd
popa
dec
negb
sbb
cli
mov
mov
fmull
ss
or
pop
and
dec
xor
xchg
js
std
aad
sbb
mov
loop
adc
xor
iret
mov
cmp
dec
aam
stc
popf
pop
les
adc
ljmp
stos
xor
push
out
dec
arpl
push
cmp
or
stc
rcll
sbb
xchg
ret
or
mov
ss
mov
sbb
mov
icebp
cmpsb
jne,pt
fstp
mov
ret
inc
imul
in
and
mov
push
pop
in
mov
loopne
or
mov
lahf
push
fsubrl
jp
mov
xlat
aad
lods
data16
pushf
inc
mov
mov
cs
mov
loop
out
and
out
push
fcoms
jae
cs
popa
fs
stos
int3
out
xor
pop
and
inc
dec
sub
adc
dec
push
loopne
mov
and
sub
test
popf
pusha
mov
aam
cmpsl
push
adc
sub
sub
pop
lods
push
clc
pop
xchg
mov
imul
cmp
cmp
cmp
idivl
imul
sub
or
and
push
cmp
cmp
or
insl
je
aaa
stos
pop
push
in
push
clc
dec
sub
shlb
xchg
scas
enter
dec
jecxz
hlt
adc
xlat
dec
add
adc
and
es
in
pop
lcall
test
lahf
cmpsb
pushf
cmpsb
aad
and
popa
repnz
mov
push
leave
adc
pop
jbe
fistps
fcmovu
jbe
mov
filds
inc
jns
add
sbb
idivb
mov
data16
test
in
and
rcrb
rorb
mov
fnstsw
sti
mov
cli
mov
test
jae
decl
adc
mov
mov
cwtl
dec
jp
jnp
mov
adc
insl
add
int3
jo
adcb
lds
dec
or
sub
movsl
nop
mov
js
roll
xor
dec
leave
cmpsb
xor
mov
jmp
rcrl
adc
sub
lods
lahf
jge
inc
and
imul
in
jecxz
jbe
popf
xchg
mov
jecxz
xor
add
mov
pushf
das
dec
xor
xchg
mov
imul
scas
jp
ja
insb
mov
push
mov
mov
jecxz
xchg
pushf
xchg
idivl
cmp
pop
das
popf
cs
int
jno
xchg
add
xor
cs
fnsave
int
jecxz
sahf
mov
in
sub
fimuls
mov
mov
shll
icebp
sbb
in
sub
dec
xchg
pop
pop
pop
cmp
jmp
pop
and
mov
in
les
adc
pop
hlt
das
and
sub
and
push
mov
pop
or
push
inc
sbb
sbb
mov
out
pop
xchg
pushf
pop
loopne
mov
fwait
pop
mov
repz
out
popf
out
imul
pop
or
cli
push
xor
dec
clc
dec
or
push
adc
cmp
jg
push
vmread
xor
std
cmp
sbb
jb
dec
mov
and
aaa
mov
xchg
mov
leave
mov
imul
or
cltd
call
jg
xchg
mov
repnz
popa
das
ret
addr16
mov
es
jo
fcompl
stos
outsb
sub
cmp
mov
fiadds
stos
aas
in
and
lcall
mov
rorl
and
lret
test
pop
nop
mov
lds
xchg
push
sub
das
ret
jecxz
lock
in
stos
mov
xor
sub
imul
or
mov
icebp
ljmp
xchg
pop
dec
movsb
outsb
xchg
or
imul
cmp
add
or
in
bound
adc
loope
mov
lods
addr16
xchg
jne
dec
pop
sarb
mov
lods
lods
mov
pop
sahf
and
sub
jno
xchg
arpl
adcb
mov
cmpsl
sahf
mov
fs
dec
loope
fadd
sub
fsub
fs
cmp
mov
jle
loopne
test
int
mov
sarb
pop
inc
insb
and
and
mov
add
cmpsl
adc
call
dec
jg
lock
adc
and
call
call
daa
test
nop
subl
and
sbbl
int3
inc
jb
je
and
xlat
mov
adc
cld
cltd
pop
dec
mov
and
scas
lret
push
insl
in
dec
inc
mov
jge
xor
mov
popf
push
add
inc
in
lret
movsb
mov
pop
roll
jo
lods
cmp
push
sbb
std
mov
push
and
adc
jbe
mov
or
inc
outsb
mov
scas
ljmp
mov
xor
das
enter
jg
sub
jae
out
movsl
dec
mov
sbb
inc
je
lret
clc
stos
and
aam
push
sbb
rcl
sbb
add
sldt
das
pop
jo
ds
dec
push
shll
ret
xor
mov
gs
push
in
add
xor
test
pop
popa
mov
inc
cld
mov
and
mov
mov
xchg
and
xor
push
outsb
cwtl
popa
stc
andb
outsb
pop
dec
xchg
lock
addr16
mov
idiv
inc
ja
mov
push
ja
and
mov
leave
xchg
mov
gs
adc
pop
insb
push
les
jecxz
sbb
or
jno
dec
orb
imul
add
inc
adc
pop
and
cltd
adc
xlat
jno
xor
pop
repnz
loop
stos
mov
pop
jnp
add
data16
subl
clc
stos
or
mov
mov
rcrb
dec
adc
lcall
mov
enter
cltd
jb
in
dec
orl
push
push
inc
popf
stos
push
popf
ss
xchg
lock
or
mov
mov
cltd
mov
pop
mov
aad
xor
aaa
cltd
loopne
mov
rcrb
imul
mov
sahf
mov
push
dec
jecxz
dec
loop
push
rorl
mov
lods
icebp
adc
imul
imul
push
ret
jle
call
mov
or
stc
fnstsw
arpl
lock
add
push
aad
imul
push
dec
pop
repz
fstpt
mov
daa
loopne
frstor
mov
bndldx
cwtl
scas
mov
pushf
cmp
dec
jno
test
and
adc
insb
pusha
in
jno
shlb
insl
in
mov
push
mov
scas
out
sbb
loope
mov
sub
cltd
sub
decl
ja
xor
dec
or
cmpl
mov
sub
hlt
pop
sbb
stos
inc
jbe
xchg
sub
pushl
inc
stc
pop
mov
pop
insl
and
cmpsl
cmpsl
mov
push
cmpsl
mov
dec
in
mov
adc
cwtl
jmp
rcl
enter
cmp
pop
rcll
dec
or
fdivs
sbb
insb
cs
dec
sbb
inc
fwait
mov
lahf
iret
and
dec
ret
and
sub
cmp
sub
mov
mov
loop
add
fdivr
cmp
xor
fwait
adc
stos
jae
and
push
stos
pop
push
or
cld
sbbb
cmp
pushf
repnz
pop
lahf
xchg
adc
push
jl
mov
loope
inc
pop
stos
in
hlt
lcall
dec
push
cmp
test
pop
movsl
inc
mov
xor
sbbb
stos
and
sbb
pop
and
jg
xchg
dec
cld
add
pop
incl
fnstenv
lods
mov
dec
testb
and
push
popf
sub
mov
xor
inc
push
ljmp
mov
in
scas
in
aas
xor
push
xor
mov
cmp
sub
adc
xor
popa
xlat
mov
pop
xlat
dec
push
xlat
cmp
jp
mov
jge
hlt
dec
sub
cmp
fisttpl
cwtl
test
add
test
test
jmp
stos
jecxz
add
ja
push
mov
insb
mov
cli
cmpsl
dec
xlat
push
lods
test
clc
mov
xor
popa
sbb
and
lahf
push
push
mov
popa
adc
loop
shrl
outsb
adc
dec
mov
lock
xchg
and
mov
je
or
mov
mov
icebp
jge
mov
adc
xchg
jp
outsl
push
pop
mov
mov
stos
add
add
or
inc
mov
les
mov
stc
outsb
push
or
jge
mov
push
test
xchg
push
pop
lods
test
sub
neg
sbb
inc
push
adc
push
inc
out
sbb
lods
testb
or
push
mov
cmc
xor
leave
cld
pusha
mov
jg
insb
cld
test
pop
lods
cmc
mov
movsb
mov
lock
add
inc
in
jp
xchg
mov
adc
ret
nop
mov
pop
cli
ficompl
or
cmc
lcall
cmc
lret
fsubrl
fists
cmpsl
mov
adc
dec
lods
or
js
orb
push
push
push
test
sbb
pusha
incl
cli
mov
xor
xchg
adc
pushf
div
sub
inc
aaa
dec
movsl
ret
adc
mov
bound
mov
xor
popa
xchg
js
call
push
inc
and
xchg
ds
dec
mov
or
or
inc
ret
into
inc
lods
andb
leave
add
stos
pop
mov
aam
outsb
fcompl
fdivl
lock
mov
xor
test
test
lods
pop
mov
push
jecxz
decb
arpl
pop
repz
or
mov
bnd
aas
xor
jno
mov
adc
mov
repnz
mov
jb
or
test
xlat
pop
movl
inc
pop
je
jp
int3
push
loop
sbb
dec
xchg
sti
mov
test
aad
imul
rclb
mov
or
adc
xchg
popa
insl
rcrb
cli
rorb
pop
loop
loopne
push
fidivl
nop
and
arpl
mov
sarl
mov
aam
iret
xor
or
mov
jecxz
and
scas
out
and
icebp
push
nop
xchg
mov
adc
in
negb
push
jg
push
jmp
ja
enter
jb
dec
andb
stos
pushf
or
mov
dec
pop
adcb
jno
movnti
xchg
cltd
jle
repnz
adc
xor
and
push
leave
daa
xchg
ret
pand
int3
cld
das
cld
push
std
push
in
in
jle
inc
pop
data16
mov
jns
mov
decl
or
icebp
test
add
es
sub
mov
cmp
shlb
icebp
arpl
scas
xor
aam
pop
dec
repnz
scas
fisubl
lcall
dec
fidivl
icebp
pop
mov
push
dec
inc
jle
pop
scas
or
add
data16
mov
cwtl
je
mov
dec
mov
es
icebp
dec
inc
rcrl
xor
pop
sbbb
fistps
stos
pop
lret
xchg
and
jmp
pusha
cmp
push
fildll
pop
out
pusha
push
sub
lahf
clc
pop
pop
lods
mov
jle
outsb
loope
shrb
repnz
int3
lock
iret
into
push
aas
lods
adc
dec
pop
sarl
cmp
negb
sbb
icebp
ret
pop
jbe
add
in
faddl
iretw
adc
mov
loope
adc
faddl
mov
je
js
mov
sbb
xchg
lock
jnp
push
xchg
xor
fldenv
sti
jno
popa
mov
daa
push
sbb
sub
sub
sub
and
mov
ja
mov
daa
jae
cmpsl
popa
cld
mov
xor
push
or
jp
and
xorb
xor
stos
or
rcll
sbb
movsb
clc
mov
add
xchg
xchg
out
mov
adc
pop
insl
dec
bound
and
and
mov
bound
cwtl
xchg
mov
add
pop
adc
les
dec
xchg
scas
in
jns
dec
push
inc
lods
rcl
and
xor
lock
mov
lahf
xchg
mov
std
cmp
mov
jnp
js
sbb
adcl
cmp
mov
mov
test
arpl
stos
xor
ret
mov
out
lods
stc
sbb
dec
mov
mov
or
push
xor
insb
or
mov
inc
adc
xchg
dec
xchg
stos
clc
jge
adc
sti
adc
clc
mov
arpl
inc
jge
jae
or
lret
ret
lcall
pop
fldenv
ffree
loop
push
mov
pop
das
andl
mov
push
in
mov
cmp
fwait
xchg
clc
fnstenv
inc
cmp
mov
mov
cmc
mov
gs
mov
int3
mov
xor
and
out
repz
push
mov
mov
insl
mov
fs
adc
cmp
push
fistps
out
test
aam
xchg
test
arpl
addb
sub
sbb
sar
pop
inc
dec
ret
out
lahf
xchg
in
lretw
pop
mov
and
xor
shrb
cmpsl
flds
shl
sub
inc
inc
daa
mov
mov
jnp
mov
xchg
loop
adc
mov
mov
xchg
rcl
in
sub
ret
mov
orl
mov
mov
sub
adc
jae
pop
mov
shrb
mov
adc
cmp
sub
or
cs
out
jge
int
adc
inc
fldl
ret
ret
jne
seto
das
xor
mov
jb
mov
imul
fdivrs
shlb
push
lds
mov
sub
iret
sbb
fidivl
cmc
sub
xchg
dec
xchg
pop
pop
cmp
shlb
ror
nop
hlt
jmp
pushl
std
sarl
lea
shlb
lret
fsubr
xchg
pushl
add
into
dec
pop
ljmp
out
or
inc
je
mov
inc
inc
fnstcw
lods
jbe
adc
ret
cmp
notb
cs
jecxz
sahf
vmovss
adc
mov
stos
mov
xor
je
imul
xor
andl
call
pop
lds
leave
cmp
imul
mov
std
pop
mov
js
jecxz
inc
lock
push
mov
xchg
rcll
add
inc
outsl
adc
inc
rcrb
lret
negb
imul
imul
fstpt
call
mov
jecxz
mov
lret
inc
cmc
push
inc
xor
outsb
or
sub
cmpsb
add
mov
push
xchg
cli
cwtl
mov
inc
push
mov
mov
adc
push
mov
pop
lock
xor
test
xchg
cmc
add
push
push
pop
js
test
and
imul
mov
push
fbld
xchg
loope
pop
scas
mul
leave
faddl
and
mov
ud1
mov
adc
sub
rcl
cmc
frstor
mov
or
mull
cmpsb
xchg
das
fxch
inc
movb
mov
sti
lcall
das
xchg
add
pop
pop
adc
hlt
mov
sti
sbb
movsb
xorl
scas
daa
or
adc
cmp
pop
enter
adc
xor
jbe
out
mov
shll
in
popa
and
test
sti
push
das
cltd
adc
jle
or
dec
repnz
and
aam
pop
repz
and
xlat
bound
pop
sbb
movsl
rol
mov
xor
jecxz
ret
inc
xchg
sbb
jns
push
fiaddl
cmp
cmpsl
cs
dec
cmp
les
ja
test
fdivrs
mov
cwtl
push
or
stc
ljmp
jecxz
xchg
mov
xchg
sub
mov
stos
adc
test
sub
push
sbb
jge
adc
clc
cmp
sub
popf
lock
mov
sub
mov
fs
add
sarl
hlt
loop
mov
ss
push
loop
mov
in
mov
test
shl
and
xchg
in
aaa
xor
xchg
push
xor
xchg
repnz
ds
popa
jl
sbb
xor
cltd
mov
pop
inc
cltd
ja
sti
and
out
mov
and
pushf
xor
testb
scas
outsb
push
push
jle
in
xlat
xor
dec
ret
jnp
xchg
inc
ljmp
aas
pop
icebp
or
adc
data16
iret
hlt
dec
dec
jecxz
mov
cmc
jae
mov
in
lcall
loope
xchg
jl
mov
je
inc
push
push
jge
js
or
ror
leave
decb
sub
cli
iret
sbb
xchg
mov
mov
push
xlat
call
repnz
xor
xchg
mov
xor
mov
add
mov
outsl
dec
mov
mov
and
jge
out
mov
pop
and
cmp
push
into
pop
pop
es
cmc
xor
sub
jp
xchg
push
and
je
js
fs
xchg
nop
mov
push
mov
inc
mov
push
xchg
cmpsl
inc
fisubl
sarl
leave
rcr
nop
xchg
mov
push
pusha
idivl
into
imul
mov
movsb
std
xchg
jne
jecxz
int
push
dec
xor
pusha
loope
or
pop
xor
jno
lock
scas
mov
into
fstl
fisubs
outsl
add
mov
push
or
stos
push
iret
mov
in
sub
inc
sub
negb
push
shrb
sub
pop
xchg
sysexit
imul
push
mov
dec
js
mov
push
xor
mov
add
gs
lret
int
lcall
jae
jnp
lret
popa
loop
or
push
inc
lret
and
or
xchg
inc
jle
daa
cmp
icebp
negb
jnp
sti
fcmovnb
dec
adc
or
sub
mov
lret
lods
testb
cmpsl
mov
mov
decl
push
mov
pop
sub
sbb
mov
ss
xchg
out
dec
fldcw
jecxz
scas
leave
mov
lods
fdiv
in
xchg
test
mov
sub
or
pop
push
mov
cmpsb
into
cli
insb
int
sub
adc
loop
bound
stc
push
add
stos
stos
mov
pcmpeqd
loopne
push
out
jo
and
pop
add
ficompl
jne
fsubl
add
sarl
push
pop
xchg
inc
orl
loopne
jae
ljmp
jl
dec
push
push
insb
dec
repz
fstl
xchg
xchg
sub
pop
xchg
testl
inc
inc
stos
mov
and
sub
xchg
push
dec
pop
out
jg
and
outsb
in
push
lock
mov
cs
nop
cmpsb
stos
pop
rcrb
pushf
pop
jge
movsl
push
sarl
adc
dec
cmpsb
lds
xchg
fmulp
sub
mov
ss
add
adc
lock
sbb
clc
adcb
popa
mov
cs
aad
push
pop
xchg
fisttps
es
hlt
mov
dec
mov
inc
fistl
inc
sbb
jne
out
push
sub
jo
and
push
pop
xor
subb
pop
dec
test
pop
lcall
jmp
sbb
hlt
sbb
mov
and
mov
push
pop
in
xor
xor
inc
sub
mov
into
sub
cmp
sti
out
outsb
pop
popf
rclb
pop
dec
rcr
dec
xchg
rclw
jle
ficompl
sbb
add
in
int3
sti
aas
sub
in
jp
pop
and
jae
rcll
mov
inc
out
movsl
sbb
xor
popf
sub
push
aad
lds
inc
cmpsb
les
ffree
xor
addr16
pop
or
dec
out
jg
add
insb
ds
pushf
add
cmp
bound
fs
inc
dec
pop
or
pop
and
hlt
sbb
xchg
jnp
inc
or
lods
insb
dec
jo
push
sbb
inc
mov
pop
fdivp
negl
cs
jp
sahf
mov
push
lea
into
cmp
leave
lcall
jle
add
scas
mov
add
aas
push
cmc
lcall
xchg
mov
movsb
daa
add
outsb
inc
loop
insl
cmp
les
push
dec
data16
fistl
dec
out
push
in
outsb
and
decb
ret
xor
cmpsb
movsb
pop
xor
cli
xor
std
sbb
gs
rcll
inc
xchg
cmpsb
adc
hlt
fs
roll
lods
pusha
les
cmp
mov
pushf
arpl
sar
pop
mov
mov
pop
mov
arpl
pushf
cmpsb
subb
xchg
adc
mov
outsl
inc
ds
xor
jns
test
gs
je
jecxz
sbb
xor
gs
out
and
sbb
incb
mov
rol
inc
movsb
mov
rcrb
scas
nop
mov
pop
xor
repnz
ja
fs
call
lods
or
jle
pop
dec
adc
shll
out
imul
aam
leave
or
mov
push
push
or
mov
pop
es
aam
and
pop
xchg
mov
adc
jecxz
and
jecxz
iret
xchg
sbb
push
cld
movb
push
xchg
cmp
in
push
sarb
popf
pop
and
lds
test
stc
bound
insb
mov
hlt
xchg
add
xlat
lret
in
jo
nop
shll
mov
lret
add
add
fidivrl
push
arpl
xchg
cmpsl
xchg
xchg
xchg
nop
stos
pushl
jg
imul
jae
test
xlat
filds
mov
push
xchg
or
xorl
dec
xchg
sbb
insb
lock
aad
mov
push
rclb
popl
cmp
lahf
adc
dec
mov
adc
js
insl
add
cmc
push
addr16
push
sbb
fldl
adc
xchg
mov
pop
xchg
mov
or
jle
andb
es
cli
push
push
pop
shl
push
or
cmp
inc
inc
inc
test
jb
js
fisubs
and
rorl
sub
adcb
fwait
fwait
lahf
arpl
push
sahf
insb
adc
pop
mov
sti
mov
out
mov
popa
and
ja
jb
data16
dec
jno
and
mov
cltd
push
out
ret
into
inc
das
ja
ds
sar
ss
inc
mov
push
push
std
fcmovu
in
jae
gs
pop
and
scas
jecxz
sub
jmp
mov
je
sahf
lds
jb
shrl
pop
les
sub
mov
xorl
xchg
mov
outsl
xor
pop
bound
das
cltd
sbb
lds
mov
icebp
xor
mov
scas
mov
sub
inc
shlb
je
mov
ret
or
fsubrs
xor
adc
inc
push
sub
es
movsl
jb
cmp
test
mov
and
faddp
subl
mov
cli
iret
lcall
fsub
in
fxch
mov
pop
adc
sbb
xchg
dec
push
or
orl
pop
xchg
dec
xor
xchg
popa
add
rorl
dec
lret
xchg
xchg
fwait
xchg
mov
jmp
jmp
mov
mov
jmp
int3
mov
daa
stos
mov
pop
dec
inc
sbb
stc
sub
andb
adc
not
and
repnz
les
testl
stc
insb
cwtl
add
inc
xor
push
xchg
ret
mov
push
jecxz
pop
push
jns
push
popf
outsl
mov
jne
add
out
mov
and
stos
lods
xor
mov
icebp
je
or
test
push
daa
decb
shll
arpl
xor
adc
mov
xchg
cmc
xchg
lret
js
ja
movsl
adc
mov
out
jmp
mov
andb
fcompl
mov
xchg
lcall
or
aaa
rorl
adc
xchg
sub
jno
iret
push
jp
sbb
push
shrb
test
cld
dec
in
and
jge
xor
sbb
and
test
lods
lret
pop
dec
pusha
repz
leave
dec
jnp
or
xchg
xchg
es
add
adc
pop
sub
cmp
insl
adc
popf
mov
fwait
or
push
xor
ss
xchg
or
push
ss
adc
int
pop
fadd
insb
shlb
cwtl
pop
sub
xchg
fidivs
inc
outsb
testl
xor
mov
sbb
mov
pop
inc
mov
cwtl
xlat
adc
mov
mov
cmp
gs
jno
jecxz
adc
insl
sbb
inc
or
mov
addb
es
mov
fildll
movsl
or
mov
bnd
stc
sub
scas
mov
sti
mov
sahf
in
aaa
inc
icebp
adc
in
ja
js
and
mov
or
inc
sbb
movsb
jecxz
pop
int3
push
sub
xchg
jae
adc
add
jae
lret
pop
imul
jnp
lods
cmp
aaa
mov
or
test
in
mov
int3
cmpsb
daa
mov
int
sub
mov
cld
or
mov
cwtl
pop
xor
pop
cmp
sub
enter
mov
mov
push
push
addr16
jns
mov
pop
push
outsl
popa
mov
aam
jmp
loopne
leave
dec
std
dec
jo
mov
lcall
inc
fstl
clc
int
jge
mov
psubsw
aaa
fistpl
int3
push
mov
mov
pop
mov
mov
xor
les
clc
xchg
push
js
xchg
sub
jns
bound
int
ret
mov
inc
dec
pop
pop
mov
jns
mov
adc
insb
into
test
sub
adc
inc
adc
cmpsb
sub
xor
std
add
fimull
sbb
mov
fwait
push
xchg
cld
and
sbbb
cmp
addl
ret
repnz
rol
xor
int
xor
mov
and
cmp
xchg
jnp
sbb
push
jge
bound
pop
std
push
fnsave
sub
sub
jle
dec
mov
add
cmp
rcrl
sahf
adc
mov
push
loopne
cli
imul
add
pusha
loopne
or
xor
or
pusha
sub
sub
dec
das
stos
inc
testl
mov
sub
push
imul
movsl
dec
push
ds
push
cmp
xchg
mov
and
fs
lock
xchg
repz
xchg
jno
inc
fsubrl
adc
imul
cltd
in
lock
dec
mov
notb
arpl
mov
mov
icebp
xchg
pop
sub
dec
cld
sbb
mov
xor
mov
mov
sbb
sbb
sti
test
in
cmpsb
push
aad
fcomi
mov
cld
push
lea
cmp
push
js
jne
cmc
rorl
and
aas
push
mov
pop
dec
add
add
adc
popa
daa
movsb
adc
lea
fstpl
popa
cld
shr
iret
jmp
inc
add
out
lea
cmp
fs
stos
sbb
dec
scas
lret
shlb
bound
in
mov
sbbl
loop
cmp
in
lods
aaa
call
cmpsb
call
outsl
test
xchg
in
js
jmp
lahf
stos
pushl
lahf
mov
adc
xorb
mov
jb
out
cmp
shrb
cmp
pop
or
repz
in
in
bound
ret
call
jg
ret
scas
outsl
nop
repz
sub
mov
pop
cmp
mov
hlt
lahf
sbb
dec
scas
insl
repnz
mov
in
or
hlt
sub
pop
adc
enter
fs
sub
cmp
cs
adc
mov
mulps
fsubp
xchg
add
dec
inc
pop
ret
jg
in
outsl
mov
dec
jl
xchg
and
arpl
xor
adc
inc
out
sbbl
mov
mov
mul
lods
lds
decl
inc
lods
jmp
xchg
jge
lea
pop
mov
mov
and
adc
ret
shrb
scas
and
xchg
daa
orl
fidivs
mov
addr16
popf
sbb
inc
xchg
xor
add
and
lret
test
mov
pop
insl
push
pop
inc
or
push
scas
cmp
adc
dec
and
push
inc
ds
fidivl
cmpsb
loope
enter
push
mov
sub
movsl
outsl
dec
fisttps
hlt
fsubs
iret
pop
bound
mov
jecxz
sbb
pusha
fwait
xchg
sti
pop
jns
push
inc
jnp
pop
scas
pop
insl
mov
sarb
jae,pn
popf
adc
add
in
inc
mov
sti
lods
push
jnp
lret
shlb
dec
movsb
jge
mov
push
ljmp
mov
push
push
jge
frstor
cmp
cmp
pushf
gs
andb
nop
fistpll
stos
aad
dec
sbb
fs
xchg
rcll
pop
test
faddl
adc
sbbl
mov
ret
mov
shll
jge
push
scas
xor
jnp
and
mov
ficoml
xor
inc
lahf
cmp
cwtl
or
dec
int
xor
loop
mov
ds
sbb
jns
daa
sbb
mov
in
lret
pop
fnstcw
outsb
sarl
jne
inc
stc
sti
mov
sarl
lret
mov
mov
mov
mov
mov
xchg
xchg
cwtl
les
in
jae
and
test
pop
jb
stos
pop
pop
inc
test
icebp
sbb
adc
xorb
movl
bound
push
out
loope,pt
cs
sub
loopne
arpl
push
sbb
add
mov
icebp
lods
cmp
out
orl
scas
cmpsb
lahf
dec
jmp
lods
lret
dec
jns
decb
fmull
das
std
mov
pop
out
sub
scas
fdivrl
sbb
lock
cmp
push
mov
loop
fs
pushf
ss
push
inc
pushf
jnp
and
movsl
ljmp
lds
jbe
sub
cwtl
jmp
lcall
jmp
jb
lock
jbe
mov
adc
or
jmp
push
cmp
out
mov
mov
mov
cmpsb
cwtl
add
push
movsb
into
jno
add
inc
out
and
insl
lock
sub
lcall
cmp
push
sub
pop
add
jecxz
je
sub
sarl
call
fisubrs
filds
inc
test
push
inc
faddl
cwtl
data16
push
jnp
mov
mov
fimull
fsubrl
cmp
clc
push
mov
and
jp
and
mov
cmp
cmp
push
xchg
out
sub
xchg
cmp
or
mov
pop
pop
stos
dec
cwtl
mov
ret
push
les
arpl
and
push
jno
lret
inc
mov
adcb
dec
jl
and
mov
adc
or
push
jp
lcall
jge
daa
insb
sbb
push
sub
lret
mov
jmp
stos
rcr
testl
mov
ret
test
roll
pop
xor
cmc
add
jns
add
adc
mov
xchg
and
sahf
scas
dec
divl
adc
add
add
add
or
mov
stos
cmpsl
stc
mov
inc
xlat
insb
jns
mov
call
int
cltd
mov
pushf
xlat
insb
movsl
mov
push
das
ja
dec
mov
shlb
and
jnp
stos
push
aas
hlt
lock
cmc
out
sub
test
push
or
sbb
stos
test
ds
cld
add
adc
rcll
xchg
pop
enter
mov
pop
jg
roll
dec
mov
aas
popf
mov
fs
sahf
mov
loopne
inc
mov
lods
es
iret
mov
jb
test
cmp
jge
pop
cmp
inc
js
iret
mov
jmp
mov
inc
xor
pop
test
movsw
and
pop
clc
daa
addb
push
adc
push
fnstsw
lret
sub
mov
dec
cmc
push
shlb
xchg
repnz
add
shrl
push
insb
jb
pop
xor
std
jecxz
fildl
loop
mov
addl
push
cmp
push
into
fstpl
je
stos
inc
xor
repnz
xor
inc
scas
inc
sbb
mov
lahf
push
sub
movsl
mov
adc
jno
jne
out
iret
add
xchg
adc
pop
push
out
adc
rcrb
out
adc
in
sub
loope
sbb
scas
xchg
mov
cmp
mov
and
xchg
xchg
in
out
insb
or
jns
sub
sub
and
add
je
filds
aad
inc
inc
inc
push
xchg
leave
inc
lahf
rcll
jmp
out
out
stos
jbe
or
lea
ss
fwait
add
or
inc
movsb
inc
fnsave
fldl
xchg
xchg
cmp
cmc
movq
and
jmp
rorl
mov
push
shlb
hlt
inc
ljmp
inc
stos
cli
or
fdivrs
fxch
push
or
sar
test
cmpb
repnz
and
pop
cld
in
mov
pop
mov
in
pop
push
pop
and
orl
sub
mov
fidivs
popf
daa
add
push
xchg
into
inc
rcrl
sub
in
sbb
inc
adc
stc
sbb
cltd
fisttpl
push
lret
enter
cmp
adc
inc
and
js
into
push
jns
jg
gs
fpatan
repz
aam
stc
pop
pop
aaa
ja
ds
repnz
sbb
adc
mov
jne
cmp
xchg
dec
incb
pop
imul
xchg
dec
nop
stc
das
aad
pop
mov
cmp
xchg
fdivrs
arpl
jecxz
int3
jge
aas
insb
cmp
cmp
popa
int
mov
mov
dec
inc
mov
call
sub
push
leave
or
outsl
dec
add
aam
mov
mov
stc
push
dec
movl
popa
aam
mov
xor
adc
sub
pop
ret
inc
or
aaa
aas
lea
pop
xorb
adc
psrlw
cltd
stos
out
push
fistps
fbld
cmp
in
xchg
push
inc
adc
mov
or
mov
lahf
sarl
mov
arpl
inc
loopne
repz
loopne
sub
mov
out
aaa
movsl
push
ja
imul
xchg
outsb
pop
in
push
dec
adc
mov
aas
int
stc
imul
sbb
aas
test
rorb
out
das
xor
fs
shrl
in
xchg
pusha
cs
out
imul
out
xor
repz
sub
insl
mov
int3
push
xor
mov
aas
enter
repnz
movsl
daa
movsb
mov
adc
xor
xor
add
stos
fwait
outsl
hlt
sub
lret
mov
fcompp
or
push
cmp
stc
push
sbb
adc
mov
ja
jecxz
aas
scas
dec
loope
decl
xor
or
insb
add
jns
mov
arpl
adc
push
test
sbb
andb
mov
out
pop
sub
fwait
adc
cmp
loopne
test
test
push
sbb
lea
pop
push
mov
push
movb
lahf
std
pop
lahf
out
fs
and
aam
pop
loope
xchg
negl
mov
dec
sahf
cmpsb
psubusw
sub
xchg
fbld
fs
outsb
ljmp
mov
jmp
aam
mov
out
sub
push
cmp
rcll
int3
or
je
inc
mov
test
pop
cmpsb
mov
xchg
in
mov
shrl
outsl
pop
and
sbbb
xchg
xchg
fcoms
add
cmp
xchg
push
std
xchg
lcall
mov
stos
loopne
dec
fisubl
and
cld
pop
fistpl
cmc
xchg
inc
jecxz
add
pushf
jae
fs
dec
std
xchg
push
push
subb
sti
xchg
fldcw
out
push
dec
pusha
pop
and
rorl
fs
mov
mov
or
xor
jle
mov
call
xchg
dec
dec
or
adc
xchg
xlat
loope
aam
fs
rcrb
push
into
outsb
cmp
neg
lods
push
mov
ja
cli
sbb
sub
sti
movsb
pop
xor
je
push
cli
xchg
es
sbb
add
cld
xor
ljmp
inc
scas
lret
mov
cmp
or
ret
fisubrl
add
sbb
jmp
test
inc
cmc
cmpsb
push
mov
mov
pop
mov
pop
aad
dec
mov
leave
mul
pop
push
pop
daa
fs
dec
mov
mov
mov
sub
mov
into
enter
iret
xor
loop
adc
pop
clc
xor
hlt
hlt
add
nop
stos
cmp
lcall
scas
xorb
addr16
mov
cmp
andl
cmpsb
mov
jmp
faddp
pop
mov
scas
cli
xor
enter
fs
ret
fmuls
cwtl
ret
push
inc
inc
xchg
push
push
xor
and
xchg
pop
add
cli
mov
or
fmull
and
pop
insl
mov
cmc
xchg
jl
mov
int
cmpsl
jp
in
iret
pusha
mov
inc
jnp
insb
dec
das
ss
xchg
insb
sub
and
mov
icebp
into
mov
mov
clc
stos
xchg
lods
cmpsb
out
dec
testb
test
add
shl
movl
sub
in
inc
dec
and
jecxz
push
push
add
mov
xchg
mov
or
arpl
gs
or
inc
lods
sub
stos
addl
mov
gs
stos
cmp
add
clc
mov
test
shll
push
cmp
jge
insl
mov
push
insl
jmp
xlat
lahf
outsb
int3
jo
imul
inc
pop
imul
dec
xor
adc
roll
in
adc
and
rclb
notb
xor
mov
push
inc
jae
out
loope
push
mov
pop
scas
pushf
mov
mov
mov
ds
adc
xchg
rclb
xchg
daa
mov
aad
pushf
jmp
push
cs
lods
inc
into
add
sbb
push
xchg
imul
in
push
pop
std
cwtl
fdivl
dec
test
mov
xchg
sbb
xchg
out
mov
mov
incl
jle
mov
inc
lret
mov
lods
test
in
jmp
aam
int3
int3
mov
inc
add
insl
aaa
imulb
mov
push
and
push
fs
sub
lret
push
out
stc
push
cmp
testb
push
jecxz
insb
jl
pop
stos
jno
adc
jo
or
mov
mov
mov
jp
xchg
xchg
mov
mov
xchg
int3
cmp
xor
xchg
xchg
inc
hlt
je
ret
lret
or
mov
jno
cmp
push
shlb
xorl
jns
dec
aam
sbb
sbb
popa
pushf
imul
push
int3
sub
neg
cmp
xchg
jne
nop
jne
mov
stos
imul
lahf
push
sbb
ret
call
adc
hlt
mov
pop
test
nop
pop
cmp
test
push
das
sbb
test
repnz
inc
into
repnz
ret
cli
mov
enter
xchg
mov
push
dec
into
popa
and
icebp
inc
add
push
out
dec
lret
getsec
fisttpl
inc
nop
nop
push
testl
lcall
and
sbb
dec
and
add
mov
dec
jo
out
fmul
pop
into
subl
xchg
popf
mov
jno
mov
lret
ljmp
sub
cmpsl
loope
xchg
js
or
mov
ja
in
test
out
inc
std
xchg
add
push
jns
pop
in
arpl
cmp
iret
pop
xor
xor
pusha
and
cmp
and
add
scas
or
jg
dec
call
add
cmp
repz
jg
xor
in
push
add
bound
in
iret
lds
cmp
fisttpl
pop
test
out
scas
cmc
cmp
inc
jo
xor
xor
jb
aas
dec
insl
stos
xchg
jmp
sub
jmp
cmp
dec
loop
rcrl
jmp
cmp
arpl
sar
shr
cld
out
daa
pop
out
aam
sub
adc
sub
in
pop
cmp
lds
push
jmp
sahf
cwtl
mov
in
or
sub
inc
add
mov
pop
mov
aad
sub
adc
push
jae
and
jle
stos
popa
mov
mov
jne
fcmovnbe
adc
dec
adc
repnz
dec
adc
in
pop
fdivrl
imul
mov
adc
push
jae
and
mov
mov
mov
mov
sbbb
jne
nop
addr16
add
and
loop
sets
adc
pop
pop
stc
dec
xchg
push
adc
pop
jle
xor
push
add
adcb
push
push
scas
mov
push
or
pop
imul
and
sbb
push
or
xchg
out
lods
mov
and
jne
mov
out
pop
inc
xor
fcmove
dec
mov
xchg
pop
jne
cmp
pop
xchg
xor
mov
cmp
shrb
push
cmpsl
pop
not
adc
out
enter
movsb
dec
loopne
push
push
mov
mov
fisttpll
cs
orl
test
xlat
xchg
xchg
test
dec
jle
dec
popa
cwtl
divb
insb
daa
movl
mov
cmp
xor
mov
inc
movsl
int
inc
mov
dec
mov
mov
das
pop
jmp
insl
mov
inc
lret
add
das
call
jl
or
mov
rcr
pop
popf
out
inc
pop
loopne
sbb
and
lods
mov
or
mov
add
fst
int3
xchg
mul
or
fwait
cmp
int
int
xchg
dec
sbb
in
jmp
mov
xchg
fistpl
dec
pop
jecxz
cmp
mov
cmp
arpl
mov
iret
cmp
inc
pop
out
mov
loop
mov
sbb
jno
xchg
lret
push
or
adc
sbb
fcomp
or
xor
mov
sub
enter
mov
sbb
flds
adc
adc
mov
jl
fmuls
fisubrl
xchg
jno
jnp
adc
les
mov
fldl
nop
xchg
lods
inc
push
mov
fidivl
movsb
scas
enter
out
shll
aam
std
imul
and
or
add
push
push
and
pop
sbb
mov
jg
pop
dec
call
pop
xchg
sub
cld
inc
sub
fisubl
dec
outsl
out
test
sbb
in
jae
xchg
mov
add
test
clc
cmc
mov
lret
and
xchg
mov
iret
jmp
popf
inc
imul
enter
and
mov
cmc
mov
cmp
popf
and
jo
arpl
mov
aaa
xchg
adc
or
inc
push
xlat
xor
sbb
mov
xchg
pop
pop
jl
inc
mov
sub
insl
mov
cmc
pop
pop
xor
mov
sub
xchg
loope
or
and
insb
push
adc
cmpb
insb
loopne
dec
push
xchg
add
jno
lret
rorb
push
and
mov
xchg
mov
adc
lret
in
mov
adc
test
jno
je
test
sbb
arpl
push
xor
and
and
xor
lcall
and
sbb
fs
pushf
test
sub
cmp
xchg
in
out
outsb
push
lea
pop
sahf
leave
arpl
hlt
add
jne
dec
pop
cmp
or
cmp
notl
jmp
dec
xchg
pop
push
nop
and
mov
jb
icebp
add
repz
xorb
push
sbb
sahf
xor
insb
lahf
mov
jmp
or
ljmp
outsb
push
push
fisubrs
fstp
xor
lcall
mov
mov
push
or
pusha
mov
cmpsl
jmp
fs
xchg
aas
jmp
jg
cltd
popa
in
bound
cmc
xor
mov
sahf
jecxz
xor
or
dec
xchg
movsb
sahf
fucomp
mov
loopne
cmp
jecxz
je
pop
mov
jnp
sti
jb
fldenv
nop
mov
fwait
and
lahf
lods
es
and
fninit
rcrb
adc
jecxz
push
outsb
sbb
dec
scas
jecxz
aaa
mov
xchg
lret
clc
mov
repz
cmpsb
pusha
out
inc
cmp
push
test
int3
dec
or
jle
jne
inc
dec
xchg
adc
sub
test
jns
repnz
mov
push
sahf
sbb
pop
mov
mov
push
cld
fldt
xchg
mov
mov
xchg
mov
sti
rcr
testl
mov
sub
sub
push
std
and
dec
push
xchg
sub
xchg
icebp
mov
dec
jno
pop
jae
cmp
adc
cltd
push
pop
aam
and
xchg
addr16
dec
sbb
cmpsb
ret
add
popa
sub
sahf
arpl
daa
adcb
scas
cltd
lds
mov
add
or
add
leave
cmp
lret
pop
dec
ljmp
lea
lret
sahf
xor
movsb
adc
ljmp
mov
icebp
aaa
xchg
inc
call
call
pop
lds
pop
or
call
push
and
and
sub
xchg
pop
pop
xchg
jb
pop
or
lahf
call
stos
imul
addr16
pop
dec
and
cld
hlt
xchg
inc
mov
adc
fs
inc
data16
jle
add
xchg
xor
sub
jnp
push
cmp
fisttps
std
xchg
std
arpl
iret
mov
xchg
push
stos
pop
xchg
sub
pop
jmp
in
sbb
fcmovnbe
sbb
mov
add
addr16
scas
xchg
pop
jae
mov
fidivl
or
cs
addr16
ljmp
sti
loop
cltd
adc
mov
mov
cmp
xchg
or
jo
mov
jle
ss
int3
test
jnp
dec
fcompl
lock
mov
xchg
cmc
lods
repz
popf
jl
aad
xor
add
and
bound
punpckhbw
ret
jg
or
out
push
cwtl
movsl
clc
sbb
pop
mov
mov
test
cmp
in
outsl
les
or
in
fmull
jecxz
pop
inc
push
adc
xchg
ss
pop
and
mov
mov
data16
and
or
mov
ret
jbe
sbb
fidivl
cmp
mov
mov
stos
jo
sub
add
les
sub
pop
and
and
mov
mov
sbbl
mov
mov
aad
stc
mov
inc
sub
ss
jp
test
adc
pusha
cmp
sub
inc
bound
xchg
lock
std
and
mov
mov
gs
cmp
ja
call
push
int3
sub
dec
and
icebp
andl
push
jno
jb
inc
popf
ja
xchg
pop
fs
popa
mov
mov
jns
jmp
cmp
pop
sahf
cmp
iret
or
jl
mov
mov
or
enter
sbb
pop
and
xor
lcall
mov
std
ffreep
scas
push
loopne
mov
add
int
sub
jno
cmpsl
fisttpll
push
lds
cmp
insl
lock
lcall
daa
xchg
jbe
xor
cld
cmp
adc
mov
mov
data16
dec
push
jecxz
test
cmp
scas
data16
out
movsb
cli
fwait
sub
or
sub
push
shlb
shlb
std
dec
test
mov
lods
bnd
mov
or
inc
roll
scas
out
sahf
xor
or
cmpsl
push
in
mov
xchg
les
dec
js
jp
test
iret
fstpl
lods
cli
or
xchg
and
filds
xchg
adc
les
outsb
in
xor
in
shrl
pop
cli
pop
ss
outsb
adc
lret
sbb
push
insb
jecxz
or
xchg
or
test
sub
movsb
stc
add
aaa
popf
adc
in
clc
push
cltd
cmp
jne
inc
ljmp
push
stos
inc
jl
fadd
jge
sbb
xchg
dec
mov
xchg
jge
dec
fwait
sub
lea
xor
xchg
in
adc
dec
pop
push
int3
imul
test
test
mov
subl
sub
or
push
test
repnz
mov
jl
add
cmp
int3
cmp
or
es
outsl
xchg
cmpl
sbb
push
adc
mov
add
xchg
or
lods
loope
shrb
mov
scas
mov
fs
les
mov
xchg
sbb
fsubrl
daa
lods
or
dec
div
orl
mov
sbb
test
stos
les
mov
mov
sub
inc
sahf
mov
add
mov
pop
push
loop
cmpsb
mov
icebp
cwtl
js
fwait
idiv
mov
push
mov
sahf
les
adc
add
mov
lret
jne
fcoml
jecxz
mov
popa
ret
nop
enter
sahf
test
cltd
test
lods
ja
push
subl
movb
xor
in
iret
pop
cwtl
dec
lods
test
inc
pop
jns
cmp
int3
jmp
lret
mov
adc
dec
mov
mov
sbb
aaa
aas
pop
loope
in
xor
cmpsb
in
scas
dec
push
test
test
imul
pop
dec
les
adc
aas
lods
aad
xchg
pusha
subl
mov
mov
in
neg
cmp
xor
cmp
into
cmc
jmp
push
mov
jbe
ja
outsl
fcomi
loope
arpl
cwtl
xor
shlb
cld
fldcw
frstor
mov
fsubr
leave
jnp
sahf
adc
push
mov
sbb
mov
sahf
sub
cwtl
dec
hlt
loopne
jb
xor
cmp
idivl
mov
inc
arpl
jecxz
xorl
mul
in
iret
xchg
jb
pop
mov
loopne
xlat
rclb
popf
add
jns
inc
inc
les
pop
lods
filds
cli
add
pop
test
push
inc
sub
pop
mov
xchg
jno
xchg
add
mov
jb
jecxz
push
dec
lret
clc
stc
mov
out
insb
imul
lcall
mov
sbb
lods
arpl
stos
repz
add
jp
cmc
cmc
xor
add
mov
cmp
sahf
and
mov
pop
sbb
push
jg
or
int
mov
sub
xor
loop
jp
dec
inc
sbb
iret
sub
sub
mov
add
dec
subb
arpl
cwtl
rcrb
push
pop
or
sbb
mov
lods
cmp
fbld
pop
mov
sbb
nop
and
cld
add
sti
lahf
imul
push
scas
jns
cmp
sbb
fisttps
jns
push
insb
xor
daa
les
dec
cmp
mov
pop
popa
mov
scas
fcomip
int3
mov
popa
pop
or
inc
cmp
inc
adc
movsl
out
repz
push
fistl
xor
dec
dec
add
mov
ret
jbe
cld
xchg
lret
loope
mov
jge
push
in
testb
push
icebp
je
sti
pop
imul
push
data16
adc
sub
ja
shlb
adc
ret
adc
xor
pop
and
pop
mov
sub
push
sub
add
mov
dec
outsl
mov
test
punpckhbw
orb
xchg
add
jge
lea
lock
add
and
xor
sub
xchg
sbb
sub
cmp
repz
push
shrb
jp
cmpsl
mov
push
lret
inc
dec
inc
mov
repz
mov
inc
mov
test
xor
aad
inc
cli
inc
std
xorb
mov
jnp
out
shll
jnp
push
pop
push
inc
xor
fistl
cmpsb
sbb
mov
rol
mov
or
fists
outsl
sbb
mov
inc
fs
sbb
adc
fisttpll
aaa
cli
or
add
mov
dec
int
cmpsl
imul
or
fwait
ds
cmp
fisttpl
push
sbb
testb
jecxz
pop
dec
mov
mov
or
push
cltd
aas
sbb
lock
mov
jl
push
ret
shlb
mov
inc
sub
lret
xorl
lahf
jne
mov
inc
cmp
mov
push
loopne
popa
cld
push
rcrb
pop
fidivrs
xchg
jmp
in
push
jmp
xor
and
xlat
and
jl
iret
add
pop
out
cmp
rorl
adc
ret
test
sti
in
sahf
mov
arpl
iret
xor
pop
stos
ds
sbb
mov
mov
fcmovnb
cmp
and
clc
das
inc
fists
stos
jmp
hlt
mov
js
aaa
ret
repz
stos
mov
mov
cmpsl
add
pop
lea
push
fs
movsb
xchg
lods
test
lea
push
push
jl
out
subl
daa
fwait
ljmp
and
aad
push
clc
shll
inc
jns
add
test
mov
mov
dec
jae
jl
test
imul
lods
pop
cmp
scas
jge
push
xchg
movsl
pop
pusha
fnsave
iret
scas
loopne
sahf
in
insl
push
xchg
shr
aas
repz
in
jge
xchg
add
and
fwait
pop
or
mov
xchg
call
daa
hlt
push
and
lods
push
or
dec
mov
stc
pop
lock
mov
test
lea
std
enter
lret
js
pop
nop
mov
and
sbb
int
mov
stos
pop
mov
push
pop
mov
loope
inc
pop
mov
mov
add
sti
inc
ret
jnp
adc
inc
and
mulb
int3
inc
in
xchg
pusha
jecxz
jg
pop
jmp
mov
das
cs
mov
sub
sti
sti
mov
lcall
xchg
lret
ret
pop
lret
ror
jle
pop
adc
stos
or
ret
in
push
push
xchg
cmpsl
cmp
dec
fidivs
out
inc
outsl
xchg
cmpsl
inc
push
push
inc
and
mov
sbb
xor
xchg
jge
xor
int
dec
add
in
lock
rclb
pop
jnp
ss
or
dec
mov
sbb
mov
jae
xlat
cmp
push
call
stos
ds
notb
mov
mov
lret
push
call
jno
cmp
stc
das
sub
mov
mov
xchg
mov
inc
cmp
pushl
out
std
and
jne
inc
sbb
js
mov
and
pop
data16
fcomps
xor
add
jmp
dec
in
addb
popf
andl
fadds
push
leave
add
fwait
enter
popa
jl,pn
into
in
mov
in
lea
out
mov
ja
fwait
cmpsb
ret
fimull
push
pop
in
mov
add
test
xchg
mov
adcl
mov
arpl
lods
stos
stos
pop
and
jbe
pop
jecxz
xchg
dec
scas
push
rclb
loope
pop
xor
inc
jo
andl
sub
popf
push
movsl
fsubs
stc
pushl
inc
mov
and
adc
cmp
out
pop
cmc
xchg
rclb
in
sbb
dec
or
ret
add
sahf
scas
adc
and
jmp
out
jg
mov
out
xlat
push
adc
fstl
negb
hlt
fwait
call
lods
cmpsb
xor
jle
addb
push
push
fbld
out
shrl
inc
mov
adc
scas
cltd
and
insl
cmp
insl
mov
test
in
jmp
imul
xor
pop
popf
lret
add
push
mov
rolb
jnp
sub
xor
mov
mov
daa
jmp
cmp
leave
and
and
popa
add
fldl
jae
stos
adc
mov
push
int
mov
shll
rcl
std
bound
jno
ret
inc
out
and
jg
test
and
xor
dec
stos
add
add
rcrb
jg
xchg
int
out
test
mov
push
and
add
mov
cmp
lods
mov
ret
pop
sahf
loopne
pop
adc
mov
outsb
push
lods
pusha
es
je
dec
pusha
pop
loopne
xor
sbb
sbb
mov
sub
ja
insl
push
adc
arpl
mov
cmp
rorb
mov
sbbl
ficompl
das
mov
mov
jmp
xor
ret
mov
mov
add
out
pop
jns
and
fldt
or
mov
sbb
orb
fbld
sub
mov
cmpsb
ficoms
and
cs
xor
pop
js
je
pop
mov
rorl
mov
ds
bnd
lcall
jae,pn
cmp
dec
and
mov
sub
and
mov
mov
fwait
subl
pusha
rcll
sti
xlat
sti
xor
jle
loopne
mov
inc
in
lret
stos
push
outsl
std
mov
movsb
mov
mov
ret
ror
sbb
xchg
popf
in
test
inc
out
fistl
xor
aas
fmuls
lods
push
and
in
in
mov
push
mov
mov
call
daa
into
and
lcall
sub
cmp
pop
cmp
mov
ss
push
bsr
lret
popa
sahf
repz
adc
mov
hlt
test
jmp
insl
xlat
inc
push
ror
push
sbb
mov
rorb
xchg
jl
inc
sub
ficoms
adc
xchg
cmp
loop
ss
addl
or
cld
sbb
outsl
fstl
mov
sarb
mov
lea
in
push
fldt
and
movb
adc
mov
sub
cmp
lret
gs
movsl
cmc
and
jne
ficompl
mov
or
dec
sbb
lahf
ret
outsl
imulb
push
sub
fisubs
or
xor
sbb
repz
cltd
xchg
xor
movsb
mov
addr16
mov
dec
mov
idiv
xchg
and
add
push
push
lods
mov
clc
iret
xchg
cmp
inc
push
lret
jo
dec
add
dec
enter
insl
mov
cmp
mov
xor
scas
pusha
mov
cld
loope
and
ret
inc
xchg
pop
add
test
jne
push
pop
outsl
es
sbb
pop
call
dec
add
fwait
sti
pop
mov
jl
or
mov
dec
call
cmp
ss
fadds
xchg
cmp
adc
mov
aam
xchg
ja
cmp
cmp
mov
ret
rorb
push
js
cs
inc
lcall
data16
aas
sub
mov
jl
add
fnstenv
movsb
dec
jle
cmpsl
hlt
pop
addb
sarb
iret
mov
jecxz
jne
push
stos
mov
or
dec
cld
imul
or
clc
adc
testb
sub
sub
add
scas
std
push
pop
in
sbb
mov
in
cmpsb
mov
fistpl
jae
shr
out
faddp
jg
jns
xorl
inc
xchg
scas
jns
pop
inc
push
add
mov
xchg
repnz
je
xchg
les
loop
inc
pop
ror
cmp
jecxz
and
mov
cmp
mov
mov
xorb
daa
lcall
fcoms
shrb
enter
xchg
outsl
sub
inc
xchg
cld
out
mov
sbb
xor
push
js
push
outsb
js
repz
jb
enter
xor
ja
pop
push
idivl
mov
jbe
fwait
add
jae
sbb
lea
push
loopne
fsubs
popa
push
push
incl
ret
in
imul
lods
ficoms
js
test
or
cmp
loope
dec
dec
aad
pop
rcrb
inc
dec
inc
inc
cs
lods
cmp
add
xor
lds
ss
xorl
pop
in
loop,pn
inc
addb
dec
mov
mov
or
push
shll
pop
xchg
into
and
movsl
sbb
movb
jbe
cmc
mov
pop
outsl
loopne
dec
add
movsl
dec
and
fldt
cld
mulb
dec
ja
leave
hlt
push
das
call
cmp
repz
fidivrl
cmp
sub
mov
repz
test
test
dec
pop
mov
aas
push
xor
mov
cli
data16
cmp
cmp
das
test
cmc
mov
cli
jbe
mov
mov
out
pop
je
cmpsl
or
sbb
adc
push
int3
fsts
mov
xor
pop
jb
sbb
decl
das
xchg
inc
add
adc
xor
cmp
fidivrl
test
lock
push
lock
or
es
scas
jp
pusha
iret
cs
cmp
outsl
rolb
or
es
jmp
fxtract
test
popa
add
pop
mov
mov
pop
fcoms
lcall
inc
xor
pop
cltd
into
outsb
pop
subb
adc
aas
js
mov
pop
cld
imul
clc
mov
cwtl
mov
mov
add
mov
imul
rolb
test
scas
aaa
sbb
add
mov
aad
or
push
repz
mov
cltd
jno
mov
cmpsb
stos
xchg
adc
mov
addr16
lea
push
fwait
popa
out
cli
mov
cmpl
cmp
negl
stos
jg
jl
loopne
and
test
mov
add
pop
sbb
fwait
movsb
dec
ds
fs
hlt
adc
pop
ret
pushf
ljmp
insb
jbe
nop
sbb
push
lds
jle
nop
jns
je
xchg
cmp
cmc
cmp
mov
cmp
in
mov
popa
mov
lret
rcrb
inc
cmc
jl
mov
xor
sbb
scas
push
test
std
mov
jle
sub
push
inc
xchg
sub
adc
pop
in
out
jns
outsb
stc
aas
and
fstpt
adc
mov
push
mov
fs
xlat
aaa
xor
bound
out
and
xchg
mov
or
fsubrs
repz
fucomip
push
add
out
fmull
add
lcall
pop
shr
add
negl
xchg
test
mov
jecxz
xor
out
js
or
sbb
loope
jle
jbe
int
or
jg
enter
mov
adc
sti
xchg
mov
or
or
adcb
incb
mov
dec
mov
sub
jbe
cmp
mov
ret
test
mov
push
pop
mov
sbb
cli
lea
lahf
xchg
loopne
cmc
add
xlat
xchg
popa
aas
xchg
stos
inc
lea
dec
mov
lcall
ljmp
mov
mov
lods
mov
test
fsubl
jnp
pop
add
flds
into
and
push
fisttps
repz
and
push
out
sub
and
jnp
repz
and
mov
fisttps
loop
movsb
xchg
xor
xchg
imul
push
lds
sub
and
inc
data16
stos
outsl
jle
inc
repnz
sti
rorb
pop
cmpsl
js
testb
mov
fcmove
pop
test
pop
imul
jno
repz
mulps
dec
and
push
sub
jmp
cmc
outsb
dec
add
adc
adc
cmpl
test
or
jb
jnp
push
and
jns
clc
jb
push
xchg
aad
mov
mov
xor
mov
rorb
inc
inc
addr16
xor
in
xor
es
jle
mov
pop
cmp
das
mov
nop
xchg
rcll
mov
out
add
xchg
adc
adc
lahf
data16
jle
pop
clc
jo
jmp
sub
xor
rorb
test
xchg
jbe
call
out
andb
push
jae
test
dec
push
xor
jl
push
orl
push
mov
in
mov
or
add
pop
iret
mov
xchg
push
dec
pop
xor
sub
jns
in
ret
or
dec
iret
adc
ss
dec
inc
pop
push
push
adc
popa
mov
std
iret
popa
cmpsb
outsb
stos
push
std
push
in
out
cmp
sub
cwtl
sarl
push
pop
push
cmpsl
iret
popf
and
rolb
mov
mov
mov
imul
pop
out
sti
hlt
cmp
test
stos
int
in
popa
cmp
subl
or
dec
leave
dec
mov
lcall
sti
cmpsb
or
lret
bnd
pop
test
movl
cmp
addl
out
pop
adc
jmp
fisttps
mov
sbb
fs
sub
jecxz
mov
lret
cmp
push
inc
bound
sti
jg
cmp
pop
and
scas
sub
fnstcw
or
outsb
mov
cmc
mov
ffreep
or
push
push
sub
xchg
jb
dec
outsl
cli
fsub
pop
into
sbb
imul
cmp
xor
loope
pop
shlb
dec
sub
mov
sub
jp
es
lcall
mul
push
xorl
addr16
inc
pop
xor
clc
xchg
mov
and
jae
dec
sbb
mov
cwtl
jmp
xor
xchg
cmp
fisttpll
xchg
into
or
push
das
add
lock
insb
push
outsb
fisubl
xchg
push
mov
clc
js
pop
int
je
rol
scas
mov
xor
insb
shrb
int
mov
jmp
inc
gs
cwtl
or
fisttps
mov
lcall
ficompl
js
subl
imul
popf
fadds
mov
xchg
xchg
repz
not
cs
and
pushf
test
aam
xchg
or
cs
daa
lcall
push
xchg
shrb
int
push
mov
loop
xor
call
cmp
pushf
pop
mov
xchg
roll
sub
adc
push
mov
xlat
cwtl
rolb
or
push
cmp
outsl
lds
add
test
jo
dec
cmp
sub
hlt
cmc
and
jg
xchg
jno
icebp
push
pop
add
xchg
aad
sub
cmpsl
xor
push
mov
icebp
lcall
shrl
mov
pop
imul
pop
and
mov
pop
fidivrs
inc
call
stc
sub
jae
or
outsl
sarl
dec
lods
adc
lea
mov
add
xchg
fwait
lahf
push
mov
lret
gs
xor
popf
inc
bound
scas
pop
sbb
inc
sti
int
movsl
aaa
daa
lock
cmpb
movsb
jns
mov
inc
jg
fucomi
sbb
push
loop
sbb
jno
int3
push
mov
daa
dec
test
jge
popf
and
ljmp
xor
clc
insl
pushf
xchg
std
mov
aam
stos
popa
mov
jp
inc
xlat
stos
add
pop
stos
xor
lods
addr16
cmp
insl
lods
xchg
fsubs
dec
aas
lods
pop
dec
or
xchg
jge
rorb
movsb
dec
mov
adc
out
mov
movsb
je
ret
gs
std
pop
leave
ret
jg
dec
hlt
aaa
mov
xchg
jecxz
dec
cltd
testb
mov
cltd
xchg
cli
pop
xchg
mov
push
nop
inc
sub
mov
jp
scas
pop
adc
mov
adc
int
dec
push
xlat
sub
js
sbb
inc
sahf
mov
add
cmc
cmpsb
aam
lds
mov
fstl
push
js
out
and
xchg
pop
dec
outsb
push
sbbb
mov
std
jne
push
xchg
test
ljmp
push
xchg
cwtl
inc
adc
mov
push
adc
mov
ds
pop
fwait
int
psrlq
adc
shll
jle
lret
test
and
std
sarl
push
pop
int
add
mov
inc
int
mov
xchg
dec
mov
rcll
inc
sahf
hlt
scas
inc
or
jl
jmp
jp
sbb
sahf
jne
push
mulb
jle
jbe
fsubl
pop
xchg
inc
mov
mov
mov
loopne
das
sub
mov
lods
sbbb
test
out
loopne
mov
shlb
mov
mov
bound
dec
mov
jo
cmp
insb
or
dec
pop
je
jae
fwait
push
mov
pop
ja
xchg
cli
pop
mov
scas
sbb
xchg
inc
lods
dec
mov
xor
movsl
out
daa
cmp
or
pop
mov
push
jl
mov
xchg
hlt
pop
out
mov
pop
mov
xchg
add
jno
inc
jecxz
sarb
jae
add
je
jecxz
pop
mov
int3
adc
push
inc
imul
jl
hlt
stos
inc
jmp
inc
idivl
fiadds
insl
enter
popa
int
pop
cli
fsubr
mov
push
idiv
dec
fwait
test
xor
sbb
scas
js
lods
push
negl
cmp
ds
mov
fbld
lods
pop
sbb
sahf
adc
imul
jmp
mov
xchg
or
call
fiadds
das
rcrb
push
test
cmpsl
ret
xlat
xchg
or
adc
inc
je
xchg
lods
mov
sbb
fwait
loopne
or
aaa
lods
lahf
inc
scas
mov
adc
mov
shr
jle
add
in
ja
adc
and
insl
xor
adc
cmp
imul
push
dec
shl
dec
lods
xchg
outsb
inc
inc
mov
mov
sub
dec
pop
jmp
das
jmp
lcall
sub
xchg
pop
ljmp
dec
xor
dec
pushl
xchg
dec
movsl
shl
push
rcr
dec
mov
sahf
scas
data16
insl
lret
mov
push
jle
ja
pop
test
or
and
enter
adc
push
mov
xor
lret
push
ret
mov
lcall
push
inc
mov
add
aad
fidivrs
std
dec
sub
jmp
sbbb
cmp
popf
inc
cs
sub
ss
and
jle
loopne
std
sbb
rcr
cmp
sbb
aaa
mov
adc
js
movsb
adcb
enter
js
popl
pushf
fcomps
int
jp
mov
jmp
fsub
dec
addr16
sub
pop
shll
ljmp
loop
scas
pop
in
pop
sbb
mov
adc
mov
jnp
rcrl
incl
mov
mov
out
xchg
or
xchg
fsubrl
sub
dec
pop
mov
xchg
jns
add
das
cmc
js
jg
fwait
mov
adc
sahf
iret
out
cmpsl
xor
cltd
xor
xchg
dec
lock
jmp
pop
mov
jns
loop
fdivp
and
push
stos
inc
jae,pn
sub
lods
add
dec
outsb
or
loop
or
dec
adc
lcall
push
jns
repnz
dec
dec
jmp
or
lahf
outsl
cld
push
addr16
outsb
out
into
aam
add
les
lock
imul
outsl
daa
and
outsb
mov
movsb
jno
out
cwtl
addl
cld
addb
in
stos
or
xchg
xor
jne
cld
pop
js
xchg
scas
stos
insb
mov
std
shlb
dec
add
mov
add
and
xchg
shrl
inc
mov
movsb
jp
iret
mov
scas
ljmp
and
jl
push
rcll
fidivrs
fwait
in
cmp
sub
pop
lock
add
sbb
pop
cli
hlt
jo
daa
push
and
add
pop
and
sbb
cwtl
out
jl
in
fnsave
adc
lock
rcll
jo
xchg
stc
push
jo
jge
xlat
outsl
repz
orb
mov
insl
sub
push
arpl
sbb
cs
cmp
push
subl
add
pop
jns
inc
repz
cs
sub
or
pop
nop
cmpsl
xchg
xor
fabs
scas
lds
or
and
mov
mov
push
push
insl
lahf
mov
hlt
xchg
or
jbe
das
lds
das
push
jnp
xor
cmc
or
jbe
sbb
stos
shl
nop
push
mov
jp
enter
fbld
push
lods
jae
and
mov
xor
or
or
ja
leave
stc
pop
popa
sbb
cli
push
push
pop
out
sbb
xchg
sbb
or
inc
outsb
jl
lahf
cmp
adcl
add
shrb
jecxz
adc
das
cmp
dec
cmp
push
ljmp
clc
push
push
sub
mov
xor
xchg
mov
int3
sbb
mov
arpl
outsl
sarl
adc
jne
xchg
or
mov
addl
add
sbb
imul
sub
repz
jb
stc
inc
push
inc
insb
cmp
daa
xlat
dec
test
fisubrl
and
insb
jae
jo
push
ds
jl
movsl
pop
gs
inc
pop
stc
fisubrl
or
arpl
shrl
adc
mov
int3
sbb
call
push
inc
xor
adc
mov
rorl
cmp
jne
repnz
into
jbe
imul
xor
sbb
dec
jns
std
scas
jg
in
adc
xchg
xchg
inc
jo
pop
adc
faddl
xor
jnp
jg
adc
lcall
lock
int
and
mul
xor
jp
xchg
push
xchg
das
repz
test
loopne
add
pop
leave
sti
mov
testl
adc
rorl
push
push
roll
mov
inc
int
clc
cli
push
in
rcrb
xor
or
repz
xor
cmp
movsl
jg
int
and
enter
or
or
or
mov
sub
je
stos
leave
lret
sub
add
dec
pop
or
add
in
cmp
mov
test
sub
add
repnz
aad
push
icebp
jmp
movsb
inc
fwait
adc
jle
mov
leave
imul
add
jg
or
leave
pop
insb
jno
sub
outsl
shl
mov
jge
mov
cmp
sub
imul
mov
jl
xchg
pop
into
jmp
sar
xor
push
stc
aad
movsb
mov
shlb
ds
cs
cmp
mov
push
inc
lret
mov
imul
mov
andl
or
xor
pop
jns
and
inc
push
pushf
stos
jle
or
pop
stc
fcomps
scas
into
jbe
stc
or
std
add
nop
in
ret
imul
sub
jp
or
sub
ljmp
or
mov
pop
hlt
scas
adc
ret
jne
fstp
inc
push
xor
xor
or
sub
dec
sub
push
test
sti
push
cmpsb
xor
mov
xchg
aaa
in
adc
push
jl
scas
dec
sub
popa
pop
loope
jbe
rcll
xor
fstl
pop
test
test
pushf
lret
fstl
lahf
sub
push
loopne
pusha
jmp
xor
aaa
sub
stc
mov
int
scas
cmp
mov
push
mov
cmp
aam
xchg
pop
das
pop
or
add
roll
popa
jae
add
push
push
hlt
cmpsb
in
add
data16
dec
xchg
cmc
xchg
ror
mov
scas
stos
add
std
jbe
push
cmc
or
js
clc
in
fcoms
mov
cmc
stos
int3
mov
popf
adc
pop
sbb
dec
push
lods
adc
cmpb
shl
or
in
jg
add
cwtl
cmp
nop
outsl
aas
daa
push
test
lds
dec
jecxz
xchg
or
mov
pop
mov
in
mov
insl
fs
pop
sbb
inc
sub
push
insl
outsb
push
imulb
fdivs
cmpl
mov
or
mov
cmp
imul
adc
mov
stos
mov
in
lea
lret
sbb
cli
xchg
fsubs
mov
push
adc
sbb
add
jb
ja
jo
rcl
cmp
push
enter
mov
adc
adc
movsl
or
imul
jne
arpl
iret
ret
stc
add
inc
loope
repz
jle
mov
xchg
repnz
call
mov
sbb
and
pop
lret
xchg
outsb
ret
push
enter
lods
inc
pop
xchg
addr16
cwtl
mov
and
mov
cmp
sti
imul
add
mov
jg
adc
int
jle
push
and
adc
xor
or
add
stc
rcrb
stc
pop
jbe
clc
roll
in
mov
sarb
pop
pop
pusha
hlt
sub
dec
in
cli
out
xor
add
pushf
es
cmp
lods
push
mov
xchg
dec
pushf
mov
popf
push
mov
hlt
push
inc
push
fs
lods
jg
xor
in
xchg
push
shll
dec
inc
into
imull
xor
imul
fisubrl
cmp
mov
hlt
push
xor
sbb
daa
loop
inc
pop
mov
bound
sub
repz
rol
and
jnp
test
push
sbb
dec
cmovbe
and
shr
cmp
test
repnz
lret
xchg
fs
roll
jle
enter
and
sbb
decb
test
pop
pushf
int3
loope
aaa
test
es
sub
ja
pop
jl
inc
xor
cmp
or
int
jge
or
jns
sti
and
xor
cmp
lods
out
xor
imul
mov
out
cmc
pop
iret
xchg
xor
xchg
dec
das
xchg
cmpsb
cmp
aam
inc
add
in
jnp
adc
iret
and
js
xchg
push
xchg
dec
fwait
mov
je
sbb
lods
shll
daa
shrl
xchg
xchg
jp
ss
aam
add
xchg
shrb
xchg
mov
xchg
sub
add
jmp
cmpsb
mov
in
out
arpl
pop
pop
das
test
xor
xchg
xchg
clc
xor
scas
out
mov
add
ss
or
mov
int
fbld
cmp
xchg
push
decl
mov
sti
ret
cli
xchg
lods
jecxz
stos
lcall
cmp
push
iret
dec
fadd
out
jns
test
mov
mov
js
shl
push
and
ret
in
or
adc
popf
pop
cmp
push
in
adc
sbb
mov
or
xchg
cwtl
mov
testb
xchg
mov
fsubrl
add
pop
je
xchg
pmulhw
pop
sbb
and
adc
cmp
inc
add
xor
xchg
scas
and
adc
mov
iret
out
mov
popa
ffreep
fs
int
jo
sub
push
pop
lret
subb
nop
stos
inc
int
pop
jnp
icebp
push
loop
cld
xchg
cmpb
iret
mov
sti
mov
movsb
jo
xchg
lea
addb
jle
cs
xchg
inc
popf
test
into
lods
insb
outsb
inc
and
inc
das
test
gs
and
and
shlb
scas
gs
bound
aad
dec
aad
jae
scas
repnz
iret
pop
mov
xor
xor
insl
pop
mov
sub
das
cmp
cmp
scas
rclb
mov
pop
out
lcall
push
je
jbe
insb
pop
or
dec
cmp
mov
cli
hlt
fbstp
sbb
daa
push
in
mov
lea
test
js
xor
xchg
adc
shlb
decb
ficoms
daa
popa
cmp
dec
cltd
push
cmc
sbb
jno
cmp
mov
sbb
xchg
xor
stos
or
gs
sub
fucomip
cmp
sbb
lea
dec
mov
lret
pop
dec
test
pushf
sbb
inc
pusha
add
mov
push
cmpsl
aad
cld
sub
cmpsb
pop
sti
jge
jno
or
mov
xchg
int
into
stc
lds
adc
lahf
icebp
cmp
xchg
sub
mov
cmp
cmp
or
inc
sbb
icebp
cmp
push
or
mov
and
cli
outsb
int
add
pop
pop
sub
outsl
pushf
xchg
push
cmc
insb
outsl
lea
mov
push
out
inc
adc
mov
dec
test
es
xor
xchg
into
add
stos
loop
dec
cwtl
xor
adc
adc
mov
std
orb
push
ja
and
cmc
mov
loope
xlat
jecxz
jecxz
das
xchg
jp
iret
repz
jns
jmp
ja
pop
jb
jae
lods
imul
cmpsl
cmpb
inc
neg
push
add
test
icebp
jp
clc
xchg
pop
dec
cmp
stos
adc
cmp
dec
pop
cltd
lahf
adc
addr16
lock
in
iret
in
add
out
push
fs
push
cs
push
hlt
fldl
push
jnp
rcll
enter
inc
sahf
sbb
add
data16
mov
mov
xor
ficoml
hlt
aam
mov
fstps
xchg
aas
or
in
pusha
jno
or
ljmp
cli
jg
es
mov
lea
adc
mulb
mov
add
mov
arpl
gs
stos
jge
and
rcl
cmp
pop
mov
or
mov
pop
iret
stc
xchg
jmp
lock
ret
cmpsl
pop
push
icebp
inc
xlat
push
push
sbbl
shrb
pop
pop
dec
xlat
push
lret
add
xor
mov
call
lea
inc
add
sbb
pusha
bnd
mov
inc
or
sub
cli
pop
test
out
jnp
push
ret
cwtl
test
aas
les
xorl
or
dec
imul
testb
sti
xlat
aaa
mov
pushf
scas
jecxz
pop
or
loope
stc
cmpb
aad
xchg
rol
sbb
rorb
outsb
movsl
add
dec
add
loope
jno
leave
mov
cmovbe
jmp
mov
push
mov
sbb
lea
in
hlt
inc
push
mov
dec
insl
fldl
jl
add
fsubrl
dec
jg
lahf
adc
lret
jno
pop
jne
push
shr
cs
and
lods
popf
or
adc
xor
xlat
push
jge
mov
mov
or
repnz
adc
inc
mov
in
in
or
in
mov
adc
fld
xchg
lcall
popf
cmpsb
jg
idivl
mov
iret
or
cmp
lcall
outsb
scas
push
sub
addl
xor
lods
ljmp
sbb
cmpsb
pop
push
test
xchg
inc
add
mov
repz
jge
cmpsl
and
jns
popa
fisttps
pop
mov
dec
call
clc
out
clc
scas
mov
mov
cmpsl
push
jecxz
inc
jne
dec
mov
data16
pop
push
xor
in
xchg
jp
rcrl
sbb
jg
mov
mov
lret
mov
mov
cmp
adc
stos
jnp
out
cmpsl
pop
adc
in
movsl
xchg
or
jle
mov
pop
sahf
sub
adc
or
out
pushf
mov
aam
push
cmc
pop
leave
inc
test
mov
fnstcw
test
mov
and
cmpsb
xlat
xor
inc
ret
adc
mov
jno
clc
push
cs
dec
mov
mov
daa
dec
push
int3
and
jmp
cmp
nop
add
roll
push
add
daa
or
js
enter
add
cmp
sub
loop
mov
xchg
adc
outsl
sbb
jnp
mov
inc
sbb
sbb
cmc
dec
loop
pop
cmp
push
icebp
fmull
inc
insl
test
ret
adc
cwtl
popa
mulb
xchg
and
cwtl
call
sbb
lock
pushf
lock
cld
mov
je
cld
icebp
xor
mov
xchg
hlt
dec
and
mov
sahf
mov
stos
and
mov
shl
int
int3
cmp
xchg
pop
lods
inc
mov
hlt
mov
mov
xor
js
xchg
movsb
add
js
cmpsb
inc
or
ljmp
rcll
hlt
inc
mov
xor
in
ret
popf
hlt
or
pop
mov
xchg
into
lret
pop
and
cmpsb
dec
dec
mov
jno
sub
enter
adc
test
ret
in
add
jnp
adc
pop
aad
sub
jno
cmp
jg
cwtl
sub
or
fsubrs
cmp
push
pop
sub
idivb
stos
inc
stos
hlt
adc
xchg
icebp
aas
jbe
lcall
push
inc
push
outsb
stos
clc
sti
xor
xor
jb
call
sub
pop
loopne
add
lcall
push
cmp
or
mov
mov
roll
mov
xor
ds
ja
hlt
xor
pusha
popa
sub
cli
add
adc
push
mov
sub
mov
cmp
push
std
std
mov
jbe
call
aam
jmp
mov
push
insb
dec
dec
aad
cmp
add
lds
stos
jle
sub
test
dec
push
add
cli
pop
scas
add
pop
stos
adc
xor
bound
lahf
and
icebp
call
inc
loop
scas
jle
sub
mov
xchg
loopne
jae
cmp
mov
subb
loop
pushf
and
push
or
mov
inc
insb
mov
test
outsl
cmc
stos
cmpsb
sarl
and
idivl
cmp
loope
cmpsl
std
div
and
jns
dec
jle
inc
xchg
cwtl
mov
xor
ds
sub
adc
xchg
fcmovbe
push
jo
sub
jle
xor
fsubs
stc
out
jns
filds
loop
cwtl
lock
cmp
jbe
cmp
xchg
push
notl
gs
sti
out
pop
movsb
inc
pop
cli
push
cli
cli
cs
je
cmpsb
popa
je
cmp
xorb
jns
lahf
cli
shll
fiaddl
fldl
mov
test
mov
sbb
aam
push
enter
sbb
cmp
ljmp
fs
dec
out
test
incl
cld
pop
arpl
push
aaa
and
repz
cmp
test
ljmp
inc
mov
ret
xchg
outsb
roll
lock
push
inc
jp
popf
or
mov
cld
nop
test
jno
rcl
pop
fcmovnb
addr16
jo
pop
add
scas
flds
stos
int
cltd
sub
js
xchg
add
sub
pushf
out
push
gs
into
xchg
lods
sarl
dec
inc
jb
in
xlat
popf
stos
cwtl
int
lahf
xchg
or
inc
out
pop
lods
adcl
decb
cmp
mov
aaa
jg
call
lea
push
pop
cli
jmp
sbb
data16
pushf
xchg
xlat
ret
pop
aad
fcomip
xchg
dec
cwtl
scas
sub
pusha
mov
jo
fcmove
pushf
xor
dec
pushf
stos
sub
aad
loop
into
lret
nop
pop
cs
lea
xor
stc
xor
out
fldln2
mov
and
gs
cltd
jo
xor
dec
fs
std
mov
shlb
xchg
cmp
iret
jl
in
lods
sbb
in
loope
xchg
loopne
into
ss
jmp
js
cltd
iret
sub
cmp
imul
pop
push
sbb
ja
mov
and
or
cwtl
pop
sbb
and
jg
push
leave
fdivs
jp
push
imul
pop
mov
test
adc
dec
push
jns
mov
int3
sub
push
push
push
lds
ret
push
fstl
sub
xchg
js
leave
jge
hlt
in
xadd
test
adc
cs
cs
adc
jp
loop
mov
push
rolb
dec
xchg
ljmp
cmc
jge
inc
inc
adc
test
out
xchg
or
lcall
mov
mul
loop
shlb
lds
mov
mov
mov
movsl
stc
addb
cmpb
push
movsb
adc
mov
scas
scas
dec
xor
sahf
xchg
lret
inc
and
sub
aas
jne
insb
xor
fucomp
xorl
fwait
mov
jb
mov
dec
push
test
mov
dec
fsubr
mov
inc
addr16
aas
leave
xchg
addr16
mov
jne
imul
add
adc
adc
sti
outsl
bound
lret
out
push
test
je
xor
mov
aaa
ja
add
sub
es
push
dec
inc
addr16
cmp
aas
ja
lock
lock
mov
dec
push
inc
divl
mov
xchg
or
out
xchg
mov
imul
jle
in
movsb
mov
xor
addr16
leave
dec
mov
sarl
in
jae
push
inc
int3
adc
inc
pop
imul
jp
out
sub
sub
mov
mov
and
or
fbld
mov
add
xchg
idiv
dec
into
outsb
adc
pop
insb
cmc
ds
bound
out
fmuls
xchg
mov
fwait
in
scas
fsubs
lahf
cltd
gs
mov
out
xor
sub
pop
push
jmp
xchg
sbb
scas
mov
outsl
popa
out
out
cmp
mov
push
push
push
push
fdivrp
sub
adc
add
jle
mov
pop
sbb
adc
shll
and
xorb
rcrl
cmp
andb
xchg
adc
sub
andb
incl
out
out
xor
ds
outsl
add
push
xor
dec
daa
sub
int3
and
div
jbe
xchg
sbb
movsl
and
mov
inc
jns
add
popf
movsb
jmp
jns
repz
ljmp
jnp
pop
dec
inc
ljmp
xlat
roll
pusha
sbb
push
rolb
nop
sub
imul
mov
arpl
cmpsl
cmp
ret
cmpb
mov
jbe
xorb
pop
push
jbe
sub
lret
and
pop
subl
repnz
cmc
sub
clc
jge
fiadds
nop
jne
mov
aaa
incb
addr16
subl
adc
fcoml
icebp
out
les
dec
xchg
mov
or
or
bsf
in
pop
std
sbbb
inc
ret
into
insb
loopne
loopne
stos
aas
mov
xchg
imulb
mov
loopne
push
sarl
pop
cmp
mov
mov
in
and
mov
xor
push
dec
ds
or
aas
sbb
mov
or
xorl
daa
jle
stos
push
ds
arpl
xchg
jp
pushl
mov
fdivrs
arpl
push
mulb
cmp
repz
mov
pop
aad
aaa
cmpsb
fcomps
hlt
outsl
jb
and
into
daa
jl
clc
mov
xabort
in
je
mov
ss
adc
mov
jno
add
sub
push
and
pop
xor
jae
ss
into
jp
daa
xlat
jmp
sbb
push
sub
es
or
push
adc
sbb
sbb
inc
xor
sub
lea
addr16
mov
aaa
cld
inc
sbb
subb
jbe
pop
inc
in
add
inc
stos
pop
dec
fidivl
cld
mov
insl
xchg
shl
mov
add
sub
js
pop
and
int3
pop
jbe
mov
aad
stos
or
aad
xchg
out
outsl
div
and
enter
push
dec
lahf
int3
mov
cmp
push
arpl
pop
xchg
xorb
lret
add
int
jmp
xchg
arpl
lea
popf
xlat
pop
dec
lret
lcall
xchg
cs
dec
or
fdivs
out
inc
mov
dec
mov
mov
psubb
push
dec
xor
jns
out
mov
push
dec
scas
sbb
add
add
xlat
enter
add
aas
addr16
xor
push
int3
fs
push
mov
loop
fmuls
cmpl
mov
pop
pushf
mov
xor
fimuls
loopne
push
pop
jnp
xchg
or
mov
sbb
mov
loope
movsb
loop
stos
pop
cs
cld
popa
and
test
sbb
es
es
and
insl
add
cli
push
jnp
push
sbb
daa
fadds
or
popf
je
mov
push
push
negb
movsb
or
lahf
sub
ret
sbb
clc
shlb
jns
es
dec
mov
jmp
insb
imul
leave
out
cmpsb
ss
and
fstpt
shrb
test
cwtl
into
hlt
sti
adc
xor
pop
xchg
xchg
lret
push
lcall
dec
mov
jecxz
mov
inc
and
add
imul
mov
loop
lahf
mov
dec
lcall
dec
and
lahf
lock
ret
dec
jbe
sarb
dec
adc
lods
xor
mov
fmull
xchg
xor
imul
fisubrl
iret
xchg
inc
stos
hlt
adc
jle
cmp
mov
stos
fwait
test
aam
lcall
inc
mov
icebp
mov
cmp
sub
jne
nop
loop
stos
cmp
dec
push
lock
inc
fadds
insl
inc
mov
or
addr16
or
pop
mov
adc
jmp
push
mov
cltd
aas
push
popf
ss
mov
xchg
pop
mov
dec
fwait
dec
push
icebp
sbb
push
push
pop
test
mov
leave
sahf
push
leave
adc
xchg
sbb
mov
mov
cmpsl
mov
mov
jge
cld
test
pop
push
mov
adc
mov
cs
dec
imul
adc
push
jne
mov
adcl
out
sbb
mov
xchg
cmpsb
inc
cmpsb
rcrl
mov
adc
mov
nop
mov
and
cmp
jg
push
test
mov
mov
add
xor
dec
sbb
cmp
cmp
lret
inc
push
hlt
add
popf
add
aas
mov
pusha
adc
adc
arpl
sarl
xchg
inc
mov
dec
dec
pop
sahf
xor
and
aam
mov
ret
adc
stos
pop
in
fdivl
xor
sub
fistpl
pop
pop
jp
push
loop
pusha
ficoms
xchg
xchg
cmp
repz
sbb
push
cmp
and
jecxz
and
clc
stc
in
dec
cmp
and
std
std
idivb
sbb
into
pop
arpl
call
mov
ss
sahf
push
jle
inc
sub
cmpsl
lods
pop
pop
mov
sbb
hlt
jle
add
pop
jae
cli
xor
es
ljmp
mov
pop
es
aaa
imull
pop
xor
popa
call
xor
arpl
lds
rorb
xorb
mov
mov
popf
mov
inc
imul
mov
into
dec
fucomp
xor
lret
mov
xchg
popa
adc
pop
sub
cli
sahf
jl
outsl
clc
sbb
xor
and
rorl
cmpsb
test
out
jmp
and
imul
jecxz
lret
jmp
lods
mov
sub
add
jl
adc
imul
mov
jp
shll
aaa
dec
cltd
add
sbb
fwait
mov
cmp
nop
xor
sub
bound
xor
adc
jno
in
sbb
add
dec
in
bound
mov
cmp
inc
hlt
or
pushf
inc
int3
jle
cmp
xchg
mov
mov
int
gs
test
sbb
cld
add
std
add
mov
cmp
inc
sbb
sbb
adc
xchg
push
cmp
push
andb
aam
pop
pop
fisubl
adc
inc
mov
mov
jle
rcrb
push
mov
add
sub
inc
fwait
lea
pop
mov
push
out
mov
gs
std
dec
dec
mov
inc
int
rcl
int3
iret
inc
mov
push
adc
mov
in
popa
inc
std
flds
test
movsl
leave
repz
fdivl
std
test
iret
dec
imul
loop
cmp
push
mov
dec
mov
or
adc
cs
push
leave
and
jne
or
adc
adc
dec
dec
inc
les
mov
movsl
cmp
sahf
pop
add
mov
std
adc
fwait
adc
mov
rcll
shr
test
fcmovne
ret
clc
add
pop
scas
cltd
sahf
insl
cmpsl
dec
ret
add
push
in
aad
adc
jmp
stc
iret
cmp
mov
push
xor
and
pusha
gs
mov
bound
pop
jmp
xlat
sub
xor
cmp
dec
repnz
mov
repz
std
outsb
dec
xchg
cmp
test
sbbl
daa
xorb
cld
mov
mov
pop
fidivl
lock
cmp
pop
xor
aam
pop
stos
add
std
mov
flds
shl
pop
push
lock
or
test
mov
xor
movl
mov
adc
adc
lret
and
pushf
addr16
jle
inc
sti
jmp
xor
xor
jno
insb
leave
pop
cs
test
std
mov
sbb
jmp
push
jno
pusha
lret
leave
adc
and
sbb
mov
or
inc
cmp
clc
pop
adc
call
cmp
xchg
outsb
les
aam
bound
sub
idivb
push
clc
xor
bnd
decb
scas
lret
fs
add
xor
pop
or
int
repnz
or
out
ficomps
popf
and
xchg
adcl
cmp
inc
test
scas
inc
cld
lea
sbb
push
ret
push
push
push
ss
push
hlt
out
and
sub
das
pop
repnz
dec
inc
notb
push
hlt
shll
dec
cmpsl
cmova
mov
jne
scas
sbb
jmp
mov
xchg
mov
jo
mov
xchg
loop
mov
inc
popa
insl
dec
scas
sbb
stos
sti
out
xchg
jl
jl
popa
push
mov
in
xchg
sub
arpl
mov
es
mov
inc
adc
mov
loop
push
int
xchg
fisubrs
jle
push
pop
in
icebp
lods
sahf
loop
mov
pop
jp
add
sbb
sbb
je
push
into
add
lods
cmp
mov
mov
adc
add
rcl
hlt
push
pop
cmp
dec
jo
test
mov
dec
sarl
out
pop
rcrb
dec
icebp
stc
mov
add
jp
repz
and
popf
outsb
xor
xor
mov
dec
pop
push
mov
clc
mov
jecxz
push
mov
pop
pop
mov
pop
into
push
sbb
inc
mov
jp
adc
int3
mov
add
lcall
mov
aam
jl
scas
mov
mov
sbb
mov
in
jno
sarl
mov
mov
push
xor
aas
cs
and
xor
jmp
or
sti
xor
pop
pop
and
pop
sub
mov
lock
in
and
cmp
xor
xor
nop
insl
rclb
and
mov
cld
xor
pop
and
inc
xor
jp
push
leave
and
dec
out
sub
stos
mov
mov
movsl
mov
and
sub
xchg
push
hlt
push
mov
mov
popf
je
push
and
shl
inc
and
popa
add
mov
imul
in
fidivs
sbb
mov
push
mov
lods
inc
test
adc
and
adc
test
cld
cmp
mov
mov
out
xchg
movsl
loope
popa
inc
sub
sub
push
popa
fidivrs
andb
fsts
ror
loopne
test
push
hlt
and
ljmp
push
push
icebp
xor
popa
add
loope
cli
in
movb
cmp
or
add
test
dec
sbb
popf
fndisi(8087
dec
pop
cld
loop
jnp
cltd
fistps
testl
ficompl
fnstcw
xchg
jecxz
out
scas
jae
mov
pop
pop
and
push
test
jbe
and
inc
adc
scas
cmp
xchg
fsubrl
ficompl
fistpll
inc
int
in
push
mov
movsb
call
jne
pop
insl
jns
addl
out
dec
mov
outsl
pop
mov
dec
and
sbb
lahf
mov
jmp
test
fldt
popf
mov
jecxz
loop
mov
movsl
movsb
jmp
jp
pop
xchg
push
shll
push
fimull
adcl
lock
add
cmp
or
push
xchg
outsb
adc
xchg
xchg
or
sub
aas
fnstsw
hlt
movsb
mov
daa
jns
into
das
cld
movsl
fmull
sahf
repz
sbb
scas
fildll
les
in
adc
outsl
sub
lock
mov
mov
enter
push
mov
inc
xchg
mov
inc
jb
shll
or
cmpsb
inc
sbbl
xchg
cmp
add
ret
mov
in
test
mov
movb
rcrb
mov
xchg
xchg
jp
push
sbb
mov
pop
daa
out
push
xchg
mov
sbb
inc
mov
pop
rclb
hlt
xor
insl
mov
cmp
or
in
mov
out
aaa
adc
sahf
outsb
data16
shrb
mov
inc
push
cmp
dec
jecxz
ja
push
insb
int
cmp
push
or
imulb
ja
add
je
push
jae
repz
add
movsb
mov
inc
movsb
push
and
and
das
lcall
js
into
mov
push
mov
add
and
cmpsl
out
in
call
mov
dec
sub
inc
adc
and
or
and
in
arpl
pop
filds
shll
jmp
inc
pop
fidivl
test
out
outsb
rol
sahf
mov
push
mov
inc
push
adc
in
popf
xchg
dec
jmp
jmp
xor
pop
mov
cmpsl
xchg
int
jle
cs
push
xchg
xchg
push
ljmpw
cmp
aaa
and
jecxz
sbb
cli
cmp
dec
sub
rcll
icebp
repnz
cmp
inc
push
and
into
popa
mov
aad
pop
xor
cmp
or
cmpsl
xchg
jmp
pop
push
xor
mov
sub
or
jo
adcb
out
stos
xor
ret
popf
in
les
dec
dec
xchg
xor
insl
popf
push
add
add
mov
mov
add
imul
jle
sub
mov
leave
push
cltd
sub
and
popa
pop
jno
jno
sbb
pop
dec
test
adc
insb
push
xor
pop
jb
jae
or
out
push
or
outsb
outsb
push
jo
or
das
or
test
les
xchg
testl
shlb
add
mov
push
mov
clc
xor
popa
aad
inc
fwait
lds
or
or
lock
repz
push
mov
cmp
add
pop
mov
ret
out
mov
sbb
push
icebp
loop
ja
fs
les
or
pop
lret
out
or
pop
cmp
outsb
inc
sar
or
stos
xor
rcll
insl
jno
xor
dec
sbb
adcl
cmp
and
jb
adc
pop
test
into
pop
jle
xchg
mov
mov
dec
call
cmp
imul
cmp
aas
fistpl
inc
push
push
cmp
xor
push
cmp
stos
rcrb
mov
push
stos
cmp
daa
jp
in
lods
jg
mov
and
or
iret
or
je
dec
cli
jb
inc
hlt
mov
dec
push
in
lret
lods
fnstcw
mov
mov
scas
mov
mov
ds
test
mov
mov
mov
add
in
xor
hlt
in
pop
or
int
imull
int3
lahf
mov
xor
cmp
add
mov
jb
divb
push
scas
cmp
push
mov
add
fs
sbb
outsl
mov
xlat
nop
outsb
ret
adc
push
pop
xor
jb
push
scas
jl
pop
or
mov
pop
pop
cmpl
mov
lds
pop
fcomps
push
add
cmp
je
dec
and
dec
mov
pusha
push
push
lock
pop
xor
sbb
add
mov
rcr
jle
aas
fcompl
std
cmp
repnz
jg
dec
sbb
mov
loope
test
and
mov
push
imul
mov
imul
mov
push
pop
ljmp
out
insl
push
push
push
cmc
test
icebp
test
aad
jp
inc
jge
jge
push
lds
lret
cmp
lahf
lea
in
out
sub
push
fadds
cwtl
icebp
sub
and
inc
scas
je
stc
push
and
xor
pop
scas
and
inc
imul
js
pusha
gs
addr16
das
adc
cmp
or
cmpsb
or
and
sub
enter
shr
loope
loop
js
pop
imul
push
pushf
idivb
mov
jp
test
mov
outsl
pop
pop
mov
mov
sub
inc
push
lods
mov
stos
adc
xchg
cli
inc
fsubrl
or
pmulhw
xchg
imul
push
xor
push
cmpsl
dec
add
and
dec
pop
xchg
jb
push
mov
mov
jb
or
sbb
inc
xchg
cwtl
lods
push
fs
gs
lret
xchg
xchg
flds
icebp
dec
pop
inc
mov
xor
sbb
cmp
imul
shrb
pop
pop
and
dec
jecxz
aam
aad
out
imul
pop
sub
fsubs
insl
out
jno
lods
dec
jb
mov
or
decl
jmp
test
pop
xor
sar
sarl
jl
sbb
adc
and
add
repnz
jecxz
or
sarl
fists
pushf
mov
es
pop
flds
inc
xor
mov
inc
add
sbb
lcall
rcrb
add
cmp
mov
sahf
mov
insl
cmp
pop
imul
mov
sbb
xchg
and
sbb
shr
les
pop
dec
and
and
pop
ljmp
jb
or
mov
mov
jmp
in
aas
xchg
push
stos
mov
cmp
pusha
ljmp
mov
insl
mov
push
mov
mov
sub
js
and
cmc
mov
loope
leave
and
add
movsl
cmpsl
jo
out
sbb
shrb
jns
sub
inc
sbb
sub
pop
cmp
sub
lock
xchg
icebp
jmp
ljmp
and
out
inc
sub
jl
loope
or
push
mov
packsswb
pop
push
fdivrs
stos
pushf
dec
lea
insl
mov
dec
das
aad
and
xchg
push
mov
gs
and
xchg
xchg
test
or
mov
pop
pop
sahf
add
sbb
fists
cmpsb
dec
in
dec
push
push
pop
and
imulb
mov
pop
mov
mov
sub
sbbb
pushf
stos
cmp
push
call
stc
pop
cmp
into
adc
cmpsl
inc
and
es
adc
scas
in
jns
dec
out
adcb
fdiv
dec
inc
pop
cmp
je
int3
movsl
loopne
jg
inc
addb
mov
xor
js
sub
mov
push
cmpsb
ds
hlt
mov
push
mov
sub
data16
rcrb
xchg
sbb
loop
xlat
sub
mov
jmp
xor
sbb
xchg
mov
mov
ja
adc
sub
cli
stc
test
stos
outsb
mov
sub
cld
js
or
jnp
add
jge
es
cli
das
dec
or
pop
fstpt
int
imul
dec
mov
push
add
cmpsl
mov
mov
repz
pop
test
mull
repz
loopne
xchg
push
pop
fisttpll
push
mov
movsl
mov
faddl
lds
cmpsb
stc
sar
insb
inc
nop
lcall
mov
xor
shr
and
push
sbb
popa
sbb
pop
int
rcrl
cmp
mov
pop
jns
sub
xchg
pop
ds
fdivrs
mov
pinsrw
sbb
clc
popa
pop
sub
lock
jecxz
shrl
sbb
pop
mov
rolb
sub
in
in
mov
xchg
loop
add
mov
call
xchg
aas
hlt
cs
loopne
pop
clc
out
cmp
mov
mov
sahf
mov
inc
les
mov
jne
outsl
dec
pop
gs
mov
fwait
jb
sbb
adc
mov
push
xchg
popf
mov
pop
lock
rorb
mov
mov
loopne
mov
mov
add
push
push
sbb
jns
sti
mov
or
mov
jmp
xchg
jg
ficompl
daa
fiadds
inc
jns
pop
ret
inc
bound
insb
jl
mov
push
mov
push
subl
jg
inc
push
cltd
sub
mov
cmpsb
jns
fidivrl
add
fnstenv
js
cli
cmp
xor
sbb
add
nop
lret
in
jnp
cltd
cmp
cld
subl
jnp
jno
aas
jg
sahf
xor
xor
outsl
xor
jns
scas
arpl
adc
jl
cmpsb
popf
pop
mov
aas
fstps
pextrw
stos
mov
dec
pop
pop
sbb
push
sbb
pop
sahf
cwtl
insb
add
js
jno
data16
push
cwtl
adc
andb
jle
stos
add
and
scas
inc
sbb
call
adc
mov
in
inc
pop
out
fnstsw
enter
jns
mov
mov
mov
mov
xchg
jge
ret
mov
dec
or
in
mov
pushf
xlat
lahf
stc
nop
gs
inc
shl
je
cmp
mov
flds
ds
fxch
imul
mov
add
insb
mov
xchg
mov
insl
mov
mov
inc
xor
xor
or
jl
xlat
test
pop
add
fxch
mov
clc
push
mov
mov
adc
iret
fwait
jae
mov
fstpt
sbb
test
mov
pop
popa
push
adc
dec
icebp
jmp
es
jo
jp
in
push
test
xlat
mov
fld
and
xchg
sar
cmp
xor
xchg
movsb
out
add
lcall
mov
xor
cltd
popf
lahf
ret
lock
imul
xor
call
lcall
adc
rorl
clc
dec
jns
add
adc
movsb
dec
jg
cmp
pop
pushf
adc
stc
decb
sbb
daa
imul
jmp
or
sahf
pop
mov
sahf
cltd
cld
fdivl
arpl
inc
xchg
repz
shl
jge
push
ljmp
xchg
lea
pop
rclb
mov
pusha
add
mov
ss
pop
scas
jecxz
dec
fists
sbb
ds
adc
lret
mov
mov
xchg
add
pop
add
gs
xorb
cmp
outsl
inc
and
sbb
xchg
cmp
fs
and
cmpsb
nop
cmp
fdivl
je
add
push
sbb
adc
dec
inc
and
add
enter
jb
pusha
std
test
data16
jmp
cs
adcl
fcoms
mov
jmp
adc
cmovs
dec
data16
mov
or
inc
imulb
shl
push
sbbb
xor
mov
mov
call
pop
fstpt
xchg
stos
xor
sbb
gs
test
xchg
adc
cs
aam
push
in
mov
rcl
loopne
pop
mov
push
inc
mov
sbb
cmc
jns
ss
fcomi
outsl
scas
das
hlt
pop
aad
push
inc
push
loope
ss
mov
mov
mov
xchg
cmpsb
int3
jp
xchg
test
or
xchg
and
cmp
in
sarl
dec
cltd
adc
ds
jge
sbb
cmp
sub
ret
out
inc
mov
dec
mov
or
lods
jg
rcr
pop
mov
pushf
insl
sub
idivb
in
inc
std
insl
lret
fstpl
outsl
pop
lods
das
rorb
insb
shrb
hlt
out
aam
insb
shl
fucomip
lods
ret
add
sub
xor
aas
xor
and
push
enter
mov
add
sub
inc
arpl
dec
ljmp
lods
aam
out
hlt
pop
sub
cmp
sub
jnp
push
out
out
lods
pop
cld
jo
cmp
jns
out
icebp
push
imul
add
mov
je
cli
movsl
xor
pop
fidivrl
jb
int3
enter
test
mov
mov
xor
pusha
dec
mov
leave
std
inc
adc
repnz
mov
jb
mov
imul
iret
jp
push
mov
fdivs
lds
mov
addr16
clc
lcall
push
outsl
imul
pop
xor
sbb
mov
cmp
push
dec
js
into
adc
xchg
sub
aas
sub
xchg
adc
jle
mov
or
or
pop
fnstsw
js
pop
jl
loope
out
cmpsl
xchg
mov
ds
xchg
aad
cmp
clc
mov
sbb
dec
xchg
jge
icebp
std
call
test
loop
out
sbb
rcr
cmc
push
in
jb
insb
dec
lahf
or
or
popa
mov
popa
je
in
push
fisttpll
jns
aaa
mov
std
cmp
sub
sbb
aam
scas
xlat
xchg
push
aam
repz
jmp
xchg
inc
adc
mov
inc
add
mov
and
gs
js
pusha
movsb
jnp
pop
loope
repz
jae
fistps
mov
stos
inc
imul
cmp
scas
pop
xchg
dec
mov
mov
dec
jb
jp
cwtl
inc
iret
das
mov
rcr
inc
not
cwtl
dec
es
cmpsb
or
loopne
inc
gs
push
ror
cltd
stc
mov
lods
xchg
sbb
mov
push
imul
nop
mov
pmullw
add
ret
imul
dec
xor
nop
pop
popf
or
jo
push
cli
fwait
pushf
adc
xor
jg
pop
ds
aas
neg
lods
xor
sbb
or
aaa
pop
xchg
fsubl
lret
sti
or
icebp
mov
inc
pop
xchg
push
pop
cmp
dec
push
jp
sub
pop
jg
int3
rorl
lea
sub
mov
fildll
cmp
jp
xor
nop
inc
out
cltd
dec
pop
aas
js
add
ja
mov
and
mov
and
iret
fsubr
test
aaa
xor
iret
out
sub
add
les
scas
push
lods
cmp
call
js
inc
fnstenv
pop
inc
push
dec
push
jb
stos
push
inc
fwait
lods
gs
in
sub
fistps
mov
daa
jmp
shr
sub
dec
inc
push
add
call
mov
jne
sub
nop
loopne
sub
mov
das
int
xchg
adc
sub
jne
lods
popf
xor
vcvtsd2si
mov
sbbb
in
es
outsb
std
mov
fwait
enter
sub
std
push
cmp
sub
or
cmpsb
jl
mov
mov
mov
or
imulb
pop
addb
clc
int
int3
insl
daa
add
mov
push
cmp
push
lods
in
or
mov
adcl
xchg
mov
xchg
pop
cwtl
sub
mov
bound
adc
inc
jnp
pop
mov
push
fnstcw
cmp
fstpt
cmp
sub
add
lcall
jae
sbb
out
xchg
cmp
icebp
adc
pop
jmp
out
rolb
push
fstpt
inc
push
aam
jbe
and
xor
stos
cmp
pop
jle
mov
jecxz
jp
push
or
mov
or
adc
pop
jmp
roll
cmp
pop
cwtl
mov
rolb
scas
or
lods
mov
testb
or
sub
testb
in
aad
les
movsb
movsb
jg
sbb
rolb
cwtl
je
in
loope
mov
fists
cltd
lock
xchg
sub
xchg
push
xchg
push
mov
fisubrs
sub
inc
xchg
dec
bound
rcrb
push
movsb
test
cmpsb
outsb
jno
and
stc
pop
and
in
mov
jmp
mov
sti
inc
popa
cmp
jl
arpl
test
xchg
xlat
inc
imul
mov
popf
stos
fcmove
lret
sub
push
jg
loop
ds
cmp
dec
scas
aad
lcall
repz
mov
outsb
mov
loopne
inc
pop
std
insl
negb
movsl
jl
cwtl
dec
bound
incb
mov
xor
mov
push
jp
xchg
adc
or
das
out
sub
ss
jno
fildl
mov
mov
add
fwait
push
and
and
rcrb
push
push
xchg
push
loop
pop
xchg
cmc
into
sub
pop
test
xchg
sub
adc
cmp
mov
xchg
fdivs
cmp
sub
sarl
cmpsl
or
loope
jg
inc
outsl
xchg
int3
inc
pushf
sub
push
cmp
test
xor
lods
xchg
mov
push
movsb
repz
xchg
and
test
mov
test
mov
data16
pop
movsl
je
jae
cmp
push
fbstp
inc
out
into
out
out
addr16
xchg
fcoml
je
add
push
subl
pop
fdiv
xor
popw
push
jle
mov
call
rorb
pop
and
movsb
and
lcall
pop
not
repnz
xchg
insl
pop
and
in
mov
xchg
ret
repz
int
mov
mov
pop
jo
pop
push
xchg
ret
xchg
or
cltd
or
sub
inc
ljmp
rcrl
gs
jns
leave
mov
or
add
cmp
dec
and
enter
mov
jge
cltd
jle
popa
das
add
fildl
jne
divb
dec
cmpsb
mov
mov
lcall
xor
dec
mov
cmp
sbb
pop
mov
push
sahf
sbb
sbb
and
add
dec
ds
dec
ja
add
jecxz
lret
lahf
mov
orb
xor
popf
scas
idivb
lret
int3
pop
addr16
jl
pop
js
adc
mov
mov
cmpsl
lea
jnp
mov
xchg
loopne
mov
in
out
sbb
aaa
loopne
scas
fstp
into
fwait
enter
cld
cmc
mov
adcb
adc
push
adc
mov
pop
or
sub
dec
dec
std
iret
int
rol
mov
call
inc
or
mov
sahf
test
cmpsl
cmp
xlat
das
add
dec
repz
loopew
inc
pop
jecxz
int
jp
inc
enter
and
pop
inc
dec
icebp
cmpsl
in
cmpsl
fcomi
and
icebp
cmp
dec
hlt
pop
add
push
rolb
mov
cwtl
flds
aad
and
mov
test
bound
or
rcrb
shl
or
add
loope
cmpsb
aas
pop
jae
out
jns
inc
cs
cmp
hlt
gs
pop
pop
call
adc
push
jmp
jl
push
ja
cmp
fucomp
arpl
adc
mov
mov
lahf
xorl
stos
or
out
scas
sub
mov
xor
xchg
call
push
stos
sahf
shl
push
mov
mov
pop
ret
xor
inc
sbb
js
add
out
mov
push
mov
inc
addb
orb
aas
push
pop
popf
stos
xor
jae
mov
or
pop
xlat
fidivrl
test
mov
notl
pushf
adc
inc
mov
mov
lods
addr16
rolb
mov
cs
xor
or
jge
sti
mov
loope
inc
nop
enter
je
dec
inc
jo
movsb
add
jl
cs
pop
jg
sbb
lahf
xor
cmp
shrb
es
push
push
push
outsb
fldcw
dec
mov
pop
cmp
gs
lcall
in
push
mull
stos
mov
jb
add
sub
mov
and
int3
fdivr
cmp
push
iret
and
lcall
xor
cmp
mov
pop
push
xchg
jle
sbb
bound
mov
icebp
sbb
and
pop
mov
jae
sahf
jns
mov
mov
icebp
mov
sbb
loope
addl
dec
cmpsl
mov
imul
add
sub
dec
lock
cmpsl
or
imul
xchg
enter
into
mov
push
xor
jmp
scas
test
rorb
inc
pop
pushl
roll
push
mov
fs
dec
jb
lahf
loop
jge
add
test
addr16
mov
hlt
aam
adc
mov
cmpsb
out
jl
pushf
sbb
add
and
cmp
das
xlat
flds
sarb
sub
bound
arpl
stos
aam
mov
mov
in
cmpsl
fisttps
std
into
aaa
cli
in
push
push
dec
ret
das
push
pop
push
in
movb
lds
or
and
pop
int
sbbl
sbb
mov
aas
cmpsb
lock
dec
and
fldl
mov
es
fisttpll
pop
push
in
ficoms
and
int3
scas
arpl
movsl
mov
mov
sti
xchg
arpl
mov
mov
adc
in
call
sub
popf
in
xchg
xchg
arpl
test
cs
adc
xor
out
sbb
and
lds
sbb
xor
loopne
fidivrl
and
sub
inc
jle
add
add
std
mov
xchg
jecxz
stc
or
pop
mov
into
push
mov
push
inc
imul
in
sub
or
jae
pop
loopne
nop
scas
mov
push
sbb
xlat
test
inc
fbld
inc
adc
mov
xchg
push
lmsw
mov
fs
repz
mov
bound
leave
pushf
arpl
es
or
inc
push
cltd
arpl
scas
jno
hlt
pop
js
mov
scas
inc
mov
or
jbe
shrb
pusha
fs
cld
cmp
pusha
outsl
sub
repz
mov
fisubl
xchg
out
lret
in
shrb
mov
mov
jnp
pop
into
sub
or
mov
out
mov
or
aaa
movsb
les
lods
scas
gs
movl
mov
pop
mov
cmp
dec
daa
repz
ljmp
ret
adc
fcoms
inc
adc
data16
jecxz
inc
out
xorb
rcll
adc
inc
fidivrl
or
mov
ja
inc
outsl
ret
ret
inc
repz
push
or
sbb
loope
fildl
adc
arpl
jmp
inc
in
ss
inc
add
mov
xchg
lcall
xor
or
push
loopne
pop
pop
out
lahf
lahf
cmpsb
xor
or
ret
inc
jmp
stos
imul
push
push
popa
lds
daa
testl
inc
stos
lcall
mov
sbb
pop
std
test
or
fwait
cmp
leave
jnp
inc
mov
mov
jae
loope
shrl
ds
test
push
mov
sbbl
add
sub
xchg
jmp
test
aam
xor
pop
sbb
sub
adc
xor
jge
or
push
mov
xchg
jnp
sahf
or
ljmp
imul
pop
or
lods
or
and
add
in
out
cmc
in
jne
cltd
int
imul
loopne
into
and
add
push
add
or
jle
mov
pop
pop
inc
jl
stos
shl
and
insb
loop
out
out
enter
outsb
fldenv
push
xchg
dec
rcll
jecxz
pushf
sub
push
cs
dec
jp
jmp
xor
pop
mov
cs
outsl
dec
fs
jnp
mov
xor
pop
push
outsl
insl
movsb
xchg
test
adc
pop
mov
xchg
setns
cmp
adc
mov
cwtl
test
mov
ret
gs
pusha
mov
inc
xchg
and
scas
lds
xchg
sbb
shlb
jno
mov
in
pop
xchg
push
stos
lret
xor
loope
ja
aaa
std
xor
fisttpl
cmpsl
data16
addb
test
fs
pop
or
push
xchg
daa
push
mov
push
pop
adc
cmpsb
fists
sub
cmp
notb
mov
add
adc
pop
mov
stos
scas
ljmp
push
movsl
mov
xlat
daa
imul
adc
mov
push
add
xchg
xchg
mov
mov
scas
pop
in
dec
mov
in
cmpsb
das
inc
mov
int3
dec
xchg
dec
movsb
push
fstpt
sbbb
sahf
cmp
jmp
xor
lret
cwtl
inc
push
scas
ds
pushf
mov
icebp
mov
jns
std
loopne
leave
mov
int3
pop
test
xchg
enter
js
sbb
sub
aam
jecxz
xor
shll
push
mov
outsb
jns
fsubrl
fnstsw
ret
xor
movsb
mov
scas
xor
cmovp
addr16
lret
insb
push
dec
mov
cmp
stos
movsl
jp
loop
cmp
imull
cmp
cmp
inc
call
pushf
pushf
sbb
pminsw
jne
jecxz
jl
je
cmovns
es
aad
out
push
sub
mov
sarb
fcmovu
or
xor
pop
std
jmp
cltd
jle
jno
xor
ret
xor
xchg
mov
int
push
lds
and
fcoms
xchg
pop
cs
ror
mov
xlat
sbb
dec
aaa
aam
sarb
mov
lods
test
add
jae
popa
bound
ds
lahf
jno
mov
jmp
or
and
xor
pop
jle
daa
popa
lret
scas
sbb
add
inc
lock
sub
test
fs
jmp
mov
push
jns
test
mov
fnstsw
jle
lock
repnz
stc
lods
loop
inc
mov
pop
iret
popa
ss
push
mov
adc
mov
mov
test
bswap
jecxz
je
shll
push
sbb
jne
xchg
cmp
dec
lods
jnp
dec
cmp
popf
lret
or
sub
data16
fiaddl
outsb
sub
js
mov
inc
add
mov
insl
pusha
or
loopne
jno
in
inc
jne
rclb
dec
jo
sub
rorb
jb
lcall
arpl
enter
test
jne
jne
jle
test
insl
jmp
and
in
jmp
xchg
mov
push
sbb
and
or
inc
lods
mov
mov
xor
pusha
lock
out
push
cmp
cmp
xor
jno
inc
or
out
cwtl
jne
in
adc
lods
cwtl
es
aam
in
ret
adc
scas
xor
sub
or
mov
js
push
jge
sbb
push
popa
cs
mov
outsl
movsb
mov
cld
jmp
push
sub
xchg
inc
dec
add
xchg
loope
mov
inc
push
jb
cmp
fucomp
ljmp
mov
nop
stc
sahf
jo
mov
cmp
pop
xchg
lcall
mov
out
fnstcw
pop
lcall
push
lock
es
dec
or
daa
movsb
subb
cli
aad
test
pop
sbb
mov
dec
or
clc
jns
add
jge
sub
stos
push
jne
push
dec
pop
ret
inc
adc
jl
popa
repnz
push
in
add
dec
cwtl
imul
sbb
pop
int
cltd
xchg
stc
outsl
add
push
inc
xor
decl
jl
sbb
push
repnz
xchg
jo
fdivs
mov
fwait
mov
cwtl
jecxz
stos
dec
ja
bound
jbe
sub
and
inc
jmp
sar
pusha
sbb
sarb
shlb
xorl
xlat
pop
xchg
in
repz
jl
faddl
jne
xchg
jnp
pushf
push
jb
mov
push
add
mov
mov
mov
cmp
insl
cmpsl
jbe
or
push
arpl
aaa
jp
push
or
dec
in
adc
popf
sbb
mov
fisubl
mov
in
inc
fbstp
mov
mov
cmp
sar
push
popf
sbb
cmpsb
fcoms
movsb
and
int3
ja
sbb
xor
divl
xchg
inc
insl
lea
push
daa
daa
jge
rcrl
mov
xchg
lcall
out
adc
jo
bound
cld
sarl
test
xchg
in
push
inc
or
adc
or
scas
dec
adc
or
push
inc
hlt
inc
cmp
iret
jmp
ret
lcall
pop
or
leave
stc
sbb
dec
in
pop
aam
lret
aaa
pop
sahf
js
insb
mov
cmp
mov
adc
or
cmp
rcll
out
leave
push
js
sub
out
xchg
out
rcr
adc
dec
je
lcall
test
cmpsl
test
dec
mov
mov
jp
ficomps
popf
and
int3
movsl
enter
ljmp
sbb
cltd
rolb
movsb
ds
pushf
cwtl
js
cwtl
or
push
rcrb
shrl
pop
loope
dec
shll
lock
push
ljmp
lret
and
pop
mov
xor
out
mov
mov
mov
mov
aas
dec
add
mov
xchg
and
subb
cmp
mov
bound
xlat
scas
loopne
outsb
out
pop
inc
cs
and
and
lret
adc
xchg
sub
mov
inc
inc
xor
test
pushf
cltd
fiaddl
and
mov
nop
popf
dec
jle
test
pop
jg
lods
int
adc
sub
sti
inc
out
scas
mov
push
call
in
xlat
ja
mov
das
in
rcrl
ror
out
pop
push
out
scas
bnd
fidivrs
mov
or
add
lcall
shll
testl
inc
push
ret
in
xor
data16
xchg
fnsave
pop
jne
je
fidivrs
out
lods
lahf
sbb
push
cwtl
push
mov
into
push
cmc
shrb
nop
ss
je
into
push
aas
xor
xchg
lea
xchg
xor
xor
push
mov
stc
jle
mov
imul
icebp
sub
jb
add
push
push
cmp
ja
cmc
mov
inc
sub
cli
clc
test
outsl
jo
pop
imul
mov
ret
add
mov
jbe
cmp
or
cli
lea
adc
inc
sbb
nop
push
popw
sbb
inc
pop
mov
loopne
das
shr
add
jl
aam
imul
and
sub
fst
mov
icebp
test
jecxz
jp
test
push
mov
or
mov
divl
add
ret
adc
hlt
add
sub
or
xlat
pusha
arpl
sub
push
or
ret
cmpsb
gs
stc
inc
in
aad
aam
cmp
adc
pop
aam
imul
sbb
jnp
cltd
sub
and
xchg
mov
jbe
cmp
jecxz
pop
popa
dec
iret
sbb
pop
loopne
and
inc
mov
xchg
cmc
fidivrl
sbb
push
adc
cli
xchg
mov
push
dec
xchg
filds
mov
repz
dec
sub
fdivs
sahf
into
sarl
mov
xchg
test
push
sti
adc
jecxz
push
and
or
xor
and
cmp
repz
je
push
add
stos
or
mov
mov
adc
mov
mov
push
or
cld
sub
sahf
xchg
cmp
or
inc
mov
lds
pop
stos
movl
mov
mov
out
or
clc
pop
cmpsl
inc
repnz
out
pop
xor
mov
and
pop
adc
aad
out
sbb
mov
fs
cmp
popf
add
shlb
cs
movsl
ds
jns
hlt
imul
gs
push
cmpl
shl
inc
hlt
rcrb
outsb
mov
xchg
mov
cmp
scas
push
ficompl
in
cmp
add
mov
les
loopne
sbb
lret
sub
pushf
in
lahf
jnp
or
cld
in
repz
mov
mov
pop
push
lret
or
imul
and
in
fstpl
idivb
push
lahf
cmpsl
jle
mov
lea
inc
mov
ret
shll
out
or
dec
data16
jns
inc
jns
rorl
cmp
push
les
sbb
adc
out
and
jle
mov
adc
decl
andl
dec
outsb
enter
lret
loope
repz
jle
xor
cmp
ljmp
loope
inc
add
movsb
adc
aas
lret
enter
out
or
pop
add
push
cwtl
inc
call
pop
pop
lret
movsl
fidivrl
jnp
add
pusha
movsb
xchg
mov
subl
or
shrb
add
cmp
jg
movsl
adc
add
mov
mov
mov
test
xchg
sbb
mov
jge
jp
sub
xchg
xchg
mov
dec
aam
sti
out
sub
or
clc
mov
movsb
jnp
inc
fisttps
test
pop
test
movsb
push
mov
mov
or
sbb
push
inc
inc
daa
scas
xchg
scas
jecxz
imul
out
or
call
addl
dec
call
fisttps
xchg
jo
js
rolb
xchg
mov
incb
je
cmp
jnp
inc
rorl
xchg
iret
cld
rolb
nop
pop
into
adc
mov
pmulhuw
jno
aas
test
dec
dec
add
clc
xor
js
mov
cli
mov
scas
shlb
repz
cli
clc
push
test
das
hlt
dec
fisttpll
lahf
sub
dec
mov
jl
cltd
xchg
cmp
add
ret
ret
sbb
xchg
loope
subb
inc
outsl
pop
lea
ja
jo
addr16
dec
mov
lods
dec
xor
lea
cmp
loope
sbb
mov
cmp
test
clc
lcall
insb
cmpsl
ljmp
dec
inc
jecxz
mov
add
push
push
lds
es
cmpsl
mov
lcall
push
cmpsb
xchg
les
or
mov
mov
push
inc
sbb
xchg
sbb
push
xchg
repz
ss
lret
jns
decl
push
push
scas
cmp
mov
or
xchg
push
das
rcll
fisttpll
mov
test
imul
jge
pop
movb
jmp
or
cltd
mov
insb
push
mull
fucom
mov
pop
arpl
mov
and
adc
aad
mov
mov
dec
xor
ret
dec
lods
adc
push
cli
pop
cmp
ljmp
and
push
mov
arpl
cmp
int3
pushf
out
lods
cmpsl
xor
cltd
insb
push
jbe
sub
mov
lods
fidivrl
cli
sti
jno
cmpsl
sbb
aam
iret
and
lock
inc
je
repz
sti
mov
das
sub
sbb
jle
mov
ror
mov
cwtl
pop
cmc
lret
cli
push
xor
negb
adc
rolb
or
xlat
push
shlb
shr
pusha
mov
jecxz
call
rcrb
cmpsb
sbbb
ret
nop
ja
xor
mov
lret
and
rol
sub
ss
aam
push
xor
xchg
in
rol
enter
ds
in
jno
mov
jle
js
imull
dec
pop
lods
dec
ds
xor
fistl
pushf
push
lds
ljmp
inc
and
push
arpl
sbb
mov
mov
xor
rclb
gs
pop
shrl
xchg
adc
in
xchg
cmp
push
sub
pop
sub
test
sbb
cmp
mov
push
xor
out
mov
sbbb
cmc
fadds
mov
cld
cmp
lds
add
push
push
orb
lods
ljmp
sarl
movb
mov
inc
fdiv
fcomi
and
js
mov
std
inc
sbb
ret
mov
addb
mov
shlb
xchg
pushl
clc
push
icebp
adc
outsl
cmp
cli
out
jno
sub
or
mov
jp
and
and
ds
sub
lret
scas
push
ja
xchg
ds
ret
sub
sbb
aad
into
mov
adc
rolb
addr16
cmpsb
mov
lea
lret
lods
pop
sub
icebp
fs
inc
push
mov
push
pop
setns
push
ljmp
add
push
and
mov
pop
push
aaa
push
shrl
jne
and
jae
lock
jl
aaa
cmp
push
lods
gs
mov
sbb
test
gs
roll
xor
cmp
dec
in
mov
aam
imul
aas
inc
int3
pop
int
pop
and
dec
imul
hlt
leave
notl
mov
call
outsl
int3
push
mov
out
lret
fucom
rolb
push
mov
pop
sbb
mov
pop
sbb
push
pop
mulb
dec
jg
test
push
dec
cmpsl
loopne
shll
mov
sub
hlt
or
pop
and
ljmp
jb
adc
pop
add
and
movsl
mov
mov
ljmp
aaa
dec
call
mov
sub
mov
mov
jne
push
roll
or
inc
int3
lcall
in
mov
or
testl
inc
cwtl
loopne
sub
mov
ja
sbb
ja
xor
out
mov
jno
mov
xchg
or
jp
fcmovnb
xchg
push
popf
pop
add
mov
cwtl
xor
sahf
fstpt
sub
mov
imul
sbb
mov
inc
notl
mov
rol
cmp
cli
mov
dec
and
aaa
pop
repz
mov
jecxz
aam
sbb
ret
outsl
jae
or
add
push
imull
mov
lret
popa
stos
or
pop
in
xor
xor
sti
and
dec
adc
inc
data16
cwtl
psubq
sub
dec
ret
insb
ss
xor
fiaddl
stos
sarl
arpl
xchg
inc
mov
adc
push
cmc
popf
and
fprem1
and
pop
leave
cmp
jns
jg
push
fisubl
and
insb
mov
popf
xchg
lods
outsb
int3
stos
cmp
and
adc
jmp
pushf
pop
xchg
sarb
scas
pop
jl
fcomi
gs
repz
mov
stos
test
stos
xlat
jns
lar
sahf
mov
popa
pushl
imul
or
push
xchg
xchg
xchg
cmp
movsb
aaa
sub
mov
test
mov
and
enter
cmc
dec
daa
shll
out
sub
adc
mov
jae
scas
out
xchg
lahf
daa
push
xchg
decb
mov
stos
scas
xor
adc
xchg
addb
stc
pop
inc
mov
sub
fistpl
xor
outsb
test
cld
push
test
movsl
mov
js
mov
idivl
xor
cmp
pop
les
cmp
xchg
mov
repz
xchg
mov
lods
sbb
push
mov
and
ret
loop
mov
add
fsub
cwtl
in
xor
xchg
inc
stc
scas
inc
mull
in
jae
push
shl
rclb
out
xchg
adc
cs
aas
add
mov
jo
jp
inc
jb
cmp
push
jnp
push
mov
gs
xor
aam
mov
lods
pop
cmc
ficompl
loopne
arpl
aad
sar
in
ret
cmp
mov
mov
mov
lds
xorb
shrl
sbb
mov
or
imul
push
dec
outsb
les
lret
adc
push
or
stos
xchg
fcoml
nop
adc
sbb
repnz
orb
adc
aad
imul
stos
sub
test
add
stos
lahf
dec
es
lret
imul
cmp
dec
or
mov
ljmp
addr16
in
stos
dec
xchg
dec
arpl
adc
dec
ja
fwait
xchg
int
xchg
adc
sub
in
inc
jb
daa
mov
push
loop
pop
cmp
adcb
outsb
dec
xchg
inc
jl
jns
sbb
fstl
sbb
loope
out
out
pusha
pop
and
out
fistpll
mov
xor
jb
mov
stos
jg
push
xchg
and
lret
push
outsb
loop
pop
mov
add
test
lods
flds
jmp
orl
sub
popa
and
lods
add
pop
addr16
jnp
pushf
xchg
ret
dec
mov
jl
sbb
sub
movsl
negl
pop
inc
lahf
scas
or
pusha
daa
les
xchg
outsb
loopne
ret
dec
pop
add
jmp
add
hlt
call
cltd
and
add
sbb
xchg
sub
ror
cmp
mov
bound
nop
jnp
call
jbe
sub
push
sub
jae
mov
or
lock
add
mov
cld
shlb
dec
ret
js
out
ret
fs
lahf
ret
inc
cld
icebp
fdivrl
pop
inc
cmp
sbb
stos
cmc
js
aad
jnp
sbb
xchg
jp
mov
sbb
ret
repz
aas
inc
insl
aad
pop
jp
jne
xor
out
mov
or
push
jg
xor
es
stc
mov
inc
add
or
out
frstor
xchg
jecxz
push
mov
out
shlb
scas
add
jle
pop
pop
mov
jp
mov
pop
ss
sti
rol
pop
pop
movl
add
int3
icebp
rcrl
roll
filds
call
adcb
sar
insb
add
sub
mov
or
dec
arpl
pushf
dec
repnz
adc
pop
faddl
pop
cmp
ja
testl
notb
mov
rorb
lock
mull
test
call
lds
or
mov
pusha
adc
ret
adc
push
les
xchg
jle
popf
mov
shll
out
jo
aad
out
push
push
sbb
shlb
sti
shrb
mov
fdivrs
sbb
enter
daa
or
int3
jge
bound
out
movsl
inc
cmp
cmp
icebp
mov
dec
sub
fstpl
jmp
fistps
lods
push
mov
inc
or
fdivrp
movsl
xlat
stos
xor
push
es
cmp
cld
push
test
or
test
icebp
adc
repz
inc
mov
xchg
sti
aas
imull
fdiv
add
dec
sar
roll
cmpsb
cmp
jns
popf
and
test
pop
js
xor
push
loopne
ret
and
mov
inc
xchg
inc
mov
dec
sti
jge
cld
in
mov
mov
testb
dec
cmpb
adc
add
or
add
cld
icebp
lret
cmpsb
test
xchg
mov
insb
jecxz
mov
bound
cltd
xor
loopne
push
mov
jp
icebp
add
adc
mov
jno
pop
push
ret
mov
push
sbb
mov
add
xchg
or
ret
shrb
jne
nop
adc
push
repnz
push
push
sbb
or
aad
dec
inc
outsb
add
lods
addr16
mov
cmp
insl
test
inc
lret
shlb
sbb
xchg
in
push
je
pushf
scas
adc
and
shl
sub
adc
jp
sbb
rolb
in
imul
add
push
sbb
mov
dec
cli
neg
add
insb
sbb
out
push
test
and
mov
fs
xchg
push
add
fwait
mov
lds
inc
push
mov
roll
jle
imul
adc
mov
xchg
outsl
sbb
mov
mov
jb
push
mov
xor
push
jns
pop
dec
dec
outsb
jae
pop
mov
in
lcall
add
subb
ret
fsubrs
scas
lea
adc
and
dec
fisttpll
jbe
mov
je
pushf
clc
in
fcoml
or
mov
adcl
cmp
insl
stos
out
push
jbe
mov
inc
or
test
cmpsb
fucom
into
outsl
or
push
int3
jnp
test
testl
aad
das
add
rcr
pop
repz
mov
std
lcall
lahf
in
mul
rol
jae
stc
pop
xchg
outsb
sub
movsl
pop
test
test
xchg
mov
pop
popa
aas
mov
cmpl
mov
in
lods
mov
insb
jle
mov
fstl
xchg
out
hlt
pop
xor
int
mov
das
or
stc
xlat
push
pop
or
mov
sbb
test
test
xor
iret
inc
and
adc
aas
les
sbb
push
sub
dec
dec
push
sbb
cwtl
cmpsb
movsb
orl
insl
push
mov
add
push
or
push
sub
adc
inc
push
xchg
xchg
add
dec
rcl
aaa
rcrl
stc
shl
jecxz
jo
and
mov
push
add
dec
in
add
jnp
mov
add
sbb
mov
in
xor
add
cmp
loope
cmp
push
hlt
pop
jnp
sti
jne
leave
daa
subl
in
xor
mov
sub
xchg
push
popf
dec
adc
xchg
jle
movsb
fiadds
paddusb
insl
push
jecxz
sbb
and
lret
aad
stos
fwait
jb
test
in
mov
sub
das
clc
cmp
faddp
cmp
push
pusha
mov
mov
add
imul
int3
stc
push
fnstcw
push
dec
ss
addl
sbb
mov
outsl
dec
xchg
shrl
xor
std
out
mov
xchg
fs
adc
sbb
ja
out
pop
rcrl
flds
out
adc
ret
pop
mov
aam
adc
or
fiadds
adc
lret
mov
inc
stos
pop
lret
ljmp
jge
loop
ret
sahf
cmpb
out
dec
sahf
lock
test
mov
add
adc
stc
xchg
test
lea
push
addr16
sbb
clc
or
in
in
lret
inc
aaa
test
jl
pushf
mov
pop
out
and
mov
mov
out
xor
jbe
fnstenv
lods
push
add
sub
pop
iret
clc
fildl
out
leave
test
movsb
pop
and
add
push
cmp
movsb
push
pop
cli
mov
push
mov
call
xor
mov
out
nop
mov
mov
xchg
mov
mov
jmp
xchg
cmpsb
popf
loop
inc
mov
pop
jns
jne
cli
mov
pop
clc
inc
sub
fs
std
pop
xchg
push
and
js
cmp
xor
sbb
dec
jmp
push
mov
mov
mov
add
xor
cli
push
cwtl
jae
les
sub
movsb
dec
cmp
fists
inc
cwtl
cli
fxch
ja
insl
test
jns
pop
in
lea
pop
xor
pop
add
std
pusha
test
inc
mov
aad
sti
dec
shlb
mov
inc
fisttpll
aaa
fwait
mov
ret
lcall
mov
sbb
dec
sbb
or
in
aad
ss
dec
add
std
cs
mov
cltd
add
ret
dec
mov
pop
mov
inc
jae
inc
fistl
inc
ljmp
sbb
insb
sbb
in
addr16
mov
mov
leave
adc
pop
das
xchg
lods
xor
cmp
pop
loope
push
lahf
mov
sub
das
or
dec
ret
inc
movsb
jae
test
sbb
jnp
push
mov
fadds
sub
push
shrb
out
mov
repz
in
insb
jbe
pop
out
add
adc
sahf
in
and
push
jno
sbb
out
pushf
jge
fisubrs
mov
or
lcall
adc
mov
test
mov
dec
xchg
push
cmp
test
xchg
xor
fdivrs
and
psadbw
xchg
mov
xchg
jo
dec
leave
cwtl
lret
in
xchg
movsb
in
leave
push
or
mov
es
movsb
jecxz
into
imul
enter
sbb
minps
shl
push
out
fsubl
cli
sbb
pop
in
cmp
bound
mov
lods
lcall
add
sub
xor
dec
shlb
mov
int
movsl
xor
or
cmpsb
out
mov
stos
aad
push
les
in
mov
cld
lea
fstps
iret
dec
jb
xchg
and
add
lea
dec
dec
xor
imul
jmp
aam
test
addr16
loopne
out
mov
jo
jl
jp
jmp
and
jns
lods
add
fbld
jg
dec
sbb
jle
popf
fcoms
adc
push
int
cmp
int
mov
es
cli
mov
sbb
cmpsb
int
mov
xchg
ss
xor
xchg
mov
jmp
aam
pop
add
inc
xchg
int
inc
mov
stos
cmp
cwtl
jmp
push
out
lahf
sbb
sbb
mov
sbb
adc
int3
dec
lret
xchg
test
popa
in
rclb
or
nop
push
cmp
mov
sbb
aaa
arpl
aas
arpl
out
sbb
scas
inc
clc
dec
sub
fnstcw
xchg
int3
pop
mov
inc
adc
loopne
sbb
inc
aam
test
bound
pop
cmp
inc
fimuls
pop
movsl
push
int
push
cli
jne
jnp
loop
mov
add
adc
mov
enter
push
adcl
push
jnp
jnp
lcall
int
adc
xor
cld
mov
xor
mov
and
inc
push
cmp
sbb
repz
xchg
sub
push
push
fcompl
xchg
and
inc
add
leave
add
push
mov
adc
in
dec
inc
aaa
fnstcw
testl
adc
mov
adc
add
fdivl
add
xchg
in
test
aas
jle
cmpsb
adc
insb
imul
ds
ljmp
test
jo
and
fsubl
cli
sbb
adc
daa
fidivrs
and
xor
push
adc
test
mov
add
add
xor
inc
int
test
sbb
loope
out
push
xor
mov
sub
fisubrs
push
sbb
adc
sub
or
dec
imul
mov
stos
loop
mov
mov
jg
call
fcmovne
pushf
repnz
inc
inc
stc
cmp
rorb
fldl
and
sub
lock
insb
in
fldenvs
ret
xchg
ljmp
or
and
lock
and
fimuls
fld
mov
ret
or
adc
inc
loop
pusha
pop
das
test
or
sub
lock
repnz
push
xchg
sub
inc
iret
cltd
ds
jl
loope
dec
data16
cmp
push
and
test
ret
cmp
push
nop
adc
xor
or
adc
out
lea
or
xchg
xchg
xlat
mov
je
repz
sbbl
jb
rolb
rclb
mov
lods
jb
or
arpl
test
leave
pushf
and
dec
loope
mov
push
push
lea
fadds
loope
or
rcrb
rcpps
and
fisubrs
add
ljmp
jge
jge
and
arpl
in
or
cmp
addr16
aam
int
fiaddl
add
mov
xchg
fisubs
push
xchg
rep
fidivrs
jmp
dec
je
mov
or
stos
cltd
jnp
or
inc
mov
and
hlt
mov
test
push
sarb
stos
outsl
or
xchg
fisttpl
cmp
pop
daa
sahf
xlat
imul
inc
in
sub
mov
or
mov
lret
push
lods
lret
in
loopne
fisubrs
mov
stc
sub
rcrl
mov
and
fnstsw
dec
mov
and
cmp
mov
stos
push
gs
sub
cmp
push
scas
pop
jne
je
cmp
jno
jnp
out
sub
jns
adc
syscall
push
adc
push
popf
ja
and
mov
mov
sub
lahf
stos
cmp
dec
jns
inc
loopne
shll
add
cli
lcall
movsl
lret
adc
nop
pop
test
adc
xchg
adc
lds
push
out
dec
pop
dec
mov
xor
dec
and
pop
bound
les
cmpsb
in
fdivrl
sbb
adc
rorb
jae
cld
add
inc
mov
mov
ss
les
xchg
ror
xor
inc
imul
mov
push
enter
mov
ret
jo
pop
pop
xchg
push
cld
shlb
aam
pop
das
arpl
adc
orl
cmp
mov
fcoms
out
lret
or
sysret
inc
push
mov
dec
xchg
mov
sbbl
jbe
nop
mov
dec
ja
outsl
aaa
aam
xchg
pop
loopne
dec
rcrb
mov
mov
sbb
pop
test
jnp
shlb
jmp
push
or
jmp
fidivrl
das
iret
fsubr
stos
xlat
lea
add
lahf
xchg
mov
xor
xlat
sub
add
dec
jne,pt
nop
xchg
add
push
sbb
mov
cwtl
jne
add
xchg
data16
adc
and
pop
aaa
push
js
and
iret
mov
dec
xchg
mov
and
pop
add
pop
jne
scas
push
gs
clc
inc
push
outsl
roll
inc
insl
rolb
adc
out
pop
sarl
aam
xor
inc
leave
jle
pop
cmp
fisttps
ret
sub
inc
aam
dec
mov
cmp
push
dec
push
aad
or
add
dec
sbb
testb
or
pop
inc
mov
aaa
jns
mov
push
inc
lods
fcomp
fwait
dec
into
fdecstp
das
or
or
xchg
xchg
js
inc
mov
imul
adc
xor
mov
xchg
jg
ret
fwait
adc
orl
shl
or
jae
xor
jnp
cmc
push
icebp
sub
mov
shl
fcmovbe
clc
pop
adc
cmp
push
mov
jg
in
adc
arpl
insl
outsl
loope
sub
popa
mov
xchg
xor
scas
and
add
xor
gs
mov
sbb
imul
add
std
add
mov
and
mov
xor
pop
sbb
and
or
xchg
hlt
add
mov
out
insl
and
cmp
in
outsl
rcll
push
imul
cmc
outsl
add
pop
rorb
xlat
sub
scas
jne
test
xchg
fnstsw
es
mov
aaa
lock
das
sti
int3
sub
mov
mov
mov
xchg
add
cwtl
or
sbb
ss
arpl
popf
imul
nop
mov
cmp
ljmp
and
repz
ljmp
jne
add
fdivl
xor
adcb
inc
inc
mov
in
mov
and
test
dec
fdivrl
push
movsl
dec
lods
call
pop
add
gs
mov
push
lock
rcll
pop
jne
pop
aaa
sbb
mov
push
mov
notl
out
xchg
movsl
jge
orl
aas
and
xchg
fistl
ret
cmp
dec
inc
mov
sbb
push
cltd
mov
lcall
les
sarb
ret
cli
popl
addl
cli
dec
in
fstl
stos
je
mov
outsb
xor
enter
clc
test
enter
lods
arpl
insb
inc
outsb
xor
out
inc
ss
xchg
dec
adc
jae
cmp
aad
xchg
add
pushf
scas
jl
insl
daa
cmp
inc
loop
xchg
je
in
int
shlb
das
dec
sbb
fiaddl
xchg
inc
scas
push
call
jo
xorb
adc
ror
aam
fistpl
sub
push
lcall
decb
adc
add
add
sbb
dec
in
lret
push
in
adc
movsl
sbb
rorb
les
xchg
outsb
daa
ljmp
pop
sti
mov
mov
pop
xor
dec
fisttpl
xchg
in
sbb
sbb
sti
je
adc
jb
insl
xor
xchg
pop
jae
push
adc
outsl
js
out
dec
ret
call
sbb
lret
push
xchg
test
dec
add
out
dec
dec
dec
dec
lods
ds
push
enter
lds
push
pushf
mov
push
xchg
pop
sub
dec
es
stos
fsub
push
dec
dec
out
ror
orl
dec
mov
mov
loopne
subl
add
int3
outsl
hlt
add
sbb
cld
insl
mov
jg
cli
push
mov
push
push
aad
imul
lahf
out
mov
mov
inc
xchg
js
or
orb
sub
lret
sub
out
mov
push
push
adc
test
or
adc
jb
sbbb
lahf
or
mov
adc
outsb
adc
jge
xor
adc
or
lods
mov
js
mov
iret
subl
inc
mov
pop
loop
into
mov
mov
imul
adc
dec
lea
xchg
ret
mov
mov
xchg
outsl
bound
or
xor
in
push
hlt
mov
idiv
dec
jb
popf
dec
and
add
cmpsl
nop
movb
xchg
add
xchg
dec
push
sub
inc
pop
xor
pop
jb
mov
mov
popf
xor
scas
gs
sbb
xor
mov
fisubrl
pop
sbb
daa
mov
testl
sahf
jbe
paddd
shl
lds
subb
leave
add
dec
push
inc
push
push
mov
or
cmp
xlat
adc
sbb
cltd
sarb
nop
inc
add
fstl
dec
pushf
fnsave
sahf
sbb
push
jmp
mov
aam
insl
pop
cli
pop
scas
int
std
mov
and
inc
loopne
jp
fldenv
pusha
mov
mov
les
lds
into
mov
out
jg
push
clc
cmpsl
cmpb
or
push
adc
int3
int
jp
dec
data16
cmp
cmp
cmp
addl
xor
fstpl
sti
pop
popa
push
fistpl
add
pop
enter
shrl
insl
mov
fisttps
xor
or
cmovnp
mov
mov
jns
adc
enter
and
cmpsb
jl
pop
rclb
rorb
hlt
mov
dec
insl
mov
dec
je
pushf
out
mov
add
mov
cmpsl
repz
push
bound
push
add
jg
daa
mov
sbb
sbb
sarb
mov
and
and
push
or
das
dec
adc
lret
dec
jmp
add
imul
sub
dec
aam
xlat
push
add
add
mov
xchg
ja
lods
mov
or
jl
jae
cmp
stc
test
sub
inc
add
add
and
sbb
push
jecxz
test
and
out
std
mov
cmp
add
sbb
or
loopne
arpl
loopne
leave
fdivrl
xchg
dec
mov
inc
jae
push
cmpsl
shl
pop
ja
jg
dec
js
sub
xchg
push
pop
sbb
idivb
xchg
dec
shlb
je
decl
fs
add
push
adcl
xor
pusha
inc
or
push
rep
dec
mov
fsub
data16
cmp
scas
and
cmp
loope
fsubr
lret
and
mov
sbb
or
jb
dec
sbb
cmp
lods
jbe
or
int
jle
pop
mov
mov
pop
iret
pop
scas
hlt
xchg
daa
push
cs
gs
push
sub
push
mov
add
xor
add
imul
sub
mov
lods
mov
jmp
dec
ret
into
vpmacsswd
jle
lret
push
push
mov
cmp
dec
lds
mov
or
xlat
adc
or
xchg
pop
mov
imul
and
cmp
rolb
das
jle
daa
xchg
mov
scas
mov
mov
pop
jg
xor
scas
cmpsl
lods
stc
push
add
mov
jnp
sbb
or
add
idiv
inc
jp
jge
call
jle
in
mov
movsl
lcall
int
inc
pushf
adc
je
jmp
iret
sbb
mov
insl
loope
in
cmp
rclb
fld
sub
test
sahf
and
add
add
mov
out
shlb
push
cmp
or
cmp
or
daa
cmp
popf
mov
mov
pusha
push
sub
fwait
xchg
dec
call
and
test
cmp
cmpsl
fstps
negl
lods
jno
push
inc
test
js
mov
insb
sub
mov
out
add
sbb
push
push
mov
pop
cmp
jl
in
std
orb
loope
fstpt
mov
and
mov
jnp
or
adc
add
inc
stos
mov
pop
dec
cld
clc
in
xchg
xchg
push
dec
ja
shr
mov
std
adc
sbb
outsb
jne
mov
loopne
adc
out
jl
push
mov
sbb
bound
sbb
mov
popf
aaa
lods
add
sti
mov
xlat
add
mov
ljmp
call
testb
daa
jge
xchg
and
mov
pop
ljmp
push
adcl
mov
fcom
pop
or
loope
popf
adc
and
xchg
out
out
sub
push
dec
and
clc
sub
sbb
lods
push
dec
add
mov
shlb
inc
std
add
lcall
dec
stos
fimull
or
aad
out
dec
inc
mov
aam
jne
pop
inc
mov
aad
ss
or
out
jg
or
sub
sbb
dec
cmp
movsb
in
arpl
inc
dec
clc
mov
mov
cmp
mov
cmpsb
pushf
mov
mov
push
imul
mulb
icebp
mov
xor
mov
push
pop
jle
jae
fistps
in
cmp
std
frstor
testb
jmp
push
pop
je
push
loopne
mov
repnz
fstl
xlat
sub
test
mov
or
gs
lret
push
daa
cwtl
in
orl
push
mov
daa
andb
xorb
mov
loop
cmpb
or
rol
fs
ficoml
cmpsl
sarb
mov
or
pop
out
mov
out
add
test
mov
loop
mov
fldcw
xorl
pop
xchg
out
xor
cmp
int
sahf
nop
leave
jecxz
imul
daa
rol
pop
out
push
jne
rcrb
sbbl
inc
xor
and
addr16
mov
in
mov
sbb
cmp
push
xor
nop
jo
jo
repnz
lock
cmp
ficoms
adc
lret
xchg
adc
adc
ret
dec
popf
xchg
and
mov
pop
bound
jle
and
and
mov
iret
mov
mov
inc
push
movsb
sti
pushf
adc
mov
jmp
sub
push
push
push
sar
jl
dec
jmp
lods
jb
sarl
xchg
mov
mov
adcl
and
jg
arpl
daa
das
fistl
in
sahf
dec
dec
stc
pop
xlat
js
inc
add
push
mov
mov
ret
adc
gs
aas
ja
cmp
mov
jp
adc
roll
shlb
push
lret
fwait
xor
add
ret
inc
xor
shlb
movsb
loopne
xchg
cmp
cmp
sbb
mov
leave
in
mov
ret
push
sub
push
lods
xlat
lock
mov
xor
test
pop
xorb
adc
mov
int3
lds
pop
dec
or
out
cmp
aam
fisubs
pushl
mov
mov
sbb
push
push
addr16
cmpsb
scas
cwtl
rolb
jmp
lret
lea
add
xchg
loop
add
mov
mov
fldcw
les
cmc
xor
pop
loope
pop
and
inc
inc
jl
mov
push
add
aas
data16
lahf
cs
add
stos
rcl
shl
outsl
rolb
jecxz
insl
pop
rorb
ljmp
out
orb
out
add
dec
xor
sub
pop
insb
pop
xor
mov
pop
fsubr
push
pop
loop
sub
stos
mov
jne
es
pusha
and
aas
outsl
dec
lahf
jne
or
sub
mov
jnp
inc
sub
aad
lahf
ret
aas
icebp
pop
push
cld
mov
icebp
inc
xchg
leave
inc
jp
sbb
aad
pop
inc
sub
push
stos
stos
mov
xchg
fists
enter
call
leave
movsb
inc
cs
stos
dec
adc
cmp
test
inc
dec
scas
pop
sahf
xor
lcall
sbb
push
jae
add
fs
rolb
or
adc
jns
shll
mov
pop
rcrb
push
mov
inc
leave
mov
sbb
pop
and
in
movsb
fwait
or
sub
jae
mov
sbb
mov
mov
dec
sbb
shlb
mov
int
das
andb
xchg
add
cmp
cmp
sub
loopne
lret
push
pop
adc
adc
or
das
cli
adc
adc
cwtl
movsb
add
lds
add
or
pop
notb
jge
imul
bound
cld
lods
popl
xchg
arpl
loope
dec
xor
and
cmp
addb
rcrl
ret
pop
jg
repz
adc
inc
sahf
cld
push
push
cltd
fsubr
cmp
or
outsb
mov
and
aas
outsb
daa
insb
pop
repz
out
mov
cltd
bound
sub
jb
mov
leave
mov
cltd
adc
inc
lock
int
fnsave
mov
aam
pop
adc
fiadds
mov
scas
std
xor
les
pop
sbbl
pop
aaa
sub
push
mov
mov
hlt
jnp
aam
xchg
rol
test
xchg
mov
stos
push
movsb
stos
adc
sub
in
sub
pop
mov
les
fsubrs
and
fcomps
popf
fwait
aad
jae
movl
mov
dec
dec
push
mov
lcall
dec
outsl
mov
push
lahf
add
inc
xchg
fnsave
inc
outsb
mov
aaa
adc
adc
stos
push
push
rcll
movsb
push
hlt
fbstp
jmp
ss
outsb
sbb
push
cmc
leave
dec
sbb
pop
add
push
nop
clc
mov
mov
out
or
mov
or
push
ja
and
cmp
stos
mov
and
inc
ss
xchg
mov
jmp
xchg
hlt
popf
bound
ljmp
sbb
xchg
pop
fldl
push
sub
in
pop
sbb
jl
ja
pop
and
iret
jp
addb
cmp
cmp
dec
out
rcll
call
iret
jmp
mov
in
mov
jg
rol
mov
shl
loopne
mov
pop
or
scas
in
jle
pop
imul
call
push
and
cmp
int3
sbb
loop
addr16
clc
pop
and
jmp
andl
daa
popa
or
scas
adc
xchg
out
jge
orb
idivl
mov
mov
cmp
sbb
fnstcw
cld
mov
sbb
aad
mov
insl
mov
stc
fwait
mov
add
xlat
cld
xchg
inc
mov
adc
rclb
mov
aam
pop
push
cmp
loop
mov
pop
cmpsl
jno
in
and
mov
cmpb
add
dec
or
pop
call
push
push
jbe
push
fs
pop
btr
jbe
mov
xor
jno
fmull
xchg
xor
mov
fnstenv
inc
or
cld
push
je
shl
mov
or
inc
pop
ss
push
dec
mov
lcall
mov
scas
pop
insl
aas
or
mov
pop
or
dec
out
inc
pop
stos
mov
and
cmp
cld
hlt
xchg
cmp
mov
jbe
fisttps
xor
push
push
insb
or
and
adc
adc
push
ficompl
jg
sub
scas
inc
pop
bound
and
and
mov
mov
sub
mov
out
or
repz
outsb
sbb
mov
pop
data16
fnop
jg
jae
xor
mov
loope
loope
fwait
test
stos
or
aam
int
add
js
cmpsl
fneni(8087
fsubs
cli
imul
repz
adc
jo
cmpsl
xorl
jp
pop
js
fcoms
icebp
rcrl
jmp
addr16
imul
xchg
sub
adcl
and
mov
movsb
mov
dec
inc
loope
mov
fldl
sbb
mov
sub
addb
jo
in
mov
imul
pop
arpl
mov
xchg
ds
add
dec
lret
xor
jp
or
ds
aam
cli
stc
rclb
mov
in
mov
xchg
or
mov
or
daa
roll
subb
and
sub
test
or
sarl
dec
ljmp
xor
test
inc
sbb
xchg
sbb
negl
int3
ljmp
jmp
pop
and
loop
test
push
cmpsl
add
idivl
lret
dec
xchg
and
cmpsb
clc
mov
dec
rcll
arpl
xchg
icebp
jnp
les
and
jg
aam
lcall
jp
xor
int
adc
inc
mov
mov
das
lea
insl
jecxz
inc
nop
das
mov
arpl
adc
int
pop
fmulp
pusha
mov
scas
fistps
dec
adc
enter
xchg
sub
mov
mov
add
outsb
or
int3
test
and
stc
es
pop
insb
pop
and
push
xchg
imul
jmp
cmp
cmp
mov
adc
gs
inc
and
mov
mov
adc
lea
bound
sbb
xor
jle
enter
lods
in
sbb
std
cmpsb
and
mov
test
dec
lea
mov
fidivs
xor
lret
add
pop
add
in
std
test
fnstenv
cmp
loope
ja
gs
call
rorb
sbb
fnstcw
pop
xor
mov
add
shrb
jns
imul
mov
sub
fidivs
pop
inc
fwait
adc
sub
pusha
push
shlb
mov
add
cmp
ss
sub
test
mov
imul
pusha
mov
pop
or
jns
and
xor
inc
testb
jb
and
repnz
add
mov
mov
int3
adc
or
cmp
adc
lret
loopne
sub
ret
or
dec
mov
sub
insb
push
pop
je
jnp
add
fwait
mov
inc
int
xchg
jp
add
jo
test
mov
jmp
sbb
jp
mov
add
subl
insb
loope
xchg
pop
xor
dec
pop
and
es
cltd
pop
subb
dec
jg
xchg
cmc
jp
leave
insl
xor
pop
icebp
loop
popa
mov
sub
into
inc
or
dec
subl
xchg
mov
dec
or
push
popa
rclb
xor
inc
stc
mov
or
cmp
jg
pop
pop
push
xchg
mov
dec
das
mov
imul
std
repnz
sub
pop
push
push
into
hlt
js
jl
push
icebp
inc
xchg
jp
cwtl
xor
mov
les
arpl
test
test
enter
xor
sbb
sub
lds
or
push
xchg
imul
xor
sbb
mov
mov
inc
fidivl
lahf
pop
dec
cwtl
mov
or
adc
das
call
sbbb
or
xor
sub
mov
filds
add
fdivl
and
je
mov
jb
shr
inc
idivb
repnz
les
mov
jmp
out
pop
imul
pusha
rcrb
call
sbb
pusha
add
dec
cmp
push
std
insl
jmp
mov
xor
in
cld
js
js
subl
int3
cs
or
xchg
pop
rolb
pushf
insl
insl
xchg
pop
popf
sahf
stos
das
and
incl
loop
aam
into
js
mov
in
mov
js
xor
add
push
xchg
pop
notb
add
testb
out
or
lock
lret
mov
test
mov
cmp
add
in
dec
adc
subl
mov
cmp
aas
icebp
jnp
in
sti
xchg
mov
scas
cmp
sti
xor
fdivr
and
cli
and
fwait
leave
loop
sarl
divb
popf
pop
es
hlt
ret
mov
push
rorl
xor
mov
lret
sub
jne
xchg
push
mov
xor
bound
cmc
sub
dec
cltd
scas
inc
pop
cltd
or
dec
hlt
adc
sbb
into
outsl
xchg
out
adc
xor
arpl
dec
clc
xchg
inc
xlat
inc
cwtl
mov
sbb
enter
adc
aas
movsl
dec
and
pop
adc
ss
sbb
and
inc
lcall
test
sarl
mov
push
mov
and
add
pushf
cmp
inc
xchg
setb
shrb
jnp
dec
jle
push
cmp
daa
cmp
sub
daa
jnp
cwtl
and
dec
std
das
idivb
cmp
pusha
push
test
arpl
jl
and
lea
add
bound
jecxz
pop
outsl
call
popa
bound
sbb
xor
stos
dec
in
push
loopne
sub
lods
mov
scas
icebp
ja
sbb
imul
ljmp
push
ss
pop
cmpsb
stos
ror
mov
dec
dec
jno
sbb
add
repz
stos
inc
mov
dec
pop
mov
mov
add
add
andb
sbb
hlt
out
lds
fildll
or
dec
push
dec
fisubl
je
call
xchg
les
int3
add
fdivrl
xchg
xchg
outsb
dec
pop
inc
pop
ja
stos
jns
sub
sub
push
jo
fcoms
sbb
mov
sub
ffree
nop
shlb
addr16
xor
xchg
or
psubd
es
dec
pop
imul
and
xchg
lods
adc
mul
sbb
out
pushf
or
dec
xor
dec
dec
xor
stos
lods
das
dec
inc
jmp
scas
push
inc
lcall
mov
shll
leave
adc
xchg
nop
sbb
cmpsb
dec
pop
cmp
lcall
mov
or
and
cli
xor
and
nop
push
in
sbb
xchg
mov
adc
mov
lret
pop
mov
inc
int3
xor
ds
inc
sub
cmp
pop
pushf
in
cmp
shlb
push
repnz
sub
xor
into
cmpsl
push
mov
cmp
mov
fists
hlt
inc
mov
movsb
sbb
dec
hlt
inc
and
ja
repz
add
push
lea
loope
addl
sub
out
movsl
xor
xlat
sbb
in
decb
dec
cmp
out
lret
sahf
cmpb
mov
or
out
mov
jbe
jp
aad
loope
loope
mov
and
test
rolb
xor
and
pop
xchg
dec
sar
enter
js
cmp
push
std
aaa
mov
test
aam
adc
mov
lock
cmc
rcrb
mov
cmpsl
popa
cmp
hlt
cmp
adcb
insl
imul
scas
fcmovnb
shrb
jp
popa
push
sub
xchg
sti
stos
xor
push
sahf
sarl
andl
out
fdivp
lret
xchg
cltd
into
sbb
push
pop
push
test
mov
arpl
xchg
fs
daa
lret
test
mov
pop
out
clc
std
xor
in
push
sbb
adc
jecxz
sbb
int
repz
cmc
and
mov
or
and
adc
add
dec
jbe
movsb
std
inc
push
into
mov
cmpsb
in
push
sub
aam
ljmp
hlt
xor
inc
push
lds
out
inc
ror
adc
scas
adc
push
jp
sti
mov
aam
out
or
pop
das
push
adc
inc
movsb
push
xchg
push
jmp
xor
or
movsb
add
into
cs
psadbw
add
leave
daa
xchg
out
stos
gs
cwtl
orl
lret
out
pusha
fdivl
and
clc
pusha
pushf
inc
je
or
push
cmp
data16
das
or
push
cmp
sub
out
movsl
pushf
pop
fstpl
out
fisubrl
ret
inc
punpcklwd
cmpsl
std
mov
mov
jg
fninit
pop
cmpsb
jns
push
sub
inc
aaa
loopne
aaa
or
push
arpl
je
lret
cmp
pop
adc
xor
pop
ret
rcrl
xorl
inc
aam
inc
push
mov
and
aam
outsl
fnstcw
lret
mov
sub
xchg
cmp
push
jmp
sahf
sbb
rorb
movsb
add
popa
enter
ljmp
inc
jp
mov
push
in
js
mov
pop
test
pop
or
adc
dec
jecxz
pop
arpl
dec
stc
mov
cli
inc
jnp
nop
cs
and
into
sub
fiadds
inc
ficoml
stos
int3
int3
mov
pop
xchg
push
clc
jae
adc
ja
mov
jge
js
int
and
wbinvd
fsubl
xor
inc
push
inc
jge
lods
in
aad
jns
add
sbb
fs
push
repnz
test
aas
stos
add
xor
hlt
enter
cld
sbb
lea
push
jp
xchg
es
outsb
in
into
cli
cmc
cmpsb
andb
or
out
movsl
adc
jne
ss
repz
mov
and
mov
and
mov
in
and
mov
push
dec
sbb
sub
lar
cmp
cmpb
sti
out
pop
loopne
cmp
sbb
ss
call
adc
insb
shrl
sbbl
movb
sarl
lret
ret
cmp
and
jmp
ret
das
xchg
xchg
mov
stc
lea
js
xorl
loop
mov
lret
les
cmp
jnp
in
insl
pushf
mov
out
in
cltd
mov
mov
mov
mov
sub
loope
das
jl
ret
mov
daa
xchg
push
mov
and
mov
dec
icebp
les
cmp
negl
mov
in
sub
jge
sub
cmp
scas
cmp
dec
shlb
out
inc
int
push
adc
or
out
push
mov
push
jecxz
jo
sti
movsl
popa
arpl
pop
or
lret
jp
or
xor
aaa
daa
fwait
cmovno
out
stos
lahf
repz
jmp
loop
inc
jnp
cmp
aaa
xchg
or
mov
neg
dec
or
xchg
mov
jmp
cwtl
mull
fsubs
in
xor
mov
xchg
or
push
xlat
jg
jmp
lret
push
test
mov
iret
mov
das
aad
enter
mov
add
ret
or
push
popa
pop
cmp
jecxz
cmp
fsubrl
daa
inc
ja
xor
jg
jp
mov
pop
movsl
fincstp
mov
fnsave
mov
test
pop
in
jge
xor
jg
ret
outsl
aaa
push
cmp
sbb
pop
cmp
adc
lret
jne
sub
std
outsb
or
iret
movsl
pusha
sbb
fsubrp
out
inc
pop
cmpsl
xchg
xor
loope
or
fistpl
cmp
out
pop
sbb
xchg
aas
cmp
xor
cmpb
inc
test
repz
rol
inc
jns
mov
cmp
pop
cmp
ss
das
js
sub
jns
pop
arpl
add
call
outsb
loope
fldcw
cmpsb
mov
mov
inc
or
pop
inc
dec
fwait
bound
add
jnp
or
cmpsb
inc
inc
gs
add
jecxz
or
and
ficomps
cmp
test
loop
call
xchg
frstpm(287
or
cld
sti
stos
in
mov
rcll
fnstenv
sub
lock
pextrw
push
add
mov
or
and
cs
dec
sub
in
lods
lods
cmpsb
mov
ret
pop
clc
push
push
jne
in
cmp
or
shll
sub
dec
or
daa
out
iret
not
push
pop
or
jl
and
jne
out
push
mov
inc
dec
pop
mov
xor
insl
stos
in
pop
or
mov
or
xchg
xor
mov
cmp
lcall
pop
roll
mov
jnp
pop
xlat
mov
inc
xor
sbb
cwtl
mov
dec
jmp
out
ljmp
or
sbb
repnz
shl
out
jb
inc
mov
in
pushf
inc
cwtl
mov
dec
addb
xchg
and
jecxz
push
mov
addr16
xorb
add
mov
test
daa
push
stc
sub
push
or
les
sbb
adc
xchg
dec
int3
outsl
cmp
loop
push
push
aam
push
jo
mov
jecxz
and
push
add
ljmp
aam
adc
call
mov
sbb
pop
test
aam
pop
mov
fwait
js,pn
out
mov
negb
repz
cwtl
jae
xor
dec
mov
ror
and
outsb
inc
insl
mov
js
pop
enter
and
adc
sbb
imul
inc
cmpsl
int3
bound
jp
hlt
sti
std
fwait
test
jb
cmpsb
es
adc
and
or
iret
adc
and
sarb
js
pop
int3
movsl
cld
movsl
subl
into
dec
int
jae
in
inc
mov
add
push
xchg
xchg
or
mov
cmp
add
inc
xchg
inc
rcr
pop
and
mov
cmc
jmp
sub
mov
es
push
subl
call
mov
ljmp
enter
mov
repz
mov
outsb
mov
and
mov
add
insl
adcb
sub
sub
pop
mov
lcall
pop
inc
jl
push
fcomp
add
inc
mov
test
jae
ror
in
pop
das
repnz
in
inc
and
jb
shrd
jo
insb
pop
addr16
dec
in
in
add
jbe
xor
movsb
stos
sbb
std
cmp
lret
pushl
sub
scas
mov
pop
jae
lods
adc
and
lock
test
outsl
xchg
mov
jl
cmp
into
dec
cltd
mov
hlt
fldl
arpl
stos
shll
add
lcall
out
stos
je
cwtl
fcoml
xor
push
adc
mov
mov
aas
mov
fldenv
std
pop
outsb
cmp
dec
into
loope
mov
xor
xchg
lea
ljmp
mov
mov
adc
jp
sub
cs
inc
mov
movsb
xchg
mov
push
push
aam
pop
dec
xor
pop
jecxz
mov
or
xchg
adc
bound
inc
enter
or
mov
inc
pop
mov
xor
and
jae
dec
loopne
in
fnstcw
je
popa
push
xchg
push
pushf
jg
and
imulb
sbbl
dec
scas
sub
scas
inc
dec
scas
loope
fisubrl
sarl
xor
and
sahf
xor
adc
sar
repz
cmp
jo
xor
int3
sbb
pop
lret
and
sbb
outsl
mov
pop
das
stos
imul
cmpsw
bound
ss
pop
push
pop
mov
sub
inc
out
push
add
out
cld
out
jo
pop
pop
pop
jbe
je
div
xchg
cltd
clc
stos
lcall
pop
cltd
inc
xchg
lea
js
cmc
mov
cld
data16
lcall
xor
out
push
in
sub
pop
es
subl
and
xor
sub
sahf
push
cwtl
jmp
or
push
or
inc
cmp
cli
xchg
mov
das
test
inc
fists
add
daa
bound
scas
fdivr
adc
sub
jp
pop
lods
xor
rol
mov
jg
cmp
rcr
jge
cltd
cs
jge
in
add
inc
or
mov
into
imulb
adc
add
fs
add
jbe
rolb
sar
dec
cltd
in
icebp
push
popf
test
pop
cld
stos
jnp
std
add
sahf
adc
jp
inc
sbbb
pop
mov
mov
fists
cli
adc
icebp
dec
js
cltd
das
xchg
stos
in
lret
or
sub
ljmp
push
inc
jnp
mov
fmuls
mov
je
divl
mov
mov
adc
push
outsb
sbb
pop
xchg
sub
loope
int3
or
ret
jl
jae
and
out
adcb
sarb
stos
ss
gs
sub
imul
ds
adc
imul
jle
mov
scas
in
add
mov
xor
scas
hlt
dec
inc
jmp
dec
and
mov
lret
sbb
or
jno
mull
nop
jnp
fadds
push
insb
ficoml
cmp
push
bound
aad
xchg
xchg
out
outsb
push
fildll
je
ss
push
mov
into
call
jbe
adc
xor
rdpmc
aas
xlat
adc
mov
mov
sbb
int3
pop
test
movsl
and
bound
rcll
test
shrw
xor
inc
arpl
lcall
fstl
xor
or
mov
xor
fcos
xchg
pop
decl
cli
pop
push
push
inc
loope
add
sbb
dec
arpl
cli
mov
push
add
dec
inc
xchg
lods
pop
cli
push
ds
xor
aad
xchg
adc
mov
and
pop
test
dec
jg
mov
enter
and
in
popa
sub
or
xchg
jae
lcall
push
pop
add
daa
xchg
cmp
sbb
mov
aad
ja
aaa
in
jmp
pop
jle
sbb
pushf
or
xor
or
jg
fs
adc
sbb
sahf
divl
cld
pusha
sbb
mov
jo
sahf
add
enter
cmp
pop
push
sub
dec
rol
push
jb
and
and
pop
popa
sbbb
inc
test
lds
xchg
adc
stos
and
xchg
insl
mov
aad
xor
cmp
add
mov
adc
pop
mov
rcrb
mov
lock
icebp
xor
loope
stos
cmpsb
or
popa
in
and
jno
leave
dec
sub
out
iret
dec
cmpsb
mov
add
push
add
mov
sar
test
icebp
xchg
jl
sub
adc
out
cmpsb
into
lock
roll
push
jne
in
popf
mov
jmp
or
insl
sbb
divl
push
out
mov
fistpl
fisubrl
lret
jle
jl
and
sbb
push
push
sbb
pop
xchg
rol
pushf
push
dec
out
dec
jns
cmpsb
mov
mov
movsb
mov
push
sbb
xor
cld
mov
es
repnz
jge
scas
dec
adc
lods
inc
jp
aad
sbb
xor
add
into
cmpsb
imulb
pop
xchg
repnz
jno
lods
testl
sbb
add
out
int3
push
adc
dec
lods
and
cmp
jecxz
adcb
loop
daa
popa
push
repnz
mov
push
jns
dec
nop
cltd
shrl
xchg
sbb
cmp
loope
lds
in
in
xor
sahf
jnp
xlat
jae
pushf
cltd
xor
xchg
movsb
iret
sub
fs
or
sub
or
gs
pop
add
mov
int
daa
in
into
lods
loop
lods
mov
subl
lahf
and
loop
aaa
mov
or
loopne
imul
cmp
rcll
xchg
mov
pop
inc
call
cmp
mov
jp
jne
in
jg
or
ljmp
push
stos
enter
fwait
xchg
clc
mov
or
out
data16
mov
push
test
into
jns
mov
test
lods
sbb
jecxz
fbstp
xchg
mov
jg
mov
nop
xchg
mov
pop
andl
jne
push
cmp
jg
roll
iret
incb
in
inc
push
sahf
pop
fsubrs
in
psubsw
pop
jg
adc
and
sbb
jmp
cmc
xlat
cli
mov
inc
push
push
movb
call
dec
pop
mov
popf
scas
jg
gs
push
mov
stc
lds
ljmp
pop
mov
gs
out
adc
pop
xchg
hlt
sub
testl
ss
into
ljmp
movsl
hlt
sub
loop
mov
pushf
mov
imul
adc
jl
jbe
rcll
imul
in
or
dec
addr16
js
cmc
push
jg
adc
xchg
lods
jno
or
jae
xchg
jmp
movsl
mov
push
es
scas
sub
mov
sub
mov
xchg
sub
jb
add
xchg
stc
loop
lock
rcll
dec
mov
out
cmp
dec
add
xor
fistpll
or
sbb
mov
mov
pop
jmp
fs
hlt
push
and
call
dec
xchg
out
add
inc
mov
insb
jmp
iret
xlat
push
sub
dec
jecxz
jbe
int3
xchg
data16
lea
pop
adc
lahf
fnstenv
add
movsl
or
or
aaa
stos
cld
mov
xor
cmpsb
pop
in
enter
xchg
sbb
sbb
mov
jecxz
movnti
fs
ds
ds
jecxz
shll
out
pop
sti
mov
ret
out
push
out
and
mov
mov
lret
leave
nop
mov
sub
icebp
jmp
dec
aaa
jecxz
test
sbb
jp
push
outsb
sbb
pop
push
ret
xchg
and
loope
dec
in
sti
bound
lret
mov
add
enter
mov
std
lcall
cli
jecxz
les
push
das
insb
adc
das
adc
mov
shrb
out
testl
and
jp
lods
insb
inc
add
pop
das
data16
sbb
cmp
mov
jnp
pop
rcr
jmp
push
pop
mov
shr
roll
test
mov
movsl
faddl
dec
jmp
shlb
test
nop
xchg
lock
mov
repnz
mov
ret
xor
mov
pop
int3
rclb
sub
mov
lea
fldt
inc
jae
stos
inc
xchg
sahf
mov
movsl
sbb
rcrl
pop
or
in
sbb
mov
sub
jb
scas
xor
scas
inc
sbb
aaa
lret
mov
mov
ror
jmp
lret
gs
aas
test
pop
sub
aaa
sbb
or
xchg
adc
xor
cmp
cmc
push
rclb
imul
sub
mov
push
nop
sbb
mov
test
mov
andb
and
sbb
lret
fcmovu
xchg
icebp
ss
jmp
xchg
sub
mov
lret
icebp
jo
data16
dec
movsb
jmp
scas
aad
lds
cltd
loope
ja
lock
shll
pop
in
lds
xor
cmp
stos
test
and
or
push
mov
sahf
rcr
loopne
mov
sub
adc
repnz
fiadds
sahf
lret
sub
adc
fwait
lret
call
imul
test
imul
shlb
sbb
scas
xchg
cmp
push
mov
mov
test
cwtl
cs
jnp
cmp
rcl
or
push
mov
adc
mov
or
out
mov
jecxz
cmp
mov
push
push
dec
mov
xchg
mov
add
cmp
fcmove
xor
outsb
adc
sti
mov
add
jmp
mov
pop
lcall
outsl
sbb
mov
movsb
fwait
pop
or
in
cmpsb
inc
jg
add
ljmp
dec
dec
fnstsw
enter
inc
aaa
pop
jnp
js
sub
cmpsb
add
leave
xor
and
or
push
adc
add
lcall
sub
insb
and
xchg
pop
mov
movsb
jno
cwtl
out
es
mov
mov
mov
cmp
pop
movups
adc
xor
xchg
stc
lea
jmp
dec
mov
out
and
in
pop
in
add
jp
xchg
adc
cmp
jle
cmpsb
adc
insb
and
aad
icebp
mov
fbstp
and
pop
jns
pop
cmp
jae
vcvtpd2psy
and
add
xlat
movsl
push
cs
adc
fisttpl
icebp
mov
jp
mov
xchg
sbbb
pushf
push
inc
add
lods
cmc
adc
lods
testb
jno
jmp
outsb
cmp
subl
xor
in
sti
cld
and
cld
xchg
fs
bound
adc
loope
sbb
es
out
enter
out
inc
fdivr
push
aad
sahf
sahf
fcmovne
lahf
repz
sbb
mov
addl
xor
test
jnp
mov
dec
mov
pop
cmp
pop
mov
pop
insb
mov
call
iret
inc
push
pushf
js
inc
aaa
cmpsl
xchg
push
aad
xor
cmp
push
sub
cli
jae
arpl
push
adc
add
mov
fstp
shrl
jns
mov
jne
xchg
inc
jne
nop
inc
mov
orb
adc
mov
push
test
scas
bound
sbb
test
jno,pt
xchg
in
aaa
cmpsb
jge
incl
jne
push
sbb
loope
fimuls
mov
sub
jns
or
xchg
stos
cmpl
rcll
dec
cmp
cs
cmp
movsb
xor
dec
sub
ljmp
cmpb
jge
xchg
int3
mov
shlb
jne
pop
add
iret
push
jnp
cwtl
push
in
dec
cld
add
cmpsl
sbb
jns
js
dec
push
in
lods
xorb
sbbl
sub
in
jle
mov
ja
ret
dec
rorl
dec
xchg
leave
adc
sub
xchg
xor
imul
inc
repz
movsb
stc
mov
lahf
outsl
repnz
lahf
fldenv
or
cs
xlat
jne
hlt
jecxz
insb
add
std
adc
mov
orl
fs
lds
jge
and
js
mov
jl
repz
lret
sbb
lods
push
dec
mov
cmpsb
idivl
cltd
into
aaa
shll
mov
push
pusha
sub
jmp
or
ds
adc
ds
mov
xor
aaa
xchg
enter
jp
in
mov
pop
push
lcall
lods
xor
inc
fistl
jno
push
ja
push
add
iret
hlt
and
and
jo
sbb
icebp
xchg
movsl
dec
div
gs
lods
sub
aaa
fstpl
sub
je
hlt
ret
jo
push
adc
mov
mov
inc
adc
gs
ss
jo
rcll
jno
ds
fcom
inc
lea
sbb
int
lret
inc
inc
out
cmp
daa
dec
nop
insb
cli
push
aas
add
push
add
les
mov
lahf
mov
push
mov
insl
movb
adc
pop
mov
cmc
cmp
out
neg
xor
pop
jle
out
dec
cwtl
imul
cmp
jmp
dec
cmpsb
out
jns
pop
mov
inc
inc
sub
add
lcall
enter
jo
insb
push
adc
and
test
jle
cli
lods
mov
popf
mov
add
or
dec
xchg
pop
lock
gs
jl
cmp
and
xor
lock
icebp
lock
shrl
sti
std
fldl
test
jmp
in
imull
scas
xor
enter
stos
push
popf
test
add
in
imul
add
and
add
xor
in
adc
dec
jmp
shll
mov
data16
xor
mov
in
popf
cmp
test
ljmp
or
aad
push
xor
test
pop
scas
xchg
mov
mov
jb
paddusb
mov
pop
out
in
cmp
jecxz
aaa
jb
jae
dec
lea
or
fisubrs
push
pushf
insl
ror
negb
xchg
jns
jbe
sub
outsb
imul
sub
aas
xchg
jmp
loopne
and
sbb
cmp
cmp
aad
lahf
loope
pop
sbb
adc
mov
mov
popf
test
mov
push
into
or
add
fxtract
pop
jo
pop
inc
int
shrl
cwtl
daa
ja
cli
in
jbe
mov
mov
jmp
mov
mov
ret
subb
out
inc
cmpsb
and
mov
or
inc
xor
or
rclb
pop
pop
js
lods
pop
ja
add
dec
jnp
jns
movsl
jmp
add
orb
bound
cwtl
pusha
xor
insb
jmp
inc
cmpsl
pop
aaa
out
nop
or
mov
xlat
andl
and
sub
pop
sub
out
shlb
in
lds
jbe
ret
pop
push
fldenv
pusha
cmp
aaa
cltd
or
add
add
insl
andw
cli
out
or
cmc
mov
mov
xor
movsb
sub
insl
add
xor
pop
xchg
fistpl
gs
xor
jp
lods
xchg
pop
pushf
lcall
mov
add
data16
adc
inc
insb
sub
mov
sub
aam
les
cmp
cli
xor
xor
ret
sub
sub
loope
xchg
sarb
lret
dec
inc
stos
mov
xchg
adc
in
pop
jmp
mov
in
and
mov
mov
test
fidivrs
call
adc
cmp
fsts
mov
mov
mov
cld
push
das
or
mov
push
mov
sub
pop
mov
mov
cmp
jns
dec
adc
fs
pop
nop
jmp
jbe
and
pop
sbb
pop
dec
fs
cmp
ss
movsl
inc
push
cs
lods
sarb
push
dec
lret
je
lcall
inc
rcrl
jecxz
iret
outsl
sti
inc
enter
das
pushf
mov
mov
cmp
aas
mov
das
cld
pop
into
or
xor
jno
mov
or
mov
pop
or
adc
or
push
add
movsb
cmp
movsl
xchg
xchg
cmpl
gs
sbb
mov
loop
and
ficomps
mov
cs
ja
addr16
sarl
xor
inc
aas
cmp
lret
push
sub
jo
dec
dec
fwait
repnz
xlat
lcall
daa
xor
mov
sbb
stc
enter
jae
or
or
pusha
cmp
fs
dec
sbb
dec
mov
pop
pop
add
pop
imul
lret
xchg
stos
fldl
mov
popf
mov
sbb
jns
jge
das
dec
dec
dec
test
mov
pop
fs
ficomps
jbe
push
clc
shll
jg
popf
dec
inc
lahf
xchg
out
inc
adc
xchg
and
int3
lods
cmc
int
das
adc
jb
fnstenv
mov
stc
and
scas
out
data16
cmp
jp
lds
sbb
inc
in
jbe
push
sbb
push
push
cmp
les
cltd
lds
jne
sbb
push
stos
sbb
xor
shll
or
dec
aaa
mov
xor
xor
mov
jmp
jno
test
or
jecxz
pop
xor
mov
scas
loop
xor
insb
call
in
cs
mov
jns
inc
mov
mov
dec
jg
gs
sub
sahf
push
bound
xchg
jmp
outsb
push
inc
adc
daa
and
sbb
xchg
add
xor
inc
cli
dec
dec
cmp
xchg
push
aas
fwait
pop
sahf
icebp
push
sbb
and
mov
add
dec
xchg
xchg
add
cmpsl
add
sub
fisubrs
filds
mov
insl
mov
repnz
pop
shrl
mov
adc
sub
jno
fldlg2
jae
cmp
mov
sbb
imul
sbb
insl
cmpsl
and
add
test
pop
mov
inc
and
sub
mov
gs
popa
mov
mov
into
pop
mov
adc
sbb
sbb
scas
inc
mov
je
adc
stos
xor
fwait
outsb
daa
inc
iret
inc
dec
mov
mov
iret
cltd
lods
out
jb
lcall
xchg
push
sbb
mov
mov
scas
dec
sahf
mov
mov
fdivrl
sbb
push
pop
mov
cmc
xor
int
sbb
lea
add
mov
fisubs
pop
xchg
push
in
push
mov
add
jns
mov
jae
das
repz
stos
dec
inc
jle
xor
sub
mov
add
fcomps
scas
std
inc
and
and
out
mov
mov
mov
cmp
push
aad
inc
push
or
dec
mov
outsl
clc
jle
mov
addl
xor
inc
fwait
jecxz
cld
inc
mov
cmp
loope
jecxz
scas
mov
out
scas
scas
or
xor
lock
testb
pop
mov
mov
dec
andl
imul
repnz
mov
cmpsl
pop
jns
and
xor
ret
sbb
bound
sbb
cltd
push
jecxz
daa
cli
or
or
pop
fimull
clc
into
inc
loope
push
xchg
in
mov
imul
mov
mov
mov
xor
out
insb
xchg
xor
insl
dec
rcll
xlat
out
mov
stos
ds
mov
scas
pop
loop
insl
js
jle
in
ficompl
divb
lret
cmovb
mov
lea
rcll
add
movsb
scas
push
push
push
fwait
adcl
scas
push
sub
inc
test
pop
push
push
je
push
mov
jp
outsl
push
mov
lods
in
lcall
cmp
dec
neg
sbb
dec
js
inc
and
xor
sbb
in
loopne
inc
pop
addr16
or
jo
xchg
sub
sti
imul
mov
jns
inc
sbbb
test
testl
jbe
addr16
adcl
mov
popf
sbb
xor
pop
xchg
in
jmp
aad
into
sbb
dec
das
inc
inc
cmp
test
adc
sbb
sbb
sub
fmull
mov
loope
jns
xor
into
sub
jl
movsl
xor
jge
dec
cmp
rol
jnp
inc
jge
repz
insl
loop
lds
leave
jmp
cmp
fldl
mov
hlt
or
int
push
adc
jmp
xchg
rcrl
bound
cmp
leave
mov
test
ja
push
xlat
jno
outsl
mov
lds
push
cmc
xchg
cmp
mov
cmp
sub
rorb
pop
mov
sti
aas
inc
daa
add
ss
std
mov
out
dec
sbb
adc
lea
xchg
sbb
mov
sbb
nop
mov
xchg
shlb
xchg
sub
pop
insb
mov
aaa
sub
push
iret
imul
adc
xchg
push
lea
jns
cmp
xor
fcoms
adc
jl
movb
push
fwait
dec
rclb
xor
out
les
push
aam
push
test
dec
je
xchg
push
xor
rol
out
adc
mov
insb
adc
mov
inc
jbe
mov
add
jne
xor
dec
movsb
mov
cmpsb
adc
int
mov
sahf
inc
lock
mov
test
push
shrl
pop
pop
cld
inc
and
js
sub
or
xchg
jnp
pop
addl
sbb
lahf
xor
dec
bnd
movsl
subl
pop
fildl
inc
imul
cs
mov
mov
loopne
and
jmp
add
pop
fnstsw
push
xchg
sbb
dec
mov
jl
xor
mov
dec
jne
pusha
and
nop
mov
mov
mov
xchg
ficoms
out
add
jae
mov
dec
dec
fs
shll
dec
lea
jb
add
dec
arpl
popf
mov
mov
lods
int3
xchg
mov
mov
push
push
je
addl
jle
jge
stos
pcmpeqb
xor
xor
cmp
repz
rolb
xchg
in
pop
pop
ss
push
outsl
testb
test
xor
sbb
dec
jae
mov
mov
arpl
in
pop
rorb
popa
in
xchg
mov
jns
mov
jb
or
add
in
sahf
mov
mov
xorl
mov
adc
aas
mov
add
jbe
xlat
in
outsb
sti
sub
pop
es
pop
fisubrs
popf
inc
jge
outsl
icebp
dec
arpl
cmp
into
mov
xchg
mov
sbb
stc
and
negb
mov
out
lret
in
loope
jne
arpl
push
imul
adc
faddl
sar
xchg
pop
push
mov
arpl
int3
enter
cli
andb
loop
jle
fwait
mov
mov
in
daa
imul
push
jae
and
jl
cwtl
mov
xor
push
fcompl
push
push
jle
test
fs
xchg
sub
ss
sub
cltd
popf
push
das
shll
sub
rcrb
mov
nop
in
adc
sarb
jb
rolb
cmp
outsb
xchg
pop
inc
aad
rolb
cmp
cmpsb
aad
negb
sbb
dec
addr16
sub
call
in
and
jae
mov
cmp
mov
test
jmp
add
dec
mov
dec
js
jge
loopne
enter
loopne
into
callw
cmp
mov
add
pop
mov
arpl
push
rcl
push
cmp
test
dec
loope
test
mov
in
push
jb
js
push
push
test
xchg
push
xchg
sub
push
cmp
pop
dec
fisubs
push
and
xchg
cmp
mul
xchg
mov
es
ljmp
pop
dec
mul
dec
xor
int3
les
add
insl
pusha
xchg
cwtl
lea
xor
dec
xlat
xor
jo
jmp
out
sbbl
or
mov
popa
arpl
les
mov
mov
lcall
clc
lahf
movsb
out
mov
dec
mov
stc
pop
mov
lea
sub
mov
mov
test
inc
mov
or
push
popa
std
pop
scas
xchg
dec
add
data16
mov
and
rorb
popa
jmp
lret
lcall
cltd
cli
shlb
mov
jg,pn
push
pop
or
push
push
mov
cld
pusha
daa
cmp
lret
test
lret
mov
idivb
pushf
repnz
idivb
dec
lret
mov
ljmp
adc
cmp
mov
movsb
scas
sarb
jae
es
mov
negb
fiaddl
push
xor
sub
movsl
ljmp
cli
in
inc
pop
add
leave
std
adc
pop
or
ficomps
mov
outsl
out
pop
into
mov
pop
push
jns
push
pop
xchg
shlb
xor
push
call
xor
pop
ret
sbb
and
test
jge
sub
mov
add
and
lret
pop
ds
sbb
pop
jo
lcall
sbb
mov
adc
nop
pop
aam
es
out
dec
fstl
jmp
daa
outsl
insl
sub
push
ret
jb
and
jecxz
enter
dec
and
imul
divl
addl
andl
gs
and
lret
aas
in
sbb
addr16
sbb
xorb
jns
inc
fstps
xchg
shl
aad
insl
mov
dec
in
adc
sbb
cld
sub
xchg
fmull
jae
popa
adc
and
fmul
test
sti
xor
subb
adc
adc
repz
lods
xor
lods
stc
aaa
xchg
mov
das
aas
sub
push
ss
mov
ds
mov
lods
jg
sbb
xchg
clc
sbb
fdivrs
repnz
ret
inc
sbb
cmp
call
cmpsl
fisttpll
xchg
mov
out
pop
dec
cmc
fwait
add
out
lahf
bound
pusha
fnstcw
test
mov
int
scas
mov
pushl
scas
sub
mov
jne
int
popf
xor
mov
pop
mov
xchg
fnsave
in
push
sbbb
push
aas
dec
cli
mov
cmp
test
cmc
dec
mov
cmp
outsb
dec
out
std
cmc
jno
or
jle
lods
ljmp
inc
adc
inc
mov
and
mov
mov
dec
mov
mov
pop
stos
fistpl
ss
xor
mov
scas
mov
and
jno
sbb
jmp
fadds
jno
popf
lret
dec
cwtl
icebp
xor
mov
push
mov
pop
or
lahf
mov
jg
iret
mov
or
insl
rorl
pop
cmp
insb
mov
push
mov
mov
add
or
mov
pop
dec
lock
dec
mov
xchg
xor
mov
ror
mov
int3
mov
adc
test
mov
aad
je
repz
mov
xor
jb
repnz
nop
jnp
add
push
fdivrs
push
jecxz
pop
dec
orl
pop
clc
lods
mov
aad
jne
ljmp
pop
loopne
and
or
mov
in
cwtl
dec
jmp
loope
out
inc
cwtl
fwait
mov
stos
bound
movsl
test
xor
sub
and
rolb
cmpb
lcall
fldenv
repz
stc
das
jne
push
inc
fbld
jmp
mov
and
push
mov
hlt
mov
push
or
inc
mov
lret
adc
leave
dec
outsb
lcall
jo
jge
mov
inc
jo
add
subl
mov
pusha
dec
jno
orb
ret
out
mov
xor
enter
jo
test
dec
ret
into
aad
imul
push
pop
andl
mov
loope
jle
dec
pop
xor
into
xchg
insb
arpl
mov
sub
adc
bound
aaa
out
xor
add
jae
mov
push
pop
and
jl
lods
sbb
outsb
ret
inc
and
xchg
jecxz
and
or
add
sub
xchg
mov
cmp
pop
shll
icebp
xor
sti
adc
aad
inc
mov
mov
push
dec
adc
push
mov
leave
lock
imul
nop
outsb
inc
xchg
mov
push
je
cmpsb
sub
inc
mov
lods
add
imul
cwtl
call
adc
sub
push
arpl
popa
mov
push
jae
mov
add
insb
mov
xor
popa
pop
mov
dec
pop
xlat
aam
mov
mov
movsl
aas
rclb
cmp
mov
mov
xor
ret
jmp
clc
clc
push
or
inc
shrb
mov
cmp
xor
cmp
adc
push
add
outsw
and
jmp
sub
ret
popa
push
dec
sarb
insb
fstpt
add
addb
div
bound
ljmp
xchg
jg
mov
cmp
fisubl
sarb
fcomip
mov
pop
nop
jp
dec
push
ret
movsb
test
cmp
jl
push
jecxz
pushf
mov
lcall
fisubs
cs
nop
int3
fbstp
adc
mov
movsb
std
jl
cmc
icebp
xchg
mov
popa
xor
sarb
out
lret
aam
lea
popl
mov
ss
add
and
xchg
aad
mov
addr16
cmp
insb
cmp
mov
xchg
pusha
sahf
popa
lcall
cmp
aas
std
clc
push
cmp
add
int3
lret
xchg
inc
or
js
inc
push
sahf
jecxz
sub
fistpl
imul
or
call
jecxz
xor
lods
scas
daa
push
sbb
insl
mov
xlat
aam
js
inc
mov
lret
push
es
clc
mov
xor
dec
jp
arpl
mull
xor
cmp
jbe
xchg
loope
out
jnp
push
dec
lea
test
data16
sbb
hlt
out
and
les
pop
insl
and
lahf
mov
xor
mov
cmc
rcrl
inc
xchg
push
push
cmpsb
xor
push
out
xchg
mov
das
pop
decb
loop
xchg
test
mov
sti
pop
lcall
aas
mov
pushf
inc
sbb
ficomps
ficoms
xchg
and
or
jae
adc
inc
adc
xor
add
orl
mov
cwtl
dec
xlat
jne
test
stos
call
or
jnp
cmpsb
lahf
mov
jnp
jl
mov
add
xchg
in
daa
mov
push
subl
std
pop
enter
mov
xchg
fadd
imul
pop
mov
pop
clc
repz
jmp
mov
pushf
or
adc
cmp
sbb
divl
inc
cmp
xchg
int3
adc
int3
in
pop
xor
imul
sahf
mov
roll
aaa
mov
push
sub
cmp
adc
shlb
push
cmp
ljmp
stos
push
pcmpgtb
mov
add
inc
std
mov
scas
stc
xor
shlb
ss
jmp
out
outsl
sti
mov
adc
loop
lds
adc
shll
aaa
push
fidivs
stc
arpl
pop
fdivs
clc
jmp
pop
iret
mov
push
ret
mov
sub
and
pop
decb
push
xchg
mov
ljmp
int3
inc
int3
mov
inc
cli
iret
push
scas
sub
test
cmp
pop
stos
lret
imul
hlt
test
xchg
push
mov
ljmp
lods
fs
mov
sbb
rorb
addl
shrb
xor
mov
sbb
mov
jne
add
jl
repz
xchg
aaa
ret
add
xchg
or
mov
stos
xor
push
adc
add
int3
faddp
xorl
insb
mov
daa
in
push
mov
xor
call
jnp
in
into
and
mov
xchg
add
movb
and
insl
sarl
push
in
enter
call
push
mov
in
pop
orl
rcll
repz
ret
add
repz
lds
divl
jge
ljmp
mov
or
mov
jmp
jne
add
loope
inc
or
data16
and
adc
push
xchg
sub
inc
mov
movsb
pusha
sub
daa
mov
push
stos
add
jl
mov
imul
dec
dec
jnp
repz
into
pop
cmp
lock
and
shr
dec
das
fistps
mov
lods
pop
lret
lods
xchg
ds
leave
hlt
xor
rcl
push
mov
jb
xor
add
push
mov
loopne
sub
sti
adc
or
sub
inc
adc
iret
push
dec
push
lcall
push
dec
popf
mov
ja
push
xor
push
cmp
sbb
pop
pop
pushl
cltd
clc
push
jno
dec
adc
mov
pop
mov
sbb
jns
cmp
dec
ljmp
scas
outsb
sub
loop
fdivrs
dec
jo
mov
loop
or
sub
adc
sub
mov
call
push
imul
cmp
mov
hlt
je
xor
movsl
adc
movsl
fldt
popf
gs
seta
popf
test
repnz
mov
sub
push
jns
fistl
mov
js
add
pushf
movsl
stos
ficomps
pop
in
pusha
and
and
nop
jno
jg
fwait
sbb
mov
jno
mov
dec
xchg
mov
addb
cmpsb
mov
popa
unpcklps
leave
mov
inc
xor
insb
jae
jp
jne
outsb
adc
insb
out
dec
cmp
movsb
mov
es
dec
sub
mov
or
mov
iret
or
out
mov
dec
adc
jle
xchg
and
scas
pushf
xor
mov
pop
imull
push
dec
push
lret
or
push
stc
sub
dec
and
ror
xchg
in
int3
out
popf
mov
iret
push
testb
mov
xchg
sub
or
ret
insb
lret
ret
mov
xchg
adc
mov
stos
js
insb
pop
inc
pop
notb
xor
sbb
or
out
out
mov
dec
orb
mov
std
push
mov
jg
xlat
adc
andb
xchg
fidivrl
fcmovnu
inc
adc
out
cmpsl
es
push
add
cmp
push
mov
xchg
cs
or
pop
xchg
rorl
xchg
jle
cmp
test
dec
mov
in
sbb
insl
pop
sbbl
cmc
testl
cmpsb
push
lods
fcmovb
orl
scas
call
gs
xchg
sub
or
adc
mov
out
mov
sbb
dec
pop
pop
cmpsl
iret
mov
dec
lahf
jbe
dec
mov
push
jp
add
pushf
sub
sbb
or
inc
mov
xchg
mov
mov
fcomip
fldcw
nopl
or
xchg
stos
add
jae
cmp
das
xchg
in
std
pop
add
test
mov
lds
ret
in
push
pop
fst
fld
mov
icebp
in
dec
int3
mov
jne
and
sub
jne
jb
cmp
cltd
cltd
jnp
sahf
mov
xchg
or
push
mov
scas
jo
mov
leave
cltd
dec
mov
push
mov
les
mov
mov
xor
divb
cwtl
pop
jecxz
mov
outsl
cmp
mov
mov
lock
push
mov
or
cwtl
sub
push
pop
test
jnp
add
pop
fldcw
mov
addr16
lods
rcr
cmpsl
xlat
push
pop
jo
jge
and
sbb
sbb
push
insb
dec
dec
pushf
inc
hlt
mov
mov
push
inc
inc
xchg
bnd
mov
shll
and
or
jmp
es
sbb
ss
push
and
and
mov
pop
xor
xor
mov
jmp
adc
xor
mov
sub
mov
push
cltd
int
hlt
add
fwait
jmp
adc
ja
xchg
sub
jecxz
jnp
ja
jmp
mov
jnp
adc
insl
cmp
add
rcrl
out
in
fstps
lds
mov
fsubr
arpl
sbb
sbb
ljmp
mov
dec
gs
pop
sub
popa
push
xchg
arpl
cmp
es
sti
push
icebp
bound
jmp
stos
xchg
call
mov
pop
mov
pop
jp
and
cmp
fwait
add
cmp
insb
adc
ret
fidivl
stos
push
and
jg
adc
gs
or
insl
push
cmp
dec
jo
or
leave
stc
push
mov
mov
sbb
gs
jmp
push
clc
out
sub
shl
jge
in
gs
cmc
lods
mov
mov
push
pop
pushf
cs
sbb
clc
call
mov
mov
jnp
xchg
xor
sbb
mov
in
cli
inc
in
in
insb
ja
pop
int3
sub
nop
rclb
cmpsb
push
cmpsb
sub
xchg
out
pop
mov
and
xchg
mov
push
and
jo
sbb
scas
movsl
cmp
mov
leave
jle
pop
cmp
mov
hlt
sub
xor
in
mov
push
push
inc
mov
fmull
pop
outsb
repnz
mov
add
dec
pop
and
adc
cmp
fsubrs
pop
inc
adc
pop
xor
or
xlat
movsb
jmp
outsb
cmp
lock
dec
test
mov
cmpsb
pop
mov
jmp
pusha
inc
jae
scas
adc
sbb
ret
ret
xchg
cmp
inc
ljmp
and
pop
sub
sbb
sbb
scas
and
mov
mov
daa
scas
loope
cmp
xlat
pop
push
int
sbb
cmc
mov
lahf
lods
cmc
dec
jp
das
nop
sahf
shrb
pop
out
in
xchg
out
cmp
jo
cmpsl
inc
mov
cmp
pushf
jno
pusha
rolb
leave
icebp
in
in
test
or
popf
rdmsr
push
notb
xor
mov
icebp
push
add
fsubp
add
mov
push
ret
mov
sub
jae
jl
and
sbb
and
cmpsl
mov
xlat
fwait
sub
and
dec
cmc
cmp
jecxz
insb
jo
mov
push
cmpsl
pop
flds
int
push
stos
in
mov
cmpsb
jno
daa
mov
add
stc
aaa
das
jp
pop
scas
ficomps
test
mov
and
ljmp
xchg
loope
out
xlat
pop
iret
sbb
aas
ja
xchg
rep
jle
jmp
iret
jle
jle
lcall
ret
cmp
decb
out
pop
push
xchg
cmp
jno
pusha
cmc
pop
jp
push
cld
loopne
clc
icebp
xorl
stc
test
push
outsb
gs
or
pop
lock
cltd
pop
clc
cmpsb
das
or
pop
cli
ja
rep
in
mov
jno
pop
dec
scas
inc
addr16
in
idiv
bound
lock
aas
out
and
loop
pop
sub
fldt
and
xor
push
mov
mov
and
fsubl
testl
test
lret
mull
and
dec
mov
jle
dec
pop
mov
pushf
repnz
loopne
lcall
bound
inc
ja
pop
outsb
ss
sbb
and
jecxz
add
mov
pop
fldlg2
out
jmp
out
sbb
in
ret
pop
mov
inc
inc
into
das
dec
mov
add
cltd
cmp
push
cmp
adc
jns
in
adc
mov
out
push
in
fidivrl
and
jp
sub
sub
in
in
nop
cmp
mov
xor
out
adc
test
fxam
add
ja
xchg
mov
hlt
nop
push
daa
dec
xchg
sub
xchg
ret
js
push
jmp
aaa
ficoml
lret
adc
jl
arpl
mov
sub
lds
add
insl
insb
js
pop
mov
push
push
lds
xor
and
mov
inc
fiaddl
repz
shl
xor
lea
fidivs
subb
and
xlat
pop
inc
push
sbb
add
sub
adc
sub
test
daa
add
cmc
xchg
mov
test
cwtl
sub
mov
jnp
inc
or
mov
and
inc
lcall
mov
or
shll
daa
push
xor
call
adc
arpl
enter
imul
notl
dec
pop
cmpsb
outsb
in
and
xchg
scas
xchg
and
and
leave
hlt
scas
sti
mov
pop
movsb
lahf
ret
or
enter
dec
out
dec
std
enter
aas
addr16
mov
sbb
iret
mov
and
mov
outsb
mov
mov
inc
ja
loopne
jae
hlt
add
xlat
btc
or
shll
push
gs
mov
inc
jns
xor
fmull
add
and
ss
jl
or
cwtl
shr
daa
cmp
jb
mov
push
xlat
xchg
jp
ljmp
mov
ret
adc
or
mov
das
jmp
clc
enter
clc
pushl
lahf
cwtl
mov
test
pop
test
and
jle
lcall
sub
bound
enter
sub
cmc
pop
shr
inc
pop
mov
sub
int
sarl
and
shl
notl
js
jge
ret
lods
cli
test
mov
inc
pop
inc
mov
jns
inc
repz
test
inc
cmc
cmp
jnp
ja
das
loope
ret
scas
scas
in
ja
adc
cli
sub
std
xchg
pop
iret
out
sar
cmp
fstpt
inc
mov
add
bound
mov
popf
or
movsl
sbb
add
or
and
mov
xchg
pop
dec
mov
jecxz
pop
lods
shlb
cmpsl
fcoml
aam
in
aad
sbb
stos
dec
cmp
lock
xor
inc
lea
mov
xchg
xchg
sub
mov
inc
sub
aas
pop
aam
shlb
push
imul
add
in
or
inc
inc
shll
imul
mov
into
sub
je
cwtl
lcall
and
lret
xlat
jmp
sti
sbb
pop
sarb
pop
js
mov
addr16
and
sti
idivl
imul
movsb
das
cwtl
jbe
xchg
pop
lret
push
nop
push
repnz
inc
insb
stc
fisttps
pop
stc
inc
xchg
and
pop
les
fdivrs
jecxz
pop
lock
stos
sti
fildll
into
jg
leave
jno
and
das
mov
cmpsb
mov
jl
mov
bound
roll
push
fmul
mov
add
aas
scas
clc
inc
std
sbb
push
fs
and
xchg
mov
roll
mov
lods
mov
iret
fstpt
rorl
addr16
adc
fcmovnb
xchg
sbb
sbb
sti
jge
clc
sub
fwait
jge
inc
mov
xor
pushf
xor
jo
or
mov
dec
cmpsb
gs
inc
sbb
and
mov
cltd
sahf
cmpsb
or
movsb
std
and
add
sub
and
push
test
add
xor
out
cmp
jno
cmc
test
lods
pop
leave
insl
loop
mov
pop
ja
sbb
call
bound
in
dec
aaa
pop
xor
push
rorb
pop
fistpl
jno
and
push
shl
rcrl
in
inc
and
push
push
arpl
mulb
adc
and
pop
push
ljmp
lods
xor
xor
aaa
cld
aas
outsl
mov
mov
mov
mov
sub
sub
out
add
outsl
mov
and
pushf
test
pop
clc
call
or
rolb
test
fcmovnb
scas
xor
insb
jmp
mov
imul
rol
jae
cmp
je
out
cwtl
rorb
push
cwtl
push
in
ret
adc
ss
cmpsl
lods
les
leave
xchg
and
dec
sbb
fldenv
fcomps
pop
and
jno
cmp
inc
mov
fwait
jle
mov
repz
cmpsb
inc
inc
in
dec
adc
cmp
xor
or
scas
mov
pushf
jnp
dec
xchg
mov
lret
ret
push
add
dec
xchg
add
jp
cs
aas
in
out
or
pop
or
stos
add
repnz
nop
aas
ja
lods
frstor
dec
dec
daa
into
xchg
aad
and
loopne
sub
push
or
and
dec
test
cmpsl
loopne
lods
fldenv
xchg
xor
pop
mov
and
addl
push
shll
pop
hlt
sub
cmp
mov
cmp
cmp
push
aam
fldcw
mov
push
fbld
lock
xor
dec
pop
pop
cmp
xor
mov
mov
movsl
aad
cmp
xor
or
enter
setge
mov
icebp
lods
rcl
xchg
jne
sahf
dec
repz
cmp
ret
pop
decb
pop
ds
jmp
xchg
inc
aas
cmpl
pop
movsl
mov
mov
scas
pop
int
jle
int
mov
leave
iret
cli
lcall
adc
hlt
fwait
icebp
clc
pop
cld
inc
jb
xlat
je
jo
rcrl
add
rcl
in
pop
aam
mov
adc
dec
cmp
add
mov
or
mov
ljmp
pop
cltd
in
imul
push
icebp
dec
pop
mov
push
hlt
stos
out
pop
nop
mov
fbld
in
ljmp
in
inc
addb
xlat
cmp
add
sbb
vpsubusw
xchg
pavgw
add
mov
pop
and
or
popa
jle
cmc
lods
mov
imul
out
sbb
loope
and
int3
lahf
pop
mov
idivb
in
nop
sbb
mov
pusha
push
fmull
mov
xchg
pop
hlt
pushaw
inc
daa
cmp
mov
cmovae
sbb
push
xlat
aas
call
mov
mov
inc
divb
dec
in
loopne
aad
jg,pt
xor
test
in
xchg
mov
shll
xor
jb
xorb
das
and
dec
xchg
inc
test
push
negb
mov
xor
sbb
rcrl
lret
rcr
push
push
push
xchg
inc
fisubl
jb
add
sub
subb
aaa
jle
test
jmp
ja
popa
loopne
je
and
jae
inc
mov
mov
fildl
cmp
lock
sbb
mov
pop
pop
into
add
fimull
loopne
adc
mov
lahf
out
sahf
and
data16
sbb
ljmp
cli
mov
lahf
inc
push
lods
pop
xlat
xchg
adc
insl
add
push
and
pop
cmp
push
jno
test
push
inc
out
or
push
jle
mov
in
aad
inc
addr16
dec
mov
xor
add
pop
jb
push
push
addr16
repz
sbb
or
push
iret
mov
mov
fiadds
lcall
pop
add
cltd
pop
sbb
pop
jl
pop
and
enter
or
imul
sbb
cltd
inc
je
adc
mov
and
repnz
sbb
pop
ljmp
into
repz
test
fistpl
or
aad
xor
or
mov
inc
jno
fmull
push
movsl
sub
lock
cli
icebp
mov
js
mov
dec
pusha
mov
xchg
push
shll
push
pop
sbb
inc
popl
das
xor
pop
sti
mov
into
inc
fiadds
cmpsb
dec
add
sbb
push
or
xor
enter
pushf
aam
push
out
ret
add
sbb
rcll
xchg
mov
imul
aad
cmp
fdivl
push
fwait
test
fcompl
test
fyl2x
aaa
stc
fwait
sub
pop
daa
push
mov
mov
xor
or
dec
mull
nop
pop
mov
lret
xchg
int3
push
and
xchg
xchg
sub
imul
cmpsb
lds
lods
into
cli
cmp
dec
dec
nop
mov
pop
ljmp
movsb
adc
xor
pop
push
bound
jb
cmp
fisubl
jge
pushf
pop
clc
loope
push
sub
adc
inc
ja
aaa
mov
faddp
cmp
or
push
mov
inc
pushf
cmp
jno
pop
sbb
in
lds
pop
cmp
mov
ds
shlb
lds
ret
ret
out
sbb
pusha
sti
sti
add
lea
add
aaa
or
jl
iret
mov
dec
mov
stos
arpl
fmulp
mov
cmp
outsb
sbb
fcmovne
testl
sbb
stc
outsb
inc
and
icebp
and
dec
mov
jno
in
insl
jo
inc
clc
xor
addr16
popf
adcb
pop
daa
in
xor
and
jno
cmp
jns
pop
and
push
cmc
into
pop
in
xchg
shll
lahf
in
dec
push
addr16
mov
popf
xchg
jno
mov
cmp
mov
adc
lcall
mov
mov
xchg
xor
mov
shlb
leave
xchg
push
mov
bound
cmp
clc
sarb
mov
int3
mov
sbb
cwtl
and
incl
mov
movsl
repz
mov
insl
clc
ja
sub
or
ficoms
les
aad
push
andl
lgs
ljmp
jp
ret
jo
xlat
mov
cmc
or
les
xlat
mov
gs
mov
push
call
int3
mov
jmp
or
adc
lret
loope
lods
iret
lret
sbb
mulb
pushf
popa
enter
xchg
test
cmp
data16
push
pop
xchg
xchg
sbb
add
orl
sub
aad
pop
xlat
sub
push
xchg
insl
sbb
rcll
arpl
push
pop
mov
cli
test
andl
clc
lret
pop
pop
orl
fimuls
out
imul
xlat
fisubs
xor
int3
sti
push
adc
icebp
mov
imul
cltd
mov
pop
xor
mov
push
jmp
outsl
push
bound
fiadds
js
push
pop
jge
mov
add
sbb
mov
rolb
fcompl
shrb
add
rorb
cmp
dec
mov
nop
fwait
xor
rcll
push
outsb
jmp
in
sub
xor
lcall
cli
popf
jmp
adc
mov
inc
mov
fbld
mov
adc
stos
rcr
sahf
stos
mov
inc
inc
rolb
add
cmc
rclb
rcl
xchg
ret
lret
or
jne
mov
shr
xchg
dec
stc
fxch
push
adc
xchg
mov
mov
in
imul
movsl
sub
mov
cltd
icebp
sar
into
and
lock
iret
das
push
cmpsl
xor
out
ret
and
or
movsl
sub
popa
dec
sbb
jns
push
lret
out
rclb
pop
stos
inc
cmpsb
xor
and
cmp
movsb
test
jp
rep
jecxz
test
mov
addl
daa
mov
rcll
mov
loop
dec
roll
leave
arpl
mov
movsl
dec
and
movsb
int3
mov
out
sbb
mov
out
call
hlt
inc
pop
pop
pop
sbbl
jp
inc
sub
insl
xorb
jmp
scas
jns
ja
enter
out
lahf
stos
bnd
cs
inc
jp
subl
xchg
mov
inc
xor
inc
push
imul
jnp
into
xchg
and
stc
stos
sbb
idivl
push
std
js
jnp
push
iret
jle
sub
leave
aaa
mov
or
out
scas
dec
push
movl
imul
sbb
dec
ror
push
ret
sbb
jbe
dec
mov
xlat
mov
xchg
leave
xchg
or
pextrw
adcb
aam
out
sbb
xchg
xchg
repnz
mov
lcall
hlt
sbb
rorb
dec
cmp
xor
rcll
mov
repnz
sub
mov
dec
sbb
xor
pop
ja
shll
sub
cmpsb
loop
pop
jo
inc
loope
fidivrl
inc
dec
jne
out
mov
and
lds
push
mov
das
rcll
iret
jnp
mov
movsl
push
cltd
sbb
lods
in
and
pop
sarb
mov
cwtl
fidivrl
or
sahf
aam
arpl
imul
sbb
fistpll
xor
cmp
rolb
scas
dec
jl
xor
lahf
in
lods
orl
dec
sub
stos
cmp
jg
sub
cmpsl
push
insb
sbb
dec
adc
xchg
push
iret
add
mov
aam
cmc
add
das
mov
iret
cli
sub
leave
add
push
jmp
mov
data16
cmpsb
sahf
and
cmpsb
call
xor
hlt
mov
cmp
in
mov
lcall
xor
jne
leave
fucomip
mov
pop
cmp
pop
sub
add
xor
push
push
mov
sub
imul
xor
cmp
sub
ds
pop
mov
aas
outsb
sti
outsb
jae
cmp
lods
add
xrelease
and
inc
xor
in
xor
clc
inc
xor
add
ret
cld
je
icebp
shr
adc
or
adc
movsb
xchg
aas
aas
adc
mov
outsb
mov
adc
dec
fsubl
mov
fcmovu
iret
add
mov
std
lret
inc
sti
pop
sub
pop
jmp
or
imulb
xor
push
mov
mov
imul
adc
mov
xchg
dec
add
addb
adc
sub
pushw
pusha
sub
shlb
xor
jg
out
add
pushf
sbb
add
pop
jecxz
mov
mov
lret
xor
inc
jno
mov
test
push
jae
sbb
imul
mov
add
push
imul
jns
mov
mov
incl
dec
or
popf
les
dec
mov
cmc
sarb
ljmp
push
ficomps
lods
out
pusha
jge
lods
fldl
mov
int
pusha
dec
in
icebp
mov
xor
mov
sbb
add
push
cmp
jmp
mov
cld
xor
aam
aas
mov
push
mov
stc
ljmp
and
sbb
sbb
gs
lret
in
add
inc
mov
mov
adc
idivl
push
cmpsl
aad
loopne
and
mov
aaa
or
or
jo
ret
adc
roll
aad
sub
push
icebp
dec
insl
movsb
and
or
rclb
pop
out
bound
nop
stc
push
test
adc
stos
adc
dec
xchg
inc
outsl
es
or
adc
push
fisttpll
add
add
or
pop
test
push
int3
addl
cmpsb
jl
dec
lods
ror
inc
hlt
xlat
cmovnp
jle
xchg
mov
jmp
loope
pop
xchg
mov
push
pusha
mov
jge
fildll
lock
cmp
xor
aas
and
iret
mov
jge
pop
dec
repnz
mov
push
pop
rorb
out
push
sub
nop
push
dec
lahf
imul
lods
push
mov
es
fwait
dec
or
adc
dec
mov
shrl
jg
push
jb
jne
mov
inc
mov
mov
xchg
mov
fdivrl
popf
mov
pushf
pop
xor
insb
inc
pop
neg
inc
jmp
pop
stos
enter
sub
inc
cmp
idivl
cmp
orl
adc
addl
jl
xor
inc
mov
or
mov
ds
push
cmp
dec
stos
or
pop
movsl
out
loope
jl
lock
push
push
aaa
and
fldenv
cmpsb
les
hlt
mov
inc
xchg
and
adc
cltd
repnz
daa
loope
and
sub
rclb
or
cmpsb
push
gs
int3
cmc
out
pop
inc
lea
push
ret
and
popa
or
pop
outsb
imul
negl
nop
push
cmp
xlat
inc
outsl
pop
dec
insb
and
cmpxchg
or
sbb
idivl
je
popa
adc
xchg
into
lods
sub
mov
inc
dec
pop
mov
dec
xchg
cmp
addl
mov
in
sahf
clc
mov
int3
cmp
shl
cmpl
xor
push
inc
and
ret
mov
sbb
sub
sbb
jnp
sti
jle
das
adc
lret
and
jo
jp
test
out
ds
xor
outsl
add
inc
or
or
and
mov
dec
mov
pop
mov
daa
pop
movsl
mov
inc
jno
lods
inc
push
dec
nop
push
push
pop
sahf
add
nop
dec
push
xchg
push
mov
pop
jecxz
lret
and
xchg
fwait
repz
jns
mov
fsub
das
sbb
cmp
cmc
es
and
fcoml
imul
pop
push
mov
insl
and
cltd
ljmp
cli
insb
xchg
push
cmp
add
subl
jbe
sarl
add
jnp
lods
insb
ja
cmc
adc
fldt
movsl
out
stos
and
add
mov
nop
repz
cmp
out
cmpsb
inc
leave
imul
or
sub
and
inc
das
xor
add
push
sahf
bound
jp
or
dec
push
push
popa
aam
pop
lcall
jle
sahf
dec
out
lea
and
rcrb
test
leave
push
and
xchg
call
leave
xlat
std
lret
xor
cld
xchg
sbb
mov
scas
pop
mov
stc
out
pop
adc
mov
sahf
icebp
mov
lcall
xchg
sahf
jmp
add
insb
imul
lahf
fsubl
negb
cltd
imul
mov
jno
dec
pop
test
xor
pop
sub
jmp
insb
cmpsl
scas
pop
in
push
pop
fidivl
arpl
fsubs
mov
push
lds
lods
jbe
add
xor
in
lcall
ds
mov
test
push
jae
clc
xchg
mov
std
mov
pusha
jge
push
outsl
inc
test
les
std
scas
inc
jns
scas
jnp
les
nop
or
dec
mov
test
cwtl
mov
cltd
std
jne
pop
mov
lea
je
mov
fisubs
and
and
aam
mov
pop
jecxz
jns
fiadds
add
loop
inc
clc
sub
mov
push
rorl
je
sbb
ret
dec
es
cltd
fwait
xlat
push
xor
adc
jecxz
cmp
stc
xchg
repz
and
outsl
sbbl
test
testb
xchg
jo
mov
scas
idivl
sub
outsl
and
and
sbbl
push
je
fsts
shl
es
sub
and
test
pop
or
jne
js
inc
xchg
jmp
or
cs
pop
cmp
insb
dec
jl
pop
jp
push
lret
aam
icebp
pop
pop
adcl
push
dec
aam
testl
fldenv
pop
movsb
lret
dec
inc
ret
add
inc
addb
or
std
push
sahf
add
mov
inc
xchg
rcrl
push
shl
cmpsl
out
sbb
adc
mov
andl
pop
dec
loopne
pop
data16
cmp
pop
cmp
xchg
loop
jp
or
loopne
aam
negb
lahf
xchg
dec
mov
outsb
cwtl
lcall
and
insb
ret
inc
cmp
dec
repz
xchg
mov
scas
test
inc
or
and
cmp
mov
xchg
int3
mov
pop
pop
pop
ds
or
jecxz
dec
loopne
out
mov
mov
jle
xchg
sub
iret
out
add
mov
rorl
iret
mov
imul
add
ds
fisttps
stos
lret
sar
imul
push
pop
mov
add
jl
push
push
rcll
dec
cld
int3
es
xchg
xor
nop
in
mov
fwait
outsl
cmp
popa
dec
rcrb
fimuls
test
mov
jecxz
aas
pop
xor
mov
and
sbb
mov
stc
shlb
cmp
pop
or
sub
scas
sbbb
lds
mov
sub
outsb
mov
insl
jno
push
and
mov
adc
loop
test
push
jns
insb
mov
jne
cmc
push
push
xor
pop
repz
xchg
dec
jle
push
mov
add
inc
js
aaa
ljmp
in
dec
jg
popf
mov
pushf
sub
daa
jl
int
leave
outsl
dec
fs
loope
push
adc
pop
push
sub
jbe
push
in
je
inc
mov
stos
ret
out
and
cmp
mov
mov
in
sbb
mov
aas
dec
sbb
cli
movsb
adc
aad
arpl
inc
orb
sti
push
fxch
pop
cmc
xchg
xlat
cmp
jno
test
imulb
stos
jnp
jne
xchg
xor
mov
nop
dec
imul
ds
sub
enter
pop
jecxz
jae
mov
xchg
sbb
mov
aad
out
xor
mov
jne
mov
cmc
cli
ds
out
push
fcomp
adc
and
clc
jecxz
xchg
enter
aad
lds
std
in
int
jecxz
into
xor
sub
jo
pop
push
lods
sub
fldcw
mov
pop
enter
xchg
ss
in
jmp
stc
insb
mov
xchg
or
mov
aas
rcll
ficoml
mov
mov
in
sub
call
xor
and
outsb
lret
movsb
xchg
orl
mov
cmpsb
sbb
call
push
lea
push
cmc
aad
fidivs
xlat
xchg
repnz
in
fsubp
adc
out
fmuls
or
adc
mov
fcompl
jecxz
test
dec
cmc
das
and
and
and
aad
lahf
movsl
jo
shrl
jno
pop
lods
ds
pusha
adc
jnp
inc
enter
xchg
inc
sbb
mov
push
insb
comiss
outsb
imul
setge
add
stos
fnstsw
scas
ret
and
rcrl
sbb
adc
and
pop
cmpsb
dec
push
dec
sbb
iret
pop
sub
fistps
fiadds
lods
dec
data16
cmp
sub
add
mov
test
mul
push
push
dec
hlt
jne
aad
sub
sti
cmp
sbb
inc
xor
adc
cmpsb
mov
xorl
pop
bound
sbb
mov
cltd
jle
movb
lock
xchg
fdivrs
shrl
mov
and
in
data16
sbb
fsubrl
pop
push
jp
and
enter
mov
in
decb
int3
or
add
jl
in
je
push
je
insl
pop
loope
adc
sbb
dec
repnz
push
fisubrs
adc
and
jecxz
and
push
pop
mov
mov
pop
mov
cld
or
xchg
fdivrs
push
jns
roll
std
nop
and
lods
movsb
scas
adc
fidivrs
mov
test
enter
jl
ss
mov
ja
dec
sar
call
add
or
dec
ljmp
lock
out
lret
cmpsb
bound
stos
lea
lahf
inc
push
daa
push
pop
xchg
xchg
stos
lods
cmpsl
pop
push
xchg
sub
xchg
jbe
jbe
sbb
jo
gs
jbe
outsl
add
sbbb
adc
pusha
ja
cltd
xor
rcr
inc
bound
fisubl
push
push
or
pop
xorl
pusha
push
outsb
loopne
repnz
outsl
inc
bound
negb
in
insl
and
jp
rorb
lds
jg
jmp
rorl
loop
clc
jg
or
repz
and
xlat
hlt
cltd
jb
fisttps
mov
movsl
lcall
sbbl
and
pop
mov
sub
popa
cmpb
sub
mov
ljmp
mov
and
test
add
sbb
adc
push
arpl
xor
dec
inc
jmp
jb
les
cmp
mov
std
adc
insl
cmp
jecxz
popa
pop
movsl
sbb
bound
and
js
arpl
in
inc
movsl
aas
sub
popa
enter
lret
out
mov
stos
mov
xchg
xchg
jmp
imul
clc
adc
push
xchg
sahf
lods
sbb
pop
push
sub
cli
or
push
aad
sub
outsb
mov
popa
iret
stos
ljmp
popf
jmp
and
adc
add
pop
test
mov
loop
jge
mov
leave
dec
push
pop
jns
add
xor
icebp
inc
std
mov
stos
aam
mov
sahf
jecxz
and
dec
fabs
cli
jg
insb
cmpl
push
push
push
cld
xchg
push
jecxz
outsb
push
inc
mov
sub
ds
pop
dec
jecxz
inc
lret
insb
clc
xchg
idivl
into
mov
fs
stos
imul
lods
xor
in
outsb
xchg
rcll
rcrl
aas
fstpl
mov
sbb
out
shl
push
bswap
lock
inc
mull
out
outsl
or
mov
sbb
xchg
inc
sbb
into
cmpsl
repnz
inc
add
inc
mov
mov
mul
icebp
xor
and
int3
das
roll
push
popf
movsl
jne
pop
shll
shll
jmp
pop
in
jmp
add
xchg
jmp
jmp
or
pop
lcall
loopne
ficoml
jmp
mov
or
lcall
mov
xor
and
shll
mov
pop
sbb
pop
test
sub
and
loop
push
mov
adc
fnstenv
adc
out
js
mov
pusha
aam
ret
jmp
nop
loope
aaa
data16
adc
pop
mov
mov
push
aaa
mov
inc
mov
xor
add
call
and
bound
inc
std
call
rol
lds
in
test
loopne
push
jg
mov
or
add
dec
scas
pop
xchg
and
sub
orb
aad
int3
daa
rol
push
jmp
dec
stos
jp
arpl
jnp
fs
test
stos
adc
xor
daa
cmpsb
jp
loopne
cmpsb
outsl
and
out
xor
out
xor
out
mov
cltd
adc
mov
mov
pushf
arpl
and
push
incl
mov
cmp
pop
jne
mov
call
sbb
call
inc
outsb
lods
test
into
mov
les
aaa
rorl
add
in
cmp
iret
add
outsl
or
push
enter
punpcklbw
test
mov
mov
mov
and
inc
pop
or
pop
push
and
jge
jb
ja
sub
mov
test
xor
in
xlat
subb
pop
fmull
push
loop
add
cmp
and
mov
insl
push
cmp
push
and
xor
mov
lahf
movsb
dec
mov
getsec
cmp
es
and
data16
cmp
loope
cmc
lret
insl
inc
popa
int3
jl
int3
repnz
pop
jae
mov
sub
insl
sub
adc
imull
xor
lods
mov
ds
ss
mov
dec
cmpsl
in
insl
dec
or
clc
lcall
or
in
lret
call
inc
sbb
fildll
test
dec
aaa
push
pop
mov
inc
mov
ret
pop
dec
loop
jle
rcl
cmp
mov
fnstsw
std
adc
cmc
jl
and
mov
cmpb
adcb
or
pop
pop
jb
addr16
lahf
pop
add
jno
and
xor
out
or
ja
pop
sub
or
enter
lcall
cli
daa
push
mov
das
jmp
das
repnz
stc
cwtl
pushl
pop
movsl
je
loop
xchg
nop
test
jno
jbe
pop
inc
shll
repnz
xchg
ja
sti
lret
stos
push
push
daa
test
iret
imul
push
cmp
mov
pop
ds
bts
mov
lcall
aas
inc
sub
ja
jp,pn
xor
int3
or
int3
push
sarb
test
lahf
cmp
jecxz
mov
push
movsb
or
into
dec
mov
dec
rorl
sahf
stos
loopne
xchg
or
insl
push
cmp
fbstp
movl
les
xchg
pop
les
nop
dec
sbb
pop
arpl
adc
jns
mov
dec
je
addr16
mov
iret
mov
rorl
addb
sbb
xchg
cmpsb
mov
mov
je
ja
lock
jecxz
dec
das
adc
filds
dec
sbb
sahf
xchg
test
adc
arpl
mov
mov
jne
or
lods
xlat
scas
pop
dec
jg
mov
xchg
xchg
lret
inc
xor
xchg
sahf
inc
into
sub
or
pop
xor
and
sbb
stos
mov
ja
dec
outsl
out
and
ljmp
jp
sub
cmc
sub
cmp
dec
dec
jb
push
mov
mov
jle
in
sar
shrb
mov
nop
jae
mov
jns
dec
fs
inc
add
dec
add
mov
push
mov
in
push
into
sub
loope
int
or
lcall
scas
and
mov
addb
xlat
fwait
movswl
stc
clc
pushw
adc
mov
pop
push
or
into
add
fcmovnbe
mov
pushl
fbstp
xchg
nop
test
mov
rcrl
xor
es
dec
dec
cmp
dec
jle
xor
mov
fs
arpl
das
push
sahf
mov
mov
xchg
adc
mov
hlt
rcrl
dec
mov
dec
das
pop
pop
sahf
aam
sub
xor
das
gs
fisubrs
vmaxss
aaa
stc
imul
imul
xor
mov
push
adc
pushf
movsl
popf
xchg
xor
add
into
outsl
inc
push
std
lods
aaa
xchg
pop
fbld
sarb
nop
add
sub
cli
rcrl
cmpl
xchg
adc
sub
adc
inc
jecxz
dec
cmp
jp
jp
xor
lret
ret
roll
mov
dec
mov
push
cmpsb
hlt
jge
lahf
call
test
xor
repz
mov
fistpl
mov
icebp
movsb
fistps
mov
das
dec
in
pop
sub
xchg
test
push
jecxz
int
divps
lcall
jp
cmp
mov
sahf
push
in
and
mov
xchg
int3
fwait
out
pop
bound
inc
loop
stos
add
jnp
sbb
mov
xchg
add
sub
rcrl
mov
lret
fstpt
xor
mov
inc
push
bnd
lret
mov
sbb
lcall
lods
int3
xorl
repz
mov
mov
mov
into
pushf
mov
mov
xor
in
push
inc
xchg
out
inc
insb
in
push
lock
dec
cmpsb
inc
mov
xor
push
inc
loope
mov
lahf
dec
adc
dec
subl
pop
add
mov
mov
aas
lcall
call
shll
cmp
aam
fiadds
cmpsb
inc
xchg
adc
sbb
daa
sti
cs
int
dec
mov
pop
dec
imul
call
and
enter
fnstenv
ss
aam
addl
lock
jmp
ljmp
mov
cltd
lock
pop
xchg
fadd
lods
addr16
xchg
decl
fwait
mov
jne
shr
leave
pop
push
xchg
cmp
mov
jbe
add
fistpl
xorb
push
pop
mov
push
mov
ret
ret
les
loopne
aam
mov
and
aad
stos
shll
popa
mov
lcall
push
shrl
and
jp
push
jle
pop
repz
aas
idivl
pop
inc
in
in
mov
push
push
xor
enter
test
push
pop
and
scas
mov
testb
fildll
add
imul
stc
push
ja
mov
inc
cmp
sbb
aam
std
lds
call
dec
push
pop
adc
mov
inc
and
repnz
call
adc
xchg
pushf
sub
mov
jbe
jns
ret
sbb
test
adc
xor
mov
aad
mov
dec
inc
mov
sbb
push
cmp
and
icebp
push
xchg
popa
mov
repz
sbb
xchg
add
ja
adc
stos
jmp
jmp
xor
pop
and
cltd
test
mov
pop
pop
sbb
ss
leave
mov
jns
call
fildl
dec
mov
mov
mov
insb
and
mov
xor
mov
iret
xor
or
mov
dec
or
mov
xchg
in
subl
imul
jne
cmp
jl
jno
adc
inc
mov
subl
and
mov
call
int
addl
push
je
mov
adc
loop
jge,pt
je
sti
mov
mov
subl
cli
inc
cmp
jmp
or
xor
cmp
movsb
sub
mov
pop
push
push
dec
into
xchg
mov
loop
aas
fcmove
push
mov
loope
adc
cmp
jno
stos
notb
adc
cwtl
roll
adc
and
inc
fcmovnu
and
sbb
add
aad
fisubl
and
dec
xor
sbb
sbb
jae
xor
lods
test
das
push
jmp
mov
or
adc
xlat
pop
and
mov
in
push
outsl
sub
push
aam
and
movsb
sbb
enter
adc
mov
pop
mov
sbb
inc
jp
sti
int3
adcb
pop
pop
inc
cld
mov
sub
popf
add
mov
fbld
sub
push
and
imul
jns
das
xchg
mov
fbld
mov
orb
add
mov
xor
mov
loop
cs
cmp
loope
mov
adc
pop
xor
pop
sbbb
int3
daa
add
lods
mov
pop
jge
cmp
mov
popa
and
adc
int3
mov
xchg
ffreep
inc
lahf
nop
mov
jno
push
out
inc
dec
push
jmp
ret
rcrb
dec
mov
push
or
jbe
in
push
rcrb
mov
cmp
mov
cmp
test
inc
dec
cmpsb
dec
and
arpl
aas
fiaddl
xchg
xlat
and
ret
inc
jg
test
mov
mov
sub
out
sub
iret
shlb
pop
add
jbe
inc
sbb
fmulp
inc
cmp
das
sbb
aam
ss
daa
dec
mov
cmp
push
mov
jl
decb
mov
or
out
pop
inc
movsb
lods
lcall
sub
fdivp
mov
popf
ud0
lea
pushf
push
cmp
pop
pop
sub
jno
xlat
loop
das
repnz
out
int3
imul
bound
cmpsb
dec
stos
scas
push
imul
mov
adc
pop
dec
jecxz
call
into
push
imul
jge
sbb
jl
enter
push
pusha
fistps
dec
shrb
dec
adc
pop
lods
inc
lock
cmp
jp
ja
iret
mov
mov
jns
push
fsubrs
jo
jecxz
dec
fucom
cmp
fwait
rcl
hlt
mov
xchg
fs
out
jnp
pop
bnd
ljmp
sahf
lods
push
sbb
pop
adc
sub
lds
test
lods
jo
xor
pop
stos
dec
fwait
xchg
loopne
in
inc
aas
mov
fsts
repz
mov
mov
inc
inc
mov
test
ljmp
pop
aaa
push
nop
repz
push
xor
dec
fisttpl
test
mov
lret
mov
in
push
fldcw
xchg
int
pop
subl
sbb
addl
test
or
mov
xchg
jno
pop
mov
repnz
fbld
and
rclb
or
rcll
jle
push
es
add
dec
inc
repnz
cmp
idiv
push
mov
xchg
jge
pop
outsb
xor
mov
pop
fiaddl
std
cld
push
iret
insl
lcall
lret
cmc
scas
dec
insb
cld
and
stos
stos
sub
outsb
imul
cmc
ja
mov
mov
sar
mov
mov
xchg
push
mov
jae
pop
hlt
pop
pop
push
mov
inc
aad
sbb
mov
mov
mov
jle
loope
scas
in
outsl
adc
mov
sbb
outsl
push
cmp
out
jg
lret
mov
inc
les
or
jmp
jmp
flds
add
lds
movsb
ljmp
pusha
testb
xchg
or
addr16
cwtl
push
insb
sbb
iret
inc
cwtl
mov
mov
fs
stos
fstpl
adc
outsb
out
dec
inc
mov
mov
loope
sub
jl
ljmp
jbe
mov
xchg
push
xlat
sti
mov
fidivl
fcmove
or
test
mov
sbb
inc
sub
xchg
inc
cmp
sbb
xchg
push
ret
stos
dec
imul
or
mov
mov
mov
or
pop
mov
jg
push
mov
pushf
fmuls
push
ja
shrb
call
xor
mov
jne
lahf
pushf
out
in
loope
orb
or
xlat
mov
mov
scas
lods
iret
add
sbb
cld
add
push
inc
adc
and
call
xor
movsl
lea
mov
in
shll
dec
aas
inc
into
fs
pop
mov
add
sti
mov
mov
scas
xchg
andb
mov
jmp
orl
xchg
int3
cld
adc
dec
int
sbbl
fidivrl
in
cmc
aaa
in
inc
js
movsl
js
into
jne
jl
iret
int
sbb
push
sub
mov
std
sub
pushf
sbb
xchg
ss
int3
mov
inc
fprem1
lahf
imul
sti
inc
jb
aad
mov
jbe
les
arpl
xchg
test
pop
neg
xor
fwait
push
jecxz
jle
sbb
sub
pop
jle
enter
shl
jae
push
dec
and
jmp
dec
push
and
ja
add
aad
mov
jae
rorl
add
and
test
pop
insl
mov
xor
bnd
dec
sbb
mov
mov
into
sarb
mov
and
jb
inc
dec
cmc
xchg
mov
std
xchg
iret
xchg
push
push
shlb
xchg
les
cmp
dec
jle
jge
icebp
sbb
dec
es
mov
fneni(8087
aas
dec
mov
push
mov
cs
xchg
add
stos
push
lds
pop
sub
out
jns
cmp
mov
sarb
jecxz
add
int3
xchg
test
stos
in
xchg
inc
mov
and
fidivrl
or
das
sbb
cmp
out
das
call
lret
mov
out
sub
call
lods
or
addr16
xchg
cmpsl
jp
test
mov
insl
inc
je
mov
inc
mov
push
xorb
mov
cmp
mov
xorb
adc
rclb
jns
push
mov
in
int
adc
cli
lods
or
jbe
dec
pop
orb
scas
pop
iret
hlt
fistpll
ss
push
add
cli
icebp
pop
add
dec
iret
imul
leave
mov
jp,pn
js
jae
jecxz
jp
lcallw
shl
push
jo
pop
pop
jmp
je
test
xchg
push
pop
jp
inc
cs
sbbl
cltd
aam
adc
xchg
and
or
inc
push
xchg
subl
lea
push
adc
adc
xchg
loop
push
pop
mov
pop
scas
push
cmp
pop
sbb
fs
mov
stos
loop
push
dec
orl
inc
or
mov
sbb
inc
lret
and
push
push
mov
ret
movsl
and
inc
cmp
and
rcll
mov
push
pushf
call
nop
andl
in
xchg
mov
cmpsl
sub
or
out
jo
ja
rorb
cmp
ret
and
xchg
pop
mov
clc
clc
cmp
outsl
cmpsb
dec
cmpsb
lock
mov
aaa
or
aam
xchg
adc
ljmp
dec
pop
insl
inc
es
xor
insb
cmp
or
mov
jmp
adc
push
mull
sub
loopne
xor
cmp
push
das
test
cmp
inc
pushl
sub
mov
daa
xorps
mov
dec
arpl
fs
jns
jle
movsl
cmpsb
pop
pop
add
icebp
push
push
xor
push
adc
sub
cmp
mov
cs
cmp
arpl
adc
mov
push
rcll
jge
je
lods
lret
cmp
push
xchg
mov
daa
sahf
fwait
cmp
inc
mov
cmp
dec
push
mov
xor
adc
imull
aad
and
nop
lds
lods
mov
sarl
mov
sarl
scas
loope
sub
mov
out
mov
mov
popl
push
ljmp
inc
dec
inc
in
add
ja
inc
or
mov
adc
adc
xlat
aaa
mov
stc
inc
fistl
mov
and
cld
lcall
pop
es
add
mov
loopne
mov
inc
mov
lock
shll
mov
nop
pop
fmuls
pop
and
push
or
mov
les
cmpb
add
jns
jne
pop
pop
inc
cmp
mov
scas
xchg
rorl
rcl
icebp
and
mov
popf
pushf
test
insl
jmp
add
loopne
pushf
sub
fisttpl
push
dec
lahf
mov
xchg
add
mov
xor
mov
mov
aaa
inc
les
jl
jno
add
or
inc
xchg
xchg
mov
push
mov
fisttpll
lods
adc
dec
add
pop
mov
rcrl
add
mov
adc
movsl
insb
pop
stc
adc
stos
add
cmp
out
xchg
pop
addl
pop
mov
push
sub
arpl
cmpb
test
lock
cmp
sub
stos
cmp
testl
hlt
adc
add
xchg
nop
sbb
frstor
or
and
in
loopne
mov
add
mov
xor
hlt
outsl
cmp
add
int
jl
daa
cmpsl
inc
jmp
push
add
sbb
pop
pop
jge
or
sti
cmp
add
int
pop
cmpsb
pop
ja
cmc
mov
adc
and
fcoms
fbstp
dec
out
push
jge
imul
stc
sub
add
push
pop
mov
incl
add
popa
adcb
cmp
cld
imul
scas
mov
push
loop
test
jmp
fisubrl
daa
lcall
test
mov
adc
in
cmc
int3
mov
in
push
hlt
and
and
les
xor
inc
sub
ja
lret
jg
or
xchg
decb
out
cmp
call
or
gs
movsb
in
add
mov
enter
mov
mov
pop
cltd
jnp
lea
lods
rolb
aas
aas
lcall
and
outsl
pushf
jg
mov
sub
in
mov
sbb
lods
add
push
sub
sub
mov
sub
mov
movsb
or
insb
sbb
pop
insb
mov
and
cmp
lds
repz
pop
inc
and
mov
jge
xchg
arpl
enter
gs
shll
sub
mov
testb
in
out
mov
dec
mov
lds
dec
inc
xor
mov
adc
inc
jno
pop
lds
push
pop
dec
mov
filds
push
test
int3
jp
aaa
sbbl
sub
or
lea
and
lock
pushf
mov
in
ret
aad
cltd
nop
lods
push
push
fcomip
push
lods
repz
pop
xor
sub
xchg
jae
and
sbb
aaa
jmp
mov
aam
negl
filds
or
scas
hlt
sub
or
dec
out
dec
into
je
mov
sti
mov
gs
inc
add
cltd
inc
mov
push
les
pop
cmp
cmp
ss
jae
dec
mov
mov
fwait
test
and
dec
xor
sub
out
or
push
fistl
push
and
inc
jle
sbb
xchg
mov
fwait
xchg
mov
sub
int3
mov
inc
xor
jbe
pop
sarb
out
int3
test
in
pop
mov
stos
jl
fs
ljmp
ljmpw
mov
ljmp
repnz
sti
mov
inc
outsb
dec
mov
add
pop
add
dec
es
lock
pop
dec
sti
fstpl
xor
add
loop
inc
cmp
stc
adc
fdivr
push
inc
sub
in
cmpsl
jmp
fdivrs
dec
push
jns
adc
ds
adc
inc
inc
pop
pop
and
jmp
ret
inc
out
xor
test
jbe
and
mov
xor
jb
bound
rclb
cmp
iret
out
daa
sub
dec
fsubrs
in
add
push
dec
dec
fisubrs
adc
in
test
xchg
mov
jmp
test
pop
call
dec
or
inc
ja
dec
jecxz
sub
inc
lret
lahf
jmp
push
clc
arpl
dec
push
push
sarb
aam
push
xchg
testl
mov
sub
xchg
int
sbb
mov
pop
pop
pushf
mov
lods
out
shrl
push
xchg
mov
push
pop
les
fsubrs
stos
aad
push
pop
pop
pushf
scas
out
adc
in
popa
push
mov
inc
pop
inc
mov
push
stos
or
daa
jle
and
push
push
or
or
cmp
int3
mov
pop
pop
jl
popf
fisubl
jge
mov
lcall
into
cmp
shlb
ret
mov
and
sbb
sbb
divb
in
scas
cltd
gs
mov
adc
jle
mov
dec
out
inc
in
ret
add
in
inc
mov
nop
pushf
test
jle
mov
push
jg
neg
jae
mov
addb
aas
mov
repnz
add
scas
aaa
clc
jne
push
lret
icebp
mov
mov
jmp
nop
ret
out
jbe
sbb
mov
pop
mov
in
jle
push
flds
in
cmp
sbb
add
jle
outsb
jno
push
imul
and
repnz
in
push
popf
push
test
inc
xchg
test
test
mov
jae
jl
and
or
or
mov
jb
push
mov
push
mov
xor
jl
or
je
ljmp
les
inc
mov
pop
in
bound
and
rclb
mov
adc
outsb
push
mov
in
xor
testl
icebp
cltd
dec
cmp
jbe
sbb
int
mov
fmul
imul
loopne
push
out
inc
jb
daa
push
adc
icebp
fdivl
mov
sbb
or
pop
aad
clc
xchg
in
rolb
pop
xchg
sub
push
pop
cltd
sub
dec
xchg
dec
sbb
inc
imul
mov
adc
sub
stos
cmp
popf
sbb
jnp
xlat
cmp
dec
pop
pushf
xor
xchg
into
loop
ret
sub
inc
pushf
fwait
pop
mov
jno
xor
arpl
push
out
inc
imul
cmp
fs
xchg
jg
xor
push
bsr
push
inc
movsb
jb
mov
test
jne
rclb
push
pop
mov
sbb
inc
inc
cmc
jne
or
stos
xchg
mov
push
jbe
push
xor
mov
cli
xchg
mov
outsb
jecxz
pop
mov
adc
sub
xor
pushf
sub
mov
inc
jecxz
nop
add
and
mov
aad
jge
add
sar
jl
pop
test
lret
dec
mov
mov
into
shrb
mov
dec
out
inc
aad
rcrb
iret
lcall
cmp
sbb
or
fmull
push
bound
orl
iret
inc
js
cld
xor
or
add
into
dec
rolb
adc
subl
sub
mov
inc
pop
pop
pop
fdivs
fidivs
mov
shll
lods
jnp
test
mov
pushf
cltd
or
cmp
push
inc
add
lods
mov
enter
pushf
dec
jmp
add
cltd
mov
pop
scas
pop
push
adc
sti
lock
js
mov
push
dec
aam
cs
rorb
xor
js
jecxz
clc
ja
test
in
or
jb
cmp
or
mov
cmp
sub
aad
ret
scas
sub
out
xor
daa
inc
faddp
fprem
xor
ljmp
pusha
mov
mov
lea
sti
dec
dec
xor
mov
push
pop
xorl
xor
mov
ja
and
xor
add
inc
push
scas
test
adc
stos
add
out
mov
jp
pop
add
movsl
fimuls
lcall
int
cmp
leave
mov
aaa
repz
sub
aad
test
push
mov
int
fwait
loopne
jge
outsl
mov
fisubl
outsl
cmp
insb
jp
lahf
enter
pushf
negl
mov
loope
dec
adc
xor
lods
xchg
add
test
test
mov
add
sub
ret
pop
cmp
pop
add
inc
cli
add
inc
and
daa
loope
xor
or
int3
jp
inc
scas
aas
lds
ds
in
mov
push
into
sub
cmp
jns
in
inc
arpl
ret
stos
xor
push
je
sub
mov
xchg
pop
push
xor
stc
push
cmp
pop
ret
or
jp
sbb
push
call
rcrl
mov
or
xor
mov
fsubl
das
in
pop
jmp
nop
mul
jns
leave
dec
mov
frstor
sbb
sub
enter
loopne
fucomip
cmpl
jecxz
jae
mov
enter
fisttps
hlt
push
movsb
cmp
push
iret
scas
and
mov
jnp
xchg
dec
pushf
js
sub
mov
push
jns
jle
ja
es
adc
arpl
and
xchg
xor
sbb
push
jae
pop
xlat
hlt
adc
pop
stos
mov
xchg
lret
xor
or
fcmovnb
in
mov
pop
inc
lea
add
pop
mov
loop
push
jg
and
rep
pusha
push
add
dec
inc
fs
in
lret
inc
mov
xchg
mov
popf
add
rorb
shll
testb
xor
das
push
rcrl
shl
add
fwait
cmpl
leave
fmull
jle
xchg
leave
testb
push
xchg
vpxor
das
test
jb
cltd
stos
inc
sub
in
jne
lds
inc
cwtl
ret
cmp
mov
push
xchg
popa
xchg
outsl
dec
test
icebp
insl
xor
push
lea
sahf
add
test
jmp
ss
inc
movsb
adc
rcll
push
xor
arpl
lret
or
mov
outsb
int
test
xchg
add
cwtl
sbb
mov
cs
adc
pop
mov
fadds
and
jns
cmp
adc
adc
pop
cmp
mov
repz
insb
arpl
and
mov
jl
loopne
or
test
sti
mov
push
inc
test
jge
mov
mov
push
imul
loopne
stos
test
xchg
mov
ds
or
dec
iret
addb
cli
negl
mov
cmpsb
mov
in
call
jno
loop
or
lock
jl
pushf
fcomip
and
jmp
jp
fistpl
fistpll
mov
fcoms
adc
scas
std
cmpsb
pop
test
jbe
jp
sahf
mov
push
add
imul
push
stos
in
jo
sbbl
pop
or
popa
imul
or
and
push
and
out
ljmp
sub
mul
dec
or
pop
fstpl
mov
aad
daa
fcompl
pushf
sar
fldcw
dec
jnp
mov
or
cmpsb
incb
lods
testb
jmp
jecxz
cli
cwtl
dec
mov
sbb
xor
std
push
or
dec
bound
call
daa
pop
je
cwtl
jg
std
xor
ds
les
fisubrl
push
das
inc
sbb
popa
adc
pop
fldl
loope
mov
mov
jmp
sub
pushf
sahf
sub
daa
mov
fs
sbb
dec
fs
lcall
mov
pusha
xchg
pop
movsb
fs
into
inc
jbe
fldenv
push
adc
rcl
jns
insb
call
sub
pop
lcall
sub
mov
sbb
mov
sub
or
fidivrs
mov
push
mov
pop
lods
shlb
fbstp
xor
dec
fildl
cmp
sbb
notb
cmp
mov
loop
lds
add
dec
mov
ja
mov
pop
cmpsl
insl
pop
lock
subb
std
mov
lods
or
mov
test
js
out
jns
cmpsb
sub
sbb
cltd
sbb
insb
pop
test
sub
scas
and
pop
mov
dec
add
mov
jp
adc
stos
mov
add
dec
ds
shll
jg
pop
mov
xchg
data16
shlb
lahf
add
loopne
insb
idivb
js
clc
jp
mov
roll
lret
ds
jg
loop
je
xchg
xorb
adc
daa
movsl
loopne
push
jns
aas
das
dec
push
popf
mov
sbb
cmp
cmc
dec
and
inc
sub
add
insb
and
pop
pop
in
icebp
out
test
mov
sub
shlb
sub
mov
ja
test
das
cwtl
mov
loopne
sarl
ret
mov
popf
ret
or
dec
and
pop
rcl
movl
stos
in
frstor
insl
xor
aaa
jnp
aam
ret
hlt
xchg
shrb
andl
mov
sbb
inc
pop
inc
sbb
jno
shlb
inc
dec
aad
movb
loope
lea
testb
adc
jmp
out
cmc
jge
scas
fisubrs
inc
test
js
push
scas
xchg
mov
in
outsl
dec
ljmp
or
stos
mov
xor
scas
nop
cld
ljmp
mov
loopne
in
add
add
mov
dec
push
xlat
jae
pop
ss
out
cmpsl
je
insb
mov
mov
jnp
or
inc
int3
fisubrl
pop
loope
lret
mov
nop
imulb
mov
mov
cmp
ret
sbb
xor
pop
pop
xor
push
push
xor
paddsb
mov
es
cmp
pop
pop
in
jmp
sub
sub
cld
scas
ficomps
testb
flds
cmp
lret
jno
sub
filds
or
shl
dec
push
popf
pop
popf
cmp
jb
repnz
jg
sbb
rcr
push
popf
cmp
mov
loop
cmp
fwait
lods
call
or
add
pop
stos
mov
insb
mov
call
mov
ja
insl
jno
imul
push
psubd
mov
xorl
leave
inc
cmc
dec
enter
sti
push
das
push
fcmove
pop
cwtl
rclb
fbstp
push
insb
push
jnp
popf
inc
dec
and
mov
jo
cwtl
imul
outsl
jl
outsl
mov
pop
lea
jno
inc
xor
fadds
and
stos
mov
jae
outsl
movsb
xor
push
cmpsl
cwtl
push
dec
jns
mov
adc
push
xchg
sub
jbe
and
lret
inc
cmp
dec
sbb
xchg
in
dec
lahf
arpl
in
mov
mov
pop
rcrl
dec
in
imul
fisttpll
stos
mov
push
push
cmp
jns
aad
outsl
movsb
xor
sti
cmp
rcrl
pop
xchg
cmp
loop
sbbb
add
push
imul
mov
adc
lock
flds
sub
dec
sub
cld
push
arpl
add
inc
movsl
adc
dec
mov
daa
inc
pop
iret
sub
jnp
and
sbbb
sbb
aas
inc
fcomps
and
enter
or
in
ds
imul
mov
pop
test
add
adc
outsb
fsubr
call
imul
push
inc
push
lret
xlat
in
pop
adc
fsubrl
and
bound
xchg
sub
push
mov
jmp
mov
std
pusha
das
std
lock
xchg
std
xor
test
sti
mov
sub
leave
pop
jmp
push
fimull
movsb
shlb
mov
jno
mov
pop
data16
lods
push
mov
xor
xor
out
test
lahf
sar
incl
call
stos
gs
pop
out
dec
jge
roll
or
pop
dec
stos
mov
sbb
or
hlt
and
dec
mov
call
pushf
rorl
ja
sub
add
dec
cld
pushf
dec
mov
pop
pop
test
imul
aas
mov
sbb
enter
popa
clc
mov
mov
xor
sbb
mov
sbb
and
ja
pop
push
insb
jae
in
test
pop
ret
ret
iret
pop
mov
push
ljmp
mov
inc
pushf
jb
cmpsb
cld
lock
mov
rclb
jecxz
and
adc
mov
cmp
daa
xor
inc
scas
scas
leave
sbb
mov
jae
sbb
out
mov
add
jg
mov
decb
xchg
jno
mov
mov
pop
shrl
popa
xchg
push
je
test
pushf
cmp
icebp
in
xor
xor
jle
push
adc
mov
std
adc
and
jno
inc
xchg
out
clc
mov
xchg
dec
push
or
arpl
cmp
out
cltd
adc
cwtl
inc
outsl
sbb
leave
fcom
xor
sub
sarl
adc
sbb
pandn
insl
scas
push
insl
push
daa
fcoml
pop
xchg
and
sbb
sub
popa
cs
and
jl
jge
test
push
sbb
fisubrs
cmpsl
inc
jne
movsl
cmp
mov
filds
xchg
add
test
and
or
xchg
xor
push
aaa
stos
outsb
cmc
and
pop
and
arpl
mov
ret
cmp
das
xchg
sub
push
in
dec
roll
pop
pop
hlt
mov
insl
shrb
bnd
xor
les
dec
aas
mov
rclb
stos
hlt
xchg
or
pop
jb
dec
or
xchg
out
pop
inc
or
mov
sbb
mov
fmuls
cmp
testl
aad
out
mov
add
xlat
ja
add
or
adc
fadds
lea
mov
push
push
les
xchg
or
leave
stos
sbb
inc
jmp
mov
jne
xchg
inc
jecxz
mov
pop
add
and
enter
sbb
and
mov
pop
push
adc
sub
cmc
insl
sbb
push
int
cld
jne
sbb
sub
js
addl
insl
fadd
scas
cmpb
mov
xchg
in
nop
mov
mov
sub
cmp
or
cli
adc
mov
push
nop
test
test
pop
xor
fwait
shll
sub
dec
push
aad
scas
adc
cmp
push
jb
clc
mov
cmove
mov
movsb
std
lods
mov
rcl
jbe
lds
fwait
ds
sti
mov
jns
ljmp
lret
pop
mov
aam
mov
std
lods
fcoms
inc
pop
sbb
push
inc
sbb
outsl
lcall
int
adc
pushf
test
cli
jo
xchg
repz
push
arpl
dec
mov
sbb
jmp
sub
out
imul
ljmp
arpl
inc
cs
bswap
mov
sbb
xor
addb
clc
int3
add
or
outsb
es
sbb
xchg
and
cmp
add
mov
adc
insl
sti
inc
inc
cmp
outsb
inc
xorb
stos
std
int
inc
add
jecxz
sahf
jb
into
enter
mov
das
pop
shll
aas
sub
xchg
fwait
mov
sahf
cmp
push
add
aas
jecxz
movnti
icebp
and
addr16
je
xchg
xchg
es
mov
movl
pushf
or
dec
sub
and
add
sub
push
cld
mov
popa
scas
pop
and
inc
push
push
shlb
pop
mov
cs
lods
popf
mov
sbb
cmpb
push
stc
sahf
sub
mov
je
or
gs
ljmp
lock
addb
push
mov
jae
sub
addr16
mov
stos
pop
mov
pop
or
xorb
and
in
lahf
pop
add
ret
arpl
out
insb
mov
mov
fsubrl
pop
les
cli
push
and
mov
or
push
push
enter
loope
data16
imul
mov
das
push
js
push
daa
inc
adc
movsl
jns
cmp
mov
addr16
fwait
xchg
gs
ds
das
and
mov
xchg
lods
cli
in
data16
lret
lock
pop
mov
push
aaa
mov
dec
pop
push
in
out
out
sub
and
adc
addr16
inc
stos
sub
cmp
pop
add
jg
pop
dec
dec
xor
sbb
fistpll
push
push
filds
rorl
xchg
sub
inc
scas
movsl
loop
sub
lock
pop
sbb
push
fldt
bound
pop
push
or
ret
and
pusha
dec
pop
inc
iret
xchg
mov
outsb
sti
push
aaa
in
mov
xor
xor
xor
faddl
nop
xchg
push
inc
scas
xchg
jecxz
xchg
mov
cmp
xchg
cs
sub
jge
stos
mov
push
movsb
faddp
aam
push
orl
movb
rorl
or
cmp
mov
shlb
loopew
icebp
rolb
rolb
xlat
lea
divb
mov
and
fs
inc
xchg
sub
adc
fdivrl
inc
lods
in
test
adc
fistpl
das
push
cmp
add
sbb
push
push
pop
outsl
and
rolb
jmp
pop
aaa
mov
pop
dec
sub
pop
lock
nop
in
xor
jns
xor
loopne
bound
aam
jb
sti
lods
shrb
mov
lcall
ffreep
jns
pushf
fwait
and
gs
and
inc
sbb
pop
ret
jmp
pop
jne
lods
xchg
xor
pop
lahf
lods
jge
mov
into
aas
adc
mov
fidivl
fimull
dec
push
xor
jp
push
xchg
test
aam
sarb
pusha
push
test
sbb
or
and
mov
cli
jmp
lock
sti
std
call
sbb
popf
dec
cmp
cmp
or
gs
scas
xor
out
sti
pusha
mov
daa
or
fwait
mov
or
pop
sub
fdivs
add
jg
xor
ljmp
test
add
jno
gs
jg
inc
lret
xchg
push
test
negb
pop
out
push
jne
gs
jne
cmp
dec
add
loope
lret
add
decl
sub
adc
sbb
out
mov
test
inc
xor
adc
dec
push
mov
push
pushf
arpl
lods
or
pop
mov
or
mov
cmp
pop
icebp
je,pt
inc
cmp
xchg
std
fmulp
icebp
pop
push
mov
push
dec
cmp
sbb
push
cmp
sbb
cli
int3
xchg
sub
mov
fyl2x
xchg
sarl
outsb
aad
cmp
adc
mov
cmp
sbb
into
inc
and
into
aaa
mov
mov
dec
mov
cltd
inc
in
xor
ret
and
adc
inc
mov
push
pop
pop
enter
fdivs
or
orb
push
jg
sahf
lahf
jp
mov
icebp
repz
mov
pop
jbe
repz
xchg
mov
xchg
sbb
sahf
test
in
lock
xor
xchg
mov
in
sbb
adc
mov
mov
sub
mov
insb
adc
adc
sub
mov
or
xor
in
mov
cmp
aaa
aaa
sub
sbb
dec
test
inc
add
mov
pop
adc
cmpl
fbld
mov
jae
sahf
out
fs
mov
enter
mov
loop
push
mov
subl
pop
and
mov
sbbb
fcmovnbe
pop
jge
push
iret
cmpsb
xor
fistpll
push
lret
push
push
out
inc
jnp
jmp
pop
popa
imul
out
rorb
lds
add
inc
test
xor
fiaddl
or
into
mov
mov
out
xlat
pop
repnz
aam
cmp
pop
test
jg
xor
aaa
and
mov
int
testb
lea
mov
cmc
sbb
subb
cmp
lcall
lcall
test
sub
jmp
leave
inc
or
dec
mov
mov
sbb
sbb
in
out
xchg
xchg
cli
dec
or
enter
cmp
and
scas
cmp
insb
cmp
lods
mov
ds
sub
lret
adcl
or
or
popa
imul
mov
pop
test
ja
adc
data16
jle
push
add
scas
shl
push
push
xor
push
xchg
in
icebp
js
mov
outsb
mov
dec
xor
fs
scas
lcall
push
int
sti
xchg
ret
dec
fimull
js
loop
xchg
lds
insb
pop
lcall
dec
outsb
jne
shll
ja
dec
scas
test
fs
mov
mov
xchg
adc
aad
movsb
cmp
in
mov
mov
fdiv
sbb
mov
into
xor
cmp
jmp
call
mov
push
push
testl
fdivrs
sbbb
repz
mov
ljmp
popa
push
roll
mov
push
pop
mov
mov
push
pop
push
cmp
sub
fisttps
filds
jp
add
stos
cmp
nop
outsb
test
sbb
adcb
cmpsl
sbb
shlb
lea
xor
or
nop
pop
jmp
shrl
insl
adc
sub
mov
shll
mov
in
mov
fstl
push
out
cltd
repnz
clc
push
pop
jmp
or
int3
jg
subb
mov
xchg
inc
cltd
jl
shr
pop
mov
xchg
popf
jns
ja
data16
sar
jo
fcmovne
hlt
aaa
arpl
dec
mov
sub
pushf
jmp
pop
gs
into
xchg
sub
mov
jecxz
jmp
push
loopne
xchg
inc
out
sahf
mov
das
mov
push
mov
and
mov
in
cld
or
dec
jl
xlat
stos
imul
sub
prefetcht0
inc
mov
cmp
shll
loop
push
dec
fstl
mov
or
pop
push
or
pusha
inc
pop
sbb
stos
jae
cmp
sbb
js
mov
sbb
sbb
loop
mov
dec
xlat
je
stos
lcall
out
inc
jno
repz
loopne
sbb
push
adc
mov
imul
test
in
push
in
jno
mov
loop
sbb
dec
push
fcoml
in
push
mov
jb
and
pop
add
mov
or
and
mov
int
lahf
rcrb
dec
int
or
lcall
and
mov
filds
dec
pushf
outsb
leave
nop
inc
icebp
pop
xchg
sbb
icebp
in
or
adc
adc
jecxz
call
aaa
cmpsb
leave
mov
movsl
xor
loopne
aaa
out
lret
faddl
cmp
adc
fsubrl
les
dec
test
lahf
lahf
lds
pop
sub
jne
fdivr
dec
add
sbb
lock
daa
imul
cmpsl
mov
repz
inc
sarb
xor
rcll
jmp
idiv
inc
rorl
pushf
iret
adc
mov
ljmp
sbb
add
push
popa
pop
inc
in
sub
sar
dec
xor
jno
mov
rcll
mov
add
pop
ljmp
mov
or
or
xchg
lahf
rorl
cwtl
cmp
popa
and
inc
push
iret
std
pusha
jo
xor
imul
pop
cltd
sahf
pop
out
push
jmp
mov
mov
into
pop
jns
movsb
mov
xor
add
cld
fiadds
jmp
fisubl
mov
hlt
xchg
pusha
int3
pop
popf
push
sahf
cmc
sbb
jmp
adc
lea
pusha
xor
pop
roll
jns
adc
mov
inc
rclb
call
insl
mov
dec
leave
cmp
cmc
pop
and
pop
or
popa
push
orb
inc
sub
test
pop
scas
bound
mov
loop
lods
insb
jmp
and
leave
fs
push
and
sarl
sysexit
sbb
outsb
dec
dec
fdivs
rcrl
gs
cmp
and
imul
mov
stos
pop
andb
movsb
add
inc
pop
stos
adc
pop
jmp
std
aam
das
cld
popf
icebp
push
cmp
push
addr16
dec
test
cmp
push
stc
mov
call
in
les
loopne
xchg
push
scas
leave
add
mov
add
mov
mov
sbb
mov
test
pop
lret
push
fwait
push
fmulp
jle
sbb
xchg
loop
lock
mov
fwait
jae
mov
pusha
into
loopne
mov
xorb
xchg
pop
mov
scas
andl
rcr
mov
add
mov
xchg
mov
dec
test
jmp
push
xor
int3
dec
repz
xor
mov
add
imul
test
rorl
fcoms
xchg
add
enter
adc
comiss
cmp
jno
adcl
jae
notl
xchg
and
mov
adc
xor
or
nop
mov
or
rcl
movsl
or
pop
mov
scas
pop
mov
in
fnstenv
imulb
ja
cmp
cmp
sub
inc
mov
int3
sub
add
enter
adc
and
sub
aaa
notl
inc
push
or
shrl
lock
jg
xchg
xor
das
sbb
fnstcw
push
popf
jnp
mov
int
xor
cltd
nop
js
mov
jne
cmp
lea
add
lahf
test
mov
stc
in
shrb
loop
push
pop
divl
pop
and
xor
daa
jp
xchg
fwait
pusha
jg
pop
mov
test
ja
push
pop
and
cmp
dec
pop
inc
and
xchg
dec
rcll
and
xchg
inc
stos
in
aas
xchg
lds
je
cmp
aaa
icebp
mov
sbb
pop
test
jge
xor
lret
pop
aam
out
test
pop
pop
xor
cld
lods
pusha
pop
push
ss
push
jmp
les
aas
sahf
popa
mov
shll
aad
out
mov
xchg
xchg
movsl
lods
and
lock
adc
mov
fidivl
imul
mov
mov
xor
imul
push
sbb
jo
push
sbb
icebp
nop
lock
push
xchg
pop
xor
popa
mov
inc
in
decl
or
stos
out
or
push
mov
push
fidivl
stc
cld
dec
xor
sub
ss
xchg
mov
pushf
mov
bound
mov
pop
push
and
cmpsb
mov
mov
xchg
xchg
mov
add
pusha
push
bound
scas
inc
ljmp
std
xor
jle
xchg
sarb
cmp
fxam
jnp
fildll
imulb
add
add
je
cmp
sbb
stos
loop
mov
pop
inc
adc
or
mov
jne
xor
int
add
lret
xor
jecxz
arpl
dec
jb
int
push
in
fwait
xlat
or
and
test
pusha
xchg
inc
xor
aam
cs
sub
inc
add
loope
add
mov
lret
cmp
sbb
adc
pop
or
jno
rcrb
notb
and
outsl
xchg
aas
push
mov
xor
es
dec
pop
cmp
pop
into
js
std
cmp
mov
in
cs
cltd
adc
das
out
jae
jno
pop
mov
fisubrs
adcl
in
aam
jg
clc
in
aam
bswap
pop
fs
js
jns
pop
pop
inc
mov
and
mov
and
sbb
xor
xchg
jb
mov
in
fs
dec
xor
ja
rolb
loop
sbb
xorb
std
cmc
dec
sub
sbb
or
inc
je
pusha
aas
sub
mov
or
rcrb
not
dec
cltd
scas
push
mov
dec
es
add
stos
jb
cltd
jb
fldt
jbe
xchg
mov
mov
mov
mov
imul
arpl
push
push
mov
jmp
xor
test
mov
jns
icebp
sbb
mov
aas
or
push
and
or
rol
and
lods
in
mov
test
sub
pushf
jo
mov
out
push
cmp
mov
int3
push
mul
call
andb
pop
lret
ficoml
mov
or
daa
push
into
cli
adc
dec
or
jbe
jmp
add
andl
in
shlb
pop
push
sbb
fs
gs
subl
cmp
lds
and
repnz
sub
and
dec
mov
cmc
shll
push
push
in
lcall
clc
xor
xchg
std
mov
mov
jno
mov
dec
lret
cmc
jne
mov
pop
inc
sbb
jo
ds
push
xor
daa
loop
test
push
adc
mov
das
xchg
into
cmp
test
aam
jecxz
sbb
or
les
out
sbb
xlat
loop
movsb
xchg
push
push
addl
decb
andl
xlat
dec
mul
sbb
or
mov
mov
cld
cmp
jne
dec
dec
test
pop
daa
adc
movsb
sbb
movsl
sbb
mov
jle
xor
xor
adc
pop
stos
dec
mov
push
dec
mov
cmp
mov
inc
call
mov
mov
lods
adc
inc
data16
jl
out
lea
mov
jle
xor
lret
int
out
lods
adc
jbe
xor
sub
xchg
fcmovb
pop
jl
into
loop
sub
test
test
and
adc
and
arpl
das
insb
cld
dec
test
arpl
jmp
lahf
les
movsl
test
pop
enter
sbb
lahf
leave
mov
call
and
pusha
mov
sub
or
lods
insl
cmp
fsts
jno
cmp
movsb
loop
or
inc
cli
lret
xor
pop
fsubrl
lock
pop
xor
or
sbb
ror
out
mov
sbb
mov
cmpb
jmp
popf
and
xor
fwait
repnz
insb
push
int3
cmc
inc
mov
mov
adc
out
orl
stos
adc
and
out
stos
jp
test
jmp
bswap
lcall
xchg
cmpsl
lds
jecxz
xor
dec
or
aaa
mov
push
and
inc
sti
and
js
add
dec
jns
xor
fiadds
mov
outsb
xor
fdivrp
int3
and
hlt
aas
scas
imul
int3
mov
mov
push
int
shll
divb
sub
xor
pop
mov
push
outsl
popa
pop
loopne
in
lds
jmp
lret
imul
mov
daa
lret
int3
dec
arpl
pusha
sbb
in
dec
inc
jb
pop
mov
jo
add
cmp
nop
dec
loope
sti
jbe
pop
cmp
lcall
hlt
sahf
jecxz
jae
mov
or
inc
xchg
stc
daa
test
add
enter
out
mov
ror
cmpsb
adc
mov
data16
scas
sbb
xor
cmp
jbe
lcall
mov
xchg
push
lcall
outsl
in
jecxz
or
sbb
xchg
repz
arpl
jge
aaa
and
fwait
rol
pop
in
gs
sbb
jae
cli
and
iret
jmp
push
fcomip
sahf
daa
and
and
and
sbb
dec
int
popf
sub
jge
mov
inc
xor
add
ljmp
dec
nop
movsb
push
sti
mov
fsubl
call
adc
mov
sub
iret
insl
mov
add
mov
mov
mov
pop
add
push
cltd
and
xchg
sub
or
sub
movsb
push
jle
adc
xor
leave
mov
xchg
subb
out
xlat
jg
ds
stc
js
scas
mov
xor
popa
sbb
ret
int3
dec
push
pop
or
add
lret
push
fisttpll
cld
xor
loopne
and
nop
push
in
cmp
push
fwait
inc
cmpsb
inc
aaa
ljmp
out
inc
fcom
dec
cmc
orb
jl
loope
fcompl
push
mov
or
jp
cmp
repnz
int
xchg
aad
leave
cmp
rcr
int3
mov
into
testl
jp
int3
ljmp
sub
inc
lea
cmc
fwait
xor
fcmovnb
daa
cld
xchg
sbb
cmpl
dec
inc
cmpsb
push
outsb
xchg
add
sbb
or
cltd
divb
aam
std
idivl
mov
pop
xchg
dec
mov
outsl
mov
xor
or
fmuls
lea
push
xchg
pusha
inc
aad
jns
scas
push
adc
lcall
out
sbb
xor
mov
into
mov
repnz
xchg
iret
cltd
sub
mov
push
adc
inc
rclb
xor
mov
mov
mov
mov
adc
sub
and
xor
in
inc
sbb
or
das
mov
ja
pop
sbb
pop
xor
dec
cmpsb
or
andb
lock
in
add
cmpsb
pop
xchg
push
mov
int
cmp
sub
push
sti
test
xlat
lcall
and
movsl
cmp
xor
aam
xchg
outsl
fs
push
push
cltd
cmpsb
mov
inc
or
add
adc
es
iret
ljmp
pop
rorb
cmp
std
mov
xor
adc
les
mov
mov
mov
xchg
jle
mov
xlat
jne
cmpsb
push
jmp
inc
cmp
repz
and
jo
pop
dec
filds
adc
cmp
pop
jmp
mov
repnz
loopne
outsl
rorb
inc
jle
xor
out
or
imul
mov
or
xlat
ss
repz
jmp
js
in
js
subl
mov
sub
xchg
inc
bound
addr16
shll
mov
ja
lods
in
cld
pushl
fwait
inc
xchg
xor
imul
xchg
xchg
xor
fmul
sahf
xor
dec
cmp
loop
loope
sbb
rcrb
ret
xchg
fwait
mov
mov
add
lea
pminsw
jmp
insb
cmp
ds
inc
aad
mov
fadd
fsubrl
pushf
daa
adc
cmp
sub
ret
sbb
icebp
ret
mov
push
dec
jecxz
mov
lods
out
jb
xchg
xchg
daa
pop
out
ret
dec
push
inc
pushf
lcall
inc
and
push
cmc
test
arpl
sbb
pop
mov
lock
push
mov
push
mov
into
pop
adc
mov
sbb
sahf
aad
fsubl
pop
push
enter
mov
lret
mov
sub
cli
mov
mov
lea
movsb
dec
data16
aaa
lcall
xchg
xchg
pop
xor
mov
xor
pop
shrb
jo
loopne
aad
fstpt
imul
inc
test
xchg
cltd
shrl
xchg
fistl
inc
in
bound
test
jge
lods
mov
jns
fcomps
mov
gs
or
mov
or
sbb
pop
sbbb
int
jbe
cmp
jnp
mov
fnstsw
xchg
mov
sbb
dec
ret
sar
into
je
les
and
push
out
sub
call
rclb
in
sbb
lret
and
add
cmp
push
bound
bnd
jnp
pop
xchg
iret
inc
imul
xor
xor
inc
mov
add
pop
xor
jbe
dec
fs
lret
sbb
and
adc
in
pushf
sub
lea
or
dec
scas
and
push
mov
fnstenv
outsl
xchg
xchg
add
stos
sti
subb
stos
mov
fsubrs
jmp
pop
or
mov
bound
push
stos
fmull
add
cmc
lds
push
loop
xor
xor
scas
insb
xchg
inc
mov
test
and
arpl
cltd
loop
insl
sub
add
jg
sub
add
mov
scas
movb
mov
mov
aaa
and
mov
pop
insb
sbb
aaa
les
pop
adc
mov
jne
xchg
fldl
inc
mov
ds
sar
cmpsl
sbb
add
out
jb
sub
fstpl
stos
sub
repz
ret
pop
cmpsl
add
fwait
jo
dec
incb
pop
sahf
mov
push
test
fadds
test
xchg
cmp
inc
int3
and
sbb
jmp
int3
push
lea
xlat
lret
adc
dec
jge
movsb
psubusb
aas
in
and
pop
outsl
add
jbe
cmp
addl
jmp
sub
jmp
lock
fsubs
nop
aaa
aad
mov
adc
mov
jnp
inc
jecxz
mov
mov
add
loop
mov
lahf
movsb
mov
rep
xchg
std
mov
out
jbe
fsts
mov
add
sbb
subl
or
sbb
outsb
jmp
imul
cmpsl
lock
loopne
sarb
leave
inc
pop
lds
or
lret
or
loopew
inc
ret
push
stc
add
or
inc
inc
sub
out
pop
aas
test
lods
les
and
push
push
push
mov
popf
jmp
in
pop
das
or
jmp
sbb
inc
das
dec
xchg
fdivrl
mov
in
xorl
js
fisttpll
ficoml
or
jl
mov
or
xor
xchg
add
add
mov
mov
cmp
ja
cld
pusha
ror
pop
jae
sub
test
jecxz
or
pushf
mov
enter
adc
mov
pop
es
sub
xor
lret
iret
outsl
leave
js
cltd
lea
cmpl
pop
add
pop
inc
or
sbb
pop
aad
stos
xor
cmpsb
call
pop
ret
pop
scas
cmp
sahf
sti
sub
push
addr16
xor
scas
jp
cmpsb
stc
lcall
xor
jnp
jo
inc
fs
es
or
jmp
xchg
dec
cltd
mov
shr
cmp
in
arpl
xor
ljmp
mov
inc
imul
leave
inc
std
push
mov
or
imul
movsb
sub
and
fwait
hlt
pusha
push
cwtl
imul
mov
mov
dec
or
and
dec
dec
push
gs
lea
cmp
xorl
jbe
sbb
sbb
xchg
out
push
test
sbb
lahf
insb
leave
add
aaa
lcall
in
outsb
ljmp
push
fisubl
addr16
mov
mov
inc
sbb
add
imul
imul
imul
leave
and
pusha
inc
dec
jp
and
ret
sti
lea
js
out
mov
push
insb
arpl
inc
lock
testl
int3
inc
loopne
dec
and
scas
gs
inc
iret
pop
mov
gs
pop
mov
xchg
daa
jmp
ret
dec
out
sbb
out
jmp
test
xchg
es
jg
pop
push
ret
out
xor
push
scas
fdivs
dec
push
les
pop
mov
cmp
mov
arpl
sub
jge
push
sub
pop
xchg
pop
adc
cli
or
cmp
sub
stc
push
add
fs
in
mov
mov
outsb
lods
inc
adc
and
stc
fcomi
mov
stc
and
xchg
imul
fcomp
popf
pop
push
mov
push
push
test
addr16
sti
in
rcr
inc
pop
outsl
jl
int
sbb
fbld
lds
jl
jns
fmull
pushf
mov
loopne
outsb
vmovhps
pusha
add
xor
lret
les
cmpsb
add
add
and
out
mov
jmp
ja
push
pop
das
rol
mov
mov
in
aad
enter
push
fs
mov
mov
imul
dec
mov
rol
jp
dec
add
leave
leave
rorl
int
movsl
fistl
inc
lahf
inc
mov
popa
out
in
idiv
mov
jb
lcall
and
fstpt
pusha
in
nop
das
mov
call
sar
dec
gs
sbb
popa
cli
mov
rcrb
cmpsb
mov
cltd
leave
jno
xor
add
lret
addr16
sub
mov
frstor
add
lret
loop
ljmp
xor
push
sub
pop
ja
cmpsb
hlt
dec
mov
add
sahf
call
mov
xchg
push
mov
inc
inc
jb
xor
sub
int
pop
xchg
sbb
pop
ljmp
xchg
mov
sbb
test
pusha
pusha
jg
cmpsl
daa
pushf
inc
pop
stos
loopne
cmp
shrb
jecxz
inc
cmp
add
cmc
push
mov
sbb
cmp
and
mov
mov
lds
mov
icebp
sub
sbb
out
xlat
call
ror
inc
out
sahf
sub
pusha
outsb
mov
cltd
sub
das
loopne
mov
js
mov
pop
push
test
int3
adc
sub
xchg
scas
leave
or
fs
mov
popf
imul
xor
inc
mov
scas
push
pusha
dec
test
aas
jge
xor
sti
insl
mov
leave
lds
dec
dec
push
push
mov
and
cmp
cmp
add
psraw
mov
sbb
dec
aaa
and
sub
lahf
daa
das
clc
jp
xor
fwait
pop
adc
jnp
ss
mov
push
repnz
cmc
setle
stos
test
xor
shl
out
outsl
sub
push
xor
xchg
dec
das
xchg
std
and
stc
xlat
push
dec
sti
scas
sub
push
dec
orb
and
jl
jl
pushf
shrl
jecxz
pushf
jns
sub
loope
jecxz
dec
leave
sub
out
adc
jecxz
dec
int
scas
imul
hlt
bound
add
push
mov
loopne
repnz
inc
mov
cmp
inc
pop
insl
mov
mov
fisttps
dec
lods
sub
and
sbb
leave
cmp
dec
fcompl
cmp
or
repnz
loope
rclb
and
lds
mov
bound
xchg
adc
in
xor
jmp
movsb
adc
movl
mov
fistpll
cli
jne
ja
fistpl
fdiv
mov
mov
jo
movsl
push
xchg
shrb
inc
pop
out
sahf
inc
enter
or
cld
sub
push
and
inc
push
stc
leave
sti
ficoms
aad
hlt
mov
sub
jl
inc
jne
lods
push
sbbb
and
insb
fisttpll
sbb
mov
dec
push
jmp
les
xor
dec
pop
jge
fimull
xor
jg
cmc
pop
pop
and
imul
mov
call
gs
jo
mov
dec
imul
test
mov
xchg
or
dec
fnstcw
sahf
pop
lret
inc
outsb
xor
mov
daa
jo
test
rcll
lea
mov
mov
adc
mov
sub
and
xor
or
mov
sub
fbld
sub
add
cmp
mov
mov
incb
into
jne
cmpsl
xor
sti
push
cwtl
or
gs
and
out
lret
sbb
js
jnp
mulb
fldln2
push
push
mov
rorb
ss
scas
test
pop
push
stos
cmp
imulb
or
cli
jo
cs
lcall
adc
push
das
xlat
out
add
fimull
enter
or
lods
xor
int
bound
pop
cltd
fdivrs
pop
loope
sahf
mov
rol
pop
xor
xor
mov
stc
or
enter
cmp
insl
mov
or
andb
pop
adc
xchg
push
cmp
dec
push
arpl
mov
adc
int3
mov
fs
push
xlat
mov
jne
dec
mov
pop
or
pop
aaa
xor
add
inc
cmpsl
push
aad
fnop
or
fs
jmp
and
jns
pop
adc
pop
sub
dec
bound
push
in
cmp
push
and
add
fisttps
cld
cli
lahf
rorb
sarb
mov
xchg
movsb
push
inc
mov
enter
add
dec
imul
xchg
jns
fmull
les
or
aaa
push
sbb
cwtl
lcall
pushw
test
jae
nop
inc
mov
je
push
jno
jo
cmp
push
out
or
loop
dec
shll
stos
shl
in
or
imul
adc
enter
mov
cmp
test
cwtl
mov
add
sbbb
sub
pop
mov
jge
lret
sub
sub
call
xchg
rolb
mov
hlt
dec
xor
addl
pop
or
mov
lods
add
bound
adc
and
out
and
push
xchg
or
dec
hlt
repz
dec
xchg
adc
idivl
test
insl
cli
pop
push
push
lods
jne
frstor
push
dec
xlat
das
xchg
ja
daa
popa
inc
push
std
xchg
cmpsb
pop
pop
aam
xchg
out
xor
rclb
clc
test
cmp
rol
call
xchg
lods
test
mov
mov
cwtl
js
mov
out
xor
sub
sub
int
cmpsl
cmp
roll
inc
push
xchg
mov
mov
ljmp
insl
dec
dec
loopne
push
movsl
bound
loop
fisttps
lds
cmp
xor
dec
mov
andb
paddusb
xor
lods
stos
test
dec
mov
jp
inc
mov
mov
inc
or
xchg
out
mov
stos
jge
lods
xor
push
adc
jne
scas
push
fwait
push
lods
daa
leave
imul
mov
stos
enter
lret
cli
out
mov
jno
es
jo
xor
xlat
pop
ss
inc
mov
mov
rcl
push
adc
pop
dec
lret
jp
aas
nop
cmp
aaa
loope
xchg
xlat
xchg
jmp
dec
or
dec
push
mov
popf
mov
and
xor
xlat
cmc
subb
jno
adc
in
fildl
jns
mov
repnz
int3
xchg
inc
xchg
aas
adc
push
cmp
push
stos
orb
jle
or
sahf
fwait
jae
add
addr16
cmp
inc
xor
lods
aaa
jo
push
sbb
cmp
push
lcall
and
in
xor
push
ret
lret
cli
jecxz
cwtl
notl
jo
lds
outsl
push
jp
cmp
add
xchg
adc
iret
inc
dec
int3
repz
cmpb
mov
pop
push
mov
push
inc
cs
xchg
es
jae
mov
xor
mov
aaa
sbb
push
jg
std
std
sub
mov
arpl
mov
jge
andb
sarb
loopne
lret
out
mov
daa
iret
or
xor
rcrl
xorps
ljmp
lock
or
iret
outsb
aam
or
ja
inc
jecxz
icebp
adc
aam
out
aaa
add
adc
xor
mov
sarl
ret
xchg
push
scas
orb
popf
testl
sbb
jge
add
lea
and
sbb
call
sub
rorl
lods
mov
lcall
hlt
and
cmp
cmp
loope
fstpt
push
add
inc
sbb
fbstp
cmp
inc
mov
xchg
imul
inc
fildll
movl
test
aas
xor
inc
or
inc
pop
and
stos
es
ficoml
xchg
lret
cli
jecxz
aaa
std
shl
inc
sbb
mov
or
fcmovne
mov
xor
xor
pop
call
aam
nop
push
or
inc
inc
icebp
popa
aad
adc
adc
or
mov
xlat
and
mov
xchg
inc
dec
idivb
xchg
lds
push
fisubl
mov
mov
sbb
ss
push
sbb
or
dec
pop
insl
jg
pop
popf
out
jb
jbe
mov
cltd
jno
or
sbb
push
lods
add
cmp
mov
mov
sub
out
cwtl
push
and
dec
mov
fists
loope
aad
lods
lods
cmp
dec
dec
fistpll
enter
test
adc
pop
cltd
scas
mov
out
ss
shrb
mov
lcall
inc
lea
push
movsb
ficoml
mov
xchg
aas
jecxz
std
test
sti
dec
jns,pn
stos
mov
fsubrs
fiaddl
fimull
xchg
add
lock
mov
ret
rol
push
jp
mov
jnp
inc
popa
sbb
mov
movsl
mov
pop
adcl
jle
loop
cmpsb
daa
xor
mov
jmp
sub
imulb
sub
ret
dec
mov
adc
pop
cmp
loope
fisttps
rclb
xor
pop
movups
add
sbb
pop
imul
test
push
loope
nop
push
fsub
and
fsts
sub
ss
icebp
out
inc
mov
pusha
mov
mov
mov
add
adc
data16
and
pop
mov
sbb
lods
jp
sub
sti
mov
and
loop
sub
push
jo
fisttpll
push
jge
call
inc
jg
testl
adc
sbb
das
add
or
dec
inc
add
cmp
sub
fisubrs
xchg
jae
das
out
in
xor
pop
and
xorb
push
jno
loopne
adc
mov
repnz
dec
sbb
lcall
test
fucomip
lock
sbb
aad
dec
ret
cmp
loop
mov
jne
mov
and
mov
pushaw
movsl
loope
add
adc
rorl
lock
sbb
lcall
cld
insb
nop
pushf
mov
push
or
out
fnstsw
or
movsl
mov
pop
push
stos
popf
adc
test
inc
sub
mov
xor
loop
lock
sub
negb
cmp
pop
sbb
nop
sbb
ret
adc
xchg
testl
cmp
imul
mov
ret
lret
pop
pushw
push
xchg
jmp
inc
pop
dec
aam
lahf
add
add
enter
nop
fmul
sbb
mov
popf
dec
mov
fdivs
xchg
and
push
dec
les
frstor
push
jg
in
cli
lea
jnp
or
cmp
xchg
pop
mov
call
xor
les
push
shll
fimuls
adc
pop
inc
jle
jg
leave
lret
xlat
jae
cmc
mov
lea
or
jo
ds
push
add
jo
cmovo
and
mov
int3
dec
and
dec
adc
pop
sbb
outsl
xor
cmc
mov
inc
push
cmp
ret
sbb
ja
pop
xchg
mov
mov
pop
addr16
jo
sbb
leave
cli
mov
cwtl
andb
xchg
push
out
data16
in
push
push
jnp
ficomps
mov
daa
mov
xchg
cwtl
mov
lret
std
shlb
pop
jmp
sahf
jbe
or
shrb
xchg
jne
jg
ret
mov
fsubs
xchg
sub
stos
mov
dec
inc
rorl
aaa
test
in
dec
sub
add
mov
add
bswap
cmpsb
xlat
jge
fcoms
ljmp
inc
sti
outsb
sub
cld
or
adc
mov
ret
vfrczps
xor
bound
inc
subl
and
gs
rcll
cwtl
inc
gs
mov
aaa
mov
cmp
mov
imul
dec
mov
in
or
sub
hlt
lods
jle
jge
adc
scas
pop
sahf
xor
cmpsb
sub
cwtl
jge
push
jp
mov
ret
pop
mov
inc
mov
mov
xor
jecxz
pop
stc
sti
adc
xchg
mov
sbb
mov
mov
mov
jns
inc
pusha
or
sbb
das
subl
test
lea
mov
or
mov
mov
movsl
mov
mov
iret
add
imul
clc
jo
adc
mov
sbb
loope
xor
test
inc
mov
mov
addr16
or
mov
pop
loope
sub
and
sbb
test
xchg
mov
pushf
bound
lock
dec
cmc
push
sbb
insl
sbb
sbb
bound
scas
lods
mov
adc
call
out
mov
ljmp
dec
dec
dec
hlt
ss
mov
cmpsb
cmpsb
or
sub
js
ja
mov
and
shrb
xor
and
enter
and
pop
or
mov
sub
xchg
or
dec
lods
ja
mov
lcall
scas
mov
xchg
addr16
pop
jmp
lock
repz
dec
imul
fcompp
xor
mov
je
dec
lock
jge
or
jle
popf
jnp
xor
subl
sbb
jbe
dec
xchg
ficoms
lahf
test
out
mov
sbb
bound
xor
push
lds
lods
xchg
icebp
xchg
aam
pop
mov
mov
xchg
pop
js
into
mov
and
clc
decb
pop
pop
stos
and
add
addr16
shrb
lods
mov
and
out
das
push
cmp
test
inc
jg
mov
sahf
outsl
pop
or
ficompl
test
mov
push
or
jns
mov
in
push
push
je
filds
fisubrl
lret
dec
lcall
adc
adc
mov
sub
sub
out
ja
mov
scas
push
rcll
jl
inc
push
sti
xchg
mov
mov
xchg
es
ret
mov
enter
mov
xlat
jns
mov
mov
xchg
fucomp
test
xchg
rolb
add
push
xor
cltd
loope
fld
mov
xor
pop
into
fmulp
out
scas
loop
test
lahf
adc
sbb
cmpsl
jno
daa
push
out
fdivp
ss
mov
insb
imul
lds
sub
and
adc
mov
dec
mov
in
pop
call
out
adc
xor
addr16
and
fcmovnbe
movb
mov
jmp
adc
mov
cmc
cmp
sbb
repz
jle
icebp
dec
pop
jns
cwtl
or
xor
or
icebp
mov
dec
jb
xchg
test
push
scas
push
sub
dec
pop
pop
icebp
int3
into
movsb
xlat
and
scas
in
enter
xlat
pop
push
rcll
xor
mov
fdivl
xchg
lds
fadds
stc
loop
sbbb
push
lret
ss
push
out
cld
movsb
push
notl
sbb
es
out
mov
mov
imul
xor
imul
loope
push
shlb
adc
sub
daa
mov
pusha
or
insl
inc
outsl
adc
and
test
ret
pushl
inc
dec
sub
mov
xor
das
jb
imul
xor
std
inc
jae
inc
xchg
addr16
call
xchg
inc
sti
pop
mov
call
jl
outsl
les
std
cmpsb
jbe
inc
mov
fmul
jo
and
push
leave
popa
jno
ffree
mov
into
push
sbb
mov
push
daa
mul
enter
xlat
push
or
and
stos
int
popf
out
mov
cld
dec
mov
insb
out
loopne
out
push
dec
bound
jnp
dec
mov
jecxz
aam
out
cmp
stos
add
popa
fnstsw
and
mov
negb
push
adc
push
sub
sub
pop
pop
add
xor
icebp
in
xor
or
in
xor
clc
sub
inc
mov
jmp
cs
jmp
sub
add
add
int
and
sub
enter
out
das
jp
shl
jns
xor
out
mov
lds
insl
test
add
hlt
subl
xchg
imul
ret
insb
popf
pop
inc
gs
and
jmp
push
inc
xchg
adc
sub
daa
frstor
lds
lock
iret
mov
pusha
sbbb
in
sub
dec
mov
iret
cmp
outsb
test
jns
repnz
fidivrl
jl
cmp
mov
mov
movsl
stos
adc
lret
add
sub
hlt
xor
pop
loopne
mov
out
pop
fmul
pop
leave
push
xchg
xchg
pusha
xchg
mov
into
jg
sbb
push
xchg
in
push
inc
loop
fs
mov
mov
add
mov
xor
push
pop
fcomi
mov
arpl
lcall
mov
je
xchg
jns
mov
add
mov
adc
and
dec
pop
pop
inc
out
inc
mov
mov
inc
cmpsl
movsl
enter
push
xchg
add
sbb
xor
mov
mov
leave
jle
pop
cmp
sbb
and
or
adc
andb
mov
fs
rcl
das
mov
icebp
pop
jbe
sub
sbb
mov
and
das
jmp
test
out
loope
imul
cli
int3
int3
add
stos
sbb
negb
flds
xchg
fwait
cmp
std
pop
mov
inc
and
std
dec
ja
test
mov
sbb
addl
mov
fisttps
push
jo
mov
aas
xlat
or
sub
push
add
cmp
mov
xchg
sub
lret
mov
mov
add
maskmovq
divl
pop
shll
iret
cwtl
push
jmp
dec
into
pop
sub
inc
adcb
arpl
insb
adc
scas
insl
inc
les
repnz
outsb
lret
jle
ret
or
or
jmp
mov
dec
scas
pop
test
lea
adc
jp
pop
mov
cmpsb
sub
mov
adc
sti
addb
mov
sti
pop
add
into
mov
fwait
jl
mov
icebp
cmpsl
fisubl
mov
in
repnz
imul
inc
and
cmp
pushf
hlt
add
loope
push
push
pop
stc
xlat
push
add
loopne
add
jge
and
test
mov
cmpsl
aas
cld
or
xor
cmp
mov
push
jl
fsubrs
push
xor
jge
arpl
mov
sub
mov
shll
mov
lahf
inc
jmp
outsb
sbb
mov
dec
flds
sar
inc
xlat
push
popf
inc
repz
jmp
dec
enter
sbb
scas
inc
ds
ja
js
xor
ss
mov
orl
sub
lds
sbb
adc
popa
repz
enter
cmp
sbb
add
cmp
xor
adc
stos
clc
scas
sarb
xor
cmp
dec
push
rcrb
xor
pop
into
je
cmp
pop
setae
out
mov
dec
mov
hlt
pop
adc
mov
in
and
lcall
les
insl
adc
negb
push
adc
jmp
lret
xorb
pop
icebp
push
fnsave
dec
mov
jl
outsb
xlat
popa
out
jmp
jmp
daa
js
push
repnz
loopne
js
mov
xor
arpl
daa
dec
sub
dec
ss
aaa
inc
mov
xchg
jge
pop
jge
aam
loop
lret
adc
fs
xor
add
sub
jbe
bound
decl
aam
push
xor
xchg
mov
push
testl
xor
ds
jge
std
jmp
push
jg
mov
dec
lock
xchg
insl
xchg
inc
aad
pop
out
daa
loopne
imul
add
fcmovnu
lds
adc
xor
dec
and
lret
imul
shll
push
cmp
insl
push
addr16
ret
frstor
in
dec
xchg
ds
or
idivl
jmp
inc
cmp
arpl
pop
push
sahf
mov
add
xor
sbb
adc
jge
fld
sub
push
loopne
movsb
jl
xchg
sub
rcrl
mov
incb
xlat
mov
push
bound
clc
mov
mov
test
inc
cmp
push
jecxz
int3
add
mov
loopne
fs
and
clc
gs
loop
cmp
adc
int3
pop
cmp
inc
es
test
jecxz
into
jp
cmp
aam
pop
repz
mov
in
push
iret
outsb
cltd
or
stos
cmp
mov
out
mov
rcll
into
data16
cmp
dec
mov
shl
push
cmp
fwait
in
or
cmc
adc
xchg
flds
adc
cltd
pop
jg
test
sbb
stos
xor
pop
sbbb
addr16
mov
ret
pop
xor
mov
pop
sub
iret
mov
jns
leave
adcl
cmp
sub
mov
jnp
inc
nop
adc
fs
xchg
stos
movsl
hlt
icebp
jo
push
inc
fcompl
movsl
popf
inc
xchg
jno
adc
jno
inc
and
mov
dec
into
or
pop
popf
push
sti
dec
xchg
test
aaa
sbb
sub
lcall
mov
jae
ja
mov
or
pop
int3
adc
loopne
aam
outsb
xchg
insl
ja
pusha
inc
xor
cmp
cwtl
lahf
std
pushf
movsb
pop
push
adc
into
out
enter
bound
es
cwtl
ljmp
pop
mov
add
sub
dec
stc
pop
insb
sbb
les
mov
xor
and
lret
or
jecxz
ja
jnp
xchg
ja
mov
stc
jl
jno
xchg
in
rcrl
ficomps
mov
mov
dec
pop
fstp
std
iret
popf
nop
jne
jecxz
push
inc
leave
mov
lods
xor
cmc
pop
aas
xchg
sub
psadbw
and
add
leave
sbb
push
cs
fsubr
cmp
lods
movsl
dec
mov
dec
add
add
sbb
push
sbb
adc
into
inc
adc
jmp
addr16
leave
push
fstpt
je
mov
fbld
jp
jae
jp
enter
mov
xlat
aaa
adc
int3
in
pop
stos
rcrl
fdivr
jle
mov
lcall
ds
jnp
addr16
adc
stc
adc
pop
jecxz
jnp
roll
jp
push
aam
les
stos
testb
mov
inc
jecxz
or
xor
sbb
ja
sar
push
push
jecxz
sbb
decl
cmp
out
and
mov
pop
sti
stc
pop
fldenv
jle
xchg
add
mov
nop
and
and
sbbb
mov
cmp
sub
xor
test
out
test
out
push
clc
adc
push
mov
dec
adc
ds
xchg
loope
fwait
jae
movsl
test
jo
cs
cltd
test
xor
int3
aaa
xchg
test
lea
xchg
out
nop
xlat
pop
cmpsb
scas
pushf
popf
mov
rorl
outsl
add
pop
inc
ja
xchg
out
test
pusha
nop
ret
ja
test
xor
sub
add
sbb
nop
or
int3
shll
cmpl
mov
add
dec
inc
das
dec
ror
cmp
mov
cs
out
cmp
out
mov
pop
rolb
imul
jns
xor
xchg
xor
shrl
out
ds
and
dec
add
or
lret
sahf
lock
fisttps
xchg
int3
jno
mov
je
idivl
mov
mov
mov
mov
pop
cmpsb
jbe
ja
push
xchg
pop
jge
not
push
sub
mov
ss
lea
add
inc
shl
xchg
stos
pusha
add
out
popf
xor
jne
mov
std
xor
dec
mov
cmp
icebp
xchg
jmp
fisubrs
ljmp
jl
or
push
mov
rcl
insb
mov
mov
and
ds
shlb
imul
ds
pop
mov
fistps
fwait
ja
ja
dec
sti
pop
add
in
mov
mov
int3
inc
bound
js
outsb
fcomps
xchg
sbb
lcall
fcomps
pop
push
roll
adc
rcrb
mov
imul
push
mov
cld
jg
cli
rorl
mov
into
cwtl
sub
xchg
arpl
xlat
sub
jmp
jmp
into
mov
daa
xchg
aaa
es
mov
pusha
sbb
mov
jo
data16
rcll
xchg
push
lock
in
outsb
push
fbstp
xor
ljmp
movsb
ljmp
push
lds
dec
xchg
cmp
adc
lret
loopne,pt
jp
addr16
leave
stos
jae
or
out
xchg
data16
aas
pop
mov
mov
lds
jl
mov
pop
xchg
pusha
fstl
mov
mov
inc
subb
out
fsubs
rcl
int3
or
lods
movsb
mov
pop
mov
das
icebp
lret
loop
out
add
jns
cmpl
repz
fcomps
cs
pop
mov
adc
mov
sbb
jle
lret
addb
adc
fsubl
xor
das
fdivrp
and
stos
sub
jecxz
xor
lds
push
test
sub
aad
movsb
lock
push
add
jg
loopne
sbb
inc
fistps
adc
ficoml
pop
sahf
push
cs
sub
or
fisubs
sbb
arpl
xchg
inc
stos
aam
cmp
adc
dec
adc
dec
mov
movsl
push
roll
inc
out
push
stos
add
mov
push
jno
pop
push
sti
jns
aaa
mov
or
iret
clc
adcb
cmp
xchg
daa
stos
sbb
icebp
jp
inc
sbb
into
les
popa
add
sbb
xchg
xchg
int3
dec
cmp
cmp
lahf
adc
push
shl
les
mov
dec
push
pushf
mov
inc
mov
mov
sbb
cli
mov
cmp
aam
adc
inc
ja
adc
jbe
sub
add
das
lea
xchg
xchg
mov
xor
pop
dec
and
pop
std
add
cmp
mov
mov
es
jb
enter
cmp
pop
jp
cli
and
xlat
adc
cmp
lcall
push
shll
jp
ret
cli
ljmp
pop
clc
jle
loop
divb
xchg
cmpb
sbb
mov
xchg
dec
xchg
adc
daa
mov
or
adcb
jmp
gs
adc
mov
and
es
and
addps
int3
jecxz
movsb
pop
jge
mov
adc
mov
sarl
mov
fistpll
aam
mov
repnz
test
mov
aaa
adc
repnz
push
cltd
mov
mov
insl
mov
lahf
dec
or
daa
jge
sbb
popa
jmp
rorl
adc
jns
imul
imul
in
push
push
fimuls
xchg
lods
cs
xor
stos
or
and
mov
sub
fsubs
xor
jmp
addr16
adc
lret
sti
and
mov
and
mov
fsincos
enter
movsb
or
xchg
in
lahf
je
popl
addr16
fsub
add
pop
bound
lods
shlb
mov
xor
jle
push
lds
lret
push
xor
dec
sbb
sbb
mov
dec
sahf
xchg
jne
insb
xor
cmpsb
fmull
out
or
jns
jmp
cmpb
pop
cs
setbe
cltd
xchg
pusha
pusha
cmp
add
jns
mov
jne
fdivp
lock
sbb
repz
xorb
mov
addr16
in
cmp
adc
fists
outsl
mov
push
cmp
fldcw
lock
xor
mov
or
sti
cmp
or
and
test
xchg
sbb
cmpl
les
rcrb
mov
cmpsl
scas
add
mov
mov
inc
cli
aas
orb
inc
sub
in
push
jne
fcmovb
cmp
add
and
jno
mov
bound
push
push
mov
mov
negb
test
loope
sbb
xchg
jnp
fmuls
sbb
xchg
imulb
outsb
jl
cmp
mov
ja
mov
stos
insb
adc
arpl
inc
lcall
push
xchg
and
add
rorl
xchg
stos
pop
inc
pushf
fldt
push
mov
fdivs
addr16
dec
les
lret
jb
xchg
outsl
ss
dec
out
or
pop
shlb
mov
fcmove
fsub
inc
fildll
aas
push
and
jmp
mov
adc
es
inc
aad
les
jmp
daa
mov
outsl
mov
test
enter
jno
mov
push
scas
jnp
call
hlt
shrl
lcall
loope
fisttpll
jno
int
outsb
jl
push
arpl
mov
aas
ret
das
adc
mov
mov
push
add
scas
or
out
decl
mov
push
sub
xchg
push
dec
out
stos
sbb
divb
push
mov
into
cmpsb
lock
insb
cwtl
out
add
das
or
shl
adc
loopne
sbb
in
jo
fldenv
mov
aas
cmp
xor
mov
jns
aad
js
ret
insb
and
dec
lock
sub
jg
clc
mov
inc
jns
int
in
mov
jge
sahf
stc
int3
cli
sbb
shll
push
aad
dec
xor
dec
fwait
adcb
mov
cmp
mov
jbe
and
xor
cmp
or
subb
pop
mov
leave
dec
push
push
push
push
outsb
fists
loopne
mov
out
pusha
in
fcomi
cs
mov
mov
out
rorl
sbb
pop
dec
pusha
out
aaa
dec
dec
out
out
push
xor
imul
cmp
add
jae
and
inc
inc
mov
stos
stc
repnz
imul
xchg
mov
xchg
xchg
sub
mov
incl
divl
ret
fildl
cmp
pop
and
push
xchg
test
dec
jne
mov
test
xor
sbb
outsb
mov
shrb
cmp
sub
sub
and
xor
mov
dec
and
xorb
push
mov
fsubr
push
rorl
mov
int
mov
mov
sti
popa
cmp
sub
and
mov
fs
shrb
mov
and
mov
fisubrl
lcall
push
aad
cmc
ss
lods
mov
adc
lret
pop
xchg
lret
mov
stc
mov
aam
fsubrl
sub
mov
inc
dec
pop
popa
cmp
aaa
outsb
lret
insl
dec
adc
jecxz
mov
mov
push
pop
xchg
aaa
inc
dec
aas
lea
test
mov
rcl
pop
xor
cltd
or
in
cmpsl
xor
mov
in
and
es
mov
lcall
pop
cmp
adc
pop
xchg
popf
jnp
gs
loopne
clc
jo
adc
sbb
add
outsb
nop
fwait
iret
das
push
mov
mov
loope
or
cmp
and
dec
pop
dec
xlat
cmp
adc
ja
jp
pop
scas
cld
call
mov
lret
cli
ljmp
mov
jno
stos
adc
ds
jns
scas
jp
mov
sahf
lea
xchg
rcll
cld
or
enter
jno
sub
jmp
and
mov
sub
pusha
ret
shlb
adc
test
pop
ret
out
or
jnp
jns
mov
mov
daa
test
push
lds
dec
iret
xchg
leave
dec
inc
leave
jge
sbb
js
pop
fucom
clc
push
inc
push
ljmp
sbb
dec
in
inc
dec
orl
movsl
repnz
push
mov
jecxz
decb
jbe
add
aaa
push
add
pusha
test
leave
adc
je
ret
js
fsubrs
mov
mov
aas
imul
ret
adcb
jle
aas
leave
aas
or
and
jno
pop
mov
mov
jl
stos
dec
insl
pop
mov
js
divb
rorb
cmp
push
inc
sbb
incb
aas
das
mov
les
inc
sub
testl
cmp
dec
fdivs
aam
popf
pop
ret
mov
and
out
lcall
xor
push
cmc
movsb
loop
ficompl
lods
adc
mov
in
gs
addr16
imul
aam
mov
sub
mov
lods
add
jno
mov
dec
int3
testb
jns
cmpsb
arpl
or
insb
pop
xor
stc
pushf
jmp
mov
popf
cmc
sbb
lds
divl
sbb
push
mov
enter
inc
xchg
das
xchg
inc
push
or
shll
lods
loope
sbb
ret
mov
fistl
loope
test
fwait
cld
and
mov
lods
sbb
out
add
add
push
sbb
int3
jae
mov
dec
push
cmp
jge
mov
daa
jl
out
into
add
push
pushf
sub
push
push
mov
dec
dec
icebp
test
sub
sbb
sbb
call
clc
sub
adc
cmp
jg
pop
cmp
leave
add
shl
add
mov
mov
fsts
and
jmp
addr16
adcl
pop
jne
fs
inc
cmp
inc
cmp
pop
insb
mov
xchg
std
adc
cli
int
or
loopne
cmpb
xchg
outsl
pop
lret
rorl
call
stos
imul
les
jb
cltd
sub
out
jb
int
mov
repnz
push
sbb
push
mov
sbb
adc
add
xchg
fs
mov
pop
add
clc
push
jl
scas
jbe
gs
lcall
xchg
and
mov
xchg
dec
rep
ss
cmp
dec
lahf
test
jge
shld
or
or
pop
jle
push
pop
jae
pop
scas
pop
jae
adc
push
dec
dec
ret
cld
lea
dec
push
sbb
mov
pop
leave
sub
pop
inc
xor
idivb
test
add
xlat
stos
xor
and
pop
stc
adc
repnz
sbb
lret
jmp
sbb
jb
mov
stos
in
add
fmul
dec
out
inc
inc
adc
cmp
mov
sbb
mov
sub
mov
icebp
mov
sbbb
test
add
add
stos
jbe
outsl
arpl
loope
cmpsb
cmp
xor
imul
push
movsb
inc
stos
mov
mov
out
sub
push
pop
stos
jbe
mov
je
jae
nop
inc
mov
cmpsb
shr
mov
arpl
bound
js
add
scas
aam
cmpsb
xchg
aam
sbb
mov
movsl
pop
push
sbb
or
fs
mov
mov
arpl
pop
lods
cld
mov
mov
scas
add
jae
sahf
aaa
imul
pop
mov
pop
jae
sub
imul
outsl
jmp
iret
and
jnp
out
ffreep
ljmp
insl
inc
in
cmpsl
push
xchg
xchg
int
inc
jg
push
test
inc
adc
mov
or
cwtl
fnstenv
xor
int
sbb
enter
adc
mov
inc
pop
inc
sbb
pop
adc
testl
jb
fcoml
out
imul
mov
das
inc
and
mov
cmp
cmp
out
test
jecxz
jns,pn
push
shll
mov
testl
cmp
dec
mov
cmpsl
in
jno
jbe
insl
in
xchg
and
mov
lret
lds
out
mov
ljmp
lahf
idivl
xchg
outsb
xlat
sahf
adc
mov
mov
and
xor
call
xor
push
pop
ljmp
fisttpll
lahf
adc
mov
dec
ret
adc
popa
clc
test
arpl
sbb
or
xor
stos
and
mov
inc
movsb
aas
loope
mov
cmp
in
fucom
divl
jae
xchg
fmulp
test
pusha
leave
mov
leave
out
push
xchg
mov
aad
aaa
adc
out
cmp
imul
push
xchg
adc
lret
aad
pop
adc
out
dec
jmp
repnz
into
out
and
inc
out
aas
cmp
add
shr
ficoms
fwait
popf
and
int
xchg
sub
xchg
clc
mov
dec
xchg
test
jo
jge
jp
pop
pushf
leave
fisubs
xor
out
mov
lret
mov
mov
mov
push
dec
in
pop
les
sbb
or
pop
pop
jge
sub
mov
pusha
pop
sbb
int3
xor
jmp
fsubrl
cmpsb
scas
cmp
out
dec
pop
or
es
andl
rorb
ret
and
push
arpl
mov
or
gs
sbb
stos
lcall
jge
jns
cld
inc
arpl
xchg
aam
jmp
fwait
dec
lret
rcr
lods
mov
icebp
scas
push
ljmp
inc
inc
ds
jns
mov
fistl
movsb
pop
in
fisubl
movl
adc
add
or
stos
inc
ror
inc
jnp
lret
les
insl
lahf
push
movsl
pop
jecxz
cmp
cmpsb
lds
ret
xchg
mov
stos
mov
sbb
fs
xor
insl
fcoms
jbe
subb
pop
lcall
push
cltd
push
out
icebp
inc
ret
lods
fadd
mov
imul
jo
fwait
stc
mov
pop
lods
mov
addr16
stos
orl
icebp
adc
inc
xchg
inc
fidivrs
mov
repz
sar
notb
sub
mov
or
xchg
aad
dec
cli
add
into
clc
loope
pop
in
push
addb
aas
jmp
pop
fcmovbe
data16
dec
mov
and
and
inc
movsl
repz
xchg
sarb
sbb
out
jmp
sti
mov
loopne
cwtl
imul
inc
dec
popa
mov
mov
in
call
aas
xchg
xchg
stos
inc
adc
lock
inc
ljmp
xchg
jmp
fidivs
gs
push
add
xchg
test
outsl
cmp
lret
cmpsb
ljmp
fbstp
xchg
jecxz
aam
inc
inc
cwtl
pushf
adc
jmp
ja
es
lcall
cwtl
leave
and
and
fldcw
jmp
lods
sbb
jmp
inc
loope
lds
ljmp
sub
push
sarb
add
inc
or
jnp
and
adc
pop
push
ja
aaa
and
es
fimull
imul
jno
orb
mov
addr16
cwtl
in
xchg
add
or
dec
sub
call
call
xlat
add
push
jle
jne
and
mov
jno
mulb
aad
int
mov
mov
inc
pop
mov
insb
stos
scas
ss
ret
adc
cmp
ja
aaa
mov
in
cwtl
push
dec
in
mov
or
pusha
inc
icebp
or
adc
ret
push
in
pusha
xchg
cmc
adc
cmp
stos
in
inc
ds
ja
sbb
lock
loop
and
push
cld
jp
scas
push
or
pop
pop
cmpsb
cwtl
cwtl
lret
mov
and
mov
lcall
mov
pushf
push
and
lea
cld
ss
inc
test
push
mov
call
xor
fdivp
iret
sbb
cmpsl
jne
fsub
pop
mov
and
shll
sub
push
addr16
dec
sbb
lea
loope
inc
pop
cmp
fadds
iret
inc
adc
aam
lret
sub
sub
cwtl
sub
add
jns
sahf
and
cmovge
popa
jb
push
iret
inc
and
inc
aaa
and
stos
jg
mov
aaa
out
sub
fldlg2
pop
insl
xchg
rcrl
lcall
pop
mov
dec
cmc
push
sahf
out
push
mov
pop
inc
sarb
loopne
aam
inc
lret
jne
scas
imul
sbb
movsb
pusha
lcall
dec
push
add
mov
ss
jo
pop
push
mov
aas
stos
dec
je
lea
push
xchg
cmpsl
mov
pop
adc
jns
aaa
das
lret
pop
mov
xchg
adc
jl
add
and
cmp
sbb
in
data16
popa
or
lods
xchg
arpl
push
jns
sub
sahf
mov
add
xor
outsb
jecxz
mov
push
mov
dec
jo
das
int
test
mov
dec
gs
push
jg
jae
test
data16
jg
xchg
mov
imul
sbb
dec
lcall
push
popa
push
xchg
push
push
or
jno
lret
lods
ss
movsb
push
cmpsb
push
and
lock
jnp
pop
es
inc
mov
addr16
gs
sahf
movb
cmpsb
push
pop
lahf
in
xchg
imul
les
iret
add
xor
fs
dec
pop
xor
cmovae
inc
inc
mov
mov
jne
and
mov
ss
sbb
pshufb
lahf
sbb
lcall
cmp
mov
sbb
insb
and
sbb
mov
push
mov
dec
sub
and
jne,pn
ret
xchg
sar
mov
xor
fcoms
jge
push
inc
jnp
xor
sub
insl
and
adc
stos
pop
and
mov
or
xor
mov
sub
daa
push
iret
cmpsb
jle
or
les
in
js
or
dec
in
inc
push
mov
fcomp
push
cs
int
adc
push
pop
aas
push
xor
mov
sub
inc
jg
sti
inc
lea
push
mov
jmp
gs
scas
call
mov
add
sub
mov
test
or
inc
jp
imul
sub
iret
sub
movsb
stos
xor
push
addr16
or
cmp
call
mov
jle
jg
stc
mov
inc
test
insl
dec
mov
cmpb
scas
jg
adc
pop
imul
das
jmp
int3
cltd
mov
or
xchg
pop
and
aaa
fsubrp
cmpsl
lock
xor
clc
scas
aad
lds
stc
xchg
sbb
push
pop
push
xchg
inc
and
pushf
xor
daa
jne
fistl
cmp
pop
aad
cmp
fidivl
xchg
rcll
xlat
cmp
int3
ja
rcrl
push
rorl
or
icebp
lahf
dec
ja
imul
stc
push
lret
fisubs
xorl
ljmp
fnstenv
jmp
jo
mov
popf
cld
push
pop
sbb
aas
inc
lock
xchg
jns
xor
ret
push
aaa
hlt
dec
out
jg
mov
mov
xchg
dec
mov
mov
adc
mov
dec
mov
pop
std
std
out
icebp
stc
mov
push
sub
xchg
data16
ds
test
fldcw
cmp
pushf
xchg
cmpsb
movsl
cltd
js
sbb
rcrl
cmp
outsl
leave
adc
sbb
adc
imul
adc
push
in
jnp
sahf
push
push
stos
dec
mov
fidivl
icebp
cmp
sub
mov
popa
fdivl
fnsave
cmpsl
push
ret
dec
div
add
jne
sti
jg
mov
xlat
lret
adc
aad
pop
data16
out
iret
lret
cmc
icebp
jmp
or
imulb
jl
stos
cltd
mov
xchg
aad
jge
loopne
call
sarb
iret
mov
mov
dec
add
adc
das
or
cmpb
sbb
scas
push
xor
out
and
and
jnp
pop
lcall
es
add
jbe
xchg
pop
lds
cmp
xor
out
adc
sub
ret
or
scas
ret
icebp
sti
sbb
pop
push
aam
les
push
inc
push
xchg
clc
test
add
or
pop
out
sub
sbbb
dec
mov
imul
adc
jl
mov
sub
insl
ret
dec
outsl
loopne
push
fmull
mov
cld
loop
jns
mov
or
jbe
pop
cmp
mov
mov
lret
sbb
xor
sar
les
xor
inc
mov
vmovntps
ja
mov
sbb
outsl
imul
sbbb
sub
test
jnp
cwtl
pop
mov
scas
xchg
and
push
push
mov
pop
xchg
insl
cmp
cmpsl
dec
popa
movsl
xor
inc
decb
scas
daa
sti
xchg
daa
push
add
inc
rcll
lret
mov
xchg
rorb
xor
ret
cmp
inc
xor
je
out
xchg
inc
fs
leave
daa
jmp
cmp
xchg
mov
icebp
dec
dec
test
push
adcb
jge
incb
or
mov
adc
orb
and
das
lea
insb
cmpsl
mov
adcb
stos
icebp
jb
jnp
mov
popf
gs
pop
repz
adc
movsb
fld
sub
mov
and
aam
adc
or
jb
xchg
hlt
push
adc
fiaddl
pop
inc
js
xor
jmp
out
cltd
sbb
jbe
and
jb
mov
xchg
pop
in
mov
cmc
push
lods
leave
inc
test
in
xchg
lds
sbb
cmpsb
aas
inc
xor
popf
testb
sub
andl
shlb
and
out
lock
ficomps
push
cltd
clc
mov
cmpsl
cmp
ja
mov
lods
cwtl
test
fbld
hlt
fldcw
icebp
sbb
jb
fstl
pop
lret
cltd
lahf
ja
fnstsw
jne
xlat
jb
or
xlat
and
shl
mov
imul
cwtl
rcll
arpl
mov
insb
cmc
dec
push
and
in
xor
aam
jg
outsb
xor
push
jo
std
sbb
sete
imul
jo
or
clc
enter
add
outsb
divb
or
sbb
js
repnz
xorl
mov
push
push
mov
jecxz
arpl
imul
or
cltd
sub
shrl
andb
andl
ja
and
mov
cmpsl
movl
leave
int
pop
mov
repz
fs
pop
and
adc
jae
mov
fistps
or
negl
xor
cmp
adc
jmp
add
sbb
pop
mov
jge
xchg
insb
mov
ret
call
inc
jbe
pop
add
push
jbe
call
test
mov
outsb
and
cli
xor
bswap
iret
cli
out
mov
frstor
stos
sarl
mov
jnp
ja
mov
mov
fldl
cmp
fnstsw
lahf
cmpsb
mov
pusha
jb
popa
stc
arpl
add
mov
push
pop
and
jne
pop
daa
fisubrl
out
mov
mov
hlt
js
fwait
or
pop
adc
xchg
in
inc
mov
xor
dec
int
sub
xor
hlt
ljmp
cmp
and
inc
mov
scas
xor
inc
fs
adc
pop
mov
mov
es
in
aaa
aam
outsb
xor
es
pushf
fnstsw
xor
sub
pop
movsl
shll
xchg
xor
jl
cmp
push
out
or
xor
shl
inc
ja
nop
pop
dec
push
leave
xchg
push
sbb
mov
inc
cmpsb
clc
push
jecxz
lahf
sbb
ja
mov
dec
jmp
pop
ret
fnstsw
shlb
int3
std
and
pop
sbb
xor
js
sub
mov
xlat
xchg
and
je
sarl
adc
test
mov
jno
dec
loopne
subb
xchg
orb
xor
xlat
repnz
jl
pushf
jl
std
sbb
mov
mov
and
adc
rep
in
stos
mov
rcrb
and
insl
ds
sub
clc
jmp
sti
push
and
and
adc
int
fcomps
cmp
push
shrb
or
cmp
cmp
xor
imul
stos
cmpsl
cmp
sbb
mov
push
sbb
arpl
mov
xchg
jne
xchg
sahf
nop
shll
ljmp
mov
ds
inc
adc
int3
xor
lds
sbb
into
xchg
loopne
hlt
and
inc
das
mov
inc
shrb
xor
leave
adc
push
loop
xchg
adc
mov
pop
popfw
imul
mov
or
push
add
mov
shl
insb
cmpsb
jae
imul
pop
xor
sti
xchg
or
jle
xor
mov
cltd
idivb
xchg
sub
repnz
add
pop
mov
pop
jmp
jge
into
sbb
jp
xlat
add
mov
ficoms
orl
and
ficoms
testb
fnstenv
shl
push
mov
int
xchg
std
adc
aad
adcl
inc
aam
xchg
loop
push
call
test
fsubrs
xlat
pop
outsb
pop
sbb
test
rclb
adc
or
in
div
sub
cmpsl
jno
ret
jmp
std
cs
int3
pop
jp
pop
subl
sbb
mov
aaa
xchg
insb
sub
jmp
mov
cmp
jge
cmp
lds
hlt
iret
jp
dec
sbb
or
or
push
inc
push
test
lret
sarb
jle
add
test
sub
in
lea
dec
outsl
add
inc
or
xor
mov
mov
inc
sbb
call
call
pop
mov
ret
test
rclb
idiv
lods
push
add
int3
mov
pop
or
mov
aad
mov
fistl
int3
in
jecxz
stos
lcall
inc
int
add
negl
xchg
fbstp
fsubrs
mov
pop
arpl
pushf
inc
add
movsl
add
out
repz
mov
lock
jmp
cmpsb
arpl
clc
xor
add
stc
add
fisubrs
push
jnp
shr
ss
cmpsl
inc
outsl
mov
mov
cmp
rclb
push
jg
enter
sub
shll
daa
rorl
stc
loopne
and
inc
xor
push
scas
vphaddubq
or
nop
movsb
push
cld
adc
adc
sahf
bound
cmp
lock
mov
xchg
nop
out
sbb
mov
pop
aad
add
hlt
fdivr
xchg
mov
mov
mov
mov
mov
repnz
cli
insl
dec
sub
mov
sub
pop
push
push
push
add
nop
jg
sbb
lret
insl
popf
imul
lea
cwtl
xchg
rolb
das
in
pop
orl
push
jbe
cwtl
pop
mov
rcr
mov
jae
enter
mov
jp
dec
aas
ffreep
jmp
jle
dec
ret
jp
test
push
scas
adc
lret
mov
repz
jp
pushf
mov
dec
pop
test
mov
das
lea
mov
jecxz
mov
dec
add
dec
dec
iret
fisubrl
iret
inc
inc
sub
cwtl
cmpb
insb
or
cmp
sti
and
sahf
test
mov
sub
mov
mov
imul
adc
ja
mov
pusha
mov
out
sub
add
mov
lret
cmp
cmp
adc
pop
stos
mov
push
lds
mov
imul
fbstp
pop
xor
xlat
push
pop
insl
loop
sbb
pop
sbb
push
js
fwait
mov
cmp
iret
test
push
mov
lret
push
pushf
imul
lahf
out
mov
arpl
fisttps
int3
jns
lret
jno
movsl
es
cmp
into
dec
mov
xchg
inc
idivb
mov
ljmp
xchg
jbe
int
nop
mov
jp
cwtl
icebp
out
lea
js
push
aaa
es
iret
jmp
loopne
pop
insb
sub
inc
add
mov
in
repz
cmpsb
inc
mov
in
jl
inc
dec
lcall
enter
dec
call
cmpsl
insl
jle
rolb
sbb
out
pop
xchg
rcll
mov
imul
jnp
test
and
xor
cltd
fdivl
lret
cltd
call
pushl
xchg
xor
mov
dec
in
addb
scas
dec
iret
sub
jmp
dec
mov
addl
movsl
aad
rol
scas
scas
sub
adc
mov
into
mov
and
hlt
jecxz
lock
jb
addr16
shrb
and
push
clc
dec
fidivrl
jae
iret
dec
dec
add
mov
dec
mov
dec
lds
and
popf
xchg
cmp
pop
jle
adc
test
inc
cwtl
out
out
iret
or
inc
out
xchg
ret
fwait
out
push
pop
push
or
mov
add
in
dec
std
sbb
ret
mov
mov
lods
xchg
mov
xor
inc
mov
lret
jecxz
les
je
nop
dec
out
hlt
sti
inc
push
sbb
enter
and
lret
jno
push
je
jl
in
jg
shr
sub
sub
int
outsl
test
outsl
cli
xor
dec
sub
xlat
push
rclb
repz
movsb
xor
xor
arpl
mov
sub
shll
adcl
pop
ficoml
mov
mov
pop
xchg
pop
adc
popa
fldl
jge
sub
pop
or
jecxz
xor
enter
psubw
out
push
ljmp
test
cltd
push
xchg
pop
lock
pop
stos
cwtl
repnz
stc
call
bound
insb
xchg
jmp
pop
mov
fs
lods
cmp
stos
pop
test
in
mov
cmpsb
adc
mov
adc
cmc
mov
adc
jmp
adc
sub
in
mov
repz
push
insb
pop
popf
test
inc
mov
cmp
jmp
loope
sub
xor
sbb
push
add
dec
cmp
daa
cmc
inc
fdiv
lcall
mov
ret
sub
mov
rcrl
idivb
xchg
adc
cmp
int
sub
cmpsb
push
or
adc
jmp
sub
sub
lcall
gs
pop
jae
pop
gs
adc
cmc
mov
push
cld
repz
jecxz
mov
aad
pop
fistps
daa
stos
sbb
daa
xchg
adc
mov
mov
insl
cmp
cmp
sti
rolb
mov
clc
es
mov
mov
mov
sbb
repnz
mov
mov
fbstp
loope
xor
or
fsts
pop
scas
mov
in
std
inc
adc
fisttpl
pop
adc
xor
cmp
sbb
lea
mov
or
lods
or
adc
cmpsl
scas
jb
or
jmp
fdivrp
in
testb
dec
int3
inc
divl
ret
roll
fsubs
cmp
sbb
outsl
add
int
mov
push
xchg
test
push
fstpl
lods
cli
fmull
hlt
mov
in
mov
add
ljmp
scas
sbb
mov
cmp
fs
or
push
adc
push
xor
and
lret
jb
repz
sbb
sbb
pushf
jns
mov
push
pop
dec
into
test
and
sbb
jmp
jae
and
in
dec
es
mov
xchg
dec
jle
push
andl
sub
push
out
lret
insl
icebp
repnz
sbbb
xchg
inc
rorl
js
add
ficomps
aaa
sub
loop
mov
aaa
lods
mov
push
inc
adc
lea
iret
mov
dec
enter
lods
sub
fs
mov
sbb
cmpsb
jmp
mov
push
cmp
xor
or
ljmp
mov
andl
push
lahf
mov
insl
stc
movl
fsub
sub
test
fnsave
sbb
bound
pop
mov
sbb
jp
inc
cmp
push
inc
test
rclb
cmp
pop
scas
add
es
adc
mov
push
and
stos
push
cli
aam
rclb
pop
inc
sbb
jl
sbb
mov
xchg
out
lcall
into
xchg
out
je
jmp
dec
mov
in
adc
aas
sub
rclb
xchg
dec
shll
inc
dec
call
gs
les
or
sub
mov
xchg
xchg
xchg
inc
pop
insl
inc
mov
lock
cld
icebp
mov
in
lea
sbb
repnz
ficoml
orl
xor
cld
repz
in
xor
jae
rorl
enter
ror
orl
mov
inc
pop
lcall
cltd
mov
and
pop
in
inc
push
push
xor
add
lods
jmp
push
xchg
pop
and
hlt
inc
rcrl
adc
xchg
gs
add
mov
insl
stos
cli
mov
clc
das
push
cmpxchg
mov
xchg
sub
push
lods
fidivrs
sub
add
xchg
xor
sbb
cs
mov
fldcw
popa
repz
jnp
cld
ds
sahf
ror
pop
in
dec
inc
push
xlat
lea
into
les
xchg
jo
mov
inc
call
push
popa
aad
push
jns
sbb
clc
arpl
jne
rcrl
ja
ror
imul
xor
test
enter
push
pop
in
cmp
and
cld
xlat
jle
mov
or
adc
add
lods
jo
mov
xchg
adc
iret
mov
aas
sub
cli
or
mov
cmp
andl
mov
or
xor
push
in
fidivrl
imul
scas
pusha
pop
dec
mov
icebp
inc
jle
add
insb
daa
cmc
jmp
cmp
xchg
test
jmp
xchg
bound
inc
out
mov
adc
call
repz
das
out
push
mov
mov
imul
jmp
movsl
or
push
or
loope
inc
mov
lods
pop
inc
jnp
lods
mov
push
adc
clc
xor
mov
push
pop
lahf
mov
pop
wbinvd
pop
xorb
push
fwait
mov
or
push
ss
push
gs
or
leave
cld
jb
adcl
inc
mov
loope
cltd
mov
ds
push
cmp
add
inc
das
insl
pop
pop
fcompl
pop
and
mov
pop
mov
lahf
and
pop
dec
mov
ljmp
out
push
pop
jns
xchg
shr
push
adc
mov
js
adc
inc
and
gs
gs
jecxz
scas
pop
test
cmp
jo
mov
mov
sbb
jecxz
scas
pushf
imul
shrb
jb
rcr
or
mul
push
xchg
mov
push
lcall
adc
hlt
orl
add
add
mov
sahf
push
js
mov
ret
push
and
xor
xor
stc
pop
and
call
mov
add
push
mov
mov
data16
outsl
mov
or
adc
mov
push
cs
cmp
xchg
or
sbb
mov
ret
push
sbb
jg
enter
xchg
push
mov
aam
loope
scas
sub
in
pop
push
cmp
or
insl
xorb
dec
imul
in
pop
pop
repnz
addr16
cmp
outsb
fistpl
scas
mov
push
mov
gs
sbb
sti
jne
mov
jbe
cmp
xchg
lret
rolb
mov
jb
test
jge
sbb
dec
fs
sbb
xchg
cmp
movsl
imul
arpl
mov
adc
push
add
mov
data16
xchg
and
sbb
inc
call
cmp
inc
movswl
cmp
xchg
sub
jle
dec
out
stos
cmp
lods
sbbl
cmp
jl
mov
xchg
in
cs
icebp
fidivrs
out
in
lret
cwtl
inc
repz
inc
ret
test
je
mov
jb
loopne
and
jno
mov
mov
mov
fimuls
pop
and
dec
arpl
mov
and
jecxz
out
pushf
jge
mov
movsl
shrb
or
negl
fwait
test
mov
in
ret
or
xabort
imull
test
jne
sahf
mov
xchg
lahf
and
inc
das
ret
adc
test
int3
xor
mov
mov
xchg
or
dec
loope
push
xor
repz
lock
lock
imul
pop
lods
adc
ja
xchg
cmp
push
mov
sub
xchg
sbb
inc
xchg
dec
xor
mov
push
es
mov
jae
ret
xchg
leave
pop
inc
shll
and
sahf
mov
sub
lret
ret
xor
scas
inc
or
es
cwtl
ret
loop
int
sbb
in
cltd
xor
loopne
pop
frstor
inc
imul
and
iret
orl
ret
mov
test
xor
test
jmp
movsb
push
or
sub
sti
pop
out
sti
out
imul
mov
add
or
hlt
xor
add
repz
sti
jno
or
push
popa
jl
jmp
in
xor
int
out
imul
xor
pop
add
dec
pop
pop
inc
out
and
push
repnz
mov
and
ljmp
inc
aam
jo
add
es
lret
in
shl
pop
test
loop
or
adc
fwait
ss
xor
fcoms
cmp
das
xor
xchg
push
add
pop
es
add
inc
repz
dec
xor
idivb
in
enter
ljmp
xor
cs
pop
mov
cmp
xchg
ss
dec
cwtl
test
popa
adc
sarb
int
mov
fldt
xor
sbb
cli
std
test
pop
lcall
test
jl
out
scas
divb
pop
jle
push
and
jecxz
stos
mov
aas
imull
mov
mov
sub
aaa
stc
and
or
arpl
jo
out
and
add
and
ds
cmc
fcmovb
lcall
ret
popa
in
xchg
xchg
xchg
lock
stos
mov
stos
push
sub
cwtl
movsl
pop
sub
int
or
jo
out
lret
rcrb
leave
stc
test
pusha
fcomp
sub
inc
out
and
sbb
mov
cmp
xor
jmp
movsb
pop
mov
jg
in
add
add
sbb
repnz
repz
idiv
inc
add
and
cld
in
xchg
push
xchg
test
testl
aad
ja
ja
cmc
sbb
cmp
push
pop
ret
dec
dec
pop
xor
inc
xchg
mov
push
insl
sbb
push
shrl
scas
dec
push
arpl
lods
lods
ficoms
xor
loop
inc
mov
arpl
nop
adc
es
dec
aas
push
jl
sub
sti
dec
xchg
lods
fisubs
adc
ror
leave
popf
jp
daa
notl
push
sbb
scas
adc
jne
cmp
and
enter
repnz
ret
xchg
sbb
andnps
fstpl
repnz
lods
or
cltd
cmp
rolb
mov
add
fwait
sbb
stc
xor
lods
mov
xchg
push
or
cs
mov
adcb
mov
mov
push
leave
das
push
arpl
leave
jl
mov
mov
aad
push
filds
ret
neg
pusha
neg
sbb
xor
pushf
sahf
and
jl
adc
lods
mov
push
xchg
stos
pop
jecxz
ret
insb
mov
lret
fimull
sub
inc
push
mov
mov
mov
std
add
in
dec
adcb
addb
inc
mov
divl
xor
mov
and
mov
pop
xchg
xchg
inc
shll
mov
mov
inc
daa
or
outsl
out
jle
fmuls
dec
outsw
dec
ljmp
lcall
sbb
outsb
adc
mov
in
loope
mov
out
cwtl
repz
and
sub
rcrl
mov
stc
cld
inc
or
or
sub
cmp
fnsave
out
scas
pop
push
xchg
jne
cmp
ds
dec
push
xchg
fildl
rcr
sbb
and
cmc
adc
nop
subb
push
in
dec
mov
int3
pop
inc
xor
mov
ja
add
or
negb
and
push
push
sarl
or
inc
push
fmuls
fcoml
add
or
testl
lahf
xor
mov
sbb
jne
sti
daa
bound
neg
ret
mov
mov
pop
add
dec
arpl
push
aas
cltd
cmp
mov
push
mov
imul
pushf
test
ljmp
pop
jo
out
dec
dec
pop
mov
inc
mov
sti
jno
inc
jbe
les
mov
add
mov
mov
xor
mov
idivl
pop
jmp
push
xor
scas
mov
pop
popf
rcrl
push
cmp
inc
mov
lods
bound
jb
inc
shlb
iret
sbb
std
jmp
divb
aaa
movsb
mov
loop
dec
mov
jb
xor
push
push
test
faddl
imul
xchg
fidivs
sbb
cmp
xchg
mov
jae
dec
xor
push
hlt
xor
push
cli
fdivs
imul
lret
daa
in
ret
aas
fidivrs
mov
in
out
les
in
mov
cltd
test
nop
adc
and
push
mov
iret
faddp
pushf
addb
in
add
pop
sbb
and
ss
mov
cmp
push
test
jmp
mov
andl
xor
icebp
in
into
pop
dec
mov
inc
mov
in
mov
jae
dec
jne
iret
lea
xor
gs
insl
xchg
test
scas
inc
sbb
sub
and
sub
push
sbb
mov
add
sub
mov
dec
mov
movsb
jae
call
out
xchg
add
mov
mov
loopne
cmp
push
sub
mov
xchg
test
and
mov
in
bound
bound
ret
xchg
sub
and
mov
adc
lods
mov
loop
push
scas
adc
xchg
cmpl
bts
shlb
or
sbb
in
sub
sub
ja
inc
int3
jmp
adc
inc
xorb
ret
cmpsl
xchg
test
stc
xchg
sahf
lods
xchg
jne
add
dec
jb
das
mov
push
add
cmc
scas
inc
data16
pop
push
pop
ljmp
mov
jns
push
push
push
lea
lahf
mov
dec
jge
dec
lock
jnp
test
and
loope
sbb
cld
xchg
inc
jno
push
jmp
mov
sbb
xchg
call
fisttps
iret
add
push
xchg
or
ljmp
fdivs
cmp
imul
imul
insl
stos
ljmp
ja
rcll
mov
lods
xor
sahf
and
push
das
cmp
xor
loope
stos
sbb
sbb
inc
add
fs
mov
int3
stos
xor
jge
push
pop
xor
add
test
lret
std
ljmp
mov
jp
jge
incl
or
jg
cmpsl
sub
cs
push
and
cmp
sbb
and
cmp
xchg
mov
fwait
xor
inc
and
xor
pushf
lret
popf
repnz
roll
push
xor
mov
inc
imul
inc
mov
aas
leave
inc
icebp
mov
adc
andb
scas
js
lock
mov
test
aaa
push
cmp
outsl
sub
movsb
inc
dec
push
mov
ds
jo
mov
mov
adc
sbb
xchg
insl
loop
sub
adc
inc
or
in
jmp
xchg
sub
mov
or
inc
adc
sbb
xlat
xlat
sbb
enter
push
int
or
dec
cmp
test
imul
mov
xor
rcrb
cld
push
scas
inc
rcl
cmp
aad
add
jne
mov
push
popf
jae
dec
ja
inc
jns
call
pop
mov
pop
iret
sub
pushl
in
pop
or
in
sbb
sub
in
sbb
test
cmp
scas
jbe
and
clc
shl
or
cmp
and
push
les
stos
xchg
and
push
sub
and
ss
xchg
xchg
jb
in
xor
incb
outsl
add
xchg
mov
ret
mov
sahf
frstor
mov
add
xchg
mov
xchg
dec
sbb
inc
loope
fmull
into
pop
xchg
xor
mov
lods
in
ja
popf
dec
repz
xchg
shlb
jno
push
es
mov
push
xchg
stos
sbb
mov
rcrb
gs
insl
jae
movsl
jle
imul
bnd
pusha
pop
push
adc
mov
pushf
push
and
aad
aas
jg
test
fs
imul
ror
jmp
aaa
outsb
cmc
mov
jbe
fcoms
out
push
xor
fs
es
xchg
daa
stc
stos
pop
lret
mov
mov
adc
pop
pop
push
push
inc
cmp
and
jb
shlb
mov
mov
push
push
adc
inc
ret
fiadds
dec
push
mov
jne
adc
xchg
push
aad
es
pop
inc
mov
loope
and
lock
dec
sub
adc
lods
lods
inc
cli
lret
xor
int3
add
dec
cmp
mov
dec
aam
or
push
repnz
xchg
rolb
mov
clc
cmp
and
mov
cmp
sbb
xlat
icebp
fcom
add
mov
in
push
mov
adc
dec
daa
rcl
in
mov
scas
xor
in
insl
pop
dec
in
mov
push
test
pop
or
jbe
cs
rorl
sub
pop
movsb
ret
cwtl
xchg
jle
cmp
pop
lret
movsl
pop
sbb
in
imul
push
test
rcrl
fdivp
es
div
in
sbbl
les
das
shlb
fwait
loop
adc
mov
mov
sti
jge
sub
jns
loopne
nop
gs
pushf
cltd
setp
inc
fcomps
repnz
or
push
push
das
test
clc
inc
adc
jle
inc
add
jo
sbb
xorb
jl
stc
leave
mov
add
sbb
jge
movsl
or
mov
xchg
inc
push
jnp
mov
in
add
adcb
lods
lds
rcr
incb
and
add
test
adc
xchg
pop
and
iret
arpl
int3
cmp
sub
int3
or
and
je
ja
adc
lock
mov
lret
xchg
out
xor
dec
sbb
scas
je
xchg
scas
push
mov
cld
cmc
outsl
loop
clc
aaa
push
push
xorl
and
mov
in
test
sarb
cwtl
iret
add
insb
cmpsb
push
rorb
pop
lcall
fistps
push
fsubl
xor
lds
ja
mov
pop
mov
inc
fsubs
cmpsl
sub
aam
mov
cs
cli
cmp
push
add
sub
stos
into
cmp
outsl
test
repz
jle
mov
data16
push
repnz
enter
les
int3
movsl
jae
dec
sub
scas
imul
xchg
bound
or
cli
leave
jo
ss
add
cmpsl
mov
pop
pushf
out
data16
jae
stos
inc
in
adc
lea
rcr
out
push
movsw
lcall
out
subl
dec
mov
fwait
or
cmc
jmp
xor
movsb
mov
jle
inc
pop
rcll
lcall
pop
mov
addr16
pop
hlt
cmc
jb
jle
jle
xchg
cmp
fs
test
mov
push
and
xchg
inc
iret
xchg
loop
and
jg
sbb
movsl
sti
ret
or
iret
and
xchg
notb
adc
xor
das
push
mov
in
pop
fistpll
ljmp
sbb
jl
clc
jg
cltd
jae
add
and
jo
pop
scas
aaa
sti
cmp
es
hlt
mov
inc
cmp
sti
int
std
cmp
jb
add
push
cmp
cmpsb
ljmp
xor
lahf
mov
call
mov
jae
daa
ja
pop
iret
adc
adc
jecxz
rcl
adcb
aad
jne
sbb
mov
pop
inc
lock
sub
lods
ja
rcll
sbb
mov
lods
push
jl
inc
into
cwtl
in
jle
or
std
or
sbb
loopw
test
push
and
inc
sahf
lods
aad
in
mov
mov
or
push
mov
cmpsb
or
pop
jne
mov
int
lahf
add
sub
dec
mov
lahf
push
sub
sbb
xor
sub
jae
and
fcoml
sti
cs
enter
divb
pop
rorb
ds
and
pop
jns
ljmp
int3
push
cmp
fisubs
cmpsl
xchg
loope
shll
das
mov
cmpsl
mov
movsb
cwtl
cltd
out
mov
pop
cmp
fsubrl
cmp
hlt
adc
cmpsl
cmp
mov
shll
aaa
fisttps
lret
mov
fs
jl
mov
popa
xor
sbb
mov
xchg
sti
fcmovnu
cmp
outsl
outsl
jno
shlb
test
lret
xchg
and
fxch
push
mov
mov
sahf
mov
jle
mov
in
pop
sahf
ljmp
push
adc
mov
inc
cmpsb
pushf
mov
xor
jle
xor
mov
aas
sub
enter
mov
pop
pop
movsb
sub
lock
fdivrs
addl
leave
and
shll
or
mov
mov
xchg
lea
xchg
push
outsl
ds
stos
lods
incb
sbb
push
cmpsb
or
adcb
fs
jne
pop
mov
in
shr
push
jp
cmp
jle
jmp
push
fwait
sub
add
xor
iret
sbb
and
lods
sub
int3
sahf
clc
or
ret
pop
push
xchg
loope
ds
inc
push
aaa
mov
jne
loop
xchg
ror
stc
adc
fs
or
and
out
sbb
shr
gs
inc
mov
cs
push
cmp
sahf
bound
movsl
pop
in
and
mov
movsl
ret
jmp
daa
scas
add
add
or
adc
rolb
stc
jmp
pop
cmp
mov
mov
push
sbb
pop
jecxz
mov
adc
das
push
mov
pop
jecxz
rorb
pop
adc
xor
xor
inc
xor
aas
iret
insl
cmpsb
cmp
or
sahf
cmp
subl
or
int
push
aaa
mov
and
jo
js
scas
shl
xor
xchg
ja
xchg
shll
jb
dec
or
xchg
pop
fs
mov
xchg
sbb
ljmp
test
mov
lds
xlat
pop
movsb
inc
outsb
dec
adc
push
jecxz
inc
je
jo
xor
mov
sub
adc
ds
dec
mov
sahf
jbe
popa
or
push
fisubs
xchg
fbld
sbb
aam
cmp
sub
pop
je
lods
les
mov
enter
test
popf
mov
sub
popf
push
popa
jge
push
push
cmp
mov
sbb
loopne
inc
inc
das
lret
push
test
inc
pop
rcl
push
pop
fcoml
jo
lods
lods
xor
and
sbb
xchg
sbb
cmp
lcall
mov
cmpsb
std
xlat
sbb
stos
or
out
sbb
test
int
dec
mov
call
xchg
mov
fcompl
push
jmp
adc
scas
jle
pop
mov
clc
xor
jp
jae
and
jne
inc
aad
push
lahf
aad
int3
dec
pushf
jp
mov
mov
inc
andb
xorl
mov
aaa
jns
jl
pop
adc
out
jns
test
sub
xchg
adc
faddl
cli
dec
jne
jecxz
je
in
jle
loopne
popf
mov
mov
call
mov
lea
cld
repnz
add
fimull
inc
shrb
out
mov
aas
std
cltd
test
cmp
lret
js
push
addr16
adc
stos
inc
cmp
mov
lock
test
dec
push
int3
icebp
cmp
iret
ljmp
fsubp
dec
imul
fdiv
push
stos
adc
into
sub
out
je
clc
ret
aad
and
outsb
xchg
mov
cld
pop
mov
test
inc
iret
add
fists
popf
pop
pusha
dec
outsl
lods
das
pop
push
add
jb
or
adc
jle
loop
pop
mov
sub
test
or
movsb
dec
aaa
insl
or
push
daa
setg
jnp
adc
rolb
dec
pop
xchg
pusha
lcall
xor
rolb
stos
mov
xchg
xchg
out
stos
jecxz
dec
fbstp
movsb
jp
in
test
add
jb
test
sbb
imul
dec
jl
mov
and
adc
stos
jg
adc
push
fnstsw
pop
sahf
xchg
push
cs
mov
pop
addl
jmp
jns
iret
in
insl
gs
cli
inc
sbb
aam
mov
mov
je
into
mov
cmp
push
or
test
and
xor
xchg
mov
sbb
push
mov
mov
orb
or
pushf
cmp
cmp
sahf
xchg
add
out
leave
pop
inc
pusha
cwtl
dec
sbb
mov
adc
push
xchg
cmp
out
pop
mov
scas
sti
mov
lcall
sbb
iret
out
pushf
cmp
adc
imul
pop
adc
and
lods
iret
in
ljmp
and
add
or
inc
ljmp
js
sub
rcrl
xchg
adc
adc
cmc
mov
shrb
nop
mov
scas
jl
lds
or
dec
cmp
shlb
popa
pop
scas
movsb
cmpsl
mov
cli
xchg
push
sahf
xchg
mov
loop
xchg
jo
imul
movsb
mov
test
xorb
mov
xor
xor
pop
cmp
and
mov
inc
mov
pop
popa
xor
bound
je
jecxz
mov
mov
adc
mov
pop
mov
fwait
sbb
jnp
jecxz
shlb
adc
sti
pusha
xor
mov
faddl
out
dec
inc
add
sti
pop
fscale
pusha
mov
fs
leave
frstor
sub
sbb
call
shrb
nop
repz
loope
mov
popa
insl
loopne
and
push
inc
cmp
scas
push
cwtl
push
cmc
fdiv
inc
fdivrl
mov
and
or
fildl
and
test
mov
jns
mov
sub
pop
or
cmp
inc
push
xchg
lahf
or
dec
stos
scas
push
add
aad
push
scas
adc
movsl
cmp
mov
add
js
dec
addr16
jae
and
mov
xorb
ret
test
adc
pusha
add
xor
pop
cmpsb
into
and
mov
out
vzeroupper
jp
lahf
xor
loope
pop
sbb
pop
or
push
bound
dec
xlat
aaa
pop
jl
sub
mov
mov
fxrstor
push
mov
pop
aas
in
aad
sbb
add
icebp
sub
sbb
mov
xchg
out
jns
and
jp
and
repnz
lahf
push
or
daa
and
jmp
sbb
sbb
adc
cmp
mov
xor
pop
lods
push
adc
fwait
sbb
adc
shll
arpl
pop
cs
scas
jbe
js
js
movb
or
test
lahf
sti
int3
test
test
in
mov
cmc
adcb
pop
cmpsl
mov
or
push
mov
iret
fimuls
xor
int
ss
jae
mov
lea
pop
out
rorl
enter
sbb
or
test
mov
pushf
push
pop
or
sbb
into
mov
mov
test
mov
bnd
popa
pop
ljmp
cmp
outsb
repnz
jo
clc
jl
mov
sub
cmp
push
cli
lret
and
popa
decb
lea
push
enter
mov
mov
out
lock
sbb
jbe
pop
xorl
outsb
mov
ds
scas
nop
movsb
sub
out
shlb
inc
or
jo
and
lock
mov
xor
jne
cmp
ds
fs
pop
cmc
adc
sub
sbb
and
pop
push
push
in
inc
cmp
mov
loope
xchg
aad
adc
xchg
lods
mov
cmp
into
adc
popf
cld
jp
dec
es
cli
cld
xor
imul
stc
cmp
pop
pop
clc
inc
inc
fiadds
dec
add
adc
enter
sti
cmpb
mov
jmp
data16
enter
in
es
aaa
jl
roll
sub
jbe
add
stc
jns
iret
sbb
jno
jecxz
push
leave
push
shlb
or
mov
movsb
jp
in
invd
push
out
lcall
cli
adc
mov
data16
in
aaa
jp
fistps
sahf
lock
lret
pop
mov
icebp
xorb
jbe
push
xlat
adcl
dec
fnstenv
gs
lods
adc
mov
lods
in
mov
lcall
pop
aad
pop
notl
gs
cli
sahf
mov
mov
mov
imul
and
aaa
and
ja
lea
and
std
data16
ljmp
out
xor
cmp
push
pushf
push
popf
push
sti
push
sahf
dec
pop
pop
pop
push
sbb
fucomi
imul
xchg
movsl
loopne
push
in
mov
pop
leave
jecxz
mov
or
or
mov
clc
jno
shr
insl
mov
gs
sbb
in
and
test
in
loope
sbb
loopne
outsb
pop
mov
pusha
js
sahf
mov
pop
orl
add
xor
sahf
cmp
loop
push
jb
xchg
sub
movsl
pusha
inc
inc
and
jl
popf
stc
sahf
push
filds
sub
lahf
daa
adc
ret
mov
jl
sub
mov
insl
pop
push
push
les
dec
or
fldcw
xchg
or
mov
push
adc
push
sbb
jge
ds
mov
iret
shrl
enter
pop
lods
idivb
scas
mov
outsl
ja
jb
push
mov
iret
lock
cmpsb
lods
cmp
push
mov
dec
jl
dec
mov
std
lods
cmp
push
fs
mov
rcrl
das
shl
jb,pt
daa
aas
inc
arpl
sbb
jbe
clc
xchg
adc
iret
in
xchg
xchg
rcrb
test
ja
inc
sbb
mov
mov
loope
push
sub
mov
jne
pushf
add
jp
add
test
imul
adc
jbe
bound
ja
ss
cmpsb
cld
loop
push
cmpl
add
push
arpl
cmpsl
out
cmpsl
push
leave
ficoms
sbb
cld
scas
mov
mov
push
sub
jmp
sub
mov
and
mov
out
rcll
outsl
insl
out
push
mov
cli
loopne
sub
cli
repz
and
aam
jo
pop
xorl
mov
out
xorb
fwait
push
mov
mov
or
pop
cld
jns
adc
outsb
xchg
pop
inc
adc
sbb
jl
xor
cltd
mov
jnp
xchg
in
adc
xchg
test
dec
mov
outsb
lock
cs
fsubrl
and
fisttps
mov
dec
mov
lahf
pop
inc
adc
popf
imul
or
mov
mov
or
lock
mov
and
mov
movsb
jmp
int
mov
push
xor
pop
ret
jmp
inc
adc
dec
stc
daa
and
mov
mov
testl
sub
mov
popf
hlt
popf
jo
adc
sarb
mov
mov
repnz
lcallw
jp
inc
incl
xor
push
scas
inc
mov
popf
mov
mov
sub
pop
shlb
out
push
or
jo
fmuls
mov
scas
push
jl
xchg
insb
xchg
call
fidivl
jbe
jbe
mov
cmp
pop
add
mov
lods
into
jnp
lahf
jge
inc
push
lret
testb
sbb
pushf
test
xchg
imul
enter
mov
push
mov
jnp
pop
pop
adc
mov
xchg
cltd
dec
jge
mov
jb
lea
xor
xor
xlat
lock
cmc
fdivrs
sahf
inc
sbb
ljmp
or
inc
test
repnz
std
out
fwait
pop
xchg
jns
lcall
pop
xchg
pop
movsb
jp
jns
scas
mov
cs
clc
daa
xchg
xchg
mov
aam
icebp
cltd
xor
mov
dec
inc
pop
scas
repnz
clc
repz
mov
scas
jle
mov
repnz
xchg
cld
jb
ret
dec
dec
xor
fstps
add
inc
das
out
jge
dec
pop
rcrl
add
in
into
and
jnp
push
subb
mov
push
std
loopne
inc
testb
js
mov
repnz
sbb
mov
xor
cli
sub
push
pop
xchg
nop
nop
fcoms
shrb
add
stos
enter
mov
mov
and
dec
outsl
and
inc
popa
and
mov
inc
out
dec
add
lds
int3
jmp
popl
push
sub
push
lods
adc
popl
mov
aam
sub
dec
jo
cmovbe
mov
or
out
scas
mov
sbb
sbb
dec
xchg
dec
les
das
ret
in
cld
push
sarl
fldt
mov
mov
xchg
jnp
in
les
test
and
jg
in
mov
pop
push
push
dec
enter
mov
or
sbb
xchg
and
xchg
mov
sub
in
gs
stc
hlt
outsb
stc
nop
adc
out
mov
inc
xor
outsl
xchg
inc
cs
jmp
out
dec
in
mov
test
repz
sahf
out
outsb
imul
loop
imul
rol
std
xchg
pop
mov
cmp
cmp
repz
mov
mov
sub
push
int3
ss
inc
cmc
xor
mov
dec
jns
leave
mov
sarb
popa
stos
cmpsb
sbb
sub
leave
lahf
sbb
sub
jo
inc
mov
dec
out
aam
jnp
cmp
cmp
mov
fisttps
stos
mov
lcall
aam
test
in
incl
mov
bound
jns
push
add
sub
pop
sarb
push
aam
xor
jmp
int
mov
xor
pop
mov
loopne
cwtl
mov
aas
frstor
mov
loop
xor
mov
or
or
aas
fwait
push
xchg
or
in
stc
sbb
jo
sti
pusha
pop
mov
lret
sti
mov
out
mov
cld
test
adc
and
sub
cs
jns
outsb
and
scas
adc
pop
mov
fildl
xchg
and
test
sbb
push
loopne
add
rcrb
push
loop
dec
xchg
sub
ficompl
push
dec
mov
fldl
sbb
mov
xchg
stc
test
fisttps
sbb
or
cmpsb
mov
js
mov
jp
or
stos
push
cltd
adc
mov
fisttpll
loopne
sub
adc
lea
cmp
out
shlb
adc
lret
mov
pop
dec
clc
dec
outsb
aas
aas
repnz
push
sbb
pop
jp
call
cmpsl
xchg
lds
cld
xor
inc
cwtl
enter
xchg
repz
sbb
pop
sbb
je
test
mov
fbld
pop
bound
movsb
addr16
lea
mov
or
ds
cmc
mov
std
fdiv
jmp
aad
xchg
cmpsl
jns
inc
outsl
icebp
dec
mov
jmp
dec
fisttps
mov
sbb
icebp
push
popa
cmp
mov
aam
xchg
ja
inc
jns
mov
or
jo
jp
jae
shl
add
jmp
inc
push
mov
fldl
adc
psubw
push
dec
dec
in
dec
inc
mov
cltd
jbe
jmp
test
jle
sub
les
mov
xor
push
push
aaa
mov
mov
add
lret
fnsave
pop
aas
pusha
lock
cmp
aas
xchg
add
and
dec
mov
lea
cmpsb
or
lret
test
int3
cli
push
push
repz
mov
pop
mov
add
jb
inc
sub
dec
mov
mov
adc
dec
in
je
repz
andl
mov
and
popa
mov
and
and
push
mov
pop
aam
jnp
xchg
push
sar
notb
in
das
sarb
fldcw
mov
sub
mov
or
push
ja
sahf
mov
icebp
push
bound
cmpsl
xchg
adc
fcoms
test
faddl
enter
jl
mov
nop
clc
xchg
repz
addb
lret
loope
jp
lods
sub
push
jmp
adcl
and
sub
setp
xchg
add
sbb
adc
pop
xorl
mov
in
jns
fwait
cmpsl
inc
in
mov
fnstenv
cmp
inc
rolb
repnz
cmp
fldenv
inc
cmp
movb
pop
bound
repnz
sbb
adc
dec
sub
cmp
push
cwtl
mov
jle
sarb
orl
cmp
pop
jo
add
fsubs
popa
in
fs
mov
pop
iret
scas
push
lds
xlat
xlat
sti
xorl
mul
mov
shlb
enter
add
mov
mov
and
xchg
fcomps
mov
adc
jne
lcall
stos
ja
xor
inc
pop
cwtl
sbb
sbb
outsl
pop
cmp
stos
cmp
movsl
movsb
inc
xchg
push
push
xchg
and
push
pop
stos
es
sbb
mov
cmpsl
xor
call
in
cmc
pop
mov
pop
outsl
scas
pop
push
stos
jle
andl
fs
lds
cmpsl
mov
pusha
mov
cmp
arpl
dec
mov
cmp
jo
inc
cld
mov
cmp
call
sub
in
pop
mov
mov
aaa
push
fdivrs
popa
out
out
in
push
inc
dec
sbb
push
testb
lock
fistps
dec
mov
andb
sbb
cmp
out
push
cmp
add
lock
xchg
inc
jnp
imul
push
mov
jmp
sub
mov
popf
and
xchg
int
sbb
lods
cmp
arpl
arpl
push
dec
mov
dec
lods
cmp
add
stos
arpl
repnz
stos
sub
mov
inc
loope
mov
pop
sub
aaa
mov
xor
test
daa
sbb
lea
mov
mov
clc
mov
cli
jb
push
in
idiv
imul
idivl
sbb
adc
arpl
cmp
dec
mov
int
and
push
rol
cmp
xchg
mov
jnp
inc
xor
loop
or
push
test
popl
imul
mov
pusha
sti
push
sub
inc
loopne
ja
faddl
pushf
out
or
js
adc
call
ret
or
outsb
div
mov
dec
stos
cmc
mov
push
xor
push
adcl
aas
icebp
into
lahf
sbb
push
or
cmp
addr16
insb
add
push
xlat
jb
mov
and
aaa
aad
aaa
je
or
pop
jae
sub
jg
mov
sbb
xchg
push
lods
xor
scas
xchg
pop
and
and
pop
dec
jnp
pop
mov
pop
fistps
loope
jmp
mov
daa
mov
fiaddl
outsb
lods
jecxz
dec
icebp
xor
jnp
xlat
sub
fldl
cltd
outsb
push
repnz
or
push
test
cltd
push
sbb
xchg
mov
hlt
jbe
mov
nop
in
mov
add
out
dec
or
cmp
jle
in
ret
lods
cld
mov
loopne
push
pusha
loopne
xor
enter
fldenv
scas
stos
arpl
in
popf
mov
adc
pop
sahf
aaa
jne
cmp
push
jecxz
add
sub
push
sti
mov
or
pop
cmp
mov
pushf
in
and
mov
and
cli
sub
imul
push
popa
into
ljmp
mov
xor
cmc
outsb
cmpsb
ror
dec
pop
scas
add
dec
rcll
popf
rorl
mov
insb
mov
add
fdivrl
popa
sbb
bnd
jp
aam
adc
mov
lahf
sarl
add
rol
sbb
jns
andl
xor
cmp
ret
sub
xor
out
mov
iret
and
xchg
jbe
imul
in
jp
mov
jno
ljmp
loope
fiaddl
pop
in
push
add
cld
and
rcll
rep
sbb
fnstcw
inc
arpl
inc
mov
cmp
and
inc
cmp
xchg
out
mov
stos
icebp
add
cwtl
cmp
add
jno
sbb
push
cmpsb
nop
push
jmp
je
in
adc
push
addr16
sub
mov
stc
push
mov
adc
pop
lret
push
outsl
rcll
push
sti
add
mov
sti
out
loopne
aaa
cmp
mov
mov
xor
loopne
mov
testb
sub
pop
sub
jecxz
xor
int
ret
cmp
mov
xchg
xchg
pop
dec
or
test
inc
gs
sub
jl
scas
subl
push
mov
addr16
loope
loop
mov
add
dec
push
mov
and
pop
fwait
mov
jmp
rcr
cltd
and
sbb
mov
sub
push
test
shlb
hlt
and
xchg
stos
enter
lods
inc
adcb
xchg
aaa
mov
and
xor
cld
dec
adc
mov
shr
lods
jmp
dec
add
or
lcall
test
clc
and
xlat
xor
mov
add
daa
roll
imul
int
jne
jno
sbb
es
out
imul
ss
inc
mov
push
xlat
ret
outsb
insl
mov
sbb
inc
icebp
xchg
bound
jnp
repz
rcr
mov
mov
loop
ret
mov
sbb
scas
test
loope
out
and
mov
incb
mov
cmpsb
int3
loop
sbb
in
jle
inc
jg
jae
sub
movsl
xchg
fcmovu
or
push
lods
jmp
lcall
adc
lret
out
je
icebp
je
inc
fwait
jb
mov
mulb
cmc
pusha
xlat
add
push
icebp
fxsave
shl
xchg
imul
xor
dec
popf
dec
loopnew
mov
lods
pusha
sti
push
jge
cmpl
stc
jbe
dec
xor
and
mov
or
sub
int
or
dec
mov
int3
push
cwtl
in
xchg
repnz
pop
jp
mov
xchg
lds
sub
adc
sahf
movsl
mov
jae
push
push
pop
mov
pop
mov
into
mov
lods
stos
sbb
mov
sbbl
xor
das
cld
mov
dec
sub
scas
bound
or
push
cltd
inc
adc
or
lret
add
jmp
pcmpgtd
dec
popa
cmpsb
mov
pop
lock
sahf
lods
dec
push
mov
xlat
fldcw
sub
jle
xor
ljmp
lret
pop
in
cmp
sahf
fisubrl
xor
lds
push
jns
movsl
and
mov
in
hlt
es
mov
adc
adc
repnz
ds
or
dec
je
mov
pop
adc
dec
lcall
repz
sbb
test
mov
stos
scas
jmp
cmpsb
fisttpll
je
push
mov
dec
mov
arpl
inc
inc
shrb
mov
inc
mov
and
fbstp
mov
dec
repz
fists
fidivl
xor
pop
cwtl
imul
lea
jmp
dec
sub
repnz
xor
lods
movsb
je
add
jbe
sub
negb
dec
xor
outsb
inc
add
stc
inc
xchg
arpl
sahf
dec
jmp
repz
shl
cwtl
ret
stos
dec
dec
and
mov
scas
popf
push
gs
out
sub
lahf
sub
roll
xchg
pop
xor
nop
loopne
loopne
cli
jmp
sbb
std
or
orb
and
mov
mov
push
shl
fstl
outsb
retw
or
mov
sub
and
insl
test
xor
mov
lds
sbb
lret
or
mov
inc
mov
insb
jns
fsts
sbb
test
cwtl
icebp
scas
stc
imul
in
xchg
fildll
fidivrl
ret
in
in
or
inc
in
add
les
pop
je
icebp
adc
mov
pop
mov
lahf
mov
hlt
push
dec
pop
movsb
and
test
or
push
scas
inc
jp
jns
xor
lods
in
adc
dec
dec
push
into
in
inc
xchg
scas
into
add
stos
fs
lret
jb
adc
cmpl
jl
jle
adc
pop
test
stos
push
stos
test
push
inc
sub
rcl
scas
and
dec
and
stos
movb
stc
ss
mov
repnz
jb
push
scas
insl
sbb
mov
vpaddsb
out
jmp
fisttpll
outsb
stos
jmp
clc
pushf
inc
xor
sbb
pop
cmp
inc
mov
or
mov
cmp
or
push
mov
xchg
stc
cmp
dec
fisubl
cld
mov
xor
fsubp
test
sub
aad
dec
pop
ret
fimuls
add
jl
jge
push
and
add
xchg
lea
mov
dec
cmp
pop
je
sub
mov
in
stc
xorl
outsb
cmp
call
or
iret
or
push
cwtl
jne,pn
test
push
push
push
popa
push
mov
inc
pop
test
aam
mov
cmp
xchg
cli
dec
xor
rol
sub
loop
jl
cltd
or
in
mov
add
cmpsl
ficomps
les
ret
jp
xchg
test
jne
push
notb
and
idivb
jne
fcompp
sbb
dec
mov
pop
or
jp
out
out
mov
out
das
fadd
outsl
inc
scas
cmc
mov
mov
movsb
test
ds
cmpsw
jmp
das
adc
cmp
sub
cmp
cmp
and
or
mov
adc
inc
sbbb
adcb
push
or
add
inc
lret
lahf
xchg
push
outsb
pop
cmp
push
or
push
pop
inc
negb
jnp
lahf
push
push
jl
add
jne
aad
sbb
sub
adc
xchg
push
jmp
fcoms
mov
dec
dec
arpl
mov
shrb
xchg
iret
adc
push
dec
mov
addb
fidivs
add
or
fnsave
xchg
jmp
lock
shl
mov
iret
in
test
push
inc
in
imul
inc
sbb
adc
and
ret
jl
pop
popw
add
inc
jb
ret
add
xor
jbe
cmpb
sub
pop
bound
sbb
out
pop
test
into
mov
test
mov
lret
jno
call
ret
lret
xchg
test
dec
test
cmp
shlb
test
jns
mov
add
add
insb
add
adc
pop
adc
mov
xlat
xchg
insl
jg
pop
jns
xchg
sub
inc
xchg
pop
cmp
fiadds
fimuls
cmp
mov
mov
popf
cmp
cmp
scas
sbb
loop
dec
dec
sar
repnz
lock
mov
cmpsl
mov
mov
or
das
dec
mov
sbb
sti
rol
sbb
adc
jne
das
mov
aaa
sbb
call
mov
arpl
inc
sbb
movsb
je
dec
loope
cld
cmp
arpl
icebp
mov
pop
jb
mov
fildll
add
in
test
aas
fisubs
lock
outsb
push
or
dec
push
jns
dec
xor
adc
pop
xchg
daa
inc
pop
imul
cmpsl
xchg
jl
outsl
mull
popa
stos
in
fsubs
into
inc
aad
and
out
fsts
fistpll
sub
pusha
cmp
jg
stc
cltd
inc
push
jge
mov
fmuls
stc
outsl
int3
inc
loope
cwtl
out
add
aas
pop
aaa
and
fs
adc
or
mov
sbb
orb
les
mov
sti
fildl
jb
fcmove
in
mov
mov
rclb
fdivl
test
decl
push
sbb
scas
in
sbb
outsb
mov
loope
mov
xchg
pop
or
pop
jnp
sub
cmpsb
out
cmp
mov
call
imul
jbe
xor
push
inc
aad
clc
icebp
mov
movnti
inc
pop
imul
jbe
arpl
movb
xor
scas
ret
push
outsb
cmp
int3
mov
mov
and
ret
mov
jo
movb
dec
and
test
and
cmpsl
sbb
push
testl
push
or
int3
push
cmc
add
mov
das
mov
lock
jbe
push
mov
sbbb
vmread
insb
mov
mov
pop
fsubr
sbb
jg
cmp
mov
inc
mov
jp
pop
cmp
enter
aam
jle
push
add
imul
push
cmpsb
jno
cmp
mov
xor
sbb
mov
pop
mov
fs
inc
arpl
repz
mov
nop
dec
in
fiaddl
pop
sub
dec
popf
in
and
inc
cmp
ffree
mov
push
or
mov
xchg
enter
ret
cmp
add
cmc
and
pop
stmxcsr
push
into
mov
cmp
decb
popf
lret
hlt
sub
dec
sub
or
out
divb
iret
pusha
test
sub
cmp
shr
shl
test
movsb
or
les
add
jge
enter
repnz
pop
popa
xchg
lret
ret
aam
aaa
aas
ljmp
int
mov
pop
insl
fnsave
loopne
mov
test
fistl
les
push
aaa
into
and
hlt
push
loope
in
adc
aas
jae
pushf
mov
pop
ret
add
fwait
dec
inc
out
cmp
dec
loope
in
inc
dec
sti
or
mov
std
pop
xor
loope,pn
sti
mov
mov
sbb
mov
mov
fisubrl
or
test
ds
loop
mov
pusha
jno
movsb
cmp
mov
inc
out
xlat
cltd
lahf
add
std
out
nop
adc
fiadds
mov
xchg
lret
pop
sub
out
jg
or
decl
xor
cmp
cmc
std
jg
inc
loopne
fs
imul
adc
orl
cmp
insb
rorb
mov
syscall
sti
mov
pop
cmp
cmpsb
pop
push
into
inc
dec
dec
xchg
decb
gs
fidivrs
cmp
pusha
in
xchg
mov
mov
cmp
jge
dec
xor
int
fsubrs
cmp
jae
and
ret
aas
iret
mov
add
loopne
fsubrs
and
gs
inc
popa
stos
enter
xchg
lcall
pop
mov
fisttps
adc
xchg
sbb
stc
mov
shrb
inc
mov
sbb
mov
orl
rcrl
icebp
mov
or
arpl
xor
lret
sub
mov
or
sar
sbb
mov
imul
cmp
xchg
fnstenv
int
mov
aaa
loop
pop
enter
mov
mov
frstor
mov
cld
loope
and
bnd
arpl
scas
lret
sub
gs
shll
leave
add
push
aas
add
jae
or
or
shl
dec
sub
mov
jo
sub
into
sarb
int3
out
fldcw
imulb
xor
addb
push
cmp
mov
repnz
inc
addr16
sub
ja
xor
add
xchg
adc
push
adc
icebp
int
popa
aam
testb
loop
xchg
mov
mov
sbb
sbb
dec
pop
inc
mov
add
push
iret
pop
add
int3
sbb
xor
out
stos
rcll
lret
stc
cs
push
les
mov
cli
test
jae
cmp
andb
sub
insb
cmp
pop
xchg
pop
pushf
adc
sub
push
popl
sub
cmp
orl
in
fwait
test
lcall
icebp
je
inc
or
xor
pop
or
aam
push
lds
pop
ds
fwait
sbb
icebp
cmp
add
pop
or
inc
ja
js
or
mov
dec
pop
jle
out
insl
push
xchg
repz
daa
rcll
repz
lods
cmpsl
popa
cmp
dec
in
ljmp
dec
int
clc
ffree
out
and
add
inc
pop
xor
add
aas
inc
ljmp
dec
xchg
add
lea
inc
outsl
or
into
or
jns
inc
mov
fnstcw
dec
cmp
pop
or
cmp
mov
push
mov
int
call
sub
sub
in
inc
mov
mov
dec
js
or
push
int3
push
divl
shl
jle
fdiv
xchg
dec
lods
aad
pop
dec
xor
rorl
mov
push
or
in
sub
push
aad
shl
mov
es
adc
std
cmp
mov
mov
dec
lret
mov
pop
lea
dec
mov
lret
inc
clc
add
or
jb
jecxz
dec
mov
cmp
andl
inc
xchg
fs
popf
adc
sub
dec
outsb
mov
daa
or
jbe
mov
jecxz
sarb
pop
inc
vmovaps
adc
test
sbb
cld
test
mov
rcrb
mov
imul
fidivrs
es
dec
lcall
out
cmp
mov
adcb
jecxz
fidivrs
daa
xchg
movsb
xchg
orb
rolb
imul
add
push
cmp
xchg
push
orl
insl
bound
dec
lock
ret
dec
sub
mov
xchg
rcl
xchg
and
and
aaa
mov
mov
aaa
outsb
dec
int
loop
js
scas
sub
xchg
sti
jne
sbb
cwtl
cmp
xchg
movsl
lcall
das
or
adc
xchg
and
inc
stos
xchg
sbb
jl
mov
inc
mov
push
push
flds
xor
pop
sub
mov
or
add
cwtl
mov
adc
cltd
xor
jle
add
jns
fs
clc
mov
cmp
in
movsl
inc
cmc
add
imul
push
push
mov
mov
mov
xchg
call
hlt
arpl
movsl
or
mov
aad
cmp
adc
sahf
adc
cmp
daa
lds
mov
sub
aas
jb
daa
inc
test
call
sahf
push
and
daa
push
or
jae
test
adc
dec
and
mov
pop
arpl
arpl
decl
jne
jno
xchg
adc
sub
push
repnz
pop
loop
xor
or
std
in
sti
rcrl
outsl
popa
dec
fwait
push
stos
cmp
out
lahf
sbb
xor
dec
ja
ljmp
xchg
test
inc
lret
mov
hlt
inc
in
pop
mov
inc
or
sub
mov
push
xor
cmc
jl,pt
fnstsw
fisubs
icebp
adc
cmp
out
xor
insl
lret
stos
in
mov
xlat
fisubl
mov
jmp
jnp
std
orl
repnz
xor
cli
enter
inc
mov
jb
inc
push
lds
punpcklbw
mov
test
mov
mov
or
inc
or
mov
lahf
rcl
outsb
flds
clc
cmpsb
pop
movsb
int3
add
ljmp
fstpt
pop
cwtl
dec
dec
mov
xchg
xor
test
jae
pop
iret
pusha
and
ds
arpl
pop
ss
cwtl
add
jmp
pop
cmp
test
jp
test
sub
sahf
les
ret
and
or
sarb
jae
out
lods
test
push
mov
je
fadd
mov
dec
ljmp
je
xor
arpl
cmp
and
imulb
mov
jecxz
jl
add
jb
std
out
inc
mov
sub
jbe
ficompl
scas
jl
das
push
push
rcrl
sub
push
mov
in
rol
fsubr
xchg
test
pop
aad
jmp
pop
adc
cmp
enter
jge
jl
test
pop
mov
mov
data16
lea
lcall
dec
subl
push
and
repnz
ss
lret
dec
ss
std
aam
std
add
stc
jmp
aam
ja
shr
pop
inc
sqrtps
adc
sbb
xchg
push
jns
push
jo
and
mov
ret
sbb
jl
cmp
pop
push
inc
add
inc
sbb
repnz
ss
inc
mov
js
lea
sahf
ss
aaa
insl
jmp
cli
test
je
fwait
or
in
add
mov
adc
mov
mov
dec
addb
cltd
sub
aam
mov
bswap
loopne
imul
in
mov
xchg
mov
mov
ficompl
mov
push
jge
fistpl
fcoms
icebp
stos
xchg
mov
adc
scas
aas
insb
push
sub
mov
js
cmp
aad
cmc
add
sub
out
movsb
movsb
retw
cli
insl
adc
or
test
fldl
rcr
adc
cmp
neg
mov
push
pop
mov
mov
xor
imul
es
orps
lock
shlb
push
shl
adc
sbb
loope
in
ficompl
shll
xchg
into
rorl
mov
int
into
mov
xor
mov
push
sub
data16
push
sub
xor
xor
jnp
pop
push
int
pushf
pop
or
push
cmpl
mov
lret
xchg
shlb
adc
mov
xlat
mov
push
cli
fldt
arpl
out
pushf
or
repnz
orb
imul
bound
cmpsl
push
pop
jns
inc
fldenv
loop
or
lea
adc
cmpsb
pusha
jle
subl
fmul
sub
ds
pop
cmpsb
pop
adc
or
jae
mov
xor
and
movsl
and
loopne
ficoms
jo
lcall
sbb
ja
lret
mov
idivb
push
daa
rol
xchg
imul
jb
in
jmp
rcrb
imul
dec
test
scas
dec
add
sti
loop
and
int3
xchg
xchg
inc
repz
xlat
or
dec
cld
pop
loop
cmp
js
out
mov
add
pop
shlb
cmc
and
sets
jecxz
ss
iret
sbb
sahf
or
scas
add
cmp
adc
movsl
mov
mov
cs
add
ja
lods
outsl
popa
mov
repnz
fistpll
or
sbb
lret
inc
clc
xor
dec
jp
jb
pop
jle
lret
jns
fdivr
pop
push
lcall
jne
pop
jecxz
in
les
fidivrs
int3
in
icebp
mov
and
sbb
test
sarb
iret
sbb
push
movsl
dec
pop
jge
dec
into
out
mov
enter
out
repz
xor
movsl
int3
cmp
jp
lahf
shrl
jecxz
push
shll
inc
mov
clc
shll
gs
cmp
sbb
jno
in
ljmp
sub
mov
leave
cli
fcompl
jl
dec
sbb
bound
loop
mov
pusha
jbe
jns
in
mov
xchg
jae
sub
jmp
outsb
xchg
cmpsl
fstp
scas
jb
lret
mov
mov
cmp
lret
jb
sub
sti
sub
mov
stc
xlat
pop
sub
inc
call
sub
int3
add
adc
and
jg
mov
leave
adc
cwtl
adc
mov
mov
jmp
lds
mov
pop
xchg
xchg
xchg
gs
fs
jnp
push
mov
addb
push
loop
adc
out
ss
push
xchg
mov
xchg
mov
fcmovbe
test
or
into
dec
jmp
xchg
dec
sbb
sub
cmp
pop
imul
out
dec
xchg
mov
data16
add
cltd
jecxz
int3
insb
lea
adc
push
inc
cwtl
xor
fistpll
sbb
adc
inc
out
stos
push
pop
and
mov
sbb
and
adc
call
pop
push
add
sarb
mov
stos
cltd
in
sub
and
subb
fiaddl
sub
mov
popl
into
ret
loopne
cli
mov
xchg
cmp
popf
or
xor
xchg
fwait
dec
xchg
add
arpl
mov
iret
test
rcrl
stos
movsb
mov
je
aaa
pop
push
sub
ds
ficomps
rcll
dec
out
incl
sbb
mov
rcll
jl
rcr
cmp
mov
and
loope
vandps
inc
adc
mov
ret
aam
or
push
stc
imul
mov
loopne
xor
pop
jb
mov
and
insb
out
jo
xor
sbb
shrb
inc
push
andl
aas
imul
dec
cwtl
add
sbb
lods
imul
in
ss
subl
mov
sbb
sub
rcl
push
sub
lret
jg
jmp
shll
inc
test
xor
jns
lcall
lahf
dec
out
lret
clc
fistps
sub
sbb
sbb
lods
and
ret
arpl
scas
rol
xor
push
fdivrs
shll
jmp
mov
test
sti
add
adc
sub
cwtl
in
or
and
lods
adc
pushf
outsl
mov
jns
setns
shll
cmp
data16
aas
cmpsb
clc
test
jge
dec
jp
fstenv
xchg
das
add
sbb
shrb
imul
sbb
add
es
mov
inc
xor
shr
push
sarb
mov
dec
xchg
xor
sub
or
fcmovnbe
int
shlb
clc
pop
aad
jae
sahf
mov
sahf
xchg
test
pop
or
xchg
sub
in
or
jnp
mov
adc
sub
lea
popa
loop
test
cwtl
popa
das
fisubs
enter
ret
mov
jb
aam
or
fcoml
mov
dec
pusha
jmp
repnz
out
cli
pop
cwtl
mov
ss
sbbb
in
movsb
addr16
add
imul
mov
mov
fisttpl
inc
icebp
inc
ja
call
ds
pop
push
cmp
jecxz
cmp
inc
pop
jmp
sub
xchg
nop
popa
mov
mov
mov
pop
fdivrp
daa
movsl
or
in
pop
xchg
push
out
xlat
push
sbb
popf
xorl
sahf
pop
xchg
push
push
call
jno
imul
dec
dec
sub
cmp
push
loope
outsl
adc
add
xor
loop
jmp
push
push
push
stc
sub
cmpb
and
xchg
add
mov
dec
fadds
lods
dec
sti
xchg
daa
loopne
das
xor
les
dec
xchg
je
mov
lods
sub
push
and
add
pop
add
movsb
lret
aad
inc
mov
dec
push
and
ret
and
push
ret
icebp
lods
sti
mov
pop
xchg
testb
xchg
scas
xlat
xor
xor
adc
jmp
test
es
mov
int3
jo
cmc
and
mov
xlat
xorl
fs
adc
pop
jp
aad
sub
ss
push
cli
mov
test
lret
xor
test
sbb
inc
imulb
xor
les
mov
and
mov
push
repnz
stc
repz
cmp
mov
cltd
in
arpl
cmp
enter
loopne
sub
ret
sbb
mov
xchg
sahf
out
sub
and
ret
push
mov
jb
enter
std
sbb
aam
dec
jl
stos
xorb
pop
cmp
cmp
daa
jge
mov
inc
xor
cmpsl
inc
push
stos
imul
gs
dec
pop
popa
es
xchg
jb
or
ja
and
inc
popl
stos
lret
aam
xchg
adc
xchg
int3
scas
push
pop
scas
adc
icebp
sbb
mov
adc
or
jge
mov
incl
mov
sub
test
dec
xchg
xlat
mov
dec
jp
das
mov
pop
jo
add
lock
sbb
adc
jo
mov
cmp
aas
jo
in
lret
adc
jo
jmp
pop
lods
cli
enter
shlb
jl
orb
addl
add
dec
lcall
cmc
mov
mov
stos
cmp
popl
hlt
stos
and
imul
in
inc
inc
loop
mov
xchg
or
pop
add
xchg
mov
add
test
shl
sbb
insl
mov
mov
pop
rorb
loopne
mov
mov
push
push
lea
push
lock
scas
insl
fcompl
call
shl
out
mov
sbb
xchg
call
inc
lcall
pop
loop
or
and
add
mov
xchg
in
out
mov
std
je
mov
fnstenv
cmp
imul
pusha
dec
dec
sbb
cmp
loop
fdivs
lds
movsl
jbe
clc
jmp
and
sub
mov
push
int
inc
xor
dec
push
inc
cwtl
xchg
jns
cltd
cld
xor
bound
sub
roll
sbb
aaa
aam
fcoms
jbe
imul
pushf
in
push
jbe
cs
xor
dec
push
les
ljmp
xchg
sahf
repz
loope
push
or
sub
outsl
and
out
cmpl
pop
stc
scas
icebp
fs
push
mov
jb
loopne
cmpsl
add
in
lret
push
sub
pop
out
repnz
inc
jo
pop
xchg
or
bnd
shlb
cmpsb
movsb
mov
loop
mov
pop
xor
cwtl
xor
and
jg
inc
add
sub
mov
cltd
std
repnz
cmp
push
cli
shrl
xor
lea
jle
pop
addr16
cmp
fstps
fwait
sub
mov
push
clc
xchg
and
push
xor
or
adc
and
daa
xor
cmp
fbld
pop
mov
pop
xchg
fldt
push
xchg
or
cltd
lds
mov
rclb
mov
xor
jle
sti
mov
ljmp
inc
rclb
aaa
pop
add
or
pop
pop
dec
fldt
add
es
xor
xchg
ret
fsubrs
and
lahf
cmc
addr16
add
push
mov
mov
ficoml
into
fsubrl
push
shlb
add
and
push
push
std
mov
js
sbb
jmp
imul
cmp
rcrb
shlb
paddb
and
int3
fstps
neg
out
adc
shll
test
hlt
adc
adc
jne
mov
jno
cmp
jl
push
jne
push
cmp
sub
pushf
adc
repz
cmp
jcxz
inc
adc
cs
add
mov
and
sbb
mov
mov
bound
fsubl
jecxz
jp
mov
add
push
ja
jno
lds
xchg
cmp
jno
out
lods
pop
andl
ljmp
out
and
mov
push
mov
aam
jne
lret
push
or
addl
jo
fcomi
dec
bound
inc
push
sub
call
xchg
out
pop
shrl
mov
push
aaa
pop
popf
fsubrl
scas
mov
cmpsl
imul
sbb
iret
shlb
incb
cwtl
sbb
jge
jnp
arpl
sbb
mov
and
pushf
ds
pop
lret
into
mov
push
mov
aaa
adc
cld
jge
pushf
subl
mov
push
mov
mov
enter
scas
call
adc
dec
popa
ficomps
jle,pt
sbbb
pop
sarl
rep
cltd
dec
cmp
test
sub
jo
test
int3
daa
jne
pop
push
mov
add
stos
addr16
sub
aaa
stos
xchg
mov
sbb
and
cmpsl
inc
enter
insb
inc
mov
popa
cmp
rcl
stos
outsb
or
mov
jl
jo
loopne
pop
int3
js
inc
add
xor
test
cld
cmp
xchg
cmpsl
shll
repnz
jge
adc
jl
pop
dec
aam
call
pop
gs
adc
sub
and
dec
imul
std
fldcw
shll
and
emms
popl
push
cmp
or
jb
sti
pop
mov
push
insb
ja
pushf
xchg
cltd
inc
adc
sahf
cltd
ja
shlb
adc
mov
lret
jno,pn
insl
sbbb
sub
jg
fsin
sahf
inc
cltd
pop
xor
lret
sub
xchg
xorl
dec
sbb
push
test
sub
cmp
pop
shll
insl
mov
xchg
pop
std
mov
fcomp
enter
mov
icebp
jg
test
inc
inc
push
loope
out
mov
adc
mov
sbb
iret
xor
jns
mov
pop
sub
adc
out
int
cmp
mov
or
adc
in
lahf
clc
inc
push
sub
repnz
je
or
jne
les
xchg
lea
adc
leave
fcomp
int3
cmpsl
into
sub
cmc
inc
inc
mov
jno
loope
ja
sahf
sub
inc
inc
shl
xor
jb
mov
mov
dec
and
je
add
cmp
cmp
push
lods
movsl
fldcw
pop
lock
loope
subb
stos
cmp
xlat
push
dec
in
xchg
sbb
mov
mov
dec
xchg
sbb
out
jmp
mov
lds
roll
imul
sbb
sbb
or
lahf
cmp
pop
cmp
inc
aaa
pop
inc
cmpsl
sub
mov
jno
cmp
cwtl
inc
lret
pop
dec
test
inc
mov
ret
xlat
jb
jb
push
cmp
and
inc
add
pop
mov
loop
fwait
stc
dec
mov
cmpl
imul
mov
je,pn
or
push
out
sahf
rcr
and
cltd
fwait
push
cli
inc
sub
not
mov
iret
jle
inc
or
dec
cmp
xchg
incl
sbb
clc
roll
inc
mov
shlb
mov
mov
xchg
xchg
inc
dec
cmp
sbb
sub
sub
fbld
mov
pop
xchg
inc
pop
outsl
addr16
pop
cwtl
enter
jnp
iretw
aad
or
jmp
mov
rclb
or
cltd
sti
cmp
out
aaa
cmp
out
fsubl
ret
xchg
clc
sti
xor
mov
or
and
dec
ja
or
mov
sbb
mov
cmp
mov
pop
sub
fmul
add
jmp
ss
push
inc
inc
xchg
cltd
lds
fisubl
xor
jns
add
cmp
sarl
pop
outsb
pop
or
cmp
fsubs
ja
pop
std
int3
xchg
sbb
or
jle
insb
das
ljmp
outsb
xchg
sbb
adc
jmp
jg
xchg
jp
dec
push
nop
jbe
mov
pop
push
xchg
outsl
sbb
or
ds
fdivrs
ret
movsl
out
lock
sbb
inc
dec
jmp
aam
aad
stc
sub
fisubs
and
fmul
push
pop
aad
pop
jnp
roll
and
ret
shrl
icebp
mov
loopne
jne
xor
enter
jns
stos
sbb
cmc
pusha
stos
sahf
dec
shr
in
jecxz
mov
add
shl
lods
cltd
or
ret
push
jle
jecxz
inc
enter
and
cwtl
aad
inc
jns
dec
mov
lock
dec
scas
sbbb
ret
and
jge
sub
and
stos
mov
dec
mov
push
adc
sahf
nop
mov
aam
ljmp
inc
inc
jno
shrl
sarl
mov
hlt
es
mov
lods
inc
xchg
ljmp
xlat
stos
pcmpeqw
sbbb
add
inc
in
stos
lret
shll
add
jle
into
pop
decb
jno
push
mov
popw
xchg
rcrb
cmp
test
shl
fcmovnu
in
jle
xchg
pop
adc
in
test
in
and
pusha
mov
clc
xchg
in
ljmp
xchg
push
lods
and
or
mov
fs
dec
push
xchg
push
scas
sub
shrw
lea
dec
ficomps
int
or
add
ja
sbb
jnp
ret
nop
jle
popf
inc
in
cmc
fimuls
mov
pop
int3
jg
aaa
adc
pop
ss
repz
fdivrs
ja
pop
cmp
mov
ret
adc
cs
xor
gs
jg
mov
negb
sbb
sbb
cli
mov
stos
andb
enter
or
push
stos
adc
sub
cvttps2pi
xlat
divl
test
fadd
outsb
cmp
shll
in
mov
mov
rcrb
cmc
jg
inc
sub
xor
out
add
out
sub
adc
add
and
popf
daa
popf
dec
push
popf
in
int3
test
mov
push
xchg
xchg
and
in
outsb
lea
das
aam
call
mov
add
cld
xor
repz
arpl
adc
mov
fidivrl
mov
testl
fcoml
pop
movb
mov
fcoml
scas
jb,pt
daa
sahf
movsb
je
and
dec
sbb
sbb
in
adc
push
fwait
xchg
pop
pop
adc
shr
mov
ljmp
gs
lcall
outsb
mov
xor
sub
lss
add
lret
push
pop
lfs
pushf
push
lods
std
sahf
stos
lods
mov
iret
xchg
popf
mov
dec
push
movmskps
jbe
push
lods
adc
mov
fs
out
repnz
sbb
fidivs
xor
xchg
sbb
sub
pop
insl
and
movb
ret
and
jge
sub
out
out
xchg
inc
mov
and
push
out
cmc
fistl
shll
jmp
aaa
sub
loop
frndint
and
pusha
adc
lret
push
mov
aad
cmp
int3
push
mov
xchg
or
pusha
aaa
cmp
pop
int3
ljmp
sarb
inc
cmp
addr16
xchg
fwait
adcb
sbb
pop
out
mov
xchg
sub
rcl
cmp
inc
sub
dec
pop
pop
inc
push
pop
sbb
jl
jg
push
ror
pop
jmp
lret
xchg
lret
sbb
loope
test
in
js
subb
adc
call
je
mov
or
fmull
jo
pushw
test
sbb
loopne
mov
test
xchg
pop
cli
cld
push
mov
andl
xchg
sbb
out
rorb
repnz
xor
bound
fstps
cmp
insl
cmp
les
xchg
add
pop
testl
ljmp
enter
mov
out
hlt
rolb
sbbb
mov
sub
ret
inc
pand
outsl
loopne
sub
adc
addr16
shll
cmpsl
lcall
test
loopne
sbb
das
xor
ret
push
jns
sub
xor
xchg
push
cs
dec
cmpsl
inc
out
jg
imul
int3
push
sbb
add
pop
iret
rcrl
pop
ja
add
and
stos
dec
jp
sub
test
and
mov
test
sbb
cmp
push
mov
adc
ds
shl
xchg
sahf
out
dec
pop
xorb
sahf
aaa
es
popa
pop
mov
data16
sub
fwait
stc
cmpb
dec
push
std
and
imul
adc
lds
xchg
movsl
in
pminsw
repnz
jns
pop
jo
fwait
sub
cmpsl
or
lea
inc
fsubrp
xor
sti
and
pop
mov
dec
mov
jo
mov
scas
cmp
lods
and
int3
in
insl
and
sbb
sbb
lods
mov
imul
add
mov
pop
inc
mov
mov
inc
cmp
pop
pop
push
movsl
icebp
icebp
lock
dec
orps
pusha
dec
xchg
mov
out
fistpll
es
fadd
in
mov
xor
jmp
movsl
imul
xor
ret
inc
je
xchg
hlt
dec
jmp
ds
dec
dec
fsubrs
pushf
test
imul
sahf
xchg
rolb
jg
inc
pop
call
sbb
enter
jne
mov
jle,pt
pop
je
xchg
mov
test
jno
mov
pop
les
arpl
add
xor
adc
xchg
sahf
pop
xor
out
mov
dec
push
and
pop
mov
loopne
jp
imul
sahf
mov
cmp
out
adc
mov
jb
mov
push
sarb
push
dec
mov
in
mov
pop
jno
outsl
cmp
repz
lcall
pop
gs
inc
bnd
pop
cmp
cmp
sbb
loopne
call
pop
cmp
and
cwtl
out
sub
cmp
rorb
push
mov
push
inc
andl
in
out
and
sub
xor
stos
movsb
xorb
fs
vpor
fs
adc
outsb
adc
or
xor
push
pop
mov
cmc
jg
xchg
adc
mov
jecxz
xchg
dec
xlat
xchg
mov
lret
flds
das
stos
cmp
leave
mov
insl
enter
inc
jb
mov
daa
ss
and
scas
rcrb
xor
ss
lea
mov
mov
pop
mov
jae
shrl
sbb
daa
clc
sub
pop
mov
ret
or
lods
pop
out
cmp
rcrl
ds
sti
jne
out
add
shrb
inc
mov
cmc
cltd
cmp
adc
sub
jp
mov
inc
sub
add
mov
in
or
mov
pushf
xchg
jmp
cmp
push
rorl
in
or
lods
pop
out
gs
adc
mov
pop
push
scas
fcoml
and
insl
adc
shl
cmpsl
in
aas
jbe
sahf
cs
sbb
fisttps
test
insb
jle
out
cmpsl
fmuls
pop
cmp
ljmp
mov
loopne
pushf
mov
fcomps
cmp
and
sub
dec
stc
xor
mov
ss
lea
clc
jne
mov
jnp
loopne
push
mov
or
mov
or
test
push
and
ss
adc
iret
rclb
movsb
jae
dec
lods
int
insl
int
sbb
adc
fisubrl
inc
lea
add
xchg
mov
insb
or
rcl
pusha
sub
mov
les
sbb
rcrl
jb
jmp
dec
popa
sub
sarb
lea
pop
jae
shll
inc
pop
pop
xchg
pop
mov
cmp
pop
out
sbb
mov
sub
jecxz
rclb
xchg
addb
push
cltd
enter
pop
js
iret
std
inc
test
adc
push
aad
jle
or
dec
aam
adc
mov
adc
mov
jno
mov
cli
testb
stos
arpl
loopne
mov
mov
jle
std
cmc
inc
push
and
or
test
std
fsts
push
rcll
xor
xchg
pop
inc
out
subl
dec
dec
ret
xorl
mov
hlt
inc
add
sbbl
out
mov
dec
leave
cmp
sub
push
xor
jg
sub
daa
outsb
daa
mov
cmp
push
mov
mov
or
je
push
dec
in
inc
sbb
outsl
mov
ret
loope
dec
in
jmp
adc
outsl
icebp
mov
add
xor
mov
inc
popf
repnz
test
icebp
sbb
pop
mov
inc
and
sub
mov
aas
mov
mov
add
daa
loop
xchg
icebp
out
lea
fs
fistpl
jns
fsubs
pop
mov
mov
bound
insb
inc
xor
cmc
in
out
pop
push
sbb
cmp
push
mov
sub
push
outsb
sub
adc
sbb
outsb
xor
jne
and
enter
cmp
out
sbb
pushf
scas
sti
mov
adc
jge
adc
dec
icebp
xchg
push
bound
cmp
scas
loopne
ds
out
jno
rcll
pop
faddp
insb
adc
pop
in
lahf
pop
xchg
push
xchg
pop
repz
mov
cmc
pop
loop
test
xor
iret
dec
push
sub
mov
pop
mov
jns
std
push
push
push
jb
pusha
int3
jae
jmp
test
push
xlat
inc
sbb
dec
mov
inc
lds
cs
icebp
int3
pop
lds
add
lds
lret
into
sbb
sbb
mov
in
and
or
fs
int
adc
xchg
negb
jle
fsubp
into
ja
mov
in
mov
lahf
adc
and
sub
pushl
ret
es
mov
aad
cli
pushf
shlb
add
scas
or
ss
adc
leave
mov
mov
popf
std
cmp
test
notl
push
test
add
fld
lea
out
ret
inc
push
push
ss
dec
lret
scas
cltd
mov
mov
xchg
stos
daa
mov
xor
pop
xchg
ror
cmp
xor
push
outsb
push
inc
and
in
fmulp
jmp
pop
ja
jp
pop
enter
inc
out
cwtl
negb
xchg
in
mov
add
sahf
ja
pop
fcoms
xchg
fwait
daa
ret
pop
into
bound
ja
mov
outsl
add
sub
outsb
mov
sbb
and
jp
cld
sub
rolb
xchg
loope
mov
dec
mov
pop
andl
and
cmp
mov
aas
jg
push
cwtl
dec
and
pop
add
sub
adc
lcall
mov
or
mov
or
orl
lret
aam
cmpb
jecxz
je
mov
and
fldenv
mov
mov
icebp
jne
jg
pop
inc
mov
lods
dec
or
in
push
xchg
push
pop
rorl
jecxz
xchg
stc
mov
sbb
pop
adc
inc
lcall
mov
adc
sbb
test
pop
ror
mov
mov
mov
mov
aad
mov
andl
fistps
test
cmp
nop
les
or
sbb
mov
mov
cltd
adc
cmp
sub
hlt
dec
inc
pop
lcall
test
icebp
push
sub
shll
mov
dec
mov
xchg
mov
sub
insb
inc
xor
sbb
clc
lahf
add
sti
outsb
stos
xor
push
fstl
ljmp
jl
test
add
je
xchg
add
cwtl
cmp
test
add
call
out
arpl
lret
bound
lret
cmp
sahf
rcll
leave
lock
sbb
call
test
and
pusha
cwtl
adcb
and
je
jp
xchg
push
leave
int3
pop
push
test
dec
mov
mov
sub
ss
push
fwait
jbe
int
push
sbb
rcrb
mov
test
movsb
insl
fldcw
flds
ficoms
mov
mov
neg
dec
xchg
cmp
adc
aas
insb
neg
xchg
push
and
loope
xchg
inc
je
push
push
ja
dec
adc
andl
je
mov
pop
add
ror
ret
test
movsb
pop
mov
dec
inc
pop
dec
xchg
movsl
mov
inc
and
push
fistpl
add
xchg
das
leave
lods
ss
pushf
jns
push
xchg
cmovno
lret
cmc
imul
stc
sub
push
dec
outsl
mov
jb
and
push
fcoml
lods
push
les
cld
mov
dec
inc
rcll
popf
cli
sub
push
inc
jae
or
pop
add
cwtl
data16
or
pop
mov
push
shlb
loope
sub
shlb
nopl
popf
scas
lods
inc
add
and
or
sbb
scas
sub
and
loop
inc
xchg
mov
xchg
xor
insb
inc
add
sub
pushf
xlat
jmp
cld
pusha
lahf
mov
arpl
inc
or
xchg
push
adc
dec
outsb
xchg
push
daa
movsb
negb
clc
addr16
iret
inc
dec
popa
jecxz
jns
inc
nop
xor
push
comiss
cmpsl
jns
mov
movsl
xchg
popf
xchg
cmpl
cmpsb
xor
daa
mov
adc
dec
sub
xor
loopne
pop
cmp
xchg
push
vpackssdw
and
lods
mov
fcomps
xchg
pop
xchg
xchg
sbb
add
mov
jb
lcall
lds
xlat
add
outsb
nop
mov
testl
testl
int
dec
ficoms
ds
or
scas
jb
ret
jns
in
in
ss
fwait
vpcmpeqw
jg
test
mov
and
mov
fidivl
arpl
and
xchg
or
xlat
aas
mov
adc
pop
sti
cmc
jl
pop
pop
fimull
pop
nop
jmp
jge
adc
fisubrs
test
jnp
adc
imul
jge
pop
mov
dec
sub
enter
fwait
daa
lret
adc
das
xor
mov
and
and
int
jno
shlb
inc
mov
mov
jne
into
inc
movsb
sahf
ret
aas
lcall
mov
inc
xchg
int
scas
and
xchg
mov
and
test
dec
dec
dec
xchg
or
pushw
push
mov
into
cmpsl
aaa
ljmp
add
inc
mov
fcmovu
xchg
lret
fcomps
stc
movsl
sub
call
xor
xor
mov
sub
sti
sahf
pop
cltd
push
cmpsl
ror
add
cmp
sub
jg
add
mov
lahf
sub
rcl
cmpsl
push
out
out
lret
aaa
addb
xor
or
push
cmp
mov
mov
loopne
xchg
arpl
push
es
pop
pop
dec
push
js
bound
mov
fstps
out
lods
jae
cwtl
rorl
inc
add
movsb
mov
aas
mov
stos
cmc
out
aam
rorb
test
xchg
test
mov
outsb
dec
je
push
test
movsl
popf
xor
aad
repz
imul
add
add
and
dec
or
add
jnp
add
fcompl
ss
add
mov
cli
jmp
aaa
adc
loopne
aam
leave
int
mov
mov
push
mov
fidivl
sar
push
xor
stos
inc
int
fsubl
mov
push
push
int
movsl
fidivl
popa
jg
xorb
aad
rolb
ficoms
sub
jmp
lods
call
inc
mov
jge
or
mov
jmp
adc
mov
add
aas
adc
mov
dec
mov
push
jno
loop
leave
insl
xchg
pop
mov
ret
jl
cmp
mov
out
xor
shl
outsb
jge
inc
repz
lock
gs
int3
adc
ret
push
xor
push
xor
xchg
xchg
add
lcall
scas
sub
sti
push
mov
out
sub
dec
in
push
lea
movsl
shlb
mov
in
inc
and
cmpsl
or
stos
lret
add
inc
stos
xchg
fwait
ja
imul
mov
ja
es
lret
mov
push
shll
sub
pop
daa
ja
mov
jne
xor
fstpt
ja
test
popf
xchg
dec
fbld
xchg
xor
in
aas
jne
es
in
int
jne
div
cmp
call
inc
ficoms
pop
cltd
and
add
inc
call
push
mov
pop
sub
pop
shr
jecxz
cmp
adc
jmp
cltd
movsb
push
pop
xchg
sbb
fdivl
push
xchg
scas
mov
jno
lcall
mov
push
sbb
adc
es
pop
xchg
lds
xor
std
sub
mov
or
in
in
loopw
dec
xor
xlat
adc
inc
mov
mov
stos
sahf
jno
pusha
jg
repnz
out
shlb
stos
gs
xchg
xchg
push
xor
shll
popf
push
add
mul
nop
add
in
dec
sub
push
mov
jmp
pop
or
fadds
xchg
shrl
cmp
pusha
loopne
shll
outsl
out
pop
fcoms
test
sub
shll
jp
push
aam
push
add
lahf
test
dec
inc
int3
mov
lds
loope
popf
inc
lods
sbb
xchg
sbb
arpl
in
mov
sub
sahf
sti
xchg
cmp
out
pusha
fwait
sub
xor
fcmovnb
xchg
sub
leave
xlat
cld
lock
das
test
pop
and
orb
ret
and
ja
decb
in
push
jns
push
cmp
mov
jnp
or
mov
dec
subl
jo
enter
cwtl
adc
jmp
xchg
jecxz
xchg
out
dec
pop
insl
les
outsl
pop
imulb
push
aaa
mov
pop
in
adc
aas
imul
loop
sub
cltd
cld
popa
or
sahf
push
in
xchg
aam
scas
rcpps
fmull
jmp
cmp
cmp
shlb
xchg
mov
lret
xchg
sub
mov
mov
je
push
aad
cld
mov
sub
push
mov
mov
orb
or
test
jecxz
icebp
push
gs
sbb
dec
fs
repnz
adc
push
pop
inc
mov
int
jecxz
mov
inc
and
ret
out
cmpsl
cmc
movsb
loopne
mov
in
sub
inc
cwtl
mov
aad
aad
mov
sub
add
xor
aaa
outsb
pop
pop
cld
insb
in
loopne
pop
sbb
mov
adc
dec
mov
shll
jecxz
cmpsl
loopne
out
add
lods
std
cmp
xchg
pop
pop
and
lock
test
repnz
sbb
jl
push
shlb
imul
xor
and
fstpt
ret
mov
nop
pop
int
jnp
sbb
pop
inc
inc
or
jbe
add
xchg
sub
aad
inc
cs
cmp
lock
sbb
lods
inc
jmp
lcall
mov
push
in
bound
pushf
and
xchg
jmp
adc
insl
aad
jmp
cmp
xchg
xchg
mov
xchg
fwait
jl
int3
or
call
iret
roll
cwtl
das
mov
popa
cwtl
stc
leave
insb
adc
fists
and
sbb
mov
ss
xchg
xchg
pop
inc
pusha
xlat
iret
iret
ss
lods
inc
lret
insb
dec
mov
mov
mov
push
mov
sub
jp
inc
mov
rorb
hlt
hlt
cmpsl
xor
push
adc
and
push
sarl
or
in
lea
push
xor
repz
shl
push
arpl
lret
dec
loopne
aaa
fidivrl
sub
mov
and
fneni(8087
mov
les
pop
sbb
in
mov
popf
fldl
mov
inc
push
adc
pusha
int
pop
pop
movsb
sti
inc
mov
cmp
sub
shll
and
push
fwait
popf
mov
and
or
mov
push
out
pusha
pop
into
popa
or
insl
xchg
adc
cmc
jno
imull
sahf
lret
push
mov
test
test
adc
mov
and
mov
inc
adc
out
shrb
mov
rcll
dec
orl
orl
lret
dec
lret
std
ljmp
bound
lret
xor
ret
sbb
mov
addr16
rolb
mov
mov
add
testl
jl
rcr
cmc
inc
pop
cmpb
dec
mov
iret
mov
dec
nop
popf
xchg
add
push
mov
ret
cmp
xchg
and
mov
sbb
mov
adc
mov
mul
cmp
xchg
cli
mov
lock
mov
cmp
adc
adc
mov
push
cld
push
mov
movsl
fsubs
jmp
ss
dec
mov
js
mov
addl
call
daa
jne
icebp
push
loopne
mov
mov
mov
fstps
hlt
push
insl
pop
xlat
aaa
ljmp
ja
repz
clc
adc
xchg
jp
nop
pop
in
inc
cltd
push
cmp
bound
shll
xor
shlb
cmc
adcb
bound
inc
xchg
xlat
movsb
inc
pop
push
imul
xlat
gs
hlt
pop
push
inc
enter
mov
pushf
out
xchg
stc
repz
lea
adc
jo
movsb
pop
out
inc
sti
adc
aam
adc
movsb
sti
stos
inc
mov
ficoms
sub
sahf
orl
into
push
fisubrs
dec
movsl
lret
pop
mov
xor
pop
call
and
test
adc
dec
mov
stc
jb
arpl
aaa
push
incl
jp
ja
push
decl
movsb
jb
int3
push
add
roll
adc
or
or
fstpl
ficoms
cmc
lods
rcll
paddsb
mov
ss
ja
call
hlt
jmp
aad
inc
xchg
cmp
mov
sub
lret
pop
sub
sbb
push
push
test
or
pop
push
xor
push
jns
mov
sub
jae
jbe
add
inc
fisubrl
call
decb
mov
les
pop
nop
inc
rcll
mov
scas
inc
cmp
jle
mov
push
test
inc
sti
cmp
arpl
mov
popa
push
cli
cmp
imul
mov
and
jecxz
rol
std
or
mov
push
aaa
mov
std
call
cltd
dec
shrl
shrb
lcall
fsubrl
and
jno
rcll
dec
repz
aad
mov
cmovb
inc
add
inc
fsts
dec
lret
dec
sub
aad
cmp
divb
sbb
dec
ja
popa
dec
push
jae
dec
cmc
adc
pop
push
mov
out
xor
dec
jle
xchg
nop
sbb
lahf
adc
test
xor
xor
test
out
lcall
adc
in
shll
dec
movsb
mov
or
inc
popf
sub
xchg
and
cmpsl
xchg
dec
sub
frstor
imul
std
out
push
dec
jmp
or
xchg
addr16
xor
dec
and
insl
lods
jns
mov
lods
insb
lods
mov
mov
xor
add
cs
out
jmp
inc
mov
movb
fcompl
inc
stos
sbb
jmp
and
movsl
call
js
mov
stos
xchg
icebp
jo
mov
hlt
pop
int
ffree
in
inc
div
orb
loopne
sub
and
fwait
lret
push
pop
and
int3
leave
mov
test
push
ss
arpl
dec
push
divb
shr
xlat
adc
jle
mov
leave
stos
jnp
repz
mov
inc
add
ss
jbe
das
pop
clc
insb
lods
or
je
jns
pop
mov
lods
push
repnz
insl
cs
in
adc
ja
std
inc
xchg
mov
xchg
jnp
outsl
push
or
or
fnstcw
lods
and
imul
push
mov
dec
cmp
and
and
push
sahf
sub
inc
dec
pop
xor
jecxz
xor
xchg
int3
call
loope
jns
adc
inc
andl
xchg
xchg
xlat
inc
xor
shll
rcl
mov
pop
add
les
popa
mov
outsl
cmpsl
je
ret
in
xchg
sarl
insb
pop
loope
lea
push
ret
movsb
popf
dec
push
mov
xchg
fwait
mov
push
out
mov
bound
pop
mov
push
lcall
cmpsl
int3
inc
add
cmp
fistl
stos
sbb
xchg
pusha
repnz
pusha
and
xor
imul
rcrl
mov
jbe
cwtl
add
mov
mov
cld
cmpsb
sbb
in
jp
mov
fdivl
jmp
and
inc
and
xor
xor
xor
dec
push
and
js
mulb
inc
shll
ja
jmp
ss
add
pop
ret
fdiv
adc
xchg
adc
enter
sub
stc
and
scas
inc
push
jbe
sub
sbb
test
data16
ds
adc
xor
int3
dec
add
add
pop
jecxz
outsb
jns
dec
or
scas
sarb
mov
xchg
mov
push
push
in
dec
push
xchg
cmp
jnp
push
stc
mov
dec
subps
cmp
movsb
cwtl
mov
gs
add
mov
xor
ljmp
sti
call
xor
push
pop
push
ror
jne
imul
call
inc
iret
in
rclb
sbb
and
and
cmp
xchg
or
xlat
mov
push
xchg
mov
push
or
test
clc
sub
inc
sub
and
and
lret
mov
xchg
test
dec
test
flds
test
subl
jne
push
sub
pop
push
pop
adc
lea
pop
aas
and
inc
xchg
mov
shlb
dec
adc
mov
jne
pop
loope
lock
jne
cmp
movsb
mov
jo
enter
jae
or
testb
pop
mov
sub
add
jl
out
negl
icebp
stc
loope
adc
cli
std
mov
rcll
xor
sbb
mov
and
mov
outsl
movsb
sub
xchg
cmp
and
inc
aas
sub
sub
pop
adc
cwtl
push
call
push
and
lcall
outsl
inc
out
sti
into
mov
push
in
cmp
inc
xchg
jmp
lcall
daa
mov
out
jbe
aad
add
lret
test
adc
mov
in
repnz
stc
shlb
scas
jge
or
adc
add
mov
sarb
out
add
and
mov
jg
jmp
sbb
inc
sbb
scas
push
jo
out
sub
pop
cld
addr16
adc
pop
add
sarb
loop
test
dec
fbld
push
cltd
dec
inc
pop
xorb
pop
cwtl
mov
push
cwtl
pop
mov
call
loopne
ja
mov
cli
std
xchg
fistps
mov
xchg
ss
or
mov
in
xchg
sub
pusha
sub
mov
cmpsb
mov
cltd
adc
xchg
add
sbb
xor
push
inc
cmp
repnz
pop
imul
movsl
mov
sbb
xor
jge
inc
xchg
add
arpl
movsl
subb
in
mov
jno
dec
not
mov
and
ja
push
push
sbb
and
inc
bnd
or
xchg
lds
or
push
aaa
mov
sub
pop
leave
mov
jae
cmp
int3
adc
std
lahf
outsl
sbb
add
movl
test
int
int
fbld
clc
movsl
and
ljmp
dec
into
jmp
jecxz
lock
xor
pop
pop
inc
mov
jo
cmc
dec
adc
mov
sub
push
stos
outsb
pop
icebp
xchg
and
inc
in
jns
mov
ja
cmc
push
sti
scas
sub
or
cmp
andb
loop
test
sub
or
xchg
sub
mov
mov
inc
push
shll
adc
pop
xchg
into
lods
xchg
shr
dec
out
mov
push
xor
cwtl
pop
xchg
mov
rcrb
in
nop
ljmp
std
jg
sahf
add
xorb
rep
push
dec
ja
inc
fsubl
das
jge
and
push
jge
push
test
inc
dec
xchg
lahf
mov
in
mov
cld
movsl
and
sub
repz
and
jns
cmp
sbb
out
inc
imul
push
aaa
jp
call
xor
aad
pop
inc
sub
insl
sbb
addb
sarl
inc
repnz
xor
sub
pusha
xor
mov
ljmp
xchg
add
and
iret
and
push
mov
xor
pop
push
pusha
inc
cmp
ret
sub
jmp
imull
pusha
mov
fldcw
jg
mov
sub
push
mov
lret
xchg
fcmovnbe
je
mov
jbe
and
movsbl
push
fidivs
cmpsl
cmp
xor
mov
mov
out
pop
mov
ss
fwait
mov
call
bound
add
enter
xor
jo
dec
adc
xor
aam
cmp
jmp
and
sarl
shlb
or
mov
loopne
jle
mov
push
xor
shll
outsb
hlt
or
push
add
out
insl
bound
fwait
jo
mov
pusha
in
jmp
xchg
sbb
nop
inc
jecxz
sub
fcoml
ret
pop
arpl
sahf
sbb
jbe
pop
add
imul
inc
xchg
outsl
xchg
jae
sub
and
push
out
sbb
cltd
jnp
in
xchg
popa
aad
sahf
bound
xchg
fimull
ret
mov
out
dec
mov
sbb
sbb
or
xchg
fwait
cmp
jmp
jae
push
and
mov
mov
xor
gs
imul
addr16
out
out
nop
int3
aad
arpl
test
cld
push
pop
cmp
jp
loopne
mov
inc
push
sub
push
out
xchg
mov
cmpsl
fisubs
inc
ret
push
mov
jp
mul
push
lret
daa
test
pop
inc
sub
or
popf
repz
add
dec
cmp
inc
loop
pushf
stos
xlat
rol
dec
ja,pn
lret
nop
jno
dec
jne
stc
mov
sub
or
sub
xchg
xchg
into
push
mov
rcrb
icebp
mov
andb
lock
lcall
pop
pop
dec
lret
mov
inc
mov
adc
xor
aas
inc
into
arpl
xchg
into
mov
mov
pop
lcall
fistl
xchg
stos
push
dec
push
pop
stos
inc
rcrb
xlat
jb
add
mov
xor
in
xchg
sbb
lret
xchg
push
out
loopne
loope
mov
imull
repnz
and
sbb
mov
loop
jb
or
sub
addr16
movsl
sub
jne
xchg
add
mov
add
test
lods
ret
mov
sbb
xor
xchg
cli
fistl
iret
lret
mov
stos
js
add
enter
push
xor
push
shlb
ret
mov
adcb
add
xor
adc
and
cmpsb
fxch
push
or
jns
in
and
lahf
cmp
test
insb
scas
dec
cltd
in
cmp
out
in
lea
insb
push
push
mov
mov
push
lahf
pusha
xchg
movsl
or
fld
cli
cli
or
subb
mov
inc
pushf
or
and
mov
ja
inc
js
and
mov
mov
out
inc
es
inc
and
shl
das
xchg
cmp
imul
iret
out
fs
lds
cmp
out
xchg
mov
xchg
enter
int
add
leave
mov
fsts
fdivs
xor
data16
movl
js
push
and
lods
insl
adc
mov
pause
incb
xchg
and
dec
fisubrs
sub
aas
inc
jg
mov
dec
inc
adc
xchg
scas
add
shl
popa
sbbb
movsl
sbb
pop
sub
nop
pop
je
xor
lods
pop
inc
lahf
add
adc
ljmp
add
dec
insl
mov
shlb
stos
out
test
xor
mov
cs
stos
test
mov
in
movsl
mov
push
aad
push
jle
idivb
xchg
and
adc
push
inc
test
inc
icebp
in
aaa
test
aas
inc
pop
xor
pusha
adc
xchg
int
push
pushf
cwtl
lods
dec
mov
mov
hlt
push
jne
ds
dec
test
jge
insb
das
xor
sbb
mov
jp
xchg
in
mov
dec
cmpsb
ret
dec
jnp
hlt
in
test
or
out
xchg
and
sbb
cmpsl
out
xlat
lock
dec
mov
sar
sbb
add
adc
rcrl
xor
sbb
shl
shrl
inc
push
pusha
addr16
dec
and
dec
das
out
pop
addr16
sbbl
inc
cwtl
lcall
andl
data16
sbb
cwtl
inc
out
lods
mov
les
js
adc
xor
test
xor
sub
dec
out
mov
adc
jmp
pop
xlat
shrb
lahf
sub
sub
pushf
sbbb
push
into
and
test
fisubrs
pop
or
fisttpl
push
int
in
rorl
loope
mov
pushf
xor
xor
and
adc
lret
add
dec
xchg
pop
mov
cmp
rclb
dec
outsb
adc
or
sbb
jae
or
jne
lods
jnp
mov
dec
push
dec
outsb
addb
cmpl
sti
ja
and
xchg
pop
dec
pop
pop
icebp
lock
je
out
aaa
sti
repnz
mov
out
jecxz
cwtl
stc
add
jl
in
loope
lds
ret
mov
cmp
mov
loop
push
lock
iret
testb
outsb
loope
popa
sbb
push
add
jg
xchg
pop
and
jns
cmp
mov
fbstp
jbe
add
mov
or
xchg
push
jge
sbb
cmc
decl
add
lahf
push
mov
push
mov
in
les
fdiv
sti
mov
xchg
repnz
add
dec
cmpsb
test
push
mov
push
push
mov
pusha
ljmp
pop
nop
xor
lret
clc
fdivp
push
jo
pushf
adc
ljmp
ja
das
icebp
pusha
mov
lahf
sbb
out
outsl
stc
mov
or
ss
popf
pop
cs
add
inc
mov
inc
stos
repnz
negb
cli
and
daa
in
xchg
push
sbb
xor
or
test
mov
xor
jne
jg
pop
mov
insl
lods
add
fisubrs
lods
sbb
xchg
mov
push
test
adc
mov
lea
pop
or
xor
fsubs
imul
push
pavgw
adc
dec
int3
fcompl
insl
ljmp
pop
cwtl
pop
fists
jns
jmp
mov
pop
jmp
sub
mov
mov
pop
ret
mov
jecxz
adcl
sub
fldt
pop
cmp
push
push
jge
pushf
std
cwtl
mulb
mov
testb
stos
adc
fcoml
jge
cld
out
outsl
nop
mov
adc
fs
ror
in
mov
sub
shl
and
iret
jecxz
mov
dec
out
pop
outsb
sbb
imul
lret
aam
add
sbb
pop
xchg
sbb
loopne
inc
cwtl
xor
ffree
shl
push
or
leave
jae
aad
lret
pop
cs
mov
test
or
xchg
insl
push
notl
cmp
or
xchg
pop
ror
mov
pusha
xlat
scas
std
push
subb
or
outsb
adc
mov
dec
pop
std
test
or
in
dec
nop
cltd
stos
mov
mov
fldt
mov
sarb
sub
cmpsl
loopne
inc
mov
jmp
icebp
xor
xor
xchg
call
ficoml
ds
sbb
int
xchg
cmp
or
adc
ret
out
and
xchg
es
push
xlat
xor
xlat
lods
sub
fdivl
call
test
push
sub
mov
cmp
out
push
cld
push
pop
xor
xor
lds
xchg
aas
mov
add
mov
iret
xor
shrl
imul
outsl
xor
add
xorb
testb
xchg
xor
and
xchg
mov
xchg
xor
sahf
cwtl
mov
mov
jle
xor
mov
cld
aam
lods
gs
mov
popa
jecxz
lcall
add
mov
xor
pop
mov
or
add
mov
push
addr16
sti
cmp
jp
dec
jmp
inc
imul
ja
or
aam
jp
rolb
test
jns
inc
jo
aad
pop
pop
shll
mov
call
stc
jmp
dec
lea
cmpsb
jno
and
sbb
mov
sub
mov
mov
push
mov
pop
fcomip
pop
mov
add
sbb
lea
in
jne
sub
mov
and
sub
addr16
pop
xlat
or
inc
xor
mov
shlb
pop
or
jle
mov
xchg
inc
test
loop
in
das
daa
ljmp
ds
dec
je
sub
adcl
pop
xchg
test
stos
cmp
mov
xor
dec
jns
js
loop
lahf
mov
adc
add
stos
sbb
lcall
lods
gs
xor
xchg
xchg
movsb
insb
in
mov
sbb
or
scas
in
cmp
sub
mov
jb
push
mov
sahf
test
pop
lret
fldl
insb
shll
fstps
loopne
test
dec
test
jns
outsl
int
or
add
or
mov
pusha
imul
std
mov
xchg
mov
repnz
jnp
inc
fldt
mov
inc
addr16
adc
dec
into
or
jecxz
insb
and
addl
ror
xchg
fincstp
inc
fiadds
dec
movsb
adc
dec
fmuls
mov
sti
mov
pushf
test
push
jae
out
cmp
jne
out
shrl
or
xor
pop
sub
fldl2t
dec
mov
dec
jnp
pop
mov
mov
ljmp
push
sub
nop
push
xchg
stc
fiaddl
sbb
test
ret
hlt
sarb
xchg
dec
rclb
add
pop
adc
das
subb
inc
pop
pop
iret
int
sbb
inc
popf
or
mov
pop
xor
cmc
and
sbbb
out
mov
ds
pop
hlt
xor
xchg
xor
cmpsb
insb
lds
cs
mov
mov
hlt
push
xchg
imul
roll
add
popl
jmp
insb
fs
jns
ljmp
imul
arpl
icebp
and
out
loop
insb
mov
xchg
clc
cli
mov
cltd
add
pop
adc
lret
jae
mov
inc
inc
je
and
sub
mov
stos
mov
arpl
sbb
add
jo
inc
daa
andb
jl
push
add
xor
xor
xchg
rcr
pop
push
cmp
pusha
dec
dec
mov
icebp
or
mov
dec
sbb
or
and
inc
aas
xchg
icebp
jl
mov
aaa
mov
in
cmpb
sbb
iret
inc
pusha
and
mov
cmp
movsb
popf
inc
arpl
test
mov
sub
icebp
movsb
mov
subl
xchg
jno
cmp
push
mov
fistpll
or
rorl
hlt
xlat
pop
ds
xchg
jl
xor
or
push
xchg
les
insl
mov
jg
push
cltd
loope
add
inc
loope
mov
sarb
xlat
add
pop
xor
sbb
mov
cmp
ret
repz
outsb
rol
lcall
and
xchg
push
push
xor
add
jno
sbb
scas
dec
in
lods
pop
addl
pop
mov
mov
int3
out
fidivrl
pop
pop
mov
icebp
inc
xchg
in
xchg
fldenv
push
bound
xchg
dec
mov
out
jb
scas
mov
and
sub
outsb
push
sahf
add
fsubr
in
mov
or
sub
pop
mov
and
or
lret
cmp
iret
testl
jns
bound
push
jns
aad
jbe
push
and
movsb
mov
xchg
cmp
xchg
pop
fadds
int
cmp
xchg
insb
sbb
shrb
cwtl
and
lcall
gs
movsl
cs
or
fnsave
fisubs
cli
xorl
or
dec
out
out
cmp
cmp
gs
push
lahf
add
mov
and
cmpsb
cmp
pop
mov
sahf
imul
adc
pop
adc
stos
dec
push
insb
js,pt
sbb
out
sbb
inc
paddusb
ret
subl
arpl
iret
jne
inc
push
dec
pop
test
mov
cli
adc
add
pusha
xchg
inc
adc
mov
idivl
mov
rol
add
add
xchg
fs
aam
lods
call
sarb
inc
mov
cmpsb
inc
add
jno
insl
mov
mov
inc
jae
lods
into
mov
dec
hlt
or
jmp
inc
fildl
imul
sbb
cmpsl
lea
push
adc
push
xchg
lods
push
arpl
pop
loop
mov
pop
cwtl
and
xchg
mov
and
orb
or
mov
xchg
cmp
xchg
hlt
dec
loopne
ljmp
push
arpl
jae
lods
test
icebp
f2xm1
push
jns
out
jns
js
mov
insb
popa
cmp
js
std
dec
jns
adc
iret
mov
mov
dec
jg
popa
fistl
mov
mov
pop
or
sub
adc
loop
mov
scas
mov
or
mov
out
and
pop
lods
pop
push
mov
bound
mov
push
in
xchg
je
lahf
adc
push
sbb
jae
ret
push
and
sub
in
dec
sbb
cs
inc
fmull
pushf
cmp
pop
xor
addl
rorb
mov
popf
sbb
lds
or
or
stos
rcl
ret
dec
sub
xchg
mov
out
shll
fs
es
movsl
mov
or
test
xchg
push
bound
sub
inc
push
mov
andb
and
lock
movsl
or
lahf
inc
add
lods
div
dec
in
fistpl
jb
out
pop
repnz
inc
notb
in
fs
mov
in
sbb
int3
in
pop
mov
mov
pop
xor
call
xchg
repz
fiadds
xchg
cmc
lcall
test
mov
xor
inc
decb
mov
aas
shl
or
stc
das
int3
sub
clc
popf
popf
mov
sub
mov
lds
add
mov
inc
or
sub
leave
cli
mov
outsl
popa
stos
in
cmpsl
xchg
daa
dec
dec
lahf
add
mov
inc
scas
push
pop
jp
call
scas
jecxz
dec
fsubl
dec
xchg
lds
lea
xlat
cmpsb
sbb
or
ret
leave
jmp
subl
out
mov
xchg
push
mov
and
das
cmc
push
sbb
inc
pop
bnd
push
or
loopne
jmp
daa
mov
pushf
or
aaa
pop
in
rorl
or
fstl
in
jl
jle
popa
xchg
dec
push
cmp
mov
push
xor
fdiv
mov
or
jmp
popa
xlat
inc
cs
cmc
add
and
xchg
mov
lods
dec
scas
adc
negb
scas
fistps
sbb
or
pop
cltd
adc
dec
sbb
or
add
leave
out
jns
into
mov
mov
ret
aas
mov
sbb
pop
cmpsl
inc
addr16
dec
stos
in
push
cmpsl
mov
dec
add
jge
ljmp
gs
gs
xchg
mov
lcall
cmp
in
imul
or
sub
or
xchg
mov
fwait
inc
lods
dec
cmp
mov
ljmp
das
add
sbb
dec
inc
sbbb
add
mov
sub
and
sbb
dec
imul
jmp
lds
fwait
mov
push
in
jge
shl
daa
std
xchg
nop
cld
shlb
stos
push
jg
jp
push
cli
iret
adc
les
jmp
inc
stos
je
mov
pop
push
mov
mov
inc
mov
fmull
mov
push
or
sbb
inc
jb
adc
xor
xchg
lret
iret
mov
dec
movsl
dec
cmp
xor
sbb
jae
rcrb
and
sbb
dec
and
popa
movsl
mov
mov
jbe
fdivrs
negb
test
xchg
test
push
bswap
mov
int3
mov
das
popf
push
sub
iret
test
in
mov
or
dec
mov
push
in
xchg
jge
scas
inc
xlat
arpl
add
inc
scas
cli
out
adc
jp
lret
xor
insl
adc
test
ja
mov
pop
cltd
ds
xor
cmpsl
lcall
or
add
ds
mov
add
cwtl
fimull
inc
dec
jmp
xor
lret
fdivs
loopne
xchg
lret
cld
inc
jne
inc
imul
cmc
xlat
cmp
mov
ljmp
sbb
pop
inc
cmp
fidivrl
popf
adc
pop
call
push
inc
inc
xor
jb
inc
das
das
mov
fimuls
mov
stc
imul
jl
or
and
out
mov
add
test
test
movsb
sbb
ret
dec
xchg
adc
cmpsb
mov
and
dec
xchg
punpcklwd
push
sbb
inc
sbb
inc
xor
push
sub
sub
jnp
xchg
cmpl
mov
sub
jb
sbb
add
jle
cmpl
xchg
call
addr16
les
add
pop
push
push
loopne
fwait
mov
fdivrs
sbb
inc
mov
cmp
je
cli
dec
mov
mov
ss
popf
sbb
test
mov
call
cwtl
movsb
scas
cmpsl
in
dec
lods
or
or
in
jg
stc
shrb
cmc
pop
das
mov
in
push
adc
inc
mov
xchg
popf
push
adc
movntps
iret
sub
leave
xor
mov
out
divb
mov
or
ret
sub
cmp
hlt
xlat
dec
or
dec
mov
pminsw
sbb
xchg
loope
js
add
std
cwtl
dec
cltd
push
add
mov
scas
jg
stc
add
test
sbb
push
lods
ds
jecxz
inc
xor
data16
mov
inc
push
mov
insb
ljmp
push
aaa
jle
in
jb
int
inc
shl
js
inc
insl
inc
sti
cmp
inc
and
xor
pop
shlb
cwtl
xor
or
sbb
lahf
jne
and
in
ss
ljmp
pop
jg
lret
dec
and
adc
jne
mov
mov
je
jno
scas
mov
cmp
fistl
mov
insb
pop
mov
or
pop
mov
sub
push
std
ds
popa
iret
cmp
js
lret
add
sahf
fisubrs
daa
mov
es
xchg
push
jne
jne
sbbb
lock
or
enter
xchg
pop
mov
es
outsb
inc
mov
jo
into
mov
clc
mov
loope
stc
adc
fwait
cld
pop
jbe
jae
cmp
dec
mov
daa
jb
clc
lea
mov
jb
movsl
xchg
clc
imull
and
ffreep
adc
popf
mov
mov
outsl
dec
lods
insb
outsb
ret
gs
add
sbb
rol
adc
insl
aaa
pop
bnd
movsl
in
jo
popa
lods
mov
and
jp
ljmp
pop
pop
aaa
lds
movsl
mov
pop
or
nop
popf
jb
pop
cli
sarl
xchg
mov
sub
ficoms
cmc
pop
add
dec
loope
sbb
pmaxsw
push
add
inc
and
mov
mov
or
jl
inc
push
fnstcw
les
inc
fwait
and
loopne
pushf
push
sub
out
test
das
inc
fisubrl
mov
xchg
out
sahf
test
fisttpll
ret
imul
pop
cmp
push
jle
xor
fistl
xor
sahf
outsl
sarb
test
jo
xor
mov
mov
mov
mov
insb
std
adc
punpckhbw
cmp
mov
add
addl
cmp
in
lea
mov
loop
and
test
in
jecxz
jns
jnp
adc
std
lret
push
push
jg
jne
push
out
lds
and
sbb
push
add
out
adc
push
sbbb
aam
and
js
movzwl
pushf
arpl
lds
mov
imul
nop
mov
sarb
ljmp
adc
cmp
lret
xlat
jmp
and
lods
jnp
lahf
xor
outsl
xor
test
jne
push
dec
jo
sarl
sbb
shll
int3
pop
fcmovb
loop
sbb
imul
repnz
adc
xor
adc
xlat
push
imul
leave
insl
jb
ljmp
scas
add
arpl
push
clc
inc
push
sub
push
scas
mov
jbe
ja
and
enter
sbb
sbb
inc
cmp
xor
popa
inc
sbb
dec
mov
xchg
ret
cmp
and
fxch
pop
fildll
lcall
pop
pop
sbb
pushf
push
mov
jmp
faddl
adc
fwait
push
jns
ja
test
movsb
push
lret
cmp
sbb
inc
push
cmp
push
adcl
pusha
add
into
test
push
jle
add
lret
jl
or
or
inc
sarl
jbe
inc
push
dec
into
cs
jmp
add
xchg
push
mov
sub
in
mov
fistl
mov
sbb
jp
mov
sbb
in
inc
cmpb
xor
mov
sbb
sbb
mov
cltd
mov
shlb
mov
ret
clc
test
and
cli
or
push
ret
mov
dec
arpl
cmpsl
mov
sbb
mov
add
jmp
mov
or
stos
and
loopne
fimuls
loopne
ret
xchg
sub
and
sbb
in
aad
imul
push
inc
fsubl
inc
xchg
or
add
and
cmpsl
cmpl
jno
add
push
mov
test
shll
lods
xchg
cli
test
mov
mov
push
xor
aad
sub
lock
mov
dec
jb
push
jae
fsubrs
cwtl
sbb
ljmp
jge
dec
mov
jl
lcall
cmpsl
sbb
sahf
xchg
xchg
insb
add
dec
sub
out
out
dec
sub
xchg
sbb
jb,pt
fmull
hlt
mov
inc
pop
dec
add
shr
or
cmpb
cld
subl
cltd
mov
std
lea
xchg
or
idiv
add
insb
bound
nop
mov
inc
rclb
mov
rcrb
jb
mov
mov
jo
add
fldcw
dec
mov
pop
aam
push
sbb
or
test
cmpb
lahf
pop
insb
in
or
shrl
sub
cmpxchg
push
arpl
jl
out
mov
pop
push
xor
out
inc
xchg
mov
jg
test
push
jnp
popa
adc
push
mov
inc
mov
dec
jge
push
push
in
pop
mov
dec
and
mov
out
cwtl
mov
and
inc
test
mov
mov
and
xor
aas
je
sub
mov
and
sar
pop
rorb
sub
pop
push
add
cmp
std
xor
adc
je
add
inc
cmpsb
outsl
dec
inc
sbb
inc
sbb
pop
daa
ss
cmp
loope
das
cld
fs
mov
or
ret
fwait
add
dec
xorl
jo
cmp
mov
jge
fimull
loop
loopne
insl
outsb
pop
pusha
fbld
push
sub
cmp
aas
and
jo
or
lahf
fcoms
sbb
aad
mov
inc
aaa
mov
movsb
xor
xchg
dec
pop
xchg
inc
mov
lea
fwait
dec
mov
movsb
adc
mov
mov
mov
das
in
imul
xchg
outsb
leave
inc
repnz
nop
fistps
test
fildl
test
inc
mov
idivl
jbe
or
outsl
out
lcall
xlat
push
test
scas
jmp
inc
cmpl
mov
pop
mov
test
sbb
adc
movsb
addr16
in
rcll
mov
pop
dec
mov
sub
sarl
loop
orb
pop
leave
lahf
das
mov
loop
pop
fstps
cmp
xorb
call
xchg
cs
in
lock
fimuls
icebp
out
push
ret
xchg
push
and
adc
fsubrl
rorb
cmpsb
mov
in
xchg
cmp
xor
test
xor
imul
xor
test
nop
pop
std
xchg
into
movl
dec
insl
jns
cmpsb
out
pushf
popf
and
and
test
enter
bswap
jne
inc
int
or
cmp
cwtl
and
mov
fcoms
push
fistps
add
rorl
xor
rep
and
sub
movsl
xchg
push
cmp
int3
lahf
mov
pop
mov
mov
fsub
test
mov
push
ret
mov
int
movb
push
outsl
sub
sub
inc
je
and
jecxz
rcrb
pop
pop
and
ja
adc
cmp
insl
and
inc
mov
cmp
pop
inc
outsb
push
push
outsb
inc
repnz
sbb
mov
sub
jmp
sbb
scas
rclb
push
inc
andb
sub
movsb
fwait
loopne
pop
cmp
sbb
cwtl
repz
nop
cmp
and
mov
arpl
and
cmp
fcoms
or
lea
fs
rcrb
push
cmp
addl
mov
pop
and
lahf
pop
stos
xor
mov
dec
enter
dec
mov
xor
mov
push
loopne
mov
addr16
movsl
cmp
push
mulb
into
fwait
xlat
out
hlt
lcall
sbb
rcrb
sbb
mov
popf
ret
and
subl
bound
in
outsl
insb
dec
roll
daa
call
daa
lret
scas
aam
mov
pop
inc
jecxz
dec
jl
out
cmpb
fcoml
push
xchg
sbb
pop
mov
das
dec
lods
dec
pop
sbb
rcr
or
jp
dec
daa
mov
mov
and
in
das
and
or
jns
outsl
inc
sub
dec
cmpsb
in
push
aas
xor
or
fildl
jbe
jle
test
cmp
push
inc
adc
jb
pop
stos
adc
vpminsw
lods
xchg
adc
arpl
push
test
scas
scas
stc
mov
sbb
dec
jg
loop
stos
les
repz
xor
or
ror
iret
inc
add
pusha
ja
add
inc
sahf
push
cmp
push
gs
and
loope
adc
lcall
fildll
lods
sbb
repnz
stc
dec
inc
mov
pop
lea
add
mov
cmp
mov
mov
adc
pop
outsl
xlat
stos
flds
repz
xchg
mov
add
shl
mov
dec
xor
sbb
or
push
and
insb
out
inc
mov
pop
mov
xchg
xor
mov
push
icebp
ficoml
push
xchg
gs
sub
mov
cmp
adc
fmuls
sbb
mov
lds
adc
stos
adc
cwtl
insb
adc
test
nop
pop
cltd
or
push
pop
dec
decl
cmp
or
push
and
sub
lds
jp
jmp
iret
jg
out
shrl
or
out
ret
repnz
jns
bound
out
cmp
ds
pushf
iret
cmp
mov
jmp
aas
in
imul
cwtl
pop
mov
mov
int3
mov
call
int3
mov
dec
mov
jbe
sbb
andl
xor
aaa
insl
or
hlt
or
lahf
mov
mov
inc
xor
xchg
fldl
sub
test
push
insb
xlat
xchg
cwtl
sub
xor
imul
in
xchg
in
add
jl
pop
clc
sti
pop
sbb
int
pusha
push
insl
xor
ds
push
mov
inc
jbe
js
stc
in
xlat
pop
mov
outsl
test
cmp
in
mov
or
push
or
pop
shr
cmp
cmp
mov
mov
and
push
lahf
pop
pop
scas
mov
push
dec
mov
psrlq
bound
out
movsb
add
clc
jne
push
int3
mov
mov
jae
nop
jbe
cwtl
mov
push
sbb
stos
daa
mov
roll
cmp
xor
jle
push
popf
dec
inc
icebp
xchg
mov
movsb
stos
cwtl
sub
add
lret
fisttps
cwtl
sbb
pop
fmuls
and
lret
xchg
dec
ret
sub
and
sbb
push
clc
bound
add
push
arpl
sub
push
enter
xchg
push
loop
in
or
call
pushf
stos
sub
nop
mov
add
daa
movsl
and
hlt
cmp
ljmp
mov
add
std
jecxz
jns
xor
nop
cmp
push
dec
cltd
lock
cwtl
mov
lahf
jp
xchg
repnz
cmp
cmp
inc
test
bound
insb
dec
and
popf
lods
mov
cmp
push
inc
sbb
fsubrl
dec
mov
add
fnstenv
mov
mov
divl
push
gs
or
dec
jmp
and
sub
push
cli
aam
shrb
ficoml
rcr
xor
pop
jno
std
pop
bound
imul
jl
jg
fbstp
repz
call
adc
xchg
arpl
add
test
int3
insl
scas
pushf
adc
push
add
scas
jo
mov
and
jp
enter
aas
cld
gs
lahf
jbe
mov
lods
and
pop
pop
add
sub
add
mov
pushf
inc
push
test
leave
movsl
es
push
les
jmp
sub
out
ret
test
mov
roll
mov
leave
hlt
popa
sbb
or
dec
cmp
orl
pop
sub
lods
pop
add
pand
cmp
in
xchg
push
or
das
or
push
push
jnp
pop
test
xor
imul
or
jae
icebp
stos
lcall
or
lret
sar
jo
insb
inc
mov
cmp
pop
mov
mov
push
hlt
cld
fcomps
sub
cmp
fidivrl
jae
push
mov
xchg
repnz
je
aas
andl
loopne
jmp
jecxz
je
ret
push
lcall
insb
cmp
and
out
pop
or
sbb
pop
call
mov
mov
out
iret
dec
sbb
cli
lahf
test
fbstp
mov
sub
mov
inc
in
push
insb
xchg
test
jmp
dec
and
repnz
or
into
xchg
aas
ret
push
xlat
dec
cmp
cmp
xchg
pop
sub
fbld
mov
inc
sbb
leave
xor
aad
mov
pop
xor
xchg
stos
notl
decb
sbb
rorb
outsl
pop
sbb
sahf
inc
test
lods
fcoml
jecxz
add
mov
in
call
dec
add
push
push
sub
mov
ss
dec
push
cmp
jmp
or
or
mov
lock
inc
cwtl
pop
enter
inc
jecxz
inc
xor
nop
in
inc
out
insb
inc
add
mov
sarl
jmp
or
mov
pop
jb
inc
push
adc
mov
std
int
fsubs
ret
dec
cmpsb
pop
jne
adc
les
ret
mov
mov
mov
pop
sub
xor
lret
in
inc
je
cmp
jl
test
decb
or
mov
out
scas
xor
xchg
repz
mov
aas
push
pushf
dec
arpl
jo
mov
ds
fwait
rorb
mov
ret
push
inc
in
imul
adc
popf
and
mov
loopne
xchg
addr16
js
lea
in
jecxz
xchg
lock
dec
test
jns
cltd
dec
sar
pop
test
lret
pop
sub
adc
or
les
pop
icebp
das
add
shll
dec
jmp
mov
jbe
jl
mov
loop
ret
add
mov
fyl2x
jae
notb
cli
push
rorb
int
rcrl
inc
imul
imul
repnz
mov
sub
xor
jo
ljmp
jne
cld
dec
lcall
orl
mov
test
adc
jno
push
lcall
mov
jo
push
fsubrl
dec
adc
dec
daa
int3
mov
lahf
adc
adc
aaa
les
test
clc
adc
das
xchg
sub
and
push
inc
push
cmc
daa
das
sbb
lahf
loopne
rcrl
bound
push
and
jle
enter
ret
sti
add
stos
scas
fildl
push
adc
sub
cmp
outsl
les
ljmp
mov
jmp
mov
scas
and
mov
movsb
stos
xchg
mov
mov
add
or
seta
mov
push
in
repnz
cltd
dec
sbb
pop
push
test
divb
sbb
paddq
mov
sbb
idiv
xchg
stos
in
jnp
mov
sbb
outsb
in
dec
ds
in
repz
aas
stc
and
mov
xor
jle
aam
dec
daa
das
inc
lea
adc
add
imul
mov
subl
xor
push
or
addr16
xor
in
and
and
push
cli
andl
jno
sbb
xchg
imul
hlt
lea
nop
lea
int
js
daa
dec
inc
popa
dec
addr16
mov
cmp
je
faddl
sbbl
out
cmp
xchg
jns
pop
xorb
cmp
push
in
lret
call
inc
lcall
xchg
lods
lods
test
faddl
outsb
pop
push
cmp
sti
out
jmp
jecxz
or
inc
lret
add
rorb
cltd
mov
add
rolb
jp
loope
xchg
aas
dec
insb
add
mov
sbb
test
pop
mov
in
xor
shll
or
orb
mov
stos
pop
sti
and
xchg
addr16
les
mov
sbb
and
in
cwtl
test
adc
dec
inc
imul
fwait
adc
cld
jae
js
in
int3
pop
adc
sub
pop
mov
arpl
cmp
adc
cmp
and
jne
lea
testb
movsl
outsl
push
scas
fmuls
dec
les
pushf
das
push
pop
jl
sar
sub
add
daa
imul
xchg
ds
mov
mov
aad
lock
adc
mov
cmp
mov
push
mov
cmp
int3
fnstsw
test
fcmove
repz
loope
int
mov
cltd
xor
adc
icebp
jbe
cmp
pop
test
or
jmp
shrl
repz
sahf
outsb
inc
hlt
sub
cmpsb
into
mov
movsb
inc
lret
orb
mov
and
lret
jl
mov
mov
xlat
out
incl
adc
lea
shrb
rcll
xchg
hlt
mov
mov
out
addb
inc
pop
mov
xor
inc
dec
push
stc
pop
xor
sbbl
mov
jae
or
inc
push
fnstcw
pop
sbb
scas
push
mov
cld
fnstsw
into
and
out
mov
push
or
shrl
xchg
cmpsl
ss
jge
movsb
enter
mov
aam
mov
scas
cmpsl
inc
fisttpll
je
test
sbb
sub
test
loop
scas
cmp
outsl
cs
jge
mov
enter
roll
adc
pop
ret
scas
cwtl
inc
das
cmp
pushf
or
xchg
mov
jp
pop
arpl
sub
lret
in
arpl
inc
cmp
push
mov
push
jno
ret
stos
gs
mov
adc
xchg
test
enter
loope
lods
mov
dec
adc
sbb
clc
cmp
xor
mov
jle
test
push
xor
pop
lods
push
dec
pop
cli
loopne
loope
pop
data16
xor
inc
dec
push
add
push
fildll
push
push
mov
cmpsl
dec
mov
mov
jbe
popf
cmp
inc
test
lret
mov
jp
xchg
sahf
and
mov
aaa
pop
repnz
scas
ret
adc
aaa
div
icebp
leave
adc
pusha
pop
imul
mov
std
int3
or
es
pop
and
loop
sbbw
add
mov
mov
lods
jnp
cmpsl
inc
xchg
dec
inc
das
dec
add
cmpsb
in
pop
out
fcoms
cli
jb
insl
in
xchg
les
imull
out
jae
xor
and
jne
push
leave
call
xchg
mov
sbb
adc
lods
adc
sbb
movsl
mov
xchg
xor
mov
into
cwtl
lret
xchg
mov
clc
testb
mov
mov
mov
test
xor
mov
or
sahf
daa
sbb
push
dec
sti
or
xchg
adcl
addr16
sub
xchg
xor
dec
pop
stc
sub
ret
addl
dec
cwtl
xor
push
mov
scas
shlb
movsb
fnstsw
xchg
cmpsl
jl
hlt
arpl
push
jge
add
call
add
sub
scas
jg
jbe
dec
sub
push
adc
jle
pop
xchg
loop
push
test
arpl
repz
adcl
out
shlb
mov
out
fwait
and
repz
mov
aam
fadds
movsl
outsl
int
inc
negl
jne
mov
shrb
mov
xchg
push
dec
das
mov
mov
cmp
push
out
sbb
loopne
mov
inc
icebp
mov
xlat
das
pushf
mov
mov
xchg
lret
dec
mov
cmp
subl
inc
and
in
sti
cmp
dec
ds
add
in
mov
sbb
out
push
outsl
cmpsl
imul
imul
push
stc
mov
int3
lods
ja
fs
ret
addr16
mov
push
mov
scas
subb
sbb
icebp
cmp
test
test
pop
jp
ljmp
sarl
add
jle
pminsw
loope
mov
and
and
call
mov
cld
mov
sbb
gs
int
lock
xchg
ja
jae
movsb
cmp
ja
or
cmpsb
nop
dec
out
inc
pop
sub
repnz
cmp
sub
mov
loopne
adc
xchg
out
rol
imul
add
hlt
sbb
out
aas
aas
xor
and
jbe
add
frstor
imul
or
cmpl
mov
push
mov
out
xchg
mov
lahf
ret
scas
in
pcmpeqw
adc
mov
lods
lret
popf
fsts
mov
sti
mov
and
dec
and
xchg
mov
jno
sub
sti
mov
shrb
out
test
inc
aam
jle
divl
add
pop
dec
xor
pop
divl
lcall
jb
popf
pop
pop
fldcw
or
scas
popa
cld
and
jne
mov
hlt
dec
pop
dec
dec
fwait
adc
mov
pop
jle
and
cmp
push
and
cltd
mov
mov
call
lock
mov
inc
xchg
outsl
and
push
sbb
xor
leave
sahf
imul
sti
rol
das
inc
popa
sbb
push
xchg
pushf
int
adc
insb
idiv
loop
rorb
mov
push
in
add
adc
iret
push
xchg
call
in
mov
in
enter
sbb
cs
lcall
sub
pop
sti
enter
inc
aam
fstl
notb
repz
lret
push
xchg
push
sub
loopne
mov
icebp
mov
push
mov
push
or
fbstp
into
dec
daa
iret
xchg
cld
push
lods
jns
rorb
jae
adc
cmp
xlat
and
or
sub
stos
mov
mov
cmp
xchg
jne
fsubrs
dec
ret
jge
xchg
or
xor
aas
mov
push
clc
ss
mov
mov
and
aam
ficoml
popf
outsl
leave
fiaddl
jp
imul
pop
rcll
push
pop
mov
jg
mov
in
outsb
imul
xor
clc
push
xor
js
jbe
jns
pop
adc
inc
mov
push
imul
pop
sub
sub
jl
inc
dec
xchg
cmp
aad
cld
dec
loopne
mov
mov
cwtl
jne
cmp
es
xchg
lock
mov
inc
xchg
xchg
push
rol
xor
cmp
icebp
sbb
cwtl
pop
es
sub
leave
mov
cmpsb
pop
fwait
dec
and
outsb
mov
fistps
add
icebp
jbe
push
push
mov
cmpl
jg
sahf
sbb
pop
push
and
mov
mov
pusha
in
shll
repnz
jnp
sahf
inc
and
into
out
sbb
pop
cmpsl
xchg
dec
fdivl
loope
push
inc
imul
and
or
into
rcll
movsb
mov
pop
movsb
inc
push
push
and
mov
pop
inc
fdivrs
insb
dec
js
int
xor
push
into
enter
sub
xchg
mov
pop
dec
add
or
cmpsb
pop
sbb
mov
mov
pop
fistl
cltd
fadds
sbb
je
dec
gs
nop
inc
push
pop
fidivs
inc
adc
mov
push
cmp
sarb
lods
jmp
aad
push
cltd
mov
stos
mov
push
lods
ljmp
cmp
and
das
push
movsb
aas
popa
fs
fsubrs
data16
jle
cmp
xchg
sbb
dec
or
insb
iret
ja
into
push
jg
fwait
jle
xor
insb
lods
sbb
inc
sub
push
data16
call
jae
sbbb
mov
sbb
push
mov
rcll
sarb
jmp
shr
dec
out
pop
cwtl
cli
es
lock
or
bound
ret
push
inc
dec
jp
push
inc
cli
or
hlt
stos
ja
cmp
lcall
ficoms
lea
lods
aad
jmp
loope
push
cmp
lds
bnd
cmp
mov
stos
push
push
and
xor
stc
add
fwait
lods
jae
cwtl
nop
sbbb
mov
dec
mov
sub
pop
add
sahf
leave
jne
jge
or
loop
popf
setno
lock
ds
cmpsb
leave
mov
mov
out
push
sbb
cmp
sub
inc
dec
mov
movsl
and
xor
mov
icebp
pop
leave
fmul
jl
push
cltd
push
fisubl
sbb
pop
xchg
iret
cmp
jae
data16
orb
das
test
jbe
mov
std
and
add
push
inc
adc
inc
mov
loop
mov
insl
jg
imulb
cs
jno
lods
mov
enter
xor
sub
les
pop
xorb
cmpb
mov
and
mov
cmp
or
stos
or
dec
shrl
cmp
add
xor
or
sbb
scas
das
lret
or
orps
loope
dec
sar
jmp
call
lret
push
fwait
sub
jmp
dec
mov
fadd
mov
xchg
iret
ret
nop
shlb
xor
sahf
pop
pop
push
mov
add
lret
clc
faddp
or
fldcw
sbb
aam
les
js
mov
fisubrl
ds
ss
jp
push
and
test
pop
mov
cmp
jbe
iret
add
mov
inc
mov
inc
lret
dec
fs
arpl
movsb
out
inc
das
mov
ja
xchg
add
cwtl
xor
or
in
lock
jecxz
push
jbe
ds
xor
fsubs
mov
jmp
sarl
xchg
in
cld
sbb
es
or
mov
sub
xchg
and
mov
stos
push
xor
lods
mov
scas
mov
mov
lods
sub
addr16
daa
mov
push
insl
jl
mov
movsl
shlb
mov
jo
xor
mov
jle
lods
jnp
cmp
xchg
adc
sub
cmpsb
ss
inc
mov
sbb
outsb
jbe
mov
pusha
sbb
aam
aad
jbe
jns
jne
stos
cmpl
xchg
ds
jle
cmp
subl
cmpsb
push
xchg
movsl
cmp
mov
leave
out
add
fbstp
add
popa
sbb
push
mov
add
push
inc
stos
xor
addr16
mov
xor
or
push
test
xor
filds
hlt
roll
inc
ja
fs
in
inc
mov
sub
and
adc
adc
out
push
xchg
jns
cmp
test
mov
rcrl
pop
cmp
mov
mov
fstpl
jae
ret
movsb
or
ds
or
aad
jne
sti
jmp
dec
push
rcll
jle
sbb
or
shr
push
cmp
or
xchg
push
xchg
les
xchg
frstor
shlb
xchg
or
gs
mov
cmpsb
add
out
testl
out
in
cmc
push
cmp
xor
lahf
addr16
push
mov
jecxz
shlb
adc
out
push
pop
cld
into
mov
push
stos
mov
inc
pop
loop
test
xlat
les
aam
imul
fistps
jg
pop
loop
cmp
lods
das
cld
in
fwait
in
mov
lods
out
xor
xchg
inc
lcall
cmp
cmpsl
jl
xchg
outsb
cs
ljmp
mov
imul
mov
test
jl
aas
mov
jmp
or
mov
shlb
repnz
and
or
gs
mov
addl
or
test
fistps
inc
cmpsb
cmp
jbe
rcrl
push
dec
fmuls
shlb
cmp
jae
lret
push
xchg
or
add
ret
int3
push
aas
mov
and
into
push
jns
jbe
scas
sbb
insl
push
fiaddl
cmp
jge
xor
in
aam
out
push
push
out
xchg
shl
add
mov
rcrl
lret
xchg
push
lret
lds
cmpsl
aaa
mov
ss
loop
jle
pop
decl
ret
sti
lock
sbb
mov
sti
xor
pop
pop
ds
cltd
xlat
dec
xlat
push
adc
sbb
ror
mov
cmpsb
rorb
loopne
cmp
hlt
in
pop
xor
dec
xchg
mov
les
push
push
mov
push
jbe
mov
pop
inc
mov
and
push
repz
dec
out
xchg
mov
daa
daa
push
cmp
test
mov
cmp
cmp
es
icebp
popf
pop
out
test
xchg
and
outsb
in
and
ja
xorb
sub
nop
jno
int
inc
es
sub
je
mov
fstpt
mov
aam
add
pop
daa
sti
jmp
add
dec
test
dec
dec
cmp
push
push
adcl
and
pusha
enter
mov
add
or
les
int3
sarl
mov
fisubl
arpl
aas
lods
sub
xchg
int3
cwtl
repnz
cmpb
sub
imul
sbb
scas
int3
in
leave
xor
mov
mov
or
loope
fmuls
jmp
stos
adc
stos
sub
fxch
call
mov
aas
inc
add
jae
add
lret
adc
out
pop
add
lcall
sbb
sti
xchg
or
mov
inc
or
push
fwait
call
fldcw
jno
popf
repnz
lret
nop
jno
xchg
sub
dec
das
inc
pop
cld
fldcw
mov
and
icebp
ja
and
sbb
cmp
daa
fildl
pop
xchg
xchg
or
ja
push
jno
in
mov
loopne
sub
add
inc
sahf
pop
push
popa
fcmovnb
adc
xchg
push
icebp
loop
daa
icebp
dec
sbb
sbb
jns
push
dec
ss
cmp
dec
sub
test
xchg
jb
sahf
cmp
bound
inc
inc
lods
adc
pop
movsl
mov
xor
addr16
xor
sbb
adc
push
arpl
out
mov
xor
inc
ror
lods
sub
push
jl
mov
add
lcall
add
sbb
mov
das
js
aaa
int3
cld
cmpsb
stos
call
cwtl
cmp
add
lret
jo
lcall
mov
xor
sbb
imul
mov
icebp
popa
push
cld
push
outsb
shrl
sub
mov
mov
cmc
ficoml
loopne
pushf
and
jb
inc
cli
mov
nop
inc
push
popa
push
loopne
pop
cltd
add
dec
cwtl
cli
fdivr
add
mov
push
in
mov
mov
adc
sbb
mov
xor
cmpsl
out
in
ja
pop
test
mov
and
addr16
sbb
jo
or
sub
xor
inc
cmp
sub
cmp
and
push
int3
shll
pushf
or
cmpsb
movsl
movsl
jp
cmp
loopne
rcll
scas
es
and
mov
call
ljmp
or
xor
or
test
push
and
jne
pop
and
fistl
je
divb
xchg
mov
xchg
jle
mov
push
and
icebp
cmc
dec
inc
dec
mov
xor
push
cmc
sub
insl
cmp
adc
dec
ret
add
pop
mov
sub
ret
in
int
push
cmpsb
add
add
or
mov
mov
sbb
in
pop
cmp
push
mov
nop
ficomps
sbb
inc
dec
int3
mov
sub
stos
xchg
into
sbb
pop
dec
xchg
pusha
orl
stc
lods
cmp
int3
dec
int
jecxz
aad
and
adc
cmp
fsub
dec
cwtl
cmp
pop
movsb
mov
cmp
les
cmp
push
loop
and
or
aaa
sbb
testl
push
aam
dec
rcll
sub
repz
cs
dec
inc
mov
xchg
sbb
sti
in
imul
jl
lods
jne
mov
mov
in
outsb
inc
push
ret
add
jae
iret
imul
ret
lds
add
push
pop
sbb
daa
jno
sbb
fidivrs
sbb
and
mov
stos
mov
lret
mov
add
push
inc
push
push
popa
fcoml
arpl
sub
pusha
add
arpl
pop
cmp
jmp
aam
pusha
ss
add
xchg
cmp
in
clc
loop
xor
sub
mov
sbb
or
xchg
pushf
orl
push
jge
xchg
cmp
setle
jnp
lret
pop
test
push
test
adc
loop
mov
jmp
cmp
jmp
fmull
sub
pop
ja
insl
fptan
in
ljmp
cmpl
mov
push
in
ljmp
fidivs
inc
jno
fs
popl
test
push
imul
sbb
cmp
push
and
jecxz
pop
pop
xor
mov
into
xchg
jno
int3
adc
adc
out
cmp
cli
cmp
imul
std
lea
push
push
inc
xchg
cltd
insl
mov
stos
mov
into
mov
data16
inc
pop
add
cmc
xchg
lcall
xor
addb
add
movsb
sbb
or
add
test
pop
inc
jbe
test
push
jl
mov
bnd
fwait
gs
gs
gs
femms
mov
push
jno
pop
sbb
hlt
fldcw
leave
std
xor
psrad
jp
sub
outsl
or
repnz
orl
pushf
adc
push
aam
enter
aad
addr16
int3
loope
push
idiv
mov
subb
ja
pop
push
push
xor
push
xchg
ret
mov
pop
push
dec
inc
popa
dec
fdivrp
pop
bound
lods
lods
inc
shlb
xchg
mov
mov
lock
mov
hlt
loop
addr16
push
sbb
shlb
push
dec
jb
mov
inc
pop
xor
mov
fsubrl
pop
jecxz
bound
or
xor
test
jl
inc
jmp
and
or
outsl
lock
fstp
dec
sbb
xlat
mov
test
lods
in
cmp
dec
xor
push
cmpl
mov
xor
inc
stos
imul
xchg
pop
adc
in
cmp
jecxz
jg
dec
lcall
lahf
push
mov
push
mov
repnz
or
movsl
xchg
in
cs
es
fcmovnbe
ljmp
popa
sahf
jb
cs
daa
jp
jge
hlt
jp
fwait
arpl
bound
jne
sti
ret
imul
xchg
fdivrl
sbb
add
xchg
repnz
test
ss
cs
cli
push
std
movsb
or
fsubrp
jmp
and
adc
pop
inc
pop
fcmovb
add
cld
add
jl
cli
inc
in
push
cmpl
lock
cmp
dec
jp
fcomi
xor
mov
jb
dec
xor
scas
inc
int
int3
add
aas
lret
mov
ret
adc
jmp
scas
push
sbb
outsl
out
shlb
lea
sbb
test
int3
jg
sbb
sub
jg
xor
fwait
int3
jge
nop
out
dec
sbb
or
cltd
inc
scas
je
mov
enter
mov
fnsave
mov
adc
mov
leave
in
jns
pop
mov
arpl
mov
mov
and
cmp
jge
cltd
test
and
add
sbb
rolb
xor
push
testl
xor
xor
xchg
pop
fisubl
xchg
ljmp
add
stc
add
sub
push
ljmp
sub
adc
sub
jl
dec
xchg
mov
push
les
int
int3
xchg
mov
ss
mov
pop
fs
mov
push
repnz
mov
mov
bound
fimuls
lret
cmp
pusha
js
mov
push
and
dec
push
out
mov
mov
xchg
cmp
sub
cmp
leave
xchg
in
in
shl
mov
or
pop
outsb
mov
mov
mov
mov
imul
pop
sub
xor
sub
mov
fisubrs
insb
lock
push
and
inc
add
lahf
mov
sbb
cmp
xor
ret
cmp
or
fcmovb
mov
lock
push
imul
rcl
cmc
xor
inc
icebp
out
or
xchg
rclb
imul
cmp
stos
push
out
mov
scas
jmp
rcll
mov
xor
shlb
es
out
mov
jo
mov
mov
xor
mov
pop
dec
dec
and
fisttps
lret
mov
mov
adc
cmp
xchg
dec
and
iret
aaa
jle
outsl
in
cltd
dec
sbb
call
mov
stc
and
push
xchg
dec
cmpsl
bound
loopne
adc
cmp
mov
ficoms
negb
call
pop
mov
icebp
mov
into
aaa
in
xchg
aad
or
shrl
divl
scas
adcl
inc
in
jb
sub
ficomps
pop
and
jl
rorb
dec
fcmovu
inc
mov
jbe
or
mov
pop
insl
cli
mov
mov
daa
dec
xor
jl
jp
add
repz
mov
aaa
inc
mov
sti
push
lret
loopne
or
stos
adc
sbb
pusha
adc
push
mov
adc
xor
push
sbb
frstor
insb
mov
sbb
leave
cmp
adc
arpl
push
mov
mov
call
xchg
fwait
lret
popa
cld
jle
imul
cmpsl
insb
movsl
jno
mov
imulb
jmp
or
xchg
pop
in
popa
sahf
xor
adc
loop
int3
adc
lds
out
lret
in
jecxz
lcall
push
rcl
push
jle
lock
mov
ljmp
lret
xchg
addr16
out
add
daa
jmp
cli
inc
sahf
jne
and
jp
sub
stos
aam
data16
xor
cltd
jmp
jmp
test
or
sub
lods
dec
xor
ret
icebp
add
cli
faddl
lcall
jecxz
xchg
jle
sbb
in
sub
bound
inc
xchg
jecxz
stos
xchg
add
or
pop
dec
mov
adc
pop
pop
outsb
out
xchg
cmp
xchg
mov
pop
inc
movsl
cmpsl
cmp
sub
andl
adc
and
mov
into
jbe
add
ss
nop
jo
cmp
jg
push
test
jmp
add
xor
add
out
xor
mov
das
mov
xor
lcall
fxrstor
push
out
and
js
repz
sub
leave
fcoms
in
cld
xor
test
and
jns
and
mov
cs
sub
insb
push
int3
lahf
jo
jno
arpl
loopne
rcrl
int
xor
stos
xchg
aam
cmc
sub
xchg
xor
jns
lods
push
enter
repnz
mov
jae
hlt
lahf
dec
mov
cmp
repnz
gs
pop
sbb
add
nop
std
inc
sub
jp
addr16
popa
lds
mov
in
pusha
jg
aad
push
xor
jne
and
cltd
push
int
out
ret
jne
or
mov
adc
sub
les
roll
pop
sub
ret
je
jmp
lahf
push
ljmp
and
icebp
cmp
stos
adc
and
loope
cmp
inc
and
push
aam
pop
add
fiaddl
pop
test
inc
es
or
mov
int3
cmpsl
jno
mov
jbe
push
cmp
sub
xor
aam
mov
test
test
or
mov
dec
pop
cmp
call
jmp
inc
stos
add
mov
adc
sti
pop
dec
or
arpl
mov
or
jns
sbb
repz
and
adc
loopne
xor
out
mov
dec
fsubp
pop
xchg
test
lahf
stc
push
inc
ret
mov
adc
xchg
jmp
movsb
scas
fdivr
pop
scas
aaa
pop
mov
xchg
sub
andb
sbbl
mov
xchg
mov
js
loope
push
add
notl
subb
jp
xor
xchg
mov
adc
addl
cmp
adcb
xchg
aam
sub
jge
call
in
pusha
mov
addr16
dec
pop
cmp
movsl
xchg
add
jns
imul
pop
or
loop
aam
out
movsl
mov
repz
or
sub
cld
inc
rcr
xor
movsl
fimuls
test
dec
sbb
idivl
outsb
sub
sbb
adc
dec
or
sahf
lods
adc
mov
out
mov
sbb
sub
jo
adc
and
lea
ret
out
push
jbe
in
push
adc
imul
out
mov
dec
push
test
dec
cwtl
loopne
inc
loopne
bound
or
and
sahf
fisttpl
andb
fsub
push
push
ja
leave
scas
jb
or
push
pop
push
jns
sbb
in
jae
int3
sti
jp
and
lret
pop
stc
dec
popf
cmc
jnp
mov
test
push
jo
sbb
add
dec
xchg
push
addl
xchg
mov
sahf
adc
sti
cmp
sbb
sub
push
mov
into
call
popf
ficomps
push
bnd
push
jmp
sub
cmc
imul
fsubrs
xchg
add
cmp
in
jno
pop
xchg
cld
adcb
and
mov
mov
add
jecxz
mov
shll
cmp
xchg
mov
cmp
jmp
adc
insl
mov
push
sub
add
inc
roll
xchg
dec
rorb
adc
stos
mov
sbb
push
xor
popf
fwait
sar
push
insl
adc
mov
dec
push
pop
xor
int
jno
xchg
sub
mov
arpl
andl
pop
fwait
add
inc
ret
cmp
hlt
lret
mov
clc
mov
push
cltd
mov
dec
push
pop
and
adc
int
int
fdiv
in
iret
and
push
xor
idivl
push
adc
lock
fildll
ror
sub
cmc
sahf
fldt
push
or
pop
jno
mov
loopne
enter
cwtl
jne
mul
sbb
mov
xor
mov
push
jbe
fdivp
fsts
mov
mov
mov
lret
cmpsb
cltd
test
cmp
push
pop
sub
test
and
and
cmp
sbb
insl
or
imul
pop
and
or
test
lret
lret
jmp
sbb
rcrl
push
imul
movsl
lcall
xor
fcompl
inc
cli
rorb
comiss
sti
cmp
cmp
sub
movsb
pop
jmp
mov
repz
sub
adc
lds
push
sbb
pop
pushf
dec
fiaddl
sub
ja
int3
loope
xchg
mov
push
xor
add
push
cmp
lret
je
pop
shl
aaa
inc
loopne
pop
cmp
inc
sbb
jmp
mov
leave
cmpb
aam
and
in
in
bswap
fwait
jle
test
and
stos
stc
add
sbb
xchg
or
add
fwait
aad
jge
js
bound
test
sar
stos
jmp
cmpsb
je
inc
inc
inc
rcrb
hlt
inc
pop
mov
lahf
lret
call
mov
sahf
lea
mov
fwait
mov
scas
stc
inc
int
imul
es
pop
int
dec
fimuls
movsl
lret
out
insl
mov
cmp
fiadds
mov
or
or
out
or
cmp
in
jne
pop
adc
cmp
pmuludq
std
cmpsb
push
repnz
inc
shrl
aam
mov
jge
xor
mov
mov
mov
and
mov
sbb
roll
adc
xlat
movsl
cmpl
adc
push
int
cltd
mov
cmpsl
aas
mov
jbe
sub
lahf
or
lret
out
push
lds
xlat
mov
jl
leave
in
movsl
call
sahf
add
sbb
push
test
repz
cmc
jbe
addr16
lock
jo
cltd
mov
push
push
shl
jo
pop
loope
pop
jp
nop
outsl
mov
and
pop
sahf
arpl
daa
jle
mov
fistps
insl
mov
sbb
mov
push
lret
xor
imul
add
insl
aaa
add
loope
jle
mov
push
bswap
mov
sbb
push
popf
push
imul
mov
xor
and
lret
dec
pop
xor
lret
clc
pop
mov
loope
xor
cmp
pop
fsts
imul
and
pop
dec
xor
mov
out
adc
insb
outsl
psrld
mov
or
sbb
cmc
in
stos
xchg
js
mov
lret
sahf
mov
insl
cmp
jmp
outsb
add
jle
push
aad
nop
push
out
stc
xchg
inc
push
inc
and
xchg
std
pusha
pop
mov
xchg
dec
jbe
scas
adc
sbb
sti
addr16
nop
imull
fwait
stc
fwait
adc
pop
lahf
bound
stos
pop
dec
call
push
jne
testl
bound
xor
ss
push
xchg
pop
jb
adcl
adcl
sub
leave
dec
push
pop
or
pushf
and
mov
cmc
xchg
je
jb
pop
push
pop
lahf
fmuls
or
jnp
xlat
out
cltd
push
xchg
out
nop
sarl
repz
dec
add
xchg
mov
mov
adc
sbb
fsincos
cmpsl
xor
pop
or
cmp
push
rcrb
pop
stos
hlt
or
mov
ja
inc
push
std
ret
pop
jb
mov
push
inc
imul
pop
in
dec
sahf
push
mov
dec
mov
pop
jo
mov
ss
ret
add
mov
out
xchg
sahf
xchg
out
xchg
mov
cmp
cmp
xor
imul
push
dec
jns
repz
sub
mov
cmp
into
mov
and
mov
rorb
jo
xchg
jle
or
inc
lods
cmpsb
stos
js
insb
inc
or
xchg
mov
in
test
outsl
inc
out
push
push
jae
arpl
iret
ret
out
data16
test
xchg
pop
sbb
bound
in
push
mov
mov
movsb
or
mov
out
pop
cltd
xor
jnp
scas
dec
add
xchg
loopne
xchg
push
in
xchg
hlt
and
std
lret
leave
jl
mov
fidivrs
mov
xor
loopne
jge
cmp
jl
sbb
cli
inc
es
jo
dec
repz
ja
inc
pop
stc
call
xchg
faddl
xor
xor
push
stc
loopne
adc
outsl
loope
push
push
mov
mov
adc
sahf
push
or
push
pushl
and
aad
and
jne
pop
xlat
pushf
fs
jp
enter
lods
imul
mov
mov
clc
xchg
dec
fistpl
mov
std
push
pop
cmp
xor
es
hlt
inc
xchg
addr16
sarl
movsb
xor
push
dec
sarl
cmp
cmp
in
add
xor
jns
lds
stc
pop
add
inc
cld
fdivp
movq
sbb
mov
inc
mov
sub
int
or
or
fistpll
lret
outsl
mov
mov
or
add
xchg
pop
cmp
and
std
xor
stos
inc
jo
mov
push
fwait
sub
xlat
leave
mov
subb
xchg
ljmp
ss
xchg
decb
jne
mov
inc
leave
inc
sbb
stos
xlat
inc
pop
lret
push
mov
mov
sub
mov
sub
mov
ja
sbb
test
ror
repnz
pop
jmp
scas
push
push
fidivs
mov
sbb
or
mov
or
xchg
cmp
inc
fisubl
clc
jae
repnz
pop
mov
sub
hlt
push
mov
js
fstl
popa
sbb
or
shlb
inc
sbb
gs
mov
push
xchg
dec
out
mov
xchg
stc
lcall
sub
and
hlt
lea
popa
or
loope
xlat
push
gs
jg
loope
daa
sub
aas
jne
mov
outsl
pushf
lods
imul
push
sbb
lock
dec
clc
lds
hlt
inc
ss
lods
mov
and
cmp
jbe
jno
jg
popf
fdivl
dec
jae
int3
mov
mov
xor
mov
push
icebp
adc
xchg
inc
in
xchg
sbb
jbe
sbb
outsb
or
rcrb
push
dec
sub
push
mov
pop
pop
repnz
outsb
or
mov
pop
inc
xchg
pusha
adc
ljmp
push
ljmp
cld
js
mov
sbb
cld
dec
add
loope
xchg
movsl
daa
outsl
adc
and
pop
out
mov
out
or
ror
outsl
mov
inc
dec
dec
out
aaa
or
test
jb
cmp
push
add
stc
and
data16
dec
nop
cs
ja
add
les
or
dec
fldl
inc
mov
nop
scas
mov
repz
rorb
mov
cmp
nop
dec
addb
lahf
add
cmp
scas
movsb
rclb
mov
or
outsl
or
sahf
in
aam
sub
sub
arpl
test
cltd
in
test
or
jnp
ss
les
pop
pop
cmpsb
jns
sbb
fwait
and
in
push
mov
pop
stos
and
stos
xor
out
add
adc
add
rcll
lret
pop
inc
fisttpl
mov
rcr
dec
jae
push
fsub
inc
cmp
xor
cmpsl
inc
int
jb
inc
push
lahf
sbb
mov
insb
mov
fsubrs
mov
mov
aad
push
sub
pop
addb
dec
rcrl
and
mov
out
jle
testb
xchg
push
jle
repz
fstl
ds
out
xchg
aas
push
out
and
cmp
inc
mov
cmc
jae
ret
jnp
pusha
fadds
test
inc
les
imul
xchg
test
loop
and
jb
mov
fstl
icebp
scas
pop
leave
sub
test
mov
rcr
pop
pop
or
lret
xchg
push
sbb
sbb
cmp
adc
mov
call
add
fstps
dec
stc
loope
in
testb
jbe
sbb
mov
and
jg
push
out
fisubrs
movsb
sbb
mov
sub
out
sub
sbb
dec
mov
outsb
or
jl
pop
or
dec
xor
cmp
cmpsl
pop
repnz
cmp
data16
test
add
rorb
lret
or
popa
jns
mov
rep
xor
jmp
jle
pop
jmp
push
and
sub
xor
leave
xchg
mov
push
jnp
add
xchg
xchg
shr
inc
inc
xor
xor
test
adc
push
dec
lcall
fldcw
in
wbinvd
lods
push
mov
push
push
out
add
sub
outsb
push
mov
xor
leave
push
mov
mov
add
cmpsl
or
and
sub
dec
mov
std
fdivr
cmp
and
movsb
and
cli
inc
sub
aas
mov
xchg
fildll
mov
or
push
jecxz
sbb
xchg
aas
mov
clc
fsubrp
push
cltd
mov
dec
push
test
jmp
push
xor
cmp
insb
xor
push
enter
cmp
xchg
adc
daa
pop
std
sub
ljmp
push
dec
incb
dec
and
sbb
push
pop
sub
insb
ljmp
bound
push
mov
or
test
mov
out
arpl
and
xchg
std
scas
addr16
outsb
xchg
in
inc
push
les
fldenv
pushf
test
or
cmp
xchg
mov
popf
adc
cmp
bound
dec
mulb
xchg
mov
jl
jne
ljmp
call
cwtl
xor
out
in
sbb
movsl
lret
ficomps
add
dec
imul
add
or
punpckldq
adc
sbb
data16
mov
rclb
mov
cli
mov
pop
push
jns
inc
jg
cmpsb
mov
mov
adc
test
icebp
cltd
jl
cltd
mov
mov
test
flds
popw
push
sub
negl
jecxz
jg
and
jnp
call
adc
push
rclb
cmp
nop
lahf
aas
mov
dec
lret
xchg
repnz
lock
std
cmpsl
add
xor
jns
popf
test
cmpsb
and
inc
jp
in
xchg
les
add
aam
rcll
lock
into
push
add
mov
in
push
pop
push
call
jo
adc
and
jns
sub
xor
push
mov
cli
out
jp
adc
and
xchg
sub
int3
sub
loope
push
or
xor
dec
aad
ss
xchg
out
cmp
sub
subb
fisttpll
xchg
jmp
in
in
dec
popa
jge
sahf
sub
xor
imul
cli
cltd
jo
cmp
ficoms
push
lods
iret
mov
push
cltd
inc
push
cmpsb
and
aam
adcb
lods
popa
in
inc
pushf
orl
ret
cmp
int
jecxz
add
into
push
fimuls
fsubr
ret
cs
repnz
xchg
adc
dec
jno
dec
add
in
cmc
lret
mul
fidivrs
pop
stc
cmpsb
idivl
inc
icebp
and
pop
in
test
fidivs
dec
cmpsl
fcom
xchg
mov
mov
pop
xchg
xchg
adc
shlb
mov
nop
mulb
testb
sbb
jns
faddl
xor
out
mov
cmp
push
cmp
mull
xor
xor
insl
jmp
xor
mov
addr16
pop
xchg
fwait
mov
or
and
add
out
mov
jb
jecxz
cmp
ja
jle
xchg
xor
imul
mov
aas
mov
sbb
inc
out
hlt
cmp
shr
mov
xorb
sbb
dec
jmp
mov
fsubl
repnz
fmull
js
mov
mov
ror
push
mov
push
fisubrl
test
sbb
and
mov
lret
sahf
nop
mov
inc
aas
sbb
cmp
or
mov
pop
cmpsb
push
jl
xchg
dec
inc
adc
fwait
inc
push
pop
jbe
cltd
mov
jmp
push
clc
int
mov
fnstenv
jl
mov
cmpl
jbe
cld
rcr
sbb
xorb
xchg
mov
add
xor
out
push
pop
push
ss
inc
lcall
add
rol
arpl
imul
fdivl
es
adc
sbb
pop
shll
and
xchg
into
scas
xchg
hlt
js
add
push
push
lret
sub
rcrl
js
rcl
jo
orl
bound
inc
fucompp
xchg
xor
cmpsl
fldl
test
push
jmp
add
sti
fstp
psraw
mov
adc
xchg
dec
sub
jne
mov
push
mov
scas
loope
adc
xor
xor
roll
pop
xchg
mov
fstpl
outsl
rcl
scas
sub
add
sbb
lock
mov
int
cmpsl
mov
xchg
pop
shlb
clc
les
inc
sbb
pop
fisubrl
mov
cmc
jb
mov
cmp
sbb
push
clc
mov
mov
lock
jno
cs
repz
jno
pop
cmp
cmpsb
add
sub
ret
iret
or
loopne
xchg
adc
movsb
jo
or
sbb
ret
and
jp
xchg
stos
outsl
and
sub
nop
mov
mov
mov
xor
jg
mov
mov
cmpsl
popf
dec
jo
call
in
fs
fidivs
das
add
arpl
jno
mov
sti
cmp
mov
lods
add
int
movsb
xchg
jp
cmpsb
test
sub
notl
in
push
pushf
dec
repnz
pop
mov
inc
lea
sub
pop
xor
je
sbb
shr
cmp
add
lret
mov
sub
loope
dec
icebp
jae
scas
jo
cltd
lcall
ret
mov
movsb
push
mov
fistl
xchg
mov
aam
xor
shll
loop
das
mov
lcall
jae
lahf
push
outsb
jg
data16
inc
and
pop
dec
pop
fcomps
lds
adc
inc
push
add
jg
pop
jmp
inc
lret
pop
jnp
addl
mov
jnp
cmp
mov
ja
mov
mov
rclb
mov
or
icebp
jl
add
pop
add
loopne
fildl
leave
in
cmpsl
push
les
loope
cmp
in
cmp
fildll
inc
leave
adc
jmp
dec
pop
or
ja
sub
insb
out
mov
pop
xchg
pop
shll
ret
sahf
xchg
pop
and
cmp
int
scas
test
out
dec
les
fists
sub
in
gs
gs
mov
test
fimuls
pop
int3
cmp
sti
sub
jle
cmp
movsb
push
dec
adc
push
mov
ret
pushf
mov
fnsave
test
cltd
jns
xor
dec
adc
fs
push
inc
adcb
pop
mov
push
xchg
adc
enter
leave
insb
or
and
sub
jle
push
lods
inc
nop
cmp
add
and
nop
fcmovnb
jge
sub
leave
pop
mov
xor
xchg
push
dec
and
push
into
xlat
orl
aam
adc
jb
insb
mov
outsl
loope
sbb
push
cmp
aad
movsl
mov
bound
loope
adc
dec
cwtl
jp
jnp
pop
das
into
scas
xchg
clc
pop
enter
mov
cmp
and
fwait
arpl
fwait
adc
mov
testl
pop
and
movsl
push
test
mov
stc
add
push
test
pop
fsubrl
sbb
insb
lret
mov
aam
ljmp
or
rcr
inc
add
bound
xchg
cli
addl
mov
dec
jo
sbb
call
iret
sub
sbb
and
mov
push
sti
fwait
imul
inc
sbb
test
js
fldt
sahf
loopne
sbb
lcall
and
adc
cmpsl
cmp
inc
test
lcall
jnp
aas
in
sub
jns
fstpl
pop
cmp
xchg
test
icebp
daa
cmp
and
inc
xchg
mov
cmp
in
es
js
mov
cmpsb
mov
xchg
push
sti
ljmp
arpl
aas
add
mov
dec
mov
xor
nop
sti
xor
adc
sub
jle
cmpsl
push
xor
das
inc
adc
sbb
clc
sbb
sbb
pusha
repnz
mov
cmpsl
push
inc
hlt
pop
insb
rol
subb
lcall
shll
sub
push
xchg
inc
sub
sub
adc
dec
pop
data16
mov
jbe
jg
cs
fucomip
jge
mov
adc
jp
cmp
idivl
pop
or
dec
rcll
mov
and
mov
dec
sahf
add
int3
in
arpl
sbb
js
cwtl
int3
mov
dec
xor
adc
fcomps
xchg
or
sarl
popf
andl
daa
mov
or
sbb
shll
mov
pop
into
cwtl
mov
cld
fcompl
imul
inc
and
iret
ljmp
and
cmp
faddl
jo
out
lea
and
ds
mov
xor
pop
pop
dec
push
dec
push
push
mov
xor
and
das
dec
in
notb
xchg
mov
call
jbe
lret
jge
icebp
mov
pop
dec
mov
adc
jbe,pn
and
inc
int3
jnp
pop
push
and
add
imul
add
pop
adc
dec
sub
push
and
testb
inc
cli
je
cmpsb
ds
xchg
arpl
xchg
sub
fcoms
test
popa
sarb
pusha
and
lock
insb
add
sahf
xchg
test
dec
pop
fs
sbb
aas
fdivr
jle
cltd
sub
mov
xor
popa
cmc
mov
jne
mov
in
arpl
pop
cmpsb
dec
outsb
jl
push
inc
xchg
stc
jmp
lods
mov
gs
xor
out
fisubrl
jge
pop
push
mov
rcrl
adc
jo
nop
sti
jle
mov
inc
push
lahf
adc
scas
pop
dec
gs
xor
inc
xor
inc
cwtl
insb
subl
adc
nop
dec
dec
hlt
popl
jns
mov
cwtl
cs
sbb
cmp
inc
mov
push
bound
iret
mov
je
mov
sub
sbb
orb
test
cmp
bound
jcxz
test
cld
aam
or
mov
repnz
addr16
aam
add
enter
dec
stos
mov
jae
sub
cmp
adc
jmp
cli
outsb
pushf
pop
xchg
mull
adc
add
loopne
and
jecxz
arpl
scas
nop
mov
outsb
mov
inc
cli
call
fnstcw
insb
in
pop
rcrl
lea
cld
dec
xchg
in
ljmp
aam
mov
and
jl
jb
mov
stc
jge
inc
insl
pusha
and
inc
popf
pop
adc
fwait
cmp
data16
pop
pop
jg
cwtl
sub
dec
es
or
rol
sub
dec
or
aaa
adc
insb
fs
mov
sbb
adc
mov
loope
mov
out
mov
sahf
test
aam
jp
jns
lret
sub
dec
sbb
sbb
inc
xchg
cmp
pop
std
mov
lret
cmp
xlat
cld
inc
push
dec
lret
sbb
mov
fmuls
les
dec
pop
mov
pop
aad
rcrl
test
mov
jno
or
aam
dec
xchg
pop
push
push
lods
adc
xor
jae
push
add
out
aas
outsb
loope
shr
xchg
shlb
mov
pop
inc
cmpsb
inc
mov
clc
cli
mov
out
in
in
dec
imul
adc
pop
adc
dec
js
dec
mov
mov
mov
mov
test
enter
sbb
mov
adc
das
mov
shrb
leave
add
jo
cmpsl
inc
jnp
lea
or
fisubs
pop
inc
xchg
jg
jl
lods
fstpl
mov
push
lods
roll
mov
add
movsl
pop
out
push
push
dec
ret
lock
pop
lods
out
push
es
popf
shrb
push
pop
sub
lret
loopne
clc
stos
pop
ss
bnd
add
or
xlat
mov
scas
cld
mov
jae
adc
jle
cmp
and
pop
push
arpl
jns
jmp
loop
subl
xchg
xchg
jo
test
shrl
inc
mov
jp
testb
sarb
mov
pop
and
xor
or
je
orl
jecxz
scas
mov
ret
mov
lahf
idiv
std
outsb
add
inc
test
fidivrl
sbb
aas
imul
jg
dec
les
test
cmp
or
insl
mov
stos
xor
rorb
cmp
shl
dec
mov
lret
cwtl
and
jnp
clc
dec
stos
das
loopne
xor
stos
pop
add
flds
add
or
and
lods
and
mov
pop
or
mov
sbbb
xor
push
lea
outsb
mov
push
dec
mov
inc
cmp
cld
iret
aam
xchg
inc
ljmp
push
int3
mov
daa
add
aad
repz
xor
sbb
mov
cli
dec
sbbl
cmp
call
mov
xor
inc
or
loopne
pop
mov
jns
and
dec
pop
xchg
push
movsl
push
jne
insb
inc
insb
aas
mov
js
lods
pop
jmp
mov
sbb
test
sbb
rorl
pop
adc
movsl
cmp
andb
pop
xchg
dec
fstps
jae
xchg
lods
rorb
mov
clc
xor
inc
inc
cwtl
dec
sub
popf
pop
adc
mov
lock
into
mov
rcll
jb
push
hlt
aas
mov
push
dec
jo
and
insl
lret
mov
jo
push
loop
pop
addr16
pop
repz
testl
lods
faddl
xor
cmp
dec
pop
out
imul
lahf
out
shrl
sub
xor
inc
adc
cltd
jne
mov
adc
cmc
fwait
sbb
or
pop
pop
push
adcl
adc
dec
adc
push
sub
rolb
jnp
or
hlt
stos
fwait
jns
into
aas
pop
iret
stc
mov
dec
mov
xor
sub
xchg
lea
dec
fcoml
pusha
xor
or
pop
xchg
jnp
pusha
mov
jae
ret
pop
xor
movsb
sub
imul
popf
sbb
cmpl
jecxz
add
jb
sahf
push
inc
sub
mov
das
sub
mov
test
into
dec
jmp
aad
cld
xchg
popa
mov
pop
mov
bound
nop
in
sti
add
addr16
cmp
adc
mov
mov
ret
lret
mov
mov
out
inc
sbb
cmp
mov
adc
shlb
push
mov
push
rcrl
adc
ret
lods
mov
jl
imul
mov
or
lret
je
pop
jle
aam
xchg
add
cmp
mov
fstpt
mov
mov
inc
mov
lea
outsb
sbb
je
inc
dec
add
pop
pop
je
incl
ds
inc
imulb
inc
push
fs
sysenter
inc
daa
and
imul
jne
adc
sbb
add
push
xor
add
sbb
call
mov
lds
or
clc
jmp
or
or
addr16
ds
lret
mov
orb
out
dec
dec
jbe
pop
push
lret
pop
and
sbb
ja
fadds
jle
lods
lock
fisttpl
int3
lods
out
sbb
loopne
stos
or
mov
rorl
pushf
loope
sub
ret
and
xchg
xchg
jge
sahf
lahf
sarb
out
lahf
sbb
mov
iret
dec
adc
in
xchg
and
movsb
mov
pop
sub
icebp
and
sub
mov
pop
cwtl
cmp
jge
xchg
sbb
aas
lret
mov
adc
jl
je
xchg
sbb
mov
ds
xor
dec
iret
jbe
test
testb
in
mov
adc
movsl
inc
sub
idivl
lds
shl
jns
push
or
adc
aas
loop
mov
mov
mov
std
adc
cmp
push
aaa
mov
and
lods
mov
push
pop
jg
jmp
inc
dec
jnp
inc
out
inc
or
jle
call
inc
stos
rorb
add
add
xor
loopne
insl
xchg
and
adc
xor
sub
pop
cmpsb
jo
ficompl
das
pusha
cld
push
add
push
mov
mov
mov
cltd
mov
mov
mov
adc
mov
in
or
xchg
lahf
les
loope
pop
inc
mov
int
jb
iret
xor
xlat
stos
jle
adc
mov
movsb
jnp
in
mov
loopne
fisttpl
add
inc
imul
push
mov
sbb
mov
pop
es
imul
rcr
cmp
add
mov
ffree
repz
fistpll
cmc
movlps
les
in
pop
push
cli
push
xchg
scas
pop
out
inc
add
xchg
insb
popf
fisubrs
add
test
ljmp
pslld
clc
sbb
stc
sbb
call
dec
mov
mov
jb
sub
mov
mov
hlt
mov
outsl
aaa
and
dec
repnz
dec
mov
orl
adc
adc
add
or
mov
mov
rcl
sub
outsl
data16
pop
jmp
nop
int3
loope
push
sbb
and
dec
mov
movsl
jp
daa
lods
nop
cmpsb
lods
xchg
push
xchg
xor
sbb
cltd
movsl
push
mov
or
adc
test
out
lcall
icebp
popa
movsb
cwtl
test
cmp
movl
mov
jo
sahf
sbb
mov
stc
mov
cltd
add
adcl
jne
imul
fiaddl
cmp
lods
mov
jo
js
ret
adc
fisttpll
pop
push
mov
dec
adc
in
xor
mov
jnp
adc
lods
cmp
mov
pop
sub
lock
sbb
hlt
idiv
push
jo
stos
sub
dec
push
inc
push
lods
sub
jle
and
inc
sub
out
push
dec
fnstsw
mov
mov
cli
nop
xchg
sub
adc
lods
movl
xchg
push
sbb
sbb
mov
out
mov
movsb
and
call
add
addr16
frstor
pusha
inc
out
sbb
jbe
inc
lret
fucomp
pop
mov
inc
aaa
pop
in
shr
xlat
or
outsl
nop
mov
sbbb
inc
cmp
jge
andb
sbb
adc
mov
jge
arpl
out
add
ds
or
arpl
cwtl
push
es
mov
ret
cmp
mov
push
nop
outsl
lret
fcmovnb
xor
pop
sub
addb
mov
test
inc
fwait
bound
insb
in
mov
cli
xor
loop
int3
or
lock
scas
push
ret
cmc
jns
jno
or
bnd
mov
sti
andb
sbb
std
imul
mov
pop
and
stos
or
jnp
mov
ds
test
jnp
push
xchg
xchg
push
push
jle
mov
mov
or
adc
hlt
add
jmp
call
aas
lret
lret
sbb
lahf
mov
push
or
shll
mov
pop
ja
sbb
ficompl
or
ret
pop
and
or
nop
dec
jnp
movl
ret
sub
fstpt
nop
lcall
data16
shl
lcall
sub
sti
add
loop
sahf
jecxz
fsubs
in
hlt
enter
pop
dec
pop
sbb
dec
push
cld
push
adc
out
add
pop
push
sub
testl
inc
cmp
andl
lods
ljmp
cmp
lods
out
pushf
ret
cmc
repz
adcb
imul
push
sub
dec
lahf
cmpsb
cmp
insl
shlb
xor
outsl
sub
cmp
scas
andl
jae
addb
test
aad
sbb
xchg
hlt
sbb
push
fimuls
loop
lods
sbb
adc
mov
test
mulb
je
adc
mov
imul
cltd
cmpsl
int
in
and
lret
sbb
test
push
xorl
lret
sti
cwtl
es
jmp
push
stc
inc
cmpsb
dec
rorl
push
es
testl
jecxz
les
or
adc
mov
jns
push
ror
or
fimuls
lret
stc
pop
or
sysret
mov
mov
imul
cltd
mov
in
xchg
lret
mov
sbb
rorb
mov
xchg
sbb
adc
outsl
das
or
dec
add
or
fst
mov
jl
add
xor
clc
inc
int3
test
lcall
jo
nop
subl
cmc
and
xlat
dec
dec
mov
ja
jb
stc
inc
test
mov
icebp
stos
mov
insb
jo
cmpsb
ret
xor
push
jne
ljmp
cmp
out
js
icebp
jmp
sti
aaa
inc
inc
inc
out
bound
inc
xlat
insb
xor
and
scas
das
push
and
pop
xorl
cmp
daa
nop
jle
jmp
jbe
out
push
mov
xchg
sbb
shlb
icebp
enter
imulb
pop
out
sub
movsl
mov
out
jmp
sbb
shlb
decl
scas
cmp
mov
push
mov
imul
imul
fstpt
adc
loope
cmpsl
sti
loop
std
iret
cmc
push
jnp
sbb
add
push
jno
lret
xchg
daa
out
cmp
or
add
push
push
sub
cmp
clc
push
loopne
adc
mov
jo
data16
aad
mov
ss
rorl
mov
mov
lcall
es
xorl
cmc
xchg
lea
cmp
push
pop
aas
sbb
xlat
or
jecxz
cmpsb
mov
and
mov
mov
daa
mov
bndstx
aam
or
jmp
dec
cmp
add
xchg
sub
xor
imul
or
sub
xor
push
andb
add
sub
add
test
aas
cmp
dec
push
out
fldenv
and
inc
stos
push
mov
daa
cli
leave
xor
scas
sub
sbb
xchg
mov
or
movsb
imul
mov
jmp
add
mov
cli
rolb
cmpb
lcall
lds
dec
shll
fimull
mov
int
je
movb
push
jne
outsl
adc
pop
inc
push
or
into
addr16
stos
push
push
xchg
pop
aad
jmp
in
or
pusha
cmp
sbb
push
and
lcall
cld
add
dec
inc
mov
adc
in
xchg
aas
mov
fsts
push
cmp
add
iret
dec
outsb
andb
lds
and
stc
mov
inc
add
xchg
sbb
push
decl
push
xchg
fucompp
inc
xor
lea
sbb
insl
enter
and
jmp
sub
aam
mov
or
inc
sbbb
int3
mov
repz
lods
out
stos
cld
fwait
cmc
mov
into
fadd
in
jp
aaa
xchg
ss
incb
dec
movsb
dec
jg
push
xchg
nop
add
add
add
xor
mov
mov
scas
or
push
pushf
dec
xchg
add
inc
mov
sub
clc
pop
sti
and
xchg
jne
pop
rcll
adc
lea
cmp
push
call
add
push
nop
inc
arpl
or
mov
inc
xchg
or
ret
pop
mov
pop
jae
sub
and
sahf
popf
fsubrs
imul
cmp
mov
movzbl
push
mov
inc
pop
fsts
aaa
scas
rclb
pop
xorl
pop
inc
fst
arpl
add
aas
test
cld
lldt
jbe
rclb
gs
jno
cmp
scas
aas
mov
push
scas
inc
add
daa
inc
pop
loop
dec
mov
dec
cs
xchg
lea
outsb
adc
call
pop
ret
mov
call
subb
sarb
cmp
stc
dec
fdivl
aad
out
stos
add
fcomps
jp
cmp
rclb
xchg
add
xlat
dec
divb
loope
shll
inc
mov
popf
inc
jecxz
orb
loope
in
das
mov
cld
lods
jae
mov
syscall
add
fxch
fcomps
mov
and
adc
mov
scas
sbb
sub
jo
mov
inc
or
sub
pop
mov
add
repnz
cmc
data16
sub
ss
xor
movsl
dec
cld
das
jo
or
bnd
aas
pop
sub
inc
mov
and
test
sub
fucomip
lock
xor
dec
xor
icebp
dec
subl
push
imul
mov
mov
pop
push
mov
push
inc
das
cwtl
ds
pushf
lock
fwait
xchg
and
fs
inc
adc
sbbb
push
nop
mov
push
sbb
mov
subb
push
xchg
push
sub
test
test
pop
push
sub
addb
imul
jno
and
outsl
dec
cwtl
xchg
mov
arpl
mov
cmpsb
lret
jecxz
xor
rclb
out
jno
add
xchg
and
push
lea
xchg
lahf
sub
sbb
pop
sbb
sub
adc
out
clc
imul
faddl
xchg
sahf
aaa
xlat
xchg
movsl
lods
fistpl
jnp
mov
repz
dec
shlb
jg
sub
ret
out
mov
dec
cmp
enter
repnz
insl
icebp
pusha
jne
or
inc
and
daa
repz
cltd
pop
out
imulb
pop
add
or
mov
adc
in
dec
adc
pop
xchg
dec
insl
xchg
shr
cmp
xchg
lods
pop
testl
daa
test
adc
hlt
sahf
mov
dec
xlat
and
int
jl
xchg
adc
add
int3
sahf
rcrb
imul
test
xor
cwtl
je
mov
jb
pop
cmp
mov
enter
push
xchg
mov
pop
jns
sahf
lahf
mov
pop
jnp
mov
jmp
mov
cmpsb
ja
pop
loope
xor
inc
repnz
jne
rcll
mov
mov
inc
mov
jbe
in
pop
and
lret
rol
cld
mov
fisubrl
cli
fmuls
xchg
lcall
ret
leave
jne
push
pop
mov
repz
jmp
inc
dec
adc
jae
dec
xor
out
ror
xor
pop
pusha
jb
insl
outsl
data16
xor
cmp
test
fimull
pop
pushf
mov
push
mov
or
fcmovnbe
mov
fs
daa
aam
mov
pop
iret
and
int
pop
and
mulb
cld
js
cmpsb
or
jg
testb
mov
cmp
add
fstps
mov
outsb
insb
lds
sbb
mov
repz
movsb
lret
xor
mov
jge
cmp
ds
jnp
push
mov
test
xchg
push
pop
inc
enter
int3
add
mov
mov
ds
lret
sbb
cs
dec
insb
or
and
jns
mov
cli
aam
cltd
fwait
mov
add
adc
and
mov
stc
jo
insb
sar
out
sub
mov
and
mov
mov
loope
adc
dec
jge
mov
in
push
mov
les
mov
addb
je
in
data16
idiv
js
pop
dec
cmp
addb
mov
hlt
in
shr
orb
fs
stos
mov
aas
jmp
xchg
fisttpll
and
cmpl
push
jge
sub
and
insl
lods
lods
dec
in
in
adc
mov
xchg
lret
xor
shrb
lods
xor
add
or
xlat
ss
orl
sub
and
lret
lods
test
push
sub
xchg
in
push
les
movsl
in
add
cwtl
dec
das
test
mov
cmpsb
add
and
push
mov
add
sbb
cmpl
push
pushf
xchg
stos
mov
std
sbb
jl
addr16
jp
and
aaa
or
in
mov
cwtl
push
add
test
mov
lret
and
add
gs
inc
ret
cmp
push
jo
and
jns
dec
aam
jle
mov
ret
pop
inc
jne
cli
cmp
hlt
cmp
push
jg
fs
push
sbb
std
mov
xchg
pop
sbb
int3
popf
sbb
pop
xor
popa
cmp
ret
int3
jg
fs
in
cmp
imul
insl
int3
cmp
cmpsl
inc
lahf
repnz
mov
insl
dec
icebp
pop
sub
mov
repnz
jg
pop
inc
icebp
mov
das
push
lock
dec
popl
pop
sub
push
and
loop
adc
and
sub
inc
mov
jecxz
xchg
dec
test
xlat
push
adc
push
and
mov
push
sti
popa
adc
cmpl
incl
and
adc
rcrl
inc
cld
addr16
push
add
cmc
sbb
xchg
pusha
and
inc
jo
loop
xorb
dec
stos
cs
xor
push
and
and
fs
out
mov
adc
idivl
pop
adc
out
aad
cs
jnp
and
shl
outsl
sub
int
lcall
gs
fwait
stos
cmp
mov
imul
xchg
cltd
or
mov
xor
xor
out
idivb
fsts
movsb
inc
xchg
js
cmp
das
lods
rcl
xchg
mov
or
xor
call
cmp
movsb
scas
add
or
push
inc
push
push
lret
jge
adc
adc
sahf
aad
sti
sahf
and
mov
xchg
cmp
sub
test
outsb
or
jmp
jmp
xor
rol
jmp
daa
aam
leave
or
jne
dec
insl
das
in
adc
pop
rcrb
mov
std
adc
fistpll
scas
fcoml
jg
ja
stos
fs
dec
rcll
mov
ret
lock
cmp
push
clc
dec
in
adc
inc
icebp
lds
lretw
in
adc
pop
dec
sub
mov
mov
dec
pusha
push
pop
mov
xor
movsl
xchg
pop
aad
or
jbe
out
jno
mov
jl
xlat
mov
mov
jne
fidivs
stos
mov
pop
loope
or
dec
sbb
pop
in
icebp
pop
adc
cmpsb
lret
xor
jns
jb
fcoms
dec
sti
cmpsb
repz
inc
test
pushl
sbbb
or
ror
imul
sub
mov
testl
dec
add
pop
adc
sub
jecxz
out
in
fdivl
push
fnstenv
insb
prefetch
ss
jb
leave
mov
gs
add
cli
jnp
or
cmp
cmp
sub
shr
loope
add
dec
stc
shl
ret
mov
push
xchg
cmpsl
mov
xchg
cmc
and
inc
push
aad
in
notl
fisubrs
jnp
test
push
mov
stos
mov
jae
lock
mov
sub
jmp
dec
orl
test
ficompl
xorb
iret
roll
aad
jb
pushf
lea
sbb
jo
std
das
dec
mov
je
and
or
push
ret
lock
mov
pushl
mov
xor
nop
or
jl
jo
cmpsb
daa
dec
sub
xchg
dec
ljmp
ret
add
sbbl
and
dec
fs
stc
jmp
out
jecxz
push
jnp
dec
cwtl
jge
dec
loopne
jmp
xor
in
dec
stos
or
pop
mov
int3
loope
mov
pop
cs
mov
mov
mov
imul
mov
sbb
add
or
aam
pop
lret
lods
pop
push
mov
xchg
cmp
outsl
into
pop
in
cmp
inc
mov
lock
push
or
push
fs
mov
push
sub
or
and
insl
jnp
xchg
mov
popa
xlat
adc
jmp
fldt
fwait
dec
sbb
cmpsl
push
add
xchg
pop
inc
cld
es
sub
xchg
push
cmp
mov
test
mov
push
dec
mov
or
sbb
inc
inc
jns
mov
cmp
or
lahf
sub
cmp
mov
inc
and
call
je
pop
dec
fwait
mov
sbb
inc
sbb
sub
fwait
and
sub
sahf
mov
shll
aaa
jb
loopne
leave
mov
xchg
mov
cmp
cld
xchg
mov
cmpsb
pushf
repz
add
mov
sti
iret
test
adc
sub
out
xchg
enter
push
pop
jmp
or
dec
and
nop
sbb
pop
inc
psrlq
lcall
stos
pop
cmp
sub
lret
push
xlat
or
inc
mov
aaa
dec
mov
lods
movsl
cmc
fldt
mov
faddl
fisubs
loop
orb
idivb
movsl
arpl
out
adc
cld
arpl
imul
scas
mov
pop
xor
adc
mov
gs
jb
lahf
and
call
push
mov
xchg
stos
cmp
xchg
gs
pusha
jg
das
ss
push
sbb
sub
xchg
icebp
pop
cld
dec
jmp
test
push
sbb
sbb
adc
or
adc
and
dec
lcall
imul
sahf
cmp
ljmp
in
xchg
inc
lock
aad
cmp
fisttpll
cmp
out
fs
ret
jp
sbb
push
cmp
inc
int3
sbb
mov
push
cmp
cmpsl
mov
rcrl
push
shl
popf
adc
pushf
aaa
add
adc
or
and
lcall
in
outsb
lods
jns
and
pop
inc
mov
stos
xchg
loope
or
push
ss
ror
in
movsl
popf
testb
push
scas
arpl
pushf
in
fwait
or
pop
sarb
movsl
xor
lea
into
es
daa
mov
adc
int3
data16
push
insb
jle
inc
mov
mov
jno
insl
dec
push
adc
jecxz
inc
sub
sub
icebp
mov
fimuls
lcall
dec
inc
aam
xchg
cwtl
inc
std
xchg
rorb
arpl
pushw
scas
call
dec
push
dec
pop
aaa
fwait
xchg
aaa
mov
xlat
dec
pop
cmpl
out
sarl
gs
sbb
mov
js
je
in
into
lds
xchg
push
mov
cmpsb
push
push
jle
dec
addr16
jns
ret
stos
or
push
jecxz
jp
mov
aaa
shlb
sbb
lea
mov
push
arpl
popa
arpl
cmc
pop
clc
cmp
cmp
inc
imul
popa
mov
enter
mov
mov
xchg
or
test
popf
sbb
js
fcoml
inc
mov
sahf
xchg
dec
cld
jp
push
pop
xor
xchg
jmp
push
out
inc
ret
cmp
jecxz
lcall
loop
xor
jecxz
mov
in
or
or
ss
and
fistps
daa
lret
pop
or
xor
sbb
xchg
adc
or
mov
cmpb
xchg
mov
and
int3
mov
cld
xor
mov
add
jns
les
arpl
fsubp
cmp
pop
rcll
or
repnz
inc
cmp
aam
nop
loope
loop
xor
mov
sub
in
xor
jg
fistps
outsl
pop
inc
out
push
mov
fstl
inc
jbe
xchg
and
push
mov
jle
shlb
mov
xor
ret
fimuls
or
add
sti
sub
lahf
pop
fwait
cmp
mov
sbb
cmp
push
in
test
push
mov
xor
ja
leave
push
shlb
pop
mov
flds
or
or
inc
outsb
push
in
sbb
adc
outsb
push
or
leave
test
mov
daa
dec
jo
ret
cmpsl
fildll
add
daa
cmpsb
out
ja
dec
lahf
cs
pop
push
jnp
push
jae
mov
cmpsb
or
lahf
adc
sahf
stc
dec
mov
stos
pushf
xor
movsl
loope
fsubrs
jbe
push
xorb
xchg
les
and
ljmp
jno
mov
pop
jne
out
cmp
fwait
add
mov
data16
inc
jb
add
in
es
xchg
rcl
xchg
pop
jno
inc
mov
cmp
ret
arpl
out
add
dec
test
ficomps
push
cmp
xchg
roll
sbb
push
ret
insb
cmpsl
lahf
xchg
out
adc
inc
in
adc
movsl
sub
sub
je
repnz
fdivrs
xchg
cs
and
sahf
scas
out
inc
loope
adc
filds
mov
js
sahf
out
xor
rorb
mov
mov
call
or
leave
and
or
in
imul
sub
ljmp
mov
lret
lods
mov
or
aaa
add
sarb
popf
cli
sti
outsl
jl
insl
or
lds
mov
clc
cmc
test
dec
sbb
push
xchg
test
repz
cmp
xor
repnz
mov
pop
repz
gs
cwtl
ffree
stos
sub
movsb
clc
inc
bound
xor
mov
sub
fcmovnu
out
push
xor
push
jecxz
cmp
cmpsb
jle
add
mov
aad
nop
fwait
pop
and
bnd
lahf
mov
int3
sbb
add
push
dec
es
mov
or
arpl
adc
or
pop
repnz
mov
mov
sub
xchg
mov
rcl
pushf
mov
in
mov
push
add
or
inc
add
cmc
ss
and
outsb
std
rorl
push
idivl
ss
lea
mov
call
stos
fsubrl
in
xor
test
mov
mov
aaa
push
into
enter
pushw
shll
ljmp
cld
cmpsb
push
sub
int3
and
nopl
insw
sub
ljmp
xchg
inc
mov
pop
pop
fisttpl
or
mov
enter
lea
in
add
in
pop
xchg
mov
sub
lea
inc
push
repz
adc
inc
lret
or
std
stos
lods
cmp
xchg
push
mov
jnp
xchg
cltd
inc
pushf
sbb
insl
les
outsl
aam
push
jno
imul
out
stc
loope
aas
loop
xor
sub
sub
aam
cmp
adc
notl
sarb
lcall
cmp
xchg
inc
sub
jo
test
sbb
mov
jmp
popa
out
or
or
rolb
push
data16
sbbl
pop
ds
mov
aam
mov
or
push
in
mov
fisubrs
pushf
add
outsb
jo
xchg
jo
call
dec
dec
and
mov
mov
push
movsl
inc
pop
pop
adc
or
dec
inc
inc
rclb
out
push
and
iret
mov
mov
jg
or
cltd
sti
pop
iret
subl
in
sub
bound
mov
xor
loope
popa
inc
je
mov
cli
lret
mov
testl
jno
sti
loopne
enter
repnz
or
add
scas
mov
xchg
pop
fidivs
ret
ja
mov
pop
bound
sub
sub
jl
or
pushf
pop
pop
jg
sub
dec
ret
xchg
out
les
push
or
sbb
loop
imul
jecxz
sbb
mov
mov
imul
dec
rorl
out
arpl
adc
cmp
cmpsb
test
pop
lcall
cld
enter
xchg
dec
push
fsubrs
xor
movsb
popf
int
sbb
fcompl
push
rolb
shr
dec
xor
jns
mov
or
lea
xchg
loop
pop
xchg
dec
xchg
das
inc
xchg
les
pop
test
or
jecxz
push
sub
lcall
adc
fimull
sbb
jecxz
arpl
sub
loopne
or
loope
push
into
push
icebp
mov
and
repnz
pop
scas
mov
fwait
inc
push
in
sub
fmull
jnp
cld
cs
in
js
xchg
mov
adc
push
shll
cmpsb
fisttpl
sbb
xchg
mov
inc
push
pop
jae
sub
lock
mov
adc
push
in
stos
bnd
add
add
jne
jns
push
dec
testl
fldt
addl
sub
pmullw
andb
or
scas
mov
xchg
fdivrl
fdecstp
jo
in
imul
lcall
fistl
push
lods
rcrl
pop
push
loope
cmp
setb
push
xor
cltd
into
aas
aaa
mov
mov
mov
roll
mov
adc
adc
mov
jg
js
cld
aas
mov
loop
enter
push
imul
fnsave
add
repnz
add
jecxz
lea
movsb
mov
adc
sub
orl
out
loop
dec
push
jcxz
out
ficompl
dec
sub
jle
inc
out
push
sbb
lods
cmp
gs
mov
xchg
out
je
stos
into
add
jo
cmpsb
divb
cmp
dec
stos
mov
xor
cmp
cmpl
xchg
sub
add
out
mov
inc
bound
jno
addr16
shr
pop
nop
outsb
sub
push
test
imul
mov
lcall
adc
pop
cmp
lods
mov
ret
pop
pop
xor
mov
jae
pop
out
inc
subl
inc
popa
in
jns
call
jb
ss
fcmovnbe
inc
scas
cld
sub
jmp
js
pop
fwait
and
push
test
mov
js
ret
xchg
push
mov
mov
add
inc
imull
pop
cmp
add
mov
push
leave
loope
insb
std
sahf
xchg
int
repz
pop
nop
out
push
xchg
stos
or
jmp
jp
pop
sbb
test
inc
in
lods
lcall
pop
fidivl
ret
adc
sub
repz
jne
jbe
stos
aam
pushf
stos
ja
inc
add
lahf
jno
inc
movsl
push
cmp
dec
iret
movb
pop
jge,pt
mov
rclb
aaa
push
ret
test
aaa
popf
aad
sbb
sub
pushl
iret
jns
mov
jecxz
data16
jne
ds
pop
mov
mov
xlat
sub
xchg
add
mov
les
jle
mov
pop
mov
es
out
pop
insl
cmpsl
mov
nop
adc
lahf
cmp
add
out
inc
arpl
fisttpll
mov
pop
scas
xor
scas
add
jnp
hlt
decl
push
pop
mov
into
pop
lods
push
jmp
or
hlt
das
dec
mov
shrb
maxps
rolb
stos
bound
rclw
fimull
mov
movsl
repz
imul
dec
push
or
cmpsl
ficomps
sbb
push
ret
sbb
jo
push
insb
jo
ss
mov
fcmovnu
test
aaa
sbb
fsts
mov
je
cmp
and
sub
movsl
cmp
pop
andl
mov
push
xor
adc
cmp
sub
dec
and
jecxz
lock
mov
in
int
loopew
insl
enter
stos
cmpsb
int
dec
mov
clc
popf
test
cmc
mov
or
push
test
sarb
inc
pop
loop
mov
and
lods
movsb
insb
nop
js
xor
sub
jne
mov
negl
not
je
pop
insl
mov
sbb
jno
xor
add
or
cld
mov
jl
push
sbb
stc
bound
in
lret
sub
sub
xlat
clc
push
jno
mov
mov
test
es
push
xor
xlat
push
mov
cmp
sub
jmp
push
addl
push
enter
jns
pmullw
xchg
sbb
shl
shl
push
cmpsl
inc
pushf
test
vpshad
movsl
mov
lds
pop
cmp
popa
leave
jl
jo
imul
dec
jle
leave
icebp
nop
push
mov
and
pop
data16
inc
jo
lods
inc
pop
inc
loope
inc
xlat
lcall
jge
outsl
out
sbb
rolb
sbb
loope
mov
jae
jp
daa
inc
stc
sbb
mov
leave
pop
fimuls
repz
or
in
sbb
ss
dec
hlt
int
jl
sbb
push
and
dec
shr
push
jo
nop
add
mov
pop
rcl
inc
lahf
mov
push
movsl
pop
scas
sti
rol
in
pop
lret
add
adc
push
scas
jb
fisubs
shlb
mov
aad
insb
pop
dec
mov
mov
loop
xor
dec
mov
lock
mov
stos
dec
lret
push
inc
lods
mov
push
push
adc
cmp
es
xor
aad
dec
fistpl
push
inc
loope
js
push
loopne
sub
xchg
pop
scas
pop
push
in
mov
into
xor
push
rolb
shr
rolb
mov
xor
jbe
mov
push
test
scas
lock
mov
add
ror
aad
popa
cmp
pop
fcmovnu
outsb
push
pop
stos
sarb
jle
jno
loop
insb
out
pop
clc
addl
and
in
les
mov
mov
cmp
jmp
lds
add
insb
stc
int3
cld
jecxz
outsl
loopne
loop
pop
sahf
dec
xor
scas
or
arpl
cmc
test
cmp
xor
jbe
sub
mov
push
ds
mov
or
jo
jecxz
push
add
fcmovbe
mov
jo
cli
in
in
xor
xor
pop
clc
rol
hlt
das
xchg
cltd
mov
int
sub
sahf
push
inc
ds
lds
mov
sar
iret
sbb
pop
outsl
test
cs
dec
cmp
ja
inc
fsubrs
adc
or
hlt
jae
and
test
gs
mov
pop
lea
mov
add
dec
sbb
icebp
icebp
out
push
stos
pop
add
or
out
cmp
icebp
roll
cs
dec
mov
dec
loop
ret
in
stos
dec
adc
sub
scas
sub
cmpsl
arpl
adc
fucomp
scas
xlat
xchg
mov
mov
cltd
or
test
jp
jge
sahf
mov
out
out
xor
pandn
mov
cltd
mov
push
and
cmp
xchg
cmc
call
sar
enter
cmc
clc
sahf
adc
es
push
mov
mov
loope
aam
jo
jne
mov
out
mov
dec
pusha
sub
cld
xchg
inc
xchg
inc
enter
mov
cmp
into
lods
out
loope
dec
push
add
gs
repz
repz
mov
or
nop
filds
mov
mov
movsl
fimull
flds
sbb
or
sbb
dec
xor
mov
sub
or
in
lock
sbb
mov
jno
js
mov
out
lcall
sbb
mov
mov
testb
lods
dec
lcall
jmp
jns
sti
rcll
fsub
cltd
jb
pop
adc
sub
mov
pop
push
imul
cmpsb
or
xlat
scas
lcall
and
jle
dec
fmul
dec
and
mov
dec
hlt
jnp
mov
aad
or
jge
pop
arpl
cmp
sub
lods
jp
sub
mov
xlat
xchg
or
xor
mov
push
dec
mov
cmp
imul
mov
aam
mov
insl
popa
outsb
insb
add
and
cmp
mov
and
cmp
xchg
mov
jo
push
stos
pop
dec
mov
scas
sub
xor
fcomi
mov
jno
xchg
push
adc
mov
and
test
jp
cmp
test
gs
mov
cmp
in
out
xchg
pop
push
mov
inc
push
mov
scas
mov
cltd
rcr
es
push
lds
mov
cli
xor
popf
fwait
divl
jns
push
int
enter
pop
xor
js
sbb
inc
in
sbb
push
push
fstl
pop
inc
int3
push
jns
jbe
mov
push
out
mov
ret
and
sbb
push
leave
cli
pop
mov
call
push
pusha
loope
mov
rol
xchg
sbb
or
sbb
sub
rolb
cli
and
js
push
mov
cmpb
fcmovnb
pop
add
sub
inc
mov
lret
sub
lods
js
inc
push
inc
loope
test
inc
loope
mov
jnp
pop
hlt
add
lea
cs
sbb
aad
sub
sbb
imul
inc
popa
lods
lea
xor
or
jb
imull
mov
xchg
adc
add
xor
fxam
xor
mov
pop
or
jg
push
add
subb
pop
push
pop
add
std
pop
imul
jns
lea
xchg
cmp
sub
sbb
subl
shrb
jo
mov
inc
mov
mov
push
ss
push
add
and
leave
cmp
mov
vpsraw
jecxz
hlt
mov
push
xchg
push
add
sbb
sbb
ret
scas
mov
pop
pop
push
js
jecxz
cmp
aaa
hlt
sub
xchg
xchg
call
xchg
dec
dec
jns
push
aaa
mov
jo
fidivrs
sar
inc
sti
rcl
dec
sti
or
add
lods
sbb
out
ret
insl
loopne
add
popf
push
push
mov
lcall
push
add
addl
adc
aas
xchg
push
inc
out
cs
dec
mov
jo
mov
outsb
data16
mov
mov
repnz
adc
inc
jmp
push
mov
cmp
sbb
adc
push
mov
loop
clts
daa
cld
outsb
imul
push
std
aam
pushf
mov
lretw
test
outsl
sub
movb
insb
lahf
orb
and
js
mulb
sub
adcl
call
mov
mov
or
pop
xchg
mov
dec
sub
sti
insb
dec
fcmovnu
inc
adc
popl
pushf
repnz
data16
mov
bound
or
in
data16
and
cmp
mov
xor
adc
jl
fstpt
sbb
jmp
mov
cmpsb
jmp
clc
addr16
mov
mov
mov
pop
test
mov
jnp
lods
jle
dec
lret
inc
or
push
fsubl
popf
out
adc
sub
mov
aad
pop
pop
push
popa
inc
aam
mov
sbb
into
nopl
je
jmp
push
aam
mov
out
cmp
movsb
dec
xchg
imull
cmpsl
cmp
cmp
popf
sbb
push
insb
mov
pop
rorl
push
test
mov
scas
pusha
mov
mov
push
or
mov
roll
sbb
sti
loope
adc
adc
clc
mov
push
or
ljmp
pmaddwd
loope
loopne
jl
xor
xchg
mov
jb
mov
add
movsl
fcomp
adc
hlt
aam
lcall
push
pop
push
push
jecxz
dec
jecxz
scas
sub
je
mov
push
in
sub
dec
pop
movsl
cli
fsubrs
inc
and
cmp
mov
orl
repnz
lock
out
out
sub
imul
mov
inc
jle
pop
addb
and
inc
xor
bound
in
or
xchg
sub
loop
adc
adc
arpl
xchg
test
push
cltd
movsb
outsl
inc
inc
and
dec
es
clc
inc
inc
mov
insb
nop
pop
cwtl
xchg
lahf
std
cltd
sub
fadds
jne
pop
push
sti
enter
pop
pop
lock
jl
int3
rclb
jno
out
mov
push
xor
add
sub
insb
jmp
inc
pop
roll
lods
gs
or
mov
xchg
cmpsl
push
orl
xchg
fdivrl
pop
movsl
xchg
sti
mov
fmull
lret
adc
mov
push
cmp
call
orl
jge
inc
lret
repnz
xlat
xchg
or
adc
xchg
sarb
mov
popa
jno
cmc
push
ficompl
outsl
mov
push
mov
repnz
or
mov
pop
jge
faddl
xor
or
lret
popf
mov
ror
mov
jge
data16
sahf
cltd
fs
pusha
or
sar
inc
ret
pop
xchg
xchg
cmpsb
add
cmpl
and
vcvtdq2pd
lods
fsubrs
mov
mov
insl
pusha
cmp
loopne
mov
shll
adc
inc
lea
stos
out
testl
cmp
fisttps
clc
ds
xlat
mov
insl
jp
rol
xor
push
dec
fnstenv
jge
or
push
scas
push
sahf
cmp
push
mov
ret
lods
rcll
sti
or
jg
xor
das
fucom
je
test
add
push
add
mov
xchg
clc
or
fmull
je
test
jns
pushf
pushf
adc
out
adc
sub
xlat
ljmp
sub
add
fcoml
cmpsb
mov
dec
mov
js
adc
lcall
pop
outsb
lret
mov
shr
and
and
aas
mov
leave
inc
and
pop
xchg
bound
push
sub
sub
sub
jnp
iret
scas
xchg
pop
pop
mov
popl
lods
add
out
xor
pop
aaa
or
out
nop
repz
int3
and
mov
sub
pushf
mov
jae
cmpb
ffree
dec
cmp
scas
mov
mov
cli
mov
cli
into
sub
mov
test
filds
sbb
inc
int3
add
xor
jno
fstps
loopne
cmp
sbb
daa
in
sahf
xor
pop
movsl
or
mov
int3
lret
call
push
push
push
inc
push
jp
xor
cmp
cmp
xchg
cmp
sbb
xor
mov
subl
sbb
and
aas
testl
mov
cmc
sub
push
push
in
dec
mov
les
sub
and
cwtl
movsb
loopne
test
loop
push
test
push
in
cmp
hlt
mov
jb
popf
outsl
push
pop
mov
rcr
pop
out
popa
frstor
and
out
xlat
mov
xchg
int
les
xchg
mov
movsb
movsl
mov
fbstp
lock
in
push
cmpsl
jge
insl
xchg
add
dec
ret
test
xor
adc
or
repz
pop
or
faddp
scas
inc
mov
push
es
or
stos
mov
aam
inc
lcall
scas
adc
mov
scas
mov
pop
shrl
jno
cmpsl
dec
sbb
out
push
aas
inc
add
push
cmc
stos
pusha
cmp
leave
adc
mov
inc
fstps
push
inc
xchg
aam
clc
cmpsb
jnp
push
cmpsb
test
cmpsb
xchg
das
pusha
xchg
ds
cmc
lods
mov
test
cltd
add
inc
adc
je
push
cmp
jp
nop
push
leave
mov
insb
outsl
xchg
dec
outsl
jg
mov
xchg
xchg
xchg
sbb
push
push
xchg
sub
inc
jne
adc
cmp
xor
cwtl
and
and
xchg
xchg
dec
jbe
data16
pop
popa
movsl
jb
and
cmpsb
pop
lods
rcrb
sti
mov
xchg
dec
int
loopne
leave
jb
xchg
lods
mov
and
lcall
mov
push
in
iret
out
out
test
inc
xchg
inc
jle
ret
add
sbb
sbb
xor
cwtl
gs
inc
mov
pop
and
mov
and
sbb
cmp
enter
testl
lahf
sub
pop
ret
pop
pop
jne
pop
and
shrb
daa
ljmp
int3
in
cmp
xor
clc
mov
add
js
jne
jle
into
rorl
push
jae
cmp
out
into
jl
cs
leave
xor
add
or
add
lret
sub
and
fcomps
aaa
inc
cwtl
jno
and
jg
mov
cmp
dec
push
out
out
scas
pushf
push
pusha
movsl
js
cmp
mov
mov
mov
mov
fldl
add
mov
pop
fidivs
sbb
jb
ret
xchg
add
push
movsb
loope
cli
xor
pop
rclb
loopne
cmp
loop
add
dec
in
cmpl
inc
and
add
inc
pop
push
xor
xchg
dec
rcr
or
push
aaa
sahf
mov
lds
xor
sbb
frstor
mov
out
nop
sahf
jno
insb
iret
daa
mov
add
popl
fs
mov
inc
orl
jmp
dec
push
xor
movsb
lret
sub
jmp
mov
mov
cmp
inc
ret
inc
mov
mov
fisttpll
pop
loop
mov
aas
xchg
ret
xchg
je
popf
arpl
dec
adc
mov
cwtl
sbb
jmp
rcr
inc
xchg
dec
lock
popa
add
adc
mov
and
stc
mov
cmc
jmp
jge
addr16
dec
sahf
mov
hlt
mov
inc
dec
negb
test
std
roll
stos
jae
insb
sbb
adc
iret
and
out
or
addr16
mov
jo
adc
cli
pop
push
dec
add
orb
aaa
loop
imul
mov
sbb
mov
movsb
es
dec
and
mov
je
mov
sub
loope
pop
push
dec
mov
push
fadds
dec
movsl
outsl
push
push
jns
ret
arpl
sub
xor
lcall
adc
les
or
push
jb
mov
xadd
inc
pop
imul
ljmp
jp
fidivrl
ror
es
push
push
pop
cmpsb
push
inc
call
xor
jnp
push
lret
xchg
ss
sub
stos
mov
ret
sub
or
adcl
nop
cwtl
dec
cmp
cltd
icebp
cwtl
insb
pop
cmc
pop
xchg
aaa
jge
xchg
cltd
rorb
mov
lds
out
and
xchg
mov
sub
or
insb
aam
dec
dec
inc
dec
jle
push
mov
jp
ficomps
aad
call
notb
adc
enter
dec
pop
imul
js
fmul
cwtl
testl
mov
mov
mov
dec
dec
cli
dec
push
jg
mov
jo
jmp
cmp
fimuls
ret
inc
xor
shl
in
int3
add
es
fadds
mov
sbb
test
xchg
cli
outsl
add
push
sub
cmp
les
jg
xorb
push
stos
cmp
cwtl
ret
sbb
mov
rclb
lock
mov
daa
sbbb
mov
scas
add
stos
repz
das
sbb
ljmp
filds
sbb
and
dec
adc
ljmp
and
cmpsb
xchg
mov
sub
sbb
repz
movsb
push
enter
or
scas
push
cld
fcomip
out
addb
adc
loopne
dec
lock
out
mov
test
or
loopne
and
pop
xchg
pop
and
mov
fwait
adc
stos
or
sarb
dec
mov
add
push
aad
xacquire
cmp
xchg
sub
lret
hlt
mov
inc
lods
mov
fs
fisttps
orl
cmpsb
std
mov
int3
xor
mov
fdivr
not
es
test
push
cmp
shlb
fisttpll
push
push
adc
xor
cmc
pop
xchg
dec
mov
xor
mov
or
xor
daa
cmpl
cmp
fs
pop
jmp
dec
sub
test
mov
negb
add
into
shrl
shr
pop
aaa
outsl
mov
xor
inc
divb
adc
xchg
lds
andl
out
divl
mov
arpl
scas
sub
ficomps
add
es
ljmp
es
mov
insb
and
push
add
test
mov
mov
sahf
jp
in
inc
push
cltd
xor
xor
cmc
test
jmp
mov
fsts
out
or
mov
push
pop
mov
data16
insb
mov
sar
xor
pop
icebp
je
arpl
xchg
jb
dec
jp
rorb
xor
adc
incb
fbstp
sbb
bound
mov
mov
mov
scas
xchg
pushf
loope
inc
cmp
sbb
insl
inc
xchg
inc
dec
das
cmp
sbbb
jp
rcl
pop
test
or
sbb
bound
mov
cmpsb
inc
mov
outsb
and
and
out
inc
mov
adc
hlt
scas
xor
shrl
pop
in
aam
clc
imul
int3
neg
xor
adc
popa
sbb
lcall
cmp
jp
lret
shll
ss
and
adc
in
ljmp
mov
ret
sbb
mov
bnd
test
jp
xchg
mov
inc
lcall
es
dec
mov
dec
lcall
adc
xchg
jmp
jge
mov
jns
push
dec
fisttpl
clc
stc
xor
call
and
cmp
cmp
push
dec
push
popl
andl
outsb
or
sub
sub
shl
add
push
jo
and
jne
push
int3
mov
inc
pop
fwait
testl
adc
pop
ret
sbb
and
inc
sarl
inc
fiadds
test
inc
sub
fwait
orb
jl
dec
cmp
stos
leave
xor
test
inc
dec
add
adcb
addr16
ficompl
mov
loope
out
cli
xor
lods
xor
in
mov
loop
push
shlb
rcr
adc
test
sbb
xchg
mov
fsts
out
dec
std
sub
and
add
popl
inc
out
movsl
popf
test
sub
mov
jl
push
pop
mov
cmp
jbe
and
fbld
aaa
mov
fstl
xchg
testl
mov
lret
pop
dec
aas
inc
mov
xor
cwtl
jp
sbb
sub
sbb
xchg
or
mov
aaa
mov
fsubl
clc
stos
mov
pushf
sarb
push
inc
idiv
bound
and
or
push
cmc
xchg
and
mov
mov
cli
jl
cmc
mov
mov
jg
dec
mov
push
jle
push
mov
pusha
dec
lret
test
push
pop
and
xor
add
and
stc
loope
xor
push
repz
jl
push
outsl
xor
mov
cmpsl
jge
mov
fsubs
scas
test
cmp
cmc
inc
cld
mov
cmp
jno
in
push
addr16
dec
orl
mov
stos
sbb
add
push
cld
movaps
sub
inc
andl
hlt
sbb
pop
out
enter
jmp
mov
jo
loope
push
inc
add
mov
jns
data16
loopne
inc
fisttpll
adc
js
mov
pop
loop
or
and
jecxz
dec
fcmovnu
iret
push
and
cs
adc
daa
fistpl
jo
std
mov
pop
jl
fiaddl
mov
jge
arpl
sub
sbb
dec
add
cwtl
cmpsb
ja
jnp
pop
bound
push
dec
mov
xchg
dec
pop
aas
pushf
std
nop
out
lret
jecxz
out
inc
inc
pop
decb
push
sar
sbb
dec
shl
fisttpl
lods
imul
icebp
jbe
call
and
test
mov
and
cwtl
out
push
fisttpl
xor
lret
jmp
or
pop
xor
jne
mov
fwait
or
sbb
mov
enter
jae
jecxz
aas
into
and
shll
jbe
jecxz
dec
pop
bound
mov
loop
in
pop
add
mov
cmp
lahf
movsl
outsb
mov
lock
xchg
dec
xor
mov
push
sbb
xchg
mov
jge
jecxz
imul
pop
sub
xchg
popl
xchg
aad
fisubrl
mov
mov
mov
out
rorl
in
loop
sti
mov
adc
outsl
and
xchg
addr16
fbstp
or
call
mov
dec
mov
popf
dec
sti
add
mov
jns
repz
testb
add
nop
adc
pop
daa
fs
stc
push
mov
jnp
je
sbb
jno
popl
pop
mov
inc
sti
pop
add
xchg
filds
testl
mov
sar
pushf
mov
mov
mov
xchg
mov
sub
or
push
out
jnp
andl
sub
fstl
enter
xchg
pop
clc
jl
leave
push
and
adc
iret
jp
adc
sub
dec
inc
jne
shrl
lret
lea
and
mov
mov
pop
push
cmp
xor
les
orb
xor
bound
pop
mov
sbb
sbb
add
xchg
test
in
adc
cmp
xor
ds
roll
ja
adc
cmp
sbb
sbb
sbb
adcb
pop
mov
dec
xor
outsl
sbb
jo
mov
in
dec
insb
ljmp
or
mov
sbb
adc
xchg
pop
xor
push
sub
call
fcom
mov
sar
mov
jp
sbb
xchg
adc
enter
dec
or
pop
add
ficompl
aam
jl
sub
push
cli
aas
in
js
bound
ret
mov
pusha
inc
test
ljmp
dec
pop
test
sbb
and
or
add
inc
push
mov
pop
sbb
cs
mov
mov
sub
or
aam
test
addr16
das
pop
mov
jmp
fistps
pop
xchg
mov
or
cmp
xor
pop
inc
jl
repnz
shl
mov
jnp
pop
jmp
in
mov
inc
rcll
aas
pop
jo
push
orl
notb
fwait
cmc
sbb
mov
mov
shlb
aas
ds
mov
cmpsb
shlb
adc
inc
fidivl
repnz
adc
xchg
cmpsb
cltd
test
xor
mov
aas
test
adc
mov
mov
lret
dec
pop
xlat
sub
jmp
in
or
movsl
inc
sbb
push
fcoml
pop
imul
push
cmpsl
stos
push
into
jo
mov
in
in
jmp
mov
jp
dec
shlb
dec
pop
and
loop
sbb
imul
fisttpll
stos
lods
jg
js
dec
scas
pop
and
inc
mov
ficoms
mov
or
pop
lods
rorb
call
inc
adc
jbe
ret
flds
scas
movsb
or
aam
stc
sbb
sbb
add
mov
push
and
popa
test
movsb
mov
cmp
shr
addr16
jbe
mov
icebp
loop
outsb
in
cmc
mov
mov
mov
andl
mov
cmp
sti
cmpsl
pop
pop
sbb
popa
leave
push
cld
fdivl
into
stos
testb
or
or
jle
sarb
adc
stos
shll
loop
or
pop
lods
in
add
inc
es
loopne
rcrl
xchg
pushf
mov
rolb
and
rcrb
nop
and
pop
sahf
dec
cmp
mov
mov
aam
jb
outsl
fidivs
lods
cmpsb
lcall
adc
test
add
movsl
sub
mov
jmpw
mov
leave
stos
repz
data16
mov
js
dec
cmpb
sarb
xor
mov
popa
adc
leave
icebp
mov
dec
xchg
push
mov
shrb
jge
inc
jo
into
les
mov
and
aaa
test
fdivl
rcll
test
mov
lcall
pop
insb
iret
xor
adc
jbe
jb
adcb
jbe
cmc
and
pop
mov
push
xor
stc
sub
sub
insb
cltd
mov
mov
fcoms
out
jmp
xlat
mov
cs
into
xor
les
addr16
dec
int3
push
add
sub
add
mov
insl
testl
push
jbe
stc
push
jl
repz
xchg
and
dec
sub
jg
enter
xor
xchg
mov
mov
or
test
rcrl
mov
ljmp
into
scas
and
adc
adc
shll
mov
mov
dec
mov
dec
xor
rcrl
jge
mov
fidivl
out
adc
dec
fnstenv
mov
popa
xchg
mov
sub
jae
inc
and
pop
jne
xor
repz
pop
xor
mov
dec
orl
mov
je
xlat
insb
gs
mov
fimuls
cmp
sahf
pop
and
add
aas
adc
aad
push
sbb
pusha
xchg
in
jb
out
test
nop
push
es
sarl
loope,pt
pop
lret
scas
xchg
add
xchg
jb
test
add
push
sub
pop
push
cwtl
cmc
imul
lods
pop
jbe
mov
in
sbb
xchg
inc
mov
pushf
into
pusha
push
fs
push
mov
subl
sarb
sub
mov
arpl
xchg
loop
cltd
bound
mov
repz
mov
int3
pop
jmp
cmc
sbb
std
aas
movsl
adc
gs
cmpsb
dec
aam
cwtl
xchg
mov
inc
ret
cmp
ja
test
mov
inc
rolb
mov
xor
in
or
int3
xor
cmp
cltd
or
nop
rorb
sbbb
icebp
hlt
xchg
dec
push
and
out
pusha
mov
rcl
cmpsl
dec
cmp
out
pop
adc
mov
mov
daa
inc
cli
xor
add
nop
or
push
xchg
insl
adc
pop
dec
ss
imul
pop
aas
hlt
sbb
jecxz
scas
pop
mov
add
arpl
fstpt
or
loop
push
adc
loop
loope
dec
sub
addr16
mov
jns
mov
add
dec
loope
push
repnz
jl
scas
mov
add
addr16
mov
std
lret
push
ret
std
icebp
mov
hlt
push
into
sahf
xchg
jmp
cld
jg
push
mov
pushf
jge
push
and
push
into
fistps
inc
mov
add
mov
loop
aad
and
fcoml
fcmovnb
pusha
lods
imul
add
pop
sub
mov
adc
shrb
xchg
cli
mov
pusha
inc
push
mov
mov
xchg
xchg
stos
loope
inc
ss
ss
or
xchg
movsl
sbb
fldcw
or
movsl
fs
push
test
dec
dec
or
mov
loope
cli
lahf
add
pop
rcll
xchg
add
sbb
push
fistpl
mov
pushf
inc
lahf
push
mov
loopne
daa
aam
sbb
lds
std
leave
push
sbb
push
add
sub
mov
jno
xlat
pushf
arpl
out
jbe
dec
es
or
xor
lea
or
add
adcl
add
adc
lret
movsb
and
out
adc
movsb
xor
or
faddl
cmp
cwtl
adc
movsb
jmp
sub
inc
xor
aam
data16
sbb
or
sub
mov
idivb
or
out
jge
inc
outsl
push
out
adc
js
mov
push
dec
lds
leave
sbb
adc
loopne
cmp
pusha
into
les
and
shl
or
ficoml
in
mov
int
sub
repnz
push
xor
imul
mov
enter
cli
arpl
mov
sbb
orb
aaa
mov
andb
push
fdivs
or
or
mov
push
push
push
inc
xchg
jmp
cmp
ss
push
jle
or
xor
dec
imul
cli
dec
pop
pop
aas
outsb
mov
push
add
subb
ret
xlat
or
sbb
clc
or
fcmove
cmp
jmp
mov
rclb
dec
push
inc
jo
dec
cwtl
dec
hlt
fs
andb
fnstcw
movsb
mov
jl
mov
cwtl
dec
mov
adc
mov
lea
repz
stos
adc
cwtl
loop
jo
or
mov
and
cwtl
xor
add
lret
pop
xor
xchg
pop
aaa
push
js
mov
std
dec
xor
jmp
push
fwait
pop
add
jge
or
jmp
xchg
jne
xor
sub
xchg
push
sbb
scas
sub
mov
cmp
outsb
and
dec
leave
arpl
jg
inc
sub
add
add
push
mov
xlat
out
inc
loopne
js
add
xchg
push
mov
dec
addl
ror
ret
call
lea
aad
and
in
or
push
sbb
ret
xor
mov
push
aam
lret
fcmovnu
jle
mov
push
mov
sub
ljmp
or
mov
push
lret
sbb
or
imul
jecxz
push
call
idivb
add
jecxz
pop
adc
xchg
shrb
inc
inc
inc
mov
mov
push
ss
fmulp
stos
mov
popa
outsb
int3
push
pop
xchg
aad
rorl
cmp
dec
mov
cli
nop
inc
dec
nop
sahf
das
enter
mov
test
dec
rorb
sbb
and
mov
sub
fwait
push
fwait
popf
jmp
stos
ds
scas
imul
xor
add
dec
cmp
add
lea
fildll
int
loope
scas
mov
jno
mov
js
mov
in
loop
stos
push
aas
out
sub
cmp
adc
lds
lds
cs
cmp
in
and
insl
mov
nop
push
add
and
adc
inc
dec
mov
xchg
adc
push
ss
dec
sub
mov
cmp
aas
mov
in
sbb
jle
jp
cwtl
add
mov
ss
ds
pop
adc
push
push
pop
ljmp
mov
sti
xchg
aam
xor
sbb
mov
fcomps
ss
mov
mov
insb
mov
fmull
bnd
xchg
sbb
inc
das
sti
push
sbb
outsb
xchg
scas
jne
pop
fcompl
xchg
add
xor
lcall
call
mov
daa
sub
or
or
fwait
add
mov
sub
nop
ret
mov
jmp
pop
sbb
dec
xor
mov
sbb
fisubs
and
test
lret
leave
push
cmc
aas
ret
orl
mov
or
in
repz
hlt
sti
in
aas
cmpl
mov
sub
sub
lahf
mov
mov
mov
xchg
cmp
xor
xor
insl
jp,pn
jge
pop
repnz
add
incb
imul
loope
pop
insl
jo
out
jne
in
es
addr16
sbb
xchg
popa
and
or
jg
ret
test
in
lods
out
inc
ret
jge,pn
adc
lock
and
mov
movsb
sub
stc
imul
and
out
add
lock
sbb
mov
clc
push
leave
ja
add
outsb
lret
movsb
push
aas
fisttpll
fwait
xor
push
aam
cmp
mov
push
popf
mov
xlat
dec
mov
push
push
push
push
xchg
icebp
das
xchg
push
call
and
sub
push
pop
mov
lret
flds
pusha
dec
aam
lret
pop
inc
pop
xor
stos
test
pop
push
push
cmp
ljmp
dec
fistpl
icebp
ret
movsb
inc
pushl
lock
push
leave
push
jle
mov
sti
lock
and
push
push
jbe
mov
lds
and
test
mov
sbb
imul
scas
sbb
mov
mov
mov
dec
in
out
fcoms
test
lock
shll
outsb
or
jmp
mov
add
adc
bound
xor
popa
sti
test
cmpsb
pop
call
idivb
cmpsl
xor
cs
push
stos
inc
data16
cmp
or
cmpsb
jg
adc
stos
rcrl
inc
xor
insl
xchg
mov
dec
cmp
mov
inc
jnp
mov
push
pop
std
mov
lds
leave
test
test
repz
shll
jo
mov
add
ds
das
and
movsl
out
push
adc
mov
in
shrl
pop
cmp
xchg
cmp
ret
xchg
dec
add
sbb
lea
mov
mov
pop
and
in
inc
scas
xlat
loopne
push
das
push
or
mov
orb
int3
add
js
add
cltd
add
jle
xor
push
popa
pushf
dec
sub
inc
inc
dec
inc
add
cmpsb
add
test
nop
mov
adc
adc
jmp
or
xor
sbb
pop
bound
int3
mov
fsubs
xchg
and
sub
js
insb
push
dec
in
adc
ret
test
mov
and
and
lods
out
jnp
or
mov
push
jg
xor
iret
mov
fwait
push
orb
das
repnz
in
cmc
fisubrs
mov
xchg
adc
mov
xchg
sbb
sbb
dec
sbb
push
cmp
fistl
les
dec
or
popf
fists
ja
push
pop
dec
notl
pop
jg
pop
cld
fsubrp
lods
mov
imul
inc
add
arpl
in
imul
pushf
lods
out
or
ds
lods
pop
hlt
je
das
pop
add
je
and
iret
pop
jecxz
mov
clc
xlat
mov
in
lcall
out
in
test
test
movsl
sahf
jno
in
stc
cmp
mov
jmp
rcll
cli
sbb
das
hlt
in
mov
mov
es
in
imul
dec
imul
pop
jecxz
sarl
das
insl
lret
pop
pop
jmp
dec
adc
cmpsb
stc
mull
int3
hlt
mov
inc
lods
hlt
xchg
adc
ret
in
and
shl
iret
xchg
xchg
pop
call
mov
jg
ljmp
push
fdiv
add
xchg
gs
cmp
add
inc
lock
imulb
insb
and
xchg
pminub
rorl
dec
fs
je
insb
outsl
fwait
inc
sub
sub
aas
inc
dec
add
cmp
mov
in
dec
jmp
sub
ds
dec
lea
out
imul
jp
pop
add
dec
adc
pop
adc
xchg
sub
into
dec
popa
das
or
push
das
xchg
xor
dec
pusha
int3
iret
outsb
pop
mov
adc
rcl
lods
xor
int
adc
pop
and
inc
aam
mov
std
add
jo
push
lret
rorb
dec
ret
test
push
sub
push
jmp
push
dec
enter
adc
mov
roll
testl
ret
cmp
dec
lods
andl
fstl
sbb
jns
mov
xorl
fs
xor
inc
in
cmpsb
movsl
pop
hlt
int
jp
pop
mov
inc
mov
repnz
arpl
push
ss
test
scas
mov
imul
lods
and
call
sub
mov
iret
pop
ficoml
insl
dec
popa
sub
and
xorl
iret
fs
pop
insl
dec
pop
roll
xchg
cwtl
mov
sbb
out
rorb
add
sbb
dec
and
cmp
push
call
pushf
mov
dec
xor
ret
add
jmp
push
scas
sub
andb
imul
push
xchg
scas
lcall
inc
pop
loop
push
and
sub
leave
sub
jne
mov
divl
mov
cs
es
divb
fcoms
cltd
push
mov
popf
jge
cmp
int3
mov
clc
adc
nop
mov
imul
xchg
cmpsl
stos
push
std
xchg
cmp
mov
mov
xor
aam
in
cmp
pop
movsl
xor
popa
aas
ffreep
in
and
jle
insl
dec
xchg
fdivrs
or
sbb
push
repnz
loopne
cmpsl
pop
push
addr16
mov
loopne
inc
xchg
and
mov
mov
jns
dec
push
or
lret
mov
sub
stos
or
pop
xlat
jne
dec
jge
xor
and
lods
jae
xchg
fdivr
jg
imul
scas
mov
xor
xchg
ret
xor
mov
fs
xlat
rclb
xchg
push
repz
add
icebp
fcom
and
jg
imul
push
sub
cmp
push
test
ret
out
ret
and
mov
dec
jo
shll
cwtl
aaa
sbb
imul
cld
fcoml
cltd
add
adc
mov
mov
pop
stos
dec
in
insl
push
inc
jecxz
repnz
iret
aas
adc
jb
sub
iret
cmp
add
pop
pop
leave
stc
cs
and
out
push
jl
aam
je
clc
jg
mov
or
mov
inc
into
scas
sbb
movsl
inc
dec
subb
std
lea
xlat
repz
lret
sub
and
dec
adc
xchg
push
cld
jecxz
loopne
pop
into
decb
dec
sbb
cmp
and
adc
jmp
mov
jnp
cld
insl
mov
sbb
pop
pop
scas
push
or
rcll
fcompl
push
stc
ret
in
cmpl
iret
gs
pop
mov
mov
hlt
cli
addr16
add
bound
addr16
popf
jecxz
adc
mov
test
push
mov
inc
insl
mov
test
and
inc
pushf
fisubrs
std
and
data16
sub
insb
popf
pop
mov
repnz
loopne
mov
js
scas
ds
fcoms
popf
jp
shr
int3
roll
inc
repz
or
sub
ss
pushf
test
xchg
mov
pop
hlt
add
insb
mov
pop
jnp
sbb
mov
jmp
pusha
or
test
sub
outsb
pushf
sub
sub
push
test
shlb
mov
mov
lret
push
jecxz
rorb
fmull
mov
jp
lret
sub
fdiv
sub
sub
fs
shll
mov
pop
sti
cmp
mov
ja
mov
insl
inc
or
xchg
bound
in
mov
cltd
xor
and
mov
lea
smsw
decb
or
outsl
or
js
cltd
xor
adc
movsb
loop
add
or
mov
lea
inc
inc
inc
pop
xchg
inc
adc
mov
mov
cmc
leave
fimuls
mov
shll
sar
adc
mov
pop
out
dec
pop
xor
adc
jp
int3
jae
loop
sbb
aaa
sub
gs
push
adc
jge
inc
lret
xchg
sbb
test
adc
push
das
mov
cmp
ret
push
into
ficompl
pop
mov
sbb
jae
lea
aad
mov
cmp
sub
sub
xchg
sub
push
jecxz
das
not
sub
rclb
push
or
ja
xor
jge
mov
icebp
xchg
ljmp
dec
or
rcrl
fwait
arpl
push
dec
sbb
jp
hlt
shll
and
mov
lds
pop
xchg
xchg
shrl
push
xor
xchg
stos
pop
addr16
in
xchg
mov
mov
pusha
arpl
mov
sahf
sub
loop
pop
sub
ja
and
test
pop
fwait
and
add
push
mov
sbb
fnstcw
rcr
cmp
ljmp
mov
lea
xor
imul
inc
insb
mov
outsl
push
imul
push
insb
push
lcall
pop
out
inc
pop
mov
loop
cltd
sbb
cmp
mov
das
adc
loopne
inc
test
dec
shlb
xor
sub
fnstsw
imul
cmp
or
lds
imul
inc
out
cmp
fidivs
xchg
loop
cmp
fsts
pop
adc
and
rclb
shlb
cmc
push
addr16
shrl
sub
bsf
out
lahf
daa
inc
mov
ss
fstpt
xor
cmp
andl
ja
mov
mov
pop
xor
test
stos
and
enter
inc
jl
push
mulb
imul
pop
icebp
cmp
mov
loope
movl
ss
fnstsw
cmp
sbb
addb
pop
mov
mov
dec
lahf
jns
js
push
bound
mov
nop
mov
in
idivb
loope
inc
lods
push
xchg
imulb
pop
ffreep
fwait
adc
stc
add
adc
or
xor
imul
loop
pop
rcrl
jge
push
nop
jge
test
inc
mov
js
sbb
shrb
or
pop
insl
mov
pusha
ret
cmp
pushf
stos
sub
add
xchg
insb
xor
aad
add
cmpsb
testl
jecxz
lahf
cwtl
pusha
or
xor
add
and
pop
insb
out
xchg
dec
mov
lea
sbb
aas
lds
pop
cmp
xchg
jg
xor
jno
mov
sub
jl
cmp
pop
add
fmul
mov
cwtl
shlb
fdivrl
xlat
xor
push
repnz
or
sub
dec
aaa
jmp
mov
mov
cmpsl
inc
push
mov
cltd
push
int
sbb
xchg
jl
test
sbb
mov
mov
stos
sub
sub
mov
push
inc
xchg
cmp
popf
ret
and
bound
insl
daa
call
aaa
into
outsl
mov
xor
adc
push
dec
push
movsb
fcompl
adc
adc
mov
lods
in
inc
dec
jo
rorl
cmp
and
test
fcompl
ja
mov
jns
scas
inc
je
push
mov
inc
outsl
xor
and
sbb
mov
mov
inc
dec
lds
movsl
out
ds
out
outsl
orl
mov
addr16
repnz
jge
jo
lock
scas
cs
shll
lahf
or
icebp
sub
xchg
and
aad
push
mov
jbe
fcomps
rol
cmpb
in
sbb
xchg
add
mov
push
push
mov
rcrb
dec
hlt
jb
ja
js
aad
pop
incl
movsb
xchg
dec
cwtl
and
idivb
mov
psllq
in
mov
pop
adc
outsb
dec
int
out
scas
adc
aaa
sub
sarb
xor
push
add
sub
inc
mov
ljmp
ja
loope
js
xchg
or
fstpl
fistpll
inc
call
rol
push
outsl
mov
lods
jle
sbb
inc
insb
not
xchg
jp
push
pop
dec
cmp
inc
push
mov
daa
roll
push
or
out
movsb
cld
push
lret
rorb
xorl
push
mov
int3
ljmp
fdivr
nop
jl
in
mov
leave
xor
cwtl
fldt
rcrb
cmpsl
pushf
mov
psubsw
or
or
xchg
jne
xchg
adcb
sub
adc
repz
push
shll
jnp
add
sub
rolb
or
push
es
cwtl
xchg
ja
aad
mov
incl
into
cli
xor
xor
jo
sahf
aaa
adc
and
aaa
stos
lods
cltd
adc
fiaddl
in
loop
aad
out
popf
or
cld
leave
cmc
iret
cmp
xchg
loope
lea
jle
push
lahf
into
inc
mov
mov
ret
or
push
shr
push
mov
sarb
push
add
loop
mov
dec
fucomip
dec
int3
push
js
shlb
inc
gs
icebp
lret
jnp
jbe
mov
jo
adc
int3
pop
mov
stos
mov
data16
mov
sub
scas
adc
sub
sub
jno
pop
cmp
shll
shlb
inc
lods
das
and
pop
mov
cmc
lcall
adc
in
mov
cmp
and
xor
inc
cli
inc
jge
fisttpll
outsb
insl
pop
xor
mov
lock
cmp
cmp
mulb
mov
dec
inc
pop
pusha
inc
iret
cmc
lods
stos
dec
mov
outsl
daa
push
ja
adc
gs
push
divl
stos
fucom
mov
in
je
adc
xor
and
mov
test
or
adc
addr16
and
mov
imulb
pop
cmpsb
cld
dec
jl,pn
outsb
shll
clc
mov
outsb
or
cmp
or
call
pushw
push
out
or
fwait
enter
cmp
add
std
sub
test
hlt
cmpsl
inc
cmpsl
dec
cmpsl
mov
bound
mov
dec
test
adc
loop
xchg
mov
or
mov
cmc
aam
lret
cmpb
sub
imul
scas
or
sbb
mov
pop
sbb
adc
add
mov
dec
jge
jmp
inc
xor
sar
sub
jge
or
pop
pusha
mov
repnz
jns
add
mov
and
js
xchg
aam
jno
in
mov
pop
cmp
sahf
and
xor
pop
popa
push
dec
mov
jg
dec
divl
or
ret
mov
nop
or
addl
sub
lea
pusha
mov
xlat
pop
add
jcxz
sbb
sub
outsb
lahf
sub
mov
push
and
push
andb
je
and
mov
xchg
aam
xlat
out
pusha
sbb
push
pop
pop
call
dec
pop
push
jns
rcll
stos
mov
dec
in
push
and
insb
inc
lea
push
inc
movsl
push
nop
sahf
mov
ja
lods
sub
mov
sbb
ret
cmc
xlat
loop
jo
leave
lret
jae
lea
mov
test
jg
dec
mov
repnz
sbb
xchg
mov
rcr
mov
sbb
push
cmp
pop
aam
sar
roll
jecxz
sbb
fimull
lcall
xchg
or
jmp
shlb
xor
out
inc
pmaxsw
fnsetpm(287
dec
and
test
adc
mov
xchg
or
cmp
adc
dec
ljmp
mull
lds
into
ret
popf
or
cmp
sbb
sbb
addr16
adcl
enter
push
in
das
sbb
jo
jp
push
adc
mov
cmp
push
lock
adc
push
pushfw
leave
cmp
jecxz
cwtl
pop
add
into
push
data16
push
add
pop
int3
test
or
fildl
mov
pop
dec
cld
mov
lahf
movsl
ret
dec
push
stc
push
push
mov
je
mov
mov
mov
push
gs
add
mov
shl
arpl
scas
sbb
or
dec
push
shll
mov
jl
pop
push
pusha
lea
inc
aaa
shll
sub
and
rolb
inc
inc
mov
pop
push
sbb
stc
fcmovb
cmp
sbb
fadds
jns
or
into
rcrb
mov
loopne
test
mov
into
insl
sub
jo
stos
jae
mov
gs
int3
test
shll
push
mov
call
xorb
mov
or
jnp
ret
sub
dec
and
mov
fbstp
xor
dec
jecxz
jp
pop
lods
dec
cmp
jo
cld
adcb
jns
mov
daa
ss
sub
and
adc
inc
sbb
jecxz
dec
fwait
inc
fs
incb
add
dec
push
jbe
orb
mov
and
dec
stc
or
ja
ret
jl
mov
push
rorb
inc
cmc
inc
xchg
stos
aaa
fimuls
leave
push
addl
and
inc
out
push
je
bound
popa
scas
jge
popa
mov
mov
mov
cld
jg
fdivrs
pop
lahf
adcb
dec
jno
or
sbb
movsb
mov
cmc
imul
pop
lods
popf
rcr
pop
or
ffree
jmp
sbb
push
test
cmp
lods
inc
sbb
mov
and
out
cmpb
push
imul
jmp
icebp
repz
dec
dec
clc
xor
inc
pop
mov
lock
mov
xlat
mov
test
pop
es
cmc
jmp
sub
jo
pusha
mov
cmp
je
fwait
cltd
in
clc
mov
inc
cs
xchg
scas
sbb
add
scas
push
sahf
insb
arpl
ss
test
out
and
repz
pop
mov
js
dec
and
insl
add
addr16
lods
data16
mov
test
cltd
add
pop
ficomps
divb
xchg
push
mov
mov
dec
out
mov
loopne
imul
jae
jbe
lret
test
aas
xor
scas
rcl
pop
and
add
push
sub
ljmp
xlat
mov
push
push
sbbb
sbb
cmp
adc
fcomi
fcomps
xchg
loopne
testl
mov
or
push
int
movl
xchg
data16
mov
nop
xor
stos
sti
jb
xchg
cmp
xor
sbb
out
sub
mov
xchg
faddl
and
jl
lret
insl
decb
inc
pop
mov
icebp
xlat
lods
aad
dec
out
sbb
lret
jbe
aas
je
jmp
push
adc
sarl
dec
mov
arpl
test
mov
sub
je
mov
fisubrs
mov
fisubl
cmpsl
in
cmc
sbb
mov
pop
fwait
cltd
rorb
inc
imul
pop
fnsave
inc
loopne
or
mov
mov
in
push
test
inc
mov
sub
js
xor
in
push
mov
sub
ss
mov
outsl
flds
push
rcll
push
fucomip
mov
push
mov
fsubrp
sub
movsb
mov
mov
dec
mov
mov
cmp
pusha
scas
push
pusha
xchg
sub
jmp
push
mov
jnp
shlb
or
dec
mov
adc
es
into
jge
pop
popf
xchg
inc
dec
adc
mov
mov
xor
pop
imul
lahf
jnp
jle
sti
mov
xor
movsl
call
dec
inc
frstor
aaa
fidivrs
mov
sub
nop
add
adc
xchg
jno
pop
mov
jg
dec
add
mov
ret
cmpsl
stos
scas
fcmovnu
push
stos
adc
jmp
sbb
fbstp
mov
fists
test
and
mov
push
loop
call
fidivrl
cld
mov
xchg
outsb
sub
int3
xor
cmp
pop
rolb
or
mov
outsb
dec
imul
pop
jae
ficomps
ret
add
mov
push
mov
xchg
xchg
fmul
xchg
sub
jne
sub
dec
lock
pop
fwait
dec
int3
rclb
rcrl
iret
inc
mov
or
and
inc
inc
aaa
mov
sub
pop
shrl
inc
cmpsl
mov
adc
xchg
rorb
addr16
add
fnstsw
cwtl
xchg
inc
sub
imul
xor
in
sarl
lret
insl
loopne
imul
lock
fistps
dec
call
cld
mov
enter
pop
mov
test
push
and
outsl
shlb
add
xchg
xchg
add
sahf
jnp
push
adc
and
push
das
pop
outsb
mov
int
fistpl
cltd
mulb
cmpsl
insb
imul
sub
rclb
mov
xor
cltd
scas
inc
gs
lret
int
pop
bound
push
cmc
mov
fisubrl
inc
addr16
in
push
lds
jae
inc
ds
lock
jae
shl
movsb
rolb
rclb
fcomi
cwtl
mov
adcl
add
lret
sahf
mov
in
ja
movsb
jp
jbe
push
out
lcall
mov
add
roll
sbbl
es
ds
pop
push
addr16
pop
mov
inc
push
mov
or
outsl
push
add
sbb
popf
mov
pop
fcoml
jno
outsl
jg
dec
shll
stos
and
sub
shll
push
xor
repnz
sub
test
pop
loope
roll
xchg
or
mov
orb
popa
loope
add
xor
sub
mov
movsl
clc
adc
adc
dec
adc
loopne
inc
in
movsb
andl
fidivs
xchg
ret
subb
jns
add
dec
xor
xchg
dec
das
or
mov
push
sub
cs
cltd
mov
push
or
jmp
sbb
jne
hlt
and
pushf
mov
cmp
jnp
in
pop
repnz
xchg
fstps
adc
push
scas
mov
and
cmp
out
pop
pop
dec
adc
cmp
add
xor
lcall
dec
jno
fistl
cmp
add
cli
fwait
in
neg
in
aas
jg
xor
stos
adc
daa
mov
mov
movb
sbb
scas
scas
aam
pop
cmpsb
sbb
out
je
mov
rclb
jge
fldt
or
xor
std
dec
push
fsubrl
scas
xor
xchg
cwtl
dec
into
adc
cmc
fwait
lea
fs
jbe
xor
inc
jl
fiadds
das
in
stos
push
inc
cs
add
mov
mov
addr16
push
scas
cmp
outsb
imul
push
xor
dec
cmp
iret
mov
push
or
sahf
movsb
add
aam
adc
dec
aaa
pop
in
leave
les
fidivl
cmc
or
mov
or
ret
mov
xor
push
jb
dec
aam
jb
inc
add
jo
mov
cld
shl
rolb
xor
insb
rcrl
icebp
mov
dec
cli
fs
js
xor
call
jecxz
dec
dec
mov
add
xchg
ljmp
mov
int3
mov
xor
pop
pop
lahf
imul
sarb
fists
insl
and
fdivrp
jg
adc
push
push
add
jnp
fdivrl
mov
arpl
push
fsts
popf
movsb
bound
outsb
push
or
xor
in
mov
xor
loopne
jg
loopne
movsl
adc
mov
lods
mov
cmpsl
lret
outsl
cmp
mov
aam
inc
into
cmp
cmp
adc
add
mov
outsl
inc
or
mov
icebp
mov
pop
bts
pop
loope
movsl
rorb
mov
jmp
or
jg
xchg
call
inc
orl
pop
out
in
insb
popa
xor
push
int3
cmp
mul
and
test
loope
mov
push
push
cld
lea
mov
pop
sub
add
insb
icebp
pop
pop
pop
lret
or
push
pop
lret
bound
mov
pop
std
out
stos
ror
sub
fcomps
popf
stos
mov
push
push
push
repnz
call
rolb
push
push
jb
cmp
dec
test
jp
or
aas
fs
xor
jae
jmp
inc
dec
add
jle
xchg
dec
adc
inc
or
aaa
sub
mov
xor
andl
sub
add
jbe
idiv
sbb
test
pop
dec
adc
sahf
or
hlt
sub
xor
push
xorl
cmc
or
mov
out
add
hlt
les
dec
cld
xchg
inc
out
sbb
sub
dec
int
lock
lods
mov
jl
xor
pusha
pop
mov
mov
rclb
nop
lahf
mov
pushf
xor
out
push
lret
sbb
dec
sbb
sahf
push
push
sub
sbb
push
sub
in
fsubl
xchg
xchg
int
mov
aas
out
push
xchg
push
in
adc
addl
jecxz
icebp
pop
enter
cli
add
or
rolb
mov
das
pop
cli
fistpl
jp
adc
test
clc
lahf
xor
sahf
cli
push
in
mov
cmp
mov
adc
test
mov
push
addl
icebp
fwait
scas
fwait
jae
mov
cmp
pop
xor
cld
or
push
pop
jno
popa
testb
cltd
inc
ljmp
imul
clc
cld
mov
cmp
dec
scas
jl
push
mull
movsl
push
outsl
scas
js
xchg
cltd
cmpsb
std
out
pop
inc
xchg
fldenv
rcr
mov
out
subl
inc
and
out
mov
jp
pop
xchg
cmc
incb
aad
rcrb
jg
inc
mov
mov
jne
push
ja
cmp
push
cmpsl
mov
mov
push
xchg
inc
sbb
fidivs
popa
lods
mov
jmp
push
out
cs
mov
loopne
pop
outsb
dec
pop
cmp
mov
or
dec
mov
push
mov
jo
and
aas
das
dec
dec
dec
inc
loopne
js
aad
inc
xor
cli
out
mov
jo
int
jns
femms
test
mov
fdivrs
dec
or
scas
int
outsl
dec
jnp
mov
in
inc
lahf
fildl
inc
and
test
push
mov
cmp
and
mov
jge
add
test
push
jle
andl
add
xor
in
mov
test
mov
xchg
cmp
inc
xchg
fsubr
aam
imul
sub
xchg
repz
test
sti
notb
add
mov
dec
mov
cmpsl
call
loopne
test
sub
int
add
and
stos
mov
xchg
jge
cmp
dec
out
xchg
repz
cmp
cmp
inc
neg
sub
jmp
mov
mov
pop
ficompl
gs
pusha
adc
xchg
push
adc
pop
cmp
out
pop
add
jg
lods
xchg
adc
jg
mov
or
lahf
mov
gs
nop
sarb
xor
pop
inc
mov
cmp
out
mov
sub
push
imul
dec
push
sbb
icebp
push
data16
ljmp
lret
or
call
loope
sub
in
stc
fsts
and
xchg
sbb
pop
mov
xor
add
adc
mov
in
imul
push
lods
jle
jge
dec
test
dec
clc
daa
mov
cmpl
jmp
loop
insb
jno
jne
iret
xlat
ja
mov
popa
arpl
xor
pop
outsl
test
adc
hlt
dec
inc
adc
push
jne
push
xchg
pop
sub
in
nop
shr
xchg
push
movsb
xor
mov
mov
adc
dec
inc
fldcw
xchg
xchg
mov
mov
xorl
jnp
aas
push
ss
cltd
jecxz
mov
std
xchg
sub
adc
sbb
jecxz
inc
cli
mov
fstl
ja
sub
mov
inc
dec
rorb
push
mov
adc
fs
add
filds
adc
lret
cld
inc
xchg
gs
shr
jne
rcll
jo
fsubl
rorb
pop
shrb
sbb
loopne
insb
loope
xor
or
out
out
sti
and
jns
mov
mov
jp
insl
sub
pop
or
test
lock
sub
xor
aad
out
js
inc
jmp
or
push
iret
mov
rcll
jnp
cmp
inc
call
cmp
inc
mov
out
adc
ljmp
xor
jg
int3
into
addr16
xchg
icebp
adc
xchg
enter
mov
daa
fisubrl
outsl
testl
scas
clc
ret
in
aas
jo
insb
ljmp
rclb
callw
sbb
jne
xor
adc
sbbb
movsb
pop
push
fldcw
rcrb
es
sarl
and
in
jmp
shl
pop
es
mov
mov
push
jae
jo
jae
in
fcoml
cmp
loopne
repnz
loope
xchg
jmp
xchg
mov
inc
pop
in
cbtw
lcall
mov
mov
std
push
mov
adc
cmc
ret
push
cmp
mov
mov
pusha
shr
mov
push
mov
mov
add
sbb
inc
jge
in
popa
and
pop
adc
cmpsb
push
orb
cmpsl
or
mov
jp
test
push
adc
or
sbb
lcall
leave
sbb
shlb
xor
lock
lcall
ja
push
in
std
loopne
mov
and
lods
aaa
mov
cmp
inc
outsb
dec
cmp
sahf
outsl
out
aam
xchg
push
fwait
cwtl
jbe
xor
push
xlat
popa
aam
jl
lret
add
ret
repnz
lcall
gs
mov
cmc
jno
out
xor
cmp
sub
mov
jmp
outsb
xchg
jg
repz
mov
fistpll
fmuls
xor
pop
mov
lods
xor
movsb
jmp
pop
out
cmpsb
xchg
loopne
dec
add
popf
jo
dec
fcmovb
xchg
sub
je
jg
mov
movsl
out
xchg
fnstenv
pop
push
jmp
jmp
mov
in
in
lcall
or
jp
mov
cmp
adc
dec
inc
aas
or
into
iret
mov
add
push
xchg
loopne
push
xchg
push
popa
out
inc
ffree
and
pop
jnp
dec
mov
xor
in
out
dec
int3
adc
bound
push
pop
icebp
test
loopne
jns
lods
fistps
sbb
loop
shlb
mov
sub
jp
sbb
flds
cwtl
rorl
mov
aaa
cs
xchg
fdivrl
aas
add
or
mov
xor
clc
mov
ds
dec
push
push
sbb
sub
mov
repnz
mov
pop
out
push
mov
call
push
cs
lea
repnz
mov
hlt
lods
js
rcll
mov
adc
jmp
xchg
sub
rolb
sarb
and
rcrb
cmp
mov
cmp
dec
jb
push
into
mov
jb
or
jns
mov
mulb
xor
dec
idivl
imul
les
add
xor
cmp
lods
inc
mov
xchg
jl
inc
pop
lock
nop
add
dec
out
add
pushf
loope
inc
stc
fildl
mov
insb
jmp
ss
shl
imul
aam
out
sub
pop
je
jo
xor
ret
addl
mov
scas
inc
into
sub
xor
ret
push
jbe
adc
sbb
das
sub
imul
divl
flds
enter
fs
je
shlb
sub
mov
fldcw
sub
fwait
xchg
push
out
mov
inc
into
add
lea
movsb
and
aam
les
pop
in
jb
pop
sbb
jbe
mov
xchg
and
sbb
add
dec
leave
xchg
add
loopne
in
fsts
sbb
popl
mov
out
es
and
push
sub
sbb
mov
mov
mov
stos
dec
mov
pop
xchg
and
iret
rcrb
setg
and
popa
enter
jp
fistl
adc
hlt
pop
push
jo
mov
xchg
push
push
sbb
or
adc
add
xchg
mov
addr16
mov
pop
cmp
cmp
pushl
mov
sbb
or
inc
movsl
ret
dec
dec
jbe
in
adc
stc
dec
xlat
pop
pop
push
imul
lret
mov
mov
adc
into
cmp
inc
inc
aam
or
out
xor
pop
inc
sbb
push
repz
nop
adc
mov
cmp
mov
std
sbb
movsb
mov
in
movsl
ja
loope
xchg
sub
sub
aas
ljmp
jg
xor
shll
leave
test
movups
adc
shrb
int
cmpsb
rol
adc
jno
icebp
dec
loope
stos
pop
out
cmpl
xorl
je
out
pop
lods
xor
xchg
cmp
mov
pop
stos
daa
lcall
cmp
adc
lcall
inc
xchg
or
mov
inc
push
in
mov
cld
in
sbb
ds
hlt
hlt
insb
push
xchg
jl
dec
jp
cmpsb
nop
sar
js
das
pushl
daa
out
les
xchg
sbb
in
push
pusha
lret
ljmp
inc
cmp
les
sbbl
fwait
pop
in
fcom
inc
movsl
cmp
or
mov
jmp
scas
popa
add
stc
dec
es
push
jns
mov
push
sub
roll
mov
sahf
sub
lods
sub
sbb
iret
loop
inc
fwait
adc
sub
lahf
xor
or
pop
cmp
push
ds
mov
push
in
mov
and
mov
js
arpl
push
cli
push
push
cmc
pusha
xchg
lock
movsl
scas
fsubs
jmp
jl
sub
jae
push
mov
cwtl
sahf
repnz
mov
and
mov
fxam
xor
cmpsb
into
mov
lds
jbe
into
lds
mov
leave
in
mov
ds
add
cs
xor
in
or
pop
and
and
js
fnstcw
mov
sbb
mov
stos
jmp
test
shll
lcall
push
mov
push
out
push
lcall
and
sahf
fistl
in
ljmp
fnsave
das
push
ds
lods
pop
sub
out
fldcw
dec
pop
adc
push
or
xor
out
sbb
inc
xchg
push
mov
ljmp
jmp
inc
in
out
add
aaa
fadds
xchg
pusha
pop
sub
mov
loope
test
sub
ret
jecxz
addr16
cmp
and
xchg
or
push
xchg
mov
inc
fidivrs
mov
jae
pop
lret
mov
push
ret
test
pop
outsb
bound
rcll
roll
dec
ret
test
cmp
pop
cmp
push
sbb
xchg
adc
adc
ljmp
push
aas
lock
cmp
push
pop
and
scas
add
hlt
mov
pop
jo
xchg
mov
mov
test
cmpsl
dec
loop
stos
mov
jmp
lods
push
pop
xor
pop
jae
jne
iret
enter
cmp
xchg
out
lcall
pop
data16
insb
xchg
jne
pop
or
cmc
xchg
sbb
mov
mov
mov
push
lods
lock
cmpsb
lret
cs
and
mov
jg
rorb
xor
add
sahf
rcrl
mov
pop
loopne
push
lock
dec
xchg
stc
stos
sbb
cmp
out
sahf
jns
jbe
or
lds
scas
cmp
in
outsb
jnp
cmp
arpl
leavew
mov
hlt
test
push
inc
ljmp
xchg
subb
xchg
out
insb
rcrb
and
inc
ds
sbb
ror
sub
cs
mov
ljmp
push
faddp
jno
xchg
aaa
pop
mov
jge
inc
and
imul
sti
out
dec
xchg
out
cmpsb
imul
outsl
cmp
and
addr16
loop
adc
loop
add
pop
sub
xchg
or
mov
and
movsl
dec
fs
mov
jae
pop
xchg
pusha
aam
loope
test
out
cld
sub
sbb
out
xchg
jg
cmpsb
jnp
fnstsw
mov
xchg
mov
push
xchg
lret
mov
out
pop
leave
or
mov
push
adc
sbb
push
pop
and
jb
rcrl
jno
push
pop
xchg
cmp
pop
iret
leave
xor
or
negb
push
lods
cmpsb
xchg
outsb
xchg
or
ffreep
mov
mov
insl
outsl
xor
mov
cmp
mov
inc
por
in
pop
repnz
dec
call
popf
add
xor
pop
inc
negb
jecxz
push
sub
and
pop
mov
lock
xor
int3
add
add
outsb
pushf
nop
arpl
orl
add
xchg
aas
lahf
mov
xchg
aad
push
xchg
cmpsb
or
cli
cmp
je
sbb
mov
sbbb
add
imul
aas
test
mov
jnp
cmpsb
jmp
ds
lahf
sbb
jl
jg
push
push
mov
pop
xchg
popf
into
xor
sbb
pop
out
outsl
mov
adc
shlb
lods
xchg
lsl
ret
dec
leave
dec
popa
mov
add
clc
sahf
in
leave
mov
mov
fidivs
xchg
jae
xchg
xor
fmull
es
xor
imull
cmp
std
inc
aam
mov
cmpsl
push
fldl
adc
aas
push
out
daa
mov
adc
add
dec
cmp
sbb
push
xchg
js
int3
or
decb
cmpsb
push
xor
hlt
insb
mov
and
cs
cmp
insb
or
cmpsl
stos
mov
ss
inc
ss
pusha
popa
sub
iret
sbb
pop
xchg
jp
mov
loop
addr16
nop
or
int
xor
and
sub
mov
hlt
lods
mov
xor
jb
insl
outsb
dec
jle
mov
sub
mov
mov
aad
fstpt
mov
roll
bound
push
cmp
xchg
inc
xchg
and
dec
lcall
leave
adc
enter
dec
arpl
mov
mov
scas
movsl
mov
jecxz
dec
pop
mull
mov
mov
sarl
movsb
or
or
into
aad
popf
and
addr16
movsb
or
mov
int3
add
loope
push
cmpsb
jae
inc
add
inc
insl
enter
lahf
mov
add
cmp
push
out
in
adc
adc
scas
lret
ljmp
jl
jge
inc
sub
aaa
clc
dec
popf
pop
leave
cltd
push
cmp
repz
jns
enter
mov
lock
test
mov
enter
sahf
adc
xor
dec
push
mov
mov
jbe
cmp
test
mov
jmp
cmp
negb
mov
push
mov
es
pop
shlb
sbb
fcompl
cs
pop
mov
pop
jmp
movsl
xor
and
pop
shll
mov
add
ret
jbe
jmp
cmpsb
inc
pop
lahf
mov
aas
jne
or
cwtl
shl
fistl
fistpl
sbb
out
outsl
xor
scas
div
cmp
adc
rorl
xchg
jne
jl
push
push
test
ret
fisubs
popa
mov
jne
movsb
push
dec
ret
in
dec
pop
mov
inc
inc
or
lods
pop
xchg
mov
movsl
adc
ljmp
pop
sub
jns
mov
add
push
push
jbe
mulb
push
jl
push
xchg
mov
ret
xchg
add
mov
inc
xor
add
inc
adc
sbb
addl
jnp
lods
out
jns
cmp
and
mov
test
or
xor
jne
xor
mov
mov
stos
jns
cmp
push
mov
or
insb
div
cwtl
inc
ficomps
fcoms
dec
dec
xor
mov
lods
test
repz
loope
xchg
lock
adc
pop
adc
or
dec
xor
push
or
sub
hlt
mov
add
cmpsb
dec
loopne
cwtl
push
test
scas
iret
add
loope
nop
in
or
xchg
dec
xor
or
mov
add
mov
pop
lods
imul
inc
cs
das
and
fistpl
or
mov
pusha
mov
pushf
shlb
mov
movsl
lret
rolb
jp
daa
push
xor
loopne
insl
loope
and
fcmovu
pop
lods
shrb
mov
inc
fidivs
jae
aas
lahf
nop
test
pop
aad
and
mov
cli
sbb
mov
cmpsl
xor
jge
mov
pop
and
xchg
je
int
cmp
stc
xor
jae
cs
dec
xor
loope
xchg
mov
les
jge
mov
mov
lcall
dec
in
cltd
xlat
lds
mov
jnp
jl
sbb
inc
sub
lds
out
jnp
xor
vmread
test
sub
adc
ret
or
rcrb
adc
test
inc
dec
cwtl
adc
mov
ds
fcmovne
pop
xchg
mov
dec
cli
cmpsb
pop
push
mov
push
ret
fidivrs
int
sub
dec
pushf
es
adc
popa
push
jg
adc
sarb
jno
pop
data16
in
sub
mov
mov
repnz
mov
cmpsb
sub
iret
pop
and
mov
sbbb
mov
push
aaa
js
into
cli
pop
sub
test
std
frstor
loopne
jg
ljmp
cs
dec
add
fstpt
jge
push
sbb
jge,pt
loop
xor
jns
jo
mov
test
jle
jnp
mov
iret
add
lds
sbb
ret
inc
pop
xchg
sahf
push
adc
out
and
shll
lea
jnp
out
ucomiss
into
fwait
inc
xchg
jp
or
fildl
addr16
cmp
dec
into
cmpsb
cmpsb
insb
loope
jle
shr
popf
in
rorl
lods
add
fildl
sub
int
jg
jp
mov
je
sbb
bound
jae
cmp
cmp
xor
int3
dec
jb
xchg
pop
fadd
push
xchg
insl
out
jno
sti
xorb
pop
test
mov
adc
pushf
pop
iret
lahf
mov
pop
fs
sub
jbe
or
jbe
push
and
mov
xchg
and
jae
jge
push
lret
insl
insb
je
data16
test
scas
mov
or
mov
sub
xlat
push
and
pop
fisttpll
push
notl
in
sti
inc
inc
std
sbb
iret
adc
shlb
sub
sbb
cwtl
mov
cmp
arpl
mov
mov
enter
inc
mov
test
push
xlat
scas
rcrb
gs
and
dec
or
int3
popf
mov
add
jge
idivl
int
fldl
inc
ljmp
mov
into
arpl
stos
clc
xor
fs
fimuls
outsb
xor
sbb
fwait
gs
mov
pop
mov
push
loope
adc
pop
ret
mov
mov
fcompl
jbe
fwait
outsl
push
sub
call
mov
xchg
outsb
dec
lret
imul
mov
call
aam
insl
dec
addr16
insb
daa
jns
xchg
mov
pop
ss
orl
and
cmp
sbb
imul
dec
pop
jmp
jge
xchg
pop
inc
push
jns
loope
packssdw
test
mov
cmc
stos
fadds
ljmp
push
inc
cltd
fmul
push
fwait
lret
nop
mov
and
call
movsb
rclb
pop
popa
ja
fs
lds
dec
arpl
xchg
jle
lea
cld
mov
gs
or
inc
mov
mov
mov
adc
loop
push
pop
dec
loop
ror
mov
xchg
bound
xor
or
test
push
cmp
stos
mov
and
pop
sbb
sub
inc
and
inc
xchg
fildl
add
call
sti
in
aas
mov
sti
xor
xor
xchg
lods
xlat
sub
dec
adc
popf
sti
test
mov
or
cmpsb
divl
dec
lret
into
mov
sub
and
lods
inc
xor
adc
jo
pop
dec
xor
sarl
inc
jbe
or
fsts
jno
and
cli
add
das
push
push
addr16
push
jbe
sub
jle
jge
pop
dec
sbb
addl
repz
stc
insl
adc
nop
and
sbb
ja
stos
mov
lcall
test
and
outsb
mov
jae
mov
cltd
mov
push
mov
jg
rolb
daa
xchg
dec
pop
push
ret
lock
fdivs
test
divl
mov
add
push
gs
std
out
fstpt
mov
xchg
test
js
push
push
scas
test
in
pushf
movsw
and
and
sbb
loopne
jns
inc
data16
xchg
sbb
iret
dec
add
test
mov
cli
cmc
cwtl
push
lret
cmc
mov
fistps
aam
add
push
cmp
mov
sbb
stos
mov
jne
push
mov
movsl
or
sti
dec
nop
pop
fcmovnu
sub
gs
push
cmpsb
xchg
sub
imul
mov
rcrl
dec
je
inc
bound
aad
mov
addr16
cmp
adc
out
jae
std
popf
mov
ja
jno
in
leave
cmpsb
iret
sub
inc
jno
outsb
push
xor
jmp
xchg
sub
add
xlat
dec
pushf
fucomip
fisubrl
xlat
mov
std
add
or
or
sub
fwait
stos
xor
mov
push
inc
dec
push
mul
test
rol
mov
pusha
notb
ja
lcall
push
in
test
cmp
xor
push
out
pop
add
lret
insl
add
sub
mov
xchg
test
js
clc
sbb
mov
jmp
mov
lahf
lcall
ljmp
stc
mov
pop
jmp
gs
sbb
push
bound
test
mov
push
imul
loopne
test
push
xor
xchg
pushl
pushl
pushf
gs
inc
jg
fwait
outsl
cmpb
nop
imul
xchg
mov
sub
test
in
adc
cmp
aaa
and
int
push
cmp
push
push
inc
dec
jns
mov
push
lods
mov
jge
sub
shl
out
mov
lods
call
dec
fldcw
and
mov
fs
push
roll
addr16
mov
popa
jp
fcomps
sbb
adc
pop
sub
push
pop
inc
jbe
popa
movsb
test
jp
and
lahf
aad
mov
fistpll
lahf
outsb
arpl
in
fstpl
lahf
inc
pop
in
fs
fbld
pop
dec
mov
das
fs
xchg
insb
dec
xchg
ret
repnz
jnp
aad
les
dec
sbb
mov
jb
mov
arpl
dec
xchg
dec
leave
inc
inc
mov
mov
call
push
sti
or
ret
cmpsb
ret
mov
lods
fs
mov
into
dec
loop
jbe
cltd
int
std
rcrb
adc
mov
mull
cwtl
repz
neg
shll
pusha
xchg
movsb
push
arpl
daa
add
fbld
jo
jne
das
int
ja
or
aaa
mov
sub
das
sbb
sbb
int
rcll
cmp
jmp
sahf
lds
xchg
cmp
dec
or
sbb
hlt
inc
roll
inc
nop
cmp
mov
sbb
and
jo
adc
xchg
mov
faddp
fs
mov
iret
mov
not
adc
jle
int
jecxz
adc
push
inc
in
pop
loopne
add
mov
dec
loope
sbbb
lret
mov
repz
mov
inc
leave
int
sbbl
imul
pop
pop
sarb
push
jno
int3
inc
push
cwtl
enter
mov
jmp
xor
mov
filds
mov
loop
ljmp
fimull
pop
mov
loope
iret
mov
push
dec
adc
or
cmp
sbb
shr
aam
inc
cwtl
imul
inc
cmpsl
pop
xchg
xchg
or
jbe
push
and
or
pop
pop
clc
pusha
pcmpgtb
sbb
dec
imulb
push
out
sbb
push
pop
outsl
sub
inc
outsb
lods
inc
sub
xlat
ds
lods
push
pushf
dec
cwtl
mov
inc
mov
nop
sub
cltd
addl
and
jb
xlat
lret
bound
dec
stc
mov
xchg
adc
sub
cmp
dec
out
popf
stos
fwait
je
dec
dec
jns
mov
push
fisubs
cmp
jge
mov
cmc
cwtl
dec
jle
out
mov
test
int
fidivs
push
in
fcomps
jl
sbb
or
push
mov
pop
inc
push
cmp
push
pandn
test
andb
aam
mov
xorl
pushf
xor
add
popf
adc
sub
sbb
mov
adc
sbb
jo
adc
test
outsl
push
cmc
sbb
jg
gs
sahf
ljmp
int
in
dec
fstp
sarb
clc
xor
dec
lret
hlt
push
call
cmp
in
mov
and
ljmp
icebp
lret
aas
loope
arpl
pushf
add
inc
loopne
sbb
shlb
pop
mov
xchg
outsl
out
mul
push
or
xchg
push
xlat
iret
or
xchg
jle
adc
pop
dec
int3
xchg
pop
xor
and
lods
mov
add
jae
sar
in
pop
ss
jg
repz
mov
mov
inc
jg
inc
sub
mov
test
aas
bound
sbb
outsl
dec
xorb
bnd
mov
jmp
sti
loope
lcall
sub
xor
mov
push
push
je
jns
enter
sbb
xchg
or
shr
push
ja
jge
mov
mov
cmc
adc
test
mov
inc
jns
pop
adc
nop
daa
pop
mov
xchg
xchg
cmpb
mov
test
sbb
call
xchg
xchg
lahf
stos
sti
leave
inc
cmc
xchg
cld
fiadds
ret
sbb
pop
sahf
mov
add
fistpll
jmp
gs
hlt
dec
jl
and
push
dec
je
lcall
mov
aad
std
test
cmpsb
inc
addl
lret
jp
mov
inc
leave
xor
xlat
mov
es
jo
sbb
pushf
push
rolb
test
fsubl
sbb
inc
pop
dec
dec
cmp
aam
and
movsb
pop
lock
mov
bound
ret
cwtl
or
loop
cmp
jle
and
jno
and
xlat
out
lret
repz
mov
out
pop
pushf
push
stos
std
mov
stos
fidivs
shrb
mov
xor
imul
and
mov
mov
mov
sarl
sahf
and
push
pop
daa
ss
add
sbb
jnp
lret
pop
push
pop
jl
sub
clc
pop
add
sahf
sbb
out
scas
adc
inc
mov
push
rorb
xor
xchg
inc
mov
or
je
mov
push
cs
mov
adc
xchg
mov
xchg
xchg
cs
mov
loopne
dec
pop
jns
push
pop
and
lcall
jl
xchg
inc
shll
adc
into
cld
jmp
push
loope
mov
sub
xchg
lea
inc
fwait
sub
mov
mov
mov
int
jl
push
jnp
pusha
scas
or
lret
inc
xchg
mov
mov
cmp
inc
xchg
hlt
jns
mov
sbb
add
movsb
dec
sbb
dec
scas
dec
dec
nop
imul
mov
lock
xchg
aad
adc
ret
inc
movsb
cmp
lock
lret
iret
insl
mov
pop
add
xlat
cltd
inc
jae
mov
and
inc
and
xor
mov
lods
pushf
jp
filds
add
cmc
subb
jl
and
xlat
push
mov
xor
cmp
pushl
outsl
sub
jl
dec
cmpl
hlt
fsubr
addr16
outsl
inc
sbbl
sbb
mov
repz
js
pop
add
push
sbb
sbb
adc
cmp
xor
mov
xor
cmp
call
je
xchg
xor
in
test
aam
cmp
mov
inc
sar
les
aaa
sub
and
dec
fbld
cld
pop
ficoms
cmp
cld
fwait
cmp
add
arpl
inc
daa
cmp
cld
mov
sbb
lods
imul
imul
test
mov
mov
leave
xor
out
jp
sub
jo
into
adc
jno
mov
xchg
popf
xchg
and
jle
xchg
adc
jl
pusha
inc
sarl
mov
adc
ss
push
aaa
inc
lahf
inc
lods
mov
xchg
jecxz
jp
jl
adc
lea
aas
and
cwtl
push
adc
adc
inc
cmp
xchg
and
mov
aas
sub
sbb
lret
jne
sbb
lret
sti
mov
push
mov
lret
cli
inc
scas
lahf
inc
loop,pt
adc
mov
pop
push
or
push
out
push
jmp
in
or
aas
add
and
mov
jge
jge
popl
adc
repz
sahf
cmpsb
call
mov
in
cmp
xchg
jns
mov
dec
das
dec
cld
cmp
orps
cmp
dec
cmp
cmp
lret
or
insl
cmp
pop
or
imul
xchg
cs
dec
rorl
jae
imull
cmp
jo
jbe
xchg
js
pop
pop
inc
sub
and
mov
sbb
fdiv
xchg
cmc
jmp
addr16
lret
sub
rcrb
int
xchg
test
jp
cmpsl
fists
fists
mov
out
push
sbb
mov
inc
jl
dec
orb
cs
jecxz
mov
imul
faddl
ret
jp
rcll
jae
add
mov
xchg
addr16
int
mov
icebp
adc
mov
mov
out
pop
pop
in
pop
aaa
movsb
loopne
jb
jmp
and
ret
mov
or
adc
mov
out
in
ds
loopne
shll
pop
in
cmp
ja
sbb
pop
sbb
lea
xor
add
dec
fstps
mov
jmp
ljmp
loopne
jno
mov
push
lret
pop
mov
cmp
push
xor
jmp
sbbb
jecxz
jle
imul
cmp
shlb
mov
fistpl
mov
rcrl
jp
fisubl
popf
jno
add
lret
lock
push
push
mov
fwait
loop
divl
adc
inc
in
hlt
lock
pop
and
rorb
xor
incb
das
lea
inc
rol
add
pop
sub
mov
mov
test
call
lcall
repz
add
lret
cltd
lcall
repz
add
or
ss
mov
mov
mov
scas
repz
cmp
inc
jl
lods
popf
lods
repnz
mov
and
cmpsl
in
in
addr16
pop
add
inc
cmp
xchg
sub
arpl
push
jp
cmp
ret
lea
xchg
lcall
push
testl
cmp
test
pop
decb
cmpsb
xlat
jo
inc
roll
sub
push
repnz
scas
jnp
mov
pop
test
lret
xor
cld
fdiv
cmp
sbb
lret
shll
pop
into
mov
mov
clc
mov
add
rorb
xchg
outsl
cmp
das
push
pusha
pop
call
jl
xor
icebp
bound
sahf
nop
inc
popa
shll
xchg
fs
add
add
js
dec
pop
repnz
outsb
sbb
push
out
mov
xor
mov
mov
mov
lcall
test
mov
sbb
sub
xchg
stc
xchg
xor
add
outsb
fisubl
or
xchg
push
lahf
into
mov
lods
pop
cltd
add
cmp
jp
xor
or
mov
jg
inc
addr16
mov
cmp
adc
xor
out
sub
data16
popa
push
cmc
mov
push
subl
lahf
icebp
or
or
mov
out
sub
xchg
mov
mov
mov
sbb
push
mov
xor
xor
push
push
pop
lock
test
aas
in
add
into
mov
inc
push
popf
leave
dec
sub
daa
lret
pop
mov
mov
dec
mov
sbb
jns
jns,pn
cltd
out
pop
in
lcall
movsb
iret
gs
jae
lret
stos
cmpsb
mov
jmp
stc
mov
xorb
std
cwtl
int
jno
or
das
popf
or
dec
pop
pusha
outsl
mov
lret
xchg
mov
cmp
pop
or
mov
popf
lods
mov
lret
inc
lods
gs
pop
add
mov
jg
pushf
shlb
adc
test
cmp
popa
pop
clc
or
dec
mov
call
ds
dec
shl
enter
arpl
jbe
lret
xchg
nop
imul
insl
iret
scas
fcmovnb
hlt
scas
add
decb
fistpl
flds
mov
and
mov
lret
xorl
out
xor
push
movsl
inc
jno
es
cwtl
push
push
jmp
jmp
add
lcall
inc
mov
sbb
jo
cmp
pop
scas
pop
add
and
push
cmp
add
pop
je
xchg
enter
mov
icebp
xor
and
andb
cwtl
popa
in
mov
push
mov
repnz
shll
or
in
lret
cmp
pop
mov
push
mov
pop
push
cmp
mov
fiadds
and
movb
and
sub
lods
in
orl
insb
add
xchg
lret
shll
pop
addr16
out
js
into
cwtl
xchg
sbb
lahf
ss
and
pop
or
adc
sbb
or
jno
dec
cmpsl
jl
mov
int
popa
mov
add
aaa
and
xchg
fs
jae
sahf
jnp
push
jge
push
xchg
jno
ja
imul
sbb
add
in
outsb
std
and
mov
ds
movsb
iret
lret
les
push
ljmp
repnz
jecxz
data16
lcall
mov
aaa
sub
test
dec
add
lcall
iret
push
push
in
inc
and
cld
sub
fst
mov
sbb
hlt
fs
inc
mov
and
jno
rcll
xor
out
lret
mov
sbb
loopne
fisubl
mov
ret
in
test
outsl
rorl
pop
ljmp
push
or
aad
pusha
out
xorb
fcmovnb
sub
sbbl
and
arpl
rcrl
lret
mov
mov
jne
push
ret
pop
repnz
leave
repnz
sbb
cs
inc
adc
jp
popa
jg
sti
cmc
repz
nop
inc
pop
lcall
xchg
pop
xchg
cmpsl
jmp
aad
pop
mov
xchg
fs
jo
add
dec
xchg
pop
pop
mov
out
lock
push
fwait
dec
loopne
pop
cmpb
sub
popa
mov
jmp
pop
outsb
mov
mov
lret
and
jbe
or
pushf
movl
jecxz
xor
and
cmpb
inc
filds
sub
hlt
cmpsb
ss
aaa
push
xchg
stos
repnz
pop
xchg
push
lahf
xor
arpl
mov
jmp
xchg
inc
ds
sbb
jae
sub
cmp
xchg
in
push
push
roll
mov
pop
in
jmp
inc
add
popa
or
adc
imul
nop
xchg
jbe
das
mov
add
mov
dec
int
pusha
shlb
out
cmpsl
fwait
and
xchg
int
leave
inc
mov
sahf
stos
and
add
jge
mov
das
push
cmp
and
outsl
out
ret
mov
add
icebp
int
movntq
out
push
inc
mov
clc
arpl
and
testl
rorb
stos
leave
push
out
test
add
fstps
mov
stc
mov
fisubrl
xor
add
out
andb
xchg
pop
cld
ds
add
jmp
or
in
or
sti
mov
iret
cmp
or
xor
mov
dec
xor
jb
cmp
push
mov
icebp
jbe
mov
popf
lea
dec
xor
repz
fistpl
pop
sub
f2xm1
xor
test
aam
xchg
pop
adc
int3
sub
pop
movsl
mov
push
dec
call
iret
push
movsb
xchg
fdiv
xor
xchg
fiadds
sbb
adc
mov
sarb
xorb
mov
sahf
data16
pop
mov
adc
in
rorl
inc
sbb
insl
rcrb
adc
push
xlat
push
lds
movsb
les
cmpl
mov
loopne
out
mov
mov
sbb
js
pushf
scas
pop
ljmp
data16
lods
dec
xor
leave
xchg
clc
or
aam
imul
jnp
mov
xchg
adc
pop
mov
and
popa
jg
fcoms
cmp
out
mov
int3
mov
imul
jg
test
loope
cld
push
jle
lea
jg
lahf
inc
cmp
lds
mov
ja
pop
fcoms
push
jp
insb
jno
repnz
les
pop
jo
pop
cs
push
sub
shll
push
mov
xchg
test
out
xlat
mov
inc
xchg
mov
sbb
in
pop
xor
jp
repz
push
xchg
int3
mov
outsb
add
and
or
mov
je
mov
dec
jecxz
adc
cmc
mov
test
lret
mov
cmc
decb
sub
ret
xor
inc
mov
imul
clc
lahf
mov
in
or
xchg
les
dec
test
push
fcompl
mov
cld
lret
xlat
inc
insb
push
push
scas
scas
adc
sbb
mov
cmp
lods
mov
dec
imul
push
xchg
mov
push
mov
mov
repz
push
imul
outsb
icebp
shr
add
mov
push
add
pop
iret
xchg
dec
mov
lahf
fisubrl
pop
and
mov
sbbl
push
mov
or
subl
pop
aaa
xchg
dec
jbe
xchg
pop
mov
pop
rolb
cmpsb
mov
cmp
outsl
shll
outsb
jno
pop
aaa
mov
mov
mov
sbb
in
insb
sahf
filds
push
and
xlat
jns
xor
lret
test
jp
sub
or
cmp
dec
pop
aam
lods
push
xor
or
rclb
aas
mov
bound
scas
pop
push
adc
scas
cwtl
sti
sub
jmp
lods
cmp
add
push
add
sbb
mov
pop
cmp
mov
dec
outsb
movsl
xor
sbb
sarl
and
mov
mov
xor
mov
sub
and
xor
jge
lret
push
xchg
or
insl
rcrl
xchg
push
adc
ret
add
add
mov
out
inc
dec
cs
mov
nop
xor
mov
cwtl
loopne
int3
mov
scas
mov
cs
cs
jb
push
xor
mov
int
in
aaa
data16
cmp
lea
mov
aas
sbb
out
movb
test
add
mov
push
mov
dec
lcall
push
lcall
cmpsb
fldt
shrb
andb
repz
aad
ss
movsb
mov
stos
inc
jmp
pop
sbb
cs
sbb
sub
inc
aaa
fsubs
iret
ja
xorl
in
jl
xor
scas
sahf
loopne
mov
loopne
mov
dec
jae
xchg
fwait
sub
bound
ljmp
arpl
scas
stos
imul
ret
das
ror
fadds
ss
mov
in
mov
xchg
in
mov
popf
out
xchg
push
into
xchg
cmp
jg
inc
add
mov
fildl
cmp
das
call
adc
push
sub
xor
adc
cwtl
xchg
sahf
sarb
mov
or
cltd
or
ret
rorb
xchg
dec
xchg
popa
icebp
pop
or
jle
mov
outsb
jle
xor
daa
adc
leave
popa
fst
push
mov
add
das
mov
lods
daa
sub
in
sub
adc
mov
addr16
sti
jmp
inc
mov
adc
aad
je
sub
or
adc
test
aam
xchg
stc
nop
mov
lcall
inc
inc
sahf
jo
inc
pop
inc
mov
xchg
mov
xchg
push
shl
push
inc
movsl
in
outsl
mov
mov
cwtl
xchg
add
and
repnz
dec
cmp
add
adc
xchg
ljmp
push
push
das
cmp
xchg
stos
cmp
jge
xor
push
leave
arpl
xchg
aaa
aas
push
add
ljmp
cmp
in
push
dec
out
ret
pop
cmp
jne
ss
jmp
mov
js
mov
call
aad
fsubrp
jmp
out
add
ljmp
mov
les
lahf
or
jns
sub
ljmp
shll
in
popa
pop
add
push
mov
cwtl
dec
adc
mov
mov
test
std
push
jnp
sti
inc
mov
clc
aam
cmp
dec
add
daa
in
jg
insl
lret
push
cs
ret
in
xchg
add
cmp
push
push
cmp
pushf
jecxz
dec
mov
jne
jno
cs
sbbl
out
test
test
sbb
xchg
pushf
mov
xor
enter
cmp
mov
cld
mov
fisubrl
or
outsb
shll
aas
pop
inc
mov
push
sti
dec
daa
pop
je
lods
cld
ficomps
mov
jmp
jle
rcrb
dec
repz
or
outsl
gs
push
sub
hlt
outsb
int3
lret
pop
loop
jge
daa
add
insb
xchg
out
pop
bound
test
scas
jbe,pn
jp
cwtl
je
add
jns
sahf
mov
int3
jno
stos
pop
popf
adc
loope
jb
xor
pop
mov
loop
jbe
jecxz
test
scas
mov
test
cmp
stc
out
adc
in
xchg
std
xor
jae
mov
sbb
insl
sbb
or
ja
and
sbb
jp
cmp
adc
pusha
cmp
icebp
lock
std
inc
repnz
fwait
leave
push
hlt
sahf
mov
sbb
aas
ret
push
into
jecxz
movsl
xor
iret
dec
daa
cli
and
mov
push
mov
or
dec
xchg
cmp
aam
mov
cld
fdivrs
xchg
or
les
imul
sub
mov
clc
in
jns
xor
out
mov
push
test
or
sbb
cmpsl
stos
jle
push
mov
cpuid
filds
push
mov
loop
test
cwtl
dec
inc
mov
addb
xchg
sbb
jp
dec
xlat
push
mov
inc
pushf
ljmp
and
int
pop
movsb
jl
scas
push
mov
nop
loope
mov
xlat
sbb
cwtl
and
ja
add
insb
test
pop
sub
scas
pop
insb
cmp
jbe
push
adc
lds
mov
xchg
xchg
pop
loop
jno
and
push
pusha
and
and
stos
stos
xchg
fimuls
stos
pop
cmp
dec
fs
imul
nop
xor
mov
dec
fcmove
sbb
mov
repnz
out
lea
jnp
mov
arpl
lea
dec
adc
and
arpl
leave
stos
int3
subb
je
fucomp
inc
and
movsl
sti
orb
jae
jbe
xor
in
cli
incl
sbb
ret
nop
add
pop
test
mov
add
lea
pop
xchg
jns
mov
add
out
filds
cmpsl
jo
aas
test
jge
xor
add
mov
outsb
dec
cmpsb
dec
aas
mov
cmpsb
enter
insb
dec
mov
hlt
arpl
jmp
sarb
push
shll
bound
sub
xchg
add
imul
inc
out
lahf
cmpsl
cmp
repnz
pop
dec
aad
sub
inc
dec
push
rolb
test
test
xor
sbb
cmp
sbb
in
fdivl
idivl
add
xor
incb
ret
inc
and
popa
fldenv
mov
xor
cmp
inc
jno
clc
scas
lcall
push
call
and
aaa
xchg
xchg
mov
and
cmp
mov
mov
jns
jmp
sbb
faddp
jno
ljmp
mov
sub
imul
adc
lahf
arpl
test
inc
mov
ja
stc
jae
ss
pushf
cmc
gs
inc
lret
mov
sbb
in
ret
fwait
adc
cmc
mov
xchg
imul
mov
arpl
cmp
lods
jge
jg
jmp
fisubrs
push
divb
dec
xchg
sub
lds
fildl
fidivrl
lea
fcmovnbe
ret
mov
mov
xchg
cmp
jns
pop
jns
stos
jb
xor
sbb
out
push
mov
aad
jg
cmp
ss
fistps
and
pusha
mov
and
jge
rclb
inc
lods
dec
imul
repz
jg
lret
inc
insb
ds
pop
or
inc
out
pop
shrl
out
adc
inc
je
test
xchg
rcr
xor
aas
fistps
xchg
cmp
shll
std
arpl
es
dec
inc
cmpb
and
cltd
jo
xor
jns
lret
or
stos
dec
mov
cli
scas
pop
mov
out
jae
xor
push
in
shlb
jmp
in
mov
dec
mov
out
push
inc
fstl
xor
outsl
popa
daa
push
push
sahf
inc
push
xchg
int3
dec
inc
xchg
dec
fstpt
int
and
fisttpl
jnp
sbb
iret
sbb
and
fidivrl
cmpsb
iret
xchg
mov
pusha
shrb
cmpsb
shll
adc
mov
lret
out
sahf
xchg
hlt
add
lock
test
out
imul
stc
roll
jo
leave
and
aam
jo
jp
mov
daa
outsb
xor
test
les
bound
xchg
push
cwtl
mov
jmp
aaa
inc
mov
xor
mov
jl
pop
or
loop
push
dec
xor
pop
dec
sub
mov
bound
xchg
pop
stos
push
cs
les
stc
shrl
dec
lea
popa
stos
popf
and
sbb
fmull
stos
sahf
aaa
jns
dec
fstpt
inc
les
aad
jle
fimull
insl
dec
push
jno
pushf
insb
adc
test
mov
dec
mov
icebp
and
out
xor
push
data16
jbe
fdivs
iret
xor
jecxz
xchg
out
dec
cmc
jno
cmp
cmc
dec
and
fidivrs
je
pop
in
pop
fistps
gs
shlb
les
outsb
lea
mov
pop
jecxz
add
lods
loop
push
outsb
cltd
sbb
push
shrb
xchg
nop
cmp
lods
lret
and
lahf
nop
out
jbe
out
fwait
mov
addr16
pop
sti
test
jns
cmc
add
or
lods
je
dec
out
xchg
and
push
test
push
sub
data16
movsl
and
fstpt
sub
xchg
mov
fidivl
xchg
mov
xor
pop
fiadds
adc
in
outsb
aad
ret
jne
adc
loopne
insb
int3
adc
enter
push
sub
pop
dec
xor
mov
loopne
fmuls
fsubr
push
in
push
pop
push
mov
push
dec
dec
push
xor
mov
pop
out
xchg
inc
out
shr
cmp
stos
inc
pop
jb
loope
movsl
cmp
cli
or
push
daa
inc
push
cmp
fs
mov
in
ret
mov
fistps
test
mov
mov
test
shrb
sbb
in
pop
int
into
add
jns
mov
sub
shll
ja
int
sarl
icebp
dec
jle
jae
fcoml
subl
loop
jbe
xchg
xchg
out
mov
push
jp
add
sbb
push
mov
fcmovbe
fwait
push
jp
cmp
aas
sub
rcrl
outsl
jb
xor
jl
scas
push
xchg
movsb
orb
pop
push
inc
or
inc
fs
int
xchg
decb
dec
repnz
fidivl
or
sbb
fsubl
push
rcll
jge
loop
adc
mov
xor
pop
ret
js
or
arpl
test
stos
aam
xchg
xchg
addb
and
add
cmp
mov
into
jecxz
mov
test
push
leave
xchg
and
adc
inc
aad
fwait
pop
cmp
cmp
cwtl
out
mov
iret
mov
mov
mov
lret
jno
add
outsb
test
popa
cmp
dec
pop
push
lock
out
dec
push
adc
add
mov
loop
int3
cmp
cli
sbb
push
pop
and
jp
fidivs
lock
xchg
sbb
shlb
ja
imul
test
xchg
adc
stos
jno
subb
out
dec
in
rclb
les
sub
or
sub
test
or
fwait
iret
jo
call
pushf
fldt
fwait
jp,pt
mov
pop
adc
into
cli
and
mov
pop
outsb
jb
push
add
int3
aaa
sahf
mov
adc
add
stos
mov
jno
pushf
mov
or
in
test
sbb
out
mov
or
in
fadd
cmp
in
fistpl
xchg
scas
and
jp
dec
sub
mov
dec
gs
arpl
xorl
lock
nop
xchg
movsb
push
aad
add
scas
je
test
sbb
int
ret
outsl
cmovae
jae
lret
adc
dec
je
and
cs
outsb
pop
stos
sbb
lret
pop
fdivs
cmp
into
loope
jns
fadds
arpl
pop
gs
push
inc
push
jne
xchg
daa
lret
std
addr16
hlt
mov
pop
push
mov
sub
lods
adc
xlat
in
stos
gs
sub
call
adc
and
jecxz
fbstp
xchg
je
mov
pop
daa
dec
dec
xchg
mov
jge
stos
mov
sahf
push
mov
in
shl
adc
or
jmp
inc
mov
sbb
or
dec
push
ret
or
arpl
pushw
mov
loopne
mov
stos
jmp
cmp
ja
hlt
push
or
daa
test
lock
lea
outsb
insb
notb
and
pop
jo
fiaddl
mov
in
inc
imull
loopne
ficoml
fdivs
movsl
imul
and
dec
xchg
xchg
inc
fs
bnd
mov
lods
fnstsw
cli
stos
rcrb
aad
sub
push
jno
loopne
scas
pusha
mov
push
adc
and
xchg
iret
sub
mov
push
xchg
fistpll
xor
imul
and
in
push
xchg
scas
adc
jecxz
clc
pop
ljmp
push
fiaddl
stos
das
das
mov
mov
sbb
aaa
pop
call
addb
mov
sub
pop
jno
popf
in
xchg
pop
enter
dec
sarl
xchg
ret
inc
sbb
test
xor
or
push
sahf
cmp
lods
dec
mov
lcall
xor
bound
mov
add
add
or
lea
notb
jae
fisttps
ffree
push
mov
sub
leave
push
xchg
pop
sbb
cmpsb
cmp
adc
cwtl
stos
mov
test
ret
mov
call
lds
jne
adc
jle
addr16
sub
or
dec
test
add
or
repnz
sub
jne
sahf
aam
inc
dec
and
jle
shrl
scas
inc
mov
das
xorb
fdecstp
test
inc
push
and
lret
sbb
loopne
sbb
pop
or
and
and
sub
das
mov
adc
sbb
icebp
xor
pop
add
pop
jo
scas
jg
sub
lret
aad
jle
das
xor
pop
iret
sub
js
insl
ds
pandn
push
pushl
inc
outsb
je
lea
inc
xor
into
dec
int3
pop
out
fisubs
enter
cmp
call
sbb
cmp
jae
lock
icebp
pop
in
sarb
inc
mov
and
xchg
divb
cltd
call
std
pop
pop
pop
pushw
add
add
ljmp
push
aas
testl
aam
xchg
add
pop
lret
cmp
sar
cmc
add
jo
int3
and
aas
xor
jp
mov
jecxz
push
fistl
out
dec
dec
clc
mov
dec
cmp
iret
mov
je
sbb
pop
scas
or
xchg
mov
push
inc
nop
cmp
mov
cmc
in
mov
dec
mov
jl
imul
in
adc
add
jecxz
into
xorw
cmpsl
in
mov
jnp
sbb
ret
adc
movsl
add
mov
or
sub
mov
mov
repz
stos
int3
adc
mov
popa
mov
ret
sub
ficoml
mov
scas
das
outsl
fisubs
mov
insb
sarb
lea
cmp
nop
hlt
fadd
ret
mov
jno
cmp
push
nop
push
inc
mov
xor
sahf
pop
fsubl
lds
rorb
vmovsd
adc
fcomp
sub
mov
sahf
mov
pusha
push
mov
sbb
xor
cmpsl
xlat
sbb
jae
enter
dec
test
iret
inc
testb
in
sbb
js
lods
jbe
into
ret
leave
popa
xchg
scas
aaa
sub
sbb
mov
xor
xor
out
faddl
es
xchg
xchg
dec
jle
mov
and
scas
int3
lea
add
inc
imul
xlat
mov
ljmp
fdivs
mov
mov
xor
add
int
push
mov
loopne
out
mov
neg
mov
mov
or
mov
adc
jg
iret
xchg
inc
loop
test
out
jmp
dec
rcl
in
xorb
mov
mov
mov
adc
or
and
mov
test
xor
lock
cmp
mov
and
inc
mov
add
pop
pop
xor
fdivr
or
or
cmp
push
fistps
aad
push
sti
repz
or
andb
outsb
adc
and
int3
das
mov
mov
add
lds
jno
mov
add
ljmp
add
lods
pusha
inc
shl
lcall
or
cmp
movsb
lret
outsl
jmp
in
repz
fsub
jbe
xor
in
dec
add
inc
push
sub
data16
dec
das
sbb
sti
ret
outsb
mov
cld
cs
mov
aas
cmpsl
lds
int
inc
lea
mov
nop
pop
sbb
andb
push
daa
jg
xchg
jp
movsl
adc
dec
icebp
roll
cmp
pop
cmp
inc
test
data16
bound
push
mov
adc
push
aaa
adc
jp
or
xchg
enter
and
test
adc
dec
fcmovb
push
aam
push
stos
sbb
es
movsb
out
rcl
xchg
sbb
mov
mov
gs
ds
cmp
jmp
rclb
dec
push
lret
ret
mov
inc
mov
je
fdivrl
insl
push
iret
imul
push
xchg
sbb
stc
xor
in
ret
lods
icebp
xchg
iret
jge,pt
daa
xor
std
pop
jmp
sbb
xchg
inc
leave
je
fs
sub
and
jo
rorb
bound
leave
aas
pop
shl
je
inc
shlb
test
or
mov
incb
sbb
inc
mov
leave
out
sub
sub
push
sub
scas
incl
mov
push
sub
loope
mov
stos
sbb
jb
ret
add
cmc
lods
sub
out
inc
sub
imul
jg
mov
in
jl,pn
scas
divl
jmp
xor
cmp
aaa
xchg
insb
gs
mov
in
fucomi
outsl
xchg
adc
ficomps
push
mov
mov
add
data16
mov
lea
mov
jmp
dec
mov
xchg
jg
mov
jle
add
rorl
sub
cmpsb
lds
int
mov
roll
inc
add
lods
xor
sahf
and
out
jo
imul
or
add
pop
clc
cmp
add
ja
or
pop
push
sbb
divl
sbb
ja
xchg
pop
repnz
dec
xlat
sub
neg
pop
cs
inc
sbb
jecxz
pop
loopne
pop
add
adc
into
in
xchg
xchg
cmp
fstl
idiv
mov
cli
xor
mov
push
jge
mov
addr16
stc
lods
or
push
push
adcb
fcmovb
xor
les
mov
stc
dec
mov
dec
jne
push
mov
pop
jb
mov
rol
scas
mov
negl
sbb
push
imul
pop
xchg
test
lods
stos
fstpl
popf
xchg
or
daa
jbe
dec
daa
inc
push
mov
xchg
mov
sub
cmp
jae
aaa
sbb
inc
or
popf
push
testl
jmp
dec
push
push
push
in
add
fnstcw
ret
sbbl
sahf
dec
jns
or
dec
xchg
mov
stos
sub
jo
lret
sti
xor
imul
or
ja
inc
jmp
or
pushf
icebp
or
aas
test
int
imul
fcomps
lds
add
pop
add
mov
dec
rolb
push
cmp
in
fistpll
ficoml
movsb
push
insl
insb
sti
or
add
inc
xor
adc
inc
out
mov
pop
lea
jno
movsb
sbb
std
ja
xchg
inc
jle
mov
int
pop
mov
pop
cmp
mov
imul
and
fsubr
fs
fbstp
inc
xor
ret
inc
mov
mov
insb
mov
leave
mov
push
mov
insb
aam
mov
sbb
adc
lods
or
xor
leave
arpl
in
ficompl
aad
sti
cwtl
pop
push
rep
pop
sbb
push
call
fdivrl
mov
pop
cmc
std
and
stos
iret
pop
scas
mov
adc
inc
push
pushf
jbe
div
jno
inc
mov
jg
in
adc
mov
sarl
fs
loopne
push
ja
or
dec
call
std
jle
pop
repz
outsl
xor
push
xor
cmp
jecxz
push
jne
mov
in
pusha
sbb
sbb
lds
imul
cmpsb
adc
dec
inc
test
popf
in
inc
xchg
push
mov
jno
mov
mov
nop
push
add
cmp
mov
xchg
mov
pop
mov
sbb
cli
mov
out
iret
shlb
or
hlt
add
out
loope
mov
sbb
idivl
sub
std
test
ret
mov
and
outsl
sub
sbb
out
arpl
test
gs
xor
sbb
cmc
pop
lea
lods
lock
push
add
data16
pop
sarb
filds
jne
sbb
std
inc
jnp
and
push
insb
or
mov
push
fimuls
repnz
repnz
sarl
rcrb
xlat
pop
add
mov
js
push
or
pop
aaa
mov
mov
dec
gs
add
repz
or
mov
mov
data16
scas
xlat
push
pop
jmp
popf
xchg
leave
jae
lret
arpl
adc
jno
rcl
mov
out
bound
add
sbbb
popf
push
xchg
stc
cmp
stc
fidivrs
fisttps
jecxz
or
mov
adc
adc
dec
xor
movsl
cmp
int
leave
adc
push
psubd
out
pop
add
mov
jb
jne
cwtl
daa
lcall
iret
stos
cld
test
ja
or
out
repz
iret
pop
adc
out
cwtl
fmul
or
mov
and
xor
pop
pop
pop
les
xlat
push
sbb
cmp
adc
pop
or
outsb
movsb
idiv
xchg
add
xchg
cli
add
push
shll
mov
add
pusha
cmp
rcrb
xchg
and
and
es
ret
mov
fisubrs
inc
repz
pop
das
stos
js
and
repnz
cmp
and
pushf
out
lret
cwtl
pop
stos
and
mov
mov
jle
sub
mov
push
and
push
dec
je
xchg
popf
fdivrs
xchg
inc
and
lds
repnz
pop
cmp
jb
aas
pop
or
lds
shlb
xor
mov
cld
inc
adc
pop
mov
adc
pop
std
inc
icebp
jle
inc
add
cmp
mov
xlat
test
pop
add
push
ss
cvtdq2ps
test
mov
xchg
pop
inc
xchg
shlb
mov
adc
stc
cmp
int
adc
sbb
out
jo
cli
or
in
and
rcl
inc
mov
cmp
pop
cmp
jg
push
int
imul
loopne
push
call
and
repz
inc
dec
pop
mov
cwtl
adc
or
dec
lods
pop
mov
lcall
ffreep
push
popf
inc
out
add
icebp
or
mov
mov
cli
cmp
sti
adc
mov
cmp
pop
mov
mov
sbb
xchg
sub
pop
in
inc
out
jmp
dec
sbb
xchg
outsb
and
clc
ja
std
mov
mov
xchg
jle
fildll
dec
push
in
pop
jg
mov
mov
sbb
ficompl
push
inc
lds
mov
cltd
rcrl
cmc
add
jg
icebp
push
push
xchg
lea
cld
dec
imul
daa
and
push
lock
scas
sahf
leave
xor
cmpsb
mov
lds
adc
or
das
adc
rcrl
call
sbb
jmp
push
popa
add
rorb
jle
stc
call
ret
adc
jg
lock
mov
mov
mov
cltd
call
xor
fwait
test
lods
adc
insb
sub
push
or
push
not
out
daa
mov
jle
xchg
mov
add
stc
or
mov
sbb
mov
out
es
pop
shrb
mov
in
pusha
cmpsb
mov
imul
adc
cmpsl
loop
dec
arpl
xchg
aas
clc
ljmp
inc
jge
sti
jb
cltd
test
and
addb
xchg
rorb
into
scas
ffree
or
mov
dec
insl
jnp
add
test
xchg
enter
fstpl
pop
int
leave
jmp
sahf
cmp
bound
mov
roll
pop
and
mov
sub
ss
gs
xor
add
jge
adc
int
dec
sub
mov
or
cmc
jae
mov
sub
cmp
sahf
mov
imul
insl
insl
fbld
push
call
and
adc
nop
aad
into
fs
dec
sarb
mov
sbb
xor
aaa
xor
jnp
in
push
movsb
sbb
mov
enter
mov
inc
addr16
cs
xlat
add
sti
sbb
mov
push
ljmp
adc
jb
not
das
mov
cld
sub
cmpb
cmp
add
pop
insl
rcl
pop
pop
dec
outsb
mov
push
inc
mov
loopne
adcb
dec
fldenv
xor
mov
addb
mov
adc
ja
nopl
mov
out
aaa
xchg
icebp
cmpsb
jg
mov
sbb
mov
rcll
lahf
mov
xor
fbstp
sbb
jl
cwtl
cwtl
divb
add
inc
enter
ret
shlb
mov
mov
mov
cmpsb
jecxz
xchg
pop
lods
scas
pop
sbb
mov
add
xor
scas
cmp
push
or
xchg
test
push
mov
mov
or
mov
pusha
pushf
cmc
xchg
popf
mov
aaa
sahf
enter
pop
jne
scas
ret
sbb
arpl
int3
mov
xchg
lock
push
fwait
int3
mov
adcb
scas
stos
sbb
jns
dec
dec
call
fbstp
xor
in
pop
push
movd
std
sbb
inc
xor
jmp
fidivs
mov
cmp
or
cmp
sub
aas
or
imul
lcall
pop
jg
fwait
pushf
mov
push
les
mov
adc
cwtl
popf
add
dec
xchg
fwait
push
fucomi
dec
test
test
lods
in
jo
pushf
adc
xchg
loope
inc
rolb
movsl
inc
xor
inc
fisttpl
adc
jno
inc
push
rclb
fldt
popf
icebp
popf
or
push
mov
outsb
jo
xchg
sbb
mov
mov
jecxz
inc
pop
lret
icebp
loopne
add
and
jne
inc
nop
xor
jns
sbb
jle
push
fiaddl
pop
sbb
cmp
fwait
xor
shll
or
lcall
ss
ret
les
ja
push
adc
mov
scas
lcall
mov
cs
test
add
cli
xor
xor
lret
xor
and
dec
mov
mov
xor
leave
add
loope
hlt
loopne
adc
inc
inc
stc
loope
lds
and
fadds
enter
je
adcb
shlb
xchg
idivb
imul
test
cltd
std
ljmp
cs
in
mov
rolb
data16
leave
fadd
push
maxps
push
in
mov
loop
and
push
je
pop
jno
cli
int3
jge
inc
adc
xor
pop
popf
pop
rcrl
pop
cmp
pop
mov
jmp
xchg
inc
xlat
hlt
out
pop
jnp
adcl
addr16
sub
sbb
ss
mov
add
stc
sbb
bound
xchg
dec
rorb
dec
inc
addr16
inc
sub
inc
movb
xor
mov
dec
icebp
lock
or
cmp
cmp
stos
loop
jae
imul
xchg
in
ret
xchg
test
mov
xchg
in
or
fwait
xor
mov
orb
in
inc
out
in
scas
clc
push
fmulp
pop
push
xor
lea
repz
or
or
ljmp
add
dec
or
adc
pop
xchg
cld
push
xor
lods
xchg
ja
cmp
jno
adc
test
mov
les
insl
loope
cmpsl
daa
fidivl
inc
loop
shll
mov
pop
push
cmpsl
mov
jns
data16
rcrl
std
push
inc
sub
fcomip
test
outsl
scas
xchg
nop
or
iret
mov
pop
inc
xor
sbb
add
mov
mov
loopne
mov
fimuls
and
lods
pop
dec
add
loope
add
jecxz
imul
mov
outsb
xchg
pop
out
add
sbb
arpl
adc
je
xchg
xchg
lods
frstor
test
in
scas
in
pop
sub
add
jg
les
xor
add
fimuls
out
jnp
xor
sub
mov
inc
std
stos
ljmp
xchg
shrb
xchg
out
imul
mov
xchg
push
ret
adc
and
mov
bound
xchg
push
xor
pop
xor
je
jp
and
xchg
inc
addr16
shrb
sub
and
push
mov
lock
pushl
js
idivl
ja
cmc
jbe
xor
jns
mov
xchg
cmc
mov
test
test
jo
les
cli
cmpl
push
leave
lds
lea
add
orb
inc
push
adc
pop
cmp
pop
lret
push
movsl
lret
pusha
cmpsb
repz
in
in
sbb
cltd
pop
jl
push
dec
dec
bnd
test
out
inc
lds
imul
imul
dec
xor
dec
adc
jp
mov
sub
adc
pusha
dec
jae
cwtl
bound
adc
outsl
sti
iretw
jmp
pop
loopne
push
lods
imul
adc
or
and
xchg
jne
dec
repz
shlb
mov
lcall
nop
mov
out
and
adc
cli
orb
and
divl
vunpcklpd
repnz
or
cmc
dec
sub
loope
pop
push
xor
adc
pusha
adc
repnz
push
adc
scas
shlb
int3
pop
mov
sub
outsl
dec
pop
add
pusha
mov
cmp
call
dec
insb
loop
cmpsl
sbb
imul
jno
jns
mov
pushf
sbb
pop
mov
push
adc
ja
lock
loop
lahf
shll
fcoms
xlat
popa
in
cwtl
fdivrs
es
ror
sub
std
xor
or
ror
int
inc
sub
loop
xchg
scas
ds
or
lcall
stos
or
jmp
shlb
out
flds
jns
rclb
mov
imul
je
dec
sbb
sub
pop
xchg
loopne
les
mov
jb
fcmovbe
adc
mov
push
xor
ss
scas
loopne
dec
and
fistpll
mov
add
in
cmc
push
in
jmp
ret
mov
adc
enter
arpl
inc
in
outsb
inc
hlt
mov
add
jne
sub
cmpsb
cmp
or
ret
out
aad
test
jle
outsl
jl
adc
sbb
sbb
ljmp
nop
push
push
dec
xlat
dec
movsb
pusha
cwtl
adc
aad
vpsubq
mov
sub
lea
inc
pop
push
vpmacsswd
mov
fdivl
mov
pushf
push
cmpsb
cli
test
add
dec
sub
movsl
push
cmp
sub
test
jb
xlat
fsubs
sub
lock
jnp
mov
fwait
sub
or
insl
mov
es
scas
sbb
pop
cld
scas
fidivrl
mov
jne
dec
sti
in
jg
fadds
lret
dec
decl
sub
jecxz
addl
and
mov
cmpsb
fstpl
into
xor
decb
in
subb
mov
leave
cmp
cmc
cmpsb
std
xchg
out
lcall
cmp
pop
mov
movsl
outsl
jbe
lds
add
adc
mov
mov
out
adc
test
lods
push
cmpsl
mov
xor
add
es
addl
shrb
or
sub
cs
stos
popf
jmp
inc
inc
subl
aas
mov
dec
jg
daa
insb
and
test
notl
and
or
mov
roll
mov
loop
inc
push
test
cmp
sbb
flds
and
arpl
insb
xchg
and
in
popa
sbb
enter
in
ja
iret
mov
cwtl
pop
adc
movsb
jl
and
les
lods
mov
es
loopne
xor
inc
sub
inc
push
pusha
xor
jne
sub
xor
gs
push
cmp
cli
xchg
jne
and
roll
inc
push
mov
mov
mov
cmpl
pop
loope
and
cmp
jnp
imul
jge
inc
inc
int
mov
dec
clc
int3
xor
push
adcb
pop
mov
cmp
pop
leave
push
les
inc
stos
stos
ret
push
sbb
jg
pop
out
das
sub
or
js
push
lcall
adc
adc
adc
cld
push
mov
enter
xor
dec
push
cld
aad
xor
loope
ret
stc
sahf
sub
dec
cmp
xor
jmp
add
leave
sbb
dec
sub
popf
sahf
cld
cmp
sbb
xorb
cmp
movsb
push
push
in
subb
and
aas
and
inc
sbb
lods
dec
inc
subl
nop
test
push
lcall
jecxz
push
mov
xor
xchg
mov
inc
push
cwtl
mov
rcl
jecxz
pushf
lret
scas
dec
lds
es
xor
add
lods
decl
add
jg
lock
xchg
call
fisttps
leave
xor
imul
in
into
into
es
and
push
mov
dec
call
ja
dec
xor
sub
mov
int3
and
dec
pop
imul
pop
pushf
hlt
fbstp
mov
mov
jne
cmp
sarb
add
mov
cld
add
sub
pop
pop
les
test
repz
mov
push
or
mov
or
mov
imul
add
add
xlat
adc
push
imul
mov
inc
jae
in
ljmp
fdiv
fwait
inc
sbb
or
adc
push
mov
mov
jcxz
imul
xchg
nop
adc
pop
add
shl
jg
dec
pop
cmc
adc
imul
ret
pop
enter
movl
mov
mov
jne
jns
rcll
es
popa
scas
mov
addl
imul
call
scas
adc
dec
pop
outsb
aad
or
cmp
stos
out
and
adc
outsl
sahf
and
je
iret
cwtl
add
adc
or
lea
mov
imul
test
outsb
imul
loope
rcrb
pop
imul
test
fcomps
out
xchg
pop
fld
cmc
jp
mov
or
push
fwait
xor
adc
fwait
test
popa
icebp
in
add
mov
jge
in
call
and
mov
mov
ret
xlat
out
aaa
dec
popf
and
popf
mov
add
cmp
sub
scas
mov
adcb
cld
insl
lock
jle
jle
mov
frstor
jb
fs
push
in
mov
fisubs
push
jl
popa
shrb
int3
fldcw
add
repnz
mov
mov
inc
in
inc
dec
cmp
push
mov
mov
hlt
nop
mov
aaa
adc
xchg
add
mov
jle
lds
stc
mov
dec
mov
insl
cwtl
jmp
icebp
out
cmpsl
xchg
or
fidivs
pop
adcb
gs
aaa
imul
add
push
lds
aaa
rcrl
int
mov
clc
jo
jmp
xor
je
out
cmp
test
rcr
in
xor
and
cwtl
fsubs
loop
adc
adc
loope
push
add
int
repnz
shlb
adc
fisttpl
pop
daa
das
pop
sub
xchg
subl
mov
mov
mov
add
dec
cmp
into
ret
test
das
add
lea
cli
pop
imul
fcmovb
mov
notl
sub
test
sbb
cli
and
in
rol
loopne
pushf
fstpl
loope
add
fmull
jl
jne
fisubl
add
sti
add
fcmove
cmp
das
mov
bound
pop
ds
mov
rclb
mov
int
inc
add
leave
fwait
mov
lret
xorl
cmp
adc
ficomps
pusha
shrl
js
pop
lds
shrb
sub
repnz
and
das
mov
dec
in
testl
outsl
pop
lret
test
sub
lahf
rcrl
xor
test
push
sub
sti
fld
ret
jns
jp
or
jge
adc
inc
es
mov
add
xchg
jb
mov
cld
or
xor
out
gs
ret
or
jbe
sbb
dec
add
pop
add
into
stos
mov
ljmp
ja
outsb
mov
and
sbb
outsb
adc
mov
repz
mov
mov
imul
dec
pop
xchg
add
icebp
addb
rcrb
adc
add
push
xchg
xchg
xor
mov
lods
dec
jns
sub
cmp
shl
cmc
popf
adc
sbbb
rclb
or
dec
inc
scas
mov
xchg
dec
jns
adc
dec
add
addr16
mov
int3
roll
stos
fldl
inc
aaa
pop
hlt
enter
push
jns
jl
mov
sbb
shl
stos
cwtl
jnp
xlat
roll
icebp
push
and
out
sub
roll
sti
incl
leave
mull
and
mov
mov
decb
mov
clc
in
cmp
sub
nop
loop
sbb
jmp
idivb
addl
or
pop
rcl
repnz
xor
mov
adc
repnz
and
pop
xor
xchg
jno
popa
lea
pop
movsl
xchg
inc
hlt
mov
sbb
mov
ljmp
shll
jmp
push
aaa
outsl
or
fsubrs
or
arpl
loop
insb
mov
add
add
jne
dec
add
movsl
cmpb
sbb
scas
push
hlt
fucomi
lret
push
repz
dec
mov
or
test
imul
fstps
stos
ja
cmp
sbb
pop
xor
std
arpl
xchg
aad
xlat
and
xorl
int
fsubl
insl
fs
xor
sahf
mov
loope
ret
imul
mov
out
xchg
jge
pop
mov
rcrl
or
xorb
bound
jecxz
sahf
mov
sub
movsl
xchg
mov
jg
insl
mov
leave
gs
sti
or
adc
jecxz
ret
sti
in
mov
push
gs
fildll
or
and
test
imul
fwait
jle
add
hlt
lret
lods
lock
lock
jmp
push
enter
popl
mov
ret
imul
add
inc
pusha
test
mov
pop
shl
das
mov
cwtl
outsb
pop
sarl
std
push
inc
inc
push
or
pop
jecxz
fisubs
loopne
and
jecxz
xlat
lcall
int3
mov
xchg
outsl
mov
lods
push
add
test
push
stos
inc
cli
loopne
lds
and
out
jg
out
subl
test
push
out
nop
decl
and
daa
insl
repnz
negb
sub
mov
adc
pop
cmpsb
movb
fistps
movsb
cli
push
rol
dec
movsb
jo
popf
pop
daa
scas
loope
into
sub
fidivs
jle
orb
jbe
popa
cmp
fisttps
lods
and
fisttpl
dec
push
cmp
pop
mov
xchg
stos
adcl
push
add
imul
insb
jp
or
fcomip
icebp
adc
negb
imul
jg
loopw
lahf
lods
je
xor
insb
mov
xchg
push
xor
fmull
fisttpll
lods
outsl
nop
jbe
xor
dec
cltd
bound
movsl
pop
int
les
cmp
pop
in
ret
test
mov
clc
mov
pusha
jns
mov
cmc
sbb
sbb
inc
jp
mov
pop
fldcw
pop
cmp
mov
dec
xor
shl
je
cmpb
ja
fisttpll
mov
dec
mov
and
movsb
cmp
addl
loope
sub
popa
inc
mov
rorl
xor
dec
test
xor
mov
push
add
cmp
push
push
mov
xor
add
xchg
mov
aas
int3
or
dec
enter
xchg
xor
repnz
mov
pop
stc
loope
dec
mov
lods
dec
cmpsb
int
dec
outsl
xor
sub
insl
sub
imul
call
popf
inc
lock
sti
dec
sahf
mov
stos
arpl
inc
inc
testb
je
loope
ret
xlat
and
jb
inc
shrl
adc
pop
inc
lds
fbld
stc
xor
pop
scas
xchg
mov
pop
rorb
and
jne
iret
out
add
outsb
mov
inc
dec
inc
lret
cmp
js
inc
cmp
mov
mov
push
jnp
je
imul
jo
fisubrl
sub
sbb
mov
mov
cltd
aam
repnz
jns
ds
inc
int
mov
xchg
inc
das
js
mov
inc
cmc
mov
daa
xlat
cmp
cmpb
bound
or
dec
inc
dec
movsl
lcall
mov
fnstcw
popa
push
sub
lods
gs
neg
sbb
and
aam
or
out
push
jbe
push
andb
push
jno
arpl
xor
stos
dec
jno
lods
loop
sarl
push
es
movsl
int3
je
pop
or
lret
xor
adcl
inc
xor
subb
or
push
sbb
sbb
cmp
dec
mov
bound
cmp
pop
mov
add
pop
inc
inc
icebp
add
mov
xor
jne
cmp
mov
add
pop
and
push
pushf
mov
je
pop
pop
lcall
xchg
lahf
aad
aam
pop
adc
or
lea
jmp
push
inc
sub
sub
fsubl
fsubrl
mov
imul
arpl
insl
neg
les
icebp
test
popa
pop
sub
fsubs
fbld
adc
test
or
inc
or
or
pop
jns
sbb
adc
mov
sbb
mov
loope
shlb
cmpsb
insl
sbb
jp
push
mov
addr16
xorl
push
or
xchg
add
add
ret
mov
ret
cvtdq2ps
adc
mov
mov
mov
fsubp
cmp
out
movsl
mov
mov
xor
or
xchg
je
outsb
or
popa
into
jno
enter
and
jp
xor
jg
push
inc
jecxz
xor
or
std
and
stos
insl
loop
ds
out
aad
vphaddbd
push
fisttps
or
int
adc
xchg
bound
jns
shrl
in
sbb
pop
jle
mov
sub
lcall
push
adc
xchg
cltd
ljmp
add
call
and
div
lcall
mov
cld
jne
or
xchg
and
movsl
cmpsb
roll
insl
cmp
cltd
mov
daa
push
jg
test
leave
ss
push
loop
sti
repnz
mov
ror
mov
repnz
repnz
cmp
push
dec
push
fistpll
push
idivb
push
mov
xor
fistl
sub
cmp
xchg
outsl
mov
push
cltd
xchg
inc
ljmp
aad
mov
push
popf
mov
mov
pusha
hlt
arpl
and
xor
adc
popf
popa
xlat
add
mov
mov
movb
dec
int
mov
test
and
or
sub
aas
or
jg
sub
int3
and
in
fcomps
sbb
xchg
dec
lcall
mov
lret
push
xchg
js
xlat
pop
mov
rolb
sarl
mov
jb
xchg
mov
jg
jmp
adc
sub
cwtl
xor
je
cwtl
mov
push
test
icebp
mov
js
out
adc
inc
scas
adc
inc
in
lds
mov
mov
jbe
mov
mov
dec
mov
je
es
daa
cmp
xchg
push
das
push
popa
or
push
lods
mov
out
scas
dec
cmp
nop
sub
addr16
push
push
movl
cmc
incl
in
mov
std
mov
imul
dec
imul
jbe
dec
mov
pop
push
jne
pop
inc
js
daa
xchg
scas
lods
jae
out
jmp
pop
and
sbb
out
lea
popf
sti
test
in
xchg
out
cmc
and
cmp
fs
sahf
fstpt
out
xor
dec
jo
xor
data16
sub
add
push
cmp
int
mov
stc
outsb
cld
add
inc
loope
jbe
add
and
mov
js
hlt
in
push
mov
dec
out
lcall
loope
into
or
out
fbstp
je
repz
lea
mov
nop
in
xor
aas
ret
dec
mov
in
in
imull
xlat
mov
mov
jmp
jbe
adc
dec
test
inc
sahf
xchg
ret
or
aaa
pop
iret
dec
gs
imull
add
mov
std
call
lcall
add
sbb
sbbl
pop
pop
outsb
ror
lea
adc
and
push
push
aas
sub
stc
pusha
out
enter
enter
mov
pop
fucomp
movsb
pop
mov
mov
jnp
push
and
pop
push
jbe
in
loopne
push
jp
mov
xchg
push
sbb
mov
in
push
movsb
rorb
sub
loop
adc
push
gs
inc
cmpsl
jmp
ja
lods
adc
fxch
movsb
adc
sbb
roll
jb
fldl
inc
push
aas
or
sub
sahf
out
mov
xor
mov
jp
sbb
pop
sub
adc
scas
xor
mov
fs
lret
dec
les
dec
sub
adc
cmpsb
pop
pop
adc
mov
repnz
bnd
push
pop
popf
call
or
into
gs
xchg
sub
gs
push
adc
xchg
push
sbb
rclb
bound
sbb
out
jle
pusha
xchg
cs
cltd
push
and
sbb
fstpt
mov
repnz
das
mov
stc
jmp
ss
js
lcall
cmp
pop
fwait
mov
roll
aam
lcall
xchg
mov
gs
outsb
jno
push
pushf
jp
or
sbb
repnz
jmp
and
cmpsb
ret
sub
test
or
out
add
outsb
add
pop
int
xchg
add
into
out
movsl
int
xchg
dec
xchg
pop
cmp
outsl
push
aaa
cmp
inc
ljmp
js
pop
cmp
cmc
or
adc
push
enter
sbb
mov
inc
pusha
mov
pop
jns
icebp
dec
leave
xchg
loop
js
lds
cmp
jo
and
cmp
int
add
pop
cmpsl
pop
js
mov
cmp
stc
push
stos
xchg
mov
cli
sub
dec
jnp
inc
bound
xlat
jbe
sbb
aaa
jg
loop
mov
sbb
push
imul
mov
scas
stc
jp
in
into
mov
adc
stos
xchg
data16
jg
dec
nop
into
add
cli
dec
in
sub
inc
mov
xor
dec
dec
sub
lret
jge
jge
ret
push
fisttpll
adc
cmp
mov
inc
ret
stos
lods
int
mov
movsb
adc
cmpsl
jb
mov
lahf
or
pop
cmc
jmp
fsubrs
insb
sub
lcall
jo
pop
lock
stc
pusha
xchg
jmp
jge
imul
jb
push
xchg
jae
jmp
mov
mov
jp
orl
mov
fcmovbe
cli
cmc
movsl
xchg
inc
adc
fsubrl
sbb
xchg
sub
mov
mov
sarb
mov
pop
lret
adc
or
push
mov
mov
push
push
adc
dec
icebp
das
mov
sub
nop
mov
mov
das
sbb
andl
jbe
and
jg
stos
push
mov
fdivrs
and
mov
push
push
inc
ret
insb
mov
xchg
test
push
sbb
jge
cmp
jp
rcl
addr16
cmp
dec
fildll
test
lcall
nop
mov
imul
adc
dec
dec
sub
sbb
cmp
inc
xor
jne
adc
sahf
cwtl
daa
jl
xchg
push
loope
cmp
arpl
cmpsb
aam
xor
ret
add
outsl
and
insb
cmpl
mov
sub
push
cwtl
aas
stos
ds
push
mov
lea
mov
fdivs
jg,pn
pop
sahf
jo
mov
popa
pushf
add
pop
pop
adc
in
adc
sti
inc
movsb
lock
loop
fldcw
xchg
insb
subl
push
adc
rcrl
xchg
out
insb
or
adc
push
pop
jae
mov
ficoms
jbe
iret
js
push
push
mov
shr
sti
test
aam
lea
aam
scas
fstpl
lock
in
dec
ret
ret
icebp
mov
loope
pop
inc
out
pop
aas
pop
push
adc
or
and
rcrl
and
xchg
es
outsl
loop
inc
xor
dec
popa
mov
sub
iret
mov
jg
mov
inc
cmp
test
imul
add
je
push
cmp
test
leave
push
cmp
xchg
shlb
inc
adc
icebp
mov
add
das
pop
jns
loope
sub
inc
jge
and
adc
in
jbe
mov
outsb
mov
cli
cmc
lahf
cmp
jns
cmc
add
idiv
xchg
xor
addl
sub
fsubrs
gs
jmp
xchg
jnp
sbb
dec
fwait
mov
mov
imul
push
cmp
mov
je
mov
mov
push
enter
cmp
or
lods
fisttpl
jb
in
mov
inc
imul
mov
cmc
or
int3
std
dec
add
jecxz
rcll
std
out
sub
inc
pop
addr16
xor
mov
pop
shr
mov
test
add
and
pushl
sbb
add
jne
ja
cmp
xorl
sub
jnp
mov
pop
pop
sbb
xchg
loop
mov
pop
and
in
fsubs
mov
push
adc
ficompl
sub
iret
xor
frstor
mov
sbbl
lods
cmp
mov
jne
sbbb
jmp
popa
sbb
xchg
outsb
movsb
pop
add
sbb
inc
popa
cmp
mov
inc
lret
stc
jle
dec
sbb
dec
or
jl
imulb
jge
out
repnz
xchg
sub
lcall
inc
loope
addl
dec
jno
sbb
in
sub
mov
jecxz
mov
sub
roll
or
ret
xchg
push
fidivrs
cs
mov
icebp
fistps
jne
and
cmc
stc
and
and
sub
mov
dec
cltd
int3
fldcw
or
xor
mov
pop
leave
jo
shl
mov
fdivrs
push
sub
nop
nop
xchg
outsl
or
jae
mov
add
mov
pop
dec
bnd
fnstsw
ljmp
les
pushf
jnp
nop
jmp
leave
cmp
xor
fidivl
xor
sti
mov
xchg
popf
repnz
sahf
in
das
dec
test
ja
filds
xchg
in
cli
push
pop
aam
mov
aaa
icebp
pushf
xchg
mov
imul
loope
pusha
cmp
dec
data16
dec
add
stos
push
sub
mov
loop
out
mov
sub
pop
stos
cmp
sbb
leave
push
xor
shll
and
jmp
mov
mov
gs
lret
jbe
dec
enter
outsb
int3
dec
add
lea
mov
hlt
jb
rolb
xor
stos
adc
sarb
mov
cmpsb
repnz
mov
inc
and
test
sbb
sub
jns
fwait
or
xor
icebp
adc
and
sub
xchg
mov
divl
xor
into
mov
rclb
out
scas
shl
stos
pop
add
lods
jg
dec
dec
xor
push
or
cwtl
sbb
dec
stos
mov
add
enter
aad
jo
push
sarl
push
or
jecxz
jo
je
test
xor
inc
icebp
dec
jnp
mov
jg
push
jne
or
lods
or
shr
outsb
loopne
pop
into
movsl
ja
inc
lret
cmpsb
dec
add
pop
into
mov
add
xlat
jbe
sub
lock
mov
test
pop
dec
movsb
mov
shll
add
hlt
inc
push
adc
subl
aad
inc
jbe
sbb
push
insl
and
push
or
stc
ret
dec
call
xchg
inc
loop
mov
xor
in
mov
mov
mov
or
in
xchg
and
ja
pusha
aad
sbb
dec
add
mov
lret
xor
mov
jecxz
aas
push
mov
divb
mov
rclb
mov
jne
xchg
and
rorl
negb
cwtl
jne
insb
aaa
adc
mov
pushf
mov
lcall
stos
cmp
mov
rclb
adc
dec
rcrb
or
dec
xchg
jbe
mov
inc
mov
xor
mov
push
inc
shll
dec
push
dec
and
fadds
enter
aad
sti
imulb
orb
data16
fcomi
test
mov
shll
xchg
mov
jne
mov
in
popf
xchg
cmp
or
push
inc
je
gs
xor
scas
mov
sbb
jb
xor
mov
pushf
sbb
add
adc
sar
ja
dec
ficoms
andl
mov
or
jo
into
cmp
rcrb
daa
movsl
lcall
aaa
dec
jns
push
jmp
ja
inc
sar
movsb
outsb
loopne
int3
xlat
and
jb
and
xor
mov
test
push
int3
cmp
pop
xchg
add
push
pushf
adc
and
int3
lahf
mov
cmc
movsl
loopne
neg
cltd
bnd
and
loope
arpl
std
jns
dec
popa
imul
push
and
divl
push
aaa
inc
scas
xchg
es
mov
enter
stos
loop
jno
xor
imul
ret
lea
aad
daa
fidivrs
dec
and
aas
mov
mov
arpl
xor
cltd
xchg
adc
pop
movsl
dec
sbb
rolb
lods
jmp
rolb
mov
and
outsb
andb
mov
xchg
jae
mov
pop
push
or
sbb
add
adcl
ret
jae
inc
sbb
outsl
fwait
jnp
loopne
pusha
test
out
xor
push
mov
lcall
add
outsb
jno
fcmovb
or
jns
pop
movsb
cmpsb
js
ds
push
hlt
dec
icebp
sti
xchg
call
mov
sbb
or
pop
sub
mov
mov
jl
pop
jae
add
jle
je
sub
repz
outsl
aas
sub
lahf
xor
pop
and
push
mov
push
mov
pusha
inc
cmp
jno
ret
cmc
push
and
cmc
add
int
sub
and
jmp
ds
mov
out
pop
pop
iret
sahf
adc
xor
and
jle
ds
pop
xchg
mov
outsb
cmp
xchg
fwait
jge
ds
cli
ds
xor
and
imul
cmpsb
in
bound
aas
pop
int
sbb
push
push
stos
in
add
fstpt
nop
xchg
push
je
fisubrl
mov
iret
mov
sahf
nop
cmp
add
sub
aad
mov
or
jecxz
or
shll
movl
cmp
push
push
stos
fdivr
pop
movntq
xchg
jae
stc
mov
lahf
xchg
imul
or
addr16
clc
in
cmp
pop
in
aad
dec
movsb
push
movsl
add
jns
jns
dec
or
xchg
test
xchg
jp
xchg
stos
std
ret
test
mov
iret
shlb
inc
rcrb
lea
dec
inc
in
jb
lds
xlat
push
enter
jmp
mov
ja
jmp
xor
rorb
xor
je
pop
sbb
fidivrl
jmp
or
leave
pop
or
adc
and
push
mov
aad
out
aas
loop
mov
ja
dec
cltd
inc
mov
ret
rcrl
xor
loopne
js
movsb
push
loop
popa
call
adc
sbb
dec
dec
hlt
push
jp
jg
xor
mull
xchg
sbb
xchg
xchg
dec
sbb
nop
xchg
je
in
in
push
jmp
sbb
mov
xor
push
push
and
movsb
stc
adc
and
lcall
push
push
int
push
xchg
lock
outsl
loop
fldcw
lahf
mov
ret
or
lahf
and
int3
cmpsl
mov
and
add
clc
sub
movsl
xor
cmp
jns
shrb
cs
call
aam
addr16
mov
lret
and
out
pop
test
dec
rorb
mov
jp
clc
and
cmpsl
xlat
xor
dec
psrlq
dec
push
iret
sahf
xlat
mov
aam
rorb
mov
popf
xor
xor
daa
test
adc
xchg
in
dec
mov
xchg
stc
addr16
stc
xchg
add
dec
scas
aam
adcl
dec
sbb
sub
dec
pop
mov
add
jecxz
cmp
ret
dec
mov
pop
fnstenv
sbb
mov
movsl
dec
mov
iret
ss
iret
dec
pop
push
mov
into
push
mov
aaa
int
stos
out
sub
test
push
mov
scas
fadds
leave
mov
orl
jl
inc
push
sbb
adc
sti
add
leave
push
cmp
fwait
jne
xchg
out
jmp
je
repnz
inc
pop
xchg
fs
lea
inc
mov
mov
cmp
imul
aam
pop
push
rcrb
or
push
sub
fsubrl
mov
jns
aas
mov
xchg
or
cmp
rolb
cmp
jo
mov
jne
lods
sbb
imulb
addr16
int
dec
add
mov
fs
clc
rcrb
loopne
inc
adc
sahf
arpl
fs
mov
push
mov
arpl
dec
mov
es
jo
mov
inc
jo
mov
cmpsl
xchg
mov
cli
inc
out
into
rol
cmp
adc
or
adc
loop
addr16
xor
daa
sbb
aas
dec
adc
pop
mov
pop
out
xor
inc
sarb
inc
xchg
lret
mov
out
push
sub
mov
xor
mov
movsl
mov
daa
mov
arpl
mov
inc
fxam
ret
push
inc
push
cli
fsubrs
data16
cs
sub
pop
call
test
mov
inc
movsl
into
dec
pop
xchg
sub
add
andb
mov
int3
stos
int3
jg
outsb
stc
out
ljmp
fs
mov
mov
in
mov
loope
hlt
pop
inc
jbe
cli
jo
push
cld
jbe
sub
jb
mov
bnd
xchg
adc
mov
pop
movsb
sti
testl
lcall
xchg
pop
cltd
ja
dec
mov
mov
inc
adc
jb
cmp
insl
sub
sub
lods
popf
cli
dec
cs
jp
mov
sbb
outsl
push
addr16
out
test
lea
mov
test
out
mov
or
jb
aas
dec
cld
out
mov
inc
xchg
sub
xchg
in
ficompl
adc
mov
sbb
cwtl
jp
push
mov
aam
loopne
sahf
jo
dec
xchg
adc
jl
bound
add
jmp
imul
pop
jno
fnstsw
adc
mov
mov
rcrl
fs
loop
pop
push
mov
xchg
jmp
sti
jg
lock
fcoml
fiadds
aam
clc
pop
mov
fdivrl
dec
push
mov
adcb
push
daa
xor
and
mov
push
push
inc
outsb
inc
push
pusha
adc
pop
mov
push
mov
or
dec
adc
jecxz
shl
jg
jp
xor
cmp
sahf
mov
mov
and
jp
xchg
mov
int3
mov
pushf
aad
fstpl
xchg
std
sbb
jg
adc
pop
or
xchg
fnstenv
stos
lea
lds
mov
mov
cmp
repnz
iret
mov
xorl
dec
fldt
pop
pop
out
pop
sub
dec
icebp
lds
pop
xchg
sbb
xlat
in
ja
mov
repz
fucomip
bound
outsb
loopne
sub
xchg
cwtl
push
daa
imul
pop
mov
sbb
xor
rcrl
sbb
and
shrl
ds
adc
imul
test
sub
sti
ret
cmp
xchg
dec
test
pop
mov
xor
mov
stos
dec
cmp
lahf
dec
xchg
sub
sub
xchg
outsl
aam
xor
xchg
push
and
mov
push
push
out
bound
fistl
je
push
mov
mov
sbb
add
dec
subl
or
lods
scas
repz
out
mov
in
cli
and
dec
std
mov
iret
mov
inc
sahf
mov
jbe
in
jmp
in
or
mov
stos
mov
data16
mov
hlt
xchg
cmp
ret
xor
fcmovne
xor
imul
pop
xchg
adc
mov
jle
xlat
dec
rorb
ret
mov
pop
or
push
dec
lret
cmp
mov
cli
scas
push
cmc
clc
sbb
push
fbstp
xchg
sbb
aad
int
jno
mov
add
cmc
and
xchg
lahf
jmp
imul
mov
xchg
cmp
rep
mov
repz
xchg
adc
sub
mov
adc
cmpsb
sti
jmp
cmp
insb
or
stos
or
jecxz
flds
push
mov
adc
mov
cwtl
js
sub
repz
jne
jge
aam
roll
daa
fwait
xchg
rorl
aaa
pop
popf
cmp
jns
sti
and
push
xor
add
push
js
clc
loope
jmp
add
clc
test
out
stos
xchg
adc
and
mov
enter
cld
xchg
cmp
mov
push
xchg
push
adc
ja
in
dec
loopne
in
scas
push
int
aam
mov
into
dec
add
xor
xchg
pop
shll
push
jge,pt
mov
xchg
push
cmp
std
xor
sub
pop
bound
test
loopne
mov
int
loop
add
xchg
sub
in
pop
jno
push
inc
xor
pop
sbb
pop
imull
pop
push
and
clc
sbb
in
mov
xor
out
push
and
movsl
xor
dec
dec
mov
ret
in
or
mov
mov
in
shrl
add
lods
sarl
pop
lea
mov
ficoml
in
mov
pop
jmp
sub
ss
mov
jae
sbb
sar
rorb
cli
inc
xor
int3
outsl
out
xor
mov
in
xchg
fnstsw
shlb
sahf
push
adc
in
cmp
andl
mov
mov
sbb
or
fisubl
enter
ljmp
leave
pushf
ss
inc
push
loop
repz
xchg
repz
aad
xor
bound
mov
int
xor
in
ds
mov
cmpsl
cmp
dec
int3
repnz
sub
idivb
dec
cmpsb
mul
in
mov
or
aaa
aam
ss
and
xchg
lods
xchg
xor
mov
das
scas
mov
test
lea
idivl
mov
push
lds
or
popf
fldcw
ret
adc
js
push
int3
ret
ret
sbb
sub
xchg
stc
mov
loope
jle
pusha
push
adc
mov
aad
outsb
mov
orl
test
jg
add
in
cmpsb
mov
and
in
pop
inc
ret
out
out
inc
or
and
repnz
ret
addr16
push
cmpl
lret
fwait
add
dec
mov
sub
pushf
cmp
lods
mov
inc
jne
xchg
adc
mov
out
xchg
jmp
leave
sub
jecxz
subl
inc
and
jb
into
add
mov
add
mov
lods
sarl
sub
pop
aas
inc
cmp
lret
mov
lods
add
cwtl
out
fs
lods
pop
jne
or
leave
mov
popf
ffreep
cmp
jg
sti
xchg
ret
mov
sbb
sbb
xor
mov
add
cmp
dec
xlat
mov
pop
and
sub
mov
loope
mov
jge
mov
and
popf
idiv
call
icebp
mov
mov
iret
and
lret
xchg
push
stc
fs
jg
sahf
leave
rclb
adc
sahf
stos
and
jnp
cmp
repnz
ds
ljmp
cmp
adc
add
cs
xchg
pop
mov
sbb
or
mov
mov
pop
stos
lods
mov
call
mov
mov
push
cli
scas
loopne
rcrb
stos
loop
mov
push
sbb
mov
filds
je
repnz
rsm
pop
sbbb
imul
out
jnp
dec
sub
push
pop
add
xor
fucomip
mov
and
pop
push
subb
jecxz,pn
mov
fcomps
jns
nop
movb
dec
pushf
jmp
mov
push
ja
hlt
xchg
and
sub
loope
pop
cmc
iret
dec
insb
sbb
es
sbb
pop
or
fstl
dec
and
sub
sub
adc
push
into
cli
adc
push
lret
int3
xchg
cmc
lds
std
lret
lock
jle
push
fsubl
push
sbb
notl
loope
fidivs
loop
jl
ret
outsb
add
mov
mov
movsb
add
orl
jb
fwait
cmp
jge
pop
inc
pop
sahf
pushf
fdivrl
mov
and
loopne,pn
fcomi
mov
pop
inc
push
sub
lds
pop
cmp
mov
push
dec
loopne
pusha
fisttpl
xor
das
mov
orl
mov
scas
pop
or
dec
cmp
clc
cmpsl
je
clc
repnz
inc
or
dec
sbb
jp
cmc
adc
repnz
sahf
jmp
jo
mov
jg
dec
shlb
jns
sbb
ljmp
pop
xchg
jb
jne
cmp
or
out
xor
pop
lret
sbb
data16
dec
loope
push
xchg
out
cmpsb
and
mov
jg
mov
fidivrl
jecxz
lahf
shlb
push
negb
popa
xchg
clc
adc
xchg
mov
add
daa
jl
mov
mov
xor
iret
jnp
fsubl
and
fcmovb
cmpsl
xchg
lock
mov
mov
xchg
in
or
into
insb
cmp
arpl
dec
insl
adc
sbb
push
add
fcoml
orb
fwait
es
sub
jmp
push
xchg
and
pop
mov
sbbl
bound
or
les
pop
scas
imul
sbb
sub
loopne
loope
jb
jnp
adc
roll
inc
pop
cli
lea
lret
inc
jle
mov
test
je
lret
cmp
dec
xchg
addb
inc
jecxz
inc
jle
pusha
dec
adcl
push
repz
insl
dec
push
pop
cmc
pop
xchg
mov
jb
and
mov
mul
rcrb
push
mov
xchg
sub
jb
pop
leave
mov
test
lds
jbe
outsl
pop
es
mov
inc
push
test
je
mov
mov
filds
fdivs
aaa
out
cmp
adc
inc
ljmp
pop
aam
mov
lods
incl
xchg
es
jl
sub
pop
dec
push
or
inc
pushf
bound
cld
mov
fnstenv
scas
in
cli
lahf
inc
mov
xchg
xor
or
mov
in
push
mov
ja
cmp
clc
xchg
cmp
or
adc
inc
add
in
adc
ja
fdivr
jl
pop
dec
data16
test
cltd
xchg
jle
jle
fcmovu
mov
jno
or
mov
aad
pusha
cwtl
icebp
jp
mov
dec
mov
das
sarb
jo
iret
rcl
jno
lret
push
adc
pop
stos
cmp
arpl
jg
add
pop
ss
pop
adc
inc
pop
cmp
enter
call
sbb
sahf
rclb
ljmp
lret
outsl
in
int3
inc
jne
jae
ljmp
inc
sbb
jg
sub
add
insl
xchg
ljmp
jp
inc
pop
mov
pusha
es
cmp
movsb
or
adc
je
ja
and
xchg
rclb
ss
mov
mov
pop
roll
cwtl
sbb
aas
mov
jmp
fwait
cwtl
mov
ljmp
ds
sbb
jnp
jbe
mov
cmpsb
push
or
jmp
or
push
aas
and
loopne
mov
orl
inc
cmp
xor
adc
push
sarl
mov
xchg
mov
cmpsl
in
lds
loop
or
xor
gs
negl
out
enter
bound
in
push
and
mov
jae
or
lahf
push
mov
adc
ss
inc
pushf
or
sub
fldt
clc
jle
sub
push
arpl
data16
iret
dec
insl
testl
outsl
inc
mov
ja
push
adc
sti
pop
inc
inc
cmp
cmpsl
ret
mov
push
mov
adc
rcrl
cli
mov
fadds
pop
sbb
ja
mov
negl
xchg
push
push
fldenv
jns
add
sahf
in
jne
push
bound
movsb
push
push
push
push
inc
je
ret
shr
in
ret
jnp
lods
pushf
rol
mov
pusha
pop
rorb
lods
lods
daa
dec
add
fcompl
xchg
divl
sbb
mov
dec
lret
rorb
xchg
pop
fisubs
xchg
mov
lahf
movsb
jmp
xchg
xchg
mov
sti
cwtl
test
dec
js
inc
mov
jo
pop
stos
cwtl
xchg
and
sbb
dec
fsubl
push
lahf
push
stos
movb
mov
ficoms
or
adc
movsl
test
dec
sahf
jne
ficoml
sbb
sbb
out
test
mov
fld1
in
inc
sbb
loopne
mov
mov
jne
mov
ljmp
adc
outsl
ja
xchg
imul
mov
mov
mov
movsl
jbe
jg
repz
int3
in
xchg
cmc
sub
xlat
mov
mov
gs
rclb
clc
inc
inc
pusha
orl
divl
in
mov
jae
mov
xchg
outsb
stos
jle
in
ret
lea
pushl
jg
xchg
mul
fistpl
push
inc
outsl
repnz
jge
jnp
jo
sub
mov
adc
divl
mov
pop
stos
mov
insl
ficoml
sar
cmp
cmp
lret
push
cmc
jmp
inc
xchg
out
jecxz
sub
xor
xorb
ret
lahf
mov
xor
aad
into
lahf
xchg
sahf
popf
dec
mov
xchg
mov
jmp
jecxz
and
addr16
or
mov
and
xchg
push
mov
cltd
lea
ror
add
add
aam
jbe
popf
call
push
sbb
cmp
ficomps
mov
cmp
mov
outsb
movsb
sbbb
mov
daa
cmp
push
add
adc
inc
sub
sub
cltd
and
bound
call
add
in
imul
cmp
pop
mov
mov
out
push
xchg
fildl
leave
add
mov
imul
push
push
cld
cmpsb
adc
or
test
mov
xchg
xchg
shlb
in
jge
mov
adc
or
mov
ret
fwait
mov
adc
popf
mov
shl
js
adc
ror
lret
stc
mov
lods
daa
mov
jecxz
cmp
cmp
fbld
test
movsl
mov
shrb
mov
fadds
in
mov
mov
mov
mov
ror
adc
mov
dec
mov
xor
in
jg
test
xor
sbb
rorl
xor
xchg
jecxz
sbb
jnp
daa
call
shll
stos
sbb
pusha
sub
xor
pop
and
out
sub
push
add
lea
mov
jecxz
sbb
mov
mov
and
lods
cmp
sub
jo
push
mov
mov
cmpsl
rol
mov
fs
jbe,pt
or
push
popa
xchg
and
mov
mov
push
dec
fsubrl
add
ja
lock
xchg
add
test
flds
call
jg
std
jp
daa
mov
dec
andl
sub
into
stos
lods
rol
jb
mov
push
cmp
mov
mov
or
adc
sub
jns
lods
add
stos
imul
das
pop
push
mov
add
test
ret
mov
mov
sub
outsl
and
push
into
mov
pop
mov
ds
insl
push
fbstp
imul
aad
hlt
mov
test
sahf
mov
jmp
testb
cwtl
dec
cltd
loop
dec
cld
sub
loopne
add
cmp
lret
xor
call
ret
dec
and
and
pop
jp
lods
dec
mov
addb
movsb
jmp
in
mov
dec
mov
loop
xor
and
mov
test
scas
fmull
pop
xor
sti
jmp
cmpsb
sbb
xchg
pop
jbe
outsl
inc
je
sub
inc
jl
cmp
inc
pop
lods
outsl
ds
xchg
adc
mov
enter
mov
adc
aaa
fiaddl
pop
shrd
adc
iret
enter
add
pop
push
out
cmp
jl
mov
pop
fisubs
inc
push
mov
xorb
xchg
out
out
mov
cmp
fisubrl
pop
in
fbld
pop
arpl
xchg
aaa
mov
mov
fadds
popf
sbb
fs
xchg
rcrb
lahf
adc
jnp
sbb
shlb
xor
insl
loop
pop
push
xor
adc
push
mov
push
out
je
rcr
icebp
or
adc
sbb
out
es
pop
gs
fsubs
inc
mov
movsb
mov
clc
add
and
pop
in
lret
scas
xchg
inc
and
pop
stc
add
adc
cmpsl
dec
je
sbb
lods
fistl
and
fidivl
xchg
fs
das
popa
sbb
cmp
xchg
pusha
lret
xlat
cwtl
rcl
push
adcl
mov
mov
push
in
sbbb
flds
enter
jmp
pop
lahf
push
xor
xchg
jns
stos
cmp
add
jecxz
psubusw
addr16
jns,pn
lds
scas
or
roll
push
leave
imul
das
jl
mov
rcr
or
lahf
adc
subl
ret
fs
xchg
cltd
test
dec
dec
add
cs
dec
outsl
mov
mov
fisubrs
into
dec
pop
adc
sub
aas
sbbb
dec
pushf
mov
mov
pop
add
das
jle
xchg
mov
xor
test
add
pop
lock
pop
test
sub
lea
push
call
mov
cld
dec
pop
lods
shrl
push
add
sbb
sub
sar
adc
bound
nop
loope
sbbb
lret
mov
sub
and
insl
push
fistpl
popf
push
add
insl
mov
jno
sbb
ret
ljmp
cmp
ljmpw
loopne
push
dec
cmpsl
push
stos
test
mov
xor
movsb
xchg
aad
fildl
mov
adc
xchg
dec
test
rcrl
lock
jb
jne
outsl
adc
dec
fnstsw
addr16
ja
dec
outsb
and
mov
jle
xchg
out
push
lahf
adc
mov
fadds
push
sbb
pop
sub
je
je
cmp
xchg
cltd
inc
dec
pop
pusha
sbb
pop
mov
js
mov
and
lods
adc
dec
iret
and
xchg
mov
dec
or
mov
jno
rcll
sbb
cmp
mov
shl
and
sub
cmp
push
ss
or
or
repz
aad
xchg
xchg
lahf
mov
cmp
ror
xchg
testl
int
and
sub
xchg
fwait
push
cmp
jne
xchg
pop
xor
addr16
dec
int3
pop
sbb
test
adc
mov
adc
sub
out
and
jg
lods
inc
inc
jns
and
jno
les
inc
jb
mov
push
adc
arpl
xchg
push
mov
insl
mov
subb
pop
sbb
sub
push
xchg
icebp
stos
mov
jns
pandn
cmpsl
call
fadds
subl
leave
scas
fisttpl
dec
mov
ja
shl
lods
ds
inc
cmc
jg
xchg
lcall
pop
mov
dec
cmp
sub
pop
leave
lock
push
outsb
pop
pop
sub
xlat
sub
sbbl
sub
fwait
icebp
hlt
mov
push
aaa
rorb
sub
mov
frstor
inc
aas
xchg
cs
sti
jno
ret
cli
mov
testl
lcall
xlat
nop
mov
into
mov
and
test
dec
data16
jnp
jle
addr16
push
xchg
pop
nop
mov
daa
pop
jmp
jl
sub
lcall
popa
add
push
test
mov
rcll
jno
adc
ret
insb
ret
cmp
xlat
xchg
push
cmp
hlt
adc
mov
div
outsl
add
icebp
sub
inc
je
leave
xchg
lock
mov
mov
or
insb
and
jno
js
movl
inc
jp
push
loop
mov
or
mov
cld
inc
sub
rcrb
mov
in
xchg
pop
scas
pop
pop
rcll
or
fcoml
in
pusha
cmpsb
sub
jle
std
xorb
sbb
mov
test
mov
loope
xor
push
daa
pop
push
cmp
test
cmp
shr
test
cmp
mov
lret
clc
inc
inc
lea
adc
dec
cmp
jle
mov
cs
mov
enter
leave
scas
mov
push
cld
decl
xchg
fimuls
call
lock
insb
test
cmp
pop
push
aam
xchg
mov
sbb
out
mov
push
sub
and
test
sbb
pop
xor
jno
out
in
aaa
inc
push
add
test
fcmovb
sbb
push
jge
mov
arpl
dec
mov
mov
pop
cmp
testl
adc
out
inc
mov
sub
repnz
mov
lcall
subb
scas
daa
mov
inc
sbb
push
enter
in
jge
push
subb
adc
andl
and
outsl
dec
and
lahf
movzwl
jmp
jne
mov
fucom
or
xchg
cmpsb
mov
shlb
popf
repnz
dec
dec
lret
cmp
and
push
dec
inc
call
xchg
xor
test
xchg
jae
daa
adc
push
test
cmp
ja
aaa
adc
cmp
stc
xor
lods
clc
shr
add
test
ret
and
sahf
add
push
xor
aaa
popa
pop
and
aad
mov
xchg
jae
jmp
or
jge
jmp
sbb
or
hlt
dec
lahf
aaa
inc
dec
shl
adc
aas
es
fistpll
mov
xchg
push
loope
test
movsb
mov
sbb
js
je
popa
insb
pop
sbb
lahf
pop
adc
loopne
and
in
jl
inc
repnz
daa
mov
insb
pusha
xlat
cmc
or
dec
imul
lods
jae
xchg
insl
js
mov
mov
pusha
inc
adc
out
lods
imul
pop
stc
dec
dec
repnz
pop
mov
repz
xlat
xor
pop
andnps
inc
std
ficoml
mov
mov
pop
dec
repnz
jne
jne
jmp
pop
mov
push
push
outsl
clc
or
fwait
in
push
pop
dec
test
data16
lock
xchg
jle
js
push
jg
mov
out
or
cltd
sbb
lahf
push
cmp
mov
pop
mov
add
test
inc
pusha
les
cmp
clc
test
int3
mov
out
jp
loopne
push
push
lock
adc
popa
mov
inc
int
xor
xchg
xor
push
jb
jnp
cmc
pusha
popf
aad
je
inc
lds
lock
andl
int3
mov
pop
pop
sub
cmp
xchg
or
mov
inc
in
js
das
cmovp
loop
into
sub
xchg
mov
and
cwtl
sub
pop
mov
mov
sub
das
mov
scas
mov
mov
in
add
rcrl
inc
mov
jg
aad
shll
cmp
xor
adc
call
adcb
pop
pop
push
rolb
push
cli
push
dec
popf
add
ficompl
dec
sbb
jmp
sub
jo
outsl
pop
aaa
add
dec
dec
lret
stos
inc
movl
add
stc
stc
das
jns
jecxz
repnz
data16
pop
cld
jmp
dec
std
sahf
sub
lods
int
stos
inc
scas
adc
push
test
push
pusha
jl
repnz
or
es
lret
leave
imul
fwait
pop
cmp
cmpsb
mov
add
js
test
aaa
fiaddl
repnz
imull
gs
jg
ja
hlt
mov
pop
pusha
out
inc
dec
subb
push
cmpl
mov
inc
push
mov
ss
mov
loop
lock
add
adcl
cmp
sarl
inc
outsl
and
fnstcw
fwait
mov
fldenv
and
adcl
lret
movsl
fcoms
dec
xor
jl
sbb
push
push
movsb
insl
stos
mov
pop
pop
loopne
mov
vhaddps
pushl
mov
jl
pop
sbb
ss
push
ljmp
addr16
stc
mov
loop
push
outsb
repz
pushf
pushf
lret
jns
add
out
xchg
hlt
push
imul
std
and
pop
ror
dec
fbld
data16
inc
bound
push
jp
or
inc
cli
mull
loope
or
inc
insb
mov
cmp
inc
rorb
in
push
xlat
sub
nop
xchg
stos
sbb
pop
pushf
scas
dec
xchg
cwtl
mov
jp
sbb
mov
lcall
inc
clc
repz
jno
out
xchg
repz
and
mov
fdivp
outsl
sbb
lahf
jne
insl
cmpsl
iret
push
test
test
cmp
movl
ret
repz
jle
test
cmp
fdivrs
test
push
adc
ja
adc
push
aad
jo
test
push
sbb
sub
cs
dec
cmc
xchg
sbb
mov
xchg
sub
in
in
mov
scas
divb
mov
inc
in
icebp
cmp
jecxz
out
lahf
xlat
enter
adc
sbb
and
cmp
push
insl
xchg
inc
cmp
sbb
lods
inc
outsl
mov
pmullw
fimuls
push
loopne
xchg
and
pop
and
loope
loop
fldl
outsl
push
bound
cmp
add
cmp
xchg
mov
add
inc
out
jno
mov
aam
scas
stc
jl
xchg
xchg
movb
sahf
lock
push
lock
test
or
hlt
les
jae
inc
nop
ja
pushf
mov
xlat
add
mov
cmp
mov
adc
add
jmp
popf
incb
cwtl
mov
rdpmc
jle
push
jno
mov
sbbb
les
jmp
mov
or
inc
push
shl
ds
pop
rclb
mov
pop
sub
mov
xchg
jecxz
iret
out
test
test
jae
inc
cs
into
inc
lds
cmp
call
xor
andb
jne
mov
clc
cmpsl
mov
mov
bound
sbb
lock
jo
orl
dec
outsb
jmp
gs
outsl
inc
leave
jl
enter
dec
test
lret
mov
ljmp
addb
leave
xor
pusha
push
sbb
and
sbb
inc
inc
cmp
out
pop
pop
jge
pushf
inc
xchg
cmp
mov
xchg
je
out
jnp
or
mov
mov
in
imul
leave
out
jns
daa
mov
inc
cmp
xor
add
xchg
scas
sub
inc
mov
xor
jecxz
push
stos
rolb
xchg
adc
jno
cmp
inc
loopne
sbbl
xchg
insb
push
add
lock
mov
lds
xchg
and
aas
lods
mov
call
pop
ja
push
dec
cltd
push
out
mov
faddl
dec
stc
pop
icebp
pavgb
ret
mov
das
or
pushf
jecxz
xchg
fwait
mov
and
jl
loopne
adc
test
add
sbb
fsts
orl
inc
pushf
lock
aas
in
dec
inc
push
outsl
aad
and
jb
int
jle
mov
rcll
loopne
movsb
nop
mov
xchg
jl
mov
outsl
adc
loope
lahf
movsb
lret
pushf
pusha
jp
out
jbe
add
push
fmuls
jno
mov
test
ja
cli
dec
movb
push
lcall
pushf
mov
nop
dec
std
jae
fwait
sub
mov
test
in
in
movsb
jmp
inc
popa
jns
push
jbe
sub
or
aaa
cli
addb
addb
cmp
lds
pop
cmp
not
lock
sbb
push
jns
stos
xor
jbe
inc
test
mov
loopne
mov
dec
sti
rorb
repnz
das
repz
adc
out
mov
icebp
and
jo
call
bound
sarl
pop
stc
dec
cmp
decb
jp
rcl
imul
movb
loope
in
dec
sti
dec
std
lahf
enter
fucomi
bound
fisttps
sbb
pop
rol
cltd
stos
test
cmpsl
mov
mov
push
jecxz
add
data16
out
std
insl
jp
cmp
inc
movsl
mov
push
mull
mov
repz
inc
rorl
icebp
cmp
dec
mov
loope
adcl
xor
js
movsb
xor
xchg
mov
jae
lods
sbb
std
mov
lods
dec
cmp
jmp
lock
lds
out
push
mov
movsl
repnz
int3
js
iret
or
aad
je
jne
rcll
lret
jo
fbld
lcall
push
lds
sbb
in
pop
aad
mov
add
inc
or
rorb
movsb
cmp
dec
loopne
cltd
xchg
stos
pop
ret
pop
dec
push
xchg
jle
jp
and
cmpsl
cwtl
imul
pop
into
xor
cs
fcmovnb
inc
rol
imul
shlb
inc
aaa
cmc
xlat
lds
jmp
test
lds
rcll
je
mull
out
outsb
jns
xor
outsl
xor
repz
lods
xchg
into
cmpsl
test
cmc
iret
adc
idivl
movsl
popa
cmp
mov
mov
dec
sub
lods
inc
movsb
in
stos
pop
test
rcll
les
mov
lret
jecxz
andl
iret
rcrb
cltd
jbe
jmp
shll
std
test
test
sbb
inc
sbb
sbb
sbb
rcl
push
gs
sub
mov
dec
lret
xor
test
sbb
rorb
lret
fnstcw
mov
addb
ss
ss
add
lds
fstp
cs
add
mov
nop
mull
out
jnp
push
pop
setno
into
aad
js
mov
pop
call
or
mov
cmpsl
mov
inc
ret
mov
loopne
add
lock
xor
les
int3
cmp
jmp
jo
int3
test
jae
cmp
sbb
or
hlt
dec
cmp
jno
and
out
dec
mov
xor
mulb
inc
enter
mov
mov
inc
adc
inc
std
repz
jg
push
imul
std
jne
push
out
and
sbb
xor
sub
push
sbb
jae
out
add
out
je
stc
cwtl
pop
dec
test
add
adc
les
push
jle
dec
pop
xchg
adc
cmpsl
lea
loope
and
push
fsts
leave
xchg
inc
push
push
mov
and
sub
jg
lds
xchg
loop
popf
scas
shrl
bnd
jmp
sub
sub
dec
test
flds
into
stc
adc
pop
jmp
jae
push
xchg
imul
lahf
dec
jne
fwait
xchg
xor
xacquire
fdivrs
mov
clc
cmp
mov
aam
mov
sbb
out
gs
or
in
lea
jno
out
dec
ret
inc
push
cmpsl
dec
jne
sub
inc
lahf
mov
jnp
paddusb
aad
push
popa
mov
fsubl
aad
xchg
xor
and
cli
movsb
mov
lea
inc
sbb
and
mov
in
jg
aaa
lret
mov
xchg
mov
mov
mov
gs
pop
les
pop
sbb
lock
arpl
add
mov
sub
sub
hlt
add
mov
mov
or
sub
repnz
inc
push
jne
dec
xor
insb
xchg
jb
in
pushf
sub
inc
mov
fsubrl
daa
movsb
mov
fldcw
pop
jo
and
and
into
stos
inc
lock
test
bound
fwait
ss
mov
xchg
or
sti
imul
xlat
push
push
cmpsb
push
xchg
cmp
or
sub
insb
in
arpl
and
testb
out
pop
popf
sub
sub
sahf
repz
scas
lret
push
pushf
and
ja
mov
sub
cmp
and
pop
movsb
dec
mov
iret
scas
sbb
aam
mov
mov
outsl
mov
movb
out
mov
addr16
jae
pop
jb
shlb
adc
inc
mov
or
mov
mov
dec
push
mov
fcompl
xchg
xor
cmpsb
push
incb
mov
adc
out
xor
aaa
jp
mov
mov
mov
mov
test
sbb
and
fwait
adc
popf
cmc
inc
push
adc
loope
popa
xor
mov
push
cmp
sarl
iret
testl
ja
out
fmuls
pop
cmc
mov
pop
cmp
xor
and
lcall
cld
mov
enter
icebp
add
pusha
leave
lock
rcrb
cmpsl
push
ljmp
lahf
adc
cmpsl
adc
aam
jnp
cmp
xor
mov
mov
xchg
jge
test
aad
cmc
nop
adc
adc
loop
push
shll
std
out
sti
fwait
in
in
mov
cmp
imul
mov
inc
dec
ret
lods
idivl
xor
sbb
movsb
and
ja
cwtl
adc
mov
jbe
xchg
movntps
mov
push
or
sahf
and
xchg
sub
xchg
inc
sub
adc
cmp
mov
mov
in
push
mov
repnz
pop
pop
add
idiv
push
jecxz
xor
adc
test
push
add
dec
mov
js
xchg
test
jnp
int3
into
or
inc
ss
sbb
hlt
lret
je
repnz
sbb
mov
cmp
dec
mov
xchg
idiv
call
or
ret
sbb
push
xorb
in
fwait
mov
adc
and
jge
gs
out
add
xchg
cmp
lods
lds
aaa
lock
aaa
scas
rcrl
dec
pusha
jg
mov
xor
sbb
lods
pop
jmp
pop
jbe
leave
xchg
call
pop
xchg
subl
pop
pop
aam
pop
ret
jp
xchg
notb
cli
inc
xchg
cmp
stos
daa
push
mov
and
lea
mov
sbb
sahf
pushf
in
addr16
push
les
rolb
scas
iret
js
xchg
dec
or
jecxz
cltd
test
jns
out
shlb
pop
adc
jge
mov
push
popa
push
xchg
inc
dec
andl
push
rcr
dec
and
ds
lods
and
pop
dec
or
fdivl
push
js
xlat
out
leave
loop
clc
inc
push
jb
add
icebp
rcrb
sub
and
cmp
and
fcmovu
sbb
ljmp
inc
scas
loopne
scas
inc
sbb
into
cmpl
mov
aam
pop
lods
add
icebp
mov
mov
mov
dec
push
arpl
sbb
imul
and
popf
cmpsl
rorl
mov
jmp
push
ret
pusha
mov
dec
insb
or
or
xchg
scas
xchg
je
rclb
lods
scas
mov
fwait
scas
loopne
aaa
pop
stos
dec
mov
mov
mov
ret
repz
sub
dec
mov
or
das
dec
call
leave
cmp
inc
push
js
lock
jle
aaa
inc
fninit
add
int
mov
je
lods
gs
mov
jae
push
mov
mov
cmp
and
adc
out
dec
iret
cltd
push
dec
pop
in
mov
xchg
and
scas
inc
stos
push
cmp
in
out
test
mov
pop
lcall
loopne
mov
js
inc
jmp
mov
and
cmp
jmp
mov
mov
outsb
out
std
fwait
inc
xchg
sbb
rcll
ret
js
arpl
daa
ficoms
lods
dec
xlat
cmp
aad
and
addr16
xchg
fdivl
out
push
pop
jg
xchg
fld
repnz
movsl
adc
push
in
push
and
mov
mov
cwtl
cmp
push
fildll
popf
dec
or
lods
xor
out
sbb
mov
inc
addr16
push
movsb
sub
and
data16
adc
shr
in
lock
sub
lret
jnp
mov
int
dec
mov
popa
test
push
inc
add
push
imul
gs
and
cld
mov
jbe
cmc
mov
sbb
dec
add
xchg
mov
cmp
in
shlb
mov
addr16
and
in
push
call
out
jmp
dec
jb
insl
jp
xor
inc
addr16
mov
mov
sahf
add
js
jmp
pop
adc
aaa
stos
fmull
xchg
cld
mov
rorl
stos
sbb
sbb
add
add
clts
outsb
loop
and
inc
clc
mov
xchg
or
dec
aaa
cmp
dec
adc
test
dec
cmpsl
or
cmp
cmp
inc
imul
push
lcall
pop
test
mov
mov
cmc
or
fidivrs
push
sub
inc
push
int
shll
mov
imul
lods
fcoms
fnop
repnz
lea
ds
mov
cs
lret
ret
jecxz
fwait
xchg
ss
or
xor
mov
xchg
imul
xchg
test
inc
cmpl
mov
dec
dec
repz
jge
mov
mov
dec
or
cs
lock
divps
xor
popl
mov
adc
jno
into
mov
addr16
int3
in
in
jmp
inc
loope
add
push
mov
xchg
add
pop
jne
insb
enter
pop
sti
mov
xorb
or
mov
ret
arpl
jo
dec
test
pop
in
mov
dec
out
fyl2xp1
rcll
dec
mov
into
divl
push
fwait
mov
cltd
mov
sahf
pop
inc
mov
mov
scas
mov
jne
insb
mov
jo
sbb
mov
xlat
test
add
das
cmp
rolb
out
and
mov
mov
inc
lods
ds
loop
add
ret
fistpll
pop
xlat
xor
add
mov
jmp
cs
mov
sti
in
push
add
lods
and
leave
mov
pop
sub
push
pop
pop
repnz
hlt
rolb
xlat
jmp
lret
insl
dec
repz
or
xor
cld
mov
cmp
jle
sar
xchg
out
push
mov
cltd
inc
cmp
sub
xchg
in
pop
cmp
call
call
mov
rcrl
xor
sti
xor
xchg
mov
movsl
pop
into
notb
adc
pop
pop
mov
sub
cmp
jp
add
pop
mov
gs
pop
cmp
sbb
lcall
aam
lock
lret
inc
jmp
shlb
jle
adc
arpl
xor
mov
cmp
mov
mov
push
pop
xchg
or
mov
jmp
sub
mov
icebp
push
pop
cmp
aam
movsb
xchg
push
jp
cmp
in
fstl
int
out
imul
xchg
ja
int
inc
xlat
and
shr
sbb
sub
dec
mov
test
shlb
xchg
dec
jp
cld
mov
scas
mov
jbe
xchg
fildl
add
sbb
mov
inc
push
adc
xchg
push
je
test
push
push
or
xor
movsb
stc
inc
push
push
push
sti
sbb
adc
adc
xchg
mov
xor
subb
mov
imul
push
hlt
stc
rorb
jecxz
scas
adc
jecxz
add
nop
or
fs
jp
sub
jno
xor
cmp
vpcmpgtw
or
testb
add
mov
adc
jmp
stos
jo
in
sbbl
jb
fnstcw
jl
js
jne
push
aad
data16
jg
das
aaa
dec
adc
mov
xor
inc
xlat
pminub
cmp
xchg
in
pushf
or
mov
adc
pop
mov
mov
push
popa
fiadds
es
in
pushf
stos
push
popf
mov
dec
mov
or
int3
mov
push
mov
mov
mov
mov
mov
in
sbb
leave
popf
out
ljmp
cmpsl
cwtl
sbb
fs
call
outsl
pop
xor
cmp
mov
mov
push
add
mov
mov
push
mov
movb
pop
cmp
xchg
and
loopne
mov
call
ss
clc
rorb
jne
xchg
pop
and
int3
push
dec
adc
sahf
and
fidivl
sti
lea
std
and
aad
push
outsl
hlt
cmpsl
cli
int
or
aaa
cmc
cmp
shlb
push
mov
inc
mov
ficoml
add
fld
and
test
in
xchg
outsl
jl
pop
es
sbb
daa
sahf
mov
adc
lcall
ja
push
icebp
leave
adc
mov
mov
sbb
xchg
or
ja
sbb
xor
mov
cli
pop
mov
xor
fmuls
or
into
lcall
xchg
and
das
sarl
adc
subl
imul
aaa
movsl
enter
and
sub
mov
pop
push
jg
xchg
pop
aam
in
or
insl
loopne
movsl
mov
nop
cwtl
mov
loop
jmp
fs
decl
das
fildll
cmc
jp
jnp
std
pop
xchg
icebp
jmp
daa
cmp
inc
imul
add
mull
mov
scas
icebp
and
movsb
xchg
push
cwtl
lcall
cmpsl
es
stc
clc
cmp
aaa
adc
mov
mov
jmp
dec
sub
dec
mov
jle
dec
xchg
sub
jbe
icebp
popa
jae
les
mov
cmp
xchg
test
pop
test
jne
pop
sbb
mov
gs
hlt
adcb
sarb
dec
out
mov
add
add
cmpsb
dec
mov
adc
push
sti
imul
repnz
or
pop
xchg
pushl
bound
pushf
mov
inc
jmp
divl
lcall
out
push
jb
leave
fcomps
movsl
dec
push
test
fiadds
push
lret
adc
fildl
mov
outsl
xlat
pusha
dec
mov
ljmp
push
lods
sbb
rcll
add
cmp
fs
cltd
pusha
pop
pop
sbb
mov
rclb
adc
pop
gs
pop
xor
insb
and
shrb
lods
mov
add
js
jb
and
cwtl
jns
mov
shrb
dec
push
pop
lcall
int3
mov
or
push
mov
test
out
popf
inc
pop
addl
add
cmp
add
mov
and
dec
cmp
mov
push
push
pop
cmpsl
add
inc
or
stos
rolb
push
xchg
or
scas
call
mov
je
xchg
stc
outsb
cmc
inc
idivb
stc
leave
mov
push
adc
xor
adc
out
decb
test
pop
xchg
daa
cs
and
scas
cltd
mov
mov
or
xor
loope
mov
enter
pushf
mov
mov
testl
sbb
sti
adc
mov
push
push
xlat
inc
pmullw
inc
pop
les
loop
push
dec
pop
and
icebp
jmp
mov
fistpl
xchg
pop
cmp
sbb
js,pt
in
mov
in
or
sbb
sbb
push
sbb
ss
inc
fdivrp
lods
mov
pop
push
ret
xchg
jp
dec
pop
call
jg
sti
jle
fiadds
pop
fwait
sti
fdivrs
mov
mov
lds
inc
mov
xorb
mov
rcrb
lcall
push
add
pop
mov
push
or
pop
inc
mov
loope
nop
push
jb
daa
mov
mov
cmp
mov
cld
orb
addb
jne
jbe
xorb
add
mov
xchg
dec
popa
sti
cmp
push
cmp
ds
mov
or
xorb
popf
jp
arpl
sbb
ja
mov
cmp
aaa
inc
dec
orb
mov
cli
or
iret
lods
in
and
pop
xor
dec
lahf
clc
into
frstor
push
cmpsb
or
jle
dec
mov
aad
pop
xchg
imul
mov
addb
pusha
cmp
push
xchg
nop
lods
pushf
mov
mov
pop
jne
jmp
cmp
mov
push
and
or
ret
fstps
test
cmp
sub
or
push
cs
popf
popa
in
stos
cmp
outsb
mov
nop
push
pop
and
mov
mov
push
xlat
xchg
xchg
divl
out
cmp
call
iret
test
dec
test
sbb
push
and
pop
faddl
lock
popf
loopne
mov
or
inc
mov
push
adc
out
sbb
mov
mov
roll
out
adc
push
mov
mov
fnstcw
adc
mov
imul
mov
xchg
addb
pop
push
pop
scas
add
std
or
and
stos
or
inc
lock
sub
stos
jae
sub
lds
inc
js
push
pop
idiv
cwtl
notl
out
stos
flds
rcll
std
int
rcrl
shll
xchg
sbb
push
ja
stc
repnz
push
xor
add
test
shlb
xchg
in
ds
mov
movsl
add
dec
out
aaa
pop
repz
add
jp
pop
les
rcrb
sbb
es
inc
icebp
add
jmp
arpl
mov
and
and
pushf
push
jne
add
jl
cltd
mov
mov
into
movsl
pop
sahf
jecxz
jmp
dec
push
ffree
fldenv
scas
push
push
scas
pop
cmp
sbb
loopne
mov
fnstenv
cmp
cltd
jbe
les
mov
cmp
add
or
xchg
mov
pop
pop
out
inc
popa
sbb
mov
push
stc
pop
cs
add
mov
add
xor
std
lahf
xchg
pop
jmp
cmc
lcall
push
lea
repnz
mov
and
lods
jp
out
cmp
mov
out
mov
in
jno
popa
cmp
js
push
mov
inc
imul
insl
lds
lret
rorb
mov
hlt
repz
cmp
out
jge
call
xor
out
jns
icebp
lods
aad
dec
insl
imul
mov
pop
in
adc
sub
mov
out
out
sahf
adc
inc
mov
sti
inc
orb
popa
and
mov
pop
aaa
js
inc
and
jo
xchg
push
jns
pop
cltd
ljmp
sti
jmp
sti
jp
into
in
cli
push
repz
rcll
pop
pop
pop
and
movsl
jns
les
push
add
xchg
mov
aaa
adc
pop
push
xchg
int3
jl
add
mov
subb
jge
add
inc
test
jb
mov
je
data16
inc
jnp
or
sarl
xlat
xchg
jle
cmp
js
mov
mov
lret
pop
negl
and
mov
cmpsl
out
out
jo
pusha
or
sub
mov
pusha
pop
sub
fucom
jp
fstl
iret
or
mov
shr
lea
mov
push
mul
jo
jne
int
dec
pop
inc
or
lods
sub
pop
pop
cmp
int
jmpw
mov
movsl
cmc
shlb
cwtl
int
pop
scas
jmp
cmp
scas
mov
cmp
and
icebp
cmp
lock
fs
popf
pop
in
mov
inc
loope
xchg
push
pop
negl
adc
icebp
push
out
xor
mov
ja
jo
push
adc
and
jle
imul
add
pushf
clc
shll
adc
loopne
ja
rorl
jbe
fwait
fs
jl
mov
fldenv
and
loopne
repnz
xor
and
fsubl
fildll
push
push
push
pop
xchg
fnstcw
mulps
mov
icebp
jl
add
and
les
imul
imul
fcomps
push
xchg
xor
cmp
dec
sub
xor
aas
xchg
pop
das
clc
sub
arpl
push
dec
xor
fwait
int3
cmp
lds
popl
jg
sbb
leave
xchg
stos
mov
ficompl
adc
jno
xchg
push
jb
imul
pushf
mov
in
xchg
and
xor
inc
ljmp
lahf
lret
xchg
push
mov
not
jno
mov
and
loope
add
icebp
dec
add
mov
addb
jno
pop
sub
loop
sub
testl
mov
jns
pop
lret
in
fsubr
std
or
iret
push
adcl
sbb
test
and
fsubr
xchg
xor
testb
test
stc
jne
int3
pop
jg
jmp
insl
leave
or
jg
in
ss
out
jns
sbb
push
adc
insb
xchg
or
pop
cltd
adc
pop
push
xchg
in
cmp
mov
sar
lods
or
sbb
xlat
das
loope
out
sbb
pop
mov
or
cmp
addr16
pop
push
repz
or
push
lcall
pop
clc
add
sbb
pop
insb
cwtl
dec
pop
mulb
mov
enter
rcll
cmp
or
movb
dec
enter
mov
add
xor
imul
add
push
test
adc
decb
cmpsl
popa
or
stos
out
xchg
sbb
lret
out
inc
add
mov
insl
jnp
xor
mov
pop
popf
cmc
test
inc
jl
int3
and
adc
fwait
addr16
mov
sahf
popa
adc
mov
add
lock
ficoms
int3
dec
mov
push
ds
or
subl
lahf
leave
cmpsb
iret
loop
mov
mov
or
aad
or
shlb
in
out
mov
out
das
jae
push
movsl
mov
iret
andl
mov
cmp
pop
jb
and
add
stos
sahf
pop
loopne
pop
sbb
pop
bound
sub
cltd
subl
pop
andb
cmp
out
xor
or
call
pop
fisubl
xchg
fmul
xor
xchg
iret
push
filds
inc
dec
ficoms
jle
std
jne
and
add
xchg
sbb
hlt
mov
push
test
sub
out
cltd
mov
fwait
insb
xlat
leave
cmp
xor
cmp
loopne
lahf
lods
push
push
fwait
dec
pop
popa
cmc
push
push
ljmp
int
jb
or
jno
in
xchg
cmc
mov
pusha
pushf
xor
push
out
mov
dec
cmc
cmp
mov
xor
or
ja
das
jl
testb
js
sbb
negl
int
mov
call
cmp
mov
rcrl
insl
sub
jl
mov
mov
and
outsb
pop
add
pop
rolb
jg
xor
out
hlt
lret
call
pop
xor
pushf
cwtl
jo
out
dec
test
sbb
enter
cld
icebp
shlb
repz
pop
lret
pushf
fwait
outsb
mov
push
lods
mov
subb
cmp
movb
mov
lds
xor
sub
add
jp
mov
fucomp
cwtl
xor
daa
scas
cltd
aas
lds
dec
pop
lock
xor
iret
inc
lock
xor
xor
xor
xor
insb
lea
fimuls
repnz
xchg
sbb
xchg
push
fwait
or
repz
sbb
test
pusha
std
nop
sahf
push
lds
rcrl
addb
xchg
loopne
imul
loope
test
cmpsl
nopl
mov
aas
sub
mov
lds
push
fucomip
jnp
mov
mov
mov
leave
and
xor
idivl
cmp
sbb
xor
lahf
mov
iret
lds
out
ret
cmp
pop
cltd
xor
xlat
stos
ret
mov
lods
jle
inc
movsl
mov
or
stos
dec
lcall
pop
mov
rclb
jecxz
scas
ss
fdiv
test
decb
fstpt
add
jmp
jecxz
and
push
jecxz
pusha
xor
mov
xchg
out
pop
push
or
inc
repz
in
stos
and
mov
je
fmulp
or
stos
push
mov
cmp
xchg
push
inc
sub
pop
push
lret
jne
pop
popf
out
xlat
inc
bnd
out
cmpsb
call
jle
pop
pusha
arpl
leave
icebp
xchg
sbb
cmp
adc
setbe
cli
stos
aam
and
xor
sahf
int3
pop
andb
jmp
iret
dec
adc
stos
xchg
and
or
movb
push
inc
in
test
add
push
jecxz
or
and
inc
movsb
push
arpl
mov
filds
ret
outsl
xchg
aam
mov
lcall
push
sbb
pop
mov
jnp
lret
insl
dec
jecxz
fsubr
mov
aam
loopne
mov
jno
int
cwtl
pusha
adc
aaa
sti
lods
imul
mov
mov
cmpsb
or
cmpsl
push
push
cld
sbb
inc
cmpsb
or
inc
mov
pushf
jle
lds
push
loope
push
dec
outsb
fxch
insl
adc
cmp
cld
sub
xor
sub
aas
or
fcmove
xor
mov
pop
add
jo
mov
mov
aam
cmpsb
xchg
push
jecxz
and
xchg
fsts
iret
into
cmp
lock
xchg
les
mov
mov
pusha
xor
or
lock
jmp
mov
jmp
xlat
jmp
inc
xor
add
xchg
push
mov
inc
pop
inc
jge
sbb
clc
jge
sti
cmp
je
or
and
push
je
push
out
lds
fildl
rorl
lret
mov
xor
rcrl
pop
test
stos
mov
hlt
mov
repz
cmp
mov
hlt
outsb
int
dec
sbbb
rorl
ds
out
push
mov
xchg
pop
jne
test
mov
mov
movsl
es
ret
and
xchg
test
in
mov
add
jmp
aaa
jbe
out
inc
addr16
iret
pop
xchg
jb
imul
jo
rorb
inc
mov
xor
loopne
aam
inc
jmp
fnstsw
adc
add
shlb
mov
scas
jl
sti
jl
jp
cmc
jnp
shlb
shlb
mov
push
scas
adc
inc
fs
jecxz
jp
pop
pop
cmp
xchg
mov
push
je
outsl
inc
pushf
sbb
mov
mov
cmp
push
sti
push
cld
inc
add
and
addl
test
push
add
pop
movb
push
sbb
mov
push
push
xor
mov
enter
mov
fnstsw
mov
sub
cld
add
lds
push
pop
andl
mov
add
sub
dec
stos
add
test
ljmp
mov
dec
xor
dec
mov
sbbl
mov
jnp
mov
add
pop
xchg
fists
add
dec
call
inc
jne
iret
sbb
jb
sub
ss
data16
or
jnp
test
dec
lcall
xchg
das
roll
js
fsubr
imul
pusha
nop
jl
pushf
call
into
cmp
push
pop
mov
pusha
xchg
imul
pop
xchg
test
xchg
scas
out
xlat
mov
xor
sbb
in
sub
sbbb
fwait
js
je
pusha
aaa
xlat
adc
fadds
cld
insl
loopne
sub
mov
cmpsb
pushf
cmp
mov
dec
loopne
or
hlt
fbstp
cld
mov
movsl
mov
lods
inc
call
xchg
jns
pop
sbb
adc
xchg
inc
fdivl
icebp
jb
push
jnp
add
std
push
nop
pop
cld
mov
aam
in
fidivrl
xor
cmp
xchg
xchg
sub
xchg
mov
das
pop
imul
dec
mov
xor
or
push
out
pop
xlat
inc
push
xor
cli
lret
cmpsb
xchg
test
xchg
jl
mov
push
test
dec
jno
sub
xor
xlat
dec
dec
sbb
mov
mov
jo
add
dec
cwtl
sbb
jnp
mov
shrl
pop
adc
push
push
add
push
lds
xchg
aad
sub
jbe
inc
loope
mov
dec
notb
imul
rol
jne
enter
dec
jecxz
sahf
and
lret
daa
bnd
lock
sub
cmp
arpl
int
fiaddl
adc
insl
test
sbb
pop
and
pop
lahf
push
mov
popa
push
cmp
mov
andb
rsm
das
std
test
jecxz
inc
mov
sbb
mov
push
mov
lret
imul
arpl
scas
cmp
push
imul
outsb
fadds
jbe
pop
dec
or
add
incl
movsb
es
lahf
inc
into
sub
gs
lcall
in
scas
sub
repz
jns
lds
movsl
lock
dec
sub
push
in
add
dec
popa
std
xor
ds
pop
shrb
sar
fildl
insb
jge
hlt
mov
gs
cmp
out
sub
add
mov
inc
enterw
int
in
addr16
leave
push
xchg
mov
xchg
add
pop
pushf
leave
movsb
inc
jno
je
cli
dec
push
icebp
enter
xchg
ds
and
sbb
fidivrl
adc
add
ds
mov
cmpsl
sbb
push
mov
mov
mov
mulb
andb
aas
xor
add
lock
push
ds
negb
xchg
icebp
add
mov
pushf
fwait
scas
ljmp
addr16
hlt
xchg
insl
cld
es
test
pop
jo
dec
cmp
cmp
dec
push
add
outsl
xchg
cmpb
pop
xchg
mov
cmp
or
mov
fcmovu
fdivrs
idivb
divl
pop
stos
stc
mov
pop
xlat
jb
inc
xor
shlb
cwtl
sbb
iret
cs
lds
cmp
mov
cwtl
mov
rorl
jmp
jl
lret
cmp
xor
mov
sahf
pop
std
popf
fs
xchg
dec
sbb
mov
fstl
test
push
lods
das
cmp
subl
mov
xchg
xchg
inc
adc
dec
mov
es
mov
pushf
int3
and
gs
movsl
add
pusha
sbb
cltd
shrl
adc
sbb
inc
test
mov
pop
mov
ret
add
mov
add
xchg
and
xchg
daa
cmp
xchg
mov
sub
jle
pusha
call
sbb
out
js
lea
cmp
fsubr
add
jg
add
int
mov
jno
push
add
add
dec
and
nop
cmp
mov
pop
ret
call
pop
push
jmp
mov
nop
test
mulb
in
mov
pop
push
mov
sbb
fadds
push
out
inc
pop
sub
cmc
adc
mov
sbb
mull
into
dec
xor
leave
xorb
ja
sub
jmp
add
scas
pop
xor
filds
push
cmpsl
imul
or
push
dec
push
sbbb
pop
mov
or
ss
push
sub
pop
movsb
enter
stos
add
fsubrs
cld
jge
sbb
mov
jmp
add
and
or
stc
jbe
sti
sbb
and
adc
add
mov
out
stc
stos
pop
xchg
fwait
das
and
std
fistl
pop
inc
or
mov
popa
or
mov
jae
repz
js
dec
sub
int3
dec
cmpsl
inc
mov
into
roll
pop
jl
ljmp
aas
stos
enter
sahf
mov
fildl
dec
out
shll
inc
xchg
test
sub
int
sahf
adc
cmpb
cmp
fstpl
cltd
iret
cmc
push
xor
faddl
push
inc
inc
cmp
adc
mov
jecxz
sbb
push
inc
in
test
lods
pop
sub
test
inc
xor
xor
mov
adc
repnz
ds
xchg
rcll
fnstcw
gs
jmp
out
imul
je
icebp
mov
mov
sbb
sub
psubw
xor
addr16
or
insb
fcmovnb
sahf
rorl
cmp
ljmp
mov
imul
xor
push
gs
adc
xor
lahf
mov
add
int
faddl
pop
jge
xchg
enter
and
pop
jmp
scas
rclb
mov
jp
cmp
insb
jnp
aam
dec
jo
ss
jg
mov
int3
pop
sub
fistpl
cli
sbb
mov
xchg
jnp
ret
pushf
sub
ret
push
icebp
xchg
mov
mov
scas
pop
cmp
jle
sarl
mov
icebp
loop
repz
out
cmp
fstp
jge
sub
in
jb
hlt
in
sub
mov
or
sbb
lcall
jg
and
scas
into
jae
sbb
ds
cmc
push
xlat
fidivl
fnstsw
fisubs
sub
stc
push
out
int
push
outsb
cmp
cmp
push
push
add
push
cmp
sub
mov
lds
inc
clc
jecxz
das
rcrl
ljmp
imul
cmpsb
cmc
mov
fstps
in
ret
lret
and
cmp
movsl
sar
xor
mov
nop
jnp
jbe
jge
mov
nop
xchg
xchg
pop
or
shlb
mov
inc
clc
movsl
xor
mov
mov
or
orl
test
rcr
cli
rclb
pusha
mov
mov
nop
xchg
mov
test
test
je
xor
inc
lds
aam
jbe
stos
push
jno
cld
rorl
and
or
pop
mov
mov
jge
jmp
outsl
add
lcall
and
adc
call
dec
in
inc
popf
pop
jmp
xchg
lods
jg
repz
dec
test
or
and
xchg
add
push
movsl
mov
clc
jne
jb
inc
push
scas
cli
inc
stos
outsb
stc
dec
ljmp
mov
test
xor
push
and
sub
pop
sub
inc
scas
jno
dec
xor
jmp
flds
out
stos
gs
or
fwait
shll
rcl
movb
xlat
sbb
es
jne
jne
and
inc
fwait
popa
jl,pt
jecxz
xchg
fmull
or
sub
mov
or
outsb
fs
jne
pop
jnp
incl
push
mov
lods
or
push
sbb
adc
push
or
jecxz
fnsave
aaa
jmp
aad
or
cli
fildl
ret
mov
or
icebp
push
sahf
jl
out
add
out
fwait
jne
dec
sbb
pop
sbb
cmc
push
push
outsb
adc
sbb
xor
jp
dec
test
jb
mov
movsl
testl
mov
xchg
jo
or
int3
mov
daa
loopne
dec
aam
xlat
ret
int3
adc
push
xchg
sti
addl
jecxz
jg
mov
add
jmp
mov
mov
push
adc
jo
xchg
das
repnz
lea
fisubrl
addl
sbb
stos
dec
pop
inc
mov
sbb
sub
les
int
jo
xchg
inc
aaa
mov
mov
lcall
in
les
in
inc
or
mov
mov
shlb
in
sbb
fpatan
dec
jnp
pop
sbb
dec
pop
stos
scas
icebp
data16
add
dec
int
inc
aas
std
add
out
clc
sbb
sahf
sub
jno
negb
jns
ja
lods
shl
lret
push
leave
pusha
loopne
jae
cmpsb
mov
mov
jl
lret
mov
xor
cmp
mov
xchg
mov
loop
and
movsb
add
in
movsl
pop
mov
hlt
in
mov
movsl
inc
dec
shl
ret
push
cltd
lods
mov
arpl
mov
sbb
andb
dec
aam
push
adc
aas
push
fs
ret
scas
pop
aad
js
and
stos
outsl
and
mov
js
push
xor
fildl
lea
fwait
mov
xor
push
stos
scas
or
cli
arpl
adc
lret
test
decl
sub
and
pusha
les
pop
sbb
push
pop
lret
out
mov
js
addr16
sahf
test
movsl
dec
mov
inc
cli
xor
jnp
inc
sbb
adc
mov
push
fmuls
jg
inc
je
push
push
ret
push
and
mov
xor
sub
mov
or
xor
xor
data16
ret
push
inc
pop
cmp
out
add
xchg
adc
xlat
cld
ja
push
ss
dec
icebp
aad
inc
mov
jae
scas
mov
push
out
imul
sbb
add
mov
inc
imul
xchg
jbe
or
or
jl
push
and
test
or
push
dec
xor
or
aaa
sysenter
movaps
test
icebp
mov
jecxz
sti
pusha
aaa
pop
adcb
xor
loopne
or
xchg
add
lcall
lea
pop
roll
fnstenv
test
mov
sbb
cwtl
js
mov
pop
divb
test
dec
cmp
pop
adc
test
scas
pop
scas
outsl
fldenv
mulb
roll
jo
jbe
sbbl
xor
xchg
rcll
es
jp
mov
push
fsubrs
xor
xor
bound
inc
imul
cwtl
stos
sti
jecxz
push
iret
jne
jg
test
inc
cmc
xor
push
jnp
nop
lret
pop
mov
fwait
adc
scas
leave
int3
sar
jnp
fsub
cmp
popa
mov
jne
jnp
ficoms
sti
pop
xchg
ljmp
arpl
xor
jns
mov
fs
jge
sub
ret
jl
cmp
popa
idivl
jmp
mov
mov
cmp
insl
mov
mov
test
xchg
ljmp
pop
inc
into
pop
xor
addr16
xchg
dec
jne
popf
jns
push
mov
out
fs
shll
bnd
incb
xchg
shl
dec
insb
dec
dec
fwait
adc
dec
iret
adc
loop
pop
sub
push
add
rol
jmp
mov
mov
pushf
and
imul
idivl
mov
ja
js
cmp
jl
lcall
xchg
sub
jmp
jnp
into
pop
dec
ljmp
in
jbe
xchg
cmp
jo
clc
test
fistl
je
scas
jno
sbb
jl
repz
rorb
mov
stc
std
mov
outsl
lea
xor
shll
test
lret
mov
cmp
popa
insl
cli
jg
jb
fldl
mov
adc
cmp
pushf
xor
and
fstpl
cmp
cmpsb
mov
rclb
test
rorl
xor
mov
icebp
add
pusha
clc
jo
pop
fwait
lcall
adc
adc
jle
push
nop
mov
fimull
xchg
ljmp
clc
bound
leave
ljmp
push
test
cli
sbb
adc
jae
sarb
inc
sbb
add
not
fxch
sub
and
pop
xchg
jo
mov
les
in
sti
pop
xchg
push
adc
cmp
push
push
jg
xchg
add
sub
ret
push
bound
sub
pop
push
andb
xor
dec
pusha
clc
into
or
push
inc
repnz
pop
mov
cmp
subb
and
popf
js
out
shrl
sbb
push
aaa
je
cmp
jl
pop
call
ret
dec
pop
pop
lahf
xor
repz
mov
xchg
fistl
int3
xchg
pushf
les
insb
jnp
enter
adc
mov
lods
xor
or
shll
inc
lock
mov
mov
icebp
xchg
out
push
jnp
xchg
lret
xlat
lds
push
cmpsl
test
mov
rcll
ror
out
pop
test
xor
arpl
aad
add
cmovle
mov
pop
mov
jns
inc
test
add
sti
mov
inc
jnp
cmp
and
cld
repz
lods
sub
popa
xchg
xchg
bound
jne
mov
xchg
sbb
xor
jbe
mov
add
sbb
xor
xchg
jg
and
xchg
cmp
jl
notl
dec
inc
mov
or
cmpsl
cmp
pop
xor
dec
cmp
sub
jp
adc
jae
add
imul
or
into
pop
cli
imul
push
cli
jnp
pop
repz
lock
cmpl
fidivl
icebp
daa
add
mov
xchg
mov
call
or
mov
loopne
jbe
aam
mov
sub
pop
dec
sbb
cmp
xchg
in
inc
cmpl
shll
mov
xor
xchg
orl
pop
xchg
or
sub
push
xor
or
sbb
inc
fidivrs
dec
xchg
and
pop
shll
fdivs
lcall
cmp
sbbb
cmc
mov
mov
lods
int3
add
lea
xor
sub
fdivrl
cmp
xchg
int
test
mov
mov
cli
movsb
mov
lods
aaa
xchg
test
inc
enter
mov
imul
mov
xor
out
cmpsb
pushf
jns
sub
mov
push
mov
fs
sub
jno
sub
repnz
aad
pop
jbe
ja
jl
and
push
idivb
in
jmp
dec
adcb
jo
adc
insb
push
dec
fcomps
pusha
xor
mov
les
pop
push
aaa
mov
mov
shr
ret
mov
dec
fs
ret
sahf
into
lods
into
inc
pop
lds
push
push
inc
call
imul
test
mov
pop
fs
push
incl
mov
add
add
cmpsb
push
sub
mov
cli
fstpt
movsb
add
cmpsb
add
add
gs
mov
out
lret
mov
mov
ds
ror
xor
repnz
pop
mov
push
inc
fcoml
xor
fs
in
ficomps
cs
mov
mov
out
xchg
jge
loope
adc
call
xchg
sti
pop
test
shl
cmpsb
fidivl
in
aam
cs
fdivrs
les
or
xlat
sbb
test
xchg
insl
push
adc
mov
inc
outsb
or
fcmovb
dec
inc
xchg
push
xor
inc
pop
stos
in
xchg
pop
pop
cmpsl
inc
sbb
sub
lcall
and
stos
add
mov
dec
push
shl
pop
inc
lds
fs
loop
lret
xor
cltd
adc
sti
popf
dec
push
xlat
testb
cltd
into
pop
inc
rep
cld
sub
push
popf
push
mov
mov
outsl
cmc
lds
push
imul
aaa
inc
jo
test
inc
scas
mov
adc
ss
or
jge
or
jecxz
loop,pn
loopne
hlt
mov
out
mov
push
or
les
push
cmp
shr
cli
or
mov
jns
xor
adc
sbbl
decb
cmpsl
and
fbld
shl
jbe
inc
add
popa
int3
pusha
fisttpl
and
leave
imul
or
jno
xchg
jb
cmpsb
jl
js
cmp
dec
push
sbb
jle
xor
fisttps
rorb
cmp
in
add
outsb
jg
xchg
sub
aam
out
xor
stos
mov
test
pop
test
out
nop
inc
mov
int
cmp
xchg
push
scas
fstps
push
jo
inc
popa
cmpsb
adc
dec
insb
aaa
cmp
clc
push
jle
cli
shl
clc
jl
out
jo
imul
sbb
push
push
icebp
mov
and
or
imul
shr
lock
jb
inc
inc
push
shrl
jl
xorb
sbb
js
xchg
push
mov
mov
xchg
push
adc
minps
shlb
iret
fs
sub
ljmp
push
roll
xor
fcos
jp
jnp
arpl
mov
insb
cmc
jg
dec
stos
and
pop
es
les
push
stc
xlat
inc
lods
push
lret
inc
sbb
push
inc
pop
ficoms
iret
pop
push
in
clc
mov
fcompl
adc
adc
add
push
xor
lcall
mov
rolb
loopne
sbb
lcall
out
jb
mov
mov
sbb
pop
pop
fcmovnb
cmp
xor
mov
jl
out
arpl
sarb
negb
es
sahf
add
popf
push
fstps
clc
cs
pop
inc
js
inc
push
dec
push
dec
add
add
sub
loop
push
xchg
loopne
fdivl
pusha
jecxz
test
sub
and
add
dec
xchg
sarl
adc
aam
shlb
mov
call
sub
mov
stc
cmpsl
shll
push
shrb
cwtl
icebp
xor
jg
jg
pop
push
mov
fildl
repnz
test
sub
mov
fcmovnbe
push
out
mov
mov
mov
jae
jecxz
pop
loop
dec
mov
jae
adc
pop
jno
add
jae
fdiv
jg
push
subb
sub
or
or
dec
inc
and
es
stc
mov
jns
cmpsl
mov
in
mov
pop
aas
icebp
hlt
sub
cmp
stos
ret
int3
test
outsb
enter
cmp
pop
push
cli
mov
lea
aam
in
cmp
fidivs
jne
add
add
add
cld
pop
xchg
sbb
mov
xchg
jns
xchg
sbb
mov
xchg
cmp
add
xchg
jmp
je
push
cwtl
add
rolb
add
ds
mov
ja
cmpb
cmpl
mull
movsb
insb
inc
jbe
pop
inc
sbb
mov
sbb
rcrb
aaa
out
je
pop
clc
cmp
dec
push
pop
add
mov
shll
sti
loope
insl
jo
and
test
sbb
add
sbb
rcll
nop
std
jle
stos
cmp
je
pop
jno
cmc
out
rcl
mov
or
ljmp
sbb
mov
push
cmpsb
add
or
or
or
test
inc
pop
into
adc
cmp
pushf
or
popf
adc
mov
inc
cmp
cmp
push
ds
sub
pop
xchg
stc
sub
push
aam
pop
scas
xor
jmp
push
lret
dec
mov
sbb
inc
xor
and
jb
sub
xchg
int
bound
xchg
lret
stos
dec
xchg
pop
push
es
xorb
std
cli
push
in
test
fldenv
or
pusha
repz
cmpsl
das
icebp
popf
inc
repnz
inc
mov
mov
das
fidivrs
jp
scas
movsb
insl
into
fisttpll
pop
mov
nop
push
inc
push
and
repnz
lcall
sbb
pop
popa
clc
adc
scas
mov
inc
jle
adc
insl
jge
cltd
addb
and
and
leave
cs
cmpsb
push
adc
cwtl
sbb
sub
cmp
adc
mov
lea
insl
xor
jle
cwtl
adc
pop
xchg
and
push
in
and
stos
mov
push
and
fsubl
or
outsb
mov
daa
daa
adc
dec
push
test
or
sub
data16
jl
cld
insl
daa
jbe
rolb
push
cmpsl
add
mov
mov
push
ja
inc
pop
dec
movsl
in
pop
add
insl
stos
pop
or
xor
cwtl
inc
sbb
add
mov
lret
mov
test
ljmp
mov
insb
arpl
loopne
insl
dec
lea
mov
sbb
negb
aad
insl
sub
add
rorb
cs
sbb
and
jo
cmp
lods
inc
loope
lahf
mov
dec
or
xchg
or
xor
inc
dec
mov
xchg
push
fcmovb
insl
jno
jge
sub
or
mov
dec
xchg
mov
ss
and
jno
mov
int3
std
orb
inc
and
arpl
or
push
push
jnp
mov
jae
inc
push
xor
stc
ljmp
shrl
sub
mov
fmul
or
mov
aas
ror
dec
push
xorl
movsl
cmp
lcall
enter
push
test
jl
push
stos
mov
mov
outsl
mov
lea
rol
decb
sti
gs
xchg
leave
aas
or
push
push
push
pop
and
sahf
mov
push
in
push
lcall
negb
cld
mov
add
cs
inc
jne
jnp
xchg
jb
daa
dec
clc
adc
popf
out
jbe
shll
popf
xchg
dec
xor
sub
inc
out
ja
jecxz
sarl
lods
int
pop
icebp
xor
jg
xchg
test
jno
and
std
jge
lods
mov
cmp
push
cmc
pop
and
jge
subl
enter
mov
xor
cli
sbb
rcl
lret
jl
sarb
pop
inc
mov
and
sbb
es
test
jge
dec
repnz
cmp
sahf
or
outsl
vpunpckhdq
mov
in
ss
mov
push
sub
adc
and
xchg
and
xchg
pop
inc
mov
push
pop
clc
and
bound
sub
pop
cltd
push
incb
adc
lea
pop
cmpsl
icebp
add
xchg
sbb
out
pushf
lods
popa
xorb
loopne
xchg
mov
loop
mov
push
push
or
les
jae
mov
popa
or
xchg
in
fmulp
adc
xor
fisttpl
sbb
cmp
xchg
out
outsl
mov
mov
cmp
cmp
cmp
add
mov
lcall
push
lds
push
sbb
jp
loopne
jge
lahf
pop
clc
inc
enter
sbb
jbe
loope
mov
enter
jmp
mov
pop
xchg
pop
adc
push
ja
test
mov
int
mov
paddb
add
push
iret
mov
test
jae
adcb
adc
and
sbb
jnp
or
decl
test
push
mov
mov
xchg
mov
scas
fmuls
adc
inc
cmp
xchg
ss
dec
pop
shl
sbb
fsubs
out
shlb
dec
xchg
punpckhbw
jg
xor
jmp
fbstp
gs
pop
out
lods
addr16
pop
scas
push
popf
xchg
ret
nop
imul
insl
push
sbb
sub
es
xorl
call
fsubr
push
sahf
inc
dec
mov
xchg
icebp
test
inc
xchg
mov
jb
push
cwtl
rcll
aad
int3
imul
sbb
hlt
inc
leave
or
mov
sub
mov
aaa
dec
into
xorb
orl
inc
sbb
xorb
and
cmp
sub
and
sub
popa
mov
cld
xor
sub
jle
lret
dec
iret
imul
pop
xchg
hlt
jbe
daa
insb
push
and
outsb
and
and
push
rcrb
mov
cld
push
ja
lahf
jnp
lea
lret
cmp
inc
xlat
mov
enter
pop
and
add
aas
add
cmpsl
and
lods
jp
jne
cmp
add
sub
jmp
icebp
ret
testb
in
or
or
cmp
mov
cs
das
mul
adc
hlt
or
pop
testb
or
mov
pop
xor
es
lods
or
or
and
stos
out
xchg
popa
mov
xlat
and
fisttpl
xorb
push
mov
lret
fildl
push
dec
and
inc
movsl
dec
mov
aaa
test
mov
ljmp
movsl
pop
inc
shr
flds
cltd
sbb
orl
fimuls
or
pop
rol
mov
jo
push
lret
insl
add
bound
jge
xchg
fwait
and
cwtl
int
lret
fnsave
cmpsb
pop
mov
outsl
ror
leave
lea
outsl
adcl
push
paddw
into
mov
jecxz
into
pop
fisubrl
clc
stc
jbe
xlat
data16
nop
mov
jo
fsts
andb
xchg
push
leave
inc
jbe
cmp
adc
movsb
xchg
sti
imul
mov
mov
inc
xor
mov
mov
sbb
dec
jg
lods
pusha
aas
jbe
sub
and
pushf
popl
test
adc
mov
fst
cmp
sti
mov
xor
push
out
arpl
adc
xor
popa
cmc
lds
ja
lcall
sbb
pop
loop
mov
stos
mov
insb
movsbl
call
xchg
mov
fwait
and
and
movsl
test
jecxz
mov
sbb
jbe
xchg
ja
adc
jmp
mov
lock
jns
jb
je
mov
adc
fnsave
mov
test
stc
mov
lret
aaa
mov
mov
outsb
lcall
lcall
push
addr16
test
fs
mov
les
cmc
or
push
es
adc
jl
lds
inc
cmp
and
and
pusha
add
add
outsl
scas
adc
jb
sti
data16
enter
loope
lahf
add
jno
fcoml
cmp
adc
sbb
jb
pop
mov
push
lret
ret
ds
cwtl
lods
adc
loope
sbb
pop
sbb
dec
ja
inc
ljmp
cltd
bound
inc
das
in
xor
jae
cmc
int
iret
xchg
mov
imul
mov
scas
aam
or
pusha
mov
aam
and
out
mov
arpl
int
aam
push
movsb
pushf
hlt
fsts
fists
mov
in
out
enter
popf
jl
out
imul
xchg
test
arpl
sub
push
insl
aad
add
xchg
movsl
or
loop
sub
sbb
leave
ja
push
cmp
in
add
test
jnp
cs
ja
test
icebp
das
mov
mov
push
negl
mov
sbb
adc
jno
xor
outsl
movsb
ret
sbb
inc
cld
and
sub
or
cmpxchg
out
arpl
bound
pushf
push
push
push
add
roll
xor
add
jle
mov
sbb
push
in
nop
mov
flds
adc
in
lock
mov
jmp
lds
ss
lods
adc
push
test
hlt
xor
sbb
das
add
ret
push
mov
out
mov
and
les
inc
add
repnz
test
out
push
or
jb
add
jle
pop
sets
inc
push
shrb
mov
sbb
sbb
scas
les
xlat
or
int3
scas
mov
icebp
fsubs
adc
or
and
subb
mov
jl
adc
jne
lods
insl
cmpsb
sahf
fidivrl
jbe
frstor
shlb
jns
in
fimuls
mov
push
or
mov
ss
loope
add
into
cmp
scas
xor
mov
scas
lret
lea
rorl
mov
adc
lea
outsb
mov
jo
jo
add
inc
cwtl
aad
mov
xchg
sarb
fs
repnz
test
sbb
push
sub
sbb
setae
ds
test
fs
fwait
xor
inc
fld
jg
aaa
xchg
popf
cmp
adc
neg
jmp
mov
push
ret
fidivl
add
negb
mov
cmp
ret
cmp
jmp
insl
insb
mov
xchg
ja
rcl
arpl
xchg
jbe
mov
mov
iret
xor
jnp
jecxz
lea
pushw
std
outsl
push
cmp
or
mov
push
sarb
mov
movsb
mov
xor
push
cmp
jmp
push
shlb
sbb
mov
or
adc
outsb
jmp
fstpt
sti
outsl
sbb
stos
push
fsubl
pusha
push
repnz
jmp
mov
dec
cmpsb
push
lea
xchg
lods
out
mov
out
leave
inc
icebp
shlb
jo
inc
aaa
imul
or
cli
stos
aam
outsl
in
sbb
jo
in
cmc
or
cli
jno
sub
add
sahf
xchg
ljmp
lret
mov
push
test
sbb
fidivl
sahf
xchg
int3
push
push
mov
sbb
sbb
push
neg
mov
push
jmp
inc
insl
xchg
or
aaa
roll
dec
inc
into
jo
adc
sbb
adc
or
mov
mov
xchg
andl
jb
sub
and
js
jle
bnd
mov
mov
lock
negl
jmp
push
add
inc
fldl
xor
jg
scas
test
mov
mov
mov
sbb
dec
hlt
and
dec
inc
sbb
or
xchg
cmp
push
pop
dec
jne
aad
sbb
scas
dec
or
loop
nop
or
or
xor
popf
sub
adc
add
clc
xchg
sbb
stc
push
dec
out
and
pop
xchg
jae
sbb
xchg
add
dec
pop
test
in
xchg
cwtl
inc
and
movsl
or
outsl
jns
cmp
std
outsl
rclb
dec
sarb
movsb
rcrb
jge
adc
roll
dec
enter
adc
sbb
mov
shr
lret
jle
dec
mov
push
jns
mov
xchg
or
lret
inc
in
mov
xor
bound
fmuls
jbe
pushf
add
stc
daa
jecxz
out
adc
jecxz
cs
jne
mov
pop
in
push
pop
out
lret
push
mov
or
dec
mov
and
mov
mov
or
data16
jno
mov
sbb
mov
incb
ret
stos
js
xchg
mov
into
ss
sub
testl
call
jmp
fstps
scas
xchg
movsb
push
or
lret
insl
xor
jg
jl
outsl
xchg
stos
mov
stc
sbb
adc
mov
js
add
loope
cmpsl
jo
je
add
or
cmp
loopne
hlt
push
mov
aam
aas
ss
dec
cmpsb
and
xchg
sbb
cmp
xor
arpl
sti
je
les
inc
xorl
pushf
mov
sub
cltd
ret
mov
mov
sub
popf
popf
test
lods
ljmp
lods
push
fwait
pushf
sbb
sbb
xlat
jno
jg
push
mov
sub
test
sub
add
addl
pop
inc
scas
dec
or
sub
mov
lock
ret
inc
pop
incl
std
xor
bound
lea
and
pop
pop
push
test
jg
mov
icebp
ja
mov
mov
and
xchg
cmpsl
lcall
js
arpl
push
sbb
cmp
mov
mov
add
in
xor
mov
add
sarb
or
cli
sub
cmpsl
adc
push
push
push
mov
outsl
mov
sarb
push
dec
bound
push
push
shll
mov
pusha
sarb
rorl
inc
in
pop
jle
and
jne
adc
and
lea
js
in
shl
adc
sub
cltd
pop
adc
insb
xchg
jb
inc
pop
gs
jae
jg
or
pop
aaa
jo
fmuls
mov
fimuls
rcrb
sti
xor
gs
and
cmp
push
imul
loope
xor
ror
sti
mov
or
and
push
mov
loope
pusha
dec
in
xor
test
ljmp
or
jo
cltd
in
loop
mov
addr16
shll
pop
push
mov
cmp
inc
mov
lret
mov
les
loop
das
mov
mov
sysenter
sbb
out
and
jmp
mov
mov
jno
push
pop
aaa
mov
sub
sub
or
loop
test
dec
mov
dec
dec
icebp
mov
sbb
dec
add
xchg
lahf
ja
fstpl
les
loope
adc
cmc
clc
lock
jo
mov
mov
nop
cmp
lea
cwtl
sub
insl
dec
ret
jmp
ljmp
lea
or
mov
scas
dec
data16
js
sbb
dec
mov
and
imul
or
popf
jns
loopne
xorb
dec
gs
in
push
in
or
fidivl
lock
sub
cmp
push
jge
mov
add
inc
and
lahf
in
jmp
cmpsb
fsubr
push
jge
int3
push
hlt
orl
sbb
and
shrb
xchg
enter
mov
sbb
cwtl
out
rolb
pop
adc
movsb
fisubl
aad
loope
stos
cmp
cmp
add
sbbb
jge
arpl
int3
cmpsl
pop
sbb
cmp
icebp
ljmp
push
sahf
sub
ret
lret
insl
gs
insl
adc
scas
dec
int3
push
das
cld
push
cmpsb
dec
or
mov
adc
bound
testl
cmp
leave
loopne
outsl
xchg
rcl
pop
insl
cmp
xchg
or
inc
divl
outsb
inc
int
and
xor
mov
outsb
push
rcll
xchg
dec
gs
mov
cmpsb
aaa
mov
cmp
push
scas
lahf
or
out
iret
pop
mov
icebp
or
and
sbb
clc
repnz
addr16
icebp
nop
jp
xor
mov
add
out
cmp
out
fildl
xlat
push
adc
mov
sub
and
mov
jl
mov
je
and
jbe
test
notb
mov
jle
cli
in
push
mov
cwtl
pop
sar
das
pop
mov
in
dec
jns
sbb
out
das
pop
test
popa
cli
dec
out
and
fwait
pop
adc
ss
pop
cmp
xchg
mov
add
insl
jmp
neg
inc
xchg
or
fldl
sub
xchg
mov
or
adc
sbb
jg
push
hlt
adc
shll
test
sub
dec
out
je
mov
xchg
int
mov
les
mov
jb
cli
xor
stc
flds
pop
sbb
adc
dec
mov
sbb
pop
test
movsb
ror
cmp
iret
mov
inc
in
push
cmp
lock
das
shll
jl
xchg
imul
insb
mov
jle
sub
pop
bound
test
xchg
in
ds
xor
inc
nop
mov
pop
push
dec
rorl
and
mov
and
dec
loopne
loopne
ljmp
dec
leave
or
cli
add
fnstenv
add
add
rcrl
loope
and
adc
mov
push
cmp
mov
lock
out
test
xlat
dec
dec
aaa
push
or
xchg
stos
add
out
inc
lret
pushf
dec
push
into
lock
cwtl
sub
xlat
or
sub
jne
fstpl
jo
insl
add
xchg
add
ud0
rcll
xor
aad
outsb
pop
jge
push
fimull
nop
jno
jge
sahf
adc
jbe
jb
aaa
ja
test
lret
jno
and
fdivs
scas
repz
ret
mov
sar
adc
ss
xor
xchg
das
decl
adcl
mov
xor
add
xorl
lods
in
xor
dec
xchg
jbe
or
push
imul
shl
cld
pop
lods
cltd
sub
mov
cmpsl
and
xchg
movb
jecxz
pop
imul
pop
cmp
adc
loop
sarb
cli
adc
call
outsl
cmp
decl
fmuls
xor
mov
sbbl
push
test
add
sbb
jno
cmc
sub
das
repz
in
pop
cmc
loop
dec
aaa
frstor
push
mov
mov
push
out
lret
int3
mov
add
stos
cmpsl
jl
sub
mov
pop
stos
scas
jmp
inc
mov
movsl
mov
and
cmp
out
dec
repz
inc
or
aaa
dec
adc
ja
jmp
aad
popa
loope
adc
mov
sub
clc
out
repnz
dec
pushf
xor
imul
mov
push
pop
aas
xor
xchg
adc
mov
push
adc
xchg
ret
mov
pop
jl
or
test
xchg
dec
insl
xchg
in
test
mov
lahf
adc
mov
inc
je
leave
repz
lds
pop
movsb
stc
imul
push
ja,pt
jmp
adc
sub
lea
in
call
insb
inc
jno
fnstsw
jmp
add
inc
cmp
mov
int3
adc
dec
mov
add
jno
inc
leave
inc
jle
sbb
sub
bound
shrb
repnz
dec
stos
arpl
fmulp
in
dec
int
mulb
imul
mov
lret
mov
daa
push
scas
adc
xor
cmp
fnstenv
xchg
push
fnsave
rcll
jns
push
push
cwtl
mov
lock
jb
addr16
mov
imul
and
dec
fs
pop
stos
mov
iret
adc
dec
bound
je
dec
jle
scas
cs
mov
in
add
push
movsl
insl
xchg
out
mov
inc
loop
dec
mull
xor
xchg
xlat
push
popa
jns
stos
sub
mov
pop
rcll
mov
sbb
lret
sub
or
lcall
xlat
pushf
mov
xchg
aam
stos
lret
jnp,pt
and
xchg
cmpl
out
adc
out
imul
jae
mov
in
pop
cwtl
inc
fsub
popa
cmc
std
inc
mov
pushf
bnd
test
adc
jp
pop
lods
lret
push
lahf
adc
iret
mov
scas
sub
push
dec
sub
sub
mov
loop
pushf
ret
push
mov
pop
in
pop
jg
js
mov
repz
sub
idivl
xchg
fistpll
lock
test
aas
xor
jns
ss
mov
xchg
mov
inc
jns
insl
insl
inc
xchg
mov
arpl
lret
scas
pop
add
lods
xchg
and
outsl
push
imul
outsl
jne
outsb
sbb
push
es
loope
mov
adc
pop
pop
xor
sbb
pop
cltd
jb
add
and
bound
in
fbld
xor
push
cmp
jecxz
xchg
sbb
fisubrs
ds
mov
in
push
add
repz
mov
js
push
pop
dec
pop
out
lods
std
adc
cmp
ljmp
sbb
sti
push
scas
and
rcll
xor
cmpsl
mov
adc
jmp
das
add
pop
xor
cs
push
inc
jno
repz
and
sub
cwtl
push
xchg
outsl
push
xchg
sbb
out
shll
leave
mov
test
dec
xchg
and
dec
sahf
adc
jg
cmc
into
jl
xor
dec
push
pop
movsl
rcll
lock
pop
lods
pop
jo
sub
out
adc
pushf
sbb
pop
jg
aas
xor
call
js
insb
insb
sbb
push
inc
cmp
div
mov
ficompl
jae
jmp
inc
dec
push
cmp
sbb
test
inc
fstpl
fucomi
adc
int
sbb
arpl
insb
clc
xchg
dec
stos
and
sbb
jae
dec
mov
sbb
cltd
pop
or
jns
xchg
push
aas
outsb
mov
test
aas
or
xor
push
loopne
fnstsw
cmpsb
mov
jl
lret
cltd
cmp
fs
pop
fcmovu
test
push
and
imul
mov
push
dec
pop
mov
addb
mov
ljmp
add
out
add
cli
test
out
or
xchg
dec
jp
mov
leave
movsl
nop
outsb
aam
adc
imul
jmp
sbb
insb
jb
sarb
mov
mov
aam
cs
data16
daa
push
das
mov
sti
daa
jl
inc
add
dec
cmp
rclb
cmc
movl
insb
ja
xor
mov
jge
cmp
pop
mov
arpl
lret
mov
mov
call
arpl
shlb
push
bnd
jbe
add
in
add
mov
adc
pop
push
xchg
add
pop
lahf
arpl
leave
fisubrs
adc
mov
pop
sub
sub
push
mov
andb
pop
inc
rcrl
sbb
into
xchg
and
xor
adc
popl
fstpl
cmp
pop
inc
sti
negb
daa
aam
sub
dec
in
out
xchg
and
mov
push
std
repnz
fidivl
and
push
mov
iret
pusha
pusha
dec
data16
cmp
pop
jmp
in
cwtl
lods
push
stos
and
push
sbb
or
inc
icebp
and
lahf
mov
popf
adc
icebp
fidivrl
pop
roll
sub
gs
das
aam
inc
jl
stos
jecxz
aad
imul
les
in
pushf
stc
xor
or
and
sahf
inc
inc
into
adc
mov
sbb
or
enter
cwtl
das
jg
add
xchg
xchg
sub
pusha
dec
pop
fsubrs
jg
add
je
bound
dec
cmp
push
xchg
out
imul
sti
fs
cmp
sbb
out
or
jae
ss
loopne,pt
mov
jl
jp
dec
cmp
fcomip
jno
mov
pusha
adc
cmpsb
pop
loop
subb
inc
push
mov
jl
dec
imul
mov
adc
sub
jp
xchg
roll
in
dec
mov
mov
aam
mov
push
push
sahf
faddp
clc
mov
adc
adc
jnp
add
sahf
std
mov
dec
or
mov
add
sub
lahf
and
in
lcall
jae
int
and
sets
xchg
in
or
ljmp
add
sarb
cmp
xor
add
aam
dec
jns
out
lret
rcrl
inc
enter
fs
dec
clc
inc
out
fwait
out
push
hlt
mov
dec
xor
push
iret
out
add
xor
lods
ret
lcall
inc
out
add
ss
jle
into
std
int
hlt
shl
sbb
lds
adc
adc
aad
arpl
dec
lock
inc
setb
dec
inc
push
out
nop
outsb
pushf
xchg
mov
pusha
xchg
sub
lods
or
testb
insl
cwtl
outsb
icebp
ja
and
repnz
int3
aas
dec
push
xchg
mov
pop
jge
out
xor
les
adc
pop
mov
lods
subb
adc
scas
jmp
fdivrs
cmp
sbb
enter
sbb
pop
dec
jmp
xchg
test
xchg
jbe
xlat
xorl
out
stos
cmp
cmpsb
jmp
sbb
enter
inc
mov
scas
jge
pop
add
outsb
sbb
push
repz
jno
mov
test
xor
inc
sbb
cmp
das
mov
out
call
jle
aas
adc
icebp
imul
add
adc
dec
xchg
mov
lods
movq
push
out
xlat
icebp
sbb
bound
sub
scas
mov
pop
ret
push
push
add
enter
jl
mov
adc
js
out
movsb
sub
leave
movsb
pop
sbb
arpl
andl
in
sbb
pop
jae
cmp
push
xchg
jle
pushf
pop
pop
ror
scas
mov
mov
push
outsl
test
out
mov
inc
push
shlb
sbb
xor
into
or
inc
mov
push
imul
jno
out
aaa
shl
cltd
jg
push
inc
hlt
xor
or
test
pop
inc
and
or
adc
xchg
jnp
cmp
or
inc
loop
fst
movb
inc
mov
jmp
cmp
fwait
xor
mov
stos
add
ret
pop
add
sbbb
add
mov
in
or
fwait
es
lret
xor
pop
xchg
movsb
stos
mov
dec
sbb
push
cmc
into
jne
adc
std
pop
enter
xlat
inc
ds
dec
or
call
jae
sarl
fcmove
cmp
mov
push
jns
push
cmpsl
sub
mov
cmp
pop
popaw
push
pushf
notb
mov
fwait
cmpsb
rclb
ja
sub
ret
mov
cltd
clc
inc
mov
repz
int
lods
jae
insl
or
mov
inc
jecxz
gs
outsl
mov
xchg
mov
add
dec
or
call
dec
stc
inc
jnp
jo
or
int
in
inc
push
jo
std
sahf
cmp
pop
inc
and
mov
repz
add
sbb
or
hlt
stos
or
in
and
jl
insb
gs
mov
cmp
ja
adc
pop
xchg
out
cmc
mov
test
pusha
das
dec
inc
pop
repz
push
sbb
sbb
push
ret
cmp
add
in
sbb
imulb
lret
dec
cmp
sahf
pop
rcrb
jg
mov
leave
shl
dec
popf
inc
mov
mov
pop
mov
out
cmpsb
dec
es
pop
scas
mov
data16
or
and
and
add
push
push
xor
sub
add
cmp
xlat
cmpsl
inc
add
lcall
push
jecxz
aaa
or
lret
dec
dec
subl
xchg
mov
inc
leave
mov
pop
lock
or
adc
insb
push
mov
xchg
dec
inc
mov
xor
data16
push
cmp
push
out
add
fwait
and
outsb
jl
push
jecxz
push
jp
rcr
out
jmp
mov
inc
ret
loop
in
xor
dec
js
xchg
ss
mov
scas
insb
pop
repnz
lcall
push
inc
pop
sarl
add
insl
lock
das
mov
shl
jle
loopne
adc
push
add
sub
and
xor
or
pusha
mov
movsl
lret
cli
movsb
pushf
test
sarb
pop
aaa
mov
pop
into
sbb
mov
in
pop
xor
dec
mov
jmp
add
jg
leave
jecxz
stc
rorl
mov
push
mov
push
mov
or
call
lock
js
jne
jb
dec
out
fsts
mov
mov
shll
add
xor
js
push
add
dec
popa
scas
gs
jno
jp
les
insl
add
cmp
aas
or
pop
push
or
or
fisubrl
fwait
inc
call
test
cmp
sbb
repz
pushf
mov
inc
lds
or
lock
cmp
jnp
push
out
dec
jbe
movsb
dec
sub
stos
adc
or
or
inc
sbb
jae
or
xchg
sti
orl
scas
push
mov
jno
and
xor
add
loop
gs
imul
or
stos
push
jle
or
mov
out
imul
xchg
add
ljmp
cs
jg
rclb
lcall
push
ds
push
sti
pop
mov
shrb
aaa
or
add
jbe
mov
fstl
or
inc
or
mov
in
dec
add
jne
and
xchg
ret
outsl
cmp
add
pushf
pop
rcrb
scas
sub
xchg
pop
and
or
add
jle
dec
and
rcrb
inc
jmp
jecxz
xchg
xor
mov
pushf
rorb
ljmp
cmp
add
lcall
cmpsb
or
sbb
lock
lahf
sbb
sbbl
sbb
icebp
cmp
scas
jp
pusha
popf
or
xor
dec
mov
and
sarb
scas
jmp
lock
dec
andb
pop
push
jp
ja
stos
adc
xchg
fdivrl
iret
add
push
fwait
rcrl
and
inc
rol
mov
out
mov
outsl
sbb
and
inc
inc
jmp
pop
insb
mov
insb
stos
push
push
mov
mov
sub
aam
ret
push
cmpsl
pop
xchg
pop
adc
jno
inc
lock
in
out
and
xchg
lahf
mov
aaa
jp
xor
ljmp
div
cmpl
mov
push
push
dec
xchg
cmpsb
jg
cmpsb
sbb
mov
sahf
inc
mov
dec
call
test
clc
xchg
ljmp
repz
adc
out
and
or
lock
in
or
repz
cltd
idivb
mov
cmpsl
sub
push
in
mov
mov
rcrb
mov
lret
test
pop
pop
adc
ljmp
std
inc
jge
dec
pop
jcxz
je
cltd
cld
cwtl
fcomp
je
bound
aaa
sub
mov
fdivr
push
mov
out
jmp
dec
mov
ds
loop
imul
out
push
leave
xchg
xor
mov
pop
fs
cwtl
test
sbb
aas
cld
xchg
xlat
pop
dec
movsb
jns
mov
and
cmp
inc
arpl
add
xor
dec
or
lods
and
pop
insb
cltd
loopne
mov
fs
fiaddl
scas
les
lcall
mov
jmp
jecxz
mov
adc
jmp
cmp
xchg
xlat
stc
popa
add
inc
jne
rcrl
and
incb
cltd
lods
scas
and
push
xor
std
pushf
sbb
int
inc
jecxz
and
xchg
jno
repz
lock
jne
cwtl
push
ret
cmp
scas
aam
inc
or
cmc
add
mov
mov
lods
sub
cmp
and
cmc
pushf
cmpsb
movb
sub
frstor
inc
or
in
jl
mov
in
push
fwait
testb
jnp
push
mov
add
mov
popa
sbb
jmp
inc
out
sub
jp
mov
or
arpl
pop
repnz
sbb
jp
add
rcll
cmpsb
inc
int3
sub
mov
mov
lods
addl
dec
fchs
xchg
inc
scas
fwait
or
fwait
cmp
loope
inc
sti
xchg
popf
lcall
mov
xchg
inc
push
mov
push
gs
xor
cmp
add
daa
ss
bnd
mov
shrl
inc
nop
rcr
dec
cmp
test
stos
jp
cltd
negl
cwtl
ret
push
inc
push
push
imul
lret
mov
loop
cmp
jae
in
dec
pop
ds
lcall
test
es
pop
addr16
jo
dec
in
loope
clc
dec
mov
push
dec
cmp
sbb
fdivrs
dec
sub
fwait
enter
add
xchg
push
ljmp
js
stos
mov
mov
jno
inc
addr16
orl
fwait
popf
push
xchg
in
test
mov
cmp
sbb
mov
mov
in
sbb
sub
cmc
sub
adc
jge
push
cmp
cwtl
in
popf
fisttpll
dec
out
mov
rcll
inc
iret
imul
fcoml
ljmp
xlat
movsl
or
jmp
cmpsb
fidivs
sbb
xchg
or
xorl
add
insb
dec
xchg
jp
rorb
or
pop
inc
push
mov
and
xchg
cmp
xchg
mov
test
and
mov
pop
pop
daa
incb
mov
test
mov
test
push
mov
lret
inc
lods
insb
sbb
adc
add
enter
roll
or
jne
push
mov
jno
or
xchg
pusha
adc
leave
cmc
adc
rorl
sbb
sbb
out
movd
lds
cmp
test
clc
je
pop
popf
adc
jne
inc
xor
or
push
xchg
mov
in
pop
push
repnz
mov
gs
call
ds
mov
inc
mov
bound
sbb
xor
and
pusha
iret
mov
pop
cmp
icebp
inc
jp
scas
and
fidivl
push
out
stc
mov
mov
sarb
jne
add
pop
test
inc
push
bound
jne
or
dec
cli
pop
bound
adc
lock
or
fbld
mov
loop
xchg
add
sbb
movsb
dec
mov
rorl
jb
lods
cwtl
xchg
in
sbb
xchg
mov
imul
pop
xchg
call
pop
jp
mov
dec
mov
mov
xor
sbb
dec
jp
stos
jp
ret
mov
mov
sub
mov
dec
xor
aam
push
add
lahf
in
ljmp
pop
xor
push
dec
sub
jmp
cmpsb
mov
push
xchg
int
xchg
sar
movsl
jecxz
rclb
ljmp
ss
or
fdivl
nop
pop
repz
aas
mov
aam
ss
icebp
cmp
int3
jo
cmpsl
movsb
inc
ret
push
adc
sub
sbb
ds
aam
jnp
mov
cwtl
jge
cmp
xchg
xlat
pop
or
jl
cmp
test
xor
ds
stos
inc
mov
push
insl
push
mov
pop
mov
push
repz
pop
loope
jb
scas
popf
mov
or
enter
and
add
fldcw
pop
lahf
nop
ret
push
pop
subl
xor
xchg
test
daa
cmc
imul
lret
clc
pusha
sub
stos
mov
xchg
mov
mov
xor
inc
bound
lods
mov
adc
xor
cli
pushf
mov
or
and
and
xchg
out
jge
shll
loopne
shlb
shll
add
repz
sub
adc
pushl
fbld
xchg
xor
shrb
xchg
cmp
sub
cmpsb
scas
pop
cmp
inc
inc
inc
dec
out
mov
mov
notl
cld
pop
mov
ret
jmp
popa
loope
aaa
mov
sbb
pop
mov
jg
jne
push
jnp
rol
push
and
lea
mov
outsl
jb
insb
aaa
sub
call
and
imul
mov
clc
sti
test
cmp
or
add
call
add
movsl
jmp
stc
or
mov
dec
pop
xor
data16
sub
lods
jo
mov
sbbl
scas
icebp
inc
mov
lods
push
lret
mov
jmp
add
sbb
adc
ss
stos
sub
ds
fldt
mov
pop
and
adc
cld
push
lods
xlat
or
push
std
test
or
adc
ret
sbb
test
push
imul
repz
dec
lock
mov
dec
add
cltd
fcmove
cmc
data16
rcr
mov
gs
cmp
xchg
adc
lock
rcrb
movsb
dec
in
jecxz
adc
je
add
jl
packssdw
ud1
and
icebp
cmpsb
lods
dec
stc
clc
clc
shrb
ljmp
push
xchg
fdivrs
rolb
orb
cmp
rorb
pop
sbb
leave
outsb
ljmp
cmpsl
ljmp
call
pop
punpcklbw
cmp
ret
movsb
jae
leave
sub
ret
mov
insl
das
in
lods
ss
lcall
into
mov
cmp
int
arpl
push
xlat
jns
mov
into
das
cmp
inc
es
mov
xchg
gs
xchg
xchg
push
aaa
pop
cmp
mov
pop
enter
outsl
bound
dec
pop
push
adc
xor
rol
push
sbb
mov
in
sti
mov
push
outsl
mov
loopne
sarb
xor
adc
imul
int
adc
hlt
stc
xor
dec
lcall
pop
add
dec
fsubrs
dec
dec
adc
xchg
mov
lock
jp
cwtl
imul
in
or
xor
jle
sbb
jmp
dec
rcl
in
test
or
fcoml
cmp
sbb
ret
movsl
lcall
mov
pop
shlb
fs
cmp
xchg
or
xor
xlat
mov
adc
and
xorl
adc
test
add
rorl
fsubrs
int
lods
pusha
jbe
xchg
xor
call
popf
adc
repz
loop
push
loope
and
mov
mull
in
mov
sbb
push
and
popa
mov
lea
movsb
mov
sti
or
out
sbb
jg
outsb
pop
inc
roll
int
jnp
mov
and
out
or
sbb
xchg
idivl
fucomi
cltd
lds
test
testl
frstpm(287
outsb
mov
call
ds
rcl
pushaw
cwtl
test
clc
sub
mov
lock
cmp
pop
cmp
or
pop
ret
int
sbb
or
pop
dec
aam
loop
adcb
fidivl
cmpsb
clc
add
mov
int3
inc
cmp
stc
cmpsb
cwtl
cs
mov
inc
add
sbb
push
jp
dec
cmp
xor
dec
or
jne
dec
out
and
jl
mov
outsb
xchg
lcall
arpl
cmp
mov
mov
xchg
inc
icebp
mov
dec
push
cmp
fmuls
repz
mov
lock
inc
xchg
xchg
clc
cltd
inc
fildl
and
mov
imul
xchg
int3
add
movaps
popf
cmp
push
pop
mov
stc
dec
out
mov
add
mov
fstps
lcall
inc
dec
addb
push
cmpsb
push
jp
jmp
inc
pop
sub
add
in
insl
dec
cmp
test
jno
out
jl
mov
push
mov
jns
loop
outsl
xor
xchg
scas
pop
inc
xchg
xlat
es
pop
imul
sar
pop
gs
xor
aaa
dec
sahf
into
mov
aad
pop
mov
fdivrs
movsl
cmp
push
dec
inc
scas
sub
data16
das
dec
scas
push
lcall
mov
call
mov
test
push
adc
or
mov
mov
test
dec
and
out
cmp
repnz
leave
pusha
je
push
cmp
push
xorb
sub
xor
outsl
dec
dec
lret
ret
xchg
cmp
inc
xor
sbbl
xorl
push
fdivp
test
cwtl
mov
incl
outsl
add
leave
pop
movsl
test
cltd
xchg
call
arpl
and
rcrl
mov
mov
sbb
and
aas
mov
inc
xor
inc
mov
jg
mov
pop
es
jno
push
inc
push
sbb
aas
sub
cmp
leave
dec
pop
movsb
imul
ret
sbbb
faddl
in
cmpsl
mov
and
cmp
cmp
ss
rdmsr
sti
sbb
pop
jo
mov
pushf
pop
add
jge
jb
xchg
in
out
mov
ficoml
and
fiadds
test
and
fucomp
cld
jge
jle
jg
mov
ret
xor
sbb
cmp
push
les
addr16
sub
outsb
rcll
mov
stc
jmp
cmp
sub
cltd
scas
fsubrl
sub
mov
xchg
imul
popf
dec
fisubrl
out
xchg
jb
jae
jno
push
jae
mov
mov
inc
lods
push
or
ja
aas
gs
out
or
sbb
int
ja
push
jae
sub
aad
movsl
xchg
les
xor
pushf
xorb
adc
cltd
sub
push
add
sub
lret
cmp
dec
jl
repz
xor
in
xchg
and
insl
sub
in
push
outsl
cmp
adc
test
in
mov
adc
std
call
xchg
jg
ja
scas
jmp
fsubrl
pop
mov
hlt
ljmp
lock
cmp
mov
jmp
cmp
jge
or
push
jl
sub
subb
and
and
xchg
mov
adc
in
int3
mov
std
clc
sbb
dec
mov
addl
mov
out
add
fstl
mov
stos
rcr
test
test
xor
insb
js
cltd
dec
xchg
and
sub
dec
rcrl
sti
pusha
mov
fs
out
sbb
ficoml
arpl
xchg
cmp
rcrb
lods
jne
dec
mov
lahf
loope
sarl
int
push
mov
je
dec
cmp
cmp
cltd
ret
std
jmp
int3
fadds
jnp
sub
arpl
push
mov
lea
mov
push
stos
cmp
add
cmpsl
das
push
jbe
mov
push
int
inc
mov
aam
test
mov
cmc
jns
sub
pusha
cmp
jo
xchg
add
adc
call
outsl
inc
or
cmpsl
inc
hlt
lret
stos
fwait
repnz
mov
jge
mov
int3
addr16
movsb
and
je
adc
push
int
inc
xor
jb
jmp
test
popa
orl
pop
sbb
cmp
sub
mov
xchg
add
xor
dec
add
out
fdiv
lods
lcall
pop
mulb
out
insb
repz
mov
adc
mov
orl
xor
or
lcall
mov
inc
enter
cmc
add
cmp
cs
cmp
aam
or
sub
popa
add
test
enter
inc
bound
pop
int
mov
cli
icebp
stc
outsw
sub
push
mull
pop
mov
inc
popa
hlt
xchg
in
xor
test
add
and
sahf
jmp
repz
stos
out
fidivs
sub
sbb
xlat
scas
imul
lods
jo
jbe
outsl
xorb
daa
or
fiadds
scas
mov
sub
movsb
push
loope
mov
adc
jecxz
push
adc
inc
enter
cltd
addr16
std
sub
push
inc
loopne
dec
mov
rcl
mov
or
xchg
sbb
adc
cs
push
sbb
sub
mov
dec
jp
ds
cmovge
add
lds
cmp
mov
xchg
std
ret
xor
pop
push
mov
nop
loopne
pop
out
and
rcrl
dec
pavgw
dec
push
addr16
arpl
scas
add
mov
add
sbb
add
push
in
sub
fnstenv
xchg
or
mov
pushf
or
pop
mov
inc
mov
inc
repnz
mov
pop
and
sbb
das
jle
ljmp
add
jns
shrl
lahf
imul
xor
push
dec
pop
movsb
mov
push
mov
cmp
mov
jns
test
icebp
mov
out
lods
dec
jle
das
stos
pop
mov
test
sub
mov
mov
cs
sbb
out
push
gs
or
lods
test
cmp
mov
clc
mov
jge
test
cmpsl
clc
in
sbb
decb
ja
hlt
push
call
orl
call
popf
fdivr
into
inc
scas
jae
lock
sub
pop
push
in
pop
jmp
xchg
jae
roll
or
imul
inc
or
fwait
ljmp
dec
mov
sub
pop
or
fmull
push
or
xchg
pop
cltd
mov
jge
popf
mov
fsubl
jge
jmp
adc
or
mov
sub
je
xor
dec
call
pop
cmp
mov
movsl
call
xchg
pop
sub
cld
into
xchg
push
sbb
pop
xchg
fldenv
gs
jecxz
lods
cmp
inc
insb
sarb
repnz
dec
outsb
fstl
call
in
jnp
jo
jnp
ja
mov
cmc
out
mov
enter
fisttpll
pushf
dec
lret
mov
loop
xchg
sbb
outsb
js
dec
add
adc
aad
xchg
lcall
addr16
push
dec
push
xchg
push
aam
and
ret
mov
jp
and
jne
inc
jle
or
pop
mov
dec
stc
es
mov
add
fidivl
fcmovbe
ljmp
ljmp
movsl
js
sbb
out
into
lahf
xchg
sbb
or
sarl
clc
int3
test
cltd
xor
mov
inc
test
xchg
mov
xchg
pop
outsl
push
pop
sub
xor
push
mov
dec
push
ret
fildll
lock
or
and
iret
insb
outsb
jge
popf
sbb
mov
inc
ret
or
mov
sbb
mov
les
data16
loopne
add
or
dec
xor
mov
or
xor
rcrl
sarb
fstps
ret
aam
lret
jl
rcll
stos
push
cmpsb
push
fmuls
outsl
or
push
out
xor
ljmp
shll
jmp
dec
cmp
in
lahf
lret
fnstenv
das
mov
pop
lods
out
jb
rclb
push
push
or
sbb
add
jno
fsubrl
mov
push
jbe
and
adc
mov
push
orl
mov
xor
add
lods
mov
fsubrs
inc
ret
inc
adc
and
repnz
loop
jecxz
sbb
lret
nop
sbb
rcll
mov
lock
pop
popl
inc
add
fsub
popf
pop
jo
dec
loop
mov
xchg
repz
sbb
xlat
mov
add
cmpsl
leave
mov
dec
das
pop
or
es
dec
push
lret
push
sarl
andl
add
mov
jne
es
inc
sub
push
in
not
jo
adc
and
je
xor
jae
movb
push
pop
out
pop
test
inc
xchg
fiadds
xor
jns
sarb
inc
push
sub
es
lock
scas
ret
xor
sbb
sarl
lcall
repnz
das
or
mov
cli
and
push
and
lret
daa
inc
xor
xchg
lods
mov
cmp
jno
pop
inc
loop
out
ss
or
in
lahf
cli
and
mov
fs
mov
dec
das
mov
div
data16
dec
mov
push
push
loop
cld
out
push
mov
rol
jmp
jl
jne
jb
hlt
insb
call
sub
sbb
xchg
xchg
jp
xor
data16
or
jle
push
sbb
roll
clc
movsl
fcmove
xor
jl
xchg
push
gs
cmc
pop
ds
ret
push
inc
sbb
sahf
mov
test
xchg
fisubs
je
adc
sub
cmp
popl
pop
mov
xchg
sbb
popa
dec
rcll
xor
movntps
movsl
cmp
xor
rolb
scas
popa
sub
inc
adc
cld
xchg
int
adc
pop
fdivr
std
add
lods
call
mov
loope
xchg
push
test
push
stc
andl
jo
dec
xor
xchg
cmpsb
jbe
jmp
xor
pop
or
xlat
cltd
pop
mov
mov
je
icebp
pop
mov
repz
adc
aas
test
mov
pop
inc
mov
and
test
insl
in
jmp
sub
int3
dec
pop
cmpsb
pop
aaa
sub
mov
lods
mov
enter
sahf
or
add
aaa
js
int3
psubsw
leave
scas
je
lods
fcomps
lods
inc
dec
mov
movsl
pop
jecxz
aam
add
sti
or
icebp
and
mov
fnstenv
pop
out
push
sti
lods
pop
xchg
jns
add
ja
jle
mov
repnz
lret
les
orl
adc
loopne
push
jge
out
ds
mov
ficompl
stos
push
add
jno
adc
imul
insl
pop
les
xchg
pop
iret
sbbb
inc
xchg
and
jne
jmp
mov
lret
and
imul
cmpsl
stos
cmpsl
sbb
cmpsb
out
pop
stos
cmp
or
mov
adc
and
hlt
mov
adc
lods
lahf
imul
pop
mov
cmp
mov
adc
add
jl
xor
inc
or
das
xor
mov
lea
dec
mov
fcoms
es
insb
jne
jp
repnz
imul
mov
pop
and
add
push
sub
popf
push
cltd
cmc
int
jnp
aam
lods
adc
ret
and
mov
mov
mov
insl
jle
movsb
pop
shl
jo
add
in
stos
mov
cmp
bound
pop
stos
clc
adc
pop
scas
imul
dec
rcrl
adc
rcrb
int3
loope
fistl
sub
adc
hlt
mov
dec
mov
jmp
pop
sub
test
xchg
cs
call
lret
and
sbb
punpckldq
test
mov
cltd
pop
imul
xor
jmp
adc
sahf
rcrb
sar
inc
mov
cld
add
mov
mov
adc
dec
test
sub
lock
pushf
popf
dec
mov
push
sbb
popf
sub
sahf
push
cmp
lret
and
movsl
cmp
mov
push
ljmp
fistpll
mov
stos
sbb
scas
xchg
cmp
stc
jbe
mov
mov
arpl
or
adc
inc
push
icebp
cmovp
rorb
rolb
lcall
dec
pop
inc
mov
and
sub
push
scas
add
arpl
push
js
mov
fwait
xor
scas
fldcw
sbb
push
adc
jmp
push
enter
punpcklwd
adcl
jnp
cmp
push
push
loope
mov
clc
pop
sbbl
jne
cwtl
call
lock
add
jg
pop
gs
icebp
mov
jge
xor
push
loope
inc
cmc
loopne
xor
cmpsb
cmp
jb
adc
mov
or
push
cmp
stos
int
cmp
jecxz
push
js
sub
iret
jno
mov
and
fldl
loope
mov
cmp
mov
or
cmc
testb
mov
add
inc
xor
mov
mov
lock
sub
lea
sbb
cmpsb
xor
sub
pop
gs
sub
sbb
jg
out
inc
mov
inc
mov
or
sub
fdivr
pop
sbb
mov
jmp
lret
dec
lods
and
mov
clc
stos
sub
sbb
mov
in
ret
xchg
sbb
lret
xor
cmpsl
xchg
out
inc
pop
pop
pop
push
gs
lcall
addr16
cmc
lock
fstl
arpl
or
or
pop
push
rcrl
faddp
daa
mov
xor
pop
aad
and
push
fs
jb
pop
in
or
and
jecxz
aaa
aaa
xor
mov
mov
test
shrl
pop
pop
sbb
pop
loop
aas
not
add
clc
iret
loope
lock
add
pop
shll
imul
mov
fcomi
inc
hlt
arpl
push
add
pop
mov
andb
out
push
and
adc
out
dec
sbb
ret
stc
inc
int3
test
cmpsl
stos
xchg
mov
push
xor
sti
fstpt
xor
icebp
jnp
cmc
add
xor
and
nop
test
pop
in
pop
lods
jecxz
and
push
lods
lock
and
cmpsl
test
push
sti
adc
orb
daa
loope
mov
mov
mov
or
dec
ljmp
aas
pop
inc
xchg
push
test
mov
push
cltd
stos
dec
out
dec
ljmp
mov
lahf
xchg
mov
cmc
xlat
shlb
xor
in
jne
cwtl
rolb
aam
pabsd
aaa
enter
aam
cmc
mov
arpl
inc
sbbb
gs
inc
jg
cltd
add
enter
push
mov
push
sub
scas
sahf
or
dec
push
jmp
push
daa
push
or
inc
cmp
loope
or
mov
mov
sarl
mov
ficoms
push
jp
in
mov
test
sbb
inc
inc
sbb
pop
push
sti
or
and
pop
xchg
adc
jp
int3
xchg
daa
pop
mov
into
cmc
rcrb
ds
es
in
inc
in
aas
push
insb
cmpl
mov
and
cltd
sub
pop
add
dec
shrb
retw
xchg
cmp
pop
fdivr
fnstsw
sub
ja
leave
add
test
imul
mov
sub
hlt
addr16
xchg
icebp
cmp
cld
sbb
push
sbb
push
lret
aas
cmp
ss
int
into
lret
jg
push
addr16
std
xchg
xchg
mov
nop
inc
add
cmp
je
pop
in
or
cmp
scas
ds
mov
mov
xchg
cmp
dec
fsubrl
xchg
inc
sbb
enter
or
inc
cmpl
roll
sub
cmp
add
daa
sbb
jne
fisubrs
push
or
pop
data16
rcl
jnp
adc
leave
push
xor
mov
pop
add
movsb
mov
in
mov
daa
hlt
insb
arpl
mov
xchg
aas
xor
pop
and
add
cli
xchg
cmpsl
push
lahf
pop
stos
adc
jle
test
inc
test
test
loop
das
cmp
add
inc
xchg
xchg
push
in
test
jecxz
in
icebp
sbb
std
ljmp
or
rcrl
pop
enter
push
lcall
and
sahf
jno
dec
mov
loop
cmp
movsl
jne
mov
jae
mov
mov
cli
mov
mov
sub
lock
fwait
push
lods
out
push
hlt
xor
hlt
mov
pop
test
push
in
pop
out
in
std
outsb
inc
xor
xchg
cmp
cli
pop
in
aad
sbb
push
push
pop
pop
scas
test
in
push
cltd
imul
ret
sub
jecxz
cwtl
adc
sti
push
or
test
shll
xor
imul
ret
test
push
push
push
fsubrs
jb
addr16
mov
rcl
mov
dec
int
mov
into
nop
fmuls
mov
aas
hlt
test
ret
xchg
cld
cmp
sub
daa
xchg
out
adc
jbe
xor
loopne
cld
and
and
mov
lcall
mov
push
scas
fmull
push
test
jnp
ljmp
adc
push
rorl
out
imul
test
addr16
inc
stos
mov
popa
sahf
push
mov
xor
clc
pop
aad
fldenv
xchg
jmp
adc
popa
inc
mov
xchg
push
std
out
rcrl
je
jae
mov
in
repnz
push
dec
jmp
jge
inc
out
stc
jmp
aam
repz
scas
or
into
jmp
aam
mov
dec
inc
sbb
das
and
lock
xor
add
pop
mov
cmp
loope
pop
enter
adc
mov
cmp
xchg
popa
pop
inc
out
mov
mov
ss
cmp
sub
stc
xchg
repnz
in
fisttpl
enter
orb
dec
repz
mov
xchg
push
add
out
xlat
inc
jecxz
and
dec
push
rorw
mov
sbb
inc
push
inc
fmuls
cmp
lea
movsb
jmp
loope
in
hlt
mov
int3
ret
mov
jg
pop
mov
aad
repnz
call
xchg
and
dec
jae
sub
mov
and
xor
fistpl
lods
fldcw
xor
push
bound
test
pop
cs
push
test
or
loopne
je
pop
lcall
icebp
mov
push
add
loop
xchg
push
lea
or
test
adc
xchg
nop
push
xor
mov
add
sbb
and
pusha
jb
mov
int3
das
and
pop
mov
pushf
and
ljmp
pop
cmp
and
xchg
imul
std
xor
into
pop
rcll
dec
xchg
in
mov
addl
sbb
dec
outsb
inc
ljmp
pop
rcl
xchg
jno
sti
or
scas
add
lods
xor
inc
xchg
in
jne
sti
js
add
pop
test
mov
adc
stos
jecxz
lock
outsb
lahf
ficoms
stos
mov
push
negl
pop
shrb
repz
sahf
mov
adc
ret
dec
lcall
js
mov
jo
out
push
insb
aam
push
mov
or
or
fmul
add
mov
popf
dec
jo
sub
lret
jno
pop
jno
jbe
daa
mov
scas
xor
test
push
jbe
xchg
cli
push
cmp
add
xchg
sub
outsl
cmc
pop
je
js
fidivrl
xchg
mov
insl
notb
mov
leave
push
out
pop
adc
shlb
xchg
daa
dec
cmp
jns
ret
xchg
lret
mov
lret
fstpl
mov
in
pop
push
sub
or
cmpsl
dec
push
fs
sbb
or
and
addl
cmp
sub
in
push
rclb
xchg
pushf
xor
gs
inc
fstpl
push
in
jge
push
les
outsb
pshufw
push
or
adc
mov
mov
push
cmp
lcall
pop
insl
jmp
inc
cld
test
xchg
sbbb
js
mov
arpl
fs
or
icebp
jns
mov
add
fdivrs
mov
out
and
arpl
mov
je
push
sub
cmpl
cwtl
int3
fs
or
aam
sub
mov
stc
inc
stos
sahf
aas
cmp
xacquire
push
cmp
add
mov
jge
or
and
jo
mov
sahf
lcall
scas
lret
addr16
or
sbb
rcrb
in
stos
in
rcll
push
jle
icebp
pusha
fsubr
pop
lds
fsubs
jno
pop
dec
fdivrl
ljmp
cmp
pusha
mov
sbb
mov
push
rorb
jno
ljmp
ret
jae,pn
mov
test
xchg
in
sub
stos
xchg
jne
xor
pushf
rcll
xchg
enter
push
pop
push
fistps
mov
lret
sahf
stc
adcb
les
nop
cmp
xorl
push
sbb
aas
push
adc
push
mov
jnp
stc
adc
sysenter
mov
and
xchg
xchg
sub
jnp
loopne
mov
and
cmp
and
sub
test
inc
mov
xor
sub
cmp
bound
lds
inc
sbb
mov
cltd
cmp
dec
je
lret
dec
lock
and
in
and
repz
jno
and
pop
cwtl
jnp
mov
xchg
insl
addr16
jns
stc
sub
mov
xchg
cli
jb
pushw
imul
jmp
fwait
sbb
idivb
rcl
orl
jo
outsl
push
sub
cmp
lods
push
cwtl
iret
and
pop
cmp
and
sub
rorb
mov
js
mov
mov
test
imul
lcall
iret
push
lcall
stos
iret
flds
mov
sbb
inc
out
mov
push
pop
rcrl
xchg
gs
or
std
adc
mov
sbb
mov
js
subl
xor
push
int3
jno
lods
and
mov
insl
popl
mov
aas
sbb
loop
ud2
or
xchg
xchg
or
icebp
and
bound
jg
push
cmp
cmp
test
cmc
outsl
pop
jl
mov
or
cmpsl
xchg
subb
inc
lds
scas
sbb
push
pop
xor
into
push
fwait
adc
outsb
out
insb
add
popa
shrl
in
mov
rclb
fcomi
mov
in
jne
xchg
adc
or
xor
jge
or
movsl
push
push
or
dec
leave
mov
jbe
andl
adc
rcl
sub
push
data16
push
icebp
and
hlt
cld
and
sarl
insl
jmp
lea
outsb
mov
inc
sub
sub
fnstcw
sbb
inc
mov
shrb
and
mov
jecxz
sbb
ds
dec
sbb
jnp
ret
cmp
push
enter
and
or
xchg
mov
add
hlt
dec
cmp
daa
push
frstor
inc
adc
mov
insl
sbb
mov
sbbb
push
mov
or
fs
stc
test
xchg
movsl
mov
or
sbb
sub
mov
mov
mov
int
fiadds
ret
rcrb
cwtl
repz
jl
push
rcrl
rcr
add
daa
imul
dec
mov
inc
push
pop
mov
add
lds
incb
rcll
cmp
sbb
jbe
movsb
sub
cmp
fld
js
add
inc
sti
rclb
adc
add
xchg
adc
or
lods
and
xor
ja
cmpsl
xorb
mov
jmp
scas
das
pop
mov
lret
dec
add
mov
sti
and
dec
sarb
and
mov
xchg
arpl
xchg
mov
push
aad
jle
dec
movsl
xor
pop
xchg
in
and
pop
shrb
je
scas
lcall
or
in
jne
pop
leave
xor
pcmpgtd
int3
lret
movsl
ja
cmpsl
scas
scas
mov
rcrl
lock
adc
lret
mov
scas
sub
mov
in
mov
divb
jne
pop
ss
lahf
push
sbb
or
adc
pushf
add
mov
cmp
negb
sub
ljmp
gs
pusha
addl
inc
inc
rcrl
add
push
repz
add
push
and
mov
cmpb
popf
xor
or
bound
leave
inc
cmpsl
rorl
jb
pop
test
cmp
dec
sbbl
sbb
in
into
inc
adc
lcall
xchg
sub
pop
rol
into
js
dec
cltd
cmp
daa
mov
sub
imul
push
jae
mov
clc
and
and
xchg
push
sbb
clc
lods
sub
icebp
xchg
cli
xor
push
xchg
enter
in
stos
dec
insl
push
push
push
movsb
mov
cwtl
or
fs
faddl
and
adc
in
mov
dec
imul
test
add
mov
pop
lret
dec
pop
jns
or
sbb
lods
mov
cmp
adc
ja
lahf
sbb
mov
inc
repnz
insl
xor
cmp
push
or
leave
aaa
jne
add
jg
adc
ss
fwait
enter
or
mov
xchg
pushf
mov
dec
sub
std
jg
jl
push
faddp
xor
add
rolb
lods
loopne
int3
jns
jmp
ja
fldenv
sub
les
insb
pop
ss
mov
add
jns
cltd
cwtl
xchg
ret
jg
add
outsl
mov
mov
ret
les
int
dec
sbbb
sub
shlw
lds
dec
push
enter
test
add
sub
pusha
fnstenv
adc
jecxz
add
iret
jg
lea
pop
adcb
jbe
loop
stos
test
int
pop
jge
mov
int3
js
je
in
fcmove
sub
subb
add
sub
pop
roll
outsb
cmp
cli
inc
ss
cli
pop
and
mov
mov
out
iret
push
movsb
xchg
push
xor
popa
out
imul
adc
mov
jge
test
aad
dec
dec
push
mov
fidivrs
out
push
dec
addr16
mov
xorb
jmp
pop
add
mov
int
sub
xchg
jg
aaa
rolb
sbb
jnp
mov
cmp
daa
push
cmpsb
lock
aas
xor
ljmp
mov
into
mov
shll
push
mov
dec
and
xchg
mov
push
fstpl
stos
inc
pop
sub
inc
hlt
push
pop
test
sbb
xchg
jmp
popf
push
sbb
fwait
mov
push
cmp
ret
xor
sub
or
and
into
cld
sbb
mov
mov
ror
push
sbb
in
fsubrs
pop
repz
jns
movl
push
cwtl
js
and
ret
cmp
cmp
jmp
xchg
jp
push
aas
push
mov
idivl
sbbl
mov
add
cld
pop
int
sub
cmp
jmp
or
rcrl
jmp
dec
mov
cmp
add
sub
addl
lock
dec
fnstsw
push
mov
mov
add
mov
sarl
dec
lret
jge
aaa
pop
fadds
stc
stos
int
xchg
adc
adc
cmpsl
add
cmp
cmpl
cld
adc
fsubrp
arpl
mov
or
inc
hlt
aas
scas
sbbb
stc
cwtl
or
lcall
and
outsl
gs
or
movhps
mov
test
insb
or
xchg
xor
mov
mov
jle
push
jecxz
rcrl
jle
and
xchg
xor
sbb
movl
sub
fs
mov
rcl
mov
out
in
nop
stos
ljmp
je
and
int3
adc
xchg
pop
icebp
notb
and
sbb
sub
mov
xchg
incb
mov
push
icebp
insb
cmc
stos
ljmp
mov
in
call
inc
dec
cmp
stos
scas
out
lock
fnstcw
xchg
sbb
pop
fidivrs
lret
cmpb
in
and
sbb
jecxz
xchg
dec
xor
roll
mov
jo
and
inc
pop
sahf
stc
adc
bsf
mov
sbb
in
dec
mov
jbe
testl
mov
test
sbbl
cltd
or
dec
mov
pop
cmc
fdivr
mov
or
mov
adc
notb
ss
in
ljmp
pop
into
mov
bound
lods
pop
test
cmpsb
jae
push
data16
out
add
mov
les
jp
in
add
ljmp
shll
add
into
sub
push
test
xchg
mov
push
dec
stos
sbb
inc
je
mov
test
sbb
dec
xchg
cmp
mov
pop
sub
test
inc
jge
notl
adc
test
aad
popf
fistl
cmpsl
imul
ds
xchg
adc
xor
test
aaa
and
push
jne
addl
xchg
lods
cmp
aam
push
inc
pop
xor
dec
or
push
pushf
cmp
sahf
push
sbb
and
pop
dec
and
mov
cmpsb
incl
adc
sub
mov
lcall
ret
negb
imul
clc
popa
dec
int
pop
loop
inc
mov
xchg
lret
push
xchg
mov
fnstsw
xchg
lret
sbb
insb
jne
lods
adc
dec
lret
es
loopne
xor
cwtl
inc
inc
push
xor
fdivrl
out
dec
sub
mov
sub
mov
ret
insl
jmp
mov
pop
mov
loopne
jecxz
mov
repnz
int
add
mov
sahf
out
call
and
hlt
loop
cld
inc
and
sub
ret
cld
adc
sar
xlat
outsl
fadd
push
lods
jl
cmpsb
xor
xor
jbe
jmp
and
aam
leave
in
loop
or
pop
push
sbb
push
mov
gs
inc
xor
lret
enter
aam
sbb
enter
inc
jo
push
dec
mov
adc
jb
nop
loopne
jl
addr16
cmpsl
sbb
lods
xor
add
add
test
jb
sahf
jle
dec
insb
ficoms
ja
jb
ljmp
or
mulb
adc
imul
mov
sbbb
adc
ss
mov
fst
incl
das
jecxz
push
adc
jo
movsl
push
xchg
or
xor
sahf
sbb
mov
cmp
add
mov
pop
mov
fdivr
xchg
ljmp
lahf
push
mov
push
lahf
arpl
insl
or
pop
push
jge
push
and
sbb
ret
push
andb
mov
sbb
jb
test
and
mov
mov
repnz
xchg
sahf
ds
das
and
decb
call
xchg
mov
test
sbb
cmp
pop
je
imul
adc
jge
push
xlat
scas
push
clc
clc
dec
or
ds
leave
sub
cmpsb
mov
mov
aas
imul
out
rorl
cmp
inc
push
cld
aad
mov
inc
inc
pop
and
ds
push
hlt
inc
daa
mov
mov
popa
pushf
cmpsb
mov
in
push
push
sbb
arpl
in
clc
data16
mov
xchg
or
pop
sbb
out
inc
add
in
movsb
test
jecxz
leave
cmp
cld
jmp
cli
add
sbb
data16
mov
idivl
ja
dec
and
xor
jae
add
adc
mov
mov
pop
loopne
xor
or
mov
aad
mov
arpl
jnp
cwtl
loopne
adc
cmovns
or
jns
cmp
xor
mov
and
xlat
pop
add
data16
add
fs
and
or
ret
cmp
lods
inc
movsl
and
pop
insb
jae
emms
add
push
pop
jl
or
push
sbb
out
mov
ja
repnz
les
loope
cmp
xor
sub
ljmp
jg
inc
scas
fldt
aas
ja
and
xor
mov
sbb
shl
mov
imul
sarl
xchg
lret
les
jno
fadds
sub
nop
mov
fdiv
test
fsubs
push
sarl
imul
cmpb
mov
inc
mov
sbb
outsl
push
cmp
jnp
push
imul
fcomip
dec
test
bound
cmp
jp
xor
xchg
ficoms
mov
jle
pop
sbb
cmp
xor
subb
push
mov
cltd
lds
adcl
data16
add
or
or
testl
leave
faddl
cmc
iret
outsb
lret
addb
out
clc
xchg
stos
lahf
pop
xchg
cwtl
jb
popf
cli
addr16
cltd
xor
mov
add
mov
pop
mov
loope
add
push
fwait
jb
push
cmc
cwtl
test
mov
push
inc
and
inc
mov
jnp
cmovne
sub
gs
xor
push
imul
and
and
xor
mov
cld
cmpsl
mov
or
insl
in
pop
shrl
out
sbb
loopne
mov
dec
out
lds
enter
testl
cmpsl
aam
scas
out
sbb
loopne
pop
repz
or
push
or
push
into
mov
and
mov
inc
dec
sub
bound
ja
ror
or
jo
sbb
xor
dec
push
xor
jl
push
clc
ljmp
lds
dec
sbb
pop
mov
dec
push
sbb
mov
mov
cmc
pop
ds
popa
mov
mov
clc
push
jno
mov
mov
aad
ja
daa
pop
sub
lods
idivb
dec
mov
jb
aam
nop
push
mov
rorl
pop
dec
and
stos
push
xlat
lock
jge
and
mov
cmpsb
jp
out
and
dec
push
mov
xor
icebp
in
ss
sarl
mov
into
xchg
iret
adc
mov
insb
jmp
iret
loope
scas
add
or
aaa
arpl
pop
aad
cld
push
out
pusha
inc
int3
fcmovnbe
cmc
mov
adc
push
sti
mov
lahf
repz
jbe
int
mov
sub
mov
cmpsl
mov
ja
leave
iret
scas
pop
sbb
mov
stos
inc
arpl
and
and
mov
mov
call
jecxz
add
repz
adc
in
cmp
jecxz
jno
mov
cmp
addr16
and
in
mov
push
cmp
and
or
cs
insl
dec
push
in
cmp
cld
push
inc
fdivrl
push
bound
pop
ss
xchg
and
add
lds
mov
repz
push
push
sbb
xor
enter
lret
test
rclb
das
and
nop
cld
push
les
push
jg
clc
cmp
jmp
add
out
cmpsb
ljmp
sbb
scas
mov
in
pop
jge
jb
jno
sbb
dec
std
adc
pop
adc
mov
jmp
and
fnstenv
push
mov
jle
pusha
inc
xor
ss
imul
mov
daa
sbb
jno
stos
cmc
pop
je
pop
sarb
push
xlat
aas
mov
cmp
sahf
pop
aaa
or
popf
ljmp
iret
inc
sbb
push
pop
mov
mov
cmp
pcmpgtw
jge
add
les
je
ror
cmpsb
es
push
testl
adc
jmp
mov
mov
lahf
inc
faddp
pop
jmp
sub
imul
bound
filds
xlat
mov
ds
push
mov
ljmp
jg
cmp
cmp
inc
out
dec
or
add
test
adc
icebp
sbb
xor
and
fidivrs
lea
popf
dec
xor
sarl
enter
push
lock
into
cmp
pop
add
inc
lock
das
fdivs
jno
ret
test
out
rorb
cmpsb
rcr
in
fcompp
mov
xchg
stos
shll
mov
out
imul
imul
pushf
mov
sbb
sub
cmp
test
dec
xor
nop
inc
adc
ror
xchg
sbb
lcall
out
data16
sbbl
xor
fbstp
sbb
dec
loop
test
mov
scas
ljmp
filds
push
and
notb
jge
outsl
nop
sbb
fistpll
sub
cwtl
adc
je
test
jge
bound
pusha
out
scas
mov
sbb
mov
inc
outsb
jecxz
pop
addr16
in
cmpsl
pop
sahf
cmp
mov
leave
fnsave
xchg
mov
mov
push
mov
lret
jno
dec
jmp
pop
fmul
cmc
push
call
ret
sbb
iret
test
ds
je
pop
iret
shll
sub
xchg
imul
lahf
pop
cs
sbb
int3
jle
xchg
pushf
fwait
lock
mov
sub
out
lret
stos
jmp
xchg
xchg
xchg
add
enter
dec
fstpt
mov
push
inc
leave
inc
lods
jl
and
mov
mov
pop
jb
and
lret
and
inc
and
push
cmp
flds
jg
pop
mov
push
hlt
das
roll
aaa
in
cmp
sbb
adc
mov
mov
xor
insb
pop
xlat
push
rcl
mov
in
cmc
mov
addb
sub
lock
cmp
adc
pop
cmp
pusha
aad
pop
lret
jnp
sahf
popf
test
les
aaa
mov
sahf
pop
rcll
add
mov
mov
aad
pusha
xchg
jbe
lcall
push
jle
pop
add
mov
loopne
std
jmp
mov
mov
lahf
imul
movsb
pop
js
das
xchg
cmp
dec
add
cmp
dec
in
mov
aas
jbe
xlat
inc
repz
adc
insl
dec
fidivl
out
and
xchg
jnp
mov
icebp
lods
movsl
daa
xchg
testb
subl
movsb
cmp
mov
es
imulb
repz
sub
adc
fistpl
jecxz
fisubl
jno
cmp
sub
rcrl
xchg
mov
mov
hlt
inc
loope
sub
fsubs
or
loop
inc
ret
das
test
shlb
iret
adc
out
stos
arpl
xchg
sbb
jbe
jo
xchg
shl
mov
movsl
mov
test
xchg
mov
and
adc
inc
jp
or
test
sub
out
imul
xchg
and
dec
jns
sbb
data16
cmp
sbb
hlt
mov
gs
cmpsb
add
stos
inc
sahf
and
lea
inc
fsubl
sbb
add
and
popf
and
leave
xor
ss
iret
sub
and
arpl
jp
lcall
test
sbb
or
out
jmp
xor
cltd
xchg
lea
out
jae
out
pushf
outsl
sbb
mov
mov
in
jmp
js
adc
mov
data16
popa
mov
adc
mov
pop
lcall
lret
pop
popf
fcmovb
aam
sbb
and
cmpsb
inc
adc
add
in
scas
push
xchg
push
movsb
js
jge
add
mov
out
inc
sar
lcall
into
into
xchg
bound
lret
xchg
gs
dec
cmc
out
mov
scas
pop
aas
pop
or
arpl
clc
xchg
pop
pusha
popf
xchg
fistps
jne
lea
dec
or
lcall
mov
jl
jmp
xor
pop
and
push
or
movsb
or
xlat
add
lahf
mov
rcrb
nop
aaa
popf
movsb
shlb
or
outsl
iret
stos
orb
or
cmp
and
jl
sbbb
sub
xchg
pop
sub
test
add
xchg
sahf
or
pop
fstpl
aad
lds
cmpsb
sub
add
test
mov
cmp
sub
sbb
pop
push
adc
mov
dec
push
aas
cmp
sbb
ljmp
push
or
seto
pop
pop
jb
inc
fistps
inc
add
int3
scas
jbe
sub
mov
je
loop
xchg
stc
inc
inc
orl
nop
imul
cmp
clc
jle
and
rorb
clc
xchg
xor
xor
mov
cli
fwait
jecxz
push
push
sbb
das
js
inc
inc
scas
scas
dec
push
fwait
dec
dec
sub
push
and
call
and
fcmove
jns
andb
sbb
lds
mov
jecxz
insl
outsl
out
mov
mov
mov
mov
dec
mov
ret
popf
cmp
movsb
outsl
cmpsb
sarl
adcl
xchg
fstl
scas
addb
test
cli
out
sub
adc
pop
cmpsb
xor
mov
mov
jns
lret
int3
or
jnp
inc
popa
ret
imul
mov
outsb
ficoml
mov
imul
out
ret
xor
pop
rol
hlt
mov
add
icebp
adc
jno
andb
mov
aas
cmp
orl
cmp
and
repz
pop
pop
rol
movsb
dec
sbb
mov
sub
out
std
ret
jp
pop
mov
lock
cmp
mov
les
imul
gs
sbb
mov
add
sti
bound
je
ror
loop
inc
out
in
and
pop
jecxz
subb
out
xor
repz
cmp
std
out
dec
push
into
inc
inc
mov
push
subl
push
and
test
mov
fwait
dec
les
dec
pop
cld
js
sbb
shlb
or
cmpsl
add
jo
inc
aaa
mov
mov
in
cmp
lds
jbe
adc
js
test
sbb
pop
adc
testl
iret
xchg
in
cmp
adc
bound
jae
pop
mov
enter
xor
mov
xor
ret
and
shl
xchg
js
outsl
into
dec
sbb
lret
imul
pop
sahf
mov
sbbb
push
and
mov
aaa
jecxz
sub
mov
mov
mov
add
push
and
xchg
flds
popf
pop
jbe
nop
push
push
gs
fisubrl
jp
mov
dec
mov
adc
sti
inc
andnps
lock
and
mov
ljmp
mov
shl
lret
mov
sbb
mov
stos
mov
xor
dec
lock
xchg
popf
hlt
rcl
pop
sbb
mov
jmp
out
out
pop
mov
fidivrs
and
push
push
gs
gs
cli
pop
in
add
cld
lds
pop
xchg
cltd
popa
jge
rcr
mov
ret
enter
test
pop
mov
push
mov
sbb
dec
pop
jg
jge
rcr
lret
call
cmp
sub
push
inc
sub
sysenter
loope
xchg
fistpl
insb
aam
xor
pop
fnsave
xor
lret
mov
outsl
sub
mov
jne
lock
mov
dec
push
std
jne
mov
mov
push
sub
ja
das
lea
sysexit
pop
mov
mov
or
push
cltd
shrl
jmp
inc
stos
sub
lods
mov
fsubrs
inc
fstpt
inc
bound
test
mov
mov
or
shr
pop
es
jle
jge
dec
out
aaa
inc
out
into
or
cmp
inc
sub
pop
stc
pop
ljmp
adc
repnz
scas
js
popa
dec
pop
stc
cltd
dec
lahf
cli
jmp
push
mov
test
mov
in
adc
stos
jbe
sub
adc
fdivr
xchg
sbb
adc
out
sub
sbb
fildl
xchg
dec
rcl
cmpsb
cmp
xlat
lock
jmp
iret
rorl
sub
jecxz
scas
mov
cmp
mov
shl
mov
sub
cli
je
inc
iret
popf
stc
mov
pop
jg
pop
inc
pop
lcall
mov
jmp
mov
lretw
dec
fldl
mov
mov
dec
loop
lea
and
call
mov
cmc
popa
lahf
scas
jae
xchg
mov
mov
xor
adc
inc
mov
xor
dec
mov
mov
sub
or
loopne
mov
dec
js
shrl
test
push
addb
dec
push
mov
fdivr
add
loope
jb
inc
cld
cwtl
cmp
pop
leave
xor
popf
sub
jb
out
add
int
or
xchg
pop
push
or
mov
mov
cld
mov
mov
and
ret
xchg
push
push
popa
gs
xchg
stos
mov
call
push
mov
movsl
inc
movsl
ret
int
sbb
mov
arpl
in
push
dec
jge
mov
test
fcoms
dec
pop
arpl
fdivrl
push
out
lret
jl
insl
mov
sarb
loope
insb
sbb
mov
mov
jmp
out
xlat
dec
jne
aas
and
adc
es
fcompl
add
scas
add
cmc
and
mov
dec
fiaddl
movswl
into
imul
ret
xchg
cmp
push
movl
xchg
pop
or
jo
mov
mov
cwtl
cmp
repz
cmpsb
das
xchg
xchg
push
xchg
out
mov
push
push
xor
or
jmp
in
adc
lea
mov
scas
mov
pop
xrelease
xor
adc
jge
sbb
shrl
push
fildl
test
movsb
mov
mov
mov
jmp
jle
inc
hlt
sbb
int3
lret
cwtl
repnz
rolb
jl
add
and
jecxz
sti
dec
leave
js
scas
fistpl
add
mov
jbe
cmc
stos
push
dec
adc
jnp
sti
pop
in
mov
mov
stos
pop
imul
mov
mov
ja
data16
andl
fwait
sub
movb
lods
mov
fisubl
adc
add
mov
sub
cwtl
xor
subl
dec
inc
test
imull
scas
loop
xor
pop
pusha
iret
pop
inc
or
leave
shl
daa
lahf
pop
lods
cmp
sbb
arpl
sbb
mov
sbbb
cmp
outsb
mov
das
loopne,pn
out
xor
and
adc
dec
inc
inc
add
add
das
sbb
jae
jbe
mov
test
or
adc
mov
subb
aam
ret
jb
movsb
sub
dec
inc
xchg
pop
pop
mov
negl
leave
mov
pop
adc
push
sub
mov
dec
sbb
jmp
add
ret
popa
push
push
or
out
pop
les
aas
xor
icebp
jne
fbld
jne
pop
jecxz
and
movsb
jo
clc
push
pop
lahf
xchg
jecxz
fdivrl
pop
outsl
in
ljmp
mul
xor
jle
test
jg
idivb
cld
sahf
pop
jg
sub
pop
dec
jl
enter
testb
push
sahf
outsl
add
test
mov
xchg
pop
pushf
inc
jle
nop
mov
aad
adc
xchg
push
sbb
xor
sub
sbb
mov
jecxz
sbb
xchg
jecxz
andl
push
lock
imul
sub
repz
es
inc
repz
xor
out
idivb
mov
loope
push
test
xor
repnz
out
mov
lret
cmp
adc
xchg
mov
fisubrl
mov
insl
cmp
jbe
xor
xor
adc
mov
fucomi
sbb
push
or
add
push
push
inc
push
push
inc
cmp
xchg
rclb
or
ss
stc
jnp
leave
popf
rorl
and
cmp
xor
push
xor
dec
enter
sbbl
xchg
in
into
xchg
xchg
je
shrl
mov
outsl
fldl
addr16
sub
sbb
pop
stc
lods
or
xchg
mov
pushf
xor
popf
int3
pop
xchg
xor
add
xchg
lcall
jo
mov
pop
lahf
insb
adc
lcall
in
test
xchg
jnp
add
pusha
mov
mov
sbb
pop
push
jo
jns
add
imul
mov
push
div
lock
pusha
mov
das
mov
movsl
ja
pop
and
push
dec
mov
mov
sbb
mov
push
sbb
shrb
pop
mov
cmp
outsl
cwtl
adc
inc
dec
cmp
outsl
nopl
mov
mov
stos
xor
jg
arpl
clc
daa
test
xchg
adc
xor
shll
mov
cld
ds
movsb
cbtw
xchg
mov
dec
xchg
mov
mov
push
mov
lds
push
or
mov
adc
jbe
in
adcl
lahf
dec
jae
imul
aad
pop
xchg
sbb
mov
jl
icebp
cmp
ror
in
push
xchg
enter
and
fsts
xchg
ret
and
and
mov
dec
jnp
sub
or
cli
sub
dec
adc
cmpsb
test
mov
jnp
jl
push
movsl
outsl
mov
add
xchg
mov
inc
mov
repz
xor
and
or
sub
mov
lods
mov
clc
mov
or
mov
push
arpl
mulps
adc
inc
dec
pusha
mov
xor
scas
test
bound
fucom
jg
cmp
ja
add
loope
stos
adc
lea
adc
jmp
dec
outsl
mov
lea
testb
daa
dec
add
subl
cwtl
pop
add
clc
push
inc
popa
fucomp
fdiv
popf
cs
rol
dec
out
ficomps
inc
movb
push
lret
mov
push
test
lea
mov
and
repz
fcomp
stos
or
pushf
hlt
mov
sbb
mov
mov
pop
add
outsl
adc
movsl
sub
pusha
jecxz
adcb
lods
inc
mov
cld
pusha
rcrl
xor
dec
iret
andl
jp
jns
arpl
push
in
jp
and
js
fwait
aas
xor
iret
mov
arpl
icebp
sub
xchg
mov
lods
in
add
or
dec
aad
add
push
xchg
xchg
fucomi
cltd
sub
pop
sbb
aas
lcall
or
pushf
out
insl
xor
sub
ficomps
jmp
lret
int
popf
ret
into
call
sahf
test
push
add
xchg
cmp
inc
or
jo
push
movsb
jg
imul
insb
xchg
add
cli
mov
cltd
add
jg
mov
dec
mov
sub
lret
cmp
inc
push
sbb
andb
mov
cmpb
push
inc
inc
test
lret
jne
xchg
mov
imul
dec
cld
mov
push
out
lret
mov
outsb
lock
mov
rcll
popa
or
pop
out
pop
out
vpacksswb
mov
and
cmp
dec
push
xor
sub
adc
idiv
iret
cmc
cmp
jbe
stc
sbb
mov
lods
jge,pn
add
rorl
pop
scas
out
pop
lods
dec
sub
fldl
sbb
mov
jo
pop
push
cmp
adc
rcrl
and
int3
aam
fwait
rclb
jne
lret
push
push
xchg
fcomps
out
cmp
mov
inc
xor
pop
imul
jp
sub
fsubr
sub
mov
push
mov
sar
jnp
ror
int
and
lret
iret
stos
lret
sbb
nop
sbb
cmpsl
and
and
pop
leave
gs
lock
cld
pop
not
dec
ss
dec
sbb
rcrl
repnz
hlt
xchg
rcll
add
shll
sbb
cwtl
push
test
jle
pop
rcr
inc
inc
in
ret
mov
stc
cmp
sbb
inc
xorb
push
sub
lods
arpl
sbb
icebp
push
in
xchg
xchg
jb
fucomp
xor
dec
adc
out
mov
nop
dec
xchg
pop
sbb
mov
adc
mov
add
gs
pusha
scas
mov
pop
imul
int
sbb
add
push
fcmovbe
daa
xlat
stos
mov
mov
repz
xor
jl
ret
mov
sbb
cld
mov
aas
jnp
lea
jle
test
mov
xchg
popa
sti
dec
mov
push
sub
out
int3
aam
test
in
std
cmp
jmp
dec
mov
mov
or
mov
dec
ja
lret
data16
ficoms
or
das
scas
lock
adc
pushf
pushl
pop
and
add
scas
adc
and
sbb
xor
sbb
mov
dec
popa
mov
pop
cmp
mov
dec
jle
jp
aam
ss
andb
icebp
test
cmp
sub
or
fnstenv
jg
mov
jno
push
jecxz
xchg
sub
cmp
xchg
dec
mov
adc
xchg
sub
les
adc
mov
xchg
pop
push
imull
push
ljmp
mov
mov
add
xchg
mov
cmpb
in
pop
inc
lods
clc
aaa
les
insl
mov
push
pop
ret
mov
pop
jecxz
insl
mov
xchg
jge
push
push
push
lret
pop
loope
xchg
mov
lds
popw
pop
mov
push
sbb
clc
pushf
dec
push
loop
nop
jb
jmp
push
out
iret
cmc
dec
std
jg
mov
cmp
sub
cmpsb
sub
pop
ss
iret
aaa
fnstsw
sahf
cmp
and
or
addr16
push
andl
out
inc
leave
scas
add
mov
stc
pop
nop
ja
xchg
add
mov
push
pop
sub
scas
pop
cmp
mov
dec
loope
in
enter
mov
cmpsb
lcall
cmp
adc
jl
and
lcall
arpl
inc
fidivl
popf
dec
push
icebp
dec
pop
daa
jecxz
sbb
bnd
sbb
fsts
xor
push
cmp
es
mov
jge
iret
outsb
stc
hlt
movsb
hlt
ljmp
mov
sti
movsb
fwait
cs
xor
jb
es
pop
push
pusha
inc
and
jecxz
add
jnp
jecxz
arpl
pop
jecxz
fsubs
inc
mov
xlat
pusha
scas
clc
lock
shl
add
lahf
add
dec
arpl
dec
rorl
jle
sbb
dec
xor
std
and
xlat
push
enter
lods
das
cwtl
jp
cmp
repnz
sahf
push
cwtl
subb
dec
jne
sbb
cs
ljmp
mov
push
sahf
outsl
push
out
int
push
shlb
pop
jle
xchg
les
mov
xchg
repnz
fstpl
bound
or
mov
cwtl
pop
data16
push
cmp
imul
andb
test
sbb
fs
and
and
lods
test
repz
xchg
adc
das
dec
mov
pusha
cmp
or
inc
jno
fdiv
push
fbld
xor
xor
jb
sti
lahf
jg
cmp
xor
pop
cld
lea
push
xchg
mov
jle
dec
xchg
mov
movsl
test
dec
xchg
push
push
in
cmc
mov
or
scas
push
or
xor
cmp
add
dec
test
adc
dec
push
push
adc
cmp
jp
dec
xchg
out
jp
inc
cmpsl
clc
xchg
mov
inc
push
inc
jmp
add
movsb
jge
addr16
jge
cmp
jmp
je
repnz
inc
or
push
loop
mov
mov
inc
xor
repz
inc
sahf
inc
imull
ret
fdivl
cmp
jns
pushf
jl
xchg
or
pop
dec
mov
xchg
mov
aad
cld
ja
nop
mov
std
push
sub
idiv
fs
push
xchg
pop
mov
rcll
pushf
xor
mov
outsb
aaa
lret
xor
pop
jo
shl
fstl
ret
sbb
in
cwtl
dec
lods
lock
js
mov
push
test
mov
push
mov
in
test
ss
repnz
sti
mov
mov
jno
cmp
add
mov
jle
fwait
mov
cmp
in
add
cmp
mov
jbe
sbb
mov
xchg
adc
cmpsl
pusha
shlb
adc
push
scas
inc
imul
jnp
dec
sub
mov
rcl
es
dec
xchg
int3
cld
aad
pop
out
cmpsl
scas
sbb
jbe
cmc
sub
cmp
mov
mov
in
ficompl
xchg
add
negl
mov
inc
mov
js
les
mov
lret
cmpsb
and
fldt
lret
bound
lea
inc
mov
shll
pop
xor
orb
dec
out
mov
cmp
jb
ret
jecxz
cli
xor
lock
pusha
sub
jbe
inc
inc
cmp
loopne
dec
outsb
addr16
sub
sub
das
mov
jge
xor
cmpsb
mov
outsb
jno
std
popa
aam
mov
add
push
clc
lret
jb
fdivrp
leave
imul
or
outsl
ret
mov
jge
xchg
xchg
lret
pop
repnz
pushl
pop
mov
add
push
adc
adc
inc
jmp
shrb
jle
fldl
inc
sbb
lods
pop
stc
cmpps
fldl
inc
cli
mov
out
outsl
cs
stos
xor
sbb
dec
addr16
xor
dec
mov
repz
ja
mov
or
mov
stc
rcrb
jecxz
sarl
lea
rcll
mov
jg
mov
inc
sbb
jmp
dec
pop
or
loope
dec
lods
sbb
push
aaa
insl
xchg
xchg
push
imull
mov
sbbb
sti
adc
sbb
call
add
cli
jp
xchg
pop
loope
adc
xchg
test
cmp
dec
stc
dec
push
cli
push
jae
sub
ss
mov
pop
adc
lods
enter
mov
out
addr16
xlat
jns
dec
xor
andb
adc
add
negb
cmc
leave
jp
jnp
test
outsl
xchg
andps
addb
pop
xor
test
outsb
push
data16
lock
dec
lcall
and
pop
xor
fidivrs
lcall
mov
mov
arpl
lret
stc
mov
aam
fwait
add
push
or
jno
cmc
mov
rcll
adc
ds
sbb
jo
andb
sbb
lret
mov
or
outsl
shll
sub
xor
aaa
jne
jo
ljmp
jecxz
shlb
mov
adc
test
jns
adc
lods
jno
xlat
xchg
pop
lahf
xacquire
clc
or
out
aam
dec
popf
rcl
int
jne
mov
cmp
fcmovnu
in
stos
dec
loop
cmp
movsl
sub
movsl
cmp
xchg
add
sub
stos
mov
mov
xor
sarl
fistl
popf
mov
int
ret
popf
sub
mov
xchg
sub
pop
mov
xor
out
push
mov
adc
out
aas
mul
push
fimuls
or
adc
enter
mov
push
sarl
adc
or
push
outsl
adc
in
sub
mov
mov
lds
pop
iret
scas
cli
sbb
mov
sahf
std
mov
mov
xor
ja
push
shl
ret
mov
scas
sbb
cs
leave
fimuls
adc
fbld
gs
loopne
sub
jp
ret
daa
or
pop
mov
js
scas
xchg
xchg
push
lcall
test
xchg
xchg
test
loop
roll
inc
lods
fdivrs
sbb
adc
notb
shll
xor
divl
adc
shlb
aas
push
dec
lea
fs
popa
icebp
aam
xchg
xchg
push
jp
test
push
aam
mov
addr16
cwtl
jns
into
pop
test
xorb
flds
jge
cmp
jle
pop
pop
repnz
std
jbe
arpl
dec
or
int3
dec
fsubr
pusha
aas
ss
pop
and
stc
mulb
inc
push
lds
cmp
cltd
lea
das
nop
mov
sub
lret
sub
outsb
mov
pusha
inc
in
gs
je
xchg
push
mov
dec
loope
xor
rcll
fadd
ffreep
sub
pushf
pop
js
loope
addr16
jg
lods
push
push
movsl
xor
imul
cmp
adc
pop
lds
dec
pop
in
sbb
into
out
jo
pop
mov
xor
ljmp
sub
xor
sub
jge
lret
pop
addr16
push
xchg
fistpl
sar
mov
jl
fldenv
shrl
into
xlat
loope
negl
cmp
xchg
sbb
test
shll
arpl
mov
and
mov
pop
mov
push
ficompl
decl
in
pop
les
lret
pop
xor
adc
lea
jnp
int
pop
arpl
jmp
popf
cltd
sub
js
push
xchg
lret
push
test
jp
stc
les
pop
push
cld
aad
test
inc
add
movsl
dec
xor
std
and
mov
xchg
add
shl
cmp
imul
scas
lcall
sub
mov
test
shlb
lods
vprotw
pop
xchg
adcb
inc
mov
xchg
cmp
hlt
nop
mov
xchg
push
lock
icebp
mov
icebp
adc
xlat
pop
push
cld
addl
inc
pop
mov
push
addr16
push
mulps
mov
push
xchg
lret
or
jae
lds
inc
pause
outsl
jmp
ficoml
lcall
out
out
add
mov
loope
add
jo
clc
dec
loop
pop
sbb
ss
sbb
je
decl
das
out
insl
jae
aam
into
lret
adc
cmp
mov
mov
dec
jmp
xchg
out
push
ja
andb
push
cli
add
sbbb
push
mov
gs
out
xchg
jno
dec
mov
scas
or
bound
aaa
xchg
imul
mov
shll
xor
arpl
or
out
mov
fs
pop
insb
xchg
jle
inc
movl
push
inc
fcomip
sub
flds
fs
daa
outsb
cmc
icebp
pusha
fwait
cmp
ja
mov
jno
mov
outsb
dec
dec
add
pop
mov
data16
adc
fisttps
aas
jo
jle
icebp
push
or
int3
jecxz
jl
das
fisubrl
adc
dec
and
dec
arpl
xor
push
cmp
insb
cli
push
ja
mov
mov
jl
enter
jmp
sbb
and
pushf
inc
lock
dec
cmpsb
stc
sbb
mov
test
mov
fiadds
mov
aam
outsb
movsl
and
xchg
ds
lods
lock
mov
mov
insb
mov
xchg
roll
adc
test
insb
lock
dec
fwait
inc
add
popf
cs
shlb
dec
sahf
in
pop
insb
cmpsb
add
pop
ss
mov
sub
jmp
sbb
insl
hlt
or
mov
aas
out
sti
sbb
mov
jg
pop
xor
mov
test
sti
jbe
mov
push
dec
sub
jns
jle
cmpsb
push
sub
dec
lahf
xchg
int3
repnz
icebp
inc
xchg
adc
decl
mov
pop
iret
ds
nop
fwait
mov
orb
je
popf
dec
fimuls
push
xor
sahf
popa
sub
jge
xchg
ficoms
repnz
lahf
sbb
loop
icebp
cmp
stos
adc
xchg
pop
es
pop
int3
sbb
inc
addb
mov
ja
xor
push
xchg
jmp
popa
rolb
ja
cmp
gs
xchg
or
push
sbb
sti
stos
push
mov
sbbb
ret
dec
pop
fnstcw
push
pop
outsb
mul
mov
xchg
jns
outsb
sub
xchg
jo
mov
loope
imul
in
lcall
pop
jnp
jecxz
lcall
inc
xor
or
adc
out
sbb
lahf
jne
xor
insb
xor
daa
mov
jmp
add
xchg
das
mov
jnp
sbb
sbb
int
push
ljmp
cmpsl
jecxz
pop
test
addl
mov
add
iret
es
lcall
add
add
jecxz
rol
inc
scas
nop
xor
std
leave
mov
mov
jb
les
sbb
cmp
and
cli
lret
cmc
std
mov
lea
pop
arpl
fdiv
mov
add
lea
cmp
or
push
push
mov
lods
icebp
scas
adc
bound
add
mov
xor
aaa
mov
adc
sarl
dec
push
mov
rorb
movsb
lret
and
test
push
out
xlat
inc
mov
mov
lcall
addr16
leave
xchg
sbb
test
int
arpl
mov
mov
cmp
test
hlt
sbb
outsl
cmp
add
int
add
in
inc
fcoml
mov
sub
mov
mov
cmc
jb
nop
xchg
daa
mov
xchg
jnp
and
push
movsb
cmp
adc
sub
aas
aaa
xor
sahf
inc
test
push
fcomip
movsl
loopne
sub
out
pop
iret
mov
xor
cli
repnz
sub
ljmp
or
leave
or
stos
inc
add
iret
neg
movb
jnp
ja
inc
fucomip
sbb
sub
shrb
pusha
cmp
xchg
jnp
cmc
sub
mov
fs
jns
sbb
std
or
and
out
cmpsl
dec
xor
jmp
mov
mov
stos
xchg
adc
jae
mov
jl
in
adc
pop
mov
or
inc
les
xlat
push
cmp
pushf
sub
aam
mov
in
outsb
mov
mov
xchg
int3
insl
dec
cmpsb
pop
push
pop
cmpsl
mov
shr
push
sub
fwait
stos
pop
inc
icebp
xchg
loopne
lcall
sti
pop
cmp
pop
aam
and
xchg
sub
mov
adc
das
mov
ret
test
add
enter
xor
stc
insb
mov
sti
nopl
xchg
frstor
adc
inc
lahf
je
jns
rorl
xlat
lcall
aad
sub
pushf
sti
cmp
adc
adc
out
push
jo
push
xchg
sbb
arpl
shl
mov
pushf
mov
mov
lock
sub
in
popf
add
arpl
rcrb
sbb
insl
xchg
mov
sub
jmp
cld
aam
popf
insl
pop
loop
dec
jl
movl
or
mov
mulb
repz
jl
xchg
cmp
mov
es
push
outsb
push
cltd
sbb
mov
xchg
or
xchg
das
xchg
out
mov
ss
and
sbb
jnp
push
sarb
xchg
mov
mov
das
sbb
sbb
inc
enter
pop
das
jbe
je
imul
or
mov
lods
outsb
cwtl
jmp
std
fidivl
xor
iret
in
push
into
outsb
sbb
mov
mov
cs
je
push
lods
inc
lret
cmpsb
lahf
dec
add
js
fs
punpckhwd
cmpsb
into
jne
jne
pop
xor
sub
lahf
repz
dec
mov
add
pop
push
loop
popf
sbb
or
pushf
ret
pushf
mov
mov
dec
int3
pop
dec
jl
cmp
push
or
add
aad
cmpsb
jae
std
clc
xchg
fcomip
ret
mov
imul
shlb
push
cmp
add
arpl
enter
leave
push
or
ss
and
add
jno
lods
add
adc
mov
leave
cs
or
movb
dec
imul
jns
ret
mov
add
jbe
addr16
xor
sbb
imul
mov
pusha
mov
jecxz
push
xchg
loope
pop
testl
pop
xchg
mov
xchg
jle
lock
call
in
into
xchg
push
jne
xchg
clc
inc
outsl
out
pop
out
mov
xor
cs
adc
lods
mov
sarb
pushf
cld
pushf
ds
addr16
lret
and
mov
xlat
inc
in
into
cmp
inc
xchg
dec
inc
jo
sbb
pop
into
dec
out
data16
repz
mov
insl
iret
mov
cmc
loopne
les
aaa
push
push
int3
xchg
xor
mov
fcompp
push
leave
push
mov
add
add
pop
mov
rcll
js
xor
popa
stos
pop
mov
js
arpl
adc
xchg
push
xchg
shlb
jmp
frstor
test
add
outsl
xor
shrb
aam
jmp
push
cmpsb
cmp
and
cltd
or
pop
sub
add
or
dec
lods
dec
std
movsl
or
and
or
loopne
mov
imul
adc
cmp
pop
jno
ficoml
jmp
mov
cld
jne
jno
sbb
xorb
mov
rclb
mov
aas
jno
xor
add
int
lods
leave
out
and
xchg
roll
ds
sub
mov
or
es
push
push
jne
cmpsl
fisubs
mov
pop
imull
push
daa
cmp
xchg
push
push
or
jne
mov
jg
jmp
xor
pop
jbe
hlt
mov
pusha
shl
fisubrl
shrl
lock
fistpl
and
fistpl
in
lods
inc
lahf
inc
jb
enter
test
pop
push
pop
push
sti
mov
mov
inc
adc
xchg
mov
test
dec
std
nop
js
push
adc
out
push
mov
sub
pop
jne
inc
adc
movl
movsl
aas
mov
jl
insl
shrb
cwtl
hlt
mov
popa
adc
aas
inc
add
ret
std
imulb
mov
xchg
dec
sub
xor
jl
pop
mov
and
stc
add
ret
nop
mov
bound
mov
cmp
xchg
jo
adc
jnp
movb
add
in
mov
lcall
xor
mov
es
or
dec
das
inc
xchg
cmp
sbb
loope
pop
xor
push
pop
mov
sub
xchg
ja
clc
xchg
insb
xor
lret
push
cmp
lds
je
sub
outsb
mov
lock
push
orl
cmp
pop
insb
or
mov
mov
inc
int
incl
xchg
push
xchg
cmc
jb
lods
out
cvtpi2ps
idiv
pop
pop
lods
xchg
push
sbb
das
inc
jl
jmp
cwtl
mov
push
repnz
pshufw
cwtl
inc
mov
ret
or
push
lret
pop
lahf
jge
cmc
jnp
jge
sub
int
test
mov
or
push
fiaddl
xor
add
inc
cs
lock
add
jo
int3
sbbb
pop
sbb
mov
insl
or
test
push
add
jo
or
addr16
xchg
mov
aam
pop
cmp
push
fucomi
sbb
cmpsb
enter
sbb
push
sbb
in
test
sahf
jne
aad
mov
out
dec
sub
in
out
std
shlb
loopne
inc
lods
jge
sti
jmp
push
xor
push
addl
sbb
mov
mov
mov
bound
testl
sbb
stc
pusha
shlb
ss
ficoml
inc
mov
scas
add
leave
cmpb
data16
dec
mov
or
cmp
sahf
xor
xchg
shrl
out
adc
fists
sbb
loop
or
cmp
fcom
or
aad
cmp
fwait
mov
test
inc
pop
inc
mov
rorl
jmp
mov
lea
sub
lea
pop
mov
ficompl
mov
ret
mov
test
andl
mov
push
jge
mov
xchg
in
cs
jns
ret
cmp
mov
inc
mov
in
mov
adc
clc
sbb
cmp
pop
int
xchg
movsl
test
rcl
dec
jmp
cld
sub
data16
iret
lret
jl
push
pop
mov
cmp
push
inc
cltd
sbb
cmp
lretw
cmpl
mov
lret
cwtl
mov
push
dec
and
loope
fstp
xchg
pusha
insl
je
inc
out
aaa
stc
lock
sbb
pop
lods
sbb
jns
pop
mov
jecxz
aad
imul
ficompl
and
insb
movsl
lret
xchg
test
and
enter
fmull
sbb
test
adc
loope
push
test
and
cmc
stc
imul
cmp
insl
inc
inc
out
push
push
add
rcrb
lret
sbbb
cmpsl
icebp
sbb
sub
lcall
aad
mov
xor
lret
fcomip
shlb
dec
inc
push
or
mov
pushf
imulb
lods
jne
dec
fwait
push
xor
mov
inc
imul
iret
xchg
test
in
jmp
ret
adc
xchg
fcomps
mov
scas
sub
test
sub
pop
cmpsb
sbb
loop
out
std
push
xor
insb
mov
dec
decl
imul
shrl
pop
push
jp
pop
setnp
push
in
push
imul
addr16
in
imul
fistpll
lods
sub
bound
cmp
ror
cmp
mov
lahf
cmc
jl
cmp
and
sub
xor
fiadds
aad
push
adcl
add
daa
dec
jns
jae
dec
mov
sbb
lcall
dec
push
out
insl
loopne
gs
xor
jbe
adc
sbb
stos
lret
pop
dec
adc
mov
xchg
sub
jg
sub
jne
and
ljmp
cmp
jge
hlt
pop
std
popf
lret
in
outsb
das
sbbb
leave
push
adc
sub
imul
xchg
mov
mov
sbb
hlt
push
push
inc
mov
pop
shll
arpl
xorb
lds
outsb
mov
inc
loopne
mov
inc
loop
push
sub
repz
test
popf
dec
and
sub
hlt
push
fs
ret
outsl
in
das
sub
dec
pop
decb
mov
int3
sub
or
jno
sbb
mov
sbbl
mov
ds
fcoms
loope
cmp
sbb
bound
repnz
jle
add
ja
mov
cmc
mov
xchg
push
stos
inc
mov
inc
adcb
ja
imul
iret
mov
es
outsl
sbb
insl
push
cmp
pop
inc
add
inc
cmp
adc
sbb
add
sbb
rorb
cmpsl
fisttpl
fndisi(8087
int3
stos
add
mov
cmp
insl
xchg
or
cltd
lret
aad
loop
lods
cmp
data16
stos
dec
hlt
mov
adc
sbb
and
shrl
mov
sbb
inc
mov
sbb
add
pushf
scas
popf
push
xor
rep
lahf
add
jns
pushf
sub
sub
mov
inc
lahf
das
insl
fs
hlt
mov
mov
fdivrl
mov
and
xor
pop
xchg
add
test
lret
xchg
lock
jns
popf
add
adc
pop
fcoml
int3
push
aam
sbb
movsb
enter
mov
or
out
jne
xlat
pop
or
mov
scas
mov
adc
in
dec
nop
out
xchg
in
xor
add
or
leave
popf
mov
mov
push
stos
in
int
jecxz
test
add
repnz
push
call
jmp
imul
aas
subl
cmp
mov
or
pop
outsl
push
xchg
fcmovu
push
add
xchg
sub
mov
mov
sbb
push
call
mov
sub
xchg
sarb
enter
xchg
pop
sahf
push
jo
and
in
mov
hlt
outsl
fwait
cltd
mov
xchg
jnp
icebp
arpl
bound
add
xchg
out
aad
pop
test
lahf
mov
cmp
pop
adc
sbb
test
repz
push
push
inc
inc
add
mov
mov
mov
nop
or
inc
sbb
outsb
xrelease
add
and
adc
jne
scas
xchg
pop
push
mov
rolb
sbb
int
pusha
dec
inc
ficompl
in
push
nop
iret
test
jle
inc
in
push
mov
push
pusha
aaa
sbb
sub
inc
push
in
leave
mov
add
push
shlb
data16
push
xor
data16
xchg
push
insb
hlt
ja
xchg
lahf
rorl
sub
xchg
mov
std
in
cmp
icebp
cld
mov
xor
and
fisubl
xor
pushf
aas
push
mov
mov
ds
imul
and
insb
push
inc
adc
ja
loope
jne
fbld
ljmp
sbb
aam
or
movsb
dec
push
mov
mov
mov
hlt
cmp
or
fsubrp
or
inc
std
xchg
jl
jno
jns
sub
add
push
jno
xorb
sbb
nop
pop
fmull
xor
or
xchg
xor
xbegin
cmpsl
xchg
push
adcb
push
scas
jg
lahf
adc
stc
insl
xor
xor
lds
cs
pop
inc
scas
packssdw
jg
push
shll
cmp
arpl
pop
mov
imul
pusha
or
adc
stos
lods
adc
shlb
pusha
jo
fnsave
sar
lds
orl
daa
or
cmp
lret
sub
sub
negb
test
add
sahf
ja
icebp
or
pop
sub
adc
sbb
cmp
leave
inc
or
mov
xor
cmp
mov
pop
iret
ljmp
xorl
xchg
insb
jo
sbb
pop
push
xchg
int
mov
pop
out
andl
jnp
pop
movsb
gs
mov
jp
dec
push
cli
repnz
jmp
mov
fbld
inc
mov
imul
mulb
mov
sahf
pop
insb
pop
cmpsl
sar
mov
enter
stos
jecxz
sbb
shrb
jne
push
dec
mov
inc
mov
dec
xchg
or
push
sub
xchg
ljmp
and
roll
push
in
fs
lret
out
test
insb
ret
ret
out
addl
add
and
mov
mov
cmp
sar
mov
sahf
out
outsl
pusha
push
ss
aam
fst
adc
or
mov
ficomps
inc
and
cmp
lea
rorb
inc
fcoml
push
mov
outsb
cs
sub
add
fdivrl
cmp
popf
xorl
dec
dec
or
gs
mov
add
jge
imul
sbb
pushf
loope
inc
xor
out
test
aaa
insl
das
xchg
mov
pop
or
cmp
fcmovb
dec
inc
mov
xlat
add
push
push
mov
add
or
dec
jmp
adc
cld
pusha
jnp
testl
loope
push
lret
sbb
in
jle
mov
movsb
push
jnp
xchg
into
outsb
pop
and
sbb
repz
jo
inc
mov
inc
andl
daa
js
jae
test
lods
lcall
cs
jbe
dec
jge
xchg
pop
cmp
mov
imulb
jno
mov
dec
iret
hlt
int3
jmp
add
bound
cwtl
mov
jge
sub
sub
cltd
fwait
push
leave
lods
or
out
sbb
push
scas
bnd
jp
push
addr16
sub
call
fiaddl
inc
in
arpl
xchg
aas
mov
aad
imul
mov
jle
mov
and
inc
mov
lret
je
mov
out
cmp
addb
out
xchg
aad
adc
pop
xor
stos
dec
cmp
adc
inc
add
test
lahf
mov
and
popf
sub
cltd
cmp
fildl
lea
pop
adc
aad
rolb
xchg
xchg
pop
fsubr
inc
push
lds
scas
xchg
xorl
adc
mov
sbb
and
jl
xor
xchg
cmc
dec
cli
xchg
mov
scas
sub
and
xchg
and
fcomps
cmpsb
push
adc
lods
mov
js
shll
push
aam
cld
scas
mov
mov
lods
sub
lock
push
dec
in
jne
xorl
sti
sub
sub
pop
jbe
dec
push
xchg
push
xor
sub
sub
cli
xchg
cmp
cmpsl
cli
and
mov
push
fxtract
sub
flds
xor
jae
imul
dec
jno
data16
mov
lahf
int
push
and
xor
jmp
push
adc
add
jne
push
iret
imul
pop
popa
dec
sub
adc
inc
aam
add
sub
jbe
ljmp
and
lock
sub
mov
cltd
xchg
aas
mov
je
das
xor
dec
xchg
popa
and
pop
imul
cmpsb
rorl
xor
mov
adc
sub
xor
and
sbb
pop
ljmp
jg
daa
add
repnz
roll
pusha
and
test
les
outsb
push
aas
popa
mov
notl
jnp
cmp
in
xorb
mov
lahf
mov
jae
fwait
jnp
jnp
lods
pop
ficoms
testl
xor
aaa
sub
repnz
cwtl
fiadds
mov
dec
xchg
dec
shlb
popa
fnstcw
lds
pop
out
sarb
into
adc
test
cmpsb
xchg
les
mov
daa
mov
mov
shlb
jecxz
mov
pop
insb
push
outsl
arpl
hlt
add
dec
enter
lods
add
mov
mov
jle
push
dec
sub
pop
mov
pop
xor
xor
inc
aaa
mov
fwait
cmp
add
cmp
sbb
gs
jecxz
andl
cld
mov
and
jno
mov
mov
inc
cltd
dec
and
pop
dec
adc
mov
aad
shlb
iret
inc
lods
add
adc
jg
mov
add
ljmp
outsl
xchg
mov
stos
fwait
leave
jno
mov
dec
mov
adc
cmp
xor
loope
cwtl
ljmp
adc
mov
sarl
wbinvd
push
lret
into
or
lock
and
xor
and
stos
push
push
pop
mov
hlt
push
idiv
lahf
mov
dec
add
inc
stos
xchg
imul
test
fcomps
jp
stos
sahf
bound
imul
lret
mov
push
push
mov
and
xchg
jbe
mov
cltd
and
xor
mov
fs
push
push
or
jno
cwtl
cmp
fidivrl
push
in
ret
fs
je
stos
mov
fsub
pop
imul
sub
mov
es
rcr
xchg
aam
xlat
jne
jne
sub
add
lcall
add
out
fidivrs
or
cmpb
xchg
aaa
out
pop
or
outsl
std
push
call
iret
sub
out
repz
mov
insl
mov
test
add
cmp
addl
in
test
in
push
pop
es
xchg
xchg
aam
int
scas
ret
iret
popa
jnp
shrl
mov
mov
out
sub
loopne
xor
push
cmpsl
mov
das
pop
nop
xchg
fcom
cmpsb
or
xor
mov
cs
jbe
in
test
and
pop
sbb
cmpsb
xchg
ficoml
rclb
jp
aaa
push
jp
cmp
add
imul
jle
shrb
sahf
mov
mov
mov
mov
cmp
imulb
insb
loope
cmp
mov
aaa
xor
dec
xor
mov
aaa
fst
icebp
cltd
push
andb
push
jns
cmovs
ret
jbe
cmc
xchg
pop
das
jmp
mov
test
mov
ret
sbb
arpl
pusha
and
stc
dec
stos
js
test
xchg
add
scas
jbe
dec
mov
pop
aaa
mov
stos
int
loopne
fildll
and
cmpsb
movsl
mov
xchg
push
or
mov
sub
roll
scas
xor
mov
cmp
cld
lcall
pop
mov
int
pop
cmp
insl
xorl
loope
test
test
sti
push
mov
xchg
cmpsb
je
sub
jp
or
inc
push
push
xchg
dec
add
jecxz
sbbl
iret
rolb
cli
sub
cmp
aad
in
lea
and
jns
lret
inc
push
cmpb
push
cmp
pop
cmp
push
jge
inc
xlat
add
shlb
pop
lock
test
mov
mov
or
loopne
xor
fstps
std
push
stos
mov
or
lahf
adc
xor
or
pop
adc
in
sub
sub
jne
inc
mov
push
sbb
enter
and
inc
cmp
or
mov
jmp
inc
fisubrs
pop
repz
sbb
in
in
insb
push
jmp
insl
or
rolb
push
xchg
stc
in
ret
imul
push
pusha
adc
adc
mov
sbb
movsb
jne
shlb
aam
cmp
add
mov
push
inc
scas
mov
bound
mov
inc
sbb
pop
mov
and
fs
add
dec
ret
in
scas
and
fildll
lods
xchg
mov
imul
sub
ljmp
iret
sahf
loope
adc
jae
hlt
xchg
outsb
mov
gs
or
cltd
push
popf
pushf
jp
add
xchg
out
lahf
xchg
xchg
xchg
push
clc
mov
ja
pop
dec
xchg
js
nop
fisttpll
jecxz
mov
jl
out
pushf
lcall
adc
push
mov
popa
jns
popa
jae
inc
pop
jnp
cltd
mov
xor
ror
movsl
add
in
or
fisubs
lods
add
xorb
jp,pt
xor
repz
hlt
mov
loop
loopne
push
mov
sbb
stos
or
in
mov
into
jl
lock
out
pop
test
xor
cld
push
xorb
sti
repnz
out
call
je
subl
js
test
inc
cmpsl
xor
pop
add
push
add
and
push
les
ret
hlt
shlb
pop
sbb
dec
mov
jnp
imul
daa
pop
jecxz
test
pop
adc
lods
popa
stos
xor
push
adc
cld
incl
popf
dec
mov
pop
cmp
inc
vpmaddwd
jnp
in
mov
mov
insb
dec
push
cmp
test
fisttpl
ret
int
jbe
sub
add
mov
rcl
pop
mov
push
adc
mov
je
repz
fs
movsl
lcall
test
push
es
lcall
sbb
jne
outsl
in
mov
cmp
sahf
cmpsb
adc
add
adc
fimull
mov
dec
push
insb
fnstsw
xor
ljmp
push
push
jle
dec
dec
mov
movsl
xchg
fiadds
scas
in
imul
lret
arpl
push
shr
mov
pop
fiaddl
cmc
adc
inc
adc
mov
and
mov
mov
add
pop
add
or
inc
or
fnstenv
sti
cmp
mov
pop
mov
or
dec
inc
inc
pop
sub
jp
sbb
lds
pop
dec
imul
lods
ficoms
dec
fadds
xchg
js
dec
sbb
pop
and
call
cmpsb
popf
add
cld
fidivs
push
adc
cmp
cmpsl
je
hlt
leave
inc
std
jp
sahf
jmp
mov
icebp
xchg
jp
adcb
jo
mov
inc
addr16
test
idivl
dec
aas
xlat
pop
fstpl
mov
push
int
sub
jg
sahf
or
dec
enter
sbb
ret
pop
pop
ror
out
mov
pop
lods
addr16
scas
into
nop
mov
imul
and
jnp
fwait
mov
out
adc
out
inc
fwait
dec
inc
pushf
or
clc
mov
and
and
add
rcr
leave
or
lock
imul
push
scas
nop
repnz
repnz
out
mov
push
test
fwait
xor
dec
xor
sub
mov
sahf
dec
lods
jnp
insl
inc
or
mov
or
bound
arpl
clc
aaa
test
sbb
or
cmp
pushf
dec
mov
xor
cli
loopne
cmc
cmpsl
sub
push
repnz
fstp
loopne
or
adc
arpl
cs
jl
gs
xlat
test
push
xor
iret
inc
fnstcw
pop
xchg
sar
mov
xchg
jno
pop
negl
dec
mov
outsl
mov
cmpsb
xchg
iret
fwait
push
adc
pusha
sub
hlt
pop
push
or
insb
xchg
mov
or
sbb
mov
inc
or
fcompl
adc
pop
ja
add
fwait
cmpsb
push
jno
pop
xchg
sbb
cmpsb
outsl
or
movsl
sbb
popa
out
aam
repnz
mov
in
sarb
push
inc
test
add
lret
rolb
inc
loopne
rolb
in
xor
jg
or
mov
jns
inc
mov
cmp
mov
neg
scas
push
jbe
add
push
xor
fs
ds
icebp
pop
mov
ret
ret
mov
loope
pop
xchg
pushf
jg
adc
fisttpll
adc
mov
stc
icebp
lahf
push
fistpl
nop
pop
mov
push
adc
mov
test
cmp
cld
mov
je
adc
and
mov
push
test
lock
jb
iret
dec
es
mov
addr16
sahf
or
push
out
sti
pop
pop
cmp
push
fdivr
sar
or
gs
test
stos
jle
imull
shlb
movsl
jbe
in
mov
rcrb
imul
dec
sbb
inc
xchg
cmp
xchg
sub
loopne
or
ret
aas
outsl
xor
cmp
jmp
hlt
leave
push
or
sahf
pop
sub
dec
inc
pop
lods
fistpl
pop
ljmp
xchg
push
stos
mov
std
jg
inc
push
rcrl
jmp
pop
lds
std
add
and
ljmp
cmp
lock
inc
fstpl
mov
lds
pusha
fwait
imul
inc
mov
dec
jno
jg
push
push
mov
mov
add
mov
xchg
std
and
shll
das
push
test
dec
add
mov
push
mov
adc
and
xor
jg
punpckhdq
dec
push
xor
fadds
fcomi
push
push
sbb
mull
mov
adc
aas
add
adc
ljmp
scas
mov
repz
pop
test
and
mov
mov
test
pop
push
dec
ret
sahf
stc
rclb
push
cmc
push
xchg
xchg
mov
mov
mov
fistl
xchg
xor
pop
arpl
bound
lods
jmp
cli
push
lds
popf
std
push
push
jnp
adc
push
sti
inc
ljmp
fwait
xchg
clc
mov
mov
mov
xor
shlb
dec
stos
dec
or
mov
arpl
movsb
sbb
xor
cmove
mov
inc
sbb
mov
sbbb
xchg
inc
movb
mov
mov
aas
mov
pusha
lods
scas
jne
and
lea
in
adc
inc
iret
mov
jb
ja
mov
pop
sbb
lock
mov
mov
je
jmp
mov
call
movsl
or
cmpsl
lahf
mov
das
add
lret
into
xor
dec
jg
pop
lahf
lods
arpl
je
xchg
push
and
mov
lea
jnp
xor
or
or
push
xchg
scas
sahf
loop
push
stos
lea
bswap
jecxz
dec
inc
push
add
mov
in
dec
rclb
sbb
push
xchg
stos
jbe
icebp
lret
cli
adcl
xor
call
mov
or
hlt
jno
push
pop
jecxz
sbb
and
lret
mov
xchg
push
mov
out
mov
dec
daa
pusha
dec
cmpsl
in
add
sbb
movsb
movsl
push
shlb
ss
mov
xchg
decl
sbb
pop
js
int
fldcw
jbe
sti
lods
xor
mov
rclb
mov
dec
call
mov
jmp
addr16
lcall
push
arpl
icebp
insb
nop
rcr
scas
sbb
sahf
sub
int
rcrb
cmp
inc
push
xor
fisttps
mov
push
xchg
xor
jl
mov
out
clc
inc
mov
jle
jle
mov
mov
std
sbb
notl
ja
push
ret
sbb
adc
mov
frstor
in
movsb
lds
adc
imul
subb
adc
push
and
daa
shl
lock
stc
adc
jae
mov
inc
sbb
daa
rcl
lock
les
pop
xor
dec
push
and
movsb
insl
jbe
lcall
mov
xchg
push
incb
mov
xlat
pushf
stos
in
icebp
ret
push
je
lret
mov
mov
loop
nop
mov
xor
cld
cli
in
push
test
divb
cmp
outsl
pop
inc
lcall
aam
imul
dec
jmp
jb
mov
or
mov
push
mov
dec
cld
jmp
xor
sti
adc
cwtl
mov
push
sbb
inc
popa
idivl
jmp
add
mov
lahf
test
loopne
inc
inc
rorl
pop
movsw
ret
add
jnp
cmp
jnp
xor
or
or
flds
mov
sub
cmp
leave
outsb
insl
sub
xlat
mov
xchg
add
in
sub
cmp
mov
mov
test
adc
mov
pushf
aad
push
pop
mov
pop
xor
scas
imul
lret
rcll
sahf
mov
jmp
push
mov
jecxz
lahf
xor
in
mov
je
shll
jg
push
dec
xor
push
adc
in
mov
inc
or
xlat
loope
cmpsl
shll
aaa
xor
push
mov
lods
jp
lock
add
mov
fistps
sbb
and
mov
add
mov
fdivrl
mov
sbb
ror
fbld
fldcw
sub
inc
inc
orl
jecxz
outsl
mov
push
sub
subb
mov
sbb
iret
daa
jg
sub
mov
cli
sub
call
push
stos
cmp
test
or
in
pusha
out
mov
ficompl
pop
lock
rol
mulps
adc
and
scas
les
shlb
test
data16
jae
mov
scas
je
push
xchg
xchg
mov
add
push
cmpsl
es
or
lret
in
insb
lods
and
jnp
adc
xchg
cmp
and
dec
repz
or
std
fcomip
int
inc
inc
xor
lods
inc
dec
jg
repnz
jmp
lock
fsincos
xlat
out
iret
mov
jns
ja
nop
das
push
outsl
push
push
push
rcr
xor
int
jnp
aad
xorb
push
inc
mov
mov
outsl
mov
out
pusha
add
sbb
push
ficomps
sub
sbb
hlt
xchg
fisttpll
xor
sbb
test
aam
popf
std
in
cmp
insl
push
dec
dec
insl
popl
lret
jne
fcomps
fwait
cmovae
cmp
cwtl
lahf
xlat
repz
je
mov
dec
int
add
push
cs
sarl
shl
mov
out
pop
xchg
outsb
sbb
fnstenv
loop
gs
pushl
jecxz
pop
iret
push
in
jecxz
and
jg
sbb
jmp
xor
jae,pt
out
cld
pushaw
jo
mov
jb
cmp
push
mov
lret
out
sahf
mov
in
into
xor
mov
xchg
shrl
cmc
into
inc
push
mov
pop
sub
sbb
leave
es
mov
cltd
dec
in
imul
into
pusha
xchg
lods
mov
test
gs
sub
fisttps
les
in
std
adc
psubsw
fmuls
or
mov
lds
das
mov
out
mov
ret
push
xor
scas
sbb
pop
fwait
push
adc
xor
pop
sarb
repnz
aaa
push
in
lahf
jle
jb
fld
lds
push
iret
ret
xchg
mov
xchg
es
decl
jns
lock
pop
mov
jle
mov
add
mov
mov
mov
rorl
outsb
addr16
mov
movsb
stos
ljmp
cld
in
js
stos
int
les
cli
ret
hlt
mov
push
mov
pop
inc
push
cltd
std
stos
jbe
loope
inc
leave
or
pop
enter
pop
adc
xor
mov
xchg
inc
sub
sub
jne
pop
and
stos
out
out
aam
mov
lahf
mov
xchg
sbb
jecxz
out
lods
icebp
in
enter
xchg
inc
adc
sub
pop
das
xchg
daa
lcall
xor
xor
add
dec
ret
pop
mov
lret
push
movsl
pop
xchg
mov
mov
mov
repz
sahf
mov
sub
es
jne
push
and
dec
movsb
push
or
cmp
dec
cld
mov
push
push
adc
mov
mov
sub
xchg
and
mov
filds
into
ljmp
xor
mov
lcall
sub
fwait
jo
inc
xor
or
xchg
popa
inc
das
pushl
ror
and
ljmp
xor
and
inc
rolb
inc
pushf
loopne
mov
in
outsl
dec
push
repnz
and
rep
sub
outsb
mov
sub
mov
in
mov
mov
push
cmpsl
movsb
ja
popa
mov
cli
in
xchg
sbb
pop
call
cld
inc
scas
cmpsl
out
and
jle
cmp
fs
mov
mov
lock
outsb
lds
cmpb
mov
aam
sbb
inc
xor
pushf
test
or
in
iret
or
sti
mov
lock
fstpl
loopne
in
movsb
clc
pop
repnz
cmp
xchg
dec
scas
in
xchg
jne
add
das
or
outsb
xchg
jmp
ss
inc
mov
and
addr16
xor
mov
jmp
notb
bound
mov
xchg
push
dec
lahf
movsb
xchg
sbb
testb
mov
mov
adc
jp
out
mov
pop
mov
dec
fimull
sbb
dec
or
mov
adc
inc
pop
push
dec
ja
lahf
test
insb
movsb
popa
adc
xor
fmul
push
inc
xor
test
stos
ret
xchg
shrl
or
inc
push
cmp
adc
xchg
daa
shrb
mov
outsl
fs
shrb
push
xor
xchg
ss
adc
aas
mov
xchg
bound
jb
aas
stc
jmp
mov
stos
test
stc
push
movsb
cmp
mov
fisubs
add
aas
fdivrl
mov
jmp
stos
shrb
and
or
rcrb
int
shl
test
or
fs
inc
ja
sbbl
out
fisubl
addr16
jge
fwait
cs
mov
jmp
pop
push
out
jns
mov
test
adc
jmp
iret
add
push
add
imul
clc
int
adc
dec
mov
xor
or
mov
xchg
push
lods
xchg
popf
fisttpll
sub
add
into
std
jle
pop
rol
jno
cltd
sahf
push
cltd
addr16
addr16
push
arpl
fldpi
xchg
xchg
sub
xchg
loop
mov
mov
pusha
sahf
mov
je
into
cmp
aam
xchg
jnp
xchg
iret
push
das
inc
sbb
xor
mov
ret
adc
pop
fiadds
imulb
pop
sub
inc
add
sti
sbb
test
and
leave
lods
or
fwait
daa
and
in
xchg
mov
jl
mov
stc
xchg
xchg
out
inc
mov
xchg
aad
cltd
pusha
push
or
xchg
fs
mov
fdivr
add
sbb
xchg
push
inc
or
sub
cld
outsl
jne
xorl
sbb
popa
movsb
pop
pop
xchg
loope
outsl
and
ds
ret
mov
jno
push
add
sub
and
mov
cmpsb
push
insb
mov
xor
inc
pop
cmp
insl
scas
push
adc
lods
ficompl
mov
div
test
out
cmp
cs
jns
jne
mov
out
or
and
push
out
pusha
sbb
aas
cmp
xchg
pop
sbb
testb
sbb
mov
insl
lock
mov
xchg
xchg
jae
inc
jne
pop
jno
inc
movsl
xchg
ja,pt
das
mov
or
inc
movl
push
sti
cmp
push
mov
scas
and
sub
aaa
ret
inc
cmp
and
and
jecxz
jecxz
inc
stos
cmpsl
add
or
adc
sbb
push
jp,pt
scas
mov
add
mov
adc
in
pop
scas
mov
enter
imul
es
lret
fidivrs
outsl
push
inc
insl
and
dec
test
aam
int
fwait
loopne
testb
lods
ja
mov
mov
xchg
scas
cmp
adcb
pop
mov
inc
dec
out
inc
pop
mov
insb
sub
pop
push
xchg
sbb
das
fsubs
lcall
inc
sbb
in
movsl
jbe
xor
mov
inc
xor
adc
out
dec
loop
jmp
sbb
divl
popa
rcr
into
ds
mov
lods
in
insb
dec
sub
pop
add
jno
enter
jns
sub
movsb
cli
adc
mul
rolb
enter
stos
inc
or
add
xchg
pop
frstor
inc
in
test
ds
iret
adc
imul
add
mov
lods
movsb
xlat
push
stos
jle
les
push
sub
es
lock
std
mov
add
push
inc
fsub
pop
shlb
jl
gs
std
gs
adc
divl
add
sub
insb
stc
or
xchg
pop
out
xor
inc
insb
xor
cmp
pop
push
out
aaa
mov
xchg
push
or
dec
add
jae
sbb
mov
test
fwait
adc
sbb
adc
testl
test
icebp
cli
mov
inc
add
cmpsb
inc
jae
sbb
cwtl
adc
xchg
hlt
cs
fidivs
pop
sbb
lahf
jmp
addr16
enter
rcr
xchg
adc
pop
adc
jnp
popa
and
decl
scas
movsb
mov
mov
scas
xlat
sbb
push
lds
cmp
xchg
cmc
push
stos
xor
popf
xchg
push
imul
push
xchg
push
mov
psrad
xchg
push
mov
cmp
test
out
scas
mov
pop
js
test
push
mov
insb
lret
dec
mov
cmp
scas
roll
xor
inc
cmp
and
daa
test
adc
call
das
push
dec
pop
das
add
cs
add
outsb
cltd
orl
mov
jno
gs
jmp
shll
cld
xor
push
fcom
je
insl
fisttpll
dec
imul
push
jmp
xlat
scas
sbb
or
pop
pop
in
out
mov
inc
lock
jp
gs
data16
fsubr
rcrl
sarl
out
xchg
mov
sub
ret
pop
mov
push
aam
movsl
add
mov
mov
xchg
aad
xor
mov
jo
sub
sbb
daa
and
das
xchg
or
jnp
push
in
or
icebp
outsb
hlt
xchg
inc
jle
push
add
and
addb
test
lea
loope
adc
mov
daa
sub
add
and
inc
and
cmp
dec
sti
lock
aas
out
push
inc
jge
adc
incb
add
dec
push
pop
and
xor
js
adc
push
adc
adc
jbe
add
ljmp
testb
push
test
lods
cmpl
loope
outsl
sbbb
outsl
popf
out
int3
inc
add
imul
push
mov
xor
mov
sub
jno
popf
test
lcall
jmp
stos
out
loop
xor
sbb
daa
xor
outsb
addr16
mov
je
cmp
pop
mov
pop
xor
jnp
stc
jnp
popf
cs
and
pushl
sar
bound
cmp
cmpsb
scas
mov
sub
leave
jae
inc
jno
mov
sbb
movsl
mov
loope
fdivp
mov
scas
push
les
shll
lret
ljmp
mov
ds
xlat
and
push
clc
cwtl
orl
dec
aaa
push
adc
popa
fmuls
add
add
jge
lahf
outsl
in
push
nop
out
les
aas
add
inc
fs
xchg
jno
fadds
iret
test
icebp
jp
cs
test
aad
rolb
xor
inc
dec
mov
loope
dec
jge
xchg
cmpb
xchg
adc
xor
sahf
sbb
imul
pop
adc
cld
clc
inc
cmp
mov
fisubs
and
lcall
mov
adc
xlat
dec
dec
loop
loope
xchg
xchg
push
adc
and
nopl
aaa
inc
sbb
mov
adc
punpckhwd
push
and
pushf
fwait
std
out
rorb
cvtps2pi
in
mov
insb
inc
dec
push
fcomps
mov
dec
mov
popa
data16
subb
aaa
sub
mov
iret
arpl
jg
pusha
test
jmp
aaa
rcr
das
push
jno
mov
mov
mov
movsb
dec
adc
or
adc
pop
add
test
out
cs
and
movsl
sub
fiadds
movsl
mov
and
test
out
icebp
das
xchg
and
out
mov
and
push
push
xchg
jae
xchg
arpl
cmp
mov
xchg
dec
ja
movsb
inc
xor
sbb
ss
push
push
jo
xor
out
sub
and
mov
mov
cmpsl
cld
sbb
xchg
ficompl
push
int3
mov
addl
cltd
test
cmp
jb
sti
pop
mov
ss
or
test
rcl
test
pusha
arpl
dec
movsb
pop
inc
lds
fcmovbe
stc
shll
add
inc
ljmp
repnz
sub
jmp
push
adc
sub
pop
cmp
sti
mov
mov
dec
shrl
rcl
pusha
adc
xchg
test
fwait
pop
ret
fstl
jo
in
push
add
hlt
sarb
and
data16
loopne
sbbl
lret
rorl
aad
pop
mov
cmp
testl
icebp
inc
out
stos
dec
shll
out
inc
cmpsb
inc
mov
cwtl
gs
loope
imul
call
add
lahf
les
outsb
out
ljmp
rcr
dec
push
and
xchg
sbb
rcrl
leave
ret
xor
dec
sarl
lds
pop
stos
repz
pop
mov
divl
pop
fbld
sti
xchg
jmp
mov
fbstp
mov
xchg
cmp
jp
cmp
push
push
decl
pop
or
mov
ret
in
push
sub
js
mov
lock
in
xchg
dec
cmpb
fldt
xchg
push
repz
xchg
cmpsb
jle
inc
xor
xchg
sbb
pop
push
pop
rolb
inc
sbb
lds
dec
call
push
cmp
dec
and
int
cli
mov
shlb
add
mov
add
enter
xchg
xchg
push
stos
cmpsb
xor
jge
xchg
cmp
adc
test
dec
js
sbb
push
dec
stc
stos
lret
lock
mov
jo
arpl
mov
sarb
repz
pop
cmpsb
push
mov
add
mov
mov
xor
movsb
fdivs
pop
xchg
inc
xor
jno
cld
cvttps2pi
inc
fwait
xor
xor
dec
xchg
cmpsb
fnstenv
cmp
inc
std
push
paddw
cmpsb
into
push
inc
add
lret
mov
cmp
repz
push
adc
call
xchg
jl
leave
pop
push
mov
arpl
jg,pt
xchg
mov
push
mov
out
mov
mov
add
fsubs
mov
mov
std
mov
movsl
xchg
push
in
lret
stc
pop
inc
sahf
and
ja
in
popf
jmp
les
push
jp
jo
xchg
shr
push
pminsw
sub
cld
outsb
dec
inc
mov
divb
mov
leave
mov
adc
lahf
les
sbb
pop
fstpt
inc
aaa
gs
sub
jne
xchg
popf
fsubr
lds
jo
mov
pop
sbb
mov
in
jb
aaa
push
lcall
in
push
movsl
addl
cmpsb
aad
add
ss
dec
push
mov
rolb
xor
das
mov
xor
push
hlt
inc
push
mulb
pushf
jmp
pusha
jo
sbb
sbb
pop
mov
test
xchg
pop
pop
inc
adc
test
fs
fimull
sub
cmpb
and
mov
mov
lock
and
fnstsw
dec
loop,pt
out
or
xlat
dec
mov
ss
xchg
fwait
sahf
cmp
adc
dec
js
xor
fistps
add
inc
repnz
xor
xchg
mov
jp
cld
lahf
ret
stc
pop
sub
or
mov
jns
mov
mov
int
mov
fnstcw
popf
push
jge
mov
aad
and
mov
lret
sub
mov
xchg
pop
add
add
pop
lods
or
aad
dec
adc
addl
enter
ret
inc
pushl
pop
dec
and
jae
cmpsb
js
xor
int3
pop
mov
dec
inc
jne
in
pop
insb
lds
push
push
pop
cs
dec
sub
jno
cs
arpl
push
cmpsl
lods
imul
lods
dec
push
repz
dec
and
fwait
jo
dec
inc
sahf
int3
aad
adc
pop
loop
scas
inc
loop
push
jmp
fwait
out
cmc
inc
pop
cs
pop
in
and
and
inc
pop
push
inc
in
dec
xor
cmpsb
imul
imul
aam
fidivrl
fldenv
call
aas
pop
scas
jge
jp
dec
cmp
pop
push
mov
and
sti
mov
jl
pushf
repz
jae
addr16
aam
dec
in
daa
jmp
daa
mov
or
enter
cmp
or
imul
cld
sbb
repnz
mov
cmp
jmp
stc
imul
lods
add
ret
add
push
adcl
mov
cld
inc
xchg
inc
mov
pop
ds
int3
pop
or
or
test
mov
bound
add
scas
dec
push
mov
in
stc
fistps
enter
push
xchg
mov
cltd
mov
pop
pop
xor
xor
in
test
dec
mov
aas
stos
mov
pop
xchg
in
jae
inc
sub
xchg
mov
inc
sub
xchg
push
insl
and
inc
mov
dec
aam
add
neg
faddl
icebp
sbb
jecxz
ja
loopne
xchg
adc
inc
rclb
push
fisubl
aad
leave
push
sbb
dec
mov
repnz
pop
sbb
push
xchg
in
xor
cs
and
cmpsb
jl
add
imul
outsl
and
dec
popa
and
jae
test
sub
ffreep
ljmp
inc
xchg
insb
sbb
aaa
je
inc
cmp
dec
lcall
outsl
pop
mov
push
test
imul
mov
fsubl
jo
stc
call
mov
test
push
imul
subl
sub
int
pop
mov
loop
push
xchg
out
rcrl
outsl
jbe
push
movsl
cli
inc
subb
andl
int
or
cwtl
jns
enter
pushf
jo
mov
fists
movsb
mov
mov
and
mov
mov
insb
movb
je
test
cwtl
mov
adcb
sub
pop
mov
mov
stos
mov
or
pop
xlat
xchg
xor
jo
and
sub
and
push
mov
loope
and
jmp
stos
idiv
mov
dec
icebp
clc
mov
or
jle
aad
pusha
mov
jno
xor
popf
out
lret
gs
movsb
hlt
lods
subb
test
arpl
dec
insl
in
push
pop
jbe
int
mov
pop
push
imul
or
insb
inc
push
mov
dec
sbb
arpl
pop
in
dec
mov
xor
fsts
push
rcll
daa
sti
push
imul
loop
lods
add
mov
jne
add
sbb
xor
call
add
std
inc
aam
aaa
addr16
xor
in
sbb
push
mov
lcall
cld
jo,pn
repnz
jmp
lds
mov
jge
inc
hlt
mov
call
popf
cmp
inc
dec
jbe
sbb
mov
arpl
gs
push
ja
or
cmpsb
insl
rcrl
xchg
icebp
out
ss
push
imul
mov
hlt
divl
add
dec
test
dec
arpl
lcall
out
inc
bound
dec
in
jl
sbb
sbb
fwait
and
clc
sbb
mov
lret
lock
rolb
int
pop
mov
jmp
jl
pop
es
xchg
cmpsb
push
adc
lods
iret
or
and
dec
add
and
xchg
xor
inc
addr16
movsb
iret
inc
das
jmp
sbb
pop
cld
push
and
push
mov
fisubrs
pop
add
mov
not
push
mov
les
pop
jb
stc
insb
pop
out
lea
xorb
test
mov
sub
stos
hlt
sub
cld
mov
push
mov
lods
adcl
mov
outsl
outsb
mov
pop
mov
lods
adcl
pop
sti
sub
sahf
lods
mov
sub
dec
fldenv
icebp
daa
scas
lcall
rcl
inc
leave
imul
imul
shrb
cmc
outsb
ss
aaa
pop
loop
mov
jl
inc
push
mov
mov
jne
popf
jae
aad
xchg
adc
mov
loop
js
ljmp
fnstsw
push
cmpsl
imul
cmp
fwait
repz
or
mov
cmp
push
popa
push
or
push
adc
cmp
pusha
call
xchg
mov
out
push
sbb
in
in
or
inc
and
loop
cwtl
push
popa
add
mov
pushf
sbbl
js
enter
insl
xlat
addb
jne
pushf
cmp
lret
lds
imul
xlat
fwait
push
shrb
fcompl
imul
out
mov
or
jo
dec
lcall
adc
push
mov
mov
xor
push
int3
sub
push
sbb
lret
test
mov
jg
xorb
cltd
push
lock
popf
dec
outsl
pop
mov
xchg
icebp
pop
repnz
xchg
pop
lret
fld
add
inc
adc
or
lret
std
mov
cmp
stos
adc
loop
adc
inc
xor
xor
add
aas
stc
ss
mov
test
cld
add
xor
push
imull
cmp
aas
rorl
aaa
ret
cmp
divl
sub
cmp
dec
es
out
sbb
pop
pop
rclb
push
les
cltd
pop
out
addb
lret
cld
and
xor
cmpb
out
inc
xlat
mov
push
outsb
push
push
call
ret
enter
cs
pop
mov
dec
call
repnz
sbb
jl
popf
mov
arpl
fdivs
xchg
arpl
dec
jnp,pn
lret
mov
in
jb
in
add
mov
sbb
sbb
sub
push
cmp
je
push
dec
mov
test
movzbl
cmp
in
inc
xor
mov
xchg
cmp
movsb
lock
fiaddl
sti
mov
cmp
shlb
cld
or
into
mov
mov
xchg
dec
mov
lock
cs
cmc
cmp
adc
adc
and
ret
push
shrl
adc
xchg
sub
or
data16
push
stos
lods
cmpsl
sti
xlat
ja
fidivs
insl
mov
pop
stc
xchg
xorb
xor
xchg
sbb
mov
pop
stos
in
addb
mov
cli
in
mov
addr16
jmp
or
out
xchg
push
mov
jmp
std
dec
movsb
loopne
adcl
scas
and
addr16
cmpsl
lods
adc
mov
or
xor
jl
cmp
ss
lret
pop
lret
fistpl
adc
mov
inc
das
push
mov
xor
subb
popa
and
in
notb
daa
js
test
mov
push
inc
add
into
shrl
sarl
inc
xor
pop
daa
subb
dec
subb
push
cli
mov
dec
or
fsubr
cltd
setg
ret
int3
stos
xchg
test
pop
in
inc
lahf
adc
lods
test
push
mov
mov
inc
jae
leave
sbb
jne
cmp
pop
mov
stc
lods
mov
shrb
mov
arpl
movsl
pop
cwtl
jb
idivb
stos
test
pop
push
dec
into
xchg
in
cmp
fistps
adcb
lret
scas
mov
mov
pop
jecxz
adc
pop
xchg
add
loop
scas
jmp
and
jns
push
ljmp
movsl
int
stos
or
xchg
inc
pop
nop
cmp
inc
push
inc
lods
or
ljmp
cmpsb
insb
or
ja
pop
repz
lahf
pop
pop
jbe
cmp
int
lret
nop
pusha
test
inc
lcall
pop
xchg
nop
sub
jb
cmp
jb
stc
roll
test
test
push
sub
arpl
sbb
jno
adc
adc
push
in
adc
in
cmp
and
inc
mov
and
push
dec
cmpsl
xorl
out
popf
cmp
jecxz
lret
jge
sbb
es
inc
inc
stc
jno
imulb
sub
ss
sub
jb
cld
jg
sahf
negl
gs
mov
out
mov
andl
lcall
pop
xlat
adc
aaa
test
mov
ret
inc
arpl
fistpll
sbb
lret
aaa
xlat
dec
jns
inc
int
adc
pop
push
lock
test
cmpsb
aam
mov
pusha
lds
push
shll
and
add
aas
lcall
cltd
inc
mov
mulb
shll
mov
xor
enter
imul
or
mov
sbb
cld
das
mov
sbb
push
pop
mov
sbb
daa
xchg
lods
sahf
movsb
cmpsb
test
mov
mov
xchg
adc
pop
popl
das
or
in
jmp
cld
adc
sub
add
push
xchg
dec
addr16
jp
or
jmp
lods
mov
out
sti
and
or
mov
cli
rorb
pop
and
repz
fs
adc
call
add
lea
aaa
test
int3
dec
subb
loopne
int
push
inc
cld
cs
mov
push
jno
subb
popf
hlt
pop
mov
mov
xor
jae
xchg
out
inc
mov
scas
mov
jnp
pop
cmp
iret
adc
lods
pushf
cmpsl
mov
cmp
mov
dec
adc
xor
mov
test
sbb
das
subl
jnp
loopne
or
icebp
mov
xchg
jle
sub
es
sub
xchg
sbb
mov
mov
test
xor
lods
dec
or
je
jp
aaa
jl
or
push
cmpsl
imull
mov
or
pop
sti
mov
mov
push
in
push
fbld
add
in
daa
lods
dec
xor
loope
dec
fstl
scas
addr16
and
dec
mov
mov
inc
pop
mov
int3
jno
ror
lret
cli
rcl
fwait
test
lock
mov
lock
add
mov
addr16
das
and
pop
jbe
inc
es
lods
sub
push
in
pop
ljmp
loopne
inc
dec
fs
xor
jne
push
sub
add
out
sub
sahf
mov
mov
add
dec
sti
lods
into
dec
inc
popf
out
lds
dec
jae
or
test
sar
adc
xchg
fwait
ss
dec
in
sbb
call
jg
flds
aad
xor
jo
xchg
xchg
and
cld
imul
mov
push
lock
pop
aam
pop
push
je
jg
xchg
push
mov
int3
sbbl
push
movsb
ja
push
jo
sbb
stos
cmp
fdivrs
push
je
dec
insl
movsb
cmp
or
mov
mov
jmp
outsl
sbb
push
xlat
repnz
adc
inc
ljmp
ret
adcl
sub
gs
test
shll
xor
aam
movsb
loopne
iret
daa
jns
cmp
fcmovnu
mov
adc
lds
jmp
mov
xlat
mov
mov
xor
int
fincstp
cmp
in
push
nop
loope
mov
pop
popa
inc
fbstp
add
jb
mov
ljmp
mov
aam
cmp
jnp
dec
add
cmpxchg
aas
int
cld
xchg
pop
sti
mov
jle
push
pop
fmull
outsl
inc
leave
out
mov
inc
cmp
push
mov
xor
dec
daa
mov
test
aam
dec
aaa
lock
sub
in
mov
mov
xchg
mov
sbb
imul
rcrb
and
scas
pop
push
in
push
sub
pop
arpl
jne
pop
aam
jnp
pushf
push
ds
xor
outsb
mov
adc
imul
int3
adc
lea
sti
ja
mov
lahf
mov
add
adc
sti
scas
sub
outsb
push
push
push
movsb
lret
movsl
insl
movb
nop
bound
je
push
cmp
mov
fisubl
jae
cld
mov
pop
outsb
das
leave
das
jp
mov
add
int3
jmp
adc
inc
mov
jmp
sahf
xor
aad
and
cmp
mov
enter
pop
add
mov
ds
xchg
adc
or
out
sbb
rolb
je
call
mov
data16
add
ficoms
arpl
imul
pop
push
iret
inc
inc
and
inc
imul
mov
mov
adc
add
mov
fs
jb
push
xor
inc
aaa
adc
cli
into
pop
daa
cmp
rsm
add
or
loop
mov
adc
xchg
xorb
shr
in
pushf
and
inc
adc
push
ffree
mov
pop
sbb
xor
jecxz
cs
push
cmc
out
test
push
xor
into
jae
push
jae
lcall
mov
iret
inc
les
inc
addr16
std
pop
adc
jg
test
mov
cmp
cli
bound
pusha
call
ja
push
sub
pop
fwait
out
in
mov
and
sbb
pop
out
cmp
and
cmp
lcall
mov
add
xlat
xor
sbb
and
pop
lods
and
cmpl
lods
sbb
arpl
jbe
sbb
imul
mov
imul
movsl
add
cmp
seta
add
mov
xor
movsl
cmp
jp
sub
andb
repnz
loop
mov
mov
mov
aad
pushf
xchg
lret
in
push
mov
loopne
fldl
insl
inc
mov
or
and
or
js
ljmp
pop
cmp
inc
xchg
shll
sbb
jecxz
xchg
testb
push
mov
xchg
pop
inc
push
pusha
sti
pop
mov
dec
and
dec
push
inc
arpl
cmp
push
xchg
aad
adc
arpl
xor
jl
mov
out
jmp
imul
cmp
insb
push
lea
push
es
js
addr16
push
push
in
sbb
jmp
sub
test
cmp
inc
pusha
xchg
cmpsl
xchg
sti
out
imul
data16
repnz
outsb
dec
add
pop
jle
mov
mov
mov
mov
cmp
sbb
idivl
mov
movsb
icebp
push
cmp
cmp
push
nop
push
mov
add
rol
push
repz
imul
je
mov
fadds
ss
mov
imul
popf
sti
data16
pop
sbb
hlt
add
push
mov
pop
mov
add
aam
cs
addr16
inc
cmp
cmp
sahf
sub
icebp
ljmp
push
dec
xchg
icebp
je
push
mov
cmc
lock
xchg
fbstp
fistps
in
imul
fsts
sti
cmp
repnz
lods
mov
call
inc
dec
mov
or
mov
imul
cwtl
jae
jmp
repz
es
inc
stos
cwtl
mov
sub
jp
xor
sub
mov
imul
push
inc
in
xchg
sub
xor
hlt
jae
clc
lret
cmp
adc
insl
jle
xchg
or
fisttpll
inc
push
lock
outsl
pop
cmp
mov
xor
jg
add
jo
cs
enter
xchg
or
loope
mov
mov
mov
mov
inc
fildll
lock
addr16
sub
popf
dec
std
divb
cmp
add
into
or
shl
shrl
pop
jecxz
jo
and
mov
scas
pop
std
pop
dec
addr16
mov
mov
mov
jbe
shrl
mov
cmp
rcr
out
pop
cs
wbinvd
lcall
cmp
xchg
mov
dec
inc
mov
cltd
in
and
inc
sub
add
or
and
cli
int
rcll
bound
dec
ffree
dec
cmpsb
mov
inc
ror
mov
notl
jge
xor
inc
sbb
cmp
jbe
dec
or
cmp
stos
add
cmc
pop
mov
mov
fs
ficoml
inc
shll
cmp
pop
pop
shlb
pop
dec
in
xor
leave
xor
xor
popf
loope
ljmp
push
mov
xor
call
mov
pop
hlt
add
pop
add
pushf
or
xchg
lds
sbb
mov
ret
lds
fmull
xor
cmp
xor
gs
push
int3
rol
xlat
in
jle
cmc
loop
dec
jns
sbb
xor
adc
jmp
inc
mov
or
notl
adc
xor
dec
jmp
cmp
sub
sub
aas
fs
loope
xchg
rclb
sbb
aad
sbb
sahf
mov
ret
dec
dec
rclb
lods
shll
pop
stc
hlt
ret
clc
test
mov
add
push
adc
cmc
cli
add
inc
out
shld
aaa
and
fmull
shr
ret
pop
pop
in
xchg
in
push
fwait
jl
addl
push
xchg
pushf
xchg
cmp
dec
sub
mov
outsl
adc
test
cmp
pop
out
pop
push
cmp
xor
not
das
ja
inc
fs
das
cs
lea
cs
sub
cltd
movsb
imul
mov
jnp
lea
push
lea
jne
sbb
std
pop
enter
orl
adc
das
push
std
subl
je
xor
paddsb
xchg
xchg
push
cmc
cmp
dec
mov
mov
pop
bound
sbb
fidivrl
shll
inc
sbb
xor
ror
arpl
arpl
repz
mov
sub
cs
cmp
xchg
int3
lcall
inc
push
and
out
loop
sti
cmp
aas
add
fstl
add
popf
stos
loopne
jge
lods
pop
aaa
push
xlat
das
jl
loope
mov
out
ljmp
pop
xchg
xchg
test
test
push
add
subl
cmp
ss
jge
cmpsl
sahf
ret
sub
push
out
cs
fwait
push
xor
in
jno
adc
cltd
subl
inc
aad
outsb
xor
cld
loope
push
sub
inc
and
lret
xlat
popf
stos
cli
xchg
testl
ds
fisubrl
jge
adc
inc
cmpsl
or
popf
sbb
bound
pop
lea
in
jmp
cmp
ret
push
mov
outsl
pop
outsb
mov
fucomi
ds
sub
cwtl
int
dec
and
pop
fdivp
cmp
jle
imul
cmp
mov
cmp
cmp
sub
cs
adc
inc
push
xor
shll
lahf
pop
shrb
and
cmpsl
ss
lcall
mov
scas
xor
sarl
jno
push
pop
stos
pop
sahf
in
push
jno
push
xlat
lahf
shlb
sub
es
jo
pop
xchg
out
push
pop
dec
jnp
jg
cs
jl
push
fstl
insb
jmp
int3
or
push
idivb
decb
pop
adc
push
lods
iret
push
cmpsl
mov
imull
xchg
mov
mov
xor
mov
data16
dec
mov
xchg
lds
adc
cltd
inc
mov
mov
cmp
repnz
aaa
scas
test
es
xchg
sub
mov
inc
add
jp
pop
xchg
pop
and
mov
cmp
inc
subb
out
dec
fcom
loope
jle
xor
lret
cmp
test
sbb
lret
or
mov
cmp
mov
push
leave
mov
push
cmp
lods
std
sub
xchg
stos
loopne
mov
cli
loop
mov
mov
pop
shll
dec
mov
in
add
ret
scas
test
pop
popf
ljmp
sbb
lahf
push
aad
cmpsl
cmp
dec
icebp
ja
bnd
loope
or
lcall
loope
pop
xchg
xor
adc
lea
cli
inc
jle
repnz
inc
fwait
push
popa
xchg
push
and
xor
fsubs
mov
adc
aaa
loop
push
lcall
inc
mov
in
repnz
xorw
lcall
inc
aam
mov
dec
imul
cmp
nop
cs
cmp
sbb
inc
xchg
mov
mov
mov
xchg
nop
jle
scas
xor
and
iret
sub
loopne
pop
inc
ljmp
pop
lds
lds
lret
movsl
sbb
hlt
sahf
nop
mov
cld
sbb
ja
movsl
shl
fisubrl
add
cltd
sbb
jge
push
mov
push
xor
movsl
adc
loop
or
dec
or
pop
rcrb
add
jbe
not
push
fdivp
fs
sbb
and
sbb
test
push
mov
test
cltd
lahf
in
mov
mov
dec
in
lcall
rcll
lods
fbld
adc
mov
test
cld
shlb
jae
ret
sti
pusha
push
xchg
enter
cs
mov
sbb
mov
ss
mov
add
fnsave
mov
stos
leave
inc
xchg
jmp
call
aam
shlb
pop
push
push
lods
pop
pushf
sbb
dec
mov
push
ss
xchg
pop
pop
divb
jb
pop
sub
sbb
sub
xor
cmp
cld
or
mov
mov
out
cmp
addb
push
cmp
sub
gs
daa
movsl
jp
lods
clc
xchg
hlt
and
cmp
add
jmp
jg
ret
pusha
shrb
sbb
xor
xchg
pop
shrb
mov
sub
ss
mov
gs
pusha
icebp
jns
das
in
and
add
cld
int3
ret
into
aad
push
sbb
cmp
cmpsl
std
push
adc
fcoms
sub
xchg
sub
adc
mov
add
and
sti
in
mov
cmp
aaa
roll
insl
mov
sbb
ljmp
fisubs
insl
inc
shlb
pop
push
out
das
mov
jbe
jne
in
dec
ret
cltd
data16
int
imul
jo
jecxz
adc
pop
adc
icebp
jb
mov
pop
test
ljmp
outsl
and
bound
sub
jnp
push
vpmacsdd
popa
popa
adc
fistps
xchg
mov
rolb
mov
data16
lcall
je
das
mov
xor
lods
insb
mov
aad
movl
addr16
add
lods
pop
xor
xlat
hlt
sbb
outsb
sbb
inc
cmp
fnstcw
add
mov
jmp
jno
push
xchg
add
fimuls
pop
ret
pop
call
cwtl
cmpl
sarb
xchg
pop
and
and
lret
cmp
sub
push
push
mov
add
divb
cs
add
aaa
mov
mov
mov
enter
jge
adc
data16
dec
fcompl
movsl
testb
scas
and
stos
xor
xor
sub
test
stos
and
aas
dec
xor
pop
sbb
pop
fstpt
xor
mov
xor
inc
es
push
test
pop
mov
pop
in
adc
std
dec
cmp
rol
jae
inc
lcall
pop
adc
xchg
pop
push
inc
mov
int3
lea
cmpl
gs
mov
int
add
sub
outsb
or
fldt
cwtl
ret
mov
adc
pop
sbb
or
mov
sub
cmp
testb
subl
jmp
fstpl
mov
push
or
sbb
or
fwait
int3
imul
inc
fnstsw
sbb
and
pusha
inc
leave
mov
bound
dec
scas
enter
repz
sbb
mov
rcl
and
dec
enter
js
fsubs
push
mov
daa
mov
jb
xor
fcmovbe
push
rcl
daa
push
cmp
cmc
xchg
iret
aaa
out
sub
hlt
mov
stos
aaa
rcrb
inc
ja
inc
cmc
fcmovnb
sbbb
push
add
push
sbb
sbb
sbb
cs
out
jb
pop
mov
pavgb
ret
jno
pop
popw
adc
sub
loopne
push
xor
inc
xchg
mov
dec
sbb
stos
jle
jns
mov
data16
shl
fwait
scas
adc
fidivrs
in
xor
jne
mov
stc
sub
dec
cmpsl
jl
ja
dec
mov
dec
incl
pop
add
lcall
push
and
adc
inc
scas
hlt
dec
fisttpl
and
sbb
stc
jge
jg
dec
test
push
jmp
arpl
sbb
jp
ljmp
mov
loopne
sbb
imul
gs
scas
inc
sets
movsl
mov
sub
dec
jecxz
lea
gs
xchg
dec
out
idivl
and
aaa
mov
jge
sti
jmp
scas
fwait
inc
andl
mov
jbe
adc
push
hlt
daa
imull
mov
sbb
xchg
mov
iret
fdivrs
mov
js
mov
test
cmpsb
imul
sti
mov
outsl
mov
pop
xor
dec
lock
xchg
adc
bndstx
xrelease
pop
aas
pusha
pop
mov
mov
pop
lcall
inc
aad
push
or
movsb
inc
push
pcmpgtb
jle
imulb
orl
cli
xchg
dec
sbb
xchg
mov
daa
lock
fbstp
sub
and
loop
sarl
jmp
mov
and
popf
sub
jl
pop
and
sahf
aam
fldcw
xchg
pop
sub
xchg
out
scas
sbb
scas
test
shlb
pop
mov
mov
adcb
mov
jno
leave
shlb
and
jl
mov
in
pushf
jl
jno
inc
add
pushf
in
movsl
pop
dec
out
mov
xchg
lahf
movsl
pop
mov
pop
popf
sub
mov
fwait
loop
aas
imul
sbb
cmp
jb
cmp
pop
enter
fstpl
pop
xchg
arpl
xchg
jl
pop
aaa
xchg
adc
out
and
ds
add
aas
das
mulb
xchg
call
mov
push
cltd
hlt
xchg
push
xchg
pop
enter
sub
mov
popa
dec
loop
xchg
fstps
dec
dec
jbe
orl
scas
inc
xor
jae
pop
pop
rcll
dec
xchg
jno
movsb
icebp
inc
les
out
xor
ret
cli
xchg
jbe
inc
add
and
xchg
push
popl
jg
arpl
jmp
psraw
sar
lcall
sbb
add
mov
push
jecxz
outsb
call
pop
sub
lcall
dec
push
nop
sub
std
mov
dec
movsb
nop
xchg
push
les
lods
std
xor
sar
mov
mov
lock
dec
push
lods
mov
and
out
je
jle
aad
or
mov
push
cmp
adcl
popf
scas
rorl
dec
outsb
push
rcrb
bnd
insl
mov
inc
pushf
arpl
lcall
repnz
mov
xchg
mov
push
adc
enter
jb
xchg
call
push
repz
sub
fsubrl
inc
flds
mov
jnp
cmp
adc
sbb
and
jle
dec
mov
lret
fsubr
push
dec
hlt
repz
dec
stc
imul
jmp
jmp
ficompl
out
popf
lock
mov
inc
popa
inc
xchg
in
cltd
add
mov
stos
stos
cmp
mov
jo
sub
aaa
cmp
jnp
jae
pop
add
fdivl
inc
into
lret
es
dec
daa
ss
aam
mov
push
loopne
lock
jbe
test
call
pushf
data16
mov
test
mov
roll
lods
data16
sub
and
mov
and
movsb
push
and
iret
nop
aam
lds
inc
push
dec
push
mov
ret
std
repnz
push
sahf
mov
imul
js
notb
and
adc
jmp
jbe
or
dec
or
fcmovne
sub
nopl
aad
outsb
pop
mov
inc
xor
adc
xchg
and
addr16
push
pop
lahf
idivl
cli
push
aad
hlt
xor
mov
jl
pop
or
jb
and
leave
lock
dec
outsl
pop
cmp
vcvtsi2ssl
lds
les
and
inc
in
hlt
icebp
shl
jnp
fcoml
xchg
mov
sub
data16
movsb
aam
ret
test
repnz
aaa
insl
jae
out
sbb
stos
dec
in
mov
sarl
pop
jge
stc
aad
jp
repz
aaa
push
data16
popa
fs
sbb
test
mov
sbb
enter
jg
fs
ja
mov
hlt
aad
xchg
faddl
mov
jmp
call
or
inc
shl
ss
gs
inc
in
lods
mov
fs
mov
call
adc
subl
aaa
mov
mov
icebp
or
or
push
out
dec
adc
or
xor
xlat
adc
pop
mov
mov
or
test
jne
sub
pop
in
repz
insl
sti
cmp
push
jbe
push
popf
jns
repnz
xchg
sbb
cwtl
sbb
or
jg
pop
inc
and
add
jle
sub
mov
aas
adc
sti
int
movsb
mov
ds
push
ja
and
out
stc
cmp
stc
and
jns
outsl
xlat
out
xor
add
repz
sbb
or
les
aad
insb
push
lods
add
sbb
sbb
addl
adc
push
pop
jmp
xor
mov
jle
scas
lods
mov
andps
jbe
xor
jl
sti
xchg
dec
sbb
adc
and
push
in
adc
ja
in
jno
jae
sbb
cmp
pop
mov
pop
jecxz
sbb
dec
pop
enter
addb
mov
sar
mov
xchg
test
fidivs
or
in
daa
adc
inc
jne
cmp
pop
cmpsb
xor
stos
add
adc
fimull
mov
inc
neg
adc
shr
out
xor
clc
push
mov
mov
out
mov
sub
gs
call
jle
mov
add
push
adc
cli
xlat
xchg
sub
or
xor
cli
cmp
cmpsl
popa
inc
filds
push
push
adc
pushf
lret
rolb
xchg
mov
jb
sbb
cwtl
or
into
std
mov
xlat
jge
out
push
jge
adc
jge
imul
jmp
divl
popa
fnsave
dec
insl
stc
mov
fcomps
add
sub
dec
cld
jo
mov
movsl
add
pop
stc
inc
fwait
jb
aad
inc
dec
mov
sub
notl
xchg
xchg
les
test
imul
xor
dec
lret
add
outsb
ret
adc
std
movl
mov
add
xchg
dec
dec
shl
out
xor
mov
addr16
xchg
hlt
mov
xor
mov
int
in
aas
xchg
xchg
and
mov
das
into
push
pop
lds
fstpl
pusha
mov
lock
pop
rep
xor
pushf
add
js
in
pushf
mov
add
test
cmp
movsb
loope
and
out
lahf
fildl
fsts
cmp
lcall
jle
lahf
scas
fbld
ljmp
xchg
mov
xchg
or
mov
test
je
jmp
push
cli
xchg
dec
rcrl
xor
sbb
mov
fwait
xorl
jb
mov
addr16
and
mov
pop
aad
addr16
mov
test
cmp
stc
pop
jne
xor
stos
adc
int3
sbb
push
jle
mov
mov
cmp
and
dec
es
movsb
push
mov
adc
jmp
inc
jnp
mov
imul
mov
ret
loope
les
stos
int
cmpsl
xchg
fiaddl
lea
mov
sbb
ds
mov
sub
into
inc
mov
mov
sbb
sub
xchg
cmp
jnp
addr16
ss
mov
repnz
mov
mov
test
xchg
jle
nop
xchg
sub
xlat
lds
xchg
cmp
sbb
jle
loop
daa
cld
rcrb
out
inc
icebp
lcall
insb
cmp
mov
push
pop
cmc
imulb
mov
clc
ljmp
iret
mov
movsl
cmp
imul
lret
scas
mov
nop
stos
imul
test
adc
cmp
sub
jge
imul
xor
lret
pop
xor
sub
mov
ret
ja
mov
cmp
repz
cmp
popf
jno
xlat
insl
dec
dec
cmpb
lahf
mov
stos
add
data16
cmpsb
sbb
jl
test
inc
and
jnp
fs
pop
xor
or
push
enter
sbbl
lds
or
pop
ja
jp
scas
sub
cmp
fmuls
ficoms
nop
jb
insl
fstl
es
in
cwtl
pop
fbld
mov
dec
inc
push
test
mov
mov
arpl
imul
out
aas
mov
arpl
testl
jmp
lock
mov
xchg
insl
adc
stc
jl
cs
das
es
int3
test
mov
test
cmpsl
call
jge
fildll
out
jo
rclb
dec
lcall
fsubl
sahf
mov
push
inc
mov
dec
jae
lea
test
popf
mov
xor
cmp
clc
int3
pop
pop
rorb
in
mov
xor
or
test
dec
dec
lea
loop
setb
in
jp
int
fdivs
adc
in
in
pusha
movsb
inc
mov
fisttpll
push
lock
insb
mov
icebp
aas
jne
and
adcl
fcom
or
fbstp
out
mov
and
mov
push
cmpsb
ret
icebp
test
pop
cld
mov
insl
mov
push
fs
lret
sub
imull
test
xchg
out
arpl
xchg
jp
cmp
dec
jbe
repz
push
rorl
cmp
add
les
inc
imul
push
sahf
xchg
and
sub
pop
arpl
js
mov
aad
or
add
jno
mov
pop
xor
xchg
ljmp
sbb
stc
pop
push
xchg
les
mov
mov
cmp
movsl
or
mov
mov
aad
cmp
pop
ja
dec
js
aas
cmp
mov
adc
pop
cmpsl
xor
int3
bound
cmp
push
cs
jae
inc
mov
and
rcrb
cld
push
in
popa
ret
loop
insl
xor
cmp
add
jl
dec
clc
lret
andl
sbb
in
mov
aas
shll
and
inc
inc
jae
fwait
aas
mov
cmc
sub
inc
insl
or
push
movsl
fwait
int
cmp
ljmp
pushf
push
push
in
nop
sbb
jae
pop
stc
fwait
stc
xchg
insb
or
inc
dec
dec
loope
xor
loop
jo
inc
pop
add
lock
pop
vfrczps
jnp
jae
cmc
push
pop
les
cmp
inc
mov
push
sbb
mov
jmp
push
adcl
outsl
mov
ljmp
test
dec
pop
test
and
enter
jns
pop
mov
jmp
out
movsl
mov
add
stos
mov
mov
inc
sti
jecxz
test
ljmp
lock
aam
movsl
add
dec
pop
aaa
das
xchg
icebp
neg
inc
sub
cwtl
xlat
or
pop
inc
dec
lods
inc
mov
jmp
flds
ret
dec
mov
sub
ret
int
mov
cs
pop
leave
add
cmp
shlb
aas
add
and
cli
xchg
fucomip
and
or
repnz
mov
mov
add
test
pop
adc
bound
xchg
aad
lea
test
push
mov
jbe
outsb
out
stos
inc
jne
mov
jb
sub
out
icebp
sbbl
sahf
sub
or
cmpsb
outsl
int3
pop
std
push
xchg
pop
data16
test
lret
adc
sub
sbb
pop
cmp
outsb
push
imul
cmp
mov
test
jge
xor
aas
fyl2xp1
and
mov
js
shrb
mov
or
sub
lods
dec
mov
cwtl
aam
and
cmp
fsubrs
clc
xor
into
mov
sub
mov
inc
jmp
and
jb
push
loop
bound
xchg
or
je
adc
mov
xor
cmp
dec
out
mov
or
out
pop
xchg
es
ja
ret
sahf
negb
ss
and
mov
add
adc
cmpsl
pop
fbld
push
and
sub
or
and
inc
cmp
ret
scas
sbb
pop
cmp
jmp
adc
pusha
inc
jno
sub
xchg
push
lahf
nop
outsb
out
inc
shlb
decb
adc
cmp
popa
sub
or
dec
push
push
sti
imull
or
lods
pop
in
sbb
push
or
push
mov
xor
add
js
stos
and
and
cmpsl
rorl
das
mov
sub
jmp
add
mov
or
add
inc
js
lea
pop
gs
push
into
daa
dec
xor
mov
mov
jecxz
test
jg
test
and
loope
lds
xchg
lock
push
adc
outsb
jg
sbb
or
jmp
sbb
int3
ret
sub
lahf
pusha
cmp
and
jmp
test
push
shlb
pop
mov
xchg
adc
fstpl
push
inc
fs
sbb
cmp
enter
in
outsl
inc
and
leave
inc
add
andb
mov
jne
mov
xchg
sbb
lret
mov
lcall
ljmp
or
jns
jmp
or
rorl
xor
inc
pushf
xor
jecxz
mov
pop
add
movsl
icebp
ret
in
out
lock
xor
in
push
sbb
frstor
pop
xor
jle
jmp
fucomi
pusha
sbbb
xorl
push
outsl
arpl
push
and
mov
rcrl
bound
pop
call
mov
arpl
mov
aad
fistl
pop
cmp
ret
fwait
hlt
push
sbb
add
mov
xchg
das
xlat
fwait
and
hlt
addb
mov
stc
jo
lods
outsl
pop
xor
jo
and
jecxz
pop
cmc
daa
xchg
fadds
arpl
sub
syscall
and
stc
push
out
dec
add
sub
out
orl
push
test
cmpb
push
and
add
xor
std
jne
add
mov
cmp
movsl
lods
insl
sbb
and
iret
push
pop
sub
cli
pop
inc
fldenv
push
ljmp
jg
pop
jmp
pop
shll
push
or
xor
sbb
lods
es
or
or
divl
call
mov
mov
cmpsl
mov
mov
cmp
test
mov
pop
out
movsb
mov
jb
jbe
in
lds
mov
mov
mov
jecxz
mov
mov
dec
cmpb
rcll
jg
subl
mov
aas
test
mov
clc
cwtl
in
lds
jbe
addr16
add
repnz
std
or
ds
imul
push
packuswb
push
outsb
test
mov
xchg
mov
mov
arpl
aad
and
add
xor
bound
ficoml
mov
mov
cld
jge
dec
lret
pop
pop
insl
lock
pop
inc
lea
jne
hlt
add
jmp
movsb
mov
out
add
add
inc
shrb
add
mov
mul
pop
inc
adc
sbb
adc
cmpsl
les
jp
aam
ret
mov
lods
inc
ret
mov
sub
cmpsb
cltd
in
xchg
dec
repz
ss
lock
cmp
aam
ss
or
nop
jns
inc
cmp
sbb
adcb
cltd
sbb
arpl
enter
shlb
sub
jp
stos
or
fwait
bound
jnp
dec
xchg
es
mov
xchg
sub
je
sbb
sti
pop
mov
mov
push
xchg
fmull
in
lcall
in
jge
int3
outsb
les
mov
test
divl
rorb
pop
mov
or
push
pop
fisttps
bound
das
adc
sbb
cmpsl
jo
push
xchg
mov
fwait
jnp
sbb
dec
push
ja
or
jp
push
or
lcall
mov
scas
loope
cmp
das
loope
cmp
xchg
xchg
sbb
in
dec
dec
push
fnstcw
movsl
or
loop
aaa
mov
call
mov
mov
ret
hlt
cld
scas
dec
push
call
pop
jb
mov
or
das
popf
enter
push
cmpsl
jb,pn
lcall
cmp
jne
popa
jne
jns
in
mov
cmp
popf
and
cmpsb
sahf
mov
mov
in
push
andb
stos
test
ljmp
jle
out
adc
and
movsb
jns
cs
and
and
aam
aas
testb
and
inc
rcrl
jge
push
mov
mov
and
push
mov
addb
in
fdivl
movsb
sub
push
mov
stc
add
es
inc
xchg
testl
jmp
fadd
and
mov
or
addr16
idiv
mov
mov
aad
jl
push
daa
rorb
xor
fidivrl
call
fcomi
fwait
lds
div
test
dec
lahf
xchg
fstp
or
gs
xchg
push
lock
cmp
inc
jecxz
cmp
rcrb
bound
scas
push
xchg
add
push
sbbl
push
js
das
add
in
outsb
jne
and
lret
push
mov
mov
std
jne
int
xor
mov
mov
cmp
jb
jge
push
cmpb
xchg
int
pushf
loopne
adc
nop
mov
leave
inc
adc
fildll
adc
cmp
cmpsb
inc
cltd
mov
or
mov
jmp
sub
xchg
leave
incb
dec
lods
adc
sub
aaa
push
xchg
cs
and
jmp
jmp
xchg
sbb
les
add
popf
fstps
mov
xchg
or
ja
mov
mov
cli
mov
jns
pop
sbb
xchg
in
sahf
ja
xchg
jns
push
pop
mov
repz
inc
jl
test
mov
mov
mov
pop
mov
movsl
xchg
sbb
out
pop
xchg
and
mov
sbb
jae
cmp
dec
dec
xchg
mov
xchg
xorl
pushf
and
sbb
lods
cli
jae
stos
dec
out
test
mov
mov
andb
adcb
imul
flds
lahf
xchg
adc
xchg
arpl
stc
jnp
add
mov
add
push
in
sbb
sbb
mov
int
data16
lock
xchg
repnz
inc
mov
aad
xchg
jg
push
rep
aas
xchg
dec
or
sbb
pop
pop
inc
sub
leave
or
lahf
cmpsb
adc
outsb
mov
icebp
lcall
jecxz
sbb
lock
subb
hlt
sbb
cmp
mov
mov
mov
in
daa
out
int3
mov
cmc
out
sub
or
movsl
std
sbb
push
cmp
sub
into
daa
push
push
pcmpeqd
jecxz
dec
leave
cwtl
testl
inc
sbb
idiv
pop
sahf
rcll
xchg
rolb
xor
pop
pop
mov
cmp
sbb
mov
shll
adc
mov
and
lods
mov
xlat
inc
mov
test
nop
subb
nop
in
push
or
daa
pop
cwtl
jmp
add
and
leave
lock
scas
dec
test
pop
xchg
mov
inc
filds
push
sub
adc
push
mov
push
sub
inc
out
loope
mov
rcll
jp
int
cs
mov
and
add
xchg
outsl
cmp
pop
mov
ja
pusha
je
imul
or
push
and
int
data16
mov
aad
mov
mov
mov
fistps
gs
out
mov
cmpsb
and
cmp
jp
sub
mov
outsl
arpl
push
sarl
out
xlat
or
adc
lahf
ljmp
inc
adc
mov
scas
adc
sub
out
jns
icebp
xor
in
std
jp
imul
int3
or
movsb
jo
call
mov
addr16
in
mov
int3
mov
orb
fs
or
lret
arpl
pop
das
movsl
inc
aaa
cld
sbb
test
sub
adc
xor
add
pop
int3
jl
jl
stos
cmp
push
shll
pshufw
cmp
sub
xchg
adc
rcrb
repnz
inc
pop
cmp
int
push
or
fucompp
mov
cmp
sub
mov
cmpsl
xchg
sbb
fildll
cmp
aad
subl
andb
pusha
and
inc
jns
pop
loopne
mov
mov
cli
jne
lahf
ficomps
xchg
sbb
adc
xchg
sub
jne
jg
mov
fsubr
bound
shl
jb
xchg
jne
push
xchg
iret
push
mov
or
cmp
repz
mov
push
notb
pushfw
pop
shrl
insl
dec
stos
inc
stc
lahf
sub
ffree
mov
and
adc
dec
scas
xchg
imull
fs
adc
add
push
jecxz
lods
mov
mov
cs
in
idiv
push
sarb
fiadds
popf
push
inc
loopne
divl
adcl
sbb
scas
fimuls
xchg
call
adc
ret
int3
mov
movl
out
xor
push
jb
xor
cwtl
jge
jns
popl
addr16
sbb
xchg
hlt
leave
fisttpll
std
dec
mov
js
push
add
cmp
aad
fcomps
test
mov
xchg
jmp
popf
test
in
push
jae
aad
xor
mov
inc
loopne
lods
xor
mov
mov
mov
or
xor
pop
lock
out
inc
mov
mov
sub
cmp
and
mov
out
call
es
xchg
sub
loope
es
lods
bound
add
xor
das
mov
sub
data16
or
in
movsb
je
dec
fcompl
testl
add
icebp
mov
daa
lea
push
sbb
rcl
mov
xchg
jno
adc
pop
add
mov
mov
adc
cmpsl
xor
sub
pop
clc
mov
dec
adc
pop
inc
and
mov
daa
loope
imul
pop
in
sbbl
sub
insl
sbb
mov
lret
fsubl
and
cmpsl
xor
xor
cmp
cmp
inc
jnp
sbb
sub
push
adc
jb
in
add
mov
ss
sbb
adc
or
cmp
mov
pop
sbb
aaa
xor
gs
ret
and
push
clc
and
ljmp
push
fisubrs
mov
movsl
lret
ret
pop
loope
adc
test
mov
xchg
ljmp
jg
jle
xor
pop
add
pop
movsb
cld
lods
js
dec
push
idivb
repnz
xor
movsl
stos
mov
push
inc
dec
pop
jns
dec
aam
cmpsl
adc
call
pop
scas
push
mov
mov
into
lods
decb
inc
aas
mov
sbb
mov
mov
mov
mov
mov
jl
dec
popf
cmp
pop
xchg
sbb
xchg
push
outsl
iret
std
add
mov
cwtl
sub
cmp
mov
fs
fstl
jp
shrb
fisttpll
aas
push
inc
xchg
mov
insl
shlb
push
xor
dec
test
and
rcll
dec
jecxz
mov
mov
cmc
push
mov
jl
lret
dec
xchg
dec
xchg
roll
sub
jle
mov
add
jecxz
push
sub
rcl
mulb
imul
push
mov
mov
mov
dec
fimull
divl
dec
lds
enter
add
pop
mov
or
rclb
shll
sti
mov
jmp
jmp
das
cs
mov
xchg
ljmp
and
sbb
adc
xor
adc
cmp
std
mov
dec
mul
movzbl
out
jae
jecxz
jbe
lret
loop
fiaddl
pop
mov
mov
loop
dec
jb
incl
dec
rol
mov
sbb
push
mov
cmpsl
sub
mov
rcr
inc
xlat
je
push
frstor
jnp
call
mov
jo
cld
xor
push
pop
jno
rolb
inc
mov
or
add
movsl
test
ds
nop
mov
repz
stos
push
sbbb
dec
loop
cmp
push
lcall
cmpb
adc
jnp
pop
dec
jb
js
xor
enter
xchg
mov
sar
dec
repnz
ss
mov
dec
mov
cmp
adc
mov
mull
out
xchg
rcl
adc
lods
dec
or
imul
mov
push
testl
rorb
aaa
inc
sub
cmp
aam
andb
add
sbb
jmp
fisttpll
or
fwait
into
mov
test
lods
pop
mov
xchg
jnp,pt
push
cmp
jnp
in
das
cmp
push
and
xor
jmp
js
stos
cmpsl
push
repnz
add
pop
mov
and
xchg
dec
xchg
push
aaa
xorl
pop
inc
add
dec
out
outsl
bnd
and
imul
jne
daa
push
sbb
movsb
lock
xchg
xchg
test
mov
mov
cltd
or
ja
push
test
mov
cmp
inc
in
sub
mov
xchg
sub
fxch
sub
ret
loopne
ja
xchg
ret
out
mov
rcr
cmpsb
inc
pop
addb
out
pop
xor
inc
les
dec
mov
and
xchg
in
mov
xchg
cmpsb
arpl
xchg
sbb
add
mov
or
pop
xchg
popf
xor
cmp
inc
test
rep
or
lods
stos
pop
sub
loop
jns
jge
movb
cmpsl
mov
pop
jne
rcpps
add
xor
movsb
dec
sub
into
rorl
jnp
add
movb
je
add
out
insb
sbb
cmp
adc
shr
fcompl
mov
push
inc
movsb
ljmp
inc
std
test
and
pop
arpl
test
fnstenv
sub
enter
cmc
sbb
hlt
jae
push
movsl
imul
test
fldl
adc
or
mov
fsubrl
and
in
daa
movsl
mov
mov
mov
jae
mov
shlb
add
loop
cmpsl
je
xchg
push
push
mov
pusha
mov
sub
mulb
pop
aaa
xor
xchg
cmpsb
out
sar
push
leave
pusha
cltd
inc
adc
mov
mov
xlat
add
pop
xor
mov
out
add
sbb
imul
push
incl
sbb
orl
xor
xchg
cmp
inc
js
mov
daa
ljmp
sub
cmp
mov
ja
ja
add
lock
push
das
mov
sbb
mov
inc
popf
scas
mov
insl
mov
pop
in
jecxz
dec
pop
popa
pop
jbe
and
stos
jne
subb
cmc
es
aaa
test
cmp
sti
sti
xchg
mov
mov
scas
addr16
mov
std
and
push
push
add
stos
sbb
mov
pusha
push
pop
push
es
mov
and
sbb
adc
fwait
mov
out
shll
mov
and
pop
daa
inc
lods
daa
push
add
and
testb
fisubl
push
dec
inc
cmpsb
fucomp
clc
dec
dec
pop
or
test
dec
stos
xor
mov
cmp
push
mov
jns
push
push
dec
jae
das
icebp
sahf
or
mov
daa
jmp
rcrb
dec
sbb
or
lods
out
sub
sbb
subb
loope
jle
sbbl
mov
das
lret
and
xlat
leave
and
xchg
cmp
shl
ss
dec
mov
cwtl
rol
faddl
mov
cmp
xchg
nop
shrb
test
ds
gs
sbb
push
adc
pop
out
icebp
fimull
inc
lret
dec
mov
dec
xorl
inc
pop
dec
push
xchg
in
in
xchg
repnz
mov
push
pop
sbb
inc
pusha
xlat
push
ljmp
sub
test
in
or
fnstsw
pushf
and
call
rclb
arpl
mov
stos
add
in
fadd
scas
mov
das
xchg
imul
ds
inc
popf
fcmovnb
out
jmp
fwait
pop
jmp
sarb
popf
popa
sarb
inc
mov
push
outsl
bound
jle
mov
out
jns
jmp
inc
lods
addr16
push
incb
xchg
repz
enter
jecxz
inc
mov
jnp
xchg
icebp
scas
mov
and
scas
pusha
sbb
fsts
lods
pop
pop
sahf
adc
xchg
in
fs
arpl
add
jle
loop
gs
fldenv
enter
std
in
cld
mov
pop
sbb
jns
mov
adc
flds
int3
jo
mov
or
lock
cwtl
int
sub
pop
imul
imul
mov
or
inc
repz
pop
add
test
adc
testl
xchg
jbe
jmp
pop
sbb
daa
xorl
xlat
push
cli
adc
xlat
into
sbb
dec
push
cmp
lods
xor
jno
jb
lahf
sbbl
xchg
movups
clc
cmpsl
popf
push
out
out
jbe
sahf
dec
pusha
jmp
adc
pop
call
lret
add
adc
pop
ljmp
aaa
loopne
cmpsb
lret
cld
lds
scas
or
popa
shrl
cmp
gs
lock
add
ljmp
cmp
dec
cmp
hlt
add
arpl
mov
rolb
outsb
or
pop
fmuls
movsb
dec
add
dec
xor
clc
insb
lock
push
sbb
jns
xchg
lock
mov
jns
mov
sub
sbb
adc
int
arpl
jns
cmpsl
mov
enter
xor
pop
mov
fs
seto
lahf
enter
sub
mov
lahf
inc
ja
mov
sahf
andl
xchg
inc
mov
or
ret
mov
push
mov
arpl
ja
nop
movsb
in
xchg
aaa
cmp
or
movsl
fnstcw
scas
loope
push
dec
int3
stc
mov
test
rorb
hlt
arpl
lods
xchg
mov
mov
pop
ja
mov
jge
pop
insl
daa
xchg
in
stos
cltd
outsb
pop
jno
and
cmpsb
loopne
sbb
inc
lods
btc
aad
inc
sbb
ficompl
and
sub
sbb
fsub
xchg
pop
mov
insl
cmp
adc
insl
addb
jb
adc
cli
xchg
dec
loop
cmp
sub
inc
and
cmp
sbb
jmp
mov
outsl
mov
push
sbb
daa
xor
int3
mov
mov
mov
mov
xchg
pop
pop
xchg
cmpsb
xchg
jno
pusha
shlb
and
mov
adc
mov
jno
movsl
cmp
fcompl
xchg
mov
scas
sti
adc
addr16
loopne
sub
arpl
jnp
mov
xor
sub
int
scas
xor
add
ror
cwtl
in
enter
out
test
pop
cmpsb
and
call
in
adc
in
or
mov
mov
leave
push
jns
test
rol
xor
dec
mov
jne
mov
sub
mov
push
lahf
add
inc
push
or
inc
out
mov
mov
lods
pusha
xor
mov
mov
imul
add
lcall
jg
leave
push
fstp
in
push
dec
push
or
push
mov
aam
aaa
out
mov
aas
pop
fiadds
es
inc
loope
jno
lahf
outsl
jg
ljmp
rorl
xchg
js
dec
popf
push
sti
mov
fcmovnb
xchg
pop
push
stos
shr
and
daa
sarb
insb
or
loop
notb
xchg
int
jno
adc
call
cmp
push
jmp
subb
mov
push
popf
mov
add
fcmovnu
dec
dec
fldt
cmpsb
and
inc
ffreep
ret
push
cmp
dec
adc
mov
or
lods
ret
inc
aaa
mov
sub
add
popf
jno
test
jecxz
lahf
lret
std
int3
xchg
cs
cmp
mov
mov
cltd
out
mov
stos
arpl
scas
jle
adc
daa
je
add
sub
push
sbb
mov
pop
or
and
in
repnz
xchg
movsl
jb
or
inc
lcall
shll
mov
outsl
iret
mov
sub
mov
mov
mov
outsl
sbb
jae
mov
test
psubsb
cmp
enter
push
stos
je
aam
push
enter
and
in
mov
pop
outsl
dec
sbb
lcall
lcall
mov
ret
sbb
std
inc
movsb
cmpsl
or
enter
jne
dec
cmc
sub
cmpl
mov
jmp
lret
jle
xor
inc
cmp
into
arpl
cli
pop
int3
push
mov
xchg
pop
loope
call
inc
imul
adc
sbb
mov
mov
sbb
fldcw
nop
in
call
add
push
fwait
dec
dec
mov
xchg
into
jecxz
xchg
xor
or
inc
sahf
dec
and
fimull
cmp
pop
xor
jmp
out
lahf
or
out
and
mov
cmpb
mov
js
out
cmpsl
pop
lret
jle
rep
stos
pop
push
mov
ffreep
mov
shrl
jge
pushf
fmuls
imul
xchg
ret
in
push
pop
shlb
cmpb
fdivrs
xlat
js
fst
rorb
jae
jecxz,pt
push
xor
bound
push
sbb
in
jne
sub
fisubs
lcall
sub
stos
xchg
arpl
xchg
movsb
mov
lret
add
out
mov
aaa
movsl
cmpsb
arpl
add
rorl
push
sub
jle
jb
inc
movsl
les
xor
push
push
popa
pop
cmp
insl
sbb
into
and
or
faddl
xor
aas
sub
dec
xchg
repnz
dec
xchg
cmp
sbb
rcl
roll
mov
inc
ja
daa
pop
cli
pop
inc
or
jbe
sub
sahf
lahf
inc
int
ret
dec
and
push
test
shld
lods
xchg
push
cs
and
inc
jle
sbb
add
adc
mov
xor
push
xor
lahf
clc
inc
add
aad
jb
popa
lret
jge
cltd
xchg
push
or
mov
mov
or
test
fcmovnu
pop
inc
sarb
aam
rorb
xchg
or
scas
out
mov
fdivr
repz
lcall
iret
jge
pushw
in
mov
sub
mov
xchg
and
stc
data16
jle
orb
faddl
inc
mov
push
int
inc
dec
sub
aad
std
add
dec
scas
xchg
aaa
inc
out
cltd
cwtl
push
aam
aaa
std
add
or
xor
push
stos
daa
aam
jge
mov
adc
shlb
push
addr16
mov
push
pop
call
in
push
and
mov
inc
inc
mov
xchg
movsb
mov
jle
cltd
mov
xchg
mov
inc
xor
rclb
push
pop
push
mov
jle
mov
pop
xor
dec
frstor
stos
inc
cmp
pusha
jmp
pop
pop
test
arpl
mov
and
xchg
std
or
cmp
cmp
es
pop
or
ret
rol
push
cmp
ja
adc
js
sarb
out
mov
mov
std
cmpsl
and
lret
pop
fwait
popf
mov
pusha
mov
and
mov
or
hlt
push
adc
push
loop
ret
inc
int
fwait
outsb
cmpsb
sbb
cmp
push
cltd
inc
mov
mov
stos
popf
sub
aas
out
push
pop
adc
xor
xor
inc
inc
pop
ljmp
popf
dec
or
aas
test
lea
mov
out
jo
mov
push
sub
mov
pop
aaa
imul
aad
mov
or
mov
cmp
icebp
mov
cmc
jecxz
out
mov
mov
dec
lret
cld
jmp
std
xor
pop
xchg
add
dec
sbb
add
mov
stos
ss
jnp
insb
add
jmp
loop
inc
mov
fists
sub
and
push
lock
push
push
scas
stos
pop
cld
nop
out
aam
das
leave
inc
out
lods
xor
xor
dec
mov
je
loopne
sbb
jp
jle
inc
ret
imul
jnp
pushl
out
pop
jl
pusha
add
insb
repnz
sub
popa
dec
mov
divl
mov
jg
sub
xor
mov
push
test
imul
subl
xchg
sub
xor
cmp
jnp
mov
mov
cmp
sbbl
ficomps
hlt
jno
in
mov
daa
push
repnz
mov
adc
and
in
imul
int3
inc
mov
pusha
sbb
push
mov
fdivrs
adc
cld
shl
sahf
js
out
addr16
jle
scas
mov
mov
or
popf
stos
leave
add
clc
pop
mov
xchg
fnstenv
sub
dec
mov
popa
pop
pop
cmpsb
in
xchg
jnp
gs
ficompl
out
mov
fstl
mov
xchg
shl
pop
fistpll
mov
pop
xor
mov
pop
pop
fwait
xor
inc
cmp
xchg
popa
ljmp
inc
movsb
fldpi
loope
cmp
xor
lock
xchg
cmp
xor
fs
add
mov
pop
mov
push
xchg
or
jnp
cmc
mov
fwait
or
xor
insl
add
adc
cmc
inc
js
adc
dec
mov
mov
cli
pop
xor
push
test
sub
jle
pop
imul
push
mov
int3
daa
or
cmp
push
shlb
jns
int
inc
fistpl
out
jle
and
or
aam
ret
movsl
shrl
sub
sub
or
or
enter
repnz
push
cld
mov
ret
or
mov
mov
nop
cmp
in
pop
cwtl
pop
enter
pop
pop
fisttpll
pop
leave
xlat
xorb
jp
mov
js
cmp
leave
dec
fdivrs
adc
pop
push
dec
leave
add
out
push
xchg
add
pop
je
adc
lea
les
xor
adc
jecxz
adc
js
nop
mov
ja
fisubrs
lret
sub
js
imul
leave
inc
cmp
out
jg
mov
jbe
sub
int
xor
fidivl
icebp
jno
or
or
outsb
cmp
xchg
jmp
dec
adc
fmuls
fiadds
das
sub
sbb
inc
pushf
pop
inc
or
stos
mov
sbbl
call
add
lcall
dec
or
stos
stos
and
jge
dec
repnz
cmovl
dec
popf
add
dec
hlt
jle
mov
mov
out
loop
or
sbb
lret
out
push
stos
mov
xor
cmp
xchg
dec
push
mov
stos
gs
lahf
lea
and
cwtl
add
lds
pop
xchg
subl
orb
cmp
ficoms
sti
mov
and
popa
add
dec
in
adc
and
cmp
mov
mov
jp
mov
icebp
pop
leave
lcall
push
sbbb
repnz
sub
stos
xchg
aam
jecxz
je
sub
in
stc
push
mov
nop
aam
inc
out
gs
sub
pop
clc
dec
adc
arpl
mov
pushf
sub
pop
mov
sbb
addr16
repz
aam
mov
and
cmpsl
mov
adc
pop
std
add
lods
cltd
xor
cld
nop
int
push
push
push
cld
pusha
inc
sub
rorl
cmc
data16
inc
sub
adc
fsub
mov
popa
and
adcl
adc
je
cmpsl
mov
sub
jae
jp
push
lret
mov
sub
in
dec
mov
xchg
sub
mov
pop
into
and
lods
int
sub
hlt
repnz
mov
mov
xchg
push
push
test
push
mov
sbb
cmp
stos
fs
push
adc
pop
loopne
stc
push
ds
dec
rorl
mov
mov
cmp
cmp
jns
mov
jae
push
arpl
cmp
pop
jb
aam
out
popa
cmc
movsl
out
mov
fmull
push
xchg
cmp
arpl
orb
inc
enter
dec
adc
out
jno
ds
pusha
std
mov
push
xorl
pop
pop
ja
dec
push
loopne
add
cmp
xor
sbb
rolb
aas
je
inc
das
push
lock
mov
daa
movsl
notb
movsb
sbb
inc
xbegin
jno
add
mov
cmc
fcompp
mov
mov
outsl
and
dec
mov
in
and
adc
pop
cmpsb
ja
mov
enter
out
lea
pusha
cmc
andb
cmp
sub
sbb
jmp
or
push
push
call
or
dec
call
sbb
inc
push
jne
pxor
sti
adc
or
cli
pop
in
popa
xchg
scas
xchg
pop
mov
out
fidivrl
sub
dec
into
outsl
pop
out
repz
jmp
mov
mov
and
xor
xor
or
adc
ljmp
push
jo
cmp
mov
xlat
and
pop
cmpsb
cmp
nop
xchg
mov
popf
cs
out
or
dec
adc
mov
out
jmp
sti
xor
dec
push
sti
ret
sbb
dec
out
jg
shl
addb
sub
fstpt
sub
leave
lcall
call
aam
sub
cmpsb
mov
mov
in
mov
loopne
sbb
dec
and
pop
repz
cmpsl
inc
xchg
jnp
mov
loop
adc
pop
mov
fwait
jnp
pop
cmpsb
inc
add
pop
push
aam
jmp
dec
das
imul
int
sbb
mov
cmp
mov
mov
fs
test
in
push
jl
push
xchg
out
or
dec
fiadds
xchg
push
push
leave
test
xchg
lea
inc
push
das
add
fs
les
mov
lret
ss
insl
jae
or
jnp
mov
adc
push
test
gs
fucom
xchg
xor
sbb
or
pop
jb
mov
sarb
cltd
rorb
idiv
cmpsl
rcll
pop
adc
lock
and
in
cmpsb
fdivrs
adc
adc
pop
xor
dec
scas
adc
sets
imul
cltd
imul
cmc
mov
jbe
int
push
lret
jae
int3
clc
pop
sahf
push
cmc
jne,pt
add
test
sahf
hlt
mov
and
mov
out
xor
adc
mov
add
pop
hlt
cmp
lods
push
xchg
or
ljmp
xchg
jp
pop
pop
xchg
pop
lret
fs
pushf
push
scas
shll
add
sbb
inc
pop
jae
adc
pop
ret
dec
repnz
push
stos
loope
xchg
jmp
outsb
jns
addr16
mov
dec
out
mov
lods
jne
mov
cmp
sub
xchg
mov
int
push
icebp
aam
rcll
test
push
mov
xchg
nop
hlt
sbb
xor
jns
int
sar
xor
cmp
cltd
clc
sbb
push
int3
aas
dec
mov
test
es
xor
xor
add
fisubl
cmpsl
sub
lcall
xor
fistps
stos
push
imul
dec
pop
stos
push
mov
push
stos
stos
inc
in
xchg
sub
incl
enter
cmp
and
mov
clc
mov
jp
je
mov
idivb
mov
mov
fadds
cmpsb
mov
xchg
inc
mov
jo
pop
jns
movsb
pop
pop
dec
mov
add
rorb
jg
or
insb
scas
inc
into
cld
out
outsl
shrl
push
pop
mov
xchg
push
loop
jnp
loope,pt
cmpsl
mov
fstps
incb
push
pusha
push
sbb
jbe
and
mov
push
inc
xchg
outsl
cmpsl
add
outsl
imul
es
imul
popf
dec
xchg
lds
cmp
dec
ds
cmc
dec
jle
mov
rorb
inc
ret
sub
push
mov
int
lret
stos
ficompl
loop
mov
ds
cltd
pop
sarb
cwtl
xchg
loop
pop
loope
xor
fistpll
fucomip
add
push
jo
xor
shll
gs
dec
jecxz
mov
test
mov
stc
push
js
fs
push
fstl
jmp
cmp
fistl
pop
int
ret
jno
adc
mov
cmc
pop
xchg
scas
dec
and
lret
sbb
mov
cmp
mov
xor
insb
xor
pop
fcomps
add
xor
cli
mov
imul
and
jns
sbb
enter
sbb
es
ss
fnstcw
imul
lea
push
mov
outsl
pop
jbe
std
jge
pop
roll
xchg
jge
aaa
loopne
add
out
insl
das
mov
fwait
push
xlat
cmpsb
sub
scas
jb
push
pop
mulb
mov
xchg
mov
cld
mov
ds
sub
add
jp
arpl
rcrl
fnsave
add
xor
pop
mov
bound
cli
mov
mov
jp
cmp
mov
fimull
leave
lcall
in
fisubl
cld
pop
rol
push
js
int3
aad
cwtl
jle
sub
mov
into
sbbl
mov
inc
je
and
pop
out
mov
sbb
in
mov
div
adc
bound
dec
mov
bound
push
in
in
mulb
dec
push
pusha
cwtl
jge
cmpsb
movsb
xchg
xchg
shlb
jnp
xchg
in
push
push
jo
repz
inc
xchg
mov
mov
add
sbb
xlat
nop
aad
inc
mov
dec
rolb
inc
jbe
ja
mov
dec
clc
and
lahf
push
mov
push
mov
cwtl
cld
cs
or
arpl
or
inc
fcmovb
xchg
dec
pop
add
lret
in
push
jns
jl
dec
ds
push
clc
jg
inc
dec
fstl
lock
pop
out
fadd
std
lret
movsb
push
popa
push
and
iret
lods
into
push
leave
mov
mov
enter
sub
mov
mov
jecxz
aam
cld
dec
lret
std
rcrb
arpl
in
xchg
and
das
adc
cmpsl
or
jmp
out
loop
mov
sub
add
lods
fstl
inc
mov
icebp
sarl
or
addr16
les
sar
pop
mov
int
jbe
jl
rcll
sbb
jnp
aad
adcb
sbb
or
and
sub
fldl
fcoms
inc
iret
mov
or
push
cmp
adc
rorb
sbb
imul
and
icebp
jb
mov
push
pop
push
jno
movsb
mov
push
loop
popf
add
test
lcall
xchg
lea
xchg
jbe
lods
cld
mov
jno
dec
hlt
movb
adc
xchg
aam
data16
mov
pop
lret
inc
xchg
outsl
mov
into
loope
cmp
and
pop
sub
sub
xchg
sbb
cmp
mov
stos
inc
mov
pop
mov
in
je
popa
and
aad
cmpsl
jmp
decb
dec
or
mov
rep
notb
iret
mov
lcall
out
out
fsubr
loope
je
hlt
sbb
loop
pop
add
jmp
cmpsb
sbbb
pop
pop
inc
mov
mov
xor
xor
ja
pop
pop
ljmp
inc
stos
inc
mov
and
sbb
ss
add
jle
pop
scas
push
jnp
mov
gs
push
mov
clc
add
cltd
movsb
ret
jne
jecxz
dec
jle
movsb
xchg
js
inc
mov
leave
cmpsb
xorps
inc
mov
ds
call
sub
xor
jmp
jbe
pusha
cs
cmc
jle
add
add
shrb
cmp
inc
pop
andl
leave
imul
cmc
test
push
pop
shrl
mov
pusha
popa
sub
out
sbb
cli
sbb
sti
xchg
cmovnp
lods
mov
in
stos
mov
or
ficoml
shlb
push
mov
fld
aas
dec
or
imul
stos
and
mov
aad
in
imul
sti
lds
add
xor
popa
cld
in
aaa
push
sub
fs
sbb
jecxz
popa
cmp
daa
lods
outsb
iret
and
adc
jle
gs
arpl
pop
cltd
mov
stos
iret
insl
pop
push
out
push
hlt
pop
jl
movsb
mov
push
clc
stos
movsb
and
jecxz
cmpl
sbb
fs
mov
out
ret
rcll
popf
and
cld
xchg
les
mov
je
pop
int3
aad
lcall
cmc
cmp
and
add
fists
xor
or
sahf
scas
sbb
mov
icebp
out
test
xor
or
mov
inc
stc
jp
mov
cmp
xchg
mov
fisttps
mov
pushf
mov
int3
das
ss
jge
sbb
dec
push
call
jecxz
add
push
int
in
push
add
and
stos
xchg
out
int3
sbb
scas
in
inc
cmp
sub
test
pop
mov
adc
push
into
call
jg
incl
or
and
dec
mov
dec
push
fs
ret
and
int
movzbl
aas
dec
pop
sub
sarb
dec
into
movsl
mov
inc
test
pop
repnz
jnp
ret
aam
pusha
push
push
addr16
out
jle
mov
gs
dec
outsl
xchg
xchg
cmp
jbe
sbb
aam
sub
es
arpl
adc
icebp
lea
shlb
mov
mov
push
or
aad
outsl
cmpsl
lea
adc
push
push
outsb
lds
push
dec
data16
sub
add
sub
iret
jp
bound
int
scas
sbb
cld
daa
and
push
shll
ds
inc
cmp
sti
adc
lock
push
dec
lea
jmp
add
sub
adc
fildll
jle
push
xchg
lahf
cli
and
dec
mov
jmp
sbb
les
out
mov
out
or
dec
push
adc
jecxz
mov
xchg
js
imul
sbbl
pop
cmp
in
xor
pop
idivb
pop
test
mov
or
ss
sub
push
push
fdivl
std
add
add
jecxz
xor
dec
sarb
call
clc
inc
or
fsts
movsb
and
dec
ror
cltd
sbb
and
and
int
repnz
iret
mov
pop
lds
lea
dec
out
pslld
enter
hlt
sub
add
cmp
add
push
aam
xor
sahf
pusha
fnstenv
sbb
or
popf
and
or
xor
nop
in
push
inc
add
in
gs
enter
das
push
iret
imul
call
or
and
and
sbb
movsl
mov
enter
orb
pop
sbb
sub
push
and
ret
sub
push
adc
cli
popf
push
dec
lock
mov
or
lock
xor
ficoml
mov
bound
inc
inc
test
test
push
fsubp
add
cmc
mov
jae
mov
insb
repz
and
stos
ljmp
xor
je
ljmp
jecxz
fwait
das
fmulp
into
sbb
mov
mov
int3
jp
rorl
pop
xchg
jno
and
scas
test
test
push
inc
sub
rorb
mov
fistpll
setge
imul
xchg
push
dec
cs
stc
pop
jl
jmp
push
or
les
dec
push
mov
adc
xchg
std
sarl
loop
test
sub
xor
leave
push
or
dec
and
inc
inc
dec
xchg
js
rcll
dec
dec
adc
jle
lahf
push
stos
jg
or
pop
jo
mov
add
daa
xor
or
cltd
inc
enter
mov
repnz
inc
fidivrl
xor
xor
movsl
push
or
fsubrs
test
push
repnz
pop
xor
insb
jns
pop
mov
insb
sub
addr16
mov
dec
dec
lea
add
mov
mov
cld
sbb
xor
ljmp
mov
xchg
sub
fidivs
jb
jae
std
into
fucomp
push
pop
sub
insl
test
scas
mov
loopw
push
or
mov
xchg
push
jle
inc
dec
ret
pop
pop
or
lock
into
rolb
outsl
loope
push
xor
lea
icebp
loopne
mov
add
pop
jb
das
add
sbb
push
je
scas
cmp
mov
sbb
pop
rcrb
sub
add
pusha
inc
lahf
or
inc
dec
and
mov
gs
mov
in
add
pop
push
sub
sub
ljmp
and
lcall
xchg
lret
aas
test
or
xor
insb
push
mov
andl
test
test
mov
aad
subl
fwait
cmp
or
sub
mov
scas
add
jbe
aam
rcr
fistl
sub
inc
xor
sbb
fstps
pop
mov
mov
shll
sbb
mov
add
lret
jle
js
sbb
add
popa
je
ss
fs
cmpl
mov
pushf
dec
xorb
ret
rorb
xor
inc
adc
sub
stc
mull
lcall
jb
push
idivl
mov
or
lcall
jbe
clc
adc
int3
repz
loopne
add
lahf
stos
sbb
outsb
fisubrs
popf
xor
shlb
xchg
fidivl
sbb
inc
or
push
in
mov
mov
jmp
pop
xor
fwait
or
add
jnp
push
jno
sub
sub
fs
sub
add
jecxz
pop
bound
fidivs
inc
pop
xor
dec
cmp
fstpl
xchg
int
roll
and
sub
fcoml
pop
cmpsl
mov
xchg
mov
ret
je
sub
insb
pop
xchg
ja
xor
test
mov
jbe
scas
add
mov
push
test
dec
pop
jle
mov
sub
push
ds
mov
iret
lods
jmp
xor
enter
mov
bound
outsl
dec
and
xor
fsubl
and
cld
push
cs
jmp
mov
adc
popa
insb
fadd
dec
cwtl
push
jne
add
roll
adc
cs
sbbl
push
and
mov
pop
call
out
shrb
clc
and
dec
pop
stc
add
fisttps
xor
mov
lods
jl
out
cmp
repz
icebp
add
mov
bound
xchg
sahf
out
cs
fldenv
push
xchg
jno
jae
idivl
in
icebp
cmp
add
subl
push
cmpsl
mov
ficomps
mov
hlt
push
cmp
jl
mov
aas
pop
sbb
inc
dec
inc
enter
xchg
and
add
fimull
in
sbb
sahf
pop
jge
mov
dec
stc
push
pop
cmp
sbb
dec
popa
pop
cli
in
jo
push
hlt
pop
inc
loopne
ljmp
stos
mov
cltd
test
mov
xor
lods
cmp
cmp
dec
xchg
inc
pop
hlt
mov
sbb
adcl
repz
fadd
scas
mov
repnz
dec
repnz
stos
gs
sbb
pop
in
adc
add
lret
ljmp
inc
in
addr16
jge
rcll
loopne
mov
inc
sahf
cmp
pop
in
jl
or
pushf
dec
push
cs
mov
gs
sbb
popa
mov
repz
jle
mov
jb
mov
andb
cmp
xchg
aad
jl
dec
push
xlat
sbb
in
imul
aad
subb
add
fcomp
outsl
in
loop
sub
shlb
lahf
mov
fisubs
mov
pop
test
xlat
lret
push
xorl
inc
xor
rcr
stc
and
jbe
popa
nop
in
push
xchg
adc
lcall
cltd
cmc
or
rcl
push
sub
out
xor
pop
xor
xor
rclb
stc
mov
xchg
out
into
cld
inc
xor
scas
sbb
outsl
int3
stos
xor
lock
ret
xchg
dec
or
jbe
jae
cmp
add
jnp
stc
dec
aam
inc
xchg
and
shll
pop
and
shl
cltd
push
mov
scas
xor
cmp
and
fidivrs
ss
outsb
loope
mov
adc
jns
outsl
mov
push
pushf
in
cmp
pushf
jb
iret
mov
mov
enter
adcl
js
and
insb
mov
stc
bswap
dec
jge
inc
jge
lcall
adc
ret
pop
jp
cmovns
ljmp
shl
mov
test
out
scas
jmp
mov
lods
out
icebp
fbld
mov
xchg
cs
mov
addr16
jp
inc
imul
jl
stc
repz
xor
nop
mov
mov
and
inc
xor
daa
es
inc
and
inc
cmp
movsb
leave
out
mov
cmp
pop
repnz
fcoms
add
cltd
lret
xchg
aad
fsubrp
aaa
jbe
mov
jo
cmpsl
sti
sbb
inc
inc
out
sbb
add
dec
jne
iret
das
xor
mov
xor
test
mov
push
pop
xor
push
inc
test
pop
jge
and
loope
pushf
mov
sahf
loopne
mov
mov
sbb
lock
pop
je
adc
mov
mov
ret
imul
mov
lahf
pop
mov
das
cmp
jl
fs
int3
jnp
push
ret
pop
lcall
xchg
and
mov
enter
ja
out
je
xchg
cmp
pop
dec
push
add
ja
pop
repz
cmp
dec
enter
iret
mov
fwait
data16
or
mov
xchg
xor
add
and
ss
or
mov
push
mov
rclb
scas
lcall
into
mov
jo
mov
dec
xlat
aaa
shl
test
lcall
cmc
jle
and
mov
aam
mov
cwtl
nop
rclb
pop
icebp
fidivl
xlat
mov
mov
fcmovnb
add
cmp
fwait
mov
ret
shrb
cmovl
andl
push
xor
pop
sub
mov
push
in
sti
mov
iret
pop
dec
mov
lods
loop
xor
gs
lret
ss
adc
jmp
cmc
fdivrl
fwait
cmpsl
std
or
call
sub
push
dec
mov
jmp
sarl
mov
ficoms
insb
jg
ret
sbb
rolb
mov
gs
ficomps
popa
aam
nop
mov
xor
and
mov
jmp
stos
mov
or
ja
negb
aas
and
mov
rcrl
jp
ljmp
mov
out
cmpsb
add
daa
frstor
push
mov
lods
lret
pop
lret
fsubrs
cmpsb
insb
mov
push
pushf
or
aam
decl
push
lea
test
inc
push
push
jnp
xor
xchg
inc
icebp
ljmp
sti
in
imul
sahf
xor
lcall
test
out
in
push
cmp
jge
shr
xchg
cmp
xlat
shll
fs
into
lahf
cwtl
addr16
inc
push
and
cld
mov
jp
int
aas
es
sub
mov
dec
sbb
pminsw
push
add
pop
dec
cmpsb
ljmp
xor
lcall
xchg
push
push
inc
dec
loopne
call
ret
dec
aad
fidivrs
outsl
data16
cmp
pusha
in
push
into
dec
cwtl
xchg
mov
jecxz
aam
pop
es
cwtl
pop
mov
movsl
lock
ja
test
mov
adc
dec
das
cmp
and
inc
xor
xor
lret
stos
pusha
lcall
mov
call
push
in
add
fimuls
cmp
cmpsl
sbb
mov
mov
mov
insb
mov
cmp
mov
js
pushl
ds
pop
xor
les
pop
xor
push
dec
int
stos
mov
in
pop
cmpsb
jmp
push
pop
xor
dec
shl
add
imul
pop
push
addb
sub
ret
and
fs
iret
cmp
jns
adc
adcb
inc
in
jne
jp
rep
or
push
jmp
xor
dec
iret
lock
in
mov
pop
scas
jae
pop
cmc
sub
dec
cmp
cld
inc
inc
xor
pushf
and
xor
das
push
mov
cmp
test
push
aad
sbb
outsb
lcall
push
pop
imul
in
adc
aas
addl
aaa
mov
sbb
sub
shr
sbb
adc
cs
adcl
or
add
cmp
dec
out
jb
xchg
loope
and
adc
add
das
test
rorl
rorb
jbe
mov
mov
push
pushf
sbb
xchg
sub
mov
sbb
fldt
push
lret
mov
mov
and
jne
mov
test
sbb
jge
cmp
mov
and
cmp
jns
je
mov
cwtl
cmp
jg
in
xor
pop
lret
aad
fildll
xchg
pop
mov
mov
xchg
mov
leave
push
inc
aas
inc
pop
out
dec
mov
aaa
aaa
in
cwtl
in
or
stos
sahf
mov
dec
popa
mov
int
and
mov
in
fwait
rcrb
inc
mov
mov
clc
pop
adc
mov
insl
push
cs
aam
mov
stos
int
imul
jbe
mov
sub
mov
ss
add
and
adc
psrlq
cltd
les
mov
jecxz
mov
jp
lret
outsb
inc
fs
jbe
or
push
mov
push
jle
pushf
int
push
out
test
sub
sahf
stos
push
rol
pop
add
pop
push
or
leave
dec
pop
xchg
cmp
mov
ja
fnsave
inc
cmp
mov
inc
mov
in
add
jo
repnz
inc
add
push
lock
inc
push
cmp
cmpsb
jb
add
mov
mov
lods
fcmovb
cmp
sub
fdiv
mov
sahf
xchg
fwait
incb
lods
sbb
rorl
cli
fsub
lea
outsb
mov
xchg
hlt
in
aas
xchg
mov
xchg
shll
push
sub
movsl
adc
das
mov
into
dec
clc
out
mov
mov
mov
lods
sbb
dec
ss
loope
inc
test
xor
or
out
dec
mov
cs
popl
icebp
mov
hlt
out
adc
jb
adc
shrl
mov
and
int3
xor
sub
push
jmp
or
aad
pop
test
cmc
jge
rol
cmp
xlat
mov
movsl
mov
mov
mov
je
sub
adc
mov
or
imul
inc
stos
fwait
ss
aad
mov
loopne
ss
test
or
call
push
mov
lds
xchg
fcmovnbe
test
clc
lret
out
test
rorb
sbbb
daa
and
mov
push
pop
xchg
lret
xor
fstl
pop
jl
cmp
jb
sbb
pop
push
add
push
mov
inc
xchg
rcrl
dec
jp
rol
xchg
ficompl
leave
add
jge
test
inc
mov
inc
sub
cmpsb
sarb
aam
inc
pop
cld
push
mov
push
cltd
sti
mov
mov
sbb
sbb
pop
xor
xor
xchg
jne
pop
movl
adc
out
rorb
dec
in
inc
xorb
incb
shrl
or
cmp
leave
stos
adc
sti
jmp
pop
in
scas
ds
les
mov
cld
sub
mov
mov
or
dec
adc
mov
frstor
lods
push
cmp
push
pop
jb
xchg
sbb
cmp
adcb
iret
sbb
inc
dec
mov
test
mov
mov
dec
add
lods
popa
or
daa
sub
mov
xchg
in
sub
and
shrl
dec
cmp
addr16
pop
mov
enter
outsl
xchg
out
cmp
ja
jecxz
lock
fcompl
pop
vmovaps
push
in
xchg
add
inc
lret
sbb
les
lret
and
int
push
xchg
fdivl
xor
fstpt
fistps
inc
sub
fisubs
lret
or
out
leave
mov
inc
add
into
out
fisubrs
lock
inc
sarb
push
jl
jne
sbb
mov
cmpsb
mov
jecxz
movsl
dec
mov
mov
mov
and
aaa
ja
jbe
cmp
xor
cmpsb
es
hlt
popa
mov
shr
adc
gs
lea
ret
jnp
push
test
rcrl
and
sub
or
test
out
mov
in
adc
outsb
add
sbb
inc
mov
popfw
push
stos
mov
adc
mov
jbe
ja
sub
js
clc
aam
call
mov
or
les
push
mov
xor
movsb
mov
jbe
mov
and
call
inc
fildll
pop
lea
adc
inc
and
btr
mov
cld
mov
xchg
cld
rep
ds
movsb
std
daa
inc
sub
xchg
mov
out
pop
out
test
cmp
outsb
jo
cltd
loopne
and
mov
mov
push
cmc
mov
ret
enter
sarb
xchg
pop
jmp
lcall
outsb
cmp
push
fxtract
xchg
pop
je
jb
fildll
pop
lods
sbb
adc
ljmp
jbe
push
popf
clc
push
test
imul
jbe
out
and
pusha
push
popf
jnp
push
imul
mov
push
sbb
not
mov
mov
cmpsl
push
lock
mov
insl
xchg
push
mov
lahf
inc
mov
jl
cltd
das
aaa
and
sub
test
popa
mov
mov
cs
popa
push
jmp
lcall
jl
sbb
loop
or
mov
dec
and
int3
enter
pushf
mov
and
dec
sbbl
xchg
mov
and
mov
sub
gs
test
inc
mov
out
mov
inc
imul
mov
out
push
mov
xor
pop
jns
outsb
and
lahf
add
je
sbb
inc
aas
cmpsl
xor
pop
add
shl
mov
xchg
js
loopne
in
sbb
mov
push
js
xor
sarl
cmp
jp
pop
orb
dec
mov
xor
test
loop
dec
or
xor
sbb
daa
mov
add
enter
into
bound
aaa
adc
jbe
add
aam
mov
or
sbb
xor
lcall
or
mov
sahf
adc
and
cmp
mov
dec
stos
out
jo
fs
in
or
dec
clc
divl
stos
out
fisttps
loope
xorl
cltd
jle
int
adc
inc
ret
fisttpll
pushf
xor
fdivrl
cmp
outsl
cmp
ror
shlb
insl
or
xor
mov
or
ja
mov
sub
pop
lea
jmp
fucomp
mov
aad
sbb
leave
push
leave
cld
adc
pop
cmp
ret
xchg
mov
arpl
mov
or
pop
imul
jmp
jo
sbbb
add
daa
arpl
mov
inc
cmpsb
lods
lea
xlat
inc
dec
push
or
stos
jg
rolb
dec
pop
fmull
and
int
mov
dec
cmc
pop
xor
int
fldl2e
aas
inc
pop
out
daa
fisubrs
clc
in
jno
into
rorl
imul
in
out
cltd
stos
inc
sbb
lret
jo
cmc
add
rcrb
pushf
cmp
lods
test
sbb
ret
pop
sub
icebp
sti
pop
jo
xor
mov
jl
xchg
jecxz
orb
ss
mov
in
push
cmp
or
inc
dec
mov
stos
pop
pop
push
dec
aad
adc
mov
jae
subl
imull
popf
add
xor
push
loopne
cmp
cmp
mov
or
and
out
rcl
inc
je
inc
push
psubusb
pop
xchg
dec
sub
test
lcall
int
inc
dec
jecxz
sbb
les
clc
push
push
mov
pop
mov
cmc
sub
and
inc
not
pop
rcrb
into
sub
loope
int3
pop
inc
xchg
into
cmc
pop
js
cmp
push
or
sbb
repnz
mov
adc
sbb
adc
scas
bound
jmp
mov
dec
mov
cmp
fcmovnb
in
mov
sahf
or
cmp
jle
mov
outsb
xchg
movsb
and
push
repz
andl
mov
push
aas
push
je
mov
mov
sti
jo
ja
xchg
sahf
pusha
xchg
adc
xor
insl
std
inc
rclb
ja
int
xchg
jbe
cmp
xchg
aam
popf
dec
xor
lods
in
orl
or
sbb
movsl
pop
pop
mull
inc
addr16
jmp
sbb
xor
into
aas
sarl
pop
arpl
xchg
mov
xchg
bound
insl
push
sub
mov
pop
shll
cmp
stc
rcrl
out
out
pop
xor
mov
mov
movsb
in
out
pop
loope
ds
out
push
enter
insl
push
fs
mov
int3
je
xor
dec
or
frstor
adc
jle
sub
sbb
sub
add
stos
pop
cmp
ja
dec
loope
or
jg
sti
enter
jle
popa
jno
sbb
test
imull
jle
xor
mov
outsb
jge
xchg
jge
cmp
sbb
mov
dec
jae
mov
cli
mov
in
mov
and
inc
aaa
cltd
in
xor
fcomp
and
leave
push
sbb
iret
pop
pop
aam
iret
adc
testl
lahf
mov
into
mov
ret
mov
dec
inc
adc
imulb
cs
mov
add
or
in
xchg
addr16
test
clc
xor
and
cmp
inc
pop
rcl
das
push
xor
aaa
pusha
mov
mov
dec
movsb
stc
cmp
and
pop
mov
in
xor
ds
shrb
lea
loope
inc
adc
mov
push
dec
shll
pop
cli
xchg
popa
filds
inc
or
mov
sub
dec
sarb
stos
sahf
loope
stos
scas
test
push
sbb
dec
push
stos
mulb
jp
sbbb
call
dec
cmp
nop
ja
fnsave
das
out
fcmovu
xchg
out
out
jge
cmc
pop
mov
adc
mov
mov
xor
cmp
and
push
clc
xchg
or
sbb
or
mov
cmp
fsubl
dec
in
dec
lahf
out
adcl
push
sti
mov
test
decl
sbb
cmpsb
in
sub
push
push
inc
push
cli
hlt
pop
sub
in
jne
cwtl
add
jmp
in
adc
jl
rcrl
stos
adc
add
xchg
and
testl
cmpsl
xchg
mov
clc
jl
lcall
xchg
jne
int
xor
loop
movsb
cli
fldl2e
and
iret
push
push
inc
mov
and
inc
cmp
jecxz
fwait
adc
xor
push
cs
cmp
aaa
pop
add
test
rcll
push
cmp
cmp
aas
dec
addr16
int3
decl
test
cltd
mov
or
cmp
xsaves
xchg
cmp
imul
jno
jmp
icebp
cli
adc
add
pop
fiaddl
in
inc
sti
lock
rorb
push
gs
pop
adc
rcll
sahf
dec
movsb
add
enter
xchg
push
mov
mov
lods
in
push
push
xor
jmp
push
scas
jbe
sub
sahf
jb
pusha
lcall
lahf
sbb
orl
ljmp
xchg
jle
test
push
xchg
lods
fs
imul
jmp
push
or
ret
push
cmp
dec
test
fsubs
insb
gs
adc
or
mov
fisttpl
jecxz
mov
sahf
or
hlt
rorb
outsl
mov
and
jb
push
lods
call
lds
shrl
cmp
push
sbb
sub
aas
iret
rorl
push
and
scas
inc
hlt
mov
push
and
lret
movsl
adc
fldt
dec
dec
sub
mov
filds
push
mov
das
nop
js
sbb
pop
cld
mov
adc
and
jp
xor
jae
lea
idiv
stos
out
mov
sub
out
dec
or
fs
int
lret
adc
test
into
pop
cmp
xor
popf
and
in
out
stc
mov
xor
push
int
add
rcr
mov
xor
pop
jecxz
pop
daa
mov
and
es
mov
movsb
sti
sub
dec
in
imul
sbb
scas
sub
mov
jg
and
mov
push
jmp
sbb
jo
jnp
inc
inc
cli
aad
jns
add
int
xor
pusha
daa
dec
flds
xchg
imul
mov
cmp
in
pop
repnz
lds
cmp
test
cmc
jnp
mov
addr16
sub
add
inc
jp
mov
pop
js
or
scas
aad
push
cmp
sbb
clc
push
xchg
shrb
jno
pop
in
sbb
imul
mov
fs
xchg
test
scas
setbe
cmp
into
mov
fldt
xchg
mov
in
mov
sub
sub
lods
cmp
idivb
ds
mov
cs
addr16
mov
xlat
sub
shll
cs
or
loope
xchg
sbb
lods
test
sub
sbb
sbb
or
ja
int
pextrw
jnp
rcrl
adc
or
pop
jmp
sbb
dec
sbb
shlb
inc
cmc
xchg
jbe
cmp
jp
jb
fstpl
push
lret
push
jl
mov
adc
shlb
out
sub
cwtl
sbb
int
push
xor
jnp
jg
xchg
sbb
pop
sbb
inc
ss
jae
dec
jns
movsb
int
clc
dec
and
rorl
sub
pop
int3
loopne
pop
data16
pop
sbb
sbb
jle
out
mov
loope
fidivl
hlt
pop
sarl
or
dec
cmp
xlat
xchg
pop
fwait
out
shlb
out
mov
push
ret
jle
sarb
fcmovb
loope
movsl
aam
lcall
fcomp
out
and
imul
and
cli
inc
cld
adc
inc
sahf
and
cmpb
lods
popf
push
ss
call
testb
push
adc
popf
mov
pop
pop
out
push
xchg
shlb
pushf
jmp
arpl
in
sahf
cli
jmp
imul
ss
dec
mov
jbe
xchg
pop
ljmp
push
add
mov
aad
out
inc
push
jbe
mov
orb
xchg
mov
xchg
ds
loope
lock
lcall
jno
add
pop
sti
lods
and
adc
mov
dec
jbe
sbbb
jge
pop
loop
stc
mov
sbb
inc
data16
mov
mov
je
dec
pop
fildll
nop
mov
divl
lret
add
cld
popa
popa
pushf
cwtl
cmp
out
mov
or
loopne
rol
movl
mov
cwtl
jne
add
push
loopne
jl,pn
or
jmp
mov
mov
push
rorl
sub
and
mov
pop
sub
cli
xor
test
cld
lods
loopne
pop
clc
cmc
mov
xchg
inc
outsb
push
jne
push
idivl
pushf
and
mov
and
jb
test
or
dec
in
movsl
push
test
xor
pop
jbe
xlat
lea
aam
xor
jmp
js
sahf
mov
ret
add
adc
call
lahf
hlt
inc
ljmp
bound
mov
insb
mov
sub
inc
test
adcl
xchg
fnsave
int3
mov
jp
imul
or
cli
mov
mulps
xchg
dec
or
dec
sbb
fiaddl
mov
xor
cmpsl
dec
lds
sahf
stc
adc
cltd
pop
push
insb
out
faddl
out
jmp
jcxz
cmp
adc
hlt
adc
out
daa
xchg
int3
insb
or
dec
stc
mov
test
jp
js
decb
mov
int
nop
fisubrl
push
aaa
bound
adc
pop
cmp
aad
test
les
xlat
mov
mov
jl
mov
orb
dec
mov
xchg
mov
aad
fnstcw
je
fistps
mov
jo
and
jge
jbe
ljmp
in
les
push
mov
sub
fsub
mov
jns
lds
jp
sbbl
or
jb
test
popa
ror
je
data16
cmp
mov
fsubs
cmp
sub
daa
xchg
mov
or
xchg
pop
ret
and
call
orb
or
or
in
sub
dec
pop
mov
out
lock
xchg
outsb
push
push
xor
add
inc
push
je
pop
add
adc
in
js
pop
pop
cmp
fwait
js
push
mov
push
cmpsb
dec
push
hlt
mov
int3
sbb
mov
and
movsl
cmpsb
mov
gs
xor
sub
dec
pop
cwtl
or
cli
sub
les
push
jmp
mov
ret
adc
push
in
addl
test
pop
cmp
rolb
ret
lcall
shll
add
push
add
cmpb
pop
out
jnp
jnp
xchg
push
mov
push
sti
jg
mov
ja
clc
adc
sbb
mov
sub
lcall
scas
jnp
leave
xor
nop
aad
stos
iret
sbb
xor
and
xchg
jl
push
cli
sbb
stos
stc
shlb
pop
mov
cmp
and
cmp
sub
pop
test
fs
jle
stc
addr16
jle
lret
outsb
test
loop
xchg
add
pop
xchg
in
dec
push
dec
cmp
push
pop
mov
push
scas
jmp
hlt
gs
jle
push
inc
push
in
dec
dec
lea
adc
sarb
push
fs
gs
xchg
lcall
push
cmpsl
push
push
sbb
xor
enter
js
repnz
mov
jmp
gs
cli
xchg
rcrb
adc
pop
cld
ret
mov
cwtl
lcall
xchg
mov
clc
sbb
das
je
cmp
xchg
mov
ret
mov
fistpll
dec
mov
xor
jmp
xor
in
push
sti
jne
out
mov
enter
cmp
jne
rcl
jp
sub
fcomps
lcall
out
nop
sub
cmp
loopne
fcoms
xor
inc
sti
fs
jns
mov
sbb
stos
jmp
mov
adc
add
jge
xor
jno
push
es
sub
sub
imul
sbb
mov
fldenv
adc
or
push
cmc
mov
mov
scas
sbb
pop
je
lret
or
mov
jnp
lea
dec
push
xor
test
movsb
loope
js
push
fistpll
mov
mov
andl
shr
out
adc
push
das
repz
fsubs
test
pop
popf
insb
dec
add
push
push
mov
mov
daa
push
xor
dec
cmpsb
jb
scas
sbb
shr
test
jo
fs
jb
lret
ret
mov
jo
mov
jns
cmpsb
sti
addr16
pop
cs
push
mov
icebp
mov
test
and
jmp
sbb
or
and
inc
in
je
jg
xor
add
insl
outsl
fwait
push
lods
inc
jbe
or
mov
mov
cmp
mov
imul
sbbl
mov
insb
lock
sbb
xchg
fidivrs
icebp
in
cwtl
or
scas
pusha
sub
cmpsl
inc
or
and
stos
mov
inc
lret
add
dec
popa
jge
dec
mov
inc
sub
gs
mov
sub
push
sub
sub
lock
and
sbb
sarb
test
add
cli
loopne
rcl
repz
xchg
test
scas
jl
icebp
ret
loope
mov
mov
jle
push
mov
outsl
sub
cmpsl
ljmp
mov
push
fsubr
sbb
push
mov
scas
call
push
out
sbb
test
fldl
insb
sub
inc
sbbl
or
ss
dec
push
xchg
inc
out
rcrb
xchg
loop
push
loop
addb
aad
lods
push
jmp
and
aaa
lock
test
sahf
insl
dec
sub
pop
out
push
add
mov
inc
ficomps
das
cli
stos
sahf
inc
jae
sbb
ret
cmp
sar
adc
call
or
sub
jae
cld
adc
fcoml
mov
aas
add
mov
mov
sub
or
testb
shrl
push
ds
sub
push
and
adc
push
js
push
mov
sahf
xor
mov
sahf
xor
outsb
es
cmp
dec
mov
into
insb
mov
ret
jne
mov
dec
adc
push
popf
insb
inc
mov
mov
addr16
push
cmp
fimull
mov
pop
dec
int3
icebp
dec
adc
sbb
test
ficomps
xchg
pop
push
dec
ljmp
int
adc
push
cmp
xchg
cltd
sub
gs
sbb
and
inc
mov
repnz
pop
pop
xchg
adc
mov
test
movsl
aad
dec
or
add
dec
ja
outsb
in
inc
sbb
int3
lea
xor
jb
inc
popa
hlt
in
sbb
out
xchg
sbb
ret
dec
and
cmp
mov
aad
pop
jmp
push
xor
lods
and
pushf
les
jg
or
out
inc
xchg
mov
test
dec
rorb
push
lods
lahf
xlat
pop
shrb
icebp
pop
aaa
mov
aaa
lahf
inc
push
xor
arpl
andb
or
ret
cmp
adc
sub
fisttpll
mov
out
cmp
pushf
sbb
xchg
pusha
xchg
ror
mov
mov
pop
or
ret
out
jp
pop
stc
cwtl
jge
add
or
pop
mov
nop
push
mov
addb
jp
bnd
in
cwtl
mov
xchg
mov
loopne
fldln2
dec
xor
in
ja
shr
out
idivb
sub
sahf
sbb
stos
sbb
mov
jne
jno
out
inc
test
ss
fs
outsl
lret
aad
sbb
xchg
adc
inc
stos
jae
mov
sub
insb
cmp
xchg
xor
in
jle
arpl
cs
pop
xchg
es
arpl
pop
lods
inc
repz
pop
mov
and
mov
fsubs
stos
bound
scas
leave
sahf
add
shr
ret
repz
cmp
enter
mov
mov
adc
iret
cmp
leave
lret
jae
addr16
in
jmp
push
mov
out
adc
stos
push
leave
add
jle
fbld
js
icebp
jo
mov
imul
xor
sar
aaa
add
mov
xor
or
jmp
push
adc
adc
xlat
xor
pop
sub
push
inc
enter
dec
mov
or
out
shll
ret
add
loop
fisttpl
push
nop
loopne
lret
adc
mov
fiadds
ds
push
inc
jbe
jle
ss
mov
in
cmp
or
das
adc
ret
nop
inc
mov
mov
jbe
les
test
jl
dec
inc
int
pop
push
push
rolb
mov
add
in
pop
es
stos
in
aas
ljmp
sub
into
inc
daa
mov
cli
pop
into
xor
lret
inc
mov
dec
ss
mov
jb
bound
lret
lock
xchg
sub
xor
or
repz
and
xchg
jae
push
sbb
pop
mov
push
add
xchg
sbb
nop
lods
cmp
fcmovu
gs
push
aaa
daa
int
scas
sbb
in
adc
fdivl
and
pop
pop
push
cs
jle
push
cli
mov
jnp
dec
push
data16
lock
and
scas
jle
shr
mov
inc
pmullw
movsb
ret
hlt
sbb
clc
jge
popa
xchg
hlt
pop
push
jo
imul
das
jecxz
xor
icebp
fbld
lock
pop
dec
sub
lds
aad
das
sub
xchg
xlat
and
mov
insb
jmp
push
xchg
pop
inc
loope
pop
push
imul
repnz
sahf
mov
js
daa
mov
dec
int
call
mov
mov
jmp
insl
pop
cmp
mov
mov
adc
dec
fisttpl
lahf
mov
xor
pop
mov
mov
pop
stos
hlt
cmp
cmp
mov
fwait
sti
jmp
pop
cli
xchg
cli
jbe
jecxz
jg
stos
test
xchg
pop
sub
dec
inc
iret
dec
loopne
dec
out
stos
daa
scas
dec
add
xchg
xchg
jnp
popf
pusha
inc
popa
and
mov
push
jae
push
inc
push
test
faddl
jb
mov
pushf
mov
or
jl
jmp
jmp
shrb
xor
insb
push
jne
fsubrl
mov
and
xchg
fistpll
fadd
dec
jae
fnstsw
mov
sub
inc
sub
xor
cmp
or
jecxz
aaa
sbb
inc
rol
aas
mov
add
ja
xchg
push
xchg
mov
dec
cltd
test
adc
dec
xchg
pop
pop
mov
in
pop
fwait
out
mov
xor
addb
mov
rcr
das
popa
dec
lea
subb
or
stos
cmc
push
or
ljmp
dec
insl
push
into
mov
push
xchg
adc
fists
cmp
jmp
out
fisubl
mov
mov
fsubs
idiv
or
or
adc
pop
loopne
and
pop
insl
iret
lods
into
jb
pop
int3
pop
sti
ret
xchg
in
jbe
shlb
loopne
adc
cmp
iret
pop
adcl
jae
mov
add
inc
push
in
sbb
pop
stos
jnp
mov
addr16
and
fwait
or
in
pop
cmpb
cmp
push
xor
sbb
movsb
xchg
movsl
pop
lock
mov
mov
negb
test
dec
sti
inc
or
clc
inc
loop
into
fimull
mov
jbe
xchg
cmp
adc
jo
aas
movsl
ror
fdivrl
movsl
pop
push
or
pop
inc
subb
jnp
das
les
leave
inc
jne
inc
mov
dec
jle
iret
mov
jp
sbb
pop
outsb
notb
mov
and
pushf
dec
icebp
push
or
shll
pop
pop
jle
xor
cmc
rorl
cmpsb
out
iret
movsl
mov
shll
sbb
pop
sbb
pop
lea
sbb
sub
mov
popa
mov
push
loopne
sub
fwait
and
xchg
or
sbb
xchg
xchg
jle
jl
out
inc
or
or
sbb
dec
clc
mov
xchg
mov
sub
mov
push
notb
clc
xor
ret
cmc
je
xor
sbb
xchg
fadds
shll
test
push
add
nop
pop
movsb
mov
subb
fistl
push
mov
fldcw
mov
dec
arpl
sbb
test
aas
and
loope
stos
icebp
lret
dec
scas
gs
jns
mov
dec
inc
push
mov
xchg
stc
xor
daa
inc
divl
adc
into
or
jle
xchg
jmp
push
xor
data16
scas
fucomip
outsl
mov
hlt
mov
jle
xchg
movl
aaa
mov
inc
test
out
mov
ficoml
lret
pop
pushf
inc
pop
cmpsl
stos
cmp
inc
adc
xor
daa
daa
fwait
cmpsl
sbb
mov
cmp
sub
jge
inc
fimuls
sub
int3
or
icebp
mov
cwtl
cmpsl
in
fbld
ljmp
addl
add
dec
icebp
xorb
cmpb
loop
repnz
das
cld
ljmp
mov
xchg
mov
fldt
xor
and
repz
popa
sbb
outsb
dec
xchg
push
mov
mov
mov
addb
mov
loop
jl
data16
mov
push
adc
enter
mov
pusha
jmp
dec
imul
insb
repnz
stc
add
lock
xchg
dec
xor
push
js
cwtl
push
or
iret
xchg
push
stos
adc
cmp
adc
cwtl
xor
movsb
mov
aas
lods
in
insb
dec
jnp
call
mov
sub
pop
sub
cwtl
pop
scas
mov
testb
dec
xor
into
and
testl
add
pushf
call
cld
das
pop
call
fldl
xchg
into
push
xchg
out
push
decl
and
xchg
jns
sbb
mov
push
lret
mov
cmp
cmp
daa
xorl
ret
mov
xchg
cmp
outsl
push
inc
and
imul
xor
loop
sub
clc
sub
out
fs
imul
adc
pop
jne
mov
mov
stos
lods
and
cld
cmp
xchg
cmp
cmp
mov
shll
mov
lcall
dec
dec
pusha
mov
xor
sbb
mov
cli
icebp
dec
push
and
or
mov
inc
push
stos
scas
mov
dec
dec
mov
jae
or
fisttpll
movb
sbb
insb
cmpsb
mov
fcoms
lods
sub
and
sbb
inc
aad
fwait
mul
mov
outsb
fucompp
js
stc
xchg
cwtl
jp
jmp
nop
or
ljmp
mov
mov
in
adc
mov
jb
and
shrl
pop
test
rcll
pop
arpl
cwtl
scas
pop
add
shrl
out
loopne
mov
pop
add
test
dec
jecxz
mov
cmp
add
xchg
dec
mov
fiaddl
push
sub
clc
adcb
push
push
sar
in
test
push
fnstsw
clc
addr16
and
rcll
and
pusha
mov
inc
stos
push
popa
ret
pop
jns
add
data16
jnp
roll
mov
jmp
push
jno
es
shl
mov
call
pop
xor
xor
mov
cmc
jge
adc
rolb
xchg
inc
std
xor
pop
xor
ja
dec
shr
call
pusha
and
sbb
push
arpl
repz
outsb
shlb
outsb
xchg
xchg
push
enter
push
jecxz
jae
pop
lea
add
push
incb
cltd
xchg
lret
pop
pop
in
rcll
inc
dec
push
mov
pop
xchg
ljmp
cwtl
loope
sahf
std
clc
and
roll
into
jg
sub
imul
inc
mov
xor
lret
pop
xchg
sahf
fstpt
xchg
add
or
subl
fwait
lods
in
add
xchg
ja
cltd
pop
iret
ret
fisttpl
jns
jl
fld
out
rclb
lock
add
push
push
into
mov
cmpsl
es
pop
fcompl
push
push
inc
adc
pop
xchg
cmpsl
loopne
push
shll
adc
dec
push
lock
movsl
xor
in
iret
lods
fstl
lret
xchg
out
adc
icebp
cmp
sbb
sbb
push
adc
outsl
repz
add
jge
add
jo
insl
lods
fldenv
cmp
in
sbb
jns
mov
inc
jl
jg
jbe
inc
cs
stos
sub
mov
outsl
bnd
inc
mov
xchg
xchg
jns
push
adc
jl
push
clc
loope
pop
mov
in
dec
test
or
sarb
cmp
hlt
in
pop
js
and
pop
iret
ds
cmp
adc
jecxz
cmc
cmp
push
std
pop
aad
cs
ljmp
jp
inc
inc
push
add
inc
dec
out
inc
push
pop
mov
es
sbb
mov
negb
sbb
cli
cmp
mov
and
add
xchg
jp
icebp
or
push
in
dec
inc
repnz
std
adc
cmp
rcrb
xchg
xchg
bound
pop
sub
les
sbb
dec
lret
mov
pop
jl
cmp
sbb
push
sub
push
mov
sub
mov
aad
cmp
mov
mov
jns
orl
aam
popa
add
jmp
mov
nop
sub
or
shlb
inc
or
mov
add
mov
and
mov
repnz
bnd
xlat
mov
cmp
cltd
xor
andb
xor
mov
ret
in
jne
lds
or
dec
dec
xchg
add
fs
mov
les
bound
xor
jmp
cs
addr16
or
stos
lcall
scas
dec
adc
aad
lret
and
adc
or
push
sar
push
or
fmull
rcrl
push
fcomps
xchg
lret
mov
bound
xchg
sbb
inc
mov
add
jno
shlb
lds
repnz
loopne
ja
mov
pop
sbb
add
sub
ret
inc
cmp
inc
xorl
stc
jmp
pop
push
test
jge
inc
pop
inc
mov
jp
mov
test
iret
lock
mov
leave
les
jmp
pop
enter
mov
adc
push
std
popf
divb
push
pop
jmp
jmp
test
inc
jnp
jae
push
insl
pop
jecxz
call
loopne
dec
loope
cmpl
jno
dec
test
pop
jecxz
push
dec
mov
dec
jo
dec
push
cmpsb
or
std
xchg
inc
stos
mov
fisttpl
mov
popf
sbb
dec
dec
out
and
jae
mov
sub
fcmovu
xchg
icebp
ret
mov
movsl
pop
xor
ljmp
dec
fimull
xchg
aas
aaa
cld
lret
aam
mov
in
mov
popf
xchg
into
fucomp
push
stos
add
jns
aaa
in
xor
push
jae
mov
fldcw
pop
inc
and
outsl
dec
sahf
inc
insb
inc
xor
and
pop
stc
cmc
sub
bound
jnp
popa
in
out
push
test
mov
enter
in
pop
lock
and
lahf
pop
cmp
scas
out
xor
jnp
in
pop
frstor
pop
push
call
call
repz
fdivrl
mov
jbe
adc
stos
and
rol
fcoms
jns
rol
sahf
xchg
mov
in
push
xchg
or
pusha
outsb
cmpl
push
add
adc
xor
lret
test
imul
jecxz
pop
sub
mov
pushf
mov
out
dec
adc
sbb
mov
xor
dec
enter
fldcw
pop
adc
and
imul
lahf
leave
aad
das
enter
and
push
das
xor
sbb
lret
xor
cld
mov
sarb
daa
mov
pusha
push
rcl
cmp
mov
push
add
jns
frstor
xchg
cmp
inc
call
fdivrl
or
rolb
test
mov
ljmp
cmp
dec
dec
fdivrl
jb
cmp
adc
rolb
sbb
mov
lret
shrb
das
mov
dec
lret
insl
out
pushf
movsb
mov
ja
movsl
lcall
std
mov
cmp
shrb
cs
mov
mov
cwtl
scas
fsubrs
outsl
jnp
pop
adc
shl
mov
scas
ja
sahf
jmp
sub
push
pop
insb
or
leave
mov
sete
xor
test
cltd
add
inc
xchg
sbb
or
mov
sarl
sbb
xor
lcall
popf
inc
push
fcmove
push
stos
xchg
add
pop
xor
fdivs
dec
jbe
pop
push
test
fildl
xchg
ss
clc
or
repnz
push
pusha
jb
cmc
push
addr16
sbb
or
adc
adc
mov
fnstsw
add
popf
scas
add
sarl
pop
imul
aas
fwait
arpl
adc
jmp
push
dec
gs
movsb
inc
data16
jo
je
xchg
jns
xchg
adc
out
mov
cmp
jbe
push
jo
fnstsw
jno
fldenv
adc
popf
inc
lods
test
js
rclb
cld
bound
xchg
ds
rclb
movd
or
dec
xorl
adc
ljmp
aam
lock
inc
or
inc
lock
inc
test
in
jle
lahf
mov
rol
xor
xor
dec
pop
or
lds
cmp
je
adc
sub
adc
cltd
mov
nop
sub
xchg
inc
je
das
cs
push
mov
dec
sarb
andb
add
xor
sub
sub
popa
xlat
test
stos
cmp
imul
hlt
dec
into
jecxz
aam
xor
and
fldcw
jo
dec
mov
call
lods
inc
push
popa
push
ds
rorl
fdivrl
mov
xchg
gs
test
daa
bound
shlb
xor
popa
call
mov
sbbb
aaa
js
inc
pusha
inc
and
jl
mov
jne
pop
mov
or
push
andb
das
cmp
frstor
xchg
in
mov
jl
out
push
push
or
cwtl
sub
and
mov
xor
sbb
fsubs
mov
xchg
xor
pop
imul
scas
mov
arpl
movsl
inc
in
movsb
jg
mov
icebp
jp
mov
push
sahf
pop
sub
dec
test
les
sub
iret
xor
mov
lret
adc
cmp
fdivs
leave
adc
mov
add
das
sbb
sub
xor
mov
loop
push
aaa
hlt
mov
and
mov
pop
or
mov
outsb
xor
daa
inc
stos
fptan
lret
scas
fcmovu
adc
or
sub
xlat
cmp
xchg
daa
in
clc
bound
shl
bound
shlb
jbe
dec
imul
pusha
sub
inc
fwait
dec
jo
lock
cmp
adc
hlt
and
push
out
xchg
xchg
sarl
dec
mov
pop
mov
add
mov
sbb
cli
pop
dec
mov
mov
jns
cli
sbb
inc
daa
mov
in
std
fistps
int3
fldl
sub
fsubs
jg
outsb
pusha
cld
mov
icebp
inc
stos
and
mov
jge
cmp
cmp
sbbb
gs
sbb
out
and
push
jge
dec
cld
sbb
sub
xchg
pop
inc
shlb
daa
sar
fimull
test
xor
xor
add
xchg
mov
jecxz
pop
int3
loope
cmp
add
je
int
repnz
jnp
cmp
and
popf
pop
add
daa
ret
xchg
sub
push
push
aad
sarb
in
adc
in
mov
ja
sbb
lods
mov
push
push
sbb
test
aad
fs
dec
sbb
aam
test
and
dec
mov
xor
xchg
push
adc
out
bound
mov
jl
sub
jns
cmp
lds
repz
xchg
mov
ret
mov
lds
add
outsb
xor
mov
jmp
scas
pop
icebp
mov
pop
test
xchg
imul
dec
btc
jecxz
shrb
mov
gs
fcoms
jb
sti
dec
xchg
mov
and
dec
cmp
xchg
push
sub
arpl
popa
push
scas
or
insl
pushf
jnp
xor
movsl
xlat
outsl
pusha
xor
cmp
imul
decb
ret
mov
cmpsl
fsubr
addr16
inc
sarb
lret
bound
rorl
push
imul
cmpsb
lds
cmp
cli
add
sbb
ja
sbb
and
fildll
inc
stc
mov
mov
and
mov
push
xchg
jb
sbb
outsl
jmp
into
in
and
push
mov
xchg
daa
jne
or
dec
inc
add
xor
mov
xchg
movsb
mov
add
inc
push
mov
or
dec
in
or
nop
mov
pop
imul
insl
js
mov
cwtl
push
nop
dec
leave
std
mov
dec
pop
mov
pop
dec
push
pusha
dec
arpl
jl
insb
push
and
lcall
loope
ret
les
or
outsb
cmpsl
sub
jmp
outsb
adc
mov
dec
adc
adc
push
xchg
call
adc
dec
pop
mov
push
inc
je
lods
paddsb
cmpsb
lret
and
jp
test
mov
js
adc
jecxz
and
in
in
push
push
sub
jno
inc
push
or
inc
fbld
cmp
pop
xchg
in
sbb
lret
test
push
push
sbb
loope
add
pop
outsb
push
sbb
jnp
mov
data16
xchg
movsl
pop
fdivrs
cmp
out
jnp
jg
mov
mov
inc
out
jle
cmp
pusha
aaa
je
bound
mov
test
inc
or
ljmp
aam
test
mov
push
outsb
mov
in
repz
cltd
mov
xchg
jg
sbbl
jmp
mov
lock
sub
lcall
mov
cmp
pop
ja,pn
xor
adc
xchg
pop
push
aaa
fmul
or
xor
and
sub
add
dec
outsb
out
adcb
inc
mov
cmpsl
aas
jge
fiaddl
mov
ret
aaa
dec
popf
lds
adc
or
mov
shll
adc
inc
adc
pop
sub
fstpt
mov
mov
lds
js
cltd
mov
or
jae
xlat
and
and
or
shll
test
es
mov
inc
push
cmp
dec
sbb
fistl
cmc
leave
aaa
jl
imul
pop
insl
mov
dec
sub
add
mov
dec
cmpb
movsb
pop
jg
cmpsb
xchg
shrl
cwtl
pop
lcall
aam
lods
mov
lret
add
sub
mov
xlat
cwtl
into
subw
fcompl
xchg
repnz
mov
jecxz
and
test
stos
sbb
inc
mov
cs
loop
dec
insb
or
mov
sti
ret
mov
mov
cli
movsl
xor
jle
mov
fdivl
jnp
insb
mov
cmc
pop
xchg
loope
mov
sub
jle
subl
mov
push
das
insl
push
add
lock
pop
mov
sbb
mov
clc
repnz
push
hlt
add
aaa
mov
inc
inc
pop
es
mov
ror
sub
iret
ret
sbbl
fwait
in
mov
or
push
dec
mov
mov
scas
bound
lods
movsl
dec
jo
pop
out
push
xchg
or
push
dec
ret
repnz
dec
mov
int
cmpsb
mov
andb
push
sbbb
ljmp
push
cmpsl
adc
adc
push
ret
pusha
decb
out
jge
cmp
div
mov
dec
sbbb
es
mov
cltd
adc
inc
lahf
mov
dec
sarb
out
loopne
js
cmp
test
pusha
cltd
mov
jecxz
jns
das
std
out
fisttpll
pop
inc
inc
sbb
sbb
xlat
fisttpll
outsb
es
pop
and
adc
mov
lret
lahf
rolb
cmp
repz
and
xchg
xchg
dec
xchg
loope
test
ja
cs
lret
test
int3
out
xchg
lods
data16
jbe
pusha
popa
cwtl
inc
lods
add
ror
push
or
mov
push
add
in
mov
imul
or
lcall
or
fs
jp
bound
adc
fcomp
int3
out
cltd
xchg
mov
mov
xchg
addl
lock
inc
icebp
mov
pop
jl
repnz
pop
adc
fldt
or
and
cmp
out
mov
jecxz
adc
add
mov
ret
popa
hlt
push
outsb
sbb
sbb
cmpsb
ret
sub
mov
adc
add
int
inc
pop
je
fs
mov
or
mov
mov
xchg
push
mov
out
lock
pop
jecxz
jne
jg
or
push
fstpl
xor
inc
add
adc
sub
je
jge
pop
lods
test
cmp
xchg
add
adc
dec
ljmp
jo
scas
adc
xor
dec
stos
cltd
cmc
test
sbb
inc
pushf
mov
rorb
jae
sbb
loop
lcall
xchg
loop
pop
hlt
lret
loop
cs
sbbb
xchg
sub
xor
mov
jg
xchg
pop
imul
ljmp
push
pop
mov
leave
loop
aam
ror
nop
sbb
cmp
imul
mov
dec
adc
mov
mov
mov
movsb
or
pop
adc
push
xor
out
inc
xor
fldenv
sbb
outsb
jmp
rol
pop
out
imul
gs
lret
js
sbb
mov
leave
add
sub
xor
fs
pop
out
inc
jae
xor
cltd
cmp
loope
outsb
xchg
outsl
cmpsb
out
jo
sbb
sub
mov
lock
aas
leave
sub
sbb
mov
popl
sub
and
sub
xchg
sbb
jbe
mov
ss
push
roll
popf
jmp
pop
push
xchg
inc
daa
pop
xor
lcall
les
sarl
jl
lds
mov
xchg
xchg
mov
je
fcoms
adc
aad
scas
mov
add
sbb
insb
fdivp
pop
xor
inc
mov
dec
xor
sub
push
pop
loopne
loop
ds
mov
shll
adc
mov
adc
scas
mov
pop
mov
xor
jmp
inc
push
jle
dec
mov
lcall
push
push
js
scas
fsubl
pop
scas
daa
jb
xchg
rcrb
gs
js
lock
sub
or
ret
dec
cmc
mov
push
repnz
and
cltd
lea
pop
shll
sbb
adc
xchg
xchg
insb
fidivl
fstps
ss
cmc
clc
imul
insb
aad
popf
pop
adc
adc
mov
popa
mov
scas
push
insl
test
inc
pop
pop
add
mov
inc
pop
pop
sbbb
jl
pusha
out
push
dec
mov
call
cmp
and
push
adc
pop
add
lcall
lret
sbb
adc
icebp
push
sub
jnp
inc
adc
dec
popf
ja
call
jge
cmp
loop
adcb
push
dec
inc
push
fs
sbb
cld
jno
dec
mov
mov
and
xchg
add
push
mov
rolb
mov
mov
fisttps
sub
js
fldenv
gs
test
lds
sbb
shll
les
mov
xchg
mov
movsl
leave
nop
add
cmp
js
aam
mov
push
aaa
pop
xchg
or
fcomi
inc
inc
fdivrl
pop
mov
jg
out
lods
pop
stos
data16
push
incb
push
into
dec
bound
push
fwait
or
sub
out
in
and
stos
aam
pop
movsb
xchg
ret
pusha
xchg
call
adc
aas
sahf
fs
jl
pop
sub
pop
pop
push
cmp
lcall
mov
mov
cli
addr16
xchg
subl
add
push
and
mov
ja
xor
mov
shll
mov
adc
xchg
push
lret
xchg
imul
sahf
stos
sub
dec
push
cmpsb
pop
xchg
rcrb
add
lret
mov
in
jbe
mov
mov
lds
std
mov
popf
dec
inc
sti
ss
ficomps
popf
pop
or
and
and
aas
lcall
cltd
inc
ljmp
push
mov
in
rol
push
repz
fildl
pusha
mov
enter
js
cmp
xor
es
inc
dec
das
scas
mov
insl
das
ljmp
adc
outsl
clc
out
icebp
mov
dec
mov
push
out
popa
or
sbbl
jne
push
xchg
pop
xchg
xchg
mov
mov
jne
insl
out
inc
inc
mov
cmp
cmp
mov
mov
scas
in
outsb
inc
ds
adc
loopne
dec
jl
imul
ja
sarl
fcmovnb
mov
int
add
and
or
jp
mov
cltd
mov
aad
cmc
popf
mov
inc
xchg
xor
nop
sbb
int
aas
fwait
out
sti
mov
subb
sub
hlt
inc
fsubs
hlt
or
cs
out
shlb
jo
push
mov
mov
push
xor
push
in
roll
sbb
fiadds
add
fldenv
test
jbe
pop
and
lcall
and
fimull
sub
idivb
ljmp
dec
cwtl
lahf
and
out
mov
inc
fmull
mov
adc
inc
or
in
sbb
enter
dec
or
es
inc
cwtl
xor
test
add
jp
pop
fisubl
push
sbb
test
mov
lret
fsubrl
pop
mov
repz
bound
cmpsb
mov
fwait
and
and
pop
xchg
jae
mov
xchg
adc
sub
pop
jl
push
mov
inc
out
stc
cmp
insb
cmp
mov
es
stc
int
xchg
cli
jo
mov
mov
lds
icebp
testb
loop
cmp
in
xor
fimull
xchg
push
popf
mov
dec
repz
add
xor
sahf
xchg
sbb
jns
adc
jle
adc
add
testl
js
ret
stc
mov
test
or
and
pop
mov
push
cltd
dec
xchg
and
jns
scas
imul
lcall
add
or
adc
adc
notl
das
fbstp
dec
sub
jno
enter
in
mov
inc
flds
push
fsubrp
shrl
pop
dec
cmpsl
lcall
cmp
sub
xchg
sbb
les
push
lods
seto
inc
inc
ljmp
xchg
xchg
adc
jnp
jbe
xor
int3
loope
jecxz
mov
push
sahf
mov
dec
lock
out
mov
push
fsubs
out
sbb
fidivs
xchg
fstps
inc
mov
add
jmp
in
stos
push
stos
or
repnz
jne
cltd
hlt
add
out
ret
mov
out
lcall
popa
into
or
dec
out
pop
les
outsb
xchg
cs
adc
push
orb
cs
loopne
das
dec
clc
enter
pushl
mov
shll
mov
mov
movsl
mov
pop
popa
out
inc
lods
bound
push
xor
test
in
jmp
pop
cmp
mov
hlt
add
xlat
mov
pop
movsl
cmp
outsb
data16
insb
adc
pop
xchg
or
idivb
loop
mov
sub
push
rcll
jmp
jle
push
iret
mov
adcl
jg
push
mov
cmp
lret
pop
cmp
lahf
lret
xor
dec
stos
add
push
xchg
sarb
jmp
pusha
test
mov
add
sbb
add
movsl
xor
repnz
xchg
subb
jg
fidivrl
stos
pop
add
pop
out
adc
cli
repz
stos
lods
push
ljmp
jg
inc
idivl
pop
xchg
adc
fnsave
and
jns
mov
rcr
cmp
dec
jne
int3
mov
ret
and
mov
aas
pop
sarb
mov
xor
push
out
mov
das
add
les
in
out
adc
mov
pusha
in
iret
ja
mov
movsb
ffreep
cmp
mov
xchg
xchg
js
mov
outsb
shrb
adc
add
mov
iret
andl
pushf
sub
hlt
pop
enter
enter
inc
fsubrs
addl
test
lahf
stc
pop
pop
rolb
push
sti
aam
adc
or
jle
outsl
mov
jno
ljmp
es
push
xor
into
bound
mov
and
roll
or
inc
or
int
mov
add
jns
lcall
xor
cmp
jo
mov
movsb
std
or
mov
mov
mov
fisubl
xor
xchg
imull
iret
iret
out
cli
int
shll
jbe
bound
into
mov
mov
test
insl
inc
in
mov
push
jp
lahf
pop
dec
pop
and
push
outsb
cmp
add
test
xlat
mov
inc
sarb
dec
ja
popa
sub
jge
hlt
xchg
jg
push
push
pop
fistpll
lcall
add
mov
sub
pop
shr
adc
ss
adc
call
rcll
fsubs
cmp
aad
push
iret
mov
subl
testb
pop
push
or
xchg
sbb
out
and
pusha
test
xor
fldl
mov
std
aad
int3
inc
jne
or
add
rolb
out
jp
daa
adc
aaa
movsl
or
sbb
imull
and
mov
lds
arpl
outsb
ficomps
and
sarl
idivb
sub
add
mov
mov
sbb
scas
into
lock
loop
sbb
repz
sbb
push
sarl
mov
ret
xchg
clc
xor
jg
insb
mov
sbb
icebp
sub
pop
lret
outsl
shll
pop
popa
push
mov
nop
int
sbb
jns
mov
cmp
test
aaa
mov
rcrb
rorb
out
add
fmuls
jns
inc
fstpl
xchg
fldt
sub
cmp
sub
fcmovnbe
cs
bound
xlat
mov
lds
and
mov
mov
or
xor
mov
fiaddl
push
out
jae
les
push
xchg
in
and
into
or
fwait
ret
xchg
and
mov
cmp
lahf
ss
mov
fdivrp
stc
pop
cltd
pop
nop
into
mov
add
sub
in
vandpd
fimuls
sbb
sbb
inc
push
repnz
xchg
icebp
aas
test
mov
sub
mov
dec
sub
inc
mov
or
xchg
jb
jmp
xor
xchg
pop
or
cmpl
mov
dec
icebp
pop
xlat
mov
jo
sub
jl
hlt
cmp
xchg
adc
fmull
mov
pop
dec
std
jo
lcall
inc
and
sub
and
aad
inc
pop
push
std
push
pop
pop
adc
jae
hlt
add
sarl
jne
push
das
fisubl
mov
and
adc
mov
pop
push
inc
push
daa
mov
iret
mov
adc
arpl
es
repz
push
sbb
inc
pop
push
xor
jns
lods
sub
aam
bound
add
and
popf
test
pop
xlat
sbb
and
icebp
adc
fcoms
and
das
cmpsb
cmp
mov
mov
out
xor
scas
jbe
cmp
arpl
add
cmovae
xchg
clc
pop
fwait
sbb
fstpl
cmp
xchg
lea
ficomps
mov
or
dec
insl
repz
pop
jbe
sub
mov
pop
add
add
cmp
adc
adc
inc
pop
mov
and
xchg
push
loopne
mov
shlb
cmp
add
inc
addr16
nop
das
mov
in
mov
mov
pop
ret
fcomip
jns
insb
cmp
xchg
out
aas
xchg
insl
push
out
cs
stos
cmpl
aam
rcr
mov
cmp
and
jbe
stos
out
mov
lea
adc
pop
and
mov
add
push
fs
dec
mov
push
inc
inc
fadds
fwait
sti
inc
rcrb
insb
arpl
sarb
jo
or
hlt
fmuls
fcmovnbe
dec
dec
dec
sub
sbb
fiadds
decb
mov
cld
and
jecxz
and
nop
ficomps
jg
inc
loope
dec
dec
loop
push
cwtl
push
call
inc
dec
shll
push
inc
mov
fsubrl
sbb
add
icebp
push
rcll
cmp
shr
adc
mov
fwait
mov
daa
fwait
movl
fisttpll
ljmp
shlb
stos
cmc
scas
jae
pop
fistpll
and
mov
dec
pusha
lods
pushf
out
jl
test
pop
push
push
adc
popf
sarb
pop
mov
jb
imul
cmp
xchg
or
and
aaa
out
cmp
jbe
mov
outsb
out
xchg
adc
jmp
loopne
dec
ret
arpl
push
fcmovu
outsl
pop
cmc
lods
xor
inc
aas
or
lods
or
aaa
jge
cmpsb
sbb
sub
dec
add
fisubl
inc
xchg
cld
daa
or
jno
add
and
repz
or
inc
jmp
inc
icebp
insb
and
sbb
cmp
pop
cmpb
lret
inc
add
imul
jae
dec
stc
sub
cwtl
rcrl
out
jb
sbb
clc
push
insl
fidivrs
add
mov
dec
stc
or
jge
adc
pop
adc
push
icebp
and
sbb
mov
lret
lds
fs
xor
imul
adcl
popf
stos
lahf
out
cs
aas
lock
scas
add
xor
sahf
ljmp
mov
movzbl
leavew
loope
dec
int
js
leave
adc
fwait
push
repz
js
pop
test
mov
movsl
inc
push
aad
pushf
mov
adc
cmp
pushl
pop
and
inc
or
cwtl
out
in
insb
adc
xlat
mov
popl
testl
out
jmp
add
pop
test
cmp
out
lods
adc
jbe
movsb
loope
add
mov
push
cs
les
or
and
sub
xor
scas
jge
jb
pop
cmp
xchg
cmp
lahf
jge
mov
mov
jp
add
jb
inc
es
push
daa
dec
out
aam
or
loop
cmp
test
fsubr
pop
cs
rorb
lds
xchg
loope
or
mov
jne
iret
push
aaa
popw
ds
inc
aas
fucomi
adc
pop
or
sub
jmp
pop
adc
push
test
pusha
dec
pop
push
popa
movsb
adc
mov
movsl
inc
add
sbb
lds
push
pusha
cmpsb
push
pop
push
cmp
or
imul
scas
popf
fimull
xchg
test
dec
push
adc
cmpsb
fnstenv
loope
push
push
jg
xchg
sub
sysret
push
dec
pop
stos
push
cmpsb
and
dec
cli
popf
add
xor
leave
scas
sti
mov
repz
clc
xchg
jb
lahf
rorl
call
inc
or
aad
int3
sbb
mov
pop
push
cltd
and
sub
mov
jle
or
mov
mov
js
cli
adc
inc
and
cmp
push
stc
lock
jmp
mov
out
xchg
cmp
cwtl
mov
out
pop
in
sbb
push
test
adc
nop
loop
add
mov
mov
dec
int
lcall
ja
clc
sub
mov
sub
xor
std
pop
push
and
xor
es
pop
pmovmskb
and
scas
lods
pop
fildl
xor
repz
fs
inc
inc
imul
xor
mov
dec
scas
outsl
dec
push
add
lods
addl
push
adc
cmp
jo
outsb
mov
xchg
daa
push
test
stc
inc
fwait
std
jle
xor
test
sub
int3
xor
es
lods
cmp
sbb
xor
mov
mov
faddl
jns
xlat
cltd
loopne
ja
js
cmpsl
insl
push
xchg
shlb
or
mov
xchg
adc
sbb
ljmp
xchg
jno
jne
mov
add
sbb
jno
icebp
cmpsl
aaa
lret
dec
icebp
int
mov
xchg
mov
xchg
jb
psllw
fwait
dec
push
dec
mov
and
lsl
es
das
addl
aam
jbe
data16
and
mov
ret
push
insl
xchg
lret
add
jbe
pop
or
pop
pop
or
lock
push
cwtl
in
shl
mov
mov
xor
inc
test
shl
jp
dec
or
mov
jae
push
pop
cmp
fmull
or
adc
pop
popf
lret
ljmp
push
int
sub
xchg
and
inc
fs
int
or
sbb
shll
xor
out
xchg
aad
fwait
push
nop
pop
in
push
pushf
in
pop
stos
cltd
fnstenv
enter
icebp
pop
rcr
and
adc
and
cmp
js
inc
or
test
cmpsb
inc
pop
lods
push
mov
ljmp
fwait
shll
push
fimuls
pop
jae
inc
das
sarl
push
in
and
outsb
test
cmc
lods
cli
scas
arpl
aam
enter
xor
pop
popa
dec
push
out
out
sub
sbb
pop
sbb
xchg
mov
movsb
or
ds
outsb
jle
jmp
addr16
call
lahf
dec
mov
sbb
outsb
imulb
test
fildl
mov
adc
xchg
lret
inc
fistpll
pop
sbb
gs
loop
loope
pop
into
orb
and
mov
data16
adcl
dec
sub
rolb
cld
mov
sbb
push
insl
daa
pop
fs
addb
sahf
lret
popa
sahf
cltd
pusha
mov
jne
mov
sbb
inc
pop
pop
push
rorl
fildl
sbb
nop
or
mov
and
adc
sub
add
mov
loope
or
cs
or
dec
mull
sub
inc
mov
xor
dec
jnp
inc
ja
xlat
mov
jl
mov
aad
adc
ja
int3
outsl
out
ret
dec
fs
arpl
sbb
insb
jmp
outsb
fucom
popa
jg
jns
pop
mov
mov
fistps
testl
notb
ss
mov
add
push
lahf
pop
mov
movsb
dec
jp
pushf
loop
jp
repnz
push
jp
push
add
sbb
mov
push
mov
push
bound
out
mov
aas
fldcw
cmp
jbe
pop
test
jmp
pop
sahf
out
out
scas
sbb
mov
inc
and
inc
and
ret
dec
jo
push
jb
sbb
cmp
sbb
pop
popa
in
push
cs
add
fwait
lahf
lret
lods
xchg
mov
and
cld
add
mov
pop
test
lock
cmc
lcall
adc
push
mov
imul
sahf
push
rcrb
mov
mov
mov
sbb
push
and
inc
xor
loope
mov
and
and
mov
dec
test
sbb
push
push
fists
mov
stos
out
sbb
test
push
lret
stos
js
mov
stos
inc
andl
outsl
les
add
js
test
sub
sahf
rcrb
cmp
pusha
scas
pusha
das
add
push
pop
insb
ja
sbb
adc
lea
push
push
int3
xchg
or
jno
lock
sub
in
adc
sahf
mov
add
repz
dec
sbb
xchg
jb
out
ds
sbb
stc
jo
aad
or
lea
repz
scas
pop
xor
int
xchg
mov
mov
cmc
xchg
push
add
dec
out
jg
xchg
pop
adc
je
xor
adc
jae
adc
insl
cmc
mov
push
mov
cmpsl
testb
jo
jo
cmp
ret
sbb
stos
mov
xchg
aam
ljmp
pop
xchg
jbe
in
adc
push
inc
daa
inc
inc
sbb
xchg
pop
scas
lock
add
aam
lret
das
jbe
mov
loop
stos
mov
xchg
push
add
sbb
outsb
insb
pop
je
jmp
jne
mov
or
incl
mov
sbb
ret
gs
jo
adc
popa
int
insl
rcl
and
pop
cmp
aam
imul
dec
pusha
incb
fstpl
or
adc
fldl
clc
leave
and
scas
fcoml
sbb
fdivrs
dec
bound
jge
icebp
pop
inc
insb
lods
mov
sub
insb
hlt
out
add
mov
xchg
mov
in
cld
call
popf
outsl
xor
mov
clc
dec
adc
xor
jp
cmp
jmp
inc
movsl
ror
inc
push
cmp
fists
inc
pop
stos
add
mov
std
aad
and
stc
movsl
mov
sbb
out
rorb
fisttpll
xchg
jl
cmpsl
outsb
mov
cs
sti
pop
addr16
hlt
mov
jnp
inc
dec
pop
xor
dec
pop
push
bound
or
cwtl
mov
add
cwtl
sbb
cmp
outsl
ret
inc
ds
pushf
xchg
cmpsb
movsb
test
xlat
insb
fisubrl
dec
add
lea
jp
mull
mov
in
leave
mov
scas
notb
mov
pop
loopne
cmp
ficoms
fs
sbb
push
pushf
sub
insl
notl
iret
hlt
mov
addr16
test
fsubl
out
fsubs
mov
cmpsl
divl
mov
mov
clc
pop
pop
arpl
jno
mov
sub
pusha
inc
pop
arpl
lret
movsb
scas
in
sbb
mov
stos
jle
mov
cmp
cmpsb
lret
lret
xchg
shll
lock
cli
cmp
mov
inc
xchg
jae
adc
jns
shll
ret
sahf
rorb
or
outsl
inc
stc
mov
inc
pop
dec
popa
test
sbb
pushf
movsb
and
rclb
loope
or
lods
lahf
pop
fsubrs
push
mov
lods
xor
mov
lods
push
int3
lea
sbb
mov
outsl
rclb
adc
mov
jle
iret
movsb
clc
sti
hlt
mov
jne
mov
test
jo
fimull
dec
lds
sbb
inc
outsl
lods
mov
mov
stos
mov
les
inc
add
jnp
fdivr
hlt
mov
pop
mov
fdivr
or
jo
mov
int
popf
cmp
cld
adc
jne
inc
xor
outsb
inc
mov
add
icebp
je
fisttpll
sub
adc
arpl
cmc
cmp
inc
out
aam
or
data16
sub
sarl
lcall
add
iret
mov
sub
add
stos
rcrl
and
rcll
sbb
inc
xor
shlb
dec
cwtl
and
ret
lods
stos
xchg
mov
pusha
add
xchg
jb
and
push
icebp
mov
in
out
adc
jo
cmc
xchg
or
std
bound
adc
adc
sbb
cli
pushf
xor
stc
subb
stc
in
arpl
xchg
xchg
lcall
out
jmp
lods
jl
pop
push
jno
popa
leave
add
test
cmp
fists
push
adcl
fisubrl
cmp
mov
mov
or
fst
mov
mov
jae
pop
out
outsl
pop
inc
dec
push
jo
mov
mov
adc
sbb
cwtl
cmp
out
jecxz
ljmp
mov
inc
dec
aas
xchg
sub
push
es
stc
imulb
dec
mov
addb
test
add
hlt
fsubrs
sbb
push
pop
or
bound
cli
scas
sbb
sarb
or
loop
inc
test
out
fldcw
mov
test
mov
dec
mov
stos
pop
lret
xor
push
mov
mov
lock
shl
dec
push
mov
int3
cmp
mov
jmp
inc
loope
xchg
push
test
lock
les
xor
out
adc
mov
push
inc
cmpsl
cs
loopne
stc
xchg
dec
xchg
sub
clc
pop
mov
out
rcr
mov
and
shlb
sub
adcb
and
inc
dec
daa
cmp
ret
add
jb
mov
cli
dec
xor
push
xor
cwtl
fcom
test
fs
pop
ljmp
add
sub
and
sub
add
cmp
shlb
push
cld
xor
cmp
test
dec
in
inc
mov
sahf
ficomps
xchg
cmp
or
sti
mov
jle
mov
adc
push
rorl
sbb
push
mov
adc
cmpl
pop
pop
and
test
jp
xorb
jo
add
mov
fisubl
fisubrs
lahf
mov
and
ds
jae
sbb
mov
xlat
enter
out
adc
add
adc
or
push
scas
inc
jmp
adc
cmp
push
mov
fld
daa
scas
orl
sub
mov
ljmp
cmp
sbb
lea
ficompl
push
dec
lahf
jne
cmpsb
pop
mov
mov
loopne
fdivs
paddb
or
push
in
scas
add
pop
mov
mov
sbb
jle
rol
popf
lret
mov
ljmp
pusha
jl
push
mov
pop
mov
adc
cmp
cmp
pop
mov
adc
test
inc
ret
incb
pusha
out
test
mov
rcrl
std
adc
out
icebp
lea
mov
scas
rcll
je
or
jb,pt
test
jnp
sub
adc
jmp
popf
imul
int
scas
or
enter
inc
pusha
insl
jg
test
lock
movhps
loope
fnsave
fwait
bound
cmp
add
or
imul
xchg
mov
pop
int
sub
sub
mov
adc
jae
imul
add
dec
pop
push
lock
push
cmp
mov
outsl
xchg
or
or
inc
dec
cmc
movswl
jnp
fimuls
pop
lds
and
enter
movsl
jp
xor
xor
push
cmp
mov
rcll
mov
add
inc
ljmp
or
dec
mov
ljmp
pop
negl
jmp
stc
jge
aad
sarl
adc
inc
in
mov
sbb
mov
inc
call
das
jno
jl
adc
fidivs
cltd
jg
lret
mov
adc
xchg
test
add
adc
lcall
inc
sub
fs
push
adc
push
inc
dec
fistpll
lahf
jl
jnp
push
je
mov
inc
lea
mov
mov
or
out
fnstsw
sub
adcl
sub
pop
stos
push
adc
push
std
int
adc
xor
cmp
adc
ficompl
pop
es
orl
inc
cmp
imul
addb
jnp
push
and
adc
dec
mov
push
sarl
daa
push
mov
push
adcl
icebp
out
iret
push
shl
inc
mov
rcll
movsb
loopne
aas
ljmp
push
ret
xor
stos
or
push
int3
jp
xor
shrb
test
cmpsl
sub
outsb
pop
dec
xlat
aas
or
int3
xor
mov
gs
insl
mov
shrb
ljmp
fwait
les
roll
aas
out
mov
stos
fiadds
loop
outsb
add
xchg
mov
mov
out
sbb
sub
stos
xchg
inc
adc
push
shr
jae
mov
push
mov
movsl
mov
push
bound
sarb
inc
inc
xor
inc
xchg
xchg
stc
int
icebp
or
call
push
sbb
pop
adc
les
fisubs
lcall
or
repz
xchg
sub
mov
lcall
and
jl
lahf
sbb
add
insl
into
sub
pop
ss
add
pop
mov
movl
ljmp
stos
in
test
mov
pusha
in
lret
xor
adc
aaa
outsb
push
fldenv
rcrl
jg
js
dec
ljmp
or
imul
in
add
popa
fnstenv
cmp
xchg
and
bound
sbb
in
mov
ljmp
mov
decl
mov
push
xchg
push
xchg
insl
push
daa
sub
rclb
xchg
fwait
ror
xchg
arpl
int
and
add
push
adc
ss
xor
or
push
push
mov
xchg
cmp
sub
ficompl
push
push
and
cld
aaa
jno
xchg
ret
rcl
das
mov
pusha
push
mov
mov
mov
add
outsb
jbe
xlat
call
xchg
lahf
sub
push
imul
test
cmp
push
aaa
out
loopne
mov
dec
mov
pop
pop
aas
mov
add
out
andb
loope
pushf
sub
adc
ret
sub
es
cmp
repnz
pop
lahf
jnp
imul
mov
jae
xchg
push
xor
push
inc
jle
add
arpl
mov
fnstenv
inc
std
jge
das
mov
xlat
outsl
fstl
ja
jle
shlb
in
lcall
xor
nop
je
jle
cli
xchg
sub
and
add
cmp
fwait
imul
xchg
xor
mov
add
lea
test
ret
das
pop
adc
ss
push
shrb
fdivl
iret
jp
xorb
adc
mov
sub
imul
adc
jg
dec
sbb
mov
sbb
xor
loopne
jmp
lret
xchg
xchg
inc
mov
add
xchg
lods
ret
test
and
push
bnd
sbb
push
jp
cmpsl
push
iret
bound
add
pushf
push
pop
fs
loope
push
jnp
sbb
lods
popa
mov
arpl
dec
and
push
xor
jno
mov
movsl
mov
shlb
inc
jle
pop
in
out
dec
data16
pop
xchg
mov
xchg
pop
fiadds
mov
mov
test
imul
jecxz
xor
out
test
out
incb
int
jno
mov
dec
mov
push
rcr
sub
lret
ret
iret
sbbl
push
push
xchg
aas
add
add
jg
scas
ljmp
jmp
add
mov
mov
mov
enter
sub
mov
imul
in
ror
lcall
jno
orl
dec
rcrb
jmp
dec
xor
mov
mov
and
movzwl
dec
cmp
jmp
shl
fdiv
hlt
xchg
pmulhw
sbb
inc
mov
cmc
dec
adc
clc
int
push
pop
nop
adc
cltd
fisubl
mov
push
dec
mov
cmpsb
frstor
cmpl
sbb
in
mov
shr
dec
bound
and
jae
xchg
xchg
test
inc
xor
sub
xor
arpl
mov
xchg
or
adc
jecxz
and
push
xchg
ffree
jmp
mov
or
xchg
rclw
fwait
inc
stos
xchg
mov
nop
mov
insb
lret
and
pop
fidivl
push
and
xor
out
jl
push
pop
mov
popa
andb
cmp
scas
sbb
jne
mov
idivl
add
mov
cmp
or
adc
mov
ret
je
mov
fisubrl
pop
and
inc
mov
push
push
mov
sbb
js
imul
imull
adc
dec
or
jl
mov
cmp
xor
and
cmp
push
add
in
push
mov
cmpsl
cld
outsb
sub
push
jg
lods
pop
fs
mov
fcoml
insb
add
iret
push
aad
xchg
popa
sti
data16
inc
xchg
mov
fdivr
sub
mov
fdivs
sbb
sbb
cmpsl
inc
imul
js
mov
imul
imul
movsb
testl
rcrl
push
push
xchg
call
aas
aas
scas
std
sub
xchg
std
popa
and
or
add
cmp
test
insl
arpl
xchg
pop
inc
xor
clc
mov
push
mov
adc
pop
cld
pop
insb
or
or
in
pop
lods
ljmp
fdivrl
xchg
dec
lcall
ja
mov
ljmp
adc
mov
movsl
stos
faddp
repz
sub
dec
xorl
and
loop
sar
clc
jmp
xchg
fsubs
inc
mov
fdivs
xor
test
jns
rcl
cmc
out
mov
insb
in
cmp
lcall
sub
inc
push
inc
mov
inc
jge
cwtl
aad
mov
sbb
popa
add
loopne
cmp
in
imul
in
cmp
add
into
ficomps
add
jb
cmp
push
mov
pop
mov
std
inc
outsl
inc
xchg
push
xorl
mov
xchg
jecxz
push
adc
lock
psubb
clc
xor
inc
xor
lcall
repz
aas
add
sub
mov
shlb
pop
sub
scas
mov
jo
pop
cmpsl
mov
jg
jbe
or
and
mov
loope
jno
xor
dec
loopne
xchg
and
mov
jno
cltd
pop
xchg
in
cli
fisttpll
repz
rorl
inc
adc
and
xchg
xor
or
cs
add
inc
jbe
pop
mov
int
lret
scas
mov
ja
js,pt
adc
pop
sbb
mov
inc
je
dec
and
jge
push
cmc
mov
sahf
adc
dec
xor
loopne
cli
cld
stc
shll
in
cmpsb
pop
or
add
cwtl
les
sub
sub
sahf
mov
or
add
jl
fimull
jns
rclb
lock
cmpsl
mov
sbb
addr16
sbb
fwait
aas
cmp
pop
sbbl
fs
push
pushf
mov
jg
icebp
jmp
dec
inc
mull
out
sbb
insl
stos
mov
dec
pop
inc
mov
sbb
cmpsl
fsubr
ss
pop
xor
cli
shrl
subb
dec
daa
pop
imul
sbb
iret
xor
out
pop
into
push
pusha
fisubrs
out
adc
cli
pop
push
sub
push
sub
insb
loopne
js
rol
sbb
stos
and
test
adc
pop
out
sbb
rolb
jno
or
dec
lds
and
mov
bound
imul
adcl
jle
dec
mov
testb
fdivl
shll
cmp
imul
aas
xchg
leave
mov
jo
aas
test
or
out
sbb
pop
mov
pop
sub
mov
loope
or
repnz
je
mov
lock
dec
mov
mov
stos
mov
mov
push
push
pop
xchg
push
in
lods
sarb
icebp
aaa
insl
xchg
cmp
repnz
mov
and
mov
adcw
aam
rcl
test
daa
arpl
lods
insl
push
jo
or
mov
pop
addr16
push
mov
mov
int
stos
call
xchg
ja
into
scas
push
mov
push
jl
pusha
mov
mov
push
sbb
and
imul
sub
jne
pushf
cmpsl
mov
or
out
xchg
in
je
cmp
shrl
jb
cld
xor
bound
inc
dec
fimull
push
ret
and
add
add
push
push
xor
pusha
xchg
rorl
in
out
mov
and
jno
test
inc
xchg
push
jns
xchg
jle
xlat
inc
jb
aaa
sbb
loopne
adc
popa
xchg
pop
lcall
loopne
aad
xor
ja
xchg
mov
xchg
out
jg
mov
mov
xchg
stos
lret
and
ja
cmp
xchg
xchg
dec
push
xchg
imul
in
data16
mov
sbb
or
add
or
cmp
sti
pop
sub
sbb
jbe
sub
sahf
sti
sub
flds
or
mov
enter
adc
cmpsl
mov
jecxz
les
fs
std
jge
ffreep
ffreep
mov
movsb
je
or
int
pop
lahf
insl
jae
popa
xchg
clc
clc
icebp
mov
pushl
jmp
out
mov
jecxz
mov
rcrb
fdivl
pop
insb
jb
or
adc
insl
xchg
jns
cmp
adc
cltd
mov
pushf
stos
std
out
out
xor
push
inc
dec
pop
nop
psubusw
pusha
mov
pop
or
jno
pop
lods
or
testb
mov
xchg
stos
jge
icebp
scas
cmovle
pop
xor
sbb
rclb
mov
adc
imul
and
imul
hlt
push
pop
inc
mov
ficompl
inc
pop
push
addr16
loopne
fmul
repz
adc
subb
movsb
xchg
test
lods
insl
xchg
xchg
cltd
cltd
mov
les
jge
iret
add
sbb
je
lea
aaa
xchg
mov
rcl
push
mov
imul
mov
xor
ljmp
daa
repnz
bound
dec
push
loop
inc
jle
repnz
addr16
adc
push
imul
xor
mov
dec
xor
xlat
cltd
add
dec
hlt
jne
push
fiaddl
sbb
mov
std
xchg
add
psubusb
lods
and
shrb
je
and
jnp
pushf
mov
stc
adc
jl
xchg
mov
push
call
jns
xchg
sub
sbb
lcall
sahf
cmpsb
pusha
xchg
pushf
das
sti
inc
pop
push
inc
pop
xor
inc
dec
mov
lret
test
stos
cltd
lock
xchg
fistps
jo
das
mov
lcall
inc
orb
push
inc
stc
or
hlt
adc
mov
and
add
dec
loopne
ret
arpl
negb
add
out
adc
cwtl
movsb
xchg
jno
mov
cmove
adc
xchg
mov
in
jmp
push
xchg
mov
or
addr16
pop
ret
cld
sub
test
sbb
cmpsl
pop
push
lret
push
fsubs
decb
xchg
mov
push
jno
jb
insl
mov
adc
cld
dec
pushf
shrl
sub
sub
or
xor
mov
push
shl
xor
test
inc
jbe
xchg
xchg
lods
addr16
es
lret
push
out
stc
andl
sahf
cmp
push
jo
fwait
jl
push
outsl
lret
test
dec
out
adc
jge
shrl
sub
loopne
js
lds
mov
mov
test
push
es
fcmovb
push
mov
ljmp
arpl
add
and
add
ja
lock
and
mov
es
mov
lret
cmp
cmp
popa
mov
icebp
movb
dec
dec
shl
ja
mov
lret
pushf
add
icebp
jne
xor
test
xor
sahf
shr
sbb
addr16
repnz
or
cmp
shll
stos
xor
lods
rclb
icebp
adc
mov
daa
mov
mov
cmp
test
dec
rcll
data16
rorb
incl
adc
lret
sub
mov
push
add
jbe
mov
sbb
mov
ffree
push
sbb
shrb
jmp
pop
push
sub
cmp
lods
pop
in
jp
mov
icebp
sbb
xchg
lea
cltd
cmpsl
or
mov
mov
imul
cmp
pop
arpl
mov
pop
jne
movsb
and
or
cs
mov
mov
pusha
cmp
roll
arpl
outsl
ret
mov
xor
push
push
sub
push
push
fwait
insb
dec
add
add
adc
jl
sahf
ret
and
mov
mov
sbbb
je
outsl
mov
stos
or
ret
inc
enter
cmp
cmp
mov
adc
xchg
dec
fildll
js
xchg
hlt
jne
loope
adc
inc
mov
jns
pop
sub
push
jns
xor
mov
cmpsb
add
jns
and
mov
rcll
testb
pop
lods
test
xchg
pusha
cld
push
jae
mov
jae
jo
outsl
flds
sub
cmp
xor
std
mov
in
fildll
fnstcw
sub
lds
imul
add
in
popf
mov
enter
inc
ljmp
daa
repz
xor
enter
sub
push
jecxz
test
sub
int
in
stc
fwait
xor
sub
push
int3
push
push
mov
imull
and
mov
fisubrs
pop
fs
xor
pop
mov
flds
fstl
mov
xchg
mov
in
imul
dec
cmp
jle
xlat
mov
push
je
popaw
pop
adc
in
aam
inc
push
dec
pop
mov
outsb
push
outsl
shlb
int
loop
jle
fidivl
idivb
fstl
sub
push
mov
rcr
mov
in
pop
sub
jnp
test
gs
xor
mov
cwtl
sbb
sti
ficomps
outsl
les
out
xchg
mov
leave
sarl
es
call
cmpsl
scas
jb
das
and
lods
or
fiadds
push
pop
js
pop
cmc
xor
pop
pop
push
push
push
pop
mov
or
jb
push
rclb
dec
add
push
je
xor
sbb
das
sub
cmp
cs
mov
xchg
xor
outsl
adc
cmp
mov
cmpsb
je
sahf
add
push
je
jle
pop
orl
sbb
sarl
adc
xor
es
sbb
xchg
movsb
push
cmp
sbbb
sub
push
lea
mov
aam
out
lret
lret
push
insl
pop
pop
iret
mov
pop
mov
mov
loope
fcom
dec
mov
ljmp
xor
std
bound
jl
xchg
mov
xor
inc
push
pop
fisttpll
mov
adc
gs
scas
mov
aas
pop
jno
xor
push
lcall
gs
lea
ljmp
inc
dec
push
xchg
xor
stc
je
jne
fcmovne
inc
movsb
inc
mov
aad
xor
push
mov
into
xor
cs
push
xchg
sahf
movsb
cmc
and
sub
push
in
pop
iret
stc
repz
pop
dec
rorb
mov
adc
sbb
int
add
rorb
or
and
adc
out
stos
push
jle
jae
fistpll
dec
shll
push
lods
rcrl
xor
jle
lock
adc
mov
pop
scas
inc
mov
ret
mov
pop
cli
mov
cmp
sbb
sti
lahf
stc
cltd
jnp
lock
jb
cltd
ret
call
xor
xor
int
or
adc
test
in
sub
outsl
push
test
lods
aad
mov
xor
dec
pop
dec
push
scas
imul
cmp
loope
push
out
cli
xchg
inc
sub
push
sbb
mov
pop
cwtl
hlt
mull
out
fstl
xchg
adc
fwait
sub
pusha
test
movsl
call
or
jmp
mov
jnp
mov
das
mov
orb
hlt
cmc
pop
mov
fsubs
frstor
out
pslld
xchg
mov
mov
pop
dec
xor
fnstsw
lock
int3
cmp
inc
push
enter
movsl
push
pushf
mov
mov
add
xor
xchg
lahf
test
cmpb
mov
add
fidivrl
xchg
in
cli
xor
lods
xchg
and
aaa
jnp
fiaddl
mov
ffree
bound
lcall
rcrb
push
xor
mov
lock
clc
movsl
fs
mov
sbb
in
xor
and
xlat
pop
mov
out
adc
sarl
cmp
jae
cmp
clc
jl
pop
mov
pop
push
testl
imul
or
mov
sarb
lock
xchg
inc
arpl
pop
cld
jns
xchg
in
pop
aad
inc
dec
inc
lahf
cwtl
repz
pop
pop
ja
mov
adc
cmp
loop
pop
mov
out
ret
mov
xor
test
hlt
xor
push
mov
sahf
scas
or
loop
add
xor
sbb
cmp
jae
in
xor
xor
adc
adc
mov
adc
rclb
scas
mov
fs
cwtl
push
mov
lcall
popa
mulb
adc
xchg
mov
lock
test
add
mov
adc
xor
loop
mov
inc
les
dec
pusha
jecxz
fbld
cltd
jo
sub
stc
and
mov
cmp
sub
push
mov
mov
push
lcall
ret
pushl
int
dec
fstl
mov
dec
sbb
mov
mov
pop
and
mov
dec
mov
loope
cmp
aaa
out
push
repnz
and
cwtl
loop
rcrb
icebp
mov
cmp
mov
or
mov
pop
sahf
sbb
inc
jns
pop
cmp
in
adc
ret
sbb
pop
shrb
mov
sarl
xor
or
and
cmc
and
push
insl
dec
mov
jecxz
cmpsb
jl
je
into
sub
into
jno
inc
test
sub
adc
movsl
into
xor
cmp
aad
cmpsl
mov
out
pop
push
mov
dec
dec
scas
sbb
or
into
jge
jmp
mov
ljmp
lock
inc
push
frstor
push
pusha
clc
xchg
and
dec
push
xchg
cmp
mov
iret
popf
push
mov
mull
jle
xor
mov
setbe
icebp
fdivs
out
pusha
cld
aas
cwtl
and
imul
sbb
mov
jo
orl
mov
movsl
add
jno
sbb
and
mov
popf
mov
loop
mov
fcoml
mov
inc
mov
push
xchg
jg
roll
xor
sahf
xchg
mov
sub
add
ret
jge
scas
xor
mov
jne
iret
push
xor
movsb
xor
push
add
daa
jle
xor
add
hlt
adc
and
mov
mov
or
loop
sbb
fistpll
xlat
clc
sub
push
filds
adc
pop
mov
jecxz
jb
mov
in
pop
push
pusha
lods
xchg
jns
das
insb
xchg
mov
mov
sarl
cmpsb
leave
jbe
jmp
mov
xor
repnz
pop
xchg
cltd
cli
xchg
movsb
or
sbb
jl
pusha
and
jns
and
add
loop
add
mov
or
outsb
fisubrl
mov
pop
mov
push
out
orb
mov
or
jp
out
call
pop
cwtl
xlat
insl
adc
dec
ja
ja
addl
jl
arpl
pop
das
or
fidivrs
xor
jmp
pop
and
cmp
sub
pushl
stc
push
inc
sti
xchg
push
imul
and
sbb
call
in
js
mov
xor
jl
mov
and
mov
inc
mov
mov
loope
fisubs
dec
inc
pop
rol
out
jmp
xlat
sbb
test
sbb
lock
stc
pop
daa
jge
pusha
adc
push
pusha
into
mov
xchg
and
xchg
sub
negb
outsb
ss
adc
pop
int3
in
and
int
mov
mov
sbb
rcrb
aad
in
inc
xchg
pop
mov
out
hlt
mov
ret
lret
mov
decb
loop
add
xchg
out
ss
sub
shll
sbbl
out
popa
mov
xchg
jo
pop
adc
inc
sti
xor
xchg
pop
cmc
or
lea
fisttps
jns
mov
cld
add
sbb
fdivl
gs
loop
clc
dec
aaa
mov
ds
xor
sub
dec
js
clc
sar
sbb
and
imul
push
or
push
mov
or
fcomps
fwait
adc
test
loopne
outsl
or
cs
lods
fwait
mov
cmp
cmpsb
xchg
pop
orb
das
sbbl
ds
mov
adc
sub
sbb
cmp
lret
cmp
push
jnp
pop
pushf
insb
pusha
lods
loopne
stos
ret
insb
push
in
popa
cmp
call
fiadds
sub
adc
sbb
add
cmpsl
jo
sbb
rolb
inc
shrb
cwtl
icebp
ds
pop
jns
out
sub
add
sbb
pop
add
or
push
cmpb
push
fwait
sti
sbbb
mov
cld
push
or
aas
xchg
pop
call
loope
xor
mov
test
insl
dec
into
scas
cmp
arpl
gs
adc
iret
fdivr
mov
adc
and
call
fs
sub
jb
jnp
lret
dec
mov
pop
mov
fisubs
gs
or
cmpsb
add
inc
mov
test
cmp
xchg
push
stos
lock
adc
jns
arpl
bound
mov
aas
stc
cmp
sbb
ret
in
jecxz
stos
mov
aas
sti
sbb
fwait
cmp
ret
in
push
jl
sub
inc
adc
aas
pop
jno
daa
rep
mov
mov
inc
sub
hlt
push
lahf
cmp
add
cwtl
dec
inc
icebp
sub
push
push
push
into
mov
sahf
insb
pop
aam
mov
xor
lods
push
xor
xor
dec
adc
jne
mov
sbb
pushf
lds
stos
iret
addr16
push
lds
cwtl
mov
test
sahf
inc
jle
enter
insl
xchg
lret
popf
pop
mov
sbb
sarb
push
push
dec
scas
mov
roll
cwtl
addr16
adcl
fisttpl
xor
mov
cmp
or
mov
imul
scas
adc
push
xor
jl
ja
stc
xor
cmc
add
test
loope
mov
fdiv
xchg
stc
je
xor
inc
ret
aam
test
cli
add
jnp
or
push
icebp
inc
outsb
out
and
jmp
mov
inc
shrl
insl
push
repz
dec
andl
xchg
icebp
ljmp
pop
cwtl
outsl
shll
mov
mov
and
aam
fbstp
imul
and
sbb
push
out
add
pop
adc
mov
xor
loope
fs
cmp
dec
bound
cs
notl
jle
fucomp
mov
sub
pop
sub
insl
pop
pop
sub
cli
push
add
ds
or
stos
fildl
or
stc
shrb
mov
rorl
movb
gs
dec
xchg
jo
sti
clc
lret
inc
mov
std
dec
outsl
insb
pop
rorb
shrb
fidivrs
dec
loop
test
xchg
pop
cmp
xchg
and
adc
ret
repnz
jl
aam
xchg
mov
cmp
mov
mov
bound
adc
roll
leave
jno
out
pop
mov
repz
jmp
rcll
inc
add
test
data16
adc
xchg
mov
or
xor
cmp
xchg
scas
insl
lahf
data16
sahf
nop
mov
push
push
mov
ret
cmpsl
push
push
cmp
cli
leave
nop
cmp
jno
cmp
mov
sub
sub
inc
mov
sbb
aam
test
movsl
jle
xchg
xor
push
mov
sarl
in
outsl
js
mov
in
inc
mov
iret
ficoml
xchg
push
test
xchg
je
sahf
addr16
in
outsb
adc
push
mov
mov
add
out
push
sbb
testb
int
dec
pop
or
fwait
test
add
push
test
mov
push
pop
out
dec
cmp
ret
xchg
add
sysenter
sahf
cmc
jecxz
dec
jne
sub
push
movsl
dec
sahf
call
sub
in
sbb
push
or
dec
cmpsb
add
or
xchg
fcompp
dec
shr
cmp
push
fadds
test
lods
mov
inc
jbe
scas
add
xchg
sub
mov
repz
mov
push
rorl
shrl
mov
inc
inc
cmp
mov
sti
and
mov
sti
lret
fdivl
and
adc
frstor
mov
push
add
pop
out
in
movsb
fmuls
push
rolb
shrb
adc
shll
mov
sahf
lcall
stc
and
pop
inc
test
inc
clc
xchg
mov
sbb
xchg
aam
add
xchg
or
lock
into
nop
mov
mov
test
in
sub
mov
mov
rcll
in
shrb
sub
lret
pop
and
adc
jle
js
mov
data16
fiadds
stc
xchg
xor
adc
sub
mov
xchg
fsub
dec
sub
scas
out
add
dec
int
sbb
push
fdivrs
loope
hlt
dec
adc
loop
sub
mov
sbbl
rorl
xchg
inc
aad
jns
imul
fidivrl
sbb
mov
cmc
mov
lahf
in
hlt
mov
mov
mov
scas
dec
cmp
mov
jno
cld
fwait
cld
aaa
out
inc
aas
test
cmp
jbe,pn
mov
sbb
ljmp
push
popf
test
pop
fistps
cs
sub
pop
orb
out
adc
push
data16
mov
inc
inc
fisubrl
outsb
or
das
inc
sub
adc
sti
cmp
mov
int
movsl
sarl
into
mov
push
add
sti
enter
imul
dec
imul
push
imulb
loope
lret
ficompl
insb
ret
stos
loope
es
ja
mov
inc
push
pop
hlt
cltd
les
insb
ss
fisubrl
inc
mov
push
mov
jge
add
push
add
mov
pop
xchg
mov
sahf
je
dec
and
js
scas
jl
repz
cmp
rdmsr
pop
push
repnz
xchg
sarl
cmp
pop
sbb
jmp
test
xchg
leave
shrb
xchg
cmc
es
and
add
cmp
and
fwait
ljmp
sbb
ljmp
push
lds
push
in
sahf
ljmp
sub
inc
bound
push
inc
in
xor
mov
mov
xchg
ljmp
jmp
mov
out
mov
xor
fs
adc
jmp
testl
out
pop
mov
leave
outsb
iret
test
adc
cmp
orl
jmp
aad
xchg
mov
test
les
adcb
lods
mov
pushf
cmc
cli
insb
imull
jp
jg
cmp
neg
and
jo
xchg
in
fstl
mov
rclb
sbb
or
and
cmp
and
cltd
xor
lock
sarb
out
ret
push
testl
mov
es
insl
adc
mov
hlt
nop
shrb
adc
fisttpl
in
in
pop
dec
jbe
mov
stc
add
fisubl
and
mov
ss
stos
mov
inc
test
test
add
cmc
in
push
ret
icebp
and
xchg
adc
stc
pop
fsubrs
lods
hlt
lods
sbb
aam
int3
fnsave
adcl
ret
or
stos
pop
aaa
imul
sbb
xor
fstpl
pop
dec
das
push
push
mov
adc
sub
adc
in
mov
andl
jnp
xchg
ljmp
rolb
lea
xchg
fs
xchg
pop
pop
std
leave
enter
add
add
aas
adc
ja
lcall
cmp
adc
adc
cld
mov
mov
cmp
movsb
or
pop
xchg
or
push
and
inc
or
loop
rclb
xor
push
jno
or
mov
add
sarl
xlat
add
subw
pop
dec
sub
jmp
xchg
adc
rcr
push
pop
fldenv
lock
xchg
sub
mov
mov
rorb
ljmp
out
cmp
mov
dec
lcall
nop
shll
rcrb
add
ss
sahf
rorb
adc
adcb
sub
pop
pop
ja
mov
inc
imul
pop
arpl
hlt
and
inc
jnp
sbb
int3
shrb
loope
push
cmp
fstl
mov
sahf
inc
into
stos
mov
sub
cmpsl
dec
jns
pushf
jbe
xor
cmpsl
inc
push
pop
out
aas
repz
mov
mov
add
inc
push
pop
aad
or
sbb
jns
lds
push
call
cmpsl
mov
ret
iret
clc
pop
push
adc
cmp
int
mov
incb
mov
jns
push
mov
mov
shll
sbbl
xor
inc
mov
xlat
es
fmuls
jmp
cmp
scas
cmpl
sbb
mov
std
xchg
test
movsl
cmp
fmull
cmp
in
gs
push
push
sbb
popf
lods
fnstenv
adc
xlat
loop
pop
dec
mov
outsl
pop
mov
pop
mov
dec
in
adc
jmp
push
or
imul
pop
test
cmp
dec
test
push
outsl
ret
shrl
xchg
push
call
pop
adc
ja
dec
jp
dec
sub
cmpsb
xchg
xor
iret
out
push
push
rol
or
ds
dec
leave
test
addr16
cmp
into
pop
movsl
sbb
sub
gs
fisttpl
cmp
mov
dec
jbe
je
sbb
and
repnz
jno
orb
mov
pop
push
adc
adc
sub
pop
xor
cwtl
push
push
cmpsl
jb
mov
mov
push
jge
mov
mov
xor
jnp
ret
lret
and
outsb
push
in
divl
gs
jne
sbb
scas
push
sub
cmp
data16
and
dec
pushl
out
lods
das
push
fadd
stc
pop
xchg
jae
fidivl
int3
jmp
cmp
jecxz
je
sahf
cmp
mov
iret
jmp
popa
sub
inc
dec
sahf
xchg
stos
fcoms
leave
mov
and
loopne
push
pop
sub
popa
in
mov
shr
jb
stc
pop
scas
out
aam
sub
shll
mov
pop
insb
mov
dec
das
scas
dec
pop
test
es
js
out
push
shlb
push
rcl
loope
addr16
mov
pop
mov
inc
stos
mov
cmpsb
or
pop
fisubrs
aas
xlat
ja
pop
cmp
ja
xor
push
lock
popf
xchg
pop
fidivrl
xor
adc
sub
adc
xchg
sbb
sti
and
jae
jmp
les
sub
loope
scas
mov
fcmovnb
xorb
sub
loope
xchg
cltd
cld
leave
cli
jp
loope
pop
sbb
ret
xchg
into
ljmp
ja
pop
push
sbb
push
call
dec
xorb
sbb
pop
jns
adc
mov
ljmp
jae
pushf
add
outsb
xor
push
cmp
fwait
ret
pop
addl
aaa
mov
mov
jnp
push
in
adc
in
rol
out
or
loopne
dec
mov
js
mov
mov
push
add
jl
or
test
aas
sub
imul
shlb
insl
jl
push
lds
adc
sbb
and
insl
imul
outsb
dec
jecxz
out
call
idivl
aaa
js
fnstsw
pop
mov
lcall
ds
cmp
popa
sahf
imul
sub
pop
inc
and
cld
jbe
je
cmpsb
push
subl
cmc
sub
lods
mov
pop
xchg
cmp
cmpsl
and
and
shll
fstl
test
add
push
repnz
adc
push
cli
popw
lret
and
dec
fsubr
popa
pop
jle
or
pop
sub
mov
push
dec
data16
rolb
pop
fimuls
push
std
and
mov
addr16
and
dec
sub
inc
jnp
out
movsb
jbe
jbe
mov
lret
subb
pushl
mov
pop
xchg
aad
or
pop
mov
jle
mov
or
imul
ds
cmpsl
fistpll
or
imul
sbb
sbb
sbbl
add
mov
xchg
mov
jmp
leave
imul
mov
sti
arpl
mov
mov
push
arpl
add
test
xor
ljmp
lcall
mov
leave
jbe
cmpl
clc
pop
jmp
add
sub
jne
out
sti
int3
inc
dec
push
or
mov
xchg
jle
movsl
cmpsb
dec
int
into
or
loopne
ljmp
cmc
cmp
rcrl
push
mov
repz
mov
and
iret
cmp
and
stc
jo
sbb
pop
bound
call
mov
or
mov
fldt
enter
es
adc
cltd
sub
les
adc
or
mov
shr
mov
mov
sub
or
xor
sbb
in
fistl
call
shrl
xchg
sbb
test
sub
inc
pxor
dec
and
jp
das
mov
in
cld
stos
imul
rorl
mulb
mov
xor
cmp
jo
aad
scas
lods
mov
iret
out
outsb
xchg
dec
dec
test
xor
pop
fidivrs
jo
inc
bnd
stos
fiadds
flds
dec
jp
daa
jl
aas
adc
and
mov
cmp
rol
jg
inc
sahf
cli
sub
jmp
fcomps
mov
lret
dec
push
sbb
sbb
out
push
xchg
outsb
cmp
jmp
xor
lea
xor
or
iret
fst
out
insl
xor
ljmp
pop
popa
dec
xor
jge
aaa
mov
cmpsl
mov
xor
or
jecxz
aad
aas
xor
or
and
inc
inc
loope
mov
arpl
adc
and
pop
pop
ficompl
dec
mov
test
jnp
push
mov
pop
jp
mov
mov
cwtl
cld
imul
pop
test
subb
pop
sbb
sbb
sub
mov
sub
push
iret
fnstcw
and
and
xor
fldl
leave
xchg
call
adc
repz
cmp
dec
std
pop
out
je
ja
pop
pop
mov
jl
ffreep
mov
pop
int
sbb
push
mov
negb
and
in
sbb
lods
movsl
cltd
xchg
sub
xchg
inc
lea
pop
adc
mov
xor
shlb
popf
stos
jle
aaa
mov
pop
hlt
jne
ret
aas
lret
mov
shlb
push
or
push
sbb
mov
inc
fstpl
fadds
mov
imul
xchg
xor
in
inc
repz
jae
ror
mov
enter
cltd
loopne
fcomps
mov
adc
in
mov
fs
push
cli
push
push
push
mov
call
xchg
and
cmovle
dec
lret
cmpsl
cltd
inc
out
negb
lods
shll
fiaddl
or
push
jne
mov
sbb
push
sub
mov
push
jecxz
jp
sahf
jp
push
sub
push
in
fildll
xor
xor
sbb
lahf
clc
maskmovq
loope
sub
mov
mov
aas
pop
shl
jbe
inc
jl
jae
popa
scas
loop
jno
nop
bound
gs
xchg
xor
push
pop
sub
int3
into
out
fsubs
in
imul
inc
ret
out
pop
fs
scas
add
sub
mov
fadd
mov
inc
cmpsb
out
ret
mov
dec
xorl
bound
dec
add
lret
cmp
bound
aad
stos
sub
iret
inc
or
mov
aaa
cs
fs
in
cmp
orl
mov
adc
loop
pusha
fcomps
and
mov
cmp
movsl
add
lods
ds
cld
xchg
test
mov
jae
mov
and
mov
pop
mov
cli
dec
cltd
push
push
pop
mov
mov
repz
pop
leave
jne
sub
test
in
sbb
cmp
loopne
scas
jle,pn
incl
mov
xlat
repz
adc
gs
pop
xor
push
call
imul
in
lret
or
ja
mov
out
adc
xor
out
clc
cld
sbb
pcmpgtw
and
sbbb
xor
jne
nop
push
ret
repz
sbb
int3
subl
sub
jae
jp
pop
decl
mov
xlat
push
mov
lahf
cmp
push
xor
push
stos
pop
mov
sbb
icebp
stc
gs
aaa
lcall
mov
and
cltd
sbb
mov
xor
cmp
sub
jge
dec
pop
sarl
fs
jg
pop
sarl
repz
outsb
sub
pop
lods
cs
xchg
add
jge
fwait
push
xor
push
sbb
outsb
inc
pop
jb
and
and
outsl
xor
xor
mov
scas
add
adc
mov
les
movsb
mov
jle
cwtl
shll
stc
lds
mov
int3
or
sahf
cmp
sbb
inc
xchg
push
lret
das
push
pop
sbb
inc
jmp
frstor
cwtl
into
ss
inc
aam
filds
inc
mov
sti
adc
jb
inc
frstor
popf
pop
mov
pushf
cld
add
mov
cld
mov
repz
mov
rcrl
out
shl
leave
hlt
inc
std
mov
push
and
dec
mov
repz
add
shl
xchg
dec
dec
xchg
aam
dec
mov
jns
mov
sub
shl
sub
addr16
mov
mov
jo
incb
ja
mov
mov
ret
push
data16
mull
cmp
das
popa
orb
add
inc
sahf
arpl
fcoml
mov
sbb
sbb
rol
push
cmp
mov
or
jge
fists
or
push
sub
push
jne
or
js
xchg
insb
pop
xor
test
sti
ret
or
loope
add
sub
in
aam
and
mov
in
push
test
in
hlt
pop
out
insl
xchg
and
adc
fstpl
cmp
cld
lahf
sbb
into
xchg
fsubrp
movsb
ljmp
mov
inc
xchg
add
jae
adc
push
in
pusha
cmp
cmp
bound
int
jae
sbb
pop
out
repnz
aad
mov
inc
in
in
push
movlps
inc
mov
sub
push
aad
jo
cmovs
push
jp
notb
mov
push
xor
jnp
fldl
push
or
imul
fildll
mov
cmp
int
sahf
inc
stc
scas
pop
imul
pop
push
xor
mov
out
fidivl
enter
add
push
pop
xchg
cmpsb
mov
dec
dec
sti
inc
or
or
cltd
xchg
push
inc
outsb
xchg
out
loop
sahf
mov
fwait
into
inc
cmp
adc
pop
std
fmul
inc
fisttps
mov
into
cmpsl
stos
jge
and
sub
and
mov
sbb
pop
pop
das
aas
adc
add
aam
or
add
mov
fldenv
jecxz
pop
addr16
lret
mov
or
sbb
pop
and
xorps
nop
mov
inc
push
pusha
aad
mov
mov
cmpsl
dec
pop
push
in
jecxz
into
cs
adc
test
adc
inc
cld
cmpxchg
notl
clc
clc
pusha
add
int
cmpsb
pop
mov
xchg
sub
xchg
loop
cmpl
mov
mov
iret
loop
movsb
xchg
or
pop
mov
stc
jbe
shrb
mov
cltd
loop
sbb
fdivs
mov
sahf
add
fucomip
dec
aam
mov
stos
dec
adc
and
sbb
cli
push
lds
int3
shr
in
call
sbb
pusha
call
mov
jnp
pop
popf
push
shlb
ficoms
sbb
pushf
push
out
imul
jmp
insl
and
and
push
pop
iret
inc
mov
popf
roll
and
add
cmp
lds
push
pop
inc
call
sub
in
jne
pop
adc
or
xchg
jecxz
out
ret
cmp
stos
xor
jbe
sbb
imulb
imul
mov
sti
xchg
test
adc
push
das
pop
add
pop
xchg
je
xor
dec
or
cmp
mov
xorb
push
mov
das
xchg
add
jae
jae
pop
cmc
dec
inc
repnz
xchg
dec
movsb
mov
scas
inc
pop
jg
outsl
lock
fsubrs
stos
and
adc
pop
movsl
mov
in
and
js
ret
lret
and
jne
push
pusha
mov
pop
in
fimull
dec
enter
and
pop
jnp
jge
fnstsw
mov
pop
es
fsubrs
add
test
leave
lods
ret
cs
dec
mov
iretw
sbb
xchg
mov
data16
cli
cmp
cmp
sti
test
call
push
fstps
mov
in
rcrl
sbb
fisubl
and
data16
cmpsl
jo
lahf
stos
stc
sarb
inc
inc
repz
stos
mov
sub
cld
mov
sbb
adc
sbb
cmp
jmp
imul
pop
or
int3
rclb
xchg
cmp
hlt
arpl
or
pop
mov
jbe
movnti
pusha
test
mov
push
or
imul
jbe
dec
cmp
cmp
mov
cwtl
push
daa
pop
imul
hlt
push
sbb
hlt
inc
andl
in
ret
int
or
inc
add
mov
jne
pop
jnp
jmp
inc
or
dec
iret
sbb
jg
mov
jp
loopne
das
push
mov
sub
sar
fcoms
xchg
std
add
or
ljmp
stos
sarb
aaa
xchg
mov
cmp
in
add
inc
iret
xor
pop
mov
mov
push
xor
dec
push
lcall
push
fdivl
fdivrl
scas
ds
add
xor
jle
outsl
sub
shr
imul
popa
adc
push
cltd
clc
fildl
dec
lods
in
push
sub
cmp
adc
sub
pop
or
xor
les
lea
les
lds
mov
adcb
outsl
xchg
xor
movsb
lods
and
popa
or
sub
push
mov
inc
jl
jp
mov
call
stc
lea
fxch
loope
loopne
ds
and
loop
sbb
ss
jmp
push
lret
dec
push
or
mov
xor
sbb
dec
test
jmp
rcl
nop
jl
ss
push
stos
lods
jle
dec
rcll
out
in
jnp
cli
loopne
push
cmp
inc
mov
sub
icebp
cmpsb
dec
mov
movsb
leave
mov
lret
dec
insb
divb
xchg
and
xor
inc
test
pop
adc
hlt
sarb
sub
clc
pop
pop
adc
and
mov
adc
mov
data16
lahf
aad
dec
leave
sbb
ret
adcl
adc
push
mov
test
add
xchg
int3
jg
fucom
add
mov
call
movsb
xlat
dec
pop
addr16
xchg
jb
sbb
ss
movntq
cwtl
sub
das
ficoms
adc
mov
inc
lret
lcall
enter
scas
fwait
inc
in
out
push
mov
sarl
fbld
addr16
push
mov
ret
pop
test
push
bound
adc
mov
dec
lret
call
pop
push
jo
push
and
pop
sbb
adc
cmp
xlat
lret
xchg
or
popa
out
arpl
lcall
bound
popf
add
xchg
inc
push
pop
dec
in
lahf
cmpb
fwait
lea
ret
outsb
jg
test
dec
jl
push
sub
sbb
mov
gs
mov
add
daa
cmc
sti
shl
mov
cmp
mov
test
add
bound
push
mov
out
leave
jbe
popf
or
jo
mov
pop
scas
jns
mov
jb
mov
inc
mov
push
sbbl
cwtl
stos
push
and
push
daa
dec
dec
sbb
lds
aaa
imul
push
lcall
pusha
and
sarb
push
push
aam
xchg
cmpsb
sub
xchg
fists
mov
int
jbe
icebp
adc
popf
xor
push
sbb
hlt
mov
or
xorl
add
inc
inc
mov
mov
call
mov
or
xchg
sbb
inc
cmp
pop
pop
push
in
lcall
xchg
mov
mov
xchg
mov
and
pop
das
pop
clc
loop
add
push
out
mov
dec
repnz
inc
test
sti
and
push
dec
cmp
mov
mov
pop
lret
sahf
inc
fcmovb
outsb
outsb
push
inc
adc
cmp
mov
push
and
test
cmp
rcr
sub
cmc
cs
fimuls
fwait
jmp
dec
jno
lahf
jb
lcall
data16
cmp
pop
pop
pop
mov
push
cmp
jle
pop
mov
pop
fidivl
xchg
or
mov
mov
shlb
stc
inc
out
arpl
or
in
sub
outsl
jecxz
mov
es
mov
das
xor
mov
or
jmp
imul
push
insl
ret
adc
add
push
pop
pop
loop
push
push
adc
lcall
shlb
inc
inc
inc
addb
dec
test
xchg
adcl
js
xchg
or
inc
and
jbe
adc
sub
dec
dec
mov
cmp
inc
out
and
jne
leave
outsb
out
mov
mov
sbb
jl
xlat
and
and
inc
push
lret
xor
dec
and
ds
call
jp
imul
dec
inc
inc
ficoms
sbb
fincstp
mov
sub
inc
ror
das
mov
xchg
adc
les
sbb
push
sub
loop
jp
int
jle
pop
out
pop
loop
inc
cmpsl
in
ds
int3
mov
inc
fistl
lea
mov
jle
and
sbb
sbb
jnp
push
and
repnz
push
scas
ret
push
rcrl
out
iret
inc
ja
popa
in
sbb
pop
mov
adc
gs
mov
stc
shll
je
mov
aaa
adcb
mov
cwtl
test
call
mov
out
stc
mov
leave
daa
mov
ds
mov
pop
or
mov
sub
push
sbb
bound
scas
loope
xlat
adc
mov
jp
xor
push
cmp
loop
call
or
add
mov
xchg
and
mov
in
ljmp
scas
push
fadd
inc
fwait
sbb
or
sbb
dec
push
mov
add
mov
adc
cmp
xchg
mov
aam
jnp
out
or
mov
add
inc
push
cmpsb
mov
jecxz
jp
mov
fsubs
cmp
adc
push
cli
rcrl
mov
cltd
mov
sbb
pusha
rcrl
pop
ret
mov
sub
scas
fcmovnbe
cmp
jbe
xchg
dec
adc
sub
dec
pusha
lret
pop
out
lcall
out
push
pop
mov
and
inc
jge
pop
mov
jb
and
push
push
pop
jo
jl
dec
xchg
pop
adc
out
xchg
pop
mov
cli
fnstcw
push
lret
into
and
xchg
daa
pop
dec
sbb
inc
add
ret
lahf
add
add
lods
push
jg
das
popf
jo
mov
movsl
jbe
xlat
lods
loop
push
test
mov
cmc
iret
loope
adc
mov
or
cmpsl
inc
test
mov
mov
adc
inc
cmp
inc
insl
sbb
jns
fimull
aaa
fs
insb
jns
mov
mov
add
push
sbb
jmp
call
sub
cmp
int3
push
jns
cmp
inc
sub
xchg
xor
mov
push
xchg
gs
shrl
or
dec
jmp
sub
js
jle
mov
dec
ret
push
sbb
add
movsb
lock
adc
mov
dec
mov
or
jle
stos
fs
dec
rorl
add
mov
sbb
std
dec
jg
loopne
in
push
xchg
jb
mov
outsl
jmp
fs
aad
adc
lock
lods
hlt
adc
xchg
repnz
mov
mov
outsb
aad
notb
pop
aam
fstps
xor
jne
push
arpl
in
imul
mov
sub
and
jp
push
icebp
addr16
or
jl
pop
add
pop
xchg
cld
pop
push
push
push
addl
rcrl
in
add
cmc
sarl
or
lds
mov
popa
cmp
fs
mov
jle
xor
mov
or
pop
jno
lcall
xchg
nop
push
sub
dec
push
pop
push
dec
ja
movsl
fisttpl
aad
cmp
fcomp
sbb
cmpsb
les
dec
sub
pushf
or
notl
push
xor
fsubl
mov
xor
fwait
idivb
repz
pop
xor
xchg
push
and
jb
jns
cmp
add
mov
fdivr
adcl
aas
push
mov
mov
sbb
scas
dec
sti
cwtl
pop
mov
clc
mov
sub
cmp
fistpll
nop
or
hlt
push
jo
cmpsl
dec
sbb
mov
enter
sbb
sub
and
test
or
dec
adc
pop
mov
clc
adc
pop
lea
mov
sbb
sbb
fiadds
js
jmp
push
add
ret
pop
or
add
inc
add
push
xchg
cli
insb
adc
pop
adc
and
test
bound
mov
mov
jne
popa
cld
inc
fnstcw
add
fidivs
sub
cld
int3
das
popl
sub
push
xchg
pop
pop
cmc
mov
and
outsl
xor
nop
fs
xor
cmpsb
addr16
mov
or
push
mov
inc
pop
std
jnp
xlat
insl
mov
aad
lock
mov
mov
adc
mov
xlat
xlat
or
mov
inc
les
and
xchg
fsubr
sub
aam
lock
inc
mov
or
imulb
push
aas
pop
inc
enter
jb
ljmp
syscall
or
sub
add
dec
mov
ds
cmp
in
cmpsb
das
and
sbb
cmp
dec
insb
stc
inc
inc
sbb
pop
sbb
outsb
movsb
inc
pop
cwtl
xchg
arpl
add
add
pop
sub
mov
lahf
cs
jl
and
mov
sti
jge
andb
and
cli
cmpsb
test
or
push
stos
inc
mov
add
cmp
sbb
lahf
push
mov
jl
adc
inc
in
push
adc
xor
insb
sub
dec
inc
test
call
jbe
mov
ljmp
outsb
jns
pop
xchg
sbb
movsb
shll
sahf
fisttpl
pop
loope
sub
mov
jle
adc
daa
mov
inc
mov
xor
loopne
xchg
jg
sbb
mov
push
jl
lods
in
inc
daa
cmp
sbb
jecxz
in
mov
inc
mov
lret
lock
cmpsb
sbb
xor
mov
imul
scas
bndstx
sub
inc
inc
inc
movsb
orl
cs
fdivrl
das
add
dec
imul
test
fwait
jae
lcall
in
sbb
shl
jns
int
and
in
mov
mov
inc
loop
fistpl
in
and
repnz
insl
jge
js
lret
xchg
pop
fs
pop
and
jle
cmpl
nop
mov
fcmovnu
jno
div
jo
shll
mov
fmuls
out
test
incb
and
jl
imul
pop
xor
stos
lahf
popf
xchg
cmp
cmp
adc
cmp
mov
pusha
pusha
test
jg
ljmp
into
push
addr16
testb
lods
sbb
pop
inc
jl
clc
out
and
mov
lret
test
test
aad
icebp
add
scas
ficoml
in
dec
ss
dec
rcrb
lret
jge
mov
nop
adc
fdivs
and
mov
outsl
jbe
mov
lret
jmp
dec
out
xchg
out
mov
jl
in
sbb
and
stc
iret
push
mov
lahf
jb
stos
sbb
pop
jle
inc
sti
inc
cs
or
push
adc
loopne
jmp
jno
cli
imul
push
call
lret
or
xchg
inc
xchg
int3
dec
sub
in
push
imul
sahf
xchg
mov
and
out
jae
xlat
es
xor
sbb
add
in
dec
nop
adc
jns
outsl
aad
inc
icebp
test
adc
insl
mov
jecxz
or
push
stc
lods
mov
dec
jb
sub
sbb
mov
inc
sub
fadd
adc
jae
mov
adc
cli
dec
aam
out
incb
mov
rcrb
cmp
xchg
fdivl
fcmovu
negb
enter
jl
int3
movsb
sbb
mov
and
fnsave
xchg
or
jl
cmpsb
in
add
xor
scas
cmpsb
mov
ja
adc
popf
shrb
push
enter
cmpsl
rcll
int3
pop
les
sti
dec
sub
aaa
pusha
mov
inc
repnz
stc
sub
fwait
sbb
cmp
inc
fcomp
mov
decl
push
xchg
mov
out
xchg
jae
daa
pop
pop
mov
insb
sub
sub
icebp
pop
imulb
sbb
jae,pn
pop
xchg
sub
mov
aad
sbb
popw
lock
test
cmp
ret
sub
std
sbb
int
xchg
adc
xchg
add
cli
psrld
xor
adc
push
aam
fnsave
shll
cwtl
inc
xor
mov
lret
dec
jns
mov
cmp
pushf
ljmp
pop
mov
loope
out
or
or
add
adc
or
xor
out
push
sbb
aaa
insb
imul
sub
xor
jle
testb
lret
movsl
mov
test
sarb
or
mov
and
test
xor
or
mov
movsb
fsubl
xor
mov
adc
xor
shll
jl
add
popf
lret
loope
nop
es
dec
dec
inc
int3
int
daa
stos
xchg
rorb
mov
fmull
adc
inc
stos
jg
dec
data16
testl
push
jg
lods
cli
dec
jno
lret
xor
xlat
aas
cld
lods
enter
xchg
push
cmp
outsl
loope
mov
gs
dec
dec
sub
shr
repnz
and
pop
cmp
push
arpl
sbb
pop
imull
lods
test
sub
and
and
shl
sbb
outsl
adc
or
xchg
mov
mov
inc
pop
xchg
clc
mov
add
mov
xchg
lods
inc
ss
insl
mov
aad
out
jmp
dec
jg
adc
mov
fs
pushf
shll
inc
addb
push
push
adc
sbb
dec
add
lods
mov
lcall
cwtl
ret
push
jecxz
xor
in
lock
mov
jl
mov
jg
cmp
cmp
lret
sub
add
jp
fcmovbe
lods
fabs
jmp
in
inc
xor
or
mov
clc
stc
bound
mov
sbb
test
fists
pusha
arpl
and
push
daa
pop
call
lahf
les
inc
test
les
or
sbb
or
jecxz
inc
pop
lock
mov
xchg
mov
pop
cmpl
inc
andl
in
mov
or
fisubl
xor
push
push
cmpsb
mov
dec
sbb
jns
push
in
cmpsl
jmp
and
add
pop
mov
jecxz
jb
stos
ret
shlb
les
lea
test
inc
out
repnz
sub
push
enter
dec
pop
stc
sub
pop
jmp
daa
xchg
test
std
sahf
fs
or
stos
xor
push
fisubrl
int3
fsubs
adc
pop
xchg
add
mov
popf
inc
mov
add
mov
lret
ror
mov
movsb
out
fs
out
stos
movsb
rclb
ror
cmpsb
jnp
iret
mov
jns
mov
pop
scas
xchg
mov
or
sbb
xchg
mov
adc
mov
subb
dec
mov
sbb
jg
sub
int
cmp
aad
mov
test
ret
cmpsb
xchg
push
jne
push
outsl
mov
adc
popf
insl
push
pusha
mov
aaa
pop
leave
call
dec
add
sub
rcrb
inc
add
dec
mov
popa
mov
push
lods
mov
jne
xor
popl
xchg
fcmovb
adc
cld
int3
push
sub
or
cltd
popa
aad
bnd
fmull
dec
push
pop
or
cs
and
cmp
mov
xor
push
xchg
push
test
or
fbld
in
int
cltd
sub
dec
or
outsb
add
sbb
push
dec
scas
arpl
clc
dec
or
ja
mov
ja
and
ficomps
cmp
push
sahf
cmp
stc
add
xchg
cmp
push
sbb
mov
xchg
ja
push
mov
jbe
sbb
js
pushf
mov
dec
aas
pop
in
hlt
cltd
cmpsl
mov
mov
icebp
popa
mov
iret
mov
cmc
fsubp
lock
or
sbb
cmc
lods
push
idivl
adc
jno
or
pop
cltd
mov
jge
imul
xchg
fstp
and
fs
ss
cmpsl
xchg
mov
in
pop
fs
out
xchg
jl
pop
adc
jge
or
push
test
repz
cmp
sbb
sub
inc
cli
scas
lds
jo
insl
and
push
add
imul
mov
push
enter
pop
orl
int3
pop
jmp
mov
sub
fdivrl
mov
movsl
xchg
pop
pop
jge
push
lret
sbb
push
sub
inc
fistpll
pop
lock
cmpl
adc
jl
jle
loop
jbe
jmp
aas
or
adc
es
adc
andl
mov
and
xor
adc
pop
dec
xor
lret
mov
add
sbbb
int3
popf
push
mov
test
dec
movsb
cmpsb
out
jnp
dec
adc
int3
out
cmp
fisubs
inc
shrl
dec
stos
xor
fnsave
in
sub
mov
and
and
pop
dec
in
shll
pop
aad
xchg
xchg
cmp
sbb
bnd
inc
xor
or
bound
push
or
or
out
pushf
xchg
out
mov
out
xor
lods
mov
sub
std
movsl
jmp
inc
aas
sub
cwtl
sub
iret
leave
xor
cmp
iret
repz
movsb
fdiv
lods
popf
cmp
out
push
inc
xchg
pop
pop
mov
mov
mov
xchg
cmp
adcl
stos
movsl
adcb
in
iret
test
inc
testb
or
and
pop
inc
incb
and
fsubrs
pop
mov
imul
ror
xor
test
jge
test
popf
movsl
ljmp
sbb
daa
dec
je
jbe
push
sarl
sub
movsb
stos
pop
bound
jp
mov
push
test
in
mov
dec
lret
bnd
xchg
ficompl
nop
mov
adc
or
cltd
dec
dec
dec
cmpb
push
mov
mov
ret
jg
mov
pop
cmp
and
inc
in
lds
jle
stos
and
fwait
lds
and
cmpsb
push
imul
shlb
lahf
int
sbb
jl
loope
out
xchg
out
xlat
adc
test
test
lret
pop
popa
push
loop
push
jno
jg
push
add
dec
xchg
sti
jg
sbb
xchg
mov
jge
jmp
clc
pop
jecxz
test
jge
in
jge
jge
stos
push
dec
in
or
scas
out
xchg
pop
sbb
inc
jo
ljmp
xor
lods
enter
sub
daa
push
sbb
iret
aas
xlat
inc
inc
jle
mov
jnp
mov
out
dec
sub
lcall
shrb
sub
xchg
in
sbb
push
rorl
xlat
dec
pop
nop
cmp
pop
pusha
mov
mov
imull
ds
mov
mov
xchg
lret
clc
mov
cmp
sbb
xchg
loop
inc
push
jecxz
push
or
filds
stos
or
and
lods
and
mov
inc
sub
adc
jo
xor
add
adc
mov
addr16
in
sbb
xchg
inc
cmp
push
inc
scas
stc
add
lret
fsubs
jle
and
xchg
iret
or
xor
push
ljmp
pop
and
outsb
lock
testl
and
popf
cmp
or
rclb
mov
test
inc
xchg
fisubrs
cmp
adc
gs
jmp
dec
bound
fnstcw
xchg
lock
sub
mov
push
or
stc
lods
pop
or
cli
enter
in
and
and
icebp
lods
aas
xchg
and
cmp
ja
dec
js
in
cmp
int3
cs
pop
stc
sbb
stos
mul
pop
scas
mov
cmp
int3
nop
stos
out
sub
cmp
mov
sub
cmp
maxps
adc
mov
pop
repz
stos
push
jp
daa
jge
movsb
push
mov
mov
jne
fsubrp
lret
out
inc
cmp
fs
add
out
cltd
fdivrl
lods
and
mov
test
shlb
repnz
xchg
ret
push
adc
into
stos
xor
hlt
and
fwait
pop
fbstp
xchg
das
sarb
sub
out
lock
cmpl
push
fcoms
arpl
test
je
lds
inc
inc
pop
sbb
iret
gs
add
into
cld
fcmove
adc
xor
inc
jle
fmuls
sarl
sahf
sbb
lret
test
xchg
call
cwtl
dec
cmpsl
mov
movsl
in
daa
int3
lret
popf
or
push
lret
inc
lahf
cmp
sub
mov
push
jmp
adc
mov
mov
repz
mov
in
test
dec
push
iret
enter
fsubrl
push
dec
mov
addr16
mov
outsl
fcoms
ljmp
inc
pop
pop
test
mov
adc
cmp
mov
popa
rcrb
aaa
fwait
in
ja
mov
jl
outsl
sti
xchg
xchg
adc
sti
pop
popf
mov
pop
fdivrl
scas
int
imul
enter
add
sbb
jnp
popfw
and
or
cmp
loope,pt
les
jne
andb
mov
nop
mov
xchg
loopne
ret
sahf
jo
pop
scas
sub
lea
outsb
data16
jle
lcall
or
bound
daa
mov
inc
xchg
lret
dec
sbb
shrb
mov
inc
push
cmp
popa
daa
mov
outsl
cmp
icebp
dec
test
pop
dec
jo
bound
sub
cld
imul
xor
jmp
adc
shlb
icebp
xor
jae
cmpsl
jge
repnz
loop
call
jle
mov
call
pop
fiaddl
jbe
pop
mov
js
ljmp
inc
std
pop
das
mov
adc
scas
in
push
repz
addb
adc
xchg
mov
jno
mov
mov
mov
cld
mov
inc
inc
mov
mov
loop
dec
shlb
dec
mov
jecxz
xor
push
xchg
push
adc
clc
imul
pop
stc
insb
test
add
andl
sub
int3
mov
xchg
inc
push
mov
cs
mov
xor
inc
push
mov
mov
push
or
mov
rcl
adc
cmp
jmp
dec
jp
and
movl
nop
push
rclb
je
and
xor
cmp
jp
mov
adc
pop
push
fildll
outsl
aas
in
pop
push
or
ja
mov
ja
xor
xchg
call
xor
movsb
cmpsb
mov
psubw
and
jmp
fisttpl
mov
aas
in
arpl
or
fdiv
lods
pop
cmp
cmp
stos
dec
jno
loopne
jl
mov
into
pop
mov
push
arpl
shlb
addr16
popa
cmp
jmp
mov
data16
ljmp
mov
jae
sbb
xchg
and
pop
fidivs
movsl
dec
mov
jno
cmpsb
push
js
jp
mov
fnstenv
xor
negl
shlb
in
push
xor
mov
int3
lea
dec
nop
imul
imul
cmp
or
inc
dec
mov
sbb
sub
xorb
cmc
xor
cmp
and
cmc
cmp
mov
ficoml
push
out
inc
mov
mov
enter
sub
mov
fisubrl
jbe
push
loop
adc
push
rorl
stos
push
lods
iret
sub
jle
loopne
shll
sbb
cmp
add
push
push
mov
mov
cs
inc
cltd
mov
mov
ss
mov
xor
cmp
jno
shll
mov
or
int
mov
outsl
pop
jb
push
xor
sub
test
shrb
nop
sub
or
cmp
daa
incb
jp
sarb
cmp
push
mov
imul
cmp
daa
out
test
xchg
pop
stc
insl
sub
push
ljmp
xor
jae
movsb
or
es
int
outsl
loopne
push
or
adc
lods
mov
mov
shrl
lds
xchg
faddp
lahf
jb
push
push
or
add
bound
daa
push
stos
pusha
and
jne
popf
popl
inc
sub
sub
cmp
std
pusha
dec
lcall
ljmp
out
dec
insb
test
arpl
jge
xor
negl
and
shrb
sub
outsb
sbb
inc
jle
int
dec
inc
mov
pop
mov
loope
mov
sub
movsb
jecxz
shll
in
pushaw
loopne
outsl
iret
sbb
xor
scas
fcompl
inc
ret
jg
xchg
les
lds
fsubrl
push
mov
fildl
mov
sbb
in
adc
mov
push
jno
pop
lea
popa
idivl
mov
sbb
xor
cwtl
xchg
inc
pop
or
mov
hlt
pop
icebp
stc
xor
icebp
xchg
mov
lock
inc
sub
xchg
mov
mov
fidivl
jnp
test
aaa
cwtl
mov
push
nop
cli
mov
aam
lds
mov
dec
adc
pop
movb
iret
scas
lret
or
aad
jle
repnz
repnz
pop
loopne
and
mov
sbb
cmp
xor
test
dec
or
or
rol
arpl
jmp
xchg
inc
adc
push
inc
bound
inc
inc
andb
mov
or
icebp
rolb
incb
mov
jnp
push
mov
enter
jns
fs
ljmp
fs
das
add
cmpsb
dec
inc
pop
jmp
add
xor
mov
fistps
mov
iret
push
xor
adc
inc
mov
stc
xchg
add
pusha
pop
jp
popa
nop
mov
cmc
je
xchg
xor
cli
xchg
movsl
add
rcl
shrb
xlat
mov
adc
xchg
es
or
jecxz
jge
dec
scas
inc
push
add
jae
int
inc
stos
stos
push
add
push
fs
mov
or
fisttpl
outsb
dec
out
mov
inc
adc
js
es
loopne
scas
add
adcb
and
jo
inc
cli
cli
xor
push
das
jl
imul
rorl
inc
cwtl
movsl
sarl
sub
mov
hlt
aam
inc
sbbb
adc
ret
cmpl
dec
ror
xor
in
pop
stos
addr16
cmpsl
aas
pop
icebp
rcrb
ret
pop
stos
push
sti
dec
jecxz
push
inc
cmc
push
enter
jo
mov
push
xchg
lret
stc
or
jmp
cmp
cli
into
ljmp
mov
jl
imul
pop
cmp
sub
inc
jb
inc
cltd
das
rorl
outsl
mov
mov
test
nop
call
mov
and
cwtl
jmp
xchg
xor
pop
leave
sahf
movsb
aam
repz
or
cwtl
adc
out
mov
fisttpl
jae
mov
mov
sarl
mov
pop
lock
cmp
mov
scas
or
jb
xchg
sub
and
sbb
lea
mov
jb
stos
call
adc
int
jmp
push
int
jge
sahf
div
popf
rorb
hlt
fstpt
add
cmpsb
mov
ret
shr
mov
sbb
adc
mov
in
movsb
jns
es
repz
cmpsl
dec
mov
or
ret
movl
leave
inc
in
out
push
es
fildl
movb
movsl
inc
mov
or
mov
cmp
push
in
adc
insb
pop
adc
dec
cmpsb
jae
inc
out
aaa
add
andl
sbb
lods
aam
or
jne
fstl
test
imul
pop
hlt
iret
mov
push
outsl
xchg
js
fiaddl
ret
roll
fmulp
inc
cmp
mov
js
pop
mov
iret
jbe
push
js
insb
adc
xlat
adc
jge
fistpll
sbbb
lea
inc
mov
fcmovnb
push
icebp
fwait
shl
push
and
arpl
movsl
cmpsb
xchg
adc
sarb
inc
fdivp
daa
pop
ret
std
xchg
out
nop
xchg
clc
xchg
ror
sbb
mov
jb
int
mov
popa
aaa
add
ret
add
jl
dec
mov
jmp
lds
add
in
adc
out
adc
mov
pop
stc
repz
sbb
and
mov
fiaddl
and
push
loop
in
imul
and
xor
jmp
adc
cmp
addr16
xchg
out
and
fdiv
pop
pop
sbb
pop
jg
sub
icebp
hlt
mov
fcmovnb
push
lock
cmp
out
ret
jbe
imul
adc
pop
sub
lcall
mov
sarl
adcb
popf
pop
sbb
dec
stc
movsb
add
out
inc
push
pop
bound
lret
in
sbb
add
adc
imul
xor
stc
fildl
push
and
lea
or
inc
in
sub
divl
ljmp
and
popf
inc
xor
xchg
repnz
xor
je
jns
outsb
mov
stos
hlt
mov
js
sub
jmp
pop
pop
imul
mov
sti
ficoms
gs
pushf
int3
mov
lods
repz
fdivrl
outsb
repz
push
jno
cmp
mov
cltd
xchg
add
xchg
iret
sub
mov
lock
add
outsl
int
lcall
pop
das
adc
push
stos
jno
sub
popf
jge
mov
cmc
lahf
cvttps2pi
les
push
jle
iret
into
push
ret
push
add
xchg
sub
stos
loope
mov
fsubrl
dec
dec
sbb
pop
jl
cs
sub
mov
or
loope
xor
out
jmp
in
mov
or
sbbb
out
xor
cmpsl
ret
add
add
inc
xchg
or
xchg
movsl
jne
sub
pop
and
mov
loop
dec
sub
add
pushf
sub
fs
fcmovnbe
frstor
and
jns
cmc
push
data16
daa
jle
and
andb
xor
clc
das
mov
inc
insl
lahf
dec
mov
fidivrl
dec
mov
jmp
or
leave
lock
cmp
ljmp
push
nop
xorb
subl
in
push
or
sbb
fsubrl
pop
addb
outsb
fidivrl
xchg
push
dec
fistps
add
shl
repz
lret
movsl
movsl
push
pop
push
sub
js
and
sub
mov
add
ss
dec
jge
jbe
addr16
ret
add
fs
jmp
es
aam
push
and
dec
repnz
push
pop
das
data16
popf
or
test
mov
and
or
mov
iret
test
sarl
jle
ljmp
sub
or
aaa
loopne
and
out
add
pop
jp
xor
cld
mov
jnp
dec
fcmovbe
jbe
xchg
in
xor
xchg
lcall
mov
adc
iret
push
fs
jmp
xor
leave
jmp
cmp
push
or
adc
xchg
aaa
aam
xor
jmp
mov
jbe
inc
sub
jmp
and
push
call
push
fimuls
bound
jle
sub
js
jmp
int3
xchg
sti
push
sbb
or
into
in
stos
mov
clc
fstpt
movsb
repz
test
add
xor
aas
movsl
popa
jge
test
rcrb
xchg
lods
fucomp
scas
add
ja
call
out
ror
xorb
inc
mov
pop
jae
sub
aaa
pop
sbb
and
shlb
cmpsl
cmc
je
inc
decl
je
call
sbb
sbb
inc
les
icebp
outsl
xchg
insl
cmc
es
sub
sbb
test
lds
push
movsl
rclb
xchg
pop
adc
add
mov
inc
jp
jmp
pop
fdivrp
in
cmp
in
lret
mov
or
rcrl
xlat
or
dec
add
push
out
or
popa
sub
clc
push
rcrl
cmp
adc
test
push
into
rcl
jge
xchg
add
xorl
sub
push
add
push
push
add
mov
add
sub
jecxz
xchg
xchg
pop
push
pop
inc
xchg
adc
cmpsb
pop
adc
ss
lods
in
push
lock
pushf
rcr
jo
and
xchg
or
xlat
and
pop
testb
sub
mov
mov
sbb
shrl
arpl
xchg
xchg
cltd
mov
popf
mov
lcall
xchg
push
jbe
jbe
rol
in
mov
cmpsl
loop
pusha
icebp
mov
aaa
test
jns
fmull
lods
sub
adc
or
inc
mov
stc
cwtl
mov
adc
sbb
adc
lods
enter
xor
mov
jns
hlt
notl
push
adc
pop
outsb
pop
push
ja
dec
add
fimull
inc
fwait
popf
in
mov
sub
and
push
icebp
dec
lret
lahf
rcr
fs
mov
ficomps
sahf
sbb
push
and
xchg
call
push
gs
pop
push
out
test
adc
jae
lret
mov
jmp
push
and
xor
fstl
lock
dec
lret
xchg
addr16
mov
xor
sub
xchg
and
roll
cmp
mov
cmpl
cli
xor
xor
dec
xchg
mov
push
cmp
in
mov
lods
in
mov
enter
mov
cld
mov
cmovae
lcall
popl
decl
inc
push
imulb
stos
or
jnp
sub
fisttps
cmp
xor
movzwl
xlat
or
inc
xor
dec
inc
lock
sub
outsb
and
in
mov
daa
loop
or
sarb
mov
lods
inc
loopne
add
cmp
jg
ret
push
imul
xchg
ret
cmp
xchg
add
das
adc
adc
iret
jge
and
xor
push
orl
jno,pn
sarb
cmp
pop
scas
xchg
jge
add
out
cs
imul
dec
push
testb
pushf
mov
lods
lret
pushf
jnp
sub
stos
pusha
mov
xchg
xorl
shlb
test
xchg
xchg
push
test
icebp
clc
inc
movsb
or
jno
das
cli
mov
stc
mov
mov
int
call
and
aas
das
jnp
push
shlb
je
mov
in
pop
pop
xrelease
jbe
sti
cli
pop
mov
cmp
cmc
inc
pop
rcrb
adc
int
add
mov
add
cmpsl
dec
push
enter
out
ja
xor
add
pop
lea
push
pop
in
push
mov
popa
mov
jne
xchg
inc
adc
cmp
cmpsb
call
lods
and
mov
out
imul
outsb
cmc
mov
mul
hlt
fistpl
test
add
cmpsb
jecxz
lods
out
lea
ljmp
fdivl
lret
hlt
add
push
inc
xchg
in
mov
out
inc
lods
xor
push
inc
xlat
shrb
mov
xchg
rcrl
outsb
pop
xor
adc
jmp
cs
ss
sub
xor
in
jg
or
push
xor
aas
rol
adc
xor
mov
into
inc
pop
cwtl
inc
adc
aaa
int
pusha
lods
in
pop
ljmp
rolb
loope
jnp
pop
js
aaa
lahf
mov
jae
in
adc
shlb
jbe
or
add
mov
mov
sbb
mov
mov
mov
pop
add
push
pop
shr
pop
stos
in
dec
mov
mulb
add
xor
xor
enter
cli
jnp
push
in
fistl
nop
xlat
cmp
pop
mov
fcomip
hlt
push
lock
js
addl
push
and
cli
in
iret
popf
ss
in
out
dec
loope
push
cmp
ret
xchg
inc
pop
pop
mov
int
js
in
aam
sahf
shll
pop
adcl
lret
push
push
jmp
mov
pop
popf
pop
js
les
xor
lcall
fbstp
jb
jmp
ja
adcl
mov
push
shld
sub
aad
test
in
ret
cmpsb
pop
test
fisttpl
shl
imul
dec
roll
popf
mov
data16
bound
add
ficompl
mov
dec
or
mov
mov
inc
jmp
push
fistpll
push
adc
pop
xchg
pop
dec
jmp
xchg
xor
push
add
sub
sub
xor
hlt
or
sbb
aad
jae
jns
dec
inc
sahf
movsl
or
fildl
mov
ret
jl
pop
jo
and
and
sbb
shll
lods
fistpll
sbb
jne
lret
sar
sub
dec
test
mov
xor
fidivl
jnp
repz
or
xor
addr16
test
aam
fistpl
in
fucomi
push
repnz
sbb
mov
out
mov
or
test
fisubrl
pop
fldpi
mov
imul
dec
das
insb
ficomps
cmc
mov
orb
dec
pop
insb
faddp
test
or
pop
scas
popf
jp
lret
mov
push
dec
add
bound
lahf
push
xchg
mov
pop
nop
int
subl
stos
out
xchg
cltd
adc
adc
out
fldt
sbb
pop
xor
mov
add
bound
roll
lcall
bound
xchg
cltd
mov
test
pop
enter
cmpsb
push
sbb
mov
nop
fs
ljmp
inc
loope
lea
lods
adc
or
adc
or
dec
xchg
cmp
inc
push
ret
pop
mov
movsl
aas
hlt
sub
test
out
push
mov
out
in
cmp
test
xchg
mov
jl
lcall
rcrb
mov
imul
pop
inc
mov
adc
push
rcrl
call
nop
fsubrs
jb
lods
orl
lcall
adc
fwait
and
pop
sbb
inc
add
outsl
xchg
jbe
jo
cmp
gs
sub
outsl
cs
mov
adc
shrb
in
xchg
aas
mul
popa
cmp
or
push
notl
not
enter
lret
lds
push
addl
out
cmpsb
pop
enter
test
lret
or
jo
addr16
push
sub
test
insl
les
mov
pop
mov
popf
scas
aad
push
inc
mov
sbb
mov
adc
jns
ljmp
adc
mov
filds
clc
outsb
cmp
pop
into
ror
push
imul
xchg
push
inc
lcall
lcall
inc
sti
cmp
sar
add
sbb
push
sub
dec
shr
lods
aaa
pushf
mov
mov
mov
arpl
xor
pop
and
mov
nop
stos
pop
ret
mov
mov
loopne
clc
insl
add
sub
xorl
bound
ja
leave
xlat
and
xchg
test
movsb
ja
mov
test
imul
loope
test
mov
dec
jae
ret
pop
inc
std
sbb
adc
test
sbb
ss
ficompl
test
xchg
dec
adc
lahf
inc
rorb
lods
imul
lret
pop
ljmp
pusha
add
jo
test
jp
adc
js
stc
dec
test
mov
pusha
clc
pop
stc
fmuls
loopne
aad
inc
sarl
mov
mov
sbb
outsl
or
add
lret
stos
iret
cmp
movsl
popa
insl
loop
dec
pop
dec
test
xor
gs
jg
push
dec
push
mov
xchg
ss
mov
add
dec
out
dec
nop
loop
pusha
or
hlt
arpl
adc
or
sbb
fcoml
dec
mov
jecxz
cmp
int
in
sbb
les
sbb
mov
add
push
test
push
mov
std
ds
cmc
ljmp
push
movsl
out
cmpb
cwtl
mov
jb
ror
cli
mov
ret
and
mov
ficoml
stc
sti
enter
xchg
stc
xor
lods
je
sub
push
jge
das
fwait
aas
push
fldt
movsl
mov
xchg
scas
inc
in
clc
add
sub
mov
nopl
ds
sbb
lods
push
inc
xchg
shlb
cmp
bound
or
xchg
into
xchg
sbb
xchg
pop
xorl
cmpsb
test
mov
call
jb
adc
lcall
scas
js
or
rcrl
dec
aam
call
lods
add
test
add
jmp
jp
repz
sub
mov
push
stos
out
es
mov
mov
push
aad
xchg
fdivs
cmp
inc
rcll
lods
jb
sbb
dec
mov
or
mov
mov
pop
jmp
mov
stc
inc
lcall
add
adc
pop
ret
test
aad
inc
dec
xchg
sub
mov
cmpsb
jg
push
insb
pop
mov
pusha
popf
in
notl
test
es
pusha
fwait
push
lahf
cltd
jl
ljmp
fstps
rep
push
mov
je
loopne
and
cli
jbe
xor
rcll
add
and
lahf
push
xor
fstl
enter
pop
or
scas
mov
xchg
pop
xor
daa
and
sub
jg
ljmp
cmp
addl
jbe
nop
sbb
push
sbb
or
testl
jno
shll
data16
mov
icebp
sahf
push
movsb
subl
fcom
mov
addps
jne
cmp
push
adc
pop
movsl
lds
xchg
sbb
pop
jle
push
adc
hlt
sub
xchg
jne
pop
hlt
lcall
mov
mov
pop
pop
test
and
sub
mov
cmp
mov
jecxz
pusha
in
popf
shll
data16
push
inc
pop
gs
es
test
jns
push
outsb
loope
test
xchg
jmp
push
sbb
jnp
jl
push
pop
lahf
push
jle
and
je
mov
and
mov
cltd
imul
lods
cli
push
cltd
stos
dec
pop
sbb
mov
cs
hlt
add
push
stos
dec
sub
mov
pop
cmp
nop
test
pop
rcl
jae
pop
out
push
mov
sub
pop
out
or
bnd
int
cmp
push
nop
in
movb
sbb
lea
mov
pop
push
jb
lahf
mov
xchg
sbb
mov
repz
movsb
aad
mov
je
out
cmp
mov
lds
or
mov
pusha
movsb
std
mov
push
push
jnp
push
shll
movl
fistl
or
out
cmpsl
pop
jle
out
sub
pop
addr16
xorb
mov
dec
add
test
mov
das
xchg
or
lret
jb
dec
xchg
add
into
js
ljmp
iret
xorb
adc
inc
cmp
jnp
sarb
cmp
out
cmpb
push
push
or
lret
pop
in
add
and
bound
ja
imul
adc
push
stos
sub
repz
dec
cs
or
in
or
andl
cs
fistl
test
mov
cmp
pop
and
push
out
mov
neg
jno
ficomps
mov
cld
pusha
jb
pusha
outsl
jne
cmc
outsl
inc
adc
mov
insb
sub
fdivrp
inc
xchg
inc
clc
push
test
in
outsl
mov
cmp
std
fistpl
pop
repz
lods
out
sub
xor
and
shr
negl
les
std
emms
cmpsl
xchg
das
test
inc
lahf
cmpsl
xchg
mov
aam
testb
lea
add
inc
mov
dec
xor
or
cs
mov
daa
inc
mov
mov
lods
enter
rorb
sbb
jno
mov
xchg
pop
lcall
dec
sbb
and
add
in
mov
imul
aas
repz
or
clc
imul
dec
nop
cmpsl
out
cld
dec
adc
ss
dec
ljmp
dec
sbb
loop
clc
jge
arpl
cs
add
push
sbbb
cmp
sub
jns
in
mov
or
and
ja
aad
inc
popf
mov
aad
add
inc
mov
jl
xorl
xchg
xchg
ljmp
rcrb
sub
out
pop
aam
ds
shrl
jmp
dec
cmp
and
xor
xchg
and
push
xlat
aad
and
pop
xchg
xchg
push
dec
cli
dec
xor
sbb
cmp
das
jno
push
fsubrl
pop
mov
sub
pop
stos
push
rorl
jo
xorb
add
aaa
out
into
cmp
bound
ljmp
jae
cs
dec
out
ja
insb
sub
dec
sbb
mov
jmp
iret
jmp
jnp
push
cmp
sbb
xchg
push
fldl
fs
or
jo
xchg
fildll
ret
rolb
in
sbb
dec
add
les
icebp
sub
stos
adc
sub
inc
jne
cld
add
decb
inc
push
mov
or
xchg
sub
sbb
jmp
pop
push
leave
pop
daa
dec
mov
and
xorl
mov
ss
mov
mov
and
and
mov
xchg
inc
jl
sub
sub
jnp
lret
ds
fwait
imul
xchg
adc
xchg
or
in
not
add
adc
out
jno
push
mov
insb
inc
xor
pop
imul
and
out
mov
cmp
arpl
call
push
sti
jnp
jo
dec
test
jbe
cmpsb
out
in
int
mov
je
repz
mov
negb
idivb
int3
movsl
xchg
fcmovnbe
add
xorl
movsl
add
sahf
into
sub
jl
mov
push
mov
aaa
in
movsb
lahf
xchg
lods
ds
imul
inc
or
jge
in
repnz
sub
lods
aam
mov
addl
mov
rcrl
andb
fstpt
lcall
popf
push
shlb
push
shlb
lret
cmp
inc
cmp
ret
push
outsl
adc
test
ja
sbb
push
sbb
nop
dec
lods
es
jg
push
push
pop
lods
xchg
cmc
mov
cmp
rorb
mov
or
inc
ds
push
push
ret
cmp
pop
adc
test
bound
mov
mov
pop
inc
mov
scas
pop
pop
jge
mov
adc
add
xchg
and
push
out
das
push
js
pop
jno
inc
and
aas
lods
inc
push
push
jb
mov
jns
jo
or
xor
push
inc
shlb
leave
adc
push
add
shll
es
bound
mov
stc
clc
dec
pop
js
fldcw
imul
es
adc
jmp
shr
inc
jge
pushf
shrb
xor
pop
mull
or
adcb
dec
fstpt
ficomps
arpl
push
lcall
movsb
fistps
push
jns
sub
dec
mov
addb
test
or
sbb
sbb
lea
push
out
divb
nop
mov
xchg
fwait
adc
pop
xchg
leave
insl
sub
cmp
jns
jmp
fisttpll
pop
jg
push
or
dec
lds
outsl
iret
xchg
test
fsubr
cmpsl
insl
pop
push
jle
xor
bound
lods
sub
imul
dec
or
xor
and
loopne
mov
loope
or
mov
or
dec
cld
in
push
push
stos
aaa
icebp
popa
ja
loop
pop
ror
pop
jle
out
push
adc
fld1
pop
jge
adc
adcl
fistpll
and
add
and
jns
cmc
adc
push
cmp
addr16
sti
adc
jmp
data16
mov
call
push
in
movsl
mov
sbb
jne
add
vunpckhpd
push
orb
jg
mov
mov
mov
or
popf
in
dec
fisttps
push
fmuls
push
jmp
mov
and
fbld
setnp
inc
test
gs
mov
sbb
rcrl
popf
lods
jge
loop
aas
or
mov
fisubrl
stos
mov
adc
pop
jne
sarl
jno
or
scas
int
and
xor
add
cs
pusha
stc
js
jno
stos
fstpt
loopne
jns
shrb
inc
mov
inc
outsb
aaa
fldcw
push
jl
pop
sub
dec
aaa
je
inc
movsl
fiaddl
or
mov
sub
xor
adc
ja
scas
sbb
lret
shr
mov
or
mov
or
mov
pushf
lds
inc
pop
icebp
sbb
int
into
fwait
mov
popa
pop
repz
mov
jo
popa
mov
jge
sbb
cmp
cmp
push
das
pop
mov
xchg
gs
adc
sbb
or
cmpsb
push
push
mov
ret
sub
cmpsl
lock
mov
cld
pop
scas
jne
outsb
adc
pop
jmp
fs
addr16
pushl
mov
dec
and
xor
cwtl
sbb
inc
push
and
adc
mov
and
stos
sbb
xchg
cmp
loop
arpl
rclb
jno
fldl
sti
dec
lret
dec
jno
jmp
fdivs
cmp
mov
test
xorb
xchg
movsl
jne
adc
cmp
jge
ret
jno
fcompl
sbb
xor
jne
cmp
aaa
insl
fadd
into
popa
inc
cmp
je
fsts
sbb
neg
pop
out
and
jb
push
mulb
jbe
jl
mov
cs
mov
cmp
sbb
cmp
mov
in
inc
scas
xor
or
aas
out
aad
notb
sub
xchg
in
int
and
push
cld
xchg
mov
and
or
fs
cmp
pop
xor
push
fwait
jmp
mov
mov
fdivrl
lock
loop
pusha
cmpsl
xchg
inc
movsb
xchg
movsl
ljmp
fsub
push
xchg
mov
fs
addr16
outsb
cmp
inc
sbb
jp
jecxz
add
cmpsb
bound
daa
cmc
sub
and
aaa
push
sti
gs
adc
pop
xor
cmc
jl
stos
add
iret
jns
jge
ja
or
sub
jo
cwtl
lcall
or
inc
mov
cld
sub
cli
test
fidivrs
lcall
jne
xchg
aam
imul
out
push
mov
xchg
adcl
mov
ja
loope
loopnew
adc
lods
or
clc
repz
dec
shl
icebp
scas
adc
pop
clc
mov
mov
outsb
arpl
arpl
cmp
mov
enter
mov
int
repnz
cmp
je
jb
popf
sahf
sub
xchg
mov
sar
pop
pop
pop
xchg
outsb
mov
sbbl
mov
dec
mov
pop
test
inc
pop
xchg
cltd
mov
dec
xchg
test
inc
bound
pop
adc
ljmp
clc
adc
lods
jecxz
push
outsl
xlat
cmp
cmpsb
dec
aas
inc
cvttps2pi
orb
ljmp
mov
inc
xchg
les
mov
testl
xchg
movsb
push
inc
or
and
aaa
add
pop
or
int3
add
pusha
filds
push
mov
out
pop
repz
imul
pop
mov
xor
imul
ljmp
pop
leave
insl
sub
adc
mov
inc
xor
and
jecxz
iret
cmpsb
push
jo
inc
mov
dec
not
jo
pusha
push
push
js
stc
jle
imul
dec
push
push
xor
adc
stc
iret
pop
cld
xor
roll
mov
mov
mov
je
xlat
jp
cmp
ret
add
or
shl
push
pop
mov
lods
jge
mov
xor
xchg
mov
loop
jecxz
imull
testl
fildll
push
sub
add
lds
in
xor
mov
repnz
sbb
or
mov
clc
ret
lods
mov
sub
jge
mov
pop
les
cs
pop
inc
sbb
lcall
nop
movsl
lahf
xor
add
mov
lods
scas
scas
push
test
movsl
dec
gs
mov
stc
pop
and
jae
xchg
and
sar
clc
xor
pop
jnp
pushf
sbb
sbb
push
push
dec
xchg
aaa
lods
dec
rcll
inc
in
pop
fcoml
push
test
mov
sub
inc
push
lock
push
jns
xorl
adc
cs
aam
mov
sub
mov
xor
ficomps
push
or
push
adc
mov
ja
stos
orb
and
adc
or
iret
lods
or
mov
enter
icebp
sbb
jp
xlat
jg
test
movsb
rcrb
sbb
jae
in
push
bound
adc
pop
ror
fdivl
mov
pop
aas
in
push
lahf
xor
pop
dec
push
into
push
lods
push
pop
in
leave
je,pt
jle
push
rcl
pop
or
jns
hlt
and
push
mov
lods
test
mov
iret
push
jecxz
or
adc
ret
cmp
and
das
mov
jecxz
pop
xchg
movsb
scas
xchg
mov
repz
xchg
push
pop
lea
test
jmp
aad
ja
in
push
sbb
xchg
out
mov
mov
lahf
insl
xorb
sti
adc
outsl
adc
in
inc
and
xor
or
stos
in
adc
clc
dec
ljmp
movsl
mov
xchg
mov
sbb
das
call
dec
sbb
xchg
out
push
sub
scas
call
mov
pop
or
out
inc
shl
cld
pusha
lock
ret
xchg
xchg
xchg
dec
push
sbb
mov
popa
fs
pop
dec
out
outsl
add
in
cmp
and
dec
in
loopne
insl
lahf
pop
inc
int3
pop
scas
cmp
dec
int3
jl
adc
lds
push
dec
mov
ds
push
subl
es
mov
mov
call
mov
insl
ss
addl
inc
sub
dec
cmpsl
push
enter
inc
cwtl
xchg
fdivs
out
loope
pusha
ja
mov
pmaxub
fs
mov
adc
insl
data16
mov
dec
dec
sub
or
jl
mov
xor
mov
je
out
jne
jb
fdivp
outsb
movsb
andb
or
test
cmp
mov
scas
dec
adc
sarl
fadds
sbb
push
jp
jg
dec
sub
scas
stos
cmp
aam
xor
xchg
fcomps
mov
fidivrs
mov
test
aaa
push
mov
dec
aaa
sub
xorb
lods
add
push
mov
ljmp
rorl
cmp
push
or
sarb
lcall
sub
das
jb
gs
mov
ror
fwait
push
sahf
sahf
jle
fisttpll
dec
movsb
addr16
insl
stos
mov
shll
test
mov
int
cmpsl
push
jae
dec
push
shlb
sbb
mov
shlb
loopne
jne
mov
fnstenv
xor
cmpsb
pop
aam
inc
pop
cmovg
cmpsl
add
lret
dec
jl
or
test
cli
fxch
cwtl
rcl
push
pop
stc
add
in
inc
data16
dec
sbb
stos
ret
sbb
test
mov
or
mov
test
and
mov
lea
xchg
cmp
push
pop
or
mov
test
xchg
repz
mov
or
cmp
cmp
idivl
scas
jl
lret
bound
xchg
jns
xchg
adc
sub
adc
push
sarl
repz
call
scas
mov
xor
mov
add
inc
and
cmp
pushf
jmp
fidivrs
incl
push
sub
push
or
lea
lcall
insb
iret
pop
sbb
imul
ret
dec
push
adc
icebp
cmpsl
pop
mul
sbb
cwtl
popf
or
adc
out
into
push
popf
gs
mov
or
cmp
subb
add
jmp
mov
outsb
lret
and
jp
lahf
and
test
cmp
mov
ja
mov
xchg
mov
sahf
pop
jns
andl
sbb
adc
adc
jnp
popa
push
mov
mov
lret
inc
sahf
jb
in
inc
xor
aad
js
enter
dec
test
adc
mov
jmp
xor
sbb
sahf
sbb
mov
mov
push
jns
insb
xor
pop
pop
fimull
ss
jge
idiv
and
mov
inc
mov
push
inc
mov
scas
add
fidivs
xor
pop
negb
aam
xchg
push
mov
mov
xchg
mov
push
into
out
out
sbb
idiv
push
xchg
test
pop
pusha
ret
ret
pop
jp,pn
ret
mov
adc
cltd
int3
aad
mov
mov
mov
fs
or
out
insl
ret
ret
dec
and
lods
pushw
bound
orb
enter
scas
xchg
dec
cmp
and
sbb
nop
sub
and
inc
sub
enter
push
dec
fwait
pop
push
pusha
push
nop
mov
cmp
cmp
test
push
and
fwait
das
lods
sub
jecxz
pop
enter
addr16
pop
lcall
sub
in
fisubs
add
sub
cld
mov
inc
mov
jp
movsl
xchg
pop
lcall
lcall
out
jb
inc
mov
lock
cltd
into
sbb
loopne
pop
loope
sti
push
cmpsb
adc
add
sub
adc
dec
dec
fucomi
movsb
lahf
xchg
jle
adc
jle
jo
hlt
pop
arpl
mov
repnz
xor
jns
jo
sarb
mov
mull
data16
popf
cmp
pop
sub
and
inc
push
loopne
scas
addr16
inc
je
in
pop
in
mov
jge
inc
pushf
jbe
sahf
pop
cmp
stc
negl
cmpsb
xchg
adc
adc
mov
sbb
push
jnp
lods
jbe
lea
loop
cmp
aad
adc
fldenv
enter
fidivs
mov
ds
cld
and
and
rorl
mov
mov
jne
mov
scas
loope
scas
hlt
jns
pop
scas
sub
adc
loopne
lret
xlat
std
rcll
jle
ss
mov
pop
push
jnp
pop
cwtl
lcall
out
sbb
je
insb
cmp
fistpll
and
and
jle
adc
das
cwtl
icebp
jecxz
xchg
aas
scas
jns
aad
imul
bound
sub
sub
jo
push
test
pop
xor
ja
mov
stc
mov
cli
out
xor
cltd
and
int3
sahf
xor
sarb
xchg
movb
ficoml
dec
loop
pushf
adc
fs
xor
push
stc
pop
dec
and
lea
and
in
jecxz
pop
dec
xchg
shrb
pop
jl
push
mov
sbb
aam
sti
fisttpl
adc
frstor
jp
pusha
out
push
test
dec
xchg
imul
subb
jmp
adc
and
cmpsb
push
cld
adcl
jbe
cmp
fbld
push
jecxz
cmpsb
inc
mov
loope
outsb
es
or
jne
out
jecxz
ficompl
adc
xor
cwtl
insb
add
and
fs
imul
shrb
loopne
pop
ret
ljmp
sub
lcall
addl
push
and
nop
jnp
shll
ret
dec
or
gs
push
arpl
inc
ret
cmp
mov
or
mov
lahf
hlt
ja
fsubs
lret
ss
outsl
jb
test
in
fisttpll
in
cmp
push
insb
popf
outsl
jmp
pushf
fcompl
mull
ljmp
shrl
sbb
add
nop
dec
insb
sub
stos
lcall
jns
mov
xor
into
xchg
cmpsl
pop
pop
dec
cmp
ja
and
mov
sub
mov
daa
mov
std
cmp
adc
and
mov
sbb
jns
stos
push
pop
je
shrb
clc
push
jno
adc
fldl
add
arpl
jnp
fstpl
decb
ret
inc
mov
jg
sti
lret
fcmovne
add
jecxz
add
daa
mov
xchg
ss
fsubp
adc
xorl
adc
inc
sahf
and
aaa
jg
cmpsb
test
fs
pop
push
aas
mov
lds
jne
sub
loop
dec
sub
sub
cmp
sahf
in
repz
dec
dec
adc
xor
loopne
sbb
icebp
mov
push
mov
ja
cmp
cmp
bound
loope
push
repz
inc
adc
pop
out
jae
repnz
mov
stc
iret
dec
pusha
bound
and
rolb
adc
sbb
mov
mov
gs
cli
and
sub
shll
hlt
sti
or
adc
scas
sbb
out
pop
hlt
push
mov
loop
ljmp
push
sahf
fdivrs
arpl
push
lock
mov
ljmp
push
xor
jno
pop
adc
or
push
adc
addr16
movsl
loop
icebp
cmp
sbb
cmpsl
xchg
jbe
addr16
cmp
inc
inc
pusha
cmp
mov
mov
movsl
lock
xchg
sti
ja
and
sbb
rorl
adc
mov
push
dec
stos
jecxz
add
stos
jne
bound
cltd
out
mov
and
cmp
sub
loop
call
xor
jo
repz
xchg
push
push
loop
sahf
movsb
push
push
stc
mov
rorb
imul
clc
mov
scas
or
xchg
cli
push
mov
lahf
out
push
add
mov
mov
sbb
sub
mov
cltd
xchg
lock
or
adc
sub
imul
nop
loopne
lds
fldt
jge
scas
dec
mov
test
les
inc
shl
orb
jmp
mov
es
push
or
or
inc
out
cmp
in
orl
jns
sub
xlat
or
pop
pushf
or
mov
fwait
sbb
cmp
ja
cmp
xchg
mov
lods
xor
mov
or
adc
add
lret
bound
inc
dec
les
fdivrl
and
rclb
mov
ret
and
mov
das
incl
pop
add
fldl
inc
or
insl
mov
lcall
push
sub
mov
jl
aas
scas
loop
xor
add
popf
inc
popf
cwtl
ret
mov
insb
int
scas
sbb
pop
ja
sub
out
inc
dec
add
cmp
loop
mov
adc
repz
lock
mov
movsl
push
lahf
sbb
jle
fidivs
lods
add
enter
ret
int
inc
roll
push
jae
mov
ret
jge
xchg
xor
pop
cs
test
push
sub
add
sbb
pop
mov
std
jle
jl
adc
lret
inc
jge
jmp
pop
cs
ret
rcr
aas
or
push
or
cmp
or
and
sub
add
pop
fnsave
dec
inc
cli
push
cmc
inc
cltd
rcrl
sbb
cld
test
xchg
fsubl
cmpxchg
mov
in
in
cs
push
jae
popa
push
cmp
loopne
aas
pop
inc
sub
sarb
adc
sahf
repnz
xchg
sub
push
dec
pop
stos
adc
dec
js
jmp
in
inc
add
in
in
scas
and
daa
mov
cmpl
push
sarl
leave
jnp
adc
add
pop
cmpsl
push
pop
jecxz
cmp
jno
pop
cmp
inc
fisubl
in
inc
pop
leave
cwtl
jne
cmp
test
xchg
lods
ja
data16
mov
xor
test
enter
push
mov
movsb
sti
and
push
and
loope
jmp
popf
in
pop
pop
arpl
cs
outsb
add
push
pop
mov
sbb
call
sub
shll
outsb
push
fmuls
pop
cld
pop
lea
insl
or
mov
pop
adc
mov
pop
mov
icebp
cmpsl
inc
sbb
mov
out
push
fdivr
arpl
jg
dec
mov
mov
or
and
mov
es
mov
pop
pop
xor
scas
dec
push
notl
out
jmp
cs
mov
jae
xchg
mov
pusha
fwait
inc
aas
mov
sti
inc
xor
lods
out
mov
insl
push
mov
mov
cld
aaa
or
into
scas
jbe
mov
scas
jb
cmp
mov
sahf
out
cmpb
add
inc
jb
dec
pop
inc
push
pusha
mov
jns
mov
lret
sahf
popa
mov
or
xchg
pushf
sub
fucom
outsb
or
mov
ja
repnz
stos
cmp
adc
int
push
push
xor
inc
xor
addr16
xor
mov
rcr
leave
cmpsl
push
aas
jnp
jno
hlt
neg
gs
push
ret
fidivs
sub
push
or
adcl
sbb
jmp
scas
mov
inc
mov
fscale
or
out
ret
roll
inc
sbb
push
push
xchg
imul
ljmp
mov
xchg
lea
cmc
test
mov
mov
or
sub
leave
push
movsb
inc
inc
pusha
xchg
testl
inc
leave
push
inc
pop
push
pop
xor
out
je
icebp
jl
jns
push
cmp
test
repnz
dec
xchg
cmp
cltd
and
mov
and
movsb
lds
ficoml
push
subb
add
cld
jae
jnp
fidivrl
dec
and
aaa
fidivrl
ds
mov
push
pop
dec
les
or
jno
mov
xchg
dec
xchg
ljmp
jle
push
fldenv
sarl
stos
les
xor
mov
inc
mov
out
push
movsl
clc
je
stos
fisttps
push
mov
movsb
mov
pop
or
add
xor
jnp,pt
popf
or
xor
es
pop
lret
mov
inc
test
pop
enter
mov
push
adc
ja
sbb
mov
aam
xchg
cmp
xchg
and
aam
fstpt
xchg
pop
scas
imul
pushf
aam
arpl
cmpsb
xor
movl
cmp
sbb
add
dec
ja
data16
xor
or
std
jmp
call
scas
in
mov
lret
fists
add
outsb
add
sbb
inc
or
pop
data16
lahf
push
jmp
rcr
adc
dec
pop
push
vpaddw
mov
addl
add
loop
or
sbb
testl
xor
xchg
out
mov
std
xchg
cltd
push
mov
aad
adc
aad
sbb
jne
xorl
mov
popf
push
add
sbb
stos
xor
jb
sbb
sub
xor
popf
pop
packssdw
push
inc
adc
inc
add
sbb
lods
push
std
movsb
dec
fistpl
lret
lahf
lock
ljmp
xchg
push
loope
xchg
cli
xor
leave
clc
repnz
or
scas
pop
jmp
xchg
leave
cmp
add
pop
mov
leave
das
sub
sbb
jns
shufps
out
inc
cmc
xor
mov
cmpsl
pop
aad
cmc
ds
adc
aaa
addr16
sub
call
dec
push
jp,pn
cmp
int
cmpsb
xchg
cli
push
std
mov
add
cwtl
mov
incb
or
loope
insl
mov
lea
outsb
sbb
push
pop
les
push
popa
sbb
push
jl
mov
mov
dec
jnp
clc
clc
xor
add
jmp
sub
lret
into
fisubrs
pusha
push
fnstenv
mov
cmp
scas
mov
sbb
mov
movl
mov
out
push
in
xlat
sub
jge
inc
fsts
es
jp
lret
pop
jno
bound
xchg
and
sub
jne
clc
push
andb
add
lret
adc
sub
ja
jmp
shll
and
push
mov
mov
mov
fsubrl
bound
pop
mov
mov
andl
repnz
movl
popf
fimull
mov
xchg
fimuls
jno
xor
lods
mov
pop
inc
fcompl
js
lcall
sub
int
and
insb
sub
inc
mov
test
call
and
loope
rcll
out
xchg
mov
out
in
pop
in
mov
rcrb
int3
pop
inc
mov
mov
adc
adc
xchg
nop
sub
lock
sbb
stos
add
mov
and
sahf
fwait
insb
fwait
bound
dec
xor
inc
incb
movzbl
xor
jle
sub
inc
push
outsb
mov
rcr
ret
insl
sbb
inc
adc
scas
sbb
push
adc
or
xchg
in
pop
pop
cmp
lcall
and
or
movsb
pop
adc
mov
outsb
fldcw
fcomp
mov
lds
push
stc
pop
lcall
adc
pop
push
dec
aad
lret
jbe
ss
lock
decb
cmpsl
fwait
push
cs
mov
jne
fcompl
cs
ja
fwait
inc
scas
fnstenv
jo
xorl
cmp
mov
fidivs
into
or
mov
fdivrp
leave
dec
inc
xchg
mov
aam
pop
imul
add
inc
mov
xchg
test
sub
lock
cmp
xchg
jb
out
popl
movsb
mov
dec
cli
mov
mov
in
xor
inc
push
push
fucom
in
xchg
push
cwtl
shl
mul
lods
test
cli
inc
adc
dec
loope
mov
xchg
inc
mov
repz
inc
cmp
fisubl
out
push
xchg
ror
push
aaa
jle
clc
jmp
sbb
push
stos
mov
push
orb
scas
cwtl
ss
jnp
stos
xchg
cltd
rcr
mov
gs
cmp
xor
nop
push
scas
cmp
inc
and
outsb
mov
inc
or
push
into
mov
in
in
repz
sbb
pop
stos
mov
aad
cmp
ret
pushf
fnstcw
lret
cmp
cmp
je
xchg
or
lds
push
sub
and
mov
dec
xor
jmp
jns
pop
orb
mov
fwait
outsl
fsts
push
jge
sub
jle
fidivrl
stos
mov
cmp
testl
adc
jb
push
dec
jb
mov
adc
stc
cmp
loope
xchg
out
mov
enter
mov
inc
fldt
cltd
loope
or
xor
or
ret
addr16
dec
dec
mov
in
std
adc
push
xchg
mov
mov
outsb
pop
push
hlt
xchg
mov
jg
test
mov
jmp
jns
lret
pop
xchg
cmp
call
arpl
lret
push
es
enter
xor
push
jo
dec
or
iret
outsb
sbb
shrb
and
rcrb
xchg
cltd
arpl
mov
lods
sti
iret
or
jle
dec
loopne
sub
push
mov
sbb
mov
or
cltd
inc
inc
mov
push
mov
je
sub
enter
lock
hlt
movsb
xchg
imul
shlb
jmp
outsb
pushf
daa
mov
sbb
cs
or
sti
add
jp
std
in
xlat
lcall
sti
shll
aad
xchg
mov
or
sbb
cltd
mov
cmp
outsl
lods
xchg
push
sti
rcll
cmovae
lods
cmc
xor
pop
jnp
test
daa
dec
ret
idivb
cmp
xchg
mov
pop
out
jne
stc
pop
jns
hlt
fimull
push
sbb
xchg
lahf
xchg
out
pusha
jo
jno
jecxz
arpl
pop
push
or
mov
fcmove
mov
cmp
xchg
adc
jmp
into
sbb
enter
mov
jae
dec
pop
push
pop
xor
mov
xchg
fwait
add
pop
aam
xor
and
pop
jne
loope
roll
adc
xchg
shrl
mov
inc
into
clc
cmpsb
aam
mov
dec
fisttps
mov
sbb
loopne
mov
xorb
dec
imul
and
loopne
sub
stos
inc
bound
rol
inc
mov
adc
jo
pushf
sub
pop
and
add
mov
add
call
and
ljmp
and
mov
dec
shll
cld
je
adc
mov
js
shl
xchg
inc
xchg
xor
mov
sub
and
sarl
sbb
imul
fistl
add
scas
insl
push
or
sbb
add
jge
sbb
aaa
sub
cmp
shl
pop
outsl
push
sbbl
mov
dec
cs
jne
sub
rclb
sub
scas
dec
jno
jmp
jmp
cmp
jecxz
in
int3
dec
push
aad
jge
add
outsb
jle
sub
lds
mov
xor
sarl
iret
inc
rorb
cmp
jae
sbb
fcoms
jge
inc
lea
push
dec
jmp
movsb
repnz
cli
js
sub
int
shl
and
pop
je
mov
cmp
lock
lods
jecxz
aas
pop
gs
testb
aas
jg
push
or
or
xor
mov
push
scas
jb
in
frstor
andb
lock
enter
pop
call
in
enter
enter
push
ds
or
push
and
pushf
mov
dec
push
popa
mov
adc
mov
dec
or
cmp
mov
mov
xor
cmp
cmp
sub
pop
push
in
dec
out
or
outsl
jle
jge
in
inc
lods
test
mov
xor
ja
rol
xor
out
sub
clc
call
shlb
das
aaa
inc
pop
xchg
adc
mov
mov
inc
mov
lds
add
sbb
ljmp
pop
test
ljmp
rep
inc
cmpsb
dec
xor
dec
push
scas
lods
pop
mov
push
xchg
pop
ror
shlb
xchg
adc
dec
adc
daa
fidivl
addr16
mov
push
ja
cmpsl
shrb
in
ror
cld
sbb
fdivp
mov
pop
mov
shrl
ret
in
push
jnp
mov
push
xchg
xor
fldl
test
jmp
stos
cwtl
sub
ja
cmp
mov
xchg
dec
cmp
jo
mov
push
notb
and
or
adc
mov
cmp
pushf
shll
arpl
lea
sbb
inc
xchg
jecxz
fistl
inc
inc
xchg
stc
in
sahf
jo
out
inc
adc
pop
jle
or
mov
mov
into
hlt
cmp
not
stos
popa
or
inc
jle
add
and
or
add
mov
cmpsl
pop
jmp
xchg
dec
das
ret
rclb
mov
pop
cli
sub
test
adc
ret
inc
pop
lea
sub
test
incb
mov
sbb
inc
jg
jmp
and
cmp
fwait
imul
out
jne
pushf
fstpl
cmp
ret
into
sub
enter
push
adc
js
push
out
inc
adc
and
out
xchg
mov
adc
adc
shlb
movsl
lahf
dec
add
adc
or
xlat
mov
clc
outsl
je
into
jmp
test
sbb
push
clc
sbb
call
cmc
loop
jmp
fidivrs
jecxz
sub
inc
shlb
xlat
inc
stos
add
in
inc
sub
push
cld
inc
push
test
dec
dec
sub
scas
sbb
test
adc
lahf
xor
jge
clc
xchg
xchg
stos
cltd
aad
jge
sbb
fadds
xlat
pop
jmp
cmp
aam
mov
fs
fmull
es
pop
and
hlt
sub
test
in
ja
enter
adc
mov
and
and
cmpsb
adc
xlat
sub
testb
ret
stos
or
jl
pop
dec
jb
push
adc
inc
ret
push
ret
stos
roll
or
call
mov
add
xchg
push
dec
cmc
cmpsb
sub
cmp
fistpll
sar
sub
add
cmpsl
jns
ss
lds
pop
aas
hlt
hlt
aas
testb
stc
inc
js
mov
push
inc
ret
mov
mov
push
or
push
fstpl
loope
cmpb
lea
repz
sbb
popa
cld
repz
sbb
jns
aad
shl
fiaddl
adc
xor
maxps
rorb
sarl
and
enter
testb
ret
xor
shlb
inc
push
pop
inc
cwtl
dec
jge
jmp
push
inc
mov
jl
dec
stos
pop
jecxz
or
gs
inc
int3
dec
insb
cmp
pop
sahf
mov
inc
cli
arpl
sbb
xchg
adc
pop
testl
mov
inc
leave
dec
pop
ficoms
clc
shlb
sub
xor
jp
cmp
pop
rclb
or
mov
cli
xchg
add
pop
dec
pop
mov
ja
fcoms
inc
mov
sub
sbb
ss
mov
push
ficoml
mov
jno
mov
shrb
cld
or
jnp
icebp
out
inc
faddp
aas
aaa
dec
fs
ret
fdivrl
push
in
mov
and
mov
push
nopl
and
add
ret
fisubs
dec
dec
imul
fisttpl
inc
dec
cs
frstor
inc
sahf
aaa
cwtl
movsl
jg
sbb
loopne
daa
and
pop
push
dec
xchg
mov
lea
inc
lock
bound
roll
int3
cld
add
sar
cmp
push
inc
popa
fcoms
jge
sub
dec
scas
sbb
mov
out
or
sub
rcr
push
fdivrs
lcall
inc
ret
cmp
mov
cltd
xor
and
sbb
push
or
lea
lret
sbb
push
clc
shr
mov
inc
mov
ss
psrld
dec
pushf
inc
fs
imul
sahf
mov
cmp
or
jmp
andb
sub
aas
loope
and
les
ret
lods
nop
xchg
or
test
cmp
or
int3
in
data16
cmp
jnp
dec
mov
std
xchg
cmpsl
sti
cli
popa
adc
ljmp
jp
jecxz
add
cmp
rorb
out
popf
rclb
fistpl
cvttps2pi
scas
push
repnz
aaa
ret
mov
sbb
jo
mov
inc
mov
aas
mov
inc
lret
jo
adc
xchg
fimuls
push
ss
mov
inc
int3
lahf
mov
dec
push
push
or
fildll
sbb
xor
sti
divb
or
stc
outsb
pop
dec
mov
inc
loopne
dec
lock
shl
pushf
push
add
pop
jmp
mov
test
pop
das
push
stos
in
adc
subl
lret
jo
fcmovnb
pop
movl
stos
inc
xor
pop
test
cwtl
pop
into
mov
cmp
xchg
xor
test
or
ret
or
push
sub
loop
sarl
cmp
stos
cmpsb
fdivrl
es
adc
inc
jmp
mov
cmpsb
pushw
out
data16
jmp
imul
sbb
fisubrs
jnp
sti
mov
mov
das
test
fstl
testb
in
dec
daa
ss
cs
pop
loopne
dec
add
or
add
test
or
sbb
inc
adc
jno
or
pextrw
sbb
dec
fiadds
add
or
xchg
je
cmpsb
insl
or
jmp
cltd
scas
repz
cmpb
scas
cmp
adc
cwtl
pop
mov
jp
popf
inc
pop
pop
mov
xchg
xchg
cmp
pop
dec
xchg
fbld
dec
mov
test
jae
test
cli
jle
leave
icebp
stos
xor
movsl
aas
inc
cmpsl
xchg
inc
repz
or
push
rolb
aam
or
mov
xchg
sub
mov
push
pop
or
popf
add
icebp
popf
xor
mov
mov
pop
jecxz
movsb
jmp
insl
mov
jo
out
mov
cltd
mov
mov
push
shrb
mov
imul
aam
xchg
iret
stos
ret
xchg
mov
fs
xchg
inc
add
into
push
adc
jnp
popa
iret
orl
cmc
jmp
mov
js
mov
mov
dec
jp
stc
inc
and
stos
inc
pop
neg
in
mov
ss
cli
pop
mov
jp
dec
lock
stc
outsb
clc
jb
fdivrl
inc
shll
sbb
mov
idivb
stos
cmpsl
push
mov
jns
imul
fwait
sti
push
cld
and
stos
xchg
push
xchg
jbe
mov
pusha
push
mov
inc
mov
and
lods
cmp
mov
mov
mov
sub
pminsw
je
and
cwtl
adc
outsl
xchg
pop
push
adc
add
cmp
jp
cmpsb
push
fcomps
insl
jae
cmpsl
push
imul
lods
std
fildl
fdivl
lock
xor
inc
jns
mov
inc
add
mov
enter
ret
outsl
mov
jbe
rcrl
sub
sub
add
mov
jbe
xchg
add
xchg
cmp
mov
gs
std
xlat
repnz
mov
leave
jmp
imul
cs
and
ljmp
outsl
outsb
loopne
lods
adcb
lret
dec
testb
mov
sub
lods
pop
scas
sti
xlat
popf
jge
lea
movsl
dec
sub
das
test
aam
fsubs
cmp
popa
dec
jp
xor
xor
jb
addl
inc
jnp
in
sarl
ret
add
push
mov
sub
or
loopne
jp
inc
call
test
orl
pop
xchg
aad
fnsave
cmp
xchg
mov
jp
mov
lods
es
mov
jle
jne
movsl
pop
mov
and
sub
push
mov
xchg
inc
xchg
jae
mov
pop
stos
aam
mov
imull
xchg
xchg
sbb
subl
jp
xchg
push
pop
add
and
adc
mov
jb
dec
add
cmc
repnz
mov
sti
jmp
xchg
mov
arpl
and
or
sub
pop
enter
pop
mov
cmpsl
cs
call
les
jno
mov
popf
jno
xchg
sbb
sbb
cmc
jecxz
sub
lds
mov
out
inc
mov
in
loop
aaa
sahf
rcrb
mov
js
inc
sarb
sahf
fsubrs
scas
mov
sbbl
dec
cmpsb
sub
stc
leave
jno,pt
movsb
popa
imul
mov
jb
mov
add
sub
adc
mov
filds
js
aad
mov
fistps
xor
arpl
jbe
std
jp
or
or
fbld
mov
pusha
add
sbb
lea
fwait
jecxz
cli
out
jae
xchg
xlat
int3
xchg
scas
ljmp
inc
cli
mov
out
in
lahf
outsl
aad
sub
fnstsw
mov
lahf
dec
and
inc
ja
loop
mov
and
cmp
adc
ljmp
clc
dec
aaa
cwtl
out
cld
int
stos
inc
xor
mov
dec
stc
lret
or
push
sti
stos
xchg
cmp
lds
mov
sub
fdivr
stos
mov
sarl
jbe
fldl
sbb
xor
cmc
sub
sbb
xchg
pop
sbb
pop
sbb
aas
out
jmp
and
jecxz
stos
sbb
cltd
push
in
jecxz
inc
adc
lcall
out
hlt
sub
xchg
jne
xchg
push
cmp
inc
sbb
pop
mov
jecxz
aad
xor
xchg
mov
mov
rclb
scas
dec
int3
rorl
shlb
inc
enter
jno
mov
sub
divb
push
rol
xchg
iret
mov
push
insl
andb
jbe
cmp
dec
cltd
loope
jge
shlb
test
popf
push
clc
inc
cmpsb
mov
mov
cmp
cmp
or
imul
incb
movl
lock
fistl
mov
pop
int
inc
mov
addr16
imul
and
push
push
pop
sub
add
mov
mov
sbb
mov
in
mov
inc
push
fldcw
xchg
push
int3
xor
jnp
repnz
adc
shl
add
push
cmp
movsb
adc
or
scas
enter
pop
jp
pop
pop
ja
cwtl
sarl
ljmp
mov
cwtl
insl
fs
xor
std
adc
and
cmp
jno
jb
xchg
add
loopne
in
pop
in
sub
aad
stos
fst
rorl
outsb
and
or
xchg
mov
adc
aad
mov
arpl
lahf
lret
movsb
add
or
lods
inc
repz
dec
or
lods
sbb
cmp
bound
jge
test
mov
mov
sbb
jne
cmp
mov
and
movsl
and
cs
stos
iret
imul
jb
push
inc
or
lods
ss
fsubs
sbb
aad
rorb
mov
xchg
or
stos
fadds
sahf
and
pop
xor
sub
push
inc
jno
popf
popa
add
dec
mov
fs
lcall
push
xor
popf
and
lods
sub
jge
pop
sub
mov
call
stos
out
xlat
push
jecxz
or
adc
icebp
or
cmp
cmc
xor
leave
scas
lds
leave
sbb
or
pop
add
lcall
movsl
cmpsb
add
or
cmp
es
clc
cs
mov
sti
xor
sbb
out
mov
lea
mov
mov
in
sti
loop
inc
jns
shll
adc
icebp
or
sahf
inc
cmpl
sub
jbe
in
test
mov
in
xor
das
mov
mov
scas
lods
push
popf
iret
or
add
das
loop
cld
into
dec
fsubrl
pop
cmc
pop
and
out
sub
imul
xchg
repnz
push
add
cli
movsl
popa
jbe
sub
xchg
push
add
xor
addl
xchg
inc
and
lahf
fsubs
pop
push
out
inc
out
out
jle
in
add
leave
inc
in
mov
clc
sub
mov
xchg
popa
stc
nop
jne
mov
sbb
push
rorl
andl
stos
mov
cmp
lahf
cmp
insb
lea
test
mov
test
sti
addl
inc
cmp
fcom
and
divb
dec
cmp
jle
in
sub
mov
mov
lcall
cmpsl
cmc
xlat
stos
pop
fldln2
push
fldt
popf
movsl
xor
std
mov
mov
dec
rcrl
inc
or
xchg
scas
adc
cmp
xchg
xchg
dec
loop
aas
imul
jb
jl
iret
daa
jno
push
pop
adc
test
pop
outsb
sbb
cld
int3
andb
and
sbb
lahf
xchg
fistpl
inc
mov
pop
data16
mov
shlb
sbb
shll
fistpll
push
out
or
addr16
data16
lcall
into
mov
std
aas
lock
xor
sahf
pop
cpuid
inc
mov
cmpb
pop
into
or
sub
stos
ss
jg
out
mov
rolb
mov
sub
stos
jbe
fnstsw
imul
jnp
mov
inc
inc
mov
pop
cs
xor
sbb
xor
aad
push
lods
jne
nop
mov
xchg
les
or
and
pop
sub
mov
rcll
add
in
jo
add
mov
xor
enter
sbb
dec
pusha
xchg
scas
jne
data16
mov
push
mov
mov
dec
push
iret
mov
mov
lods
xchg
adc
fistpl
mov
fdiv
mov
add
fldenv
jns
outsl
mov
and
popa
mov
xor
outsl
int3
fcoml
scas
in
push
mov
jle
jae
cmc
pop
jno
sub
and
shll
ret
adc
and
ret
js
outsb
dec
scas
loope
lds
xor
lods
fs
aas
jne
and
dec
imul
fs
scas
sbb
fistpll
mov
ror
and
mov
and
lret
dec
popa
adc
adc
dec
shll
dec
scas
lea
cmp
sub
mov
and
push
cmp
jmp
mov
mov
jno
in
or
pop
idivl
push
es
and
push
out
xchg
dec
jle
imulb
cld
scas
sahf
pop
test
ljmp
xchg
dec
aam
or
inc
scas
loopne
popa
inc
sbb
mov
add
jnp
mul
sbb
outsb
or
enter
jge
lret
xchg
mov
dec
mov
xlat
mov
div
and
push
js
in
fsts
or
mov
bound
shll
divl
mov
sub
daa
xchg
push
or
sbb
or
xor
and
push
add
xchg
pop
and
sub
shlb
mov
adc
add
fsts
xor
in
dec
rorl
clc
inc
mov
je
adc
outsb
cmc
mov
xor
ds
loopne
xor
cmp
xchg
sub
xchg
icebp
jp
js
shll
shrl
ljmp
inc
lds
fstp
inc
push
mov
jo
fdivl
cmp
mov
xchg
xchg
getsec
cmc
fadds
cmpsb
out
dec
jnp
pop
sub
scas
std
push
dec
cld
jg
jmp
sub
enter
in
sub
sub
movsb
shll
or
outsb
add
xor
lds
xor
jecxz
xlat
fwait
lods
int
pop
aaa
cmpb
je
js
aaa
in
rorb
sti
sbb
cmp
add
sbbl
push
mov
pop
dec
lds
fld
int
ja
push
jae
jo
in
mov
mov
lret
call
aas
mov
shlb
push
out
cmp
pop
cmp
xor
stos
in
nop
mov
lods
rclb
add
xchg
int3
daa
fmuls
mov
in
js
push
dec
mov
cmpsb
iret
add
inc
jo
enter
jnp
cmp
scas
add
mov
xor
push
mov
repnz
dec
xor
decb
into
pop
sbb
clc
rcrl
and
lock
pushf
iret
or
pop
imul
cld
loope
cmpsb
sbb
ljmp
xor
xor
lods
xor
stc
pop
icebp
sub
ds
lods
sbb
movsb
sbb
mov
sbb
cmpsb
sarb
sbb
xacquire
or
mov
outsb
sarl
ds
sbb
sub
ficomps
sarl
xorl
xchg
dec
ret
ret
ror
jne
xchg
inc
in
orl
cs
xor
mov
or
daa
repnz
cmp
orl
lret
xchg
or
cmc
decb
xchg
xor
mov
add
repz
push
xchg
mov
ficompl
pcmpgtb
push
mov
insl
imul
shrb
adc
ds
ja
lds
or
out
cs
mov
iret
lods
fs
mov
pop
or
fwait
sti
xchg
jle
and
test
lods
js
gs
les
and
lcall
and
fimull
cmc
imul
movsl
add
inc
clc
mov
mov
outsl
in
or
jge
out
sbb
push
hlt
mov
clc
das
in
mov
push
mov
and
xchg
sub
stos
mov
xor
pusha
adc
and
fnclex
scas
call
pop
int3
mov
rorl
cmpsb
pop
dec
imul
movsl
add
sbb
daa
lock
inc
add
and
push
cmp
mov
nop
clc
xor
int3
xor
lea
pop
aas
das
shl
sub
xchg
aam
and
cmp
lock
push
push
lods
jns
xchg
sbb
lcall
sbb
fwait
pop
lcall
daa
mov
sti
cli
jecxz
arpl
ja
sbb
push
xchg
repz
sub
cs
stc
jo
dec
js
xchg
jnp
pop
shrb
or
pop
jg
mov
outsl
adc
and
iret
mov
scas
sbbl
aas
cld
dec
sbb
rol
cmpsl
jge
loop
cmp
sub
or
cs
sub
or
js
aas
test
in
push
clc
es
xchg
pop
sbb
cs
fimuls
sbb
push
xchg
lods
lods
sub
jns
push
inc
repnz
push
mov
enter
stos
lods
out
gs
mov
dec
pop
popf
fnstsw
ss
lret
subb
repz
clc
push
cmp
lea
xor
shrl
sbb
and
enter
mov
ja
aaa
cwtl
fistpll
test
insl
shlb
sbb
xor
xlat
cld
dec
and
mov
cmp
mov
in
sbb
inc
mov
xor
inc
cmp
jg
xor
or
aad
sahf
push
lcall
movsl
test
ljmp
jle
outsb
and
out
sbb
jp
mov
and
outsl
addr16
leave
test
js
sub
dec
popf
clc
pop
cmp
shl
jl
bound
push
cmp
scas
or
mov
lock
ljmp
movsb
xchg
nop
sub
cmp
inc
das
and
movsb
aaa
dec
xchg
fildl
sub
js
inc
imul
shr
lret
lahf
push
sbb
cmp
cmc
std
andb
lods
push
pop
cwtl
ljmp
xor
mov
mov
and
es
js
xor
in
dec
pop
inc
aam
les
sub
mov
or
adc
add
movsl
lods
scas
jg
aam
addr16
inc
xchg
pop
push
pop
dec
shll
mov
and
lahf
aad
test
mov
das
insb
add
out
jle
lcall
jbe
sub
push
mov
aad
mov
sahf
xor
mov
in
sbb
ficoms
mov
mov
xor
or
adc
xchg
push
mov
in
data16
arpl
or
movsb
pop
out
xor
xchg
pop
push
imul
popa
dec
xchg
rclb
lock
test
jno
and
xchg
test
sub
repz
fistl
cmc
adc
inc
xlat
movsb
ja
pop
cltd
pop
aad
icebp
repz
into
pop
pop
sbb
mov
mov
subl
inc
mov
pop
sub
test
xor
adc
xchg
jmp
xor
loopne
aad
mov
int
pop
in
and
lods
xchg
fs
out
or
out
xchg
ret
push
cmp
es
sbb
rcrb
ds
stc
dec
pop
or
dec
or
shlb
sub
stos
nop
jmp
rcrl
lcall
addr16
pop
or
and
add
mov
dec
andl
fabs
adc
loope
test
sbb
sub
shlb
jmp
cmp
pop
mov
fmuls
push
ljmp
mov
addb
mov
xchg
hlt
fistl
or
or
sysenter
jno
in
mov
lods
shl
test
jmp
int
xor
enter
jmp
mov
and
mov
mov
mov
mov
xorl
loopne
test
clc
daa
fstl
andb
push
or
div
fsts
bound
nop
cmp
dec
mov
fdivs
mov
jae
scas
lock
lods
pusha
cmpsl
xchg
or
add
sbb
clc
cmc
mov
sbb
es
mov
jp
scas
scas
push
push
repnz
jecxz
sbb
in
push
nop
mov
negb
and
pop
rcrl
mov
push
inc
xor
xchg
shll
mov
mov
fsqrt
push
les
push
and
or
out
xor
sar
loop
jmp
push
ret
lcall
mov
inc
rcr
and
clc
mov
fs
cs
in
add
sahf
xchg
mov
test
imul
dec
jecxz
add
jne
and
cmp
sbb
movntps
faddl
push
jo
push
mov
loope
jp
mov
jnp
and
mov
sti
out
mov
fs
xchg
pop
sub
loop
cmp
insb
out
sub
cli
lods
movsl
xadd
fidivs
lds
sbb
cmp
testb
das
loopne
sbb
movsb
movsl
add
adc
rcll
push
jmp
insb
pusha
lret
iret
push
test
or
cmpsl
inc
mov
push
adc
mov
out
sub
mov
jg
fstps
lahf
dec
iret
and
cltd
jno
arpl
ljmp
push
popa
std
and
divb
lcall
jnp
xor
ljmp
push
mov
pop
stos
xor
jle
push
outsb
jmp
mov
fisubs
loope
fwait
pop
inc
jne
or
push
shrl
mov
mov
add
ljmp
insb
ja
aaa
shlb
mov
lea
lea
pop
push
xor
and
cs
mov
imul
jns
ret
jnp
shlb
lret
outsl
in
adc
cmpl
add
jns
dec
mov
aas
stc
mov
inc
ret
test
inc
or
into
cld
or
les
inc
adcb
loope
xchg
ljmp
and
js
cltd
sbb
add
xor
mov
mov
jbe
sub
sub
fsubs
and
jnp
icebp
cpuid
pop
es
push
cs
mov
inc
mov
jecxz
cld
sub
pop
shrb
rcrb
jmp
sbb
add
xchg
popa
fidivrl
sbb
xchg
jl
dec
fldt
mov
fs
sbb
imul
rcll
out
dec
sarl
push
xchg
ret
push
xor
xor
icebp
fucomip
jno
pop
xchg
je
adc
leave
mov
mov
mov
mov
dec
jnp
fldt
insb
mov
into
or
mov
inc
fldcw
adc
xlat
or
mov
sbb
outsl
cmp
out
or
lahf
push
and
cmpsb
xchg
shrb
fsubs
nop
call
sbb
mov
mov
pushf
out
inc
ljmp
sbb
cmpsb
jb
dec
lcall
cmp
ud1
push
adc
xchg
pop
mov
ja
and
xchg
outsb
rol
stc
inc
imul
mov
inc
in
lds
hlt
imul
mov
xchg
pop
jg
pop
push
xor
outsb
jp
dec
pushf
xchg
pop
faddl
pop
repz
pop
les
sub
out
cmp
push
lock
int3
aaa
adcl
fldcw
and
adc
std
fidivs
test
imul
mov
je
inc
imul
add
xor
test
aam
mov
aaa
jns
ja
and
mov
sub
cmp
mov
cli
cmpsl
add
ljmp
mov
pop
cwtl
push
push
stos
mov
push
xor
stos
mov
out
adc
push
sub
loope
iret
xchg
mov
and
testl
sub
cltd
cmp
and
rol
push
movsl
jge
rcrl
icebp
movsb
cmp
out
repz
out
mov
call
ljmp
push
test
pop
or
push
movsb
mov
lods
mov
shrb
dec
pop
hlt
mov
jne
mov
out
jae
push
add
mov
mov
push
cwtl
jg
mov
mov
mov
inc
imul
lret
out
ret
mov
xlat
jle
dec
imul
mov
int3
xchg
pop
scas
cmc
ret
testb
orl
push
ds
mov
popa
imul
cltd
xchg
addr16
sub
imul
xchg
xor
xchg
jle
adc
adc
aaa
lcall
sbb
adc
in
lcall
pop
icebp
je
xor
test
cs
push
dec
sub
adc
and
fcompl
cmp
test
dec
or
push
pop
ss
mov
movsb
xor
rclb
fldcw
push
pop
push
stos
mov
or
jecxz
test
mov
mov
lret
xchg
ds
xchg
nop
cmp
mov
js
lds
mov
lods
movsl
push
mov
xchg
cltd
push
std
adc
cltd
movsb
in
push
xorl
or
scas
ljmp
fxch
loopne
scas
mov
daa
push
xchg
mov
pusha
inc
add
dec
lret
fcmovnbe
sbb
loop
jnp
inc
gs
cmpl
mov
push
cmp
xor
repz
mov
stc
call
fs
sub
jecxz
ret
xlat
call
pop
jbe
xchg
jg
into
cmp
pop
jmp
insl
test
or
int
lret
fs
push
stc
dec
push
inc
fimuls
cld
flds
mov
inc
popa
adc
scas
in
lret
inc
push
jne
pusha
inc
rcll
aad
adcl
int3
insl
add
or
aam
sub
lods
test
pop
lea
int3
sub
adc
aaa
sbb
cmpsl
and
mov
or
cmp
xchg
addr16
xchg
mov
and
sbb
jns
fstp
lcall
repz
xchg
jae
nop
mov
pop
dec
jne
std
xchg
popf
pop
insb
mov
rcll
les
mov
mov
dec
pop
cmp
leave
inc
fnsave
mov
inc
inc
xchg
mov
inc
jmp
insl
cmp
arpl
pop
pop
push
fcmovbe
mov
or
and
lods
or
push
loop
movsb
cmp
sbb
push
lea
jno
fidivl
or
hlt
jne
jl
into
pop
cmp
cmc
xchg
ror
test
fdivrs
jle
lret
mov
imul
into
mov
fisubl
int
repnz
jb
cltd
or
mov
cmp
vandnps
sub
sarb
xorl
mov
loop
movsb
rcrb
mov
test
mov
insl
fadd
sbb
dec
sub
push
adc
pop
outsl
pop
cmp
lods
inc
lods
mov
nop
push
lcall
xchg
add
cmp
mov
ret
sub
enter
fcos
out
das
je
ds
je
add
loopne
loop
mov
icebp
imul
imul
sbb
testb
leave
mov
sti
dec
xor
movsl
mov
add
out
pusha
push
push
repz
arpl
push
pop
and
stos
xchg
aas
xchg
movsl
outsl
ret
sbb
aad
fimull
adc
mov
mov
stos
mul
xchg
cmp
inc
jnp
inc
sub
xor
pushl
push
jmp
je
mov
aas
rcrl
call
inc
push
cmp
dec
push
lods
cmpsl
psllq
js
stos
inc
pop
mov
call
in
dec
cmpsl
add
in
push
sbb
orb
hlt
imul
add
pop
pop
and
jecxz
jae
mov
daa
mov
mov
sahf
mov
cli
imul
ljmp
mov
mov
jns
rcrl
pushf
lods
addr16
inc
sub
lods
ret
cs
loope
mov
push
jo
ljmp
outsb
ljmp
xor
xchg
xchg
ss
xor
ds
hlt
push
lods
mov
daa
add
jne
jg
ds
lods
jecxz
and
push
add
in
mov
xor
or
ror
jno
dec
and
lods
test
mov
mov
movsb
inc
ja
cli
add
sbb
imul
inc
in
xor
into
and
and
sbbl
in
push
cmpsl
push
push
pop
into
mov
fnstsw
fbld
lret
mov
scas
rcr
add
mov
and
stc
ss
sub
lret
aam
sbb
adc
sbb
lock
and
jmp
jae
push
outsb
je
dec
pusha
mov
jg
repnz
inc
ret
gs
adc
loope
aas
add
lods
and
fsts
inc
jecxz
xchg
add
fwait
jge
lret
dec
xor
faddp
pop
scas
ds
cmp
adc
cmp
test
push
pop
inc
xor
xor
mov
jne
jge
xchg
jbe
push
mov
nop
mov
loop
das
xor
mov
pop
mov
or
push
mov
mov
inc
test
js
push
lahf
dec
cmp
jl
pop
cmp
flds
xor
mov
xor
in
aaa
xchg
push
jle
icebp
mov
int3
pop
outsl
pop
hlt
or
inc
pop
pusha
cmp
cmc
jmp
jmp
mov
pop
sub
into
push
sbb
jmp
adc
in
movsl
push
jl
sbb
ficoml
scas
or
add
and
leave
or
dec
sub
fidivl
add
xor
cmp
pusha
imul
es
push
xor
int3
pop
jo
mov
loopne
cld
lods
mov
mov
stc
jmp
adc
xor
cmpsl
fdivrl
jmp
or
lahf
or
xchg
pop
mov
and
inc
pop
cli
jl
rorb
gs
dec
cmp
xchg
sub
dec
stos
fisubrs
mov
cmc
rcl
pop
pop
ficoml
and
fldenv
cli
sbb
inc
sub
and
mov
pop
enter
inc
jbe
outsb
out
ljmp
fwait
test
sbb
inc
pusha
ds
daa
test
std
mov
iret
stos
dec
aad
dec
add
sti
cmpsl
jg
xchg
and
pop
mov
adc
lock
jbe
and
add
cmp
or
insb
add
jmp
shlb
cmp
add
push
pop
jbe
shrb
out
xchg
inc
sbb
lods
mov
jbe
and
leave
cmp
in
cmp
or
push
aaa
stos
loop
lods
mov
cmp
push
sbbb
aas
jmp
sbb
mov
xor
jbe
pop
pushl
repnz
push
aad
insl
cmp
mov
inc
sub
cli
jbe
loope
repnz
xor
push
out
cltd
sub
xchg
xchg
fucomip
leave
xor
sbb
jbe
lcall
fstpl
jb
rclb
xor
mov
mov
sbb
sub
jbe
dec
ret
jp
dec
mov
mov
add
jns
mov
sbb
adc
cmp
out
xor
pop
in
rcrl
push
addl
pop
xor
stos
mov
out
mov
insb
xchg
push
sbb
or
jo
fnstsw
test
loop
push
sub
push
lds
pop
lcall
mov
xorl
cmpsb
sub
add
ret
lds
mov
pop
sti
jno
sub
insb
cmp
orl
sub
jns
adc
loope
mov
fcmove
js
mov
cmp
mov
out
dec
jo
repnz
sbb
or
shll
fisubl
jecxz
mov
mov
pusha
or
lock
mov
aas
cmp
std
sbb
add
cli
popa
loop
nop
inc
sbb
cs
ljmp
mov
shll
sti
add
push
mov
jecxz
jbe
sub
jmp
adc
jle
pop
cmp
cmp
nop
jp
insb
inc
jno
xor
in
enter
outsl
stos
dec
ficomps
sub
jmp
or
fwait
dec
pop
das
and
adc
adc
inc
sub
or
scas
in
pusha
neg
push
or
jb
pop
daa
test
mov
mov
mov
mov
mov
outsb
xchg
xor
mov
mov
repz
or
jae
sbb
push
sahf
push
out
pop
cltd
jnp
add
out
add
push
or
sub
in
test
and
jp
cmpsl
fdivrs
out
jae
inc
test
ret
add
sbb
jns
add
mov
loop
pop
fstps
dec
xchg
popf
push
dec
and
in
or
pushf
push
leave
jge
add
jmp
jmp
fwait
imul
mov
ja
insl
pop
mov
push
mov
pop
icebp
js
mov
enter
cld
test
das
or
or
mov
add
mov
jns
cld
in
insl
dec
shl
sti
dec
sti
fwait
aas
sbb
lock
cld
pop
add
scas
aaa
mov
jne
mov
add
pop
pop
mov
out
imul
fdivr
pop
sbb
inc
or
jne
rorl
sub
popf
das
xchg
xor
sar
adc
repnz
ljmp
dec
mov
inc
out
push
mov
sub
sub
js
jmp
stos
sub
mov
gs
rcl
and
test
xlat
rcrl
sbb
imul
mov
lcall
leave
mov
les
mov
divb
inc
mov
xorb
and
test
sub
inc
cwtl
dec
pop
pop
sbb
test
push
dec
loope,pn
daa
test
nop
loope
mov
adc
fnstsw
push
add
pusha
inc
sahf
xchg
push
push
imul
dec
xorb
in
lret
lahf
mov
cmp
fwait
loope
jle
stos
jns
cmpsb
adc
sub
jnp
mov
call
dec
add
jno
mov
bnd
dec
pop
sbb
pop
push
sub
or
sbb
push
cltd
scas
mov
cmp
fstpl
cltd
jecxz
cmp
and
xchg
cwtl
push
int
mov
mov
dec
repz
mov
mov
aam
push
aas
push
jns
mov
inc
aaa
and
cmp
test
or
scas
or
jl
or
aam
dec
lret
in
fcmovu
mov
mov
mov
insb
cmp
mov
or
inc
xlat
add
add
stos
jmp
push
xchg
sub
aaa
cmpsb
xor
cwtl
push
fdivl
xchg
sbb
mov
add
jge
pop
aas
scas
or
sbb
into
out
adc
or
mov
jne
inc
loopne
popa
pop
mov
mov
sub
js
leave
push
daa
cmp
jno
lods
push
stc
lock
pop
sub
lods
or
testb
sahf
lahf
dec
add
test
push
jns
outsl
adc
jo
in
js
push
pop
leave
sti
add
int3
lcall
inc
test
sahf
rcll
pop
jb
cmp
insl
add
aad
push
out
cmp
jnp
sti
test
mov
mov
mov
mov
ss
mov
dec
jo
push
push
fiaddl
add
cld
mov
xchg
sub
sbbl
push
mov
pop
push
ret
pop
dec
mov
mov
mov
jecxz
into
mov
mov
mov
mov
mov
movb
adc
or
cmp
xor
xchg
sbb
mov
sub
add
mov
sbb
mov
loopne
add
frstor
dec
dec
or
lods
scas
mov
pop
iret
add
dec
mov
hlt
jle
lret
lcall
add
gs
inc
sub
mov
inc
bound
push
cwtl
push
rcrl
or
mov
and
inc
sub
outsb
push
cmp
cmpsb
cmp
mov
lret
leave
ret
mov
lret
lret
popa
push
jle
mov
mov
imul
push
in
test
cli
add
xchg
sub
xor
jnp
jb
out
js
mov
xor
pop
mov
push
cmpsb
iret
adcb
ds
nopl
loop
inc
loope
mov
aas
imul
inc
mov
cmp
loopne
cmp
insb
out
xchg
push
and
pop
out
inc
pop
imul
inc
jne
push
enter
add
xchg
pop
sub
popa
adc
pop
push
mov
aam
sub
push
cmc
ds
sub
sub
fcoml
ret
int3
mov
pop
sub
aam
and
je
sahf
pusha
mov
pop
lret
cmpsl
hlt
fidivl
add
int
push
call
jno
lods
sub
cmp
xor
inc
jg
push
xor
mov
test
mov
mov
dec
int
or
ds
leave
bound
test
xor
je
xchg
xorb
lahf
daa
sbb
out
dec
cltd
js
sub
pinsrw
into
fdivr
jb
jbe
cmp
cmp
cwtl
jmp
lcall
fidivrl
imul
xchg
outsl
lret
push
cmp
or
mov
and
or
mov
xchg
loop
xchg
mov
cmp
rcrl
pop
and
cld
adc
ds
lds
movsl
stc
mov
push
push
sub
and
xor
pop
push
push
or
jo
push
xchg
inc
ss
mov
int3
in
lcall
sub
pop
mov
nop
push
jg
mov
mov
sarl
sub
and
push
movsb
sbb
ljmp
mov
jnp
dec
hlt
nop
call
inc
rclb
pop
fmul
test
gs
xor
push
xor
stos
pop
xchg
sarl
push
xchg
jge
data16
push
dec
push
cmp
add
jl
pop
and
or
lcall
fmul
pusha
dec
push
addl
repnz
mov
pop
pop
aaa
loope
dec
add
or
and
mov
xchg
nop
push
sbb
xor
xor
movsl
mov
mov
inc
xor
push
rorl
push
inc
pop
xchg
shr
sbb
lods
decb
sub
incb
xor
add
lcall
xor
add
cs
repz
icebp
xchg
sub
add
or
and
sub
movsb
jne
sahf
fsincos
mov
movsb
jp
push
mov
sub
int3
cltd
sub
xchg
or
rorl
push
int3
xchg
call
add
pop
pop
dec
imul
aas
lds
sti
test
into
mov
in
cmpsl
mov
and
shlb
out
cmp
sbb
add
mov
dec
mov
and
mov
daa
xor
inc
fcmovne
fsubl
inc
mov
xchg
cmpsb
orl
push
lcall
xadd
gs
std
sub
add
cs
xchg
xchg
in
adc
out
loope
scas
mov
outsb
int
xchg
repz
clc
jnp
aaa
jns
test
js
mov
out
mov
nop
iret
xchg
not
xchg
xchg
xor
sarb
add
mov
jge
je
mov
scas
pop
incl
test
in
or
addb
divl
adc
sbb
adc
mov
mov
stc
icebp
add
push
mov
ja
inc
in
lea
inc
mov
mov
or
mov
mov
rorl
push
dec
add
sbb
in
inc
inc
jl
add
pop
pushf
fimuls
cmpsl
or
xor
push
push
sar
fs
dec
add
dec
push
xor
xor
pop
out
fimuls
mov
js
in
fidivrs
cwtl
ret
inc
jge
hlt
call
fsubr
mov
dec
insl
sub
xor
mov
xchg
sbb
imul
jae
inc
dec
xchg
ss
jp
das
cmpsb
popf
pop
add
scas
sub
push
lock
jmp
jbe
loop
xchg
js
add
sar
cmp
jl
aam
adc
fidivs
cmp
cwtl
test
mov
dec
add
popf
ret
jge
rorb
sub
push
jo
iret
test
or
jmp
sahf
dec
sbb
sbb
dec
out
loopne
push
mov
and
mov
repnz
push
cld
loope
inc
dec
xor
out
push
jne
fsubrs
outsl
int
add
in
movsl
aam
mov
je
lock
and
and
cwtl
sarb
movsl
cmp
mov
das
inc
frstor
into
sbb
push
pop
xchg
fidivs
add
cwtl
lds
pop
xchg
shr
or
popf
sahf
xor
push
mov
push
sbb
bound
lods
dec
dec
xchg
sub
mov
xor
stos
shlb
pop
imul
data16
out
add
cmpsb
stos
inc
jl
cmp
ds
mov
sub
inc
insl
inc
icebp
aad
mov
in
adc
pop
fadd
mov
mulb
xchg
pop
xor
jge
pop
cmp
mov
ret
movsb
lret
hlt
js
enter
scas
push
mov
aad
add
dec
stos
scas
jo
ret
add
out
bnd
push
in
lcall
ja
mov
in
fsubrp
sbb
stos
mov
ret
ljmp
or
dec
ret
jle
jnp
adc
std
mov
fcoml
sub
add
mov
jo
or
add
iret
mulb
mov
inc
cwtl
repz
fsubp
add
out
je
dec
jmp
dec
xchg
pop
adc
xchg
leave
gs
and
pop
loop
jns
fldl
lods
popa
ret
sub
push
mov
addr16
daa
pop
add
in
lds
jb
rcll
stc
pop
sbb
pop
stc
xchg
sbb
sbb
sbb
lcall
inc
lret
outsw
sub
inc
popf
shl
aad
aad
repnz
add
clc
cmpsb
xor
pushf
repnz
push
rorl
pop
dec
ja
mov
cmp
sbb
jb
sub
add
sbb
das
pop
mov
or
push
in
addr16
cld
test
pop
push
push
cmp
call
sub
mov
imul
rorl
ss
xchg
lcall
dec
add
lcall
push
ds
movl
cmpsb
and
cs
and
adc
incb
mov
inc
lret
cmpsl
scas
les
add
scas
les
insl
movsb
push
sub
arpl
xlat
aas
jo
or
out
lods
mov
pop
inc
es
pushf
pop
scas
and
lods
loop
movsl
sub
aaa
pop
dec
lret
insb
mov
rcrb
xor
nop
mov
jo
outsl
pop
cld
adc
jb
or
adc
push
lods
jno
subl
and
test
mov
xor
push
sbb
push
jmp
ljmp
inc
jmp
rcll
sbb
xchg
push
cmpsb
lret
imul
or
mov
mov
push
mov
inc
out
ja
lock
popf
and
popf
mov
mov
push
test
add
inc
cmp
pop
mov
xchg
mov
add
dec
call
ret
repz
pop
jae
in
scas
addr16
rcl
cmp
xor
mov
mov
push
arpl
or
xchg
loop
push
and
jecxz
or
inc
in
loopne
out
xchg
xor
dec
es
and
lret
xchg
add
ss
mov
sbb
ljmp
or
and
cld
idivl
mov
loope
mov
adc
mov
mov
out
sbb
xchg
dec
clc
mov
cwtl
lret
cltd
imul
mov
movsl
xchg
outsl
bndstx
mov
movsb
jb
inc
aaa
rcr
cmpsl
rclb
fistpll
decl
lock
clc
div
sbb
test
pop
stc
pop
movsl
sbb
lea
enter
dec
stc
pop
pop
addl
pop
push
sti
nop
sbb
mov
fldt
sarl
aam
inc
push
adc
jbe
push
int3
push
enter
add
mov
mov
dec
adc
or
xchg
jbe
mov
dec
test
fwait
out
call
nop
je,pt
cmpsb
push
loop
sarb
adc
xchg
cmc
movsb
fnsave
insb
add
out
dec
scas
jo
mov
xor
or
aaa
scas
scas
push
shlb
or
pop
cmp
inc
outsl
sub
rorl
sbbb
sub
pop
inc
inc
roll
outsl
pop
outsl
orl
mov
xchg
xlat
aas
cmp
call
leave
adc
xor
movsl
insb
mov
je
stc
push
pop
pop
test
jb
adc
stos
mov
fnstcw
inc
mov
jg
pop
ljmp
sub
xor
ftst
lods
dec
pop
mov
push
addb
push
jno
ljmp
mov
pop
fsubrs
scas
mov
repz
rorl
imul
lds
add
arpl
pop
mov
bound
lock
xor
and
lods
imul
lret
inc
icebp
add
enter
out
outsl
pop
dec
xor
xchg
movsl
push
jo
push
xor
outsl
lcall
bsr
sbbb
xchg
out
lods
das
hlt
and
or
rolb
dec
jae
and
and
ja
jle
sbb
mov
in
scas
js
ss
sub
cmp
mov
sbb
inc
aaa
or
mov
sbb
adc
nop
cmpb
aas
xchg
stos
push
leave
imul
pop
rolb
cmp
repnz
orb
cmp
and
xor
and
cltd
cmp
enter
mov
lods
mov
mov
shrl
adc
popa
adc
cmp
scas
and
adc
pop
lret
adc
pusha
or
inc
push
inc
and
out
pop
imul
jl
jl
fcoml
hlt
or
or
mov
testb
xchg
outsb
andb
repz
add
pushf
push
xor
adc
mov
push
jnp
push
push
lods
je
out
loopne
xor
xchg
and
out
ss
or
push
and
mov
lods
dec
fcmovnu
add
jp
cmp
ss
sti
ret
xlat
outsb
mov
aas
out
ss
cwtl
cs
push
std
xor
xchg
arpl
and
or
push
jle
lods
dec
pop
imul
icebp
xchg
sahf
jl
scas
mov
scas
sbb
adc
pushf
add
stc
nop
aaa
add
aaa
and
test
imul
dec
cmp
negl
or
xchg
jnp
adc
cmp
pop
xor
int
int3
jle
push
lock
dec
shrl
cmp
fnstenv
cmp
pusha
jae
imull
mov
push
sbb
aam
repnz
cli
stos
fs
jne
cmpsb
cmp
jne
pop
movsb
dec
xchg
xchg
inc
sub
xchg
push
insb
scas
rclb
jp
movsbl
jns
ror
mov
or
pop
add
imul
fwait
sbb
insb
pop
ds
fsub
invd
adc
cmp
jo
mov
adc
in
xchg
and
mov
sub
inc
sbb
movsb
mov
sub
je
pop
out
test
decl
and
rolb
lock
dec
mov
cltd
call
scas
push
movsl
enter
shrb
jo
mov
pop
enter
imul
sbbb
cmp
lods
int
into
je
xchg
shrl
in
or
add
insl
cmc
and
and
int3
adcl
notl
jno
and
aam
push
mov
mov
repz
daa
mov
ljmp
scas
add
mov
imul
repnz
adc
push
push
out
outsl
je
push
je
sbb
dec
mov
sbb
push
or
mov
add
stc
inc
pop
in
push
lahf
out
shll
mov
mov
push
das
loope
fs
mov
outsb
sub
and
cmp
mov
sbb
jbe
mov
jp
cmc
or
ret
and
outsb
jnp
mov
inc
aad
les
ret
pop
xor
cwtl
push
sti
push
insb
adc
fisubs
xor
pop
jns
sub
dec
je
test
mov
mov
xchg
mov
lock
adc
scas
insb
cmc
or
cld
pop
push
lret
repnz
popf
out
cwtl
mov
or
xor
sub
les
or
shl
popa
pop
pop
adc
pop
and
mov
or
mov
addr16
stos
std
jno
sub
xchg
jge
cwtl
stc
adc
dec
mov
lods
push
jns
mov
scas
cmp
pop
add
push
fstl
jmp
jae
movsl
xchg
mov
pop
push
jb
adc
pop
sti
sbb
mov
daa
mov
sbb
and
mov
addr16
out
add
cmpsb
js
and
in
inc
in
jnp
mov
sti
ja
cltd
testb
mov
add
adc
gs
or
lea
lds
xlat
xchg
cwtl
xchg
outsl
and
outsl
mov
lods
xor
out
lret
add
out
xor
jg
sbb
add
push
mov
ds
xlat
xchg
or
ret
add
sahf
cld
test
push
jmp
add
sbb
jmp
arpl
and
aad
ret
mov
dec
dec
mov
adc
fldcw
movsl
iret
adc
xor
mov
ss
pop
pop
sub
loope
sub
notl
jge
std
fsubl
jnp
rclb
mov
mov
nop
inc
scas
ss
cltd
shlb
adc
inc
out
mov
repnz
xchg
inc
fdiv
sub
test
sbb
sub
insb
cld
add
xor
mov
inc
ja
fidivs
popf
push
sti
push
xchg
gs
pop
adc
fimull
pop
cmp
mov
rorl
or
jmp
fisubrs
adc
bound
inc
dec
cli
push
push
dec
dec
loopne
aaa
inc
add
sub
rcrl
or
push
ss
lret
mov
fdivrs
xchg
aaa
push
sub
jne
dec
jl
lods
loop
fildl
inc
mov
mov
push
inc
cmp
xchg
sbb
aaa
jnp
test
xchg
or
sbbl
inc
mov
and
mov
ja
pop
cmp
pop
inc
aas
popa
and
data16
and
xchg
push
aaa
xchg
push
add
loope
es
outsl
adc
mov
xchg
mov
jb
sbb
lods
test
mov
xchg
and
fwait
stos
xlat
test
lock
xlat
fstps
jle
bound
shl
scas
out
xchg
sub
add
xor
xor
hlt
or
pop
push
aas
or
mov
push
inc
cmp
lret
inc
icebp
mov
inc
mov
fcoml
sbb
jbe
test
mov
into
insl
and
sub
pusha
mov
fisubrl
and
lret
je
pop
jmp
push
out
negl
stos
lahf
cmp
out
dec
fiaddl
or
rorb
inc
or
jns
mov
xor
push
in
or
lahf
xor
pop
stos
push
xchg
xor
lcall
jge
out
push
dec
mov
stos
sbb
outsl
push
test
push
imulb
adc
mov
push
dec
aad
bound
inc
std
dec
scas
shl
or
sahf
push
sbb
lods
shlb
pop
popf
jmp
jae
addl
insb
inc
repz
inc
or
fcoml
stos
movsb
sub
jns
or
mov
out
inc
mov
aaa
stos
xor
pop
ret
out
mov
ret
daa
mov
scas
sbb
xchg
inc
push
adc
mov
dec
dec
xor
sbb
adc
out
popf
or
inc
test
jae
mov
xchg
popa
popa
cmc
push
lds
shrl
push
imul
fidivrl
push
es
pop
call
jnp
daa
sbb
xchg
cs
or
mov
push
jo
jl
cmpsl
fidivrs
imul
scas
mov
iret
jecxz
add
out
push
pop
addr16
sti
lea
mov
push
mov
xchg
lea
andl
cmp
mov
mov
sub
std
fstps
in
cmp
hlt
pop
sbb
add
xchg
test
je
mov
aad
xchg
and
fiadds
popa
lea
adc
popf
sbb
cwtl
xor
pop
ss
or
test
ret
cmp
pop
dec
mov
dec
stos
mov
cwtl
dec
jno
mov
mov
int3
fmuls
loop
mov
push
jl
jnp
cmp
mov
repz
or
push
add
addr16
lret
fwait
add
out
push
sbb
imul
mov
loope
fisubl
andb
popf
frstor
cmp
lods
fdivrl
mov
xor
aam
mov
jmp
jnp,pn
dec
test
inc
pop
std
add
nop
cltd
rorb
pop
cmp
push
movsl
xchg
shll
dec
rclb
push
ljmp
in
decl
gs
leave
push
push
xchg
ret
mov
lcall
stos
sbb
pusha
cmpsb
inc
xchg
hlt
out
mov
rcrl
sub
cmp
jo
sahf
popf
adc
jnp
pusha
inc
jno
mov
or
repz
cmp
jno
mov
mov
loop
lock
inc
sub
lahf
leave
xlat
mov
cmp
out
mov
daa
popa
aam
aam
iret
aam
push
add
icebp
sti
add
out
inc
hlt
push
stos
pop
ret
call
adc
fistpll
data16
mov
and
mov
imul
xchg
shrb
or
inc
sub
xchg
adc
js
mov
jb
pop
scas
addr16
lea
divl
std
pusha
popa
lret
cwtl
pushf
fwait
rorl
pop
add
arpl
repnz
and
cmc
mov
lock
rcll
imul
sti
and
add
js
shrl
sbb
jb
dec
aas
jg
jl
scas
jmp
mov
in
mov
dec
hlt
test
imul
mov
test
inc
xchg
je
lods
xor
sbb
mov
lahf
aam
inc
mov
jns
mov
mov
ss
dec
mov
or
fimull
push
testl
sbb
xlat
xchg
test
in
sub
xchg
sbb
clc
jbe
test
decb
int3
adc
cmpsl
inc
aas
jecxz
adc
or
bnd
je
dec
push
hlt
dec
dec
enter
jnp
xchg
sbb
add
mov
xchg
enter
sarl
cld
rorl
xchg
ja
bound
push
outsl
push
mov
push
sti
pushf
outsb
aaa
fistpl
out
lods
pusha
cmp
in
std
fnclex
xchg
in
jnp
adc
pop
sub
aam
ja
xchg
pop
xchg
ss
sub
aas
hlt
sbb
xor
and
mov
mov
std
xchg
xor
into
mov
mov
stos
pop
mov
test
test
outsl
mov
call
xor
jo
aaa
inc
sub
add
cwtl
sbb
es
sbb
leave
ljmp
insl
mov
fnstsw
nop
inc
cmc
pop
icebp
scas
test
xchg
add
out
cwtl
dec
push
and
jle
jnp
fisubl
cwtl
dec
xlat
sbb
pop
outsb
add
ret
pop
cs
jbe
mov
push
mov
imul
insb
add
ficomps
lock
lods
lock
and
mov
sti
push
sbb
ds
cmpsl
rcl
push
std
jmp
test
fwait
add
sbbb
popl
int
adcb
xchg
in
cmpsl
add
data16
push
lods
cwtl
or
and
jl
mov
loope
xor
rcl
stos
hlt
adc
sarl
pop
push
adc
in
adc
roll
out
sahf
dec
inc
rcll
out
sub
lods
xor
test
adc
aam
cmp
ret
push
hlt
jecxz
popa
push
cmp
sbb
das
icebp
cmp
lds
and
iret
xchg
inc
enter
adc
sub
jae
cltd
repz
popf
and
pop
pop
and
sub
lret
cwtl
xchg
cmpsb
shl
mov
mull
fcomps
or
aas
imul
movsl
call
cltd
sbb
mov
mov
jae
or
test
adc
aaa
ss
pop
jmp
jp
das
add
test
adc
jle
inc
sti
mov
jae
in
ret
in
xchg
or
repnz
mov
movsb
lret
xor
push
and
cmp
inc
mov
or
or
pushl
jnp
lret
das
movsl
fsts
inc
add
mov
push
bound
pop
pop
insb
in
add
pop
push
cld
adc
mov
adc
inc
jb
push
aas
mov
shrl
mov
sahf
xchg
cmp
mov
lret
sub
adc
push
scas
out
loopne
out
cmp
inc
mov
jp
xchg
mov
filds
cmp
std
pop
mov
and
mov
push
fisttpll
jmp
xor
insl
cmp
xchg
cmpsb
repz
in
cmp
aam
inc
lods
sub
jnp
mov
fnsave
pop
loop
mov
loopne
push
mov
xchg
sbb
sub
pusha
movsb
je
xchg
or
jg
jmp
outsl
out
xchg
mov
mov
adc
mov
sarb
into
mov
ja
adc
sti
dec
mov
adc
mov
andb
int3
divl
cld
lods
loop
mov
movsb
cmpsl
lods
mov
aad
sti
hlt
push
repnz
inc
shrl
cmpsb
jg
icebp
sub
cli
aas
jae
or
jle
daa
mov
popf
mov
xor
ret
aad
or
sbb
xorb
mulb
hlt
test
jp
jo
js
negb
icebp
adcl
inc
jmp
add
es
in
and
inc
lods
loop
or
sub
out
enter
mov
in
mov
inc
mov
xchg
or
xchg
stos
aas
xchg
cmp
jb
pop
ljmp
addr16
rolb
mov
add
loop
sbb
out
divb
mov
jecxz
xor
rcrl
sub
xchg
jg
fucomp
fistps
sbb
lods
pushf
add
aad
mov
jmp
xor
xchg
lret
push
inc
push
sbb
mov
pushl
es
dec
out
adc
add
lock
mov
inc
jp
mov
adc
dec
cmp
sti
fs
adc
loopne
xor
loop
sub
or
call
jge
mov
push
push
pusha
mov
sbb
cmpsb
and
or
popf
je
in
mov
pop
sbb
or
in
test
dec
dec
sbb
jmp
lahf
mov
mov
mov
mov
push
xchg
jne
out
jbe
jno
mov
sbb
dec
cmc
pop
rorb
ja
inc
jno
xor
or
inc
iret
add
adc
sub
dec
mov
jne
pop
pop
mov
mov
mov
and
cmp
clc
lods
mov
push
loopne
out
dec
jno
push
popf
sub
cmc
xchg
mov
clc
cmpsb
sbb
test
xchg
mov
and
mov
dec
nop
jle
out
sahf
stos
pushf
iret
pop
adc
rcrl
bound
adc
inc
lahf
das
daa
push
xchg
push
and
ret
adcb
push
das
dec
sbb
test
in
push
inc
jmp
xor
push
jne
fwait
pop
mov
mulb
movsb
test
scas
mov
shl
call
sbb
fadds
lret
fwait
test
dec
add
pop
pop
xor
in
mov
jl
test
inc
xchg
test
loope
cmovnp
or
and
push
incb
jb
pop
repz
es
scas
jge
or
out
out
mov
mov
xchg
ja
inc
add
es
aas
xchg
aam
adc
add
xchg
xor
xchg
pop
mov
mov
nop
sbb
jbe
mov
pop
mov
fstps
adc
fistps
movsb
sub
adc
inc
pushf
lret
loope
mov
ja
xchg
mov
fidivl
jmp
mov
in
cld
cld
jae
movsl
adc
outsl
data16
add
or
out
pushf
add
mov
int
pop
cmp
dec
dec
xchg
lret
mov
push
stos
aad
inc
aad
cltd
sahf
or
xchg
loopne
pop
std
mov
adc
cmp
cmp
xchg
sbb
push
jle
push
lock
je
push
push
std
mov
adc
daa
mov
fsubrs
test
arpl
cmc
jb
lret
mov
mov
xor
pop
xchg
sub
mov
dec
out
imul
ss
and
fdiv
clc
sti
xor
int3
adc
jg
mov
adc
ja
rcrl
out
adc
and
push
imul
cwtl
inc
ret
xchg
mov
pop
jmp
jl
and
cmc
test
adc
pop
test
test
movsl
or
dec
jne
inc
jle
shll
xor
inc
or
sub
sbb
and
aad
lahf
fists
test
cltd
imulb
gs
dec
inc
pop
cld
mov
movsb
adc
push
inc
push
push
popf
popa
loop
jbe
add
cmc
inc
inc
aam
shrb
xchg
jno
jp
sbb
arpl
dec
in
fiaddl
xchg
daa
notb
icebp
mov
xchg
sub
mov
sbb
outsb
lock
pop
scas
out
push
fmull
xchg
adc
cmp
dec
xor
sub
add
ja
test
and
test
repnz
pop
cmp
jmp
fiadds
sbb
push
punpckhwd
mov
lods
pop
or
sti
jg
xor
loop
aas
lock
pop
andb
in
jle
xor
mov
dec
push
lcall
lods
leave
fisubrl
mov
xor
adc
and
adc
jge
fidivrs
adc
inc
jmp
cli
andl
lea
ds
enterw
gs
or
ja
insb
pusha
cmp
jnp
dec
sbb
jecxz
mov
pop
hlt
sbbl
clc
clc
andb
push
sbb
nop
pop
iret
mov
xchg
gs
imul
sarl
roll
push
adc
roll
jg
mov
cmp
mov
or
and
pop
mov
add
js
jecxz
lcall
leave
mov
mov
mov
scas
mov
mov
push
dec
stc
adc
dec
cltd
add
pop
push
addr16
dec
lock
out
ret
cli
add
dec
imulb
iret
out
lea
negl
inc
and
lods
iret
push
setl
jle
add
cmp
jmp
pop
add
inc
sbb
mov
jo
hlt
in
jb
sub
test
enter
adc
jb
mov
das
movsb
and
stos
or
cmp
jecxz
cmp
xchg
or
adc
push
out
out
ljmp
adc
orl
ljmp
cs
xor
xrelease
stos
rcll
sarl
cmp
jl
fisubrl
xchg
cmp
pop
ficoml
mov
push
add
sbb
mov
cmp
cltd
sbb
out
inc
rcrl
lret
loopne
insb
outsl
dec
pop
mov
clc
cs
test
stc
mov
pop
cmp
add
or
cmp
aam
sbb
or
sub
jo
mov
jb
pushf
addr16
insl
mov
cmp
test
adc
aad
aad
and
cmp
jmp
call
sub
cmc
mov
mov
iret
bound
negb
fcomps
cmp
shrl
sbb
push
jne
arpl
mov
call
mov
jns
test
sub
dec
and
sbb
or
add
in
inc
roll
jnp
dec
movsb
mov
and
and
lahf
movsb
cmc
pop
inc
mov
xor
lret
jns
pop
in
aas
jns
jne
mov
vmovhpd
in
ljmp
clc
mov
dec
aas
or
or
and
movl
pop
orb
cmpsl
and
adc
xchg
xlat
mov
and
cmpsb
xchg
xchg
out
jge
or
add
sub
or
adc
sbb
mov
cmp
shr
adcb
fidivs
sbb
xchg
imul
notb
pop
or
repnz
test
adc
fildll
or
lds
fnstenv
xor
int
xchg
je
mov
sbb
pop
cltd
repz
pop
sub
cmp
test
repnz
and
sbb
adc
in
iret
ret
and
or
xor
fisttps
enter
push
pop
js
xor
cmpsb
jl
jmp
mov
lds
bound
aas
push
mov
mov
int3
daa
aas
xchg
js
pusha
push
cmp
pop
int3
mov
xorl
cmp
dec
adc
or
push
push
clc
mov
daa
mov
outsb
xchg
loope
enter
divl
jg
mov
dec
xchg
outsb
add
sbb
xor
mov
adc
rorb
sbb
adc
lods
dec
mov
pop
addb
out
inc
in
imul
insl
sarl
mov
or
loopne
std
fwait
aad
xchg
movsl
mov
sbbb
jo
jl
mov
inc
pop
mov
cmpsl
int
aad
cltd
mov
pop
repnz
popa
mov
push
mov
ljmp
mov
pop
pop
mov
scas
addb
jecxz
jmp
xorl
and
cs
int
adc
ds
sub
push
shld
rcrb
test
lcall
loope
adc
pop
repnz
mov
icebp
mov
and
mov
in
sarb
jecxz,pt
loope
call
ret
dec
jecxz
cmp
jmp
jno
add
sub
cld
add
jge
add
mov
inc
sub
mov
cli
xor
inc
in
adc
jnp
ljmp
adc
movsl
add
add
mov
js
and
jmp
subl
dec
dec
pop
nop
jge
sbb
jb
jmp
loop
ret
pushf
mov
dec
inc
insb
cmpb
push
and
out
xlat
test
dec
xchg
lret
outsl
enter
inc
mov
ljmp
xor
mov
push
into
cmp
jne
inc
movsb
dec
pop
cli
add
dec
mov
push
xchg
push
repnz
inc
pop
jo
adc
xor
out
pop
xchg
cmpsb
into
test
aas
cmpsl
aam
xor
lock
lret
jae
int
and
aaa
loopne
inc
ja
push
push
inc
pusha
lock
push
repz
inc
ja
mov
mov
imul
sti
ja
lds
test
test
ret
ret
in
aad
mov
movsl
testl
call
fwait
jge
jns
or
pop
inc
jns
cmp
mov
int3
in
fs
pushf
clc
jne
cli
push
cmp
loopne
call
js
jg
xchg
fdivrs
sarb
jge
icebp
mov
imul
lods
adc
lahf
shrb
insl
cmc
sbb
mov
xchg
test
in
sbb
xor
push
inc
lock
dec
int3
rcr
bound
xlat
add
jno
adc
test
arpl
jmp
or
pop
push
stos
or
xchg
jne
rcr
push
xchg
sub
clc
mov
popf
cmp
push
push
in
cmp
ss
cs
aas
mov
pop
mov
xadd
inc
and
xor
dec
and
lret
inc
out
stc
dec
lods
xchg
loopne
pop
insl
in
imul
push
or
in
pop
mov
push
rolb
jecxz
inc
sbb
dec
cmc
subl
and
or
push
mov
mov
bound
add
clc
fbstp
jbe
bound
jecxz
mov
sub
dec
daa
std
das
jecxz
or
cmp
dec
sbb
dec
clc
lea
test
clc
loope
mull
jmp
pop
sub
das
inc
or
cmp
sub
dec
pop
pusha
cmp
cmp
mov
movsl
xchg
das
sub
sbb
pop
inc
insb
mov
push
jg
adc
lret
mov
push
dec
fbstp
dec
mov
mov
inc
add
cmpsb
mov
fcmovu
or
mov
stc
add
cwtl
pop
int
repnz
cmp
dec
mov
mov
popf
jecxz
repnz
test
xchg
add
or
call
scas
fidivrs
pop
jmp
lock
std
in
or
push
stos
sbb
push
pop
pop
push
pushfw
mov
stos
mov
mov
lock
les
jecxz
insl
push
push
mov
test
test
push
cmpsb
jo
lea
enter
scas
inc
fwait
sbb
xor
mov
inc
jnp
mov
add
add
lcall
dec
sub
cmc
xchg
xlat
lods
xor
pop
fdivs
in
pop
inc
rclb
sbb
adc
xor
or
lock
jo
or
or
nop
bound
dec
sbb
cmpl
out
pushf
jo
shr
sub
stc
sbb
adc
out
out
nop
movsl
jbe
pusha
fcoml
call
fidivl
xor
das
push
rcrb
dec
adc
fdivrs
adc
inc
pusha
divl
mov
jl
fisttps
pop
stc
mov
cmp
add
lahf
bound
jne
xchg
roll
or
xor
xchg
bound
mov
fsubrs
fdivp
loop
cmp
cmpsl
sub
cld
loopne
cmp
imulb
jno
push
enter
fwait
sarl
insl
in
inc
inc
loopne
scas
test
jp
cmp
mov
push
or
test
mov
shll
cmpsl
xchg
cmc
ja
ss
out
bound
faddl
aas
xor
mov
fdivs
aam
clc
ja
jmp
nop
mov
xchg
mov
dec
push
mov
sahf
inc
out
into
dec
jle
mov
ds
mov
jecxz
outsb
fisubrs
testb
sub
add
inc
push
js
stc
iret
ret
jne
jae
cmp
fsubrl
pop
cmp
jne
jns
add
mov
fdivrp
adc
xchg
addr16
cmpsl
or
stos
pop
movsl
jo
add
xchg
cmc
push
push
insb
add
rorl
in
pop
pushf
sbb
into
cmp
pop
dec
icebp
sub
jmp
mov
mov
mov
mov
out
mov
sub
xor
sti
loope
adc
in
adc
popl
jb
popa
jg
test
lret
in
pop
out
mov
or
xchg
or
inc
jnp
adc
adc
push
push
add
stos
lods
sbb
dec
mov
mov
jge
mov
pusha
or
pop
in
stos
lods
ds
add
sub
fisttps
jne
daa
shrl
lret
lock
or
jbe
pop
push
insl
jecxz
loop
test
mov
mov
xchg
aaa
cld
out
sbb
fadds
jmp
sti
jno
sub
hlt
bound
push
mov
and
sub
sub
pop
pop
adc
js
cwtl
in
cltd
ret
repnz
outsb
sub
es
pop
inc
outsl
lock
lea
scas
jno
push
push
xchg
subl
pop
outsl
sub
aam
xchg
xor
xor
cli
cmp
adc
adc
imull
jae
jb
rcr
aam
arpl
cmp
mov
les
mov
adc
jbe
pusha
insl
movsb
adc
es
mov
cli
jge
xchg
ret
imul
jp
add
imul
daa
lret
inc
adc
push
aad
ja
dec
push
push
mov
sub
repz
cmp
or
sti
jbe
jo
mov
out
adc
ss
add
movsl
push
sub
mov
popf
push
jno
mov
insl
mov
push
lock
je
ret
rcll
mov
cli
lcall
pop
jg
cmp
xchg
in
lret
data16
xor
cmp
rcrb
faddl
sarl
cmpsl
mov
aam
xchg
pop
fwait
cltd
or
loope
cmp
sbb
mov
jecxz
cwtl
inc
or
data16
and
jns
pop
inc
adc
mov
add
fwait
dec
pop
test
xlat
push
xchg
and
rorb
jb
das
insl
test
fimuls
inc
pop
adc
daa
or
sub
mov
xchg
int
out
or
mov
fildl
jbe
inc
xor
mov
outsl
push
sub
je
mov
enter
in
in
decb
aad
test
fimuls
fstl
pusha
jecxz
bound
push
stos
add
sti
add
add
or
sub
mov
or
loopne
out
lds
lahf
xchg
lods
mov
nop
push
dec
mov
ja
mov
mov
dec
pop
pop
xor
ds
lods
cmpsl
adc
adc
cmpsb
out
cli
test
jmp
fidivrl
daa
or
sbb
insl
jecxz
push
lret
push
test
mov
leave
inc
pop
push
mov
push
inc
imulb
stos
xchg
or
and
mov
sub
cmp
and
out
push
adc
ret
cli
or
scas
add
rcrb
pop
call
dec
cmp
loope
mov
call
addl
pop
lcall
scas
cmp
sub
adc
and
pop
or
psubusb
xchg
jne
leave
sbb
add
dec
test
dec
push
scas
mov
xchg
das
add
pop
mov
cmp
mov
lcall
inc
nop
rclb
push
leave
stc
sub
lret
lar
sbb
int
scas
shlb
add
js
clc
sub
sub
add
push
adc
dec
test
loopne
and
hlt
mov
fsubrs
roll
je
push
cli
insl
jb
pop
xchg
xchg
sub
cmc
mov
or
mov
sub
out
or
xchg
sbb
xorb
add
imul
add
into
imulb
inc
in
sti
enter
adc
lock
stos
sub
pop
filds
cs
xchg
mov
xor
lods
or
ja
frstor
mov
mov
out
int3
in
int3
mov
xlat
xchg
inc
jmp
push
les
sub
jge
or
test
cmpsb
ret
sub
leave
cmc
dec
insb
in
push
into
add
test
sub
adc
in
mov
mov
rorl
xchg
and
adc
aas
jb
and
pop
xor
ja
pop
in
xlat
lock
push
dec
jp
pushf
rclb
int
movb
and
pop
lret
inc
jl
adc
mov
adc
mov
pop
ret
push
mov
sbb
dec
mov
cmp
push
movaps
jnp
push
mov
push
lds
sub
and
push
cwtl
pop
outsb
mov
bound
cmc
call
cs
pop
dec
jecxz
nop
rcl
leave
ret
fisttpl
mov
loopne
ret
into
loop
movsb
int
mov
fisubrs
outsl
xor
aaa
mov
stc
pop
adc
cmpsb
test
dec
push
fdivs
pop
arpl
gs
mov
sbb
mov
and
add
or
mov
dec
jl
inc
ds
inc
adc
insb
pop
in
jl
push
add
stc
rolb
xchg
sbbb
test
push
mov
in
ffreep
pop
jbe
xchg
pop
mov
xor
jne
mov
ror
xchg
mov
fs
insl
shr
ret
add
add
or
mov
test
xchg
jmp
add
sub
das
inc
stc
sub
in
rcrb
and
cmpsb
cmp
lds
ret
mov
ret
sbb
clc
fldl
lea
bound
je
dec
cs
dec
push
jecxz
inc
loop
inc
imul
add
pop
test
dec
lret
ds
xchg
mov
push
test
and
out
cmpsb
dec
cld
sbb
popa
or
and
adc
mov
sub
jno
scas
scas
mov
jne
push
cltd
mov
adc
jmp
mov
jnp
mov
stc
inc
jae
es
xchg
jne
pop
popa
fstps
das
adc
insl
add
mov
cmp
fwait
mov
xchg
or
sub
lods
pop
mov
cmp
mov
jno
mov
jl
setbe
xlat
iret
stos
popa
clc
cmpsb
push
mov
cmc
jbe
outsl
cli
cmove
push
fiadds
imul
fiaddl
enter
add
andb
pop
cmp
dec
into
dec
mov
int
dec
call
xchg
movsb
mov
mov
shl
and
mov
idivb
add
lea
sub
outsb
inc
bound
es
sbb
lcall
mov
add
ret
cs
cli
int
mov
rcll
in
push
sbb
test
inc
sbb
push
in
xchg
jge
cmp
and
jg
inc
jecxz
aaa
jae
fiaddl
pop
shr
lahf
int3
loopne
mov
data16
incl
lods
test
lret
ss
gs
addr16
jp
jmp
xor
mov
enter
and
jae
ret
jmp
push
insb
inc
ror
mov
push
insb
cli
push
icebp
sbb
or
dec
out
sbb
dec
mov
aad
xchg
cmp
xor
bnd
orl
add
mov
and
mov
jo
xor
sahf
mov
sti
sub
or
or
sbb
orb
xor
sbb
sti
ss
add
xor
vmwrite
or
fmul
scas
lods
enter
movsb
push
jno
mov
ss
shrl
mov
sti
xchg
and
fmull
xor
dec
lods
dec
cmpl
xchg
mov
stc
cmp
adc
mov
mov
adc
jae
inc
sub
sub
loope
dec
xor
or
push
add
idivb
cli
sahf
xlat
mov
ret
cmp
mov
add
popf
popf
ret
cmc
dec
jnp
sarb
mov
inc
dec
pop
aas
push
imul
scas
aaa
xor
jb
mov
data16
ja
pop
outsl
cmp
xchg
adc
andl
rcll
movsb
jp
push
jl
cltd
ret
outsb
lcall
addl
adc
jne
adc
push
jge
and
jl
aad
cmp
popf
sbb
xchg
lock
enter
sub
mov
xchg
jno
rorl
out
pop
scas
cmp
imul
inc
testb
sub
leave
movsl
push
imul
sti
mov
insl
in
les
pop
je
xchg
lods
mov
cmp
in
add
js
invd
sbb
cli
mov
mov
ja
jl
dec
jae
xor
xor
jns
lock
jb
movsl
lahf
dec
jnp
std
inc
aad
mov
addr16
jp
mov
inc
lods
jle
inc
jmp
lahf
xchg
pusha
stos
push
inc
lock
xchg
sbb
jbe
mov
repz
addr16
popf
fidivl
pop
xchg
cmp
inc
jns
sub
ja
mov
jno
add
popf
jl
test
ds
push
cmpsl
clc
inc
insl
add
add
dec
or
cmp
daa
aad
mov
stos
fidivrl
jge
shll
scas
fisubl
test
fidivl
or
aam
dec
sbb
xchg
or
mov
hlt
ret
dec
and
jno
lods
in
into
ficompl
push
ss
call
xchg
cmp
cmp
xchg
mov
lahf
push
dec
js
pop
nop
stos
adc
outsl
inc
or
testb
and
rol
sub
stc
psrad
push
movsl
repz
jmp
lods
icebp
add
lock
rolb
and
or
push
cmp
or
or
aad
dec
xor
bound
divb
sub
stc
dec
pop
nop
and
adcb
into
insb
cmp
xchg
mov
mov
push
jg
mov
inc
inc
inc
fstp
xor
jae
pop
xor
sbbl
jle
decb
mov
xor
fdivs
mov
xchg
std
sbb
mov
xchg
cwtl
iret
mov
scas
pop
inc
cmpsl
loopne
sarb
scas
in
xchg
sub
gs
dec
xor
sub
sbbb
inc
in
xor
es
push
cwtl
dec
rclb
imul
jno
sbb
shrb
and
or
dec
inc
shlb
out
jmp
fisttpll
xlat
lretw
pop
je
and
pop
mov
ja
jns
ret
pop
xor
or
and
adc
xor
rcr
xor
hlt
jb
mov
push
int3
push
pop
lret
jno
aas
jmp
mov
push
lea
cmp
jae
mov
cmp
cwtl
repz
cwtl
jae
mov
dec
lret
push
mov
sub
or
push
roll
lcall
pushf
and
push
jb
mov
in
fmull
cmc
sbb
jmp
ret
add
fucomp
fistps
sbb
das
fists
ret
sbb
mov
push
insb
xor
out
movsl
cmc
mov
push
pop
cmpsl
fcompl
loop
pop
xor
push
rorl
or
aas
fs
sbb
out
ret
cwtl
mov
stos
std
add
sbb
jbe
cld
add
and
inc
in
lea
idivl
jg
outsb
dec
lock
lret
mov
icebp
adc
cmp
jne
pop
push
adc
enter
mov
mov
pop
mov
and
rclb
or
cmp
dec
ret
xchg
faddl
pop
xlat
cltd
jns
daa
xchg
ds
mov
in
leave
test
frstor
inc
and
int3
mov
fmulp
mov
add
movsb
cmpsl
mov
shll
mov
or
int
iret
jnp
push
shl
cmc
jno
js
dec
adc
cmpsb
mov
push
mov
out
loop
xchg
jmp
lcall
inc
pop
sbb
pop
jne
jns
das
aam
cmpsl
ret
push
dec
ds
into
xlat
movsb
pop
adc
pop
shl
cmp
movsl
mov
lret
add
xor
movsl
into
mov
sub
bound
jae
nop
inc
out
fdivl
push
xor
scas
jo
fwait
addr16
aaa
inc
xor
loop
fimuls
sti
pop
stc
or
repnz
fimuls
into
scas
sti
call
cld
pop
and
popa
mov
inc
nop
jle
pop
and
inc
sbb
and
rolb
or
roll
pushf
dec
pop
push
sahf
in
in
and
xchg
clc
xchg
xchg
out
cmp
jge
xchg
and
or
ret
sbb
dec
bound
inc
xor
aas
adc
out
fnstcw
and
push
push
adc
xchg
fistps
pop
shll
mov
dec
int3
push
sub
out
leave
mov
out
shlb
js
in
dec
mov
loopne
or
pop
dec
in
pusha
ja
push
xor
sbb
aad
pop
dec
dec
outsb
test
pop
cmpb
test
outsb
mov
mov
mov
xorb
fistl
bound
jg
aaa
mov
je
cmp
loop
cmp
shrb
cli
pop
mov
jle
pop
jg
push
add
popa
fistpl
aad
scas
shl
jl
mov
cs
sub
popa
mov
adc
int3
sbb
push
int3
push
mov
inc
xchg
insl
js
mov
dec
xor
sbb
xchg
sub
lock
iret
cmp
xlat
addr16
icebp
out
pop
jno
mov
adc
sbb
lret
inc
jae
push
js
cmp
adcl
push
lds
inc
inc
adc
fmull
add
dec
add
mov
test
push
or
inc
and
add
callw
cli
aam
test
dec
ljmp
xor
popa
dec
add
mov
and
iret
push
loopne
dec
imul
mov
fisttpll
rorl
mov
pop
jnp
sub
jo
out
push
cli
aas
mov
push
xchg
mov
fistl
loop
daa
pop
int
or
jmp
hlt
fildl
mov
das
adc
das
iret
mov
sbb
add
cmp
fisubrs
gs
jecxz
rolb
call
fnstsw
shrl
dec
orl
inc
inc
xchg
adc
repnz
xchg
les
inc
jns
shlb
clc
pop
sub
pop
adc
xchg
jb
shlb
aad
jp
test
mov
jmp
rolb
jb
xor
cmp
add
sub
jno
bnd
inc
repnz
lods
je
mov
aaa
rclb
cmp
pop
mov
loopne
push
movsb
inc
repnz
mov
sub
in
mov
push
jb
fwait
icebp
jle
mov
push
cli
popf
pop
mov
xchg
sbb
jae
xor
pop
sbb
xchg
xlat
mov
inc
mov
xlat
mov
dec
inc
test
or
xchg
pushf
xchg
enter
sbb
pusha
jnp
xchg
push
xchg
sbb
sahf
mov
and
loope
dec
adc
inc
jae
sub
cld
mulb
addr16
and
or
pop
mov
in
cmpsb
jno
dec
int3
or
popa
fdivrl
fcomip
sub
adc
lock
imul
out
addr16
and
cltd
xchg
lods
add
adc
movsb
inc
adc
adc
dec
clc
aad
pop
mov
shl
ja
jg
data16
xor
ret
pop
cltd
mov
mov
shl
mov
pop
adc
push
loopne
sbb
scas
cmp
lahf
dec
inc
aam
shlb
jb
add
out
sti
out
enter
sbb
or
inc
into
aaa
pop
repnz
xor
mov
jp
stc
test
mov
cmpsb
cwtl
loope
and
cmp
xor
hlt
inc
cli
cwtl
ret
aaa
mov
xchg
jecxz
ja
aas
pop
pop
cmp
dec
xchg
mov
adc
mov
stc
dec
mov
insb
negb
push
xchg
inc
cmp
add
adc
out
mov
sub
scas
fwait
fsin
push
repz
test
push
fsubrs
jno
xchg
fs
cmc
and
aam
mov
daa
jno
sbb
xchg
add
pop
or
adc
push
sub
in
fwait
sub
pop
mov
cmpsb
cwtl
cli
pop
push
sub
xchg
jb
cmp
leave
xchg
scas
mov
fldl
jl
in
cmp
repnz
rolb
cmp
push
add
sub
push
dec
sbb
dec
push
jnp
mov
inc
add
ficoms
sbb
cmp
ljmp
sbb
mov
call
cmc
mov
cmpsl
pop
icebp
pop
mov
loop
ret
mov
loope
pop
ret
mov
sbb
clc
xor
jnp
out
sub
rcrb
adc
repnz
rolb
mov
fldcw
cmp
jno
pushf
pop
leave
mov
jge
sub
mov
rolb
movsb
sbb
add
jge
and
iret
ds
sahf
andb
shll
mov
jae
jns
xor
insb
aaa
push
iret
imulb
adc
xor
bound
xchg
das
cs
xchg
inc
out
fiadds
insb
xchg
repz
mov
loopne
fidivrs
jns
mov
xchg
and
xlat
pop
popa
pushf
loopne
shl
pushf
mov
les
nop
sub
repnz
test
inc
xchg
subb
inc
mov
xchg
cli
jge
scas
mov
iret
inc
loop
lea
and
aam
push
repz
pop
or
mov
test
pop
dec
push
sub
sub
je
push
imulb
xchg
test
push
add
push
enter
leave
push
mov
or
jo
adc
test
popf
imul
cmp
in
arpl
xor
mov
dec
scas
mov
scas
add
push
stc
lock
stos
bound
js
cmp
enter
sbb
insb
rol
sarl
jecxz
mov
rcrb
iret
and
inc
data16
cmp
mov
xchg
xor
jns
inc
icebp
add
adc
sub
push
push
out
insb
add
cli
icebp
sub
cmp
cli
stc
test
flds
inc
test
pop
movsb
js
sbb
and
movsl
add
aad
in
int
dec
cmp
xchg
lea
push
shlb
jbe
dec
aam
or
push
cmpsl
out
or
addb
xchg
jae
mov
or
in
sub
gs
fstps
fiadds
fstpt
mov
cmc
pop
ret
mov
std
cmpsl
aaa
in
pop
ja
push
mov
shll
in
add
adc
mov
ret
sub
jno
mov
sbb
pop
call
loope
aam
divl
test
test
dec
shrl
daa
inc
inc
insb
push
test
pop
mov
jge
push
xchg
clc
sbb
andl
sub
pop
shrl
sahf
mov
mov
enter
mov
jbe
push
pop
dec
jp
pusha
jbe
sbb
ss
loopne
loope
dec
add
cmpsl
sbb
stos
clc
iret
popf
fstps
loop
fs
xchg
jmp
dec
out
and
add
ret
test
adc
pop
xor
data16
leave
jle
or
mov
mov
lds
sti
xlat
mov
leave
mov
popf
mov
test
shll
lret
dec
les
fildll
aas
lods
cmp
sbb
and
jne
or
mov
mov
roll
and
insl
mov
sub
inc
dec
dec
add
mov
xchg
jbe
cmpsl
jae
hlt
call
out
pop
cltd
cs
dec
lods
jns
stos
xor
clc
add
xor
imul
adc
lret
pop
inc
inc
and
mov
mov
in
and
inc
imul
dec
jae
and
out
mov
xchg
jp
inc
mov
lock
jmp
xchg
lea
enter
sbb
xor
xchg
xchg
mov
popa
shl
mov
dec
dec
int3
jg
pusha
inc
hlt
mov
pop
adc
stos
sahf
pop
in
push
lahf
jecxz
xor
push
mov
pop
or
mov
sarb
stc
adc
add
sbb
and
push
test
adc
add
dec
pop
sbb
jecxz
shll
mov
cmp
cmp
into
or
pop
cmp
ror
imul
sbb
into
sbb
cmp
push
out
jno
fwait
insb
pushf
sub
js
or
movsl
aam
es
push
cld
test
xchg
push
jge
pop
or
cmp
pop
xchg
mov
mov
xchg
jnp
xor
test
mov
shr
or
stos
adc
cwtl
mov
aad
mov
push
test
jbe
out
xchg
inc
push
test
loope
cmp
addl
mov
sqrtps
out
xchg
dec
xchg
xchg
sbb
jne
or
or
outsl
sub
nop
int
cmc
push
mov
push
mov
nop
cltd
dec
sub
insb
fdecstp
test
scas
xchg
push
dec
mov
inc
mov
or
int
push
andb
ret
xchg
push
pop
sub
push
push
cmp
mov
scas
mov
mov
sub
push
cmp
leave
in
mov
fwait
into
fwait
and
xor
shl
icebp
and
push
ret
push
js
or
sub
pushf
cmovnp
cmp
add
jns
ljmp
xchg
stos
decb
mov
mov
xor
lret
negl
out
mov
sub
orl
insb
outsb
sbb
cmpsl
lret
mov
mov
push
dec
or
lcall
pusha
pop
mov
or
inc
xchg
lock
int
cmpsl
cmp
rcrb
pop
xor
dec
xor
sbb
sbbl
xchg
out
sahf
mov
or
je
jbe
jmp
outsb
icebp
mov
das
das
clc
xchg
jae
arpl
cld
jo
sbb
mov
bound
cltd
aaa
xor
dec
xorl
pop
mov
dec
cld
bound
mov
js
iret
jle
jge
mov
push
ss
dec
gs
rcll
adc
ds
rcrb
aad
repnz
in
or
cld
pop
push
inc
push
or
das
flds
fildl
cmp
mov
in
mov
ss
jae
test
jp
in
out
hlt
sub
fbld
jge
cwtl
mov
out
cmpsb
jbe
dec
cmp
pop
aam
adc
js
cs
push
gs
push
cmp
ss
sbb
pop
sahf
lock
in
add
xchg
inc
dec
lds
cli
inc
inc
add
in
stc
dec
ficomps
roll
push
fists
call
sub
xchg
cmc
mov
fiaddl
push
dec
fdivrl
dec
xor
cld
sub
mov
mov
into
xlat
pop
sti
lahf
add
dec
stc
popl
lods
mov
shll
adc
bound
mov
and
inc
icebp
repz
inc
jge
lret
movsb
xchg
iret
scas
pop
popa
movsb
push
mov
pop
dec
mov
test
xchg
int3
aas
sub
rorb
mov
aas
mov
out
jl
pop
sub
test
fimull
lahf
aas
push
xchg
cmp
nop
rcr
mov
icebp
and
ss
inc
xor
cltd
test
insl
movsb
adc
inc
mov
lcall
fcompl
sub
outsl
outsb
mov
push
std
jmp
ljmp
popa
loopne
lahf
bound
jns
fsubr
lods
cmc
fs
cmc
cmp
sub
fwait
add
pusha
scas
xor
jae
push
cli
mov
out
sbb
nop
push
mov
cmp
xor
dec
xchg
arpl
in
cli
sbb
xor
inc
adc
add
jl
out
pop
pushf
xor
jb
mov
xor
jmp
sbb
stos
fcmove
in
std
shl
push
int3
adc
jnp
sarb
xchg
ljmp
mov
idivl
ret
outsb
sbb
or
lea
in
test
push
out
mov
pop
inc
mov
jno
mull
mov
aaa
fcoml
pop
pop
sbb
add
xor
mov
mov
adc
iret
inc
push
ja
movsl
sbb
loopne
test
cltd
inc
cli
add
mov
movsb
adcb
xlat
mov
sub
ret
inc
jle
loope
xor
adc
cli
mov
js
bnd
and
adc
jg
jmp
pop
cmpb
mov
inc
inc
mov
rcll
dec
test
mov
in
jo
mov
shlb
adc
rcrb
loope
mov
push
into
pusha
adc
cs
into
cmc
lods
out
lret
les
outsl
xor
iret
cli
test
mov
xchg
je
lods
call
push
sbb
xchg
sub
in
outsl
in
iret
in
jp
or
negl
aad
xchg
movsb
xchg
pushf
repz
sub
jg
jp
mov
rep
in
mov
arpl
out
adc
xchg
xor
inc
shlb
xchg
hlt
mov
push
and
leave
jl
sbb
dec
adc
test
sbb
add
mov
inc
outsl
jb
icebp
xorl
xor
mov
repz
icebp
dec
clc
and
xor
aam
fists
or
xor
push
int
adc
scas
xorl
jno
push
cltd
cmp
xlat
adc
rol
pushf
adc
test
xchg
pushf
mov
jae
loope
aas
pop
mov
mov
std
push
push
icebp
inc
fisubrl
movsb
inc
push
and
push
xchg
cwtl
xchg
pop
iret
cmp
nop
nop
dec
gs
jecxz
sub
cmp
xor
cmp
cwtl
mov
jle
cmp
add
sub
ret
mov
inc
cli
test
mov
scas
pop
or
mov
out
leave
or
popa
cltd
dec
push
int
mov
push
ja
mov
xorb
loopne
mov
xchg
test
mov
jnp
sub
add
test
lds
mov
mov
dec
mov
jne
sbb
push
lods
inc
cmpsl
in
cmp
rolb
data16
out
repz
cmp
pop
jge
jae
addr16
out
cmp
mov
out
mov
outsb
sub
hlt
subl
fisubrl
cmp
or
fmul
scas
xor
repnz
lock
adc
mov
xor
inc
mov
xchg
in
mov
ret
push
ja
sti
fstps
mov
int3
fldenv
jecxz
jne
jl
sbb
fistpll
and
test
sti
lret
cmpsb
lret
adc
in
add
jb
pop
dec
push
or
in
push
pop
mov
into
ss
and
gs
jl
mov
mov
inc
and
aam
loope
cmp
jnp
lret
ss
aam
loop
or
aad
cs
add
cli
bound
ret
test
xchg
fwait
mov
orl
ret
and
insl
and
adc
xchg
sahf
aaa
std
fdivrl
xchg
cmp
cwtl
pusha
xchg
dec
in
and
mov
inc
mov
jg
sti
leave
std
lock
ficoml
loop
dec
mov
clc
sub
lcall
bound
inc
and
xchg
into
or
cmpsb
xor
inc
movsl
inc
sbb
adc
imul
icebp
pop
sub
hlt
dec
jo
push
xchg
outsl
std
adc
dec
or
mov
ror
push
incb
adc
pop
mov
pop
add
xor
push
cmpsl
push
inc
decb
xchg
mov
orb
sub
sti
mov
add
push
leave
rcrl
xor
sbb
pop
es
lods
jle
push
insl
xor
pop
cltd
cs
test
fmull
cli
push
test
adc
mov
jnp
scas
movl
add
mov
mov
inc
jae
or
or
arpl
fidivrl
add
push
into
scas
jae
ss
mov
xchg
dec
loope
popa
add
xchg
notl
dec
mov
jne
pop
dec
cmp
mov
jl
mov
xchg
into
je
or
mov
stos
nop
fcmovne
xchg
lds
jle
pushw
es
js
push
test
pop
or
pop
add
in
sti
pop
loopne
and
and
jl
adc
adc
xchg
or
sbb
fs
pop
xor
dec
pushf
xchg
cld
test
mov
pop
mov
inc
dec
or
cs
xchg
cli
jbe
leave
push
push
cmp
cmpsb
mov
or
mov
mov
jae
jg
cmp
loopne
fidivl
in
pusha
out
inc
addl
xchg
pop
scas
or
add
movsb
jg
in
adc
ljmp
int3
push
and
sarb
sbb
inc
inc
fstpl
fsubr
scas
aad
repz
dec
jge
sbb
dec
ficompl
xor
xorl
andl
in
jecxz
jo
aad
jecxz
imull
rcr
xorb
push
xor
and
xchg
lret
in
jp
lcall
adc
sti
add
hlt
pop
fistpl
inc
push
mov
pop
js
add
mov
cld
xchg
mov
fiadds
cmpsb
and
sti
xchg
mov
jecxz
fsub
fisubrl
cmp
push
xor
push
pop
inc
inc
cli
fstpl
sarb
and
cmpsl
jbe
stos
pop
xchg
scas
and
pop
jo
shll
mov
aaa
negl
iret
aas
cmp
js
xor
fsubrl
imul
pop
adc
mov
add
mov
pop
stc
push
cltd
xor
nop
sbb
push
xchg
sbb
aas
hlt
in
dec
sbb
and
fisubrs
push
cmp
pcmpeqw
and
mov
xchg
mov
push
xor
jge
xchg
stc
sbb
mov
andb
xor
aam
repz
push
and
sub
stos
je
iret
sarl
rcrl
xlat
lcall
mov
testb
xor
popa
cs
pop
mov
pop
jnp
cltd
pop
daa
fcoms
mov
in
sbb
or
ja
mov
mov
in
pushw
aaa
test
outsb
hlt
subl
cld
aaa
or
cltd
or
xchg
push
jns
cmp
cmpb
dec
into
jp
sbb
push
jge
repnz
shll
jno
iret
bound
mov
cmp
int
sarb
dec
xchg
cwtl
or
dec
cwtl
mov
daa
std
ds
xor
popf
fadds
ret
imul
push
hlt
testb
loope
pop
inc
mov
push
jno
andl
test
popf
call
stos
dec
bt
xor
cltd
add
cmp
mov
scas
push
inc
pushf
negb
lock
test
push
and
sub
push
sbb
push
fwait
rcrl
inc
inc
mov
mov
or
push
ret
std
add
in
mov
sahf
fldenv
and
pusha
adc
mov
mov
fsubl
bound
add
shrl
stos
push
jns
scas
inc
push
loope
aam
lahf
or
int3
mov
inc
adc
nop
mulb
nop
pop
pop
movsb
dec
xlat
and
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
and
mov
imul
adc
mov
and
fistl
pusha
push
jne
test
mov
jns
jbe
mov
lods
in
adc
mov
mov
lds
nopl
stc
loope
mov
cmp
leave
and
movsb
rcrb
aam
jae
pop
inc
pop
dec
mov
lds
ja
mov
xchg
push
cmp
jecxz
mov
fcoml
scas
sbbb
data16
push
rorl
ret
push
ret
sub
lods
sub
inc
testl
add
mov
ret
sub
test
daa
add
jo
aad
mov
aad
out
mov
add
cmp
push
inc
and
mov
push
aaa
mov
orb
xor
push
icebp
in
xchg
nop
int3
jge
fwait
sarl
fldenv
fisubrl
loope
push
jl
mov
mov
sub
scas
enter
push
fdivl
dec
push
dec
je
pushl
pop
sub
jg
sar
insb
mov
ljmp
aam
mov
mov
pop
hlt
ljmp
pop
add
les
testl
xor
pop
mov
xchg
sub
mov
je
test
jp
stc
dec
jle
mov
leave
jb
dec
push
imul
cmp
pop
fs
sti
insb
movsb
stc
rcrb
xchg
test
orb
repz
cli
pop
iret
jg
and
cmp
fists
and
in
ss
pop
mov
pop
rclb
mov
fcomp
mov
jp
mov
repnz
sbb
xor
jp
mov
in
push
int
ret
mov
andb
jge
into
aam
adc
xchg
sbb
jecxz
mov
sbb
push
movl
or
sbb
outsb
pop
test
std
shll
fdivr
add
aas
in
adc
sbb
repnz
pop
adc
add
es
mov
inc
push
pop
mov
or
arpl
adc
in
push
aas
int
stos
cmpl
test
test
notl
jg
xor
mov
lea
add
adc
daa
dec
rclb
add
mov
fwait
xorl
popf
mov
in
adc
rcr
rorb
jae
enter
mov
je
pop
sub
mov
mov
inc
xor
cmp
in
jle
stos
in
cmp
xchg
pop
mov
inc
dec
int
and
mov
mov
jmp
dec
das
jae
jmp
fdivp
loopne
dec
arpl
add
mov
cld
gs
fwait
jmp
jo
ljmp
stos
pop
lahf
mov
popf
dec
std
ja
daa
imul
arpl
add
jmp
dec
mov
faddl
pop
push
cli
loopne
mov
fwait
sti
cmpsl
fstpl
push
cli
mov
mov
mov
dec
inc
push
mov
push
cmp
data16
sbb
lods
outsl
fildll
mov
mov
dec
xchg
loopne
fisttpll
in
fisttps
or
fs
jo
fistps
mov
xchg
and
dec
ljmp
repz
inc
shlb
jmp
cmp
in
loope
ret
imul
ja
mov
aaa
cmpsl
pusha
and
jg
stos
xchg
in
das
dec
xchg
adc
popf
mov
adc
cwtl
inc
xor
sbb
jg
jno
pop
push
mov
pop
addr16
setnp
ret
jle
mov
mov
xchg
jns
sub
jnp
js
lea
mov
push
sub
aaa
insl
or
mov
jnp
sub
pusha
outsb
jb
xchg
std
push
adc
push
mov
sbb
jmp
cmp
lea
cmp
aad
outsl
fidivrs
push
pop
pop
or
nop
outsb
inc
adc
mov
sahf
xor
insl
stos
call
inc
mov
inc
js
xlat
xor
cmp
xchg
pop
mov
inc
or
fistl
arpl
subl
sbb
lods
pop
xor
lret
or
jmp
fidivrl
mov
cmp
and
sbb
mov
dec
push
js
xchg
jge
xlat
dec
rorb
mov
imul
fldl
mov
pop
or
adcb
in
push
sar
ss
cwtl
or
cmp
mov
test
movsl
xor
aas
rclb
cltd
sub
inc
xchg
movsb
pop
ss
mov
lahf
idivb
outsb
sarl
adc
sub
sbb
lcall
mov
and
cmp
cmc
cmp
jge
popf
cmp
outsb
bound
lock
cltd
divb
movsb
mov
into
lods
xlat
mov
push
popl
stos
mov
sbb
and
btr
scas
loope
aaa
jmp
mov
xor
rcr
or
push
push
or
or
rcll
inc
push
xor
or
push
xor
xchg
jnp
and
insb
icebp
mov
dec
push
fdivrl
mov
ljmp
adc
jns
in
outsb
mov
sbb
mov
mov
add
dec
popf
mov
hlt
mov
ja
cs
shlb
jo
shr
jnp
lcall
int
mov
sub
out
pusha
or
xorb
jne
inc
inc
hlt
mov
movsl
jmp
or
rcr
repnz
cld
clc
add
xor
movsl
jne
mov
jle
push
push
in
std
pop
shrb
decl
dec
add
mov
add
rolb
push
lret
jmp
mov
jge
mov
out
or
popf
cwtl
lods
test
insl
pop
inc
push
xchg
scas
out
popf
mov
sahf
or
jge
xor
add
adc
cld
mov
cmp
dec
bound
cmp
daa
xor
inc
push
inc
and
mov
in
and
sbb
lret
xchg
push
je
pop
jmp
scas
jg
fimuls
ljmp
sbb
sbb
mov
dec
lds
inc
jb
in
enter
popa
xor
subl
add
test
xchg
jbe
mov
xchg
sbb
xchg
mov
or
rclb
mov
pusha
int3
cld
adcb
test
xchg
mov
cmp
idiv
jae
cmp
dec
lods
mov
xor
xchg
in
push
inc
dec
cmp
mov
out
sti
lcall
cmp
pop
cwtl
shlb
fwait
lret
or
push
jbe
jle
inc
fisttpl
in
and
movd
cmc
push
cmp
movsb
int3
cld
add
mov
pop
xor
push
mov
or
outsb
sbb
sub
xchg
movsl
outsb
imul
adc
sub
push
sarl
xchg
mov
push
mov
mov
sub
push
jne
sbb
les
cmp
push
and
insl
ss
pop
add
adc
insb
and
lahf
jg
mov
leave
stc
jno
pop
mov
xchg
lock
leave
dec
pop
add
std
sub
fcoms
bound
pop
inc
out
add
stos
cmpsl
inc
in
or
test
xchg
lret
stos
cmp
or
mov
push
sub
fcmovnb
jecxz
xchg
mov
jge
add
push
mov
sbbb
mov
je
mov
cld
jl
fildl
cmp
xor
imul
or
mov
xchg
xchg
mov
add
fcmovb
sbb
xor
stos
inc
loopne
jo
insl
out
add
push
and
cmp
cmp
mov
pop
and
mov
enter
jl
mov
inc
iret
cwtl
mov
sahf
orl
mov
fwait
mov
arpl
and
fdivrs
xchg
imul
mov
lods
mov
xor
lock
sbb
aaa
daa
jl
and
in
pop
jecxz
shlb
pop
sbb
mov
cmp
std
test
mov
cmpsl
mov
test
mov
lret
mov
outsl
dec
mov
pop
rcrb
sti
jae
loop
test
push
dec
mov
aam
jb
and
add
xlat
jmp
push
or
es
xchg
incb
aaa
and
inc
movb
jae
out
ret
imul
test
xorb
cltd
push
mov
outsl
adc
subl
adc
sbb
negl
les
pop
add
pop
add
sbb
mov
adc
rcrb
int
and
call
or
outsb
mov
sub
cwtl
jo,pn
cmc
adc
pushw
sbb
xchg
inc
mov
jnp
pop
or
and
mov
shl
mov
dec
cmc
les
jno
enter
jl
or
inc
out
lock
push
jmp
jb
es
fnstcw
cld
ss
mov
push
out
outsb
mov
xchg
mov
and
jns
inc
cmc
sub
stos
test
xchg
pop
and
mov
aaa
sar
push
mov
in
add
btcl
sti
push
or
adc
jns
push
xchg
pop
push
lret
jbe
pop
in
push
xchg
or
sub
mov
out
pop
push
fiaddl
pop
bound
push
loope
cltd
mov
mov
inc
pusha
decl
cmpsl
mov
fistl
push
jne
push
dec
aam
cli
pop
and
dec
push
pop
jno
idivl
jne
add
adcb
in
fadds
lock
test
int3
cltd
push
fimull
dec
divl
mov
xlat
hlt
jne
sti
imulb
cmp
sub
popf
xchg
movsb
sbb
lcall
lock
cli
ss
pop
inc
movsb
xchg
cli
subb
or
add
inc
push
xchg
and
add
out
pushf
cmpsb
scas
inc
xchg
enter
lcall
mov
cmp
mov
les
jne
ja
xchg
and
ret
dec
mov
mov
iret
xor
mov
stos
jae
sub
fsubrs
cmpsl
mov
sub
xchg
mov
pop
jae
fwait
lahf
and
stc
icebp
sahf
mov
test
pop
addl
fistpl
incb
fwait
int3
enter
hlt
fldt
aas
adc
dec
or
mov
or
xor
repnz
and
out
mov
mov
out
int
insb
mov
adc
xorb
js
inc
mov
xor
jo
rcrb
fs
inc
jl
push
fucomi
jp
leave
push
push
mov
repz
or
pop
and
xor
fwait
test
test
lea
test
add
inc
sti
mov
sub
and
push
cmc
idivl
aas
jo
sahf
movsl
ds
jmp
sbb
out
js
shl
pop
scas
cmp
outsl
cmpsb
pop
enter
out
xor
sqrtps
xchg
sub
enter
aaa
adc
mull
enter
push
jmp
fiaddl
fsubl
rcll
sbb
aaa
outsl
out
mov
sarb
mov
fld
ror
or
mov
sub
lret
out
push
pop
movsl
imul
jl
sbb
cltd
push
xor
lods
test
jne
fcomi
cmp
subb
pop
add
add
sbb
test
bound
adc
hlt
shll
or
dec
call
repz
popa
mov
insb
xchg
inc
ja
jmp
sbb
lret
pop
lahf
mov
stos
xor
push
cmp
ret
jo
xchg
pop
out
addr16
loopne
mov
test
or
dec
stos
or
cmpsb
fidivrl
inc
sub
fiaddl
cwtl
add
in
orb
fisttpl
fdivrs
fldt
push
lock
imul
incl
xor
mov
adc
lcall
mov
fstpl
inc
fwait
shll
adcb
jge
aad
cmc
into
mov
sub
add
mov
pop
push
into
xor
aad
test
pop
outsl
clc
xor
xlat
pop
or
js
cmp
cld
cwtl
repnz
push
pop
jno
mov
and
repnz
push
orb
or
jg
sbb
add
hlt
dec
dec
mov
sub
out
xor
pushf
bound
or
dec
in
pop
adc
pop
addr16
dec
scas
xor
mov
pop
dec
pop
xor
mov
loop
ds
mov
and
sub
jae
in
sub
fistps
movsl
ret
test
and
fwait
adc
lret
add
fldl
push
sub
sub
mov
iret
and
or
jo
pop
lcall
sbb
ficoml
dec
sub
jb
cmp
push
and
insb
and
xor
xchg
rorl
pop
fbstp
and
aaa
fistl
movl
push
cld
shrl
jae
pop
xchg
rclb
cmp
cmpsl
das
cmp
in
inc
fwait
lds
xor
mov
dec
add
push
jns
xchg
imul
popf
cli
pop
sub
jle
pop
fisubs
inc
mov
sbb
cmp
and
cmpxchg
sbb
icebp
xchg
jge
push
in
lods
int
mov
lret
jle
xor
std
or
ret
popf
mov
cmc
mov
imul
lea
push
scas
push
test
in
push
xor
addr16
cmp
das
mov
pop
sub
lcall
lock
xlat
dec
sbb
jns
out
xor
ss
jno
dec
xchg
jge
sub
cld
arpl
fcoml
push
adc
jae
pop
lea
les
jmp
dec
and
mov
inc
adc
iret
pop
mov
mov
push
fistl
gs
add
cmp
push
ljmp
mov
shr
das
ja
sahf
and
mov
and
and
xor
in
clc
cmp
fiadds
popa
mov
hlt
movsb
xlat
test
and
sbb
jle
add
sarb
sub
jae
fdivrs
cmpsl
sbb
dec
jmp
or
and
mov
push
loop
xchg
rcrl
inc
leave
cmp
xor
xor
mov
sub
outsb
jae
ret
sbb
out
or
inc
je
adc
in
in
imul
popf
mov
fsubs
mov
pop
loope
fiadds
xchg
xchg
or
adc
std
outsb
sti
push
std
dec
push
push
outsl
adc
dec
mov
inc
fwait
sub
fwait
out
orl
pop
jb
test
imul
in
push
incl
xor
fidivrl
shlb
push
jns
mov
js
and
call
popa
ret
dec
jne
sbb
test
sub
jb
adcl
mov
xchg
ficoml
mov
cmp
mov
jmp
add
fstl
shrb
imul
xchg
lcall
sahf
mov
jne
mov
incb
loope
adc
ds
lds
aad
cltd
das
lds
xchg
outsl
cmc
cmp
cmp
push
pop
inc
in
aas
and
test
fsts
and
mov
call
lahf
and
sub
test
fnsave
repnz
mov
adcb
scas
stos
mov
repz
push
fwait
pop
aaa
adc
in
jge
dec
push
nop
xor
jae
testl
mov
lea
cld
sub
andl
pop
lods
incl
jmp
sub
scas
imul
sub
jg
pop
aaa
icebp
lahf
sbb
jge
cmp
sub
xchg
adc
pop
push
cli
sbb
sub
pop
aam
cli
sbbl
cmp
es
pusha
fldt
cli
imul
cmc
xor
jecxz
xchg
inc
ss
test
nop
and
fisttps
xlat
dec
adcl
fs
popa
lret
adc
sub
popa
cmpsb
sub
or
push
daa
push
or
fdivs
loopne
cs
xor
fidivs
cmp
aam
mov
lret
mov
shl
inc
daa
mov
int
cmp
inc
add
jno
xor
mov
add
mov
push
xor
aaa
jo
lock
push
addr16
push
out
mov
push
fucomp
fstp
or
jae
cmp
mov
mov
in
notb
mov
or
scas
repz
jp
lret
push
pop
mov
sbb
lret
stos
sbbl
test
jns
es
mov
or
daa
jp
jg
xchg
adc
aaa
adc
jbe
inc
push
jae
enter
push
ss
das
cltd
pop
mov
xchg
std
mov
lock
ret
and
push
sbb
xor
in
mov
jmp
inc
lods
pop
sbb
cld
sub
fmull
lock
mov
or
fwait
inc
leave
imul
sahf
xchg
cwtl
cmp
rorl
popf
movsb
daa
cmp
cmp
mov
clc
pop
mov
and
dec
lcall
push
xchg
gs
jnp
jg
pop
jecxz
lret
cld
mov
test
mov
push
sbb
in
arpl
dec
inc
test
ljmp
xor
jae
cld
movsb
sbb
inc
les
mov
push
xor
mov
mov
iret
outsl
das
and
mov
sti
lret
sbb
out
mov
insb
mov
repz
fisubrs
xor
add
out
inc
push
dec
or
push
add
mov
push
ror
add
or
mov
lahf
out
xlat
jae
into
addl
jmp
aam
push
aad
add
xchg
dec
das
sub
pop
sbb
into
int3
cmp
cwtl
jae
lods
jnp
int3
lock
jp,pn
pop
rcrb
mov
cmpsb
notb
dec
cli
sub
jne
loope
mov
loop
adc
data16
xchg
inc
notl
cltd
mov
stc
jle
repz
xor
mov
or
scas
loop
xor
dec
scas
push
or
ljmp
fadds
rcrl
scas
mov
xor
mov
call
pushf
outsb
imul
daa
cld
dec
push
push
jecxz
inc
aaa
inc
add
dec
outsb
loopne
rcrb
decl
orl
fwait
push
xchg
loope
icebp
mov
scas
dec
cmp
xchg
and
sahf
mov
clc
sbb
adc
dec
adc
outsb
push
in
lahf
hlt
xchg
shlb
ja
mov
xchg
int3
or
mov
das
ss
inc
icebp
out
test
push
shrl
adc
mov
mov
mov
push
aas
sarl
cmpsb
add
or
scas
popa
sub
enter
aaa
pop
mov
test
dec
adc
mulb
js
into
lea
incl
inc
xlat
das
lds
dec
ror
loope
cmp
pushf
jno
je
adc
orb
enter
fcomps
lds
pop
das
les
leave
xchg
xchg
cmp
insb
push
in
inc
enter
jbe
and
xor
mov
mov
ret
ds
inc
jg
mul
data16
xor
cli
jmp
jns
aam
lcall
jnp
push
nop
int
fld
loop
popf
xchg
filds
or
dec
sub
or
inc
cmp
lods
cmovbe
loopne
sti
mov
xor
xor
dec
test
xchg
cmp
adc
arpl
test
cvtdq2ps
mov
push
xchg
push
in
testb
ja
test
jg
ret
imul
nop
lock
pop
dec
xchg
lods
pop
push
rorb
pop
inc
adc
fldenv
push
add
jp
and
cld
adc
inc
ja
cmc
adc
push
or
cs
pop
lea
sti
sub
hlt
dec
in
outsl
jp
les
push
jl
insl
subl
jo
pusha
dec
test
ret
jmp
and
push
push
lea
movsb
ds
cmp
in
rcr
or
pop
shll
xor
jne
test
lods
hlt
add
cmpsl
adc
gs
enter
mov
rorl
jmp
lcall
push
ljmp
pop
lods
inc
addr16
mov
sbb
imulb
jnp
pop
movsl
nop
or
ja
stos
push
cs
or
mov
test
jb
push
loop
lods
dec
jge
xchg
rclb
je
cmp
adc
out
cwtl
or
or
sbb
shl
pop
jne
cmp
insb
adc
dec
sahf
movsb
aaa
mov
shll
dec
aas
je
cmpsb
rcr
scas
dec
loop
sbb
scas
shrb
xchg
std
ljmp
int3
xor
mov
inc
xorl
test
push
aaa
xchg
testb
cmc
jecxz
push
jecxz
jno
cwtl
mov
or
cs
jno
imul
inc
in
mov
mov
mov
mov
cli
bound
mov
add
dec
iret
into
mov
ret
mov
pop
cltd
adc
psubsw
jb
in
jle
insl
fimull
ret
loope
shl
mov
call
mov
sub
xchg
or
loopne
cld
mov
fdivs
arpl
in
inc
scas
decl
mov
or
inc
scas
and
aaa
fwait
push
mov
and
jle
cltd
xchg
xor
push
imul
adc
push
jge
pop
sbb
les
das
cmpsb
lcall
mov
ret
xchg
jo
enter
inc
or
push
dec
aam
adc
imul
push
fwait
jl
sub
rcrl
xor
mov
xor
mov
bound
je
jmp
lcall
fiaddl
push
adc
dec
filds
dec
pop
fidivs
out
mov
cmp
jg
mov
mov
in
push
sti
adc
mov
xchg
mov
jle
or
cltd
std
sub
push
ljmp
xchg
int
ret
incl
xor
dec
ret
lea
mov
stos
pop
sub
sbb
xchg
dec
repz
leave
mov
cld
lahf
fsubr
notb
cmp
mov
pop
push
js
filds
call
sub
pop
push
xchg
jns
iret
mov
pusha
call
notb
mov
enter
out
and
ss
mov
mov
lea
stc
add
imul
xchg
xchg
mov
inc
dec
movsl
js
das
cmpsl
inc
cmp
mov
mov
push
inc
inc
stos
inc
lahf
movsl
sti
ljmp
bound
aad
js
dec
daa
cmpsl
xchg
mov
sbb
mov
testb
xor
setne
ss
out
adc
fsubs
jno
push
int
xlat
jp
adc
jmp
xor
pop
pop
js
mov
lcall
push
xor
jecxz
add
add
and
inc
into
add
cltd
into
mov
lods
inc
jp
and
adc
scas
sbb
lods
into
jmp
and
xorl
bound
imul
and
lret
mov
lods
cmpsb
ret
jne
fnstcw
loopne
dec
insb
xor
fwait
inc
lcall
orl
pop
add
add
jbe
xor
pop
das
adc
int3
fs
rcrl
jp,pt
sarb
ret
aam
stos
push
mov
ss
jb
addr16
push
mov
test
mov
inc
xchg
dec
cmp
scas
lahf
loop
cltd
mov
stc
xor
sbb
pop
mov
lock
xchg
stc
cwtl
mov
mov
pop
sub
or
ljmp
jae
popf
sbb
mov
jne
fistps
ds
mov
iret
gs
cwtl
cwtl
jg
push
dec
rorb
cmc
in
jl
jmp
pop
adcb
dec
shr
fs
loope
or
inc
push
mov
pusha
or
repnz
dec
sub
mov
imul
insl
adc
jge
outsl
mov
aad
sub
or
push
aas
push
mov
bsr
movsl
push
roll
mov
nop
lds
jle
xchg
cmpl
negl
and
scas
mov
aam
cli
xchg
push
or
pop
shlb
push
stos
in
stos
test
push
mov
xor
jmp
fiadds
inc
in
ljmp
cmc
pop
stos
cwtl
cmpsb
pop
xchg
out
test
add
and
arpl
in
xor
and
xor
inc
or
in
out
ljmp
into
outsb
push
dec
mov
adc
mov
flds
dec
stc
mov
and
sub
pop
insl
cmp
pop
mov
mov
pop
sbb
mov
inc
cmpsb
add
rclb
inc
mov
push
sbb
add
call
push
test
sub
and
fbstp
adc
jl
mov
or
rcrl
ja
cmp
mov
add
xlat
xchg
pop
xchg
jnp
add
dec
lret
repnz
xchg
insl
int3
xor
or
sbb
add
jp
add
rcrl
sub
push
mov
push
sahf
jmp
mov
aad
pop
adcb
daa
movsb
pop
mov
imul
add
push
enter
sbb
sub
mov
mov
call
xchg
add
xor
xchg
rclb
mov
fadds
ficomps
push
jns
fisubs
cmpsl
mov
pop
sub
xchg
sbb
lods
mov
std
xor
xor
adc
sub
cmp
dec
mov
ret
lcall
sbb
push
mov
xor
and
into
out
flds
sub
xchg
sub
mov
jle
jnp
dec
pop
or
in
xor
in
jmp
subb
xchg
faddp
sbb
cwtl
jge
outsl
loopne
test
mov
push
ss
loope
in
scas
bswap
idivl
dec
lea
jae
dec
call
in
sarl
mov
or
imul
nop
push
mov
fsubrs
lock
push
sub
mov
and
cmp
mov
popa
mov
mov
add
adc
jo
mov
pop
mov
push
mov
lods
enter
xlat
push
xorb
ljmp
mov
jp
and
xor
dec
push
xchg
in
ja
xor
or
mov
push
mov
mov
outsb
fadds
movsb
mov
hlt
fisttpll
test
aas
dec
mov
or
ret
sbbb
das
repz
mov
mov
shl
test
adc
sahf
mov
or
insb
xor
repnz
add
dec
inc
jbe
test
cmp
js
sahf
outsb
adc
movsl
sahf
or
iret
lahf
scas
mov
adc
inc
dec
pusha
outsl
int3
inc
cmp
inc
pop
dec
dec
inc
or
test
cmpsb
sub
pop
adc
mov
jmp
cmp
cmc
xchg
scas
shll
sub
in
cwtl
mov
push
push
sub
sbb
inc
jmp
lahf
pop
js
mov
sub
cmp
into
dec
xor
loope
sarl
cld
fimuls
or
pop
scas
shlb
cmpsb
xchg
js
jb
stc
dec
pop
hlt
sub
cmpsb
and
hlt
sub
jne
rclb
movsb
loopne
jge
dec
fimull
push
dec
shll
popa
sbb
aaa
mov
scas
gs
sub
xchg
mov
cmc
mov
idiv
test
insb
and
popa
icebp
call
mov
pop
xchg
cmp
ljmp
xchg
sbb
loope
jp
ret
out
adcl
mov
sbb
cmp
xor
rclb
xor
sbb
mov
jecxz
inc
pop
and
ror
sub
inc
in
xor
sarl
mov
iret
cmp
xor
mov
jnp
enter
or
push
dec
xchg
cmp
xchg
mov
sbb
lds
out
xchg
cmp
and
xchg
xor
inc
out
cmp
pop
imul
sub
data16
mov
xor
shll
xorl
pop
scas
sbb
jle
adc
xchg
push
sbb
jae
loopne
pusha
std
idivb
inc
or
cld
or
cmp
mov
dec
nop
xor
in
lock
adc
xor
mov
mov
cmpsb
adc
nop
push
idivl
xor
lds
and
popf
cltd
and
xor
leave
andb
stos
aas
outsl
xor
lcall
or
xchg
jns
into
ljmp
jnp
push
inc
divl
outsb
mov
arpl
arpl
fadd
add
jno
pop
fwait
cwtl
or
xor
xchg
sbb
push
es
out
xchg
inc
fiadds
aad
and
stc
outsb
fnstcw
cs
in
aas
xchg
popf
adc
lods
dec
fisubrl
outsl
cmpsb
cmc
in
adc
data16
sbb
lds
movsl
or
pop
cmpsl
fadds
or
jg,pt
push
repz
push
and
mov
mulb
js
mov
push
mov
adc
jl
fildll
pop
ljmp
adc
addb
pop
fmuls
fildll
das
push
mov
cli
cmp
popf
cs
pop
xchg
pusha
mov
lds
in
sbb
pop
bound
fwait
shrb
xchg
arpl
mov
xchg
loope
ret
mov
out
dec
or
pop
std
ficomps
pop
hlt
add
pop
xor
enter
jp
jne
jo
push
jp
stos
out
js
adc
mov
int3
sbb
and
lds
aad
cmp
xchg
ja
mov
std
stc
imul
mov
int3
pop
xor
in
xchg
inc
pop
pop
jmp
push
das
cmp
lock
adc
mov
fsubl
inc
fwait
into
int3
add
pop
mov
mov
inc
icebp
mov
xchg
aad
dec
dec
fstps
sarb
mov
pusha
mov
ljmp
loop
cli
negl
xlat
push
push
xchg
and
mov
pop
fwait
ds
lea
mov
bound
lahf
loope
lret
test
dec
or
icebp
adc
push
enter
xchg
add
xchg
andb
ss
or
inc
nop
mov
shrl
cmpsl
gs
repnz
dec
mov
xchg
sub
and
cmp
pop
ja
mov
pushf
dec
mov
fsubrl
cmp
and
or
pusha
mov
sub
mov
in
pop
mov
dec
inc
dec
ds
stc
fisubrs
push
movsl
addr16
xchg
push
push
jmp
jo
or
sub
sbb
insl
testb
clc
xchg
leave
xchg
rol
mov
mov
jns
jnp
push
daa
sbb
out
js
test
cmc
pop
adc
and
pop
add
cmpsl
xor
je
push
jb
xchg
insb
movsb
ror
lods
and
test
gs
add
cmp
inc
xchg
push
out
and
insb
mov
push
adc
leave
fsubl
pushf
scas
shrl
xchg
fisttps
mov
je
lea
ret
push
xchg
jecxz
mov
fs
fcoml
cmp
push
xor
or
xchg
mov
ljmp
out
lods
jl
dec
cli
lret
sahf
and
das
mov
cmpsl
icebp
clc
test
jb
rorl
xchg
cmpsb
and
call
adc
test
sahf
ret
dec
popf
jns
inc
into
sub
inc
push
push
ret
dec
push
ret
push
aaa
dec
bound
mov
cwtl
iret
in
pop
cmp
insb
insl
push
jecxz
jp
mov
jnp
dec
mov
adc
fistpl
enter
cld
lcall
das
xchg
testl
cmpb
push
xor
xor
jg
pusha
mov
stos
push
sub
fxam
loopne
pop
cltd
and
movsb
shl
stos
lcall
sahf
sub
jg
into
mov
xchg
pusha
fisubrl
or
rcll
in
fdivrp
sub
xor
loopne
pop
mov
mov
stos
cmpsb
push
js
mov
inc
lcall
std
addr16
data16
ficompl
cli
cmp
js
cmp
sub
out
add
outsl
xor
xor
sub
aaa
enter
stc
bound
std
outsl
xor
icebp
mov
testl
pop
je
sub
fidivrs
mov
sub
cltd
cmp
jo
in
xchg
aam
rcrl
out
xorl
jle
sarl
sub
cmpsl
clc
sub
das
sub
insb
fildll
ja
mov
jp
test
jnp
std
pop
sub
add
insb
adc
inc
sub
or
sbb
sahf
inc
xchg
xor
jge
push
xorl
rclb
fcoml
pushf
sub
push
cli
mov
imul
imul
xchg
jns
jae
add
and
fwait
adc
xor
in
push
cmp
dec
add
dec
sub
push
out
andb
push
rcrl
pop
sbb
inc
add
lods
in
pop
push
adc
in
push
and
mov
or
imul
add
dec
inc
xchg
loopne
sbb
mov
xor
dec
dec
out
mov
jp
test
xchg
mov
seto
repnz
xchg
stos
int3
stos
mov
int
lods
lret
mov
pop
lahf
inc
pop
xchg
negl
or
mov
fsubp
fcompl
or
cmp
out
xchg
push
es
adc
mov
inc
lods
fildl
push
inc
pop
mov
push
and
adc
dec
cs
or
sbb
out
lods
cltd
test
adc
lahf
xchg
fmul
daa
add
push
lcall
fcomi
in
dec
jl
adc
out
rep
mov
ret
loope
push
dec
sbb
movsl
outsb
roll
out
cltd
dec
sbb
call
cmp
clc
out
ret
push
ja
out
xchg
aaa
cmp
scas
popa
int
adcl
ret
xor
push
test
and
dec
and
and
aam
or
mov
inc
mov
dec
testl
xchg
xchg
jns
shlb
jecxz
out
lods
adc
outsl
xor
or
cmc
fisubrl
push
out
mov
adc
ljmp
xchg
out
psllw
leave
js
sbb
gs
ss
movsb
mov
and
xchg
daa
out
rcll
dec
jmp
leave
xor
out
pop
mov
pop
adc
movb
mov
cmp
pop
nop
dec
mov
push
test
ret
lcall
imul
mov
mov
mov
cmp
pop
pop
xchg
les
xchg
mov
jp
xor
cmp
sbb
js
add
add
add
add
add
inc
xchg
popf
pop
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
mov
