sbb
add
mov
xchg
fcoml
testb
xlat
lahf
es
sub
faddl
lea
int
push
shll
pop
enter
sbb
pop
fwait
mov
mov
mov
mov
fsub
sbbb
repz
shl
or
xchg
ret
aad
inc
rcl
outsb
movsl
je
fisubs
cs
and
stc
inc
ss
push
cld
jge
movsb
jge
ja
mov
xchg
insl
fsubrl
pop
jnp
and
adc
jmp
xchg
test
xchg
push
inc
sbb
dec
mov
and
mov
cs
cs
xor
inc
out
jo
repz
inc
jbe
xor
das
fimull
loope
sub
nop
leave
jp
inc
lock
xchg
lock
and
cmc
pop
nop
js
pop
push
fsubr
jns
mov
iretw
adc
xor
push
pop
insb
sahf
dec
pop
test
mov
lret
fdivl
cmp
inc
adc
dec
pop
cmp
cs
or
data16
out
push
mov
repz
in
repz
movsb
test
sarl
movsl
sbb
jne
xor
into
push
add
out
pop
repz
jmp
test
pop
int3
dec
cmp
stc
insl
call
xchg
call
ss
jg
xor
repz
lds
int3
xchg
fsubrp
adc
add
test
out
pop
cmp
repz
bound
mov
pusha
fcoms
arpl
test
sub
adc
jno
add
xor
fistpll
stc
jb
mov
xchg
dec
xlat
pushf
cmp
lea
das
jg
les
rorl
loope
pop
lods
aad
add
aaa
mov
jg
jle
les
cs
insl
mov
cmp
push
pusha
ret
cmpsl
and
lahf
inc
int
es
jo
divl
ljmp
in
add
scas
flds
insl
and
add
outsl
or
das
andb
pusha
push
shll
dec
es
inc
aas
mov
lahf
fdivl
xchg
insb
lret
cld
nop
mov
into
lcall
sub
stos
rorl
jle
lods
add
inc
lcall
jbe
call
loope
ds
xchg
mov
imul
data16
aad
inc
in
push
out
fldenv
sbb
dec
sti
pop
cmpsl
sbb
in
fisttps
leave
lret
mov
stos
and
clc
dec
gs
cmpb
orl
mov
push
inc
adc
movsb
mov
or
or
subb
scas
pop
inc
das
in
push
incb
fdivr
fprem
pop
lcall
mov
add
jecxz
inc
push
daa
es
dec
push
data16
mov
xor
sbb
aas
dec
mov
or
xorb
jb
mov
popf
push
fcmovu
dec
ja
push
sub
xchg
sbb
push
lods
push
mov
sub
test
push
and
cli
mov
mov
mov
rolb
stc
push
cmc
mov
cwtl
test
pop
std
ficoml
jo
ficomps
rorl
rclb
push
rcll
scas
shlb
jae
lcall
fsubs
and
cli
pop
cmp
xchg
sbbb
fucom
sbb
add
clts
inc
stc
or
sbb
push
inc
mov
sti
outsl
jmp
mov
mov
or
cwtl
xor
sub
sahf
les
cld
aam
jns,pn
movsb
xlat
pop
or
push
ret
jge
mov
sub
lahf
push
push
mov
cmpsl
shr
sbb
mov
inc
imul
jns
and
or
add
aam
ds
and
pop
inc
cli
xor
fnstenv
xchg
and
xchg
jg
sub
movsb
mov
and
mov
adc
mov
add
fldt
jg
mov
push
mov
ficoms
test
out
movsb
inc
dec
mov
add
js
push
mov
in
insb
mov
cmpsb
scas
sbb
adc
ljmp
bound
std
nop
call
mov
dec
lds
lds
xchg
aam
jl
icebp
mov
inc
or
jge
loopne
je
fsubrs
in
mov
and
mov
xchg
push
shrb
and
dec
push
repz
dec
xchg
and
jb
push
jbe
je
pop
dec
mov
divb
call
popa
and
dec
sbb
rcl
sub
add
into
fs
jns
mov
icebp
mov
mov
notl
js
mov
movl
lcall
push
scas
push
pop
in
call
dec
and
pop
sahf
addr16
lods
sub
or
xor
rclb
jne
or
pop
add
out
shll
mov
cmp
addr16
xor
mov
addr16
xorl
sub
xchg
in
mov
mov
pop
push
das
inc
mov
inc
dec
lods
xor
adc
call
add
mov
cmp
jle
ds
push
cwtl
lea
sub
mov
testl
std
jns
pop
lret
and
cmp
fadd
push
mov
pop
popf
lock
jl
or
sbb
pop
aaa
xor
aam
es
add
mov
aad
sub
fstps
cmpsb
popf
push
jo
cmp
sbb
aad
jg,pn
in
mov
xor
int
xor
inc
scas
or
jno
xchg
aad
test
mov
shll
das
lods
push
test
xor
inc
dec
xor
mov
jg
xor
pop
cmp
pop
fidivrl
lock
mov
adc
filds
inc
xor
arpl
cmp
jno
lock
into
inc
mov
pop
in
js
mov
pusha
ljmp
icebp
repnz
xor
and
ret
mov
pop
push
jl
shlb
sar
sbb
rorl
popa
mov
add
mov
lea
pusha
dec
dec
xor
orl
sbb
rcrl
nop
dec
push
cmp
imull
adc
lret
test
mov
int3
lods
stos
sub
das
idivb
mov
sbb
ret
jo
inc
push
jb
std
push
adc
pop
push
sub
add
or
push
fistpll
push
jbe
imul
jo
shlb
push
pushf
cwtl
lods
addr16
jmp
shlb
ja
push
std
mov
insl
clc
in
inc
mov
std
mov
aam
jne
mov
test
test
lods
jno
xchg
jge
test
sub
mov
enter
mov
adc
mov
inc
push
test
lcall
popaw
dec
bnd
push
jmp
loopne
jns
add
push
lea
mov
stos
xchg
dec
call
rclb
das
test
or
lock
push
or
out
sbb
xchg
incb
pop
push
out
adc
imul
je
rolb
and
ficomps
enter
out
mov
loope
xor
in
inc
xchg
pop
adc
xor
in
rol
xor
xor
and
mov
incb
inc
sub
xchg
and
xor
popa
insb
insl
gs
xor
pop
mov
movb
std
sbb
out
outsb
inc
outsb
lret
mov
sbb
cmp
dec
cmc
jge
cmp
ds
insb
sahf
mov
mov
push
mov
jnp
push
nop
cmp
dec
cld
ds
push
aas
jmp
fs
les
mov
out
mov
mov
dec
hlt
jmp
adc
aad
in
adc
mov
and
mov
in
hlt
leave
jae
jg
cmp
mov
push
movsl
pop
inc
arpl
idivl
dec
add
mov
scas
clc
shrb
dec
push
push
and
scas
aaa
pop
mov
or
mov
add
dec
fisubrl
push
outsb
xor
popa
sbb
xchg
sub
mov
push
push
cltd
clc
fwait
jmp
fstpt
dec
and
ficompl
in
xchg
jb
std
add
enter
pop
orb
jno
in
lret
pop
in
mov
dec
and
arpl
das
ret
inc
jmp
pop
cwtl
cmp
sub
andb
pop
jmp
in
xor
xor
call
gs
cmp
jbe
and
ret
mov
ss
and
or
loope
mov
aam
shlb
add
mov
push
fisttps
fidivrl
xchg
fdivl
adcl
das
movsl
fbld
inc
fbstp
inc
xchg
enter
sbb
incb
in
incb
outsl
je
decb
ja
les
rorb
add
mov
arpl
jmp
cmp
jnp
ret
jns
xchg
in
sub
adc
jmp
cmpsb
lds
nop
rcl
xchg
pop
inc
mov
into
std
xchg
jg
dec
inc
outsl
stos
cmc
in
mov
loop
outsl
or
cmpsl
or
jle
xchg
xchg
lds
mov
iret
call
or
loop
gs
sub
int
int
push
pop
aaa
loop
lret
xchg
push
shll
mov
aaa
rorb
xchg
lea
fmull
ret
jle
push
cmp
jno
test
repz
adc
fcoms
jae
outsl
adc
xchg
jnp
clc
inc
adc
push
stc
and
rcr
movsl
mov
in
sti
lahf
mov
popf
push
sbb
jo
adc
enter
or
push
mov
inc
cmp
lea
inc
sbb
lea
xor
iret
sub
xchg
jl
mov
mov
cmp
mov
mov
out
std
push
es
sub
nop
fbld
bswap
and
fwait
pop
hlt
and
fsubrl
outsb
xchg
xorb
adc
xor
or
push
loopne
and
js
test
xchg
cltd
je
sbb
or
loope
scas
or
cvtpi2ps
jp
test
ret
adc
mov
in
pop
jne
es
mov
out
jg
push
sbb
and
fldcw
xchg
jne
sub
lahf
mov
ficompl
pop
dec
loope
negl
add
add
jge
inc
jns
adc
lcall
xlat
inc
rolb
jle
loope
lret
stos
dec
nop
xchg
sbb
ja
lret
ret
jmp
int
pushf
incb
cmpsl
mov
lds
push
cmp
inc
pop
add
mov
mov
push
xlat
cli
push
imul
leave
imul
add
cmp
push
sahf
push
pusha
flds
sbb
repnz
out
rcrb
insb
jno
and
or
fucomp
push
inc
sti
shll
das
fisubrs
fimuls
rorl
insl
icebp
push
in
xchg
mov
xor
inc
dec
and
pop
and
pop
lods
loop
fstl
je
popf
cs
test
clc
mov
pop
xchg
outsb
sub
loop
fdiv
inc
out
shlb
outsb
dec
cmpsl
sbbl
pop
push
dec
cmc
mov
fcmovnb
fldt
cmc
jp
add
push
and
movsl
sbb
stc
fcomi
ja
xlat
movsl
dec
mov
mov
push
push
and
loope
sbb
xor
dec
push
test
in
xbegin
scas
in
and
pop
xor
dec
aam
pop
push
mov
pop
movsb
and
inc
sbb
notl
dec
inc
fstpt
jecxz
sub
dec
ljmp
scas
pop
imul
lret
sar
mov
pop
xchg
push
or
jl
pop
push
cmpsl
xor
pop
stc
jmp
mov
jns
jle
stos
jo
jge
pop
ror
aam
cmpsl
push
xchg
shlb
addr16
icebp
add
xchg
xchg
stos
mov
jns
fldenv
dec
pop
and
fldt
mov
mov
mov
scas
clc
scas
mov
mov
cmp
fnstsw
mov
rclb
dec
cld
sbb
pop
cmp
xchg
fwait
stos
call
jmp
jno
insb
dec
add
add
push
cmp
push
out
xrelease
shll
mov
ficomps
es
push
adc
jbe
loopne
js
xor
sub
xchg
test
lods
imul
scas
fldcw
insl
mov
cmp
pop
xchg
mov
int
iret
imul
push
mov
mov
into
repnz
test
cli
outsl
mov
leave
insl
xor
or
ds
subl
mov
jg
out
das
inc
cs
dec
in
pop
in
mov
movsb
iret
icebp
adc
sub
jle
jge
adcl
fdivs
jnp
push
dec
inc
aam
lock
daa
scas
dec
dec
xchg
aas
out
adc
adc
pop
int
sahf
fsubl
adc
adcb
sbb
movsb
insb
jnp
lock
xlat
into
adc
or
xchg
loop
cmp
clc
dec
dec
mov
fstpt
xlat
jle
dec
and
cli
cmpsl
popa
mov
push
lds
xor
inc
adc
mov
subb
dec
ja
xchg
loopne
ja
mov
mov
out
nop
jl
add
dec
adc
pop
xchg
sbb
popf
clc
out
daa
xor
js
les
cwtl
mov
xchg
sub
sti
mov
adc
mov
out
inc
scas
inc
out
aaa
and
aad
mov
ret
out
cmpsb
dec
pop
ss
push
stc
mov
popf
pop
lock
lret
sbb
into
xchg
add
jge
mov
jg
addr16
ret
out
rorl
iret
or
push
cmpsb
xor
lcall
mov
xchg
insl
dec
dec
loopne
dec
mov
clc
negb
call
imul
gs
or
pop
fwait
cli
enter
in
icebp
mov
xchg
mov
jns
movsl
iret
mov
push
or
sbb
aaa
pushf
adc
add
dec
shl
shl
add
lods
xchg
loope
mov
movsl
and
push
jmp
clc
dec
add
sbb
int3
lcall
aaa
jl
mov
lret
outsb
and
into
mov
daa
sub
mov
arpl
pop
sbb
out
popf
repz
lcall
into
mov
fstl
les
enter
jmp
insl
fs
add
dec
jl
ds
push
test
jl
cmp
pop
and
cmc
lds
mov
aad
mov
and
das
sbb
inc
push
or
dec
int
mov
and
and
cmp
push
mov
repnz
outsb
scas
or
or
ja
in
sbb
and
cmp
insl
push
pop
inc
sbb
dec
sahf
sbb
push
repz
add
fbstp
in
dec
jo
std
cmp
adc
rcrl
imul
adc
lret
out
xchg
lret
iret
push
clc
push
ja
ret
xchg
xchg
aam
mov
jecxz
mov
ds
jl
mov
fstps
mov
push
repnz
aad
inc
aad
push
inc
xor
cmp
sub
add
mov
jmp
jge
jmp
push
add
pop
cmp
loope
ja
sarl
xor
jecxz
adc
add
jge
stos
add
out
or
lahf
jnp
outsl
sub
loope
std
pop
lahf
rorl
jl
push
mov
stos
pop
aaa
add
fistps
int3
insb
les
test
cwtl
hlt
and
push
xchg
movsl
sbb
mov
mov
mov
jmp
sub
mov
sub
adc
dec
outsb
adc
pop
adc
out
in
xchg
test
mov
in
jl
cltd
mov
sbb
cld
stc
cmp
push
push
push
nop
mov
sub
push
jge
sbb
dec
js
ja
test
movsl
sti
mov
aas
shll
imul
jmp
dec
pop
mov
and
inc
std
cltd
jmp
dec
dec
cmpsl
sbb
add
mov
cmp
std
imul
ret
jns,pt
xor
xchg
cmpsl
negb
out
mov
pop
addr16
pop
aaa
cmp
dec
mov
pop
pop
icebp
imul
mov
lahf
les
xorb
pop
jnp
in
dec
sbb
sar
arpl
clc
lret
in
gs
repnz
shlb
decb
popf
outsl
push
dec
ja
mov
lock
adc
adc
in
jg
stos
inc
es
sti
mov
jae
cmp
push
out
fwait
push
mov
in
push
sub
jg
push
inc
in
sub
mov
movsb
js
pop
jge
mov
xchg
dec
lcall
aad
aas
xchg
jmp
jp
pusha
jg
bound
lds
test
sbb
jl
sahf
mov
jae
out
out
in
in
inc
jno
je
sub
lret
inc
inc
jne
out
insl
xchg
or
xor
sarl
and
mov
in
imul
sub
cli
lret
inc
js
mov
jmp
xchg
mov
sub
cld
pop
frstor
adc
in
imul
cmpsl
dec
in
jnp
pop
push
mov
or
mov
scas
daa
push
jne
sarl
rep
in
pop
cltd
inc
pop
pop
in
rol
add
push
pop
scas
xlat
sbb
add
ds
lret
jo
jecxz
icebp
add
outsb
xchg
xchg
adc
lods
test
jle
lock
sbb
push
cltd
inc
jo
push
inc
insl
dec
mov
insb
xor
addr16
pmullw
inc
lahf
lock
add
shll
mov
dec
popf
mov
frstor
cmp
daa
inc
mov
aaa
jno
insl
jno
mov
iret
push
pop
inc
mov
and
lock
fdiv
add
lods
add
int
and
xor
test
lret
adc
fbld
xchg
loope
and
sbb
test
aam
data16
fiadds
xor
pop
jne
cwtl
in
subb
xchg
sbb
movl
and
out
arpl
out
cmpsb
xor
cmpsb
popf
dec
and
jle
push
out
test
adc
aaa
dec
pop
or
cmp
ja
add
sub
mov
arpl
bound
cmp
pop
add
push
outsl
cs
aas
xchg
xchg
vfnmadd132ps
mov
xor
popa
repnz
xchg
fbld
cmp
sbb
repnz
loop
lahf
xchg
in
imul
mov
mov
mov
test
mov
test
dec
xor
sub
mov
sahf
dec
sbb
arpl
repnz
sbb
cmp
imul
sub
jno
and
mov
ror
push
or
inc
int3
popf
dec
sub
jmp
scas
push
inc
jp
addr16
in
movsl
popf
push
cs
pusha
shr
mov
lcall
inc
dec
mov
int
into
add
daa
adc
mov
dec
lods
sbb
inc
add
in
add
pop
repz
into
jecxz
push
pop
or
mov
cmp
aad
xchg
push
pop
js
scas
cmp
inc
add
dec
jge
cmp
mov
pop
mov
mov
das
inc
jns
mov
jae
push
mov
cs
outsl
movsl
sub
xchg
mov
sub
add
call
sub
push
sub
cmp
sti
and
repz
jno
fists
dec
cmp
sti
je
ds
arpl
in
lret
adc
push
mov
jg
cmp
daa
jg
insb
add
outsl
cltd
mov
cltd
xchg
push
shr
add
repz
ljmp
rcl
cmp
shl
dec
fnstsw
and
outsb
popf
lret
ficompl
jnp
scas
pop
pop
mov
inc
push
jmp
lock
adc
mov
cmpsb
pop
lods
in
es
rcr
xlat
shld
lods
fdivrp
aam
popf
fdivr
in
cmc
js
xchg
out
jecxz
rcll
ret
rcrb
movsl
divl
pop
lret
dec
out
mov
stos
call
insl
xchg
mov
pop
pop
pop
es
jle
fwait
xchg
shl
dec
or
ret
dec
xchg
cld
mov
push
cmc
add
add
jae
or
repz
xchg
mov
dec
stos
xchg
jbe
out
es
mov
int3
das
test
sbb
adc
sahf
lock
mov
mov
fbstp
call
add
mov
xchg
dec
sub
cmp
mov
xchg
or
icebp
push
cmp
iret
ljmp
daa
adc
rolb
in
mov
lods
add
lret
jl
mov
mov
push
sti
or
rcrb
stc
jb
dec
push
js
movsl
xor
push
pop
outsl
clc
push
mov
notl
or
scas
mov
pop
fistps
movsl
push
adc
movsb
insl
mov
std
lret
mov
aam
xchg
negb
push
and
lods
xchg
imul
cmp
xchg
mov
or
nop
pushf
pop
mov
jecxz
aam
repnz
inc
sahf
mov
aaa
aaa
mov
xchg
fmul
and
test
movsl
fs
sti
inc
lods
out
xchg
daa
mov
lds
fstpt
outsl
and
or
rcr
adc
add
adc
cmp
sub
jo
andl
imul
lcall
xchg
mov
mov
jge
ficomps
and
inc
mov
cmp
adc
popf
ss
dec
adcl
mov
test
xor
shll
push
dec
sub
inc
lods
sbb
popf
inc
or
test
sarl
and
pop
sub
jbe
mov
repnz
cmc
cmp
mov
dec
jle
bound
mov
jl
clc
mov
push
cltd
push
in
mov
inc
addr16
jecxz
nop
fidivl
sub
ds
in
sbb
pop
dec
cmp
popa
fdivl
sbb
je
mov
lods
fbstp
addr16
xor
int3
lret
aas
ffree
test
lock
sub
in
cmp
and
pop
xchg
fisubrs
cltd
adc
xlat
mov
push
imul
aad
mov
jp
out
xchg
cmpsb
mov
dec
jmp
fstps
addr16
ret
sbb
add
sbb
hlt
vcvtpd2psy
jge
mov
xorb
xor
pop
cmc
clc
roll
push
fisubrl
push
or
sub
jmp
andl
push
lods
push
cs
pop
imul
icebp
mov
insl
dec
and
idivl
or
fisubrl
adc
mov
and
mov
call
fnstsw
cwtl
pop
scas
ds
arpl
pop
les
imul
cmp
mov
cmp
loope
scas
sub
inc
out
pop
fwait
inc
inc
mov
clc
cmp
push
inc
add
xchg
xor
xchg
inc
mov
testb
push
filds
insb
mov
fadds
inc
scas
push
fstps
fdivp
and
stc
shlb
pop
inc
xlat
xchg
lret
aam
addl
in
insl
out
icebp
pop
lret
mov
and
mov
int3
hlt
fcoms
cmp
sub
leave
iretw
mov
fsubr
dec
shl
sbb
inc
aad
bound
inc
mov
sbb
push
sbb
inc
test
test
scas
mov
cwtl
ss
jl
enter
xchg
dec
pop
sub
in
dec
addb
xchg
push
mov
shlb
int3
cli
push
cmp
cmp
mov
addb
mov
jno
aas
pop
jl
mov
jno
inc
dec
je
cmp
mov
fcmovb
sbb
xor
cmc
sbb
or
cli
sbb
jle
push
test
popa
jns
pop
add
xor
cmp
lock
cmp
mov
sbb
arpl
jbe
sbb
jno
repz
mov
ja
jp
les
fsubl
inc
mov
adc
push
mov
movsl
mov
or
or
sbb
movsl
mov
aaa
mov
adcb
push
and
inc
scas
xchg
and
aaa
pop
ss
sub
lea
jecxz
jb
fstl
iret
push
comiss
xlat
mov
push
gs
or
int
int
repz
pop
sbb
sub
mov
xchg
push
push
and
mov
mov
mov
xchg
lods
sub
out
pop
out
jo
hlt
int3
sub
push
xchg
push
or
lock
repz
rep
jae
in
mov
pusha
jne
cmp
bnd
lods
insl
inc
outsl
shlb
nop
ss
jg
mov
jb
mov
stos
xlat
dec
js
cmp
push
lock
add
repz
fmull
lret
pop
in
shlb
sub
je
loop
xchg
nop
lds
dec
inc
pop
movsl
orl
loop
pop
push
stc
ss
cmpsl
je
ficoms
sar
sub
pop
add
clc
cmp
test
shrl
mov
push
mov
lcall
in
and
add
adc
movsl
rolb
xchg
rol
iret
ss
decb
repz
cmp
movsb
mov
sbb
mov
cs
hlt
mov
mov
xchg
dec
cmp
cmp
sub
hlt
push
and
insl
xchg
andb
and
pop
and
and
adc
outsb
loop
push
loope
mov
loopne
push
add
xor
ss
aam
jle
mov
mov
mov
dec
daa
sbb
pop
and
movsl
xchg
out
xchg
mov
push
xlat
int3
cmp
dec
popa
push
sbb
std
enter
roll
add
rolb
dec
cli
cmp
xchg
movsb
xor
mov
out
or
pop
adc
aas
cmc
jp
mov
pushf
add
sbb
imul
xor
mov
lods
jne
arpl
popa
pop
popa
and
loope
inc
dec
pop
xchg
xchg
push
sbb
xor
xor
xchg
sbbl
xor
or
lret
outsb
es
lea
inc
repnz
mov
fmull
leave
out
ds
jl
andnps
add
rorb
mov
inc
push
fnsave
imul
inc
mov
mov
fxch
sub
adc
push
add
js
pop
scas
std
lods
xor
add
jb
push
movsl
push
pop
invd
insl
mov
icebp
frstpm(287
pop
jl
and
jnp
outsl
xchg
stos
lea
mov
fistpll
dec
icebp
and
push
ret
pop
subl
pop
mov
imulb
xchg
rol
sub
dec
push
out
out
xor
in
insb
and
ret
jne
sub
repnz
in
rcrb
pop
insb
fs
mov
jmp
adc
adc
in
pop
jle
leave
inc
mov
jecxz
dec
push
hlt
sbb
or
out
inc
add
dec
dec
dec
sbb
mov
xchg
jno
pop
jo
pop
ret
push
repnz
mov
push
or
ret
xchg
and
xchg
jge
arpl
fcoms
and
es
add
lea
or
pop
pop
xor
insl
push
mov
std
pop
and
out
jecxz
ss
push
aaa
or
xor
cld
adc
adc
xlat
std
cmp
jmp
inc
shr
lret
mov
jno
xor
mov
rcl
dec
and
push
ret
movsl
mov
aaa
insl
inc
xlat
jle
fdivrp
inc
int3
cmc
lods
ljmp
lea
imul
cmp
enter
repnz
pop
cmpsl
sub
int3
outsb
dec
sbb
mov
lods
idivb
xchg
rcrb
mov
imul
mov
push
loop
mov
jae
and
jns
fiaddl
sarl
inc
jge
bound
enter
pop
add
scas
aad
lcall
inc
mov
jne
adc
add
lret
pushf
mov
bound
in
pop
sbb
sub
jae
mov
iret
aam
mov
xlat
jl
adc
xor
push
iret
dec
movsl
inc
push
fisubs
mov
xchg
and
ja
and
jne
sbb
pop
rolb
jp
nop
leave
in
xchg
fmull
pop
data16
adc
xchg
cmp
ljmp
mov
loopne
in
dec
aam
and
mov
inc
adc
icebp
sbb
out
jmp
iret
jmp
xor
sbb
cltd
adc
cld
repz
movsb
aas
lods
imul
mov
add
cmpl
cmp
nop
repz
lods
lret
inc
insb
dec
sub
fbstp
xchg
or
fs
add
pop
push
insl
pop
into
push
gs
pop
sub
das
mov
inc
and
inc
popa
pop
sbbb
dec
ret
sbb
inc
xor
or
int3
cmp
jmp
pop
pop
pop
aas
mov
lds
call
repz
push
or
jns
sbb
mov
mov
adc
in
sub
das
and
mov
xor
cmpsb
jecxz
xor
mov
rcl
xor
or
xchg
xlat
sub
dec
gs
test
or
fisubrl
mov
int3
rcll
sbb
movsb
loopne
and
mov
sub
pop
and
push
sahf
test
iret
mov
jle
pusha
faddl
loopne
movsb
cld
scas
out
mov
and
sahf
jnp
add
inc
scas
bound
cmpb
pop
mov
lods
lds
pusha
add
cmpl
test
mov
adc
mov
and
rorb
loopne
jae
adc
das
inc
sub
cmp
fidivrs
enter
adc
push
cmp
jno
inc
in
outsl
popf
add
dec
mov
or
lods
test
pusha
dec
loop
int
mov
lock
mov
out
or
mov
jnp
hlt
lret
push
iret
and
add
mov
mov
pop
bound
pop
dec
inc
gs
pop
loop
andl
js
ds
lods
mov
stc
mov
pop
jle
mov
push
test
gs
repnz
les
loope
jae
leave
repnz
cmp
popa
mov
dec
scas
fadd
mov
mov
les
adc
loopne
mov
push
loope
andb
cmp
loope
push
jbe
jae
mov
push
in
enter
pop
scas
mov
repz
mov
mov
push
repz
negb
mov
fsubr
lcall
add
mov
pop
mov
or
xchg
pop
aas
push
fcmovbe
mov
inc
xor
popf
mov
dec
mov
insb
aaa
ss
fidivl
cmpsl
pop
adc
adc
and
out
shll
test
xchg
cmp
popf
stc
pop
aas
cltd
and
xchg
pop
test
inc
push
loopne
mov
pop
iret
loop
lahf
dec
cmp
mov
jbe
test
cmpsl
and
nop
mov
imul
jecxz
sbb
sbbl
mov
aad
dec
out
adc
insb
loope
lock
insl
js
push
pop
es
sarl
orb
push
inc
cs
ljmp
into
cli
out
loopne
pop
xor
dec
push
mov
pop
rol
faddl
into
pop
loope
xlat
xor
jl
std
stc
test
call
fcomps
out
jl
out
xor
outsb
xchg
and
pusha
adc
push
lcall
xchg
push
xchg
add
or
icebp
cli
arpl
dec
mov
je
ret
lret
jbe
cmpb
jle
icebp
mov
movsl
fisubrl
sbb
inc
mov
addr16
push
cmp
rclb
mull
jmp
mov
push
push
lods
inc
shrb
cs
xchg
pop
ja
xchg
or
sbb
aas
or
push
lahf
sub
mov
add
cwtl
lods
xor
rclb
pushf
out
cmp
lock
mov
sub
push
sub
mov
sub
sbbb
std
aad
dec
mov
pop
mov
pop
adc
push
in
mov
lea
dec
pop
jno
mov
cmpsb
aad
jle
mov
and
push
aad
cltd
dec
iret
pop
and
sub
and
sub
imul
jno
es
sub
data16
stc
and
or
rol
rclb
popf
pop
add
in
adc
jbe
mov
push
xchg
or
add
push
fimuls
aam
dec
mov
or
fsubl
and
and
sbb
ljmp
jge
outsl
ja
push
nop
addr16
fwait
js
xchg
mov
out
mov
daa
fmul
in
or
mov
xchg
jecxz
mov
ret
sub
sbb
faddl
mov
xlat
fsubrl
iret
sbb
jae
cmp
test
lcall
cmp
mov
mov
xchg
jns
lods
sub
pop
fldenv
push
push
test
xor
rcll
cmpsb
out
push
dec
ret
cmp
push
mov
dec
push
dec
ficoms
popa
push
movsb
cwtl
and
fstpt
inc
add
mov
xchg
jns
pop
jb
test
in
call
test
inc
xchg
jno
je
xor
ss
mov
clc
add
adc
xchg
mov
cmp
mov
jb
daa
and
pop
adc
divb
dec
arpl
cmc
dec
inc
add
popf
xlat
and
inc
jle
test
sbb
movsb
add
xchg
shl
inc
in
ljmp
iret
or
pop
hlt
sbb
scas
jae
add
add
std
div
adc
mov
jle
outsl
movsb
outsl
ja
or
xor
mov
xchg
ds
clc
ret
sub
lcall
in
and
jg
leave
in
cmp
aaa
popa
out
cmp
sub
leave
mov
push
cmc
inc
mov
or
lcall
push
cltd
out
or
push
add
adc
mov
mov
mov
xchg
into
loop
xchg
mov
sub
adc
mov
mov
in
mov
cmc
repz
inc
xor
pop
adc
cmp
pushf
mov
mov
test
xchg
loop
mov
inc
push
mov
gs
mov
stos
repnz
cmp
bound
popf
ret
mov
sti
mov
mov
test
cmp
jmp
sbb
outsl
mov
fcoml
loop
shlb
push
ss
push
ret
and
adc
mov
shrb
movsb
cmpsb
adc
pop
fbld
gs
inc
xchg
jnp
mov
or
pop
jle
dec
pop
dec
notb
ds
mov
repz
dec
pop
jl
add
aas
add
testl
in
rorb
mov
or
sbbl
aas
mov
dec
movsb
arpl
sbb
aad
test
pop
xor
inc
push
lcall
xchg
imul
test
cmc
int3
and
sub
inc
cli
jge
test
mov
stos
gs
push
popf
mov
or
xor
mov
loope
add
dec
cmc
enter
addb
mov
pop
jle,pn
popa
mov
sbbb
out
arpl
xlat
xor
test
push
xchg
mov
mov
pop
dec
je
mov
loopne
repnz
jmp
stos
fmul
mov
cmp
lcall
lret
cmp
dec
sbb
cmp
mov
stos
jl
pop
and
push
enter
inc
cwtl
push
add
pusha
and
lock
call
add
mov
mov
outsb
popf
test
adc
scas
je
inc
aas
cmp
pop
and
cmpsb
das
push
lret
dec
adc
in
cmp
jp
movb
sbb
mov
sub
add
jb
xchg
push
dec
aaa
jae
sub
je
cwtl
das
xchg
or
sub
dec
push
lock
mov
pop
jge
cmpsl
cmp
pop
pop
add
cmp
lea
bound
sub
int
jge
sub
insb
aaa
lcall
roll
mov
and
mov
inc
fsubl
in
cmp
imul
mov
adc
addb
sbb
lods
lds
jg
sbb
inc
orl
or
adc
aad
pop
mov
cmc
data16
jbe
cli
jb
lret
aaa
out
les
adc
pushf
xor
dec
push
in
push
jmp
adc
dec
fwait
in
mov
pop
insb
loope
daa
mov
xchg
je
adc
pop
and
push
cli
xor
and
pop
pop
lock
icebp
test
xlat
push
cmp
push
adc
and
push
clc
mov
ss
test
aaa
or
movl
jl
add
sub
in
js
andb
jbe
adc
scas
pop
mov
push
pop
sbb
enter
mulb
jb
pop
jne
rcr
jne
outsl
dec
inc
pop
jg
sbb
mov
insb
mov
test
ret
ds
push
insb
fwait
xchg
jg
xor
mov
out
insl
cs
js
fisubs
ljmp
fwait
mov
mov
popfw
lret
xor
popa
mov
sbb
xchg
arpl
stos
lea
mov
addl
mov
negl
cmpsb
std
mov
jns
xor
subl
call
shrb
pop
gs
mov
data16
imul
movsb
dec
sbb
fiaddl
xor
sub
testl
push
test
test
sahf
add
scas
loopne
and
xchg
movsl
pusha
test
adc
or
push
in
fisubrl
push
les
mov
ret
mov
push
mov
inc
dec
sub
scas
sbb
cmp
lret
in
movb
ret
pop
cli
sub
mov
sub
push
push
xchg
les
inc
mov
ljmp
jae
push
dec
pop
xor
sbb
sarb
lea
in
push
sahf
mov
into
in
clc
or
scas
insl
lods
push
sbb
jae
inc
push
jge
js
jo
insb
shrl
sub
fwait
movl
aam
push
mov
fimuls
mov
inc
sbb
fmul
push
sbb
xchg
push
popf
sti
xor
mov
test
pusha
cltd
ss
test
inc
movsb
push
dec
shr
insb
push
lahf
xchg
add
int3
movsl
popf
pop
inc
sub
push
or
sub
mov
xchg
pop
adc
and
aas
cmpsl
cmp
pop
lcall
or
push
out
repz
add
test
adc
jns
cmp
cmp
jl
jbe
jno
scas
test
outsb
dec
adc
add
jmp
out
adc
jecxz
fsubl
popa
leave
pop
movsl
adc
sbb
dec
pop
stos
mov
fs
dec
add
jmp
cmp
pop
fldl
push
lods
fcompl
xchg
scas
mov
popf
sub
jnp
push
fstps
push
bound
mov
je
inc
cmp
add
shll
fmuls
push
call
mov
mov
mov
icebp
xchg
push
daa
dec
dec
mov
and
mov
mov
jns
mov
cmp
jmp
pop
or
outsb
cltd
arpl
lret
nop
pop
in
sbb
hlt
idivl
mov
fsts
mov
add
lea
popf
rorl
fiaddl
mov
dec
sbb
push
repz
or
movsl
out
daa
sbb
inc
dec
lea
jl
pop
movsl
repz
lret
sub
cmpsb
in
cmpsb
in
shl
mov
mov
adc
xor
mov
mov
movsl
push
dec
pop
inc
jae
pop
cwtl
insb
push
enter
stos
xchg
pushf
fisubs
cmpb
add
cmp
or
cmc
jbe
enter
pop
mov
es
xchg
mov
lods
inc
mov
or
ds
sbb
pop
mov
xchg
pop
les
insb
jns
jns
lods
in
jno
jae
jmp
rorb
mov
lea
stos
das
mov
jge
mov
pushf
mov
mov
sbb
aaa
ljmp
sbb
decb
dec
aam
cltd
mov
dec
fcomi
je
shll
cli
jnp
mov
mov
jbe
popa
jae
cltd
push
add
addb
outsl
fists
mov
mov
adc
or
lahf
out
jecxz
xchg
adc
or
aaa
pusha
cmpsb
sbb
enter
test
stos
sub
mov
cltd
cmp
fcoms
test
push
ss
mov
loop
je
mov
notl
cltd
sbb
aad
adcb
mov
xchg
xchg
add
mov
mov
jle
push
out
pop
push
dec
enter
dec
sbb
mov
mov
pop
je
fwait
pop
pusha
jo
mov
jnp
adc
cwtl
popf
insl
adc
or
mov
fsubrl
xchg
outsb
shl
adc
and
jp
inc
int3
mov
jecxz
mov
movsl
stos
mov
popa
sbbb
or
xchg
cmp
lcall
out
dec
jl
lahf
daa
jo
push
xor
xchg
mov
pop
mov
sbb
lcall
inc
add
cmp
test
in
fcoms
inc
insb
ja
addr16
lret
pop
mulb
add
test
or
cs
mov
sbbl
xor
mov
sbb
lods
sahf
add
mov
lods
rcrb
idivl
insl
push
fcompl
out
sub
sub
pop
mov
jg
add
push
nop
pop
pop
subb
lock
pop
and
in
inc
fdivrl
loopne
sub
mov
test
jecxz
inc
and
or
jns
adc
cmp
lret
arpl
aas
fwait
pop
push
add
xor
sub
pop
push
xorl
xchg
jno
jecxz
push
xchg
mov
bound
cmp
clc
clc
jbe
jb
sbb
jmp
mov
xchg
call
hlt
repnz
mov
popf
jecxz
pop
sbbb
sarb
neg
adc
dec
mov
sbb
sbb
mov
fistpll
pop
mov
rolb
jmp
movsl
push
ja
xor
sub
adc
ds
fldl2t
and
sbb
je
sahf
or
sub
jbe
jge
or
cmpsb
adc
test
add
popa
dec
out
mov
push
rcll
adc
jo
sti
ror
rol
push
fsubl
movsl
and
aad
leave
xchg
jp
cmp
fs
jmp
mov
or
insl
lret
dec
out
mov
aaa
sar
xchg
xchg
mov
push
call
dec
xchg
lcall
mov
dec
shrl
mov
xor
or
imul
add
mov
divb
push
pusha
or
xchg
and
and
xor
jmp
and
xchg
cwtl
jle
sbb
sahf
xor
aam
mov
lock
lods
adc
jo
inc
xchg
jg
shrl
iret
inc
dec
ljmp
mov
pop
nop
mov
out
add
fwait
mov
add
push
js
pop
sbb
jo
cwtl
sbbb
jmp
clc
pop
mov
push
gs
js
shlb
bound
mov
clc
or
pushf
divps
inc
sysret
mov
loope
or
lahf
mov
mov
fidivs
jne
in
out
sub
pop
dec
or
adc
fsubs
and
nop
and
push
or
xor
lcall
ret
xchg
inc
insb
mov
mov
outsb
hlt
roll
cmpsl
xchg
aaa
mov
adc
pushf
lcall
sub
movsb
push
dec
jg
hlt
push
jae
adc
jns
leave
mov
push
cmp
out
push
hlt
mov
cli
push
cli
rorl
nop
mov
cmp
xchg
dec
enter
jg
dec
xor
mov
test
fs
test
xchg
in
inc
ja
pop
inc
adc
cmp
mov
stos
scas
or
push
in
mov
xor
sub
test
clc
pop
cmp
cli
pop
adc
in
xchg
mov
sub
inc
adcb
cmc
inc
xor
dec
mov
xrelease
xor
xor
lret
sbb
add
out
add
insb
push
pop
out
push
cs
je
aam
push
punpckhdq
jmp
lds
notb
jns
bound
lret
xchg
pop
fimull
adc
jbe
sub
pop
add
pop
and
fs
xorb
shlb
lret
movsb
jno
lret
or
mov
xchg
inc
lds
jbe
jle
xor
inc
add
movsl
xor
pop
mov
mov
lods
sbb
adc
gs
addr16
push
pop
scas
fisubs
es
aas
cmp
adc
scas
enter
fcomps
or
ds
pop
divl
mov
fwait
bound
es
sahf
in
mov
sbb
push
inc
jns,pn
jle
cwtl
push
loopne
shr
pusha
dec
lcall
ss
fcomps
ds
mov
into
or
mov
dec
popa
inc
out
rcl
out
divb
push
and
mov
jne
pusha
sub
es
mov
jmp
loopne
int
fistpll
imul
sub
add
jb
fdivl
nop
lods
cmc
mov
ret
pop
out
jl
cwtl
xor
jne
mov
movd
or
and
cmp
mov
and
or
sbb
pop
jo
pop
sub
cmpsb
xor
out
lahf
popf
push
ja
sub
leave
clc
bound
movsl
or
aas
pop
das
outsl
mov
add
mov
cmp
pop
in
cwtl
je
pop
mov
aad
inc
adc
popf
outsl
adc
sti
inc
xor
pop
jne
movl
out
test
dec
cs
cmc
and
lock
nop
and
xor
inc
push
pusha
insb
fsubr
inc
pushf
dec
sub
call
pop
fs
add
cmp
adcb
std
xor
or
pusha
ds
cmp
add
fsubr
shrb
rolb
push
bound
sahf
jle
and
cli
mov
mov
lret
mov
adc
mov
xchg
leave
pop
xchg
sbb
jbe
mov
clc
dec
in
jecxz
insb
mov
and
and
jae
fldlg2
xchg
push
mov
in
cmp
stos
push
xchg
test
and
lret
aas
mov
cmpsl
jne
cld
push
or
aaa
repnz
mov
push
mov
xchg
adc
push
inc
pop
xor
and
push
add
mov
lods
cmpsb
and
arpl
les
sbbl
push
push
xchg
ljmp
icebp
push
jmp
jg
imul
push
test
or
lret
shll
jbe
ds
sbb
cmp
jmp
adc
dec
push
sub
jp
fdivl
pop
push
fiadds
cmp
push
stos
mov
add
pop
movsl
aad
lods
shl
pusha
mov
sub
in
into
push
lea
push
out
stc
xor
mov
or
subl
std
jns
mov
push
add
gs
jbe
aad
lock
mov
fldt
sbb
enter
in
shrl
addr16
scas
data16
mov
mov
fwait
ljmp
push
ret
jae
movsl
jmp
enter
fcomi
xchg
fidivs
stos
pop
cmp
cmpsl
and
xchg
mov
jmp
push
mov
fbstp
pop
mov
leave
push
push
dec
dec
movsl
mov
sub
cmp
xlat
dec
jne
aas
ds
mov
or
xchg
pop
sub
mov
int3
int
out
jnp
scas
movsl
pop
stc
sbb
mov
xchg
xor
pop
ficomps
int
mov
pop
out
inc
xor
mov
call
push
es
aad
cmpsb
xor
xlat
addr16
stc
pop
adc
gs
xchg
cmp
stos
shrl
enter
or
mov
jle
call
in
inc
sub
enter
and
adc
fwait
in
jge
rcl
movsl
mov
rcll
inc
leave
jnp
jb
out
and
int3
icebp
mov
rclb
xchg
shlb
sbb
ljmp
in
or
mov
push
jl
add
test
push
test
or
push
inc
pop
jle
mov
rcrl
pop
cwtl
clc
jbe
popf
push
leave
cwtl
cmp
or
test
bound
aad
push
xor
subb
add
hlt
cmp
cld
pop
or
ss
loopne
mov
fisubs
je
pop
inc
add
xchg
imul
movsl
sbb
dec
dec
sub
mov
loopne
scas
pop
push
push
fstl
ret
jnp
cwtl
push
mov
je
movsb
cmp
loop
in
sub
or
addl
pop
push
mov
stc
cmc
outsl
in
mov
aas
jb
jae
mov
add
add
cld
push
cld
call
out
pop
lahf
and
rol
mov
call
fwait
add
inc
imul
mov
cmp
sahf
lock
daa
jno,pn
jne
mov
insl
outsl
insb
bnd
push
fbstp
lret
into
fcomip
cwtl
push
xchg
arpl
out
or
cmpsb
jl
clc
mov
mov
jl
xabort
dec
cltd
mov
loopne
insl
insl
dec
test
mov
push
cmpsl
outsl
aam
and
xchg
rcll
xchg
aad
movsb
jo
hlt
mov
rcrl
and
in
push
add
mov
stos
inc
gs
sub
dec
sub
sti
xchg
in
or
mov
jae
sub
decl
out
jmp
mov
mov
in
rcrl
add
lock
aad
daa
int3
push
add
cwtd
jge
cltd
jno
lret
mov
inc
insb
inc
cmpsl
mov
pop
les
sbb
mov
and
mov
pop
inc
and
add
insb
and
loopne
dec
mov
mov
adc
xor
xor
and
out
mov
cld
mov
push
rol
and
jmp
dec
andl
fildl
add
movsb
pop
add
outsb
or
div
jb
cmp
xchg
int3
sar
imul
push
int
mov
add
ss
pusha
popf
icebp
dec
jp
ss
mov
addr16
adc
ss
jb
xchg
sbb
cs
mov
cmp
sub
jp
jp
xor
das
jge
icebp
jnp
je
xchg
xor
pop
jmp
insl
dec
sbb
push
std
and
adc
xchg
sub
pop
sbb
xchg
out
pop
imul
inc
in
cvttps2pi
jae
push
movl
jb
test
pop
or
arpl
xor
jp
push
movsl
movsb
mov
mov
mov
adc
das
pop
outsl
add
sub
aas
aas
push
mov
test
das
adc
pop
add
mov
cmp
mov
pop
push
or
cmp
sub
add
fdivl
imul
xor
lcall
cmp
out
mov
lock
outsl
sub
aaa
shll
pop
cmp
push
idivl
sub
stc
push
mov
push
add
rcrb
scas
pop
and
test
ret
inc
cmpsb
inc
adc
leave
push
inc
dec
lods
insl
cmc
popl
xchg
sahf
pop
pop
stc
sub
xlat
fnstsw
inc
rolb
enter
imul
cmp
loop
xor
sub
jl
cmp
adc
pop
pop
xlat
xor
inc
xor
bound
std
xlat
dec
jbe
ljmp
mov
push
sbb
sbb
sub
jl
int
divb
fbstp
sbb
imul
call
xor
mov
scas
xchg
addr16
bound
dec
popa
shll
scas
or
mov
inc
sbb
xchg
iret
roll
ret
jmp
adc
xchg
jo
mov
movsb
call
mov
sbb
shll
cli
sbb
outsb
inc
and
sahf
js
sbb
pushf
scas
test
adc
outsb
out
jg
pusha
xor
mov
fstpt
lret
hlt
push
das
jge
insl
sub
in
push
std
imul
push
imul
dec
dec
in
fwait
outsl
aad
adc
daa
jne
sub
and
inc
sbb
push
mov
push
movsl
mov
insl
fmuls
xchg
fwait
sbb
jge
lods
arpl
cmp
and
or
jb
adc
sbb
mov
push
aam
jnp
nop
xchg
push
out
and
cmp
jle
push
fcmovne
jo
add
out
fwait
jno
dec
out
shll
jecxz
test
add
insb
aad
std
rorb
hlt
lret
outsl
or
mov
cmp
xchg
lock
pop
js
addr16
ror
fdivr
xor
clc
xlat
iret
outsb
xor
jbe
adc
insl
lods
test
xchg
lea
repnz
mov
cmp
fucomip
and
adc
in
push
es
add
pushl
scas
xor
fdivl
mov
andl
ja
inc
cld
sub
aad
cmpsl
mov
fmuls
mov
push
jle
lds
push
push
cmpsl
sahf
cmpsb
sbb
and
dec
jp
cmpsl
and
jmp
mov
push
mov
jecxz
mov
std
adc
in
lea
xor
push
xor
das
and
outsl
les
inc
pop
pop
add
js
xchg
or
fs
aam
dec
lods
cli
repnz
in
pop
sbb
push
xor
jp
hlt
sbb
xchg
inc
popa
test
push
and
lea
and
out
jne
lret
jle
xchg
mov
test
cmpsb
dec
inc
mov
adc
pop
clc
insl
add
sbb
inc
mov
fcompl
data16
neg
sbb
jns
sub
sbb
lea
mov
lods
out
ficompl
sbb
inc
insb
mov
pop
xchg
jo
push
sbb
xor
push
lods
push
cmc
bound
les
insl
push
lcall
push
sbb
rep
sbb
jecxz
cltd
jbe
lock
test
nop
jno
push
repnz
shr
fucom
mov
mov
inc
je
xlat
xchg
jp
push
push
fnsave
pop
leave
sbb
mov
frstor
mov
outsl
dec
or
and
add
in
xchg
push
repnz
nop
inc
sbb
dec
ljmp
add
and
test
xor
xor
outsb
add
test
sti
out
into
lahf
or
and
dec
pop
mov
mov
push
dec
stc
or
mov
push
popa
xchg
xchg
mov
out
inc
fisttpll
jmp
push
pop
mov
stos
dec
in
movsl
scas
pop
js
push
cli
mov
repnz
push
test
aam
and
jne
lahf
push
sub
pop
jne
xchg
inc
mov
roll
dec
or
aam
cmp
mov
testl
iret
jno
add
jge
mov
mov
and
dec
das
or
sarb
mov
mov
or
pop
pop
sarl
cmc
lock
shrl
popf
shr
and
sbb
add
out
ret
dec
inc
repz
pop
push
addb
in
icebp
scas
loop
out
int
movsb
mov
mov
jne
mov
xorl
js
call
push
mov
jg
hlt
xchg
loop
push
bound
out
loopne
add
adc
cli
sub
inc
pop
mov
adc
loopne
or
pop
pop
mov
cmp
sub
fwait
in
dec
sbb
or
scas
dec
and
mov
insb
adc
int
push
inc
xor
cwtl
xchg
lds
add
lods
dec
add
std
push
fs
xchg
push
in
fs
shlb
mov
leave
popa
in
loopne
subb
xor
cmpl
stos
cmpsb
jnp
push
mov
lds
push
inc
pop
mov
imul
ret
out
adc
cltd
repz
pop
adcl
stos
cs
insb
dec
pop
clc
xchg
stc
mov
jecxz
ret
inc
cli
pop
stos
hlt
push
iret
ret
stos
sub
ret
cmpsb
ret
rclb
imul
imul
and
stos
data16
lds
dec
aam
movsb
dec
outsb
outsl
in
jbe
scas
sub
inc
decb
sbb
push
pop
or
mov
pop
clc
cltd
inc
cmpl
test
inc
push
jno
das
sbb
adc
and
push
add
imul
jb
stos
jns,pn
cmp
push
loop
lods
lret
cmpsb
or
sbb
sub
jae
sahf
fildl
sub
ja
mov
cld
mov
shll
dec
dec
mov
add
xchg
roll
daa
jne
and
dec
aad
or
add
out
nop
and
or
addr16
and
jge
and
jbe
sbb
push
add
pop
aaa
dec
loope
cmp
mov
movsl
outsl
shl
cltd
inc
mov
pop
out
or
mov
pminub
lahf
daa
adc
lret
cwtl
pop
dec
pop
mov
imul
push
test
ret
pop
cmp
push
in
shll
xchg
jbe
mov
lret
fstp
in
int3
aam
out
pop
mov
fiadds
cli
sbb
xor
adc
dec
dec
sti
movsl
adc
ljmp
aas
push
bound
ret
imul
or
je
mov
pop
mov
xchg
xchg
jno
sbb
push
push
push
adc
lret
pushf
xchg
inc
in
push
lea
jmp
jle
fwait
mov
dec
sbb
sub
icebp
cmp
fs
xchg
aad
pop
call
pop
inc
and
pop
lock
push
je
incl
push
jbe
jnp
and
repnz
inc
mov
cwtl
xchg
push
stos
lcall
movd
bound
insl
mov
mov
mov
push
ret
addl
std
je
xlat
push
ret
inc
iret
jg
jl
mov
out
cltd
and
sbb
dec
notl
shl
mov
pop
add
es
jle
cs
and
push
cmpl
xchg
jge
shll
push
fcompl
add
lahf
ljmp
push
in
out
mov
or
movsl
pop
inc
sub
rcl
mov
call
add
mov
int
add
xor
cli
scas
scas
lret
js
push
jb
les
jb
rcr
fiaddl
mov
ja
inc
add
mov
adcb
enter
inc
fstp
or
mov
dec
fstpt
ljmp
jg
cmp
aam
jne
enter
mov
mov
mov
fstl
adc
sub
clc
xor
cli
movsl
in
xlat
stos
lahf
dec
rcrl
out
sarb
inc
and
xchg
jl
scas
lods
ja
aas
mov
dec
push
add
xchg
out
cmc
sub
lret
lock
aad
cs
bound
mov
imul
and
sbb
mov
adc
insl
popa
push
cmc
pop
pop
insb
into
push
dec
push
adc
xor
les
es
out
push
fsubrs
dec
cmp
pop
push
push
stc
mov
out
push
and
push
mov
ljmp
jbe
or
mov
or
xor
out
jecxz
push
sub
mov
rorb
movsl
xchg
jle
cmp
lods
jg
mov
sub
iret
add
pop
fidivrs
stc
jne
pop
sbb
sub
mov
xor
add
mov
mov
mov
dec
mov
xor
xlat
push
lret
or
rcr
mov
outsb
add
push
pop
sbb
ds
dec
sub
xchg
jno
sahf
lret
mov
xchg
xor
fdiv
lret
sbb
jle
into
mov
pop
xor
push
lahf
cmp
aam
movl
or
xor
pop
leave
dec
in
into
addb
lret
or
dec
and
outsb
daa
call
xchg
jmp
push
adc
hlt
testb
popf
jp
jecxz
add
inc
in
xchg
pusha
pop
xor
outsb
adc
add
mov
push
or
mov
inc
out
scas
mov
jb
mov
add
inc
loopne
lahf
inc
mov
cmp
cmpsb
cwtl
mov
jg
call
pop
mov
mov
pop
lret
pop
enter
mov
and
leave
lock
rorb
xchg
subl
adc
fiadds
fistpl
dec
mov
pop
and
stos
out
adc
call
pop
ret
fwait
in
bound
insl
fsubl
xor
add
lock
xlat
aaa
ret
mov
imulb
and
pop
pop
sbb
inc
push
rcl
jns
inc
imul
int
dec
or
mov
pushf
fnstcw
mov
jl
outsl
sti
loop
jecxz
xchg
lret
add
push
sbb
aas
arpl
cmp
jp
test
ds
pop
or
ss
pop
setb
movsb
popf
xchg
push
push
or
popa
xlat
scas
int3
loop
mov
cmpsb
outsl
xchg
mov
lea
xorb
loopne
pop
scas
stc
inc
aas
xor
adc
sbb
cmpsl
imul
test
int
out
sbb
push
popf
ljmp
push
cmp
dec
repz
stc
mov
inc
push
arpl
scas
enter
in
or
repz
mov
iret
mov
ret
cmpsl
xchg
subb
es
add
mov
scas
cmp
mov
inc
jno
outsb
mov
mov
daa
xchg
sbbl
iret
push
cmc
clc
lds
cld
imul
mov
dec
std
inc
cmp
xchg
cwtl
push
jns
leave
mov
in
es
push
sbb
test
pop
jecxz
xchg
sub
ret
cmp
test
push
mov
into
push
adc
jecxz
aaa
pop
gs
push
mov
es
or
lods
mov
aas
dec
outsl
cmp
fs
divl
imul
or
aad
lods
test
push
inc
jbe
cmp
dec
movsb
out
pop
shll
or
adcl
fiadds
and
pop
test
pop
fnstcw
scas
dec
jle
out
mov
pop
dec
and
and
es
mov
mov
jmp
inc
iret
jmp
xchg
pop
or
insb
aam
dec
outsb
xor
sub
cmp
dec
aas
xchg
inc
sub
pop
jo
pop
jge
addw
movsb
dec
dec
pop
sbb
sti
fisubl
cmpsl
imul
and
pavgw
pop
test
lahf
add
jmp
dec
mov
or
inc
fistps
mov
xorl
pusha
inc
add
int3
hlt
es
lahf
repnz
ljmp
mov
cltd
xor
leave
dec
loop
xor
mov
pop
xor
pop
lcall
cmpb
adc
jmp
gs
inc
inc
and
xchg
pop
cmp
pop
dec
inc
or
sbb
push
add
dec
aas
mov
push
add
jecxz
push
shlb
add
add
sbbb
adc
add
or
pop
xor
outsl
mov
jmp
lods
xchg
push
hlt
jo
sbb
xchg
fildll
pusha
mov
pop
sub
test
icebp
jp
inc
xlat
xchg
lods
mov
push
sbb
add
pop
lock
pop
sub
cmp
je
mov
sbb
cmp
enter
adc
mov
ljmp
aaa
aam
lcall
mov
lcall
mov
stos
stos
mov
inc
gs
sti
call
and
or
add
sbb
xor
popa
dec
sub
push
sahf
push
enter
or
xor
icebp
add
call
test
fcomps
lret
lea
and
or
enter
pop
leave
mov
jmp
rcrb
out
jbe
inc
adc
push
fucomi
pop
sarb
xchg
xor
outsl
imul
or
lods
sbb
mov
outsl
and
arpl
fsubrs
jge
dec
dec
imul
int3
xchg
int3
cmp
sub
flds
loopne
psubd
push
mov
testb
pop
xor
jns
adc
mov
rsqrtps
mov
vmread
repnz
jge
xchg
orl
imul
dec
das
into
jno
jecxz
push
xchg
sbb
test
dec
mov
inc
add
daa
in
pop
sub
mov
cmp
sbb
xchg
pop
jb
pop
adcb
aas
sbb
mov
adc
add
imulb
nop
mov
mov
push
mov
pop
jmp
sbb
shl
add
int3
repz
aaa
lahf
pop
pop
mov
add
push
out
aad
out
lock
data16
filds
out
push
insl
cmpsl
pop
lds
inc
test
xchg
push
adc
lret
push
and
sti
mov
or
add
pop
mov
jg
lret
jg
push
push
or
cs
das
aad
and
fnsave
pushf
push
sbb
push
xor
push
lcall
mov
mov
mov
adc
xor
inc
lds
fsubs
aas
pop
push
inc
popa
lock
or
stos
push
sbb
mov
ja
jl
pushf
cmp
xchg
pushf
in
mov
ljmp
xor
fcomi
bound
jmp
movsl
arpl
mov
mov
xchg
pop
mov
push
in
in
sub
add
mov
repz
push
in
mov
das
aas
mov
faddl
and
dec
and
fisubs
das
or
shll
xchg
pop
cmp
lods
mov
lcall
js
xor
push
daa
out
lock
pop
ret
push
pop
and
andl
addb
xlat
cld
roll
hlt
mov
enter
in
movsl
push
rol
pop
ret
and
gs
xchg
xchg
xchg
and
cmpsb
cmp
cli
gs
jae
imul
xor
or
aad
jne
test
add
sti
mov
push
in
xchg
jecxz
in
adc
cld
cs
outsb
push
repnz
dec
fldenv
rorb
stc
push
and
mov
xchg
aam
sti
adc
cmp
cmp
or
or
test
pop
or
ljmp
outsl
rolb
notl
inc
inc
jbe
les
shll
jge
jno
mov
xchg
fldcw
shrb
ret
aam
cld
push
xor
rcrl
or
pop
push
dec
sub
loopne
aad
xorl
vandps
mov
inc
out
in
jg
push
popf
cs
push
pop
sub
es
loop
lds
jne
pop
sub
mov
loope
leave
pop
leave
push
xor
dec
aas
add
mov
add
xchg
sahf
daa
dec
jne
sub
inc
icebp
mov
xchg
xor
sub
cmp
stc
push
fiaddl
addl
data16
ljmp
lea
push
sub
sahf
sbb
daa
xor
mov
mov
push
in
mov
mov
lret
lea
and
or
and
daa
pop
fs
pop
jne
push
dec
pop
sub
mov
xlat
cli
jmp
stos
jns
pop
ds
inc
jne
pop
adc
dec
divl
push
sbb
add
mov
lds
idiv
cmp
lea
xor
push
inc
mov
push
cld
mov
data16
mov
inc
test
xlat
mov
dec
sahf
shll
call
xor
jb
push
pop
push
lahf
pop
inc
jg
jno
lods
jmp
mov
loopne
adc
loope
lahf
ds
inc
aam
xchg
xchg
push
sbbl
cwtl
sbb
xchg
inc
mov
cs
push
inc
ljmp
or
sbb
ficompl
xchg
imul
das
pop
pminsw
arpl
scas
lahf
inc
mov
movb
or
int
pushf
jo
imul
xor
rclb
sub
xchg
add
push
cli
mov
cmpsb
fsub
add
movsl
ljmp
jns
mov
insl
mov
movsl
or
cs
jns
mov
fnstsw
xor
into
pop
mov
mov
mov
in
ret
mov
pop
pushf
add
xchg
lods
or
in
jns
cmp
adc
lods
jo
mov
mov
sahf
mov
pop
sub
out
xor
push
lds
data16
jo
xchg
rolb
xchg
in
mov
push
iret
or
jmp
xor
cmp
pop
or
test
cmpb
mov
push
cmp
xchg
outsl
inc
xlat
sub
in
mov
sub
mov
xorb
imul
inc
push
orb
mov
fistpll
dec
cmp
and
and
sub
push
adc
subl
lcall
add
push
notl
pop
sahf
xor
xlat
jae
mov
test
subl
stos
in
fnstenv
rcll
push
dec
dec
subb
pop
sbb
mov
ror
push
push
sub
inc
sbb
adc
jmp
pop
mov
cmpsb
hlt
cmp
movsb
ret
shlb
test
adc
sub
gs
jp
pop
fwait
lods
pusha
pushf
ljmp
mov
into
bound
adc
push
and
mov
test
fwait
cmc
jns
ret
popf
mov
test
into
fsqrt
jl
call
popf
inc
test
mov
int3
iret
pusha
fwait
pop
in
ss
xor
pusha
adc
enter
rcl
pop
rcrl
mov
inc
in
mov
dec
push
cmp
sti
enter
jge
testb
inc
popf
out
sbb
test
xlat
sbb
mov
scas
and
bound
pop
push
push
nop
or
adc
dec
test
ret
imulb
pusha
jmp
inc
mov
icebp
push
fildl
js
pop
jl
adc
push
fisubl
dec
fisttpl
cmp
out
jmp
mov
push
mov
pop
mov
sub
call
sbb
in
xchg
cmpl
mov
adc
and
sbb
mov
cmp
out
xchg
push
addr16
inc
xchg
fcomps
lret
jmp
andb
outsl
mov
pop
scas
bound
push
shlb
jns
rcll
push
clc
push
cli
or
push
xor
movsb
cmp
pop
push
or
aam
push
imul
dec
adc
lahf
stos
xor
repnz
xor
pusha
jle
or
mov
sbb
dec
stc
idivb
mov
push
or
inc
mov
xchg
pop
decb
mov
pushl
pop
aad
sbb
out
scas
mov
lods
xor
or
mov
js
inc
shl
ret
xor
into
or
das
les
int3
cmp
mov
push
xor
insb
mov
imul
pop
cwtl
dec
sbb
daa
pop
pop
ds
enter
mov
sahf
ret
fwait
add
mov
cmp
inc
jmp
jae
imul
cmp
cmp
mov
ds
pop
mov
adc
sub
fisttpl
mov
rorb
push
sub
dec
mov
dec
mov
lahf
mov
out
lea
mov
sbb
stc
ljmp
dec
test
adc
inc
or
xchg
mov
mov
xchg
mov
sub
sub
push
xor
mov
and
cmp
dec
daa
out
add
adc
iret
mov
sub
jg
add
aaa
outsl
pusha
xor
hlt
jl
pusha
push
sub
lock
add
push
daa
cmp
loopne
in
sub
leave
xlat
fxch
pop
and
dec
sbb
mov
arpl
inc
mov
xchg
push
ret
notl
std
pushf
cwtl
sbb
test
pop
sti
xchg
sbb
inc
dec
js
cmpl
inc
out
ds
xchg
xor
jg
jmp
dec
repnz
leave
add
pop
mov
notb
pop
loopne
adc
pop
ror
pop
sub
lods
pushf
shrl
dec
add
les
rolb
xor
stos
repnz
cmpsb
loopne
mov
and
push
ss
popa
das
rorl
jp
sub
imul
cmp
jp
push
lock
jno
lcall
pushf
push
xchg
adc
pop
insb
idiv
mov
adc
sbb
push
iret
xchg
add
sbb
pop
cmp
or
lahf
cmp
test
pop
loop
aam
pusha
xlat
pop
mov
je
inc
xor
cmp
push
xor
jbe
push
stos
in
sbb
lcall
aam
inc
sbb
or
dec
ljmp
mov
andl
mov
mov
enter
enter
aad
mov
shr
push
mov
sub
int
sub
aad
pop
push
into
and
aam
out
and
es
inc
xor
xchg
icebp
lret
std
adc
inc
loope
imul
aam
cmc
xor
xchg
sbb
ja
sub
call
inc
dec
add
mov
popf
sub
xlat
adc
loopne
dec
push
jb
dec
add
pop
push
int
in
fdivrs
push
adc
jg
xor
cmc
dec
mov
mov
fs
xorb
popa
xor
aaa
addr16
pop
mov
aaa
add
lea
sbb
in
and
je
movsl
sarl
or
scas
mov
sub
sub
shl
xchg
jo
lret
lods
fidivrl
int
adc
jecxz
sub
xchg
sti
pop
frstor
mov
and
arpl
insb
scas
pop
push
mov
or
into
jle
loop
cmp
cmp
pusha
adc
lret
fxch
movsl
and
sbb
inc
jl
cmpsb
mov
out
adc
mov
mov
dec
push
xchg
add
stos
lods
pop
pop
pop
dec
ficoml
test
push
arpl
cwtl
mov
sbb
cmp
sahf
mov
adc
or
mov
jmp
orb
ljmp
push
pop
cmp
jle
iret
loop
or
loopne
or
pop
jnp
orl
sbb
lret
hlt
addr16
cmp
mov
jbe
aam
arpl
sbb
push
faddp
pushf
into
pop
jno
xor
push
loop
mov
sub
arpl
aam
xor
aam
out
int3
loopne
nop
nop
clc
sbb
xchg
pop
dec
jne
arpl
sar
std
xor
mov
shll
push
mov
in
in
jb
les
imul
ret
out
pop
add
insl
in
xor
inc
cmp
dec
inc
fldlg2
cmpsl
inc
adc
imul
cmp
out
fildll
dec
mov
sbb
cmp
nop
out
mov
int3
mov
cs
aam
call
sub
add
jno
xor
ret
xchg
or
jne
dec
dec
xor
xchg
add
outsb
mov
ffreep
sahf
lret
je
out
xor
or
push
aam
cmp
enter
ds
mov
xchg
xor
and
jb
idivb
dec
rcrl
xchg
clc
mov
stos
leave
and
push
mov
push
fs
mov
inc
mov
imul
xlat
push
add
jl
cmp
call
push
push
fistps
mov
and
ss
push
movsl
shrb
or
aaa
in
in
or
sahf
mov
or
pushf
test
cld
sub
lods
daa
cmp
mov
push
insl
mov
mov
xor
xchg
jmp
cmp
and
xor
loop
sar
jge
negb
in
imulb
fwait
aam
imul
xchg
cmpsl
call
in
aad
mov
jecxz
jg
sahf
mov
xor
dec
mov
and
sub
pop
test
lahf
sbb
push
dec
mov
or
test
int
pop
cwtl
in
cmpsl
pop
popf
mov
lret
test
mov
mov
sub
or
into
jbe
pop
hlt
xor
jge
popa
sbb
imul
daa
mov
mov
clc
pop
cmp
push
in
or
mov
xchg
push
mov
push
lock
hlt
cmpl
daa
int
mov
inc
or
inc
test
cs
jno
dec
xchg
shrb
or
inc
jnp
xchg
aad
inc
xor
mov
loop
xchg
push
mov
dec
jmp
sub
int
push
xor
stos
push
ret
data16
fisttps
addr16
add
jb
and
pop
cwtl
inc
das
adc
add
inc
xchg
cmp
push
hlt
and
dec
js
das
test
daa
rorl
push
add
mov
jno
in
fdivs
jg
xchg
cld
cli
or
stc
lods
push
rcr
xchg
or
int
adc
sahf
add
add
pop
push
js
xor
loop
mov
cmp
out
adc
sbb
adc
dec
aam
lret
mov
jne
pop
out
or
mov
aaa
pop
xchg
mov
mov
cmp
daa
mov
fisubl
inc
dec
sub
loope
inc
roll
fldcw
movsb
dec
push
dec
adc
push
loopne
scas
lea
jg
mov
test
sub
ret
mov
or
cmpsb
movsl
sbb
dec
dec
fildl
iret
push
xor
mov
mov
pushf
daa
nop
or
push
loope
movsl
les
adc
jle
push
pop
inc
push
sbb
arpl
or
inc
sahf
scas
adc
sbb
pop
xchg
shll
mov
push
sub
ss
out
arpl
inc
cmp
pop
pushf
lret
cmpsl
mov
fdivl
and
mov
neg
cmp
inc
fwait
lds
ljmp
and
inc
fmul
in
jmp
mov
sti
mov
mov
mov
cmpl
sbb
inc
or
stos
push
mov
out
xchg
fiaddl
mov
mov
cmpsb
push
push
inc
jl
bound
inc
inc
inc
pandn
ja
mov
and
cwtl
shll
sub
repnz
stos
cwtl
push
movsl
lock
xor
mov
cmp
pop
inc
stc
cli
mov
add
fs
std
js
stos
mov
imul
sub
daa
adc
cmp
mov
fidivs
xor
lock
dec
inc
adcb
dec
outsl
ss
cmpsl
daa
mov
push
xchg
sbb
sbb
inc
mov
nop
es
loope
fidivrs
xchg
rcll
cmp
leave
jle
jl
aam
stc
aad
out
sub
mov
outsl
sbb
loope
cltd
sub
mov
push
rcr
xchg
jecxz
mov
xor
push
sub
mov
int3
mov
mov
cmpps
xchg
loop
adc
loope
pop
aas
ss
inc
loopne
adcl
roll
sub
mov
out
lret
cld
mov
xchg
xlat
add
jmp
fucomp
xor
in
mov
les
stc
fwait
or
xchg
in
cwtl
pushf
out
jg
shl
and
int3
cltd
lret
pushf
in
stos
or
mov
jns
stos
push
fbstp
push
dec
out
loop
xor
repnz
loop
in
leave
or
sbb
pop
jns
add
pusha
sub
into
jae
or
ror
imul
leave
xorl
lcall
sub
mov
stos
jb
insb
and
imul
pop
dec
lahf
jb
mov
rcrl
or
mov
aas
aad
add
xor
stc
inc
bound
jnp
sub
mov
cli
jnp
sbb
dec
fsubrl
fiaddl
hlt
or
dec
jg
cltd
bound
ret
aas
cwtl
sbb
cli
or
mov
push
sbb
fstps
inc
orb
sub
mov
shll
subb
mov
ret
inc
dec
in
sub
mov
jo
pusha
aaa
xor
cmpsb
mov
maskmovq
xor
outsb
ficoms
outsb
cmp
jae
jo
cmc
mov
adc
jecxz
cltd
xor
xchg
xchg
push
or
sbb
or
jo
xor
ds
cmp
imul
jno
sbb
and
push
xchg
sbb
cmp
xchg
xchg
cmp
sbb
push
rcll
outsl
xor
aas
test
lods
repnz
out
sub
and
inc
inc
js
mov
push
fisubs
mov
mov
sub
cmc
sub
ljmp
lea
mov
shll
push
and
or
das
lods
dec
pop
notl
cmpsb
pop
popf
mov
sbb
xor
pop
jp
cwtl
enter
adc
and
inc
hlt
stos
ja,pt
inc
addr16
push
mov
jbe
rclb
and
arpl
leave
inc
mov
popa
pop
and
xlat
and
xchg
push
push
mov
mov
pop
in
mov
repz
jo
xorl
fildl
mov
fisubs
or
iret
mov
dec
and
inc
lds
ja
insl
jae
sbb
notl
scas
mov
sub
jmp
cltd
jae
jnp
stos
test
repnz
lods
bound
and
fstpl
ljmp
push
add
nop
out
repz
shrb
and
xchg
mov
pop
mov
jnp
adc
cld
pavgb
idiv
out
test
add
movsb
mov
xor
jne,pn
jae
stc
xor
adc
mov
lock
fsubrp
and
sub
xchg
lods
mov
and
rdtsc
rol
orb
test
add
pop
inc
hlt
fstp
scas
mov
jns
xchg
inc
push
inc
into
popf
fnstcw
xchg
mov
mov
roll
adc
pop
ds
sbb
into
sbbl
cwtl
pop
insb
push
sbb
xchg
inc
adc
int3
adc
call
in
call
xchg
inc
mov
jbe
in
aas
xchg
mov
and
je
lock
mov
adc
sbb
push
lea
push
xchg
sbb
sub
push
jl
mov
adc
cld
dec
push
data16
sub
out
stos
mov
mov
aas
mov
adc
add
imul
jmp
jp
lret
cmp
and
xchg
mov
dec
ss
inc
dec
movsb
mov
dec
cmp
je
add
jmp
adcb
std
cmp
lret
ss
add
push
inc
iret
dec
adc
jno
clc
stc
adc
int
pop
shrl
lahf
sti
and
es
adc
mov
mov
cli
and
inc
or
jmp
or
divl
out
cmpb
push
mov
test
or
insl
xor
or
aaa
aam
sahf
xchg
mov
lea
addr16
xchg
inc
out
add
icebp
pop
sbb
lcall
push
insl
sub
xchg
and
cwtl
jmp
ss
rolb
or
jb
outsl
loope
mov
mov
mov
xchg
or
pop
sub
fisttpl
jecxz
js
icebp
sub
mov
outsl
dec
jg
nop
pop
clc
pop
xchg
lret
add
inc
clc
lds
and
pop
mov
andb
mov
cmp
mov
mov
fcmovne
test
dec
mov
jl
push
push
call
aaa
addr16
mov
fidivl
mov
sbbl
js
insb
insl
lds
sbb
fsub
push
into
je
in
int3
xchg
inc
mov
push
pop
xchg
mov
xor
cmp
adcl
fnsave
repz
sbb
fsubl
jo
call
xrelease
inc
adc
jo
mov
inc
xor
stc
mov
arpl
mov
mov
xor
jl
stos
jle
mov
das
arpl
sbb
xchg
xor
or
pop
push
loopne,pn
leave
jns
jge
add
nop
push
movsl
out
enter
fsubp
inc
aad
sbb
daa
fcoms
test
int
cmp
ljmp
lds
sub
shr
aaa
xchg
dec
lock
or
jns
sub
insl
repz
call
lods
jge
cmp
jle
stc
sub
mov
arpl
cli
gs
sbb
insl
hlt
sbbb
cmpsb
jp
ret
or
pop
imul
mov
inc
icebp
push
fwait
cld
mov
sbb
or
or
add
xchg
pop
push
xchg
mov
push
scas
mov
inc
pop
lahf
movsl
mov
mov
sub
mov
mov
leave
loopne
jno
sbb
and
push
in
mov
xchg
call
push
mov
cltd
cld
xchg
add
or
cmp
push
jmp
imul
or
xor
pop
outsb
push
stos
int3
push
inc
pop
outsl
inc
xor
cmp
int3
add
xor
or
mov
das
inc
loope
loopne
ret
xchg
cmp
stc
scas
arpl
push
dec
or
fildll
push
mov
stos
cwtl
mov
pop
fsubs
imul
arpl
stos
fistps
mov
aad
xor
scas
adc
into
add
xchg
adc
mov
daa
dec
mov
ret
hlt
out
aam
cmp
aaa
pop
rcl
sbb
dec
cmpsl
pushf
fwait
inc
sahf
decb
adc
mov
adc
mov
mov
adc
mov
mov
loop
push
test
inc
std
sub
sub
and
pop
mov
js
repnz
sub
inc
adc
repz
cmc
xchg
pop
sbb
dec
outsl
call
pop
stos
popf
mov
mov
push
mov
nop
sahf
fwait
mov
xlat
andb
lods
das
arpl
out
and
sub
inc
or
and
les
icebp
jne
scas
and
int
outsb
popa
push
adc
ss
mov
push
xchg
cmp
mulb
clc
insb
aad
fimuls
cmp
push
bound
xor
cltd
fidivrl
loopne
lock
jo
mov
cmc
push
in
pop
and
ds
popf
cmp
cmp
jno
dec
dec
xor
cmc
and
and
pushf
xor
fldln2
sbb
xchg
mov
sub
mov
test
jno
xchg
stc
xor
sbb
es
mov
leave
xor
xorb
cmpsb
sti
sbb
and
mov
mov
xor
cmpsb
stos
push
lock
scas
roll
sub
imul
pushf
mov
xor
inc
add
xchg
xchg
lock
scas
cmp
cmpsl
fimull
cltd
dec
int3
jmp
cmpsl
push
addr16
and
jns
in
dec
stos
xchg
gs
jae
mov
inc
rcr
repz
stc
dec
repnz
mov
and
subb
mov
fdiv
and
cmp
xchg
lret
rcr
jecxz
iret
push
adc
in
fs
mov
fsubrl
cmpsl
test
jle
mov
leave
out
gs
ljmp
insl
test
and
test
jns
dec
insb
jno
popa
push
xchg
mov
pop
out
jb
into
rclb
das
ret
pop
scas
js
cmc
gs
mov
mov
lds
adc
imul
push
jns
mov
and
or
lods
sub
pop
mov
push
mov
and
movsl
sar
add
data16
xor
addb
add
sub
sbb
imul
xor
or
test
mov
ss
sub
or
mov
pop
push
push
pop
mov
mov
mov
inc
dec
enter
mov
pop
cli
mov
jns
repz
xor
leave
rclb
divb
xor
push
cmpsl
mov
dec
out
std
jnp
pop
pop
xchg
xchg
pop
pop
clc
mov
xchg
inc
les
leave
xchg
adc
push
aas
out
loope
ljmp
adc
and
jp
sub
jae
add
sbb
ret
ljmp
in
inc
lds
mov
dec
cmp
push
mov
mov
sub
stc
nop
das
lock
aam
int3
jno
into
test
jnp
mov
test
push
add
push
daa
out
loop
pushl
clc
pop
or
lods
flds
xchg
add
sahf
nop
jecxz
out
int3
popa
xor
add
dec
push
xchg
xor
xchg
pop
roll
adcb
dec
enter
and
jbe
mov
out
js
and
adc
int
mov
xchg
jl
fistpll
dec
ss
data16
out
add
mov
sahf
leave
jno
mov
add
jne
cmp
pop
or
pop
fwait
leave
adcl
mov
les
aad
loopne
push
outsb
jae
mov
ss
or
and
sarl
jo
xor
dec
mov
adc
unpcklps
fsubrs
call
push
and
fwait
or
mov
scas
int
mov
addl
rclb
push
out
push
shll
scas
mov
test
jge
pop
scas
cmpsb
or
push
push
lret
mov
mov
loop
pop
clc
notb
scas
jno
and
arpl
cltd
je
or
inc
leave
mov
les
iret
and
inc
loop
aad
or
aam
sahf
jbe
gs
shl
repz
mov
fcmovb
add
insl
or
into
out
not
in
outsb
cltd
jno
lock
or
adc
or
xor
pop
dec
add
pushf
xchg
in
bound
nop
add
mov
clc
rcrl
xor
mov
gs
cmp
or
mov
cmc
imul
sti
jmp
jns
add
dec
mov
add
dec
xor
sub
xchg
xchg
add
push
cmpsb
pop
aaa
adc
sahf
arpl
jl
mov
push
inc
lret
jbe
sbb
jge
sti
mov
ret
mov
clc
movb
sub
pop
jg,pt
std
xchg
cli
repz
inc
mov
pop
inc
mov
scas
out
scas
fdivrs
lret
xor
shrl
fsubr
mov
cmp
in
cmc
out
add
cmp
in
and
inc
cltd
jae
sti
clc
pop
fstpt
push
push
fimull
fs
jo
xor
or
mov
xlat
ds
bnd
sbb
sbbb
push
pop
push
mov
lret
xlat
xor
idivl
sbbl
ror
scas
stos
ja
mov
loop
hlt
xchg
jae
orl
add
movb
push
dec
push
shlb
jae
pushf
mov
mov
xchg
inc
iret
fiaddl
es
fwait
lret
das
cmpsl
mov
sub
ds
add
leave
mov
mov
inc
adc
mov
lcall
repnz
mov
jae
jnp
fistpl
aas
in
sbb
dec
das
sub
or
jecxz
pop
ret
adc
iret
sbb
xor
mov
shlb
mov
push
mov
sarl
add
notl
fadds
dec
fistps
repnz
mov
jp
in
cld
mov
or
shrb
or
mov
adc
mov
clc
and
scas
lret
lods
fisttpl
lds
mov
add
jns
pop
and
incb
push
sbb
add
sbb
loopne
mov
mov
jmp
mov
inc
adc
dec
loop
in
mov
addl
sti
daa
xor
ss
mov
dec
cmc
insb
fistps
mov
faddp
mov
pop
xor
fcoms
enter
inc
add
addr16
insl
mov
jecxz
push
add
mov
xor
stc
sbb
mov
les
mov
jbe
jecxz
stc
xchg
jae
mov
dec
xor
push
pop
xchg
sarl
push
shll
sbb
cmp
push
mov
jecxz
out
xchg
aas
pop
into
sub
mov
loopne
fistl
pop
add
mov
int
cmp
insl
cltd
xor
sub
pop
fldcw
adc
xchg
and
jecxz
xor
and
mov
nop
js
fmul
scas
rcrl
inc
mov
add
fstpt
ds
fwait
or
push
stos
dec
mov
stc
mov
sbb
sbb
inc
out
sti
xchg
add
imul
out
adc
outsl
movsl
popf
push
adc
sbb
xchg
cmp
sbb
inc
cmpsb
jne
and
adc
pop
jmp
mov
out
int3
lock
fimull
aam
sti
jle,pn
out
leave
cmc
std
imul
push
mov
inc
add
fistpll
jl
inc
pushf
aaa
sub
xchg
mov
mov
daa
mov
jne
jb
mov
xchg
test
loopne
jnp
push
pop
and
cli
dec
mov
xchg
outsb
pop
aad
int
ljmp
stos
iret
xchg
cmpsl
mov
jle
xchg
movsl
mov
fs
gs
jl
mov
mov
mov
push
scas
pop
scas
sbbl
inc
jg
add
leave
pusha
push
shrl
jmp
jb
mov
cld
arpl
out
cmp
call
fimull
fcmovne
ss
iret
mov
icebp
test
ffree
jns
mov
sub
xor
mov
pop
sub
and
lods
mov
push
sbb
sbb
sbb
dec
jmp
das
outsb
lret
rorl
inc
lods
mov
adc
sbb
jno
cltd
inc
std
stc
ss
out
push
das
push
popa
or
lods
lret
fiadds
and
pop
pop
je
mov
mov
repz
inc
jmp
xchg
sbb
stos
and
gs
arpl
fistps
scas
mov
mov
sbb
outsb
vminpd
xchg
aaa
xor
repnz
pop
cmp
mov
lret
js
in
negb
add
sub
mov
or
or
add
ret
fsubs
nop
fidivs
jp
popa
sbb
popf
push
test
cmpsb
gs
ljmp
imull
sahf
cmp
sub
cwtl
lods
cmpb
jl
cmp
stc
sbb
in
mov
jmp
stos
and
adc
in
dec
adc
test
lods
clc
dec
rcll
lods
mov
loop
lret
dec
daa
icebp
test
add
add
fldcw
mov
cmp
jb
ljmp
aaa
jbe
adc
repz
lods
xchg
dec
dec
cmpsl
mov
ret
int3
test
sub
mov
cmc
xlat
dec
and
jmp
cmc
cmc
sbb
push
loop
jb
xchg
xchg
stos
outsl
mov
nop
stos
std
sbb
iret
mov
jb
idivb
aaa
mov
fsubs
adc
sbb
adcl
lock
push
xorb
jae
sub
sbb
add
stos
std
mov
cmpsb
xchg
ret
iret
adc
push
sbb
mov
test
mov
push
xchg
imul
rcll
jl
shrb
and
arpl
sbb
cmpsl
test
test
push
scas
mov
xor
pop
lret
imul
sarb
and
ja
jge
inc
imul
xchg
pop
loope
adc
cltd
mov
mov
test
mov
adc
push
xor
pusha
pop
ss
pop
pusha
enter
shr
or
std
adc
or
bound
into
or
adc
out
dec
adc
insb
mov
aad
stos
jl
add
sub
mov
and
std
mov
push
xchg
jmp
rorb
leave
out
jns
sahf
cmp
inc
lds
inc
loop
push
outsb
push
xchg
mov
inc
fldenv
aaa
add
call
movsb
jle
mov
pusha
jns
fwait
cmpsb
leave
sub
add
or
pop
jb
rcl
push
leave
call
xor
inc
jno
gs
push
xchg
je
sbb
stos
pop
and
out
fldt
push
mov
test
or
fcomps
push
jb
mov
rolb
aas
fldenv
bound
cmpsb
and
sahf
shrb
rorb
pop
or
adc
negl
data16
in
ja
das
or
lahf
cmp
xor
dec
jl
and
jbe
cmp
jle
insl
je
and
sub
daa
nop
rclb
push
pop
jno
lret
stos
mov
push
dec
stos
iret
nop
sub
cs
ja
loop
xor
lods
sub
adc
shll
in
cli
mov
fimuls
cld
gs
add
jns
pop
adc
pop
inc
mov
ss
xor
fsubl
cwtl
dec
pop
cmp
adc
subl
iret
arpl
mov
cmp
gs
in
pushf
push
movsl
jecxz
lea
stos
sub
daa
mov
int
imulb
pop
lahf
sub
out
addl
jo
push
add
fidivs
sbb
loopne
cwtl
cmp
fdivrp
lret
insl
aas
aam
jecxz
notb
cmpsb
or
push
cmp
mov
and
mov
rorb
cltd
mov
mov
push
xchg
fwait
lock
push
push
ds
add
cmp
push
cmp
mov
sbb
pop
mov
inc
pop
cmp
pop
ds
popa
push
shl
jnp
outsb
add
rolb
cmpsb
data16
inc
mov
or
je
sti
mov
movsb
nop
scas
jbe
cltd
subb
pop
shr
add
cltd
je
stc
lds
push
aam
pop
mov
mov
cwtl
je
pop
push
mov
mov
dec
std
xchg
jns
cmp
jbe
rcrb
pop
in
jecxz
adc
push
popf
stos
sbb
mov
mov
sub
out
pusha
ss
adc
mov
insl
cmp
push
movsl
mov
push
es
aas
jg
jle
xchg
xor
sti
inc
and
imul
pop
lret
subl
xchg
sti
std
imul
and
sahf
push
aad
das
repz
stos
jb
sbb
mov
sbb
fistpl
fsubs
lods
movsb
out
aas
jg
sbb
bound
or
and
das
icebp
push
cmp
lret
es
and
mov
pop
jge
jb
mov
cltd
data16
pop
mul
ds
adc
xchg
jnp
xchg
push
lea
cli
fldenv
stc
cmp
repz
in
push
in
aas
or
xchg
imul
arpl
cli
fstps
xchg
cmp
leave
adcb
jecxz
add
cmp
out
cld
insb
xchg
mov
pop
movsl
pop
in
mov
int
or
jno
pop
and
and
jmp
out
cmc
fiaddl
test
push
jge
lret
push
mov
aam
inc
inc
sbb
pop
cmpsb
shlb
xlat
xchg
lock
int
xor
cmpsb
pop
data16
incl
loop
inc
adc
sub
cmp
xchg
jmp
xchg
mov
xchg
cmpsl
adc
pushf
pop
xchg
ficoml
daa
inc
adc
pop
pop
push
pop
sti
or
iret
in
outsb
cmp
call
in
mov
pop
cs
loope
sub
sub
cli
lods
repnz
loopne
or
pusha
shrb
sahf
mov
test
fdivl
ja
aaa
cmp
push
scas
iret
dec
ss
fwait
mov
mov
mov
popf
mov
jo
mov
rcll
or
cmpb
aas
xor
call
jb
push
ret
test
adc
xchg
fisubrs
jmp
adcb
push
pusha
inc
add
aad
fdivl
icebp
mov
pop
ss
jns
pop
xchg
out
mov
jnp
xor
popa
xchg
sub
mov
ja
push
movl
into
xchg
mov
cli
adc
ret
jecxz
cmpsb
fidivl
daa
push
or
push
repnz
mov
push
pop
xor
mov
pop
sahf
insb
loop
aaa
shll
sarl
or
repnz
xor
repz
sti
xchg
and
xor
gs
daa
pushl
cmp
lods
push
jmp
outsl
mov
push
mov
clc
mov
into
xlat
sub
xor
jg
xchg
sub
sbb
dec
loopne
mov
adc
mov
test
xchg
sbb
and
fldz
into
push
and
push
or
bound
cmpsb
out
stos
test
xchg
push
mov
pop
in
out
sbb
sbb
and
daa
fisubrl
xchg
push
push
aas
inc
loopne
ret
insl
int3
sbbb
sbb
xchg
ss
sub
inc
or
vpshlb
cli
adc
mov
test
pushl
das
or
imul
jle
jae
lds
fwait
repz
adc
mov
addr16
jnp
int
sub
push
ljmp
out
shll
lcall
mov
dec
dec
aad
mov
iret
stc
xchg
dec
in
out
mov
out
mov
mull
and
movsb
out
fisubl
mov
rclb
xchg
lods
cmp
dec
lea
sub
inc
test
sbb
insb
out
cli
mov
xor
bound
daa
mov
jge
in
jne
lcall
push
push
mov
out
in
ljmp
cmp
dec
stos
clc
dec
or
sub
jae
out
jmp
outsl
lret
pop
xor
int
fnclex
and
mov
ss
arpl
mov
xor
iret
ficompl
insb
stos
jbe
js
mov
scas
jg
js
jle
or
sub
adc
cmp
test
xchg
mov
js
lcall
dec
scas
faddp
daa
pop
inc
int3
scas
addl
loop
add
loop
addr16
mov
add
es
push
test
insl
popa
dec
cld
push
mov
ret
pusha
cmp
mov
or
add
int3
xchg
mov
mov
shlb
dec
xor
and
popf
sbb
inc
fnsave
mov
daa
in
dec
outsb
inc
mov
sub
push
dec
and
mov
xchg
adc
sub
mov
hlt
mov
jecxz
sti
lret
sbb
and
add
sbb
aaa
icebp
mov
dec
sbb
lret
jmp
lods
mov
or
shr
in
cmp
mov
dec
add
mov
daa
addr16
jo
mov
sub
sbbl
scas
imul
lock
xchg
xchg
js
imul
fiadds
test
or
add
adc
lret
repz
cmp
push
jno
adc
cmp
jbe
adc
or
movsl
pop
fadds
dec
adc
xchg
or
pop
ret
pushl
add
xor
jo
push
or
adc
icebp
ss
mov
mov
dec
xor
imul
dec
jbe
push
stos
lods
and
add
rcrb
push
les
mov
jp
test
ljmp
jmp
and
sbb
xchg
imul
or
mov
pop
cmp
and
sbb
mov
sbb
push
dec
mov
mov
sub
jno
inc
test
pop
xchg
mov
nop
mov
mov
cmpsb
arpl
adc
xchg
mov
bound
sahf
fnstsw
cmpsl
in
daa
push
lods
enter
jo
rolb
or
mov
push
cmp
fucomp
or
nop
bnd
movsb
std
mov
mov
and
insl
sbb
push
xor
int
push
ficoml
test
icebp
add
rcll
lret
push
mov
sub
jae
jmp
cltd
or
xor
push
jp
inc
scas
jae
inc
dec
cmc
push
mov
ret
sub
mov
add
fs
outsl
lods
jle
dec
xor
push
push
inc
add
push
xchg
push
jecxz
shll
repnz
imull
int
bound
xor
adc
stos
pop
adc
add
lea
stc
retw
mov
mov
in
sbb
add
jnp
shrb
lods
ja
mov
sbb
std
fsubl
mov
subb
stc
pop
aaa
into
in
lret
rdpmc
ss
adc
add
stc
sub
push
xlat
push
xchg
xlat
mov
cmp
jno
add
out
xor
mov
dec
inc
xor
ljmp
mov
or
sbb
xor
fisttpl
fcmove
adc
test
push
inc
or
in
pop
jne
test
jae
push
call
outsl
add
inc
inc
xchg
mov
cli
jle
push
inc
shll
cmp
mov
or
add
repz
rclb
pusha
mov
pop
inc
dec
sub
add
or
or
xor
shl
testb
ja
nop
dec
rcrl
lahf
pop
mov
jns
jmp
sub
icebp
sub
nop
aam
out
pushf
lahf
lea
mov
sahf
inc
fdivl
mov
dec
pop
leave
dec
inc
mov
xchg
les
lcall
clc
movsb
xor
filds
decb
jle
cs
cltd
adc
ja
pop
push
inc
mov
inc
fmull
sbb
bound
pop
pop
push
sbb
adc
and
cld
mov
movsb
mov
lahf
mov
sbb
in
mov
aad
pop
fdivs
or
movsb
pop
jb
adc
insl
sub
in
test
xchg
cmp
adc
loopne
and
dec
and
out
jmp
sarl
and
movsb
lret
pop
xor
call
or
out
out
sub
out
daa
cmc
rcll
jno
add
add
jbe
mov
dec
mov
sbb
decl
popf
or
inc
mov
es
inc
movsb
aas
push
dec
outsb
mov
das
lea
cmc
or
in
out
sti
les
dec
adc
jg
pushf
pop
stos
sbb
sbb
popf
movsl
pop
push
fmull
mov
xor
push
addr16
jae
or
andl
rcrl
cmpsl
jb
and
mov
push
in
pop
out
stos
push
cmc
mov
inc
xor
mov
lret
push
shrl
insb
sbb
push
cmp
and
sub
out
shrl
outsl
xor
flds
scas
fnstcw
ss
jp
jecxz
adc
add
loop
test
sbb
mov
jp
xchg
mov
decb
xchg
sarl
jae
insb
icebp
mov
adc
sbb
into
add
mov
xor
inc
data16
popf
jge
jbe
adc
sti
xchg
pop
xchg
mov
jmp
cmp
insb
fwait
cmpsb
je
sbb
pushf
fildl
xor
imul
mov
and
lods
mov
stc
mov
push
out
cmpsl
xor
subb
pusha
das
gs
in
jg
push
fwait
lea
add
ja
data16
rcrl
stos
mov
inc
stc
adcl
aad
sbb
push
pushf
cld
xchg
xchg
or
pushf
stos
push
stc
imul
jo
pop
dec
mov
cmp
sub
jle
out
push
push
fcoms
std
into
dec
inc
push
dec
and
mov
pop
adc
push
pextrw
sbb
inc
dec
test
jbe
xchg
mov
aam
xor
xchg
insl
mov
jecxz
repz
pop
mov
insb
xchg
jns,pn
iret
mov
addr16
cmp
scas
xor
lahf
mov
filds
in
outsl
pop
sbbl
xchg
ljmp
stc
cmpb
jb
push
inc
jg
sub
adcb
sbb
jp,pn
pop
mov
lahf
rol
jl
popf
sbb
cmpsl
repz
inc
or
call
or
leave
mov
cmpsl
pop
jle
lods
in
push
nop
pushf
in
add
sbb
rorl
imul
sbb
or
popa
push
and
mov
push
nop
int3
cmp
mov
mov
xchg
add
mov
dec
push
cwtl
xchg
xor
or
jmp
dec
sub
add
pop
or
mov
push
enter
inc
adc
mov
dec
cld
xlat
fs
cmp
jl
adc
inc
nop
jns
out
jae
jbe
push
jge
outsl
pop
imul
imul
mov
test
mov
sahf
aad
fisubrs
sbb
inc
lock
ja
lea
aam
cld
mov
cmp
cli
cmp
repnz
mov
mov
push
pop
add
and
lock
test
int
dec
cwtl
cmp
or
dec
dec
xchg
fdivl
jo
xchg
popf
sub
cld
mov
ret
push
and
jbe
xchg
mov
ficoms
out
push
inc
jb
mov
lock
std
mov
pop
pop
sub
mov
ss
xor
add
push
push
jl
fnstcw
testl
sub
inc
lea
or
pusha
movsl
cmc
adc
cmp
jecxz
inc
cmp
inc
and
into
mov
or
add
in
test
lret
add
inc
fsubs
xchg
loope
dec
loopne
sub
lcall
int3
aas
jecxz
sbb
xchg
cld
roll
loopne
and
xchg
cmpsb
call
insl
cwtl
shlb
ret
cmc
loope
adcb
xchg
nop
test
sub
jge
mov
cltd
sub
jmp
enter
jecxz
fidivs
leave
shrb
mov
jae
inc
jae
and
cmpsl
or
daa
or
cmp
sub
rcrb
lret
aam
imul
mov
sbb
inc
mov
xchg
cs
pop
xchg
mov
or
or
push
test
push
pop
mov
sbb
scas
adc
orl
xchg
and
and
push
pop
sub
pop
inc
sbb
repz
jge
data16
adc
cmp
sub
rolb
mov
xor
sbb
pop
xchg
movsb
xchg
push
fwait
lds
push
and
adc
sti
mov
push
and
lock
sbb
jb
cmp
shll
bound
xchg
xchg
lock
cmp
jb
mov
gs
adc
pop
scas
aad
clc
jge
test
out
cs
in
mov
cmp
loopne
pop
push
lock
aas
inc
adcb
adc
ss
fisubrl
xor
cli
setp
dec
or
test
xchg
divl
push
adc
movsl
mov
js
and
sti
mov
ror
mov
in
jae
push
orl
fcmove
jno
xchg
fwait
cli
lcall
jno
xlat
cmpsl
rclb
jle
mov
mov
mov
push
lock
mov
call
shll
dec
jle
ss
or
out
push
movsb
xor
repz
pop
mov
or
pop
and
fisubs
dec
jne
cli
mov
xchg
pop
fldt
es
iret
jns
dec
mov
sti
les
pop
or
stos
or
xchg
into
xchg
mov
mov
rorl
xorl
jge
addl
sbb
inc
mov
jae
or
cwtl
inc
negl
ss
outsl
aaa
xchg
sbb
outsl
mov
jns
outsb
lock
jge
inc
mov
aaa
loope
aas
jg
lods
dec
mov
cmpsb
jge
cltd
test
pop
mov
push
mov
sarl
clc
bound
cld
cld
in
sub
lcall
out
mov
aas
add
pop
jle
cmp
or
test
dec
imul
orl
dec
jo
out
inc
sub
aad
jp
push
jmp
or
xchg
andb
shrb
fdivr
out
mov
jb
or
and
pop
xchg
les
sub
xchg
loop
daa
or
mov
ja
mov
mov
push
out
pop
lret
add
sub
pop
int3
out
stc
pop
xor
std
inc
push
lcall
pusha
movsb
out
adc
adc
dec
cmovg
cltd
aad
mov
lds
popf
es
scas
loope
mov
shrl
ret
push
sbb
jl
or
ljmp
lret
test
sbb
dec
mov
shrb
pop
cli
jne
in
enter
dec
push
cmp
mov
mull
add
push
repz
test
and
jb
rorb
adc
pop
movsl
loop
inc
push
mov
xor
mov
clc
dec
xorl
arpl
daa
ss
lea
push
xchg
je
imul
xchg
and
pop
or
fbld
mov
xchg
mov
xchg
jns
ret
fwait
mov
mov
aad
test
sbb
jecxz
sti
js
dec
mov
cmpsl
push
sbb
mov
inc
aam
adc
in
or
sbb
les
push
or
and
fwait
mov
lcall
mov
rorl
dec
decl
fldcw
or
mov
int
dec
inc
jo
adc
das
fcoml
hlt
cmpb
adc
push
pop
push
in
sbb
sub
xor
stos
push
adc
popf
jp
xchg
mov
arpl
jmp
mov
aas
mov
cli
fwait
xabort
mov
jb
imul
push
pop
push
aad
loop
sbb
add
cmpsl
pop
adc
int
popf
lock
fidivrs
inc
push
cld
movsb
push
inc
out
sub
mov
add
lods
sub
aaa
push
sete
adc
scas
in
push
push
add
push
or
dec
stc
std
xor
je
pop
push
cs
sbb
jns
shlb
sti
test
outsl
cmp
pusha
pusha
popa
mov
pusha
mov
pushf
aam
into
lcall
mov
stc
es
faddl
int3
jl
inc
out
pop
pop
jmp
mov
push
icebp
pop
jb
fwait
cltd
jl
sbb
mov
ret
inc
in
rorb
or
rorl
jb
jae
adc
dec
repz
or
js
fdiv
inc
xor
or
in
cmpsl
cwtl
ljmp
cvtdq2ps
mov
jns
push
pop
xor
cmp
mov
push
sub
and
jmp
mov
in
sbb
xchg
push
jl
dec
aas
je
fnsave
aam
xchg
addl
adc
loopne
int3
repnz
mov
and
and
push
push
xchg
add
cs
outsl
cmp
outsl
cs
orb
or
lods
pop
inc
pop
loopne
std
sbb
pop
mov
lods
pop
sub
mov
pop
icebp
mov
jo
int
xchg
add
adc
xor
jae
xor
sbbl
jbe
push
inc
es
out
sbb
add
sbb
add
xor
jnp
mov
push
loope
jp
push
movsb
add
sbb
scas
sbb
cmpsb
popa
aaa
mov
fwait
sarb
jns
je
or
pop
inc
mov
fisttpl
xor
scas
cmp
in
add
inc
shl
fcomps
mov
mov
loop
push
sbb
push
inc
add
mov
lods
cli
pop
inc
inc
jg
add
aam
inc
add
sub
xchg
sbb
xchg
fisttpll
push
and
fcomps
adc
pop
cltd
mov
es
dec
cs
jmp
sbb
sbb
pop
xchg
mov
xor
wbinvd
cmp
sbb
push
jns
loope
jle
mov
ret
les
cmovge
xor
cmc
in
and
aam
pop
popa
dec
fistps
pop
fcoml
imul
xchg
aas
daa
pop
xchg
mov
sub
push
adc
lret
stos
mov
push
push
or
test
popa
push
lock
sbb
xor
fcoms
inc
xchg
bound
lea
jecxz
pmulhw
inc
daa
cmpl
lods
add
add
rclb
mov
pop
andl
das
cmp
fmuls
xor
sbb
repnz
test
aad
dec
push
xor
test
dec
push
andb
mov
in
inc
mov
cmc
mov
xor
dec
gs
inc
pop
cmp
inc
jmp
les
repnz
hlt
ds
sbb
fwait
sahf
xor
lds
and
mov
mov
add
inc
xchg
jno
dec
inc
and
insb
adc
mov
and
sub
and
sbb
je
scas
adc
rorl
pop
dec
xor
xor
stos
sbb
dec
cld
mov
ja
inc
dec
stos
nop
ljmp
inc
add
in
rcrb
xchg
mov
movsl
into
push
push
dec
push
pop
or
cmp
mov
push
jmp
aad
loopne
lds
add
and
mov
cmp
jb
in
pop
stc
mov
out
mov
and
pop
sbb
jae
mov
mov
scas
xchg
pop
sbb
xor
xchg
sub
xchg
pusha
call
cs
fwait
mov
ljmp
lods
jns
sub
je
test
sbb
sub
mov
xchg
lret
ret
jbe
mov
sti
and
cmp
stc
loopne
mov
adc
ret
sbb
add
mov
in
xchg
inc
hlt
stos
mov
popa
sub
pop
inc
xchg
adc
loope
lock
popf
fistpll
mov
jbe
shrb
xor
xchg
cmpsb
mov
push
jnp
xor
out
xchg
xor
aas
fdivrs
xor
adc
arpl
cmc
rclb
into
sbb
sarb
idivb
mov
lcall
sbb
cmp
fisttps
aas
xchg
jb
jle
dec
mov
aad
dec
sbb
scas
jecxz
cmpsl
jp
xorl
or
jne
jecxz
gs
push
addr16
xor
pop
xor
add
jne
mov
mov
jmp
fwait
xchg
xchg
dec
mov
jno
inc
pop
jo
inc
aaa
sbb
ljmp
push
cld
aam
xchg
ss
call
loope
movsb
data16
aas
mov
cmp
inc
outsb
jb
pop
mov
in
and
sbb
mov
mov
sub
repnz
mov
sub
xor
cmc
mov
out
mov
ja
push
pushf
mov
and
movups
roll
test
sub
xchg
xlat
pop
fsts
imul
leave
mov
cld
hlt
roll
in
movsb
mov
cltd
dec
enter
mov
jnp
stos
sbb
rcrb
pop
iret
pop
dec
sbb
movsb
cmp
mov
cmc
shl
inc
lahf
clc
add
jbe
mov
xor
arpl
scas
imul
inc
dec
cli
outsl
data16
mov
js
ljmp
mov
mov
cmp
movsl
out
mov
jmp
sbb
aam
mov
push
ret
push
sub
xchg
movsl
rolb
ficoms
in
or
movsb
dec
mov
mov
sub
push
movsl
es
push
fsubrs
sahf
or
js
jecxz
jp
int3
call
addb
in
xor
icebp
fwait
sub
mov
icebp
mov
lret
leave
sub
push
pop
mov
inc
out
mov
test
popa
mov
addr16
cmp
mul
push
imul
mov
out
loope
sbb
ljmp
push
mov
sub
mov
andl
lret
cmpsl
sub
pop
loopne
es
out
aam
mov
and
das
jmp
test
mov
push
inc
sbb
fsubr
adc
jns
mov
lret
and
sbb
xchg
movsb
xchg
mov
mov
test
pushl
xchg
mov
out
xchg
or
les
jb
out
push
shll
xor
sbb
test
xchg
inc
and
add
mov
clc
sbb
bound
sqrtps
xor
pusha
cmpsl
in
andb
mov
lea
add
jno
dec
pop
mov
movsb
inc
adc
mov
cmpsb
xchg
xchg
xchg
loop
in
sub
inc
push
add
pop
stos
inc
mov
outsb
pop
jno
push
and
sarl
cmc
inc
jbe
sub
ja
lret
in
js
out
add
mov
xor
xor
out
sbb
cmp
ja
push
negl
or
mov
popa
fmuls
call
leave
dec
loope
push
ds
jg
rcr
pop
mov
outsl
fildll
mov
push
and
sar
pop
aad
dec
pushf
cld
and
fdivl
mov
inc
sbb
pop
imul
add
mov
jecxz
jp
sub
test
sub
test
loope
push
roll
jmp
lods
jge
and
in
into
and
data16
enter
popf
repnz
or
mov
out
addr16
and
pop
inc
arpl
mov
pusha
push
mov
push
mov
mov
xor
lock
stc
mov
fwait
shrb
cmpsl
int
fisttpll
adc
outsb
call
mov
pushaw
adc
pop
pop
jge
sbb
sbb
out
mov
repnz
aad
js
sub
int
repnz
fcmovu
daa
pop
aad
arpl
js
xchg
nop
and
ds
and
pop
addb
testl
and
outsb
cltd
dec
insb
das
sub
mov
or
mov
and
adc
ret
fcmovnu
repz
push
sarb
fcom
xor
xchg
cmp
insb
add
push
sub
adc
lds
xor
push
loop
jae
mull
sbb
pusha
xchg
in
push
mov
dec
jae
fcoms
xchg
aas
pop
je
or
add
sub
stos
out
repz
inc
bound
aaa
ficomps
fdivrl
sbb
pop
pop
mov
outsb
inc
outsb
out
sub
adc
cmpsb
push
ljmp
divl
push
pop
mov
js
pop
push
push
mov
test
or
js
addl
outsb
sbb
dec
ds
adcb
sti
adc
push
and
xorb
xchg
pop
mov
inc
and
sub
les
adc
aaa
add
push
aam
mov
pusha
add
sbbb
sub
loopne
loope
shll
fwait
loopne
add
loope
jae
xchg
ret
sbb
mov
std
mov
pusha
push
lea
cmovno
int3
xchg
imul
jb
inc
add
ret
inc
add
lcall
loop
pop
movsl
sbb
fisubrs
xor
sbb
sahf
xchg
mov
sbb
dec
adc
dec
sub
push
sahf
fsubr
xor
js
data16
mov
outsl
push
idiv
xchg
les
aas
mov
cmp
and
repnz
out
popa
sub
or
repnz
mov
jae
cwtl
sub
jne
xchg
add
ret
jle
enter
dec
adc
dec
inc
pop
aad
or
pop
mov
lods
fcomps
xchg
jge
push
mov
lcall
movsl
adc
xchg
out
mov
aaa
jo
xor
shrl
dec
add
xchg
popa
pop
xchg
xor
or
jp
adc
and
xor
ficomps
jnp
mov
cmp
xchg
addl
pop
mov
lea
enter
jecxz
or
test
mov
mov
js
lcall
xor
arpl
aaa
fadd
into
shrl
gs
adc
push
leave
mov
mov
fwait
test
or
add
fisubl
imul
lods
shl
pop
pushf
fcmove
imul
cmpsb
cwtl
pop
mov
jns
je
clc
xchg
enter
int
mov
cltd
pop
or
mov
rorb
test
mov
dec
dec
popf
xchg
mov
loope
lods
xor
stos
rcll
inc
test
push
outsb
out
adc
in
divl
mov
incb
out
stc
ss
jmp
dec
cmp
aas
out
in
mov
push
pop
mov
mov
xchg
adcb
ret
int3
mulb
in
push
pop
or
cmc
mov
cmpsl
and
mov
fstl
rclb
sub
mov
data16
cmp
jno
mov
andl
mov
pop
sahf
sahf
pop
enter
fs
inc
fucomip
fucomip
ss
pop
js
sbb
inc
pop
imul
insb
aad
mov
jno
outsb
dec
or
cmp
ljmp
setp
bound
sahf
add
push
mov
sub
sarb
mov
ds
xchg
xor
mov
jge
adc
mov
les
mov
cwtl
movb
mov
pop
push
push
int
mov
out
sahf
xchg
mov
mov
hlt
pop
stos
dec
and
aad
push
adc
js
daa
jmp
pop
mov
jl
lret
lret
sub
jae
adc
pop
sti
in
xlat
jmp
test
add
mov
rcll
push
inc
int
push
insb
mov
aam
std
mov
jg
shll
iret
add
xor
fcmovnbe
sti
dec
dec
test
jnp
addr16
ficoms
jmp
or
mov
cwtl
push
adc
xor
add
xor
add
mov
test
or
jl
pop
mov
daa
lods
xor
sahf
repnz
sub
scas
sahf
push
xlat
dec
jnp
mov
adc
pop
outsl
insb
nop
sbb
shll
pop
pop
sbb
mov
cmpsl
inc
stc
shll
out
sub
cmp
out
jbe
sarb
data16
push
xlat
pop
mov
xchg
dec
outsl
push
clc
scas
incl
xor
or
aam
inc
jb
lock
mov
cmp
push
push
sarl
rolb
into
pop
inc
inc
push
or
std
push
mov
mov
push
xlat
dec
daa
mov
add
jno
push
loopne
mov
lods
mov
pusha
in
mov
dec
pop
pusha
outsl
pop
ficomps
sbb
jmp
and
push
stos
and
clc
lea
push
das
in
idivb
popf
xor
mov
mov
ss
mov
cli
loop
cmpsb
mov
xchg
ljmp
jmp
in
in
mov
les
inc
pop
mov
push
jg
repz
fsubrs
or
pop
pop
mov
fisubrs
push
inc
hlt
in
hlt
movsb
push
mov
in
js
std
in
push
add
hlt
or
cmp
cmp
outsl
mov
mov
popa
js
add
push
inc
dec
ljmp
dec
ret
daa
repz
push
adc
sub
inc
mov
mov
jb
sbb
aas
loop
jg
xchg
les
inc
pop
xchg
shll
in
adc
pusha
push
mov
lods
insl
shr
xchg
xor
cmpsl
mov
cmp
mov
mov
test
and
imul
xchg
jl
ret
dec
mov
out
lret
into
cltd
inc
loopne
imul
test
iret
sub
sbb
inc
sarb
out
outsb
stos
mov
mov
push
jge
jo
aas
lea
pop
pop
shld
cmp
pop
popa
dec
fwait
lock
dec
xchg
andl
mov
lret
xchg
leave
or
ds
mov
je
popf
and
fistpll
dec
outsl
lds
jp
jecxz
sub
ss
aaa
push
xchg
push
push
adc
cmpsb
stos
loopne
push
sub
lret
sub
mov
movsl
ds
out
cmc
bound
insl
stos
rcl
mov
dec
pop
shr
jmp
pop
stc
cmp
sbb
int3
nop
cmp
pushf
mov
imul
mov
outsb
lret
sbbb
mov
sbb
xchg
faddl
push
lock
stos
and
fwait
sbb
xor
xor
jle
ds
push
and
adc
clc
dec
sbbb
scas
and
pop
sbb
mov
dec
add
call
xlat
xchg
and
mov
sub
push
jns
xchg
or
add
mov
push
cmp
movsb
xchg
pop
inc
enter
xlat
mov
cltd
pop
dec
mov
push
stc
fsubl
mov
jl
xor
cmpsb
cli
mov
repz
out
fs
adc
call
pop
mov
mov
cmpsb
xchg
popl
or
inc
mov
test
jl
in
pop
or
les
js
xor
and
and
inc
cmpsb
arpl
aas
js
data16
lretw
adc
add
fldl2t
add
inc
adc
outsb
loopne
push
inc
pop
sub
add
imul
flds
shl
icebp
dec
fmuls
or
out
ljmp
push
loop
and
cmp
loopne
arpl
aad
push
outsl
pop
int3
or
movl
mov
mov
imul
pop
dec
mov
sahf
inc
pop
push
push
gs
inc
push
incl
decb
sub
cmp
roll
cs
xor
jno
pusha
jg
test
dec
cmp
addl
aaa
ljmp
sub
pop
push
in
pusha
out
int3
or
mov
inc
xchg
inc
out
cld
fdivs
mov
mov
xchg
movsb
mov
cmp
pop
mov
add
mov
push
jge
es
cmp
cld
push
and
clc
iret
xor
xchg
stos
xchg
inc
cmp
sub
or
sub
out
lcall
add
mov
pop
mov
std
movsb
mov
xor
pmulhuw
cli
jae
cmp
popa
fdivrp
rcll
jg
std
sar
inc
mov
frstor
scas
arpl
jmp
ljmp
ret
out
add
int3
adc
mov
hlt
cltd
or
xchg
lea
aas
mov
mov
dec
dec
rorl
addr16
in
mov
mov
popl
dec
fwait
mov
idivb
dec
and
inc
sbb
sub
pop
push
xchg
btr
mov
lahf
ret
mov
push
je
sbb
mov
xchg
and
jmp
add
insl
xlat
push
cmp
pop
xor
and
xor
inc
adc
mov
mov
mov
jmp
es
dec
inc
ja
lods
out
sub
je
jno
rcll
call
jle
stos
icebp
jmp
xchg
pop
inc
out
xlat
add
xor
sahf
push
jecxz
outsb
jo
je
sbb
out
cltd
ds
cmc
ljmp
sub
mov
mov
cmp
pop
mov
pop
push
inc
pop
jmp
xchg
xchg
xchg
fucomi
daa
cltd
aaa
xchg
rorb
xor
xchg
push
cld
sbb
jp
jp
mov
jo
pop
or
dec
mov
mov
loope
or
fidivrs
and
xchg
mov
mov
cmpsl
es
test
rol
loope
iret
and
pop
dec
jmp
xchg
xlat
fldenv
xchg
mov
xchg
stos
push
mov
xor
push
loopne
popa
insb
aas
dec
inc
stos
xor
and
cmp
fisubl
adc
nop
fiadds
jecxz
es
popa
stc
mov
stc
outsl
inc
fxch
sbb
jb
movsb
imul
test
jle
adc
imul
push
push
nop
call
lods
jno
or
and
mov
jbe
xchg
jns
lds
ss
ljmp
pop
sbb
pop
aaa
jne
sub
pop
mov
jae
sarl
and
lods
clc
jp
dec
mov
or
or
in
or
es
cmp
cwtl
lods
jmp
mov
aam
ret
sbb
roll
inc
jmp
jne
cmp
dec
out
out
in
test
stos
std
push
setg
xor
cltd
in
xor
xor
popa
in
imul
lods
push
into
orl
xor
stos
insl
sbb
pop
or
xlat
sbb
ljmp
lcall
mov
out
daa
dec
mov
lea
push
rcll
in
cwtl
sbb
cmp
and
xchg
notl
push
or
or
sub
mov
sub
pop
xor
cmpl
pop
mov
iret
out
rcr
jae
inc
test
pop
cld
and
or
push
movsb
sub
add
sub
fbld
test
mov
xchg
mov
pop
add
in
push
xchg
xchg
ret
daa
je
xor
adc
rolb
es
neg
insb
lds
ss
aaa
and
and
add
popf
mov
mov
cmp
xchg
xchg
fildl
jge
pop
int3
dec
push
pop
das
imul
fdivrs
push
jp
xlat
pop
add
scas
in
pushf
outsb
sub
mov
mov
mov
sbb
sbb
hlt
jns
mov
sbb
rcrb
lods
testb
and
hlt
decb
roll
ja
pop
repnz
dec
gs
adc
xchg
loopne
jne
je
movlps
sub
jo
sbb
jecxz
inc
repz
adc
sub
dec
pop
push
mov
nop
mov
mov
insl
jno
in
js
test
push
inc
sub
popa
sbb
mov
aaa
sbb
arpl
mov
sbb
test
lahf
rol
or
mov
sub
dec
mov
das
loope
mov
notb
sbb
dec
rcll
xor
in
mov
adc
adc
pop
sub
sbb
mov
orb
sub
xorb
xchg
stos
mov
pop
jecxz
fwait
loopne
repnz
xchg
inc
and
aam
ljmp
or
mov
pushf
scas
jg
in
lret
mov
add
mov
in
lcall
adc
or
bound
loope
xor
mov
mov
mov
aaa
nop
sub
sbb
fucomip
enter
inc
cmpsl
outsl
cmpsb
cli
add
ja
andb
mov
test
data16
inc
fsubs
inc
cmpsl
mov
clc
cmc
lock
jae
cwtl
js
jle
cmp
aaa
pop
cmp
lds
pop
lret
pop
mov
add
gs
das
dec
in
or
xchg
adc
push
ljmp
ds
pop
outsb
andl
or
xor
orb
mov
fcmovb
es
imul
je
xor
or
xchg
mov
pop
stos
mov
pushf
pop
fdivl
add
jbe
movsb
imul
js
adc
ret
ss
inc
push
aas
sub
mov
and
cmp
mov
pop
mov
inc
lods
fisubl
cmpsl
in
sub
stos
and
xchg
imul
add
test
pop
mov
out
pop
aas
hlt
mov
mov
xchg
test
icebp
loope
and
lods
lcall
repz
jo
das
ret
movsb
add
jecxz
fdivrl
xor
test
xchg
xchg
shlb
mov
mov
push
les
movsl
jmp
mov
js
mov
aaa
jo
push
int
ds
xor
les
out
out
cmpsb
aas
test
adc
adc
fiadds
lock
and
imul
lods
pop
push
jne
add
aad
movsb
js
push
loop
jecxz
xor
or
mov
lcall
push
pop
adc
idivl
jns
jl
lahf
inc
fcomp
sub
and
dec
iret
pop
mov
sub
fwait
dec
ljmp
adc
insl
push
int3
mov
push
adc
xchg
push
test
dec
and
xor
mov
movsb
and
or
sbb
out
test
pop
xor
rorl
push
std
mov
or
jbe
cltd
daa
movsb
push
sub
jbe
scas
lods
pop
dec
mov
mov
lret
fcmovne
or
adc
in
enter
ja
aaa
push
bound
sub
dec
xor
push
jmp
jne
mov
int
xchg
divl
in
cli
jno
jp
mov
orl
push
shll
jns
jmp
push
mov
pop
dec
pop
imul
repz
rorb
stos
xchg
xor
adc
pop
mov
jns
leave
xor
jmp
cmp
pushl
push
addr16
sbb
xchg
rcll
sti
mov
sbb
loopne
mov
imul
scas
cli
in
int
push
ret
lcall
and
pop
pop
cmp
adc
js
into
data16
repz
lea
jge
movsl
aas
xchg
stc
cmp
mov
aad
adc
pop
pop
int3
addr16
fdivrs
jo
push
fistpl
ja
daa
dec
inc
gs
das
xor
test
jnp
xchg
xchg
pop
movsb
js
push
out
pop
into
sti
inc
dec
clc
lret
movsl
sbbl
cmp
pusha
orb
lret
adc
lea
fdivr
add
push
pop
fiadds
add
or
in
in
pop
lods
fsubrs
stos
je
outsb
mov
or
push
xlat
leave
xchg
mov
xchg
pushf
mov
out
xor
cmpsb
fwait
cmpl
popa
pop
push
lcall
and
and
and
dec
fsubr
dec
arpl
popf
rcl
stos
add
add
movsl
mov
out
in
mov
pop
pop
decb
rcl
dec
push
cmp
lret
push
in
jne
inc
pop
in
push
int
mov
aaa
push
int
dec
or
scas
and
or
insl
cmp
xchg
ficomps
outsb
in
in
jns
pop
lret
addl
sarb
out
jecxz
ja
inc
cwtl
xchg
je
xchg
out
push
cltd
sub
adc
adc
pop
movsb
shl
jbe
cld
ret
loop
fwait
xor
mov
daa
sbb
daa
or
push
adc
xchg
pushf
mov
pop
mov
inc
data16
xchg
mov
fcomps
ja
arpl
adc
sbb
mov
xor
mov
and
std
cltd
ss
fwait
or
cmpsl
test
adc
push
adc
and
inc
fwait
por
jecxz
cmp
xchg
rol
jmp
push
add
fwait
sti
mov
daa
cmc
ds
rclb
decl
adc
cli
pop
mov
hlt
xchg
aam
popa
dec
insl
xchg
sub
sub
popa
int
dec
pop
mov
push
lcall
imul
rolb
stos
pop
hlt
dec
bound
mov
xor
nop
or
xor
arpl
inc
loopne
in
sbbl
pop
sub
mov
pop
or
sub
into
cld
sub
add
adc
lret
int3
imul
dec
mov
pop
push
adc
scas
mov
pop
adc
adc
filds
sub
sbb
shrb
adc
andl
fldcw
bound
fbld
fists
and
gs
inc
add
push
jle
fwait
bound
xchg
cmpb
mov
fiaddl
stc
jecxz
mov
inc
or
stos
cmp
mov
xor
xchg
sbb
in
fcomps
imul
jbe
into
jmp
pop
fldenv
ret
clc
mov
mov
ljmp
or
inc
inc
sar
es
and
inc
mov
lret
mov
popa
and
adc
cld
jecxz
lods
xchg
or
jnp
push
push
mov
push
das
mov
xor
adc
inc
inc
outsl
pop
mov
inc
mov
sbb
dec
mov
repz
pop
sbb
inc
jmp
pop
jo
lock
add
xchg
insl
jge
into
xchg
fsubl
in
adc
mov
jb
sub
xchg
lret
mov
mov
adc
ret
and
mov
adc
loop
cmp
and
add
pushf
int3
dec
fistps
xchg
xor
fs
mov
mov
or
jne
clc
loop
ficoms
xchg
mov
or
out
imulb
or
xchg
mov
aas
and
pushf
mov
andl
repz
adc
push
cmp
add
jecxz
mov
xor
cltd
das
sub
repnz
cmc
dec
xchg
std
add
mov
and
add
or
mov
jp
xchg
or
ljmp
sbb
outsl
mov
cli
dec
into
repnz
insb
jge
cmc
sub
inc
cmpb
adc
dec
sub
adc
sub
popf
repz
cwtl
enter
iret
and
mov
jbe
add
dec
sub
push
mov
dec
sub
cmp
cli
lods
mov
cmp
in
incl
mov
inc
adc
pop
dec
cmpsl
mov
dec
ret
test
dec
jle
mov
insl
mov
xlat
sbb
mov
and
jo
add
mov
jbe
lahf
mov
loopne
mov
int
or
leave
stos
notb
loop
mov
mov
shlb
out
out
stos
aaa
xchg
ljmp
mov
cs
int
mov
out
fdivrs
mov
icebp
mov
mov
mov
xchg
mov
xchg
pop
push
hlt
aas
insb
xchg
rcl
lods
and
out
es
push
nop
pop
jbe
mov
push
sahf
enter
cs
mov
pop
or
icebp
push
adc
mov
xchg
sbb
mov
gs
rcll
aam
in
xorl
cmp
loope
out
adc
ljmp
pop
out
imul
mov
cli
scas
jg
cmp
pop
or
sbb
pop
mov
pop
addl
jno
outsb
insb
push
fcmovbe
xor
xor
mov
dec
mov
sbb
jbe
sub
or
jnp
lods
movsl
outsl
add
xchg
scas
push
sbb
mov
or
jg
sbb
lock
ficomps
xchg
pop
imul
inc
lods
or
cmp
jno
inc
test
out
cmp
add
jno
sbb
add
mov
orb
adc
xchg
xchg
jb
movsl
js
or
movsl
repz
bound
faddl
rclb
adc
or
frstor
xchg
out
iret
lds
xlat
pop
ret
pushf
jb
jae
fwait
pop
mov
test
test
and
fwait
fwait
jge
dec
mov
imul
xchg
jle
and
ljmp
pop
dec
sbb
addl
and
lods
inc
inc
pop
jbe
mov
mov
push
sub
int3
stc
jne
das
pop
or
mov
xor
inc
stos
cwtl
dec
mov
scas
in
pop
dec
and
ja
xlat
pop
out
ret
movsb
outsl
fstpt
fidivs
mov
mov
push
stc
pusha
adc
icebp
mov
mulb
bound
push
sahf
sbb
pop
loopne
inc
xchg
cmp
push
data16
or
inc
pop
mov
out
or
mov
int3
test
cmc
push
cwtl
xor
mov
inc
flds
jb
ret
js
jecxz
jg
push
push
jo
sub
fcomip
dec
and
enter
xor
fdivs
hlt
shll
and
inc
fisubrs
add
sub
xchg
out
jecxz
cmp
cltd
in
dec
mov
dec
sbb
insb
cmp
movsl
push
xchg
fistpl
sub
jnp
js
cmp
sub
cmpsb
cmpsl
pop
pop
aaa
lock
test
fsubrl
push
gs
in
dec
and
in
jne
aad
xchg
adc
std
push
ss
pop
xchg
mov
inc
aad
sub
inc
in
sbb
xchg
push
mov
add
sbb
xchg
aaa
daa
int
adc
or
lcall
and
mov
cmpsb
jecxz
and
nop
dec
inc
aad
cmp
mov
in
and
mov
xchg
sbb
out
pop
lret
out
xlat
insb
inc
dec
adc
test
xlat
lahf
push
imul
cmpl
insb
push
sahf
push
mov
test
or
push
test
mov
mov
nop
fcomi
pop
add
push
in
add
adc
insl
pop
or
cmp
fnstsw
and
jno
xchg
rolb
mov
stos
fldl
and
movsl
add
mov
in
dec
jge
and
aaa
push
cltd
add
test
lcall
add
sub
cmp
hlt
jle
cmpb
xor
pop
inc
pop
aas
cmpsb
push
pop
aad
shll
add
aam
fdivl
xlat
or
sub
pop
sbb
xchg
lea
pop
in
jno
mov
vmovss
xor
adc
hlt
cs
jecxz
loope
cmpb
mov
jae
push
inc
cmp
out
cwtl
mov
ror
ljmp
sahf
dec
xor
stos
sti
or
js
cmp
iret
cmpb
sbb
outsl
jb
mov
push
sub
xor
icebp
dec
pop
inc
imulb
xor
jo
stc
jg
push
add
lret
lahf
cltd
sahf
mov
mov
mov
and
insb
mov
mov
mov
push
loope
nop
repz
faddl
cwtl
push
sbb
pop
adc
jns
sti
in
lock
enter
cmp
dec
sbb
ret
xchg
or
or
xchg
xor
inc
mov
out
jno
filds
sbb
out
jb
fsubs
sub
jle
inc
ljmp
xor
std
hlt
sbb
cmpsb
jge
push
test
sbb
add
std
ds
xor
notb
cmp
cmp
int
aad
dec
shlb
fs
cmp
cmpsl
cmp
push
pop
mov
rorb
pop
es
cmp
cwtl
test
mov
and
and
pop
mov
lods
inc
ljmp
scas
adc
std
aad
push
add
cmp
cmc
xor
mov
xchg
mov
into
inc
and
pusha
adcl
pop
mov
outsl
popf
jb
insb
and
push
inc
xor
or
in
scas
ror
insl
ljmp
cmc
out
scas
xor
xor
inc
pop
ret
jp
push
mov
ret
or
iret
pop
xor
jl
les
push
jno
leave
mov
lret
pop
scas
and
push
out
push
mov
add
mov
loop
xchg
shlb
mov
imul
sbb
shl
inc
jo
lret
jno
inc
and
out
dec
mov
fwait
stos
in
xchg
fisttps
addl
or
mov
push
inc
pop
inc
cwtl
pushf
cmc
push
cmp
in
fstl
inc
js
bound
std
xorb
lds
push
cld
cmp
sbb
jge
cs
sarb
movsb
rcrb
ljmp
inc
mov
pop
rclb
call
icebp
jo
pop
adc
mov
jb
xor
jb
mov
movsl
imul
cmpsl
movsl
inc
or
mov
js
cmp
jae
jbe
mov
jnp
scas
cmp
lea
pushf
popa
mov
add
gs
int3
push
cmpsb
inc
push
mov
imul
insb
les
out
mov
dec
inc
dec
cmp
test
ret
popf
mov
mov
dec
jecxz
dec
or
imul
icebp
mov
sahf
loopne
cltd
push
jbe
and
pop
fwait
ja
cmp
bnd
mov
lods
sbb
cmpb
imul
fmull
dec
popa
dec
movsl
jmp
dec
not
sub
dec
ret
movsl
sti
je
inc
cli
daa
mov
xor
push
push
inc
and
hlt
dec
xchg
push
das
hlt
pop
xchg
stos
dec
adc
aam
or
xor
dec
jb
sarl
inc
int3
sti
jle
mov
into
mov
xor
dec
in
loope
fwait
or
pop
loop
xor
scas
outsb
and
cmpsb
test
push
push
sbb
mov
xor
imul
hlt
mov
cmp
rorb
arpl
insl
push
or
push
add
push
sub
in
int
xor
fstl
mov
outsl
mov
cmp
jg
scas
ss
xchg
pop
adc
fnsave
sahf
movsb
out
or
call
dec
das
notl
adc
adc
dec
call
inc
sahf
cmpsb
xchg
xchg
mov
push
repz
fdivp
mov
jmp
addr16
mov
xchg
inc
mov
or
inc
out
push
pop
testl
jge
lcall
xchg
notb
fnstenv
dec
stc
loopne
shl
fcompl
pop
js
mov
sti
aad
insl
xor
and
test
inc
inc
sub
movsb
cmp
jecxz
xchg
ljmp
pop
lock
xchg
lds
test
or
xor
push
fnstcw
inc
xchg
fwait
jae
pusha
sarl
into
or
add
sbb
in
or
mov
xor
inc
xchg
in
scas
add
sbb
cmpsl
mov
xor
orb
into
fsubrl
pop
mov
inc
in
inc
mov
or
lods
stc
mov
push
add
or
sub
roll
mov
stc
cli
and
mov
push
and
inc
bound
push
dec
mov
or
xchg
mov
jg
xlat
je
dec
das
add
lds
cli
pop
add
mov
out
pop
jnp
gs
and
mov
mov
push
or
xor
push
mov
mov
fisubl
adc
sbb
jnp
sub
inc
adc
in
or
inc
or
pop
adc
jge
cli
push
sbb
loope
stos
and
adc
push
mov
imul
idivb
lods
iret
mov
je
inc
pop
mov
gs
aad
iret
xchg
cmp
aad
adc
pop
idivb
outsl
xor
sub
inc
push
hlt
jbe
inc
pop
fists
dec
in
lds
jb
mov
cmp
movsb
shl
mov
xor
mov
adc
push
xor
and
push
mov
xchg
cli
lods
les
xor
mov
lret
xor
push
test
insb
pop
cmc
loope
xchg
hlt
std
icebp
movsb
or
lcall
xor
xorb
mov
jae
shll
fadd
sbb
cmp
repnz
mov
mov
out
add
xor
push
ss
sub
and
or
mov
jge
pusha
popa
cld
pop
dec
negb
int3
jbe
mov
inc
stos
push
addr16
push
orl
movsb
and
xchg
add
and
addl
int3
leave
sarl
outsl
push
adc
mov
and
push
dec
testb
testb
fs
notb
mov
shlb
xchg
xor
mov
mov
sbbb
pop
xchg
add
ror
sub
popf
adc
idivb
imul
out
pop
es
loopne
movsb
fimull
or
mov
bound
add
out
push
inc
imul
shr
add
mov
std
pop
idivl
imul
rcll
sbb
sub
inc
xchg
pcmpeqd
or
sbb
stc
daa
inc
push
xchg
movsb
dec
mov
pop
ss
jns
movnti
dec
fbld
out
pop
xchg
scas
pop
iret
adc
int
mov
dec
and
xchg
mov
sbbl
dec
or
pushf
add
mov
movhlps
scas
out
jge
dec
sub
jns
mov
mov
rolb
mov
ja
mov
rcl
adc
cmp
xor
adc
xor
in
add
jne
shll
lahf
and
pop
ret
rorl
scas
pop
add
cmp
dec
loop
ja
jge
divl
and
mov
add
sbb
inc
daa
movsb
in
outsb
adc
mov
jmpw
xchg
adc
mov
fdivs
xchg
adc
mov
dec
dec
shr
cmpsl
pop
jg
lahf
push
push
insb
mov
xor
push
sub
push
stc
inc
push
push
xor
adcb
jne
dec
lds
ret
sub
dec
daa
pushf
mov
mov
enter
inc
fidivl
sti
and
mov
dec
loope
sbb
mov
mov
cmc
addr16
negb
cmp
or
scas
lahf
stos
fsubs
mov
mov
inc
inc
filds
or
mov
xchg
xor
ljmp
xchg
data16
add
repz
adc
add
pop
dec
repnz
shll
pop
fisttpl
cs
loop
or
addr16
out
push
jp
xchg
sbb
in
mov
and
fwait
dec
aas
dec
or
pop
test
jns
xchg
inc
ret
and
les
xor
pop
mov
and
xor
mov
cmpsl
pushf
push
ss
dec
adc
xor
fdivs
mov
mov
sbb
sti
aad
addr16
sbb
movsb
imul
xor
sbb
nop
and
out
pop
scas
jge
jp
insb
sub
pop
pop
mov
aad
cmc
mov
mov
mov
arpl
mov
push
out
bound
mov
add
cmp
movsl
adc
inc
shll
sub
adc
icebp
xchg
dec
fadds
stos
lods
rorb
or
ja
lcall
cltd
xor
push
cli
ret
fs
pop
fnstsw
push
out
in
out
mov
mov
popf
or
push
int3
or
fwait
ret
xchg
sbb
xchg
or
sub
jae
push
push
dec
into
mov
jge
cltd
or
roll
int3
in
js
inc
pop
clc
or
movsl
pop
repnz
out
add
mov
test
leave
xchg
and
lret
pusha
fsubrs
adc
push
ds
cli
lods
cmp
nop
test
mov
lock
ret
lock
repz
mov
mov
repnz
pop
ljmp
pop
mov
int
std
fcoms
in
repz
adc
into
pushf
fs
sbb
mov
pusha
push
repz
xchg
lock
push
popa
inc
out
out
cmp
dec
dec
ss
testl
js
push
daa
rclb
add
or
xor
dec
mov
xor
sbb
sub
imul
cwtl
out
mov
loop
into
mov
and
imul
mov
js
int
fldl
inc
inc
xchg
in
xchg
push
jl
xor
mov
in
lret
sub
pop
cwtl
das
into
gs
or
pop
push
jmp
and
lret
inc
scas
mov
inc
enter
ficompl
and
enter
pop
scas
lret
insl
push
jae
pop
xchg
mov
jl
testl
xchg
mov
loope
mov
xor
repz
adc
sbb
pop
cli
sbb
mov
sarl
pop
and
aad
hlt
bound
je
sbb
dec
clc
cwtl
add
popf
lahf
mov
arpl
inc
aad
cmp
les
aad
or
out
loopne
push
leave
popa
jo
jmp
xchg
lahf
negb
xor
aaa
out
dec
repnz
jp
jb
shl
push
fsubrs
lret
xchg
aam
sar
push
cmp
dec
int
mov
in
fdivrp
mov
sbb
inc
dec
rorb
xchg
xor
mov
xchg
aad
aas
jns
pop
cmp
mov
outsl
pop
jnp
or
ja
inc
pop
pusha
mov
int
lods
pop
adc
mov
cltd
inc
aas
aas
push
jnp
mov
sub
mov
mov
nop
or
pop
lds
xchg
jns
jle
mov
jmp
aas
roll
cmp
sbb
aaa
out
sbb
jmp
mov
inc
and
jp
mov
cmc
ret
xchg
xor
jnp
pop
stos
push
inc
dec
cmp
fwait
mov
add
cmp
repz
or
dec
xchg
ret
aad
dec
sar
scas
cwtl
and
xor
xchg
fmuls
pusha
fistps
rol
jns
incl
popf
in
inc
out
cmpsb
hlt
lds
mov
push
or
sbb
mov
adc
repnz
ss
pushf
xchg
pop
ret
pop
movsb
jbe
inc
xchg
jne
clc
mov
mov
test
pop
je
dec
cmpsb
and
aas
jbe
pop
sbb
sbb
pop
scas
mov
ja
inc
sub
dec
pop
xlat
stos
jns
sub
add
lret
adc
add
sbb
jge
leave
inc
or
jge
out
jne
inc
jnp
inc
test
mov
ljmp
data16
icebp
pop
mov
movsl
jo
adc
jbe
jecxz
jecxz
push
sub
xchg
jp
or
mov
movd
loope
xchg
aaa
icebp
outsb
jp
aaa
aaa
mul
mov
loopne
scas
cld
cmpb
add
ss
xor
movsb
inc
js
pop
fwait
pop
add
aaa
adc
repnz
xor
stos
push
inc
test
mull
rorl
sbb
movsl
pop
xor
mov
mov
xrelease
inc
mov
jmp
sti
mov
inc
mov
ror
cld
jmp
hlt
mov
add
daa
add
lea
insl
mov
movsl
popa
push
int3
ror
outsb
adc
ret
adc
lahf
sbb
daa
shl
jne
ljmp
cmp
push
and
jne
popa
in
loopne
xor
test
fs
test
arpl
aad
bsf
inc
neg
jl
cmp
insb
frstor
xor
pushf
xchg
dec
or
mov
nop
add
adc
pop
mov
sub
imul
dec
imul
ficoml
cld
add
jge
lea
add
cltd
sarl
jns
aas
mov
aas
daa
mov
in
int
aaa
movsb
arpl
cmp
bnd
pop
fildll
cwtl
push
jbe
stc
cmp
arpl
cmc
cld
daa
test
push
dec
mov
sub
scas
inc
loope
in
fwait
ss
pop
inc
sub
push
cmp
sarl
jmp
adc
push
add
mov
repnz
mov
sbb
je
outsb
cmpsb
adc
jmp
xor
push
push
inc
dec
push
movsb
cmpsb
mov
sbb
rcl
sti
outsl
mov
push
ja
or
ret
or
mov
or
repnz
bound
mov
outsl
cmp
inc
and
xchg
jno
adc
rcrl
cmp
out
pop
popa
lock
test
aad
scas
or
sbb
dec
ds
fldt
adc
arpl
sub
lahf
outsl
fadds
lods
mov
ret
or
sti
inc
nop
inc
hlt
sub
cmp
divl
icebp
icebp
lods
dec
movsl
ret
jge
rol
clc
jecxz
stos
jbe
pop
std
addl
lock
mov
sti
and
mov
lods
shrb
sub
loope
cwtl
pop
jp
rcrb
cmp
mov
into
inc
inc
lcall
aam
jae
inc
pop
cmp
cmp
jb
fs
into
repz
and
dec
out
lea
or
pop
or
stos
test
aam
pop
out
jg
scas
add
jns
xchg
std
es
xor
jne
sbb
repz
xchg
jge
xor
popa
daa
pop
add
adc
xchg
pusha
movsb
prefetch
iret
leave
xchg
outsb
lods
sbb
cltd
xor
pop
pusha
jge
or
cltd
pop
xchg
push
xchg
inc
scas
and
scas
xchg
or
inc
mov
lock
nop
imul
jno
jb
push
pop
cli
je
iret
push
or
mov
out
mov
push
dec
lods
popf
jae
fbstp
mov
daa
imul
mov
sbb
mov
lods
lods
ss
lahf
mov
std
sahf
mov
jnp
xchg
sub
sub
or
in
sbb
test
mov
and
or
imul
adc
inc
es
orb
jo
mov
jb
cli
pop
or
out
fld
out
into
mov
sbb
mov
cmp
outsb
pop
loop
and
nop
leave
add
jge
into
xchg
fildll
test
ss
stos
push
sub
inc
mov
xor
inc
fsubr
sahf
or
and
push
cmp
and
movd
fistpl
ret
adcl
mov
shl
in
sub
mov
xchg
in
xchg
repz
xlat
or
mov
and
inc
adc
jle
int3
sbb
fdiv
rolb
mov
push
xor
adc
jns
mov
inc
adc
shlb
int3
loopne
add
pop
xor
lea
mov
mov
in
jl
xchg
std
cld
jg
insl
inc
cmc
ret
bndldx
inc
arpl
inc
mov
xchg
jae
sbb
inc
rcrb
je
jae
pop
push
push
dec
scas
cmc
sub
or
add
xor
jg
jge
push
fpatan
pop
cmpsb
adc
test
push
stc
int3
pop
push
lods
push
xor
subb
faddl
mov
out
in
in
inc
jno
test
mov
xor
outsb
or
sbb
pop
fs
and
insb
arpl
mov
mov
out
sbb
incb
jmp
pop
mov
and
arpl
clc
pop
insl
orb
mov
cmp
push
jge
inc
pop
hlt
mov
push
dec
fs
xchg
aad
out
stos
mov
sub
mov
hlt
inc
sub
sbb
mov
mov
test
or
daa
rcrl
movsl
xor
in
cmp
adc
cltd
pusha
xor
mov
loop
pop
cmp
sbb
xchg
xor
ret
xor
jb
hlt
adc
adc
addr16
pop
xor
xchg
mov
adc
fdivrl
data16
adc
aad
pop
jae
lahf
cmc
inc
aam
or
test
ficomps
andl
call
pop
or
pusha
adc
mov
add
sbb
cwtl
ret
pop
inc
bound
mov
pop
jecxz
jns
sub
fnstsw
mov
jg,pn
enter
jg
mov
in
pop
and
jmp
loopne
or
test
cmp
jmp
jne
inc
jp
in
rorb
lret
jle
inc
shlb
cld
push
test
pop
add
ds
orl
push
test
dec
push
test
mov
add
adc
es
mov
adc
lods
push
adc
mov
jmp
jle
imul
mov
test
jo
lahf
push
mov
mov
mov
sahf
mov
mov
loope
cmc
xchg
in
cltd
clc
lea
mov
or
inc
add
adc
leave
call
cmc
jl
popa
fistl
jae
inc
xor
xlat
rol
push
inc
aam
aaa
repnz
out
push
rol
jnp
mov
xchg
ja
loop
cmpsl
cmp
mov
push
pop
mov
mov
sbb
or
pop
dec
fmul
mov
sub
jo
lods
pop
cmp
inc
pop
xchg
loop
enter
and
xchg
iret
ret
mov
jecxz
shr
xor
mov
pop
jmp
icebp
jge
cmovae
jecxz
lret
push
sub
and
out
outsl
imul
inc
scas
pop
mov
dec
sbb
sbb
push
cmc
cmp
lcall
ret
pop
pop
mov
pop
enter
xor
rcll
loop
pop
xchg
imul
cld
xchg
pop
pop
sbb
repnz
adc
sub
xor
andb
dec
iret
xor
dec
mov
inc
adc
fbstp
dec
sti
fwait
mov
int
dec
cmp
adc
dec
jbe
dec
cltd
shlb
xchg
lret
ret
cmpl
sub
xor
aam
inc
mov
and
popa
or
mov
std
mov
inc
fsubrl
test
or
pop
push
mov
mov
jmp
in
outsb
sub
mov
jne
push
mov
pop
push
out
rcrb
popf
mov
cli
adc
jecxz
inc
and
out
aas
and
or
add
ds
pop
push
sub
pop
cmp
js
sbb
mov
pop
cld
ss
push
imulb
je
mov
adc
mov
sub
mov
gs
sti
repnz
cwtl
movsb
cmp
xchg
inc
add
outsb
pop
sub
pop
cmp
subl
sub
adc
test
movsl
imul
aam
xor
mov
sahf
lcall
sahf
ljmp
jle
pop
iretw
pop
mull
lret
insb
and
out
xor
pop
xchg
lea
mov
out
push
dec
addr16
push
nop
pop
mov
xchg
ficompl
dec
mov
cmpsb
enter
push
imull
scas
pop
sbb
mov
pop
pop
scas
xchg
pop
call
or
gs
xor
js
call
jmp
fsubs
sbb
stc
and
ret
movsl
pop
outsl
sbb
jge
aam
pushf
xor
xchg
jno
aaa
js
mov
pop
inc
mov
roll
aas
insb
and
fistl
and
cltd
ljmp
pop
jecxz
cmp
in
cmp
test
pop
scas
xchg
pop
or
ret
inc
sbb
jmp
mov
jp
mov
sbb
in
mov
push
cli
cwtl
and
jo
xchg
adc
pushf
insl
fsub
and
mov
lods
dec
and
push
rcl
push
inc
cmp
lds
mov
stos
xor
cwtl
lds
push
fisttpl
fwait
movsl
mov
jb
mov
adc
cmpsb
mov
or
and
inc
je
jo
adc
jge
fwait
mov
and
ds
lret
or
cmp
leavew
jle
mov
mov
inc
xchg
into
incb
push
or
xor
pop
mov
aam
push
mov
mull
out
call
stos
js
and
or
add
loope
ret
arpl
or
jb
jbe
lods
lds
insb
nop
cmp
mov
xchg
dec
aas
sbb
clc
lea
mov
xchg
adc
mov
fisubrl
lret
xor
pop
push
push
or
subb
adc
mov
and
fiaddl
out
das
hlt
int
loope
jns
daa
aad
push
testb
lret
dec
popf
xchg
pop
arpl
std
sub
lret
fmulp
inc
xor
sub
sub
lret
xchg
push
lea
lcall
out
mov
aas
ja
inc
and
pop
add
inc
notl
es
loop
lods
push
popf
test
sub
xor
mov
push
sahf
sahf
dec
out
sub
in
push
jg
enter
push
punpckhwd
imul
push
cs
cmp
ret
je
push
sahf
iret
scas
sub
inc
pusha
pusha
popf
xchg
xlat
and
aam
ret
jnp
or
dec
dec
movsl
lods
sarl
imul
pop
repz
loopne
lods
inc
and
pop
pop
push
dec
mov
fimull
inc
sub
push
push
idiv
mov
sub
jbe
mov
stc
stc
pop
fistps
pop
test
test
inc
mov
mov
mov
push
xchg
pop
std
lret
inc
shrb
cmc
push
lds
pushf
xchg
sbbl
inc
mov
and
jae
test
popf
pop
mov
mov
pop
pop
fwait
sahf
push
js
push
cmpb
push
dec
add
xor
xorl
dec
sbb
mov
das
add
pop
imul
pop
es
call
push
or
mov
xchg
dec
or
in
paddw
popf
fdivl
mov
lds
test
hlt
push
rcrl
or
mov
mov
loopne
adc
out
push
dec
in
loope
dec
cmp
mov
xorb
xchg
pushl
stc
jb
or
lcall
jmp
popa
mov
stos
js
mov
es
push
mov
add
loopne
push
hlt
xor
out
lock
cmp
mov
mov
xor
xor
je
xor
nop
jg
sub
enter
lds
jo
out
into
inc
add
popf
push
hlt
pop
aam
adc
xor
mov
jbe
testl
sub
push
xor
jmp
push
mov
mov
jnp
and
sti
pusha
push
adc
pop
scas
jp
sbb
icebp
mov
loopne
enter
test
mov
test
jbe
dec
movsb
test
aam
cmpb
lret
ret
jecxz
sub
xor
gs
add
dec
pop
ja
adc
add
test
int3
xor
jle
insb
outsl
outsb
push
dec
ret
mov
inc
push
outsb
xlat
les
xchg
push
adc
mov
mov
adc
pop
insl
inc
test
pop
ror
orl
cmpsb
cli
push
fists
jbe
jp
repz
xchg
inc
xchg
insb
xchg
jl
sti
pop
push
or
out
push
cmp
andb
add
les
enter
lock
in
mov
jmp
into
push
mov
inc
arpl
xlat
sbb
bnd
cmp
mov
rcll
add
pusha
adc
push
mov
sub
sub
and
stos
mov
mul
jecxz
imul
jnp
mov
inc
pop
shl
addr16
xor
adc
shlb
mov
std
xchg
pop
test
or
sub
xor
cmpsl
mov
xlat
cmpsb
dec
js
jge
sarl
fcoms
or
dec
es
mov
test
fs
adc
add
mov
in
cmp
add
mov
jbe
xchg
aad
sahf
mov
sbb
add
push
dec
and
frstor
and
out
push
inc
in
in
xor
and
xchg
dec
fldcw
daa
lods
ror
lods
je
push
imul
push
xchg
pop
fcoml
jnp
shlb
pop
fldenv
dec
pushf
decl
lea
hlt
sub
mov
jp
sar
scas
int
dec
stos
imul
leave
jne
addr16
hlt
call
icebp
out
stos
in
incl
imul
lds
mov
xlat
push
push
xchg
xchg
push
lds
iret
stos
cmc
imul
ret
xchg
in
pop
mov
sbb
xchg
cmp
out
cmp
push
mov
push
xchg
xchg
mov
mov
inc
push
mov
je
cmpl
adc
or
pop
sbbb
in
aaa
ret
cld
xchg
dec
pusha
sub
pop
jmp
and
sub
push
loopne
add
mov
sub
js
dec
adc
lock
jp
inc
mov
mov
sbb
ss
xchg
std
stos
bound
inc
mov
mov
fsts
add
xor
mov
sub
stos
dec
mov
sbb
push
divl
mov
test
dec
adc
testb
cmp
mov
jmp
sbb
push
dec
scas
jg
sbb
les
inc
pop
pop
stc
xchg
dec
jnp
add
jnp
sbb
mov
in
mov
outsb
ret
mov
add
or
cmp
push
popf
imul
sbb
jnp
ret
lock
lods
pop
pop
loope
loope
cmp
fisubs
mov
mov
mov
aam
xlat
or
stc
orl
dec
dec
mov
inc
inc
ds
mov
std
loope
xchg
xchg
in
test
inc
push
shl
aam
lods
cli
push
cmpsl
sub
sbb
push
mov
out
popf
clc
and
mov
out
jnp
fistpll
mov
mov
stc
out
call
cmpsb
push
clc
push
fisttpll
cwtl
pop
pushf
add
stos
cmp
adc
mov
sub
jne
mov
or
or
push
stos
mov
xlat
pop
pushf
clc
cmp
push
xchg
cmc
push
outsb
inc
push
sar
sbb
pop
mov
nop
sub
in
bound
dec
jno
xlat
sbb
add
mov
arpl
ret
movsl
repnz
add
pop
outsb
inc
addr16
jo
sub
mov
mov
jle
adc
test
gs
add
dec
aas
lcall
aad
in
xlat
jb
push
xchg
addr16
popa
inc
jmp
adc
aas
test
jge
nop
cli
add
push
movsb
cmp
cmpsl
arpl
bound
push
icebp
lods
or
adc
jge
test
pop
xor
lahf
scas
add
jmp
mov
xor
adc
shlb
or
iret
test
inc
mov
or
or
xchg
jge
adc
lods
sbb
loopne
and
cmp
popa
jg
loope
pop
pop
lods
out
xor
js
sbb
leave
pop
js
sub
push
es
movsl
sub
cmp
pop
xor
cmp
leave
aas
es
ja
push
aad
pushf
push
mov
add
push
or
dec
inc
repz
pop
mov
xchg
lahf
fmuls
cmc
pop
les
stos
or
pop
dec
gs
mov
jg
dec
ljmp
pop
push
ja
push
push
jbe
mov
mov
pop
adc
pop
xor
dec
sub
push
sarb
in
add
out
mov
loop
fmuls
pop
scas
into
or
aad
js
push
filds
stc
arpl
das
sub
in
add
ret
insb
cmp
pop
jl
and
xlat
mov
mov
nop
addl
mov
mov
add
lods
addb
stos
inc
dec
imul
cmp
cmp
lds
arpl
cmp
sub
jecxz
pop
aas
inc
pop
adc
lret
sbb
repz
or
jnp
cmp
ds
pop
mov
mov
lea
jg
call
cmp
inc
into
shll
xor
mov
xor
insl
fists
push
rorl
hlt
fwait
lret
lea
fwait
dec
out
fsubp
mov
adc
and
dec
mov
rorb
adc
mov
ss
mov
fldenv
lods
je
ret
loop
mov
sarl
mov
shr
and
shlb
iret
mov
mov
jge
in
gs
mov
push
fstpt
xor
mov
int
test
fs
mov
and
je
sbb
xchg
and
sti
jo
ret
pop
xor
pop
push
movsl
cmp
cmc
gs
xchg
sahf
pop
ja
fisubs
push
js
mov
push
rclb
ret
test
fcomi
or
fcomip
cmc
mov
mov
mov
jo
pop
mov
test
sbb
mov
jo
fadds
lret
mov
or
mov
jbe
mov
mov
cmc
leave
clc
lds
out
int
daa
shlb
aaa
movsl
inc
adc
xor
cmp
es
scas
movsl
pop
dec
rcrl
mov
cs
repnz
outsb
fs
mov
loopne
xor
xlat
sub
jge
das
and
cmp
mov
cmp
xchg
cmpsl
sub
or
mov
jne
dec
movsl
pushf
in
movl
xor
ret
dec
xor
in
mov
xlat
fisubrl
roll
jl
mov
dec
xchg
add
inc
adc
xchg
adc
jbe
and
repnz
and
push
add
es
inc
pop
cmp
cmp
adc
lret
push
xchg
inc
movsb
xlat
fcoml
shlb
xor
inc
lock
pop
pusha
js
pop
sbb
sub
cmc
jp
mov
or
mov
mov
lret
mov
and
fcmove
xchg
js
adc
add
loope
xchg
iret
sahf
test
arpl
js
inc
mov
push
scas
sbb
cmp
push
mov
lret
ljmp
fdivrs
ja
mov
addb
add
outsb
insb
movsl
ja
and
dec
or
outsb
fcoml
enter
xor
mov
outsl
mov
setl
adc
stc
push
sub
dec
or
sahf
cmpsl
testl
sbb
aas
shlb
mov
mov
stos
add
ret
pop
and
and
jge
push
fidivs
idiv
mov
dec
cmp
dec
pushf
div
into
pop
pop
imul
xorb
iret
push
fwait
loopne
fwait
add
dec
pop
lock
lods
push
xchg
add
pop
dec
loopne
inc
xor
xor
jne
fsts
ficoml
aam
rcrb
fcomi
cmpsl
mov
in
sub
lret
fiaddl
fwait
pop
jecxz
test
ja
and
xor
out
push
pop
adc
inc
jns
lock
xlat
aam
push
rcrl
xor
pop
repz
sbbl
xor
pop
fs
aas
aad
push
and
jae
movsb
push
retw
data16
das
xchg
adc
es
add
shl
pop
in
decl
and
cmp
leave
cld
addr16
cmpl
jl
ret
lds
sbb
into
mov
lcall
adc
jmp
dec
sbb
adc
lock
in
aas
popa
adc
mov
xchg
mov
cmp
pushf
xchg
insl
push
pushf
jne
test
dec
mov
push
aaa
pop
mov
mov
subb
mov
lahf
mov
inc
pop
jo
sub
fstl
sahf
aam
aas
test
sbb
bound
sbb
fistpl
inc
xchg
rcr
mov
push
testl
out
mov
iret
mov
outsl
xor
jb
das
jl
inc
lods
push
cltd
lcall
mov
aaa
cmp
test
cmp
enter
sbb
dec
jbe
jno
fldl
jne
adc
mov
add
or
cmp
or
sub
mov
adc
xor
adc
add
out
test
pop
ljmp
pop
and
jb
cvtdq2ps
popf
rorb
fadds
mov
fucomp
fsub
fistps
repnz
and
loopne
mov
xchg
sti
adc
cwtl
jns
sbb
dec
fwait
xchg
jge
mov
mov
xor
mov
outsl
shrb
test
lret
clc
ss
ja
jg
in
das
mov
mov
jne
call
vunpckhps
mov
mov
push
test
mov
scas
cmc
pop
push
dec
fdivrl
lret
mov
dec
mov
dec
out
sub
cmc
imul
xchg
jp
cmp
scas
sub
fbld
arpl
push
loopne
and
inc
cli
decb
sti
aam
push
jne
or
lret
test
push
lret
mov
aas
sahf
out
sbb
lahf
fsubp
mov
sti
cmp
lahf
daa
pop
mov
fwait
xchg
jo
outsb
mov
scas
arpl
dec
mov
jp
ja
lock
mov
je
ret
add
fwait
in
xor
inc
or
in
mov
jge
aad
mov
mov
add
test
movsb
mov
hlt
rol
rorb
sbb
dec
push
ljmp
frstors
or
or
aam
insl
test
icebp
fwait
ds
cld
sar
xchg
push
jle
popa
sbb
or
lcall
xchg
mov
daa
xor
iret
movsl
dec
lret
in
or
pushf
insb
sub
pop
sub
inc
mov
mov
jg
inc
mov
iret
nop
pop
outsl
stc
movsb
mov
xchg
jmp
cli
cmp
adc
xchg
mov
popa
sti
pop
ret
cmp
clc
lcall
insl
sbb
dec
clc
ds
jmp
xchg
testb
mov
and
inc
jp
mov
pop
and
jl
dec
sub
adc
fisubrs
in
in
shr
iret
mov
adc
push
sbb
lods
in
repnz
data16
in
xchg
jns
push
rcll
push
adc
adc
ja
sbb
inc
pop
mull
pop
dec
or
subl
and
mov
sbb
mov
add
adc
movsb
xchg
popf
rol
push
jl
cltd
mov
xchg
sbb
inc
pop
mov
pusha
call
mov
pop
out
loope
add
pop
and
lock
push
lods
jl
add
jbe
hlt
mov
add
cmpsb
ja
cld
out
out
mov
into
push
sbb
dec
mov
adc
jnp
jnp
jae
push
cmp
xor
xchg
push
ret
add
or
into
loop
iret
cmc
jmp
mov
insl
push
mov
imul
ljmp
mov
xchg
andb
push
mov
sbb
subl
add
shrl
movl
fistpll
inc
xor
sub
les
subb
xor
dec
sbbl
or
fwait
pop
pusha
lcall
jl
cs
js
testb
push
pop
fsubrs
and
cs
lahf
push
mov
jp
inc
loope
cmp
mov
mov
lcall
ja
mov
push
dec
fisttpl
push
imul
push
nop
mull
mov
aaa
cmpsb
adc
mov
push
push
push
andb
mov
cmpsl
mov
xor
insl
fldl2t
inc
fucomp
jne
js
xor
jmp
jg
out
imul
push
xor
aad
mov
add
adc
cli
lds
mov
and
adc
shll
fnsave
add
arpl
repnz
pop
push
jle
sub
leave
out
movsb
fs
dec
mov
pop
cld
aam
orps
jg
xlat
cmovno
pushl
push
jae
xor
test
jbe
jae
movsl
ret
fwait
scas
iret
push
clc
repz
lea
outsl
in
fmul
clc
sbb
stos
movsb
std
data16
bound
cmc
in
leave
je
fldt
shll
mov
sbbb
lcall
mov
or
rorl
mov
add
cmp
push
fldl
int3
sbb
cmp
lahf
push
or
ficoml
push
hlt
fmull
ljmp
xlat
inc
dec
cmp
adc
repz
and
dec
pop
bound
enter
sbbl
fdivr
in
sub
push
mov
pop
shl
mov
pop
inc
stos
hlt
rcrl
push
shll
mov
jae
push
lods
lret
cltd
scas
mov
movd
decb
xor
or
inc
pop
iret
push
push
adc
call
cmp
or
data16
les
add
jle
stc
sbb
mov
mov
rol
gs
call
fisubl
data16
xchg
mov
imul
jae
and
iret
pop
movsl
xchg
xchg
loop
add
out
mov
movsl
pop
xlat
sbbb
mov
push
push
fdivrl
mov
jle
jp
or
or
stos
pop
test
scas
mov
push
mov
add
test
pushf
push
push
je
enter
insl
mov
sti
iret
nop
push
sar
pop
rorl
testl
xchg
inc
pushl
push
cli
cmpsl
dec
cmp
aad
orb
shl
sub
mov
insb
pop
scas
jno
sub
jmp
dec
dec
xchg
mov
out
aam
jb
and
push
imulb
pop
dec
mov
repnz
jle
lods
mov
xor
mov
push
xor
loop
sarb
dec
pop
sub
inc
pop
lret
add
mov
std
test
mov
lcall
xchg
cli
add
sbb
nop
sub
cltd
xchg
mov
add
decl
lcall
sbb
mov
fisttpll
cmc
outsb
ret
mov
adc
and
mov
and
cmp
ljmp
leave
inc
in
fsubrl
mov
and
out
sub
or
dec
dec
mov
dec
aam
pop
inc
sub
mov
ds
sbb
out
pop
sar
cmp
in
out
mov
dec
ds
mov
cmp
bound
test
or
sbb
adc
or
mov
xor
stc
inc
inc
pop
lock
cli
jl
xchg
dec
or
pop
xchg
and
fsts
xor
mov
dec
cmp
dec
sarl
xor
sbb
sbb
jne
push
inc
icebp
jb
ret
cwtl
jl
pop
subl
add
aaa
pop
inc
in
imul
lret
pop
mov
and
dec
notl
aaa
jge
scas
inc
pop
xor
cmpb
out
outsl
cmpl
jmp
xor
imul
fnstcw
mov
dec
nop
mov
mov
push
inc
mov
dec
popf
mov
cltd
in
cld
pop
push
adc
mov
xor
push
rcr
xchg
pushf
imul
stos
jp
jp
notl
loop
lcall
popa
jo
jge
scas
mov
mov
pusha
int
or
imul
sub
or
or
xlat
in
dec
mov
sarl
jmp
test
jmp
dec
enter
dec
into
dec
stos
fldt
dec
jp
int
andb
or
push
dec
and
jp
cmp
nop
ja
in
mov
xchg
push
fdiv
lea
addr16
adc
mov
mov
push
mov
xchg
popa
mov
std
aaa
std
jne
jnp
cmpsl
stos
por
cld
pop
sub
outsb
cmp
mov
jp
idivb
test
inc
push
pop
pushf
imul
jle
push
fisubs
or
in
jecxz
push
pop
jbe
cmpsb
into
imul
lcall
fdiv
pop
je
xchg
adc
fbstp
sub
push
out
cmpsb
mov
enter
call
sub
or
test
mov
mov
pop
sub
jae
push
or
sub
stc
movsb
pop
jns
aas
add
nop
pop
cltd
fistl
xor
xchg
jb
aad
popf
data16
xor
leave
scas
pop
in
pop
roll
mov
add
and
bound
and
mov
ret
fistps
jg
call
cmp
cmp
xchg
jnp
or
test
rolb
pusha
addb
das
push
sbb
mov
pop
loope
adc
lods
inc
inc
xor
dec
xchg
dec
aas
clc
enter
das
repz
movsl
or
test
les
xchg
cmc
cwtl
or
pop
mov
xchg
inc
inc
and
dec
mov
add
ljmp
pop
insb
arpl
xor
mov
cmp
sub
inc
cltd
mov
ret
adc
enter
lock
sub
mov
cmp
jecxz
fistpl
mov
and
inc
movsb
es
rol
jmp
cmc
out
pop
cwtl
sub
ljmp
cli
into
stos
pop
cmpsl
ret
xchg
push
pop
adc
push
ljmp
aaa
push
cmp
dec
js
sbb
mov
and
push
sub
je
scas
pop
jp
xor
test
fwait
mov
cs
jg
pop
out
sti
add
imul
push
jmp
pop
sahf
xchg
iret
lock
add
daa
stos
sub
push
inc
jae
lahf
sub
cmp
pop
fisubs
lea
mov
ljmp
dec
push
scas
fists
nop
pop
push
push
inc
into
add
inc
test
mov
movl
push
fists
out
rep
idivl
lds
out
mov
push
inc
out
sub
xchg
xchg
out
loopne
add
cmp
jmp
sub
ret
xchg
and
out
pop
mov
xchg
jp
nop
subb
add
in
bound
test
fldl
pop
mov
xchg
pop
jo
sti
add
push
ds
stc
pop
addr16
lods
mov
sub
add
jg
cli
insl
fwait
dec
jne
inc
push
push
and
test
fwait
cld
scas
js
addr16
xchg
inc
stos
rcl
xchg
sbb
loope
popf
mov
loop
mov
sbb
mov
sub
ja
jge
repnz
int3
and
ret
rclb
push
sub
arpl
sarl
sub
daa
jecxz
cmp
movaps
dec
adc
mov
mov
mov
fidivl
push
cli
jmp
pop
data16
enter
sahf
int
test
mov
mov
outsw
or
push
jns
daa
les
das
dec
idivl
daa
int3
push
push
xchg
mov
movsl
negl
data16
out
cmpsb
insb
jbe
mov
mov
stos
je
in
cmp
pop
pushf
xor
pusha
in
mov
scas
pop
dec
rorb
sub
and
push
out
pop
lods
fmull
dec
cwtl
dec
js
pushf
inc
adc
fidivrl
sub
sbb
fs
lcall
mov
inc
ss
int3
adcb
adc
cmp
sub
cmpsb
push
cld
lods
jmp
and
add
jno
mov
xchg
cltd
cld
adc
movsl
push
mov
fistpll
and
mov
pop
xchg
xor
and
adc
bound
inc
test
leave
dec
out
cmp
xor
lret
xor
pusha
and
mov
jae
in
in
mov
pop
adc
rorb
jle
lods
jne
cmpb
in
mov
lcall
sbb
or
or
in
push
out
jge
push
jns
ja
mov
sub
pop
repnz
icebp
das
add
push
sub
lret
cmp
les
jl
addr16
filds
cld
scas
xchg
mov
cmp
mov
push
or
addb
push
mov
and
inc
iret
sub
movsl
popf
xchg
xor
stc
notl
push
mov
add
pop
in
cli
imul
dec
movsb
cmp
js
push
imul
shrb
jmp
fidivs
jno
cmp
adc
sahf
and
pusha
and
xchg
nop
loope
adc
aam
mov
jecxz
sub
mov
mov
mov
pop
inc
dec
adc
inc
imul
fsubs
jl
mov
mov
cli
pop
inc
je
out
xchg
mov
adc
adc
cld
mul
inc
pop
mov
cmp
outsb
aaa
repz
stos
and
int3
inc
clc
adcb
mov
push
xchg
xchg
adcl
jecxz
enter
leave
imul
pop
push
and
in
sub
mov
push
pop
push
add
rorl
adc
sub
hlt
std
xlat
jns
lret
sub
leave
mov
je
cmc
loop
imul
mov
out
test
je
sbb
loop
sub
push
fsubl
ds
cmp
and
inc
jecxz
xchg
daa
mov
pop
xchg
ret
dec
ljmp
inc
pop
add
xor
push
mov
outsl
xchg
xor
sub
pop
imul
or
mov
hlt
inc
dec
sbb
movsb
xor
rolb
add
mov
mov
subl
imul
mov
cltd
sub
push
push
loope
push
iret
push
adc
arpl
loopne
fistl
out
addr16
or
lret
xor
xchg
xchg
mov
mov
rolb
push
stos
jbe
or
mov
cmp
and
mov
sbb
sarb
inc
jmp
mov
fiadds
push
xor
push
or
daa
mov
sti
ss
scas
cmp
out
pop
shll
xchg
enter
cmp
push
arpl
sbb
pop
cltd
pop
insl
paddd
aad
and
dec
das
push
in
push
arpl
fistps
dec
mov
xchg
daa
rolb
lods
adc
loopne
std
mov
inc
push
divb
push
daa
movsb
push
ds
pop
outsl
imul
pop
js
xchg
bound
sbb
mov
inc
mov
inc
push
cmp
xor
out
pop
sub
lock
jbe
fadds
xchg
mov
or
mov
inc
packsswb
loopne
adc
mov
or
daa
imul
or
pop
push
add
sub
jne
insb
or
or
or
jge
mov
pop
ss
jae
in
add
cli
jns
rcr
dec
loope
jbe
int3
pop
repz
adc
ljmp
sbbb
push
push
jl
adc
or
mov
jae
add
mov
inc
lret
jle
xchg
jo
add
mov
mov
gs
lods
fdivrs
leave
pop
ret
js
nop
mov
call
dec
in
add
pop
dec
push
cmp
push
or
idivb
xor
sub
in
das
lret
push
mov
rcrb
mov
out
shll
inc
cwtl
dec
nop
sub
push
inc
dec
sub
cmp
pop
xchg
xchg
iret
push
mov
mov
subl
mov
aad
add
out
pop
enter
mov
hlt
dec
adc
xchg
adc
push
das
rcrl
jnp
test
adc
sbb
arpl
popa
fldenv
sub
daa
push
shl
adc
in
imul
scas
out
nop
xchg
aas
inc
inc
sub
add
fucomip
fldenv
mov
mov
les
call
or
mov
in
jno
inc
push
pop
jl
addl
repz
popf
movsl
in
sub
mov
sub
lret
xchg
loop
dec
cmpsb
push
into
data16
fisubrs
int3
shll
mulb
lods
rcrl
popl
add
stos
xor
call
movsl
cwtl
or
mov
push
fcompl
inc
sub
icebp
in
add
scas
sbb
sub
dec
cmp
aaa
cmp
push
cld
repz
pop
out
xor
insb
dec
adc
pop
mov
xchg
cmpsb
sti
xchg
lods
mov
test
dec
add
ret
sub
mov
or
rdmsr
rcr
test
fdivl
stos
mov
xchg
xor
and
fcomp
int
cltd
mov
js
fimull
xlat
test
xchg
inc
cli
cmp
or
xchg
icebp
mov
sti
cmp
mov
les
or
jne
jne
push
loopne
xchg
adc
and
mov
adc
sub
jl
cmpsl
jg
mov
incb
daa
lds
fwait
xchg
sub
int
or
and
ret
test
outsl
mov
orl
pop
popf
ror
test
mov
stos
outsb
fs
pop
jb
nop
or
into
mov
and
jo
xchg
jmp
icebp
mov
add
mov
rolb
fstl
adc
xchg
dec
inc
aas
lock
icebp
imul
in
mov
dec
lods
xor
imull
fisttps
mov
mov
pop
and
add
cmp
push
push
into
in
push
sub
or
lret
dec
xchg
cltd
sbbl
mov
push
jns
mov
popf
pushf
inc
fisttpl
add
pop
pop
int
jge
lcall
fwait
leave
sub
popf
enter
push
inc
xor
sub
jae
les
in
pop
dec
mov
add
sarb
pop
xlat
in
test
sbb
insb
jp
sbb
or
mov
mov
mov
aam
loope
ret
icebp
mov
jbe
mov
dec
push
in
insb
hlt
pop
fwait
nop
dec
xchg
dec
pushf
ds
add
xchg
das
dec
aad
sub
fidivrl
mov
inc
scas
xor
addl
sbb
cmp
test
sbb
nop
mov
mov
lods
lea
mov
fwait
or
pop
fcomps
push
xchg
mov
jb
jae
sbb
inc
xchg
sahf
dec
cwtl
ret
add
push
xor
in
pop
mov
dec
xchg
push
test
lea
mov
push
pusha
dec
and
jp
push
fnstsw
shll
mov
rcl
ss
aaa
test
and
inc
sarl
xor
lcall
push
pusha
stos
add
jg
dec
pop
sbb
push
jmp
adc
mov
xchg
inc
int3
adc
pop
insb
lret
dec
mov
lcall
ds
imul
ljmp
xchg
cmp
dec
push
stos
imul
sar
pop
outsb
stos
jnp
mov
in
mov
js
push
add
xchg
xchg
andl
es
add
adc
xchg
inc
mov
movb
adc
data16
xchg
mov
add
lcall
repz
ret
mov
mov
push
sahf
imul
shrb
cmp
movl
rcll
jns
sahf
sub
lret
pop
adc
jle
mov
pop
scas
fsubrs
sbb
das
sub
pop
mov
pop
push
popa
dec
xchg
sbbl
adc
xor
lahf
dec
cmpsl
or
idiv
or
scas
faddl
sbb
shll
mov
in
call
cmc
ljmp
inc
xor
dec
mov
fs
lds
imul
stc
add
pusha
mov
es
push
and
outsl
xor
mov
inc
mov
je
loop
pop
pop
repz
adc
jg
jns
loopne
cmp
dec
xchg
push
and
fdivrs
cmpl
or
jb
icebp
pop
sbb
addl
and
lahf
subl
cltd
insl
mov
in
stos
fildll
pop
mov
xchg
mov
xor
stc
sbb
lods
rcll
lcall
fldt
inc
cmpl
jge
xor
add
mov
sarb
xor
xchg
mov
xlat
popa
in
inc
xchg
iret
movsl
jo
jecxz
divb
popa
cli
punpcklwd
lods
fiaddl
je
sti
arpl
das
mov
pop
cmp
fisubrs
roll
mov
adc
leave
mov
popa
and
jle
push
dec
out
push
cmpsb
mov
movsb
out
and
jg
cld
popa
mov
shlb
push
adc
movsb
arpl
arpl
je
inc
enter
jno
pop
lcall
mov
or
sub
jb
mov
rclb
dec
fwait
pop
dec
xchg
mov
std
sahf
push
testl
mov
scas
dec
loope
lock
jmp
push
pop
pop
fistpl
push
icebp
inc
jecxz
pop
sbb
cmp
mov
cmp
jne
dec
mov
imul
outsb
push
sub
subb
push
inc
mov
ja
lret
mov
cltd
push
ljmp
dec
dec
pop
and
push
ljmp
mov
xor
mov
fadd
sbb
repnz
outsb
fcompl
pop
mov
test
xor
jle
ja
rolb
and
and
sub
mov
push
mov
arpl
sbb
aam
mov
imul
mov
popf
mul
addr16
inc
das
jnp
cmp
xchg
push
mov
xchg
mov
aaa
adc
repz
test
fisttpll
mov
iret
jl
sbb
jnp
bound
add
xchg
stos
sub
fwait
lcall
icebp
lods
dec
pop
shlb
cmp
cmpsb
hlt
pop
jns
adc
or
and
fstp
sbb
add
mov
loopne
leave
xchg
push
mov
and
push
mov
sbb
mov
call
jge
fisubs
out
lcall
fadds
mov
js
mov
mov
jne
xlat
add
cmpsl
mov
mov
addr16
add
adc
cmpsb
jp
xlat
stos
push
add
addr16
dec
cltd
jne
pop
frstor
sbb
dec
cmp
dec
sti
push
in
push
adc
cmc
sbb
int
add
mov
clc
xor
xchg
mov
xchg
out
or
mov
xchg
add
jl
xor
cmp
les
pop
mov
adc
mov
stos
pop
lahf
xor
les
jns
lds
out
imul
in
scas
mov
imul
push
pop
mov
mov
into
stc
mov
sub
sbb
pop
movl
dec
xchg
in
aaa
imul
filds
xlat
jge
mov
int3
push
mov
sets
push
mov
adc
inc
xchg
cmp
frstor
lds
das
sbb
push
push
jl
add
arpl
test
pop
jg
out
aad
test
mov
hlt
jmp
jl
sti
push
ret
mov
je
xchg
std
pop
test
inc
dec
sub
mov
mov
out
mov
insl
arpl
mov
mov
jnp
or
shrb
les
hlt
push
cmp
sbb
pushf
xor
or
nop
sub
mov
inc
sub
pop
fdivr
dec
inc
dec
lahf
mov
fidivs
data16
cmp
ret
adc
insl
loopne
fsubl
xchg
mov
into
inc
inc
xchg
pop
lods
leave
add
or
adc
or
call
or
dec
and
cwtl
mov
ror
sbb
in
pop
mov
insb
fisubrl
inc
lods
fbstp
dec
repnz
push
xchg
ja
movsb
mov
ficomps
sbb
mov
dec
or
std
add
lret
adc
enter
lahf
hlt
xchg
loop
cld
lods
lahf
lds
dec
imul
and
pop
jmp
sub
sub
xchg
xchg
jmp
adcb
dec
insb
setg
add
pop
inc
or
mov
hlt
cmp
inc
bnd
inc
cmp
mov
rcrl
sbb
xor
push
aad
adc
std
mov
sub
cmpsb
decb
cmp
mov
xchg
add
mov
or
push
mov
pushf
cs
xor
mov
jae
xchg
jno
rorb
push
push
mov
lahf
push
jae
pop
mov
pop
push
dec
dec
xor
pop
push
mov
fcmovbe
in
lods
ja
cld
in
shlb
sbb
add
add
pop
cmp
lods
popa
jns
jle
mov
mov
ret
std
sbb
xchg
inc
imull
lods
push
cmp
sbb
pusha
mov
push
jecxz
push
clc
aaa
sbb
pusha
dec
shr
mov
sbb
pop
mov
and
cs
push
out
jns
push
cs
insb
add
mov
adc
xlat
fstpl
pop
pop
stc
sbb
or
jp
out
movsl
shlb
mov
dec
dec
shlb
leave
push
sbb
mov
jge
inc
icebp
and
push
dec
movb
jle
leave
nop
out
nop
mov
mov
or
mov
fwait
repnz
fs
stos
enter
jg
imul
adc
xorl
dec
mov
lret
test
dec
add
addb
dec
mov
push
mov
xchg
icebp
push
fidivrl
popf
mov
pop
test
outsl
mov
mov
stc
mov
jo
aas
out
outsb
les
popa
push
daa
into
leave
sbb
inc
sub
inc
cmpl
xchg
fadds
push
sub
pushf
cmp
cwtl
mov
push
je
js
cmp
dec
push
pusha
gs
xor
or
pop
pusha
xchg
int
aam
sbb
sti
sub
push
push
push
movsl
inc
mov
shlb
push
cli
or
mov
jb
xchg
sbb
mov
or
adc
cld
mov
ret
lods
in
sub
jns
xlat
call
mov
imul
mov
int
fs
clc
aas
push
fsubrs
dec
cmp
sub
inc
sbbb
subb
jl
ljmp
pop
lcall
xlat
mov
stc
mov
movsb
push
xchg
sub
popa
jmp
test
jns
pop
or
ja
insb
dec
jge
push
lods
scas
ffree
std
leave
or
movsl
mov
test
mov
repz
cs
sahf
jg
inc
push
rorb
jno
xchg
pop
outsl
push
lods
jnp
inc
iret
xchg
push
pop
mov
mov
dec
push
aad
push
xchg
cmp
xlat
mov
xchg
mov
mov
or
cltd
add
js
fnstcw
mov
push
jecxz
cmpsl
xor
bound
add
push
mov
cmpsb
push
int
sti
call
ss
fsubl
jne
fucomp
sahf
popa
imul
add
xor
popf
dec
enter
or
push
adc
dec
fdivr
push
aaa
sar
insb
pop
out
sub
fisubrs
mov
add
fildl
push
lock
test
leave
add
dec
arpl
dec
mov
mov
scas
push
mov
push
fbld
xchg
pop
jecxz
xchg
aas
fisubs
and
xlat
lods
push
sahf
xchg
xchg
mov
dec
mov
push
cmp
cli
pop
or
cmp
sub
inc
fisttpl
lds
bound
loop
mov
ljmp
mov
sbb
movsl
out
sub
mov
inc
adc
rcl
jg
aad
and
loope
xchg
fildll
movsb
ja
sub
jb
adc
jb
jl
ljmp
movsl
or
push
ret
add
and
negl
aam
aas
popf
dec
pop
add
or
dec
sub
dec
andl
inc
mov
out
movb
sbb
ret
mov
mov
pop
test
mov
xchg
out
and
fiadds
sub
pop
lea
insb
ficompl
sbb
out
je
cmp
push
rol
pushl
add
out
pop
in
in
mov
mov
sub
pop
aaa
in
ret
leave
subb
mov
mov
or
inc
dec
out
mov
dec
pop
jae
sarb
push
cmc
sbb
lahf
cli
push
mov
xchg
lahf
stos
mov
adc
mov
or
out
ror
pop
iret
inc
pop
call
inc
add
and
cmp
out
sub
lea
xchg
jns
stc
xchg
mov
jo
mov
mov
fadds
ja
mov
jbe
mov
push
or
and
pop
dec
xor
shll
gs
jg
clc
mov
adc
clc
enter
aaa
and
push
into
stc
dec
or
rorb
out
or
inc
ljmp
cmp
jb
sub
inc
shlb
bound
lea
inc
lods
fwait
movsl
xlat
cli
test
mov
xor
ret
and
adc
dec
pop
mov
das
inc
int3
mov
pop
jg
leave
jge
xchg
sub
lahf
dec
pop
push
fs
movl
filds
pushf
jns
pop
pop
test
jmp
jmp
jae
rcrl
div
jge
mov
mov
pushf
fs
sbb
pop
addr16
sbb
je
add
dec
andb
add
ss
xlat
dec
push
jecxz
lea
mov
lahf
lock
cmp
and
scas
xor
mov
dec
jmp
lods
push
push
xor
push
sar
bound
test
fidivrl
fwait
stc
xchg
je
inc
jmp
rcl
shlb
xor
adcb
adc
dec
and
imul
jb
mov
cs
in
cmp
scas
mov
xchg
pusha
scas
test
sbb
add
ret
cmpsl
xorb
add
cmp
cmp
inc
sbb
pop
ror
push
test
or
fidivs
stos
jb
pop
mov
int
pop
push
and
sub
jns
stos
inc
arpl
in
loopne
sub
and
push
cmpsl
mov
lods
add
movsl
pushf
call
aaa
lahf
push
bound
sub
add
mov
sbb
sahf
scas
cmp
loop
push
sbb
sub
movsb
sbb
imul
dec
sub
mov
pop
hlt
sbb
add
stos
adc
sub
and
sbb
imul
rcrl
cmp
sbb
mov
jne
fimuls
hlt
xlat
les
out
shl
adc
sarb
sub
or
sbb
loop
sub
dec
dec
ds
shlb
push
stos
jno
imul
rolb
push
jmp
sbb
add
cmp
dec
mov
popa
mov
xchg
test
hlt
or
push
sub
inc
jmp
scas
push
pop
sarb
jnp
pop
add
add
lret
jbe
jle
sbb
icebp
outsb
insl
and
jmp
js
pop
inc
testl
popf
outsb
sbb
xor
inc
mov
out
imul
pop
mov
inc
add
sarb
rolb
fisttps
mov
xor
jb
scas
cltd
test
pop
js
xor
test
addr16
insl
lds
sbb
scas
mov
mov
cwtl
jb
push
mov
cmpsl
call
data16
push
cld
fcoms
imul
jae
mov
mov
out
push
pop
jnp
icebp
in
push
jp
fs
or
mov
cmpsl
out
xorb
mov
mov
sub
repnz
leave
add
fimull
fadd
stc
movsl
adc
jne
add
mov
je
fstl
daa
pop
shrb
test
sti
sub
cmp
mov
int
fimull
data16
sbb
sahf
and
mov
mov
stc
pop
jmp
adc
mov
insb
dec
cmp
movsb
iret
xchg
popa
cmp
addl
xor
sbb
cwtl
and
jnp
popa
jmp
shl
ja
cwtl
ja
out
fsubrp
inc
add
std
in
inc
sbbb
cmp
mov
in
sub
pop
mov
and
bound
loop
dec
mov
int
add
jmp
fst
or
pushf
jne
and
mov
cmp
cwtl
adc
jae
dec
ds
insl
or
ss
imul
adc
xchg
pop
push
daa
pop
and
cmpsb
xor
adc
and
idivb
fimull
fs
fsubr
lea
hlt
scas
mov
pop
test
popf
sbb
mov
loop
pop
pop
imul
movsb
aam
std
repz
jp
cs
aad
cmp
popf
inc
add
xchg
adc
pop
ficomps
mov
aam
sbb
dec
cli
movb
jnp
dec
shlb
cmpsl
and
pop
mov
and
sub
mov
stc
stos
pop
and
adc
xchg
mov
pop
push
add
mov
mov
xlat
push
lock
mov
into
xor
mov
data16
sbb
movsb
sub
and
pop
and
pop
nop
mov
and
lock
cmp
pop
cwtl
push
sub
orb
mov
sbb
iret
push
push
sub
loopne
mov
fdivrl
mov
movsb
inc
fcmovb
fwait
sti
inc
mov
aas
cs
xor
or
mov
and
or
jnp
cvtps2pd
push
rcrl
test
mov
aam
dec
sti
xor
xchg
fsubrl
mov
in
cmpsb
mov
dec
pop
and
mov
loopne
adc
loope
cmp
repz
out
repz
push
cmc
push
scas
cmpsl
lods
outsb
pop
out
loop
sub
lcall
add
mov
cmc
push
jbe
mov
sbb
mov
add
mov
cli
adc
test
xor
or
in
icebp
pusha
inc
push
inc
dec
push
pushf
movsl
loop
inc
push
mov
cmp
popf
jo
shl
push
push
sub
mov
hlt
add
sbb
fwait
or
das
sbb
pop
push
add
xlat
stc
and
mov
inc
pushl
leave
jb
and
loop
pop
stos
fwait
aam
dec
das
in
push
sbb
adc
adc
hlt
sub
stc
cmp
xchg
mov
push
pop
adc
sbbl
sahf
scas
call
ja
jae
push
aad
out
push
jbe
mov
leave
sbb
jae
inc
cs
cmc
lock
icebp
imul
lret
xor
or
push
pop
fcomp
test
mov
pop
sahf
jns
pop
xor
and
push
inc
stos
iret
inc
cmp
sub
add
dec
out
out
out
or
sub
nop
imul
repnz
popa
icebp
dec
xor
repnz
stos
mov
sub
cmpl
mov
ret
fimull
mov
ret
xchg
pop
mov
fmuls
inc
dec
or
mov
ja
cli
mov
shlb
movsl
bound
dec
pop
xchg
sub
mov
mov
addr16
repz
xchg
mov
in
loopne
clc
sub
push
cmp
jo
cmc
mov
jl
jle
inc
enter
sbb
mov
clc
jecxz
in
fcoml
std
fisubrl
outsb
jp
sbb
and
arpl
mov
das
add
ret
cmp
mov
and
cmp
mov
js
push
insl
cmp
aas
loopne
mov
cmp
xchg
sbb
inc
adc
stos
bound
jno
inc
jnp
jbe
ja
repnz
mov
push
dec
sub
xor
aas
xor
rcrb
aad
add
dec
inc
jmp
adcl
scas
adc
sub
loop
pop
inc
repz
repnz
mov
into
inc
push
sub
push
out
dec
test
arpl
insb
shlb
jl
stos
in
adc
adc
orb
pop
lahf
retw
add
mov
test
push
mov
inc
dec
in
cmp
int3
cmp
fldt
xchg
aas
stc
fwait
in
stc
sahf
lcall
test
fstl
out
imulb
shll
popf
fldt
mov
or
xchg
int
fisubrl
scas
sub
dec
cmpsl
fs
xchg
sahf
stc
fsubrl
add
dec
xor
pop
add
xrelease
xor
dec
mov
sbb
sbb
in
je
inc
sub
call
sbb
out
data16
sub
test
push
mov
mov
cmpsl
loop
hlt
mov
sahf
push
mov
popa
or
nop
mov
xorb
mov
or
cmp
pushl
mov
mov
insb
dec
sub
rclb
repnz
ljmp
push
mov
out
stos
jl
and
cmpsb
ret
jnp
cmp
aad
imul
lock
rcr
mov
repnz
fmuls
add
push
sbb
cmp
jmp
dec
push
mov
out
test
in
icebp
int
pop
sub
push
mov
inc
f2xm1
mov
outsl
cwtl
cmp
pusha
mov
sti
mov
jae
bound
das
int3
xchg
inc
loopne
jo
frstor
rol
fisttpl
push
decb
mov
jecxz
jo
pop
fdivr
insl
pop
hlt
dec
pop
xchg
sbbb
mov
call
add
xchg
std
test
push
or
subps
inc
frstor
jno
in
push
pop
mov
xchg
xchg
xor
mov
add
icebp
jp
adc
dec
ss
int
and
popf
and
mov
or
add
or
loop
lods
xor
xchg
lods
pop
push
fisttpll
ret
cli
je
notb
into
mov
jns
cld
lcall
sbb
cli
ficoml
mov
xchg
out
lods
xor
inc
icebp
das
cld
bound
pop
cli
dec
dec
lock
mov
push
pop
int
xor
aam
or
sub
xor
shrb
sahf
dec
and
push
clc
mov
xchg
xor
push
jle
pop
hlt
pop
arpl
test
xchg
out
sub
leave
fs
jl
imul
fwait
add
sbb
jns
xor
fistl
or
mov
jle
adc
add
sti
insb
test
xor
pusha
mov
add
fildl
xchg
or
pop
repnz
cmp
pop
jo
in
test
dec
mov
fnsave
mov
out
aam
shlb
push
rcrl
jns
mov
mov
fmul
sti
in
xor
mov
daa
jne
into
clc
fcom
and
mov
xor
insb
mov
or
sbb
cmp
aad
loopne
mov
stos
and
outsl
ret
bound
jmp
pop
fs
adc
cmp
fstpl
cmp
lcall
je
testb
pop
or
add
sub
in
sbb
mov
stc
shlb
into
push
loope
in
aam
dec
test
outsl
sahf
add
insb
iret
mov
sub
fdivs
das
xor
notb
out
lret
adc
adc
dec
ljmp
mov
and
jo
es
std
rcll
out
adc
mov
mov
icebp
ja
add
hlt
mov
inc
rcrl
sbb
rolb
les
adcl
dec
mov
icebp
xchg
pushf
ljmp
notb
cwtl
pop
dec
out
push
incl
stc
outsb
xorl
sub
aaa
inc
in
out
mov
mov
mov
jge
shll
mov
lea
cmp
jae
insb
pop
lods
sbb
sbb
outsl
fs
lret
sti
mov
lock
push
mulb
ljmp
mov
mov
imul
sub
mov
lock
jl
sbb
mov
fstp
xor
daa
sub
lcall
lods
aam
jle
dec
fdivrp
cwtl
jmp
stos
mov
cwtl
sub
mov
test
in
into
ret
loop
add
icebp
sub
or
jns
sbb
and
inc
andb
mov
idiv
pusha
movsl
mov
adc
pop
cmp
inc
mov
mov
push
jmp
std
sub
and
cs
in
shll
push
sbbl
and
jne
icebp
addb
jb
jl
sub
in
inc
ss
cli
aas
push
push
push
daa
aaa
int3
aam
push
shrb
cwtl
mov
cmp
mov
loop
dec
hlt
sbb
fwait
je
int3
in
stos
xchg
addr16
loope
shl
jb
jbe
iret
ror
mov
ret
pop
scas
pop
sbb
jge
leave
add
mov
lret
jae
mov
gs
out
sub
inc
ds
sbb
push
xor
pop
in
and
dec
lods
mov
mov
imul
push
mov
imul
andl
call
inc
icebp
cmp
mov
mov
ss
jno
mov
pop
xchg
and
loope
push
fnsave
fnstenv
not
adc
flds
fcmove
pop
pop
adc
adc
test
out
xchg
sub
frstor
xchg
fwait
and
mov
xlat
inc
test
fidivs
xchg
cld
dec
cmp
mov
leave
dec
popl
outsb
fisubs
or
lret
jae
sbb
sbb
push
dec
stc
cld
add
or
jp
push
mov
xchg
jecxz
lods
xchg
imul
jns
sbb
cmp
push
clc
subb
mov
push
push
mov
in
sbb
xchg
jbe
in
jp
call
xchg
mov
add
repz
cmpsl
push
sub
inc
add
cmp
pop
jns
add
cld
mov
fsubrs
ret
dec
pop
sub
or
push
mov
gs
sbb
mov
shlb
jo
xchg
imul
xchg
jnp
lods
ss
daa
push
dec
cld
ja
das
jns
repz
push
inc
repnz
push
cwtl
push
xchg
push
pushf
dec
icebp
mov
jnp
jo
mov
fstl
ss
es
xchg
out
push
shl
mov
add
lds
loope
jmp
sub
xor
cmp
cmp
stos
inc
inc
testb
or
enter
jmp
jmp
repnz
push
push
xchg
in
cmp
mov
dec
push
lods
add
daa
test
or
mov
mov
or
nop
and
lods
test
mov
and
adc
je
sbb
mov
imul
pop
add
push
mov
sbb
fadds
sbb
daa
jb
lea
pop
pop
loope
mov
jg
xor
gs
shlb
je
popa
sbb
lods
mov
jge
stc
dec
push
icebp
jmp
cmp
xor
sub
sbbb
aam
push
dec
jmp
mov
addr16
sbb
aas
mov
mov
das
cs
js
xor
mov
das
lret
imul
cltd
mov
lock
call
mov
sahf
mov
shlb
aaa
mov
xor
or
xchg
cmp
push
outsb
jp
mov
test
fdivr
in
adc
cmpsb
mov
test
daa
xchg
mov
mov
lods
pusha
std
xor
and
dec
inc
int3
sub
outsl
imul
mov
sahf
mov
pop
push
mov
cmpsb
fisttps
mov
mov
les
add
je
fsubr
and
jg
lret
faddl
adc
imul
sarl
aas
jae
adc
lock
sahf
add
iret
fabs
inc
mov
aam
inc
adc
fdivrl
hlt
mov
mov
scas
shl
mov
jae
int
push
push
ret
sahf
and
inc
neg
out
scas
in
inc
mov
cmp
fwait
in
sub
cmp
lret
mov
mov
jb
pop
pushf
bound
imul
test
cli
jb
inc
mov
stos
and
xchg
orb
xor
jle
es
dec
int
ret
dec
pop
hlt
jl
sub
adc
mov
mov
sub
das
jmp
dec
mov
call
inc
mov
lret
bound
dec
jg
add
test
test
jnp
cmp
inc
in
fnstcw
lret
cs
enter
fldenv
cmp
mov
cwtl
xchg
lret
fmuls
daa
inc
and
mov
cld
mov
mov
lods
lret
lock
out
imul
mov
push
sbb
pop
cmp
test
das
push
add
push
inc
cmpsb
xchg
test
and
jmp
push
gs
jno
cmpsb
sub
jl
dec
mov
and
dec
cmc
lea
xchg
imul
mov
cmp
mov
loope
mov
push
mov
inc
pop
cmp
pop
and
rcrl
push
mov
xor
mov
lods
ljmp
call
bound
jecxz
push
in
rcr
or
fdiv
in
pushf
jge
outsl
sahf
xor
cs
xchg
loopne
test
xchg
add
pop
add
int
loopne
xchg
out
xchg
insl
pop
fcmove
xchg
clc
or
sbb
in
mov
mov
repz
pop
dec
sub
leave
sub
clc
pop
mov
data16
and
cmpsl
mov
mov
imul
enter
mov
mov
rorl
xor
mov
mov
jno
ds
xchg
cmp
mov
dec
dec
in
test
xchg
lret
les
test
aaa
mov
adcl
sbb
sbb
gs
push
push
xchg
inc
call
pop
sbb
and
int3
cmp
push
mov
aad
xchg
insl
ja
cmp
aas
fdiv
and
rolb
in
mov
les
stos
lea
or
jb
sbb
mov
outsb
mov
xor
mov
cwtl
mov
scas
push
sbb
mov
mov
pop
scas
int3
out
add
int3
mov
dec
and
or
cmp
in
sbb
xchg
cwtl
xlat
jg
mov
pop
xchg
ljmp
test
mov
add
push
mov
mov
hlt
add
and
sbb
cltd
add
rclb
stos
jmp
add
push
mov
pop
lea
rclb
or
sbb
xchg
push
inc
inc
jo
bound
sub
mov
cmp
push
fidivs
xchg
sbb
push
pop
rep
fwait
pop
sbb
aaa
add
lahf
scas
mov
iret
rcl
add
mov
je
ret
movsb
inc
or
js
or
shl
sahf
mov
mov
jnp
mov
stos
pop
in
stc
arpl
dec
cmpsl
mov
jns
lock
in
dec
lods
aaa
mov
ljmp
aaa
int
arpl
jge
adc
stc
adc
loop
test
inc
test
jle
movsb
push
or
mov
xor
pop
jmp
cmp
cltd
js
pop
fiadds
mov
mov
push
dec
movsl
and
inc
xchg
sbb
inc
sbb
add
inc
jle
loope
cmc
test
sbb
cltd
adc
out
xchg
cmpb
xchg
int
in
push
es
add
jmp
es
xor
push
sti
mov
xchg
mov
and
push
adc
ret
aam
and
mov
outsl
jne
je
lods
xchg
xchg
sub
enter
test
cmpsb
je
ss
mov
pop
pop
movl
or
jle
rcrl
lods
cmp
add
add
int3
cmp
sub
jnp
aad
sarl
enter
shlb
inc
outsw
jns
pop
lcall
cwtl
inc
mov
jmp
inc
mov
cmp
dec
je
xchg
fbld
and
push
scas
data16
sbb
push
test
or
pop
enter
adc
cmpsl
push
sbb
push
ja
hlt
lea
stc
pop
adc
jmp
test
scas
push
mov
fcompl
xchg
add
push
add
cmp
rcll
mov
fs
imul
ja
sahf
push
dec
add
lret
sub
mov
or
cmp
mov
xor
cmc
adc
cwtl
cli
lds
mov
repnz
mov
xchg
les
loop
test
mov
adc
jmp
inc
push
ja
mov
enter
push
out
test
mov
add
inc
test
lods
xchg
lcall
fcmove
pop
adc
xchg
nop
mov
paddq
out
movsb
xor
inc
jge
cmp
aas
mov
sub
clc
push
mov
dec
xchg
push
imul
push
mov
imul
add
incl
cmp
sub
out
ds
jge,pn
xlat
mov
dec
aam
sub
ja
mov
cmp
repnz
loopne
bound
sbb
insl
pop
aad
add
imul
das
lea
jmp
stos
repnz
mov
cwtl
mov
nop
movsb
int
test
sub
cmp
sub
xlat
lret
sti
xor
fistpll
cmpsb
test
jo
cmc
pop
ret
push
mov
sbb
mov
stc
std
imul
push
mov
sarb
inc
push
push
rcll
testl
adc
arpl
add
dec
push
outsb
pop
inc
push
dec
sbb
mov
cmp
loope
cmpw
mov
sti
rcrl
pop
pusha
push
mov
ret
cmpsl
mov
mov
cmp
cmpb
mov
outsb
push
arpl
cld
cmp
pop
clc
sbb
fimull
jnp
push
xchg
xor
mov
xchg
cmp
jno
cli
mov
dec
or
cwtl
fisttps
inc
xor
imul
hlt
mov
mov
outsb
mov
mov
aaa
jl
dec
cld
jg
dec
dec
xor
mov
xlat
sbb
jmp
sbb
mov
dec
mov
popa
pop
sti
sti
shrb
pop
sub
lea
mov
pop
std
lock
lret
xchg
mov
call
rclb
jnp
sahf
push
lods
cmp
lods
pavgb
jmp
sub
and
jg
pop
movsb
dec
lret
mov
mov
lret
mov
ja
lds
stc
sbb
lcall
adc
adcb
ja
mov
bound
cltd
je
xorb
iret
xchg
inc
cmc
loopne
popf
and
and
jl
gs
rclb
and
mov
std
scas
mov
inc
sti
sbb
cmp
mov
mov
lods
imul
xor
ficoml
xor
jge
or
das
push
call
dec
inc
bnd
push
xchg
sbb
sbbl
shrb
cmpsl
lahf
out
sbb
mov
repz
xor
mov
mov
add
sub
mov
test
mov
cmp
roll
insl
adc
inc
in
repnz
xchg
pop
cs
cmp
popf
int
or
sbb
sarl
testb
jmp
imul
push
out
jmp
icebp
inc
aad
sbb
mov
cmp
add
outsb
add
inc
pop
or
lahf
xchg
cmp
out
outsl
pop
loop
movsl
adc
inc
dec
push
dec
pop
mov
inc
std
mov
fidivrl
adc
xchg
in
imul
jmp
sbb
mov
mov
mov
mov
sarl
outsl
aad
push
ljmp
cmp
cs
inc
jle
aas
jecxz
adc
push
mulb
push
fcmovne
pop
sahf
pop
mov
push
adc
pop
or
sbb
loop
sahf
sub
sahf
imul
xchg
and
scas
push
adc
repnz
out
pop
cmp
scas
shrb
mov
add
and
aaa
sub
movsb
lods
imul
jmp
or
add
hlt
pop
mov
out
sahf
cmp
jbe
jb
lods
test
int
inc
pop
jne
mov
ret
cmpsb
jmp
or
cs
lods
jns
sbb
outsl
push
scas
inc
int3
rcrb
int
lret
enter
lcall
ficomps
pop
jne
xchg
push
scas
int3
and
mov
sub
dec
fiaddl
cmp
lds
sbb
inc
sub
xor
mov
xchg
xor
fstps
xlat
ja
out
jne
sti
fidivrl
ret
dec
sbb
fdivrl
push
cmp
jp
cmpsb
faddl
lcall
sub
mov
rorl
add
or
pop
mov
pmullw
xorb
aaa
inc
iret
test
mov
or
jae
dec
push
lods
lcall
mov
inc
mov
lock
pop
stc
pop
movsb
mov
idivl
or
pop
and
push
xor
insl
add
pusha
data16
cs
lock
inc
shlb
lret
lea
fists
aad
push
arpl
push
push
add
or
dec
sbb
int3
xchg
push
mov
add
xchg
cmp
inc
xor
rorl
xchg
pop
insb
xchg
imul
jl
mov
leave
movsl
lods
or
xchg
shlb
inc
fwait
pop
ret
mov
pop
mov
pushf
xchg
ret
jp
sbb
jbe
out
jl
pop
push
and
mov
sarl
or
mov
jbe
pushf
and
xchg
insb
in
hlt
push
mov
jmp
sbb
sub
dec
ret
cmp
sbbl
insb
pop
adc
and
addr16
iret
dec
imul
scas
adc
xor
cmp
mov
xor
and
cmp
clc
add
mov
cli
xchg
sbb
daa
adc
sub
rol
ds
xor
lea
outsl
aaa
iret
push
jae
inc
popf
cmpsl
imul
repnz
ret
add
imul
mov
movsb
mov
imul
mov
cmp
pop
daa
popf
push
push
mov
or
rcrl
xchg
lods
cmp
js
mov
es
int3
add
lcall
rcrl
pop
add
mov
mov
add
mov
fadds
mov
mov
sarb
fildll
int
nop
pushf
cmp
add
add
fwait
jbe
push
inc
inc
xlat
in
lea
push
aad
std
inc
insb
aaa
jae
in
mov
fstl
gs
cltd
mov
fiadds
lret
pop
cmp
lret
push
cs
arpl
mov
inc
insb
in
or
imul
dec
xor
push
stc
push
pop
out
xchg
sti
inc
xor
jo
or
jnp
loope
fdiv
cmp
fbstp
push
pusha
lret
inc
leave
sub
es
push
mul
add
test
jnp
jp
xchg
pop
add
sub
sahf
pop
out
cmpb
out
xor
adc
xor
sub
push
xor
stc
xlat
push
push
inc
dec
lds
adc
in
shlb
add
out
roll
icebp
adc
mov
inc
movsb
cmpsl
add
mov
add
shrb
popa
dec
sbbl
dec
adcb
fmull
enter
cmp
rcrb
dec
das
pop
inc
dec
dec
ljmp
mov
mov
xor
and
loopne
mov
add
adc
fwait
aas
xor
enter
jge
inc
xor
gs
pop
dec
pop
sub
mov
mov
pmaxsw
int3
repz
mov
mov
jle
push
lcall
lods
orl
xor
dec
dec
push
mov
add
jnp
push
daa
push
inc
adc
sbb
filds
mov
jo
test
cmc
popf
xlat
push
scas
loope
push
and
rolb
out
add
pop
pop
jb
push
cwtl
jmp
mov
mov
scas
mov
movb
ds
cmpsl
out
inc
inc
mov
mov
or
shrb
cltd
insl
out
cmp
inc
ds
mov
test
nop
xlat
shrb
push
dec
outsb
std
xor
mov
dec
pushf
adc
sub
xchg
les
add
sahf
mov
ds
bound
cs
enter
jo
mov
mov
into
inc
and
mov
xchg
xlat
lret
out
test
xchg
int
or
or
push
add
sbbb
lret
cmpsb
push
ds
dec
push
dec
xchg
int
outsb
jns
repz
mov
add
dec
sub
inc
jo
mov
rcrb
outsl
push
subb
ret
pop
inc
pop
mov
and
sub
xchg
test
ja
xor
pop
xchg
scas
inc
xchg
dec
mov
and
sbb
popa
pushf
clc
idiv
mov
popf
adc
mov
dec
mov
in
js
popf
push
adc
test
xor
mov
push
push
mov
movsb
clc
jo
push
adc
xor
rcrb
outsl
inc
hlt
jmp
jns,pn
nop
cmpsb
ficompl
or
loope
pop
ret
sbb
ret
mov
pop
repnz
je
pop
xchg
rcr
cmp
adc
xchg
jmp
push
out
xlat
ss
jb
rorl
ss
sbb
sbb
fadd
pop
mov
sti
in
outsl
dec
inc
rolb
xor
mov
aas
mov
mov
popa
mov
or
mov
sub
call
push
push
xor
cmc
addb
enter
cld
sub
dec
es
cwtl
mov
cmc
jg
pop
mov
sub
test
push
and
outsl
sbb
sbb
stos
cmp
inc
fcompl
xchg
cmp
popl
pop
push
fimull
and
mov
js
insb
dec
frstor
jb
and
and
es
sbb
fidivrs
xor
sbb
in
outsl
jae
fwait
pop
cmpl
flds
jecxz
roll
test
jno
out
insl
out
fsubrs
sbb
mov
inc
mov
in
dec
dec
shrl
in
popa
push
incl
repz
xchg
mov
jno
js
xor
aam
push
mov
insb
cli
loope
mov
push
mov
data16
ret
insl
imul
subl
and
mov
jecxz
inc
dec
stc
or
js
ficoms
enter
dec
stos
ja
mov
popf
push
pop
stc
and
leave
sub
test
mov
fisubs
sub
shrl
add
loop
mov
xor
shrb
sahf
clc
out
ss
and
add
les
cmp
push
mov
fs
mov
pop
mov
mov
movsl
lret
mov
add
pusha
jmp
sub
adc
cltd
mov
mov
pop
adc
pop
cmp
stos
ja
dec
lock
into
sub
push
subl
pop
adc
imul
jo
jne
ret
mov
sti
aad
stos
bound
sbb
aas
xchg
pop
or
mov
inc
and
or
mov
inc
add
pop
dec
jns
fimull
mov
dec
and
sahf
mov
sbb
xchg
lret
out
insb
adc
imul
push
push
ret
outsb
mov
scas
cmp
loope
ljmp
xor
adc
test
mov
ja
in
push
cmp
xor
int
sbb
daa
mov
inc
pusha
pop
arpl
ret
mov
adc
lahf
int3
loope
nop
add
jne
decl
push
mov
dec
mov
aas
cmp
rolb
xchg
mov
inc
mov
imul
fldt
sti
aaa
sbb
imul
sub
inc
cwtl
cld
cs
add
stc
pop
push
jge
stc
mov
xchg
mov
out
dec
lock
add
icebp
mov
cmp
jmp
inc
add
fs
jle
add
sub
sub
outsl
mov
mov
or
clc
or
xchg
or
das
movsb
int3
mov
push
cwtl
mov
pop
mov
pop
or
loopne
jb
orl
loop
mov
sub
mov
inc
ficomps
pop
decl
dec
add
cmp
sub
mov
xchg
repz
rclb
inc
push
les
dec
mov
xor
adc
mov
mov
roll
and
out
popa
xlat
mov
jnp
ja
icebp
jns
fcomip
in
fdivrs
inc
sbb
repnz
leave
push
dec
xchg
sub
mov
int
inc
in
cmp
mov
dec
cli
jmp
pop
or
push
xor
cmp
inc
sub
testb
xchg
inc
mov
adc
sbb
mov
leave
lret
in
add
iret
cmpsb
jecxz
cmp
lcall
push
dec
out
push
inc
mov
mov
mov
sbb
push
dec
xor
popw
or
and
lahf
addb
stos
arpl
insl
fnsave
iret
and
dec
inc
jle
mov
sub
xchg
orl
pop
jecxz
dec
orb
mov
dec
xor
fldt
xchg
popa
ret
arpl
mov
or
xchg
mov
sub
mov
dec
es
mov
mov
nop
sbb
fisttpll
repz
test
jecxz
js
aaa
lods
gs
mov
mov
push
imul
aad
icebp
lcall
add
insl
inc
rcrb
pop
hlt
adc
outsb
jp
inc
push
stos
cld
sub
xor
iret
fprem1
jne
xor
pop
mov
nop
int
jmp
test
addr16
aaa
sub
jo
leave
fucompp
lods
mov
dec
mov
mov
and
ret
fidivl
mov
add
les
inc
sub
sub
cmpsb
push
enter
in
andl
mov
ja
pop
insl
jb
es
loope
and
mov
jg
push
add
sub
ficoms
or
in
sbb
jmp
xchg
push
stos
cmp
jno
test
pop
cmp
cmpl
inc
pop
or
mov
mov
dec
dec
sahf
fstps
push
jge
mov
cmpl
jle
pop
or
es
sets
mov
insl
jno
out
sti
pop
cmpsl
xor
ja
loopne
pop
and
call
popl
lcall
int
cmp
outsb
test
stos
and
fadds
fxch
cmc
insb
and
xchg
add
adc
repz
xchg
push
mov
fsubrs
loopne
push
xchg
and
xchg
rcrb
jecxz
mov
in
lahf
imul
sbb
or
mov
fildll
and
pop
jbe
jmp
inc
out
cmpsb
jb
loop
push
out
sbb
push
xchg
lea
inc
popf
mov
repnz
pop
inc
add
xlat
sub
push
sub
iret
dec
mov
adc
pop
xchg
sub
and
ja
cs
mov
in
fiaddl
sbb
pop
nop
fdivs
adc
and
dec
or
movsl
add
pop
push
push
rcl
dec
add
pop
daa
sbb
pop
pop
in
push
sub
lret
pop
ret
in
sub
inc
mov
xor
js
hlt
test
push
call
mov
pop
out
pop
pop
loop
mov
orl
test
movsl
ss
jbe
aas
pop
pushl
mov
in
jae
cmc
pop
and
mov
rcrb
sub
in
add
sub
sub
imul
dec
dec
insb
stos
or
add
pop
mov
int3
mov
ljmp
fmull
inc
inc
inc
and
push
je
cmp
push
out
adc
adc
jns
and
pop
clc
out
jp
fstl
cs
pusha
popf
sub
hlt
sbb
xor
mov
sub
lahf
popa
sti
ds
repz
mov
mov
mov
inc
jno
ds
repz
cmp
shll
xchg
fmull
popa
in
cmp
push
imul
test
in
mov
adcl
pop
testl
add
sub
es
inc
sahf
bound
icebp
mov
mov
call
push
nop
sbb
sbb
movl
mov
scas
sub
inc
ja
cmp
inc
idivb
ss
cld
xorb
add
das
lret
sub
dec
dec
or
das
cmpsl
movsb
lods
sub
push
fs
cli
add
jns
xchg
aaa
mov
sub
lret
sub
push
xor
fldln2
push
pop
popf
push
mov
dec
jo
gs
or
rcll
jmp
into
rcrl
mov
movsl
aas
movsb
adc
dec
gs
lds
adc
adc
scas
or
cwtl
out
sbb
pop
inc
imul
xchg
fcmovnbe
test
jne
call
cmc
push
xchg
push
repnz
xchg
fstl
and
sbb
mov
cmpsl
in
clc
xor
xlat
test
in
arpl
jg
je
mov
sbbl
fcom
out
popa
push
out
mov
push
lret
ds
and
inc
je
lods
call
sbb
mov
fidivs
mov
xor
cmp
cs
or
insl
mov
or
push
mov
in
sbb
push
lods
jbe
jno
xchg
enter
ja
add
jmp
cmc
es
out
add
pop
mov
sbb
pop
pop
push
pop
add
sub
xor
jno
mov
mov
jnp
cmp
jge
rclb
push
lret
pop
scas
lock
popa
lea
and
sub
cmp
int3
xor
sub
bts
cmp
sub
or
ds
push
sti
and
jg
test
enter
in
adc
xor
inc
ss
cwtl
stos
imul
fidivs
imul
shrb
loope
mov
sbb
in
test
adc
hlt
xchg
fistl
jno
idiv
sbb
insl
loopne
mov
push
scas
fnstcw
sbb
and
lock
xor
adc
ret
cmc
test
jle
insl
lret
lods
sbb
sbb
ret
pop
adc
mov
inc
bound
aas
jle
xor
add
cmp
pop
pushw
jge
scas
xor
or
scas
js
insl
scas
cwtl
mov
test
int3
stc
push
insl
or
cld
mov
mov
dec
fcom
dec
inc
and
in
test
add
jnp
jmp
imul
push
ret
aam
int
leave
xchg
fsubl
mov
leave
push
pop
xor
cmp
ret
dec
or
cld
and
sahf
dec
pop
cmpsl
scas
dec
mov
xchg
mov
or
bswap
inc
push
adc
les
mov
or
in
or
jge
out
xor
stos
sub
sub
inc
xchg
xchg
dec
adc
jl
jecxz
adc
in
es
dec
cmp
sbbl
adc
repnz
adc
inc
rcrb
fimull
push
jo
je
adc
repz
push
inc
sahf
ret
outsl
rcr
dec
or
xlat
aam
xor
iret
or
xchg
push
cmp
or
jno
push
pop
addr16
int
pop
push
fwait
ja
pop
fwait
arpl
jne
xor
pop
clc
js
shlb
repnz
xor
or
add
cwtl
xor
push
jmp
fwait
sbb
stos
or
adc
mov
or
push
cld
fbld
outsb
push
jnp
mov
rorl
mov
adcl
fcmovu
movsl
adc
add
shlb
cmp
jae
jnp
dec
add
jae
cmpsl
lcall
add
inc
sub
sbb
sahf
nop
loop
ljmp
insl
ds
cs
cmpsb
je
in
js
insl
rcrl
sbb
ret
lcall
stos
and
jle
jo
fs
stos
lods
inc
xchg
fdivs
sbb
or
or
pushf
and
orb
lods
cmpb
imul
into
dec
int3
out
stc
aam
pop
mov
sub
jb
movsb
push
lds
and
adc
xor
imul
bound
into
pop
pop
gs
jle
mov
les
jbe
adc
rcll
aad
popf
out
in
daa
ret
mov
fnstsw
in
mov
and
adc
rcrl
adc
or
insb
ja
mov
je
jg
pushf
mov
adc
xor
and
mov
cld
mov
cmpsl
fimuls
mov
and
out
mov
les
mov
sbb
and
adc
push
jae
push
jnp
out
rcll
push
add
fwait
mov
cmp
mov
and
subl
and
dec
out
sbb
jg
sbb
fucom
add
scas
lcall
loop
xchg
imul
push
notb
or
xchg
enter
sahf
push
fidivs
fldenv
jp
insb
jae
lea
mov
add
cmpsb
sbb
rorb
mov
sub
outsl
inc
mov
cmpsl
push
jae
sub
push
hlt
cld
ret
add
add
ja
adc
lcall
je
fld
insl
mov
pop
mov
push
mov
gs
cmp
pop
into
push
jns
sub
xchg
inc
inc
xchg
inc
xchg
adc
ja
jno
shrb
in
repz
in
mov
lret
fimuls
cwtl
and
movsl
jg
test
mov
scas
inc
mov
xchg
cltd
sub
int
pop
repz
into
enter
dec
pop
mov
and
mov
sub
scas
in
jle
int
or
sbb
mov
lahf
into
aas
insb
roll
jb
mov
inc
pop
cmp
sub
cmp
mov
sub
cmc
push
inc
sub
push
mov
add
sub
adc
and
jecxz
in
cmpsl
pop
inc
jns
ficompl
xchg
adc
ss
inc
lock
shlb
cli
push
and
nop
sub
addr16
mov
mov
inc
das
mov
int3
jmp
fs
push
pop
cmp
pushf
adc
std
scas
int3
lahf
pusha
adc
inc
xchg
out
push
mov
out
xchg
leave
outsl
dec
jge
push
mov
cmp
xchg
add
sarl
cltd
sub
lods
dec
jne
jae
add
ja
lret
xor
or
push
stos
mov
sub
faddl
pop
sub
cmpsb
std
cmp
stos
xlat
and
pop
lds
movsb
addr16
or
sti
xchg
jb
outsb
inc
js
xor
sbb
sbbb
jne
xchg
pop
fmull
sbb
pushf
popa
pop
add
inc
adc
jge
lods
mov
mov
call
test
nop
iret
int3
movsb
lcall
xchg
or
push
cmp
imul
sbb
stos
cmpsb
jae
or
lock
pop
or
xchg
cmp
xchg
lods
adc
sbb
mov
or
mov
mov
ret
mov
iret
insb
cmp
and
adc
ds
cmp
into
ljmp
decl
daa
sub
cli
rorb
mov
inc
pop
je
rorl
js
push
movsl
ret
sbb
faddl
into
dec
in
mov
pop
sbb
roll
das
movsl
in
popa
out
std
xchg
lret
xchg
sbb
mov
stos
enter
bound
pop
cs
shr
jo
and
fnstenv
sub
test
fistl
push
in
cmp
ljmp
jo
push
cld
mov
mov
jne
push
ljmp
mov
xchg
stos
lahf
repnz
cmpl
test
out
mov
fstpl
in
or
pop
pop
addl
scas
pop
or
xor
fadd
aaa
push
ret
aaa
test
or
repnz
or
jg
js
fnstsw
inc
addr16
das
sub
movsb
scas
mov
test
dec
call
mov
sub
iret
rorl
sbb
mov
mov
push
daa
jb
push
and
test
pop
xor
in
sbb
sti
sbb
mov
xchg
in
aad
dec
push
dec
push
vphaddwq
cmp
adc
xchg
xchg
lea
sbb
jno
lock
andb
mov
sbbl
xor
aaa
std
xchg
mov
in
js
add
add
fmuls
mov
fisttpll
or
and
jmp
stos
shll
aas
xor
rcrb
pop
mov
scas
movsl
inc
mov
or
stos
pop
mov
jp
dec
lods
mov
inc
mov
mov
jne
push
popa
bound
rcrb
cmc
add
push
insl
cmp
aad
popl
jle
cmp
imul
xor
mov
aam
jbe
fimuls
outsl
xor
ss
cli
pop
fisubrl
daa
sub
and
mov
pop
mov
jns
mov
xlat
out
js
arpl
ds
cmp
outsl
mov
mov
sbb
pop
xchg
add
faddp
test
cmp
rorb
test
sbb
mov
dec
outsb
xchg
adc
adc
cmp
int3
ss
adc
xlat
loopne
pop
mov
jno
ret
cmpsl
jmp
mov
mov
mov
int
cmp
xor
cmp
jp
cli
inc
jp
dec
mov
scas
imul
xor
ljmp
fwait
dec
and
mov
inc
or
jp
arpl
jns
adc
pop
mov
je
jbe
dec
mov
xchg
push
and
cwtl
push
adc
testb
sub
cmp
dec
fsubrs
cmp
add
push
mov
sub
inc
add
stos
daa
out
sti
aad
xorb
clc
je
mov
push
push
mov
lods
cmp
cmp
mov
jg
inc
xchg
enter
jp
mov
out
shr
mov
arpl
mov
scas
shlb
jl
mov
add
or
mov
pop
lcall
cmpl
xor
sti
cmp
add
xchg
and
loopne
in
pop
jbe
cli
clc
mov
test
sti
push
fwait
pop
cltd
mov
ret
fisubrs
pop
popf
adc
pop
jmp
shrb
mov
in
loope
test
jl
cltd
loopne
push
push
jmp
pop
ds
inc
lods
test
and
pop
jmp
pop
adc
outsl
out
dec
in
inc
xchg
and
push
dec
pop
popa
add
aas
pop
out
lock
jnp
xor
dec
jp
fisttps
xchg
scas
cmp
push
xor
orl
icebp
stos
jns
pop
mov
dec
leavew
add
jo
push
mov
rcll
xor
mov
orl
or
lea
xchg
aam
or
inc
xchg
mov
popa
nop
mov
aad
cltd
lods
inc
daa
xchg
nop
mov
cmc
sub
int
push
sti
mov
and
pop
imul
rcrb
stos
loop
cvtdq2ps
sbb
or
sub
jbe
jg
testb
push
scas
adc
mov
jle
ds
cmpsb
mov
or
mov
jns
fmul
adc
repnz
adc
adc
fdivrl
mov
lods
sbb
imul
pusha
roll
in
ret
ds
xchg
add
testl
mov
mov
mov
dec
pop
cmp
mov
mov
jns
out
jae
into
test
mov
dec
inc
fidivl
pop
aam
xchg
push
push
jb
iret
cmp
xchg
lcall
or
movsb
mov
dec
loopne
pusha
adc
pusha
icebp
inc
gs
xchg
or
fmull
je
lods
das
fists
jmp
jbe
rorl
loopne
xchg
or
cmp
lahf
push
in
and
out
jmp
out
les
and
daa
out
pop
in
jae
or
sahf
inc
pop
test
push
loopne
rcll
jge
dec
iret
xor
and
dec
hlt
sub
sub
aam
pop
decl
pushf
test
jp
jmp
mov
into
movsb
fistps
mov
scas
testl
cltd
add
repnz
fbld
inc
or
mov
xor
push
stos
cmp
icebp
mov
sub
mulb
mov
ljmp
mov
dec
jae
push
sbb
push
inc
je
clc
call
sub
stos
mov
add
subl
dec
nop
jns
adc
xchg
fnstsw
sarb
jle
jmp
add
jo
int3
push
pop
dec
fldcw
inc
ficoms
shrb
sbb
cltd
xchg
ds
sub
sahf
out
es
jl
or
out
fists
adc
push
push
shrl
cmpsl
test
cmp
push
repz
leave
xchg
scas
add
fistl
sbbl
in
les
sub
ljmp
imul
das
jns
andb
xchg
lahf
outsl
jl
ror
or
cmp
out
add
dec
jge
jmp
lcall
test
fwait
dec
jl
sub
dec
jecxz
cmpl
mov
mov
mov
pop
cmpsb
jae
outsl
repz
sbb
imul
aaa
repz
aas
repnz
jle
je
jb
dec
cmp
dec
loop
lcall
icebp
push
jge
jecxz
es
xor
icebp
mov
mov
adc
movsl
int3
mov
sti
test
sbb
cmp
bound
pusha
push
xchg
or
mov
sub
lcall
sub
aaa
sub
mov
xchg
cltd
divps
lods
ret
pop
xor
jmp
je
repnz
scas
or
in
jns
xchg
pop
insb
stos
rol
mov
ss
push
cmpl
fdivrs
shlb
inc
cmpsl
fdivrl
cmp
jle
inc
sbb
push
xchg
das
cmp
stos
rolb
jns
popa
int
sbb
jle
orb
and
mov
jl
mov
pushf
loop
add
and
pusha
xchg
daa
pop
sub
and
fnstcw
push
sbb
mov
adc
int
mov
fldenv
insb
pop
dec
lahf
xor
sbb
mov
addl
mov
lret
ds
lret
into
mov
xchg
test
hlt
insl
jmp
xorl
pop
mulb
cmpsb
add
je
xchg
insl
jbe
lods
fdivrl
fildll
test
sub
lods
push
sbb
cs
call
fnstcw
pop
sub
das
jno
xor
andl
jno
inc
jecxz
cmpsl
lea
mov
imul
pushf
test
xlat
repz
and
pushf
push
push
jmp
inc
popf
fiadds
loopne
cmp
pusha
int
or
sub
mov
fwait
sbb
cli
mov
mov
lods
xchg
addb
push
cmp
imul
inc
sbb
mov
pop
pop
imul
rol
jnp
and
out
mov
dec
fcom
insb
xchg
add
and
xor
fcompl
mov
dec
inc
stos
push
mov
outsl
mov
pop
dec
push
sahf
je
dec
xor
fmull
pop
arpl
dec
and
jecxz
jg
inc
loop
fdivrs
xchg
pop
xchg
mov
popa
test
sub
push
data16
xor
adc
xchg
mov
mov
popa
sbb
cmpsb
aas
push
xlat
sub
cmc
mov
cmc
arpl
dec
in
or
mov
fcoml
jne
insl
xlat
xlat
mov
or
aam
cmp
jb
lock
das
xchg
pop
aam
gs
or
push
pop
jg
jnp
gs
js
insb
jge
and
js
int3
fmuls
and
out
lds
add
lods
add
jmp
sbb
xchg
add
ja
adc
or
xchg
imul
pop
or
push
sub
pop
inc
add
xor
clc
jo
out
iret
repz
mov
je
dec
jb
push
lods
mov
je
push
pushf
cmp
fiaddl
sti
gs
pop
or
repz
jmp
jns
fldt
jecxz
nop
pop
sub
xchg
pushf
test
outsb
aam
roll
dec
or
jmp
xor
nop
lret
data16
adc
xchg
xor
sbb
xor
jp
repz
or
or
sub
and
jl
leave
popf
and
hlt
cltd
inc
sub
mov
jne
or
mov
adc
dec
repnz
adc
pop
movsb
mov
add
mov
in
inc
sbb
in
cmpl
inc
js
xor
jno
mov
xlat
shlb
and
cmc
cltd
int3
adc
pop
xor
int3
xlat
cmpsb
aas
sahf
pop
or
fildll
aad
insl
mov
hlt
loope
cwtl
add
mov
push
loop
adc
jbe
or
mov
jo
out
add
shrb
sbb
add
dec
pop
push
sbb
push
subl
outsl
jmp
ret
cmp
lods
cmp
sub
or
push
orb
or
popa
xchg
xlat
insl
mov
dec
sub
pop
aaa
cmpsl
testl
leave
push
test
enter
adc
cwtl
push
shl
jle
into
sbbl
shr
push
std
in
mov
outsb
push
pop
inc
cwtl
add
movsb
clc
aad
pop
push
loope
push
mov
cmovge
pop
xchg
mov
out
cli
xor
dec
mov
and
cmp
rorl
ret
or
cltd
dec
or
es
pushf
adc
subl
mov
mov
call
in
cmc
lret
jp
or
jae
sub
mov
imul
pop
enter
xchg
and
dec
loope
out
leave
adc
lret
fisubrl
fdivrl
pushf
mov
loope,pt
sbb
cmpb
je,pn
dec
dec
scas
addr16
shll
test
loop
sarl
inc
mov
sarb
xor
pop
jbe
adc
pop
add
push
ja
adc
dec
out
notl
mov
call
mov
movsl
xor
lds
repz
fildl
mov
inc
rcrl
inc
enter
nop
fadds
mov
repz
jl
les
cmp
lock
cs
pop
mov
les
icebp
pop
add
fildl
jle
lods
fisttps
or
lods
adc
mov
xchg
xchg
dec
dec
add
cmpsb
or
popf
jmp
mov
leave
inc
shr
xchg
out
or
mov
push
mov
xchg
and
xor
or
jns
data16
iret
shl
pop
jne
aas
adc
out
sub
lret
fidivs
test
sbb
jae
and
clc
imul
pop
in
inc
std
imul
test
nop
mov
xchg
popf
ljmp
ss
loope
gs
push
mov
sub
mov
ds
adc
lahf
out
sub
push
push
xchg
mov
push
jnp
in
mov
fildll
pop
xchg
cmc
addb
mov
jno
sub
mov
sbb
sbb
sub
jge
adc
fcomi
arpl
adc
mov
cld
dec
jnp
mov
mov
iret
daa
int
cmpsl
leave
loopne
and
dec
loop
mov
mov
rcrb
xchg
sbb
and
pusha
xchg
or
mov
mov
insb
push
negl
pop
outsb
out
and
add
xorb
loope
pusha
repnz
push
dec
gs
hlt
cs
jne
lcall
push
inc
fidivrl
push
sarb
insb
fisubrs
sbb
hlt
mov
hlt
ret
and
in
jle
and
jg
cmc
icebp
or
mov
call
dec
ret
rclb
test
addr16
pop
sti
and
jno
sbb
jl
inc
rcll
push
sarl
and
pop
jns
push
lock
and
gs
daa
xchg
lods
dec
in
fldpi
lea
sbb
scas
out
mov
xor
jno
or
mov
add
shlb
jae
adc
lret
stos
rcll
or
lea
lods
shlb
sub
cmp
js
mov
lret
cmp
mov
in
out
fcomp
xchg
outsl
movsl
sub
xchg
aad
arpl
mov
int
ljmp
add
add
dec
cli
push
adc
mov
addr16
mov
ret
pop
add
pop
aaa
iret
sub
insl
ja
cmp
adcl
lock
push
sub
clc
push
inc
clc
insb
or
fisubs
inc
mov
lahf
mov
cltd
fisubrs
imul
nop
out
lret
mov
push
mulb
outsl
movlps
fstpt
xor
rorl
mov
jmp
movsl
inc
inc
pop
mov
pop
jge
leave
popa
or
lods
mov
sahf
nop
xchg
mov
icebp
and
push
call
imul
ficompl
pushf
pop
push
mov
adc
pop
pcmpeqw
adc
add
pop
mov
pop
adc
sub
insb
fildl
cmp
sbb
out
push
cli
sti
in
xchg
cmp
les
jp
test
xor
add
adc
and
mov
and
out
xor
push
cmpsb
sbb
test
cmp
scas
jmp
filds
gs
das
add
test
push
fdiv
filds
pop
mov
cmpsb
dec
filds
pop
pushl
sbb
stc
std
add
lea
cmp
cwtl
sbb
leave
dec
repnz
sbb
pop
pop
sub
fistl
add
movsl
hlt
out
jg
enter
test
or
sub
jno
cmp
imul
push
dec
push
lret
push
iret
cmc
mov
or
hlt
decl
idiv
inc
or
mov
add
fwait
lock
pop
mov
test
stos
mov
imul
sub
fisttpl
repnz
fisubrl
movsl
pop
mov
pop
xor
inc
jge
fwait
out
aaa
xchg
dec
test
outsl
es
jnp
fstl
jbe
mov
fwait
outsl
pop
iret
int
imul
shll
inc
or
pop
cmpsl
insb
or
pop
lods
cmp
gs
nop
rcl
loopne
mov
lret
jp
mov
cltd
jp
rolb
mov
jecxz
jmp
push
sub
lods
fwait
test
cmp
push
adc
fstpl
cs
push
mov
dec
test
cmpsl
mov
leave
xchg
jmp
lods
adc
stos
push
xchg
adc
sbb
sbb
push
loope
orb
xchg
hlt
pop
push
pop
sbb
in
push
lahf
mov
js
outsl
mov
xchg
pop
push
rcll
aad
pop
jecxz
dec
mov
sub
sbb
aaa
out
and
rolb
shld
mov
inc
ret
dec
test
xor
jns
push
int
out
scas
fisubl
or
sbb
jo
test
mov
pop
or
jge
jbe
or
mov
movsl
inc
mov
ss
cltd
sarl
clc
rcrl
or
rol
dec
lcall
pop
ret
xor
mov
add
cmp
and
lea
lcall
and
mov
out
std
xor
push
and
add
mov
mov
test
std
sahf
mov
cli
les
aaa
gs
dec
insb
push
insb
inc
xchg
je
aas
enter
in
les
testl
inc
ja
xor
rcrb
xor
jns
xchg
nop
xlat
cld
sbb
mov
cltd
push
pop
or
ljmp
fcoms
mov
add
scas
aaa
mov
push
fldenv
imul
ss
xchg
lock
adc
sbb
vmovaps
fistps
lret
out
adcl
jmp
js
jle
loopne
in
pop
lods
orb
popa
add
pop
movl
sbb
pop
cmp
ret
push
filds
and
cltd
jecxz
jg
ds
mov
fistps
xlat
stos
dec
push
into
xor
push
or
push
xchg
jle
dec
mov
push
daa
lods
sarb
mov
call
sbb
fistpll
bound
cltd
fidivrl
jne
xchg
cmpsb
fcmovne
loope
jne
rcll
mov
push
data16
negl
push
push
or
push
sbb
inc
sbb
adc
mov
cmp
filds
imul
loopne
ffree
aam
xchg
ret
outsb
test
and
push
jns
pop
inc
inc
imul
jle,pn
ds
loop
xor
aaa
scas
addr16
push
insb
popa
xchg
pusha
pcmpgtd
xchg
jne
add
dec
out
cltd
or
rcrb
xchg
movsb
mov
pop
cld
jnp
shrl
pop
jp
push
xor
out
cs
inc
test
mov
push
push
das
inc
sbb
mov
jo
and
jns
jne,pt
cltd
cmp
lret
outsl
bound
jae
insl
cmpsl
xchg
mov
ja
mov
jp
pop
sahf
call
fwait
dec
xor
decl
imul
shlb
mov
mov
cmpsb
adc
mov
mov
dec
int
and
les
scas
sbb
arpl
int3
sub
dec
pop
mov
mov
and
loop
sbb
or
fstl
fcmovnbe
adc
in
int3
lret
lock
mov
loopne
mov
in
sub
pop
and
push
lret
and
xchg
xchg
push
addb
gs
mov
nop
jl
jae
fdivp
repz
sbb
pop
jo
push
mov
ficoms
aam
fs
ljmp
mov
inc
sub
stos
aas
adc
cs
push
jns
add
cmc
outsl
sbb
rcrb
pop
or
test
gs
test
enter
test
jnp
mov
mov
xor
mov
sbb
movsl
cmc
cmpsl
and
movsb
push
or
fildl
adc
push
mov
in
rcrl
push
mov
jmp
movsl
sahf
js
sarl
sti
mov
outsb
ja
neg
cmpl
xchg
cmpsb
stos
insb
gs
mov
aas
or
dec
cmp
xor
cmp
inc
and
mov
leave
cli
mov
lret
sbb
pop
mov
imul
xor
rcrl
or
stos
push
push
sbb
fldt
jp
je
pop
cmp
or
jp
rolb
jmp
sbb
sbb
adc
aas
scas
mov
push
and
or
lahf
ss
mov
mov
or
clc
cmpsl
push
pop
and
cmc
pop
jmp
inc
mov
adc
mov
sub
cmc
push
lcall
repnz
scas
in
call
push
jp
or
aad
dec
out
inc
jo
fisubrl
dec
xchg
mov
push
mov
xchg
xorl
sub
out
inc
sub
loop
movsb
mov
dec
push
mov
or
inc
stc
xchg
inc
inc
movsl
shlb
jns
lods
lea
or
rep
in
call
aad
lahf
mov
dec
mov
inc
cwtl
out
lods
enter
gs
jae
rolb
out
xor
xchg
xchg
pop
xor
arpl
ljmp
xchg
jns
jg
and
mov
insl
rclb
aaa
jecxz
loop
loope
andl
inc
call
dec
lret
xor
xor
mov
adc
orb
lcall
fisttpl
pop
ljmp
or
mov
fbstp
dec
add
cli
cmc
fldcw
fs
inc
testl
and
jae
push
push
adc
es
adc
fldenv
cmpsb
push
mov
in
adc
fwait
dec
add
mov
mov
test
js
cltd
mov
xor
sti
push
icebp
cmp
data16
add
loopne
adc
int3
add
inc
add
mov
sarl
notl
js
inc
shrb
pop
mov
aam
loop
or
ficoms
jns
das
imul
or
jle
imul
pop
pusha
in
jp
insb
or
push
sbb
test
add
dec
mov
dec
lahf
jns
adc
mov
clc
add
out
hlt
lret
dec
mov
ret
inc
clc
pop
iret
sub
sbb
inc
jmp
jecxz
mov
in
int
ret
mov
mov
push
mov
loope
aad
inc
inc
js
dec
jle
lods
cltd
aad
lods
lcall
push
mov
negb
mov
pop
cli
rcrl
cmp
adc
repz
cmp
xor
idivl
adc
pop
pop
int3
xchg
add
cli
mov
sti
push
sti
xchg
or
out
movsb
dec
clc
adc
jb
clc
push
add
jae
loop
sarl
cmpl
outsb
movsl
je
in
mov
pop
push
add
jns
mov
and
or
popf
scas
bound
ficomps
cmp
push
xor
sbb
cmp
xor
dec
xor
mov
push
movsl
mov
add
test
loop
xor
fucomp
dec
adc
outsl
lock
xchg
jg
ja
mov
jmp
mov
xchg
repz
sub
cmp
out
cmpl
and
cmp
cs
std
add
cli
mov
int3
push
scas
adc
jge
jo
roll
add
int3
sub
repz
stos
dec
sub
subb
mov
jg
or
sub
out
ret
push
repz
dec
xchg
subb
dec
jmp
out
test
outsb
push
xor
push
mov
adc
push
fldt
mov
dec
sbb
jle
flds
pop
das
sub
rol
scas
or
je
mov
xchg
ss
push
fs
test
mov
pop
fdivl
jns
mov
dec
ja
lock
jo
popa
adc
xchg
cmpsb
dec
jo
rcll
popa
enter
push
hlt
jno
cmpsl
inc
int
jle
sbb
lods
inc
fimull
loope
mov
pop
jae
inc
shlb
outsb
fidivs
ja
sbb
sub
and
mov
dec
mov
push
sbb
inc
push
jno
das
aas
or
add
leave
popf
cwtl
sbb
jbe
jnp
push
adc
adc
in
lods
jmp
movaps
pop
shll
cmp
sbb
sbb
aaa
jp
push
xlat
jp
sub
ja
movsl
add
push
mov
jg
ror
stc
int
out
push
mov
mov
mov
cmpsb
inc
push
negb
jmp
push
mov
mov
aad
mov
or
fbstp
cmp
xchg
cmp
push
cmp
lahf
mov
mov
loop
jns
arpl
imul
imul
sub
cli
xchg
ljmp
jne
xchg
mov
jno
sbb
push
mov
clc
jl
int3
pop
push
and
xchg
inc
mov
int
ds
data16
loopne
std
fimull
cmc
sub
xchg
dec
std
adc
and
mov
inc
enter
mov
xor
mov
scas
lds
and
cmp
push
scas
inc
mov
mov
inc
ret
daa
inc
shrl
jmp
addr16
push
call
roll
mov
or
subl
pop
push
pop
inc
xchg
bound
stc
aaa
fsubrl
aaa
push
nop
into
iret
fwait
shl
insb
pop
jno
inc
fnstenv
arpl
idivb
adc
aam
insb
push
and
jb
mov
sbb
popf
outsl
add
lea
jecxz
sbb
push
lahf
add
adc
lods
rorb
xchg
das
jecxz
mov
lods
mov
das
push
jmp
pop
push
jecxz
add
push
shlb
adc
jp
fisubs
aas
push
dec
cld
inc
inc
popf
mov
sbb
mov
in
flds
imul
jmp
sbb
sbb
dec
ret
imull
ficoms
test
cmp
inc
push
test
aaa
push
jne
dec
and
and
lock
xor
push
daa
adcl
pop
jle
lods
repz
cld
ljmp
pop
mov
mov
jnp
int3
jno
jg
push
dec
xchg
lret
pop
mov
xchg
dec
adc
aas
cltd
sub
mov
pop
hlt
in
mov
je
clc
stc
pop
mov
sbb
lahf
ret
inc
push
or
xchg
xchg
insb
xchg
arpl
clc
mov
mov
test
push
pop
cwtl
in
xor
pop
xor
insl
cmovo
and
pop
sub
mov
rol
mov
addl
xor
imul
inc
pop
fiadds
mov
or
cld
lcall
sbb
and
mov
inc
outsb
pop
fwait
jne
out
js
int
roll
or
arpl
mov
push
adc
jbe
int
xchg
or
sbb
sbb
movsb
cmp
aam
out
cmpb
mov
cmp
leave
fsubrs
push
xchg
jb
add
mov
arpl
xchg
cmp
mov
in
push
mov
aas
pop
jle
adc
rcrl
call
shrb
jae
pop
fs
orb
fadds
je
push
repz
das
lcall
dec
mov
lea
into
mov
pop
in
ds
push
cld
subl
adc
bound
pop
movsl
mov
pop
frstor
sub
fisttpl
jp
ds
mov
push
lods
rcll
out
pop
addr16
mov
pop
cs
lahf
fadds
ffree
pop
mov
xchg
xchg
adc
sub
add
ret
sarl
lock
pop
pushf
and
lods
into
pop
movsl
aaa
push
push
neg
outsl
mov
push
or
sub
push
rcl
aaa
loope
mov
pop
and
mov
cmp
aas
add
pop
add
xor
jb
adc
addl
icebp
fadds
jnp
repz
push
jge
std
add
lea
jae
lahf
lret
jge
cmp
jecxz
cmp
loop
test
jecxz
test
jl
dec
stc
cmp
imul
sbb
rorb
fs
adc
xorb
push
xchg
sub
pop
or
fisttps
test
enter
outsl
xor
xor
dec
popf
fimull
aaa
shlb
push
jp
fcmovnb
fsubrl
test
dec
mov
sbb
movsb
arpl
fs
iret
and
dec
adc
xchg
add
scas
cmp
inc
jae
lret
rcr
pop
fsubrl
in
adc
adc
scas
sub
add
cltd
mov
icebp
enter
adc
mov
insl
in
pop
xchg
out
push
adc
mov
sahf
fldt
jp
cmp
xorl
jo
adc
xchg
insl
push
lret
or
mov
rclb
add
sub
sbb
lods
mov
popf
xor
adc
xor
mov
mov
sahf
icebp
mov
jae
xchg
cmp
push
aaa
call
lods
jmp
leave
mov
cld
mov
int
or
decb
or
jl
aad
ja
add
push
aad
mov
fldenv
add
mov
ljmp
add
sub
mov
fneni(8087
adc
mov
jge
movl
mov
notb
add
dec
mov
out
sub
mov
pop
stos
cltd
xorb
add
lds
daa
inc
in
fs
in
repz
push
mov
fisttps
aaa
pop
xchg
cmp
adc
lods
and
sbb
inc
mov
pop
loope
daa
or
sbb
mov
lods
pop
sarb
subb
loope
sbb
je
sub
xchg
fmul
or
mov
inc
sbb
push
cld
jl
cmp
sbb
callw
cmp
xchg
inc
xchg
stc
fmull
jecxz
ret
mov
mov
or
sub
test
lods
dec
je
dec
mov
and
cs
hlt
mov
fcompl
mov
hlt
ljmp
inc
ret
push
pop
imull
fsubrp
fwait
pusha
xchg
inc
mov
out
jmp
ljmp
icebp
dec
ja
mov
fsubr
cltd
pusha
pop
inc
fcmovne
cmc
add
pop
es
scas
and
lahf
sub
jg
es
int
ljmp
add
pop
stc
scas
xor
dec
dec
pop
into
adc
fldcw
pop
out
sbb
jnp
push
xchg
pushf
sti
fimuls
xorl
jo
sbb
scas
movsb
inc
inc
lods
sbb
std
sbb
clc
mov
test
sahf
cmp
je
and
loop
add
loopne
scas
mov
dec
sbb
pushf
test
leave
aaa
lahf
xchg
mov
mov
hlt
nop
jg
es
sbb
and
daa
ret
les
mov
adc
mov
enter
in
imull
add
in
int3
xchg
jbe
cmc
rorl
pop
sarb
addr16
sbb
pop
lds
mov
mov
add
js
mov
add
inc
mov
in
cs
or
dec
add
fnstcw
xchg
pop
cmp
stos
cli
imul
rcrb
cltd
mov
inc
test
ret
lods
enter
or
jne
fwait
mov
int3
xchg
iret
in
cltd
sahf
outsl
xor
and
mov
xchg
dec
movsb
cltd
jecxz
jb
mov
in
pop
mov
pop
sub
inc
dec
pusha
sub
adc
mov
popa
inc
sahf
add
push
dec
dec
arpl
push
mov
sub
jb
jne
jl
ficomps
pop
jge
pop
and
adc
and
inc
sahf
and
fistl
das
fdiv
jmp
sbb
xchg
pop
aas
addb
cli
mov
sbb
addl
mov
push
xchg
cmp
int3
lds
fiadds
ficompl
and
fs
lret
icebp
ds
or
add
stos
inc
lret
test
ss
mov
addr16
cli
or
xchg
or
add
mov
add
sbb
andl
mov
mov
clc
mov
inc
lock
outsl
cmp
int3
cmp
insl
adc
cmp
mov
jb
fs
enter
ficoms
push
mov
lds
mov
or
nop
insl
ret
and
sbb
repnz
popf
push
cmp
outsl
ljmp
ja
popa
sbb
lock
xlat
sahf
in
loop
mov
push
adc
dec
stc
xlat
mov
cmpsb
mov
cli
inc
xlat
iret
adc
loopne
je
sbb
adc
into
push
jmp
in
das
add
in
int
lods
sbb
pop
dec
xor
inc
dec
mov
or
push
pop
je
nop
adc
jecxz
mov
jno
pop
cwtl
jae
cmp
or
pop
rorb
jbe
fiaddl
lcall
nop
shlb
mov
sahf
add
ds
mov
pop
push
cmc
or
mov
repz
pop
cmpsl
std
insb
pop
pop
add
mov
stc
incl
adcl
push
inc
add
mov
and
popa
scas
mov
faddl
in
adc
rolb
inc
outsb
das
xlat
inc
sbb
mov
dec
imul
mov
mov
adc
imul
and
and
jno
fs
sub
jecxz
adc
fs
into
xchg
or
jbe
cmpsb
mov
loop
jne
inc
dec
jne
dec
xor
fnsave
mov
cmp
push
call
je
inc
movsl
lock
add
aam
pop
sub
sub
sbb
cmp
xorl
xchg
cmc
sarb
mov
popa
ficompl
mov
fsubl
and
sbb
sbb
fdivrl
test
inc
xchg
inc
pop
inc
pop
jecxz
repz
add
adc
fadds
out
push
hlt
mov
pusha
push
pop
mov
sbb
cmc
xor
fldt
sbb
mov
icebp
dec
fsts
pop
push
inc
mull
lods
sbb
iret
sbbl
inc
mov
andl
jl
xchg
cltd
and
popl
call
push
mov
push
stc
cmp
sbb
stos
sbb
clc
sub
rolb
pop
bound
dec
fcomps
jmp
fsub
fwait
popa
dec
or
mov
adc
icebp
push
fcomps
mov
mov
jno
push
jecxz
sbb
cld
imul
movsl
xchg
dec
cmpsb
ljmp
xchg
cmpsl
repz
aad
mov
inc
sbb
out
cmp
js
dec
in
sbb
xor
imul
push
les
xor
inc
xor
pop
ds
mov
leave
sbb
sbb
mov
add
mov
pop
push
dec
insb
xlat
xchg
popf
aaa
xor
pop
mov
jnp
xchg
mov
adc
jbe
xor
daa
loop
cmpsb
dec
cmpsl
push
outsl
or
dec
add
and
ss
inc
insb
mov
mov
jl
and
hlt
mov
int
iret
pop
mov
and
sub
push
xchg
sbb
pusha
push
cmp
jns
xchg
pop
jns
adc
stos
leave
push
cmp
mov
and
test
arpl
jmp
cmp
fnsave
outsl
imul
aas
sub
pop
call
outsb
es
xor
inc
or
pop
sbb
mov
loopne
adc
dec
jns
sbb
subl
loopne
cmpsb
or
movsb
lcall
sbb
daa
stos
sbb
clc
add
or
les
xchg
rcrb
mov
cmp
mov
stos
cs
sub
fistl
cmp
aad
cmp
fcomps
inc
push
inc
sub
jp
jb
jg
sysexit
loopne
sub
fucomip
xchg
std
inc
enter
xchg
fidivl
scas
loop
mov
gs
loopne
call
jnp
jne
or
mov
dec
mov
lods
jns
ret
pop
cmp
inc
out
sub
or
push
mov
lahf
dec
pop
scas
push
pop
sbb
inc
mov
mov
sub
push
fstpl
inc
xchg
leave
insb
shll
out
push
mov
test
addr16
sbb
push
js
fwait
cld
movsl
xchg
sar
hlt
jb
pop
mov
pop
int
mov
cmp
popl
lods
xchg
mov
adc
sbbl
cmpsl
cmp
ljmp
insl
mov
andb
add
out
push
dec
xorb
mov
roll
mov
sub
sbb
aam
jmp
daa
mov
adc
and
arpl
in
sub
hlt
sub
xor
push
mov
call
pop
mov
fs
push
xor
dec
loope
jmp
inc
pusha
xchg
dec
adc
stos
fcomps
fstpt
push
cmovo
cmp
lret
out
mov
sbb
mov
lret
aas
test
arpl
hlt
sub
jl
mov
test
testb
call
sbb
or
add
pop
pop
xor
mov
out
add
dec
sbb
loope
jmp
stos
test
iret
mov
loope
jnp
mov
mov
daa
mov
negb
mov
dec
sti
imul
sbb
push
or
rclb
dec
xchg
xor
cld
outsl
or
out
repz
negl
es
sub
and
sbb
push
jae
push
add
lret
test
lret
and
dec
xchg
insl
pop
cmpsb
jle
cld
test
inc
test
jne
pop
lock
jp
adc
inc
adc
call
fs
push
rolb
push
push
inc
test
and
add
leave
stos
cmpb
pop
push
pop
outsl
sbb
push
int
push
cmp
mov
jge
jb
push
and
xchg
dec
pushf
clc
jmp
popa
mov
pop
imul
dec
adcb
inc
sub
fistpl
loop
lods
enter
ds
insb
lret
pop
lods
roll
pop
mov
popf
movb
lahf
and
test
movsb
sub
pop
push
fwait
sub
mov
movsl
push
jb
jecxz
inc
inc
shlb
cli
sub
pop
cmp
pop
add
xlat
cmp
into
dec
call
iret
out
fdivr
jne
frstor
in
cmp
aad
mov
lea
fldl
pop
sbb
sub
repz
loopne
push
push
and
imul
test
push
scas
jno
imul
mov
in
imul
lahf
call
imul
popf
cmp
or
int
add
xchg
mov
sub
mov
dec
mov
mov
fldcw
inc
sbb
cmpl
push
rcrl
lods
pop
bound
idivl
jecxz
pop
daa
out
lods
stc
mov
inc
mov
aad
daa
sarb
mov
dec
imul
pop
sub
js
push
lret
insl
fstpt
xor
push
mov
fxam
aaa
movsl
call
daa
stc
mov
sub
and
es
dec
test
or
cwtl
dec
pusha
xchg
repz
lahf
fbld
cmpsl
cmp
roll
ljmp
mov
das
imul
into
and
pop
mov
jbe
sti
loopne
adc
pushf
jle
daa
xchg
adc
add
pop
add
mov
hlt
and
mov
dec
mov
int3
cmp
icebp
les
mov
inc
pop
idiv
adc
mov
loop
jle
sbb
dec
aas
push
xor
std
mov
jg
ret
xchg
and
mulb
testb
jecxz
add
test
les
sbb
or
cwtl
push
fwait
inc
mov
xor
fcmovne
out
mov
cmpsb
cmc
neg
stc
mov
stc
inc
cld
xchg
rcl
js
dec
scas
in
jb
stc
sbb
mov
add
cs
call
pushf
mov
notb
add
jnp
hlt
in
push
sbb
push
int
adc
test
lret
cmp
icebp
imul
les
pushf
mov
mov
insb
add
sub
cmpl
lea
pop
cmp
pop
inc
cld
les
aad
popf
adc
gs
inc
cld
lahf
sbb
push
idivl
idiv
cmp
outsl
jae
sub
and
cmp
and
xor
test
dec
fisubrl
adc
dec
xor
xor
mov
in
jbe
test
sub
push
cmp
gs
mull
je
hlt
jne
es
jns
lock
dec
lcall
cwtl
pop
jle
xor
lods
in
in
dec
aam
and
mov
xchg
mov
push
jp
mov
in
in
push
sub
subl
test
jecxz
mov
jmp
or
inc
sarb
int
in
push
pop
jns
in
cmp
xor
or
out
outsl
fst
leave
and
pop
mov
scas
dec
pop
imul
pop
sub
and
iret
sub
lods
les
push
insl
shrl
pop
fisttpl
dec
cmc
data16
fs
sbb
and
sub
cmp
fldl
movsl
sti
aaa
dec
dec
mov
inc
sub
cmp
jb
adc
sarl
loope
xor
shlb
jnp
or
popa
addr16
or
sti
ss
inc
sub
das
pushf
push
xchg
adc
adc
xchg
jne
shlb
sub
ljmp
fwait
inc
pop
popa
subl
out
mov
cmp
into
fsubrl
or
lods
sub
in
mov
xchg
xlat
call
loopne
sbb
xor
dec
pusha
addl
fwait
lods
cmp
sahf
outsb
cmp
cwtl
lret
and
xchg
nop
fcmovbe
push
mov
cltd
jmp
or
jl
repnz
xor
sbb
adc
pop
lods
fcoml
fistl
jns
push
add
vmread
jge
mov
or
stos
fistl
lods
sti
sarb
cs
jo
mov
mov
pop
addr16
jp
roll
add
cltd
outsb
inc
loopne
dec
sub
fs
jns
fsubl
xchg
fadds
jnp
xor
test
inc
jae
mov
and
lret
aam
xchg
or
jno
cli
pusha
stc
jp
mov
lods
daa
jmp
and
push
dec
stc
test
mov
in
dec
lds
xor
filds
cmp
jnp
inc
test
mov
lahf
cld
sub
mov
mov
and
pop
add
cmp
and
mov
arpl
inc
jbe
xor
hlt
nop
out
jo
arpl
insb
add
ss
pop
orl
or
and
sub
fucom
fdiv
inc
pop
adcl
push
popa
push
push
mov
push
lock
inc
adc
adc
adc
or
or
movsl
mov
scas
rcl
sbb
int3
xchg
xchg
imul
lds
jno
popf
xlat
sbb
sarb
hlt
sub
es
push
pusha
imul
pop
mov
rorl
cs
or
xchg
mov
imul
scas
xchg
lods
int3
push
pushl
pushl
push
cs
lods
ja,pt
xor
xchg
dec
add
movsl
cmpsl
rcr
xor
mov
pop
ficoml
xor
push
jns
lcall
in
repz
xlat
jmp
iret
sub
pushf
sbb
ficoms
adc
pusha
xlat
mov
push
mov
mov
sub
lret
dec
adc
sbb
xor
mov
dec
ret
pop
and
imul
jecxz
mov
aad
into
test
in
stos
mov
add
sarb
popa
jge
mov
inc
mov
jecxz
cltd
leave
mov
insb
sbb
xchg
mov
pop
mov
mov
fs
mov
scas
adc
mov
movsb
dec
bound
hlt
rcll
call
out
cmp
cwtl
push
mov
or
mov
pop
xchg
loope
insb
pusha
mov
jmp
fisubs
sub
out
icebp
lret
jns
in
or
dec
test
sub
sahf
or
in
dec
fst
pop
stos
push
dec
sbb
sbbl
movsl
imul
xor
out
inc
jae
adc
sarb
jmp
dec
push
je
shrb
sub
les
push
jl
pop
cs
cmp
cli
mov
mov
jl
stc
cmpsw
inc
cmp
fdivs
stos
jle
test
sbb
stos
add
test
gs
mov
ret
dec
cld
cltd
pop
and
ficompl
pop
xchg
mov
jb
pop
jnp
mov
sbb
stc
inc
gs
cmpsl
es
cmp
or
and
mov
test
or
pop
mov
sbb
mov
cmpsb
adc
std
push
jg
xor
outsb
cs
sbb
roll
cmpsb
mov
jbe
sub
fmuls
sbb
stos
dec
adc
cld
xor
cs
mov
and
popa
mov
mov
adc
and
inc
movsl
jbe
xor
rcrl
pop
add
and
lahf
mov
test
movsl
insb
loope,pn
imul
cld
sbb
dec
div
cmp
test
call
fistpll
orb
xchg
daa
sbb
inc
sbb
and
lds
xchg
inc
pop
sub
add
xor
xchg
xlat
push
mov
ljmpw
insb
nop
in
or
jmp
mov
cmc
stos
icebp
pushf
jne
push
jae
mov
in
pop
daa
popf
bound
or
mov
stos
or
inc
jle
movd
mov
aas
shrb
push
pop
dec
or
leave
mov
inc
sbb
idiv
arpl
ffree
push
inc
pop
or
cmp
mov
pusha
adc
mov
test
lods
out
clc
out
jne
mov
cwtl
lret
inc
pop
out
shl
xchg
les
popa
xor
cmp
inc
and
cmp
stos
adc
jbe
pop
dec
fs
add
in
fisubs
les
call
cli
push
outsl
xchg
sub
out
mov
int
xor
cmc
cmp
addr16
mov
cmp
jno
dec
cli
mov
lcall
mov
das
push
sbb
cmp
clc
cmpl
mov
sbbl
sahf
mov
lds
call
in
jge
fildll
adc
stos
mov
mov
pushf
jnp
ds
aaa
insb
pusha
sub
sti
xchg
sub
pop
lret
xor
sarb
jg
pop
fsubs
cmpsl
loopne
xchg
fmuls
clc
and
push
or
repz
int3
mov
fidivrl
cmp
dec
sbb
mov
cld
hlt
lock
addl
adc
add
in
insb
lea
lock
push
lea
mov
mov
jo
or
push
push
adc
xor
push
lods
stc
stos
push
mov
xor
addl
or
add
ss
movsb
out
mov
push
xchg
adc
scas
stos
xchg
idivb
xor
cmp
inc
leave
pop
outsl
daa
int3
jnp
popf
adc
dec
mov
sub
jbe
mov
mov
lds
ret
rep
mov
xchg
insb
sbb
cmp
icebp
mov
fidivrl
movsl
push
mov
inc
mov
xchg
and
xor
fidivs
mov
ret
icebp
mov
pop
adc
mov
xchg
out
and
cmp
inc
jno
call
sbb
adc
jg
sahf
and
cmp
jnp
fsubs
cmpsl
das
imul
dec
fsubs
movsl
push
pop
cmpsl
ret
int3
fimuls
stc
inc
dec
mov
inc
dec
scas
cmp
lds
sub
dec
mov
sub
movsb
lods
inc
pop
mov
pushf
imul
inc
dec
fisttpll
lahf
fildl
popa
pop
xchg
mov
pop
dec
std
push
pop
add
sub
pusha
xchg
pop
mov
and
push
adc
fistps
cmp
add
jo
lahf
dec
je
loope
sub
adc
aas
dec
mov
lahf
shrl
std
xlat
loope
test
push
push
mov
pop
ret
movsb
lods
cmpl
sub
sub
addr16
push
dec
inc
repnz
icebp
rcrb
xchg
dec
and
std
mov
mov
inc
mov
scas
push
incb
xchg
or
lret
fsubrs
add
aaa
movsl
mov
test
repz
mov
inc
cmpsl
mov
adc
mov
fcomip
dec
vmovq
pop
lods
dec
daa
sub
add
iret
sbb
out
push
in
pop
das
mov
int3
out
sbb
push
push
pop
jo
femms
or
insb
pop
jnp
in
cmp
int3
pop
and
mov
punpckhbw
clc
mov
pop
pushaw
sub
adc
into
out
cli
movsl
sbb
std
in
push
test
cmp
lahf
or
sti
rolb
mov
xchg
xor
je
xor
mov
xchg
scas
xchg
pushf
cmp
xor
fimuls
dec
mov
push
sbb
scas
xchg
jns
xchg
cmpsl
mov
jmp
xor
and
fbstp
xchg
ljmp
or
mov
icebp
sbb
inc
cwtl
jmp
pop
nop
es
scas
inc
cmc
xchg
lods
sub
sub
sub
xchg
scas
fidivrs
ret
loop
adc
jecxz
ret
cmp
insl
loop
fyl2xp1
sub
fwait
pushf
not
xor
out
out
sbb
je
pop
cmp
stc
push
insl
mov
out
mov
inc
lahf
sub
xchg
fisubl
cmp
and
mov
dec
pop
imul
pop
call
add
fildll
jns
inc
xchg
js
popf
dec
scas
movsl
sbb
mov
jmp
pop
rcll
shlb
popl
js
cltd
divb
sub
in
and
sahf
adc
sub
cmp
adc
and
in
sahf
mov
xor
cmp
insl
xor
clc
add
push
push
faddl
xchg
mov
movb
sbb
pop
popa
lahf
out
adc
cli
insb
mov
je
cmp
dec
das
jns
push
aas
notl
decl
push
adc
xor
push
mov
repnz
pop
sub
jecxz
mov
xchg
out
dec
xor
cli
jl
out
xor
ffreep
sub
mov
adc
jno
mov
jl
leave
cmp
mov
stc
xor
cwtl
fs
xchg
xchg
sub
add
sub
inc
je
and
xchg
push
sbbb
mov
pushf
js
mov
stos
faddl
xor
inc
fistps
sbb
and
xchg
and
mov
std
jne
xorl
xchg
ret
lock
insl
mov
mov
insb
inc
enter
es
push
xor
inc
jns
clc
rorl
pop
xor
dec
insb
dec
push
mov
repz
ss
add
gs
sub
dec
mov
enter
adc
dec
loop
mov
test
mov
push
cmp
mov
lahf
inc
jmp
xchg
pop
outsb
je
jne
ja
pusha
popf
mov
ret
cmp
mov
cltd
xlat
in
push
insb
rcll
loop
test
xchg
jbe
xor
add
lock
push
mov
filds
dec
sbb
andl
subl
popa
and
push
int
pop
idivb
xchg
das
sub
and
lods
pop
adc
mov
popf
int
daa
in
cld
stos
je
orb
hlt
in
adc
lods
xchg
int3
cmp
scas
and
sub
add
in
mov
add
pop
inc
int3
or
jns
fstl
dec
mov
stc
jnp
ja
pop
lods
insl
pop
decl
cltd
test
enter
stc
notl
sbb
mov
add
push
mov
lahf
fwait
xor
sbb
ljmp
or
inc
test
icebp
and
fdivrp
jnp
insb
je
call
out
and
sbb
out
clc
std
pop
mov
mov
movsb
inc
push
cld
outsb
jle
xchg
push
lret
jae
aaa
add
out
mov
mov
cwtl
add
or
popf
bound
xchg
test
std
inc
inc
repnz
jb
adcl
jns
mov
xchg
ja
or
mov
xchg
push
xchg
and
push
mov
sbb
jbe
or
xchg
movsb
cmp
fs
pop
in
inc
lds
pop
std
ds
inc
data16
pusha
mov
imul
pop
inc
pop
jno
push
push
inc
mov
fnstenv
dec
call
inc
mov
ret
lods
rorl
popf
insl
es
aas
mov
push
test
popa
pop
push
cld
xchg
in
bound
adc
mov
aaa
and
out
es
cmpsl
aam
xchg
and
dec
jns
out
mov
and
push
sub
aas
outsb
mov
lods
inc
out
mov
and
jge
push
sarb
mov
jo
pop
add
mov
imull
mov
xchg
ljmp
dec
sub
pop
mov
jb
jno
jp
jge
fistpl
push
xchg
enter
hlt
cmp
dec
sub
sub
std
sbb
or
je
add
iret
adc
fld
cmp
mov
lea
mov
dec
sub
mov
imul
and
adc
xchg
loop
pop
dec
push
inc
or
aas
xorb
cltd
fmull
xor
std
cmp
test
push
stos
mov
mov
fcmovnu
xchg
push
cmp
mov
sarl
inc
sbb
nop
jg
adc
pop
push
add
shrl
push
push
mov
mul
daa
inc
js
mov
or
dec
lahf
leave
push
or
mov
adc
adc
mov
xor
jge
cmpsl
cmp
sub
rorl
add
inc
dec
icebp
mov
clc
inc
adc
test
gs
sbb
dec
cmp
shll
adc
push
add
lret
je
push
adc
xor
movsb
data16
jo,pn
push
stc
mov
and
es
pusha
dec
dec
mov
add
test
pop
push
lds
pop
clc
stos
lds
imulb
or
clc
in
out
shll
pop
add
sbb
inc
mov
mov
push
mov
pop
pop
shrl
stc
lret
and
dec
jge
inc
or
paddq
daa
ds
cmp
aam
xor
sub
aad
mov
adc
or
xchg
jae
mov
ss
aaa
mov
js
int
inc
and
out
xchg
push
sbb
ds
and
shll
rolb
int
adc
filds
cmp
addl
cmpsl
das
test
xor
push
fs
or
or
inc
fstl
test
fcomps
std
nop
xor
lcall
aas
dec
pop
aaa
mov
push
rcr
cmp
stos
jne
int3
dec
add
and
insb
push
mov
cs
movsb
aaa
jae
cli
xor
pop
insl
lds
mov
cmpsl
sub
inc
in
sub
loopne
add
test
aaa
jg
movsl
iret
mov
mull
mov
icebp
out
xor
and
lret
push
and
pusha
loop
jecxz
jecxz
bound
dec
outsl
jge
jno
mov
inc
xchg
sbbb
in
das
cmc
jecxz
leave
pushf
daa
ljmp
dec
xchg
call
pushf
addr16
insl
aaa
std
aam
mov
imul
movsb
daa
ljmp
xor
add
lret
mov
ret
cmp
xor
rorl
test
xor
jecxz
mov
or
and
sub
push
mov
and
sahf
pop
lea
hlt
lcall
in
stc
or
lcall
ror
mov
out
lods
jne
pusha
out
popa
and
je
test
dec
aad
mov
push
popa
sbb
loop
aam
cmp
psubusw
xchg
mov
sub
test
loop
add
mov
mov
icebp
inc
push
lods
push
pop
outsb
jle
incl
sub
nop
in
fstpl
xchg
js
cmpl
push
cmpsb
andb
dec
lea
out
xchg
lcall
xchg
jbe
dec
scas
bound
lret
push
pop
dec
mov
and
jle
test
js
mov
mov
mov
arpl
test
or
pop
push
pop
in
fcmovbe
in
out
shlb
jmp
add
js
movsb
and
xchg
mov
dec
pop
inc
jmp
or
pop
xchg
test
push
ret
inc
sahf
cmpsb
out
dec
imul
sbb
lahf
xor
dec
jae
fs
jbe
push
xchg
jmp
xor
sbb
daa
cwtl
inc
adc
mov
push
notb
push
lods
sub
inc
inc
fbld
lds
push
dec
pushf
or
jno
lahf
jmp
loopne
jp
in
cmp
lods
jmp
push
aam
stos
inc
int3
adc
fs
pop
pushf
xchg
cltd
jle
lret
movsl
inc
jns
dec
cmp
pusha
cmp
and
inc
fnstenv
rcr
sub
popaw
dec
adc
adc
push
cmp
push
not
mov
jno
out
lea
mov
popa
imul
jbe
adc
add
cmp
daa
leave
dec
mov
and
xlat
or
repz
pop
leave
pop
xchg
int
cltd
mov
xchg
sub
in
pop
xchg
dec
mov
int
mov
push
in
lahf
or
adc
and
jb
aas
movsl
sub
leave
in
dec
pop
test
jmp
cmp
loop
mov
out
sub
mov
ds
mov
in
and
mov
fidivrs
loopne
icebp
imul
inc
mov
stos
and
cmp
xor
imul
aas
push
xchg
add
test
sub
int
cmpsl
xor
adcb
mov
sub
mov
inc
daa
cmpsb
jns
out
or
sbb
pop
sbb
imul
out
add
sbb
adcl
test
cwtl
out
jp
lods
jl
test
mov
icebp
adc
xchg
sbb
outsb
push
test
xchg
sub
cmp
call
pop
in
into
or
or
shrl
dec
imul
inc
pop
stos
push
outsb
dec
mov
xor
fs
adc
xchg
sbb
pop
insl
xchg
sub
int3
pop
mov
xor
push
mov
inc
push
test
mov
dec
sti
cmp
adc
loop
or
pop
insb
xchg
sti
in
fdivl
adc
pop
frstor
out
bound
inc
clc
aad
mov
test
sub
mov
dec
ficoml
pop
xchg
es
mov
pop
xor
sub
nop
rorb
mov
pop
mov
ss
les
in
aas
cltd
push
fwait
jb
sbbl
lahf
adc
jle
add
out
lea
aad
call
ret
mov
jmp
xor
sub
or
stos
mov
mov
stc
dec
insb
sub
inc
fistpl
and
jecxz
loop
cli
nop
push
adc
stc
dec
cmp
jl
sub
test
pop
pop
push
or
daa
lods
mov
jae
out
std
cltd
ds
loopne
mov
or
hlt
sub
or
fs
incl
mov
in
lods
mov
jge
add
scas
mov
cld
fwait
icebp
push
xlat
pop
ja
pop
pop
xchg
mov
and
mov
xchg
popa
test
and
add
js
cmp
and
stos
fstp
pop
scas
jmp
lock
xor
xchg
mov
je
pop
insl
scas
les
sub
jmp
push
mov
dec
xor
xchg
push
jmp
adc
and
mov
and
adc
sub
rcrl
sahf
shl
fiaddl
jno
push
stos
mov
movsl
cmp
jno
aad
clc
insl
push
jo
mov
test
in
push
fiaddl
test
mov
aaa
daa
cmp
jge
shrl
je
adc
hlt
cmpsb
and
int3
cli
test
test
rcll
mov
jne
popf
jae
xor
repz
xchg
pop
cmpsb
sbb
push
push
aad
jp
jns
pop
mov
pop
or
out
cmp
mov
call
lods
or
ja
daa
lock
aas
lods
inc
daa
xchg
push
lock
loop
popa
pop
mov
push
mov
movsb
cmp
mov
dec
test
sub
outsb
cmpsb
or
sub
xor
sbb
int3
shrb
roll
lea
or
out
jnp
ss
lret
cli
xchg
adc
mov
fcmove
repz
arpl
xchg
aaa
add
ret
dec
push
sbb
sub
xchg
das
cmp
sub
mov
dec
cmpb
out
js
scas
in
testb
ficomps
int
orb
xor
and
jl
stos
sbb
mov
ret
jl
or
out
jbe
loop
xor
daa
cs
shll
lock
push
inc
jnp
mov
pop
pop
adc
or
out
in
int3
pop
das
hlt
fsubrl
mov
loop
or
and
mov
dec
or
ror
sar
mov
es
pop
icebp
outsb
cltd
adc
outsb
sub
ret
push
negl
xchg
es
sti
jb
cmc
subl
in
out
mov
inc
inc
jno
in
xor
xchg
subb
push
push
clc
mov
lret
iret
mov
filds
adcb
push
xor
repnz
sbb
sub
xchg
call
and
popa
xor
and
mov
sbb
mov
pop
lock
stc
pusha
or
mov
jg
arpl
arpl
outsl
mov
fildll
sti
adc
xchg
or
mov
mov
cs
inc
push
lcall
aaa
pop
or
xchg
sub
lahf
mov
or
pusha
ss
inc
or
push
add
scas
lods
addl
mov
testb
adc
stos
mov
fidivs
fcomps
adc
dec
xor
loopne
ja
subl
scas
inc
in
xchg
out
ja
mov
push
and
and
imull
out
sbbl
xor
xchg
push
out
dec
jbe
lea
bound
hlt
jmp
add
mov
fisttpll
loopne
adc
scas
shlb
jmp
fistps
stc
jmp
inc
divb
movsl
mov
ret
mov
dec
jae
push
gs
jp
jle
jmp
jbe
ljmp
adc
adc
push
dec
or
ja
cmp
sbb
mov
cmp
daa
stos
int3
jo
dec
mov
inc
out
add
cmp
push
sarl
xchg
lret
mov
repz
xchg
movsl
push
insb
push
sar
push
aas
adc
jge
add
sbb
dec
dec
cmp
add
fs
in
pop
cmp
loope
pop
cmpsb
loope
cmpb
mov
mov
and
inc
movsl
fdivrs
stos
xor
mov
rcrb
in
or
lahf
dec
aad
push
dec
lods
enter
sbb
scas
punpcklwd
dec
and
stos
stos
sub
cmp
fcmove
pushf
shr
in
rcrb
pop
out
push
test
inc
push
std
dec
cmpsl
lahf
or
jle
xor
in
add
aaa
cmp
or
movsb
lret
scas
push
fbld
push
je
sbb
xor
loopne
enter
mov
aam
out
into
pop
inc
es
out
fwait
sub
push
aam
jne
icebp
fdivr
sahf
mov
fwait
das
xor
pop
mov
std
mov
add
xorb
cld
pop
mov
outsb
mov
cvtpi2ps
xor
jne
stc
daa
add
outsl
pop
cmp
sub
stos
mov
mov
push
hlt
test
xor
cmp
mov
stos
in
jl
add
jge
out
mov
std
push
stos
xchg
test
mov
pop
pushf
mov
add
jae
mov
out
dec
adc
aam
xorb
test
aad
inc
xchg
mov
or
pushf
mov
test
and
in
sti
mov
mov
xsave
mov
repnz
xchg
mov
jne
cltd
loop
movsb
mov
dec
insb
pop
inc
cmp
fldl
ror
xchg
out
pop
cmpsl
push
jne
in
repnz
iret
dec
rorl
clc
movsb
mov
xchg
mov
nop
inc
add
xor
sbb
lcall
lds
push
mov
insb
incl
cmpsl
iret
mov
jae
sti
push
jle
pop
adc
and
inc
lret
and
mov
xor
mov
fwait
call
movsl
cmp
ss
adcb
mov
lea
mov
sbb
sub
outsl
negl
xchg
mov
outsl
movb
jnp
inc
das
xchg
dec
add
cmc
insb
mov
xchg
stc
sahf
out
cmp
and
mov
ljmp
test
out
or
sbb
or
test
add
stos
fdivrs
xor
cld
push
jge
mov
rclb
insb
mov
mov
fisttpl
jmp
dec
pop
adc
enter
add
adc
sbb
mov
jle
jns
mov
int3
or
pop
inc
dec
jbe
mov
jle
repnz
mov
inc
mov
dec
sbbb
and
ret
sbb
or
add
push
stc
push
leave
jo
fists
icebp
inc
or
jge
in
aas
sarl
stc
fists
sub
mov
ror
insb
adc
les
shll
movsl
jae
mov
jecxz
adc
mov
dec
push
addb
loope
ficompl
cli
adc
cli
jno
cmp
out
mov
push
add
jnp
rcl
adc
inc
or
mov
lcall
mov
imul
add
cmpsl
mov
popf
stos
fisubl
push
pop
insb
in
or
aam
sbbl
std
xor
lods
push
pop
jg
adc
xchg
sar
das
lds
sbb
and
pop
leave
js
call
cmp
daa
adc
pop
pop
imul
adc
jle
mov
jge
repz
inc
jl
popa
sub
loopne
ret
dec
aas
rclb
hlt
xor
pop
div
scas
adc
adc
popf
fbld
shl
fsubrl
cmp
test
mov
loopne
mov
push
pop
out
mov
and
mov
bound
or
xchg
mov
pop
xor
xor
cmpsb
sbb
mov
subl
mov
aad
in
add
sub
mov
or
mov
mov
mov
shrb
xchg
fidivrl
or
scas
flds
into
loopne
mov
xlat
scas
mov
cmp
pusha
mov
sahf
sub
iret
shrw
xlat
ja
jbe
mov
mov
inc
or
call
mov
or
mov
push
js
jp
mov
add
insl
test
orb
icebp
shrl
jae
sub
jl
xchg
shrb
or
mov
inc
imul
pushf
clc
xchg
out
and
ja
push
insl
hlt
lret
pop
movsl
int
jnp
cmp
popf
inc
add
test
xor
in
cmp
xchg
mov
dec
sbb
aad
dec
popf
or
jne
ret
push
xchg
cwtl
shrl
push
xchg
pop
pop
fdivr
and
and
dec
insl
or
test
jns
or
inc
lcall
leave
mov
movsb
mov
lods
and
enter
jnp
in
cmpsl
inc
jne
xchg
stos
or
inc
dec
jae
jl
and
mov
jecxz
xchg
xchg
or
push
and
loopne
adcl
mov
xchg
mov
outsb
fistl
stos
push
pop
pop
outsl
xor
sti
sbb
stc
pop
ret
sub
adc
dec
rorb
repnz
fs
dec
stos
and
mov
mov
jge
xor
xor
mov
pop
pop
int3
daa
iret
and
pop
cwtl
xor
and
sub
and
jge
sar
jge
in
xchg
jge
mov
mov
pop
mov
pop
cmp
data16
ljmp
inc
mov
sbb
leave
daa
pop
adc
jo
sub
jbe
outsl
or
addr16
in
ret
ja
mov
fldl
call
inc
xor
vmread
or
xchg
jns
call
mov
jbe
idiv
sti
stos
negb
xchg
mull
xor
pop
push
jno
into
add
and
cmp
cmpsb
ja
out
mov
dec
xor
xchg
je
jmp
sbb
cltd
mov
js
rorl
xchg
jp
push
inc
das
clc
lods
adc
js
outsw
aam
pusha
pop
call
inc
and
jecxz
and
fwait
pop
pusha
jg
jb
pushf
cmp
cmp
add
scas
fnstenv
sub
mov
leave
push
jne
arpl
scas
popf
stos
inc
cmpsl
lcall
je
cmp
inc
push
lret
mov
std
dec
cwtl
fadds
cwtl
push
mov
lahf
pop
das
cs
inc
fmull
lds
cmpsb
adc
xchg
cwtl
jns
or
lret
xchg
insb
mov
inc
xchg
mov
aaa
aaa
imul
pop
cltd
test
sub
pop
mov
xor
cld
je
es
arpl
stos
jp
dec
shlb
jae
sub
jge
cli
outsl
add
xchg
lahf
inc
lods
rorl
or
dec
lds
pop
add
pop
and
mov
out
sub
jnp
lret
xchg
sbb
shufps
cmp
mov
inc
mov
push
ljmp
sbb
movsl
or
fistl
dec
mov
aaa
pop
and
clc
sbb
shlb
inc
pusha
add
aas
ret
sbb
fistl
arpl
int
xchg
in
leave
xor
cs
das
lea
js
jmp
cmpsl
xchg
push
movsl
xor
mov
or
add
mov
push
xchg
add
int
mov
mov
fwait
scas
popa
sti
add
popa
addr16
out
shl
xchg
and
pop
lods
mov
jp
inc
imul
cmpsl
es
jo
imul
push
xchg
add
les
mov
scas
cmp
cltd
sti
mov
dec
aas
loop
dec
divl
push
push
add
xor
popa
cmp
lahf
in
and
fs
dec
pop
fildll
lcall
xor
mov
inc
ss
cmpsl
dec
mov
test
sahf
push
ja
fcom
push
sbb
popa
cmp
push
jo
shll
or
inc
and
jp
xchg
outsb
mov
inc
testl
push
es
in
add
pop
sbb
es
xor
and
mov
int
mov
mov
inc
mov
and
xchg
les
xor
adc
mov
imul
movsl
and
int3
stos
add
xor
adc
mov
les
das
nop
dec
enter
cs
mov
mov
repz
repnz
outsb
cltd
ret
or
dec
push
cmp
leave
inc
movb
adc
repz
jge
rcrb
andl
xor
fadds
lret
hlt
pop
push
call
jge
cwtl
sbb
jnp,pt
push
or
inc
cmp
push
or
shl
jb
sbb
loopne
cmc
bound
jo
inc
and
mov
scas
mov
lock
xchg
gs
cwtl
sarb
loop
jb
mov
mov
idivl
loope
dec
or
jae
and
or
ret
adc
add
clc
leave
cmp
aad
lahf
mov
pop
mov
mov
mov
xor
out
inc
mov
add
cwtd
adc
rcrl
repnz
mov
xchg
mov
int3
scas
inc
mov
push
xor
outsb
xchg
fs
cmpsb
pop
and
dec
adc
cmpsl
mov
repz
mov
outsl
sbbb
scas
sub
push
fsubrp
shlb
jb
int3
push
adc
not
mov
push
cmp
jge
push
or
or
stos
xor
jp
data16
test
mov
pop
stos
insb
jg
hlt
adc
arpl
dec
sti
push
jmp
mov
repnz
push
cmpsl
popa
std
add
xor
adc
cmpsl
jae
rolb
fxch
dec
xchg
sti
and
sub
lods
lods
cmp
inc
mov
into
mov
js
leave
in
fdivs
add
inc
incb
mov
mov
es
insl
ret
inc
or
or
stc
adc
test
je
je
enter
jae
rcll
mov
dec
cld
fists
scas
push
lret
or
lea
push
inc
pop
sbb
push
mov
or
jbe
inc
gs
dec
jns
cmp
sahf
into
jb
insb
in
aad
lretw
jnp
push
out
icebp
pop
pushl
mov
pop
imul
cltd
movsl
or
mov
repz
lcall
dec
rorl
test
dec
movsl
loopne
dec
movsl
and
mov
fisttpl
insl
jecxz
mov
mov
rorl
inc
sbb
clc
stos
pop
mov
mov
fadd
push
lods
mov
adc
scas
ds
adc
pop
ds
cld
push
pushf
fwait
lods
cmp
fimuls
xor
aad
arpl
jle
cwtl
loop
mov
pop
mov
ret
mov
imul
gs
push
jno
in
dec
out
outsl
imul
enter
xchg
mov
cmp
aaa
arpl
cld
jmp
pop
andl
nop
mov
pop
ret
and
push
test
sti
push
xchg
repnz
pop
and
hlt
adc
mov
xchg
pop
aaa
in
push
fst
ss
dec
push
xlat
xor
jge
popl
add
nop
xor
out
fcmove
test
add
int
rcrb
push
into
shl
scas
push
out
sub
fadds
pop
shrb
add
add
pop
push
mov
enter
adc
in
xor
xchg
popf
and
push
jnp
and
aaa
mov
mov
sub
pop
inc
int
js
cmpsl
adc
and
pop
aad
mov
inc
call
push
inc
add
pushf
xchg
data16
add
outsl
pusha
out
sahf
out
xchg
dec
dec
and
xchg
je
or
inc
mov
jae
mov
push
shrb
or
rcll
lds
mov
mov
push
cld
dec
dec
mov
imul
sub
cmovb
xor
mov
adc
push
sub
adc
in
add
xchg
insl
outsl
lret
jp
adc
mov
pop
mov
and
in
int
sbb
xor
ds
lret
pop
mov
pusha
add
clc
jbe
lods
xchg
add
aam
fstp
outsb
imul
data16
jecxz
sarb
sub
mov
xor
xchg
in
xor
xor
jae
jge
mov
retw
scas
in
test
pusha
add
test
loopne
fcoml
fdivr
jge
test
jmp
mov
sarl
push
cmp
sbb
loop
xor
les
cmpsb
xchg
sarb
fs
cmc
hlt
pushf
inc
movsb
daa
mov
dec
push
lret
es
cmp
iret
shrl
and
pop
enter
push
mov
xchg
frstor
inc
fwait
mov
int
adc
iret
push
jbe
xor
dec
setnp
jnp
xchg
lahf
push
mov
int
test
pop
and
lods
pop
cmc
mov
ret
mov
inc
adc
add
popa
frstor
xchg
sbb
enter
mov
inc
pop
cltd
out
mov
sti
or
sub
add
or
cli
icebp
rcr
xchg
insb
rolb
jae
into
push
xchg
aad
jecxz
cmc
dec
sbb
push
loopne
sub
inc
lock
pop
in
repnz
or
inc
cwtl
popf
xor
pop
out
xchg
in
sub
ror
jnp
dec
cltd
and
stos
jns
stos
xor
daa
adc
and
dec
test
or
cmp
scas
test
stos
xchg
aaa
inc
lea
dec
repz
sbb
xchg
std
aas
and
movsl
aad
mov
cmp
push
inc
mov
fldcw
sub
inc
sahf
test
clc
xor
pushf
aad
xchg
xchg
test
in
add
mov
stos
sub
shlb
sar
xchg
out
mov
leave
daa
cli
adc
shl
adc
xchg
addl
push
orl
ja
fldcw
pop
negl
imull
mov
bound
insb
mov
mov
or
xor
inc
bound
mov
test
loope
sub
imul
jmp
dec
iret
cmp
xor
sbb
out
test
dec
idivb
sub
xchg
push
add
dec
sbb
iret
aam
xchg
insb
or
mov
pop
xchg
pop
dec
js
leave
push
mov
mov
jl
int3
mov
dec
adc
insl
xchg
lcall
imul
add
inc
xchg
ret
xchg
loop
cs
cli
pop
cmp
push
addl
sub
and
xchg
lea
dec
lock
inc
cmc
out
ss
cmp
insb
test
insb
adc
jge
data16
pushf
sbbl
jb
stc
arpl
fisubrl
xor
in
jbe
lahf
add
imul
icebp
mov
outsb
lea
sbb
push
idiv
lods
addb
test
shlb
lret
xchg
inc
jb
pop
aad
fldcw
jmp
jmp
mov
xor
icebp
cmp
repnz
divb
cmp
pusha
sub
fistl
das
cmp
xchg
icebp
dec
insb
xchg
mov
push
dec
jae
pop
push
clc
bound
outsl
mov
and
ds
xchg
sarb
sub
popf
fdivl
adc
inc
aas
mov
add
or
add
cmc
je
fidivrs
mov
lods
roll
xchg
cmp
xchg
sub
and
or
cmc
test
mov
out
cltd
lods
push
mov
or
popf
lods
mov
mov
xlat
and
shrb
pop
outsl
test
push
xchg
popf
iretw
mov
dec
fidivrs
mov
test
mov
mov
pop
stos
xor
add
dec
and
or
ja
cmp
es
test
sbb
test
mov
push
jle
mov
in
dec
cmp
jecxz
fwait
adc
scas
xor
pop
and
xor
cmc
rclb
jns
stc
ss
push
xchg
xor
sbb
testl
mov
fimuls
shrl
jmp
jmp
out
addps
inc
fnstenv
dec
lcall
mov
push
fisubs
mov
mulb
add
pop
fcomi
jge
xor
ds
xor
movsb
out
mov
sar
out
in
mov
and
pop
subl
lds
call
fs
lds
cmpsb
test
test
mov
aam
and
mov
fdivl
stos
lcall
inc
enter
ret
cmp
adc
fistpl
sbbb
ss
les
into
into
mov
pop
xlat
add
aam
or
sahf
adc
and
jl,pt
int3
fs
cmp
es
fistpl
inc
mov
or
adc
cwtl
or
sbb
add
jbe,pt
nop
add
xchg
aaa
cltd
clc
cmp
imul
jbe
out
mov
cld
lods
sub
push
ss
adc
adc
mov
dec
push
test
mov
in
inc
out
push
je
xor
add
ret
rolb
pop
adc
xor
out
sbb
mov
and
fisttpl
cld
cmp
add
fidivl
cli
pop
and
ret
ficompl
in
push
cmp
adc
mov
adc
lret
lret
adc
cmp
cmpsl
loope
xchg
dec
and
stos
dec
add
aas
xchg
adc
pop
cld
lret
pop
xchg
lret
and
push
movsb
pop
pop
insl
and
out
mov
dec
xchg
pop
addb
mov
jle
mov
mov
andb
jg
lret
rorb
je
pop
or
popf
outsb
mov
popa
mov
adcl
push
stos
int3
push
leave
sbb
jo
aas
cs
mov
ficomps
pushf
fnstsw
xor
call
sub
adc
pop
les
rolb
icebp
pop
cld
icebp
jle
mov
arpl
mov
cmpl
sbb
jecxz
sarb
roll
add
fildll
addr16
sbbl
mov
or
or
pop
xlat
in
push
bound
addr16
fimuls
inc
push
sahf
and
fcomp
ds
dec
jecxz
out
gs
out
int
pop
loop
push
imul
or
repz
stos
int
cmp
xlat
xlat
ja
addr16
jnp
mov
cmp
orb
int3
jg,pt
dec
aas
fdivrl
mov
enter
or
jbe
jg
ss
cmp
dec
cmpsb
test
in
scas
mov
push
cmpsl
push
enter
xor
inc
leave
repz
ss
movsb
sub
in
orb
xchg
sahf
mov
jecxz
mov
jecxz
pop
or
jmp
repz
cmp
or
ficoms
mov
dec
mov
jmp
adc
icebp
fidivl
jmp
mov
jge
inc
dec
pop
or
enter
push
push
push
push
xchg
bswap
and
or
push
int3
push
rorl
lods
mov
adc
cwtl
cwtl
or
sbb
cltd
jp
or
out
dec
push
ret
imul
cmp
repnz
push
mov
sbb
mov
loopne
jb
jno
testb
xchg
fstp
and
mov
loop
jne
iret
daa
jo
fstl
icebp
jecxz
or
stos
adc
int
gs
jl
cmpsl
sar
xchg
jae
or
insb
lods
add
jecxz
jge
stc
xorb
loopne
call
orb
inc
divb
lret
inc
es
dec
cmp
xchg
jge
test
aad
divb
sub
dec
ret
shlb
or
dec
push
dec
mov
outsb
in
in
js
adc
mov
lods
aaa
inc
pushf
mov
addl
fdiv
fistps
inc
daa
jo
roll
dec
cld
sbb
jnp,pn
adc
xor
xor
popf
add
pop
pop
je
cmp
shrb
add
add
cs
mov
xchg
out
sbb
pop
cmp
jg
adc
and
mov
sbb
popa
ffreep
mov
add
movsl
mov
repnz
lds
or
testl
cmp
or
inc
jo
pop
std
orl
pop
sub
outsb
cmp
or
push
jge
mov
pop
xchg
mov
jmp
xchg
adc
push
rcrb
push
shll
sti
add
in
mov
shrb
or
gs
jp
loop
xchg
insb
scas
adc
jp
cs
subb
xor
fmul
not
lahf
aad
ficoml
xchg
leave
sbb
rolb
push
push
mov
pop
lds
sub
mov
nop
push
call
xor
scas
pop
mov
ljmp
mov
in
cli
pusha
push
pop
jns
mov
clc
mov
decb
dec
mov
dec
or
hlt
aam
dec
xchg
pop
dec
pop
mov
icebp
sub
in
cmp
push
hlt
movsl
adc
and
dec
xor
les
in
popf
es
out
push
aam
ret
pop
je
mov
daa
scas
xchg
mov
pop
cmp
inc
inc
cmp
pusha
cmpl
int
add
movsb
aaa
pop
enter
push
shll
rorb
iret
adc
push
aam
test
popf
test
push
adc
outsb
out
dec
int
aas
sub
and
adc
inc
xchg
in
ds
mov
push
lea
pop
cwtl
imul
shrb
pop
lods
out
mov
movsb
lock
clc
cmp
iret
jbe
add
addr16
xlat
pop
int
fidivs
adc
je
mov
adc
pop
xorb
shlb
jmp
xchg
repnz
sahf
incb
adc
sub
shlb
shlb
push
es
push
insl
sbb
jne
add
xchg
fcoml
push
add
js
add
inc
inc
js
lock
data16
dec
je
imul
loope
mov
jmp
xchg
lahf
push
sbb
xor
jnp
repz
xchg
mov
jge
lds
fisubl
inc
and
loope
jl
adcb
pushf
push
push
push
or
roll
dec
inc
cs
xchg
movsb
push
mov
std
imul
je
mov
xlat
jecxz
mov
mov
dec
cld
iret
jle
cmp
push
fidivrs
test
mov
cltd
jl
faddl
jge
push
sbbl
popf
pop
arpl
clc
lret
add
int
inc
arpl
imul
pop
mov
mov
jo
out
pop
lcall
lea
addb
push
xor
popa
mov
pop
sbb
sub
jmp
lahf
inc
jns
in
in
cld
mov
xchg
test
ja
loopne
jmp
rolb
mov
and
addb
push
and
lds
mov
mov
xchg
push
out
inc
jae
cli
popf
out
js
add
stc
insl
adc
mov
adc
dec
in
adc
fs
or
xchg
addl
adc
dec
mov
dec
and
adcl
jmp
call
push
scas
pop
mov
fistpl
in
adc
addr16
addl
sub
clc
jb
lods
in
out
movsb
pop
mov
mov
fwait
add
psrlq
lods
sub
fisubl
pop
dec
push
push
sahf
push
mov
hlt
pop
mov
scas
sbb
test
les
add
cmpb
es
push
test
dec
into
inc
mov
loop
imul
xchg
mov
pushf
jno
dec
mov
inc
cld
sbb
cli
bound
xor
mov
xchg
loopne
dec
repnz
call
shll
mov
jo
inc
lahf
das
jno
sbb
icebp
lods
inc
roll
xor
fiadds
call
enter
sbb
push
subl
xchg
jp,pn
push
testb
jle
jo
addb
or
xchg
push
fisttps
clc
int
ljmp
into
aaa
negl
jl
xor
sub
psraw
movsl
mov
adc
mov
dec
sub
daa
push
cmc
nop
cwtl
test
nop
push
and
and
jecxz
sbb
jl
ret
jb
cmp
roll
stc
into
ljmp
fimuls
add
pop
fiadds
aam
mov
icebp
loop
add
pop
inc
lahf
outsb
pop
shll
and
and
jl
fldl
fbstp
xchg
mov
push
in
mov
stc
jne
stos
mov
int3
scas
dec
dec
inc
mov
les
aad
outsl
inc
cwtl
xor
lret
ds
enter
fs
xchg
stc
test
daa
pop
lahf
mov
stos
pop
push
adc
cmp
outsl
add
mov
dec
shlb
jmp
lret
imul
cmpl
inc
mov
sub
mov
lea
sbb
test
insb
test
testb
inc
addr16
rclb
ss
jmp
or
dec
js
pop
push
cmp
sub
nop
pop
mov
insl
inc
push
xor
mov
pop
out
inc
popf
pop
fiadds
and
mov
push
pop
out
dec
xor
xchg
add
jge
outsl
outsb
jns
mov
out
mov
sub
jmp
frstor
inc
shr
mov
jno
push
lock
leave
cs
icebp
clc
ficoms
repnz
aam
dec
aam
add
pop
sti
or
cwtl
mov
pop
dec
loop
pop
adc
sub
dec
mov
xlat
mov
xlat
ret
xchg
pop
cmp
ds
sub
sbb
pushf
inc
aad
pop
inc
mov
mov
push
sbb
in
jmp
cwtl
sub
cmp
mov
mov
pop
pop
outsl
outsl
mov
out
test
sub
inc
pop
cmc
fnstcw
pop
inc
das
push
ljmp
pop
lods
out
fcmovu
rcrl
popa
pop
push
cmpsl
lret
fidivrs
dec
ds
mov
ljmp
inc
jl
and
add
adc
xchg
xchg
adc
fcompl
pop
mov
mov
bound
inc
inc
iret
enter
mull
dec
pop
popf
call
or
pop
stos
sub
sbbb
ds
jb
lea
jecxz
bound
dec
cmp
ss
pusha
or
cmp
push
dec
mov
inc
jns
pusha
test
out
es
les
sbb
nop
pop
mov
add
je
jp
mov
rclb
push
jo
or
hlt
loope
or
cmp
sahf
test
xlat
sti
and
mov
push
push
fndisi(8087
push
stos
aam
flds
mov
aas
ds
fsubrs
stc
inc
and
int
and
subb
in
inc
es
sbb
out
jmp
sbb
pop
xchg
mov
adc
push
or
outsb
ret
mov
js
push
fidivrs
or
add
dec
jb
iret
mov
jno
mov
xchg
decb
mov
outsb
xchg
mov
fidivrs
aaa
daa
push
outsb
rcrb
das
rorl
or
mov
cmc
mov
ret
jb
cmp
cmpsb
int
sti
cmp
mov
ret
mov
or
mov
stos
dec
xlat
xor
push
out
xor
out
mov
cmpsb
icebp
mov
xor
inc
adc
and
rclb
shrb
mov
sub
xor
mov
sbb
ds
or
cltd
shll
movsb
mov
lods
cs
xchg
scas
and
xchg
mov
xchg
cs
cvtpi2ps
and
mov
lahf
sbb
iret
jmp
iret
shll
dec
lock
je
sub
iret
xor
and
in
mov
ja
cli
daa
shl
xchg
lcall
imul
push
xor
popa
cmpsb
cmp
ret
test
inc
aaa
and
mov
shll
adc
rorl
mov
add
pop
add
mov
adc
push
sbb
jmp
insb
dec
loopne
into
jp
pop
cmp
sti
xor
ret
orb
rol
lock
jnp
push
xor
jp
idivl
jl
fcomi
repz
into
arpl
ljmp
dec
mov
mov
int3
xchg
xchg
stos
jae
sub
mov
mov
pop
cmpsb
adc
mov
in
leave
stos
mov
popf
aaa
cli
das
sub
cmpsb
push
cs
push
adc
sub
ss
jle
and
jl
sar
cwtl
pop
xchg
ret
jp
out
sbb
leave
movsl
orl
xchg
push
pop
adc
jne
stos
scas
jge
pop
mov
or
mov
pop
arpl
sahf
sub
inc
and
mov
cli
gs
or
ret
inc
push
out
and
test
push
stc
jne
stos
iret
insb
ret
into
imul
xchg
xchg
push
rcrb
sbb
mov
lods
xchg
cltd
xlat
shlb
inc
lock
inc
into
mov
push
jnp
das
hlt
stc
lea
sbb
adc
addb
add
sahf
jb
lock
jg
shrl
mov
xor
popa
dec
mov
adcl
xor
les
xchg
or
push
sbb
xor
dec
fdivs
rorl
je
cmp
addr16
scas
inc
sarl
dec
fwait
insl
inc
out
xchg
cwtl
jne
push
jno
test
icebp
stc
adc
nop
cmp
and
pop
aas
leave
dec
int
ljmp
pop
dec
lds
mov
add
addl
mov
orl
add
sub
mov
xchg
fistl
icebp
jns
add
push
adc
int
scas
push
adc
mov
xchg
mov
mov
cmp
hlt
leave
xchg
mov
incl
or
add
cli
xchg
jl
pop
test
fbld
out
orl
xor
leave
adcb
inc
cmpsl
stos
repz
sbb
pop
push
mov
lcall
gs
pop
mov
mov
push
push
es
inc
sub
xlat
rcll
xchg
sbb
rcrb
xchg
mov
pop
mov
jecxz
pop
in
and
push
mov
fiadds
or
test
mov
push
add
cmp
into
fsubrs
xchg
push
xor
ret
mov
sub
adc
sub
and
es
or
mov
push
outsb
adc
and
sub
shlb
cmp
es
mov
cwtl
add
lock
int
add
movsb
or
adc
jbe
insl
clc
popf
xchg
test
push
cmp
scas
jbe
mov
sahf
mulb
fs
pop
into
add
leave
jnp
stos
cli
mov
mov
cmp
add
pusha
push
xchg
push
int
and
jne
sbb
popf
pop
push
jmp
insb
mov
roll
rcrl
push
sahf
pop
lods
xchg
xchg
pop
xlat
call
push
xor
mov
test
ret
push
scas
sub
sub
mov
xchg
fsubs
inc
jg
fmul
jne
xchg
lods
inc
test
mov
pusha
popa
push
pop
stc
aam
negb
jg
xchg
dec
jge
jbe
fldlg2
and
in
shlb
jns
xchg
mov
inc
push
sbb
call
jge
fcom
push
adc
imul
call
sub
cli
dec
push
or
inc
and
adc
mov
mov
jmp
fsubr
sbb
cmpsl
xchg
lea
scas
addr16
or
xlat
in
xor
mov
or
in
or
pop
cmpsb
pop
mov
aad
addr16
in
mov
gs
out
mov
dec
xor
lret
mov
scas
xor
xchg
icebp
mov
and
sub
pop
lods
gs
and
mulb
ss
xchg
sahf
in
es
stos
lods
into
push
out
lret
das
mov
loope
or
lcall
movsl
aam
sub
mov
mov
inc
mov
and
mov
lret
sbb
xorb
fisttpl
mov
insl
cmp
and
dec
pop
icebp
pop
inc
in
jl
adc
cmpsl
pop
push
push
fucom
sbb
call
xchg
xlat
out
pop
add
and
les
jmp
js
test
fidivl
fwait
mov
or
lret
fisttpl
testl
lret
movsl
jo
movsl
push
mov
ret
mov
fisttpll
sub
adc
sarb
pop
repnz
jnp
test
xor
rcrb
sbb
popf
call
sti
out
pop
ljmp
push
mov
adc
jge
andl
rcrb
dec
mov
cmp
pop
push
xchg
push
ds
sub
mov
jl
rorl
iret
push
mov
and
leave
xchg
sti
jns
cltd
sub
and
ret
jg
xchg
jp
call
cwtl
pop
pop
jb
cmpsb
pop
cwtl
pop
sub
xor
cmc
or
cmp
sbb
cmp
scas
sub
adc
mov
aaa
sbb
xchg
xor
mov
push
movsb
fisttpl
outsl
mov
lods
mov
push
xchg
in
jp
mov
dec
mov
jmp
in
pusha
mov
sarl
add
and
inc
inc
js
add
xlat
call
sbb
aam
repz
pop
cmc
push
fs
add
and
or
dec
aas
jns
mov
jle
xor
xlat
xor
dec
mov
sub
pop
cmp
xor
mov
icebp
adc
inc
pop
mov
ds
jg
lret
stos
std
inc
sub
pusha
push
adc
arpl
jo
adc
push
xor
imul
jns,pn
lret
fwait
adc
jne
leave
jge
jo
loope
ffreep
icebp
cwtl
lods
std
test
das
cmpsb
cmpl
test
mov
scas
push
stos
sub
mov
xchg
popf
lret
lds
outsb
xor
pop
into
sbb
test
out
rcr
shll
es
cli
inc
mov
fiaddl
mov
xor
js
aaa
into
scas
addl
sub
or
rcrb
or
sub
add
enter
jb
aas
cmp
jo
je
int3
inc
stos
arpl
jmp
or
fcomps
mov
test
mov
adc
aas
jge
lods
sbb
cmc
mov
pop
adc
push
xlat
or
iret
cltd
sbb
xchg
mov
mov
repz
mov
mov
mov
inc
push
pushf
in
inc
fsubrl
pop
xor
dec
inc
add
and
pushf
fsubs
outsl
adc
fdiv
mov
iret
push
aad
adc
and
mov
int
pop
mov
insl
mov
sarb
std
xchg
lret
inc
and
jo
sub
gs
push
and
push
mov
loop
pusha
nop
pop
subl
cwtl
cmpb
adc
pop
daa
xor
adc
or
cmp
mov
push
cli
mov
cmpsb
test
mov
and
xor
cmp
stos
popa
xchg
insb
in
mov
rclb
add
pop
imul
sub
adc
and
outsb
pushf
sbb
orl
fidivrs
dec
cltd
mov
out
pop
jns
dec
repz
insl
cmpb
push
in
movsb
inc
enter
jb
or
sub
adc
cmpl
pop
pop
call
incb
jbe
lgs
adc
jg
loope
ficoms
icebp
or
push
out
push
jge,pt
rcr
jnp
mov
rcl
je
adc
je
inc
jne
lret
dec
jp
and
xchg
adc
mov
jl
fnsave
cwtl
mov
or
and
pop
cmp
insl
shrb
rcll
stos
cli
adc
xor
outsb
clc
or
xor
and
mov
pop
push
lods
pop
iret
lods
cmp
sbb
jnp
bound
pop
cmp
test
ja
and
movsb
pop
fsubrp
inc
fs
sub
daa
subl
movsl
cmc
pop
sbb
mov
mov
push
fwait
fsts
jge
dec
data16
sub
jg
repz
sub
imul
jo
lods
rolb
jecxz
scas
adc
push
xchg
and
or
faddl
inc
sarl
sahf
mov
mov
xlat
mov
cmp
popa
push
and
mov
stc
jne
adc
adc
aam
imul
cmpsl
data16
out
lcall
xchg
insl
dec
gs
push
lods
lahf
inc
repz
jecxz
xor
cltd
push
jnp
loopne
dec
in
pop
cmp
lret
pop
cmp
in
push
cmp
loopne
inc
je
inc
and
cld
mov
jbe
cmpsl
iret
add
or
cmc
leave
es
pop
sbb
push
mov
cmp
std
fisubrl
sbb
shl
push
add
mov
jno
or
cld
lea
cmp
jp
inc
fwait
cmp
out
and
int
subl
cmp
sub
xchg
hlt
sarl
pop
jns
or
test
or
in
mov
add
sub
or
iret
jl
xchg
ss
in
adcl
and
push
jg
mov
jecxz
aas
jnp
jge
lea
jle
fcoms
push
pop
dec
cmp
insl
mov
pop
and
and
shl
ret
sete
jnp
push
xor
daa
pop
fs
test
insb
pop
pusha
mov
push
inc
dec
aad
dec
mov
loope
insb
shl
inc
add
inc
cmp
movsl
ja
icebp
xchg
mov
sahf
xor
sarl
mov
jbe
lea
cwtl
mov
pop
lods
push
add
inc
pop
cwtl
adc
xor
and
lods
xchg
stos
shl
sub
or
dec
add
rolb
pop
adc
cwtl
xchg
xor
aaa
hlt
sbb
inc
pop
das
xchg
adc
mov
jle
xchg
push
and
sarl
lods
jmp
adc
ficoms
or
leave
jge
mov
in
lock
in
jg
pop
lods
outsl
fsts
add
bndldx
cmp
push
jb
pushf
add
mov
test
ss
fsubr
mov
jbe
movsl
outsb
cli
stos
mov
out
imul
xor
fsubl
stos
in
push
loop
sbb
std
cli
dec
aam
sub
sbb
pop
pop
es
jne
in
in
lahf
lahf
les
cmp
arpl
dec
and
pop
mov
jecxz
and
int3
jb
fildll
in
inc
cmp
jecxz
mov
lea
bound
mov
cmc
loopne
mov
out
cmpl
mov
and
pop
iret
stc
decl
or
pop
cmp
mov
leave
sbb
lods
fiadds
xchg
cwtl
fistps
cmc
fucomi
dec
push
mov
push
inc
dec
add
subb
das
repnz
mov
xorl
es
and
cmp
add
add
es
sbb
lahf
scas
cmp
jae
push
test
cmpsb
mov
push
push
and
enter
pushf
pusha
or
ret
push
into
xor
mov
or
or
pusha
and
movsb
or
fcoml
adc
cmpsb
xchg
in
or
fldcw
jle
pop
sbbl
push
inc
lea
shll
ret
push
sub
divb
sbb
mov
and
gs
inc
mov
mov
divb
dec
jo
cli
pop
inc
push
orl
jl
leave
int3
mov
xlat
inc
adc
push
stos
xor
inc
inc
xor
push
adc
sbb
mov
fsub
ja
push
fwait
push
cmc
stc
sub
push
nop
push
add
sbb
into
cs
push
arpl
rcll
fstps
mov
inc
popf
xchg
int3
mov
in
je
stc
lods
sub
cmp
pop
sarl
sbb
cmp
aad
xchg
mov
icebp
pop
push
dec
jl
test
mov
add
gs
test
mov
insb
inc
adc
call
ljmp
mov
jne
call
mov
movsb
add
and
mov
lret
outsb
push
outsl
js
scas
add
add
pop
mov
out
movsl
cmp
mov
stos
stos
dec
xchg
notl
ficomps
mov
idivl
aas
into
frstor
pop
cmp
pusha
sahf
movsl
and
repnz
xchg
aas
movsb
repnz
mov
push
mov
in
into
dec
xor
fisubl
fsubl
xchg
clc
sti
adc
sub
fwait
dec
loope
jb
cmpsb
sub
mov
shr
xor
leave
pop
aaa
stc
dec
out
fiadds
push
jo
hlt
pop
mov
jb
mov
int3
add
mov
test
lods
mov
fcomps
mov
push
jnp
das
ret
outsb
ds
pop
les
fbstp
mov
lods
push
mov
cld
push
adc
cmc
push
and
mov
sarl
ret
stos
lcall
fcoml
cld
cmc
stos
cltd
rorl
cmp
cmp
mov
or
sarb
cltd
or
mov
rol
movups
ja
xchg
fcom
movsb
inc
sbb
stc
clc
cmp
cmpsl
call
cmc
movsb
xor
pop
dec
jg
dec
mov
fs
sbb
sahf
sahf
pusha
imul
sub
add
test
add
jbe
aam
mov
lods
pusha
pop
inc
pushf
mov
xchg
sbb
es
mov
pop
sub
mov
mov
in
mov
xchg
mov
mov
push
add
cs
fwait
in
movsl
testl
mov
inc
loop
icebp
adc
cmc
in
mov
mull
jbe
push
mov
leave
mov
add
lret
in
addr16
test
add
mov
xchg
out
fidivrl
jnp
and
jp
lods
mov
aad
std
xchg
push
jo
ror
leave
sub
das
dec
iret
call
jp
cmpsl
sbbl
mov
mov
sub
bound
mov
mov
subb
dec
aaa
cltd
xchg
xchg
jg
add
adc
out
jp
adc
aas
pop
sub
js
mov
fiadds
jl
sahf
add
sub
icebp
ret
pop
andl
ret
imulb
in
mov
clc
test
push
adc
fld
test
int
sbb
or
mov
and
daa
cmp
mov
std
adc
cmp
xchg
stc
mov
and
pop
shrl
shll
insl
jo
add
pop
fidivrl
arpl
mov
mov
mov
sub
dec
push
jno
bound
sbb
mov
xchg
sahf
inc
pop
mov
iret
movsb
out
ljmp
dec
aam
lods
mov
popa
pop
nop
xor
dec
mov
clc
cli
jnp
jns
sub
xchg
sbb
iret
or
imul
shlb
pop
rorb
sbb
jne
ja
ret
adc
ja
mov
xor
push
fisubl
jne
fcomi
and
xchg
sub
push
pop
bound
adc
add
ljmp
mov
repz
jno
fs
subl
addb
int3
xlat
je
sti
je
and
bnd
imul
lret
xor
lods
notb
xor
mov
xor
outsb
xchg
pop
push
fiaddl
xor
ret
jbe
sahf
push
xor
pop
jb
or
ficomps
fwait
mov
imul
aad
add
int3
ljmp
push
shlb
pop
notb
xorl
xchg
inc
jp
leave
in
adc
sbb
les
jb
mov
jb
aad
loope
sub
sub
call
std
call
jp
lds
push
xchg
ficompl
or
xchg
das
pop
mov
data16
jmp
fldcw
inc
mov
test
mov
or
push
lcall
sbb
test
fmulp
sub
ljmp
lret
jb
lods
call
adc
adc
movsl
dec
ja
lods
pop
movsl
out
mov
mov
fwait
jg
add
or
ja
mov
xor
mov
fnstenv
cmpb
ljmp
out
sbb
je
xor
push
popa
stc
jne
cltd
movd
cli
pop
std
into
cwtl
push
jl
xor
pop
mov
jnp
mov
js
lcall
adc
xchg
mov
mov
movsl
mov
inc
imul
dec
xchg
pop
xlat
and
les
adc
push
outsb
pop
pop
xor
hlt
inc
ret
cltd
cltd
test
cli
push
cmp
mov
pusha
out
fwait
or
dec
push
or
lret
dec
fcomi
or
mov
leave
filds
sub
pop
js
sbb
lcall
enter
dec
mov
pop
cs
add
sub
or
adcl
scas
rcrl
dec
lret
imul
mov
nop
out
jle
das
push
xchg
ljmp
fdivrl
adc
jno
pop
xchg
es
aaa
pop
out
fs
or
or
pushf
subl
inc
mov
add
push
add
sub
jno
push
dec
pop
jl
fnstsw
repz
jb
mov
mov
xchg
xchg
std
clc
jae
test
add
je
xor
addl
mov
nop
adc
jge
mov
mov
add
mov
sub
shrb
rcll
cmc
cmp
outsb
mov
jecxz
sub
loope
aad
imul
popa
add
mov
hlt
sbb
filds
cmp
pop
rclb
stos
fmulp
enter
loope
push
stos
test
cmp
ret
sub
jge
xchg
movsl
je
push
call
insl
in
mov
and
inc
sub
adc
mov
inc
je
push
or
in
jl
pop
xchg
cli
nop
fidivs
jae
clc
or
std
std
mull
icebp
sbb
mov
test
mov
into
mov
cmc
or
sbb
push
mov
mov
cmpsl
fisttps
lds
cmpsl
cmpsb
mov
add
stc
mov
std
cmpsb
mov
push
sbb
adc
sub
push
popa
add
out
inc
cmp
jl
sbbb
mov
rclb
pushf
lret
pop
xchg
call
xchg
movsb
xor
inc
cmp
out
sub
pop
xchg
into
lds
out
cmp
inc
mov
in
pop
push
mov
stos
pop
or
jecxz
repnz
lods
lcall
and
mov
popf
sub
iret
mov
punpckldq
aaa
das
and
and
push
inc
mov
sbb
add
xor
test
bound
push
jo
scas
jns
lret
jo
das
aad
shr
pop
imul
xchg
or
dec
or
xchg
cmpsl
xor
paddsb
idivl
inc
sub
sarl
cmp
jl
mov
jnp
ja
outsb
inc
jbe
daa
dec
test
pop
pushf
mov
and
cmp
adc
cmp
cmp
pop
loop
dec
pop
cmp
imul
daa
mov
push
xchg
js
adc
aam
push
xchg
arpl
adc
xor
xor
mov
aad
jecxz
mov
add
xchg
lock
loopne
push
jle
in
loopne
sahf
jmp
push
out
fs
and
jb
test
or
shrb
mov
mov
xor
inc
rcrb
lret
xchg
lds
inc
imul
adc
add
inc
mov
adc
lcall
add
jmp
mov
jg
rcrb
jno
imul
mov
push
mov
dec
xor
test
dec
out
pop
pop
fwait
int3
push
clc
mov
and
lods
nop
pusha
clc
add
repnz
add
shrb
cli
xlat
ret
cmp
mov
loop
mov
mov
push
mov
pop
insl
incl
je
mov
mov
xchg
mov
inc
sub
adc
fldenv
mov
xor
sbb
cmc
mov
sarb
mov
pop
jae
sbb
push
adc
push
jo
push
push
aas
imul
test
jge
in
imul
and
popa
jns
iret
jbe
ja
pusha
add
dec
int
out
xor
icebp
jge
add
mov
imul
sarl
test
cmp
jge
stos
cld
jo
dec
gs
negb
xor
dec
mov
sub
cs
jl
jecxz
push
stos
cwtl
jg
or
sub
dec
xor
lret
sbb
in
fldl
in
fsubr
test
cmpb
add
inc
cltd
clc
outsl
imul
icebp
fcoms
mov
and
int3
xchg
lea
andb
fisubrl
das
push
xlat
mov
rclb
xor
mov
push
test
pop
push
add
fsubrs
loopne
push
out
sub
test
lcall
jne
pop
iret
in
in
lahf
jmp
dec
cmp
xor
aad
or
push
fsubrl
cmpl
test
fcoml
adc
add
and
push
pop
orl
sahf
and
cmp
push
xor
xor
add
push
mov
repnz
lret
or
filds
sub
cmpsb
xor
pushf
jge
fs
rol
sbb
or
jno
daa
mov
push
mov
mov
adc
cmp
cmp
jo
mov
xchg
add
ja
outsl
imul
push
fcoms
mov
mov
push
shlb
dec
add
inc
int
push
and
sbb
dec
push
or
or
mov
outsl
loopne
push
int3
negl
push
lahf
es
and
cmpb
adc
shll
push
xchg
xor
cli
outsl
arpl
sbb
push
sbb
sbb
cmp
ja
out
inc
dec
mov
movsb
fsubl
bound
push
sub
push
dec
adc
jnp
mov
or
int3
fs
adc
xor
jne
jmp
andl
loop
popf
into
xor
es
inc
in
std
es
mov
and
aas
or
scas
sti
cld
and
nop
lahf
push
out
pop
xchg
push
bound
imulb
mov
xchg
mov
cmc
outsb
stos
orb
push
cmp
sub
lcall
int3
mov
adc
fucomip
jl
xor
iret
cli
sbb
cs
sahf
push
mov
clc
test
test
adc
mov
in
push
mov
test
adc
xorb
push
stc
and
or
negb
lret
or
jmp
mov
push
sbb
popf
ljmp
js
and
fmul
out
subl
pop
push
jo
mov
insl
addb
ljmp
std
adc
je
pop
aad
setns
jecxz
push
in
lahf
mov
push
push
sub
movsl
fnstcw
ss
clc
enter
out
stos
and
jnp
movsb
fstl
mov
dec
or
fs
or
aaa
adc
or
xchg
jae
dec
out
mov
pop
and
xchg
xor
push
inc
xchg
xor
xor
hlt
daa
push
sub
sti
sbb
ret
mov
mov
pop
and
call
ja
pop
push
out
push
mov
ds
movsl
movsb
sti
sbb
in
and
xor
cmpsb
popa
and
xor
push
pop
test
fisttpl
in
shll
mov
iret
dec
in
mov
arpl
int
cltd
in
sbb
mov
cmpsb
pop
dec
sub
sbb
insl
xlat
popa
cmpsl
mov
mov
adc
adc
out
shll
inc
jecxz
loop
pop
add
adc
jle
andb
inc
cmp
push
or
cmc
arpl
pusha
xchg
push
lahf
nop
pop
add
jnp
and
roll
inc
les
repz
add
call
popf
mov
inc
fxch
mulb
jp
mov
stos
fcmovne
push
aaa
mov
in
adc
cltd
stos
hlt
in
cmp
inc
movsb
negl
cmp
pushf
popf
pop
mov
xor
dec
ret
add
mov
lret
insb
and
insl
xor
xchg
rolb
lret
repnz
xchg
leave
mov
popa
dec
pop
sbbl
dec
push
aaa
or
dec
pop
mov
repnz
jno
add
xchg
call
divb
test
mov
popa
cltd
cli
ljmp
cltd
mov
test
cmp
sbb
jbe
cmovg
leave
cvtps2pi
lret
dec
inc
dec
jns
lods
and
rorb
push
das
out
pop
mov
push
cmp
or
pop
in
cmp
lods
pushf
stc
cmp
ds
int
or
shll
idivb
xchg
incb
sbb
inc
cmp
loop
inc
bound
jge
popf
mov
ficoms
inc
dec
push
inc
gs
movsl
push
scas
mov
out
mov
out
lods
lods
cmc
mov
or
mov
cld
fneni(8087
mov
adc
out
lods
lahf
pop
sbb
and
pop
mov
test
jno
clc
and
xlat
lods
mov
and
lcall
outsb
in
movsl
jle
into
out
lods
xchg
or
pop
lcall
fcmovbe
mov
and
pop
decb
jl
lcall
inc
jno
push
lahf
pop
push
mov
shrb
pop
jle
loope
fmull
dec
jp
es
mov
lahf
pop
add
mov
sbb
sub
mov
call
sub
cs
jmp
xchg
mov
and
pop
sbb
dec
mov
int3
call
scas
fildl
fists
pmulhuw
scas
cmpsb
adc
add
cmp
or
scas
das
xchg
mov
push
insl
xor
addr16
sarl
aad
mov
ss
cld
sbb
sarl
lahf
and
pop
popa
and
push
or
jge
rcrl
lea
inc
and
stos
pop
xchg
test
cmpsl
jecxz
mov
add
push
out
push
cmp
pop
pushf
pop
push
aam
cli
out
jbe
sbb
adc
push
orb
fisubrl
or
rorb
cltd
incl
jecxz
lock
daa
sbbb
sahf
dec
aas
dec
dec
movsl
push
cmpsb
enter
in
mov
orl
outsb
xchg
inc
mov
bound
xchg
dec
adc
adc
aad
notb
jne
jmp
pop
adc
mov
pop
cmp
enter
add
or
into
mov
mov
fldenv
cs
shll
rcrl
push
pop
fcompl
jo
pop
xchg
jg
int3
push
stc
je
cmp
popf
and
xor
xor
shr
add
jae
into
xchg
sarb
std
sbbl
fdivrl
mov
and
test
adc
subb
hlt
arpl
inc
test
testb
xor
mov
mov
mov
mov
scas
ljmp
test
xor
loope
scas
fs
pop
jecxz
xchg
cmp
adc
aad
push
adc
call
fbld
mov
out
xor
dec
popa
clc
mov
adcl
rcl
sbb
test
mov
movsb
lahf
push
fs
xchg
imul
fildll
inc
sbb
pushf
mov
push
push
out
sub
test
mulb
cmpsb
mov
loopne
lahf
ror
cmpsl
inc
test
and
mov
cwtl
jbe
cmp
jecxz
insl
stc
pop
test
jp
mov
repnz
xor
or
cwtl
xchg
and
jg
jae
scas
mov
shrl
movsl
les
mov
aam
loop
loope
out
adc
jge
lret
sbb
and
daa
mov
pop
aas
jae
hlt
cmp
in
mov
or
add
orb
pop
add
das
or
jns
sbb
scas
sbb
sub
lcall
test
ret
inc
jp
inc
lret
enter
cmp
cmpl
div
mov
push
pop
subl
adc
nop
dec
setno
add
aas
shlb
xchg
iret
fwait
stos
adc
test
lock
jg
pop
push
or
call
dec
sub
jecxz
loop
lds
lret
into
push
scas
dec
push
mov
jnp
bound
aad
fsubrl
cwtl
inc
orb
mov
mov
jb
add
sarb
dec
mov
in
lcall
xor
jne
jge
or
xchg
pop
mov
loop
pop
movsb
loop
dec
mov
xor
or
subl
arpl
icebp
popa
inc
push
add
out
inc
imul
mov
loop
mov
jp
adc
mov
xchg
bound
mov
push
jl
dec
adc
insb
cmpsb
push
adc
ss
test
sbbb
fwait
sbb
mov
or
lea
inc
loope
sbb
cmpsb
jmp
push
popf
je
mov
mov
ss
outsb
lahf
or
test
xor
es
pop
mov
jge
sub
inc
outsl
ds
shr
pop
push
mov
loop
in
pop
mov
xor
push
add
dec
test
pushf
push
dec
add
push
repz
rolb
in
jbe
in
rorl
or
mov
sbb
rorb
mov
in
xchg
rorl
sub
inc
mov
imul
or
cltd
hlt
data16
mov
xlat
scas
jmp
shll
sub
xor
out
je
test
adc
push
shrl
mov
sbb
jnp
test
decb
sti
xor
imul
std
test
xchg
fwait
push
mov
ret
stos
inc
out
mov
fidivrs
push
movl
out
clc
jbe
pop
cmpsb
adc
mov
mov
pop
pop
mov
and
testb
movb
inc
push
adc
scas
rcll
pop
outsb
mov
mov
fpatan
sub
or
or
gs
nop
sahf
rolb
pop
scas
cmp
adc
pop
inc
out
addb
push
dec
aam
xchg
dec
gs
cmp
fcoml
push
and
push
in
fwait
lock
jbe
mov
movsl
inc
arpl
inc
aam
jl
jecxz
adc
js
movsl
rolb
in
inc
repz
sbb
or
jbe
inc
push
sub
push
jmp
ja
shl
lret
shl
xchg
push
frstor
pop
jne
aad
cmc
push
inc
sbb
ljmp
aad
int
add
adc
cmp
mov
add
jno
jge
lea
xchg
jo
mov
in
push
shll
stos
mov
outsb
out
aad
cmpl
mov
fdivrl
fs
hlt
push
lods
or
jnp
mov
jl
inc
jo
loope
fistpl
cli
jne
cmp
adc
into
out
pop
popf
in
fbstp
mov
jno,pn
mov
cwtl
add
call
cmpsl
pop
imul
lds
pop
pop
daa
inc
ja
pop
pop
outsb
das
imul
mov
pop
insl
bound
bound
mov
add
stos
loope
mov
xchg
mov
jp
pop
mov
jbe
mov
movsl
addr16
lds
das
xchg
push
push
xchg
pushf
jne
adc
outsl
movsl
dec
call
mov
inc
cmp
jns
lds
ja
pushl
pop
dec
ljmp
xor
inc
insb
js
cwtl
clc
mov
int
enter
push
mov
rcrb
loopne
jb
mov
shrb
fs
jb
sub
mov
ret
js
push
jmp
push
lret
sbb
pop
cmpsl
fsubr
arpl
cs
xchg
scas
pop
arpl
negl
rclb
pop
sub
in
mov
dec
daa
out
loopne
mov
pushf
jb
mov
sbb
mov
in
ret
clc
cmp
lock
dec
push
mov
cmpsb
or
push
adc
xor
mov
mov
sub
pop
xor
loope
int3
jne
mov
mov
lcall
pushf
jae
in
in
xchg
pop
sub
lret
jo
daa
dec
jae
divb
xchg
pop
std
mov
mov
or
push
xor
cwtl
sub
jle
mov
jno
push
sbb
in
loop
gs
ja
and
xlat
dec
call
in
in
outsb
cli
sahf
cmpsb
rcrl
push
out
ret
loop
push
popf
hlt
jo
jns
lods
mov
aam
inc
dec
dec
pop
push
jbe
mov
ret
cli
pushf
out
and
push
pop
lods
sbb
xor
inc
cld
jg
or
or
loop
jmp
insl
in
movsb
xchg
push
mov
lods
rcll
in
in
inc
lods
fmul
ss
pusha
inc
aam
sub
ret
dec
in
push
test
jbe
adc
jg
jge
repz
rol
adc
lret
cld
push
adc
push
outsl
mov
mov
push
or
jo
add
cmp
cmp
cmp
xchg
cmc
lods
cmp
ffree
inc
ret
pop
sahf
mov
rolb
mov
lret
mov
mov
out
jl
push
pop
cmp
lret
and
lock
aam
es
sub
push
ss
fwait
js
out
push
add
jle
mov
sub
cmp
cwtl
rolb
fldcw
aam
in
and
int3
pop
xchg
cmp
mov
pop
ret
in
arpl
mov
js
mov
mov
shr
xchg
or
add
push
sub
jns
and
divl
adc
dec
in
push
mov
pop
mov
rcrb
xchg
pop
scas
mov
add
std
push
jg
fwait
shl
mov
fwait
sub
or
sub
addr16
adc
dec
insb
ficoml
jns
adc
pop
sahf
pop
andl
adc
pop
dec
or
gs
mov
xchg
or
jge
cs
pop
and
sbb
mov
in
movsl
sub
push
insb
insl
mov
add
xlat
sub
rorb
test
fwait
ljmp
movzbl
ss
imul
stos
aam
test
scas
jle
out
jmp
pusha
cmp
adc
push
jge
add
and
add
bound
or
aad
xchg
pop
mov
roll
outsl
jns
jns
mov
cmp
dec
decb
shrl
pop
lcall
out
sub
sub
xchg
pop
sub
das
addr16
mov
xor
stos
mov
mov
cltd
sub
pop
xor
sub
mov
pop
imul
pop
push
pushf
repnz
adc
hlt
inc
imul
dec
stos
fwait
subb
inc
les
inc
jbe
sub
push
mov
scas
xchg
dec
or
in
nop
cmp
mov
inc
push
mov
sub
icebp
mov
add
jge
repz
ficoml
test
insb
push
jns
lea
mov
loope
cmp
mov
roll
pop
jle
or
add
mov
inc
push
mov
cmpsb
sahf
loopne
mov
rcr
inc
inc
cmp
cmp
mov
and
adc
sub
mov
and
push
mov
sub
or
jo
cmp
adc
dec
push
xor
fwait
cmp
and
sti
pop
jno
adc
imul
and
push
adc
jge
sub
push
and
fisttpl
loope
sub
cltd
xchg
faddl
push
dec
rcrb
mov
xor
mov
jb
pop
popf
dec
and
outsb
push
flds
out
and
pop
sahf
push
or
cmp
pop
xor
pop
fcompl
inc
daa
negl
dec
addr16
js
pop
cmp
mov
test
cmp
mov
rcll
data16
in
cmpsl
or
not
or
pusha
dec
pop
scas
push
mov
adc
jmp
cltd
mov
adc
int3
lcall
es
mov
iret
inc
xor
arpl
xchg
fwait
inc
movsl
js
push
jle
xlat
cmp
jge
mov
iret
xor
cmpsb
out
adc
push
movsb
jg
push
push
jp
inc
mov
popa
pop
adc
mov
sbb
push
cmp
sahf
outsb
shll
sub
sahf
adc
stc
mov
dec
ja
cwtl
cmp
push
and
cli
push
mov
xor
jmp
inc
pop
jbe
int
sub
int
xor
leave
rcrb
cli
pop
xor
rorb
dec
xor
adc
imul
add
cs
dec
mov
xchg
shrb
outsl
mov
jne
lods
inc
sbb
mov
setns
stos
test
test
mov
push
mov
push
xor
addr16
fldenv
std
pusha
sti
or
aam
js
cmp
mov
xchg
xor
popa
mov
mov
cmpsb
arpl
fildl
pop
mov
ds
inc
pushf
push
inc
cmp
out
mov
scas
mov
dec
es
lcall
lcall
scas
imul
xchg
inc
xchg
out
insl
ja
mov
add
add
mov
add
aad
mov
je
leave
addl
daa
nop
jo
sub
inc
mov
out
add
add
ret
stos
mov
mov
outsb
into
lds
gs
mov
test
je
mov
inc
nop
inc
or
lcall
mov
xor
imul
fucomp
add
emms
mov
add
ja
aas
or
inc
in
sar
mov
dec
xor
cmp
aaa
sbb
cmp
xor
loope
ret
test
dec
pop
ds
popa
ds
jmp
mov
test
pop
push
mov
fdivl
sub
movups
push
adc
ss
or
xor
in
icebp
aad
cltd
cmp
loopne
jo
or
lahf
insl
cmpsl
in
push
not
adc
adc
jge
outsb
int
fmul
and
dec
dec
sbb
fucomip
sahf
int
mov
push
das
sub
repz
pop
add
cmp
cmp
jno
push
push
adc
inc
lret
cwtl
in
xor
sbb
fdivl
cmp
adc
xchg
lcall
aaa
cld
dec
dec
call
orl
and
adc
outsb
push
in
scas
adc
xor
fs
incl
mov
dec
cmp
sbb
loopne
out
pop
and
adc
inc
push
push
xor
inc
pop
mov
or
cwtl
inc
mov
pop
mov
dec
sub
stos
jp
fbld
enter
orl
jmp
fstpl
pop
xchg
bound
xchg
sub
mov
jle
jp
dec
fwait
pop
mov
jae
dec
subl
dec
js
mov
daa
rcrb
push
std
pusha
jmp
add
jbe
jge
xchg
push
mov
bound
popf
or
lcall
mov
jl
jg
or
and
mov
jno
dec
mov
jl
scas
fmuls
or
cmp
push
hlt
add
pop
mov
mov
push
std
jb
and
mov
in
in
in
imul
lds
out
shrb
mov
sub
push
lods
mov
shlb
and
mov
cltd
lods
movsl
fisubrl
xchg
push
mov
ficomps
push
sbb
int
inc
aad
sahf
aas
inc
dec
mov
or
dec
out
sbb
add
mov
adc
repz
out
inc
ss
cltd
xor
dec
mov
sbb
lahf
mov
cmp
or
test
inc
add
dec
pcmpgtw
add
jl
adc
dec
dec
jge
xor
jns
inc
or
mov
push
xlat
jle
mov
inc
xor
cmpb
cwtl
mov
lea
je
incb
cwtl
add
test
shll
cmp
enter
jbe
stos
sarl
sub
cmp
xchg
pusha
fmul
or
pop
ss
add
out
adc
cmp
jl
add
das
pop
icebp
mov
repz
inc
sar
xlat
bound
jb
cmp
lods
and
das
movsl
pop
ss
out
int
mov
test
fldenv
sub
rcll
xchg
mov
in
fbld
imul
rcll
add
cmp
inc
loopne
inc
gs
test
and
push
jge
ljmp
ret
test
pop
scas
push
fimuls
dec
popf
jns
mov
inc
adc
add
and
add
cmpsb
clc
mov
push
gs
lods
data16
stos
cmc
mov
push
mov
sub
sub
mov
ja
icebp
das
and
iret
cmp
push
xchg
cwtl
inc
pop
in
mov
pop
fs
out
cwtl
cmpsl
out
insl
outsl
xchg
in
inc
or
aaa
out
xchg
push
iret
and
je
jb
sub
inc
je
ds
or
in
jle
jno
icebp
cmp
mov
fidivs
add
js
bound
aam
adc
and
outsb
out
jo
or
lahf
aas
mov
insl
push
mov
push
enter
lock
dec
in
xchg
sub
adc
imul
mov
int
test
mov
pop
js
push
cmp
cld
mov
xor
jns
add
fstpt
imul
xchg
xlat
pop
test
or
lcall
aaa
and
arpl
or
mov
sub
scas
int3
scas
pop
iret
cmc
mov
sarb
mov
sub
movsl
and
ljmp
js
and
mov
cltd
pop
mov
mov
add
addr16
pop
ret
sbbb
adc
inc
repz
lret
aam
pusha
outsb
jbe
imul
mov
dec
add
std
pop
lods
lcall
inc
mov
loopne
lahf
cli
lock
inc
int3
cmp
es
insb
mov
je
cmp
sahf
or
sub
ss
sbb
pop
dec
js
mov
mov
cmpsl
test
ret
aaa
inc
sub
cli
ret
popf
cwtl
testb
sahf
lret
out
sbb
mov
inc
pop
cs
and
push
or
mov
add
pusha
jg
or
adc
dec
dec
or
das
popa
push
cs
scas
mov
int
add
add
sub
push
adc
jne
jb
mov
mov
and
push
fisubl
call
sbb
daa
mov
lea
cltd
xor
mov
inc
sub
or
lods
loope
setae
add
jae
aam
add
movsl
add
mov
push
mov
or
mov
leave
jecxz
xchg
sub
and
dec
xchg
cltd
mov
cmp
inc
ds
loopne
mov
rclb
call
lods
repnz
cmpsb
adc
stos
ret
mov
adc
mov
sub
jb
pop
ja
fcomp
sbb
popf
push
test
call
sub
out
add
sub
pop
gs
out
push
outsb
aam
xor
pop
pop
mov
dec
fsubrs
jns
or
and
andl
pop
movsl
mov
pop
jp
sti
out
push
and
insb
and
daa
jge
int3
into
das
fisttps
jae
jg
mov
and
push
push
cld
jg
scas
pop
mov
mov
insb
out
or
sub
pop
push
jge
pop
xchg
iret
pop
leave
movsb
outsl
sub
dec
mov
mov
mov
stos
push
xchg
mov
stc
scas
add
add
das
lds
xchg
cmp
push
mov
mov
iret
mov
js
xchg
xor
xlat
jl
xor
and
and
sbb
cs
push
fists
in
divb
dec
mov
enter
cs
mov
addr16
test
jmp
inc
test
fs
xor
lock
sbb
xchg
lret
xchg
adc
push
int
add
sti
aas
dec
adc
xchg
lahf
add
push
test
test
mov
incl
cs
jbe
xchg
daa
shlb
ret
cmp
inc
ds
fdivrs
xchg
xchg
sub
push
pushw
push
sub
lods
push
pop
ret
pop
xorl
ja
and
push
nop
xchg
stos
std
cmp
fldl
push
lcall
push
sub
mov
mov
test
in
cli
adc
jle
xchg
mov
out
add
ficoml
mov
mov
pop
dec
sbb
and
jno
arpl
psrad
cmc
sub
mov
sbb
lea
mov
stos
mov
jb
push
inc
adc
es
repnz
lret
loop
push
sbb
cmpb
push
je
adc
dec
sub
fildll
sti
mov
pop
adc
icebp
adc
pop
mov
sbb
mov
mov
mov
or
add
fsubrp
inc
fwait
xchg
add
cltd
or
jbe
fldcw
inc
movsl
stos
es
mov
fisubrl
es
mov
aaa
add
mov
and
shl
mov
xlat
inc
rorl
into
out
addr16
insl
xlat
xor
push
push
ss
loopne
and
pop
mov
idivl
add
mov
mov
xor
mov
pop
iret
xchg
iret
xchg
and
ss
adc
cli
lds
cmp
push
mov
ds
xadd
stos
push
je
add
dec
lock
in
inc
jl,pn
pushf
addr16
dec
dec
sbb
stos
adc
push
adc
sbb
shlb
aaa
jg
enter
jg
adc
pop
les
push
dec
cltd
stos
xorl
push
jo
adc
pop
mov
push
push
pop
xlat
fisubrl
das
add
fists
xor
or
iret
inc
call
inc
hlt
mov
insl
outsb
xchg
jb
dec
sub
sbb
outsl
fwait
mov
ret
aad
loop
xor
dec
mulb
mov
mov
movsb
daa
fstl
and
inc
repnz
fwait
jp
popa
outsb
pop
stos
bswap
jmp
ret
movsl
dec
mov
sbb
inc
push
pop
fbstp
lret
and
imul
adc
shlb
xor
call
push
aad
cmpsb
stos
nop
fs
inc
les
fsubs
jnp
dec
rorl
add
and
xchg
xchg
mov
cmp
cld
mov
fisubrs
jne
inc
loop
add
hlt
fwait
cli
in
pop
jno
nop
push
imul
scas
test
lea
lock
test
daa
jle
repnz
sar
mov
repz
ret
and
ds
lock
dec
push
adc
insb
sbb
bound
popf
and
xor
lea
and
dec
push
add
jbe
inc
jmp
insb
aaa
sub
fisubs
jge
mov
adc
clc
dec
sub
inc
or
dec
in
in
add
add
and
sub
idivl
dec
fldl
div
push
pop
adc
fisubs
sub
repz
jecxz
and
lds
mov
lods
jbe
test
out
clc
call
xchg
mov
xor
or
sbb
mov
add
aaa
dec
lock
inc
sbb
mov
or
sub
mov
js
sbb
push
push
pop
xchg
js
add
cmpsb
daa
jl
sbb
pop
cltd
adc
push
xchg
lret
hlt
cmp
jo
scas
mov
or
lock
and
pop
pushf
add
icebp
pop
mov
mov
sbb
xor
add
popf
sbb
out
out
movsb
arpl
in
jnp
mov
and
cmc
xchg
dec
dec
icebp
rclb
sub
bound
movsb
pushf
sti
pop
xchg
xor
pushf
inc
fldt
imul
stc
add
sub
sub
xor
inc
xchg
ds
incb
daa
je
jb
popf
rolb
lret
mov
data16
fldl
cwtl
mov
aad
pusha
sti
mov
fdivrl
fildll
aaa
add
dec
pushf
fnstcw
sub
stc
jecxz
push
xchg
xor
outsl
mov
loopne
fisubs
int3
push
jecxz
lods
push
sbb
mov
in
sub
es
in
fistpl
out
pop
push
lret
stos
lcall
popa
pusha
lret
cmpsb
pop
fwait
or
sbb
fwait
cltd
add
in
jg
incb
out
cmp
and
cmc
ret
push
data16
jnp
cmp
jo
fwait
mov
sbb
mov
std
shlb
jbe
sub
loope
push
xchg
and
push
lock
pop
ds
cwtl
iret
out
xchg
jb
mov
loop
push
divl
xchg
scas
into
ss
push
push
test
pop
xchg
xchg
daa
xor
inc
push
out
or
dec
ja
nop
ret
insb
decl
dec
mov
pushf
lods
ret
lods
jo
jp
add
push
leave
lahf
push
pop
inc
cwtl
pop
pop
or
mov
loope
dec
das
jne
dec
sbb
sub
fisttpl
sub
push
iret
cmpsl
mov
rcrb
ret
sub
add
add
adcb
test
jecxz
outsl
adc
mov
leave
sbb
jge
pop
bound
leave
hlt
xor
sarb
orl
and
or
jecxz
mov
and
in
pop
and
sub
mov
stos
arpl
call
out
mov
jae
iret
test
loope
push
imul
jl
inc
jmp
sti
cmp
dec
mov
sub
in
jns
movsb
sub
sbb
jp
outsb
mov
ljmp
lea
push
imul
cmpsb
ss
sub
insb
and
pop
mov
mov
cmpl
cld
aaa
addl
and
jp
push
aam
std
cmpsb
cmp
iret
pop
cltd
inc
iret
repz
aam
or
pop
push
aam
jnp
lret
jge
int3
sti
and
dec
mov
insb
xor
dec
add
roll
mov
insl
fs
sbb
xor
lret
int3
inc
jle
movsb
dec
dec
pop
inc
lods
clc
or
repz
fs
icebp
mov
jns
or
or
enter
mov
pop
push
jo
inc
cwtl
xchg
jge
xlat
xor
xchg
out
cmp
pushf
stc
std
cs
daa
aad
cltd
stos
stos
movsb
fsts
fbld
xor
sti
cmpsb
rclb
fldenv
icebp
aas
inc
loope
ret
fwait
xchg
mov
inc
repz
loope
or
mov
lock
adc
test
push
cmp
icebp
mov
sub
pop
mov
negb
les
lret
ret
out
xchg
imul
xor
lret
test
iret
ds
sbb
pushf
test
in
adc
pop
jo
inc
es
dec
inc
push
stos
jbe
lods
mov
mov
cmpsb
mov
jle
push
mov
into
lcall
lcall
lret
bound
cmpsl
pop
mov
xor
inc
pop
out
in
gs
iret
mov
jbe
sahf
in
push
xchg
xor
addl
sub
xchg
cwtl
rcll
mov
dec
mov
inc
mov
sbb
or
pusha
ret
lcall
lcall
repz
mov
push
loopne
xor
and
fbstp
loope
mov
pop
outsl
lret
sbb
int3
sub
xor
shr
jnp
shl
dec
or
mov
bound
inc
pop
orl
rolb
push
jb
aas
sti
push
lahf
sar
mov
push
jnp
inc
xchg
xchg
mov
xchg
inc
movsb
lret
inc
mov
pop
scas
in
ljmp
fcoml
arpl
sbb
push
mov
pusha
imul
fwait
jno
outsl
shlb
add
ret
test
and
push
fsubl
pop
test
mov
mov
jmp
push
je
pop
jo
inc
lods
pop
popa
or
cmpsl
ficomps
iret
push
jbe
shlb
mov
mov
pop
and
ficompl
and
push
or
mov
and
cwtl
jbe
ffreep
mov
daa
call
aaa
cmpsb
imul
inc
repz
lcall
sub
inc
xchg
mov
scas
sub
ja
sub
inc
cmp
add
mov
aaa
bound
in
and
sbb
jae
pop
test
iret
lods
ret
sbb
push
cmp
sub
push
cmp
inc
cs
decl
ret
fcompl
imul
fwait
dec
mov
pop
neg
cltd
mov
out
or
adc
in
pop
xor
sub
inc
loop
dec
in
rolb
cmp
pop
enter
adc
xor
addl
add
cmpsl
ljmp
push
sbb
int
jle
or
int
jno
test
cmp
enter
js
xchg
push
and
int
stc
jo
mov
repz
inc
adc
pop
pop
int
arpl
cwtl
pop
mov
and
fnstsw
sbb
sahf
mov
and
outsl
sahf
popf
inc
ja
pop
sub
out
sbb
lock
in
outsb
adc
add
dec
push
cmpl
popa
imul
inc
aam
xchg
sub
ds
iret
jecxz
mov
and
in
insb
cmpl
popf
sarb
ss
pushf
jb
pop
fistpll
add
dec
xchg
loop
test
inc
fcmovnbe
lcall
jns
mov
sti
push
fildl
adc
fsubrl
cs
data16
lret
insb
loope
rcl
in
xor
lahf
or
push
rcr
mov
jmp
mov
sub
adc
jle
push
or
mov
fcompl
pop
aad
xchg
push
mov
mov
sub
movsb
leave
sbb
lret
ljmp
inc
test
mov
push
pop
xchg
faddl
lret
add
clc
popf
jo
mov
fcomip
lods
adc
jns
dec
xor
inc
pop
test
cmpsb
lcall
ja
outsb
dec
mov
into
lods
std
jb
popf
cs
and
xor
das
sub
shl
mov
cwtl
push
ljmp
pop
rclb
mov
pop
dec
lea
jecxz
mov
test
pop
lahf
lret
pop
cmc
dec
pop
mov
push
cmp
sbb
inc
sub
or
outsl
or
mov
pop
ljmp
push
pop
inc
xor
sub
add
ret
adc
int3
scas
pop
pop
or
dec
cmp
fstps
dec
les
imul
std
dec
jg
stos
sbb
cmp
sub
add
iret
test
pop
gs
lcall
mov
cld
dec
xchg
stos
inc
clc
pop
jb
cmpsl
mov
xlat
nop
jb
mov
jp
std
add
pop
lret
inc
pop
cmp
xchg
lcall
nop
enter
addl
adc
rol
pop
pop
jne
fcoms
je
je
sbb
out
xchg
stc
movups
mov
mov
sahf
xlat
mov
sub
clc
aaa
gs
jae
movswl
inc
add
mov
sbbb
pop
push
das
repnz
scas
adc
sar
or
ja
test
add
clc
lret
bound
mov
push
adc
jmp
push
adc
mov
test
mov
xorl
and
or
mov
jp
clc
rorl
daa
mov
lret
add
pop
inc
stc
enter
dec
mov
lcall
sbb
jbe
sti
ficompl
out
xchg
cltd
and
xor
pop
orl
sahf
sub
push
pop
arpl
mov
lret
imul
add
xchg
jbe
xor
mov
vpcmpgtd
shll
dec
fwait
xor
add
mov
lods
add
mov
lret
div
data16
in
xchg
dec
das
push
fistpll
rcll
sbb
and
or
or
out
jecxz
jmp
mov
push
push
jmp
push
xchg
add
jb
out
lds
xor
or
pop
scas
cwtl
push
repnz
clc
jo
pop
or
frstor
push
int
bound
sbb
cs
mov
add
ret
xchg
dec
push
xchg
xchg
es
cltd
outsl
aaa
jmp
and
das
mov
int
cmc
bound
sti
sbb
lret
inc
icebp
xor
or
std
xchg
dec
adc
mov
inc
mov
push
xchg
xchg
fsts
cli
cli
mov
bound
push
out
push
adc
pop
xor
dec
jo
ds
sti
xor
mov
ds
in
xchg
xlat
push
push
lret
ror
sbb
pop
leave
sub
pop
mov
jae
sub
insb
pop
imul
push
scas
mov
push
bound
or
fiadds
lcall
sub
movntq
pop
in
push
ss
push
call
xchg
fists
push
sbb
adc
mov
loop
aaa
rcll
leave
pop
pop
fmuls
jmp
xor
xchg
in
push
jae
cmp
mov
adc
ja
mov
adc
xor
mov
dec
sahf
inc
xor
leave
mov
cmp
add
inc
lret
lahf
lea
cmp
sbb
adc
push
out
test
add
mov
lret
adcb
nop
movsl
dec
sub
dec
mov
jmp
cmc
xchg
insb
mov
dec
sbb
stc
mov
lea
jo
or
add
pop
jbe
and
out
les
inc
mov
outsl
mov
imul
jmp
faddl
test
daa
repz
jg
jns
adc
lds
mov
fsubl
sbb
out
xor
add
pop
lds
ljmp
dec
or
jns
hlt
xchg
scas
lret
nop
movsb
sub
sbb
push
pop
out
lahf
sti
jle
jne
aam
std
lods
rol
and
pop
push
xchg
mov
mov
shr
in
xor
stos
scas
lret
mov
movsb
je
je
ret
dec
jle
frstor
pushf
sbb
dec
jle
push
cli
mov
xor
sub
add
pop
or
sbb
push
jl
lret
das
mov
and
mov
rclb
ds
ret
jle
test
repnz
inc
xor
sahf
xchg
pop
fsubrs
cmp
xor
mov
cwtl
test
popa
loop
lret
or
push
test
and
adc
adc
test
jg
iret
add
out
ja
out
loopne
addr16
call
shl
or
popf
add
sub
loope
jno
lcall
in
cmp
and
mov
pop
stc
xor
mov
push
imul
push
mov
pop
hlt
xor
pop
repz
pop
loope
movsl
jae
push
xchg
push
je
sbb
mov
cld
sub
movsl
cwtl
fstpl
outsb
icebp
in
fwait
lea
insl
xchg
in
or
daa
sub
les
jo
cmpsb
and
mov
fmuls
adc
add
sbb
mov
and
xchg
and
scas
or
sbb
push
push
push
pop
sub
cmpsb
fmulp
push
int3
inc
cld
push
xchg
fwait
in
shrb
inc
adc
adc
xchg
dec
inc
dec
push
lods
dec
test
mov
testb
test
mov
mov
lods
jno
loop
push
shlb
sahf
and
shlb
sahf
inc
fadds
add
fs
push
outsb
or
arpl
es
xchg
into
mov
jl
inc
lcall
cmp
sbb
std
idivl
push
sub
add
test
adc
xor
dec
in
mov
fwait
add
int3
pop
movsl
fs
insl
mov
adc
popf
xchg
add
out
ss
out
out
cld
cmp
jne
fs
and
dec
jecxz
subb
out
repz
xor
into
pop
push
into
leave
fs
mov
pop
scas
mov
sarb
add
dec
rcll
or
push
and
enter
idivl
xchg
mov
pop
push
out
scas
and
sub
cmpsl
inc
testl
jmp
mov
mov
sbb
and
xchg
incb
sub
pop
or
sub
pop
rcll
cmpsl
je
icebp
inc
mov
addr16
movsl
mov
or
mov
mov
and
xchg
mov
cltd
mov
adc
nop
lret
popa
push
cs
mov
xchg
jecxz
inc
mov
lods
scas
xchg
xlat
adc
mov
sahf
bnd
push
idiv
mov
ret
push
pop
incl
addl
imul
push
fdivl
xchg
idivl
adc
lcall
out
in
test
in
pusha
fiadds
or
lret
jge
aad
lret
out
cmpb
lea
sub
shlb
ret
or
stc
arpl
cmp
mov
std
sub
pop
sbb
jmp
ret
subb
leave
sub
test
ret
arpl
mov
and
inc
lahf
gs
orb
lock
lret
sbb
mov
push
leave
mov
mov
shr
sbb
scas
mov
popf
add
mov
addl
test
cld
push
mov
and
and
int3
stc
adcb
push
jle
xchg
fwait
mov
leave
mov
stos
cmp
negb
inc
loope
xor
lock
jns
fimuls
cmpsw
mov
jbe
enter
xor
test
xor
push
prefetch
or
xor
int
xchg
jbe
hlt
mov
push
aas
bound
xor
pop
cmp
loopne
adc
inc
andb
rclb
fistpl
inc
sub
cmc
mov
cmp
sbb
movsl
sbb
mov
imul
jns
jnp
nop
loopne
pusha
jl
aad
mov
mov
sub
das
dec
mov
outsb
xor
mov
add
cld
test
ret
dec
test
cmp
xchg
inc
sub
ljmp
int
xchg
outsl
sahf
rcrb
shll
mov
mov
lret
push
dec
andb
in
jno
push
adc
fnsave
iret
cmc
mov
mov
cs
add
adc
js
dec
sbb
sbb
subl
pop
and
or
adc
sub
or
or
mov
jmp
aaa
rolb
mov
adc
std
icebp
out
xor
lgs
pop
mov
pop
ja
or
xchg
pusha
mov
xlat
adc
imul
pop
push
sbb
xchg
cltd
cmp
insb
push
les
fistpl
scas
pop
xor
add
cmp
add
pop
jp
jle
fsubr
lret
jle
pop
sbb
sbbl
and
gs
xchg
adc
xchg
mov
xchg
pop
int
imul
imul
dec
or
cwtl
rorl
loopne
mov
lret
jb
inc
hlt
lock
dec
je
ds
leave
dec
xchg
cmp
pushf
scas
enter
xor
mov
fstps
adc
fbstp
shrb
jns
scas
push
inc
pop
test
mov
js
into
mov
in
mov
outsl
push
and
jle
stos
pushf
js
pushf
aaa
or
pop
popa
pop
xor
int
lret
jnp
rorb
dec
ds
and
mov
push
scas
test
mov
xchg
rorl
xor
jno
push
hlt
jecxz
and
inc
dec
push
pop
push
pushf
scas
cmp
sub
daa
adc
push
ror
outsl
cmp
rorl
push
ret
icebp
push
aas
lahf
movsl
std
jmp
jmp
fldl
lret
mov
arpl
int3
pop
in
icebp
adc
in
mov
negb
inc
cmpsb
xor
dec
xchg
fwait
pop
xchg
xchg
mov
pop
popf
xchg
mov
adc
jmp
dec
push
rorl
fwait
pop
lahf
and
pop
pop
out
iret
jecxz
inc
dec
cmp
out
xchg
push
rorl
repnz
imul
into
dec
push
repz
fisubrs
outsl
cmp
movsl
cmpb
push
jne
stc
cmp
inc
or
pop
aaa
inc
sub
jae
aam
xor
in
mov
and
lret
adc
shr
outsb
andl
aaa
iret
lods
out
pushf
lahf
popf
dec
leave
fistpl
jle
pop
imul
arpl
xchg
xor
jbe
pushf
push
xchg
xor
stos
cli
push
pushf
mov
scas
loop
xchg
not
movsl
ret
sub
push
sub
test
dec
shrb
lds
xor
xchg
sbb
sub
jne
aam
push
and
jle
inc
pop
fwait
adc
jne
rorb
xchg
mov
mov
insb
in
cmp
xor
adc
jnp
cmp
imul
or
mov
imulb
and
cmp
jns
cli
mov
or
jo
pop
mov
lock
xchg
cmpsb
int3
aad
lahf
cld
les
push
mov
inc
cmp
shll
test
mov
push
xor
js
push
xor
iret
cmp
push
test
repnz
scas
sbb
cmp
mulb
jmp
sbb
out
push
and
repz
neg
and
popf
lock
jp
lods
addr16
fbstp
loope
ljmp
insl
mov
push
out
lret
lods
jns
std
sbb
jge
push
aas
adc
into
xchg
jnp
inc
pop
adc
or
jmp
jge
fistps
pop
aas
test
sahf
stos
sbb
xchg
daa
inc
push
shlb
dec
mov
jb
mov
outsb
rolb
jecxz
lcall
push
push
sbb
mov
jge
neg
sbb
leave
ficompl
je
or
icebp
gs
rcrl
dec
add
and
enter
out
mov
push
mov
and
mov
mov
sbb
iret
mov
inc
push
insl
fdivrl
sub
mov
push
sbb
test
inc
pop
push
xor
in
test
mov
out
ret
xlat
jae
je
add
inc
cmp
mov
repnz
lea
popf
lret
stos
mov
mov
repz
xchg
fwait
mov
mov
movsb
inc
mov
push
lahf
sahf
mov
xchg
jle
les
jns
fsubp
lcall
je
popa
cmp
mov
jbe
cmp
ss
push
gs
loop
in
js
xor
xchg
sbb
inc
stc
scas
mov
leave
vphaddubq
xchg
subl
xchg
je
inc
jnp
cmp
loope
xor
aas
dec
mov
out
fnstsw
inc
movsb
dec
cmpsl
push
test
and
sub
and
int3
leave
adcb
cltd
fdivrl
xor
jmp
cld
jmp
add
mov
sahf
sbb
lret
test
test
xor
add
push
xchg
adc
inc
pop
inc
adc
das
testb
addr16
pop
mov
sub
fs
push
cmpsl
inc
xor
lfence
xchg
or
xchg
insl
rcrl
adc
jb
or
ja
loope
or
pop
stos
inc
lods
inc
in
xchg
iret
or
xchg
ss
pop
adc
and
in
loope
mov
fisttpl
and
jle
roll
dec
inc
add
xor
cmp
fldl
es
movsb
pop
dec
imul
pusha
push
mov
cltd
mov
and
or
xor
mov
sub
notb
jb
cld
mov
int3
fstpt
lods
jo
mov
lret
xor
out
jl
insb
cld
sbb
orb
fldenv
add
mov
or
jb
call
fwait
mov
mov
push
adc
inc
lods
sub
cs
inc
jle
out
or
xor
push
adc
testl
adc
dec
and
test
pop
mov
xchg
in
or
movlhps
or
addr16
cs
aam
call
roll
sbb
cltd
mov
inc
insb
pop
inc
cs
fyl2x
jecxz
int3
push
rorb
loop
sbb
sub
push
mov
lods
pop
mov
jb
popf
xchg
dec
jb
loope
bound
pop
shrl
and
mov
xchg
add
sbb
mov
mov
jmp
out
inc
das
mov
fisttpll
std
mov
fists
mov
enter
mov
xchg
out
push
daa
cld
jbe
jecxz
ret
scas
sbb
in
stos
adc
xchg
aas
inc
jno
and
idiv
in
movsl
ljmp
cld
fdivrl
xchg
dec
loope
daa
je
add
fisttpll
ret
rcll
mov
inc
add
enter
sub
mov
hlt
or
mov
mov
mov
orl
jle
mov
icebp
sarl
cmp
dec
fisubrs
rcrl
sbb
leave
pop
bound
hlt
jmp
jle
push
stos
mov
xor
sbb
push
pop
outsb
xchg
jmp
or
sub
xorl
daa
mov
dec
fs
or
and
loope
or
mov
pop
mov
cmp
cs
adc
or
and
mov
pop
insl
cmc
adc
mov
insl
divb
fsubs
daa
popf
ret
pop
xor
pop
mov
rcr
fs
cmp
xchg
jae
lea
std
fisubrs
inc
mov
imul
mov
jae
into
mov
jbe
in
cmpsb
dec
pop
pushf
lea
add
cmp
jno
and
adcb
adc
cmpsb
adc
mov
push
in
gs
lret
ss
hlt
cmp
mov
push
js
addr16
adc
mov
lret
data16
and
jle
lret
inc
lock
sbb
mov
mov
push
or
pop
hlt
mov
adc
sub
mov
pop
jmp
jbe
sbb
dec
inc
and
incb
mov
xchg
cmpsl
aaa
xor
xor
xchg
xchg
out
popf
test
fdivrs
add
adcl
xchg
xorl
adc
jns
xchg
xchg
sbb
and
scas
lea
mov
arpl
and
sub
dec
cmpsl
call
add
xchg
pop
lret
stos
repnz
jne
sbb
sbb
or
jg
inc
cli
sbb
gs
push
pavgw
fisubs
iret
add
jle
sub
add
hlt
pushf
call
repz
pop
xchg
in
pop
xlat
fstps
mov
sbb
sub
cs
mov
sub
dec
leave
clc
xchg
or
rclb
xchg
pop
sti
clc
ret
mov
outsl
call
mov
pop
push
mov
lret
ljmp
sbb
inc
and
mov
faddp
sub
shrl
mov
jns
pop
mov
call
and
ljmp
stos
jae
cli
mov
ds
mov
jg
lret
sub
out
inc
xor
lret
movsb
jp
in
lods
or
inc
in
and
scas
cmp
mov
pushf
jne
pop
jmp
pop
mov
jl
mov
xchg
xchg
shll
fdivp
cmp
push
ds
mov
jnp
xor
inc
push
cwtl
in
stos
adc
mov
xor
ljmp
push
pop
dec
test
aas
jne
ja
push
cmpsl
mov
lcall
shl
sbb
push
sti
and
sbb
push
es
lret
cli
dec
aad
test
jo
enter
inc
and
hlt
push
pop
test
xchg
cmp
jns
out
xchg
pop
imul
cld
mov
stc
int3
int3
clc
jne
sub
add
dec
clc
fstpl
sbb
jb
mov
and
imul
popf
jno
cmp
cmp
rcrb
repz
daa
cld
jae
jmp
je
lock
outsl
or
mov
mov
test
dec
push
mov
push
mulb
das
lods
stos
push
adc
mov
pop
in
xor
dec
sahf
int3
mov
cs
test
cmpsl
dec
sbb
aaa
mov
jge
mov
mov
xchg
popa
imul
sbbl
in
pop
fbstp
ss
pop
jmp
lea
addr16
in
fildl
push
fcompp
dec
or
stos
cmc
lahf
xchg
xchg
xor
cld
addr16
inc
call
and
fidivs
jae
dec
cmp
mov
imul
pop
aad
xor
scas
xchg
in
pop
cld
fsubs
fwait
jae
popf
outsl
mov
dec
inc
sbb
fiadds
dec
and
frstor
add
repnz
test
and
or
call
pusha
or
jb
cwtl
stos
out
adc
or
dec
sub
je
mov
xchg
jbe
push
ret
dec
stc
cmc
cltd
push
mov
push
cld
sub
sub
pop
imul
sbb
cmp
or
mov
adc
lea
mov
cli
sbb
mov
sbb
add
mov
adc
jmp
or
inc
jae
dec
push
insb
push
push
dec
adc
mov
rcrb
inc
jnp
cmc
incl
dec
iret
or
mov
rclb
and
pop
ljmp
push
xchg
shlb
pop
adc
mov
imul
arpl
aas
out
cmpsb
scas
push
out
jecxz
lret
cmpsb
dec
lock
xorb
adc
cmp
sbb
adc
jno
push
xor
dec
movsb
les
dec
fisubl
mov
mov
cmp
and
inc
sub
imul
mov
dec
orl
insl
stc
push
mov
out
mov
movsl
inc
xchg
dec
leave
cs
pop
popf
sub
sbb
xchg
inc
ljmp
xor
repz
sbb
ret
movsl
pop
pop
ret
dec
jns
int3
pop
jb
leave
xlat
rorb
jns
jg
cwtl
mov
in
mov
pop
push
dec
stc
cmpsl
insb
inc
adc
jg
mov
lods
push
inc
adc
test
outsb
push
testl
sbb
mov
insb
dec
add
jmp
idivl
js
inc
jg
xor
xorl
pop
cmpb
mov
dec
std
push
rorb
jae
ljmp
xchg
dec
jmp
jmp
pop
popa
pop
dec
inc
std
ret
sbb
and
in
xchg
dec
stc
xchg
nop
rcr
inc
mov
mov
pop
mov
fucomip
mov
mov
das
dec
roll
xchg
stos
inc
jl
sbb
fnstenv
cmp
nop
out
test
mov
adc
adc
out
cmp
in
loopne
mov
scas
xchg
xchg
dec
into
mov
xchg
jp
cli
push
mov
dec
shll
out
xchg
sbb
icebp
in
jb
movsl
and
popf
loop
sub
test
add
xchg
inc
leave
cld
test
sbbb
faddl
dec
add
or
arpl
lea
aaa
dec
xchg
push
inc
sub
daa
iret
mov
or
xor
pop
pop
dec
cli
xor
fcoml
xchg
fstl
jl
adc
ja
sti
mov
insl
mov
arpl
pop
call
cmp
fs
loopne
repz
jae
pop
push
out
push
mov
xchg
xchg
ds
xor
jmp
inc
mov
xchg
xchg
push
sti
cmp
test
adc
inc
lea
cwtl
popa
xor
pop
or
leave
repz
jb
dec
incb
jno
imul
nop
push
mov
addr16
lcall
cmp
xor
popf
fnsave
xchg
out
jmp
sub
cld
fsubs
fcoms
push
dec
jb
cmpsl
pop
pop
fdivr
sbb
inc
lahf
push
fistl
insl
dec
stc
rcrl
pop
push
inc
pushf
or
or
push
mov
test
dec
cmp
divb
push
pop
outsb
test
shrl
cmovno
loopne
dec
ret
pop
clc
xchg
jge
and
xor
adc
mov
mov
xlat
mov
push
lcall
fistpl
cld
mov
mov
out
cmp
mov
xchg
adc
or
cwtl
hlt
aas
push
aam
in
negb
inc
stos
sbb
pusha
adc
xchg
jle
mov
jp
es
test
dec
push
in
xor
and
push
loopne
lods
sub
adc
dec
and
lret
shlb
int
push
lret
mov
fdivrl
dec
aas
aad
push
xorb
popa
aam
jmp
xchg
repz
and
imul
addl
loop
xor
push
int
ljmp
ljmp
or
pop
cmp
loope
push
mov
scas
mov
and
lds
push
bsf
cli
fsts
xchg
mov
xchg
or
pop
aaa
sub
lock
mov
dec
movsl
ljmp
in
adc
in
xchg
or
jb
and
or
mov
jo
call
orl
push
outsb
inc
or
rcll
outsb
out
cmp
lds
stos
mov
cmpsl
ja
loop
nop
xor
push
mov
adc
loopne
adc
pop
loope
pushf
push
cmpsl
xor
jecxz
arpl
sbb
pusha
push
xchg
fwait
imull
dec
mov
push
cltd
cmp
dec
mov
dec
inc
mov
fsqrt
fistl
xchg
je
stos
cmc
jne
pusha
hlt
cli
movsb
sub
pop
outsb
mov
dec
roll
jle
and
cli
fldcw
jge
xor
inc
fdivrp
popa
ror
dec
shlb
fidivs
pop
jne
pop
popf
xor
out
ds
repz
out
mov
cmp
push
sti
xor
addb
bound
push
jle
push
push
dec
out
and
push
adc
scas
jp
lods
xchg
jno
inc
pop
in
xchg
xor
mov
daa
arpl
xchg
in
shl
xchg
stc
neg
test
mov
push
push
push
cmp
int3
fdivrp
cmp
int3
mov
add
inc
scas
lret
stos
cltd
fcmovnu
adc
dec
test
dec
pop
mov
sub
mov
mov
xlat
mov
imul
pop
cld
icebp
inc
add
adc
adc
mov
scas
out
mov
es
dec
mov
adc
ret
adc
leave
fadd
loope
push
arpl
mov
pop
push
inc
mov
dec
dec
adc
insb
mov
ss
sti
mov
or
mov
mov
shl
lahf
clc
or
mov
cmc
mov
cmp
pop
mov
stc
push
jmp
adc
sbb
jbe
dec
sub
pop
sub
add
mov
mov
xchg
nop
stos
aaa
cmpsl
or
pop
or
shll
mul
cwtl
dec
loop
bound
gs
or
in
aam
dec
mov
sbb
leave
cmp
test
xchg
add
mov
int3
sbb
and
loopne
push
not
popf
pop
jmp
fs
shrb
push
vaddss
enter
scas
mov
and
iret
push
xchg
jns
adc
das
cmpsb
rolb
xor
in
ja
add
add
fists
out
mov
lds
dec
js
cmp
pop
jge
pop
or
test
aad
dec
xchg
insb
cs
lret
mov
sbb
inc
inc
in
lock
mov
les
scas
dec
adc
xchg
or
je
outsb
test
rcl
push
sti
in
popf
push
jno
add
add
cld
lods
mov
push
repnz
arpl
xchg
hlt
push
inc
out
mov
push
lret
test
pop
mov
andb
adc
cmp
sbb
dec
shlb
adc
jmp
adc
jl
inc
dec
xchg
dec
inc
add
pop
loope
aam
cld
push
jbe
pushf
jle
int
dec
jmp
mov
inc
xchg
pop
inc
loopne
popa
mov
outsl
xchg
xchg
ja
stc
into
pop
jp
cld
mov
cwtl
or
mov
mov
stos
cs
out
insl
sbb
pop
mov
push
inc
clc
pop
test
int3
ss
ljmp
push
shll
dec
pop
dec
adc
out
fldcw
aas
and
das
cli
je
or
jge
mov
mov
add
clc
adc
add
stos
idivl
pop
in
pop
and
scas
pop
mov
sub
xchg
mov
mov
fistpll
popf
add
push
loopne
dec
inc
mov
sub
or
adc
adc
out
je
std
sub
loop
adc
adcl
cltd
or
shr
gs
movsl
add
dec
add
lods
inc
icebp
mov
jb
movsb
inc
push
aam
aad
icebp
mov
xor
and
int3
pop
sub
imul
jecxz
dec
ja
test
in
stos
loopne
inc
ljmp
stc
cmp
jne
pop
shr
or
mov
mov
jg
pop
xor
and
adc
inc
jp
dec
cmpsl
outsb
mov
lret
lahf
cmp
sarl
popa
pop
lcall
nop
cmc
push
cmp
repz
cmp
mov
arpl
in
jge
lods
test
mov
xor
in
mov
repnz
add
add
sti
ss
aam
adcb
mov
dec
jmp
flds
inc
icebp
sbb
cltd
cmp
enter
stc
push
stos
int3
in
test
loop
push
mov
sahf
int3
jge
arpl
mov
dec
pop
scas
int
and
add
jo
mov
cwtl
push
cmpl
scas
mov
clc
mov
lret
cmp
push
loop
lahf
jmp
testl
add
movsb
sub
lret
or
dec
mov
lock
div
dec
cmpsb
cld
xchg
cmpsb
sbb
stc
movsb
daa
fadds
push
jbe
insb
cli
lahf
fcomps
and
or
add
fadds
mov
mov
mov
push
hlt
push
pop
sbb
scas
cli
xor
add
out
js
sti
je
gs
lea
cmp
scas
mov
mov
sbb
jge
int3
mov
hlt
stc
mov
adc
xchg
std
push
mov
dec
xchg
pop
sbbl
adcl
jne
inc
push
mov
lret
dec
xchg
add
mov
adc
scas
inc
scas
fs
and
lcall
dec
push
ja
leave
sbb
pusha
stos
inc
int3
gs
sarl
xchg
adc
gs
cmp
cmp
lret
pop
inc
fxch
cmpsb
aaa
nop
sahf
xchg
jbe
daa
xchg
std
in
stos
xchg
add
int3
idivl
push
jno
mov
ljmp
sar
pop
xchg
std
pop
popf
cmp
inc
mov
scas
mov
sbb
mov
into
and
mov
aad
das
test
ljmp
and
dec
inc
push
in
sbb
loop
arpl
add
pop
shlb
repz
ljmp
jo
jmp
inc
ret
mov
mov
mov
daa
mov
inc
pop
dec
xor
fcoml
jecxz
mov
or
fcomps
outsl
mov
repz
pop
push
insb
sub
pop
mov
mov
fwait
aas
shr
jmp
out
pop
out
pop
and
dec
lcall
ljmp
xor
adc
sbb
sub
mov
jb
ds
inc
jg
cmpsl
mov
sub
jle
sub
push
add
jge
lock
cmp
lret
hlt
lcall
mov
cmp
mov
call
inc
sub
out
mov
ja
jae
sar
jle
js
sar
in
or
push
xor
mov
scas
pop
xor
add
dec
popa
lock
push
scas
dec
fildl
sbb
roll
jg
in
in
inc
pop
mov
jno
fmull
mov
add
stos
or
out
movsl
mov
fcom
and
push
pushf
pop
clc
gs
push
mov
pop
pushf
push
in
pop
jp
movsb
gs
pop
in
fnsave
subl
pop
inc
push
cwtl
movsl
cli
lret
cmp
les
decl
stos
hlt
jecxz
mov
mov
icebp
divb
add
cmp
adc
iret
xchg
push
xor
fs
mov
pop
fcoml
mov
pop
enter
pop
cmp
mov
xchg
pop
imul
stos
pop
sub
addr16
insb
push
adc
icebp
fadds
cld
adc
inc
in
pusha
je
inc
fidivs
pop
and
add
popf
dec
dec
mov
pusha
cmp
idivl
in
pop
cli
pop
pop
jae
faddl
imul
cmpsb
jns
jae
sti
mov
xchg
push
hlt
orl
add
ret
inc
decl
or
movsl
adcl
dec
lods
adc
jmp
sbb
incb
or
js
mov
or
mov
js
dec
test
xor
es
loope
pop
call
and
pop
orb
out
jmp
pusha
test
and
sub
pushf
rcr
mov
sahf
pop
jnp
adc
rcr
or
mov
inc
sub
into
pop
cmpsb
in
icebp
adc
xlat
shlb
das
addr16
push
inc
xchg
fistps
inc
push
mov
xlat
repz
xchg
loop
fs
dec
jns
xchg
adc
xor
aaa
loop
sbb
movsl
insl
inc
inc
inc
out
testb
pop
jl
mov
xchg
loopne
cld
mov
pop
adc
cs
int
pop
add
movsl
push
enter
outsl
insl
mov
in
cmp
xchg
add
jl
loop
push
mov
mov
cli
dec
repz
xchg
dec
movl
cmp
std
out
pop
pushf
pushf
push
inc
mov
enter
pop
imul
push
sahf
mov
mov
es
rcrb
mov
add
xchg
mov
outsb
lea
sar
adc
icebp
inc
pop
test
outsl
call
pusha
lock
sbb
push
ret
das
bound
xor
adc
and
mov
mov
push
pop
jge
repz
mov
jge
jns
sbb
adc
clc
add
jge
jmp
xor
add
stc
rcrb
mov
dec
cmpsb
aas
cmp
in
test
fs
mov
loope
jne
push
rolb
mov
xchg
popf
xchg
mov
or
lock
dec
push
aam
jb
jbe
cli
xchg
pop
mov
jo
push
js
jb
jge
pop
pop
pop
and
sbb
add
mov
data16
xchg
fdivrl
mull
movsl
sbbl
clc
sbb
cmc
add
sahf
jno
les
nop
mov
test
jns
pushl
mov
cmp
ret
in
mov
shrb
out
leave
xchg
lret
push
test
sahf
cmp
pop
testb
insb
cmp
mov
lock
dec
mov
cmpsl
inc
add
mov
push
push
push
cmp
stc
popf
pop
pushf
int
popf
out
in
mov
push
mov
loop
mov
jbe
int
xchg
sub
fimuls
loope
pause
mov
gs
aad
scas
jb
cmpsl
mov
fcomip
lds
movsl
out
dec
pop
jg
mov
imul
or
push
hlt
iret
jmp
mov
jae
and
pop
out
sub
clc
xor
stc
icebp
ds
in
xchg
out
jo
inc
jle
sub
mov
cmp
lods
sub
or
jbe
jb
int
je
enter
add
mulb
stc
std
orb
xchg
add
shlb
cs
and
dec
or
sbb
daa
or
iret
mov
das
sbb
mov
out
push
movsb
mov
outsb
testl
xor
or
lret
aam
jge
jmp
jne
or
push
push
jge
jmp
std
fmull
loope
sbb
cld
lret
jge
inc
sbb
gs
les
add
aas
jp
in
dec
sub
stos
xor
pop
in
mov
jmp
mov
loop
and
jno
mov
xchg
mov
aaa
sbb
ds
pop
insl
nop
or
xor
push
dec
inc
adc
inc
jns
lahf
pop
sub
pushf
js
icebp
sub
mov
js
mov
cmp
lods
jns
or
inc
push
insb
dec
jecxz
cli
repnz
push
xchg
mov
sbb
mov
cli
pop
jns
mov
idiv
add
mov
sub
jmp
sub
mov
add
icebp
data16
js
inc
pop
mov
mov
jno
jge
jmp
dec
mov
xchg
dec
add
inc
jno
dec
stc
addl
xor
and
xor
popf
rcr
ds
into
xchg
sbb
mov
mov
sub
out
sbb
das
jnp
in
stos
xor
test
xchg
gs
clc
dec
push
sbb
jmp
xor
cmp
shl
xor
mov
dec
pushf
xchg
aam
test
mov
lods
sbb
jno
jp
stc
fidivs
js
pop
cli
shrl
push
jp
dec
mov
xchg
cmp
cmp
pop
aas
xchg
loop
test
lcall
sbb
aad
lcall
add
adc
push
das
nop
aas
mov
ss
cmpsl
xchg
pop
xchg
test
std
adc
push
mov
push
lods
subb
test
inc
idivl
pop
lods
in
inc
add
push
xchg
or
ds
or
loopne
mov
dec
fldcw
xor
cmp
int
sub
lds
jmp
push
dec
lds
dec
test
push
push
outsl
pop
lock
pop
nop
jle
adc
mov
inc
lret
xchg
pushf
test
ret
jp
mov
movsl
iret
lret
jns
lret
int3
test
test
lcall
mov
push
or
sub
hlt
jns
mov
jp
xchg
sti
les
leave
mov
mov
push
mov
push
or
clc
mov
lahf
mov
ret
add
jae
cmp
stc
cmp
pushf
mov
add
add
roll
xchg
push
mull
push
icebp
loop
cmp
sub
popa
xchg
sub
push
add
cli
and
cmp
push
xor
mov
sub
jl
adc
jae
ud1
ret
add
cmp
aas
scas
mov
and
ds
push
scas
inc
icebp
inc
das
pop
scas
xorl
and
fwait
imul
es
pop
push
outsb
sub
lret
outsb
sahf
dec
sub
pusha
sbbl
cmp
cmp
ret
lods
jmp
aad
xor
mov
cld
arpl
cli
mov
inc
pop
or
pop
jae
divb
arpl
ss
fdivl
pop
std
mov
pop
sub
adc
fsubrs
xchg
fidivrs
fsubl
ror
pop
mov
das
mov
mov
adc
jge
movsl
call
inc
push
xchg
xor
repz
orb
daa
sub
out
aaa
cmpb
xor
xchg
xchg
popf
or
jecxz
cs
in
inc
es
mov
mov
nop
xchg
add
push
test
loopne
push
cmovne
out
inc
lea
bound
sbb
movsl
popa
in
adc
sbb
add
and
adcl
pop
xor
test
pop
push
add
pop
jecxz
push
scas
jo
insb
mov
add
dec
xchg
out
movl
mov
jge
testb
xor
into
aaa
xor
stos
cmp
cmp
mov
mov
cs
pop
jl
arpl
or
mov
sbb
mov
dec
imul
add
in
fsubl
pop
push
js
sti
dec
rcl
je
fstps
test
and
aad
inc
pop
mov
jno
jle
test
ja
ljmp
dec
xchg
daa
xchg
iret
cmpb
jb
xchg
sbb
ljmp
dec
xor
stos
xchg
sub
movsl
xchg
sbb
iret
cld
sbb
push
jmp
cld
add
and
pop
jb
pop
mov
rcll
and
mov
cmpsl
mov
lods
or
and
or
das
inc
adc
push
or
and
enter
mov
rclb
pop
adc
in
xor
jl
add
lock
mov
or
inc
push
inc
jmp
lret
pusha
in
es
add
insb
stc
fstl
sbb
test
lret
mov
test
jle
or
cmp
mov
sbb
std
and
int3
jl,pt
aaa
xchg
jb
pop
mov
xor
adc
push
inc
fwait
in
shll
and
mov
imul
sbb
mov
sub
or
sahf
dec
xchg
ret
mov
pop
cmp
sbb
mov
cmp
mov
or
mov
mov
pusha
sbb
cmp
sub
jmp
les
movsb
data16
icebp
sbb
mov
sbb
lods
adc
stos
sbbl
mov
jmp
jne
jbe
inc
add
in
out
fiadds
pop
mov
lods
sbb
mov
test
xchg
icebp
xor
inc
outsb
shlb
scas
cmpsb
push
mov
push
mov
jl
or
dec
mov
jns
sahf
jnp
xchg
cwtl
jp
mov
cwtl
sbb
adc
out
mov
add
add
sub
jmp
sub
mov
inc
add
dec
lcall
outsb
and
mov
int
dec
fcompl
cli
popf
xorb
sbb
lcall
out
fldenv
xor
mov
jecxz
mov
addl
xchg
stc
fidivl
dec
and
mov
shlb
icebp
cmp
xchg
mov
icebp
mov
stos
stos
push
inc
sbb
and
fisubrl
cmpsl
or
scas
mov
hlt
sub
je
scas
cltd
outsb
mov
xchg
hlt
pop
and
push
sbb
lret
popa
and
ret
sub
and
xchg
out
adc
int3
stos
bound
xchg
cmpsl
mov
mov
lea
push
ljmp
daa
loopne
mov
movsl
jecxz
clc
loope
ja
mov
cli
testb
xchg
loopne
pop
pop
je
aam
mov
ret
sahf
mov
sub
loop
out
jmp
sbb
aam
lcall
xchg
sub
cmp
push
iret
pop
xor
into
shll
cmp
ds
adc
outsb
fisubrl
jbe
lret
andl
or
inc
xchg
dec
dec
pop
in
xchg
leave
fimuls
int
xlat
push
xor
int3
jge
add
xchg
xchg
push
ret
adc
cmp
sub
add
leave
test
subps
std
inc
out
fisttpll
push
push
in
shrb
cmp
xchg
test
enter
xor
pusha
aad
mov
sub
ss
pusha
sub
cs
lds
cmp
cmpl
movb
lock
adc
lds
or
call
cmc
cmp
inc
imul
in
sbbl
mov
out
std
sbb
or
pop
loope
adc
xchg
push
mov
loopne
or
jp
push
es
jmp
mov
cmp
cmpsb
inc
sub
cmovg
fisubrs
xlat
xchg
je
or
scas
cmp
out
or
jecxz
cmp
pop
xchg
push
mov
lods
sbb
xchg
jne
pop
pop
lds
mov
jl
mov
mov
test
push
pop
sbb
jb
mov
seta
adc
es
dec
data16
xor
cmp
lcall
xchg
hlt
and
dec
add
pop
and
mov
dec
sbb
pop
mov
repnz
les
rolb
out
add
pop
sub
popa
hlt
nop
stc
pop
scas
fimuls
xchg
mov
push
jmp
and
aad
inc
dec
out
shlb
idiv
jne
imul
mov
xchg
test
or
inc
call
loopne
lock
call
shlb
cld
popa
jmp
jl
or
into
jl
clc
jno
cmp
sbb
sbb
sbb
subl
pop
hlt
lcall
jb
stc
jbe
movsb
je
test
mov
mov
push
in
lcall
sbb
xor
scas
roll
cmp
cmpsl
mov
imul
mov
movd
or
or
cs
xchg
add
lods
jns
xor
pushf
shl
popa
mov
pop
cmp
scas
mov
shll
and
in
adc
ffree
cmp
addb
mov
lahf
aad
xlat
and
outsl
cmp
mov
nop
popa
movsl
repz
punpckldq
insb
popf
jmp
and
es
loop
add
mov
std
repz
sbb
pop
aad
ret
notl
in
dec
daa
jb
xor
lahf
pop
mov
dec
test
test
inc
xchg
pusha
sbb
stos
sbb
fldcw
jmp
add
sbb
push
pop
jmp
out
push
or
pop
sub
jmp
cld
fisttps
popa
or
shlb
sub
xor
mov
and
scas
cmp
mov
push
or
in
mov
orb
gs
decb
xchg
inc
mov
es
or
mov
test
xchg
pop
pop
dec
ret
cmp
pushf
sub
xor
pop
pop
push
fimull
xor
sub
push
push
mov
cs
or
out
stos
push
call
mov
push
jne
in
push
fsub
inc
jecxz
jl
ss
add
pop
test
sub
sub
add
fwait
repnz
mov
hlt
push
pop
popf
scas
bound
mov
mov
xor
and
sbb
icebp
dec
cmpsb
cmp
cltd
ret
imulb
push
push
ja
xor
mov
fldt
mov
inc
inc
push
and
cmp
cmpb
adcb
addr16
or
push
lea
push
das
into
lods
lea
or
sbb
fs
subl
iret
addr16
cmp
movsb
xchg
stos
xor
scas
outsb
xchg
jae
test
sbb
lods
das
test
rorb
mov
mov
stc
shrb
shl
or
test
scas
out
adc
sub
pop
ja
repz
mov
push
fldcw
repnz
xchg
add
xchg
mov
inc
mov
outsl
dec
dec
bound
lods
push
cmc
and
loopne
mov
dec
mov
lret
movsl
test
cmp
sub
stos
xchg
ret
dec
jo
addb
pop
and
movsb
rolb
gs
sbb
pop
mov
mov
fists
adc
in
arpl
mov
xor
mov
adc
mov
cmp
mov
sub
aam
aas
fsubrp
in
dec
lods
stos
jbe
in
inc
mov
mov
gs
adc
out
push
test
push
xchg
inc
adc
clc
push
adc
mov
fstps
je
cmpsb
je
sbb
fcom
scas
mov
push
cmpb
clc
jne
mov
add
xchg
mov
push
cmp
rcrl
out
xchg
sbb
mov
repnz
scas
pop
push
stos
push
or
sbb
arpl
adc
icebp
jp
push
scas
pop
push
imul
mov
dec
in
leave
popf
adc
ja
xor
inc
mov
sbb
sbb
clc
jno
sti
lret
cmp
mov
jo
xchg
xchg
jnp
test
addb
aas
mov
mov
mov
cmp
add
xchg
mov
fidivl
push
or
loop
mov
je
hlt
add
xchg
push
vmread
sbb
xchg
clc
add
adc
push
mov
outsl
cmpb
xor
lahf
jl
out
jmp
mov
mov
lea
jg
cmc
lods
sub
iret
jmp
adc
mov
fldenv
inc
cld
and
addb
mov
xor
pop
mov
sbb
pusha
jns
pop
mov
mov
sti
and
cmpsb
mov
insl
movswl
adc
div
fdivr
adc
out
sub
scas
in
icebp
pop
or
ret
in
cwtl
sub
das
mov
cmp
pop
loopne
call
lahf
add
jge
mov
adcl
push
xor
cwtl
push
call
jno
ret
sbb
jbe
dec
test
fbld
xor
xchg
popa
push
mov
mov
push
ret
push
lds
jl
mov
add
fwait
cmpsl
pop
jae
and
mov
scas
cmp
xchg
xor
xor
jns
call
sahf
aas
adc
cs
mov
bound
xchg
xor
sti
ret
mov
xchg
out
inc
and
stos
cld
cmp
inc
sti
mov
je
push
out
ret
cltd
xor
aad
jns
popf
call
inc
outsb
jle
mov
lret
sub
loope
mov
scas
aas
push
cmp
dec
jmp
in
jecxz
je
xchg
or
data16
add
ret
lcall
inc
fstps
cmpsl
pop
pop
aas
lret
mov
into
dec
inc
enter
mov
sbb
pop
cmpsl
cmp
aam
mov
jne
dec
inc
xchg
dec
inc
mov
or
add
dec
jnp
in
fists
cmp
aam
loope
fucom
imul
pushl
fxch
push
jp
add
mov
stos
pop
dec
pop
and
dec
inc
out
jne
xchg
into
int3
dec
xlat
jg
aad
test
loopne
lods
lahf
xchg
fisubrl
mov
push
xlat
jg
and
data16
sub
cs
shrl
test
adc
roll
push
xlat
shld
and
popa
xchg
pop
sbbb
lcall
into
and
pop
in
mov
loop
lcall
out
mov
lea
les
jno
in
or
and
ret
in
shlb
pop
lea
addb
cwtl
adc
fbld
jge
rorb
cli
out
mov
xchg
int
nop
call
add
in
cwtl
fldenv
xchg
dec
inc
fidivl
pop
push
cli
mov
addl
sti
inc
jle
adc
loope
mov
jbe
inc
sarl
jbe
imul
xchg
xor
outsb
pop
mov
js
push
cmpsl
sbb
out
jecxz
outsb
nop
pcmpgtb
call
inc
mov
negl
or
jne
mov
movsl
push
sub
inc
shrb
adc
imul
pop
sub
adc
insl
ret
icebp
shll
mov
inc
jg
cli
push
outsl
popf
loop
int
imul
xchg
cmp
pushf
push
jb
mov
and
xor
call
lret
cmp
xchg
loope
add
test
in
in
jle
or
aad
mov
bound
cwtl
addr16
dec
adc
shlb
jae
adc
add
out
sarl
mov
or
cli
or
jge
cs
leave
add
jno
pushl
or
add
inc
sbb
notb
sbb
jl
idivb
hlt
fistpll
cmc
lahf
push
loopne
adc
adc
nop
enter
ret
and
cmp
mov
push
cmp
mov
and
aad
je
cltd
int3
scas
movsl
imul
mov
and
sti
into
xchg
loopne
add
leave
xor
cmc
loopne
imull
cmp
xchg
sub
outsl
icebp
stc
test
dec
subl
sub
xlat
mov
dec
test
adc
inc
adc
jg
clc
mov
sub
addr16
popf
xchg
pop
push
lret
adc
test
mov
ds
cmp
adcb
std
jl
incb
test
outsl
pop
cltd
pop
or
ja
xor
cltd
int
pop
mov
subb
cmp
push
lock
int3
mov
pop
cmp
imul
sbb
pop
jecxz
stos
mov
add
mov
push
movsb
mov
inc
xchg
or
mul
or
xor
popa
cmc
cmp
and
mov
in
scas
inc
and
adc
out
pop
lret
pop
xchg
icebp
or
shlb
leave
mov
xchg
mov
pop
sbb
xchg
js
xchg
inc
sub
jae
and
gs
dec
int3
jnp
cmp
fldt
arpl
bound
add
popa
push
hlt
and
insl
enter
clc
outsb
nop
mov
pop
sub
push
adc
jl
and
out
mov
pop
fiaddl
mov
cli
adc
std
adc
fiadds
and
leave
sbb
pop
lret
out
aam
icebp
mov
insl
mov
mov
out
push
push
ret
and
pushf
stos
in
inc
mov
sbb
push
gs
clc
sub
cli
adc
cmp
pushf
inc
mov
shrl
pop
cmp
mov
fistpl
shl
jns
or
pop
jmp
dec
into
lods
push
fsubrl
and
divl
jle
int3
ret
mov
subb
sub
mov
lea
lret
sbb
idivb
insb
test
xchg
mov
movsb
int3
mov
mov
ret
or
and
or
and
shlb
dec
test
repnz
xchg
jnp
mov
icebp
sbb
aad
mov
mov
loopne
lock
inc
imul
mov
push
mov
jne
xchg
jbe
xchg
or
mov
jbe
scas
cwtl
lret
fistps
aam
cmp
js
ja
sti
jle
movb
ss
ljmp
adc
mov
add
loopne
rol
rep
mov
adc
pop
sahf
mov
add
inc
mov
mul
jecxz
cli
lea
inc
lds
das
cmc
cmp
or
out
add
mov
repz
mov
sbb
outsl
add
mov
data16
jne
mov
jne
push
jle
mov
test
int3
xor
xchg
ja
dec
push
fs
or
test
xor
dec
dec
int3
xchg
or
out
dec
inc
sub
dec
sti
adcb
lea
jns
pop
mov
and
in
inc
jge
jbe
cmp
sti
outsl
sub
dec
lahf
pop
nop
mov
icebp
lea
rep
adc
xchg
mov
sbb
cmp
shr
xchg
mov
and
or
data16
sbb
sub
adc
aad
add
lret
bound
hlt
test
mov
std
pop
push
in
in
aam
xorl
lods
insl
dec
flds
or
ret
das
mov
pop
mov
stos
out
push
test
pop
push
icebp
ret
fstps
sbb
mov
dec
xor
pushf
hlt
pop
notb
or
jo
dec
push
fwait
inc
arpl
enter
push
stos
ds
push
add
jecxz
sub
sub
xor
in
push
aaa
int
push
push
xor
mov
pop
scas
xchg
xchg
adc
lea
out
sahf
pop
inc
outsl
mov
jp
push
and
arpl
lcall
and
data16
jbe
sbb
hlt
mov
sbb
or
dec
push
lahf
xchg
and
dec
gs
jns
std
sbb
clc
cmpb
xchg
in
mov
pop
pop
lcall
dec
neg
ss
xchg
xor
adc
testb
push
xor
punpcklbw
ret
cmp
leave
jge
add
cmpsb
cmp
clc
mov
leave
mov
mov
xor
ret
ret
test
mov
jae
pushf
sbb
pop
pop
push
pop
stc
mov
or
add
sbb
nop
dec
iret
fmuls
adc
data16
iret
fstpl
mov
mov
out
sahf
dec
mov
out
mov
imul
pushl
push
pop
or
xor
repz
cmc
jo
xchg
pusha
sbb
mov
mov
and
mov
rcr
les
sub
lret
in
test
mov
les
dec
lock
add
or
or
out
fstl
pop
pop
add
es
xchg
xchg
lods
lods
cmp
adc
outsb
push
clc
aas
outsl
cmpsl
adcb
and
pop
mov
jb
cwtl
or
pop
pushf
xchg
mov
mov
cmp
sbb
loopne
xor
leave
insl
jle
push
loope
insb
mov
add
addr16
xchg
xlat
dec
cmp
popf
sar
bound
in
add
icebp
sub
sbb
pop
mov
aaa
xor
lds
push
ljmp
push
cmp
frstor
divb
sub
pop
mov
jnp
inc
jecxz
jp
jno
or
repnz
or
xchg
imul
movsl
cs
lods
in
jl
imul
sub
out
cmpsb
mov
mov
sti
xor
xorl
call
dec
inc
xchg
sahf
jge
mov
xchg
add
shrb
movsl
sub
test
mov
in
jl
enter
push
jno
adc
push
js
int
adc
sbb
and
cmp
inc
imul
and
and
lret
dec
mov
push
pusha
movsl
cmp
into
enter
push
lods
xor
in
or
inc
int
int
fnstenv
jle
lret
and
in
jmp
xchg
rorl
mov
push
icebp
aaa
inc
imul
mov
icebp
negb
lret
mov
ljmp
outsb
jo
sbbl
sub
add
pop
cmp
mov
leave
imul
sahf
inc
mov
into
inc
std
lods
js
test
inc
mov
inc
clc
dec
mov
cmp
fidivrl
sbb
addb
out
insb
in
mov
xchg
or
sub
dec
cmp
scas
xlat
outsl
das
sub
xor
pop
sahf
jb
jo
xor
fmul
mov
adc
mov
filds
cld
mov
xor
or
cmpb
xor
mov
pop
lret
lods
ror
pusha
gs
movsl
inc
imul
int3
icebp
dec
jmp
and
jg
jmp
mov
pop
sahf
add
adc
or
cltd
or
imul
dec
lock
and
add
ja
repz
sub
lahf
push
xchg
arpl
loopne
int
call
push
ret
adc
aaa
xor
aaa
leave
mov
adc
out
fidivl
mov
addb
mov
rcrb
jne
cmp
adc
jle
mov
shrb
pop
mov
loop
and
dec
jnp
adc
push
jp
stos
adc
adc
scas
cmpsb
nop
and
adc
and
sbb
jae
or
out
push
leave
mov
aad
in
cld
cmpsb
inc
cmpsb
cli
mov
mov
addr16
scas
add
mov
test
adc
repnz
fidivs
ret
aad
sbb
dec
dec
arpl
into
outsl
psraw
xchg
adc
push
push
xor
aad
pop
pop
sub
je
scas
in
mov
cmp
inc
stc
les
insl
sbb
movsl
and
pusha
mov
pop
in
xchg
inc
push
sub
iret
adc
ret
cmc
dec
imulb
icebp
cmp
xchg
call
inc
jmp
iret
incl
sti
mov
test
enter
xor
jno
fwait
pop
pusha
sbb
xchg
sub
cmp
inc
xchg
sub
mov
jecxz
sub
rcll
js
imul
pop
loop
dec
mov
xchg
dec
adc
roll
mov
fisttpll
jle
dec
dec
inc
jo
push
in
pop
push
add
cmp
movsb
jp
adc
and
movsl
mov
decb
mov
fdivrl
lea
adc
aas
add
outsl
jns
xor
repnz
push
push
repz
icebp
lock
mov
pushf
inc
jae
push
mov
xor
icebp
sahf
xchg
xor
ljmp
jns
ljmp
mov
andl
adc
sub
nop
or
cmp
mov
jno
ds
or
subl
fwait
aad
jbe
pop
stc
mov
sbb
icebp
dec
lahf
jmp
roll
shlb
pop
aam
pusha
adc
jmp
push
scas
dec
xor
sub
decb
cmpsb
test
data16
cltd
subb
sub
addr16
dec
pop
loopne
fcmovnb
push
data16
jle
clc
popf
or
xor
push
mov
movsb
jle
lea
test
sub
pcmpgtd
aas
xorb
adc
add
loopne
fnstsw
push
ljmp
inc
mov
dec
pop
jns
inc
add
shlb
std
fisttps
mov
mov
xchg
xor
cld
sarl
in
js
cli
mov
cmp
test
cmpsl
or
mov
sbb
fwait
pop
daa
pop
adc
js
xor
mov
push
stos
sbbl
sbb
mov
jno
orl
mov
adc
shr
lea
push
mov
and
or
inc
xchg
hlt
push
pop
or
sbb
lea
imulb
push
lahf
imul
push
pushf
or
into
jae
xchg
or
nop
push
arpl
out
ja
cmp
adc
pop
cmpsl
pop
mov
int
loopne
cmp
roll
jae
cmp
cld
cmp
jg
or
cmp
rcrb
or
push
inc
fwait
mov
xchg
or
outsl
in
mov
xchg
adc
mov
mov
movb
in
inc
mov
mov
and
daa
mov
push
pop
inc
lcall
loopne
jge
add
cmc
xchg
loopne
leave
cld
push
cmp
cmpsb
cmp
jno
mov
rcrl
xor
insb
jge
roll
std
testb
in
pop
and
mov
jecxz
mov
add
shll
fadds
mov
and
dec
push
push
jge
push
xor
pop
out
dec
popf
scas
cmpl
sbb
lods
sub
mov
sub
mov
inc
stos
mov
sti
dec
fldt
mov
aam
loope
fcoml
scas
pop
in
call
mov
test
das
pusha
int
setge
mov
pop
mov
push
cmp
pop
add
xor
loope
test
xor
pop
fcomip
repz
ja
pop
ljmp
fisttpl
jb
jbe
mov
ror
hlt
adc
mov
cmp
mov
outsl
ret
roll
cmpsl
mov
xchg
pop
push
out
cwtl
sub
or
jge
cmc
stos
jnp
mov
decl
out
dec
ss
rol
adc
mov
lret
sub
arpl
add
jae
or
jno
xor
imul
sbb
fwait
test
inc
fs
sub
mov
ljmp
sbbl
and
cmp
adc
divl
lock
fsubs
imul
jl
shr
out
jb
les
dec
in
sahf
hlt
loope
nop
jg
insb
sbbl
mov
or
inc
adc
dec
in
inc
dec
jle
lret
sbb
jbe
int
lahf
dec
addr16
aas
push
mov
sbb
clc
mov
mov
or
out
and
mov
adc
mov
inc
shrl
leave
or
sbb
imul
mov
lock
lret
pop
mov
jnp
pop
sub
cs
pop
fildll
mov
clc
sbb
fstl
and
lcall
sub
xchg
test
pushf
cmp
mov
cmp
dec
or
cmpsb
inc
sub
pop
sbb
or
inc
ret
and
enter
fmull
adc
dec
test
insb
sbb
cmp
xchg
inc
mov
mov
pop
fdiv
adc
mov
push
insl
cli
idivl
jae
push
outsb
xchg
mov
or
jae
add
repz
stc
sub
insl
add
add
jno
test
inc
test
out
test
clc
cs
jae
push
cwtl
fldl
push
fnstenv
mov
negb
rcr
or
dec
in
and
inc
or
loop
or
sub
mov
xchg
ret
or
push
fldt
clc
mov
dec
pop
or
xchg
enter
jb
add
stc
mov
mov
jmp
cmp
dec
ficompl
inc
fstps
out
mov
inc
ds
enter
mov
push
mov
fidivs
call
gs
ret
mov
jno
push
push
fadds
mov
ljmp
add
mov
test
cmp
cmp
xor
mov
je
jnp
mov
cmpsl
shl
lods
inc
icebp
cmp
adc
outsl
xor
fld
in
cmpsb
subl
add
or
test
or
jecxz
xchg
dec
insb
and
ja
jno
cmp
mov
add
pop
xchg
rcr
ret
out
sbb
xchg
sbb
jne
fwait
mov
sbbb
adc
push
xchg
mov
fwait
pushf
xor
push
cmpsb
stos
mov
sub
fstps
pop
cmpsb
jmp
jl
push
jae
arpl
fsubrs
inc
mov
sub
lds
and
pop
xchg
jo
addr16
inc
sub
jno
jns
orl
xchg
pop
fcmovb
sbb
jnp
dec
leave
adc
arpl
adc
fidivs
aaa
out
mov
in
add
jmp
testb
stc
xlat
lock
popf
negl
mov
dec
scas
mov
repz
dec
iret
pushf
cmp
movsb
adc
xor
mov
xchg
daa
aaa
int3
xor
mov
test
lea
andps
fildl
or
call
cpuid
scas
js
addr16
mov
fidivrl
jecxz
nop
push
fiaddl
mov
mov
out
stos
rcll
jmp
jo
push
or
nop
in
aam
mov
pop
jbe
mov
fiaddl
or
les
or
out
or
xor
imul
sarb
lods
inc
push
cs
icebp
lret
js
sbb
pop
sar
ljmp
push
fcos
mov
dec
xchg
mov
adc
jle
xor
jecxz
xor
mov
add
mov
and
cmpsb
scas
push
xchg
fcoml
enter
faddl
cltd
fwait
add
xchg
loope
js
sub
jns
gs
push
int
sub
leave
stos
loopne
int
mov
cmpsb
xor
lret
je
pop
and
fadds
dec
jge
in
cmp
mov
jnp
imul
pop
inc
xlat
xor
loopne
push
and
sub
aam
in
or
sub
pusha
cmp
sbb
and
aas
xor
push
and
sbb
lods
dec
xchg
push
sbb
xchg
stc
mov
shlb
fistl
mov
pop
loop
out
in
mov
sahf
fildll
xchg
out
mov
mov
dec
mov
inc
and
inc
push
pop
inc
fdivrl
mov
fistl
arpl
xor
in
inc
push
mov
or
sbb
movsb
fiaddl
in
mov
faddp
xchg
icebp
insl
sub
lea
pxor
sub
pop
cli
popf
scas
hlt
sub
add
pop
mov
add
mov
xor
outsb
fstpt
push
jae
shrl
decb
sub
js
div
scas
es
mov
mov
jb
imulb
or
cmc
adc
sub
mov
jno
cmp
lret
test
iret
stos
mov
orb
clc
mov
mov
dec
xchg
test
addb
mov
pop
mov
dec
push
jmp
imul
or
sub
jg
mov
jg
popf
inc
or
push
xchg
mov
sub
lds
in
bound
inc
iret
push
lock
xor
and
icebp
or
insb
mov
xor
pop
adc
sbb
je
push
shlb
dec
repnz
arpl
dec
nop
or
and
in
insl
divl
es
pop
lcall
mov
movsb
sbb
xchg
cmc
sbb
fadd
adc
sub
add
lods
mov
ficomps
xchg
add
scas
and
icebp
loope
imul
xchg
jae
loope
pusha
jbe
xchg
xor
aad
cmp
loopne
sub
stc
pop
cmp
push
std
cmp
add
imul
or
mov
enter
cmp
inc
dec
lahf
xchg
mov
pusha
cmp
insl
lds
mov
shl
stc
xor
mov
sub
mov
dec
fidivrs
nop
jmp
sbb
sbb
cmp
pop
push
ss
in
mov
int
sub
push
loop
push
mov
inc
sub
lahf
int
ds
stc
fnsave
sbb
sub
xor
pop
add
icebp
int3
testl
mov
or
andb
jbe
or
xor
sub
repz
loop
scas
inc
int3
or
push
and
pop
cmpl
xor
movsl
pop
aad
dec
cmp
mov
shll
dec
pop
xchg
icebp
mov
movsl
fs
or
fcmove
lods
stos
arpl
dec
repz
and
fnstenv
pushf
movsb
mov
ljmp
ror
outsl
mov
cwtl
cwtl
cltd
sub
mov
sbb
push
js
jg
dec
push
pop
adc
and
dec
cmp
in
and
xor
inc
mov
ret
fcompl
movsl
or
sub
lock
mov
or
and
js
and
das
fadd
lods
mov
jae
mov
cltd
js
push
cmp
pop
lock
push
add
mov
ret
and
sbb
data16
xchg
clc
mov
rclb
ljmp
dec
inc
hlt
test
pop
daa
jnp
add
sub
outsl
test
ljmp
scas
lcall
fwait
sar
cmp
cli
inc
cmp
or
push
inc
scas
mov
push
mov
xchg
les
jo
adc
and
imul
or
mov
inc
arpl
add
push
nop
outsb
movsl
xchg
mov
add
hlt
cs
and
sbb
xor
jns
sbb
cmp
lea
add
mov
in
mov
test
pop
negb
lea
xchg
jmp
and
sbb
cmp
lea
fcompl
mov
scas
dec
adc
push
sub
and
pushf
lret
jge
arpl
lcall
jae
lcall
fs
loop
imul
push
cmpl
clc
adc
xchg
push
adc
jge
xor
mov
arpl
std
xlat
cmc
lock
inc
xchg
out
mov
adc
adc
or
stos
fnstenv
nop
enter
icebp
pop
ja
push
out
sub
xor
xchg
roll
cmp
pop
sbb
jb
dec
mov
adc
or
xchg
mov
jns
dec
pop
mov
mov
or
pop
and
aaa
mov
out
lods
je
jno
iret
mov
mov
fs
jl
adc
jecxz
mov
movsb
popa
adc
loope
inc
ror
sti
or
jmp
int3
js
jnp
inc
inc
xor
mov
rol
bound
or
add
dec
pop
repnz
cmp
outsl
jecxz
pushf
clc
stos
cmp
sub
or
lods
fwait
jg
push
mov
jge
cmp
imul
mov
cmp
inc
mov
mov
xor
push
icebp
movsb
pushf
fwait
pop
jbe
aam
inc
jnp
pop
ds
cmp
xor
jle
push
and
fdivr
add
xor
mov
or
fchs
mov
jle
dec
mov
fucomi
jo
lahf
mov
xchg
sbb
insb
cmc
and
pop
push
add
subb
cmpsb
pop
cs
enter
gs
xchg
aas
jmp
adc
push
out
stos
push
sbb
jge
xor
xchg
out
cmp
les
shrb
mov
clc
std
or
lret
lret
pop
imul
call
stos
pop
es
add
pop
out
jecxz
aad
jbe
pop
nop
in
sbb
xchg
popf
and
scas
lfs
iret
xchg
arpl
fcompl
jae
inc
imul
leave
mov
rol
push
inc
aaa
stc
inc
iret
adc
fs
sub
pop
dec
popa
adc
or
test
mov
aam
inc
hlt
sbb
pop
mov
lock
pop
push
shll
enter
in
or
pushf
cmc
out
mov
cmpsl
add
ret
inc
aas
test
jge
std
ret
jne
test
dec
lahf
mov
ds
in
add
sub
iret
dec
sahf
mov
fisttps
outsl
aas
mov
insw
fistl
mov
adc
in
mov
xor
mov
mov
fwait
cmp
mov
test
test
cmp
dec
ror
and
mov
mov
sub
mov
add
loopne
xor
stos
xlat
mov
jo
aam
aas
inc
repnz
inc
mov
mov
and
push
and
movsl
mov
sbb
in
outsb
cs
notb
mov
mov
dec
mov
jmp
jae
add
or
or
mov
jns
mov
sub
iret
stc
dec
xchg
mov
shl
sub
cmc
xchg
sub
dec
rorl
xor
daa
adc
push
adc
dec
mov
push
mov
sbb
stc
inc
lods
xchg
popa
xor
std
mov
andb
mov
jp
data16
jae
es
push
negl
es
sbb
stc
xchg
sahf
dec
out
xchg
sarb
jmp
add
cwtl
imul
pop
push
aas
lock
jns
xchg
lock
cli
mov
insb
push
loop
add
in
mov
in
xchg
insl
sbb
cmp
fwait
in
xchg
inc
inc
fldenv
aad
jg
pop
mov
push
mov
clc
loope
loopne
aad
mov
popf
imul
xchg
mov
adc
sbb
dec
push
ss
loopne
sahf
das
sarb
shrb
or
out
and
jecxz
lret
cmp
jle
and
add
pop
jae
mov
scas
jo
dec
adc
cwtd
push
scas
xor
popl
fldl
fmulp
in
and
ret
xchg
fists
in
js
inc
ds
or
shl
fists
loopne
fstps
xlat
xchg
inc
nop
cmp
adc
jecxz
out
push
mov
lock
jne
mov
cmp
sti
mov
xchg
ljmp
outsb
jns
shlb
mov
leave
je
adc
loop
shrb
jle
icebp
stc
mov
and
stos
icebp
testb
into
test
clc
push
sub
insb
sbb
pop
mov
movsb
push
sub
jne
jmp
jno
add
mov
scas
lea
pop
mov
mov
in
mov
pop
mov
mov
xchg
jp
adc
pop
ss
int
icebp
ljmp
ficompl
in
insl
push
dec
out
sub
test
mov
mov
lcall
pop
mov
pop
inc
xor
pop
ret
pop
stos
repnz
je
push
ljmpw
jge
cmp
sub
sub
jmp
sub
jb
xchg
mov
push
dec
jno
dec
mov
cmc
cmp
push
into
insb
fsubs
icebp
or
andl
adc
in
dec
push
imul
loope
jp
inc
rorb
mov
js
sbb
and
jp
and
sbb
jne
aas
hlt
cmp
and
pop
mov
xchg
fstps
in
pushf
push
ret
int3
mov
xcrypt-ofb
lcall
movsl
push
dec
mov
sahf
call
inc
daa
jnp
movsb
rcrb
jle
inc
push
xor
adc
xor
arpl
add
imul
cmpsl
negb
add
jl
incb
call
pop
dec
xchg
mov
repnz
rclb
mov
mov
es
sub
test
scas
sub
jae
sar
int3
or
stos
mov
scas
loope
pop
adc
xchg
push
iret
pushf
loopne
daa
loop
jle
push
scas
subl
lods
test
shl
divb
mov
mov
scas
lods
pop
ljmp
mov
sub
test
xor
shlb
aad
flds
lock
cmp
mov
cmpsl
lock
imul
aam
dec
pop
xchg
sbb
in
movsl
lock
sahf
aam
cmovno
test
jl
push
inc
mov
push
insb
sub
pop
std
push
ljmp
xchg
sbb
cs
adc
stos
ds
inc
jbe
dec
jne
dec
push
mov
jle
mov
aad
hlt
icebp
das
mov
add
lock
imul
and
rcl
cmp
mov
mov
bnd
jmp
mov
mov
loope
cmp
push
lea
push
cmp
cltd
adc
out
adc
inc
scas
cs
icebp
fwait
lret
aad
adc
popf
inc
cmpb
ljmp
mov
sub
orb
inc
fcompl
stc
push
out
mov
jno
sbb
dec
test
sbb
inc
loop
jo
das
cwtl
push
add
lcall
ss
or
aad
jl
lcall
cmp
add
out
jnp
jle
fadds
mov
jge
mov
or
das
add
xor
pop
or
cmp
into
and
cmpsb
out
inc
jle
jl
jno
dec
sarl
push
insl
cmp
in
or
and
xchg
int
mov
xor
and
in
inc
jmp
ljmp
push
mov
enter
mov
jns
jg
or
mov
dec
xchg
push
les
mov
mov
push
sti
cmp
jl
mov
loopne
push
divl
push
test
ret
mov
dec
xor
mov
xor
cmc
lea
mov
clc
push
je
mov
push
jns
stos
adc
xchg
repnz
mov
into
or
mov
std
rcrl
aad
lret
pop
pop
adc
dec
leave
jge
sar
pop
sbb
call
push
in
adc
mov
inc
fs
pop
xchg
subb
enter
add
push
les
outsb
fnstsw
rcl
sub
cmp
pop
fwait
loopne
cmp
fs
ficompl
les
pop
mov
fdivrs
ss
aaa
jbe
adc
jle
mov
pop
adc
mov
decb
mov
pop
mov
xadd
shll
stos
push
cmc
mov
jbe
dec
fucomip
fidivrl
jbe
lds
les
imul
xor
mov
mov
sub
fnstenv
mov
mov
xchg
imul
dec
mov
sbb
lock
mov
mov
and
dec
sbb
sbb
cmc
push
adc
xchg
pop
aaa
mov
repz
roll
mov
jle
in
sti
mov
lods
lret
push
fildll
fcompl
adc
inc
enter
mov
jp
or
sbb
adc
testb
inc
out
clc
xor
sub
or
in
cmp
cld
dec
nop
arpl
in
popf
mov
add
mov
and
test
jl
jns
cmpl
and
and
popf
ja
movsl
pop
rcll
in
mov
xor
mov
shl
icebp
push
xor
fs
jg
mov
jmp
jge
scas
xchg
jmp
iret
mov
push
jecxz
fisubs
cwtl
add
lds
jmp
loop
and
jecxz
call
push
mov
lds
adc
outsb
roll
add
lods
fcomps
int3
and
mov
fcoml
push
imul
pusha
test
out
sar
out
stos
add
sbb
mov
lahf
fimuls
fistpl
fxch
mov
loopne
lret
xchg
pop
sti
inc
xchg
sbb
or
jge
mov
mov
cmp
inc
icebp
shr
sbb
add
daa
sub
out
pop
shl
or
inc
or
and
mov
lret
fwait
sub
movsb
or
jmp
outsb
test
lds
test
test
leave
jno
xchg
cld
aad
cmp
aas
insb
jmp
pop
fcmovnu
push
das
jmp
pop
adc
insb
add
sti
push
jmp
test
cmp
sbb
lret
insb
inc
sbb
aad
add
shl
repz
lret
ljmp
push
int
lods
inc
dec
push
adc
orl
shlb
add
sbbb
mov
dec
push
aas
leave
pop
mov
cmc
fisttps
jp
mov
js
out
or
call
xlat
negl
sbb
pop
fdivs
sub
mov
mov
dec
push
cmp
ss
xchg
jbe
push
xor
fistpll
scas
mov
sub
push
mov
repnz
arpl
insb
sbb
or
movsl
pop
pop
into
add
jo
xchg
jecxz
dec
mov
jg
jle
adc
or
and
js
dec
mov
outsb
lret
jo
std
ret
movsl
das
pop
xchg
push
mov
adc
mov
stos
pop
sti
mov
xchg
inc
sub
mov
cmp
das
jno
and
loope
pop
iret
inc
pop
pop
dec
xor
sub
dec
inc
or
pop
push
mov
xchg
int
jle
adc
or
xor
faddl
add
sbb
xor
mov
xchg
loopne
cmpsb
fidivrs
idivl
leave
fisubl
in
hlt
xchg
loope
cmp
fdivrl
cmp
dec
xlat
mov
popf
lea
and
pop
mov
fdivl
inc
ret
jp
fadds
xchg
xlat
ror
mov
mov
inc
xlat
lock
sbb
dec
in
push
mov
mov
repz
out
push
add
rol
in
jbe
xor
mov
pop
fsubrp
xchg
push
mov
out
pop
mov
xchg
add
xchg
fwait
das
jmp
xchg
fwait
cmpsl
or
ret
or
push
push
fstpl
jo
mov
mov
sti
lock
mov
arpl
and
mov
or
xlat
jns
sti
mov
jp
inc
test
add
ficomps
inc
jle
push
sbb
and
xor
sbb
add
dec
in
mov
fidivrs
repz
and
xorb
push
cmp
or
mov
sbb
sti
pop
or
xchg
outsb
dec
cmp
mov
imul
or
arpl
sub
xlat
pop
push
mov
mov
or
aad
cli
mov
mov
xchg
dec
pop
cmc
enter
sbb
int3
lds
ljmp
int3
xchg
xor
cmp
add
js
fldenv
mov
cs
les
iret
adcb
sti
mov
fldt
xlat
inc
jns
jg
fs
dec
mov
pusha
pushl
mov
movsl
jno,pt
je
out
in
push
pop
mov
fnstcw
push
push
xchg
mov
shlb
xchg
pop
xor
push
int
maskmovq
testl
inc
adc
cmc
jge
stos
imul
mov
lret
pop
out
data16
mov
lds
mov
cltd
pop
pop
sub
adc
pushf
push
adc
pop
rorb
lods
ret
mov
movsb
xchg
xor
pop
sub
cmp
loop
dec
mov
mov
icebp
mov
mov
daa
repnz
pop
insb
loope
inc
cmp
jne
jns
aad
sbb
mov
lock
dec
sar
jge
daa
call
fs
sbb
jecxz
dec
outsl
div
jmp
gs
xchg
add
pushf
jmp
and
jno
fstps
stos
pop
adc
sbb
test
push
inc
and
sahf
out
jg
std
xchg
rcll
rcll
bound
adc
lea
adc
xchg
sbb
sbbl
lods
push
fnsetpm(287
inc
cld
jbe
ljmp
sub
mov
les
push
sbb
scas
sbb
mov
jbe
dec
xor
popa
mov
push
add
cld
jge
lahf
call
mov
or
xchg
xchg
test
add
loopne
shl
push
mov
repnz
push
pushf
into
in
mov
xor
int
mov
or
neg
out
iret
cwtl
xor
xorb
fldcw
sub
mov
outsl
incb
push
dec
jg
push
pop
jle
aam
push
cmp
outsb
push
mov
test
inc
jns
inc
add
add
sbb
cwtl
mov
scas
pop
int
xlat
in
bound
inc
push
xchg
hlt
pop
ss
dec
cmp
mov
add
and
sahf
out
pop
xlat
lock
jns
ja
or
rcr
inc
aad
xchg
shrb
adc
stos
clc
sub
and
dec
push
int
mov
xorl
mov
pop
lods
jp
mov
rcl
in
cmp
mov
fistl
lods
jbe
std
jns
aad
shl
mov
cltd
inc
insb
mov
pop
jb
and
sub
popf
xchg
mov
repnz
mov
into
inc
jge
std
mov
ret
ds
or
pop
pushf
xchg
roll
jbe
mov
out
out
cmp
jge
aam
or
sahf
sbb
les
push
std
push
mov
push
cli
jne
mov
out
mov
adc
mov
cmp
cli
mov
push
rcr
inc
lahf
sbb
scas
sbb
sub
out
cmp
pop
cs
push
or
jns
fbstp
mov
das
iret
in
loope
sti
or
scas
mov
sub
negl
loope
les
or
ror
stc
dec
inc
push
mov
je
stos
push
mov
mov
pop
ret
dec
rdpmc
insb
cmp
push
xchg
mov
cwtl
and
inc
sub
pop
in
shr
push
mov
xor
cld
mov
mov
mov
push
adc
or
sbb
add
pop
fdivs
and
fs
notb
xchg
pop
mov
adc
into
lea
incb
xchg
fs
lcall
pop
mov
jne
test
mov
in
btr
lret
aaa
lret
inc
bound
add
iret
add
cmp
ljmp
jl
push
pop
pusha
dec
push
xchg
adc
mov
lock
push
rolb
popf
dec
arpl
adc
aam
movsb
pop
cmp
mov
stc
loope
mov
add
jge
sbb
stos
adc
cmp
dec
les
inc
lods
sub
push
push
stc
sbb
dec
xchg
fisubs
mov
dec
in
dec
mov
dec
popa
jl
jle
fidivrl
fstpl
jno
frstor
cmp
shr
inc
mov
in
add
jge
sbbl
aaa
add
popa
and
xchg
pop
or
mov
xor
mov
mov
push
xor
pusha
cmpsb
adc
test
pushf
dec
or
add
cmpsl
sbb
fildll
fcmovbe
add
mov
pop
fnsave
clc
filds
push
shll
test
push
icebp
or
mov
mov
inc
push
sbb
sub
add
xchg
jl
and
pushf
outsb
repnz
push
dec
push
xor
lret
test
inc
pop
out
test
pop
push
xchg
add
fisubs
call
aad
mov
clc
insl
pop
ds
sub
das
xchg
pop
dec
add
xlat
jno
fwait
js
jge
cvtpi2ps
loop
lret
cmp
pop
lret
jp
mov
mov
xchg
add
stos
dec
dec
and
mov
xchg
jbe
mov
inc
and
int
sub
jl
push
jno
in
mov
repz
outsl
int
scas
inc
shll
sahf
dec
mov
scas
daa
push
aaa
add
out
jle
in
xchg
pop
sbb
dec
jle
imul
inc
push
rorl
leave
sbb
clc
ljmp
inc
ret
jg
imul
xchg
pop
inc
jns
cld
out
sti
pushf
out
adc
insl
pop
or
insl
xchg
xor
jno
movsb
mov
jb,pt
pop
or
mov
lret
imul
cwtl
push
in
in
test
inc
fnsave
pop
in
faddl
mov
orl
xlat
loop
pop
or
test
dec
stos
rorb
ja
jae
lea
cmpsl
dec
and
or
jnp
jne
push
dec
sti
stc
loopne
push
std
sub
shll
loope
je
inc
mov
out
push
test
push
int3
or
mov
fwait
adc
mov
cmpsl
lahf
sub
jb
iret
nop
jmp
mov
lock
push
imul
mov
jns
insb
mov
fs
ret
rcr
ss
inc
mov
adc
ret
testb
sarl
and
jns
mov
in
insl
cmp
sbb
sub
xacquire
sbb
orl
call
mov
dec
lcall
add
jg
cmpsl
inc
shlb
adc
ret
add
filds
fisubrl
xor
push
leave
sbb
xchg
cmp
inc
int
dec
inc
lds
testb
dec
aam
xchg
adc
sbb
push
gs
sub
in
dec
mov
push
addb
lret
dec
pop
sub
stc
dec
mov
push
and
add
out
hlt
sbb
lds
lret
mov
mov
add
sbb
pop
arpl
sbb
add
cwtl
cmp
mov
jmp
push
stc
popf
pop
and
data16
sbb
and
das
or
and
push
bound
dec
lods
cltd
loope
ret
scas
add
sub
push
test
add
mov
adc
xchg
sbb
stc
pop
adc
cli
inc
cwtl
lret
cli
mov
sub
shlb
jmp
and
fcmovne
ret
aas
cmp
lahf
jp
pop
cmpsl
sbb
or
xor
pcmpgtb
jecxz
sbb
sub
shrl
sbb
lret
push
test
sbb
mov
jle
xor
lods
add
jle
mov
mov
or
and
test
mov
sbb
int3
decl
xor
sub
das
inc
imul
push
std
movsb
mov
mov
insl
jmp
fimull
jmp
pop
xchg
push
pop
cmp
call
add
add
dec
pop
or
test
jbe
cld
mov
pop
testb
xlat
xchg
jl
inc
out
or
repnz
mov
or
or
imul
mov
or
mov
imul
jnp
shll
cmp
lcall
xor
mov
pop
push
shrl
and
cmpsb
scas
imul
les
shr
fsts
sbb
iret
jbe
push
push
hlt
test
popf
addr16
ds
movl
pusha
mov
cmp
test
js
repnz
xor
adc
enter
dec
pushf
insb
jmp
pop
sub
add
sub
ret
mov
lea
movsl
push
clc
jecxz
jae
out
das
dec
subb
lds
mov
mov
testl
mov
nop
dec
ja
sub
or
sub
mov
mov
dec
in
sbb
movsl
jb
add
cli
sbb
sub
mov
cmp
adc
and
xchg
sbb
mov
out
and
out
enter
adc
scas
sbb
dec
xchg
sub
sbb
pop
xchg
sbb
dec
movsl
jmp
push
pushf
outsl
xchg
insb
cmc
ficompl
aas
test
mov
lock
xchg
sbb
in
cmp
push
mov
xlat
rclb
xorl
js
lds
add
dec
pop
xor
adc
arpl
out
outsl
mov
push
xor
cmp
out
pop
in
jae
add
setp
fs
in
insb
xchg
mov
sti
stos
adc
add
mov
xchg
lea
push
pop
aaa
mov
inc
pop
push
pop
mov
mov
inc
aas
outsb
push
xor
cmpsb
sbb
fwait
inc
and
jp
lahf
stos
add
cld
xchg
pop
mov
add
popf
dec
cmp
mov
stos
cmpsl
xchg
and
es
inc
push
xchg
push
out
scas
push
into
push
sub
jns
and
scas
or
cltd
sub
fmul
insb
sti
pop
daa
xchg
and
sub
popa
scas
xor
mov
idivb
lock
pop
in
and
es
or
inc
mov
insl
push
stc
data16
push
movsl
mov
cli
cmp
inc
andl
shlb
mov
insb
inc
xor
testb
dec
push
movl
xor
mov
cmpl
out
push
mov
stos
shlb
ror
push
ror
inc
popf
add
mov
dec
pop
sbb
xor
test
jg
cs
sub
jl
push
cmpsl
or
ds
faddl
and
mov
insb
or
push
pop
lret
stc
in
cmc
movsl
movups
add
repz
add
jl
jne
pop
adc
xchg
xchg
add
fs
sbb
adc
push
je
pop
inc
into
int3
lcall
movsb
loopne
lahf
sbb
add
jl
jp
call
inc
imul
je
sub
les
add
dec
insl
mov
cmp
jo,pt
mov
jo
ds
ss
push
jge
add
fistpl
pop
icebp
inc
ja
dec
mov
xchg
fldcw
push
ja
add
sbb
dec
dec
xor
inc
hlt
icebp
mov
or
pushf
and
or
cmpsb
adc
mov
pop
xchg
sbb
adc
fs
lcall
fs
push
cmpsl
sar
out
mov
fsubs
mov
in
cwtl
push
adc
divb
scas
xor
int3
add
dec
pusha
aaa
xor
mov
mov
stc
xchg
js
jbe
or
inc
setnp
or
ret
mov
push
mov
inc
adc
rolb
lea
test
mov
ljmp
lds
inc
dec
je
or
mov
fadd
ror
pop
scas
loope
sbb
fidivrs
out
push
test
or
push
ror
cwtl
or
jns
push
jg
popa
in
movsb
stc
xchg
stc
pop
jp
arpl
cmp
fsubrs
sti
push
pusha
jnp
enter
push
xlat
mov
jmp
mov
jmp
mov
faddl
hlt
pop
daa
scas
dec
xchg
mov
add
add
cwtl
shlb
pushf
es
adc
ds
sbb
xor
push
cld
pop
scas
sub
dec
insb
scas
add
sbb
push
call
cmp
cs
or
je
sbb
out
mov
insl
fwait
cwtl
test
jg
pop
cmp
pop
in
inc
mov
insb
jb
jns
ret
or
lods
cmc
mov
or
mov
nop
stos
stc
ret
cmpsb
shll
in
and
cmp
mov
cli
ror
cli
sub
jae
lret
push
ja
cwtl
inc
add
jne
leave
add
loop
movsb
jg
std
aaa
sbb
test
pop
fs
hlt
imul
inc
jmp
or
add
mov
push
idivl
insl
pop
mov
jmp
repz
bswap
dec
dec
jmp
dec
sub
jb
xor
jae
leave
xor
mov
pop
pop
cmp
or
or
cmp
mov
gs
jo
adc
pop
dec
sti
in
ret
pop
mov
cwtl
daa
cmp
mov
lret
lahf
pop
int3
aaa
cli
call
shlb
ret
loop
jmp
mov
xor
loopne
imul
imul
imul
js
cmc
pusha
rcrl
fnstcw
pop
shr
inc
movsl
fimuls
jae
sub
sub
or
jg
sbb
cmp
lock
sub
sub
in
push
shlb
popf
pushf
js
test
mov
mov
enter
inc
in
mov
mov
xchg
mov
push
fidivrs
nop
out
push
stc
das
das
sbb
jno
dec
test
lret
mov
adc
ja
adc
cmc
fidivrl
outsb
pop
ficompl
iret
pop
outsb
movsl
push
mov
cwtl
lret
adc
adc
pop
outsl
push
inc
jbe
test
dec
enter
popa
mov
mov
cmp
cmp
pop
jnp
jae
cmpsl
xor
xchg
popa
mov
jle
pusha
inc
mov
adc
sub
stos
adc
jp
enter
or
ds
sbb
sbbb
pop
icebp
xor
mov
push
jae
jns
mov
mov
pop
push
adc
mov
ja
es
test
jne
or
mov
sahf
bound
out
cli
push
lret
stos
add
scas
daa
cmp
or
daa
xchg
jmp
adc
test
clc
lret
mov
call
push
push
data16
rcrb
out
jmp
daa
icebp
jne
or
mov
or
lahf
int
xor
cmp
mov
loop
std
leave
movl
ret
rdmsr
movsl
mull
cmp
pop
sub
std
loopne
pop
jle
adc
and
xchg
inc
sub
mov
mov
gs
cmpsl
push
push
mov
bound
or
cmpsl
movsl
sub
sub
xchg
jo
add
int3
shrl
push
push
ficoml
arpl
pop
dec
pop
mov
and
movsb
adc
sti
scas
add
jno
out
sbb
sbb
mov
push
push
xor
pop
popf
je
cmp
test
add
mov
cmp
rolb
adcl
imul
pop
mov
inc
movsl
xchg
jp
or
cmpsb
add
xchg
das
mov
into
les
and
aam
in
mov
xor
jne
sbb
inc
ds
pop
lods
xrelease
sub
dec
mov
faddl
xor
outsb
xor
nop
sti
jmp
pop
ja
das
sub
imul
sbb
jp
pushf
hlt
inc
and
lds
lock
cwtl
xor
hlt
in
bound
cltd
inc
push
mov
cmp
sub
jecxz
mov
popa
sub
dec
xchg
js
out
icebp
sar
jnp
mov
loopne
test
adc
les
mov
lods
int
lods
test
adc
push
pminub
jmp
adc
jl
data16
cwtl
sbb
es
cmpl
outsb
pop
sbb
cld
xchg
adc
popf
add
outsl
mov
xchg
inc
push
movsb
nop
test
movsl
lock
mov
cmp
cmp
andb
cmp
das
or
and
faddp
aas
test
push
dec
add
xchg
adc
ljmp
push
mov
sbb
and
mov
jmp
mov
sbb
inc
jns
xor
popf
inc
jmp
call
mov
popf
lea
ret
dec
ljmp
shl
adc
test
mov
jne
jae
sarl
lds
xchg
dec
inc
mov
and
aad
in
cmpsl
xlat
shll
into
inc
mov
pop
push
or
insl
fdivs
or
xchg
dec
ror
cmp
inc
adc
fldcw
xchg
xor
psubw
or
inc
enter
xchg
shrb
pop
or
out
movsl
fiaddl
cmp
mov
inc
shl
divl
dec
xor
nop
jns
pushf
popa
jecxz
int
fwait
das
adc
xor
mov
outsl
orb
push
bound
push
cs
xchg
pop
jb
stos
dec
lcall
inc
cmc
clc
negb
xor
scas
movb
pop
dec
inc
mov
dec
lods
xlat
mov
jno
mov
xchg
fildl
pop
xchg
lock
xor
divl
imul
addr16
test
push
ds
and
push
stos
insb
inc
sbb
inc
mov
in
clc
movb
idivl
xchg
clc
sbb
dec
testl
jge
push
pop
hlt
or
jne
es
sbb
sbb
lret
push
xchg
mov
jnp
gs
sbb
aaa
dec
push
push
cmp
std
push
xchg
scas
fsubs
aad
or
add
xchg
inc
dec
lods
cmp
add
out
ret
adc
aas
mov
push
out
inc
mov
lock
and
or
push
movsl
push
enter
loop
mov
sbb
bnd
cs
mov
push
dec
mov
fisubrl
aas
fs
mov
and
popf
pop
add
push
ror
pusha
dec
sbbb
pushf
or
xchg
xor
sub
dec
inc
frstor
push
clc
xchg
int
mov
imull
rolb
or
jp
mov
gs
mov
jno
pop
repz
sti
mov
fstps
das
test
push
lret
js
into
xor
inc
dec
jbe
fistpll
dec
dec
ljmp
mov
mov
bound
iret
jns
mov
mov
cmp
not
mov
adc
cmc
pop
fstl
dec
sar
cmp
icebp
and
test
sti
jp
sub
and
mov
dec
jb
pop
mov
sbb
loope
dec
push
inc
pop
cmc
jo
and
cld
adc
insb
dec
int
out
or
or
sahf
idiv
sbb
adcb
repnz
mov
mov
pop
dec
in
xchg
sarw
fidivl
add
lods
sahf
je
mov
filds
lret
repz
pop
iret
loop
mov
and
xor
test
lock
imul
leave
pop
mov
in
loope
rclb
cmc
sarb
inc
sbb
cmp
addb
fstpl
push
jne
cmc
std
es
lahf
push
mov
mov
pop
jp
in
cmpsb
outsl
cs
movsl
icebp
inc
mov
dec
scas
xchg
add
inc
mov
lahf
lret
iret
fidivs
inc
mov
ret
adc
inc
cmc
push
insb
pop
frstor
pop
and
sub
inc
int3
cmpsb
out
fistl
sub
test
or
loop
add
and
push
lret
and
adc
jp
aaa
xor
cli
test
jae
or
mov
shlb
stos
das
fistl
inc
imul
add
addr16
jbe
adc
jle
lock
push
mov
and
lds
cli
pop
push
fdivl
sub
push
jge
call
fwait
pop
jb
dec
lods
inc
pop
sub
inc
jo
sahf
xor
inc
sub
xchg
es
pop
imul
pushf
or
push
xor
repnz
out
test
movsl
hlt
rclb
cli
js
inc
adc
xchg
out
sbb
mov
mov
pop
mov
pop
cmp
dec
sbb
inc
mov
dec
sbb
loopne
and
les
dec
stos
fwait
add
push
test
cmp
sahf
daa
shlb
js
sbb
mov
aas
mov
adc
daa
shll
pop
aas
cwtl
pop
shrb
dec
mov
call
xlat
dec
filds
xchg
xchg
and
test
push
push
aas
jo
lret
shlb
jnp
sub
repz
into
push
enter
cmp
pushf
inc
push
adc
push
aam
lahf
int
mov
lcall
dec
lret
or
xor
cs
loop
mov
seta
add
xchg
sub
sbb
dec
mov
test
bound
mov
adc
cli
out
lock
push
in
pop
dec
shrl
sarl
nop
xchg
mov
cmpl
or
push
addr16
mov
outsb
sar
int3
lcall
fists
xor
inc
inc
cmpsb
xor
mov
imul
cmp
mov
ljmp
cli
mov
test
mov
and
mov
dec
mov
push
cmpsb
lahf
repnz
testl
pop
imul
aad
cmp
push
popa
mov
xchg
xchg
mov
ret
xor
fs
or
fnstcw
jmp
outsb
bound
sub
stc
dec
push
inc
cld
pop
hlt
jle
leave
mov
cmp
mov
aad
mov
jl
inc
lds
jne
xor
mov
loopne
mov
int
adc
cmp
flds
mov
out
sahf
mov
push
rcrl
lcall
inc
ss
into
mov
inc
data16
rcrl
pushf
jge
in
call
shlb
add
std
stc
fld
xor
push
sub
cmp
jno
pop
mov
repz
nop
sti
sbb
pop
lahf
test
add
xchg
inc
mov
mov
mov
inc
fcmovnu
notb
psubd
dec
cmpsl
dec
stos
sub
add
mov
iret
test
mov
out
sub
or
jb
xor
adc
pop
callw
rolb
sub
pop
pusha
sbb
xchg
cld
mov
fcomp
int3
test
sub
pop
push
sub
fcmovnbe
shrb
clc
mov
xchg
adc
push
mov
sub
push
jl
divb
ja
cmp
outsb
push
loopne
fwait
call
outsl
out
jno
or
aad
mov
fwait
jmp
stc
jp
cmp
fwait
cmpsl
xor
jbe
mov
aaa
sti
dec
sbb
mov
sahf
sub
insl
lods
loop
sbb
flds
in
out
jg
pusha
xor
sub
aad
jmp
adc
fs
inc
jge
stc
ljmp
jb
fdivs
adc
inc
ds
fldenv
movsb
inc
jo
decl
jmp
sub
xchg
cwtl
xor
adc
fucom
dec
arpl
and
adc
dec
mov
ret
pop
subb
insb
jne
pop
and
mov
or
pop
loope
pop
cmp
push
gs
lds
and
lahf
xor
sahf
pop
iret
data16
notl
fidivrl
fisubs
cmc
int
cmp
call
loop
mov
fsubr
movsb
shlb
cmp
add
movsb
ret
pop
bnd
adc
cld
xchg
xchg
cld
adc
push
jg
repnz
add
loop
lret
cmp
mov
fildll
shlb
cmp
out
inc
fsub
cmp
xchg
and
xor
or
arpl
or
dec
mov
adc
adc
sub
pop
test
inc
in
xor
sti
or
mov
push
int3
add
ficompl
aas
int
or
lret
lret
cmp
fiaddl
fwait
jmp
mov
insb
pop
test
push
pop
pop
inc
and
xchg
pop
cmp
mov
xor
and
cmp
test
or
decb
add
popf
enter
add
decb
insb
out
repz
test
sub
mov
mov
and
mov
xchg
bound
imul
inc
cltd
shll
rcll
lods
stos
xor
sub
inc
js
test
push
test
flds
adc
inc
repnz
ficompl
and
xlat
lea
pshufw
fiaddl
js
or
jo
mov
inc
pusha
incb
mov
adc
in
sbb
out
mov
aaa
fwait
lods
cmpsb
pop
arpl
xchg
adc
sub
out
subb
pop
aad
or
inc
adc
mov
roll
lds
dec
push
and
dec
xchg
and
add
cmp
ds
xchg
cld
xchg
cmp
test
push
ss
dec
mov
out
pop
or
rcrl
pop
xor
xchg
adc
mov
inc
ss
jp
add
dec
cltd
in
aaa
sbb
mov
es
idiv
mov
adc
cmp
mov
rcrl
in
imul
cmp
adc
xchg
sarw
pop
pop
cwtl
sub
sbb
inc
mov
out
pop
mov
sarb
pop
adcb
xchg
jle
sbb
lahf
call
jne
jo
xor
or
test
pusha
xor
aam
shr
mov
loopne
in
dec
into
jmp
sbb
shrb
push
enter
loopne
popf
push
mov
iret
jecxz
xchg
cmp
les
xor
xlat
fsubrl
push
sbb
dec
or
inc
addr16
mov
and
in
mov
cwtl
inc
mov
sub
leave
pop
hlt
sub
in
or
mov
sbb
sub
adc
cwtl
neg
xlat
dec
mov
cmp
add
stc
sub
mov
push
add
inc
adc
xchg
add
jge
xchg
imull
push
lahf
mov
std
inc
xor
rcll
jns
pop
movsl
inc
pushf
sti
jp
adc
aas
test
in
lcall
lret
pop
insl
xor
xor
cmpsl
pop
xor
rcr
push
out
imul
cmc
movsb
shlb
repz
and
ficompl
dec
cmp
in
repnz
xchg
dec
pop
jb
xchg
or
inc
pop
xchg
xchg
cli
in
sub
aad
ficoms
test
add
pop
mov
pop
jecxz
cmp
ret
add
jne
les
add
into
into
pop
jb
ret
mov
push
pop
adc
mov
cld
cltd
jns
jae
jmp
jno
das
das
popl
mov
mov
sbb
lods
xlat
inc
xor
stos
nop
in
cltd
negl
dec
loopne
ret
stos
jecxz
out
out
cmp
inc
adc
jg
mov
ficoml
mov
lret
adc
xchg
into
jp
push
sti
sub
mov
add
and
mov
cltd
stc
add
popf
sub
cltd
popl
pop
mov
stos
or
je
xor
xor
xor
iret
std
add
cmp
inc
je
cmp
xchg
mov
in
mov
lea
mov
in
inc
adc
orb
jo
fstpt
push
lods
xorl
scas
and
rorb
in
insb
pop
push
sub
fiaddl
data16
std
pop
mov
loope
adc
in
jmp
cmpsb
pop
test
outsl
or
or
mov
lods
movb
fs
push
scas
outsl
fsubrp
into
push
dec
or
push
sbb
and
pop
repz
mov
dec
push
push
jle
jbe
jbe
ret
fs
test
sbb
and
and
icebp
mov
lods
dec
mov
out
adc
ss
inc
out
xor
inc
mov
xor
popa
mov
push
sbb
idiv
xchg
jp,pt
fadds
popf
mov
jbe
xchg
mov
jo
add
xchg
lds
rorl
adcb
push
scas
push
pop
ret
jbe
inc
fldenv
jg
pop
cwtl
fldcw
imull
pop
and
mov
cmc
mov
test
mov
nop
sub
cmc
xor
rcrb
testl
test
or
imul
mov
mov
mov
arpl
shrb
int
lcall
add
sar
sahf
jnp
fdivl
ficoml
push
cli
shrb
jmp
add
in
repnz
inc
inc
add
popf
jo
mov
jmp
jne
cmpsl
in
in
adc
inc
xchg
dec
adc
jecxz,pn
mov
cmpsb
addb
fidivrs
mov
cwtl
mov
rep
dec
pop
jno
dec
shll
sbb
lahf
pop
inc
movsb
sub
xchg
jns
pop
ret
shr
adc
shl
out
jnp
push
test
inc
xchg
xor
ljmp
jle
adc
cmp
scas
sbb
pop
jbe
imul
call
loope
rcrl
sbb
push
xchg
ficoml
xchg
and
or
inc
repz
int
mov
dec
mov
fildl
pop
lcall
sbb
imul
fsts
adc
loope
adc
loope
scas
cmpl
jo
mov
jl
lods
adc
lcall
mov
sbb
aad
xor
jne
cli
or
adc
adc
sbb
xchg
fwait
and
mov
test
inc
push
mov
insb
dec
stos
fdivrl
lods
add
or
add
cltd
cmp
lcall
mov
popf
xchg
inc
pop
and
into
rorb
mov
xor
loope,pt
outsb
jmp
into
test
stc
stos
push
add
es
out
inc
addr16
pop
movsb
aas
mov
dec
shll
inc
addr16
shl
orl
dec
orl
dec
insl
scas
push
outsl
in
mov
push
sbb
cld
push
dec
push
mov
nop
out
push
jb
jmp
mov
shlb
inc
fnstsw
mov
lcall
lds
dec
cmp
cmp
xchg
cmp
aas
cmpsb
hlt
les
ljmp
imul
das
mov
out
out
mov
data16
test
lea
push
jno
pop
adc
sbbl
pop
and
mov
add
xlat
fsubrs
mov
stc
jp
add
push
push
addb
hlt
es
xchg
arpl
test
addr16
inc
aas
cmpsb
fists
pushf
sbb
pop
xor
call
cmp
loopne
fcmovnbe
out
das
sarb
sub
push
cmp
mov
ljmp
notb
rorl
sub
ds
iret
mov
stos
iret
aam
mov
pusha
ds
cwtl
mov
ljmp
inc
into
call
adc
jb
xchg
dec
lahf
dec
ja
outsb
xchg
cs
daa
dec
lret
outsb
bound
mov
push
ficompl
out
ljmp
pop
cli
popf
stos
xchg
adcl
shlb
xor
mov
jecxz
push
fldcw
jno
add
in
int3
icebp
dec
or
in
into
add
dec
lock
enter
mov
jg
cmp
movsl
sbb
mov
pop
out
aaa
ds
mov
add
cmp
xchg
or
roll
inc
mov
mov
jl
aad
dec
sub
js
ret
fsubrl
ss
imul
jne,pn
das
repz
pop
sub
jns
push
sub
xor
lret
dec
fldenv
aam
mov
fs
cld
fldl
and
cwtl
into
cmp
ret
mov
int
pop
out
push
loop
orl
stos
or
or
xor
push
mov
sub
push
fdivl
ja
mov
mov
mov
imul
ret
or
dec
inc
cmp
and
scas
test
sbb
cs
mov
inc
nop
aad
mov
cmpb
in
inc
cwtd
jmp
scas
fstl
mov
repnz
add
dec
jns
iret
aas
stos
dec
mov
mov
shrb
dec
jbe
imul
jae
ret
dec
std
bound
aad
movsb
adc
shlb
push
cmp
mov
es
sbbl
lret
popf
mov
xchg
lea
cwtl
sarb
out
iret
test
stos
and
sbb
add
arpl
ret
xor
sub
pusha
sub
or
pusha
xchg
sbb
inc
inc
mov
lahf
sbb
jo
jg
push
scas
aaa
push
pop
sbb
negb
pop
outsl
inc
and
fwait
cmp
shlb
insl
lret
mov
insl
push
cmp
cmp
pop
cmpsl
jbe
inc
shr
xor
pop
mov
mov
jmp
loope
jmp
in
lea
mov
decb
push
jbe
jmp
push
fsubs
popf
mov
xchg
add
scas
lret
cmp
pop
lock
xchg
outsb
mov
in
clc
mov
add
jp
das
mov
pushf
push
adc
ret
test
sti
push
bound
inc
mov
aad
loop
mov
orl
sti
int3
inc
sub
loope
xchg
pop
xor
jns
mov
stc
repz
gs
jbe
popf
in
cmp
pushf
inc
pop
sbb
dec
in
ja
push
setne
dec
gs
jb
pop
sbb
out
out
nop
inc
xlat
test
sti
nop
inc
das
scas
mov
xor
sti
fsubp
std
add
mov
or
cs
push
jle
jg
stos
pop
cmp
mov
xor
pop
xor
xchg
call
stc
cmpsl
cmc
mov
scas
fdivr
cmp
lcall
or
in
sbb
lds
cmp
stc
mov
push
mov
mov
out
cmp
lret
cmpb
aam
mov
scas
dec
je
pop
inc
jg
jnp
jne
jb
adc
cs
dec
ja
loop
stc
inc
in
sbb
push
push
loope
sahf
repnz
test
scas
add
mov
loop
or
push
std
or
pop
je
out
mov
notl
cli
test
das
in
xor
test
sbb
sbb
mov
jae
inc
arpl
dec
push
lods
or
notl
sub
repnz
xorb
sub
sbb
lret
pop
mov
adc
out
adc
sub
pop
or
xor
arpl
add
jge
cmp
pop
cmp
data16
mov
inc
jno
sbb
scas
and
scas
lahf
loope
jo
mov
imul
repnz
or
jge
sbb
jecxz
jns
fdivl
pop
adc
mov
cmpsl
mov
adc
dec
arpl
sbb
cmpb
cld
inc
or
hlt
pop
inc
dec
adc
sub
jae
sbb
cmp
scas
clc
mov
jno
mov
or
lret
loope
lods
jecxz
aas
in
es
fcompl
imul
cmp
dec
cmpsb
jmp
sub
daa
imul
lds
jg
dec
sub
test
aad
pusha
fisttps
mov
stos
or
mov
js
mov
adc
jl
lds
inc
push
pop
mov
test
mov
jl
stos
out
adc
xchg
popf
xchg
and
dec
hlt
ljmp
fbld
stos
push
push
sbb
cmp
loopne
lods
das
xchg
push
insl
pop
stos
daa
mov
dec
imul
ret
or
testl
pushf
mov
fsts
add
ljmp
movsb
adc
xor
mov
or
sbb
mov
inc
xor
and
inc
or
push
sbb
adc
xor
movsl
xor
jle
or
pushf
jbe
push
mov
cli
scas
hlt
push
mov
push
ljmp
push
sti
add
or
push
rcl
jle
dec
je
cld
sahf
fs
xchg
sbb
ffree
xor
enter
adc
mov
add
movsl
mov
pop
dec
rol
in
sarb
xor
xchg
aas
ss
rorl
sub
adc
inc
shrl
scas
mov
repz
xchg
push
mov
lcall
sub
test
sbb
das
adc
adc
jle
test
inc
sub
popa
sbb
or
mov
xor
call
mov
pop
cwtl
adc
rorl
pop
faddl
cmp
adc
inc
dec
inc
mov
inc
pushf
mov
lea
inc
in
push
ret
xlat
mov
xchg
xor
repnz
sbb
enter
fdivrs
bound
cmc
push
adc
mov
xchg
inc
std
sbb
xor
fimull
pushf
negb
push
add
rcrl
push
lods
sbb
push
enter
pop
lods
shlb
add
lock
jle
pop
dec
dec
imul
jcxz
mov
adc
add
push
inc
fstps
dec
sub
sub
pop
sub
mov
sbb
iret
divl
fcomps
ss
iret
or
xor
mov
sbb
adc
and
sbb
jecxz
adc
dec
imul
jecxz
pop
dec
push
bnd
cmpsb
pop
clc
add
push
push
loop
dec
push
fdivl
rolb
sahf
xchg
inc
mov
or
mov
cwtl
add
rorl
sbb
push
pushf
lods
cmpsl
in
add
ss
sti
xor
mov
mov
mov
jmp
cmp
dec
and
pop
mov
out
in
and
sub
fldenv
shr
add
fiaddl
pop
pop
hlt
pop
cmp
lds
mov
adc
testb
fxch
jge
fstp
das
mov
cli
mov
adc
mov
imul
inc
jp
js
insb
sbb
and
or
sarl
mov
pop
sub
inc
inc
stc
cmp
rclb
gs
stos
bound
js
jmp
dec
or
loop
cmpb
xchg
inc
cmp
or
cltd
jbe
adc
jecxz
cmp
cli
mov
shl
xor
into
jmp
xor
dec
sbb
je
jne
fstps
sub
xchg
pushl
loop
subb
mov
push
in
call
dec
sub
or
sarl
or
pop
jg
or
repz
ret
add
cmp
mov
xchg
cli
test
in
add
jmp
out
pushf
mov
je
and
lcall
sbb
inc
inc
adc
push
test
or
imul
test
call
lcall
ss
cmpsl
hlt
dec
out
cwtl
std
jne
add
sub
adc
in
pop
push
jnp
adc
or
mov
daa
mov
dec
add
mov
or
xor
mov
stos
xchg
fimuls
xor
sbb
outsb
out
rcrb
imul
sti
pop
jecxz
lds
adc
inc
hlt
dec
jmp
or
xchg
cmp
fnstsw
xchg
mov
pusha
adc
push
and
movsb
xor
inc
ljmp
or
inc
sbb
or
shlb
aad
rclb
add
sbb
fbld
cmpsl
push
in
sti
das
movsl
inc
dec
and
arpl
jae
xor
jb
lea
es
sbb
clc
lds
popa
pop
vmaxss
das
fildl
mov
xchg
popa
in
xchg
adc
insl
int3
mov
xchg
inc
xchg
stc
out
sub
in
inc
mov
mov
pushf
pusha
xchg
inc
shr
test
ss
jo
repnz
lahf
insl
jnp
outsl
icebp
xor
jns
push
sbb
fmul
mov
mov
mov
dec
arpl
ss
loopne
lcall
int
in
sub
mov
push
in
push
xorb
xchg
enter
xor
stos
adc
xchg
jg
nop
addr16
popf
or
cli
mov
loop
mov
ret
roll
dec
push
int
shrl
lret
testb
sbb
and
pop
jg
sbb
pusha
lahf
les
cli
cs
rcll
mov
loope
arpl
enter
pop
xchg
mov
arpl
xchg
xchg
mov
and
pop
jns
fwait
pop
push
ljmp
rcll
movd
lcall
mov
jns
adc
sub
sub
push
insb
mov
popa
fs
rcrb
dec
test
sbb
xchg
test
out
cmp
xchg
pushf
imul
scas
mov
inc
mov
ret
insl
js
mov
inc
mov
xor
push
or
dec
movsb
lods
cltd
inc
scas
mov
sub
outsb
push
push
or
mov
or
fcmovb
xor
mov
or
push
pop
pop
push
sbb
cmp
sbb
repnz
in
es
mov
push
add
iret
add
lahf
sti
mov
cmp
mov
rcll
pop
sbb
jo
sbb
sub
shrl
push
clc
adc
imul
je
and
fwait
xor
mov
pop
add
int
out
daa
pusha
pop
sbb
inc
ja
jbe
rol
imul
cmp
stos
outsb
std
sbbl
mov
loope
rol
scas
in
sub
xchg
inc
mov
lret
sub
or
stc
pmulhuw
cmp
push
xor
roll
outsb
and
adc
outsb
pop
pop
out
stos
imul
stc
jecxz
mov
push
inc
mov
mov
sub
test
inc
xchg
adc
jbe
jl
popa
loope
fs
fimuls
sbb
icebp
sub
mov
into
insl
xor
cli
lods
mov
cld
inc
lahf
sbb
inc
sbb
test
setnp
mov
pop
stos
xchg
stos
repnz
jno
add
inc
mov
pop
movsl
pop
fidivrs
sbb
cmp
push
iret
pop
add
mov
sbb
iret
xchg
dec
popf
lods
fnclex
push
push
int3
mov
and
dec
sbb
lods
test
xor
addb
cmp
jge
ljmp
or
loop
lds
push
add
and
jmp
hlt
test
cmpsb
push
pop
mov
inc
add
or
pop
icebp
mov
outsl
sub
out
push
arpl
loop
dec
cwtl
addb
cltd
cli
inc
jg
xorb
adc
cmp
in
mov
add
stos
sub
imul
xchg
fst
aad
cmp
sbb
jo
sbb
sub
or
fstps
frstor
dec
and
mov
lods
inc
adc
jno
jecxz
adc
jae
push
push
aaa
sbb
push
dec
add
xlat
dec
mov
test
and
jae
mov
lods
sub
adc
dec
sub
mov
std
lret
pop
jp
dec
rcrb
dec
aam
outsb
mov
mov
orl
and
jecxz
jno
sbb
lret
inc
xchg
or
fwait
jle
lods
mov
out
sbb
mov
je
pop
je
lock
dec
jbe
pop
or
add
outsb
jae
xchg
xchg
pop
out
aam
stos
pop
or
xor
loop
les
sub
into
sbb
sbb
loopne
jbe
out
sub
jnp
mov
movsb
aam
clc
cmpsl
jmp
out
adc
in
rolb
jp
shll
and
xchg
divb
cmp
ficomps
loopne
loopne
pop
adc
sub
fsubs
fdiv
bound
cwtl
lds
add
arpl
and
cmp
dec
sbb
jl
dec
jp
dec
mov
add
scas
nop
gs
inc
jmp
popfw
cltd
and
push
sbb
mov
xchg
cmp
sbb
out
push
insl
add
ljmp
jne
dec
mov
cmpsl
rcl
jns
mov
push
mov
sbb
cmp
loope
pushf
mov
pop
xor
dec
push
nop
ljmp
xor
lods
dec
decb
popa
mov
sbb
xchg
jb
dec
pushf
jmp
cmp
fistps
ss
sbb
test
std
arpl
lods
jno
stos
mov
jp
cmp
cmpsb
ret
mov
inc
hlt
movsb
les
xchg
mov
jae
or
dec
ret
mov
and
xchg
mov
jno
mov
mov
into
mov
out
out
mov
ret
or
mov
xchg
inc
push
adc
ret
xchg
int
mov
leave
inc
add
xor
lock
push
test
loopne
adc
or
in
into
or
jae
je
jl
cmp
sub
aad
jne
sub
mov
adc
xchg
push
int3
imul
xchg
ror
out
jecxz
ss
xchg
fidivl
and
jns
inc
int
lahf
leave
cltd
jge
mov
push
stos
les
clts
pop
loope
stc
xchg
fucom
das
or
push
rcrb
dec
ror
test
sahf
push
mov
sbb
rcrl
test
imul
lods
das
das
popa
insb
dec
loop
pop
mov
add
adc
test
xlat
repnz
rcr
in
subb
out
xchg
cs
addr16
dec
gs
pop
mov
inc
mov
xchg
scas
stc
xchg
inc
xchg
cld
dec
es
mov
icebp
dec
xchg
pushf
movsb
std
and
popa
mov
push
mov
add
addb
add
or
jg
jl
dec
daa
sub
test
sub
lret
shl
lea
jmp
mov
hlt
adc
aaa
dec
fsubs
xchg
rol
fnstcw
lods
xchg
xor
popf
stc
out
dec
scas
pcmpgtw
sahf
mov
bound
fcoms
and
enter
lret
cmp
xor
dec
outsl
jne
imul
sub
popa
jnp
stc
inc
out
sbb
or
pop
inc
roll
scas
pop
je
fistps
into
les
insl
push
cmp
cmpsb
pop
cli
imul
mov
push
adc
ljmp
fcoms
jne
bound
or
lea
sbb
inc
push
dec
ret
cltd
test
iret
sub
jnp
iret
dec
and
fcompl
jecxz
stc
dec
faddl
popa
std
jle
in
test
popa
mov
ret
call
faddl
jns
rclb
dec
aaa
cltd
mov
lcall
mov
es
ret
add
or
inc
rorl
in
ljmp
mov
add
dec
lret
and
mov
shlb
enter
sbb
pop
push
pop
divl
dec
xor
ss
sub
add
jne
xchg
rcrb
sbb
mov
les
push
fldenv
push
mov
or
rcr
insl
dec
ds
xor
aad
cmp
loopne
sub
pop
push
xchg
or
loopne
hlt
mov
inc
mov
adc
fcmovb
ret
push
aaa
xlat
cmp
mov
dec
call
jae
xchg
push
xor
jmp
arpl
lea
pop
lods
mov
pushf
pop
mov
add
mov
push
sbb
scas
pop
push
daa
xchg
int3
fildll
popa
mov
inc
vmovd
push
sbb
inc
mov
or
imul
addb
jns
sbb
js
fsubs
cltd
add
cwtl
add
push
cmp
mov
lcall
dec
mov
test
jns
jl
out
push
lret
and
mov
and
push
push
mov
push
movsl
adc
addr16
stos
add
idivb
js
pop
pop
fsts
repz
jle
or
push
push
ljmp
mov
xchg
mov
sbb
push
mov
bound
mov
rcll
add
jns
daa
add
pop
ja
pusha
outsl
add
add
xor
insb
test
inc
mov
in
cld
sub
sti
jmp
add
xchg
fiaddl
ss
xor
lcall
and
adc
je
push
pusha
sti
jl
add
jns
sbb
imul
xchg
push
jne
lock
sub
stos
arpl
mov
dec
sarl
jno
mov
hlt
or
subb
loopne
cmp
adc
testl
mov
push
sub
out
iret
pop
inc
bound
andb
insb
push
mov
jl
out
je
rol
test
movsb
jne
movsb
movsl
push
insb
outsb
push
or
repz
pop
mov
loope
sub
inc
test
sbb
stc
sti
xchg
or
dec
fiaddl
ss
out
and
jle
jno
shll
in
cwtl
xor
lock
add
inc
adc
inc
sar
dec
outsl
into
inc
jo
pushf
sub
xor
or
fimull
push
iret
cmpsl
or
cmc
xchg
push
and
and
test
fcom
jp
add
ss
add
xchg
pop
sbb
dec
dec
pop
imul
or
dec
jns
sub
sub
sbb
xchg
aam
sub
nop
jmp
shll
ja
dec
push
sbb
fwait
mov
jae
cmp
mov
outsb
mov
subb
jg
stos
sti
jbe
adc
lods
lret
in
push
jg
xlat
add
push
jp
stc
cmp
xchg
loop
in
mov
cwtl
std
fmuls
popa
enter
enter
dec
fcmovne
cmp
jge
xchg
pop
mov
push
out
enter
test
dec
pop
pop
push
cwtl
out
mov
pushf
inc
in
inc
mov
push
lret
and
ja
ret
repnz
inc
or
or
jg
popa
mov
pop
ljmp
imul
mov
lods
clc
loopne
inc
xchg
cld
mov
or
push
push
mov
sub
insl
movups
dec
pusha
popa
in
adc
jp
or
push
lock
xchg
cs
inc
aam
sbb
nop
add
jo
adc
mov
push
inc
lock
das
lock
mov
or
fbld
mov
push
nop
enter
jb
enter
pop
cmc
frstor
sbb
mov
daa
rcrl
aad
in
or
pop
testl
pop
int
dec
xchg
dec
lcall
divb
push
inc
push
mov
cli
rorb
stc
mov
fistpll
mov
insb
insb
popf
fs
push
cmpsl
ret
std
fs
inc
rcll
hlt
test
jne
or
jle,pn
sbbl
cmp
xchg
adc
or
gs
cmpsl
fidivrl
sub
hlt
sbb
daa
xlat
jge
adc
mov
enter
mov
and
shll
pop
aaa
and
xor
out
movsb
pusha
sub
fs
dec
js
xlat
je
push
imul
leave
out
pop
adc
dec
xchg
adc
std
icebp
mov
cmpsl
fidivs
ds
hlt
xchg
in
bound
mov
sbb
loope
xor
loope
fdivr
xor
outsb
adc
pop
jmp
test
pop
mov
add
ljmp
pop
fistps
push
mov
sub
mov
nop
cmpsl
dec
pop
and
adc
es
out
xchg
xor
pop
jp
sub
flds
mov
int3
push
mov
mov
nop
adc
dec
lret
pushw
xor
jno
es
jge
out
sbb
xrelease
roll
mov
sbb
sub
pop
insl
je
in
leave
lret
pop
adc
adc
outsl
cmp
jge
aad
repz
push
lea
pop
mov
and
stc
das
ret
inc
lret
scas
xchg
dec
out
push
or
push
fwait
add
jg
mov
mov
gs
xchg
addb
xor
loope
sub
stc
testl
and
xchg
mov
sbb
ret
in
push
into
jecxz
fisubrl
aas
repz
jmp
jecxz
jp
push
outsl
ds
into
mov
dec
or
mov
cld
sub
mov
aas
aaa
push
sbb
ja
adc
adc
jbe
shlb
ror
dec
sub
fmull
repz
jl
cmp
sarb
dec
loope
inc
je
repnz
mov
push
stc
jo
jg
add
xchg
out
dec
movsb
and
and
movsl
addl
mov
pop
test
add
mov
sbb
push
cld
fnstenv
jne
push
sub
adc
sbb
aaa
into
mov
imul
or
mov
pushf
add
dec
mov
mov
clc
ret
sbb
inc
je
add
inc
xor
sbb
arpl
jg
roll
and
mov
xorb
test
adc
dec
jb
mov
fcom
imul
mov
sbb
xchg
mov
enter
pop
mov
cmpsl
xor
nop
xor
add
outsb
sbb
xor
repnz
clc
dec
mov
std
sets
dec
lds
cmp
mov
frstor
into
jmp
in
aam
mov
shll
mov
cmpsl
outsl
add
sub
out
xor
pop
jp
aaa
out
pop
leave
dec
mov
mov
clc
add
inc
stos
sahf
mov
fs
jecxz
sti
dec
test
fisubs
push
inc
or
iret
scas
mov
jns
mov
outsb
pop
stos
jno
sarb
in
dec
xor
xchg
add
jnp
mov
aas
jb
dec
push
in
xchg
sub
ret
aam
hlt
aaa
mov
addr16
sub
adc
out
or
js
sbb
pop
inc
sbb
sub
lret
and
inc
mov
inc
jge
fucomi
mov
je
and
and
sbb
outsl
into
xchg
std
ficoml
and
dec
cmp
mov
mov
fwait
push
inc
and
addl
xchg
push
dec
push
push
movsb
xor
cwtl
cltd
rorl
out
ljmp
sub
or
jge
rclb
mov
xchg
sbb
sub
sub
jmp
add
or
pusha
adc
popa
or
shlb
test
pop
add
pop
push
scas
pusha
movsb
cmpsb
or
inc
sub
jb
ret
icebp
jns
mov
sub
mov
cmp
mov
inc
mov
pop
dec
movsb
in
mov
inc
sbb
jo
cmp
imul
cmp
mov
jle
adc
movsb
xchg
push
clc
inc
jo
adc
mov
mov
and
and
sbb
inc
lock
loope
cwtl
imul
jge
das
or
xor
xchg
jl
pop
aas
and
lea
fcompp
daa
dec
call
das
das
subl
popa
cmp
les
in
mov
daa
aam
sub
jg
mov
je
cmc
dec
out
sbb
mov
ljmp
scas
adc
mov
mov
pop
loop
add
or
gs
pusha
scas
sahf
add
xlat
sti
mov
repnz
xor
mov
push
test
fs
pop
pusha
mov
mov
and
xor
or
into
add
xlat
andb
inc
push
test
in
or
lods
inc
add
mov
mov
sub
mov
add
inc
xchg
mov
cmp
mov
imul
notl
pop
and
ret
outsl
cltd
mov
jle
test
cmp
in
inc
xlat
pushl
push
int3
mov
fldcw
push
xchg
fstl
mov
cwtl
addr16
jecxz
cmpsb
xor
andl
add
shl
inc
push
dec
inc
insb
adc
call
stos
in
lds
ficoml
stc
push
push
insb
dec
xchg
mov
xor
mov
push
pop
dec
inc
mov
jle
rorl
ljmp
aas
jp
mov
ja
icebp
call
xlat
cmp
jb
mov
ljmp
push
mov
sub
sub
push
jae
rcr
push
sbb
scas
gs
divl
cmpsb
push
cmovno
aaa
cmpsb
es
clc
js
repnz
and
outsb
inc
inc
adc
cmp
xchg
fisttps
scas
mov
mov
lds
xor
in
shll
dec
repz
repz
stos
cli
dec
sbb
ja
mov
adc
cmpsl
mov
jno
xor
stos
push
xor
fsubrs
arpl
jbe
into
cmpsl
xlat
mov
jbe
jb
fwait
add
or
cmc
jns
jmp
pop
aas
icebp
jp
fcmovb
mov
xchg
push
push
and
xor
adcb
test
jg
outsb
xchg
scas
sub
stc
or
fildl
dec
mov
xor
lret
jne
xchg
mov
mov
lret
and
mov
scas
xchg
sbb
incb
xchg
lds
jmp
movsl
loopne
add
cmp
int
or
lds
mov
jnp
add
sub
push
mov
test
and
add
mov
mov
fldcw
lahf
dec
pop
dec
stos
xchg
push
in
outsl
add
push
xor
adc
hlt
mov
lahf
jb
repz
insl
cmpl
xor
mov
xchg
ret
jge
andb
sbb
dec
mov
mov
dec
fisubrl
inc
sub
dec
fcomps
ja
movsl
jp
nop
repz
jbe
mov
pop
inc
mov
pushf
pop
das
cs
cltd
push
ret
sbb
mov
or
jnp
cmp
jecxz
add
jp
adc
sub
xor
or
add
cmpsb
fisttpll
fildl
std
mov
push
xchg
popa
or
jl
adc
cmp
stos
fisttps
aam
shlb
jb
push
push
xor
subl
xor
stc
sbb
rcpps
pop
pushf
cld
cltd
stos
and
ds
or
or
inc
movsb
sub
pop
pushf
fldl
cmpsb
movsb
je
inc
push
iret
xchg
mov
adc
addl
sub
test
dec
dec
jmp
push
adc
push
jle
push
decb
fcomp
sbb
jp
clc
push
jmp
scas
xlat
xchg
cmp
in
push
rcr
repz
fwait
int3
mov
sar
mov
loope
add
popf
inc
mov
lea
xchg
daa
aaa
clc
pop
mov
pop
push
add
aaa
jnp
cs
mov
xchg
sahf
enter
loopne
xchg
in
out
stc
js
mov
cmp
mov
mov
xchg
stos
fcmovnbe
ja
cmp
fldl
in
je
dec
leave
dec
push
scas
pushf
dec
std
out
pop
adc
push
cmpsb
xchg
xchg
push
ret
nop
push
jne
leave
mov
and
nop
nop
ljmp
mov
xchg
out
test
xor
mov
fs
cmp
repnz
bound
imul
aas
pop
xlat
pop
sub
shlb
dec
sbb
lret
cwtl
inc
jmp
sbb
push
fs
dec
push
loope
lock
shr
dec
xorl
ss
testb
sbbb
cmp
fld
jp
lock
or
pop
fisubrs
or
pop
sub
pop
pusha
sti
ret
xlat
and
popf
jge
sbb
and
bound
fbstp
jne
bound
cwtl
mov
dec
or
ljmp
xor
roll
add
inc
idiv
aam
leave
or
lds
adc
lret
outsl
test
scas
pop
das
in
movl
and
push
enter
scas
push
cmp
scas
js
negl
ss
jle
adc
cmp
test
jmp
xlat
sub
sti
out
movsl
aam
add
mov
sahf
ss
addr16
imul
mov
test
aad
popa
push
pop
iret
insl
loop
pop
mov
xchg
mov
sahf
mov
dec
nop
add
in
addb
inc
xor
aam
cs
ficoms
pop
push
and
iret
jne
les
fdivs
and
sub
in
imul
mov
jns
cli
imul
clc
outsb
fcomps
push
ja
adc
shrl
adc
scas
fildl
sbb
mov
mov
add
clc
popa
aas
fimull
es
daa
mov
out
cmp
sahf
pop
pop
push
sub
in
dec
and
push
nop
aaa
jno
sarl
pop
mov
ret
sahf
arpl
jmp
arpl
mov
and
outsl
test
out
jbe
jmp
lret
lods
xor
enter
xor
nop
rclb
sub
cmp
xchg
sub
aam
ds
fnsave
push
mov
insb
lds
lahf
push
mov
and
mov
jo
or
pusha
outsb
sbb
pop
xor
gs
pop
test
loopne
mov
adc
xchg
mov
jo,pn
jmp
hlt
aas
pop
in
cmpsb
and
cmp
sub
dec
xor
xchg
aad
in
push
rcpps
in
mov
cmpsb
aas
jle
mov
cli
incb
mov
add
pop
pushf
loope
and
sbb
pop
mov
lea
xchg
sbb
orl
sahf
sahf
or
adc
jg
les
lcall
jb
adc
or
call
pop
lods
pop
jmp
mov
mov
cwtl
repnz
adc
loop
outsb
ficomps
cmp
outsl
mov
mov
clc
rcrl
decb
nop
push
lcall
cld
push
pop
mov
lret
xlat
jb
movsb
mov
imul
lcall
cli
clc
adc
lret
cli
adc
rcrl
js
cli
inc
es
xor
cmp
xor
jp
push
movl
sbb
mov
fisubs
out
sbb
or
or
sub
movsl
cmp
cmp
jmp
scas
xor
sbb
fnstcw
enter
sub
sub
ficoml
cld
push
scas
imul
out
inc
dec
dec
lret
sbb
outsb
mov
mov
daa
shlb
insb
fsubrl
sbb
cmp
fnsave
test
movsl
cmp
inc
aad
and
xchg
mov
mov
stos
cld
daa
mov
sub
scas
aad
xchg
or
adc
mov
stos
pop
pop
xchg
cvttps2pi
stc
jbe
or
outsb
outsb
mov
js
push
sub
xchg
or
pop
fisttpll
sub
ss
jmp
test
add
mov
cmp
test
cs
je
scas
js
inc
inc
xor
mov
cmc
or
in
dec
aaa
lds
mov
add
mov
pop
fwait
mov
clc
and
push
lret
pop
inc
sahf
dec
push
fidivrl
adc
in
lret
ficomps
faddl
lahf
mov
neg
fidivl
bound
jo
sub
jb
pop
insl
fsubs
pop
dec
sub
stos
mov
jne
ds
push
in
rep
cltd
push
lret
enter
xor
adc
lods
cmp
pop
iret
les
clc
inc
xor
xchg
arpl
lea
inc
add
cld
inc
sbb
mov
or
mov
movsb
cmp
js
sahf
cmp
mov
jecxz
test
insl
jb
sti
adc
adc
fs
jg
xor
das
aaa
out
mov
cmp
in
mov
push
jne
cmpsl
rorl
inc
call
pop
shrb
xchg
xchg
xchg
and
push
mov
inc
insl
ret
push
xchg
adc
add
pushf
cli
popa
cmpsb
cld
cmp
push
adc
jge
sbb
in
sub
addr16
cmpsl
cs
frstor
or
sbb
pop
cmpsb
jp
test
push
mov
add
scas
cli
movsl
xchg
aad
out
push
xchg
dec
cwtl
fistpl
mov
add
outsb
mov
je
mov
adc
push
dec
fistpll
mov
fbld
jns
lahf
mov
cwtl
push
not
and
arpl
cmp
dec
in
xchg
jg
loope
lods
jmp
inc
mov
scas
daa
fwait
call
ljmp
pop
or
push
mov
mov
outsl
or
lea
cmpsl
xor
iret
out
jmp
jecxz
insl
mov
mov
xor
add
out
dec
sahf
fwait
stc
pop
sub
or
test
out
dec
rol
lret
dec
mov
cs
pushf
sbb
add
lcall
jbe
push
xlat
mov
in
lcall
pop
outsl
xchg
and
aas
loopne
loope
xchg
lods
insl
sbb
push
sub
or
cmp
sub
and
mov
test
or
xor
and
mov
shlb
push
mov
mov
mov
jae
and
sbb
adc
inc
fisttps
cmp
dec
shrl
sub
or
imul
or
mov
fiadds
ret
pop
adc
pop
andl
pushf
addr16
iret
incb
jg
add
sbb
jp
fisttpll
dec
sbb
movsb
add
xchg
fiadds
add
mov
imull
mov
sub
lahf
lods
sub
pop
xchg
es
loope
loope
or
mov
aam
int3
add
xlat
push
add
stc
icebp
loope
jmp
xchg
mov
in
xor
sahf
add
push
jne
in
push
mov
xchg
mov
jns
sub
out
push
jecxz
aaa
imul
xor
lock
add
pop
loop
ljmp
sbb
push
add
sti
into
and
cmp
cli
fs
xor
pmaddwd
cmp
add
mov
in
popa
test
fsubl
and
stc
mov
pop
mov
sub
sbb
fdivrl
cmpsl
pop
leave
popf
popf
inc
lods
mov
jp
andl
movsl
shlb
pop
lret
ja
int
fisubrl
jo
clc
sbb
jb
cmp
sub
mov
jae
lret
inc
adc
cmp
sbb
mov
pop
jge
xchg
jmp
mov
ja
or
mov
inc
leave
sbb
ficoms
clc
sahf
adc
pop
cmpsb
jg
push
xchg
mov
std
push
lock
scas
dec
stc
cmp
enter
clc
mov
xor
imul
std
fbstp
mov
mov
sbbb
inc
bound
lods
sbb
adc
int3
sti
and
mov
shl
mov
pop
push
adc
fwait
push
xchg
out
es
call
mov
call
ds
jnp
cmp
sub
aad
jle
cmpb
rol
xor
inc
xorb
divps
push
xor
sbb
sbb
push
inc
jbe
mov
sbb
pushf
out
xchg
jb
inc
xor
dec
movsb
xor
jecxz
cmc
dec
les
sub
fimuls
daa
imul
sbb
sbb
push
or
int3
mov
pop
popf
xor
xchg
lret
dec
test
ljmp
mov
ljmp
ret
inc
call
dec
repnz
jns
sbb
insb
adc
sub
mov
cmp
in
add
jne
jle
cli
jno
sub
lods
add
pusha
repnz
in
stos
mov
daa
xor
dec
mov
sub
xchg
popa
addb
and
fiaddl
sbb
pop
and
push
pop
inc
mov
shl
test
outsl
add
jae
sahf
pop
loopne
shlb
fiaddl
stos
nop
xchg
insb
js
ja
repz
cs
lock
xlat
cmp
lahf
popa
int
in
aaa
arpl
and
xchg
enter
loope
xchg
mov
adc
mov
std
subl
sub
pop
mov
push
jg
int
mov
imul
pop
xor
in
sbb
cs
sub
and
mov
inc
popa
pxor
scas
lret
xchg
adc
push
fildll
cs
pop
fnstenv
rcrl
cmpb
adc
in
xchg
call
daa
test
aam
adc
jno
js
adc
push
sbb
icebp
cld
clc
rolb
and
or
es
hlt
clc
xchg
jge
and
test
shll
jg
pop
enter
and
int3
ror
mov
lret
out
cltd
sbb
mov
sub
ret
add
sub
je
cld
xor
inc
fcoms
lcall
mov
jmp
in
popa
sub
shll
rcrl
ret
lods
in
mov
fsubrl
push
add
nop
push
push
fs
dec
mov
jno
push
xor
pop
outsb
xchg
lea
dec
dec
lds
jmp
cmc
repz
and
je
sbb
and
sbbb
in
mov
aam
xchg
nop
add
sbb
mov
movsb
scas
sbb
repz
outsb
stc
pop
test
sbb
fwait
sub
dec
ja
divb
dec
sbb
xchg
divl
lods
add
mov
push
nop
adc
gs
push
fwait
dec
jo
and
rcll
fwait
dec
xchg
mov
push
pusha
add
loope
fisttps
leave
push
push
cmp
lock
xchg
jbe
sti
jmp
lret
mov
adcl
lret
cld
stc
movsl
je
dec
repnz
and
icebp
and
pop
loop
xor
clc
push
sahf
pop
inc
mov
pop
adc
pop
mov
ret
push
or
nop
add
sub
mov
xchg
mov
data16
int
jns
mov
mov
ret
mov
fmull
into
push
sub
cwtl
lods
in
stos
inc
pop
push
ds
jno
ja
jecxz
fnstsw
jg
mov
lret
mov
imul
cmp
add
push
add
mov
je
mov
addr16
fdiv
lret
pop
aad
push
scas
orl
lret
or
test
fistpll
inc
cmpsb
mov
aaa
imul
jnp
pop
flds
insl
js
ret
call
loop
add
popf
cmpsb
jbe
lods
pop
repz
jno
mov
mov
pop
dec
loopne
sbb
jecxz
stos
imul
popa
cmp
inc
add
dec
pop
dec
lcall
arpl
stos
sbb
outsb
nop
mov
mov
mov
mov
lock
cli
es
mov
mov
fs
jge
lcall
sbb
ret
adc
aaa
sub
adc
std
mov
jno
call
cs
add
jae
js
pop
pop
stos
cmpsb
es
jne
dec
adc
jmp
sbb
and
arpl
cmpl
dec
adc
sahf
incl
lahf
sbb
jae
and
sbb
inc
scas
sub
push
mov
xchg
jmp
push
bound
dec
stc
mov
iret
out
mov
fldt
mov
jmp
pop
sub
call
loope
sbb
push
and
mov
mov
pop
sub
dec
cmpb
imul
lock
je
push
xor
mov
xor
adc
repz
mov
push
adc
dec
out
stos
gs
mov
rclb
nop
cld
inc
gs
ds
or
inc
mov
xchg
dec
cmpsl
mov
outsl
ja
inc
aad
cltd
mov
in
mov
xor
sbb
mov
sub
xchg
dec
adc
mov
arpl
cld
ret
insb
push
push
dec
mov
add
mov
jae
sub
pushl
data16
push
imul
inc
xor
ljmp
jb
add
fwait
inc
ljmp
stc
xor
cmc
jmp
lcall
mov
cmp
xorl
outsb
fistpll
sub
mov
mov
mov
adc
push
test
stos
push
push
orl
xor
arpl
dec
or
xor
imul
jns
inc
hlt
fisubs
cmpsb
cmp
xchg
je
std
sub
mov
in
popf
shrl
inc
fstl
mov
sahf
fsubr
mov
arpl
dec
mov
mov
sbbl
inc
daa
and
sti
fsubrp
add
adc
add
loop
mov
adc
lea
add
pop
or
leave
push
int3
mov
mov
jl
mov
repnz
ret
cmp
pop
adc
ret
pop
push
jns
out
bound
and
idivb
jmp
test
dec
dec
repz
jb
sub
mov
jbe
push
cmp
fldenv
push
push
xchg
fnstsw
daa
mov
das
aas
test
scas
sti
inc
jle
add
xchg
dec
adc
mov
test
iret
hlt
pop
push
cwtl
mov
stc
push
test
int3
dec
loope
and
cmp
fcom
sarw
adc
pop
fstps
cmp
nop
jbe
outsb
aam
add
xchg
sbbb
pusha
fidivs
les
add
testb
mov
in
outsl
orb
and
sarb
not
idiv
lea
in
popf
xor
sbb
pop
xor
or
and
mov
lret
mov
lods
sub
mov
xor
xchg
adc
push
sbb
jp
dec
jne
inc
fistl
or
and
js
inc
mov
sbb
mov
aaa
jg
jo
pop
mov
mov
add
outsb
xor
adc
jmp
loopne
jle
cmpsl
sub
test
fisttps
into
adc
aad
stos
or
jae
js
in
iret
js
cld
sbb
pop
fldt
xchg
cmp
add
and
lods
pop
mov
add
xchg
sarl
jo
out
inc
test
in
push
je
jmp
jge
add
ss
add
xor
or
mov
sub
mov
add
pop
ret
inc
sub
adc
in
jnp
mov
pop
jp
and
jmp
test
or
push
sbb
jmp
push
inc
out
scas
push
lret
cmc
pop
mov
cmpsl
aam
ljmp
xor
sti
test
inc
jo
mov
cmp
in
shlb
pop
daa
bound
scas
das
mov
push
xchg
mov
xor
je
nop
cmc
pop
add
cmp
dec
insb
pop
pop
jbe
add
cwtl
mov
nop
sarl
inc
arpl
clc
inc
mov
mov
push
push
test
pop
clc
jne
addr16
mov
cltd
mov
dec
dec
cmpsl
sub
push
ljmp
lods
mov
jl
sub
dec
sub
sbbl
scas
jecxz
cmpl
push
push
fs
outsb
aaa
jge
xor
pop
leave
adcl
xor
push
xor
ret
orb
add
mov
inc
into
mov
mov
xor
punpckhbw
mov
ret
jg
sbb
imulb
idiv
or
ja
or
mov
decb
daa
cmp
dec
or
out
jnp
xchg
fs
adcb
in
inc
cli
out
cmc
test
mov
sbb
mov
jno
fcom
daa
mov
push
sub
notb
sub
cmp
lods
push
and
les
movsl
pusha
mov
arpl
mov
jl
icebp
mov
loope
adc
enter
sub
ja
jecxz
ja
in
into
and
cmp
inc
mov
jb
sub
xlat
push
cmp
pop
lods
test
mov
ficoml
incb
jne
fisttpll
ss
cmp
pop
inc
push
sarl
or
fstps
mov
in
add
test
jns
xor
cmp
daa
and
dec
idivl
xchg
inc
add
and
inc
fistl
xor
icebp
rolb
pop
addl
fldcw
loopne
loopne
sub
stos
and
js
xchg
hlt
imul
pop
clc
fcompl
pop
nop
inc
lods
cmpsl
aam
mov
dec
sub
sbb
adc
dec
cmp
xor
jg
lods
mov
fcmovu
pop
std
iret
inc
js
popa
xchg
mov
xor
sbb
and
cs
or
ljmp
cmp
outsb
fidivs
sbb
cmp
fs
adc
jo
pop
mov
negb
ret
cli
cmc
mov
mulb
divl
stos
sbb
lret
in
roll
addr16
imul
sbb
test
push
xchg
xchg
cmp
scas
popa
or
mov
xchg
loopne
dec
je
xlat
mov
mov
scas
add
adcl
nop
pushf
adc
mov
outsl
pushf
xlat
pusha
mov
fldt
js
mov
push
lret
xor
data16
and
aam
and
cmc
mov
inc
in
inc
pop
aaa
mov
out
mov
test
leave
fisttps
push
arpl
lcall
stos
cltd
mov
movsb
jl
pusha
jae
shlb
hlt
mov
imul
daa
sub
scas
ja
add
inc
mov
sbb
push
into
mov
sbb
sbb
pop
push
push
mov
aaa
jge
inc
push
das
xor
test
lcall
jnp
lods
repz
jle
inc
mulb
scas
cs
sbb
push
notb
repnz
inc
mov
mov
fnstcw
ljmp
outsl
clc
or
inc
push
icebp
mov
into
pop
xor
outsb
sub
pop
lea
jne
mov
xchg
jns
xor
mov
ss
xor
sub
fstps
mov
xor
int3
cld
imul
jl
hlt
dec
xorb
pop
pop
and
xchg
fsts
inc
adc
rol
cwtl
cld
cld
fists
xor
jl
sbb
dec
sbb
mov
dec
in
test
lahf
or
adc
jbe
push
pop
sbb
addr16
insb
xchg
mov
outsb
xor
sub
push
or
inc
pop
dec
xor
or
pop
data16
bound
jle
cmp
and
mov
out
sub
aas
je
mov
cld
rorb
mov
or
mov
in
push
and
or
mov
loopne
stos
dec
vcvtsi2ssl
add
imul
test
ljmp
xchg
movsb
sbb
int
shll
inc
and
loope
dec
sub
js
add
iret
mov
fdivr
sti
imul
orb
cs
cld
push
sub
add
mov
js
into
inc
inc
or
lods
outsl
mov
dec
mov
das
add
fists
mov
out
or
pop
or
pop
mov
mov
mov
cmp
out
lret
mov
sbb
cmp
sbb
pop
push
xor
fdivl
movsl
push
adc
cmp
test
push
xor
xor
insl
pop
inc
insb
mov
mov
stc
push
fwait
xchg
or
sarb
push
xchg
int
or
popa
xor
imulb
std
aas
xchg
add
cmp
sub
scas
lods
and
adc
outsl
adcl
pusha
adc
pop
gs
sub
loopne
addl
inc
sarl
hlt
inc
cwtl
aam
jne
es
repz
cwtl
mov
jmp
or
xlat
push
pmulhw
int3
cmp
mov
mov
mov
jne,pn
fmull
ljmp
mov
dec
mov
bound
or
into
sti
pop
bound
mov
out
pop
mov
and
or
icebp
in
or
pop
xor
adc
xor
stos
sahf
push
icebp
mov
ja
or
popf
popa
mov
cmpsb
lahf
cltd
jge
xchg
mov
mov
and
and
xor
jle
lret
js
xchg
in
dec
adc
cmp
adc
jo
out
xchg
outsl
aaa
cmpsl
lea
in
jle
aaa
out
adc
adc
inc
pop
add
loope
dec
inc
mov
aaa
in
and
add
sub
rol
movsl
lods
cmpsl
pusha
leave
push
push
sub
jp
xor
sub
rcl
imul
inc
stos
inc
outsb
sahf
out
pushf
mov
or
adc
lods
ret
daa
into
popa
sbb
sbb
jg
fcmove
or
and
std
or
sub
insb
stc
sti
fwait
test
test
in
pop
mov
mov
lods
filds
or
xlat
or
inc
and
mov
pop
in
outsl
pop
pop
pusha
stc
shll
adc
push
sahf
and
adc
and
leave
and
mov
mov
jb
arpl
dec
fisttps
imul
jb
nop
sub
dec
jnp
mov
add
xchg
cmp
adc
out
movups
dec
and
adc
std
das
insb
pop
or
lret
inc
hlt
std
dec
dec
aam
or
sub
adc
lock
test
or
and
inc
repnz
jmp
mov
mov
lret
jnp
sub
jmp
nop
dec
pop
push
subl
mov
cs
sti
jno
cmp
mov
sti
mov
cmpsl
mov
cmc
repz
push
sbb
subb
dec
mov
jmp
inc
push
or
mov
frstor
decb
cmp
mov
mov
push
sbb
sub
lock
jecxz
pop
daa
int3
bound
mov
pushf
repz
pop
addl
cmp
scas
iret
pop
mov
inc
pop
pop
lahf
jbe
xchg
xor
sub
ljmp
mov
inc
fldcw
jl
sub
add
pop
test
orl
xor
mov
aas
iret
movsl
push
into
mov
mov
scas
out
aaa
insb
sahf
test
xor
filds
jp
test
mov
pop
leave
fwait
cltd
addr16
in
mov
loope
hlt
loopne
ljmp
aaa
and
test
lock
aaa
inc
mov
mov
movsb
in
test
inc
cmpsb
popf
cmp
cld
dec
gs
push
stos
pop
inc
jl
dec
add
es
sbb
int
sarl
jno
xchg
sahf
push
shl
xchg
bound
add
mov
or
pop
or
pop
stos
lret
rcll
push
iret
cs
mov
lret
sbb
aas
jnp
les
sbb
cmp
and
lea
ljmp
mov
jae
fsubrs
pushf
ja
dec
cmp
lock
or
cmp
fidivs
scas
mov
sub
mov
pop
dec
gs
mov
fcoml
fs
mov
lret
das
sarb
and
cmc
pop
aaa
hlt
sbb
jmp
mov
shrb
int
out
rolb
loopne
loop
jae
xor
setne
push
rorb
sub
lret
mov
adc
out
fdivr
insl
cli
pop
rol
mov
icebp
push
mov
cmp
cmp
cs
loopne
movsb
mov
pusha
jb
and
sub
xor
inc
push
pop
cmpsb
mov
pop
cmc
mov
arpl
sbb
xchg
jmp
adc
sahf
pop
mov
inc
cmp
mov
mov
adc
add
inc
inc
or
push
outsb
inc
movsl
push
inc
pop
sti
mov
push
xchg
lods
sub
sub
fs
add
scas
sbb
jnp
mov
push
ljmp
lahf
inc
cmc
bound
test
test
enter
fidivl
or
into
mov
stc
das
dec
jae
xor
push
repnz
and
xchg
in
fstl
icebp
sbb
cltd
stc
div
sbb
scas
cwtl
lods
clc
add
mov
mov
popf
mov
cmpsb
xor
mov
jp
orl
sbb
dec
cmpsl
aam
dec
and
dec
dec
inc
sbb
sub
or
stc
pop
add
ljmp
daa
ljmp
sub
mov
sub
aad
and
mov
aad
stos
pop
faddl
sbb
icebp
xor
out
push
xor
das
pusha
pop
push
xchg
xor
fcompl
out
add
insl
cmp
js
push
or
pop
dec
jge
sub
faddl
arpl
addb
int3
sbb
mov
mov
scas
push
dec
jmp
outsb
mov
mov
je
push
mov
sbb
lock
ret
sub
fcmovnbe
cmp
inc
je
push
push
in
jecxz
les
jne
push
lods
adc
loope
sbb
xchg
je
add
xchg
addr16
inc
ja
out
sbb
dec
loopne
or
pop
lock
fucomp
sbb
imul
lods
and
add
sbb
jno
pop
stc
push
jne
aaa
enter
push
rorl
loopne
mov
mov
cli
call
cmp
fwait
sbb
je
cli
frstpm(287
test
add
cmp
pop
or
push
adcb
popa
mov
adc
sarl
cltd
pop
imul
mov
push
jle
xor
icebp
and
mov
leave
les
dec
movsb
movsb
nop
and
sub
arpl
xchg
in
cmp
pushf
rolb
xchg
adc
push
inc
ja
jmp
jge
xor
or
dec
pop
lahf
fdiv
test
cld
mov
inc
std
jns
aas
xchg
fnstcw
mov
imul
mov
loopne
mov
push
sub
adc
lcall
dec
aaa
xor
fnsave
sub
sub
int
mov
xor
bound
icebp
sahf
adcl
pop
out
daa
cmp
cs
push
jle,pt
movsl
xchg
inc
mov
lcall
subl
inc
fwait
movsl
sti
stos
push
jg
aad
jmp
fbstp
arpl
rcr
or
mov
hlt
stc
fstl
jns
dec
push
aas
mov
cmpsl
out
movsl
test
cmp
aas
sbbl
sbb
dec
lcall
mov
jmp
dec
fnstcw
dec
and
xchg
pop
and
mov
sub
pop
cmpsb
push
loope
pop
clc
aas
jnp
aaa
sub
or
dec
repz
sub
jl
rcrb
inc
lahf
jb
add
pop
lahf
loope
movsl
push
xchg
test
sbb
lret
dec
mov
and
xor
fstps
ret
fisubs
cld
shrb
cmp
inc
dec
or
or
jecxz
leave
mov
add
scas
cmp
cmp
xor
lds
mov
js
insb
xchg
mov
int
imull
jle
insb
push
mov
mov
rorb
enter
xchg
push
lea
stos
xor
cli
xchg
pop
cwtl
mov
leave
adc
dec
sub
add
fs
sub
ret
loop
movsl
sub
jo
jmp
or
adc
sub
jbe
pusha
data16
add
cmp
std
int
jge
cld
push
dec
dec
cmp
or
or
mov
mov
push
mov
xchg
adc
ffree
cli
cmp
pmulhuw
cli
pop
jmp
pop
lds
out
out
mov
inc
enter
mov
and
test
dec
xor
mov
adc
addr16
xchg
pop
repnz
mov
dec
push
sbb
ljmp
cltd
les
adc
fiaddl
xchg
add
cltd
outsl
xor
mov
clc
xchg
and
mov
jp
nop
add
js
not
fidivs
insl
push
jle
lods
pushf
pop
jg
sub
xchg
cmpsl
push
aad
fildl
mov
adc
jne
push
pop
shll
inc
imul
dec
push
push
push
les
fucomip
daa
inc
in
addr16
push
inc
ret
out
dec
mov
or
inc
mov
add
icebp
mov
cli
xchg
and
mov
inc
test
loopne
fsubrp
jl
mov
inc
je
fisubs
dec
mov
imul
call
mov
sub
jae
mov
scas
test
xchg
xchg
or
sahf
ljmp
add
cmp
enter
jl
jmp
sahf
mov
mov
pop
or
xchg
sub
gs
ffreep
inc
pop
fdiv
xchg
fwait
je
push
dec
int3
icebp
fs
imul
xor
push
mov
xor
dec
lcall
mov
movsb
cmc
ret
rcr
aam
iret
dec
sbb
repz
stc
push
into
xchg
inc
sub
out
mov
jae
js
inc
push
push
out
mov
loop
data16
sbb
daa
xor
mov
xchg
es
cld
sub
pop
add
lds
mov
sbb
or
sbb
push
jae
out
shrb
in
bsr
jmp
adc
out
add
es
imul
cltd
cwtl
push
cld
movl
and
dec
jle
out
jge
sti
mov
clc
xchg
sub
jecxz
in
sbb
sub
mov
ds
sub
sub
daa
xchg
push
xor
dec
add
dec
inc
insb
push
xor
sbb
out
scas
cmp
sbb
fistpl
popf
sub
mov
push
ja
dec
aaa
add
leave
or
jg
out
aam
mov
jmp
adc
mov
mov
push
add
dec
adc
je
mov
mov
push
push
add
popw
out
mov
adc
mov
stc
xor
adc
add
jmp
stc
or
push
or
dec
mov
testl
mov
jmp
arpl
jmp
stc
leave
test
inc
mov
cli
and
jecxz
inc
leave
mov
rclb
mov
lds
lea
push
or
imul
pop
out
scas
test
frstor
aad
scas
and
pop
sbb
or
sbb
notb
xor
mov
mov
xchg
data16
pop
jnp
sub
hlt
out
outsb
insb
inc
test
push
mov
jp
ja
in
stc
jp
sub
hlt
icebp
jb
popa
or
push
je
fdivrs
lods
shlb
stos
add
push
sub
loope
repnz
xchg
in
push
jl
int
add
xchg
pop
movsb
aad
cmp
data16
inc
pop
adc
adc
jmp
jae
pop
mov
ret
cmc
bswap
cmp
mov
xor
inc
or
cmp
cmc
gs
inc
fwait
sti
movl
je
outsb
sahf
pushf
pop
mov
adc
mov
xchg
pop
jmp
rcr
loop
cmp
lahf
or
data16
jne
mov
fcmovnu
xchg
sti
sub
push
adc
cwtl
sti
and
dec
ss
jae
aam
cmp
xchg
mull
std
mov
mov
into
adc
cmc
or
das
test
adc
jmp
mov
fwait
or
cmpsl
inc
imul
fwait
jbe
jl
lock
jmp
mov
or
popf
dec
iret
push
scas
mov
dec
jae
mov
xor
push
loope
add
sarl
pop
fiadds
lret
push
rclb
in
push
jbe,pt
and
movl
jne
push
nop
push
movsb
mov
fstl
inc
outsb
scas
mov
mov
cmp
sub
roll
xchg
or
xchg
subl
and
push
rcl
mov
aad
ja
mov
jbe
xor
ja
pushf
push
or
clc
imul
cmp
es
fwait
rclb
fnstsw
addl
pop
push
mov
faddl
mov
jle
fs
xlat
enter
cmp
mov
and
stos
adc
jle
sahf
mov
ljmp
sub
and
mov
push
outsl
inc
lcall
fwait
cmp
and
call
and
in
je
rcll
mov
xchg
sbb
mov
ror
jbe
sbb
test
clc
adc
pop
fmuls
mov
jno
pop
sub
sbbl
jge
mov
mov
loope
inc
pop
bound
das
push
mov
fdivrl
or
mov
ds
addr16
jge
sub
push
cmp
int
call
fildll
imul
pop
rolb
cmp
dec
cmp
in
aam
push
out
or
sar
xor
ret
adc
aas
mov
adc
mov
push
fs
js
mov
fcoms
into
jg
sahf
adc
lret
mov
pop
or
mov
gs
pop
testb
into
loopne
cmpsl
jle
dec
jbe
testb
pop
jmp
in
pop
cwtl
pop
sbb
dec
iret
loope
or
jo
cmpb
ds
test
cltd
ljmp
aaa
icebp
sbb
jnp
pusha
sbb
cwtl
sarl
mov
test
test
mov
push
rclb
cltd
and
mov
xchg
xor
sbb
mov
aam
pusha
enter
sbb
xchg
add
loop
int3
jge
cwtl
enter
ret
ja
xchg
push
mov
das
lock
iret
insb
std
mov
push
inc
js
insb
int3
cmc
icebp
pop
mov
mov
jo
sub
stc
mov
js
scas
js
cmpsb
jp
or
push
in
add
aaa
sbb
and
je
cmpsl
xorl
xchg
sarl
sub
or
push
dec
push
out
mov
rcr
or
in
icebp
imul
popa
imul
mov
cmc
fcmove
movsl
test
push
fdivr
mov
stc
out
mov
imul
sbbl
dec
cmp
lahf
xchg
int3
dec
fcomp
fistps
sbb
mov
xchg
sbb
sub
and
stos
aaa
cmp
faddp
add
mov
movsb
into
jp
fucomi
lock
and
jmp
pop
mov
xor
jne
imul
sub
mov
add
pop
pop
fwait
pusha
ds
mov
cmp
arpl
into
push
jp
push
dec
arpl
rol
cld
jae
mov
sahf
int
lods
je
push
dec
js
outsl
shl
bound
insl
lea
pop
push
or
dec
in
in
scas
mov
push
or
lret
lea
sbb
push
sbb
stos
sbb
xchg
mov
sbb
out
fimuls
inc
lock
std
push
mov
inc
push
and
mov
fiaddl
mov
rclb
std
cmpl
cmp
fsubrs
sbb
cmp
aad
arpl
mov
push
into
jns
mul
xor
add
mov
test
ret
insb
lods
push
push
gs
bound
or
jg
sub
adc
ljmp
lods
shlb
in
pop
cmpsl
imul
dec
add
and
out
sbb
aaa
lds
xchg
data16
xchg
mov
movsl
nop
test
subb
xchg
orb
addr16
mov
scas
sbb
in
mov
or
jne
mov
imul
pushl
aaa
pushl
mov
or
leave
jle
repnz
pop
imul
adc
insb
mov
int3
sar
jge
push
push
and
hlt
subb
inc
push
iret
or
pop
adcl
rorl
or
adc
ret
out
dec
cs
out
arpl
xor
daa
push
test
lods
int3
inc
inc
pop
mov
inc
mov
clc
out
sbb
rorl
push
out
push
roll
fldl
fwait
sahf
stos
and
cli
cmp
and
leave
mov
xchg
cmp
clc
out
and
push
sub
mov
insl
movsb
jnp
dec
sti
pop
push
add
pop
pop
adc
push
dec
loop
test
imul
sub
clc
or
or
daa
and
dec
movsb
jle
dec
ja
jb
fwait
cmp
test
pop
bound
push
scas
sahf
xlat
jmp
xor
cmp
sub
jb
pop
mov
faddl
leave
sub
roll
imul
pop
shl
divl
or
pop
addr16
xor
inc
ud1
inc
insl
push
dec
rcrb
lret
aam
push
cli
stos
inc
add
sbb
mov
push
pop
push
cmp
inc
jne
in
int
idivl
aad
mov
pop
add
in
mov
sub
lods
das
jae
mov
mov
xor
repz
mov
jae
xlat
pop
sbb
or
xor
and
rorl
adc
mov
push
sub
pop
cwtl
out
fidivl
popf
and
int3
push
mov
adc
rcrl
dec
imul
cmpsb
loope
movsb
sti
setp
pop
les
frndint
nop
xor
adc
mov
ds
pop
out
fdivrs
pop
insb
out
xchg
adc
mov
mov
daa
cmp
add
in
test
into
int3
pushf
sub
movl
ss
ja
inc
cmp
inc
mov
insb
dec
jno
mov
jmp
lods
pop
dec
or
pop
mov
push
and
dec
jns
adc
leave
andb
jne
fadd
inc
and
dec
and
js
mov
fiaddl
movsb
mov
mulb
adc
mov
movl
xor
fistps
loope
xchg
pop
dec
cmpsb
mov
fadds
movsb
or
aad
jmp
mov
iret
sub
inc
fidivs
pusha
xorl
adc
xor
pop
fwait
pop
mov
mov
pushf
jno
aas
stos
fwait
scas
rcll
bound
dec
fidivrl
inc
ss
xor
inc
nop
dec
xchg
jmp
fcompl
loop
icebp
lcall
sbb
mov
in
es
pop
dec
and
daa
lods
push
in
arpl
push
xchg
and
cmp
pop
mov
ss
gs
out
push
stc
mov
pop
dec
pop
push
jecxz
cltd
push
sub
or
push
in
rorl
jge
push
std
out
pop
ljmp
inc
repz
pop
inc
mov
lods
scas
cs
notb
sbb
insl
mov
sti
aam
push
mov
sub
cmp
mov
mov
mov
and
fwait
jmp
shr
cmp
pop
adc
inc
push
jo
dec
inc
jno
or
mov
ljmp
test
mov
push
inc
loopne
pop
dec
pushf
push
mov
cmc
inc
outsb
add
fwait
js
dec
dec
mov
xchg
xchg
push
rcr
gs
xor
div
mov
push
imul
xchg
and
mov
dec
xor
insl
inc
enter
push
loope
mov
imul
xor
mov
test
mul
aam
xchg
jbe
imul
mov
mov
ja
sub
les
test
jno
push
addr16
dec
mov
mov
out
add
aam
sub
enter
addl
pop
arpl
or
sarl
sbb
cltd
xor
in
lret
fcomps
pop
lds
or
clc
mov
rcrb
jecxz
sbb
dec
xchg
inc
xchg
push
mov
mov
in
fwait
xchg
cmp
push
imul
cli
lock
and
dec
sbb
arpl
in
sbb
jle
fdiv
scas
cltd
jae
cs
add
mov
mov
scas
xor
inc
js
test
add
dec
add
addr16
pushf
push
ret
cmp
lods
xchg
es
jns
sbb
inc
dec
fdivrl
or
xchg
dec
out
push
sub
inc
aaa
pop
and
ret
mov
adc
leave
fsubrs
xchg
xchg
jl
xor
popa
jge
pop
or
cli
jnp
pop
aam
cmp
pusha
adc
xchg
add
mov
push
mov
jae
idivb
pushf
dec
js
pop
cmp
mov
jecxz
adc
pop
andb
push
jmp
xor
or
sbb
nop
loop
ret
jno
outsl
inc
add
repz
icebp
mov
fs
mov
dec
push
pop
jl
jmp
outsl
in
movsl
or
mov
fcoms
outsl
ja
iret
xor
mov
stc
mov
out
jecxz
cmpsb
cmpsb
sub
int3
dec
sahf
sarl
cmp
jne,pt
dec
imul
movsb
or
dec
cmpsl
or
aad
fwait
call
vmread
add
rclb
stos
mov
cwtl
pusha
in
mov
or
aad
adc
lock
pop
out
in
jg
xchg
mov
movsl
fs
adc
jl
dec
add
lods
mov
mov
andl
jbe
pusha
xchg
movl
xchg
mov
dec
cld
ljmp
loop
fmulp
std
enter
stc
mov
add
stos
fcomps
clc
sbb
lret
arpl
push
mov
rcll
cmpsl
push
cmpsb
cmp
movsb
pop
repz
call
aas
scas
ret
outsb
mov
cmp
mov
data16
aam
fisubs
jmp
xchg
ss
ss
inc
sahf
subb
sarb
inc
enter
xchg
inc
or
out
mov
repz
sub
js
sub
test
ret
sbb
push
aam
cmp
mov
movsb
add
mov
loopne
rcrb
sub
xor
cmpl
aas
dec
outsl
pop
int
jne
mov
imul
fwait
mov
pop
cmpl
icebp
mov
fwait
out
mov
out
adc
mov
popa
cmp
push
inc
popa
ljmp
sub
orb
xchg
jmp
daa
int3
push
cwtl
pop
or
aaa
mov
jno
rorb
outsb
push
inc
inc
adc
or
int3
sub
add
cld
ss
ret
jmp
fsubrs
push
mov
sbb
mov
sub
dec
dec
pop
or
lock
int3
cmp
idiv
or
in
out
jg
repz
mov
lret
sbb
sti
xlat
daa
shrl
sbb
rorb
int
mov
ja
filds
jnp
mov
or
repz
push
xor
shll
out
popa
js
notb
push
lods
mov
jbe
or
pop
sub
sbb
cmpsb
nop
jae
cmp
in
sub
int3
xor
xchg
imul
inc
repz
pop
add
add
add
mov
jnp
mov
push
loopne
push
insl
js
into
sbb
xor
js
arpl
sarl
sub
daa
cmp
mov
lods
lods
mov
push
lret
cmc
cmc
sub
scas
cmp
test
cmp
or
rorb
insb
inc
imul
xchg
push
sbb
lcall
add
int
pop
jecxz
imul
es
mov
xor
or
mov
pop
xlat
push
sbb
mov
sub
outsb
adc
or
out
call
stos
adcl
stc
test
andl
popf
push
out
aam
aam
cmc
pop
shr
jmp
cmp
gs
lret
and
dec
insl
pop
in
inc
sub
cmp
rcrb
in
push
jno
lods
fstps
lea
out
inc
mov
loopne
incb
cmp
xor
out
xor
mov
cmpb
mov
lods
xlat
cmpsl
rcll
rorl
je
and
aad
jmp
pop
sbb
sbbl
insb
inc
les
cld
rolb
je
rorl
scas
stos
fadds
scas
mov
stos
fs
mov
popa
pop
cmp
cmp
dec
push
sbb
test
in
ljmp
sbb
and
jl
push
mov
icebp
test
js
lret
rcrb
add
mov
aam
mov
or
fisubrl
jo
jecxz
mov
stos
subl
int3
push
and
movsb
dec
sbb
ret
pop
nop
jns
mov
into
repnz
lret
arpl
adc
sub
jmp
decl
pop
and
icebp
outsb
pop
fldcw
push
or
mov
dec
jmp
cs
scas
mov
inc
pop
test
add
sti
out
pop
xor
shrl
adc
mov
lods
lret
xorl
jmp
aam
ficompl
xorl
add
out
ret
pop
mov
push
push
or
gs
adc
ss
push
mov
mov
loopne
lods
shrl
lret
mov
mov
push
or
cmp
cmp
outsb
std
and
cmp
pop
aaa
imul
dec
int3
cltd
es
pop
push
lods
xchg
cmp
out
sub
sbb
pop
cmp
sub
test
mov
dec
and
lcall
pop
add
inc
es
mov
inc
sub
cwtl
cli
push
jbe
add
jns
mov
and
jbe
icebp
negb
imul
jnp
mov
stc
addr16
shll
outsl
sub
daa
subl
mov
mulb
faddl
cli
xchg
xlat
push
fldcw
leave
xor
cmp
outsl
or
inc
icebp
push
lcall
pop
aas
aas
xlat
pop
sbb
lea
jo
dec
cmp
fisttpll
push
mov
xor
jecxz
adc
jmp
jns
fistl
into
das
aaa
shrb
pop
xorl
js
sub
into
repnz
mov
lret
xchg
mov
mov
lea
mulb
jmp
jnp
dec
inc
xchg
loope
inc
addl
pop
jb
mov
stos
jecxz
dec
jg
push
pop
mov
pop
mov
push
xor
daa
sarl
mov
gs
outsl
xchg
sub
or
inc
stos
xlat
pop
imul
daa
fisttpl
or
enter
ds
push
or
out
orl
dec
mov
xor
push
and
xorb
cld
repz
sub
or
mov
shr
mov
xchg
stc
nop
adc
inc
xor
loope
aas
dec
jge
and
push
popl
lahf
outsl
sub
jecxz
nop
roll
mov
mov
push
lds
sub
lcall
pusha
pop
xchg
stos
or
xchg
xor
into
jge
xchg
mov
addl
mov
pushf
adc
scas
pop
loopne
stc
cwtl
jbe
lcall
adc
mov
es
xlat
sub
jnp
nop
mov
bnd
fwait
adc
cwtl
pop
test
sbb
scas
int3
or
aad
outsb
gs
int
xchg
jecxz
push
idiv
loope
fdivs
enter
mov
mov
in
shlb
stc
sub
sub
jns
int
add
push
push
mov
jl
movsb
sbb
fbld
pop
xchg
lcall
mov
adc
das
mov
jg
jns
mov
cmp
leave
pop
sahf
push
pop
and
or
cmc
add
mov
cmp
push
movhps
mov
out
lods
pop
lds
in
xchg
jge
sub
cli
in
sbbl
or
cld
mov
test
or
lahf
movsb
arpl
test
pop
shll
int
imul
add
jecxz
add
dec
sbb
ja
fisubl
add
inc
inc
mov
mov
and
pop
mov
and
es
mov
mov
bound
arpl
flds
dec
dec
js
lods
cld
pop
pop
push
xor
scas
lea
adc
or
dec
es
aam
and
pop
ja
jle
insl
adc
add
adc
inc
or
mov
mov
stc
jp
stos
adc
cmpsl
daa
mov
lea
out
mov
imul
and
ror
loope
cld
inc
sub
jl
es
mov
xor
inc
sbb
dec
shlb
imul
or
out
push
pop
fucom
mov
jb
mov
fmul
je
fiaddl
mov
inc
or
sub
mov
cmp
or
pushf
mov
inc
rol
out
call
sti
pop
or
mov
sbb
scas
adc
stos
mov
sbb
mov
or
movsl
dec
hlt
in
jnp
dec
mov
lahf
mov
arpl
cmp
mov
or
sbb
lret
test
pop
pop
jb
xchg
push
adc
icebp
inc
lds
mov
inc
nop
sbb
enter
inc
repnz
cmp
pop
out
out
movsl
icebp
fwait
sub
add
mov
scas
inc
insb
dec
inc
rclb
cmp
mov
test
iret
arpl
fabs
xor
dec
xorb
in
jo
je
std
mov
add
lds
xchg
mov
gs
movsb
fisttpl
push
adc
push
sbb
xchg
enter
arpl
and
stos
xor
fdecstp
jl
xor
fldcw
cmp
push
mov
or
push
sub
adc
mov
xchg
in
jl
fisttpll
imul
jo
adc
addr16
inc
inc
sub
nop
or
adc
jb
insl
mov
sub
xor
cli
sarl
lods
dec
fildl
in
sub
pop
stos
adc
lcall
sub
mov
insb
mov
das
sub
es
shr
adc
dec
lahf
sub
icebp
add
aad
out
or
xchg
adcb
cs
lret
xchg
js
mov
divb
pop
mov
iret
adc
scas
fisubrl
cltd
pop
pop
lea
pop
gs
inc
je
lods
cwtl
out
mov
jae
into
nop
or
flds
mov
imul
repnz
sub
shl
hlt
push
mov
loopne
xor
mov
mov
sbbl
cmpsb
push
xchg
jp
pushl
adc
mov
mov
loopne
je
mov
in
stos
andb
or
daa
out
inc
outsl
mov
add
sahf
mov
cmp
mov
sub
stc
sbb
call
sbb
mov
mov
xor
cld
and
jg
scas
shrl
test
dec
sbb
sbb
sbb
dec
inc
sbb
fcomps
jp
dec
scas
dec
add
xor
pop
jp
sub
inc
stos
lcall
pop
movsl
in
pusha
mov
mov
push
cltd
xchg
sub
loop
nop
gs
ficoms
xchg
int
aad
sbb
or
mov
mov
pusha
cmpl
mov
mov
cmp
fistps
pop
xchg
in
pop
adc
std
mov
xlat
sub
je
push
xchg
js,pn
int
cmp
jns
push
data16
push
lds
cmc
jbe
mov
mov
jle
xorl
icebp
jnp
ficoml
repz
std
mov
jl
push
in
nop
roll
dec
xor
popf
jle
fsubl
fwait
imul
mov
xor
repz
mov
add
loope
std
gs
repz
popf
in
in
mov
movsb
mov
jge
fistl
mov
loope
in
lock
repnz
stc
mov
jnp
xor
push
pushf
inc
enter
jbe
xchg
pushf
sbb
das
je
jle
xchg
pop
hlt
rcll
adc
mov
neg
cmp
sub
popa
or
jns
pop
push
das
mov
push
xor
jae
xchg
incl
sbb
inc
mov
jo
scas
mov
or
cmp
sub
push
mov
xor
xchg
mov
push
inc
in
icebp
pushf
andb
das
and
xchg
and
jg
mov
and
aam
jg
inc
pop
inc
ljmp
and
jns
adc
int3
enter
mov
jbe
sahf
sbb
dec
gs
cli
daa
mov
jb
inc
mov
mov
mov
neg
add
shll
jbe
jno
aam
test
xorb
fs
cltd
add
sub
adc
icebp
das
cwtl
add
cwtl
jle
fwait
mov
xchg
into
jl
mov
cmp
clc
jl
inc
call
loope
dec
out
negl
clc
call
test
cmpsb
xchg
sub
pop
fistps
cmc
push
icebp
movsb
pop
mov
stos
add
inc
movsb
aad
and
push
fdivp
and
movsb
sbb
mov
mov
shlb
test
dec
ds
imul
call
cmp
xor
ffree
sub
cmp
jne
push
pop
cs
sbb
faddl
mov
pop
test
lcall
int
popa
int
popf
cmp
imul
enter
dec
adc
jnp
jns
fs
mov
add
dec
add
add
xchg
xor
dec
dec
sahf
push
pop
fidivs
mov
inc
mov
cld
mov
imul
lcall
scas
ficoms
push
sub
mov
mov
xchg
fisubrs
shll
shll
add
xor
repz
adc
fnstenv
das
imul
push
pop
dec
fimuls
pop
push
jns
das
movsb
gs
jecxz
push
push
lahf
leave
sub
push
push
sbb
mov
pop
xor
inc
fisttps
push
push
pop
out
and
mov
pop
and
pop
dec
lcall
rclb
sub
dec
cmpsl
gs
inc
movsb
iret
sahf
les
imulb
cmpb
xor
mov
mov
stc
add
add
xchg
cs
ret
jo
sbb
scas
mov
test
mov
push
stc
mov
pop
mov
mov
scas
push
push
adc
cmc
ja
xorb
mov
icebp
mov
pop
ljmp
sbb
fwait
out
mov
xchg
imul
fstp
mov
rclb
out
stos
and
and
out
xor
out
sbb
jecxz
pop
jo
inc
sbb
sub
stos
add
push
and
add
addr16
imul
aaa
loope
lods
popf
dec
inc
push
sbb
out
jae
data16
xchg
xor
mov
ror
sbb
mov
ljmp
fidivs
xchg
subw
lods
mov
mov
pop
notl
cmp
gs
mov
cld
push
mov
jle
arpl
mov
addb
lahf
in
sahf
cmp
add
cmp
mov
jl
mov
bndstx
rcrl
stos
mov
cltd
mov
lea
in
mov
inc
out
fidivrs
pop
cmc
xor
jecxz
xchg
adc
ss
imul
cltd
scas
shlb
int
pop
decl
sbb
xlat
xor
insb
dec
fstl
sub
nop
fisubs
fldcw
cmpb
jnp
mov
mov
xor
fnstcw
shrb
jge
and
dec
mov
inc
or
push
cmp
lods
mov
push
fwait
int3
sbb
fbstp
lea
mov
xchg
dec
mov
int3
add
pop
movsb
jl
or
stc
stos
repnz
cld
and
shlb
push
int3
cmc
and
out
or
not
repnz
add
enter
pop
mov
push
stos
test
push
popf
sarb
aas
ss
pop
cmp
mov
pop
pop
fsubl
pop
xchg
fnstsw
in
xor
mov
cwtl
int
dec
jbe
les
shl
push
test
mov
add
cmp
scas
adc
mov
push
jle
fs
shll
sbb
and
jmp
mov
xor
repz
jle
add
mov
jne
lods
pushf
jl
sub
jmp
push
fldt
dec
stos
popa
push
data16
lahf
sub
out
or
jle
in
adc
push
mov
stc
and
xchg
lcall
mov
jle
pop
xchg
movsb
add
lods
lds
fnstcw
addr16
addr16
scas
jnp
jns
pop
out
fwait
pushl
and
je
add
push
popf
inc
jnp
clc
lahf
jmp
mov
push
jbe
or
leave
cmp
in
pop
nop
imul
push
mov
flds
mov
lcall
sub
pop
mov
insl
dec
pop
add
sub
jle
imul
add
ds
test
jl
lock
adcb
je
or
xchg
lock
outsl
andb
push
mov
xchg
and
sub
repnz
add
jnp
mov
leave
lahf
sbb
jmp
mov
lcall
sub
jmp
vmwrite
inc
pop
shrb
mov
add
and
xor
push
mov
mov
mov
fcomp
jns
cmpsl
stos
xchg
adcb
sub
call
rol
add
jp
mov
adc
rcrb
mov
cmp
pushf
jle
or
inc
jge
jge
and
fdivrs
or
negl
cmp
sbb
jecxz
shl
cmp
mov
pop
in
ljmp
inc
repnz
shrb
jno
adc
imul
cld
push
adc
inc
fldcw
inc
jo
lods
in
sbb
orl
dec
aas
push
sub
mov
cmpsb
mov
add
jmp
icebp
repz
lahf
daa
dec
cmp
clc
inc
xlat
xchg
lcall
cmp
sbbb
test
jae
rorl
arpl
add
movsl
sarb
mov
leave
std
adc
push
mov
add
lahf
push
jle
mov
cmc
sbb
inc
aad
ss
les
sbbb
data16
test
loop
clc
imul
adc
leave
negb
dec
mov
insb
ficoml
aam
fwait
mov
rcrl
xchg
xor
shr
mov
mov
out
insl
and
loopne
pop
insl
jne
stos
cmpsl
int3
pop
fsubrl
mov
pusha
push
les
push
pop
adc
xchg
xchg
xor
lods
and
sub
ret
mov
rcr
dec
xchg
pop
dec
popa
in
out
xchg
push
cmp
or
pop
in
das
sbb
inc
lcall
int3
xlat
and
jne
xor
mov
in
xor
jno
mov
ljmp
movsl
jecxz
jno
push
xor
subb
pop
ljmp
sbb
cmp
mov
lret
out
push
scas
insb
dec
lods
mov
xchg
pop
push
repnz
sub
xor
cmpsb
in
out
add
jl
aad
arpl
call
test
enter
scas
mov
pop
test
or
out
jbe
test
mov
adc
fldenv
fwait
rcrb
out
into
cltd
push
xchg
jmp
jns
pop
cmc
jo
ja
xchg
cmp
leave
movsb
xor
rorl
push
push
or
movsl
and
and
gs
out
pop
sbb
sub
push
push
repz
mov
ret
mov
mov
shr
sbb
pop
stc
sub
jge
push
andl
popa
mov
or
sbb
test
add
loopne
stos
xchg
mov
loop
inc
xor
add
loop
outsl
aaa
pop
pop
shlb
les
dec
iret
sti
jg
cmc
mov
jae
movsl
fnstsw
lea
arpl
jle
mov
sbb
test
jb
cmp
jecxz
inc
jnp
xor
adc
lret
cmpl
jle
xchg
lock
adc
orb
sbb
add
fidivs
and
mov
sahf
push
jge
fwait
in
mov
cmp
xlat
into
pop
mov
pop
outsb
pop
cmpsb
sbb
rorb
psubq
les
fwait
scas
aas
rcrl
lods
jmp
aam
push
lds
shlb
cmp
dec
mov
dec
inc
sbb
addb
das
dec
ja
scas
or
and
or
inc
mov
push
add
lock
cmp
fs
das
xor
ja
incb
jb
movsl
outsb
pop
movsl
xchg
sarl
fsubl
inc
inc
inc
popa
mov
push
cs
loope
jle
push
std
imul
icebp
inc
mov
loop
jle
clc
rorl
subb
fistpl
enter
push
test
cmp
inc
test
push
xchg
lahf
push
call
jae
pop
push
dec
mov
lea
mov
jle
dec
icebp
shlb
xor
add
cmp
dec
sbb
popf
pop
push
pushf
dec
mov
mov
mov
shll
fisttpl
xor
jmp
sbb
divl
and
add
push
pop
dec
dec
add
js
xor
dec
cmp
mov
lret
lcall
or
push
jecxz
imul
pop
mov
pop
xchg
mov
orb
hlt
cwtl
mov
stos
stc
dec
js
mov
adcb
mov
test
adc
lcall
lock
sbb
sahf
movsb
lods
aas
adc
push
test
arpl
cmpb
shlb
sbb
daa
adc
faddl
call
jg
das
dec
roll
cmp
dec
rorl
test
fdivr
dec
bnd
xor
mov
jae
xchg
adc
pop
inc
lcall
popf
jle
sahf
lods
pop
dec
inc
test
xor
incb
mov
push
iret
fsubrs
or
sbbl
inc
cs
sub
stos
add
adc
ret
cld
dec
test
pop
lret
jmp
aaa
addr16
push
scas
fbstp
mov
or
xor
mov
out
sahf
jmp
call
out
sub
cmc
xor
cs
push
cld
int3
imul
arpl
insl
mov
ds
lcall
xchg
adc
push
and
mov
pop
mov
jle
adc
push
aas
mov
sub
ss
dec
push
es
aaa
dec
xchg
xchg
adc
in
sub
add
xchg
xchg
fstl
mov
sbb
mov
dec
add
mov
xorl
dec
imul
lods
imul
pop
loop
dec
adc
icebp
push
pop
add
and
sahf
xchg
and
and
xor
mov
cmp
es
das
jo
test
dec
xor
call
mov
push
and
xchg
test
sti
pop
cmp
pop
ret
cmp
xlat
mov
mov
jbe
fwait
add
in
rcrl
enter
fwait
aad
xor
sub
lods
or
xor
pop
leave
jecxz
lods
mov
jmp
scas
xchg
pop
inc
fdivs
addr16
push
jo
dec
movsl
aas
insb
mov
sbb
cld
int3
lcall
rcll
add
xor
or
pop
popf
in
mov
inc
or
inc
imul
and
into
cs
sahf
pop
lret
cmp
stos
sahf
es
mov
js
jo
adc
icebp
cltd
rcl
cwtl
stos
test
mov
loopne
xchg
ss
test
aad
fldt
andb
xchg
mov
stos
adc
pop
pop
jmp
push
dec
add
xchg
inc
lea
pop
and
int
add
mov
push
outsb
xor
and
in
arpl
sbb
in
pop
push
or
jg
jb
out
popf
mov
lcall
adcb
pop
fcoms
out
leave
cmpsl
mov
test
fwait
insb
dec
sub
fmuls
test
xor
sub
subb
dec
into
out
push
ret
call
das
mov
dec
call
sub
lahf
jbe
sbb
mov
das
and
fldcw
repz
pusha
xchg
scas
fadds
mov
inc
inc
mov
cmp
mov
int3
sbb
xor
movsb
mov
retw
jmp
pop
test
sbb
mov
and
popa
scas
dec
push
cli
jb
mov
or
sub
pop
or
adcb
mov
insl
xchg
pop
pop
dec
jbe
cmp
cli
mul
lock
mov
dec
pop
outsb
iret
xorl
outsl
xchg
arpl
pop
jmp
lods
mov
jne
xor
mov
xlat
in
adcl
ror
sub
pop
leave
sbb
dec
push
shlb
loopne
icebp
mov
pop
in
sbb
leave
cmpsl
mov
sbb
jae
je
xorb
mov
mov
mov
mov
jne
inc
cmc
push
jp
outsb
pextrw
dec
in
adc
movsb
xchg
cs
test
shlb
arpl
xchg
rcll
or
adc
cmp
jge
jae
xchg
sar
in
sub
pusha
mov
or
inc
mov
add
mov
sbb
int
jecxz
pop
inc
cli
dec
insb
add
mov
lods
std
cmp
jecxz
xor
outsl
xor
outsl
add
cmp
mov
inc
loopne
xor
inc
push
xchg
pop
jle
das
imul
push
fisttpll
and
pop
jp
pop
int
cmpl
repnz
push
inc
negb
test
mov
cmp
pop
pop
adc
repz
mov
push
or
push
or
jl
sbb
push
mov
xor
sub
lods
pushf
mov
inc
andl
cmpsb
adc
bound
stc
popa
jle
lret
jne
adc
ret
fistps
add
je
dec
lock
std
cwtl
mov
maskmovq
testl
mov
jnp
xor
ss
out
pusha
ja
xchg
dec
data16
adc
jb
out
addl
rcrb
mov
leave
int3
jnp
fwait
lods
lret
xchg
push
push
cmp
test
mov
test
xchg
sahf
shll
imul
mov
ja
pop
cmpsl
shll
stc
xchg
and
adc
call
mov
xor
mov
aaa
inc
leave
add
addr16
lea
cmp
sub
mov
xchg
pop
pop
adc
cmp
pop
xchg
fpatan
gs
das
out
push
outsl
push
xor
mov
jmp
sub
cmpsb
gs
fistl
shl
cld
mov
jae
cmpb
out
fimuls
mov
inc
iret
add
xchg
pop
movsb
add
adc
inc
icebp
sub
jns
out
leave
cmp
pop
sub
add
iret
out
pop
inc
cwtl
cmp
jne
pop
and
add
ljmp
fs
cmp
dec
js
mov
rcrb
fdivl
jge
and
nop
adc
lcall
pop
dec
test
fadd
sbb
into
aaa
cs
cmp
push
loop
xchg
cli
sub
xchg
sbb
jl
dec
inc
pop
sub
push
dec
adc
imul
pop
mov
dec
icebp
lret
mov
ja
in
mov
mov
in
fildll
add
aas
or
mov
lcall
pop
sub
into
jo
mov
pop
clc
jb
add
subl
add
pop
daa
fcom
mov
push
cld
mov
in
push
mov
or
daa
sub
stc
lret
dec
xchg
mov
inc
lahf
loope
fistl
ljmp
fsubrs
clc
gs
pop
jle
dec
lret
in
adc
loopne
mov
pop
repnz
add
and
invd
mov
test
gs
jle
cmp
fstpt
add
movsl
test
push
mov
mov
idivb
or
push
dec
mov
cmc
and
or
dec
cmpsl
inc
aam
repz
fcomi
imul
sub
insb
inc
add
jge
adc
fs
sub
dec
sbb
adc
inc
sub
test
sbb
push
jge
fisttpl
pushf
push
push
sub
jbe
pop
cmp
ret
inc
mov
sub
or
cmove
aaa
sub
xchg
mov
push
xlat
ja
ljmp
jge
xor
mov
outsl
dec
xor
sbb
out
sarb
loope
sbb
int
aas
push
addr16
lret
dec
xchg
movsb
cmp
enter
push
cmp
test
sub
jbe
pushf
mov
jns
or
xchg
iret
pop
loop
and
movsb
loope
shlb
stos
xor
fcmovne
or
jo
push
pusha
ljmp
aas
adc
sbb
pushf
rcll
mov
jb
bound
test
inc
adc
cmp
mov
shrb
test
mov
cmpsb
shll
or
inc
lret
pop
or
mov
cmp
fcompl
push
insb
push
outsb
xlat
jl
stc
mov
rcrb
cmp
mov
das
test
movsl
mov
call
es
sbb
push
push
popa
std
test
loopne
daa
mov
sub
lds
inc
shl
ja
aad
add
jp
jg
imul
mov
lret
cli
outsl
imul
push
int
xchg
stc
push
nop
arpl
jle
popa
cmp
add
mov
hlt
lods
pop
movb
push
sti
mov
stc
lds
addr16
cld
push
ret
or
movsb
mov
jae
mov
pop
sub
out
es
jno
xchg
loopne
out
repz
cwtl
add
mov
xchg
cwtl
sti
jmp
lods
cmpsb
dec
push
arpl
push
jecxz
sub
ficomps
test
xchg
and
mov
loopne
xor
rcr
sbb
or
or
hlt
jae
push
into
jp
arpl
sub
push
push
orb
adc
mov
ja
jo
lds
push
fisttpl
mov
and
mov
popf
mov
cmpsb
sbb
enter
xchg
in
pushl
or
dec
test
sti
jle
fwait
mov
sub
jns
cltd
sbb
fdivr
pop
mov
xor
shl
ds
add
cwtl
rorb
imul
andb
hlt
push
xor
and
sub
cmpl
xor
cltd
fisttps
sbb
cmp
outsl
rorb
cmpsb
imul
xorb
jle
stos
inc
xchg
pop
lcall
mov
fisubl
push
mov
cs
into
push
mov
stos
lret
mov
and
or
ret
out
pushf
cs
gs
dec
adc
or
ljmp
movsl
shrb
push
sub
pop
mov
mov
dec
xor
outsl
cmpsb
xor
hlt
adc
std
scas
rcrl
push
push
jecxz
lods
or
inc
lods
pop
push
cli
rorb
repnz
dec
sahf
addr16
fadd
sub
test
filds
test
icebp
lcall
clc
adc
and
dec
sbb
insb
rclb
lar
inc
scas
aad
or
mov
popa
or
dec
pop
call
mov
mov
cwtl
mov
nop
stc
mov
scas
mov
cmp
jnp
mov
inc
add
imul
repz
mov
rorl
push
dec
jmp
sub
push
movsb
push
and
leave
out
arpl
imul
outsb
iret
sbb
nop
sahf
cmp
sbb
loop
xchg
push
lds
mov
add
sbb
ds
enter
inc
push
ds
das
js
inc
test
fadds
xor
mov
sub
mov
fcmovnbe
sub
or
add
scas
cmp
xor
inc
fimull
xor
stos
fimuls
pop
sub
leave
mov
lods
out
mov
push
xor
sarl
mov
jmp
push
out
es
push
cltd
mov
fstps
mov
out
xchg
push
add
int3
ja
cld
aad
ret
insl
jge
imul
cmp
or
mov
lahf
adc
mov
add
stc
cmpsb
inc
arpl
sbb
mov
cmp
add
shrl
in
or
cmp
mov
or
add
addr16
out
lcall
add
cmp
lcall
nop
cltd
push
sbb
push
jno
jg
push
iret
sub
pop
jns
jno
testb
xor
dec
mov
pop
mov
xlat
mov
adc
test
add
dec
add
xor
int
insl
xorb
pop
aaa
ret
cmp
mov
cmp
hlt
xor
mov
ljmp
gs
cmc
cmc
jo
cmpsb
push
into
add
popf
jg
in
xor
mov
or
lods
add
out
mov
out
sbb
je
data16
jnp
push
ljmp
rorl
cmp
pop
scas
out
aaa
cmp
hlt
push
and
sarl
adcl
and
test
cmp
call
adc
jns
dec
jp
pusha
sub
cmp
imul
adc
lds
xchg
pop
sarb
xor
cmp
inc
xor
jle
lret
cmp
bound
jecxz
aas
inc
leave
sbb
fisttps
stc
jns
leave
push
das
push
jo
mov
ret
mov
lret
xor
and
adc
out
and
js
sar
scas
rcrl
jne
arpl
pop
outsb
pop
gs
inc
jg
sub
in
mov
pop
dec
dec
or
les
dec
lea
int
dec
aas
mov
mov
add
mov
mov
mov
mov
out
inc
mov
or
adc
repnz
int
test
xchg
cmpsl
fs
or
push
aad
mov
push
scas
dec
cmp
jne
cmp
ret
jecxz
xor
sbb
flds
into
iret
incb
push
ret
jb
cld
add
and
lea
mov
scas
inc
lods
mov
in
pop
jns
out
popa
out
pop
out
ja
lahf
pop
leave
out
insl
jle
cltd
loop
inc
pop
popf
cmc
lahf
adc
sti
dec
mov
icebp
add
out
ret
je
out
call
dec
int
push
daa
or
test
popa
adc
fsqrt
sti
mull
cmp
pop
inc
sub
xor
or
mov
mov
cmp
inc
and
pop
add
bound
sbb
or
cmc
repnz
xchg
pop
push
ja
lea
xor
jp
sahf
xlat
movsb
cmc
pop
loopne
in
iret
xchg
adc
out
shlb
mov
lcall
inc
subb
adcl
test
test
xchg
pop
imul
bound
fidivs
push
outsl
pop
mov
insb
sarl
push
xchg
sbb
notl
push
pushf
lcall
aad
mov
leave
mov
sbb
sahf
adc
pop
data16
sub
mov
out
inc
xlat
mov
adc
mov
mov
inc
shl
push
xchg
outsl
in
mov
rorb
push
inc
mov
divl
int3
ret
push
lret
xor
jae
jge
xor
sahf
movsl
das
fwait
popa
shrb
fiadds
mov
mov
repnz
fwait
in
push
jae
movsb
hlt
mov
and
std
mov
add
mov
arpl
lea
push
mov
cmp
outsl
pop
mov
add
sub
fldl
mov
daa
je
sub
mov
jb
mov
mov
insl
jno
incl
xor
push
int
enter
lock
insb
or
mov
or
rcr
push
les
xor
dec
imul
inc
bound
cli
es
ds
dec
ljmp
in
xchg
jp
mov
xchg
das
mov
aas
xor
lret
mov
mov
pop
sub
inc
nop
pop
jno
pop
xchg
cmpsb
inc
push
aas
inc
xchg
stc
test
push
inc
xchg
arpl
out
imul
mov
std
add
sbb
insl
shrb
add
adc
and
arpl
jae
sub
add
aam
add
movsl
xor
add
add
sti
fisubrs
cmp
cmp
rol
push
pop
xor
movsb
out
push
dec
cmp
ret
fs
mov
mov
jae
fisubrs
push
pop
pop
cwtl
pushf
pop
push
sbb
and
insl
mov
aas
push
movsb
cmp
and
outsl
sub
ret
leave
cmpsl
or
sub
cwtl
or
stos
sbb
sub
and
sbb
push
xchg
icebp
push
ljmp
push
out
sbb
int
or
lret
out
lods
xor
imul
stos
push
repnz
cmp
pop
iret
mov
pop
int
or
aas
xor
mov
adc
das
int3
pop
out
cmpsb
lods
outsl
out
cmp
call
lret
mov
jge
mov
arpl
xor
leave
arpl
xchg
xchg
xchg
push
lock
sarl
mov
inc
fsubr
jmp
cmc
add
js
sbb
movsl
add
sahf
dec
xchg
orl
jg
rcrb
dec
lods
fbstp
dec
mov
negl
or
jmp
sub
sti
mov
dec
test
gs
mov
and
rcrb
ja
popf
jmp
sbb
mov
repnz
mov
dec
jns
pop
adc
popa
lds
popa
sub
xchg
ss
insb
mov
rolb
mov
jbe
pop
add
pop
fyl2x
arpl
imul
mov
jae
add
jne
pop
push
test
mov
aad
call
ds
fstl
jmp
lock
sti
cmpsb
jae
jp
pop
test
push
fucomip
xor
dec
outsb
xor
jb
outsl
add
sti
mov
popf
pushf
sub
popf
dec
std
inc
fmull
leave
xor
or
cmp
add
xor
call
scas
jle
js
cmc
imul
stos
jno
dec
outsb
mov
jnp
cwtl
xor
mov
pop
aad
xchg
dec
and
lahf
pop
je
push
in
in
inc
push
or
popf
xlat
scas
test
arpl
push
inc
mov
lea
fstl
lods
dec
adc
insb
add
xchg
push
pop
jecxz
popf
adc
and
outsl
dec
xor
inc
pop
pop
xor
xchg
pop
lds
sub
dec
add
aas
push
lods
xor
pop
or
shlb
jle
decl
sub
push
arpl
add
ret
cltd
data16
jge
sbb
inc
mov
ret
shrb
dec
repz
and
sub
adc
stos
jo
psllw
pop
ss
sarb
rolb
inc
jmp
dec
imul
loope
pop
jo
daa
dec
iret
jb
jmp
sub
dec
xchg
call
clc
and
imul
adc
push
or
add
push
adc
mov
mov
add
scas
les
movsb
dec
insb
xor
sti
popa
into
mov
dec
or
inc
xor
adc
jmp
push
aad
sub
jo
inc
or
sbb
addr16
pop
test
gs
mov
and
xchg
push
mov
sbb
outsl
xor
mov
inc
leave
cmpsb
add
call
mov
xchg
les
mov
inc
cs
dec
enter
icebp
adc
and
xorl
outsl
and
add
mov
fsubrs
pusha
dec
mov
push
dec
add
xlat
and
push
je
adc
out
enter
stc
mov
dec
lahf
pop
mov
mov
xorl
sub
mov
cmp
test
fimull
cmp
xchg
lods
xchg
mov
insl
mov
sub
mov
in
cmp
mov
jle
outsl
cmp
push
jg
mov
inc
popa
mov
montmul
cmpsb
les
mov
leave
add
leave
sti
and
pushf
lcall
sbb
imul
xchg
add
cmpsb
mov
lcall
aad
dec
jnp
and
mov
and
fwait
sbb
adc
hlt
add
jb
imul
sub
add
shll
xor
stos
outsb
lods
xor
leave
cmp
sub
std
mov
in
test
jmp
and
jbe
enter
sbb
jecxz
add
insl
push
inc
cwtl
rorb
out
xor
fstpt
mov
filds
addb
dec
popf
jno
lods
add
jmp
stc
xchg
push
pop
test
push
add
mov
mov
aad
rcrl
jmp
imul
stc
pushf
xorl
mov
stos
aad
sti
or
xor
cld
clc
inc
gs
mov
fs
testl
and
insb
sub
inc
rclb
das
addr16
mov
add
stc
das
xor
sbb
data16
cmpsb
cmp
insl
push
scas
outsb
xor
ja
or
nop
add
push
rcrl
test
sub
test
scas
inc
inc
scas
or
pop
sub
int3
insb
add
leave
push
test
out
sbb
mov
inc
addr16
xchg
icebp
fxch
popf
or
dec
jl
repnz
stos
add
mov
push
pop
jne
dec
loopne
mov
or
shl
dec
out
popf
pushf
mov
pushf
notb
nop
xchg
movaps
xor
xor
mov
sbb
mov
push
mov
inc
jl
popa
mov
pop
fisttpl
mov
inc
sub
mov
lcall
lods
in
xchg
add
cmpsl
sbb
sbb
addr16
sub
shlb
push
lcall
add
test
pop
jae
add
shlb
xor
outsb
mov
sbb
ret
cmp
lock
jb
aas
pop
push
ret
or
in
mov
push
push
mov
test
dec
jg
pop
mov
xchg
out
scas
xorl
popf
dec
mov
cmp
adc
in
fmull
mov
cmp
add
jecxz
mov
or
inc
or
in
data16
faddl
ljmp
dec
popa
cmp
inc
lcall
xor
add
call
das
xchg
jb
and
loope
mov
das
popf
adc
movsb
cld
pop
push
lcall
fldt
es
cmp
mov
shl
and
mov
cli
jmp
bound
lret
push
xor
xchg
pop
bound
fwait
inc
cmp
fbstp
lock
mov
cmp
sub
push
pop
adcl
dec
jg
push
in
inc
lea
pop
add
into
xchg
cli
add
jl
adc
dec
mov
inc
or
jp
pop
lea
cmp
test
out
pop
mov
mov
test
movsl
jg
cmpsl
push
call
ja
in
xchg
mov
ficompl
arpl
or
cwtl
in
mov
cmpsl
cmp
stc
pop
les
mov
test
jnp
add
mov
jae
mov
xchg
test
popa
lods
cmpsl
sahf
stos
push
inc
push
out
fsts
lahf
xor
xchg
pop
int3
stos
lods
sti
pop
std
insb
jge
mov
adc
scas
sub
cmp
cmpsl
push
out
out
mov
push
aaa
mov
ja
inc
add
std
ficoms
aas
dec
inc
push
sub
loope
inc
int3
filds
mov
fdivrl
xchg
inc
cmpsl
jge
dec
ja
pop
dec
inc
imul
lcall
mov
push
mov
xor
xchg
cmp
pop
cmp
and
pop
jg
xor
insl
mov
out
mov
fstps
sahf
adc
scas
ret
xchg
cmpb
cmpsb
push
cmp
dec
outsb
into
pusha
popf
sbb
push
mov
dec
lcall
stc
inc
mov
xor
push
lcall
mov
cmp
stos
push
adc
adc
loope
inc
movsb
cmp
subl
add
pop
mov
leave
jo
push
pop
lds
adc
pop
das
inc
les
jle
daa
mov
cltd
cmp
inc
dec
rclb
mov
out
mov
xchg
xchg
xchg
mov
inc
mov
adc
jl
test
addr16
add
call
xor
cwtl
inc
out
sub
dec
xor
andl
xchg
ja
pushw
pop
ja
js
in
mov
fs
xor
xor
test
loop
testb
add
sub
orb
icebp
ljmp
cmp
jbe
inc
and
mov
rcl
jb
out
andl
aas
mov
jge
stos
push
mov
push
pusha
or
push
pop
xchg
sub
subl
mov
loope
mov
gs
ds
push
jno
sahf
sbb
xchg
adc
xchg
sbb
jae
mov
rcll
push
ret
arpl
mov
icebp
jno
push
int3
mov
add
or
mov
loop
pop
and
stc
cmp
stos
mov
xor
adc
or
mov
add
inc
rcll
mov
dec
sbb
inc
fs
lock
jp
pop
mov
xor
sahf
fildl
jae
or
mov
dec
outsl
lret
aad
in
lock
xor
sti
sbb
imul
inc
and
mov
and
push
sub
movsl
push
stos
sub
outsl
enter
adc
mov
add
leave
clc
faddl
into
add
les
and
cld
sub
ja
mov
push
lock
cmp
outsl
sub
mull
mov
in
pop
adc
in
clc
out
popf
fnsave
jno
test
xor
lods
inc
mov
pop
pushf
push
out
sub
jle
xor
and
and
bound
lods
jbe
in
pop
test
loope
shlb
movsb
pop
int
jge
xchg
inc
mov
gs
mov
scas
or
stos
dec
cmp
jns
je
js
mov
insl
cli
xchg
test
shl
jecxz
pop
cltd
mov
and
call
cmp
push
shlb
sbb
enter
and
push
ss
pop
inc
xlat
jge
stos
pop
sbb
rolb
and
dec
inc
add
sti
mov
and
and
outsb
inc
dec
cmpsb
cmp
push
cs
ret
mov
xchg
leavew
in
jge
les
pop
fst
and
insl
mov
test
inc
int
mov
loope
xor
add
stos
mov
shrb
outsb
push
pop
xchg
ja
lock
mov
iret
dec
xlat
out
outsb
pop
mov
cmp
int3
and
fsubl
insl
lods
in
mov
sub
dec
pop
push
pop
xlat
jecxz
mov
mov
movsl
je
pusha
in
sahf
fmull
pushf
out
xchg
mov
mov
aas
lea
cmc
mov
sub
xchg
fisttps
notb
inc
jno
mov
mov
inc
lds
jae
jmp
in
repnz
or
aam
add
in
out
add
sahf
dec
push
push
push
in
mov
inc
movzwl
adcl
es
add
pop
lods
in
push
setne
inc
adc
push
sbb
lret
add
xchg
or
pop
mulb
hlt
pop
insl
loop
pop
repnz
cld
mov
sar
xor
mov
xchg
js
div
dec
push
call
cmc
notl
inc
aas
int3
sbb
inc
mov
add
or
pop
lock
dec
decl
aam
mov
cs
xchg
lods
rorb
hlt
xor
dec
or
mov
jne
add
cmp
pop
pop
add
inc
stos
dec
in
stos
and
mov
sbb
pop
jae
xor
js
leave
fcmovnb
rcll
lret
jne
jae
mov
sbb
sbb
lds
int3
in
xorb
aas
jl
push
inc
sbb
loope
scas
pop
xor
inc
pop
lcall
sub
fdivrl
ja
and
clc
arpl
sbb
ret
ljmp
fwait
in
in
jmp
push
arpl
jno
xchg
inc
cli
adc
or
pop
shl
mov
cmc
pop
push
cmp
jg
pop
xor
mov
stc
mov
xchg
or
addr16
fs
pop
cmp
rorb
inc
add
rolb
lret
adc
pop
stos
icebp
adc
push
inc
adc
rcl
rcrl
ja
leave
and
call
movsb
or
rdseed
fimuls
jnp
cld
sub
jo
cmp
fmul
cmpxchg
dec
lret
popf
pusha
iret
mov
leave
dec
ljmp
call
pop
shrl
sahf
sahf
xor
pop
lahf
dec
xchg
scas
push
cmp
lret
int
push
mov
inc
xchg
outsb
mov
push
fists
test
or
in
ljmp
sub
in
pop
pop
mov
pop
pop
sub
mov
mov
sbb
or
mov
jle
or
rolb
es
sub
lock
xchg
push
dec
or
pop
mov
jmp
mov
jno
cmp
jecxz
call
lret
pop
push
pusha
or
push
xchg
inc
jbe
aam
pop
lock
sub
xchg
mov
mov
mov
clc
xlat
add
push
lahf
sub
imul
mov
andl
loope
fdivrs
arpl
push
add
lock
ds
stos
test
xchg
mov
mov
push
jle
cmpsl
inc
aas
mov
xchg
inc
repz
or
insb
imull
mov
sub
and
sbb
aaa
jns
jae
or
sub
icebp
aam
jbe
xchg
je
jle
out
cmp
push
mov
ja
out
mov
pop
std
pop
arpl
in
or
sub
jbe,pn
out
sarb
dec
test
mov
lock
fldt
ss
xchg
in
mov
stc
mov
pop
xlat
pop
push
les
je
and
movsb
xchg
xchg
std
xor
lods
fiadds
push
subl
push
push
leave
stos
outsb
adc
aam
inc
rol
dec
loop
push
and
in
jnp
loope
imulb
je
int3
mov
cmova
and
pop
cmp
rclb
push
scas
fisttpl
pop
push
ljmp
add
mov
cmp
sbb
popl
cmpsb
fidivrl
jg
push
inc
push
daa
scas
jmp
mov
les
out
imul
mov
xchg
inc
test
mov
xor
sub
sub
lods
out
mov
loope
pop
mov
hlt
insb
imul
jns
mov
adc
imul
pop
call
cli
lea
adc
dec
push
jl
cmp
lods
out
or
jmp
xchg
dec
std
xor
add
sbb
cmp
adc
pop
mov
pop
jl
adc
add
rclb
imul
notl
incl
xrelease
data16
and
jne
lret
loope
lahf
push
xor
pop
and
pop
iret
ss
fisttpl
dec
xchg
mov
jp
cwtl
int
adc
xchg
jbe
shlb
mov
pop
jecxz
inc
mov
sbb
sbb
cld
jmp
dec
sub
and
into
pushf
aam
pop
xor
sti
ret
fldcw
out
sub
and
xchg
out
rep
jmp
outsb
inc
aam
pop
jl
mov
leave
inc
mov
adc
push
pop
outsb
lock
add
pop
pop
test
outsl
cld
mov
push
jbe
lcall
push
loopne
jb
outsb
dec
dec
shll
sub
pop
push
faddl
push
sub
xchg
cmp
fisubs
xor
outsl
or
stc
aas
add
pop
mov
out
sahf
or
cld
das
dec
sbb
fbld
cmp
pop
scas
mov
lahf
sub
sbb
adc
mov
cs
scas
mov
dec
inc
push
notb
fidivl
jl
adc
mov
pop
cmp
sbb
outsb
stos
pop
and
and
lahf
jae
lds
mov
mov
cmp
fists
cmpsb
cmp
mov
cli
cmpl
or
inc
dec
mov
dec
and
and
roll
and
cmp
sbb
add
jg
cli
mov
pusha
xchg
outsb
mov
clc
cmp
out
testl
gs
push
push
sbb
aam
out
cmpsl
lock
and
mov
jae
sub
je
into
cwtl
dec
add
sub
mov
aas
or
adc
sub
dec
je
jns
xchg
adc
mov
std
or
adc
or
push
sub
call
dec
inc
inc
cltd
inc
stos
sbb
imul
jge
negb
add
stos
mov
push
jge
cwtl
xchg
das
xlat
sbb
lods
fwait
call
inc
xchg
leave
fxam
loopne
andb
sarw
scas
ja
lock
enter
cld
jnp
and
nop
inc
sub
imul
cmp
sbb
stc
loop
pop
jge
or
daa
dec
pminub
mov
jge
bound
mov
out
insl
push
pop
and
iret
mov
add
adc
dec
lock
xor
pop
inc
repz
scas
in
dec
xor
jne
mov
inc
in
scas
jne
add
push
ds
call
lcall
dec
cmp
and
jp
mov
cli
mov
push
aas
test
pushf
sub
or
ds
xchg
std
pop
movsb
push
mov
push
ds
jne
xchg
mov
dec
sub
and
and
sahf
int3
fs
test
add
insb
mov
jns
mov
or
sub
pushl
rcrl
cmp
ret
adc
leave
sti
mov
add
push
and
int3
or
jbe
push
jp
mov
les
dec
mov
jp
mov
sbb
pop
adc
fs
aam
jp
cs
adc
cli
das
jns
pop
push
or
xchg
add
xor
sub
out
pop
int3
gs
popf
scas
imul
dec
inc
xchg
adc
jl
bound
cmp
pop
mov
ljmp
inc
pop
jle
loop
xchg
movsb
mov
repz
jae
mov
rcll
jp
jecxz
rolb
jae
scas
loope
mov
sarl
aaa
adcl
jns
pop
pop
inc
mov
inc
jno
test
dec
rorl
inc
adc
pop
insl
mov
iret
repz
je
jbe
xlat
out
scas
xlat
dec
stc
cli
xor
sbb
xchg
mov
and
and
mov
sbb
imul
pop
mov
inc
push
adc
lahf
xor
pusha
jl
inc
repz
shr
dec
in
inc
cmp
adc
push
adc
mov
dec
mov
inc
pop
xchg
dec
mov
pop
inc
pop
cmpl
sub
add
jle
add
seto
jle
mov
shl
xchg
insl
inc
lret
xchg
rcrb
jl
xor
std
ja
sbbl
jl
pop
mov
mov
lret
cmpsl
scas
sub
mov
imul
cmpsb
pop
fists
sbb
mov
dec
in
lock
scas
out
mov
lcall
and
cld
inc
cs
mov
mov
lret
cmc
add
out
les
int3
addr16
inc
mov
lds
shl
loope
icebp
jb
mov
std
jg
aam
test
jno
stos
jg
pop
rolb
ret
xor
xor
mov
push
jecxz
popa
fstl
or
push
lret
rol
popa
nop
shlb
adc
pop
jg
add
mov
dec
fdivp
test
hlt
xchg
push
iret
push
inc
call
cmc
clc
dec
jle
divb
dec
push
test
mov
mov
xor
push
popf
dec
movsb
xor
push
push
lods
std
hlt
repnz
add
imulb
and
roll
popf
pop
in
and
mov
in
pop
cltd
icebp
jns
dec
push
pop
lcall
cmovs
add
xor
iret
fisubs
ds
rcrl
inc
sub
xchg
mov
in
and
mov
dec
push
mov
jle
dec
xchg
lock
incl
and
ljmp
sub
test
insb
test
xorl
inc
xchg
push
pop
in
lock
xchg
push
pop
outsb
add
mov
mov
jmp
jbe
out
push
cltd
jae
and
dec
fs
fisttps
add
pop
mov
jnp
sbb
cmp
pop
sub
mov
mov
bound
jp
insl
mov
xor
stc
push
fs
sbb
add
sahf
inc
mov
out
sarl
pop
out
dec
out
sbb
push
es
lret
xchg
add
jmp
cltd
mov
dec
inc
xchg
test
sbb
icebp
sbb
shrb
sub
lods
test
clc
adc
dec
nop
xor
jp
jl
mov
dec
jl
sar
mov
mov
popf
cmp
pop
lods
mov
cli
push
jae
test
dec
pop
xor
test
sub
ljmp
jle
movsl
jmp
push
loope
xor
lcall
fcomp
push
les
xchg
xchg
pop
les
lret
mov
adc
nop
mov
or
xlat
dec
mov
push
into
pop
pop
or
mov
mov
adc
lret
aam
test
fwait
out
dec
sub
adc
xor
dec
call
fmull
cmpsb
dec
cld
push
and
inc
les
aam
icebp
out
rorl
fdivrs
push
xchg
inc
adc
outsl
sub
or
adc
adc
in
xor
pop
dec
loopne
nop
out
shll
mov
scas
sbb
push
addr16
and
mov
push
xchg
cli
xchg
call
stc
mov
xor
adc
jmp
mov
adc
repnz
push
addr16
shlb
out
sbb
into
out
shl
out
inc
push
rorl
dec
push
and
xor
fiaddl
lret
mov
je
in
xchg
fisubl
jg
pop
add
ss
pop
jo
inc
outsl
push
pop
cli
pop
jle
sbb
sbb
imul
xor
cmp
pop
cli
jbe
es
or
sbbl
mov
out
sti
test
aam
test
or
adc
adc
pushf
movsl
or
mov
fisttps
shrb
sub
mov
cmp
out
pop
icebp
dec
shl
sub
sarb
jecxz
push
pop
mull
scas
adc
mov
rorl
lret
rcrl
pop
mov
adc
ja
and
in
mov
dec
jns
dec
and
shl
or
shrl
cmp
mov
lock
insb
popa
xchg
xor
fsubrl
inc
out
xor
cltd
mov
sub
je
fmulp
lret
cwtl
mov
sti
fisttps
push
test
mov
bnd
or
push
or
lods
dec
stc
pop
loope
push
mov
cmp
pop
inc
cmp
pushf
mov
in
jp
or
aam
adc
mov
fwait
jbe
dec
cwtl
mov
sbb
out
xchg
stos
mov
jae
std
daa
aam
pop
sarb
inc
pushf
mov
lcall
jbe
jle
out
mov
sbb
jecxz
nop
fadd
daa
in
push
popa
cli
arpl
call
pop
mov
stc
push
jae
cltd
nopl
adc
cmp
adcl
dec
mov
fnsave
dec
dec
sub
cmpsl
mov
test
jp
xor
mov
sub
pop
pushf
jp
cmpsl
loop
dec
pop
ret
hlt
pusha
and
stos
jb
pop
test
sub
bound
or
or
push
icebp
sbb
adc
pop
sub
test
negl
pop
adc
movsl
xchg
pusha
test
inc
andl
call
mov
inc
xchg
sbb
out
in
jno
pop
push
push
xchg
shlb
dec
jbe
mov
add
jmp
xlat
jnp
sbb
add
cmpsl
testl
movl
stos
mov
jo
sbb
jecxz
inc
or
pop
fwait
movsl
imul
decb
adc
rcl
frstor
pop
xorb
pop
loopne
add
aad
bnd
push
fidivrs
std
test
mov
jmp
adc
fs
mov
repnz
mov
sub
and
push
jp
je
mov
mov
lock
pop
add
push
in
mov
test
mov
cmc
xchg
mov
jg
movsb
cs
outsl
sub
je
cmc
in
sub
xchg
push
or
adc
inc
sbb
imul
mov
dec
jge
cli
cmp
leave
mov
nop
popa
dec
or
mov
shlb
mov
test
adc
xchg
setno
xor
mov
ja
sub
arpl
gs
mov
sbb
inc
cmp
mov
xchg
pop
andb
mov
or
adc
and
jp
leave
cs
dec
popl
add
push
lret
inc
mov
pop
or
jbe
jl
push
jne
mov
fbstp
adc
lock
dec
arpl
or
lret
mov
mov
dec
adc
test
lea
pusha
stc
mov
mov
xor
adc
or
out
loope
stos
adc
lods
jmp
push
icebp
inc
xchg
fsubrl
and
add
inc
jle
es
in
sub
or
loop
popf
shlb
jne
sbb
lahf
negb
or
mov
ret
jae
icebp
add
cmp
jne
sub
rep
aas
adc
mov
test
xlat
sbb
push
loopne
repz
ds
mov
push
insl
insl
inc
push
jne
or
jmp
int3
fdivrs
cwtl
push
scas
out
sub
cmp
push
push
push
mov
sbb
mov
bound
pop
xchg
stos
aaa
ljmp
es
inc
fyl2xp1
push
sbb
jmp
push
call
lahf
ror
jae
add
xchg
inc
inc
cmp
add
clc
jl
cmpb
or
jbe
pop
loope
cmp
or
jo
lock
loope
js
mov
test
sti
or
imul
and
stc
mov
dec
jns
les
das
jmp
jae
test
inc
jne
add
cld
mov
call
shr
stos
lods
movsl
mov
sub
out
movsb
adc
xor
push
or
rcrl
dec
data16
inc
adcl
adc
lods
in
add
adc
out
push
imul
cltd
fistl
ds
xchg
aas
and
hlt
pop
sub
cmp
pop
push
int3
sbb
cld
dec
cmc
in
movsb
or
insl
sbb
inc
das
cmpsb
mov
mov
int3
es
jmp
adc
sbb
push
cmp
push
mov
fsubp
mov
test
and
aaa
fs
cmpsb
push
push
xchg
cmp
inc
outsb
mov
stos
in
out
adc
into
cmp
fcomps
jb
rolb
or
xor
fwait
xchg
ss
jae
push
fld
cld
aam
in
push
lods
fstl
inc
enter
mov
push
xor
cli
jmp
les
js
mov
inc
or
xor
outsb
jb
cmp
xor
test
cmp
cltd
daa
add
scas
and
dec
out
adc
or
inc
jo
inc
xchg
out
test
lret
adc
adc
mov
inc
xor
mov
daa
rcrb
lds
loope
test
xor
xchg
lret
addr16
push
lcall
mov
jb
mov
xor
pop
sarb
pop
mov
cli
in
call
int
in
test
inc
adc
and
dec
pop
imul
aam
add
push
leave
enter
and
fcoml
lret
fstpt
popa
jo
inc
sbb
jne
mulb
and
popa
adc
push
jb
hlt
cmp
insl
in
mov
jae
xor
daa
js
mov
ja
movsl
adc
pop
outsl
adc
mov
pop
mov
loop
in
into
cmc
xchg
xchg
xchg
inc
in
sub
fisttps
dec
fnsave
pusha
xor
sbb
cmp
popa
nop
and
fcomi
push
mov
sub
cmp
in
stc
cmpsl
scas
inc
test
cmp
ljmp
loopne
mov
and
testl
and
push
push
jge
addb
add
or
xor
pop
test
loope
sub
add
es
push
pop
pop
inc
outsb
mov
push
pop
gs
adc
es
mov
sti
lods
int3
aas
mov
das
not
orb
testb
ss
or
sbb
mov
push
roll
sub
mov
pushf
loop
shrd
test
jne
sbb
mov
ret
xchg
int3
xor
loope
or
lahf
cmp
stc
adc
cmp
cmpsb
movsl
mov
addl
jno
lds
outsl
or
adc
cmp
pop
movsb
jl
mov
sub
mov
mov
jp
dec
addr16
insb
inc
mov
adc
lds
pop
mov
js
cwtl
mov
xchg
jnp
inc
fwait
fwait
cwtl
pushf
mov
jo
cmp
cli
cwtl
sub
jbe
int3
lods
aam
cmp
insb
lods
xchg
add
jnp
adc
fwait
std
cmp
es
in
pop
sbb
movsl
lock
dec
dec
scas
sub
inc
outsl
aad
inc
sbb
test
xchg
out
nop
jbe
roll
xor
jbe
push
jp
mov
out
xor
insb
add
and
jp
mov
leave
or
sbb
mov
jl
rcrl
push
mov
or
push
or
ret
or
mov
lea
loopne
out
addl
mov
cmpsb
adc
and
mov
fstps
out
and
pop
sti
lock
loopne
push
cmp
and
stos
cwtl
or
int
dec
push
adc
push
or
data16
mov
xor
pop
inc
aad
ficoml
insl
adc
movb
add
jmp
push
dec
aaa
fisubrs
xchg
adc
in
xor
pop
mov
mov
mov
fwait
test
dec
xchg
push
add
hlt
int
repnz
mov
ret
bound
call
sarl
jecxz
add
inc
repnz
sti
mov
pop
cmpsl
mov
jmp
add
shrb
xor
cld
dec
je
inc
cltd
sub
xor
sub
in
dec
shll
dec
xorl
fnstcw
pop
push
insl
in
pushf
outsl
push
fdivs
pushf
mov
sub
aaa
jp
jmp
test
fnstcw
pop
cmpsl
addb
jne
add
popa
jp
or
or
cmp
mov
insb
push
popf
test
std
dec
sub
enter
daa
imul
and
hlt
jno
inc
negl
mov
fldt
jae
mov
out
mov
arpl
loope
pop
clc
loop
xchg
cmc
mov
les
mov
ret
push
cli
dec
gs
mov
rcr
sub
adc
mov
pushl
sub
or
sbb
or
dec
push
imul
lahf
pop
aam
movsb
mov
ja
outsl
sahf
negl
addr16
dec
and
inc
xchg
icebp
jge
mov
int3
daa
orb
sbb
aas
push
mov
mov
pop
dec
shlb
dec
pop
cli
mov
je
addb
cmp
jge
jb
nop
and
jns
inc
rolb
cmp
sbb
xor
xor
push
mov
nop
mov
mov
orl
push
insl
in
push
cmpl
xrelease
pushf
outsl
sbb
push
hlt
gs
fiadds
push
cmc
push
movsl
xor
popa
sub
aas
xorps
lret
mov
fadd
imul
inc
xor
popa
add
xchg
sbb
push
xchg
add
mov
fnstenv
std
sub
dec
aas
mov
in
mov
xchg
and
mov
sbb
mov
cmc
jo
movsb
sarl
dec
int
inc
out
ds
push
ljmp
mov
ja
call
and
push
iret
mov
les
repnz
add
pop
xchg
jmp
and
sub
mov
dec
mov
jge
sub
mov
pop
xchg
aad
repz
aaa
mov
out
lods
xchg
xor
int
test
mov
push
ljmp
mov
push
lods
pop
out
loopne
repnz
inc
js
dec
jae
insl
leave
adc
sbb
xor
and
push
mov
shlb
fs
mov
mov
mov
insl
ret
jp
bound
mov
xor
push
mov
arpl
mov
push
pop
xchg
add
mov
cli
les
mov
cmp
insl
mov
mov
inc
xlat
call
xor
mov
lret
lods
in
dec
iret
adc
dec
push
insl
insl
cld
adc
in
mov
fcmovnu
outsb
pop
mov
je
lods
mov
sbb
mov
pop
xchg
xor
clc
push
fldln2
xchg
movsb
ss
mov
fisttps
in
mov
push
mov
fsubs
jg
lahf
mov
out
dec
lret
sub
repnz
cmp
pop
xor
rcrl
repnz
push
push
fildl
je
jl
out
mov
arpl
cmp
repz
mov
pop
inc
fucom
cmpsb
sar
mov
jo
dec
mov
push
mov
mov
fcmovb
push
rol
dec
sub
lret
arpl
pop
jne
cmp
dec
dec
in
les
sub
outsl
and
aad
movsl
mov
outsl
xor
mov
cltd
das
in
lock
stc
mov
mov
in
sbb
pop
icebp
mov
cmp
ljmp
outsb
mov
cmp
scas
fstpl
xchg
mov
jp
cmpsl
xor
mov
iret
aas
pop
fldt
ror
pop
cmp
mov
jns
mov
outsl
fdiv
cld
mov
mov
push
inc
aam
add
pop
mov
fisttps
mov
adc
iret
and
xor
bound
repnz
adcb
repnz
movsb
mov
ret
push
and
jg
into
push
mov
adc
add
cmp
adc
sub
pop
push
roll
dec
xor
mov
subl
jno
pop
push
movsl
shll
xor
ds
fisubl
por
pop
pushf
pushf
mov
push
adc
movsl
into
xchg
xchg
dec
gs
inc
sub
push
dec
inc
jbe
mov
mov
cmp
popa
mov
lods
mov
lahf
daa
cmp
dec
loope
in
pop
popa
lods
cld
xor
jae
aaa
loopne
mov
aam
jl
mov
into
add
lods
jecxz
sub
mov
or
es
cmpsb
fs
lods
leave
pop
insb
je
mov
jp
repz
orl
xchg
and
jmp
movsl
orb
shrb
pop
lahf
inc
jl
iret
lock
sti
inc
pop
std
out
testb
dec
call
stos
daa
cmove
movsl
sahf
mov
fdivrs
jne
inc
mov
es
addr16
xor
pop
or
shlb
and
insl
ljmp
xor
jg
cld
dec
push
dec
dec
push
pop
cmpsb
mov
in
dec
mov
out
jnp
fcomps
jge
pop
jns
xor
xchg
ds
dec
repnz
fisttpl
cmp
fs
bound
jnp
jecxz
pop
mov
call
out
push
sbb
pop
out
mov
fldl
jl
cmp
pop
inc
icebp
enter
cmp
dec
shrl
out
fnstenv
aaa
out
test
cmp
repnz
in
xchg
cmp
mov
adc
pop
push
xorb
add
imul
xlat
cmp
dec
arpl
cli
sub
nop
mov
mov
xor
cmp
or
out
mov
adc
clc
mov
jb
mov
aaa
jb
lahf
push
enter
lahf
pop
std
sub
stos
outsl
cwtl
out
leave
popf
jno
mov
xor
mov
fs
testb
rcll
les
cmp
xor
push
cmp
or
cmp
sub
mov
jmp
add
lods
fildll
push
sub
fisubrs
push
scas
int
je
xor
pusha
cs
or
pushf
nop
les
call
in
push
lcall
out
push
lret
mov
shrb
sub
loopne
cmp
ret
sbb
add
test
xor
pushf
inc
insl
inc
mov
js
mov
sahf
rcrl
cld
add
push
std
jle
clc
loopne
mov
lock
sbb
push
cmp
inc
leave
mov
movsl
push
outsb
outsl
movsl
out
out
xchg
ret
lods
fdivl
call
adc
jg
insb
sbb
call
mov
jnp
push
xor
lock
and
pop
hlt
inc
inc
push
rclb
xor
jge
js
bndldx
cmp
shll
fs
mov
mov
out
cmpsb
lcall
daa
loopne
mov
arpl
jb
or
cmp
mov
cwtl
mov
mov
stos
inc
incb
add
sub
fcoml
mov
cmp
lods
cld
or
cmp
mov
pop
sub
sahf
sbb
mov
pop
roll
in
inc
sbb
lods
xchg
push
scas
and
jge
adc
test
std
repz
cmp
lahf
inc
pop
cmp
sbb
movsl
jb
jbe
and
movsl
clc
jp
sub
std
jg
lret
or
jg
pop
push
das
xchg
adc
mov
aam
mov
jb
add
jno
and
int3
jmp
cmpsl
mov
mov
or
dec
mov
pop
push
shl
pop
xchg
loope
sbb
inc
out
in
dec
bound
and
es
xchg
rclb
ret
inc
arpl
mov
je
mov
sub
add
add
imul
pushf
lea
mov
lods
lret
mov
add
push
xlat
or
xor
mov
mov
push
ss
add
sub
inc
push
push
popa
popa
addr16
paddw
mov
test
hlt
sarb
jg
jge
lea
in
mov
xchg
mov
pop
dec
mov
inc
pop
inc
lods
cs
fdiv
pushl
pusha
lahf
sahf
stos
call
lahf
cmp
andl
cltd
add
hlt
mov
lcall
js
insl
out
daa
xchg
xor
add
mov
ja
xor
adc
es
xchg
in
in
adc
cmpsb
xlat
int
loope
fildl
clc
jae
les
jbe
mov
jge
shr
push
add
enter
sti
cltd
push
mov
inc
cmp
test
sbb
sti
loope
jl
fucomp
repz
inc
es
outsb
xor
in
aas
pop
shr
mov
ds
sub
lods
fstpt
pop
sbb
sbb
loop
jbe
mov
xor
xchg
push
and
loope
das
pop
jbe
and
in
jmp
adc
clc
fwait
jns
adc
insb
mov
and
cmpsb
insb
stc
lahf
xor
sub
aaa
push
pop
inc
mov
subl
ret
adc
ljmp
pop
xchg
movsl
xor
cltd
pop
jg
jns
push
cmp
sar
push
push
adc
shlb
xchg
jno
cmp
add
mov
adc
leave
in
scas
clc
cmp
inc
adc
shlb
mov
xlat
jge
push
imul
xchg
adc
js
cltd
shll
dec
cmpsw
xor
and
in
fsubrs
inc
loope
mov
test
pavgb
out
lods
inc
pusha
addr16
xor
cli
addr16
dec
jl
in
xor
or
das
imul
jecxz
stos
xor
inc
cmp
stos
add
jns
mov
mov
xchg
lea
daa
mul
and
int3
or
js
cmc
icebp
lods
adc
out
hlt
xor
enter
sub
jno
in
and
dec
cli
push
push
inc
mov
jecxz
data16
push
sbb
popl
push
repz
aas
sbb
sub
push
subb
lods
xchg
xor
dec
mov
push
sbb
or
and
cld
repz
iret
popa
add
push
pop
dec
adc
loope
scas
pop
jb
xor
ds
insb
jo
cmc
adc
adc
xor
and
aam
xor
addr16
xlat
and
popf
pop
mov
outsl
jmp
inc
cmpsb
mov
push
int
push
add
or
dec
arpl
and
xchg
mov
std
ljmp
stos
cli
xchg
dec
mov
push
push
add
sbb
or
inc
std
call
fwait
mov
fistpll
xchg
out
push
shll
mov
jl
inc
addr16
repnz
int3
push
in
in
lea
daa
lock
arpl
lcall
sub
mov
sub
xor
dec
push
or
push
imul
adc
in
sbb
movsl
mov
outsl
mov
mov
xchg
mov
imul
cs
adc
pop
lret
lds
sbb
mov
pop
pop
jl
fdivl
push
sbb
pop
xchg
jmp
es
stc
aad
and
scas
lret
dec
cs
or
or
enter
sahf
js
jno
fldl
adc
sbb
lret
cmc
push
add
movsl
sbb
cmpsb
das
xchg
or
shlb
dec
cmp
cmpl
sahf
xor
xchg
lock
je
gs
pop
mov
pop
push
dec
pop
movsl
mov
loop
cmpsb
or
cs
test
ret
out
inc
mov
inc
sub
fcoml
xor
pop
cmp
hlt
dec
and
ret
push
lahf
lods
fwait
sub
cmpsb
and
fimull
mov
rcrl
fisubrl
xor
pop
cmp
push
pop
cmc
data16
xchg
arpl
and
lea
leave
sub
ljmp
xchg
push
lahf
and
add
out
adc
loope
push
mov
js
pop
inc
and
insb
movsb
imul
push
inc
lods
mov
pop
popa
mov
ds
and
in
clc
out
sbbb
adc
dec
sub
pop
out
icebp
sahf
push
and
inc
add
outsl
lcall
add
jl
in
xchg
mov
cmp
xor
clc
pop
dec
add
repz
arpl
or
and
sti
imul
test
inc
and
jl
fs
fnsave
cmp
sbb
xchg
mov
adc
mov
mov
mov
add
sbbb
mov
xchg
loopne
lahf
add
frstor
je
nop
push
negb
cmpsb
mov
lds
repz
fadd
ds
adc
or
inc
mov
mov
push
test
jp
xchg
mov
mov
movsl
enter
add
repz
mov
add
and
sub
test
and
dec
cs
mov
icebp
cmpl
js
pop
andb
mov
neg
loopne
adcl
and
inc
sub
mov
cmpsb
cli
lcall
test
mov
mov
add
jmp
lea
aam
lret
notl
cwtl
mov
sub
xchg
notl
xchg
add
imul
sarb
jb
pushf
mov
cmpsl
aaa
sbb
and
pop
dec
mov
xchg
xchg
mov
and
mov
insb
sub
mov
xchg
aam
and
mov
push
rclb
je
loope
xor
xorb
lock
mov
mov
in
stc
mov
mov
lret
dec
ja
lods
xor
sbb
fbld
inc
enter
mov
sbb
push
cltd
mov
add
add
out
or
sahf
sahf
mov
divb
lret
ds
mov
push
adc
insl
loopne
cmpsb
idivb
jae
xchg
popa
dec
rcll
fcomip
imul
cmp
sahf
mov
jb
je,pn
js
mov
mov
cli
or
in
out
dec
rorb
or
aam
sbb
inc
inc
push
mov
roll
push
out
mov
xchg
testl
pusha
or
les
push
mov
pop
out
cmpsl
cmpsb
dec
lds
fsubr
push
sub
push
jle
sub
or
movsb
cmp
adcb
sbb
ja
outsl
push
cmp
inc
dec
sarw
and
sarb
sbb
mov
cmp
dec
sub
repz
xchg
adc
lret
lfs
out
or
pushf
jge
mov
add
cwtl
es
lds
pop
sbb
addr16
test
pop
inc
out
xor
rol
ds
jecxz
xchg
add
mov
enter
pop
inc
pop
into
xor
popl
mov
sbb
jns
xchg
int
idivb
jns
sbb
sub
outsl
mov
mov
inc
push
aaa
daa
mov
cmpsl
leave
push
pop
daa
addr16
arpl
rorl
xchg
test
sbb
xor
out
jnp
sti
mov
xchg
add
xchg
jle
mov
je
or
or
ja
and
loope
loop
ljmp
pushf
or
test
xabort
xor
xor
xlat
mov
inc
into
or
adc
cmpsb
push
or
mov
pop
xor
lea
lds
xchg
push
pop
fnsave
xor
xchg
lahf
jecxz
loopne
into
popa
sarb
fcmovu
ret
out
ret
mov
rcr
imul
icebp
lds
jmp
jmp
mov
filds
mov
xchg
jge
in
loope
dec
loope
aaa
add
sbb
das
adc
dec
push
mov
movsb
shr
push
or
push
xor
pop
movsb
das
je
insb
sbb
icebp
mov
sub
and
adc
mov
inc
or
popl
mov
xor
and
jp
push
inc
add
mov
outsl
xor
inc
push
dec
imul
rcr
in
insl
in
das
inc
mov
imul
or
cld
jnp
clc
lret
lods
pop
insb
scas
dec
loop
push
and
test
adc
dec
push
mov
popa
sbb
lea
loopne
mov
sahf
sub
in
xchg
leave
xchg
cmp
in
int3
fistl
mov
adc
lock
mov
insb
xlat
outsl
out
add
stos
mov
int3
cltd
push
mov
jae
or
push
cltd
mov
cmc
push
arpl
sub
repnz
and
mov
jae
and
in
xor
fwait
and
in
mov
cwtl
jbe
inc
push
add
xchg
je
and
movsl
pop
mov
ds
gs
cmpsl
lret
jmp
inc
mov
xor
jb
shl
repnz
sub
stos
testl
mov
mov
sub
push
jne
add
or
and
js
push
loope
sub
xor
pop
std
inc
leave
push
dec
add
into
push
lods
push
sbb
mov
rcll
ja
mov
outsl
jge
insb
pcmpeqw
cmp
dec
dec
mov
jecxz
pop
mov
ljmp
sub
ret
out
mov
xorb
movsl
xchg
mov
pop
lods
repz
dec
addb
fwait
xchg
shll
shlb
mov
xor
jge
pop
push
imul
lret
mov
and
pop
shll
push
fdivrl
enter
mov
sbb
mov
lods
cmc
movsl
jae
dec
aas
mov
loope
jbe
jecxz
mov
gs
test
adc
push
adcl
je
mov
jae
lock
aam
rol
sbb
jnp
pop
add
ja
addr16
mov
add
sbbb
inc
jp
mov
xor
rorb
xchg
xchg
jmp
roll
sbb
lods
dec
xchg
adc
movsl
loope
sbb
fcmovne
adc
add
jmp
repz
and
fs
sub
jl
out
or
pop
arpl
movsb
das
outsb
jo
pop
mov
sti
mov
mov
cmp
cmp
push
out
sbbl
mov
rolb
add
xor
mov
adc
je
cli
aas
sbb
dec
mov
cwtl
mov
aam
dec
and
pushf
in
xor
cmp
dec
lds
fnstcw
or
sbb
sti
cmc
sub
inc
push
pop
mov
outsb
or
fstps
out
add
std
out
inc
repnz
sti
shl
popf
idivb
out
adc
cltd
mov
setns
sub
inc
loop
fs
and
inc
mov
cltd
dec
xchg
xor
out
mov
call
insl
jl
and
bound
loop
inc
add
stos
ds
push
xor
ja
outsb
mov
shrb
aam
idiv
xchg
xchg
mov
adc
lea
pop
divb
jmp
icebp
nop
pusha
jmp
negb
out
mov
loop
xor
movsl
movsb
daa
mov
arpl
or
jp
iret
cmpsb
xor
dec
cs
daa
mov
pop
out
repnz
or
adc
push
test
nop
pop
mov
xchg
push
mov
xchg
loope
mov
and
movsl
sbbb
mov
stc
jne
mov
add
stc
cmc
jge
jmp
sub
out
sub
push
dec
cmp
ret
out
add
cs
lds
sbb
adc
push
rcrb
cmp
shrl
addr16
add
or
xchg
inc
mov
fnsave
fwait
pop
fcmovu
sub
je
mov
mov
pop
xchg
xor
jne
add
dec
stos
xor
mov
and
push
stc
je
lret
std
adc
out
add
outsb
sbb
and
fidivl
xor
je
int
or
arpl
cmovno
out
cmp
je
sub
pushf
movsb
push
add
test
sbb
push
lret
pop
add
xchg
frstor
mov
andb
fstpt
xchg
shll
jbe
push
sub
dec
sti
imul
cmpb
aas
andl
movsl
sbb
test
lods
xor
les
pop
popf
jmp
or
movsl
es
push
ds
in
rcll
push
push
cmpl
xchg
lds
scas
mov
test
out
mov
ds
adc
test
push
mov
pop
pop
int3
dec
sahf
xorl
movsl
mov
xor
inc
push
sarl
add
and
xchg
push
into
sub
test
decb
inc
cmc
sbb
cmpsb
cltd
pop
add
pop
in
ffree
sub
mov
insb
sub
lret
pop
add
mov
inc
in
dec
and
mov
in
add
sub
mov
clc
xor
test
and
mov
xchg
mov
dec
pushf
xor
mov
jge
jl
stc
stos
and
out
stos
xchg
hlt
test
pusha
out
inc
jno
jne
scas
lahf
xor
jge
dec
mov
xor
fwait
dec
sub
enter
int
aad
xlat
adc
je
test
push
sub
in
cmpsl
aas
mov
outsl
aas
pop
loop
and
xor
xor
or
out
xor
mov
xchg
movsb
mov
and
jmp
dec
cltd
inc
and
gs
dec
mov
ljmp
fmulp
inc
aaa
stos
jnp
movb
insl
outsl
fmul
sub
push
decb
xchg
mov
add
mov
lock
xor
xlat
rcrb
clc
lret
scas
mulps
test
xor
or
shrd
push
pop
out
push
or
mov
das
pop
mov
cmp
cmpsl
push
dec
mov
nop
push
mov
stos
push
bound
in
mov
pop
leave
mov
leave
mov
xchg
movsb
mov
and
adc
xchg
shrb
in
lods
iret
ret
pop
lcall
mov
jnp
adc
push
mov
mov
sbb
mov
mov
xor
xchg
or
dec
js
popf
mov
dec
shlb
push
test
push
lods
inc
xor
in
lret
jno
mov
xchg
jno
inc
fcomps
outsb
addl
push
jmp
dec
sub
mov
mov
popf
fisubl
add
sub
aas
mov
addr16
fisubrs
loopne
fldcw
test
loopne
mov
mov
add
mov
pop
test
sbb
loop
lcall
xchg
jbe
mov
outsb
add
shlb
int
fstpl
aas
jl
jne
pop
sbb
adc
jb
outsl
sub
and
movsl
in
push
into
das
mov
sub
or
pusha
ss
movsb
neg
xor
xchg
adc
fsubrs
jp
nop
mov
enter
cmpsb
icebp
jecxz
testl
data16
jge
dec
frndint
add
pop
negb
js
cmpsl
sub
push
xlat
int
jnp
sahf
iret
insl
pslld
mov
xchg
pop
dec
inc
lods
mov
cltd
into
add
cwtl
sti
subl
mov
xor
push
scas
stos
loope
adc
mov
and
lea
jmp
pop
mov
add
mov
fnsave
movsb
jne
mov
into
lahf
pusha
shrb
shl
sbb
ret
in
jns
mov
push
pusha
and
fimull
mov
push
mov
loop
cmc
outsb
rorl
sub
or
xor
push
test
sbb
jp
repz
xchg
jnp
xchg
xor
jmp
ds
or
sahf
data16
aam
movsb
gs
dec
aad
ljmp
push
repnz
cmpb
leave
daa
cmp
dec
or
icebp
dec
adc
adc
or
or
xor
clc
popa
dec
into
add
xchg
lret
repz
xor
mov
fcmovb
fucomip
add
and
ficompl
cmpsb
push
call
int
ret
cmpsl
das
stos
cmp
sub
rcrb
push
xchg
out
ret
jge
std
ret
add
sub
shlb
insl
sbb
inc
adc
add
outsb
xchg
add
mov
int
imul
ret
mov
movsl
imul
rorl
bound
pop
push
outsb
fimull
scas
enter
lock
push
jnp
and
xchg
mov
mov
filds
cs
lret
xchg
imul
inc
jmp
int3
mov
mov
movsb
rcl
shll
mov
xchg
lret
inc
sub
xor
mov
mov
daa
add
jne
xchg
mov
cmp
pop
es
rcr
jle
sub
imul
mov
jp
cmpsb
xchg
mov
add
insl
inc
je
xchg
jmp
mov
jnp
test
nop
int3
jns
iret
jno
jmp
or
xchg
ljmp
push
in
dec
daa
cmp
pop
sub
in
shrl
bound
dec
inc
lds
fcoms
sbb
mov
cwtl
test
stc
gs
adc
mov
cli
xchg
loope
fcomps
addr16
jnp
scas
mov
push
nop
jle
outsl
fucom
stos
xchg
aas
mov
lods
push
lock
push
insb
cmp
mov
sub
mov
loop
repnz
sbb
xchg
mov
dec
fistpll
mov
inc
jae
adc
pop
cli
inc
mov
iret
lahf
decb
adc
rolb
mov
test
adc
movsl
sbb
jmp
jns
cmp
inc
cltd
divb
sbb
mov
push
loope
ljmp
cmpsl
movsl
mov
push
outsb
inc
das
xlat
call
and
jl
and
xlat
outsl
push
sbb
in
adc
loope
adc
jbe
add
imul
push
js
mov
ficoms
aas
out
mov
add
incb
lods
xor
dec
inc
cmp
scas
call
mov
rolb
repz
push
push
out
or
mov
loop
shll
sarb
adc
shlb
jae
sub
or
les
not
xor
adc
shlb
aas
subl
push
xor
test
mov
mov
dec
pop
shrb
jns
cmc
adc
imulb
or
ljmp
push
adc
pop
imul
pop
fwait
cli
testw
popf
fwait
bound
push
jne
lock
cmc
sub
xchg
cmc
fistl
andl
orl
int3
adc
inc
and
ret
lret
jmp
xorl
cmp
mov
adc
fcomp
popa
inc
lods
jg
fdivr
ffreep
mov
xor
aam
xor
in
movsl
stos
jmp
jb
lock
test
int
mov
cmc
mov
je
icebp
fnstcw
adc
sub
mov
repnz
sub
add
scas
fsub
fisubl
les
pop
inc
jno
insl
lret
aas
and
pushf
xchg
mov
insb
pop
in
jns
and
cmc
cli
and
jecxz
ja
jno
sar
sub
fisttps
jb
mov
mov
dec
jmp
jl
cmpsb
sbb
enter
movsb
leave
inc
sbb
movsl
push
rorl
jo
scas
pop
aaa
pop
pop
mov
aad
mov
cli
test
xor
mov
insl
out
fistpll
xchg
repz
mov
mov
sahf
lret
lods
sbb
rcrl
popf
mov
add
mov
repnz
fisttps
leave
mov
mov
mov
or
test
jno
mov
and
aam
xchg
jno
cmp
inc
push
outsb
mov
clc
imul
xchg
inc
icebp
xlat
add
push
push
or
mov
xchg
fwait
into
arpl
in
cld
in
lea
scas
mov
std
jge
and
xchg
ret
push
ss
ja
notb
leave
movsb
lret
xchg
daa
jbe
out
mov
cmp
dec
shr
pop
xor
imul
add
out
lahf
mov
cmp
rcr
jb
fistpl
addr16
push
inc
mov
outsl
lcall
nop
push
ret
mov
adc
mov
enter
mov
xchg
out
adc
push
pop
aaa
add
loope
or
cmc
sbb
push
dec
fcmovnb
adc
push
push
mov
icebp
imul
data16
cmpsb
pusha
dec
jge
jo
adc
dec
jge
popf
cmp
movsl
jnp
out
pop
std
adc
mov
or
imul
cmp
sub
ss
push
and
ljmp
xchg
out
adcb
and
mov
les
iret
inc
sbb
sti
movsb
xchg
es
push
sub
dec
pop
sbb
add
subl
xchg
mov
mov
lret
pop
xor
sahf
cmc
sbb
mov
inc
test
into
outsl
dec
sub
and
jno
mov
ja
js
outsb
ficoms
push
pop
mov
sub
add
xlat
aam
xor
inc
sub
in
cli
aam
adc
mov
adc
mov
cmp
and
cs
hlt
dec
arpl
pop
sbb
mov
cltd
imulb
xchg
adc
dec
inc
jecxz
scas
sarl
fstps
and
hlt
sub
test
or
mov
lock
je
out
pop
int3
cmpl
mov
out
mov
sub
in
mov
dec
fcoml
aas
mov
cmp
xchg
call
jno
int3
sub
into
push
inc
ja
dec
jp
jge
leave
adc
enter
adc
adc
inc
push
ja
mov
je
leave
mov
cmc
cmp
aad
cmp
xor
add
push
pop
mov
cs
sub
push
or
xchg
scas
mov
andl
arpl
stos
lcall
pop
push
cltd
mov
jnp
icebp
or
loope
mov
popa
aad
je
sub
mov
dec
imul
mov
push
xorl
ret
popa
jns
xor
adc
dec
sbb
mov
mov
add
sub
and
push
ret
pop
rorb
push
pop
andb
xor
jae
pop
in
inc
cmpsb
mov
dec
dec
mov
sub
rcll
test
lods
subb
dec
xor
pushf
pop
addr16
and
jbe
stos
and
mov
pop
test
inc
ds
shrl
lock
xor
sub
add
xor
popf
stos
adcl
daa
adc
mov
jnp
enter
out
jb
sahf
pop
ss
mov
std
pop
test
adc
mov
and
loope
sbb
repnz
int3
ljmp
pop
inc
lods
cli
por
mov
add
add
dec
adc
or
test
pop
xchg
repz
fistpll
push
cs
jg
roll
pushf
mov
stos
pushf
adc
add
cmpsb
pop
or
push
cltd
pushf
aad
push
jb
data16
xlat
ret
fists
mov
sub
mov
or
arpl
call
leave
in
sbb
icebp
pop
xor
sub
pop
repnz
sub
and
loopne
or
adcb
jl
je
in
imul
cmpsb
push
sbb
and
push
push
test
xor
inc
int
or
arpl
rcrb
and
cmp
or
aas
mov
testl
pop
sbb
ss
aad
stos
jo
jmp
in
popf
mov
enter
ficoms
push
mov
cld
adcb
or
or
adc
int
lahf
decb
mov
pop
dec
pop
jmp
dec
popf
sub
xchg
shll
sysexit
cld
orb
jns
test
js
push
inc
jecxz
lcall
loope
cmp
in
mov
aas
mov
add
les
rcrb
dec
movsl
punpckhwd
xchg
jge
stos
movsb
mov
mov
pop
cmpsb
lea
xchg
sti
push
add
sub
mov
in
scas
mov
ficomps
lea
loop
mov
dec
pop
movsl
pushf
int
mov
pop
inc
lods
lcall
in
sub
out
aas
add
mov
cld
and
test
lea
cltd
sbb
xor
inc
inc
loopne
ja
mulb
rcrl
pop
ds
mov
mov
jns
or
in
jg
in
hlt
shl
scas
adc
inc
sub
jle
and
adc
or
adc
jbe
lock
shrl
cli
jnp
cmp
daa
and
push
stos
xor
dec
sbbl
inc
lcall
jbe
xchg
nop
hlt
bound
adc
xor
int
les
mov
imul
pop
inc
outsl
fmuls
sbb
movsb
cld
daa
ss
pushl
je
aas
gs
xor
dec
insl
mov
adc
pop
sub
jge
arpl
xor
pop
in
mov
mov
daa
movsl
je
out
stos
dec
jmp
jmp
out
roll
imul
xchg
mov
pushf
push
jg
imul
les
insb
push
push
xor
dec
outsb
daa
xchg
push
outsb
push
lods
fwait
jmp
xor
add
out
xorb
cpuid
stos
xor
int3
data16
aam
fisttpl
dec
add
sub
dec
lock
and
filds
add
cld
cmp
push
rcll
cmc
adcb
jo
lret
xchg
pop
dec
sbb
lods
iret
mov
sbb
jns
cltd
push
mov
add
add
pop
mov
mov
inc
cmc
enter
mov
push
iret
sub
fisubrl
std
jbe
jge
aad
push
xchg
jmp
mov
lret
cld
xor
cld
fistpl
inc
enter
lahf
sbbb
cwtl
pop
nop
outsl
sub
mov
idivb
in
sub
out
imul
cs
xor
push
and
js
mov
ret
gs
popa
cmp
mov
xor
add
or
lret
test
cs
lock
sub
mov
rcrl
jge
push
lea
es
test
inc
and
push
dec
pop
push
mov
pop
daa
mov
mov
jge
fadd
cmp
dec
dec
int
dec
ret
mov
pop
push
imul
out
sub
iret
pushf
xor
sbb
imul
fisubrs
xor
and
adc
mov
stos
ficoms
sbb
jno
push
inc
out
stos
xchg
shll
scas
sbb
aam
ss
ficomps
and
or
mov
insb
call
jmp
fs
js
inc
jno
test
lahf
or
shll
ljmp
icebp
push
popa
pop
jns
jle
mov
vmread
cmp
mov
sub
out
int
push
mov
js
and
test
add
add
jmp
mov
dec
test
or
and
push
mov
jge
addr16
or
push
dec
in
movsb
ja
jno
leave
and
data16
push
or
cmc
push
fldt
and
pop
cmpsl
adcl
hlt
stos
jle
xor
cli
cmp
pop
xlat
sarl
mov
pushf
sub
es
jns
shll
push
pop
push
xor
into
mov
and
ja
lods
out
mov
jle
push
inc
scas
shrw
call
ja
iret
call
es
imul
pop
imul
jecxz
neg
mov
clc
jo
popa
ret
and
mov
aam
adc
les
sub
faddl
and
mov
rcrb
sub
les
inc
push
xchg
jle
pop
movsb
popf
jbe
movsl
notb
add
addb
adc
xor
lock
push
push
cmpb
or
out
inc
adc
dec
xchg
push
xchg
popa
mov
mov
jmp
scas
inc
mov
mov
xchg
lods
loopne
lods
lea
outsl
sub
add
lock
cli
fsubr
test
jl
sbb
mov
out
mov
mov
fldlg2
mov
int3
adc
fucomp
mov
rcrl
mov
cmpsl
jae
in
pop
lods
in
pop
stos
push
lds
cmp
daa
hlt
adc
cltd
push
hlt
out
jmp
stc
or
es
xor
jbe
xchg
dec
fstps
push
popf
fidivl
lock
cmp
leave
xchg
cld
inc
shl
mov
and
xor
add
into
jmp
nop
mov
lock
scas
imul
imul
insb
int
aad
add
and
adc
dec
rorb
stc
push
je
pop
cmp
cmp
cmp
lahf
test
rcrb
incb
inc
sub
in
sub
loop
inc
in
jecxz
es
inc
jb
cmp
jo
in
jno
out
pop
sbb
pop
mov
outsl
subl
mov
or
push
mov
xlat
lahf
lods
lods
arpl
push
cmpsb
mov
repz
fisubrs
fmull
add
pusha
xor
lret
mov
mov
imul
xchg
ja
clc
fists
dec
je,pt
out
das
decb
add
cmp
sbb
in
pop
movsl
je
inc
repnz
adc
cmpsb
rcl
xlat
or
lea
mov
cmc
sti
outsb
mov
xchg
inc
and
push
xchg
xor
add
mov
push
shrl
cmp
cld
cmp
fstpt
dec
das
lahf
cmp
addr16
clc
adc
scas
sarl
push
aad
popf
into
int3
stos
sbb
fcompl
push
push
hlt
inc
loope
sub
mov
and
push
push
mov
push
mov
push
push
nop
negl
fnsave
fisubs
in
cmpb
mov
cmp
lahf
xor
xor
sti
outsb
out
shrb
in
outsl
std
push
pop
push
mov
std
lods
aaa
movsb
mov
sbb
pushf
cmp
xor
pop
push
jno
cmp
mov
shll
inc
loope
dec
in
jns
add
rolb
sbb
and
xchg
std
popf
dec
mov
stos
add
inc
mov
mov
inc
or
or
mov
aad
push
mov
mov
sub
ja
and
or
fstp
adcb
mov
dec
cmp
sar
sarl
rcl
cmpl
aam
test
cmp
sub
inc
shll
xlat
lock
roll
sub
addr16
cmovp
xchg
mov
inc
xchg
cmc
sub
popa
cmp
inc
or
add
fidivrl
stc
loop
test
leave
gs
int3
jp
mov
and
or
jne
hlt
or
mov
aaa
lds
mov
jg
cltd
dec
mov
into
popf
sti
movsb
dec
add
xchg
xlat
test
cmp
adc
lret
xor
xchg
cltd
sbb
icebp
push
mov
cmp
cmp
pop
gs
test
sbb
movsl
repz
movsb
mov
xlat
jnp
xor
inc
jp
mov
adc
dec
cmp
inc
fldenv
cld
cmp
ss
push
add
test
push
push
adc
movsb
or
dec
pop
jb
sub
xor
iret
push
pop
xchg
out
mov
sbb
std
mov
std
mov
pop
movsb
mov
ret
sti
fsubr
mov
push
jl
ret
mov
sub
xor
cmp
hlt
loope
fidivrl
mov
adc
shll
mov
or
aas
jns
les
dec
push
out
call
aaa
push
pushf
xor
jnp
notb
mov
adc
adc
cmp
cmc
cmp
push
push
movsb
mov
dec
or
mov
or
lea
cmpl
cs
repnz
add
out
inc
stos
lods
add
movsl
mov
add
je
js
rcrb
mov
aam
sbb
sub
xchg
mov
dec
mov
or
aam
aas
dec
jns
mov
dec
push
xchg
xor
iret
xchg
pop
inc
jecxz
pop
fldt
mov
mov
mov
mov
inc
mov
iret
lahf
rcrb
jne
xchg
adc
pop
andl
mov
dec
sahf
xchg
xor
mov
jae
insl
add
jne
addr16
ficoms
idivb
out
jecxz
mov
mov
inc
pop
add
xor
or
jb
pusha
jmp
popa
dec
mov
fldt
adc
mov
out
lods
sub
cmp
adc
mov
add
xchg
sbb
push
imul
cs
pop
cltd
xchg
js
push
cmp
sub
pushf
adc
daa
or
cli
mov
aad
jb
fldl
dec
push
outsb
inc
xchg
nop
lahf
lcall
xchg
jo
inc
mov
jp
ds
and
pop
pusha
lahf
push
sahf
in
xchg
pop
cmpsl
push
sbb
dec
iret
scas
pushf
or
out
push
pop
xor
icebp
aas
pop
adcb
sub
pop
mov
out
push
xchg
movsb
dec
ret
fwait
aam
xor
pop
inc
shll
mov
leave
pushf
pop
movsb
and
jns
pop
or
sbb
pop
outsb
pop
aas
cmpsl
bound
or
jle
in
cmp
fldenv
sahf
xchg
adc
lock
repz
lock
and
mov
jns
inc
les
bound
clc
lock
andl
push
xchg
dec
jnp
mov
lods
setg
xchg
mov
inc
test
xchg
sahf
xchg
mov
addr16
cmp
sbbl
loopne
scas
push
jecxz
xor
pop
cmp
sub
out
test
xlat
stos
mov
outsb
jnp
xchg
xor
sbb
ljmp
dec
xlat
sub
or
mov
std
sarl
lret
lods
mov
jmp
shrb
sbbb
rol
add
in
jp
jbe
inc
stos
rol
cmpsl
movsl
les
aad
push
nop
mov
mov
stos
and
mov
fldl
and
jp
xor
jae
arpl
sub
mov
movsl
xchg
shl
aam
rcl
ss
or
fdivr
add
sbb
push
adc
jnp
test
pop
sub
cltd
push
sbb
sbb
imul
out
adc
xor
lret
and
add
mov
xchg
jnp
movl
push
inc
shll
jge
and
clc
cs
stos
sbb
incb
ror
sbb
cltd
inc
mov
repz
sti
pop
jle
fisttpll
inc
out
inc
sbb
aam
mov
aaa
popf
xor
in
stc
mov
scas
test
adc
push
int3
repnz
es
das
stc
ret
fiaddl
data16
pusha
shlb
inc
loope
push
mov
dec
mov
popa
mov
js
insb
push
lahf
and
xor
cwtl
xchg
aad
xchg
xchg
mov
lret
cmp
jbe
fcomps
push
rep
jge
js
rclb
adc
push
in
push
mull
cmp
or
stc
and
cmp
or
std
gs
xchg
xchg
sbb
push
mov
test
je
js
mov
outsl
out
add
sub
fs
jbe
mov
into
sbb
push
xchg
repz
xchg
dec
cltd
mov
push
pop
lret
push
in
scas
scas
ret
mov
sti
jmp
mov
fsts
pushf
cmc
xchg
xor
test
or
lret
out
xchg
xor
aad
notl
mov
cmp
push
cmp
mov
movsl
lods
fildl
cmp
nop
pop
xchg
add
fsts
sar
lock
dec
jmp
xor
ss
dec
inc
je
test
cmpsb
stos
sub
test
or
out
icebp
loop
jno
mov
dec
and
pusha
fldenv
lret
js
fcoml
and
add
cmp
xor
sbbb
lea
jnp
or
adc
lahf
sub
jecxz
cmpl
shrl
daa
mov
pop
adc
mov
dec
jnp
es
lret
movsb
inc
mov
scas
lds
orl
push
cmp
sbb
leave
das
pop
mov
ret
pop
call
sahf
dec
sub
inc
adc
mov
idiv
dec
aaa
mov
sub
movb
test
mov
inc
insl
xchg
adc
cld
imulb
lcall
fisttps
movsl
mov
out
push
adc
lds
aas
mull
mov
rclb
cmp
xchg
lret
out
mov
pop
or
cmc
xchg
push
fnstenv
dec
bound
or
shr
lea
dec
fcoms
xor
ja
ss
rolb
stos
lods
adc
mov
neg
test
pushf
xor
jle
fnstsw
mov
cmp
sbb
lds
jbe
jmp
push
in
xchg
fdivrs
dec
test
sub
cmp
adc
outsl
cs
pop
mov
mov
aas
aam
jg
or
jae
popf
cmp
or
sub
lea
jmp
por
push
xor
jge
lahf
popa
cltd
and
add
jo
pop
fwait
dec
out
sbb
or
jl
psubb
pushf
jb
outsl
dec
lahf
dec
fadd
lcall
dec
sub
test
and
lods
test
push
inc
lods
sbb
mov
sub
cmc
jmp
xor
jecxz
dec
xor
std
fadds
jbe
sbb
in
dec
push
add
sub
fwait
mov
aam
loopne
test
cld
push
cwtl
jge
stos
adc
flds
dec
inc
int
push
loope
adc
int3
pusha
insb
rcr
nop
sti
sarb
gs
repnz
loop
frstor
jecxz
pop
inc
test
xchg
lea
in
xchg
dec
imul
lock
jb
adc
mov
out
sub
imul
inc
lcall
mov
je
jb
jecxz
divb
cmp
test
cwtl
dec
test
sbb
aas
inc
pop
pop
and
xchg
xchg
cmp
dec
pop
pop
mov
lods
scas
sahf
das
es
adcb
in
into
adc
adc
out
sub
lods
jo
sub
out
xlat
add
add
push
movsl
sahf
and
jmp
jo
jbe
mov
out
push
int
in
mov
dec
leave
and
pop
sti
pop
and
aad
outsb
es
cmpsl
cwtl
repnz
mov
add
xor
scas
pop
outsb
pop
inc
cmpb
adc
fildll
mov
mov
movsb
cmp
mov
jle
inc
int3
or
adc
scas
cmp
ds
sar
popf
js
jmp
and
mov
jo
and
dec
pop
sub
cmp
clc
loopne
mov
icebp
stc
mov
mov
inc
mov
sub
dec
gs
mov
dec
or
leave
lock
lahf
scas
mov
sbb
cmp
pop
dec
xchg
mov
and
dec
xor
incb
cmp
mov
leave
ss
add
cmp
rorl
lods
xor
push
fs
sbb
insl
mov
test
fsts
loope
inc
adc
negl
mov
inc
and
fmull
nop
jnp
xchg
push
jne
scas
and
xchg
cs
or
lods
ret
gs
sbb
xor
scas
jp
mov
fmuls
test
inc
mov
in
lock
dec
fwait
std
or
sub
repz
ret
lods
aaa
cmpsb
add
aad
mov
xor
push
cmp
cli
mov
or
cmp
in
add
and
add
inc
sbb
js
out
cwtl
sti
add
int3
inc
cmp
iret
aam
xlat
aas
insb
jg
aad
adc
std
adc
je
adc
lock
mov
jo
rcll
mov
les
hlt
lods
gs
push
inc
cwtl
push
xor
pushf
movsl
mov
adc
pop
mov
cmp
mov
imul
pop
jmp
pop
push
popf
xor
aam
jp
rcr
stos
sbb
jle
mov
pop
dec
in
out
mov
sub
and
mov
push
inc
xchg
ficompl
dec
gs
test
inc
xor
push
jb
mov
jg
cmc
push
pop
push
inc
adc
in
daa
and
in
jmp
pop
jbe
push
sbb
les
jne
or
dec
int3
clc
adc
mov
xor
pop
leave
aam
stc
arpl
cmp
stos
imul
mov
stos
shll
int3
inc
lret
jp
push
in
mov
jl
je
jae
sbbl
pusha
inc
aaa
pushf
and
stc
push
or
js
mov
scas
scas
jmp
fs
mov
xor
mov
pop
mov
jne
cmp
or
scas
pop
jbe
out
lock
add
lret
das
fcomps
cwtl
pop
setne
pushf
cmp
and
into
xchg
jp
sub
add
fimuls
xchg
mov
dec
xor
mov
loopne
shlb
cwtl
mov
inc
mov
leave
std
mov
xor
popf
push
fistpll
mov
xchg
jmp
xor
xchg
insl
stos
fs
leave
sahf
cmp
jle
daa
add
leave
out
out
jmp
push
xor
xor
les
lcall
sahf
pop
cmp
lret
mov
jmp
nop
dec
jmp
loope
cmp
cmp
stc
and
or
fimull
test
rep
ret
mov
loope
scas
inc
mov
jge
mov
aad
jne
ss
pop
scas
pop
mov
inc
inc
cli
adc
push
and
mov
scas
fildll
mov
jg
jb
js
lret
pop
jo
ja
jmp
rolb
pop
stos
fnsetpm(287
imul
aas
adc
add
aas
addr16
lods
pop
mov
and
sti
hlt
cltd
dec
sti
test
mov
pop
dec
push
fsts
stos
repz
cld
add
imul
dec
pop
xor
scas
mov
dec
xchg
cld
adc
pop
cmp
inc
add
loope
or
mov
ljmp
sub
mov
rol
inc
inc
popf
cmpsl
pushf
cmp
repnz
sbb
addr16
clc
or
mov
and
xchg
pusha
sub
adc
sbb
and
cli
mov
into
fst
push
pop
xchg
int
add
outsb
mov
jge
dec
sbb
or
mov
xchg
or
sbb
jo
xor
sbb
add
shr
xor
push
fsubrl
movsb
ja
mov
mov
and
pushf
imul
movsl
out
mov
enter
ja
xor
sub
xchg
push
je
hlt
push
test
das
push
cmp
fwait
inc
pop
fbld
cmp
aaa
cltd
add
rorb
xor
lret
inc
lods
mov
inc
lock
ret
js
nop
call
sub
out
call
push
xchg
sbb
stos
sbb
out
inc
pop
jl
imul
lock
fsubrl
sub
std
mov
stos
mov
outsl
or
gs
scas
insb
cld
xchg
pop
xchg
and
sarb
pop
lahf
in
mov
ljmp
flds
nop
aad
adc
loop
push
jns
dec
adc
sbb
das
xchg
adc
mov
mov
mov
inc
arpl
sub
ret
fiadds
jns
mov
cmp
push
popa
imul
fisttpl
cmp
popf
lcall
loop
mov
xor
loopne
in
mov
data16
hlt
mov
cmp
scas
cmc
stos
in
jnp
std
into
xchg
push
lods
push
inc
stos
or
mov
ljmp
pop
scas
dec
sbb
into
push
lret
cmpsb
lret
mov
iret
push
imul
push
enter
sbb
sbb
sbb
ja
stos
pop
cltd
add
lret
out
add
xchg
mov
mov
hlt
xor
outsl
mov
es
inc
jle
loopne
mov
jb
test
xchg
xchg
pop
movsb
or
jecxz
dec
sbb
xchg
cmp
add
jne
xor
push
out
inc
jecxz
mov
jge
out
mov
mov
sub
sbb
xlat
cmp
cmpsb
daa
dec
mov
stos
call
sarb
fisttpll
and
cmp
in
shlb
mov
das
dec
pop
test
shlb
sahf
loope
inc
push
push
or
xchg
pop
insb
and
cmp
rcr
sub
out
pop
jecxz
addr16
mov
jo
mov
dec
lret
mov
adc
or
cli
das
mov
pop
lods
aaa
jg
ret
pop
lret
or
imul
insl
les
push
shlb
fwait
mov
and
les
aas
aam
adc
mov
jo
rcr
repz
and
jl
mov
enter
push
aam
adc
xorl
pop
dec
test
adc
loope
fnsave
add
imul
push
fcmovnbe
aam
loope
stc
hlt
mov
inc
cmpsb
and
std
mov
xor
mov
xlat
ja
dec
push
inc
jmp
jo
leave
bound
push
adc
mov
aam
push
lea
aas
push
out
pop
sahf
sti
dec
mov
adcb
mov
ror
sub
out
in
mov
daa
mov
xor
dec
jmp
adc
orl
lock
or
cmp
mov
sahf
and
push
jge
popa
aad
data16
pop
mov
jle,pt
ret
movsb
mov
imul
pusha
mov
sub
dec
xchg
xor
aam
loope
das
nop
popa
adc
xchg
jo
push
dec
sbb
mov
in
shll
daa
xchg
fcmovb
popf
push
es
mov
xchg
push
jbe
insb
ja
add
out
icebp
mov
cmc
insb
pop
pop
xor
push
fstpl
sbb
push
mov
loop
push
jbe
repz
adc
pop
pop
outsl
mul
push
add
dec
fsubrp
jge
aad
sub
pop
and
cld
ds
add
xlat
out
data16
std
jae
mov
dec
jns
les
or
addr16
dec
push
inc
dec
mov
dec
loopne
enter
cmp
sti
adc
iret
leave
imul
std
cmp
add
mov
aaa
lds
mov
adc
jp
mov
inc
jae
xchg
add
lods
dec
push
ljmp
mov
in
js
ds
add
aam
jnp
cmpsl
inc
pop
and
sbb
in
pop
in
cmpsb
test
stc
shr
test
ja
pop
mov
cmp
shl
push
lds
sub
mov
jno,pt
enter
jg
and
addl
push
inc
nop
psrad
and
inc
jo
and
adc
xchg
mov
call
pop
outsl
arpl
out
push
mov
jg
or
mov
imul
sub
push
add
mov
loope
jge
les
xor
in
movsl
dec
rolb
nop
xchg
mov
loop
and
lahf
xchg
mov
sub
pop
mov
xchg
movsb
pop
jle
lret
sbb
loope
jmp
stc
roll
push
xor
sbb
xor
xchg
aas
push
sbb
std
adcl
fcompl
and
jp
push
xchg
cmp
inc
pop
xlat
sarb
sbb
lods
sbb
pop
adc
adc
pop
cld
jmp
ret
enter
test
adc
ds
pop
adc
jge
inc
push
add
cmp
lea
imul
mov
loopne
daa
lock
aam
sub
push
test
insb
negl
leave
gs
inc
divb
popf
or
jb
jl
adc
movl
pop
daa
or
mov
out
mov
add
mov
dec
add
push
pop
loope
or
jo
mov
jb
mov
lahf
repz
push
fildl
in
xor
push
add
push
dec
or
shll
ljmp
and
add
add
or
mov
gs
cwtl
ret
scas
icebp
js
insb
cmpsl
pop
or
jne
adc
mov
jp
cmpb
or
dec
int
es
cltd
dec
data16
adc
fcomps
cmpsb
test
xbegin
out
cld
pop
enter
pop
test
int3
jecxz
add
push
add
add
lret
addl
push
sub
inc
and
dec
mov
ds
or
xlat
xor
jnp
dec
and
mov
dec
leave
inc
clc
ret
jecxz
and
inc
xchg
stos
lret
mov
int
jns
add
out
idivl
dec
mov
xor
lret
xchg
push
subl
and
ds
test
xor
jp
imul
jecxz
test
test
mov
sub
jl
and
and
xchg
andb
pop
mov
scas
shll
jns
pusha
aas
ja
mov
cmp
dec
outsl
fwait
dec
call
and
sub
adc
lds
dec
inc
or
jg
bound
jl
add
sbb
test
mov
incb
mov
add
xchg
shrl
fnstenv
xor
sbb
out
push
cmp
daa
jg
les
dec
inc
lahf
mov
mov
or
in
jmp
cmpb
jne
cmp
mov
push
add
mov
std
jmp
xchg
lret
fwait
mov
mov
cmp
std
pop
pop
dec
bound
in
scas
xchg
mov
push
psllw
test
sub
call
jno
dec
push
push
xlat
xor
adc
push
mov
mov
inc
cmpsb
aad
lret
ret
xchg
clc
mov
mov
mov
jg
dec
mov
hlt
xchg
adc
outsb
fcompl
cmp
test
mov
mov
push
xchg
aad
xchg
hlt
sarb
jp
pop
sahf
adc
lcall
into
jae
add
in
mov
std
fidivrs
inc
or
push
and
jmp
xor
push
repnz
add
xchg
add
repnz
in
lret
addr16
shrb
pop
push
inc
ficompl
ja
push
imul
adc
push
shrl
pusha
mov
mov
xchg
cmpb
js
loope
jecxz
insl
stos
jae
addr16
ret
ret
pop
dec
sbb
enter
in
andb
in
add
mov
ss
jle
psadbw
mov
jp
mov
jmp
das
mov
pusha
popa
repz
lods
dec
sub
sbb
xor
ret
out
sub
cmc
mov
sub
jae
mov
or
sahf
mov
daa
int3
push
sub
mov
sbb
mov
sub
in
rclb
loop
ja
jno
loop
rcl
cmp
and
mov
adc
adc
pushf
push
sub
xor
lds
pop
push
or
ja
add
test
xchg
loopne
sub
cmpb
xor
test
push
rorl
testb
sub
stos
je
adc
sbb
xchg
nop
mov
jo
bound
ljmp
cmp
xor
add
cmp
je
jb
scas
xchg
sbb
xor
outsl
movb
dec
in
pop
icebp
and
mov
sub
cmp
testb
in
inc
xchg
mov
repnz
cmc
addl
cs
flds
adc
adc
xchg
int3
xchg
inc
push
and
xlat
ja
xor
inc
arpl
cld
cmpsl
adc
or
xchg
sub
and
mov
fsub
jb
aas
data16
mov
mov
adc
add
js
mov
shrl
aad
fisubs
xor
out
inc
mov
xorb
sub
inc
jp
out
mov
xchg
rclb
add
sahf
inc
add
fstps
sbb
xchg
bound
sti
pusha
mov
aam
push
ret
jns
std
sub
in
scas
lds
push
pop
cld
mov
push
sarb
addr16
xlat
push
orl
fwait
xchg
vcvtss2si
pushf
ss
fneni(8087
xor
jnp
push
pop
add
cmpsl
adc
cmc
inc
sbb
imul
ljmp
dec
and
stos
sbb
rcrl
aaa
xchg
gs
xchg
mov
mov
ss
insb
enter
repz
ds
and
jl
fcomi
add
andb
cli
jle
out
sub
lea
hlt
sbb
in
outsl
cmp
pop
insl
insb
cmp
or
getsec
or
mov
push
pop
jne
lds
enter
sub
addr16
push
out
mov
fwait
mov
pop
push
mov
dec
andb
outsb
cmp
xor
pop
orb
xor
push
cmpl
push
push
pop
ljmp
pop
xchg
jnp
and
jno
je
pop
jno
ss
les
insb
pushf
shll
pop
jae
pop
sbb
sbb
stos
mov
adc
cmp
inc
pop
das
mov
jecxz
add
aaa
or
js
imul
xchg
xchg
mov
adc
xchg
jg
lods
mov
xor
fwait
sub
adc
and
mov
repnz
cmc
mov
fstpt
sub
cltd
outsb
inc
mov
xchg
xchg
test
jnp
dec
imul
loop
adc
or
leave
add
in
jne
das
scas
lods
repz
cmp
cmp
es
or
cs
in
lds
and
mov
jo
sbb
adc
loopne
inc
movl
mov
add
in
push
cmpsb
push
bound
add
or
pop
push
mov
jo
push
in
and
iret
jbe
sub
int3
fstl
dec
jns
shrb
fldl
leave
sbb
sub
scas
xchg
pop
dec
sbb
dec
cltd
and
cli
xchg
mov
nop
faddl
push
dec
dec
sti
es
clc
and
ljmp
adc
dec
pop
inc
jno
dec
jge
sti
iret
mov
sahf
imul
mov
adc
pop
subl
jbe
pop
andb
mov
out
sub
cmpsb
pop
enter
cmp
dec
lahf
push
or
addr16
cwtl
je
fcomip
jle
mov
dec
std
out
mov
and
insb
test
stos
add
fdivr
cwtl
xchg
ftst
ud1
std
shrb
popa
sti
xchg
dec
imul
int
pop
and
bound
inc
cmc
xor
ficompl
out
sub
push
and
out
repz
imul
rcll
loopne
popf
jle
xchg
ss
icebp
jno
js
pop
pop
jmp
imul
sub
pop
sub
loop
leave
negl
and
xor
insb
je
imul
stos
imulb
mov
andb
xor
lcall
ss
shll
test
jb
push
rol
push
sysret
aaa
dec
mov
sbb
add
pop
push
dec
ljmp
adc
mov
inc
dec
leave
xor
cmp
loop
into
xor
mov
dec
fidivrl
cmp
sbb
repz
mov
or
inc
sbbl
hlt
jnp
sub
jmp
and
insb
cltd
out
testb
dec
scas
cmpsl
jl
gs
das
aam
outsl
sub
int3
cmpsb
inc
arpl
dec
sub
ror
xchg
jmp
dec
jmp
sbb
mov
xchg
jne
jo
or
add
int
cmp
jae
movsb
aam
add
scas
sub
jb
xchg
test
mov
dec
insl
xlat
add
aaa
mov
pop
push
xor
dec
mov
outsb
adc
mov
sarl
insb
stc
rclb
cmp
and
xchg
or
es
ret
sbb
xchg
sub
dec
jge
insb
jae
push
lahf
jnp
lods
hlt
test
jle
jecxz
jl
xchg
das
loope
leave
je
jle
push
fbstp
out
sahf
out
loope
sti
xor
int
inc
pop
ret
lods
cwtl
fistpll
sub
leave
add
fldcw
pushf
addr16
addr16
fistpl
movsl
lcall
cmpsl
jmp
mov
movsb
pushf
loope
ljmp
xor
sbb
add
data16
xor
pop
jne
leave
stos
or
testl
test
adc
push
sub
sub
ds
je
mov
dec
mov
pop
loop
xor
xor
outsb
lret
adc
pop
lret
push
test
test
fisubrl
lods
pop
cmp
mov
lds
aaa
and
loop
mov
orl
cld
stc
sbb
movsb
pop
or
mov
cmp
mov
scas
add
andl
ret
or
into
mov
mov
push
cli
cmp
lods
aam
orl
xchg
adc
imulb
xchg
xchg
push
push
cmc
mov
sub
repz
push
sbb
add
xchg
add
xchg
and
mov
mov
lods
scas
jp
cltd
je
jbe
dec
jae
pop
sub
fmull
stos
inc
and
and
xchg
cmpsl
neg
enter
and
loop
add
inc
int3
shll
loop
mov
out
inc
fbld
test
sub
paddd
es
icebp
cli
scas
call
adc
test
jecxz
test
lret
es
mov
and
cmp
js
push
cmp
shrl
push
lds
aaa
lahf
mov
mov
mov
dec
das
pusha
addl
xchg
dec
or
jp
sbb
mov
clc
push
cmpsb
roll
lcall
insl
pushf
xchg
ds
cli
pop
movb
or
loop
cmp
jo
cmpsb
cwtl
shrl
cmpl
leave
jae
mov
and
mov
int3
push
cmc
loop
pop
adc
fistps
jns
cld
xchg
icebp
lcall
adc
addr16
lock
lret
call
in
in
adc
data16
cmp
repz
cmp
jecxz
cmp
push
xor
out
imul
mov
xchg
mov
xchg
mov
push
cld
int3
pop
insb
sub
subl
cmp
push
insb
add
sub
data16
sub
ret
test
jns
cmp
mov
data16
mov
adc
pop
cmpsl
pop
lods
js
fimuls
inc
mov
push
jg
aaa
repnz
dec
push
push
rcr
pusha
jne
and
lahf
add
adc
xchg
push
xchg
add
mov
sub
loope
aam
pop
lea
clc
dec
cmp
pop
and
xchg
add
jge
arpl
sbb
push
out
jmp
mov
jp
lea
fistpl
xor
cwtl
and
inc
xchg
jl
xchg
les
mov
lret
jne
stos
cs
cmp
popf
sub
add
push
sbb
ffree
pop
jne
insl
jae
aaa
out
imul
push
arpl
xlat
pop
sub
arpl
div
push
jecxz
jo
push
sub
xchg
lds
push
inc
stos
movsb
mov
pop
add
cmc
test
add
or
imulb
pushf
idiv
add
test
testb
mov
adc
mov
int3
sbb
imul
scas
xor
ljmp
cmp
enter
sti
mov
fimuls
rorl
mov
fcmovbe
lock
jecxz
cmpsb
cmp
out
stc
cmp
mov
or
adc
inc
sub
xchg
sub
outsb
scas
daa
adc
sub
push
cmp
lret
pop
mov
or
fwait
mov
scas
dec
adc
or
xor
lcall
mov
jo
inc
cmp
andb
loope
and
fldenv
es
or
push
mov
sbb
push
pop
loope
jne
pop
jmp
push
mov
xor
xchg
xor
imul
push
mov
mov
fwait
cmp
cwtl
xor
mov
lods
add
popa
int3
inc
stc
cmp
dec
sub
fldl
cli
fisubl
dec
jmp
mov
mov
stos
aam
dec
mov
gs
aas
mov
sbb
jne
lret
mov
and
aad
jne
sbb
pop
cmp
div
mov
jp
inc
inc
xor
scas
pushf
sbb
dec
mov
or
fcmovb
das
fldl
pop
ret
adc
add
loope
inc
and
pusha
sbb
mov
mov
inc
decb
jne
xchg
sahf
scas
sbbb
repz
and
popa
pop
test
dec
aad
pop
outsl
jl
cwtl
inc
inc
and
sub
fwait
xchg
adc
jl
mov
jle
or
push
scas
call
rcr
xchg
sub
push
outsl
or
lret
movsl
xchg
lahf
cmc
sub
imul
nop
icebp
sub
jmp
and
jge
xlat
imul
imul
icebp
sub
xor
out
add
aam
xchg
xor
data16
push
call
jo
xor
sub
leave
mov
xchg
dec
movsl
popa
js
mov
mov
push
ja
sarl
out
adc
divb
sbb
mov
jg
cmc
push
ss
adc
call
push
pushf
sub
push
push
clc
pop
mov
jmp
xchg
test
push
push
xchg
inc
sbb
dec
sbb
pop
and
les
pop
repnz
or
sub
mov
fwait
jnp
cmpsl
in
xchg
sbb
sub
testl
inc
hlt
jns
lcall
pop
cmc
cmp
mov
dec
mov
push
jecxz
jge
pop
jno
stc
or
push
int3
scas
fsubrs
adc
cld
pop
jg
imul
xchg
push
movsb
cmp
clc
negl
shll
out
ds
into
enter
mov
or
test
in
push
xchg
xchg
into
xor
into
mov
sbb
test
push
bound
xchg
insb
inc
sahf
mov
xchg
and
test
aad
sub
cmp
insl
adc
cwtl
mov
sub
mov
mov
cmovnp
int3
loopne
int
mov
test
inc
lahf
sub
push
cmp
xchg
mov
sahf
cli
pop
test
mov
enter
mov
icebp
push
inc
xchg
sub
mov
push
fimuls
fists
mov
cmp
das
cmp
add
into
test
in
push
stos
jns
pop
icebp
cmpsl
xor
push
ret
movsl
jl
sbb
cwtl
dec
mov
xor
lret
add
not
mov
push
mov
and
dec
sahf
gs
or
push
jp
mov
fcom
gs
jae
clc
fcomps
sbb
mov
push
test
dec
lods
cwtl
jne
mov
outsb
mov
cld
loope
daa
cli
cmp
and
hlt
mov
lret
adc
bound
adc
sub
push
push
aad
push
jns
out
jns
fstl
scas
jle
jmp
dec
outsb
jmp
mov
adc
inc
adc
lahf
dec
dec
xchg
or
and
adc
push
jo
lahf
mov
lods
or
jp
outsl
data16
negl
shlb
aad
lock
test
ret
shll
mov
outsl
out
mov
in
andl
push
mov
dec
push
testb
movsl
jmp
das
add
mov
movsb
cmpsl
cmpsb
sbb
test
out
in
repz
pop
jnp
rorl
sbb
loop
mov
inc
xor
or
aas
pop
or
and
xor
xor
jnp
enter
cmp
xchg
sbb
outsb
ds
jmp
loopne
and
sbbl
jne
aaa
push
xchg
add
mov
test
imul
xor
outsb
test
add
xlat
sub
incb
sbb
dec
cmp
aaa
mov
cltd
dec
pop
and
je
dec
in
test
cwtl
pop
pushf
les
adc
add
jb
cltd
test
mov
out
fadd
fimuls
movsl
mov
jnp
add
sub
inc
cmp
xor
pop
loopne
dec
xchg
test
push
add
cmp
imul
jno
cmpsb
insl
in
jp
ret
jns
fsubrl
aam
ljmp
and
movsl
or
jbe
ljmp
mov
dec
cltd
pop
je
push
jo
int3
push
js
push
mov
jo
insb
stc
adc
cmp
jg
and
sbb
scas
fisubrs
push
loope
cmp
fdiv
jo
sub
push
cmp
pop
push
imul
add
pop
mov
lods
rcll
cmp
sarb
lret
aam
dec
lret
sbb
push
cmp
mov
mov
mov
jg
iret
in
xchg
in
outsb
imul
mov
mov
mov
lods
and
fimull
in
pop
leave
and
cmp
loope
pop
fs
ds
sub
cmp
rorb
scas
jbe
add
insl
pop
mov
fnsave
out
adc
repnz
mov
popf
mov
shll
adcl
ds
daa
inc
push
xor
imul
or
cmp
mov
push
or
sbb
lds
sbb
ss
imul
sbbl
xchg
push
or
test
adc
dec
pop
or
and
test
int3
xchg
pop
std
and
xorl
sub
mov
adc
xchg
fwait
nop
pop
filds
ret
cmpsb
int
dec
xchg
add
popa
decl
xor
cmp
aas
mov
fstps
jbe
insl
fdivrl
jae
popa
not
add
subb
aad
mov
inc
enter
push
jns
mov
mov
scas
nop
addr16
jns
cmp
push
roll
jle
cli
sbb
or
and
pop
fisubrl
push
fcmovnu
in
ret
xchg
and
lods
mov
xchg
fnstcw
popf
or
lahf
loop
rcrl
aaa
jne
dec
stc
shl
iret
inc
push
and
or
and
mov
insb
test
int
cmp
sti
popa
inc
aam
insl
arpl
inc
sti
mov
adc
fnstcw
packssdw
sti
push
mov
jp
and
lock
cwtl
std
mov
pusha
daa
lods
cmp
je,pn
test
fprem
rorb
fwait
mov
cs
call
loop
push
sarl
roll
and
jb
faddp
push
imull
stos
pop
jmp
inc
sbb
pop
cli
test
leave
cmc
cmp
lods
cs
cmp
xchg
and
xor
ljmp
fadds
out
pop
xor
xor
pop
cwtl
dec
push
or
cwtl
xor
push
in
lahf
in
cmp
movsb
pop
or
push
cltd
pop
movsl
dec
inc
push
xlat
and
xchg
sti
outsb
inc
ficomps
incl
sti
loopne
dec
insl
fidivrl
into
popa
xchg
arpl
mov
push
mov
ss
inc
incl
dec
jmp
sbb
or
addl
sbb
js
add
or
pop
add
mov
mov
lods
sarb
aam
in
xchg
addr16
or
data16
fisttpl
jl
xchg
xchg
mov
push
test
sar
adc
sbb
inc
mov
subb
add
push
mov
and
xor
int
mov
inc
xor
xor
or
out
cmp
adc
in
xchg
sbb
cmp
xchg
lcall
sbb
mov
jbe
pop
shlb
sahf
pop
pop
addr16
pop
shlb
repz
sub
ret
adc
sub
ja
sub
mov
adc
and
inc
jecxz
sub
dec
and
sub
js
mov
std
dec
pop
dec
int
adcb
or
lods
and
fiaddl
into
rorl
and
int
dec
repnz
xor
lea
stos
or
and
pop
lods
mov
push
mov
mov
mov
jl
in
pusha
dec
ret
mov
into
xchg
mov
and
enter
fcmovnbe
cmp
outsl
mov
sbb
out
inc
aam
cmpsb
ret
push
lods
subl
pusha
fnstenv
lcall
inc
jbe
cmp
out
sbb
sbb
ror
aas
roll
sub
add
nop
lahf
add
insb
stos
stc
or
lods
pop
shlb
xchg
jno
leave
jne
and
scas
loopne
out
scas
adc
cltd
push
addr16
push
inc
rclb
popf
scas
inc
adc
cmp
sub
pop
inc
lds
sbb
mov
mov
cli
mov
fs
mov
xor
fstpl
cmp
lea
inc
movsb
mov
jge
cmp
ljmp
mov
mov
jb
lods
pop
mov
mov
stos
and
aaa
push
aam
and
outsb
cwtl
hlt
jge
loop
jne
adcb
stc
daa
adc
mov
mov
jne
rcrl
dec
out
mov
inc
orl
lret
hlt
add
pop
push
movsb
mov
add
call
fistpl
in
les
mov
orb
mov
wbinvd
push
xchg
push
rcrl
rcr
out
add
add
pop
push
sub
mov
rorl
mov
sar
cwtl
addr16
int
clc
and
mov
loop
sub
xchg
mov
add
push
mov
jge
jne
dec
pop
add
mov
add
xchg
ret
sahf
scas
and
dec
jmp
adc
dec
pop
dec
push
data16
rcl
std
loop
inc
lods
out
daa
pop
jecxz
push
mov
push
test
shrl
xor
pop
pop
sti
mov
sub
mov
and
jns
push
out
popa
mov
jle
sbb
push
mov
jecxz
clc
imull
mov
arpl
xchg
lock
pop
movaps
xor
and
dec
lock
les
stos
push
mov
repz
lret
pop
aam
jb
shrl
jns
cmp
out
adc
movsl
adc
jo
sub
scas
and
int3
lods
rcl
dec
xor
cltd
xchg
sub
ljmp
mov
mov
gs
js
jo
cmp
adc
loop
stc
add
pop
xchg
mov
pop
add
int3
fisttpl
outsl
in
movsl
mov
in
movsb
mov
popa
fnsave
and
xchg
cmpsb
cmpsb
nop
add
and
sub
add
jb
aas
out
mull
pop
loopne
imulb
inc
imul
bound
or
xchg
fmull
push
stc
jl
and
and
cmp
ret
clc
cmp
div
xor
sub
xor
pop
xor
or
test
test
and
xlat
jae
mov
imulb
sbb
paddw
pushf
aaa
pop
call
ja
dec
sub
mov
aaa
and
lods
adcl
outsl
cli
adc
inc
jae
jg
fsubs
inc
mov
xor
gs
divl
push
icebp
lds
cld
mov
pop
dec
leave
jmp
icebp
sub
and
pop
outsb
cmp
test
adc
sub
shr
aas
or
mov
xchg
cmc
inc
and
icebp
hlt
cmp
lods
jns
sub
loop
dec
or
dec
or
cmp
in
aam
cwtl
dec
clc
jno
cmp
js
sahf
leave
cmp
mov
add
stos
movsl
andb
bound
xor
push
out
jae
mov
repnz
mov
out
aaa
pop
imul
jnp
mov
xor
dec
ror
aaa
cmp
jg
push
xor
fbstp
cmp
mov
inc
pop
push
push
fdiv
inc
adc
sbb
sub
mov
push
jno
shll
aaa
fidivrs
outsl
jns
pop
sub
add
inc
xchg
repz
jno
into
adc
xlat
xor
addl
cltd
sbb
or
aam
add
xor
rcrb
fwait
sbb
xchg
cwtl
int3
dec
push
adcl
adc
arpl
and
aam
clc
popa
ret
add
popf
ret
and
out
dec
daa
outsb
mov
fsubrl
sbb
into
adc
jmp
test
neg
mov
xor
movsl
inc
hlt
sbb
stos
cld
push
mov
fmuls
dec
or
and
mov
xchg
lods
xchg
into
pop
pop
ja
jmp
fstpt
jecxz
push
neg
sub
in
rorb
and
cmpsl
xorb
mov
xlat
sbb
aaa
or
and
or
cmc
mov
mov
dec
or
push
or
pop
pushf
popf
mov
xchg
das
enter
mov
and
adc
dec
and
scas
imul
or
repnz
mov
lcall
push
mov
loope
ss
nop
fnstcw
lds
leave
xchg
dec
push
nop
dec
testl
pop
pusha
and
ret
pop
xor
fiadds
adc
out
testl
mov
push
repnz
pop
call
or
lock
data16
or
rcrl
cltd
pop
dec
rcll
faddp
cmp
or
pop
mov
xor
ljmp
subb
lods
and
fmuls
fmuls
sub
mov
jmp
fwait
and
fbld
ret
nop
outsb
cmp
adc
xor
sub
push
push
xchg
xchg
int3
push
xor
shrl
scas
xchg
sahf
nop
rep
insl
push
inc
jbe
enter
or
pop
lcall
aam
insb
sbb
dec
fldl
push
frstor
and
test
call
dec
outsb
cmp
push
or
pop
icebp
xchg
pop
xchg
lock
lahf
mov
or
test
dec
pop
or
movsb
cmp
inc
sub
sub
and
lods
loope
dec
mov
out
imulb
jnp
popa
fsubrl
sbb
sti
repnz
jl
in
lods
jge
push
dec
or
push
jo
es
push
mov
insl
or
cli
sbb
stos
loopne
sbb
sub
icebp
and
add
adc
push
pop
xor
xchg
xchg
mov
cmp
lds
sbb
mov
cs
cli
imul
jle
mov
mov
xchg
dec
jl
pop
pusha
xchg
imul
xor
jae
lret
inc
xor
push
popl
mov
popl
xor
shl
ds
jno
push
stc
sub
ja
dec
pusha
fnstenv
imul
pop
mov
sbb
xchg
pop
sbb
setp
mov
and
fs
jle
mov
cld
ret
mov
xor
ret
clc
mov
push
in
cmc
push
mov
mov
mov
cmp
lods
fsubrp
roll
test
pop
push
arpl
testl
jp
push
xchg
xorl
in
add
cltd
mov
inc
in
mov
cli
and
aam
addr16
sub
sub
cmc
or
dec
imul
in
xchg
icebp
sti
int
pushf
out
push
insb
test
cmp
jmp
clc
lea
ror
sub
mov
push
icebp
lock
in
mov
mov
inc
jmp
imul
stos
pop
addr16
rcll
sub
popf
cltd
sub
es
leave
cmp
mov
add
mov
setb
and
lahf
pusha
fbld
outsl
xchg
fwait
aas
divl
xchg
arpl
sub
cmp
cmp
jae
dec
repz
inc
lahf
push
mov
inc
sbb
inc
sub
imul
jp
push
sbb
sti
pushf
aam
mov
call
sahf
mov
daa
sbb
push
push
test
ja
push
ret
sub
dec
xor
lcall
imul
loop
mov
imul
hlt
cmpsb
xor
xor
insb
fisubl
and
add
pop
mov
outsl
ja
hlt
jmp
or
adc
push
leave
int
push
jg
jns
or
sbb
push
inc
pop
cmp
addr16
fwait
jbe
pop
push
setnp
into
dec
lret
sbb
cwtl
andl
mov
mov
fildl
test
stc
jecxz
push
jnp
inc
or
insb
in
nop
shlb
mov
ss
jns
push
cmp
sbb
fnstenv
cli
hlt
insl
dec
or
pop
js
sbb
xor
ja
stos
jno
dec
mov
icebp
and
jae
pop
mov
shll
mov
ret
mov
outsl
negl
push
lock
or
mov
add
sahf
iret
add
loopne
sbb
pop
lea
pop
loope
insb
ret
shll
xchg
inc
cmp
xlat
imul
mov
lea
xchg
daa
arpl
mov
cltd
cli
or
fsubr
je
xor
mov
lret
in
push
shll
sbb
mov
stos
add
mov
movsb
inc
xor
mov
shlb
xchg
out
loopne
sbbb
dec
cmp
cmp
popa
cmp
xchg
or
out
jle
fistpl
test
pusha
leave
and
cmpsb
xchg
rorb
cwtl
js
xchg
pop
inc
test
loop
or
xchg
popf
lret
int
int3
ret
clc
add
fisttpll
rcrb
test
mov
sbb
pop
fimull
pop
fsubs
xorl
movsl
sub
mov
mov
or
push
out
jg
filds
daa
cmp
mov
inc
mov
cwtl
and
mov
jl
ja
rcl
xlat
lock
icebp
cmc
xchg
mov
mov
jp
daa
and
xor
push
jp
sub
mov
pushf
push
mov
test
int
add
sti
cli
addr16
or
dec
cli
adc
jo
iret
pushl
in
pop
inc
xor
mov
lcall
inc
mov
aaa
xor
xor
cmpsb
add
or
pop
add
sub
lea
pop
inc
dec
cmp
in
stc
add
sbb
dec
xor
pop
loope
xor
cmp
sti
cltd
and
js
mov
faddp
jge
call
xchg
sbb
pusha
int3
int3
xchg
lds
add
sub
sub
mov
repnz
out
jne
lods
jo
cmp
pop
mov
insl
mov
iret
arpl
dec
fildll
mov
ret
cmp
popl
out
inc
hlt
jo
inc
xchg
loope
popa
decl
pop
rcll
mov
js
pop
mov
cmp
gs
andl
mov
adc
push
sbb
in
cltd
add
adc
lods
or
lea
gs
mov
mov
lahf
push
out
pop
fwait
and
out
jmp
cwtl
nop
ds
xchg
lahf
push
cmc
sahf
notb
stos
xchg
or
sub
mov
and
mov
dec
adc
push
mov
pushf
cmp
lret
cwtl
in
es
mul
xor
mov
mov
imul
sub
or
xlat
rcl
test
in
repz
mov
xor
imul
iret
add
in
adc
scas
shll
pusha
fs
mov
aas
pop
push
mov
pop
lds
test
out
add
inc
push
sbb
adc
fwait
std
mov
push
ror
loope
cmc
jb
mov
arpl
ficoms
clc
aas
fs
push
mov
and
mov
das
and
outsb
cmp
test
repz
push
pop
mov
ss
xlat
out
mov
das
jl
ret
ss
ficompl
mov
push
out
pop
sbb
in
into
out
test
arpl
lea
and
aad
jae
add
aam
push
fdivr
outsl
in
or
cmp
mov
pop
hlt
lods
sbb
aas
iret
mov
dec
dec
sub
add
mov
and
pop
pop
sub
rcrl
xchg
mov
jnp
xor
mov
jnp
or
cmc
fwait
sbb
mov
add
lret
jl
loopne
push
mov
jno
sub
insl
sub
mov
xchg
repz
cli
ljmp
stos
imul
push
or
inc
scas
adc
sub
xor
inc
jbe
loope
fwait
insl
fucomp
scas
cmp
push
test
xor
loop
inc
mov
lahf
cmpsl
xlat
iret
repz
mov
shr
sub
shlb
pop
and
push
arpl
out
and
cmp
xchg
and
insb
sbb
jne,pt
mov
dec
in
jae
sub
or
jae
and
fidivrs
mov
sahf
lods
mov
sbb
popf
xchg
popf
inc
adc
cs
mov
adc
iret
xchg
xor
lods
pushf
dec
scas
mov
adcl
out
and
mov
mov
push
repnz
adc
and
sbb
insb
cltd
fsubs
mov
movsl
aas
sbb
hlt
mov
or
adc
adc
leave
push
or
fwait
pop
cmpl
fnstsw
dec
xor
popa
push
jl
fwait
fs
dec
push
sbb
mov
std
int3
xchg
mov
out
fstpl
ja
inc
hlt
and
jno
xchg
je
lret
repz
or
dec
pop
or
xchg
xchg
je
mov
mov
in
adc
out
subb
in
das
fists
out
daa
pop
shlb
fs
dec
jmp
cmp
gs
js
into
xor
mov
adc
dec
cmpsb
jno
in
les
mov
sub
jmp
push
sbb
scas
aas
pop
imul
leave
es
jbe
js
test
daa
mov
push
pop
das
dec
das
lcall
les
xorb
cmc
mov
inc
pop
mull
push
and
sahf
inc
cmp
xchg
and
push
xor
cmp
jo
mov
sbb
div
cld
sbb
xor
je
pop
clc
and
stc
or
pop
dec
cmpsl
in
fcmovbe
and
jmp
shlb
ljmp
outsl
mov
popa
mov
pop
lret
mov
dec
repz
ja
cli
xor
sarl
pop
mov
fs
jbe
cli
imul
lods
xchg
xchg
pop
mov
mov
cmp
pop
stc
inc
js
mov
jp
cmp
xchg
fmuls
cmp
cmp
dec
jg
mov
imulb
inc
xor
dec
xchg
test
test
imulb
movsl
lcall
stc
fsubr
pop
mov
mov
testl
call
mov
outsl
outsl
aas
pop
nop
int
or
inc
fsubs
mov
mov
xchg
pushf
fwait
and
insb
bnd
xchg
daa
sub
repz
insb
cwtl
test
call
lds
fdivrl
loop
mov
adc
cmp
dec
sub
mov
repz
inc
pushf
sti
cmpsl
stos
fiadds
mov
out
dec
adc
mov
std
in
test
sbb
push
cmpsb
pop
cwtl
push
or
push
mov
imul
cmpsb
xor
mov
dec
xchg
mov
xchg
push
jge
cmpsb
pop
xor
or
sbb
shrb
out
mov
xlat
je
xchg
mov
jmp
sub
aaa
imul
sti
cwtl
shrl
test
push
hlt
or
inc
dec
decl
push
cmp
sub
inc
xchg
orb
mov
mov
out
or
cwtl
add
sbb
das
les
dec
insb
xchg
jmp
pop
sub
mov
dec
lock
pextrw
dec
cmp
das
jnp
push
fsubrl
cltd
test
ret
cltd
xor
mov
ficomps
popf
push
movsb
leave
ret
sbb
outsl
mov
imul
rcrl
rcrb
pusha
jle
jno
or
sub
and
dec
jae
sub
jne
mov
xor
cmp
aas
out
in
out
jg
hlt
xchg
stos
mov
push
jns
das
pop
aas
outsb
mov
xchg
cld
stc
pop
in
xchg
fwait
push
xor
iret
int3
mov
pusha
test
es
xorb
outsb
and
lds
push
cli
sub
dec
or
test
pop
test
sbb
mov
mov
mov
push
push
mov
and
mov
inc
dec
adc
mov
jnp
bound
mov
dec
loope
sbb
mov
or
ja
mov
inc
or
xor
fmull
jl
cli
mov
jbe
pop
sti
cltd
hlt
and
cwtl
mov
or
and
pusha
and
adc
das
icebp
add
pop
or
int
adc
leave
test
xchg
sub
rol
outsb
mov
idiv
cwtl
jno
je
enter
lcall
ja
dec
pop
lds
loopne
fwait
ljmp
testl
ds
push
push
or
js
mov
dec
xchg
outsb
push
inc
movsl
inc
cmc
push
pop
xor
ret
xchg
fstps
inc
out
xchg
insb
frstor
cltd
jbe
dec
xchg
xchg
setp
mov
xor
rcll
es
loop
push
mov
int3
jl
addr16
and
scas
mov
lahf
scas
sbb
daa
push
loope
add
xchg
sub
mov
je
xchg
mov
jno
mov
pop
xchg
mov
jl
pop
hlt
sbb
and
repnz
mov
lret
mov
xchg
insl
add
leave
inc
xor
pop
fsub
icebp
mov
insb
adc
cs
lcall
push
cli
xchg
pop
mov
mov
mov
sbb
movntq
data16
in
xchg
jmp
fisubl
pop
sbb
add
jbe
pop
inc
clc
mov
mov
outsb
ret
lret
das
dec
push
fcmovnb
clc
dec
adc
mov
xchg
cmp
mov
test
mov
repz
jmp
repz
shl
scas
stos
stc
adc
xchg
jo
inc
dec
cmp
mov
sbb
jp
test
and
jmp
test
fcompp
mov
rorl
xchg
xorb
loop
sbb
add
pop
xchg
arpl
popf
outsl
push
stc
sbb
test
ret
inc
scas
mov
loop
push
fnstcw
repz
dec
pop
sub
outsb
sbb
in
rclb
sbb
idivb
dec
testb
arpl
sub
sbb
xchg
inc
je
push
int3
scas
ds
shrl
es
repnz
sub
or
mov
xsaves
adc
dec
das
or
sbb
inc
and
nop
in
lock
cld
ret
sbb
cmpsb
add
xlat
add
jae
out
dec
insb
test
dec
out
fcmovb
or
fdivp
fistl
orl
xor
adc
mov
inc
inc
in
mov
xchg
das
stos
adc
ljmp
sar
dec
xor
mov
loop
xchg
push
add
xchg
lea
dec
xchg
insb
repnz
xchg
xor
and
daa
inc
cli
das
je
daa
jmp
divb
loope,pn
adc
lahf
cmpsl
loopne
outsl
or
push
pop
inc
sub
xor
aad
mov
lea
xchg
cmpsl
loopne
dec
inc
cmpsb
inc
mov
popf
mov
inc
in
mov
arpl
iret
and
dec
fcmove
mov
xchg
es
mov
leave
roll
jns
lods
mov
adc
xor
push
ret
cltd
xchg
cmp
addl
mov
mov
fbld
outsl
pop
idivb
mov
mov
jecxz
inc
jb
rclb
pop
mov
xchg
adc
sbb
insl
jb
push
or
mov
mov
cltd
fs
push
jg
xchg
add
add
jecxz
pop
push
mov
or
add
sbb
xor
mov
push
aas
mov
adc
repnz
and
adc
orl
fisubrl
jne
aad
xchg
cld
test
sbb
jmp
lret
adc
test
xor
sbb
clc
aas
xchg
std
cmp
std
popf
mov
xchg
fs
push
mov
lock
mov
push
sub
pop
or
xlat
or
pop
movsb
leave
idivl
dec
pop
lret
pop
adc
cmp
scas
xchg
hlt
cmp
insl
fistpll
lods
ja
xchg
inc
bound
dec
lods
repnz
sub
imul
and
mov
inc
inc
fadds
ljmp
dec
lock
jp
aad
push
jecxz
ljmp
or
push
dec
fstpt
mov
sbb
aam
repz
jnp
mov
repnz
aad
imul
mov
adc
jmp
sub
adc
pop
adc
jmp
into
cmp
addr16
insb
scas
cmp
cmc
mov
xlat
mov
stc
push
movsl
lods
lods
inc
xchg
and
in
jl
je
mov
fildl
jo
pop
adc
or
mov
sahf
sub
and
xchg
mov
sub
clc
or
and
jge
mov
or
mov
das
adc
adc
std
mov
cs
jne
xor
inc
mov
mov
jp
loop
sbb
adcl
sub
mov
dec
xchg
nop
les
lahf
mov
cltd
jecxz
jae
rolb
dec
sub
push
cmp
cli
xor
iret
roll
adc
jge
iret
lret
inc
adc
mov
test
test
fwait
xor
fnstenv
rcrb
das
jecxz
pop
mov
adc
lock
xchg
hlt
pop
xlat
mov
ret
xor
dec
cmp
lods
imul
xor
xor
mov
aad
xchg
push
in
sbb
push
in
xor
sahf
mov
lods
test
adc
enter
scas
jl
out
shrl
jbe
push
scas
dec
fs
loopne
daa
shlb
jae
mov
roll
adc
xchg
lcall
out
imul
scas
es
and
jae
lcall
jbe
repz
je
insb
ljmp
pop
push
adc
insb
in
in
push
jmp
push
add
xchg
xchg
jg
into
sub
repz
adcb
pop
ret
xor
add
dec
mov
lahf
sbb
jne
cltd
jmp
fmull
push
or
loope
je
lcall
inc
enter
jp
sub
or
or
push
xor
loope
xchg
mov
imul
idivl
test
fstps
pop
cli
or
dec
jg
and
cmp
imul
jno
stc
call
out
inc
xchg
sbb
mov
nop
xor
ficoml
xor
dec
mov
clc
dec
push
jbe
pop
outsb
xchg
mov
in
sbb
push
data16
fimuls
sti
cmpsb
inc
stos
sub
jae
mov
jle
aas
jmp
sarb
xchg
ret
cli
dec
or
or
jns
push
push
mov
mov
mov
dec
in
xchg
flds
jp
and
cmp
mov
outsl
popa
sbb
jg
jae
sbb
test
or
in
mov
inc
adc
mov
ficoml
sahf
pop
cmpsl
cmp
sbb
bound
and
je
dec
out
jbe
cmpb
and
push
imul
jmp
orb
ds
or
call
js
xchg
decb
rcrb
cmp
xchg
cld
push
jbe
fwait
sub
xchg
mov
arpl
fisttps
mov
dec
jns
xor
inc
or
ljmp
lods
aaa
push
iret
mov
lahf
cmp
mov
mov
dec
ret
outsb
mov
imul
gs
mov
sahf
mov
xor
push
jns
dec
jnp
sahf
push
bound
arpl
jns
inc
out
xor
push
mov
js
jle
andb
rol
lods
jp
xchg
popa
mov
fmull
inc
and
mov
sar
into
loopne
call
adc
push
or
ss
jp
pushfw
repz
rol
push
sub
inc
adc
ljmp
push
ficoml
cmp
sbb
enter
push
inc
and
decl
lret
std
push
in
ljmp
mov
les
xor
sbb
int3
aas
sub
fisubs
jo
push
arpl
clc
jae
cmp
dec
jecxz
inc
xchg
aad
pop
jle
js
xlat
mov
in
adc
inc
rcrb
imul
stos
test
into
pop
and
shr
adc
sbb
stos
into
inc
imul
addr16
push
mov
push
test
ss
lods
sub
out
sbb
test
and
xor
in
push
jl
adc
xchg
lock
pushw
push
scas
cmp
shl
cmp
add
sahf
xchg
dec
popf
xchg
xchg
sub
jno
sbb
out
add
mov
inc
adc
xor
rorb
or
xchg
pop
imul
mov
and
cmc
enter
add
mov
out
pusha
xor
jo
mov
add
leave
sbb
cli
sub
mov
adc
cli
out
sti
or
pop
ljmp
adc
outsl
add
lret
dec
aad
mov
arpl
mov
fsubrs
out
ss
cmc
push
sbb
cmp
arpl
ljmp
aam
icebp
mov
xchg
test
push
ror
sbb
rol
movsb
aad
cmp
je
fsub
lea
inc
sub
jo
mov
mov
dec
pop
loop
cmp
call
sbb
mov
imul
cld
ret
mov
pop
mov
ss
imul
add
clc
sub
cmc
mov
pusha
test
fs
push
cmp
dec
sub
inc
jbe
or
xchg
cli
cmc
das
cs
dec
mov
sti
aad
out
or
in
xchg
lds
jb
jne
cmp
inc
adc
cmp
in
push
repnz
jg
cmp
lea
jecxz
cmp
fiaddl
clc
mov
int
cld
jne
in
mov
ret
aam
jbe
add
arpl
orps
pushl
mov
loope
shrl
push
jns
add
xor
and
loope
out
ret
or
ja
push
fisubl
sub
jns
add
sahf
sbbb
xor
pop
dec
cli
aaa
pusha
pop
inc
fcmovb
adc
pop
adc
ja
and
es
bound
jno,pt
mov
lods
or
aad
cmp
push
mov
lock
jae
adc
push
ja
push
add
mov
mov
xlat
add
fisubrs
ficoml
stos
cmpsl
test
jno
xchg
fcompl
xchg
in
push
add
es
jae
and
sbb
fwait
aam
xlat
pop
sbb
ss
dec
iret
out
jl
or
inc
dec
lcall
cmp
and
push
data16
mov
mov
jmp
pusha
data16
ljmp
xchg
shl
dec
fcomi
in
jle
xchg
mov
or
mov
cld
pop
push
cmp
xor
jl
jl
push
mov
in
shlb
sbb
push
dec
pop
jne
adc
pop
mov
mov
jae
cmp
inc
adc
fwait
inc
push
clc
cmpsl
cmpsl
sahf
fcomi
andl
lret
and
mov
mov
aaa
les
hlt
movsl
hlt
decl
insl
mov
jle
xchg
or
fldt
push
dec
push
mov
xor
cmp
insb
clc
sbb
push
mov
mov
dec
pop
stos
es
dec
cmpsl
xor
push
fldt
sub
mov
pop
xlat
adc
mov
mov
and
cmp
mov
sub
mov
lds
push
das
sbb
lods
jae
adc
adc
inc
xchg
scas
aaa
cmp
pop
int3
inc
rolb
inc
or
adc
push
mov
outsb
fwait
mov
test
shrb
lock
rol
sub
aam
mov
jmp
push
rcrl
push
pushf
and
jne
mov
or
hlt
ljmp
xchg
mov
shrl
stc
inc
sub
dec
xchg
mov
push
sub
jge
jmp
dec
addr16
fsts
aas
cltd
dec
cmc
mov
notl
xchg
cli
xor
push
mov
sub
imul
loopne
fs
mov
arpl
lods
mov
iret
mov
mov
lcall
pop
mov
icebp
mov
ljmp
pop
daa
aas
cld
push
shlb
out
out
call
jecxz
lea
pop
mov
lea
mov
pop
mov
inc
pop
xor
pop
shl
lods
fbstp
movsb
inc
dec
fwait
mov
cmc
pop
jle
xchg
push
jae
mov
cwtl
iret
xchg
testb
xchg
push
int3
in
cltd
sub
xchg
rclb
stc
stc
sbb
push
into
mov
aam
and
jp
mov
movb
dec
sbb
mov
sbb
rcr
repnz
test
sub
jnp
inc
pop
js
faddl
pushf
xchg
pusha
push
sti
sub
addr16
lea
test
pusha
ss
jo
inc
pop
mov
fadd
pop
jbe
jge
ljmp
jle
imul
std
testl
dec
push
push
inc
xchg
inc
jb
sbb
mov
ret
lods
and
aas
push
test
sbb
or
xchg
xchg
mov
fcmovbe
in
sub
cmp
inc
lcall
data16
or
xchg
mov
fldt
adc
sub
fs
pop
hlt
call
inc
xor
lahf
mov
xchg
sbb
daa
jne
jbe
xchg
jns
shlb
push
push
cmpsb
push
int3
outsb
aas
jge
mov
rolb
cmp
inc
cmp
dec
data16
imul
jns
mov
fs
mov
adc
daa
psllw
int3
push
dec
fsubs
in
xchg
ss
out
in
clc
sbbl
stc
xchg
hlt
mov
jecxz
mov
sbb
mov
cli
inc
mov
or
jmp
mov
ds
mov
aam
lds
cmp
fmuls
xlat
push
prefetch
dec
add
fiadds
out
sarl
push
nop
dec
or
mov
mov
je
movsl
mov
push
cli
pop
dec
pop
repnz
int
jg
lahf
push
sti
mov
stc
int3
push
aaa
inc
dec
mov
leave
mov
pop
mov
loope
cltd
adc
or
push
fwait
mov
mov
mov
ss
push
enter
xchg
icebp
fidivrl
add
pop
test
inc
or
orb
or
movsb
xchg
call
fmulp
aas
repnz
push
jae
pop
dec
loopne
pop
xlat
sub
mov
mov
mov
fisubrs
jmp
xchg
xor
inc
mov
sub
stc
ret
inc
nop
das
and
rorl
pop
popw
lods
cmp
jno
imul
and
inc
aad
inc
sbb
xchg
fildll
lahf
sete
xor
clc
push
dec
int3
push
xor
in
ret
cs
push
in
mov
loope
cmc
bound
sti
xor
adc
stos
arpl
int
xchg
sub
insl
fiadds
cwtl
push
out
dec
daa
cmpsb
out
lods
int3
outsb
imul
loope
dec
fcmovnbe
pop
ja
mov
inc
rorl
lea
dec
dec
movsb
inc
inc
xor
lret
sub
add
pop
iret
mov
xor
mov
leave
pushf
icebp
adc
dec
mov
push
dec
pop
xor
loope
sbb
or
cmp
fld
inc
inc
mov
das
dec
imul
popf
xchg
sbb
xchg
dec
ret
add
xor
jp
fidivl
out
jge
loopne
dec
ficomps
stc
adc
icebp
ds
int3
lret
pusha
mov
sbb
push
fisubs
nop
lcall
pop
cmp
jle
xchg
xchg
aad
or
mov
out
cs
stos
ljmp
loop
lods
gs
aam
call
lahf
push
pop
push
data16
fisttps
and
test
roll
sub
loop
and
cmpsl
dec
aas
push
sbb
addr16
cmp
xlat
push
push
jg
ljmp
leave
aaa
pop
sub
xchg
in
xchg
fs
add
orb
sbb
jl
sub
cltd
or
sub
orl
stos
mov
jl
addr16
pop
mov
jp
pushf
int
adc
or
int3
mov
xor
or
inc
popa
rcl
xchg
add
gs
adc
hlt
pop
and
push
lret
popf
and
out
mov
je
xor
fcoml
sbb
movsb
dec
and
dec
cwtl
clc
lcall
cmp
divl
dec
dec
addr16
lahf
jecxz
test
leave
clc
jbe
sbb
negb
cld
fsubl
jg
cs
inc
rcr
aad
fs
lock
ja
ficomps
and
xchg
pop
sbb
imul
and
inc
movsl
xchg
mov
mov
push
push
dec
xchg
sbb
stos
pushf
cmp
es
in
mov
mov
arpl
mov
dec
and
sbb
dec
xchg
ss
dec
inc
jp
fiadds
aaa
jmp
mov
cmp
jo
mov
jno
out
mov
fstl
cwtl
mov
scas
gs
popl
ret
adc
repz
mov
psraw
lret
shll
xchg
sahf
rorl
jmp
pop
sbb
inc
add
out
hlt
mov
add
ds
in
stos
xchg
pop
xchg
mov
out
push
clc
add
je
pop
iret
ret
ficompl
adc
mov
jbe
and
fdivrl
push
push
ja
or
mov
and
lahf
sbb
jno
outsb
test
stc
or
mov
jmp
dec
xor
pop
inc
in
cld
sub
shlb
mov
filds
lods
mov
jg
adcb
fidivrs
xorl
jb
fwait
cmc
rcrl
mov
dec
fwait
in
es
sub
push
mov
fwait
add
lods
sub
adc
inc
push
sarl
scas
adcl
stos
lret
add
sub
mov
ficoms
lret
and
xchg
lret
sti
cltd
je
fcmovnb
xchg
fs
jl
mov
xchg
mov
test
int3
cmpsl
xlat
push
pop
jne
dec
dec
jp
inc
fcmovnb
sub
clc
cmc
cmp
hlt
sbb
fcoml
inc
mov
mov
dec
add
ret
inc
fimull
mov
dec
sti
add
dec
movsb
outsb
xchg
jno
popa
aad
mov
mov
fsubp
inc
movsl
int3
push
dec
ds
push
inc
rorl
dec
sub
sub
enter
loop
stc
repz
jnp
mov
jmp
in
push
sbb
mov
add
jmp
arpl
les
aad
pop
mov
mov
std
jg
frstor
mov
lret
xchg
fidivl
loop
cmpsl
fstp
fldcw
xorb
pop
sbb
push
pop
sub
das
pop
xor
push
or
jg
mov
rcll
call
push
push
cmpsb
mov
lds
jecxz
lret
add
push
daa
add
jbe
cli
mov
mov
je
inc
imul
aam
mov
scas
adc
xor
sub
lret
mov
test
cmpsl
mov
das
lcall
xor
int3
dec
push
mov
test
or
dec
imull
xchg
stos
and
jecxz
xlat
divl
out
les
dec
xorb
dec
sti
dec
push
sbb
addb
les
mov
loopne
adc
and
sbb
aam
lea
adc
fsubrl
stos
movsl
jne
cmp
inc
lret
or
sbb
cmpsb
dec
ret
inc
xor
jae
cmp
sbb
cmp
fcomps
inc
mov
dec
add
stos
into
int
je
aad
fnstenv
cmpl
cmp
int3
adc
ja
sub
lock
mov
fcmovbe
mov
jecxz
negl
sbb
xchg
scas
push
arpl
stos
adc
mov
push
sbb
adc
push
mov
test
fs
jns
call
adc
mov
xchg
sub
pop
adc
mov
lods
or
cmp
mov
sub
rclb
data16
and
leave
jg
repnz
push
jmp
popl
shrb
mov
fmul
sbb
stc
std
aas
stos
dec
inc
data16
push
dec
clc
in
cmp
or
jle
push
adc
scas
jnp
xor
in
push
pushf
and
jmp
cmpsb
push
xor
pop
pop
cmpsb
mov
push
dec
cmp
out
in
fdivrl
fxch
cmp
or
dec
lds
pushf
mov
pop
and
stos
ja
stos
inc
es
nop
in
bound
inc
and
outsl
push
inc
push
or
add
xlat
adc
mov
sbb
and
xchg
ljmp
xchg
mov
stc
in
inc
sbb
add
jne
push
mov
testl
mov
fwait
xor
fildl
scas
loopne
scas
insb
xchg
in
sbb
sub
xor
dec
pop
cmp
pushl
sahf
jns
jno
lock
sub
fs
imul
rcrb
dec
mov
cwtl
inc
dec
aaa
and
adc
jmp
cwtl
flds
mov
sbb
jge
test
ljmp
xchg
ret
int3
xchg
aam
test
dec
sub
push
dec
mulb
out
sub
int
xchg
insl
push
je
dec
inc
out
popa
fwait
cld
icebp
sti
jns
test
out
scas
repz
adc
not
stos
mov
sbb
or
pop
insb
stos
pop
outsb
jmp
jmp
sub
mov
pop
push
out
out
jne
adc
aas
mov
inc
push
mov
stos
test
mov
pop
lret
imul
mov
fs
sarb
sub
adc
inc
or
cmp
push
push
jmp
jg
pop
xor
mov
cmc
mov
jecxz
push
mov
push
mov
jae
sbb
sti
movsb
pop
sbb
dec
pusha
add
shlb
jl
and
mov
outsl
test
xchg
cmp
mov
int
xchg
bound
test
inc
pop
les
mov
ret
das
ficomps
ficompl
mov
lret
or
mov
arpl
je
sbb
add
lods
cltd
test
push
pusha
jl
mov
mov
fwait
ja
jmp
loope
add
pop
rcrb
add
outsb
lea
sbb
mov
adc
xchg
orl
popf
mull
pop
repz
ja
inc
push
cli
cmp
mov
call
mov
scas
mov
cmp
je
and
xor
xlat
cmc
jle
jg
xor
or
jb
xor
icebp
rclb
incl
xchg
cmp
xchg
ret
mov
rcl
aaa
jecxz
in
pop
adc
or
cltd
jmp
add
lds
mov
imul
sub
jns
repnz
sub
mov
dec
and
dec
es
sbb
push
loope
popf
add
cmc
jl
scas
mov
scas
mov
or
lea
mov
add
mov
cmp
add
jns
mov
sub
jle
popf
in
jns
cmp
mov
dec
add
imul
add
scas
dec
mov
mov
sti
xchg
lods
mov
ret
outsb
out
mov
bound
bound
daa
mov
leave
fists
repnz
push
mov
into
add
xchg
fnstenv
pop
cmpsl
push
cmpsb
arpl
and
clc
cli
xor
shlb
pop
es
mov
dec
out
mov
cmp
cs
pop
js
bound
popa
xor
hlt
mov
push
push
and
cmc
jl
out
inc
jp
mov
jecxz
jecxz
fsts
adc
mov
mov
xchg
pop
sub
arpl
pop
dec
xchg
fisttpl
jns
add
dec
xchg
fwait
mov
push
lret
adc
in
jg
fwait
mov
mov
imul
dec
and
push
jmp
adc
bound
daa
fldcw
std
xchg
ret
sub
int
aam
or
jmp
and
mov
push
add
imul
cmpsl
cmp
stos
push
jne
jmp
push
or
add
inc
mov
shrl
xchg
mov
sub
aaa
fdivl
stos
jnp
push
dec
lret
ljmp
xchg
bound
ja
lods
int3
clc
mov
jo
in
jne
or
adc
movsl
pop
cmc
fidivrl
aaa
mov
cmp
test
insb
and
xchg
fsts
and
enter
push
cmp
and
push
rcrl
push
xor
call
sti
lods
cmp
mov
fcomps
pop
inc
mov
dec
shll
mov
pusha
ja
or
pop
sti
xor
aas
cmp
mov
push
pop
test
les
mov
mov
dec
in
insb
xchg
popa
dec
cmp
fmulp
lock
push
loopw
jg
addr16
xor
bound
and
inc
int3
arpl
pop
mov
inc
xchg
ror
cmp
inc
mov
push
out
enter
mov
pop
popf
jecxz
test
push
mov
mov
mov
xchg
sub
push
or
iret
fimuls
or
rolb
cmp
cwtl
jl
popa
mov
popa
push
mov
insb
aam
outsl
cmp
adc
shll
push
fistpl
dec
rcrl
lods
jne
mov
lods
stos
stos
inc
test
in
mov
rcr
fisttps
and
jmp
inc
insb
pop
out
mov
cmpsb
or
push
sbb
mov
and
or
data16
xor
add
pop
movsb
cltd
xchg
sbbb
jns
cli
jne
bound
xor
push
popa
loopne
mov
sbb
out
les
add
inc
push
ds
pop
push
mov
sti
adc
jl
pop
mov
xor
loopne
cli
leave
xor
out
sbb
insb
and
push
mov
aam
and
popf
out
repz
push
lods
sub
clc
xchg
sub
sbb
xorb
xor
and
int
das
subl
dec
sub
jae
and
ds
add
mov
mov
cmp
imul
cmpl
pop
add
imul
fbld
cld
cmp
jno
add
mov
push
sub
cld
ds
test
jo
ds
adc
addr16
dec
or
push
push
jg
cmpsb
outsb
adc
inc
xor
faddp
or
jno
pop
cmpsl
pop
sbb
pusha
insl
cmp
push
bound
add
add
cli
sbb
or
pop
pop
aaa
jbe
iret
sbb
push
icebp
out
aaa
aad
push
pop
das
mov
xlat
ss
or
int3
pop
dec
cmp
xchg
les
sbb
into
or
fisttpll
outsb
adc
enter
loop
jbe
movsb
push
jmp
arpl
inc
cmpsb
jmp
inc
imul
mov
adc
das
jae
aam
xor
wbinvd
sti
add
mul
clc
fsubl
insb
mov
movsw
push
hlt
stc
mov
jns
adc
fisubrs
pushf
das
cltd
and
inc
shrl
xlat
outsl
ret
jo
loopne
mov
imul
jecxz
testl
repnz
outsl
jno
imul
xor
jmp
out
cmp
adc
adc
ret
into
jns
imul
sahf
push
inc
jne
repnz
int3
out
sub
lea
jl
cmp
in
adc
movsb
int
and
adc
out
cli
inc
repnz
call
sub
frstor
scas
lea
cmp
xchg
jl
mov
and
mov
jmp
scas
dec
mov
xchg
popl
sub
pop
int3
and
mov
jle
and
inc
incl
dec
and
filds
icebp
mov
cld
dec
andl
cltd
push
jo
mov
dec
insl
cmp
stos
in
bound
jnp
xchg
movsb
inc
aad
pop
dec
sbb
mov
add
leave
fwait
stos
shll
cmc
push
push
inc
xchg
adc
xlat
out
push
ret
icebp
push
negl
les
inc
inc
or
jge
insb
fnstcw
mov
test
sbb
dec
xchg
ds
mov
mov
ja
stos
lcall
call
fwait
mov
cmp
mov
push
nop
push
dec
jl
data16
lods
pop
out
sbb
and
sbb
push
lods
xor
sub
testb
popa
bound
std
cmc
leave
dec
xor
sbb
mov
pop
sbb
psrld
add
insl
ja
mov
imul
sbb
pop
lds
dec
daa
pop
mov
mov
mov
sub
jl
mov
dec
in
sbb
mov
xchg
aaa
mov
or
movsb
dec
ljmp
fimull
ss
mov
jae
cmp
jae
lods
dec
mov
inc
inc
pop
dec
mov
insb
outsl
ret
gs
sbb
loopne
and
mov
and
stos
leave
cmp
cmpsl
pop
dec
mov
dec
push
ds
pop
mov
sbb
loope
xchg
jb
jle
adcl
jb
mov
frstor
mov
cmp
adc
jnp
xor
cmpl
add
lret
loope
xor
ret
out
int3
dec
cmpsl
pop
orb
xor
lds
shlb
movsb
push
adc
cwtl
or
repz
fwait
mov
ljmp
mov
mov
out
dec
hlt
lock
inc
push
jb
mov
xchg
xor
jg
adc
negb
mov
fidivl
pop
idivl
fadds
daa
mov
pop
inc
pusha
add
push
inc
sub
mov
sub
sub
es
adcl
dec
in
les
or
shrb
push
jecxz
js
inc
push
push
inc
ret
xor
ds
xor
mov
nop
push
pop
push
test
push
out
jmp
and
outsb
mov
pop
int
jno
jns
aad
je
mov
jl
dec
icebp
mov
stos
jns
push
aad
movsb
mov
imull
mov
outsb
xchg
cltd
test
popa
pop
pop
mov
jmp
arpl
push
ret
sbb
pop
lods
jae
inc
test
cmpsb
mov
pop
and
jne
ljmp
cmpsl
jmp
and
xchg
cld
push
and
dec
sub
stos
lods
leave
aad
fldenv
aas
aam
mov
cmp
movsb
xorl
out
aas
xchg
aam
daa
or
xchg
add
mov
xor
cs
lret
mov
xor
dec
imul
bound
pushf
pop
test
fnstenv
push
lcall
add
cmc
push
xchg
jno
loope,pn
or
movsl
imul
push
push
mov
fcmovb
mov
fsubs
and
div
aam
roll
mov
add
stos
js
and
loopne
shrl
loope
pushf
scas
stos
sub
xchg
mov
and
jbe
dec
xchg
add
dec
rcrb
test
mov
or
or
stc
xchg
out
into
divl
sbb
jecxz
out
fcmove
jns
sahf
mov
push
enter
cmpsb
cmc
into
jns
insb
mov
add
lods
out
jge
dec
popa
pop
and
xchg
dec
cld
repz
sbb
movsl
mov
push
add
fcmovne
popa
inc
add
mov
fadd
xchg
cltd
jmp
inc
lcall
jnp
sbb
stc
in
loope
in
inc
mov
repz
add
ja
xor
pop
mov
mov
add
dec
and
mov
loope
xor
jmp
xchg
mov
stos
bound
orb
xchg
xchg
cld
into
push
dec
clc
xchg
xchg
xchg
mov
add
sbb
adc
js
stos
sahf
mov
dec
cmp
subb
push
xor
mov
or
outsl
ljmp
pop
sahf
sahf
mov
sub
pop
dec
dec
sbb
notb
cs
enter
pop
insl
out
push
sbb
sbb
pop
fsubrp
fisubrl
mov
xor
add
lods
push
xlat
xor
popf
lcall
pop
dec
inc
stos
mov
sbb
repz
or
push
or
adc
mov
or
mov
jb
sbb
scas
fs
mull
jp
cwtl
pop
cwtl
inc
in
in
mov
movsb
pop
ficoms
add
fsubrl
jp
decl
sti
call
daa
pop
xchg
cmp
inc
fs
in
insb
in
stos
xchg
dec
jmp
jae
jl
iret
fstpl
std
mov
test
cmp
in
aas
imul
cli
jb
fwait
mov
push
rol
mov
dec
mov
xor
movsb
add
dec
repnz
pop
lcall
jbe
sbb
in
insb
scas
jle
outsl
push
mov
add
adc
add
cmp
in
fs
shrl
push
outsb
stos
lds
push
in
js
push
sahf
sarb
push
mull
push
jns
jo
dec
dec
push
mov
pop
jmp
push
and
les
jp
test
shrb
push
mov
ss
sbb
xchg
sahf
icebp
jge
daa
jge
imul
dec
stos
shlb
shl
push
cmp
in
dec
mov
insb
dec
pop
sub
inc
lret
mov
ljmp
fld
mov
inc
or
rorb
xchg
dec
cmpsb
out
cmp
push
arpl
and
das
dec
dec
imul
push
mov
adc
ja
cmp
push
pop
add
outsl
test
dec
push
aad
cmp
nopl
lahf
ja
in
pop
add
js
enter
inc
je
add
jecxz
and
dec
adc
imul
sti
xchg
xor
ret
inc
ficomps
mov
pop
jge
jbe
pop
jl
xor
push
push
xchg
xor
dec
rep
mov
push
adc
aam
pop
jmp
pop
notb
xor
mov
sti
lock
inc
repz
jb
mov
jns
cmpsb
lret
in
ljmp
addr16
ret
push
xor
ret
mov
fidivrs
lock
ret
add
scas
outsl
mov
or
pop
xlat
das
sub
pop
push
ficomps
jns
or
pop
insb
xor
push
incl
das
inc
movsb
pushf
cwtl
add
mov
jb
pushf
clc
cmpl
jmp
push
cmp
inc
or
or
mov
or
pop
push
stos
cs
shll
sub
dec
mov
sbbb
sarl
push
in
das
push
fisttpl
mov
push
sbb
xchg
push
test
dec
push
pop
add
dec
xchg
daa
and
push
in
sbb
jnp
or
scas
outsl
mov
cmpsl
add
pop
mov
add
xchg
popa
and
outsl
shll
push
mov
fwait
sahf
stos
sub
cmp
sub
jmp
cmp
mov
push
lea
push
mov
mov
sbb
js
add
rcrl
add
and
pop
pusha
xchg
pop
mov
inc
test
pusha
mov
mov
out
add
lock
pop
add
pop
push
dec
out
dec
scas
fisubl
and
mov
add
adc
test
test
lret
push
or
dec
adc
adc
int
jecxz
fstp
add
dec
cmp
addb
fdivs
mov
xor
movsb
lret
jnp
outsl
popa
mov
push
mov
add
lahf
jne
addr16
cmp
mov
movsl
lods
xor
mov
cmp
pop
pop
dec
mov
js
cmpsl
icebp
mov
inc
add
cmp
xchg
shll
pop
cmp
pop
lret
pop
ljmp
pop
xrelease
cmp
hlt
cmp
idivb
pop
sbb
sub
lods
mov
in
into
shrl
jns
hlt
loop
loope
rcr
daa
repz
pusha
iret
lods
jge
push
cmp
push
repz
repz
ds
sbb
pop
and
js
xchg
jne
jmp
stc
into
xchg
clc
scas
imul
inc
push
mov
lods
in
push
pop
repnz
test
int
cmp
cmpsb
dec
jle
or
popa
out
adc
movsb
sub
dec
xor
jo
jns
std
pusha
cli
test
inc
mov
and
sub
aad
fistl
inc
out
in
insb
dec
or
loope
push
cmp
aas
psubw
stc
cmpsb
lcall
sub
pusha
cmp
mov
jno
push
aad
dec
adc
add
lods
call
xor
outsb
mov
enter
ljmp
test
insb
in
notl
add
data16
push
aad
leave
addb
pop
fistpll
lds
sbb
adc
lea
aas
mov
out
addr16
and
jge
push
cltd
push
popf
aam
dec
mov
inc
lds
js
or
je
mov
ja
fisttpll
jmp
rcrb
and
aad
mov
add
fidivrs
xor
adc
pop
mov
loopne
pushf
cmpsl
inc
inc
jb
and
fs
cmc
and
pop
jg
rolb
stos
cmp
sbb
int3
shrb
icebp
xor
shrl
and
mov
cld
pop
test
mov
mov
fildll
lea
adc
mov
das
scas
divb
lods
push
and
pop
mov
xchg
and
inc
pop
je
hlt
inc
inc
mov
gs
mov
in
popa
popa
ret
mov
sub
out
pop
scas
cmc
in
and
inc
aam
shl
adc
mov
or
sub
or
mov
pop
loopne
lea
fisubl
sub
shlb
lods
das
jge
sub
cmp
test
push
out
add
in
aas
sub
lods
and
mov
mov
jge
sarb
std
cmp
add
dec
fwait
repz
aad
mov
mov
lret
pop
shll
int
mov
mov
xchg
sub
rorb
cmp
xor
dec
and
jg
sub
mov
call
cmpsl
jns
das
loopne
sbbl
jle
das
in
xchg
stos
sub
adc
adcl
rclb
jge
je
loope
pop
dec
pop
ja
psubusb
fucomip
data16
enter
push
lds
adc
dec
adc
outsl
sub
xchg
mov
das
lret
dec
repz
sub
ds
bound
notl
into
and
xor
in
xor
lahf
arpl
fdivr
fcom
add
xchg
mov
dec
mov
push
ljmp
lods
or
cmp
lods
push
pop
out
lods
fwait
iret
push
fbstp
sub
test
shlb
es
inc
mov
adc
fld
lret
test
dec
in
mov
add
push
jmp
mov
mov
add
outsb
in
inc
mov
rorb
repz
test
dec
ja
push
cmp
add
in
and
addr16
daa
push
pop
add
es
ret
mov
lahf
xorl
test
int3
call
jb
lea
dec
pushf
sub
cmp
insl
mov
lds
and
and
push
addr16
mov
push
sub
and
pop
ss
pop
xor
std
push
out
xchg
int3
imul
adc
fcoms
cmp
das
push
and
pop
iret
sbb
cld
test
mov
lcall
je
sub
enter
in
or
fdivs
in
aad
insl
es
repnz
jmp
adc
out
cmp
xor
pusha
jl
nop
insl
icebp
cli
int
dec
sbb
push
mov
xchg
aad
dec
jno
cmp
fistps
pop
xchg
jg
leave
std
mov
mov
sub
gs
mov
cmpsb
lret
push
cltd
and
loopne
mov
mov
jge
jmp
sub
repz
insb
repnz
mov
adc
in
and
orb
aam
ds
fstl
rcrb
jno
mov
pop
out
clc
pop
testb
mov
push
repnz
add
mov
xchg
dec
push
sub
sub
xchg
aas
push
adc
dec
cmpsb
sub
jb
js
push
in
and
xchg
divb
inc
cmove
ss
mov
or
in
xchg
movsl
rorl
test
mov
test
out
sub
xor
inc
insl
inc
ret
pushf
divb
sahf
fmuls
stos
dec
xorb
mov
push
sbb
icebp
mov
scas
jno
int3
push
cmp
outsb
and
or
push
pop
push
sbb
push
sbb
inc
push
and
push
repnz
cmp
xor
loop
andb
data16
test
pushf
daa
inc
icebp
push
int3
inc
push
dec
dec
pop
aas
insl
or
mov
mov
sbb
jge
aaa
sbbl
lcall
xor
push
jecxz
xchg
mov
rol
loope
jb
dec
int
int3
inc
daa
push
or
xchg
sbb
ret
pop
adc
fildl
inc
push
adc
push
sbb
push
xor
int3
daa
ret
les
push
mov
dec
scas
pop
outsb
out
sub
and
or
lret
pop
in
jmp
xlat
shrb
gs
dec
stos
lcall
mov
int
pavgw
jae
sbbb
mov
test
ja
fsubs
lret
ret
xor
popa
xchg
je
pushf
sbb
dec
mov
aas
add
ljmp
adc
mov
lds
insl
cmc
or
pop
jae
jecxz
lods
sbb
mov
rcll
testb
xor
sub
sbb
xchg
add
shlb
repnz
movsl
iret
js
cs
mov
pushf
sar
jge
lock
jmp
aaa
mov
xor
fildl
pop
xchg
iret
ss
sti
add
add
inc
add
mov
pushf
cmp
ja
repnz
pop
cwtl
data16
and
rolb
jae
lahf
jp
aas
jnp
sbb
sub
fldt
dec
movsl
xlat
sbb
xchg
sbb
or
fmull
fisubs
jno
pop
mov
xor
push
mov
dec
roll
fs
lcall
xor
sub
das
cmp
mov
pusha
out
movsl
int
out
mov
inc
mov
or
and
movsl
in
inc
enter
data16
sub
push
hlt
xor
mov
mov
and
cmpsl
mov
cmp
es
shrl
xchg
fstpt
push
push
cmp
subl
jg
xchg
adc
xor
jle
xlat
int3
jp
rcr
ret
adc
bound
ret
xor
aaa
divb
xchg
adc
bound
rclb
cli
sahf
int3
inc
xchg
gs
mov
popa
jmp
cli
and
stc
out
jmp
ljmp
es
mov
faddl
ficompl
test
and
jne
jp
dec
rcrb
daa
ret
out
sbb
dec
cmp
out
cmp
out
push
add
and
lea
mov
je
jmp
sbb
cmp
xor
xlat
rcrb
dec
data16
xchg
xchg
inc
cmpsl
shl
dec
out
add
les
pusha
push
leave
loop
stc
sti
jae
pop
test
mov
pop
pop
movsl
pop
xchg
dec
shll
adc
lods
dec
xchg
pop
and
lret
inc
ret
test
pop
subl
int3
stos
sbb
sbb
and
jmp
fsubrl
cmp
xor
sub
aad
dec
pop
cmc
shll
idivl
jne
xor
enter
pop
inc
mov
mov
clc
outsl
or
pop
dec
push
xor
sbb
in
gs
sbb
cmp
xchg
mov
mov
sbb
cmp
fs
rorl
xor
clc
test
mov
or
jle
sahf
mov
gs
xor
in
iret
push
lret
sub
sub
pop
pop
lods
mov
jbe
into
dec
fimuls
outsb
arpl
sub
test
sub
sub
mov
mov
push
sub
xchg
inc
call
pusha
push
stc
out
leave
out
clc
sahf
xchg
pop
xor
push
aaa
cmp
cmpb
mov
enter
addl
mov
jg
and
gs
jecxz
jmp
imul
and
xchg
mov
aas
sub
sti
int
mov
jecxz
inc
xchg
fists
jge
pop
cmp
dec
sbb
sub
mov
mov
jge
sbb
push
bound
jo
pop
jmp
arpl
jno
lds
ljmp
add
pop
movsl
enter
dec
sbb
xor
sbb
sti
aas
jp
daa
daa
mov
adc
insb
hlt
sub
xchg
cmp
pop
fmulp
test
jl
xor
jno
js
cmpsl
popf
jge
pusha
lret
arpl
out
cmp
frstor
inc
sbb
pop
sbbl
add
icebp
outsb
ror
cmp
add
scas
lcall
mov
xorl
loop
lret
repz
cltd
or
out
iret
es
test
hlt
jnp
out
adcb
jmp
scas
jb
add
movsb
or
mov
cwtl
mov
xchg
in
inc
dec
mov
ljmp
mov
sbb
stos
test
jl
test
add
xor
pop
stos
mov
sub
sub
push
loopne
stc
mov
push
jge
arpl
mov
das
popf
movsb
aas
cmp
lds
jbe
aaa
cld
int
aaa
jl
adc
rcrb
lret
push
and
mov
fiaddl
dec
xor
dec
ffree
insb
fildll
xor
or
mov
push
sub
mov
mull
arpl
fbstp
or
hlt
out
sbb
iret
cmp
jmp
arpl
scas
pop
mov
and
jmp
cmp
jg
jge
cld
int3
mov
sbb
arpl
inc
subb
mov
inc
sahf
shll
fnstcw
mov
sub
icebp
daa
inc
inc
into
stc
adc
xlat
test
out
loop
sbb
scas
imul
sti
out
mov
inc
adc
inc
loopne
mov
popf
fcompl
mov
mov
pop
outsb
and
add
fimuls
add
test
mov
xchg
std
call
mov
addr16
mov
imul
insl
std
int
dec
pusha
mov
and
pop
bound
mov
out
packssdw
xor
inc
add
cs
bsf
lcall
in
cmp
sar
shl
insl
jle
cmp
pushf
movsb
xchg
or
jb
icebp
xor
movsl
stc
out
pop
fidivrl
xchg
cmp
sarl
rorb
fucomp
jmp
fwait
sarb
sub
pusha
lret
or
and
cmc
inc
lods
pop
push
ret
std
shlb
shlb
stos
add
test
mov
adc
movsb
cwtl
or
insl
cld
sub
insl
cmp
mov
mov
lcall
test
imul
xchg
or
push
xchg
sbb
add
out
in
push
sbb
sahf
mov
test
mov
jg
push
cmp
mov
cwtl
cmp
inc
aaa
stos
mov
sbb
xor
mov
push
enter
daa
xor
mov
jbe
mov
dec
xchg
sbb
lahf
pop
iret
xchg
push
add
xchg
add
lock
jg
xchg
loope
dec
xchg
adc
mov
or
and
imul
sub
iret
inc
xor
icebp
repz
scas
jae
xchg
push
mov
inc
lock
je
incb
add
rcrl
jbe
push
mov
rcrl
or
js
inc
out
jle
stc
pop
sbb
andb
shlb
add
daa
out
movsl
aam
adc
xor
mov
dec
ficomps
mov
in
sbb
add
xchg
or
add
lock
fstpt
imul
cmp
loopne
push
jp
aad
jecxz
roll
add
sub
push
inc
sbb
roll
movsb
rcr
les
cltd
shlb
mov
insl
or
dec
push
into
dec
mov
out
or
imul
add
mov
push
jl
cld
imul
leave
adc
daa
jmp
fsubrs
and
mov
push
or
mov
lods
mov
pop
add
lahf
mov
out
add
cmpsb
mov
cmpsl
cwtl
or
sbb
inc
fxch
sbb
xchg
dec
adc
in
sbb
xchg
inc
adc
pop
inc
add
loopne
pushf
inc
das
mov
push
add
jno
add
mov
xor
adc
filds
lcall
inc
or
lds
les
and
jmp
fdivs
mov
jnp
loopne
push
jg
pop
and
imul
popl
push
in
enter
inc
mov
call
cmp
shrl
dec
incb
jb
jnp
ss
test
xlat
add
scas
scas
cmpsl
xchg
pusha
mov
mov
pop
fimuls
in
xchg
adc
cmp
hlt
add
lcall
in
loope
outsb
xchg
ljmp
test
insb
mov
fldl
in
push
mov
ss
inc
or
cltd
mov
imul
mov
xchg
fnstsw
and
mov
jge
mov
sbb
jecxz
mov
call
and
dec
hlt
jbe
mov
mov
out
adc
pusha
jb
mov
xor
mov
cvttps2pi
xchg
cmp
pop
hlt
and
ja
xchg
xlat
gs
call
mov
std
aas
pop
frstor
sbb
xchg
inc
imul
bound
add
dec
rcrl
cmp
and
push
sub
test
adc
ljmp
or
or
xor
fmuls
outsl
push
xchg
insb
in
bound
or
cli
out
lods
sub
leave
ds
mov
add
inc
and
insl
adc
mov
cs
aaa
stos
inc
dec
pop
scas
iret
xlat
in
das
in
push
jge
imul
mov
or
cmpsl
cmp
cld
call
data16
dec
imul
jecxz
loopne
out
xchg
push
jge
push
cmp
jbe
arpl
xor
add
call
jmp
and
mov
jno
jb
jb
or
movlps
insl
test
sbbl
and
ds
pop
repnz
jbe
sbb
das
popa
push
and
scas
in
leave
xchg
add
lea
sub
xchg
push
mov
mov
stc
xor
and
mov
imul
adc
inc
gs
jp
xchg
lock
adc
adc
add
push
out
rclb
adc
xor
cld
lock
pop
dec
fs
xor
sbb
jne
push
inc
fcmove
inc
in
xchg
cmp
pop
dec
rorb
push
sub
mov
js
dec
fsubrl
cmp
inc
lcall
aad
mov
rcl
gs
mov
out
dec
repnz
mov
push
inc
nop
mov
or
popl
push
push
pushf
pushl
or
adc
cmp
or
mull
mov
test
mov
in
mov
jno
mov
cwtl
bound
mov
pusha
mov
mov
into
std
adc
sbb
sub
inc
stos
imul
sub
sub
sub
sti
int3
jnp
insl
fbstp
je
jge
xchg
dec
jnp
add
cmp
loop
dec
imul
shl
popf
cs
lret
out
cmpsb
scas
stc
pushf
jp
push
jnp
pushf
push
ficomps
pop
repnz
leave
cmp
repz
and
notb
or
adc
fcmovne
cmpsb
jle
xchg
mov
mov
mov
jae
inc
in
out
fsubrs
addl
lods
xor
mov
lret
jl
pop
imul
pusha
sub
sub
bound
lcall
ret
incb
loope
inc
and
mov
popa
ljmp
add
xchg
imul
clc
pop
or
xchg
and
outsl
mov
cmp
pop
add
inc
repnz
lods
stos
inc
lahf
cmpl
fadds
pushl
xor
push
cmp
or
cmpsb
adc
out
aad
or
xlat
pop
insl
cmpsl
dec
mov
jne
pop
lret
mov
mov
arpl
and
sbb
dec
push
imul
addb
testl
repz
mov
cmpsb
mov
jnp
hlt
jnp
loop
pop
inc
dec
lock
mov
or
out
leave
jns
sbb
ret
imulb
clc
ficompl
inc
push
aad
xor
fildl
sti
sub
lahf
xchg
push
jecxz
adc
loopne
loopne
je
lret
scas
mov
out
lcall
mov
and
insl
or
xchg
push
jb
ficoml
lods
mov
mov
int3
push
push
mov
cmp
push
pop
cwtl
mov
add
sti
or
movsl
sbb
or
repnz
leave
lds
adc
ja
repz
gs
xor
dec
ljmp
mov
adcb
lahf
cs
cmc
out
in
fstps
dec
fnstsw
add
pop
idivb
add
sub
fstl
mov
repnz
loop
movsl
pop
sahf
push
lret
inc
bound
mov
or
jnp,pn
test
jge
and
pop
adc
dec
nop
ret
inc
mov
lods
shr
sbb
movsl
sahf
aas
sbb
mov
fs
xchg
sahf
dec
xor
popa
push
push
mov
movsl
shrl
rcll
or
inc
ja
fisttps
ss
sbb
negb
cmp
or
stos
pusha
ja
mov
add
sub
push
fs
clc
pop
pushf
inc
sti
push
out
outsb
jge
ljmp
adc
dec
aam
xchg
mov
rcr
ret
lahf
repnz
out
imul
andl
mov
push
push
stos
es
fs
repnz
int
inc
ljmp
mov
jmp
dec
out
inc
inc
xor
push
fbld
and
xorl
push
sbb
xor
cmp
mov
push
pushf
test
lods
push
push
ret
imul
mov
cmc
hlt
and
xor
pushf
or
cld
xor
lea
sti
xchg
test
pop
int
mov
lret
dec
xchg
cmp
jne
and
and
call
mov
js
sub
and
lods
in
mov
pop
loopne
xchg
test
add
and
popa
inc
jo
loopne
mov
cmc
pop
iret
outsb
jb
insb
xor
xchg
fadds
push
adc
js
sub
jae
or
test
out
adc
mov
sbb
ss
popa
jbe
jg
sbb
out
cmp
lret
testb
pop
xchg
inc
test
pop
pop
sub
stos
mov
cs
lahf
outsb
xor
ret
popa
sub
lret
addr16
mov
push
and
ds
mov
aas
int3
ror
or
pop
mov
fstl
pusha
inc
mov
inc
nop
in
or
cmpsl
in
sbb
and
add
push
fsubl
push
and
add
aaa
jb
mov
bound
inc
addr16
lahf
push
pusha
sbb
pop
ret
in
sbb
push
aam
into
xchg
inc
inc
push
addb
scas
xchg
jl
scas
adcl
or
out
test
sahf
repnz
inc
loopne
es
insb
dec
fdivs
outsl
pop
pop
clc
lahf
xchg
cmpsb
add
mov
flds
xchg
in
jbe
inc
int3
and
js
cmp
sbb
xlat
push
jb
enter
xchg
add
jno
or
pushf
push
dec
stos
insb
and
xchg
cwtl
pop
cmpsb
in
jb
push
dec
shlb
or
cmp
jl
push
repz
xchg
imul
or
inc
sub
clc
iret
out
fists
push
cmp
stos
call
and
lahf
daa
sahf
jnp
push
ja
inc
cli
pop
sbb
lock
outsb
sahf
adc
lock
cltd
lret
add
mov
roll
sub
mov
lcall
js
jge
dec
pop
inc
mov
and
rorl
mov
lea
aam
mov
xchg
cmpsb
mov
cmpsb
ja
adc
ljmp
lahf
enter
iret
mov
push
xor
sti
cmp
jne
in
lods
sub
mov
cld
inc
lock
xchg
add
inc
mov
hlt
xchg
sbb
adc
sbb
xchg
and
inc
fldt
insl
mov
pop
push
adc
les
cld
nop
int
sub
jnp
inc
adc
adc
dec
pop
fiadds
xchg
cmpsl
cmp
repnz
add
push
mov
xchg
add
popa
jae
mov
or
je
rolb
and
stos
int3
in
roll
mov
dec
loop
sub
out
hlt
scas
call
fdiv
lock
out
test
call
push
ret
mov
arpl
test
cmc
jbe
or
xchg
das
sbb
and
fwait
push
adc
inc
iret
xor
xchg
sub
mov
mov
push
lock
sbb
ss
in
aas
push
mov
bound
cmc
inc
pushf
mov
jmp
mov
xchg
int
adc
xchg
data16
sub
aas
mov
push
jb,pt
and
ret
test
jo
cmp
mov
movsb
dec
fisubs
or
add
int3
fmuls
repnz
adc
mov
pop
jo
mov
sbb
ss
stos
xor
xor
push
cmp
mov
push
mov
sbb
test
and
jp
mov
jmp
nop
dec
sbb
add
arpl
stc
sti
pop
and
jo
sahf
and
arpl
mov
cs
and
movsb
xchg
mov
jo
dec
xchg
add
dec
insl
dec
push
mov
pop
lods
clc
rcrb
dec
fildl
sbb
mov
sbbl
lcall
pop
dec
xchg
and
insl
mov
fcomps
rorl
nop
or
insb
movsl
inc
inc
rcrb
fisubs
in
xchg
pop
fcomip
inc
mov
pop
mov
jp
pop
push
call
fdivrp
mov
inc
sbb
jbe
lods
xchg
outsb
or
jbe
sub
push
lods
shlb
sbb
or
addr16
or
stc
out
xor
pusha
int3
hlt
dec
sbb
data16
mov
push
sbb
stc
insb
sub
jns
cmp
push
out
mov
jo
jae
fs
pop
xlat
lock
movsl
sub
imul
insb
add
test
mov
movsb
jg
mov
pop
dec
stos
push
arpl
int
call
sbb
data16
stc
mov
jns
je
xchg
mov
iret
push
cmp
mov
sub
cs
das
and
data16
cmp
cmc
xchg
data16
in
xchg
aaa
inc
popa
or
sbb
dec
xor
cmp
add
dec
aaa
xor
lcall
sahf
mov
ljmp
mov
std
inc
sbb
sarl
shll
xor
push
cld
pop
jmp
imul
push
cmp
ljmp
push
jp
mov
xchg
jo
mov
and
xchg
lahf
sub
cmp
imul
jl
dec
xchg
jb
repz
loopne
addr16
aam
loopne
out
fcmovbe
sub
push
adc
mov
leave
roll
xchg
jns
xchg
mov
jo
inc
out
movsb
sbb
dec
lret
pop
add
mov
and
mov
inc
inc
pop
aas
icebp
loopne
mov
cmp
push
pop
mov
aaa
lea
enter
bound
popf
movsb
sbb
mov
xchg
in
inc
outsb
jge
sub
clc
sbb
dec
fisubl
int
jle
pop
mov
int3
push
jae
push
or
add
adc
mov
fisttps
stos
daa
lret
into
out
inc
pusha
aad
loop
out
ret
in
or
sbb
dec
and
loop
cmpsb
sbb
jae
fbld
movsb
pushf
pop
or
enter
pop
push
push
xor
push
push
repz
mov
or
fisubl
xchg
ss
je
add
xor
loope
and
sub
arpl
pushf
and
xor
int
mov
testb
xchg
and
rorb
sub
jns
xchg
mov
addb
stos
jecxz
ds
or
xlat
loope
test
je
cmp
xchg
into
sub
test
xor
shrl
mov
add
jo
je
data16
inc
lods
sub
xchg
or
cmp
push
adc
fs
dec
testb
rorl
adc
adc
pushw
pop
adc
pop
jmp
das
in
push
cmpsl
jo
xchg
lcall
inc
pop
mov
popa
push
pop
call
push
loope
fwait
cmp
dec
xor
movl
data16
push
cltd
pop
adc
fs
outsb
and
or
and
sbb
movb
jns
xchg
adc
and
inc
or
mov
es
ljmp
shr
fldcw
xor
lods
arpl
inc
xor
test
inc
stos
push
fs
adc
shll
ret
add
ljmp
push
rolw
sub
dec
xchg
pop
cmp
inc
lret
lock
pop
pop
inc
or
fstpt
or
mov
clc
fisubrs
or
mov
cmp
leave
ds
sahf
and
mov
sti
out
scas
xchg
jp
pushf
adc
push
mul
dec
js
xchg
movsb
ljmp
sub
mov
xor
loop
dec
int
push
stos
scas
test
or
negl
lods
sbb
loop
jnp
dec
inc
test
push
push
push
mov
xchg
aad
loop
jns
imul
sahf
mov
or
popa
mov
int3
inc
fisttps
mov
push
push
cmp
sbb
ss
xor
sub
jp
pusha
lock
stc
xchg
insb
repz
js
clc
in
test
xor
lods
or
pop
mov
adc
jbe
cs
call
and
jl
rorb
sbb
int3
adcb
andb
pusha
out
or
sti
outsl
lods
stc
scas
add
xlat
bound
pop
cmp
sub
xor
mov
mov
mov
gs
xchg
jno
vpsubd
add
adc
dec
or
fistps
or
fisubl
fmull
nop
pop
repnz
sub
push
lret
mov
sbb
fisubl
popf
aam
out
jmp
rcrl
dec
cmp
es
in
rcl
sbb
pop
rcrb
sub
cltd
addps
das
inc
shll
cmpsl
dec
cmpsb
push
sti
push
jecxz
movsl
sbb
push
inc
xor
das
xor
ret
and
iret
jge
lds
xor
ret
addl
repz
lahf
jo
cld
fdivr
jmp
jns
inc
adc
mov
pop
int3
mov
push
add
adc
pop
dec
repnz
loop
cmp
cli
repnz
jle
xchg
mov
cmp
adc
into
xchg
inc
xchg
scas
xchg
xlat
add
rorl
into
or
mov
sub
push
cltd
call
icebp
fcomp
and
jl
inc
xchg
into
push
sbbl
ja
sahf
jle
cmc
js
scas
out
mov
ret
jae
repz
stc
je
or
mov
lret
cmp
dec
mov
popf
std
aad
adc
cld
dec
pop
in
ret
jg
jno
rol
xchg
js
push
shl
mov
pop
cmpsb
lcall
ret
push
and
insl
lahf
mov
into
inc
xchg
sub
or
repnz
xchg
add
stos
pop
stos
aaa
or
gs
fnstsw
mov
ret
push
cmp
ret
or
orb
jmp
jo
sti
push
lcall
cmp
nop
std
mov
sarl
inc
mov
and
add
jecxz
dec
sub
pop
mov
or
cli
je
aad
int
int
std
and
mov
xchg
and
push
mov
xchg
xchg
aad
shrd
out
sub
shll
in
mov
or
pushf
lock
mov
xchg
mov
ds
sbb
rol
pop
notb
pop
sub
jne
out
sbb
pop
sub
sarl
xor
addb
xor
mov
mov
fwait
push
movsl
dec
mov
inc
push
leave
pop
flds
mov
push
ret
negb
jp
into
mov
ds
pop
fisttps
mov
or
sbb
jns
push
addl
sub
add
sbb
lret
push
mov
inc
aam
xor
data16
mov
inc
clc
mov
xchg
fnsave
inc
pop
fwait
stos
cltd
or
aam
push
dec
or
loop
fwait
jge
out
stc
fisubs
ret
mov
mov
out
es
scas
adcl
ljmp
je
notl
aam
mov
hlt
nop
aaa
stc
cmp
and
aaa
jb
pop
xchg
sbb
inc
es
pop
movsb
pop
and
aad
lods
sub
sbb
popf
imul
xchg
sbb
gs
xchg
roll
sti
out
ds
mov
movsl
sbb
sub
push
pop
mov
adc
adc
and
shlb
adc
mov
test
div
hlt
push
xchg
xor
lods
sbb
dec
sbb
out
add
ficomps
or
and
fst
loop
aad
pop
mov
jle
push
mov
pandn
mov
out
inc
sarb
dec
xchg
ljmp
pop
push
cmc
lods
loope
or
mov
sbb
xor
stc
inc
xor
lcall
cmp
loop
xchg
or
add
fdivl
testl
loope
jae
mov
or
sbb
daa
lods
push
xchg
stos
movsb
inc
inc
cmp
xchg
lods
jo
cmp
lret
mov
adc
loopne
sub
fimull
lret
mov
or
lds
pop
pop
int
adc
mov
or
xchg
push
int
popf
push
xor
cmp
jp
xor
inc
mov
sub
adc
jns
call
notb
insb
push
lcall
inc
cmp
lahf
pop
push
mov
ja
in
sbb
subb
fsubs
imull
popa
adc
inc
push
add
add
scas
cwtl
aam
adc
daa
mov
sti
popa
iret
xor
out
push
pop
lods
dec
or
add
dec
scas
lea
popa
inc
adc
les
push
pop
jl
rcl
pushf
adc
jnp
inc
fidivrs
cmp
orl
repz
cmc
bsf
dec
pop
push
xchg
adc
das
out
jae
rorb
push
mov
or
xchg
aas
dec
pop
shll
fldt
adc
enter
lea
mov
shrb
or
mov
lret
pop
mov
xor
add
mov
ficoml
mov
popf
lret
fwait
movb
mov
dec
imul
sti
orb
es
lcall
mov
push
cs
outsl
sbb
or
mov
leave
inc
fs
arpl
mov
push
cmp
push
add
add
inc
std
andb
cmp
cs
inc
mov
mov
scas
popa
leave
clc
pop
sbb
mov
mov
popf
cmp
pop
cmp
mov
push
mov
test
arpl
mov
das
mov
int
loope,pn
jecxz
sub
jae
push
push
ret
or
or
jae
or
add
jbe
adc
jae
and
fcoms
jns
adc
inc
test
in
sbb
inc
mov
lret
repnz
inc
mov
in
mov
aaa
inc
dec
jmp
test
mov
repnz
or
into
sbb
das
lock
aam
scas
adcl
arpl
addb
pop
nop
cwtl
dec
dec
sbb
mov
fwait
mov
push
jle
inc
rcll
pop
mov
shl
ja
lahf
sub
add
dec
and
pop
cmp
cmc
or
rcll
ret
stos
scas
pop
lds
xchg
test
or
jo
jb
dec
or
pop
test
cmp
or
add
jecxz
out
ja
repnz
jae
cltd
fmull
sbb
test
jnp
sbb
adc
outsb
int3
into
ret
mov
daa
xchg
mov
mov
test
into
push
aam
jmp
pop
push
sbb
mov
mov
loop
mov
and
cmp
jmp
repz
sbb
pushf
sbb
sub
mov
push
dec
pop
xchg
pop
pop
add
pop
or
test
in
std
arpl
cmpl
orb
rcll
push
mov
jecxz
mov
pop
andl
dec
sbb
push
mov
aad
sub
jns
int
xor
jae
call
or
in
pushf
and
xchg
push
daa
jmp
mov
in
lds
xchg
and
in
xor
call
inc
mov
push
adc
sub
ror
rcr
lahf
dec
or
test
lret
pusha
outsl
aas
dec
pop
out
je
or
outsb
bound
pop
ss
inc
shrb
in
push
cltd
add
dec
inc
add
les
mov
jle
repnz
mov
punpckldq
ret
push
cmp
sub
xchg
sbb
in
pop
daa
shll
jecxz
lcall
push
inc
lds
jg
mov
inc
jg
orb
cmc
adc
and
test
cmp
mov
push
pop
stos
rol
loope
sub
cmp
sbb
jno
inc
ljmp
dec
out
dec
add
mov
cmpsb
push
lods
jb
mov
fmuls
mulb
inc
inc
jns
out
cli
add
mov
and
mov
jns
dec
xchg
push
in
int3
rcl
loope
loop
fwait
pop
mov
sti
sbb
cwtl
andl
sar
sti
and
fisttps
mov
std
es
adc
cmc
icebp
sbb
movsl
xchg
fwait
pop
add
int3
sub
mov
test
or
cmp
clc
dec
cs
mov
fldcw
xor
in
xchg
loope
cmp
adc
xor
cmp
jo
add
jmp
add
pop
mov
mov
jg
loope
inc
lahf
imul
movsl
fidivrl
imul
sbb
loop
movsl
or
lahf
push
mov
pop
mov
fadds
nop
fisttps
xchg
scas
ss
adc
pop
jge
or
mov
addb
movsl
lock
push
xchg
or
jmp
jle
cld
dec
inc
dec
add
cmp
pop
lahf
mov
fldl
insl
loopne
push
stc
adc
arpl
data16
mov
dec
mov
iret
cmp
jbe
push
mov
xchg
loopne
lcall
add
pop
push
jns
jns
addr16
add
add
movsl
push
dec
xchg
cli
call
push
mov
je
sub
lret
andl
shlb
scas
out
enter
scas
in
fwait
nop
test
sbb
cmp
mov
cmp
icebp
iret
call
pop
lret
dec
mov
insb
inc
scas
mov
or
xchg
and
js
lods
xor
cmp
sti
or
or
mov
mov
in
pop
add
jae
ret
addr16
jle
das
mov
push
dec
aas
lcall
jg
sub
xchg
inc
cmp
pop
sbb
sbb
xchg
mov
std
bound
lret
lods
data16
pop
pusha
ret
std
in
jbe
aaa
push
das
int
cmp
push
pop
xchg
jbe
add
fsubs
mov
scas
pop
stc
in
incl
out
stos
adc
xchg
jecxz
sub
push
xchg
mov
enter
rcrb
subb
xchg
sahf
mov
mov
outsl
push
lret
mov
cmpsl
daa
jle
popa
cs
push
jnp
xchg
jnp
xor
xchg
mov
mov
cmpsl
pop
mov
push
xchg
int
in
xchg
fucomp
xlat
jo
dec
inc
jp
add
lds
outsl
pop
rcll
xor
inc
pop
push
jne
pop
inc
sahf
repnz
pop
add
data16
cmpsl
push
popf
xchg
mov
pop
pop
sbb
mov
dec
and
orl
outsb
dec
pop
cltd
inc
int
push
and
dec
jb
cmpb
push
fwait
lcall
scas
xchg
aaa
xchg
outsb
mov
xor
and
cmc
add
push
bound
jae
sub
xor
popf
inc
bound
dec
sti
jae
loopne
sbb
lret
ja
mov
jg
cmp
cmc
adc
roll
stos
gs
mov
add
popa
addr16
aas
or
hlt
jecxz
inc
sub
inc
xchg
xor
nop
leave
mov
out
int
dec
das
leave
out
inc
xchg
cmpb
jae
mov
insb
push
add
dec
adc
add
xchg
jbe
push
cs
iret
xor
testl
cmp
add
jae
push
mov
jo
ds
xchg
adc
fsubrl
dec
divl
and
and
jl
adcw
popa
cmp
cmpb
adc
sbb
stos
jno
cmpsl
pop
clc
jl
push
rcrl
lahf
icebp
sub
popf
sub
push
xchg
mov
dec
push
mov
fdivl
mov
xor
mov
xchg
or
inc
lock
xchg
jecxz
jns
adc
jg
push
or
push
jno
insb
fwait
lret
jne
pop
mov
fcmovnbe
imul
inc
mov
sub
add
jb
icebp
push
push
adc
jbe
jns
daa
mov
ds
push
sub
jle
rolb
mov
out
xor
jle
cli
sarb
cli
js
das
pop
mov
stc
adc
lea
inc
xchg
xchg
int
int
mov
loop
imul
lret
and
movsl
mov
sub
xor
jno
ret
push
aaa
ss
scas
sub
daa
es
adc
dec
dec
jge
insb
mov
daa
xlat
dec
insb
adc
jb
aam
jno
dec
xchg
ja
rcl
nop
push
movsb
aas
xor
jns
adc
jno
repnz
dec
sbb
cmp
es
std
add
dec
ret
lods
mov
addr16
clc
jo
or
ret
in
mov
cld
and
in
adc
push
int
push
mov
test
or
gs
adc
dec
xchg
fstl
sbb
clc
sbb
add
sub
mov
fldl
in
add
stos
pop
in
shll
push
xchg
dec
mov
jl
insl
fwait
loopne
hlt
xchg
fcom
bnd
andl
fisttpl
add
xchg
jmp
push
mov
ljmp
xchg
cld
cld
inc
and
shll
in
xor
push
inc
push
pusha
ss
cmp
scas
or
test
cmp
sub
or
fdiv
and
imul
mov
fidivl
into
fildl
mov
sahf
mov
jge
dec
popa
call
add
int
xchg
dec
or
xor
repnz
xchg
xchg
cmc
mov
sbb
inc
or
pop
mov
divb
mov
inc
data16
faddl
xlat
or
scas
xlat
xlat
outsl
imul
rolb
loop
add
ss
enter
and
test
jns
inc
cmpsl
sbb
outsb
mov
push
push
je
sbb
sub
jae
jp
sub
push
push
mov
xchg
inc
mov
and
and
call
cmpsb
out
inc
lret
mov
jne
jl
sbb
in
fwait
adc
or
inc
push
and
xchg
out
loop
rol
enter
jle
scas
sbb
cmp
add
jne
data16
cmp
cmp
in
lods
nop/reserved
lods
cs
and
fucom
gs
nop
aam
shrb
cli
movsl
movsb
fistl
movsb
outsb
mov
pop
mov
popf
mov
lods
imull
mov
or
mov
movsl
das
dec
out
or
jo
or
mov
pop
and
insb
mov
add
adc
xor
repz
add
in
inc
push
les
or
notrack
adc
xlat
sbb
in
scas
xchg
movsb
pop
push
jo
stc
cmpsl
fmul
mov
clc
movsb
fidivl
dec
lods
mov
outsb
mov
mov
pop
dec
pop
mov
insb
adc
lret
out
ficompl
sub
stos
push
jne
shrb
mov
or
aas
jge
mov
jg
mov
int3
imul
fsub
pop
test
xor
jae
fbstp
fistpll
mov
cmc
jno
bound
sbbl
push
sub
insl
cmp
jle
pushw
rolb
outsb
mov
jmp
int
pop
add
sbb
lds
lock
lcall
stc
and
nop
push
iret
mov
inc
jnp
popa
push
loop
insl
push
jb
cs
cltd
les
and
mov
adc
bound
int3
xchg
pop
scas
or
mov
sub
mov
cmp
leave
imul
cmp
aas
icebp
cmc
jmp
arpl
in
mov
arpl
xchg
and
cmp
ret
test
ret
mov
inc
add
fldcw
aam
push
adc
std
add
jae
in
ret
sti
pusha
subl
std
mov
idivl
sbb
or
repz
stos
pop
inc
adc
ljmp
dec
and
xchg
and
inc
leave
fdiv
mov
aaa
lock
fidivs
and
push
stc
lret
cmpsb
sbb
iret
or
hlt
jg
pop
xor
fdivl
fidivrl
ret
test
out
loopne
stos
dec
adc
out
inc
subb
cmpb
push
hlt
mov
push
xor
loope
insl
lcall
pop
aas
cld
jmp
outsl
jmp
ljmp
jmp
sub
xchg
je
and
imul
push
roll
inc
mov
jne
das
add
imul
add
lcall
mov
pop
loop
xor
lahf
cmp
pop
aas
inc
imul
push
jnp
rclb
push
shll
adc
push
cmpsb
push
incb
rolb
adc
fwait
mov
orl
sbb
fucom
repz
add
mov
or
test
dec
xor
pusha
push
pop
inc
imul
sub
pushf
inc
xlat
pop
mov
xchg
insb
leave
lods
sti
andb
jle
sti
cmc
xchg
jno
push
test
sbb
mov
sbb
bound
fldenv
fldcw
jo
jge
mov
mov
sub
mov
and
mov
jle
xlat
pushf
add
dec
add
dec
popf
xchg
sti
std
cmp
adc
jp
jo
fwait
jne
imul
mov
adc
fiadds
sbb
push
cld
sbb
xchg
xor
dec
and
cld
movsl
inc
cwtl
jmp
sbbb
mov
pop
or
inc
sbb
lods
lahf
push
mov
js
or
pop
lahf
clc
sarl
mov
rol
push
xlat
imul
shll
icebp
pop
sub
push
jb
ds
and
adc
out
adc
inc
inc
jp
inc
sbb
jl
insb
in
mov
add
pusha
and
cmpl
ss
pop
test
pop
movsl
iret
push
scas
popf
repz
lret
xchg
outsl
movsl
sub
mov
scas
adc
xor
mov
adcb
jl
shrl
sbb
add
bound
jae
jp
insb
pop
sub
cwtl
xchg
xchg
nop
mov
dec
adc
je
inc
cmpsl
mov
push
iret
aam
imul
shl
adc
je
inc
cmpsb
pop
stos
stos
outsl
add
or
or
mov
sub
int
push
movsl
shlb
mov
lds
mov
sub
or
into
js
cld
mov
jne
ljmp
pop
pop
fs
inc
push
and
gs
pop
jge
arpl
ds
jecxz
and
xchg
lock
stos
scas
aaa
lea
mov
mov
add
mov
fisubs
das
iret
or
jne
shr
jg
push
les
lea
jmp
dec
out
mov
push
push
add
mov
dec
test
mov
loop
jnp
pop
xor
push
and
nop
jg
cmpsl
cmp
cli
in
pop
aam
sbbb
add
clc
daa
imul
xchg
xor
inc
hlt
xorl
jnp
add
cld
and
add
testb
sahf
add
push
mov
cmpsb
xchg
ja
sbb
push
popa
aas
fs
and
adc
jle
adc
push
sbbb
jnp
adc
aas
cmp
ja
mov
insl
aas
ret
add
mov
repnz
mov
fadds
fwait
adc
cmp
cld
inc
push
leave
push
aaa
fsub
mov
or
rorl
stc
xchg
lods
aaa
mulb
ret
cs
mov
fnstcw
stos
mov
push
shlb
and
push
lahf
xor
push
and
push
jae
sbb
and
cmpsl
cmp
or
stc
pavgw
and
jns
movsb
std
inc
inc
or
mov
leave
pop
cmpb
and
mov
add
out
cmp
testb
mov
ds
div
cmp
mov
outsl
adc
ret
mov
fstp
mov
lahf
les
push
std
inc
inc
shll
shlb
mov
pop
jp
dec
xchg
not
cli
rorb
popa
popf
test
data16
cld
imul
fwait
scas
mov
stos
js
jle
cmp
sub
mov
scas
nop
dec
fs
outsb
stos
pop
jp
stos
sti
enter
adc
test
adc
outsb
sub
mov
int3
jae
shlb
push
test
arpl
add
lods
sub
shl
shll
inc
or
cs
jle
pop
add
cmp
xor
repnz
adc
fsts
in
cmp
jge
insb
or
or
jb
dec
push
pop
leave
movsb
pop
in
jg
rcrl
xor
shrb
pushf
xchg
lret
push
fmull
adc
dec
addr16
jecxz
imul
mov
addr16
shlb
hlt
scas
das
push
nop
jb
sbb
sub
sbb
popf
sub
push
mov
pushf
add
jno
jecxz
repnz
aaa
movlhps
push
lods
sbb
std
addl
pop
int
lock
int3
adc
xchg
add
and
dec
out
xchg
shl
mov
stc
or
stos
jle
pop
int
imulb
inc
repnz
inc
sar
out
xchg
push
xor
jp
mov
or
inc
sbb
cwtl
and
mov
xchg
push
inc
inc
shlb
insb
xlat
jns
add
test
push
lret
inc
mov
scas
xor
out
pop
xchg
push
iret
jnp
add
insl
mov
dec
xchg
xor
adc
and
and
sbb
push
leave
addr16
in
xchg
mov
leave
aas
and
push
jge
fimull
add
lock
es
jp
xchg
clc
cmp
inc
call
xchg
pop
addl
das
pop
jp
jle
ffree
dec
mov
cwtl
rclb
daa
loope
xor
fidivl
test
sub
leave
loope
mov
loopne
mov
in
loopne
into
jmp
in
pop
or
sti
cmp
leave
adc
sub
mov
rclb
xor
push
mov
jno
hlt
movsl
fdivrs
or
les
mov
lods
jecxz
xor
xchg
mov
aas
das
test
loop
cmpsb
push
push
sbb
pop
xchg
addr16
jnp
cli
fcomp
mov
cltd
xor
jae
mov
and
inc
std
fs
lea
inc
mov
sbb
cbtw
xchg
es
xor
sub
xor
clc
add
aaa
push
dec
add
mov
jecxz
addr16
iret
sub
shlb
mov
leave
and
xchg
fwait
cmp
dec
fucomi
dec
cmp
add
fadds
pop
xlat
dec
adc
sub
mov
insl
pop
jge
mov
cli
push
dec
loop
xchg
cmp
filds
adc
mov
test
xchg
add
imul
or
je
xchg
push
das
repz
add
or
xchg
rolb
cmp
iret
cmp
mov
push
stos
cmp
aam
iret
dec
test
mov
mov
iret
jmp
repz
aam
imul
out
mov
imul
inc
adc
or
or
cmp
ljmp
mov
or
pop
fidivs
jbe
mov
fldt
xor
dec
es
adc
sub
sub
loop
xchg
jp
jle
cs
pop
es
popa
pusha
jl
pop
push
jge
dec
ss
ljmp
pop
dec
orl
dec
out
js
andl
dec
xchg
or
sahf
and
sarb
or
jno
inc
jns
movntps
cs
rclb
push
data16
bound
adc
int
push
xor
push
sbb
mov
jl
mov
and
js
push
push
sbbb
popf
mov
mov
dec
inc
jno
clc
test
xor
mov
jmp
xchg
jmp
pushf
outsl
mov
insl
out
or
or
pop
in
or
cmpsb
std
sbb
xor
mov
adc
mov
pop
cmp
pusha
loope
ljmp
fcmovnbe
dec
inc
lahf
daa
or
icebp
mov
loopne
pop
inc
rcrb
xor
insb
je
lods
fdivl
or
mov
sub
fidivrs
repz
mov
adc
push
std
mov
sub
xchg
call
cmp
inc
sarb
popf
cld
pop
leave
cmpsb
sbb
fwait
cld
pop
fsub
push
rcrb
xchg
insb
sbb
hlt
scas
in
mov
jne
loope
outsb
lahf
aad
ret
fsubrs
xchg
in
popa
mov
mov
sub
stc
sub
jnp
xchg
cmp
sbb
fucomp
push
or
xchg
loop
push
and
add
test
mov
icebp
mov
pop
out
xchg
adcb
je
mov
sbb
pop
and
jno
outsl
outsb
out
pop
cmp
ret
sbb
push
mov
rcll
mov
je
adc
jnp
xchg
or
jl
inc
pushf
sti
imul
jp
inc
and
fnstcw
mov
pop
xchg
pushf
sub
lahf
inc
add
sub
jmp
ja
sbb
fimuls
leave
sub
and
enter
ss
repz
test
cmc
push
xchg
sarb
mov
mov
and
fldl
sbb
stos
popf
sbb
or
sbb
push
ja
xchg
xchg
xor
out
ficomps
sti
jle
push
sbb
dec
lret
paddq
stos
xor
rclb
fs
pop
andl
mov
xchg
xor
fwait
insl
ret
xor
nop
sbb
stos
lcall
mov
adc
mov
cmp
movsl
lea
pushf
inc
orl
es
pushf
xor
mov
lds
push
ficoml
jbe
push
mov
loop
push
add
mov
cmpsb
sbb
push
imul
mov
test
sub
nop
bound
sbb
clc
and
addl
imul
mov
jmp
incl
insb
push
repz
and
in
cmp
and
int3
pop
out
dec
ret
fsubrl
mov
int
lret
sti
fbld
ret
mov
stc
sub
mov
es
sarl
out
leave
enter
arpl
jnp
dec
test
push
loop,pt
rcll
sti
imul
ds
inc
cmp
inc
in
dec
mov
mov
push
outsl
and
xchg
call
jb
dec
cmp
pop
cmpsb
inc
dec
sub
lahf
es
aaa
xor
aaa
push
in
out
lret
pop
fwait
cmpsb
addr16
shlb
mov
pop
enter
iret
pusha
mov
mov
adc
adc
out
adc
xlat
and
jbe
sub
sti
xor
mov
int3
pop
stos
jb
ljmp
bound
dec
push
xor
sar
mov
mov
pop
leave
cmp
imul
jmp
mov
or
cld
push
hlt
fldcw
sub
mov
inc
mov
mov
xor
fnstenv
mov
orl
adc
mov
sti
idivb
xor
in
lahf
cmc
adcb
inc
mov
clc
add
cmpsb
dec
jl
daa
test
inc
cmc
mov
add
cmp
gs
mov
test
shr
sub
lods
cmpsl
pushf
cld
out
lods
scas
nop
aad
outsl
jnp
dec
outsl
lods
dec
insb
stos
jnp
add
pushf
xor
lods
sbbb
cmp
mov
sarl
inc
adc
and
out
sahf
inc
or
xlat
pop
lahf
icebp
in
les
and
sbb
mov
icebp
or
cmp
cmp
ret
insl
add
hlt
popa
xchg
jle
shll
outsl
cli
adc
cmpsb
xchg
sbb
popf
fidivrl
sbb
shrl
mov
xchg
lock
add
insb
sarb
repz
pop
push
push
lcall
sub
psrlq
imul
cwtl
out
lahf
mov
ror
dec
pop
cmp
addr16
shrl
xor
dec
sub
shlb
fisttps
mov
lea
test
or
imul
adc
xchg
xchg
cmp
or
sub
xchg
mov
xor
xchg
and
or
dec
mov
sub
shlb
das
mov
insb
add
add
cs
pop
js
jle
rcr
jl
push
mov
add
pop
add
in
xor
inc
or
popf
movsb
mov
jg
sub
add
push
mov
movsb
iret
mov
add
ret
pop
mov
jnp
rorl
push
sub
enter
dec
push
fs
sub
repz
test
mov
xor
dec
push
jno
mov
mov
pop
iret
jbe
enter
mov
ds
in
loop
out
xchg
pop
inc
pop
or
icebp
mov
cmp
sbb
jno
rcr
insb
idiv
out
mov
xor
or
mov
and
imul
inc
xor
lahf
add
stos
aad
into
pop
fisubrs
ljmpw
pop
or
mov
or
dec
sbb
lods
les
sbb
dec
fisttpll
push
or
jmp
push
aad
fsub
inc
sub
push
test
mov
rolb
nop
jmp
jo
popf
push
jno
loope
xlat
mov
mov
jno
lock
push
mov
mov
lods
jl
stc
lea
movsl
cmpsb
push
mov
dec
vpsubb
add
stc
icebp
xchg
and
sub
das
sbb
cwtl
daa
out
arpl
mov
stos
sub
fstl
add
push
bound
imul
bound
mov
stc
pushf
inc
pop
adc
add
imul
lods
mov
push
mov
jmp
sahf
jcxz
js
imul
data16
sbb
jnp
mov
popf
mov
inc
sbb
fs
fmul
dec
cmpsb
sar
sbb
pop
mov
or
adc
mov
fcmovbe
das
dec
cwtl
cmp
testb
mov
es
pusha
subl
imul
and
mov
call
rclb
rol
js
dec
and
jle
cmpsb
cmp
insl
pop
lcall
and
mov
inc
mov
pop
xor
push
xlat
cmc
jno
mov
dec
add
and
cli
popf
test
lods
fsubl
sub
movsl
mov
ljmp
lods
out
in
fwait
lock
ret
outsl
clc
dec
test
xchg
mov
adc
js
push
or
das
xor
lock
mov
inc
sbb
and
or
mov
or
mov
das
jmp
or
scas
sub
mov
test
movsl
dec
insb
push
stos
std
xor
or
fcoms
mov
lods
ror
out
orl
out
cld
out
push
cmp
mov
push
cwtl
cmp
mov
aas
je
dec
pop
fisttps
inc
jg
addr16
lcall
jno
popf
lret
cli
nop
adc
in
das
mov
into
test
mov
lods
cwtl
sahf
cwtl
leave
or
insb
add
xchg
ret
xchg
nop
mov
and
fsubrl
xchg
sbbl
ljmp
push
outsl
scas
push
sbb
lret
enter
inc
xor
loope
add
cmc
jno
mov
jl
loopne
ret
loop
mov
mov
and
pop
ljmp
arpl
xchg
xchg
cmp
or
mov
lds
lret
aas
loop
out
cmp
mov
push
into
and
int
push
loope
sbb
adc
int3
iret
push
push
or
bound
ret
inc
and
jecxz
push
mov
lret
mov
pop
pxor
test
push
idivl
test
fwait
cmc
mov
lcall
ljmp
js
mov
xor
shll
fmull
fildll
cmpsl
jle
in
mov
lret
test
lret
pop
sbb
mov
mov
add
shlb
rclb
iret
cmp
out
shlb
inc
daa
add
xor
sbb
incb
in
push
push
stc
lods
movsl
or
cmpsl
xchg
fcomi
jb
add
xor
hlt
cwtl
mov
mul
mov
pusha
push
jbe
loop
fldl
push
adcl
ljmp
pop
loope
pop
popa
xor
lret
pop
dec
out
push
in
insb
sbb
ret
es
in
aas
enter
jg
jp
xor
into
std
and
push
sar
sahf
fnsave
inc
xchg
imul
or
xor
xchg
or
lahf
xor
mov
sbb
jg
enter
jecxz
es
sub
jp
mov
test
adc
cwtl
enter
jne
and
pushf
xchg
mov
cmpb
jae
lahf
or
jmp
jl
and
cmp
ror
or
push
inc
in
jns
push
fimull
add
daa
xor
and
lods
insl
and
shll
jne
gs
mov
jle
popa
inc
sub
fs
cld
es
sbbl
xchg
stos
inc
xchg
push
test
inc
shlb
xchg
or
leave
or
fbld
inc
movsb
test
repz
cmp
pop
pop
das
adc
xchg
out
push
add
mov
dec
dec
outsl
stos
testb
in
lds
adc
jge
inc
das
add
imul
nop
jp
dec
mov
outsb
mov
pushf
or
pop
and
popf
fsubl
test
out
dec
rorl
mov
xor
dec
pop
mov
inc
jmp
arpl
mov
pop
jge
sub
mov
movsb
xor
fmulp
inc
ret
xor
inc
inc
cmp
icebp
sub
xorb
xor
outsb
push
insb
loopne
and
stos
into
outsb
lods
mov
pop
aas
sbb
dec
ja
or
jecxz
jg
add
mov
movsl
mov
sub
mov
lods
fcompp
cmp
dec
arpl
mov
sbb
mov
dec
aad
out
mov
push
inc
dec
pop
pop
lret
xor
push
test
push
je
mov
adc
shll
push
xchg
daa
push
sbb
popf
mov
xor
aas
sub
add
sub
movsl
inc
push
ret
mov
popf
jmp
in
pop
sub
push
jp
sub
aaa
aam
imul
mov
sbbb
cmpsl
js
outsl
orps
scas
icebp
push
dec
push
sarl
mov
push
xor
xor
enter
add
iret
cmp
hlt
in
movsl
and
shl
leave
aas
sub
xchg
sub
fiadds
xchg
or
xchg
pop
lea
int3
popa
lods
ret
lods
std
dec
inc
int
test
fdivp
cwtl
adc
pop
out
add
test
addr16
pop
fucom
dec
mov
arpl
mov
mov
push
cmpl
rorb
dec
clc
mov
xchg
dec
popf
in
dec
cmp
out
dec
push
inc
inc
pop
mov
nop
cmp
cwtl
iret
sub
sbb
sbb
ss
pop
mov
mov
mov
decl
out
in
mov
ficompl
ljmp
mov
ret
outsl
sti
jb
sbb
insb
xchg
mov
stos
or
mov
enter
mov
lcall
mov
xor
and
jb
cltd
push
out
out
dec
adc
das
add
dec
je
inc
data16
scas
cmpl
ret
mov
addr16
adc
xchg
adc
xchg
movsb
enter
sti
add
decb
sti
or
push
jmp
lods
pop
mov
cmpsb
outsl
call
mov
sahf
or
adc
jl
jp
sub
push
mov
pop
cwtl
dec
shll
imul
lahf
mov
sub
jae
cmp
push
pop
add
jb
pop
bswap
pop
sahf
fistpl
stos
popf
sub
bound
cmp
mov
repz
repz
ficompl
mov
pop
test
xchg
enter
loop
jno
dec
bound
leave
xor
cld
fwait
cmpsl
pop
jbe
cmpsb
rolb
sub
cmp
jnp
push
roll
pop
xchg
out
movsb
bound
fnstsw
shlb
jmp
enter
push
push
enter
lcall
jbe
mov
aam
mov
pop
and
push
pop
arpl
mov
pushf
test
pop
push
mov
or
pop
in
pop
cld
and
add
xlat
mov
or
dec
inc
jl
fwait
fs
sub
and
jb
ja
jo
in
push
push
add
into
dec
repz
adc
loop
mov
mov
cli
mov
popa
enter
nop
leave
push
test
xchg
ds
iret
lock
jg
scas
imul
inc
jmp
mov
sub
test
loopne
add
pop
inc
push
pop
dec
pop
mov
shlb
inc
movsb
jbe
sub
mov
pushf
cmp
xchg
ds
sub
arpl
and
cmpsl
jb
push
and
std
les
sub
mov
cmp
or
dec
push
push
loopne
lcall
stos
imul
xchg
sbb
repnz
mov
loope
jecxz
imul
fidivs
lret
call
pop
mov
das
mov
push
jge
sahf
icebp
xor
inc
gs
insl
pop
int
jl
aad
rcr
jne
xor
adc
out
shlb
pop
cli
mov
push
lods
inc
push
loop
out
mov
lods
lahf
jl
add
repnz
xor
jg
loop
mov
int3
cli
pop
outsl
mov
and
mov
lods
faddl
pop
fwait
push
mov
dec
aas
mov
sbb
fwait
mov
cmpsl
pop
lret
int
in
or
out
and
and
dec
mov
dec
xor
movsl
int
in
mov
or
sub
call
lahf
pop
mov
cmp
adc
inc
xorb
mov
lret
sti
mov
popf
inc
jecxz
dec
mov
dec
adc
sub
pop
and
mov
xchg
dec
pop
test
daa
or
adc
test
jl
xorb
sbb
push
adc
and
mov
cltd
adcl
or
or
dec
testl
jle
push
cmp
sub
jl
mov
fisubs
sar
sarl
pop
xchg
int
fstpl
fisttpll
mov
sbb
lret
xor
sti
movsb
fnstenv
les
fidivrl
push
sbb
xchg
mov
lret
jbe
mov
mov
push
dec
xor
adc
rcl
add
outsb
cmp
mov
jecxz
jl
lock
nop
daa
pop
xchg
jp
jnp
jecxz
mov
dec
leave
mov
inc
ds
rclb
mov
in
xchg
jnp
arpl
add
pop
sahf
cli
xor
jb
aaa
push
bound
pop
arpl
ds
cmc
mov
sbb
movsl
addb
lods
jae
or
ljmp
jp
out
cs
jne
addb
lret
xchg
mov
pop
cwtl
fs
xchg
pop
cmp
push
add
inc
pushf
pop
cld
jno
fwait
push
arpl
sub
fwait
push
sbb
stos
in
lds
mov
fistl
out
sub
sbb
xor
or
sub
pop
adcb
es
dec
xlat
inc
sti
mov
inc
mov
enter
push
loope
xchg
xchg
sub
lcall
xchg
out
je
pop
pop
sub
mov
scas
push
mov
hlt
leave
or
lret
mulb
lock
out
cld
mov
rcrl
aam
and
mov
cwtl
sarb
icebp
xor
aad
cs
or
mov
add
clc
movsb
loope
ljmp
mov
mov
rcll
js
inc
push
lret
sbb
je
mov
loop
lods
scas
out
out
imul
add
repz
add
xor
cmpsl
pop
lcall
jg
cmp
jl
jecxz
outsl
sub
repz
popf
sub
frstor
sbb
movsb
xlat
xchg
push
mov
dec
push
test
xchg
roll
dec
aaa
icebp
sbb
stc
sub
sbb
xor
mov
mov
lret
test
sbb
dec
mov
mov
aam
push
fdivr
mov
pop
iret
push
inc
jge
jp
push
das
push
into
xchg
test
imul
mov
repnz
les
lods
fdivl
or
rclb
jge
sarb
mov
aad
lods
test
repz
jge
sbb
lock
cmp
ss
inc
xor
inc
bound
inc
daa
cmp
push
les
or
fisttpll
fmull
imul
inc
add
mov
out
dec
dec
sbb
xor
xor
cmp
xor
leave
rcrb
sub
pop
in
ja
push
js
sbb
cs
movsl
hlt
jo
or
and
addr16
pop
stos
fimuls
cs
out
cwtl
cmp
mov
and
in
push
dec
sub
or
lea
mov
sub
je
popf
cmpsl
add
inc
cmp
pop
lret
cld
rclb
call
inc
mov
int
neg
pusha
xchg
push
pop
repnz
stc
out
adcl
aas
inc
cmpsl
xchg
insb
ss
enter
mov
or
cmpsb
add
test
stos
jns
mov
in
cmc
xor
movb
mov
jns
sub
jecxz
dec
mov
dec
outsb
jb
cmp
mov
fwait
cmp
ficompl
cmp
dec
dec
je
mov
fisttps
bound
jnp
jge
adc
inc
jb
adc
loop
cld
inc
ret
icebp
out
cmpsb
xchg
ret
fbstp
mov
sti
jns
shrb
inc
cli
int3
add
jp
sub
ss
dec
sub
mov
jb
or
xchg
pop
xor
xchg
hlt
cmp
mov
mov
lret
inc
pop
mov
aaa
xor
cmp
mov
push
pop
fiaddl
pop
outsl
sti
sbb
fwait
pop
xchg
pop
je
dec
shll
fs
adc
mov
or
cld
int3
dec
push
test
cmp
pop
sbb
and
xlat
add
push
xchg
xor
sub
push
mov
xor
and
int
mov
mov
jne
mov
bound
cli
xor
into
push
aam
arpl
bound
adc
cmp
mov
sbb
popf
ret
hlt
mov
dec
pop
bound
popa
push
push
loope
push
js
and
popa
addl
stc
mov
adc
dec
arpl
jb
jae
frndint
xchg
pop
jno
das
icebp
mov
mov
scas
xchg
cmpsb
fadd
mov
pop
shlb
cwtl
js
pushf
push
xor
outsl
dec
xchg
pushf
loopne
and
mov
pop
xor
and
lock
scas
sub
cmp
xor
test
sbb
xor
and
das
divl
jge
stos
andl
and
loopne
and
nop
addl
es
mov
leave
addr16
insl
out
maxps
lret
mov
and
shr
sti
aaa
lock
cmp
test
add
outsb
ss
jo
jecxz
inc
dec
int3
mov
lea
jmp
xorl
aad
shrl
sbb
pop
pop
scas
imul
lock
stc
adc
pushf
sub
sbb
cmp
fcoml
jb
scas
pop
dec
inc
adc
pop
push
arpl
cmp
sahf
sub
push
int
add
out
inc
incb
and
jecxz
and
movsb
mov
xorb
mov
sbb
jns
lcall
sub
js
mov
ret
icebp
in
es
sahf
inc
mov
sbb
test
xor
lock
ljmp
out
insb
sub
inc
xchg
xor
mov
ss
addps
insl
mov
mov
pop
push
adc
mov
fcoml
aaa
imul
lcall
xchg
movsb
pop
outsb
jmp
mov
ret
in
popf
das
imul
dec
jno
movsl
les
or
fbstp
dec
xchg
shlb
popa
fadd
and
sbb
ret
sub
ret
fildl
hlt
inc
sbb
test
inc
inc
fwait
cmp
pop
jno
mov
je
push
stc
lret
xchg
inc
lret
fildll
inc
sub
sbb
cwtl
std
mov
cmp
mov
les
cmp
test
das
jo
pop
ljmp
or
fwait
loope
adc
outsl
sbb
jo
rcr
scas
mov
push
mov
and
popa
pop
lea
pop
rcr
std
adc
dec
and
push
adc
cmp
pop
subl
sbb
xor
call
das
dec
and
inc
pop
rcl
jmp
clc
push
lods
or
nop
movsb
push
jbe
ljmp
mov
add
cmc
dec
sbb
push
add
daa
inc
mov
xchg
xchg
nop
mov
popa
xor
jge
js
scas
jae
jne
dec
in
lods
dec
test
insl
or
andl
jmp
dec
xor
iret
in
dec
jge
cmp
push
inc
add
icebp
andb
xor
popf
jbe
fwait
dec
mov
test
inc
pop
mov
pop
fst
leave
and
pop
jns
cmp
push
xchg
lret
mov
sbb
fisubrs
cld
mov
pop
pushf
sub
incl
pop
cmp
sub
in
cmpsl
sbb
fwait
xor
dec
push
push
xor
cld
repz
arpl
add
xor
and
mov
mov
or
in
nop
xlat
jge
xor
mov
call
xchg
mov
jns
xor
sbb
push
das
outsl
sub
sub
cwtl
add
dec
jnp
ret
mov
push
add
push
and
mov
mov
in
jmp
dec
adc
scas
push
sahf
jnp
fidivrl
jno
pop
add
pop
mov
scas
fstl
lahf
and
cmc
pop
xor
out
ret
insl
push
xor
push
popa
jbe
out
aas
mov
xchg
fwait
xor
sub
or
arpl
sti
xchg
in
jge
dec
pop
ljmp
leave
inc
das
push
fists
inc
lock
sub
jp
xor
fsubr
inc
sub
xchg
loop
in
and
push
andb
jmp
std
scas
pop
hlt
xor
and
fdivs
xlat
or
mov
data16
stos
pop
out
dec
jp
add
jmp
in
sbb
out
sub
adc
pusha
push
lret
xchg
pop
pop
jo
add
xchg
mov
add
cmp
add
push
mov
mov
pusha
sbb
cmc
adc
inc
loop
lret
mov
sbb
cmp
orb
add
or
or
insb
sub
and
push
ficompl
adc
in
or
fldenv
push
inc
addb
or
push
inc
xchg
dec
or
push
push
xchg
cmp
and
xchg
data16
mov
inc
mov
movsb
jns
gs
addl
roll
push
sbb
cmp
dec
cltd
ljmp
popf
mov
in
mov
lods
ljmp
fbstp
test
repnz
xchg
insl
xchg
sub
mov
mov
jo
loopne
loopne
aad
mov
pop
mov
testl
inc
jbe
repz
push
std
je
inc
mov
add
lcall
sbb
mov
inc
xlat
mov
jae
mov
nop
cmp
faddl
andnps
sub
cwtl
jle
fnsave
xor
sarl
call
int
mov
xchg
push
xlat
adc
sub
cmp
rol
out
out
sub
or
jno
sub
cmpsb
addb
das
inc
shrl
xchg
and
add
mov
in
fcompl
fsubr
pushf
es
cmp
aaa
mov
rcll
hlt
sti
and
ret
in
mov
leave
out
mov
sub
inc
test
scas
mov
pop
stc
dec
outsl
movsl
popf
in
pop
mov
ljmp
jnp
and
cmp
pop
icebp
das
jns
mov
ret
in
insl
rcl
or
adc
sub
sbb
jge
mov
ja
mov
pop
clc
push
inc
icebp
jno
adc
shr
in
mov
pop
dec
sub
mov
outsb
lahf
je
lods
lret
lcall
imul
mov
xchg
popf
and
push
push
daa
sbb
scas
ds
das
add
jl
and
adc
fnstcw
sub
xor
cmpsl
cmpsb
enter
mov
and
jbe
scas
ljmp
push
pop
scas
imul
cwtl
xchg
lods
sub
and
lahf
xor
inc
ffree
add
jnp
loopne
cwtl
jns
inc
sub
push
xchg
cmpl
shrl
jne
push
cmp
mov
sbb
push
cli
jnp
loope
outsb
push
inc
xor
mov
inc
xor
js
push
and
test
sbb
jge
mov
sbb
sbb
fcmovnbe
js
mov
loop
orl
mov
dec
xchg
mov
xchg
imul
call
rorl
sub
adc
popa
pushf
xchg
and
add
repz
or
pop
inc
mov
out
xchg
dec
lret
movsb
daa
mov
and
mov
or
fidivl
push
sbb
ja
push
les
add
addr16
or
out
sub
dec
pop
leave
mov
movsb
jmp
cs
out
mov
mov
jae
lea
stos
lea
mov
ss
insl
add
inc
cld
xor
dec
pop
adc
mov
mov
mov
test
sbb
push
stos
idivb
mov
jle
mov
sub
push
addr16
cmpsb
push
mov
fadd
jae
mov
fcmovbe
ficompl
fdiv
rcl
sbbl
xchg
sbb
mov
adc
mov
cmp
pop
scas
dec
xchg
jb
pusha
mov
cmp
xor
mov
loop
jno
js
push
pop
iret
daa
outsb
out
push
jecxz
mov
sbbb
mov
je
decb
sub
mov
mov
push
int3
dec
cmp
sbb
mov
mov
lcall
fs
mov
insl
sahf
idivl
push
test
add
push
xchg
mov
and
ret
jp
xor
push
jno
jns
stos
jl
sahf
xlat
sbb
mov
mov
test
dec
cmp
cmp
ljmp
negl
adc
sub
mov
or
pop
sub
xchg
repz
sub
xlat
pop
sbb
adc
sahf
dec
jns
mov
ss
add
xchg
mov
shlb
das
mov
jp
out
lods
mov
and
mov
leave
xchg
mov
dec
sub
dec
andl
lds
and
scas
cs
nop
in
movsl
xchg
xchg
lods
ds
lret
mov
push
inc
out
jg
jb
mov
jns,pn
in
jl
xchg
cmp
int
filds
mov
jbe
or
push
into
push
mov
loopne
dec
mov
add
xchg
das
icebp
roll
pushf
sbb
loope
sahf
insb
lods
mov
sub
add
ss
stos
subl
ret
mov
ds
and
xor
ja
les
xor
dec
shl
bound
lods
and
movsb
test
add
sti
jno
add
nop
sahf
int3
mov
jl
jne
mov
mov
dec
je
dec
mov
pushf
and
xchg
test
nop
into
mov
call
ds
jbe
and
and
push
mov
adc
in
imul
fbld
fcmovbe
ljmp
and
repz
mov
cld
mov
std
mov
int
add
mov
shrb
popf
mov
cwtl
mov
jbe
mov
out
cmp
lahf
mov
push
and
fiaddl
or
push
cmpl
jnp
mov
stc
rorl
xor
mov
sti
jecxz
sbb
loop
jp
sub
in
xor
sbb
test
or
mov
jae
jge
xchg
add
or
cmp
add
repz
or
mov
mov
sub
jp
sub
push
pop
pop
popf
stc
andb
inc
fs
sub
out
or
ds
add
fcomi
int
xchg
aas
sub
pushf
dec
xlat
and
stos
or
pusha
lock
fbld
inc
cld
lcall
xor
dec
dec
cld
popa
rcr
das
cmp
inc
adc
pop
xor
add
daa
call
add
and
lods
pop
pusha
cmp
addr16
lds
out
pop
lret
xchg
out
dec
xor
cmp
mov
mov
sbb
clc
shr
pop
je
ja
pop
pop
cmpl
mov
ds
insb
shrl
sbb
xabort
arpl
je
pop
repnz
jge
shl
imul
mov
push
pop
mov
add
sub
cld
mov
push
test
fwait
jne
xlat
cmp
mov
mov
aad
gs
sub
jle
xor
or
mov
popa
push
cld
imul
mov
mov
sub
js
pop
or
push
addr16
sarl
mov
scas
mov
es
int
popf
popa
mov
lods
cmp
sbb
inc
mov
shlb
cmp
add
sbb
xchg
cltd
repnz
adc
push
push
xor
or
push
sbbl
inc
pop
sbb
loop
call
lret
jle
push
addr16
pop
aad
xchg
cmp
outsb
icebp
jb
mov
dec
iret
add
fisttps
mov
mov
push
mov
pop
clc
push
push
pop
xor
add
jno
fyl2x
cmp
leave
mov
stos
int3
xchg
xor
adc
cld
stos
mov
dec
in
xor
dec
xor
ret
mov
ljmp
mov
mov
adc
cmp
push
js
fmull
pop
add
pop
ja
out
mov
mov
and
loopne
cs
cs
add
loop
test
pop
jo
inc
ljmp
and
cmp
and
outsb
push
add
jns
inc
insb
xchg
lahf
pop
xor
cmp
lahf
add
gs
jns
ret
mov
mov
pop
loop
pop
pop
inc
sti
scas
mov
fs
push
addr16
xchg
mov
loopne
std
push
dec
sbb
cwtl
xchg
ficompl
ret
or
sbb
and
adc
sbb
push
jge
pop
xor
push
outsl
insb
fadds
xor
sub
imul
lods
inc
cs
decl
or
fsubl
sub
fs
jae
mov
sbb
dec
sbb
jp
mov
sbb
enter
mov
mov
add
aam
xchg
jbe
ret
pop
xchg
or
push
sbb
or
shrb
fstpl
lds
add
orl
fildl
inc
imul
pop
inc
jecxz
dec
ds
xchg
imul
mov
fwait
lret
fs
xor
shl
sbb
xchg
je
test
cmp
push
add
loop
xchg
xlat
xor
adc
sbb
es
push
clc
movsb
cmp
dec
fs
aad
lods
mov
gs
enter
inc
and
or
clc
mov
out
jae
inc
mov
add
repz
mov
push
popa
and
push
dec
roll
or
adc
int
or
push
and
fs
push
dec
scas
inc
xchg
lcall
sbb
aaa
jecxz
or
insb
adc
dec
stos
mov
outsl
mov
mov
mov
adc
cli
and
lds
mov
add
push
testl
cmp
inc
push
ret
push
push
test
mov
cli
adc
add
adc
shll
inc
inc
or
cmp
mov
rolb
shr
inc
adc
mov
mov
out
adc
lret
cmp
and
sub
add
out
cmc
in
sub
popf
out
pop
sub
jmp
jp
scas
adc
and
sbb
dec
cmp
xchg
in
fimull
adc
test
shrl
sbb
gs
lret
fisttps
push
mull
cltd
xchg
jge
cwtl
sub
pop
ds
cli
dec
loope
in
xchg
push
ljmp
pushf
inc
mov
fistl
pop
mov
push
xchg
ljmp
mov
jle
inc
out
jne
cmc
mov
pop
pop
arpl
stos
jmp
ret
push
sbbb
pop
rcll
inc
xor
incl
fstpt
adc
out
pop
pop
insl
cmpsw
test
lahf
adc
adc
loope
xchg
aad
inc
cmc
add
ficompl
and
cmc
ja
adc
mov
cmp
stos
cmp
fsubrs
jns
inc
repnz
aaa
cmp
pop
ja
adc
jnp
dec
push
xchg
mov
insb
out
inc
pop
lret
jp
lret
pusha
pcmpgtb
jns
enter
sub
shrl
pop
out
mov
xor
inc
cmp
leave
push
jecxz
jle
mov
mov
push
andb
mov
add
xor
xor
push
ret
mov
aam
and
dec
push
loop
xor
pop
dec
sbb
adc
out
cmp
xlat
loope
sub
mov
les
sbb
js
sub
nop
ds
subb
cs
jbe
push
mov
cld
call
test
mov
push
push
or
into
adc
xchg
add
jg,pn
arpl
jecxz
insl
xchg
stos
mov
sub
lea
outsl
mov
pop
cmp
rcr
xchg
movsl
push
mov
adc
lcall
lret
xor
and
lret
push
loope
lock
jle
mov
pusha
lock
pop
lcall
mov
test
adc
std
mov
jge
inc
xorl
cmpsb
pop
sahf
sbb
mov
xor
lods
out
jo
lods
sub
sub
sub
scas
jb
in
icebp
lret
push
push
sbb
enter
xor
das
cli
and
push
fdivp
cli
cli
cltd
adc
fiadds
mov
idivl
xor
xchg
cmp
mulb
lea
cwtl
cmc
stos
clc
bound
loopne
mov
xchg
mov
cld
pop
mov
xor
xchg
test
push
mov
push
mov
inc
es
lea
sub
and
inc
repz
pop
sub
pcmpeqw
mov
jns
push
das
and
ljmp
sbb
iret
mov
popa
pop
test
mov
cwtl
mov
mov
rclb
mov
dec
aad
push
jp
jns
add
arpl
imul
and
xor
sbb
pop
pop
and
fimull
dec
jge
and
ret
and
adc
mov
cwtl
cmpsl
testl
add
repnz
repnz
cmp
jecxz
cmp
leave
jns
pushf
mov
pop
and
lret
mov
cmpsl
mov
outsb
ficompl
pusha
mov
mov
jmp
or
mov
mov
mov
jno
out
cmp
jns
sub
pop
and
xchg
cwtl
insl
jecxz
lea
sbb
ja
dec
pop
and
adc
push
mov
out
push
stc
roll
jg
mov
mov
jmp
or
imul
push
in
in
ret
xchg
jmp
ficoml
add
jmp
mov
bnd
pop
mov
divl
inc
psubq
dec
mov
add
fs
push
pop
jle
pop
ret
sbb
aaa
xor
repz
pop
sbb
je
adc
scas
xor
pop
sub
mov
push
jae
outsb
out
test
mov
sbb
push
pop
shl
repz
sbb
lret
push
jg
icebp
clc
inc
lahf
push
fsubrl
cmp
insb
cs
rol
add
dec
imul
or
push
dec
and
pop
cs
test
repz
cmp
sahf
fimull
sti
xchg
jp
jle
fwait
je
jl
pop
adc
bound
lahf
iret
jle
push
xchg
push
or
cmpsl
in
ret
pop
movsl
cli
pop
outsl
and
rcl
jne
lret
fidivs
out
sub
push
out
mov
adc
test
xor
sub
lds
repnz
jmp
ja
jecxz
mov
xor
cld
sarl
xor
xchg
in
mov
out
loop
cmc
jmp
emms
in
jo
xor
pushf
in
sub
pop
push
mov
jne
xchg
inc
adc
adc
lret
sbb
ret
push
imul
jo
aaa
arpl
jle
sbb
repnz
push
pop
sub
je
sbb
xchg
cmpb
mov
pop
xchg
sbb
adc
adc
jecxz
lock
mov
and
jo
pop
dec
sbb
mov
jle
jg
xchg
negb
popf
inc
xlat
int3
in
pusha
cmp
sbb
sbb
pop
mov
mov
jecxz
push
xchg
icebp
push
test
mov
add
data16
fnstsw
or
xchg
pop
dec
cli
push
jmp
mov
adc
fistpl
lret
adc
mov
in
shl
mov
hlt
sub
dec
lds
pop
jns
addl
pop
test
xor
cmc
lcall
add
adc
or
cli
jg
ds
aas
jmp
cltd
xchg
mov
mov
sbb
pop
leave
mov
mov
lock
les
adc
icebp
fnstsw
test
xchg
pop
adc
xchg
lret
sbb
xchg
jge
loope
dec
test
ffreep
pushf
xor
aaa
cld
dec
cltd
out
sti
out
pushf
repz
jb
pop
jns
sub
mov
popa
out
nop
xchg
mov
dec
xor
sbb
inc
out
add
addr16
call
xlat
pop
cmpsb
mov
cmp
fcmovnbe
jmp
jbe
iret
in
or
call
jb
lret
sbb
or
sbb
mov
xchg
imul
aad
jmp
xchg
mov
insl
pop
loope
xchg
lds
lds
xor
push
mov
es
cld
and
aas
popa
push
in
xor
pop
ja
cmp
popa
gs
fisubrs
fucomi
xor
daa
das
cli
xor
out
xor
add
push
fucompp
pop
imul
pop
and
mov
mov
mov
cli
mov
cmp
push
scas
out
mov
jge
stc
fchs
and
mov
jbe
aaa
ds
movaps
inc
repnz
and
outsl
mov
xor
mov
rol
clc
mov
aad
mov
push
and
sub
sbb
cmp
sub
and
jb
jp
sbb
outsl
insb
xor
je
popa
testl
cmp
mov
bound
cli
or
jmp
test
jmp
fxch
out
rclb
dec
insl
iret
hlt
jne
inc
dec
mov
stos
jno
mov
lcall
fs
xchg
mov
mov
sarl
push
lret
mov
or
adc
gs
ss
push
jbe
test
mov
ja
pop
jo
sbb
fidivl
rolb
push
jl
fmul
les
jns
pop
cmp
iret
icebp
sub
loope
std
fsubl
mov
in
or
call
jg
inc
xchg
aaa
pop
rcrl
cmp
push
mov
sti
mov
xchg
inc
xchg
add
push
xor
xlat
je
dec
jo
jmp
stos
pop
jae
mov
subl
je
icebp
push
in
outsl
jg
mov
stc
in
or
sti
outsl
xchg
lahf
hlt
pop
mov
and
pop
mov
adc
jecxz
mov
lods
add
fstpl
cmp
ljmp
loopne
inc
data16
adc
leave
mov
in
test
fimuls
mov
ja
jne,pn
mov
mov
aas
ds
dec
or
jne
in
mov
jecxz
sbbl
iret
and
dec
fistps
and
std
jno
stos
cmp
ret
add
mov
fiaddl
pop
sub
das
push
jecxz
xchg
jb
xchg
and
push
xchg
cmpsb
jmp
in
mov
and
sbb
fcoms
mov
sti
clc
adc
dec
add
into
cmc
das
push
lret
push
test
xor
aad
adc
ret
sarb
cmp
adc
mov
xor
jecxz
jns
mov
vmovupd
sub
fnstsw
mov
jl
cltd
and
pushf
push
cmpsb
insl
sti
testl
jns
pop
cmc
ja
out
movsb
stos
lcall
fimull
popa
fwait
or
mov
pop
inc
mov
ds
mov
test
cwtl
mov
shlb
pushf
xchg
adc
nop
cltd
inc
inc
add
movsl
fnstcw
aaa
jle
xor
je
sbb
subl
pop
adc
sub
orb
inc
jge
sub
pop
push
jns
and
out
and
cs
cwtl
xlat
lods
mov
ror
and
lret
dec
mov
dec
in
sbb
or
fstpl
push
inc
gs
push
cltd
jns
iret
sbb
dec
js
test
imull
mov
xchg
adc
not
adc
pop
mov
repnz
pop
loopne
sahf
xchg
dec
dec
lcall
xchg
dec
outsb
dec
sbb
js
jg
movsb
imul
shrl
lret
adc
out
xchg
add
into
test
jle
sbb
popf
ss
pmuludq
jno
push
nop
movl
cmpsl
cmc
lahf
mov
leave
test
sub
xlat
lods
xlat
in
imul
decb
xor
pop
inc
mov
push
popf
in
clc
sbb
inc
push
push
pop
hlt
sti
or
out
into
pop
daa
ret
fbld
fcmovnbe
jg
inc
test
pop
pop
push
xor
aaa
ficomps
adcl
das
ss
push
repz
out
ficomps
cmpsl
ret
push
add
adc
ja
xor
lret
call
or
sbb
or
rcrl
sub
cltd
outsl
cmp
adc
cmp
imul
cli
stos
or
sbb
xor
lods
les
cmpsb
fsubrl
dec
jbe
jl
fucomi
lock
inc
mov
add
fstps
push
mov
fdecstp
xor
add
jl
dec
fsubrs
add
cli
dec
push
xchg
jne
data16
sti
ljmp
andb
xchg
fbld
cltd
insl
xorb
and
sbb
inc
jle
sbb
dec
inc
and
test
pop
out
daa
jne
cmpsl
push
cmc
fwait
jns
imul
add
inc
cmp
out
lods
or
cmc
leave
jmp
dec
pop
lods
or
mov
push
push
insb
aam
mov
fldl
nop
sarb
outsl
mul
repnz
shr
jecxz
push
and
adc
pop
and
add
out
mov
add
jb
mov
xchg
or
xchg
dec
fnstenv
dec
pop
xchg
stos
flds
fwait
loopne
sbb
mov
mov
xchg
dec
scas
pop
inc
test
lahf
mov
ret
add
cmpsl
out
and
xchg
fisubrs
and
sbb
pop
stos
das
in
out
not
scas
pop
fwait
sub
cli
sbb
xchg
mov
xchg
sbb
xor
adc
push
imul
int3
rolb
jge
inc
mov
mov
in
xchg
rcrl
xlat
add
pop
lods
mov
jecxz
daa
or
rcll
fnstsw
decb
push
es
std
sbb
adc
inc
mov
pop
insl
and
orb
fdivrs
and
lea
test
add
int3
jle
jbe
mov
das
out
and
and
ljmp
cmp
cmp
push
test
sahf
cmc
scas
test
imul
pop
add
dec
mov
xorl
jmp
mov
popf
loop
mov
scas
pop
mov
insb
cmpsl
push
dec
out
ss
and
lock
movsb
inc
push
pop
mov
or
cmp
pusha
int3
sub
lock
rol
cltd
inc
mov
xor
mov
in
jle
rcrb
xchg
test
mov
insl
pop
imul
mov
dec
leave
jb
xlat
and
dec
xchg
dec
movsb
dec
addl
push
test
jnp
inc
bound
cmpsb
rcrb
lahf
sbbl
fnstenv
push
stos
and
je
push
or
cs
lahf
out
adc
xchg
sbb
pop
outsb
add
je
aam
and
stos
bound
mov
outsb
lahf
fsubs
adc
imul
mov
div
mov
or
dec
jecxz
into
xlat
movsb
imul
mov
in
sbb
cmpsl
and
test
fldt
pop
lods
mov
xlat
jne
fpatan
inc
ffree
push
stc
sbbl
pop
into
and
lcall
xor
mov
add
push
ret
sub
stos
xchg
add
push
loope
adc
cmp
mov
mov
movsb
mov
dec
cmpsb
test
adc
lret
stc
loope
sub
ret
clc
je
push
jle
dec
sbb
iret
lea
arpl
sbb
mov
aaa
mov
out
cmc
nop
xchg
aaa
push
push
jge
test
mov
out
test
cwtl
and
inc
push
addr16
sub
jecxz
xchg
sbb
mov
mov
leave
add
xchg
hlt
fwait
xor
and
outsl
pusha
mov
add
jns
inc
in
jg
pop
ss
mov
add
int3
jl
out
faddl
cltd
popf
and
cld
or
cmp
in
or
inc
adc
and
push
jo
gs
loope
xchg
pop
dec
je,pn
lret
push
xchg
push
sub
push
mov
pop
jecxz
aaa
ds
call
mov
imul
cld
mov
ret
sub
and
loop
xchg
fnstenv
mov
cmp
ss
popf
popf
push
jecxz
sbb
idivl
jmp
xchg
mov
bound
xchg
jmp
mov
cmc
out
hlt
push
push
and
cwtl
loopne
je
pop
pop
fsub
xor
stc
mov
pusha
adc
or
push
mov
adc
cmp
test
adc
cwtl
fwait
mov
cmp
les
or
lds
and
xorb
andb
cmp
decl
inc
push
std
ss
xlat
rolb
sbb
inc
xchg
sub
sub
inc
arpl
insb
cmp
mov
and
ret
mov
dec
pop
les
xor
mov
enter
cmp
sti
fisttpll
jge
data16
sub
bound
jp
imul
lock
cmc
out
inc
lods
sub
fstps
mov
lods
repnz
cmp
test
xor
lods
testb
shll
out
jge
stos
push
in
push
sub
fnstcw
pop
cmpsl
jmp
iret
add
pushf
outsb
dec
pop
in
mov
xor
aam
and
test
mov
jns
cmp
cli
data16
adc
and
fneni(8087
movsb
in
and
fmuls
jb
ret
jno
mov
add
fisubl
les
cmp
push
aam
mov
int
andl
faddl
xchg
jg
or
xchg
xor
and
mov
dec
push
movsb
orl
ja
inc
lods
mov
mov
push
pop
fisubrs
push
mov
mov
mov
xor
mov
jmp
ret
test
mov
and
loop
dec
cmpb
sbbl
jbe
push
movb
mov
fnsave
inc
rclb
mov
mov
aas
pop
mov
sbb
jno
xor
mov
fldpi
imul
ret
or
dec
xchg
scas
pop
mov
fs
fists
fmuls
aas
mov
outsl
nop
stos
ds
cmp
mov
xchg
adc
pop
pop
adc
and
xor
or
cmpsb
jne
mov
push
sbb
fstpl
add
mov
and
shl
dec
adc
repz
add
decl
rcr
pop
sub
or
imul
xor
fadd
dec
outsb
adcl
into
inc
lahf
pop
xlat
ret
lahf
adc
mov
pop
subl
dec
pushf
mov
loop
adc
daa
sbbl
mov
out
push
fildll
or
sbb
dec
inc
inc
push
and
jne
cmp
movsl
sub
orb
mov
push
test
fdivr
loop
xchg
mov
sub
out
in
pop
lahf
dec
cmp
out
rcrl
in
es
mov
mov
inc
and
outsl
jo
push
push
mov
aam
pushf
out
jno
std
out
js
mov
adc
es
out
add
or
es
scas
jmp
addl
ljmp
jl
adc
xor
xchg
push
xor
sarb
test
lods
lods
xor
push
jne
add
mov
mov
int
cwtl
xchg
cli
stc
cmp
adc
in
mov
or
cltd
mov
scas
aam
xchg
icebp
xchg
jle
ret
sbb
imul
leave
popa
pop
jl
rcll
imul
hlt
xor
adc
and
out
and
ds
inc
cld
xchg
pop
jno
sti
inc
jg
dec
xchg
jne
or
hlt
les
test
pop
ror
pushf
cmc
or
shll
sbb
fildl
mov
mov
xor
aam
mov
mov
inc
jne
imul
jb
jl
and
add
adc
stos
insl
inc
fisttpll
lea
xchg
jns
jns
aas
dec
sub
xlat
lcall
mov
dec
cltd
mov
popa
je
fists
int
dec
adc
pop
pop
pop
inc
sbb
rep
dec
or
pop
fdivs
arpl
pop
jbe
ficompl
sbb
mov
test
inc
mov
rclb
jmp
in
cmp
data16
in
cld
cltd
divb
movl
movsb
mov
or
mov
rclb
call
mov
iret
sbbb
dec
out
enter
out
adc
adc
mov
gs
fs
cmp
cmp
push
or
stos
in
sub
mov
repnz
mov
das
jl
repnz
mov
push
xor
pop
push
inc
cmpsb
inc
push
ret
pop
xor
dec
decl
shrl
adc
dec
inc
mov
push
sbb
jno
xchg
dec
push
add
imul
jne
fstpl
mov
xchg
xchg
push
xchg
push
imul
dec
xchg
stc
cmc
lods
mov
push
cmp
jle
xor
insb
and
test
cld
mov
imul
mov
push
pop
jo
sbb
stc
jno
out
or
test
imulb
jae
jg
and
int
dec
push
add
xlat
xor
faddp
test
push
cmp
adc
cs
mov
les
lret
insl
addr16
xchg
mov
fs
pop
pop
mul
lds
xlat
pop
adc
cmp
adc
icebp
call
adcl
sarb
pop
jle
adc
pop
fdivrs
aam
filds
pop
xor
jle
xor
xor
push
jno
mov
daa
popf
stos
stos
mov
loop
aad
jle
mov
xlat
js
rcll
xchg
adc
mov
movsl
in
sbb
fisubrs
inc
insl
adc
sarb
out
rcl
mov
sbb
leave
incb
sub
fwait
xlat
mov
xchg
lods
push
js
adc
inc
add
mov
mov
inc
dec
xor
inc
inc
mov
mov
cmp
push
dec
adc
icebp
push
loope
sbb
jmp
add
add
imul
inc
lock
cmp
hlt
jmp
sti
fidivrs
push
mov
inc
out
jno
pop
and
pushf
hlt
loopne
nop
jae
mov
cwtl
xor
push
xor
frstor
imul
cltd
inc
int3
lods
and
lock
add
adc
xchg
cld
adc
movsl
pusha
push
js
mov
xor
icebp
mov
mov
push
pop
sti
loope
mov
adcb
bound
ss
push
sbb
fildll
icebp
repnz
out
popa
ret
and
mov
mov
mov
jp
outsl
xchg
xchg
sub
inc
push
inc
out
pop
mov
lret
pop
or
jne
pop
adc
aam
loopne
lods
js
std
in
jle
pop
mov
jl
dec
in
push
xchg
daa
loopne
adc
xor
fcom
repnz
jge
push
idivb
enter
shl
push
iret
out
inc
hlt
movsl
xor
or
ja
adc
mov
push
dec
lock
pop
mov
in
pop
pop
pop
fwait
sar
inc
cs
arpl
pop
iret
mov
sbbl
push
imul
in
push
fdivp
mov
fcomi
sahf
test
fcoms
scas
sub
sahf
push
inc
call
xor
xchg
push
cs
or
add
insl
pop
jae
sub
pop
lret
int
shrl
add
cmpsl
inc
outsb
xchg
push
clc
jle
add
sarl
ret
lods
inc
dec
movsb
iret
mov
sbb
mov
aas
xchg
adc
jg
or
adc
xchg
mov
pop
hlt
or
sbb
mov
push
push
push
xchg
pop
pop
inc
mov
sub
cli
ds
ffree
or
ret
lds
insb
xor
lcall
scas
add
mov
mov
ljmp
cmpsb
cmp
call
repz
insl
mov
xor
fcom
ret
mov
subb
mov
out
xor
or
icebp
sysenter
in
stos
and
sbbb
sbb
jecxz
mov
inc
aad
jle
out
jnp
lock
int3
push
fldcw
ficomps
test
aad
adc
sub
lods
mov
movsb
cmp
pop
pop
mov
add
or
mov
mov
nop
out
in
call
mov
stos
loopne
jecxz
pop
push
cmpsb
mov
adc
movsl
lds
or
xchg
cmp
sub
loopne
mov
xor
mov
pop
mov
sub
inc
inc
lods
add
fcomps
pop
add
xchg
adc
cmp
sub
bound
jb
imul
bound
pop
pop
add
das
mov
inc
jno
imul
aam
test
scas
mov
push
add
jbe
shl
mov
out
jae
repnz
push
mov
je
call
cmpsb
lock
jecxz
xchg
add
mov
push
nop
push
xor
pop
or
loope
adc
adc
xchg
sub
push
rcrl
rclb
jg
or
fs
pop
or
dec
xor
and
xor
sub
xchg
ret
xchg
xchg
inc
jle
lahf
mov
inc
subl
lcall
mov
xchg
ds
mov
sbb
fld
popa
or
lods
jb
xor
rcll
testb
stos
movsl
imul
test
mov
inc
into
movb
dec
xchg
pop
mov
lret
dec
adc
add
mov
mov
movsl
insb
pop
dec
das
sbb
jmp
cmpsb
pop
mov
cld
enter
pusha
xor
dec
xlat
lds
mov
pop
outsb
sub
faddp
leave
fdivl
and
lret
imul
roll
dec
push
rcll
inc
in
pop
xor
idiv
rcll
push
pushf
push
ret
leave
hlt
push
jge
jle
jns
mov
mov
sub
cmp
decb
cmp
pop
ja
cmp
xchg
movsb
mov
aas
insl
push
push
sbb
jge
test
jge
dec
dec
jle
in
fs
dec
iret
out
push
fsubs
dec
inc
rol
push
shrb
fs
gs
push
dec
negb
sahf
cmpsb
or
sbb
xlat
mov
mov
stos
outsl
loopne
xor
add
or
mov
lds
loopne
or
loope
daa
repz
push
daa
dec
mov
xchg
cmp
fcomps
arpl
pop
out
fstpt
lret
xlat
lea
fcoms
cli
aad
test
fsub
icebp
xor
and
or
push
dec
adc
in
loope
mov
nop
outsl
push
ret
insl
jae
andl
pushl
dec
xor
stc
jg
mov
adc
aam
imul
sbb
push
xchg
bound
dec
and
or
jo
inc
es
xorl
fisubl
jno
mov
push
dec
lcall
xchg
addl
std
dec
xchg
ss
dec
push
or
in
and
pop
xor
inc
jmp
clc
mov
sbb
push
or
stos
aam
dec
xor
in
xchg
filds
shlb
mov
xor
push
mov
jne
mov
loopne
mov
test
dec
rcrb
push
inc
gs
or
sub
outsb
loope
lret
addr16
in
xlat
jecxz
push
cli
mov
xor
pop
add
dec
pop
push
cmp
cltd
repnz
inc
inc
inc
fbld
insb
jge
dec
xor
loope
ret
out
xor
test
cwtl
inc
xor
push
cmpsl
andl
inc
push
loop
int3
stos
mov
xchg
in
inc
mov
push
sub
push
xlat
stos
mov
hlt
xchg
movsl
xor
jb
je
mov
out
cmp
imul
mov
inc
sbb
aam
jle
xchg
loop
lahf
shll
xor
xchg
mov
push
inc
cld
sbb
ss
or
jns
fsubrl
pop
dec
inc
jbe
push
dec
mov
jp
or
push
sbb
faddl
sbb
popf
pop
jge
push
jle
fnstcw
fimuls
sub
xchg
std
push
loope
and
pop
mov
mov
data16
lock
push
sub
dec
fwait
aad
ja
xchg
pop
push
cmp
cmp
push
out
xchg
mov
lahf
mov
push
dec
lds
test
or
mov
push
loopne
fistpl
pop
sub
stc
or
mov
out
int
arpl
aas
push
mov
and
fs
inc
cmpsl
repnz
imul
add
inc
sub
add
hlt
cwtl
add
clc
and
shrl
push
dec
push
inc
fwait
mov
ss
fadd
call
fistl
hlt
pop
fmull
dec
mov
fs
mov
addl
rorl
mov
sub
mov
dec
mov
jle
and
pop
iret
cmp
jns
pop
in
ficomps
xchg
ja
push
andl
cmp
jmpw
jecxz
jne
dec
hlt
test
in
dec
leave
cld
out
test
mov
adc
jp
sub
sar
cmpsl
je
mov
pop
sbb
in
dec
mov
dec
inc
cmp
sbb
sbb
dec
and
bound
dec
rolb
xchg
xchg
out
inc
push
clts
push
mov
mov
cmpsb
xchg
add
in
cltd
push
call
pop
rol
xchg
in
inc
rclb
and
cmp
scas
daa
push
add
jge
cmc
add
push
lock
aam
aam
push
outsb
stos
pmovmskb
movsb
mov
cmp
adc
push
mov
add
mov
mov
push
mov
mov
inc
fisubrl
mov
lahf
pop
movsl
fidivrl
and
pop
loope
fnstcw
nop
xchg
fldenv
movsl
cmp
test
mov
jp
insb
fdivp
gs
rcll
and
mov
inc
xor
add
fwait
scas
scas
idivl
fwait
push
jo
fpatan
gs
cmp
bound
mov
outsb
jl
inc
xchg
sub
clc
out
aaa
cmp
inc
cld
fisubrl
outsb
pop
dec
loope
and
push
sti
mov
cmp
pop
dec
insl
add
add
lods
sub
pop
jo
adc
outsb
xchg
je
repz
cltd
cmp
mov
jl
mov
enter
or
xchg
mov
fstpl
mov
fucomi
sub
fsubrp
mov
and
fidivl
mov
bound
movsl
fildll
imul
lret
clc
xchg
fildll
sub
movsb
test
add
cltd
scas
imul
jg
in
out
imul
lret
ljmp
jmp
push
leave
and
and
insl
arpl
push
xor
jmp
fadd
pop
in
ljmp
mov
imul
cmp
xchg
mov
or
out
adc
cmp
push
scas
cmp
mov
sbb
int
mov
jbe
xor
test
push
cmp
push
pop
mov
lahf
mov
repz
aam
dec
push
push
orb
fs
and
adc
or
adcb
or
es
jmp
jmp
data16
daa
dec
enter
dec
or
popa
dec
pop
in
cli
xchg
sbb
out
idivl
in
push
hlt
adcl
mov
addb
or
repnz
cmp
stc
xor
pop
push
xor
push
enter
lret
popa
in
sub
jle
xor
bound
jne
pop
test
pop
loope
push
jmp
stos
in
pop
int3
loope
or
mov
jb
push
daa
xor
or
test
adc
jl
push
pop
ficoml
mov
and
lcall
xor
sub
std
xchg
xor
inc
jbe
xchg
inc
mov
js
pop
and
cld
xor
pop
rorb
mov
push
sub
aaa
xchg
jne
and
push
movsl
adc
sub
lret
adc
mov
int
lods
addr16
dec
fisttpll
imul
push
sub
sub
xlat
cmp
movsb
jl
ror
xchg
dec
rcrl
and
ret
sti
push
mov
mov
pop
mov
imulb
xlat
inc
pop
mov
or
sbb
popa
in
enter
push
mov
sti
push
mov
adc
mov
mov
test
sub
loopne
cmc
or
cwtl
mov
dec
imul
mov
test
lahf
sub
lods
pushf
pop
int3
sub
pop
pop
scas
sbb
call
xorl
bound
jmp
adc
mov
xchg
push
dec
loopne
or
sub
pop
fcompl
scas
mov
gs
scas
push
adc
mov
pop
inc
push
sub
stos
inc
test
test
xchg
pop
movsb
inc
cltd
pop
inc
inc
imul
fmuls
sub
outsb
aad
inc
iret
stos
cmp
dec
pop
aas
lds
repnz
rorb
lods
pushf
enter
and
xor
fistpll
pop
gs
dec
cli
out
pop
int
lret
rclb
int3
subl
sub
xor
ret
mull
filds
iret
lret
test
xor
jbe
mov
jge
int
out
stc
ja
pop
pop
inc
inc
and
jo
sub
mov
mov
pushf
arpl
inc
inc
jne
pop
fucompp
shll
jge
pop
add
cmpsl
shrb
push
daa
addl
aam
pop
movsl
jecxz
mov
out
mov
sub
adc
and
dec
mov
inc
cwtl
loope
push
subl
stos
outsb
cmp
outsl
out
and
clc
stc
and
aas
inc
gs
and
fwait
rclb
mov
enter
nop
movb
movsl
mov
ja
pop
popa
out
push
and
subl
imul
xor
mov
icebp
push
sub
push
add
test
jg
mov
je
addr16
in
xchg
je
xchg
bound
scas
in
lret
jmp
loop
dec
les
or
dec
fildll
xor
adc
mov
into
gs
fisubrl
loope
inc
into
xor
mov
jnp
pop
dec
cmp
lock
inc
lcall
mov
test
xchg
sti
inc
sbb
mov
out
out
add
cs
push
add
stc
dec
adc
lods
push
mov
and
add
sub
test
popf
mov
push
jns
std
ds
int3
std
pop
push
fstps
jae
cwtl
out
jae
xor
lret
testb
sub
push
roll
std
xchg
stos
xchg
loope
leave
mov
fcomp
inc
fcompl
sahf
adc
enter
notb
mov
jl
cmpl
xor
lods
cmp
push
push
jno
adc
leave
inc
inc
and
sbb
scas
sbb
jbe
scas
daa
in
or
rolb
cwtl
sbb
mov
cli
ret
sbb
mov
bound
jo
lahf
ss
adc
sbb
mov
flds
and
cmp
inc
fsubl
jns
push
xor
lods
mov
pop
cltd
jmp
call
aaa
mov
add
inc
movsb
stos
push
cmp
rep
fisubrs
sti
imul
arpl
sbb
and
in
sbb
rolb
pushf
fstpl
in
push
lret
shl
test
push
aad
loop
adc
arpl
gs
cltd
push
push
xchg
lds
push
sbb
dec
add
outsb
and
js
push
push
lock
push
out
inc
adc
outsb
xchg
xchg
sbbb
or
je
xlat
mov
dec
out
xchg
fdivrs
leave
gs
adc
push
sub
imul
insb
orb
add
lcall
lds
xchg
push
mov
xchg
inc
lret
lods
pushf
lret
inc
sub
cmpl
arpl
xchg
jbe
or
out
iret
xchg
mov
sahf
sbb
repz
bound
int3
mov
push
popa
pop
subl
xor
push
push
jge
sbb
lock
cld
mov
in
and
sarb
pop
addb
xor
push
push
in
iret
jge
nop
xchg
pushl
mov
sub
inc
arpl
xchg
lahf
inc
push
in
popf
adc
test
jbe
jo
and
ljmp
arpl
leave
push
sti
xor
and
lret
stc
into
push
push
sub
jae
fwait
std
int
bound
xor
shlb
cmp
xchg
push
xor
sti
pop
lods
out
push
scas
dec
ja
movb
lret
cmp
inc
nop
xor
rorb
cmp
xchg
adc
outsb
mov
sbb
lcall
push
dec
data16
jns
add
jae
cmp
cmp
into
inc
push
add
sar
dec
call
imull
cmp
sbb
lods
sbb
adc
cltd
shll
push
dec
or
mov
jge
incb
xchg
cmp
or
and
movsl
inc
sbb
or
xor
into
inc
addr16
mov
frstor
test
stos
test
inc
testl
xchg
lock
repz
lods
scas
add
inc
adc
dec
xchg
jl
pop
cmpsl
es
mov
dec
cmp
dec
fsub
cs
pop
rcll
push
mov
mov
inc
rolb
sbb
pusha
pop
mov
sub
iret
cs
sbb
mov
inc
mov
sarl
arpl
mov
lds
std
inc
fsub
scas
mov
ds
dec
mov
cmp
mov
loope
and
cmp
int
sbb
add
bound
lods
jno
ficomps
addl
ret
out
leave
fbstp
push
sub
or
inc
lret
add
cmc
mov
cmp
push
mov
inc
icebp
dec
and
cmp
and
mov
mov
loopne
insb
das
popf
jbe
xlat
jno
in
pusha
aas
out
stos
jmp
or
lret
test
addr16
sbb
mov
push
lods
pop
rorb
je
arpl
jbe
cmpsl
pusha
jnp
cmp
inc
mov
and
popa
fwait
dec
fidivrs
mov
sub
in
arpl
movsl
aam
push
xchg
sub
cmp
mov
insl
shl
orl
adc
lcall
mov
add
inc
mov
lcallw
das
fprem1
jnp
mov
fst
pop
push
ret
cmpsb
hlt
pop
out
notb
fs
xchg
cld
into
mov
mov
das
mov
add
popl
jge
xor
cmpsl
out
aam
dec
push
bound
ja
in
fs
add
jle
xchg
popf
fisubrs
push
dec
pop
pop
xchg
adc
not
lret
jg
shufps
cs
add
jnp
inc
jp
push
mov
push
cmp
imul
mov
xor
scas
js
ljmp
add
push
xchg
push
fldcw
jmp
lahf
dec
lods
push
lods
int
stos
and
cmp
push
aad
test
add
add
lcall
out
push
out
fiadds
sahf
add
adc
icebp
adc
lods
call
dec
int3
lahf
je
pop
hlt
sub
xchg
imul
mov
lahf
insl
or
or
xor
fldt
cmp
cltd
lcall
dec
fbstp
fcompl
mov
push
imulb
arpl
fcoml
scas
and
adc
fisubs
push
cwtl
sbbb
test
adc
fimuls
outsb
sub
push
jge
fsin
jp
mov
pop
roll
sub
jb
addl
xchg
mov
int3
and
adc
xchg
add
das
ja
mov
mov
mov
aas
dec
fmul
int3
sbb
loop
js
loope
shrb
push
mov
push
jo
push
inc
iret
outsb
mov
clc
cmc
sub
pop
jp
and
loop
jp
jno
push
jnp
aaa
movsl
xchg
fs
xor
mov
dec
ds
mov
push
call
lea
inc
jp
scas
sbb
decb
sub
mov
cmp
jne
loop
out
xchg
jmp
leave
fistps
arpl
dec
ficomps
jg
cmp
inc
loope
aas
xchg
popf
aaa
inc
or
lret
rorb
ret
test
fildll
int3
iret
inc
cli
jb
push
sbb
add
mov
mov
nop
push
dec
outsb
dec
sbb
jge
mov
inc
ds
adc
insl
cmpl
push
mov
decb
inc
divl
push
sbb
shl
push
jp
leave
cwtl
test
js
push
outsb
mov
mov
vpextrw
lds
cmp
in
sub
popa
mov
add
sub
adc
fimuls
stc
fnsave
retw
push
hlt
sbb
jnp
sbb
mov
lea
lods
mov
jmp
mov
sbb
mov
cmp
xor
mov
dec
aam
push
or
pop
jg
jo
lds
xchg
xchg
mov
or
dec
xchg
add
sbb
cmp
jl
rcrl
insb
fldcw
mov
pop
add
mov
mov
push
dec
adc
and
imul
pop
pop
fstp
decl
xlat
aam
aad
shr
add
lahf
push
fidivl
int
dec
xchg
daa
push
push
arpl
xor
pop
mov
into
lea
dec
clc
and
jp
add
push
mov
and
incl
lea
ficomps
xchg
loop
xlat
loope
aas
jl
subl
test
fwait
ds
cmp
frstor
in
or
mov
adc
cmp
mulb
jge
mov
cmp
sahf
cmp
in
das
adc
das
mov
pusha
cmp
arpl
imul
or
scas
popa
mov
outsl
and
jp
push
jae
add
loopne
xchg
adc
testb
xchg
sbb
cltd
jecxz
ja
xor
or
sbb
and
sarl
fs
push
testl
cmp
dec
retw
stos
inc
bound
jb
and
push
mov
sub
xchg
movsb
in
sbb
dec
lock
sub
test
cmpsl
mov
inc
pushf
js
push
sbb
lods
negb
jmp
or
daa
fisubl
mov
pop
inc
movb
push
dec
shll
fisubs
cwtl
in
cmp
mov
lcall
and
frstor
jecxz
xor
aam
pushf
mov
mov
mov
xchg
pusha
xorb
aam
enter
pop
pusha
enter
mov
out
cltd
int3
xchg
ret
loop
mov
mov
xlat
dec
test
scas
repnz
test
inc
cmp
arpl
pop
mov
add
decb
pop
ljmp
add
mov
lods
sub
int3
test
and
pop
or
icebp
sub
aad
in
inc
push
scas
mov
and
xor
addl
push
push
js
inc
nop
out
mov
das
add
cld
stos
jne
add
ret
clc
dec
cmp
and
push
add
pop
shrb
inc
aaa
sbb
test
les
xor
or
mov
mov
push
dec
in
inc
inc
js
ret
push
movsb
ret
xor
pop
sbb
psubusw
hlt
shll
in
cwtl
adc
andb
push
mov
shll
pop
inc
insb
sbb
push
dec
pop
test
jmp
cmp
xchg
sbb
jl
into
rolb
and
mov
pushf
dec
gs
std
add
loope
xchg
and
pop
popf
hlt
sub
push
mov
outsb
incb
out
stc
and
mov
cmp
jmp
cmpsl
push
sahf
add
jnp
jb
test
pop
mov
enter
add
out
ret
xor
in
and
je
cmpsl
enter
inc
fnsave
cli
sbb
xchg
ret
loopne
bound
mov
das
fbld
pop
xor
mov
pop
push
push
lea
sbb
inc
les
mov
out
add
push
push
push
mov
push
out
popf
aam
jg
nop
adcb
mov
into
ds
jg
xchg
outsl
inc
inc
mov
inc
jecxz
popa
aad
mov
cwtl
lcall
pop
lahf
es
adc
add
ret
lods
sub
lds
adc
mov
pop
sub
inc
jbe
sbb
sbb
hlt
lods
add
inc
ljmp
adc
or
mov
jecxz
cld
jae
dec
je
xlat
push
mov
jbe
inc
mov
loopne
pop
mov
push
adc
lss
and
test
and
push
push
push
xor
cmp
shl
cmpsl
inc
pusha
call
mov
jmp
fcomps
or
adc
xlat
mov
lock
inc
addr16
jecxz
lock
xchg
and
movsl
and
pop
pop
adc
int3
cmp
mov
dec
addr16
into
xlat
fwait
in
hlt
aaa
loope
aam
mov
shr
out
push
inc
and
jae
and
jae
push
xor
sbb
adc
xchg
add
cmp
jb
cmc
inc
rcrb
pop
shr
inc
loopne
sub
and
mov
push
not
js
outsb
bound
clc
jno
divl
leave
adc
or
std
scas
or
cmp
insb
arpl
jmp
and
mov
jno
in
mov
cmp
cli
jb
sub
decl
mov
push
bnd
jmp
pop
dec
rcr
adc
hlt
cwtl
mov
xchg
push
sub
mov
shrb
jmp
orl
cs
out
lcall
rcll
mov
ret
fcomp
outsl
filds
push
sub
imul
outsb
cltd
add
xor
pop
pop
lods
in
aad
push
test
icebp
adc
jle
push
jmp
adc
insl
movsb
mov
sbb
or
mov
hlt
or
cld
call
icebp
out
pop
push
push
lcall
pop
pop
mov
insl
inc
inc
movsl
or
cmp
stc
and
andb
mov
in
push
lods
fwait
xor
mov
out
cmpsl
out
sub
stos
pop
sub
dec
into
add
cmpsl
xchg
sahf
sbb
or
fs
or
mov
jb
push
xchg
sub
pop
inc
cmp
pop
in
push
sbb
xor
jg
icebp
jbe
rorl
daa
xchg
xor
add
cs
jmp
fcoml
inc
jnp
decb
or
jbe
xor
sub
ret
jecxz
adc
into
or
cmp
in
inc
xchg
aam
les
xlat
clts
insb
mov
jns
xor
mov
mov
and
outsb
ret
repnz
sub
jl
mov
dec
movsl
orb
cmp
add
and
jmp
roll
scas
mov
sub
jmp
lods
jo
pop
stos
sbb
aas
out
sub
jne
in
in
and
and
pop
daa
cmp
pop
outsl
hlt
adc
xor
fstp
fcompl
popa
fistpl
outsb
jmp
jmp
xor
push
mov
inc
jp
fs
or
test
imul
rcrb
adc
jnp
adc
call
and
stos
adc
mov
jle
enter
sar
pushf
cmp
scas
daa
cli
pop
das
faddp
out
jb
imul
ds
fistps
ds
add
push
stc
cld
xchg
sti
ret
fistl
jne
ret
call
dec
mov
lock
add
or
das
cmc
cltd
push
nop
pop
dec
popf
mov
in
jbe
or
je
int3
arpl
cmp
daa
popa
or
pop
and
stos
push
sbb
mov
insb
mov
aam
mov
fs
fists
jge
dec
xlat
fimuls
out
mov
xchg
popf
ljmp
fdivr
sbb
addb
dec
jnp
loopne
int3
pusha
push
pop
sbb
sti
addr16
add
mov
fs
insl
xchg
lods
sarb
adc
inc
nop
aam
cmc
div
hlt
sbb
cmp
cli
jo
lods
or
cmp
aad
clc
jo
mov
or
dec
cld
test
push
xlat
arpl
dec
and
lahf
sahf
jmp
or
mov
shll
push
jbe
adc
inc
and
loop
pop
add
ljmp
push
int
orl
les
adc
aad
aas
mov
test
push
test
andb
xor
push
mov
or
pop
mov
sub
sbb
mov
or
sahf
out
fldl
adc
nop
add
into
ss
xorl
aaa
fbstp
int3
test
dec
mov
cmpsl
clc
mov
mov
push
nop
lea
shrl
xor
inc
rolb
inc
jmp
test
lods
adcb
sbb
call
sub
std
xchg
bound
xor
push
vprotq
aas
mov
add
fldpi
adc
outsb
fisttpl
pop
sbb
in
hlt
repz
mov
adc
mov
shrl
mov
scas
dec
popa
jae
sahf
lcall
xor
xchg
mov
mov
inc
jns
fisttps
inc
arpl
clc
mov
sub
jns
xchg
jno
jp
sub
xchg
dec
and
jnp
mov
pop
test
out
ja
out
mov
imul
out
dec
cmpb
fstps
add
jno
jmp
ds
sub
xor
repz
ret
sbb
cmp
js
push
jle
orl
jnp
adc
mov
rcl
cmpb
jge
jno
leave
inc
mov
push
inc
add
rorl
ret
jp
dec
ja
pop
sub
lret
and
cmp
xor
pop
and
rolb
popa
pop
iret
mov
sub
mov
mov
icebp
inc
jnp
mov
stc
cwtl
xor
hlt
ss
es
loopne
ret
popf
decl
jp
rcrb
push
mov
in
mov
push
and
ss
xchg
leave
stos
dec
loop
sti
ja
push
mov
cmp
push
movsl
out
xor
mov
xchg
jecxz
cs
push
dec
mov
data16
insb
push
cmpsl
mov
jns
dec
cli
data16
rolb
scas
and
adc
push
xor
adc
mov
jbe
push
repz
or
dec
pop
mov
cmp
or
push
dec
hlt
lret
jle
push
pop
mov
int
mov
iret
inc
xchg
bound
repz
mov
movsl
jge
xor
in
je
insl
dec
dec
and
adc
loop
sbb
in
shl
orl
stos
outsb
insb
outsb
ljmp
or
push
aam
inc
sub
ja
pop
arpl
mov
dec
pop
jg
inc
or
imul
dec
outsb
xor
pop
lret
frstor
pop
jp
xor
jns
jo
mov
out
inc
dec
into
push
loopne
adc
xlat
into
rol
aad
pop
stc
sar
icebp
and
mov
shrl
push
dec
xchg
jmp
push
pop
rclb
movsb
insl
repnz
pop
jno
decb
icebp
shrb
adc
dec
sbb
hlt
jbe
es
and
jl
ret
xchg
out
or
cmp
add
dec
sub
sub
push
lret
shlb
or
out
and
shll
push
mov
je
inc
loopne
daa
push
sbb
jne
ds
cmc
pop
inc
xor
jae
je
lea
into
bound
add
sub
xor
sbb
shll
pop
inc
adc
sbb
ja
insb
push
mov
push
mov
pop
sbb
mov
std
inc
xchg
aas
mov
and
cwtl
add
mov
xor
fstpt
inc
inc
nop
subb
stc
out
stos
cmp
push
enter
sub
dec
pop
inc
das
lds
adc
xorb
les
mov
cltd
lret
xchg
test
inc
in
inc
xor
xchg
mov
sbb
inc
cmp
xchg
xchg
push
xchg
and
aam
aam
push
lcall
add
lods
xchg
sbb
gs
dec
lret
xor
imul
insl
dec
sub
sti
lcall
fsubs
lcall
andl
push
fldt
pushf
or
dec
jle
xchg
cmp
mov
xor
roll
and
nop
inc
repz
push
mov
cmp
and
icebp
jnp
and
call
test
stos
insl
sti
std
mov
mov
dec
or
jg
push
push
lods
insb
inc
dec
popa
xor
mov
inc
mov
movsb
mov
or
adc
sbb
jp
adcb
scas
mov
push
sbb
and
jo
inc
pop
faddl
dec
cmpsl
pop
dec
fdivrl
call
es
lahf
cmp
std
cmp
in
idiv
and
loope
repz
and
mov
pop
mov
mov
add
or
xor
sub
pop
mov
mov
aaa
pop
addb
dec
push
retw
pop
mov
stos
xor
inc
fiadds
in
mov
dec
imul
cmp
push
inc
cmpb
imul
loope
cltd
es
in
out
fs
add
sub
dec
jmp
cmp
xor
push
test
jns
sbb
mov
pop
adc
cwtl
push
sbb
mov
sbbb
cmpsb
lret
xor
out
mov
sbb
cmpb
xor
push
jne
es
inc
out
lock
ljmp
mov
mov
add
cmpsb
clc
sbb
inc
pop
push
mov
repz
popa
rcrl
xchg
inc
pop
push
and
xchg
mov
hlt
out
fwait
add
cmc
movntq
out
xor
lea
hlt
in
lret
jns
fdivs
jns
pop
xchg
cmp
jg
inc
int
aas
fwait
inc
mov
scas
pop
in
pop
notl
or
imul
fidivrl
xchg
nop
dec
aas
out
js
cmc
sub
aam
sub
and
fsubs
push
sahf
adc
jns
lods
orl
xor
cmp
addr16
push
pop
sbb
inc
mov
push
mov
pusha
nop
adc
and
jp
stos
aas
mov
imul
dec
test
aam
mov
dec
inc
jae
mov
mov
inc
mov
pop
jne
push
nop
or
sti
shll
test
mov
jmp
pop
push
nop
iret
pushf
sbb
push
lods
lret
push
dec
ljmp
cs
mov
xchg
jb
mov
add
push
cmp
aam
sbb
xorb
jne
sub
inc
repnz
or
push
jae
ja
lea
mov
mov
lcall
jnp
push
jne
xchg
sbb
or
mov
sahf
sub
push
mov
hlt
pop
lcall
data16
xchg
std
daa
cmp
testb
fdivrl
sarb
adc
fistl
test
cmc
mov
lret
insb
push
pop
andl
push
push
movsb
icebp
mov
in
fldt
cmp
mov
push
xchg
sahf
xchg
add
xlat
aam
or
push
mov
lods
sub
in
inc
int3
push
inc
xchg
mov
cwtl
jo
add
dec
sbb
cld
push
enterw
in
pop
mov
xchg
arpl
out
into
arpl
add
and
arpl
mov
xchg
arpl
ds
add
xchg
jo
mov
loop
rclb
xor
jmp
and
stos
cmp
sub
sbb
push
lahf
into
scas
fists
pop
test
paddusb
add
fwait
add
pusha
mov
cmpsl
xor
insb
jnp
dec
es
lods
outsl
pop
sub
sub
push
add
filds
cmp
fcomps
mov
lcall
outsb
add
sahf
adc
sub
push
mov
mov
and
mov
out
xor
pusha
push
or
rcrl
lock
lea
aaa
mov
negl
mov
fsubs
and
inc
push
pop
mov
movsl
pop
gs
out
xor
cmp
jecxz
mov
repz
push
fs
dec
andps
scas
mov
cld
ss
cmp
repnz
or
cmp
repnz
push
cmp
pop
aam
pop
cltd
dec
dec
pop
jg
and
cmp
add
imul
movsl
scas
sti
jne
lret
push
in
xor
cmp
hlt
jno
push
pop
pop
sti
and
stos
sbb
mov
sub
sub
or
int3
loope
xor
aaa
les
sub
data16
fidivrs
mov
xchg
sub
es
sbb
adc
not
push
shll
into
jnp
dec
xchg
in
imul
nop
xor
cmpsl
in
add
iret
mov
add
add
push
aad
shll
fldenv
test
sbb
sbb
xchg
and
bound
mov
mov
mov
pop
pop
ljmp
mov
push
mov
or
cmp
jmp
ljmp
sbb
xchg
scas
mov
mov
mov
in
stc
je
mov
fdivl
jno
fs
sbb
inc
and
push
lahf
sub
pop
test
add
insb
movb
and
xchg
loopne
imul
shl
in
pop
in
adc
or
es
mov
add
loope
out
add
arpl
mov
xchg
nop
out
jp
or
in
rcll
jb
out
mov
xor
push
dec
mov
xchg
push
pop
adc
push
dec
rorb
fimuls
lcall
and
inc
mov
fisttpl
add
sub
mov
pop
add
xchg
jl
sarb
xor
fisttps
in
lea
aaa
popa
pop
mov
pop
jg
std
out
je
adcb
imul
aas
les
mov
adc
fsubr
ja
adcb
jne
sub
xchg
inc
movsl
in
popa
adc
mov
lds
cwtl
iret
mov
and
mov
test
imul
arpl
mov
inc
push
lea
stos
js
add
sub
in
pop
mov
leave
repz
or
push
popf
in
push
insb
cmpl
cmp
imul
stc
inc
mov
push
adc
daa
fildl
jmp
push
or
xchg
cmp
pushf
out
fstpt
push
cld
out
pop
incl
repz
pop
adc
rorb
sub
inc
mov
cwtl
add
and
imul
push
bound
pop
and
fmuls
ret
lds
scas
mov
lods
jae
jo
mov
or
stc
mov
mov
push
bound
into
mov
in
xchg
push
fwait
jmp
lds
fisttpl
push
push
cmpsb
shrb
shlb
ja
adc
add
clc
xchg
repnz
shrb
inc
or
shrl
icebp
sub
ret
sub
sub
insl
bound
jecxz
sahf
mov
dec
xor
adc
inc
pop
insl
dec
pop
mov
shlb
ret
stc
aas
je
scas
lods
or
sub
ja
mov
lock
adc
and
dec
stc
out
and
mov
inc
ja
out
lcall
push
imul
xor
xor
nop
mov
fwait
adc
pop
sub
sub
pop
jecxz
jo
and
data16
repz
pop
mov
adcl
jge
bnd
and
test
ret
into
out
push
adc
popf
push
std
and
mov
jnp
add
lcall
loop
pop
punpckhwd
cld
ss
test
sarl
scas
popf
fnstcw
push
mov
je
sbb
std
mov
cwtl
mov
cmp
ret
loope
rclb
jmp
xchg
xor
jo
imul
movsl
add
scas
scas
cli
jp
sbb
xchg
addr16
lcall
ds
pop
sub
lods
push
cmp
mov
mov
sub
enter
fisttps
jle
cmp
mov
cld
leave
jmp
cmp
cmp
xor
aam
outsb
push
hlt
cmp
loopne
sahf
ljmp
in
pop
adc
dec
imul
rcl
sub
add
pop
out
or
incl
inc
cmp
inc
sbb
add
fwait
cmp
pop
fdivs
and
fidivrl
les
mov
add
notb
xlat
push
sahf
dec
inc
jecxz
push
push
mov
xor
mov
ds
insb
lods
inc
bound
inc
int3
fcoml
cmp
xor
ret
mov
test
mov
jl
pop
fsubl
jbe
jle
dec
sbb
dec
fsub
sub
cmpsl
and
and
subb
xor
mov
gs
cwtl
xchg
xlat
push
fisttpll
shrb
dec
nop
fistl
test
xchg
cmp
or
xchg
int3
and
sub
inc
xchg
and
or
test
dec
and
fdivrl
xor
mov
jmp
xchg
xchg
cmp
xchg
outsl
dec
in
in
xchg
xchg
jae
sub
ret
fldl
mov
pop
or
mov
pushf
dec
xor
push
xor
fldt
mov
inc
adc
dec
loope
adc
out
and
cmp
ds
jo
je
adc
fs
add
repnz
jbe
mov
sbb
xchg
lea
in
jnp
pop
mov
inc
or
call
aam
xchg
cmp
pop
push
add
add
sbbb
mov
test
mov
stos
adc
leave
insl
xchg
test
mov
jg
int
cmp
or
shl
hlt
cmc
pusha
fs
enter
cltd
clc
jp
push
js
sub
sbbb
fistl
push
lret
ror
shl
popa
or
jg
ljmp
inc
insb
in
popf
hlt
sahf
incb
dec
cmp
call
rorl
jge
mov
push
lahf
ds
or
inc
sbb
sbb
mov
in
jp
inc
and
lcall
inc
pmaxub
jb
orb
cmpsl
pop
xor
jge
test
mov
sub
int3
sbb
pop
jle
in
cmpsb
jo
out
push
gs
gs
xchg
and
sbb
int
adc
scas
pop
push
out
pop
sub
push
cltd
inc
and
and
pop
push
mov
std
rcr
outsb
arpl
ret
dec
mov
sub
add
jmp
dec
test
xorl
jne
push
sub
outsb
or
push
adc
jb
mov
iret
div
data16
mov
jae
inc
rorl
xor
rorl
adc
adc
pop
movl
sub
out
std
mov
pop
xor
push
mov
les
mov
mov
lods
mulb
lods
cs
xchg
mov
aaa
pop
inc
ret
stos
xor
lret
jno
push
cmp
pop
jecxz
repz
sub
sub
sub
outsb
and
ss
lods
cmp
push
orl
mov
pop
subb
sti
push
addr16
andb
pop
out
aad
fdivr
test
cwtl
sbb
lcall
xchg
les
and
xor
push
and
xchg
xchg
cmp
push
mov
jp
jg
lret
xchg
pop
leave
lods
add
das
xor
add
insb
enter
popa
mov
adc
sar
pop
xor
aas
mov
dec
sub
repnz
aaa
or
loopne
shll
or
xchg
out
and
test
mov
mov
mov
mov
push
sbb
jmp
rcl
mov
imul
xchg
or
mov
outsb
add
leave
or
xchg
int3
cld
aad
decb
add
and
insl
loopne
push
cmovb
mov
or
lea
xor
icebp
ljmp
inc
pop
sub
daa
ror
xchg
fisttpl
ljmp
mov
fistps
fwait
add
mov
mov
dec
fildl
in
ss
cli
push
inc
iret
or
outsl
mov
mov
mov
fwait
fwait
xchg
subl
cs
sub
fisubrs
incb
adc
rcr
push
sbb
inc
add
cs
mov
cmp
outsb
sub
jbe
inc
push
xor
cltd
mov
jb
xchg
lds
packssdw
mov
mov
jns
clc
stos
lds
rclb
inc
movsb
loop
dec
imull
cs
fldcw
test
mov
dec
int3
sub
fildll
repnz
aam
test
mov
xchg
ja
lret
inc
test
sti
mov
lret
push
push
dec
faddl
das
mov
mov
cmp
adc
push
jo
dec
pop
jecxz
dec
mov
movsb
rcr
jge
pop
adc
push
imul
out
mov
ljmp
mov
insb
in
jno
jno
fs
aaa
sbb
add
movsb
fcmovbe
fs
pop
outsb
cwtl
pushf
clc
inc
jge
mull
sbb
pop
or
outsb
mov
repnz
int
js
popl
inc
jb
out
repnz
sbb
enter
inc
jmp
insb
dec
mov
popa
xor
vpsubusw
sub
xchg
sub
jl
mov
cmpsl
inc
icebp
fs
mov
fmuls
aam
movsl
orl
leave
gs
fsubrs
out
adc
lock
jl
or
test
jg
mov
mov
ja
and
pusha
xchg
jg
mov
shll
xchg
or
push
pop
xchg
sbb
push
xchg
addb
aas
icebp
cltd
pop
mov
fwait
mov
pop
dec
sbb
or
rclb
ljmp
or
in
jg
imul
pop
fwait
add
cmp
iret
xor
inc
pop
dec
cmp
outsl
mov
movsl
dec
dec
sub
scas
fldcw
and
adc
filds
jmp
cmp
sbb
and
sbb
pushf
xchg
popf
lahf
cld
sahf
movsl
into
push
outsb
out
jae
mov
cmc
or
mov
adc
pop
push
push
sbbl
add
insb
adc
push
jo
mov
mov
and
testl
add
iret
or
icebp
cs
sub
or
sub
jl
pop
xchg
xor
mov
jecxz
dec
fists
jnp
movsb
add
sub
pop
sub
sub
jp
iret
sub
hlt
dec
sbb
aam
xchg
add
push
xchg
subl
mov
fbld
aam
jnp
js
subb
into
pusha
subb
xchg
outsl
data16
pop
ljmp
inc
pop
jb
test
scas
add
dec
xlat
js
and
and
mov
js
push
jo
cwtl
jecxz
mov
rcrb
jmp
or
gs
cld
push
jmp
push
sahf
and
daa
stos
push
adc
push
gs
adc
pop
int3
flds
push
cmp
rep
mov
in
inc
xchg
aad
lahf
leave
les
popa
lods
dec
or
push
jmp
xor
mov
jo
cmp
mov
insb
mov
inc
icebp
jnp
dec
int3
jae
sub
cmp
daa
in
jmp
or
jle
pop
out
sti
pop
scas
cli
pop
push
je
sar
jmp
add
push
and
sub
insl
js
outsl
jecxz
adc
or
outsb
test
ds
mov
xor
pop
fnsave
sti
lcall
loope
dec
sarl
push
sub
pop
repnz
stc
push
roll
xchg
xchg
cltd
push
push
ret
test
xchg
push
cmp
xchg
cmp
popf
xor
mov
fcmovb
flds
cmp
jbe
and
xchg
les
cmp
dec
inc
sub
add
inc
xor
lea
mov
push
scas
mov
xchg
pop
pop
cmpsl
cmpsb
insb
fisubrl
testl
aam
fstpl
jne
jecxz
sub
mov
jmp
xor
int
cld
dec
stos
iret
mov
mov
pop
mov
jne
test
jl
mov
outsl
xchg
aas
add
pop
sub
rcr
pop
or
adc
addr16
push
es
or
je
jae
jo
shlb
enter
push
add
sub
shll
clc
daa
xchg
lods
repnz
or
mov
push
jnp
aad
repz
popa
push
loop
sahf
pop
xor
xchg
loopne
cwtl
push
icebp
pop
loop
repz
jbe
comiss
sbb
shlb
sahf
addr16
lods
jbe
jno
xchg
push
push
pop
sbb
popf
mov
and
insb
and
xchg
mov
aad
xchg
movb
movsl
test
jle
jne
ret
push
and
mov
and
imul
pop
lcall
insb
in
dec
out
add
cmpsl
fdivr
call
sub
dec
cmp
cwtl
cmpsl
arpl
test
bound
and
call
sub
mov
mov
dec
push
pop
das
insl
xchg
in
stos
pushf
ja
cli
xchg
shr
push
adc
cmpsb
jne
xchg
lods
out
xor
pushf
add
and
mov
cld
add
adc
int
sbb
addr16
lea
xor
xchg
fcoml
pop
fadds
adc
mov
fs
mov
mov
std
shrb
dec
stc
loopne
aam
aam
mov
jmp
jns
push
fst
xor
sar
adc
push
mov
cmpsl
lea
xlat
aad
lcall
lods
sbb
dec
popa
repz
negl
daa
scas
push
lods
aad
inc
mov
pop
push
movsb
jns
gs
movl
loopne
mov
push
xchg
popf
lcall
cmp
jl
in
mov
xlat
test
mov
push
nop
shl
push
dec
xchg
add
add
sub
iret
inc
pop
aaa
out
sbb
lea
dec
xchg
mov
push
mov
push
adc
cmp
pushf
test
push
cmp
adc
push
jmp
test
cli
ret
mov
jmp
jecxz
fdivrl
out
xorl
adc
dec
sbb
cmpsl
jg
daa
cwtl
icebp
dec
js,pn
and
cmc
xrelease
push
scas
nop
lea
movsb
gs
jb
pop
push
push
subl
jmp
pop
cmpsb
xor
out
fsubs
sbb
push
rol
xor
movsl
sub
adc
leave
xor
stc
pop
jae
shrb
sub
addr16
pushf
nop
es
xor
inc
loope
xchg
xor
fs
cmp
testb
in
sbb
jne
ret
sbb
insb
jnp
lock
xor
mov
out
inc
cmc
mov
mov
sub
push
sub
mov
popa
cltd
aaa
push
aas
xchg
adc
dec
xchg
xchg
add
out
scas
sub
rol
inc
cmp
jbe
inc
sti
and
cmpb
jp
jg
fisttpll
adc
stos
inc
sbbb
jmp
scas
adc
pop
lds
xor
mov
fmull
push
and
rorb
jne
stc
sbb
in
ljmp
loope
sbb
subl
andb
ret
xor
imul
andl
add
and
inc
popa
mov
or
ret
add
xlat
mov
in
std
adc
xorl
mov
and
pushf
push
xor
xchg
out
repnz
inc
cli
test
xchg
mov
addr16
shrl
ret
mov
cmp
sbb
push
mov
jge
push
xchg
jnp
lsl
mov
inc
fwait
cmp
push
testb
pushf
inc
pop
imul
stos
loope
arpl
jne
ret
flds
inc
icebp
pop
or
cltd
out
push
ficoms
ds
insb
das
cmpsb
mov
rep
xor
lds
std
aam
add
pusha
or
dec
or
lds
or
or
ljmp
mov
mov
outsb
xor
add
xor
test
inc
xor
cmp
or
cmp
js
push
ljmp
cli
and
test
ss
mov
stos
insl
mov
xchg
mov
sub
leave
adc
push
mov
inc
push
jle
or
adc
ljmp
jecxz
stos
push
imul
xchg
in
cmp
mov
ljmp
fisttpll
pop
cmp
jg
mov
sbb
test
jg
sub
xor
and
imul
shrl
loope
sub
out
std
cmp
xchg
xchg
cld
je
lcall
mov
mov
or
shlb
imul
sbb
xorl
adc
ss
sub
push
rclw
or
outsb
dec
dec
aam
push
mov
daa
push
dec
stos
test
sahf
addb
subb
xor
pop
sahf
ss
and
jo
testl
iret
aad
sbb
in
imul
loopne
cmp
xchg
vmptrst
nop
jno
notl
push
in
jp
mov
es
jp
sarl
jo
pusha
pop
notl
xor
shlb
lret
dec
mov
andb
lods
dec
movl
mov
lahf
in
cli
push
or
mov
cmp
notl
cs
mov
sub
adc
cld
sub
jno
pop
adc
int3
push
dec
mov
mov
and
add
gs
incb
mov
sub
sbb
inc
pop
jb
fs
inc
addr16
and
fnstcw
cmc
addr16
std
push
add
dec
daa
leave
shrb
sub
subl
jno
shrb
ror
in
pop
roll
lret
mov
ds
inc
das
mov
mov
scas
sbb
mov
rclb
gs
cli
out
jg
ret
dec
mov
ja
fimull
jle
nop
jge
sub
cwtl
or
or
mov
sbb
cmpsl
scas
mov
inc
inc
jnp
push
daa
iret
jnp
out
push
mov
shlb
hlt
nop
inc
mov
jo
sbb
xchg
dec
dec
dec
jg
and
cmc
add
cmp
push
aas
loope
icebp
lcall
jbe
adc
dec
and
sbb
mov
mov
cmpsb
cmp
sub
xor
xor
inc
push
pushf
lret
in
cmc
pop
and
or
push
jecxz
fdivrs
or
negb
in
push
mov
sub
ja
add
je
mov
adc
push
cmpsl
data16
xchg
stos
ds
jp
inc
pop
or
sub
push
mov
mov
sub
idivb
aaa
push
jge
add
cmp
and
xchg
stc
fdivrl
cmp
repnz
mov
dec
sbb
sahf
test
cmpsb
or
sbb
std
inc
lea
jp
movsb
orl
jbe
scas
mov
in
lcall
xor
or
std
out
sbb
mov
xor
jmp
adc
cmp
jp
cmpl
rorl
and
push
cs
das
ret
xor
xchg
xlat
jnp
and
rorb
pop
fnstsw
push
rorl
rorb
clc
in
jle
pop
sbb
lock
movsb
push
mov
pop
mov
icebp
aas
out
xchg
ljmp
in
popa
dec
test
add
idivb
pusha
iret
inc
fwait
pop
imul
les
popa
test
lds
and
dec
pusha
sub
adc
push
pusha
leave
vmaxps
incb
shll
jbe
test
inc
jmp
cmp
fldl
add
xor
inc
xor
clc
sti
xor
xor
outsb
lods
jnp
push
iret
ret
sub
and
cld
daa
ja
push
add
imul
sub
les
mov
js
lahf
dec
sub
sbb
enter
or
mov
sub
hlt
and
mov
cli
push
jge
lods
adc
shl
xchg
aad
add
das
cmpsb
dec
repnz
adc
popa
popa
aas
pop
cmc
inc
enter
xlat
inc
aam
rcl
or
xchg
push
xchg
push
test
push
call
jns
js
fcompl
aas
aaa
jnp
cmp
jmp
pop
sbb
push
dec
mov
xlat
inc
popa
lock
cmp
loopne
addr16
pop
xchg
jp
outsl
cmpsb
popa
sbb
loop
ds
jbe
jno
mov
cmpsl
hlt
fst
mov
shlb
rorl
popa
stc
test
or
sbb
cmp
pop
jbe
movl
pop
jl
dec
cmpsb
dec
je
push
xorw
push
sub
xor
push
xchg
aaa
rcr
jl
sub
inc
outsl
adc
jl
cmp
xchg
sbb
fwait
or
adc
aaa
push
add
xchg
mov
and
mov
adc
add
xchg
fdiv
mov
es
out
inc
and
mov
pop
push
shrl
jbe
rcrl
mov
cwtl
add
mov
mov
rorl
cmp
int
and
xor
mov
pop
repnz
jp,pt
mov
js
cmpsb
or
push
out
xor
in
pushf
add
push
and
pop
inc
movsb
into
enter
cmp
jmp
adc
sub
mov
mov
xchg
mov
fnsave
push
shr
scas
nop
jne
sbb
es
adc
mov
sbb
das
scas
push
jb
mov
loop
xchg
das
mov
pop
and
arpl
icebp
and
icebp
aad
out
push
jne
jp
xlat
lret
out
sub
pop
iret
jns
inc
pushf
inc
mov
test
data16
fnstcw
out
mov
movsl
dec
outsb
xchg
cmpsl
sbb
mov
std
push
out
pop
xchg
or
xchg
jmp
mov
push
jb
add
cmpsb
insl
incl
shll
lea
inc
daa
mov
loope
xlat
cmp
rclb
add
fldcw
es
or
mov
jmp
push
mov
adc
fnstcw
add
jne
rcll
jmp
cmp
out
adc
xor
in
xchg
and
out
inc
cmp
ret
xchg
add
mov
adc
push
push
pop
out
mov
data16
jns
aam
arpl
lret
popf
sbb
daa
cli
inc
dec
aaa
in
lods
es
or
cmp
lock
out
loop
inc
gs
xchg
dec
jo
mov
mov
das
lret
lcall
mov
das
jb
sub
insb
leave
aas
lret
leave
std
data16
fldt
jno
mov
add
inc
cli
shll
xor
mov
mov
jns
and
dec
sub
adc
daa
movsl
ror
outsb
xor
mov
xchg
inc
adc
insb
test
jl,pt
push
cwtl
or
sbb
dec
out
and
int
cmp
push
pop
pushl
test
movsb
arpl
adc
nop
cmp
fstl
cmp
out
push
into
lock
add
scas
pop
stc
sar
sbb
rcrb
in
fisubrs
cmp
pop
sub
fucomp
js
lahf
pop
or
je
add
xor
xor
and
jg
scas
adc
das
pop
pop
movsb
mov
inc
pop
std
add
imull
setb
andl
xor
imul
and
sub
shll
in
jl
les
mov
dec
outsb
movsl
push
fucomi
int3
popa
fcompl
insb
sub
mov
jge
inc
inc
mov
dec
aaa
ficompl
mov
pop
inc
in
sbb
outsl
adc
mov
aad
fwait
insl
inc
ss
mov
push
adc
out
les
sub
out
lcall
pop
orl
ja
jnp
mov
test
aad
mov
mov
fimuls
pop
jecxz
jae
icebp
ss
push
popf
pop
dec
inc
test
pop
out
sub
outsl
jb
push
xchg
push
fsts
rolb
pop
xor
adc
jg
mov
ret
pop
pop
pushf
xchg
lea
dec
popa
fwait
mov
mov
dec
shlb
fdivrl
pop
push
outsb
jecxz
es
rcrl
mov
mov
sar
mov
pop
inc
fsts
mov
ja
or
add
sti
jle
jl
mov
faddl
scas
adc
sahf
jnp
js
ret
aad
cmp
mov
std
dec
cmp
xchg
out
mov
mov
add
scas
sub
repnz
mov
cwtl
sbb
and
jmp
int3
sbb
pop
sbb
clc
jns
xchg
sub
loope
push
sahf
pop
xchg
xor
xchg
scas
mov
jne
xchg
adc
arpl
inc
in
filds
sub
notl
dec
inc
or
xor
bound
sub
add
jb
xchg
rolb
push
cmp
and
lcall
dec
out
and
test
outsl
jmp
lds
xorb
hlt
cmp
aam
je
les
jp
cs
divl
je
fmuls
xlat
fdivrs
pop
sub
je
aad
fimuls
cmp
shlb
adc
daa
push
mov
sub
sub
test
es
fwait
nop
jne
lods
icebp
out
test
adc
out
cmp
lea
call
inc
push
fcoml
out
add
inc
cmp
lods
mov
or
sbb
xchg
rol
mov
add
mov
add
mov
mov
out
pusha
push
pusha
cmp
dec
mov
mov
dec
jl
jmp
movsl
sbb
mov
stos
repnz
adc
js
sub
xor
sub
push
insb
scas
sub
ljmp
or
mov
push
lods
and
inc
or
xor
aas
add
sbb
or
xor
mov
sub
and
sub
sub
push
mov
inc
mov
leave
insl
ds
rcl
sbb
stos
fists
and
push
cmpsb
aam
xchg
test
add
cmp
in
add
jmp
std
addr16
mov
xor
jl
repnz
push
in
mov
sahf
idivl
jmp
xor
xchg
jae
rolb
sahf
mov
mov
fcoml
inc
jne
mov
fs
xchg
mov
mov
out
shrb
lret
cmp
lea
lods
cmc
rcll
in
aad
sbb
inc
cmp
popf
sub
sti
and
mov
mov
adc
sbb
aam
pusha
adc
dec
sbb
es
mov
movsl
add
mov
int3
imul
arpl
and
mov
or
sti
pop
pop
fisubl
xchg
cltd
and
push
test
mov
or
lods
rcrl
or
jne
enter
xor
pop
mov
pop
sbb
xchg
push
std
mov
lods
dec
inc
mov
cmp
fistl
fildl
std
mov
incl
fdivs
add
xchg
lods
out
lock
btr
dec
in
xchg
xchg
mov
xchg
insl
push
lret
aas
int
mov
sub
jne
mov
scas
ja
fisubrl
test
stc
mov
sub
fisubl
sub
cwtl
gs
outsb
add
and
xchg
cli
icebp
icebp
sub
add
or
add
dec
push
push
lcall
dec
mov
or
push
jge
xchg
cmp
xchg
pusha
push
loope
imul
rcrl
pop
add
xchg
mov
cli
mov
or
sbb
sbb
mov
sbb
in
repz
push
jae
rcl
jg
int3
pop
gs
pop
lret
scas
loope
dec
leave
lock
and
leave
ss
pop
aas
mov
aam
or
pop
push
scas
lock
decl
inc
out
test
dec
push
fidivs
clc
jae
mov
pop
jg
mov
stos
xor
adc
je
push
and
imul
pop
int
and
or
adc
add
mov
and
movsb
leave
pop
jnp
inc
imul
bound
movsl
mov
aad
pop
aad
push
inc
shlb
adc
adcb
insl
out
into
mov
xorl
xchg
subl
call
test
mov
les
int
mov
sbb
loopne
sub
pop
outsb
push
rorb
dec
cltd
cltd
and
testb
out
int3
mov
ss
adc
mov
iret
out
shll
test
or
adc
jl
sub
xor
fnstcw
xor
add
mov
mov
add
cmp
aaa
ret
jmp
jno
lock
mov
and
lds
ja
dec
stc
push
mov
shrl
movsl
iret
or
xor
xchg
sub
sbb
xchg
adc
test
sub
push
dec
ret
push
push
xor
scas
test
mov
scas
mov
daa
inc
jno
cmp
cs
ficoms
xchg
jns
in
adc
stos
sub
scas
xchg
arpl
add
lods
sbb
repz
fisubrs
fs
jge
dec
cmc
imul
push
cli
and
mov
inc
sub
imul
sbb
add
fcompl
mov
sub
xor
or
cmp
enter
sbb
rep
push
mov
cwtl
cmp
mov
cmpb
test
mov
cmp
and
sbb
clc
and
add
lods
xor
sub
xor
mov
sbb
jp
js
mov
mov
and
out
jns
leave
push
xchg
loopne
in
jns
dec
std
xchg
pop
test
les
ds
and
out
cmp
adc
rorl
scas
lods
je
or
xchg
jbe
jb
xchg
test
cmp
sub
xor
cmpsb
cwtl
ja
loopne
jo
inc
gs
ss
add
xchg
cltd
lret
fcmovne
in
dec
test
in
cmp
fucompp
negb
test
hlt
xchg
and
mov
fwait
scas
mov
or
data16
xor
push
inc
mov
shll
leave
cmp
clc
mulb
mull
pop
scas
ja
aas
push
jmp
call
xchg
imul
imul
cli
cmp
push
pop
dec
enter
arpl
out
mov
jmp
and
rcrb
push
cmp
in
test
pop
sbb
pop
flds
push
enter
sub
cmp
pop
shl
pop
sub
testb
loope
out
and
inc
cli
pop
pop
call
sub
ret
add
sbb
mov
jno
mov
sub
shlb
adcl
xchg
ret
dec
pushf
fsubrp
pop
mov
lods
sahf
add
pop
push
add
enter
mov
fimuls
push
jnp
push
add
mov
test
jge
outsb
imul
sbb
pop
js
and
loopne
lds
cmp
xchg
xchg
jmp
cmp
xchg
inc
push
in
add
push
xchg
push
xchg
or
jp
cltd
push
hlt
insl
sbb
adc
bound
xor
ds
stc
pop
lods
test
mov
lcall
add
std
xchg
push
outsb
pusha
in
rcrl
jns
les
in
sbb
jb
mov
daa
mov
call
push
mulb
fsubrl
test
push
cmpsl
or
daa
cmpb
cld
ljmp
sub
insb
dec
xchg
lock
xor
cmc
outsb
push
or
xor
jo
jl
scas
dec
mov
mov
jl
adc
pop
dec
cmpsl
dec
jns
push
mov
arpl
lcall
mov
adc
daa
and
cltd
add
fstpl
push
dec
sbb
mov
arpl
jg
pop
ficoml
jns
pop
data16
or
scas
stos
jo
adc
je
xchg
cltd
mov
adc
aam
mov
push
dec
hlt
and
bound
push
pop
jp
les
jae
roll
jp
xor
add
addr16
cmp
inc
xor
call
fwait
adc
aad
add
add
shrb
sbb
inc
jmp
in
pop
daa
dec
mov
jno
test
push
repz
imul
stos
push
jle
adc
xchg
sbb
cmp
lds
xchg
aaa
popf
sbb
mov
out
into
xor
lods
or
leave
add
pop
std
adc
mov
gs
xchg
push
sarb
mov
adcb
push
cltd
or
add
adc
lcall
xchg
inc
repz
mov
lds
jg
push
lcall
test
je
push
call
in
jge
and
sahf
push
pop
jo
inc
movsb
and
fisubrl
adc
pushl
cmc
pop
js
pushf
pop
fstpl
enter
xchg
and
test
sbb
stos
mov
cmc
push
mov
sti
leave
or
jp
xor
push
nop
and
cmp
lret
mov
rcl
mov
testl
mov
xchg
pop
fdivp
xlat
and
fdivrs
ret
mov
insl
cs
icebp
loop
lock
imul
or
sahf
shll
jmp
cmp
sub
or
aaa
je
add
dec
and
lahf
dec
outsl
sar
aam
cmc
js
cmpsl
adc
sbb
and
mull
sti
push
adc
test
lea
fildl
mov
stc
dec
loopne
imul
pop
out
cmp
loop
push
std
into
push
es
push
jns
and
cmp
inc
pop
xchg
fsubrs
pop
xor
movsb
jnp,pt
push
les
dec
jne
cmp
pmullw
loope
int
or
call
fwait
in
dec
dec
cwtl
pop
clc
pop
repz
in
xchg
add
mov
mov
xor
pop
lods
adc
mov
mov
leave
and
xor
enter
dec
add
std
mov
ficoms
aaa
or
jl
jle
fwait
cmpsl
sub
movsb
and
insl
mov
stos
mov
inc
test
add
mov
mov
xlat
fstpl
pop
mov
lcall
mov
and
mov
jmp
jmp
insb
ret
mov
cli
imul
push
jno
int3
pop
sbbb
out
shrb
push
dec
lcall
mov
fisubl
cltd
pop
fldt
inc
or
mov
jbe
or
mov
fcoms
in
pop
lock
loop
dec
push
xor
rcrb
adc
sub
inc
add
dec
ja
rol
in
aad
jl
stc
jns
fcoml
add
inc
lahf
xor
cld
jbe
mov
sub
cmp
xor
ss
push
imul
cmp
sbb
xchg
das
repz
mov
test
lcall
add
cld
or
enter
cli
mov
xchg
popa
stos
imul
and
mov
mov
jle
jmp
add
lret
orb
or
pushf
test
xchg
xchg
stos
jb
mov
jb
fucomp
and
mov
dec
dec
jge
mov
mov
int
stc
rol
call
sub
test
inc
mov
mov
mov
daa
shl
lret
dec
ja
jp
stos
ljmp
add
sti
cmc
outsl
negb
jle
xor
out
test
cmp
inc
lock
and
lods
mov
xor
pop
scas
js
loopne
push
bound
pop
bound
dec
hlt
cmp
lret
pop
jno
push
jmp
pop
repnz
add
mov
into
lea
je
loop
add
test
pop
mov
shrb
mov
add
loopne
nop
inc
lods
rcr
sub
add
mov
fcomps
mov
inc
dec
ror
jecxz
stos
dec
dec
arpl
inc
test
mov
dec
xchg
jecxz
sbb
add
and
mov
lret
jl
push
inc
sbb
enter
xor
shll
int
dec
daa
sahf
mov
fildl
clc
mov
enter
jecxz
xchg
add
and
cmp
xor
push
jb
lea
int
push
fs
movsb
push
fldl
incb
and
mov
adc
inc
cld
mov
sbb
inc
icebp
movsb
dec
xor
pop
movsb
aaa
or
add
mov
xor
stos
rcrb
pop
cmp
dec
mov
sub
jp
lea
hlt
mov
mov
dec
mov
sub
insb
xor
js
jns
jne
movsb
or
mov
fwait
loope
int
repz
pop
xor
cmp
xlat
mov
ja
push
cmp
outsl
aad
or
out
push
push
or
movsl
addb
sbb
sti
jmp
int
xchg
or
mov
dec
div
sbb
cmpsl
pushf
xchg
mov
mov
fcompl
pop
fs
pop
aaa
xchg
das
push
push
ss
dec
mov
movsl
lahf
stos
outsb
cmp
mov
xchg
aas
das
ret
lods
mov
pop
mov
stc
and
gs
xlat
scas
push
dec
push
cmpsl
jmp
jl
imul
stos
int3
or
daa
sub
adc
cmpsl
das
ret
mov
lret
loope
xor
std
ds
in
xor
and
and
mov
jne
cmpb
insb
cld
mov
fdivs
adc
sbb
sub
or
xor
fwait
add
jg
ja
xlat
jns
push
stos
movsl
mov
pop
mov
fstpt
and
mov
not
pushf
mov
lea
xor
fdivs
cmp
lods
shrl
add
icebp
mov
add
push
fdivr
adc
mov
insl
pop
neg
xor
jge
orl
imul
xor
loopne
sahf
test
adc
loopne
shrb
and
fwait
push
or
add
sub
call
pushf
sub
dec
add
or
ret
ror
push
mov
fldcw
sysret
jp
inc
lahf
test
pop
dec
ss
pusha
and
lahf
push
fsts
mov
dec
lcall
cmc
push
add
cs
pop
xorb
test
mov
cli
lret
ljmp
cld
movsl
mov
sub
outsb
sahf
cmp
sbb
fwait
jle
add
mov
push
pop
inc
cmp
in
cltd
loop
jle
mov
mov
stc
cmp
popa
sub
sub
mov
xor
xchg
inc
aaa
ficompl
ds
aas
cmp
clc
cltd
xchg
or
test
call
sub
or
aad
jg
out
push
push
sbb
xchg
push
xor
add
push
outsb
inc
scas
and
repz
jg
xor
loop
addb
in
push
inc
xchg
aam
and
aam
adcb
add
jne
rep
xor
inc
push
ss
imul
lods
mov
jno
movsb
cmp
aaa
aaa
int3
cmc
add
fwait
cltd
mov
loope,pn
outsl
lcall
pusha
imulb
cmpsl
movsl
loopne
and
and
lock
sbb
lret
adc
jg
or
ret
mov
addb
inc
sti
pop
sti
xchg
push
add
fcomi
sub
or
adc
shrb
add
in
test
fs
loopne
inc
les
or
sbb
int
mov
decl
stos
add
cltd
xor
clc
adc
sub
test
mov
lcall
sub
stc
jae
daa
mov
idiv
lea
test
dec
push
xorb
xchg
or
jp
jae
xchg
inc
out
or
pop
push
cmpsb
push
push
mov
xor
mov
bnd
js
mov
push
mov
or
mov
rclb
imul
jae
mov
mov
das
adc
nop
fidivs
xchg
arpl
xor
out
jg
or
push
movsl
xchg
fidivrs
or
mov
mov
push
mov
sbb
sub
mov
movsb
les
sub
ret
pop
fildl
jae
add
inc
testb
xchg
xor
clc
inc
xor
push
dec
jmp
subb
mov
dec
sti
nop
sub
push
mov
gs
popf
add
sbb
pop
inc
or
in
mov
out
rolb
sahf
and
mov
pusha
movsl
hlt
insl
ret
and
lret
pop
ja
mov
pop
es
mov
arpl
cmp
mov
push
add
ror
fcomip
adc
repnz
subl
and
sub
mov
divb
movsl
sub
xor
mov
loopne
imul
mov
cmpsb
das
adc
push
xchg
xor
popa
pop
mov
imull
dec
xchg
std
mov
sti
inc
adc
push
add
outsl
mov
xchg
xor
jg
test
shrb
rcrb
fildll
int
ljmp
or
prefetchw
fdivl
fdiv
add
xchg
icebp
repnz
push
jno
imul
xor
dec
adc
mov
hlt
fdivs
mov
outsb
adc
push
divl
es
rcrb
or
clc
or
rclb
lahf
jno
sub
lahf
clc
dec
jl
sub
loope
test
stos
or
jge
cmp
xchg
clc
out
enter
loope
mov
or
push
cmp
push
dec
das
loop
push
in
ss
cmp
cmc
or
cmp
cmp
cmp
push
loopne
and
jge
cld
mov
jg
or
adc
scas
hlt
enter
fs
imul
test
jno
data16
into
cmp
sub
aas
jmp
js
push
lds
mov
pop
mov
jno
mov
in
cltd
cld
insl
andl
in
in
int
cmpsl
in
stos
stc
std
pop
rclb
ljmp
add
pusha
in
jns
sub
push
loop
push
push
dec
xchg
jle
jnp
add
adc
std
add
out
cmp
int3
pop
jno
scas
jecxz
setbe
aad
mov
jbe
xchg
xor
xor
mov
jnp
jno
cmp
je
faddl
jecxz
insb
sbb
idiv
sub
int3
adcb
outsb
sbb
xchg
xchg
push
imul
adc
pop
jb
sar
es
iret
jb
and
add
sarb
add
sti
sbb
addr16
xchg
lods
lcall
inc
movsb
cs
sub
inc
cmp
pop
push
movsl
lcall
add
xchg
fidivrs
and
push
sbb
pop
out
mov
jo
mov
dec
fisubrl
shll
sbb
mov
popa
in
push
mov
cvtpi2ps
shll
leave
fwait
or
enter
call
sbb
out
repz
sub
jp
adc
mov
int3
dec
int3
pop
fisttpl
das
test
lods
mov
in
mov
in
scas
rcrb
jmp
dec
lret
daa
dec
or
sub
leave
popf
subl
into
lds
pop
mov
and
mov
aad
add
loopne
gs
jbe
sub
cs
rorb
ljmp
jae
cmp
cmc
jno
loopne
xchg
xor
mov
lods
jne
and
fsts
es
cmp
add
mov
xchg
mov
push
push
pop
int3
dec
add
ret
lret
add
jmp
jnp
fistpl
fldt
fisubrl
sbbb
xor
pusha
cwtl
imul
jno
ss
es
dec
enter
lcall
push
inc
mov
into
stos
jle
jnp
and
inc
outsb
outsl
lds
xchg
sti
arpl
bswap
or
xor
and
std
je
arpl
leave
ss
movsl
push
in
cmp
call
dec
cli
push
gs
xor
lods
jge
cmp
mov
repz
inc
jecxz
xchg
push
es
out
cwtl
insl
mov
inc
adc
mov
pop
adc
test
jp
fldt
setg
int3
add
xor
mov
ds
push
pop
andw
out
lds
push
sbb
xchg
xchg
fdiv
dec
adc
jl
adc
mov
jo
mov
dec
jg
stc
push
pop
daa
enter
clc
jecxz
push
mov
shl
test
popl
movsl
push
loopne
xchg
sahf
jo
addl
sti
jmp
mov
xchg
cltd
add
subl
xor
push
enter
xchg
sub
jae
mov
mov
dec
insb
sarb
sbb
sbb
adc
orb
cltd
inc
in
jecxz
mov
push
div
mov
ret
fidivrs
mov
ja
sbb
sub
xchg
and
xchg
ljmp
cmc
int
rcr
pop
push
ret
mov
bound
add
mov
stos
ret
jno,pt
jae
sub
scas
lret
jne
and
test
inc
in
dec
stos
mov
dec
mov
lods
sub
sub
je
mov
jae
ret
inc
and
daa
mov
pop
and
fimull
out
mov
jne
data16
int
int3
ret
ja
les
fildl
mov
mov
dec
xchg
in
xor
dec
mov
mov
or
jg
scas
push
jmp
movsb
mov
popa
xchg
orl
ds
cmp
sub
and
mov
mov
cmp
add
repnz
adc
or
mov
divl
lea
sub
gs
push
mov
out
scas
loopne
xor
mov
shlb
leave
movsb
and
test
add
mov
mov
dec
mov
push
and
shrb
dec
mov
int3
or
testl
dec
mov
mov
sbb
stc
and
fdivl
imulb
lahf
fnsave
jbe
inc
add
repnz
dec
mov
dec
pop
adc
loop
test
inc
or
shrl
repnz
outsl
sbb
xor
cmpb
sbbb
cmp
xchg
and
add
or
push
ss
inc
out
nop
adc
pushf
movsb
in
lea
lret
out
insb
inc
in
push
fisttpl
mov
dec
leave
rcrb
xor
cmp
fucomi
mov
inc
ror
push
mov
jl
or
xchg
mov
daa
sub
rclb
aas
xchg
dec
sbb
roll
mov
movsl
dec
nop
sbb
mov
and
fsubrl
aam
inc
lds
stos
xor
shlb
lds
xchg
insb
dec
cli
out
jecxz
ljmp
pushf
push
imull
gs
push
xchg
std
sbb
outsl
lret
mov
jg
jecxz
lods
xlat
push
adc
xor
imul
pop
js
jle
test
xchg
add
into
daa
adc
inc
and
ss
in
xchg
shll
cwtl
jnp
sub
lcall
jp
stc
call
jo
pop
mov
ret
mov
rclb
adc
mov
add
stos
outsb
adc
test
add
jno
outsb
jge
lret
cmpsb
int3
je
pop
pop
add
push
mov
inc
xchg
mov
sti
bound
fs
mov
lock
adc
adc
add
mov
sub
pop
mov
mov
out
push
rcrb
ret
ljmp
sbb
mov
into
nop
inc
in
sub
mov
push
loope
sub
sub
sub
shll
dec
sbb
jns
shr
mov
dec
inc
ret
test
xor
sbb
cmp
lcall
adc
fldt
or
cld
aam
jmp
ret
lahf
mov
jne
das
adc
je
lret
iret
pop
cmp
cmp
mov
lret
pop
push
jecxz
lcall
jl
jle
test
sarl
cmpsl
xchg
roll
push
push
cli
cmp
leave
cmp
sti
xchg
aad
and
lea
xchg
loope
cmpsl
sbb
clc
jp
cmp
outsl
pop
out
add
in
cmp
popf
int3
outsb
pop
jp
testb
in
negl
ret
and
es
xchg
call
pop
dec
add
sbb
mov
and
cmpsl
push
imul
jecxz
sbbb
outsb
push
push
cwtl
xchg
iret
insb
adcb
mov
sbb
pop
or
out
and
pushf
fwait
mov
jb
gs
loopne
sub
fadds
aaa
mov
sarb
inc
cmp
push
push
stos
sti
inc
jbe
xor
lea
mov
rorl
into
add
ds
loope
sub
mov
xlat
repnz
ja
or
xchg
and
imul
push
fsubp
mov
sbbl
cmc
test
stos
pop
mov
xchg
and
sbb
popa
imul
mov
popf
data16
mov
out
out
test
sub
push
repz
inc
ds
push
stc
popf
mov
dec
shr
addl
sub
cmpsl
outsl
negl
jae
push
nop
mov
aad
pop
jp
iret
push
sahf
xor
out
or
xchg
ljmp
int
ds
in
and
dec
lods
test
sar
dec
jl
int3
test
pop
fwait
adc
ret
mov
sbb
or
xchg
xlat
and
ja
inc
scas
jg
out
cmp
sbbl
adc
or
and
les
or
js
lods
cltd
push
cwtl
and
ljmp
lret
pop
dec
mov
subl
mov
mov
and
xor
fwait
and
pusha
mov
insb
fcomps
xchg
fistpl
imul
les
mov
cltd
adc
loope
aaa
bound
mov
adc
inc
inc
popa
out
sbb
pop
inc
in
cltd
inc
and
repnz
js
pop
mov
out
lods
js
addb
leave
pop
lahf
movsb
or
cmp
mov
push
mov
dec
jns
jno
in
cmpsb
lret
jmp
push
lret
xor
pop
rolb
inc
mov
repnz
out
cmp
lahf
mov
popf
call
jg
push
addr16
ret
insb
jae
sbb
add
fwait
mov
addr16
adc
nop
lahf
mov
lcall
jns
jg
ficoms
test
pop
pop
test
mov
and
sbb
sub
push
push
mov
mov
cwtl
aad
xchg
int
sub
fistpll
in
pushf
ja
into
outsb
leave
inc
fs
jecxz
push
imul
adc
inc
mov
test
dec
inc
and
jmp
xor
jo
or
fldenv
fadds
in
or
std
pop
fisubrl
loope
sti
std
idivl
jae
mov
test
pop
jb
lahf
fidivrl
push
jle
xchg
push
loop
in
clc
jno
cmp
xor
scas
push
outsl
int3
push
out
in
inc
sti
jg
outsb
push
xlat
jle
jge
cld
xchg
mov
sahf
sub
icebp
stc
dec
ds
inc
mov
scas
fsubr
test
inc
iret
loopne
mov
dec
leave
movsb
cld
out
aam
jl
add
lods
push
adc
sub
je
out
jnp
stos
push
js
dec
dec
cmp
mov
cmc
in
xchg
mov
pop
sarb
push
aaa
sub
jns
pop
mov
dec
mov
sbb
xchg
mov
imul
pop
xlat
sub
movsl
push
push
nop
inc
repnz
jae
jb
fucom
and
sub
pop
mov
jno
pop
lcall
fs
arpl
outsb
in
icebp
mov
mull
adc
and
xor
or
jecxz
xchg
jo
jbe
sub
decl
stc
stc
outsl
mov
mov
dec
cmp
cmp
imul
dec
xor
and
shll
stc
loope
aam
enter
mov
and
pop
loopne
cld
ljmp
pop
js
cmpsl
pushf
inc
ret
rcrl
sbb
xlat
mov
adc
mov
je
dec
jmp
aaa
mov
mov
lock
mov
mov
loop
xor
mov
push
pop
mov
cs
jge
push
and
or
jns
addb
incl
popa
js
enter
mov
fcomi
popa
xor
shr
mov
and
push
sub
mov
pusha
adc
sbbb
ss
jo
test
cmp
mov
sub
ret
aaa
jge
sub
mov
or
cmovle
push
xor
sub
loope
mov
mov
mov
in
sub
pop
mov
lods
dec
push
out
xchg
scas
inc
adc
scas
push
mov
inc
aaa
mov
mov
fs
xlat
nop
mov
fs
cmp
call
cmp
es
and
stos
xor
xchg
xor
mov
fs
sbb
fimull
inc
loope
data16
sub
in
cmpsl
sarb
xchg
inc
jo
pop
add
lock
dec
pop
xchg
stos
dec
int3
sub
sbb
mov
inc
adc
inc
mov
push
cmpsl
sbb
js
hlt
jae
add
sbb
xchg
sbb
xchg
pusha
fldcw
and
or
jmp
adc
cmp
push
icebp
stos
outsb
dec
loopne
rcl
leave
pop
dec
sbb
sbb
pop
ret
adc
cmc
fnstcw
push
xchg
xor
add
cltd
add
mov
xor
push
push
clc
and
jecxz
out
out
or
dec
ds
mov
dec
lcall
iret
jecxz
neg
pop
psrld
hlt
xchg
nop
jb
inc
cmp
jae
shl
mov
das
push
lcall
adc
ja
icebp
popa
mov
mov
shrl
testl
cwtl
stos
jb
dec
fdivrs
dec
mov
mov
es
push
cli
sub
lock
pop
sub
out
lret
nop
mov
repnz
add
pop
inc
sbb
pop
clc
push
lcall
cmpsl
ret
jmp
cmpsb
adc
lea
fcompl
mov
fiadds
sub
inc
or
push
jmp
dec
xchg
cmc
adc
outsl
fisttpll
sub
adc
ret
xor
and
adc
dec
add
mov
out
sub
scas
sbb
or
or
fcomp
mov
lods
enter
jle
dec
cwtl
out
imul
loop
addr16
push
pop
test
es
aad
xchg
push
aas
stos
cmc
jb
mov
insb
inc
push
arpl
movsl
ret
pop
push
cmp
mov
mov
ljmp
aas
gs
je
fcmovbe
cmpsb
xor
pop
mov
iret
scas
xor
add
jbe
dec
jp
insl
cltd
sbb
mov
jno
jb
mov
or
nop
fcomp
add
sub
mov
xor
mov
shrb
mov
ss
ja
pop
or
lret
cmc
push
cmp
arpl
add
nop
mov
or
push
and
sub
pop
and
icebp
xor
loope
cmp
mov
bnd
loop
add
das
cwtl
pop
xor
adc
cs
cmp
jno
push
repnz
xor
mov
repz
pop
jecxz
mov
sbb
lods
pop
rep
inc
test
dec
fdivl
in
and
sub
mov
sahf
std
pop
xchg
popl
sub
push
test
inc
pop
mov
and
lds
ret
or
dec
xchg
mov
out
mov
cmp
scas
je
mov
jne
lret
sbb
idivl
add
in
jns
andb
dec
xlat
jl
in
push
sub
xbegin
sub
mov
lret
inc
cwtl
inc
lods
jp
int
test
add
sub
inc
pop
inc
ret
into
fstps
mov
fxch
cmp
xor
int
lods
mov
cmp
mov
and
adcl
sbb
das
jns
lcall
mov
ror
mov
mov
sbb
mov
sub
pusha
shrl
mov
stos
inc
shlb
jge
xchg
notb
jne
and
loop
aas
add
push
xchg
iret
or
inc
les
pop
mov
icebp
mov
dec
push
movsl
pop
pop
adc
jl
das
mov
mov
cld
shrl
cld
stc
arpl
inc
xorb
test
adc
dec
fldt
or
xchg
sub
pop
outsb
mov
jle
insb
jno
movsb
dec
push
add
aaa
repz
test
loopne
cmp
add
repz
sbb
mov
mov
sbb
into
xlat
pop
jbe
inc
addr16
sbb
lods
stos
jae
shlb
ss
and
jecxz
aad
pop
mov
add
fsubs
clc
insl
pop
sbb
xchg
ss
adc
ja
inc
rolb
adc
andb
xchg
adc
inc
and
or
pop
clc
nop
jo
push
repnz
rolb
mov
iret
xor
fcoms
lcall
into
mov
mov
jp
aam
popf
mov
movsl
inc
jne
xchg
dec
push
add
and
jno
jg
sub
mull
cmp
mov
xor
dec
sub
push
cmp
movsb
sti
jecxz
xchg
and
xchg
in
push
cmpl
xlat
mov
and
fmull
or
mov
lcall
jge
cli
jl
pop
jmp
sbb
test
sbb
push
add
cmpsb
enter
add
ret
addr16
jns
mov
mov
xor
repz
push
sub
repz
push
test
mov
xchg
fists
iret
sub
and
jbe
jo
jae
jmp
mov
in
insb
pusha
adc
pop
sub
jl
dec
and
cmp
pop
dec
jb
insl
mov
in
rcrb
jo
stc
stos
movq
data16
lret
das
in
bound
or
push
ja
push
scas
xchg
into
mov
cs
dec
pop
fwait
cmp
call
and
lods
sbb
push
aad
cmp
xchg
icebp
xchg
fbld
jne
pop
push
adc
cmp
loopne
add
jge
and
test
push
faddl
pop
enter
in
xor
out
adc
repnz
add
mov
jmp
adc
push
mov
sub
imul
cmp
imul
mov
inc
enter
and
in
cmp
pop
and
aas
pop
push
fidivrl
and
mov
pop
dec
sbb
mov
mov
mov
xor
movsl
sbb
mov
push
negb
enter
ret
sbb
xchg
gs
pop
pusha
mov
xchg
lcall
pop
mov
test
lret
push
in
test
sub
push
movsb
mov
ret
pop
lret
sbb
ret
scas
or
pop
sarb
in
mov
out
lahf
mov
jo
lahf
ret
mov
cmp
ret
call
ja
int3
dec
sahf
cmp
mov
add
xor
bound
xchg
test
pushf
xor
xor
std
test
mov
dec
xchg
sti
popa
adc
cmc
pop
pop
add
fwait
push
test
jle
pop
adcb
dec
push
out
xor
cli
sub
mov
std
or
jmp
js
inc
mov
cmpb
cltd
mov
sbb
pop
sbb
mov
mov
adc
xorl
push
bound
in
insb
fildll
idivb
lret
lods
pusha
lock
in
jge
test
xchg
lods
fbld
pop
bound
push
pop
out
out
add
das
dec
or
inc
push
daa
xlat
divb
popl
mov
and
daa
int3
mov
jae
mov
inc
push
adc
jb
lahf
ja
jl
adc
xor
jbe
jmp
les
jbe
cmpsl
or
mov
cmc
jo
mov
imull
vpclmulqdq
mov
dec
mov
sbb
or
cmp
mov
xor
inc
jmp
daa
jne
cmpsl
inc
push
and
xor
jo
and
shrb
test
pop
sub
mov
adc
stos
cmp
aaa
xchg
or
cmpsb
lods
push
pop
rcr
lea
cld
out
scas
mov
xor
pop
xchg
jns
mov
lods
shl
and
mov
mov
sub
testl
mov
aam
dec
test
sub
inc
mov
pop
gs
and
repz
shrl
sub
add
jmp
ja
imul
xor
inc
bound
jmp
inc
lret
pop
dec
stc
mov
lods
dec
sbb
mov
inc
out
push
sub
fldl
mov
rcr
cmp
xor
sbb
stos
lcall
push
out
fwait
add
loopne
sub
faddl
nop
fsubs
pop
outsb
out
ret
mov
movsl
mov
mov
xchg
adc
mov
ja
jb
loope
sbb
sarl
lret
aas
add
xchg
in
sbb
jne
arpl
insb
sti
aam
jp
jle
push
sbb
aas
out
ja
scas
addr16
xlat
xchg
fmull
int3
or
orb
push
sbb
pop
pop
jnp
into
dec
dec
test
out
in
cmpsl
sahf
loop
push
nop
lret
aad
xor
dec
jge
fisttps
xor
adc
jge
out
push
mov
stos
pop
mov
add
pop
jl
lret
cmpsb
sub
xchg
lea
aam
mov
and
ret
xchg
xor
pop
sbb
outsb
call
sbb
fdivl
push
mov
push
xchg
dec
andb
aad
pop
mov
lret
add
inc
pop
jbe
adc
jl
movsl
mov
mov
lret
hlt
xlat
push
loop
lcall
fsubl
aaa
dec
div
stos
shrl
in
sub
scas
sub
out
mov
ja
xchg
fs
iret
jmp
js
jno
inc
mov
je
sub
mov
mov
adc
and
stos
or
mov
push
movsb
dec
inc
and
mov
pop
icebp
xchg
rorb
cwtl
jge
and
mov
scas
and
push
js
push
fcompl
inc
xchg
mov
inc
mov
or
mov
sbb
repz
push
les
pop
fsubs
aam
pop
sbb
inc
ret
lahf
in
lods
add
stos
xor
dec
inc
cmp
mov
dec
outsb
mov
xorl
mov
inc
popf
pop
out
jae
mov
subl
in
or
out
or
push
int3
insb
fcmovne
dec
xchg
call
push
inc
jmp
push
lea
push
push
out
mov
adc
loop
cmp
xchg
mov
sbb
mov
mov
add
sub
aad
loop
rorl
dec
std
and
sarb
dec
ljmp
cmpb
inc
mov
pop
scas
mov
xchg
sbb
aam
sbb
xchg
xor
mov
scas
outsl
adc
push
mov
clc
push
lock
rol
lahf
add
jp
jmp
loop
xchg
icebp
cmp
rcll
xor
mov
ljmp
cmp
aad
shll
and
loop
subl
lods
inc
loope
in
aas
in
mov
or
lods
add
and
add
inc
jmp
add
inc
adc
clc
pop
ficomps
dec
out
inc
shr
xor
push
mov
xor
cli
sub
or
xor
mov
push
jno
jmp
lods
inc
inc
cmp
mov
mov
imul
or
mov
iret
cmp
or
aam
lock
and
dec
lds
add
cltd
pushf
in
sub
sub
outsb
pop
jg
cmp
adc
inc
inc
jns
push
ss
test
jp
ja
push
sti
or
pop
pop
push
jno
pop
xor
jg
insb
jae
cwtl
cmc
push
bnd
out
jmp
ljmp
jbe
mov
add
sub
jp
mov
loop
sub
mov
add
xlat
insl
mov
imul
out
push
xor
shlb
popf
push
mov
and
stos
jnp
sub
lahf
lock
xchg
and
outsl
mov
outsl
insb
xchg
icebp
xchg
cwtl
pusha
addr16
or
ds
cmp
lret
mov
mov
lock
dec
data16
ljmp
lods
dec
int
mov
mov
pop
outsb
loop
movsb
imul
jp
clc
fs
roll
or
cwtl
sbbb
inc
pop
mov
daa
popf
jmpw
mov
push
sub
dec
jge
movsb
mov
inc
xchg
inc
xchg
sbb
sbb
and
rcrb
dec
cld
dec
fwait
add
mov
mov
ljmp
add
rcrl
jne
push
cmpsl
mov
outsl
push
jge
xchg
push
adc
out
shr
out
mov
mov
cmc
pop
cmc
repnz
out
aam
stos
xchg
ret
aas
mov
hlt
xorb
les
jb
mov
scas
cmp
icebp
cmpsl
test
and
inc
cmp
push
adc
mov
and
fsub
pop
or
sub
or
loop
adc
loope
jecxz
add
xchg
pop
in
jg
fwait
test
cmp
fxch
hlt
add
movsl
cmp
stc
adc
add
and
mov
and
adc
inc
fisttps
hlt
ss
push
mov
stos
cmp
mov
iret
ret
notl
pop
add
lahf
push
fcoml
ret
scas
cmpsl
mov
mov
dec
jg
pop
dec
nop
xchg
iret
push
cmp
xor
inc
jno
inc
repz
hlt
mov
mov
mov
jmp
xor
movsb
sub
jmp
rcrb
rorl
jg
sbb
out
add
mov
mov
push
xor
and
pop
movsb
bound
hlt
mov
dec
pop
hlt
clc
fildl
xchg
jb
lea
pop
pop
jge
clc
call
mov
out
add
xchg
subb
hlt
xchg
rcrl
ret
jg
stos
rorb
fwait
mov
jne
inc
lcall
enter
cmp
out
lock
daa
mov
fisttpll
xorb
daa
jae
pop
mov
sbb
scas
mov
loope
push
mov
mov
fcomps
in
push
mov
es
push
mov
repz
mov
testb
push
lods
js
mov
lret
lock
dec
pop
adc
rclb
jg
das
inc
adc
mov
mov
ficompl
jnp
mov
ret
push
shlb
cmp
jl
jns
je
mov
ljmp
mov
in
dec
sub
leave
cwtl
push
pop
rorb
loopne
js
or
or
push
loope
mov
hlt
mov
enter
scas
dec
sbb
mov
rcrb
gs
sbb
push
iret
in
repnz
int
and
dec
push
ljmp
push
sub
gs
sti
sub
dec
xchg
mov
popa
and
dec
pop
bound
push
mov
fldenv
mov
faddp
das
mov
movsb
and
dec
pop
adc
js
cmpsb
dec
out
lcall
pop
push
xlat
jmp
ds
pop
hlt
xchg
movsb
daa
stos
jp
lods
insl
cli
xor
push
dec
call
sub
mov
stos
dec
push
push
outsb
xor
sbb
xchg
clc
pop
bnd
sub
mov
inc
repz
das
fildll
arpl
mov
stos
push
inc
push
pop
xchg
ja
jmp
in
cld
mov
mov
mov
push
inc
push
subl
lcall
lret
pop
aam
ds
out
pop
lret
mov
call
ljmp
cmpsb
or
enter
adc
stc
xchg
fdivrl
pop
das
das
adc
jbe
push
and
dec
fnstcw
cld
loopne
sbb
sub
xchg
jns
test
rcl
jno
push
lea
imul
xor
push
cs
shrb
add
filds
mov
pop
repz
mov
lret
xor
adc
fwait
pusha
cmp
dec
pop
pop
out
jle
jo,pt
cld
ljmp
add
ja
push
sub
incb
mov
mov
nop
lret
dec
or
ret
lret
ja
daa
jbe
fiadds
mov
push
xorl
loop
sbbb
cmp
lcall
cmpsb
clc
pop
stos
sbb
mov
cs
fstl
enter
lret
pop
popf
xor
popaw
rcrb
and
mov
cmp
cmp
inc
pop
jae
inc
sbb
jnp
adc
jns
testb
pop
dec
xchg
pop
jmp
in
push
lret
cmp
mov
aaa
jmp
pop
repz
arpl
lea
inc
cli
and
and
aam
push
jecxz
push
pop
pop
movsb
repz
pop
insb
add
mov
pushf
clc
scas
imul
push
or
push
mov
scas
mov
push
sub
sbb
mov
icebp
pusha
pop
adc
dec
daa
inc
cmpsl
lret
rcl
popf
dec
outsl
sahf
pushf
adc
mov
inc
fwait
cld
add
push
loope
arpl
sbb
movsb
rclb
les
inc
stos
xor
ja
pushf
mov
dec
mov
jecxz
stc
cmpsl
popa
xor
xlat
repz
hlt
cmpsl
adc
into
ss
sbb
enter
and
lret
shlb
push
sbb
jge
mov
dec
inc
repz
scas
fimuls
sub
xchg
call
test
xchg
pusha
jno
icebp
pop
lret
mov
cmpl
add
outsl
jp
sub
idiv
mov
push
xchg
scas
addb
lret
cmpsb
add
mov
loop
xchg
rcr
and
mov
stc
imull
adc
mov
jb
cmc
lods
xlat
cmp
mov
jle
lea
cmp
jb
push
and
sbb
fisubs
movsb
adc
in
sub
aam
xor
loope
dec
xor
cmp
sbb
sbb
fwait
xchg
adc
xchg
pop
xchg
dec
pushf
mov
cmp
push
fdivrs
mov
pop
test
push
push
addl
icebp
imul
gs
or
mov
sbb
cltd
push
dec
fstps
jp
add
out
xlat
push
mov
pop
adc
shll
hlt
cmp
jo
in
js
sub
push
inc
ss
orb
cmp
sub
dec
icebp
sti
imul
jo
add
aas
add
mov
cmp
jp
imull
push
sahf
ss
cmp
pop
mov
loopne
mov
movsb
inc
int
and
loopne
push
cld
dec
cmp
push
mov
xor
mov
lret
lods
xor
aas
pop
mov
fwait
imul
pop
lea
fdivrs
mov
cmpsl
cli
decb
push
mov
test
sub
ljmp
jae
jecxz
loopne
loopne
fwait
jns
cmpb
cmpsl
fmul
movsb
test
lods
push
mov
sub
mov
pmullw
mov
mov
rorl
xor
jg
sub
inc
mov
and
sahf
movsb
je
mov
leave
outsl
test
sbbb
push
lods
push
mov
add
movsl
xchg
mov
ljmp
add
lods
fstpl
inc
mov
ret
movq
enter
loope
push
add
daa
loop
xor
mov
sbb
in
xor
loope
fnstsw
inc
jmp
xchg
aam
fldenv
xchg
insb
lods
popf
ret
xchg
pusha
std
in
or
stc
pop
subl
fwait
xlat
sbb
pop
and
xor
cmp
xchg
xchg
sbb
pop
jp
and
or
imul
clc
pop
gs
jmp
lock
adc
divl
push
jg
adc
adc
and
cmpsl
add
pop
int3
cwtl
fwait
cmpl
cmp
mov
adc
mov
repnz
lcall
leave
aad
icebp
pop
loop
jae
bnd
pop
and
shll
int3
inc
insb
ret
and
shlb
jecxz
push
test
sbb
mov
or
cmp
lahf
push
jmp
cs
mov
adc
dec
inc
outsl
and
ret
icebp
jmp
fcoml
mov
sbb
adc
lret
aad
and
push
cmp
ds
adc
fisubs
test
jle
incb
pop
mov
push
scas
push
dec
in
push
xor
icebp
jp
iret
mov
sbb
and
mov
pop
mov
ficoml
movl
jno
sub
rcll
cmpb
mov
jp
jns
xchg
leave
xor
and
popa
and
inc
fnstcw
enter
fiadds
pop
mov
dec
mov
or
pop
ss
pop
les
inc
xlat
dec
and
sahf
outsb
divb
movsb
iret
stos
mov
sahf
lcall
push
sarl
mov
int3
mov
inc
and
nop
add
adc
aaa
xchg
mov
in
fstpt
fdivrl
sbb
test
push
cs
adc
clc
adc
fcoml
std
inc
mov
ffree
outsb
pop
cli
mov
dec
test
nop
cmc
out
ja
lea
sti
fs
ljmp
lods
xor
inc
pop
movsl
addb
push
jecxz
push
push
sbb
jmp
jo
movsl
pop
xor
ljmp
dec
mov
xor
lock
push
adc
adc
xor
cmovb
sbb
es
fisubs
in
mov
mov
lds
xchg
lcall
push
dec
inc
push
or
mov
pop
push
nop
push
cmp
adc
jns
mov
sbb
sbb
sarb
lock
popf
test
adc
scas
mov
mov
jne
or
sub
insb
push
in
pop
sbb
fnstcw
gs
jg
dec
cmpsl
inc
jb
mov
stos
push
das
negl
fistpl
mov
into
push
rorl
mov
dec
mov
xchg
sub
push
nop
cltd
sti
xchg
cmp
cli
daa
cmp
adc
out
movsl
les
shl
adc
jae
mov
push
or
and
les
icebp
lock
mov
xchg
cwtl
xor
pop
adc
cmpsb
jmp
loop
mov
fisubrs
mov
push
push
rcrl
bound
mov
xlat
ljmp
lea
xchg
and
pop
pop
movsb
fisubrs
outsb
mov
sub
and
push
fs
ret
in
callw
add
rorb
jno
pop
push
aad
es
mov
js
mov
test
mov
inc
sarb
sub
pop
push
push
call
pop
jle
or
inc
cld
int
fs
popa
inc
or
icebp
ret
jbe
cmpsb
pop
jmp
xchg
outsb
addb
push
pop
out
insb
out
mov
clc
jecxz
imul
imul
lods
repnz
ja
inc
xchg
inc
mov
adc
into
ja
shrb
inc
int3
and
push
push
lret
push
cmp
mov
xor
rorl
lret
inc
xchg
subb
ret
sub
fnsave
push
add
mov
lret
push
adc
mov
lahf
std
mov
dec
cmp
sub
dec
or
subb
outsb
adc
loopne
rolb
insb
stc
imul
scas
js
or
mov
mov
aad
aam
xchg
hlt
cmp
sbbb
jmp
mov
add
sbb
cwtl
sahf
jno
pop
pushf
sbb
movswl
inc
lcall
and
cltd
jo
fisubrl
mov
mov
inc
cmp
and
js
dec
adc
xchg
dec
cmp
xchg
aas
cmpl
add
mov
mov
push
outsb
inc
mov
pop
pop
pop
inc
pop
mov
push
out
add
mov
xchg
xchg
in
dec
and
cmc
aas
out
mov
cmp
lcall
leave
cli
outsl
dec
dec
and
int
dec
dec
mov
xabort
push
cmp
dec
add
pop
push
inc
ds
xchg
adc
push
add
push
jae
pop
mov
jmp
lcall
int
sub
jecxz
pop
mov
test
and
clc
hlt
push
jmp
rorb
cmc
mov
sub
xlat
stc
notb
test
pop
pop
jno
cmc
icebp
add
push
shll
out
mov
mov
xchg
rorb
ja
jg
fdivrs
jne
mov
repz
lock
ljmp
jmp
xor
mov
ss
bound
add
jg
out
adc
adc
add
and
push
dec
icebp
lock
cltd
mov
jp
rolb
push
fxch
test
aad
call
xor
int3
and
xchg
lock
scas
insl
sarb
jbe
insl
push
inc
push
out
mov
aad
pop
push
outsl
sarl
mov
cmp
adc
into
loope
stos
jbe
mov
push
xchg
je
sbb
push
mov
xchg
pop
insl
clc
cmpl
pop
imul
imul
in
inc
add
in
dec
ljmp
jbe
mov
jnp
push
pop
jo
xchg
adc
xor
out
push
jae
aad
bound
push
adc
mov
addr16
pop
f2xm1
jns
lods
dec
ds
cmc
fistl
sbb
leave
repnz
mov
push
dec
jae
push
outsb
jb
mov
jne
pop
lret
stos
xchg
int3
imul
mov
mov
cwtl
jbe
aas
popa
imul
mov
aam
jno
cs
sbb
push
cmp
mov
dec
outsl
xchg
add
popa
mov
push
dec
lods
jne
mov
sarl
les
xor
pop
pusha
and
aad
jl
imul
call
pushf
push
jno
jmp
pop
jnp
daa
inc
push
dec
push
sarl
xor
adc
mov
addr16
adc
mov
inc
andl
pop
inc
fdivs
mov
mov
test
pop
fmuls
ja
pop
mov
gs
lret
imul
cltd
fisttpll
out
lods
or
sub
negb
lds
dec
xchg
and
cli
fcmove
int
mov
and
cltd
out
push
jno
fs
aad
xlat
cmp
jnp
test
xchg
outsl
pop
fstpl
fisubs
mov
sti
les
sbb
xchg
dec
push
sbb
jg
mov
mov
cld
jecxz
push
pop
cmp
call
jle
std
popf
fbld
stc
in
sbb
push
pop
mov
push
lahf
cmp
cmp
sti
sbb
aam
or
push
addb
mov
cs
leave
insl
sti
sbb
pop
repnz
xchg
jecxz
and
pushf
mov
mov
xchg
in
iret
fdivr
hlt
call
movsl
adc
add
inc
xor
nop
mov
or
mov
sbb
insb
imul
jne
add
cs
jne
mov
inc
in
shrb
push
sbb
xchg
mov
adc
or
mov
adcl
xchg
test
stos
aad
jne
dec
mov
scas
pop
in
iret
xor
jae
sbb
sbb
out
cld
cltd
or
xchg
cmpsl
call
mov
inc
xlat
jae
adc
les
cmpsb
mov
jle
xchg
mov
jns
and
icebp
stc
popa
call
xor
rcrl
push
sbb
dec
mov
cmp
aad
ljmp
xchg
cmp
mov
test
stc
dec
sbb
and
dec
inc
inc
push
cltd
add
scas
mov
push
pop
xor
imul
shrb
ret
mov
xchg
and
add
add
inc
add
jle
sbb
jl
test
es
push
inc
imul
xchg
push
and
mov
cwtl
das
addl
lret
arpl
mov
aaa
inc
cmc
mov
das
xor
xchg
sub
cwtl
sbb
sub
push
out
movsl
pop
lods
repnz
ficomps
pusha
or
lock
sahf
mov
adc
sub
je
adc
fimuls
fisubs
cmpsb
rcrb
jge
lcall
insb
ret
les
add
jmp
adc
rclb
bound
rclb
fimull
pop
ja
sub
lods
testb
cmp
push
scas
xlat
push
shll
lea
lea
les
mov
outsl
or
and
mov
jg
mov
pop
outsl
sub
addl
scas
dec
mov
or
mov
test
out
inc
lret
sarl
adc
iret
inc
jne
out
push
push
cmp
lret
jne
cmpsl
xor
incb
andl
push
and
fcmovnbe
aad
cmc
sub
mov
sub
jo
stos
cmc
xchg
adc
test
dec
mov
lcall
sub
ret
xchg
pusha
clc
fsub
adc
pop
pop
sub
dec
fucom
pop
sub
and
mov
iret
jno
lret
sbb
lods
or
mov
push
or
mov
xor
mov
mov
pop
jo
or
mov
add
ds
out
inc
mov
in
fwait
and
sub
push
int
fwait
aas
push
cmpb
out
cmp
bound
push
or
sti
mov
pop
sub
nop
push
cmc
int
add
outsb
cs
fcmovb
rorb
divl
mov
mov
pop
cmp
mov
popa
push
jl
popf
push
bound
pop
xchg
adc
psllw
ljmp
mov
cmc
cmp
test
push
or
mov
mov
sub
in
jo
leave
push
mov
fidivrl
cmpl
jecxz
nop
mov
mov
lea
fimuls
rcl
sub
cmpsb
cmp
fwait
xchg
and
int
mov
mov
addl
lahf
fidivrl
ficoms
cmp
xor
outsb
pop
leave
jmp
mov
pop
mov
sbb
cmp
cmp
add
scas
cwtl
xchg
add
mov
paddsw
xchg
ret
mov
or
es
mov
imul
je
repz
dec
xor
inc
stos
arpl
lds
jg
xchg
xchg
cltd
xchg
add
pop
dec
jecxz
loope
push
in
je
sar
cli
mov
loopne
sarb
lods
scas
push
scas
imul
cmp
icebp
mov
lcall
xchg
fwait
pop
jns
pop
lcall
sub
inc
lods
pushf
push
imul
jle
faddl
mov
cli
out
mov
sbb
test
jmp
push
daa
xor
sub
xchg
jb
and
dec
mov
cmp
pop
jnp
pop
lea
loope
sahf
das
xorl
movb
int3
ret
push
sbb
add
or
sbb
adc
cli
je
into
out
negb
inc
lret
cmp
cld
ljmp
int
or
lds
adc
dec
stc
xor
jne
xlat
adc
add
jg
pop
sahf
jbe
cmpsl
xor
jae
ss
cli
mov
mov
add
out
arpl
cmpsb
orl
inc
cmpb
pop
add
adc
addr16
js
cmp
in
fcoms
fistpl
pop
pop
inc
push
jo
decb
dec
bnd
cmpsb
pop
adc
pop
aad
and
xlat
addr16
mov
movsl
pop
lock
ljmp
fimull
mov
std
loopne
rcrl
mov
mov
xchg
xor
mov
jae
jno
scas
scas
xlat
clc
hlt
mov
push
jae
jmp
lahf
or
ss
and
mov
adc
es
and
add
cltd
xchg
xchg
add
mov
mov
cwtl
mov
sbbb
push
subl
and
xchg
jbe
daa
loop
stc
or
int3
mov
inc
xchg
dec
xchg
jp
add
filds
mov
push
fildll
adc
clc
in
adc
daa
xor
mov
dec
lds
jmp
and
lret
push
orb
xchg
jecxz
ja
in
faddl
or
cmp
xor
fnstsw
mov
sbb
sbb
sarl
call
add
imul
push
inc
aas
or
ss
xchg
fistpll
xchg
adc
sub
xor
aas
fnsave
scas
cltd
push
leave
push
rcll
rcll
outsb
repz
add
gs
sub
mov
xchg
pop
and
cmpsb
cmp
push
aaa
int3
sbb
pop
mov
mov
cmp
in
inc
inc
dec
or
or
pusha
cmpsb
lock
test
ror
pop
mov
shl
daa
mov
jmp
es
scas
test
or
mov
xor
jbe
leave
xchg
in
stc
gs
ret
cmp
mov
inc
xor
adc
cld
ficomps
cmc
fsub
mov
mov
roll
lahf
jl
mov
or
popf
xor
mov
xchg
cmp
push
mov
rcll
sub
lret
mov
pop
fwait
pop
lods
push
sti
sub
mov
lods
iret
dec
push
mov
shlb
add
mov
jp
xor
mov
dec
dec
notb
push
inc
xlat
sar
push
mov
mov
push
xlat
out
sub
mov
cmp
pop
out
push
cld
adc
and
fidivs
mov
repnz
scas
sbb
ljmp
push
add
lock
and
push
aaa
mov
push
and
xor
mov
popa
jecxz
mov
mov
sbb
or
and
pop
out
lock
jg
cmpsb
or
leave
lods
or
iret
bound
mov
or
push
adc
or
push
pop
in
or
mov
cltd
cmp
call
xor
test
lock
mov
jecxz
or
int3
call
xor
xchg
and
xor
dec
cmp
sbb
add
push
in
and
or
rcrb
dec
rcrl
int3
aad
pop
in
cmp
in
add
enter
je
popf
out
clc
adc
sbb
push
scas
sbb
mov
add
ret
sub
sbb
test
inc
test
test
into
mov
push
jne
xor
xor
sbb
fldt
mov
cs
cmp
jno
mov
daa
sbb
imul
icebp
rorl
push
and
add
mov
push
sahf
sti
xchg
loope
cmp
pop
insb
ficompl
es
sub
hlt
test
out
loope
cmpsl
cli
xor
lret
setnp
jg
jmp
addl
mov
cmp
pop
push
in
dec
test
adc
add
xor
loope
mov
ret
ljmp
push
jbe
adc
in
cltd
pop
sbb
sub
adc
and
insl
xchg
sti
sub
into
mov
or
xchg
dec
aam
das
out
pop
sub
dec
repnz
clc
or
mov
sub
inc
js
iret
cmp
xchg
ret
xor
insb
mov
push
rorl
xlat
aam
xchg
mov
shlb
mov
push
hlt
push
xlat
es
jle
mov
mov
orb
lock
push
jns
mov
mov
hlt
xorl
jno
jg
test
mov
or
cmp
lcall
mov
arpl
dec
inc
cmp
mov
cltd
jae
leave
jae
repnz
cmc
add
pusha
pop
sbb
lea
dec
movsb
inc
fnsave
sbb
enter
mov
sbb
cltd
popf
faddl
xchg
test
mov
imul
and
jmp
xor
push
lods
pop
and
lret
push
pusha
fstl
adc
out
repnz
mov
out
ud2
pop
ja
hlt
lahf
dec
addr16
in
fstpt
mov
xor
clc
mov
icebp
cmp
lds
mov
addl
cmp
ret
cld
xorb
sbb
and
int3
mov
xchg
fnstsw
cli
xchg
mov
fwait
sub
push
insl
adc
out
repz
mov
xor
gs
jb
jbe
xlat
ret
sub
ss
xor
jns
jl
test
xchg
mov
mov
mov
mov
bound
xor
int
addr16
insb
cmc
cmp
and
adc
mov
test
jl
xchg
adc
dec
or
test
xchg
mov
and
out
loopne
fisubrl
cs
push
sub
js
out
shll
adc
add
pop
fcoms
push
xchg
mov
or
shll
bound
add
and
movl
ljmp
mov
cmp
fdivrp
add
jno
push
out
lods
add
xor
dec
add
mov
mov
in
les
and
out
mov
xor
pop
mov
mov
inc
xchg
mov
lds
lods
inc
arpl
mov
or
adc
cs
imul
out
stos
lret
aas
pusha
jp
xchg
enter
pop
stos
das
shl
cmp
xor
js
shl
xchg
sub
mov
cmp
push
and
fcomip
pop
enter
rcrl
stos
mov
xchg
mov
out
cmpsb
push
das
aas
and
jp
test
ja
insl
push
mov
adc
pop
cmpb
jne
imul
mov
inc
cmpsl
rorl
pop
nop
cmp
lods
in
sbb
lret
test
mov
push
push
jno
xor
jne
sbb
outsb
mov
orb
lea
inc
pop
jl
inc
ss
xchg
mov
and
loope
mov
xchg
inc
movsb
jg
xchg
js
mov
mov
mov
pop
mov
and
pusha
cmp
inc
aam
xchg
mov
repz
and
mov
idivb
sti
dec
outsb
std
arpl
ds
push
sbb
and
add
outsl
or
enter
push
sbb
leave
jnp
add
fld
jnp
jge
jle
xchg
jo
fwait
adc
mov
add
xchg
pushl
push
popf
mov
inc
jg
jp
push
jecxz
ss
mov
jb
push
ret
mov
mov
xchg
jmp
fstps
mov
mov
xor
mov
cmpsb
xchg
cmpsb
popf
cmp
orb
jl
aam
popa
xchg
bound
das
or
inc
imul
faddl
or
es
add
xor
fstps
mov
cld
sub
fcomip
in
and
imul
sub
jmp
push
jo
sahf
add
xchg
inc
jnp
add
and
fldcw
cmp
loopne
push
xor
xchg
fbstp
sub
jno
xor
jge
inc
mov
xchg
lods
jecxz
pop
lods
jle
jmp
add
sub
jg
iret
mov
incb
xchg
divl
and
jmp
mov
pop
mov
xchg
push
or
repnz
jl
ret
or
dec
pop
test
xchg
pop
push
push
negl
sbb
pop
test
dec
outsb
mov
adcl
xchg
pop
lea
lods
insb
stc
xor
mov
dec
pop
gs
pop
dec
mov
mov
xchg
lock
leave
movntq
out
push
sub
mov
popl
or
rcr
in
dec
xor
and
gs
lcall
ss
cmp
jecxz
movsb
iret
mov
outsl
mov
sti
pop
mov
ret
push
pop
gs
cmpsl
shr
push
stos
iret
mov
js
arpl
clc
mov
fisubrs
lds
aad
add
add
push
lret
gs
cmp
and
xor
inc
pop
adc
mov
lock
jg
das
lods
dec
add
dec
mov
sbb
add
mov
test
mov
enter
sbb
mov
add
jecxz
outsl
lds
cmc
mov
jno
mov
lcall
int3
sub
pop
xchg
cmovnp
call
in
push
mov
fimull
mov
scas
fwait
mov
mov
sbb
mov
push
popa
push
adc
sti
int
test
jge
jge
sarb
xchg
push
bound
arpl
cmp
adc
cmc
cmp
loopne
leave
int3
and
add
pop
and
stos
idiv
test
pop
mov
aam
pop
stc
lods
leave
mull
sbb
sbb
lock
inc
pop
shll
xor
mov
aas
pop
je
sbb
jb
rcrl
pop
jno
leave
inc
fnsave
cmp
and
jae
in
outsl
fists
cmp
cli
fisubrl
pop
in
fcomps
push
mov
in
mov
push
test
jmp
mov
inc
mov
adc
int3
test
dec
dec
mov
repz
sub
sub
subb
pushf
push
lcall
mov
aam
mov
jg
or
pop
jmp
stos
sahf
push
xor
mov
cli
mov
add
sub
hlt
sbb
adc
mov
in
dec
inc
jp
jg
nop
mov
fmuls
push
mov
sub
xor
jg
dec
xchg
jmp
xor
and
int3
mov
scas
inc
clc
pop
fdivl
inc
shrl
fs
les
fildll
loope
mov
cld
jns
sub
out
sarb
jno
clc
pop
cmp
mov
ss
cltd
fwait
pop
cltd
push
dec
mov
cmp
cmpsl
mov
outsb
push
out
daa
cmp
mov
jnp
and
scas
cmc
add
dec
pop
adc
loope
nop
or
inc
sub
xor
sbb
and
aas
cmp
stc
jbe
and
incb
cmp
int3
jne
xorl
jb
outsl
mov
int
loop
shll
sbb
push
nop
xchg
loopne
clc
leave
xchg
inc
sbb
cmp
leave
out
cltd
and
aas
addr16
adc
mov
fwait
and
mov
mov
adc
inc
repnz
popf
cmp
jno
jge
ror
sub
xchg
in
out
data16
push
aad
mov
mov
sub
repnz
and
lock
negl
xorl
pop
inc
aaa
inc
orl
loop
in
lods
pop
test
mov
xlat
imul
jne
enter
dec
cmp
fidivrl
in
xchg
adc
add
xchg
dec
inc
xor
jg
lahf
cmp
add
stc
ficoml
outsl
insl
xchg
xchg
xor
pushf
dec
shr
pop
sbb
mov
mov
and
pop
push
cwtl
jno
iret
call
mov
insb
xor
xchg
loop
fwait
outsb
dec
lods
jno
inc
cltd
pop
or
out
xor
jns
xchg
mov
mov
sbbb
ret
mov
cmp
jg
gs
mov
movb
scas
inc
in
jp
pop
out
aam
popf
mov
into
mov
xlat
xlat
out
mov
add
andb
jl
movsb
ljmp
aaa
lods
scas
push
nop
ss
pushf
sbb
and
fcmovnbe
lods
add
jne
cmp
ss
mov
lahf
lds
das
aas
dec
pop
not
adc
dec
jne
adc
pop
fistps
mov
inc
lods
xchg
inc
dec
jl
out
inc
test
or
add
or
imul
stos
pusha
movsb
enter
lds
inc
sub
adc
mov
inc
mov
jne
pushl
out
push
cmp
push
adcb
mov
jl
push
and
xor
adc
inc
pop
sbb
xchg
loop
test
jb
test
jmp
mov
call
pushf
cld
xchg
mov
mov
add
and
cli
je
and
push
adc
lea
sarb
mov
sbb
xor
icebp
into
pop
inc
ss
aaa
jno
xor
hlt
mov
out
lods
lcall
das
pop
jl
aam
sub
jns
inc
mov
fstpl
lret
xorb
orb
lahf
xor
fs
leave
fnstsw
inc
sub
outsl
inc
mov
rcrl
xchg
push
sbb
cs
ficoml
push
mov
xchg
xor
insb
mov
mov
fs
mov
shl
inc
fbld
add
jl
cmp
das
popa
pop
xchg
lcall
insb
jp
inc
lret
test
mov
add
mov
xor
cli
fdivrl
sub
mov
loope
cmp
inc
lock
xchg
jmp
jbe
ret
into
lcall
int
mov
cmpl
out
sti
lods
fwait
inc
rcr
sub
xchg
repz
out
sbb
mov
inc
mov
xchg
test
mov
and
xchg
jmp
cs
lret
sbb
clc
jnp
arpl
cmpsl
orb
xorl
cmpsl
in
in
or
mov
dec
mov
mov
add
xor
lock
and
dec
xlat
xchg
fsub
xchg
test
pop
repz
jmp
sub
pop
mov
dec
in
inc
push
and
xchg
popf
ds
sarl
push
pop
or
dec
aam
lock
pop
sub
cmp
mov
test
xchg
jle
or
xchg
push
sbb
jmp
data16
nop
push
int
pop
lods
dec
xor
push
addb
xchg
sub
cld
jle
out
xor
mov
shrb
push
gs
test
mov
testb
jle
mov
and
mov
dec
sahf
mov
sbb
mov
adc
xchg
pop
or
pushf
dec
jbe
push
push
xor
lcall
call
mov
jb
stos
mov
pop
mov
dec
jg
and
pop
push
cmp
cli
cmp
xchg
or
and
std
insl
in
jle
popa
pop
cli
lock
in
and
push
cmp
in
and
js
add
enter
sbb
cld
push
stos
inc
cmp
dec
xchg
and
out
popf
out
lods
js
add
sub
mov
mov
add
sbb
mov
and
sub
cmpb
out
jp
ss
sbb
pop
sub
adc
jge
cwtl
mov
adc
xchg
add
out
pop
sbb
addb
out
cmpsb
xchg
mov
pop
jge
ja
jge
adcl
add
cli
mov
jb
push
into
mov
mov
cli
push
pop
jl
mov
sbb
and
loopne
outsl
sub
jbe
insb
jnp
fisubl
jecxz
popf
jo
repnz
add
and
cmp
add
cld
les
jl
scas
mov
out
std
mov
shll
cli
enter
mov
jg
shlb
mov
push
sbb
in
sbb
jmp
pop
xor
in
testl
lahf
mov
gs
or
fwait
stos
cld
xor
pop
cmp
push
dec
push
insl
rcr
cltd
xor
in
into
xchg
scas
adc
mov
mov
cmp
cld
inc
push
push
fcoml
inc
pop
cmp
pop
adc
mov
adc
jle
pop
outsl
xor
xchg
scas
sub
jae
xchg
xor
adc
inc
loope
xor
mov
ss
mov
shlb
lret
add
loop
andl
jp
jbe
addr16
enter
imulb
adc
aam
and
and
data16
jo
loope
or
ljmp
or
sahf
or
repnz
mov
popf
lcall
ljmp
mov
stc
out
pop
outsl
das
mov
adc
dec
jns
mov
sbb
mov
xorl
mov
adc
pop
jmp
dec
scas
addr16
out
outsl
std
loop
mov
movsl
add
add
jmp
inc
xchg
and
cmpsb
xor
jns
lods
cmp
test
cmp
dec
push
push
jae
mov
popa
push
ja
addr16
cmp
pop
outsb
push
push
sbb
pop
shrb
mov
lret
adc
pop
pushf
mov
and
es
xor
sub
lea
mov
push
pop
push
orl
movsb
sub
les
or
arpl
loopne
or
or
xor
jle
ret
or
pop
mov
jb
movsl
lea
pop
and
test
push
xor
mov
mov
jg
xchg
jae
jle
lahf
sbb
inc
in
popf
lret
xchg
xchg
add
push
xor
adc
movsl
mov
cli
std
inc
insl
ja
iret
mov
in
or
xor
and
xorb
movsl
psadbw
iret
and
je
stc
mov
mov
xlat
cmp
lcall
inc
sbb
mov
xchg
sbb
fmuls
mov
ret
popa
xchg
cwtl
push
sahf
movsb
mov
das
push
xchg
and
rcr
popl
arpl
cwtl
gs
xor
cld
xchg
cmc
insb
xor
push
mov
add
out
add
dec
xchg
je
call
push
jnp
pop
pop
inc
fisttpll
and
cwtl
sarb
mov
pop
jns
xor
cmp
aaa
shlb
cld
sub
jnp
inc
gs
dec
shrb
push
out
jns
out
add
mov
cmpsl
bound
cmc
jae
dec
or
addr16
pushf
jo
or
clc
sbb
mov
pop
sbb
jecxz
xorl
xchg
adc
xor
pop
popf
jp
int
insb
dec
repnz
adc
leave
mov
mov
dec
nop
sub
fstpl
jg
setns
faddp
add
stos
sub
pop
cwtl
in
mov
sbb
push
imul
jp
jge
stc
out
mov
xchg
int3
pop
pop
es
mov
jle
cmc
std
test
push
mov
in
sarb
jno
cmp
sbb
mov
fcomip
aaa
scas
cltd
mov
fwait
adc
fcom
sbb
adc
or
insl
fcmovbe
adcl
shll
mov
sub
std
roll
test
dec
imul
dec
mov
call
push
adc
dec
daa
ret
push
mov
cli
rorl
in
or
scas
xor
jo
js
or
mov
outsl
pop
xor
pop
sti
mov
subl
push
inc
bound
int
or
sub
fcomip
fwait
push
testb
stos
ret
lahf
movsl
jmp
push
inc
mov
lods
lahf
and
cmpsl
fcoms
or
arpl
shll
cmp
mov
aas
test
sub
lret
in
jg
or
add
sbb
dec
inc
lret
mov
enter
xor
mov
aam
bound
or
cmp
push
jb
stos
mov
insl
dec
push
mov
cli
push
cmp
jle
cmp
loope
repz
mov
mov
mov
xchg
loop
push
dec
in
jae
sub
lahf
mov
pusha
xor
aaa
cmpsb
into
cmc
lods
sbb
rolb
sub
add
jnp
mov
dec
mov
jnp
pop
sahf
aaa
fwait
pop
aaa
out
mov
dec
stc
inc
scas
in
call
aas
outsb
jecxz
pop
dec
inc
pop
push
and
dec
or
push
pop
dec
sbb
fisubrl
loopne
les
stos
lea
pop
xor
cli
jp
daa
sti
mov
cs
sbb
mov
push
adc
add
mov
xor
jge
sub
icebp
xor
add
leave
xor
scas
jae
cmp
xor
stos
add
mov
add
cli
scas
sarl
iret
mov
dec
mov
cs
pop
mov
push
fwait
in
push
xorl
sub
pop
pop
xorb
cwtl
jae
cmpsb
cmp
inc
cmpsb
mov
ret
mov
sahf
cmp
inc
pop
lea
mov
sub
rcll
add
cwtl
add
enter
dec
adc
ds
adc
jge
add
cwtl
scas
mov
xchg
lds
sub
fildll
cmpsl
in
jle
aad
mov
inc
dec
xor
mov
push
add
jo
mov
sub
ljmp
push
push
scas
jo
mov
call
jecxz
inc
fdivrp
adc
and
mov
xchg
adc
mov
mov
pop
dec
in
lea
scas
orl
adc
int3
dec
dec
ds
push
mov
inc
scas
cwtl
popf
pop
and
aas
decb
shlb
push
push
or
adc
mov
ds
pop
pop
repz
mov
imul
cmpsl
je
cmc
das
or
jb
mov
xor
iret
imul
test
sbb
jecxz
mov
stc
jne
cmp
or
xchg
scas
add
dec
dec
jnp
scas
call
jmp
dec
mov
clc
aad
mul
stc
push
mov
inc
inc
mov
push
push
int
stos
insl
pop
push
mulb
jmp
mov
filds
sub
sub
stc
and
dec
dec
js
scas
mov
call
stc
pop
in
and
ja
ret
popf
xor
jmp
push
outsb
sub
mov
push
xchg
loopne
jmp
rorl
jb
mov
in
push
leave
ds
xor
sbb
add
cmp
nop
shrl
jne
fs
roll
pop
dec
into
adc
call
push
push
jne
push
lret
popl
scas
jl
mov
aaa
sub
adc
test
xchg
cli
sub
mov
jmp
popf
stos
pop
cmp
ret
leave
push
cmp
or
syscall
mov
push
outsb
inc
xchg
dec
sbb
sub
xchg
out
scas
int3
scas
in
loope
and
cli
add
shr
lock
cmp
jb
mov
loop
xchg
inc
into
lea
ret
dec
sub
sbb
xchg
sub
rcll
or
data16
lret
and
mov
enter
fisttps
ret
push
cmpsl
repz
lea
add
addb
pop
mov
sti
dec
test
sarl
fistl
sub
and
or
loop
mov
mov
fs
mov
fcoml
xchg
sub
xchg
sbb
or
jne
mov
scas
dec
mov
test
pushf
push
inc
add
jno
jo
push
lods
insl
adc
push
cmpsl
fcomps
pop
repnz
xor
xchg
jmp
sub
push
jae
fnstenv
xchg
xlat
or
lods
xor
and
es
in
add
test
mov
nop
pop
icebp
push
sahf
sub
in
out
lea
fstpt
sub
jl
scas
inc
outsl
je
clc
in
out
lret
pop
imul
adc
push
repnz
call
adc
jae
fstp
adc
mov
mov
scas
adc
adc
inc
mov
jmp
inc
pop
mov
or
mov
jbe
or
cmp
xchg
movsb
imul
sub
out
add
jg
adc
lret
push
out
fisubrl
dec
movsb
sti
pop
daa
shll
int
sub
fnstsw
xchg
xor
push
ds
out
pusha
jmp
stos
insb
es
cltd
addr16
shl
jne
js
xor
mov
xor
mov
add
scas
es
repnz
test
push
mov
pop
repz
bnd
add
lock
cmp
sub
push
test
push
cmp
and
dec
lea
cmp
cmp
arpl
fsts
adc
outsb
jg
aaa
popf
js
xor
int3
or
stos
jbe
lods
pop
stos
dec
bound
lcall
mov
cmp
outsl
int
xorb
testl
jno
ja
lods
xchg
cmpsb
inc
data16
and
jle
cmp
dec
sub
mov
mov
xchg
dec
sub
xor
out
test
mov
scas
add
xchg
in
subb
lods
cli
xor
fdivrs
pop
xor
sahf
sahf
fsts
loopne
ljmp
les
int
and
mov
sub
andb
xchg
jnp
leave
xchg
ljmp
xor
insl
js
sub
xor
mov
clc
fnstenv
jbe
mov
inc
rcrb
mov
aas
loop
xor
pop
mov
dec
mov
popa
bound
pop
movsl
mov
and
sub
rcll
cmpsl
sbb
imul
jg
adc
jno
ds
jne
inc
jns
stos
mov
fists
mov
data16
test
mov
pop
daa
pop
popf
inc
aad
gs
jge
imul
in
cli
mov
stc
insb
xchg
xor
jno
xchg
inc
cmpsb
cmpsb
jecxz
outsl
jne
add
mov
pop
cmpsl
pop
adc
stc
lahf
ret
and
jge
stos
mov
jl
es
ret
jnp
notl
les
addr16
dec
jo
mov
insl
push
insl
pusha
sbb
mov
xchg
pusha
push
popf
jg
mov
jae
mov
sub
inc
pop
sbb
das
movsl
clc
xor
adc
and
inc
repz
or
mov
adc
stos
jnp
pop
lock
inc
pop
cmp
mov
rep
push
push
inc
sub
or
cmp
inc
mov
adc
inc
xchg
adc
fsts
push
xchg
inc
fildl
push
and
mov
aam
addr16
int3
sub
out
movsl
fbld
movl
popf
inc
xorb
out
xlat
push
jg
jae
pop
push
pushf
xor
jl
dec
test
into
or
out
inc
mov
mov
aas
test
sub
insl
inc
cwtl
or
adc
movsb
cs
cmpsl
addr16
mov
jo
imul
push
in
pop
insl
fstpt
jp
fsubp
daa
mov
nop
nop
inc
push
jg
jmp
inc
stos
lock
sti
daa
inc
push
shll
mov
std
mov
push
sbb
mov
fdivp
and
xchg
or
and
adc
loope
mov
popf
mov
fdivr
pop
add
sbb
or
jmp
sub
cmp
gs
ljmp
addr16
sbb
mov
cld
mov
or
sub
fisttpll
fldcw
loope
test
shrb
lahf
mov
iret
mov
push
jae
jmp
xchg
mov
enter
stos
loop
and
pop
cmp
jle
lods
inc
clc
inc
in
sub
jle
xor
push
inc
loop
jae
fstl
mov
pop
mov
xchg
aas
xor
lds
xor
lret
cmp
addr16
js
jae
in
sbb
clc
mov
lahf
push
fldcw
inc
les
mov
fistpll
fldt
cmp
xor
mov
pop
lock
and
push
das
js
push
mov
rcrl
xor
pop
jno
jp
xchg
addr16
mov
xchg
fs
test
jb
mov
in
cmp
ret
js
add
stos
push
adc
mov
lret
sub
sub
mov
mov
lahf
cli
fwait
inc
pop
inc
pop
nop
repz
test
pop
and
add
mov
pop
mov
push
mov
icebp
in
rcrl
push
pop
cmp
call
outsb
dec
add
adc
lea
insb
push
out
dec
sub
popf
adc
shl
push
mov
jno
sub
or
push
outsl
mov
adc
int
ror
sbb
jg
mov
jg
push
cltd
call
sbb
mov
insb
push
test
inc
xchg
movsl
repz
outsl
pop
push
rorb
mov
addr16
fisttpl
or
and
insb
pop
bound
leave
jecxz
mov
sub
and
int
cltd
lds
pop
ja
inc
scas
insl
pop
aas
jge
inc
sbb
xchg
mov
pop
jmp
pop
inc
addr16
inc
lea
cmp
mov
mov
fwait
outsl
lods
and
je
mov
or
cld
mov
jae
pop
sbb
cmpsb
mov
push
cld
cli
aas
sub
in
ss
pop
outsb
push
xchg
sbb
jg
adc
dec
jns
adc
pushf
cmp
xchg
gs
add
adc
outsb
pop
lret
inc
push
mov
mov
insl
inc
sahf
aad
in
insb
push
nop
cmc
mov
je
fmuls
test
jb
lret
cmp
daa
aad
insb
xchg
daa
jae
fsub
aas
or
insl
notl
fmull
or
test
adc
lcall
dec
cld
arpl
fiadds
fisubl
icebp
fldcw
shlb
shll
mov
xor
stos
call
cli
xchg
push
aaa
imul
or
adc
shlb
imul
pop
mov
lret
adc
push
int3
or
mov
or
cmp
test
fs
or
push
and
sub
adc
push
dec
scas
fistps
pop
test
or
xor
in
pop
inc
stc
cmc
and
hlt
sub
inc
and
and
je
xor
or
mov
pop
and
in
sub
jecxz
xor
cmp
push
and
cmpsb
stos
xchg
sbb
jecxz
mov
scas
cmp
lods
add
xor
mov
cld
inc
aas
push
jno
aad
jge
hlt
sbb
pop
cs
int
dec
push
repnz
mov
fcmovb
push
scas
cmp
cmp
int
mov
lcall
cmpsl
subl
out
frstor
ljmp
xchg
mov
mov
scas
cmpsl
fs
mov
out
inc
cmpsl
sbb
adcl
pop
rcll
pop
jecxz
sar
mov
stos
bound
pushf
push
adc
ror
ja
cld
adc
lcall
dec
mov
lea
lret
mov
iret
pop
xor
je
xor
insl
push
xlat
add
lods
sbb
stos
mov
jge
or
addr16
or
arpl
fisubs
push
mov
int3
cmp
push
daa
and
loopne
aas
pop
cmp
inc
aas
mov
jnp
mov
lret
sbb
icebp
pusha
mov
xor
jb
jp
push
mov
stc
in
fs
daa
cltd
cmp
mov
cli
clc
and
incb
jle
xchg
js
std
in
bound
pop
mov
mov
xlat
shlb
add
loop
jmp
cmpsl
cmp
aas
cwtl
xchg
rcr
or
outsl
scas
and
dec
push
jns
cwtl
lahf
mov
mov
xchg
inc
lret
sub
mov
dec
adc
pop
push
sbb
jecxz
in
xchg
fimuls
sbbb
iret
pop
push
mov
lahf
adc
fdivl
rolb
call
sahf
push
daa
jge
test
ds
mov
cmp
push
mov
pushf
pop
ficomps
jmp
push
xlat
push
loope
aas
xor
vcvttsd2si
pop
ja
and
xchg
ficompl
mov
mulb
push
movsl
sbb
bound
loope
lock
ljmp
adc
ret
dec
inc
adcl
out
cmp
mov
daa
or
negl
and
xchg
lock
and
inc
push
ss
or
and
cmpsb
test
out
rclb
inc
jnp
sub
subb
out
repnz
pushf
leave
push
cmp
js
lea
sbb
or
pusha
movsb
lds
ljmp
cmpsl
mov
loop
cmp
mov
inc
mov
cld
scas
jmp
pop
dec
in
movsb
jno
testb
js
aam
xor
lret
jne
popf
pop
sub
and
insb
sahf
and
and
mov
xchg
orl
xchg
pop
sub
ficomps
andl
sbb
pop
clc
inc
mov
nop
insl
cmp
out
push
inc
xchg
dec
repz
xchg
jecxz
mov
jge
insl
pop
fidivl
or
int3
push
imull
hlt
pusha
ret
sahf
lret
mov
call
cmovbe
mov
flds
push
mov
dec
inc
inc
push
xlat
sub
test
nop
js
or
inc
xor
mov
notl
test
aas
push
ljmp
inc
testb
add
adc
adc
xchg
adc
push
mov
ja
xchg
outsl
popf
inc
fstps
shlb
sbb
test
inc
cmp
adc
jne
mov
ret
outsl
cwtl
xorb
add
fiaddl
xor
dec
out
pop
test
xor
in
xchg
and
add
push
leave
nop
int
xchg
fs
jns
insl
xor
cmp
xor
dec
jl
out
test
notl
or
sbb
fisttpll
mov
fisubrl
sbb
int3
mov
add
sub
push
pop
rorb
pop
mov
add
lods
mov
movl
inc
xchg
pop
adc
repz
iret
icebp
orb
add
in
sbb
or
out
fdivl
sar
mov
daa
jl
xor
dec
fsubp
int
orb
jl
aad
inc
push
cmp
stc
int3
rol
jo
iret
mov
cmp
stc
inc
dec
add
inc
out
shlb
xchg
push
jl
fsub
fisttpl
fidivs
test
sbb
shll
add
cmp
xchg
adc
rcl
outsb
sbb
das
mov
xchg
xchg
sarb
int
insl
jbe
cmp
ss
fsubrs
lahf
mov
pop
daa
adc
cld
dec
push
inc
or
fisttpll
cmpsb
lds
lcall
loop
cs
divl
mov
dec
lock
lds
xchg
push
in
add
mov
loope
insb
movsb
ljmp
call
lret
outsb
scas
mov
jno
xlat
aad
mov
leave
fadds
loope
mov
cmpsb
nop
jne
jae
and
fs
add
mov
test
imul
andb
sahf
shrl
push
fsubrl
and
xor
rep
dec
mov
fwait
adc
pop
add
stos
push
out
push
cmc
lret
jns
and
icebp
sbb
std
mov
xchg
sub
cmp
mov
push
in
cwtl
pop
mov
adc
imul
adc
xor
push
xor
cmc
xor
shll
adc
push
outsl
jecxz
orl
jecxz
dec
insl
fldt
js
outsl
inc
daa
dec
adc
outsb
push
jo
cmp
or
push
testb
bt
push
sbb
push
xchg
hlt
add
mov
loopne
cwtl
pop
cs
cmp
jp
push
andl
push
mov
cmp
sub
fnstcw
gs
test
insb
xor
ss
inc
adc
into
rcr
in
rclb
mov
cld
lods
sbb
adc
adc
shll
cwtl
xor
dec
lahf
mov
sub
cmp
xchg
imull
dec
popf
mov
mov
popfw
stos
sbb
pop
test
pop
pop
imul
lret
jge
enter
fidivrs
mov
jmp
in
xorl
jne
adc
and
icebp
daa
ret
mov
dec
in
cli
in
daa
jb
add
jge
mov
ret
adc
xchg
add
movsb
jne
cltd
jae
outsl
jp
das
arpl
pop
or
pop
pop
leave
xchg
repz
int3
pop
jno
jg
sbb
mov
mov
ret
out
inc
frstor
repnz
dec
mov
push
sti
sub
shrb
adc
mov
pop
jo
aam
dec
adc
rcll
add
inc
jg
mov
pushf
mov
mov
jg
jo
sbb
test
mov
rorl
lahf
scas
mov
cmp
sbb
jno
repnz
sahf
or
pop
dec
cmp
mov
pop
sbb
fwait
dec
add
xchg
loopne
ja
into
nop
icebp
ljmp
out
and
inc
and
inc
sbb
or
pop
push
ljmp
fisubrl
jns
dec
hlt
cmp
xchg
push
sbb
js
push
mull
scas
xchg
hlt
pop
push
icebp
ljmp
and
jle
adcl
dec
ljmp
and
insl
jae
push
sub
insb
dec
xorl
lcall
pop
movsb
push
sahf
cmp
inc
mov
mov
jge
sbb
jl
cmpsb
data16
or
xchg
push
jno
fs
jmp
fninit
std
jecxz
inc
xchg
push
add
mov
cmp
loop
sti
dec
adc
mov
nop
aad
loopne
jle
mov
push
bound
cmpsl
fistps
sbb
xor
fwait
loopne
addl
das
stc
inc
and
int3
repz
fsubrs
scas
cmp
mov
cmp
push
repnz
ret
lret
jp
sti
mov
mov
jbe
iret
mov
jns
scas
adc
les
add
sbb
fldenv
pusha
js
mov
jae
xor
fs
push
xor
lds
push
mov
nop
nop
imul
pop
cwtl
jbe
testb
mov
pusha
fdivs
arpl
dec
sti
out
outsb
das
and
mov
adc
andb
mov
outsb
push
push
or
popa
and
add
cmc
or
aad
jo
adc
jecxz
or
sahf
mov
xlat
and
pushf
push
and
cmpsb
notl
mov
and
cmpsb
cmc
sub
popf
sbb
movsl
roll
pop
ret
sti
pusha
lret
push
sub
mov
cmp
ljmp
add
into
mov
aam
int
or
jo
imul
stos
aaa
mov
scas
or
push
jno
stc
inc
mov
fstpt
lret
mov
neg
cmp
xchg
roll
mov
std
xchg
loop
out
lret
pop
mov
ds
cmp
pop
sub
xor
pop
jecxz
push
cmp
mov
cli
int
pop
xchg
or
out
push
xchg
bound
mov
or
divb
mov
popa
mov
lods
cwtl
inc
jp
mov
dec
in
hlt
pop
mov
jnp
mov
or
js
dec
pop
fwait
pop
ret
divb
call
int
int3
sbb
xchg
pop
js
pop
xor
es
cltd
dec
into
jo
push
push
push
bound
xchg
lds
movsl
inc
xchg
cmp
cmpsb
iret
shll
ljmp
pop
lods
sub
pop
cli
adc
inc
cld
adc
fstpl
and
test
inc
sbb
jnp
push
inc
xor
push
xor
cltd
mov
adc
xchg
mov
and
loope
repz
sbb
or
mov
out
ja
cmp
jg
dec
out
test
rclb
or
mov
inc
out
mov
dec
and
adc
stos
aas
lds
std
xor
add
and
movsl
jns
pop
inc
movsb
cwtl
jns
xchg
into
push
inc
mov
testl
cmp
and
adc
sub
and
sar
adc
rcrb
gs
fisttpll
push
fistl
shrl
jo
or
lods
mov
pop
test
lahf
insb
xchg
mov
and
push
mov
and
jo
stos
mov
arpl
xor
call
es
pusha
dec
push
mov
jae
dec
xchg
flds
mov
enter
sbb
or
pop
rol
and
fwait
push
xchg
sbb
adc
loop
pop
in
pop
mov
mov
jne
dec
or
out
adc
xchg
pop
fstpt
insb
nop
lret
loopne
fimuls
dec
fdivl
dec
scas
adc
add
pop
sbb
neg
fistl
bound
push
lahf
push
pop
sbb
sbb
xchg
dec
push
xlat
movsb
inc
mov
jg
push
cwtl
out
jb
push
mov
negb
ds
push
pop
sub
dec
xchg
jl
jb
shll
cmpb
rcrl
sbb
scas
cli
movsl
scas
addr16
rcrb
test
add
xchg
mov
push
cmp
cli
inc
lret
add
and
call
vpunpckhwd
push
in
pop
or
arpl
inc
sbb
mov
loop
int
dec
mov
adc
or
xchg
sub
pop
fbstp
movsb
xchg
imul
mov
xchg
and
leave
add
cmp
enter
fisttpll
mov
loop
dec
lea
push
hlt
dec
in
movl
sub
pop
push
lcall
mov
inc
adc
je
add
push
daa
inc
and
sahf
and
addl
outsb
fdivl
inc
daa
dec
in
clc
cmp
pop
arpl
lods
jmp
cmpsb
push
pop
jns
or
lea
pop
cli
cmpsl
jnp
imul
sub
cmp
xor
imul
push
mov
in
adc
add
inc
mov
sbb
cmpb
xor
mov
jns
xlat
ret
lret
mov
stc
in
aam
sbb
js
cmp
insl
and
in
test
test
cmpsl
mov
out
push
loopne
jge
loope
popf
mov
loopne
mov
leave
ficoml
push
js
scas
or
jbe
es
into
negb
jmp
out
mov
add
mov
jnp
inc
mov
popf
pop
lret
outsb
xor
inc
repz
push
lea
pop
cmp
jp
or
mov
sbb
test
dec
mov
icebp
sbbb
fucomp
cli
inc
lahf
lret
sub
bound
inc
hlt
mov
out
push
pop
cmp
cmpsb
sar
test
shll
scas
out
imul
ret
sub
mov
jne
je
test
xchg
fsin
jno
test
outsl
dec
inc
rorl
movsl
sbb
pop
mov
fidivrs
bound
lock
push
adcb
out
in
cli
jo
and
nop
or
scas
fiadds
dec
push
jecxz
mov
test
mov
rolb
out
scas
jns
mov
or
and
push
clc
inc
cmpl
xor
sbb
subl
dec
dec
fwait
adc
mov
leave
fwait
dec
xchg
loopne
filds
mov
test
inc
and
ljmp
imull
ja
mov
cwtl
call
lock
adc
sbb
outsb
mov
stc
add
loop
aad
jne
sub
lea
push
in
add
aaa
pop
out
rcl
push
addr16
orb
sbb
xchg
xchg
or
jmp
sbb
sub
push
mov
shlb
mov
or
cmp
dec
adc
pop
pop
fwait
jg
lea
icebp
xchg
jne
leave
outsb
mov
dec
sbb
in
fcoms
mov
xchg
adc
cld
lock
outsl
add
jecxz
fcoms
or
mov
insl
out
cwtl
push
loopne
adc
push
ja
cld
stos
jecxz
push
into
mov
sbb
test
sub
sub
fldcw
repnz
test
scas
mov
dec
mov
ss
jno
or
in
pop
dec
lods
movsb
cli
mov
lea
movsl
enter
mov
sub
pusha
or
into
gs
mov
push
mov
clc
sub
stc
adc
jae
xchg
sbb
stos
aad
xlat
lea
faddl
sbb
mov
fwait
adc
sub
jbe
mov
or
aad
in
push
and
xor
push
bound
popa
mov
lret
cmpsl
inc
push
insl
adc
jp
bound
or
dec
cmp
lcall
dec
bound
cmpb
xchg
ds
push
aaa
xor
mov
mov
in
ljmp
addr16
dec
icebp
xor
divl
lock
or
mov
ret
dec
inc
int3
push
xlat
mov
xor
xor
push
out
ret
dec
sbb
into
sub
gs
sbb
add
loop
sbb
sbb
popf
mov
adc
sub
sub
mov
cmp
scas
dec
mov
push
je
or
enter
shrl
pusha
insb
adc
sub
and
mov
lret
or
xchg
jo
aad
jge
and
push
mov
in
ja
cmp
push
cltd
lcall
mov
aam
cmp
jne
movsl
xchg
jp
push
xchg
dec
fs
jle
lret
jns
adc
sarl
sub
sub
out
mov
cmp
lret
addl
leave
and
into
pop
mov
pop
sub
cmpsb
fiadds
dec
call
mov
xchg
cmp
mov
push
enter
in
test
in
xchg
imul
mov
addl
mov
sub
sub
mov
ds
test
out
imul
mov
in
loope
js
add
adc
into
mov
insl
xchg
xor
movsb
mov
and
rcr
pop
lret
pop
xchg
lds
iret
add
inc
aam
add
push
ds
lahf
int3
pop
in
repz
inc
push
inc
dec
add
ja
dec
div
mov
inc
test
std
jmp
jmp
push
pop
sub
nop
xchg
mov
inc
jecxz
mov
in
add
mov
ret
mov
push
jg
or
mov
int
andl
lods
mov
push
jnp
sbb
mov
jp
adc
popa
ljmp
cltd
mov
mov
addr16
repnz
sub
pop
push
scas
fnstcw
out
insl
xor
push
scas
mov
or
leave
in
pop
push
lea
hlt
jne
and
cmp
pop
loop
popf
fsubrl
inc
enter
xchg
lds
or
pusha
divl
adc
dec
inc
sbb
push
dec
insb
cld
jmp
fisttpl
xchg
mov
cli
imul
pop
mov
mov
sbb
dec
pop
jmp
or
cmp
scas
xlat
imul
sbb
mov
fcomps
jbe
dec
pop
addl
mov
push
push
lea
mov
inc
push
xor
shlb
fdivrl
jle
cmp
mov
test
pop
lret
xchg
loop
and
shlb
imul
stc
xor
and
mov
cmp
pop
cmp
pop
lock
inc
les
in
cmp
xor
adc
xor
and
in
ficoms
or
sbb
ja
xchg
out
in
jns
inc
stc
xor
cmp
adc
cmp
mov
adc
xor
jl
add
ljmp
lcall
xor
jnp
pop
adc
mov
xor
cmp
ret
sub
add
mov
cmp
or
in
or
rcr
jo
push
loope
es
roll
adc
dec
mov
out
push
xor
mov
push
arpl
mov
jne
cmp
loopne
sbb
or
out
mov
test
mov
cld
push
dec
and
bound
mov
and
dec
je
stc
movsb
and
xor
fiadds
mov
adc
xor
les
lret
and
es
push
daa
sub
sub
and
pop
dec
mov
xor
push
test
and
or
leave
testl
ljmp
scas
jmp
sub
adc
lea
enter
sbb
pop
out
xchg
push
gs
sub
fistpl
stos
mov
mov
shll
adc
mov
cwtl
inc
inc
push
sub
aaa
push
pop
inc
xchg
sbb
out
ljmp
jp
jmp
cmp
lods
pop
in
adc
out
cmc
inc
push
xlat
lock
cltd
xlat
add
pop
xor
push
sbb
movsb
imul
jnp
inc
xor
xchg
addr16
inc
jg
fimull
int
mov
into
repnz
pushf
fistps
aaa
adc
stc
inc
sarb
in
lea
outsb
xor
mov
or
xor
adc
dec
push
flds
shrl
xor
gs
add
inc
fwait
arpl
mov
fldt
xchg
aaa
shlb
mov
jno
hlt
xchg
mov
xchg
adc
in
repz
xor
out
mov
and
out
inc
push
jp
hlt
and
mov
ja
xor
mov
cmpsb
shl
xor
pop
ret
in
fwait
xchg
out
insb
dec
push
ret
loopne
repnz
xor
test
es
mov
push
pop
adc
adc
pop
sbbl
mov
rolb
mov
data16
mov
cmpsl
sbb
xchg
lcall
inc
icebp
rcrl
into
xchg
fadds
jge
rep
insl
jno
push
xchg
sahf
in
push
ret
rcrl
mov
fwait
pop
lahf
sub
insl
ret
std
subl
mov
jb
mov
imul
push
int3
dec
xor
add
xchg
inc
pop
xor
popfw
adc
ret
arpl
int
lods
aaa
icebp
loope
inc
into
push
jnp
repz
das
test
or
mov
daa
bound
cmp
stc
and
jge
sub
fadd
add
stc
jb
or
fcmovbe
adc
in
addr16
ficoml
out
xor
movsb
pop
pushf
aas
jnp
inc
pop
xchg
icebp
fisubs
jae
fsubrl
sahf
movsl
int
div
mov
sub
dec
mov
and
and
pop
out
mov
sub
clc
add
mov
test
add
aaa
imul
mov
decl
mov
loop
mov
jbe
std
aaa
lds
mov
xchg
notb
je
fwait
icebp
mov
mov
mov
push
dec
and
or
xchg
sub
jg
test
sub
mov
shl
jle
pop
xor
pop
fidivl
fists
scas
mov
repz
jl
mov
mov
mov
sub
jmp
xchg
xchg
mov
sti
push
out
push
or
inc
in
add
bound
sub
push
out
bound
je
dec
sub
dec
lock
popf
mov
mov
bswap
pop
test
inc
cmpsl
cwtl
push
xor
repnz
dec
lods
inc
fnsave
sbb
jp
movsb
andb
pop
fists
fadds
lods
dec
test
ja
pushf
lahf
scas
sub
jbe
les
inc
and
or
xchg
mov
daa
adc
fistl
hlt
push
fisubrs
nop
addr16
add
jne
jae
loopne
in
mov
rcl
jle
xchg
and
lcall
xchg
adc
mov
jecxz
mov
test
daa
arpl
xor
pop
pushf
sub
into
test
sbb
xchg
iret
scas
sub
inc
jl
inc
jl
dec
push
in
mov
xchg
pop
push
int3
cld
push
fxch
jge
addr16
xchg
mov
adc
mov
push
and
fstps
mov
mov
out
xchg
outsl
je
xor
cmc
fcomps
cmp
lret
bound
add
adc
push
daa
sahf
cmpsb
cli
mov
bnd
pop
jae
aam
loopne
test
lea
mov
fcoml
adc
mov
cmp
mov
inc
dec
xchg
mov
and
scas
in
cli
pop
sarb
sbb
scas
sub
jmp
mov
push
in
hlt
sbb
pop
lahf
mov
stos
leave
and
test
xchg
scas
xchg
jb
jns
imull
cli
mov
xor
fisubs
cld
pop
loope
cmpl
fimull
mov
scas
fwait
push
lret
adc
fldl
mov
inc
pushf
lea
or
fcomps
sbb
int
call
inc
bound
inc
repnz
out
lods
sbb
fiaddl
lret
in
fnstenv
push
stc
daa
xchg
inc
daa
dec
mov
xchg
cmp
mov
sbb
xchg
mov
and
outsb
cwtl
add
xchg
in
cmp
std
add
sbb
std
dec
filds
lret
dec
loop
add
mov
and
out
pop
inc
mov
outsl
les
sar
iret
movsb
test
out
mov
pop
inc
mov
mov
in
out
insl
dec
add
int3
or
in
xor
adc
mov
dec
out
das
mov
out
xchg
add
outsb
sub
cmpsb
cwtl
sbb
dec
in
jno
std
sub
and
dec
rolb
iret
mov
std
outsl
andb
mov
fs
and
dec
pop
daa
add
push
popa
or
pop
add
imul
movsb
aam
out
aad
cmp
fwait
xor
in
setnp
sbb
cmc
jecxz
icebp
jbe
dec
and
add
xor
xchg
fs
sub
pop
enter
xlat
je
lcall
aas
inc
outsb
push
jecxz
leave
lock
jnp
jmp
mov
jp
jmp
xchg
xchg
mov
es
mov
pop
pop
out
imul
dec
pop
sti
pop
pop
arpl
inc
pop
cli
sbb
out
lods
bound
in
ror
inc
clc
inc
and
mov
add
inc
pop
or
hlt
dec
pop
push
sbb
push
adc
jge
lods
xchg
cs
cmpsb
xor
call
cmp
shrl
addr16
in
ret
mov
idiv
dec
jnp
int3
mov
xchg
pop
lret
sar
aas
xor
xchg
and
mov
adc
dec
pop
pushf
mov
xchg
jnp
imulb
aam
imul
mov
sub
popa
sub
mov
and
ret
jp
cmp
repnz
mov
xor
insb
push
stos
mov
cmc
mov
jecxz
lock
stos
and
or
dec
outsb
addr16
jle
sub
push
mov
xor
jecxz
or
mov
lods
pusha
jg
push
lods
dec
ret
pop
cwtl
test
push
cmp
stc
mov
adcl
adc
or
push
sbb
stos
xor
adc
jae
scas
mov
ljmp
xchg
add
pop
pop
sbb
icebp
mov
test
mov
xchg
push
cmp
pop
pop
sbb
mov
adc
cmp
rorl
movsb
inc
or
pop
loop
mov
outsb
repz
dec
xchg
push
mov
fsts
and
insl
jecxz
inc
repz
adc
and
les
fisubrs
test
pop
movsl
jno
cmp
lods
repz
dec
xor
cwtl
pushf
pop
sub
imul
jb
mov
mov
xchg
ja
mov
stc
mov
or
mov
shl
insb
or
dec
mov
push
sub
outsl
or
jnp
dec
lret
push
pop
xchg
sub
lods
test
adc
push
adc
mov
push
in
pop
movsb
inc
dec
jl
lahf
loope
cld
inc
jmp
mov
and
xchg
dec
mov
push
mov
or
sbb
std
jg
adc
lods
pop
inc
jp
cmp
fs
mov
pop
jbe
jbe
ja
je
xchg
xchg
adc
sub
ret
frstor
test
ror
mov
repnz
iret
ret
rclb
aam
mov
lret
loop
inc
mov
inc
test
sub
andl
pop
mov
and
push
pop
mov
inc
sub
sbb
dec
js
jne
xchg
clc
mov
aam
cmp
insb
cmp
stc
aaa
jmp
popf
loope
mov
cmc
decl
repz
stos
cmp
jecxz
sub
jecxz
lcall
and
jno
cmp
or
lods
in
or
ja
inc
pop
cmp
test
sahf
sub
into
rolb
push
adc
inc
sbb
sub
cmpsb
jnp
adc
pop
movsl
pusha
fdivl
mov
shll
cmp
push
sbb
cld
dec
stos
dec
addr16
or
pop
sbb
fsubrl
test
insb
xor
dec
xchg
jle
jg
aas
or
inc
xor
inc
mov
into
je
pusha
lds
adc
jl
jl
add
repnz
das
push
negb
mov
nop
incb
lcall
shlb
in
ja
xor
out
add
mov
or
ljmp
mov
stos
or
push
mov
and
mov
sbb
dec
xchg
sub
mov
shrb
outsl
frstor
pop
cli
das
jle
xor
mov
jp
inc
jno
es
repnz
es
sub
cmp
lods
or
out
outsl
dec
xchg
pop
filds
in
ss
jecxz
aam
push
mov
outsl
or
push
mul
ss
and
pop
shrl
enter
inc
das
push
xchg
jns
fcomps
test
cmp
fsubrl
loope
leave
push
push
iret
ljmp
mov
insb
jbe
xor
stos
mov
movsl
jecxz
inc
fdivrl
sbb
mov
sbb
outsb
cmp
negb
jmp
mov
add
fimuls
dec
lods
in
pop
jmp
pusha
jecxz
add
xor
and
leave
dec
aas
pop
rolb
cwtl
out
test
outsb
or
adc
pop
test
int3
imul
mov
mov
jbe
mov
test
daa
roll
xchg
nop
mov
fbld
ss
mov
push
mov
or
cmp
ret
aaa
mov
mov
or
insl
mov
and
stos
mov
xor
outsb
and
xchg
jl
xchg
ja
or
cmpsb
arpl
mov
xchg
movl
mov
jmp
sub
push
and
rcll
js
cmpsb
pop
data16
cmp
pop
push
popa
insl
pop
fucomi
xchg
pop
or
lahf
mov
fucomp
dec
aas
into
mov
push
push
cmc
repz
sub
sub
call
negl
out
or
clc
push
stc
in
sbb
and
cmp
pop
fidivrs
mov
adc
das
xor
or
push
inc
inc
pop
cld
pop
xchg
rcrb
mov
jae
mov
aam
call
push
ljmp
add
sbb
sub
fdivr
dec
xchg
int3
mov
jl
jle
sbb
scas
rorl
push
in
cmpsl
jne
popa
cld
out
push
addl
js
and
rcll
mov
mov
cltd
mov
outsb
sub
and
jmp
push
xchg
loope
fcmovu
pop
mov
stos
imul
testl
push
mov
mov
sub
inc
in
jmp
mov
bound
ljmp
hlt
push
lret
push
push
imul
jne
mov
lock
xchg
mov
js
inc
mov
push
cmp
jp
sarb
add
loop
jnp
mov
add
mov
cmp
sbb
adc
sbb
xor
dec
in
push
pop
xchg
bound
adc
push
dec
test
cmp
pop
sbb
pop
push
in
js
or
dec
add
lcall
xchg
pop
clc
jbe
movsb
lds
jle
mov
jmp
subl
mov
xor
pop
js
cmp
jmp
js
mov
mov
fildll
or
pusha
xor
lret
adcl
loopne
sbb
jge
and
cmp
adc
leave
sahf
inc
or
mov
dec
sbb
out
push
and
mov
dec
cs
clc
shrb
cmc
xchg
jl
xchg
pcmpeqb
inc
in
outsl
jp
clc
xchg
shlb
pop
shrl
je
xchg
jns
or
cltd
movsb
adc
adc
mov
mov
lea
or
notb
xchg
cwtl
popa
cs
xor
out
cmp
sti
lds
mov
push
jo
adc
fucom
lea
mov
dec
pusha
cwtl
dec
jg
test
test
jg
es
mov
pusha
scas
xchg
inc
popa
dec
dec
ja
bound
adc
dec
xchg
mov
pop
add
cld
jmp
fdivs
shlb
orl
lods
adc
adc
iret
int3
mov
out
xchg
cmp
orl
andl
mov
in
cmp
cli
inc
jecxz
pop
sbb
mov
xchg
cmp
jne
daa
jno
sbb
mov
shrb
lds
push
push
jge
pop
push
cmpsb
sbb
popf
dec
pop
sahf
pushl
xchg
in
int3
cli
and
addr16
leave
add
mov
ret
scas
cmpsb
aad
cmpsb
fistl
mov
sbb
into
imul
jne
pop
jl
je
xor
xchg
nop
add
or
cld
lahf
pop
mov
jp
imul
out
ja
lods
roll
dec
xor
cmp
gs
xchg
cmpsl
in
jp
lds
cmpsb
and
in
loop
shll
dec
faddp
and
xor
mull
incb
sub
inc
dec
popf
pop
sub
inc
jg
jmp
inc
xor
mov
inc
shr
loope
add
and
aas
jbe
push
dec
sub
lea
mov
inc
pop
scas
mov
inc
imul
xor
bound
xchg
jecxz
call
sub
aad
ror
mov
or
adc
insl
rorb
push
rcr
int3
push
pushf
mov
das
mov
jbe
dec
mov
adc
push
and
pop
push
xchg
cmc
sbb
mov
and
adc
fsub
fldcw
xchg
mov
pusha
inc
jge
int
notl
lea
stos
mull
pop
aas
mov
pop
push
dec
aad
call
push
repnz
xchg
ret
inc
or
daa
mov
mov
movsl
hlt
lahf
loopne
or
gs
mov
mov
jg
pushf
rorb
pop
nop
add
mov
rol
xlat
clc
fstps
mov
test
push
and
pop
adc
jl
sti
cwtl
inc
ja
lahf
test
lods
mov
imul
mov
int
mov
mov
xchg
or
jb
inc
icebp
lds
add
or
in
xchg
cmp
ljmp
pop
pop
jbe
xchg
std
ret
pop
push
mov
popf
mov
push
or
sbb
shlb
pop
add
aam
movsl
inc
add
fldenv
out
mov
jge
nop
int3
lods
sarl
nop
lods
jno
aas
xchg
dec
adc
stos
bound
stos
cs
fldcw
mov
push
aam
xchg
pushf
xchg
sub
jmp
loop
sarl
pop
sbb
lea
push
ss
out
push
jne
inc
and
cmp
lods
cwtl
pop
popf
xchg
mov
and
daa
int
push
fnstenv
data16
pop
mov
mov
js
out
xor
push
or
mov
add
dec
or
pop
sub
pop
enter
jecxz
mov
ja
inc
pusha
sahf
les
sbb
jmp
add
into
ret
xchg
and
movsb
fadds
clc
aas
xor
out
or
or
jo
adc
sub
int
insl
cmove
std
daa
lahf
adc
cmc
xor
sbb
hlt
sub
les
add
shl
daa
lea
divb
addl
sbb
pusha
xchg
test
repnz
mov
sti
fimull
inc
not
xor
adc
mov
add
subl
jge
popa
jecxz
pop
xlat
pop
repnz
jnp
cmp
dec
pop
mov
pop
sarb
aam
lea
pop
pop
mov
mov
cmp
push
cmp
fwait
mov
fwait
xor
je
push
cld
cmpsb
pop
xchg
fists
and
pop
scas
jbe
movsl
iret
push
into
fnsave
xor
adc
mov
pop
inc
sbb
enter
in
sbb
cltd
and
adc
push
ret
stc
mov
jbe
popa
inc
mov
fisubrl
xchg
or
into
aad
mov
jae
stos
ss
out
insl
insl
mov
sahf
pop
imul
js
subl
cltd
in
xor
in
jp
in
test
mov
inc
mov
cmpsl
jbe
test
lahf
push
clc
lock
pop
push
xchg
int
xor
jnp
mov
xchg
mov
mov
push
loope
iret
out
pop
push
add
jle
mov
mov
stos
mov
dec
mov
lea
pusha
mov
inc
and
jg
roll
xor
sbb
rcl
adc
lds
aaa
push
scas
pop
enter
movsl
mov
jp
sahf
cmc
mov
icebp
movsl
inc
shll
in
dec
lea
pop
xor
push
inc
push
inc
xor
loopne
pop
dec
mov
arpl
flds
test
and
inc
xchg
outsb
adc
imull
adc
cmp
int3
jle
xor
sbb
cmp
leave
int3
pop
push
test
push
lret
out
rclb
dec
shrb
repz
mov
loop
inc
negl
es
add
repz
pop
xchg
jbe
les
icebp
pop
xor
add
or
int3
rorb
ljmp
fsubl
scas
outsl
js
roll
arpl
push
insb
mov
push
imul
and
mov
sbb
xor
mov
in
and
mov
or
ja
stos
leave
push
daa
dec
jecxz
jecxz
add
fsubl
mov
dec
or
insl
mov
ss
pop
clc
mov
mov
lods
dec
inc
ds
push
mov
mov
adc
adc
sbb
dec
and
in
ret
jmp
lcall
cli
imul
fcmovu
push
std
cmp
into
sbb
daa
lahf
mov
inc
add
js
rcr
stos
add
jns
icebp
mov
stos
out
das
loopne,pn
inc
mov
or
loope
and
add
push
fsubrp
out
pop
cwtl
pushf
mov
outsl
inc
xchg
mov
add
jo
clts
aas
inc
xchg
xchg
lods
insb
sar
fstl
xchg
xor
push
or
int
xor
adc
jg
arpl
xchg
inc
pushf
mov
add
push
ljmp
adc
mov
mov
xor
test
lock
loopne
test
shl
xchg
sbb
and
mov
outsb
loope
scas
xchg
aas
pushf
adc
out
cmpsb
pop
loope
mov
pop
mov
les
call
nop
insl
bnd
ss
stos
clc
xor
fmull
aas
xor
mov
cmp
call
lret
das
dec
lret
mov
xchg
ret
fisttpll
stos
std
inc
dec
cmp
sub
mov
mov
test
aad
lahf
dec
push
ds
insl
in
in
push
and
cmp
mov
mov
jecxz
or
aam
inc
xor
cmp
mov
jge
cmc
fsubrl
sarb
pop
dec
pop
dec
lahf
xchg
stos
daa
xchg
pop
xchg
xor
fcomip
ret
add
in
ficompl
mov
and
lret
jno
push
push
imulb
aaa
sahf
push
test
sub
cmp
cli
jmp
ss
push
cmp
dec
movb
adc
outsl
cli
and
mov
aas
inc
dec
ljmp
repnz
pop
into
mov
jl
in
js
jecxz
fidivrs
fsubl
xchg
mov
shl
mov
in
stos
jae
dec
lods
push
clc
mov
repz
or
int
movsb
scas
lret
push
pusha
pop
lods
mov
cmp
test
shlb
loopne
mov
insb
adc
mov
xchg
icebp
mov
jno
xchg
mov
cmp
cltd
mov
jns
popf
arpl
les
sub
shl
fildl
sti
jp
in
out
daa
inc
jl
inc
faddl
rclb
dec
push
into
xchg
push
add
mov
mov
in
jmp
in
or
fcmovnbe
andb
stc
cmp
std
push
mov
inc
stos
lret
and
punpcklwd
push
cmp
stos
pop
shll
fdivrl
nop
adc
ret
push
jg
lahf
lcall
dec
nop
ds
popa
jno
push
sbb
es
jp
adc
cmc
dec
inc
adc
xor
sbb
sub
inc
data16
mov
xchg
not
xlat
add
lret
cwtl
sbb
mov
pop
xor
mov
push
cmp
cmpsb
cmp
das
aad
cmp
push
into
or
jo
subps
int
arpl
out
fcoml
loop
xchg
in
dec
adc
mov
and
xor
mov
and
inc
xor
les
and
call
negb
aas
sbb
xchg
jns
sbb
scas
add
dec
mov
in
stos
dec
testl
mov
jmp
imul
adc
cwtl
mov
jle
or
and
cmp
cmc
cld
push
data16
add
mov
into
aas
out
int3
lock
mov
sarl
add
scas
pop
aaa
cld
fdivrs
sub
mov
mov
xchg
and
mov
ss
jge
clc
push
jl
fsubr
jae
into
xlat
in
mulb
imul
xor
push
cld
cwtl
leave
mov
ss
daa
xchg
iret
stos
cmp
out
mov
push
cmp
push
outsl
enter
xor
mov
mov
mov
test
outsb
stos
into
pop
data16
push
mov
inc
ret
push
in
test
dec
cmp
popa
push
int3
mov
lea
and
pop
imul
loopne
pop
pop
outsl
imul
vxorps
add
out
xchg
push
ds
ret
dec
push
adc
call
xchg
inc
inc
or
clc
shrb
push
dec
mov
sub
xchg
mov
out
mov
pop
fwait
dec
fucomp
cli
arpl
adc
dec
es
sbb
out
shll
sti
gs
incl
sbb
pushf
imul
inc
out
mul
mov
inc
into
xchg
sbb
in
dec
punpckhbw
or
add
sbb
pusha
movsb
push
sti
cmp
jb
call
nop
bound
or
xchg
js
mov
mov
jp
inc
in
push
cmp
rorb
inc
dec
lock
pop
sub
mov
and
pusha
sbb
push
cmp
sbb
ret
daa
jne
push
xlat
mov
outsl
mov
div
adc
inc
push
loopne
outsl
lcall
inc
aad
dec
movsl
aam
jnp
inc
lock
xchg
sbb
sub
mov
push
gs
scas
rorb
mov
leave
mov
jns
mov
pusha
adc
lock
mov
mov
jl
fmulp
xor
in
and
test
cltd
hlt
lods
and
ljmp
lret
decb
sbb
cmp
or
lahf
cli
pop
scas
dec
scas
inc
mov
bndstx
xchg
or
incl
jns
xchg
out
jo
and
cmp
cmpsl
dec
scas
xchg
out
and
mov
decb
bound
ffree
pop
mov
int3
fcomp
sub
clc
push
push
fcomps
mov
xor
aaa
mov
xchg
rcrb
push
loope
sub
xor
addl
cld
jmp
sbb
lea
push
mov
mov
fistps
cmp
cmc
mov
pop
imul
xor
xor
das
inc
icebp
sbb
int3
push
cmp
adc
inc
adc
lea
movsb
jo
cmp
pop
aas
dec
and
mov
and
daa
inc
inc
mov
sub
xchg
push
lret
fistl
xlat
dec
aad
inc
pop
mov
loop
test
mov
jnp
out
sbb
cld
and
shrb
push
lock
pop
dec
sub
mov
sbb
mov
aam
ret
repz
xchg
xchg
sbb
mov
into
pop
mov
sbb
scas
subl
sub
xor
cmp
out
pop
add
fists
movsl
sbb
iretw
stos
stos
jnp
pusha
sbb
push
fs
mov
pushf
es
into
or
pop
dec
fcoml
inc
mov
jecxz
sbbl
sti
sub
mov
push
adc
out
je
mov
out
push
data16
insl
in
popf
cmp
into
mov
pusha
and
xor
jge
xchg
sbb
fildll
adc
aad
pop
inc
cmp
jno
push
sti
int
cmpsb
xor
and
adc
xor
jnp
xchg
sbb
dec
pushf
xor
add
adc
jmp
pop
popa
pop
stos
pop
sbb
dec
out
xor
aam
add
fwait
add
inc
movsl
cmpsb
insb
out
add
or
xlat
push
push
filds
dec
imul
bnd
hlt
int
popf
cmc
jo
xor
lcall
sub
jle
testl
add
jbe
std
mov
std
push
cli
clc
addr16
cmpl
mov
push
dec
aad
sar
das
xchg
jbe
xor
in
ret
hlt
mov
icebp
mov
insl
mov
mov
andl
or
leave
ljmp
or
in
bound
pop
shrl
sbb
and
and
xlat
addr16
je
enter
sub
push
ret
ficoml
divl
xor
jae
mov
fcmovbe
inc
mov
shrb
pop
pop
ss
jecxz
shll
ds
sbb
test
fdivs
xor
cld
xlat
inc
nop
stos
push
push
adc
popf
fdivs
dec
adc
sti
inc
icebp
cmpl
shlb
lea
imul
repnz
or
cmp
push
inc
cmp
fadd
out
scas
repnz
sbb
enter
in
jg
dec
mov
mov
or
xorb
and
fwait
jns
js
stos
push
inc
xor
sub
into
pop
mov
or
sbb
je
xor
imul
xor
cmp
sbb
cmpl
and
mov
cwtl
or
fsubs
lret
mov
and
leave
xor
add
test
mov
cs
inc
mov
mov
push
cmp
lds
int3
mov
xor
out
nopl
sar
mov
sbb
das
adc
mov
jns
jecxz
jl
inc
pop
imul
iret
mov
out
mov
xorl
pop
mov
or
adc
sub
jmp
push
fistpll
pop
xorb
jmp
dec
mov
in
mov
popa
xor
daa
pop
add
sahf
paddsw
loopne
inc
daa
lcall
sub
adc
jp
ficomps
mov
jns
in
ja
and
mov
push
repz
mov
lret
push
add
and
and
fstpl
mov
scas
leave
movsl
ficoml
fcompl
jecxz
call
or
jne
ljmp
lea
adc
cmp
cmp
jmp
ljmp
loopne
imul
pop
or
jnp
add
add
outsb
cmp
loope
push
mov
mov
push
in
mov
inc
sbb
dec
pop
jns
or
cld
xor
mov
sbb
jp
pop
clc
addr16
in
add
dec
fsubrs
pop
inc
dec
push
scas
popa
loopne
subb
lret
mul
push
outsb
jecxz
xor
push
add
or
sbb
mov
push
mov
dec
lods
pushl
js
call
push
lahf
sub
jl
shlb
push
pop
dec
cli
mov
test
mov
jno
or
inc
out
nop
insb
mov
pop
movsb
adc
xchg
dec
adc
inc
jne
xor
sti
fwait
sbb
movsl
dec
and
scas
dec
imul
ds
push
cmp
xor
xlat
xchg
dec
cmp
dec
mov
mov
push
pop
add
jp
shrb
les
mov
ja
adcb
cmp
loope
jns
inc
mov
and
iret
je
stos
and
loop
scas
pusha
sbb
int
mov
push
sbb
pushf
adc
adc
and
push
lds
xor
xchg
jle
xchg
inc
mov
in
addb
mov
pop
pop
sub
xchg
push
sbb
js
or
out
pushf
jns
push
sub
test
pop
gs
push
dec
hlt
jg
enter
insb
sub
cmp
iret
mov
xchg
cs
notb
sbb
popf
or
jg
jns
inc
into
mov
fnstcw
xchg
pop
inc
mov
dec
adc
dec
lods
add
out
or
pusha
cmp
push
mov
adc
es
mov
pop
cmp
mov
xlat
push
int
nop
test
pushl
nop
xor
mov
imul
sti
in
xor
clc
fisttpl
shrl
pop
or
cmc
xchg
jle
inc
jle
xlat
ja
xor
loop
sbb
in
mov
and
sub
cmpl
int3
aam
gs
sbb
pushf
xor
dec
out
jl
lds
ljmp
in
fiadds
jns
cmp
cld
xchg
xor
sbb
adc
jle
xchg
adc
sbb
push
mov
jle
push
ds
bound
lahf
mov
ss
fs
subb
xchg
mov
xchg
shrl
addb
nop
lock
in
aad
pop
test
mov
jne
cmpb
dec
mov
iret
lea
clc
pop
mov
cmp
ret
fldl
dec
imul
xor
sub
lret
movsb
call
je
fstps
fwait
xor
sahf
in
sahf
lock
sbb
mov
xchg
dec
jle
shlb
dec
pop
mov
clc
cmp
cli
adc
repnz
lcall
cmpsb
jl
out
adc
lock
cmp
xchg
xchg
mov
xchg
repnz
or
inc
dec
lret
adc
inc
jne
and
mov
scas
and
sbb
test
xor
sub
out
ret
push
loope
push
addr16
fld1
xchg
sbb
pop
mov
inc
sbb
int3
or
push
out
das
jb
jbe
mov
mov
mov
push
and
mov
daa
dec
ljmp
mov
lods
insl
popa
xchg
add
pop
xchg
test
in
in
xor
ja
fbld
adc
repnz
or
or
xchg
fs
jl
xchg
cmc
mov
imul
pop
add
lcall
xor
scas
sub
jnp
sbb
imul
iret
mov
xorl
pop
mov
cli
jmp
lock
shlb
push
testb
push
jbe
jno
imul
xchg
cmp
roll
push
cld
mov
jg
leave
dec
jno
clc
jb
mov
dec
sub
pop
lock
fisttpll
pushf
sub
cmc
cltd
xor
outsb
push
rep
mov
and
mov
lcall
cmp
cli
pushf
scas
or
dec
xor
shrl
fcompl
add
pushf
insl
ret
add
mov
inc
inc
js
adc
mov
fs
int
mov
add
aam
stos
jbe
test
jo
sub
addl
in
fnstcw
xlat
inc
sub
nop
jmp
and
imul
es
test
inc
inc
lea
push
js
inc
stos
push
mov
xchg
dec
jno
movsl
mov
jle
cmp
loope
dec
sub
imul
pusha
pop
jp
sbb
jbe
pop
xor
addl
pop
cmp
push
mov
pop
bswap
add
bnd
adc
adc
imul
adc
daa
pop
jo
ret
in
mov
sub
or
in
aaa
xchg
mov
mov
ret
in
dec
js
jecxz
mov
jp
mov
jae
jns
data16
or
mov
and
cmpl
icebp
aas
lock
mov
incb
sbb
out
mov
cmp
enter
jne
pop
nop
push
icebp
jmp
cmp
add
mov
add
mov
mov
lahf
cmc
jl
insl
sbb
rorl
xor
and
and
push
sub
popf
cmpsb
push
xchg
insl
roll
xchg
add
cmp
scas
lock
in
cmp
imul
test
inc
mov
gs
cmpsb
or
push
jae
or
les
cmp
stos
mov
fdivr
imul
test
scas
or
loopne
movsl
sbb
fcoml
ret
jae
xor
lea
pop
data16
lret
or
lcall
inc
out
aaa
pusha
mull
and
xchg
jmp
in
jmp
adc
lea
mov
stos
adc
dec
imul
xlat
mov
inc
aam
in
sbb
aas
std
xchg
xor
sarb
jmp
lcall
shl
scas
push
lds
cli
inc
andl
aad
sbb
lea
xorb
mov
shrl
mov
and
loopne
sarl
sbb
cmp
jno
out
das
jl
xchg
and
mov
mov
sbb
dec
sub
push
xchg
xchg
mov
jle
xchg
aaa
xor
or
inc
dec
mov
js
ja
sahf
insb
xor
ljmp
sbb
fsubl
icebp
lock
or
adc
xor
push
pushf
ret
xor
add
sub
adc
mov
jo
mov
xlat
lcall
enter
test
or
dec
cmc
adc
je
mov
pop
jo
mov
sbb
mov
sub
je
cmp
arpl
mov
lcall
inc
hlt
adc
jns
shlb
filds
insl
mov
inc
add
js
fidivs
pop
cmp
sub
pop
cmc
mov
ja
leave
rcl
or
push
popa
imul
pop
ja
cs
sbb
nop
aas
adc
mov
or
push
or
addb
andb
dec
sar
andb
and
mov
xchg
aas
popf
pop
push
cmpsb
lds
js
in
or
dec
xor
es
rorl
mov
ljmp
xlat
test
loop
mov
fistpll
pop
pop
pop
sbbb
jnp
adc
inc
les
dec
bound
lcall
xor
jp
inc
mov
xchg
das
and
and
push
aam
add
in
sbb
fcomps
aam
mov
mov
je
jecxz
popa
arpl
lret
stc
imul
jo
jp
ss
je
scas
mov
arpl
pop
int3
repnz
int
mov
stos
mov
adc
sarb
je
mov
sub
mov
out
and
js
dec
jge
xor
push
dec
add
mov
jp
fldl
mov
enter
les
sbb
dec
stos
mov
push
mov
mov
mov
out
push
and
xor
mov
in
dec
pop
push
push
dec
mov
repz
jecxz,pn
cld
sub
jbe
dec
jns
inc
push
scas
push
mov
inc
mov
and
or
je
imul
icebp
inc
sbb
enter
cmpsl
pop
lahf
out
repnz
jl
or
push
aas
jb
mov
pop
scas
xchg
jb
cmpsl
cmpb
lret
and
shr
or
inc
rolb
inc
push
cmp
sbb
sbb
lds
fwait
adc
fwait
scas
lret
jp
ja
out
imul
push
aaa
flds
sbb
popf
cmc
or
or
sub
lret
stos
mov
push
fsts
push
push
mov
or
stos
mov
cmpsb
xor
pop
mov
loopne
scas
inc
cli
fcom
mov
xchg
repnz
pop
lret
lahf
rcl
rcl
fildll
push
cmp
cmp
pop
incl
dec
adc
mov
call
sbb
sub
xchg
lods
push
inc
add
pop
add
mov
movsb
fmull
inc
ds
jecxz
js
ror
fcompl
mov
inc
repz
das
test
sbb
loope
aas
lea
xchg
jmp
jp
dec
test
xchg
mov
jns
mov
or
push
jecxz
mov
hlt
mov
mov
mov
out
loope
xchg
sti
pop
pop
pop
stos
cmp
jne
adc
scas
cmp
mov
cmp
cmp
cmp
cmp
dec
dec
dec
xchg
sti
mov
mov
out
out
ljmp
xchg
inc
inc
iret
jmp
inc
frstor
cld
cltd
arpl
xor
shll
xor
mov
lahf
xchg
in
movsl
divb
ds
add
arpl
sbb
lods
add
xchg
and
in
js
mov
popa
adc
loope
push
mov
mov
jnp
icebp
xchg
inc
es
mov
jmp
mov
das
or
push
sti
mov
js
loope
notb
sbb
inc
mov
lods
mov
sub
ret
cmp
out
adcb
or
push
or
loope
mov
imul
adc
insb
lods
mov
inc
shl
orb
jbe
es
loopne
and
lea
dec
popa
pop
push
das
enter
xor
rcrl
popa
mov
divb
lcall
repnz
jae
or
pop
dec
lret
xchg
mov
lea
push
sbbb
add
xor
sub
cld
clc
test
pop
cmc
add
pop
daa
jge
pop
popa
push
dec
cmp
shrl
out
in
outsl
dec
pop
fdivrp
movsl
lret
add
push
iret
outsb
in
aam
or
cmp
pop
jp
sti
mov
mov
icebp
sub
add
pop
sahf
test
imul
jecxz
mov
in
cld
pop
insl
arpl
movl
jns
fwait
nop
test
pop
shrl
add
sub
push
ja
ja
shlb
lea
lret
sub
push
push
dec
add
or
pop
adc
sub
dec
dec
xchg
repnz
sub
and
xchg
loope
andb
movsl
rcr
insb
lods
push
mov
jmp
leave
pop
xor
dec
daa
sbb
add
mov
cmpl
add
scas
xchg
nop
imul
xchg
ficoms
mov
out
sahf
cwtl
jmp
in
dec
int
and
xor
nop
icebp
aas
inc
scas
dec
adc
shr
js
xchg
inc
outsb
xlat
loopne
jb
xor
loope
out
ror
adc
xchg
inc
stos
add
gs
sbb
sub
mov
data16
dec
add
push
sbb
dec
cli
mov
jecxz
rolb
aas
mov
mov
addr16
jo
mov
cmc
adc
dec
scas
adc
loop
mov
mov
and
decb
addl
ret
lods
out
push
test
mov
outsb
fstps
clc
mov
fistps
int
mov
je
aas
decl
incb
test
mov
mov
hlt
jl
imul
add
xchg
call
popa
mov
insb
sbb
dec
xor
shlb
out
shrl
out
push
mov
push
and
scas
adc
test
xchg
inc
add
add
jl
xchg
je
test
fs
scas
in
inc
jbe
insb
sbb
stos
call
stos
fdivrp
sub
cmc
pushf
adc
ret
fwait
sub
mov
mov
cmp
mull
mov
pop
repz
mov
mov
shufpd
cmp
std
jae
inc
test
insl
mov
xor
int3
sbb
push
in
push
xor
aam
xchg
aaa
pop
mov
and
dec
int
fs
fiaddl
jmp
and
fstps
dec
scas
popa
pop
jbe
dec
mov
mov
xlat
rcrl
cmpl
das
sbb
jns
sub
mov
popa
aad
inc
mov
mov
stos
in
gs
mov
les
xchg
pusha
sti
mov
notb
rcrb
sbb
into
jp
ss
cmp
test
xchg
pop
insl
dec
push
cmp
imul
xchg
xchg
sbb
sub
pop
push
aam
push
arpl
pop
aam
scas
pop
sbb
lock
js
jnp
push
dec
cmp
std
into
adc
sbb
adc
cmp
jbe
fimuls
mov
stos
cmp
inc
fwait
xchg
pusha
jb
outsb
jne
out
pop
push
push
pushf
push
xor
mov
push
loope
or
or
shr
mov
xor
mov
test
sub
pop
iret
mov
jns
xchg
xchg
adcl
add
fdiv
mov
subl
arpl
pop
xlat
fimull
push
lea
dec
lods
jne
cs
cs
sub
das
jmp
aam
test
push
mov
jne
and
cmp
lods
add
sti
dec
jecxz
push
loop
daa
mov
and
push
fcompl
scas
pop
ret
inc
cmp
jae
push
push
or
pop
repnz
sahf
jecxz
sbb
divl
push
cld
mov
js
call
sub
lods
mov
addr16
xchg
pusha
fildl
enter
mov
add
xor
dec
xchg
std
xchg
cli
mov
repnz
es
jmp
xchg
or
jns
mov
cmc
idivb
cmove
adc
enter
pop
std
jg
adc
cld
scas
push
sbb
mov
sbb
adc
or
inc
cmp
shrb
pop
cltd
mov
outsl
outsb
data16
das
pop
shrb
adc
outsl
push
or
mov
int
and
in
dec
mov
mov
push
pop
dec
lahf
aaa
sub
inc
std
pop
xchg
jnp
cmpsb
es
addr16
dec
mov
ss
inc
enter
sub
mov
jmp
insb
and
inc
xor
mov
xchg
fwait
push
divb
jp
imul
test
out
pop
adc
xlat
subb
xlat
lea
icebp
cs
imul
into
outsl
dec
adc
push
enter
clc
out
icebp
ret
mov
cmpsl
rclb
dec
xlat
loop
iret
dec
and
orl
loope
loop
or
add
in
sbb
aam
sub
orl
inc
xchg
dec
sbb
sub
addl
mov
sbb
sbbb
int
adc
dec
mov
inc
movsb
or
pop
jne
push
hlt
das
rcrl
aam
ffreep
cmp
repnz
jne
daa
mov
dec
xchg
mov
mov
jecxz
push
adc
mov
lea
inc
cmp
push
cltd
add
mov
adc
je
adc
xor
add
pop
pusha
les
push
hlt
neg
rcll
add
fadds
shll
mov
adc
or
out
pop
inc
pop
cltd
sub
gs
out
fistps
sbb
cld
cld
mov
scas
and
cld
leave
insb
sarl
imul
lret
incb
lcall
and
sti
mov
pop
adc
leave
and
bound
pop
aam
dec
mov
pop
pop
xor
inc
rorl
test
std
cmp
pop
mov
xchg
lahf
add
hlt
mov
inc
fs
insl
add
aam
jmp
sub
xchg
mov
mov
test
repnz
push
outsb
cwtl
rorl
movsb
cli
pushf
call
dec
in
mov
ja
scas
mov
jge
loop
loope
lds
xor
xor
push
andb
sbb
pop
test
inc
push
jne
add
xchg
mov
mov
add
call
pop
mov
rcll
out
mov
scas
arpl
ss
or
mov
jns
ja
scas
arpl
xor
xor
push
in
pusha
and
movsb
xor
cmpsl
dec
adc
adc
mov
cmp
mov
scas
dec
bound
push
orb
idivb
sbb
pop
aad
rol
cmp
fiadds
bound
mov
ljmp
mov
jg
cmp
mov
fldenv
popa
cmc
and
stc
imul
inc
inc
xchg
sarl
divl
pop
push
iret
stos
or
mov
add
in
mov
lods
mov
pop
out
sub
mov
mov
inc
push
int
and
into
inc
stos
fstp
pop
cmpsl
pop
jo
stos
add
leave
ja
movb
leave
jo
inc
outsl
push
sbb
fnsave
adc
les
aaa
nop
push
jl
mov
lret
lods
and
jle
hlt
add
or
xchg
add
jecxz
adc
add
in
clc
and
jmp
sbb
pop
std
push
mov
cwtl
adc
in
pop
rorl
push
daa
inc
mov
mov
out
imul
sti
xor
mov
loop
mov
in
sub
push
mov
mov
movsb
fsubs
xchg
pop
popf
int3
popa
subb
ja
adc
pop
dec
xor
or
imul
mov
push
ja
insl
add
pop
les
xor
repnz
mov
cwtl
or
mov
pushf
dec
jo
scas
shr
sub
clc
pop
mov
mov
inc
shl
jae
push
lea
out
inc
shl
inc
mov
mov
push
push
test
mull
clc
xchg
aaa
mov
pop
jae
imulb
scas
sbb
loop
dec
dec
sbb
test
popf
in
in
mov
and
orl
imul
cltd
sbb
in
test
or
sarb
sub
mov
mov
jb
orl
jg
cmpsl
fcmovbe
in
mov
repz
or
xor
mov
mov
xchg
decl
add
lods
mov
adc
add
cmc
call
out
push
mov
inc
mov
bound
addb
into
sbb
fidivrs
outsl
jne
or
push
mov
hlt
loopne
push
cmovle
jnp
xor
add
or
sti
aaa
jbe
scas
cltd
shll
mov
dec
mov
or
stc
xchg
lret
cmp
jle
fwait
rorl
sbb
jp
push
push
lret
roll
cmp
popa
mov
dec
lods
mov
cmpsl
adc
outsb
jp
repz
imul
cmp
jmp
adc
dec
mov
ss
jno
or
aam
sub
push
mov
sub
call
jecxz
jno
movsb
cld
bound
cwtl
loopne
pop
mov
push
xchg
and
jo
nop
pop
ror
pop
add
shrb
adc
shll
pop
dec
daa
stc
test
mov
cmp
or
outsl
pop
ret
mov
fdecstp
mov
imul
and
arpl
sbb
push
mov
jae
lret
fdivr
mov
sbb
lock
inc
adc
lock
sbb
popa
xchg
daa
pop
lret
jmp
mov
sub
push
das
movsb
mov
cmp
je
xchg
ret
and
loope
adc
fldenv
out
or
adc
fcomps
bound
pushf
push
sbb
int
repz
jne
dec
inc
jg
sti
hlt
ja
or
pop
rcl
mov
add
inc
popf
cmpb
pop
dec
or
insl
add
push
rol
std
xchg
mov
mov
xchg
mov
mov
jl
test
push
hlt
insb
sbb
int
lret
pop
jo
pop
dec
jne
xchg
xchg
cmp
dec
hlt
or
fs
arpl
ds
pop
arpl
jecxz
xchg
test
sahf
lret
add
xchg
pop
inc
cwtl
mov
fwait
push
or
out
lea
and
fistpl
dec
sub
pop
jg
cmpsb
cmp
test
xor
icebp
stos
sbbl
cli
daa
sub
ljmp
sub
cmp
clc
xchg
xchg
pop
push
jecxz
divb
das
insl
scas
xor
sub
mov
fwait
mov
cwtl
sub
out
lcall
adcb
subb
xchg
mov
pushf
push
pusha
lcall
ret
loop
xlat
inc
xchg
jno
jecxz
daa
pop
jno
stos
imul
fldt
scas
test
ret
lock
ja
pop
and
shll
insb
push
rcrb
push
es
das
movaps
je
sbb
and
sti
mov
pop
fisubrl
ss
sub
je
cwtl
hlt
ja
ret
ss
xchg
lock
ja
xchg
repz
jmp
mov
mov
lock
xor
cs
mov
orb
mov
imul
push
or
repz
dec
sbb
lcall
and
cld
jns
ss
stos
inc
lods
inc
iret
lahf
adc
das
cli
ja
pop
jno
cmp
pushf
mov
pop
or
pop
mov
sbbl
sub
dec
and
adc
xchg
mov
dec
sahf
lret
lods
push
xor
test
int3
xor
jg,pn
xchg
scas
imul
imul
pop
mov
cmp
mov
add
rcrb
pop
jne
xchg
outsb
xchg
xchg
hlt
jno
fcomps
int3
mov
xchg
sub
xchg
hlt
pop
fs
adc
rcr
lea
mov
push
jno
jo
mov
gs
les
cmpsb
sub
ret
movsl
push
sub
push
fsubrp
fimull
stos
ds
sbb
dec
jnp
mov
jae
int
fimull
mov
lods
pop
pop
je
in
mov
in
mov
dec
mov
mov
jmp
mov
gs
outsl
pop
and
mov
xchg
push
push
jnp
pop
enter
data16
and
add
mov
test
push
xchg
test
sub
lods
and
cltd
pop
cmp
push
test
lcall
popa
lea
add
xchg
jmp
lock
mov
or
cmp
rol
mov
inc
lods
push
add
inc
leave
or
inc
push
mov
jo
aad
mov
iret
or
mov
arpl
or
out
aam
pop
add
push
jmp
mov
cli
gs
fimuls
cli
xor
insl
aad
lcall
enter
inc
sub
into
imul
cmp
aaa
leave
push
xor
das
jle
or
pop
dec
xchg
call
clc
adc
jnp
lods
and
test
in
shl
adc
and
std
int
pop
test
gs
pop
mov
dec
mov
push
and
sub
outsb
test
adc
in
or
mov
lds
xchg
sbb
loop
test
iret
sub
add
aam
mov
movsb
repz
cmp
jp
scas
fdivl
aam
jb
xchg
adc
leave
aaa
mov
sub
movsl
iret
in
xchg
je
or
inc
test
push
enter
cmc
push
ds
add
dec
iret
aas
ret
ret
add
and
mov
fisubrs
icebp
in
iret
lock
shlb
mov
pushl
ret
mov
jmp
xor
jb
push
mov
pop
pop
mov
faddp
xchg
inc
addr16
movsb
js
mov
sbb
mov
cli
in
mov
loop
out
adc
push
ja
mov
icebp
push
fwait
mov
dec
xchg
push
xchg
dec
xchg
dec
adc
and
mov
es
cltd
inc
dec
repz
push
mov
xchg
mov
cltd
inc
pop
mov
and
xchg
jp
inc
fs
out
dec
ret
jns
popa
jbe
xor
mov
lahf
adc
cmp
in
sbb
xchg
notl
and
jbe
arpl
sub
cmp
in
push
lret
dec
mov
fisttps
aam
mov
adc
push
or
xlat
xchg
adc
ret
jbe
sbb
add
in
test
scas
or
cli
insl
test
test
es
outsl
in
testl
lods
pop
and
inc
xchg
mov
inc
test
and
stos
mov
jecxz
sub
push
jno
test
inc
and
std
test
lods
sbb
ja
add
repnz
push
test
jle
int3
imul
push
push
mov
testl
enter
xor
fwait
push
pop
enter
hlt
clc
dec
test
std
push
push
lret
imul
or
addl
mov
xlat
sub
xor
mov
aaa
cmpb
mov
shlb
xchg
push
jns
outsl
imul
popf
test
ljmp
mov
js
xchg
stc
add
jae
xchg
gs
shll
lods
pop
clc
out
push
sub
scas
mov
lcall
notb
mov
mov
push
js
gs
or
adc
out
jg
cmpb
lret
push
mov
dec
repnz
xor
aam
pop
mov
sbb
mov
cld
repnz
pop
mov
inc
sbb
mov
mov
adc
jno
add
mov
sub
into
ds
cmp
adc
adc
inc
stc
sub
mov
ljmp
sub
push
cmp
cmpsl
test
mov
sub
notl
dec
jge
push
subl
js
jae,pn
xor
sub
fldl
movsl
nop
inc
inc
aaa
clc
xorb
sbbb
test
pop
sub
mov
pop
jb
aad
ficompl
loop
jbe
inc
aad
mov
cmp
pop
or
aad
lds
int3
test
fisttps
jnp
sub
xchg
lods
or
popf
xor
pop
test
shlb
movb
jle
aad
aas
scas
fisttpll
ljmp
je
mov
arpl
into
cmc
repz
fidivrl
push
idiv
adc
cmp
aas
mov
inc
out
std
sbbl
into
mov
xor
dec
cmpsl
jo
outsl
jns
imul
lods
sub
cvtps2pi
into
sub
add
je
mov
fstpl
dec
movsb
stos
outsb
movsb
cmpsl
shl
or
jo
mov
push
mov
je
nop
arpl
in
mov
iret
lds
dec
sbb
scas
cmpsl
int
jle
xor
cmp
pop
popl
fcmove
out
mov
lea
lods
daa
cmp
push
xor
inc
lahf
out
xchg
fnstenv
shlb
push
adc
gs
push
fs
pop
cmp
jae
aas
dec
mov
jge
rorl
mov
mov
adc
gs
inc
or
jp
pop
dec
fdivr
in
subb
fisubrs
adc
push
inc
sbb
sub
stos
loopne
movsb
loope
pop
popf
mov
jge
jb
cmp
scas
ljmp
inc
cmp
inc
add
add
stos
imul
lret
inc
xchg
pop
out
jmp
and
push
add
xor
add
out
out
sub
test
fwait
sbb
out
pop
rcrl
push
cmp
mov
andb
ss
adc
cmpsb
xchg
xor
out
mov
stc
pusha
push
imul
sbb
outsl
adc
cld
mov
nop
cwtl
push
pop
sar
int3
mov
scas
sub
shrb
data16
xlat
xchg
arpl
xchg
jge
add
push
xor
adc
lods
cmpsb
movb
sti
dec
dec
mov
movsl
cmp
aaa
and
pop
hlt
dec
pop
xchg
stos
mov
sbb
pop
fbstp
mov
das
imul
sbb
loop
pop
xchg
push
jbe
mov
ret
jno
sti
hlt
jbe
outsb
cmp
adc
lret
pop
mov
xor
cmp
lret
mov
scas
or
mov
cmp
mov
ss
mov
fldcw
mov
aam
or
or
mov
inc
lock
jp
cmp
inc
pop
cmp
rcrl
pop
push
in
and
mov
popa
xor
mov
shll
subb
in
sbb
int
pop
cltd
and
ja
and
inc
xchg
push
jb
adc
fistpl
sti
into
and
pusha
jp
xchg
jge
push
sbb
aas
dec
pop
imul
filds
ss
lcall
dec
enter
in
aad
dec
ret
lcall
cmp
inc
cmp
movsb
scas
in
mov
ljmp
and
jp
test
dec
out
dec
jl
pop
mov
push
or
push
ret
mov
sub
pop
call
testl
adc
adc
rclb
popf
and
into
mov
in
clc
sbb
sbb
in
or
mov
sbb
mov
addl
mov
ljmp
insl
das
je
sbb
sbb
pop
hlt
adcb
and
rorb
jecxz
ljmp
mov
fwait
enter
pop
rcrl
movsb
adc
adc
xchg
dec
or
aad
test
test
mov
sub
dec
loope
std
arpl
sbb
sahf
cmp
sub
jb
inc
cmp
scas
pushf
pop
sbb
test
adc
mov
add
push
jl
and
popf
in
jo
lock
cmp
cmp
testl
cli
popa
stos
mov
std
notl
jp
stos
testl
lcall
insb
pop
add
lcall
push
in
loopne
sub
mov
fists
and
pop
dec
mov
xor
inc
sub
ds
in
lods
daa
sub
add
popa
push
mov
clc
iret
lret
in
popa
pop
iret
lahf
cmc
cs
rolb
aad
mov
insl
mov
cmpsb
and
rcrb
mov
iret
sti
xor
mov
and
fwait
in
mov
pop
imul
inc
inc
sub
adc
mov
adcb
xor
bound
fnstenv
aad
es
pop
ljmp
jecxz
sub
sbb
mov
xor
pop
push
mov
and
add
sub
inc
add
scas
popl
cmp
mov
call
push
cld
fucomp
mov
movsb
aas
lcall
insl
rcrb
pop
pop
lcall
mov
push
dec
mov
jecxz
lret
test
jbe
xchg
ss
push
xchg
test
mov
or
int3
inc
clc
lods
fsts
enter
jle
fdivrl
inc
cmp
push
movsb
cli
jl
mov
xor
mov
jl
jl
orb
ljmp
loop
mov
cmpsl
mov
and
shll
mov
jle
push
sbb
dec
jns
jg
xchg
xchg
inc
fdiv
lock
sbb
call
xor
outsl
mov
sub
push
jae
pop
mov
xor
mov
repz
xor
aas
and
addl
out
int
pop
popa
xchg
test
repnz
mov
sub
cmp
insl
inc
test
aam
jns
leave
adc
jl
xor
pop
adc
dec
stc
jle
adc
notb
cmpsl
lods
or
std
repz
out
and
ror
and
jle
js
inc
decb
pushf
mov
jle
in
inc
jmp
js
ds
push
xor
int3
push
push
dec
dec
inc
fildll
xlat
fwait
lock
hlt
sbb
aam
shl
push
enter
lcall
cld
pop
fnsave
xchg
or
mov
adc
aas
dec
repnz
and
jge
cmpb
mov
addr16
pop
push
in
aam
pinsrw
gs
rol
sub
sub
movsb
xor
call
lds
jns
aam
rclb
shl
jle
hlt
sub
add
rorb
jne
push
adc
orl
fs
aaa
outsl
inc
jg
scas
sbb
mov
mov
sbb
push
inc
or
jg
inc
push
dec
cmpsl
mov
pop
jmp
jg
out
outsl
pop
push
shl
mov
jno
mov
cld
sbbl
add
or
pop
xchg
pushl
imul
ja,pt
xor
pushf
in
jb
push
inc
sbb
mov
push
fidivrl
fisubs
inc
push
cmpsl
sbb
filds
fdivrp
addps
xchg
xchg
xorb
popf
cmp
push
adc
mov
jl
std
mov
sar
sbb
pop
cmp
test
lcall
iret
fs
decl
inc
lcall
jmp
pop
js
push
int
jl
dec
xor
xor
pop
sbb
mov
sbb
adc
daa
jmp
sbb
dec
mov
or
sub
or
xchg
and
xor
int3
push
push
sub
dec
xchg
fmul
cmpsb
ljmp
std
fnstsw
decb
lahf
ja
jb
push
mov
jo
std
inc
sub
cmp
and
push
pop
jmp
xchg
movsb
daa
lods
jbe
mov
add
imulb
xor
jne
movsl
inc
cwtl
mov
push
clc
xchg
add
icebp
scas
dec
subb
repz
pop
and
hlt
dec
aam
cmc
daa
outsl
mov
faddl
das
das
mov
daa
inc
sub
jbe
ss
cmpb
push
mov
xor
mov
in
pop
cmp
push
lret
push
adcb
fld
xlat
or
xchg
pop
add
xchg
rcrl
dec
or
jns
xchg
add
int
inc
jp
mov
mov
dec
pop
adc
cwtl
les
cbtw
aaa
mov
or
inc
adc
push
mov
xchg
mov
pop
or
movsb
mov
fstpl
mov
sbb
cltd
bound
mov
pop
mov
push
mov
adc
mov
xor
push
in
cmp
and
sub
cltd
cld
jnp
scas
dec
push
lea
dec
xchg
xchg
int3
xchg
popa
stos
dec
mov
pop
loopne
adc
push
outsb
mov
repz
insl
shlb
call
sbb
push
stos
mov
js
mov
push
xorl
pop
xchg
adc
jne
test
icebp
orl
stc
mov
push
cmp
incl
fdivrs
aaa
cmp
inc
aad
pop
mov
add
mov
dec
imul
stos
or
iret
mov
pop
mov
push
addr16
mov
mov
xor
stc
dec
ljmp
mov
inc
aaa
jge
jg
ret
mov
pop
std
dec
pop
inc
xchg
fadds
sbb
int
addr16
int3
mov
lods
insl
les
or
sub
pop
lds
jae
xchg
sub
mov
decb
mov
xlat
fnsave
or
repz
test
in
stos
sahf
in
mov
xchg
or
outsl
xor
lahf
scas
in
cmpl
andl
jae
shlb
stos
adc
fidivrl
cmp
cld
imul
orl
in
int3
push
mov
adc
aaa
or
inc
xor
out
add
jecxz
adc
or
clc
dec
mov
movsl
mov
das
andb
loopne
pop
sub
add
into
insl
mov
stc
leave
mov
jae
fwait
and
addr16
fnstsw
cmp
jno
fsubrs
je
rorb
sub
pop
testl
scas
mov
lods
pop
add
out
xchg
mov
sahf
dec
dec
jb
dec
je
aaa
fwait
dec
sub
add
sub
xchg
lcall
test
mov
test
inc
fnstenv
loope
ret
lcall
add
push
icebp
cs
loope
clc
call
dec
xchg
jmp
inc
shr
lds
cltd
test
inc
dec
cmp
push
cwtl
arpl
js
std
inc
or
push
enter
or
or
sbb
mov
stc
aas
dec
lahf
add
xorps
test
push
out
pop
mov
mov
mov
xchg
nop
iret
js
dec
add
dec
sbb
fsubl
gs
lock
sub
push
jmp
cmc
cmp
inc
addl
jge
or
mov
movsb
or
adc
add
mov
or
mov
cli
daa
and
inc
sbb
xchg
jmp
pop
sbb
sub
jecxz
add
cmp
cwtl
rol
arpl
dec
rorb
mov
pop
xor
jge
xor
scas
cli
mov
repnz
inc
cmpl
mov
addr16
scas
mov
adc
sbb
rcrb
mov
movsw
xor
mov
cli
stos
stos
int3
sbb
loop
test
xor
adc
fisttps
mov
fisubrs
cld
iret
into
lea
pushf
in
mov
jl
jnp
and
jle
xchg
lea
sbb
lahf
cmp
testl
bound
les
addb
adc
ret
and
xor
mov
mov
cmp
adc
ret
mov
cmc
add
ds
inc
scas
push
inc
sbb
cmp
mov
cltd
aad
fiaddl
dec
mov
inc
gs
bound
and
cwtl
je
adc
insb
sarb
icebp
sbb
push
adc
xchg
mov
cmp
pop
call
lods
mov
pop
aas
xchg
lahf
roll
sbb
dec
lods
dec
mov
movl
push
push
jno
add
xchg
and
inc
xchg
and
mov
sbb
adc
loopne
stos
cmpsl
fs
inc
cld
inc
xor
in
jnp
sbb
inc
ret
mov
insl
sbb
movsb
xchg
sbb
lahf
loopne
inc
adc
jb
xchg
jp
mov
and
ds
ret
push
cmp
popf
inc
cmpsl
faddl
mov
dec
jbe
lahf
push
test
scas
negl
and
das
xchg
loopne
sub
sub
pop
jmp
movsb
sbb
inc
mov
pop
fwait
leave
adc
lret
lcall
jecxz
arpl
sbb
add
mov
andb
sbb
xchg
pop
int3
cmp
nop
dec
test
ret
mov
dec
mov
movsb
pop
xor
ljmp
mov
addr16
gs
sbb
jmp
pushf
sti
pop
daa
test
sub
leave
jns
dec
push
xor
insb
andl
hlt
insb
dec
out
mov
aas
ja
cmp
je
cmp
rcl
sbb
out
scas
rclb
ret
mov
mov
cmp
add
mov
rcrb
retw
inc
and
or
push
fcom
icebp
jmp
out
fdivrl
jo
out
jg
jecxz
sub
in
mov
xchg
xor
cmc
mov
js
imull
cwtl
leave
fadds
jg
in
loope
xor
sbb
leave
jnp
test
jmp
or
cmpsl
sarl
das
mov
rorl
dec
fs
incl
and
les
test
scas
in
test
sbb
push
jle
xor
push
sti
pop
push
leave
rclb
andb
fs
test
lahf
sbb
adc
mov
fimuls
inc
xor
imul
arpl
dec
cld
aaa
int
xlat
cmp
pop
icebp
adc
pop
decl
lods
mov
mov
call
cmc
sub
jne
cld
inc
fidivs
idivb
loopne
mov
ds
jnp
xorl
push
mov
scas
aas
xchg
add
lret
pusha
inc
push
cmpb
je
daa
cmc
repz
loope
test
mov
ret
in
bound
loop
js
lock
mov
ret
xchg
adc
out
out
int
jbe
dec
adc
xchg
push
pop
lods
and
cmpsl
testl
cmpsl
push
mov
dec
pusha
mov
ret
std
xchg
clc
xlat
hlt
xor
lock
sbb
mov
mov
jl
outsb
clc
clc
aam
mov
xchg
fucomi
js
ljmp
fs
adc
lds
dec
mov
xchg
imul
repnz
push
mov
sub
les
inc
xchg
dec
push
xor
shrl
cs
pop
cmp
push
pop
sbb
cltd
dec
lods
test
fldt
mov
inc
and
mov
lea
popf
xchg
and
clc
xor
rorb
lock
mov
or
sarb
mov
cs
mov
pusha
scas
test
sbb
adc
push
je
out
add
loope
adc
aas
fwait
insl
adc
sub
xor
fwait
adc
out
gs
outsl
mov
lahf
pushf
sub
imul
jae
pop
pop
les
pop
pop
push
jecxz
ret
addr16
dec
rcll
nop
mull
mov
sar
add
lcall
cmp
stc
pop
mov
addl
cwtl
xor
xchg
mov
sahf
inc
pop
pusha
rorl
scas
rorb
mov
jg
mov
lcall
cmp
push
mov
popa
and
inc
test
pop
xchg
mov
into
fisttps
test
int
fwait
push
and
jbe
aam
movsb
xor
lea
mov
daa
jl
popf
jle
pop
dec
pop
iret
repz
movsb
cltd
iret
jp
pushf
sbb
xchg
fstps
test
fs
inc
xor
gs
lea
shlb
dec
jp
jbe
clc
add
rclb
add
test
jmp
scas
movb
jle
or
and
in
mov
in
inc
lcall
repz
pop
cmpsl
pop
les
adc
and
lods
movsl
mov
mov
dec
mov
loopne
jbe
cld
out
popf
mov
pop
jnp
pop
mov
add
shlb
mov
stos
pushf
hlt
imul
repnz
xor
sbb
int
or
sbb
xchg
xchg
out
test
movsl
mov
jmp
and
sub
dec
cmp
in
mov
mov
mov
push
mov
mov
leave
ret
mov
insb
cs
pop
subb
jns
test
out
xor
xor
std
jecxz
or
es
out
add
jg
cmp
pusha
mov
pop
inc
movsb
push
mov
xor
cmc
mov
and
and
js
aaa
push
scas
pop
scas
lods
icebp
and
xor
jno
movsb
mov
inc
shrl
xchg
inc
sub
mov
fiadds
push
push
out
ficomps
xor
or
lcall
dec
adc
loop
je
jmp
shl
cli
aam
not
jns
repz
jbe
hlt
push
inc
push
andb
pop
dec
pusha
adc
sbb
push
insb
push
fsubrs
cmp
out
je
iret
test
inc
cmpsb
xchg
mov
mov
movsb
mov
int3
lret
mov
mov
dec
jmp
cmpsl
mov
mov
mov
cmp
fimull
fldcw
into
iret
add
mov
add
fsts
rcll
iret
ljmp
inc
jnp
arpl
lcall
scas
mov
in
sub
mov
xchg
push
scas
into
add
in
ret
rolb
lret
lods
adc
stos
push
in
lcall
inc
pop
std
iret
adc
js
xchg
pushf
mov
out
cmp
cmp
shr
mov
cmpsb
in
pop
fsubrl
mov
nop
and
push
xchg
adc
mov
and
xchg
lret
cmp
jmp
xchg
xchg
xchg
loope
out
insl
mov
inc
dec
sbb
sub
jno
sbbb
xchg
sub
push
dec
aaa
fidivrs
ljmp
and
cmpsl
iret
negb
repz
js
aaa
lahf
and
mov
ret
mov
mov
iret
xchg
je
nop
jmp
and
test
sub
aad
test
scas
dec
dec
test
cli
mov
jl
jne
fwait
xchg
pop
lods
loope
rolb
jp
rolb
imul
nop
popa
mov
mov
fists
mov
xor
pop
mov
mov
jo
leave
arpl
mov
mov
push
repz
jns
pushf
fadds
test
jmp
jg
sti
inc
rorb
imul
mov
jmp
inc
sub
sbb
mov
ficompl
mov
pop
popa
mov
push
mov
icebp
xor
fisubs
xchg
stos
cmp
inc
stos
test
cmp
dec
inc
ljmp
inc
rcll
vpaddd
pop
cmp
push
stos
or
mov
inc
aaa
repnz
in
xorl
push
mov
xor
adc
dec
and
out
fldenv
sbb
sub
rcl
push
xchg
call
stos
sbb
adc
into
insl
push
jmp
test
xchg
adc
movsb
mov
add
mov
cmp
jmp
ds
adc
hlt
pop
in
add
or
xor
or
push
hlt
cs
pop
in
lahf
xchg
scas
pop
dec
fistpll
sbb
push
jmp
dec
stos
dec
inc
lea
inc
sahf
js
mov
mov
xchg
mov
cltd
xor
mov
and
or
push
inc
popf
xor
push
imul
flds
sbb
call
fsubrl
aam
inc
xlat
dec
stos
pop
mov
push
lock
xlat
into
xor
nop
je
sbb
push
cmp
loope
cmpsb
stos
dec
hlt
imul
push
movsl
in
in
rcrb
mov
mov
dec
leave
xchg
pop
scas
xor
inc
das
mov
cli
insl
cmpsb
mov
pushf
and
mov
mov
lahf
adc
mov
aas
inc
loopne
mov
out
sahf
lret
push
xor
lods
sbb
aaa
sbb
cld
sti
push
test
subl
pop
out
dec
repnz
jns
mov
pop
es
cmp
mov
lds
adcb
imul
scas
mov
dec
int
push
add
pop
aaa
subl
test
andl
out
sub
pop
test
jge
cs
int3
sub
addb
lods
pop
xchg
jl
ds
sub
xchg
jns
imul
and
adc
cmpsl
sbb
pop
mov
dec
out
jo
push
jns
jbe
mov
mov
jae
aam
or
mov
pop
sbb
imul
popa
in
pop
call
sub
into
push
imul
test
aas
inc
outsl
add
mov
sub
mov
decb
fcompl
imul
sub
sub
push
ds
je
or
cmp
int
mov
or
ljmp
jo
xchg
mov
sub
mov
jb
adc
leave
jle
adc
adc
pop
adc
out
pop
sub
inc
push
je
mov
sub
ss
push
dec
inc
in
pushf
inc
xchg
push
stos
pop
mov
cwtl
pop
xor
hlt
mov
lods
mov
mov
lret
or
mov
inc
dec
sbb
inc
add
mov
sbb
dec
mov
je
outsl
sbb
scas
and
xor
add
sub
mov
dec
sbb
lcall
daa
dec
jne
out
jmp
sub
xchg
ljmp
sub
jecxz
fsubrs
cli
sub
ljmp
xor
sub
dec
xor
clc
jae
stos
sub
sub
fnstcw
push
imul
add
fstpt
cmp
cmp
lret
pop
cli
push
shlb
testb
mov
mov
and
pop
call
addl
sbb
pop
scas
sub
ja
jne
jo
lcall
adc
or
xchg
mov
cmpsl
jne
inc
sbb
aam
mov
mov
xchg
pop
faddl
mov
gs
sub
dec
fcoms
stos
dec
outsl
lea
call
gs
cmp
xchg
push
cwtl
xchg
loopne
mov
pop
test
push
mov
adc
push
stc
sbb
add
cld
outsb
out
outsl
iret
pop
xchg
cmp
xor
scas
jle
hlt
out
popa
and
sub
jmp
jmp
push
scas
lcall
pop
das
ret
adc
icebp
popa
lea
mov
jle
imul
lods
out
sbb
ret
mov
in
push
aas
mov
rorl
shlb
push
icebp
in
repnz
dec
nop
cli
daa
js
arpl
es
mov
daa
jmp
or
mov
and
mov
adc
fs
pop
jb
cs
sub
dec
fbld
clc
lods
aaa
popa
jo
ret
and
mov
sbb
and
pop
lahf
loop
shll
lods
das
jno
mov
call
jb
in
pop
fsubrl
sub
mov
in
in
sbb
add
scas
xor
push
fs
xor
jne
movsb
out
mov
mov
jmp
dec
cs
xor
mov
dec
dec
pop
adc
rcr
flds
loop
fstpl
stos
jge
or
outsb
mov
insb
out
xor
repnz
outsl
leave
cmp
sbb
xchg
sbb
add
sbb
and
lret
xor
ljmp
loope
lret
test
pop
ficomps
xchg
adc
push
xchg
sarl
stos
sbb
push
aam
mov
cmpsb
xchg
add
sarb
cmpsb
mov
sub
sub
adc
loopne
int3
call
or
fistpl
iret
cmp
mov
or
add
popa
push
inc
js
jmp
out
lds
out
test
test
jb
sti
mov
cmc
popa
add
or
mov
lds
jle
push
in
push
stos
push
dec
out
and
setae
arpl
outsl
imul
mov
ud0
into
push
jge
cmp
scas
out
jge
xor
repnz
jno
jg
cwtl
jns
lcall
or
loop
xchg
mov
andb
jmp
aam
or
or
adc
bound
jp
inc
mov
lds
jne
cwtl
xchg
jns
sub
mov
inc
xor
mov
dec
add
into
push
je
lcall
lret
lods
sub
int
pusha
adc
flds
dec
mov
cli
and
loopne
sub
sbb
cmp
loope
ss
sbb
cld
cmpsb
cmc
inc
lods
ja
lret
cmp
arpl
xor
fwait
mov
cmpsb
dec
sub
lahf
dec
aaa
movsl
pcmpeqb
sbb
sbb
jp
and
pushf
hlt
cwtl
das
stos
ret
cmpsb
push
adc
movsb
xchg
cmp
mov
pcmpgtb
sbb
insb
fs
pop
inc
into
xchg
sarl
jle
push
test
stos
hlt
sub
pop
cmp
pop
and
mov
out
sbb
mov
test
ficoml
mov
xchg
mov
enter
pusha
je
mov
hlt
rcr
pop
dec
ja
lret
mov
lret
sbb
insb
sub
jg
lret
xchg
mov
cmp
push
pusha
adc
lcall
adc
and
stc
mov
call
rclb
mov
shlb
jecxz
ret
pushf
and
pop
jle
andb
mov
cs
call
xchg
mov
add
jno
push
push
dec
in
xor
mov
cwtl
movsl
xor
cmpsb
ret
fnop
mov
ds
ja
data16
and
les
andb
adc
fisubs
or
pop
push
adc
pushl
dec
cmp
pop
mov
scas
pusha
mov
ljmp
xor
xor
xor
lods
mov
xor
pop
xchg
test
cltd
movsl
out
pop
inc
fisubrs
into
inc
loop
and
dec
mov
xchg
les
pop
loopne
mov
enter
ret
sub
test
mov
cmpsl
call
decl
jb
mov
fwait
cmp
gs
pop
push
fistpl
insl
jne
mov
jp
es
repz
movsb
adc
nop
and
mov
jg
adc
dec
movsl
idivl
or
cmc
adc
push
cmpsb
lret
sub
mov
jmp
mov
cmp
lea
push
xchg
ret
cmp
aas
sub
push
lea
shll
xchg
mov
dec
stos
dec
xchg
nop
push
shrb
insl
xor
test
arpl
xor
fistpll
mov
jno
xchg
mov
mov
push
dec
lret
sti
cmpsl
mov
and
push
push
mov
push
push
mov
push
pop
bound
mov
fmul
inc
sub
xor
adc
mov
push
insl
pop
mov
in
mov
inc
push
pop
in
sub
cmp
sbb
or
out
pop
lea
cmp
mov
pop
mov
sarl
pop
out
inc
push
rcrb
mov
mov
mov
les
out
sbb
icebp
fildl
popf
cltd
sbb
movsl
jp
jg
ficomps
pop
jne
aas
sub
js
iret
push
sub
imul
loop
inc
insl
push
aaa
sahf
stc
adc
movsb
push
push
and
xchg
or
push
jg
jbe
les
sbb
xor
mov
les
cmp
ret
fbld
add
pusha
jnp
repz
mov
sbb
xor
adcb
sbb
into
dec
cmpsb
jo,pn
or
add
jnp
outsl
and
mov
inc
xchg
pop
hlt
adc
jne
lock
sahf
sub
pop
xor
fistpll
sbb
imul
stos
nop
push
jl
cli
ljmp
data16
inc
xchg
sbb
push
push
in
inc
in
rolb
popf
call
mov
imul
sahf
mov
fadd
cwtl
fistps
xchg
push
cld
mov
and
fnstenv
mov
fimull
sbb
jae
dec
rorb
mov
push
xchg
bound
mull
cmp
call
xor
pop
sub
inc
cmp
aas
mov
pop
pop
push
cmp
push
dec
and
push
lret
sti
int
inc
adc
stos
dec
stos
outsb
je
mov
outsl
inc
int3
mov
repnz
add
dec
insb
push
loop
adc
or
rcr
xrelease
ret
jle
out
mov
cld
lahf
aas
push
adcb
push
test
pop
or
out
and
mov
or
jne
pop
rcll
les
ja
pop
shl
test
add
out
in
enter
mov
push
push
and
pop
inc
xchg
jbe
insb
mov
outsl
mov
outsb
push
pop
push
mov
adc
pop
dec
add
ja
or
mov
iret
sub
and
xor
movnti
or
popa
rcll
rol
stos
arpl
xchg
or
cli
sub
add
xchg
dec
hlt
lret
jne
jb
clts
dec
and
loopne
mov
shlb
mov
aam
dec
mov
dec
xor
jmp
test
mov
cmp
jge
mov
push
or
ror
sbb
icebp
icebp
fisttps
pushf
jmp
js
imul
jmp
mov
jg
sbb
shlb
lods
and
daa
jno
aaa
sbb
xchg
sub
pushf
jge
xchg
fldenv
jne
test
cmc
pop
or
xor
jecxz
pushf
hlt
or
mov
loope
test
aaa
adc
rcll
push
xchg
aas
dec
mov
int3
aad
push
inc
jb
cltd
and
mov
in
jae
inc
je
das
xchg
add
inc
inc
fnstenv
add
scas
pop
and
add
out
jne
fsubl
xlat
push
lret
sub
adc
jne
fbstp
pop
xchg
push
mov
nop
js
push
inc
cli
insb
mov
sub
push
fdivl
test
dec
mov
cmp
into
popa
jle
dec
push
cmpsb
gs
pop
or
or
xor
cltd
cld
adc
jne
rcll
jmp
ds
and
jle
pop
mov
mov
insb
adc
push
out
ljmp
sub
rcr
xchg
or
sbb
roll
cmp
push
int3
nop
ficomps
lcall
iret
and
icebp
addr16
cmpsb
jae
incl
mov
nop
mov
add
lahf
push
aaa
adc
popf
pop
insl
mov
or
xor
je
xchg
adc
and
xchg
jo
inc
jge
push
inc
rol
mov
in
or
imul
bound
inc
in
inc
fs
pop
xchg
lods
or
mov
sbb
mov
shr
mov
out
adc
sub
daa
mov
push
data16
mov
mov
popa
pop
subb
push
out
xchg
xor
mov
pushf
add
add
add
notl
jl
or
add
mov
ret
adc
jg
mov
mov
add
dec
add
rorl
xor
nop
pop
xor
cmc
push
jo
pop
dec
orl
loopne
test
add
ror
mov
inc
aaa
mov
push
and
pop
push
cs
jne
pop
cmpl
int
mov
sub
movsl
jl
out
and
andl
xchg
dec
cmp
sbb
insb
dec
out
inc
out
es
jbe
and
rcll
cld
jmp
push
jb
cmp
stc
outsl
xchg
and
push
inc
insl
cwtl
pop
mov
and
cmp
and
pushf
mov
push
fsubl
aam
xchg
and
int
xchg
push
cltd
in
jb
rolb
or
loop
int3
in
stos
mov
pop
imul
mov
jg
push
into
pushf
mov
mov
ror
sti
in
out
ret
sbb
xor
loop
int3
sub
out
mov
fcoms
mov
sbb
lock
insl
jns
jns
cmp
into
xor
or
data16
imul
popf
xor
int
cld
mov
fst
add
jae
jg
pusha
push
xor
mov
xchg
stos
mov
push
add
movsb
push
jp
in
lret
mov
sbbb
dec
pop
inc
cmp
inc
inc
mov
imul
mov
pop
mov
or
lcall
jp
aam
jecxz
mov
std
jno
jnp
xlat
lret
pushf
cmpsl
aam
jmp
shll
pop
stos
fcompl
mov
mov
rolb
push
fstpt
jo
aas
inc
dec
mov
xchg
ret
xrelease
movsl
jl
jo
loopne
xchg
das
icebp
push
jns
pop
aas
insl
inc
decb
mov
sub
dec
insl
popa
adcl
sub
shlb
rcl
mov
out
cmp
pop
and
ror
mov
xor
pop
setge
bnd
in
sbb
test
cmc
test
inc
cs
jp
jae
lods
mov
mov
sti
pop
pop
std
loopne
cmp
inc
rclb
mov
mov
int3
loop
test
lea
push
in
hlt
cmpsl
loopne
imul
call
cmp
scas
repnz
cs
sbbb
pop
aas
and
sbb
pop
xor
cmp
and
or
ds
xlat
sub
cld
jg
inc
repnz
sarb
xchg
jecxz
adc
xor
mov
int3
int
cmc
clc
js
adc
pop
xor
xor
jb
out
mov
push
orl
std
sahf
stos
test
lods
pop
popa
arpl
f2xm1
cmp
lcall
sub
leave
dec
ret
fisubs
popa
lret
xor
lret
popf
into
aam
into
andb
jnp
cwtl
mov
push
gs
call
mov
mov
mov
mov
popf
enter
dec
outsb
add
jae
and
xor
mov
xrelease
dec
ret
cmpsb
in
in
mov
daa
jbe
sbb
and
icebp
sub
mov
and
lds
in
stc
jecxz
jmp
xchg
lret
cmp
push
or
adcl
shr
mov
rcll
shrb
shlb
inc
xchg
xorl
jne
icebp
sbb
push
clc
xor
or
push
sbb
sti
add
pop
adcb
repz
cld
cmp
push
sub
adc
adc
clc
cmp
in
loope
jb
aad
xlat
adc
scas
cmpsl
es
std
xchg
jno,pt
data16
or
pop
ret
adc
add
push
xor
or
test
fsubrs
sbb
mov
xor
stc
pop
xchg
adc
stos
and
aaa
icebp
inc
lods
mov
nop
imull
in
and
push
into
movsl
mov
movsb
mov
add
mov
dec
adc
xchg
cmp
aaa
mov
sarl
adc
cmp
mov
aad
dec
mov
pop
nop
add
xchg
sbb
mov
jb
mov
dec
outsl
jge
dec
out
and
mov
add
nop
xchg
xor
cwtl
mov
fs
mov
dec
xchg
push
insl
in
hlt
pop
push
sbb
mov
lret
push
jae
sti
jae
add
pop
sti
stc
pop
out
add
in
pop
sbb
out
jmp
push
test
pushf
pop
enter
inc
sub
fs
add
jp
inc
jbe
sub
pusha
mov
in
inc
mov
test
int3
out
psrad
jge
mov
ja
ja
mov
push
and
xor
jg
lods
int
pop
or
dec
loope
adc
aad
dec
sbb
or
pop
mov
fisttpl
mov
dec
insb
aam
aaa
add
add
pop
es
lock
inc
sahf
pop
int
scas
push
sbb
add
ja
pop
sbb
sub
mov
cmp
jno
jmp
and
inc
movsb
into
push
mov
call
test
adc
adc
jge
ffreep
xchg
lcall
loope
mov
xchg
cmpsb
imul
cwtl
loope
cwtl
sbb
mov
push
out
push
xchg
cwtl
rcll
je
sub
xchg
jge
cs
mov
push
in
rol
sub
call
dec
push
pop
cmp
jns
mov
aad
into
stos
push
dec
jns
pop
fwait
mov
xchg
ret
sub
push
jb
dec
inc
cmpl
sahf
loopne
repz
das
jge
xor
bound
adc
jnp
scas
cmp
xchg
xchg
pop
xchg
push
jmp
hlt
leave
aad
adc
test
aam
leave
rorb
rcr
insl
cmp
inc
dec
or
push
fimull
lds
push
loope
sbb
das
int3
mov
ret
les
dec
jecxz
scas
pop
jl
jmp
adcb
sub
mov
or
mov
inc
mov
std
cli
sbb
shlb
fistpl
push
mov
cmc
cmp
test
xchg
cmpsb
xor
push
outsb
cli
mov
notb
inc
insb
fwait
mov
roll
mov
adc
jno
das
xchg
jb
daa
mov
outsl
ss
leave
fstps
or
sub
mov
fdivp
shlb
jp
pminsw
ss
cltd
aam
and
jbe
add
mov
jmp
or
jp
fistpl
inc
syscall
scas
push
sub
sub
mov
inc
loopne
dec
lods
jne
or
and
cmpsb
outsb
sbb
andb
adc
xchg
xchg
adc
jge
inc
dec
aad
and
cmc
cwtl
jmp
or
jbe
jae
inc
sbb
xchg
dec
dec
les
cmp
call
shll
push
pop
pop
fcmove
repnz
sub
mov
leave
cltd
adc
insb
movsl
data16
jb
mov
sub
cltd
inc
lea
mov
adc
xor
jecxz
lcall
mov
outsl
out
rcrb
outsl
movsb
inc
jb
out
and
aas
sbb
xor
mov
cmc
insl
mov
mov
repz
mov
lret
fsubr
dec
or
mov
mov
sete
push
pop
and
cmc
pop
cmpsb
inc
lcall
cltd
aas
mov
data16
fwait
mov
dec
push
or
xchg
dec
xchg
xchg
ja
jge
mov
fistl
ret
cli
lock
jb
push
or
notl
pop
and
mov
jbe
cld
xchg
push
mov
lods
add
shl
xchg
cmp
int3
lret
loop
mov
cmp
mov
and
cmp
outsb
jle
pop
fs
out
pop
add
lock
and
jp
or
mov
gs
inc
in
inc
out
add
int3
and
inc
xchg
insw
sahf
cld
inc
cld
lods
aad
sub
lahf
in
lock
enter
clc
orl
js
add
lret
aas
sub
enter
dec
cli
fstpl
outsb
loope
pop
sbb
jge
lods
cli
mov
insb
mov
xchg
fucomi
pop
dec
xchg
push
mov
mov
insb
popf
xchg
push
rcrb
push
mov
adc
call
mov
and
ljmp
inc
jbe
mov
ret
push
pop
mov
push
ret
or
push
lods
test
jl
test
and
push
js
pop
mov
mov
sub
call
icebp
cmp
add
in
scas
xchg
sub
cmc
sbb
mov
mov
insl
sbb
sahf
cmovg
outsl
mov
mov
outsb
icebp
mov
les
push
mov
leave
out
jne
cmovne
xor
mov
and
in
adc
sub
mov
or
mov
aas
ret
add
sbb
jbe
pop
daa
out
test
fcmovnb
cmp
cmpb
out
out
addr16
push
jnp
or
les
in
inc
xor
inc
xchg
mov
mov
or
mov
cmp
sarl
xchg
pop
insl
xchg
mov
xor
out
test
inc
mov
push
cmp
fs
and
dec
in
cmp
out
cmp
mov
test
dec
cmp
and
sub
les
and
rcl
in
ret
pop
movsb
add
sub
call
or
test
gs
cmp
sub
or
xchg
jmp
sti
hlt
fidivrl
fs
dec
cwtl
fs
cmc
es
fldcw
mov
dec
das
rolb
das
jecxz
rclb
add
xor
jmp
rcrb
in
mov
dec
mov
mov
or
or
fidivrs
xchg
addr16
dec
cmc
mov
aas
xor
aaa
mov
outsb
ss
addr16
das
jge
xor
aaa
mov
mov
mov
shrl
mov
mov
les
push
filds
lcall
add
or
mov
out
mov
xchg
iret
mulb
xor
cmp
out
mov
mov
push
cmpb
jle
ficoms
fcmovbe
cmp
jle
xor
inc
inc
mov
shl
xor
add
sub
mov
rorb
lret
clc
push
pop
pop
jmp
nop
cmc
addr16
add
mov
ret
xor
mov
inc
pop
mov
inc
sbb
arpl
pop
pop
sbb
stos
call
aam
mov
adc
scas
pop
dec
into
popf
push
sahf
movsb
rcrl
int3
jecxz
mov
and
cmp
imul
arpl
lds
mull
aas
data16
dec
inc
movsl
and
pop
ja
mov
lods
jecxz
dec
and
stos
add
movsl
cwtl
push
clc
mov
cltd
loopne
fnstsw
adc
rcll
popa
lds
nop
rcll
push
inc
cmp
lock
jo
popa
add
pop
int
das
xor
and
or
push
or
lahf
mov
xor
sbb
adc
or
mov
push
jge
testb
mov
into
sub
pop
cltd
jae
sbb
sahf
cld
push
into
adc
out
cmpsl
test
and
out
and
add
or
bound
fiaddl
dec
aaa
loope
mov
rcrl
aam
push
mov
stos
mov
fcomps
xchg
fbstp
push
aam
or
mov
cmp
push
clc
outsb
cmp
lcall
pop
push
out
xor
mov
pcmpeqb
mov
cmp
or
sub
nop
push
int3
sbb
sti
mov
add
daa
push
cmpb
insb
mov
and
inc
int3
adc
cmc
stc
fstpt
popa
js
push
pop
pop
icebp
test
mov
push
or
or
iret
in
sub
pushf
mov
ja
cmp
cmp
outsb
lods
repz
ret
sub
lea
xchg
jnp
mov
vpsubsb
lret
xor
cmp
mov
test
jg
outsl
jne
sbb
pop
jge
int
in
cmp
sbb
repz
ljmp
push
jle
xor
daa
fdivp
pusha
jle
sti
movsb
pop
xor
push
repnz
jecxz
push
lret
jmp
and
movsl
dec
sbb
in
xor
es
and
sub
mov
mov
call
scas
sti
pop
and
cmp
pop
xlat
sti
in
xchg
push
sti
push
mov
popf
add
enter
and
xor
mov
mov
in
mov
int3
popf
and
imul
cmp
cmpsl
sbb
fisttpll
lahf
inc
lods
sahf
inc
xchg
cmp
rorl
dec
jle
jmp
dec
into
outsl
or
mov
fucomip
movsl
mov
test
adc
xchg
into
pop
xchg
lret
jns
int3
cmp
loop
jae
and
loop
outsb
push
mov
xor
and
sti
in
pusha
lret
fisubl
jl
repnz
or
je
es
pusha
fidivs
push
xchg
pusha
shrl
xor
pop
jns
xlat
addl
addr16
mov
shrl
pop
insl
sub
addr16
and
lock
dec
sbb
and
cmp
popa
orl
pop
adc
push
push
push
movsl
or
pop
movsl
jbe
and
dec
lahf
jmp
das
jne
sbb
fs
cmp
pop
add
or
loope
xchg
cltd
popf
mov
movsl
mov
cmpsb
lods
dec
mov
ret
les
loope
fdivrs
cmp
mov
lret
jno
and
insl
fsubl
and
je
mov
cmp
aaa
or
pop
lock
inc
dec
and
jbe
push
add
and
out
testl
pop
out
aam
pop
jle
movsl
adc
pop
fs
lret
out
and
stos
test
add
sbb
sub
xlat
mov
scas
inc
xchg
loop
cmp
fstpt
arpl
jp
or
out
push
call
scas
xor
mov
iret
and
push
cltd
push
scas
call
jno
sbb
gs
mov
cmc
int
xchg
loopne
push
adc
sbb
cli
push
inc
dec
pop
dec
insl
loopne
add
or
xor
mov
jo
out
xchg
fildl
jmp
test
push
sarl
mov
adc
push
jno
test
xor
js
sarb
or
int3
movsl
int
mov
jbe
mov
loop
leave
add
xlat
fildl
repz
xchg
arpl
les
cli
or
jg
loop
lcall
fidivs
popa
enter
mov
inc
dec
push
jg
ret
xchg
popf
mov
testl
into
std
fucomi
xchg
pop
bound
loope
mov
cwtl
cmp
repz
aad
bound
xor
hlt
arpl
xchg
or
data16
jmp
jne
push
mov
xor
mov
cmp
mov
push
std
in
inc
pop
push
xchg
sbbb
dec
sarl
insl
enter
mov
cmc
mov
loope
sub
ss
xor
popf
mov
loop
and
push
mov
jl
movsb
add
mov
test
stos
add
je
sbb
inc
push
jg
xchg
sbb
sahf
shll
or
add
popa
mov
jge
fwait
push
add
loope
inc
add
outsb
inc
mov
into
cmp
popa
pop
int3
inc
scas
dec
jns
repz
bound
cmc
mov
test
orl
or
in
lret
or
lcall
lds
sbb
and
or
enter
imul
sbb
xchg
ret
jle
mov
pop
xor
lahf
loopne
je
push
aaa
stos
cmp
dec
enter
sub
jns
or
xchg
mov
adc
shll
das
cmp
pop
and
fs
int3
mov
push
imul
mov
mov
and
xor
add
xor
inc
jo
clc
fisttpl
data16
jge
mov
push
or
roll
lret
das
es
sub
jl
insb
xchg
jle
scas
mov
loope
and
and
movsb
or
iret
rorl
mov
add
push
mov
imul
cmp
insl
mov
divb
rcrl
cmp
inc
lcall
pop
stc
push
cmp
mov
push
push
push
orb
inc
or
fisttps
push
mov
stos
push
xor
push
aaa
sti
shrl
in
idiv
push
sbb
sbbl
jno
xchg
xor
xchg
or
adc
outsb
sti
lahf
call
daa
sub
sbb
fs
aaa
js
mov
add
in
push
mov
fisubrl
bound
and
pop
sub
addr16
cwtl
out
lods
in
fidivrs
lret
mov
adc
or
or
enter
push
dec
jno
push
jno
std
pop
push
push
sbb
addr16
cwtl
mov
icebp
cmp
add
sbb
sub
insb
mov
scas
mulps
add
repnz
inc
addl
mov
pop
dec
shlb
rorl
mov
adc
cmp
loop
les
cmpsb
or
cmpsl
hlt
add
pop
addr16
aas
nop
push
and
inc
or
adc
push
pop
dec
sbb
arpl
mov
inc
pop
push
sbb
jmp
dec
nop
dec
cli
out
sbb
imul
push
xor
push
int3
ljmp
and
aas
mov
call
push
pop
jae
mov
cs
mov
outsl
das
fmul
inc
repnz
rcr
sbb
js
pop
sub
enter
mov
notb
mov
inc
cmp
out
movsb
pop
dec
icebp
xchg
clc
push
sbb
sub
or
loopne
mov
nop
jg
imul
iret
inc
dec
data16
les
aas
mov
mov
popf
sahf
movsl
fsubrs
je
cmp
fldcw
stos
and
mov
xchg
or
xchg
xor
inc
or
push
arpl
outsl
stc
test
cmp
mov
into
pop
sbb
xor
cmp
gs
mov
int
das
shrb
pusha
cmc
jo
mov
insb
scas
pop
pop
push
out
jle
xchg
sbb
sbb
sar
in
cmpsl
sbb
loop
sub
fstpl
cmpsb
dec
xor
dec
mov
mov
xor
loopew
rcrb
mov
pop
xor
addr16
cmp
in
mov
lods
xor
mov
cmp
dec
mov
ja
dec
mov
je
dec
jg
stos
ficompl
std
in
aam
fs
xchg
pushf
dec
and
outsl
mov
cmpsl
shlb
fiadds
aam
pop
mov
loopne
rcl
repnz
pop
adc
insb
lock
aas
add
cmp
mov
iret
xor
pop
sbb
cmp
and
sub
add
sbb
inc
push
out
push
cmp
sub
add
fistpl
inc
adc
mov
sbb
nop
push
mov
adc
mov
inc
testl
scas
or
insb
add
clc
mov
cwtl
add
ljmp
adc
es
outsl
pop
pop
mov
xchg
dec
int
and
and
jae
rcrb
fistps
sub
aad
or
jne
scas
repz
sub
pop
andl
lcall
stos
add
dec
push
and
sbb
jno
cmp
es
add
sbb
ret
sub
fstpl
fwait
sbb
fsubrl
rcrl
sbb
sbb
inc
cmp
jge
adc
dec
mov
int3
nop
enter
iret
lret
adc
sbb
out
cmpsb
hlt
mov
out
arpl
add
hlt
mov
pop
js
cmp
and
pop
cld
stos
add
dec
cli
mov
cmc
sub
mov
mov
js
fbstp
add
sub
mov
adc
adc
out
fcmovnbe
sbb
ret
fistps
sbb
popa
ds
xchg
out
jl
push
into
xor
pop
repnz
jns
sub
sbb
into
cmpsb
in
sti
in
out
xor
pop
mov
aaa
rcll
jnp
pushf
cmp
push
lret
je
mov
sti
ds
out
and
add
loopne
cmp
pop
cmp
mov
test
aam
repnz
mov
insb
dec
movb
push
or
xchg
dec
jmp
test
pop
popf
aas
push
and
xchg
sbbl
sbb
jp
cmp
mov
fsubr
bound
movb
cs
clc
jbe
and
leave
cli
repnz
dec
cmc
inc
or
fadds
cmc
int
aam
adc
test
out
push
das
xorb
push
sbb
orl
mov
scas
stc
mov
mov
or
xchg
leave
mov
mov
js
int
add
adcb
mov
insl
sub
mov
dec
pop
in
fcompl
or
inc
jl
push
lds
pop
push
and
push
in
loop
enter
and
aas
lret
lcall
stos
je
out
sub
push
filds
lret
cwtl
mov
sub
and
xor
fdivl
hlt
rcll
pop
mov
inc
pop
aad
adc
mov
add
imul
inc
dec
aad
cmp
xor
popa
adc
lret
sub
cs
adc
jg
xchg
das
pop
mov
stos
xchg
mov
mov
cld
les
xor
fwait
mov
push
sti
and
inc
xchg
out
dec
jecxz
jnp
mov
nop
mov
sub
push
ljmp
ljmp
test
or
xor
mov
push
outsb
dec
test
mov
push
imul
data16
mov
data16
daa
inc
gs
lds
sbb
std
sub
mov
jb
data16
div
outsb
aam
mov
scas
jmp
fdivrp
pop
jg
and
jne
loopne
dec
dec
scas
negb
jno
mov
aas
jns
fnsave
hlt
sti
jb
pop
roll
mov
mov
jo
sub
sti
jo
mov
mov
dec
shlb
std
and
xchg
pop
jns
xchg
adc
jns
sub
jae
mov
imul
jb
dec
push
sbb
push
adc
push
clc
orl
mov
fidivrl
popf
ss
sbb
mov
into
xlat
jno
add
pop
dec
sahf
jae
loopne
adc
fidivl
mov
aaa
push
xchg
bound
sub
arpl
mov
mov
push
cmp
cmpsl
stc
add
repnz
popa
movsl
jns
leave
push
iret
mov
adc
push
push
ljmp
repz
loope
add
fwait
sbb
js
pop
dec
out
mov
mov
pop
xchg
subl
sar
pop
jns
icebp
outsl
popf
sti
push
nop
int3
push
and
shr
fs
cmpsb
xlat
push
daa
stos
andb
pop
pop
or
add
xchg
repz
jge
je
nop
sbb
mov
mov
movsl
lcall
lahf
dec
jns
jp
jnp
or
dec
fadd
dec
lahf
loope
lods
movsb
pop
lret
arpl
push
or
mov
mov
insb
imulb
xchg
jae
loop
lods
leave
ficoml
push
stos
jb
jo
cltd
dec
rorl
and
jge
sbb
lock
shll
sbb
jae
jmp
les
pop
xor
bound
shrb
inc
sbbl
dec
mov
xor
adc
xchg
fcomps
adc
aaa
inc
push
jo
cmp
jg
xchg
mov
outsb
test
mov
movsb
aad
add
mov
mov
fs
mov
out
xchg
push
test
scas
push
or
cmpsl
mov
pop
out
push
pusha
push
sub
ret
sub
and
xchg
sbb
sbb
sbb
cltd
gs
ret
das
fidivrl
ja
mov
shlb
out
cmp
in
shrb
push
arpl
push
xor
adc
lea
dec
call
pop
mov
popa
pop
scas
pushf
push
cmp
out
push
bnd
stc
xchg
fcmovnbe
jp
shrb
fisubrl
int
mov
push
mov
pop
add
mov
mov
mov
mov
push
or
push
jp
pushf
mov
insl
movsl
sbb
das
push
sbb
add
and
jp
jmp
addr16
push
aad
push
cmp
inc
jecxz
int
push
mov
dec
mov
leave
or
fsubrs
push
mov
call
jl
shlb
or
adc
and
inc
mov
mov
xchg
mov
dec
xlat
jl
movsb
loope
fistl
cli
push
stos
adc
push
cltd
mov
and
xor
mov
aaa
ds
inc
inc
aaa
xchg
push
mov
adc
daa
xchg
mov
in
in
lods
icebp
xchg
aam
push
andb
arpl
pusha
scas
ss
shlb
inc
mov
fdivr
xchg
and
xor
jge
lock
pop
imul
ss
sbb
aam
xchg
loope
sbb
push
add
dec
icebp
jne
imul
loopne
push
test
rcrl
mov
in
jnp
lret
cmp
and
xchg
push
xor
imul
rclb
rorl
cltd
aas
or
xchg
push
jp
cmp
jp
cmpsb
hlt
mov
jp
mov
xor
push
xor
loopne
in
pop
dec
in
stc
jmp
dec
mov
xchg
push
fidivrl
inc
loope
cmp
and
xchg
push
mov
mov
loope
fldenv
int
daa
loopne
mov
lret
ljmp
jns
mov
push
adc
movsb
cmc
adc
cli
or
mov
shrl
or
addr16
xlat
xor
roll
dec
es
popa
mov
sahf
data16
or
aam
xor
lahf
xor
enter
aas
pop
ds
std
aaa
leave
jl
test
stos
int
mov
xchg
push
push
lret
dec
ljmp
jb
cwtl
pusha
dec
les
cmp
dec
mov
jecxz
cmpsb
add
add
push
lret
ja
ss
cmpsl
or
lret
inc
adc
cmp
dec
xchg
xor
pop
mov
hlt
lea
fildll
movsl
mov
push
ja
xchg
pushf
dec
aas
pushl
push
xchg
shrb
mov
movsb
xchg
jne
lds
mov
and
xchg
stc
lods
pushf
jp
lahf
push
cltd
adc
adc
nop
mov
cmpsl
push
dec
xchg
jge
push
das
imul
data16
sbb
daa
div
int
imul
jne
lock
cmpsb
aam
xchg
cmc
xlat
aad
add
in
and
loope
inc
push
call
xchg
scas
cltd
or
xor
hlt
xchg
testl
inc
add
jl
sub
mov
fsts
and
cmpsb
pop
imul
dec
ljmp
test
bound
fisubs
mov
mov
int3
push
out
cli
jnp
mov
test
inc
fdiv
dec
out
cld
mov
sbb
les
pop
or
xchg
push
test
sti
xor
sahf
adc
mov
and
data16
fadd
outsl
lahf
push
in
xchg
es
push
loop
outsb
call
xchg
lea
cmp
lret
sbb
lds
inc
stc
mov
push
pop
push
insb
dec
xlat
mov
mov
mov
pop
cmp
pop
push
sub
xchg
jae
pop
sbb
addr16
add
sub
jb
fistpl
addl
pop
push
mov
push
ret
inc
push
int3
xchg
test
imul
xorl
daa
bound
into
xor
add
test
add
pop
lods
fsub
or
push
xor
sbb
ljmp
sub
mov
lret
lea
aas
push
xchg
adc
inc
adc
lea
negb
or
adc
lock
gs
rcrl
sub
jmp
test
push
xchg
cmp
adc
xchg
inc
stc
jl
out
mov
mov
adcl
incb
xor
dec
std
fadds
pop
sub
and
movsb
aaa
test
lods
mov
lods
push
and
pop
and
or
dec
ds
inc
dec
lock
lahf
lock
pop
stos
jge
testl
mov
aas
jle
mov
dec
adc
push
pop
adc
fxch
les
and
xor
cld
les
sahf
or
movsl
pushw
xor
push
sbb
mulps
loope
push
inc
je
mov
dec
jecxz
cltd
icebp
dec
out
fidivs
jno
aas
pop
dec
adc
adc
or
jno
inc
add
outsb
push
sti
dec
std
inc
out
call
add
mov
in
into
push
or
loope
xchg
mov
mov
scas
shl
adc
lods
jecxz
cltd
jmp
dec
aas
pop
jo
cmp
cltd
or
sarb
add
add
mov
xchg
cmp
pop
aad
xchg
xchg
stc
dec
or
fistl
iret
pop
pop
adc
test
sbb
xchg
add
pop
stos
ret
mov
stos
pop
add
cwtl
pop
into
pop
std
mov
div
push
fs
mov
add
loope
xor
sahf
lods
out
daa
sub
shrl
mov
lahf
mov
mov
ret
ficoml
clc
test
jle
test
xor
call
imull
fnstenv
push
movsl
cmp
add
sub
shlb
shl
inc
test
fcoml
pushf
in
dec
pop
inc
fldt
inc
or
xchg
pop
push
rdpmc
mov
mov
daa
mov
xor
shlb
out
je
cmp
movsb
mov
xchg
outsl
xchg
push
cwtl
test
jae
inc
add
pop
xor
std
hlt
sub
and
dec
jb
inc
fcomps
mov
rorb
mov
mov
pop
mov
jmp
faddp
stos
add
xlat
in
lods
sbb
push
lcall
pop
cli
xor
jae
sbb
sub
lret
lods
dec
js
sbb
xor
inc
add
mov
sub
jb
pop
imull
aam
mov
sahf
or
clc
jge
cmp
jae
push
push
scas
mov
mov
cmp
jns
ret
jnp
fcmovb
fs
sbb
loopne
test
add
push
push
shl
mov
xchg
ret
arpl
and
dec
pop
xor
repz
fiadds
scas
add
and
pop
mov
cmp
aaa
pop
jle
inc
movsb
test
popl
dec
testl
icebp
lock
jge
mov
pop
xor
and
dec
dec
sarb
int
dec
or
jp
mov
pop
addr16
or
sbb
and
js
pusha
cld
in
lods
pop
pop
lods
testl
std
pop
pop
mov
dec
dec
inc
mov
fdivrp
jecxz
jae
setbe
cmpsl
popa
inc
sarb
jmp
pop
or
push
cwtl
and
sbb
leave
xchg
sbb
jbe
mov
jno
cld
inc
cmp
pop
mov
push
xchg
sub
sbb
mov
mov
sub
and
cmpb
mov
jmp
mov
add
dec
push
and
or
repnz
jno
in
fmull
dec
jecxz
mov
shlb
sbb
cmpsb
ret
nop
add
lret
adc
cwtl
pminub
cmpsl
mov
xorb
jmp
xchg
push
xchg
sub
dec
adc
sbb
js
mov
test
mov
enter
sub
jne
xchg
aam
insb
mov
push
pop
lea
fcmovu
mov
push
fsubrs
jl
xor
jg
inc
out
add
out
cmpsl
aam
jg
or
xchg
adc
dec
in
add
std
lea
and
mov
fs
push
sbb
pop
mov
pop
insb
mov
xor
dec
mov
push
shl
mov
pop
pusha
mov
jnp
ret
mov
push
loop
cmpsl
cmp
adc
jns
movsb
push
push
pop
xchg
mov
sbb
repz
lret
fnstsw
leave
push
scas
insl
cmp
lret
add
push
jl
cli
mov
cmp
cmp
loopne
repz
ds
not
mov
sub
std
push
loopne
out
daa
add
inc
add
sti
cmp
mov
add
cmpb
pop
push
pop
jecxz
xchg
lods
mov
push
adc
aam
xchg
jnp
xor
stos
ss
push
scas
and
mov
xchg
sbbb
add
add
push
in
pop
push
dec
fs
inc
xchg
out
iret
sub
or
cmp
ret
std
sub
mov
cmpsl
popa
rol
fsub
pop
ret
mov
mov
orb
adcl
add
mov
idivl
jo
cmp
loopne
xchg
insl
lock
adc
jns
addb
fdivl
ret
fcmovu
and
test
ja
data16
scas
cld
adc
mov
cmp
dec
adc
pop
jl
cli
fwait
cmc
gs
pusha
and
lret
push
jne
push
call
aas
mov
ret
adc
ficoms
sub
fs
pop
push
sbb
out
mov
and
jb
mov
xchg
sbbl
xor
roll
pop
dec
out
loope
dec
lock
mov
sbb
cmpsb
and
and
push
enter
out
stos
mov
add
js
sbb
rcr
inc
mov
xchg
push
cwtl
mov
ret
pop
inc
aad
dec
fmulp
pop
rcrb
inc
inc
cmp
shrb
push
repnz
je
push
or
pop
sub
add
cs
pop
push
shll
cltd
nop
bound
je
add
rcrb
pusha
je
inc
adcb
cmc
scas
int3
push
call
sub
push
mov
xor
xor
cwtl
inc
and
scas
sub
lock
aad
outsl
repnz
cmp
sub
cltd
fldcw
sub
jb
not
stos
push
test
adc
push
clc
xlat
xor
pop
lods
dec
std
icebp
adcb
cmc
sbb
pop
sbb
sub
inc
mov
pop
mov
inc
loop
lcall
inc
pop
clc
rorb
fidivrs
rcrl
xor
add
addr16
adc
mov
sbb
int3
dec
leave
arpl
push
dec
fsubrs
xchg
dec
scas
stos
lods
adc
cli
insl
adc
movsb
mov
fidivrl
adc
lods
test
mov
pop
ss
xor
es
and
rolb
xsavec
dec
push
popa
inc
insl
push
test
hlt
in
fcoml
test
xchg
mov
rcrb
mov
inc
mov
lret
push
adc
and
dec
or
das
test
xlat
inc
js
bound
scas
add
aad
push
adcl
cmp
gs
das
inc
test
sbb
lahf
fldcw
daa
inc
or
repz
or
loop
inc
out
out
in
orl
xchg
lods
rcr
nop
inc
mov
imul
fadds
aas
sub
in
lahf
mov
out
mov
inc
rcl
shrb
lods
cmpsl
test
pop
sbb
cmpsb
mov
fistpll
faddl
lahf
mov
cmpsb
mov
sbb
sbb
xchg
mov
out
rcrl
add
in
out
mov
adc
sub
imul
cmc
adc
out
sub
lds
mov
mov
stc
imul
jb
xchg
ret
das
push
inc
xor
stos
jbe
rcrb
or
jmp
rolb
mov
mov
pop
cld
inc
mov
xchg
xor
add
je
adc
cld
outsl
fsubrs
push
sti
test
insl
inc
jmp
mov
dec
pusha
adc
mov
je
adc
pop
fdivr
les
mov
sti
inc
aad
xchg
sbb
adc
xchg
sbb
and
ficompl
sahf
je
mov
cs
xchg
into
xor
loopne
lods
mov
and
out
adc
fwait
ret
lret
hlt
enter
std
stos
xchg
notb
mov
xor
ja
in
push
std
inc
xchg
or
pop
jae
es
sahf
push
fmulp
gs
inc
push
lods
mov
orl
jns
pop
jno
pusha
and
xor
add
add
or
mov
jbe
mov
cmpsl
push
scas
andl
xchg
mov
jmp
jbe
jl
imul
dec
mov
pop
mov
ret
jne
cltd
jae
jp
add
or
clc
sub
xorl
push
xor
cli
pushl
xchg
pushf
inc
fld
pop
cmpsb
divb
jne
or
push
in
xchg
jl
add
cmpl
mov
push
mov
pop
test
in
sub
inc
push
mov
or
sbb
int
add
and
cli
loopne
and
pop
fadd
das
push
inc
in
roll
add
cmpb
mov
sbb
stc
std
nop
mov
adc
mov
xor
fisubl
mull
add
mov
mov
ror
std
or
push
jmp
js
out
cli
dec
xchg
xor
into
jns
and
gs
lods
int3
movsl
in
mov
test
cli
sbb
sub
jo
ret
rorl
sbb
xchg
insb
out
lret
aam
mov
sub
add
cltd
outsb
adc
pop
sahf
jo
xor
in
dec
aaa
stos
xor
mov
movsl
clc
pop
push
clc
mulb
jle
roll
push
in
xchg
gs
mov
pop
sub
mov
mov
push
stos
das
aam
push
mov
sbb
add
scas
inc
pop
dec
outsb
sub
call
dec
nop
dec
ret
sub
mov
stos
imul
jae
and
cs
mov
pop
add
push
cmp
sbb
pop
mov
mov
mov
lock
mov
scas
pop
fimuls
inc
xchg
sbb
dec
inc
or
fwait
cmpsl
dec
pop
inc
inc
or
das
iret
stos
mov
mov
ret
stc
arpl
insl
ret
and
sub
jmp
sub
hlt
je
mov
sub
mov
or
dec
push
push
lods
jp
adc
aaa
shrl
cmp
xor
push
mov
loope
sahf
xlat
and
cmp
pop
sub
dec
pop
fcmove
sbb
jge
fcoml
xchg
aad
xchg
sahf
cmp
mov
adc
xor
stos
and
mov
aaa
xor
sub
enter
inc
pop
dec
xor
hlt
add
out
sub
xchg
sbb
push
pop
ss
jg
mov
in
addr16
mov
xchg
rcrl
out
scas
cmpl
loope
fs
pop
call
sti
or
sbb
divl
cwtl
cmc
inc
jmp
mov
out
cld
cmc
xchg
pusha
pmuludq
or
sbb
and
and
xchg
or
aaa
and
adcl
lret
cmpb
jo
adc
and
outsb
lahf
out
leave
ja
stc
cld
jl
lret
xor
addr16
dec
jns
push
or
aaa
cli
sbb
xchg
push
lahf
add
dec
in
xchg
addr16
xchg
lret
in
iret
or
out
jg
sub
mov
popf
adc
clc
subb
rclb
xor
xchg
mov
int
sub
pop
data16
xadd
mov
mov
leave
clc
cmp
cld
cmc
fcomp
pop
test
pop
stc
shrb
push
sbb
js
cwtl
or
push
insl
inc
outsb
add
call
imulb
lcall
movsl
sahf
lahf
into
fcompl
rolb
cmp
test
shlb
cmp
mov
adc
push
mov
fsub
insl
adc
out
cmp
aas
pop
cwtl
imul
xchg
cmp
fisubrs
xchg
mov
cmpsb
mov
fs
rcrl
pop
adc
jns
shlb
push
lahf
dec
in
fsubrs
sbb
in
cmpsb
mov
mov
inc
insb
mov
int3
std
repnz
jne
inc
adc
add
mov
loopne
pop
or
pop
mov
das
fwait
pop
mov
out
iret
or
insb
repz
pop
imul
pop
pop
aaa
arpl
hlt
scas
mov
insb
hlt
iret
lahf
mov
aam
mov
cmp
cmc
mov
lcall
stc
outsl
fistl
shrl
sbb
lea
das
cmp
lock
popf
in
xchg
addr16
sarl
add
fsubs
xor
xchg
popf
xchg
pop
dec
jne
lods
add
cs
stc
mov
dec
jmp
loope
sbb
or
dec
inc
mov
pop
push
test
cmp
cmpsl
push
fsts
rclb
test
jo
xor
repz
cld
jg
sub
push
movsb
stc
repnz
mov
push
dec
cmp
mov
inc
or
sub
push
testb
fwait
sbb
scas
push
nop
mov
pop
pop
add
fstps
lods
sbb
sub
jmp
dec
sub
std
enter
pop
inc
ror
mov
icebp
or
adc
in
xor
dec
add
xor
jle
mov
sbb
cmp
xchg
xor
stc
dec
xor
push
push
popf
pop
in
cwtl
mov
rcr
xchg
pop
ss
icebp
movsb
mov
mov
les
lock
jnp
insb
adc
jo
lock
pop
cmpsl
or
ds
call
arpl
data16
adc
and
insb
jge
sahf
push
pop
mov
jle
iret
mov
adc
lahf
daa
imul
add
mov
scas
dec
xor
mov
add
dec
sbbb
out
jl
clc
jns
cli
cli
addl
ret
clc
ficompl
and
repnz
out
push
jne
jo
sub
in
push
stc
jb
mov
in
fisubl
sub
mov
and
cmp
mov
sub
add
xchg
mov
bound
lahf
inc
inc
or
cld
arpl
adc
adc
insl
repz
testb
pusha
cs
movsl
stos
mov
mov
scas
incl
popa
jmp
mov
or
sub
xor
xchg
adc
addl
sub
jnp
fstl
xor
cmpsl
cmp
mov
popf
sub
inc
cmp
js
jae
lret
iret
nop
orb
out
leave
cwtl
xlat
and
movsl
popf
pop
mov
or
and
ret
push
test
sub
push
fbstp
jge
ds
xchg
add
rorl
or
pop
daa
xor
mov
pop
mov
mov
in
mov
sahf
xor
ljmp
sbb
test
das
movb
popa
lock
lret
sub
ds
mov
imul
jo
mov
rcrl
push
pop
leave
dec
int3
mov
movb
jnp
scas
ds
xor
rorb
sub
outsl
sub
xchg
call
jp
daa
jne
aad
jl
sbb
mov
push
ds
aam
mov
or
dec
mov
pop
enter
movsb
pop
jl
rcll
or
repz
iret
aas
dec
fisttpll
cltd
mov
insb
mov
lcall
pop
xlat
sbb
or
xchg
sti
cmp
jmp
push
dec
ljmp
push
xchg
push
add
jae
mov
jbe
add
push
fidivrs
mov
mov
lea
aam
ret
adc
and
fsub
pop
or
iret
jecxz
xor
pop
jo
xor
test
aaa
xchg
or
cmpsb
andl
sbb
decl
mov
jmp
mov
or
mov
cmpsb
sti
ljmp
mov
xchg
jmp
or
std
or
fsubr
test
ds
push
stos
stos
mov
into
lret
in
sbb
inc
xchg
inc
push
pop
pushf
out
lods
mov
data16
ss
movsb
cmc
insb
xor
fcomps
jp
jmp
in
push
repz
inc
out
cmp
cmpsl
out
aad
shll
or
cmovp
jle
pop
out
jnp
stos
movsl
ss
test
movsl
add
pop
inc
xor
cmp
pop
daa
lea
roll
out
sbb
jge
lds
test
cmp
orb
hlt
test
lock
and
jo
cld
push
pop
mov
in
ds
adc
mov
mov
mov
dec
inc
testl
inc
call
loope
ds
pusha
inc
out
in
ss
mov
fmull
scas
or
jecxz
je
jle
xor
fwait
dec
lahf
stos
and
mov
add
jecxz
push
or
mov
xor
cmp
push
sbb
test
cmp
add
dec
add
leave
fisubrs
outsl
fs
sbb
pop
jne
lock
insl
inc
cmpsb
push
lcall
jno
sub
mov
sbb
out
repz
int
mov
stos
add
sti
loope
jo
or
and
mov
sti
dec
stc
xchg
jnp
jecxz
cli
push
and
jnp
jecxz
sbb
insl
add
js
inc
sahf
daa
xor
sub
xorl
cmp
inc
sbb
bound
lahf
cmp
adc
sub
shll
xor
mov
jbe
ret
xor
fcmovnb
mov
mov
repz
lcall
jno
fistps
pop
cmp
fdivs
push
mov
or
cwtl
or
aas
jbe
xchg
add
xchg
fists
mov
ja
pushf
popl
adc
xchg
jle
mov
mov
popf
cs
fdivr
out
jge
daa
xchg
mov
sbb
mov
loopne
loopne
adc
fistps
adc
fcomps
inc
xchg
inc
pop
or
aaa
dec
ss
aaa
les
cli
ja
and
lods
popf
mov
ret
jle
aas
out
jecxz
and
push
rcrl
pusha
cltd
jae
inc
and
pop
jbe
jg
test
adc
mov
inc
adc
pop
mov
push
jno
movsl
xor
mov
je
ret
insl
and
bound
shll
or
mov
pop
pop
rolb
or
xorb
xor
lret
mov
lret
xchg
xchg
mov
hlt
mov
or
or
icebp
cld
into
dec
mov
aas
je
and
scas
jb
mov
or
jns
jecxz
stos
sahf
fmull
lea
andb
repz
and
movsl
adc
notb
cmp
dec
mov
pop
or
nop
mov
sti
dec
sub
pop
je
cs
lods
push
mov
loop
adc
shlb
adc
clc
push
insb
push
bound
std
insb
jge
jl
pop
xchg
and
dec
cmpb
test
cmp
adc
cwtl
icebp
mov
xchg
mov
lds
mov
push
stos
pop
popa
cld
mov
mov
repnz
les
pop
mov
imul
inc
cld
les
loop
sarl
or
negl
cmp
dec
ficompl
jecxz
fidivrl
mov
inc
adc
mov
xor
mov
sub
in
outsb
cmp
mov
cmp
mov
xor
pop
mov
es
xchg
cmpsb
iret
sarb
cli
es
mov
ret
add
or
inc
movsl
mov
adc
and
inc
jg
jno
jne,pt
lret
and
movsl
pop
mov
jl
push
jp
lea
pop
add
inc
dec
xor
lods
jb
pop
repnz
sarb
popf
pop
push
jle
rcrl
xchg
insl
addr16
enter
push
mov
mov
out
fdivrl
sbb
push
sti
mov
fsub
scas
mov
mov
fistpll
pop
cmp
das
mov
inc
das
adc
mov
pop
mov
mov
cs
or
dec
cmp
pop
ljmp
popf
test
rorl
jno
dec
inc
aad
pop
and
fisubrs
cmp
cli
inc
pushf
jbe
packsswb
leave
mov
mov
and
mov
adc
push
roll
adc
nop
push
rcll
addl
sbb
jge
pushf
dec
adc
in
adc
jne
fnsave
pusha
lock
fwait
push
pop
pop
push
dec
push
mov
push
xchg
ds
pop
jg
rcll
lods
inc
movsl
mov
cmpsb
mov
inc
adc
xor
pop
loop
shrl
dec
lock
adc
mov
add
fistpl
aam
movsb
dec
lcall
roll
lret
clc
inc
rorb
or
cmc
dec
xchg
mov
push
outsl
sbb
add
xchg
cli
iret
add
lock
loop
pop
mov
scas
inc
add
dec
sbb
pusha
mov
outsb
push
jge
inc
daa
mov
pop
xor
push
or
pop
lret
inc
cmpsb
sbb
data16
xor
shlb
lds
adc
movsl
cmp
stc
decl
or
pushf
subb
xchg
iret
rol
test
outsb
sbbb
and
es
sahf
lea
nop
push
xchg
imul
mov
ficoms
orl
out
movsl
mov
insl
mov
mov
inc
fcoml
inc
xchg
dec
jb
sbb
inc
xor
sahf
jecxz
test
adc
mov
loop
mov
mov
xor
sbb
ljmp
lahf
xor
jl
pop
inc
pop
xchg
add
rorl
sbb
cmpsl
push
xor
movsb
aaa
mov
daa
icebp
jne
sbbb
inc
jl
jp
leave
fadds
push
repnz
pop
xchg
outsb
dec
lcall
jl
ja
cmpb
xchg
xchg
sub
xchg
mov
in
outsl
fs
push
adc
imul
dec
cmp
push
jae
repnz
push
fmull
mov
out
int3
decb
in
scas
dec
pop
mov
jmp
xor
inc
add
jle
mov
wrmsr
nop
popf
xchg
sub
and
lret
jg
xchg
mov
mov
pop
repz
ret
fs
inc
push
cmp
cmp
into
popa
enter
out
into
xchg
pop
out
xchg
rol
hlt
icebp
sar
push
sbb
mov
faddp
inc
es
test
xchg
pop
adc
addl
lock
test
mov
fcoml
sub
add
lds
add
or
sti
xor
sbb
pop
or
scas
rorb
cmp
int3
lods
push
pop
fisubrl
std
jno
or
push
xlat
fmull
jp
dec
addb
bndldx
in
xor
sarb
push
data16
push
shll
out
add
loop
xor
ss
outsb
fsubrs
negb
mov
xchg
mov
jmp
fisubrl
xlat
mov
fwait
add
clc
loopne
inc
shll
popa
mov
fdivrs
stc
sbb
xor
xchg
loope
add
mov
les
test
imul
or
mov
cmp
push
cmp
sbbl
pop
jg
mov
xor
or
rolb
scas
xchg
push
push
out
daa
pop
enter
mov
or
loopne
mov
fld
sub
pusha
into
sbb
mov
fnsetpm(287
repnz
adc
adc
outsl
test
js
out
data16
std
test
jle
push
inc
and
ja
or
xlat
cld
lds
cmp
fs
mov
add
out
ret
jne
pop
adc
or
cmp
andl
xchg
es
test
das
cmp
mov
mov
testl
loopne
pop
jbe
mov
sub
lret
inc
stos
divl
and
push
es
subl
jle
push
jmp
ficomps
fwait
rorb
arpl
aam
jbe
add
pop
and
stos
mov
das
pop
repnz
ds
jp
sub
fs
shlb
inc
inc
iret
pop
and
add
pop
jecxz
movsl
shr
adc
out
adcl
es
sbb
scas
lods
lahf
jb
data16
iret
and
xor
arpl
lret
pop
mov
fs
sti
lds
and
mov
lcall
mov
adc
fs
daa
mov
mov
in
xor
sbb
and
in
jb
lret
mov
dec
aaa
andb
repnz
rcrb
in
pop
cwtl
inc
aam
xchg
les
xlat
iret
jns
lahf
fwait
std
and
fdivl
sti
test
jae
sbb
push
jecxz
cmp
jne
ss
push
jle
divl
cmp
and
cmc
nop
fcmovbe
shlb
push
shlb
xchg
adc
in
or
sahf
jae
repz
lret
dec
lret
js
sub
adcl
inc
movsl
jp
aad
lock
pop
cmp
push
popa
cmc
push
add
sahf
add
jmp
inc
ficompl
adc
test
add
and
and
add
cltd
aas
ljmp
stos
outsb
sub
push
xchg
insb
in
fs
scas
dec
js
push
jae
aas
stos
imul
jne
fdivl
push
movsb
test
jbe
shl
mov
add
mov
mov
mov
add
xchg
aas
push
mov
xchg
xor
in
xorb
inc
mov
add
je
jmp
inc
fcompl
lods
or
mov
dec
popf
les
mov
rorb
xlat
xor
pop
sarl
pop
or
test
dec
xchg
repnz
lods
adc
test
sbb
push
xlat
bound
cmpb
inc
sti
push
sti
mov
mov
call
push
mov
push
xchg
dec
jge
dec
out
dec
xor
int3
adc
and
mov
icebp
pop
pop
push
std
cmc
push
cmp
mov
pushf
out
and
gs
or
aam
std
ret
les
mov
push
mov
add
or
xor
xor
aas
sub
cmp
inc
cmpsb
xchg
pushf
insl
xchg
lret
jp
sbb
out
jo
ljmp
push
ret
push
ret
and
pop
mov
pop
and
inc
ret
shl
or
cmp
dec
imul
nop
fdivs
xchg
add
inc
and
pop
aam
nop
mov
call
lret
jo
pop
xor
mov
and
cmc
cld
insl
insb
mov
shlb
aaa
ja
es
lret
test
mov
into
push
sbb
jno
mov
add
insl
enter
dec
push
push
and
popf
add
push
xchg
call
sbb
push
pop
pushf
sub
test
pop
jne
filds
pop
pop
loope
jmp
bnd
ret
roll
popf
fcmovnu
fs
fcoml
loop
dec
sub
mov
jae
jle
push
sbb
lcall
out
mov
movsb
push
inc
sub
jmp
pop
test
in
jmp
pop
cwtl
push
aas
gs
inc
rcrb
pop
add
mov
mov
sub
dec
fs
in
or
xchg
lods
xchg
pop
mov
sbb
aad
xor
rcll
cld
out
aam
adc
daa
pusha
push
xchg
ljmp
add
adc
xlat
bound
je
mov
cs
jbe
mov
cs
loop
or
sbb
xchg
popf
mov
pop
lods
mov
das
jae
lock
add
jl
pop
int3
mov
xchg
inc
mov
inc
push
sub
cmp
aad
jmp
xchg
cmpsl
or
ss
adc
adc
fwait
cmp
mov
outsl
inc
aas
out
fwait
mov
je
cmp
or
rorb
or
add
add
dec
lcall
mov
pop
inc
xor
insb
ror
push
repz
mov
cli
outsl
jo
xor
xchg
push
es
call
or
in
cmp
sahf
xchg
aaa
or
and
pusha
fistpll
loop
mov
mov
test
push
adc
xchg
dec
popf
std
xchg
lcall
mov
rep
test
std
jecxz
and
scas
mov
mov
int
jnp
popf
mov
out
movsb
jo
mov
cmc
adc
in
and
pop
fisubs
xorb
fstpl
and
shrb
dec
es
pop
mov
cmpsb
mov
push
addr16
adc
jle
pand
mov
dec
add
cld
push
cmp
cmp
mov
icebp
mov
hlt
mov
push
inc
mov
sub
sub
mov
push
fstpt
mov
outsb
inc
push
jbe
dec
inc
stos
scas
cmp
add
bound
push
rcr
test
sbb
sub
add
push
idivl
xchg
pop
fld
sti
mov
pop
xor
pop
fimuls
pushf
orb
clc
loop
mov
xor
sub
faddl
insl
into
xor
mov
cmp
add
cmp
loope
sub
xchg
or
fs
pop
mov
sub
mov
dec
adc
push
mov
in
sbb
push
popf
lcall
enter
lds
inc
inc
add
ret
xor
movsb
sti
sahf
test
fdivrs
jl
add
pop
mov
push
nop
pop
mov
data16
lret
fdivrl
pop
das
cmp
pop
test
hlt
aaa
gs
jecxz
push
mov
mov
lds
dec
loope
in
mov
add
pop
inc
cmp
jae
test
fbld
and
mov
repz
fidivrl
push
lds
jecxz
test
inc
insb
int
push
cmp
jp
mov
ljmp
hlt
cmpsb
faddl
add
fxch
in
xchg
cmp
sbb
push
jbe
mov
jno
jae
pop
push
stc
pusha
xchg
aaa
pop
cli
xchg
jne
inc
cmp
xor
nop
sbb
lret
mov
mull
out
in
pusha
idiv
jl
xchg
push
cmpsb
data16
push
xchg
lock
xor
cmpsb
cmp
daa
fsubs
cmp
mov
jnp
jo
adc
fmull
sbb
cs
sbb
pushf
cmp
and
addr16
xor
xor
jmp
ja
aad
adc
sub
jl
lret
push
out
int
push
and
xor
pop
mov
je
ja
mov
lahf
jge
jne
mov
imul
in
imul
push
adc
fisttpl
adc
cmp
push
jb
cmp
aaa
push
aaa
and
fcmovne
std
xor
jne
adc
dec
test
inc
add
es
adc
jae
shlb
xchg
pop
out
cmpsl
jbe
mov
fidivrs
in
rol
loope
outsl
sub
push
mov
mov
add
cmpsl
shl
int
mov
cli
push
mov
mov
push
xor
mov
sbb
mov
pop
push
cmp
out
cmpsb
add
mov
test
std
mov
test
lods
inc
cld
jecxz
mov
push
cmpb
popa
jns
int3
cmpsb
loopne
dec
outsb
jns
out
call
subb
cmpsb
repz
repnz
inc
push
jno
cmp
sbb
scas
int3
inc
ret
pop
dec
cmpsl
jbe
pusha
into
fwait
shlb
add
dec
mov
outsl
jb
push
sbb
fldt
call
sub
lret
fisubrs
mov
fcmovb
add
rorl
test
repz
enter
cmp
arpl
cmovae
jle
test
and
in
inc
out
and
rcrb
imul
iret
std
xor
idiv
mov
pop
mov
push
andb
mov
ret
popf
clc
sub
inc
sbb
cwtl
test
sbb
mov
cmp
insb
popa
xor
jne
or
dec
or
xchg
mov
jl
mov
mov
daa
xchg
mulb
stc
ja
mov
popa
dec
cmpsl
in
insb
sbbb
in
into
ds
xor
adc
inc
sub
push
aad
adc
aaa
dec
mov
sub
mov
push
jnp
icebp
and
pop
xchg
mov
cmp
adc
fstps
cmp
js
scas
mov
adc
or
jo
mov
jns
push
in
mov
cmp
and
test
rorl
je
sub
sti
insl
outsl
stos
js
xor
leave
je
mov
add
dec
xor
xchg
xchg
je
lds
push
cwtl
pop
mov
and
std
stos
push
lret
imulb
mov
sbb
or
jae
stos
push
lds
iret
mov
mov
fwait
push
push
cmpsb
fsub
pusha
mov
ja
jg
inc
mov
cmp
adc
imul
repz
pop
mov
cmp
mov
popf
movsl
andb
in
in
and
int
or
and
push
rol
jle
ljmp
cltd
lret
stc
insb
subb
pusha
jns
ret
insl
pop
cltd
mov
fmull
repnz
adc
adc
or
cltd
movsl
je
sarb
movsb
xchg
and
cmp
clc
fcmove
sti
sub
cmp
xchg
lods
xor
cmp
xchg
call
xchg
lods
inc
dec
sbb
fsubrs
cmp
stc
clc
loopne
mov
push
loop
nop
scas
sbbb
or
cld
sbb
loop
fstps
stos
aaa
mov
fwait
cmc
imulb
cmpsb
test
mov
mov
cli
xor
insl
pop
sbb
mov
xlat
fwait
lds
cmp
push
sub
mov
fcmovnbe
xchg
fsts
push
or
xor
xchg
arpl
test
mov
fdivs
cmpsb
inc
inc
and
in
fisubl
push
inc
mov
jle
fs
cmp
push
mov
test
mov
stos
jnp
cmpsb
sbb
icebp
add
push
hlt
and
test
fldcw
ljmp
jns
test
shrb
push
test
add
sub
subl
sbb
aaa
scas
push
or
scas
cmp
xchg
push
imul
and
movsb
and
sub
negl
addr16
cmp
js
test
xchg
jp
jmp
aam
dec
setge
stos
jne
adc
xor
sub
sti
pop
cmp
dec
lcall
sub
dec
push
test
pop
lret
mov
lret
nop
bnd
sub
notl
dec
stc
fcom
jmp
lods
std
or
push
fistl
push
movsb
leave
push
and
mov
pop
lock
sub
mov
jns
push
orb
adc
cmp
in
fs
cld
stos
add
pop
xchg
mov
cltd
clc
es
sbb
test
fs
icebp
call
mov
xchg
stos
inc
aam
xchg
jo
test
mov
mov
roll
add
call
lea
enter
sbb
cs
pop
cmpb
jl
adc
jmp
cmp
inc
in
pop
dec
aam
or
int3
and
sbb
mov
xchg
cmp
add
cltd
and
inc
sbb
in
into
jp
icebp
lods
mov
pop
std
dec
sarb
mov
jne
in
fcmovnbe
lods
dec
inc
movsb
or
lcall
mov
mov
test
inc
push
sub
jae
jmp
sbb
scas
fisttpll
ja
dec
adc
sbb
das
lea
dec
push
sahf
sub
and
inc
popl
and
out
mov
xor
sub
cmp
imul
mov
and
mov
xor
rcrb
or
scas
pushf
dec
jecxz
add
xchg
push
fcomps
and
xor
loope
inc
jg
pushf
cs
popf
inc
test
xchg
mov
or
push
jmp
bound
fadd
push
sub
jecxz
inc
and
decb
inc
lahf
testl
lods
inc
xor
push
in
and
pop
jnp
lahf
add
xor
sub
enter
stos
icebp
mov
hlt
xor
xchg
xor
pop
adcb
shll
push
and
inc
into
jmp
std
rcrl
je
cwtl
je
xchg
aas
pop
add
pop
repnz
sti
mov
ljmp
jmp
in
pop
imul
xchg
imul
dec
gs
shlb
adcl
or
outsl
jge
iret
fucomp
in
mov
sub
pop
sbb
pop
cwtl
cmp
pop
pop
ja
insb
daa
mov
and
scas
add
loope
add
enter
aam
sub
mov
jb
leave
push
iret
outsb
add
sub
ja
sub
inc
pop
scas
scas
in
out
jno
aaa
adc
dec
rol
imul
shll
mov
int3
inc
jns
jmp
int3
sub
mov
cmpsl
clc
enter
inc
nop
jnp
rcl
xor
mov
pop
cmp
inc
rcrb
popa
cltd
add
mov
mov
fidivrs
adc
jb
and
psubw
mov
lds
int3
iret
mov
and
lcall
cmp
ret
mov
jo
adc
movsl
mov
or
push
pop
popf
mov
adcl
ds
inc
xchg
jge
out
loopne
ret
int
sbb
into
cmp
push
insl
push
movb
notl
sbb
stc
rcr
pop
gs
hlt
dec
or
leave
add
scas
add
sbb
nop
mov
ja
mov
add
ss
sub
push
pop
dec
dec
les
sbb
jo
inc
dec
test
out
je
sahf
sbb
push
rcll
icebp
inc
mov
mov
adc
push
lcall
pop
js
mov
sbb
arpl
icebp
mov
or
inc
sub
cmp
inc
mov
ljmp
add
mov
das
les
scas
sbb
xor
or
stc
aam
ja
clc
add
outsl
addb
mov
scas
cmp
repz
dec
adc
sbb
cmpsb
cmpsb
icebp
hlt
icebp
fnstsw
push
adc
insb
pop
jmp
jg
dec
cwtl
or
sub
int
cli
pop
iret
cwtl
adc
push
push
push
cmpsb
out
pusha
int
les
loop
mov
xor
lret
mov
mov
jg
sbb
movsl
pop
cmpb
mov
xchg
daa
je
pop
jp
or
test
rcrb
fnstcw
test
jge
fcoml
pop
in
and
jmp
popf
fcos
fsubr
mov
jae
xchg
jl
out
xor
adc
repz
adc
imul
push
jb,pt
shlb
sbb
mov
test
mov
stc
sbb
jmp
adc
dec
pop
bnd
pop
arpl
adc
std
aas
movsl
pop
xchg
mov
clc
vaddsd
and
pop
out
cltd
inc
add
repnz
mov
cltd
shll
jp
fbstp
ljmp
push
lock
push
dec
enter
mov
jle
stos
aam
mov
jp
dec
rcrl
ds
mov
xchg
inc
ss
imull
cld
or
mov
mov
inc
pop
lods
lods
dec
jge
int
ret
mov
add
jl
lahf
insl
and
leave
sarl
push
test
xor
cmp
jmp
jl
frstor
and
lret
icebp
mov
add
pop
or
outsl
aad
mov
push
sub
or
push
cmp
sbb
lock
xchg
pushf
mov
push
fmuls
xchg
mov
popf
ss
xchg
xchg
ljmp
cwtl
into
scas
lahf
xchg
dec
mov
testb
push
xor
push
sub
out
cli
xor
push
out
pushf
or
xor
loopne
test
fdivl
icebp
stc
cmp
adc
test
notb
out
push
loopne
rorb
outsb
xchg
outsl
inc
lret
mov
scas
pop
mov
sbb
movsl
mov
mov
mov
test
push
add
rcll
sbb
daa
hlt
out
orl
js
cmp
adc
inc
addr16
lret
in
outsb
sub
insl
cs
mov
jne
xchg
clc
fisubrl
sbb
inc
stc
sbb
xor
fcoms
imul
pop
adc
dec
mov
or
pop
insb
insb
popf
xor
pop
stc
into
push
mov
sarb
insb
mov
addr16
outsb
scas
cmc
scas
jmp
in
in
push
roll
xchg
scas
dec
lcall
fisubrs
sbb
adc
dec
ret
fcmovnu
mov
adc
adc
ja
je
push
mov
push
ss
imull
outsl
and
iret
cmp
mov
int
sbb
decb
loop
in
arpl
ffreep
inc
mov
ret
push
adc
mov
cmp
stos
and
inc
add
cli
ret
sbb
lea
jmp
or
gs
es
cld
ret
fldt
rcrl
cmp
sub
outsb
dec
lret
mov
cmp
mov
out
dec
flds
xor
xchg
pop
test
loop
xor
lds
imul
pop
adc
mov
test
xor
xchg
cwtl
das
pusha
loope
xchg
push
rolb
inc
mov
xor
std
cmc
cld
sarl
pusha
pop
or
xchg
lahf
ret
pop
mov
scas
pop
clc
cmp
int
rorb
in
sti
add
movsl
ret
add
dec
lock
std
jmp
sub
in
pop
fldcw
jae
push
fldt
sbb
sbb
repnz
jns
xchg
jmp
push
inc
scas
mov
cmp
sbb
pop
out
push
mov
bound
icebp
js
cmpsb
jbe
rcrl
inc
cwtl
or
pop
mov
push
das
xchg
push
arpl
ror
nop
and
lret
jb
loope
sub
movsl
leave
pushf
jns
rcrl
lods
inc
push
cmpsb
push
cmp
repz
ds
sti
dec
mov
push
pop
xchg
aas
push
jae
adc
movsl
inc
add
push
mov
mull
pop
sarb
push
stos
in
or
mov
gs
mov
xor
pushf
adc
lea
push
in
sub
divl
fwait
jp
out
mov
mov
adc
mov
imul
scas
fidivs
dec
push
cs
divl
out
out
sti
in
sahf
incl
pusha
pusha
rol
outsl
and
pop
fisttpll
fucomp
xor
dec
fwait
dec
jbe
xchg
bnd
cmp
or
int
imul
xchg
pop
testb
inc
adc
call
mov
icebp
mov
mov
or
and
push
pop
in
mov
cmp
std
xchg
fdivrs
fstpt
sar
inc
sti
adc
dec
popf
adc
cmp
ja
sbb
add
pop
ja
stc
hlt
mov
aad
jnp
jge
cmp
testl
xchg
mov
cmp
out
sub
sbb
lods
xor
adc
aas
ret
fsubrl
idivl
pop
int3
cmp
xchg
push
rcrb
pop
sti
jecxz
push
jl
mov
shl
inc
jnp
push
pop
in
mov
ret
inc
lret
add
jns
inc
aaa
inc
ds
lea
jb
mov
push
aas
jno
mov
cmp
sub
cmp
orb
push
push
aad
out
mov
or
cltd
sahf
int
push
aaa
popf
adc
daa
dec
xchg
test
lea
out
dec
testb
mov
sahf
iret
xchg
mov
ljmp
lea
repz
mov
std
xchg
cmp
mul
int
test
decb
clc
popa
push
inc
fimull
mov
sbb
adc
adc
lahf
clc
sub
fildl
or
es
popa
or
sub
xor
push
adc
sahf
mov
mov
add
mov
nop
sbb
and
cmp
inc
mov
sub
data16
sbb
testb
sub
push
fstpt
cmp
nop
dec
inc
and
notl
lods
cld
lock
sbbl
add
dec
sub
xor
or
mov
in
ja
in
test
xor
inc
stos
aaa
and
in
jne
sar
or
test
add
mov
nop
push
xor
mov
popa
cs
xor
mov
je
cmpsl
cmp
mov
jmp
jae
mov
mov
shl
outsb
ljmp
pop
xlat
push
xchg
xor
jae
test
push
cmc
aas
int
mov
sub
sub
jg
and
jge
fisttpl
inc
out
mov
jo
lods
and
pushf
mov
mov
add
jb
sub
pop
lods
cwtl
fdivrs
movsl
and
push
jmp
fstpt
adc
sub
in
jge
and
stc
xchg
lret
fildl
jecxz
inc
cld
xchg
push
imul
jbe
dec
xor
push
cmp
fadds
xchg
lret
sbb
sub
inc
test
fs
xlat
cld
pop
iret
jp
dec
popa
cwtl
mov
lods
cmp
test
stc
hlt
xor
pop
or
out
lods
sub
aas
loopne
in
add
mov
aas
or
stos
test
out
imulb
lret
ds
jl
pop
mov
mov
pop
and
lcall
xor
sbb
push
les
inc
jne
jecxz
jae
fists
xchg
xor
mov
into
dec
push
xor
cli
orl
stc
jbe
add
popa
ja
sarl
test
ret
dec
xor
lds
lods
sub
jns
repnz
and
movsb
outsl
xchg
sti
push
inc
mov
dec
std
das
mov
idivb
sbbb
fldenv
add
dec
dec
xchg
aad
sbb
fstl
xchg
ljmp
jmp
andb
push
jle
cmpsb
repnz
cmp
cmp
mov
shrb
pop
movsl
rcrl
ficomps
bound
add
inc
jo
lds
fmuls
push
mov
ja
pop
enter
in
mov
push
or
psllq
push
sahf
scas
decb
sub
lods
xchg
fdivrl
mov
repz
push
lea
or
lds
fiaddl
aas
pop
add
jb
int3
add
xchg
xchg
stos
ss
arpl
pop
pusha
dec
cwtl
add
lret
enter
cmpsb
fmul
stos
cmp
cmp
popf
sbb
mov
in
sub
push
cmp
lods
out
rcrl
adc
push
adc
mov
pop
pop
lret
mov
xor
inc
cmpsl
and
fdivrp
add
xor
sub
xor
jo
lret
xchg
mov
in
dec
jg
lcall
mov
ficompl
mov
cmpsl
fldl
cmc
repz
fs
or
cli
daa
inc
outsb
inc
inc
and
insb
dec
dec
jbe
in
outsb
and
push
lds
mov
and
jne
adc
stc
jns
xchg
movsb
jp
cltd
out
repnz
adc
xchg
popf
xchg
mov
push
xchg
ja
ret
ret
into
cmp
adc
pop
popa
lret
in
jmp
mov
sbb
mov
push
mov
mov
arpl
lahf
adc
aam
lock
cmpsl
loop
in
pop
xor
mov
mov
cmpsb
push
lahf
mov
jmp
daa
stc
dec
out
out
jmp
or
nop
and
push
jmp
es
leave
xchg
pop
xchg
jbe
fs
push
sbb
and
sbb
pop
inc
mov
arpl
or
leave
andl
out
lret
xor
mov
ja
dec
out
mov
xchg
or
cmp
mov
inc
ret
sbb
jo
mov
mov
inc
mov
leave
and
lahf
xchg
loop
scas
mov
fwait
nop
mov
dec
or
out
and
jns
scas
lea
jecxz
and
negb
and
or
push
mov
sub
push
jne
dec
push
idivb
in
dec
jne
loope
insl
jg
mov
jne
dec
scas
dec
loop
dec
in
xchg
xchg
xchg
or
mov
das
adc
mov
inc
xor
inc
jno
jno
clc
adc
inc
bound
mov
in
mov
fimuls
jb
rolb
adc
xchg
sbb
sahf
xor
inc
fisttps
int3
dec
push
ret
imul
clc
mov
call
pusha
rcrl
pushf
and
lret
mov
xor
cmp
and
fsubrs
sbb
add
jnp
lret
inc
pop
xor
mov
fwait
dec
dec
dec
push
enter
in
lock
mov
notl
cmpsb
fisttpll
mov
aas
in
inc
adc
int
pop
lea
mov
sbbl
out
mov
test
xor
leave
mov
aam
pop
pop
cld
imul
leave
xor
addr16
sub
lods
shlb
ss
fidivl
cmpsb
cltd
hlt
pop
movsl
and
fucomip
adc
mov
in
out
stos
stos
call
xor
jg
xor
add
adc
dec
js
out
adc
xchg
xchg
sti
or
insl
or
repz
jbe
xor
ljmp
mov
cmp
adc
fisubl
adc
data16
sub
cltd
stos
out
xchg
push
dec
pop
cbtw
mov
inc
and
dec
jbe
out
gs
test
loopne
frstor
daa
stos
ja
jns
xor
push
ror
and
mov
pop
and
sbbb
mov
adc
fidivs
xor
and
into
fistps
scas
mov
sbbl
sahf
xlat
sub
inc
popf
cmc
xchg
pop
cmpsl
popf
fsubrl
popf
jbe
je
cld
icebp
dec
inc
xor
pusha
dec
xchg
std
aaa
loopne
out
mov
push
test
pop
pushf
clc
adc
cmp
xor
int3
or
das
mov
xor
add
mov
sbb
dec
repz
mov
cld
pop
iret
jmp
xorps
xor
ret
repz
mov
adc
and
sbb
inc
mov
ljmp
fs
mov
cld
jnp
adc
pop
ret
jbe
mov
pop
sbb
sti
loope
loopne
xlat
test
sbb
mov
leave
sbb
jl
push
loop
cmpsb
cmp
fisubs
test
push
pop
repnz
int3
sub
add
push
outsb
xchg
mov
mov
out
lret
sbb
mov
push
sub
jmp
sarb
fdivrl
jb
jnp
sbb
out
clc
data16
cmp
je
addr16
mov
aam
pop
in
inc
gs
das
das
inc
xchg
jecxz
pop
xor
mov
and
mov
fdivrl
mov
push
sub
test
out
data16
lods
mov
push
or
cltd
cmp
shll
xchg
insl
cmp
or
in
pop
add
ret
and
mov
icebp
cmp
std
enter
cli
pop
sbb
jmp
pop
add
mov
mov
cltd
cmp
mov
movsl
or
pop
xor
aaa
or
sub
xchg
push
sarb
daa
add
mov
fldcw
jb
xchg
test
lds
psrlw
add
mov
jmp
xor
in
mov
mov
imul
push
fdivs
shl
popa
imul
xchg
roll
push
es
pop
mov
xlat
iret
inc
xchg
dec
out
xchg
leave
daa
lea
mov
sti
xchg
dec
repnz
lds
adc
data16
lods
or
cmp
out
enter
stos
in
mov
js
stos
xchg
mov
jmp
jne
ljmp
inc
cmp
bound
vmovntdq
pop
les
fsubr
lret
fs
in
jbe
mov
imul
cs
jp
stos
pusha
loop
mov
sbb
xchg
daa
xor
sarb
movsl
repnz
fsubrp
push
cwtl
jl
lods
mov
test
pop
imul
jbe
or
xor
hlt
xchg
and
shlb
dec
repnz
push
pop
adcb
xchg
adc
scas
sbb
cmp
push
std
push
cmp
pop
fisttpll
shlb
jp
lods
xchg
les
cmp
ds
jle
bound
dec
xor
sub
std
cmpsl
popa
xor
cli
repz
pop
pop
paddb
daa
jg
aaa
testb
xor
in
lcall
daa
sbb
pop
fs
cld
sbbl
xor
inc
mov
es
int3
in
add
and
mov
call
add
in
push
and
clc
xchg
aaa
lock
dec
xor
xor
mov
adc
dec
movsl
cld
and
mov
xchg
add
addr16
push
pop
cmp
pop
fsubl
aaa
inc
outsb
and
lds
filds
mov
mov
sub
xchg
pop
mov
and
inc
jg
popa
subl
sbb
mov
loope
test
lahf
pop
fldenv
lret
mov
xchg
in
out
js
jle
sbb
adc
sbb
pusha
int
out
shrb
arpl
mov
test
stc
cld
push
jg
ljmp
clc
out
cs
jle
icebp
inc
adc
sub
pop
sub
mov
lea
call
outsl
out
mov
push
das
cwtl
push
gs
mov
gs
xchg
xchg
add
int3
dec
int
lods
call
in
inc
fsts
cmp
mov
ljmp
js
fisubrs
mov
cmp
dec
cltd
scas
adc
xor
inc
xchg
fnstenv
aaa
shll
movsl
sub
jl
mov
adc
not
mov
in
loope
mov
jp
lock
jne
adc
fs
sarb
out
or
dec
mov
rorb
sbb
ljmp
stc
xorl
cmp
daa
inc
aaa
loope
outsb
mov
add
imul
and
sti
mov
cmp
push
and
shrl
mov
jg
cmp
push
sbb
or
imul
push
add
xchg
mov
jmp
fldenv
xchg
jbe
push
add
xorb
push
add
not
ficoms
dec
leave
pop
jno
adc
sbb
rolb
testl
jnp
fdivl
scas
pop
mov
outsl
sbb
mov
in
inc
cltd
or
das
and
out
aas
pop
nop
outsb
leave
shr
cli
xlat
jnp
xor
xchg
mov
dec
and
repz
fnstenv
ljmp
xchg
std
bsr
outsb
mov
inc
shl
popf
nop
xor
jp
mov
mov
clc
scas
sti
movsl
push
xor
xlat
int
adc
pop
repz
push
idiv
and
pop
jae
or
jb
shr
cmp
push
inc
cmp
jae
jecxz
lds
adc
and
cmp
aas
sbb
scas
in
psubusw
fdivrs
shl
nop
popa
in
lods
fwait
cmp
mov
mov
dec
mov
inc
push
xor
inc
loope
and
loop
loop
fistpl
or
imul
add
bound
dec
push
jmp
rcll
ljmp
rcr
pop
sbb
cmp
ja
adc
fcom
les
jge
add
sbb
in
repz
fnsave
add
rol
in
pop
scas
jno
fsubrl
push
mov
push
jl
and
test
xchg
and
and
and
movsb
add
mov
pop
test
ret
call
aas
mov
jle
sub
insb
push
or
add
or
scas
or
or
dec
cmp
xchg
push
sub
adc
adc
mov
into
jge
enter
push
in
mov
mov
mov
out
mov
sub
ss
ss
cmp
fwait
mov
test
jg
das
mov
push
xlat
lret
aad
mov
adc
lret
jnp
xchg
fisttps
aam
jbe
outsb
std
mov
test
aas
mov
mov
and
sub
out
inc
push
xchg
imul
mov
cmp
out
fs
pop
dec
mov
xchg
inc
pop
xor
xor
filds
push
lcall
add
xor
fcomps
cltd
loope
pop
in
push
out
inc
lahf
imul
sub
inc
inc
shll
call
xchg
inc
dec
mov
repz
subb
add
xchg
test
pop
imul
in
and
mov
repz
add
xchg
test
test
pusha
cwtl
out
jns
jne
sbb
xor
clc
cmp
add
dec
sub
jnp
jno
mov
dec
repnz
add
or
jno
arpl
adcl
stos
lock
push
mov
inc
fldt
sbb
jg
xor
outsl
adc
mov
xchg
lcall
ljmp
cmp
mov
or
das
ror
or
inc
stos
mov
lock
push
mov
movsb
fnstenv
outsb
sbb
push
aad
and
mov
aam
imul
xor
ret
inc
or
out
std
sarl
lods
push
mov
cmp
push
mov
xor
insl
push
stos
and
sub
mov
imul
rol
in
push
cmp
push
sub
mov
out
jp
xchg
bound
pop
push
mov
sbb
imul
fdivp
mov
dec
jnp
movsl
push
sbb
in
inc
and
inc
lcall
je
fisubrs
pop
iret
inc
sub
pop
mov
outsl
sbb
jns
jae
scas
adc
mov
push
fdivrs
insl
loope
add
add
jb
iret
adc
xchg
fimuls
std
push
lret
sbbl
loop
jl
cmp
fwait
xchg
xchg
ret
cmpsl
xchg
sub
pop
jmp
pop
mov
div
sti
fcoms
push
stc
flds
xchg
les
sarl
outsl
xchg
clc
je
adc
mov
int
jne
fldl
decb
int3
cmp
jl
cmc
btcl
adc
mov
insb
sub
call
test
xor
or
popa
pop
push
or
push
or
add
add
test
cmp
subl
insb
rorl
lret
int
sub
jno
adc
imul
pop
pop
sub
adc
pop
mov
xor
repnz
or
mov
add
pop
pop
or
fadds
sti
pop
jns
mov
pop
stc
pop
sbb
leave
add
jne
cmp
cld
fdivrs
movaps
sahf
adc
mov
fdivrs
dec
jae
or
lds
sub
jecxz
scas
icebp
aas
jns
or
fwait
adc
cmp
sub
mov
popf
inc
mov
xchg
jg
lock
or
insl
or
out
jl
cmp
lahf
mov
sti
sbb
or
xor
mov
sub
pop
adc
dec
jbe
cmp
sahf
mov
sbb
push
cld
cmp
js
mov
jbe
popa
gs
jecxz
xlat
bound
inc
arpl
shl
mov
xor
les
xlat
arpl
loop
xchg
mov
xchg
insl
xchg
rolb
mov
push
inc
insl
adc
dec
dec
cli
int
sti
inc
hlt
repnz
cmp
mov
loope
in
daa
or
mov
mov
or
lcall
add
add
add
lods
mov
pushf
mov
pop
das
add
movsb
mov
cmp
xchg
or
mov
mov
jle
ret
loop
out
and
bt
cmp
mov
lret
fstps
xchg
cmpsb
sarl
push
cmc
mov
inc
mov
test
nop
xor
inc
jae
fnop
sahf
fmuls
mov
popa
hlt
stc
fs
sar
xor
fdivrl
jg
hlt
dec
repnz
movsb
cld
and
test
arpl
pop
or
out
mov
mov
sbb
cmp
push
je
lea
jbe
cmp
jb
and
mov
arpl
push
push
popa
or
int
xlat
sbb
insl
ret
out
std
fiadds
mov
add
les
insb
mov
xchg
popa
adc
mov
jo
adc
and
pop
or
or
or
dec
jle
pushf
ret
add
scas
add
hlt
push
ds
rcrb
mov
mov
mov
sub
mov
aam
aas
fdivrp
out
mov
mov
inc
push
push
fisttps
jae
xchg
test
lret
in
imul
cmp
dec
test
ja
pushl
in
mov
call
or
addr16
repnz
fs
das
and
ss
lcall
cmpsl
or
fcmovb
cmp
push
out
pop
xor
sbb
or
and
cmc
dec
xchg
into
aaa
pop
or
or
xor
lock
shrb
sub
leave
inc
imul
test
inc
aad
sti
pop
jo
mov
lock
aaa
daa
roll
aam
or
adcl
jmp
fstpl
testb
jmp
add
xchg
sbb
jmp
pop
pop
jne
adc
or
mov
insb
aad
adc
imul
mov
fs
pop
sbb
xchg
inc
lcall
jne
or
sbb
mov
xchg
movb
dec
or
xchg
and
rclb
push
xlat
add
addr16
popa
xorb
fdiv
push
cld
dec
jae
fdivrs
mov
imulb
adc
inc
and
mov
lds
lds
jo
lret
test
aam
jnp
pop
xlat
or
push
andl
push
repnz
dec
fxch
pop
inc
add
fisubrl
add
mov
pop
pop
add
sti
int
popa
adc
push
rorl
inc
sub
adc
scas
ret
cmp
lea
fsubs
pop
jo
pop
cmp
scas
inc
dec
outsb
sbb
daa
or
movsb
cmp
jmp
sbb
cmp
clc
pop
sub
adc
inc
sub
cld
pop
sub
lods
jmp
lods
dec
std
cmp
cltd
dec
dec
jge
pop
xchg
xor
ss
mov
sti
pop
dec
aas
cltd
cmp
jae
int3
xchg
jns
pop
jns
lcall
or
ficoml
lock
xchg
cmc
imul
push
lds
mov
insb
subl
push
xchg
adc
cld
loope
jae
fcompl
mov
rcl
push
sbb
sbb
stos
pop
sub
dec
ja
iret
cmp
enter
adc
sti
jmp
xor
push
dec
pop
imul
dec
les
cltd
mov
stos
jp
xchg
in
andl
sbb
or
xchg
hlt
xor
mov
push
mov
push
jg
mov
pop
jnp
sarb
pusha
push
hlt
pusha
lods
jbe
fisttpl
cltd
and
jnp
fisttpl
push
cmp
sub
adcb
xor
add
sub
dec
int
push
into
jmp
push
adc
mov
int3
mov
mov
cmpsl
aam
cs
lods
jns
iret
pushf
xlat
fisubrl
jns
cli
xchg
jne
push
xor
out
test
sbb
lods
aaa
ret
cmp
cmp
jle
lea
int
jnp
in
daa
ret
xor
in
mov
flds
push
divb
test
or
dec
imul
push
vunpckhps
ficoms
ret
mov
inc
xor
mov
xchg
mov
xchg
andb
mov
jle
inc
push
daa
mov
in
pop
std
add
movb
inc
jp
jne
das
and
addr16
inc
mov
push
jl
push
push
js
inc
cmp
shrl
push
pop
sbb
andl
xchg
xchg
jno
ja
xor
icebp
ja
pop
shl
testb
out
mov
dec
leave
dec
push
push
mov
jbe
add
clc
jg
cwtl
test
sbbb
in
cmpl
push
sub
mov
lock
popf
lret
mov
or
jae
movsb
jg
cld
sbb
adc
jae
js
dec
fbstp
dec
movsb
sub
fdivrl
sahf
int3
repz
xchg
psubq
aad
jnp
test
mov
mov
push
push
ret
arpl
inc
mov
and
push
xchg
jge
ds
scas
cmp
sbb
movsl
lods
addr16
mov
or
xor
pop
jbe
test
bound
dec
nop
call
xchg
aam
movsl
cmp
cmp
mov
icebp
xchg
rolb
mov
dec
dec
cltd
sbb
sbb
repz
mov
or
cwtl
cmpsl
bound
imul
push
outsl
push
aas
imul
shr
out
add
mov
pusha
xchg
push
dec
ss
lahf
aaa
add
inc
xchg
and
in
xchg
sbb
pop
rolb
ret
ror
sub
jb
icebp
sbb
hlt
pop
stos
mov
push
pop
pop
js
sbb
cwtl
cltd
dec
dec
dec
cmp
call
mov
in
dec
in
pusha
mov
jge
sub
add
rorl
out
jg
push
jmp
aas
jp
inc
pop
add
mov
dec
out
popf
inc
clc
stos
scas
addr16
push
popf
sahf
mov
and
and
pop
rcll
pop
sti
shl
xlat
and
aam
mov
pop
add
and
pop
sub
cld
inc
add
adc
cld
sbb
push
sub
movsb
lods
imul
jno
add
dec
mov
and
cmp
mov
lds
mov
testl
pop
sbb
shrl
popf
cmp
or
ret
ds
cmpsl
push
pop
sbb
repnz
jne
rcl
outsb
jo
mov
adc
pop
stos
dec
cmp
add
data16
pop
or
out
idivb
repnz
ror
fs
out
mov
mov
or
xchg
lcall
mov
dec
test
mov
bound
fiaddl
mov
test
cmp
test
jns
loopne
or
std
stc
loop
push
pop
mov
or
movsl
sbb
jecxz
dec
lahf
add
lods
repz
in
and
pop
in
jge
cmp
nop
sbb
mov
mov
insl
stc
fsub
stos
rcll
jle
lahf
ret
jmp
dec
xor
sub
cwtl
repnz
dec
sti
and
js
and
jns
sub
bound
cmpsl
stos
in
push
cmpsb
lds
add
adc
pextrw
test
les
scas
out
sub
sti
outsb
inc
pop
enter
fidivrl
shll
pushf
cwtl
xlat
int
sub
cs
pop
fidivl
cmp
xor
sub
repnz
popa
dec
loopne
pop
push
leave
aad
xor
adc
ljmp
pushaw
mov
mov
xchg
add
jns
jbe
insl
popf
add
mov
fisubl
mov
dec
rclb
lods
xor
jae
test
mov
xchg
or
js
push
test
imul
jno
jge,pn
push
es
leave
cmp
lods
xrelease
adc
lock
inc
mov
aad
rcrb
dec
inc
or
mov
adc
in
hlt
fnsave
int
lahf
sarb
push
std
sbb
imul
dec
xchg
mov
das
add
adc
enter
adc
mov
push
loop
inc
dec
jno
mov
mov
lds
xchg
les
push
int3
inc
pop
test
dec
dec
loope
inc
xchg
fists
pop
jbe
repz
cmpsb
call
out
mov
pop
xor
xorb
push
xor
nop
cltd
fstpt
push
sub
mov
outsl
pushf
roll
jp
push
rcrl
test
or
popa
jb
adc
add
sub
subb
mov
stos
push
sub
dec
mov
pusha
jae
push
mov
leave
mov
push
scas
or
or
data16
fldl
pop
jecxz
test
aas
stos
mov
mov
mov
lods
fimull
fstl
out
notb
sub
xchg
clc
and
sub
cmp
mov
jo
mov
fsubr
cmp
cmp
mov
sub
popf
jno
lods
or
and
daa
cmp
popf
sbbb
mov
jae
orb
mov
sahf
mov
inc
sbb
mov
lcall
shlb
adc
fildll
or
fadd
mov
and
lret
sub
mov
icebp
cmpsl
clc
mov
lret
sbb
cmp
mov
adc
ja
dec
cmp
mov
aas
outsb
fbld
xchg
jno
cmpsl
mov
fs
cs
sub
sbb
out
cmpsl
cs
push
jp
cwtl
mov
imul
cli
in
shrb
inc
or
arpl
into
dec
cmpsb
stos
jns
xchg
faddl
dec
fadds
cmpb
pusha
jbe
lods
cmp
movaps
sub
je
or
cmp
jne
inc
or
fs
mov
or
inc
int
and
xor
in
inc
lret
imul
pop
testl
outsl
out
scas
int
inc
and
jecxz
ret
push
imul
mov
insl
lahf
lahf
or
fisubs
jmp
lcall
xor
pop
xor
xor
mov
adc
push
jae
lock
jmp
or
mov
mov
es
sub
in
sub
lods
add
ds
int3
mov
xor
shll
sbb
pushf
movsl
inc
lock
shlb
and
bound
cmp
mov
imul
stc
mov
inc
add
mov
push
out
mov
das
mov
ja
xlat
mov
repz
push
cli
mov
xchg
mov
xchg
gs
push
xor
stc
das
out
outsb
lods
nop
sbb
cmp
adc
es
sahf
pop
push
test
xor
clc
cmp
push
adc
dec
lea
mov
je
sub
movsb
loopne
xchg
add
sbb
rclb
call
xchg
adc
fisubrl
sahf
inc
loop
jecxz
and
sbb
xchg
mov
dec
inc
or
loop
mov
shrl
xchg
hlt
sbb
adc
xor
enter
dec
mov
rorb
fstpt
xor
xor
inc
and
ja
enter
aam
mov
mov
sti
inc
es
mov
cli
lret
fildl
or
mov
call
push
in
adc
cmp
sbb
xchg
jle
dec
daa
scas
jle
cwtl
mov
mov
pop
sahf
or
pop
test
add
jp
pop
jle
bound
jge
or
mov
mov
daa
rolb
pop
inc
and
div
imul
add
test
test
shll
cltd
mov
xchg
mov
jne
inc
cltd
jmp
mov
hlt
ja
out
iret
scas
mov
call
mov
ret
dec
lret
push
and
aad
scas
fs
mov
adc
push
add
add
je
push
repnz
icebp
loope
lock
test
mov
call
pop
push
out
jns
inc
sub
mov
pop
outsb
adc
addr16
mov
pop
push
fdivrs
fimull
pop
mov
sub
mov
dec
getsec
jmp
lret
mov
xchg
jno
cmp
es
nop
imul
cmpsb
subl
cmp
jb
xchg
cwtl
lock
adc
inc
sahf
or
hlt
or
xorl
dec
inc
pop
push
inc
pop
inc
lds
mov
pop
imul
pop
andl
inc
in
push
mov
je
mov
pop
shl
and
cmp
cld
pushf
mov
or
cmp
loopne
jecxz
cmpsb
jno
jg
cltd
push
repnz
push
mov
stc
xchg
mov
icebp
jecxz
push
stos
roll
scas
aaa
cmp
inc
lcall
lahf
test
mov
xor
je
mov
fisubl
jecxz
or
js
aad
out
jb
cwtl
lock
stc
out
jne
adc
pop
push
xchg
dec
push
cmp
and
test
push
sbb
cld
jp
mov
clc
lock
lea
imulb
popf
pushf
mov
fmull
mov
or
pop
dec
jmp
xor
sbb
inc
xor
adcl
mov
mov
jg
mov
and
jle
pop
loopne
in
pop
popa
xchg
fstps
mov
xor
ds
aaa
jbe
sub
sbbb
aam
addl
inc
adc
aas
dec
mov
cli
mov
popf
jp
fiaddl
loopne
sub
mov
out
push
out
sarb
jbe,pt
lahf
cmp
dec
jmp
in
test
mov
xchg
mov
jge
jmp
xchg
push
arpl
sbb
adc
daa
stos
icebp
adc
add
stos
bound
push
adc
or
in
push
cmpsb
push
je
xor
stos
mov
sub
mov
fcomps
jnp
lds
xor
push
int3
dec
mov
loope
pop
jno
shrb
adcl
bound
jnp
cs
sbbb
and
push
lret
mov
adc
mov
subb
mov
gs
cwtl
lds
mov
pushf
test
cld
js
jbe
iret
ret
rcll
mov
jo
jne
or
shll
pop
cmp
cli
pop
adc
negl
or
push
cmp
inc
int3
lds
adc
ja
push
bound
je
subl
mov
shll
inc
popl
jno
mov
jbe
ljmp
ret
iret
xor
push
mov
shll
fists
adc
sub
fisubrl
push
lret
inc
dec
sub
mov
fwait
rclb
dec
xor
xchg
int
enter
fdivs
and
cmp
int
cs
push
inc
dec
xchg
and
mov
shll
stos
std
and
out
movl
push
mov
outsl
push
out
cs
inc
inc
mov
in
push
lods
pand
sub
incb
pop
lahf
mov
fidivrl
arpl
test
lock
fldl
dec
dec
pushf
pop
pusha
shrl
jle
into
aam
xchg
pushf
push
movsb
lock
cli
outsb
in
pop
bound
ja
fimuls
cli
in
mov
mov
adc
inc
stos
mov
clc
popa
jns
ficomps
and
popl
dec
inc
add
push
fadds
sub
xchg
loopne
pushf
xor
ret
cld
std
cvtpi2ps
iret
jnp
push
popf
mov
into
loope
mov
mov
out
or
jae
ss
into
insl
push
shll
xchg
testb
daa
imul
cmpsb
push
into
out
stos
cmp
pop
scas
sub
das
gs
iret
sbb
pop
jg
shlb
add
mov
das
mov
sub
mov
nop
int
mul
lahf
lock
and
enter
negl
mov
movsb
stc
mov
add
roll
shlb
fsubrs
sbb
hlt
sub
jle
dec
sub
inc
insl
sub
imul
mov
cld
xor
mov
push
pop
jnp
stos
jno
push
insl
xor
out
or
cmpsl
and
or
sti
rorl
outsb
xchg
popf
int
mov
ljmp
mov
lea
xchg
loope
out
pop
mov
das
inc
mov
cmc
popf
notl
sub
xchg
jg,pn
xlat
jb
adc
dec
cmp
dec
rorb
fldcw
test
mov
or
arpl
dec
jae
push
ret
push
jmp
shrb
xchg
sub
popf
mov
cld
push
aaa
pop
sub
enter
into
inc
inc
or
pusha
frstor
call
add
push
shll
sbb
xor
dec
in
push
pusha
xor
or
sub
dec
inc
xor
cmpsl
aas
into
ret
inc
mov
jbe
aas
ss
dec
adc
adc
xchg
lds
lods
movsb
out
mov
fsubl
imul
or
mov
sub
inc
stos
inc
ficoms
mov
jnp
stos
cmp
fldl
xor
xchg
xorl
pop
test
shl
test
aam
data16
ret
push
inc
flds
xor
das
adc
push
mov
nop
add
pop
je
das
inc
lods
xor
in
fldcw
push
outsl
insl
push
and
std
push
int
int3
clc
dec
push
xchg
icebp
mov
push
xor
aam
jl
or
mov
xor
cmp
rcrb
push
sub
fistpll
loop
mov
lods
push
shl
insb
xchg
jge
hlt
mov
in
repnz
outsl
les
jns
lcall
ja
popf
adc
pop
pop
fisubl
mov
or
movb
aaa
push
out
and
jl
sub
andb
loop
stc
lea
and
mov
lret
lods
int
outsl
shl
mov
sub
decb
cmp
jg
jmp
or
push
add
fldt
fcom
jb
sbbb
dec
imul
pop
mov
jecxz
add
repz
clc
push
lret
invd
es
dec
xchg
imul
add
push
sub
add
pop
data16
inc
adc
cmp
inc
adc
pop
imul
sub
or
and
inc
out
ljmp
jno
push
and
fdivl
xor
push
iret
sub
push
cmpsl
fcomi
movsl
inc
mov
inc
test
sti
popf
in
dec
mov
pop
fisubs
in
movb
daa
mov
or
in
pop
pop
scas
test
inc
cmp
adc
scas
push
xchg
dec
aaa
stos
scas
ret
cmpsb
xor
ffreep
mov
cmovno
imul
cli
fnsave
push
mov
fisubl
add
dec
loope
je
dec
adc
add
pop
push
test
rcl
or
jp
ds
pop
cmp
decl
jp
out
movsb
cmp
pusha
cmp
stos
out
jge
into
mov
in
mov
aam
jl
dec
and
loop
insb
lea
fwait
push
insl
stos
sbb
jo
and
cmp
xchg
mov
jns
sti
aas
int3
cmc
sub
mov
and
ret
cmp
ret
jge
sub
jp
sub
xchg
jge
sahf
bnd
cmp
jne
insb
insb
or
loop
bound
cmp
push
push
or
pop
and
sbb
nop
insl
push
xchg
out
shll
xchg
inc
push
adc
aam
mov
push
shrl
jo
cmc
int
sbb
jnp
xlat
pushf
xor
add
mov
jle
lock
movsb
shrl
push
add
mov
aam
adc
rorb
xor
dec
pop
jbe
jmp
leave
sbb
insb
xchg
jmp
shrb
push
adc
adc
pop
inc
test
out
mov
pop
add
jns
pop
xor
sub
add
cwtl
push
cltd
and
sbb
mov
fbstp
mov
cmp
int3
lea
fs
notl
pop
pushf
lods
pop
jns
imul
imul
add
dec
movsl
rorb
cmpl
jne
xor
enter
mov
insb
js
cld
pcmpeqw
adc
cvtdq2ps
dec
daa
lahf
pop
lahf
or
sub
sti
outsl
imul
sbb
lods
pop
pop
pop
xor
bound
lret
mov
adc
std
mov
mov
mov
mov
lcall
fistpll
jnp
in
in
or
jb
jg
cmc
adc
and
inc
push
inc
add
or
add
dec
pop
and
xchg
cmp
mov
sub
inc
xchg
loope
mov
fbstp
stos
and
sti
stc
sub
lods
bound
jb
test
fstpl
pop
or
pop
and
scas
lret
mov
cld
jecxz
aad
cmpsl
adc
jb
imul
jmp
dec
push
jmp
unpcklps
ret
xor
xor
xor
mov
imul
and
mov
adc
push
add
cwtl
sub
mov
mov
cld
std
xor
imul
adc
fstpl
pushf
mov
in
fstpl
jne
sbb
inc
lcall
mov
adc
push
xor
inc
xchg
enter
js
orl
test
add
mov
add
ds
ret
dec
push
jae
hlt
xor
xor
les
xchg
inc
adc
ss
mov
mov
cmp
mov
rolb
jbe
std
es
repnz
imul
stos
jno
cmc
push
mov
push
cmp
add
adc
cmpsb
mov
outsl
es
fdivrl
jns
addl
cmpsb
or
daa
pushf
lea
inc
mov
mov
in
inc
mov
imull
cmc
je
mov
sub
les
sub
fcomi
mov
sbb
push
insb
idivb
cmp
rclb
incb
pop
sbb
mov
int3
add
div
bound
sub
push
pop
mov
xchg
outsl
mov
mov
cwtl
loopne
int
sbb
fs
dec
jo
and
imul
mov
lods
cmp
or
lea
xchg
sbb
shl
cmp
push
ret
add
mov
sub
cmp
cmp
cmc
data16
inc
mov
ja
int
aam
pop
push
xchg
xorl
and
scas
mov
jb
sbb
add
aaa
sbb
addr16
sub
imul
mov
icebp
adc
call
mov
xchg
leave
pop
daa
lea
aam
test
and
pusha
sbbl
jp
add
int3
fisttpl
jbe
cmp
iret
add
jecxz
jl
fistpll
test
push
inc
sbb
sub
das
lret
testb
inc
inc
test
cmp
fidivrs
cmpsb
cmp
pop
pop
jnp
sti
push
pop
outsl
cmp
xchg
out
rcrb
and
cs
shlb
sarl
popf
xchg
mov
jno
dec
pushf
mov
test
mov
or
aam
das
xchg
push
lret
ret
lret
fcomip
pusha
pop
pusha
shrl
push
das
out
je
xor
notb
sbb
jnp
and
xor
test
xchg
out
add
in
pop
xor
call
jge
and
jnp
stos
jp
pop
paddusw
aas
add
cwtl
jge
mov
movsb
shll
nop
call
addl
jg
mov
in
mov
jno
stc
cmp
jo
scas
cmpsl
fisttpll
repz
xor
fistpll
les
mov
cmp
call
jno
sub
shll
xor
dec
test
pop
decb
das
mov
in
nop
push
mov
cld
jl
clc
push
ljmp
push
jmp
mov
popa
fwait
mov
repz
icebp
cltd
add
inc
push
sub
dec
test
and
fbstp
dec
mov
adc
in
and
sar
mov
stos
xor
lock
je
js
xchg
mov
dec
pop
adcb
mov
not
push
jp
and
inc
pusha
fstpl
fcoml
paddusb
mov
or
movb
repnz
dec
sub
add
dec
add
xor
mov
push
das
dec
push
push
xchg
ret
pop
mov
repnz
pop
add
xchg
mov
cmp
pushf
imul
inc
js,pn
ss
mov
and
inc
jl
xchg
arpl
jo
in
ja
mov
lret
and
shrb
adc
mov
push
nop
and
sbb
inc
mov
lock
int3
sub
push
incl
les
inc
dec
fcompl
loop
mov
and
std
add
and
xchg
stos
addr16
inc
dec
jp
shl
loopne
cli
sub
dec
cmp
push
test
aaa
cld
push
in
pushl
adc
add
aad
mov
addr16
xor
push
popf
cmp
cmpsl
push
mov
inc
jae
mov
into
data16
rcrb
adc
pushf
inc
fsubs
es
repnz
loope
inc
pushf
jnp
je
adcl
xor
inc
in
lcall
and
lret
pushf
test
mov
in
cltd
lock
out
imul
sub
test
fildll
and
sbb
xor
in
inc
jecxz
xor
or
ja
adc
cld
cmp
in
sarb
xlat
mov
leave
and
cmp
lret
inc
out
rorb
mov
or
addr16
daa
lock
mov
jbe
pop
push
xchg
xlat
dec
inc
inc
gs
jnp
movsb
jne
stc
push
jecxz
jle
unpckhps
fcomps
int3
pop
jns
push
pushf
rcrl
jmp
pop
jb
jg
fists
fdivl
mov
jne
adc
xorl
js
cli
xchg
addr16
push
lock
pop
cmp
inc
jmp
dec
push
mov
fmuls
mov
jg
add
jp
add
les
xor
push
mov
in
sbb
jmp
jp
xchg
xchg
pop
lret
leave
loope
dec
pusha
pop
lret
inc
ficoms
xor
cmp
mov
push
xchg
movsl
arpl
add
stos
xchg
pop
xlat
xchg
fwait
mov
fidivrl
les
inc
lret
movsb
adc
dec
outsl
cmp
divb
cmp
sub
mov
or
test
fists
pop
push
push
mov
sub
pusha
repz
inc
push
iret
adc
add
fisttps
mov
mov
into
sub
mov
hlt
mov
sub
pop
and
insl
add
add
mov
pop
and
jo
or
cmpsb
pop
sbb
std
and
sub
mov
push
sahf
jp
loop
fdivl
mov
nop
loop
gs
testb
jno
jl
mov
cwtl
cli
mov
dec
jb
inc
push
leave
push
mov
sbb
pusha
xchg
ja
dec
mov
sub
sub
mov
scas
cmpsb
sbb
adc
cli
loop
pop
add
in
cmp
sahf
stos
sub
dec
movsb
test
mov
enter
pop
add
xchg
lds
mov
push
add
lret
fsub
pusha
dec
push
in
inc
stos
test
ret
xor
mov
add
out
jns
add
or
sub
xor
fdivr
mov
shll
dec
adcl
sub
stos
cmp
mov
xor
mov
push
mov
mov
lods
or
leave
xchg
xchg
jle
cmpsl
addr16
mov
clc
ljmp
pusha
jno
pop
jge
popa
push
insl
movsb
lock
dec
xchg
mov
and
je
cli
inc
adc
aam
in
lret
loop
ljmp
pop
add
push
in
add
jbe
ret
loopne
xor
jnp
inc
push
ja
mov
repz
pop
push
iret
adc
jmp
xlat
xchg
pop
xor
shl
gs
mov
lods
lcall
es
and
in
ds
insb
icebp
in
shlb
leave
int3
or
enter
and
sub
jae
sbbl
or
daa
or
cmpl
xchg
nop
stc
mov
enter
in
in
jg
orb
test
fwait
sbb
mov
insl
xchg
int3
lods
xchg
rolb
fs
aaa
add
loop
dec
pop
or
int
push
add
sbb
fisubs
cmp
test
jbe
test
pop
test
aad
leave
adc
xlat
sti
inc
insl
pop
mov
test
jle
pop
movsb
jnp
bound
adc
test
xlat
mov
enter
adc
popa
xor
sbb
or
mov
mov
xchg
loop
push
sub
scas
dec
jnp
lods
jne
mov
movsl
inc
sbb
iret
inc
jo
or
sub
sbb
pop
add
jecxz
stos
mov
shl
loopne
cmpsb
sbb
stc
test
sarb
sbb
sbb
inc
cmp
shrl
xor
mov
popa
mov
ljmp
mov
xor
sbb
dec
bound
mov
xchg
jle
or
add
ficompl
add
and
int3
adc
dec
cmp
maskmovq
testl
push
lret
add
ret
jmp
jmp
jg
sub
iret
push
jge
les
test
push
scas
cmc
inc
cld
dec
hlt
xchg
decl
ret
cltd
mov
push
dec
push
sahf
or
or
add
inc
sti
or
jle
push
add
rcrb
movsl
add
sbb
jle
push
in
sbb
repz
mov
mov
aaa
stos
xchg
loope
jge
out
es
pop
pop
ljmp
or
xchg
enter
ljmp
std
ss
jg
push
or
jp
pop
enter
jecxz
lds
push
mov
dec
mov
xlat
mov
incb
nop
sahf
push
xorl
cs
scas
cmp
xchg
push
stos
sbb
xchg
push
lahf
adc
sbb
push
jo
jle
adc
mov
jne
fcmovnu
test
jns
imul
sti
xor
xor
subl
fisubrl
xchg
insl
das
jbe
or
andl
jno
lea
gs
stc
xor
call
xchg
pop
rcrb
mov
loop
fmull
js
jmp
sbb
lcall
sub
mov
inc
mov
inc
scas
jmp
jmp
adc
sbb
push
dec
outsb
push
addr16
xor
mov
bound
repz
sbb
mov
outsb
sbb
mov
mov
imul
in
mov
cld
sub
sub
loope
fdivrp
sub
mov
mov
mov
scas
andw
movsb
in
inc
lock
out
insb
je
push
int
inc
call
iret
mov
mov
test
ret
dec
inc
adc
mov
test
or
nop
push
add
xor
xchg
popa
add
fdivrp
xchg
xchg
test
pop
cmp
mov
aas
fcomps
repnz
scas
out
push
stc
xchg
jnp
aad
pop
lcall
stos
lea
in
push
cmpsl
pop
mov
stos
cmp
adcl
jne
jo,pt
jnp
and
push
shll
or
jae
pop
das
xchg
imul
or
gs
add
mov
loopne
mov
sub
or
das
test
add
stos
mov
sbb
or
or
in
repz
test
dec
addb
ret
fbld
cltd
xchg
xlat
cmp
push
inc
mov
pop
sub
pop
sub
shll
xchg
pushf
divb
lock
int
mov
sbb
shrb
and
out
sti
or
jnp
in
pop
ret
dec
leave
adc
movsb
ljmp
inc
jo
inc
nopl
adc
les
xchg
cmp
push
mov
aam
inc
cmp
and
mov
push
rolb
popf
adc
xor
cli
fcoml
out
jmp
stos
stos
imul
cmp
cmp
test
jmp
pop
jp
inc
sub
test
pushf
mov
cmpsb
addr16
xchg
mov
hlt
adc
into
enter
incb
and
shrl
dec
sub
and
scas
test
dec
dec
test
icebp
sbb
inc
add
stos
push
das
xchg
roll
clc
nop
sbb
aaa
jge
loop
cli
int3
mov
jbe
cmp
ds
sub
jbe
scas
pop
and
fimuls
call
adc
add
sahf
sub
adcl
sti
cmp
lods
sub
pop
imul
shrl
dec
jae
inc
xchg
adc
aam
push
sub
sahf
insb
jmp
in
xchg
sbb
lret
mov
or
test
dec
jbe
sbb
mov
stos
and
imul
fwait
lods
cmp
add
int
adc
gs
sbb
pop
movsb
sub
adc
mov
jns
fbstp
das
adc
rorb
loopne
mov
push
xor
push
in
sti
scas
push
or
adc
pop
outsl
jge
outsl
pop
sbb
xor
jbe
fdivl
mov
push
jp
ljmp
or
mov
clc
xchg
inc
lods
xor
loope
insl
es
fdivs
adc
std
pop
jae
jp
int3
cmc
cmp
movsl
mov
stc
movl
or
sbb
into
xchg
adc
pop
jmp
dec
dec
add
sub
mov
xorb
lock
insb
loopne
fsubl
sti
jmp
push
and
iret
and
mov
jbe,pt
lods
outsw
mov
jmp
inc
push
cmp
or
movsb
dec
xchg
sbb
repnz
push
aam
cmp
mov
adc
pop
out
or
mov
jno
ret
inc
in
fiadds
xor
pop
mov
pop
pop
bound
bound
outsb
cmpsb
inc
jo
addr16
inc
inc
jge
adc
gs
mov
stos
ss
inc
ljmp
cmp
sub
stos
xchg
sti
push
loopne
lret
aas
adc
and
je
and
pop
mov
inc
scas
cmpl
adc
test
xor
dec
and
fisubrl
aas
es
push
or
xchg
clc
je
js
ffreep
dec
ds
mov
cmp
leave
cli
xor
insl
jae
xchg
insb
mov
push
sub
pop
or
fsubr
in
enter
vmovaps
in
adc
sub
mov
inc
clc
out
sub
add
xchg
sarb
mov
mov
mov
ja
inc
lods
sbb
cmpb
loopne
adc
enter
cmp
pushf
movsl
cmp
mov
dec
cmpsl
xchg
in
pop
fistpll
adc
ja
movl
mov
test
mov
data16
jmp
in
rolb
sub
mov
decb
into
stc
lret
sbb
add
push
sahf
lret
cld
shl
scas
mov
loopne
arpl
mov
push
lahf
movsb
cli
shl
jb
pmulhuw
push
sti
adc
ds
stos
jae
lahf
or
mov
xchg
jbe
mov
pop
stc
push
mov
test
pusha
in
mov
push
inc
push
stc
xchg
aad
cmp
inc
pop
pop
mov
and
stos
arpl
lcall
adc
xor
xchg
jns
addl
push
push
cmp
outsb
xchg
xchg
push
add
jl
stos
das
sub
cmp
and
fcoml
xor
mov
jl
add
push
js
les
pop
loope
mov
xor
mov
andb
push
in
xchg
mov
sub
enter
or
push
and
stos
mov
inc
cli
push
fmuls
add
sbbb
mov
shr
sahf
mov
xchg
fstps
jecxz
fidivrs
push
jg
loope
xchg
mov
sbb
js
scas
xor
add
sub
movsb
and
into
xor
pop
sbbb
leave
pop
cmp
mov
scas
pop
xor
fwait
insl
xchg
push
jo
jmp
enter
pusha
pop
je
cmpsb
out
bound
cmp
and
xorl
mov
jecxz
push
or
fwait
je
push
sahf
xor
mov
shl
pushf
mov
lret
xchg
fdivrs
insl
cltd
dec
push
loopne
fadd
sub
clc
mov
sub
and
addl
push
loopne
and
cmpsl
iret
test
mov
push
add
and
jno
mov
mov
adc
mov
ljmp
pusha
and
inc
xchg
sbb
js
mov
xchg
push
outsl
fldcw
mov
jnp
iret
jo
cmpsb
pop
inc
xor
push
sahf
outsb
mov
pop
mov
jno
hlt
shl
sub
mov
jb
lahf
bound
jecxz
fstpl
sarl
jmp
and
arpl
xchg
xchg
lcall
xchg
mov
std
fstpl
std
sub
pop
xchg
inc
filds
test
xor
mov
xchg
xchg
jns
dec
cmp
cmp
sarl
jl
cmp
fsubl
jnp
in
mov
shl
int3
or
cli
scas
pop
bound
push
repz
xor
adc
scas
outsb
mov
ja
pop
adc
fdivs
mov
popf
push
repnz
pop
cmpsl
pop
test
repz
das
adc
jb
pusha
insl
mov
imul
orl
push
or
mov
or
leave
addb
lret
push
das
cmp
imul
xor
push
dec
mov
pop
pop
sbb
adc
lods
idivl
sbb
pushl
pusha
pop
xchg
and
outsl
add
mov
ficoms
fisttpll
and
cmpsb
add
cmp
stos
jge
insl
in
xchg
lock
loop
adc
ret
xchg
jne
cmp
xchg
aam
dec
mov
insl
mov
pop
gs
push
push
inc
scas
bnd
mov
push
jbe
adc
cld
push
jb
fnstsw
xor
fldcw
inc
sbb
xchg
jo
negl
repz
mov
stos
mov
pop
fldpi
mov
adc
imul
je
mov
ficoml
stos
in
shl
pushf
push
add
setg
sub
js
adc
mov
adc
sub
mov
das
repnz
mov
mov
jne
rcll
cld
jno
stos
std
cmp
jecxz
dec
xchg
pop
stc
dec
cmpsb
adc
out
sub
mov
pop
and
cmp
iret
dec
xchg
jmp
loopne
pop
jg
dec
xchg
mov
loop
xchg
mov
in
insb
add
lock
ljmp
mov
inc
sbb
xor
repz
in
orb
pop
test
and
add
adc
orb
and
xor
adc
xor
jecxz
fnstenv
xchg
sbbl
xor
ffree
loop
jle
pop
and
rcl
xor
jg
lock
add
xchg
sbb
insb
inc
jns
ret
dec
mov
sub
lret
pushw
sbb
xor
cwtl
mov
insl
sub
inc
sbb
push
xchg
push
in
adc
or
aad
fs
es
xor
and
andb
adc
mul
sti
gs
dec
push
jmp
xchg
out
addr16
cltd
sbb
loope
leave
add
jl
arpl
fsts
inc
adc
lret
push
lahf
es
lock
sub
sbb
xchg
push
push
adc
iret
jmp
ficoms
sarb
fwait
ret
adc
add
rorl
cmp
int
mov
dec
inc
repnz
arpl
sbb
in
test
test
out
mov
jo
call
xor
sub
lret
repnz
sub
pop
call
imul
add
cwtl
lahf
pop
fdivl
fdivp
mov
loopne
mov
repnz
pop
lahf
cmc
cmc
add
jnp
cmpsb
rclb
clc
lods
push
and
add
push
add
shll
dec
xchg
or
mov
pop
lahf
roll
push
xor
shll
pushf
push
jmp
cli
in
push
adc
mov
jmp
xchg
jg
xrelease
les
fnstsw
mov
push
adc
aad
mov
xor
mov
repz
mov
adc
lret
cmpsb
movsl
ja
mov
push
ja
jne
jbe
and
inc
mov
or
popa
mov
pop
cmc
das
repz
scas
cltd
and
lret
dec
mov
sub
divb
and
popa
cs
jne
mov
mov
mull
sub
and
sub
insl
dec
xor
sarl
out
jb
or
mov
pop
pusha
jmp
int
test
inc
repz
and
pop
ret
pxor
add
mov
xchg
xchg
call
xchg
or
pop
push
jge
daa
icebp
pop
in
outsl
arpl
les
xor
inc
jmp
enter
sti
enter
icebp
jmp
cmp
and
cmpl
cmpl
mov
cli
popf
arpl
cltd
or
fistpl
cld
test
and
jle
inc
lods
jmp
sbb
cmp
outsl
and
mov
jb
push
loope
cmc
mov
cmpsl
ljmp
or
inc
sbb
js
jp
push
testb
imul
arpl
cltd
lds
pop
dec
xchg
lret
mov
outsl
jg
mov
push
xor
lock
fmul
aas
push
lods
xor
jmp
daa
pop
xor
rclb
inc
xchg
inc
in
loopne
cmpsl
cmp
in
dec
pop
fsts
mov
jno
std
imul
dec
cmc
add
lds
stos
add
movsb
xchg
fldenv
stos
fstp
add
lahf
add
aad
pop
fcoml
movsl
mov
outsl
insb
xchg
test
int3
cmpsb
lahf
lock
adcb
add
movsl
movsl
cmp
mov
test
enter
scas
fiadds
in
push
cmp
call
rol
stos
jecxz
pop
sub
add
das
das
int
or
sbb
in
test
fnstsw
ds
stos
js
dec
loopne
negl
cltd
sbb
or
sti
cmpsl
jns
loop
test
fisubrl
lds
and
xchg
test
lods
movsl
les
call
lret
mov
loope
push
sub
inc
insl
or
jbe
push
xchg
insl
cmpsb
sub
or
mov
jl
pusha
call
rcrl
push
jbe
or
cmc
cmpsl
or
fwait
push
fistpl
popf
rcrb
fstp
cltd
push
scas
insb
and
dec
sti
pop
or
mov
test
or
shrl
adc
pusha
adc
mov
mov
outsl
xor
sub
lock
out
aas
pusha
mov
mov
push
cmp
out
cmp
insb
mov
ja
in
cs
ret
mov
dec
inc
mov
cmp
push
and
and
mov
in
mov
xchg
mov
out
repz
in
cmpsb
adc
sub
stc
inc
push
xor
xor
sar
cs
lods
stos
dec
xor
dec
adc
xor
mov
mov
push
imul
xchg
movsl
pusha
cwtl
xchg
ds
int
imul
or
pop
and
sub
popa
xor
inc
stos
pop
sbb
dec
int
jp
es
cmp
gs
xchg
fadds
cmp
leave
icebp
pop
mov
stos
cmpb
sub
imul
sub
int
mov
and
out
repz
cmpsb
int
inc
sub
jnp
jle
and
fwait
scas
test
mov
cmp
mov
xchg
rorl
mov
inc
stos
inc
aam
pop
mov
test
repnz
es
inc
mov
gs
iret
dec
inc
jecxz
mov
xor
sub
mov
or
stos
cld
jge
push
sbb
dec
insl
jmp
push
ret
daa
xchg
pushf
fucomi
pop
cs
sub
xor
arpl
in
push
jnp
and
pop
xor
aas
mov
cmp
shrb
mov
add
ja
sbb
or
je
aaa
jns
xchg
stc
and
cmp
aaa
lret
les
lcall
and
jmp
loopne
call
ret
loop
pop
pop
repnz
xchg
push
dec
mov
mov
mov
cmp
pusha
fcoms
iret
mov
xor
stos
fnsave
push
xchg
xchg
and
add
ud1
js
push
std
inc
mov
ss
ret
or
dec
loope
into
add
mov
or
inc
fsubs
enter
stos
shrl
jnp
mov
xor
sbb
adc
jge
lds
ds
mov
js
jns
sub
adc
loope
pushf
dec
rclb
cmc
fdivs
ss
cmpsl
ljmp
sub
rcl
cmp
imul
jno
mov
inc
jge
jae
xchg
or
outsb
sub
sub
pop
lods
push
cmp
dec
notl
sub
add
lods
lahf
adc
or
push
nop
ret
inc
cmp
xchg
je
call
mov
sbb
in
mov
ffree
nop
insb
xchg
xchg
jne
in
imul
adc
or
mov
mov
int
test
iret
xor
dec
jle
and
cs
movsl
rol
adc
mov
not
sbb
filds
int3
ss
mov
dec
mulb
or
mov
subl
cmp
mov
ds
ficomps
mov
xor
lret
inc
addl
adc
cmpsb
add
lock
addr16
in
push
add
fdivrl
adc
jmp
adc
cmp
dec
in
cmp
or
icebp
pop
push
push
ffree
aad
fisubs
ds
adc
pop
lcall
sbb
xchg
lcall
and
inc
cwtl
jnp
sub
cld
jne
jbe
xchg
or
test
test
je
xor
push
add
add
inc
test
jmp
mov
dec
or
pop
rcll
lahf
mov
pushf
or
cmpsl
adc
push
shlb
mov
adc
jb
outsb
fiadds
test
fisubrs
int
fcoms
cmpsb
jns
xor
mov
mov
mov
push
add
loope
mov
int3
cmp
aad
xchg
cltd
push
mov
push
cmp
enter
int3
div
xor
add
leave
adc
cmp
cmp
add
imul
jbe
add
icebp
orl
mov
push
nop
jne
push
insl
test
add
mov
bswap
cmp
das
cmp
mov
pop
bound
mov
insb
dec
jne
gs
push
je
movsl
mov
scas
cwtl
in
or
mov
loope
cmp
mov
pop
inc
shrl
mov
sar
call
mov
cmp
jns
mov
test
mov
repz
enter
sub
gs
mov
fists
dec
inc
xlat
in
xchg
aas
dec
fcompl
out
xchg
sarb
or
jno
xor
rcrb
mov
mov
clc
mov
cmp
sub
fisttpll
inc
sub
stos
outsb
fisubrl
mov
push
mull
enter
jl
pop
xchg
out
outsl
hlt
fbld
add
lahf
jb
rcll
out
and
xor
adc
mov
xchg
mov
dec
cmp
push
adc
push
ja
cld
nop
das
dec
xchg
jl
lcall
fists
in
fisubs
xor
lret
imul
cltd
push
add
mov
pop
and
xlat
push
iret
movsb
inc
leave
inc
mov
sarl
pop
shll
stos
lock
sub
dec
ds
xorb
jl
mov
mov
push
sub
into
and
jmp
adc
xchg
mov
in
xor
ja
mov
mov
fisttpl
in
lret
mulb
add
mov
push
dec
ret
mov
xchg
sbb
popf
mov
cmp
dec
daa
lcall
mov
nop
lret
mov
pand
into
jp
test
inc
repnz
fnsave
ds
pop
shlb
inc
fiaddl
scas
mov
movlps
ret
sub
testb
pusha
push
nop
jle
xor
rcrb
jmp
or
inc
push
das
fcompl
pop
push
dec
negl
test
loopne
mov
aaa
sar
pop
push
push
push
sahf
mov
sub
push
push
adc
test
xor
dec
cli
sbb
mov
pop
testb
add
in
sub
stc
out
loopne
out
jle
sti
mov
fsubs
and
mov
mov
pop
pop
mov
sbb
int
mov
or
xchg
lahf
dec
mov
rolb
in
leave
adcl
int
std
pop
aas
adc
and
test
adc
cmp
aaa
jo
xchg
ljmp
sbb
cwtl
icebp
adcl
les
pop
loop
leave
aam
inc
inc
add
popf
mov
fldt
mulb
fs
inc
mov
repz
dec
in
ds
xchg
inc
adc
fiaddl
mov
or
lods
les
or
cmpsb
mov
pusha
mov
cmp
cmpsl
jno
inc
jne
push
cmp
dec
fsubl
insl
clc
stc
push
stos
or
movsl
adc
popl
xor
jb
cmpsb
sti
rcr
inc
xor
or
pop
jmp
fs
mov
mov
mov
mov
pusha
xor
add
jno
xchg
add
sti
inc
cmp
out
add
xchg
stos
int
sub
fwait
jne
pop
xor
mov
jne
push
jae
or
xchg
loop
arpl
outsb
out
loope,pn
push
push
xchg
inc
inc
dec
xor
pop
and
lret
inc
fcmove
dec
mov
iret
test
inc
nop
add
sub
in
subb
xchg
jmp
addr16
gs
outsl
call
iret
stos
pop
scas
loop
jae
mov
leave
or
xlat
xor
shr
or
jb
nop
and
pop
inc
add
andl
push
adc
popf
sahf
mov
pop
or
sbb
hlt
sbb
dec
push
jae
xchg
inc
int
lret
mov
hlt
inc
jae
test
out
push
imul
in
xchg
sysret
mov
insl
pusha
jo
mov
insl
lods
cmp
sti
daa
stc
sub
jae
lahf
xchg
inc
sub
mov
inc
movsl
rcrb
push
popf
in
push
inc
repnz
mov
sbb
movsb
popa
sti
and
outsb
dec
pop
dec
inc
fs
fwait
mov
lret
stos
fidivl
outsb
stc
int3
add
cmpsl
jae
popa
js
push
or
repnz
jmp
xchg
ret
es
push
lds
adc
jle
inc
cmp
mov
ficompl
ret
enter
add
mov
rclb
les
in
cmpsb
fwait
inc
xor
cli
sub
mov
outsl
dec
lock
xchg
mov
stos
and
jae
mov
mov
jnp
jae
add
pop
sbb
psubsb
rcrb
lret
in
adc
xchg
test
dec
lahf
daa
data16
jmp
mov
sar
ret
cwtl
je
pusha
jp
gs
shlb
dec
push
fdiv
cs
pop
sbb
push
push
popa
in
jge
movsb
sub
lret
dec
fsubrl
test
or
mov
nop
add
inc
packuswb
adc
mov
jb
mov
shll
mov
movsb
mov
cmp
add
ret
jecxz
lods
xchg
xor
jl
mov
jns
out
sahf
push
cmpsl
inc
cmpsl
dec
jb
adc
pop
leave
jns
arpl
shlb
jns
aas
roll
adc
add
test
loopne
pushf
xlat
ss
in
clc
fidivrs
cli
or
sub
outsb
xchg
xor
push
jns
jmp
movsl
test
mov
hlt
xor
fs
in
xchg
or
repnz
push
daa
addr16
mov
in
popa
cltd
mov
test
mov
ret
jl
loope
jp
gs
and
push
loopne
or
xor
cmp
jnp
cmp
pop
or
pop
loop
cmpsl
mov
iret
fistpl
pop
int
lret
rcrl
das
leave
add
adc
add
cmpsl
dec
jge
pusha
hlt
sbb
sub
dec
imul
or
pop
inc
jae
or
shll
movsl
mov
sub
orb
repnz
clc
mov
add
mov
add
clc
mov
out
cmp
js
pop
push
test
mov
lods
in
pop
shrl
push
popa
je
add
dec
mov
popf
dec
repz
clc
mov
push
jecxz
mov
cmp
loope
repz
xor
jb
cmp
cmp
jmp
dec
dec
cmp
and
inc
cmp
and
add
sbb
jl
popf
in
jmp
stos
sbb
push
add
inc
jecxz
mov
jb
jp
dec
mov
jmp
add
sbb
jg
mov
lret
jg
cmp
jnp
cmp
push
jno
push
sbb
popa
inc
scas
stos
inc
cmp
jge
ja
adc
iret
insl
jl
or
jae
xchg
xchg
add
imull
jecxz
lods
sti
adc
ret
mov
add
mov
mov
or
in
pop
adc
out
inc
adc
and
jo
mov
fldl
and
test
int
add
stos
idivl
mov
sbb
jmp
in
out
jae
ds
mov
jo
addr16
popf
test
pop
jmp
loope
sbb
push
mov
lods
xor
lock
js
sbb
or
jecxz
out
push
repnz
push
fdivr
sbb
lods
loope
and
xlat
sub
cli
dec
mov
mov
push
test
cmp
fwait
pop
and
xor
hlt
xchg
inc
das
dec
cmpsl
sbb
push
test
sub
lds
or
stos
outsb
dec
iret
jns
lret
lea
jne
dec
mov
mov
adc
les
clc
cli
out
xchg
imul
adc
jo
out
jne
cwtl
testl
push
push
pusha
mov
dec
sbb
test
fwait
pmulhw
xor
or
out
aaa
xor
insb
mov
aad
js
jecxz
fcoml
outsb
incb
cmp
mov
mov
jge
and
out
lea
cs
cmp
mov
push
or
iret
lcall
xor
leave
mov
xchg
mov
push
repnz
sar
xchg
stos
pop
xchg
add
pop
ljmp
imul
insl
mov
xor
test
push
fwait
mov
push
sbb
pop
subl
jl
or
gs
cmp
in
or
adc
lods
mov
push
test
pusha
sbb
insl
mov
jecxz
cltd
cmpb
stos
fists
icebp
test
enter
inc
lcall
inc
ficoms
cmp
jecxz
pop
movsl
xchg
ja
roll
push
and
push
bound
aaa
popa
cmp
outsb
xchg
lret
dec
pushf
in
addb
sti
mov
mov
jg
jg
pop
mov
xchg
mov
les
xchg
mov
aam
mov
jnp
push
adc
cmp
push
sbb
adc
cmp
cmp
icebp
adc
sub
int
push
fcmovnb
adc
lret
mov
imul
sbb
inc
stos
cmp
cmp
in
or
pushf
ds
push
movsb
xlat
mov
rcll
cmpsl
mov
and
xor
jp
lcall
jl
push
nop
scas
pop
lahf
lock
jle
fs
and
adc
out
in
test
das
clc
xor
and
push
pop
xchg
ljmp
mov
std
cld
pop
mov
fnstcw
fcmovu
dec
movsl
jmp
mov
jae
xor
insb
pop
fcoml
in
ficompl
fs
outsl
push
in
outsb
js
jge
mov
cli
adc
loop
sub
and
mov
fiadds
gs
mov
addb
pop
mov
cmp
pop
mov
or
sub
call
hlt
add
shrl
dec
mov
inc
push
mov
push
sbb
daa
ret
repz
jo
push
sbb
push
pop
sbb
cmovns
xchg
pop
es
adc
push
push
popf
sub
jno
testl
add
fwait
mov
or
push
sub
dec
cli
ss
sar
test
insb
xchg
out
mov
std
repnz
ret
in
sarl
push
add
cmp
test
mov
or
or
inc
mov
jnp
leave
nop
adc
mov
vmwrite
pop
dec
popa
cmovbe
or
pop
inc
mov
int3
inc
dec
fmul
sarb
ja
adc
icebp
and
addr16
fcmovu
add
adcl
jmp
pop
fsubl
scas
rclb
xor
mov
or
mov
adc
in
xor
jle
sbb
outsl
mov
inc
gs
adc
out
push
adc
ficompl
dec
pop
jbe
shll
jp
sbb
pop
arpl
pop
adc
jb
insl
pop
dec
stos
les
xor
ja
iret
mov
pop
rorl
lods
adc
mov
fbld
outsl
aad
pop
in
fidivrl
sti
repz
idivl
adc
loopne
in
fldl
lea
gs
mov
cmp
mov
sahf
mov
imull
test
cs
fmuls
pop
adc
insl
pushf
stos
fwait
pop
or
icebp
adc
inc
sub
push
push
add
dec
dec
fiadds
rcr
faddp
adc
xchg
xchg
int3
pop
dec
adc
pop
cmp
cmp
dec
jo
add
fcoms
push
out
or
mov
test
inc
and
out
mov
pop
mov
js
out
pop
es
sbb
addr16
outsb
scas
push
movzbl
lahf
loope
fcmovu
push
cli
xor
jecxz
enter
push
push
daa
dec
jnp
push
inc
push
or
call
sarl
ljmp
out
push
ds
add
cmovbe
leave
lcall
gs
ret
sbb
cli
scas
xor
nop
cld
xchg
cmp
leave
sarl
jb
xor
or
xchg
xchg
add
inc
out
push
dec
sub
js
scas
in
push
lcall
cmpsb
dec
shrb
inc
or
insb
mov
lds
xchg
mov
mov
inc
adc
insl
jmp
rcl
adc
insl
mov
les
pop
add
pop
adc
fsts
pop
push
xor
inc
mov
jb
cli
fmulp
or
ljmp
cld
xor
test
and
out
lret
sbb
jecxz
dec
insl
stc
js
xchg
pop
icebp
xchg
outsb
pushf
sub
lock
jo
pop
pop
orl
and
add
popf
add
fisttps
and
and
jl
xchg
dec
lds
icebp
stc
jnp
pushf
add
fistpl
test
or
mov
imul
dec
and
movsl
cmp
mov
ss
or
sub
fsts
iret
stc
push
pop
and
mov
cmp
in
sbb
xchg
je
xchg
lret
mov
clc
mov
sbbl
stos
in
sti
mov
nop
mov
or
ds
mov
add
imul
cmp
xorl
lret
fwait
inc
push
sub
stc
mov
sbb
ds
xchg
push
sti
repz
cmp
ljmp
xor
out
xor
push
movsb
repz
adc
inc
sub
daa
in
push
mov
and
add
leave
xor
add
cmpb
addr16
mov
or
inc
iret
sub
mov
add
sar
lods
add
test
dec
sti
insb
pop
ret
insb
mov
scas
push
out
xchg
mov
inc
push
addr16
addr16
imull
pop
aad
stos
inc
stc
mov
xor
mov
stc
mov
jg
stc
cmp
in
fisubrl
imul
ret
push
fiadds
jno
add
inc
cmp
sbbb
or
xor
sbb
imul
pop
push
adc
pop
nop
in
in
sbb
xor
mov
sti
repz
test
pop
push
imul
test
ror
mov
adc
adc
fwait
movsb
jno
mov
mov
jecxz
cwtl
lret
ss
xchg
xchg
mov
xchg
faddl
mov
mov
pop
insb
mov
mov
add
push
push
or
ja
ds
inc
insb
and
xchg
nop
mov
mov
hlt
cmp
movl
xchg
arpl
jns
cmc
push
dec
add
lcall
push
out
leave
fdivrs
mov
lods
sbb
lcall
cmp
jle
push
cmp
popf
out
cmp
idivl
adc
cmpsl
je
fdivrl
jge
arpl
lods
xchg
sbb
jnp
cli
lret
es
pop
mov
inc
lods
ljmp
dec
cmc
mov
dec
push
pop
pop
mov
xchg
jecxz
bound
jnp
jmp
push
mov
inc
sarb
cltd
inc
int3
pop
lret
cmp
push
mov
mov
js
push
fcoml
mov
add
cld
adc
fistpl
mov
clc
or
sbb
push
lods
xlat
mov
pop
xor
aad
mov
sbb
mull
je
dec
in
mov
dec
lock
les
push
bound
cld
lret
stos
mov
mov
adc
and
xchg
cmp
xchg
push
stos
pop
cmpsb
pop
bound
add
addb
out
push
push
and
sub
mov
sub
out
or
push
jl
loop
incl
sbb
rolb
insl
or
dec
cmpsb
insl
bound
ja
mov
iret
inc
xor
dec
pop
test
cli
sub
mov
ret
daa
dec
scas
icebp
xchg
jmp
pop
out
xlat
lret
sbb
outsb
and
sti
adc
jns
shlb
sti
pop
add
shrl
mov
jo
test
sbb
dec
and
xchg
sub
mov
lret
add
aad
push
daa
cltd
xor
lahf
mov
jae
sbb
sbbb
mov
dec
std
mov
and
lcall
cmpb
sub
stos
insb
popf
int3
xor
mov
mov
adc
movb
dec
adc
int3
in
push
div
leave
fcompl
dec
cmpsb
pop
ss
test
sub
pop
cltd
pop
lret
xor
scas
cmpsl
push
sub
pop
imul
or
inc
jno
xor
jns
mov
stos
fisttpll
jge
test
jb
sbb
sbb
jb
pop
dec
outsb
inc
and
inc
jae
clc
cmp
repnz
rcrl
aaa
mov
sbb
stos
add
mov
mov
jmp
pushf
adc
call
in
inc
nop
std
sbbb
dec
cmp
add
or
jmp
mov
jbe
xor
dec
pop
shll
xor
lahf
cli
dec
or
jecxz
cmpsl
xchg
jecxz
xor
popf
jns
movsb
pop
pop
inc
jns
adc
test
mov
test
movsl
xchg
push
aam
or
sbb
loopne
sahf
aam
loope
mov
xchg
xor
sub
rcll
inc
jmp
and
or
nop
inc
loopne
in
sti
or
or
mov
xchg
shll
jne
add
aad
pop
xor
push
test
cmp
pop
dec
loopne
jbe
mov
arpl
mov
enter
ficoms
cmp
or
fists
mov
fs
cmp
mov
pushf
dec
std
adc
icebp
add
sub
call
mov
inc
cwtl
xchg
xchg
pop
dec
jl
addb
push
xor
int3
ret
popf
and
mov
loope
mov
push
cmpb
test
add
push
in
or
mov
lock
sub
fcoml
jle
cmp
and
in
adc
xor
enter
repz
out
fldl
jge
mov
push
cmp
loopne
push
mov
js
add
xchg
jle
mov
sbb
pushf
xchg
mov
xchg
jp
nop
call
jle
std
sbb
cmp
push
ds
lods
repz
jmp
fwait
jo
stos
inc
cmp
mov
in
or
xor
inc
in
inc
pop
and
cmp
dec
mov
subw
inc
lret
jae
mov
rolb
lods
sar
stos
pop
test
stc
xchg
inc
loopne
rol
gs
jl
cld
roll
push
dec
jnp
lret
and
mov
mov
and
push
hlt
mulb
data16
or
in
add
mov
mov
ret
xchg
rcrl
fcmovnu
test
cmp
je
sti
popa
sbb
sbb
cltd
repnz
jns
inc
std
bound
fisttps
pop
and
mov
ds
or
xor
and
push
pop
les
add
pop
xchg
test
adcl
icebp
xchg
xchg
call
xchg
in
xor
int3
ret
les
mov
cld
or
sti
xor
dec
inc
lods
and
data16
das
ljmp
shlb
test
lock
sub
jp
in
sar
mulb
or
loop
imul
push
dec
ficomps
out
xor
outsb
fildl
xor
pushf
pop
mov
xchg
adc
stos
cmp
and
cmp
out
mov
mov
mov
loop
dec
inc
cmp
stc
push
sbb
add
aam
cmp
xchg
out
cli
dec
dec
sbb
mov
jb
or
push
or
notl
mov
sbb
pusha
sti
arpl
pop
or
lods
add
loop
mov
inc
add
add
mov
fstps
stc
jg
insb
mov
and
imul
test
fdivrs
xchg
or
bound
cmp
jnp
mov
arpl
daa
xchg
inc
jnp
sahf
xchg
jbe
jno
inc
push
ds
stos
faddl
adc
cmp
mov
int
pop
test
cmp
addl
xchg
cmp
mov
pop
pop
jecxz
xchg
pop
rcr
and
add
push
jb
mov
mov
or
xor
punpckldq
or
shrb
inc
cld
rcrl
js
xorb
push
jnp
or
lahf
lret
sbb
xchg
xchg
adc
inc
mov
xchg
pop
jmp
sbb
ds
jp
mov
repnz
push
sbb
stos
out
and
xor
jo
add
lea
jb
fsubrs
cmp
push
mov
jg
cld
repz
hlt
adc
or
shrl
mov
ja
pop
pop
sub
mov
adc
xchg
mov
push
xlat
mov
filds
sbb
jp
push
and
repnz
push
inc
add
dec
insl
arpl
bound
jae
int3
arpl
enter
add
inc
lods
test
push
pop
mov
cmc
sbbl
es
jns
js
mov
loop
pop
push
add
inc
rol
rorl
retw
pusha
rol
daa
mov
jo
fsts
inc
roll
in
mov
aas
jle
cmp
fwait
xchg
cs
movsl
jns
push
mov
enter
inc
adc
and
enter
ljmp
pop
repz
jge
jo
popa
arpl
out
out
inc
mov
dec
movsl
cmp
nop
popf
push
rorb
sbb
jno
ret
je
jbe
pop
fnsave
mov
lods
xlat
add
jo
sbb
in
xchg
into
inc
std
test
push
fisttps
fiaddl
jge
nop
push
gs
addr16
scas
std
lock
mov
mov
lret
js
test
and
mov
or
jle
jb
jne
mov
out
push
imul
iret
mov
dec
or
nop
inc
mov
sbb
xchg
insl
xor
sbb
outsl
cld
das
fmull
nop
inc
aaa
rcr
rcrb
inc
pop
cmpsl
test
push
push
out
je
out
lcall
loopne
popf
lahf
jns
pusha
mov
jmp
pop
insl
out
adc
xchg
pop
mov
leave
mov
leave
in
in
inc
pop
ds
jmp
push
rorl
out
lcall
jecxz
push
xor
or
sub
xor
mov
mov
sbb
call
insb
movsb
cwtl
sub
dec
add
out
pop
or
fdivrs
mov
dec
test
dec
mov
scas
stc
push
or
in
ss
adcl
pop
mov
dec
fstp
sub
push
pop
jae
or
stos
int
inc
stc
aam
xchg
lret
push
sbb
inc
outsb
or
jns
xchg
adcb
dec
and
mov
add
rolb
fimull
outsl
test
pop
mov
push
xlat
mov
lods
and
pop
sbb
mov
out
fmulp
inc
pop
je
or
punpcklbw
aam
inc
rcl
sbb
cmp
insl
scas
fsubrs
mov
mov
dec
loopne
imul
lahf
push
sbbl
mov
mov
popf
add
dec
push
cmp
adc
inc
cmp
out
mov
jb
dec
mov
mov
std
adc
push
jp,pt
ss
in
mov
push
jno
mov
cld
xlat
mov
push
jo
lret
imull
add
cmp
add
adc
lret
inc
neg
fisubl
fsqrt
inc
andb
pushf
cmp
loopne
jmp
sahf
jmp
pop
jo
add
xchg
cmp
sbb
or
cmc
push
test
mov
inc
cld
mov
inc
in
out
jae
mov
faddl
leave
and
mov
sbb
rcrl
into
dec
mov
push
shlb
daa
adc
mov
push
aaa
xor
pop
les
cmp
jl
jno
push
adc
jae
or
add
xlat
dec
les
fiaddl
fcomps
fdivrp
pushw
inc
adc
into
jge
adc
roll
jae
xor
std
test
rcrl
pop
scas
das
test
push
inc
and
mov
stos
fiaddl
lods
mov
outsl
das
decb
mov
pop
add
test
add
cmp
je
xlat
inc
pop
test
int3
nop
jae
xlat
jmp
mov
push
jle
and
mov
fldz
hlt
fildll
and
das
mov
jo
mov
jb
lret
mov
mov
mov
outsl
mov
cmp
xchg
mov
adcl
inc
dec
lahf
sub
cli
sub
jae
jecxz
pop
mov
out
mov
ljmp
out
and
cmp
je
movsb
mov
ss
adc
ffreep
pop
push
pop
clc
push
aas
xor
sti
ds
lods
inc
inc
pop
inc
jle
in
in
bndldx
popa
test
clc
fsubrl
adc
mov
push
push
cwtl
insl
lret
cld
push
pop
out
sbb
imul
sbb
inc
loop
pop
pop
shr
cli
jmp
pop
lret
sahf
cmp
ja
mov
movsb
sbb
push
adc
xchg
sbb
sub
jbe
jne
push
in
loope
adc
mov
xchg
nop
daa
test
mulb
popa
adc
rcrb
les
popa
ds
loop
lret
lea
cli
test
les
cmp
aad
mov
sub
scas
inc
out
in
inc
xlat
rcll
mov
dec
mov
out
adc
enter
push
mov
sbb
mov
movsl
sub
scas
inc
or
insl
pop
adcb
xorb
sbb
addb
es
cltd
push
test
loop
xor
jmp
pop
test
stc
gs
cmp
mov
aas
or
mov
and
add
inc
dec
push
imul
xchg
aas
shll
addr16
mov
jle
aad
ja
icebp
or
sub
mov
inc
mov
lret
stc
mov
pop
cmpsb
adc
inc
mov
jge
pop
push
in
sbb
sub
mov
andb
test
outsl
mov
xchg
push
cli
xchg
cmc
mov
sub
add
movsb
sbb
inc
in
or
aad
push
inc
outsb
aam
je
jbe
in
and
nop
adc
sbb
lret
je
pop
scas
pop
push
rolb
scas
mov
cmpsl
pop
push
test
cwtl
test
and
ror
ret
and
and
in
in
cs
iret
xorb
xchg
fs
and
imulb
xchg
pop
xor
dec
jle
cmpsb
add
cmp
popf
mov
mov
mov
cmp
lods
rcrl
pop
stos
sub
dec
pop
aas
ja
cltd
aad
ja
aad
sbb
dec
lahf
cli
xor
cmp
addr16
cmp
jp
push
or
push
out
xchg
xchg
fisttpl
add
sbb
cmc
out
call
insl
and
imul
sub
imul
xlat
push
jle
xor
movsl
pushf
add
mov
inc
inc
lds
mov
sub
repz
xchg
sbb
xlat
mull
mov
lahf
or
lock
inc
pusha
scas
lods
mov
cwtl
clc
test
lcall
loopne
mov
out
scas
popa
leave
pusha
in
lea
aad
add
or
xchg
pop
mov
sub
outsl
push
fdiv
fst
daa
add
gs
repnz
push
insl
xor
cmp
adc
mov
cmp
push
aas
jg
xor
xchg
fcompl
or
shll
loope
fists
addr16
dec
mov
aaa
gs
pusha
fwait
xor
or
xor
ret
pusha
xor
mov
cmp
les
loope
cmpsb
sub
inc
in
cld
xchg
xchg
es
inc
mov
adcl
notb
test
xchg
test
lock
scas
xchg
ss
push
arpl
cmp
in
movsb
cmp
xchg
and
xchg
or
lcall
hlt
enter
jecxz
test
pop
push
cli
mov
loope
dec
xchg
stos
pmulhw
mov
les
sub
or
js
call
enter
xchg
mov
pop
pop
dec
xor
orl
xchg
inc
ss
jb
in
cld
cmp
fiadds
int3
sbb
test
adc
pushf
aam
js
cld
iret
out
dec
hlt
inc
inc
cmp
jp
xor
and
nop
movsb
hlt
sub
sbb
inc
movnti
insl
mov
popf
xor
pop
out
dec
mov
pop
mov
sub
add
inc
les
stos
push
inc
icebp
push
in
lret
scas
xchg
test
xor
pop
pop
fisttps
jb
xor
cmp
jb
pop
pop
pop
add
cmp
fnop
pushf
ljmp
pop
add
test
dec
sbb
rcrl
sbb
and
cmp
into
mov
loope
test
pop
jge
pusha
les
mov
xor
sahf
adc
pushf
aaa
adc
out
push
pop
gs
mov
ret
mov
add
out
scas
lock
movsl
test
or
dec
cmpsl
mov
and
mov
aad
sbb
mov
sahf
fs
sub
sar
lcall
mov
xchg
mov
into
out
cmovb
loopne
js
sbb
movsl
push
xchg
cmp
dec
sub
or
fs
jecxz
scas
lods
and
sub
sub
gs
push
sub
add
orl
out
lret
mov
inc
sti
aam
in
fdivp
sbb
addl
scas
jbe
loope
dec
lods
adc
shr
ret
lret
popf
pop
call
push
push
lahf
rorl
mov
pop
xchg
mov
pop
add
cmp
out
out
insl
cmc
add
fnsave
jns
xlat
test
sub
test
ret
mov
pop
or
sahf
jmp
sti
movsb
outsb
pop
mov
mov
enter
jbe
test
rcl
sarb
sbb
cmp
xchg
lcall
mov
or
cmp
shll
mov
mov
adc
or
cmp
test
stos
xchg
mov
imull
adc
mov
mov
xor
mov
outsl
jbe
lods
push
mov
sub
dec
cld
mov
shll
std
xorb
adcl
inc
test
imul
stc
cmp
loop
mov
test
xor
popf
sub
mov
imul
cmp
movq
pop
mov
xchg
cmp
ret
push
int3
mov
mov
dec
fs
outsb
lcall
cltd
sbb
clc
mov
adc
inc
repz
testl
pusha
push
lods
outsb
fucom
mov
das
ljmp
mov
jecxz
mov
mov
dec
pop
and
shlb
push
lcall
sub
mov
dec
shrl
rclb
pcmpgtd
mov
xor
cs
sbb
pop
out
aas
in
sbb
add
xor
fs
daa
popf
daa
jo
dec
xor
mov
add
push
lahf
ja
clc
mov
mov
and
sbb
outsl
jge
aaa
inc
mov
test
pop
inc
shl
or
movsb
ret
fldcw
ss
sub
cmc
cmovb
dec
push
add
xchg
dec
ret
fdivl
int
sub
imul
mov
mov
xchg
inc
xor
test
loopne
mov
inc
pop
push
inc
cmpb
les
cwtl
fwait
enter
add
adc
and
insl
popf
add
inc
out
fisubl
jecxz
jg
mov
dec
sub
sbb
pop
lcall
outsl
shll
adc
jno
mov
xor
pop
shll
mov
lods
es
jge
loop
test
mov
fcomip
in
push
sti
dec
xor
mov
daa
cltd
jnp
mov
pop
inc
int
movsl
jmp
mov
push
in
stos
arpl
insb
mov
aaa
aaa
xor
lcall
and
push
rclb
popa
sti
int3
cmp
mov
add
enter
insl
pop
cwtl
xchg
shll
inc
push
or
shr
out
push
fisttpll
pop
xchg
les
test
lds
hlt
roll
in
or
ljmp
add
add
test
and
jo
push
icebp
in
xchg
jno
das
pop
sbb
pop
cmc
pop
out
les
fcmovb
lret
in
inc
xchg
dec
jnp
insl
gs
jmp
inc
pop
movsb
xchg
orb
mov
adc
in
cld
inc
mov
pop
imul
popa
bnd
xchg
popf
cmc
push
adc
stc
repz
pop
add
and
cmp
popa
out
pop
das
xchg
sub
xchg
popa
mov
push
stc
ret
ss
ret
xor
cmpsb
jmp
mov
push
leave
push
sub
mov
jge
sub
cmp
jbe
pop
fs
divb
cli
and
jle
sub
fimull
pop
je
sbb
inc
push
movl
mov
cwtl
in
cmp
fbstp
mov
and
or
stos
sub
push
push
jnp
cmp
in
cmp
in
sbb
arpl
mov
out
push
pop
pushf
jb
or
and
jae
mov
mov
aas
xor
outsb
xchg
clc
fistpll
mov
cmpsb
or
fcomps
mov
fcmovnu
and
outsl
jmp
sarl
pop
mov
aad
cli
mov
jl
fwait
gs
cmpsl
push
xor
mov
test
sbb
sub
mov
xchg
in
pushf
mov
mov
bts
pop
mov
dec
push
cmc
ljmp
dec
jg
inc
aaa
jl
cmpsl
adc
into
in
or
jmp
pop
scas
pop
aaa
xchg
cmc
dec
pop
stc
mov
je
push
add
ret
aad
rcll
add
bound
sbb
test
out
stos
mov
in
dec
lahf
cmp
xor
stc
popf
jge
dec
shl
mov
mov
push
insl
push
mov
ret
pop
and
pop
fwait
arpl
sti
andl
and
inc
test
mov
mov
je
pop
in
pop
xor
pop
mov
jb
jge
test
test
aad
movsb
mov
mov
int3
clc
jbe
stc
call
ja
xchg
loope
jp
addl
cmpsl
jno
jmp
inc
or
adc
sbb
test
pop
mov
jle
dec
decl
push
and
or
lret
pop
das
cmp
dec
cmpsb
loop
lods
mov
sub
and
cmc
mov
and
mov
mov
or
dec
xor
ss
mov
xchg
sub
das
inc
xchg
mov
lret
loopne
and
out
cmpsb
fstpl
cmp
ljmp
fdivrs
mov
arpl
mov
das
mov
sbb
xchg
loop
or
inc
pop
imul
fs
pop
test
outsb
imul
jg
daa
pop
sahf
mov
call
gs
jg
jns
iret
lcall
test
imul
xor
test
push
inc
stos
xchg
in
pop
jle
sbbb
sub
inc
pusha
cmp
cmp
sbb
or
push
jb
sub
mov
inc
comiss
rclb
insb
pop
dec
incb
ljmp
ljmp
xchg
cwtl
mov
ret
dec
push
out
mov
addr16
pop
movsb
sbb
mov
jecxz
mov
jle
loop
xchg
je
pop
adc
or
mov
mov
rolb
xor
mov
movsl
es
sub
mov
mov
cmp
clc
ss
push
sbb
push
xlat
sub
dec
inc
jbe
pop
cs
test
sub
fisttpll
and
push
push
cmc
add
pop
ficoml
jecxz
xchg
ss
dec
jbe
cmpsb
shlb
jb
xchg
popf
aad
in
jo
add
pusha
sub
sbb
mov
js
mov
mov
cs
cmc
test
outsb
leave
ret
xchg
push
es
mov
add
pop
xchg
sub
lahf
fwait
sbb
sbb
pop
pop
mov
outsb
sar
popa
jbe
cmp
mov
push
shrb
jnp
and
aaa
cmp
cmc
jae
fs
fsub
inc
xchg
jecxz
insb
pop
jecxz
adc
in
hlt
xchg
into
mov
pop
or
imul
jns
xorb
xchg
xchg
js
xchg
mov
mov
adc
aas
in
rdtsc
xchg
dec
addb
inc
sbb
cli
ror
mov
dec
je
enter
loopne
mov
jmp
outsb
pushf
add
call
xchg
mov
ret
call
stos
cmpsb
cs
sahf
and
pop
mov
sbb
leave
pop
ja
lods
test
ret
mov
outsl
cmp
das
movsl
outsb
das
insl
add
sbbb
mov
dec
or
loopne
sub
xchg
mov
pop
subb
bound
out
pop
jae
mov
ja
ret
adc
mov
sbb
cltd
push
sbbl
mov
sahf
mov
cmp
dec
orb
les
adc
sub
add
xor
jl
mov
cs
test
add
mov
rcll
mov
sarb
inc
sbb
mov
das
cmp
sbb
fldl
adc
xchg
cltd
jl
adc
lock
sub
lods
je
je
jmp
mov
leave
in
cmc
fnstsw
movsb
in
xor
sbb
or
mov
ljmp
jg
adc
jp
sub
ja
cmp
mov
sbb
jae
or
lock
and
and
scas
cmpsl
jbe
testb
jne
sbb
lret
cmp
push
mov
mov
nop
adc
sbb
outsb
mov
sbb
push
test
xchg
fcmovnu
fldcw
mov
cmp
filds
mov
in
cmpb
lcall
cmp
xor
push
jmp
mov
push
aas
cmp
mov
lock
lock
push
test
in
outsb
mov
clc
jne
ds
arpl
ret
xor
xor
mov
in
lods
int
lahf
stc
out
dec
sarb
out
pop
cmc
or
out
fcom
fadd
push
stos
adc
pop
cld
mov
rol
hlt
in
add
out
push
sub
call
mov
sbb
sahf
jae
jle
lahf
pop
notl
sbb
mov
mov
dec
call
mov
mov
fisubl
mov
jb
ret
pushf
sbb
nop
jmp
sbb
scas
inc
jmp
in
mov
pop
adc
test
inc
sbb
addb
hlt
popa
data16
ret
or
or
xchg
das
fxch
xorl
jb
inc
mov
xor
scas
xchg
das
jo
push
jns
push
mov
lods
sub
mov
cltd
iret
mov
xor
cltd
dec
jns
adc
mov
int
jno
repnz
divb
inc
dec
cmpsl
mov
sti
fstl
stos
inc
xor
jns
shlb
mov
mov
lods
das
mov
adc
out
das
in
mov
pop
push
push
enter
mov
jo
int
cmp
jae
cmp
ret
jno
and
mov
mov
jnp
into
pushf
aaa
adc
and
xor
and
jnp
repnz
fadds
lock
jnp
ret
sbbl
push
lret
jge
mov
dec
cmp
stc
lock
cmp
xor
push
mov
test
fstpt
dec
mov
pop
mov
adc
das
rol
in
or
add
mov
jo
mov
xchg
movsb
pushf
mov
mov
fldcw
mov
insl
lods
faddl
pop
loope
pop
mov
bound
sti
jns
shrb
test
adc
fsts
jmp
dec
ljmp
mov
jp
lea
mov
sub
jge
and
mov
lret
shrl
push
mov
std
cs
mov
adcb
call
movsl
sbb
cmp
hlt
adc
mov
dec
pop
lret
fiaddl
ja
push
jge
pop
shr
inc
or
sub
and
cmpb
push
test
addr16
jae
icebp
cltd
sti
sti
das
ret
adc
cmpsl
repnz
mov
sub
xchg
jae
repnz
sub
cwtl
movsl
in
and
or
dec
cmp
lods
lock
adc
ret
pusha
cmp
out
pop
rclb
adc
lods
xor
mov
pop
imul
aaa
and
xor
outsb
sti
sub
fldcw
call
mov
mov
mov
pop
outsl
ja
sbb
shl
lea
xor
adc
imul
cmpsl
cmpsb
sar
rorb
ret
cwtl
sbb
cmp
icebp
jg
inc
mov
mov
and
test
push
fmull
into
push
imul
shr
repnz
icebp
lods
dec
mov
sbb
push
xor
mov
mov
push
mov
inc
mov
popf
inc
mov
add
pop
mov
or
jnp
call
out
scas
dec
mov
sub
leave
mov
add
cli
pusha
clc
loop
adc
cmp
sbb
xorl
and
jae
sbb
fcompl
in
mov
int
outsl
push
dec
jne
mov
fwait
int
int3
dec
xor
xchg
pusha
int
ficompl
imul
push
push
push
sbb
repz
mov
jns
mov
shll
jecxz
ficomps
mov
sbb
cmpsb
je
test
shrb
cmp
addr16
fs
fisubrs
adc
push
cli
dec
and
fildl
insl
mov
outsl
push
jmp
mov
sbb
enter
iret
mov
jb
push
mov
xchg
mov
adc
aam
idiv
test
inc
shll
pop
clc
movsb
add
and
aad
pop
adc
dec
jb
lcall
ss
xchg
shrb
fadd
cltd
daa
mov
scas
mov
dec
jmp
je
mov
and
outsl
pop
repz
jae
iret
inc
int3
andl
je
stos
stos
mov
inc
jns
xor
or
ds
addr16
sub
add
lock
lret
dec
pop
sbb
icebp
lea
divl
daa
fwait
cwtl
test
dec
lahf
and
adc
test
adc
aaa
cmc
cld
mov
arpl
imul
push
popa
xchg
arpl
movsl
sbbl
jmp
inc
jne
fimuls
shrb
xor
mov
cld
cmpl
xor
cld
dec
and
gs
stos
adc
mov
push
xchg
mov
push
dec
popa
fistps
lret
dec
or
lret
and
jbe
mov
or
xchg
mov
test
cmp
inc
stos
inc
adc
repnz
and
or
add
sarb
fisttps
sbb
push
dec
xor
fwait
push
cmp
add
imul
lods
and
scas
push
sub
sbb
push
xchg
mov
hlt
lret
fsubrs
cld
push
sub
and
sbbl
xchg
imul
jae
lods
jne
lret
jl
js
movsb
xor
mov
xor
add
xchg
push
iret
xor
fsts
std
shlb
outsb
push
scas
add
addr16
sub
clc
dec
clc
and
ss
movsb
ds
fbstp
fbstp
into
in
and
nop
sbbl
or
in
jno
es
daa
hlt
dec
cs
rclb
mul
pop
sbb
adc
push
addr16
mov
pop
cmp
xchg
mov
and
sahf
mov
pop
icebp
jnp
mov
push
xchg
aam
adcb
int3
fsubp
fwait
mov
stos
or
mov
sub
cmpsb
sarl
and
js
sub
inc
jp
sub
mov
movsb
aas
repz
cmp
cmp
ret
in
int
fbld
cwtl
xchg
jns
mov
movsl
push
pop
shlb
and
mull
adc
fisttpll
jl
ljmp
outsb
dec
insl
add
scas
mov
gs
pop
ds
cwtl
mov
mov
push
gs
pop
test
ss
pop
int3
test
push
mov
sti
aam
arpl
scas
jle
shlb
sbb
push
or
arpl
sbb
call
push
sti
push
or
add
out
jns
popf
push
xor
mov
test
xchg
xor
mov
repnz
lock
addb
xor
sub
mov
ret
and
xchg
xor
mov
mov
outsl
jp
mov
mov
ja
in
aas
sbb
sub
xchg
aas
lds
incb
fwait
push
jno
inc
mov
mov
dec
mov
pop
scas
cli
test
mov
mov
mov
mov
testl
cmpsb
mov
stc
mov
mov
cmp
cmp
stos
or
fwait
loop
pop
in
dec
aam
inc
add
sub
xchg
aaa
mov
pop
aam
xchg
jle
outsb
push
test
mov
testb
xor
pusha
loop
out
icebp
ficoml
fistpl
mov
or
mov
sbb
adc
jg
pop
adc
xchg
xchg
add
addr16
dec
adc
pop
cltd
ret
cmp
sub
or
and
shr
cmp
imul
push
adc
mov
push
pop
mov
cmp
push
jge
gs
shlb
lods
aas
mov
and
xchg
jb
mul
sub
scas
lods
into
fidivs
jnp
mov
lcall
cmpb
or
push
jge
push
cmpsb
out
sub
call
jnp
jne
pop
jl
mov
outsb
xchg
data16
mov
lds
inc
jp
adc
scas
orb
push
mov
outsb
xchg
sub
jbe
out
imul
lret
sbb
sbb
clc
sub
push
dec
xor
in
sbb
repz
movsl
and
sub
mov
jno
je
mov
jge
out
adc
fiaddl
mov
ds
mov
xor
arpl
bound
lcall
js
mov
xor
icebp
stos
mov
xchg
arpl
cmp
cld
mov
repnz
mov
mov
mov
lods
in
dec
out
inc
xor
imul
sbb
add
xor
les
mov
dec
jb
or
cmp
cwtl
lahf
jae
xchg
pop
jnp
sbb
cmc
fnstenv
mov
ss
orl
add
test
mov
les
xor
cmp
call
cmc
jno
dec
inc
pop
sbb
popa
dec
fists
pop
scas
fsubl
push
add
inc
push
cmp
je
sub
jecxz
cmovs
cmpsl
dec
int
icebp
iret
test
pop
movsl
lretw
mov
rorb
movsl
andl
insb
mov
aam
movsb
sbb
push
sub
insl
aam
aad
ror
shll
out
rol
sbb
and
add
jl
push
mov
pop
or
jbe
xchg
sub
xchg
orb
out
mov
xchg
mov
jl
int
inc
push
mov
mov
sbb
pop
and
mov
aaa
jmp
mov
or
jo
mov
dec
pop
es
cmp
xor
cmp
xchg
xor
push
push
sbb
pop
es
sub
jmp
stos
insl
imul
repnz
mov
mov
repnz
out
mov
test
pop
dec
push
add
lret
add
inc
dec
rcll
mov
lock
and
loop
cmp
lea
lods
mov
inc
xchg
mov
fidivrs
arpl
jb
inc
mov
cmpsb
and
mov
repz
jge
dec
cmp
lret
outsl
enter
pop
cmp
out
lods
mov
pop
inc
cld
stos
dec
outsb
adc
fwait
mov
cwtl
pop
add
lret
shll
ljmp
cmp
loope
stc
sub
rcll
pop
mov
roll
and
mov
add
adc
cmpsl
je
lock
jmp
adc
out
fwait
lods
xorb
sub
pop
out
mov
add
out
jmp
add
adc
ds
pop
cs
jb
mov
sub
cli
fwait
adc
fidivs
loop
fwait
sub
dec
pushf
sbb
push
adc
aam
notl
cmp
xchg
test
imul
popa
or
add
inc
fstpt
push
sub
aas
cld
dec
and
sbb
es
cmpsl
aad
push
rclb
xchg
pop
jne
push
jecxz
ret
aad
xchg
pushl
iret
lret
imul
pop
stos
enter
icebp
push
cmpl
stos
cmp
pop
rcll
sbb
iret
das
mov
push
sbb
xchg
gs
or
test
pop
xor
bound
mov
xor
jo
dec
mov
int
ret
fmuls
jp
arpl
mov
jns
push
jmp
or
out
xchg
inc
xchg
inc
outsl
sub
ja
ret
adc
inc
in
add
xor
pop
popf
cmpsl
gs
xchg
adc
push
jae
mov
testl
pop
mov
scas
sbb
out
pop
xor
mov
std
inc
inc
mov
mov
sti
shr
jmp
inc
lahf
stc
pop
and
sub
das
in
push
push
ficoml
pop
or
pop
adc
mov
es
pop
jecxz
or
xchg
cmp
sub
pusha
shlb
cmp
dec
stos
fdivrs
push
loope
jecxz
xchg
push
ficoms
nop
mov
out
xchg
getsec
subl
lahf
cs
adc
mov
dec
jge
xchg
push
std
add
fdivrl
push
add
push
dec
jp
xchg
fisttps
pop
js
ljmp
pop
mov
dec
out
in
adc
sbb
push
jge
rorl
sahf
negb
cld
aad
pop
shll
sar
je
ret
mov
adc
mov
shrl
jo
les
xchg
dec
add
inc
jo
arpl
inc
rcl
lods
mov
mov
and
or
hlt
lahf
adc
mov
pop
push
les
xchg
data16
xor
sbb
mov
out
xchg
adc
mov
mov
dec
cmp
mov
jmp
insl
adcl
pop
fmuls
insl
sub
dec
gs
pop
dec
mov
inc
dec
decl
xchg
les
push
mov
loop
sub
stos
jae
jge
cltd
jno
sbb
negb
xlat
push
sarl
mov
lcall
stos
dec
imul
jmp
xchg
mov
hlt
in
ror
xor
sub
in
jmp
push
jne
or
out
xchg
test
jnp
aaa
xor
lret
in
mov
fldcw
lret
mov
push
out
push
dec
aas
in
pusha
ja
jno
stos
stos
inc
popa
jo
and
adc
push
xchg
leave
cli
sub
outsl
sub
sub
cmpsl
in
add
pusha
fs
inc
jp
inc
xchg
insb
cmpsb
push
cmp
mov
push
xor
mov
xchg
not
and
mov
add
inc
js
lret
les
and
push
pusha
pop
ja
aaa
sbb
in
xor
sbb
cmp
cli
popa
push
mov
pop
imul
push
enter
push
xor
mov
icebp
in
mov
popf
push
jecxz
stos
sarb
roll
in
add
or
je
pushf
mov
pop
clc
out
popa
inc
or
iret
arpl
jnp
sub
jp
mov
dec
jmp
pop
rorl
mov
jecxz
xchg
adc
jmp
push
pop
pop
imul
and
and
fdivrs
lret
lcall
adcl
cmp
mov
adc
lds
fmull
fwait
mov
xor
push
xorb
cmpl
mov
xor
shll
xor
jmp
leave
idivb
and
cmp
xchg
mov
test
ret
aaa
iret
sarb
movsb
lods
and
pusha
pop
shl
and
xchg
aad
scas
in
jl
leave
sub
mov
call
xor
in
adc
pop
mov
bound
jle
jbe
or
add
jp
ret
jmp
cmc
adc
ffreep
loope
fs
loop
mov
loopne
jecxz
cli
std
adc
repz
int3
les
mov
movsl
int
jg
jecxz
aaa
push
and
int
adc
dec
push
test
mov
sub
pop
daa
sti
push
add
jno
cmp
xchg
xchg
addr16
add
loope
mov
mov
inc
jns
inc
insb
push
sub
into
sbb
stc
inc
iret
push
pop
repnz
sbb
rolb
jne
pop
ds
xor
jae
or
mov
xchg
test
pop
pop
out
mov
xchg
inc
cmpsl
lcall
mov
dec
sub
inc
shlb
inc
rcrb
fldt
enter
mov
cld
fisttps
and
testl
nop
iret
mov
xlat
dec
shl
outsb
xchg
mov
pop
rcrb
xchg
jns
add
jo
insb
xor
fists
jmp
inc
mov
lret
sti
inc
fwait
mov
int3
addr16
mov
push
loopne
lea
fs
push
push
adc
add
mov
xor
cld
cs
aad
aam
fidivs
jne
ret
stc
or
adcb
popa
pop
cmc
call
xor
js
cmpsl
cmp
mov
dec
and
data16
sbb
xchg
popa
push
jg
dec
shll
repz
gs
iret
loopne
and
add
pop
in
cmp
and
ja
loopne
push
pop
popa
in
push
int
adc
movsl
mov
dec
pushf
shrl
mov
push
cmp
xor
mov
dec
fbld
push
sub
nop
push
cmp
sub
mov
pop
cmp
fucomi
mov
lods
adc
fstps
xchg
inc
fsubp
xchg
adc
cmp
rcrb
popa
insb
or
jo
mov
pusha
call
fisubl
subb
jp
iret
jmp
sbbl
sbb
ror
dec
cltd
xor
adc
xchg
inc
movsl
mov
ljmp
mov
notl
push
cmp
mov
mov
out
sub
dec
xchg
jbe
push
ds
lea
stos
mov
xor
sbb
sub
imul
sbb
jo
std
mov
mov
add
cmc
jp
lahf
or
ror
adc
mov
xchg
ja
jg
insl
mov
pop
lahf
xchg
mov
cwtl
jmp
and
inc
mov
push
xorb
je
jnp
xchg
sbb
aas
jne
pop
push
iret
mov
xchg
test
loop
orb
add
xchg
test
js
pop
or
lahf
mov
fisttps
scas
or
sub
ja
mov
inc
xorl
stos
inc
jbe
iret
cwtl
stos
push
outsb
pop
jae
aas
mov
and
mov
insb
ror
pop
xchg
adc
mov
cltd
out
jecxz
mov
add
xchg
lods
dec
sub
mov
xchg
sahf
jg
test
or
dec
or
sbb
xchg
mov
aas
push
pop
sbb
push
adc
in
xorb
shll
sub
bound
xchg
or
inc
movsl
mov
sbb
aas
lock
push
push
cs
pop
xor
lock
movb
or
mov
or
mov
or
in
les
and
cmp
sbb
stos
mov
lods
testb
sub
leave
in
outsl
mov
rcl
dec
lret
in
mov
adc
jmp
enter
sub
ja
sub
cmpsb
jp
fwait
test
xchg
jo
and
push
gs
test
sahf
cmp
dec
jb
sbb
mov
mov
dec
loop
push
and
ds
in
pop
outsl
mov
scas
std
xchg
fdivl
out
mov
rcrb
or
jmp
sbb
mov
jl
in
jne
push
out
in
fwait
pop
divb
xlat
or
adc
les
sbb
pop
jo
sbbl
dec
lods
leave
fcmovu
cmpsb
pop
gs
dec
outsl
mov
pop
jo
push
jb
mov
inc
push
ret
daa
insl
adc
cmp
nop
mov
dec
cmovs
jbe
gs
lods
dec
jno
jns
or
lcall
add
sub
in
mov
jno
xor
scas
inc
int3
test
ljmp
clc
cwtl
xor
pusha
lea
jp
in
in
cmpsl
push
sub
loope
aaa
jnp
add
add
add
shll
adc
cmp
xchg
test
dec
es
xor
popa
or
push
add
pop
fstps
add
jge
adc
popf
sub
frstor
jmp
pusha
and
dec
notl
into
scas
icebp
mov
mov
sbb
push
mov
inc
jno
pop
xchg
int3
dec
out
les
bswap
sub
xor
cmp
push
add
fwait
jmp
adc
inc
ret
xchg
testb
sbb
fildll
out
xchg
adc
pop
in
sbb
idiv
or
or
jne
insb
mov
stos
mov
xor
insl
xchg
hlt
xor
stos
bound
add
jne
push
vhaddpd
push
inc
xchg
push
scas
jbe
jle
shrl
and
push
cmp
test
mov
loope
jmp
jo
sbb
hlt
cmp
pusha
mov
repnz
jns
pushw
ret
jns
rorl
xlat
jnp
dec
test
pushf
sar
mov
pusha
add
mov
adcb
pop
cmp
mov
or
pop
loop
mov
addr16
es
xor
rolb
daa
call
outsl
rolb
pushf
sti
jne
ljmp
mov
xchg
das
insl
mov
ljmp
inc
aas
loope
addr16
jno
inc
insl
lock
repz
push
and
fs
stos
mov
fmul
sti
aam
mov
xchg
jle
out
aad
lock
add
sbb
in
adc
add
and
int3
ret
mov
outsl
cmp
fldl
mov
sub
sarl
cmp
dec
sub
aaa
add
std
inc
add
adc
stos
cmp
push
call
inc
pop
dec
repnz
cld
push
enter
lahf
sub
addl
sub
and
aam
mov
sbb
cmp
lds
movsb
popa
mov
cmpsl
bnd
or
dec
rorb
xchg
jae
mov
div
shlb
je
and
lea
pop
loope
aas
gs
mov
roll
daa
loopne
cltd
xchg
popf
loope
into
movsb
lea
sti
subb
and
clc
push
sti
scas
cmp
lods
push
pop
xor
lods
std
out
xchg
adc
fdivrs
loope
in
cmp
mov
je
push
xchg
shrb
loopne
arpl
insb
repz
mov
cmp
mov
xor
push
pop
lcall
mov
fisttps
test
cli
push
sbb
jb
adc
sbb
push
fldt
xor
clc
jmp
cmpsl
cmp
jp
and
gs
dec
add
hlt
call
mov
sub
lret
add
mov
xchg
mov
fdivr
jbe
push
pop
push
sahf
sub
sti
xor
aas
inc
mov
sbbb
mov
ficomps
cmpsl
sub
or
roll
sbb
mov
jmp
fs
iret
xchg
xchg
cmpsb
enter
faddl
jbe
mov
pop
sub
pop
out
dec
call
push
aas
loopne
mov
outsb
leave
mov
fldt
icebp
pop
loop
sub
out
add
adc
popf
inc
push
lock
mul
mov
fs
outsb
xchg
jnp
mov
xchg
mov
cmc
push
int
in
add
neg
xor
xchg
addb
or
and
xor
mov
xchg
mov
or
lods
cwtl
pop
pop
pop
testl
dec
test
in
pop
sub
pop
mov
mov
sti
jno
loopne
xchg
rolb
out
mov
cld
fs
sbbb
out
push
jno
fiadds
shll
add
shlb
jecxz
loopne
or
pop
xchg
enter
push
ret
in
mov
xchg
dec
or
jns
roll
les
xor
cmp
std
mov
jb
in
mov
mov
nop
cltd
xchg
mov
leave
jb
in
aaa
cmp
xabort
dec
inc
lret
loope
mov
stos
gs
add
xchg
scas
in
xchg
aaa
out
outsb
mov
neg
cwtl
mov
sahf
scas
xchg
sti
movsl
negl
aaa
dec
inc
iret
lcall
xchg
adc
and
scas
sbb
popf
mov
out
icebp
ljmp
pop
jl
je
loop
imul
gs
sbb
pop
jge
mov
enter
lds
cs
xchg
fidivs
mov
mov
mov
adc
and
ja
sbb
sar
xor
filds
in
jle
jge
inc
ja
xchg
and
xchg
and
push
jns
mov
pushf
ljmp
das
ja
sbb
or
xchg
cs
repnz
cmc
icebp
xchg
mov
sub
cmp
or
cltd
hlt
xor
adc
lock
mov
ror
jne
xorl
lock
cmp
xchg
add
scas
sbb
xor
adcl
cmpsb
lcall
pop
jns
fcoms
leave
inc
cmp
push
insb
adc
movsb
in
shrb
out
push
inc
pop
ss
ret
push
lea
fldl
xchg
stos
popf
inc
push
dec
push
dec
xorb
imul
jo
movsb
pop
mov
adc
outsl
sub
xlat
xchg
mov
shlb
incb
leave
arpl
push
push
pop
js
jmp
push
std
dec
jns
loopne
push
cli
mov
add
mov
cltd
jae
sub
mov
jns
mov
push
icebp
jbe,pt
sub
pusha
hlt
mov
cmp
jae
push
cmpl
mov
mov
fists
repnz
push
dec
push
push
xchg
mov
addr16
jnp
push
inc
pop
iret
inc
pop
negl
cmpsb
mov
and
add
pop
fistps
mov
and
movups
add
cli
cli
add
pop
js
mov
clc
and
loopne
inc
imul
jb
in
pusha
adc
loop
hlt
mov
xchg
les
sahf
push
cltd
pop
mov
cwtl
cmp
sbb
sbb
pop
iret
arpl
pop
adc
ds
mov
clc
inc
std
lea
adc
cld
sarb
out
outsl
gs
stos
dec
rcrb
inc
jnp
cvtps2pi
jns
mov
sbb
das
mov
stos
mov
out
es
sub
ljmp
jg
jmp
das
insl
arpl
je
lret
push
dec
mov
jge
aam
fcmovne
jo
inc
push
sub
or
jo
int3
xor
sbb
clc
add
dec
ja
popf
sti
les
dec
mov
lds
loop
movsb
popa
xchg
mov
inc
sbb
xchg
pop
sbb
pop
insb
adc
mov
cmp
fsubl
notb
cmp
aad
ljmp
repz
xor
sbb
mov
push
lds
sahf
jg
pop
mov
jns
std
pop
repz
cmc
aaa
pushf
sahf
sub
and
roll
lock
pop
add
sub
add
push
stc
mov
sbb
insl
andl
dec
jns
out
repz
sti
push
in
and
lods
popf
sbbl
andl
adc
cld
stos
mov
mov
xchg
jl
jbe
adc
xlat
cli
inc
sbb
adc
mov
push
lock
pop
add
clc
mov
cmp
mov
std
sti
repz
add
pop
fsubr
cmpsb
roll
xlat
push
push
les
xchg
jl
mov
push
adc
cli
or
sbb
mov
pop
aam
sub
fadd
mov
add
mov
stos
push
int3
xchg
or
mov
shl
popf
push
jnp
subb
cli
mov
cmc
inc
cmp
sbb
leave
dec
mov
jo
popf
je
data16
es
push
pop
js
xor
scas
inc
in
xor
fnstcw
sub
mov
aaa
sbb
in
lds
pop
loope
add
test
sbb
pop
mov
out
dec
jmp
push
aam
jmp
call
inc
out
in
cmp
inc
and
push
out
pop
adc
int
test
inc
arpl
in
mov
and
out
adc
scas
lret
aad
repz
push
js
ret
inc
in
sbb
mov
int
out
cmp
sub
popf
in
scas
ja
fnstenv
popf
inc
jne
mov
and
cmp
xchg
in
cltd
jbe
xchg
inc
outsl
daa
orb
push
mov
mov
pop
insb
or
incb
insb
xor
outsl
arpl
mull
movsb
jbe
jp
fcompl
mov
fcmovu
stos
sbb
mov
test
xorl
mov
jbe
iret
adc
jo
and
jno
push
mov
inc
or
adc
jnp
adc
mov
call
movsl
pop
lahf
scas
push
sbb
xor
loope
ret
cltd
add
out
mov
push
mov
lahf
lret
dec
adc
push
subb
dec
pinsrw
in
int
push
push
jnp
and
lahf
sub
add
imul
clc
xchg
xchg
adc
and
jle
push
push
arpl
pop
and
mov
stos
out
mov
push
movsb
loopne
jecxz
pop
sbb
lcall
cmc
inc
ja
lahf
stos
cmc
test
cmp
sahf
cmp
mov
cmp
sbb
sbb
pushf
xor
jle
jno
add
pop
sub
test
cmp
out
icebp
cs
cmpsl
sbb
sub
and
sti
mov
loopne
push
mov
sub
push
fnstcw
mov
aas
xor
rcr
cld
xchg
in
xchg
js
paddb
stos
push
mov
xor
or
lds
into
xchg
inc
fstpl
add
lcall
stos
adcb
imull
gs
inc
sub
adc
or
int
or
mov
cmp
dec
inc
test
mov
ds
jle
and
inc
je
repz
sub
lock
fs
ret
in
add
pop
xchg
adc
sub
pop
pop
mov
push
and
fstps
push
adc
push
dec
cli
push
out
adc
jecxz
test
sub
xor
mov
daa
xchg
faddl
aam
inc
adc
pop
fimuls
sahf
js
ficomps
in
shll
imul
push
addb
mov
cmc
test
xchg
daa
repnz
jl
inc
xchg
pop
inc
mov
jge
testb
nop
jnp
jbe
cmpsl
mov
and
xchg
fisubrl
xchg
or
dec
jb
sar
into
orb
frstor
hlt
aad
jbe
rcll
lret
adc
push
and
cmp
cmp
testl
stc
dec
or
daa
icebp
jo
cmp
add
fimuls
jae
adc
dec
lods
orl
pop
inc
jo
lahf
xor
jmp
sub
out
push
fdivrl
jnp
lahf
inc
mov
inc
lret
or
jnp
fisubrl
clc
andl
sub
pop
sub
out
cmp
push
dec
mov
int3
mov
leave
mov
aaa
mov
mov
cmp
mov
lret
mov
sub
adc
lea
int
and
iret
cmp
dec
or
dec
xor
push
or
jl
push
stos
enter
fnstcw
inc
or
sbb
jbe
fidivrs
push
fdivl
push
and
xchg
add
xlat
adc
sbb
xchg
scas
test
mov
pushfw
xchg
and
notb
and
and
push
sub
push
jg
pop
dec
jbe
sbb
mov
push
jle
je
sbb
dec
adc
or
jae
imul
dec
pushf
adc
sbb
lds
into
scas
ljmp
or
fwait
stos
xchg
jl
push
push
aam
aas
inc
dec
and
scas
shr
cmpsb
ja
mov
inc
push
lret
mov
loope
js
cwtl
xor
and
fcomps
cmpsb
push
push
mov
mov
dec
data16
adc
push
mov
ret
or
pushf
xchg
gs
pusha
pop
pop
mov
pop
cmp
jecxz
and
mov
cmp
rcr
pop
dec
inc
out
inc
jmp
or
fidivrs
adc
dec
sti
mov
and
ss
sti
sbb
adc
dec
cmpb
clc
leave
jns
lods
ljmp
xor
pop
out
sbbl
dec
pop
pop
pop
js
shlb
out
xchg
dec
or
and
data16
pop
sbb
mov
inc
xor
mov
or
rol
inc
sahf
xchg
or
subb
sub
pop
push
push
sbb
popf
movsb
mov
inc
or
aam
test
xchg
jne
mov
ljmp
stos
dec
pop
fidivrl
stos
and
or
jp
adc
jns
xchg
push
cmpl
cmp
stos
sub
iret
aas
rorb
insl
mov
sarb
pushf
jge
test
int3
mov
daa
cltd
pop
xchg
lcall
enter
xchg
pop
mov
clc
je
pop
pop
xchg
add
push
stos
clc
test
into
and
ds
outsb
outsw
or
xorb
and
cmp
adc
icebp
xchg
loop
addl
aaa
adc
mov
cmp
lock
push
jmp
mov
mov
into
push
fsubrs
fnstenv
fcompl
cmp
lret
test
cli
cs
subb
repnz
leave
or
lret
mov
cmp
mov
imul
dec
test
push
data16
sbb
xor
mov
dec
mov
mov
sub
mulb
mov
and
mov
cmpsl
in
sub
dec
in
or
cmp
push
inc
into
push
adc
add
jge
rcll
jmp
jp
arpl
adc
push
mov
mov
loop
inc
cli
add
dec
pop
cmp
hlt
jo
push
les
push
hlt
dec
pop
lods
in
in
jecxz
out
pop
not
mov
mov
stos
sti
pusha
aaa
cltd
and
or
adc
fcompl
insb
mov
sahf
aad
adc
dec
and
mov
sti
je
dec
sub
push
xchg
sbb
fiaddl
jb
mov
mov
mov
ss
daa
loop
sub
in
adc
movl
outsl
mov
repz
fs
xchg
mov
stos
sbb
outsb
lods
push
dec
aad
out
adc
insb
sub
mov
or
cld
call
mov
rorb
popa
std
nop
push
xchg
loope
stos
out
scas
lahf
aas
cmp
mov
and
or
mov
in
jmp
adc
lret
xlat
xor
out
sbb
push
cmp
jno
xor
lods
inc
into
mov
test
andb
icebp
pop
ret
xchg
cmc
scas
lea
test
cwtl
and
adc
sbb
sbb
mov
test
stc
sub
test
lahf
testb
outsl
stos
iret
cmp
xlat
ja
sbb
fldcw
rclb
cmpsl
sti
insl
jne
mov
push
cmpsb
adc
inc
mov
leave
lret
cld
xor
jae
out
xlat
cwtl
lret
sti
xchg
push
cmp
sub
push
lret
push
pop
das
lods
jne
out
mov
mov
dec
ret
pop
clc
push
add
sbb
sti
or
add
scas
pop
jnp
or
adc
nop
out
std
cs
xor
mov
mov
hlt
movsl
cmpsb
sub
insb
ret
test
insb
dec
out
inc
cmp
cmpsl
in
daa
insl
sub
out
and
lea
lea
outsb
fs
jo
mov
pop
sbb
xchg
inc
in
adc
ss
shll
test
mull
inc
dec
mov
cmp
mov
push
dec
sub
sahf
lcall
movsb
jae
movsl
sub
add
out
ret
arpl
mov
or
dec
popa
cmpl
jae
sub
ret
sti
pop
test
fdivrl
cli
mov
into
lds
lahf
fstpt
mov
xchg
inc
jbe
mov
cmp
mov
aam
mov
pop
lret
xlat
rorl
arpl
jne
push
out
mov
cmp
rcrb
jb
sbb
inc
sahf
xchg
or
cmp
fmull
gs
ds
inc
jb
jmp
shlb
repnz
hlt
dec
mov
jmp
push
movsb
out
push
xchg
jne
mov
mov
ret
js
in
movsb
outsl
ret
repz
and
fsubr
push
loope
nop
xchg
adc
inc
sub
inc
je
xor
ljmp
repnz
int3
loope
fidivl
xor
xlat
mov
jl
or
sbb
out
decl
pop
fsub
mov
and
jo
loopne
imul
movsb
mov
cwtl
mov
mov
and
fwait
xor
and
daa
imul
out
pop
aad
push
or
or
or
sub
inc
sbb
je
jecxz
dec
xchg
xchg
mov
lcall
mov
in
push
aaa
popa
adc
xchg
cmp
outsl
pushf
stos
inc
jbe
imul
pop
subl
in
cs
pusha
mov
add
mov
ficoms
push
cmp
pop
loop
daa
jae
testl
inc
mov
out
in
sbb
shrb
adc
xor
outsb
mulb
loope
adc
cmpsl
hlt
fistl
shrb
push
inc
pop
sbb
bound
out
dec
sbb
pop
inc
jnp
lcall
mov
adc
int
sub
ds
sbb
fwait
sahf
clc
cld
adc
pusha
mov
lds
mov
out
shrl
stc
lds
mov
jo
repz
cmp
aad
out
addr16
out
test
mov
jle
add
fadds
iret
adc
test
jg
lea
jae
scas
das
in
or
add
mov
adc
mov
stos
insb
push
aam
cltd
adc
jg
cmp
cmp
inc
xchg
rcl
push
mov
ljmp
sahf
dec
add
jge
and
outsl
ret
pop
cmp
mov
hlt
rcr
sar
push
jle
loope
cwtl
les
pop
xor
ljmp
or
and
bound
push
ss
xor
sub
mov
jecxz
divl
negb
push
popf
testl
mov
and
or
cwtl
cmp
adc
mov
stos
aaa
sub
daa
mov
icebp
lock
fstpt
xchg
ret
xchg
jg
js
cmp
ljmp
idiv
adcl
rol
nop
mov
or
sbb
ror
push
fisubs
negb
adc
clc
cmp
cmp
out
aas
orb
mov
sub
icebp
out
in
aas
mov
sbb
adc
in
mov
shr
push
rclb
faddl
mov
sub
or
add
adc
in
mov
setno
cmpsl
aas
xchg
sub
inc
jmp
and
inc
jmp
or
lahf
mov
ss
stos
std
neg
cmp
cmpsb
daa
dec
mov
mov
xchg
adc
add
mov
add
movsb
lret
inc
push
add
cwtl
push
out
add
arpl
outsl
inc
xchg
cwtl
dec
fadds
jmp
aam
imul
mov
inc
adc
pop
adc
cwtl
lcall
cltd
and
rcl
jge
xor
jae
ret
xchg
mov
inc
rcrb
dec
dec
sub
imul
jne
movsb
or
and
inc
sbb
out
cld
dec
jg
dec
jmp
mov
call
out
outsl
mov
decl
imul
jecxz
xor
test
movsb
std
pop
push
inc
in
aaa
pop
lret
mov
jmp
jae
dec
ja
sub
inc
mov
adc
cli
inc
and
mov
mov
in
filds
cld
mov
in
mov
cmc
insb
out
pop
cmp
fisubrs
inc
inc
and
movsb
sbb
mov
sbb
mov
test
jb
xchg
test
clc
cli
fsincos
mov
stos
or
lods
sub
and
rcrb
lods
data16
cwtl
xchg
dec
and
or
jbe
fildl
cli
add
cltd
test
mov
dec
jp
sub
push
mov
ret
clc
ljmp
in
xchg
test
test
insb
stos
push
sbb
scas
or
stos
mov
inc
fdivl
cmp
push
or
imul
push
lret
and
push
mov
push
sbb
test
stos
fdivrl
adc
rol
sub
mov
fdivrs
jae
sbb
rcrl
lahf
fimuls
es
mov
in
pop
or
push
mov
mov
insb
xor
inc
test
xor
xor
out
cltd
fdivp
fs
sub
add
cs
cmp
mov
jne
mov
cmp
stos
adc
stc
jecxz
xchg
lods
xchg
sar
lcall
cmp
pop
mov
sbb
xor
cmp
mul
pushf
cmpb
and
in
lock
fidivrl
lods
or
movsb
and
mov
fwait
and
or
xchg
cmp
cmp
jmp
mov
xchg
adc
add
xchg
mov
aad
xchg
push
cmpsb
fidivrs
pop
int3
mov
or
pop
sub
test
sub
xlat
cltd
mov
test
jbe
cs
or
sbb
imul
add
cmp
loopne
out
nop
lods
push
dec
es
sub
and
out
push
jle
sarb
test
loope
sbb
scas
sub
push
mov
pop
lcall
js
mulb
xchg
bound
imul
cmp
test
lock
shrl
lret
sbb
lods
and
inc
fidivrs
push
popa
lea
movsl
cmp
inc
cmp
jae
adc
or
add
in
adcb
xchg
dec
push
notb
lods
sbb
out
or
mov
int
dec
inc
movsl
repnz
push
fsubrl
dec
mov
clc
out
in
in
sarb
xchg
cld
adc
dec
stos
stc
push
cmpsb
adc
mov
lods
pop
lods
mov
repnz
shll
sub
rcrb
je
daa
testb
xacquire
dec
jbe
int
insb
cmp
leave
bound
sub
insb
dec
mov
sbb
adc
call
inc
mov
add
sbb
sub
dec
xor
scas
inc
dec
lods
outsb
shlb
subb
xchg
std
push
mov
push
insl
cmp
lret
vpmadcsswd
jnp
mov
and
add
inc
add
dec
addl
jl
rcrb
add
dec
mov
rclb
test
lods
loopne,pt
shll
lea
mov
jno
test
test
inc
and
mov
out
sbb
inc
or
scas
test
in
inc
in
push
adc
sub
xor
cld
mov
pop
daa
das
add
fildll
vmovhps
sub
das
sub
xchg
jp,pn
fs
mov
es
xchg
jp
ds
mov
push
xchg
push
and
mov
pop
adc
clc
popa
in
cmc
inc
dec
mov
fldcw
in
mov
and
int3
in
sar
mov
cli
xchg
jns
and
lret
sub
lock
test
scas
add
loopne
ss
xchg
xlat
notl
rcl
iret
pop
fisttpl
xor
cmpsl
shll
adc
mov
sti
xor
cli
push
push
je
mov
stos
adc
cmp
pop
push
repnz
dec
iret
push
mov
in
sbb
in
push
movsl
jns
mov
xchg
je
push
loopne
mov
cmc
jecxz
repz
adc
mov
aaa
push
add
dec
iret
ret
mov
push
and
pop
outsb
sub
scas
fldenv
hlt
in
fldl
leave
sub
fbld
clc
or
xor
mov
loope
mov
arpl
lock
or
pop
xor
dec
fsubrs
cmp
aad
sti
or
pop
mov
iret
fadds
aaa
ret
and
dec
jo
jmp
cld
rcll
add
stc
push
inc
xlat
mov
fdivrl
push
dec
push
sub
nop
dec
inc
in
out
outsb
jns
int
pop
rcrb
mov
stc
cmp
movsl
das
mov
cwtl
inc
into
int3
dec
addl
fcoml
lds
sub
das
mov
mov
xchg
inc
pusha
mov
inc
in
sub
jge
loopne
xchg
bound
mov
xchg
mov
pop
mov
xchg
cmp
aaa
and
mov
mov
ljmp
pop
repnz
mov
sub
lock
and
xchg
inc
jns
ret
int
or
pusha
dec
pop
cltd
cmp
lcall
mov
repz
lcall
add
dec
std
pop
leave
cmp
push
cmp
cmpsl
add
xor
and
mov
imul
push
mov
mov
add
push
fisttpll
scas
cs
fdivr
and
rcrb
mov
std
push
inc
iret
sti
pusha
or
pop
shll
mov
jne
addr16
int3
les
jno
sarl
cwtl
jb
push
push
add
xor
cmp
stc
aad
jns
js
jo
xlat
stos
in
xor
jbe
loopne
iret
or
test
xlat
push
pop
pushf
adc
dec
jmp
daa
daa
mov
mov
ds
stos
fisubrl
in
pop
lea
lock
outsl
test
cmp
pop
xor
aas
inc
fdivrp
ds
lea
jle
jo
std
push
add
aad
ja
jmp
js
dec
adc
cwtl
sbb
daa
pop
jns
rcll
xor
mov
push
sbb
pop
sub
mov
aad
scas
dec
shlb
orb
push
pop
movsl
xor
xor
pop
adc
enter
cmpsb
cmp
xchg
ret
or
sub
pop
mov
cmp
in
in
and
jbe
out
je
push
sub
mov
stos
inc
ret
std
popf
int
cmp
mov
mov
scas
sub
imul
cmp
inc
mov
popl
ss
pusha
out
xchg
js
sahf
int
cmp
and
xchg
jns
or
out
sub
jo
nop
int
stos
mov
mov
inc
xchg
enter
call
out
aam
jmp
into
pop
or
adc
push
or
es
mov
js
int3
sbb
ss
stos
je
add
pusha
mov
je
ljmp
add
cmc
es
dec
xchg
aam
jecxz
fdivl
js
adc
inc
xchg
xchg
in
jecxz
fs
shlb
loop
data16
fs
adc
repz
daa
jns
orl
sbb
dec
xchg
ss
and
iret
fs
xchg
mov
test
rcrl
xchg
mov
cli
das
add
dec
bound
jl
or
xor
cmp
mov
lret
push
dec
pusha
push
fistpl
jecxz
dec
mov
out
movsl
outsl
in
int3
popa
dec
add
and
sbb
sub
cmpb
lahf
add
rolb
adc
xor
scas
fidivrl
lahf
mov
fwait
cmpsb
cld
shl
and
add
adc
and
bound
lcall
jmp
dec
push
lock
push
imul
add
cmp
push
sub
mov
stos
sub
orl
dec
adc
jne
push
imul
scas
movsl
outsb
add
pop
cmp
or
cmp
rclb
outsb
pop
scas
adc
cmp
mov
sbb
jg
shr
pop
movsl
jmp
mov
xor
fs
dec
dec
inc
xchg
pop
les
imul
pop
mov
call
clc
cwtl
add
test
add
mov
pop
shrb
jle
gs
push
jae
popf
stc
repnz
xlat
clc
loopne
sub
inc
xchg
and
cld
adc
mov
and
stos
mov
jae
cmp
std
cltd
pop
mov
fbstp
out
rclb
in
nop
addl
mov
mov
and
mov
popa
fnstcw
xor
inc
test
jecxz
xor
lds
loopne
icebp
sbb
hlt
cwtl
push
mov
or
xor
stc
jae
in
stos
cmp
mov
mov
mov
movsl
pop
loop
mov
mov
outsl
es
pop
bound
xchg
and
mov
sbb
pusha
push
mov
fnsave
fucom
push
test
fiaddl
mov
fwait
divb
and
xchg
mov
jno
xorl
mov
aad
incl
negb
mov
je
adcl
xor
loope
cmp
bound
sbb
mov
mov
test
fdivs
adc
xchg
pop
inc
mov
into
divl
clc
jnp
pop
repz
add
mov
imul
push
lcall
jae
aas
enter
pop
and
mov
mov
psrlq
mov
repnz
popa
arpl
inc
lcall
popf
enter
mov
mov
push
dec
aam
mov
xor
stos
adc
inc
sarl
rclb
cld
les
imul
insl
in
out
cmovns
das
cli
cmpsb
cmpl
ja
or
pop
jbe
cs
movsb
jge
dec
lret
ret
sbb
sub
clc
aam
xchg
lret
add
and
fbld
jns
mov
ljmp
loopne
out
adc
movsb
sbb
das
lea
inc
scas
shlb
jbe
jp
cmp
xor
adc
jg
test
pop
mov
in
or
xchg
or
pusha
fcoms
xchg
shll
xchg
push
mov
dec
pusha
ja
adc
mov
cltd
nop
pop
cli
dec
xorb
addr16
jge
mov
mov
test
outsl
push
data16
mov
cmp
icebp
push
cmp
and
push
jnp
stos
ficoml
dec
xchg
popl
movsl
mov
outsl
adc
je
pop
pop
out
sbb
add
push
adc
and
lahf
adc
ret
jg
out
notl
jmp
xor
xchg
add
fisubl
adc
xchg
lea
push
cmp
xchg
mov
lcall
jge
popf
inc
mov
popf
xchg
xor
jbe
mov
fld
pop
add
out
cltd
mov
mov
mov
out
mov
rcrb
mov
jecxz
mov
adc
mov
sbb
xor
scas
xor
pop
lret
int
test
imul
repz
add
pushf
mov
imul
test
icebp
testl
mov
call
loop
cmp
push
into
inc
push
icebp
ret
xor
mov
sbb
inc
lds
cmp
movsl
push
ja
fldenv
pop
add
cmp
mov
xor
popa
insl
sbb
cmp
pusha
adc
cmpsb
sahf
cmpb
sarl
out
pop
out
mov
scas
cmpsl
cltd
mov
fisubs
loopne
ss
xor
shr
push
lcall
push
push
insb
xchg
jbe
mov
std
mov
add
pop
cwtl
pop
loopne
sub
xchg
aam
int
daa
es
mov
movl
inc
ds
aas
mov
pusha
test
mov
repz
push
push
iret
lret
test
jle
dec
cmpl
data16
lods
std
fld
mov
out
mov
and
loope
ret
sub
mov
pushf
xor
or
sbb
subl
shll
push
outsl
jg
mov
cmp
xor
mov
fcmovbe
jb
repnz
and
push
add
into
adc
dec
add
jno
sbb
shr
inc
inc
es
cmp
cmpsl
rorb
jg
jp
fldcw
ret
scas
js
call
sti
iret
imul
mov
push
cwtl
in
rcr
in
lret
xlat
mov
mov
jbe
sub
push
add
add
jns
clc
pop
nop
nop
dec
cs
mov
inc
div
adcl
loopne
inc
xchg
iret
adc
mov
xchg
les
jne
xor
jns
mov
addr16
push
jne
and
and
shrb
out
popf
in
loop
mov
xchg
lock
cmp
sbb
add
xor
cmp
outsl
cmp
xor
fdivl
insb
rcl
mov
arpl
inc
jno
mov
mov
add
divl
mov
hlt
xchg
movsl
ss
xor
enter
sub
push
leave
xchg
push
bound
cltd
push
sti
push
jmp
xor
sti
ret
cli
mov
sbb
ss
mov
fnstsw
popa
lahf
vunpckhps
leave
dec
imul
in
sbb
cmp
lret
fs
mov
or
aam
rolb
jle
jne
xchg
pushf
mov
xchg
fs
dec
cmp
mov
movsb
imul
dec
jbe
leave
pop
pushf
testb
pop
add
sbb
push
xchg
out
out
in
inc
dec
mov
enter
sbbl
and
mov
into
lret
push
xchg
push
or
mov
das
popf
pop
andl
sbb
inc
pop
mov
mov
jb
daa
and
ret
dec
aaa
mov
outsb
mov
jbe
adc
js
mov
adc
push
mov
dec
cmp
outsb
and
adc
psrlq
mov
and
out
test
out
and
fsubp
imul
jl
sub
mov
hlt
sub
jmp
aad
bound
jle
inc
sub
mov
mov
jmp
in
mov
and
pop
lret
es
push
popa
dec
sbb
clc
loopne
xor
imul
je
jmp
sub
mov
pop
jb
xchg
fisubs
xchg
dec
jl
loope
jecxz
mov
nop
testl
aas
mov
lret
jae
sub
pop
cwtl
enter
add
or
orl
test
mov
hlt
lret
test
rorl
mov
stc
int
sub
das
test
push
pop
or
imul
addr16
or
cmc
xor
push
fdivrl
push
dec
inc
mov
nop
dec
gs
jl
fiadds
push
sarb
imul
lret
push
scas
addr16
mov
fdivl
sbb
lret
test
dec
lcall
ja
mov
sbb
and
imulb
cmp
jmp
push
pop
or
mov
mov
aaa
into
rcrl
sub
mov
adc
cltd
add
mov
pop
cld
loope
inc
xor
dec
outsl
mov
cwtl
push
sahf
adc
and
out
lds
ret
insl
cmp
push
dec
loope
out
stos
xchg
shll
inc
xchg
mov
mov
inc
adc
fistl
sbb
popa
xchg
fsubr
and
call
mov
jp
push
push
or
add
fmuls
jbe
fdivp
cli
xchg
loopne
call
mov
jmp
push
movsb
jle
push
jmp
ffree
xor
xchg
jmp
idivl
mov
jp
and
gs
adc
push
add
jbe
lret
sub
sub
cs
or
mov
popf
xor
add
adc
and
xor
mov
pop
dec
movsl
add
mov
cmpb
lea
nop
push
cmpl
cmp
sub
rcrl
dec
mov
loope
ret
mov
bound
pop
out
mov
push
jae
sbb
call
and
mov
sub
stc
cmp
adc
add
addr16
xor
sti
sarl
push
sbb
test
xor
push
adc
pop
sub
sub
mov
sti
or
fmul
xor
popf
aaa
push
in
and
hlt
out
es
mov
addl
call
cld
popa
mov
cld
cmp
les
push
leave
jecxz
sub
repz
inc
lods
adc
and
jbe
inc
or
inc
gs
adc
repnz
add
bnd
mov
jl
add
xchg
ret
loopne
lret
test
mov
repz
fadds
xor
stc
cld
movl
sub
sar
les
addr16
enter
jge
shlb
test
orb
scas
negb
inc
sbb
adc
adc
or
inc
add
sbb
push
stos
in
push
inc
jbe
sbb
movsl
outsb
adc
popf
hlt
xor
cld
icebp
jne
push
inc
test
dec
inc
in
adc
xchg
inc
js
aad
cmp
sbb
pop
jle
out
cltd
sub
mov
mov
stos
dec
inc
imulb
fsubr
add
fistpll
aas
sub
stos
xchg
jno
or
push
or
icebp
pop
lods
cmp
xchg
xor
insb
je
je
test
jl
push
mov
xchg
and
add
pop
bound
fcomps
ja
out
and
xor
sub
fisubrs
pop
ret
popf
xor
movsl
cmp
push
sub
sbbl
jecxz
in
inc
leave
cli
shld
das
shrb
sbb
pop
test
and
mov
mov
aas
sbb
sbb
mov
test
and
test
cmp
pop
addb
xchg
push
sub
in
stc
xchg
divb
out
sbb
gs
xlat
lods
dec
xchg
outsb
or
push
test
lcall
std
xchg
pop
adc
wbinvd
push
sub
jge
adc
push
add
int
pop
mov
xchg
in
dec
popf
std
fcmovnu
dec
leave
push
jnp
mov
push
leave
mov
lret
dec
mov
mov
stos
cmpsb
jno
stos
subl
mov
in
repnz
shl
jle
xchg
add
in
xchg
inc
out
xorb
sarb
inc
pop
jb
sarl
sbb
clc
mov
pop
lock
adc
xchg
rcrl
push
imul
xchg
push
cld
stos
or
sbb
pop
in
jb
or
std
cltd
sub
xor
mov
fsubs
outsl
mov
jl
xor
ds
push
xor
mov
movsl
scas
push
popa
pushf
push
call
lret
xchg
gs
dec
push
imul
in
enter
hlt
pop
push
pop
or
jae
les
leave
sbb
jns
xorps
push
repnz
sub
mov
adc
jne
jl
scas
loope
in
sbb
xorb
sbb
gs
clc
push
push
sarl
pop
shl
pusha
int3
fcoms
add
xorb
fstps
shlb
sub
mov
aam
and
testl
stc
dec
sti
adc
popf
jo
scas
data16
mov
movsl
cmp
xchg
stos
in
mov
div
mov
inc
jmp
inc
sbb
vmovq
sbb
cmp
bound
xorl
sbb
sti
mov
aam
xlat
jmp
inc
leave
xchg
mov
shll
xor
push
dec
push
cmp
push
cmp
mov
cmp
cli
and
adc
pop
into
add
push
lds
cltd
sub
jge
sbb
jp
and
cli
icebp
lcall
xor
out
outsl
or
fsubs
pop
adc
pop
jmp
scas
movsb
cltd
cltd
xchg
clc
call
cmp
jmp
aad
sbb
fwait
cmp
aad
xor
sub
dec
xchg
lds
lea
dec
lret
testl
rclb
lds
xor
push
push
push
jne
sbb
add
push
mov
inc
stc
xor
loop
or
subb
hlt
sbb
stc
inc
mov
cmc
fwait
cmpsl
jo
xchg
test
repz
ret
or
or
out
sbb
test
das
pusha
test
or
cmp
fldt
cmpsb
repz
imul
and
xor
cmp
rcr
dec
rcrl
sub
mov
xor
dec
ljmp
addb
xor
cmp
xor
repnz
dec
nop
cltd
add
dec
cwtl
add
out
dec
xor
shlb
sub
jne
mov
dec
sub
inc
arpl
out
lret
fsubs
aas
pop
xor
repnz
mov
mov
cwtl
das
add
sbb
and
outsl
popf
fmull
xor
fmul
add
sahf
sarl
inc
push
push
aas
pop
es
movsl
stos
lret
mov
push
mov
xchg
jmp
movsl
push
inc
xchg
repnz
shrl
div
hlt
xor
or
icebp
mulb
push
int3
mov
mov
fstps
jne
fsubs
xor
mov
add
popa
mov
jae
sub
mov
js
mov
insb
test
sbb
ret
je
xor
fimull
sub
cmpsb
popa
mov
push
push
adc
cmpsl
sbb
inc
push
mov
fwait
push
push
jmp
xor
pop
inc
push
push
inc
cmp
cmp
push
in
xor
cmpsl
test
outsl
or
out
icebp
jecxz
repz
sbb
nop
pop
sbb
and
js
sbb
jo
loop
and
ljmp
xor
inc
in
add
fistpl
call
in
mov
xor
popa
out
data16
xor
popf
je
sbb
loopne
push
sbb
icebp
and
movsb
xchg
xchg
jns
or
popf
cwtl
leave
inc
out
jno
mov
fstl
pop
out
xchg
adc
jnp
mov
dec
imul
shrl
sub
sub
cli
mov
mov
fisubrs
push
jnp
cmpsl
mov
mov
mov
outsb
sub
loope
sahf
movsb
in
je
mov
imul
sub
xchg
or
and
aas
mov
fildl
cmpsl
popa
mov
mulb
xchg
jns
push
call
mov
mov
mov
lcall
push
xor
inc
shll
cltd
mov
out
stos
mov
shl
jmp
test
ss
push
aad
lds
jnp
testl
daa
add
call
cmp
dec
push
push
outsl
loop
pop
scas
outsl
inc
lock
jge
insl
jle
loop
push
pop
or
out
inc
pop
imul
lcall
insb
cmp
pop
push
imul
dec
imul
xor
mov
inc
adc
xorl
mov
fstps
pop
in
mov
or
imul
nop
jp
xchg
xor
enter
xchg
xlat
xor
mov
mov
push
pusha
inc
lods
inc
inc
lret
fwait
inc
xor
rcrl
mov
aas
sub
imul
and
aad
rorb
xchg
mov
xchg
fcmovu
mov
xchg
dec
adc
ljmp
ss
insb
xchg
mov
inc
mov
push
test
jns
rorl
jmp
ficoms
xchg
pop
pop
mov
dec
outsb
popf
std
mov
mov
adc
lret
movsb
fstpt
fisttpll
and
mov
into
mov
xchg
std
in
les
mov
inc
hlt
jb
xchg
sbb
xor
mov
test
in
gs
jbe
fsubr
in
add
pop
pop
imul
xchg
clc
cmp
loop
mov
xchg
push
repz
clc
outsl
call
out
jbe
movsb
mov
cld
push
jne
gs
pop
push
xchg
jmp
add
adc
mov
xchg
jle
push
pop
daa
add
popf
in
jge
push
sarb
nop
push
mov
ja
pushf
daa
xchg
and
ljmpw
inc
lds
adc
mov
sub
enter
cmp
xchg
dec
sub
jbe
push
adcl
aaa
inc
push
pusha
push
das
test
fiadds
loope
lods
cs
pop
push
adc
ja
dec
xor
jp
aas
lret
test
dec
pop
jle
or
push
or
jb
mov
add
dec
jbe
test
lock
sub
dec
ss
mov
xor
shr
leave
ss
in
test
movb
fnstsw
xchg
mov
jno
sbb
jmp
scas
adc
sbb
mov
cmp
enter
mov
mov
es
or
in
mov
sub
pop
aad
push
pusha
pop
repnz
dec
cs
inc
mov
pop
out
cmpl
repnz
stc
cmp
push
lcall
push
inc
mov
in
test
sbb
dec
push
xor
pusha
adc
filds
mov
dec
add
ljmp
mov
pushf
dec
stos
jl
std
clc
mov
negl
lret
inc
rorl
adc
xor
push
jmp
stc
push
jp
popf
jno
sub
dec
add
dec
mov
shrl
or
fadds
adc
ret
outsb
cmp
mov
xor
mov
test
fsubl
dec
inc
popf
nop
insb
mov
lret
xchg
mov
sub
fdivrl
rcr
jno
jno
push
clc
imul
ss
int3
add
pop
xor
fsubl
jmp
and
mov
repnz
das
imulb
and
cmp
clc
dec
xchg
outsb
les
or
test
jecxz
test
stos
pop
dec
pop
fnstsw
cmpsb
push
inc
jg
test
xchg
mov
movsb
sahf
mov
addr16
or
test
lea
aas
sub
mov
out
push
sub
faddp
xor
sti
fisubs
push
fbstp
sub
scas
xchg
cmp
jge
jmp
jg
xor
fstps
add
movsb
pop
cmp
popf
aas
push
sbb
cmp
scas
sub
in
mov
xchg
lret
aas
xchg
cmovs
mov
mov
mov
repz
pop
cmc
faddl
or
nop
pop
cld
mov
shlb
jp
loop
push
pop
ljmp
addr16
test
inc
lret
push
pop
push
jg
mov
les
loop
cmc
xor
insl
aaa
xchg
stos
in
shll
out
mov
sbb
inc
pop
xchg
iret
push
lret
push
repnz
inc
xchg
jmp
xorl
mov
xchg
inc
nop
xchg
mov
push
xchg
xchg
lea
repz
xchg
in
push
jo
iret
fcomps
adc
sub
in
mov
pop
stos
das
loopne
fcompl
rolb
aad
arpl
jo
out
ljmp
rcrl
xor
jae
popf
lods
pop
cmp
sub
mov
push
bound
dec
cld
adc
pop
add
add
fsubp
leave
push
int
push
enter
push
mov
cmpsb
push
fstpt
and
adc
jecxz
pop
pushf
sub
or
fistpll
dec
sbb
and
push
pusha
sbb
dec
dec
rclb
ret
sub
das
xor
adc
out
jp
into
pusha
jle
add
int3
sbbl
cmp
aam
adc
aad
insb
sti
sar
mov
mov
loop
inc
imul
addr16
and
lret
mov
int3
fcomi
mov
mov
mov
and
cmpsl
cs
cmp
dec
fwait
je
adc
in
inc
inc
xlat
cld
inc
lods
inc
adc
data16
inc
stos
popa
sub
arpl
mov
rolb
stos
xchg
jmp
dec
repz
xchg
in
shr
fiaddl
push
hlt
xchg
cwtl
add
jp
xchg
lock
pusha
sbb
test
imul
jmp
bound
nop
ljmp
popf
mov
pop
data16
xchg
pop
fbld
inc
add
sbb
dec
das
jl
fists
push
sub
rep
scas
xor
mov
icebp
shlb
lcall
jmp
mov
movsl
out
arpl
es
out
in
push
add
mov
xor
andl
dec
cwtl
jle
and
xor
jmp
nop
sub
lds
mov
je
or
leave
es
icebp
mov
mov
addr16
xor
push
jg
mov
jg
adc
cltd
jns
aaa
jp
cs
push
sahf
ret
pop
xchg
ror
cmp
movsb
int
cbtw
mov
xchg
lcall
and
cmp
mov
into
negb
adcb
adc
call
mov
sbb
mov
push
not
lods
arpl
sbb
push
mov
adc
xchg
out
and
adc
rorl
jle
mov
xchg
in
dec
subl
mov
into
dec
cmp
xchg
mov
or
mov
pop
jns
mov
lret
cmp
cmp
pushf
push
repz
fiadds
inc
imul
inc
push
push
xchg
push
fs
aas
sub
je
or
loop
ficoms
stos
out
loope
cmpb
cmp
std
add
cmp
or
mov
mov
int
xor
insb
mov
hlt
loope
insl
pop
cli
test
bnd
xor
fcmovne
bound
fnstenv
mov
fisttps
fistps
mov
pop
mov
outsb
add
mov
or
lods
insb
xchg
dec
mov
out
insb
out
outsb
ret
loop
push
sahf
je
testb
mov
cmp
or
int
sbb
insb
cltd
or
cmpsb
mov
cli
jb
popf
mov
xchg
or
sub
addb
lcall
rolb
sub
and
or
pop
or
mov
add
push
inc
mov
cltd
scas
mov
je
push
aas
imul
cmp
adc
sub
addr16
inc
xor
ljmp
ds
in
jg
inc
cmp
cmp
loopne
pop
insl
or
repz
icebp
repnz
dec
add
lods
and
and
aas
test
mov
lea
or
inc
sbb
and
xchg
jle
mov
adc
and
shrb
adcl
fisttps
sbb
jnp
xchg
aas
xor
testl
jle
aad
xchg
lods
out
cmp
cld
scas
je
sbb
pop
lcall
push
lods
xchg
orb
sbb
insb
bound
dec
mov
movsl
or
gs
sub
jne
scas
sub
daa
insb
xchg
jmp
repnz
stc
nop
add
loope
pop
or
dec
jg
hlt
test
push
add
jp
jl
mov
icebp
pusha
jmp
int3
sbb
jl
mov
inc
sbb
push
adc
xlat
cmp
fcomi
jno
mov
mov
test
fcomps
jmp
cltd
pop
mov
cmovnp
or
adc
mov
negl
jbe
aas
mov
xor
or
inc
stc
push
call
sub
loope
xchg
cmp
cwtl
out
adc
addl
ja
xchg
xor
pusha
mov
mov
mov
pop
or
jp
loopne
fdivp
mov
dec
mov
icebp
fisttpl
roll
scas
adc
aas
movsl
in
lods
push
adc
loop
and
leave
sbb
mov
out
icebp
mov
fidivrs
and
gs
shr
cmp
cmp
and
fucomi
out
push
xor
test
mov
fcomp
xchg
mov
mov
push
imull
sti
gs
mov
sar
xchg
jo
loopne
ret
add
imulb
nop
in
cmp
inc
and
mov
ljmp
sbb
xchg
movsl
jmp
addb
inc
adc
xor
cmpsb
stc
mov
in
lods
ret
std
dec
in
and
xchg
inc
jp
jle
adc
jmp
jp
sbb
mov
imul
cmp
xor
pop
mov
and
and
jmp
sub
add
rcrb
daa
in
sub
and
icebp
sub
test
ficoms
ja
cltd
pop
roll
mov
push
push
xchg
sbb
data16
push
and
inc
pop
inc
scas
push
fwait
mov
std
aaa
nop
jecxz
lret
push
push
je
loopne
mov
fsubr
inc
mov
in
and
adc
addr16
mov
popa
lock
nop
pushf
rcr
cwtl
mov
sbb
div
mov
dec
sahf
dec
loopne
cmc
add
das
cmpsb
adc
aam
add
mov
pop
or
scas
jne
mov
mov
sub
push
stos
and
mov
pop
sub
xchg
arpl
test
iret
mov
hlt
sub
dec
fstl
push
sub
sub
pop
ds
mov
arpl
mov
imulb
js
push
ret
jp
xor
into
and
add
fidivrl
pop
popf
sbb
xchg
pop
daa
cmc
bound
test
cmpsl
je
scas
out
or
add
cmp
pop
jle
mov
add
std
in
sbb
mov
outsb
inc
inc
xchg
ret
dec
add
ss
loope
repz
out
or
add
lods
into
or
stos
lret
jb
bound
stos
jge
sbb
mov
pop
dec
outsl
jno
push
fcomi
cmp
pushf
or
cmpsl
in
mov
sbb
shll
shlb
pop
shlb
mov
aad
mov
mov
pop
sahf
lock
cmp
arpl
ret
dec
aas
cld
push
add
test
addr16
aas
pop
fsts
popf
nop
jmp
stc
scas
mov
inc
mov
xorb
push
and
inc
outsb
mov
in
jg
pop
lods
clc
lds
lahf
sti
rol
or
dec
movsl
int
xor
int
in
push
adc
xchg
lds
popa
xor
jge
das
fwait
cli
icebp
int
cmpb
frstor
aam
dec
lea
xchg
aam
adc
xchg
mov
pushf
xchg
ss
jne
inc
cli
mov
mov
movsl
pop
or
inc
sbb
lret
sub
mov
test
push
rcl
inc
pop
inc
mov
inc
inc
push
fmulp
xor
aas
cmpsl
xchg
rcr
arpl
adc
or
mov
pop
cmp
das
cltd
shlb
pop
enter
adc
or
fmulp
mov
xor
jbe
push
roll
mov
addr16
cmp
pop
push
and
stos
cli
jp
cmp
cltd
adc
xchg
js
stos
addb
ret
inc
aaa
aaa
inc
test
pop
push
fbld
add
or
mov
into
mov
pop
cmp
mov
fnstcw
inc
in
arpl
cmc
push
or
or
xlat
shr
outsl
mov
mov
insl
fcomps
push
or
push
adc
gs
and
js
ljmp
add
sub
xchg
iret
bound
dec
bound
movsb
fdivrs
jp
push
dec
push
test
jns
hlt
pop
mov
dec
insl
loopne
jge
mov
mov
jmp
pop
test
mov
mov
cmp
ljmp
sub
lcall
sbb
lahf
and
xchg
daa
push
or
rcrb
and
je
inc
testl
mov
fs
cmp
divb
fldt
shlb
jnp
inc
div
xchg
jl
sti
pop
lock
ret
sub
aaa
movsl
ss
xchg
repz
push
mov
stc
out
std
mov
jmp
ret
les
test
mov
inc
movsb
push
mov
cltd
mov
fs
mov
inc
aam
xor
cwtl
stos
xchg
and
imul
pop
pop
adcb
sbbl
ret
aad
jg
into
add
jl
dec
insl
or
mov
pop
xor
dec
cmp
lret
add
loop
ljmp
jb
xchg
insl
repnz
cvtpi2ps
mov
mov
mov
loope
pop
xchg
adc
push
or
ret
push
pusha
push
daa
and
xor
ret
add
jmp
push
in
aad
xchg
cmp
test
rcrl
adc
push
sbb
add
fidivrs
or
jecxz
jge
bound
dec
sub
testb
mov
jbe
xchg
xor
into
xchg
and
test
cs
add
int3
cmp
enter
pop
insl
jo
sub
test
and
mov
lods
sub
pushf
out
ret
dec
push
inc
xchg
js
lock
push
movsl
arpl
mov
sub
dec
or
in
cmp
shrb
xor
stc
repz
dec
bound
pop
lods
mov
inc
push
test
mov
fwait
add
mov
cmp
std
lahf
mov
in
mov
or
dec
push
mov
adc
sbb
inc
jne
in
outsl
xchg
popa
mov
mov
xor
mov
je
mov
repnz
mov
ror
xchg
or
clc
xlat
or
push
cmp
js
fs
js
dec
jg
and
mov
cmpb
scas
jle
pop
loop
pop
sub
jb
jp
addb
inc
jmp
mov
shll
pop
xchg
mov
in
inc
fwait
and
addb
je
inc
jbe
sbb
fildl
mov
mov
arpl
movsb
ljmp
inc
out
xchg
inc
bound
je
add
test
cmp
push
cmc
sub
ds
fsubl
shll
mov
inc
jns
dec
mov
sbb
iret
and
test
jno
mov
les
clc
sbb
adc
in
nop
pop
xchg
repz
xor
repz
add
push
call
xchg
ret
and
sbb
xchg
add
mov
cmp
jno
out
push
das
mov
out
xchg
repz
imul
xlat
lcall
leave
cld
bound
jle
outsl
jge
push
aad
mov
mov
adc
pop
test
sbb
fildll
lahf
dec
xchg
out
mov
loope
iret
mov
lock
dec
ljmp
shll
icebp
mov
scas
inc
mov
stos
xchg
outsl
push
cs
mov
aaa
lods
adc
stc
clc
sub
std
aaa
lcall
jne
popa
add
push
aam
mov
sar
pusha
cmp
push
xchg
sbb
pop
ja
les
dec
outsb
mov
outsb
add
loopne
xchg
add
pop
lods
je
sbb
and
adc
jle
icebp
jg
jns
js
cmp
repnz
xor
mov
in
adc
and
sbb
or
push
mov
daa
sbb
jne
in
adc
push
sub
mov
jnp
mov
jae
mov
imul
xlat
add
es
shlb
dec
loopne
and
push
pop
jmp
bnd
cmp
jo
mov
in
mov
int3
test
cmp
xchg
mov
std
add
sbb
popf
mov
mov
mov
jge
scas
addb
iret
push
test
inc
dec
imul
clc
mov
pop
popf
popa
cmp
jo
add
dec
fnstcw
subb
fs
and
cmp
mov
xor
push
sar
mov
sbbl
shl
cmp
sub
mov
adc
iret
push
icebp
aas
dec
frstor
aad
cmp
call
cmp
sub
lods
cmpl
dec
mov
outsb
cmp
pop
mov
mov
mov
sar
fcoms
rcrb
aam
cmp
ficomps
rolb
and
pop
mov
add
out
cltd
mov
push
fs
in
or
jmp
dec
mov
and
sub
iret
stc
js
in
and
pusha
dec
mov
in
std
pop
ret
stos
cmp
push
fists
mov
push
pop
nop
clc
inc
dec
or
sbb
les
push
into
mov
fisttps
sbbl
sub
fadds
push
in
or
fnstenv
lea
xchg
stos
inc
js
mov
cmp
pop
lret
test
cmp
mov
sub
xchg
daa
inc
test
or
sub
cmp
lahf
outsl
xchg
sahf
cmp
andb
mov
repnz
rcrl
fwait
lret
adc
out
push
add
stc
ret
push
add
xchg
scas
fucomip
sti
cmp
push
mov
hlt
jle
mov
add
jge
add
mov
xchg
mov
aad
js
push
pusha
push
lret
aad
mov
pop
sbb
mov
decb
das
mov
shrb
jbe
jg
lret
hlt
inc
lock
lcall
outsl
call
leave
out
dec
andl
add
and
popa
or
pushf
pop
into
jmp
push
nop
dec
jns
sub
push
arpl
xchg
dec
aad
insb
push
jle
pop
addr16
lret
inc
stc
call
add
mov
sarb
test
mov
movsl
cmp
rcll
adc
and
jns
movsb
fstl
dec
sbb
xor
fwait
push
insb
es
test
jl
out
es
sbb
dec
in
cld
mov
inc
ret
mov
dec
push
rcr
fcmovne
adc
mov
dec
jmp
dec
loope
cmpsb
add
xlat
mov
fldt
adcb
pop
rorl
mov
idivb
and
sub
test
or
xor
lock
cmp
lods
mov
into
les
mov
call
sahf
jmp
into
repz
push
in
add
xorb
cli
dec
mov
call
stc
inc
pop
pusha
sbb
aad
pop
jo
push
aaa
arpl
cltd
dec
push
jmp
arpl
jnp
iret
push
xchg
je
fisubs
pop
inc
aaa
mov
fldenv
pop
jle
aad
addb
lret
pop
lock
mov
or
jo
aad
inc
clc
cmp
test
mov
aam
setns
fwait
xor
sub
stos
xchg
in
outsl
imul
hlt
xor
xor
dec
cli
lcall
mov
movsl
adc
sti
and
sbb
mov
pop
mov
das
mov
call
mov
test
push
test
mov
mov
stos
insb
out
or
sub
clc
pushl
xlat
pop
or
fsubrl
and
idivl
push
and
sbb
jmp
popa
stos
cmp
mov
insb
and
fdivl
push
jno
pop
pop
mov
sub
test
mov
into
mov
mov
jns
adc
icebp
add
jle
pop
sbb
xor
mov
jl
in
hlt
pop
add
dec
imul
adc
mov
arpl
cli
stos
iret
js
push
dec
es
pop
dec
lcall
shll
popf
out
pop
pop
dec
int3
negl
repz
jl
adc
or
adc
popf
dec
lods
add
fiadds
cs
push
lods
das
lods
rclb
xchg
mov
stos
stc
ret
imul
lock
aaa
test
or
inc
sub
sub
scas
call
adc
pop
push
fxch
push
inc
push
in
movsb
sti
jmp
jnp
lea
jg
dec
rorb
adc
mov
into
push
test
ret
test
dec
mov
add
mov
dec
mov
jae
sahf
dec
jecxz
stos
sarl
sbb
xor
sbb
popa
out
fiadds
int
popa
jg
sub
jnp
aas
or
inc
lret
and
xchg
repnz
inc
in
add
jo,pt
aas
dec
andl
push
mov
mov
pusha
mov
mov
out
cwtl
jnp
pop
inc
ffreep
mov
movsb
mov
jbe,pn
dec
mov
nop
adc
fiadds
fstp
push
js
pop
out
cmp
hlt
in
adc
in
subb
jmp
mov
xchg
mov
repz
subb
push
jnp
je
sti
pop
mov
xlat
mov
pop
push
popa
je
or
repz
push
clc
cs
xchg
jnp
push
ds
sbb
adc
mov
out
cmc
jp
or
xor
loop
mov
or
imul
pop
scas
or
jbe
lods
cltd
sub
dec
ja
data16
rcr
jae
jl
push
cmp
aas
imul
sub
mov
dec
popf
sbb
mov
mov
inc
mov
scas
inc
decl
fs
fsubrs
sub
dec
ficompl
mov
testl
fsubs
in
add
repnz
sub
pop
popf
imul
adc
loope
dec
mov
xor
and
mov
add
cmp
or
fwait
out
stos
data16
cmpps
or
addr16
int3
lret
out
in
clc
mov
cwtl
rorl
mov
mov
ds
out
pusha
pop
js
repnz
call
stos
add
arpl
lahf
mov
es
inc
cli
xchg
je
fildll
int
test
mov
mov
sar
fptan
fdivl
xor
fsubrs
stos
sub
push
ja
fwait
sti
rclb
add
sbb
imul
jmp
push
loope
outsl
gs
sub
lock
stc
movsl
divb
push
enter
fldz
std
sub
jmp
pop
jg
add
mov
mov
ret
or
fistps
cli
lock
inc
imull
in
insb
lahf
imul
xchg
sub
sbb
adc
adc
orl
mov
mov
insl
push
repz
out
jb
pop
out
daa
cmp
inc
dec
in
push
cmc
and
rol
mov
lods
xchg
add
cmp
sbb
cmp
imul
loope
mov
or
rolb
ficoml
mov
loope
xchg
test
inc
mov
xlat
sbb
adc
add
insb
mov
int3
jo
pop
mov
xchg
negb
cmp
cmpsl
push
push
nop
loop
arpl
insl
and
jmp
jg
outsb
xchg
jmp
cmp
cmp
and
int3
sub
mov
xor
add
xor
pop
push
fcoml
dec
sbb
jbe
pop
push
add
lcall
sub
cmp
fimuls
ret
sub
loope
and
mov
jae
imul
pop
data16
inc
jbe
add
inc
sub
xchg
negl
test
repz
xchg
pop
stc
cwtl
jp
nop
gs
icebp
mov
or
cmpsb
scas
adc
ret
movb
pop
adc
mov
add
add
int3
imul
loopne
jb
es
dec
aaa
mov
sub
mov
xchg
lahf
mov
imul
mov
pop
pop
mov
add
and
push
aas
vunpckhps
or
jbe
mov
fcomps
push
fimuls
dec
add
mov
adc
pop
adc
inc
loopne
out
xchg
mov
aaa
clc
ret
lods
xchg
mov
mov
pushf
xor
add
mov
rcl
std
adc
jno
dec
push
pop
dec
sbb
mov
rcrb
loop
push
aas
add
testl
push
xor
pop
mov
in
xor
jecxz
outsb
mov
stc
push
mov
or
xchg
add
bound
lret
cmp
mulb
or
push
and
popf
in
xchg
jge
fbstp
test
mov
ret
push
aaa
mov
mov
mov
sub
add
loopne
test
pusha
lahf
mov
lret
and
test
fdivrl
cmpsb
fs
xchg
out
scas
sub
cwtl
sbb
scas
mov
mov
insl
adc
adc
movsb
orb
inc
push
lods
mul
cmp
dec
inc
divb
and
sub
jg
fists
cmp
insl
inc
cmp
into
pop
mov
pop
and
and
imul
sbb
loope
outsb
sbbl
int3
or
scas
adc
push
jae
jo
push
sub
push
mov
cltd
in
and
lret
inc
pop
shlb
imul
fs
stos
or
jb
in
ud0
mov
aam
inc
add
enter
shrb
pop
test
test
leave
add
push
dec
push
bound
jae
outsl
mov
fnstsw
cwtl
mov
and
movsb
jmp
daa
cmp
push
dec
and
fcmovnbe
lcall
imul
adc
rorl
arpl
mov
pop
into
adc
mov
loop
pop
call
mov
or
xlat
mov
sub
cmp
insl
xchg
into
fiadds
icebp
adc
push
stc
or
jp
lahf
jle
scas
stos
and
mov
cmc
cmp
push
bound
gs
and
loop
pop
insl
push
ss
jmp
popa
enter
nop
and
xchg
and
sti
inc
insl
popa
adc
cld
ss
es
lcall
xchg
lds
sub
push
arpl
ret
mov
inc
sub
or
pop
stc
cld
add
aad
dec
lret
mov
idivb
cmp
notb
sub
cltd
pop
mov
push
xchg
sbb
aad
mov
sub
lret
ret
or
inc
xchg
cmp
lahf
dec
push
inc
popf
mov
lods
sti
loopne
leave
xchg
out
mov
aam
mov
mov
add
je
cmc
xor
test
shr
sbb
xor
aas
pop
pop
adc
jmp
icebp
push
movsb
adc
icebp
xor
adc
pop
xchg
inc
dec
lods
and
insl
pushf
jae
mov
dec
pusha
mov
insb
jmp
cmp
xor
jns
shrl
cmc
stos
bound
dec
or
and
adc
xor
mov
pop
fwait
cmp
std
xchg
adc
lods
stos
jle
cltd
popa
fstl
iret
icebp
popa
outsl
xchg
aad
jge
and
ljmp
pop
in
sbb
lods
adc
loop
cmp
lret
pop
imul
sub
push
sahf
cmp
call
push
pusha
or
mov
test
dec
and
or
fwait
ja
cmp
jle
cmp
mov
out
pushf
mov
stos
icebp
cmp
jg
rcll
cmp
mov
lahf
sub
ljmp
add
outsb
dec
adc
cmp
inc
inc
sub
into
nop
xchg
pop
sub
sub
ror
xorl
dec
lds
into
pop
mov
xchg
test
incb
or
push
jnp
sbb
andb
jge
fcmove
mov
rcrb
push
sub
addb
mov
dec
pop
adc
cmc
lea
cmp
adc
cmp
mov
inc
mull
pop
icebp
cmc
test
and
push
pop
rcrb
mov
mov
mov
out
test
outsl
in
jmp
les
xlat
cmp
xor
lea
inc
mov
ficoml
lods
dec
sbb
jb
cmpsl
pop
popf
inc
mov
push
push
or
out
inc
lret
pop
xchg
inc
mov
clc
mov
push
repz
cltd
loope
mov
or
movsb
mov
mov
fisttpll
xor
jmp
lods
xchg
out
repz
andl
jmp
div
inc
std
outsb
addr16
mov
adc
into
pop
pop
sbb
hlt
aam
adc
lret
sbb
std
popf
mov
pop
xchg
add
or
shlb
jns
jg
adc
loope
leave
stos
sbbb
outsl
popf
or
push
mov
leave
cltd
dec
fimull
sub
mov
and
or
mov
push
icebp
test
addl
std
inc
dec
dec
leave
cltd
mov
add
aaa
mov
mov
push
jecxz
in
cmp
xlat
dec
insb
mov
xchg
or
test
out
inc
fnstenv
mov
cwtl
fadd
inc
push
ds
jmp
outsl
pusha
out
xor
mov
cli
xor
pop
cmc
cld
cltd
shll
sub
into
pop
push
cmp
gs
pop
lock
pop
push
adc
fbld
add
sub
adc
daa
mov
rcrl
jbe
sub
adcl
jno
les
dec
mov
xchg
jmp
les
push
push
dec
int3
push
les
sub
mov
cmp
nop
sub
cmp
mov
push
or
sub
inc
xchg
das
dec
push
push
aaa
cmp
sub
cltd
shr
cmp
mov
popf
icebp
test
scas
mov
sbb
add
fcom
jg
or
adc
inc
mov
lret
out
insb
xor
outsl
insb
lods
into
fsubl
out
pushf
xor
jl
push
lret
cld
push
ret
std
cmpsb
inc
adc
stos
or
push
dec
pop
test
adc
push
mov
fdivrs
xchg
fcom
push
pop
jnp
sbb
mov
stc
adc
int
nop
movsl
int
dec
add
xchg
jae
xchg
sahf
je
cli
mov
rcrb
lahf
outsl
insl
push
mov
sahf
into
push
das
xchg
clc
xor
pop
sahf
mov
inc
xchg
or
mov
mov
and
lcall
sub
pop
or
ja
sub
xchg
ret
lcall
jle
push
xchg
and
enter
inc
popa
rcrb
adc
or
and
rorl
in
lret
outsb
stos
lahf
enter
mov
mov
insl
xor
cmp
mov
adc
fnstenv
int
xchg
daa
mov
push
mov
jp
and
cmp
mov
mov
jmp
sub
or
mov
inc
and
push
dec
mov
and
or
xlat
test
clc
inc
cmpsb
dec
push
cmc
mov
mov
add
push
sub
sbbl
or
decl
mov
lods
xchg
xor
push
dec
ud1
xor
mov
mov
lret
shr
cli
push
dec
jae
xlat
sbb
sbb
xchg
dec
pop
or
adc
insl
ficoms
pop
in
sub
or
inc
adc
jg
dec
pop
mov
hlt
jp
push
fwait
fwait
pop
xchg
cwtl
sti
lock
jbe
je
jae
and
rcll
add
into
push
push
out
std
andb
xor
jmp
fs
dec
mov
aam
sahf
push
push
sub
shl
sarb
sahf
xchg
sub
cmovne
lods
shll
mov
jecxz
cmp
rclb
sbb
cmp
adc
loop
insb
cmpsb
push
into
fstpl
or
mov
and
sbb
enter
js
ds
movsl
or
inc
addb
iret
inc
hlt
sub
sub
mov
pop
out
inc
xchg
push
ja
rcll
jmp
and
fistl
xor
ret
test
jg
adc
mov
mov
test
dec
adc
ss
idiv
push
mov
stc
shrl
lret
mov
jmp
or
cs
test
xor
lea
sbb
lret
in
xor
push
cmp
xor
int
xor
mov
push
call
pop
push
pop
xchg
adc
icebp
minps
mov
test
and
jne
inc
lods
shll
dec
and
adc
sbb
ljmp
cld
cmp
arpl
je
rcr
scas
rclb
jle
push
sub
mov
mov
das
arpl
inc
bound
sarb
je
pop
loop
stos
shl
bound
sub
fstps
ja
imul
push
fistpl
or
fwait
sub
jl
iret
xchg
inc
inc
or
push
jo
imull
dec
cmp
sub
cmpsl
jno
cld
xor
jb
ljmp
loopne
or
and
cli
jns
mov
fwait
mov
jge
cmc
cmp
dec
aam
mov
lret
cmp
mov
rclb
sub
or
or
pop
cmpsb
adc
sub
adc
sub
push
out
loopne
jnp
mov
xchg
insb
repz
sbb
aaa
call
lea
rorl
addr16
mov
es
jnp
push
sahf
dec
adc
movsb
bound
sbb
loop
jge
mov
push
xlat
add
xchg
cmp
jl
into
fcomip
aaa
leave
sahf
mov
sbb
out
imul
jge
jno
or
cmp
out
test
fbstp
cltd
pop
xchg
sub
inc
es
adc
dec
mov
cwtl
sub
push
call
adc
lock
bound
pop
enter
xor
rcr
cmp
lret
xor
popf
int
fcmovbe
mov
cmp
and
repnz
push
adc
xchg
je
test
or
mov
aas
inc
aam
shll
cwtl
pop
pop
test
fnstcw
jmp
in
ficompl
aad
pop
jecxz
daa
repz
scas
xchg
mov
fiaddl
test
insl
mov
call
lret
and
add
scas
sbb
stc
pop
xchg
imull
out
stc
cld
push
and
addl
xor
cmp
inc
pop
pop
jp
jne
lea
xchg
cli
jg
lds
stc
subb
push
cmpsl
frstor
mov
insb
into
aaa
mov
xor
jno
jle
cmp
xor
aaa
or
mov
cli
data16
int
inc
es
rclb
int3
adc
sub
xchg
aas
in
mov
test
rorl
es
testl
daa
push
or
in
cld
push
stos
iret
add
in
addr16
push
rcll
in
jb
push
nop
loop
mov
stos
addr16
movsl
push
arpl
jmp
out
rcll
dec
jne
dec
cmp
pop
scas
shlb
sbb
mov
fdiv
xchg
sti
pop
jmp
int3
mov
mov
cmp
pusha
xor
mov
int3
jno
add
jb
mov
pop
shll
and
out
hlt
mov
sbb
add
into
nop
jbe
push
mov
jb
mov
mov
adc
sub
pusha
lods
adc
mov
mov
xor
cmpsl
cltd
xor
xchg
repnz
ss
test
and
push
push
movsb
adc
adc
int
loope
push
jl
ja
incl
lea
push
jbe
pop
shrb
test
test
adc
inc
sahf
jle
std
in
fiadds
and
pop
gs
cltd
aam
xor
repz
dec
bound
push
cmp
fs
mov
mov
pop
sub
in
and
jle
xor
cmp
xchg
mulb
icebp
fsubs
ds
push
jl
aaa
push
sbb
add
loopne
mov
ret
nop
call
mov
xchg
mov
aam
adc
test
int
mov
in
call
and
mov
xor
sbb
push
or
mov
test
bound
shrl
gs
xor
jae
scas
sbb
mov
push
adc
fs
xor
insb
push
push
gs
rcrb
pop
repnz
add
and
sti
mov
hlt
pop
and
dec
mov
shr
mov
jp,pn
in
mov
adc
xor
in
mov
outsb
shll
aam
xchg
clc
add
add
mov
shrl
data16
adc
xor
int
call
inc
test
adc
or
adc
pop
adc
in
inc
inc
cmp
lret
mov
cmpl
mov
or
and
fs
jmp
fwait
sbb
pop
scas
mov
xchg
inc
lods
lock
lcall
hlt
outsb
mov
dec
shlb
fwait
cli
ss
pop
test
in
push
pop
push
or
add
inc
adc
mov
push
add
jecxz
mov
lret
into
ja
push
mov
and
dec
movsl
subl
sub
call
sub
or
gs
xchg
cld
mov
lahf
std
cmp
add
loopne
aam
rol
mov
sbb
jns
pop
rclb
jle
lahf
ja
jg
mov
in
outsb
dec
mov
rcrb
ret
add
mov
ja
jge
pop
cwtl
pop
fdivr
scas
repnz
rol
jle
cmp
inc
int
orps
jne
jae
pop
dec
aam
and
inc
insl
repz
fidivs
daa
xor
pop
fcoml
xchg
push
ret
sahf
adc
pop
push
sbb
push
lea
shlb
jnp
inc
fidivs
sbb
mov
sbb
es
mov
roll
cmp
adc
fucomp
mov
cmp
jge
adc
dec
aas
cltd
in
mov
and
jnp
or
std
mov
pushf
aad
xor
cmpsb
dec
call
stos
pop
push
out
lock
mov
dec
sbb
rolb
iret
cmp
nop
cmp
insl
dec
les
shll
pusha
and
mov
stc
test
test
lea
lret
ret
int3
xor
fstpl
adc
sub
jmp
inc
repz
cmp
adc
sbb
cmc
bound
and
xchg
sub
clc
push
fdivp
addr16
mov
add
imul
ret
loop
pop
sbb
cmpb
aam
xchg
mov
cmp
rep
imul
scas
stos
pushf
mul
stos
mov
jg
xchg
addr16
leave
sbb
mov
xor
ret
sub
mov
sbb
cmp
in
fs
int3
push
pop
xchg
push
cmpsl
push
and
push
push
addl
lret
inc
stc
push
xchg
sbb
into
mov
rcr
dec
sub
push
jmp
cmp
jbe
jnp
inc
scas
mov
hlt
mov
idivb
leave
jg
or
rcll
xor
sbbl
rcrb
js
roll
in
cltd
shlb
jno
sbbl
push
jl
lcall
cli
mov
test
mov
jae
ret
mov
cmp
push
pusha
dec
repnz
xchg
hlt
cmp
jbe
push
int
mov
xor
add
cld
mov
cmc
shlb
sbb
jbe
mov
hlt
sbb
push
rorl
or
jb
sub
dec
jns
enter
inc
push
fwait
cmpsl
std
imul
js
mov
xor
in
fwait
pop
push
pandn
xlat
push
mov
inc
xorb
test
sbb
mov
push
and
ds
cmp
jne
pop
popa
push
or
cld
loopne
xchg
aad
stos
shll
jno
cmp
jbe
jmp
out
xlat
jne
dec
sub
xchg
bound
rcrl
lods
cwtl
cmc
outsb
mov
xchg
push
mov
js
fdivr
cli
mov
xor
ss
aad
lds
sub
and
pop
in
addl
repnz
in
inc
adc
aad
mov
jmp
xchg
mov
or
es
push
push
lret
dec
add
sbb
mov
dec
icebp
sub
js
mov
arpl
lods
mov
mulb
cltd
fs
pop
fs
iret
sti
sub
mov
dec
insb
fnstsw
xor
fwait
xor
fcomps
out
mov
ljmp
cmc
cmp
repz
adcb
jg
xchg
sbb
xchg
dec
fdivs
add
cmpsl
jecxz
mov
adc
or
mov
or
add
cmp
xchg
xchg
mov
mov
jl
into
aad
pop
mov
ret
sti
pop
out
gs
sbb
cmp
inc
cmpsb
mov
adc
sbb
mov
or
inc
xchg
jle
inc
jns
inc
rol
pop
jl
jnp
movsb
sbb
pop
ds
std
pop
pop
pop
imul
test
hlt
in
clc
pop
xlat
xchg
and
pop
push
lahf
je
jmp
add
xchg
dec
insb
adc
inc
jecxz
cmpsl
push
jno
ja
mov
popa
es
mov
xchg
stc
scas
pop
and
xchg
or
imul
out
inc
xchg
and
aad
test
aad
test
arpl
out
inc
xchg
movsl
imul
xor
cs
xor
stos
ss
shll
or
xor
cmp
pop
add
mov
mov
adc
aas
rclb
mov
adc
lcall
subb
jno
rolb
mov
testb
les
cltd
icebp
scas
sbb
push
and
xchg
out
add
shlb
dec
or
ret
loope
das
scas
mov
lret
add
fcmovb
dec
dec
cmp
mov
or
push
push
rolb
dec
dec
adc
popf
sti
xor
dec
aad
popa
lcall
mov
or
xor
dec
into
sub
pop
inc
fidivl
push
mov
or
push
xchg
xchg
insl
popa
xchg
notb
lret
cmp
adc
adc
or
cmpsb
mov
push
fcoml
data16
lock
ret
sbb
sbb
mov
jo
push
push
pop
xor
cltd
jl
xchg
cmp
cmpsl
sarb
push
sub
outsb
xchg
sub
mov
lods
scas
ror
inc
sahf
xchg
jae
scas
mov
xchg
and
out
loope
cltd
mov
mov
addr16
mov
test
mov
fmull
loop
adc
arpl
cmp
sub
inc
and
xor
pop
int
add
or
lods
pop
cmp
jge
fcomp
lock
das
rcrl
sbb
mov
mov
stos
ja
in
popa
sbb
daa
adc
aaa
je
cwtl
loope
cmp
push
lock
inc
clc
sti
sub
pop
mov
jae
xchg
add
sbb
mov
bound
push
cmp
jg
fsubrl
pusha
iret
aas
hlt
cli
jnp
cli
mov
hlt
daa
push
bswap
mov
into
lret
sub
jl
test
pop
inc
addl
or
arpl
inc
lret
dec
mov
xchg
dec
add
sbbb
sbb
cmp
adc
sub
negb
jecxz
jae
and
test
imul
ljmp
adc
js
sbb
in
dec
lret
lods
jp
es
in
lock
out
cmp
lcall
cmp
mov
xchg
aaa
fisttpl
pop
fdivs
out
mov
dec
rol
in
push
and
loope
xor
lods
mov
sbb
flds
ljmp
shlb
jg
movnti
orb
jmp
xor
insb
push
sbb
mov
dec
ficompl
lret
adc
add
mov
call
movsl
mov
dec
pop
cmp
push
add
pop
fstpt
clc
cld
mov
int
push
add
jb
loope
mov
in
sbb
into
fisttpl
icebp
loope
add
aaa
adc
pop
pop
push
cmp
and
shrl
jne
out
jbe
jb
adc
cmp
in
ss
movsb
or
scas
pop
js
jle
dec
aas
inc
pop
cmp
int3
lret
xchg
rolb
enter
or
sub
sti
mov
mov
push
pop
lcall
loopne
cmpsb
jo
loopne
outsb
scas
cli
adc
shlb
inc
cmc
je
mov
sub
dec
pop
repnz
push
mov
repnz
mov
inc
cmp
and
xchg
sbb
incb
and
jp
jae
mov
xchg
sub
or
or
lcall
jmp
pop
sarb
xchg
or
cmp
les
je
jg
js
push
aas
and
fdivs
xchg
outsl
sbb
dec
inc
fs
xchg
add
xlat
movsl
push
dec
rorl
jp
das
mov
mov
outsl
xor
repz
arpl
xor
movsl
repz
stc
and
mov
in
pop
or
int
cmp
ret
pop
gs
adc
xchg
loop
sar
pushf
inc
in
xchg
fistpl
xor
and
ret
stos
ret
scas
sbb
cmpsb
addl
sub
out
dec
aas
popf
and
jg
cmpb
jns
ljmp
mov
inc
iret
or
mov
test
sarl
and
push
aas
xchg
push
xor
loop
mov
inc
fisubl
mov
aad
or
js
push
xor
and
pop
leave
lret
cmp
xor
or
mov
psraw
sbb
fildl
popf
push
imulb
or
fcmovbe
jle
stos
in
aad
stc
sbbl
fs
loopne
fdivrs
out
dec
inc
iret
ss
pop
int3
test
aas
mov
mov
das
pop
imul
les
das
jmp
addr16
lahf
fists
movsb
pushf
aad
rcr
cmpsl
mov
cmp
cltd
xor
mov
mov
sub
sub
xchg
leave
mov
ds
enter
movsb
pusha
negb
jl
ja
stc
aaa
jge
adc
repnz
imul
rcrb
push
sbb
lahf
pushf
push
gs
add
pop
ret
jo
scas
mov
setge
xchg
nop
xor
or
pop
jae
out
and
sub
rcrl
mov
add
out
jmp
mov
jne
pop
ret
xlat
push
add
lods
pop
repnz
lds
out
repnz
or
fisubrs
dec
test
adc
repz
rcrb
lds
cmp
mov
dec
shll
test
mov
sbb
test
gs
mov
xchg
aad
pusha
xchg
mov
add
out
mov
mov
insb
jle
sbb
add
add
ret
out
push
fdivrl
ret
sub
mov
std
add
xor
sti
push
cmp
sub
adc
ss
insl
sub
dec
sbb
mov
mov
adc
push
pop
out
inc
xchg
sub
sti
fwait
and
lcall
scas
mov
cmp
mov
dec
cmp
sub
jg
nop
add
decl
pop
mov
dec
lcall
xchg
subb
xchg
mov
nop
pushl
jmp
in
scas
ret
fbld
push
dec
imul
cli
push
gs
adc
dec
xchg
cmpl
push
mov
repnz
outsb
fdivl
imul
js
sub
push
mov
fsub
cmp
jmp
dec
repnz
loope
adc
mov
cli
loop
or
leavew
les
les
andb
mov
inc
repz
int3
pusha
jmp
and
in
dec
and
adc
loop
cli
sub
stc
mov
cmp
data16
push
je
ret
ljmp
lods
cs
pop
pushf
das
or
mov
setb
or
pop
rcll
adc
and
hlt
imul
mov
pop
dec
xchg
out
and
add
pop
pop
push
in
xchg
test
aas
cmp
into
fldcw
and
adc
xchg
inc
mov
mov
scas
ffree
adc
lock
pop
push
mov
push
sub
ret
jb
addr16
sub
push
pop
dec
repnz
scas
dec
adc
sub
mov
pop
fwait
dec
decb
push
in
aad
xchg
cli
mov
add
jge
inc
mov
cmp
and
cmp
movsb
cmp
enter
or
push
xchg
pop
repnz
xor
cmp
mov
pusha
and
push
adc
std
stc
inc
xor
adc
mov
imul
jbe
and
mov
cmp
sbb
and
and
mov
imul
xor
xchg
insb
mov
inc
mov
lahf
pop
xor
xchg
mov
das
lds
add
inc
call
int
mov
popa
cs
mov
ret
ret
push
fsubs
push
cmpb
cmp
xor
loop
dec
jns
into
loope
sub
push
add
icebp
mov
mov
loope
sbb
sub
add
cmpsb
push
sub
gs
pop
push
cli
mov
xrelease
dec
mov
mov
loope
sbb
loop
jge
push
inc
fs
push
jae
out
movsb
jns
dec
or
add
arpl
mov
enter
dec
in
sub
in
xor
pop
dec
subb
out
cmp
lea
sahf
cmp
gs
jle
xchg
loop
cmp
cmpsl
pop
punpckhbw
bound
pop
pop
add
movsb
imul
outsl
mov
mov
cmp
pop
mov
loope
stos
dec
jmp
data16
jno
cmc
sub
mov
int3
jb
sbb
mov
xor
mov
sahf
popf
jg
xchg
daa
cmc
xor
mov
mov
rep
imul
int
rcl
inc
rorl
mov
stos
mov
aas
jp
std
out
pushf
or
xchg
cmc
movsl
cmp
mov
jno
jmp
dec
sub
adc
adc
pop
mov
es
pop
int
out
xchg
fdivrl
pop
jne
mov
mov
int3
iret
add
push
arpl
movsb
adc
cmp
mov
inc
and
push
ret
xchg
insb
out
ror
cmpsb
xor
test
xchg
int3
lods
sub
mov
push
fs
in
lock
sub
jmp
jno
scas
xor
mov
mov
data16
mov
sbb
lock
addb
call
dec
sarb
aad
fsubrs
jl
loop
mov
minps
ja
stc
push
xor
cld
lret
dec
xchg
dec
rclb
loop
dec
xor
lret
addr16
cmc
cmp
cmp
outsl
insb
movsb
or
addl
xor
mov
in
inc
jg
pop
in
in
dec
jnp
fsts
jmp
scas
cwtl
mov
dec
cmp
in
scas
push
arpl
jge
cmp
sbb
cmpsb
enter
adc
add
es
sahf
shrl
shlb
icebp
xor
mov
mov
and
xor
lds
outsl
add
loope
cwtl
mov
daa
pop
in
dec
cmc
scas
in
out
inc
cmc
push
jecxz
jae
outsl
dec
into
mov
xlat
mov
das
xchg
or
push
imul
pop
sub
aad
sub
dec
sbb
pop
sbb
push
fiaddl
xlat
add
jle
push
adc
in
cmpsl
movsl
dec
and
mov
sbb
xchg
lods
dec
and
mov
shrl
aaa
dec
subb
scas
pop
into
aad
loope
push
hlt
xchg
ss
push
adc
rcrb
sbb
bound
nop
outsl
dec
mov
mov
push
mov
push
into
in
sbb
pusha
cmp
sbb
sub
cmp
pop
loop
or
mov
cld
lock
adc
inc
gs
push
inc
xchg
adc
jmp
adcb
pop
fildll
inc
sbb
lds
adc
movsb
loop
movsl
push
xchg
cmp
pop
cmp
xchg
dec
stc
insl
xlat
cli
inc
pop
adc
fmull
out
stos
pushf
dec
mov
mov
fildl
jns
insb
into
ss
lods
xor
and
inc
add
pop
mov
add
stos
shr
and
out
jp
mov
lods
jle
loope
rcl
imulb
jnp
or
lahf
mov
jl
add
cli
ret
enter
inc
pop
pop
mov
mov
les
aas
adc
mov
lcall
sbbl
inc
xor
mov
jns
cmp
mov
xchg
shll
and
frstor
cs
adc
mov
shr
push
push
lds
add
sahf
or
sbb
leave
xor
ret
enter
std
jle
jle
mov
pop
fisttpll
mov
sbb
je
push
mull
aas
data16
mov
repz
jmp
inc
mov
xor
inc
pop
out
cmp
out
xchg
sub
stc
shrb
call
pop
flds
pop
dec
test
jne
test
push
push
mov
aaa
out
and
repz
ljmp
mov
push
add
jecxz
call
insb
movsb
inc
stos
cmp
aas
mov
pushf
xchg
jge
fists
sahf
pop
xor
push
ss
mov
sti
push
cmp
sbb
jno
icebp
add
fwait
insb
shlb
dec
rclb
lds
sub
mov
jb
sub
daa
cmc
dec
scas
loopne
jle
repnz
dec
test
aaa
jbe
sti
sahf
or
pop
jo
insb
xchg
xor
repz
pop
add
xchg
int3
push
inc
data16
xchg
je
mov
loopne
fsubl
int3
or
iret
dec
pop
imul
movsb
das
popf
fdivs
lods
sbb
aad
pop
dec
and
popa
jecxz
jo
addr16
sbb
or
and
in
jb
dec
add
xchg
mov
test
inc
aaa
mov
aam
int
call
add
xchg
push
xchg
test
pop
adc
mov
daa
xor
pusha
jecxz
cmp
cmp
lcall
shll
rcr
xchg
fisubl
movsl
roll
lret
clc
mov
cmc
call
or
lret
or
adc
xchg
add
js
pop
insb
mov
sbb
push
out
dec
mov
jno
push
push
jg
stc
cmp
js
jecxz
dec
or
pushf
ja
je
les
adc
jmp
jbe
shlb
outsl
mov
sub
jmp
sub
xchg
fiaddl
ja
aas
sbb
adc
lds
push
cltd
push
add
push
daa
and
loopne
push
adc
cmp
enter
push
pop
int
dec
dec
fs
fs
adc
pop
inc
pop
inc
daa
pop
inc
mov
lea
lcall
xchg
cmp
sti
out
mov
or
movsb
subb
call
in
fcmovb
gs
cwtl
push
xor
mov
xchg
bound
inc
in
mov
bound
test
out
ljmp
mov
adc
xchg
sbb
je
xlat
pop
xchg
shll
in
push
fstpt
iret
lods
push
inc
into
xorl
or
out
pop
push
and
pop
imul
rcr
mov
add
mov
add
lea
icebp
cmpl
daa
out
cmp
or
pop
push
mov
shlb
sub
mov
mov
pop
xor
adc
shll
or
shlb
xor
mov
pop
outsb
repz
imul
dec
jp
lret
sub
jecxz
push
sti
mov
xchg
test
xchg
dec
clc
mov
lds
jne
jae
arpl
and
sbb
insl
dec
lret
xchg
cmp
jp
outsb
fsubrl
jno
add
insb
mov
mov
mov
push
mov
xor
and
ja
push
and
pop
mov
add
sub
dec
rorl
dec
pop
loopne
popa
add
add
push
rolb
jmp
aas
jge
inc
xchg
pushf
and
enter
imul
ret
arpl
andl
cvtps2pd
inc
jns
push
pop
xchg
movsb
icebp
pop
adc
in
push
pop
outsb
mov
cmp
mov
leave
mov
push
and
add
gs
nop
popf
push
out
insb
lcall
dec
inc
in
pop
hlt
insb
or
jp
jns
cltd
jle
mov
jb
xor
mov
fldt
push
int3
or
popf
lret
sub
mov
enter
mov
testb
cs
pop
jb
out
push
clc
dec
mov
mov
loop,pn
pop
cmc
cmpl
cmp
js
sti
movsl
xor
in
les
sub
mov
adc
cmp
sbb
mov
stos
loop
mov
push
xchg
push
fnstcw
lret
push
mov
push
xor
out
sti
aas
js
dec
and
xchg
imul
add
bound
cmp
decb
scas
test
popf
dec
scas
das
out
cmp
jge
xchg
loopne
adc
mov
fucomip
testl
jg
sbb
sub
sub
jge
sub
fdivl
mov
mov
jg
jb
in
test
xchg
jl
aad
or
xor
mov
sub
ficomps
xchg
push
loopne
outsb
outsl
jnp
insb
lods
loop
jg
je
adc
into
fldenv
add
sbb
lock
jg
inc
ss
sbb
xchg
jle
cmp
sbb
hlt
leave
pop
andl
sbb
divl
arpl
dec
xchg
and
call
popf
add
pop
xchg
sub
and
push
test
scas
dec
fwait
loope
xchg
outsb
divl
dec
or
push
pop
fsubrs
and
xchg
mov
ror
je
out
das
imul
mov
fwait
pop
lock
push
stc
loopne
pop
popa
cmc
jo
mov
sahf
sub
out
mov
shll
pop
les
and
jmp
lea
mov
lea
push
or
dec
or
rol
pop
sub
xchg
imul
dec
or
lds
cmp
cmp
fimull
xor
movsl
inc
and
inc
cmp
sub
sub
ss
jae
lahf
aas
xlat
mov
cmp
mov
push
pop
sbb
imul
push
pop
push
je
pop
pop
cmp
mov
or
mov
cmc
cltd
xor
stc
cld
cmc
test
lret
and
jbe
mov
popa
mov
loopne
js
mov
jecxz
in
push
xchg
cli
movsb
and
repz
or
mov
lcall
push
pop
xor
xchg
loope
sahf
pop
test
clc
test
outsl
idiv
mov
lret
scas
or
ficomps
sbb
adc
iret
xchg
xchg
test
stos
push
shrl
inc
sub
addr16
and
add
jmp
sbb
pop
fiadds
jecxz
out
cmp
xchg
fnstenv
stc
das
test
and
push
and
mov
mov
loop
daa
negl
xchg
and
lock
xor
adc
mul
mov
ret
jge
fsubrl
sub
or
bound
popa
daa
mov
push
push
push
fsts
mov
data16
push
push
jge
sbb
hlt
loope
rclb
cltd
mov
push
and
dec
in
pusha
mov
loopne
xor
xor
sbb
or
cs
int3
ret
push
loopne
fwait
leave
push
inc
mov
inc
in
shrb
pop
push
out
mov
jae
stos
insl
cmp
movsl
push
iret
mov
mov
pop
lea
dec
mull
clc
sahf
push
xchg
mov
sbb
and
cmpsl
inc
dec
ljmp
sbb
scas
inc
std
inc
cmpsb
nop
push
xor
xchg
inc
jnp
lods
popf
sub
popa
movsl
cmp
sti
popa
dec
in
mov
and
xor
sti
lods
add
push
test
mov
adc
out
xor
mov
push
jl
cmp
pop
pop
imull
pop
inc
aas
ljmp
loopne
add
jbe
add
and
mov
xchg
and
push
mov
cmp
push
xchg
dec
dec
popf
loopne
out
cmp
push
dec
sbb
dec
dec
fisttps
stos
lret
xor
jns
sub
divl
mov
xlat
call
mov
int
xchg
push
mov
dec
into
or
loopne
mov
pop
popa
add
inc
pop
pop
out
xor
mov
scas
adc
das
inc
push
adc
dec
xchg
mov
or
cmpsb
xor
int3
dec
jg
into
mov
fdivrs
inc
insb
nop
gs
dec
mov
push
rol
leave
push
mov
cmp
sub
int3
out
popf
pushl
test
mov
fldenv
lods
fcompl
rolb
cli
xor
pop
cmc
xor
cld
in
xchg
and
movsb
push
pop
test
adcb
int
mov
inc
sbb
jg
and
mov
push
popa
and
sub
adc
or
test
add
insb
xchg
bound
jp
push
leave
ja
adc
sbb
push
repnz
sbbb
xchg
push
dec
dec
popf
mov
out
out
pop
sbb
sbb
popa
cmpsb
fcmovnb
push
sbb
daa
mov
push
ret
adc
mov
pop
push
lret
adc
cwtl
jmp
mov
xchg
mov
jnp
repz
xchg
nop
loop
int
pop
adc
pop
stos
cld
mov
jne
adc
inc
fdivr
mov
addr16
gs
fcoml
lods
sub
mov
cmpsb
daa
or
dec
cmp
cmpsb
loop
jp
stos
xor
loopne
push
in
pop
push
lods
iret
mov
fs
pop
out
cmpb
movsb
or
testb
adc
cmpsl
push
xchg
js
or
mov
dec
mov
int3
xor
inc
adc
call
xor
das
jmp
pop
call
add
cmp
lods
or
jb,pt
pop
xorl
arpl
push
and
pop
rclb
lods
jo
sbb
into
stc
and
clc
xchg
or
cwtl
mov
push
mov
jbe
sarl
pusha
fisubs
std
mov
les
movsb
sbb
es
sti
push
dec
mov
mov
into
mov
repz
in
fwait
sbb
into
movsl
hlt
push
fxch
lcall
and
gs
in
loope
and
sub
mov
and
jnp
jbe
jae
fsubs
pop
or
push
adc
xchg
push
mov
out
xchg
repz
sbb
data16
jnp
out
cmp
std
and
pop
pop
iret
pusha
test
mov
in
aas
es
sbb
divb
orl
mov
test
cpuid
fsubs
in
inc
cmp
iret
add
push
xacquire
sti
inc
inc
or
pop
icebp
seta
mov
mul
cwtl
pop
jnp
mov
sub
mov
xchg
jnp
push
cmc
aam
add
lock
daa
lahf
dec
push
xchg
mov
inc
mov
and
test
sar
out
sub
sbb
adcb
adc
pop
push
sti
jp
xchg
pop
scas
mov
test
jl
jl
xchg
popf
mov
stos
lods
idivb
std
push
mov
scas
xor
aas
inc
sbb
pop
enter
dec
call
jp
outsl
aaa
inc
cmp
sarl
test
cmp
insb
mov
leave
shrb
lods
aaa
mov
mov
imul
cwtl
mov
ss
cmp
dec
dec
cmc
pop
cmp
cmp
pop
into
in
into
js
mov
daa
and
mov
pop
mov
jecxz
ds
xchg
lea
inc
bound
cmp
add
pusha
push
pop
xor
or
sub
insb
cmp
mov
shrl
or
fsubr
and
ret
rol
inc
jge
data16
imul
add
cmp
fmull
jae
push
test
pop
gs
pop
sbb
sarb
cmpsl
in
stos
jae
push
shlb
sub
mov
mov
std
inc
xchg
push
xchg
jmp
nop
adc
adc
pop
fwait
std
push
mov
cmp
fsubl
mov
add
shl
adc
xlat
arpl
cld
push
lahf
fs
lret
push
cmpb
imul
inc
popf
add
popa
mov
mov
int
je
outsl
shr
or
sub
mov
mov
and
enter
push
dec
pop
sub
add
in
fwait
cmpsb
xchg
dec
stc
jnp
cmp
jl
pop
xchg
sbb
cltd
stos
mov
fisubl
push
sub
cmp
push
imul
sub
sub
leave
xchg
mov
ss
jmp
repnz
xor
fsubrl
sbb
cmpsl
test
fwait
mov
add
mov
ds
arpl
inc
pop
ror
push
cmpsl
push
mov
push
sub
imul
push
fildll
out
cmp
fmul
xor
add
mov
in
imul
test
mov
jge
pop
add
pop
fnstsw
daa
push
sbb
in
out
negl
mov
pusha
mov
psubq
movsl
nop
cwtl
pop
fsts
xorb
outsb
mov
divb
iret
cmp
cwtl
les
inc
push
mov
js
shlb
dec
cltd
push
movsl
add
mov
subl
hlt
xchg
into
push
fistpll
mov
mov
mov
cmp
mov
pop
cmp
fidivl
push
in
push
popl
test
cmp
inc
jp
in
dec
sbb
push
jns
mov
arpl
and
in
inc
addb
push
in
test
stos
les
mov
adc
dec
lods
shl
lock
inc
dec
enter
inc
int
pop
dec
cmp
iret
sub
sti
inc
orb
ret
cltd
imul
jg
or
inc
add
xor
pop
mov
cwtl
fidivl
sub
imul
aam
pushl
sub
js
and
int
mov
lret
push
push
jns
cli
pop
xor
mov
das
movsl
inc
or
mov
jmp
pop
shll
test
popf
xor
inc
mov
push
adcb
arpl
inc
stos
xchg
cmp
lret
mov
out
pop
jge
push
inc
xor
test
mov
dec
mov
push
jle
add
cmp
xor
push
lret
fimull
or
cli
clc
xchg
xor
adc
xchg
or
repz
leave
out
insl
jmp
movsl
addr16
sub
inc
out
adc
jns
pusha
add
or
mov
cmp
jp
mov
xchg
adc
cmp
cmpsl
xchg
jge
inc
loop
adc
pop
test
cmp
dec
jecxz
hlt
xor
mov
add
sbb
sarb
jns
cmp
mov
and
dec
rcr
in
mov
ficoml
jle
sti
and
push
test
mov
gs
jmp
fcompl
adc
xchg
scas
sahf
xor
rcr
add
sub
fistpl
mov
inc
xchg
sahf
adc
ljmp
notl
or
rcr
sub
sbb
inc
mov
pusha
xchg
fmull
mov
packssdw
dec
add
push
adcl
out
in
mov
mov
push
aaa
sbb
testl
stos
hlt
pop
ds
xor
mov
outsb
mov
xchg
jo
fs
imul
fldt
dec
and
cmp
shrl
xor
out
push
daa
and
aam
addr16
mov
idiv
pushf
out
xchg
iret
add
cld
dec
mov
lcall
xchg
mov
fimull
mov
lods
jmp
mov
lea
es
xchg
push
in
sub
lods
je
bound
dec
sahf
lods
add
jae
xchg
lret
pop
cld
adc
or
inc
pcmpeqd
and
mov
and
or
dec
jmp
cmp
in
mov
out
orl
mov
test
inc
adc
mov
out
out
mov
lods
orl
sub
and
repz
inc
and
clc
rcrb
rcll
fptan
loop
adc
imul
sub
mov
xor
push
cld
inc
stos
out
test
dec
popa
fistpl
jge
scas
and
push
xchg
imull
ja
xchg
mov
ja
out
ud2
adc
jecxz
jbe
or
and
adc
mov
std
sbb
hlt
hlt
dec
adcl
cmp
inc
mov
out
out
pop
pop
and
fdivrs
out
xor
mov
mov
add
sbbb
hlt
dec
mov
jg
xchg
imul
aaa
pop
fwait
dec
and
call
cmp
mov
dec
iret
cli
mov
jmp
lock
test
vandps
jo
sub
insb
push
bound
out
jns
xor
xor
sbb
es
adc
out
mov
test
lcall
push
jb
out
push
stos
sysenter
fstps
and
mov
loope
push
jns,pt
push
add
lods
cmp
dec
fdivrl
lgs
xchg
or
pop
fisttpll
mulb
int
lret
imul
ljmp
or
fcomip
das
sub
mov
sbb
mov
jl
in
jnp
mov
inc
shlb
mov
lret
subl
lahf
jmp
cmp
xchg
adc
int
rolw
xchg
adc
sbb
and
push
push
aas
addl
cwtl
fcmovbe
stos
add
enter
ret
xchg
mov
or
test
les
fidivl
sbb
xlat
push
repz
aam
ja
js
push
jl
outsb
in
dec
enter
jno
outsl
movsb
loope
out
ret
push
mov
call
dec
push
mov
loope
popf
insb
jnp
into
or
loop
das
sub
out
ljmp
rolb
mov
movsl
jbe
rcl
cli
nop
les
mov
dec
mov
hlt
xor
leave
test
pusha
inc
fsubr
xchg
push
enter
out
xor
inc
fwait
xchg
dec
out
sbb
mov
add
int
mov
add
mov
and
lret
pop
les
test
sub
dec
scas
adc
push
or
lcall
sbb
xlat
push
fists
std
jnp
dec
mov
out
sbbl
push
mov
movsl
xor
iret
sub
mov
dec
popa
jl
mov
test
xorb
add
mov
jge
imull
sbb
adc
pop
ffree
adc
and
mov
cltd
adcl
ds
mov
xor
aad
mov
sub
xchg
shll
mov
mov
pushf
in
xlat
push
dec
and
lock
in
pop
cmp
dec
in
lods
sub
add
jnp
add
and
cs
adc
jge
dec
pop
sbb
out
out
mov
lret
cmp
jg
repz
int3
pop
pop
sub
push
cli
push
je
cmpsb
out
sub
push
push
loope
push
inc
mov
push
push
inc
in
xchg
aad
cmc
mov
ljmp
fs
fists
adc
lock
aaa
sub
inc
sahf
xchg
sahf
pop
ds
rorl
outsl
pushf
pop
clc
mov
sbb
adc
loop
mov
mov
and
rcl
cmp
and
shrb
insb
cli
psubsw
mov
adc
ss
and
adc
cmpsb
or
movsb
outsl
xchg
out
xchg
adc
jbe
adc
jns
stos
or
lret
pop
push
es
pop
ret
fwait
lock
jg
jo
inc
pop
shl
xchg
repz
lods
enter
int
mov
and
idivb
pop
aam
data16
popf
add
jge
lret
stos
adc
fwait
pushf
or
ret
or
ds
lret
mov
mov
es
mov
and
jmpw
out
cmpsb
imul
push
mov
inc
fistpll
adc
xor
loopne
inc
push
xor
das
repz
cmp
xchg
mov
das
outsl
mov
insl
cltd
sbb
push
fadds
inc
mov
or
gs
mov
fldenv
add
push
xor
and
dec
ds
fisttpll
dec
mov
icebp
insl
sbb
dec
add
inc
std
push
in
push
testl
xchg
iret
rcrb
int3
mov
subb
mov
jecxz
mov
je
pop
loop
out
inc
push
and
dec
mov
push
arpl
stos
ss
aad
scas
fdivs
movsb
sub
mov
adc
inc
xchg
aaa
arpl
rcrb
xchg
leave
mov
mov
lahf
scas
inc
or
sub
mov
scas
in
test
popa
ret
popa
clc
inc
lods
loop
xchg
push
xchg
add
shll
in
or
icebp
jnp
sarl
popa
aam
mov
jo
jl
jmp
gs
dec
inc
adc
pop
icebp
js
inc
lock
loop
jge
test
cmp
inc
enter
jbe
dec
ja
add
cmpsl
or
jl
cli
sahf
mov
shrl
imul
push
lcall
xchg
xor
orl
mov
cld
mov
add
rolb
icebp
in
dec
movsb
je
test
rcl
int3
in
mov
jp
leave
pop
rol
scas
addr16
fisubrl
movsl
in
and
in
push
lahf
xchg
fldcw
call
pop
jns
sub
test
pop
xchg
ss
xorb
jb
xor
xor
cmp
fstl
rorl
mov
movsl
inc
sub
push
movsb
pop
daa
mov
or
xor
cmpsl
push
jae
sti
jmp
ret
xor
push
xchg
push
push
mov
stos
dec
pop
xor
sbb
jb
mov
je
xchg
cs
aad
aam
js
shl
cs
pop
lods
adc
cli
ja
repnz
add
fsubrl
orb
orl
in
cmpsl
adc
data16
in
scas
lret
in
ljmp
or
cltd
sbb
in
jg
push
in
dec
push
sub
repnz
test
pop
sbb
mov
xor
push
sub
je
test
add
aad
xorl
inc
mov
push
iret
dec
arpl
into
inc
lret
jne
fadds
pop
popa
pop
rolb
scas
mov
call
sub
mov
jb
add
dec
mov
push
cmp
insl
sbb
mov
mov
je
lahf
mov
push
rolb
xchg
iret
fiadds
lret
mov
or
sub
mov
ljmp
dec
dec
aaa
pop
lds
pop
test
xchg
or
pop
enter
test
pop
mov
or
outsb
inc
out
pop
in
jge
dec
shrb
shll
test
pop
hlt
ljmp
mov
adc
mov
fisubl
xchg
iret
and
stos
scas
mov
je
add
mov
aam
stc
xor
push
add
sarl
mov
mov
lcall
clc
sarb
mov
or
out
cmp
xchg
or
int
mov
inc
clc
push
sub
scas
fnstcw
call
jns
call
inc
sarb
lds
cmp
push
loopne
dec
push
mov
xor
add
jl
xchg
mov
ret
jb
test
imul
aam
mov
xor
push
lret
mov
dec
xorb
mov
repnz
insb
mov
pop
push
add
in
outsl
ret
jge
mov
add
adc
fisttpll
or
pop
xchg
inc
add
jbe
mov
mov
dec
push
sub
pop
jnp
call
call
dec
mov
push
insl
scas
xchg
pop
pop
push
xor
push
cmp
xchg
sbb
inc
gs
or
stos
in
pop
mov
addr16
mov
mov
scas
lods
pop
mov
and
and
mov
or
sbb
jmp
lcall
cmp
dec
and
xchg
ljmp
pop
cmc
xor
or
cwtl
or
sub
mov
fidivl
add
jae
daa
out
inc
push
ds
pop
shl
add
cmp
out
sahf
popf
mov
or
fsubrs
sti
or
lock
cmp
sub
or
mov
jnp
xchg
add
sti
aam
xchg
and
add
scas
addb
and
out
cmp
inc
stos
sub
arpl
lcall
xchg
fildll
or
add
xchg
ja
sbb
mov
push
rorl
int
and
insb
mov
mov
add
pop
add
mov
and
call
jmp
cmp
test
cwtl
xchg
dec
or
mov
shlb
jb
arpl
sbb
shlb
or
xor
cld
inc
adc
testl
add
inc
xor
dec
mov
daa
push
cmc
fs
dec
js
pop
adc
mov
sbb
lock
pop
xor
sub
loope
xchg
inc
bound
mov
jecxz
pop
sahf
sbbb
xor
push
ja
int3
and
das
xchg
xor
add
mov
and
shll
fbstp
add
and
cs
loope
je
jo
addb
and
ret
sbb
cmp
lock
int
ljmp
ret
push
lea
cmp
into
mov
aaa
cmpsb
not
rol
mov
add
mov
xor
cmp
adc
xor
pop
insb
bound
or
jmp
push
icebp
gs
mov
sbbl
and
push
and
faddl
lds
ds
jmp
mov
add
pop
aas
inc
mov
lock
mov
test
xchg
test
adc
jle
mov
outsl
cmpsb
pop
iret
sub
inc
mov
test
aam
popf
pushf
popf
sbb
and
ret
xchg
mov
ja
das
lea
dec
dec
dec
in
sbb
inc
shrl
test
icebp
fcom
orl
fidivrl
jbe
mov
sub
jecxz
adc
inc
dec
stos
jmp
jbe
adc
decl
fcmovnu
mov
xchg
dec
std
jmp
arpl
in
xchg
inc
inc
mov
sarb
divl
dec
xchg
loope
xor
push
mov
dec
mov
push
mov
shlb
xor
int3
push
mov
xchg
or
push
test
dec
pop
sub
nop
xchg
push
or
adc
lock
adc
mov
in
lds
fsubp
mov
jecxz
je
dec
cmc
pop
fisubrl
inc
jmp
nop
sbb
lea
or
and
inc
adcb
pop
jp
or
repnz
xchg
insb
rcrb
cld
push
dec
jle
cli
stc
inc
int3
pusha
mov
lahf
cmp
sbb
jbe
jo
and
jp
mov
jae
jp
icebp
js
scas
into
repz
les
and
pop
popf
cs
mov
shrl
test
pop
or
cld
ret
adc
xchg
ret
shlb
jae
cmc
cmp
les
popf
xlat
pop
roll
data16
lock
ret
pop
fisttps
push
les
push
test
out
jmp
pop
adc
sbb
adc
xor
mov
push
add
mov
stc
pop
pop
or
inc
arpl
mov
xor
cwtl
or
scas
stc
fisubrl
xor
adc
xchg
lods
shlb
gs
les
add
xor
xchg
movsb
filds
push
loope
out
pushf
dec
in
pop
xchg
push
insb
ja
jae
xchg
push
aam
pop
xor
rcrl
xlat
dec
mov
xchg
xchg
add
lcall
mov
scas
jge
pop
fsts
cmc
pop
aad
call
mov
cli
dec
pop
nop
sub
cmc
insl
inc
imul
inc
sbb
add
movsb
mov
jge
sbb
jge
inc
add
dec
push
sbb
arpl
mov
mov
mov
out
inc
xchg
mov
or
inc
js
out
scas
inc
push
add
out
fnsave
iret
imul
nop
cmp
insb
clc
pop
inc
dec
jmp
and
adcl
push
lcall
fneni(8087
popa
call
cmp
lret
or
sti
fmull
inc
xor
mov
xchg
fsubs
fdivl
or
add
pop
ret
mov
scas
hlt
je
out
stc
adc
sarl
je
mov
xorb
imul
insb
loope
pop
jge
mov
and
pop
out
pusha
dec
xchg
jne
and
cmpb
sub
stos
pop
sbb
in
adc
xor
lahf
mov
sbb
stos
movlhps
cmc
cmpsl
push
sbb
fmuls
or
jmp
push
cli
inc
and
xchg
and
lods
push
lret
mov
xor
repz
sub
lods
lds
adc
dec
subl
or
xchg
mov
sbb
outsl
sti
adc
sub
mov
cmp
sub
add
pop
or
divl
arpl
mov
test
dec
popa
cld
cmp
cmp
xchg
rcrb
and
fistl
pop
inc
icebp
pushf
cmpsl
lcall
arpl
mov
sub
sbb
test
in
pop
mov
dec
or
mov
jns
call
mov
inc
push
bound
cmpsb
mov
inc
loope
dec
adc
out
jge
adc
push
pop
repnz
mov
pop
adc
or
push
es
fs
arpl
mov
out
jb
scas
lods
sub
aam
pop
xchg
std
cmp
push
roll
and
xor
jno
shll
xchg
out
xor
outsb
movb
push
xor
out
enter
jne
fsts
pop
lods
clc
xor
inc
mov
xchg
mov
mov
cmp
mov
mov
mov
push
mov
jl
mov
dec
push
or
push
orl
call
out
in
sbb
add
aad
or
mov
mov
stc
sub
das
jle
mov
jmp
sahf
cmp
sbb
dec
ds
jl
add
or
inc
mov
mov
ds
cmpsb
loope
in
out
in
nop
and
adc
dec
enter
loope
addb
ljmp
or
inc
cwtl
dec
adc
shrb
jo
dec
inc
mov
push
mov
inc
pop
fwait
xchg
lods
dec
cmp
mov
sub
scas
pop
subb
or
pop
daa
jp
std
loope
mov
daa
and
not
xor
xor
repz
xor
cltd
fimull
and
lcall
push
add
in
pushf
iret
inc
xor
dec
shl
int3
jno
sub
aaa
inc
das
cld
sbbl
das
fisttpl
loop
add
and
and
jb
mov
pop
js
out
imul
jne
cmp
mov
mov
jl
sarb
and
jno
mov
test
dec
pop
pop
push
adc
mov
cmpsl
pop
sbb
cmc
fnstenv
insl
fcoml
in
dec
and
pop
sbb
pop
jns
mov
mov
out
dec
mov
push
push
fidivrl
idiv
daa
lea
ss
add
or
xchg
or
xchg
pop
int3
ja
loope
sub
inc
adc
aas
sbb
in
ljmp
jnp
and
xchg
call
jmp
inc
int
pop
mov
pushf
mov
jl
fadds
cmp
adc
lret
pop
int
jmp
or
movsb
cmp
pop
xchg
sbb
subb
jmp
sbb
inc
cli
aaa
sub
int
in
mov
ss
scas
fwait
or
cmp
mov
jae
sahf
scas
add
xor
adc
pop
push
xor
jl
rcrl
add
punpcklwd
ss
xor
push
mov
lods
inc
ljmp
jb
popa
xchg
mov
aad
and
arpl
pop
push
std
fmull
adc
mov
jge
add
push
dec
mov
mov
sbb
mov
jge
and
fwait
and
mov
xchg
pop
sbb
jne
lods
cmpsb
fstpt
dec
cmp
mov
sub
movl
stos
xor
out
dec
add
jle
mov
outsb
push
fdivs
arpl
fldenv
mov
popf
mov
out
mov
nop
test
push
mov
cli
cli
repnz
fst
dec
icebp
test
ljmp
shrb
imul
fnstenv
pop
popa
clc
fsincos
inc
repnz
sbb
or
jb
adc
imul
ror
in
cmp
lods
mov
ss
inc
push
cmpb
xchg
movl
mov
lret
inc
fcompl
popa
pop
add
push
stos
xchg
push
push
and
in
fmulp
lock
adc
inc
dec
ret
jbe
pop
shl
lret
ja
shlb
fdivs
add
cltd
ret
pusha
loop
popf
or
adc
adc
lods
test
mov
jg
inc
fldcw
aaa
and
clc
out
stos
or
cmp
das
jmp
mov
scas
out
mov
adc
fistpl
out
add
dec
stos
xchg
dec
xor
mov
ret
mov
test
ljmp
in
jo
mov
scas
cli
es
xchg
out
repz
pushf
andb
sbb
imul
lods
or
imul
stos
push
push
icebp
fucomi
dec
mov
dec
jmp
test
pop
xor
nop
mov
sbb
add
iret
out
ds
aad
inc
js
std
bound
je
or
leave
rorl
xor
mov
clc
stos
dec
je
clc
mov
ljmp
and
jge
dec
mov
mov
inc
xchg
xchg
jb
sbbl
xorb
ss
ret
inc
movhps
cld
ret
push
cli
push
popa
pop
mov
mov
adc
sbb
mov
out
bound
xor
pushf
in
xchg
arpl
sahf
adc
incb
ret
sahf
test
addr16
sbb
mov
stos
stos
sbb
aas
fs
push
or
adc
pop
mov
sub
mov
mov
sbb
adc
std
in
pop
out
pop
jle
cmp
add
bound
ljmp
add
cmp
pop
pop
xorl
sub
mov
rolb
mov
sbb
mov
jl
or
insb
fsubrs
loope
ret
add
sub
xchg
orb
orb
popa
pop
jns
and
cmp
popa
jmp
cmp
sbb
mov
add
mov
loope
adc
mov
cs
ds
mov
xor
or
mov
push
mov
mov
xchg
ds
out
sub
xor
cld
mov
sbb
repnz
fists
xchg
test
icebp
int
push
cmp
jge
popf
mov
mov
sbb
pop
jmp
clc
popf
jae
int
outsb
pusha
lret
lret
mov
push
xchg
mov
aas
fmull
imul
or
paddb
adc
sub
or
dec
jae
add
out
cmp
rorl
xor
lret
adc
inc
dec
and
mov
push
test
jmp
lcall
ret
sti
leave
popa
sbb
sahf
mov
jge
inc
cli
mov
mov
lcall
sbb
cmp
push
js
sbb
insl
das
jb
jmp
pop
add
lret
sub
and
or
lds
sbbb
shlb
or
or
push
add
cld
inc
dec
pop
sub
jp
sbb
and
push
shr
test
add
cmc
cmpsb
pusha
arpl
lret
cmp
and
shl
sbb
lret
ret
stos
mov
cwtl
push
push
inc
xchg
push
int
add
test
jmp
and
mov
jge
repnz
cmc
add
add
jbe
xchg
mov
ret
nop
mulb
ljmp
je
xchg
inc
push
xchg
push
sub
sbb
mov
fldl
xor
test
mov
mov
iret
repz
mov
pop
mov
xchg
aad
fldl
bound
pop
fst
xlat
lret
je
cmp
mov
adc
daa
adc
dec
sub
es
lahf
into
mov
xor
in
sub
loop
call
in
inc
mov
and
movsb
in
add
pushf
ljmp
cs
mov
stos
pop
mov
aad
stos
loopne
xchg
push
jbe
lea
mov
inc
ja
cmp
mov
cmp
or
push
cmpsb
sub
jns
and
lods
repnz
iret
sbb
popa
add
je
jno
je
adc
jp
dec
dec
lret
js
stos
aam
roll
mov
mov
mov
pop
ret
dec
mov
or
xchg
aad
clc
sbb
sub
dec
pop
pop
mov
das
sbb
repnz
xchg
mov
mov
pushl
aam
mov
cmpsl
mov
mov
sbb
shll
push
sub
pop
inc
in
int
inc
popa
xor
shll
imul
or
lods
js,pt
mov
cwtl
lds
lret
test
push
and
cmp
stc
dec
mov
or
and
fnstenv
movsl
test
xchg
outsl
mov
dec
out
stc
or
ret
sahf
arpl
pop
xchg
mov
pop
dec
and
mov
fnstcw
pop
or
add
negl
sub
or
cmpsb
push
mov
fs
mov
cltd
stc
lock
cmp
popf
aad
jnp
adc
lcall
xchg
dec
jo
push
scas
out
or
pop
rclb
ror
imul
dec
mov
pop
pop
pusha
int3
pop
adc
arpl
xchg
imul
mov
out
add
jo
in
mov
sbb
out
std
mov
imul
pop
ret
addr16
add
les
cmp
out
rcr
xchg
ja
mov
cli
in
fcoms
adc
jp
and
out
aaa
and
aas
pop
subb
pop
outsb
out
pop
das
cwtl
int
and
dec
xlat
xchg
mov
leave
testl
mov
or
repnz
push
or
xchg
jl
push
mov
movsb
xor
adc
js
mov
pushl
xor
add
pop
cwtl
push
es
adcl
mov
lds
xor
mov
notl
clc
inc
xorl
push
adc
pop
orb
jle
das
xchg
cmp
xchg
in
dec
jne
and
inc
mov
es
cmp
xor
int3
sbb
push
pop
popf
out
idivl
fsubrl
pop
pop
pop
shlb
daa
add
dec
add
dec
stos
adc
adc
sbb
jp
xchg
jl
std
out
insb
xlat
jg
mov
iret
jmp
js
push
shl
push
push
fstpt
pop
mov
adc
movsb
fisubrs
hlt
in
push
cmp
dec
cmpsb
int3
lea
mov
les
pusha
sbb
adc
sbb
and
pop
lahf
jae
adc
sahf
fidivl
xchg
cltd
pop
cmp
sahf
adc
cmp
mov
xlat
sub
stos
jae
mov
push
lahf
jns
and
xchg
pop
mov
xor
pop
mov
leave
aas
loopne
jne
cmp
inc
dec
push
out
dec
push
lds
pusha
popl
dec
stos
movsb
test
loopne
adc
jb
mov
cld
inc
sti
xor
mov
insl
rcll
ret
pop
mov
push
in
inc
push
pop
and
push
mov
outsb
xor
aam
cmp
insb
movsb
dec
mov
aaa
mov
int3
xchg
sbb
sbb
pop
out
lahf
ja
lret
stc
popf
loope
inc
and
adc
cmpsb
xchg
andb
mov
or
jae
lret
mov
xor
lcall
cltd
inc
popf
mov
test
push
or
outsl
jmp
push
test
push
pop
and
hlt
mov
pop
arpl
jle
sbb
sub
sti
sbb
jge
test
jne
jns
dec
lea
imul
dec
add
add
mov
sbb
dec
mov
jge
fldl
fistpl
dec
jo
out
repnz
jmp
cld
pop
xor
xchg
nop
cmp
add
pop
fucomip
imul
adc
sub
cmp
mov
enter
lds
add
jecxz
orb
inc
lret
imull
or
lahf
pusha
arpl
ficomps
jae
mull
mov
jg
inc
pop
nop
aas
repz
jno
cwtl
push
in
xchg
add
mov
xchg
inc
test
jne
mov
in
fsubrl
mov
xlat
aas
jb
addr16
push
inc
aas
mov
mov
rclb
pop
jecxz
inc
ss
pop
or
sub
in
test
js
ds
inc
jmp
loop
sub
sub
arpl
jne
leave
ficompl
and
pusha
inc
subl
outsb
pusha
add
cmpsl
mov
mov
mov
test
ret
pop
nop
addr16
adc
repnz
js
hlt
in
mov
insb
pop
fs
cwtl
cmp
stos
pop
pusha
insl
std
neg
cmc
xchg
or
cwtl
mov
fcoms
fcmovbe
mov
push
test
adc
inc
push
aad
mov
cmp
sbb
sub
adc
mov
mov
loope
rorl
pop
cwtl
pop
and
out
cmp
dec
cs
inc
sub
dec
pop
and
movsb
inc
mov
clc
adc
sbb
lret
jmp
add
jns
mov
std
xor
jnp
fistl
mov
imul
rorb
lds
jl
pop
mov
jno
jg
out
jnp
into
leave
std
push
push
dec
sbb
lods
pop
and
push
mov
push
push
sahf
mov
jmp
mov
insb
lahf
adc
mov
jne
sti
jb
mov
pop
mov
push
pop
shrl
fldz
out
sahf
inc
outsl
aam
cmp
lcall
sbb
cli
inc
pop
sub
sub
and
inc
packsswb
loopne
aas
mov
out
mov
sub
and
hlt
pop
xor
pop
push
inc
xchg
loope
and
sub
lods
call
ds
xchg
or
out
jo
or
mov
add
inc
push
insl
xchg
jecxz
and
insl
jne
imul
lret
std
sub
add
loopnew
lcall
and
pushf
sarb
xchg
jno
cmp
xchg
push
mov
push
mov
xchg
or
js
out
add
mov
repz
imul
popa
xchg
cmp
stos
inc
cmp
scas
popa
movsl
pop
hlt
dec
xor
cli
sti
add
push
sub
pop
out
fwait
sbb
mov
and
or
hlt
push
cmp
clc
dec
repz
jae
cmp
inc
xchg
popl
push
mov
jg
cli
push
into
popa
cltd
jecxz
pop
in
lret
mov
decb
sarl
pop
mov
jl
les
rclb
xor
mov
dec
cmp
popl
mov
push
sub
dec
cmp
stc
sub
loope
ret
jge
and
outsl
adc
push
pop
shr
mov
ds
js
xchg
or
add
push
xchg
iret
inc
jns
data16
cmpsl
aas
lods
aaa
jecxz
xor
jns
es
inc
mov
popf
in
dec
mov
sub
popf
sub
xchg
sti
sub
jns
insl
xorb
call
mov
movsl
nop
aad
pop
inc
dec
rorb
cmp
xlat
ds
dec
push
rolb
xor
loope
mov
ret
jmp
push
neg
xorb
addr16
repz
xchg
out
adc
addr16
mov
xchg
jg
or
jge
iret
fs
aad
add
mov
mov
mov
int
sub
dec
in
sub
divb
enter
lea
xor
adc
cmp
fnstenv
inc
cli
mov
mov
dec
popa
testb
popf
push
addb
ret
dec
adc
cmpb
inc
adc
jno
std
push
leave
jle
xchg
mov
pop
int
rcl
outsb
mov
mov
hlt
mov
jae
mov
shll
lahf
ja
mov
jmp
mov
pop
aam
or
mov
push
je
fdivl
dec
sbb
jns
xor
pop
popf
loope
sbb
andl
std
cltd
adc
movsb
ud0
jle
daa
sub
mov
mov
push
out
jge
mov
mov
mov
sbb
sbb
and
mov
js
mov
aaa
sbb
dec
dec
gs
inc
notl
addr16
test
cmp
aas
sbb
jb
imul
mov
sbb
xchg
push
fisubl
shl
mov
xor
xchg
pop
adc
lds
jne
mov
jmp
mov
out
jo
out
and
xlat
pop
add
mov
cmc
xlat
mov
adc
imul
xor
lock
sub
in
cmp
cwtl
fdiv
ja
xchg
jnp
imul
daa
jbe
stc
loope
imul
lea
lods
shlb
cs
sbb
adc
mov
ljmp
loope
adc
arpl
ds
les
adc
adc
icebp
xor
int3
popa
ficomps
sub
sub
and
push
clc
lret
cmp
inc
dec
hlt
ja
inc
popf
repz
insl
sbb
loope
movsl
cmc
adc
sbb
push
loop
xor
aaa
sti
adc
dec
loopne
daa
adc
cwtl
sub
and
adc
pop
dec
xor
insb
mov
jnp
dec
mov
push
mov
sahf
dec
jne
push
shlb
sbb
xchg
loope
inc
inc
add
outsl
lret
sub
cwtl
out
jae
pop
adc
pop
das
int3
hlt
daa
pop
xor
sbb
push
cld
push
movsb
imul
jno
mov
jmp
dec
imul
inc
sub
xchg
mov
jnp
jp
or
rcl
or
std
call
jb
inc
movsl
fdivrp
dec
push
pop
bound
push
xor
mov
cmp
popw
gs
sbb
or
in
ror
or
push
dec
in
add
pop
movsl
aas
insb
sti
and
cmc
and
loopne
jmp
sti
ffreep
frstor
xorl
xchg
dec
adcl
out
out
sub
pop
outsb
mov
fdiv
imul
push
and
mov
inc
or
incl
mov
loope
and
sbb
dec
xor
pop
sbb
in
dec
and
insb
sbb
es
xchg
mov
cmc
rclb
mov
mov
lahf
movsb
xor
scas
test
pop
je
aaa
loop
nop
and
das
lock
sub
lahf
xchg
pop
push
les
xchg
pop
je
js
cmp
add
and
and
pusha
xor
outsl
out
pop
ret
fdivl
dec
push
test
jns
or
ljmp
lods
xor
jmp
lahf
sbb
push
cs
cwtl
jl
lahf
or
adc
xchg
int3
mov
jecxz
shll
mov
xchg
jle
pop
pop
mov
add
push
aam
adc
adc
jae
xor
pop
or
inc
mov
mov
adcb
clc
dec
jg
rcrb
mov
out
scas
rclb
adc
out
mov
sbb
mov
jmp
cmpb
shrl
sti
faddp
hlt
inc
test
int3
mov
addr16
mov
div
adc
push
out
jns
pop
hlt
repz
out
in
addr16
xor
sub
add
inc
sbb
fs
subl
and
jl
sub
pop
pop
lahf
dec
jmp
jge
lret
add
lret
out
pop
rcll
subb
or
sub
in
mov
sub
sub
mov
dec
push
mov
gs
mov
gs
std
xchg
sbb
imul
xchg
into
xor
call
das
ret
outsl
clc
jb
add
cmp
jae
in
or
daa
xorb
mov
cs
pop
pop
push
add
mov
dec
es
xor
pop
lods
and
mov
push
dec
push
jp
pop
repz
ret
adc
repnz
push
cli
ljmp
inc
jo
inc
pop
gs
les
cmpsl
dec
int
sub
jp
sbb
add
cmp
adc
xchg
into
in
add
cs
push
repz
xlat
sbb
mov
daa
sahf
test
lea
jge
mov
inc
cmp
add
and
movsb
iret
sub
push
jb
xor
or
push
mov
sahf
insl
pop
mov
sbb
lret
dec
inc
push
push
mov
xchg
pop
icebp
cmp
in
jmp
ss
jmp
pop
pop
add
negl
mov
xchg
jp
ljmp
cmp
and
mov
mov
lods
add
jo
xchg
dec
jle
shlb
mov
jl
add
sub
in
into
cld
sbb
xchg
dec
mov
jl
nop
mov
cld
aad
and
cltd
pop
mov
mov
mov
jno
pusha
pop
dec
insb
insb
push
stos
dec
fistl
push
cmpsb
dec
dec
shrl
imul
add
test
pop
push
and
loop
jb
xchg
scas
lahf
inc
push
fsubrl
inc
adc
fistpll
xor
mov
mov
push
adc
pop
add
js
int
enter
sub
xchg
shrl
imul
or
leave
aam
aas
mov
nop
or
mov
and
add
pop
test
mov
or
or
jle
pusha
shrb
sahf
fdivl
xchg
sub
sub
jne
mov
mov
sbb
xchg
sarl
xchg
mov
cli
fidivs
repnz
pop
dec
pusha
xchg
aam
xchg
pop
cmp
addb
sub
push
fidivs
sbb
leave
imulb
mov
cmc
mov
lret
push
sub
fwait
js
scas
jo
pop
and
jle
arpl
xor
mov
push
pop
push
iret
xchg
icebp
adc
addr16
add
push
jecxz
push
cmp
hlt
pavgw
push
add
and
inc
dec
rorl
pushw
sub
push
mov
jmp
stos
clc
lea
push
stc
fldcw
mov
sbb
add
pop
jbe
add
in
cmpsb
xchg
and
add
andl
out
and
adc
xchg
mov
or
and
sbb
loop
sar
sbbb
divl
lahf
gs
into
or
push
jnp
and
fucom
sub
xor
or
test
aam
pusha
arpl
mulb
xor
lods
push
in
stos
scas
sarb
push
mov
fwait
ja
pop
subb
xchg
sub
popf
xchg
mov
adc
into
shr
adc
in
pop
pop
cmp
sbb
jl
lds
insb
std
cld
or
xchg
dec
pop
pop
shrb
addr16
fcomi
xor
fidivrl
in
mov
rcrl
adc
ss
jbe
test
pop
sub
popf
lods
sbb
jbe
js
jge
jl
add
rcrl
adcl
xchg
insl
mov
ret
int3
arpl
out
andb
leave
cld
sub
adc
dec
sbb
iret
into
loope
sbb
jmp
fldt
cmp
mov
jns
xor
leave
test
inc
jno
je
insb
es
out
aaa
mov
pop
jo
sti
sbb
push
mov
xor
and
cs
dec
int3
pop
ret
xlat
fsubrs
jmp
sti
call
fstp
aaa
nop
daa
lock
lods
popa
pop
add
sub
test
and
jb
inc
and
pop
inc
xchg
sub
aas
fldcw
repz
pop
xchg
aas
roll
js
ffree
in
jbe
cmpsl
jnp
dec
pushf
loopne
stc
dec
mov
push
rcll
ja
adc
push
sahf
dec
jg
push
mov
push
clc
mov
push
lods
lahf
mov
leave
dec
loop
inc
imul
sbb
loop
add
jmp
fwait
cli
movsb
jae
pop
adc
into
xor
jecxz
xchg
pop
repz
lret
fyl2x
leave
int
shll
pop
insl
sbb
pushw
rorl
dec
and
cltd
inc
or
subb
shlb
push
test
lret
jbe
sti
jmp
mov
in
repz
stos
cmp
jmp
dec
inc
adc
rcr
or
movsb
fisttpl
pop
pop
jbe
pop
icebp
adc
into
sbb
sahf
cmp
es
int
test
out
fisttps
adc
sti
mov
mov
sti
fs
dec
ss
and
nop
jb
fisubs
shrb
xchg
stc
sub
sbb
cmp
pop
lahf
sahf
fildll
sub
call
cmpl
lds
cmpsb
clc
cmp
div
jle
pop
sbb
jecxz
adc
xor
jecxz
cmpsl
pop
sahf
adc
je
ret
inc
pop
sub
mov
jbe
adc
mov
mov
pop
lret
inc
repz
repz
dec
loopne
and
test
sub
mov
dec
dec
test
push
mov
call
int
out
xchg
out
lret
adc
or
push
shlb
popf
and
movsl
shlb
out
pusha
aam
shlb
notb
frstor
repz
movsb
js
test
mov
mov
pop
sar
out
test
pop
cmp
mov
mov
mov
cs
ret
aas
push
inc
sbb
jbe
std
jne
icebp
lcall
icebp
dec
out
sub
pop
decl
push
jo
mov
mov
inc
in
and
gs
push
xchg
fisttpll
cmpsb
mov
pop
jo
jge
push
xchg
imul
mov
or
push
jmp
lods
test
shlb
or
push
test
stos
push
or
out
and
stos
cmp
sti
filds
das
test
shlb
inc
adc
sbb
push
loop
add
addl
cmp
push
push
gs
fwait
inc
lds
xchg
sub
cmp
hlt
std
dec
ljmp
push
cmpsl
adc
scas
je
ret
movsb
jnp
cmpsl
mov
popf
in
jo
fisttps
mov
daa
test
mov
dec
jecxz
inc
lahf
mov
in
jnp
hlt
lret
sbb
dec
inc
sahf
and
or
jae
pop
fadd
aad
ret
fs
cmp
mov
ret
test
push
mov
jl
jbe
aaa
xor
lahf
push
xchg
aaa
mov
inc
stos
rcrb
jne
and
call
and
bnd
push
or
dec
movsb
or
xor
out
mov
cwtl
sbb
xchg
xchg
mov
sbb
cmovnp
or
push
addb
stos
adc
daa
or
or
xor
sti
sarb
sbbl
ret
cmp
lock
inc
dec
mov
cmp
ljmp
fsubl
dec
adc
xor
dec
jg
adc
flds
outsl
gs
jae
push
lods
loop
jne
std
lret
call
pop
ss
push
and
push
aad
ljmp
mov
inc
cmpsl
mov
insb
jle
cmpsl
outsl
xchg
addl
insl
push
fmuls
mov
add
xchg
ret
shrl
clc
or
jge
add
sub
mov
push
test
sbb
mov
out
mov
in
and
sahf
mov
cmp
sub
adc
lcall
adcb
fisubs
aas
pop
stos
pop
popf
jl
jns
dec
jmp
andl
nop
in
inc
push
fs
jge
adc
loope
mov
cmpsb
push
jno
stos
pop
jmp
rolb
jne
mov
fsub
mov
or
pop
inc
mov
bts
fstp
pop
sbb
fdiv
push
inc
sub
lea
cmp
pop
xor
push
cmp
addr16
add
scas
lcall
je
insl
fstl
inc
mov
movsl
lahf
test
xchg
outsb
js
test
cmp
stos
in
or
add
cwtl
aaa
loopne
fdivr
clc
sbb
cmp
mov
fwait
pop
stos
xchg
mov
imul
aas
out
faddl
iret
push
push
fnstcw
cmpb
inc
sbb
movsl
sti
pop
mov
pop
push
push
push
xor
push
xchg
jnp
lcall
mov
ja
adc
out
cmp
pop
imul
inc
jbe
cli
cmp
jnp
fsubl
ss
mov
and
jmp
adc
stos
pusha
pop
mov
cli
push
xchg
sub
fmul
out
push
push
imul
inc
ds
std
out
or
jg
inc
fsubs
push
add
pop
fmuls
cwtl
cmc
in
into
inc
sub
cmpsb
and
xchg
xchg
out
fidivrs
aaa
add
rsm
cmp
lock
test
dec
lahf
dec
mov
mov
pop
dec
and
std
pop
pop
mov
mov
bound
imul
xchg
mov
sahf
rolb
notl
mov
repz
pop
daa
in
fildll
mov
les
cs
ds
aas
pop
mov
cmpsl
shrl
inc
inc
mov
imul
mov
loopne
mov
cmp
xchg
sub
add
or
push
mov
pop
mov
pop
movsb
call
aam
adc
jecxz
jnp
push
dec
mov
je
push
fwait
mov
mov
outsl
into
stos
jbe
adc
inc
add
daa
pushf
shrb
jle
xchg
fadd
add
or
add
sahf
cmp
ja
sub
xor
jne
add
xchg
adc
cmp
es
cmp
xchg
mov
or
imul
mov
in
in
subb
cmp
add
shlb
inc
outsb
fs
movsl
xchg
jle
imul
mov
dec
jbe
add
ret
mov
or
int3
pop
movsl
insl
dec
xchg
inc
outsb
je
mov
ficompl
sbb
cmp
xchg
mov
xchg
push
add
cmp
int
int
xor
mov
aas
xchg
test
xchg
jmp
mov
loop
pop
jg
arpl
push
stc
push
or
mov
inc
jge
ljmp
cmp
stos
outsb
xchg
push
xlat
loopne
xchg
push
adc
call
stc
pop
mov
push
add
repnz
adc
push
inc
add
inc
adc
xor
lret
xor
mov
cltd
adc
bound
out
fstps
subl
insl
pop
adc
test
inc
mov
xor
xchg
sbb
sub
mov
push
div
cs
jnp
addb
cli
or
inc
js
jno
adc
jo
ret
jle
dec
jecxz
jecxz
or
jle
pop
sub
xchg
sbb
jg
iret
mul
dec
insl
mov
add
aad
fs
and
sarb
hlt
movsl
push
jmp
jecxz
xchg
in
pop
push
std
push
pop
jmp
testl
or
rol
xchg
adc
pop
out
stos
xchg
fwait
iret
sahf
pop
ljmp
sub
jo
sub
mov
mov
pop
sbb
pop
fwait
shll
stos
jmp
mov
cmp
add
push
mul
gs
sub
outsb
aad
xchg
shrb
shrl
cmpsb
jno
clc
test
cli
sbb
mov
sti
inc
loop
test
cmpsl
push
mov
sub
add
adcl
insl
fwait
les
mov
lods
sub
test
addr16
sti
sub
jne
arpl
das
insl
or
icebp
cmpsl
cld
fcompl
test
icebp
cmp
push
loop
pop
pop
pop
push
insl
cmp
out
xor
pop
mov
dec
into
pop
shrl
mov
repnz
push
pop
mov
repnz
popa
mov
push
clc
or
repnz
loop
and
jae
jmp
and
mov
shrl
adc
sub
xlat
in
shll
popf
sarb
and
fistps
in
jle
loopne
test
xor
cwtl
fs
iret
inc
adc
xchg
jl
in
je
outsl
and
mov
inc
xor
int3
inc
xor
pop
test
push
lcall
mov
enter
roll
mov
fstps
movsl
cmp
lods
movsl
mov
pop
insl
int
pop
test
in
inc
mov
shrl
pop
jge
lods
xor
xchg
add
xchg
aad
jmp
and
sub
pop
xlat
sti
cmpsb
bound
test
fwait
mov
outsl
pop
cmp
jp,pt
pop
rol
lods
call
test
and
das
movsl
push
leave
sbb
sarl
sub
or
and
and
mov
adc
ja
loop
mov
adc
adc
cmp
repnz
xchg
test
arpl
xchg
cmp
int3
fisubrl
iret
inc
shlb
mov
xchg
mov
mov
push
cs
aam
push
xlat
imul
adc
push
fnstcw
pop
inc
dec
dec
lea
push
adc
popa
xchg
scas
cltd
jo
mov
adc
add
call
adc
subb
xchg
test
fsubr
or
add
sub
jecxz
xchg
dec
stos
into
sar
adc
ss
xchg
ds
ss
sar
imul
or
call
icebp
xchg
jmp
sarb
push
test
mov
xchg
jge
or
xor
popf
pop
inc
push
inc
jp
push
clc
and
in
or
loopne
imul
in
pop
aas
imul
cmc
adc
or
mov
mov
sbb
inc
jmp
popa
xor
dec
xor
xchg
fdivrs
push
pusha
imul
add
leave
lods
pop
sub
pop
sub
test
int3
add
jl
popf
lcall
adc
cld
or
outsb
mov
out
fildl
pop
daa
shr
fistpl
insb
or
stos
mov
sub
xadd
mov
rcll
jbe
aas
mov
adc
push
divl
push
jmp
rclb
sub
inc
sub
push
mov
push
mov
dec
mov
loope
sub
out
aad
mov
cli
xchg
loope
rol
out
ret
inc
push
js
xor
and
shlb
sub
mov
dec
push
movsl
sub
ret
dec
push
jl
inc
mov
mov
and
or
aaa
aaa
mov
jo
inc
xchg
lods
in
into
mov
lock
fistpl
lds
sub
jno
cmp
or
mov
jl
call
inc
jnp
sub
and
dec
mov
push
adc
out
test
xorb
rcrb
and
cmp
std
js
pushf
shlb
push
cmpsl
xor
or
mov
lret
add
xor
sbb
jo
sub
cmp
xor
loope
imul
ret
pop
xchg
jbe
inc
in
rorb
lods
in
pop
std
filds
mov
notl
test
test
jmp
int
add
jne
filds
iret
rcll
je
ret
sbb
sbb
es
inc
mov
rolb
add
roll
mov
xchg
cltd
inc
xchg
adc
std
pop
lock
in
mov
cltd
push
sbb
xchg
in
push
inc
aas
push
inc
sub
jb
out
lods
mov
stos
insl
adc
xor
scas
arpl
fstl
add
in
rcrl
cltd
xchg
sub
fnsave
out
fcoms
lea
or
adc
insb
cmpsl
cli
ret
mov
push
sbb
sahf
mov
nop
jle
inc
push
pop
sub
cld
mov
pop
test
cmc
mov
subl
adc
les
add
push
stc
leave
lret
cmp
pop
mov
xchg
pop
jmp
xchg
inc
inc
outsb
mov
and
addl
ljmp
cmp
repnz
sub
out
xchg
adc
cmp
add
adc
mov
movsb
aaa
sahf
sbbl
ret
inc
inc
imul
pop
imul
dec
cmp
pop
hlt
dec
dec
sbb
jmp
and
stos
out
jecxz
push
iret
loopne
ret
mov
sbb
es
xor
jl
pop
imul
popa
in
xor
lret
or
imul
sbb
cmc
push
and
dec
sub
pop
xchg
js
seta
xor
int
repz
cmc
ljmp
arpl
jecxz
sbbb
xchg
cmp
and
mov
cmp
inc
inc
fs
mov
cld
movsb
and
stc
push
mov
mov
jecxz
push
fimull
and
mov
pop
mov
jle
aas
mov
mov
jns
dec
or
daa
hlt
pop
sbb
ret
leave
xchg
outsl
sub
mov
xchg
xchg
dec
ficompl
mov
mov
xchg
icebp
sub
ja
push
add
sub
dec
outsb
adc
pusha
mov
adcb
insb
or
mulb
push
inc
push
sarl
xchg
stos
jns
insl
das
orb
mov
mov
into
lock
sub
mov
cli
jae
or
xor
mov
pop
cmp
mov
jle
and
test
gs
mov
or
or
mov
or
insb
pop
push
clc
and
mov
icebp
movsl
ja
test
push
or
andb
and
ficompl
xor
sbb
cmp
xchg
and
cmc
fmulp
or
lahf
lcall
dec
fbld
jo
lods
sarb
sti
add
jno
fs
movsl
cmp
sub
cmc
and
ficomps
arpl
pop
mov
push
add
cli
mov
scas
inc
fcomps
pop
mov
mov
mov
cmp
and
mov
out
movsl
cmpsb
or
dec
mov
fs
lahf
scas
xchg
jb
xor
test
jae
enter
mov
add
pushf
cmpsb
cld
ja,pn
pop
and
mov
add
mov
int
sbb
shll
add
out
mov
add
add
add
xchg
repnz
sub
test
filds
xchg
mov
test
push
adc
popf
mov
push
cmp
loop
xor
pop
jns
cmp
lret
sar
movsl
or
les
pusha
scas
fadd
sbbl
es
adc
leave
idivl
cmc
and
loopne
push
out
enter
xchg
mov
cli
add
hlt
mov
and
sub
inc
sbb
mov
or
mov
and
aas
pop
lret
push
mov
dec
bound
xacquire
sar
mov
jge
and
add
fsubl
sbb
lahf
and
mov
ss
jecxz
jb
popf
lcall
push
aaa
push
push
pop
push
sahf
mov
sti
mov
push
les
mov
cvtdq2ps
dec
roll
add
movsb
sbbb
rcl
inc
push
leave
lock
loop
adc
adc
test
addr16
jae
daa
jp
jnp
dec
add
and
xor
push
dec
pop
pop
test
ljmp
sbbl
roll
popf
call
pop
addr16
sarl
enter
jb
push
xchg
and
test
xor
add
adc
mov
jae
push
cmp
fmull
dec
jno
repnz
push
insb
jge
test
fucomi
cmpsl
mov
mov
add
ja
sahf
rcll
fadd
sub
adc
stos
push
test
movsl
lock
and
pop
stos
mov
dec
adc
leave
shrl
addr16
xchg
cli
adc
add
push
cmp
call
fucomp
cmp
add
scas
jmp
or
ljmp
jmp
ja
nop
sub
sbb
fmull
sbb
lcall
inc
inc
inc
aas
and
pop
mov
popf
outsl
cli
lret
adc
add
sahf
pop
sub
sti
iret
add
xor
inc
sbb
insl
stos
pop
sub
adcb
repz
dec
adc
pusha
dec
inc
cmp
data16
gs
fistps
in
pushf
rcll
add
adc
sarb
mov
add
xor
add
jne
push
xchg
or
xchg
decb
inc
aam
test
into
leave
icebp
inc
imul
in
push
push
std
xor
loopne
cmp
lahf
shrl
stc
ja
jnp
push
sbb
rorb
je,pt
lock
lea
insl
adc
fiadds
iret
imul
pop
js
pushf
loope
and
enter
or
inc
add
or
push
cmp
ds
lods
popf
dec
stos
iret
and
push
insl
mov
xlat
das
into
jg
jnp
cmp
shrl
rolb
loope
xchg
sbb
push
jl
dec
cmc
and
ss
mov
or
popf
xor
rcl
test
mov
or
stc
push
pop
ljmp
mov
mov
or
insl
or
icebp
pop
sbb
pop
out
insl
jmp
or
cld
mov
testl
xor
rorl
xchg
incl
int
jge
jae
int3
ja
sarl
sbb
mov
jbe
enter
adc
mov
out
cld
xor
inc
ret
adc
dec
and
adcb
das
testl
enter
add
xchg
repz
into
test
mov
jge
nop
imul
jecxz
xor
dec
ljmp
jge
cmp
nop
fimuls
cmpb
jne
shll
jecxz
in
aaa
int
mov
sub
sub
mov
fcoml
imul
pop
inc
out
and
dec
or
sub
out
mov
aad
mov
mov
pop
jno
nop
dec
addl
insb
inc
cli
and
push
jp
insb
mov
cmp
fnstenv
jne
jle
std
mov
xor
jle
jle
inc
sbb
add
pop
hlt
loop
add
push
or
call
sbb
xchg
js
add
pushf
je
stos
jno
ss
or
in
and
inc
jno
clc
xchg
dec
xchg
jne
push
mov
and
mov
rcl
push
add
rcrl
adc
dec
xchg
or
out
pop
xchg
loop
inc
test
call
shrl
or
pop
and
adc
les
outsl
xchg
and
cltd
fcomps
popf
mov
into
sbb
mov
jae
pop
dec
ja
popf
adc
ret
inc
notb
subl
clc
mov
add
out
enter
loopne
sub
mov
sub
fcoms
push
or
mov
imul
stc
lea
sbb
sbb
inc
stos
mov
mov
insb
daa
leave
xchg
inc
or
sub
lods
sub
movsl
jbe
pop
or
dec
mov
das
xchg
adc
mov
lret
dec
int3
jae
dec
mov
jmp
add
adcb
loope
xor
daa
stc
ret
into
mov
std
adc
push
push
cltd
mov
popf
mov
mov
xchg
div
fldl
dec
inc
loop
cs
xchg
lret
je
loopne
outsb
pop
jb
pop
in
mov
jg
sbb
inc
insl
mov
push
test
test
repz
pop
stc
mov
xor
cmp
sti
cmp
push
cmpsl
cmp
push
lds
adcb
fmuls
add
add
and
ret
imul
and
mov
jmp
cmp
out
cs
gs
push
jne
andb
cmpsl
push
dec
and
out
mov
sub
jno
std
insl
outsl
mov
lods
pop
sub
pop
dec
idivb
aam
pop
cmpsb
mov
adc
nop
cld
and
mov
jg
adc
xchg
push
xor
xchg
out
scas
rolb
and
test
arpl
jo
into
add
fwait
cmpsl
push
int
jns
dec
sbb
or
int
aaa
adc
xor
add
or
sub
and
shl
ja
cmc
adc
mov
dec
fnsave
andb
or
lock
mov
xchg
pop
pop
jae
aam
cs
out
sbb
dec
in
xchg
and
aad
add
shlb
mov
ret
mov
std
sub
or
mov
sbb
dec
test
xchg
xor
popf
mov
mov
sbb
stos
scas
call
dec
xor
pop
pop
sub
add
adc
mov
mov
repz
adc
loopne
sub
add
andl
js
ja
int
call
daa
popf
mov
lods
adc
push
in
push
mov
cmp
sub
fimuls
jae
xor
sbb
xchg
sub
lret
das
pop
cwtl
rolb
aaa
int
sahf
add
push
rorb
or
mulb
sbb
repz
add
jp
push
int
mov
inc
mov
jbe
in
pop
jl
push
push
imul
aas
lcall
shrb
sub
insl
add
int
ljmp
sub
dec
ret
shll
repz
inc
inc
cmpsb
popf
out
mov
mov
lods
test
leave
loop
movsb
adc
add
or
pop
pop
cmp
cmpsb
mov
repz
loopne
xor
cmpsb
xchg
rcl
push
xlat
mov
mov
and
pop
fwait
push
dec
and
mov
test
mov
push
test
fistl
adc
imul
or
pop
outsb
aas
mov
mov
les
fucomip
call
in
int
shlb
sti
lret
in
xlat
inc
sub
or
fisttps
mov
aam
cwtl
fs
cmp
xchg
loop
push
fs
push
scas
xchg
jg
add
cwtl
in
out
inc
dec
or
repnz
push
or
jp
aas
or
inc
dec
jl
cli
pop
shl
pop
sub
sbb
mov
xchg
js
mov
in
mov
mov
je
xchg
pop
cmp
aad
xor
mov
ds
cmp
cmp
dec
int
stos
js
inc
mov
hlt
call
push
add
push
aam
lock
add
mov
mov
pminub
mov
or
inc
or
clc
ret
pushf
sub
loope
adc
sbb
in
dec
lods
cs
mov
lret
repz
sbb
push
aad
arpl
clc
nop
sbb
push
mov
std
addr16
mov
pushf
call
lods
lret
jns
xchg
cmc
insb
sub
loopne
mov
adc
outsl
jl
xchg
test
mov
leave
sbb
neg
cmp
adc
xchg
and
mov
sub
rcrl
enter
fldpi
ret
mov
add
icebp
jbe
outsl
cmp
jmp
mov
insl
adc
fdivl
and
insb
adc
and
push
cmp
push
mov
pushf
loope
imulb
push
test
ret
call
sub
jns
pop
bound
pop
cmp
rclb
adc
fsts
inc
aas
or
or
cs
mov
xor
rorl
int
jp
add
les
mov
mov
mov
test
bound
cmp
push
inc
cmp
call
out
mov
lahf
ss
cwtl
into
mov
inc
fldt
mov
jg
mov
dec
jnp
jnp
mov
movsl
push
mov
ret
mov
push
dec
shlb
das
insb
fcomps
out
mov
xchg
push
arpl
aas
pop
or
dec
call
insl
lea
out
lock
test
jne
rol
ljmp
push
sarl
add
mov
inc
cwtl
mov
rclb
clc
mov
mov
jno
mov
dec
pop
xlat
mov
das
fbld
out
dec
loope
leave
movsb
out
icebp
sbb
adc
lods
sub
and
ret
es
stc
push
or
popf
jmp
xchg
shlb
cli
sbbl
adc
xor
sarb
and
enter
aad
adc
sub
imul
insl
ja
sbb
cmp
idivl
test
mov
in
xchg
out
icebp
or
pop
pop
add
cmpsl
loopne
lea
jle
movsb
shl
and
cmp
cld
test
clc
fidivl
std
test
leave
les
fildll
insl
jb
jno
jecxz
rcll
jmp
dec
arpl
aaa
xchg
cmp
fistpll
enter
jo
aad
testb
inc
iret
aas
sub
adc
dec
inc
adc
inc
fldt
test
ljmp
jmp
xor
shl
scas
gs
iret
push
stc
fimull
das
out
xchg
mov
inc
pop
stc
mov
push
movsb
cltd
push
add
fs
sub
loope
xchg
mov
call
push
decb
out
xlat
inc
jb
dec
dec
pop
shl
pop
inc
adc
mov
xchg
data16
sub
movsl
lea
cmp
ljmp
sub
or
pushf
push
cmp
inc
xchg
and
fsubl
or
inc
dec
insb
leave
imul
das
add
adc
pop
aam
add
sahf
jb
out
xor
pop
stos
decb
pop
pushf
aam
dec
dec
pop
mov
lock
inc
fldt
push
xor
or
outsb
or
cmp
testl
movsl
fldenv
fsubp
lahf
std
mov
cmp
and
scas
inc
xchg
es
leave
test
ret
and
push
lahf
aas
repnz
jnp
scas
daa
mov
jnp
pop
ficompl
pop
jo
dec
ficoms
mov
ds
mov
jmp
sahf
push
ljmp
mov
dec
shlb
sbb
idivl
ss
mov
subb
mov
nop
leave
pushf
stos
xchg
test
cmpsb
xor
mov
aaa
test
std
inc
dec
jmp
lock
test
jno
push
enter
sbb
inc
xchg
inc
stos
gs
int
xchg
fiaddl
idivl
xor
xlat
lds
sbb
push
cltd
push
fisubrs
jg
and
mov
aaa
lahf
dec
sbb
xor
repnz
pop
dec
fbstp
jo
and
adc
lret
adc
push
out
out
les
std
jecxz
or
aad
pop
and
add
adc
in
adc
pop
cmp
je
imul
jno
bound
push
inc
push
jg
aam
lret
mov
mov
bound
xor
cmc
add
adc
inc
add
or
jge
pop
sbb
xchg
cmc
jnp
aas
xchg
adc
pxor
add
push
inc
sbb
push
lds
shlb
out
dec
pop
fwait
push
cmc
pop
and
cmp
jg
mov
xchg
sub
jecxz
sub
pop
sbb
sub
shr
sbb
fwait
push
icebp
dec
sub
mov
fs
and
stos
gs
lcall
out
inc
adc
jle
jo
jmp
scas
pusha
mov
xchg
adc
push
dec
mov
sbb
mov
inc
lods
pop
inc
pop
cmpsb
and
ror
scas
mov
les
mov
insb
jp
xchg
out
mov
aam
in
scas
adc
inc
cmp
add
push
divl
xchg
scas
enter
mov
jbe
lds
sar
or
mov
mov
int
mov
mov
mov
xor
push
push
insl
xchg
fdivrs
fsubrl
int
rorb
das
repnz
ds
lock
ljmp
iret
mul
and
in
dec
fisubrs
jecxz
sbb
mov
sbb
shlb
xchg
test
jo
shlb
jg
xchg
sub
ds
sbb
push
xchg
shll
jne
mov
mov
adc
inc
sub
jo
inc
movnti
push
cli
movsb
adc
lds
cld
mov
jno
and
incb
sbbb
subl
cmp
cmp
sarl
mov
cmp
push
outsb
sbb
sub
sti
mov
fmulp
inc
cmp
lods
sti
mov
pop
mov
hlt
push
xor
and
in
jmp
mov
fdivrs
or
jno
outsl
pop
pop
and
sub
or
pop
mov
call
je
add
adc
xchg
add
jae
jmp
and
cltd
call
mov
jg
test
sti
mov
sub
outsb
adc
sbb
pop
movsl
push
add
je
fdivrs
or
push
aad
dec
push
jg
push
sbb
subb
jae
aas
test
mov
jl
mov
xor
mov
pop
je
sub
mov
sbb
popa
faddl
notl
fidivrl
sub
es
lods
daa
out
and
mov
rorl
jg
idivb
mov
arpl
dec
ja
mov
out
pop
out
and
push
pop
jmp
ret
cmp
sbb
test
adc
mov
jnp
addr16
inc
call
lret
inc
cmp
inc
add
push
fdivrl
js
cmc
xor
dec
dec
outsb
jnp
xchg
fstps
test
inc
or
sldt
dec
cwtl
dec
xchg
dec
enter
xor
lret
sbb
push
or
mov
xlat
js
mov
loope
mov
inc
jbe,pn
out
pmuludq
mov
nop
stos
sub
fidivrl
push
out
in
movsl
add
push
sbb
xor
into
lock
popa
mov
iret
or
inc
and
into
jns
adc
fs
iret
mov
ret
mov
nop
leave
adc
mov
dec
fstl
js
inc
insb
fucomi
lcall
and
sub
hlt
int
in
roll
sub
pop
loop
xor
mov
mov
sbb
pop
mov
inc
xchg
pop
adc
movl
orl
scas
mov
lods
sarl
xchg
push
gs
add
cmpsl
xchg
insb
inc
xchg
cmpsb
pop
inc
fimull
mov
hlt
enter
mov
cmp
int
in
icebp
cwtl
jo
nop
mov
pop
jns
jne
mov
mov
mov
adc
pop
jp
fisubrl
push
and
pop
xlat
xor
popa
fldcw
inc
mov
mov
jle
lock
in
or
lock
push
sbb
jns
lock
pop
call
or
popf
mov
xchg
ss
test
insb
jmp
add
hlt
xchg
scas
xchg
or
cwtl
or
inc
bound
xchg
sbb
fstp
pop
gs
xchg
pop
and
jo
inc
mov
mov
jns
mov
insl
shlb
lret
push
cs
in
pusha
nop
xchg
movhps
xor
and
mov
sbb
jmp
je
push
fcom
jmp
ret
or
xchg
stos
js
je
inc
sbb
or
pop
inc
sbb
inc
orb
adc
mov
inc
imul
subl
add
arpl
adc
pop
lods
xchg
aas
ret
sbb
pop
in
cltd
rcrl
repnz
insb
push
xchg
popf
mov
movzbl
cmp
dec
adc
icebp
popf
mov
sub
scas
fidivrs
aam
mov
jne
scas
xor
jne
repnz
sahf
push
xor
stos
lahf
rcrb
or
lret
icebp
and
addl
les
mov
dec
jecxz
ret
icebp
cli
mov
inc
repnz
sbb
rcrl
jae
icebp
xor
loope
push
jle
dec
pop
xchg
test
xchg
jns
jne
icebp
lret
imull
insb
pop
adc
jae
dec
mov
xorb
arpl
mov
inc
inc
cmp
lods
cmp
leave
pusha
imul
stc
lahf
fwait
mov
pop
jnp
and
icebp
fcomps
jbe
jmp
lods
fidivl
pop
dec
jne
jle
mov
lock
daa
xchg
mov
and
std
adc
push
add
cli
aaa
inc
xchg
sbb
cpuid
push
mov
rcll
scas
lret
mov
mov
dec
mov
mov
nop
fdivrl
clc
pop
pop
sub
sbb
jno
jno
out
daa
lahf
hlt
push
push
dec
es
aad
lods
adc
mov
inc
ss
xchg
notb
js
out
pop
ret
inc
in
outsl
xchg
vphadduwd
ret
adc
mov
mov
es
and
jp
imull
inc
cmc
lods
push
push
lahf
sbb
sbb
mov
addl
rorb
jp
xchg
cwtl
dec
add
ljmp
add
and
in
inc
add
repnz
pop
in
inc
mov
jne
test
je
loop
and
sub
ret
aam
jo
jbe
test
outsb
xor
sarl
mov
and
xor
dec
mov
jo
push
ds
mov
mov
imul
in
movsl
jmp
out
lret
mov
mov
enter
and
in
jns
inc
and
test
adcl
add
gs
xor
outsl
mov
pop
ret
dec
pop
int
stc
hlt
and
in
leave
stos
call
clc
push
notl
sahf
mov
inc
cmp
divl
lret
leave
mov
jnp
outsb
es
insl
jl
nop
orl
dec
jno
test
fsubrs
jns
pop
sbb
jp
hlt
or
or
test
pop
or
rcll
dec
and
repnz
shll
out
dec
stos
rcll
mov
xor
xor
je
je
test
leave
and
and
cmp
xchg
inc
adc
jmp
mov
into
into
mov
mov
cmp
outsl
bound
jle
add
xchg
cli
or
push
inc
fcoms
int3
ret
mov
out
sbb
inc
nop
push
stos
and
js
jecxz
mov
and
mov
cmpsl
sub
inc
add
xchg
mov
push
adc
hlt
call
mov
mov
in
movl
push
xchg
jb
inc
rol
mov
das
out
sbb
cld
pop
mov
movsl
loopne
fcmovnb
lahf
cmpsl
ja
leave
loope
filds
push
popf
xchg
repz
and
xor
sub
roll
out
shl
mov
xor
sbb
fbld
nop
jmp
test
push
nop
out
xorb
and
or
jnp
sbb
test
cmp
push
pop
stos
cmc
outsb
push
cmp
inc
stos
in
pop
push
clc
push
pop
es
inc
mov
inc
call
sarb
je
call
sub
repnz
bound
shll
frstor
xchg
jg
add
mov
and
sbb
movsl
and
lret
call
adc
or
fdivrs
mov
jno
sub
lret
in
insl
push
call
repnz
mov
ret
mov
cmp
test
xchg
sbb
mov
adc
fldt
popf
push
lret
mov
loop
dec
pop
jmp
test
ret
pop
lahf
mov
cltd
or
lods
mov
sbb
jle
xor
sti
push
test
add
insl
adc
dec
dec
jge
or
jns
enter
popa
loope
sub
adcl
ret
cltd
orb
inc
hlt
imulb
sti
pop
xchg
push
es
jo
push
mov
mov
sbb
cmpsb
andb
stc
or
jne
fnstenv
scas
mov
pop
sub
lods
cmp
fcomps
dec
rcll
mov
push
push
sti
lea
test
mov
adc
mov
pop
lds
push
push
pop
int
out
shl
sbb
stos
xor
push
cmpsl
push
cwtl
cmp
stos
push
insl
fs
out
sub
mov
pop
and
inc
lcall
test
stos
lahf
cmp
clc
es
push
dec
jmp
pop
out
sub
loop
add
into
cmp
mov
gs
xor
mov
dec
mov
popf
aad
in
or
xchg
icebp
sahf
push
repz
sbb
mov
push
sbb
lds
sbb
mov
inc
sbb
add
push
mov
fmull
daa
cmp
movsb
mov
cwtl
lret
in
iretw
mov
xchg
mov
fsubrs
or
fcomip
js
out
and
imul
cmc
mov
bound
push
sbb
fst
and
je
xorb
clc
jno
dec
mov
ja
mov
sub
sbb
inc
repz
andl
insb
lock
test
mov
pop
inc
je
inc
icebp
stos
push
aas
je
jecxz
jg
mov
dec
add
xchg
mov
mov
and
sub
push
dec
dec
arpl
sarl
jmp
outsl
ret
out
xchg
sbbb
mov
mov
jnp
mov
cmp
pcmpeqb
mov
addl
sti
mov
in
adc
gs
gs
sar
popf
fwait
aas
lods
pop
shlb
les
rcll
dec
sahf
fidivrs
cmp
repz
shl
vmread
jno
lds
or
mov
jp
lret
push
in
stc
in
sub
icebp
jae
stc
pushf
pop
adc
add
sub
push
es
lcall
rcll
cmpsl
lock
or
xchg
aas
and
push
ljmp
mov
cmp
mov
pusha
fdivrl
adc
imul
in
ret
or
aas
stos
xchg
subb
lahf
add
test
mov
ljmp
lret
ret
push
cmp
jo
lock
xor
and
inc
sub
ror
sbb
xlat
ret
das
das
push
ss
ffree
xlat
into
pusha
cmp
enter
xor
mov
jmp
cmp
ret
dec
stos
sub
out
or
popf
test
push
dec
ficomps
sahf
mov
sbb
push
ds
arpl
stos
xchg
test
inc
hlt
add
inc
add
test
cmp
ja
out
mov
and
xchg
add
fdivrl
sti
inc
rorl
cld
lret
test
stos
mov
xchg
shll
xor
mov
adc
sarb
scas
leave
jbe
das
sub
adc
sarl
dec
xchg
fildll
imul
inc
jno
test
loop
mov
lods
arpl
mov
or
and
lds
fs
stos
xchg
nop
inc
adc
push
cli
inc
or
mov
pushf
push
pop
cltd
std
mov
mov
ficoms
aam
insl
pusha
cmp
xchg
imul
adc
repz
jecxz
jge
lds
pop
lcall
pop
jb
push
lea
in
push
xchg
cltd
data16
pop
push
into
fstpl
nop
sub
in
sbb
mov
fidivrs
push
mov
fcoms
push
scas
mov
nop
push
cmpsb
jnp
mov
and
sbb
push
and
mov
push
in
daa
sub
stc
cmp
rcl
fistpl
or
xchg
mov
jge
ljmp
cmc
enter
jge
adc
pop
call
lds
mov
mov
lret
xchg
add
inc
and
cs
mov
add
rclb
sub
mov
loop
fs
xor
insb
aaa
jo
pop
icebp
sub
mov
js
repz
test
cltd
lds
cwtl
pop
lds
cmp
aas
into
or
add
cmp
ret
mov
test
jp
jmp
shlb
out
pop
jecxz
into
daa
adc
les
out
and
push
pop
das
xchg
cmp
loop
pop
mov
loope
cmp
cld
arpl
sub
outsl
movsb
or
and
inc
rclb
cmp
push
rcrl
es
aad
jae
fbld
dec
and
or
jecxz
repz
test
xorb
jp
mov
sub
out
fwait
jg
add
jae
lcall
add
mov
mov
jge
arpl
insl
push
cmp
into
dec
jg
sbb
sub
inc
ja
push
outsb
sbb
xchg
jp
push
in
and
mov
sbb
dec
shl
aam
cs
cmc
call
in
lock
sbb
push
and
daa
adc
jl
mov
adc
sahf
mov
addr16
sub
jbe
mov
pop
movb
push
outsb
ret
js
fadd
insl
dec
jmp
shrl
cmp
cmp
mov
je
inc
jo
outsb
xchg
das
dec
and
in
daa
insl
cmp
push
pop
jecxz
std
adc
dec
push
jp
xor
push
lcall
adc
xor
mov
jle
scas
int
loop
xchg
sti
sbb
or
ret
or
cmp
mov
outsl
jne
xchg
nop
ja
out
imul
ljmp
outsb
sbb
xchg
mov
ficoms
aam
shll
jae
ds
mov
add
mov
push
sar
cltd
and
jb
xor
xor
mov
jns
xchg
adc
mov
sbb
push
mov
test
add
push
jmp
int
mov
mov
loopne
inc
adc
inc
pop
and
push
sub
scas
pop
es
xchg
xchg
daa
lea
repnz
std
in
dec
sub
xchg
jne
stc
sti
iret
push
insb
sarb
pop
adc
or
fldcw
mov
add
xchg
inc
pop
mov
aaa
mov
sbb
lock
out
jo
xor
inc
mov
mov
sahf
sahf
sub
xchg
jbe
dec
rorb
call
jb
jp
lea
xchg
in
jmp
clc
dec
stc
mov
aaa
pushf
mov
or
jnp
mov
pop
mov
addb
add
xchg
pusha
add
not
xor
fcoms
popa
hlt
mov
jg
push
xchg
adc
mov
cmp
sbb
dec
outsl
shrb
fisubl
scas
test
sub
shrl
hlt
dec
hlt
mov
sti
mov
add
lock
xor
or
insb
mov
jo
pushf
inc
stos
xor
imul
nop
fcoms
in
jp
cmc
aaa
or
xlat
leave
or
cltd
cs
shrb
cmp
dec
mov
mov
mov
sub
test
jmp
ss
push
addr16
or
out
inc
lea
repnz
ret
xchg
lods
cmpl
in
sar
xchg
add
adcb
cmp
or
mov
pushl
cmp
mov
or
inc
push
adc
xchg
sub
orb
lcall
mov
pop
sub
jg
icebp
movsl
out
mov
mov
or
mov
icebp
mov
bound
jbe
add
push
jge
push
xchg
repnz
dec
test
cli
adc
inc
xor
into
lahf
lods
mov
shrb
pop
lcall
addr16
shr
sub
addr16
adc
mov
daa
aad
jg
test
test
cs
int
out
fsts
mov
cmp
data16
and
movl
pop
lret
rcrl
or
nop
sbbb
xchg
fistpl
cmpsb
xor
mov
cld
jle
sarl
cmpsl
je
mov
jge
fldl
fcmovnu
stc
mov
mov
andb
sub
mov
pop
insl
addb
inc
pop
push
add
mov
cmp
pop
test
mov
test
mov
xchg
inc
in
ss
mov
ja
roll
jnp
cmpb
enter
scas
jno
push
adc
std
mov
and
aad
inc
mov
rclb
addr16
popf
int
rcrl
nop
push
mov
iret
jae
scas
cmp
aam
mov
push
gs
stos
movsl
mov
mov
test
or
ss
lock
or
test
arpl
jecxz
mull
jmp
or
repnz
addb
add
mov
bound
rclb
jl
push
add
xchg
mov
dec
mov
add
xchg
pop
mov
jo
mov
mov
dec
push
sub
shlb
shr
push
popf
or
mov
xchg
and
pop
xorl
repnz
mov
lret
pushf
adc
cmp
leave
mov
iret
mov
mov
or
jl
adc
dec
ljmp
lahf
lods
xchg
add
in
int3
das
push
pop
call
sbb
loop
dec
rolb
pop
cli
pop
daa
fwait
sbb
sti
sbb
mov
pop
push
stos
ds
shll
loop
push
xor
mov
and
testb
mov
cmp
mov
add
mov
mov
repz
pushf
iret
mov
rclb
push
xchg
aad
cli
es
and
mov
jbe
push
call
repz
xchg
aam
mov
aad
popa
sub
sti
outsl
cmc
pop
in
mov
xchg
hlt
xor
enter
sbb
fidivrs
add
or
pusha
dec
movsl
fcomps
mov
xchg
mov
ljmp
jns
neg
cmc
mov
inc
rcr
add
repnz
scas
ret
pop
pop
and
mov
fwait
adc
mov
mov
pop
mov
add
aas
ret
mov
inc
iret
movsl
ljmp
sti
andb
mov
mull
add
jb
mov
xor
in
mov
xlat
addr16
or
add
int
popf
fiadds
inc
mov
or
jo
dec
xor
imul
mov
fs
inc
mov
inc
fbstp
popa
outsl
rolb
push
inc
add
ja
test
fdivr
sbb
in
push
mov
icebp
pop
in
das
insb
inc
xchg
xchg
sbb
jp
cmp
pop
frstor
sbb
rolb
or
out
flds
lcall
rol
shll
arpl
and
add
cmc
int3
inc
jae
out
cmpl
idivb
cmp
test
mov
and
out
jg
push
clc
aas
lds
mov
mov
xchg
lea
stc
jns
test
pop
out
mov
xchg
test
jl
dec
jle
out
shlb
lret
into
insb
add
add
xchg
and
daa
sbb
adc
fsubs
add
out
xchg
hlt
pop
xor
cmp
arpl
push
and
jmp
sub
inc
mov
adc
adc
popf
xchg
out
dec
mov
scas
lret
or
in
out
and
arpl
loop
inc
movl
insb
pop
in
test
fcoml
insb
daa
add
imul
cwtl
mov
stos
add
add
mulb
mov
std
in
mov
cmp
pop
ljmp
stos
or
mov
xor
lea
adc
std
xchg
mov
imul
inc
js
fimuls
jnp
clc
loope
add
sub
and
dec
xlat
cmp
int
cmp
mov
adc
mov
mov
arpl
insl
daa
inc
fldcw
ja
adc
faddl
adc
push
nop
mov
pop
xor
cli
inc
push
pop
mov
fnstsw
imul
aad
or
insb
sbb
repz
lock
in
daa
popa
push
push
fmul
popf
mov
pop
push
ja
jno
mov
pop
xor
sbb
mov
sahf
mov
jo
outsb
pop
daa
xchg
loop
mov
mov
lret
popf
fbstp
push
adc
in
xchg
mov
jmp
mov
aas
roll
cmp
insl
cmpl
push
sbb
mov
ret
or
ja
cmc
rcrb
jmp
mov
xchg
cmpsb
fidivl
frstor
in
sub
cmp
xchg
or
lretw
es
cmpsl
and
push
sub
adc
pop
push
addr16
movsb
or
add
and
sbb
test
cmpsb
imul
popf
hlt
and
je
cs
nop
adc
mov
push
int
test
xchg
int3
mov
inc
hlt
lahf
mov
out
jbe
adcb
fldcw
jno
add
aas
cmpsl
test
fidivs
ss
cmp
sub
inc
dec
push
fld
cmp
pop
fwait
js
xchg
ficoml
mov
sbb
std
add
xor
movsb
fcoml
or
jns
or
iret
mov
mov
xchg
pop
mov
clc
fstpt
ds
insl
or
in
pushf
icebp
cmpsl
pop
push
inc
pop
sub
rclb
add
sahf
lods
xchg
xchg
cmp
jb
mov
test
mov
inc
adc
and
sub
stos
mov
pop
aam
adc
sub
in
jg
sub
mov
xor
xchg
sub
icebp
inc
in
sbb
mov
pop
mov
add
pop
addr16
push
fmul
mov
xchg
pop
fiadds
data16
inc
fs
or
jg
pop
xor
ficoml
jl
mov
xchg
sub
iret
mov
adc
pop
cmp
xchg
lods
mov
ror
sub
lods
ja
pop
test
jp
xor
cmp
jmp
std
pop
dec
mov
sbb
inc
stc
out
pop
mov
clc
and
and
xchg
popa
jo
sbbb
mov
dec
mov
lods
test
xor
hlt
xchg
out
aad
pop
jns
mov
mov
arpl
out
push
inc
mov
subl
out
stos
add
jmp
rcr
rorl
pop
push
sub
ja
pop
lods
sub
lods
rcll
call
das
xchg
hlt
mov
cltd
pop
pushf
push
mov
and
pop
mov
push
pusha
jno
es
hlt
roll
shrb
shrl
out
lahf
xchg
sbb
and
adc
jecxz
out
ret
ja
jecxz
rorb
icebp
icebp
loopne
push
cwtl
mov
movsb
out
mov
lods
or
jmp
or
rcrb
jno
xchg
or
cmp
in
sub
xchg
out
sub
mov
adc
lret
dec
shrb
in
and
int3
outsl
inc
cld
das
inc
ja
push
pop
data16
stc
loope
add
xchg
add
fdivrs
pushf
in
or
pop
pop
inc
sti
xor
shlb
cmpsl
push
mov
imull
and
mov
repnz
test
mov
test
sbbl
inc
out
push
inc
movsb
enter
dec
mov
sti
jbe
or
notb
mov
jno
xchg
mov
fdivrs
cs
scas
test
in
mov
fs
push
xor
cld
test
mov
add
cwtl
cmp
leave
je
and
mov
mov
pop
cmp
out
cld
cmpsb
fisttpll
pushf
lret
cmp
sbb
and
mov
int3
jg
ret
aaa
push
pop
jmp
sub
jl
pusha
ret
repnz
dec
cmpsb
cltd
sbb
repz
pusha
dec
mov
cld
mov
mov
fadd
inc
mov
xchg
out
movsl
nop
repnz
inc
pop
notl
jmp
nop
cwtl
das
cmpsb
ja
lea
int3
leave
enter
aad
and
jno
test
mov
jg,pt
pop
mov
mov
jg
cmp
sahf
leavew
sbb
mov
stc
dec
sub
arpl
sahf
in
sarl
lock
pop
lds
jg
adc
dec
das
lock
cmp
test
sbb
mov
mov
addl
mov
sbbl
addr16
lcall
and
dec
adc
adc
pop
rcll
push
mov
sub
mov
loopne
adc
sbb
out
adc
std
sbb
push
adc
scas
mov
loope
out
adc
adc
or
rcrb
dec
jne
test
and
add
lcall
pusha
leave
js
loopne
scas
cmpsl
lods
xchg
jns
and
mov
ja
in
sarl
test
add
push
and
std
dec
sub
outsl
cmpsl
roll
lods
out
stc
cmp
shrb
jle
cs
popa
jae
jnp
pushf
daa
push
adc
mov
dec
es
inc
outsb
sahf
sarl
jb
mov
add
xor
cmp
gs
push
push
gs
andl
push
clc
cs
push
popa
data16
int3
ss
data16
in
fdivrl
cmp
mov
sti
cmp
rcll
dec
fmulp
stc
inc
shll
sub
xchg
adc
fsubrs
out
mov
add
and
push
insl
dec
outsl
frstor
je
push
rcll
test
mov
in
xor
in
mov
jecxz
out
push
dec
nop
and
xchg
aam
xchg
jnp
mov
xchg
scas
sbb
aas
test
pop
mov
mov
lret
jnp
inc
int3
rorb
mov
mov
dec
sbb
add
shrl
xchg
adc
jl
mov
out
cmpsl
xor
stc
orl
xlat
loop
adc
add
inc
sbb
loop
js
dec
fidivrl
inc
enter
dec
pop
enter
pop
jns
fwait
mov
inc
dec
in
add
xchg
pop
repz
lcall
shlb
jle,pt
mov
pop
mov
sub
push
subb
movsb
dec
or
inc
js
inc
repz
stc
popl
lcall
add
mov
inc
pusha
mov
orl
out
ret
push
or
in
cmp
out
pop
pop
jge
mov
xor
bnd
dec
jbe
inc
sbb
xchg
adc
adc
dec
adc
push
dec
in
lret
or
adc
inc
and
lret
pop
shr
inc
sbb
es
dec
mov
and
pusha
ljmp
daa
jns
mov
les
jecxz
dec
xchg
mov
xor
jg
sub
adc
and
pushf
xor
jo
jnp
push
repnz
in
push
loopne
and
fwait
cwtl
pop
cli
iret
pop
lcall
ret
sbb
iret
or
fdivl
push
pop
fstl
xor
cmp
push
ret
loop
fldcw
mov
sbb
into
mov
mov
jne
push
pop
call
cli
cwtl
stos
mov
or
popa
sti
add
das
or
sahf
xlat
sbb
mov
push
lods
pop
fcmovnbe
hlt
adc
clc
rcrb
pop
inc
aaa
lock
pop
rcr
pop
mov
test
xor
ja
shrb
out
adc
gs
lods
out
xchg
out
pop
rcll
jle
sbb
xor
lea
imul
jle
pop
pop
push
fldl
stos
addl
add
and
lods
je
dec
jo
test
pop
loope
mov
lret
cmpl
mov
mov
jmp
jno
and
insl
sahf
mov
xor
or
cli
mov
stc
jecxz
stc
int
adc
out
fildll
push
outsl
fcmovbe
add
mov
mov
inc
xorb
stos
jmp
jp
mov
jne
mov
outsl
mov
imul
scas
popf
mov
pop
adc
pusha
ficompl
test
xor
and
fists
cmp
mov
outsl
cmp
cld
dec
dec
xchg
mov
test
int
pop
cli
stc
mov
nop
sahf
icebp
pop
adc
fwait
mov
addl
clc
addb
push
jae
cmpsl
jl
xor
pop
dec
hlt
mov
loopne
cmp
mov
push
daa
hlt
call
outsl
mov
es
dec
icebp
out
jmp
sti
xor
pop
xchg
lcall
mov
in
fstpl
fucomip
sbb
imul
mov
movsl
test
idivb
aas
or
mov
mov
xchg
xchg
jae
dec
xacquire
cltd
add
add
lahf
push
add
inc
adcl
fdiv
xchg
add
jo
loope
mov
xchg
mov
dec
mov
cltd
xor
or
cmc
and
cmpsb
hlt
notb
fcoms
sti
jmp
inc
push
xchg
je
lods
cwtl
mov
mov
sub
dec
test
in
stos
loopne
or
xor
mov
hlt
dec
push
lret
cmp
fildl
addr16
insb
clc
pushf
xchg
cmp
add
daa
adc
out
das
cltd
mov
jp
js
and
mov
call
aaa
sub
sysexit
add
mov
push
mov
das
scas
ljmp
pop
inc
ret
or
sub
sub
je
out
fisttpl
stc
lret
gs
mov
stc
outsb
jge
adc
shl
inc
aas
jmp
scas
les
int3
insb
push
or
mov
sub
cltd
dec
pushl
cmpsl
push
or
enter
rorl
xor
xor
ljmp
jnp
push
sub
push
movsl
rolb
and
sub
jge
jne
adc
in
or
jmp
lret
sbb
pop
cmp
jae
loopne
mov
dec
std
jge
aas
ja
and
and
xchg
lcall
outsl
cmp
jmp
je
mov
inc
aas
mov
arpl
repnz
mov
push
mov
xor
jae
lahf
lods
dec
adc
das
mov
nop
in
sbb
dec
clc
xchg
push
sarl
fldl
test
test
fndisi(8087
push
or
das
inc
lods
test
mov
shl
inc
xchg
cmp
push
dec
in
xor
sbb
popa
dec
mov
movsb
pop
test
add
repz
sbb
aad
test
into
jne,pt
jp
shlb
jns
cld
pop
or
int3
push
sbb
jae
push
popf
or
rcrb
movsl
nop
push
xchg
jne
mov
mov
out
inc
movsb
xchg
jo
xor
fildl
es
jo
repz
dec
iret
inc
test
push
lcall
xchg
sbb
aaa
fwait
add
sub
cmpsb
jb
pop
dec
cmc
mov
test
ljmp
leave
daa
push
or
inc
add
es
in
inc
test
and
mov
adc
movsb
jp
xchg
hlt
xor
jmp
test
test
push
rclb
stos
xorb
mov
xchg
inc
jecxz
mov
sarl
and
fsubl
test
mov
push
pop
xchg
push
ds
mov
les
stos
fldenv
iret
jg
in
cmp
fcompl
add
loope
sub
sbb
mov
pusha
dec
cwtl
pshufw
sahf
push
sbb
pop
cmp
cld
inc
sbb
ja
int3
movb
inc
lea
sub
xchg
dec
int3
test
xor
and
sarb
pop
sub
pop
xchg
insl
mov
inc
test
aam
enter
lods
scas
mov
mov
inc
cmpsb
leave
std
pop
subl
add
aam
push
cli
sti
mov
sbb
xchg
sbb
imul
sub
test
jge
sub
push
jl
sbb
in
sahf
mov
int
cli
xor
xchg
dec
add
cmpsl
push
test
js
mov
rorl
push
cmp
je
scas
ret
sub
mov
jne
adc
mov
jb
ss
xor
mov
mov
lret
cmp
mov
xchg
push
rcrl
ljmp
ja
comiss
pop
jae
dec
testl
xchg
pusha
fimuls
push
xchg
stc
loop
dec
out
sub
insl
in
fldt
cli
test
les
pop
xorb
std
xor
jns
pusha
fidivs
pop
cmc
fstpl
mov
push
inc
nop
fistpll
sahf
mov
pop
cld
clc
or
dec
jno
pop
dec
push
adc
vcmppd
mov
imul
int
psubusw
lds
fnstcw
sub
mov
shl
mov
ret
jbe
in
lea
cwtl
adc
xchg
shrl
dec
inc
lret
inc
mov
fistl
incb
jno
mov
mov
jnp
mov
pop
insb
jle
sub
rcr
mov
mov
cmc
and
mov
jno
pop
adc
loope
cmp
rcrl
xlat
and
addl
xchg
fadds
and
loop
testl
xchg
pushf
cli
in
pop
lahf
mov
mov
repnz
stos
pushf
sbbl
adc
xor
mov
xor
mov
cmp
sub
mov
cmp
fwait
lcall
jge
xor
sub
fidivrs
std
add
jle
decl
jns
lcall
cltd
sbb
lods
add
imul
mov
push
in
int
mov
nop
or
pop
shlb
xchg
leave
stc
xchg
adc
insl
lret
sbb
testb
mov
inc
cmpb
push
aam
sahf
nop
mov
cmp
imul
in
stos
dec
in
imul
in
cli
push
fwait
mov
mov
cmp
adc
out
out
push
cltd
mov
mov
pop
aad
or
adc
rcll
adc
aaa
aas
xor
sub
cmp
nop
pop
xchg
xor
mov
decb
enter
push
jo
jl
loop
inc
in
cmp
mov
arpl
jp
mov
add
mov
fs
push
in
rcll
mov
fisttpll
pop
push
mov
loop
lods
jmp
xchg
mov
sti
push
movsb
test
xlat
push
fmuls
cmp
scas
xchg
mov
dec
mov
shl
loop
loopne
jmp
jmp
or
add
les
fisttpl
xchg
int3
lret
inc
sbb
je
cmp
push
xlat
pop
out
jecxz
cwtl
inc
sub
xchg
dec
insl
pusha
and
andb
mov
xor
in
xor
cmp
sub
jne
fisubrl
xchg
lret
sbb
and
xor
inc
mov
clc
xchg
jg
and
add
daa
in
xor
in
sti
push
jb
scas
cmpl
nop
pop
bound
sub
int
xchg
ljmp
insb
daa
xorb
and
add
mov
cmpsl
mov
jg
insl
dec
aam
sbb
clc
and
in
mov
add
adc
outsl
popa
push
sbb
cmp
mov
loope
jge
mov
inc
negb
push
push
cwtl
dec
cwtl
scas
mov
gs
in
jge
adc
push
mov
dec
fnstsw
cmp
hlt
cmp
dec
sbb
push
or
or
pop
shlb
ret
jbe
aas
mov
jecxz
and
jnp
daa
ds
push
ret
and
lahf
jp
outsb
test
imul
out
pop
cld
cmp
sbb
mov
cmp
mov
mov
xor
cmp
int3
lds
lcall
pop
mov
mov
out
sub
mov
int
dec
sub
jnp
ret
orb
cli
mov
and
das
xchg
sub
add
push
push
lret
jecxz
inc
adc
xchg
not
jo
inc
or
push
xor
jle
shll
sub
fiaddl
mov
pop
xchg
arpl
stos
xor
jge
jo
loopne
mov
push
dec
pushf
mov
jmp
mov
add
ret
or
fnstsw
sbb
pop
xor
call
loop
in
or
negb
xchg
push
or
push
xchg
mov
fisttpll
and
shl
outsl
outsb
xchg
out
dec
cmp
adc
ret
insb
repnz
mov
lea
push
cwtl
pop
fists
lods
ljmp
xchg
mov
fadd
lea
push
push
adc
sbb
loopne
or
push
cwtl
mov
push
jb
adc
hlt
mov
enter
in
std
pop
fwait
inc
and
popf
aaa
inc
xor
add
dec
add
outsw
jns
mov
xchg
test
push
dec
negl
loopne
ds
push
clc
rclb
xor
jno
das
jge
mov
out
xchg
pop
dec
subb
mov
neg
push
psllq
movsl
sbb
jo
jmp
xchg
xlat
jp
or
stos
and
push
icebp
mov
xchg
mov
pop
outsl
arpl
jg
push
bound
adc
dec
jp
push
dec
fwait
test
lds
xor
enter
rcll
dec
inc
mov
movsb
sbb
cmp
or
or
int
lahf
fwait
jne
gs
sbb
adc
lods
fmulp
jecxz
gs
rcrb
adc
ds
jo
adc
push
fisubrl
in
inc
xchg
jp
scas
pop
xorb
sbb
lahf
cmp
scas
mov
rorl
aam
imul
cmp
aas
inc
sarl
inc
mov
jae
out
adc
mov
stos
add
loope
sub
repnz
ret
scas
cmp
inc
and
cli
push
mov
aad
dec
lret
sub
lahf
movsb
mov
pop
push
sbb
cltd
gs
or
cmpsb
test
arpl
xor
mov
arpl
stos
in
lea
inc
mov
cmp
std
test
sub
addr16
mov
pop
mov
and
lock
pop
int
out
fcoms
inc
xor
clc
ljmp
cmpsb
aad
repz
jbe
inc
mov
and
sahf
mov
call
int
cmpsb
aam
sbb
popa
add
jecxz
cmpsl
cli
mov
sti
mov
mov
pop
or
inc
lcall
arpl
jns
fildll
mov
rorl
in
loope
xchg
sbb
dec
jp
in
jp
aad
std
inc
mov
xchg
outsl
push
ret
xchg
cmp
jmp
dec
subb
loop
lcall
aaa
loop
or
shlb
and
pop
or
add
push
pop
icebp
xor
js
and
in
dec
ja
pop
ja
movsb
daa
mov
xchg
test
jb
jns
pop
gs
mov
jns
adc
in
adc
std
adc
popl
push
sbb
cld
ss
jno
xor
mov
sbb
cmp
xchg
push
jne
jbe
test
mov
into
out
push
sub
cmpsb
fwait
dec
mov
popf
mov
or
enter
aam
jne
shll
pop
cs
adc
sbb
das
push
ss
rcr
xchg
arpl
fsubrl
cs
lods
scas
xchg
pop
mov
arpl
fcmovne
push
add
push
mov
jne
decl
adc
cs
push
and
sub
or
sub
push
out
sbb
scas
push
jmp
xchg
mov
bnd
add
sarb
pop
lock
mov
add
call
aas
sbb
add
adc
xor
addb
xchg
or
mov
imul
xchg
push
ret
inc
sahf
aas
fstps
movsl
lahf
and
outsl
add
out
out
cwtl
add
sub
push
add
push
movsl
add
movsb
pop
inc
int3
mov
mov
ret
les
int
jle
adc
push
das
clc
lods
scas
fimuls
hlt
fs
fbld
cmp
add
pop
movb
icebp
mov
xor
insl
lahf
cmp
pop
lcall
out
pop
dec
int
jge
cs
dec
test
adc
and
std
subb
fstl
stos
mov
stos
cmp
movsl
pusha
movsb
call
stc
xlat
sbbl
and
int3
in
sbb
push
icebp
cmp
mov
mov
test
fstl
and
mov
out
mov
jno
inc
xor
js
xchg
mov
xchg
and
in
ljmp
daa
jo
inc
lret
xchg
add
push
sbb
fnstsw
addl
lcall
lret
xor
jno
inc
mov
pop
sub
sub
mov
in
xchg
sbb
pop
pop
jnp
or
jp
push
mov
xlat
inc
imul
xor
leave
mov
testl
das
jg
fsts
xor
imul
aad
sbb
int
lds
gs
adc
pop
push
in
pop
popf
dec
sbb
mov
int
addr16
dec
jecxz
call
mov
mov
loop
xor
stos
jne
mov
push
popf
sub
test
div
std
mov
outsb
add
fmuls
and
sub
pop
mov
cwtl
mov
sub
fwait
pop
cmpsl
test
pop
xor
sub
inc
loopne
push
sub
rcl
pusha
xchg
testb
inc
mov
or
inc
mov
pop
int
fisubl
xchg
mov
xchg
iret
aaa
adc
push
mov
out
push
daa
jge
xor
push
in
jno
test
mov
cmovg
je
jno
outsb
mov
sbb
mov
dec
cld
mov
push
das
ss
push
pop
and
outsl
mov
or
rcrl
movsl
push
xor
xchg
jmp
testl
jbe
or
clc
jo
jp
popa
scas
cltd
jne
loope
sub
call
ss
inc
in
sub
mov
cli
jne
mov
outsl
out
or
inc
pop
push
test
sbb
jae
arpl
jo
pop
add
jnp
pop
adc
adc
in
inc
dec
pop
mov
sbb
and
in
cmpsl
mov
sbb
mov
ficoms
mov
mov
fcomps
enter
jp
lods
mov
insl
push
test
and
cmp
rcrb
xchg
or
xor
fcmovnbe
xor
dec
shlb
sub
sbb
jp
push
sub
dec
jg
test
sub
cli
std
adc
jge
fstpt
mov
dec
adc
jle
inc
fwait
rol
aam
lods
and
dec
xor
and
sarb
adc
and
nop
je
adc
xor
xchg
ret
mov
add
jbe
lcall
pop
cmp
sti
inc
xor
add
sub
jge
mov
cmp
or
shrb
xchg
push
adc
ss
mov
test
xor
sub
in
pop
insb
jb
lret
clc
shl
mov
mov
daa
inc
icebp
add
sub
or
fwait
popf
cmp
popf
push
in
fs
lock
outsl
aaa
inc
enter
xchg
cmp
cs
int
arpl
loopne
add
ljmp
aas
push
dec
mov
ret
mov
stos
sahf
cmp
mov
jmp
stos
fwait
xchg
test
xchg
sub
cmp
aam
and
fdivrl
out
and
dec
int3
hlt
iret
ds
and
push
popa
or
cld
xor
shll
mov
inc
push
sahf
fucomp
and
loopne
nop
dec
jecxz
xchg
cmpsl
fcoml
adc
aas
pushf
pop
imul
je
dec
in
js
mov
in
call
pop
sub
sarb
push
lods
push
xchg
xacquire
sub
push
addl
cmp
pop
mov
lea
inc
ljmp
mulb
push
dec
add
mov
sbb
and
mov
out
out
xchg
or
pop
mov
adc
sub
shrb
mov
mov
sub
inc
cmp
xor
jno
sub
cvtps2pd
popf
mov
ret
out
and
pop
insb
dec
push
mov
ror
mov
sbb
cs
push
cwtl
ja
jmp
dec
dec
bound
pop
dec
and
jns
insb
lahf
movsb
outsb
sub
lods
shrb
sbb
or
jmp
loop
insl
cli
lds
jb
mov
pop
leave
ret
shll
pusha
shlb
push
inc
mov
mov
xchg
int
xor
outsl
rcr
mov
xorl
ss
add
lahf
dec
shrb
ljmp
ja
sbb
inc
jp
mov
pop
gs
repz
int3
fidivrs
pop
and
scas
push
test
ficomps
jns
push
fs
leave
add
xlat
fistpll
in
jbe
stos
xor
fstps
push
ljmp
mov
lcall
lret
insl
sbb
mov
imul
lcall
les
jo
cld
xor
and
mov
movsb
stos
and
dec
mov
das
sub
adc
pop
add
pop
jbe
add
cmp
xchg
inc
push
int3
js
pop
adc
lock
cs
cmp
outsl
popa
insb
bound
adc
scas
lds
repnz
aas
adc
aad
cmp
stc
stc
jnp
iret
dec
mov
fdivs
xchg
mov
arpl
and
iret
sbb
xlat
or
or
cmp
and
push
or
mov
mov
out
insl
pop
je
xor
inc
sbb
std
pop
xor
test
test
enter
sbb
notl
bound
jb
add
mov
fcoml
testb
ljmp
cmp
or
cmp
scas
xchg
sar
jl
dec
sub
stos
gs
testb
pop
popl
push
inc
je
cmpsb
fnstsw
pop
jb
outsl
mov
je
jae
nop
adc
adc
into
xchg
and
mov
xor
scas
daa
mov
push
sbb
adc
outsb
mov
mov
inc
movsb
push
nop
jmp
or
adc
sbb
add
jne
sbb
scas
jnp
iret
jo
cmp
aas
out
mov
jne
scas
les
je
pop
dec
cmp
mov
adc
or
ret
push
js
xchg
adc
mov
mov
pushf
jmp
sub
dec
or
sbb
adc
ds
xchg
add
pop
lret
outsb
sub
xchg
mov
popf
dec
insl
dec
xchg
adc
sbb
mov
pop
ret
dec
cmp
notb
lods
add
es
addr16
inc
sti
je
mov
lahf
ss
lods
inc
movb
sbb
jmp
movb
ja
lret
in
adc
dec
lods
imul
add
xchg
dec
test
xlat
je
add
scas
test
ljmp
adc
fimull
xchg
cmp
sbb
push
inc
lods
pop
imull
or
jmp
rcrl
fisubl
adc
cli
lods
sbb
out
movsb
pop
adc
mov
pop
aaa
push
push
push
sbb
mov
cmpsl
mov
das
jmp
lahf
mov
xchg
clc
rcll
adc
adc
xor
faddl
adc
icebp
data16
sarl
scas
jmp
mov
orl
push
ljmp
xchg
test
inc
imul
out
sbb
push
jb
dec
insb
xchg
es
aam
pop
popl
cmp
fwait
sub
adc
ss
jbe
dec
loop
shlb
fmuls
and
or
and
or
or
fadd
clc
mov
xor
xorl
repnz
fmulp
cmp
shr
sub
das
das
js
mov
add
add
push
jnp
jnp
pop
sub
sbb
jg
mov
loope
push
pop
xor
inc
movsb
or
lcall
jbe
dec
test
data16
sbb
xchg
sti
gs
dec
rorl
mov
mov
adcb
or
jl
sbb
lds
pusha
push
mov
loopne
ljmp
daa
icebp
fnsave
imul
push
int3
xor
inc
aad
dec
scas
das
xchg
adc
sub
mov
dec
and
lcall
inc
pop
xchg
cmp
push
mov
pop
mov
pop
outsl
pop
mov
sbb
sbb
mov
mov
pop
repnz
dec
push
dec
lret
push
xchg
cwtl
movsb
xor
xchg
lods
inc
insb
adc
lcall
fdivrp
js
ja
loope
xchg
push
dec
mov
lock
das
sub
inc
xchg
mov
pop
ret
gs
ljmp
mov
adc
mov
ret
pop
xchg
xchg
push
inc
or
movsl
fldl
frstor
fsubrs
jns
outsb
add
dec
aaa
xchg
mov
movsb
sub
jne
test
pop
mov
pushf
cmp
pop
mov
cmpsl
outsb
ficoml
mov
xorb
ljmp
dec
or
jg
addb
push
nop
ret
adc
fldenv
stos
loope
push
dec
mov
inc
adc
inc
incl
fs
pop
popa
sub
aas
cmp
mov
add
sub
xchg
lcall
ja
ds
or
mov
mov
sbb
test
dec
jl
mov
loop
xor
push
lret
pop
pop
sbb
sahf
pushf
and
popf
mov
xchg
add
es
js
inc
sbb
in
pop
stos
call
test
pop
xor
mov
pop
jo
lods
lock
jno
jl
mov
jo
xor
or
cmp
into
dec
and
pop
dec
stc
add
pop
add
inc
cli
pop
sarl
push
xor
ja
popf
sub
sahf
jge
popf
xchg
fwait
adc
pop
mov
xor
or
pusha
mov
dec
fnstsw
cmp
or
ror
rcll
jbe
sbb
lea
clc
out
repnz
dec
cwtl
dec
fdivs
mov
es
movsb
mov
dec
hlt
mov
leave
xchg
sbbl
insb
fwait
loop
lahf
fwait
rorb
jae
lret
dec
xchg
rclb
loope
iret
lods
imulb
and
jbe
push
inc
and
push
mov
sbb
mov
jb
jl
lret
lahf
out
dec
sbb
aad
pop
dec
inc
pop
das
inc
js
pop
aam
cs
fcoml
lea
xchg
mov
mov
imul
int3
jmp
loopne
inc
out
and
cwtl
cmp
test
xchg
sbb
sub
pop
dec
xor
imul
cltd
stc
push
loopne
adc
mov
shll
pop
popa
lock
cwtl
lret
mov
pop
push
rorb
mov
pop
push
jne
jg
mov
jno
mov
test
hlt
divl
leave
lret
xchg
sbb
lea
outsl
jnp
aas
aaa
sub
pmuludq
ja
xbegin
sub
push
in
fstpt
fwait
pop
js
cmpl
hlt
adc
arpl
aaa
pop
adc
ret
clc
iret
sbb
test
mov
sbb
stos
inc
push
or
sbb
out
pop
aam
rclb
xor
decl
xchg
call
hlt
mov
orl
shlb
test
adc
fwait
icebp
ss
dec
fsubr
sbb
mov
jne
xorl
mov
xor
cld
sbb
cmp
cmp
lahf
stos
int3
mov
arpl
inc
pushf
adc
adc
leave
xchg
fldl
sub
push
les
add
jne
xor
cmc
sub
xchg
mov
pop
or
xor
outsl
mov
mov
jg
pop
inc
test
push
ret
pusha
pop
sbb
push
pop
inc
and
jmp
cli
cli
lods
adc
fnstcw
mov
push
inc
adc
arpl
and
mov
hlt
into
aaa
cmp
aam
jbe
jo
lcall
fsts
rclb
cli
int
xchg
push
sub
cmp
mov
jne
arpl
inc
pop
push
aad
dec
xlat
daa
jl
mov
sbb
push
int
jg
sub
adc
test
pop
ljmp
bound
mov
loope
cs
jl
in
out
hlt
outsl
cli
push
pop
cs
out
mov
cmp
sub
cltd
call
push
mov
rcl
mov
jmp
cwtl
add
push
notb
js
loopne
cmp
add
out
lret
rclb
and
jle
aam
out
pop
sarl
nop
lock
xchg
mov
das
aaa
mov
mov
cmpsl
insl
sbb
jp
push
fcmovnu
fdiv
and
jp
out
scas
push
scas
call
clc
sbbb
jbe
inc
or
dec
mov
and
and
test
add
dec
ficomps
pop
adc
push
out
push
out
dec
imul
stc
jl
test
xchg
pop
jp
jle
xchg
and
aas
and
cli
stos
xor
gs
mov
cltd
cmp
cs
iret
fwait
push
popa
push
dec
jg
or
movsb
jg
iret
pop
bound
push
push
mov
push
rorl
cmp
in
pop
push
sbb
jecxz
inc
mov
pushl
xlat
mov
lds
pop
ret
xchg
jno
xor
sbbl
cmp
flds
mov
mov
bound
jae
or
pop
test
std
mov
and
pop
add
nop
pusha
push
xor
daa
loopne
or
xchg
push
je
popa
out
lahf
mov
pop
ss
test
lahf
mov
sti
pop
iret
mov
inc
imul
mov
repz
xchg
daa
jne
jo
stc
xchg
mov
shrl
xchg
rcl
add
fnstsw
inc
mov
mov
sarb
mov
sbb
shr
jae
or
jae
ds
mov
xor
jb
mov
sub
aam
mov
inc
mov
sbb
jae
pop
data16
lods
mov
pop
repz
movsb
mov
and
lock
push
inc
and
fisttpll
and
xchg
fucomp
in
fsubrl
pusha
xor
xchg
jge
mov
shlb
xor
jo
lock
xor
pop
rcl
inc
into
adc
outsl
repz
fs
xor
adc
xchg
pop
int3
jbe
xor
sbb
mov
lret
cmp
stos
in
add
xor
sub
cld
aad
xchg
jno
fwait
push
push
pop
in
jge
les
mov
jmp
sti
or
das
add
insb
int3
sbb
clc
pushf
stos
hlt
and
inc
mov
sub
sub
mov
lods
add
in
fs
rcrl
xchg
jmp
out
xor
and
push
jge
add
ljmp
mov
jl
sarl
aas
rcrb
repz
scas
je
mov
mov
in
setge
inc
or
mov
in
call
push
lret
xlat
jae
outsl
sti
cs
dec
aas
mov
add
sub
or
or
jge
pop
mov
pop
xchg
mov
out
mov
cmp
jns
add
adcb
jmp
pop
dec
out
rclb
inc
cli
xchg
outsb
movsb
clc
sahf
push
push
mov
lret
lret
add
scas
fldcw
rorl
shlb
push
dec
pop
sub
sub
xchg
addr16
flds
mov
xchg
sti
out
sbb
xor
test
filds
mov
lods
sbb
enter
popf
sub
and
sbb
bound
cmc
repnz
mov
movsb
ds
jmp
lock
shll
inc
xchg
xchg
fstps
ja
sub
in
sbb
jl
daa
cmpsb
or
pushf
int
jl
and
fcoml
fldl
insl
pop
loop
mov
add
mov
icebp
das
mov
mov
aad
jo
mov
cmp
push
push
push
lret
stos
push
sti
mov
pop
ds
stc
mov
cmpsl
cld
inc
xchg
subl
ds
movsl
adc
or
mov
pop
mov
push
incl
jne
add
ss
cmp
jecxz
les
out
rcll
mov
push
mov
jge
icebp
pop
out
dec
sbbb
sbb
mov
movntq
shlb
push
pop
pushf
push
dec
dec
cmpsl
xchg
cwtl
push
lds
mov
lods
inc
leave
dec
in
pop
loopne
pop
jmp
leave
jmp
bound
mov
pushw
test
jo
lods
loop
mov
or
xchg
mov
inc
jl
jns
xchg
xor
sub
xchg
fistpl
out
mov
enter
jge
aaa
push
shll
cs
dec
cs
dec
xchg
dec
and
push
pop
mov
cmp
xchg
cmp
int3
and
mov
xchg
jne
das
pop
sarl
call
or
mov
jb
xor
in
mov
jg
push
cmp
sbb
sub
add
stc
mov
out
mov
dec
sub
insb
hlt
sbb
fbstp
subl
push
or
cld
idivb
xlat
mov
push
xchg
and
xchg
pop
addb
lret
mov
sub
push
xor
add
jle
sub
pop
adc
xchg
fs
aaa
jle
pushf
in
xor
jb
out
add
sub
pop
lds
aas
loopne
leave
cmp
test
sbb
jmp
mov
ss
mov
push
sbb
fs
push
adc
outsl
cmp
mov
cld
and
aad
sub
scas
pusha
dec
mov
mov
mov
add
fsubrl
jns
mov
adcl
sub
rep
mov
lret
jnp
push
push
arpl
add
test
test
cmp
pop
cmpsb
xor
arpl
sbb
iret
add
arpl
cltd
cmp
in
adcb
aas
rcr
dec
das
jne
inc
fdivrl
sub
aaa
adc
pop
cmp
aaa
add
cmp
jae
push
enter
les
stc
xchg
cmp
sbb
push
push
sbb
fldcw
and
dec
sti
mov
sub
push
jb
pusha
sub
and
mov
push
xchg
outsl
sub
sub
sbb
lea
push
push
dec
adc
push
cmp
push
jae
lods
stos
imul
dec
jbe
out
sub
cmp
lret
inc
adc
insl
or
sbb
rcrl
sbbb
gs
pop
sahf
add
dec
inc
mov
subb
push
clc
mov
in
fs
or
fidivrl
sti
push
repz
lret
push
mov
mov
mov
add
dec
add
std
daa
jecxz
add
pop
or
sub
add
xor
out
mov
fldl
mov
fidivs
sbb
fs
lahf
pop
cmp
gs
mov
pop
jge
fisttpll
adc
cmc
out
rolb
cli
fisubrs
loop
jae
push
jo
and
and
sub
adc
out
and
sub
paddsb
scas
adcl
jo
out
pop
insb
pop
xchg
xchg
inc
xor
cmp
sbb
ljmp
div
stos
sub
test
cmc
stos
inc
hlt
adc
jb
sbb
push
and
decb
sub
inc
inc
push
orl
clc
shlb
movsb
sbb
jae
or
inc
out
mov
xor
or
xchg
add
xchg
mov
aaa
and
or
inc
pop
dec
popf
ss
js
push
mov
loopne
or
in
shl
lahf
mov
rcll
imul
xor
cmp
lret
sbb
push
mov
cmc
mov
jmp
push
sbb
aaa
jle
sub
aad
in
scas
js
sub
cmp
jnp
mov
fcoms
pop
mov
add
mov
mov
xchg
call
push
test
lcall
in
test
or
dec
in
push
insb
out
je
add
and
mov
leave
add
inc
ret
xchg
dec
xchg
pusha
jp
int3
xchg
fsubl
jo
or
shlb
mov
je
pop
jo
push
mov
lret
cmpb
flds
int3
push
or
inc
sub
shlb
jecxz
pop
dec
enter
aas
pop
fists
test
dec
push
pop
dec
push
mov
fwait
in
test
inc
mov
add
inc
cmc
sub
and
outsl
pop
xchg
jns
or
xchg
cmp
and
sbb
ficoms
orb
xor
sti
push
fwait
cmp
popf
mov
les
mov
in
lock
les
mov
jb
fwait
and
adc
das
pop
mov
jle
sub
xor
inc
cs
mov
cwtl
fistpl
xor
ja
xor
push
out
popf
sarl
mov
popl
mov
stos
sub
xchg
jge
mov
sub
aas
repz
and
shll
adc
jmp
mov
aad
outsb
sub
add
xchg
push
dec
dec
in
fadds
dec
imul
mov
adc
push
cmp
cmp
movsb
adc
test
inc
pop
pop
xchg
lock
adc
xor
mov
and
push
push
jbe
xchg
xor
icebp
pop
dec
je
out
dec
je
mov
sub
mov
out
inc
xlat
ljmp
test
ret
jns
inc
and
dec
bound
shlb
mov
jg
sub
mov
cmp
outsl
pop
out
jmp
mov
aas
mov
sub
push
fsubrs
jg
aad
fcomp
add
sub
add
and
xchg
jb
mov
pop
jnp
jb
ss
cmpl
mov
dec
gs
into
cmp
push
lods
pop
jnp
pop
and
rol
arpl
leave
loop
mov
sti
push
push
jp
shrb
push
inc
pop
sub
stc
gs
ret
mov
pop
mov
mov
in
jns
sbb
and
int3
sahf
mov
mov
pusha
lds
and
mov
sbb
out
cmp
cld
sbb
mov
xchg
ss
rcll
shll
int3
lcall
sub
lcall
xchg
add
scas
push
mov
jge
mov
and
cld
xchg
stc
ljmp
shrb
mov
or
inc
in
loop
and
test
test
cmpsb
loopne
in
push
push
mov
and
inc
jmp
fsubs
out
adc
sub
ret
add
cs
jg
sbb
xchg
sub
pop
lcall
mov
lock
add
dec
in
xchg
mov
out
or
push
cmp
in
and
lahf
cmpsl
cmpsl
pop
pop
aad
mov
pop
in
inc
loope
in
ss
jecxz
rep
jb
mov
jmp
mov
adcl
adc
rorl
pop
mov
ja
pop
cmc
fstps
out
scas
popf
out
cmp
ds
mov
jle
and
in
insl
mov
data16
and
lds
mov
repz
and
stos
push
mov
mov
mov
jle
aam
jmp
jb
je
lcall
mov
lds
into
jns
cmp
lods
push
cli
test
sti
add
sahf
mov
fcompl
xchg
dec
sub
lret
sbbb
aad
sub
gs
pop
lock
add
pop
mov
ds
popa
xchg
ljmpw
push
cmp
mov
pop
cmp
pop
add
cmp
inc
xchg
dec
in
inc
xor
ss
in
nop
xchg
push
das
mov
dec
fisubs
mov
push
mov
ss
cmp
pop
jbe
and
cmp
pop
and
cmp
cmp
inc
inc
sub
mov
hlt
jns
xchg
inc
or
and
push
pop
mov
enter
mov
loopne
adc
cltd
outsb
mov
jbe
sub
push
sub
or
das
or
lds
mov
dec
aam
les
les
mov
sbb
jno
jne
daa
loop
cld
repz
mov
mov
rcrb
aad
outsl
insb
lea
fnstenv
cltd
pop
xor
jg
loop
lods
int
jbe
icebp
push
sbb
push
sbb
fstpt
in
pop
inc
dec
lea
push
sbb
shrl
std
popa
push
nop
fwait
aas
cmpsl
stc
jnp
cmc
sbb
fcmovnu
aas
imul
rcrb
jb
cwtl
lahf
xlat
movsb
adc
ss
jno
inc
test
shrb
cmp
jl
mov
jge
cmp
push
pop
mov
dec
mov
cwtl
idiv
out
pop
outsb
lret
es
out
mov
inc
and
fs
sub
rorl
cmp
add
adc
jg
je
pop
mov
mov
es
pop
jns
jge
push
outsb
fsubr
xorb
mov
fcmovne
push
cmp
jg
lods
mov
xchg
xlat
inc
fwait
mov
xchg
add
std
and
dec
mov
dec
add
outsb
jg
stc
hlt
and
lds
shl
jns
or
push
add
mov
sub
dec
jecxz
cmc
pusha
int
xor
dec
repz
push
movsb
xchg
loop
pop
jp
add
pushf
loopne
mov
aam
adc
mov
mul
dec
sub
fs
pusha
popf
mov
sahf
cmp
mov
aas
xchg
mov
and
pop
xchg
and
jns
cwtl
sahf
stc
mov
imul
pop
fimuls
dec
movsl
add
mov
xchg
jne
test
jmp
das
movsb
outsl
stos
loopne
push
ds
jecxz
xor
lret
dec
jae
sub
lock
dec
shl
push
repnz
mov
lods
cmp
mov
push
out
add
aas
and
adcl
stc
add
hlt
addl
push
movsb
and
push
jbe
adc
inc
mov
repnz
popl
jl
ficoml
add
mov
ss
dec
stos
xor
adc
jecxz
jb
stos
mov
insb
in
cmc
sbb
popa
fstpt
sbb
inc
xchg
pop
xor
xchg
or
sbb
shrl
mov
repnz
std
sbb
push
mov
pop
cmp
add
aaa
mov
add
daa
ficomps
and
in
inc
outsb
jmp
cmp
pusha
outsb
ret
imul
popf
jnp
push
xchg
hlt
and
data16
inc
adc
test
xchg
ss
xchg
xchg
push
lods
cld
vmread
sarb
dec
fsubrl
jge
jo
lea
and
add
imul
jne
mov
xor
add
fwait
aaa
idivl
jnp
add
fs
iret
mov
cmp
jno
sbbl
lret
cmp
jmp
xchg
mov
into
pop
lea
adc
xchg
jno
or
add
xlat
jne
outsl
ret
cmp
xlat
scas
inc
sub
inc
pop
or
movsl
notl
out
sbb
lods
idiv
out
test
std
insl
xor
cli
popa
bnd
cmp
pop
adcl
pop
arpl
out
mov
xor
mov
mov
or
adc
rol
je
cmp
js
cs
ljmp
cmp
outsb
mov
adc
aad
jb
push
xor
movsl
and
out
xor
push
aas
jmp
mov
aam
mov
add
in
std
sub
lea
pop
pop
nop
jb
and
or
sbb
and
nop
dec
cwtl
and
repnz
fsubrs
aam
ror
cwtl
dec
xlat
out
mov
mov
push
mov
xlat
sbb
cmp
ljmpw
pop
inc
cwtl
mov
rcll
or
adc
cli
pop
add
and
scas
push
aam
mov
pop
mov
inc
dec
or
addr16
sti
cli
cld
xchg
mov
push
ds
int
in
stos
nop
pushw
loopne
popf
cltd
fs
in
pop
xor
pop
pusha
lret
rcr
add
or
in
mov
and
repnz
lock
test
imul
sbb
out
xchg
push
rorl
dec
mov
cmp
adc
and
imul
pop
inc
mov
scas
cs
negb
cltd
lret
lret
dec
inc
fldcw
push
mov
mov
mov
and
jecxz
adc
sub
inc
cmp
mov
ljmp
int3
pop
push
cmp
dec
in
fcomps
sbb
dec
rol
mov
or
push
adc
push
test
loope
dec
sti
adc
push
fldl2e
aam
clc
movsb
sahf
movsb
movsbl
dec
mov
repnz
stc
xchg
aaa
cmp
inc
jg
or
add
sbb
push
in
sub
fidivrs
xchg
jmp
bound
and
mov
shrl
mov
mov
jg
in
sbb
adc
sti
fwait
ds
int
sbb
mov
mov
outsb
bound
inc
faddp
cmp
aas
sti
and
jg
xchg
mov
mov
dec
in
add
jp
sub
mov
xchg
cld
inc
lahf
jmp
or
das
hlt
lock
cmpsl
imul
cmp
mov
xor
pop
imul
dec
fisubrl
pop
out
out
mov
xchg
dec
notb
les
jb
xchg
jg
cmpsb
mov
jmp
adcl
notl
aas
dec
aas
rorb
mov
scas
fcomip
nop
add
leave
push
xor
addr16
imul
mov
ficompl
dec
sbb
jle
dec
mov
insb
pop
repnz
mov
outsb
xor
inc
rcrb
or
jne
jbe
xorb
push
dec
pop
loop
cmp
mov
mov
ja
and
sarb
jg
dec
arpl
roll
or
movsb
xor
test
xor
leave
adc
or
pop
mov
ret
cmp
xor
or
pop
loop
jp
into
ljmp
into
pop
ljmp
xor
stos
sub
jbe
jp
jl
xor
add
cltd
leave
xchg
outsl
shrb
jl
clc
xchg
mov
inc
jl
sbb
and
xchg
adc
adc
mov
outsb
and
gs
dec
pop
push
out
inc
imul
test
cmp
aam
insl
push
gs
push
repnz
ja
sahf
mov
sbb
mov
jg
and
jo
cmp
mov
testl
test
repnz
xchg
stos
mov
mov
pop
iret
nop
ficompl
stos
pop
dec
xor
push
ret
mov
mov
xor
adc
push
rorl
out
adc
and
adc
cld
dec
cwtl
jb
add
dec
lock
jno
add
dec
mov
sahf
push
dec
sahf
popf
xchg
mov
xchg
cmp
iret
jb
lods
mov
mov
or
jae
insl
sbb
add
das
shll
aaa
test
inc
movsb
sub
dec
cwtl
ljmp
je
lret
pop
mov
push
xchg
adc
out
sbb
int
ja
notb
sbb
ret
mov
out
mov
xor
jp
push
dec
js
sub
sar
sub
xor
ljmp
aad
incl
or
leave
idivl
addl
movsb
pop
push
dec
mov
pop
adc
cld
pusha
mov
jae
inc
jl
aas
push
mov
js
mov
push
imul
aas
popl
js
sahf
lcall
jo
mov
xchg
inc
and
inc
inc
xchg
ds
test
jecxz
mov
xchg
repnz
icebp
out
xchg
out
in
ja
jecxz
pop
xor
mov
adc
mov
sbb
add
negb
stc
je
cli
scas
xchg
push
cld
imul
outsb
sub
xchg
leave
xchg
sub
mov
jl
or
cli
dec
aaa
mov
iret
xchg
pop
jmp
ds
xchg
and
push
sub
lea
fldcw
pop
lods
cmc
mov
dec
aad
pop
js
pop
and
enter
cmc
xor
test
cmp
mov
mov
mov
ret
mov
cltd
sub
mov
cltd
mov
and
pop
jge
aad
in
and
and
enter
sti
movsl
push
mov
xor
inc
adc
fldenv
add
xchg
inc
sbb
mov
roll
shll
pop
js
daa
adc
dec
pop
rorb
ja
push
sub
xchg
push
cmpsb
push
aad
adc
lods
push
inc
movsl
cmpsb
jmp
push
ljmp
add
out
gs
sub
loope
cmp
adc
and
xchg
lret
rorb
fcompp
sbb
pushf
out
fildll
adc
push
sbb
cmpsl
sub
jno
in
adc
dec
xor
fadd
sub
xor
pushf
sbb
adcl
es
jne
mov
xor
fmuls
mov
push
hlt
xlat
nop
add
repz
sub
fdivrs
push
xchg
push
daa
lahf
lods
shll
out
push
out
jno
sarb
xchg
jae
fucom
pop
cmp
rorb
dec
dec
and
xor
loope
cmovg
das
popf
mov
push
ljmp
pusha
mov
orb
leave
in
int3
push
jo
je
push
daa
xor
cwtl
jg
fildll
ja
ss
sub
inc
out
sub
shr
push
jno
and
xchg
cmc
pop
push
jle
add
mov
leave
cmc
stos
movsb
and
mov
sub
ljmp
in
xchg
push
mov
push
sarl
jmp
push
scas
stos
add
addl
mov
fs
cmp
adc
shrb
pushl
jo
outsl
adcb
mov
test
xlat
call
cmpsl
fbstp
sbb
xor
push
mov
mov
mov
sbb
and
int
pop
add
aaa
push
scas
inc
mov
hlt
in
clc
bnd
mov
into
sbb
imul
cmp
in
mov
out
sbb
push
dec
cmp
mov
mov
jg
lret
and
push
int
sub
loope
push
imul
fwait
mov
ficompl
mov
dec
cmp
inc
mov
imul
int
push
faddl
mov
jne
cmp
add
or
push
ret
je
fs
xor
out
insb
lcall
xchg
dec
push
pop
scas
sbb
pop
fnstsw
adc
stc
jnp
and
dec
in
data16
inc
sahf
pusha
test
or
aam
or
jge
test
mov
xchg
mov
mov
decb
rcrl
xchg
shl
cmp
sub
cmc
aam
cmp
mov
xor
pop
dec
xor
jge
jne
inc
lock
cwtl
xor
and
prefetchw
or
mov
jns
mov
fsin
stos
dec
or
enter
lods
mov
jmp
out
sbb
movsb
ljmp
add
dec
jle
cmp
pop
fcompl
pop
add
jnp
push
inc
dec
int
sbb
call
jle
push
push
iret
jl
insl
sti
jmp
rcrl
lret
mov
cli
xchg
push
inc
adc
push
dec
ret
cmpsl
push
mov
scas
lret
mov
fnsave
mov
cmpsb
adcb
out
lahf
dec
testl
add
cmp
insl
jmp
sub
pop
or
loope
push
leave
cwtl
outsl
out
pushl
cld
mulb
sbb
pushf
jnp
mov
bound
jae
data16
test
sahf
sub
pop
inc
push
aad
adc
and
or
jns
leave
test
or
xorb
mov
fs
add
sub
cld
sbb
mov
adc
fldl
es
jns
inc
js
mov
sub
lods
push
mov
divl
jno
push
mov
cmc
and
mov
adc
stos
push
pop
lea
lcall
pop
pop
sbb
add
dec
sub
cs
jb
pop
out
dec
sub
pop
dec
sarl
sub
sbb
out
cltd
mov
push
cmc
jecxz
fcoml
orb
and
test
lods
movsb
je
enter
inc
mov
fs
je
popa
pop
or
jne
leave
add
xor
movsl
mov
scas
in
push
filds
and
sub
je
fnstsw
insl
lods
hlt
pop
and
sahf
insb
or
cmp
cmp
adcb
xchg
inc
add
inc
mov
or
inc
jge
mov
adc
pop
insl
sbb
cmpsl
mov
or
imul
cmp
sub
or
sub
push
mov
add
inc
push
or
not
sbb
jbe
or
or
aam
pusha
sub
pop
add
adc
cmp
neg
cmpsb
lods
lret
aaa
jp
ljmp
fcoms
adc
xchg
fucom
cmp
sbb
adc
mov
xor
movsb
mov
mov
push
cmp
pop
sbb
xchg
setns
fwait
or
xor
movsl
lea
xlat
inc
mov
jmp
ss
repnz
jo
dec
push
pop
arpl
push
ss
fstpl
inc
insb
cmp
aaa
adc
jge
aas
xchg
test
push
pop
fadd
fsubrl
in
mov
pop
mov
add
lds
push
outsl
push
stos
adcb
sub
ret
push
das
mov
or
lcall
jne
mul
sbb
addb
dec
xor
pop
mov
jb
mov
mov
iret
into
imul
inc
add
call
sbb
ficomps
push
jecxz
insb
mov
sub
xor
sub
stos
cltd
popa
cmp
lock
lret
mov
or
rorb
cmp
aas
in
leave
insb
push
jecxz
cmp
rcll
xchg
fwait
or
sub
pop
scas
jecxz
test
dec
ss
jl
jno
fisubl
jnp
inc
cs
dec
inc
cwtl
or
je
lret
dec
jbe
mov
mov
pushf
adc
rcrl
push
fdivrl
fwait
test
and
cli
inc
adc
loop
mov
fnstenv
adc
xchg
mov
hlt
divl
test
shll
ret
shl
xor
or
test
jle
sbb
loop
in
jnp
inc
sbb
xchg
jne
and
mov
daa
out
jno
pop
int3
xchg
imul
mov
mov
push
dec
sub
mov
mov
loop
fisubrl
xchg
ljmp
mov
and
fsubrl
jae
cmpsl
sub
jbe
into
inc
lock
cmp
mov
pop
xorl
pop
shl
dec
in
add
sub
mov
lret
enter
push
push
flds
rorb
shll
fidivrs
mov
push
cltd
jo
nop
pop
cvtps2pd
or
xor
lods
cmp
jae
mov
cmc
or
in
mov
pop
les
dec
mov
les
outsb
shrb
mov
pop
int
cmp
idivb
jmp
pop
ja
inc
mov
aaa
pop
pop
out
leave
test
jge
orl
mov
cs
xchg
js
cli
dec
inc
mov
adc
xchg
testl
movsb
data16
stos
hlt
in
sbb
add
inc
enter
ljmp
mov
aam
push
sbb
jo
sbb
mov
mov
mov
call
repnz
in
outsl
jns
mov
xchg
mov
arpl
pop
inc
mov
push
or
sbb
jecxz
seta
mov
push
mov
ss
fstl
orl
xchg
mov
out
scas
sub
and
mov
and
xchg
aas
nop
out
dec
repnz
out
stc
pop
popa
dec
das
lods
push
mov
out
add
mov
jno
push
mov
push
inc
jmp
inc
daa
call
fsubrl
clc
sub
or
mov
jle
push
pop
sti
outsl
pop
int3
aas
outsl
jns
pop
fstps
ja
bound
xor
lods
inc
dec
jo
push
mov
in
shr
popf
inc
hlt
push
sbb
inc
cmp
aaa
imul
movzwl
sbb
cmpsb
sahf
shl
adc
in
jb
lahf
mov
jecxz
fwait
cltd
pop
add
mov
out
jecxz
mov
jne
adc
cmp
mov
aad
lret
inc
lret
mov
dec
out
movsb
cmp
or
loope
cmp
imul
bound
loopne
sub
mov
xor
in
scas
jmp
ljmpw
fwait
inc
adc
aaa
mov
ljmp
mov
xchg
dec
fs
addr16
iret
dec
mov
pop
decl
pop
mov
call
in
test
jp
jmp
cmpsl
pop
xchg
push
cmp
pop
xchg
xor
xchg
aad
fucomi
insb
loope
insb
leave
aaa
xchg
and
ret
mov
enter
jecxz
out
sbb
insb
scas
popf
fnstenv
cmp
mov
mov
adc
fisttpll
xor
dec
lret
in
sub
jbe
fdivs
loop
cmpsl
push
sbb
gs
sub
add
fstpt
cmc
stos
sub
mov
fwait
int
xchg
mov
xchg
popf
mov
testb
hlt
mov
outsl
dec
movsl
xor
sbb
push
dec
dec
shrb
and
mov
xchg
loopne
pop
iret
icebp
push
or
or
stos
add
add
ljmp
in
cmp
aad
xchg
pop
mov
mov
jae
jg
xchg
stos
add
pop
int
jne
popf
jg
add
mov
sbb
adc
psrlw
mov
mov
lock
test
cmpsb
sub
and
push
movsl
cli
adc
mov
loop
jb
bound
mov
dec
mov
loope
lods
cmp
aam
sbb
jns
mov
iret
mov
shll
cmpsb
in
mov
pop
add
cmpsl
hlt
nop
push
shlb
pop
jno
dec
movsl
imul
test
hlt
repnz
mov
movsb
jb
out
mov
icebp
rorb
xchg
inc
push
mov
sahf
shlb
stos
xchg
insl
pop
pop
mov
popf
fs
inc
mov
stos
pop
cwtl
mov
stos
movsb
xlat
lret
scas
movsl
loopne
jno
and
xchg
cmp
and
dec
xor
adc
push
fwait
mov
je
enter
pop
jmp
rorb
mov
int3
pop
dec
and
pop
imul
jmp
mov
sbb
or
daa
mov
es
nop
push
fucomi
xchg
pop
and
sar
test
push
or
pop
dec
les
je
push
add
in
or
lds
jge
sti
fdivrs
xchg
push
fcmovu
ja
rclb
arpl
cmpsb
je
sbb
repnz
bound
mov
and
cmpsl
fwait
mov
cmp
cmp
push
fldl
pop
push
popl
push
mov
xor
mov
cmp
leave
jae
rcl
push
in
fisubrl
cli
pushf
sti
inc
fstl
insl
xchg
lahf
mov
xor
or
xor
dec
adc
mov
in
inc
dec
mov
fstpl
fwait
mov
jne
pop
cmpsl
xor
pop
add
xlat
mov
enter
push
and
adc
add
add
out
jb
cmpsb
jmp
adc
dec
imul
cmp
cmpl
iret
addb
add
and
mov
aam
enter
inc
lcall
and
push
add
popa
sub
aaa
dec
fsubrl
enter
in
push
push
lcall
push
and
pop
outsb
jns
inc
popf
and
sbb
inc
dec
lds
call
stos
jle
mov
sub
pop
jmp
dec
cli
jne
lds
adc
dec
mov
dec
fsubp
in
andb
and
dec
push
lret
fldl
push
xchg
jbe
pushf
push
push
adc
xor
push
lcall
mov
or
mov
mov
insl
aas
mov
mov
jb
loop
or
or
call
pushf
jns
in
lcall
mov
cli
mov
hlt
lcall
mov
jge
push
add
les
negl
fisubl
pop
jne
leave
lods
push
and
iret
or
sti
sub
push
sbb
lea
lods
test
clc
mov
xor
cmpsb
push
sub
js
and
jbe
out
push
lret
fwait
hlt
add
inc
or
add
ja,pn
or
in
push
push
inc
stos
mov
inc
pop
jb
rclb
push
stos
inc
dec
sbb
inc
icebp
dec
mov
jl
addr16
cmp
mov
loope
stos
je
ja
dec
push
stc
xlat
jge
inc
cmpsl
ja
sub
arpl
sbb
mov
scas
mov
jg
mov
mov
mov
xor
xlat
cmp
cwtl
fisttpl
add
enter
mov
movb
xchg
mov
add
outsl
xchg
fidivrl
ljmp
jnp
cltd
add
mov
pop
mov
cmp
or
push
xchg
loopne
add
movsl
push
shrl
adcb
pop
orb
sahf
add
push
sbb
cmpsl
sub
xor
fdivs
push
les
das
xchg
push
call
mov
mov
push
int
movsb
inc
loope
mov
icebp
rolb
xchg
imul
push
mov
lea
cld
rep
sub
clc
pop
jns
adc
or
insl
adc
inc
or
pop
mov
ljmp
add
sub
bnd
mov
adc
push
ljmp
push
adc
sub
sbb
xchg
or
cmp
jno
mov
push
repnz
into
loopne
nopl
loopne
clc
mov
lea
mov
popa
inc
test
je
pop
fmuls
and
push
xchg
jecxz
pop
scas
inc
int
bound
lcall
mov
jae
loop
dec
mov
pop
scas
call
mov
leave
dec
xchg
sti
fsubrp
insl
xor
cmpsl
fidivrs
data16
int
out
dec
data16
pop
outsb
xchg
mov
jae
xor
bound
inc
jb
rolb
movsb
add
add
into
hlt
cmp
faddp
adc
or
jb
push
cmp
mov
fstps
pushf
dec
mov
push
ljmp
or
or
dec
cmp
xchg
leave
xchg
and
xor
or
dec
test
xchg
or
or
outsb
xchg
insl
test
and
fmul
xor
ret
push
dec
or
adc
aas
xchg
scas
nopl
or
movsl
lods
mov
test
jo
add
push
repz
xchg
push
leave
inc
add
outsb
mov
call
pop
xor
and
add
push
jecxz
imull
add
push
pop
add
xor
xor
inc
sahf
cs
fwait
mov
das
in
out
in
push
gs
in
shl
mov
mov
subl
mov
xor
mov
inc
movsl
pop
ljmp
ret
fwait
stc
dec
pop
shrl
dec
cmp
outsl
hlt
cmp
popa
cwtl
cmp
lcall
pushl
or
inc
lea
test
xchg
lods
inc
xor
xchg
mov
cmp
or
test
lret
push
sbb
adc
push
sub
pop
lret
adcl
rcl
jmp
cmp
jle
jne
mov
test
adc
or
inc
inc
sub
jae
and
incl
dec
adc
frstor
xchg
loopne
bound
mov
inc
pcmpgtb
stos
arpl
rcl
scas
xchg
cmp
outsb
adc
imul
in
les
and
mov
sarl
pop
movsl
mov
int3
das
push
mov
inc
dec
mov
push
bound
pop
aaa
cmp
sub
movl
shrl
jmp
push
lea
adc
adc
arpl
mov
mov
mul
push
add
repnz
xchg
push
jge
popa
cmovg
js
sahf
repnz
addr16
test
pop
lret
and
jg
popf
mov
out
sbb
push
and
lods
push
dec
faddl
push
xchg
stos
stc
jmp
xchg
cld
in
lret
pushf
sar
and
dec
mov
pushf
xlat
mov
mov
cmp
xor
add
seto
iret
xchg
int3
lods
bound
xchg
adc
lods
rorb
fmull
pop
iret
mov
add
ret
jl
lods
mov
and
xor
cmp
fs
arpl
jno
xor
sbb
push
filds
frstor
clc
arpl
sbb
es
jge
mov
nop
mov
loope
mov
push
and
push
outsl
or
adc
cld
hlt
in
scas
xchg
pop
inc
sbb
shrl
fildll
arpl
lret
mov
std
jl
jmp
fistps
inc
inc
aas
sarl
pop
xlat
cmp
insb
je
imul
dec
das
push
xchg
mov
mov
or
mov
or
and
loop
addr16
imul
inc
flds
mov
leave
mov
cli
fs
inc
push
outsb
rolb
lea
add
lret
int3
pop
aaa
aas
sti
repz
scas
leave
dec
nop
inc
xor
cmp
dec
stc
push
xchg
cmp
mov
idivl
jbe
rcll
sub
shrl
jmp
jge
lock
inc
cmpsb
into
std
cmc
repz
rolb
test
xchg
std
inc
cwtl
out
mov
push
shlb
mov
repz
repnz
sbb
in
testb
gs
xlat
iret
dec
and
mov
and
je
sbb
inc
lret
rcrl
popa
aad
adc
xchg
xlat
dec
clc
mov
mov
or
out
xchg
fs
in
inc
xchg
das
mov
or
outsb
xor
rcr
xchg
dec
shlb
sbb
xorl
in
rorb
cmp
lret
push
out
popa
fnstsw
stos
lods
sbb
mov
aam
dec
je
adcb
fcmovb
xlat
jo
popa
cmp
rcr
sub
push
and
mov
in
or
mov
pop
adc
and
int
sbb
pop
push
cmpsl
add
cmp
inc
mov
js
sbb
stos
push
adc
inc
adc
mov
inc
sarl
sub
cli
leave
inc
pop
lods
sbb
xor
mov
cmp
fstpl
push
stos
pop
aad
in
pop
out
push
push
mov
sub
xchg
lret
loop
lcall
dec
mov
and
mov
and
cwtl
mov
vpsubb
fs
add
cmp
xchg
xchg
rcrb
sbbl
mov
movsl
add
leave
pop
inc
xlat
cli
xchg
icebp
inc
je
inc
sarl
xchg
pop
into
push
cmp
jg
test
nop
insb
mov
fldcw
jp
cmpl
mov
fsts
cmp
test
sub
push
and
bound
push
xor
aam
push
pop
les
mov
adc
lock
int3
dec
push
push
push
and
and
adc
fadds
je
sbbl
into
or
xor
mov
movsl
pop
mov
dec
cmc
outsl
stos
xor
out
sub
inc
cmp
add
pop
je
mov
ss
mov
cmp
fcom
movsl
mov
pop
popf
into
lock
xchg
xor
cs
jge
ja
push
rcll
enter
sbb
insb
inc
cmpsl
pop
adc
sbbb
mov
fldcw
sbbl
insl
or
aam
fstl
cmp
or
lahf
popa
adc
jecxz
jmp
and
pop
and
push
jb
dec
fmuls
and
je
pop
imul
sahf
ja
enter
push
inc
fists
xchg
mov
xor
xor
pop
fwait
movsl
fcmovnu
dec
sub
fimull
inc
lret
xor
xor
rcll
jg
clc
inc
mov
loopne
sbb
lds
jbe
xor
mov
xchg
adc
and
jo
or
xor
testb
in
fs
decb
movsb
mov
rcrb
pop
dec
jg
pop
dec
and
sbb
sub
sbb
sbb
dec
lahf
xor
je
ja
gs
push
fdivl
push
movsl
sahf
mov
mov
jbe
jae
test
mov
js
push
cli
sahf
push
and
cld
aad
dec
aam
inc
sub
mov
in
mov
sub
ljmp
mov
dec
xchg
leave
loop
jae
repnz
ja
add
sbb
pop
mov
jnp
insb
jo
and
or
mov
repnz
cmp
push
shll
and
push
movl
push
shrl
orl
test
xchg
imul
je
sub
push
in
xlat
sub
pop
sub
icebp
movb
bound
cmp
inc
sub
and
gs
mov
aaa
pop
jp
and
cli
popf
xor
popf
lahf
pop
ljmp
pop
sub
or
icebp
fbstp
lods
gs
xor
push
inc
mov
in
adc
shll
push
jg
lea
icebp
pop
jmp
xchg
in
cli
cmp
push
dec
divb
or
jnp
inc
shll
mov
mov
mov
dec
mov
sbb
es
sub
add
mov
push
enter
leave
out
pop
stos
add
fisttpll
wbinvd
or
jmp
das
cwtl
pusha
fwait
add
call
mov
aaa
or
out
cmp
push
mov
popa
push
pop
loopne
push
ror
test
cmc
fldt
lods
loop
gs
out
push
and
out
sub
fisubrl
adc
sub
dec
inc
les
jb
fwait
inc
mov
mov
push
cmc
sti
int
mov
ret
sahf
out
data16
mov
add
dec
push
std
cmp
call
and
out
cld
rorl
loopne
enter
cmp
pushf
ret
xor
sbb
jge
add
fs
daa
push
stc
stos
pop
mov
sarb
jle
adc
fnstenv
inc
incb
jae
xchg
mov
and
lods
jmp
repz
pop
jge
push
inc
and
xchg
in
pusha
and
jo
add
and
cld
mov
mov
pop
and
cmc
shrb
cmp
in
lock
pop
mov
inc
inc
stc
or
adc
in
ds
lahf
adc
xchg
jae
sub
f2xm1
mov
insb
cmp
pop
inc
insb
inc
mov
or
aas
jge
add
add
pop
jg
push
mov
cmp
dec
mulb
mov
add
cmp
fdivl
pushl
xchg
jb
or
rcll
js
ss
cmp
les
sbb
xor
inc
sbbb
lods
lret
test
xor
pusha
movsl
aaa
arpl
sbb
movsb
lods
xor
xor
cmpsb
cmpsb
or
stc
mov
dec
mov
push
cli
ret
lock
lahf
lock
pusha
or
xchg
pop
mov
fdivrl
lret
arpl
notb
iret
cld
cltd
std
sti
push
scas
shl
dec
dec
scas
sbb
pop
mov
insb
push
xor
pusha
ss
lds
mov
pop
lods
sbb
mov
insb
call
push
mov
jae
inc
or
adc
cmc
popa
pop
or
scas
inc
movsb
xlat
rorb
pop
inc
mov
aaa
dec
and
push
xchg
adc
out
dec
int
shll
or
shll
aaa
sbbl
sub
sti
fnstcw
std
lea
out
sub
inc
ja
dec
sahf
cmp
cs
cmp
xchg
rcr
pop
or
aam
mov
pop
fwait
outsb
cmc
jp
iret
fisttpl
das
jbe
xchg
insl
dec
jge
xor
pop
popa
jnp
or
stos
es
mov
dec
mov
movsb
sahf
jno
mov
inc
sti
sarl
and
das
test
add
into
mov
rcr
and
xchg
call
and
lar
int3
dec
imul
lahf
mov
jmp
pop
sahf
loopne
sbb
cs
adc
sbb
pushl
addr16
adcl
sbb
xchg
xor
add
dec
iret
or
ljmp
cmp
aas
scas
mov
call
rclb
mov
adc
pop
pop
and
lods
out
jae
mov
or
jmp
inc
addr16
xchg
cmp
incl
dec
arpl
fxtract
nop
adc
rclb
ret
movsb
divb
push
lea
aaa
push
or
mov
int3
loop
int3
lock
jl
call
phaddd
mov
aaa
mov
fwait
dec
cltd
jl
xor
bound
sbb
pop
cmc
pop
lcall
addb
leave
and
adc
mov
icebp
adc
cmp
jb
jns
cld
repnz
or
dec
cmc
sbb
mov
adc
pop
mulb
jle
xadd
jbe
sbb
addb
mov
bound
push
cmp
repz
sbb
jg
fidivrl
pop
mov
xchg
arpl
cmpsl
rol
rorl
jp
jle
xchg
sbb
mov
gs
stos
inc
mov
add
xchg
fiadds
out
ljmp
rorb
gs
pushf
enter
jo
xchg
sarl
add
push
adc
sub
roll
mov
cmpsb
sbb
push
aas
or
pop
dec
or
leave
fidivrs
scas
popa
jge
xchg
sbb
loope
jbe
sub
cmp
cmp
push
pminub
add
dec
xlat
fildl
add
lahf
lret
out
popa
sbb
popl
xor
dec
pop
lock
push
cltd
repz
jnp
mov
enter
dec
rorb
mov
call
sbb
mov
xchg
scas
dec
ret
sbb
add
pop
inc
out
jecxz
leave
mov
sbbl
add
cs
adc
adc
shrb
or
xchg
pop
roll
test
jg
ret
ficoms
adc
movsb
fisubl
mov
lcall
sub
pop
cmp
or
mov
and
ja
adc
xor
push
iret
adc
xchg
and
jecxz
lret
pop
test
jnp
aam
xchg
push
movsl
add
ret
or
mov
aam
pop
in
sub
jbe
inc
pop
je
jbe
lret
add
sbb
cwtl
out
mov
rorl
test
xor
xor
loopne
lods
incb
pop
xchg
cld
loopne
dec
loopne
orl
fcomps
mov
jge
sarl
aaa
out
mov
test
mov
xchg
ret
adc
push
jl
data16
popf
loop
xchg
mov
jae
mov
addb
dec
enter
adc
test
mov
ret
sub
inc
jl
mov
inc
mov
and
mov
test
jmp
jbe
mov
sbb
insl
sti
adc
incl
jmp
mov
cmp
mov
inc
stos
mov
and
jne
imul
mov
in
icebp
int3
es
int3
les
xchg
sbb
fdivl
pop
fisubrl
das
mov
in
and
xchg
dec
fcoml
jne
pop
and
mov
lea
jl
pop
icebp
xor
jno
aam
sbb
decb
ss
push
or
mov
fs
pop
pop
jl
adc
adc
je
adc
dec
insb
iret
js
mov
add
push
cltd
stos
and
roll
jnp
jae
loopne
push
call
iret
and
out
jb
dec
cmc
and
push
dec
pop
in
inc
mov
cmpsl
sub
addr16
pop
test
andl
xlat
aad
push
fisubs
std
adc
lea
cli
sbb
push
dec
adc
xlat
and
aaa
push
rorb
not
dec
xchg
xchg
clc
xchg
sbb
aam
sub
push
cmp
popf
rcrb
push
xchg
icebp
fcomps
add
in
je
fildll
add
bound
jp
dec
pop
sti
sbb
loopne
in
insb
leave
jg
in
loope
or
into
xchg
and
push
pop
scas
mov
in
lods
dec
out
and
xchg
dec
pop
repz
daa
push
adc
fwait
out
mov
inc
orb
push
push
cli
jae
inc
push
daa
rcll
xchg
pop
push
mov
mov
cli
inc
je
rorl
sub
mov
sub
mov
sub
scas
adc
add
pop
push
insl
cmp
in
loop
sub
cmpb
adc
hlt
jno
fdivrs
jl
sub
push
inc
fistps
ds
pushf
psrad
scas
mov
and
jge
daa
mov
mov
lcall
jo
jge
fildl
bound
cli
mov
dec
jmp
scas
outsb
clc
mov
ds
test
je
arpl
rolb
ja
sarb
fcmovb
pop
scas
lods
xor
daa
stos
hlt
xor
inc
push
cmp
push
data16
notl
cltd
jbe
mov
repnz
rolb
sti
cld
xor
and
into
inc
mov
cld
xchg
data16
movsl
inc
mov
data16
into
aam
lock
test
daa
jle
add
mov
cs
push
add
add
cmpsl
cmp
cli
and
repnz
mov
mov
imul
cmpsl
popf
cmp
mov
ds
xchg
roll
dec
popf
mov
add
jecxz
in
test
imul
popa
es
out
dec
and
les
sti
jge
f2xm1
in
pop
push
repnz
push
in
je
or
and
test
les
aam
aad
out
xchg
jne
sbb
test
gs
arpl
sub
or
sti
es
or
mov
rclb
xor
adc
sbb
popf
xchg
aaa
out
in
or
pop
jecxz
and
dec
test
andb
xorb
out
mov
add
pop
and
sahf
ja
push
rorl
sti
jnp
in
in
gs
inc
leave
inc
jbe
sbb
sbb
lds
lods
xor
xchg
sahf
adc
mov
cwtl
fiadds
imul
popl
dec
dec
shll
cld
nop
iret
nop
lcall
sub
jp
scas
add
adc
dec
rcl
lahf
bnd
xor
and
dec
rol
addr16
mov
dec
add
lea
and
jge
inc
popf
fmuls
lea
or
shrl
xchg
xchg
pop
and
add
or
mov
pop
rorl
jbe
jecxz
pop
and
sbb
mov
or
ret
inc
add
xchg
push
fs
and
cmc
in
addr16
test
nop
or
inc
enter
push
push
xchg
in
icebp
mov
and
cmc
lahf
dec
mov
notl
scas
pop
sub
sub
scas
rol
fs
iret
cmp
adc
leave
push
daa
sub
lods
jne
adc
arpl
mov
adc
adc
inc
mov
nop
or
movsl
add
icebp
sbb
dec
jecxz
in
xor
pop
push
adc
call
or
push
fldcw
mov
gs
stc
aad
data16
adc
icebp
push
lret
in
sub
xchg
sub
jb
xlat
sub
mov
jbe
std
pop
aas
mov
aam
popa
jl
scas
push
sahf
mov
inc
rcr
cmpsb
push
pop
lret
cmp
xchg
mov
mov
popa
cmpsl
push
mov
aad
test
push
popw
nop
aam
insl
sub
testb
shll
pusha
cld
push
jns
sbb
mov
sbb
or
stos
in
movsb
xchg
mov
lahf
shlb
in
add
push
aad
hlt
pop
sarl
jmp
repz
xchg
cmp
enter
push
lods
mov
icebp
insb
push
shll
inc
pushf
ss
inc
out
js
iret
push
pusha
fsubp
arpl
mov
jge
arpl
sar
in
gs
xlat
sub
adc
and
cmc
inc
or
adc
xor
cmove
hlt
js
outsl
adcb
mov
mov
int3
xor
xchg
imul
adc
cmp
inc
adc
adc
add
add
sub
xchg
ret
adc
loopne
xlat
sbb
mov
pop
dec
adc
xor
push
mov
sub
mov
jge
dec
jp
cmp
into
sahf
pushf
testl
dec
in
sub
jo
mov
sub
push
arpl
mov
fimull
dec
pop
fsubp
dec
and
in
cmp
mov
mov
xchg
cmp
xchg
ficomps
sbb
cmpsb
and
pusha
mov
cmp
arpl
inc
push
lahf
sbb
es
cmp
imul
fwait
ret
jle
addr16
enter
pop
dec
leave
dec
mov
les
push
pusha
mov
js
dec
mov
dec
mov
mov
cltd
inc
jmp
loop
ss
pushf
orb
sti
loopne
dec
rcrb
and
mov
dec
add
ret
xchg
mov
loop
jno
idivl
push
xchg
adcb
cmp
xchg
sub
xor
and
pop
les
data16
lahf
push
sbb
xchg
pop
xchg
push
loope
decb
mov
mov
rcpps
popa
pusha
popa
pushf
aad
inc
cmc
mov
pop
mov
repnz
xchg
addb
sbb
outsb
adc
mov
jns
stos
cmc
in
lahf
inc
sbb
or
mov
imul
lret
je
arpl
pop
mov
int
addr16
xchg
sub
dec
scas
add
jg
cmp
movsb
int
sbb
pushf
mov
lcall
inc
adcw
fistpl
adc
push
sahf
mov
jns
js
jecxz
enter
sub
mov
test
int
aas
add
jg
lcall
fistpl
pop
adc
loope
pop
sbb
jnp
cmp
sbb
push
xchg
movsl
in
mov
lret
mov
int3
stos
push
ret
push
jmp
imul
sbb
sbb
or
test
movsb
into
testb
xor
test
gs
xchg
mov
mov
out
sub
loope
aam
adc
sub
cltd
adcl
pop
inc
mov
daa
pop
mov
xchg
in
dec
mov
mov
hlt
jge
pop
or
and
push
cld
xor
xor
xchg
fcoms
cld
or
jg
movsb
mov
xor
in
jno
sbb
xchg
pop
adc
out
cmp
mov
pop
jne
adc
xor
pushf
xchg
jg
pop
add
andb
fs
cmp
shrl
fsubp
and
orl
test
rclb
out
pushf
jbe
mov
jmp
icebp
stos
out
pop
das
in
out
or
lret
int
jne
xchg
dec
cmp
test
mov
stos
cmp
in
pop
into
insb
jp
fstpt
push
mov
xor
inc
add
add
push
test
push
push
push
xor
mov
pusha
fwait
mov
repz
xchg
mov
inc
mov
in
xchg
jle
pop
sbb
cwtl
dec
cli
loopne
mov
jbe
mov
les
xchg
enter
dec
push
cmp
fldl
jmp
jg
push
stos
push
stos
cmp
sbb
ds
pop
pop
cmp
push
mov
loope
add
cmc
and
sarb
ss
xor
loop
sbb
aas
inc
cmp
mov
push
stc
std
mov
sub
xor
and
and
mov
jmp
das
mov
jo
hlt
mov
pushf
pushf
lcall
jbe
into
sti
push
mov
test
dec
pop
negl
mov
add
rcrl
push
pusha
jmp
std
loope
lret
push
popa
cmp
dec
push
fistps
mov
add
insb
and
orb
loop
cmpb
ss
bound
les
nop
in
js
push
fidivl
mov
int
je
cmp
jmp
jl
fyl2xp1
pop
ret
lods
mov
gs
testb
mov
mov
jb
mov
arpl
add
adc
ljmp
jmp
lds
jg
push
inc
push
jmp
or
push
stc
in
fisubs
push
xor
cld
inc
xor
sub
cmp
or
dec
and
adc
add
invd
pop
jmp
inc
shl
fsubl
test
leave
rcrl
scas
idivl
rcrb
mov
cld
lcall
loop
fnsave
sbb
mov
pop
inc
stos
xchg
fdivrs
sub
in
cmp
jl
mov
inc
mov
jge
pusha
test
xrelease
fs
xor
add
in
inc
leave
cmp
xor
mov
movsb
xchg
int3
and
mov
daa
sbb
addr16
push
mov
and
repnz
push
insb
daa
iret
push
and
lret
idivl
jnp
jl
repnz
pop
and
and
jmp
xchg
pop
fistps
sub
jl
adc
mov
in
cmp
or
xor
or
call
jbe
pop
arpl
cltd
xchg
aad
pop
jns
movsb
stos
lret
jl
jmp
insb
fcoms
pop
in
xchg
push
shl
icebp
test
mov
push
adc
add
mov
mov
lahf
out
aas
pusha
adc
repz
jnp
mov
fiadds
sub
addl
fidivl
repnz
push
inc
stos
cmc
test
cmp
mov
inc
inc
out
cld
mov
push
negl
out
push
jg
insb
test
test
or
pop
sahf
cmp
repz
cmpsb
pop
inc
jb
std
jecxz
lea
push
jo
push
push
sub
test
popa
xor
dec
push
xor
mov
into
fs
push
call
xchg
cmp
aam
lods
incb
pushf
rorb
out
je
fdivs
rolb
xchg
loope
mov
mov
gs
xor
cmp
mov
loope
divl
pop
jle
int3
fxch
inc
stos
jne
push
sahf
ljmp
sub
sub
inc
pop
std
loopne
repnz
pop
sub
lods
popf
lods
aam
mov
mov
cmpsb
std
stc
outsb
clc
push
popf
pop
mov
mov
fldl
inc
and
inc
cmp
out
iret
mov
or
mov
dec
aad
jge
dec
bound
push
sbb
push
loop
xchg
mov
shlb
mov
loopne
movsl
out
jl
stc
iret
js
pop
sub
aam
aam
xor
push
test
inc
pushf
lcall
mov
test
movsb
rcl
repnz
shrb
pop
lea
jge
mov
mov
sbb
mov
mov
jle
div
outsl
mov
and
fcoml
negb
xchg
add
fistpl
xchg
mov
and
cmp
lods
lds
dec
ljmp
lock
stos
xchg
sub
add
out
or
adc
call
aam
leave
pop
mov
mov
push
pop
movsl
push
sbb
jmp
and
testl
movsb
mov
shr
shlb
jne
pop
test
std
push
jmp
mov
xor
inc
out
arpl
aas
or
aas
add
lock
lods
lea
push
inc
cld
add
or
pusha
or
clc
sti
xor
fnstcw
insl
mov
lock
andl
mov
insl
mov
or
rcl
andb
push
xor
cli
mov
mov
mov
mov
sarl
test
test
sbb
push
push
adc
pop
outsb
xchg
and
std
cmp
ljmp
pusha
shr
or
lea
jge
mov
pop
pop
and
cmp
xor
mov
int3
jb
jne
push
sbb
xchg
sbb
dec
outsb
push
test
je
sub
lret
sbb
pop
pop
xchg
aaa
popa
sbb
pop
pop
dec
xchg
cmp
imul
dec
adc
in
inc
jae
pop
push
mov
sbb
test
pop
and
jne
mov
leave
hlt
jno
and
push
mov
sub
dec
push
cmpsl
pop
sarb
lahf
jge
test
mov
pop
mov
push
movsb
aas
adc
dec
jl
mov
mul
dec
cltd
in
jns
inc
stc
jae
push
dec
xor
xchg
adc
push
xlat
or
int3
and
dec
ficoms
cmp
iret
cltd
mov
cmp
insb
sar
and
or
pop
jne
shlb
jno
and
test
fnsave
movsl
pusha
jl
or
pop
xchg
ficoml
outsl
cld
fwait
sbb
mov
pop
popl
jmp
dec
loop
cmp
push
sub
inc
and
mov
sbb
jge
loopne
mov
xor
scas
mov
call
xor
lods
test
mov
clc
add
pop
popf
addr16
loop
lret
jnp
pop
fidivrl
or
ja
mov
adc
cs
adc
into
pop
fcmovu
mov
loopne
or
xchg
pop
cmpsb
add
jne
add
outsb
cmc
je
addr16
fs
or
scas
fdivs
xchg
dec
ljmp
mov
pop
lret
push
pusha
mov
js
mov
aad
fdivp
jecxz
cmc
or
sbb
cmp
ret
ds
or
cmp
ret
lock
aam
sbb
xchg
push
xor
stos
sub
xchg
cmpsb
inc
in
lea
lahf
fstps
call
pusha
lret
mov
jae
adc
mov
test
sbb
inc
cli
push
int3
push
aad
fisubrl
fidivrl
inc
mov
mov
lret
jp
cmp
pop
xchg
fcomp
out
loope
lret
jmp
sub
mov
xchg
decl
push
inc
mov
sbb
jp
adc
push
insb
sub
pop
push
xchg
jle
fisttps
gs
pop
pop
jbe
into
fwait
jmp
popa
gs
lea
xor
cmp
imul
adc
js
mov
ljmp
hlt
pop
jg
cmpb
sbb
packsswb
fistl
pop
and
aam
add
sti
pop
jb
fidivs
push
or
iret
mov
dec
sbb
or
ret
adc
sub
mov
xlat
data16
mov
jae
mov
loope
inc
fldcw
mov
inc
ror
push
bsf
add
cmp
mov
mov
mov
inc
mov
xchg
inc
mov
xchg
outsb
fwait
mov
sub
pop
adc
sub
cmp
imul
jne
mov
hlt
inc
add
mov
sub
cmp
cmpsb
int3
mov
mov
stc
add
not
jo
repz
cmpsb
xchg
mov
int
test
lret
add
insl
jl
xor
mov
push
or
jp
xchg
inc
imul
mov
add
stos
sbb
mov
outsb
aam
mov
test
push
mov
pop
jmp
add
fdivrl
lods
enter
push
ret
stos
repnz
in
dec
jmp
pop
inc
out
add
fistps
das
mov
data16
movb
add
cmp
jnp
mov
mov
jge
lret
push
mov
jl
cmpsb
push
shll
out
jno
ja
cs
cltd
jno
nop
dec
inc
jb
inc
pop
ret
stos
ja
push
cmc
and
sbb
cmc
cld
pop
push
sbb
add
push
nop
sub
test
sbb
push
scas
mov
outsl
stos
andb
frstpm(287
xor
jecxz
mov
mov
jo
inc
xor
xchg
pause
sahf
in
sti
sbb
flds
inc
pop
ret
pop
push
pop
mov
movsb
push
addb
xchg
sbb
test
pop
sub
sti
xor
pop
push
lds
jae
pop
lahf
pop
lahf
aad
mov
ss
in
stc
mov
popf
inc
mov
jg
push
add
icebp
cli
jle
jg
jo
rolb
lods
cmp
xchg
into
es
in
das
fcmovnu
gs
lock
push
or
cmpsb
cmp
out
movsl
xchg
sbb
xchg
stos
add
mov
mov
shll
mov
ljmp
push
mov
xlat
ja
dec
push
xchg
jge
add
dec
xor
jl
sbb
mov
mov
mov
jmp
push
and
xor
jo
cwtl
adcl
outsb
cs
pop
repnz
inc
mov
cli
mov
cmp
inc
or
lds
divb
div
fistps
and
ss
mov
mov
or
or
fisubs
aas
push
loopne
xchg
fnsave
mov
xchg
mov
out
daa
popl
xchg
xchg
stos
leave
adcb
mov
imul
xchg
cmp
or
ds
jmp
cmp
dec
add
xlat
xor
leave
inc
pusha
and
pop
mov
ds
rorb
sti
outsl
push
mov
nop
mov
lret
test
nop
imul
mov
lea
les
mov
test
and
adc
lret
jnp
mov
mov
add
imulb
cmp
xlat
inc
mov
push
leave
fsubr
mov
imul
lds
fwait
scas
mov
push
out
or
nop
call
subb
xchg
cltd
ficoms
movsb
xchg
push
gs
push
push
push
and
imul
cwtl
jl
mov
iret
inc
sub
dec
push
loope
mov
outsb
mov
inc
add
gs
insl
cmp
imul
mov
adc
ja
insb
movsb
pop
call
enter
mov
mov
mov
outsl
cmp
adc
xchg
cs
movsb
jnp
or
fs
push
rorb
loope
inc
push
mov
lods
mull
mull
cmp
and
sub
inc
cltd
and
dec
sub
cs
jo
jmp
stos
loope
xchg
and
cs
jo
stos
lods
fisttpl
xchg
movsl
inc
mov
lods
test
cltd
rclb
mov
mov
xlat
loopne
aas
xchg
sbb
mov
cmp
sub
adc
inc
arpl
and
test
sub
out
stos
rcrb
fmull
clc
cmpsb
in
dec
and
jno
aas
dec
insb
or
mov
and
adc
mov
mov
sbb
mov
dec
into
leave
ss
mov
sbb
mov
test
shlb
shlb
dec
lods
nopl
ss
xor
out
dec
fwait
pop
rclb
adc
add
jl
popa
test
jl
test
dec
and
jae
pop
mov
and
push
divb
xor
imul
and
in
ds
test
lret
mov
xchg
outsb
adc
cmp
or
or
jp
mov
jle
dec
int3
negb
sbb
out
xchg
scas
dec
pop
lahf
lods
dec
mov
jecxz
fistl
mov
push
cld
clc
call
pop
test
jle
cmp
fstpt
jbe
mov
lret
and
pop
test
jno
or
cmpsl
push
adc
pop
pop
mov
nop
imul
adc
mov
stos
fs
jne
cli
xor
repz
pop
outsl
mov
shll
xor
dec
or
ds
push
out
mov
xchg
pop
mov
cmpsb
pusha
cld
xor
lcall
xchg
sbb
in
sbb
add
popa
xlat
xchg
stc
stc
mov
or
lods
add
sub
push
jnp
hlt
jo
cs
cli
nop
aad
sbb
fs
mov
jmp
pop
daa
mov
fmulp
ljmp
lcall
ret
push
lret
lock
xor
dec
mov
arpl
dec
out
imul
shll
push
ficoms
and
add
dec
insl
xchg
dec
adc
scas
fldenv
push
loop
fnsave
es
out
pop
adc
aaa
bound
dec
xor
and
add
mov
stc
xor
bound
jp
rorb
adc
mov
bound
jp
jecxz
xor
cli
jecxz
movsl
push
ret
sub
roll
cld
sub
and
push
mov
ret
push
mov
cwtl
in
and
mov
push
cld
imul
popl
lea
stc
pop
lret
xchg
addr16
data16
jp
jl
sub
sbb
jnp
sub
dec
lea
in
push
push
jp
add
out
icebp
mov
dec
stc
add
outsb
pop
lret
in
or
aam
rcll
push
and
iret
sub
sbb
and
sbb
ds
inc
mov
push
mulb
mov
mov
cmpsl
pop
and
lret
jo
push
add
dec
negb
mov
push
inc
repnz
cmpsl
xchg
or
cmp
add
ljmp
xor
push
ljmp
addr16
sbb
cli
push
pop
test
in
cltd
cmp
cmp
mov
dec
movsl
and
jl
inc
outsl
scas
jmp
dec
loop,pn
jnp
imull
mov
xchg
hlt
icebp
xor
mov
xor
dec
dec
xor
test
push
sti
jl
shr
inc
inc
rol
push
sbb
cwtl
inc
inc
cmp
jl
jns
add
nopl
and
sub
cli
cmp
add
dec
adc
shl
scas
cmc
iret
repnz
movaps
lret
std
movsw
rep
push
add
cmpsb
sbb
pop
sbb
fidivrs
jg
mov
jbe
push
mov
sbb
loopne
arpl
cmp
outsb
pop
daa
addr16
pushf
cltd
mov
gs
jp
xlat
enter
adc
call
add
rcr
dec
add
popa
xchg
inc
lahf
addl
xor
rcl
dec
adc
pop
fwait
and
popl
pop
iret
scas
mov
cli
test
push
or
adc
in
mov
inc
dec
mov
pop
addr16
fdivl
mov
mov
ja
push
in
cmpl
pop
sbb
test
jo
testb
lds
fcmovnb
idivb
lock
sub
push
mov
loope
jl
lea
mov
and
test
cmp
sub
inc
sbb
lods
xchg
xchg
cs
and
ficoml
mov
xor
or
pop
fistps
sahf
stc
test
test
sar
mov
pop
iret
jb
adc
cs
hlt
lahf
push
jbe
pop
test
addr16
dec
ss
movsl
popa
sbb
icebp
jp
dec
inc
jmp
pushf
jne
into
pop
aas
addr16
add
cmpsb
dec
inc
push
mov
test
mov
das
shlb
rcrb
or
stos
loopne
sub
ds
dec
jae
ret
jge
and
cmp
int
lcall
stos
push
cmpsb
dec
push
mov
test
push
shrb
mov
xchg
lock
xchg
xor
dec
mov
sbb
outsl
movsb
test
rorb
into
scas
aas
mov
int
mov
xor
sub
or
test
pop
out
outsl
or
int
xchg
jae
inc
sbb
pop
xchg
or
xor
sbb
and
stos
or
cltd
and
xchg
pop
cli
clc
daa
and
mov
fxch
mov
jle
imul
mov
xchg
add
dec
mov
je
in
ret
shl
adc
mov
pop
cwtl
dec
mov
mov
cmp
jg
cmp
inc
add
scas
out
insl
and
jno
pop
fwait
mov
lods
sub
mov
lret
shrb
sub
xchg
xchg
inc
pop
xchg
pop
cmp
pop
sub
sbb
mov
or
decl
inc
lds
push
lock
ffree
sub
mov
mov
pop
lret
testb
dec
xor
pop
push
push
adcl
adc
dec
stos
mov
fildl
pop
test
push
ret
lret
cmpsb
mov
cmp
fisttpl
lcall
add
aad
jl
fisttpll
int3
sbb
std
in
xor
mov
and
sbb
jo
sbb
cli
push
ds
adc
aas
pop
dec
push
xorl
nop
sbb
testl
xchg
sbb
fistps
lods
lahf
jg
and
pop
clc
repnz
fistps
mov
mov
insl
out
mov
cmc
xchg
jno
inc
mov
sbb
call
adc
scas
aaa
lea
sbb
stc
mov
lcall
mov
into
mov
and
lret
negl
ja,pn
std
les
adcb
adc
and
xchg
mov
mull
xor
mov
jg
mov
xchg
je
outsb
or
and
sbb
sub
sbb
js
jno
push
jne
mov
pushf
popa
sub
dec
push
sub
sbb
and
add
jge
xchg
pop
cmp
arpl
shlb
jle
jb
mov
mov
stc
in
sub
fs
rolb
out
nop
cmpsl
push
repz
cld
pop
mov
add
lds
mov
fbstp
es
ds
call
push
out
inc
lock
pop
mov
daa
into
jge
fcomps
mov
mov
jg
inc
mov
ds
sbb
fcomip
mov
sub
mov
adc
adc
ljmp
mov
sbb
mov
aad
add
mov
inc
enter
loopne
add
pushf
bound
fs
es
popa
ss
insb
pop
jecxz
out
imul
dec
ljmp
or
xchg
pusha
test
je
jb
xchg
sub
insl
fldl
mov
jno
inc
ret
enter
test
jge
es
aas
pop
dec
inc
fsubrp
daa
xor
jnp
jmp
arpl
jp
out
mov
loopne
popa
cmp
or
adc
mov
mov
ss
jecxz
push
xor
xchg
jecxz
aas
add
movsb
or
ret
arpl
jb
add
cli
jns
loopne
pop
aam
test
notl
and
fcomps
stc
movsb
sbb
push
inc
or
adc
jae
aas
cltd
xor
cmc
dec
in
in
xchg
inc
clc
je,pn
dec
add
adc
aaa
ror
adc
or
loope
lea
sub
dec
lods
add
xchg
cmc
mov
mov
lret
lahf
mov
movsb
sub
lds
fs
and
stc
lods
int3
cmp
gs
shll
loope
lret
stos
fwait
cmp
push
test
sbbl
icebp
jno
iret
cmp
jp
cmp
clc
xchg
aas
cmp
mov
mov
out
insl
push
sbb
int3
pop
push
scas
sti
dec
mov
push
cmpsb
test
stos
adc
adc
in
add
sbb
int3
add
jne
pusha
clc
sbb
je
je
cmpsb
cwtl
ret
mov
test
inc
jne
push
popa
lds
mov
out
xchg
fildl
outsl
lods
repz
push
pop
test
mov
push
cmp
mov
jg
push
inc
movsb
into
clc
cltd
sub
inc
aam
jbe
in
add
rcrl
lahf
aam
add
sbb
push
scas
adc
mov
mov
mov
ret
outsl
inc
ljmp
clc
in
outsb
dec
xchg
xlat
mov
sub
leave
jae
push
mov
jmp
repnz
mov
mov
leave
xchg
mov
fiadds
inc
enter
into
js
push
dec
call
das
xor
sbb
xorl
in
leave
pop
jl
push
and
mov
cmp
sbb
stos
das
out
mov
jge
mov
scas
push
cmp
xor
daa
or
mov
mov
xor
mov
mov
in
out
icebp
aaa
insl
jnp
add
or
dec
loope
jnp
mov
test
mov
addb
in
repnz
dec
jae
sbb
loopne
xor
and
sbb
sub
sarb
push
repz
jno
fstpl
data16
and
sbb
adc
aas
or
shll
xor
subl
cmp
sub
pop
jg
ds
inc
dec
int3
xchg
pusha
leave
mov
fcmove
mov
mov
dec
scas
sahf
or
adcb
sub
xor
cmp
loop
andl
dec
xor
jge
leave
jns
and
loope
mov
mov
xor
pop
xchg
das
imul
inc
inc
int3
daa
mov
pop
js
push
loopne
popf
enter
int
mov
sar
ds
fdivs
add
inc
stc
ja
push
adcb
out
xchg
mov
gs
scas
cmp
movsb
fdivl
push
dec
int
lea
lret
push
sahf
xchg
inc
mov
and
das
lock
pop
dec
movsb
dec
out
pop
sub
inc
cld
adc
mov
xor
pushf
pop
jo
sub
stos
addb
jne
nop
sub
fnstcw
dec
inc
loopne
shr
mov
sbb
fisubrl
mov
fnstcw
mov
outsb
jecxz
xor
cs
in
lods
mov
or
push
out
addr16
call
repz
inc
xor
clc
lahf
xor
mov
arpl
fs
bound
cmp
xor
and
sbb
ja
outsb
test
ret
jecxz
gs
push
cmp
addb
out
xlat
mov
insl
gs
outsb
push
imul
push
or
adc
cli
mov
orb
add
jmp
into
out
jo
lret
mov
call
nop
or
mov
jge
aaa
sub
rcll
xchg
iret
mov
mov
cmp
cmpsb
in
mov
xchg
push
add
sbb
push
jmp
mov
mov
inc
fnstenv
sbb
addr16
in
pop
lret
movsl
mov
or
jnp
clc
into
fisubs
add
mov
push
xchg
popa
or
dec
cmpsb
adc
mov
je
jge
push
mov
jbe
inc
stc
sar
stc
out
mov
mov
outsl
cwtl
xor
call
inc
cli
js
adc
pushf
inc
add
sti
fldenv
jo
and
inc
call
dec
add
stc
je
je
sti
roll
jns
cwtl
ljmp
inc
pop
lea
stc
jae
in
add
movsl
push
cmp
xchg
outsl
hlt
mov
jmp
addr16
aad
xchg
ret
mov
xchg
inc
mov
fwait
es
mov
pop
and
add
fdivs
and
xor
pusha
add
inc
mov
mulb
mov
add
stos
adc
in
push
xchg
push
lods
mov
pop
das
push
mov
jbe
and
push
stc
dec
xchg
mov
shlb
into
outsl
xorb
xlat
pop
jg
sbb
push
mov
lcall
ret
cmpb
xor
push
xor
xor
xor
inc
fdecstp
xchg
mov
in
xor
mov
xchg
fisubs
jg
ja
add
push
push
scas
mov
pop
fsubrl
mov
jo
fisttpl
mov
push
inc
mov
fs
pop
test
sub
imul
test
dec
sbb
lods
inc
pop
jb
lods
or
addb
fdivs
out
fstl
dec
test
in
and
push
sub
rol
popa
and
cmp
into
enter
mov
test
ss
lods
dec
loope
repnz
roll
adc
mov
jle
sbb
cmp
fs
pop
sbb
imul
test
lds
xchg
std
mov
sbbl
ss
sbb
mov
mov
inc
aad
les
mov
and
stc
push
jecxz
loopne
aam
push
mov
sti
jnp
cmp
sti
pop
pop
push
dec
lods
xor
inc
popa
pop
sahf
test
out
cmp
push
inc
jno
cli
jnp
sbb
dec
dec
mov
mov
or
jbe
mov
cltd
dec
dec
insl
pop
and
out
add
outsl
add
or
stos
mov
xor
std
jae
push
popa
in
sarl
mov
lds
xchg
dec
std
mull
pop
mov
insb
test
in
and
jg
imul
out
xor
out
cmpsl
and
bound
subb
push
fnsave
xor
inc
std
mov
push
insl
pushf
call
clc
es
fisubrs
mov
mov
clc
daa
test
jp
lahf
jge
leave
cmp
add
out
jbe
dec
daa
mov
divb
pop
enter
ds
out
pop
sub
and
test
mov
imul
lahf
fpatan
outsl
xchg
fisubrs
hlt
xor
int3
xchg
pop
dec
fld1
emms
sbbb
jnp
in
push
bound
jno
iret
int3
in
loop
pop
or
xchg
xchg
cmp
xchg
xchg
xchg
loop
aaa
aam
sub
inc
jne
mov
cli
fs
lock
ljmp
fstpl
dec
dec
mov
cli
sub
and
xchg
push
mov
test
xor
fildll
pushf
mulb
mov
test
ret
xor
cmp
cmp
insb
adc
jecxz
cmp
jnp
mov
repz
ficompl
jo
adc
rolb
ret
add
dec
add
andb
sub
mov
aaa
test
movb
jbe
xchg
xlat
inc
dec
jne
sbb
jnp
mov
aam
scas
adc
into
mov
bound
pop
inc
aaa
sbb
inc
mov
pop
std
xchg
mov
mov
out
out
push
int
add
ficomps
jnp
lods
push
mov
jmp
out
movsl
sbb
loopne
cmp
icebp
out
xor
mov
outsb
mov
test
clc
add
cmp
adc
or
mov
adc
cltd
or
divl
movsb
fisubrs
dec
mov
addl
xor
xor
stc
movsb
in
mov
inc
pop
mov
pusha
ds
movsb
xor
mov
ret
jo
hlt
pop
nop
loop
xchg
inc
cs
fmul
je
sar
inc
push
ret
fcoml
loope
stos
dec
push
dec
adc
stc
and
sub
jo
cltd
pusha
pop
jno
leave
mov
and
test
mov
pop
pop
mov
test
mov
jle
and
adc
das
jno
jnp
pop
lret
xchg
js
es
push
jg
add
repz
sbb
jno
fcom
shrb
push
push
xor
xchg
lahf
push
stos
jne
pusha
loopne
subb
sub
add
movsb
pusha
out
jns
cmc
cltd
and
bound
enter
and
je
repz
js
adc
cmp
xchg
lcall
mov
movsl
shl
mov
ffreep
mov
mov
rorb
jg
es
mov
stos
mov
into
pop
aas
mul
xchg
int
addl
pop
ret
enter
adc
jo
test
cmpsb
movsl
xchg
push
gs
int
pmulhw
jmp
leave
sbb
lods
daa
jb
inc
lahf
jp
pop
xor
mov
sub
es
dec
push
int
sub
ljmp
cmp
adc
pop
pusha
push
and
pop
or
push
sub
test
sahf
xchg
cltd
add
cltd
xchg
out
pop
clc
fisubrs
test
test
notl
sub
lret
icebp
mov
insl
das
loop
or
enter
loop
aaa
or
rcll
xchg
lea
jmp
sbb
stc
andl
fisttpl
ret
jns
mov
jle
cmpsb
add
test
xor
stos
jmp
inc
scas
dec
shl
mov
fdecstp
xchg
data16
ret
fstps
push
cwtl
imul
pop
lret
or
push
pop
leave
inc
adc
sbbb
jmp
push
sub
jge
dec
mov
jge
in
or
or
mov
out
sub
sub
mov
fcoms
cmp
inc
sarl
and
sub
dec
cmpsb
cmp
xchg
out
jne
scas
sub
addr16
xor
mov
mov
dec
pop
scas
lea
xchg
and
mov
in
mov
adc
dec
scas
in
xchg
loopne
rol
add
out
sahf
rclb
add
lret
jmp
pop
add
lea
fisubl
out
dec
dec
jb
les
adc
dec
es
imul
fistpl
ret
push
mov
movb
sti
xchg
int3
cli
or
arpl
jmp
mov
cmp
mov
mov
testb
add
outsb
test
mov
xor
nop
jecxz
or
jecxz
mov
sbb
shrl
data16
cwtl
in
mov
faddp
sub
data16
mov
pop
out
or
inc
dec
je
mov
clc
subb
mov
int
inc
out
jecxz
jnp
lcall
xor
ja
adc
flds
ljmp
push
movsb
addl
inc
add
pop
mov
mov
adc
or
jo
icebp
mov
scas
movsl
add
cld
cmpsl
or
pop
fnstsw
inc
out
out
in
cmp
mov
repz
sahf
and
mov
rcll
outsb
mov
adc
xor
sti
push
and
pop
and
push
nop
xchg
gs
mov
mov
cmpb
ret
sbb
and
lcall
and
lds
xlat
movsl
mov
add
push
fs
dec
test
and
das
dec
clc
adc
mov
inc
dec
xchg
sub
dec
push
xor
add
js
fdiv
out
loop
xchg
or
sbbb
stos
nop
push
idivl
sub
dec
ss
fidivl
push
cmp
stc
pop
mov
ret
and
std
pusha
movsb
lret
out
push
shrb
mov
lods
mov
sti
push
adcl
in
arpl
mov
and
cmp
stos
loopne
sub
cwtl
cmc
cs
scas
push
push
cmpsb
decl
jp
iret
cld
pop
mov
std
push
ja
das
xchg
ret
xor
xor
xorb
gs
ja
or
pop
pop
add
push
cmp
std
xchg
push
ffreep
cmp
adc
in
lods
xlat
decl
fwait
aam
lret
scas
push
movsl
inc
roll
jg
xchg
push
or
push
jecxz
pusha
rol
aam
fs
sbb
cmp
push
hlt
sbb
addr16
dec
bound
lods
or
dec
lahf
push
mov
adc
xchg
xor
cmc
jle
inc
pop
and
pop
sub
psrld
or
xchg
fisttpll
mov
in
cmp
into
loope
popa
inc
add
outsl
push
ljmp
addr16
cmp
jns
add
adc
into
inc
je
xchg
cwtl
roll
insb
jecxz
mov
hlt
gs
sbb
dec
jns
sahf
and
insb
shrb
xor
dec
fidivl
mov
mov
ret
loope
inc
sbb
jmp
dec
pop
data16
add
in
lods
lods
jecxz
ja
out
pop
cmp
aaa
pop
shlb
loop
jmp
adcl
test
stos
cmc
popa
sub
mov
pop
adc
dec
mov
cmp
lret
jecxz
xor
call
sbb
push
push
test
sub
inc
pop
rclb
adc
fwait
lea
fdivl
sbb
mov
fadds
loop
xor
insl
jns
fs
mov
and
cltd
mov
cld
loopne
adc
pop
mov
nop
and
test
sbb
daa
adc
xchg
push
ret
adc
and
mov
enter
fucomp
jg
lock
jb,pn
movsb
xchg
hlt
push
loope
or
sbb
jno
outsl
out
adc
sub
and
or
imul
push
mov
or
cmp
jge
add
nop
out
xchg
addb
mov
mov
or
rolb
xor
push
lcall
out
pop
inc
scas
jbe
call
mov
mov
cli
jecxz
push
mov
jg
enter
in
int
loop
mov
pop
test
cs
sbb
push
jg
mov
call
push
les
ja
jno
das
dec
into
add
out
add
dec
adc
mov
iret
fwait
lret
add
daa
aas
xchg
mov
movsb
imul
pop
pushf
and
into
xor
xlat
adc
sbb
mov
push
mov
sarb
test
leave
in
sub
add
mov
pop
pusha
fisttpll
sbb
lods
xchg
xor
outsb
sarl
mov
push
xor
add
add
fistpl
and
into
add
mov
arpl
hlt
dec
mov
shl
test
jmp
xor
mov
mov
ja
lahf
pop
xchg
or
add
clc
gs
jno
cmp
xchg
add
xor
mov
sub
xor
mov
dec
push
mov
sbb
sahf
into
push
push
mov
fisubrs
pop
idiv
orl
cmp
fisubl
fmulp
shll
xchg
sar
mov
inc
nop
mov
pop
imul
and
test
test
mov
enter
pusha
fcomps
je
cli
xchg
and
in
rcrb
gs
lods
add
shll
sbb
push
repz
push
and
stos
sbb
xchg
mov
xor
dec
data16
push
lods
mov
vpcmpeqq
xor
out
addb
adc
and
xchg
rclb
xor
xchg
add
outsb
sarl
lock
mov
lret
call
add
and
out
int3
ror
fdiv
xor
xchg
push
and
add
sti
leave
stc
scas
cmpsl
dec
rorb
pop
push
mov
ljmp
add
sbb
inc
iret
adc
inc
ficompl
pop
sbb
cli
dec
jl
in
cmc
rcll
shl
aam
jmp
mov
inc
inc
mov
lcall
mov
repnz
adc
mov
dec
es
dec
mov
call
outsb
aad
cmp
inc
sbb
scas
popf
or
mov
dec
outsb
clc
pusha
pop
fidivs
jecxz
sbb
gs
cmp
jnp
push
dec
pop
out
inc
push
push
ret
je
aas
xor
mov
sub
dec
jne
ret
inc
mov
in
imul
rcr
aad
mov
in
mov
xchg
insb
sub
mov
jnp
push
fisubs
xor
sub
sub
ja
pop
das
addr16
fsubs
mov
dec
dec
sub
mov
js
in
fcomps
push
jb
rorl
ja
iret
popa
sub
aad
sarb
in
mov
bound
fstp
adc
jp
or
test
push
dec
push
pop
pop
xchg
mov
adc
xchg
lret
push
sbb
dec
dec
lret
rorl
aad
packssdw
dec
out
push
imul
or
xchg
fldt
jo
pop
lds
mov
repz
cli
outsl
in
mov
jno
pusha
daa
ret
lods
push
pop
rolb
int
pusha
sahf
insb
cwtl
push
data16
pop
mov
inc
cltd
xchg
add
jb
out
in
icebp
cwtl
lods
call
sarb
repz
cmpsb
out
cmp
jbe
push
xlat
xor
test
jnp
mov
and
mov
jno
test
add
fucomi
cmp
inc
ret
mov
adc
idiv
sar
jne
movl
lods
mov
inc
push
fidivs
jo
adc
dec
icebp
inc
fwait
inc
sub
sbb
out
out
jecxz
stc
cmp
adc
test
jp
xchg
stc
mov
cmp
repnz
jl
mov
pushf
pushf
sbb
loopne
pop
movaps
les
ljmp
sub
xorl
mov
jne
fcom
inc
mov
inc
jns
inc
sbbl
hlt
fstpl
push
push
cmp
das
mov
out
cmp
clc
lret
pop
std
adc
ds
xchg
mov
stc
and
mov
mov
rcrl
sahf
pop
fstpl
mov
push
sub
daa
sbb
inc
das
ret
mov
mov
loopne
add
jge,pt
mov
push
mov
sahf
sub
sahf
call
sar
aas
push
cmp
pushf
fwait
call
fcmovu
push
mov
mov
lock
lret
and
fwait
sbb
add
and
jg
int
jecxz
js
inc
or
dec
sbb
cmc
fs
push
jo
lods
jb
xor
fnstenv
aas
mov
rorl
mov
iret
imul
loopne
add
xor
push
cmpsl
jg
and
cld
icebp
adc
inc
sti
lret
add
add
xchg
inc
lret
cmp
leave
xor
fwait
hlt
pop
cmp
mov
mov
jp
jo
inc
push
sti
or
sbb
inc
es
push
xchg
xor
fwait
fs
jne
addr16
sbb
insl
mov
push
fcom
aas
jle
daa
or
cmc
pop
mov
gs
xchg
inc
lcall
out
rorl
mov
push
mov
loopne
sbb
ret
cmp
imul
sbb
pop
push
fucom
add
in
sub
mov
ret
lods
push
push
xor
cmc
out
aad
cli
push
aad
fadds
add
push
lahf
mov
sub
inc
lock
add
lods
mov
jbe
fdivs
je
xchg
push
jae
fdiv
fwait
sbb
jmp
repnz
pop
lods
loope
add
push
cmp
shrb
in
jmp
repz
bound
adc
js
jnp
mov
or
sarl
add
and
loopne
lea
stos
sub
dec
cmp
dec
faddp
je
lahf
mov
push
push
test
mov
lret
lcall
sub
and
xchg
mov
flds
mov
xchg
jo
push
jnp
mov
daa
fisttpl
sbb
mov
mov
pop
lcall
psadbw
stc
sbb
movsl
lcall
or
cltd
hlt
in
sub
pushf
and
fwait
cmp
push
sbb
pop
sarl
cmc
mov
lods
mov
lret
cmp
mov
jp
push
pop
jp
daa
jecxz
adc
sbb
and
sub
xchg
add
lret
and
push
dec
in
sub
sub
and
or
out
mov
or
in
sbb
repnz
mov
ja
insl
pop
inc
sbb
sub
xchg
fsubr
add
in
jo
pusha
in
jp
pop
mov
mov
mov
aad
inc
jne
push
mov
movl
mov
pushf
adc
pop
push
and
mov
inc
cwtl
add
sahf
pop
pop
es
push
mov
or
dec
add
push
stc
jnp
add
rcll
lds
pop
push
pushf
lea
dec
cltd
inc
xchg
aas
leave
ffreep
aam
inc
jne
aad
mov
lods
sahf
in
cli
jl
xchg
icebp
jno
jne
lods
daa
jne
cwtl
inc
out
ss
jecxz
hlt
xchg
xchg
stos
mov
sbb
pop
sub
push
imull
lcall
arpl
je
shll
addr16
adcb
xchg
or
jno
mov
push
stc
mov
icebp
cli
inc
scas
lock
and
test
jb
xor
mov
cmp
repnz
mov
sti
xchg
insl
dec
dec
test
mov
and
scas
lret
andb
popa
xor
inc
mov
or
popf
out
ljmp
push
out
insb
in
push
pop
js
stos
loope
cld
xchg
insb
ret
daa
cmp
sub
xchg
dec
sbb
scas
add
js
sbb
cmp
add
fstps
mov
pop
roll
fcmove
cmp
mov
xchg
or
xchg
into
test
add
lea
out
xor
xchg
mov
lahf
and
sbb
xor
xor
mov
ret
and
out
push
jbe
sub
sub
ret
testl
lret
dec
imul
and
popf
jl
or
mov
mov
push
outsl
popa
sahf
xor
xor
add
jb
js
jmp
and
sub
dec
cmp
sbb
xlat
lock
int
dec
lds
jmp
cmpsb
outsb
sbbl
pop
or
repz
dec
pop
sbb
push
adc
insb
sub
jnp
pushf
in
lea
subb
std
mov
jno
and
push
push
xchg
enter
ja
ljmp
into
popa
push
xchg
dec
mov
adc
mov
dec
sbb
push
lcall
fidivl
test
or
xchg
xor
fwait
sbb
push
popa
dec
lds
push
sbb
std
ljmp
fiaddl
test
ss
test
fisubrs
faddp
aad
repnz
test
in
cmp
stos
addl
scas
sub
testb
sub
ja
sbb
sub
adc
add
clc
sbb
pop
push
mov
sbb
lds
cwtl
mov
mov
or
loopne
mov
xor
pop
insl
lea
testl
push
dec
lahf
movsl
data16
xor
in
mov
jae
mov
in
loop
ljmp
dec
cmp
xchg
jno
push
jno
jo
lock
hlt
xchg
hlt
scas
les
sti
or
mov
dec
push
fildl
cmp
xor
push
movsb
mov
sub
sub
inc
aam
cmpsb
out
cmp
repz
outsb
push
mov
pop
aad
sbb
arpl
inc
imul
push
jnp,pt
les
std
and
cmpsl
jo
pop
pop
push
pop
jmp
jo
pop
cmp
and
mov
inc
icebp
push
ret
ret
push
cmp
mov
mov
outsb
cmp
enter
out
aas
aad
jecxz
out
mov
push
mov
popf
adc
cmp
adc
shlw
lcall
scas
loope
icebp
cwtl
xor
orl
cmp
sbbl
mov
mov
sub
ds
arpl
mov
inc
mov
push
clc
mov
iret
lods
fsub
pop
xor
out
mov
pop
pandn
pop
dec
push
add
imul
fsubl
push
mov
iret
xchg
outsb
rol
lds
or
jno
outsl
cmp
or
in
sub
fs
int3
jbe
and
aad
mov
cmp
jnp
subb
in
lods
gs
mov
rcrb
ret
jne
cmp
rolb
mov
push
dec
cmp
cmpsb
xchg
int
adc
dec
jecxz
cs
nop
sbb
dec
inc
lods
or
out
sbb
notb
mov
dec
cmc
lods
fwait
sbb
stc
and
cmp
lret
mov
xchg
fs
loop
add
push
mov
fcomi
lods
lods
idiv
bound
push
sti
lret
sub
fldcw
xrelease
jle
mov
add
outsb
cmp
jp
sbb
in
cmc
sahf
pop
mov
cmpsl
flds
fldl
xchg
jp
in
ret
sub
je
lahf
fnstenv
sub
dec
ret
mov
inc
in
into
mov
adc
or
lods
movsl
or
lret
bound
loop
or
xor
mov
test
xchg
jbe
xchg
inc
or
std
fidivs
mov
loop
and
test
loope
mov
loopne
xorb
adc
stos
mov
cmpsb
add
sub
mov
xor
and
test
adc
xchg
arpl
popf
xor
inc
jo
inc
aaa
or
out
mov
ljmp
pop
add
es
clc
mov
loop
or
jg
out
in
cmp
mov
popf
push
stos
icebp
bnd
cmp
cmpb
push
sbb
fwait
xchg
insl
cld
jge
jbe
imul
pop
adc
cmp
lock
mov
pusha
jbe
mov
push
jnp
pop
cltd
ljmp
aam
mov
xchg
movd
sub
push
arpl
cmpsb
js
add
mov
popa
cmpb
stc
jb
sub
pop
pop
pop
push
test
or
or
pop
mov
movsl
or
or
jp
popa
shrl
out
adc
sbb
je
addb
inc
xchg
loope
inc
shll
mov
loop
jno
mov
adc
dec
push
aam
sbb
out
adc
aad
add
or
pop
push
jp
imul
jge
pslld
dec
sbb
outsb
dec
shrb
jb
push
xchg
lock
test
out
xlat
sub
arpl
cwtl
lods
and
push
mov
adc
shr
inc
cmp
test
movsl
inc
mov
xchg
lock
and
faddl
fdivrp
aaa
mov
jno
mov
cmpsl
push
push
xor
pusha
xchg
or
dec
sbb
shl
push
mov
sbb
or
cmp
insb
cld
xor
add
rcr
sbb
into
aaa
mov
mov
cmp
jle
clc
dec
sbb
adc
mov
mov
and
sbb
mov
ss
aaa
lds
aaa
mov
jge
and
in
aad
pushf
push
andb
out
cld
mov
mov
imul
lock
repnz
les
push
icebp
aaa
and
cli
sbb
mov
loope
sbb
push
sbb
insl
movsb
add
roll
or
addr16
ss
mov
push
jns
push
xchg
gs
ds
mov
adc
ds
ret
xchg
jb
pop
dec
adc
mov
sub
mov
inc
dec
call
sbb
sbb
lods
jo
sbbl
xor
insb
in
cmc
sub
je
orb
test
sub
pshufw
mov
repz
lods
jno
jo
ror
mov
or
lea
in
ss
insb
cmp
shl
leave
arpl
fadds
movsb
mov
push
and
sub
arpl
ret
popa
inc
adc
jmp
xchg
sub
es
jae
testl
cmp
cmp
imull
les
leave
neg
dec
int3
sti
enter
xlat
loopne
dec
sbb
lcall
daa
adc
aas
ljmp
pop
jo
ret
jge
push
cvtps2pi
imul
jae
mov
mov
inc
lcall
mov
repnz
dec
mov
cwtl
in
or
push
xor
dec
fisttpll
in
loop
std
repz
stos
popl
add
mov
mov
pop
test
out
adc
movsb
leave
lods
data16
out
jle
mov
xchg
sub
pushf
movsb
mov
cmp
and
jp
lahf
xor
aad
ret
and
xchg
mov
mov
aad
enter
jg
ret
xor
xchg
fxch
sti
out
icebp
inc
stc
outsl
jnp
gs
in
dec
cmc
xchg
mov
ret
pop
sbb
icebp
in
sbb
pusha
repnz
fucompp
jmp
adc
std
xchg
insl
or
xchg
scas
outsb
nop
inc
fs
jmp
ficoml
push
leave
imul
loope
movsb
mov
xchg
sub
pop
decl
inc
sahf
nop
sbb
jl
mov
mov
pop
les
pop
adcl
add
push
in
pop
jl
lods
push
or
or
cmc
aaa
lcall
loope
pop
sub
sahf
test
mov
and
cwtl
dec
mov
les
orb
repnz
xlat
lahf
push
shlb
call
xor
push
sub
cs
mov
es
xlat
sub
add
xchg
stos
les
les
orl
xor
add
dec
lcall
das
mov
insl
movsl
adc
mov
push
ds
or
mov
dec
loop
incb
cmc
sub
pop
sbb
nop
clc
inc
jle
and
push
das
loope
pop
cmc
mov
jbe
sbb
adc
pusha
dec
pop
aas
mov
mov
adc
mov
sub
cmp
stos
fisubs
in
cmp
pop
test
es
sahf
push
push
xor
dec
jnp
push
fwait
in
sarb
test
push
pop
adc
or
fldl
scas
ss
inc
add
jae
mov
stc
ficoml
add
out
pop
xchg
pop
cmp
jg
pop
jno
mov
nop
or
js
fwait
adc
mov
shlb
xchg
in
adc
icebp
inc
pop
pop
push
fbld
mov
in
and
pop
into
adc
jnp
inc
mov
jp
popf
adc
xchg
or
sbb
mov
xchg
shl
fnstsw
cmp
push
sub
sbb
adc
fsubrl
or
push
daa
cld
out
in
pop
or
ja
lcall
or
pop
aaa
popa
lods
daa
or
push
push
jmp
jl
dec
push
fiaddl
mov
stos
sub
add
inc
loop
pop
decb
or
xor
icebp
pusha
push
pop
add
push
jbe
jle
and
inc
jo
in
push
incl
push
lea
or
mov
xchg
mov
push
jae
arpl
mulb
or
daa
jo
xor
call
js
mov
sti
ror
arpl
sub
pop
add
xchg
lock
xchg
cmp
mov
jge
stc
dec
cmpsl
inc
fs
sub
jae
xor
out
xchg
arpl
cmc
adc
jge
mov
mov
jno
mov
test
mov
fcomip
out
lcall
movsl
ja
int3
push
mov
pusha
or
icebp
mov
scas
ret
nop
loop
in
cmp
jo
fists
and
inc
add
lds
imul
xchg
lret
mov
lea
cmp
pop
sub
sbb
repz
dec
ficoms
lds
std
pop
jle
ror
inc
addr16
push
sbb
cmp
outsl
test
sti
pop
pusha
mov
mov
imul
lods
cmp
lahf
sarl
xor
jnp
xor
push
jmp
insb
mov
mov
ret
mov
xchg
xor
scas
out
pop
cmpsb
mov
xor
xor
and
pop
jg
or
out
jb
mov
cltd
mov
insl
adc
fmulp
mov
mov
pop
xchg
sub
test
aas
push
xchg
into
and
sbb
aam
icebp
or
loopne
fadds
xor
sub
adc
mov
push
xchg
cmp
lds
adc
dec
cmp
out
pop
add
test
mov
sbb
fadds
ja
out
or
xlat
movsl
std
xchg
fcomi
insl
js
fisttps
out
dec
imul
push
pop
int
xchg
adcb
nop
pop
or
inc
imul
mov
pushf
fwait
sub
mov
xchg
xchg
loope
or
lea
mov
enter
iret
int
push
inc
mov
out
sub
or
test
push
mov
nop
sbb
js
mov
add
mov
cs
rorl
scas
push
pop
jmp
test
push
inc
mov
jmp
das
pusha
sub
jo
out
ds
pop
rclb
cmpsb
test
mov
hlt
scas
shl
test
sarb
xor
adc
stc
jecxz
cld
mov
push
or
dec
adc
leave
add
xchg
fsubrp
insl
sti
cmp
sub
cs
js
in
popl
jb
and
xor
mov
dec
sbb
jge
xor
shl
xor
je
in
push
movsb
lahf
popf
ja
jnp
jns
out
cwtl
inc
mov
dec
test
sub
test
ja
sets
stos
jne
adc
cwtl
gs
into
jg
xor
and
pop
outsl
rol
xor
mov
dec
in
mov
mov
lods
repz
xor
movsl
icebp
fs
pop
push
jl
and
mov
xchg
push
popa
in
test
or
repz
dec
addb
imulb
jb
test
sti
les
mov
in
push
mov
dec
mov
fs
mov
fnsave
pop
mov
xchg
cmp
mov
out
inc
or
insl
mov
xchg
jns
pop
add
mov
aas
sbb
out
data16
push
and
jne
xor
inc
mov
or
and
xchg
mov
pop
in
lods
fmul
int
mov
add
push
or
shll
data16
sub
insb
cwtl
mov
fcoml
mov
fisubrs
xchg
pop
cmp
dec
loope
icebp
jne
sub
imul
jl
dec
imul
std
cmp
mov
rorb
lret
aas
lret
lret
movsb
lods
frstor
mov
rcr
aam
pop
cmc
pop
jno
ljmp
jae
cmpb
nop
add
andb
pop
pop
inc
icebp
std
out
daa
mov
orb
mov
sahf
and
rorb
or
mov
roll
cli
jne
ja
mov
into
cld
adc
rclb
fsubl
sbb
lds
cmc
sbb
fcomp
sub
dec
ret
jl
mov
jo
dec
js
outsl
pop
cmp
in
mov
ljmp
inc
add
sub
push
adc
mov
mov
xor
pusha
push
pop
cmp
hlt
ss
ficompl
stos
mov
jae
push
dec
sub
icebp
int
insl
adc
fmull
xchg
sbb
sbb
dec
mov
lea
jl
int
sub
inc
shrb
mov
cmpsl
scas
push
inc
enter
xor
fstl
hlt
lret
pop
scas
das
push
test
push
add
vmovsd
cmpsl
into
push
subb
inc
cmp
xor
data16
lcall
lds
xchg
pop
shrl
mov
fisubrs
jge
mov
xor
mov
xor
insl
imul
jmp
in
leave
in
out
pushf
cmpsl
xor
and
mov
je
sub
add
aaa
push
jle
mov
sub
inc
adc
into
jl
loope
mov
jne
push
stos
mov
push
sbb
push
sti
mov
bound
jl
hlt
cwtl
cmc
inc
sub
divb
out
mov
dec
jl
roll
iret
daa
mov
sub
js
sbb
cmp
dec
ljmp
xor
fs
cmp
mov
dec
stc
adc
pop
inc
cwtl
insb
jae
or
mov
sub
fmuls
aas
iret
dec
inc
adc
mov
outsl
push
sub
xchg
stc
imul
xchg
call
xor
loope
adc
loope
stc
adc
ficoms
loop
adc
sub
push
jno
push
insl
daa
pop
ret
pop
cmp
cmp
test
pop
dec
fs
mov
add
inc
dec
and
jmp
orb
fsubrp
scas
dec
pusha
and
mov
inc
nop
cmp
push
leave
fs
push
in
out
sub
dec
or
and
push
cmpsb
and
in
out
jae
mov
jl
test
mov
add
mov
fsub
mov
lret
fsubr
sar
lahf
pop
fildll
mov
es
xchg
std
xchg
inc
sub
pop
or
imul
mov
ss
push
rcrb
lea
jnp
mov
push
ret
clc
push
out
pop
push
inc
in
dec
sbb
mov
pop
pop
add
or
cld
roll
add
pushf
pop
xor
xchg
cmpsb
fnstcw
mov
push
outsb
comiss
lods
or
imul
or
or
daa
lahf
sub
imul
xchg
dec
add
test
xor
pop
add
fdiv
sahf
aam
sub
fildl
es
out
in
psubd
inc
sarl
sti
fiadds
daa
cmpsb
repz
pop
cld
cmp
js
loopne
add
xor
mov
sub
psrlw
xchg
fcmovnbe
pop
insl
sbb
mov
out
mov
mov
aaa
mov
pusha
mov
and
push
and
nop
sbb
adc
movsb
xor
adc
xor
cmovl
ret
imul
adc
neg
aad
push
pop
inc
pop
jbe
cld
aaa
iret
call
loopne
faddl
mov
sub
cmp
movb
cmp
out
mov
stc
out
mov
sub
enter
push
in
rorl
data16
clc
adc
adc
pop
jecxz
and
ret
add
bound
dec
pop
in
jbe
jl
sub
mov
push
pop
nop
lret
in
in
xchg
mov
xchg
push
and
or
dec
into
push
xchg
xchg
and
in
pop
movsl
movsb
iret
inc
lahf
imul
pop
cmc
pop
aaa
outsb
jl
and
mov
jae
sub
jns
add
fwait
in
pmuludq
in
push
pushf
sti
push
rcr
pop
repz
mov
enter
outsl
sbb
sub
test
test
iret
mov
push
xchg
mov
das
adc
sub
in
fldcw
dec
xor
imul
pop
xchg
shll
aas
push
mov
lock
insb
mov
nop
ljmp
arpl
inc
rorl
or
aad
xor
imul
ss
mov
mov
nop
in
es
mov
dec
loopne
add
push
mov
push
xorl
std
into
push
fdivs
lret
rcr
addb
pop
xchg
adc
popf
pushf
push
nop
mov
js
mov
mov
inc
aas
mov
cmp
popf
stc
xor
add
mov
dec
mov
fistps
mov
jo
pop
repnz
jg
inc
push
jae
clc
sahf
jmp
pushf
or
in
inc
cmp
adcb
subb
mov
adc
adc
repnz
addr16
or
int
inc
test
testl
cld
inc
movb
out
sbb
push
jno
dec
mov
sbb
fldenv
cmp
sub
xchg
mov
shlb
ret
icebp
dec
sub
jecxz
mov
lock
or
fwait
mov
and
sbb
daa
dec
dec
add
inc
push
and
adc
jp
stos
test
jp
les
arpl
xorb
xor
or
idivb
loop
jb
push
sub
sbb
enter
lret
enter
loopne
ljmp
sbb
imul
lcall
outsl
jne
mov
insb
lods
out
sub
cmc
icebp
imull
int3
mov
pop
sti
rcrb
fdivr
and
push
ret
dec
push
imul
cmpsb
sbb
push
push
add
fwait
arpl
mull
ljmp
xor
and
xor
jmp
in
mov
ret
sbb
std
imul
xchg
add
xor
daa
pop
sub
xchg
in
pushf
test
jmp
popf
movsl
sub
mov
clc
adc
call
dec
stos
out
lods
cmc
pop
mov
cs
mov
push
sub
cmp
bound
xchg
pop
or
sbb
shlb
insb
js
xchg
js
jb
scas
xchg
insl
test
ret
pop
cmp
fwait
das
fwait
xchg
mov
mov
jmp
int
int
insl
add
orb
clc
mov
lock
jmp
repz
movsb
and
loopne
cmpsb
mov
and
add
and
orb
jl
scas
pop
insb
mov
add
enter
jns
stc
sarb
mov
std
lcall
push
stos
push
test
adc
push
and
mov
dec
push
mov
dec
mov
out
sbb
xor
pushl
movsb
or
mov
lods
pop
leave
or
sub
push
sub
inc
icebp
or
imul
cmpsb
xchg
pop
clc
mov
jae
cmp
dec
icebp
test
mov
jge
int3
repnz
jmp
mov
test
pop
sub
adc
lcall
jecxz
sbb
inc
mov
cli
jnp
imul
pusha
leave
je
mov
pop
add
pinsrw
cld
fwait
inc
scas
imul
sub
in
add
mov
jle
dec
push
in
push
in
adcb
push
pop
orl
fs
mov
push
mov
mov
add
dec
hlt
ret
fwait
jl
pop
rorb
lret
ss
fsub
call
outsb
gs
loop
stos
cmp
or
mov
out
add
imul
scas
lahf
iret
test
cmp
test
mov
sbb
movsl
and
jg
in
bound
pop
addr16
jg
popa
push
mov
dec
and
sbb
loopne
xchg
int
add
sub
mov
cmp
jne
divb
sub
aad
mov
dec
pop
enter
jnp
out
xchg
mov
cmc
cli
cmp
dec
add
inc
shlb
jle
jno
int3
aad
out
push
inc
sti
stos
xor
push
dec
je
ja
mov
aad
jnp
stc
or
out
jns
das
sbb
outsl
cld
ficompl
icebp
mov
mov
xchg
dec
jp
pop
add
outsl
mov
psadbw
in
cmpsb
outsl
inc
sar
sub
insl
gs
sbb
add
outsb
int
fucomi
jmp
stos
leave
mov
leave
add
subb
push
cs
inc
enter
dec
and
pop
daa
push
adc
call
notl
mov
in
call
arpl
cmp
dec
sbb
push
sbb
mov
jnp
inc
shll
inc
pushf
adcb
lret
and
sub
sbb
cwtl
inc
in
ds
inc
movsb
mov
dec
cmp
sbb
adc
hlt
idivb
lock
or
ret
jge,pn
cmp
pop
cmp
enter
or
shrb
outsl
arpl
xor
int3
mov
pop
movsl
jp
pop
mov
aam
lods
outsl
scas
icebp
push
mov
leave
cmp
xchg
sub
shl
push
mov
and
jne
mov
dec
jge
pop
push
dec
xor
negl
mov
adc
inc
sub
int
dec
fstpl
sub
push
and
out
scas
outsl
adc
cmpsl
dec
dec
mov
repnz
test
clc
sub
jmp
pop
repz
jae
jg
dec
or
inc
sub
rcr
jmp
rcr
popa
fistps
mov
cwtl
pop
fstl
pop
adc
xchg
sub
rcll
movsb
mov
mov
sti
inc
mov
adc
mov
sub
sub
dec
test
dec
iret
and
adc
mov
pop
push
fldl
cmp
mov
and
jmp
shl
iret
ja
je
nop
add
push
dec
jb
mov
cmp
imul
cmp
sub
cmp
xchg
sub
sbb
and
cli
stos
rorl
mov
sub
pushf
ret
and
mov
sub
scas
ja
sar
mov
pop
fs
pop
push
xor
repnz
pop
or
pop
sbb
roll
and
pop
outsb
loopne
add
mov
rcr
xlat
pop
mov
imul
pop
and
pop
stc
mov
notb
push
xchg
push
jnp
push
sbb
xchg
inc
dec
or
jb
mov
xchg
aaa
jg
inc
lcall
loop
jnp
lret
in
enter
call
pushl
lret
jecxz
xchg
imul
andl
repz
xchg
fidivs
push
mov
dec
sub
test
stos
adc
out
stc
adc
test
aad
inc
into
sbb
pop
lock
mov
sub
mov
adc
test
aas
mov
sbb
std
lret
mov
ss
adc
arpl
fidivl
mov
add
stos
cmp
mov
jge
jbe
test
mov
sbb
fisubs
lds
int3
movsb
xor
dec
subb
mov
shr
stos
mov
jae
and
inc
mov
aam
movsw
stos
cmp
loope
loop
aaa
xchg
std
fcoms
shrl
sbb
mov
notl
int3
ja
inc
push
add
jno
xor
loop
xchg
pop
cltd
sbb
sbb
or
jl
idivb
add
xchg
outsl
xchg
xchg
cmpsb
mov
inc
dec
scas
sub
add
in
xchg
in
and
adc
sbb
inc
mov
ja
imul
lods
rolb
int
xor
arpl
scas
cmp
or
jnp
sbb
adcb
js
jns
or
in
imul
sub
push
jg
mov
out
sbb
imul
fs
lods
nop
jbe
mov
imul
fldl
pop
xchg
rorl
inc
inc
test
aad
xchg
pop
cmpb
clc
or
test
add
sub
push
or
inc
pop
popf
outsl
stos
pop
es
mov
inc
dec
add
mov
push
icebp
mov
testl
mov
mov
and
popf
or
dec
ja
push
xorb
push
into
xchg
out
push
lcall
ds
sbb
mov
out
or
into
xchg
mov
stos
mov
ret
or
fidivs
stos
cs
mov
adc
xor
lea
ret
cltd
lcall
sbb
test
mov
lahf
adc
xchg
inc
rcrl
adc
cltd
loopne
xor
jg
inc
add
scas
daa
decb
push
xchg
push
push
imul
sbb
sti
add
cmp
cmpsl
das
mov
adc
test
jb
sub
mov
daa
sti
sub
xchg
xchg
dec
call
jg
mov
mov
inc
mov
fwait
cmp
pop
lret
imull
movsb
sahf
sbb
jb
insb
imul
data16
imul
xchg
das
ret
call
jecxz
xchg
mov
movsl
idivl
aas
lahf
fwait
mov
lods
xchg
sahf
pop
imul
jp
xchg
movsb
jne
out
ror
cmpsb
outsb
or
pusha
xorb
dec
and
into
shlb
test
cmp
pop
sbb
adc
mov
push
loope
pop
jmp
cmp
subl
xor
cmp
mov
sbb
data16
cmp
dec
nop
loope
fcomps
loope
mov
scas
lock
outsl
add
dec
mov
popa
xor
inc
fisttpl
fimuls
lcall
sub
test
test
aad
jne
mov
pop
lods
out
xchg
xor
pop
jbe
ljmp
mov
jne
inc
mov
movsl
push
loop
push
xor
ret
dec
mov
test
add
hlt
negl
mov
inc
int
mov
lock
cmpl
xor
cltd
push
cmc
lds
sub
je
data16
pop
js
sbb
add
mov
push
mov
je
nop
mov
xor
mov
into
mov
lahf
in
mov
and
mov
cmp
xchg
jl
out
pop
in
js
push
xchg
adc
scas
sti
movsl
push
adc
sysenter
and
xchg
or
pop
out
lret
lods
pop
inc
xor
cmc
or
testl
and
xchg
mov
mov
clc
pop
jbe
arpl
aam
js
cmp
mov
adc
sbb
lods
fisttpll
aas
repz
mov
leave
or
xchg
push
sar
arpl
aam
test
mov
out
cmp
imul
flds
mov
int3
out
mov
lea
xor
insb
icebp
fs
jmp
sbb
xor
aas
sbb
out
movsb
andl
js
xchg
mov
nop
adc
xchg
pop
test
or
bound
ja
cwtl
inc
repnz
cmpb
adc
adc
in
icebp
shll
ljmp
xor
xlat
out
cmp
adc
in
add
jb
aas
pop
jns
mov
stos
sti
mov
loope
mov
cmp
movsl
xor
mov
jle
mov
ret
in
jae
imul
es
mov
add
jne
inc
lret
stos
sub
mov
jmp
adcb
mov
ljmp
adc
mov
out
jno
lret
mov
pop
cmc
xor
push
jbe
iret
mov
pop
in
mov
push
push
jge
daa
shlb
cmpl
inc
gs
flds
pop
inc
sub
mov
lods
int
sbb
add
push
xlat
data16
mov
lods
dec
std
mov
mov
cmp
adc
mov
ss
push
out
loop
cmp
into
and
invd
mov
movsl
xor
sahf
mov
cli
pop
pop
sbb
mov
fsubrp
jg
aaa
inc
lock
nop
jecxz
dec
std
dec
divb
xor
mov
mov
nop
pusha
mov
pusha
xchg
jnp
xlat
cmc
test
stos
nop
ret
mov
pushf
into
pop
add
shr
xor
scas
inc
imul
js
je
fstps
xchg
std
jl
sbb
fwait
or
imul
mov
xchg
cmpsb
lds
popf
ds
mov
mov
mov
pop
mov
repz
ds
pop
mov
cmp
jle
subb
mov
jl
imul
movaps
xchg
jecxz
add
xchg
xchg
mov
pop
sbb
xchg
lret
dec
outsl
dec
dec
mov
push
xor
cltd
adc
mov
repnz
lret
scas
mov
cmp
out
out
and
mov
in
mov
adc
icebp
sahf
pushf
insl
jge
jp
mov
cmc
xor
in
jns
sarl
pop
mov
adc
xchg
in
jl
or
divb
dec
loop
pop
pop
sbb
pop
insb
dec
int3
ja
mov
movsb
sub
stc
lahf
fwait
sub
push
mov
jb
cwtl
sbb
push
adc
pop
test
cmpsl
push
movsb
test
jnp
into
pop
adc
repz
inc
fcoms
test
aaa
lret
mov
adc
aas
mov
mov
ret
dec
test
mull
add
pop
adc
sbb
imul
push
jp
insl
jl
pop
rorb
jle
adc
shll
insb
xchg
scas
adc
outsb
into
pop
scas
xchg
pop
xchg
sti
hlt
adc
scas
push
xorl
or
arpl
push
test
xchg
inc
add
daa
testb
push
mov
push
sbb
mov
int3
test
in
mov
inc
xchg
fimuls
fs
cmp
arpl
rol
movsb
or
hlt
pushf
mov
loope
je
dec
jge
xchg
fcmovb
aas
push
mov
inc
in
jno
mov
mov
push
cli
jne
arpl
rclb
xor
jae
fistpl
pop
sbb
adcb
gs
stc
adc
pushf
inc
ss
push
jg
out
loop
icebp
mov
int
in
rorl
push
jb
xchg
pop
mov
mov
and
nop
nop
pop
sarb
bnd
jbe
and
mov
mov
pop
xchg
mov
push
jmp
testl
push
shll
cmpsl
icebp
jb
ja
addr16
cmp
jbe
push
ret
jmp
aaa
fists
xchg
mov
addr16
loope
xchg
and
pop
icebp
dec
mov
cld
aas
add
pop
mov
cmp
out
jle
scas
ljmp
movsl
lods
mov
push
sub
imul
sbb
add
dec
mov
dec
sbb
cmp
das
cmp
xchg
sbb
retw
test
mov
push
push
cwtl
addr16
shlb
and
and
and
aaa
jge
sbb
pop
cmp
stos
adcb
out
mov
lock
mov
fsub
sbb
adc
ljmp
mov
dec
xchg
clc
test
xchg
inc
push
xlat
cmp
ficoms
fcoml
addb
or
fcomps
push
mov
cmpsb
mov
pop
inc
sub
jge
in
pop
and
inc
pop
imul
jmp
push
mov
out
cmp
pop
pop
pop
je
dec
nop
pop
int
dec
or
mov
out
pop
sahf
in
jne
mov
inc
popa
adc
popa
inc
push
imul
loopne
pop
mov
mov
jno
pop
aad
sarb
push
mov
pop
sub
xor
mov
rolb
rclb
out
add
or
ss
xchg
les
in
push
repnz
jl
ret
mov
iret
js
stos
add
inc
insl
adc
lcall
mov
lahf
adc
jg
ret
inc
leave
dec
sbbl
lret
mov
scas
cmpsl
cmp
inc
sbb
jbe
push
push
cmp
gs
lret
jmp
call
xchg
mov
push
push
mov
rol
push
sbb
out
push
and
pop
or
sub
out
push
leave
test
mov
sub
outsl
lock
or
mulb
pop
mov
je
pop
sbbb
int3
ss
adc
sbb
lods
lcall
movsl
cltd
test
jb
gs
dec
jo
cmpsb
pop
sub
xchg
cmp
pushl
push
inc
loopne
imul
push
mov
addr16
xlat
notb
pop
fimull
jb
sub
mov
push
xchg
cmp
popa
cmp
cmp
jecxz
dec
mov
inc
xor
test
arpl
dec
inc
andb
mov
add
xchg
push
dec
inc
fisubrl
xchg
sub
mov
mov
inc
and
lods
pop
add
aam
jmp
stos
and
lret
test
sub
lret
mov
dec
lcall
int3
cltd
or
decl
mov
push
mov
lock
mov
pop
pavgb
outsb
popa
and
lret
aam
inc
add
jno
rcrb
es
sub
cmp
jg
imul
test
adc
scas
add
rclb
mov
cltd
sbb
cmp
out
out
sti
jl
ja
fwait
push
sub
test
jp
in
dec
push
fidivl
mov
jp
mov
xchg
inc
push
inc
jnp
adc
in
stc
cmc
push
rcrb
dec
movsb
insl
je
shll
push
stc
mov
fmuls
ret
sahf
out
clc
and
adc
rcll
pushf
fnstcw
lcall
dec
sbb
aad
testb
push
scas
xchg
ss
shll
cmp
pop
push
hlt
jle
dec
add
xor
adc
les
xchg
loopne
dec
xor
push
push
or
jmp
pop
arpl
lods
leave
dec
sub
adc
or
ffreep
mov
pop
lods
repnz
push
arpl
leave
or
mov
cmpsb
loope
xchg
fdivs
movsl
mov
icebp
dec
adc
or
xchg
sub
outsl
xchg
les
rorb
push
inc
mov
dec
xchg
popf
imul
push
divb
out
push
adc
push
dec
jge
repnz
xchg
jbe
stos
aas
push
test
push
mov
push
cmpsl
insb
lret
lret
jae
in
ds
sbb
jo
rolb
mov
into
mov
mov
pop
iret
pusha
xor
adc
ret
mov
repz
ds
xchg
or
push
in
daa
push
jmp
popa
cmpsb
mov
cmc
jle
xchg
xchg
lret
dec
jl
mov
hlt
repnz
xor
xchg
insl
and
clc
xor
pop
or
inc
pop
adc
or
push
pop
fbld
inc
sahf
push
xchg
pop
or
insb
mov
dec
mov
dec
mov
shrb
inc
dec
es
int3
jmp
cs
mov
sbb
mov
mov
andl
cwtl
mov
sub
movsb
mov
cltd
out
adc
out
dec
sub
ljmp
pop
pop
mov
leave
pusha
lret
sbbb
jle
mov
mov
loop
imul
pop
xor
imul
push
popf
cmpsl
fistl
sbb
xor
xchg
loope
test
jg
xlat
and
aas
bound
push
mov
mov
imul
lcall
cmp
pop
mov
and
stc
loopne
xchg
cmc
mov
lods
adc
enter
mov
xor
and
mov
pop
aaa
jns
movsb
and
push
jne
push
pop
test
add
xor
mov
cwtl
in
push
xchg
ss
outsl
sarl
fcompl
bound
xor
sbb
sub
fistps
cmp
xchg
jae
in
dec
or
dec
std
test
fwait
in
lea
mov
lea
ja
repnz
sbb
outsb
ds
pop
fldl
dec
scas
out
in
aad
mov
pop
xor
arpl
fildll
xor
nop
in
push
mov
repz
lods
fsubrs
adc
test
jp
addr16
or
sbb
rorl
test
fwait
and
in
out
sub
test
mov
or
das
mov
push
sahf
jle
test
push
inc
mov
jo
out
and
sub
mov
inc
iret
cmp
xchg
add
cmc
add
xadd
dec
add
mov
fistl
or
jmp
add
push
dec
scas
les
mov
mov
shl
mov
cmpsl
cmpsb
sub
pushf
pop
push
push
jge
push
cmpsb
inc
cmp
pop
push
add
cmc
das
in
in
sub
pushf
lret
fwait
mov
mov
mov
or
nop
cwtl
lcall
lds
cltd
jle
es
inc
dec
adc
negb
pop
pushf
xchg
inc
mov
pushf
inc
and
fdivrs
std
push
cmp
fdivl
push
clc
pop
mov
xor
adc
aam
sbb
pop
and
out
pop
xchg
ror
lret
pushf
mov
add
cmp
adc
mov
mov
mov
rolb
dec
out
test
jo
pop
test
iret
push
xchg
mov
into
sub
push
and
xor
inc
adc
jmp
push
adc
aas
cmp
test
adc
mov
mov
lret
jb
sub
fs
ljmp
sbb
lahf
paddsw
je
add
jle
mov
cmp
cmp
dec
pop
movsb
in
popa
sbb
adc
adc
lods
ds
mov
faddp
push
mov
jnp
jg
dec
jge
das
add
cmp
pop
adc
lcall
jnp
insb
scas
notl
rolb
sub
jb
adc
mov
and
add
push
push
pushf
mov
rcr
movsb
dec
fdivl
push
jp
jns
out
push
sub
repnz
jg
pop
inc
sub
dec
pop
fnsave
push
aas
sbb
fdiv
cmp
rclb
int
mov
test
popf
xchg
out
mov
insb
sub
pop
addr16
int
xlat
nop
pusha
xor
push
xchg
imul
aaa
cmp
sbb
fwait
sbb
fnstenv
lds
shll
xchg
cmp
imul
fcoms
repz
fadds
cmpsb
mov
adc
test
and
cli
cld
movsl
or
xchg
out
pop
dec
jno
insl
out
add
mov
lcall
stos
loop
jg
in
test
add
cwtl
inc
push
cs
lahf
pop
sbb
das
and
sti
ljmp
inc
repz
enter
jno
sbb
xlat
bound
cmp
pushf
adc
mov
xchg
je
sub
in
ds
sbb
stc
jecxz
int3
add
insb
xchg
xor
mov
jnp
sbb
push
add
js
filds
jle
bound
mov
push
stos
pop
imul
xor
imul
dec
jmp
lahf
cmp
dec
sbb
or
add
int3
cmp
jge
adc
xchg
mov
pop
jns
mov
mov
inc
aad
cmp
fidivrs
jne
in
decl
sbb
roll
adc
fsubl
cmp
insl
xchg
cmp
jge
insb
hlt
sub
scas
pop
daa
outsb
cmpsl
in
test
push
sub
das
adc
test
xor
popf
das
bts
mov
dec
movsb
inc
pop
mov
in
dec
dec
dec
and
pop
sub
mov
gs
pop
sti
mov
jns
int3
mov
xchg
adc
jle
aam
dec
jno
push
mov
mov
xchg
out
jno
sti
aam
mov
ja
outsl
mov
iret
into
cmp
mov
and
xchg
mov
aad
iret
mov
and
sahf
mov
sbb
pop
int
bound
aaa
dec
sbb
mov
outsb
adc
test
into
lds
sbb
test
jmp
push
arpl
aaa
std
in
jl
popf
jb
dec
lahf
aas
xor
test
sub
aad
setle
xchg
icebp
cmp
cmp
add
push
mov
jmp
inc
dec
fcmovnbe
pop
hlt
jmp
pushl
hlt
cwtl
xor
and
shlb
mov
stc
dec
mov
in
imul
cmpsl
jmp
inc
imul
xchg
ss
adc
jmp
test
xlat
sub
movsl
mov
inc
outsl
or
dec
sahf
enter
pop
int3
and
jae
adc
loop
lods
adc
shl
sbb
leave
inc
add
jl
inc
cmp
fs
stc
call
jecxz
test
inc
outsl
jle
pop
jmp
jecxz
out
xor
and
cmp
mov
fcoml
pusha
push
pop
or
push
cmp
inc
sub
mov
pop
jbe
cmp
fnsave
jnp
mov
fwait
aas
insb
push
adc
ficoms
cmp
into
sbb
ficoms
mov
mov
mov
mov
pusha
mov
xchg
pushl
test
xchg
nop
mov
jb
and
jb
mov
push
push
and
pop
sahf
and
ret
fcomps
mov
sub
pop
daa
aas
call
in
xchg
xor
in
fsubl
cli
jns
adc
mov
stc
dec
dec
mov
fidivrs
xchg
repnz
xor
out
rol
jle
mov
add
mov
lods
rcl
push
mov
xchg
and
pop
sbbl
xor
movb
pop
ljmp
add
dec
add
cmpxchg
sbb
cmpsb
cmp
push
push
push
lods
call
fs
jbe
movsb
sub
call
mov
loop
nop
jb
enter
dec
push
mov
mov
roll
or
inc
imul
pop
iret
xchg
dec
sub
pop
mov
cs
xchg
jno
arpl
jle
push
push
movsb
clc
jae
bound
xor
imul
into
lock
add
dec
sbb
lahf
pusha
ficoml
sub
ss
stc
mov
pop
jne
push
in
mov
ret
push
push
xchg
jle
popa
aam
mov
sbb
out
dec
dec
sub
or
idivb
xor
mov
mov
icebp
frstor
sub
rorl
out
out
rcl
xlat
jb
fsqrt
insb
adc
je
dec
arpl
and
jo
inc
les
jb
fildl
and
sbb
mov
and
jb
rcll
mov
xchg
pop
sub
inc
lcall
cvtps2pd
mov
sbb
dec
inc
jbe
mov
popa
pop
dec
jne
dec
out
inc
inc
stc
sub
test
dec
lahf
add
fnstenv
xor
xchg
xchg
push
xlat
repnz
popf
push
mov
jl
inc
sub
dec
cli
out
push
pop
cmp
lcall
jp
lret
pushf
inc
and
sbb
pop
mov
enter
adc
push
lds
jecxz
pop
xchg
pop
xchg
jle
orb
sub
xor
ffreep
cmpsl
inc
push
cmp
inc
cmp
ret
pop
adc
ret
cs
jno
in
sub
fldenv
outsl
inc
into
xor
pop
dec
xchg
ja
lret
in
lds
jb
fcmovb
sti
fadds
fdivl
lret
pop
idivb
xor
iret
ficoms
cmp
sti
xor
or
cmp
dec
push
jle
jp
sub
pop
pop
sbb
mov
xchg
int
jb
gs
into
outsb
enter
mov
mov
or
or
sar
adc
test
jmp
pop
outsb
test
push
or
jge
cltd
and
xchg
mov
xchg
fcoms
fwait
arpl
fisubs
sbb
loopne,pn
scas
xor
or
jge
lods
insb
adcb
out
imul
es
shlb
jb
repz
pop
aaa
jnp
sub
jl
fs
in
push
outsl
inc
add
dec
pop
sub
xor
jge
insl
jmp
in
dec
cmp
mov
aas
aas
scas
outsb
sti
mov
mov
mov
push
push
mov
adc
pop
int
in
sub
jmp
push
mov
xchg
mov
xchg
mov
push
mov
aaa
xchg
testb
sub
push
mov
push
addl
cwtl
ficoms
adc
jno
add
imul
pop
lahf
cwtl
mov
pop
jns
scas
jne
xchg
mov
mov
je
dec
popf
push
insb
pop
jnp
dec
and
int3
jb
jp
js
cmp
ds
jo
lds
stos
xchg
leave
mov
xchg
icebp
lea
je
cmp
pop
xor
pop
and
out
mov
mov
inc
insb
out
ljmp
or
mov
iret
xorl
loop
div
fidivs
daa
les
js
bound
push
pop
ret
aaa
dec
out
dec
xchg
mov
or
fisttpll
pop
sub
cmovs
xchg
xchg
xor
addr16
xor
jge
mov
clc
or
repz
mov
dec
lcall
shl
sbb
pop
lea
jmp
mov
mov
sub
xchg
lret
aas
xor
xchg
lea
shrl
add
mov
pusha
leave
test
out
cltd
aaa
insb
inc
fdiv
mov
sti
adc
ficompl
and
mov
clc
mov
mov
ja
xchg
pop
pop
cmpsb
inc
pusha
jae
ret
jbe
sbb
sub
inc
push
test
jl
cltd
mov
push
movsl
ds
sub
das
je
pop
and
stos
lcall
test
or
imul
add
adc
ljmp
mov
or
inc
imul
mov
xchg
jne
dec
jns
sbb
push
out
push
faddl
popl
or
push
and
jns
scas
ds
inc
in
dec
rcrb
lahf
sahf
aaa
nop
and
jbe
lea
jns
or
xchg
pop
ljmp
jmp
fiaddl
test
push
mov
lret
xchg
dec
lahf
hlt
data16
xor
push
loop
push
scas
pusha
icebp
dec
out
dec
pop
jno
cmp
test
lcall
and
enter
jmp
pop
jmp
loopne
mov
fisttps
ror
cmp
cmc
inc
mov
call
loope
imul
fldt
mov
jnp
aad
pop
xor
imul
cmp
mov
cmp
pushl
or
sub
int
lret
movsb
inc
das
into
mov
imul
hlt
sbb
sbb
inc
mov
subb
or
pop
mov
inc
int3
fldl
fnstenv
in
inc
repz
jg
loope
into
dec
lcall
xchg
in
mov
add
test
mov
mov
sub
xor
dec
popa
inc
loope
push
xor
jns
fadd
mov
push
data16
lods
jecxz
cltd
mov
or
insb
mov
inc
sbb
pop
aas
xor
mov
hlt
scas
cmp
out
bound
jg
sub
mov
fnstsw
call
jmp
vphaddubw
dec
das
adc
xor
inc
ficoms
insl
sbb
mov
ljmp
or
sub
popf
mov
jo
incl
jbe
das
or
dec
lock
hlt
push
gs
pop
add
std
xor
subl
int3
xchg
andl
add
cmpsb
sbb
adc
pop
cmpsb
test
sbb
add
scas
pop
cmp
cmp
bnd
in
push
fistps
jmp
sub
fiaddl
or
orb
pusha
lret
or
cmp
adc
shrl
enter
mov
hlt
ljmp
daa
jle
cltd
cmc
xchg
or
loopne
shll
push
inc
addr16
xchg
xor
test
inc
sbb
in
fnsave
mov
imul
and
adc
out
sbb
ds
stos
fisubrl
ljmp
mov
inc
nop
into
outsb
sahf
test
push
push
push
testl
inc
mov
pop
int
jo
mov
add
aad
sub
test
inc
fs
ret
pop
mov
jl
pop
mov
add
mov
cmc
repnz
fcompl
add
adc
aam
push
ja
cmp
push
imul
cmpsl
ret
data16
icebp
mov
pop
je
lret
and
pop
mov
cmp
cmp
sbb
mov
lret
fadd
jns
cs
mov
out
adc
jo
pop
test
mov
je,pn
xlat
push
xor
mov
in
xor
xor
fs
addb
jae
jp
aam
lods
mov
and
dec
loop
sbb
aaa
movsl
sub
repz
test
pop
xchg
dec
xchg
cs
in
pop
add
sub
addl
inc
and
fwait
mov
add
gs
std
jo
xchg
push
les
and
push
test
push
dec
mov
jmp
fcomp
psllq
dec
add
bound
mov
cld
adc
mov
push
in
mov
jecxz
cmp
clc
mov
mov
cmpb
sub
lret
pop
add
stos
jge
aaa
bound
add
jg
mov
mov
lahf
int
xor
xor
jne
sub
aas
lret
cwtl
adc
or
daa
fwait
jmp
inc
cmp
test
or
push
dec
popa
bound
pop
fstpt
jno
int
pop
subl
bound
in
sub
cli
inc
jle
lahf
sub
xlat
stos
xchg
pusha
xchg
add
xchg
mov
sub
mov
xchg
ljmp
or
lret
inc
test
push
testb
or
and
mov
pop
shrb
push
fiaddl
sbb
sti
push
pop
lds
jmp
mov
stos
cmp
mov
cli
inc
or
mov
icebp
ret
adc
out
pop
loop
dec
mov
dec
enter
adc
out
lea
dec
js
xchg
dec
mov
inc
xchg
mov
test
mul
cmp
sub
fdivs
movl
jecxz
inc
mov
xchg
aam
lods
loop
mov
fisttpll
sbb
arpl
roll
testl
pusha
clc
sbb
xchg
jg
cmpsb
pop
mov
jae
enter
xor
lods
mov
shll
lret
pop
ss
jbe
fcoms
pushf
push
notl
jae
jmp
in
imul
je
mov
fidivl
mov
and
test
add
out
cmc
stos
inc
adc
mov
jl
sbb
mov
push
iret
out
mov
cmpb
inc
pop
add
call
gs
or
sbb
js
div
mov
call
in
cmp
aam
lds
test
aam
xor
repnz
subb
mov
test
sti
and
jle
xchg
movsb
cmp
pop
xchg
stos
ffree
inc
outsl
jae
jl
mov
add
inc
dec
lock
dec
sub
mov
mov
add
jns
imul
add
jmp
add
inc
and
mov
push
jbe
call
sub
xchg
jl
adc
push
pop
lods
push
jne
adc
aam
lret
push
icebp
cmp
lds
daa
movsl
rorb
popf
out
les
cmp
and
jne
cmc
sbb
sub
arpl
adc
lcall
dec
fcmovnu
js
imul
sub
inc
mov
jb
ja
mov
mov
sub
adc
push
stos
fidivrl
sub
nop
insb
lods
lret
sub
or
fwait
pop
add
mov
mov
dec
sub
or
push
stos
mov
rclb
mov
add
les
xchg
ja
sbb
pop
inc
xchg
dec
sub
or
loopne
push
das
stos
pop
and
dec
sub
mov
lea
leave
inc
cmp
je
lods
sub
stc
jno
pop
push
mov
movsb
cli
scas
pop
or
add
imul
or
cmp
in
ds
lea
loope
filds
mov
mov
sbb
cmp
fimuls
adc
and
jno
mov
or
outsl
jo
mov
cld
xor
mov
xchg
sbb
or
xchg
fcomps
mov
cld
xor
int3
sbb
dec
ja
scas
out
mov
outsl
imull
icebp
dec
pop
dec
push
dec
cmp
xor
adc
scas
and
jns
lar
xchg
mov
idiv
arpl
fchs
dec
stos
dec
xor
fdivrs
mov
data16
or
and
data16
cli
inc
out
nop
repz
adc
pop
cmp
sbb
jbe
mov
xchg
data16
insl
adcb
call
aam
pop
sub
rcr
or
mov
mov
and
dec
adc
pop
pop
test
inc
mov
into
pop
xchg
in
add
arpl
pusha
pop
mov
in
ds
lds
mull
fwait
loopne
das
hlt
aaa
negb
jbe
in
mov
inc
loop
jp
inc
and
mov
push
xor
jecxz
mov
mov
out
daa
mov
pop
daa
in
cmp
out
sub
fmul
lea
mov
pop
ds
xor
and
and
mov
shl
mov
jg
fsubrl
cmp
push
sbb
pop
out
xchg
movsb
lahf
xor
mov
jmp
and
mov
pushf
and
insb
stc
or
hlt
or
fcos
in
adc
adc
int
or
and
stos
mov
test
test
dec
mov
xchg
push
sub
sub
addb
or
fst
int3
mov
fisttpl
dec
cmp
jle
cmp
mov
push
into
cmpsb
mov
loopne
or
sbb
int3
mov
aam
icebp
xor
fbstp
lods
icebp
iret
jbe
push
repnz
xchg
stos
sahf
cli
pop
movsl
jb
push
adc
stc
cltd
sub
sub
push
pop
fadd
aam
cmovno
push
mov
inc
sub
scas
adc
into
fdivs
mov
fwait
cmpsb
shrb
xor
dec
mov
leave
and
lret
and
out
clc
cs
fwait
add
shlb
xchg
outsl
ds
jecxz
out
or
add
nop
mov
pop
push
mov
mov
stos
and
mov
jl
aas
lret
pop
popa
push
in
les
icebp
stos
movsb
mov
rolb
mov
lds
jmp
push
adc
dec
cs
sub
or
in
sti
sub
dec
pop
xchg
pop
or
inc
enter
push
lods
dec
cmp
shll
sub
cld
jge
bound
push
sahf
flds
es
fsts
lds
mov
rolb
lds
cli
je
and
mov
push
loop
insl
insb
fwait
xchg
repnz
out
shll
loope
push
pop
sahf
out
xchg
dec
cmp
xor
inc
inc
push
in
xlat
dec
popa
ljmp
fs
cmp
fidivs
mov
imul
mov
ss
jbe
xor
cmpsl
cmp
out
out
stos
pusha
rcrl
sbb
rolb
adc
mov
les
ret
push
jns
mov
jg
fmuls
cltd
inc
cmp
and
lahf
out
push
mov
pop
lods
mov
inc
jle
je
xchg
nop
movsl
out
inc
in
add
ljmp
cmpsb
mov
iret
push
fcom
dec
aam
loope
shrl
or
hlt
inc
xchg
ljmp
xor
mov
dec
call
lret
push
jg
cld
mov
xchg
decb
pop
stos
mov
je
sub
mov
insl
mov
cmpsl
cmp
adc
and
scas
mov
xsha1
cmpsb
dec
rcrl
in
dec
in
call
adc
rorb
cmp
inc
xchg
insl
inc
jp
dec
test
ficompl
xor
orl
mov
loopne
and
call
stos
int
sti
mov
jmp
lods
jbe
cs
push
ret
call
test
push
dec
mov
fisttpl
imul
lea
sbb
pop
or
and
mov
cmpsl
mov
shrb
arpl
add
and
int3
arpl
mov
mov
xchg
pop
jb
adc
out
sub
push
cmpsb
push
dec
fcoms
std
jle,pt
pop
xor
push
imul
dec
mov
sbb
sbb
daa
int3
fidivrl
movsb
sti
sub
xchg
movsb
arpl
enter
add
pop
mov
push
je
lock
mov
pop
and
call
sbb
stc
mov
cmp
xor
out
jp
mov
in
ret
xor
add
out
loopne
lahf
sbb
xor
mov
jns
arpl
shrb
sbb
sub
int
sub
push
int3
repz
cmp
aam
sub
add
test
sahf
mov
orb
and
outsl
inc
mov
inc
ss
movsb
fcompl
cmp
jo
xchg
jo
fbstp
inc
push
es
ficomps
loope
xchg
sub
cmpsl
pusha
lds
mov
sub
mov
xor
dec
imul
loope
lcall
and
rolb
add
lret
push
sub
and
xchg
mov
fldcw
gs
jecxz
aas
mov
inc
lods
lret
arpl
pushf
test
rorl
call
jnp
int
push
dec
add
dec
call
lods
mov
mov
jge
rcrb
cmpsl
adc
lret
lret
call
int
mov
xor
lods
js
xchg
fdivp
shlb
cmp
aam
mov
cmpsl
cmp
xchg
aad
pop
inc
and
bnd
fdivs
iret
sarb
cli
fiadds
push
cmp
dec
jo
mov
sbb
lcall
nop
cmp
jge
and
fcmovb
in
or
not
mov
push
sub
xor
aad
push
xchg
jecxz
fcomi
mov
or
mov
inc
aam
push
imul
push
push
xchg
adc
or
cmp
mov
shlb
movsb
inc
add
jnp
push
mov
ss
xchg
mov
pop
clc
les
inc
hlt
test
les
test
arpl
lds
mov
xor
loopne
enter
cmp
loop
shlb
and
push
ljmp
add
push
mov
leave
jmp
addb
nop
and
pop
adc
xor
js
daa
ret
adc
mov
outsl
mov
call
dec
sub
cmp
add
mov
leave
stc
lods
sti
repz
push
in
lahf
sub
xor
sub
lock
mov
mov
lock
ret
int3
inc
scas
xchg
add
sti
cwtl
or
xchg
push
test
add
mov
xchg
dec
xchg
bound
xchg
mov
rorl
mov
mov
stc
sbb
js
rorb
cs
fidivl
mov
pop
adc
imul
adc
out
or
fimuls
sub
sbb
movsl
movsbl
push
es
add
cmpsb
xchg
pop
mov
ret
orps
call
jb
mov
movsb
jle
push
or
int
xor
dec
adc
mov
idivl
scas
scas
out
xor
lods
sbb
into
lods
mov
movmskps
lret
into
push
adc
sbb
cmp
enter
cli
inc
mov
loop
movsl
hlt
pop
mov
movsl
gs
xor
shl
dec
sahf
sub
push
stc
cwtl
imul
mov
into
sbb
lret
mov
mov
testb
sub
int
aam
cmp
hlt
jmp
shll
pusha
pop
outsb
pop
rorl
imul
sbb
mov
add
push
out
jne
adc
jg
cli
neg
mov
xor
js
xchg
push
cs
sub
cmp
add
fst
int3
push
xor
dec
xor
shrb
cltd
repz
dec
shll
push
inc
clc
pop
pop
mov
dec
dec
xor
fsubrl
sbb
cmp
mov
mov
cwtl
mov
cmc
mov
push
into
inc
xor
repz
mov
mov
inc
or
mov
and
push
insl
dec
mov
or
add
xchg
inc
addl
mul
and
icebp
jecxz
lock
or
adc
daa
fwait
sahf
stos
aam
ficompl
es
in
xchg
cltd
dec
inc
cmp
push
outsl
inc
mov
dec
stos
in
cmp
and
into
mov
add
mov
or
je
ss
pop
lret
popa
shlb
loopne
or
jnp
sbb
mov
out
and
cmpsl
cwtl
outsb
daa
push
push
jl
inc
loope
fwait
jno
out
pop
mov
push
mov
sbb
stc
add
data16
or
pop
stos
xchg
lahf
mov
mov
out
add
sub
adc
scas
push
and
pop
repnz
sahf
sti
daa
mov
lea
loop
out
sub
std
lea
add
push
pop
or
or
pop
fwait
lret
je
push
mov
xchg
lea
paddw
call
pusha
lea
outsb
icebp
xor
xor
ds
jl
ds
movsl
imul
or
cs
cmp
gs
jbe
loope
cmc
adcl
out
cld
dec
and
or
rcl
aaa
orb
inc
dec
push
test
call
int
fiadds
pop
mov
and
mov
dec
loop
out
sub
out
int
mov
push
daa
push
ficomps
jns
pop
add
out
pop
nop
testb
jmp
adc
push
bound
or
xlat
addl
daa
je
cmp
adc
inc
ror
xchg
pop
insb
jbe
cmp
and
fwait
cmp
push
mov
cmpsb
jl
inc
adc
jae
pop
cmpsb
jo
dec
out
xor
sahf
lods
or
pusha
scas
cmp
fs
imul
shll
mov
and
mov
ja
adc
leave
adc
scas
outsl
push
imul
inc
pop
mov
push
out
aad
dec
jg
hlt
or
rcr
in
clc
mov
movsl
dec
cmp
sbb
push
jmp
sahf
or
cmc
jns
adc
xlat
bound
jge
xchg
inc
jecxz
aas
add
popa
push
in
sbb
pop
ja
in
data16
jecxz
xor
and
jno
insb
cltd
mov
inc
jmp
test
push
cmpsl
outsl
jmp
pop
xchg
enter
in
inc
sub
inc
bound
in
lcall
inc
and
lods
inc
push
sbbb
push
repnz
fnstsw
lock
movsb
call
jl
cwtl
xor
in
push
dec
lret
mov
iret
cmc
test
inc
subb
mov
mov
sub
cmp
dec
mov
les
push
sbb
orl
jmp
scas
xor
jae
inc
or
mov
mov
pop
pop
mov
loop
jo
xor
test
adc
add
cmc
jle
pop
or
stc
pop
xor
cmp
jmp
and
inc
xor
pop
fimull
pop
dec
movsl
lahf
lea
add
lods
setg
addr16
xor
fsubl
aaa
cmpsb
dec
sub
sarb
movsl
inc
cmp
adc
lahf
push
lock
stc
jmp
push
sti
outsb
aas
aam
xchg
dec
xchg
cmpsb
push
mov
lret
sti
pushf
mov
or
push
test
mov
test
pusha
ja
mov
mov
dec
mov
rcrb
aaa
add
iret
lods
insb
bt
sbb
aam
push
sbb
mov
adc
addr16
dec
out
loop
pop
stos
push
je
test
out
jl
cmc
aas
stos
mov
sub
cmp
scas
or
and
lcall
push
pushf
dec
sbb
scas
or
or
inc
cmp
mov
push
push
mov
sbb
je
mov
leave
add
xchg
out
fcmovbe
push
push
ss
xor
mov
mov
cmc
fstpl
xor
aas
aaa
scas
mov
dec
clc
into
arpl
test
scas
daa
fildll
popf
jg
sub
sar
sbb
mov
mov
or
mov
mov
pushf
test
lock
adc
ret
scas
arpl
adc
mov
mov
push
bnd
adc
ret
cmpsb
sub
xchg
and
stos
in
xor
in
stos
mov
dec
dec
in
les
ja
cmp
xor
mov
into
xor
inc
das
pop
adcb
push
pop
dec
repz
sub
push
pop
daa
xchg
dec
push
int3
and
jae
and
pop
dec
daa
add
and
cmp
xchg
xchg
pop
fisubrs
les
sbb
pop
movsb
cmp
sub
sub
pop
dec
fwait
mov
push
ja
lock
xchg
pop
clc
inc
jg
xchg
push
das
movsb
and
or
add
xor
psubb
mov
addr16
mov
mov
jo
push
std
cmp
mov
push
aaa
scas
mov
aaa
popf
xchg
jg
hlt
push
mov
out
inc
jno
dec
pop
mov
repnz
cmp
outsl
sub
cwtl
inc
notb
add
mov
pop
add
in
pushf
sub
aam
imul
xchg
xchg
push
push
xchg
cs
sub
xchg
addr16
mov
test
jno
mov
push
mov
rorl
pop
mov
fstps
add
adc
enter
hlt
call
xchg
dec
popa
dec
xchg
and
or
push
xchg
mov
in
test
push
jno
ret
jno
mov
rorb
stc
call
repnz
fwait
jg
pop
sbb
or
push
jo
mov
sub
push
jno
dec
inc
test
adc
sbb
daa
es
push
aas
sbb
int
movsb
xor
ja
cwtl
jb
push
cli
dec
cmp
lds
std
insl
mov
sahf
rorl
ret
or
ss
and
int
ret
xor
jecxz
pusha
loopne,pn
sbbl
or
add
cmp
sbb
push
or
push
dec
xlat
xchg
mov
push
fs
cmp
shr
jge
xlat
addr16
mov
mov
out
sarl
push
call
jmp
mov
in
mov
jns
imulb
or
aam
mov
jg
mov
inc
push
jae
pop
mov
push
push
jle
cmp
fsubl
push
adc
out
jb
jbe
jo
or
stos
aad
int3
sahf
mov
xchg
fnsave
sbb
fimuls
mov
nop
inc
mov
mov
inc
scas
mov
push
and
mov
fs
icebp
sbb
mov
cs
push
xor
mov
xchg
mov
sbb
lret
fnstcw
enter
add
cmp
add
jns
dec
repnz
out
in
call
lret
adc
push
mov
cmpsl
in
repz
andl
scas
rorb
fs
mov
pop
push
in
rolb
iret
std
push
mov
mulb
push
sti
jns
mov
pop
pusha
js
popa
je
adc
movsl
pop
adc
out
nop
cmpl
and
lahf
xorb
sahf
adc
popf
or
mov
fucomip
jae
cs
lahf
inc
dec
xor
cmc
cs
sub
repnz
aas
cli
inc
in
pop
sub
lods
push
pop
into
or
or
cli
repnz
shll
mov
xlat
sbb
lahf
mov
loopne
jb
test
sub
jmp
insb
data16
sti
xchg
push
je
jecxz
out
or
test
outsl
jmp
or
mov
push
out
adc
add
lret
inc
notl
jl
push
insl
test
ja
mov
adc
sub
jae
scas
push
js
loop
add
mov
scas
pop
inc
jns
push
js
stos
ficomps
mov
mov
enter
cmp
sub
mov
mov
adc
hlt
add
out
fldt
cmp
dec
cltd
inc
lds
mov
aad
aam
xchg
movsl
mov
lret
into
pop
push
sbb
or
jbe
mov
shrl
sub
repz
out
gs
test
jge
push
jbe
clc
jno
inc
test
push
push
dec
ss
orl
mov
scas
cli
sbb
cmp
and
jmp
fstl
ds
xchg
add
xor
mov
enter
jmp
in
rcll
sbb
push
adc
inc
and
pushl
pop
fs
jno
lcall
int
shrb
repz
ds
cld
movsb
iret
mov
and
adc
jp,pn
clc
and
lahf
lret
repz
inc
adc
or
dec
in
sub
xor
sti
sahf
jb
push
jle
cmc
cmpsl
or
fists
inc
and
dec
daa
jle
mov
fcoml
decl
sub
sub
push
push
outsl
jno
sub
push
xchg
rclb
lods
inc
mov
xchg
pop
cltd
xlat
or
cmp
imul
ret
sbb
in
iret
pop
mov
push
jl
pushf
sahf
dec
mov
loope
xchg
dec
jne
mov
les
push
mov
and
adc
sub
add
sahf
pop
lahf
sbb
mov
popa
and
xchg
ret
cld
xchg
jp
push
mov
test
lods
sti
sbbb
adc
xor
test
mov
dec
add
hlt
and
ss
in
xor
mov
repz
mov
xor
out
dec
out
adc
mov
test
mov
cmp
pop
repz
stos
sbb
sub
adc
mov
test
mov
cmpsl
xchg
mov
xlat
dec
cld
push
jp
bnd
jbe
fdivrs
in
push
xor
cs
lock
push
or
add
test
pop
mov
xchg
jno
xorb
mov
xor
sub
cmc
int
inc
and
add
popf
mov
aas
jne
lods
clc
ror
es
iret
clc
pop
cltd
test
notl
add
jne
stc
aas
cli
ds
push
std
mov
mov
out
mov
jecxz
jl
sbb
mov
shrb
fcompl
imul
out
and
mov
nop
sub
sub
daa
rolb
and
movsl
inc
fidivl
jne
pop
push
cmp
cmp
lock
loope
ret
inc
daa
jbe
mov
cmp
dec
jg
ffree
push
hlt
jg
push
stos
pop
test
rorb
lahf
sub
fs
ja
add
js
mov
enter
sbb
pop
sub
aas
sub
shlb
xor
jge
jg
adc
rcrb
out
std
ret
or
out
jno
std
loope
ret
sbbb
inc
decl
push
xchg
or
inc
stc
xor
mov
cmp
inc
movsb
push
xchg
fcoms
les
lret
je
sub
in
jle
loop
repz
in
ret
add
out
fwait
test
adcb
pop
lock
fnstenv
inc
mov
adc
dec
and
push
test
ja
test
sbb
arpl
or
inc
xchg
test
fsubs
push
call
ret
xor
and
cs
aad
ds
in
jmp
pop
push
jae
push
popf
adc
shr
mov
cmc
cmp
ja
rcll
lods
sbb
mov
fwait
sub
lret
push
xor
cmp
sub
mov
movsl
push
jecxz
mov
fwait
arpl
movsl
cmp
xlat
out
ds
sbb
outsl
in
add
stos
stos
pusha
lods
jnp
xchg
xor
add
stos
add
jp
push
cmc
and
lea
inc
pop
aad
lcall
push
mov
mov
mov
aad
add
lahf
or
xlat
push
lahf
cmp
test
mov
adc
cli
xor
or
xchg
test
mov
jae
pop
push
insb
cs
stos
jae
andl
push
xchg
aad
jb
ljmp
sti
test
hlt
cld
jns
aaa
mov
mov
dec
mov
mov
outsb
jb
repnz
out
inc
pop
push
repz
push
stc
push
in
ss
mov
cli
xchg
fnstsw
icebp
xchg
mov
ja
clc
js
jle
add
add
lds
aaa
or
fwait
in
test
or
lahf
ds
sub
and
movsl
in
cmp
mov
or
xchg
mov
loopne
subl
ss
setle
sub
dec
test
sarb
jbe
lds
cwtl
mov
aaa
in
inc
sarl
in
into
data16
lock
nop
inc
pushf
add
pop
cmp
cld
sbb
cmp
inc
movsb
jl
shll
mov
loopne
loop
es
add
sbb
insl
xor
ss
sbb
mov
dec
hlt
sbb
or
mov
and
mov
mov
dec
rorl
adc
jg
push
pop
dec
mov
xchg
shr
dec
aam
jmp
mov
cmpsl
mov
pop
mov
dec
sbb
inc
xor
sub
and
shrb
push
rclb
xor
sbb
jae
and
sbb
std
mov
or
icebp
dec
pop
or
call
push
clc
inc
lahf
ss
mov
or
jbe
jecxz
jbe
arpl
jbe
mov
sarb
xor
xchg
dec
push
or
cli
leave
xchg
jno
lret
mov
mov
sbb
rcrb
xchg
bound
xchg
push
repz
xchg
pop
cli
pop
cmp
mov
jmp
lahf
or
outsl
sarb
sbb
push
or
arpl
ja
and
ss
lds
std
dec
ret
lock
outsl
mov
xchg
shl
popa
mov
push
push
iret
pop
xlat
fs
ret
xor
insl
sbb
inc
cmp
xor
sub
push
insl
cmp
psubb
adc
inc
adc
mov
mov
inc
mov
jmp
shlb
or
inc
inc
jo
aad
mov
stos
sbb
scas
cmp
pop
leave
pop
xchg
call
xor
hlt
dec
xchg
xor
fisttpll
jp
pop
cmpsb
dec
dec
dec
out
add
or
imul
mov
push
cmp
or
mov
jle
or
fwait
push
mov
scas
xchg
adc
cltd
mov
xorl
pop
repnz
xchg
addr16
dec
lods
pop
insb
mov
pusha
es
rcll
inc
adc
add
ds
dec
ret
pop
xor
cmp
dec
lea
mov
and
xor
test
pop
sbb
scas
fs
fmuls
insb
das
data16
inc
imul
xchg
rcll
push
stc
mov
lcall
mov
lds
fwait
sbb
das
cltd
shl
jecxz
jo
mov
push
mov
into
div
xchg
xchg
jo
aaa
push
adc
push
xor
test
popa
popa
fidivl
sub
jle
mov
shlb
sub
and
dec
xor
add
mov
push
aam
mov
mov
jns
cmc
sti
dec
rclb
jbe
xor
or
mov
push
loopne
pop
sahf
mov
ljmp
mov
iret
daa
fwait
cltd
cmp
sbb
mov
sub
or
lret
call
or
jno
mov
fsubs
ljmp
daa
jp
aaa
cmpsb
xor
aam
xor
jp
insb
shlb
dec
xlat
mov
sub
mov
jg
outsb
sub
clc
js
xchg
cltd
mov
cmp
push
inc
movsb
mov
jns
or
and
and
mov
xchg
pushf
rorl
jne
andb
cwtl
popa
subb
sbb
sti
sahf
jae
shll
sub
repz
imulb
sti
push
pop
sub
subb
inc
mov
cmp
inc
clc
xchg
iretw
sbb
pop
sahf
pop
arpl
call
testb
push
add
jle
cs
add
jns
jge
xchg
mov
push
lret
sbb
or
sub
pop
and
pop
push
add
and
ficoml
hlt
pusha
popf
or
mov
xor
in
test
fnstsw
js
jmp
dec
lret
sarl
daa
in
cli
sub
jle
negl
mov
push
fcmovnbe
outsb
sbb
fwait
outsl
pop
and
arpl
mov
addr16
jne
insb
pop
push
sbb
and
arpl
adc
pop
dec
sub
pop
cwtl
ss
pusha
mov
sahf
aad
imul
add
inc
mov
aas
pop
inc
push
or
push
icebp
push
xlat
mov
test
pop
out
outsb
loop
in
cwtl
stc
popaw
andl
mov
sbbb
out
pop
xchg
pop
dec
mov
xchg
stos
aas
es
aam
adc
adc
stos
sbb
loop
add
psrld
int
add
shl
xchg
sbb
inc
jnp
ljmp
or
ljmp
adc
insl
fwait
dec
xor
or
aam
or
mov
cs
mov
rorl
add
or
lret
enter
xlat
xor
cld
xchg
fistps
pop
aad
lock
adc
mov
or
and
push
movsb
push
cld
imul
or
xchg
cmp
jl
lret
je
dec
rcrb
arpl
xor
push
jno
sub
inc
into
xchg
int3
adc
in
or
xchg
mov
cmc
sahf
cmpl
adc
cwtl
and
fwait
pop
ds
jp
daa
add
push
mov
inc
lds
cs
out
rolb
out
mov
out
fstpl
stos
dec
inc
dec
imul
push
mov
idivl
mov
mov
iret
adc
es
test
sti
nop
mov
fdivl
pop
in
jno
sti
pushf
mov
xchg
sub
shrl
add
test
mov
idivl
inc
jmp
xor
lds
jecxz
inc
lea
sbb
mov
int
push
test
dec
movsb
pop
ret
addr16
jne
addb
fisttps
or
call
test
inc
xorb
cltd
test
pop
std
in
xlat
cmp
sub
push
mov
fstpt
inc
xchg
and
data16
sbb
test
adc
push
jl
in
mov
cmp
clc
lods
sbbb
aas
push
inc
adc
xchg
ret
mov
add
xlat
jno
shlb
in
sbb
add
mov
daa
rclb
ja
sub
lret
xchg
lret
dec
inc
pop
les
mov
outsl
mov
cmp
lahf
rcll
hlt
xchg
add
in
faddl
test
or
mov
loope
iret
mov
pushf
ja
call
imul
insl
dec
jno
or
xor
sbb
iret
std
xchg
popa
arpl
test
inc
cmp
stos
out
je
fwait
add
into
cmpsb
xchg
jecxz
adc
xor
stc
loop
xor
dec
fs
mov
sub
aad
sbb
imul
imul
sub
insl
stc
enter
push
xchg
xchg
and
js
mov
jnp
sbb
add
popf
adc
jns
xor
cmpsb
push
cwtl
jl
leave
sbb
push
push
sub
movsl
mov
ljmp
inc
fbld
lock
jmp
jp
int
cmpsb
into
enter
fidivrl
jmp
sub
bound
aas
iret
sbb
jbe
pop
sti
test
xchg
push
ret
mov
push
ret
repnz
inc
mov
cmp
push
loop
daa
adc
sbb
mov
test
push
rcrl
pop
sub
add
je
in
lods
mov
enter
je
sub
sub
xchg
mov
das
gs
in
or
int3
sbb
fs
xchg
add
hlt
outsl
jmp
bound
xor
and
loop
xchg
mov
mov
mov
sbb
stos
cmp
loopne
pcmpgtb
xor
leave
xor
enter
pushf
mov
jnp
andl
jnp
lods
je
imul
insl
sbb
push
lock
jns
push
mov
add
adc
ret
fdivrs
pushf
mov
add
outsl
push
sbb
lret
stc
jecxz
hlt
fwait
cmp
ret
mov
into
lods
mov
sub
test
rcll
xchg
sub
and
sbb
adc
dec
sbb
mov
aad
pop
das
cmp
push
clc
cmp
aad
aam
jns
ljmp
pop
adc
fdiv
ja
dec
in
mov
mov
int
jle
ljmp
cmp
pop
xchg
and
test
testl
bound
mov
push
jecxz
lods
mov
jno
jo
aas
je
cmp
sar
mov
mov
push
insb
lods
push
dec
push
dec
movsl
mov
enter
mov
cltd
fisttpll
cmc
pop
out
int
imul
xchg
out
sbb
dec
insl
fldcw
ss
push
push
pushf
add
movsl
pop
ret
inc
pop
cs
fisttps
cltd
jg
push
inc
xchg
icebp
pop
inc
lock
fwait
adc
inc
xlat
add
fstl
stc
sub
popa
cmp
lods
push
xor
lret
lret
mov
call
adc
jmp
jb
inc
outsb
and
xchg
ror
lds
push
cmp
ds
inc
inc
or
stc
fistpll
adc
out
cmpl
mov
lret
loopne
mov
sti
mov
adc
add
jno
mov
sub
jge
inc
lret
aam
daa
cld
dec
loope
pop
or
push
std
movsl
roll
cmp
loop
push
aas
jge
dec
or
call
fistpll
pop
js
cmp
xchg
push
repnz
stos
fsubs
mov
sbb
push
movsl
mul
mov
adc
aas
jmp
jae
dec
xchg
insb
arpl
mov
lds
pop
sti
dec
ret
dec
aam
cmp
sbb
jge
enter
test
lds
ret
out
aaa
cmp
cmp
sbb
push
push
jo
test
stos
mov
call
cs
jecxz
sub
jl
cwtl
jno
and
jg
xlat
xor
insb
ljmp
jne
cmp
les
or
cmp
int
pop
scas
push
jns
mov
popf
aad
mov
jle
mov
adc
test
pop
xor
movsb
adc
mov
movsb
movsb
dec
outsb
mov
loope
mov
push
xchg
and
ret
lods
xchg
fmul
push
movsl
in
and
push
scas
sbb
stc
pop
pop
fsubrl
dec
xor
mov
cmp
fs
pop
movsl
pop
leave
mov
inc
dec
cmp
jbe
push
inc
sbb
push
fsub
mov
or
fistps
pop
or
repnz
xchg
cmp
loop
jmp
in
jmp
xchg
std
and
je,pn
jns
xor
xchg
imulb
push
lahf
repz
clc
sbbl
mov
insl
dec
jle
ja
pop
jmp
xchg
outsl
xor
mov
mov
push
xor
ds
xchg
ud1
gs
fimull
cmp
jl
push
mov
mov
mov
adc
xchg
int3
xor
call
push
sub
mov
das
std
add
push
in
movsb
cmpsl
cmpsl
lret
jg
sbb
inc
jl
push
popa
push
icebp
imul
ds
pop
and
mov
mov
sahf
scas
push
xchg
sub
push
mov
lret
bnd
ret
cmp
pop
jle
mov
sub
test
pop
dec
adc
sbb
in
lret
mov
movsl
mov
lret
add
jno
cmp
loopne
sbb
test
inc
insl
pop
sahf
popa
int
ret
rcrb
psrld
pop
lea
cltd
jp
push
and
mov
or
bound
or
mov
push
or
aad
into
cwtl
dec
popf
pusha
out
sbb
mov
lods
cmp
aam
push
stos
jb
loop
lods
cltd
jmp
pop
and
add
outsb
xchg
out
or
cmp
lret
push
dec
mov
or
pop
andl
inc
or
data16
imul
lods
shlb
sti
popa
jae
fbld
jo
or
sbb
adcl
xor
jecxz
sbb
jo,pt
jge
pusha
jmp
subl
repnz
xchg
fbld
imul
mov
into
jae
or
inc
xor
mov
xchg
daa
sbb
mov
or
dec
inc
pusha
dec
sub
pop
lret
cwtl
push
fprem1
roll
pop
mov
notl
rcrl
jbe
mov
jmp
add
ret
js
and
push
iret
out
fadd
and
inc
and
xchg
sub
dec
mov
and
aas
sub
jl
and
movsl
loop
iret
mov
call
clc
test
ja
cmp
mov
movsl
xor
push
movsb
stc
lret
fildl
shll
push
sub
push
xchg
push
adc
xlat
cmpb
aaa
adc
subl
adc
dec
out
xor
dec
push
loopne
paddb
pop
sahf
lret
mov
ljmp
jnp
cmp
push
xchg
fdivr
clc
jns
ss
ficomps
test
test
ffree
loop
push
xor
push
sbb
adc
repz
pop
pop
mov
mov
je
arpl
xor
das
or
and
mov
dec
push
xchg
push
dec
imul
loope
sub
push
dec
adc
mov
cltd
call
loop
add
int
inc
nop
jg
adc
pop
in
dec
pop
xchg
jns
rorb
xchg
add
dec
xchg
sbb
cmp
push
aas
test
ds
es
arpl
jnp
stc
repz
out
mov
sbb
aaa
xor
data16
mov
or
xchg
out
insl
or
add
jl
cltd
mov
fwait
cmpsl
push
iret
imul
leave
and
push
mov
aad
or
mov
jmp
add
xchg
cwtl
rol
stos
lods
xor
jmp
repnz
imul
xchg
insb
inc
movlps
nop
cs
push
fwait
mov
outsb
cwtl
or
in
xor
pop
adc
push
pop
leave
movsb
sub
lret
lds
loop
lcall
jmp
dec
sbb
insb
jne
in
jns
ja
dec
add
jno
adc
mov
mov
mov
cltd
xchg
jg
enter
out
jb
andb
jb
or
repz
out
addr16
pop
cwtl
scas
sbbl
pushf
dec
clc
jnp
loopne
stos
clc
adc
pusha
or
jne
dec
push
cmpsb
mov
xchg
ds
cwtl
loop
xor
sub
mov
addl
or
out
jp
scas
adc
xchg
rolb
adc
adc
mov
or
sbb
sbb
mov
addb
hlt
xor
enter
out
int3
adc
sub
repz
mov
xchg
iret
arpl
div
gs
lock
and
push
stos
dec
mov
out
into
pop
pop
cli
std
pop
add
nop
imul
outsb
add
sub
dec
cmp
cmp
sbb
outsb
mov
fdivs
push
push
in
xchg
add
ss
jno
pop
mov
pushf
pop
cwtl
in
in
sbb
push
xor
mov
and
and
jnp
inc
sahf
aas
in
popa
imul
das
xlat
cld
popl
loope
lahf
ja
int
pop
out
mov
icebp
insl
scas
cmp
mov
cmp
addl
jle
cmp
mov
jg
mull
mov
mov
out
add
aas
hlt
pop
js
sbb
mov
xchg
jae
xor
pop
add
ljmp
neg
sbbl
jge
jle
cmp
bound
xchg
mov
mov
lods
test
cmp
jecxz
add
dec
addb
ljmp
xor
loope
or
sbb
outsb
fcomps
sub
adc
mov
inc
ja
ja
jmp
cltd
jae
ret
and
sbb
jno
fildl
negl
lret
data16
fisubl
adc
je
cmp
repnz
add
cs
and
jb
imul
in
add
sbb
lods
push
ljmp
test
or
test
out
cmpl
int
add
xor
add
xchg
scas
ret
cmp
xchg
popf
fbld
inc
pop
lret
and
jp
push
xchg
std
out
mov
stos
mov
ficoms
mov
mov
sub
ss
or
out
mov
and
add
ss
std
push
shl
jge
xchg
movsl
cmp
lods
push
mov
fimull
sbb
ljmp
adc
or
push
pushf
test
outsb
pop
in
sbb
adc
cmc
mov
mov
lods
mov
mov
mov
jnp
dec
shrl
add
lret
and
ljmp
repnz
dec
xchg
mov
jl
cmp
pop
adc
in
out
fists
pop
pusha
add
pop
ljmp
mov
int3
xlat
sbb
cmp
push
and
ds
inc
out
xor
in
cltd
sbb
js
xchg
pop
mov
xor
sub
jl
and
jo
lods
out
xchg
cld
stc
cmp
push
or
leave
pushf
push
ret
fs
cld
push
int
and
ds
out
dec
dec
cmc
sbb
dec
cmp
sub
ror
js
sbb
dec
xorb
inc
cmp
push
jge
xchg
sbb
dec
xchg
jle
lret
ja
adc
sti
dec
sbb
mov
adc
fcomi
pop
pop
adc
pop
pop
outsb
sarb
jno
and
push
outsl
mov
test
mov
stos
daa
andl
add
jns
jge
jle
jae
testb
fnstcw
fdivrl
and
pushf
clc
inc
test
push
push
inc
mov
mov
jecxz
cmp
fidivrl
not
mov
mov
jmp
pop
subb
out
lock
mov
mov
sub
enter
jmp
xchg
pop
fisubrl
inc
inc
pop
mov
push
lret
xchg
repz
inc
mov
xchg
leave
pop
arpl
data16
fcomps
adc
mov
mov
out
jecxz
sub
push
pop
test
inc
ret
pop
push
ja
hlt
popf
cmpsl
lock
mov
movsb
data16
jmp
arpl
aam
cmpl
data16
fsubrs
dec
daa
mov
fisubrs
test
fcoms
in
out
mov
sbb
aas
aaa
popa
add
imul
sbb
pop
xchg
dec
repnz
pusha
lods
jge
add
and
mov
xchg
lea
dec
sub
xchg
call
das
mov
test
ljmp
pusha
pop
dec
mov
jo
mov
xor
lea
ret
rcrl
or
push
ja
push
add
roll
pop
mov
pop
inc
ja
pop
in
mov
rcrb
enter
aaa
pop
stos
test
repnz
pop
jl
shr
in
xchg
stos
daa
ja
sub
pop
adc
mov
pusha
int
inc
jle
out
in
and
test
dec
fsts
idiv
xchg
shr
sbb
std
pusha
pop
js,pt
sub
and
lret
fsubrl
adc
fcoms
lock
add
aam
fists
cmc
stos
adc
inc
int
nop
scas
out
daa
test
negl
sub
cld
xor
xor
stc
sub
mov
and
sub
xchg
in
test
push
lahf
jbe
scas
cmpsl
lret
ret
add
pushf
dec
xor
xchg
stos
inc
cmp
xor
jl
cmpsb
mov
lret
loope
outsb
das
ja
push
push
xor
outsb
into
mov
rcll
xchg
pushl
rol
rcrb
clc
rcl
add
ds
cmpsl
push
and
jae
push
push
jb
dec
cmp
pop
icebp
xchg
hlt
jg
adc
sub
outsl
adc
adcl
push
cmp
inc
add
dec
lods
lea
push
mov
lods
fidivrs
jb
int
mov
mov
dec
push
dec
cmp
inc
fidivrl
mov
mov
lret
sub
in
jge
aas
and
rcrl
sub
test
out
test
pop
lret
int
ss
pop
ja
scas
push
dec
mov
roll
xchg
cs
mov
sbbl
lds
imul
cltd
fcompl
ficomps
popf
mov
cmp
jl
add
push
push
jae
sbb
mov
cmp
aad
push
lds
and
iret
lret
movl
push
lahf
out
sub
fs
or
cmp
shlb
aaa
out
mov
jge
jge
sbb
push
mov
outsl
mov
and
mov
mov
das
pop
add
loopne
rcrl
test
lcall
pop
cmpl
or
mov
lods
hlt
push
xlat
cwtl
clc
pop
cmp
loope
jge
jp
in
jmp
out
iret
stos
xchg
pop
aam
push
mov
and
bound
shll
mov
mov
add
aam
or
shll
push
repnz
fdivl
cwtl
cmp
cmpb
rcr
inc
aad
int3
jge
mov
and
mov
roll
ja
or
out
jge
mov
mov
cmpsb
cmp
dec
fstpt
xor
and
pop
jp
sahf
movb
lods
jo
daa
inc
fnstenv
inc
test
mov
imul
adc
iret
add
in
xor
orb
mov
xchg
arpl
fs
cmc
in
lcall
daa
mov
cwtl
and
mov
test
fcomip
mov
dec
sub
or
lcall
or
pop
xor
movsl
shlb
and
cmp
test
clc
pop
enter
es
adc
pop
dec
push
stos
lods
inc
aam
fildl
les
stos
inc
xchg
daa
loope
xchg
arpl
rorb
xor
sub
mov
andb
call
jle
mov
fsts
sarl
xchg
fisubrs
push
iret
in
enter
filds
cmpsb
push
xor
je
or
and
mov
dec
dec
test
xor
sub
testl
mov
inc
sbb
out
cmc
inc
push
shll
aad
sub
sahf
jbe
shlb
repz
pop
imul
test
inc
pop
push
xchg
jnp
mull
jecxz
out
inc
aam
sub
jecxz
ret
inc
jo
lock
fisubl
jle
mov
dec
push
mov
and
push
push
push
fwait
lea
popa
xchg
adc
sub
mov
mov
mov
adc
aam
xor
mov
pop
cmp
mov
jg
add
xlat
pushf
ja
aam
hlt
mov
int3
in
movsl
daa
loopne
sahf
movsb
xchg
dec
ss
cmpb
xchg
sub
xchg
and
shll
test
sub
test
jg
ljmp
aad
xor
or
xchg
inc
xchg
adc
cmp
and
and
mov
into
jnp
push
dec
xchg
mov
xchg
sti
add
push
rcr
pushf
pop
dec
pop
addr16
inc
push
xchg
jp
jmp
jno
repnz
sub
testb
bound
mov
and
dec
push
adc
pop
outsl
hlt
in
adc
outsb
xor
or
pop
xor
pop
adc
dec
sub
xchg
fcomip
addr16
cmp
popf
lahf
bound
jbe
xchg
cmp
insl
hlt
jb
jmp
xor
jae
sahf
into
push
sub
or
jo
aaa
dec
test
hlt
rolb
in
mov
orl
cs
or
mov
ret
jmp
inc
pushf
xchg
repnz
mov
and
scas
adc
clc
aam
xchg
fldenv
gs
incl
bnd
xchg
nop
lret
arpl
ss
cmp
cltd
repz
test
in
movzwl
add
inc
negb
in
mov
jp
inc
out
cmpsb
fld
icebp
inc
into
iret
dec
scas
and
in
test
mov
ds
clc
cmpsb
mov
sbb
jnp
jno
imull
push
sbb
cmp
jmp
add
mov
sbb
cmp
pop
dec
inc
xor
pop
dec
and
test
les
mov
add
adcb
std
push
adc
in
leave
outsl
insb
dec
rcrb
add
pop
js
insl
fwait
ss
mulb
jle
push
jg
pop
cmp
roll
xchg
les
inc
push
pop
sbb
add
dec
jge
icebp
xchg
lea
mov
jmp
add
leave
imul
add
mov
mov
pop
rclb
adc
cltd
iret
lds
iret
icebp
sbb
push
xor
jecxz
dec
imul
sbb
fnstenv
push
call
and
inc
outsl
insl
ljmp
mov
loopne
jmp
mov
cs
xchg
sbb
jmp
fistpl
jo
loopne
jnp
in
cmpb
ret
insl
aad
dec
test
loop
xor
lret
push
jae
cmp
jne
adc
test
loopne
xlat
call
lret
iret
push
add
sub
sub
xor
xchg
push
call
rcl
mov
outsb
leave
ss
pop
mov
mov
aad
out
loope
xor
out
enter
mov
xor
imul
fidivrl
sahf
xor
lret
mov
fimull
sbb
scas
jp
scas
out
js
add
sahf
insl
pop
rolb
cli
mov
jbe
jp
xor
sbb
sbb
mov
mov
and
fisubrs
inc
sub
xor
mov
dec
data16
cmp
fdivrs
xor
dec
movsb
jb
std
imul
pop
and
and
ja
ret
cmpl
add
fstps
sub
sbb
inc
stc
add
fbld
push
inc
mov
loope
cltd
pop
mov
fsubrs
fcomps
cmp
lds
or
pop
leave
cltd
and
iret
sbb
icebp
or
xchg
push
movsl
cld
pusha
push
dec
mov
lret
stos
nop
cmp
out
pop
jp
repz
insl
inc
shll
inc
or
stc
mov
xor
out
es
leave
cmc
and
fbstp
xchg
pop
push
cmp
xchg
xchg
sub
xlat
stc
jmp
fwait
xchg
mov
or
out
out
push
xor
lock
loope
mov
outsb
popf
xor
popa
aas
scas
faddp
mov
or
xchg
add
mov
jns
adc
dec
cmp
inc
add
or
adc
clc
inc
mov
test
int3
es
push
sub
or
cmp
out
cmpsl
ret
jecxz
fcomi
inc
mov
sbb
cmp
imul
out
pop
pop
mov
pushf
imul
sub
mov
mov
cmpsb
mov
out
arpl
sti
js
mov
inc
and
xor
push
in
arpl
mov
or
xor
insl
cmp
and
ret
push
stos
cmp
jne
lcall
stos
rolb
adcl
dec
rolb
xchg
pop
fs
push
fdivs
xor
inc
pop
pop
into
stos
push
out
cld
idivl
mov
jg
in
sub
xchg
scas
add
push
push
in
in
adc
sub
xor
shl
jle
push
bound
out
lea
shll
dec
pop
into
xor
dec
jecxz
ds
clc
pop
loopne
mov
sbb
loop
push
loop
inc
xor
iret
mov
sbb
inc
jle
testl
pop
add
add
and
cmpl
pop
scas
jnp
sbb
in
jae
and
notl
shrb
in
or
mov
sbb
fucom
lcall
adc
and
outsl
mov
mov
ret
dec
inc
clc
cmp
call
add
push
stos
jo
out
sar
std
out
sbb
ds
int
stos
or
adc
cmc
sub
inc
inc
negl
mov
xchg
imul
nop
popa
les
mov
push
mov
jbe
or
xchg
call
pop
and
push
fsubrp
cmp
sbb
leave
mov
jp
dec
jae
out
xor
daa
mov
jl
xchg
lahf
pop
cmp
insl
stos
xchg
in
pop
lods
fxch
rcrl
add
mov
dec
mov
adcl
xorl
je
cmc
mov
dec
movsb
xor
rol
or
fcoml
dec
js
call
es
pop
mov
inc
dec
push
jmp
adc
je
ret
je
or
and
mov
iret
mov
dec
shl
and
shll
mov
stos
add
sbb
movl
and
in
mov
cmp
lock
enter
icebp
fisubs
lahf
cmp
stc
fisubrl
or
scas
and
pop
adc
xchg
pushf
inc
push
int3
inc
jmp
insb
addr16
dec
stc
xor
enter
pop
sbb
xlat
out
jecxz
cmp
push
pop
ds
xchg
enter
ja
movsl
stos
and
imul
xlat
leave
lret
into
push
ja
testl
repnz
cmp
and
push
pop
or
addr16
lock
push
test
insl
add
pop
xor
aam
push
mov
push
push
push
ret
rorb
sub
pusha
mov
out
sti
ret
xchg
jae
inc
scas
mov
xchg
bound
cli
adc
rcr
push
int
das
sbb
mov
and
lods
pop
mov
andb
je
iret
cwtl
lods
push
test
int3
js
push
lahf
frstor
mov
aas
and
bound
push
mov
push
cmp
mov
je
adc
jns
add
cmpb
lds
aas
outsl
int3
push
add
or
pop
mov
sbb
xor
aas
sub
aas
cltd
dec
ffreep
pop
inc
sub
mov
rcrb
insb
pushf
rclb
decl
pop
repz
repnz
into
jge
out
inc
movl
sbb
lods
lahf
push
les
mov
sbb
imul
xchg
and
jnp
sbb
pop
jbe
jecxz
jbe
push
rol
sbb
fld
xchg
sahf
mov
inc
adc
repz
and
aas
in
out
sub
xor
aas
pop
inc
loope
jno
scas
cmpsl
pop
mov
push
adc
jbe
ret
push
xor
xor
lea
stos
dec
outsl
lods
dec
clc
cwtl
je
mov
dec
arpl
sti
mov
pop
popf
data16
xchg
pop
push
jge
les
sbb
and
andl
push
mov
fmul
jmp
bound
cwtl
test
and
lea
stos
dec
arpl
call
xchg
jnp
movsl
fisubrs
push
cmp
loope
push
test
and
insl
ret
fcoml
sarb
jle
movb
shl
mov
std
sub
inc
leave
loope
lret
dec
xor
mov
xor
fs
xchg
xor
fiaddl
mov
sbb
or
xor
aaa
test
inc
dec
rcrl
mov
loope
xchg
mov
outsl
cmp
out
pop
bound
sbb
sti
mov
dec
inc
mov
loope
idivb
xchg
movsb
sub
and
aaa
stc
in
jmp
repz
dec
jnp
add
pop
mov
jb
mov
sbb
sbb
ret
imul
cmp
push
sub
sbb
xor
xchg
ds
shlb
mov
add
jnp
cltd
lods
push
clc
mov
pop
and
mov
sbb
shl
push
push
loope
or
cli
and
out
cmpsl
push
or
sub
mov
cwtl
sub
roll
data16
lret
out
push
stos
jno
outsb
fnstenv
cmp
xchg
sbbb
cmp
shlb
jbe
cmpb
out
lock
push
mov
adc
push
jmp
je
loop
mov
xchg
or
jle
das
aad
cmp
ja
sub
insb
stc
jg
jmp
and
xor
or
push
hlt
jno
pop
icebp
ja
mov
sub
mov
imul
mul
movsl
push
mov
adc
ret
push
mov
ficoms
in
sbb
ja
cmp
in
add
and
mov
lcall
sub
mov
in
fisttps
and
jnp
or
loopne
mov
push
mov
jl
adc
rcrl
cmpsb
jno
dec
dec
imul
fs
shll
push
push
cmp
mov
lahf
fstl
mov
push
cmpsb
xchg
repnz
sbb
call
ljmp
xor
xchg
popf
xor
std
movsb
cmpl
pop
clc
fldl
pop
ds
mov
lods
mov
jne
cltd
sub
lret
pop
fwait
pop
push
jp
jg
add
repz
scas
inc
outsl
jg
test
cmp
jecxz
out
xlat
xchg
mov
cmp
inc
das
inc
lock
fbstp
sbb
repnz
mov
scas
pop
bound
xchg
scas
iret
jge
xlat
mov
test
test
lock
inc
pop
loopne
pusha
push
outsl
test
pop
xchg
add
scas
push
pop
push
pop
je
dec
outsl
dec
je
or
rcrb
pop
mov
aad
inc
imul
incl
insb
dec
pop
sarb
lea
cmp
dec
movsb
scas
xchg
mov
push
inc
call
inc
dec
mov
add
stc
cli
inc
in
out
pop
jne
in
rolb
fdiv
or
jg
jecxz
pop
adc
xor
mov
inc
fnstsw
and
sarb
insl
cltd
xchg
aas
das
mov
sbb
xchg
leave
pop
jbe
insl
pop
sahf
fisubs
test
mov
ljmp
or
pop
jns
mov
add
int3
mov
js
imul
cmp
repz
std
movsb
cmpsl
or
jecxz
les
pop
jno
imul
mov
int
repnz
loope
cmp
aam
or
inc
jnp
sub
cltd
inc
sub
inc
xorb
mov
cmp
xchg
in
fisttpll
cwtl
inc
adc
cmp
cmp
push
hlt
mov
fisubrl
mov
xlat
in
sbb
in
sbb
pop
test
pop
cmp
xlat
enter
pusha
popa
mov
pop
insl
shr
push
cltd
cmp
xchg
in
pop
push
daa
mov
mov
data16
fistl
mov
popa
mov
leave
sub
movsl
pop
aad
mov
and
stos
cld
es
push
idivl
dec
arpl
ja
icebp
test
push
ficomps
dec
adc
dec
mov
popa
sub
addb
mov
push
mov
into
mov
movsl
scas
test
jne
scas
or
je
and
inc
aaa
push
dec
lea
pop
inc
stc
rorl
sub
movsl
fadd
adc
lea
sbb
loopne
jo
inc
decl
mov
sub
xor
cmpsb
ja
ret
xchg
out
bound
adc
inc
sub
test
ret
xchg
out
int3
lods
ja
aas
lret
pop
cmpsl
jle
test
xor
mov
fdiv
std
xchg
mov
pop
add
jle
xorl
adc
dec
shrl
sub
imul
aad
ljmp
add
hlt
jbe
push
xor
fcmove
or
imul
outsb
bound
out
or
imul
je
or
repz
xor
dec
xor
or
fnsave
fs
push
outsl
in
call
push
das
jne
jae
xchg
shrl
inc
push
rcrl
movsl
or
cmpsb
and
rorl
std
ret
ja
inc
sbb
ljmp
add
adc
xchg
lret
mov
pop
ds
add
mov
fwait
or
or
xchg
mov
outsl
pop
aad
jecxz
or
adc
sbb
xchg
jo
push
cmp
mov
js
or
fidivs
outsb
sub
ds
xchg
rol
out
lods
adc
mov
jne
xor
adc
push
into
or
mulb
in
pop
xchg
ror
fcomp
push
clc
ljmp
rorl
inc
sub
repnz
leave
mov
xorb
or
rcrb
hlt
jnp
sbb
cltd
adc
and
sub
lret
pop
jo
add
cmp
gs
inc
push
jnp
mov
or
ret
push
das
ret
mov
subb
xchg
sub
xchg
nop
out
cs
cmp
test
fwait
jnp
test
jecxz
pop
aas
ficoms
add
xor
inc
fmulp
fwait
mov
push
clc
repnz
ljmp
push
sahf
popa
pop
cmc
xor
in
aas
mov
xchg
jle
jmp
jbe
adc
xlat
mov
xor
xchg
xchg
adc
fldt
dec
push
outsl
mul
sub
sti
inc
mov
addr16
or
push
mov
lret
mov
mov
push
pop
hlt
cmpsb
movsb
inc
fdivrs
out
mov
mov
jecxz
in
loope
push
aam
iret
pusha
call
mov
fnstcw
lds
mov
cmp
imul
leave
inc
jbe
sbb
xchg
mov
shll
mov
add
push
sub
subb
loop
xor
out
aad
call
and
stos
mov
mov
mov
dec
mov
addr16
cmp
adc
stc
jg
fisubrs
ss
fcoml
sub
in
xchg
aad
ret
bound
jb
push
sub
mov
mov
lret
jmp
cmp
pusha
sbb
ds
hlt
bound
fcmovnbe
mov
orb
push
test
lret
mov
sbb
and
mov
int
inc
mov
xchg
pop
add
sub
data16
insb
adc
pop
rcrb
stc
xorl
jb
jns
xchg
icebp
pop
in
ja
and
in
movsb
push
aas
inc
negb
push
lea
xchg
pop
cmp
test
int
stos
or
je
mov
fwait
pop
clc
mov
xchg
js
and
push
arpl
clc
out
sub
scas
adc
jge
lea
cmp
pop
pop
mov
mov
mov
cs
add
inc
cs
iret
int3
popf
push
cmp
outsb
stc
push
inc
or
in
out
cmp
dec
int3
jno
popf
ret
mov
xchg
insl
adc
mov
decb
in
cmp
pop
dec
btr
aaa
mov
xor
mov
mov
mov
mov
in
repnz
test
and
sbb
lods
shl
mov
mov
xor
daa
cmp
mov
push
repnz
das
xchg
clc
adc
sarl
mov
mov
ljmp
cmp
mov
faddl
cmp
inc
adc
sbb
leave
ja
push
jno
jp
stos
mov
dec
pop
in
and
sub
rorb
xor
js
mov
xchg
scas
fdiv
mov
cmp
cmp
push
ret
add
cmp
test
cmp
loope
inc
popa
and
mov
cmpl
inc
rolb
fisubrs
sbb
pop
push
lods
cmpsb
mov
inc
imul
and
push
push
in
jnp
dec
sbb
pop
pop
mov
xor
in
mov
mov
data16
cmpsl
add
xchg
add
jno
xchg
mov
gs
pop
mov
sbb
lods
movsb
jmp
mov
test
out
jb
loop
add
cs
push
lods
mov
fdivr
shl
push
cmp
dec
cmpsl
add
jmp
inc
jno
mov
sub
out
aaa
pop
aas
pop
add
divl
inc
divb
daa
push
shl
movl
inc
mov
out
pop
shl
jbe
out
sub
fsubr
pop
ret
fcmovu
cmp
sub
sbb
jecxz
decb
jg
inc
clc
fmuls
lds
push
es
inc
or
dec
rolb
mov
jae
lods
mov
je
mov
lahf
lods
sub
dec
fwait
pushf
mov
shrl
push
nop
dec
push
sarb
hlt
pop
dec
int3
icebp
call
jb
mov
push
inc
cmpsl
dec
loopne
andb
mov
pop
or
sub
out
sbbb
cld
jl
push
sbb
cmc
int
cs
pop
out
test
pop
and
xor
shrb
shlb
pop
dec
leave
aam
mov
or
or
sub
rclb
subl
xchg
sahf
jb
sbb
inc
inc
int3
add
das
aaa
pushf
andl
out
cmc
pop
mov
adc
mov
jnp
jle
inc
lret
repnz
adc
inc
js
pop
bound
lock
fnstcw
rcr
sub
cmp
repz
mov
rorl
movsl
loop
lahf
aaa
fmuls
xchg
cltd
xchg
mov
xor
mov
pusha
scas
pop
sbb
sbb
xor
jnp
inc
lock
xor
add
and
xchg
stos
xor
pop
cmp
adc
or
push
jo
int3
cmpsl
repz
push
test
dec
repz
xchg
add
or
stos
in
data16
lcall
pop
cmp
push
mov
pop
aas
mov
push
mov
mov
add
cmp
lahf
pop
inc
loopne
dec
cmp
add
jecxz
jle
ret
sub
cld
xchg
sub
popa
imul
lcall
mov
sub
xor
iret
jge
sbb
sub
push
lea
fmuls
jbe
stc
add
dec
mov
outsb
in
std
adc
out
sarl
negl
xchg
ljmp
xor
lret
cs
pop
in
inc
push
repnz
icebp
adc
ret
inc
xor
xlat
pusha
shll
icebp
mov
fimuls
pusha
or
adc
in
and
mov
pop
xor
outsb
test
sub
std
nop
imul
add
sbbb
aaa
jbe
insl
scas
push
push
jne
inc
stos
pop
mov
mov
or
sbb
or
mov
inc
push
mov
pusha
lret
rorl
pop
xor
les
pop
pop
cmc
cmpsb
add
jl
adc
add
shrl
xor
and
jno
xor
scas
jne
adc
out
mov
sub
cmp
test
sbb
xlat
bound
jp
sub
mov
mov
addr16
jmp
dec
dec
dec
faddl
push
mov
test
lods
sbb
and
dec
cmp
stos
call
scas
in
inc
popf
mov
ret
pusha
mov
setno
cwtl
pop
or
cld
xchg
outsl
ljmp
sub
jp
cmpsb
pop
fmuls
ret
and
cmp
fistpl
xchg
mov
lock
mov
fs
and
daa
stc
arpl
sbb
les
pop
mov
lea
adc
movups
push
imul
aad
jp
inc
and
push
sub
lods
xlat
cmc
xchg
scas
pop
fmul
jae
fidivrs
outsb
stc
jno
xchg
mov
push
dec
sbb
push
add
add
jecxz
mov
shll
adc
mov
testb
fst
ljmp
cs
jnp
mov
push
popf
cmp
aas
cmpsl
xor
imulb
daa
inc
inc
rorb
sub
fnstcw
add
scas
clc
repz
stos
push
push
push
jg
das
adc
push
in
pop
shll
mov
mov
sti
cs
cmp
push
ja
jae
mov
dec
push
ljmp
push
xor
imul
sub
mull
or
inc
hlt
mov
cld
fs
int
mov
lock
sti
fisubrl
xor
insb
movsb
rcrb
jmp
shlb
test
sahf
ficomps
mov
bound
inc
test
sub
adc
dec
inc
aaa
or
add
mov
rcr
mov
sbb
mov
idivb
lret
movsl
rolb
mov
sahf
inc
cmpsb
insb
mov
push
inc
idivl
ret
mov
rcll
cli
adc
aas
mov
cmp
jae
pusha
ror
fsubl
cmpsb
xchg
cmp
sub
cmp
cmp
gs
xor
dec
jnp
ja
xor
dec
lret
dec
or
xor
push
icebp
ret
into
inc
mov
add
xchg
stos
insb
mov
xchg
cmpsb
sbb
fldt
add
bound
ret
mov
sbb
xor
xor
sbb
mov
ds
push
je
enter
xorl
nop
xchg
add
mov
xor
js
mov
xchg
xor
ret
out
mov
cmp
push
mov
inc
imul
inc
xchg
push
cwtl
pop
fs
pusha
and
call
test
faddl
aas
test
adc
mov
dec
jp
jp
sbb
and
cmp
jle
pop
jnp
loop
xchg
push
out
test
inc
jne
mov
or
fists
mov
inc
repz
pusha
rorb
insl
inc
adcb
out
xchg
pop
std
bound
insb
xchg
cltd
dec
imul
sbbb
add
mov
adc
sub
adc
movsl
stos
xchg
mov
xchg
sub
mov
aaa
mov
pop
out
aas
outsl
sbb
pop
or
sub
ror
cmpsl
cld
adc
xchg
xor
ficoms
xor
and
pop
pop
mov
pusha
das
fiaddl
cs
cmp
push
push
cld
rcrl
mov
pop
add
pop
mov
nop
into
rcll
insl
jno
or
leave
lods
das
mov
xchg
dec
push
dec
adc
xor
in
mov
fistps
ljmp
inc
mov
out
xchg
pop
and
jecxz
mov
push
pop
roll
mov
fsubs
push
push
out
inc
xchg
and
mov
cld
iret
push
xor
shlb
sbb
push
sbb
pop
je
aaa
pop
add
testl
decl
cltd
cwtl
icebp
xchg
and
inc
lret
loope
push
and
rclb
add
adc
rcr
leave
rorl
or
gs
lock
idiv
pushf
int
call
sub
popf
and
test
jl
xor
or
aad
shrl
xchg
int3
lods
jb
push
in
movsb
sub
js
call
iret
and
je
lea
in
imul
mov
popa
or
loop
push
jmp
movsl
push
sub
ss
lock
dec
and
inc
scas
sarl
aad
push
subl
adc
dec
mov
fnstsw
cltd
into
pushl
in
xor
or
jmp
popf
test
dec
xchg
push
xchg
fistpl
mov
fimull
pushf
shl
nop
imul
adc
fildl
test
stos
mov
hlt
nop
cmp
inc
jecxz
not
aam
mov
add
push
mov
lahf
vmwrite
adc
loope
push
or
sub
je
push
cld
rcrl
ja
mov
aad
in
cli
mov
std
mov
pusha
inc
push
and
dec
xor
sub
xchg
adc
aam
addr16
cmpsl
call
lods
out
andb
dec
push
mov
sbb
hlt
push
fsubr
in
out
push
jno
das
fsubrs
int
fldcw
lret
push
or
push
inc
stos
dec
lods
ds
mov
test
xchg
lret
inc
xchg
popa
fucomp
jmp
push
jmp
sbb
push
fisubrl
mov
nop
sbb
or
fstpl
scas
adcl
lds
aad
jmp
jnp
out
cmp
ljmp
jecxz
enter
mov
nop
lss
adc
in
dec
test
xor
aaa
test
ljmp
fildll
in
iret
imul
and
push
pop
inc
sub
test
push
xchg
mov
jmp
fmul
lods
jl
jp
pop
or
cmp
sti
popa
adc
xor
xor
inc
aad
xchg
push
lods
inc
mov
int3
pop
repz
iret
clc
add
mov
call
xchg
out
jl
fsubr
xor
ficoms
push
fbld
xchg
hlt
adc
fisubl
in
std
add
inc
insb
stc
sub
sbb
xor
pop
push
mov
add
shr
jbe
cmp
test
mov
es
xor
push
jb
pop
out
sahf
loop
mov
sahf
mov
leave
push
in
shll
cwtl
jo
mov
mov
mov
and
ret
add
sti
or
outsl
push
repnz
ficoml
add
sub
lods
fnsave
lea
insw
sbb
mov
xor
jns
imul
repz
aaa
sub
aas
jmp
push
fistps
aad
js
xchg
gs
inc
push
mov
dec
out
in
pusha
gs
mov
outsl
inc
repz
pop
mov
fs
adc
and
into
fiadds
sahf
jg
das
adc
add
mov
fwait
aaa
movb
xchg
stos
shl
lret
push
xchg
inc
leave
xchg
lret
or
faddl
lea
and
sbb
mov
sub
xor
add
push
fiadds
sub
inc
lret
gs
aam
adc
scas
int3
std
adc
adc
xchg
stc
jge
inc
pop
das
cmp
rcr
or
test
push
lds
sub
dec
push
jae
mov
pushf
lahf
test
dec
or
mov
sub
xchg
call
xor
iret
pop
adcb
cmp
pushf
jns
push
adc
pusha
stc
jecxz
mov
cmp
jnp
xor
push
xchg
sbb
lahf
push
jle
mov
mov
adc
add
dec
cwtl
dec
iret
jmp
ret
jle
pop
nop
sbb
inc
push
out
int
mov
adc
pop
xor
push
add
je
inc
mov
xchg
mov
push
jmp
sti
fistps
test
xchg
push
adc
out
jge
dec
adc
add
push
pop
sub
and
cmp
imull
pop
loopne
lock
and
mov
rorl
push
mov
seta
push
and
std
mov
inc
outsl
shlb
jo
rolb
sub
shll
scas
mov
shr
lods
mov
cli
sbb
imul
or
int3
loop
push
xchg
mov
rorb
stos
cmp
jae
dec
or
stos
pop
loopne
and
dec
fbstp
inc
pusha
shl
jb
push
inc
out
decb
pop
loope
xchg
mov
dec
or
ljmp
mov
insb
mov
mov
push
divl
adcl
subl
lret
xor
mov
inc
out
adc
mov
adc
leave
repnz
and
xchg
popa
pop
mov
fsts
fdivrs
xchg
jnp
jbe
inc
test
insl
push
mov
mov
or
or
fadd
xor
xor
add
pop
xchg
stc
or
das
lods
out
repz
push
arpl
lock
cli
adc
sub
out
dec
mov
lds
sbb
cli
pop
enter
pop
xor
lock
dec
or
fwait
sahf
xor
jmp
lods
stos
adc
into
dec
fidivs
mov
sub
lret
nop
cli
rorl
push
cmp
outsb
clc
mov
xchg
pop
inc
add
movsl
sub
and
mov
dec
sub
inc
sti
aad
nopl
addr16
fwait
pusha
pop
addr16
pushl
clc
adc
std
adcl
sarl
add
pop
scas
jmp
push
pusha
fs
outsb
cmp
sub
mov
jns
lcall
cmp
pop
pop
mov
jle
dec
int3
push
jb
add
insb
scas
adc
push
outsb
mov
inc
push
xlat
mov
push
xchg
inc
call
scas
or
test
or
sbb
shll
pop
xor
push
xchg
mov
xlat
sub
fbstp
xorb
inc
push
roll
mov
rcll
arpl
mov
xchg
setbe
jo
or
pop
push
clc
pop
dec
push
shll
sbb
int3
lods
jge
cmp
insl
pusha
jl
mov
xor
dec
push
xor
and
sysexit
addb
icebp
inc
inc
adc
stos
jl
jno,pn
inc
pop
mov
xor
cwtl
rcl
lods
push
out
movl
outsl
mov
iret
xchg
or
mov
xor
enter
inc
into
add
mov
mov
test
inc
imul
sbb
push
xor
and
out
sti
inc
adc
xor
fnstcw
mov
mov
jg
in
adc
movsb
mov
mov
into
mov
int
shrb
dec
xchg
cmpsb
int3
sub
fsts
jno
ret
roll
dec
cmpsb
test
das
ficompl
pushf
addr16
cmp
into
scas
xlat
add
lods
sar
jmp
aam
mov
lods
mov
cs
sub
xchg
mov
mov
test
shll
and
in
shlb
mov
out
pop
jp
js
arpl
add
push
mov
cli
in
mov
jl
lret
loop
xchg
mov
sbb
mov
sub
sti
inc
and
inc
ss
mov
adc
xor
mov
sub
jmp
push
es
pop
test
and
adc
cmpsl
out
inc
xorb
mov
dec
insb
insb
pop
xchg
mov
cli
pop
iret
add
mov
pop
dec
leave
scas
pusha
inc
stc
inc
ficomps
loope
push
test
lret
xchg
adc
or
scas
popa
mov
xor
mov
add
les
insb
cmp
dec
pop
shrl
jae
cmpsb
push
clc
into
dec
inc
nop
mov
lahf
enter
mov
sub
jnp
jecxz
mov
sub
sub
xor
lea
cmp
shl
cmc
rorl
aaa
mov
sahf
jmp
jle
and
das
dec
and
fcomps
mov
stos
add
jge
mov
int
xchg
je
pop
loope
mov
popa
jb
test
mov
jbe
lock
xor
push
movsl
shlb
nop
imul
sbb
popa
ror
loopne
out
mov
inc
push
mov
sub
cmp
dec
jbe
adc
hlt
or
fwait
dec
mov
xchg
mov
mov
sbb
pop
rclb
sub
pop
cwtl
mov
nop
xor
stc
push
std
fisubs
loop
jbe
inc
pop
xchg
sbb
lret
ja
daa
mov
xchg
mull
pushf
imul
sub
sahf
setno
jge
and
xorl
add
shrl
in
out
and
lret
pop
cmp
cmpsb
add
rcr
inc
adc
fisttps
mov
shlb
outsl
jmp
sbb
ja
sub
sub
cmp
je
test
jae
pushf
fwait
push
jmp
mov
das
xor
or
push
imul
test
jle
imul
lahf
out
add
bound
and
jle
pushf
ds
ret
lock
lret
roll
jge
adc
or
mov
or
cld
mov
add
adc
aam
ljmp
or
fimull
xlat
push
ret
push
imul
mov
xchg
fiaddl
aad
imul
movsb
jmp
in
inc
out
push
mov
sub
push
cmpsl
je
sbb
aaa
jl
xchg
incl
enter
xor
dec
mov
push
pop
jge
mov
lods
test
adc
loop
andb
xchg
xlat
pop
insb
ss
cwtl
scas
xchg
nop
xchg
xchg
daa
dec
out
flds
push
inc
pop
lret
mov
or
cld
sbb
mov
cmp
insl
mov
mov
push
divb
sbb
cmc
arpl
lcall
pop
lcall
cmp
cmp
jle
dec
test
jb
and
jbe
add
call
mov
mov
dec
dec
pop
pusha
dec
stc
mov
add
and
clc
mov
jne
cmp
jno
ljmp
scas
mov
iret
enter
pop
lds
pop
es
js
loope
dec
xchg
xlat
dec
lods
dec
arpl
movsl
out
cmp
pusha
mov
js
cmp
out
rolb
pop
adc
jmp
add
cmc
jl
or
and
cwtl
sahf
outsb
cwtl
mov
jle
inc
mov
adc
mov
aaa
fldcw
iret
pop
cmpl
in
push
inc
mov
push
lret
sub
mov
cmpsb
inc
test
ret
movsb
pop
or
iret
push
add
call
sbb
dec
stc
mov
sahf
sub
pop
xchg
repz
xor
adc
mov
inc
sub
xorl
xor
cmp
add
cmpsb
jb
pusha
out
add
mov
inc
mov
fildll
rclb
adc
pushf
stos
or
rclb
dec
test
mov
outsl
pop
jae
push
sbb
xchg
or
scas
push
xor
sbb
mov
in
adc
ds
pop
xor
lock
mov
mov
loop
gs
adc
mov
sbb
stos
or
adc
jno
inc
mov
stos
out
bound
dec
xor
ss
pop
pop
sarb
mov
test
adc
stos
jb
cmc
shrb
mov
adc
mov
ljmp
stc
shlb
scas
outsb
decb
cmp
adc
orb
xor
adc
cmp
and
jo
outsb
pop
mov
ror
imul
fcom
into
jbe
cmpsb
pop
in
add
mov
or
out
adc
divl
int3
test
fimull
mov
fcomp
adcb
insl
lock
bound
aas
cwtl
in
mov
xlat
sub
je
paddw
jb
inc
jno
pop
leave
stos
mov
adc
adc
int3
outsb
iret
jp
imul
mov
outsl
popf
fidivrs
arpl
pop
jg
mov
pop
dec
out
adc
arpl
out
or
add
or
loopne
divb
mov
std
mov
loope
sub
adc
cwtl
sahf
je
out
inc
and
mov
arpl
ljmp
dec
outsb
addr16
stos
push
or
xor
aas
adc
lds
mov
cmp
and
divl
xchg
jo
xchg
sarb
dec
pusha
jg
push
mov
imul
pop
mov
xor
pusha
pop
fdivrl
mov
jns
test
test
les
push
test
clc
dec
xlat
aam
mov
mov
lcall
xor
int3
inc
push
sub
cmp
and
add
test
loop
mov
addr16
ds
pop
in
int
repz
cltd
popa
mov
lock
mov
cmpsl
mov
jnp
int
jl
cli
out
gs
push
mov
dec
jne
push
cmp
pushf
sbb
jbe
fdivrs
cmp
cli
out
loope
jp
loopne
out
pop
sbbb
pop
iret
sub
mov
mov
jo
jg
inc
cltd
ror
or
imul
xor
inc
movsb
inc
cmp
or
jge
mov
shlb
lods
adc
mov
jno
pop
fwait
xor
jae
outsb
cli
push
dec
pusha
jo
adc
cs
data16
insl
push
xor
outsl
cmp
jmp
rcrb
repnz
inc
bound
test
nop
add
mov
mov
cmpsb
call
pop
loope
lock
ficoml
push
test
inc
stos
fcomi
adc
adc
enter
sbb
daa
dec
cltd
xlat
jns
pushf
adc
sub
mov
icebp
ljmp
lds
mov
cmp
lret
and
pop
pop
int
jne
repnz
inc
js
cltd
stos
out
mov
cli
mov
popa
mov
mov
insl
inc
aaa
add
mov
fimuls
and
jno
jnp
es
int
adc
jge
or
sub
xchg
int3
stos
test
imul
mov
and
loop
insb
lods
imulb
dec
jns
jnp
cmp
dec
sbb
icebp
shll
mov
push
jecxz
mov
jo
repz
das
push
imul
mov
push
or
sbb
and
and
rcl
adc
pop
mov
inc
jae
in
or
xor
rolb
aaa
or
sub
fcomi
sbb
test
sbb
mov
mov
rcll
sub
xchg
out
jecxz
shlb
jae
std
mov
stos
mov
aaa
add
fstl
cld
jp
outsb
jns
push
push
push
xchg
mov
cmp
js
mov
push
movsb
dec
cltd
lods
mov
es
xchg
mov
loop
mov
pop
repnz
mov
cmp
in
sbb
je
fcomps
xchg
rcrl
jecxz
push
xor
mov
sbb
adcb
or
mov
jle
push
lds
xlat
ljmp
cmp
push
push
enter
scas
pop
push
int
push
into
insl
and
ja
lods
inc
bound
gs
add
ja
mov
ret
cmpl
mov
inc
sub
pop
mov
adcb
jmp
xlat
pop
out
cmpsb
push
push
call
cmp
mov
std
in
dec
lret
cmp
pop
ss
jno
movsl
and
dec
or
arpl
hlt
pop
adc
add
aam
jge
sahf
inc
inc
sub
sbb
mov
in
mov
xchg
inc
leave
jbe
jbe
out
inc
cwtl
xchg
clc
fnsave
loope
add
dec
out
and
out
xchg
ret
aam
mov
adc
mov
xchg
xchg
mov
sbb
cltd
xor
sub
movsb
mov
add
imul
fiadds
mov
movsl
push
sbb
add
fwait
imul
jecxz
jb
pop
icebp
add
in
xchg
mov
pusha
shlb
xchg
dec
jne
in
xchg
mov
add
sub
jno
subl
loope
lret
inc
pusha
sbb
les
fiadds
mov
movl
push
xlat
std
jge
xlat
add
dec
mov
cs
bound
dec
out
out
pusha
cmpsl
pop
gs
stc
pusha
cmpsb
out
addr16
sub
jle
inc
lcall
inc
mov
ret
mov
mov
mov
mov
imul
or
gs
push
fnstsw
mov
pop
mov
insb
xor
xchg
popa
call
cld
imul
mov
shll
clc
loopne,pt
nop
and
test
shlb
dec
pop
loope
shrl
sub
fwait
pushf
sbb
fcom
xor
adc
cmp
lret
cli
stos
mov
pop
imul
mov
cmp
adc
out
sub
enter
dec
add
mov
out
push
int3
mov
pop
hlt
stos
leave
out
push
aas
mov
or
pop
mov
outsl
pop
movsb
popa
fstps
sbb
loopne
adc
std
adc
stos
test
cwtl
adc
gs
adc
push
cmp
and
testb
adc
pushf
nop
mov
into
cmp
mov
cltd
adc
push
sub
jg
jge
jnp
inc
or
inc
pop
out
in
rcrl
fdiv
jb
sbb
fucom
cli
dec
sbb
sahf
pushf
orl
or
and
aad
or
rcrl
mov
mov
inc
jmp
iret
mov
jnp
outsl
in
adc
xchg
sbb
jmp
mov
inc
push
dec
loop
cmpsb
mov
xchg
movsl
fiaddl
aad
leave
movsl
ret
xor
mov
jmp
or
fisttps
popf
cmp
xchg
cwtl
inc
mov
xor
mov
out
or
xor
mov
and
stos
pop
fwait
movsl
ficomps
cli
ja
aaa
lds
xor
adc
cld
add
jae
cmp
int3
scas
js,pn
pop
fs
leave
jg
outsl
loopne
jmp
arpl
or
and
mov
or
push
pop
sbb
icebp
mov
jecxz
push
movsl
subb
jnp
loop
fistpl
adc
in
xorb
movsb
sub
pop
fwait
mov
loop
xlat
outsl
jbe
sub
aaa
aaa
scas
pop
inc
sbb
add
sub
aas
andb
dec
sarl
mov
test
pop
lea
icebp
adc
add
mov
push
mov
cmp
enter
insb
mov
mov
mull
filds
aam
push
inc
sbb
adc
daa
jo
pop
dec
and
pop
les
or
addr16
mov
shll
test
mov
lret
das
scas
dec
stos
popa
int
stos
aas
dec
cs
adc
shll
fs
jg
jns
fsubl
xchg
inc
xor
sbb
cmpsb
add
cltd
ljmp
cmp
push
dec
sarl
lret
cltd
js
inc
mov
testb
pop
pop
lods
inc
and
ja
jmp
adc
mov
icebp
mov
ja
cmpsl
std
clc
aaa
add
mov
imul
dec
leave
jb
cmp
repnz
fs
movsl
mov
aam
push
cwtl
shlb
aas
adc
sbb
pop
ret
mov
and
dec
mull
clc
rol
add
insl
xlat
call
mov
in
nop
mov
add
loop
push
fcmovbe
inc
ds
add
push
aad
roll
cmp
inc
mov
push
orl
cmp
shll
out
lret
js
mov
sti
outsl
jl
stos
fsubr
cmp
clc
mov
mov
out
sbbb
sbb
xorb
lret
icebp
mov
pusha
mov
daa
test
inc
adc
lds
call
xlat
mov
inc
lods
ret
push
xor
fs
mov
and
mov
lods
mov
das
fmuls
cmp
je
iret
cwtl
lods
fildll
ljmp
lret
jp
add
mov
dec
push
and
mov
mov
push
push
mov
and
dec
fcom
mov
inc
pop
mov
scas
repnz
jnp
push
adc
pop
xor
js
xchg
js
call
scas
inc
test
pop
out
lahf
popa
loopne
stos
add
sbb
outsl
call
jns
dec
lods
hlt
insl
bound
lahf
mov
in
addr16
dec
sbb
mov
loope
xchg
xor
and
cli
sbb
jae
sub
hlt
outsl
je
lds
or
fdivrp
lds
in
imul
jno
jb
leave
sub
inc
fcomps
pop
std
xorl
xor
dec
xlat
cwtl
or
enter
insl
mov
sbb
fistpl
lret
dec
test
pop
dec
cli
stc
dec
xor
loope
push
xchg
sbb
mov
faddl
dec
mov
fwait
add
or
mov
lods
or
add
add
lcall
sub
xchg
adc
rcrl
je
sbb
jle
inc
pushf
lods
cmc
and
jp
pop
adc
je
roll
mov
scas
aaa
jnp
icebp
int3
dec
lods
jecxz
cld
or
nop
lcall
gs
lods
repz
mov
cmp
outsl
aam
fimuls
scas
push
dec
mov
imul
mov
lcall
xor
xchg
pushf
iret
inc
fldcw
fnstcw
jecxz
lock
ret
sti
add
data16
in
sbb
mov
jp
xchg
push
dec
push
sarl
int
test
pop
pop
leave
cmpsb
push
fsubl
stc
xor
cmp
je
stc
repnz
cmp
push
push
jmp
in
xchg
shll
mov
jg
mov
inc
inc
cli
jl
mov
fwait
xchg
mov
das
stos
stos
js
push
jnp
xchg
push
lods
sti
jnp
jp
ds
fisubrl
out
loop
rcrl
mov
mov
jmp
pop
sub
or
fdivrl
inc
push
fisubl
dec
pushf
out
out
out
jmp
aad
pusha
test
repz
push
push
inc
lret
mov
cmp
push
ret
aaa
not
jbe
fcoms
bound
xchg
test
cld
cld
xor
lea
imul
push
sbb
int3
inc
xchg
ljmp
shlb
mov
scas
scas
shlb
mov
push
inc
mov
mov
pop
pop
cmc
and
or
mov
dec
insb
mov
adc
nop
mov
subb
xchg
mov
push
loope
sbb
fldl2e
push
stos
lret
jae
in
pop
jbe
cmpb
push
sbb
out
outsl
ficomps
and
or
mov
pop
adc
sbb
ljmp
jae
stc
fsts
inc
jp
push
mov
pop
ljmp
mov
sub
test
jp
jnp
pop
push
xchg
out
or
dec
inc
cltd
xchg
jmp
outsl
cltd
cmpsb
je
bound
call
fcmovne
mov
les
imul
ljmp
pop
mov
int
in
mov
in
or
lret
das
fisubrs
add
int
push
jmp
jo
jecxz
pop
mov
and
in
sub
cmp
inc
std
js
movsl
hlt
dec
fs
out
push
dec
adc
jg
fwait
sbb
cmpsb
fstps
xchg
repz
in
in
sub
jle
roll
sbb
js
punpckhbw
adc
sbb
cmp
dec
clc
jno
das
push
pop
in
xorb
pop
les
or
jo
jge
incl
cmc
push
aad
cltd
lret
in
mov
psllw
inc
pop
lds
inc
cld
mov
pop
dec
xchg
insl
xchg
icebp
inc
jns
jle
ret
repnz
insb
insb
dec
add
add
stos
cmpsb
pop
jmp
in
data16
lret
repz
imul
push
sub
mov
pop
push
orb
jg
inc
aas
and
jp
xchg
add
fldenv
mov
sub
xchg
sbb
aas
mov
not
xor
out
stos
mov
mov
iret
arpl
mov
sbb
ja
add
pusha
xchg
daa
mov
in
frstor
xor
push
sub
push
insb
inc
dec
clc
dec
lahf
sahf
inc
push
adc
rolb
data16
push
test
jle
jns
add
mov
pop
lahf
cmpsb
loopne
hlt
sub
movsb
call
cmp
xor
imull
add
xchg
ffree
dec
cmpsl
jge
insl
mov
xchg
addr16
cmp
dec
mov
sub
sarb
xor
rcll
div
lock
sub
scas
xorl
clc
cltd
fsubl
imul
jmp
test
btr
jge
aad
jmp
lods
xchg
mov
mov
mov
add
push
xor
adc
jp
insl
jmp
iret
movsl
lock
fcoms
add
shrb
scas
fwait
sti
orl
xor
push
cmp
fidivrs
loop
lods
iret
sbb
fldt
clc
es
shrl
or
dec
data16
out
jo
les
sbb
div
in
ja
cmp
aad
and
cmp
dec
in
mov
je
std
push
jmp
cmp
sbb
ret
scas
add
in
mov
jae
out
rcll
xchg
lret
cmp
into
and
divl
and
sub
and
sbb
xchg
addr16
push
mov
sahf
je
out
leave
mov
sbb
out
mov
cmp
inc
lea
adc
inc
or
mov
inc
adc
pop
xchg
mov
inc
jg
fistps
bound
and
inc
jbe
hlt
mov
sbb
sbb
lahf
jb
popf
dec
aam
cmpb
clc
outsl
sub
xor
add
lret
stos
insl
lods
pop
lret
xchg
xchg
icebp
pop
cltd
jge
adc
std
mov
test
icebp
xor
loope
push
jnp
pop
and
ficomps
imul
push
lods
push
outsb
jmp
in
out
aaa
cld
inc
ss
mov
jle
add
std
imul
not
je
ret
add
les
jnp
in
rcrl
xor
ljmp
frstor
and
sbb
or
mov
and
insb
out
inc
mov
mov
hlt
ljmp
mov
nop
cs
test
test
xchg
sub
xlat
sbb
test
adc
push
fs
sar
cmc
and
outsl
xor
cmp
mov
sub
bound
cli
rclb
jmp
cmp
test
lcall
and
ror
adc
test
mov
sti
ds
xchg
cmp
pop
stc
pop
popf
ja
nop
fdivrp
jp
arpl
loopne
pop
scas
subl
and
mov
subb
sbb
cmpb
bound
rcll
push
pop
or
or
inc
aam
xor
ret
pop
mov
inc
xor
repnz
push
cmpsl
out
sub
sbb
dec
fidivl
pop
mov
popa
cmp
adc
fs
xor
stc
sub
in
dec
inc
adc
pop
loopne
push
sar
xor
dec
lds
xchg
shlb
dec
out
pop
push
mov
mov
pop
movsb
imul
cltd
lahf
shrl
and
repnz
inc
es
test
mov
daa
jg
or
mov
arpl
imul
mov
in
sub
mov
adc
dec
add
jmp
xchg
test
jae
loope
push
enter
push
xchg
mov
out
inc
stos
xlat
mov
add
out
and
cmp
scas
in
xchg
insl
sub
jno
and
into
or
xchg
fildl
mov
shll
mov
push
push
mov
cmpb
sbb
jnp
out
mov
les
movsl
insb
jnp
jg
inc
mov
xor
rolb
leave
mov
out
xchg
inc
stc
push
push
outsl
mov
cmc
sub
mov
rcrb
xlat
xlat
cmp
cmp
xor
aam
rorb
jb
dec
inc
popf
push
imul
sbb
push
int
popl
insb
out
cmp
lea
dec
or
sub
movsb
lock
stos
call
loopne
push
mov
test
jb
push
sub
pop
fistpl
rorb
fdivrl
adc
mov
lcall
fwait
dec
xor
rcrl
test
dec
js
cmpsl
dec
or
insl
stc
sbb
push
cmpsl
repz
xchg
adcl
fnclex
out
and
mov
mov
and
pop
dec
mov
ds
hlt
sub
popa
fimuls
or
xchg
adcb
jo
movsb
call
xor
pop
lea
xchg
loope
nop
in
inc
pusha
mov
push
pop
imul
lock
lods
mov
das
cmp
xlat
stos
or
dec
dec
addl
xchg
lcall
pop
inc
pusha
std
xchg
test
iret
xor
lcall
sti
mov
and
imul
lahf
ss
push
lret
fdivr
xchg
cli
in
inc
push
sbb
and
and
cmpsb
in
das
and
sbb
into
aad
cltd
pop
pop
loope
pusha
lea
fs
pusha
pop
add
jae
jecxz
fdivl
adc
jl
movsb
out
outsl
iret
shlb
aad
mov
pop
fistps
mov
fnstsw
inc
jecxz
dec
ss
or
gs
and
push
mov
mov
dec
mov
cmp
inc
insb
inc
aam
cmp
jo
cmpsb
xchg
aaa
mov
mov
neg
add
mov
mov
clc
orb
xlat
test
es
cmc
xchg
xor
in
and
dec
repz
jmp
cld
in
loope
sub
pushf
in
xchg
dec
xchg
xor
mov
lret
mov
mov
cmp
push
cltd
shll
ret
icebp
jmp
cmp
movsl
fisubs
xchg
aad
push
ljmp
scas
push
dec
in
push
loopne
mov
scas
lcallw
repz
sahf
mov
push
inc
icebp
jne
shrb
xchg
cmp
in
fcoml
pop
adc
dec
mov
fs
sbb
in
inc
push
mov
js
shl
jecxz
arpl
or
movsb
sub
inc
lret
loop
jge
mov
pop
cmp
push
enter
xchg
or
pop
cmp
les
enter
addb
sub
xchg
orl
outsl
dec
icebp
pop
lods
fimuls
imul
jp
test
sti
int
das
movsb
adc
hlt
rclb
rcrb
xchg
cmp
dec
or
mov
sub
or
clc
arpl
or
andl
sub
clc
iret
push
sarl
lahf
movsb
jne
nop
xchg
fnsave
inc
mov
repz
mov
push
lock
lret
shll
xchg
sbb
add
in
and
int3
dec
or
lds
push
xchg
mov
leave
push
subl
inc
aam
and
mov
test
cmpsl
testb
mov
mov
andb
cmp
daa
cwtl
mov
rclb
inc
nop
adc
mov
sub
stos
gs
inc
inc
in
popa
rorl
cmp
mov
xchg
fs
icebp
enter
int3
shrb
jp
sub
test
xor
adc
push
mov
dec
cmp
sbb
jbe
nop
inc
sbb
imul
ss
cltd
js
insl
push
adc
call
popa
test
inc
inc
bound
adc
mov
push
adc
shll
fisubl
xor
sbb
in
pop
sti
xchg
in
daa
adc
mov
test
mov
mov
test
das
loopne
cwtl
mov
mov
push
fisubs
mov
inc
in
in
mov
cld
xchg
ljmp
fbld
movsb
jecxz
mov
inc
setne
cli
in
fs
mov
imul
arpl
jge
jo
int
cli
xchg
out
mov
fbld
outsb
pop
add
xor
hlt
xchg
dec
popa
xchg
pushf
fwait
dec
fsubs
and
fistpll
addr16
movl
push
dec
sahf
pop
dec
cmp
add
in
or
sbb
sahf
sbb
cld
fdivl
into
inc
lahf
pusha
imul
icebp
pop
mov
roll
ds
lds
cs
aas
aas
dec
adc
cmp
andb
cmpsl
sbb
adc
lock
jnp
iret
into
add
add
in
aam
out
imul
mov
ss
sbb
or
rcll
mov
loopne
jl
mov
psadbw
mov
dec
jnp
dec
adc
mov
mov
cwtl
pop
push
pop
dec
sbb
xchg
lock
push
sarb
adc
push
stc
sub
push
sub
cmp
mov
pop
in
leave
je
mov
pop
cld
rcrb
jp
pop
jle
fcmove
addr16
add
dec
into
push
mov
mov
mov
mov
adc
mov
lcall
lcall
jge
sbb
dec
jp
mov
test
lock
sbb
enter
pop
mov
jecxz
dec
mov
and
mov
scas
pop
ljmp
das
pop
push
mov
sub
pushl
mov
hlt
push
adc
outsb
cmp
test
mov
imul
subl
adc
and
and
js
iret
aam
dec
mov
movsb
call
repz
into
sub
adcb
popf
ljmp
fwait
rclb
mov
andl
subb
mov
inc
movsl
jo
insb
mov
xlat
jmp
and
out
out
mov
inc
adc
fnstsw
dec
ret
dec
inc
and
idiv
mov
movsb
ljmp
and
cld
jmp
movq
jge
mov
sub
xchg
lea
in
jp
cmpsl
incl
xchg
mov
jle
sub
dec
movsb
push
enter
adc
testb
notb
sbb
mov
pop
inc
sbb
xor
jecxz
mull
xchg
sub
roll
sarl
jmp
scas
or
loope
fidivl
mov
mov
add
pop
fcomip
sub
test
movsb
fistpl
stc
mov
hlt
mov
jmp
loopne
ds
sbb
mov
aas
mov
lret
std
ss
mov
movsb
or
aam
imul
xchg
or
xor
cs
adc
dec
ffree
cmpsb
jb
iret
fimuls
inc
outsl
ret
add
adc
lret
adc
xchg
cli
and
icebp
mov
push
pop
gs
jmp
or
ss
pop
mov
cmp
xchg
adc
dec
fstp
jecxz
pop
push
inc
lcall
adc
jo
mov
sbb
mov
xchg
sbb
add
and
sahf
adc
mov
lods
xorl
stc
or
dec
in
pop
fldcw
push
jbe
imul
pop
divl
pushf
incb
bound
xchg
int3
add
cwtl
xchg
int
or
xchg
shlb
adc
mov
pop
mov
pop
movsl
and
xor
mov
cmp
iret
rsm
mov
mov
push
sbb
and
fmull
ljmp
xlat
test
test
cmp
jge
imul
xchg
cmp
inc
mov
adc
int3
jle
loope
xchg
or
mov
fwait
stc
and
mov
dec
lret
mov
cmc
sub
lock
xchg
cmp
ficoml
addr16
stos
and
sub
call
test
xor
and
hlt
fwait
and
cmp
hlt
push
orl
adc
inc
fidivrl
sahf
push
sub
cmp
std
int3
popa
and
inc
je
add
adc
mov
andl
mov
push
or
or
inc
bound
ss
js
dec
adc
jmp
push
loopne
bound
movl
xchg
mov
shlb
inc
sbb
jo
mov
jl
mov
daa
adc
mov
test
arpl
loopne
mov
and
xchg
push
iret
repnz
xor
adc
mov
and
ljmp
and
loop
mov
iret
xor
in
adc
out
outsl
mov
sbb
imul
movsl
xchg
or
and
enter
add
sub
inc
sbb
icebp
sbb
mov
adc
ds
fwait
mov
insb
mov
in
ret
push
ds
ret
xchg
pop
adc
jnp
rorb
and
nop
mov
in
mov
dec
ljmp
imul
adc
jo
xchg
fildll
pop
ret
xchg
popa
or
das
xchg
cmp
sub
clc
xchg
xor
ljmp
cltd
xchg
ljmp
mov
pop
aad
jno
sahf
xor
pop
fimull
dec
repz
pop
or
fdivrs
rorl
mov
cpuid
js
lods
adc
mov
addr16
lods
addr16
xor
lods
push
and
sahf
jmp
cmp
outsb
jl
mov
shll
push
jecxz
inc
xchg
xor
dec
hlt
pop
dec
mov
fcoms
xchg
aas
mov
gs
xchg
daa
pop
out
cs
pushf
in
cwtl
in
sbb
mov
xor
mov
sub
mov
dec
fdecstp
jns
leave
scas
pushf
rolb
mov
popa
sub
out
adc
lcall
mov
je
lods
add
lock
inc
push
nop
insl
test
xorl
add
arpl
xchg
cmp
aad
sbb
rol
inc
movsb
push
pop
test
outsb
add
addr16
mov
mov
pop
xchg
insl
fwait
ds
insl
shlb
xchg
out
dec
call
dec
lods
shll
arpl
mov
stc
fidivs
bound
cmp
shl
cmp
push
iret
outsb
pop
mov
add
nop
or
cli
and
push
aas
inc
push
mov
dec
clc
push
lcall
mov
imull
movsl
cmp
mov
pop
and
cmc
and
mov
mov
mov
inc
je
movsl
out
cmp
adc
lea
rclb
sahf
test
cmp
test
stos
adc
xchg
ds
test
jmp
gs
js
sub
gs
push
out
test
mov
xchg
dec
push
test
setbe
sub
mov
push
lcall
mov
xchg
inc
leave
je
mov
sbbl
pinsrw
cmp
push
or
aam
dec
add
repnz
std
push
mov
sbb
sub
sub
cmp
outsl
es
mov
out
mov
pop
int3
lahf
pop
inc
in
mov
adc
jne
dec
in
push
inc
inc
mov
inc
scas
iret
pop
arpl
pop
pop
mov
mov
js
mov
mov
add
sbb
cmp
rorl
sub
movsb
mov
in
imul
sahf
loope
push
xchg
loop
mov
addr16
loope
add
mov
insl
dec
adc
inc
xchg
lods
imul
or
int
leave
push
or
clc
sbb
jb
scas
mov
sbb
and
dec
mov
add
and
mov
or
dec
pop
hlt
fistl
rol
push
pop
fldl
imul
pop
popa
subl
inc
jmp
mov
ss
cmp
cli
sbb
sub
inc
xchg
mov
sbbb
call
popf
mov
imul
push
cmp
mov
into
add
fnstsw
in
cmc
pop
add
and
push
loop
push
jle
sbb
mov
fisttpl
in
xlat
iret
xchg
sbb
and
xchg
loopne
mov
hlt
jnp
push
leave
xchg
add
fnstsw
sub
insl
mov
cmp
cli
mov
ret
pushf
mov
aam
dec
or
inc
jle
fucomp
idivl
or
and
xchg
lds
and
arpl
jl
add
jmp
ret
adc
int
into
sbb
hlt
xor
xchg
mov
mov
cmc
push
adc
decb
mov
pop
mov
scas
les
negb
or
das
dec
das
imull
pusha
sbb
and
shll
xchg
mov
sub
add
iret
sarl
sarb
pop
push
jl
and
sub
mov
pop
xchg
add
jl
fisttps
push
inc
cmp
sbb
imul
adc
add
into
movsb
lret
sbb
adc
ja
push
mov
daa
aam
enter
sbb
pushf
or
test
sub
xchg
aas
mov
pushf
and
sbb
loope
mov
mov
sahf
je
cmp
xchg
mov
ds
aaa
stos
push
xchg
scas
arpl
andl
xor
mov
sbbb
ss
xor
testb
xlat
cld
das
xor
or
push
lret
inc
fcmovnbe
out
jecxz
jnp
mov
mov
sub
and
mov
dec
xor
xchg
pop
mov
xchg
insb
sbb
or
mov
ss
add
stc
cmp
jnp
xor
dec
std
arpl
cmpsl
dec
or
mov
mov
xchg
scas
or
outsl
andb
roll
out
fidivs
or
enter
push
stos
push
adc
fisttpll
mov
cmp
cmp
enter
sbb
mov
mov
pop
adc
xchg
shrl
jmp
test
inc
jp
mov
dec
and
jmp
ret
jbe
mov
mov
xchg
dec
fsubs
lahf
divb
scas
call
enter
jae
xor
iret
push
mov
sub
add
mov
mov
pop
pop
push
jne
clc
dec
cs
inc
hlt
add
in
sub
clc
scas
lea
cmc
pop
imul
ret
test
gs
scas
dec
fcomi
pop
pop
stos
mov
rcrl
lahf
dec
jae
push
inc
jns
outsl
pop
stos
lret
sbb
add
js
push
arpl
jno
xorb
lds
pop
mov
inc
inc
xchg
pop
or
frstor
adc
lret
mov
inc
pop
outsb
pop
jne
push
aas
repz
adc
mov
mov
lock
ret
aaa
imul
push
and
xchg
push
ja
cmc
ja
mov
push
aaa
test
push
sub
addr16
adc
loope
mov
fwait
aaa
mov
out
repnz
cmpsb
mov
mov
pop
shlb
js
push
insb
jns
add
push
pop
pusha
es
inc
test
fidivrl
sahf
test
les
inc
push
in
mov
enter
jle
arpl
xchg
inc
movsb
jnp
mov
push
push
and
or
xchg
aaa
mov
mov
out
and
clc
pop
iret
mov
sub
pop
in
mov
jg
movsb
cmp
ret
lock
add
pushf
xchg
sbb
test
inc
or
cmpsb
in
inc
push
pop
add
data16
fisubrs
sbb
jbe
orb
adc
jae
fs
shl
cmpsb
mov
pusha
jl
sahf
dec
imul
xor
bound
push
ret
js
jo
scas
cmpl
lds
pop
je
and
aam
gs
loop
jmp
out
roll
sub
dec
loop
inc
adc
push
mov
icebp
subb
insl
pusha
xor
hlt
inc
mov
mov
enter
dec
mov
cmc
das
sub
in
dec
mov
or
cmp
pop
mov
and
daa
negl
dec
int
and
icebp
mov
inc
icebp
push
pop
mov
push
mov
rclb
stos
inc
dec
mov
jns
mov
sub
mov
dec
mov
in
neg
pop
cmp
cmc
scas
addr16
fnsave
inc
les
adc
push
pop
mov
sbb
shll
dec
mov
lret
mov
or
dec
mov
inc
jecxz
push
mov
or
xor
xchg
leave
sub
jp
push
xorl
pusha
aas
and
popa
shlb
cmpb
jmp
push
sarb
loopne
xor
push
jg
xor
push
or
fdivs
push
fadds
fildl
xor
inc
rclb
loope
dec
lods
dec
dec
push
std
dec
mov
arpl
pop
and
jb
dec
xor
pop
aam
add
js
jmp
into
test
pop
aaa
mov
push
or
adc
cmp
imul
xchg
dec
mov
mov
mov
adc
cmp
push
daa
push
lret
lahf
js
xlat
pop
dec
aam
nop
ljmp
adc
mov
sbb
inc
xchg
pop
and
and
pop
ljmp
push
sbb
insb
pop
mov
ret
mov
mov
je
les
ficoml
inc
test
scas
or
hlt
mov
sub
pop
fs
divps
jecxz
leave
cmp
popf
sub
add
pop
lretw
push
std
fistl
adc
inc
es
or
testb
xchg
movsl
xchg
pop
loope
inc
mov
or
inc
xchg
sti
adc
fs
cmp
scas
xor
mov
ds
mov
push
mov
hlt
stos
popf
shl
pop
sbb
sbb
insb
xor
bound
pushf
and
xor
movsl
adc
xchg
jg
aam
icebp
jno
mov
xor
cmp
icebp
cmp
pop
sub
pop
test
mov
add
or
adc
lcall
xor
sbb
repnz
out
cmp
push
sub
cmp
shll
pop
lea
sarl
je
mov
icebp
inc
cs
mov
call
nop
hlt
pop
cmp
and
movsl
loop
cmc
inc
sarb
je
je
iret
imul
fnsave
insb
xchg
mov
push
hlt
pop
test
int
aad
jbe
mov
push
rcrl
icebp
rorb
xor
cmp
pop
int3
fisubrs
adcl
je
fdivl
and
fisubrs
xor
inc
leave
xchg
fsubl
fildl
mov
inc
and
add
repnz
xor
popl
pop
jno
sub
out
cmp
sub
aam
jg
and
loop
in
xchg
jmp
pcmpeqw
scas
jl
arpl
add
pop
add
fldt
lret
fnstcw
jmp
movsl
adc
hlt
je
outsl
adc
call
sub
jge
or
xor
xorb
adc
cmpsb
roll
fs
mov
fwait
rorb
cmpsl
jbe
ud0
loopne
xchg
js
pop
mov
fidivrs
neg
sbb
loop
and
mov
sti
cmp
addr16
xor
xchg
or
sbb
sbb
cmp
pop
pop
fsubs
shlb
icebp
insl
insl
xchg
into
fnsave
or
dec
mov
rorl
or
and
call
fadds
mov
jo
mov
or
enter
xchg
mov
hlt
data16
pop
daa
jbe
mov
xchg
inc
adc
cmpsb
popa
gs
fs
mov
mov
shll
aas
or
xchg
mov
scas
lret
stc
add
icebp
or
push
rol
int3
jg
mov
inc
xchg
sbb
push
inc
lcall
icebp
jnp
outsl
in
and
out
daa
cwtl
mov
inc
jns
mov
dec
xor
lock
aaa
dec
mov
mov
lods
cmp
repz
adc
sbb
in
adcl
jmp
cmp
insl
adc
pop
push
imul
mov
cmp
sbb
jb
pop
loope
or
dec
jno
shrl
pop
xchg
xchg
mov
fadd
mov
mov
xlat
lret
outsb
inc
cld
ss
cmpl
pushf
pop
jl
decl
or
or
aad
incl
scas
jg
xchg
sbb
cmp
gs
add
lea
test
xor
adc
ret
mov
shrl
fcmovbe
xchg
bound
cmpsb
mov
pop
add
adc
push
pop
imul
jo
gs
mov
sub
pop
outsl
movhps
mov
pop
dec
dec
ljmp
fcomip
fistpll
jno
adcb
mov
aas
mov
ror
cwtl
cmp
mov
loopne
dec
xlat
adc
ret
notb
call
lock
cmp
inc
or
in
ja
fidivrl
subl
cmp
jns
lret
push
imul
lods
xchg
cmp
push
out
jne
adc
push
jg
repz
push
xchg
sbb
addr16
push
adc
and
lret
stos
incl
mov
mov
ja
or
mov
inc
dec
je
lock
pop
pop
out
sbb
ss
cmp
jne
cld
rorb
repnz
call
hlt
aam
out
stos
ds
arpl
pop
jmp
jne
lea
mov
sub
pop
jo
adc
sbb
pushf
jle
or
rcll
xchg
mov
mov
and
and
mov
ret
inc
sub
stc
lahf
ss
js
daa
xchg
jnp
mov
inc
adc
and
xchg
out
mov
lret
sub
xchg
add
lock
xor
test
inc
outsb
aad
mov
jo
push
scas
jns
scas
addr16
shll
jl
repnz
cmp
fwait
cmp
stos
jmp
mov
iret
push
ss
out
jns
dec
or
dec
in
pop
mov
lea
sahf
mov
sbb
push
shr
jl
and
adc
ljmp
sbb
sub
std
aam
sbb
or
push
cmc
mov
push
adc
mov
je
jge
clc
push
stos
sbbb
pop
outsb
fisttpll
lods
js
push
sub
clc
lcall
gs
jno
loope
rcll
mov
in
and
mov
and
inc
xor
or
inc
push
les
mov
mov
mov
cmp
addr16
cmp
or
idivb
jnp
dec
push
or
mov
cmp
jp
jge
and
sbb
daa
and
mov
push
push
xchg
add
out
add
xchg
sub
rorb
or
ljmp
xor
test
ss
lods
mov
xchg
push
inc
ja
fbstp
lcall
js
es
shr
ljmp
add
dec
icebp
jle
nop
daa
add
jl
out
jle
inc
jge
adc
cmp
cli
inc
jg
out
push
cmc
inc
adc
mov
cmpsb
ret
xchg
inc
push
in
cmp
addr16
mov
imul
cmp
lods
scas
dec
inc
cmp
repnz
addr16
inc
sbb
shrb
popf
insb
inc
jbe
stc
in
inc
pop
xchg
jo
into
xor
sub
mov
mov
movsl
sbb
jne
xor
jo
es
gs
pop
mov
mov
jo
lcall
or
sub
xchg
out
ljmp
push
in
scas
push
scas
xor
gs
dec
sub
xor
push
roll
popa
aas
test
bound
push
in
lods
sbb
cmp
ret
push
icebp
dec
ret
imul
rcrb
lcall
jmp
mov
push
in
fcoms
fsub
je,pn
into
nop
test
jns
lock
sbb
adcb
dec
lahf
jne
push
dec
inc
push
push
dec
out
mov
sarl
cmp
xchg
lea
daa
aad
push
cmp
aas
nop
call
push
mov
pop
in
xchg
push
out
pop
arpl
jnp
clc
xchg
sub
test
lock
or
xor
mov
xor
rcl
fidivl
test
xor
pop
or
int3
cltd
inc
ja
xor
cmp
repz
mov
in
xor
xchg
push
out
call
jecxz
pop
jge
mov
xchg
es
nop
lock
pop
pop
les
pop
inc
xchg
jno
repz
inc
sub
fwait
and
xchg
mov
movsb
imul
mov
test
repz
add
repz
imul
int
fnstsw
popf
add
adc
loope
ret
fildl
xchg
cmp
adc
daa
xchg
sub
sbb
pop
fadds
pushf
and
inc
popl
ss
inc
push
mov
pop
mov
add
addr16
out
add
xchg
jge
sahf
and
scas
xchg
stos
push
or
aad
mov
jno
imul
loopne
jnp
jae
pop
jmp
inc
sub
sahf
filds
xor
in
sbb
out
dec
mov
sbb
outsl
call
jne
jle
mov
add
jne
push
mov
pop
nop
and
ss
hlt
mov
sbb
dec
insl
loop
inc
inc
cmpsl
mov
lods
jae
jno
mul
and
cwtl
pop
int3
lds
push
insl
cmp
rcr
out
mov
push
xchg
adc
imul
subb
dec
movsb
popa
push
or
int3
popf
data16
and
std
loop
stc
cwtl
ja
imul
adc
sub
into
dec
add
dec
enter
cmp
icebp
xorb
mov
adc
roll
insl
adc
enter
rorw
in
mov
or
mov
or
popa
pop
lods
sub
aas
adc
push
fwait
cli
je
in
dec
rorb
inc
sub
jne
mov
jns
xor
inc
movsl
and
xchg
ljmp
lds
cmp
adc
ds
push
adc
sbb
add
sbb
fmuls
rorb
adc
cld
and
cmp
and
push
rcll
jae
jno
into
mov
out
jmp
ret
movsl
shrb
aam
repz
or
mov
xchg
mov
test
lods
mov
mov
and
mov
xor
or
push
xor
dec
int3
popa
adc
dec
mov
mov
mov
fisttps
sbbb
pop
fidivrl
dec
pop
mov
mov
repnz
imul
nop
inc
sbb
icebp
inc
jae
mov
test
sbb
fsubs
xchg
cmp
adc
mov
mov
fisttps
loop
xor
cwtl
jg
mov
add
mov
loopne
ljmp
or
ret
mov
lods
adc
xor
mov
xchg
xlat
ja
or
popa
scas
mov
adcl
cmc
bound
dec
pop
push
xchg
xlat
pusha
outsb
xor
aas
arpl
xor
dec
shlb
movsl
push
push
insb
mov
cmp
jmp
out
sub
cwtl
add
test
in
sbb
push
or
div
push
inc
nop
fwait
push
push
jmp
dec
push
lret
push
inc
adc
mov
ss
stos
scas
push
xchg
dec
add
stos
std
aaa
xchg
sub
inc
xor
inc
aad
in
mov
cmp
arpl
movsl
call
dec
pop
jo
sub
data16
in
aad
dec
fsubrl
mov
lret
lock
sub
lds
adc
rcrb
subb
ret
cli
mov
adc
cmp
int
pop
loopne
jmp
mov
lahf
ds
mov
aam
pushf
push
mov
stc
movsb
xchg
xor
sti
insb
insl
adc
sti
cmp
enter
mov
inc
shr
jo
sti
xlat
mov
out
repnz
mov
xchg
nop
fsubrl
lahf
fbstp
aas
cmp
lock
sub
and
push
adc
outsl
push
jmp
shl
dec
dec
imulb
pop
movsb
and
sub
jb
cmpsl
pushf
push
add
mov
adc
data16
into
mov
aas
faddl
loope
lea
dec
pusha
adcl
sti
dec
int
insl
inc
sub
pop
out
sub
pusha
add
mov
loope
cmpb
out
out
daa
cmpsb
fiaddl
fdivl
mov
jg
das
addr16
sub
push
add
sub
nop
addr16
test
cwtl
push
lahf
popf
mov
add
out
repnz
inc
es
jbe
fsubl
jo
divb
decb
or
mov
adc
ds
insl
insl
mov
lret
inc
scas
adc
out
mov
mov
icebp
repnz
ljmp
das
lret
fcomip
sub
sub
int
jns
in
sbb
jae
and
pop
mov
cltd
add
cmp
or
xor
or
and
repnz
outsb
adc
iret
xchg
ljmp
push
cli
push
aaa
or
fstl
cli
lds
ljmp
aaa
push
jnp
pushf
dec
xor
jo
sbb
stos
jl
stos
push
arpl
stc
and
mov
les
lret
pusha
scas
jno
xor
mov
sbb
out
pop
push
mov
and
sarl
pop
pop
mov
fidivs
jp
lods
lods
into
aad
push
add
imul
pop
inc
mov
and
dec
adc
or
xchg
jno
add
mov
rcrb
test
jo
sarl
xor
inc
or
mov
xor
xchg
cmpsl
xchg
insl
mov
xor
sbb
sub
sub
push
xor
xor
mov
adc
xor
xchg
or
outsw
popa
subb
faddl
dec
lret
stc
add
cmp
xchg
adc
jmp
pop
jnp
inc
gs
cmpsl
daa
mov
loop
imul
sbb
lcall
popf
and
cmpsb
fwait
xchg
xchg
ljmp
int
xchg
adc
sub
out
and
out
repnz
push
andl
and
sahf
inc
dec
xor
xor
into
lds
pushf
arpl
cmp
xor
test
insl
dec
popf
popf
fs
and
test
ss
inc
test
inc
mov
and
or
icebp
add
push
lret
stos
sub
int
mov
mov
scas
sbb
adc
pop
fistpll
pushf
movsb
inc
push
sub
rcll
inc
mov
push
scas
push
out
mov
adc
push
xlat
xchg
mov
sub
pop
nop
je
movsl
call
gs
fdivrs
ds
dec
fnstcw
dec
mov
loop
data16
movl
pop
je
jno
cld
sbb
enter
jp
adc
xlat
ja
test
pop
xchg
and
jns
loop
addb
inc
jbe
cmc
int3
daa
inc
pop
sahf
inc
fadd
in
dec
pop
fidivs
sti
dec
aad
leave
push
jmp
pop
ret
loope
pop
stos
mov
cmp
inc
sub
jp
cmp
mov
icebp
xlat
sbb
aaa
ret
mov
adc
repz
and
pop
in
xchg
sbb
push
mov
push
mov
mov
and
fprem
xchg
pushf
mov
adc
xchg
push
sar
xchg
sub
mov
inc
sub
push
and
jl
adc
push
enter
leave
xchg
pop
fwait
add
cmp
dec
or
or
mov
cli
xchg
ret
cld
pop
lods
xchg
mov
cld
inc
mov
xor
shll
sbb
push
pop
clc
cld
inc
orl
fcoml
aam
mov
push
cmpsl
jns
outsl
movsl
mov
xchg
and
xor
lcall
cmp
cmc
add
or
jnp
popa
test
fstp
shl
fiaddl
fistl
out
shrl
rcrb
outsl
mov
jne
imul
and
jae
add
sub
pop
pop
pop
or
pop
out
push
adc
mov
insb
xchg
pop
sub
mov
cltd
and
addr16
rcrb
aas
sub
popa
loope
lods
mov
popf
mov
mov
mov
xlat
ljmp
ret
xor
test
repz
push
lods
fwait
sub
jns
enter
test
test
sti
idivb
sub
push
int
pop
push
adc
ss
and
mov
cmp
and
mov
in
mov
lods
adc
rcr
cmp
jb
dec
dec
xor
lods
xlat
pop
sarb
lods
jae
hlt
test
movsl
stos
outsl
paddusb
mov
xchg
or
push
xchg
mov
jb
or
push
jae
in
and
test
sahf
arpl
xchg
mov
pop
das
sub
jmp
sub
jl
bound
cmp
and
mov
mov
jle
pop
data16
mov
addb
mov
repnz
fisubl
adc
ljmp
cmp
sahf
movsl
cmp
mov
xchg
mov
sti
pop
inc
cmp
hlt
and
jge
sbbl
repnz
mov
lea
fs
xor
push
add
fwait
dec
bound
and
fimuls
jle
sub
cmp
arpl
cmpsl
into
outsb
fcomp
aad
sub
fsubp
adc
mov
or
mov
fsubl
movsl
fistps
and
jno
ss
push
mov
adc
mov
push
gs
cmc
pop
sbb
add
adc
and
pop
cmpsb
fcmovnu
pop
imul
repz
outsl
es
in
lcall
nop
push
cmpsl
mov
push
or
and
insl
inc
leave
jne
clc
cmc
lea
mov
mov
pop
cmp
sub
jle
arpl
or
jmp
fcomp
mov
inc
mov
test
pop
inc
xor
ret
dec
sub
out
dec
jno
pop
xor
mov
shll
push
xor
xor
test
sahf
out
sub
loop
int
scas
outsb
lock
insb
pop
clc
lcall
addr16
mov
mov
jo
hlt
cs
pop
cmp
cmp
pop
pop
or
mov
push
mov
mov
pop
adc
outsl
adc
lea
and
jle
shlb
mov
jle
ja
jae
inc
aad
iret
or
test
inc
andb
das
nop
sbb
xorl
fldt
das
and
imul
ljmp
mov
xchg
test
xor
in
jp
jmp
mov
cld
mov
into
jp
cmp
xchg
sarb
sbb
in
mov
add
sub
sti
into
pop
dec
mov
lea
cmp
rorb
roll
stc
ret
xchg
cmpb
rorl
mov
xor
inc
std
dec
fs
shlb
dec
adc
lcall
bound
daa
fwait
cmp
or
lods
sub
and
xchg
js
or
xor
xor
fdivs
dec
ret
es
mov
xchg
mov
jle
imul
imul
add
nop
adc
out
out
or
bound
test
mov
pop
xchg
mov
jmp
jae
and
jmp
fidivl
and
out
mov
push
popf
dec
stos
andb
push
xchg
pop
xor
inc
divl
in
std
xchg
cmpsl
mov
push
stos
fmuls
dec
push
stc
mov
jo
ljmp
xchg
xor
jno
or
movsl
sti
xchg
sbb
and
mov
pop
in
add
jle
inc
lahf
das
pop
push
and
imul
pop
jle
sbb
les
jge
mov
add
icebp
xchg
xlat
out
and
inc
shr
add
rorb
cmc
nop
xor
mov
lcall
adc
mov
sbb
lret
cmpsl
push
adc
pushf
ja
out
add
jnp
and
pop
or
jnp
adc
shrl
lds
out
jo
popa
in
jecxz
sub
adc
cld
push
subb
push
push
cwtl
lea
push
je
les
out
dec
stc
or
jge
or
cmp
xchg
jg
repnz
es
les
add
push
fnstcw
mov
xor
mov
imul
jg
xchg
sbbb
mov
je
adc
out
enter
mov
inc
inc
inc
outsl
inc
push
loopne
mov
outsb
or
cmc
cmpsl
ret
icebp
mov
push
sub
cmc
or
daa
fildl
add
inc
aas
cmp
clc
xchg
in
test
shr
dec
push
rcll
std
js
cltd
xchg
xor
loope
clc
in
add
dec
es
clc
cmp
fwait
clc
mov
test
inc
addr16
xchg
lret
ret
and
push
ds
in
dec
mov
mov
nop
xbegin
xor
ljmp
add
dec
cmpsb
and
stos
cmp
mov
cmp
aad
push
inc
cmp
or
stos
out
not
enter
jl
les
jl
xlat
jge
lcall
fidivrs
lcall
scas
jmp
sub
mov
push
pop
js
xor
stc
hlt
pop
push
rol
mov
cs
js
push
add
dec
sub
mov
stc
lock
xor
or
pop
jl
in
lods
dec
mov
hlt
dec
in
lods
sub
adc
mov
sbb
int3
repnz
fidivl
cmp
mov
repz
cmp
imul
idivl
and
and
dec
enter
xchg
sbb
dec
cmp
push
xchg
inc
adc
lock
pop
pop
es
push
and
jmp
popa
push
dec
fwait
push
mov
mov
inc
cmp
mov
ret
test
mov
fisubrs
in
xchg
pop
cmp
cmpsb
lahf
xor
andb
outsl
in
push
jge
aas
adc
adc
sbb
dec
insl
and
mov
lods
dec
loopne
pop
sti
enter
std
or
adc
mov
sub
sub
faddl
cmp
xchg
push
adc
cmc
and
fldl
call
mov
inc
lds
xchg
mov
fisubrl
test
xor
add
int
pop
cwtl
out
mov
xchg
nop
hlt
sbb
cltd
mov
stos
pop
test
fwait
xor
lds
lret
sub
adcl
insb
inc
test
push
dec
test
pop
mov
jp
mov
lret
outsl
cmp
out
lret
push
call
add
fwait
jne
push
das
and
xchg
popa
lret
sbb
sbb
es
jnp
imul
dec
bound
adc
push
fdivs
ja
push
mov
inc
pusha
pop
sub
inc
push
mov
stos
sub
sub
pop
popa
mov
hlt
ja
sbb
sahf
loopne
cmp
add
mov
aaa
jg
lea
or
jo
jbe
fistps
mov
lock
xor
sbb
xor
in
sahf
scas
inc
xor
adc
repz
pop
cs
inc
int
imul
fimull
mov
push
sbb
jg
daa
cwtl
inc
es
inc
lahf
sub
xor
sub
dec
push
dec
xor
test
add
int
mov
fwait
out
idiv
xor
fldt
out
es
lcall
mov
mov
popa
xchg
stos
out
sub
mov
pop
cmp
xchg
inc
fsub
inc
jle
into
loopne
mov
sub
int3
push
xor
es
mov
sbb
sarl
push
and
cmp
sahf
movsb
cmp
cmp
leave
notb
pop
shlb
push
or
push
jmp
movb
cmpsl
bound
lods
adc
mov
ret
in
out
insl
fiadds
jae
ret
inc
xchg
lahf
fsubr
and
mov
mov
in
stos
dec
mov
rolb
and
pop
test
sub
scas
push
dec
flds
mov
sbb
jp
fs
pop
stc
mov
cmpsl
jo
aaa
jmp
add
ds
aas
mov
lret
add
inc
sub
xlat
inc
cmp
pop
movlps
mov
pop
sbb
cli
inc
hlt
cmp
cmpsl
dec
mov
jns
xor
movsl
sti
shr
jp
imul
sbbb
aad
mov
xor
cmp
int
nop
ret
lock
iret
mov
add
imul
stos
fistl
xchg
dec
insl
cmp
jle
mov
test
pop
jae
test
xchg
lock
cmp
insl
xor
mov
outsl
insl
rolb
xor
data16
stos
scas
push
mov
test
mov
paddq
mov
adc
adc
adc
shlb
push
in
lock
cmpsl
call
lea
pop
inc
mov
xor
jb
ret
daa
jle
frstor
or
clc
test
jp
sbbl
cmpsl
sarb
xchg
push
pop
xlat
inc
das
add
scas
stos
xor
test
lret
test
rorl
imul
xchg
lahf
and
pop
repnz
push
sbb
arpl
dec
inc
jno
mov
test
xor
sbb
dec
push
pop
pop
and
fisubl
loopne
je
gs
jne
jecxz
outsb
pop
xchg
cmpb
jmp
out
jge
sbb
lds
iret
in
or
cld
push
andb
jp
sub
lods
and
dec
jae
lock
loope
es
mov
inc
jg
or
add
inc
iret
leave
xor
jbe
repnz
add
fidivl
mov
nop
dec
sahf
scas
xlat
fisttpll
sub
push
or
fidivrl
jle
ds
mov
inc
cltd
pop
andl
daa
in
jmp
cmp
jnp
mov
bound
lock
push
andl
dec
cmp
ficompl
or
imul
std
pop
shll
dec
pop
adc
jecxz
sub
push
incb
or
fnstenvs
lds
push
imul
fcompl
adc
cld
shll
repz
push
mov
movsb
hlt
inc
xor
loope
jne
in
mov
in
mov
insl
ss
mov
ret
movsbl
xor
mov
pop
mov
dec
cmp
adc
jge
mov
mov
pop
jno
cmp
pop
call
je
lods
xchg
std
pop
in
add
pushf
nop
jo
faddp
sbb
jg
push
cmp
dec
std
pop
push
mov
ret
xlat
push
inc
adc
or
lret
daa
out
and
sbb
divl
mov
jbe
mov
repnz
movl
stos
push
inc
xchg
and
dec
cmc
mov
ss
fisubrs
pop
pop
notb
fdivrp
lret
jnp
pushf
lcall
mov
xor
ret
jge
les
xchg
es
aam
push
adc
and
cli
pop
dec
out
cmp
pop
fucomi
gs
icebp
xchg
sbb
loop
in
in
push
lods
out
je
and
repnz
scas
inc
mov
rcrb
roll
dec
or
jbe
mov
xchg
dec
outsl
incb
sub
sub
outsl
insl
arpl
pop
jp
xor
cmp
js
pop
mov
bound
dec
rorl
ljmp
push
jns
fisubrs
or
dec
sbb
imul
sub
pop
sbb
addr16
int3
daa
test
xor
mov
ljmp
pop
push
ljmp
daa
pushf
ret
jmp
in
xchg
add
push
repnz
sahf
jb
fsubl
mov
nop
mov
inc
in
addr16
jnp
or
call
scas
add
les
jne
fstl
scas
mov
sub
push
ret
jmp
aaa
sbb
xor
add
lock
test
add
pop
cwtl
add
sahf
mov
adcl
clc
adc
inc
sbb
push
fistpll
icebp
hlt
stos
push
or
aad
inc
insl
dec
mov
arpl
sub
xlat
ljmp
lods
or
adc
stos
mov
lods
jo
movsl
out
push
out
mov
or
dec
pop
jae
and
push
call
cmp
or
scas
sti
outsl
or
hlt
adc
lret
push
or
insl
xchg
aaa
inc
add
test
pop
or
dec
icebp
mov
stc
dec
pop
mov
sub
and
gs
push
jecxz
loope
sbb
jg
lods
dec
jmp
push
inc
jae
ret
push
xchg
xchg
sbb
or
test
mov
push
arpl
popf
jecxz
sbb
push
xchg
cltd
sbb
data16
insb
out
push
in
popa
push
divb
xor
mov
fdivrs
sbb
subl
repnz
push
shll
pop
jno
mov
dec
xor
and
inc
mov
sbb
or
add
add
mov
hlt
xchg
enter
movsl
xor
adc
jg
je
pop
jbe
jns
xchg
push
sbb
cmp
pusha
imul
fistl
xor
sbb
xor
dec
mov
es
faddp
adcb
rcll
addr16
adc
pop
jno
sub
mov
shlb
ss
jae
ret
leave
push
les
jmp
jle
pop
into
jb
xchg
repz
and
mov
push
and
sbb
mov
enter
call
repnz
mov
out
ret
jg
hlt
addr16
sub
lret
aam
jne
pop
pop
lret
mov
sub
bound
aad
jb
inc
jae
cmp
icebp
mov
fadds
xchg
jno
dec
insb
inc
adc
inc
jb
xchg
cli
scas
lds
pushf
sub
pop
popf
fisubrl
or
cmp
mov
jmp
int
movsl
int3
call
mov
ja
xchg
push
sti
movsb
out
lret
dec
mov
sbb
xor
shll
jne
push
pushf
out
hlt
pop
pop
movsl
push
mov
decl
xlat
inc
sub
aaa
test
adc
sar
int
fdivrp
in
fcomip
leave
test
int
xor
mov
cmp
daa
sbb
push
js
icebp
test
sbb
pop
pop
lea
sbb
fisubrs
add
stc
xchg
pop
popa
mov
push
push
mov
outsb
pop
or
dec
xchg
push
xabort
mov
or
aas
pop
or
cwtl
cmpsl
scas
or
daa
mov
iret
mov
pop
sbb
in
aam
das
mov
es
dec
rorb
fsubl
clc
adc
mov
or
dec
xchg
call
mull
gs
jns
ja
imul
in
inc
sbbl
sbb
aaa
mov
aad
addb
in
jmp
je
rorb
jl
out
pop
int
push
or
push
jns
fiadds
syscall
mov
lods
add
xor
loop
adc
enter
aam
lock
or
jmp
rcrb
lcall
inc
aaa
lret
cld
push
ljmp
mov
mov
mov
dec
sbb
dec
daa
cmp
js
dec
sub
lahf
cmpsb
jmp
lods
push
enter
mov
mov
mov
fbstp
bound
int3
cmp
mov
jbe
arpl
mov
cmpsl
dec
or
cmp
mov
rorb
aas
inc
or
aam
je
inc
pop
rclb
pop
addl
push
repz
adc
mov
test
std
push
sub
rorl
cmp
dec
jo
and
das
mov
mov
repnz
xor
nopl
cmp
dec
jo
jp
lds
out
popa
jecxz
and
test
sbb
cmpl
in
cmp
daa
push
movsb
pusha
xchg
stc
in
sbb
repz
fisttps
je
xchg
xchg
sti
shrb
pop
fldt
pop
pop
jb
vhsubpd
push
mov
fcom
in
dec
sahf
push
scas
push
ror
movsl
jg
mov
jp
xchg
movsb
mov
xor
out
cmp
or
fwait
mov
and
xor
pop
rcrl
jbe
sbb
fcmovnbe
sbb
test
mov
dec
mov
rcr
jp
fistl
pop
and
iret
pop
imul
mov
lea
cmpsb
and
cltd
lods
sub
xchg
popa
into
vpsubq
mov
cld
sbb
leave
pop
ret
lods
sub
mov
out
xchg
loopne
mov
inc
int3
sbb
js
repz
ja
mov
sbb
ret
mov
bound
lds
popa
mov
ss
pop
aaa
sbb
and
aas
aad
and
repz
hlt
scas
inc
and
fiaddl
dec
int3
cwtl
call
leave
ss
addr16
mov
aam
outsl
push
push
insl
das
sahf
fwait
sbb
add
loop
jl
imul
cmpsb
sbb
cltd
loopne
xchg
sub
pusha
imul
std
popf
or
add
pop
inc
clc
jg
fldenv
sub
cltd
pop
cld
inc
jb
arpl
lods
mov
push
fucomp
iret
ljmp
div
fcoml
lds
sub
fcomps
movsl
sbb
negb
loope
xchg
fwait
xchg
push
sbb
and
mov
scas
test
loopne
sub
scas
add
fisttpll
daa
std
enter
add
loop
in
mov
xchg
add
test
or
jg
dec
cwtl
in
fisubrs
mov
mov
cmp
cmc
insb
cmp
push
mov
jle
inc
clc
out
shlb
jmp
xchg
shll
sbb
push
jne
xchg
out
out
cld
ljmp
loop
xor
jno
inc
jl
jmp
cld
mov
in
roll
pop
pop
inc
arpl
pop
repz
mov
push
addr16
fcoms
xchg
vpshad
arpl
imull
inc
loope
imul
push
test
jnp
pop
dec
sub
test
inc
into
icebp
lret
push
arpl
outsl
subl
mul
inc
push
and
ret
test
cmp
sub
mov
mov
cwtl
into
or
out
add
adc
cld
pop
xor
inc
cmp
adc
mov
cmp
adc
movsb
inc
pop
xchg
mov
les
cmp
sub
stc
and
cmp
fdivrp
pushf
fimuls
ds
outsl
push
cltd
lea
sub
lahf
inc
hlt
adc
icebp
and
addb
sub
ljmp
adc
loope
lods
mov
psrad
jno
retw
movb
sbb
ljmp
cmp
pop
ss
shlb
mov
into
mov
negb
mov
add
aad
int3
and
xlat
cmp
mov
pop
jnp
lahf
jg
and
push
lods
xchg
int3
push
das
lret
xchg
lods
adc
sahf
dec
fldenv
inc
ja
mov
daa
lahf
cmp
jge
sub
push
mov
inc
jl
aaa
in
sbb
repnz
push
imul
mov
inc
pop
xor
or
and
push
mov
jb
bound
sbb
add
dec
mov
adc
add
rolb
out
jne
cmp
sbb
cltd
mov
dec
sub
xor
mov
call
out
mov
hlt
int3
xchg
or
rclb
push
adcb
push
aad
jge
repnz
dec
xchg
sbb
das
scas
xchg
cltd
subl
lods
sub
das
rolb
arpl
fcomps
jg
lea
jmp
mov
or
std
pop
mov
jbe
enter
adc
dec
cmp
jecxz
aam
add
inc
push
ss
xor
push
pushf
mov
push
or
dec
dec
cmp
into
jp
pop
add
movsb
add
mov
add
je
push
mov
mov
subl
sbb
sub
adc
test
push
jbe
loopne
mov
jnp
jecxz
shll
add
arpl
andb
dec
pop
pusha
mov
test
es
aas
aaa
inc
mov
aad
mov
jo
or
or
test
add
test
jns
or
jne
mov
jmp
add
and
jecxz
mov
dec
test
mov
call
ja
jecxz
xchg
shrl
push
pop
cs
mov
xor
cwtl
jae
lea
pop
loopne
ret
test
pop
cmpsl
mov
sbb
movb
jo
sub
add
xor
xchg
sbb
data16
xchg
arpl
pop
pop
std
jb
cli
xchg
scas
adc
fiadds
sbb
shll
add
xor
insb
dec
cmpsl
and
push
lods
jns
pusha
lret
mov
fisubl
mov
imulb
into
jmp
aaa
lea
pop
xchg
inc
leave
dec
jae
mov
rorl
lea
sbb
or
or
test
mov
dec
dec
popa
or
roll
pushf
mov
xor
in
mov
jns
push
pop
ss
mov
jmp
bound
mov
enter
dec
sub
icebp
inc
sub
mov
pop
aas
xor
bound
pop
mov
repz
cltd
xchg
sub
fists
lret
or
stos
xchg
outsl
inc
sahf
outsb
sub
jo
scas
push
dec
cmp
or
add
mov
outsb
jg
test
jl
and
and
daa
add
push
xor
test
xchg
stos
xlat
mov
jno
or
int
sbb
lods
call
add
iret
sbb
ret
xchg
xchg
mov
mov
sti
mov
jno
stos
adc
loopne
xor
loope
mov
jp
divl
ds
fldenv
jne
fs
xchg
into
xchg
imull
pop
pop
xor
or
aas
enter
movsl
inc
int
bound
xchg
mov
mov
adc
data16
cwtl
push
pushf
movsl
xor
jg
ficoml
cs
mov
xchg
aaa
adc
or
repz
in
stc
fwait
idivb
divl
jo
or
xor
adc
and
cmp
sbb
out
int3
es
jo
int
outsl
or
or
adc
mov
or
inc
mov
das
imul
cmp
rcr
repz
adc
xor
dec
inc
mov
mov
lods
push
popf
stos
sti
add
or
outsb
jo
out
lahf
and
lods
repz
mov
push
fbstp
lods
mov
ljmp
mov
mov
addb
aas
add
add
out
inc
fwait
inc
push
call
mov
cltd
xchg
cwtl
enter
repnz
cmp
xchg
imul
sbb
mov
mov
fbld
xchg
int
xchg
movsb
add
mov
ret
fs
add
pusha
stos
dec
jecxz
ja
xor
das
cwtl
fildl
and
test
inc
fstpl
mov
xchg
jne
nop
inc
test
mov
xchg
cmpsb
mov
and
stos
push
stc
pop
cli
jmp
out
mov
cmc
mov
sub
mov
push
cltd
es
cmp
jecxz
int
jae
lock
mov
cmp
ja
jns
imul
push
jbe
xor
addr16
and
loopne
inc
jge
add
negl
cmp
mov
cltd
and
aas
jo
je
stos
xchg
pop
inc
aad
stc
cmp
mov
mov
sub
jae
inc
out
dec
fmuls
mov
clc
popf
in
dec
nop
bound
jne
sub
int3
inc
or
xchg
inc
xchg
mov
or
rorb
shr
adc
cld
lock
dec
mov
ljmp
cmpsl
mov
fs
mov
lret
ljmp
xor
leave
and
insb
loopne
rorl
lock
jge
dec
sti
adc
sub
pop
xchg
shr
jno
incl
jo
nop
sbb
shll
iret
ljmp
mov
mov
sub
add
data16
icebp
test
lea
fwait
cwtl
fidivrl
inc
imul
pop
call
or
je
dec
lea
sar
push
in
pop
dec
pop
mov
cmp
mov
insl
mov
movb
jns
and
jo
or
inc
mov
aam
addr16
lret
loope
mov
dec
addb
sub
rorl
pushf
cmpsl
outsl
icebp
push
inc
sub
and
cmp
cld
cmpsb
add
push
mov
daa
mov
cmpsl
adc
js
aam
jnp
xor
and
jns
inc
mov
in
push
push
cmp
fld
or
ret
jmp
and
mov
pop
je,pt
mov
sub
popa
into
data16
ffreep
das
hlt
mov
and
sub
mov
idivb
mov
in
dec
jo
fists
xor
fbstp
sbb
mov
and
std
hlt
and
cmp
adc
push
adc
jg
xchg
jae
xchg
or
sub
icebp
or
jnp
out
jb
cmp
add
dec
sub
out
call
push
imul
sti
and
or
lea
lea
orl
inc
gs
inc
mov
lret
push
cmp
mov
jle
dec
sub
xchg
rcl
dec
sahf
jle
enter
cmp
pop
add
cmp
test
mov
int3
xchg
outsb
mov
adc
leave
adc
jmp
pusha
outsl
sub
cltd
push
leave
mov
mov
in
cmp
push
sub
stos
pop
jl
add
mov
pop
std
aas
or
adc
movsb
xchg
lcall
pop
test
mov
cld
insb
jg
xchg
jle
dec
fiaddl
sub
pop
inc
cmp
rcl
or
out
or
lahf
sub
push
xchg
cs
inc
mov
cwtl
in
movaps
adc
and
imul
cmp
out
arpl
fdivrl
sbb
sbb
add
imul
lss
xlat
push
out
jb
xchg
jge
rcrl
out
repz
adc
lahf
mov
jle
out
test
mov
idivl
je
dec
movsl
bound
jb
dec
jo
imul
aas
jb
push
mov
dec
aam
pushf
iret
dec
adc
addr16
cmp
je
push
add
aam
loopne
loop
outsl
add
or
push
xlat
inc
push
add
cltd
mov
adc
jmp
loop
insb
push
jmp
mov
xchg
pushf
cmp
adc
sub
out
hlt
shll
icebp
and
lcall
insl
pop
sub
mov
sub
pop
push
dec
mov
jne
scas
xchg
cwtl
jg
mov
scas
mov
ret
add
or
jecxz
and
sbb
xchg
pop
xchg
pop
mov
icebp
mov
mov
lods
cmpsl
xchg
aad
es
fildl
pop
lret
enter
js
mov
xor
in
xor
xchg
pop
push
scas
lret
and
ljmp
or
xor
jo
out
dec
cmp
std
mov
add
pop
jnp
pop
sub
fidivrs
imul
das
sbb
out
or
jle
shll
sub
in
ret
dec
lea
out
filds
faddl
mov
adc
jmp
mov
mov
jge
out
sub
mov
cltd
fisttpll
pusha
mov
push
jg
dec
jmp
xor
sbb
sbb
mov
push
lods
jno
movsb
adc
movsl
cmp
scas
xchg
popf
push
adc
pop
xchg
dec
cmp
lods
xorb
imul
pop
jge
lods
adc
incb
adc
or
icebp
adc
push
sahf
push
mov
mov
xchg
sbb
mov
mov
pushf
adc
push
test
inc
push
sbb
sti
xor
cmc
dec
mov
or
inc
movsb
into
sahf
mov
mov
je
lcall
enter
jge
mov
cmpsl
xorb
insb
jne
xchg
or
or
mov
xorl
lret
mov
inc
dec
cmp
pushl
lock
pop
jg
xor
icebp
nop
xor
push
lcall
fmuls
jns
and
dec
mov
lods
scas
insl
dec
int
add
repz
mov
pushl
stos
mov
cmp
addr16
in
jge
cmp
cld
imul
fdecstp
cltd
sarl
popf
pop
push
xor
lea
out
or
jmp
aaa
lds
andl
jecxz
mov
movsl
xchg
lret
gs
jp
out
dec
insl
les
push
aaa
pushf
rcll
ja
fbld
add
push
incl
xchg
sahf
int
mov
outsl
add
sbb
aas
mov
in
inc
jnp
leave
push
dec
pushf
xor
enter
sbb
aaa
js
pusha
dec
push
pop
xorb
fcoml
add
popf
push
mov
xor
test
shll
outsb
cmc
pop
sub
movsb
lea
add
xchg
sub
ret
shlb
jno
inc
ret
mov
push
and
xor
dec
xchg
jp
sahf
aad
xchg
push
les
dec
mov
dec
pop
mov
inc
pushf
fstpt
test
dec
pop
out
mov
lahf
sbb
lds
pop
mov
fnsave
in
cmp
ficoml
jbe
mov
icebp
pop
lods
sbbl
mov
mov
xor
imul
scas
push
sbb
js
and
xlat
inc
add
pushf
pushf
jo
mov
test
jo
or
pushf
rorb
xchg
xchg
in
push
jle,pn
mov
jae,pn
int3
movb
je
outsl
or
mov
mov
popf
xor
cs
jae
cmpsl
dec
and
and
outsl
out
jae
hlt
inc
das
nop
sbb
sarb
xchg
aas
shr
sti
stc
mov
int
sti
sarl
imul
inc
xchg
stos
xchg
scas
aas
pop
inc
in
movsl
jecxz
stc
cwtl
sarb
push
adc
bnd
outsb
pop
sbb
scas
add
xchg
inc
mov
xchg
jge
inc
cltd
sbb
inc
cmp
xorl
fwait
mov
pop
fiadds
fadd
dec
adc
push
imul
xchg
adc
pop
lds
jne
ficompl
loope
and
add
xchg
xchg
push
adc
lcall
push
or
push
dec
mov
xchg
or
aam
add
loope
rcrb
cmp
pop
enter
sbb
ret
or
push
push
out
jo
mov
das
fistpl
stc
push
mov
cmp
rorb
adcl
mov
and
and
and
add
dec
cmp
movsl
js
or
out
xchg
popf
fisubrl
fcmovbe
out
test
fsubrl
or
loop
jp
dec
jge
mov
push
and
sbb
dec
in
or
aas
mov
scas
pop
test
ffree
cmp
rorb
out
add
out
pushf
and
js
sbb
rcrl
xchg
cmp
divl
adcl
mov
aaa
push
pop
cld
adc
outsb
dec
or
jne
inc
mov
pop
xor
sub
dec
jmp
scas
aaa
inc
jne
fdiv
or
push
xor
inc
push
pop
mov
jnp
sbb
sbb
push
in
cmpsl
aaa
cwtl
mov
fimull
dec
push
test
inc
xchg
into
shlb
inc
inc
lea
iret
cmp
addb
dec
mov
cmp
sahf
daa
lock
and
pushf
out
cmpsl
xor
pop
xor
mov
xor
mov
scas
mov
cmp
mov
iret
jp
shrl
ljmp
pop
mov
cmp
mov
in
or
mov
jno
daa
xchg
scas
dec
mov
xchg
and
rorb
loopne
repz
int3
inc
jmp
rolb
fdivrs
lds
mov
daa
scas
adc
fcmovne
adc
mov
and
cwtl
fadds
mov
inc
xor
into
dec
xchg
cmpsb
rcll
inc
aaa
pop
in
sub
dec
movb
inc
loop
movsb
jmp
jp
outsl
push
xor
addr16
add
mov
sbb
mov
stos
leave
iret
sub
add
jge
mov
push
outsb
sbb
jb
mov
shrl
mov
xchg
jnp
xor
negb
jmp
ret
inc
xchg
scas
mov
outsb
push
mov
jno
push
xchg
addr16
arpl
jnp
mov
dec
inc
cmp
cmpsb
mov
jne
dec
daa
mov
cmp
rolb
sub
test
jp
in
jp
jbe
mov
lret
fistl
mov
mov
mov
fnstenv
or
fsubr
ja
scas
sti
jle
push
lret
mov
push
and
clc
mov
clc
pop
pop
jmp
jns
push
sub
adc
and
lock
adc
and
das
jbe
aas
ficoml
in
les
movsl
out
xchg
lock
or
jns
and
loope
insl
sbb
aad
pop
cltd
shll
fwait
imul
dec
mov
push
out
fstl
test
or
icebp
jns
bound
inc
iret
inc
nop
mov
pop
pop
aam
lea
enter
xor
inc
xor
jecxz
les
mov
or
les
ret
adc
push
push
cmp
rclb
sub
xchg
lahf
push
cmpsb
push
mov
jmp
cmp
mov
add
jb
stc
sub
jbe
adc
pop
or
es
data16
rorl
cmp
pop
aad
lock
sbb
ret
dec
out
movsl
ds
dec
frstor
fnstcw
addr16
pop
sti
xchg
cmp
mov
ret
add
sub
sub
mov
xchg
aas
push
ljmp
je
sbb
imull
cmp
fidivs
sub
and
adc
xor
xchg
movsl
dec
insb
int3
and
lahf
xchg
inc
mov
mov
shl
loopne
push
push
pop
mov
lea
add
mov
out
cmpb
int
mov
xor
jmp
xor
lods
xchg
shrb
sbb
lds
iret
cmp
in
ret
pop
lret
or
hlt
jmp
loopne
mov
inc
push
dec
push
pop
jmp
jle
dec
out
jno
xor
fs
iret
cs
add
int3
ret
loopne
fsub
mov
aam
pop
dec
push
xlat
shrl
testl
roll
or
pop
mov
push
push
sbb
sub
adc
xor
and
insb
xchg
imul
sbbl
or
ret
pusha
mov
enter
dec
idivl
adc
std
mov
jae
or
loop
and
imul
xlat
push
jnp
inc
push
xor
inc
fisubs
and
cld
lret
arpl
jne
adc
jg,pn
in
cmp
mov
xor
sub
push
outsb
sbb
cmp
inc
pop
xorb
lods
gs
in
aam
repz
inc
mov
test
adc
addr16
mov
mov
pop
mov
pop
stos
dec
mov
jg
sbb
and
pop
mov
test
push
fmul
jnp
ret
dec
xchg
xor
push
rcll
mov
mov
enter
mov
cmp
mov
lret
aam
sbbl
fistpl
shll
cwtl
or
xor
and
push
mov
cli
sbb
js
or
push
repnz
add
inc
int3
add
and
in
stos
shll
ljmp
pop
pop
cmpl
mov
icebp
mov
jb
dec
dec
sbbb
xchg
call
fisttpl
lods
mov
mov
les
jmp
ret
adc
cmp
or
outsb
jg
inc
pop
xchg
ss
fidivrl
mov
sbb
sub
insl
mov
call
test
mov
and
aam
pop
cltd
lods
sbb
and
inc
jo
xor
fcoml
loopne
cmp
cmpb
test
popf
adc
mov
outsb
ret
xor
loopne
test
aas
out
out
aad
pop
pop
sbb
cmp
jno
or
push
scas
push
sub
je
punpckhdq
pop
pop
fsubrs
push
stos
and
out
pushf
pop
pop
jne
cld
jge
sub
jecxz
add
push
pop
pop
mov
dec
xchg
shll
mov
xor
inc
rol
add
inc
pop
test
dec
pop
push
and
pop
ds
mov
bound
sub
in
pop
xor
test
inc
sub
and
jne
inc
popa
cmpsl
outsl
ja
and
mov
ret
xor
lea
cmp
push
lret
movsb
negb
adc
pop
add
sti
leave
xchg
mov
dec
xchg
lcall
test
inc
or
addr16
push
dec
int3
push
dec
pop
bound
adc
add
pushf
jbe,pn
cmc
mov
and
mov
fwait
fwait
int3
aad
and
push
sub
add
jg
cmc
fucomi
test
ret
jnp
test
cli
pop
inc
push
leave
test
mov
xchg
lods
mov
imul
jge
pushf
sahf
cmpsl
lods
cs
xchg
push
ja
or
int
sub
hlt
adc
pop
test
aas
mov
test
cmpsl
mov
pop
and
sbb
sbb
jae
add
movsl
jl
mov
dec
pusha
fisubl
test
sbb
in
ret
fsub
and
mov
cli
sub
xchg
xor
ret
xchg
loop
test
push
lcall
gs
jmp
mov
pop
xchg
push
stos
mov
jg
outsb
movsl
xor
mov
jo
xchg
adc
ds
mov
sub
xor
pop
sbb
iret
sub
clc
xchg
out
push
push
stos
adc
ss
stos
jne
roll
sub
xchg
std
outsb
inc
inc
mov
push
pop
jp
push
out
adc
jmp
mov
fs
aas
push
push
fst
leave
pop
js
xlat
cmp
jg
lahf
mov
mov
dec
sub
popa
push
insl
les
add
jnp
cld
jle
mov
loopne
sbb
inc
inc
scas
in
jns
xchg
int
les
mov
sbb
lds
mov
adc
bound
push
out
pop
or
stc
jge
sti
rorb
enter
data16
add
mov
fs
dec
pop
iret
cmpsl
sub
or
sbb
xchg
xor
pop
ja
push
in
hlt
lock
jl
push
mov
xlat
sbb
mov
ret
jb
in
push
push
xchg
test
jecxz
mov
pusha
pop
fnstcw
xor
imul
xor
mov
int
xor
call
lcall
sub
push
cmp
sbb
add
sbb
mov
mov
sbb
shlb
imul
bound
inc
js
nop
je
cmp
out
dec
jmp
shrl
push
insb
pop
mov
and
mov
jp
rep
in
dec
lods
jp
dec
cmp
and
mulb
lcall
mov
push
pop
adc
ret
xor
gs
clc
std
outsb
adc
adc
mov
es
fcoml
popf
push
push
inc
inc
movsb
sbb
addr16
scas
adc
and
add
cmp
out
insb
xor
test
jg
jmp
popa
inc
inc
orl
mov
nop
add
adc
test
ret
sti
jnp
cmpsl
add
xor
mov
xchg
mov
push
sbb
inc
enter
mov
divl
movsb
movsl
mov
push
js
jg
lahf
jle
sti
mov
ror
inc
jnp
imul
daa
aaa
jbe
inc
lds
das
lahf
push
ret
popf
call
ljmp
or
mov
inc
flds
scas
pop
mov
ja
iret
push
jmp
les
push
dec
and
or
dec
lods
cld
jge
ret
and
sub
adc
cmp
sarb
cmp
mov
arpl
cltd
adc
in
pop
icebp
outsl
in
in
mov
lds
mov
push
cmc
orl
jbe
das
cmp
outsl
sbb
mov
or
aad
adc
or
dec
pushf
cmc
stc
out
cwtl
mov
cmp
std
jno
jbe
jnp
mov
mov
divl
mov
ss
pop
int
dec
fbstp
pop
sub
ret
lret
sbb
adc
jb
lock
into
int3
shlb
movsl
cmp
cmp
sub
dec
das
cmp
push
mov
adc
inc
and
mov
xor
ja
add
sarl
mov
js
sub
push
sar
movsl
xlat
lods
loopne
lods
sbb
cmpsl
add
xchg
mov
xor
or
xchg
adc
roll
and
push
pop
scas
pop
movsb
push
sbb
popf
cmpsl
xchg
lcall
pop
jnp
mov
icebp
push
cmpsb
loope
lret
pop
test
imul
repnz
or
movsl
jl
iret
inc
mov
test
push
cwtl
sbb
test
adc
imul
sub
push
mov
and
pop
fs
mov
push
shll
push
mov
sbbl
mov
inc
adc
mov
insl
xchg
push
test
cltd
or
sbb
mov
out
push
xlat
push
mov
cmp
into
cs
idivb
adcb
sbb
mov
fnstcw
adc
lea
adc
xor
out
pop
pop
add
lock
pusha
inc
fisttps
push
push
sub
pushf
fwait
pop
cmp
lea
jno
push
jns
and
cltd
test
pushf
fdivl
dec
mov
and
fistps
test
xchg
sbb
sub
fs
enter
or
mov
mov
xlat
mov
pusha
pop
aam
clc
inc
mov
inc
xlat
pushf
mov
hlt
or
enter
data16
cmp
push
and
mov
sub
in
push
stos
out
pop
shrl
mov
outsb
stc
cmp
mov
adc
leave
shlb
mov
out
stos
cmp
mov
push
pusha
fldenv
pop
sbb
mov
in
lds
scas
lcall
xchg
jae
cmc
test
push
mov
sub
fcomps
jo
mov
sub
mov
sub
sub
ljmp
dec
cmc
out
loope
add
in
into
push
rorl
or
adc
add
sub
inc
outsb
insl
jb
out
loop
xchg
xlat
or
aam
xor
push
mov
jge
mov
test
pop
outsb
cmc
out
pop
je
xchg
cwtl
cwtl
int3
inc
into
and
inc
cvtpi2ps
call
cmp
call
mov
inc
fistl
add
mov
ret
imul
sub
push
add
fcoms
sbb
mov
cmpsb
add
jg
data16
mov
cmp
lcall
push
add
sub
and
mov
cmpsb
cs
addr16
xchg
addr16
mov
adcb
je
push
into
lcall
sahf
in
jo
aaa
cmc
xchg
cwtl
mov
loope
movsl
loop
sbb
and
pushf
add
or
mov
das
fwait
int
out
add
das
cltd
loopne
dec
cmc
int
or
andb
and
and
mov
out
dec
rcrb
mov
push
aaa
mov
stos
and
lcall
push
jp
dec
loop
pop
dec
mov
mov
and
fildl
adcl
cmp
outsl
sti
in
and
adc
pop
jmp
pop
aas
or
mov
mov
lahf
rolb
jbe
bound
push
xor
adc
inc
xor
rcll
push
pop
fdivl
data16
inc
and
adc
icebp
add
mov
dec
aas
nop
and
jae
test
fidivrs
sub
lods
out
gs
sub
cmp
minps
outsl
mov
ret
sbb
int
cmp
xor
cli
daa
mov
inc
dec
arpl
in
pop
xchg
fidivs
mov
or
pusha
lods
mov
lret
stc
sbb
scas
fwait
popa
jecxz
mov
call
out
pushf
push
or
dec
fstps
fbstp
dec
mov
add
pop
pop
lods
cmp
es
xor
fstps
fstpt
ljmp
lds
je
jl
movsl
out
dec
orb
popa
mov
lahf
mov
dec
bound
fcmove
xchg
imul
into
sbb
scas
adc
scas
sbbb
mov
mov
sbb
movsb
or
bound
push
in
push
shl
popf
mov
or
or
sbbl
fisubrl
sub
add
stc
inc
jnp
lret
cld
arpl
iret
mov
adc
int
addr16
inc
cmp
mov
jnp
ret
mov
dec
cmpsb
rcrl
sbbb
jp
push
outsb
fdivl
in
or
adc
fdivl
cs
test
inc
jmp
leave
sbb
pop
inc
jle
jne
push
in
adc
xchg
outsl
outsl
cmp
and
bound
xchg
lahf
insl
sti
or
bound
mov
insl
pop
outsl
jl
pop
xor
call
mov
mov
cmc
in
mov
xchg
hlt
xchg
sahf
inc
lods
adc
test
in
lods
push
js
cwtl
lcall
dec
xchg
sbb
mov
sbb
xlat
mov
xor
jmp
aas
popf
and
outsl
xchg
cmp
and
imul
and
mov
ret
add
push
mov
pop
icebp
and
clc
inc
or
mov
cltd
negb
aaa
pop
icebp
out
fildl
popa
pop
scas
repz
adc
cmp
scas
add
imul
pop
mov
and
xchg
mov
rcrb
mov
jae
add
cltd
add
test
or
xchg
push
mov
mov
sbb
mov
mov
les
ret
fadd
inc
data16
add
push
adc
leave
or
ljmp
mov
aaa
outsb
inc
mov
cmp
sbb
cltd
jae
in
pushf
push
lret
cmpsb
inc
inc
js
hlt
ficoml
sub
cmpsl
popa
addr16
mov
xchg
lds
mov
fbstp
ret
insb
in
or
testl
subl
inc
lret
inc
push
pop
sub
pop
arpl
lods
fists
mov
hlt
adc
and
stos
rorl
push
mov
cmc
dec
aaa
sbb
dec
sahf
rorb
bound
rolb
or
or
sub
push
arpl
add
jp
jne
mov
xchg
pop
ret
gs
xchg
sub
jge
xor
cld
sbb
xor
es
fisttps
das
jg
sbb
cmp
cmp
push
mov
mov
loope
push
or
cltd
negb
cld
jae
loop
rclb
xchg
ljmp
push
arpl
int
jg
aam
dec
in
mov
sub
sti
in
or
mov
push
leave
inc
loop
jecxz
push
xchg
out
daa
cmc
cmpsl
int
and
adc
cs
test
popf
cmp
and
inc
xchg
inc
mov
sbbl
push
notl
inc
sbb
xchg
xor
mov
or
rolb
xchg
in
shr
xor
xchg
mov
divb
jp
mov
cmc
add
adc
mov
xchg
je
push
mov
cmp
shr
mov
xor
add
push
ljmp
mov
lahf
cmpsl
jle
fdivl
mov
ret
nop
or
and
insl
or
inc
fildll
mov
xlat
rolb
fs
stos
stos
mov
mov
repz
insb
adc
lcall
fcmovne
iret
shll
mov
jp
imul
jo
cli
dec
je
loop
shlb
add
divl
mov
add
ss
popa
jp
dec
fcompl
push
dec
jns
enter
orl
xchg
push
adc
insl
popa
lret
jle
stc
pop
std
movsl
fs
xchg
test
and
fiaddl
push
add
test
sub
pop
les
in
sub
dec
je
cltd
sbb
aas
fdivrs
dec
mov
fsubl
cmpsb
pop
xchg
or
xlat
es
xor
xlat
daa
repz
mov
mov
or
sub
jae
dec
movsb
ret
and
into
das
ljmp
arpl
mov
mov
shrb
scas
movsb
push
cmpsb
adc
inc
mov
jne
and
and
ds
test
push
xchg
cwtl
test
add
cltd
adc
in
in
adcb
fsubrs
cmc
jp
or
mov
cmp
aam
out
das
sbb
pop
mov
adc
fmul
std
mov
loope
fucomp
dec
data16
mov
lods
cmpsb
jae
sbb
bnd
mov
insl
or
mov
jae
xor
inc
imul
cwtl
icebp
into
push
cmp
push
stos
gs
lcall
or
xlat
in
cld
fadds
imul
or
lret
repnz
xlat
pop
mov
test
std
call
push
or
inc
dec
leave
or
xchg
mov
jge
mov
mov
insb
dec
sbb
pop
pushf
sbb
jbe
outsb
lock
jmp
shll
js
dec
movsb
aam
loope
xchg
ds
and
jo
and
pop
xchg
aad
jne
adc
ficoms
lea
xchg
pusha
xor
mov
bndstx
aam
push
mov
mov
push
out
std
test
fcmovnbe
das
shll
hlt
sub
jmp
shll
sbb
xor
sub
lret
sbb
in
cmp
xorb
xor
mov
lcall
pop
out
add
inc
out
add
outsb
mov
xchg
enter
data16
loope
sub
popf
mov
inc
shl
movsw
sub
push
jne
sub
mov
push
ljmp
push
push
inc
xlat
arpl
bound
popf
or
dec
sub
cli
jnp
cmpl
loop
faddl
push
cmc
ja
nop
outsb
xlat
push
repz
fwait
adc
fsubr
bnd
fidivrs
cmpb
and
xor
nop
rcll
sub
jb
outsb
pop
inc
lcall
sub
xchg
inc
jle
mov
inc
arpl
dec
push
push
or
jo
dec
sahf
pop
mov
add
ja
jne
pop
and
ja
out
mov
sub
mov
sub
popf
or
xchg
lods
and
mov
adc
sti
inc
cmpsl
jo
pop
pop
insb
std
bnd
gs
das
push
or
ret
popa
sub
movsb
cltd
adc
ss
or
movsl
mov
aam
push
repz
fimull
fldenv
lods
cmc
lods
incb
fs
mov
or
mov
sti
dec
out
fwait
gs
jnp
jne
mov
pop
pop
pop
sbb
in
jb
clc
aas
fwait
mov
fcmovnu
mov
lock
push
sub
jp
rsqrtps
xchg
inc
pop
lods
scas
cmp
js
mov
xor
repnz
inc
fsubrs
inc
xchg
sbb
movsb
xchg
cmp
daa
dec
dec
sub
stos
fs
sbb
stc
push
lods
out
mulb
fs
sub
fcoml
orl
js
in
lea
nop
mov
ds
imul
jo
loope
in
test
cs
mul
jo
lahf
push
mov
push
push
stos
jno
stos
shlb
ror
push
out
mov
movsl
popa
mov
jne
xor
stc
inc
xchg
xor
jno
frstor
cmpsb
outsl
cmp
sbb
inc
lcall
mov
pop
iret
xor
sarb
test
sbb
insl
inc
xchg
pop
cli
lahf
cs
xchg
xchg
sbb
loope
inc
adcb
into
sbb
gs
jmp
jg
lods
rcr
fstl
sub
aam
movsl
aad
push
dec
xchg
xchg
mov
inc
xor
jmp
enter
pop
sahf
push
cmp
push
and
push
sub
fcmovbe
push
push
loop
push
ds
inc
cmp
scas
cmp
das
pop
xchg
or
inc
fstpt
ret
pop
loope
mov
movsl
sti
and
outsb
cmpsb
jbe
fcmovnu
stos
aam
fstps
and
pop
negl
pop
js
popf
ss
xor
les
pop
sar
gs
int
push
add
rorb
mov
fnstcw
arpl
sbb
fistpl
pop
rol
and
xor
sbb
mov
push
fst
push
dec
mov
loope
orb
jl
and
xchg
or
xor
jecxz
pop
cmpsl
sbb
xchg
sbb
inc
mov
pop
sub
xor
sbb
mov
xchg
or
dec
lahf
insb
sbb
jle
fcomps
jmp
pop
adc
add
inc
movsl
jb
lock
out
jns
mov
cmp
adc
mov
cmpsb
mov
dec
xor
test
xor
sahf
das
xchg
add
movsb
xchg
or
push
mov
int3
mov
adc
mov
xchg
xchg
mov
jmp
bound
push
and
mov
push
cmpsl
flds
mov
lock
mov
imull
adc
sti
test
loope
sti
mov
push
jmp
xlat
lcall
xchg
ja
push
shll
cmp
jg
xchg
sbb
mov
insb
dec
pop
mov
test
mov
inc
popa
jne
hlt
or
pop
ret
mov
inc
cmp
jnp
inc
test
lret
push
xlat
cmp
nop
loop
test
xchg
xor
inc
mov
inc
push
mov
in
jmp
test
sahf
lret
lcall
negb
mov
add
add
mov
in
pop
pop
lahf
mov
or
mov
pop
ss
xor
or
adc
lds
mov
stc
sbb
mov
inc
sub
popa
sub
pop
daa
int3
xor
cmp
and
jae
fstps
shlb
fsubrl
shrl
mov
jmp
sarb
jge
js
inc
push
stos
mov
jmp
pop
ret
mov
pop
dec
xchg
mov
cmpsl
pop
pop
adc
or
in
iret
into
ja
fs
dec
pop
xchg
mov
inc
aas
sbbb
iret
scas
in
and
push
push
sub
mov
loopne
sub
dec
sbb
js
push
mov
sti
mov
xchg
das
loope
test
out
dec
lods
sub
sar
int3
shlb
mov
outsb
shl
daa
xchg
mov
push
or
jo
loopne
push
pop
lcall
jae
push
ja
push
pop
lods
int3
fwait
movsb
stc
mov
out
sub
push
lea
adc
cmpsl
or
pop
in
pop
dec
stos
int
fdivrl
sub
leave
jae
pop
xchg
xchg
fs
or
outsb
lods
addr16
insb
and
mov
pop
jecxz
arpl
jno
subl
push
frstor
out
test
sbb
fwait
pop
xlat
pop
pop
gs
jge
push
sbb
cmpsb
je
mov
popl
cli
sub
ret
lcall
mov
ror
cltd
mov
lahf
insb
xchg
int3
lret
dec
js
repnz
sbb
inc
push
mov
rolb
sub
pop
out
jbe
jbe
sub
mov
mov
fnstcw
inc
jge
cmp
repnz
cmp
mov
fldenv
dec
pop
cld
cmp
pusha
sbb
or
aaa
dec
xchg
je
insl
pop
push
lahf
adc
mov
cmp
mov
sub
fldt
in
mov
cmp
mov
aas
lods
cltd
lret
cltd
decl
adc
adc
jnp
cmp
mov
inc
lock
cmp
sbb
mov
xchg
mov
addl
int
sub
adc
or
adc
mov
dec
test
mov
decl
inc
push
xor
sub
imul
xchg
out
insl
jb
rcrl
xchg
push
loope
inc
sahf
mov
les
repnz
in
aad
int3
outsb
hlt
xor
pushf
sbb
or
xchg
imul
adc
pop
mov
pushl
mov
sub
ret
je
aad
jg
ljmp
jmp
arpl
insb
fldenv
jne
cmp
cmp
add
iret
inc
mov
in
lahf
js
mov
xchg
xchg
and
cmovo
lea
repz
sbb
js
pop
imul
aad
into
fs
fdivs
addl
lcall
or
jno
ss
push
fidivl
movsb
je
orb
adc
test
aam
xchg
xor
les
cmp
push
inc
jne
or
cmc
cwtl
push
ljmp
sbb
je
xorl
dec
mov
cmpsb
incl
daa
add
push
and
mov
inc
mov
subb
mov
inc
jae
mov
mov
xchg
sub
stos
jg
cli
xor
add
sub
popa
out
lods
mov
push
arpl
lahf
xchg
stos
daa
iret
xlat
nop
jle
or
mov
cmpb
std
lea
push
ret
add
xchg
loopne
mov
jmp
and
xor
push
stos
call
or
mov
and
push
mov
int
cmc
or
or
popf
imul
sub
push
cmpsb
pop
out
or
sub
popa
or
addr16
fs
or
and
mov
cmp
dec
and
push
test
popl
pop
dec
aad
xchg
inc
inc
popf
sbb
clc
pop
pop
dec
popl
cmp
outsb
out
inc
int
mov
inc
divl
ljmp
dec
and
fsubrs
out
setl
js
int3
pusha
push
lea
jmp
out
mov
icebp
inc
adc
insb
mov
sub
outsl
outsl
xor
ret
jb
dec
lods
mov
icebp
xor
push
cmp
stos
mov
dec
aaa
cmp
jecxz
bound
adc
cmpsl
aas
sahf
dec
in
xacquire
pop
lcall
lahf
in
dec
mov
jno
cmpsb
adcl
cmp
mov
ss
adc
add
std
push
mov
outsb
mov
jno
adc
cmc
jmp
inc
xchg
inc
imul
scas
cmpsl
addr16
jp
xchg
add
xor
xor
mov
mull
dec
pshufw
jle
adc
faddl
shlb
xchg
push
and
fnstsw
mov
sti
cmp
fwait
mov
mov
outsl
jge
jp
dec
loope
inc
xor
adc
lahf
mov
sbb
add
movsl
mov
and
pop
sbb
jnp
add
notb
in
xchg
stos
rcr
ficoml
out
stos
mov
enter
cwtl
out
lcall
adc
sbb
in
mov
stc
mov
push
or
cltd
cmp
dec
and
inc
sbb
js
cmp
inc
sub
addr16
cltd
leave
xor
add
shll
mov
subl
cwtl
and
out
clc
cmpl
sbb
outsl
sub
lret
andl
jl
aas
add
repz
popa
nop
cwtl
push
into
mov
ss
sbb
arpl
push
int3
int
cltd
push
mov
and
lahf
fcompl
adc
pop
bound
aaa
in
sbb
sbb
outsl
lret
shrb
cmp
push
xorl
sub
sti
jle
negb
sarl
inc
insl
sti
out
mov
and
mov
paddusb
pop
cmp
cmp
outsb
mov
cltd
fsubrl
jg
popa
dec
lahf
mov
jae
xlat
cmpsb
add
push
cmp
xor
xchg
mov
loopne
inc
out
and
hlt
xchg
sub
dec
test
into
das
outsl
cld
shlb
pop
loopne
ljmp
sarb
divl
mov
pop
jno
mov
rorb
jb
icebp
jno
daa
inc
sub
cwtl
push
cwtl
sbbb
dec
ret
dec
pop
pavgw
fistps
inc
pushf
add
test
add
adc
dec
push
je
int3
add
pop
sbb
addr16
xor
xor
sbb
pop
or
in
jmp
mov
push
xchg
test
xorl
pop
mov
cmpsl
sbb
pop
imul
adc
mov
sbb
cmp
jg
andl
add
adc
cltd
lret
lcall
test
arpl
add
enter
sub
int3
sbb
iret
or
lea
mov
out
xchg
int3
shlb
push
out
iret
sbb
divl
test
xchg
call
jmp
pop
lcall
sub
jge
cmp
mov
clc
inc
lea
push
movsl
xor
or
lret
mov
adc
mov
sahf
push
ret
xchg
sub
mov
rorb
int3
pop
gs
adc
sbb
mov
pop
xchg
movsl
lock
hlt
pop
outsb
xor
xchg
sbbb
fisubs
adc
pushf
paddusb
cltd
push
cwtl
clc
ret
pop
bound
add
inc
mov
jae
sahf
mov
or
mov
ss
scas
jecxz
inc
fwait
dec
jge
cmp
mov
mov
push
jle
pop
jbe
xor
jg
jo
push
fwait
scas
add
aam
in
push
aas
int
inc
aam
sub
loope
iret
jecxz
das
sub
std
imul
loope
and
mov
dec
and
stos
ljmp
cli
mov
je
add
sbb
inc
push
fsts
iret
stos
and
cmpsl
icebp
sbb
mov
inc
lcall
out
inc
mov
jecxz
iret
idivb
pusha
jle
xchg
jbe
out
sbb
adc
cli
add
cwtl
lock
lds
adc
inc
sub
push
push
es
mov
adc
stos
sbb
jno
xchg
lock
and
xorb
negb
push
sbb
and
xchg
repnz
fadds
loope
test
inc
pop
cmp
lods
fsts
popf
xchg
lahf
sti
push
push
push
jb
mov
xor
es
mov
adc
xchg
push
movsl
mov
gs
out
js
movsl
fadds
in
xchg
jl
sbb
pop
leave
mov
addr16
call
test
lret
sub
dec
mov
iret
clc
pop
rclb
or
popa
daa
sub
cmpsl
pop
mov
inc
iret
into
xlat
push
out
push
and
pop
ffree
inc
mov
or
daa
cli
roll
aam
das
mov
cmp
lret
inc
mov
adc
loope
sub
std
xor
add
fnstenv
popf
sub
ljmp
fldcw
in
getsec
test
add
lcall
add
into
jg
scas
aaa
mov
push
mov
ljmp
and
pop
in
inc
pop
and
loopne
lahf
or
adc
mov
mov
and
jno
pop
in
jp
jle
dec
dec
mov
add
out
pop
out
mov
loop
pop
jns
pop
jo
push
mov
lret
leave
mov
fsubrp
push
pop
rorl
or
push
push
push
xchg
lahf
jge
or
insb
fxsave
movsb
dec
xchg
mov
adc
dec
sahf
imul
inc
add
lock
cs
pop
lods
mov
and
inc
es
nop
lds
sub
cltd
neg
mov
outsb
js
mov
add
mov
pop
cmp
lcall
jecxz
mov
sub
fldt
inc
movsb
cli
xchg
mov
pop
cmpb
dec
ret
pop
cmp
pop
ficompl
jno
push
push
sbb
hlt
jae
mov
dec
es
jb
scas
pop
or
mov
and
call
test
ljmp
push
cmp
adc
dec
outsb
xchg
clc
inc
loopne
test
call
ljmp
pusha
lcall
xchg
mov
cmc
cli
adc
lods
nop
loopne
jg
inc
mov
subb
lret
xor
add
ror
xor
inc
movsl
xchg
fwait
bts
call
popl
fiadds
xchg
loopne
dec
test
mov
mov
cmc
dec
fs
and
mov
inc
out
cmc
movsl
lods
dec
push
fst
adc
add
lea
repnz
adc
nop
cmpsl
cmpsl
xor
pop
lret
and
mov
out
pop
out
clc
cmp
popf
shll
dec
jno
lahf
mov
mov
imul
js
mov
cmc
in
pop
xorl
sub
dec
mov
jl
push
jmp
mov
aad
test
adc
cmpsb
in
stc
cmc
std
stos
mov
daa
pushw
push
mov
mov
dec
mov
xor
cmpsl
das
mov
fsubr
negl
sbb
ss
cmp
inc
out
shlb
push
sbb
fdivs
push
xchg
push
sub
inc
push
mov
xor
jmp
jmp
es
and
faddp
jmp
sbb
test
std
dec
xchg
in
daa
pop
scas
add
pop
and
lods
das
pop
inc
pop
rolb
dec
rcrl
mov
fisttpll
push
popf
dec
scas
inc
ds
jbe
sarl
cli
in
and
or
mov
fidivs
mov
lea
jb
mov
outsl
sbb
fistpll
pop
adc
lret
cmpsb
scas
sbb
cmpsl
stos
lods
add
or
addb
dec
lret
fidivl
aaa
aaa
mov
pop
inc
or
fnstsw
icebp
lahf
sbb
mov
inc
out
push
jecxz
stos
iret
mov
mov
cltd
mov
xor
xchg
adc
push
fstpl
xor
jl
push
xchg
lods
pop
jne
mov
in
adc
scas
in
frstor
dec
and
sub
je
sbb
jne
clc
and
xchg
add
cmpsl
sub
fcom
dec
scas
xor
mov
ret
add
test
rcll
aaa
add
xor
lret
mov
push
out
mov
xchg
or
mov
or
sub
sub
push
insb
call
and
out
adc
push
incl
inc
pop
or
fistpl
jb
dec
in
and
imul
out
orb
jecxz
int3
stos
jle
add
adc
add
mov
push
add
cli
mov
pop
in
scas
out
or
out
and
xor
ror
cmpsl
sbb
mov
push
dec
popa
mov
xorl
xlat
in
cmp
pop
ljmp
loop
lock
int
repz
pop
inc
adc
pop
imul
adc
sbbb
fwait
test
xchg
daa
das
mov
mov
bound
add
inc
or
fisubs
pop
imul
jl
adc
dec
sub
pop
xchg
movl
sub
or
aad
enter
lods
loopne
push
stc
mov
fs
jl
jg
or
cli
dec
push
pop
scas
dec
jb
jb
ss
fs
dec
movl
sub
mov
int
clc
jp
mov
out
cmpsl
pop
and
pop
xchg
mov
je
adc
mov
mov
sbb
pushf
mov
or
movsl
imull
push
mov
sub
mov
adc
repz
loop
jb
std
dec
sub
stos
mov
loope
mov
pop
mov
rolb
fs
fwait
ds
or
jne
fdivr
jg
add
inc
shrb
fcomip
mov
adc
in
dec
popf
sbb
rcr
ret
xchg
cmp
sbb
test
dec
shrb
xor
ljmp
loope
test
xor
repnz
jb
lcall
aam
icebp
and
and
outsb
subb
xchg
lcall
and
ret
outsb
fstl
test
push
mov
bound
out
lcall
sub
cmp
dec
or
xor
ja
scas
adc
hlt
xchg
sub
scas
adc
setnp
push
pop
fcmove
add
mov
dec
in
daa
mov
adc
inc
jg
stc
adc
lods
pop
and
inc
test
mov
or
cmp
mov
dec
dec
mov
mov
mov
cmp
sub
jl
aaa
pop
fsts
pop
push
xor
or
and
mov
aad
xchg
mov
xor
jmp
arpl
fdivp
push
add
xchg
mov
fdivrs
push
jmp
rolb
imul
subb
inc
lds
fwait
mov
dec
icebp
jl
stos
push
bound
arpl
pusha
imulb
mov
mov
inc
subl
dec
inc
mov
xchg
push
inc
cmp
mov
add
ja
mov
aaa
clc
pusha
mov
and
rol
sbb
fisttps
in
data16
mov
out
push
push
enter
xor
out
jb
mov
fwait
cmp
sbb
int
inc
ret
adc
bswap
inc
ss
lret
mov
or
sbb
push
shll
stos
cwtl
adc
pop
aam
inc
fistpll
jmp
push
daa
sub
add
jge
push
pop
push
pop
adcb
shll
sbb
sub
mov
adc
sub
inc
fiaddl
dec
sbb
jns
pop
movl
lcall
sbb
dec
cwtl
lea
mov
pop
rcrb
shlb
mov
data16
jl
pop
in
lcall
pushf
inc
sbb
and
push
lock
lret
adc
jmp
xor
std
xchg
gs
mov
in
inc
add
in
jle
adc
mov
xlat
cmp
std
mov
mov
push
loopne
mov
fcmove
es
popf
xchg
shrb
jmp
cmp
dec
loope
cmp
aam
lahf
movsb
jmp
and
ror
cmp
in
mov
mov
dec
push
in
xchg
inc
push
loope
adc
sbb
dec
cmp
int
xchg
pop
movsb
and
inc
adc
sarb
xor
jl
in
jb
movsl
idiv
fwait
xchg
int
test
pop
loop
jbe
ret
sbb
mov
pop
dec
push
enter
mov
inc
push
fistl
or
add
dec
jne
adc
dec
hlt
lret
and
sahf
add
push
jbe
rol
jp
test
cmp
sub
pop
fildll
xchg
mov
mov
ja
inc
pop
jl
xabort
dec
and
pop
mov
jmp
push
add
inc
loop
mov
pusha
lods
xchg
sub
leave
rcrl
ljmp
add
lea
adc
arpl
outsb
jns
or
inc
orl
inc
lods
mov
js
sub
ljmp
mov
std
outsw
dec
push
cmp
sbbl
cltd
inc
push
scas
mov
andb
outsl
dec
popf
pop
out
or
sahf
ret
call
xchg
sub
add
adc
sti
mov
push
push
stos
mov
out
loopne
repnz
adc
test
pop
es
jle
mov
rol
lahf
cmp
lods
mov
mov
ror
ret
cli
jb
sbb
dec
xor
test
pop
cmc
sub
arpl
add
and
jb
pop
jle
mov
je
dec
and
fucompp
hlt
rolb
xor
xchg
ja
add
or
loopne
jo
fnsave
jns
mov
pop
push
ljmp
inc
ja
mov
push
jl
pop
mov
adc
pop
mov
jle
mov
xor
cmp
inc
mov
rol
mov
inc
xor
mov
and
sbb
je
mov
push
in
mov
ljmp
xor
and
xchg
mov
inc
sbb
fnstenv
scas
or
lods
testb
subl
pop
pop
and
push
btc
pop
add
push
jae
push
inc
dec
cli
adc
loope
enter
jp
inc
mov
rcll
adc
or
add
loopne
aad
and
pop
sub
popf
add
shll
and
push
pushf
ds
out
leave
daa
xchg
in
repz
imul
pushf
xor
add
xor
mov
popf
ficoms
outsb
push
and
push
xor
call
push
stos
addr16
sub
xchg
gs
sub
repz
dec
and
inc
rcll
outsl
gs
sbb
cwtl
push
cld
or
sub
push
add
nop
adc
fcoml
test
or
sbb
popf
cmpsb
sub
pop
into
or
xlat
xchg
enter
fwait
leave
mov
lcall
ret
ror
call
stos
xchg
mov
aam
hlt
cmpsb
and
adc
clc
sub
stc
jmp
jge
and
sub
pop
sbb
lret
imul
test
js
dec
push
push
fidivrl
int
jl
out
jp
sub
pop
scas
scas
scas
mov
dec
adc
or
cmp
add
sbb
adc
lods
ficoml
cwtl
mov
test
push
je
inc
adc
es
movd
mov
sub
pop
jmp
ljmp
mov
insb
mov
mov
xchg
pop
jge
cmp
dec
mov
sbbb
cwtl
out
xchg
dec
scas
jnp
jmp
sti
into
xchg
and
lahf
mov
bound
mov
mov
cmp
push
push
into
sarl
pop
and
inc
mov
mov
xchg
pop
xlat
ret
fisubl
nop
jno
xchg
add
dec
dec
je
sti
adc
pandn
cmc
mov
or
adc
mov
jae
into
jno
lods
ss
mov
bnd
lcall
dec
es
lret
rol
adc
adc
mov
jmp
inc
jns
dec
pop
push
dec
xchg
mov
popa
aaa
stos
push
mov
sub
push
cwtl
sub
sub
loop
mov
retw
adc
ficomps
rclb
mov
adc
stos
mov
insl
sub
lods
inc
and
inc
icebp
scas
shrl
movsl
jb
jns
push
enter
push
icebp
or
lds
sti
lock
inc
mov
inc
add
mov
movsb
dec
fldcw
add
push
out
mov
xlat
notl
push
call
idivl
push
jnp
sbb
insl
mov
inc
jle
mov
les
int3
or
clc
or
scas
stos
jecxz
add
aam
push
cmp
jne
ret
cmp
in
or
and
mov
pop
dec
lret
cwtl
enter
pop
mov
testb
mov
sub
lods
mulb
pushl
mov
mov
mov
arpl
xchg
jle
sub
mov
in
dec
psubq
push
push
out
out
jno
test
sub
dec
jb
gs
sahf
mov
adc
add
sbb
jbe
add
xlat
xchg
pop
popa
dec
lret
sti
lret
sub
in
cmp
adc
lret
andb
mov
mov
xchg
sub
sub
ss
push
cmpb
test
sub
loopne
mov
dec
mov
icebp
adc
nop
scas
sub
mov
cmp
test
dec
mov
addl
xchg
ja
in
xor
mov
ja
loop
incb
xchg
pusha
jb
loope
les
test
xchg
repnz
xchg
fdivr
fwait
pusha
les
lea
jle
dec
mov
push
mov
mov
mov
adc
pop
add
inc
fldl
jle
xor
dec
lahf
adc
cmp
pushf
mov
mov
push
movsl
add
mov
andb
cmpsb
inc
in
aam
push
add
lahf
pop
adc
das
pop
or
push
or
inc
mov
mov
dec
add
pop
lds
mov
test
iret
lods
pop
ljmp
in
scas
loopne
daa
sbb
dec
jg
stos
data16
push
inc
mov
inc
mov
or
sub
fldt
push
and
inc
das
inc
inc
std
fadd
and
mov
push
mov
adc
int3
daa
push
test
push
aam
inc
xchg
sbb
or
push
inc
int3
stc
jp
inc
cli
push
xchg
dec
sbb
vpackssdw
ss
lods
dec
fldenv
stos
sbb
push
jmp
sbb
mov
inc
pslld
lcall
test
movsb
lcall
and
and
dec
xchg
fisttps
xor
loop
call
in
fst
aas
loopne
out
push
imul
loope
sarb
popa
loope
cli
inc
fwait
adc
idivl
insl
das
push
cmpsl
push
mov
iret
loope
jne
data16
stos
push
mov
out
loop
mov
and
pop
fmulp
aad
dec
and
and
mov
stos
xor
mov
pop
and
std
in
mov
sbb
push
cltd
mov
in
fldcw
xchg
push
dec
push
mov
push
sbb
cmpsb
xchg
cmp
add
cmpsl
inc
lods
fadds
shlb
dec
sbb
gs
mov
pop
movsb
rcrb
hlt
mov
stc
in
jb
sahf
push
mov
adcl
mov
loop
dec
adc
and
test
push
mov
insb
push
sub
adc
sub
jp
jne
mov
subl
mov
scas
push
aaa
aam
iret
add
clc
jne
leave
dec
popa
iret
orl
jge
mov
repnz
push
or
xchg
test
jne
clc
or
aad
pusha
and
hlt
xor
mov
loop
in
and
add
lahf
cmp
pusha
or
scas
inc
adc
mov
mov
arpl
fldenv
outsl
add
mov
fmuls
arpl
pop
lds
push
aam
adc
mov
rcll
jecxz
mov
jae
es
mov
pushf
enter
xchg
jno
mov
sub
jns
cmp
sub
iret
sahf
jbe
push
fistps
bnd
int
push
push
shrb
gs
loop
test
repnz
fldl
mull
mov
mov
adc
in
pop
ljmp
movsl
add
jno
fists
sbb
movsl
fldt
or
and
stc
rcr
jno
lahf
sub
adc
mov
jb
adc
aas
fcoms
add
in
dec
mov
fwait
pushw
sbb
jge
rorl
adc
sti
movsb
insb
insb
mov
loop
mov
lea
push
jle
stos
lahf
adc
sub
cmp
scas
dec
sbb
sbb
sub
mov
or
sub
imul
xchg
cs
data16
cmpsb
xor
repz
or
mov
xchg
inc
fistl
push
sub
sub
inc
xchg
in
out
mov
or
loopne
bound
imul
push
jae
mov
je
leave
mov
mov
insl
mov
mov
push
inc
push
mov
push
xor
icebp
out
outsb
mov
pop
shl
loope
enter
arpl
jnp
inc
sbb
leave
and
pushf
mov
dec
cmp
mov
orb
xchg
shrb
add
sbb
lret
mov
icebp
daa
adc
sbbb
lods
xchg
in
sub
ds
pop
movsb
mov
cwtl
aaa
dec
or
mov
push
dec
ret
loope
cmpsl
in
xchg
mov
js
adc
scas
jno
bound
jle
addr16
daa
pop
movsl
mov
arpl
jnp
cmp
dec
sub
pop
sub
cmp
sarl
movl
xchg
incb
fbld
out
js
sbbl
addr16
mov
add
aad
sub
js
nop
mov
insb
lcall
or
cld
jg
push
rcr
push
add
cmp
shl
pushf
ret
or
jb
inc
dec
fidivl
and
shlb
cmp
push
in
add
or
iret
ret
push
bound
jb
add
cmc
les
orl
cld
mov
mov
adc
jp
sub
sbb
cmp
and
jle
cmpsb
addr16
xchg
mov
arpl
imul
push
mov
pop
out
xchg
xlat
aas
mov
push
push
pop
mov
fcomi
repz
shrl
xor
jmp
in
xchg
mov
mov
lret
cmp
mov
xor
jecxz
jg
mov
pop
test
outsb
xchg
lahf
xor
xchg
add
insb
push
ja
push
nop
jno
sbb
sub
sbb
adc
adc
not
mov
ret
fmuls
cwtl
outsb
sbb
mov
incb
dec
cltd
popa
dec
test
mov
push
ret
jb
pushf
movsl
dec
sbb
inc
cwtl
outsb
push
jo
out
scas
cmp
xchg
insl
mov
outsl
loope
scas
pop
out
jp
iret
mov
scas
pushf
push
pop
push
xstore-rng
cmpsl
add
cmp
xchg
mov
pushf
iret
popf
dec
adc
mov
xchg
add
inc
xor
shrb
sti
movsl
cmp
repz
fisttpl
ljmp
scas
movsb
xor
adc
lods
mov
ficomps
loope
fdivs
movsb
and
mov
dec
pop
add
mov
mov
jbe
xor
ret
jns
cmp
and
divb
dec
cltd
jmp
inc
lret
lcall
enter
aad
jmp
jb
xor
cmp
and
pop
and
in
add
test
andb
insb
sub
rol
aam
cltd
stos
leave
push
lcall
sub
mov
adcb
sub
xlat
addl
addr16
xchg
sub
pop
mov
inc
sub
mull
dec
adc
mov
pop
ret
xchg
adcl
and
scas
sub
add
push
xor
jg
imul
adc
xor
sub
ret
mov
es
jo
mov
in
cld
in
xchg
push
sub
inc
mov
es
mov
add
mov
xor
cmc
sub
in
arpl
gs
lea
sub
mov
xor
jnp
outsb
and
lahf
lock
stos
iret
pop
fcomi
push
add
or
scas
xor
mul
pop
loopne
sub
mov
test
inc
scas
clc
insb
mov
loopne
mov
and
cld
out
lock
cwtl
push
jecxz
pop
adc
dec
and
add
mov
ret
adc
leave
xor
call
adc
sahf
and
xchg
lea
mov
cwtl
pop
mov
xchg
jo
dec
fnstsw
adc
adc
xor
dec
xor
xor
pop
ret
xchg
shrb
sub
and
jnp
jmp
xchg
addb
test
xchg
add
stc
cmp
cmpb
adc
rcr
test
enter
sub
aad
pop
jmp
push
out
cmpsl
test
inc
inc
xor
cmpsl
xchg
mov
sarl
sbb
bound
aas
ljmp
or
pop
sbb
jmp
cmp
lods
dec
rol
mov
in
add
test
fwait
stos
mov
mov
mov
iret
decb
jae
daa
scas
rcrb
data16
sub
addb
fnstsw
addr16
mov
inc
mov
in
jns
lock
dec
std
and
and
xchg
arpl
mov
dec
cmpsb
push
hlt
cmp
or
add
in
outsb
push
negb
adc
jecxz
xor
dec
stos
ret
sub
cmp
mov
dec
mov
mov
test
insl
and
cmp
jne
mov
test
pop
sbb
mov
push
or
inc
clc
lcall
int3
pop
es
adc
add
andl
dec
cmp
cmpb
out
pop
push
loope
mov
les
shll
push
ljmp
xor
push
and
add
pop
idivb
loop,pt
rcll
popl
scas
addl
test
sub
ret
cltd
or
gs
push
cwtl
mov
and
mov
mov
movsl
mov
sti
lret
subl
inc
dec
test
pop
mov
enter
dec
mov
mov
dec
cmp
add
stos
dec
push
mov
testb
pop
xchg
inc
pop
dec
es
nop
shll
sbb
lods
stos
stos
pop
pop
jb
add
add
pop
scas
icebp
wrmsr
jno
icebp
fidivs
pushf
dec
mov
andl
neg
insb
dec
rol
lret
xchg
shrl
jne
jmp
inc
cmp
sar
imul
add
ss
push
out
cmc
xchg
daa
mov
nop
sbb
jns
test
push
sub
fiadds
push
pop
ds
inc
xchg
inc
sbb
js
popf
add
sbb
loope
fwait
cmp
cmp
cltd
jmp
in
fldl
outsb
xorl
or
jp
loopne
and
cmp
iret
test
leave
sbb
rcrl
ja
fsubrl
xor
adcl
adc
xchg
cs
outsl
or
mov
mull
cmp
dec
xorb
inc
sbb
push
push
jmp
push
fnstcw
faddl
ret
push
orl
mov
mov
or
hlt
in
mov
je
push
cs
sbb
mov
inc
push
cmp
sbb
push
clc
fsubrl
int
adc
xlat
cmp
call
push
add
arpl
mov
stos
lret
and
mov
inc
vmulsd
rclb
addr16
pop
push
ja
adc
jns
sbb
mov
xchg
les
dec
pushf
mov
jo
inc
outsl
inc
leave
mov
stos
fstl
mov
jbe
icebp
in
or
mov
imul
fs
call
pop
leave
lods
xor
cli
outsl
push
or
cmp
mov
or
daa
out
mov
push
cwtl
lods
out
ds
jbe
scas
push
sahf
add
aas
jbe
add
stos
out
mov
mov
movsb
mov
cmp
ss
and
pop
insl
or
jmp
nop
add
imull
repz
in
inc
xchg
mov
mov
mov
sub
jb
out
push
leave
stos
out
int3
jecxz
xor
xor
arpl
outsl
cmpsb
pop
std
std
mov
sub
cli
mov
aad
push
popf
aas
adc
pop
jnp
push
das
lret
fistpl
or
aam
push
and
xchg
xchg
inc
clc
adc
mov
sub
cmp
xor
and
scas
daa
push
popf
enter
pop
sbb
in
cltd
pop
jnp
mov
mov
out
mov
mov
in
leave
in
outsl
pop
ret
and
in
cmp
lahf
add
in
fs
adc
std
out
scas
push
push
sub
xor
insl
pop
mov
lret
xor
aad
xchg
sbb
stos
icebp
xor
cmpsl
leave
test
ficompl
jg
push
hlt
into
or
enter
es
in
jo
xor
rcl
andb
pop
dec
jl
mov
decl
mov
mov
pop
adc
mov
test
mov
adc
lahf
icebp
les
stos
aam
testb
out
mov
sub
das
cmp
pop
dec
or
cmpl
mov
lahf
sar
sbb
lret
in
loopne
in
call
insb
enter
ds
push
adc
and
rcrl
dec
repnz
lock
shr
xchg
mov
cwtl
mov
outsb
bound
sub
mov
pop
mov
divl
stc
xchg
mov
adc
xchg
sub
jae
in
dec
push
fwait
arpl
mov
mov
inc
jns
adc
pop
arpl
or
xor
xor
jns
icebp
cmpsl
or
addb
push
mov
mov
push
decb
ret
jb
inc
gs
cmp
fmull
xchg
insb
in
mov
ret
and
xchg
pop
pop
cmp
jne
fistps
jns
mov
iret
push
mov
dec
movsb
stos
call
psrld
xchg
movsl
mov
popa
aad
jae
mov
imul
xor
movsl
inc
adc
sti
sahf
lret
and
add
les
and
shlb
dec
push
rol
mov
xchg
cmp
or
leave
add
lret
loope
call
insb
push
and
fcomp
into
dec
inc
and
ror
push
mov
imul
stos
stos
inc
sub
out
mov
inc
add
in
inc
fstps
bound
and
push
insb
xorps
rorb
mov
shrl
fbld
inc
and
rorl
mov
rorb
sub
fdivs
xor
cwtl
dec
cmp
mov
ror
jmp
push
in
cmp
mov
push
pushf
in
sbb
mov
mov
std
dec
jmp
xor
add
and
loop
jecxz
int3
psllw
call
fcmove
push
dec
push
lds
sbb
pop
popa
iret
in
add
fmuls
cmpsl
movsl
dec
je
scas
sbb
aas
xorl
cmp
psubusb
in
nop
jecxz
inc
dec
push
int3
daa
jno
adc
pop
cmp
out
fwait
movb
enter
popf
call
pop
xchg
jl
mov
aam
adc
in
and
push
sti
call
jns
jbe
clc
out
jmp
jb
testb
pop
stos
push
cmp
jl
push
fnsave
fwait
sarb
xchg
cmp
mov
xchg
decb
sbb
ja
arpl
pop
cmp
and
stos
mov
fs
pusha
inc
fldl
sahf
push
es
fidivl
mov
pop
les
adc
test
cmp
scas
mov
inc
mov
cld
das
lds
sbb
stos
sti
insb
test
pop
ss
ret
iret
movsl
enter
nopl
lock
sub
cmp
push
lods
sbb
fwait
insb
test
mull
pop
int
aam
push
mov
shll
cmpsl
jo
rclb
insl
rcrb
clc
xlat
mov
inc
shl
inc
pop
jno
xorl
into
fiaddl
sub
lahf
sbb
or
lds
push
das
and
or
pop
push
and
shll
scas
outsb
jp
cmp
push
nop
in
lret
sbbb
les
jecxz
push
shll
pop
fcmovnbe
mov
jge
in
call
push
fmull
xor
fdiv
cmp
fdivl
test
cmpsb
dec
inc
stos
popa
adc
jno
mov
push
fistpll
pop
add
divl
mov
xor
js
mov
in
add
sub
sub
out
mov
scas
hlt
push
pusha
pusha
andb
mov
pop
xchg
repz
mov
dec
mov
fs
jns
cwtl
pop
add
nop
mov
mov
cld
sub
je
jecxz
lods
scas
and
data16
push
orb
mov
insb
and
mov
daa
lcall
mov
rclb
fprem
ds
movsb
or
add
sub
out
loopne
bound
jnp
xchg
mov
mov
and
call
push
lahf
push
xor
scas
jecxz
push
loop
dec
dec
je
mov
xchg
icebp
rcr
mov
pop
cmp
xor
popa
add
push
push
mov
dec
sub
jns
sbb
cmpsl
fistl
cli
mov
mov
fst
test
daa
inc
mov
mov
outsl
lahf
loope
sub
pop
test
inc
outsb
and
insb
shrb
jb
je
int3
test
cltd
stos
scas
fsubrp
push
rcrl
icebp
dec
jbe
mov
add
roll
jno
xor
testb
inc
aad
js
scas
xchg
out
jle
dec
fwait
xchg
xor
into
std
icebp
jl
outsl
or
inc
insl
cmpsb
push
mov
jns
xchg
div
fiaddl
popa
and
insb
in
jae
rdmsr
mov
sbb
cmc
cwtl
xor
jge
fsubrl
cli
jecxz
iret
dec
mov
nop
aas
mov
pop
push
or
repz
nop
dec
pop
aaa
sub
out
add
xchg
out
pop
pop
and
sahf
sbb
mov
or
mov
movsl
push
xor
sahf
pop
xor
decl
adc
pusha
adc
in
shl
nop
sahf
push
mov
sbb
stc
mov
lock
jp
adc
popa
push
or
sub
or
movsb
repnz
movsl
loope
mov
xor
arpl
jg
sbb
mov
enter
pop
jmp
mov
das
dec
inc
and
mov
jae
xchg
hlt
xchg
pop
and
push
movsl
mov
add
jg
std
adc
aas
adc
arpl
adc
out
xor
mov
imul
fidivl
imul
mov
mov
pop
xor
pop
cmp
jecxz
loope
push
push
mov
cmp
jo
pop
enter
cli
std
loopne
aas
jg
outsl
in
daa
negb
mov
std
pop
rcr
xchg
jbe
lock
into
xchg
jno
cltd
push
sahf
cmc
mov
inc
in
aas
outsl
lods
movsb
outsb
lret
sub
mov
enter
add
sub
mov
mov
lret
clc
and
loop
lea
add
mov
adcl
mov
cmc
icebp
mov
call
jns
out
mov
mov
sbb
int3
lahf
add
mov
mov
fdivs
je
xchg
cmp
jmp
call
xor
or
sbb
push
mov
jecxz
mov
mov
mov
clc
pop
rcl
mov
fidivrs
and
mov
fs
pop
mov
notb
add
sbb
and
rcl
daa
lcall
cmp
jle
stos
push
ds
fcmovne
lods
dec
mov
std
push
inc
xor
xor
loopne
lods
test
mov
mov
cwtl
in
cmp
sub
cwtl
int3
mov
and
das
fnstsw
jle
mov
in
lods
sahf
mov
cmp
and
in
jl
std
mov
mov
lods
faddp
or
mov
ret
adc
clc
adc
sahf
gs
adc
dec
fisttps
jge
cld
int
sahf
test
stos
insl
xchg
sti
test
and
xchg
dec
scas
lret
mov
jae
shl
imul
cmc
inc
pushf
out
lahf
mov
inc
filds
cltd
rcr
sub
mov
push
sub
ljmp
popa
iret
inc
push
dec
pop
cmp
add
sub
inc
insl
enter
or
cmp
jle
mov
jae
daa
and
mov
popf
js
lcall
outsl
sub
mov
movsb
mov
je
hlt
pop
adc
adc
mov
icebp
mov
int
push
add
push
push
adc
push
out
inc
jne
cld
pop
bound
cld
xor
or
lods
das
ljmp
mov
std
adc
or
insl
sub
repnz
add
imul
push
xchg
add
lcall
adc
jae
mov
and
cmpsb
ss
shl
sub
pop
cli
dec
push
cmp
add
cltd
adc
int3
outsl
lret
ss
ja
cmpb
pop
and
mov
jge
mov
bound
adc
jnp
xchg
mov
stos
lods
fistpl
mov
xor
pop
mov
imul
xchg
cmp
arpl
push
clc
inc
xchg
out
and
imul
xor
sub
mov
lahf
jge
fidivrs
mov
out
sbb
adc
sub
cmp
test
mov
mov
sbb
aas
push
xor
movsl
arpl
shrl
sub
and
in
mov
push
pop
scas
in
shlb
outsl
push
dec
mov
xchg
incb
popf
repz
cmp
mov
loope
pop
mov
jno
sbbb
xor
xchg
aas
pop
push
incb
fs
mov
stos
iret
lahf
test
lock
test
sarl
lahf
jns
mov
inc
jge
mov
movsb
sub
mov
test
jge
sub
rcrl
std
repz
popf
xor
lret
mov
dec
mov
jmp
dec
subl
ret
push
and
fldpi
sbb
aam
mov
mov
push
jns
rcr
add
or
dec
cmp
mov
jl,pt
imul
leave
int
push
cs
push
das
fisubs
cmp
mov
cmpsb
xchg
loop
lcall
jns
bound
in
adc
sub
mov
int
repnz
cmpsl
addr16
lods
sti
das
dec
leave
lds
jl
jns
or
bound
popa
xor
faddl
fs
mov
or
addr16
cmpsb
out
rcll
sbb
xchg
in
into
push
pushf
xor
push
mov
insl
cmp
into
xchg
mov
out
adc
inc
add
dec
sahf
pushf
or
fistps
es
xchg
loopne
and
fwait
cmp
sub
out
pop
adc
cmc
sbb
test
mov
adc
aam
ja
xor
xor
pop
fisubs
sbb
out
mov
aas
punpckhbw
xchg
arpl
mov
mov
ja
sti
nop
adc
sbb
lods
sbb
shl
test
call
mov
sub
jnp
push
popa
pop
out
mov
sub
xor
pusha
mov
push
jbe
fnstcw
scas
cmc
push
icebp
mov
xchg
in
popf
decb
push
pop
test
inc
jge
mov
pop
jp
outsl
mov
sub
mov
data16
inc
in
ljmp
test
push
push
les
dec
xchg
dec
ret
test
pushf
push
lcall
mov
loope
sahf
xor
es
rcrb
sar
lds
movsb
rcrb
dec
pop
add
shl
cli
push
mov
mov
lahf
xor
daa
add
xchg
inc
mov
ror
int
adc
aad
jbe
adc
sub
mov
hlt
sti
out
or
jl
ret
mov
jge
and
clc
loopne
cmpsb
scas
inc
insb
js
inc
or
inc
push
mov
call
call
fldt
push
loop
enter
dec
aad
push
sbb
xchg
sub
xor
jg
cmp
sbb
ss
cltd
mov
add
lock
mov
pop
shr
cmp
ror
in
mov
pop
jne
pop
cld
enter
xorb
imul
sbb
adc
je
hlt
lock
xchg
mov
outsb
adc
or
scas
dec
and
sub
mov
in
inc
sub
sbb
add
mov
add
xchg
add
mov
lds
pop
pop
jl
jns
mov
and
pop
jg
pushf
pop
mov
fcomip
sub
cs
push
dec
or
add
in
data16
mov
pushf
iret
mov
xor
repz
push
sub
xchg
jmp
pop
iret
pop
jg
out
jge
pop
sti
mov
shrl
mov
jbe
ja
mov
mov
xor
jbe
sti
dec
xchg
mov
bswap
addl
push
data16
mov
mov
inc
inc
outsb
and
xchg
or
pop
mov
out
cltd
lods
or
adc
shrb
dec
rcrb
dec
call
es
push
push
sbb
mov
cmp
cltd
inc
shlb
mov
add
jb
xor
push
pushf
mov
mov
test
push
and
or
mov
sti
jae
mov
inc
and
stos
filds
jmp
xor
lock
ret
mov
push
push
lret
leave
inc
std
pushf
jo
mov
aas
pop
add
mov
xchg
pop
and
cmpsb
sbb
jne
test
ljmp
dec
fdivl
into
mov
push
push
or
outsl
inc
pushf
xchg
inc
scas
cmp
shlb
inc
xor
stc
sbbb
in
pop
mov
mov
dec
stc
ret
mov
push
xor
cltd
cmc
ror
mov
mull
insb
inc
jne
jmp
cmp
cmp
les
hlt
repnz
fistl
inc
aad
mov
sahf
mov
stc
pop
testl
jae
cmpsl
mov
mov
dec
addr16
sysret
dec
xchg
add
iret
fs
mov
stc
loope
lahf
test
insb
divb
or
scas
lods
hlt
xchg
push
rolb
pop
jg
dec
cmp
std
dec
out
push
cmp
sar
jl
sarl
imul
idivl
shll
hlt
sub
data16
cli
sub
cli
push
sub
orb
push
in
cld
ja
repnz
and
in
xchg
cwtl
sti
out
jo
push
and
xchg
cs
or
loope
jbe
fmuls
push
test
into
cld
loope
add
inc
and
aam
icebp
cmp
push
jnp
jle
adc
adc
xchg
mov
rcrl
ficomps
jne
adc
add
and
push
xchg
sahf
cmpsl
cli
push
or
cwtl
in
add
stos
es
mov
or
leave
jl
test
loop
xchg
xchg
imul
sbb
scas
sub
dec
scas
pusha
mov
push
out
cltd
shrl
mov
lods
inc
outsl
dec
aam
rcrl
push
sub
ds
test
add
jp
aad
cmpsb
adc
xchg
inc
lahf
mov
enter
ficoms
in
cmp
sbb
add
mov
pop
test
xchg
in
js
std
or
out
lods
dec
aaa
mov
ljmp
push
addr16
xor
in
jne
adcb
adc
dec
ljmp
fdivrs
mov
loope
insb
push
arpl
pop
stos
fildl
cmc
cltd
sahf
inc
xchg
ror
cmpsl
adc
stos
ficomps
push
push
mov
imul
roll
in
or
mov
roll
fnstcw
fwait
lods
jns
pop
stos
enter
xchg
mov
addr16
shlb
mov
rorb
fwait
xchg
mov
xor
dec
cmp
mov
faddp
pop
xor
xchg
dec
mov
rol
adc
fwait
test
add
mov
mov
sub
jecxz
hlt
addr16
or
in
push
push
cwtl
repz
push
out
ljmp
in
sub
pop
popf
fildl
xchg
inc
push
mov
xchg
mov
xchg
jns
arpl
xorl
andb
shlb
out
xor
push
pop
ljmp
mov
and
xor
sub
xchg
aas
inc
adc
add
aas
cmp
pop
mov
lretw
arpl
pop
es
inc
lcall
ret
adc
mov
add
adc
insb
lea
jno
lret
push
xchg
fisttps
in
add
psubd
pop
fbld
dec
sub
jne
cmp
addr16
lahf
shr
fcoml
add
add
shlb
inc
xchg
in
lods
mov
arpl
add
inc
or
and
test
dec
jo
outsb
bound
cld
add
addl
pusha
pop
jge
xor
aam
mov
popa
arpl
push
xlat
lds
adc
push
pop
or
jb
stos
aas
popf
push
sub
dec
movl
add
lock
pop
test
mov
je
std
inc
dec
repnz
fdivs
repnz
sub
pop
ja
mov
lret
movsl
lcall
xor
inc
shrb
mov
mov
negl
cltd
in
enter
insl
push
sub
xor
in
rorw
pushl
scas
lods
xor
stos
push
mov
popa
dec
aam
sti
clc
cwtl
popf
adc
mov
in
push
mov
popa
imul
int3
sub
cmpsl
inc
test
imul
lcall
ret
dec
jg
or
rolb
xchg
push
into
adc
or
enter
cmp
ret
push
iret
addr16
lds
sbb
push
xor
roll
into
jg
mov
out
adc
call
push
jg
hlt
inc
cmp
into
push
adc
jno
jle
popf
xchg
mov
scas
sub
pop
idiv
es
add
adc
and
push
adc
rcl
dec
int
ficomps
cmp
pop
or
xchg
pop
in
adc
mov
shrl
jp
xchg
sarl
dec
mov
cmp
jg
pop
stc
jnp
jge
mov
ds
cmp
mov
xchg
dec
js
imul
push
outsb
push
xchg
jo
dec
ret
iret
not
push
test
test
push
mov
jp
and
jl
ljmp
dec
or
mov
aad
jge
repz
repz
push
les
sti
cmp
mov
rorb
xor
mov
imul
lea
jle
ja
int3
pushl
test
inc
dec
push
fisttps
add
insl
ja
sahf
and
inc
and
out
mov
cld
lret
add
push
cmp
rorl
inc
or
mov
sub
cmpsb
mov
arpl
sbb
sub
test
int
fiadds
push
adc
out
cmpb
jecxz
xchg
loopne
loop
sub
sub
mov
jmp
jg
mov
mov
rol
ds
in
push
sbb
imul
add
fildll
dec
push
mov
les
iret
adc
or
inc
adc
push
jns
jbe
cmc
loope
dec
or
xchg
push
lds
xchg
jb
sub
stc
fcomps
or
js
push
adcl
sbbb
js
cld
push
and
repz
inc
movsb
into
cmp
mov
dec
fsubrp
repz
dec
mov
xchg
loope
push
testb
sub
cwtl
add
xchg
std
dec
mov
or
fidivrs
pop
clc
add
fcmovb
push
sarl
mov
sub
xchg
or
movsl
jle
mov
std
out
inc
int
lods
cltd
rorb
xor
add
gs
mov
and
adc
mov
sbb
dec
or
pop
xor
add
sahf
fxch
fbld
sbb
cmp
daa
mov
adc
mov
dec
fwait
test
push
jbe
js
jae
cld
mov
push
cmpsb
adc
jne
nop
addr16
sti
pop
push
test
pop
negb
lods
push
pop
mov
insb
xor
nop
sbb
xor
cmc
int
xchg
dec
adc
outsb
lds
adc
mov
or
or
ss
mov
inc
sub
fwait
cmp
mov
in
or
pushf
cld
ret
jno
xor
dec
ss
nop
xchg
int3
movsl
mov
mov
imul
mov
test
lods
push
xor
mov
cmp
mov
rorl
clc
xchg
shr
xchg
cwtl
lret
mov
add
rclb
xchg
adc
xorb
jne
jbe
movsl
sahf
add
or
mov
sbbl
and
or
mov
pop
pushf
mov
call
movsl
sbb
and
and
in
loope
and
fcmovu
add
out
mov
inc
fiadds
cld
fcomi
mov
pop
popf
or
dec
mov
sbb
sbb
adc
jne
mov
cltd
inc
mov
and
out
pop
sahf
insb
cmp
mov
stc
ds
xchg
push
jbe
sbb
hlt
add
push
scas
push
pause
iret
cli
std
add
sbb
andl
aaa
mov
pushl
mov
popf
dec
pop
rcrl
mov
pusha
mov
bound
cmp
ret
or
jmp
xor
ret
inc
mov
mov
add
mov
pusha
jno
mov
push
adc
ljmp
sub
fnsave
push
lock
inc
out
clc
mov
sub
push
push
mov
push
cmpsb
xchg
mov
jp
sbb
ret
cmp
das
mov
pop
sti
sub
mov
lret
lcall
jae
mov
sbb
fwait
sub
les
inc
and
dec
push
aaa
mov
adc
pop
enter
jmp
pop
decb
scas
inc
int
xlat
xor
lds
xor
and
jne
pop
cmp
lahf
and
shrl
pop
adc
jae
out
and
es
adc
jecxz
lea
jae
mov
mov
push
lods
das
push
push
cltd
or
in
cmp
sti
clc
subl
dec
shll
push
push
fisubrl
out
cmpsl
fcmovne
sbb
adc
adc
outsb
and
nop
test
adc
sub
rorb
lret
ret
or
jmp
sub
imul
cmpsl
in
pushf
pop
sbb
dec
inc
sahf
fincstp
lret
cmp
ret
aad
mov
fisttpl
push
sbb
mov
js
push
lods
jno
test
test
xchg
out
lahf
pushf
lock
pop
mov
adc
inc
inc
add
inc
fcompl
sbb
pusha
fimuls
pop
nop
stos
mov
and
int
mov
lret
or
fwait
sbb
ja
jb
pop
xchg
int3
jno
cmp
mov
jnp
adc
pop
negb
pop
push
or
xor
sbb
or
aas
mov
cltd
and
cmp
subl
or
xchg
xchg
or
daa
push
adc
mov
adc
fnstcw
push
mov
rolb
out
in
pop
add
fdivrl
bound
fwait
jno
mov
inc
lret
xchg
inc
das
or
std
clc
testb
in
lods
and
shr
sub
mov
mov
stc
iret
xor
and
jmp
or
imul
hlt
mov
xchg
cmp
mov
rorl
lea
sbbl
jne
jge
cmp
jecxz
xor
into
inc
movsb
neg
dec
dec
cmp
push
scas
or
adc
gs
imul
repz
jmp
outsl
jmp
movsb
dec
out
jmp
cmp
xchg
das
and
fiadds
sbb
mov
fstps
and
dec
jge
pop
adc
pop
push
or
outsl
aaa
jnp
add
mov
sti
add
cmpsb
mov
push
les
or
jg
scas
mov
lret
push
and
outsl
and
sub
add
xor
mov
sub
clc
addr16
fdivrl
ss
orl
add
fadd
xchg
shrb
push
push
jmp
jmp
arpl
test
pop
and
icebp
scas
jb
jge
cmp
faddp
jecxz
sbb
fdivl
jmpw
jecxz
xchg
fstpt
sub
add
mov
sbb
sub
jp
pop
ds
and
das
mov
mov
lds
xchg
xor
or
iret
daa
or
mov
push
inc
push
pushf
and
sti
mov
push
pop
adc
dec
sub
xor
push
push
dec
fwait
pop
jae
cmp
out
lahf
fnstenv
xor
add
add
sar
je
imul
push
sub
pop
dec
filds
std
mov
push
es
pusha
mov
fndisi(8087
ljmp
cmp
in
sub
imul
repnz
inc
loopne
mov
addr16
mov
jmp
pop
jmp
inc
mov
inc
rorb
flds
sbb
and
pop
icebp
insl
pop
test
mov
or
mov
insl
out
outsb
ficompl
das
mov
fdivp
xchg
bound
jge
and
jae
adc
fs
loop
stos
sahf
or
sbb
mov
jge
xchg
or
dec
mov
sbb
fiadds
loop
in
sub
andl
sti
rcrl
rclb
mov
fstl
cld
mov
mov
test
call
repnz
sahf
or
jns
inc
pusha
movsb
sbb
shlb
jb
int
je
loopne
jp
dec
mov
mov
push
stos
shll
out
loope
push
mov
in
adc
pusha
insb
push
jmp
sar
shrl
enter
or
icebp
mov
dec
xchg
jo
jle
dec
mov
cmp
test
cmp
clc
in
arpl
cmpsb
clc
pushl
das
mov
fwait
ljmp
mov
leave
and
add
ja
mov
cmp
mov
jno
dec
add
mov
cmp
mov
ret
in
mov
loopne
cmc
push
in
subb
rcrb
mov
mov
jne
dec
pushf
pop
adc
in
int3
sub
in
sbb
ret
es
popa
loopne
mov
inc
adc
sbb
loopne
test
int
ret
jno
push
jg
movsl
add
sub
adc
dec
inc
scas
outsb
jbe
inc
cmpsb
gs
adc
leave
rcrl
dec
testb
inc
pop
pop
lahf
mov
out
lods
int
addb
push
rorb
pop
mov
in
pop
js
ror
pop
sbb
fs
jno
out
jl
xlat
or
cvtps2pd
mov
outsb
mov
add
dec
cmp
test
pop
push
out
movsl
inc
xchg
jp
aad
bound
nop
and
ss
lock
fs
pop
sub
cld
xor
mov
sbb
imul
pop
mov
dec
sahf
sub
cmp
lods
cld
mov
lds
pop
dec
stos
adc
xor
jl
das
rolb
xor
sbb
in
ds
mov
cmpsl
popw
scas
pop
and
pop
cmp
add
test
dec
iret
ficomps
dec
xchg
rclb
mov
sub
loop
xchg
aas
add
jle
inc
push
test
les
pushf
sbb
push
popa
clc
push
sub
push
mov
iret
das
aam
enter
sbb
dec
aad
cmp
and
adcb
xor
out
mov
mov
xchg
pop
std
lret
inc
decb
xor
push
inc
xor
inc
test
popf
jnp
pop
fsubrs
xchg
mov
cwtl
inc
cmp
sbb
loope
in
add
jae
jno
jo
xchg
test
jl
pusha
push
add
mov
mov
xor
jp
nop
lods
pop
fwait
in
inc
cwtl
andl
push
pop
cmp
sbb
xor
jnp
xlat
sbbb
adc
or
jg
negl
sbb
stos
cmp
shlb
lahf
adc
inc
pop
andps
ficomps
jmp
outsb
mov
test
cmc
in
popa
xchg
mov
cmc
or
lret
lock
in
sahf
add
ja
jnp
lods
cmpsb
adc
cmp
push
dec
mov
mov
and
repnz
mov
pop
fwait
aaa
scas
fdivrl
add
movsb
int
loope
adc
pcmpgtw
lret
testb
out
arpl
adc
inc
jbe
in
out
jo
addl
jl
daa
jbe
sbbb
xchg
push
pop
outsb
ret
push
push
stos
sub
pusha
and
nop
les
or
subb
insl
xor
cltd
mov
cli
xchg
pause
inc
inc
rorb
int
sbbb
adcl
mov
aaa
dec
loopne
fldcw
sbb
into
adc
je
cmp
idivb
js,pn
repnz
and
xlat
cltd
loopne
mov
cmp
jle
xchg
ss
int
push
daa
xor
and
cvtps2pi
outsl
test
scas
scas
rcrl
call
jp
in
cli
mov
ret
mov
pusha
cs
in
imul
cmp
mov
scas
rorb
xor
out
ja
stos
add
arpl
test
adc
jno
into
pop
xor
loope
mov
inc
add
pop
and
add
jecxz
and
jne
js
inc
sti
mov
stc
and
fadd
pop
pushf
push
sbb
scas
sti
inc
pusha
out
adcl
pop
cli
cmp
xchg
andl
mov
cli
sbb
and
js
dec
mov
aas
mov
lahf
xchg
loopne
lcall
cmp
dec
xchg
adc
mov
mov
adc
pop
sub
jecxz
or
rorl
sbb
fcmovu
shlb
mov
sub
lret
dec
sub
lret
jg
cli
sub
pusha
mov
inc
cmp
and
pop
dec
xchg
push
push
jns
mov
mov
cmp
jmp
incb
jo
and
jg
call
outsl
dec
mov
pop
mov
mov
xor
sbb
aas
cmp
insl
and
adc
negb
adc
daa
mov
imul
add
es
add
cwtl
inc
jecxz
fadds
xchg
testl
push
or
or
add
test
mov
or
imul
cltd
pop
dec
decl
sub
cmp
adc
jmp
stos
subl
inc
gs
cmp
xor
pop
repnz
cmp
push
mov
jbe
pop
push
jno
dec
dec
aad
add
inc
inc
jp
sbb
arpl
xchg
or
add
les
pop
test
jns
pop
sub
loope
mov
clc
pop
xchg
xor
jno
xchg
stos
imul
lcall
xor
push
lret
mov
int
jmp
xchg
sbb
cli
push
push
xor
stc
inc
icebp
mov
pusha
adc
push
cwtl
in
out
mov
dec
mov
adcb
cld
xchg
add
mov
daa
fadds
cmp
adc
outsl
mov
adc
mov
sbb
sub
enterw
das
in
sub
adc
out
pop
in
xor
fs
mov
mov
xchg
xor
and
or
in
cli
test
fcmove
sarl
jo
xor
out
xor
es
xchg
sbb
repz
mov
mov
push
pop
decl
jl
inc
or
dec
adc
cmp
pop
out
sub
shll
gs
mov
fsts
fcmovnb
data16
xor
arpl
dec
in
push
out
hlt
pop
lods
out
icebp
inc
stc
in
vfrczss
lret
clc
mov
fsts
test
inc
arpl
fs
xchg
movsb
mov
cmpsl
das
xchg
aam
sarl
repnz
in
mov
stc
add
adc
jecxz
mov
stc
jb
mov
mov
rcl
mov
jmp
rol
or
aad
or
lods
adcb
jns
insl
jb
xor
push
mov
add
sub
inc
ret
aad
push
inc
dec
rcll
pop
fs
cmp
lock
insl
popf
lock
push
cmpsb
aad
mov
inc
and
cmpsl
inc
ret
dec
addr16
fmul
lds
fnsave
adc
imul
jns
sarb
cmp
fs
sbb
js
mov
mov
dec
xlat
nop
repnz
mov
push
jb
add
scas
xchg
add
adc
mov
int3
and
cltd
add
mov
fsubr
jb
dec
mov
out
push
adc
xor
pop
or
cmp
jnp
int3
jecxz
pop
popf
adc
mov
leave
repz
mov
addr16
or
cmp
and
mov
lret
mov
jg
es
push
cld
mov
into
lods
mov
es
add
inc
push
nop
iret
push
pop
ja
adcb
shlb
push
insl
xor
addr16
push
xor
outsb
ficoml
in
mov
adc
shlb
pop
mov
clc
dec
sub
mov
ja
call
sbb
sub
es
ret
xchg
and
jae
xor
or
adc
repz
inc
jge
shrl
stc
pusha
push
xor
fisttpll
rcrb
dec
xor
mov
daa
pop
daa
mov
xor
aam
sbb
xchg
jo
xchg
cmp
mov
repnz
inc
dec
mov
pushf
push
sahf
fwait
mov
mov
scas
xlat
or
loopne
adc
push
mov
xchg
ret
bound
test
call
outsb
popl
mov
inc
add
jae
xor
les
gs
push
jge
pushf
shl
cs
sbb
out
dec
outsl
mov
sub
sbb
popf
out
mov
pop
dec
mov
lret
xchg
repnz
xchg
rolb
iret
mov
scas
and
cmc
add
test
push
add
jg
dec
enter
decl
sbb
xorl
fstl
mov
pushf
xchg
xchg
and
dec
cmpsb
push
xor
dec
in
cwtl
fistpll
fistps
sub
pop
and
outsb
orb
adc
push
orb
jp
sub
xchg
sahf
icebp
sahf
mov
lahf
mov
andb
jmp
mov
mov
jl
jae
xlat
and
das
call
repnz
xchg
clc
pop
lods
sub
and
aad
adc
mov
mov
scas
loope
push
scas
jle
pop
jge
mov
sub
bound
call
pop
cmp
imul
cmc
pop
lds
out
lahf
xor
pop
ds
inc
push
inc
clc
adc
popf
mov
adc
push
jne
dec
stos
ret
mov
jmp
leave
aam
insl
cmp
icebp
jmp
stos
icebp
sub
fdivs
sub
pushf
pushf
cmp
xor
adc
mov
sbb
stos
inc
not
xor
outsl
test
push
push
scas
sbb
out
jmp
aas
movb
mov
inc
divb
sub
cwtl
and
push
fcmovnb
in
sub
sbb
scas
ja
sahf
pop
aas
mov
push
stos
sti
add
adc
push
pushf
sbb
inc
push
dec
loope
test
sub
xchg
pop
cmp
sti
pop
aam
je
xor
mov
les
pop
pop
insb
add
in
xchg
fbstp
dec
das
sub
cmc
push
lods
inc
pop
push
cli
mov
or
fwait
mov
ds
inc
idivb
out
sbbb
mov
add
add
pop
subb
mov
scas
mov
lods
mov
jecxz
or
movsb
cmc
mov
mov
add
and
shr
pop
movsb
adc
mov
push
roll
and
ja
nop
pusha
mov
sbb
into
inc
mov
cmc
pop
xchg
jecxz
push
fcomps
mov
mov
adc
aaa
pop
lret
inc
aam
mov
fwait
pop
stos
test
in
jle
stos
sbb
mov
push
aas
test
iret
mov
mov
mov
inc
fiaddl
cmp
mov
gs
sbb
jnp
xchg
mov
repnz
and
cmp
or
sbb
sbb
outsb
adc
mov
out
push
mov
adc
aad
dec
xor
sub
cmc
mov
sbbl
fucomi
jg
jb
or
mov
and
pop
mov
loopne
sar
add
lods
repz
xor
add
pop
and
out
roll
clc
fcmovbe
mov
pushf
lahf
mov
fdivrp
sahf
into
addr16
mov
stos
adc
out
sti
jns
pop
lcall
ret
pop
cwtl
jno
sarl
cmp
jae
in
cs
lahf
loopne
push
push
add
je
das
push
fisubrs
adc
add
push
movsb
negl
cld
jne
call
ljmp
call
mov
pop
xchg
bound
mov
mov
xchg
sti
jbe
mov
lds
cmp
sub
xchg
dec
adc
add
inc
sarb
sahf
jl
fwait
mov
add
jns
sub
push
in
dec
xchg
out
loope
sti
subb
lret
sbb
mov
cmovns
push
pop
and
dec
mov
push
mov
pop
jae
add
pop
inc
mov
lcall
pop
iret
mov
lods
adc
add
ljmp
cmpsl
mov
xchg
mov
xor
mov
pop
mov
loope
imul
addr16
dec
movsl
call
fsubrl
mov
adc
fadd
ja
mov
push
xchg
push
add
mov
cwtl
lds
mov
cmp
cmp
das
ja
sub
aaa
adc
adc
sbb
cmp
cmp
inc
dec
rol
in
insb
cld
add
and
inc
push
jl
mov
xor
pop
mov
lret
add
dec
imul
lret
jns
jbe
scas
shrb
and
lea
push
jnp
rcl
das
cmp
jg
imul
sub
inc
add
cmp
cmc
aam
movsl
inc
jae
test
rol
and
aad
or
pop
sbb
push
scas
call
decl
adc
aaa
aam
sub
scas
xor
out
push
xorb
jo
sub
dec
xor
xor
mov
mulb
in
out
jg
jmp
mov
cmp
into
sarl
push
dec
clc
clc
movsl
hlt
xor
test
out
adc
pop
push
xchg
or
daa
push
into
fdivrs
push
add
mov
cmpsl
push
stc
dec
xchg
cmp
int
mov
xchg
pop
orb
push
mov
in
adc
adcl
insb
sub
aaa
sub
xchg
xor
repnz
decb
fcmovu
arpl
mov
loop
cmp
add
dec
stos
fiaddl
ss
es
out
mov
iret
ret
testl
leave
lock
fwait
pop
stos
jg
repz
aas
test
int
fnstenv
out
mov
mov
or
sub
cmpsl
xchg
pop
in
aad
lcall
xchg
cmp
idivl
or
loope
cli
dec
aam
jo
mov
xchg
and
lods
or
mov
sbb
add
test
repnz
mov
inc
mov
addr16
gs
pand
or
cltd
vmovntps
push
cli
push
ret
jl
jb
xchg
xchg
or
push
xor
movsb
push
out
scas
int3
cs
dec
daa
and
ja
test
rolb
loope
dec
cwtl
sbb
lcall
inc
pop
cmovno
fsubs
mov
test
out
in
scas
add
repnz
movsb
in
push
fstps
lcall
xchg
push
mov
insl
push
popa
and
sar
jb
mov
nop
repnz
or
mov
fwait
outsl
xchg
mov
and
mov
inc
xor
jmp
mov
les
leave
jp
rcrl
pop
call
jmp
jne
sti
dec
and
adc
mov
pop
pop
cmc
rorb
and
fnstenv
dec
cmp
xor
xor
xchg
lock
mov
pop
jnp
cmpsl
push
dec
inc
add
jns
scas
push
pop
add
adc
jb
rdtsc
jno
mov
cmpsb
jmp
mov
sti
pop
pop
dec
lock
clc
cwtl
subl
mov
push
arpl
xchg
out
pop
ret
mov
lods
inc
test
jb
adc
fs
mov
out
push
xlat
loope
fdivrp
hlt
sub
xlat
sahf
fwait
sbb
sbb
mov
aaa
nop
enter
sbb
push
sub
mov
sub
addb
clc
push
imul
pop
pop
dec
div
or
mov
adc
outsb
or
mov
lods
pop
pop
loopne
xor
sub
loop
dec
fstl
test
jl
mov
push
fsubs
sbb
xchg
hlt
jbe
dec
push
fsubrs
xchg
pop
jo
pusha
test
dec
movsl
fstpt
and
adc
push
mov
inc
mov
aaa
pop
fists
pop
jmp
xor
repnz
popa
movsb
pop
pop
lock
cmp
mov
xor
lods
push
aad
sti
sub
xchg
inc
pop
loop
test
in
mov
mov
cmpl
loop
lret
in
jae
ja
aaa
aam
inc
sub
sub
in
dec
adc
sbb
popa
lcall
shl
xor
shlb
jno
inc
je
mov
pop
cli
stc
sub
push
add
push
lret
notl
cmpsb
mov
cmp
fsubrs
movsl
inc
xchg
xor
inc
and
ja
push
xor
inc
push
or
dec
cmp
add
jb
sbb
in
cmpb
popf
jb
adc
lds
xchg
sub
and
mov
xor
mov
daa
xor
adc
test
sbb
ret
ljmp
and
lds
jmp
pop
ss
leave
jmp
cmp
imul
hlt
std
mov
pop
and
cld
mov
jo
popf
movsl
gs
in
mov
sub
mov
jae
add
cmp
mov
mov
push
or
push
mov
mov
cmpl
mov
dec
mov
xchg
jg
jge
jp
dec
inc
pop
es
cli
hlt
mov
dec
es
or
xor
fiadds
dec
mov
call
sbb
shlb
out
add
xchg
pop
imul
jns
clc
push
cwtl
leave
in
pusha
clc
cwtl
stc
mov
xchg
stos
inc
xchg
hlt
dec
add
pop
inc
sub
push
fnstsw
arpl
pop
loopne
or
pop
mov
fcom
in
sbb
int
mov
sbb
inc
and
dec
ds
dec
xor
pop
jnp
insl
fsubr
lock
sbb
fcoms
add
dec
jg
mov
sub
and
test
aaa
lret
add
pop
push
in
xchg
lock
lods
mov
jb
nop
imul
add
pushl
cmp
ss
les
rorl
and
cld
inc
inc
cmovne
mov
inc
pop
rcr
mov
sub
pop
stc
sbb
mov
test
arpl
cmp
int3
out
enter
push
adc
lcall
inc
orl
jg
out
cmp
adc
enter
clc
sub
repnz
scas
xor
sti
je
lret
sub
mov
imul
xchg
xchg
ret
jns
push
mov
ja
sub
test
insb
lods
aas
or
in
lods
sbb
jge
jo
add
or
push
mov
xor
into
pushf
lcall
push
mov
xchg
hlt
rcr
push
lret
outsb
and
sub
mov
js
je
subl
add
jl
lahf
repz
lcall
test
adc
mov
dec
push
mov
icebp
lock
cmp
leave
lcall
rcr
mov
sbbl
or
jecxz
clc
xor
mov
imul
fwait
mov
das
jno
adc
pop
add
ficomps
xor
ret
sub
loopne
pop
push
iret
shll
dec
ret
xchg
fwait
inc
add
cwtl
aad
xor
insb
call
loopne
push
nop
dec
aas
adc
xchg
xchg
dec
sub
int
jle
dec
inc
fmuls
out
pop
mov
int
sahf
add
shl
push
shl
mov
sbb
dec
add
data16
cmpsl
mov
mov
jge
fidivrs
add
ret
sbb
shufps
dec
add
jle
jg
scas
das
in
add
mov
ja
xor
pushf
mov
in
rcrb
rclb
adc
test
push
jg
in
add
inc
test
cmp
stos
lcall
cmpsl
push
fs
scas
inc
pushf
mov
add
xor
pop
ficoms
or
sub
mov
mov
out
pop
lea
mov
jne
xchg
hlt
fs
dec
lods
jle
das
xchg
adc
cltd
aas
fcomps
jp
inc
mov
push
out
sub
adc
cwtl
es
cs
xchg
mov
jmp
out
xchg
cld
xchg
sbb
in
mov
fimull
pop
ds
sysenter
push
test
stos
add
fadds
xor
mul
cli
jnp
in
mov
fdivrs
movsl
ds
sbb
lods
test
mov
ret
call
ljmp
or
ret
mov
out
sbb
pop
xchg
gs
lret
mov
iret
out
dec
mov
mov
dec
xlat
cs
sbb
mov
ret
loop
add
leavew
jae
sbb
push
sub
pop
jecxz
mov
enter
mov
lea
sub
push
shr
ljmp
xchg
stc
mov
loop
out
jp
ds
mov
mov
pop
mov
xchg
xchg
dec
popf
lret
xchg
xchg
ficoml
cmp
rcrl
adc
inc
dec
push
les
test
adcb
sti
adc
mov
iret
divb
andb
pop
mov
rcr
mov
mov
and
sbb
imul
shlb
xor
fs
dec
mov
je
out
xor
or
cmp
gs
loopne
pop
xor
cmp
cmpsb
incb
add
lret
lock
sahf
test
push
rolb
mov
adc
sbb
je
jns
pop
std
pop
mov
gs
clc
loope
xor
xchg
pop
std
push
shll
cli
xchg
sbb
jne
push
imul
inc
dec
cmp
es
jns
add
push
xchg
mov
ret
iret
sub
xchg
xchg
xchg
inc
or
or
icebp
imul
or
jmp
push
shll
jne
or
out
xlat
aam
aaa
jbe
pop
test
lahf
ja
dec
test
sub
mov
mov
sub
sub
sbbb
and
push
cld
ljmp
fld
je
hlt
popa
jno
gs
dec
mov
popa
mov
repnz
mov
sbb
inc
outsb
mov
add
mov
inc
out
sbb
mov
cltd
xor
pusha
incb
push
push
lea
mov
jmp
cmp
inc
inc
fs
mov
push
mov
stos
jb
pop
mov
rcrl
jp
jl
sti
xor
dec
sub
int
add
js
popf
mov
lahf
fisttpl
ljmp
mov
mov
cmc
mov
lret
js
jbe
sub
jge
xchg
data16
pop
andb
lock
lret
sti
or
aaa
jo
fs
outsb
and
jns
add
rcrb
lods
xchg
add
dec
out
sahf
aas
pop
jns
std
mov
in
dec
mov
and
sub
xchg
lds
dec
pusha
jmp
ret
lcall
mov
ss
cmp
sub
add
sahf
cmp
popf
dec
inc
add
fiadds
push
cmpsl
pop
pop
int
dec
sbb
test
xor
sub
je
fisttpll
fmulp
jo
xor
rcl
loop
iret
insb
mov
sub
xchg
bound
gs
sub
call
xor
ret
mov
xor
andb
xchg
cmp
loop
push
fsubrl
and
fsub
loop
out
sub
xor
aas
add
cmp
in
dec
insl
and
scas
scas
stos
or
movswl
scas
xor
in
clc
sysret
xchg
fidivrl
rol
sub
cmp
js
mov
dec
insl
je
subl
or
xlat
mov
sub
mov
xchg
popa
push
xchg
shr
call
push
pop
mov
pusha
pop
dec
in
or
mov
ja
adc
lods
mov
dec
push
orl
mov
jbe
jl
sarb
rcr
outsl
clc
mov
dec
faddl
das
dec
mov
cmc
in
inc
aaa
nop
mov
xor
fistpl
mov
sub
sbb
mov
xchg
adc
inc
pop
and
sub
stos
cmp
lcall
mov
mov
dec
stc
aas
sbb
sub
fcom
out
pop
movsb
xchg
inc
add
xchg
inc
stos
xor
push
clc
sub
cmpsl
cmp
sub
in
inc
mov
xchg
sub
jl
or
push
nop
leave
mov
sbb
sub
mov
jecxz
call
inc
mov
mov
inc
cmpsl
push
dec
and
add
loop
and
pop
sti
mov
mov
test
pop
test
cmp
insb
cltd
mov
and
frstor
mov
pop
in
ss
jb
mov
xor
loopne
push
dec
mov
ret
mov
lods
daa
or
inc
notl
setne
cmp
cmp
loopne
cmp
ljmp
push
gs
lret
or
inc
fisttps
push
pop
sti
push
outsl
pushf
mov
mov
push
cmp
sub
push
cmp
call
lea
cmp
jl
test
ljmp
loop
push
xchg
sarl
dec
sbb
sbb
sub
sub
aam
outsl
jge
mov
adc
clc
fs
cs
es
and
in
bound
cmpsb
cmp
or
pop
or
xchg
xchg
mov
int3
xor
hlt
out
sbb
in
add
pop
add
aam
cmp
mov
loope
pop
or
add
ret
popf
scas
rcll
movsl
adc
ret
lahf
fld
mov
aad
pop
enter
sub
js
addr16
test
mov
jg
outsb
stc
int3
xchg
nop
lahf
insb
je
aam
cld
jmp
roll
std
push
lcall
dec
ficoms
andb
dec
stc
xchg
inc
icebp
xadd
jecxz
test
jno
stc
dec
std
shl
aaa
fistpll
into
add
idivb
scas
data16
cmpl
jnp
pushl
xor
jne
mov
cmp
push
cmc
js
dec
pop
sbb
push
sbb
xchg
cmpsl
fs
sti
inc
cmc
adc
adc
mov
sub
aam
cmpsb
repz
push
stos
add
mov
push
inc
xor
sub
std
or
mov
pop
insb
jbe
push
inc
pushf
or
mov
xor
pop
xchg
out
mov
xor
mov
cmp
sub
mov
push
pop
inc
sbb
dec
push
fnstcw
mov
and
int
or
pop
cmp
jbe
aas
out
mov
and
jne
lret
jl
aam
stos
lock
cmpsb
sub
mov
push
jge
sbb
mov
xchg
or
rorl
call
jmp
push
pusha
sub
lahf
je
lret
pop
jmp
adc
lds
out
or
outsl
xchg
mov
sub
movsb
and
sbb
fcomps
ss
dec
inc
mov
in
mov
jne
mov
es
call
mov
jne
dec
scas
cmp
setle
in
pop
mov
aaa
std
test
js
mov
dec
jo
sub
outsl
adc
loopne
inc
imul
lret
xchg
std
pop
enter
push
mov
div
add
dec
xor
rclb
jmp
mov
in
sub
push
mov
leave
ja
std
ss
in
inc
hlt
stc
push
arpl
push
xlat
test
cmpsb
popa
lods
jne
mov
icebp
ja
sbbl
rcrl
das
cmp
add
in
cltd
or
add
mov
jbe
dec
mov
mov
ficompl
sbb
dec
mov
mov
lret
int
and
lds
divb
sub
pop
cmpsb
dec
icebp
sub
fcmovnbe
in
push
sub
lock
std
lods
scas
lds
sbb
push
js
repnz
enter
in
adc
loopne
sti
aas
dec
faddl
je
sub
lret
mov
xor
xchg
adc
sub
push
jo
or
pmullw
out
jo
lods
dec
xor
jo
lds
dec
jno
adc
in
sti
in
enter
ror
mov
ret
test
and
popa
xlat
imul
shrb
xor
push
lods
push
scas
pop
adc
into
inc
out
adc
mov
addl
and
fcomps
ljmp
fadds
out
mov
mov
cltd
xor
jg
mov
sbbl
xchg
roll
inc
inc
pop
in
fdivl
dec
ja
push
jp
mov
jbe
mov
cmp
xchg
mov
add
mov
push
fimuls
push
jnp
mov
imulb
jl
arpl
adc
scas
lret
and
out
arpl
das
xor
mov
lea
mov
mov
sbb
jecxz
call
push
pop
test
adc
test
shl
test
loope
scas
xor
mov
and
pop
lds
lret
mov
xchg
jno
lock
push
inc
in
jo
orl
test
bound
push
insb
push
adc
lods
faddl
and
push
mov
mov
push
add
sub
xchg
xchg
push
xorb
repnz
add
or
dec
pop
mov
cs
mov
fldcw
fcmovne
inc
mov
mov
mov
or
jae
jns
sysenter
adc
inc
in
or
push
jp
mov
adc
cmpsb
jle
xchg
out
inc
loope
scas
pop
aaa
add
ja
jae
movsl
add
add
cmp
imul
adc
sti
enter
mov
lods
add
jge
mov
in
push
movsl
push
or
xchg
inc
pop
fisttps
sub
aam
pop
sahf
setae
cmp
jbe
jno
xlat
scas
cmpsb
pop
mov
out
jne
xchg
jne
adc
ljmp
sbb
lea
inc
cmp
sbb
shr
sahf
rclb
push
push
pop
data16
jbe
addl
nop
sub
out
mov
lret
cmp
sub
arpl
stos
call
iret
mov
loope
mov
mov
mov
das
into
pop
xchg
xor
lods
pop
pop
outsb
push
int
test
dec
jnp
iret
inc
sbb
out
fbld
mov
in
jl
aad
int3
pop
notb
and
mov
adc
push
into
cmp
testb
xor
pop
pop
leave
jle
shll
lods
inc
sbb
inc
adc
rorl
repnz
out
andb
sub
shlb
xchg
into
sahf
mov
cs
mov
je
ret
xchg
jl
jbe
in
jne
and
mov
fimuls
and
adc
mov
arpl
sub
push
jo
jb
jl
cmpsl
mov
cmp
fnsave
lcall
push
ret
jge
ja
insl
les
mov
or
jae
test
leave
pop
dec
scas
jbe
aam
cmp
divb
add
add
subl
nop
dec
jecxz
cmpsb
sti
add
scas
pop
xchg
cld
nop
sub
dec
lret
cltd
aas
mov
mov
lods
sbb
cmp
out
push
aad
cmp
nop
fimuls
xchg
xorb
add
jmp
lods
add
inc
subl
out
push
sbb
jne
dec
jecxz
push
out
pop
fucom
ret
sti
sub
pop
sub
roll
lods
fsubs
xchg
ret
inc
rcrb
add
push
mov
dec
fildl
mov
jl
and
add
into
jecxz
andb
cmp
or
in
loopne
jo
push
mov
mov
jbe
mov
xchg
cwtl
pop
aad
cmpsb
sti
lcall
iret
sarb
mov
xchg
push
dec
jge
into
mov
sbb
outsl
bound
in
pop
stc
cmp
jp
aaa
sahf
out
into
imul
sbb
sub
cmp
xor
mov
jge
xchg
fs
jne
stos
insl
js
jg
push
push
addr16
pop
iret
pop
aas
mov
and
scas
or
push
leave
mov
mov
jns
cmp
loop
sub
sbb
lret
cmpsb
mov
mov
gs
jge
or
lods
xor
xchg
push
sbb
je
xrelease
cmpb
jne
fs
push
pushf
adc
adcb
arpl
add
lea
mov
mov
int
pop
sahf
lcall
pop
cwtl
imul
xchg
mov
adcb
adc
je
adc
push
stos
push
xor
push
cmp
pushw
adc
push
pop
test
push
jno
dec
pop
faddp
dec
out
jecxz
fbld
xor
cmp
pop
mov
push
push
jo
cmpsl
repnz
xlat
vmwrite
ja
xorb
cwtl
pop
jns
adc
loopne
inc
push
ret
in
fstp
stos
loop
xchg
push
ss
sbb
inc
inc
aad
or
mov
fs
flds
mov
pop
push
outsl
inc
addb
call
sbb
stos
ljmp
xlat
mov
mov
xor
imul
cltd
or
bound
add
fiaddl
xor
jns
mov
jmp
lock
fsubl
cmpsl
push
lock
xor
mov
mov
xor
cmp
sub
movsb
jno
dec
ficompl
std
ljmp
push
pop
xchg
xchg
bound
lret
in
sti
test
lock
xchg
pop
cwtl
adc
out
and
pop
in
enter
sbb
xor
add
adc
inc
mov
in
cmp
mov
repz
shrb
rorb
add
fsubrp
xchg
int3
xchg
jae
mov
movsl
mov
jg
xchg
lods
jb
mov
cbtw
adc
rorb
sub
cli
addr16
adc
push
xor
fdivrs
adc
xor
stos
in
iret
dec
movsl
or
xchg
movsl
ret
mov
adc
mov
clc
jae
push
std
pop
dec
jge
aas
test
cmp
ret
xchg
and
mov
pop
push
test
or
ret
movsb
scas
jmp
mov
push
fmul
push
mov
outsb
lds
icebp
pop
stos
pushf
pop
push
jbe
cmp
mov
xorps
out
jb
out
int
dec
jle
pop
rclb
test
xor
into
sarb
stos
pop
out
cmpb
stc
jb
push
mov
cmp
movsl
je
fwait
lods
pop
xor
xchg
lcall
movsb
sahf
dec
adc
or
jl
pop
imul
leave
cmpsb
daa
dec
adc
stos
xor
lds
xor
adc
cld
bound
cmpsb
xor
addb
add
movsb
cltd
into
push
mov
xlat
pop
push
sarl
testb
inc
aam
jo
sub
mov
mov
push
stos
test
add
jp
push
push
scas
cli
rcl
rolb
xor
jle
mov
or
or
push
lea
dec
insb
dec
repz
popf
mov
xchg
mov
mov
lea
sbb
stos
inc
mov
out
dec
mov
sbb
lock
lds
sub
pop
es
clc
andl
rcr
pop
scas
lods
add
aad
test
cwtl
add
nop
adc
pop
push
push
ja
aas
pop
in
pop
dec
js
inc
or
test
mov
shlb
fiaddl
pop
xor
lahf
test
mov
jnp
jecxz
xor
mov
pop
and
out
mov
pushf
adc
lods
sbb
ljmp
mov
mov
push
loopne
sbb
scas
ss
inc
fidivl
int
push
xchg
incb
in
sti
imul
in
add
cmpsl
adc
mov
lcall
jns
call
jg
push
cmpsb
repnz
sub
test
adc
xchg
lods
cmp
lock
fs
jge
lcall
dec
xor
aad
rclb
adc
add
add
sbb
cmp
inc
mov
and
mov
mov
mov
sahf
dec
adc
aaa
in
add
daa
sbb
lds
jecxz
ret
ret
sub
cmpsl
fldt
cmp
xchg
and
cltd
pusha
out
popf
push
or
inc
inc
mov
pop
fisubs
push
into
loop
js
lret
cmp
xor
xor
xor
insl
inc
mov
xor
xorb
es
sahf
cmc
ljmp
test
inc
ffreep
cwtl
inc
sbb
adc
mov
mov
sub
adc
incl
and
inc
inc
jge
mov
ret
gs
fs
pop
xor
push
fwait
scas
inc
add
les
sbb
mull
cltd
push
jmp
movsb
lods
mov
test
sub
jl
stos
and
stos
rolb
les
arpl
or
lock
pop
pop
pusha
jbe
sbb
dec
mov
aas
mov
inc
icebp
mov
fnstcw
pop
sbb
cmp
dec
jne
mov
cmp
mov
in
ljmp
and
mov
ljmp
fiaddl
dec
push
lret
dec
lods
jno
adc
pop
add
sub
sbb
sbb
inc
push
mov
push
mov
adcl
cmp
repz
jb
push
cmp
sub
or
out
push
adc
mov
subl
adc
insl
mov
and
cmp
cld
sub
dec
shll
xor
js
hlt
lcall
std
mov
or
lds
or
jno
outsl
fwait
or
sub
adc
push
jp
loop
cmp
daa
jae
fwait
cld
push
mov
rcrb
repz
mov
in
pushf
test
loope
outsl
pop
shll
jnp
sub
shll
aam
pop
xchg
mov
dec
jbe
hlt
in
pusha
in
xchg
push
push
jb
sub
or
cmp
fstp
sbb
jo
les
adc
out
fwait
cmp
lahf
mov
fdivl
mov
out
xor
xchg
jg
dec
jmp
mov
and
push
iret
pushf
dec
lds
aad
mov
jmp
mul
push
xchg
dec
push
fwait
sub
cli
xor
mov
in
and
or
mov
push
sbb
pop
xchg
enter
xchg
and
mov
neg
pop
mov
sub
pop
cmp
lds
outsl
jno
push
pop
inc
cmp
jno
scas
int3
mov
mov
cld
pushf
dec
mov
aad
test
or
rcll
repnz
enter
dec
xor
lret
fcompl
cmpsb
jl
push
int
ficompl
inc
call
add
push
or
or
iret
sahf
pop
push
jb
sub
imul
fcmovnu
xchg
mov
aam
out
xor
jmp
lretw
and
das
ffreep
pavgw
outsl
sbb
or
call
push
xchg
lods
or
push
je
sbb
loopne
lcall
scas
push
jbe
aaa
js
mov
push
xor
xor
ljmp
jmp
jb
mov
ljmp
add
pop
rcr
rclb
int3
adc
mov
dec
xlat
out
in
loop
test
mov
jecxz
inc
lds
divb
mov
aad
jno
cmp
or
mov
sbb
cld
imul
stos
int3
test
lret
add
addl
adc
sub
sub
gs
push
test
and
xor
xor
sub
in
call
and
aam
loop
rcrl
jge
test
ss
jns
mov
not
and
xchg
test
inc
int3
mov
insl
add
loop
ror
aad
loop
shr
or
or
sbb
cmp
mov
fcompl
mov
imul
sti
inc
mov
jnp
ret
mov
mov
sub
dec
fldt
shlb
int
jne
sub
fwait
mov
repnz
lods
jnp
jecxz
xor
lea
int
das
mov
xor
sarl
xor
scas
rol
cmp
inc
cmp
sub
int
clc
mov
add
imul
cmp
in
fildl
lds
fbstp
cli
fldenv
xchg
insl
enter
adc
fwait
ss
cld
clc
xor
sub
jns
dec
pop
fs
jle
sub
pop
cltd
and
fidivs
ss
sbb
and
stos
pop
fistpl
push
jae
or
jns
int3
jnp
je
aam
lea
lea
mov
push
cmp
push
imul
add
ljmp
aas
mov
arpl
cmp
sbb
pop
aas
push
lds
jbe
jge
mov
test
bound
daa
je
xchg
inc
ja
cmpsl
jmp
insl
ret
daa
mov
movsl
ds
xchg
out
out
jmp
dec
cmpsl
add
repnz
mov
adc
add
imul
mov
sbb
fildl
lahf
repz
dec
jbe
insl
das
xchg
cli
stos
inc
jmp
mov
jno
push
sarl
cmpsb
jmp
arpl
orl
inc
imul
hlt
lods
push
testl
jnp
or
inc
jnp
mov
push
stc
xchg
mov
sbb
xchg
push
ljmp
nop
mov
in
inc
leave
hlt
sub
pop
push
pop
mov
enter
fimuls
in
loopne
daa
sub
sbbl
sbb
add
xchg
add
jmp
shll
cltd
jne
mov
mov
or
jb
cmp
push
mov
dec
mov
jecxz
in
idivl
fcompl
and
mov
jle
mov
xchg
fdivrl
shll
push
and
imul
cli
pavgw
adc
mov
mov
inc
test
cwtl
insl
mov
faddp
push
scas
push
int
orb
lsl
vmovhps
pop
or
repnz
dec
pop
xorb
aad
cs
repz
int3
outsb
add
jge
mov
inc
fsubr
ds
repz
inc
out
and
jl
cmp
enter
mov
nop
cmp
push
std
inc
mov
mov
dec
xchg
popf
inc
fbld
cmp
jle
loope
mov
ljmp
pop
cwtl
xorl
push
rcr
xor
mov
imull
push
orl
ret
add
movsl
xchg
das
fldt
sub
les
shl
cmp
jmp
push
mov
cmpsl
inc
dec
xchg
iret
cmp
cld
std
mov
mov
mov
popf
sub
idivl
or
shll
mov
outsl
call
pushf
push
dec
cltd
mov
pop
sbb
adc
jbe
mov
in
xlat
sbb
inc
xor
sahf
insl
bound
add
imul
daa
jg
imul
scas
repnz
out
inc
fidivrs
add
imul
adc
test
cwtl
jbe
and
xor
nop
mov
xchg
or
cmp
in
xor
mov
cmp
ret
dec
xchg
mov
and
xchg
outsb
stc
aaa
xor
mov
stc
mov
in
mov
mov
lods
std
mov
mov
mov
or
sub
iret
and
addb
loop
or
idivl
pop
jl
insl
sahf
adc
add
xchg
push
lock
insb
andb
out
adc
in
loop
nop
sbb
fwait
testl
xor
mov
cmp
ds
test
pop
iret
or
cltd
add
adc
mov
push
and
xchg
imul
insl
dec
lcall
ss
mov
pop
and
inc
xchg
iret
ljmp
dec
and
lret
inc
cs
lea
lahf
jns
pop
aas
or
mov
movb
sub
ds
popf
mov
cmp
push
mov
inc
mov
sti
inc
testl
pop
and
push
xchg
push
and
sbb
dec
ret
mov
lahf
push
sub
lret
xlat
in
push
nop
int3
and
xchg
stc
arpl
lds
hlt
loop
les
add
iret
mov
mov
dec
add
sti
mov
out
mov
loop
in
cmp
scas
xchg
or
jp
sbb
push
fisubl
cwtl
imul
in
mov
xchg
xchg
add
dec
cmp
insl
cmp
cmp
aam
cwtl
pushf
or
test
mov
push
mov
sti
push
loopne
xchg
push
ljmp
nop
push
out
cli
mov
push
bound
push
jae
sub
mov
xchg
repnz
lods
mov
sbbb
mov
jmp
lret
jecxz
xchg
xchg
cmp
xchg
and
iret
inc
je
mov
cmpsb
iret
add
xchg
lock
add
xchg
mov
das
mov
repz
jmp
lahf
mov
les
dec
sub
add
inc
notb
jae
push
rclb
dec
xor
cwtl
add
arpl
and
fcomip
loop
mov
jnp
sbb
mov
es
lahf
mov
fs
loop
arpl
js
dec
cmp
jl
inc
mov
inc
sarl
jmp
pop
iret
dec
ficoml
fisubrs
cld
cli
adc
aam
jecxz
cmp
inc
sub
jae
xchg
lahf
xchg
cmp
clc
mov
jge
test
dec
jnp
fldt
inc
ret
push
jl
sub
call
je
cmpb
or
daa
popf
and
ss
jo
adc
fidivrl
sbb
pop
mov
or
in
iret
dec
data16
dec
loopne
push
jbe
dec
inc
fdiv
push
add
shlb
in
les
cmp
sbb
scas
inc
in
outsl
arpl
cmpb
mov
cmp
adc
loopne
push
lret
out
aaa
aas
mov
mov
imul
sbb
mov
std
lods
fwait
cmc
insl
pop
cld
sub
in
push
sbb
outsl
or
cmp
cmpsl
imul
nop
sbb
adc
ds
repnz
lret
inc
mov
in
cmp
pusha
fdivs
jmp
dec
pop
cltd
stos
mov
into
pop
hlt
xor
shll
neg
inc
js
into
mov
cmp
fs
mov
repz
push
pop
stos
sub
imul
push
das
mov
mov
pop
xchg
mov
movsb
aam
mov
test
ja
dec
xchg
jecxz
loopne
movsb
mov
inc
mov
xchg
cmc
push
fsts
cmp
call
lds
lret
lret
icebp
mov
dec
in
xor
or
ret
pop
dec
das
fisubrl
fidivs
mov
aaa
xchg
dec
push
sub
dec
cmc
rclb
cli
cli
jns
int
or
cld
data16
or
shlb
or
xor
mov
dec
pop
pop
add
ret
or
pop
je
hlt
mov
call
je
cmpsb
rol
and
stos
cmpsl
daa
cmp
ret
adc
add
stc
loopne
int3
js
mov
and
sbb
xchg
dec
inc
andl
mov
jmp
cltd
fisttps
and
int3
or
jg
mov
dec
enter
hlt
das
push
mov
out
xchg
sbb
push
pop
jge
shrl
imul
out
sbb
sub
dec
outsb
mov
dec
add
dec
jmp
cmp
mov
sbb
test
mov
sub
das
mov
or
mov
call
or
in
mov
sbb
roll
outsl
pop
fldl
stos
or
mov
jmp
gs
inc
std
lds
mov
loope
and
adc
push
out
jnp
jne
out
push
push
shll
cld
adc
stos
out
filds
out
xlat
mov
ljmp
js
pop
sub
cmp
lahf
lret
cmp
pop
or
and
iret
rorb
add
stc
sbb
bswap
rep
loope
insl
in
mov
fwait
dec
subl
xchg
mov
mov
pop
sub
xlat
lds
fsubrl
mov
das
adc
jbe
lods
xchg
cmp
and
push
jg
arpl
pop
pushf
test
movsl
sbb
out
test
call
cmp
outsb
ret
pop
mov
sub
mov
addr16
outsb
xor
icebp
adc
fwait
sub
subb
mov
cmpsl
movsl
sbb
cli
or
and
adcl
sub
mov
pusha
or
cmc
pop
std
xchg
inc
nop
cmp
stc
cld
movsl
fwait
cmp
jne
mov
std
inc
notb
xor
popl
jle
fsubl
outsb
mov
cli
and
fcomi
pop
das
scas
aas
bound
sub
popa
scas
lea
ljmp
sarl
mov
int3
push
sub
fidivl
es
leave
sub
push
xchg
mov
mov
mov
in
aad
dec
daa
sbb
ficoml
popa
cwtl
iret
aas
mov
pop
int3
add
cli
sbb
jbe
movl
jbe
iret
sbb
add
mov
jne
gs
loop
ficomps
mov
dec
and
dec
popa
or
pop
add
idiv
insl
jecxz
push
sahf
jne
push
cmp
cmp
inc
add
mov
xchg
cmc
jg
leave
lock
les
outsl
or
pop
push
jp
fldcw
pop
js
loopne
icebp
lods
ror
jo
test
in
and
mov
fwait
cmp
popf
mov
jecxz
stos
xor
mov
mov
fidivrs
sbb
mov
jb
or
and
sbb
cmpsl
mov
dec
repz
mov
cmp
xchg
gs
ret
int3
and
movsb
lcall
into
xchg
sahf
pop
add
xor
enter
scas
nop
aad
test
cmp
cmp
sub
push
popa
push
rcll
jge
mov
adc
ja
sub
mov
xchg
mov
mov
cmp
clc
inc
and
or
flds
fadds
popl
xchg
cmp
das
sub
xchg
dec
inc
sti
jno
jns
dec
push
stos
push
bound
or
aaa
pusha
popa
or
pop
imul
in
xor
mov
push
jno
mov
aam
xor
inc
adc
xor
ds
sub
jo
xor
or
and
sahf
ret
mov
pop
mov
adc
push
ja
fsubp
outsl
les
jb
cmp
loop
adc
inc
mov
cwtl
ret
mulb
adc
mov
jae
test
xchg
sbb
loope
ret
and
repz
xor
xchg
mov
into
xorl
cmpsl
mov
subb
mov
fistpl
fldcw
xchg
and
in
mov
das
inc
add
mov
jae
and
pop
xchg
aas
xchg
lods
divl
adc
inc
cld
insl
enter
outsb
pop
or
aad
sbb
cld
and
or
daa
push
sub
fs
adc
mov
loope
mov
into
iret
jl
mov
mov
mov
xlat
mov
into
dec
pop
inc
xchg
mov
adcl
gs
add
pop
andb
fldl
push
cwtl
mov
sub
xchg
sbb
iret
add
bound
dec
and
stos
pop
dec
dec
orl
fsubr
jl
ret
or
sti
sbb
dec
push
fistps
and
ret
mov
mov
cmp
pop
int3
mov
popf
xor
jle
in
and
xor
jg
and
shr
mov
shll
je
mov
and
loope
movsl
push
imul
fsubrl
pop
fildll
mov
push
js
xor
sub
test
pop
push
push
adc
hlt
mov
incl
pop
dec
popf
sahf
fisttpl
jnp
sub
xlat
inc
xorl
cmpsl
mov
jno
rorl
fwait
movb
sbb
xchg
mov
in
stos
notb
push
imul
mov
loop
fiadds
test
popa
sub
cli
mov
cs
inc
xchg
inc
push
mov
add
loop
pusha
out
stos
xor
jnp
mov
mov
lret
push
xchg
fwait
insb
ljmp
sbb
rorb
fidivrs
adc
scas
sbb
add
idivb
icebp
adc
push
jl
inc
xor
loop
test
or
mov
cmp
pop
pop
sub
inc
out
adc
rol
sbbb
push
and
cmc
push
in
inc
mov
push
or
mov
imul
add
jg
les
add
adc
sub
mov
jp
test
es
jp
lods
sti
add
adc
nop
xor
ds
fwait
aad
ljmp
add
push
ficomps
xchg
out
out
mov
scas
mov
fnsave
dec
mov
stos
fcomps
jmp
fildll
and
jnp
inc
dec
aad
jne
jae
fs
sub
sub
rcrb
bound
add
dec
or
std
mov
aad
mov
mov
out
xlat
scas
int
jae
int3
push
xor
ss
loopne
out
test
pop
mov
call
and
xchg
repnz
dec
gs
xor
int3
sub
ficompl
das
enter
cs
icebp
pop
je
mov
dec
pop
push
sub
xlat
outsl
loope
lcall
sub
xor
arpl
mov
pop
fadds
int3
lods
adc
ljmp
mov
xor
pop
push
lahf
cmpb
movsb
ret
insb
cs
into
push
lret
cmp
pusha
call
shll
mov
cmp
cmp
cmp
dec
mov
ljmp
or
call
jmp
stc
lret
and
pop
dec
sub
popl
fildll
fldcw
and
mov
decl
xchg
mov
testb
loope
lea
mov
loope
lods
jge
daa
cltd
pop
dec
out
stos
pop
in
xor
mov
push
call
add
out
popf
mov
adc
shlb
sub
mov
mov
cmp
es
stos
mov
lds
add
rol
call
and
xchg
pusha
imul
sub
mov
inc
stc
add
test
fdivrl
pushf
jb
mov
cmp
fnsave
pop
ljmp
sbb
pop
jbe
ret
rcrl
sub
mov
ret
out
or
mov
add
rcrb
jno
out
gs
and
or
clc
dec
inc
cmp
out
push
or
les
and
in
andb
xor
jbe
adc
jo
orb
test
fsubl
adcb
subl
ds
pop
add
jg
pop
and
sub
popa
cmpsl
push
leave
dec
xor
dec
sarb
or
mov
push
and
loope
add
mov
in
notb
loop,pt
int
test
xchg
mov
push
lret
jecxz
push
xlat
cmp
jo
into
inc
pushf
add
fldenv
mov
jmp
ds
es
adc
in
out
sub
dec
sbbb
cli
cltd
jno
inc
mov
xchg
rcrb
js
pop
jge
xor
mov
ret
and
notl
aam
sbb
aad
xor
test
adc
in
jmp
xor
push
push
divl
add
aaa
scas
dec
aam
pop
push
lcall
push
call
arpl
loopne
jnp
sti
add
mov
xor
fdiv
sbb
mov
fisubrl
lret
into
mov
bswap
sarb
mov
adcl
imul
and
push
int3
pop
xchg
mov
pop
ret
test
mov
ljmp
pop
cmc
cmp
and
jnp
jmp
clc
or
adc
xchg
mov
xor
insl
loop
mov
ret
cs
in
int3
jb
test
and
outsl
pop
cmc
cld
sbb
add
lahf
mov
xor
rorb
push
push
push
add
sub
cmpsb
out
ss
xor
shrl
add
xchg
lea
fwait
into
mov
xchg
lsl
loop
or
mov
mov
into
xlat
fldenv
and
sbbl
add
repz
notl
dec
cmp
cmp
stos
inc
daa
mov
fdivs
mov
fisttpll
push
ljmp
int
pop
mov
int3
mov
add
fs
lcall
xchg
divb
mov
push
or
mul
mov
jmp
gs
xchg
popa
xor
cmp
mov
add
stos
mov
mov
add
sub
cmp
gs
and
cmpsb
ror
cmpsb
sub
cmpsl
xor
test
or
movsl
fdivrp
test
adc
mov
setns
mov
and
xchg
sbb
mov
pop
push
and
add
pusha
repz
lret
xchg
xor
cmp
push
cmpsl
jnp
or
inc
mov
les
sub
fsubr
pop
inc
lahf
loop
enter
fcompl
into
daa
imul
adcb
jo
ret
in
sub
jge
push
xor
repz
or
jb
fsub
cmp
xor
std
lret
loop
leave
or
push
jbe
dec
inc
mov
test
fs
xchg
or
das
fiaddl
icebp
dec
lahf
test
pop
lcall
fidivl
shrb
loop
iret
aam
lock
push
mov
int
add
adc
pusha
out
xchg
in
push
iret
std
xor
in
je
imul
dec
push
ljmp
aas
outsb
popf
push
cs
push
test
popf
push
fwait
icebp
mov
push
cmp
pop
dec
imul
inc
ja
jns
push
cmpsl
dec
stc
mov
push
jb
mov
jno
jmp
lods
ss
adc
cmpsb
or
dec
cmp
cmp
mov
clc
shl
iret
cmp
cmpsl
sbb
popa
push
push
stc
jl
xchg
jg
jae
mov
dec
lock
out
out
mov
insb
test
xorb
and
insl
sub
push
ds
int
pop
mov
mov
mov
fs
popa
and
pop
sbb
imul
arpl
into
pop
push
cmpsb
imul
cwtl
dec
xor
push
xor
dec
bound
mov
add
cmpsl
popa
adc
mov
data16
aam
cmp
sbb
and
pop
imul
or
sub
jb
sbb
jmp
and
and
push
pop
push
out
xor
mov
pop
sar
pop
inc
lret
xor
in
cwtl
xorl
inc
xchg
jno
flds
outsl
sbb
dec
dec
loopne
outsl
xor
movsl
daa
dec
mov
push
lcall
loop
cld
sbb
pop
push
jmp
fdivs
dec
cmp
call
nop
jne
hlt
loop
fisubs
xorb
cld
in
cld
inc
scas
daa
mov
iret
pop
ret
jmp
lods
pop
add
push
jmp
cmp
mov
ss
jmp
pop
pushf
stos
mov
sbb
mov
jl
outsl
pop
sbb
loope
cmp
pop
lods
sbb
cmp
mov
xor
or
or
xchg
js
xorb
xchg
adc
dec
xor
cmpsl
test
adc
xor
adc
xchg
mov
iret
mov
pushf
aas
rcll
out
addr16
jp
or
cld
sahf
stos
test
incb
fucomip
outsl
xor
sbb
scas
setl
xchg
rcrl
jbe
cmp
adc
stos
inc
inc
daa
ja
loopne
pop
cmpsb
mov
and
add
cmovle
popf
cld
cs
movsl
daa
jbe
out
cwtl
pop
aad
out
sbb
or
shlb
add
out
inc
rcll
sub
sub
addr16
jb
pop
pop
sahf
cmpl
push
aad
fidivrl
movsb
cs
lds
fiaddl
or
fsubrl
sub
add
lods
jno
repnz
pusha
movsb
push
mov
mov
scas
mov
mov
cmpb
inc
dec
and
repnz
inc
fldenv
insb
lds
movq
jle
test
push
mov
ret
mov
mov
das
mov
dec
mov
xlat
jo
sbb
fstl
sbb
jo
sbb
fldcw
test
adc
subl
xchg
jmp
pusha
fdivs
idivb
outsl
outsl
sub
stos
sbb
ret
dec
mov
scas
out
adc
push
jo
sub
and
lock
inc
sahf
ds
enter
fdivl
jmp
inc
outsb
mov
push
jmp
push
ljmp
dec
xor
andl
shrb
xchg
fstps
cmpsb
pop
imul
outsl
je
test
mov
sub
adc
imul
lds
xchg
in
push
pop
mov
pop
mov
jo
dec
fsubrs
jae
and
test
mov
loop
sbb
xor
iret
adcl
mov
pop
int
push
push
cmp
jge
clc
cmp
or
jl
nop
into
add
pop
stos
push
xor
addr16
fdivr
inc
leave
nop
xor
cmc
jg
mov
inc
mov
stos
cmp
push
push
push
loopne
and
adc
orb
inc
push
push
or
clc
dec
fstl
jmp
scas
scas
pushf
jns
mov
dec
mov
mov
jp
int
fs
sub
mov
std
cmp
push
ja
mov
nop
cmpsb
push
clc
sbb
jne
pop
pushf
sbb
pusha
mov
repz
loop
repnz
xchg
icebp
adc
ljmp
outsb
test
ljmp
rclb
sub
std
dec
cmc
mov
test
out
mov
or
jno
lods
aas
push
or
mov
sub
hlt
mov
rcr
sub
nop
jno
dec
xchg
lret
je
xchg
cmp
sub
mov
test
out
dec
xor
push
pushf
mov
dec
sbb
pop
or
sub
sti
mov
lcall
push
fucomip
inc
add
lea
mov
out
xchg
daa
iret
xchg
imul
cltd
mov
push
pop
push
mov
into
ljmp
mov
or
andb
bound
and
ljmp
or
pop
mov
and
push
stos
jo
cs
jnp
mov
repz
dec
xor
xchg
lret
xchg
jle
pop
jne
xor
outsl
add
cmp
shlb
sbb
ror
call
movsb
outsl
push
adc
hlt
xlat
push
push
jge
rcrb
pop
cmp
mov
push
clc
stc
loope
xchg
out
push
push
pop
inc
inc
jb
pop
inc
ret
mov
push
es
xchg
fldt
cmpsl
scas
cltd
and
xorl
cmp
in
les
clc
fsubs
jbe
push
jbe
xor
das
cmp
out
aad
mov
push
mov
sbb
in
in
fistps
push
and
jae
ret
sbb
jb
push
xchg
mov
in
cli
roll
mov
sahf
test
adc
push
jmp
push
ffreep
fnsave
lret
lods
jno
cli
push
mov
mov
test
adc
jne
xchg
cmp
adc
mov
daa
test
insl
jge
orl
jg
in
cmpsb
or
cltd
popa
ljmp
outsb
jl
dec
cmc
mov
lcall
loop
inc
pop
jno
dec
pop
sahf
cmp
sub
call
test
rorb
mov
outsl
xchg
cmp
lahf
push
aam
mov
ret
cmc
cmp
sahf
mov
sbbb
loope
lea
inc
shll
test
mov
or
cwtl
ljmp
cmp
add
loopne
and
test
stos
cmc
jmp
mov
adc
jl
into
frstor
cmp
nopl
sarl
fnsave
loop
scas
push
sub
std
inc
inc
xor
sti
and
and
es
push
mov
mov
pusha
jnp
cmp
pop
pop
scas
popf
push
sti
push
divl
addb
das
sub
jo
arpl
in
mov
cmpsb
es
fnsave
lcall
ud0
jne
sbb
sbb
in
in
push
pop
sbb
push
ret
pop
es
xor
and
add
inc
iret
sahf
jbe
data16
and
adc
fnsave
mov
inc
ds
cs
mov
and
adc
jmp
adc
lea
push
push
pop
push
xchg
ss
out
movsb
and
lods
and
enter
inc
adc
xor
pop
popf
xchg
outsb
in
inc
fcoml
mov
ja
xor
clc
scas
mov
not
add
jb
adc
dec
out
adc
pop
jne
add
int3
mov
cltd
inc
add
mov
andb
xchg
repz
scas
xchg
mov
imul
dec
push
insl
sub
xor
adc
cmp
jecxz
sbb
mov
xchg
pushl
sub
cmp
arpl
dec
push
out
pop
loope
orb
dec
xor
inc
lahf
insb
push
stos
dec
fdivrl
sub
cli
jne
cmp
sti
iret
icebp
rcrl
sbb
mov
test
lds
daa
fldt
movsb
fldenv
ror
cmp
popf
xor
push
pop
sub
cmp
push
sbb
push
aad
cmp
or
push
push
mov
push
repz
fnstcw
mov
add
out
mov
mov
xor
pop
lea
popf
sahf
shrl
hlt
sbb
testl
gs
int
scas
mov
lock
aas
xchg
cltd
repz
and
sti
cmp
push
jmp
shrl
cmp
sti
xchg
aas
cli
cmpl
cs
push
mov
mov
sub
scas
mov
jno
repnz
push
and
xor
ss
and
in
xor
xlat
mov
dec
sahf
shl
aaa
pop
xor
stos
movsl
mov
scas
dec
insb
out
jle
shl
mov
xchg
push
outsb
pop
shll
icebp
add
and
loope
pop
imul
mov
inc
lds
adc
lock
lcall
shlb
ret
mov
xchg
test
test
rcr
xor
in
movsl
outsl
dec
jmp
scas
loope
mov
jno
stos
in
sti
sbb
lahf
pop
out
add
int3
pop
mov
push
pop
sub
sbb
lsl
lea
mov
jns
pop
movsb
xor
cmp
adc
insb
fdivrl
add
shlb
dec
ljmp
cmc
inc
int
fstpl
es
pop
clc
jp
adc
rcrl
call
and
fidivrl
pop
dec
dec
inc
adc
dec
cmpsl
jp
fs
pop
rcrb
lock
adc
in
ret
icebp
mov
add
lods
mov
or
xchg
pop
mov
or
pop
sbb
jmp
stc
inc
mov
stc
cmp
aad
test
int3
shlb
jl
sbb
sub
pop
dec
mov
out
out
mov
jge
add
ds
cmpsl
xchg
sub
or
push
popf
and
lahf
or
cmpsb
xchg
rolb
sub
dec
cmpsb
sbb
lea
mov
fisubl
call
add
jae
jecxz
mov
xchg
cmp
movsb
pop
cld
adc
mov
ficoml
xchg
popa
sti
push
pop
insb
repz
aam
jle
sbb
test
mov
lea
sub
xchg
mov
or
inc
fisttps
fsubrl
inc
and
jle
pop
adc
fadds
mov
push
in
mov
cmpsb
aam
push
pop
ja
mov
sbb
xchg
das
adc
fistl
out
and
mov
adc
pop
xchg
or
iret
mov
into
jnp
inc
mov
imul
out
vsubps
inc
push
dec
dec
pop
xor
xor
iret
xlat
or
outsb
icebp
push
enter
lahf
xchg
push
adc
adc
push
mov
inc
mov
out
fwait
out
pop
jp
int
in
add
jae
push
jne
insb
or
cmc
mov
fsubr
sub
cld
cs
shlb
mov
or
add
in
jmp
xor
cld
ss
or
repnz
xchg
rcll
jecxz
data16
or
fs
xor
pop
out
push
jne,pn
imul
mov
push
dec
movsb
cmp
jle
xor
sbb
out
gs
lret
test
lret
in
cmp
add
fdivp
daa
add
fnstcw
cmp
imul
add
imul
xor
xchg
rorb
or
mov
mov
and
cmpsl
cmp
push
lods
jbe
xor
xor
ret
sub
and
dec
pushf
lret
push
inc
in
or
test
subl
xchg
sbb
xchg
rorl
add
dec
jecxz
scas
sub
xlat
dec
out
xchg
lahf
rorl
dec
and
mov
test
lea
shll
inc
ljmp
mov
dec
lea
dec
dec
testw
dec
call
dec
adcb
ljmp
sub
lea
dec
mov
test
and
mov
push
xor
in
pop
mov
subb
sti
and
loope
clc
cmpsl
inc
cmp
gs
lods
pushl
inc
cwtl
push
pop
ret
adc
out
pushf
out
cmpsb
pop
pop
or
xchg
rcll
test
dec
inc
jl
repz
adc
sub
add
shl
dec
pusha
scas
dec
dec
add
cs
or
hlt
bound
pop
push
lock
lds
icebp
or
jg
stc
mov
xchg
movsb
xchg
jmp
mov
and
push
hlt
jp
inc
dec
js
ret
out
out
push
into
iret
repnz
add
and
and
roll
or
jns
and
xchg
dec
out
das
repnz
roll
add
push
repz
flds
xor
outsb
jmp
jmp
mov
mov
js
fwait
rcr
mov
popf
pop
and
loope
and
mov
jg
movsb
imul
jge
adc
aad
lret
lahf
sti
data16
hlt
mov
dec
sbb
aaa
xchg
arpl
adc
xor
push
adc
ljmp
cmp
add
dec
mov
repz
aas
dec
mov
xchg
mulb
lds
clc
lret
sahf
sbb
rol
test
lahf
outsb
test
mov
mov
movsl
xchg
std
mov
mov
pop
adc
dec
ja
dec
sbb
std
pop
lcall
push
xor
mov
pushf
int
fcmovnb
mov
xor
push
mov
jbe
adc
pop
jbe
ds
pop
out
push
mov
sub
in
pop
sub
cld
pop
pusha
push
stos
rcrb
dec
pusha
fs
in
jecxz
addb
lock
pop
jo
sub
test
sahf
sbb
sbb
adc
mov
es
xchg
fwait
xlat
pop
push
xchg
rcll
roll
or
shrl
xchg
push
sub
xlat
jmp
loope
jns
jo
xchg
sbb
fs
mov
ret
outsb
and
lock
lea
mov
inc
adc
mov
iret
mov
mov
xor
cmp
jecxz
mov
xor
xor
push
popf
pop
ljmp
les
add
in
mov
cltd
dec
jmp
mov
outsb
mov
xchg
sar
arpl
gs
ret
xchg
enter
insb
mov
rorb
sbb
outsb
repnz
clc
mov
ja
mov
adcb
sub
push
mov
mov
mov
aad
sub
scas
scas
fcoms
push
mov
jl
pop
lods
scas
insl
test
hlt
sub
add
hlt
push
cmpl
mov
add
mov
jle
dec
pop
sub
xor
or
cmc
xchg
jmp
repz
hlt
mov
mov
mov
fst
outsl
adc
test
jnp
imul
cmpsb
pop
dec
cmp
rorb
in
xchg
cs
lods
loope
and
arpl
lods
and
mov
cmp
add
jnp
shrb
sub
out
pop
movsl
fldcw
sbb
xor
xchg
adc
sub
sbb
jns
add
mov
push
pushf
jno
inc
int
iret
xchg
lea
pushf
inc
jg
jne
sahf
js
mov
stos
imul
jge
mov
insb
pop
dec
xchg
clc
sbb
pop
cli
push
testb
jge
jp
jbe
inc
test
imull
mov
pop
lea
xlat
scas
jmp
mov
inc
test
xchg
aas
xchg
and
or
cmp
inc
sbb
icebp
subl
pop
cmp
mov
mov
xchg
sti
jmp
popa
xor
jmp
pop
movb
ret
inc
inc
test
sbb
scas
sbb
lods
mov
add
sbb
outsl
adc
dec
loope
fisttps
xor
dec
xchg
lret
outsl
push
xchg
shlb
sub
in
rcll
mov
ja
test
lcall
ds
or
les
jae
fs
xchg
outsl
mov
pushf
pop
jae
outsb
jnp
push
xchg
pop
jne
jle
test
xorb
push
push
daa
int
fmulp
cmp
fiaddl
into
cmpsb
fadds
fbstp
and
inc
or
rorb
das
ljmp
fidivl
lret
popf
xor
xor
xchg
mov
movsb
outsl
and
fwait
cmp
jg
les
lods
mov
lret
jno
shrl
xorb
mov
sub
fisubs
sahf
push
lahf
fcom
mov
jb
aad
add
dec
or
jae
pop
nop
les
jno
iret
pop
pop
ret
gs
xor
pop
ret
out
cld
adc
popa
stc
sub
lock
mov
lahf
lahf
pop
stos
call
mov
sbb
loop
jbe
push
jle
lods
inc
inc
cmpsb
jecxz
and
stos
scas
aad
inc
jnp
aas
cmp
jnp
sub
jnp
js
into
jp
pop
mov
pop
sbb
loope
xorl
pop
fidivl
and
mov
enter
xchg
mulb
pop
push
cmc
push
adcl
lds
push
out
loop
push
push
pop
fwait
enter
cmp
scas
push
out
and
add
or
push
inc
dec
sbb
sbb
cld
sahf
dec
inc
xor
pop
clc
f2xm1
add
cld
test
stos
pop
sbb
arpl
dec
jl
loope
pop
jne
mov
push
add
fdivl
lods
cmpl
mov
lahf
mov
mov
leave
xchg
cmp
cmpsl
lahf
popa
imul
flds
clc
push
dec
jp
pop
and
pushf
fsubr
es
xchg
repz
dec
and
xchg
add
test
pop
mov
jno
je
fwait
adc
cmpb
sub
repnz
loopne
xchg
mov
mov
cwtl
mov
xlat
push
xor
adc
in
bound
pop
les
movsb
cmp
xor
inc
fildl
xchg
dec
addb
inc
imul
inc
fcompl
sub
jecxz
add
inc
pop
adc
adc
test
loopne
imul
aaa
test
mov
xchg
push
inc
lret
inc
lret
add
div
push
faddl
inc
and
movsb
rolb
fsubs
mov
insl
xchg
pop
movsb
stos
xchg
and
icebp
mov
pop
jg
mov
es
xchg
pop
nop
out
and
sti
xchg
pusha
cmpsl
pop
or
lods
outsl
or
dec
or
or
fwait
jb
mov
push
jb
jl
inc
lds
and
add
mov
je
in
sbb
mov
test
fadd
in
fwait
out
ret
pop
lods
nop
cwtl
leave
sub
push
mov
and
pushf
sub
jbe
mov
ss
mov
jp
cltd
pop
in
or
sar
lods
and
sub
sbb
je
clc
cltd
add
out
fucomp
cmp
lcall
in
inc
sbb
out
stos
enter
add
dec
popf
dec
loop
cmp
pop
jg
insl
xchg
mov
cmp
sahf
cmpsb
das
aad
stos
data16
in
inc
dec
lcall
in
or
orb
sub
imul
pushf
and
push
fwait
sbb
movsl
sbb
mov
outsl
sub
les
out
dec
les
xchg
lock
add
jb
daa
cmp
aam
movsb
mov
xchg
sub
cmpb
inc
cmpsl
jbe
loopne
xor
insl
daa
lods
pop
iret
das
cmp
sbb
dec
mov
icebp
dec
imul
cmp
xchg
stos
dec
mov
mov
inc
lret
out
jnp
das
or
das
xchg
mov
out
xorb
add
mov
inc
lret
jle
hlt
insb
jge
enter
pop
dec
add
scas
filds
adc
inc
mov
jg
xchg
dec
or
mov
push
mov
pop
jne
sub
out
or
cld
jns
pop
cmp
leave
iret
aaa
or
int3
pusha
call
pop
stos
mov
fldenv
sbb
out
rolb
push
imul
sti
clc
inc
ret
xchg
or
inc
movsb
dec
cwtl
push
mov
push
xchg
test
mov
pop
sub
call
and
shlb
adc
push
aaa
bound
cmp
mov
inc
scas
ja
ret
out
ds
in
stos
xchg
mov
movsb
scas
ss
addr16
jnp
ljmp
dec
mov
cmp
int3
or
push
aad
iret
jmp
ret
sub
cmp
aaa
jno
ret
call
jae
mov
push
sbb
add
sbb
leave
ret
or
sbbl
mov
fiadds
dec
les
sbb
xchg
dec
fsts
hlt
sbb
sbb
and
xchg
popf
sbb
mov
jbe
jae
jmp
jns
jne
cwtl
push
sahf
and
lods
clc
int
mov
or
adc
pop
stos
aaa
bound
lret
mov
or
and
mov
insl
std
in
call
jnp
xor
or
std
fldenv
in
shrl
push
cli
test
push
sub
dec
and
call
adc
aas
lahf
dec
or
dec
inc
mov
mov
jp
xchg
sub
fmull
mov
pop
cmp
iret
fnstcw
rcrb
imul
jg
out
and
ret
pop
shlb
xchg
jl,pn
fxch
cwtl
xor
andl
int3
jp
sbb
push
sbb
adc
loope
daa
test
sub
add
cmpsl
xor
sub
imul
fnstsw
ficoms
or
bnd
push
xchg
add
data16
std
in
je
ds
out
sti
and
sbb
popl
add
cwtl
push
enter
ds
loopne
cmpsl
mov
add
mov
mov
fidivl
adc
inc
xlat
mov
cli
xchg
pop
xor
fs
push
int
push
or
push
fwait
iret
lea
xchg
fwait
je
push
sub
dec
sub
mov
and
xchg
add
pop
or
push
sub
outsb
in
dec
leave
inc
and
xor
inc
out
xlat
popa
adc
jg
in
popf
lcall
and
in
dec
mov
inc
xor
dec
xor
dec
push
insl
and
in
test
cmp
addb
insb
sti
mov
outsb
sub
lret
lcall
repnz
shl
cltd
pusha
clc
pusha
fnstcw
lods
lret
ret
jae
cld
cld
loope
mov
jae
call
fisubs
xchg
jbe
or
and
in
dec
es
xchg
aaa
into
enter
fimuls
insb
addr16
cmc
sbb
push
mov
pusha
push
movsb
imul
mov
add
xchg
outsl
aam
push
pop
negb
jge
scas
pop
sbb
dec
and
xchg
inc
sub
stos
icebp
mov
mov
sbbl
icebp
push
out
inc
out
xchg
mov
sub
sbb
jmp
mov
mov
jp
add
or
mov
leave
fnsave
mov
and
icebp
orl
jmp
xchg
lods
gs
ja
or
sbb
add
jecxz
jmp
sub
lock
nop
cmp
out
add
mov
fisubrs
leave
cld
or
scas
xchg
pop
push
adc
imul
je
push
ss
mov
sbb
pop
test
inc
insb
mov
int3
xchg
nop
pop
push
sti
fdivrl
add
ret
scas
pop
and
sub
adc
xchg
mov
mov
fldenv
negl
sti
das
aas
mov
jns
shl
and
inc
outsl
adc
movsl
sbb
adc
fucomip
popf
sub
xchg
stos
fdivrp
gs
enter
mov
push
inc
jge
repnz
cs
les
pop
std
ss
mov
jmp
ja
pusha
test
bound
mov
cmp
aad
aas
push
enter
sbb
ds
addr16
jg
test
push
or
dec
sub
mov
cmp
push
pop
or
pop
ret
loop
jbe
adc
aad
fwait
or
imul
out
scas
mov
inc
sub
ffreep
or
xor
movsb
cmpsl
dec
sub
and
cmc
rol
jp
dec
pushf
cs
aas
fucomp
sub
and
in
lods
xchg
mov
fistl
sbbb
jo
and
mov
or
mov
and
xchg
xor
ret
inc
push
fnsave
insl
cli
imul
jl
in
subb
outsl
push
pushf
cwtl
inc
roll
push
cmp
and
push
mov
inc
pop
mov
mov
stos
mov
jmp
enter
sbb
push
in
cmp
xchg
scas
jle
in
mov
push
mov
sti
xchg
sbb
lcall
xorl
adc
stos
inc
pop
aam
lock
xchg
nop
es
fsts
pop
jle
movsl
cwtl
movsb
mov
scas
xchg
sahf
mov
cmpsl
sub
sub
ds
ss
popa
xchg
mov
pop
mov
xchg
dec
lods
add
scas
imul
mov
pop
jbe
adc
lret
or
sbb
mov
pushf
xor
dec
mov
push
call
std
loop
xchg
mov
dec
fmuls
sti
sbb
or
jo
pop
pop
stos
mov
mov
pusha
out
cmp
int3
sbb
mov
jns
test
mov
jne
repz
or
and
sub
movsl
std
sub
fmuls
stos
pop
adc
push
in
adc
in
arpl
into
jg
in
jns
pushf
es
aaa
jle
mov
pop
mov
push
clc
pop
push
and
pushf
sub
jae
dec
decb
hlt
adc
mov
in
out
jecxz
jge
xchg
lds
pop
xchg
push
popf
pusha
adc
call
aad
int
test
or
in
xor
push
cmp
lahf
ss
daa
or
shrl
rcll
ss
into
adc
dec
cmp
adc
xor
push
mov
mov
inc
cmp
loop
lods
nop
xchg
icebp
pop
sahf
rolb
and
shll
or
jmp
icebp
adc
iret
add
mov
loopne
xlat
xor
adc
xchg
rclb
out
pop
repz
in
pop
pop
movb
cltd
iret
or
cld
dec
or
gs
pop
mov
adc
lods
fsubrl
xchg
addb
addl
jo
leave
jmp
lods
cmp
daa
scas
lds
jmp
mov
lret
xchg
ret
dec
lret
add
mov
shrl
and
pop
stos
mov
out
xchg
mov
jecxz
imulb
sub
pop
cmp
bound
inc
out
idivb
dec
add
xlat
jmp
xchg
pop
int3
jb
lcall
sarl
jge
pop
loopne
jl
mulb
jo
shrb
rcl
pop
outsl
rorl
and
outsb
mov
adc
pop
cltd
pop
mov
pop
push
mov
pop
sub
or
ret
test
movsl
cmpsb
adc
shl
xchg
es
das
in
jae
lods
lods
ss
shll
stc
mov
xchg
fisttps
jecxz
inc
std
test
sub
lock
push
lcall
and
cwtl
je
in
popa
fs
repz
scas
inc
xor
or
daa
movsb
outsl
pop
or
inc
pop
xor
inc
leave
dec
cmp
loope
mov
sar
sub
xchg
mov
movb
repnz
pusha
mov
xchg
push
cmp
xchg
adc
pop
rolb
iret
or
aas
pushf
mov
gs
fsubrl
xor
jae
cld
xor
mov
dec
mov
outsl
mov
mulb
das
and
jmp
pop
sub
rorl
into
xchg
lods
das
hlt
dec
mov
aas
sub
xchg
mov
mov
inc
clc
stos
in
mov
cmp
aam
ret
popl
cmpsl
ds
fsubl
xor
in
cmc
int3
icebp
cmpsb
mov
mov
add
fnstsw
mov
into
cmpsb
cmpsb
mov
jp
pop
fmuls
mov
incb
aaa
arpl
xchg
loopne
fbld
jnp
in
mov
mov
loope
les
jne
dec
es
lret
call
sbb
js
pop
mov
push
cwtl
jp
in
or
aam
add
push
lcall
rol
sbb
pop
addr16
inc
repnz
push
rcl
and
movsb
xor
and
das
sbb
adc
sbb
pop
dec
ljmp
addr16
int
jns
std
into
sub
or
mov
shr
test
sti
push
cmp
mov
inc
fmuls
out
sti
ja
mov
push
xor
pop
das
ret
les
sbb
mov
ret
sub
popf
or
dec
cli
scas
adc
dec
inc
test
jnp
cmp
mov
cmp
jle
les
sub
aam
mov
andb
sahf
jae
push
movsl
out
mov
pushf
or
iret
lahf
insl
mov
in
and
lcall
int3
sub
cmpsl
repz
cmp
aaa
je
cwtl
push
adc
xchg
inc
push
call
scas
or
add
rol
dec
mov
adc
pushf
lds
mov
inc
scas
push
push
dec
in
mov
xchg
aas
push
fwait
shl
sbb
rorl
imul
jmp
stos
mov
or
lds
ljmp
push
inc
inc
test
jnp
add
movsb
pop
leave
inc
outsb
mov
gs
pop
mov
dec
adc
cmp
sub
testb
aam
pop
cmpsl
mull
pop
test
mov
mov
mov
sub
jg
sub
sarb
or
adc
mov
push
inc
std
adc
fsts
mov
fidivrs
mov
adc
repz
or
addr16
mov
mov
js
mov
shll
addb
adc
adc
sarb
lahf
pop
rcrl
fdivrl
push
and
jecxz
fmull
mov
lock
push
dec
and
dec
adc
std
hlt
andb
aam
and
mov
xor
je
in
das
cmp
mov
imul
stc
andb
sub
lahf
pop
dec
loop
mov
loopne
fildll
jmp
jo
pushf
arpl
negl
mov
pushf
xor
mov
cltd
push
nop
or
rcr
idivb
pop
lahf
loop
dec
add
sbb
or
pop
cmc
subb
rcrl
mov
jmp
xchg
and
rcll
dec
pop
enter
ds
push
icebp
add
xchg
stos
adc
cltd
fisubl
maxps
es
xor
rorb
js
or
ficoml
outsb
jg
pop
lret
mov
xor
call
or
out
mov
shll
push
add
in
jge
data16
mov
mov
mov
pop
out
fnsave
in
test
stos
fsubp
mov
cmpsb
rorb
mov
js
daa
ucomiss
cwtl
fidivrl
add
lret
cmp
out
dec
xchg
and
push
xor
push
or
fcoms
out
xor
mov
jb
cmp
dec
lea
hlt
dec
and
jno
repz
lret
aaa
jge
xchg
mov
subl
xchg
mov
mov
xor
inc
fwait
pop
xor
aaa
jne
sbbl
sbb
sub
sub
or
mov
xorb
jo
dec
daa
xchg
sarb
out
mov
push
or
add
or
popa
daa
xchg
xor
insb
loop
mov
lods
sub
jb
aad
jge
or
int3
lahf
loopne
jne
out
and
sub
adc
pushf
add
les
adc
xchg
shrb
scas
fldcw
ds
push
test
movsl
fisubs
fldl
cmpsb
cwtl
jns
mov
inc
inc
inc
pop
in
stos
cmp
rorb
add
scas
fs
sub
subb
int
cmpsl
sahf
sti
addr16
das
xlat
xor
negl
mov
pop
scas
pop
outsl
xor
mov
arpl
inc
repz
es
repz
inc
pop
popa
inc
ds
imull
popa
nop
shlb
hlt
mov
pop
out
push
out
sbb
daa
cwtl
punpckhbw
hlt
add
add
aam
outsl
sub
testl
mov
pop
pop
icebp
adc
mov
arpl
jno
mov
daa
pusha
outsl
cltd
pusha
mov
inc
push
sub
imul
jmp
movsl
push
mov
mov
push
push
jbe
gs
push
adc
push
gs
mov
pop
jne
and
adc
mov
mov
or
arpl
jo
push
movsl
or
incl
push
test
std
enter
or
pusha
dec
push
pop
and
pop
jg
push
mov
rcr
jecxz
rcrb
lods
push
ds
divl
sbb
mov
sbb
mov
sbb
pop
pop
scas
into
outsl
dec
and
clc
cmp
test
push
sub
cmp
jmp
clc
scas
mov
lahf
xchg
or
pop
jne
cmp
inc
sbb
testl
jne
insb
subb
and
ja
fistpl
lods
or
inc
push
das
test
arpl
cmpsb
sbb
enter
cltd
out
test
xchg
mov
mov
adc
in
push
into
icebp
rol
mov
cmpl
shrb
mov
adc
add
insl
test
mov
dec
cmp
ss
movsb
or
sbb
jp
cld
xchg
push
shlb
sub
cwtl
jns
add
jne
cmc
xchg
dec
es
int3
sahf
rorb
adc
add
mov
xchg
divb
sub
out
call
scas
mov
cmp
mov
repz
mov
stos
push
add
or
out
sub
dec
jge
ds
dec
xor
sub
pop
ret
movsl
loope
inc
test
mov
loop
sbb
repz
inc
stos
and
call
outsl
cmp
dec
or
inc
int
cld
mull
sub
pop
xlat
ss
je
pop
ss
lahf
in
stos
mov
or
jb
mov
mov
cmpsl
xchg
push
sub
mov
std
cltd
pop
mov
sbb
push
cmp
adc
aas
fnstcw
lods
mov
mov
sti
mov
test
cs
gs
fwait
mov
mov
insb
aam
jns
repnz
or
xlat
into
hlt
sahf
jecxz
in
jnp
mov
sub
xchg
jno
sbb
add
roll
cmpsl
lods
dec
sbb
inc
cwtl
pop
fidivl
or
mov
movsl
subl
xor
add
inc
dec
add
dec
in
scas
dec
pop
int
scas
nop
push
icebp
push
xorb
add
iret
mov
shrl
jbe
cltd
xchg
pushf
lcall
xchg
sub
mov
into
jno
inc
fidivrl
sub
movsl
sub
dec
push
cmp
xorl
or
or
repz
cmp
dec
out
inc
fisubrs
inc
mov
mov
in
in
jecxz
fsubrs
out
enter
scas
push
xchg
xchg
lock
ds
rcll
clc
rol
sbb
mov
mov
adc
pop
sbb
adc
or
insb
jns
push
sub
stos
enter
pop
dec
clc
mov
xchg
and
mov
mov
shr
inc
fs
xchg
adcl
adc
mov
xor
jmp
jle
test
push
roll
into
jno
aad
roll
fwait
outsl
add
jns
jle
mov
scas
push
lds
cmp
ss
pop
lock
outsb
shll
into
popa
pop
cmp
or
xor
xor
fisubs
xor
lods
ret
pop
pop
xlat
ret
add
in
lcall
ret
ljmp
add
pop
or
pop
add
mov
and
test
test
mov
fsubrl
cwtl
xchg
in
out
dec
mov
fucomip
xor
xchg
mov
bound
mulps
mov
push
cltd
nop
mov
leave
jge
cmp
pop
fs
cli
push
jnp
jae
out
adc
ficoml
ja
cmp
dec
push
sarb
out
mov
xor
lret
pop
mov
mov
scas
subl
sahf
push
sbbb
push
enter
andb
mov
pusha
movsl
ror
inc
mov
push
fs
movsl
ret
int3
gs
or
pop
nop
sub
xor
mov
insb
int3
jnp
out
subl
mov
rorl
cltd
insl
add
fwait
mov
mov
mov
mov
or
jmp
inc
loop
jl
mov
jl
pop
add
mov
sub
dec
xor
aaa
addr16
cs
push
mov
gs
mov
jp
jp
addr16
xchg
adc
decl
jp
inc
pop
mov
loopne
arpl
ja
sbb
in
mov
adc
sub
pop
pop
fdivrp
jl
rcrb
push
shll
nop
int
push
adc
popa
lcall
adc
fisubl
sub
or
insl
enter
sub
shlb
add
fcomi
pop
repnz
stos
rcll
shrb
popf
mov
jl
push
sbb
testl
ljmp
inc
test
lcall
lds
and
outsl
and
fidivrs
mov
mov
repz
data16
jecxz
push
mov
lret
or
fisttps
add
cld
test
or
jo
mov
insb
ja
jnp
ja
rorb
out
mov
jge
adc
lcall
adc
mov
add
xchg
push
insb
mov
dec
xor
pop
shl
adc
sbb
imul
fmuls
out
aas
arpl
jne
adcl
mov
in
adc
sub
insb
cmp
mov
mov
repz
loopne
xchg
mov
testl
das
xchg
insb
mov
or
in
jmp
sub
xor
loope
imul
mov
mov
jbe
lods
mov
push
ss
inc
mov
mov
or
lcall
or
push
pop
imul
sti
xlat
mov
lret
mov
in
enter
cmc
adc
rcl
xchg
push
inc
xor
cmp
add
add
mov
xlat
mov
cmp
js
adc
stos
xor
mov
add
mov
scas
cli
adc
jg
icebp
outsl
lahf
dec
pop
mov
push
ja
std
lahf
push
add
and
out
enter
movsb
enter
push
imull
push
ret
and
enter
mov
add
jae
mov
mov
xchg
fstl
std
jl
xchg
hlt
dec
or
inc
shr
adc
ret
xchg
pushf
xlat
icebp
ljmp
push
push
outsb
push
movsb
jne
outsl
popa
sub
aam
out
stos
or
and
loopne
jecxz
push
fsubrl
das
addr16
stos
sbb
mov
or
mov
mov
mov
sbb
pop
cmp
fdiv
fsubrl
dec
dec
pop
rcr
addr16
mov
push
cmpsl
xchg
aaa
xchg
outsl
jge
fs
iret
jp
inc
dec
mov
pop
adc
mov
test
addr16
inc
lods
or
mov
adc
test
add
mov
ret
call
xor
fwait
lods
cmp
ss
jae
push
dec
xor
mov
xchg
aaa
xchg
and
lcall
mov
clc
pop
xchg
sbb
xor
sarl
idiv
jbe
jmp
aam
dec
adc
dec
xchg
xor
push
or
shrl
sbb
pop
in
cmpl
xor
mov
jae
push
and
sbb
int
or
ss
popf
sbb
cmp
es
in
push
pusha
jo
sbb
call
fsubrl
sbb
out
ret
idivb
fstps
adc
mov
cmp
dec
mov
cmp
addr16
push
xor
push
mov
inc
adc
mov
push
sti
popf
in
pop
jge
add
pop
test
mov
pop
shlb
sub
and
inc
int3
je
dec
sbb
fisubrl
and
flds
jb
push
out
insb
xchg
cmc
inc
mov
cmp
xor
and
xlat
lret
out
sub
pop
mov
pop
add
mov
mov
xor
es
mov
push
mov
leave
stos
mov
mov
and
cld
addr16
pop
nop
int3
insb
shll
add
jb
rcrl
movsb
repz
je
movsl
outsb
add
enter
ja
inc
test
fcomps
mov
nop
sbb
jne
nop
test
and
outsl
notl
add
inc
sbb
fcomps
fdecstp
nop
xorb
out
mov
vpaddsw
or
jno
stc
sarb
in
test
xlat
data16
push
ljmp
mov
negl
dec
mov
or
lcall
lahf
aas
ss
pop
in
mov
xchg
or
inc
xchg
push
fstl
inc
xchg
add
add
jo
orb
jl
pop
dec
adc
gs
jmp
push
je
pop
call
xor
xchg
addr16
pop
test
imul
xor
adc
xchg
cmp
mov
mov
sti
lods
cmp
xor
leave
fwait
push
call
mov
push
ds
imul
mov
fmul
mov
jns
sub
sti
sbb
sti
pop
sbb
lret
popl
addr16
pop
pop
fistps
into
scas
lcall
pop
gs
mov
mov
cmp
out
jecxz
out
inc
movlhps
xlat
pop
push
mov
add
push
popf
movsl
stos
push
fndisi(8087
inc
in
es
lcall
xchg
xor
and
mov
cs
sub
repnz
pop
add
cmpsb
cmp
rcl
cltd
movsl
enter
pop
sub
fiadds
push
insl
mov
push
pushf
mov
sbb
xchg
dec
fbstp
ss
int3
jns
sbb
dec
addr16
out
lahf
std
mov
dec
cmp
sbb
call
sbbb
aad
clc
stc
push
sahf
xorb
cmp
hlt
cmpsl
adc
mov
adc
cltd
lcall
pop
out
ss
cmp
cmp
jnp
shll
jmp
adc
pop
push
daa
jecxz
xlat
addb
push
jbe
and
mov
mov
addl
inc
shll
gs
mov
in
lret
dec
movsb
xchg
add
in
and
pusha
movl
mov
imul
orl
xchg
test
jp
bound
scas
pop
adc
push
cmp
jbe
inc
movsl
dec
adc
mov
or
stos
pop
test
cwtl
cmp
cmpsb
push
adc
lock
dec
addr16
pop
pop
in
clc
mov
add
push
mov
cmpsb
dec
fistpll
call
sbb
mov
mov
cmp
xor
add
inc
lods
int3
rcll
add
sub
aaa
in
mov
mov
adc
out
sbb
dec
pop
dec
xchg
adc
add
fistpll
ja
in
mov
cwtl
cmp
ljmp
insl
pop
add
jecxz
jns
pop
imul
inc
lahf
adc
cmpsl
nop
sbbl
aad
sbb
loopne
add
mov
addr16
dec
subl
mov
jo
adc
jbe
mov
jb
jae
out
loopne
je
js
cld
sub
outsl
xor
xchg
adc
decb
xchg
lds
or
jae
stos
mov
sub
sti
dec
jmp
or
adc
push
jb
adc
and
push
jno
adc
imul
cld
mov
xchg
test
mov
out
push
adc
stos
inc
or
or
loop
dec
xchg
aas
sar
lock
mov
scas
jnp
test
call
mov
xchg
jmp
jle
mov
mov
jnp
shr
mov
fdivl
ljmp
mov
test
xchg
out
add
or
push
icebp
adc
mov
jmp
pop
jl
dec
lret
sbb
imul
jnp
mov
mov
fldt
pop
loop
xchg
sarl
adc
shlb
xor
inc
out
xchg
push
fsubrl
sub
mov
push
pop
scas
lea
xchg
fmul
xor
sti
and
adc
mov
cmp
and
int3
xor
negb
scas
sbb
xchg
mov
mov
ja
sub
fdivrs
frstor
cmp
mov
jge
outsl
ret
xor
sbb
cmp
rol
mov
inc
sub
movsl
outsb
lods
pop
das
xchg
adc
add
loop
data16
mov
mov
lret
push
in
enter
loope
lret
loope
jnp
pop
pushf
xchg
mov
xchg
add
lret
or
out
sbb
jb
dec
or
std
mov
les
js
cmc
aaa
sub
lret
sbb
out
adc
jae
gs
sub
push
daa
jns
jo
hlt
out
or
jb
inc
xchg
mov
std
push
das
mov
daa
add
or
imul
in
loopne
inc
inc
xor
adcl
cmp
sub
inc
push
pushf
jb
pop
stos
adc
icebp
shl
insl
xlat
movsl
jp
mov
ret
cltd
daa
jb
verw
jg
stos
xchg
adcb
idivb
flds
push
mov
cltd
cld
call
or
adc
adc
in
out
pop
xchg
xchg
pop
inc
stos
add
or
xorl
fisubl
dec
js
in
lods
sub
jno
pop
fdivrp
or
sub
mov
jo
and
and
cmp
rorl
mov
dec
enter
sub
mov
hlt
jmp
mov
push
out
pop
push
xchg
xor
xor
insl
orb
inc
push
jnp
cwtl
je
repz
loop
test
shll
sub
test
loope
dec
decb
fnstcw
dec
ss
mov
lret
adc
scas
pop
pop
out
xchg
sub
xor
sbb
pop
mov
xchg
and
fwait
cs
push
xchg
mov
cld
dec
push
adc
nop
mov
andl
aas
gs
mov
out
mov
out
test
xor
clc
mov
test
imul
lods
stc
scas
loop
cmp
pusha
fldl
cmc
sbb
dec
sbb
sbb
out
dec
cmp
fwait
lods
subl
push
std
or
push
out
iret
cmpsl
cmp
fsubl
sbb
sarl
push
cs
push
aaa
rclb
sbb
add
jecxz
push
lret
push
or
jns
gs
pop
sahf
icebp
add
imul
ss
dec
pop
repnz
xor
pushf
jb
mov
xchg
cld
xor
dec
or
cmpsb
jp
dec
push
jne
roll
divb
repnz
mov
ja
repz
sbb
outsb
cmc
das
xchg
jp
in
add
pop
lahf
and
ficoml
lret
addb
shlb
xor
sub
jg
push
inc
sub
push
stc
pop
inc
roll
aaa
jg
add
adc
jge
mov
push
sbb
push
jmp
movb
mov
dec
sbb
or
dec
pop
pusha
jle
pop
inc
lea
mov
jne
mov
test
inc
jmp
add
jmp
mov
mov
lds
lret
and
insb
push
jg
pop
sbb
ljmp
push
ljmp
lret
in
int3
fildll
adc
sbb
sub
pop
cld
push
mov
popf
mov
and
scas
mov
mov
sub
repz
jge
or
dec
pop
movsb
mov
scas
and
loopne
out
insb
lods
into
mov
add
inc
sbb
xor
fdivs
jle
data16
dec
jl
ja
xor
in
aas
sub
push
cltd
scas
jecxz
and
leave
imul
mov
fldl
leave
mov
in
mov
mov
int
arpl
in
sbbb
sbbb
mov
pop
cmp
add
cmc
pop
cmp
out
in
repnz
jmp
sbb
icebp
popa
mov
dec
mov
into
xchg
jge
and
lahf
mov
mov
push
xchg
or
lock
std
dec
jle
push
xchg
fwait
mov
das
pop
outsl
cmp
cmc
sub
inc
inc
mov
fs
sbb
xor
inc
pop
jns
shrb
jo
dec
push
fwait
push
push
adc
popl
dec
adc
jmp
cli
out
mov
addr16
jecxz
jmp
mov
rcrb
pusha
xchg
xchg
enter
shrl
inc
pop
mov
xor
cltd
adcl
repnz
xchg
cld
sbb
mov
push
push
and
addl
movsl
inc
add
jns
insb
mov
bnd
shrl
repz
xchg
scas
inc
icebp
add
jmp
mov
mov
nop
cmp
xchg
es
out
sub
jmp
xchg
push
ret
adcb
inc
lcall
les
insl
shl
pop
jg
jg
pop
scas
mov
or
pop
scas
add
fldcw
sbbl
ja
and
pop
int
xor
mov
shlb
xchg
fisttpl
xchg
pop
mov
in
add
add
bound
icebp
mov
imul
inc
inc
test
cld
cmp
xlat
movsl
push
fldenv
inc
or
ss
in
into
cwtl
int3
cltd
pop
adc
leave
aaa
mov
hlt
mov
insb
movsl
push
mov
sti
addr16
mov
decl
roll
insb
pop
dec
mov
and
mov
push
dec
push
add
neg
pop
out
mov
fwait
push
jp
std
jge
movsb
loop
mov
insl
pop
subb
popa
popa
movsb
mov
arpl
push
dec
mov
call
loope
loopne
mov
xchg
pop
adc
ret
add
bound
mov
pop
dec
testb
cld
push
pop
leave
repz
pop
jns
and
sbb
mov
mov
xchg
mov
mov
sub
iret
pop
adc
repnz
add
mov
mov
jns
test
add
faddl
out
sbb
in
inc
into
sbb
aad
lret
xor
jns
test
xorl
scas
lcall
fwait
pop
fdivrl
xchg
lret
jmp
clc
jg
decb
or
mov
push
loopne
fildll
clc
inc
and
sbb
dec
pop
xchg
ljmp
mov
or
mov
shlb
fisubrl
fadds
insb
hlt
cmpsl
cwtl
dec
sbb
rclb
out
loope
daa
fwait
call
int
shr
int3
inc
mov
sarl
xor
xchg
xchg
adc
cmp
dec
xorb
sub
addr16
fidivrs
sti
std
jecxz
imul
adc
aam
xchg
dec
or
fsubrp
xchg
rcrl
mov
inc
adc
mov
mov
pop
jnp
push
inc
mov
xor
jns
sub
sbb
pop
pop
mov
cmp
insl
cmc
dec
lea
lret
pop
icebp
pop
scas
test
fdivs
mov
or
test
imul
inc
fcompl
cwtl
fdivr
mov
lea
xor
inc
in
inc
push
push
jecxz
pop
je
pop
in
mov
sbb
sub
inc
aad
mov
lods
adc
jns
xorb
mov
icebp
xlat
pop
and
shlb
inc
mov
inc
jo
jle
lahf
sub
insb
adc
jecxz
and
cmpsl
sbb
clc
mov
cmp
ljmp
mov
subl
mov
adc
dec
pop
cmp
scas
dec
test
inc
adc
and
stos
push
mov
aas
lret
mov
cmp
push
and
mov
xchg
je
iret
cmp
pop
push
and
leave
push
pop
fs
cmpsl
push
jb
xchg
aam
dec
or
insl
cmpsb
cmp
ds
jecxz
sahf
std
cmc
cmp
repz
das
scas
jnp
mov
loop
dec
xor
into
mov
outsl
loope
cmp
shlb
popa
xchg
mov
stos
xor
std
sub
sub
cmp
inc
lods
jno
push
push
rorb
fidivrs
push
xor
mov
push
mov
addl
stc
out
leave
scas
push
xchg
and
stc
inc
pop
imul
in
lea
out
inc
lods
xchg
and
inc
cld
adc
jmp
push
mul
push
inc
lock
add
inc
mov
sbb
inc
or
xor
cwtl
ja
sub
jno
pop
movsl
cmp
adc
imul
sbb
push
jb
mov
xchg
dec
lret
pop
mov
mov
mov
test
aas
inc
enter
sub
or
lods
dec
push
out
popa
jl
movsl
loop
dec
fbstp
shll
dec
popa
popw
push
sub
pop
push
movsb
incb
mov
and
sahf
movsl
pop
stc
call
push
mov
testl
cwtl
dec
push
rolb
lea
jp
mov
int3
fs
pop
pop
and
xor
add
xchg
scas
pop
mov
divb
int3
out
inc
fidivrl
xor
js
and
fucomi
or
stc
test
nop
stos
cmpsb
out
dec
mov
cmp
add
sub
iret
inc
mov
insl
mov
clc
sub
add
fdivs
fmull
das
xchg
cmpb
xor
addr16
sub
mov
mov
mov
cmp
fmul
ljmp
popf
jb
mov
adc
mov
in
cld
movsl
jo
adc
add
fldenv
ljmp
dec
outsb
xchg
sahf
jae
mov
dec
mov
pop
xchg
dec
std
mov
add
mov
pop
jno
pop
push
xchg
inc
push
lret
sub
arpl
and
adc
mov
xor
fstp
fs
mov
fsub
pop
adc
and
bound
cmpsb
pop
arpl
push
mov
and
jl
les
dec
sti
inc
cmp
push
dec
jno
mov
test
inc
hlt
xchg
and
lods
lea
stc
xlat
and
fldenv
sub
pop
pop
leave
outsb
sub
xchg
sub
xchg
pop
fidivrl
mov
lret
sbb
fnstsw
push
sbb
subl
inc
xlat
sub
rclb
das
dec
push
add
lods
pop
divb
fcomps
loope
enter
mov
ljmp
jp
push
icebp
pushf
or
ja
js
sub
in
mov
sub
cmp
pusha
cmp
push
sbb
add
loop
pushf
cmp
xor
lret
sub
fs
inc
pop
cs
std
add
push
mov
mov
jg
cmp
mov
leave
ss
push
cld
aaa
cmp
and
jne
fbld
inc
test
pop
mov
clc
test
mov
ss
jnp
sbb
pinsrw
push
ss
loopne
ret
mov
dec
in
add
das
mov
scas
jmp
adc
int3
mov
fstl
jbe
or
inc
addr16
mov
fsubp
jecxz
clc
out
scas
lea
mov
jg
pop
loopne
movsl
cmp
lcall
insb
fs
adc
add
nop
inc
out
hlt
cmc
dec
jnp
and
jl
fidivrl
push
les
clc
jg
xor
ror
or
cmpl
mov
lcall
rolb
lcall
std
mov
lret
sbb
mov
push
ss
sti
idivl
icebp
lret
shll
and
pusha
mov
jae
mov
jecxz
jbe
mov
adc
movsb
repz
inc
loopne
fidivl
lret
ficoml
roll
xchg
adc
jae
dec
xchg
enter
repnz
add
push
fwait
loop
and
cmp
ja
idiv
arpl
jne
loope
and
fwait
stos
cmp
and
adc
mov
pop
out
sub
insl
in
in
stos
mov
mulb
and
sub
aaa
out
or
insb
push
nop
je
inc
adc
into
arpl
or
jge
push
push
mov
lods
lret
jno
nop
in
sub
or
ffree
fildl
fidivl
shrb
icebp
push
insb
daa
jo
sbb
das
mov
inc
loope
jge
inc
fmuls
push
aas
mov
mov
jecxz
js
arpl
lock
jge
rcrb
in
shl
xchg
iret
jecxz
iret
popf
lea
outsl
or
jae
xor
rcr
adc
testb
push
pop
loope
mov
mov
jnp
push
fisubrs
xchg
xor
xor
sub
movsb
lock
repnz
jo
mov
andl
ror
inc
jg,pt
xor
insb
ret
mov
mov
sub
movsl
bound
pop
enter
icebp
sub
inc
mov
cmp
ja
push
das
inc
push
xchg
ja
mov
push
xchg
stos
ljmp
divb
dec
sbb
pop
daa
in
lods
sbb
es
or
mov
jns
mov
adc
mov
and
loope
fdivs
rorb
pop
adc
dec
xchg
pop
jnp
mov
xorb
gs
mov
cltd
imul
testb
jne
repz
xchg
sbb
jle
or
and
and
pusha
scas
jmp
mov
das
push
ljmp
inc
or
ss
outsl
or
add
sbbb
hlt
cmp
shlb
shlb
test
ljmp
icebp
push
gs
inc
js
dec
mov
ficomps
fisttpl
lret
jle
lds
dec
fstps
or
stos
mov
insb
ror
pop
je
xor
int3
mov
pushf
add
mov
xor
fdivr
arpl
inc
out
or
inc
fsubrs
rorb
out
xchg
sarb
enter
pop
add
mov
sti
adc
or
fnstcw
push
test
sbb
ret
xor
out
test
xchg
out
push
sub
ja
cmpsb
inc
jns
movsl
shrb
pop
xchg
imull
jb
adc
lea
jb
mov
test
pop
das
loop
push
outsb
mov
stc
leave
adc
xlat
dec
subb
jecxz
adc
fdiv
in
dec
dec
aaa
mov
das
ss
dec
lret
push
cmp
insb
jl
adc
dec
lea
jno
mov
jbe
or
scas
xchg
sbb
push
sub
xor
clc
stos
lock
mov
popa
pop
xlat
sub
fisttpll
rcr
sbb
push
push
sub
rorb
adc
mov
push
add
loope
insb
dec
cmpsl
int3
jns
sbb
lret
fwait
movsl
pop
sbb
mov
push
sub
cli
cltd
mov
gs
clc
mov
popa
sbb
or
scas
movsl
sbb
dec
mov
out
add
add
nop
add
pop
jo
rol
sahf
subb
jmp
cltd
pop
sub
add
rol
sub
stos
dec
pop
lock
push
fcomps
jmp
adc
xchg
in
push
or
mov
mov
lock
xor
enter
push
sub
out
testl
incb
push
dec
add
or
sti
fldcw
out
call
std
nop
jno
loop
cmp
repnz
clc
test
adc
into
cwtl
jle
inc
dec
nop
xorl
add
stc
adc
lcall
divl
xor
sbb
gs
outsl
push
sbb
dec
mov
scas
mov
sbb
lcall
cmp
pop
mov
jo
lret
and
ss
push
pop
fnsave
mov
pop
sbb
dec
cmp
xor
mov
lds
fidivl
loop
outsb
nop
sahf
clc
mov
fcoml
or
push
pop
sahf
and
or
add
outsb
test
mov
add
ljmp
fprem
sub
cmpsl
call
mov
adc
inc
lahf
inc
jne
stos
inc
loop
and
and
mov
add
in
jecxz
inc
push
cmp
push
and
dec
popa
add
cld
adc
sbb
mov
xor
loopne
sbb
enter
scas
add
hlt
adc
ja
int3
xchg
arpl
push
push
or
xchg
pop
fxch
pop
push
sub
ljmp
popf
mov
dec
pop
mov
cmc
iret
lea
and
fxch
test
xor
add
and
mov
repnz
mov
popa
loope
movsl
imul
xchg
inc
sbb
repz
mov
mov
mov
sbb
xchg
cltd
mov
inc
xchg
mov
popa
or
fcompl
fldcw
pop
ret
adc
mov
inc
jmp
in
in
sbb
cmpsb
loopne
xor
pop
ja
add
outsb
aas
insl
nop
andb
mov
mov
cld
sub
lea
lahf
push
add
push
sub
and
scas
loope
mov
pop
pop
insb
fisttpll
repnz
cld
ret
fisttpll
lods
shrl
mov
adc
sti
scas
inc
flds
repnz
or
shl
cmp
mov
lret
fldcw
inc
jp
xchg
push
in
xor
mov
cltd
xor
repnz
add
sub
add
lret
push
in
loop
dec
push
jmp
pop
movaps
xchg
adc
adc
fstpl
sub
adc
add
push
icebp
and
inc
xchg
les
dec
das
xchg
cmp
fmul
pop
jle
cltd
xchg
cmp
sti
xor
jo
cli
scas
fwait
inc
movups
pop
inc
cmpsb
out
xchg
cmp
mov
sbb
cmp
mov
pop
repnz
sahf
cmpsb
xchg
inc
cmp
popa
dec
jmp
and
adc
movsb
push
add
fisubrs
jge
lock
sahf
add
xchg
dec
imul
nop
cli
adc
jmp
lcall
mov
jo
cmpsb
jae
sub
test
sub
rol
push
repz
push
cmp
xor
lcall
inc
in
add
mov
cmp
dec
cs
imul
mov
loopne
test
lods
pop
jecxz
jp
fdivs
lcall
pop
lock
xchg
pop
xor
push
int
js
sarl
gs
jl
dec
pusha
xor
and
hlt
cmp
mov
stos
in
mov
ljmp
test
lea
sbb
xor
cmp
mov
add
in
mov
pop
xor
inc
test
lods
mov
push
imulb
jmp
xor
test
shlb
adc
icebp
mov
and
and
jb
pushf
scas
mov
jp
jl
repz
shr
outsb
bound
imul
iret
dec
cltd
mov
and
orl
int3
scas
lret
aas
outsb
ja
sti
jmp
iret
pop
out
adc
in
jb
push
jo
enter
mov
push
dec
add
mov
xchg
mov
ljmp
std
fildll
out
sbb
xor
and
repnz
and
cmp
insl
stc
loop
outsl
jbe
mov
xchg
sub
add
mov
mov
mov
sub
and
jns
push
aam
cmp
fcmovu
mov
movsl
out
das
pop
jecxz
lcall
daa
pop
adcb
push
push
or
aad
add
cmp
lret
inc
stos
push
jmp
sarl
test
pop
jae
repnz
adc
and
int
ss
mov
or
sbb
inc
add
mov
dec
mov
cmp
ret
or
enterw
out
or
mov
out
lock
inc
lcall
in
xor
push
out
push
adc
jne
repz
cmpsl
sub
jo
cmc
push
and
sub
mov
clc
mov
cmp
cmp
mov
lret
test
xchg
push
mov
mov
push
out
ljmp
imul
movsl
push
fmuls
stos
inc
std
pusha
or
ficoml
lret
add
pushf
dec
and
popa
shrb
push
fdivrs
push
enter
daa
inc
icebp
cmc
mov
in
dec
xlat
jne
ret
and
jae
pushf
lret
js
arpl
jg
sub
cs
pushf
jmp
jb
and
lret
sarb
pop
dec
aas
sbb
cmp
sbb
cmp
jno
mov
call
mov
jge
scas
cli
imul
xchg
in
xor
cli
and
call
jle
incb
pop
imul
mov
mov
mov
adc
push
jo
xchg
stos
pop
xor
mov
lea
xlat
dec
mov
lods
fnstenv
rcl
push
sbb
dec
or
push
fsubs
stc
sahf
pushf
lahf
fwait
pop
shld
sbb
aad
mov
xchg
xlat
shlb
xor
es
cs
inc
aas
adc
adc
sbb
ss
out
out
push
dec
pop
mov
xlat
clc
pop
add
cs
pop
jp
push
ret
imul
dec
or
leave
icebp
loopne
imul
neg
or
dec
ss
mov
cmp
enter
push
adc
incl
inc
cld
add
andl
mov
xchg
adc
sub
cld
iret
arpl
mov
adc
mov
push
jecxz
or
andl
pop
inc
xchg
enter
dec
fldln2
movsb
lock
cli
inc
aam
icebp
inc
push
outsl
out
fsubl
rcr
je
fdiv
aas
push
aad
cmp
sub
stc
push
sub
xchg
arpl
jl
xchg
test
cmp
mov
pop
cwtl
ljmp
mov
cltd
outsl
int
lcall
jge
sub
out
aas
jns
pop
ljmp
xor
pop
xchg
mov
les
pop
test
mov
jmp
shll
popf
ret
mov
inc
xchg
sbb
ja
mov
cmpsb
jecxz
loopne
pop
xor
std
mov
jg
sahf
out
add
adc
in
rcll
add
aaa
in
mov
repz
mov
mov
push
fwait
fwait
adc
pusha
adc
je
mov
mov
pop
jno
lret
jae
mov
pop
aas
xor
and
adc
pcmpgtd
sar
and
adc
mov
leave
cmp
das
dec
out
ret
mov
push
mov
cmpsb
out
xchg
cmp
mov
sub
and
cmpsb
jnp
movsb
mov
int3
mov
adc
mov
fcomps
inc
pop
mov
add
insb
ret
es
jle
lock
pop
loopne
fwait
enter
pop
repnz
mov
mov
mov
mov
sbb
adc
lahf
dec
repz
pushf
mov
pop
mov
jno
sbb
dec
stc
mov
pop
add
jle
pop
in
fwait
scas
in
lea
mov
pusha
pop
or
repnz
xor
iret
xchg
pop
dec
ret
sarb
fdivl
les
sar
mov
iret
and
jae
and
xor
dec
xchg
sbb
test
pusha
shll
pop
push
lcall
mov
int3
js
xchg
sbb
push
cmp
mov
int
inc
or
mov
push
inc
add
jae
into
jo
fisubrs
fs
push
xchg
lods
hlt
filds
pop
push
gs
std
push
xchg
sbb
movl
mov
pop
aam
wrmsr
mov
ljmp
cmp
ret
xchg
incb
push
cmpsb
ds
cwtl
into
add
pop
mov
mov
bound
lock
push
and
decl
push
divl
lret
xchg
outsl
mov
adc
imul
fstpt
test
pop
xlat
xchg
movsb
dec
test
and
dec
gs
sahf
subl
cmp
lret
inc
mov
cmp
insb
and
outsb
mov
imul
mov
sub
cmp
daa
xor
decl
jmp
fs
bound
push
or
dec
mov
adcl
sbb
and
lods
inc
int
and
stos
mov
pushf
in
stos
and
cmp
pop
pushf
jb
cmp
hlt
xchg
inc
sbb
fiadds
ret
xlat
mov
scas
ja
imul
push
dec
pop
das
aad
push
xchg
insb
sbb
lds
mov
push
fcomps
out
repz
inc
dec
sbb
fldt
mov
dec
push
sub
sub
pop
jp
loope
dec
das
pusha
mov
mov
outsb
cmp
js
ds
jle
inc
xchg
mov
cmp
imul
iret
push
out
insl
outsb
sub
mov
jb
fsub
inc
rcrb
push
addl
mov
vmaxsd
xor
daa
sub
dec
lret
push
cmp
mov
mov
push
inc
adc
add
pop
insb
xorl
xor
push
mov
dec
lea
jp
loopne
js
inc
data16
rcr
fiaddl
pop
popf
jbe
insb
stos
xor
fldt
lea
roll
and
stos
fwait
cmpsb
cmpsl
add
push
mov
inc
daa
fcmovnu
or
sub
sbb
jb
mov
and
popf
lea
or
ss
aam
inc
into
and
jle
xchg
int
repz
js
mov
ficoml
inc
out
add
xor
mov
and
repz
into
scas
test
push
lret
pop
cli
sbb
lock
xor
lds
aas
imul
add
sbb
out
loopne
xor
pop
mov
cmp
cmpsb
and
mov
pusha
xchg
xchg
adc
sub
xor
push
or
std
iret
xchg
std
mov
mov
mov
enter
clc
aad
leave
in
dec
fs
test
mov
into
mov
scas
lcall
out
add
fdivp
pop
inc
pop
xchg
jns
push
les
repnz
sbb
xchg
jns
xor
sub
xor
jp
dec
xor
cmp
dec
je
cmc
movsb
stc
stos
ja
lock
mov
popf
pop
stos
push
cltd
mov
mov
aad
lock
dec
add
xor
loope
movsl
xchg
sub
es
lret
or
lea
inc
mov
lret
xchg
xchg
aad
sub
push
xchg
lea
add
mov
repz
sti
addl
jge,pt
dec
bswap
daa
xchg
cmpl
mov
push
jmp
subb
jno
bound
sub
dec
inc
mov
jb
shl
xchg
jp
and
mov
inc
inc
aad
fstpt
imul
pop
xor
cli
movsb
mov
sbb
dec
pop
jo
mov
push
fstpt
mov
repnz
or
imul
xorl
fnstenv
movsb
arpl
lahf
aas
fiadds
test
enter
jo
inc
shl
push
aad
fists
gs
stos
loopne
mov
lds
push
jae
dec
stos
in
dec
jns
mov
dec
adc
or
push
jae
clc
sbb
jnp
pop
mov
or
ret
in
pop
sub
sub
pop
mov
mov
xor
xor
stos
lret
lods
es
mov
shlb
add
stos
jnp
stos
sahf
xchg
xor
xchg
sbb
scas
lahf
mov
jmp
and
and
or
nopl
jae
mov
cmc
std
jbe
je
and
pop
jmp
mov
adc
arpl
ss
xchg
mov
dec
stos
dec
xor
push
cmpsl
inc
es
pop
inc
ret
dec
test
mov
adc
or
push
sahf
sar
or
lods
add
ljmp
in
rol
fistl
add
cwtl
xchg
hlt
cmpsb
addr16
sbb
xor
leave
and
int3
loopne
cmp
das
lcall
in
inc
pop
jle
adc
mov
mov
cmc
sub
pop
test
mov
movsl
mov
or
push
jle
in
data16
iret
rclb
mov
xchg
pop
icebp
test
or
addr16
repnz
das
jmp
sub
jp
push
mov
jno
xor
leave
xchg
mov
outsl
arpl
mov
sbb
and
pop
je
jo
mov
out
je
sub
lea
cmp
or
dec
fcmovu
cli
fildll
in
nop
pusha
or
stos
loop
dec
xor
mov
jbe
outsb
xor
aaa
add
aaa
dec
fnstcw
iret
inc
adc
adc
shrl
enter
push
gs
inc
adc
test
mov
push
movsb
add
cmp
mov
dec
rolb
in
xlat
in
popa
int3
js
pop
cld
push
icebp
pop
loop
lods
sub
popf
lret
cmp
adc
and
push
pop
rcrb
cltd
gs
lods
addr16
test
iret
stos
loop
insb
xor
xor
subl
jnp
and
mov
push
pop
sbb
imul
dec
aad
popa
jge
push
hlt
push
push
add
mov
stc
clc
xchg
test
mov
pushf
orl
add
lret
or
pop
movsb
or
mov
add
scas
shr
dec
jbe
jno
addb
pop
sub
mov
adc
scas
movsl
andl
jae
pop
mov
push
dec
fcoml
je
fimuls
cmp
fmuls
mov
mov
insb
xchg
inc
in
incl
inc
push
xor
sub
cmp
or
out
xor
mov
jg
mov
cmp
jmp
and
xor
xchg
xlat
fs
addr16
aas
push
gs
ss
push
push
sahf
daa
shll
cmc
and
mov
andb
mov
sub
mov
in
into
sti
imul
mov
cwtl
sbb
in
mov
lds
xlat
push
cmp
and
es
dec
scas
lahf
mov
mov
xor
xor
add
scas
fnstcw
outsl
jge
ds
push
sahf
and
sub
cmp
test
mov
loope
jecxz
icebp
imul
xchg
jb
fwait
dec
adc
pop
in
dec
pop
mov
ret
jo
xorb
insb
push
mov
fbld
divb
enter
mov
push
and
xor
mov
das
jnp
stos
sbb
cli
ret
mov
and
test
push
leave
or
push
jg
pop
xchg
jecxz
adc
cmc
and
xchg
cmpsl
dec
mov
lahf
push
sub
adc
mov
mov
loop
gs
pushf
add
out
cs
or
ret
std
test
xchg
iret
movl
cli
mov
movsl
loopne
xor
test
pushf
icebp
imul
cmp
mov
ss
sbb
xorb
sahf
mov
and
insl
scas
mov
into
jg
imul
dec
mov
push
out
cmpsb
xor
mov
popa
sub
mov
dec
pop
rorl
adc
sbb
repz
mov
cwtl
leave
loopne
lods
in
mov
lods
out
dec
icebp
fistl
xchg
jbe
insb
sub
and
insb
shlb
stc
add
pushf
fsubrl
mov
mov
notl
xchg
jp
adc
mov
insl
jae
mov
mov
push
pop
popa
add
lds
es
sub
test
mov
daa
in
repnz
cld
aad
std
pop
shrb
loop
std
mov
sub
aaa
idivb
sbb
xchg
pop
mov
test
cmp
push
cmpsb
mov
push
pop
shr
add
mov
push
pop
adc
test
dec
push
sbb
pop
rcll
call
add
lahf
test
pop
mov
jl
loope
xchg
movsl
shll
inc
mov
cmpsl
cmc
cld
sbb
xor
sbb
xchg
cmp
mov
inc
xor
in
dec
xor
imul
cld
xor
fwait
sub
pop
nop
mov
dec
xchg
cwtl
add
or
mov
push
or
or
mov
inc
xchg
lcall
pop
xchg
mov
adc
mov
inc
jno
mov
adc
or
sbb
call
and
inc
inc
shrl
add
je
lea
mov
push
cmp
xchg
jae
inc
and
inc
cmpsb
inc
test
adc
sbb
lret
divl
lret
pop
push
cmp
mov
push
add
in
push
cli
push
cli
pop
or
data16
imul
xchg
push
fldt
enter
inc
andb
push
aaa
icebp
cmp
dec
push
stos
pop
lock
xor
stc
xchg
ss
mov
adc
std
sahf
cmp
cmp
rcrb
pop
enter
mov
push
cs
std
repz
sar
sbb
out
in
xor
push
lahf
sub
pop
aad
aam
cmp
pop
call
add
cmp
rol
sbb
fisubs
lock
fimuls
xor
pop
xchg
mov
fwait
cmp
lcall
xor
fdiv
outsb
ret
pop
mov
stc
dec
push
push
adc
jg
in
imull
xlat
aam
es
mov
xchg
cmpsb
jmp
inc
outsl
stos
loopne
push
sbb
sub
mov
ret
imul
div
mov
shr
mov
pop
jge
xchg
es
dec
dec
jo
js
mov
adcl
iret
push
xchg
filds
cmp
mov
xlat
shrl
xchg
and
nop
inc
add
xchg
sbb
and
adc
je
pavgw
and
dec
jp
lea
sbb
push
sbb
and
jmp
orl
lret
fistpll
shll
xchg
testl
in
cmp
jnp
daa
call
mov
ja
hlt
inc
mov
and
rcl
mov
popf
outsl
shrb
mov
mov
dec
xchg
xor
scas
data16
aam
out
aaa
sti
sarb
xor
pop
adc
lret
ret
xor
jno
sub
or
cmc
cltd
int
cmp
sub
inc
faddl
sahf
int
jbe
inc
movsl
jmp
mov
fisubrl
dec
sahf
cltd
ja
test
enter
mov
mov
pop
popa
jo
adc
push
mov
push
mov
xchg
sti
mov
mov
sarl
mov
lcall
cli
xor
xor
mov
sub
outsb
inc
in
fcmovnb
mov
pop
fsubrp
leave
lret
call
daa
sahf
adc
rcrb
mov
in
xchg
cwtl
push
inc
mov
mov
or
pop
push
adc
adc
push
jbe
add
jae
lahf
cs
scas
and
or
pop
inc
outsl
mov
sub
mov
mov
out
call
fs
dec
lods
xchg
addr16
pushf
xlat
into
dec
pop
inc
dec
jo
out
cmp
lock
cltd
addr16
mov
cmp
pop
mov
inc
leave
lock
mov
aaa
adc
add
in
jl
dec
dec
push
aam
arpl
mov
rcll
pop
cltd
jmp
aam
push
jg
cmpsb
xor
outsl
loope
push
mov
bound
mov
hlt
daa
jg
lods
mov
cmpsl
mov
add
jbe
dec
sbb
out
pusha
mov
pop
sub
movsb
inc
push
rcrb
adc
dec
addr16
cs
mov
xchg
or
gs
sub
dec
aas
jmp
adc
in
fnsave
imul
jl
and
mov
dec
xor
adc
mov
pop
in
add
jne
inc
lds
pop
into
xor
xor
call
add
les
inc
add
sub
leave
lea
imul
loop
add
test
dec
push
or
push
jg
push
dec
cli
inc
nop
cmpsb
xchg
dec
out
xchg
mov
inc
dec
enter
xchg
pop
hlt
dec
dec
xchg
shlb
or
push
lea
adc
cmp
out
inc
enter
pop
movsb
shrb
or
xchg
arpl
pop
push
icebp
mov
movsl
inc
in
mov
push
stos
push
shr
dec
sub
aad
push
dec
sti
jecxz
cmpsl
mov
push
rcr
cmpsb
or
fdivrs
add
dec
sub
pop
inc
sub
inc
je
cmp
sarl
sbb
mov
xor
fs
es
dec
addl
mov
data16
pop
push
mov
lret
setg
mov
ss
out
loopne
or
pop
js
wrmsr
js
mov
inc
inc
ret
enter
rol
icebp
pop
and
pop
in
insb
gs
mov
scas
ja
sbb
xor
idivl
int3
or
sbb
sahf
std
test
jg
push
incb
or
sbb
out
hlt
xchg
out
lret
fdivrl
and
stos
inc
je
ret
inc
test
out
xorb
pushf
hlt
cmpsl
cmp
push
hlt
enter
arpl
or
in
cmp
dec
insl
sub
xchg
push
lcall
sbb
pop
lahf
mov
dec
pop
ss
inc
lahf
pop
cmp
testb
cli
xchg
cmpb
jge
lods
icebp
test
das
adc
cmpsl
test
push
test
jnp
icebp
inc
icebp
cmp
and
imul
sub
cwtl
jge
jae
pop
mov
sahf
dec
add
sub
mov
xor
jns
test
repz
jp
mov
rcrl
mov
fdivrp
ljmp
ss
into
cwtl
ds
inc
arpl
jmp
mov
cmp
mov
or
cmc
inc
mov
cltd
cwtl
inc
aas
sti
imul
jp
fldl
mov
call
pop
and
sahf
je
pop
loop
and
ret
pop
js
pop
out
ret
cmc
inc
sbb
xor
repz
dec
inc
pop
adc
add
scas
imul
fbstp
xorl
inc
hlt
push
ss
cmp
mov
and
faddl
and
jno
mov
test
cmp
out
add
cmp
clc
or
mov
fisubrl
push
push
sub
fisubrs
mov
jecxz
clc
mov
xchg
xchg
push
es
scas
sbb
lahf
sub
in
loopne
cmp
fstpt
mov
jae
into
sub
test
pop
repz
and
repz
stc
inc
movsb
aas
sti
sahf
icebp
add
outsl
fnstenv
jae
dec
sbb
sbb
inc
push
sub
dec
sbb
or
dec
inc
es
aaa
fidivs
xlat
push
cltd
pop
shll
xor
dec
shrl
in
dec
xor
lcall
mov
mov
scas
add
push
jmp
jle
into
test
mov
iret
dec
xor
mov
jp
in
cmp
xor
mov
std
movd
jne
dec
pop
xchg
div
cmp
test
inc
addr16
and
inc
or
das
insl
cmp
mov
mov
mov
out
movsb
lods
jecxz
push
divb
push
test
adc
or
aam
adc
mov
fst
pop
xor
cmp
rcr
std
xor
andb
push
mov
xchg
push
push
mov
and
add
or
jg
ret
mov
xchg
insb
cmp
call
arpl
mov
jns
and
adc
adc
lahf
cli
jnp
mov
aaa
mov
lock
mov
outsl
insb
add
xor
mov
aad
imul
pop
test
ret
push
cmp
enter
jae
jbe
movsb
sub
repz
fcomps
jmp
in
dec
pop
shrb
out
in
mov
push
icebp
out
sbb
shr
nop
outsb
outsb
out
jle
call
loop
mov
pop
ja
jg
nop
cmp
mov
mov
cmp
aam
int3
push
loope
sub
sub
push
mov
push
add
dec
aad
fistl
add
jo
xchg
adc
push
mov
fucomi
inc
cmpsb
mov
inc
pop
and
xchg
addr16
or
inc
inc
mov
mov
adc
ljmp
add
sti
jmp
and
xor
and
mov
ror
cmp
enter
mov
std
push
and
xchg
sbb
xchg
mov
fimull
jp
sbb
adcl
xchg
sbb
scas
in
inc
sbb
adc
mov
rcll
add
xor
dec
add
push
cli
mov
adc
sbb
lahf
xor
insb
pmaxub
lahf
mov
jbe
cmp
scas
es
ret
pushf
setp
pop
adc
daa
test
dec
insl
mov
addr16
inc
mov
push
jg
sbbl
add
xchg
rclb
xchg
out
orb
adc
enter
inc
cmc
and
mov
lea
lods
dec
mov
cld
add
out
mov
sub
loop
mov
mov
adc
movsb
dec
inc
es
leave
outsb
fs
jae
fs
mov
push
sub
pop
fwait
inc
popf
mov
adc
out
or
orb
fs
sub
in
mov
sarl
mov
xor
enter
popa
loopne
js
out
jbe
loop
xchg
jbe
dec
xor
cmp
jb
jecxz
xor
mov
lods
dec
or
andb
cmp
repz
push
cmpsb
aad
mov
je
inc
pop
mov
fsubrl
cltd
add
imul
jecxz
clc
ss
movsl
add
push
sub
and
insl
in
stos
mov
cltd
sahf
repz
cmp
sahf
cmp
or
lret
incb
xchg
push
sbb
in
adcl
sub
push
int3
in
sub
jmp
mov
out
imul
fcoml
out
or
adc
jb
jae
rcrb
sub
imul
lret
hlt
stos
lahf
in
jmp
ret
adc
out
and
fldcw
ss
scas
test
mov
fisttps
cmpsl
pop
dec
sbb
push
mov
std
lock
mov
ficompl
inc
dec
add
sbb
stc
cld
imull
jle
shl
arpl
xchg
and
mov
fimuls
jo
repz
sbb
mov
outsl
pusha
dec
push
popa
sbb
aam
pop
divb
xchg
jne
mov
test
inc
rcll
sar
xchg
jcxz
sub
push
mov
test
out
mov
jne
rol
cltd
enter
mov
mov
pop
xchg
outsl
mov
xchg
fstl
inc
mov
mul
push
cltd
hlt
mov
xor
xchg
pop
out
cmp
pop
push
add
mov
push
push
aam
dec
shll
lcall
aad
stos
pop
mov
dec
and
movsl
je
push
cmp
mov
outsl
xchg
sbb
mov
imul
sbb
lods
loop
mov
ret
enter
xchg
imul
mov
xor
mov
cli
arpl
inc
push
xor
outsb
inc
jne
lcall
xchg
sahf
pop
add
push
sbb
mov
or
loop
imul
xor
clc
add
adc
mov
aaa
fadd
add
shlb
xchg
xlat
dec
es
movsb
xchg
xor
mov
repnz
sar
into
jno
roll
fxch
outsb
stc
inc
jbe
div
sbb
orb
shrl
pop
add
pop
dec
mov
xchg
bound
jl
stos
cmc
repz
push
jbe
decb
pop
iret
in
inc
or
push
and
outsb
sub
stos
pop
lods
fcomps
rcrl
test
pop
mov
les
addr16
add
pop
aas
pop
sahf
mov
sbb
scas
aas
sub
lret
mov
lock
xlat
fbstp
xchg
add
xchg
mov
push
mov
hlt
xchg
shrb
jns
jno
sbb
mov
or
std
inc
cmp
lds
loope
js
and
dec
push
or
xchg
je
lea
cmc
shl
mov
mov
dec
lea
icebp
mov
adc
das
aaa
shlb
mov
add
rorb
imul
push
mov
mov
das
dec
or
jns
shll
push
clc
xor
inc
cmp
fld
add
out
cltd
orb
or
sbb
aas
push
cmp
sub
bound
fnstsw
xor
out
std
cld
pushf
pop
sbb
fwait
sub
add
outsl
fstl
and
adc
dec
stc
sub
push
xor
xor
test
cmp
jnp
leave
movsb
mov
movsl
popf
test
roll
testb
sbb
stos
xchg
pop
lcall
mov
or
lahf
ss
into
sarl
inc
add
inc
push
push
lea
push
dec
mov
jae
rorb
inc
aas
or
sbb
jmp
sahf
subl
push
hlt
sub
ljmp
dec
mov
lods
les
scas
sub
adc
and
sbb
aas
dec
cltd
push
xor
adc
inc
xor
and
leave
push
mov
jmp
lods
repz
repz
xor
mov
push
xor
dec
fisttpll
mov
pushf
cltd
xor
mov
pushaw
pusha
movsl
mov
pop
loopne
pop
inc
adcb
adc
jl
jp
stos
sbb
and
push
push
add
lods
push
cli
add
cltd
xorl
mov
mov
movsl
sub
out
xchg
lret
out
ret
int3
cltd
dec
shll
add
lock
sbbl
and
adc
jl
push
cltd
and
push
pop
loopne
aam
imul
jmp
xchg
fs
jo
xchg
xchg
jo
loope
das
mov
icebp
imul
rcrl
xchg
xor
push
dec
dec
inc
cmp
loope
enter
in
jecxz
and
mov
dec
pop
sbb
mov
xchg
xchg
sbb
icebp
ret
daa
repnz
or
shrl
lods
push
xor
sbb
out
test
ja
js
xchg
ret
fs
daa
leave
rcrb
jns
cld
mov
pop
ds
inc
clc
arpl
ret
xor
push
hlt
pop
sbb
cmp
adc
sbb
cs
push
mov
inc
lock
add
clc
cmpsl
test
push
aad
xor
lret
and
inc
cmp
lret
pop
or
popf
jge
mov
scas
in
lods
pop
loop
inc
jge
or
shlb
es
fnstsw
sbb
cmp
and
les
arpl
xlat
sbbb
repz
sub
adc
mov
sbb
jecxz
inc
and
icebp
pop
mov
shl
jbe
lock
mov
int3
inc
addr16
faddl
lret
jnp
cld
lret
sub
push
inc
push
sbbb
sub
sbb
fimuls
and
adc
dec
xchg
or
ret
xlat
daa
movsb
outsl
or
js
mov
mov
xor
in
aas
mov
xchg
add
cmc
nop
fcoml
ret
arpl
lcall
lcall
mov
sub
xchg
cmp
jmp
fcoml
ret
dec
je
add
jle
add
mov
or
adc
out
jb
xchg
push
mov
add
pop
jae
mov
cs
and
adcb
dec
scas
ror
mov
pop
mov
mov
lods
and
mov
mov
adc
aam
sbb
dec
xchg
clc
rol
push
jno
and
cmp
inc
sbb
cmc
movsl
mov
fnstenv
pop
fwait
and
push
dec
fwait
icebp
inc
incl
push
aaa
in
popf
data16
out
aas
shll
mov
outsl
rorb
and
cmpsl
pop
sbb
mov
ficoms
cli
mov
or
shlb
sbb
push
cmp
hlt
fisttpll
jg
jnp
fdivs
andb
adc
add
sbb
arpl
out
xchg
push
out
adc
pop
push
push
not
iret
mov
push
arpl
call
jp
mov
dec
addr16
test
into
bound
adc
or
jne
or
lcall
adc
xchg
notb
sub
cltd
and
ret
xor
xor
inc
in
pop
cmc
xor
movsb
sbb
addr16
jl
lds
cmp
int
int3
fldcw
and
shll
bound
pop
fsubr
and
lret
xor
fwait
push
xor
popa
out
add
call
add
cmc
shrl
xor
and
cmp
or
jmp
stc
sub
jl
in
mov
xchg
push
and
dec
add
mov
mov
sbb
loopne
aam
notb
std
stc
loopne
icebp
or
inc
mov
mov
xor
clc
inc
scas
movsl
sbb
dec
jbe
mov
dec
adc
jnp
xchg
iret
mov
sbb
fcomps
mov
hlt
sub
cs
jne
fwait
sbb
lcall
mov
je
pop
push
cltd
imul
mov
movsb
scas
imul
pop
notl
push
pusha
std
xor
mov
lret
or
cmp
push
cmp
cmp
lahf
mov
jge
add
adc
jg
testl
adc
cs
mov
mov
enter
mov
int3
call
fabs
mov
sahf
ret
fcmovbe
sbb
imul
jmp
call
adc
pushf
cmp
push
mov
push
mov
nop
stos
push
mov
out
add
mov
addr16
ret
mov
stos
ja
lcall
xlat
xor
sub
sti
add
push
aam
jmp
lea
mov
leave
adc
push
arpl
addps
xor
pop
repnz
andl
ficompl
pop
out
cli
xchg
inc
push
pop
xchg
lcall
mov
mov
pop
sti
jns
jmp
cmc
cld
mov
adc
in
sbb
pop
cltd
shll
push
mov
shrl
sbb
sti
jno
push
mov
lods
jno
xor
adc
fcomi
mov
js
add
cld
adc
cmp
mov
mov
cmp
enter
pop
jo
jg
push
mov
jl
and
in
dec
nop
out
out
das
inc
pushf
imul
xor
or
aad
push
addl
dec
mov
cmpsl
adc
sbb
cmp
out
iret
das
push
jl
jbe
fnsave
xchg
roll
jecxz
sahf
stc
xchg
mov
js
inc
dec
sbbl
jne
xchg
cmp
pushf
cld
cmp
out
push
scas
sbb
push
out
scas
outsb
enter
lahf
movsb
popf
push
in
mov
out
cld
movsb
sbb
push
jmp
out
xorl
and
pop
mov
fwait
addr16
dec
xor
out
mov
aas
pop
pop
inc
cmp
xor
inc
lds
jmp
ljmp
movsb
mov
cmpl
jnp
mov
jmp
mov
dec
pusha
mov
outsb
in
imul
push
add
adc
and
jecxz
ret
inc
adc
imul
mov
fcmovnu
js
dec
outsl
ljmp
cmp
mov
lea
sub
inc
test
xor
push
leave
mov
mov
enter
shrl
jne
pushl
xor
mov
data16
jb
push
push
inc
sahf
fcompp
flds
loopne
lahf
push
scas
mov
sbb
xor
mov
xchg
aad
je
dec
cmp
iret
sbb
lret
xchg
jp
fnsave
cmp
mov
dec
call
fdivrl
dec
clc
jns
inc
sub
sbbl
loop
and
mov
neg
ret
shlb
cs
orb
adc
in
stc
jmp
inc
rep
cs
pushf
sbb
fildll
cmc
das
adc
push
test
push
pop
mov
xchg
or
jmp
das
cld
jno
pop
call
popf
push
mov
pop
sub
jno
adc
outsb
enter
sbb
pusha
pushl
pop
pop
sti
stc
loope
sub
cmpsb
fadds
xchg
call
pop
dec
rol
mov
data16
jmp
cmpsl
mov
aad
xor
jb
dec
xlat
push
push
into
sbb
add
jge
scas
xlat
lock
cmpsl
filds
jmp
mov
jecxz
rol
mov
stc
lret
xchg
das
ja
xor
movsb
push
fidivrs
jg
scas
imul
and
movsb
pusha
popf
in
mov
repz
jb
sub
in
icebp
aaa
fistpll
in
in
xor
loop
and
sub
ret
sbb
scas
sbb
xchg
in
je
push
rcrl
mov
mov
mov
sahf
pop
int3
lea
sbb
sub
pop
mov
add
addr16
in
sbb
mull
popf
shll
jge
pop
out
sub
sbb
stc
xor
insb
stc
int3
jno
or
push
xor
xchg
xchg
ret
mov
mov
xor
inc
out
or
out
fsubrp
test
dec
in
call
in
mov
nop
inc
xlat
xchg
ret
idivl
aam
pop
xchg
sbb
vpsrlq
fcmovne
aad
mov
mov
cltd
lds
jecxz
jno
xor
out
cmp
shll
loopne
cmp
mov
mov
inc
and
loop
and
and
pop
add
scas
jne
mov
lea
test
ja
and
push
inc
mov
insl
xchg
inc
and
xor
cs
cmpsl
mov
mov
jg
idivl
lea
pushf
cmpl
in
sub
cmp
lods
jno
movsl
rorl
add
mov
jbe
ret
movsl
ds
aaa
lds
std
sub
adc
outsb
ror
rcll
stos
mov
imulb
cli
jnp
lods
rorl
lock
arpl
push
in
pop
xor
inc
jnp
push
add
dec
or
or
dec
mov
mov
xlat
inc
jbe
shlb
stc
jbe
add
jnp
jmp
cmc
pop
jnp
xchg
movsb
xchg
imul
call
test
cld
out
and
movsl
mov
cli
fwait
dec
xchg
ret
ret
ret
cmp
int3
xchg
push
ret
mov
xchg
dec
mov
sysret
cmc
cmc
sub
mov
push
adc
lahf
ficomps
test
leave
lods
pop
and
fisubl
mov
mov
sbb
popa
or
adcb
pop
pusha
lods
mov
nop
jg
push
test
stos
ret
test
daa
dec
ficoms
mov
int
or
adc
std
mov
xchg
xor
idivb
pop
mov
adc
dec
lods
or
scas
pop
out
enter
pop
in
iret
pop
sar
ja
mov
dec
sahf
add
cmp
push
sub
push
bound
add
mov
test
addr16
mov
push
adc
cmpsl
dec
jl
xchg
or
mov
inc
sbb
xlat
out
ja
daa
jmp
pop
repz
mov
lahf
jnp
imul
jbe
clc
lods
dec
test
push
add
xor
mov
mov
or
xor
ffreep
and
dec
sub
mov
fs
bound
loopne
test
pop
add
mov
pop
imul
or
sti
test
mov
mov
loope
ja
bnd
cmp
mov
mov
sbb
out
mov
cmp
mov
xchg
aaa
nop
scas
arpl
sbb
in
xchg
mov
repnz
xor
out
dec
cmc
lcall
scas
jle
fcmovnb
mov
xchg
test
jecxz
stos
fiadds
mov
decb
pop
jnp
sbb
dec
or
sub
push
jmp
push
mov
or
aad
xor
push
xchg
jbe
add
lea
jecxz
popf
icebp
inc
cmpsb
cltd
push
mov
sub
jo
pushf
icebp
cmp
imull
push
repz
clc
push
push
out
inc
push
mov
into
orl
pop
stc
jns
jae
rcrb
repnz
leave
pop
fiaddl
out
xchg
jmp
sub
add
pop
fmuls
pop
cmp
pop
into
shlb
and
and
and
push
lock
jne
add
jg
adc
ret
dec
push
popf
sub
jno
jl
movsb
cmp
cmp
and
lcall
test
lret
adcl
xchg
jo
xchg
xor
jb
test
mov
mov
enter
je
mov
cld
inc
mov
mov
sti
std
cmp
fisttps
repz
shll
mov
xlat
stos
mov
push
dec
rcl
and
mov
out
dec
ret
add
mov
mov
ds
mov
lock
push
inc
adc
mov
fldt
call
call
xlat
or
xor
or
data16
loope
test
int
pop
xchg
or
jns
stos
cli
pop
mov
stos
adc
mov
aaa
cmpsl
xorb
jbe
out
xor
pop
push
jp
mov
fadds
jmp
je
mov
fmul
leave
ja
cmpsb
fs
xchg
and
sbb
sbbb
out
outsl
out
testb
out
lret
jo
jecxz
sbb
call
js
mov
mov
sbb
mov
xchg
xorb
out
inc
imul
dec
leave
data16
test
lock
lea
fstpt
jb
shrl
ljmp
test
mov
out
mov
mov
incl
inc
adc
push
dec
push
mov
mov
and
mov
cmp
jae
push
in
mov
sbb
stos
xor
fs
sbb
cmp
fsubrs
ret
daa
xchg
into
cmp
mov
xor
mov
test
fimull
xchg
or
shlb
sbb
xchg
cmp
dec
xchg
sub
inc
cmp
sahf
into
dec
mov
mov
test
sbb
fistpl
je
push
sub
imul
loope
inc
ret
test
mov
xor
ret
and
xor
nop
out
jecxz
je
lcall
hlt
addr16
or
and
inc
jo
xchg
in
daa
out
and
push
dec
lret
hlt
cli
xchg
cmp
pop
mov
cmp
test
sub
lea
popa
jecxz
or
test
daa
rol
lret
mov
cltd
ss
lcall
decl
loop
push
arpl
add
jbe
es
in
dec
les
mov
aaa
mov
xorl
push
cmpsl
das
mov
and
cmp
xorl
test
leave
cmp
mov
jl
ret
jg
and
or
sbb
mov
gs
aas
lods
out
or
cld
push
xchg
mov
lods
arpl
dec
ret
dec
push
cmpsb
lret
lock
enter
sbb
popa
out
jae
cmp
lock
xor
push
push
jnp
cmpsb
and
pop
or
push
addr16
scas
or
icebp
gs
or
inc
push
repnz
jo
add
cld
pop
fwait
mov
jne
mov
push
cld
imul
push
pop
add
or
data16
mov
dec
repz
cmp
sbb
ret
jne
jne
and
xchg
pop
inc
in
push
mull
sub
cmp
jns
bound
js
mov
out
jbe
lock
insl
mov
or
daa
mov
xor
pop
outsl
xor
std
nop
shl
jne
jp
sub
insb
pop
sbb
andl
pushf
cs
rorb
pop
lods
xlat
call
repnz
aas
fnstsw
mov
mov
or
daa
pop
mov
inc
mov
test
xchg
sti
bound
dec
in
pop
and
cmpsb
loopne
xchg
icebp
cmp
inc
jno
out
push
xchg
sbb
xor
jne
mov
cld
mov
adc
hlt
es
enter
leave
imul
fildl
pop
push
xor
lahf
arpl
lret
jae
cmp
lock
lcall
popa
add
fldcw
mov
enter
in
sbb
mov
js
je
jae
pushf
cmpsb
ret
testl
push
cwtl
pop
test
negb
fbld
insl
dec
enter
daa
push
imul
rcrb
jg
jns
aad
mov
jbe
clc
rcll
and
xor
sbb
push
fstps
pop
mov
in
jae
pop
push
in
insl
xor
pop
loopne
jle
js
cmp
mov
insl
lahf
rcrl
sbb
outsb
lret
xor
pop
xchg
nop
fmuls
jb
shll
sbb
pop
ds
mov
jmp
jae
add
loope
cmp
sti
xchg
fildll
mov
repnz
movsb
loope
fcoml
cld
xchg
add
xchg
push
cli
adc
add
mov
or
mov
jg
fdivrl
lock
mov
mov
inc
mov
xchg
clc
ds
out
fiadds
jbe
aaa
xchg
inc
push
mov
push
jmp
jp
insb
sti
and
lea
dec
inc
push
ret
pop
pusha
pusha
jp
mov
aam
lret
xchg
sbb
inc
mov
scas
cmp
addr16
push
and
push
imul
inc
cmpsl
xor
aad
fucom
mov
xchg
icebp
or
xchg
pop
les
cs
xor
inc
mov
push
xor
xchg
stos
dec
xor
rcrb
fs
fidivrl
add
cltd
cmpl
xor
loope
leave
xchg
imul
xchg
lcall
adc
in
les
xchg
xchg
loopne
adc
dec
test
adcb
cli
jb
popf
and
push
dec
daa
loope
daa
mov
sarb
xchg
dec
jnp
and
int3
rorb
in
sbb
push
stc
push
or
push
push
sti
les
out
jle
push
push
cmp
adcb
imul
repz
shll
testl
mov
bnd
test
cmc
lea
push
cli
pusha
mov
aaa
fcomip
add
test
push
jno
enter
insl
popa
das
and
xchg
scas
out
addr16
leave
lcall
mov
addl
test
decl
jle
insl
sub
lock
repz
aas
imul
dec
call
dec
shrl
aas
inc
mov
sbb
add
rcr
mov
jno
add
nop
call
mov
mov
add
test
push
sbb
in
pop
lea
pop
shlb
scas
fidivs
xchg
pushf
ret
mov
test
mov
and
mov
into
push
rdpmc
mov
cld
jae
sbb
das
out
scas
jle
in
xchg
jg
popa
movsl
stc
xchg
dec
add
mov
mov
adc
mov
and
dec
and
jmp
xor
enter
divl
mov
fistl
jmp
dec
test
andl
sbb
pop
mov
cmp
fldt
xchg
sarb
push
aad
jne
ds
scas
outsb
std
test
push
push
push
and
and
lds
je
sbb
insb
jnp
cmp
stos
cmp
inc
lods
das
or
rolb
jp
pop
repnz
hlt
mov
sbb
ja
repnz
pop
jmp
addr16
test
dec
pop
xchg
cmpsl
les
add
loopne
outsb
inc
fcoms
fbld
or
das
pop
das
lret
outsl
andl
lods
ds
jle
dec
push
aaa
smsw
push
xor
ja
int3
shrb
mov
fwait
or
sbb
rorb
jae
stos
bound
and
jmp
dec
mov
push
jno
aaa
pop
in
aam
push
add
and
fstl
dec
aad
or
lods
orl
shl
out
dec
push
xor
jg
pop
sub
fsubl
pop
mov
mov
clc
xor
ret
test
out
loopne
push
test
and
lods
mov
popf
insb
bound
pop
and
aam
js
fsts
mov
daa
mov
lret
dec
jno
mov
rclb
pop
cmp
aad
push
jno
andb
orb
mov
addl
pop
stos
cmpl
jo
divb
cmp
cmpsl
icebp
dec
loope
push
pop
pop
jmpw
jl
sbb
arpl
fcomip
add
and
mov
mov
mov
test
inc
rclb
jg
jne
lcall
cmpsb
fdivr
aaa
addr16
popf
mov
out
out
adcb
addr16
xchg
sbb
cli
hlt
xchg
sti
or
loop
sub
xchg
or
daa
ret
scas
add
dec
mov
fiadds
mov
hlt
jne
mov
mov
jp
inc
mov
cmp
push
and
dec
loopne
cmc
cli
xchg
out
imul
cmp
sub
and
adc
dec
sbb
xor
push
push
enter
ret
xchg
insb
dec
gs
imull
stos
sbb
push
scas
leave
push
and
ds
leave
std
lret
pop
data16
int
leave
shl
ss
mov
push
pushl
mov
divl
and
inc
fistl
dec
loopne
lcall
add
jae
in
xor
enter
push
mov
fisubs
lahf
jmp
stc
inc
fldz
jo
cmpsb
cmpsb
push
mov
sbb
fs
and
mov
out
mov
pop
es
js
lahf
mov
dec
movsb
and
xor
cmp
jo
outsb
push
sti
pop
lret
mov
or
outsl
sub
push
dec
jmp
push
in
sti
rcl
lret
fstl
add
nop
leave
and
xor
add
enter
inc
dec
sbb
push
and
dec
and
cmp
test
addb
xchg
outsl
xchg
adcl
mov
mov
ss
adc
push
pushf
cld
shl
dec
mov
mov
jo
js
push
xchg
sbb
mov
sti
inc
mov
sbb
jmp
xor
ds
xor
aam
jmp
divl
testl
dec
mov
and
mov
lea
ljmp
addr16
cmp
mov
orb
sbb
mov
sub
jecxz
pop
lret
ljmp
out
sbb
push
mov
je
cwtl
filds
daa
je
clc
fildll
push
test
popf
cld
cs
jno
lock
inc
popa
mov
xorl
fbld
es
mov
mov
bound
arpl
dec
jecxz
or
out
xchg
int
xlat
into
fwait
jecxz
aaa
xchg
rcr
jo
fwait
add
rcl
daa
fldenv
mov
js
fs
sbb
xor
jbe
outsl
fsubrl
out
not
call
and
clc
out
push
xor
sub
shl
call
enter
js
and
daa
cli
and
mov
push
ljmp
data16
jnp
inc
push
xor
scas
xor
repnz
pop
repz
mov
cmp
repnz
xchg
out
xchg
nop
lods
popf
test
inc
sub
cmp
stos
cli
test
sbb
outsb
pop
mov
addl
sub
out
cmp
shrb
cltd
das
mov
lea
mov
sub
pop
mov
push
mov
and
cmpb
das
adc
sbb
dec
push
xor
push
push
jle
xchg
adc
lcall
xor
sub
jl
cmp
iret
mov
sub
jl
jno
push
xor
xor
xchg
mov
out
cmp
outsb
ljmp
jge
cli
mov
dec
mov
mov
xchg
leave
jb
lock
lods
dec
loope
outsl
je
shrl
and
pop
or
das
ss
xor
out
fstl
add
out
aam
icebp
out
adc
or
js
cli
dec
jno
sbb
and
jns
and
int
and
fisttps
mov
lahf
movsb
xchg
mov
push
push
jns
and
lea
xchg
std
push
and
xchg
aam
jge
fstpl
sbb
out
addr16
mov
ja
push
mov
ss
push
call
mov
daa
pop
push
and
int3
subl
push
xchg
test
push
aas
in
loop
lods
dec
cs
stos
adc
add
mov
icebp
or
nop
and
mov
mov
inc
mov
inc
pop
notl
xor
or
shlb
xor
sub
mov
jns
rcr
testb
jne
add
sahf
cmp
int3
lret
cmp
stos
push
xor
push
in
je
sbb
int3
inc
rclb
sbb
push
and
cmpsb
bound
or
and
aas
fwait
mov
or
movsl
pop
or
cld
test
loop
insb
adc
xchg
lret
frstor
mov
rorl
stos
lea
jbe
insb
xchg
xor
inc
fnstsw
stos
adc
pop
mov
lock
shlb
dec
mov
movsl
mov
cli
cld
ja
jnp
dec
aam
test
dec
in
and
clc
or
stc
inc
mov
lret
in
into
sbb
inc
vorps
enter
dec
push
test
push
mov
test
pop
lret
out
imul
shl
sbb
dec
into
sahf
jnp
cmp
fwait
ret
push
cmpl
jle
cli
popa
lds
push
add
ljmp
add
xchg
push
push
add
popf
and
adc
inc
jb
insl
mov
loope
insl
xor
fsubrl
push
jmp
xchg
adc
cmpsb
or
pop
sbb
rorl
push
pop
jbe
jo
or
rorb
ljmp
jg
cmp
lahf
fcoml
outsb
adc
pop
cmpsl
push
aam
je
test
test
push
inc
stos
mov
xchg
inc
int
shl
mov
sbb
inc
ja
in
mov
jo
inc
xor
hlt
fdivrs
jbe
aad
fnstsw
lret
ss
fisttps
jmp
das
xchg
inc
jge
add
or
jbe
fmuls
sub
std
push
pop
xor
push
add
leave
rolb
cmpsb
out
lcall
jge
ficoml
lret
cs
sub
lods
fbld
andl
jbe
or
aas
adc
and
mov
lret
push
mov
outsb
mov
scas
push
sarl
in
jns
pop
fs
aas
bound
mov
in
cmpsb
pop
repnz
lret
jbe
scas
pop
mov
loop
sub
mov
out
pusha
xorl
cmp
lret
lret
or
test
xlat
stc
mov
sub
test
mov
daa
fisubrs
scas
adcb
mov
sub
dec
push
mov
xchg
mov
ds
std
nop
inc
dec
pop
or
imul
mov
push
jle
iret
dec
ja
push
out
jb
fstpl
in
stos
enter
pop
bnd
mov
push
pop
stos
shlb
mov
push
or
push
cmp
loop
dec
push
inc
ret
sbb
xor
rcll
jo
jae
mov
or
dec
adc
inc
shrb
ret
pop
lods
add
dec
mov
pushf
sub
in
sbb
adcb
movsb
clc
jecxz
push
call
dec
jns
addl
xchg
bnd
fildll
jns
mov
loopne
clc
mov
cmp
clc
adc
xor
js
hlt
push
test
dec
or
or
jo
aaa
addr16
add
push
mov
sub
cwtl
inc
pop
mov
call
pop
mov
bsr
push
mov
push
fnstcw
or
mov
rclb
std
pop
divl
jge
aas
lret
cld
lcall
notl
jb
lahf
adc
fwait
pushf
push
inc
mov
mov
jnp
mov
and
das
in
mov
cmp
mov
adc
jb
push
movl
mov
dec
iret
xor
icebp
dec
lock
xorb
stc
sub
jns
sub
cs
fwait
js
adc
lock
lahf
add
out
mov
mov
clc
xor
and
xor
jle
xor
and
loope
or
popa
jns
fs
outsb
xor
aam
add
repnz
or
loop
je
mov
mov
mov
cmp
push
loopne
dec
ljmp
lret
sbb
sbbb
and
dec
add
dec
adc
push
lods
idiv
mov
orb
ljmp
mov
adc
cmp
push
mov
sbb
xor
mov
out
icebp
adc
cmc
dec
mov
push
jle
adc
push
shlb
sbb
ss
fisttps
jne
push
push
xor
ficoml
mov
and
or
mov
adc
daa
mov
fwait
scas
or
hlt
mov
sti
mov
repnz
hlt
movsl
sub
fwait
xchg
pushf
inc
inc
outsl
fs
xor
adc
push
pop
js,pn
cmp
fistps
push
dec
pop
add
int3
pop
xchg
jo
mov
adc
scas
sub
lcall
fisttps
sub
fsubrl
arpl
rcrl
xor
mov
int3
lret
inc
sub
jb
and
lds
js
lcall
nop
inc
mov
out
dec
mov
ficompl
pop
loopne
ficomps
fcmovnb
insb
mov
loop
dec
outsl
jg
test
fnstsw
daa
mov
iret
adc
test
aas
stos
les
jae
sbb
xor
inc
xchg
inc
test
cli
rol
or
ss
inc
or
gs
add
cmp
and
push
mov
jmp
aam
pop
push
sbb
mov
scas
xor
push
sbb
nop
cmp
push
js
dec
outsb
test
insb
clc
test
sbb
jns
or
outsl
and
cmpsl
addr16
and
jae
aas
jne
das
xchg
mov
mov
sbb
xor
not
sbb
fists
adc
pusha
addb
aad
mov
sbb
ds
stos
sub
repnz
and
cmp
leave
outsl
add
pop
movsb
fnsave
imul
add
xor
repnz
test
jg
je
jnp
pop
or
mov
jmp
dec
cmpl
lods
cmovl
xor
enter
or
das
popa
std
filds
push
xor
test
movsl
or
inc
cs
jp
dec
jae
popa
xor
mov
and
jns
fucomip
cwtl
test
push
inc
bound
mov
repnz
dec
xor
test
imul
outsb
mov
ret
hlt
jo
stc
insb
not
mov
aas
inc
pusha
int
mov
sbb
aam
jmp
popa
and
push
imul
ficoms
push
add
lods
push
sbb
movq
fimuls
sbb
ret
add
sahf
call
test
lods
jg
inc
or
pop
aas
inc
or
nop
jle
sub
addr16
dec
inc
test
shlb
xchg
mov
xchg
cwtl
dec
pop
inc
or
push
mov
test
or
enter
push
pop
mov
loop
pushf
sub
shlb
jns
jbe
adc
int3
cmp
mov
test
insb
imul
cmp
cmpl
xchg
std
aas
and
push
inc
cld
pop
in
fistps
cwtl
mov
enter
repnz
mov
or
push
js
aad
sub
push
pop
dec
cmp
jp
xor
push
ret
xor
lods
adc
in
popa
push
ljmp
repnz
cmovno
int3
add
js
lret
sub
data16
ja
mov
lds
inc
mov
adc
add
mov
inc
ja
out
stos
xchg
enter
mov
jg
or
xchg
mov
int3
mov
mov
loop
decb
bound
sub
push
sub
pop
dec
aam
xor
mov
add
ss
xchg
add
jge
cmpsb
imul
js
imul
xor
repz
xchg
hlt
jns
mov
mov
testl
jns
cwtl
and
pop
mov
jg
int
out
sbb
iret
jge
dec
vpaddsb
or
xor
mov
fnstsw
mov
shrb
lods
ret
jne
mov
mov
push
scas
mov
popf
xor
lahf
jle
arpl
push
mov
sub
jle
mov
mov
jno
pop
popf
repnz
mul
xor
fxch
pop
and
adc
loop
incl
shl
mov
jae
imul
cs
sub
push
fisubl
cmc
fs
movl
pop
xchg
jb
loope
iret
pop
aaa
mov
mul
xchg
pop
movsb
ss
in
adc
call
iret
leave
add
les
xor
fwait
mov
dec
orb
out
cs
lcall
xchg
jb
test
mov
pop
or
cmp
mov
add
mov
jle
add
pop
mov
mov
lods
rolb
or
mov
in
or
push
std
frstor
mull
add
in
sbb
jbe
mov
inc
test
add
push
cwtl
call
add
lock
out
out
mov
pop
aaa
sbb
js
xchg
nop
rol
dec
mov
pop
xor
pusha
mov
xchg
fldenv
sti
mov
mov
sub
lea
out
xor
loope
cli
andps
mov
pop
jns
pushf
pushf
pop
mov
jae
cmp
pop
sub
fiaddl
sub
orl
sti
mov
stos
xchg
mov
gs
cmp
ljmp
mov
dec
mov
push
lds
mov
add
dec
push
mov
sub
ret
pop
mov
mov
push
mov
out
sbb
and
adc
dec
lods
xor
repnz
dec
andb
movsb
xchg
out
inc
add
inc
aas
xchg
mov
int3
cld
jbe
fcomip
pop
or
inc
out
mov
dec
nop
cld
outsl
push
mov
stos
out
mov
shrb
inc
js
cmp
add
mov
mov
jmp
xor
imul
xchg
pop
jo
mov
scas
bound
pop
clc
and
setle
push
test
lret
cmp
xchg
incl
inc
mov
movsl
scas
inc
aas
xchg
adc
pop
mov
in
pusha
cmp
jg
dec
add
fpatan
add
hlt
or
or
jae
loopne
in
clc
dec
cmpsb
repnz
adc
stc
fucomi
mov
in
dec
prefetch
or
cmp
test
cmpsl
rorl
sub
mov
mov
and
adc
mov
fbld
pop
fwait
mov
and
and
scas
jne
push
and
push
dec
lret
inc
sub
jb
lds
out
neg
mov
xor
sahf
xor
lea
in
jp
lds
push
dec
imul
loopne
cli
shlb
rep
ljmp
xchg
or
cmp
or
adc
pop
lret
jne
aaa
mov
and
mov
jmp
ret
xor
or
leave
aaa
js
loope,pn
adc
roll
movsb
xlat
inc
sbb
sti
std
jnp
mov
jl
aad
jecxz
les
dec
mov
movsl
sbb
rcrb
je
gs
xor
loopne
mov
insb
add
inc
notl
dec
xchg
mov
imul
fmuls
push
push
push
pop
rol
movsb
shrb
loopne
into
sbbl
xchg
add
inc
xlat
sbb
adc
sbb
jmp
clc
jle
mov
push
call
in
data16
js
inc
adc
jbe
mov
pop
and
adc
sub
push
in
and
shrl
and
aam
repnz
jns
xchg
hlt
sbb
xchg
sub
push
mov
into
fnstcw
sub
dec
or
xchg
sbb
or
xor
shr
lods
and
fistl
rclb
mov
cmp
push
shll
stos
adc
fdivl
fsubrs
push
cmp
fs
sahf
xlat
push
xor
push
and
shll
xchg
or
inc
pop
xchg
loop
lock
pop
dec
inc
lea
sub
jno
pop
insl
in
cmp
cli
jno
popf
and
dec
aam
lret
adc
xchg
xor
je
sub
insl
orl
push
incb
fadd
cli
xchg
adc
and
jnp
jl
push
and
push
push
sbb
mov
lods
or
vmwrite
mov
pop
stos
pop
cmp
fiaddl
cmc
scas
pop
call
insl
das
pop
dec
cmp
int
lcall
cmpsb
in
ss
and
pop
adc
mov
jle
xchg
pop
and
or
lea
inc
add
mov
in
mov
cmc
push
out
cmc
sbb
dec
subb
out
lea
mov
andb
add
je
xchg
lock
movsb
ds
les
mov
pop
cli
mov
inc
push
cmp
push
xor
mov
test
arpl
and
loop
mov
int3
add
test
outsl
adc
mov
insb
sbb
cmc
and
bound
call
jle
or
dec
inc
dec
mov
mov
and
cmpsb
pop
inc
mov
cmp
mov
iret
push
testl
mov
mov
jne
add
out
das
orb
inc
push
mov
sar
nop
repnz
sahf
ljmp
pushf
sar
es
pop
test
out
fdivrs
jne
in
or
mov
push
sub
dec
mov
jge
mov
icebp
stos
sub
fcoml
lahf
sbb
sti
mov
mov
scas
adc
lahf
rcr
or
ret
jb
pop
lret
and
lcall
mov
aas
mov
sub
adc
cmpsl
adc
imul
scas
pop
adc
and
pop
jge
mov
push
out
jbe
roll
in
in
mov
xor
andl
mov
dec
test
dec
adcl
clc
ljmp
jg
bound
cmp
les
xlat
shll
cltd
mov
lea
pop
adc
fistpl
icebp
or
inc
sub
popf
push
add
mov
mov
pusha
imul
mov
stc
stos
je
repnz
push
or
lea
gs
std
repnz
add
dec
push
xchg
inc
pushf
dec
mov
dec
xor
es
jecxz
add
mov
jno
adc
scas
out
cmpsl
add
test
mov
and
fisttps
push
jb
rcl
subb
fs
stos
lcall
out
stos
movsl
dec
test
cmp
inc
lods
mov
lret
andb
sub
int
sbb
mov
pop
jg
pop
pop
xchg
jmp
cmp
push
js
pop
int3
dec
adc
mov
add
in
mov
mov
jp
fwait
sbb
call
pop
ret
cmp
pop
xchg
ljmp
sarb
out
xchg
mov
and
sbb
imulb
loop
popf
add
add
rcrb
sarb
mov
mov
aaa
mov
mov
sbb
outsb
ret
push
stos
xchg
mov
xorl
pop
pushf
sbb
mov
sbb
lret
push
shrl
sbb
add
sub
mov
and
add
insl
pusha
inc
psrad
and
aaa
or
pop
adc
insb
leave
mov
ss
rcrb
xor
jns
mov
add
call
test
test
mov
mov
and
cmp
and
repz
shr
sub
shrl
ja
ljmp
push
mov
xor
insb
and
pop
lahf
push
movsl
lds
xor
mov
ficomps
dec
das
popa
aaa
popa
inc
mov
sub
or
mov
fisubl
add
pop
pop
rol
frndint
orb
insl
inc
pop
mov
sub
fimull
insl
arpl
stc
fsubl
pop
xchg
ja
adc
mov
mov
enter
or
add
int3
fdivl
call
ret
jle
fsts
inc
lret
imul
xchg
popa
rcr
stos
in
es
xchg
inc
cmc
mov
inc
jb
mov
xchg
outsl
fwait
pop
add
xor
dec
sub
hlt
out
xchg
lea
das
add
xchg
pop
cli
mov
icebp
xchg
sbb
cmp
mov
inc
neg
adc
nop
inc
mov
pop
idivb
adc
xor
push
adc
lahf
inc
inc
jno
and
sarb
lods
loope
sbb
in
push
sbb
pop
inc
mov
mov
imulb
mov
dec
jg
inc
mov
loop
inc
inc
push
cmpsb
mov
or
mov
mov
xchg
jno
xor
stos
fisubrs
sbb
mov
stos
les
mov
ja
sbb
jo
fbld
lcall
or
xor
inc
lret
mov
lods
jle
xor
and
push
add
sysenter
xor
pop
fcoml
jne
pop
shll
out
imul
je
jle
std
pop
shlb
push
popf
mov
jp
adc
mov
pop
aas
leave
push
pop
dec
mov
daa
push
shl
jbe
repnz
or
out
stc
sub
mov
jo
shll
repz
shr
xor
xor
dec
xchg
or
pop
xlat
dec
dec
sub
xor
popa
add
mov
icebp
in
cmp
daa
fdiv
out
xchg
test
aaa
ds
adc
fistpll
xor
dec
mov
mov
mov
dec
aaa
hlt
popa
sbb
dec
and
push
or
inc
xor
mov
jbe
or
test
test
int3
mov
lds
jne
rorl
dec
mov
ss
push
mov
xor
cltd
gs
or
sbb
jl
lods
fadds
in
or
add
mov
test
jb
ljmp
cs
sbb
pop
mov
jns
dec
sub
xchg
cmpsl
movsb
sub
pop
jo
xchg
scas
dec
shlb
cs
outsl
orb
add
lahf
mov
jno
or
push
out
jbe
mov
and
jg
movsl
das
and
ja
mov
cld
sbb
dec
mov
xor
jge
cmpsb
jae
popf
xor
sti
xor
jl
xor
xor
test
mov
dec
fnstenv
ja
div
dec
scas
sbb
jbe
inc
mov
loopne
popf
ja
add
dec
and
std
in
inc
lret
and
decl
and
sbb
dec
add
cmp
std
cmpsl
inc
pop
rorb
xchg
aaa
dec
test
push
adc
add
and
scas
push
les
jg
jg
push
jae
ja
inc
sub
leave
jp
cmp
enter
xchg
dec
cwtl
in
xchg
in
ja
fadds
pop
cmp
hlt
sbb
nop
fisubrs
xor
push
int3
xor
sub
xor
lcall
out
test
cmp
mov
inc
hlt
lock
push
stc
mov
orl
pop
pop
clc
jbe
cmp
stc
nop
je
inc
mov
inc
or
ret
mov
sbb
cmp
outsb
xchg
jnp
gs
iret
sarl
mov
jns
pop
std
jo
lcall
inc
push
sbb
andb
lods
insb
int3
sub
jle
iret
rcrb
pop
mov
in
dec
repnz
adc
or
pushf
jbe
mov
inc
call
mov
negl
je
pop
adc
inc
pop
mov
fstl
push
push
adc
sub
mov
mov
push
jne
mov
pop
dec
push
or
pop
inc
aad
cmp
in
lcall
lahf
xor
mov
jmp
dec
xchg
xchg
adc
aas
jl
mov
test
push
pop
testb
add
ret
xchg
xchg
js
aaa
jnp
outsl
ja
push
push
cld
inc
push
cmc
inc
cwtl
les
dec
arpl
xchg
cmpsb
jecxz
inc
std
arpl
or
mov
shrb
enter
xchg
push
mov
inc
out
leave
popa
dec
das
jg
xchg
or
pop
mov
lea
xor
mov
and
mov
or
sub
daa
sbb
inc
mov
sbb
nop
cmp
and
mov
sbb
xor
std
push
xchg
push
js
mov
dec
inc
fdivrl
inc
xchg
xor
in
dec
sub
mov
push
cmpsb
cmp
mov
or
mov
scas
xor
out
je
push
mov
popa
cltd
pop
lcall
cs
jbe
cmp
xchg
push
push
mov
push
ds
stc
pop
push
lea
jl
movsl
and
je
aad
and
gs
outsb
jbe
mov
mov
in
mov
mov
aaa
adcb
mov
test
adc
sbb
call
in
js
xorl
es
jb
lcall
mov
lret
gs
shrb
sub
xor
sbbb
or
mov
push
lods
popf
mov
test
les
es
out
dec
inc
pop
repz
iret
jbe
mull
cmp
mov
aam
mov
pop
rorb
or
in
loopne
sbb
fcmovne
fldl
scas
pop
xchg
cmp
cmpb
cmp
push
jns
shrb
movsl
lcall
pop
mov
sbb
cs
mov
mov
or
and
adc
mov
cs
pop
mov
cmp
or
lods
ror
sbb
dec
sub
mov
addb
and
inc
out
aad
popf
pop
push
mov
add
ret
push
cs
cs
xor
mov
cmp
out
xchg
cmpsl
add
lods
mov
scas
aas
xchg
jbe
fdivr
jecxz
push
push
mov
push
mov
push
adc
mov
jno
into
mov
sub
jb
add
pushf
jmp
stc
inc
out
sub
stos
cmp
sbb
and
pop
adc
roll
rcrb
mov
cmpsb
ds
pop
aas
popf
je
push
sbb
xchg
push
js
les
lret
roll
addr16
adc
ficomps
sar
sub
mov
inc
pushf
push
push
or
adc
xlat
mov
inc
xchg
cmp
xchg
jno
xchg
sub
out
mov
mov
pop
das
mov
pop
aas
test
shlb
cmpl
push
outsb
rclb
ret
repz
sti
in
rcrb
loope
mov
mov
add
dec
xor
mov
mov
in
xchg
cwtl
jmp
xchg
cli
std
and
or
loop
adc
repnz
in
adc
test
js
xchg
ret
cmp
mull
jge
push
cld
mov
inc
add
in
test
fwait
and
push
aas
jae
pop
ret
jg
loop
mov
sbb
and
pop
mov
mov
lods
mov
xchg
or
lahf
in
sbbb
jae
sub
xor
fcomps
enter
mov
addr16
sahf
sahf
sub
cmc
loope
jge
lds
inc
xchg
lahf
stos
popa
mov
sub
leave
lret
sub
mov
inc
js
mov
adc
or
js
cmp
sbb
xor
js
insl
pop
out
inc
xorl
rdpmc
out
scas
aas
dec
inc
pop
mov
cld
imul
scas
test
incb
repnz
and
mov
lcall
ret
mov
pop
insb
jae
aam
icebp
push
lea
es
fisttpll
push
mov
sahf
insl
repz
inc
stos
test
inc
add
lcall
addr16
mov
repz
bound
fadds
mov
pop
in
scas
jnp
inc
adc
push
int3
imul
sub
in
es
shll
xor
lea
mov
addl
and
cmp
mov
dec
mov
push
repz
xchg
push
in
aam
jbe
pop
push
imul
dec
fwait
pusha
adc
imul
call
popa
mov
lahf
mov
in
jnp
cmpsl
xchg
lea
jle
xorl
add
jbe
add
push
test
loopne
add
and
shrl
insb
out
test
stc
push
fwait
jg
xchg
jb
cmp
daa
mov
ds
test
xor
mov
and
jl
es
inc
gs
push
mov
or
pop
cmpsl
pop
xlat
and
lock
jb
sub
test
lret
and
xor
xor
push
and
push
mov
movsb
sbb
adc
push
jnp
inc
mov
mov
stos
repz
jg
or
mov
push
add
xchg
notl
adc
cmp
adc
cmc
sub
les
test
fstpl
mov
bnd
cmp
pop
xchg
movsb
mov
loope
lock
sar
mov
mov
fimuls
addr16
dec
xlat
pop
jl,pn
loopne
or
repnz
dec
addr16
outsb
jmp
mov
mov
lcall
cmp
sbb
xchg
xchg
enter
out
xchg
add
hlt
mov
fisubrl
test
popf
out
inc
dec
xor
or
sbb
mov
xor
xchg
or
inc
jns
jecxz
xrelease
enter
popf
dec
fcmovnbe
xlat
adc
inc
cmp
call
cmc
sahf
and
jns
xlat
insb
xor
jbe
inc
adc
jge
aam
pop
fs
cmpsb
shll
cltd
mov
mov
insl
arpl
and
aas
gs
push
mov
inc
dec
aam
scas
mov
adc
jl
jae
add
push
mov
lock
mov
mov
xchg
aaa
in
insb
and
jl
jg
fidivrs
mov
xor
andb
adc
lods
jp
push
mov
xor
sbb
pop
into
sahf
and
mov
add
pop
jae
imul
push
lds
jecxz
adc
xor
clc
das
pop
cltd
push
or
mov
es
dec
push
push
add
adc
mov
mov
pop
imul
fwait
mov
jmp
push
sub
mov
popf
add
and
adc
adc
mov
add
mov
icebp
push
push
loop
pop
inc
test
je
std
fwait
adc
mov
shlb
fwait
dec
rolb
stc
in
mov
fnstcw
fnstsw
inc
mov
mov
pop
dec
andl
dec
ret
dec
sti
push
ds
mov
fs
dec
push
mov
into
fbstp
pop
test
pop
add
clc
scas
cmp
sahf
lea
lret
jae
aam
sub
inc
inc
sub
cmp
dec
std
pop
xor
dec
shlb
jg
mov
iret
adc
xor
adc
aas
outsl
push
je
repnz
dec
lea
cmp
push
enter
adc
mov
leave
out
jmp
iret
inc
lcall
aad
inc
lret
sbb
pop
pop
fisubrs
jno
jmp
pop
fwait
xchg
cmc
pop
aaa
jg
shl
leave
shl
or
lods
lahf
xor
std
push
cmp
or
or
pop
push
dec
pop
rcl
orl
rcrl
xor
xchg
inc
nop
or
rcl
ja
movsb
pop
mov
inc
mov
int3
stos
mov
rorb
sbb
add
and
fstpt
pop
sub
cltd
punpckhwd
mov
pop
jmp
call
aas
gs
popa
cwtl
ja
mov
outsb
add
mov
inc
xchg
mov
in
cmp
movsl
mov
xchg
jge
inc
and
xchg
fs
into
imul
mov
pop
imul
jo
sub
std
inc
mov
add
or
inc
fcomp
sti
fs
je
sbb
add
mov
out
in
idivl
rolb
push
or
das
xchg
daa
packssdw
push
xor
and
pop
pop
cmc
loopne
imul
push
cmp
push
pop
aas
lods
cmp
jg
xor
add
cwtl
mov
jg
pushf
mov
int
insl
mov
sbb
sub
repz
xchg
xor
in
sub
jge
dec
pop
jns
in
fdivrp
sbb
int3
test
movsl
sti
pushf
insl
and
pushl
xchg
loopne
dec
outsl
mov
pop
mov
pop
cwtl
or
int3
div
xor
cmp
sbb
inc
mov
mov
push
xlat
dec
pusha
dec
fadds
sub
fdivs
dec
inc
cld
test
pop
xor
mov
adc
pop
stos
out
popa
push
pop
bound
pop
and
push
insl
mov
jg
adc
sub
sub
lds
movsl
out
xchg
in
mov
lock
mov
fistpl
lock
cmp
call
lods
sbb
pop
mov
xchg
nop
xchg
imul
sbb
enter
add
icebp
loop
pop
fstpt
mov
add
push
jne
jbe
xchg
or
mov
sbb
ja
das
test
aaa
fdivrs
jp
stc
push
sbb
mov
sbb
mov
adc
mov
loopne
ds
pop
mov
add
rcrl
mov
inc
loope
push
outsl
addr16
pop
cli
sub
aaa
repnz
fcoms
cmp
test
pop
ret
jp,pt
dec
and
sbb
in
adc
mov
cltd
add
mov
insb
cli
insl
sub
int3
sahf
pop
aam
call
out
mov
pop
leave
shlb
call
mov
fldt
push
xor
and
push
fnstenv
sbb
adc
dec
test
mov
jp
sub
int
lods
lret
sub
inc
lock
xor
icebp
and
mov
and
mov
xchg
in
in
push
enter
outsl
push
cmp
pop
mov
lahf
nop
imul
xor
xor
dec
nop
mov
pop
cmp
add
push
fcmovb
aas
xchg
icebp
outsl
stos
fwait
and
testb
mov
cltd
inc
add
in
js
pop
cmp
movsl
xchg
adc
rcrb
int
mov
int
jbe
not
cld
ljmp
filds
sub
push
jno
mov
add
push
jns
aaa
fcmove
data16
cmp
xchg
xor
mov
sti
das
sub
mov
sbb
push
mov
cmp
jmp
pop
loopne
mov
shlb
movl
gs
fstpt
pushf
mov
in
mov
shlb
daa
adc
add
adc
in
ja
popf
andb
dec
sti
jecxz
jae
fimull
dec
mov
out
or
pop
sbb
mov
push
icebp
mov
push
adc
and
xor
dec
mov
jp
pusha
mov
mov
cmpb
sbb
lock
aaa
mov
jo
aas
fldenv
or
inc
mov
imul
addr16
dec
mov
mov
movsb
xchg
fwait
push
nop
pop
rolb
ja
in
mov
add
push
movsb
js
or
add
fnstenv
mov
enter
fadd
sub
xchg
and
stos
cltd
pop
aad
push
lcall
daa
lret
jne
sub
loop
pop
inc
cmp
sbb
add
or
pop
cld
fwait
mov
mov
fsubrs
jecxz
jg
push
fildl
add
adc
sahf
jns
sub
leave
scas
clc
rorb
lock
xor
leave
fstpt
mov
enter
dec
mov
insl
cmpsw
inc
adc
cmp
stc
dec
into
out
pop
ffree
enter
sub
push
cs
jb
movl
jg
ljmp
xor
xor
adc
mov
add
stos
and
jb
add
outsb
jecxz
xor
dec
nop
inc
das
jl
or
sbb
sbb
push
xchg
inc
mov
sbb
xchg
sub
cmpsb
xor
or
adc
int
inc
cmp
data16
push
test
adc
mov
aad
pop
insl
mov
add
sahf
xchg
fisttpl
pushf
fildl
xor
and
insl
stc
pop
dec
icebp
aam
cwtl
call
int3
sub
cmp
add
int3
sti
lods
imul
pop
sahf
xor
sub
daa
push
int3
adc
add
imulb
es
xlat
rclb
test
dec
ljmp
aam
xlat
aaa
and
mov
jnp
jne
cmp
adcb
ds
xor
data16
pop
out
testl
mov
mov
outsl
into
add
mov
dec
cli
mov
cmp
es
movsb
sahf
add
push
mov
scas
leave
pop
xchg
das
add
xchg
xchg
xor
cmp
pop
fnstsw
push
lret
push
pop
ljmp
adc
ucomiss
sub
inc
sub
add
test
inc
loop
pusha
push
inc
mov
jle
aaa
pop
cltd
lcall
movsl
in
jb
push
out
lret
enter
cs
ret
or
xchg
in
and
clc
xor
cld
jnp
pop
add
inc
mov
std
movsb
inc
pop
cmp
fwait
pop
daa
sbb
aas
fadd
mov
mov
addr16
es
leave
inc
dec
jb
mov
sub
adc
cmp
jg
roll
repz
lea
mulb
mov
mov
adc
pop
pusha
inc
out
stc
add
ficomps
jne
mov
sub
jae
fcompl
in
xchg
mov
sbb
daa
fbstp
push
push
inc
iret
arpl
xchg
xor
dec
mov
mov
xchg
pop
inc
adc
loopne
cmp
xor
std
bound
dec
pushl
dec
dec
ret
pop
lret
in
nop
sbb
dec
ds
clc
jecxz
dec
rorl
out
in
mov
iret
push
aaa
sub
sti
pop
xchg
push
in
stc
dec
mov
fwait
push
aaa
push
in
cmpsb
sub
mov
or
mov
cmp
mov
pop
std
mov
mov
jae
pop
repz
pusha
cs
lret
clc
scas
xor
sbb
scas
scas
aaa
xor
inc
divl
sahf
jbe
xchg
aam
add
and
pop
imul
adc
sub
outsb
test
out
enter
popf
ja
subl
test
popf
push
add
outsl
or
pop
shl
mov
or
icebp
cmp
or
int3
mov
arpl
sbb
ret
adc
cmp
sbb
pop
mov
or
js
movsb
mov
push
movsb
cmpsl
mov
mov
mov
fbstp
mov
aad
shr
je
cmpsb
insb
jb
decl
dec
or
add
fidivrs
addl
mov
push
mov
aas
xchg
cmp
push
push
jae
inc
ficompl
scas
push
test
push
aaa
fdivl
or
fists
shlb
outsl
mov
dec
pushf
ret
bnd
pushf
adc
pop
xchg
outsl
adc
sub
adc
fimull
add
xlat
popf
adc
mov
incl
aas
mov
jne
call
in
push
dec
sbb
xchg
rol
nop
push
xchg
pop
inc
sub
rcll
jbe
push
or
cmc
test
aas
xchg
sub
bound
pop
mov
xor
inc
mov
or
enter
mov
sub
adc
lds
dec
sub
push
inc
mov
sub
push
fildl
movsl
push
cmp
inc
test
dec
push
add
or
outsl
out
mov
sahf
mull
inc
nop
inc
notl
arpl
xor
inc
push
addl
xchg
sti
je,pn
jne
pusha
jnp
fiaddl
out
aas
repnz
mov
jo
pop
push
cli
insb
dec
pop
sbb
rcrl
sti
xlat
add
add
xchg
inc
ds
xor
lcall
mov
mov
mov
xchg
jmp
mov
scas
mov
scas
lret
inc
mov
popf
mov
xor
xor
cmp
leave
enter
ljmp
mov
sub
xor
xor
dec
popl
fldt
int
punpckldq
mov
cld
or
movsb
ja
call
push
repnz
ss
dec
jge
cmp
cmpsl
lods
frstor
mov
mov
dec
shll
xchg
add
imul
xchg
cs
stos
sbb
xor
cmc
mov
outsl
fsubl
or
add
call
push
xchg
dec
lods
sbb
mov
push
shr
xor
adc
cli
sub
xchg
sub
popa
add
lret
cs
or
cmpsl
inc
dec
pusha
in
adc
sbb
cmp
sbb
add
int3
jl
push
icebp
pop
jmp
scas
aad
and
sbb
jne
lds
cmpsl
aaa
sub
sub
add
out
loopne
rcll
sub
push
cmc
sbb
insb
sar
xor
mov
int
xchg
xchg
dec
and
cmp
test
fbld
test
repnz
jns
icebp
jb
sbb
pop
lahf
lahf
lret
inc
xor
pop
jecxz
mov
loop
in
icebp
xchg
mov
lret
roll
lds
into
pusha
xchg
aaa
leave
cmp
jl
ja
xor
repnz
or
or
mov
pop
mov
cltd
nop
cld
xchg
inc
lea
mov
mov
adc
outsb
mov
jnp
mov
fnstsw
jnp
mov
loop
jle
or
inc
out
and
sbb
cwtl
test
add
add
adc
and
sub
loope
out
test
cmp
test
iret
push
mov
cltd
pop
inc
orb
cli
sub
loope
inc
in
pushf
shrl
jno
addb
pop
mov
fnstsw
in
xchg
mov
stos
mov
stos
fwait
outsb
cmpsl
inc
jbe
cltd
sbb
sbb
add
dec
xlat
jae
add
jp
arpl
push
ljmp
xchg
inc
xlat
mov
dec
cli
mov
in
xchg
daa
sub
jge
and
cltd
sbb
and
xor
fisubrl
push
mov
xor
outsl
daa
loope
cmp
mov
lcall
jmp
inc
lea
push
loope
stos
or
movsb
out
push
inc
adc
sbb
or
sub
les
jae
sub
clc
pop
clc
mov
dec
xor
dec
incl
jns
xlat
fnstsw
fcompl
mov
pusha
aad
std
and
fimull
cmp
pop
xor
popa
mov
pop
mov
sub
repz
js
bound
sbb
into
adc
fldl2e
mov
test
ds
popf
fnstenv
push
sub
jle
loopne,pn
sub
out
lret
subb
rorl
loope
cmpsb
and
cli
add
ds
or
pop
sbb
push
popf
push
adc
inc
and
ja
cmpl
push
adc
aad
cli
call
shrl
cmc
std
iret
jmp
mov
repz
mov
popa
ret
xchg
sub
int3
jle
iret
dec
jbe
scas
add
int3
scas
xchg
mov
jl
jg
push
aam
add
cmc
dec
pop
cwtl
fisubrs
jecxz
stos
mov
sbb
inc
pop
push
mov
mov
ljmp
sbb
adc
fs
mov
ljmp
ret
iret
sub
mov
hlt
fdivr
popa
imul
out
inc
jecxz
mov
subl
sub
or
loop
and
xor
mov
xchg
shl
sbb
sbb
and
cmpsb
cmp
outsl
inc
inc
ret
ljmp
sbb
jl
pop
or
ja
push
xchg
xchg
test
jge
xlat
pop
mov
movsl
xchg
xchg
dec
aaa
or
or
mov
jno
inc
cmpsb
pushf
les
lock
mov
cmp
pop
fdivrs
in
and
jecxz
outsb
add
lahf
sub
xchg
bswap
insb
xchg
ret
sub
int3
cwtl
and
les
push
and
mov
mov
mov
mov
out
fs
cmp
pusha
lock
lret
cmpsb
fsubrl
add
jge
fdivs
in
mov
sbb
cmp
sub
lret
movb
inc
mov
fldt
ret
out
mov
and
ret
mov
mull
ficomps
js
pop
cmp
xor
push
mov
fprem1
and
add
shl
sub
repnz
aas
jns
inc
repz
movsb
cltd
push
and
stos
adcb
pop
xor
sub
xchg
mov
mov
or
mov
cld
sub
mov
inc
enter
add
and
test
pusha
cmp
xchg
jae
xlat
add
mov
cltd
lret
cmp
or
push
sub
fdivl
adc
or
shrl
push
sar
add
pop
cmp
add
mov
xchg
pushf
imul
pop
or
and
or
mov
ret
ret
lret
ss
mov
scas
mov
xor
xor
negb
mov
pop
fidivrs
mov
mov
sub
and
adc
dec
xor
mov
rcll
std
and
dec
xchg
in
ficoms
adc
out
cwtl
rcrb
jmp
out
das
loopne
in
or
fucomip
adc
sti
popa
sub
add
mov
idiv
lock
rorb
add
outsl
arpl
int3
lods
loopne
fiaddl
mov
pop
outsl
test
push
pusha
push
test
ja
ljmp
push
xor
call
push
xchg
xchg
outsb
pushf
sbb
icebp
pop
mov
mov
mov
mov
push
cmp
push
loopne
inc
xchg
enter
xor
push
sub
adc
add
sub
pusha
out
jge
mov
insl
dec
inc
add
mov
pusha
in
rolb
das
insl
outsl
xlat
add
push
jo
mov
call
or
lahf
cmp
pop
sub
push
cmp
xchg
and
xor
sahf
xchg
fsubl
add
sbb
stos
call
sbb
lods
mov
lcall
aam
mov
inc
xchg
mov
or
add
mov
pop
cmp
pop
xchg
mov
adc
cmp
jge
arpl
shl
jbe
rclb
xchg
sbb
mov
fwait
jne
adc
aaa
add
inc
xchg
push
xor
pop
cwtl
push
gs
out
das
sbb
dec
call
xor
sbb
lock
jbe
popa
and
vgf2p8affineqb
testl
or
cmpsb
and
push
adc
jge
xchg
shl
mov
cmp
leave
pop
jmp
imul
mov
popf
push
mov
lea
push
adc
stc
cmp
enter
inc
jo
sub
lcall
or
scas
inc
pop
xchg
xchg
mov
addr16
dec
shll
and
jo
daa
adc
imul
les
insl
xor
shrb
dec
mov
or
jg
jg
rorb
jmp
loope
ret
and
mov
das
push
mov
fsubl
hlt
daa
jle
scas
addr16
push
sbb
lods
fwait
cli
xchg
fisttpl
xchg
inc
out
pslld
push
mov
jp
js
xor
inc
sti
xchg
lods
stc
cmp
shll
clc
aam
mov
mov
rcl
inc
add
leave
or
mov
popl
mov
sbb
movsl
xchg
fsubr
mulb
clc
dec
int3
xor
dec
cmp
test
sub
pop
ret
dec
test
jbe
fwait
sub
fnsave
in
push
ljmp
subb
xchg
scas
pop
aaa
scas
mov
dec
cmp
push
nop
sti
addr16
pop
mov
adc
cmpsl
mov
shll
jle
pusha
addr16
stos
add
sbb
sub
mov
shl
insl
int3
call
pop
push
mov
in
cmp
xchg
sahf
je
test
push
dec
sub
mov
out
add
sub
mov
loop
icebp
stos
jo
adc
push
out
loope
add
sub
testl
xchg
mov
pop
out
out
flds
addr16
lea
and
mov
daa
jbe
jo
push
mov
dec
popf
scas
push
and
jo
pop
mov
adc
push
ds
push
insl
jl
dec
daa
or
movsl
xor
aad
leave
aas
lock
xlat
es
jp
inc
dec
mov
and
and
push
inc
stos
scas
mov
imul
adc
push
jge
mov
iret
jp
jbe
popa
or
pop
lock
cwtl
or
mov
inc
add
jl
mov
lret
push
push
outsb
adc
sub
mov
mov
jbe
daa
mov
insl
add
add
sbb
hlt
subl
outsb
dec
pop
cmp
cmp
mov
inc
insl
jmp
fs
adc
jl
cmp
fstpt
inc
jae
jl
aam
dec
pop
and
push
scas
les
sti
cmpsb
mov
sbb
ja
dec
insb
cli
xor
sahf
pop
call
aaa
mov
xbegin
gs
jge
out
jg
xchg
stos
clc
inc
mov
pop
adc
sbb
lahf
cmpsb
movsb
mov
fidivrs
lods
pusha
mov
xchg
pop
andl
or
mov
add
jns
or
or
cmp
inc
pop
popf
into
jne
cmpl
bnd
outsb
roll
xor
fmuls
mov
pusha
mov
or
pop
mov
les
and
push
add
jae
jo
fsub
and
add
hlt
and
cmp
push
shrb
and
ret
cltd
ss
cmp
sti
imul
movsl
jne
je
ds
sbb
and
lret
lods
push
cli
push
push
sub
int
push
push
in
inc
outsb
scas
adc
mov
dec
insl
call
and
lods
imul
inc
jae
push
cmpl
push
sbb
or
icebp
mov
sbb
aaa
cmp
out
testb
mov
pop
daa
and
add
jg
and
cmp
cli
outsb
mov
call
pminsw
inc
inc
adc
test
push
popa
xchg
loope
mov
mov
inc
xchg
fmulp
add
jp
push
loop
iret
pusha
mov
cmp
pop
xchg
jl
mov
aad
daa
sub
js
shlb
subl
lods
push
mov
hlt
out
jbe
mov
push
icebp
mov
cmp
mov
repnz
jmp
fmuls
and
cmp
loope
repnz
out
pop
cli
icebp
cmp
mov
or
mov
ficomps
jg
mov
mov
cmp
in
lret
fdivrl
loop
lods
dec
out
add
sub
aaa
lret
call
mov
cmpsb
push
ffree
fdivrl
mov
adc
jo
nop
cltd
dec
iret
data16
js
mov
mov
cs
test
js
xor
mov
jns
push
insb
mov
out
test
into
pop
adc
mov
shll
stos
push
adc
xchg
jae
mov
dec
imul
and
mov
dec
idiv
or
dec
xchg
rcll
cmp
movsb
jle
cwtl
ss
or
clc
pop
push
imul
sbb
mov
aad
stos
insb
sbb
push
xor
shlb
fsubs
inc
pop
inc
adc
js
xor
lock
inc
clc
inc
xor
xor
mov
mov
mov
add
lock
test
pop
cmp
adc
xchg
arpl
in
lret
cmp
data16
inc
dec
inc
pop
add
adc
je
insl
stc
jns
push
jnp
out
xor
pop
sbb
push
dec
jp
add
push
push
cli
jbe
mov
push
js
mov
es
dec
push
je
push
cmp
mov
push
test
mov
stos
mov
arpl
or
ficoms
sub
pop
inc
adc
jo
scas
adc
loop
lock
lds
mov
int3
sub
adc
lea
and
pop
daa
mov
dec
inc
outsb
push
mov
and
adc
mov
jnp
dec
pushf
jmp
fadd
or
loope
rcll
sbb
xor
clc
mov
mov
ss
shrb
and
fmull
or
sub
jl
fildll
jmp
out
int3
xlat
and
lea
data16
sub
or
pop
cs
adc
jb
ds
outsb
sti
xor
inc
int
mov
and
dec
jle
inc
mov
push
cs
jl
jb
or
mov
sub
movsb
mov
aas
cmc
in
push
test
jg
cld
std
cwtl
fcmove
mov
call
dec
je
mov
push
push
ljmp
orb
fnstsw
dec
or
imul
lcall
mov
inc
orb
fnstsw
in
lods
jne
push
repnz
jle
lret
out
je
pop
insl
or
fucomip
or
sub
push
mov
popf
lock
cmp
dec
adc
pop
pushl
jp
inc
xchg
inc
pop
cmp
fstpl
sbb
js
mov
adc
xchg
xor
in
jg
mov
jecxz
test
std
movsl
add
adc
sar
cmp
and
adc
shll
test
loopne
mov
clc
js
shrb
mov
and
lea
lahf
jbe
push
mov
ret
xor
lea
cmp
bound
leave
mov
or
fildl
dec
cmp
stos
imul
mov
loope
test
dec
mov
jb
mov
cmp
rorl
sahf
lret
mov
aam
hlt
test
fld
pop
rcrl
int
addb
cmp
lds
leave
push
pop
add
cmpsb
dec
das
jo
cmp
or
fcmovnbe
dec
adc
lock
jb
lock
cmp
mov
shrl
sub
std
outsl
int
push
call
pop
mov
fwait
push
jne
jle
jp
push
or
ja
lock
repz
fldcw
sahf
adc
lods
mov
sub
mov
fdivs
xlat
int
stos
dec
sbb
sbb
sbb
jb
mov
aam
push
decb
sub
les
scas
nop
je
fcmovb
push
push
mov
add
jmp
xor
cs
inc
test
xchg
es
jo
mov
dec
aam
push
mov
xchg
cli
push
lahf
xchg
pop
inc
testl
dec
xor
mov
aas
lret
in
inc
cmc
jmp
rcr
mov
sub
xor
fwait
and
cmpsb
adc
xchg
dec
pop
jno
shrl
sbb
sub
es
inc
and
add
jae
mov
insl
add
je
xlat
sub
scas
scas
lcall
xor
clc
inc
add
mov
adc
or
pop
stos
dec
inc
insl
test
rcrl
jno
cmc
jb
clc
inc
xor
inc
insb
jno
sbb
shl
inc
lods
in
mov
into
repnz
xchg
sub
aam
push
rcl
lock
xor
ja
ljmp
push
movsl
mov
xchg
xchg
mov
daa
mov
add
les
loop
ljmp
iret
and
xor
nop
dec
cs
test
adcb
test
xchg
cld
cmpsl
daa
mov
cli
data16
pop
out
xchg
stos
scas
pop
int3
cmpsb
push
fcom
dec
and
call
mov
ljmp
jbe
rcll
popa
stos
mov
xor
out
push
and
cwtl
fwait
lret
pop
or
sub
cld
hlt
jne
jae
popa
insl
mov
andps
xchg
or
mov
cmc
inc
adc
pushf
lods
cmpl
int3
push
cmpsb
dec
jle
adc
or
dec
push
cmc
pop
iret
inc
roll
mov
subb
std
inc
xchg
fnsave
mov
xorl
stos
cmpsb
shlb
mov
lahf
test
inc
xchg
cmc
ljmp
daa
icebp
jae
dec
ffree
push
push
pop
mov
or
add
mov
pop
mov
rcll
clc
mov
jbe
sarl
jbe
clc
adc
mov
xor
pop
insb
addr16
rcrl
mov
adc
stos
add
je
cmp
je
subb
loope
mov
popf
scas
sahf
fcmovb
outsl
adc
out
jl
mov
ss
test
dec
fwait
dec
sub
push
ror
aad
test
sub
jmp
cmp
dec
mov
lret
or
jo
xor
jae
sbb
push
les
pop
test
inc
or
icebp
leave
lahf
lret
das
rorl
nop
aad
scas
mov
mov
movsb
jne
outsl
ljmp
lds
mov
dec
test
imul
lahf
outsl
outsl
dec
dec
leave
jno
decl
adc
adc
lahf
vmovsldup
repz
inc
cwtl
aaa
adc
testl
or
insl
sub
mov
jns
dec
mov
push
rol
repz
mov
mov
das
add
push
lea
mov
pop
push
mov
sbb
xlat
fcoml
int
pop
mov
mov
add
xor
addr16
xchg
les
mov
mov
adc
xchg
inc
inc
inc
insl
inc
mov
lcall
repnz
sub
shll
xlat
sahf
orb
repz
test
mov
bound
rorl
sub
and
bound
ret
inc
or
daa
mov
std
pusha
cmpsb
pop
daa
mov
fnsave
in
hlt
xor
jp
cmp
mov
sbb
in
push
stos
ret
insl
and
outsb
xor
push
inc
arpl
out
xchg
push
push
push
push
push
and
or
hlt
pop
stc
outsb
aam
pop
dec
inc
ja
xchg
jmp
scas
cmp
mov
and
fdivrs
adc
movsb
shlb
mov
dec
and
jne
sub
sub
mov
inc
arpl
mov
add
cmp
test
pop
push
nop
clc
xor
roll
mov
pop
xor
jp
outsb
sti
test
cmp
sub
stos
test
lret
repz
jmp
call
out
dec
xchg
lods
and
imul
repnz
bound
cld
dec
lock
stos
incb
xchg
lock
and
insb
sub
mov
fsubs
adc
dec
dec
adc
andb
lods
out
fadd
lods
aas
xchg
test
add
adcb
sbb
inc
pushf
outsb
push
fs
cmp
push
sbb
mov
sbb
lock
rcrl
xor
inc
xchg
sahf
cmc
mov
lods
lods
popa
loope
xor
add
jo
cltd
daa
fs
mov
orb
mov
sar
nop
sub
mov
ja
mov
aaa
arpl
cmpsl
xlat
pop
xchg
sbbb
loopne
ds
mov
mov
pushf
mov
push
sarb
bswap
lods
sbb
push
adc
pop
sub
dec
stos
cld
adc
lds
ss
sti
sbb
or
daa
orb
sub
jmp
addr16
test
or
adc
dec
sti
xlat
jl
jle
cmp
mov
and
push
shr
filds
or
adc
push
sbb
pop
fnsave
scas
icebp
jo
cmp
jle
push
shrb
out
push
mov
int3
lea
cltd
fwait
imul
loopne
sub
jle
test
mov
in
insb
aad
pop
jns
lods
aad
cmove
mov
imul
je
xor
shl
ret
icebp
cmpsb
enter
and
in
jne
or
int
imul
or
jno
into
cmp
sub
hlt
mov
cs
movsl
mov
es
mov
test
rclb
add
xchg
mov
cwtl
pop
ljmp
les
mov
inc
add
addr16
and
mov
pop
popa
out
mov
jb
xor
shlb
push
pop
test
imul
lods
testb
std
sub
fmuls
sbb
cmp
inc
imul
dec
addr16
in
ja
popf
movsb
mov
fsubl
mov
adc
inc
sarl
mov
mov
ds
inc
cmp
mov
enter
iret
dec
lea
cmp
xchg
inc
sub
lods
jnp
xchg
inc
jmp
lahf
mov
push
jl
adc
ja
call
pop
ljmp
and
add
cli
outsb
bound
mov
xor
mov
fnsave
xor
mov
fwait
aaa
xor
xchg
push
and
cwtl
xchg
mov
cltd
mov
call
mov
xor
sub
ret
or
leave
xor
push
xchg
notb
fldt
rorb
cmpsb
mov
pop
subb
arpl
mov
repnz
xor
push
mov
xor
xor
fisttps
gs
data16
adc
xchg
jns
in
jl
sar
dec
lds
fcompl
pop
stos
pop
push
jbe
mov
outsl
push
cmpsb
arpl
shll
clc
xor
pop
faddl
lea
inc
insb
out
jecxz
int3
shr
or
stos
jnp
mov
jbe
shll
jg
adc
test
aaa
loopne
movsl
inc
pop
and
cmp
fsubrs
jnp
fisubrs
loop
aad
insl
test
jo
iret
insb
jnp
loop
loopne
cmp
sbb
mov
inc
push
notb
cld
mov
xor
cmovb
sub
sbb
or
rorl
stos
lods
out
fsubrs
cmp
mov
dec
fidivs
sarb
add
and
flds
mov
inc
inc
movsb
arpl
inc
sbb
test
inc
call
ja
and
inc
insl
imul
pop
push
stos
out
adc
mov
ret
pop
mov
cmp
ds
jge
mov
or
lock
sub
dec
adc
out
push
in
or
mov
lahf
xchg
es
or
test
ds
aad
adc
addr16
cmp
sub
cli
add
dec
add
int
das
bnd
loop
lahf
dec
xchg
movsb
shll
out
pop
sub
ljmp
mov
fucomp
inc
outsb
jne
scas
push
cli
cs
cmp
lds
ror
add
fstpl
add
test
xchg
push
ret
movsb
int3
gs
stc
ljmp
loope
inc
inc
out
jb
sbb
jb
jge
fstl
and
fcomps
pop
sti
mov
dec
push
mov
in
fdivrs
loop
enter
add
mov
pushl
dec
outsb
mov
inc
and
int3
fmuls
xchg
jecxz
sbb
leave
jg
loopne
iret
xor
decb
or
mov
and
rclb
cmp
popf
pop
fcoml
aaa
sbb
and
and
ss
loope
sub
mov
sbb
inc
xchg
call
lods
cld
mov
mov
pop
cmp
lret
mov
sub
and
aam
rcr
cld
cli
inc
fldt
jbe
jp
jge
sub
sbb
jge
mov
xor
cmpsl
jg
xchg
cld
jo
xor
adc
push
mov
fldcw
movsl
ja
fxam
jno
dec
mov
cmpb
mov
fbstp
xor
adc
and
sahf
or
cli
test
push
xlat
shll
shll
pop
or
sarl
mov
push
xchg
movsl
inc
test
lods
les
mov
rsqrtps
dec
xchg
cld
pop
xor
in
lods
popf
fnstsw
pusha
mov
sbb
call
xor
xchg
fdivrl
add
in
add
and
adc
sub
or
mov
scas
cmp
xchg
in
adc
and
push
mov
ljmp
jnp
jecxz
mov
roll
push
cld
jno
mov
mov
jne
jmp
push
jnp
jge
enter
std
cwtl
cmpsb
out
add
icebp
int
es
jnp
std
testl
sarb
pop
lods
push
gs
xchg
mov
push
icebp
inc
data16
pusha
shrb
lds
push
inc
dec
aam
test
std
xchg
ret
adc
add
mov
lcall
out
lret
xor
mov
push
fsubrl
mov
dec
insb
test
outsb
sbb
fdivrs
arpl
les
or
test
jg
pop
xor
push
push
mov
push
cmpsl
mov
sbb
and
insb
jns
sub
mov
pop
mov
or
and
test
mov
iret
test
cmp
dec
push
adc
add
out
loopne
inc
cmp
pop
add
add
mov
mov
cmpsb
test
fs
sub
mov
iret
cwtl
sub
pusha
nop
leave
lcall
dec
roll
jp
in
nop
mov
mov
aad
add
mov
int
pop
orb
mov
pusha
xor
pop
inc
jmp
fistpl
cmp
mov
aas
cmp
lgs
push
adc
mov
xlat
rorb
jl
rcl
test
cltd
jl
jge
aam
adc
sub
adc
adc
es
into
mov
and
xchg
or
cli
test
mov
cld
andb
div
add
sbb
sub
psubsb
mov
mov
fsubl
pop
movsl
jo
push
pop
arpl
test
insb
pop
jp
hlt
sarl
in
sub
cmpsb
pop
pop
aas
cwtl
addl
test
int
cld
add
and
push
hlt
xchg
or
out
jnp
xlat
pop
cmp
imul
xchg
mov
mov
jg
inc
sub
or
cmp
xchg
pop
push
scas
sbb
mov
test
mov
sar
xchg
test
pushf
pop
pop
xor
mov
jl
sbb
aam
mov
push
mov
or
lock
ja
adc
outsl
mov
jb
movsb
les
jp
cmp
into
cli
orl
int
les
jae
daa
pop
dec
jp
pop
in
adc
loop
sub
xchg
sti
cmpsl
inc
mov
sub
adc
icebp
sub
and
fucompp
movups
mov
sti
mov
sub
data16
je
and
cmc
imul
and
scas
cli
sbb
icebp
mov
cwtl
filds
rcll
mov
test
stc
popa
mov
subl
mov
push
mov
mov
cmp
out
movsb
movsl
fistpll
sbb
xor
stos
sarb
dec
mov
enter
and
insl
fs
bound
lahf
data16
test
jmp
in
and
loopne
lods
xchg
sub
cmp
lret
and
sbb
sub
lods
push
pop
push
mov
jge
fstpl
and
hlt
mov
fstpt
sub
dec
sub
mov
lds
sarb
xor
cmpsl
andl
js
lods
imul
int3
push
add
mov
ret
aaa
fsubp
sarl
andl
cwtl
cld
imul
adc
popl
pushf
movsb
or
lcall
jmp
rclb
add
pop
cmp
cltd
jbe
inc
in
mov
jp
push
and
shr
ret
fsubrs
mov
jl
fisubrl
pop
cltd
std
les
jb
add
jg
cmpsl
lahf
jp
cmp
movsl
aam
dec
cmp
mov
xor
sbb
lods
scas
adc
jbe
add
jl
hlt
add
iret
pop
and
cmc
xor
movsl
scas
int3
repz
push
ret
xchg
and
jne
and
adcl
or
hlt
mov
cld
add
and
mov
rorb
sub
loop
rep
pusha
push
fidivrs
cli
dec
pop
add
ss
or
mov
inc
repz
mov
in
cmpsb
mov
xor
in
cltd
test
and
jg
negb
mov
xlat
dec
pop
arpl
push
pop
leave
fldcw
daa
xor
xor
inc
or
loope
add
je
rolb
mov
mov
inc
adc
cmp
sub
sbb
dec
mov
into
lea
jl
je
sub
ljmp
mul
inc
mov
add
or
daa
mov
fcoml
xor
loope
shll
fsubs
xor
cmp
pop
fwait
cltd
popf
ret
stos
fistpll
and
or
sbb
cmc
inc
mov
inc
cmp
cmp
push
imul
mov
dec
mul
inc
aaa
clc
in
jbe
stc
lods
push
negl
in
lea
lods
xchg
dec
adcb
rclb
cmpsl
aaa
mov
into
push
leave
xchg
push
sbb
jmp
and
insb
cmp
cmp
push
fsubp
fadds
mov
in
ja
outsb
movsb
in
jne
loopne
fidivl
out
sahf
mov
shrl
imul
shl
arpl
mov
into
push
xor
call
ret
jne
stos
push
sti
js
add
stos
push
pusha
mov
lret
add
aam
jmp
je
mov
test
xor
rorl
push
mov
adc
mov
adc
mov
pop
sub
push
clc
std
pusha
lds
iret
pop
sti
inc
cmp
mov
js
mov
mov
jmp
add
arpl
aaa
inc
or
sub
out
jno
add
sbb
mov
ret
xchg
lret
imul
pop
repz
xchg
mov
sahf
sbb
jae
in
aad
mov
fs
mov
xchg
leave
mov
mov
mov
push
and
push
subb
stos
inc
inc
sbb
xchg
mov
jge
and
mov
and
pop
mov
jno
cs
outsb
andl
mov
jecxz
sub
cmp
out
adc
add
cmpl
dec
push
sbb
mov
add
rolb
stos
in
adc
data16
bnd
ds
mov
out
mov
je
outsb
jne
add
mov
cmp
test
stos
lds
outsl
mov
mov
push
cmp
movsb
shrb
jge
mov
dec
pushl
sbb
lods
add
cmp
pop
fimull
pop
imull
inc
jg
pushf
xchg
dec
lret
mov
pop
mov
mov
pop
jge
xchg
mov
popf
sub
mov
push
jl
inc
push
ja
sbb
mov
push
mov
call
mov
jnp
push
mov
jg
pop
pop
pop
in
xchg
ret
mov
out
adc
dec
xor
mov
jb
jae
out
pop
int
cltd
mov
jl
clc
icebp
mov
jg
push
fidivrs
fistpll
or
jmp
call
inc
ret
test
mov
out
data16
push
test
aad
in
mov
push
cmc
mov
and
pushf
mov
xchg
or
sbb
or
and
dec
or
dec
xchg
or
pop
movsb
inc
jmp
jne
xchg
dec
inc
mov
je
inc
setl
adc
xchg
out
cld
sbb
mov
dec
daa
jns
push
and
out
and
push
jp
js
lcall
sub
in
sub
mov
es
lret
cmp
pop
push
push
ret
addb
fistpll
sub
in
loop
xchg
cwtl
dec
mov
jmp
xchg
xchg
shlb
pop
mov
cltd
push
sub
jle
in
mov
repz
mov
dec
pop
pusha
imulb
subb
ljmp
cwtl
mov
insb
push
xlat
jns
push
mov
call
sub
out
add
int3
lahf
add
arpl
repz
inc
into
sbb
leave
xlat
call
lret
pop
pushf
xchg
xchg
xor
sub
push
add
mov
out
repnz
fcos
test
fldl
and
fcoml
adc
cmpsl
push
add
pop
push
popf
imul
aad
sbb
jo
cmp
out
pop
setp
fldenv
pop
out
pop
push
hlt
lahf
icebp
jle
std
pop
dec
inc
adc
xchg
xor
lea
push
pop
lret
lar
scas
inc
mov
loopne
loope
mov
mov
push
sbb
cmp
scas
les
push
mov
cmpl
push
mov
cmp
fstl
outsl
fstp
ljmp
sub
scas
or
push
sbb
cltd
mov
imul
fnstenv
rcll
int
lret
iret
data16
adc
aas
loop
fcom
sarb
xor
jp
insb
sub
mov
cmp
lods
sbb
mov
mov
outsl
mov
push
outsl
xchg
or
popf
lock
imul
sbb
test
push
popa
aam
adc
mov
mov
mov
cmp
ret
cmp
rol
xchg
xchg
test
ss
jne
shll
cld
xlat
inc
pushf
scas
push
lock
mov
and
pop
mov
lods
cmp
mov
inc
scas
add
pushf
stos
mov
les
add
mov
mov
and
xchg
inc
lcall
scas
dec
add
jae
jmp
nop
cld
jbe
loopne
push
jmp
fldcw
movsl
or
xor
or
xchg
mov
ss
pop
mov
or
cs
push
scas
add
jge
daa
aad
les
lret
inc
negl
divb
shlb
fwait
mov
outsb
pop
test
inc
dec
orb
jne
cwtl
pop
mov
xchg
mov
cmp
lret
inc
daa
inc
mov
xor
inc
inc
stc
dec
call
mov
or
fsub
jo
in
mov
sub
testl
dec
aad
mul
add
jns
mov
mov
out
orl
negl
inc
rcll
cmc
out
test
push
push
adc
push
mov
sub
lcall
in
icebp
inc
cmp
mov
sub
xchg
dec
add
cmp
fimuls
or
inc
or
addr16
js
out
fwait
jnp
push
sub
fxam
cmpsb
nop
fwait
cmpsl
out
add
and
sbb
jne
and
lret
pop
mov
cli
movsb
fsubrl
push
ret
cmp
mov
shll
loope
fwait
cmp
popa
xor
faddl
mov
push
sahf
add
xchg
aad
movsb
cs
xor
cmp
lcall
jge
pop
test
aad
mov
add
jmp
clc
mov
and
sbb
jno
cmp
cmpsb
jne
mov
push
sub
mov
addr16
frstor
xchg
pop
fidivrs
rorl
stc
jne
jp
or
dec
xchg
inc
or
mov
ss
icebp
push
cs
jne
pop
dec
fistps
xor
mov
cs
stos
mov
jecxz
pop
mov
movsl
js
int
test
ljmp
mov
jl
insb
outsl
test
ret
dec
cld
imul
loopne
loopne
fimuls
aaa
imul
notl
out
lahf
cmpsb
jbe
lods
push
or
mov
pop
jb
mov
mov
cmp
dec
mov
xor
and
add
adc
daa
int3
fcoml
xchg
pop
lcall
out
push
pop
jo
scas
ljmp
movsb
lods
fidivs
insl
test
sbb
sbb
push
jns
pop
inc
mov
push
fs
or
lods
loop
movsl
dec
pop
shrl
xchg
in
loop
fldenv
jl
xor
fs
aam
cmp
push
fcomps
xor
mov
jl
inc
add
mov
xor
mov
xor
inc
cli
or
or
fldt
arpl
int3
insb
int
frstor
adc
mov
jo
add
jo
out
and
xchg
push
dec
mov
addr16
repz
inc
xchg
pop
popa
or
inc
sbb
cld
lods
sbb
in
push
movsl
inc
adc
push
adc
mov
ret
pop
cmpsb
mov
imul
inc
xchg
mov
mov
push
das
imulb
push
sti
adc
adc
mov
xlat
cmpsb
push
fidivs
sbb
std
or
lock
push
xor
xorl
xchg
mov
fs
subb
test
icebp
in
pop
jmp
and
inc
jge
adc
jg
pushl
cmpl
sbb
dec
stos
dec
xor
lods
jp
jne
sbb
xor
in
int3
push
inc
and
clc
add
push
shrl
mov
or
push
repz
lock
push
enter
aam
xor
or
pop
pop
lahf
sub
cmp
adc
insl
inc
pushl
outsb
push
insl
and
in
or
cmp
push
rcrb
rol
out
clc
xor
cmc
add
push
xchg
adc
rorl
pop
fwait
mov
lcall
clc
stos
cmp
inc
mov
adc
data16
loopne
pop
xchg
sbb
loope
mov
lret
add
jg
sbb
insl
mov
add
sbb
jo
hlt
or
and
pushf
jmp
xchg
xor
loopne
and
cli
push
imul
jns
dec
or
cli
sub
push
pop
xor
out
cld
jnp
loopne
arpl
xchg
sbb
cmp
add
ja
and
shrb
hlt
jp
in
fimuls
push
and
sti
mov
outsb
mov
ss
mov
adc
hlt
mov
out
out
sahf
int
lahf
popa
cmp
scas
ljmp
in
ret
mov
imul
imul
inc
ds
shrb
pusha
lahf
or
dec
sar
xchg
testb
inc
outsb
xchg
data16
push
sbb
jg
mov
movsb
bound
mov
cli
jns
stc
repnz
test
dec
jns
xchg
stos
lret
xchg
sub
aad
cmp
in
mov
daa
xor
sub
fistps
lahf
insb
xchg
sub
jge
mov
test
dec
clc
dec
shll
icebp
dec
or
in
aas
bound
jl
lret
and
and
mov
cmpsl
sbb
in
mov
fnsave
push
cmc
test
jge
push
insl
outsb
or
lcall
adc
hlt
aas
push
jne
cmp
sarl
push
scas
addr16
mov
inc
jle
lret
mov
push
pop
test
mov
sub
dec
mov
push
aam
xchg
push
sbb
int
mov
inc
add
ret
ljmp
rcll
lods
lods
adc
push
mov
xor
adc
add
jb
fdivrs
ficoml
push
pop
lods
pop
lret
jmp
cmc
sbb
inc
inc
rolb
repz
sub
lods
out
lods
xchg
jecxz
scas
aam
push
loopne
mov
push
dec
dec
scas
jl
cltd
adcb
decb
cmpsb
mov
pop
in
movb
aam
dec
sub
mov
cs
sbb
or
push
mov
xchg
dec
imul
test
sub
push
movsb
leave
push
sub
mov
mov
insl
jnp
loop
xor
stos
iret
cmc
popf
aam
xchg
lods
adc
xor
cmp
dec
push
push
adc
jle
outsb
xor
ja
sti
jbe
insl
pop
cmc
lret
push
rcll
cmc
out
pop
inc
fcmovnb
loopne
pop
push
rorb
push
push
push
gs
lcall
sbb
jbe
push
bound
sub
push
fidivrs
push
stos
xor
dec
sub
mov
mov
gs
inc
lret
icebp
popf
mov
xor
xchg
mov
cs
ds
int
fcomi
out
out
pop
push
outsb
add
test
cltd
outsl
and
inc
jns
jg
xor
push
lock
mov
loopne
jns
push
pop
add
loopne
cmp
push
repnz
hlt
sbb
jno
cmp
loope
cs
sti
mov
movsb
loopne
test
or
mov
fbstp
fdivr
pop
pushf
mov
inc
push
popf
xlat
inc
sbb
fwait
sti
jne
mov
imul
aas
pop
jae
or
and
mov
out
mov
fs
repnz
into
movsl
jno
inc
outsl
daa
es
addr16
cltd
outsb
in
bound
in
insb
push
mov
sbb
xor
int3
std
dec
mov
enter
sub
sbb
dec
push
cli
sbb
in
cmp
fcmovne
xchg
sbb
mov
mov
dec
adc
pushf
push
xor
pop
dec
and
cmp
test
nop
mov
mov
shl
subb
outsl
add
fs
movsl
shlb
add
mov
ficoml
fcmovnb
push
inc
jl
xchg
enter
cmp
pop
lcall
add
xchg
ss
fiadds
fildl
xor
xchg
xchg
xchg
rcrb
ljmp
das
test
div
dec
lea
inc
sbb
addr16
pop
cmpb
mov
subl
dec
mov
sahf
pop
into
fistpll
xchg
fiadds
in
out
pushf
cltd
mov
xchg
push
subl
lock
dec
add
xor
xchg
inc
ja
dec
add
testl
pop
sub
iret
lret
jne
xchg
lds
or
rep
jbe
adc
xchg
mov
mov
fnsave
xor
mov
fidivrl
data16
inc
mov
arpl
xchg
xlat
prefetch
or
sbb
movsl
mov
dec
lods
loop
pop
mov
mov
push
xchg
fldenv
lods
cmp
adc
or
out
and
loope
aaa
ds
jb
enter
movsb
mov
pop
cmpsl
rolb
mov
mov
sar
xor
xor
mov
pop
push
push
lahf
mov
push
mov
and
jg
and
repz
jmp
adc
js
sub
pop
cmp
cld
dec
xacquire
pop
lret
push
and
rcrb
add
repnz
psubsb
shlb
dec
push
cmpl
fnstsw
push
push
mov
lods
adc
int
addb
xor
fmulp
cmp
dec
mov
mov
lahf
sbb
xor
dec
sub
cmc
xchg
jecxz
jns
shll
test
mov
pop
stos
gs
arpl
mov
adc
fwait
pusha
je
into
xor
cmpsl
insl
mov
mov
mov
cmp
jecxz,pn
xchg
xor
sbb
filds
mov
jge
gs
in
jl
sub
dec
mov
push
jnp
movsl
repnz
insl
push
imul
adc
pop
mov
and
leave
mov
data16
aam
rcll
vpcmpgtd
xchg
or
xchg
mov
cmp
stos
into
xor
hlt
sar
and
daa
aad
push
popw
inc
out
pop
outsl
fdivr
jae
stc
inc
lret
push
test
inc
pop
and
ret
push
mov
aaa
jnp
fxam
ret
mov
in
xor
fcomps
gs
push
cmp
jb
shl
js
cld
pushf
subb
mov
or
mov
aas
cmc
and
xchg
arpl
jl
arpl
xor
stc
pop
out
andl
ds
lea
testl
inc
test
jp
cli
cmp
add
es
dec
lret
mov
jecxz
jmp
hlt
ds
sbb
les
sbb
xchg
and
jae
adc
xorb
xor
adc
in
inc
ret
movsl
jecxz
pushf
mov
inc
mov
scas
pop
pushf
xor
dec
stos
inc
imul
into
jmp
outsb
lea
jae
mov
xchg
movsl
outsl
mov
mov
dec
mov
jecxz
int
or
ja
fcomi
das
loopne,pt
addr16
lods
sahf
mov
cltd
pop
cmp
lock
in
sti
adc
sub
scas
cmp
pop
subl
ret
add
or
and
mov
mov
incl
cmc
nop
xchg
sarb
popf
sbb
or
adc
pop
popa
push
sbb
sahf
jge,pn
lahf
rcrb
pop
call
bound
lahf
movb
ja
pop
inc
push
mov
mov
push
in
add
jl
push
sub
jmp
or
sub
arpl
arpl
outsb
inc
decl
and
lcall
mov
loop
cmp
xchg
sub
inc
inc
push
push
aad
fwait
clc
das
and
int
mov
aam
xchg
out
outsb
fidivs
jbe
inc
xchg
sub
imul
fwait
add
add
sahf
xor
out
add
push
xchg
jmp
cwtl
xor
add
cmp
loop
sti
sub
inc
inc
xchg
sub
mov
fiaddl
sahf
xchg
sbb
movsb
popa
int
sub
push
aaa
loope
das
pop
shrb
popf
sti
movsl
outsl
dec
lcall
mov
xor
stos
push
adcl
sbb
xor
jge
ljmp
pusha
or
test
repnz
lock
test
inc
push
pop
call
jmp
or
jns
jecxz
lcall
xor
cmp
fnstsw
pop
dec
sti
test
out
rorl
fcmove
scas
lret
push
xchg
loop
xor
xor
mov
jae
std
test
inc
xchg
pop
mov
or
dec
xor
in
push
out
aaa
aas
mov
or
inc
lock
push
lret
push
or
jge
fwait
push
mov
jmp
or
adcl
and
adc
add
je
repnz
aas
pop
int
test
stc
test
or
bnd
imul
mov
mov
inc
and
mov
xor
adc
stos
lds
lea
cwtl
sbb
jmp
shl
add
decb
dec
mov
mov
sbbb
mov
xchg
adc
rolb
push
cmpsl
or
outsl
add
pop
pusha
faddp
xor
rcrb
bound
idivl
mov
cmp
jae
inc
adc
or
loop
in
pop
loopne
insb
into
scas
mov
lcall
pop
cwtl
cmpsb
mov
add
mov
ljmp
lret
jp
cmp
push
cmp
daa
daa
cs
xlat
cmp
std
cmpsb
in
cmp
cmpb
sbb
mov
mov
adc
sub
lcall
jmp
stos
jl
das
pusha
in
jb
mov
xchg
inc
jg
sar
dec
sub
in
jo
cmp
add
push
mov
sti
sar
mov
andl
mov
ljmp
xor
xchg
push
mov
mov
imul
jl
pop
or
pop
shlb
cmc
dec
std
cmp
pop
mov
adc
mov
fsubl
pop
insl
mov
cli
add
xchg
cmp
sahf
push
jo
mov
push
pop
xor
xchg
aaa
pop
into
cmc
push
shr
insb
and
or
jo
lcall
adc
push
addr16
push
adc
push
inc
stc
js
pop
inc
add
mov
pop
jae
mov
std
push
jno
push
cltd
add
adc
cld
in
pop
fbld
cmpsl
xchg
mov
or
shrl
xor
cmp
add
adc
push
in
hlt
pop
leave
stos
mov
mov
xchg
out
lahf
cmpsl
dec
bound
outsb
or
sarb
mov
stos
icebp
fiaddl
mov
mov
stc
fimuls
repnz
pop
inc
loop
push
jo
lods
js
pmullw
jecxz
xchg
adc
inc
or
jo
mov
out
stc
xor
xlat
mov
cmp
lret
and
pop
dec
es
adc
mov
dec
xchg
cmpl
mov
mov
fsts
ret
jecxz
and
rcl
push
ret
scas
inc
mov
xor
fstpl
inc
sbb
push
push
mov
daa
fbstp
xor
cmpsb
popf
push
stos
imul
test
dec
xchg
adc
dec
lock
les
push
jae
or
fstps
movsb
push
jae
and
sbb
movsl
jns
sub
xor
out
xchg
pushf
mov
jmp
xchg
pop
aad
fisubl
push
and
std
sar
jecxz
int3
ss
out
inc
dec
stos
ja
pop
jns
idiv
addb
stc
pop
mov
push
inc
sub
test
in
repz
push
out
or
movsl
sbb
fstpt
mov
cltd
outsb
not
jge
pop
inc
push
add
pushl
lcall
dec
shlb
nop
leave
and
and
rcr
adc
xchg
jp
lret
in
inc
pop
in
pop
cmp
inc
xlat
jbe
jne
test
stos
pusha
mov
jbe
inc
cmp
stos
mov
stos
stc
lahf
mov
sbb
out
xor
push
or
and
push
inc
ja
or
imul
lcall
mov
or
jbe
xor
out
jge
add
addl
lods
sub
jmp
sahf
shrb
cmp
mov
push
jne
mulb
pop
pop
push
xor
ror
jl
mov
lret
mov
and
add
push
push
pop
sub
enter
rol
repz
das
outsl
and
test
xchg
in
in
popf
sub
out
pop
insl
and
push
out
pop
pusha
loope
adc
xchg
push
inc
push
pop
rdpmc
and
sti
sti
add
dec
lea
les
dec
cli
adc
xor
out
daa
lock
sub
cmp
aad
lock
imull
or
rolb
aaa
add
fdiv
cwtl
insl
sub
jmp
out
addr16
dec
std
jl
int
test
add
jnp
aas
sub
sbb
cld
imul
cmpsl
inc
adc
and
aam
mov
dec
arpl
call
nop
sbb
bswap
xor
rcrl
and
outsb
inc
cmpsl
roll
in
ftst
mov
inc
or
dec
sbb
jg
or
dec
lea
jno
push
les
pop
sbb
test
in
xor
inc
cmp
fldenv
mov
frndint
icebp
ja
xor
mov
fwait
iret
insb
adc
push
scas
cmp
mov
fistl
loopne
fldl
and
lcall
movsl
movsb
rclb
sarb
and
dec
add
inc
cmc
push
sub
sub
cmp
push
cmp
sub
in
pop
stos
sbb
test
repnz
pop
adc
xchg
fldenv
pop
push
or
scas
jmp
pop
lcall
loope
push
jno
adc
mov
jo
add
fnsave
fwait
aas
adc
test
loope
and
xlat
jecxz
jmp
push
jmp
inc
push
inc
leave
sub
ds
inc
xor
sbb
mov
outsl
jge
push
mov
stos
or
push
xor
xchg
icebp
insb
mov
ficoms
sbb
sub
leave
out
sub
movsl
and
inc
cmp
rclb
lea
xchg
sub
arpl
jmp
dec
sbb
daa
lret
xchg
ljmp
mov
cmp
pop
shrb
or
stc
add
push
sbb
test
loopne
push
mov
fnstsw
flds
test
outsb
pop
fs
imul
sarb
lds
sub
test
cmc
lds
xor
jnp
loope
repz
sbb
sbb
xchg
xor
out
roll
add
pushf
in
mov
add
lret
add
aaa
xchg
xor
out
insb
cs
sbb
call
int
mov
or
nop
repz
enter
sub
jno
movsb
imulb
and
jne
sub
mov
movsl
add
add
sbb
scas
sub
test
ds
lds
mov
pop
xor
xchg
and
xor
adc
dec
mov
mov
push
inc
adc
fistl
adc
fs
xor
and
and
int
rcpps
outsl
and
insl
xchg
sbb
adc
lret
and
addr16
push
loopne
shlb
dec
cmpsl
into
cli
rcrb
fsubl
sbb
arpl
xorb
sbb
cmp
or
arpl
int3
std
adc
call
dec
xor
mov
dec
dec
lret
lods
lods
cmp
sbb
bound
cmp
inc
mov
testb
call
out
xlat
scas
loope
sub
cmp
outsb
dec
push
push
sti
popf
jp
scas
mov
out
jmp
inc
aas
mov
jns
sbb
sub
pop
mov
popf
fidivs
sub
jle
mov
pop
leave
rcll
sub
fs
subl
ds
mov
push
or
jne
mov
rep
jns
lcall
sbb
jecxz
push
jae
add
idivb
lds
fdiv
xchg
lock
sbb
cmp
mov
call
repnz
jmp
int
std
cmp
mov
das
inc
int
jge
adc
cmp
xchg
add
int
cmp
add
imul
cmp
in
jg
push
mov
jl
je
jno,pn
jnp
push
sbb
pop
xor
push
fistl
inc
insb
pop
push
arpl
and
dec
mov
lea
jno
and
rcrb
outsl
inc
pushf
es
rolb
jbe
sub
ret
in
sub
inc
add
fstp
push
push
insb
in
mov
fucom
mov
frstor
inc
sub
adc
add
lds
jmp
sbb
and
jbe
out
ret
jmp
popa
bound
or
xchg
inc
or
jae
xchg
add
push
testb
xor
fistpl
and
shlb
insl
movsb
popa
nop
mov
pop
xchg
mov
adc
jecxz
inc
cmpsl
cmpsl
stos
dec
cld
int
jle,pt
movzbl
lret
pop
insl
orl
dec
sub
pop
pop
fistpl
cmp
dec
roll
out
pusha
jmp
or
pop
in
cmc
das
sbb
movsb
jp
mov
nop
mov
inc
imul
xchg
fnstenv
sarb
or
mov
adc
mov
mov
xchg
aaa
ja
cltd
cmp
mov
lret
jg
shl
bound
mov
decb
add
stc
mov
pop
push
lods
pusha
ds
in
cmpsb
sbb
sbb
aas
or
cltd
cmp
loopne
je
sub
stos
add
out
outsl
js
call
mov
add
cltd
rcrb
cwtl
imul
insl
fcompl
add
movsb
out
scas
leave
push
inc
cmc
mov
mov
add
cmp
ficomps
adc
cmpsb
test
pop
insl
pop
jmp
inc
mov
mov
push
dec
push
xchg
and
push
addr16
pop
inc
jg
xchg
pop
mov
sbb
lods
mov
sbb
notb
push
stc
in
xorb
inc
enter
pop
push
pop
out
iret
adc
gs
lds
or
subl
dec
pushf
cwtl
loopne
popl
dec
inc
lret
xor
into
pop
and
mov
add
jge
cmp
aad
pushf
add
lcall
ret
push
imul
popf
xor
mov
sub
pop
lock
mov
inc
lret
push
pop
cld
data16
loop
push
inc
dec
dec
test
sbb
orb
aas
xor
jmp
js
push
pop
sbb
scas
aaa
cmp
insl
cs
add
sub
mov
jg
push
sbb
test
enter
fadds
sbb
out
jge
mov
scas
xor
pop
adc
mov
jb
out
mov
adc
pop
push
push
adc
push
pop
loop
pop
push
outsl
jo
mov
dec
imul
and
or
jno
fisttps
ljmp
das
dec
inc
sub
loope
push
in
aam
or
adc
cmp
or
adc
mov
aaa
xchg
inc
mov
jnp
das
sbb
jnp
idiv
lcall
in
sbb
inc
push
lock
lods
dec
test
pop
add
xchg
clc
or
cmpsb
fildll
pop
rol
inc
inc
cld
daa
and
inc
sbb
add
mov
int3
sbb
data16
xor
and
in
jnp
push
cli
mov
xchg
imul
push
jl
rcrb
scas
int
adc
cmp
adc
test
or
dec
cli
and
xchg
inc
dec
sub
fiadds
sbb
outsl
in
mov
xlat
sbb
sarb
pop
imul
push
out
rorb
rcl
sub
sub
mov
adc
jg
lods
mov
int3
cmp
inc
ret
lcall
inc
mov
cltd
stos
lea
aad
inc
leave
rorl
dec
inc
mov
outsl
sub
sbb
popa
jae
adc
sub
ljmp
fisubrl
jae
pushf
mov
ljmp
push
ret
ljmp
out
mov
mov
mov
sbbl
sub
inc
out
jo
test
stc
xchg
mov
rcr
add
repz
mov
imul
sti
insl
in
aaa
cli
jp
into
sbb
or
pop
ss
leave
xor
std
daa
out
js
ret
shll
mov
dec
sbb
mov
cmp
add
xor
mov
insl
add
std
fsts
scas
push
add
sbb
and
idivl
and
cld
xchg
outsl
aas
repz
loopne
mov
ja
jno
xchg
mov
add
insb
dec
jl
movsl
pop
xchg
mov
mov
add
lods
xchg
arpl
bound
jmp
lods
mov
fldcw
aad
imul
dec
xchg
push
jl
cmc
addb
movsl
lret
jns
movsl
mov
insl
mov
mov
sbb
pop
cltd
rcll
pop
adc
push
or
notb
jle
jge
into
mov
pop
lods
jb
push
pop
sbb
push
inc
test
and
iret
push
pushf
lea
outsb
add
adc
mov
or
xchg
xchg
inc
aam
and
add
xlat
nop
test
scas
inc
xchg
into
push
push
pop
jl
ret
pop
in
push
cmpl
jae
dec
xor
repz
ret
cmp
loope
seta
mov
adc
flds
jo
xor
cmpsb
push
xchg
lcall
cmc
push
imul
movsl
xchg
push
push
pusha
insb
adc
inc
push
jg
cmovg
cmp
out
jo
lds
inc
sub
gs
pop
rcl
mov
ficoml
call
and
jge
test
jae
and
mov
pop
call
popa
pop
sub
clc
cmc
cmpsb
add
leave
and
xchg
pop
sbb
std
testl
jno
call
and
jns
mov
mov
jae
cmpsl
xlat
adc
movsb
mov
adc
frstor
sbbb
push
xchg
out
leave
pop
dec
pop
imulb
and
shll
pop
cli
loope
fldl
inc
repz
pop
pop
and
adc
jno
dec
std
fxch
lret
xlat
cmp
push
fsts
jno
in
dec
inc
push
jle
enter
xor
mov
lcall
loop
add
sub
call
adc
shrl
adc
je
in
lods
xchg
lods
mov
xchg
iret
mov
add
bound
clc
aad
push
jo
and
mov
insb
add
or
int3
and
dec
cmp
in
jle
sbb
hlt
xchg
lods
leave
mov
dec
cmp
loop
lret
cmp
xor
cmp
push
cmpsl
push
sub
push
hlt
cmpsb
mov
mov
inc
rclb
add
ja
mov
push
add
aas
push
into
sbb
inc
pop
and
xchg
jecxz
shlb
jp
mov
pop
dec
jno
xlat
out
inc
inc
dec
or
lahf
add
test
push
jae
xchg
cld
sbb
or
cmp
fbld
cmc
gs
pop
sarb
cmp
rorl
push
shll
push
jecxz
jno
and
push
icebp
and
pushf
or
rcrl
dec
leave
sub
xor
xor
jo
je
cltd
or
cli
push
xchg
int
lods
rcrb
fcomi
movsb
sub
cmp
repz
inc
rolb
cmpsl
gs
je
les
loop
lret
ljmp
dec
add
add
mov
test
and
iret
mov
pop
or
and
repz
or
out
cmp
sarl
pop
insl
subl
lock
sbb
mov
mov
outsb
outsl
mov
ss
jmp
mov
fstl
lret
inc
mov
pop
sub
js
movsl
insl
nop
jmp
fidivrl
add
rorl
loop
cs
jge
lret
aam
int
dec
adc
gs
loopne
sub
int
lcall
ds
adc
dec
push
mov
in
out
cli
add
mov
pop
cmp
dec
test
mov
lds
test
mov
out
insb
shlb
ret
ss
popa
out
pop
and
jo
call
ja
xor
inc
pusha
lcall
fsub
pop
cli
and
rolb
lea
fcmovnb
test
mov
jbe
push
jle
pop
sahf
shlb
push
and
mov
out
mov
cwtl
das
es
sbb
sbb
cld
mov
xchg
in
cld
adc
decb
sbb
dec
lcall
cmpsb
fwait
andb
lods
cmp
mov
fwait
mov
aaa
movsb
fistpll
fisttpll
pushf
push
leave
shrl
push
subl
dec
sbb
push
pop
push
adc
jecxz
mov
loopne
lcall
test
lods
mov
test
cmpsb
dec
pop
out
cmpsb
movsb
push
pushaw
ss
test
mov
aas
mov
rclb
sbb
jge
repnz
pushf
repnz
arpl
dec
test
dec
or
leave
mov
sub
xor
mov
rcr
dec
inc
into
sarl
xchg
xchg
adc
mov
cmp
iret
movsl
xor
mov
dec
mov
mov
pop
jb
mov
cmp
push
add
push
adc
jnp
das
add
xlat
jp
mov
xor
add
mov
mov
cmp
les
fisubrs
xchg
push
daa
adc
dec
dec
lock
xchg
rcr
aad
aam
aas
repz
add
fwait
ljmp
jg
mov
add
cli
addr16
repnz
jae
gs
int
loopew
sahf
std
mov
push
stc
stos
pop
jno
xor
dec
or
sbb
std
sti
in
in
inc
mov
int
dec
cltd
fimuls
mov
imul
cltd
pop
xchg
sub
fstl
xchg
push
jne
mov
dec
faddl
pop
andb
dec
jne
and
xor
pop
or
les
and
push
xor
loop
mov
add
pop
jo
js
adc
push
in
add
or
dec
roll
xchg
inc
inc
lds
xchg
sbb
repz
dec
sahf
lock
loopne
or
nop
dec
mov
push
scas
leave
lahf
xchg
lret
jl
add
dec
pusha
or
pop
jp
aas
inc
leave
fildl
out
push
xchg
and
loopne
pop
mov
pushl
xchg
sub
leave
mov
notb
pop
jle
fldt
xor
sar
repz
leave
sahf
outsl
adc
fnstcw
lds
cmp
or
sbb
push
cmp
and
cmp
adc
push
icebp
daa
ret
ret
es
push
filds
push
lock
push
stc
lea
mov
ljmp
insb
das
popf
addr16
or
sbb
mov
dec
mov
mov
fisubs
js
or
lock
xchg
mov
cmp
sub
dec
and
xor
imul
pushf
dec
or
ret
adc
mov
sub
or
jle
xchg
xor
ljmp
or
and
sub
data16
or
in
jae
jecxz
xchg
push
pop
xor
addr16
aaa
arpl
xchg
int
and
sub
mov
mov
ja
repnz
je
push
xor
dec
inc
popf
es
jae
mov
cmp
add
mov
push
in
cs
iret
and
orl
fadd
mov
adc
push
or
dec
ss
xor
inc
movsl
cli
test
mov
pop
add
jne
aam
mov
dec
outsb
and
insb
mov
fmuls
lods
mov
jle
mov
lret
cmp
mov
sbb
sbb
in
popf
inc
aad
out
inc
fwait
andl
push
push
lea
mov
dec
addps
fsub
push
flds
int
xchg
push
icebp
pop
push
hlt
movsl
dec
fisubs
fwait
divb
mov
popa
rorl
add
mov
jmp
sbbl
ja
ret
mov
jp
mov
test
std
int3
dec
lods
push
pop
leave
movsb
or
inc
repz
or
mov
push
sub
jbe
out
roll
fldcw
leave
push
sbb
fdivl
pusha
lock
test
xor
repz
pop
test
and
jp
push
xor
or
xchg
cmpl
testl
shll
ja
ret
dec
std
leave
jmp
push
cmp
insl
daa
push
xor
imul
dec
pop
out
lret
inc
sub
inc
sti
adc
pop
xor
adc
gs
lods
or
sti
jp
mov
imul
gs
mov
xorb
jbe
ljmp
mul
jle
inc
cmp
repnz
lahf
cs
movl
out
cmc
out
lds
pushf
gs
xor
enter
enter
out
arpl
dec
stc
cmp
scas
pushf
idiv
mov
loopne
jae
mov
roll
xchg
and
loope
aam
mov
clc
mov
ljmp
jns
shrb
mov
call
sbb
sbb
sub
mov
dec
popa
mov
arpl
sub
rclb
bound
loopne
jb
cmp
lret
sarb
stos
in
rol
or
adc
into
mov
leave
movsb
jo
fistpl
xchg
mov
nop
movsl
aaa
scas
test
stos
sbbl
sub
les
cmp
fwait
or
mov
cmp
jle
adc
sub
xlat
lcall
xchg
push
inc
fdivs
add
mov
mov
xchg
insb
loop
orb
pop
pop
mov
out
push
xchg
mov
sub
add
loopne
mov
test
andl
cmp
leave
xor
int3
cwtl
mov
in
push
push
push
lods
dec
adc
dec
and
push
fwait
mov
int3
into
add
in
mov
popa
push
and
xor
sub
das
dec
test
cmpl
mov
sti
pushf
cmp
decb
bound
mov
mov
xchg
pop
jmp
dec
lods
jle
sbb
cltd
jmp
in
and
je
cmp
js
cs
mov
and
nop
insl
xchg
pop
cmpl
cmc
jnp
fucom
sub
push
sbb
push
pop
push
shrl
mov
stc
popa
mov
idivl
clc
dec
pop
mov
sbb
push
pop
and
call
pop
nopl
dec
sbb
jne
push
push
jne
loop
in
mov
jbe
rcrl
rolb
mov
stos
mov
outsl
xor
dec
add
in
daa
xchg
push
fcmovnbe
xchg
jecxz
enter
xlat
mov
sub
mov
aam
add
mov
xorl
add
cmc
cmpsb
cli
push
add
add
push
xchg
mov
inc
int3
adc
cli
pop
sub
or
mov
data16
pushf
out
cwtl
push
arpl
jecxz
daa
stc
imul
or
inc
sub
in
out
mov
xchg
pushf
pop
cmpsl
jo
add
cmp
xor
out
mov
lds
subl
jnp
xchg
lret
mov
jl
jns
ja
push
out
cmpsl
jb
pushf
loop
pop
dec
jo
movsb
lods
fistpl
mov
mov
sub
mov
inc
adc
dec
and
jg
stc
sbb
add
test
in
imul
lds
xchg
or
jp
aas
or
ja
sub
test
lcall
dec
inc
inc
pushf
xchg
pop
into
aad
add
into
fildl
pop
out
and
cmpsl
repnz
pop
xchg
xchg
push
lods
add
out
loope
inc
mov
sbb
pushf
mov
out
sub
stc
stos
add
sti
ds
out
cmpsl
clc
daa
mov
int3
rcll
cli
and
fdiv
lock
inc
mov
jp
sbb
sti
sbbl
iret
test
cmp
dec
cmp
cltd
xchg
xor
xchg
pop
imulb
or
push
inc
pop
shll
xchg
sub
adc
out
sub
dec
lea
js
add
jno
or
push
sub
xchg
ja
pop
and
mov
iret
fcom
pushf
adc
xor
mov
cmp
mov
leave
mov
mov
outsb
movsb
cld
xlat
pop
mov
imul
cmp
repz
ret
pop
ret
mov
push
cli
jae
jno
and
imul
push
or
xchg
shrb
adc
jl
xlat
das
pop
jge
xchg
stc
enter
lret
sbb
out
movsb
bound
loop
push
push
fidivs
push
mov
sub
loopne
fcoml
inc
es
and
add
push
jle
pop
sbb
jne
mov
pop
mov
leave
jb
inc
or
pop
cmc
mov
ret
inc
push
and
xchg
lods
aad
in
pop
in
dec
test
dec
rclb
fldt
pop
jns
add
mov
iret
cmpsb
imul
mov
lret
adc
cmp
in
loopne
ret
imul
push
push
rclb
sahf
mov
add
fcompl
rclb
bound
fdivl
jb
addr16
lea
sarl
data16
imul
mov
jmp
out
push
inc
jns
dec
incl
bound
das
and
add
adc
inc
cltd
push
sbb
mov
adc
jmp
enter
out
dec
and
repz
xor
mov
loop
xchg
pinsrw
push
daa
xchg
sahf
out
das
stos
pusha
notl
int3
fldcw
ret
cmp
insb
inc
fstpl
pop
add
and
sbb
inc
ljmp
or
cmp
adc
out
popf
xchg
dec
or
mov
aam
js
in
imul
mov
orb
jg
mov
addl
aas
adc
cs
dec
jns
lods
mov
pop
jbe
cmc
jg
loope
add
and
mov
or
inc
popf
fs
jg
fstpt
lcall
or
loop
push
mov
jecxz
or
lds
cmp
push
pop
fbld
mov
adc
das
imul
in
fmuls
pushf
lcall
cmpsl
dec
mov
ret
pop
enter
pop
test
dec
test
adc
add
mov
test
jg
addl
mov
mov
push
inc
int3
jge
jbe
pop
or
mov
jns
cmp
out
push
mov
movsb
pop
pusha
rclb
adc
sarl
ror
xchg
sbb
jge
push
dec
jno
cmp
xor
mov
mov
push
sbb
pusha
mov
jle
rcrl
mov
sub
pop
jl
daa
stos
lret
mov
push
mov
lcall
mov
movsl
fstps
dec
lock
neg
pop
fcmovnu
or
add
loop
mov
pop
outsl
and
gs
das
imul
cmpsl
adc
xchg
mov
or
cmp
mov
std
sub
mov
mov
sarl
jae
push
data16
or
movsl
hlt
sub
or
mov
insl
dec
mov
cmpb
repz
mov
mov
dec
pop
pop
popa
and
adc
sub
push
mov
mov
movb
mov
sbb
sbb
outsb
dec
mov
test
imull
jb
cmc
pop
xor
jb
ret
fimull
fidivrl
outsl
fstps
lea
cmpsb
cmpsl
shrl
inc
xor
int
jl
push
sub
fs
pop
rclb
ja
mov
mov
cmp
adcl
inc
ljmp
jno
inc
push
xor
pop
ds
test
jg
ja
pop
mov
add
cltd
ret
jae
inc
fidivrs
shrb
sub
bound
xchg
addr16
ss
add
push
cmp
mov
or
xor
jne
xchg
movsl
or
cmp
push
add
in
pop
lock
adc
loop
mov
mov
jne
jp
into
popa
dec
or
fwait
jp
lods
cltd
and
dec
out
sub
or
pop
or
push
push
pusha
dec
lea
mov
pushl
and
outsb
std
cltd
cwtl
outsl
sub
punpcklwd
pushf
data16
incl
inc
push
daa
out
frstor
gs
adc
lock
enter
pop
insb
and
repz
sbb
xor
jnp
cld
stos
and
rolb
pop
xlat
hlt
push
jmp
rol
xchg
jo
push
test
xchg
jno
inc
daa
pop
inc
movsl
add
lret
mov
mov
xchg
shll
sarb
xchg
adc
stos
bound
adc
mov
inc
xor
jge
pop
dec
ret
gs
pop
call
jno
arpl
fsub
cltd
je
push
loopne
and
lds
xchg
mov
out
popf
cmc
imul
das
pop
xor
mov
add
push
jb
add
dec
xchg
adc
dec
add
imul
pop
imul
dec
out
ja
mov
push
loope
lock
push
into
or
enter
fcomp
sahf
pop
in
out
loop
jp
jns
cmpsl
jecxz
mov
dec
test
mov
fwait
jae
pop
addr16
add
dec
mov
jp
sub
lds
jb
loope
sub
fnstcw
sbb
out
jl
mov
mov
cs
adc
sub
adc
lock
cwtl
xchg
mov
stos
repz
mov
mov
sbbb
scas
fisttpll
lret
xchg
pushf
inc
daa
fists
shll
jns
and
sub
xchg
inc
jae
xor
aad
lahf
cli
stos
ljmp
arpl
sub
jae
shr
iret
add
adc
out
dec
cmpsl
out
xchg
adc
iret
and
xor
mov
dec
into
xchg
ret
xchg
fcmovbe
mov
cmp
iret
and
cmpsl
jecxz
nop
rol
dec
test
fcompl
es
pop
stos
xor
cmc
xor
pop
rolb
pop
neg
adc
stos
mov
ficoms
mov
outsl
push
dec
mov
hlt
xor
inc
cli
xor
or
in
dec
sbb
and
mov
inc
shl
adc
jnp
or
dec
mov
rorb
xchg
push
mov
aad
in
jns
icebp
lret
lcall
shll
in
call
mov
add
inc
push
popf
bound
cmc
pop
cli
pop
xchg
xorb
push
mov
xor
mov
inc
xor
jmp
ret
xor
in
ficomps
cmc
push
mov
mov
and
pop
add
loop
inc
cmp
jo
lcall
cld
xchg
mov
lret
add
cmpsl
mov
xor
and
jge
xor
xchg
sub
sbb
in
rcrl
inc
fcmove
mov
pop
iret
loopne
frstor
lock
popa
jmp
ror
xchg
add
push
sub
mov
adc
and
scas
xor
sub
push
clc
cs
sub
push
ja
rcrl
iret
in
popa
aaa
or
in
ljmp
pop
mov
loope
cmp
pop
test
das
jmp
or
in
ja
inc
inc
data16
add
sub
lcall
sbb
jb
pop
sti
pop
jns
add
lods
and
cmp
dec
or
lock
aaa
cmpsl
call
into
inc
in
inc
out
push
ljmp
bound
lods
loopne
cmp
es
pop
fisubs
lahf
sub
cmp
fwait
jl
sub
ret
push
mov
cmp
jmp
inc
xor
ja
pop
push
mov
les
jno
push
repnz
cmpsl
adc
push
das
sbb
mov
rorb
xchg
xchg
cmp
into
inc
decb
fcmove
pusha
addr16
ds
je
fistl
push
mov
dec
and
jbe
cld
inc
aaa
push
jne
push
mov
adc
popa
lods
cmpsb
out
mov
inc
sar
mov
imul
stc
jmp
mov
orl
andb
dec
lcall
mov
insb
or
repz
jecxz
ret
push
dec
into
mov
sub
jno
es
loopne
hlt
int
mov
test
cmp
add
jo
sub
andl
dec
cmp
and
jns
lock
addr16
cmc
sub
pop
fwait
dec
repz
fistpll
xor
mov
addr16
fisubs
std
andb
je
inc
pop
in
adc
mov
in
cltd
fcoml
mov
lods
inc
int
push
sub
test
adc
xor
test
and
jg
sbb
or
movl
push
xchg
mov
cmp
sbb
sarl
roll
dec
loope
jnp
das
mov
ljmp
and
mov
bound
mov
andb
cmc
and
ret
sub
cmp
adc
or
or
fimull
pop
clc
rcll
pop
or
xor
pop
imull
test
cmp
mov
idiv
mov
js
sub
sbb
outsb
es
and
ret
pop
fdivrs
dec
xor
xor
lea
cmpsl
dec
and
les
pop
lods
inc
dec
jge
dec
js
outsl
and
daa
push
sbb
inc
daa
or
pusha
mov
inc
pop
stos
fisttps
xor
ds
xchg
ret
negl
push
testb
xchg
test
loope
ljmp
js
jecxz
inc
cld
jbe
sbb
xchg
mov
movsb
lds
adc
filds
cmpsl
fldt
add
jg
mov
ss
dec
dec
ret
mov
pop
adc
inc
cltd
test
xchg
inc
and
jnp
or
pop
fdivl
mov
sbb
insb
add
lock
inc
ds
inc
movsl
xchg
mov
pop
enter
cmpsl
roll
out
nop
dec
pushf
ficomps
push
lds
in
loope
jnp
add
fs
push
in
add
mov
lcall
les
test
mov
adc
int3
push
rcrl
out
inc
pop
and
aad
out
mov
inc
sahf
and
mov
add
jmp
jmp
or
add
loop
and
loopne
ds
in
cmp
imul
sbbl
adc
jmp
pop
popa
dec
call
fs
push
pop
mull
pop
insb
es
xchg
and
dec
mov
adc
mov
jno
mov
push
inc
sbb
test
test
mov
cmp
mov
cmp
cli
push
in
pop
test
jge
js
add
lahf
aad
cltd
xchg
push
sub
lret
cli
add
popf
fcmovb
fists
mov
cltd
lods
cld
lock
call
fstl
lock
push
adc
nop
testl
stos
pop
and
sub
xchg
aad
xchg
mov
and
pop
inc
jge
mov
call
xchg
inc
std
je
ja
cmp
cmp
xor
adc
fucomip
mov
bound
pop
movsl
adc
xlat
pop
cmpsb
mov
lods
fsub
loopne
lahf
shl
dec
dec
sub
mov
ret
cmp
lea
ss
and
dec
push
mov
stos
or
loope
xchg
insb
cmc
jbe
daa
imul
fcmove
in
dec
xchg
or
pop
mov
push
cmp
mulb
out
push
ds
cltd
xchg
adc
test
or
adc
mov
imul
jmp
pop
lods
adc
addr16
std
test
push
stos
loope
sub
add
jnp
fnstsw
mov
sar
fstl
cmovb
mov
mov
lods
mov
mov
rol
mov
or
or
add
inc
xor
push
popa
cmpb
imul
sub
int
sub
in
adc
in
or
push
iret
sbb
stc
movb
shlb
pop
mov
mov
mov
xor
ret
in
sbb
sub
xor
adc
xlat
mov
push
jb
mov
imul
repz
inc
lods
mul
adc
scas
aas
in
adc
fstpl
es
std
call
inc
mov
and
in
stos
jae
lcall
mov
insb
test
out
fcomi
inc
xchg
and
sti
mov
fs
jnp
ret
fimull
xor
sbb
cmpsb
repz
data16
ror
sbb
lods
popa
or
sahf
sub
push
insb
jb
push
jns
aad
cld
scas
lods
mov
dec
fnstenv
xchg
dec
fcoml
enter
das
aam
lods
push
mov
mov
jg
dec
lods
mov
adc
xor
inc
mov
out
andb
push
shrb
pop
lret
and
in
mov
lea
js
in
cld
pop
je
pop
fldcw
imul
cmp
cmp
dec
cmp
or
pushl
outsb
cs
or
xchg
mov
mov
and
adc
fs
xor
jae
sbb
sbb
cs
xchg
cmc
jl
scas
in
push
ss
icebp
mov
loop
rcrb
sti
ja
movsb
dec
push
pop
jl
push
jb
scas
push
fwait
in
aad
mov
rcl
call
je
imul
lret
pop
sahf
mulb
les
cmp
dec
jae
fbstp
sbb
inc
in
sbb
jo
rorb
mov
lea
cmpsl
pop
inc
inc
std
dec
pop
pop
mov
enter
and
mov
pop
bound
and
mov
pop
push
dec
in
adc
inc
pop
bound
lods
outsl
inc
fst
imul
decb
inc
mov
ds
roll
scas
in
or
or
loope
dec
sbb
daa
cwtl
cmpsl
inc
data16
jle
filds
arpl
scas
push
or
xor
push
scas
and
adc
mov
cmpsb
orb
mov
xor
pop
mov
lock
int3
sbb
outsl
nop
je
add
shrl
jno
dec
xlat
arpl
iret
ljmp
fstpt
bound
inc
bound
sub
mov
add
fs
inc
cmpsl
into
sub
ss
notb
dec
test
out
into
mov
add
and
movl
push
jp
out
pop
push
adc
mov
inc
arpl
push
xchg
cmp
ds
pop
movsl
ret
in
and
sub
xlat
dec
outsl
xchg
test
xchg
adcl
outsb
adc
scas
iret
lahf
leave
clc
out
lea
pop
xchg
lods
stos
and
das
loopne
sahf
cmc
int3
fcomp
aaa
call
or
or
lods
adc
dec
icebp
adc
out
and
rol
or
add
jae
pop
add
jmp
mov
mov
inc
sub
shll
ficoms
inc
dec
add
mov
repnz
cs
dec
mov
mov
mov
pop
xor
and
loop
in
fcomip
xchg
and
xchg
jbe
lret
shrb
jg
aas
int
sbb
adc
fs
xor
call
outsl
ret
or
cmpsl
sti
pop
adc
add
call
fs
pop
jne
pop
hlt
push
mov
loop
sbb
sub
mov
cld
leave
xchg
insb
xor
je
adc
cmp
pop
ret
cmc
cmpsl
inc
jae
les
adc
add
push
mov
shlb
push
dec
xor
push
sahf
shl
adc
popa
sbb
lahf
adc
mov
dec
dec
idiv
int3
add
mov
or
sub
loopne
pop
ss
roll
mov
jp
sub
nop
mov
in
push
dec
popf
mov
sub
imul
jl
jb
xor
jae
pmovmskb
jbe
push
xor
cmp
lods
arpl
mov
or
subl
and
jg
xchg
mov
pop
jns
xor
es
add
adc
or
add
mov
sub
xlat
push
push
cmp
dec
inc
inc
das
mov
xchg
enter
insb
pushf
movsl
or
xchg
cmp
push
hlt
push
hlt
mov
add
rclb
jo
mov
cli
mov
fidivl
cmpsb
gs
sti
lahf
cs
lret
pop
leave
cwtl
xor
push
orb
inc
stos
lret
xor
jl
repz
adc
xlat
outsl
cmp
xchg
sbb
lret
xchg
fwait
mov
xchg
jns
mov
push
sahf
push
push
mov
inc
cmc
or
mov
test
inc
imul
or
sbb
xor
in
adc
mov
and
mov
add
cli
inc
pusha
sbb
pop
movsl
push
jb
lahf
and
clc
lods
push
adc
push
jb
popf
jg
loop
fists
ja
hlt
inc
bound
or
addr16
push
push
mov
xor
ret
cli
adc
int3
fimull
cmp
inc
pop
mov
inc
fdivrl
cmp
ds
mov
aas
rorl
jg
xchg
lods
push
movsb
push
fs
ret
xor
icebp
pop
addr16
mov
xor
mov
xchg
cmp
cltd
pop
jmp
or
pop
lods
in
pusha
dec
mov
pop
lds
cmp
es
sub
and
lcall
fmuls
fisubrl
xchg
pop
stos
adc
andb
jb
mov
data16
mov
inc
mov
cmp
shrl
or
in
mov
mov
in
jbe
xor
aam
mov
adc
lods
add
mov
lock
sub
push
scas
fcoml
fsubr
pushf
push
adcb
shl
pop
shrb
repz
mov
sbb
out
nop
not
jmp
mov
fdivr
adc
popa
dec
in
sbb
enter
sub
int
lock
fwait
insb
in
lea
sub
sahf
push
mov
ficomps
pop
daa
push
and
xlat
mov
inc
sahf
adc
mov
pop
cmp
shll
xchg
mov
shlb
fildll
sub
rcrb
dec
xor
pushf
push
pop
movsl
fstpt
les
daa
jle
dec
mov
clc
jns
repz
jno
or
or
mov
stos
insl
sub
inc
rcl
das
and
aaa
and
into
mov
xchg
addl
aas
jb
xor
xor
test
or
shll
out
jp
add
jmp
pop
mov
pop
jns
push
hlt
test
jnp
sub
add
mov
sub
push
aas
enter
aaa
shll
mov
adc
scas
aam
xchg
insb
aas
icebp
push
push
mov
mov
outsl
pop
or
pop
call
insl
daa
cmp
test
shll
or
test
push
mov
pop
iret
jmp
movsb
in
cmp
jbe
jns
mov
push
mov
pop
hlt
xchg
sbb
scas
add
dec
and
daa
std
push
push
inc
and
xor
sub
cs
mov
push
orl
sbb
cmpsb
or
push
int3
insb
cmpsl
hlt
dec
push
popa
dec
imul
mov
cmp
mov
in
sbb
mov
in
mov
lret
imul
pop
push
adc
mov
adc
mov
out
fcmovnb
jmp
push
insb
jo
pop
notb
xchg
sbb
cltd
fldcw
adc
pop
mov
jle
mov
fimull
outsb
or
push
in
loopne
mov
pop
popf
pop
jnp
ss
add
mov
cmp
test
addr16
test
xor
mov
and
es
xor
fstps
inc
mov
xchg
jnp
inc
jb
and
das
push
mov
lock
add
dec
push
aas
push
nop
inc
mov
xor
adc
aam
sbb
es
hlt
std
mov
scas
loopne
mov
xor
dec
mov
loopne
loopne
push
inc
icebp
mov
cltd
mov
adc
loop
xchg
and
stc
pop
and
cltd
sbbb
or
cltd
xor
dec
mov
sub
in
xchg
cmp
daa
rclb
mov
loopne
shl
adc
or
adc
daa
mov
push
dec
mov
jae
sbb
jecxz
mov
pop
mov
insb
sbb
repnz
lret
sbb
es
lea
es
pop
or
mov
mov
jmp
adc
cli
push
cmpsb
shl
cmpsb
mov
mov
out
std
jbe
or
jge
pop
ds
pop
jae
cmp
xchg
jno
add
dec
stc
xchg
cmpb
lods
cltd
push
in
and
push
inc
mov
pop
inc
inc
ficompl
sbb
scas
inc
push
in
push
push
inc
mov
mov
outsw
sti
insb
and
cwtl
cmp
mov
jo
add
adc
sub
aaa
dec
data16
int3
aaa
test
push
lret
inc
xchg
cmp
mov
mov
fs
scas
pop
push
aam
xor
adc
jbe
rcrb
jno
sahf
fwait
ss
cld
mov
pop
adc
insb
pop
fcmovbe
cmpsb
lcall
or
sub
ds
sbb
push
sbb
pop
inc
mov
and
push
andb
mov
lcall
fmul
add
add
test
mov
sbb
jge
inc
mov
xlat
sti
bound
adc
pop
mov
pop
iret
jmp
jge
mov
pop
cmp
mov
dec
sub
pop
imul
cmpsl
lcall
idivb
cwtl
mov
cmp
push
rcrl
into
mov
mov
jb
sub
je
loope
xor
iret
outsl
out
xchg
jb
fnstenv
pop
inc
jnp
mov
mov
pop
add
sbb
das
or
test
xor
fcompl
sbb
inc
cmp
lds
adc
fsubrs
pop
call
pop
mov
loopne
add
xchg
cmpsl
add
daa
addr16
push
je
arpl
and
add
pop
mov
in
push
sbb
adc
cmp
push
pop
fsubl
dec
idivb
div
out
je
xchg
imul
mov
and
pop
std
nop
sub
cmp
test
aaa
gs
cmp
outsb
shrl
lods
repnz
clc
xor
loop
test
ja
imul
es
test
call
inc
and
arpl
xchg
dec
mov
or
xchg
out
jno
lret
fstpt
xor
cmp
xorl
ret
in
mov
out
sbb
leave
sarb
cmp
out
test
fisttpl
xchg
aam
fbstp
add
inc
fdivp
aam
repnz
xor
and
xchg
aam
or
test
shll
or
iret
movl
inc
dec
xlat
dec
sarb
add
xchg
and
cmc
pop
push
or
mov
xor
lret
call
push
adc
or
xlat
jne
pop
test
aaa
loope
rcrl
push
xchg
lods
jo
sarl
xchg
pop
ds
mov
imul
pushf
xor
lahf
xchg
push
xchg
cltd
xor
pop
nop
and
xor
mov
push
mov
pushf
mov
mov
and
add
add
adcl
xor
mov
fdivl
push
adc
mov
lds
shl
xchg
inc
mov
add
hlt
sbb
call
sbb
rorl
jns
xchg
test
pop
es
add
dec
ljmp
jbe
popf
or
sbb
mov
xor
dec
cmp
sub
andb
js
xchg
cltd
imul
cs
pop
sub
icebp
repz
pop
xor
push
call
sbb
xor
dec
in
mov
stc
sub
lods
mov
stc
in
jmp
pop
clc
dec
pop
cs
mov
jmp
out
aaa
bound
mov
ret
add
cli
scas
es
mov
dec
cmpsb
into
mov
loop
repnz
inc
sbb
push
jp
stc
std
lock
aas
xchg
jp
push
pop
clc
aam
mov
add
sahf
gs
leave
pushf
shrl
dec
xor
jne
popf
leave
push
stc
mov
std
sub
testl
cmp
dec
js
mov
imul
sti
pop
adc
and
pop
imul
add
jecxz
mov
mov
lea
hlt
ret
dec
scas
lahf
rcl
loope
decl
fdivs
add
icebp
cmp
pop
cmp
stos
outsl
jl
jnp
jg
cmp
loop
aad
add
xchg
int
outsl
adc
sbb
add
cmp
daa
rorb
mov
xor
and
mov
and
adc
enter
adc
fldt
lcallw
mov
mov
mov
jbe
aas
pop
jno
inc
pop
bnd
lcall
rol
into
insb
mov
loop
outsl
xchg
and
daa
ret
xchg
mov
loop
push
push
mov
jg
icebp
xchg
cld
and
mov
push
std
push
xchg
xchg
mov
jecxz
sbb
add
mov
ret
faddl
pop
cmp
or
movl
sub
and
xchg
mov
mov
nop
dec
pop
sbbl
pop
add
and
andl
add
or
fldl
xchg
dec
icebp
loope
jbe
mov
add
pop
sub
dec
inc
xorb
je
ret
aad
lods
and
jp
lods
jne
pop
xchg
xchg
jecxz
stos
mov
rclb
addr16
outsb
and
add
mov
jns
and
cwtl
fs
jo
mov
pop
pop
inc
add
xchg
in
scas
mov
xchg
lcall
xchg
push
lock
and
cs
sbb
jl
lcall
stos
stc
xor
in
mov
mov
jne
push
mov
in
repz
add
insb
outsl
pop
jns
je
in
inc
jmp
lret
xchg
clc
clc
fldl
jg
fcmovne
loop
pop
test
jmp
sbb
icebp
xor
cmp
mov
push
call
test
xor
pop
rcrl
xor
adc
inc
insb
push
ret
or
and
push
gs
cmpsl
movsl
mov
adc
gs
lods
pusha
pusha
and
inc
nop
fwait
imul
add
popf
or
push
add
xorps
adc
movsl
inc
mov
mov
jecxz
push
int3
shlb
out
and
ss
leave
popa
fscale
mov
jne
sbb
push
and
cltd
in
mov
std
push
xchg
jle
repz
sahf
test
into
and
out
dec
xor
cmp
sahf
inc
into
sub
jns
pop
rcrl
cmp
fcmovb
mov
jg
dec
aas
test
out
repz
jecxz
push
dec
jp
ja
xchg
and
fwait
int3
std
jne
cmp
dec
fstl
inc
and
std
jmp
ss
mov
enter
in
mov
movsb
xchg
stos
sub
les
add
cwtl
outsb
or
push
out
jecxz
out
inc
cli
xor
test
jns
add
adc
fadd
mov
adc
pop
jno
push
lds
push
xchg
sahf
inc
scas
fs
xchg
in
adc
pop
or
mov
fwait
pop
mov
loopne
adc
mov
and
push
in
mov
push
les
jmp
pushf
xchg
push
cld
fstpt
add
sub
xor
call
lahf
popa
ja
imul
push
add
in
cmp
scas
adc
in
push
clc
jl
fmuls
out
sbbb
pop
popf
or
stos
ficoml
cmpsb
out
fisttps
sahf
cmp
xchg
popa
es
add
sub
into
nop
sub
insl
data16
inc
cli
inc
clc
xchg
inc
mov
cmpsb
repnz
in
push
adc
jmp
jno
mov
lods
mov
or
mov
dec
add
mov
mov
fsubr
test
or
lcall
imul
or
repnz
adc
jge
sbb
mov
movsb
scas
adc
pushf
sub
addl
jbe
mov
leave
ss
xor
push
dec
push
sub
mov
sub
cmp
scas
cmc
jae
xor
into
push
jae
stos
leave
daa
leave
fimuls
xchg
mov
fadds
cmp
mov
xor
cli
js
test
dec
shrl
fisubrs
sbb
fwait
lds
cltd
jl
scas
add
lret
adcl
inc
cmp
das
cmpsl
adc
push
cmp
mov
cwtl
shll
adc
jns
jp
jbe
cmc
sub
xorl
cmpsb
les
pop
xchg
popa
xchg
adc
dec
aam
ljmp
out
cs
push
jno
dec
xchg
mov
push
or
inc
in
push
push
dec
fucomp
cmpsl
dec
call
adc
lock
jge
lcall
data16
jp
sub
lods
lock
adc
pop
lea
in
jns
out
fwait
adc
xchg
lock
ds
fsin
in
cs
shll
movsb
ss
sbb
call
inc
jp
pop
arpl
lcall
sbb
pop
and
stc
mov
mov
mov
scas
fdivs
scas
sbb
jmp
ja
pushf
pop
jno
push
cmp
pusha
xor
fldcw
jno
ret
adc
stos
cmpsl
dec
icebp
sub
pushf
je
bound
mov
xchg
inc
in
jg
xchg
adc
clc
jno
sub
out
or
pop
or
mov
cmc
ja
sbb
lea
add
outsb
aam
inc
lock
and
cmpsb
xchg
pop
fidivs
fidivrs
sub
std
mov
and
dec
ljmp
add
and
arpl
les
sbb
xor
lret
mov
mov
dec
xor
cmpsl
pop
add
adc
lods
ficompl
lods
sub
movsb
sbb
bound
dec
push
cmc
mov
jbe
imul
outsb
pusha
ja
rcrl
xchg
pop
pop
mov
loope
scas
mov
dec
test
lret
jne
stos
scas
orl
push
jne
fisubs
and
stc
mov
out
fcomps
sub
jmp
or
push
pushf
rorb
cmpsb
adc
dec
dec
xchg
mov
cli
cmp
movsl
cmpsl
das
mov
popa
repz
cwtl
mov
and
dec
call
xchg
and
ret
mov
dec
push
aam
cmpsb
clc
pop
popf
iret
fldcw
xor
pop
xor
inc
lods
jo
dec
jge
fdivr
sahf
cmpsl
out
add
mov
adc
daa
fisubrl
sbbl
test
xchg
mov
loop
hlt
adc
lods
or
adc
cltd
dec
push
inc
or
mov
xor
fmuls
mov
xor
mov
add
out
leave
rclb
mov
ret
fcoml
mov
push
test
xchg
push
add
adc
and
mov
ret
dec
pop
jmp
adc
sbb
push
call
imul
sub
or
jb
rcr
mov
cwtl
mov
and
or
add
mov
push
and
cli
sub
sahf
movsl
mov
arpl
xor
loope
lret
add
lret
aas
movsb
mov
in
pop
cld
ljmp
pop
mov
cmpsl
jmp
mov
add
jno
dec
lret
test
jne
rclb
jge
cmc
and
clc
pop
inc
inc
add
xchg
test
cmpb
lds
add
mov
or
jb
in
and
outsl
stc
xor
sarb
dec
push
cmp
shrb
aas
mov
stos
loope
dec
pushl
xchg
sbb
or
sub
add
mov
sbbl
imul
mov
mov
pop
jg
ret
test
cmp
cld
jg
outsb
inc
adc
repnz
pop
imul
add
test
jns
sbb
xor
ret
or
adc
sub
pusha
cmp
jnp
in
test
stos
lea
inc
jle
sbb
mov
fsubl
repz
shrl
stc
add
push
mov
popl
mov
push
add
inc
outsl
mov
adcb
pop
hlt
pop
and
into
popa
mov
xor
dec
adc
or
xchg
shrb
pop
icebp
pop
inc
push
mov
and
data16
pop
jmp
jo
push
fwait
push
stos
sub
mov
xor
fiaddl
and
dec
stos
testl
data16
push
dec
int
dec
ret
dec
and
mov
add
pop
aas
aaa
mov
lods
fistl
xchg
dec
addr16
imul
or
bnd
into
xor
nop
leave
iret
jno
and
inc
loope
outsb
int
inc
addr16
mov
nop
mov
mov
push
imulb
mov
addr16
jg
mov
xchg
pop
pop
xlat
xlat
push
rolb
dec
push
pop
cmp
in
lahf
cmp
jnp
or
insb
push
into
sub
cwtl
mov
push
pop
xchg
in
sbb
rcrb
inc
mov
mov
push
data16
outsb
mov
fstpt
adc
sub
std
cld
jg
call
xchg
out
bound
adc
add
cmp
jge
inc
dec
ja
cmp
pop
cmc
xor
mov
call
sub
or
jle
mov
cwtl
xchg
aas
shll
inc
loope
fdivrl
jne
scas
aaa
cs
jbe
enter
pusha
or
and
scas
repz
mull
xchg
xchg
shr
test
insl
sub
xor
xchg
fidivl
adc
jge
gs
movsl
ljmp
cmp
js
pop
sub
loopne
popf
popa
shll
inc
scas
ljmp
jo
cmp
dec
into
dec
mov
and
sub
into
or
out
test
das
mulb
jmp
scas
out
lods
dec
testb
jg
movsl
jae
fdivrl
rcl
bound
insl
ret
mov
fucomi
in
test
cld
and
aad
gs
repnz
mov
sarb
jae
pop
xchg
daa
sub
aas
scas
adc
in
xor
xor
fwait
imul
into
mov
inc
cli
insl
pop
pop
pop
push
rcrl
les
fdivrl
mov
jnp
icebp
out
imul
sub
in
fcomps
add
cmp
xlat
mov
push
xchg
adc
push
cmpsb
popf
fdiv
loop
aad
cld
push
inc
push
mov
fisubrs
arpl
int3
mov
push
mov
aad
rcrb
cmpb
into
fwait
sbb
repnz
lea
mov
jbe
sub
insb
gs
jecxz
and
xor
push
fstpt
adc
int3
hlt
ljmp
cmpsl
fcomps
faddl
leave
sub
xor
cmp
xor
popa
test
inc
cld
subb
fldenv
pop
push
mov
dec
aas
data16
mov
notb
jle
mov
jo
mov
inc
mov
fst
les
push
js
inc
xchg
nop
and
jo
aaa
jno
faddl
xor
loopne
dec
mov
mov
outsl
mov
test
adc
cmp
lods
sbb
cmpsl
inc
and
mov
or
mov
les
jb
cmp
insb
mov
pop
fwait
xchg
cmp
mov
imul
cli
mov
int
xlat
sbb
stc
sub
sarl
push
lahf
fucomip
lret
leave
popf
pop
fisttpl
sbb
repz
cli
or
addr16
fsubr
xlat
sub
iret
mov
inc
out
push
push
test
mov
dec
aam
push
add
adc
icebp
cmpl
cld
sbb
aam
scas
push
add
push
jl
in
ss
mov
insl
inc
mov
or
and
lods
loop
aas
jnp
sub
cmp
adc
shll
xor
or
and
testl
frstor
das
or
repnz
mov
sti
or
xchg
and
sahf
ret
je
je
jb
enter
mov
cmpsl
sbb
pop
test
aad
pop
jns
pop
cltd
sub
fistpll
mov
pop
lea
addr16
adc
mov
and
shl
mov
inc
pop
jno
fwait
pushl
jl
clc
pop
stos
adc
push
pop
push
cmp
insb
push
adc
or
mov
sbb
repz
adc
filds
jmp
push
mov
adcb
xchg
std
in
xchg
orb
subb
pop
ret
cmp
loope
cmp
inc
mov
mov
scas
rorb
loope
push
jno
mov
nop
mov
roll
stos
es
lock
and
xchg
cmp
outsb
in
popa
shl
test
int
pop
mov
inc
psubsb
cltd
push
add
sbb
pop
data16
dec
xchg
fcomi
aad
int
int3
in
leave
sti
gs
lahf
jl
push
sub
pusha
jne
and
pushf
adc
and
lea
mov
inc
ljmp
pop
xor
sub
movsl
sub
popf
loopne
fistpl
jo
dec
fcoml
xchg
nop
sbb
repz
insl
in
dec
add
pop
jmp
sbb
xor
loope
lock
outsb
mov
shrb
stos
xchg
in
inc
enter
push
shll
inc
pop
repz
mov
mov
adc
mov
das
mov
or
ds
mov
test
sbb
xchg
xor
pop
out
add
lcall
inc
xor
sbb
inc
pop
xlat
arpl
pop
fwait
lock
mov
mov
adc
mov
ret
aas
shrl
faddp
pop
jnp
ds
dec
std
sahf
repz
subb
or
jb
cmpsb
loopne
popf
iret
xchg
xchg
add
insl
cmpsb
movsl
dec
and
popa
fsubrl
mov
lds
scas
enter
xchg
inc
add
cmc
int
adc
or
loope
xor
and
sbbb
xor
and
push
ret
sub
data16
iret
pushf
les
loopne
pop
mov
cmp
ret
movsb
mov
rcrb
mov
add
pop
push
popf
shrl
out
iret
cmp
sbb
xchg
je
or
pop
push
xlat
in
or
sbb
xchg
rol
pop
popf
sub
sub
mov
add
dec
cmp
pop
stos
jmp
pop
scas
out
rorb
sub
imul
add
inc
lahf
cmc
xchg
enter
add
es
das
rcrl
gs
test
inc
out
inc
fsubrl
shll
dec
repz
xchg
ret
dec
or
stc
pop
mov
popf
or
enter
xchg
inc
stos
mov
push
int
xor
scas
in
add
mov
mov
test
dec
push
icebp
test
xchg
jge
orl
sbb
push
aam
mov
or
js
jne
shll
jp
orl
or
in
test
arpl
in
int
xorb
sbb
jge
jecxz
out
push
in
in
lods
mov
sbb
popf
int
das
movsl
jmp
pop
adc
and
dec
or
dec
jge
in
inc
test
sub
pop
fdivrl
imul
sub
idiv
xchg
jle
adc
fidivrl
lret
pop
push
jnp
clc
push
sti
xlat
mov
mov
jl
fildl
idivb
jno
cmpb
shr
cld
ljmp
cmp
mov
push
and
inc
sub
mov
pop
jle
cmpl
idivb
stos
mov
jno
ret
fs
pop
insb
dec
movsl
data16
cmp
jne
mov
aam
ss
ret
mov
fsubrs
cmp
jp
jo
jo
sub
xlat
sahf
loope
stos
pop
andb
mov
and
lcall
push
jb
ja
sbbb
dec
outsb
dec
sub
adc
pusha
inc
popa
lods
lods
mov
sahf
cltd
lret
fistpll
lret
sbb
or
push
sub
loop
add
cmp
rol
mov
mov
cli
popf
mov
cld
and
cmpsl
das
lods
cmp
mov
pop
cmpsb
bound
mov
ret
sub
cmpsl
and
cmp
loop
nop
mov
xor
and
push
and
call
shll
inc
push
fdivrs
push
bnd
and
out
orb
inc
fidivl
aas
loop
xor
jmp
jae
pop
test
mov
push
push
imul
lcall
sarb
idivb
cltd
xchg
pop
stc
loope
mov
dec
or
xlat
into
xor
lock
pop
subl
or
cwtl
xor
cs
mov
or
in
push
iret
push
adc
cmpb
mov
nop
mov
adc
dec
nop
in
cli
add
mov
jle
xor
std
xor
xor
xchg
arpl
cli
popf
add
imul
pop
cmpsl
xchg
movlps
aad
cwtl
mov
push
and
test
pop
inc
xor
js
push
pop
stc
dec
lret
and
or
fsts
addr16
jae,pn
dec
cmpsb
aas
pushf
iret
enter
mov
inc
or
adc
movsl
idivb
mov
sbb
dec
int3
jns
add
mov
outsl
mov
mov
pop
dec
rorl
dec
arpl
add
hlt
jp
dec
outsl
adc
es
sti
pop
adc
pop
call
xchg
jg
pop
les
pop
divl
data16
cli
cmpsb
testb
mov
std
push
cs
rclb
pop
orb
mov
int
sbb
test
push
and
or
push
xor
outsb
dec
loopne
inc
test
cmp
inc
inc
dec
iret
dec
dec
push
lods
pop
push
jmp
test
mov
xchg
mov
adc
xor
xchg
mov
mov
jns
push
sub
orb
aas
and
push
adc
jno
int3
or
mov
pushf
xlat
cmp
and
ljmp
jge
jne
xchg
xchg
sub
xchg
cs
mulb
imul
inc
xchg
idivb
clc
fcoms
sub
pop
mov
test
mov
jb
sbb
adc
dec
inc
xchg
sub
call
lods
xor
ds
xor
outsl
xor
je
inc
xchg
pop
and
pop
jmp
testb
adc
int3
sub
mov
add
add
push
xsaveopt
add
rorb
dec
mov
mov
imul
add
mov
jecxz
ds
mov
rclb
xchg
shrl
and
stc
sbb
adc
clc
mov
or
xor
xorb
jp
sub
int3
jg
cmp
cmp
sbb
pop
cmpl
cltd
push
lahf
mov
jl
icebp
and
cmp
xchg
mov
aam
adc
test
push
js
mov
aad
repnz
push
scas
cmc
movsb
jle
stos
iret
sbb
subl
dec
cmp
sbb
cmc
xlat
ficoml
pusha
mov
xchg
sub
push
call
adc
addb
fs
push
pop
das
in
insb
add
push
cld
ret
nop
shll
xchg
or
xchg
mov
dec
add
lret
push
loope
imul
adc
push
push
inc
popa
cmp
or
lods
cmc
pushw
mov
pop
jmp
jecxz
mov
push
xor
dec
xor
jp
add
or
add
mov
mov
fistps
mov
dec
aas
lahf
inc
ljmp
or
jecxz
add
dec
pop
test
aas
jl
dec
jp
push
ret
scas
aas
adc
das
jl
inc
dec
scas
pop
inc
aad
test
and
cmp
subl
scas
cltd
or
jo
imul
dec
in
xlat
inc
cmp
inc
jg
ror
call
mov
xor
lock
out
addr16
sti
cli
gs
add
inc
add
mov
or
lock
jg
or
jnp
mov
mov
insl
popa
faddl
inc
lcall
popf
ret
cmp
arpl
testb
jo,pt
xor
and
xchg
lock
hlt
or
xor
xchg
mov
push
push
adc
lahf
pop
cmpsb
jb
out
add
lret
lea
out
out
xor
cmpsl
call
outsb
or
cmc
mov
stc
dec
int
in
je
push
js
push
dec
jnp
cwtl
aam
dec
dec
dec
cmp
lret
adcb
pusha
push
inc
sbb
push
ja
adc
jg
sbb
js
sete
mov
mov
inc
pop
push
jb
push
test
jp
or
pop
lock
and
std
xchg
int3
mov
push
das
sub
pop
pop
fwait
add
mov
pushf
aas
cwtl
or
into
rcrb
jle
outsb
xor
lods
mov
bound
mov
mov
push
insb
push
push
mov
add
out
mov
fimull
mov
lock
pop
push
dec
lret
add
sbb
pop
xchg
xrelease
sub
clc
dec
adc
loope
pop
pop
push
fisttpl
mov
jge
lock
sbb
lret
shl
shrb
mov
ds
pop
fisubl
mov
clc
lea
and
in
adc
xchg
pop
mov
lds
pop
scas
mov
and
pop
inc
pop
jnp
pusha
sbb
and
jne
sbb
leave
pop
sub
in
push
aaa
movsb
jne
sarb
mov
cld
imul
sbb
sti
jg
daa
xor
mov
ret
mov
adc
xchg
xchg
call
adc
sub
jnp
push
fisttpll
pop
push
sub
adc
sbb
rorl
testl
cmp
push
push
shrl
adc
adc
and
fcmovnu
cmpsl
aas
fdivrp
dec
daa
enter
shlb
ds
mov
and
push
xor
add
das
cld
pop
cmp
jne
mov
sbb
inc
aaa
int
ja
cwtl
aad
mov
xchg
loop
movsl
lods
sub
jg
scas
cmp
pop
mov
dec
shr
inc
outsl
es
js
dec
cmc
cmp
push
mov
fimull
subb
push
xorb
jne
sub
or
push
hlt
rclb
and
ret
data16
adc
std
cmpsb
cmp
inc
mov
adc
sarb
out
push
xchg
sub
int3
dec
pop
pusha
sub
pop
fisubs
lock
push
pop
push
loop
test
fnstsw
mov
test
je
mov
out
adc
pop
test
lds
mov
inc
mov
mov
int3
sbb
xchg
dec
das
dec
divb
sbb
stc
mov
imul
test
add
cmp
cli
mov
rol
inc
clc
cmpb
ljmp
imul
xchg
je
into
adc
inc
fstpt
out
xor
sbb
or
scas
jl
roll
mov
scas
sub
out
mov
popa
rolb
push
push
insb
push
xor
mov
adcl
sarl
inc
jecxz
mov
aad
in
sbb
les
xchg
jge
test
xchg
xchg
xchg
ret
nop
fsubs
pusha
movsb
mov
sub
lock
fldcw
pushf
daa
sub
nop
fiaddl
push
xor
adc
in
aas
popf
lret
lcall
or
adcl
call
cmc
mov
loopne
mov
popf
xchg
in
ds
push
roll
fsubrs
stc
mov
cmp
je
mov
test
pop
repnz
ret
daa
xor
pop
or
sub
cwtl
mov
addr16
and
cmp
or
and
lss
fdivr
sub
std
bound
cli
cmc
in
je
rol
fisubs
push
bt
inc
mov
repz
lds
and
sbb
adc
cmp
cmp
xor
jns
mov
fsubp
cmc
add
inc
out
add
sbb
divb
adcb
ljmp
dec
mov
stos
popa
inc
out
cmp
pop
lea
sub
clc
aam
subl
lret
and
ret
xchg
jbe
lret
add
gs
jmp
daa
push
outsb
inc
sub
idivl
pop
or
push
call
dec
xchg
mov
enter
jle
jnp
div
cmp
push
add
inc
push
call
inc
xor
lcall
pop
insb
mov
fdivs
push
neg
mov
push
pop
into
pop
push
dec
mov
aam
lret
mov
gs
push
push
scas
fsubrl
outsb
shrb
mov
ds
and
leave
add
push
repz
aaa
int3
les
shrl
inc
test
addr16
fnsave
add
mov
loope
mov
add
les
jae
ja
lahf
sub
data16
xchg
adc
jo
cmpsl
mov
push
inc
pop
lahf
imul
jp
pop
xchg
or
stos
in
xchg
pop
rclb
xchg
mov
xchg
xchg
push
xchg
dec
roll
mov
ss
or
icebp
mov
dec
loopne
and
leave
out
mov
pop
mov
icebp
jnp
mov
into
aad
jmp
scas
shlb
cltd
outsl
mov
outsl
sbb
aad
jg
lahf
dec
or
test
mov
push
jo
out
decb
xlat
xchg
adcb
das
les
idivb
lods
aas
std
adc
pushf
pop
in
iret
movsb
sub
cltd
repnz
xchg
fldenv
loop
adc
push
pop
sub
cli
outsb
decb
xchg
xor
adc
xchg
and
sahf
lods
pop
add
insb
adc
daa
lret
jnp
enter
sarl
jp
clc
xor
and
cmpsb
cmpsb
inc
jne
les
fisubrl
mov
rorb
pop
test
clc
xor
mov
rep
pop
xchg
nop
cs
pop
xchg
in
test
ret
jo
dec
fidivl
jno
jb
or
lcall
es
arpl
add
in
fwait
and
aad
or
xlat
lock
or
pop
aaa
adc
pop
ret
cmc
test
aaa
dec
push
cmc
pop
or
cmp
into
xchg
iret
mov
xchg
in
xchg
mov
inc
xchg
mov
dec
sbb
mov
stc
mov
add
mov
mov
dec
sbb
mov
xchg
fcompl
in
out
movb
xchg
xor
gs
jae
test
and
bound
xchg
imul
sub
and
mov
test
adcb
and
sbb
fldl
sbb
ss
int3
mov
and
dec
cmpsl
sbb
dec
jmp
mov
cmp
and
sub
in
pop
mov
repz
ret
out
fdiv
cs
cmc
dec
ljmp
dec
xor
out
sar
insl
sub
push
jo
jns
dec
push
lret
jae
outsl
dec
lret
push
aad
pop
xor
jmp
cmc
or
test
mov
xor
sub
mov
pop
inc
xor
push
aaa
mov
or
sbb
lret
mov
lret
mov
pop
mov
loop
arpl
sub
sbb
call
or
shrl
loop
dec
mov
and
lret
add
arpl
ds
xor
icebp
enter
pop
pop
je
adc
loope
push
push
and
test
cmc
addr16
mov
popf
cmp
mov
pushf
test
sbb
dec
push
into
mov
mov
push
aad
out
cltd
add
add
or
clc
inc
movsb
and
sbb
sarl
mov
cwtl
mov
pop
ss
js
out
jb
xor
in
fldt
mulb
and
sub
ds
and
das
cltd
cmp
push
cmc
sbb
push
sub
dec
jne
push
jle
mov
or
xor
inc
dec
insb
pushf
je
jecxz
sarl
push
inc
xchg
shrb
or
cmp
insb
ret
aaa
bound
jg
cmp
sub
jp
sub
push
sub
add
seta
scas
jne
sahf
sbb
mov
fdivl
fldt
cmp
push
jo
xlat
clc
popa
adc
xchg
js
movsb
xchg
inc
addb
mov
xchg
iret
xchg
jae
mov
aam
mov
jbe
dec
add
jl
cmpl
fsubrs
fsubrs
repz
jle
pop
mov
mov
inc
mov
fsts
into
rorl
mov
mov
or
inc
cltd
clc
dec
push
popa
push
add
mov
push
push
ficompl
pop
push
cmp
push
xor
test
dec
movsl
ja
push
push
inc
ljmp
inc
push
xor
mov
sbb
fiaddl
movsl
mov
mov
fimull
das
add
adc
push
jge
dec
sub
dec
mov
push
jg
lds
bound
popf
push
sub
into
pop
sbb
call
aas
cs
mov
cli
sarb
pop
out
adc
lahf
xchg
les
inc
les
cmpl
sarb
int
adc
or
int3
adc
add
push
loopne
nop
fnop
push
jo
dec
lahf
push
mov
lds
mov
repz
sub
sbb
jno
mov
push
mov
je
clc
xor
sahf
pop
or
sub
movsb
jno
push
jno
mov
int3
icebp
gs
sbb
and
mov
stos
call
add
shr
add
or
adc
adc
stos
jge
adc
popf
or
mov
test
shll
fs
inc
inc
or
fs
movsb
loop
fs
cs
lcall
loope
mov
std
icebp
pop
dec
inc
dec
je
test
adc
testl
inc
add
iret
call
fs
mov
lcall
cltd
and
cmpb
dec
adc
test
inc
and
push
scas
add
lea
dec
dec
fistpll
sbb
insb
pushf
pop
inc
sbb
mov
ror
add
inc
mov
push
repz
xchg
scas
jo
mov
cs
xlat
scas
test
les
lret
inc
jae
in
lea
inc
or
push
mov
and
sub
mov
push
daa
jb
push
into
insb
pop
rorb
lds
cmp
adc
xchg
pop
mov
in
mov
rorl
jl
lret
bound
rcrb
jle
ficompl
ret
xor
jmp
cmp
inc
lret
outsb
insl
loopne
out
addr16
or
inc
pop
sub
mov
fnstenv
leave
jns
loop
movsl
inc
add
lock
arpl
flds
pop
mov
inc
in
stos
icebp
adc
xchg
loop
xorb
push
mov
lds
xchg
data16
out
inc
pop
cld
cmp
pop
inc
pop
ret
mov
xor
push
addr16
mov
loope
lcall
ljmp
xlat
mov
or
dec
outsl
pop
repz
stc
ret
mov
mov
addl
xchg
enter
jne
addr16
pop
std
jecxz
xor
push
push
mov
xchg
push
aam
popf
xor
and
inc
std
pop
pop
mov
cwtl
les
sbb
loope
lods
hlt
and
mov
cmc
mov
loopne
in
cltd
fs
jp
or
popa
add
pop
fildll
jg
push
mov
dec
sbb
clc
hlt
insb
and
inc
ja
xchg
repz
xchg
mov
and
jne
mov
jmp
les
aad
mov
adc
sbb
pop
in
xchg
out
mov
in
xchg
dec
gs
xchg
mov
stos
jae
mov
sub
pop
aam
adc
in
ljmp
xor
xor
adc
pop
out
dec
push
pop
inc
pop
aaa
ds
neg
dec
xor
mov
in
xchg
sbb
insb
xor
or
mov
mov
dec
mov
enter
ss
ja
fwait
mov
push
pop
dec
les
xchg
lcall
sub
out
cwtl
decl
movsl
jb
mov
movsb
cmc
cli
pop
mov
in
dec
xchg
xchg
mov
and
xchg
outsb
push
mov
ds
dec
inc
or
jo
out
pop
pushf
test
jmp
sahf
out
mov
inc
pop
mov
xor
mov
imul
push
movsl
mov
jb
shll
sbb
cmp
lea
mov
mov
dec
dec
adc
xchg
xor
push
sbb
repnz
push
enter
jnp
fisubl
pop
fcmovnb
cmp
sub
ja
dec
jbe
push
aad
outsb
pop
pop
dec
add
pop
or
lret
jne
sbb
clc
pushf
cmpsb
pop
mov
mov
shlb
sub
jp
jmp
pop
into
xlat
dec
inc
scas
data16
and
xor
cmp
adc
fisubrl
test
loope
sbb
roll
out
push
pop
mov
mov
bswap
dec
push
out
jp
pop
and
imul
adc
jmp
mov
cltd
out
mov
ds
jecxz
cmp
cmpsb
or
push
push
jg
xchg
shlb
add
push
addr16
adc
push
cs
or
popa
and
cs
sbb
jl
pushl
xor
add
sbb
into
popl
push
mov
and
and
fsubrs
ficompl
push
sbb
inc
hlt
pusha
mov
fbstp
inc
dec
test
aad
fs
icebp
ror
inc
int
pop
mov
out
fcom
cmp
out
or
dec
js
add
cmp
inc
inc
sub
into
jbe
jns
add
mov
or
pop
je,pt
testl
dec
cmp
push
or
mov
sbb
pop
sbbb
dec
adc
jp
mov
add
push
inc
mov
bound
mov
pusha
imul
push
adc
sub
test
mov
push
add
rcll
pop
jne
fcmovne
out
sbb
pop
cvtdq2ps
rcrb
cwtl
mov
inc
or
test
fwait
sbbb
inc
in
les
sbb
dec
inc
mov
or
repz
insb
mov
sbb
add
mov
push
stos
rcl
pop
decl
and
pop
xor
outsl
addr16
dec
sar
push
adc
dec
pop
imul
dec
imul
shl
lret
sbb
subl
push
loopne
fwait
sarl
in
or
adc
push
mov
pop
insl
notb
inc
je
add
mov
mov
stos
popa
add
ja
inc
sahf
inc
push
repz
pop
push
out
in
dec
jmp
cmc
iret
adc
daa
pop
ret
scas
scas
pop
loope
test
insb
in
test
mov
insl
iret
mov
sbb
adc
jno
sbb
leave
jecxz
test
sbb
xor
sub
sar
dec
inc
push
xchg
xchg
cmp
mov
je
sub
or
faddp
sbb
inc
push
mov
adc
loopne
adc
pop
into
pop
mov
pushf
mov
push
out
inc
adc
cmp
mov
bound
popf
sbb
adc
sub
or
cwtl
cmc
jns
out
and
xchg
rorl
xchg
jo
fcomip
pop
lods
xor
aam
out
sub
ljmp
xor
jmp
insb
xchg
or
push
push
sbb
test
pusha
sub
jno
and
jecxz
pop
cmpsl
mov
pop
lret
les
lret
mov
jmp
inc
sarl
sbb
adc
pop
aaa
andw
and
fldl
vcvtsd2si
sbb
pusha
cmp
jae
xor
mov
and
and
xlat
ljmp
jp
push
mov
rcl
xchg
in
cmp
push
call
test
lds
loop
adc
fsubrs
cmc
dec
adcl
filds
adc
xor
jbe
and
mov
dec
push
pusha
arpl
fisttpl
sti
or
sub
add
js
push
out
lods
repnz
dec
xchg
mov
std
fdivl
jmp
lret
cmp
sub
call
fwait
ss
stos
xchg
scas
sbb
ret
jecxz
or
jne
daa
xchg
inc
and
xchg
ljmp
push
inc
in
mov
stos
movsl
push
add
sbb
leave
pop
or
stos
jle
fiadds
dec
xchg
push
jne
gs
or
xchg
jo
addr16
pop
cmp
cmp
inc
int
sbb
les
xchg
daa
pop
add
test
lea
call
push
sahf
movsl
ss
mov
mov
pushf
in
push
lods
clc
js
cmp
out
dec
fwait
out
test
fdiv
xchg
mov
push
ljmp
test
adc
and
dec
adc
add
int3
jl
xor
mov
sti
push
popa
out
mov
or
xchg
cli
les
sub
adc
stc
orl
arpl
xor
push
sbb
pop
lds
loop
int3
adc
cmpb
xchg
sar
pop
sbb
scas
adc
mov
lahf
inc
out
push
mov
push
popa
jns
loop
jmp
cmp
ret
int
test
out
mov
lds
clc
sbb
sbbl
sub
mov
repz
outsl
sub
iret
sarl
fistpl
push
outsb
mov
cmp
outsl
mov
nop
mov
mov
frstor
jnp
cs
jmp
in
adc
xor
fiadds
mov
sub
pop
add
cmp
scas
mov
icebp
dec
cmpb
xchg
pop
inc
loopne
jns
jecxz
jb
xchg
adc
mov
pop
push
push
jge
ljmp
lods
sar
shll
cmpb
dec
das
inc
cmp
sbb
jl
push
xchg
mov
lcall
cltd
sbb
and
movsb
cwtl
fisubl
pop
mov
stos
cmp
into
mov
pop
fsubr
mov
adc
push
mov
loop
sbb
mov
cmp
enter
pusha
mov
inc
jno
cwtl
and
fcoml
pop
mov
vpcmpgtb
mov
mov
cli
dec
shl
dec
int
pop
in
mov
sarl
pop
out
ds
je
aaa
cltd
xorb
icebp
insl
in
andl
test
pop
sub
push
add
push
movsl
sub
adc
cmp
mov
dec
pop
fmuls
insb
xor
call
gs
icebp
insl
outsl
addr16
test
ja
jg
mov
cltd
or
daa
push
out
push
xchg
icebp
test
dec
sub
stc
mov
std
outsb
insb
sub
mov
xchg
and
out
in
jno
push
cwtl
jl
fadd
inc
repz
adc
push
inc
push
mov
adcl
pop
inc
lahf
pop
xor
gs
out
rcr
jge
xchg
push
pop
sub
hlt
imulb
push
add
sbb
pop
adc
mov
ret
pop
push
dec
push
ljmp
mov
and
leave
push
sub
insb
xchg
mov
mov
cmp
repz
fwait
sarl
xor
cmp
popf
push
cltd
pop
pop
ret
pop
dec
movsb
jns
and
lea
aad
push
stc
jo
imul
add
setp
dec
sub
sub
dec
mov
pop
icebp
and
in
push
shrb
roll
mov
or
inc
movsl
jne
es
clc
mov
dec
sarb
fnstcw
push
sub
mov
sub
into
insl
jp
mov
roll
adc
imul
mov
shrl
int3
dec
or
sarb
mov
leave
mov
cmp
xchg
push
call
js
dec
popa
ss
flds
xchg
loope
lds
clc
or
jle
cld
fnstenv
jle
xchg
pop
xor
add
jp
jmp
mov
xchg
stos
icebp
fildl
jle
test
mov
cmp
popf
scas
xchg
das
cltd
setns
mov
and
dec
aam
sbb
stos
pop
stos
sub
pop
mov
cmpsl
sbb
int3
pop
mov
mov
data16
mov
pop
xchg
mov
lods
icebp
sarb
cmp
add
js
mov
dec
in
jl
sub
sub
push
ret
push
fiaddl
cmp
xchg
sub
mov
lock
js
push
loopne
incl
pop
pop
std
ret
pop
lahf
ficoml
push
dec
daa
inc
dec
addr16
pusha
sti
pop
ljmp
dec
xchg
hlt
imul
dec
jbe
pop
push
jbe
jo
lret
mov
pushf
dec
xchg
mov
mov
fs
mov
cwtl
cs
cmp
jg
jl
jmp
out
cs
cmp
lret
push
jge
scas
in
dec
mov
mov
clc
add
js
xchg
sbbb
roll
cmpsb
adc
out
dec
mov
push
push
or
mov
xor
pop
ja
cmp
movups
cmpsl
cli
xchg
test
mov
es
mov
adc
add
sbb
push
mov
fs
inc
out
outsb
cmc
mov
push
mov
stos
xor
mov
adc
and
xchg
sub
stos
pop
adc
lcall
and
xchg
dec
inc
xor
jcxz
fldcw
daa
sbb
shr
cmp
cwtl
adc
pusha
jl
inc
ret
stos
fcomi
push
test
pop
sbb
or
fdiv
std
enter
or
imul
push
fnsave
mov
pop
cmp
test
jg
aam
fidivs
dec
push
jge
js
cli
lock
ficoml
aad
cmp
adc
dec
mov
subb
test
scas
mov
loop
push
je
sbb
xor
push
popa
push
and
pop
lahf
out
jp
dec
push
fmul
nop
xchg
jne
lock
sbbl
loopne
aam
dec
pop
mov
or
nop
hlt
out
lret
leave
repz
cmc
or
rorl
cmp
fidivrs
fidivl
push
xchg
jo
pop
mov
push
movb
sbb
dec
xor
sbb
movsb
daa
inc
inc
inc
add
jno
sbb
lds
stos
pop
and
fs
mov
push
inc
sub
jbe
popa
call
cmp
push
clc
add
in
shr
bnd
scas
hlt
add
cmpsl
and
add
loopne
test
sbb
jmp
jns
imull
or
out
xchg
lods
pop
inc
jmp
mov
out
push
xchg
or
ds
ret
push
adc
xchg
lods
lods
sbb
fmulp
and
aaa
push
sub
mov
pop
test
jp
es
loopne
push
notl
les
mov
pop
mov
ja
daa
mov
data16
test
push
xchg
push
mov
scas
jecxz
test
jge
fnstsw
dec
and
sbb
mov
fldl2e
stos
shl
test
loopne
ret
and
fists
mov
mov
mov
and
rcrb
imul
sbb
push
mov
push
adc
inc
les
enter
sub
push
stos
add
push
mov
sbb
mov
mov
cwtl
inc
rorb
test
ret
ret
mov
shr
pop
shrb
inc
mov
mov
sbb
outsl
aad
movsb
jge
cwtl
icebp
jns
js
and
push
leave
push
int3
inc
sub
pushf
adc
jp
ror
loope
mov
aaa
rcrl
pop
aaa
add
mov
ja
push
add
out
stc
and
cmp
pop
aam
movsb
or
mov
sbb
jo
in
imul
or
adc
cld
cmp
mov
decl
mov
mov
add
testl
std
xor
decl
iret
jge
ret
cmpsl
lret
jae
sbb
ficoms
mov
ret
add
and
sbbb
mov
mov
mov
dec
mov
cmpsl
inc
cmpsl
ficompl
cld
cmpsl
imul
add
pop
mov
or
mov
sbb
inc
imul
push
inc
fs
inc
vpminub
stos
adc
repz
fucomp
es
push
sbb
dec
ljmp
adc
jne
ss
fs
inc
lock
push
push
xor
adc
jno
or
mov
adc
int3
mov
and
cmp
mov
mov
rclb
jb
icebp
cmp
ss
shrl
xchg
jge
pusha
pop
int
outsb
es
jmp
inc
mov
divb
mov
pop
jo
aam
dec
or
inc
jbe
xchg
negb
mov
ret
enter
inc
adc
pop
icebp
jno
stos
daa
rcrl
adc
test
xor
mov
pushf
mov
call
test
movsb
cld
push
inc
jae
iret
pop
insl
cltd
sahf
inc
mov
int3
in
jmp
xchg
pop
xchg
pop
cmp
fsubrs
jmp
imul
mov
imul
or
pop
clc
cmp
cltd
stos
xchg
int
xchg
adc
flds
arpl
jb
scas
dec
mov
mov
xchg
ret
cmp
cli
test
fcompl
in
insl
data16
dec
sbb
lret
loop
cmp
arpl
xchg
jae
lock
sub
adc
adc
xchg
aas
adc
mov
mov
adc
sbb
sbb
bound
out
filds
sub
xchg
mov
xor
push
mov
call
and
ja
mov
in
cltd
rolb
insb
adc
pop
cld
mov
push
xor
repnz
adc
add
pop
cld
dec
sti
adc
xchg
enter
mov
pop
pop
push
mov
add
dec
fisttpl
ds
push
add
cmpsl
out
and
dec
into
mov
stc
lock
das
mov
test
cmovle
jg
mov
arpl
mov
jne
jb
inc
test
adcb
sbbl
cli
pop
dec
pop
or
insl
inc
fwait
mov
inc
add
dec
fnstenv
stos
jle
movsl
mov
iret
inc
stos
jno,pn
inc
sub
sbb
fdivrs
mov
mov
stos
stc
xchg
xor
xchg
cmp
movsb
retw
pop
dec
in
dec
add
bound
xchg
test
sub
push
add
cmp
mov
pop
ss
cmc
jecxz
dec
ret
sub
ret
sub
cltd
dec
inc
sub
loope
sub
xlat
mov
insl
xchg
cmp
roll
and
pop
outsl
push
fadds
test
mov
pop
movsl
jmp
and
aad
push
out
jge
movsb
jno
xlat
adc
xchg
xchg
sub
pop
movsl
lods
fdivrs
jo
stos
sub
sbb
sbb
inc
mov
sti
cli
or
es
push
and
and
sbb
sub
push
call
in
inc
sti
ljmp
popa
ret
adc
mov
test
aaa
leave
adc
icebp
cmp
fisttpl
in
sub
movsb
fadds
jle
int3
lcall
cmpsb
xchg
lret
push
pop
mov
orb
mov
jb
test
fcomps
inc
or
and
pop
inc
and
fwait
test
ds
push
loopne
push
and
sahf
mov
incl
jmp
mov
lods
push
dec
cld
cmpsb
cmp
dec
cltd
enter
push
mov
sbb
out
and
and
add
jmp
aas
lret
dec
movb
sbb
lret
scas
lcall
dec
add
pop
lret
scas
insb
ror
fwait
xor
sbb
les
pop
loopne
pop
push
loope
or
and
jle
dec
sbb
mov
addr16
mov
adc
out
or
xlat
out
shlb
xchg
add
and
das
lahf
push
jb
adc
sub
push
sub
jle
push
xchg
xchg
dec
xlat
lods
repz
xorl
call
adc
dec
xchg
out
cmpsb
stos
jg
xlat
loope
jns
mov
testl
ds
fmull
cmpl
inc
pop
je
pop
jl
shrb
jge
mov
lods
fs
xchg
mov
call
adc
imul
pop
rcll
cmpsb
mov
aam
fs
repz
jge
add
sbb
jg
mov
cmc
es
push
mov
push
mov
data16
mov
push
sti
cmpsb
xchg
xchg
pop
mov
dec
xor
push
inc
hlt
in
fmuls
insl
jo
xorb
and
or
ror
out
jecxz
pop
jbe
popa
jb
xchg
or
mov
loopne
mov
inc
cmp
adc
es
iret
daa
xchg
les
fwait
inc
insb
imull
and
xchg
cs
fistpl
dec
mov
pusha
sarl
imul
divl
cmp
push
xchg
cmpl
jle
pop
xchg
lods
lods
imulb
lods
cmp
sbb
pop
sub
mov
push
out
mov
xchg
dec
into
xor
scas
ffree
cmp
adc
and
ss
jecxz
inc
mov
adc
adc
jb
jl
or
xor
or
sbb
sub
imul
daa
fdiv
jns
out
inc
mov
add
pop
mov
daa
mov
push
imull
loope
mov
mov
cmp
sbb
rorb
rorl
cmpsb
loopne
inc
mov
sbbl
push
je
mov
addr16
sbb
inc
xlat
jp
loopne
fwait
mov
aas
xor
popf
sub
adc
fsub
frstpm(287
adc
lret
cmp
fistpl
cltd
stc
loope
push
ss
lahf
enter
pop
xchg
adc
add
mov
mov
add
rcr
adc
mov
pop
xlat
xor
lret
mov
push
xchg
fwait
aam
push
add
idivl
xor
pop
mov
ljmp
loop
xchg
repz
mov
test
push
dec
cmpsb
xchg
xchg
imul
jmp
sub
push
dec
xor
and
test
jno
sbb
push
inc
imull
out
cld
rcrb
leave
mov
xchg
xor
loop
roll
in
rolb
xor
stos
mov
xchg
ja
std
sub
pushf
ret
inc
int
std
mov
insl
lcall
jmp
stos
mov
mov
add
inc
mov
lret
aam
adc
jne
push
adc
shl
inc
dec
dec
sub
stos
lcall
dec
jmp
xlat
push
push
insl
test
cmpsb
sti
xchg
hlt
pop
dec
into
xor
fs
mov
cmc
dec
out
mov
add
sub
mov
loope
xor
xchg
sub
fimuls
imul
cmpsl
inc
sbb
xchg
aaa
gs
jbe
aaa
jnp
fiadds
shlb
push
xchg
pop
sub
rcll
sub
bound
and
fs
mov
jo
mov
repz
mov
leave
and
jg
rorl
std
jno
mov
dec
ljmp
movsl
jecxz
xor
cmpsb
fimuls
loopne
repnz
arpl
loopne
dec
sbb
insb
imul
push
daa
adc
sbb
mov
test
push
xlat
sbb
outsb
adc
push
xorl
clc
adcb
ret
ud0
call
mov
fwait
cmc
xchg
loopne
jne
add
int
inc
dec
pop
stos
jg
pop
and
cltd
jmp
dec
jo
cld
mov
mov
lock
push
in
addr16
push
pop
enter
pusha
fmul
jge
add
cltd
xor
add
stos
jge
sar
add
mov
xor
xchg
shr
popa
xchg
mov
ds
stos
test
in
call
push
cltd
sub
sahf
add
mov
cmp
sbb
add
push
fcomps
and
ret
das
push
mov
loope
push
jmp
lock
inc
fbstp
lea
xor
dec
cli
out
dec
jae
mov
gs
mov
sti
and
aas
in
out
inc
push
mov
jl
cmpl
es
ljmp
cmp
loopne
sub
pop
push
xor
mov
hlt
pop
mov
loop
mov
jno
lahf
daa
lcall
cmp
jp
sub
mov
push
pop
mov
or
ja
jl
and
add
sbb
mov
lret
mov
pop
jb
xor
int3
jmp
pop
ret
pop
add
adc
pop
lock
bound
xchg
lock
mov
mov
push
adc
out
imulb
sbb
in
cwtl
mov
jnp
mov
mov
stos
inc
jle
aad
xor
pop
mov
mov
test
or
popa
mov
lock
rclb
jns
mov
adc
mov
xor
movb
add
sub
or
fs
mov
or
inc
mov
imul
xor
cmp
ret
or
mov
mov
andb
jno
aaa
push
jo
mov
test
xor
dec
out
fdivrs
adc
mov
scas
ret
test
pop
xor
and
cmp
jecxz
outsl
xchg
cmp
stos
cli
adcb
fldl
in
andb
cwtl
pop
stos
bound
cltd
leave
test
lods
sbb
addr16
lcall
je
lcall
mov
movsb
nop
jbe
mov
fisubrl
push
aam
shl
faddp
mov
cmpsl
int
adc
insl
dec
mov
shlb
pop
push
pop
loopne
fcmove
cmpsw
xchg
ja
add
xchg
hlt
shrl
jle
negb
pop
inc
pop
xlat
pop
dec
mov
xchg
adc
data16
sub
sahf
pop
pushf
negb
inc
lret
pop
lahf
jnp
cmp
mov
and
or
loope
cli
es
data16
cltd
mov
mov
pop
stc
jae
xchg
test
add
aad
push
pop
push
mov
cmp
cli
not
lret
mov
jle
mov
dec
dec
lods
movsl
or
out
mov
mov
xchg
fcom
mov
gs
sub
imul
mov
test
push
fcomip
sahf
ficomps
cmpsb
fimuls
lds
leave
orb
mov
pop
dec
add
nop
lods
loopne
sub
fdivr
stos
cmp
xor
pop
mov
out
cmp
ror
jmp
js
sbb
xor
xchg
or
push
xor
int3
lret
jno
jge
push
pop
mov
mov
int3
dec
ja
add
std
insl
mov
pop
cmp
xor
jmp
jmp
mov
and
sub
jnp
frstor
lds
adc
and
stos
cltd
lods
xchg
fdivs
sbb
fwait
dec
push
push
jno
fists
testl
out
xor
jmp
icebp
sti
xorl
jl
das
lahf
jne
mov
xchg
loopne
dec
nop
jnp
adc
into
fbld
cmp
push
sub
cwtl
xchg
test
mov
mov
aam
in
jge
xor
lods
movl
mov
mov
leave
lods
mov
mov
es
stos
cmpsb
mov
xchg
pop
and
leave
fstp
or
dec
adc
cmp
gs
and
cs
jmp
movsb
adc
cmpsl
sub
rcll
mov
and
or
add
cmp
xor
fisttpl
cwtl
lds
mov
outsl
pusha
inc
mov
mov
jbe
cli
aad
and
and
mov
imul
push
shl
ds
call
xor
cmp
sbb
cmp
sbb
sub
shrb
xlat
gs
pop
and
aam
push
jbe
dec
lods
jecxz
ja
mov
addr16
dec
int3
mov
stos
adc
xchg
mov
sub
xchg
dec
xchg
sbb
pop
push
mov
pop
shl
mov
mov
dec
inc
cld
test
in
pop
lds
cltd
push
in
cmp
push
hlt
mov
dec
daa
xor
pop
xchg
add
sahf
sbb
mov
pop
cld
add
lret
and
and
jnp
xlat
push
lcall
adcb
fdivrs
popa
cmpb
popf
jle
xor
fwait
lret
test
sub
in
imul
movsl
sub
mov
imul
test
sub
jp
mov
cmp
pop
or
sbb
cmc
lock
das
lret
insb
push
out
clc
pop
loop
mov
jle
sub
insl
inc
cmp
push
bound
ds
out
decl
pop
sbb
lea
or
push
aaa
and
jg
sub
add
sub
and
pop
and
cmp
sub
push
je
data16
in
sbb
pop
sub
sub
je
test
cmp
arpl
jns
or
adc
outsl
in
push
call
xchg
dec
jnp
in
shll
mov
into
jl
dec
xchg
adc
ret
xchg
push
cmpsl
in
pop
fbstp
stos
imul
arpl
push
jecxz
xor
and
jl
jl
add
adc
lods
loope
sub
xchg
lods
repnz
test
mov
rcll
or
fisubs
add
aam
lods
loopne
add
xor
mov
sub
or
cmp
jp
imul
mov
fistpl
adc
jp
push
cmp
mov
mov
and
in
inc
out
sbb
cmp
mov
mov
sub
test
and
scas
cmp
jmp
repz
mov
pop
test
jmp
mov
lret
dec
xchg
rcrb
lods
pushf
shl
sbb
and
sub
aas
pop
filds
stc
adc
mov
mov
inc
fsubl
mov
jns,pn
pop
cmpsl
lret
aam
stos
adc
movsl
pop
mov
push
mov
iret
mov
pushf
into
loopne
lock
ss
dec
dec
roll
pop
jmp
ja
mov
nop
inc
js
ret
fisttpll
es
mov
jl
insb
jno
jmp
pop
dec
dec
jo
cmp
into
aad
sub
inc
sbbl
test
sub
sub
clc
sbb
fildll
dec
shlb
or
cli
and
cmc
jne
lcall
addr16
imul
pop
nop
mov
inc
movsb
testl
xor
dec
pop
stos
xor
push
cmp
movsl
pop
push
adc
push
sbb
test
cmp
call
scas
dec
addr16
fdivl
jp
stc
fs
in
sub
repz
push
into
out
mov
sub
inc
push
into
xor
bound
stos
mov
test
iret
data16
cmp
inc
adc
push
sub
fsubrs
sub
mov
in
pop
lret
cli
jp
inc
fcompl
mov
aaa
inc
and
ficomps
push
inc
and
pop
jnp,pn
out
dec
rolb
mov
pop
addr16
mov
std
popf
and
test
mov
cmpsb
push
in
sahf
inc
stc
and
ljmp
sub
adc
jmp
mov
pop
xchg
fisubrs
mov
jb
or
jae
testl
cwtl
orl
aaa
mov
mov
mov
pop
sbb
test
dec
cs
sbb
mov
cmp
leave
jb
pop
pop
lods
inc
jne
cld
sbb
sbb
dec
push
or
test
inc
jmp
stos
mov
adc
and
nop
sbb
mov
outsl
in
subl
mov
lods
sti
jg
jle
js
and
out
cwtl
mov
lahf
dec
pop
jp
sub
movl
cmp
ljmp
mov
mov
push
out
xchg
add
nop
xchg
xlat
fldt
pop
dec
xlat
hlt
movsb
mov
adc
jmp
mov
push
mov
in
das
mov
lods
pop
into
or
pusha
mov
lahf
sub
imul
das
mov
fisttpl
pop
and
leave
fstps
inc
adc
testl
test
shl
and
sub
xchg
outsl
push
sub
cmc
xchg
xor
cli
adc
fisttps
xchg
call
pop
pop
sahf
cmp
jle
adc
mov
movsb
jo
cmp
out
jne
mov
jge
das
in
imull
loopne
push
pop
rep
push
in
aad
jl
js
jae
cmpsl
jl
fbstp
pop
addl
outsb
jp
and
jmp
adc
push
test
xor
or
push
push
mov
dec
xlat
and
rorl
add
es
addb
add
sub
ds
ret
aam
pop
adc
adc
aam
inc
jmp
and
lock
fs
dec
idiv
jne
lock
adc
sbb
jnp
jp
jae
dec
leave
leave
clc
and
sbb
cmp
pop
ds
mov
inc
iret
fwait
mov
rcrb
pop
ret
push
dec
mov
les
mov
dec
mov
loopne
rcrl
loope
cld
adc
push
aad
test
push
or
add
cmp
es
jns
shl
cmp
sub
das
loopne
lcall
push
adc
dec
adc
mov
cmp
jne
or
pop
push
xchg
inc
popf
sbb
jns
cmp
mov
xchg
es
adc
push
ret
pop
push
jb
sub
out
xlat
jge
xchg
ss
test
rcl
push
pop
pop
outsl
sub
jp
jmp
sti
lds
sub
addr16
and
jae
pop
test
inc
shrb
or
aad
gs
cmp
int3
add
imul
stos
stos
jns
clc
inc
inc
bound
and
push
jo
sub
and
mov
adc
adc
aas
sub
sub
inc
mov
out
call
shll
jmp
popa
lds
cmp
mov
jb
cwtl
mov
bound
xor
int
clc
fldl
cmpsl
pop
imul
cld
xchg
pop
mov
dec
sarl
inc
popa
iret
jbe
xchg
lock
jl
jae
dec
or
das
push
cmpl
xchg
mov
add
jns
mov
lods
mov
adc
orl
add
xlat
ret
xchg
movsb
xchg
xchg
cmp
adc
add
mov
pop
inc
push
es
lcall
jno
imul
insl
sub
rorl
add
lea
dec
adc
bound
sub
jecxz
lahf
repz
xchg
notb
xlat
mov
or
mov
cli
inc
imul
cmc
or
rolb
mov
ja
jno
and
mov
jno
ret
inc
xor
gs
xor
add
js
pushf
dec
clc
dec
mov
push
ret
push
mov
jb
xor
adc
add
pop
lret
mov
fisttps
jmp
sbb
add
cmp
ja
push
popa
pop
inc
lds
or
jmp
arpl
pushf
loope
or
rcrb
fs
jo
mov
push
adc
dec
lret
push
push
mov
inc
test
push
shll
cmp
push
cmp
icebp
in
jnp
add
aam
adc
lahf
mov
add
xchg
mov
pop
sub
jns
in
movsb
jo
cmpsb
mov
lret
mov
je
fstl
out
push
cwtl
lods
mov
sub
mov
jg
adc
inc
enter
mov
addb
xorl
call
aad
cld
add
pop
inc
aad
fcoml
sbb
push
insl
and
push
outsb
mov
aad
popa
and
ljmp
cmp
sub
lds
shll
or
xchg
adc
shll
inc
or
push
jb
jecxz
xlat
repz
adc
call
pusha
push
adc
sbb
bound
jns
es
push
cmp
add
insb
sub
cmp
dec
sti
negl
fidivl
xchg
sbb
pop
scas
push
or
nop
mov
jle
cmpsl
shll
mov
jle
dec
mov
sbbb
cmp
imul
call
pop
sbb
or
pusha
leave
pop
sti
imul
and
popa
xor
les
xor
in
jge
cltd
mov
out
or
fistps
mov
ds
mov
dec
xchg
xor
in
call
js
test
sbb
mov
imul
loopne
xchg
call
or
out
xor
or
sbb
sbb
mov
inc
ljmp
xlat
or
lock
or
adc
mov
addr16
repz
inc
push
ja
mov
mov
push
xchg
lds
mov
push
xchg
push
push
mov
cmp
roll
out
xchg
xchg
dec
adc
in
xchg
imul
iret
lds
lcall
vpsrld
rcll
jno
int3
xchg
ret
fadds
cmp
out
sbb
xor
inc
iret
xchg
test
mov
jno
fwait
dec
xchg
hlt
les
outsb
popf
xchg
cmpsb
sub
pop
or
testl
xchg
notb
push
int
aam
cmp
push
out
divb
stos
lods
fwait
imul
jg
stos
pop
idivl
std
sbb
lea
and
call
fdivrs
mov
add
mov
jle
mov
and
call
mov
mov
lret
sub
mov
cmp
stos
push
mov
insb
shrb
cwtl
mov
pusha
fs
adc
loopne
in
test
gs
dec
inc
aas
cmp
mov
es
repz
or
xchg
pop
lret
fs
cmc
leave
or
mov
mov
sti
js
lahf
in
test
cld
in
lock
lret
add
stc
inc
lock
jmp
or
shrl
mov
repz
adc
imul
or
and
dec
das
ds
mov
xor
out
popa
gs
clc
sub
stc
add
shll
enter
cmp
jae
sbb
clc
fmull
jge
push
pop
jbe
fmull
adc
fldl
push
int3
lods
mov
js
mov
mov
int
and
lds
sub
imul
push
jle
movsb
clc
add
lea
mov
addl
push
xor
push
pushf
fisubrs
mov
mov
test
rclb
and
es
test
inc
sub
sub
inc
adc
add
inc
popa
push
jle
das
pop
or
dec
jp
xor
imul
roll
cmp
hlt
jnp
cmc
pop
mov
xchg
add
inc
and
test
adc
or
in
repnz
xor
stc
imul
push
sub
test
sbb
xchg
mov
mov
lods
arpl
flds
out
movsl
inc
dec
leave
jo
pop
mov
jge
imul
std
ret
nop
ljmp
out
jne
ret
xchg
inc
mulb
pop
das
dec
mulb
sub
js
ja
adc
test
dec
enter
adc
adc
test
push
ljmp
std
cmpsb
mul
fstps
push
dec
arpl
push
les
adc
mov
cmp
fsubr
lea
mov
cwtl
cmp
or
mov
shll
adc
aam
and
orb
cmp
ljmp
sbb
insl
adcb
cmpsl
push
mov
pushl
push
loopne
or
into
and
sub
daa
push
js
sahf
add
xchg
movsb
fucomp
subb
xchg
les
insb
repz
lods
cmp
mov
inc
jecxz
and
shrl
pop
bound
cmp
stos
nop
rorb
mov
icebp
mov
inc
xor
cmp
mov
fiaddl
dec
sbb
test
leave
mov
bound
push
cwtl
jbe
mov
sub
ljmp
and
xor
pop
aam
mov
and
xor
mov
rcll
dec
mov
aad
fs
imul
out
scas
jae
mov
jge
push
pop
mov
adc
mov
push
mov
xorl
mov
sub
jns
mov
mov
mov
cwtl
mov
loop
inc
loopne
xor
adc
jmp
jne
xchg
mov
clc
xchg
lret
add
mov
pop
mov
xlat
shrb
add
addr16
add
jno
inc
sub
scas
bound
adc
jge
gs
lods
lcall
xlat
cli
inc
or
cld
clc
orb
sbb
mov
stc
fstl
dec
paddsb
mov
xor
and
int3
aad
repz
repz
inc
enter
clc
and
ljmp
lahf
sbb
mov
arpl
negl
pop
xchg
inc
mov
fs
jbe
adc
andb
jmp
push
cwtl
push
ss
add
cld
push
pop
lret
sbb
int3
xor
push
mov
scas
addr16
lcall
adc
aas
flds
shrl
adc
arpl
inc
dec
repnz
dec
ss
adc
mov
test
inc
inc
xor
or
mov
pop
pop
jb
add
mov
cmp
sbb
mov
into
cmp
aad
dec
xor
lret
add
inc
sbb
mov
push
scas
jbe
fdivl
adc
add
aas
push
push
negb
daa
call
jle
inc
and
stc
cmp
stos
pop
inc
aaa
aas
loope
mov
je
fcoml
into
adc
or
jne
or
sti
lds
mov
dec
pop
and
dec
xor
ds
out
push
out
mov
dec
sahf
cltd
push
shll
sbb
or
mov
fcomi
inc
cmpsb
lret
push
cmp
jl
xor
xchg
scas
inc
je
out
sub
jge
data16
adc
pop
insb
insb
xor
jmp
xchg
data16
mov
fwait
enter
push
inc
cmpsb
cmp
xor
in
or
loop
jmp
sub
popa
lret
out
sbb
in
mov
cltd
pop
add
mov
jo
ds
xchg
and
push
out
cmpsl
aam
outsl
pop
add
push
lahf
cmp
jge
scas
mov
jmp
cli
xor
sub
xchg
lret
in
mov
dec
les
push
repz
jle
or
jns
mov
jb
mov
in
je
push
fwait
mov
jae
rolb
dec
cwtl
test
sbb
cmc
int
xchg
inc
out
ret
sub
rorl
mov
adc
mov
mov
addl
mov
fadd
xchg
cmpsb
push
mov
sub
aaa
xchg
push
popf
mov
mov
aam
cs
xor
scas
mov
movsl
lods
pusha
mov
fcompl
dec
outsb
enter
pop
xor
enter
mov
outsl
scas
bound
sbb
adc
dec
xlat
clc
jae
pop
adc
pushf
cmpsl
xor
ss
and
mov
insb
xchg
mov
mov
jb
stc
inc
xchg
ljmp
clc
rol
sbb
cmpsl
mov
mov
push
jo
les
ret
dec
test
es
fsubrl
mov
cmpsl
hlt
adc
add
inc
rcr
in
and
or
daa
fcmovnbe
fidivs
add
dec
dec
inc
dec
iret
in
iret
jmp
push
mov
or
add
inc
cmc
pop
jae
add
pop
ficomps
loopne
adc
in
pop
push
aad
test
scas
xchg
mov
int3
inc
imul
lret
out
xchg
idivb
inc
jecxz
xchg
inc
mov
inc
data16
mov
das
scas
imulb
rclb
jg
scas
cs
rcr
enter
add
in
sar
mov
stc
loopne
addr16
shrb
push
add
add
inc
js
mov
orb
dec
arpl
or
sub
xor
scas
sub
test
pop
inc
fcomps
cli
add
pop
pop
jecxz
pop
push
fidivrl
pop
ret
cmp
jbe
cmpsl
xchg
jle
mov
arpl
call
inc
jne
fcompl
sbb
xchg
adc
ds
sub
popf
div
xor
jmp
cmpsl
jmp
jo
jecxz
dec
sti
loop
sub
push
fwait
cmp
loop
sbb
rol
jo
jns
sti
mov
cmpsb
leave
arpl
mov
jo
sub
fld
fsubl
adc
lods
rcrl
xchg
stos
mov
dec
lret
pop
mov
out
pop
scas
and
ret
xor
jno
sbb
xor
lds
idivl
bound
push
subl
pop
xchg
or
dec
jne
vmovupd
mov
stc
inc
int3
add
lock
out
xlat
movsl
jp
pop
pop
call
cmpsl
fistps
sbb
hlt
ds
imul
inc
test
adc
mov
pop
pusha
push
sti
add
cltd
test
sbb
in
ljmp
lcall
inc
imul
push
xor
xlat
leave
push
dec
out
dec
xor
xlat
pop
sub
cmp
fsincos
ss
dec
adc
out
xor
loop
push
test
jae
inc
mov
add
or
dec
sbb
enter
mov
insl
inc
fdivl
into
inc
fldt
les
int3
sbb
mov
xchg
andl
ror
dec
sbb
out
rcrb
pushf
sbb
push
mov
xorl
xchg
inc
pop
xor
xchg
xchg
push
test
mov
mov
xor
cmp
pop
cld
push
xchg
push
data16
stos
xlat
outsb
aas
push
stos
push
xor
arpl
lret
jne
pop
cmp
adc
and
sub
shlb
push
push
lods
cmp
hlt
jle
subb
arpl
lea
enter
sahf
fldt
mov
mov
pop
xor
xor
jne,pt
in
sub
inc
scas
push
cwtl
push
testl
cmpsb
jecxz
scas
mov
inc
test
jp
ljmp
xchg
adc
test
xchg
mov
pop
jae
sbb
adc
dec
int
mov
jge
inc
aaa
popf
dec
das
mov
mov
js
xor
push
cmp
call
std
inc
mov
pushf
addr16
std
mov
fmuls
sub
sarb
loopne
xchg
jle
out
dec
push
sbb
and
loopne
sub
jle
filds
out
and
outsb
fbld
lods
cli
push
push
xchg
mov
nop
mov
mov
jbe
rcrl
or
mov
fstps
add
sbb
xchg
sahf
aas
pop
and
loopne
arpl
pop
cltd
add
int3
arpl
mul
mov
daa
pxor
in
cmp
in
mov
movsb
mov
jno
xor
mov
stos
jb
sbb
inc
xor
and
test
ds
mov
popa
sbb
or
das
add
out
sub
shll
out
dec
clc
bound
sub
sub
loope
push
rorl
pop
loope
inc
mov
in
das
push
xchg
cmpsl
addl
sub
mov
jb
dec
pop
push
rclb
pop
cs
jecxz
lret
mov
mov
incb
pop
mov
ficoms
pop
dec
dec
push
stos
data16
and
mov
pusha
call
adc
push
sub
mov
mov
ret
adc
jbe
inc
pop
in
aam
arpl
mov
xchg
lock
adc
push
xchg
dec
mov
and
sub
aaa
rcll
push
fs
lods
insb
movsl
divb
shlb
jnp
jbe
out
sub
jge
mov
inc
addr16
mov
pop
mov
popl
jp
test
insl
rcll
fs
cmc
test
push
xchg
xchg
stos
ja
call
pop
pop
add
out
mov
push
cmp
ja
shr
push
int3
xor
jmp
test
nop
mov
xchg
mov
add
xor
xchg
or
xchg
loop
in
cmpsb
hlt
lods
xchg
xchg
xchg
push
lods
sub
js
cmc
add
add
shr
ret
mov
jne
clc
fdivr
push
cmpsl
inc
sbb
scas
sbb
dec
mov
and
imul
cmc
lods
xor
xchg
fildl
xor
fcoms
addr16
ljmp
ljmp
xchg
addr16
rcrb
cmpsl
adc
or
xchg
mov
xor
sub
iret
push
insb
mov
mov
or
mov
iret
xor
and
mov
cmpsb
mov
mov
out
cmp
js
stos
push
lret
mov
cmp
inc
push
pop
sbb
in
fnsave
add
imul
stos
imul
mov
test
rcr
ja
ret
jne
xchg
popf
mov
dec
mov
push
nop
adc
cmpsl
fadds
jecxz
add
ret
push
cltd
add
cmp
pop
mov
stos
test
mov
negb
popf
or
leave
xor
rolb
pop
out
es
inc
xchg
xor
repnz
cmp
adc
jb
adc
mov
test
inc
out
fidivrl
lret
and
ljmp
cmpsb
imul
xchg
cmp
sub
cmpsl
data16
and
ljmp
jmp
mov
xchg
xchg
into
inc
aad
icebp
test
arpl
int
out
rcll
shr
into
cltd
sub
fwait
mov
and
repz
pop
xor
jle
and
mov
mov
push
sbb
sbb
sub
roll
adc
mov
daa
dec
jbe
mov
lock
mov
das
int3
cltd
and
scas
add
sub
pop
mov
sub
insb
stos
jg
pusha
into
fadd
and
jae
pop
push
jp
adc
inc
test
or
mov
insl
dec
push
loop
dec
sbb
into
xchg
mov
and
xchg
les
lahf
xlat
mov
repnz
xchg
ret
and
fistl
adc
adc
rorb
fwait
mov
in
clc
jno
push
lea
mov
shrb
stos
jo
inc
js
clc
pop
xlat
xor
pop
or
push
mov
inc
pop
in
je
in
leave
sub
aas
push
mov
and
je
push
mov
mov
fsubs
xorb
shr
pop
dec
xchg
dec
pop
mov
roll
adc
mov
xchg
jge
add
xchg
mov
arpl
inc
stc
leave
clc
aas
mov
add
int
or
pop
jmp
hlt
xor
movsb
xchg
pop
mov
movsl
lock
xchg
test
loope
sbb
outsb
push
nop
lock
in
mov
lock
and
fsubl
and
mov
cmp
cld
jno
mov
dec
fwait
mov
xor
lods
cmp
push
pop
in
out
jmp
push
cmp
fisttpll
out
subb
pop
lret
or
sbb
es
sbb
jo
sbb
add
xchg
stos
pop
lds
sti
dec
mov
dec
cmp
sarl
cmc
sbb
or
sub
push
sub
hlt
pop
xchg
add
ljmp
lea
pop
pop
jge
inc
int
cmp
out
cmp
xchg
fisubl
jne
scas
out
push
mov
cmp
inc
mov
ljmp
lods
or
mov
fcmovnb
cmp
gs
les
jns
out
mov
lods
mov
sbb
in
repz
cmp
pop
lea
inc
mov
pop
sub
mov
cltd
or
dec
insl
cmc
sub
daa
outsl
lret
scas
aad
cmpsl
or
stc
imul
aam
inc
pop
mov
std
cwtl
rorb
cmpsb
inc
outsl
pop
leave
jno
sbb
aad
lcall
inc
push
clc
jecxz
xor
xor
inc
sbb
mov
loop
loope
xchg
ds
sahf
clc
lods
cmc
test
pop
outsl
fucomip
in
mov
fstpl
sahf
ficoml
pushf
pop
jmp
test
test
and
sahf
sbb
outsb
pusha
fadds
mov
push
xchg
dec
mov
adc
pushf
sbb
out
cmp
shr
or
cmp
test
mov
arpl
jmp
in
sub
jbe
push
dec
dec
mov
sub
mov
or
cmp
sti
mov
jmp
mov
and
mov
xchg
test
xlat
mov
aaa
sbbb
push
jg
pop
sbb
sbb
push
es
fisubrs
stc
dec
stos
jle
push
leave
inc
fs
sbb
pushf
add
push
cmp
neg
inc
rcrb
sub
sar
jg
data16
dec
lods
xor
fisubl
or
mov
mov
subb
jge
scas
mov
jbe
call
dec
cmp
inc
test
repz
adc
aam
les
out
ret
jmp
insl
idiv
push
and
fnstsw
push
jb
aam
mulb
mov
adc
andl
out
fimuls
jecxz
inc
jbe
cmp
enter
fsubl
cmp
cmc
hlt
cmp
das
fisttpl
add
push
mov
mov
cmp
andl
out
sub
out
mov
loopne
scas
popa
push
into
into
mov
decb
mov
stos
popf
ljmp
jp
je
xor
cmp
imul
xor
inc
jl
rcll
fisubrs
call
testl
je
cwtl
pop
push
in
inc
push
lahf
jae
faddp
out
xchg
out
mov
sahf
loop
mov
inc
cli
cltd
repz
sbb
in
and
push
pop
fdivrs
dec
xchg
mov
or
rclb
and
or
in
jecxz
in
pop
push
lock
pusha
inc
movsl
dec
movsb
sub
cld
push
test
pop
mov
sbb
dec
cmpsl
cmp
pop
sub
cmp
dec
ja
ret
insl
int3
jb
aaa
shll
jne
pop
pop
sbb
in
add
inc
jmp
push
movl
test
sub
in
scas
rolb
arpl
pop
ret
push
mov
jmp
mov
outsb
cmp
stos
and
xlat
fisubrl
pop
test
loopne
fnsave
iret
mov
pop
sub
xchg
mov
pushf
inc
xchg
out
scas
cmp
scas
adc
xor
mov
inc
lods
push
fdivl
pop
stos
aad
mov
out
call
xor
mov
xor
addr16
push
mov
decl
sbb
xor
push
jl
dec
insl
pusha
leave
ljmp
repz
fldenv
pop
ds
add
push
cmp
and
mov
idivl
decb
mov
out
push
push
out
loope
inc
push
test
xchg
lock
dec
pop
dec
cmp
sbbl
in
sbbl
insl
xchg
int3
mov
and
ret
cmpsb
xor
jae
jbe
xlat
cmpsb
dec
js
sbb
pusha
test
inc
pushf
push
lret
dec
rorb
pop
sub
ja
fcmovnb
je
sbb
xor
or
xor
into
and
je
cmpb
test
cmp
in
imul
addr16
mov
sbb
das
sub
xor
mov
jb
clc
push
cmp
pop
push
xchg
iret
pop
mov
sarl
fsubrs
inc
inc
orb
or
mov
or
rcll
mov
sub
push
cmp
mov
mov
mov
inc
xor
push
outsl
adc
fneni(8087
jp
out
sbb
outsl
lret
cmp
out
mov
mov
cli
adc
imul
mov
cmp
xchg
cmp
repnz
rcll
fsts
insl
xchg
in
add
gs
or
cld
mov
aaa
xchg
lock
push
in
ljmpw
add
sahf
out
cmpb
aas
rcll
call
jp
push
fdivrs
mov
xchg
xchg
mov
fcoml
cmp
xor
pop
mov
or
mov
mov
je
daa
add
mov
adc
push
or
xchg
ljmp
insb
xor
add
adc
imul
dec
add
lahf
mov
sub
stos
jmp
sbb
and
dec
cwtl
call
mov
mov
jg
dec
loop
sbb
dec
add
sbb
dec
out
ficompl
xorb
sbb
sub
popa
xorl
loope
into
cs
jnp
sbb
cmp
fiadds
pop
mov
arpl
push
jmp
sbb
ror
in
addr16
mov
inc
pop
lock
push
mov
mov
and
and
and
lods
testb
xor
jno
mov
xor
cmpsb
dec
mov
inc
or
push
mov
aam
sub
jp
dec
jbe
jl
int3
push
xchg
out
or
data16
pop
movsb
xor
stc
pop
out
cmp
mov
repnz
or
lgs
mov
add
sub
jl
adc
test
leave
in
mov
xor
pusha
jle
sarb
jae
dec
dec
scas
add
xchg
cltd
fisubs
jp
sbb
fisttps
stos
xlat
cmp
ja
jecxz
push
pop
mov
pop
sbb
out
mov
mov
in
mov
add
enter
mov
enter
xchg
push
xlat
adc
aad
xchg
loopne
dec
inc
lcall
pusha
and
add
cs
jmp
sub
test
or
movb
jnp
insl
mov
and
mov
aad
xor
xorb
add
push
sub
pusha
aaa
sbb
lods
shr
loope
outsb
mov
arpl
pop
bound
mov
xor
dec
jp
jno
stos
add
lods
dec
cmpsb
lret
outsl
xorb
inc
fs
mov
pusha
fsubp
xor
mov
bound
call
mov
jp
mov
add
push
aad
cmpsl
xchg
fisttps
cmovg
into
mov
imul
add
cmpsb
fwait
cltd
mov
dec
test
dec
enter
dec
movsb
jb
cwtl
sahf
or
add
xchg
in
sbb
pop
enter
outsl
inc
fwait
sahf
or
adc
mov
cld
jecxz
xchg
sub
push
push
notl
mov
test
test
jge
jno
in
test
cltd
jle
scas
sub
lret
mov
xlat
fiaddl
sbb
js
cltd
movsb
mov
sbb
xchg
lret
push
out
jmp
and
stos
loopne
clc
movsl
pop
add
xor
push
mov
and
mov
int
push
jmp
cmp
loopne
xor
out
movsl
add
cwtl
push
jl
xchg
cmp
mov
pop
cs
cwtl
outsb
jbe
sub
lods
call
xor
out
leave
int
call
sub
mov
das
insl
and
lahf
out
add
bound
adc
and
loope
mov
jl
sti
icebp
aaa
mov
js
sar
iret
test
or
nop
adcl
adc
xchg
pushf
adc
lds
mov
repnz
cmp
xchg
test
add
iret
push
into
loop
pop
outsb
arpl
push
sub
mov
push
loop
push
mov
jnp
nop
or
ret
popf
mov
call
push
andb
into
push
xchg
push
mov
xor
sub
mov
xchg
mov
add
cmpsl
jbe
int
ljmp
add
nop
and
mov
xchg
aam
jb
aas
or
cli
mov
jg
pop
jne
jb
int
scas
movsb
mov
aam
push
test
test
adcb
fs
sub
int3
out
adc
mov
push
mov
ret
and
pmuludq
xchg
sub
sub
arpl
das
fnsave
mov
pop
mov
inc
pop
jne
insl
fsubr
lahf
pop
lods
dec
shrb
popf
daa
jns
inc
call
pop
cmpsb
test
in
lcall
xor
jno,pt
mov
dec
test
mov
ret
cwtl
mov
mov
inc
mov
xchg
das
push
dec
mov
outsb
sbb
jp
out
cmpsb
jo
cli
decb
xchg
loopne
push
adc
in
mov
imul
mov
mov
popa
imul
add
jo
ret
and
or
out
mov
fcoms
dec
cwtl
je
adc
inc
rcr
sub
pop
test
add
xchg
add
pop
adc
aad
rorl
pop
sbb
outsb
fnstenv
sub
mov
das
out
sub
jo
or
and
mov
mov
lds
orl
jle
xor
fdivl
mov
mov
sub
pop
mov
and
daa
add
daa
cmpl
int
lea
xor
int3
jb
mov
sti
mov
cmp
or
pop
je
dec
mov
std
push
test
lcall
dec
outsl
jmp
sbb
ret
pusha
shr
mov
cmpsl
mov
add
mov
jge
movsl
sti
mov
sub
mov
or
sub
adc
cmpsb
pop
sti
sub
xchg
jnp
ret
lcall
repnz
add
add
sub
jnp
mov
mov
arpl
and
push
repz
sbb
xor
mov
push
jns
sbb
scas
or
dec
sahf
pushf
imul
and
mov
xchg
push
idivl
out
lock
adcb
sbb
std
push
packssdw
inc
mov
fs
pop
lea
aad
cmp
lahf
cltd
xchg
sub
push
sub
call
shll
sti
shrl
pop
cmp
gs
mov
and
cltd
sub
frstor
inc
repz
cli
inc
pop
cmpl
inc
out
xchg
dec
popa
scas
xchg
loop
testl
inc
mov
lds
es
add
pop
mov
pop
icebp
andb
jmp
scas
scas
mov
and
push
test
push
fsubrl
adc
shrl
sub
adc
negl
std
in
scas
lods
adc
mov
in
leave
int3
mov
imul
cltd
ret
mov
scas
idiv
ja
lods
xchg
dec
loop
mov
push
lret
mov
jp
fdivrp
fistpl
ds
fstp
inc
xchg
lods
pop
mov
sahf
movsb
mov
scas
scas
clc
into
mov
enter
push
cmp
sub
sbb
jle
in
int
int3
pop
cwtl
outsb
jge
mov
dec
cltd
dec
test
lock
pop
jb
xor
les
pop
aaa
sub
adcl
and
nop
shll
pop
push
sbb
add
jg
sub
sub
mov
lea
adc
dec
fnstenv
bound
push
lock
or
pop
jge
or
lea
loop
mov
add
loop
pop
add
data16
adc
pop
mov
mov
jo
mov
in
push
mov
loop
and
scas
xchg
and
inc
pop
clc
xchg
push
push
sahf
mov
xor
xlat
mul
addr16
fwait
mov
cmp
jb
xchg
add
sbbb
outsb
mov
std
or
xor
ret
dec
pop
cmpsl
jo
jb
xchg
xor
cmp
xor
mov
addr16
js
mov
stc
pop
adc
cmp
xchg
gs
imul
aaa
mov
jns
rcrb
es
push
enter
jb
shlb
pusha
es
das
pop
enter
xor
hlt
sahf
loope
into
sti
mov
aas
xchg
add
and
cld
add
pop
jg
imul
in
add
xlat
fnsave
xchg
fdivl
mov
jmp
out
push
push
in
pop
mov
mov
inc
adc
push
arpl
add
and
sub
add
inc
lds
pop
mov
and
pop
ss
cltd
inc
mov
inc
pop
test
sbb
lahf
gs
jne
sub
xorl
and
es
pop
scas
mov
inc
mov
int3
xor
stos
dec
subl
inc
xchg
arpl
movsl
sub
ja
or
add
inc
pop
inc
add
iret
cs
shll
push
es
cmpsb
cmp
sbb
sub
stos
sub
std
cmc
mov
mov
sbb
pop
add
pop
test
out
jae
pop
cmp
mov
repz
mov
pop
out
cmp
mov
add
sti
mov
dec
cmpsb
xchg
jbe
inc
aad
mov
push
cltd
dec
jmp
and
repz
mov
jge
mov
mov
push
mov
popf
sub
dec
push
pop
pop
jp
mov
fldenv
mov
mov
mov
ret
hlt
push
repz
jo
xchg
in
jle
pop
repz
jecxz
sti
imul
daa
dec
leave
sti
xor
test
mov
xchg
stos
jle
xchg
aam
cli
jmp
lods
push
jg
aad
hlt
int3
jp
ret
outsb
movsl
mov
gs
movsl
cwtl
adc
lret
cmp
pop
adc
xchg
mov
jae
aaa
mov
add
data16
fimuls
sbb
rcll
into
mov
cltd
hlt
test
fchs
push
mov
cmc
ret
test
mov
ficomps
out
sub
mov
fsubrp
fiadds
jmp
jmp
push
mov
pushf
push
push
sbb
cmpl
aam
sahf
and
fildll
pushf
rorb
cltd
pop
sbb
or
inc
push
inc
stos
xlat
fwait
adc
sub
mov
adc
mov
clc
bound
adc
lret
insb
push
cmp
xor
pop
jbe
aad
popa
sbb
add
sti
jno
push
mov
mov
mov
movsl
cmp
andl
mov
xor
shrb
adc
lcall
inc
ficompl
jno
and
lock
jo
mov
pop
pop
adc
ret
sarl
inc
push
mov
mov
int
mov
jg
aas
movsb
xor
and
and
fistps
test
icebp
lea
inc
out
or
jge
fldenv
mov
std
in
mov
pop
mov
popa
dec
add
insb
mov
jb
add
xchg
mov
rcrb
test
jge
add
mov
fisttpl
rorb
xor
mov
jecxz
loope
and
and
js
jp
inc
dec
pop
jl
push
insl
out
out
mov
fsubrs
push
das
inc
dec
sub
sti
mov
imul
loope
pushf
pop
push
jmp
fwait
nop
adc
loope
jp
push
ja
jns
rcrb
pop
inc
loop
pop
add
or
inc
sbb
and
mov
rcrb
lahf
and
popf
inc
mov
movl
add
lock
sub
outsb
push
xor
aam
push
pop
cmc
pop
sbb
pop
pop
xchg
cmp
test
outsl
stos
stc
sub
xor
or
lock
fisttps
jnp
jae
mov
test
adc
insb
cmp
imul
outsl
push
xor
addr16
xor
lcall
jae
loope
mov
fstpl
sbb
hlt
sbb
sbb
enter
or
icebp
ja
pop
lret
popa
ljmp
pause
cmc
ljmp
add
and
xor
cs
imul
js
outsb
jb
nop
and
ljmp
mov
out
sub
bsr
push
movsb
jno
dec
popl
jp
sbb
out
out
push
sub
call
mov
add
jge
pop
push
xchg
scas
mov
scas
sub
add
orb
test
in
add
sub
and
push
jl
mov
lcall
jp
or
stos
push
cmp
xlat
cli
push
inc
add
nop
sbb
lods
into
shrb
inc
push
stc
or
pop
xor
jmp
aad
inc
inc
add
hlt
inc
fcmovne
es
sub
testl
xchg
pop
cmpsb
scas
arpl
add
popa
rcrb
and
repnz
es
clc
adc
jl
jmp
or
lret
jg
insb
scas
push
imul
xchg
mov
popa
je
mov
fs
insb
frstor
cli
push
enter
or
aaa
fsubrs
stos
xor
mov
push
sub
lcall
xor
push
jb
mov
ljmp
addr16
and
push
and
popf
xchg
push
sub
stos
inc
sbb
lds
pop
lods
xchg
mov
push
push
lds
mov
scas
push
rolb
mov
cltd
outsb
xorl
lcall
add
dec
mov
js
loop
lods
shrb
mov
shlb
iret
mov
lods
iret
jo
xchg
shr
inc
int
dec
adc
fcomps
xchg
aam
mov
pop
inc
cwtl
adc
jb
lcall
sbb
rcrb
ljmp
in
sbb
ljmp
cmpsl
daa
inc
and
xchg
out
mov
add
mov
jae
lods
inc
iret
lock
dec
lcall
jg
push
jnp
lea
test
mov
ss
lcall
or
pop
jbe
mov
decl
out
stc
lods
lock
sahf
mov
and
shr
inc
popa
sub
and
pop
je
xchg
stc
movsl
mov
xorb
xchg
fnstcw
sbb
out
les
mov
clc
add
jmp
sbb
xor
popa
cmc
mov
mov
and
jo
sbb
fstpl
mov
pop
pusha
mov
jg
gs
mov
movl
adc
cmp
ja
enter
int3
aam
inc
xchg
push
lahf
je
call
rcrl
xchg
mov
mov
mov
leave
fcomps
shrl
mov
shl
popa
push
stos
jmp
add
sbb
out
mov
sbb
sub
mov
lea
ret
shrl
mov
jle
jmp
xor
mov
push
inc
cld
dec
fildll
xor
dec
test
jb
mov
popf
inc
mov
xchg
ret
mov
mov
rcr
pop
int3
jbe
jg
add
jge
inc
ret
pop
ja
sbb
sbb
jp
or
mov
xor
popa
test
test
pop
and
popf
sar
pusha
inc
fwait
mov
fwait
popa
sbb
cmpsb
sahf
mov
mov
and
test
add
movsb
xor
pop
stos
int3
pop
les
xchg
push
mov
sarb
jl
mov
cmp
jnp
lea
adc
fisubl
mov
xor
ljmp
in
scas
dec
aas
stos
add
stos
mov
pop
lcall
dec
roll
dec
stos
and
std
pop
lahf
push
repz
lock
mov
mov
or
lahf
adc
push
jb
add
sub
fcomps
mov
dec
sbb
shll
hlt
push
push
and
sti
xchg
pop
ljmp
sub
sub
jno
fnstsw
stos
fbld
dec
ds
pop
xchg
mov
jnp
mov
sbb
push
add
or
or
les
inc
inc
into
mov
outsl
popa
cmp
in
jb
dec
adc
xchg
pop
sbb
push
popf
fsub
add
cmp
push
and
loopne
and
push
cmp
or
adc
push
cmp
push
mov
out
call
xchg
out
or
and
pop
or
or
subl
and
jle
fsubp
outsb
add
mov
jge
xor
sbb
xor
adcb
pop
add
pop
push
or
lea
adc
ret
fdivs
xchg
mov
mov
sub
xchg
inc
and
dec
lahf
es
pushl
or
rcll
fistps
jp
out
sbb
sar
push
ds
lcall
lcall
es
dec
push
mov
xor
adcl
jl
fdivrs
sub
or
and
xchg
shll
sbb
jle
test
xor
xlat
and
mov
xor
pop
fidivs
shll
push
lds
mov
or
xor
out
lcall
pop
test
cmc
cmp
andl
pop
dec
push
aaa
xor
shrl
inc
sbb
fnstcw
jo
cltd
cwtl
xor
xchg
arpl
ja
xorl
in
shr
shl
xor
dec
pop
or
in
add
pop
cmp
mov
xor
xor
iret
scas
mov
sti
add
mov
imul
rcrl
dec
stos
jae
add
mov
or
movsb
add
and
movsl
lret
ja
jp
sub
inc
sub
mov
push
movsl
arpl
mov
test
mov
mov
sub
sti
jg
jecxz
fadds
cmpsl
xchg
cmp
or
push
gs
bswap
xchg
sub
fiaddl
xchg
les
lock
adc
adc
pop
fcmove
and
sbb
scas
fsubrl
xchg
mov
mov
push
lret
mov
negl
cmpsb
cwtl
jle
or
fsubs
mov
xor
fcomip
hlt
mov
xor
fistpl
iret
roll
mov
int3
adc
dec
rcll
int
mov
pop
cmp
rcr
xchg
clc
ja
insl
ds
out
add
lods
xabort
adcl
pop
cmpsl
xor
pop
pop
sub
lahf
pushf
mov
ja
hlt
dec
cld
das
fwait
jecxz
rclb
adc
adc
xlat
stos
popf
jae
inc
ljmp
push
ret
clc
dec
hlt
bound
lret
jno
xchg
mov
por
inc
xchg
iret
ss
scas
jl
in
sub
ja
mov
xchg
inc
dec
mov
dec
jne
stos
aad
cmc
fwait
pop
cmp
call
xlat
xchg
in
sbb
and
mov
and
inc
pop
pop
dec
jns
jle
push
sbb
xchg
dec
xchg
popl
inc
mov
xchg
fmuls
mov
and
lcall
fsts
lea
sbb
test
decl
adc
xor
fistl
push
das
jb
shrb
movsb
es
cwtl
sbb
pop
into
sahf
add
aas
and
and
add
pop
test
xchg
repnz
sub
push
dec
into
outsl
repnz
je
fsts
jmp
in
stc
movsb
lods
insb
cltd
mov
int3
out
push
out
jmp
cmp
bnd
adc
add
stos
rorb
mov
ret
add
fiaddl
xchg
ds
inc
sub
or
cmp
repnz
out
inc
sbb
sti
mov
movsb
repnz
inc
cmp
shlb
lock
aaa
jmp
sub
movsb
loope
cmp
sahf
fisubs
shrl
fisttpl
aaa
push
push
into
xchg
or
addr16
inc
or
fadds
push
mov
sarb
les
pop
push
xor
add
mov
inc
push
push
cwtl
dec
shrl
lea
loope
ss
cltd
jae
int
rcrb
xchg
mov
push
and
and
and
and
lcall
rorb
pop
push
les
lods
or
mov
sbb
shrl
rorb
adc
mov
jo,pt
repz
nopl
nopl
filds
pop
and
fwait
repz
dec
and
push
imul
jbe
scas
nop
xor
xchg
sbb
mov
xor
repnz
mov
mov
lret
iret
fcmovnu
mov
and
mov
sub
mov
push
mov
xor
mov
nop
sti
mov
mov
xchg
je
jmp
ret
dec
jnp
or
pop
push
and
lods
shlb
xchg
mov
inc
mov
fildll
xor
and
cmp
out
dec
enter
push
test
test
addb
push
je
mov
in
pop
inc
test
pushf
int3
call
pop
xor
aas
cli
xor
scas
mov
int
lret
movsb
add
adc
pop
dec
xor
nop
jbe
iret
or
dec
and
adc
into
cmp
loop
add
lock
cwtl
lock
xor
add
ret
stos
fld
pop
xor
mov
popa
xchg
rcrl
dec
push
scas
xor
scas
scas
jmp
out
nop
cmp
scas
out
cld
jbe
jne
adc
out
leave
loopne
cmc
icebp
push
pop
dec
inc
sub
lea
xchg
jl
ret
in
mov
mov
xchg
push
lods
aad
addr16
pop
mov
xchg
dec
ljmp
int3
gs
sub
mov
mov
fidivrs
mov
push
xor
iret
rorl
pop
in
lcall
xchg
aam
incb
clc
iret
nop
push
cmpb
inc
pop
rcll
adcb
jle
adc
mov
and
xchg
xorb
sub
jecxz
test
sbb
iret
sar
shrl
pop
cmp
xchg
adc
lock
xor
hlt
movb
mov
hlt
cmp
pop
mov
or
push
xor
jle
pop
add
cld
push
divl
lock
xor
in
cmp
out
mov
xchg
xchg
jmp
bound
inc
xlat
sub
std
mov
rolb
stos
notl
adc
in
sbb
fisttpll
push
sub
xchg
loopne
and
jp
add
fcoml
scas
movsl
pop
movsb
add
icebp
jge
mov
addl
jns
hlt
lods
pop
ret
inc
scas
hlt
sub
mov
sub
cmp
jne
std
insb
sbb
mov
jnp
in
and
cmp
mov
lcall
inc
rolb
fstpl
out
mov
pop
or
scas
es
hlt
in
xchg
cs
xchg
xchg
test
adc
cwtl
and
scas
pop
scas
push
test
xor
test
or
xchg
add
test
and
jl
shll
popa
addr16
decb
std
push
dec
adc
dec
ds
push
dec
out
in
sbbl
stos
ror
popf
insb
pop
xchg
int3
scas
dec
push
cmp
stc
inc
or
or
mov
mov
stos
loop
sub
xor
gs
mov
jle
fidivrl
cs
adc
insb
fwait
ret
aas
movsb
rcll
mov
sbbb
or
fdivrl
ror
leave
sub
jns
inc
scas
xor
les
shlb
mov
movsl
jl
out
push
sbb
jmp
jo
pop
add
mov
ret
mov
and
aaa
shr
xchg
xor
cs
xchg
or
cmpsl
mov
adc
in
sbb
or
aas
test
ds
daa
out
inc
push
repz
popf
ja
movsl
and
mov
mov
pop
rcll
pop
adc
cmp
cmp
pop
pop
lret
test
nop
mov
mov
scas
xchg
xor
mov
inc
ret
icebp
push
mov
test
sbb
cld
inc
push
cmp
mov
xchg
out
call
insl
jbe
fnstsw
mov
xor
xchg
pop
movsb
leave
sub
or
jge
sbb
and
adc
add
mov
sahf
cmp
mov
mov
and
jmp
push
imul
mov
out
dec
mov
sub
adc
sub
dec
pop
xlat
lods
mov
mov
scas
push
in
pop
mov
in
and
pop
cmovg
push
dec
or
lcall
cmpsb
inc
loope
dec
out
repz
adc
imul
mov
fdivp
inc
ss
push
cmp
movsl
mov
rcrb
imul
xchg
popa
ljmp
ss
xor
sub
fwait
inc
lcall
lahf
sub
or
sub
stos
jge
outsb
repz
daa
inc
imul
mov
mov
ja
lds
pusha
push
jo
mov
adc
in
sub
sub
jb
nop
ss
cmp
jle
mov
mov
clc
mov
jae
bound
mov
jmp
out
lods
push
andb
repnz
or
push
test
lock
sbb
cmp
std
aas
dec
jb
cltd
inc
inc
stc
mov
int
push
cmpsb
stc
movsl
dec
arpl
inc
cli
fnstsw
stos
pop
add
push
mov
jmp
inc
scas
mov
jb
fs
dec
in
cld
pop
mov
hlt
cmp
testl
fwait
enter
fidivl
cmc
push
int
push
xor
mov
push
or
test
sub
dec
mov
jae
test
je
lods
stc
out
sub
and
sub
pushf
inc
mov
test
xchg
aaa
adc
roll
and
fstl
sar
add
fdivl
push
xorb
mov
mov
sbb
repz
sub
jecxz
cmpsl
inc
push
mov
jbe
ss
pushf
call
nop
jmp
mov
jb
inc
xchg
jge
les
pop
xchg
sub
pop
sub
icebp
cmpsb
test
add
stos
test
mov
push
mov
out
loope
lcall
push
insl
clc
imul
cld
xchg
shr
add
jbe
out
test
and
dec
cmp
sub
das
stos
or
cltd
push
xchg
dec
call
out
jmp
mov
mov
inc
jg
into
mov
adc
fisubrl
push
sbb
insb
inc
mov
cmpsb
ss
fldcw
arpl
sahf
xchg
les
cli
stos
and
ficoms
mov
sahf
popa
inc
mov
xlat
mov
int3
sbb
sub
push
into
fwait
pop
outsb
inc
int
nop
adc
cmpsl
add
xlat
rcrb
push
scas
jns
or
jne
cmpl
xor
pushf
lods
and
cs
imul
add
pop
enter
lret
cwtl
lods
cmpsl
std
push
sahf
sub
dec
or
stos
dec
mov
rolb
std
ss
in
xor
sub
sub
cmpsb
data16
loopne
mov
xchg
push
pop
push
cld
scas
cmp
jne
mov
inc
push
sti
lds
in
pop
inc
or
out
push
jmp
push
out
mov
loope
gs
jg
bound
sub
add
jmp
mov
stc
test
sbb
aas
push
dec
sbb
add
add
loope
into
jns
and
xor
dec
mov
pop
and
add
loop
pop
mov
push
and
or
or
jbe
cmp
xor
fs
cwtl
sti
fistl
adc
fimuls
cli
ficoms
mov
jp
inc
jmp
jl
mov
add
insl
scas
imull
xor
je
les
xor
subb
mov
loope
mov
mov
mov
push
das
lods
push
mov
mov
in
inc
inc
pop
jnp
push
xchg
mov
sbb
frstor
jo
lods
cmp
xor
clc
and
or
add
pop
fbstp
ja
lcall
loopne
jp
mul
inc
xor
mov
loop
mov
pop
mov
movsl
aam
and
int
sub
dec
mov
decl
mov
fcomps
insb
int3
push
stos
in
imul
dec
aas
ss
adc
inc
outsl
loop
shl
into
jp
inc
lahf
pusha
lret
arpl
sub
pusha
jg
ds
xchg
push
or
or
bound
pop
rorl
arpl
lea
jb
iret
fnstenv
xor
iret
jl
add
xorl
push
mov
subl
ljmp
gs
imul
out
daa
enter
mov
mov
cld
dec
dec
mov
cmp
pop
fstps
aad
adc
jle
nop
sahf
icebp
dec
adc
pop
inc
jge
std
jno
cli
lods
lock
push
sub
movsb
lret
mov
inc
lret
push
sbb
or
fldt
adcl
lret
dec
cmpsl
cmp
aam
pop
add
jno
jmp
out
fisttpll
jno
mov
and
pushf
mov
imul
jbe
int
mov
mov
popf
jg
jl
sbb
jae
sub
test
movsb
xchg
imul
mov
adc
dec
lods
mov
xchg
call
movl
inc
adc
pusha
lods
stos
inc
sub
push
push
cmp
loope
mov
sub
das
mov
rclb
fcoms
sbb
cmp
xor
xlat
sbb
repz
int3
inc
adc
mov
fcomp
push
mov
repz
cli
loope
jns
lea
push
rcr
and
movsl
jg
mov
outsl
nopl
sub
js
or
pop
shrb
cld
and
mov
adc
pusha
mov
stos
sub
and
or
scas
push
outsl
pop
pop
push
mov
xor
mov
mov
add
cmp
jp
jle
pushf
inc
test
xor
or
cli
pop
icebp
inc
and
daa
xor
cmp
fwait
in
adc
movsl
add
pop
jl
pop
xchg
fistps
es
mov
inc
push
cmp
subl
es
lret
inc
xchg
xchg
mov
pop
push
test
aad
push
cmp
jge
pop
shlb
js
data16
mov
je
cld
or
sub
rol
ss
pop
pop
mov
push
cmp
xor
jmp
cmovl
xchg
pop
push
aas
pop
mov
push
mov
pop
and
mov
cmp
popf
push
fdiv
xor
sub
movsl
adc
std
sbb
sub
repnz
mov
scas
push
jl
dec
sub
bound
adc
lcall
lret
fxch
cwtl
push
shrb
pop
xor
cmpxchg8b
push
lds
mov
mov
notl
cmp
or
xor
mov
xlat
movsl
jne
push
pop
mov
adc
cli
mov
fwait
mov
add
adc
mov
jmp
arpl
movl
or
fdivs
lds
cmpsb
add
dec
pop
stos
push
int3
roll
imul
fldt
mov
xor
sbb
sahf
sahf
jge
aad
jae
out
and
add
pop
imul
mov
mov
cmp
xchg
fidivs
fwait
mov
sbb
lret
pop
push
push
xchg
xchg
push
dec
cmpsb
and
int3
test
pop
mov
ficompl
and
clc
pop
inc
int3
sub
rolb
mov
mov
mov
mov
leave
jno
in
add
mov
cmp
xchg
std
js
aaa
mov
scas
jle
push
mov
push
sbb
clc
xor
pop
lret
aas
pop
dec
cmp
mov
mov
mov
enter
or
shlb
cmc
mov
dec
ja
js
push
sub
and
mov
jp
hlt
or
xor
or
lea
pusha
sbb
ret
test
mov
rcll
pusha
out
dec
mov
mov
insl
aas
dec
cwtl
imul
xor
mov
and
imul
lahf
xor
mov
and
adc
sbb
cltd
cs
jle
jae
lret
icebp
rcrl
push
rclb
call
jns
test
sub
stc
xchg
mov
xchg
jle
xchg
dec
popa
add
jl
or
out
shl
adc
xor
lods
pop
or
pop
ss
push
movups
pushf
xor
cmc
adcb
jne
push
shrl
lock
int3
popf
xor
pop
data16
test
fs
push
loopne
cmc
int3
loope
or
test
clc
fnstenv
repnz
pop
fcmovnu
xor
popf
push
sbb
mov
and
imul
sub
jae
mov
pop
dec
addb
and
mov
jecxz
pop
out
int3
inc
push
sub
je
cmp
mov
sbb
mov
pusha
xor
fiaddl
shl
xchg
cs
and
aad
jne
andnps
and
ret
cmp
sub
test
add
fidivs
out
out
sub
sub
lock
dec
scas
faddl
call
mov
popf
loope
inc
push
pop
ss
mov
fisubrs
adc
and
cs
xorl
imul
pop
daa
filds
adc
or
inc
stos
aaa
cmpsb
popa
dec
imul
andl
rclb
jb
push
pop
or
push
mov
pop
pop
rcrb
mov
les
ret
sbb
or
in
js
or
ficoml
adc
push
fs
ret
xor
lcall
and
jg
int3
mov
fcomp
test
notb
lods
push
and
xor
jmp
mov
in
mov
sbb
jno
pop
jge
mov
cwtl
xchg
das
inc
dec
mov
fninit
sbb
ljmp
push
cmpsl
pop
repnz
xchg
adc
gs
inc
add
sub
xor
cmpb
movsb
mov
push
fdivrs
mov
xchg
jnp
inc
insb
push
cltd
pop
mov
mov
push
xchg
je
shll
dec
je
xor
inc
jmp
xor
int
aad
push
jp
jno
pusha
xorl
xchg
pop
and
test
popf
push
roll
or
sbb
xchg
outsl
inc
lock
cmpsl
lcall
sti
or
jge
adc
ficoml
dec
lahf
call
cmp
icebp
enter
and
inc
xchg
leave
pushf
jge
adc
mov
imul
orb
out
in
mov
dec
gs
pop
and
mov
mov
mov
icebp
xchg
jnp
iret
and
pop
jg
cmp
stos
sub
arpl
pop
hlt
inc
adc
test
dec
cmc
popa
call
call
bound
add
fcom
pop
inc
and
idivl
cltd
xor
pop
in
xchg
xor
push
mov
and
out
adc
cs
adc
xchg
inc
and
stos
cmp
and
pop
es
xor
mov
repz
inc
and
xchg
xchg
bnd
stos
push
test
outsl
dec
sub
inc
aas
cmpsl
mov
xor
aaa
enter
mov
mov
into
jns
test
negb
ret
mov
push
inc
cld
add
jnp
pushf
mov
sbb
sbb
movsl
test
mov
out
testb
test
sbb
mov
decl
push
mov
cltd
mov
or
incb
inc
jae
mov
repz
xchg
mov
out
sbb
rcrb
mov
addr16
js
inc
and
mov
mov
sbb
aaa
pop
pop
jle
popf
mov
ljmp
push
xlat
hlt
add
rclb
outsl
repnz
ljmp
dec
xchg
das
ret
xor
es
inc
cwtl
mov
es
add
in
sbb
sub
dec
pop
enter
push
lret
ffree
and
dec
sub
cmpsb
add
cld
or
outsl
hlt
mov
jmp
ja
es
loope
ret
dec
inc
adc
cmp
pop
sarb
sbb
mov
ds
sbb
inc
or
imul
jno
jge
shlb
pop
xchg
mov
fdivrs
stos
jge
mov
mov
xor
popa
test
xlat
push
fimuls
movsb
fimull
outsl
sarl
lock
jmp
addl
jnp
dec
pop
mov
int3
mov
sub
mov
addl
push
sub
or
pop
sub
fiadds
xchg
jae
sub
mov
adc
std
push
sarb
pushf
scas
jne
mov
ja
xor
cmp
mov
pop
pop
out
inc
fsubrl
jmp
add
std
xor
insl
stos
fwait
mov
pop
cmc
mov
imul
cmp
jge
shrb
sbb
pop
sub
or
jge
mov
dec
fs
xchg
stos
pop
loope
dec
ja
pop
push
testl
sbb
lock
sub
and
or
cmp
popa
sbbl
push
push
and
out
fsubrl
add
lret
lcall
ret
pop
cmpsl
js
mov
mov
mov
inc
pop
in
fildl
xchg
cmp
or
into
sbb
imul
std
dec
xlat
push
adc
scas
imulb
xchg
mov
outsb
imul
mov
inc
in
test
mov
mov
pop
iret
stos
ret
fnsave
arpl
rcrl
stc
pusha
cmp
popf
jl
dec
and
rcl
pop
add
in
sbbl
std
dec
mov
cvtpi2ps
mov
dec
pop
cmp
sbbb
mov
mov
iret
scas
loope
mov
add
loop
xor
sahf
mov
jg
out
aaa
or
lret
out
out
movsb
adc
call
fsubrl
dec
jl
movsb
push
jg
jg
aaa
xchg
imul
stc
jo
xor
pop
stos
mov
fidivs
push
notb
enter
adc
inc
testl
dec
push
add
add
push
mov
clc
out
add
leave
outsl
push
jge
pop
and
jmp
jnp
arpl
jmp
add
sahf
iret
sbb
xchg
data16
pop
pop
xchg
incl
jae
call
sub
int
pop
pushf
xchg
jbe
repnz
push
jns
mov
aad
sub
mov
sub
inc
insl
sbb
and
pop
mov
adc
lea
jle
test
xor
cs
cmpb
rcl
clc
movsb
mull
cs
inc
cmp
mov
rolb
les
movsb
int
jns
dec
mov
insb
mov
sub
and
ret
mov
jo
ds
pop
bound
xlat
imul
orb
jle
dec
in
mov
negb
mov
xchg
movsl
adc
mov
in
dec
js
sub
lods
inc
adc
mov
cmp
pop
xlat
sbb
jmp
dec
out
or
jg
cmpsb
lret
lods
or
rcll
test
jns
cltd
inc
pop
or
inc
das
inc
scas
dec
aad
movsb
movsb
inc
jp
xchg
fldt
mov
das
and
adc
cmpsb
xchg
outsb
cmpsb
fs
push
inc
cli
jle
into
dec
jge
lret
fwait
mov
in
jg
cmp
movsl
adc
adc
hlt
pop
outsl
push
inc
negl
inc
jle
call
scas
inc
pop
mov
int3
inc
mov
push
xchg
hlt
aam
pop
leave
notl
out
cwtl
pushl
hlt
and
popa
in
fdivs
add
jnp
aaa
jmp
xchg
push
mov
sahf
cmp
jecxz
adc
push
js
repz
sbb
push
popa
jle
int
or
pop
sbb
jp
dec
jle
lahf
fsqrt
movsl
cmp
test
mov
cmpsl
fsubs
add
orb
loope
sub
sbb
and
and
or
mov
pop
pop
adc
ja
pop
mov
mov
dec
push
inc
adc
dec
dec
sbb
pop
jb
dec
xor
cs
bound
cltd
add
cmpsl
ret
inc
shrl
add
push
jnp
and
fldcw
pop
mov
imul
dec
sub
xchg
out
add
das
xchg
dec
mov
stos
enter
ds
cwtl
add
dec
cwtl
in
fidivrl
jo
test
xchg
ljmp
cmpsb
push
daa
dec
fistps
je
pop
loope
test
out
mov
adc
cmpb
andps
pop
add
sbb
push
das
xor
cmp
adc
or
das
cs
sub
dec
pop
inc
push
inc
dec
inc
lods
shll
ret
mov
mov
fs
xchg
sarl
sahf
fidivrl
fwait
xor
repz
xor
add
fidivrl
cmp
out
movl
push
aaa
xor
and
pop
adc
mov
rorl
stc
or
jge
movsl
add
stc
lahf
repz
inc
icebp
notl
jmp
test
nop
mov
pushf
nop
addr16
jnp
sub
mov
ljmp
loop
adc
rol
xchg
mov
and
mov
jne
test
movsb
xor
dec
push
sahf
add
fidivs
and
jae
ja
dec
sbb
or
pop
int3
jl
cld
shl
lods
fcmovnu
addr16
loopne
outsb
push
sbb
xchg
xchg
pop
outsl
mov
aad
into
mov
and
or
mov
sub
cmpsb
pop
mov
test
inc
js
shll
mov
dec
gs
mov
jge
xlat
into
fists
cltd
jmp
aas
ss
and
nop
pusha
and
clc
and
jno
lret
test
adc
daa
push
std
jo
fistpl
cmp
mov
push
push
pop
sbb
call
dec
imul
inc
adc
arpl
lea
or
ror
lods
jo
test
push
fisubl
mov
lret
lahf
shll
or
inc
mov
test
int3
cli
movl
es
dec
cmp
lds
sar
push
roll
add
pop
mov
jno
fwait
and
fs
shlb
outsb
inc
add
jns
add
cmp
stos
xchg
nop
les
notl
ds
insb
xorb
idivb
push
ss
xor
and
icebp
stc
sbb
pop
movsb
fwait
xchg
cwtl
adc
mov
pop
repnz
pshufw
push
in
lods
cmp
cmp
fs
lds
test
xchg
test
pushf
icebp
mov
xor
hlt
push
sub
mov
je
push
add
push
push
jp
sahf
add
rorb
inc
inc
mov
xor
dec
xor
out
ds
or
jg
in
cltd
xchg
lock
xchg
mov
and
xor
push
xchg
pusha
insb
cli
xchg
flds
add
sahf
repnz
sahf
or
pop
inc
inc
mov
inc
jno
sub
mov
data16
dec
pop
hlt
jmp
push
pop
sbb
push
adc
aaa
insb
mov
les
jl
mov
push
sbb
jmp
sbb
scas
xchg
or
or
inc
jno
sbb
aas
adcl
mov
out
adc
cs
fldt
repnz
repnz
int3
lahf
lea
fmul
outsb
cmpsl
loop
ror
sbb
fnstenv
mov
or
sub
push
lcall
mov
cmp
lahf
mov
push
adc
jmp
push
xchg
xchg
mov
repnz
xor
cli
inc
insb
xchg
inc
xor
push
mov
xchg
xchg
mov
addr16
sbb
sub
aaa
or
cmp
dec
xorb
fstpl
xor
test
cli
dec
lret
add
in
push
lahf
sub
aas
xchg
aam
imul
jnp
pop
dec
rcrb
in
mulb
mov
inc
roll
sahf
jl
aad
push
jecxz
xchg
mov
jmp
insb
sbb
ret
sbb
push
push
pop
icebp
sbb
mov
cs
cli
add
mov
push
add
xchg
and
dec
jmp
aad
jb
data16
sbb
jecxz
jl
insl
in
fcompp
mov
mov
xor
dec
int
jmp
and
push
mov
das
pop
sbb
mov
fisttpl
daa
push
jae
mov
test
mov
dec
mov
jg
lock
push
sbb
lods
xchg
hlt
cs
or
cmp
or
and
mov
sbb
sbb
inc
dec
push
xchg
xchg
int
jb
add
ljmp
inc
inc
imul
mov
repnz
inc
lods
pop
mov
sbb
mov
push
es
mov
or
bnd
test
movsb
fsubs
cmp
ds
xor
pop
push
hlt
cmp
cmp
and
aam
fldenv
add
jp
ret
testl
xchg
mov
sbb
cli
test
cmp
adc
cmp
sbb
stos
cmc
xchg
sub
jp
test
ficompl
sub
mov
mov
insl
inc
aas
adc
mov
stos
mov
call
pop
pop
jbe
test
mov
dec
mov
cld
cmp
pop
push
rol
push
push
jnp
push
add
mov
inc
xor
out
pop
mov
xlat
adc
add
insb
or
inc
xchg
dec
into
lcall
pop
ret
mov
cwtl
shr
les
sub
mov
sub
jle
orb
xchg
jecxz
sub
mov
popl
sarb
inc
imul
loopne
mov
je
stos
aad
adc
lea
sbb
inc
adc
stos
or
js
push
jl
xchg
cmp
jae
repnz
push
pop
int
int3
or
mov
in
ret
xor
mov
test
and
aaa
push
xor
int
push
int
sbb
or
jo
sbb
in
stos
jb
cvtpi2ps
mov
pop
sbb
xor
sahf
lea
call
iret
das
lods
pushf
movsb
out
mov
lods
mov
adc
mov
adc
mov
adc
sbbb
mov
xor
outsl
fs
inc
xor
jg
inc
je
pop
push
loopne
or
pop
std
repz
xchg
or
lds
inc
mov
adc
push
cli
and
dec
xchg
fimuls
add
cli
sub
or
pop
xchg
push
xor
fadds
inc
stc
in
ss
or
mov
jl
popf
cmp
scas
cmpsb
dec
loope
mov
fcmove
scas
data16
adc
jno
movsb
dec
xchg
mov
and
mov
cwtl
sti
cli
stos
cmp
jnp
push
scas
pop
lea
hlt
fistl
fwait
sbb
adc
orl
aas
mov
xchg
outsb
add
inc
sbb
xchg
sub
and
lods
xchg
dec
add
jg
aam
idiv
or
out
inc
fsubrl
push
add
dec
dec
push
mov
xchg
scas
out
sbb
aam
insl
pop
xchg
insb
cmpsb
sahf
mov
sbbl
sbb
mov
pop
mov
scas
stos
lods
dec
insb
pop
fs
push
and
sbb
or
daa
rcrb
daa
cli
das
movsb
rorl
cmp
cli
fwait
shrb
rclb
lea
pop
scas
repz
xor
mov
incb
cmp
ret
xchg
sbb
mov
loopne
bound
sbb
shlb
jno
data16
lods
ds
aaa
insl
scas
dec
cmp
pop
xchg
test
das
mov
xor
adc
adc
daa
subl
gs
inc
sti
dec
cmc
bound
gs
fidivs
loopne
inc
ficoml
and
mov
gs
push
lret
arpl
jge
or
enter
xchg
sbb
xchg
pusha
or
add
push
mov
stos
fcomip
fidivrs
in
jne
sub
loop
in
sub
pop
jg
add
das
pop
mov
arpl
lds
test
sbb
mov
sahf
jle
and
cmpsl
inc
sub
or
into
sub
icebp
out
or
pop
dec
cmp
xor
or
daa
dec
pop
mov
xchg
mov
ret
xchg
testl
adc
lahf
sub
and
andb
loopne
push
out
addr16
pushf
scas
addr16
cli
loop
sub
xchg
lock
lahf
sbb
lea
xchg
cs
faddl
mov
icebp
repz
and
cltd
xchg
and
cltd
push
ret
and
xchg
leave
int
mov
inc
lahf
jbe
push
dec
jecxz
stos
icebp
repz
popf
sbb
jnp
lock
lcall
push
cmp
jg
jno
dec
jmp
out
adc
repnz
in
rorl
lds
repz
cmp
push
out
adc
mov
pop
stos
dec
ret
imul
sbb
xchg
daa
add
inc
cmp
cli
shlb
lea
add
xchg
outsl
jle
out
test
fildll
mov
arpl
or
inc
data16
clc
push
scas
jo
sub
push
jmp
in
sahf
pop
xchg
aas
inc
pop
lods
es
and
or
inc
ret
push
jp
xor
sbb
daa
or
pop
mov
sti
sbbb
fdiv
xchg
xlat
jle
test
cmpsl
xor
popa
push
add
stos
nop
pop
in
fldt
jmp
je
imulb
fwait
or
gs
sbb
mov
inc
cmp
rolb
jl
mov
outsb
int3
shr
cmp
andnps
adcl
js
scas
ret
dec
in
or
sti
inc
push
repnz
clc
les
jmp
lret
mov
dec
mov
jo
in
jecxz
outsl
mov
lods
and
and
rorl
sbb
dec
jb
fs
jne
xor
ret
insb
aam
ljmp
xor
lds
mov
inc
rolb
rcll
jl
les
inc
xor
fsubs
push
sahf
test
sub
xchg
inc
adc
pop
inc
dec
outsb
adc
adc
enter
insl
and
repnz
dec
fwait
jp
shlb
sti
int3
inc
or
push
cwtl
mov
xchg
sarl
sbb
add
dec
out
shlb
jp
sub
mov
out
out
mov
sti
out
jmp
sbb
ss
lock
insl
jnp
xor
leave
test
ss
xor
jns
lret
mov
test
and
stos
xchg
out
imul
add
mov
movsl
push
mov
mov
iret
fdivl
movsl
das
lcall
cmp
cmp
add
lret
add
adc
push
pop
cs
andl
pop
idivl
push
and
enter
push
leave
pop
and
faddp
negl
cwtl
sahf
mov
popf
xchg
push
fstpl
sbb
jecxz
out
add
dec
fwait
sub
ja
sbb
movl
int3
cmp
cmpsb
es
sbb
sbb
andl
leave
fiadds
or
call
adc
jb
gs
data16
mov
repnz
cmp
pop
inc
pop
pusha
push
push
pop
pop
hlt
inc
gs
push
push
adc
dec
daa
stc
sbb
mov
popf
push
data16
or
clc
pop
push
fisttpl
ret
inc
pop
cmpxchg8b
aaa
xchg
gs
pop
hlt
push
aas
and
in
in
jmp
xchg
and
xlat
mov
mov
sbb
sbb
rclb
icebp
pop
in
clc
jmp
jp
xor
xor
and
lods
xor
add
stos
add
mov
and
and
int
mov
mov
sbb
add
mov
fildl
ljmp
sbb
push
sbb
daa
sub
clc
lods
andb
mov
call
stos
pop
call
fistpl
notl
dec
loop
mov
push
hlt
fmul
push
mov
or
lods
pop
mov
sub
in
and
mov
lret
lret
cli
mov
lods
rcrb
xchg
fidivs
mov
jae
dec
jb
mov
outsl
adc
and
and
mov
adc
inc
mov
cmp
cld
mov
in
and
pop
fidivrl
mov
fimull
aad
pop
and
add
in
scas
in
pusha
cmp
xchg
lcall
mov
push
mov
repz
cmp
lret
into
sbbb
outsl
mov
and
pop
mov
push
iret
mov
mov
cmc
and
jbe
push
fbld
rolb
scas
ret
subl
je
xchg
pcmpgtb
jno
adc
cwtl
mov
push
xchg
test
pop
xchg
cmpl
push
mov
fs
pop
pop
jb
je
push
lcall
out
call
mov
push
mov
daa
xchg
insb
push
and
idivl
orb
loopne
leave
popf
inc
jbe
add
add
lret
mov
aas
jge
shrb
add
pmulhuw
xchg
adc
rol
in
std
ss
ja
std
sub
insb
es
sbb
lock
or
outsb
pmuludq
pusha
lods
sub
shl
inc
div
ds
lahf
xor
push
loopne
mov
aas
mov
or
push
push
jecxz
dec
mov
bound
stos
push
sbb
aam
nop
rcrl
jp
lods
adc
ljmp
icebp
movsl
cmpw
add
cmp
mull
scas
push
cmp
and
xchg
mov
mov
les
push
pop
xchg
lds
mov
or
add
xor
fisttpll
outsb
test
add
repz
imul
lret
leave
sarb
adc
sbb
mov
daa
dec
negl
enter
jbe
int
jbe
pusha
sub
test
rcl
mov
stos
mov
jbe
arpl
testb
jb
gs
and
in
push
inc
scas
out
add
sbb
loope
fistpll
jno
mov
jno
push
filds
mov
sub
sub
inc
ja
jno
lret
cmc
push
fdivs
mov
sti
push
sbb
stos
sub
mov
nop
lret
cmpsb
fstl
pusha
out
sti
in
mov
aaa
fsubr
int3
test
jle
gs
andb
sbbb
in
fidivl
cltd
inc
aaa
adc
sbb
inc
mov
dec
fsubrl
mov
in
jg
loopne
stos
je
or
xchg
add
fistl
sub
pop
jecxz
ret
fs
jmp
mov
mov
mov
pop
fwait
iret
pop
std
arpl
push
push
and
adc
lods
sbb
movsl
aaa
test
mov
popa
fcompl
pop
xor
push
pop
sahf
dec
out
iret
lcall
push
or
pop
sbb
les
or
sbb
sarl
cmp
push
xchg
jo
mov
mov
mov
into
repz
icebp
dec
cli
pop
jns
cltd
js
or
cmp
inc
int3
test
sub
dec
popf
pop
xchg
push
in
dec
movsb
in
sub
jbe
test
push
xchg
or
lret
cmp
por
sbb
dec
add
icebp
mov
or
mov
xor
sbb
lret
das
je
pop
ds
jmp
lahf
jp
adc
cmp
cmp
in
mov
xchg
mov
shlb
je
setno
mov
je
adc
pop
jns
and
pusha
xchg
jns
xchg
and
sub
pop
xchg
out
inc
or
mov
jge
addr16
imul
data16
xchg
loope
push
test
push
jbe
imul
add
jecxz
or
sub
mov
mov
inc
ret
xchg
push
pusha
push
scas
and
rolb
xor
cmp
fwait
add
gs
and
cmp
lods
outsb
ficoml
add
ficompl
lcall
shll
and
divb
arpl
adc
int3
add
fs
negl
jnp
sbb
imul
aas
mov
dec
add
mov
test
loopne
jno
sahf
cmc
imul
outsb
mov
mov
and
cltd
mov
fnstenv
je
sub
mov
mov
js
loope
push
jnp
pop
movsb
imul
lods
xchg
lods
std
decb
pop
lods
add
fs
pop
je
inc
cmpsl
call
in
ret
mov
dec
out
jmp
mov
movsl
rorb
mov
or
mov
sub
movsb
xchg
aad
pop
rcr
add
jp,pn
daa
lock
mov
push
cmpl
mov
aas
inc
cli
and
xchg
sub
addl
cwtl
lahf
shlb
and
test
pusha
xchg
sub
in
cld
loope
sub
lret
mov
or
mov
jl
mov
jns
push
pop
xchg
mov
adc
leave
adc
pop
mov
pop
gs
and
rolb
push
pop
mov
lahf
cmpsl
cmp
mov
addl
aaa
push
out
cwtl
sbb
jb
xor
data16
mov
sub
adcl
lret
ret
jl
rolb
mov
out
xchg
lock
lret
mov
pop
jo
and
lea
cmp
or
mov
jne
jnp
aas
mov
fimull
flds
and
pop
mov
dec
cmp
ret
adc
dec
shlb
jecxz
cmp
push
in
daa
fidivl
jge
lds
ss
outsl
mov
inc
pop
dec
inc
test
sub
sub
pop
shrl
mov
icebp
repz
and
sahf
imul
jo
pop
addr16
movsl
cmp
pusha
stos
xor
push
scas
fdiv
jo
mov
in
inc
les
sbb
jo
daa
data16
cli
bound
es
and
dec
sahf
xchg
mov
add
dec
xchg
mov
pop
pop
inc
bound
push
xchg
pop
cmpb
sbb
xchg
push
js
inc
mov
mov
xchg
daa
in
lahf
pop
notb
leave
adc
mov
repz
add
ljmp
js
les
xor
movsl
fdivrs
adc
push
rcr
fcmovnb
sbb
mov
loope
cli
call
sbb
sarl
add
fdivrp
xchg
xor
icebp
mov
mov
shl
jnp
ja
mov
stc
xchg
jo
aad
test
xchg
scas
sbb
adc
push
sbb
xchg
mov
jb
or
mov
test
xchg
ficoml
xchg
cmp
push
pop
stc
das
cld
xlat
scas
nop
sub
fwait
test
addb
mov
sub
mov
int
inc
lret
mov
pop
mov
out
and
cmpl
and
mov
test
xor
jnp
xchg
jecxz
arpl
nop
pusha
lods
xor
xchg
cwtl
cmp
insb
push
pop
xlat
imul
lods
sub
bound
mov
call
xor
mov
or
mov
andl
ror
pusha
out
xchg
jns
popf
mov
nop
loope
dec
movsl
push
icebp
fs
jmp
mov
popf
adc
jb
popf
imul
lods
mov
jae
pop
popf
add
pop
xor
pop
xchg
bound
jge
jmp
cmc
sub
adc
rol
sbb
ds
xor
repz
scas
mov
mov
mov
cmpsb
pusha
sub
add
out
ret
aad
add
stc
leave
aas
mov
faddl
xlat
push
repz
imul
jge
sbb
cwtl
loop
ret
aam
xchg
jmp
sahf
mov
mov
push
pushf
dec
lahf
iret
ds
ret
or
jnp
fnstenv
bnd
or
jno
sbb
xchg
jmp
jne
lods
or
jge
out
gs
dec
cmp
jns
ret
xor
push
mull
xchg
aad
pusha
stc
xchg
out
or
ss
bnd
jns
std
imul
xor
test
aas
cmp
scas
lret
sarl
dec
cli
aad
mov
jo
cmp
mov
sbbl
push
aas
sar
fists
test
cltd
mov
cmpsb
rcrl
sahf
sub
inc
pop
icebp
lcall
sub
and
sbb
ss
xchg
push
out
enter
inc
sub
jno
int
lahf
dec
or
jg
mov
dec
or
mov
mov
cs
sub
jl
cltd
sbb
push
inc
cmp
xor
lea
aaa
lret
imul
push
aaa
pop
or
jl
mov
and
imul
cld
mov
pop
mov
mov
cmp
mov
cmp
fnstsw
test
dec
or
jo
dec
cmp
test
sub
inc
xor
push
fiaddl
stos
cmp
scas
fisubrs
int
sub
dec
xor
or
or
out
cs
lret
gs
mov
lret
insb
xchg
lcall
shll
mov
mov
cld
aad
xchg
pop
dec
xor
jns
sub
rolb
pop
icebp
outsb
dec
ret
dec
xchg
stos
fcomps
cmp
das
jg
xorb
aam
jno
mov
dec
push
stos
jg
mov
sahf
jne
push
addl
int3
jno
mov
aad
pop
mov
imul
les
sbb
mov
fmuls
ret
insb
and
repnz
inc
pop
and
push
cmpl
scas
inc
pushf
mov
and
pusha
loope
jle
ficoms
fwait
cmp
ret
cli
cs
cmp
dec
lods
ds
mov
dec
sub
call
daa
mov
insb
sub
into
inc
inc
pop
cld
mov
xor
repz
sub
andl
mov
cli
inc
push
xor
int3
push
cmp
sbb
lock
sbb
jp,pt
stos
cmc
mov
pop
push
pop
in
loopne
mov
inc
pop
cmp
and
inc
pop
scas
mov
mov
fwait
mov
lahf
sbb
mov
sbbl
movsb
lret
cmpsl
or
sarl
or
mov
loopne
jae
movsb
adc
fdivr
int
mov
mov
fwait
lcall
xchg
jmp
jno
loop
push
lahf
mov
push
into
cmp
into
jg
inc
sub
scas
jl
out
mov
popa
xchg
clc
lea
xchg
mov
push
xchg
mov
out
and
pushf
outsl
subl
dec
scas
notb
movsl
adc
sbb
cmp
lock
inc
hlt
lcall
xor
jnp
js
fdivrs
out
icebp
inc
jbe
movsb
int3
sub
cmp
push
mov
cmpsl
addr16
gs
loop
mov
pusha
fwait
pop
ja
fs
xor
cmp
out
not
and
imul
adc
jle
test
jecxz
sbb
lret
pusha
lods
dec
test
sbb
adc
mov
out
imul
push
ljmp
cmp
notl
xchg
dec
xor
mov
clc
jns
inc
insl
fsincos
lret
int3
ss
cmpsl
pop
repz
mov
or
dec
loop
popf
lret
cmpsl
or
mov
je
idiv
pop
add
xchg
insb
mov
jmp
mov
pop
jo
stos
cli
addl
cmp
push
stos
xchg
lcall
in
loope
sbb
and
and
mov
scas
jns
inc
mov
and
or
bound
mov
or
rcll
out
xchg
push
pop
fidivl
in
jp
insb
fistps
fisttpll
jmp
in
cs
test
pop
push
in
lods
testl
push
adc
cmp
sbb
pop
ret
pop
ret
pop
aad
mov
sub
jge
and
std
ja
or
cmp
arpl
and
inc
mov
xchg
cmp
hlt
xchg
imul
test
pop
or
mov
popaw
cmp
imul
imul
data16
xchg
xchg
pop
outsl
fistps
cld
or
aam
xchg
push
cmp
stc
add
idiv
or
jmp
jno
insl
popa
test
in
inc
sahf
sbb
push
js
jecxz
add
cmp
cmp
mov
xchg
mov
fildll
mov
lahf
hlt
sub
inc
imul
je
das
xor
pushf
adc
mov
adc
paddq
jg
lock
jae
test
cmp
ror
jmp
xor
mov
cs
lcall
xchg
mov
add
jecxz
pop
push
xchg
xchg
iret
mov
pop
mov
pop
pop
jo
mov
cmp
cmp
xchg
movsb
push
icebp
jno
pop
int
pop
lods
lahf
xor
adc
in
insb
lret
push
cltd
cld
test
adc
sub
loop
pop
movsb
mov
inc
lea
cmc
cmovns
xor
dec
inc
cmp
repnz
add
scas
inc
xchg
les
and
xchg
aas
int
lret
fnstsw
es
addl
jl
out
and
filds
and
int3
hlt
mov
loopne
rorb
rolb
notb
sbb
mov
jne
or
aad
dec
leave
shlb
movsb
and
jbe
xor
stc
das
insb
pop
fcomps
and
jno
mov
ror
daa
mov
cld
dec
mov
fadd
xchg
jle
mov
je
mov
mov
mov
dec
popf
dec
mov
shrb
ret
test
cmp
sbbl
idivl
in
imul
lods
scas
add
fimuls
push
and
sub
aaa
xor
and
mov
sub
lea
jecxz
xchg
add
mov
loop
xor
cmpsb
push
inc
imulb
sbb
push
sbb
cmp
ret
out
xlat
sbb
iret
lret
sbb
xor
sub
movsl
fsubrs
xor
xchg
les
fldcw
xor
xor
fwait
stos
ljmp
xorb
std
mov
mov
shlb
pop
jns
mov
data16
xor
sub
sbb
dec
push
inc
sbb
addr16
stos
sbb
pop
into
mov
xor
mov
sub
mov
xchg
scas
jmp
jmp
mov
lret
lret
scas
xor
inc
aas
sbb
push
and
lods
test
movsb
sti
mov
pop
fs
loopne
loop
and
pop
sbb
or
gs
les
fwait
mov
adc
pop
mov
sti
dec
and
dec
fs
imul
pop
pop
xor
jl
fmul
adcl
aaa
adc
inc
cmp
dec
dec
xchg
filds
gs
inc
les
movl
cmc
xchg
pop
mov
inc
loop
mov
jb
enter
pop
or
mov
push
xchg
lcall
clc
adc
and
fs
ja
lock
hlt
add
sub
dec
mov
mov
or
jns
test
movsl
imul
addr16
dec
into
scas
pop
shlb
shlb
fs
fwait
outsl
or
pand
adc
movsb
mov
fstpt
push
cmp
in
outsb
jnp
and
or
add
push
test
and
outsl
fists
ds
and
sbb
out
clc
mov
jno
mov
icebp
mov
arpl
ret
pop
cmpl
es
pop
aam
inc
mov
mov
sarl
pop
push
sub
aaa
push
dec
fsubrs
pop
in
stc
dec
pop
push
mov
mov
mov
mov
pop
outsb
insb
rcll
lock
mov
enter
cltd
inc
repnz
jp
or
ds
xchg
sarl
pop
inc
loopne
popf
nop/reserved
rorl
shr
push
rol
cld
arpl
das
outsl
dec
cmp
mov
pop
cmp
jge
xor
push
adc
out
into
leave
insb
stos
push
outsl
int3
pop
in
xlat
loop
and
xor
cmc
in
icebp
jmp
stos
dec
ret
into
loope
shl
jne
jae
xor
push
or
and
pop
add
adc
mov
jge
js
jno
repz
lcall
fdivs
sub
xor
inc
pop
xor
mov
mov
les
and
subl
sub
iret
add
jmp
sbb
into
pop
shll
cmp
fiadds
into
cmc
or
sbb
mov
fisubrl
rcll
cmp
adc
sahf
test
push
sbb
sbb
jle
adc
push
adc
jl
jmp
push
je
jmp
jns
sbb
push
dec
lret
cwtl
mulb
aaa
shlb
es
jns
mov
mov
outsb
jns
fmuls
xchg
pop
icebp
sahf
ja
gs
lea
mov
ret
and
cmpsl
or
loop
test
pop
pop
dec
mov
jp
call
andl
push
outsl
ds
int3
jl
dec
out
jb
fldenv
rcl
dec
pushf
insl
mov
fnstsw
addr16
xchg
je
push
jecxz
in
xchg
xor
ret
cmpb
xorb
pop
mov
cmpsl
andb
push
int
lahf
mov
sub
rol
or
lcall
aam
add
xchg
aas
dec
std
aad
out
outsb
adc
mov
jmp
scas
mov
adc
cmp
stos
or
xor
fs
add
push
outsl
idivl
imull
pop
or
shr
xor
cmpsb
inc
movsl
mov
jp
ljmp
fbstp
pushf
lea
test
sbb
mov
adc
inc
xchg
jae
inc
fldt
idivb
and
mov
mov
iret
cmp
rcr
pop
lea
mov
fdiv
repz
jb
cs
mov
sbb
push
push
mov
xor
data16
or
in
loop
rcl
icebp
cmp
sub
cmpsl
xchg
xchg
or
scas
pop
std
inc
mov
adc
push
iret
imul
fsubrs
cs
mov
xor
lea
loopne
pushl
shr
stos
sub
jge
lods
xchg
lock
mov
xchg
mov
ret
imul
add
mov
cmp
and
pop
lock
push
enter
cmpsb
lea
mov
and
jmp
xchg
mov
ret
popf
adc
rcr
adc
movsb
ficompl
js
mov
insl
mov
outsl
push
jge
xor
mov
mov
sbb
loop
mov
jp
ja
dec
sub
mov
imul
in
xor
and
cmp
and
xlat
push
imul
pop
sub
push
pop
sbb
hlt
xchg
fists
fiadds
jns
jmp
jge
mov
daa
inc
icebp
xor
int3
pop
push
es
push
cld
sub
add
std
cltd
and
mov
int3
not
daa
jbe
push
push
addr16
test
push
inc
pop
pop
fcomps
and
sbb
push
mov
loop
sub
sub
pop
sub
nop
inc
pusha
repz
aaa
mov
into
int
mov
mov
xchg
jg
imul
dec
loope
lock
jecxz
mov
jl
ret
push
aas
jne
push
nop
in
xor
xchg
cltd
and
rcrl
jno
enter
mov
stos
insl
xchg
sahf
mov
cmpps
add
bound
push
mov
outsl
mov
add
fcmovb
dec
lock
leave
or
xor
inc
lods
inc
std
xchg
push
or
shrb
out
pop
jns
loope
rclb
ss
jo
pop
sub
mov
mov
imul
mov
test
mov
loope
lahf
or
in
call
lret
inc
sti
cld
rclb
gs
mov
cs
pop
pop
das
jle
pop
mov
ja
mov
pushf
notl
mov
aad
mov
lods
mov
jp
dec
divl
gs
aad
push
push
jo
mov
push
scas
std
gs
and
rcrl
or
sub
add
jge
cmp
mov
sbb
mov
mov
jle
adc
test
cmpsb
and
cmpsl
ficompl
xlat
cmp
and
sbb
sbbb
push
ljmp
mov
mov
cmp
fmuls
ljmp
add
rcrl
xchg
lods
std
dec
test
add
adc
add
push
adc
std
sbb
in
lret
inc
xchg
xchg
movsl
in
js
mov
mulb
js
lock
fwait
lds
ret
cmp
add
mov
pop
pop
dec
call
jnp
jno
sarb
repnz
fmuls
mov
xchg
sub
repz
or
mov
imulb
pushf
cmp
cs
pusha
sub
js
cmp
cmp
jecxz
dec
pop
jne
out
push
adc
fdivl
cmp
int3
into
cmp
fstl
in
int3
pusha
inc
xchg
cld
jns
lret
stc
andb
push
fcoms
sub
mov
jmp
nop
adc
pop
jbe
ror
mov
imul
mov
addr16
pop
out
pop
dec
or
cmpsl
das
and
jne
adc
adc
xlat
sbb
in
sti
xchg
cmp
inc
lahf
xor
inc
dec
fwait
es
sbb
stos
lahf
jp
mov
dec
subl
addr16
out
popa
out
stos
jno
jle
sbb
mov
mov
jo
mov
test
ja
imulb
loopne
jbe
imul
and
jo
or
arpl
testb
or
mov
pop
jge
lret
sub
ja
or
arpl
aad
xchg
lcall
insl
pop
xchg
xor
and
cmp
sbb
xor
das
cltd
xchg
pop
jecxz
jl
shrl
sub
mov
sub
inc
push
outsb
repz
loop
adc
movsb
jp
mov
add
scas
cwtl
adc
mov
enter
in
adc
and
xchg
xchg
xchg
test
insb
and
sbb
sub
iret
sub
lret
add
dec
pop
cmp
dec
xor
gs
push
jbe
push
rorb
jo
aaa
add
test
addl
and
imul
jae
mov
popf
inc
jp
pop
pushf
and
xchg
adc
fisttpll
xor
dec
add
ss
add
sub
icebp
insb
pop
dec
stos
loope
mov
mov
sbb
push
gs
mov
lret
mov
dec
stos
mov
pop
pop
mov
les
mov
adc
fs
ljmp
iret
mov
push
out
jle
push
adc
daa
sub
xchg
les
mov
adc
sbb
add
and
xchg
mov
iret
sbb
shlb
mov
push
dec
ds
adc
adc
shrl
iret
jecxz
push
jl
rorl
and
inc
pop
andl
ror
sub
out
or
imul
or
sub
cmp
and
adc
movsl
loopne
cmp
mov
mov
orl
cmpsl
mov
mov
mov
repnz
inc
inc
jo
pop
xchg
adc
cmp
enter
xor
push
fmuls
mov
pop
or
jb
lcall
add
push
testb
leave
inc
and
testl
adc
inc
out
and
inc
jle
decl
pop
jmp
repz
popa
cli
or
push
subl
jl
movsl
mov
cmpsl
push
jae
inc
or
rcll
lcall
jp
jo
in
mov
jg
testl
jg
jnp
sbb
xor
sub
leave
jno
adc
push
fisubl
repz
pop
int
lock
scas
sub
leave
cwtl
fsubs
leave
inc
mov
shrl
pop
aam
loop
adc
add
pop
mov
sub
repnz
iret
pop
sbb
push
cli
dec
add
push
mov
pop
mov
jae
push
pop
test
stos
jne
outsb
repnz
push
lcall
jnp
fnsave
mov
imul
std
mov
mov
test
dec
loope
shll
dec
in
sub
shll
in
cmpsb
adc
fistps
imul
adc
ret
test
ret
loope
dec
inc
dec
sbb
mov
jne
mov
jb
pop
push
jae
jne
sub
inc
in
out
outsl
sar
into
pop
xorl
xlat
push
mov
out
nop
lea
cs
nop
add
js
sbb
ret
inc
push
cltd
incl
cltd
inc
arpl
fcmove
add
push
and
xor
inc
push
inc
jnp
pop
pop
frstor
inc
std
stos
test
dec
aad
in
dec
dec
outsb
les
cli
add
pop
cmp
or
xchg
and
lahf
sahf
jge
or
lret
les
gs
mov
aas
leave
insb
inc
pop
fildll
nop
mov
mov
int3
fcmovbe
cmp
jbe
loopne
or
inc
cld
or
xchg
jbe
jle
mov
push
aaa
ret
cmp
jo
inc
nop
cmp
in
jae
gs
fs
daa
inc
add
aad
cmp
dec
xlat
aam
fxch
xor
daa
xlat
pop
out
shr
push
scas
xor
mov
ds
mov
pop
test
adc
in
sahf
loopne
bound
ret
imul
push
je
and
rol
ret
sub
jae
adc
dec
outsb
imulb
mov
orl
mull
loopne
jns
xor
push
shlb
xor
adc
add
stos
rclb
cmc
shl
outsl
jecxz
mov
xor
or
mov
cmp
inc
mov
mov
xor
xchg
mov
scas
and
jnp
enter
inc
push
inc
push
xlat
stc
outsb
cltd
cmpsb
or
enter
push
sbb
cmp
pushf
mov
cmpsb
cs
dec
add
mov
mov
mov
jp
push
notl
enter
fsts
sub
mov
or
push
pop
or
andl
outsl
ja
std
mov
int3
inc
dec
fs
leave
inc
js
inc
add
outsl
fwait
mov
daa
cs
aam
push
jns
jae
imul
xchg
dec
outsl
mulb
sti
and
loopne
popf
loop
ret
cmp
mov
sub
inc
mov
sbbb
push
xlat
subb
outsl
add
push
pushf
xchg
lds
insl
test
adc
cwtl
inc
test
mov
push
imul
jne
or
lds
es
xchg
mov
xchg
and
mov
fsubl
les
mov
xchg
scas
adc
aaa
or
push
push
dec
lret
in
lahf
icebp
stos
je
icebp
adc
push
call
mov
pop
mov
jne
popl
push
cld
bound
int3
lcall
add
lcall
fidivrs
cmpl
mov
cmp
cmp
xchg
fwait
lret
lock
outsb
inc
pop
scas
les
cli
dec
mov
jp
inc
daa
xor
or
jns
ret
mov
call
pushl
cmpsl
pop
jo
mov
pushf
les
cmp
sub
inc
push
pop
add
fdivrs
ret
insb
outsl
cmp
les
mov
and
add
imul
loop
sub
pop
out
insl
clc
in
pop
cli
std
pop
dec
addr16
xchg
xchg
xchg
fadd
mov
nop
outsl
jno
in
insb
mov
xchg
int
add
gs
decl
movsl
mov
jge
je
dec
leave
adc
xor
inc
mov
popf
lcall
mov
pusha
in
sbb
iret
shrl
insl
insb
cmp
xchg
fsts
lods
dec
push
xchg
lret
or
out
ret
jmp
fwait
adc
pop
js
jp
mov
pop
sbb
fisubl
sbb
adc
xchg
cli
add
ret
sti
outsb
test
jle,pn
icebp
movsl
rol
test
int3
mov
lods
test
fistpl
bswap
add
mov
dec
sahf
sbb
cmp
dec
movl
clc
sub
add
or
add
fisubs
jle
mov
out
fxch
mov
or
cmpsl
repnz
rorl
fwait
dec
lahf
push
orb
decb
or
lods
lret
jp
adc
and
call
mov
xchg
push
fbld
test
push
data16
add
nop
pop
or
outsl
pop
add
icebp
inc
adc
imul
sahf
inc
mov
in
mov
xchg
mov
dec
daa
scas
das
jbe
rolb
div
push
imul
mov
repnz
and
fstpl
xchg
mov
cld
repnz
test
sahf
jmp
out
test
lcall
lods
into
sub
pop
sub
inc
popf
shrl
dec
cmc
iret
call
adc
out
loop
bnd
xchg
jmp
sbb
outsb
nop
and
lcall
jle
mov
xor
dec
mov
and
adc
and
inc
sbb
jmp
loop
or
out
inc
fsubrl
mov
leave
sahf
add
push
jbe
pop
mov
movl
sbb
xchg
sbbb
ljmp
add
stc
stc
xchg
neg
cmp
fdivs
mov
cmpsb
jg
popa
repnz
sbb
push
xor
dec
push
imull
in
adc
stc
outsb
mov
pop
push
or
cld
mov
rcrl
das
test
dec
call
jl
sub
xchg
cmp
cmp
and
xor
pusha
cmp
pop
pop
rolb
lock
jb
cmpl
mov
xorb
shlb
fimuls
pop
mov
cmp
inc
jg
add
jp
pop
inc
orb
adc
lods
int
mov
out
mov
inc
aaa
or
shll
sub
jb
xchg
dec
fmul
sbb
movsl
jmp
imul
or
and
lods
mov
lods
lret
sahf
mov
je
ljmp
clc
xchg
fistpl
ljmp
adc
jmp
jecxz
sar
jl
int
add
cmp
pop
add
inc
out
orb
push
jecxz
jge
cli
loopne
add
sub
dec
test
fbstp
or
mov
rorb
shlb
mov
iret
push
insb
fstl
jp
mov
sub
inc
jno
inc
jno
fcomp
int3
inc
pop
cmp
or
dec
or
lods
ficompl
adc
rcl
imul
mov
push
pop
mov
aaa
addr16
out
add
lds
sbb
cmp
les
sub
add
sub
ffree
movsl
mov
movsl
pushl
sub
adc
jmp
dec
mov
jl
lret
aas
sub
sbb
xchg
stos
aaa
shll
jbe
insb
jne
mov
pusha
xchg
mov
popa
cmp
jecxz
jo
pop
pop
shrb
fdivrs
aas
xor
rcr
cmp
mov
inc
add
dec
stos
loop
mov
pop
push
out
out
aas
xchg
sbb
hlt
mov
lret
pop
out
jae
xor
aas
mov
pop
cmp
js,pt
and
lret
cmp
loopne
lahf
dec
dec
or
mov
cmp
pop
sub
push
add
cmp
insl
mov
xor
idivl
les
hlt
gs
in
mov
or
cmp
jmp
popa
enter
in
jg
push
fadds
ljmp
mov
cmpsl
test
cmp
jge
jmp
in
xchg
jg
mov
or
push
mov
push
add
repz
jnp
stos
adc
mov
jmp
adc
inc
int
mov
xchg
cmp
in
out
stos
mov
aam
jns
loop
jne
pop
mov
mov
inc
pop
push
aad
add
inc
cltd
aad
mov
push
addr16
cmpl
mov
popf
fcomps
pop
imul
sbb
aad
mov
rcrl
xlat
inc
sub
outsb
xchg
in
xchg
in
and
lret
adc
inc
out
add
enter
mov
inc
sbb
pop
nop
push
aaa
adc
xor
rcrb
nop
shlb
adc
xchg
test
into
mov
cmp
fnstsw
in
inc
aam
mov
xchg
jmp
rorb
test
inc
int
add
push
arpl
ret
bnd
or
jecxz
xlat
mov
xchg
cmp
dec
sti
imul
aam
jmp
mov
iret
daa
fstpl
sbb
inc
loopne
mov
scas
testl
inc
adc
pop
gs
jae
mov
push
cmp
dec
mov
inc
inc
sub
xchg
adc
ret
insb
pop
push
or
xorb
jbe
insb
and
inc
test
lock
mov
in
sbb
leave
out
push
dec
push
jmp
jno
mov
ss
shl
out
cmp
add
sbb
mov
imul
pop
cmpl
sbb
mov
xlat
out
pop
jbe
das
dec
push
mov
aad
fdiv
jmp
icebp
mov
pop
lcall
add
xor
pop
jecxz
int
imul
dec
xchg
les
test
lcall
jge
adc
jno
lods
out
outsb
shll
cmp
push
or
push
fstpt
outsb
lret
pop
in
dec
inc
jmp
xor
imul
mov
push
and
gs
push
fwait
out
xor
inc
add
mov
inc
lods
mov
inc
dec
push
cli
rcll
push
fistpll
mov
cltd
mov
xor
pop
cmpsl
mov
fcomps
cmpsb
cltd
sbb
lock
push
imul
inc
loop
or
inc
aaa
into
shlb
fwait
fwait
and
mov
movsl
fwait
out
andl
dec
mov
push
icebp
rorl
mov
fs
stos
sub
in
popa
mov
stos
in
je
lret
aam
loope
cltd
leave
mov
rcl
jecxz
cmc
xlat
or
fnstcw
jecxz
adc
xchg
and
movntq
dec
dec
fbld
add
pop
adc
and
idiv
adc
in
test
mov
out
std
ljmp
pop
jne
sub
cmc
movsb
xor
xchg
outsl
add
pushf
dec
adc
mov
push
pop
pushf
or
dec
or
jmp
in
xor
or
push
mov
out
loope
leave
cwtl
mov
daa
inc
scas
jno
adc
std
mov
fs
jbe
stos
data16
fs
out
add
xchg
ffreep
fdivrl
insb
lods
int
xchg
or
pop
sti
fwait
pusha
imul
cltd
adc
jae
dec
scas
std
pop
add
push
in
mov
in
aas
jecxz
leave
jo
mov
cld
lcall
nop
leave
jne
push
mov
sub
cmp
pop
mov
jecxz
aam
jecxz
sub
rcll
mov
fsubl
dec
in
mov
loopne
sahf
push
dec
movsb
fwait
lret
adc
loop
negb
insl
test
aas
pushf
in
pushf
cmp
push
loope
ret
mov
xchg
nopl
cmpsb
arpl
insl
push
or
sub
xchg
fsts
jo
mov
xchg
out
movsb
test
sbb
je
push
mov
and
ret
xor
les
pop
jl
sub
jl
sbb
dec
and
ret
and
jbe
rorl
push
mov
iret
inc
or
data16
inc
mov
mov
movsl
mov
pop
fsubr
test
mov
cmpl
add
dec
dec
pop
vmwrite
aam
scas
push
dec
mov
jne
inc
dec
sti
push
aad
pusha
pop
lods
mov
mov
xchg
xor
fcmovb
testb
pop
xlat
test
adc
addl
mov
jns
out
mov
insl
in
std
test
in
jle
aaa
cmpsb
cmp
addr16
lods
mov
push
jle
lea
fisttps
aaa
sub
inc
loop
in
mov
shrb
mov
outsl
and
sbb
xchg
xchg
out
xadd
dec
push
fists
aas
arpl
test
pop
xchg
mov
mov
les
and
clc
pop
jl
sbb
xchg
repz
jle
es
mov
clc
aaa
test
rol
mov
cmpsl
insl
cltd
push
push
push
les
mov
popf
cmpsl
xor
pop
sub
mov
fcoml
adc
out
movsl
movsl
dec
mov
pushf
xchg
test
jl
imul
mov
decl
movsl
shufps
sub
js
dec
jno
out
jbe
stos
xlat
pushf
test
jecxz
scas
inc
sub
mov
jmp
dec
sbb
out
ds
add
mov
jp
mov
xchg
add
push
sbb
jmp
pop
cwtl
arpl
sub
adc
outsb
je
xchg
cmp
mov
in
dec
test
inc
popa
fldcw
jmp
inc
jp
mov
mov
ljmp
int
sbb
negb
pop
sti
mov
or
inc
dec
dec
jns
mov
outsb
mov
repz
lcall
sub
push
sbb
in
dec
int
orl
adc
xor
xchg
xor
stc
sti
mov
mov
dec
mov
sub
jo
sbb
fbld
inc
or
and
ljmp
xor
in
jae
leave
mov
inc
dec
cmp
movsl
sahf
inc
push
and
ret
mov
xchg
mov
orb
out
adc
in
std
std
lods
ja
pop
fistpll
pop
jg
sub
mov
popa
mov
stc
lcall
int3
dec
or
mov
or
ja
xor
push
loope
out
stos
loop
xchg
insl
xchg
call
xorl
sub
rcr
out
push
mov
push
imulb
sub
stos
or
dec
lds
aad
and
mov
aaa
jae
fstpl
mov
sbb
mov
test
jp
jg
jo
adc
pop
push
mov
bound
and
loope
je
aas
pop
adc
dec
iret
cmp
sub
arpl
mull
sbb
and
sub
in
aaa
pop
sbb
jns
mov
addl
aas
mov
push
lahf
enter
and
mov
cmp
outsl
add
cli
jmp
add
and
and
mov
jl
lcall
sub
jne
push
es
sub
mov
pop
ljmp
ret
sbb
or
and
cmpsb
bound
insb
je
mov
add
aam
pop
add
sbb
pusha
rolb
sarb
fs
jo
add
dec
xor
push
sbb
push
iret
test
adc
mov
sbb
push
sub
jnp
or
and
dec
mov
jmp
fisttpll
aad
mov
xchg
and
fisubl
insb
inc
xor
cmpsl
lds
in
sti
fs
out
cld
inc
fdiv
hlt
adc
jmp
xchg
cmp
lea
xor
lret
sub
jmp
pushf
dec
mov
and
nop
int3
fdivr
mov
test
sub
mov
mov
mov
mov
push
pop
or
jmp
mov
jae
inc
in
mov
jnp
out
mov
pushf
icebp
in
jns
into
push
in
mov
or
pusha
adc
jns
mov
jne
mov
adc
dec
push
rolb
lret
lods
pop
je
decb
mov
icebp
ret
fxch
lret
or
pop
and
repz
push
pusha
bound
icebp
adc
repnz
orl
insb
lds
sub
push
jb
insl
push
rcl
dec
add
sub
xchg
or
out
lret
cmp
test
and
test
lret
sbb
sub
out
dec
aam
int
mov
scas
daa
xchg
jae
fucomp
mov
sub
pop
push
cmp
pop
out
xlat
movsl
in
pushf
push
cwtl
sub
test
jmp
inc
shrb
sar
rcrl
mov
and
push
mov
mov
repz
mov
inc
icebp
jge
jle
pop
mov
mov
test
push
pop
xchg
mov
repz
std
and
out
inc
mov
xchg
pop
xlat
cmp
sbb
insl
cmp
jg
fisubrl
or
stos
push
hlt
lret
jb
subl
mov
push
aam
cmp
dec
add
scas
sub
movsl
icebp
push
loop
in
pop
test
jmp
inc
xchg
sbb
xor
cli
inc
mov
test
or
jle
adc
dec
sbb
pop
test
xchg
push
dec
les
xchg
inc
ret
push
movsl
popf
popf
in
rorb
out
out
adc
push
cmp
dec
in
dec
and
mov
les
push
xchg
ss
pop
popf
cmp
mov
ds
or
iret
inc
push
lahf
in
lret
or
ret
mov
lahf
sbb
or
jo
cld
test
and
lds
add
pop
push
ds
xchg
fxch
outsb
out
cmp
stos
pop
daa
ljmp
push
xchg
mov
popw
imulb
add
daa
add
cmp
hlt
out
in
mov
xchg
xchg
dec
xor
dec
pop
cmp
addl
jle
inc
or
dec
enter
add
sbb
negl
pop
std
pop
add
fidivs
cld
adc
popf
out
dec
fstl
int
jne
stos
hlt
jmp
mov
xchg
insb
in
aad
adc
xor
ret
lcall
mov
mov
ret
cmp
leave
inc
jns
sarl
ljmp
sub
enter
and
dec
push
daa
jnp
int
jb
jg
gs
adc
jo
xor
pop
jge
dec
mov
adc
inc
sahf
sahf
lock
mov
jo
cwtl
mov
xor
dec
cmpsl
push
ja
pop
add
cltd
in
mov
sbb
jbe
and
mov
pop
push
mov
fwait
sbb
test
int
mov
cld
repnz
jns
aad
lds
mov
mov
call
loope
popa
inc
in
repnz
xor
das
mov
or
inc
rcr
dec
cmp
sbbl
lods
pop
inc
outsb
fimuls
pop
sti
aad
xchg
pop
xlat
pop
int3
ret
cli
loope
push
push
lods
inc
pop
dec
jp
loopne
jns
lds
loop
sbbl
push
nop
cmp
sub
ds
aad
jnp
dec
dec
xor
xor
cmp
sub
dec
mov
mov
stos
and
xor
das
call
clc
mov
lahf
pop
out
lret
js
aaa
pushf
xor
inc
or
dec
roll
xchg
roll
loop
std
mov
mov
mov
inc
jecxz
xor
jo
xchg
jecxz
enter
mov
cmpsb
ds
lret
mov
xchg
sub
pop
jecxz
leave
gs
sub
jp
enter
mov
outsb
adc
cwtl
jl
or
fcoml
sti
push
xchg
push
mov
push
sub
adc
inc
xchg
test
pop
mov
jmp
jl
add
pop
jns
dec
in
mov
sar
dec
pushf
xor
cmp
shlb
xchg
push
mov
dec
mov
pop
clc
dec
jl
insl
pushf
sbb
jmp
inc
mov
pop
jmp
mov
dec
inc
shr
out
xlat
into
cmc
dec
fldenv
sbb
imul
dec
movsb
cmpsl
in
sbb
and
and
sbb
xchg
adc
xor
lcall
mov
addr16
xchg
sti
mov
icebp
inc
into
lods
mov
inc
repnz
stos
leave
sbb
mov
mov
push
cmc
arpl
ds
mov
sbb
mov
sbb
pop
push
dec
jp
outsl
cld
sbb
std
pop
aad
xchg
es
and
popa
inc
mov
inc
popa
pop
insl
lret
push
scas
mov
dec
out
xor
and
and
mov
mov
push
lds
adc
shlb
cwtl
in
bound
movsl
inc
dec
lea
sbb
sbb
cmp
std
push
xor
sub
jae
cmp
addr16
mov
outsl
xor
adc
sub
push
add
push
and
popa
mov
adc
mov
push
loop
inc
pop
mov
test
xchg
pushf
vmovaps
pop
lods
sbb
movl
stos
scas
push
sbb
ss
or
cmp
jp
leave
notl
xorl
pop
sub
jl
cwtl
mov
scas
mov
mov
or
push
loopne
jbe
int3
add
mov
sbb
xlat
mov
cmp
or
push
and
popa
pusha
inc
fldcw
push
nop
out
sub
xchg
dec
pop
das
fxch
scas
ret
push
adc
ret
shlb
inc
mov
ljmp
push
or
lcall
lds
cmpl
enter
fdivrl
fwait
rorb
dec
push
dec
push
clc
fiaddl
push
lea
xchg
pop
data16
sbb
addr16
pop
mov
jae
or
jno
clc
roll
movsb
push
cltd
fwait
dec
push
xor
adcb
fwait
and
add
das
repnz
sub
sub
lock
jno
xor
mov
hlt
outsb
push
push
jp
in
data16
int3
add
lods
sub
test
dec
or
push
and
int3
add
fcomip
out
mov
pop
in
js,pt
int
fnstcw
sub
sub
aaa
int
subb
pop
mov
adc
icebp
mov
jmp
gs
jp
adc
imul
addb
pop
mov
cmp
jne
jo
out
sbb
ret
add
and
pop
lds
stos
test
cmp
loop
iret
mov
mov
push
pop
cmpsl
jge
pop
or
loopne
test
movsl
sbb
pushf
xlat
sub
stos
lret
dec
addr16
data16
pusha
movsl
mov
mov
mov
add
fsub
push
add
xorl
push
rorl
push
fildl
add
sti
inc
mov
dec
push
push
inc
out
xchg
or
sub
dec
dec
call
dec
mov
mov
fldl
jnp
mov
popa
scas
mov
jge
cmp
and
jmp
mov
sub
in
out
testl
movsl
enter
cmp
sub
inc
push
sbb
pusha
mov
add
fadds
jge,pn
pop
ds
xor
rcll
jge
mov
test
clc
into
adcl
fiadds
adc
addr16
mov
clc
cmpsl
or
mov
push
pop
cli
icebp
or
mov
ja
add
adc
dec
icebp
out
adc
adc
and
testb
mov
arpl
fs
jge
mov
repz
int3
insl
lea
negl
sbb
pushf
xor
cmc
sbb
pusha
xlat
dec
out
in
cld
dec
xor
nop
ljmp
sbb
sbb
mov
out
frstor
test
iret
mov
call
repz
test
sub
dec
out
cmpsl
sbb
cmp
mov
das
arpl
cltd
adc
loopne
scas
fsubrl
mov
ja
or
mov
push
fildl
js
fwait
sub
mov
adc
jns
dec
mov
out
roll
mov
mov
jge
das
inc
push
sbb
test
popa
repnz
clc
out
daa
fwait
pop
bnd
cmp
add
or
jbe
add
insl
lahf
adc
cwtl
mov
es
xchg
jns
pushf
jne
stc
iret
lods
shrb
pop
push
xchg
xchg
xchg
sbb
cmc
lock
xlat
iret
out
cld
fcoml
inc
pushl
hlt
xchg
test
mov
scas
daa
or
sbb
inc
add
cld
mov
inc
stc
clc
and
ret
sbb
call
sub
mov
or
and
sub
call
mov
jle
xchg
or
jo
inc
sbb
fimull
test
dec
cmp
dec
sbb
push
iret
jecxz
push
xor
lods
xor
cs
xor
pop
filds
stc
mov
dec
sti
ljmpw
mov
xchg
sbb
add
stc
add
mov
or
aas
or
xor
imul
loop
cmc
jmp
mov
popf
cmc
dec
leave
imul
jno
shll
xchg
imul
test
mov
or
inc
fisubrs
out
sarb
sub
inc
xor
add
das
sbb
mov
push
aam
jg
stc
and
addr16
movsb
fcoms
push
xchg
repz
jl
push
or
and
sub
repnz
fstpt
adc
sub
rcrl
out
xchg
scas
pop
mov
sub
push
jne
jmp
dec
lcall
icebp
or
inc
sub
pop
push
jmp
jo
mov
push
int3
pop
push
dec
jno
test
das
out
dec
rcrl
or
jns
jle
push
cltd
ja
cmp
xchg
mov
mov
push
outsb
mov
dec
lcall
fs
jmp
test
cmp
or
fs
cli
push
jmp
enter
cltd
roll
jnp
pop
loopw
ret
popf
sub
jnp
pinsrw
sub
mov
cmp
rcll
popa
dec
cmp
test
rol
sbb
jp
ss
mov
popf
clc
rorl
sbb
or
and
xor
sahf
adc
decl
sbb
xor
stc
xchg
push
inc
add
lret
jge
jnp
icebp
mov
xchg
sbb
push
lods
add
test
add
loop
sub
jae
mov
lods
sbb
jp
cmp
adcb
pop
adc
inc
sahf
cmpsl
je
iret
and
cld
push
and
jnp
scas
cmp
inc
sub
xchg
jnp
xchg
test
xchg
jge
mov
stc
imul
scas
or
ljmp
dec
adc
lret
enter
scas
rclb
xchg
or
cs
pushf
jae
pop
jne
ljmp
movsb
gs
jbe
mov
cmpsb
jo
xchg
xchg
mov
loopne
std
mov
sub
or
pop
lock
sub
adc
loopne
and
cli
es
addr16
mov
out
es
adc
rorl
mov
arpl
dec
push
ds
or
jge
sub
outsl
in
pop
add
div
je
dec
lcall
mov
cmp
dec
int
push
lcall
mov
and
movsb
mov
popf
lods
cli
test
mov
rolb
jno
fldt
mov
stos
imul
ret
repnz
fsubs
loope
push
jle
in
stc
adc
xor
or
out
stos
ds
jmp
clc
mov
push
xchg
daa
xor
add
push
addl
jnp
add
test
enter
sbb
loop
sbbl
outsb
mov
out
cli
mov
cli
pop
sbb
ret
mov
insl
sbb
dec
jo
push
sub
xchg
xor
gs
mov
push
mov
push
inc
add
jbe
sub
rclb
nop
sub
lods
aad
lods
cmp
xchg
xchg
rcrb
gs
jmp
mov
pop
jo
repnz
test
sar
dec
arpl
out
les
lods
je
das
add
out
pop
jl
add
or
movsl
mov
jae
leave
lret
mov
notl
inc
dec
mov
dec
je
cmp
xor
loopne
pushf
pop
dec
add
and
mov
push
jecxz
aas
repnz
scas
loope
std
fnstcw
hlt
mov
pop
cli
mov
insl
pop
xchg
aam
cwtl
or
mov
pop
inc
shrb
cmc
aad
inc
into
mov
sub
lret
add
fwait
cmp
mov
jl
ljmp
sub
lret
cmpsl
sub
insl
repz
jbe
iret
mov
cwtl
in
add
mov
inc
or
js
adc
jmp
push
test
dec
out
cs
cmpsl
fcoms
push
sbb
aaa
insb
push
ja
or
xchg
and
push
fwait
add
push
fcoms
push
aaa
jle
mov
mov
fwait
lds
push
leave
cmp
dec
test
lods
jns
mov
jmp
mov
fadd
inc
mov
push
sub
jne
roll
mov
or
fabs
jmp
movsb
pop
mov
frstor
and
sti
mov
sbb
jnp
insl
jle
inc
add
jecxz
je
jecxz
mov
mov
aas
ljmp
mov
fmull
gs
add
and
push
cmc
mov
aas
stc
repz
sub
or
and
fidivrs
sbb
pop
loopne
test
sbbl
loop
dec
or
jg
popf
js
inc
xchg
lahf
xlat
clc
fstpt
popa
fs
sub
jmp
cld
dec
cmp
repnz
jle
xor
pop
mov
gs
movsb
cmpsb
scas
jmp
xchg
js
fcoms
data16
sbb
push
popa
mov
das
shll
insl
cmpsb
push
jl
test
std
jae
mov
pop
xchg
fs
push
xor
test
lret
scas
aaa
lahf
pop
or
int3
xchg
sub
mov
dec
dec
pop
jae
sub
adc
cld
psrld
popa
scas
jbe
loope
in
lret
hlt
dec
es
aad
sarl
and
push
arpl
lahf
fdivs
or
addb
adc
jp
adc
jl
push
adc
xchg
cmp
adc
sub
scas
data16
movsb
shrl
fwait
lret
jno
insb
sahf
adc
cmpsb
les
jp
nop
rorb
movaps
outsb
cmc
push
leave
push
xor
adc
and
mov
sub
sahf
ja
sbb
mov
mov
test
jbe
or
push
ljmp
and
add
int3
xchg
in
cmc
inc
out
jae
adc
cmp
pushf
cli
dec
mov
fs
mov
dec
inc
shrb
jb
push
test
sub
xchg
imul
xchg
xlat
dec
push
sub
jns
sub
push
sbb
pusha
aas
addl
adc
rcrl
nop
shlb
mov
adc
sbb
into
test
mov
push
inc
lock
and
inc
call
insb
fists
test
repnz
ja
push
inc
cmpsb
sarl
dec
push
andl
arpl
xchg
call
popf
xchg
add
mov
cli
adc
mov
adc
sbb
out
sbb
jp
inc
test
and
or
xchg
cmp
and
dec
jle
lods
mov
mov
gs
lret
mov
adc
inc
inc
mov
aas
nop
add
jecxz
inc
cs
mov
adc
dec
stos
shr
dec
lret
or
push
push
inc
mov
pusha
das
pop
popa
mov
sbb
push
xchg
mov
jle
mov
sbb
fidivl
and
or
add
movsl
imul
in
clc
and
fstl
cld
mov
xchg
fnsave
and
test
test
ss
inc
cltd
lea
shll
leave
test
mov
shlb
push
test
insb
mov
cmp
sbb
sub
xchg
pop
jecxz
sbb
mov
rcll
fisttps
jne
or
mov
mov
and
test
rorl
or
arpl
movsb
shlb
inc
and
cmpsb
fstpt
hlt
add
inc
lret
mov
mov
mov
push
and
or
or
and
int
jno
adc
add
test
sahf
push
adc
push
leave
and
call
pusha
and
scas
fwait
jnp
adcl
mov
xchg
lcall
sbb
clc
cmp
push
sarb
lcall
mov
int
insl
gs
in
test
subl
mov
push
lcall
inc
pop
pop
lret
or
xor
lods
int3
rorl
jmp
adc
jge
pop
lods
lret
ja
jns
mov
push
add
cmc
stos
xor
pusha
sub
add
lcall
or
sub
js
inc
mov
jb
ljmp
pop
sub
sbbb
add
pop
gs
divl
lds
cmp
mov
add
gs
in
sbb
add
ficoml
mov
jle
or
push
or
or
inc
fstpl
inc
inc
repnz
adc
add
loop
cs
pop
mov
mov
pop
pop
pop
outsl
adc
dec
addr16
push
sbb
mov
inc
mov
nop
rcll
out
inc
add
clc
addr16
adc
and
cmp
pop
das
aam
ss
mov
js
jl
and
aam
pushf
mov
lods
xchg
sti
enter
and
mov
out
sub
js
jne
pop
add
add
push
rcll
mov
or
or
fisttpl
dec
push
pusha
aad
jp
pop
into
mov
popa
pop
imul
aas
jle
inc
xor
lds
push
jns
js
mov
jl
jge
add
mov
stc
aaa
enter
repz
jnp
aam
pop
pushf
inc
xorb
inc
xchg
orl
cmp
adc
test
inc
mov
pusha
scas
jl
mov
mov
pushf
cmp
pop
add
cmpsl
and
and
xor
fcoms
cltd
mov
js
jb
pop
pop
dec
dec
xchg
push
cmp
loopne
xchg
cld
push
xchg
lock
sahf
mov
jne
add
xchg
mov
loop
in
fcoms
in
cmp
push
push
and
out
mov
push
mov
xor
bound
mov
xor
cmpsb
push
xor
insl
pop
jle
loop
es
push
adc
sbb
repnz
inc
adc
clc
inc
rcll
out
pmaddwd
insb
fnstcw
mov
out
dec
and
cmc
push
arpl
rorb
rolb
jle
cmpsl
dec
ret
or
ljmp
pop
pop
test
imul
sub
addr16
sub
jae
loope
call
fnstsw
imul
jae
jne
or
into
dec
idivl
adc
adc
dec
and
sahf
das
jnp
mov
push
mov
and
aaa
sbb
mov
fcmovnb
insb
insb
xor
cmpsb
repz
mov
icebp
lds
xchg
lods
rclb
fsubl
adc
clc
addl
pusha
mov
fdivs
mov
data16
cmp
fs
mov
xchg
in
mov
pop
ret
leave
and
jge
ret
pop
gs
cmp
push
push
scas
push
movsb
cmp
lock
add
xlat
daa
in
xlat
mov
shlb
bound
imul
stos
loop
out
jns
or
xchg
fsubl
push
mov
add
call
sub
xor
xchg
jmp
stos
outsl
stos
mov
test
push
and
arpl
add
and
out
inc
pushf
aam
icebp
scas
xchg
dec
pop
fistps
push
or
mov
adc
push
dec
sarb
or
xor
xchg
sahf
dec
jge
xor
lea
mov
cmc
movsl
or
add
negb
push
je
mov
xchg
add
xor
sbb
inc
gs
fs
xor
push
jae
jle
xchg
fucom
and
add
xlat
sub
rcll
dec
xchg
inc
fnstsw
dec
insb
cwtl
push
mov
sbb
sbbl
popl
push
test
dec
stc
rcr
xchg
jle
mov
mov
dec
sbb
sbb
sub
sbb
xchg
inc
fidivl
inc
inc
repz
scas
push
pushl
daa
stos
rclb
call
or
scas
jmp
aas
and
mov
leave
add
scas
dec
pop
gs
sub
out
mov
mov
push
xor
mov
dec
cmp
jge
fldenv
movsl
cld
into
adc
or
cmpsb
stos
fisubrl
adc
mov
arpl
and
pop
xchg
xchg
jo
xchg
sahf
push
sub
jnp
shlb
mov
xorl
aam
pop
and
insl
cmpsb
xchg
daa
daa
cmpsb
pop
adc
xchg
cwtl
movsl
lock
test
and
movsb
mov
aam
leave
inc
pusha
testl
push
inc
mov
in
xchg
sub
js
pop
xor
and
pop
jne
lret
iret
not
out
xchg
lods
xchg
pop
dec
push
jo
enter
ret
repz
cs
data16
out
sar
dec
mov
fwait
jmp
inc
push
js
jbe
push
out
xor
outsb
pop
sub
pop
sbb
dec
and
je
or
repnz
push
or
push
and
call
mov
cmpsl
test
pop
into
outsl
and
int3
xchg
aam
outsl
jnp
sti
sbb
xor
sbb
rcrl
sub
loopne
cmp
fs
xchg
pop
rorb
movsl
in
pop
mov
sub
ffree
repz
sbb
lods
or
mov
dec
fwait
rorl
outsb
imul
xchg
xchg
push
imul
jo
stc
and
mov
sub
movsl
and
dec
lahf
test
push
xchg
jle
sub
lret
or
pop
js
ds
cmp
icebp
mov
mulb
jne
jae
loopne
xchg
push
aas
outsl
sarl
adc
push
push
or
mov
lret
outsl
dec
mov
xor
adc
mov
cwtl
push
xor
ret
cmpsb
aam
mov
fs
or
push
loope
mov
mov
mov
imul
test
les
loop
sub
push
in
cmp
gs
mov
pop
jmp
outsl
mov
sub
inc
arpl
stos
out
mov
xchg
inc
push
iret
mov
fldt
jmp
sub
movsl
loopne
stos
insb
js
cmp
loope
push
add
or
push
xchg
pop
dec
je
dec
xchg
iret
rolb
mov
testb
adc
sti
or
pusha
pop
data16
lahf
sub
ss
push
xchg
loop
repnz
push
sub
mov
imul
xorb
xchg
in
cmp
out
aaa
loope
jbe
lock
or
jp
pop
jae
jae
data16
cli
add
xchg
incb
jge
sbb
xor
lret
and
nop
fs
lret
xor
or
inc
subb
adc
mov
lcall
push
int3
mov
imul
arpl
jb
test
dec
ljmp
bound
mov
and
pop
jl
fisttpll
mov
mov
cmp
xlat
jp
lock
mov
dec
inc
sti
xchg
push
jmp
in
addr16
popf
mov
lods
shl
andb
mov
lret
shlb
pop
push
ljmp
mul
mov
imul
mov
pusha
and
xchg
pop
loopne
ja
add
hlt
movsb
xor
mov
repnz
sahf
pop
stos
jne
aaa
or
adc
jae
dec
or
xchg
push
inc
imulb
add
and
sbb
out
or
or
xchg
es
notl
mov
xor
dec
inc
and
cs
fs
jge
hlt
inc
xchg
fdivr
fstl
dec
cmp
lahf
movsb
add
fimuls
insl
pop
jb
adc
cmp
inc
mov
sub
iret
leave
xchg
inc
pop
adc
push
mov
and
mov
dec
iret
fldenv
pop
hlt
cmpsl
or
inc
sub
repnz
mov
mov
jne
in
push
cli
lods
xchg
jnp
cltd
push
lret
pop
mov
pop
pop
dec
adcb
push
mov
mov
sti
enter
jl
popl
dec
pop
mov
xor
orb
je
mov
fcoms
bound
mov
xor
loop
lods
cmc
and
add
cmp
arpl
out
rclb
jbe
xchg
insb
mov
xchg
push
add
mov
int
dec
or
cmpsb
out
pop
test
jl
pop
pop
mov
shll
xchg
mov
xor
jg
scas
mov
loop
jns
insb
jae
pusha
cld
xor
fs
dec
add
mov
ss
enter
or
insb
rorb
push
push
ret
or
jp
test
cmp
or
daa
mov
les
je
shll
jbe
pop
out
pop
in
incb
dec
in
fldenv
icebp
ds
scas
inc
sub
js
mov
ficompl
movsw
fildll
add
lahf
adc
add
enter
addr16
pop
test
dec
xchg
jg
pusha
shrl
sub
in
in
mov
jo
nop
jne,pn
jb
xchg
jle
repz
xchg
jecxz
jl
sub
mov
push
pop
fwait
sub
movsb
daa
lret
pop
mov
push
push
outsb
lahf
sub
dec
sub
je
data16
push
ret
addr16
sbb
and
insl
jnp
dec
lret
inc
aaa
je
test
mov
sub
pop
sbb
loope
test
add
stos
or
or
ret
out
ffreep
out
mov
hlt
sahf
and
sub
out
xchg
imul
xchg
sub
and
into
inc
das
sub
sbb
and
xchg
fimuls
mov
inc
inc
or
test
es
fimuls
daa
mov
testb
mov
rorl
add
in
pop
pop
je
push
pop
scas
pop
bound
mov
add
push
repz
mov
cmp
je
cmp
pop
repnz
sbb
lahf
sbb
xlat
adc
daa
cli
mov
ds
pop
mov
pop
mov
imul
inc
loopne
xchg
aam
mov
gs
xor
push
cli
and
jno
pop
pop
xor
pusha
lods
cmpsl
cmp
adc
cltd
jno
xchg
pusha
test
sub
pop
int3
leave
in
rorl
mov
loop
jo
inc
imul
jae
pop
dec
cld
mov
inc
adc
jmp
popl
dec
jge
addb
sub
out
sub
pop
test
xor
rcr
mov
pop
sbb
mov
cli
in
jno
mov
data16
ds
sub
mov
jne
push
inc
cs
mov
cmc
lea
push
jns
push
mov
lods
aaa
inc
pushf
adc
mov
mov
xchg
test
push
in
ljmp
adc
push
mov
in
sub
sub
xchg
lock
stos
xor
cmpsl
adc
in
jg
pop
cmp
and
xchg
mov
or
stc
pusha
test
xchg
push
mov
in
sbb
shlb
add
mov
sub
sub
mov
jb
adc
mov
popa
push
add
push
inc
push
cmp
lds
nop
dec
test
mov
add
ja
mov
push
loope
cmpsb
rep
lcall
and
mov
ljmp
or
outsl
jo
add
je
into
dec
dec
xchg
and
jle
xor
push
cmp
imul
aam
lds
pusha
cmp
test
or
in
mov
push
xchg
jecxz
into
sbb
or
mov
xchg
inc
xchg
ret
xchg
jg
rcr
mov
inc
dec
cmp
adc
add
lret
fldenv
ret
lock
push
into
out
ret
sub
roll
into
pop
dec
sbbl
stos
pop
ret
movsb
test
pop
pop
pop
mov
fmuls
popa
cmp
cs
xlat
jg
in
sub
jb
lods
xchg
movb
in
data16
call
cmp
pop
cld
test
or
cld
aad
int
sbb
sbbb
fimull
xchg
jb
out
outsb
aam
popf
xor
inc
fldlg2
hlt
push
mov
dec
and
mov
or
cmp
or
mov
arpl
cmp
ja
subb
mov
adc
cs
push
mov
notl
pop
test
cmc
test
jo
jp
andl
out
pop
xlat
imul
mov
mov
push
aas
pop
cmpsb
lods
xorl
pop
jmp
fcmovnbe
call
cltd
inc
cs
xchg
fldl
jne
mov
ljmp
jbe
mov
rol
and
cmp
xchg
js
sbb
andl
je
and
inc
mov
cltd
repnz
jg
add
cmp
int3
dec
repz
dec
jnp
cmp
mov
mov
lahf
shl
or
std
int3
pop
dec
push
pop
and
nop
add
loope
push
fcomp
xor
or
movsl
sbb
fnsave
incb
xchg
push
out
mov
push
arpl
push
adc
outsl
inc
add
sub
mov
mov
cltd
fsubrl
repz
out
ret
aaa
or
pop
sahf
pop
jns
dec
sarb
clc
cmpsb
fldt
sbb
stc
or
mov
hlt
adc
dec
xchg
cmpsl
lods
add
repz
ficompl
dec
lods
inc
bound
rclb
cmp
mov
mov
mov
add
bound
lret
adcl
push
cmp
xor
add
out
cmpb
sub
std
rorl
rsqrtps
mov
rcrb
rcrb
testl
loope
aaa
dec
push
pushl
incb
loop
lock
addr16
jle
imul
push
mov
add
add
cltd
jno
lcall
jmp
test
in
push
test
adc
or
xor
repnz
adc
xchg
sub
or
push
inc
xchg
fldenv
jecxz
repz
pop
xor
ficoml
inc
flds
mov
repnz
fisubl
in
jne
lret
xor
mov
cltd
inc
add
or
push
test
aad
cmpsb
je
xor
jecxz
inc
mov
in
mov
popa
loope
inc
mov
mov
jae
inc
sbb
icebp
orl
in
dec
lock
dec
xor
sub
and
sub
mov
mov
adc
mov
aad
sbb
add
lock
ljmp
mov
or
push
adc
xor
inc
dec
sbb
lds
lret
add
mov
in
and
and
cmp
int3
pop
inc
sub
aad
mov
popa
mov
inc
icebp
sbb
fs
pop
shlb
add
test
dec
stos
jmp
cmc
mov
mov
xchg
arpl
mov
xor
mov
xchg
inc
sbb
loop
sub
int3
fcoms
or
mov
in
inc
add
fdivl
test
lods
add
xor
and
sub
push
insl
iret
sti
lock
imulb
jecxz
aas
lret
xchg
xor
cmp
into
adc
scas
mov
std
pop
and
data16
sahf
jecxz
sub
push
jge
scas
aad
outsb
ds
js
jg
andl
je
clc
dec
mov
iret
cs
rcr
lds
in
pop
sahf
add
test
sbbl
lods
push
orb
push
and
mov
scas
xor
cmp
jnp
add
addb
ss
xor
dec
cmpsb
push
cld
and
inc
inc
test
xlat
xchg
jb
jg
pop
out
dec
mov
data16
mov
add
lahf
mov
and
pop
pop
cmp
mov
icebp
or
jp
data16
loop
push
add
in
push
mov
addl
mov
icebp
jg
sbb
dec
dec
ljmp
mov
daa
jns
mov
inc
in
hlt
sbb
cmc
xchg
adcl
outsb
pop
sbb
mov
lcall
int3
imul
sahf
aad
inc
inc
mov
xchg
aas
cmpsl
sub
xor
pop
pop
cmpsb
dec
cmp
xchg
pop
stos
lcall
inc
mov
push
mov
imul
lock
pop
inc
jmp
xor
pusha
pop
in
insl
or
fs
jo
repz
cmc
pop
mov
lahf
mov
test
aad
pop
addr16
aaa
jnp
enter
rcl
fs
popa
or
aad
mov
xchg
js
insb
pop
jbe
std
push
inc
icebp
push
xchg
es
movsb
jne
cwtl
fldl2e
test
lods
shrl
jae
xor
xchg
fldcw
pop
cmpb
xchg
cmpsl
das
mov
sub
xchg
ljmp
test
jle
adc
movsb
fldl
std
rorb
add
xor
mov
fimuls
add
cmp
jo
aaa
fisttpll
stos
inc
mov
std
scas
test
push
and
das
shl
sbbb
inc
fidivrs
mov
jns
ja
imul
mov
dec
push
lds
mov
or
enter
mov
mov
cmc
sbb
enter
xchg
mov
ja
lret
mov
test
ja
and
dec
add
fbld
movsb
mov
out
pop
mov
out
mov
dec
dec
sub
rolb
mov
insl
jle
jp
rcrb
dec
pusha
sub
mov
dec
push
daa
dec
and
xchg
dec
int
notl
addr16
lcall
sbb
insl
mov
sbb
insb
popf
xchg
xor
xchg
pop
xchg
dec
inc
pop
sahf
sbb
jo
pop
aam
xor
pushf
aas
bound
mov
cli
nop
cmpsb
mov
mov
xchg
lock
in
insb
xor
jbe
push
mov
fstpt
mov
jge
inc
and
dec
hlt
test
mov
ds
sub
in
fsincos
js
fwait
ret
rcl
jl
sub
adc
out
icebp
scas
dec
mov
clc
jle
in
sti
or
stc
pop
push
movsl
out
cmp
mov
pop
mov
leave
pop
push
mov
mov
call
sub
adc
into
adc
sub
sub
xchg
push
mov
movsl
push
push
pushl
shl
adc
fwait
add
fisubrs
cwtl
cmpsl
cmp
fdivr
sub
cmpsl
xchg
push
ja
sub
jecxz
push
xchg
and
mov
call
lock
xor
mov
loope
lahf
inc
mov
add
repz
push
insl
fsubs
cmc
cmpsl
jne
stos
test
adc
imul
inc
xchg
mov
xor
leave
jecxz
movsl
and
decb
adc
adc
mov
lret
cli
xchg
pop
lcall
stos
push
push
push
inc
push
or
fs
out
push
test
out
or
jae
in
mov
add
xadd
inc
das
mov
mov
lret
shl
sub
and
ds
roll
add
mov
mov
sbb
sti
xor
push
xchg
adc
loopne
and
fists
es
shll
pop
js
pushl
repz
push
scas
mov
mov
xlat
cltd
adc
adc
sbb
xchg
fiadds
xchg
mov
aaa
jno
lock
int
mov
sub
jecxz
popa
xor
mov
js
inc
repz
cmp
test
cltd
lret
jle
ds
ja
iret
lock
in
rcll
jb
add
shr
push
out
or
sub
xchg
dec
lcall
je
popf
lods
push
push
bts
inc
pop
test
jle,pt
add
cmpsl
enter
jecxz
sub
mov
add
add
push
jae
ds
in
mov
xor
clc
mov
xchg
hlt
rcr
jecxz,pn
lea
bound
out
enter
ja
dec
stos
pop
out
test
pop
or
inc
orb
lret
adc
sub
je
aaa
pop
mov
enter
or
jae
push
lds
pop
shr
data16
xchg
test
or
test
add
xchg
jno
das
jmp
dec
jp
sbb
rolb
sbb
xchg
cltd
xchg
xchg
lods
lret
pop
cwtl
popf
or
sahf
hlt
push
sub
add
and
decb
aad
test
pop
xchg
xchg
adc
mov
inc
jae
inc
int
dec
fcompl
sahf
and
in
mov
ds
pop
mov
pop
mov
inc
inc
outsl
xor
mov
add
pop
mov
push
ja
xor
add
ja
jno
add
mov
int
jl
lods
cmpb
ja
adc
push
dec
insb
addr16
pop
xchg
clc
mov
lret
mov
orb
and
lds
dec
push
mov
sub
cmpb
loop
sbb
xchg
push
adcl
fisttps
push
out
shll
jge
ret
sbb
adc
pop
hlt
push
sub
sbb
fldenv
jne
outsb
sbb
dec
fsubr
das
pop
push
mov
jnp
rcrb
sbb
ret
or
sub
dec
pop
lods
jl
fdivl
pop
popa
push
ret
rcrl
popa
jl
mov
stos
push
das
or
dec
push
xor
sbb
inc
movsl
shrb
andl
jbe
jae,pt
js
sbb
jecxz
dec
pushf
push
add
sbb
mov
dec
push
lret
add
lods
and
inc
clc
call
xchg
popf
stos
add
addb
mov
sbb
mov
out
out
and
pop
repz
repnz
push
enter
or
lock
lahf
enter
mov
outsl
hlt
xchg
testl
data16
repnz
data16
test
fucomp
mull
mov
mulb
xchg
adc
cld
push
shlb
lds
fstp
and
cmp
js
insb
and
cmp
es
popw
ss
mov
jg
pop
ja
rol
jp
xchg
jge
test
pop
push
lret
jmp
pop
jne
xor
sub
pushf
push
xchg
js
or
mov
cmpsl
jmp
add
sti
lcall
mov
imul
inc
cmpb
mov
pop
dec
dec
outsb
inc
xchg
movsl
fbld
jp
lods
adcb
in
push
ljmp
xor
imul
imul
dec
push
in
pop
lret
lcall
fs
xchg
pop
test
popa
xchg
hlt
push
test
loope
or
inc
cmp
pop
push
push
sarb
lods
negb
pop
sahf
rorl
sub
lret
aaa
mov
ljmp
mov
inc
pop
ret
gs
sahf
popf
scas
mov
sbb
das
mov
shlb
dec
dec
outsl
repnz
loop
pop
add
jle
and
aaa
mov
dec
jecxz
adc
mov
xlat
jmp
inc
dec
jne
pop
push
pop
or
lods
xor
mov
add
js
fnstsw
adc
cwtl
xor
push
xchg
ss
pop
dec
repnz
sbb
in
xor
cld
cmpsl
cwtl
lock
cmp
jnp
into
and
and
push
je
dec
test
jbe
push
mov
add
fstpt
mov
cs
idiv
movsl
les
xchg
movsl
dec
enter
mov
pop
sbb
rcrb
adc
sbb
aam
inc
cmc
inc
out
iret
and
mov
sahf
popa
mov
nop
lods
sti
pusha
cs
jno
in
shrb
fdiv
sub
adc
test
pushf
push
lods
nop
out
cmp
es
cld
or
adc
xchg
jb
out
int
repnz
or
imul
adc
sbb
jnp
dec
aaa
mov
pop
iret
and
jns
inc
fcoms
or
and
mov
push
fsubs
in
lcall
mov
push
cmpsl
push
movb
into
movsb
xchg
lods
je
push
xchg
out
rorb
inc
es
mov
jnp
xlat
test
imul
add
es
fbld
outsb
cli
bound
mov
pop
adc
stos
dec
sahf
mov
in
lahf
das
mov
pusha
cmp
lods
and
imul
push
xor
loop
sarb
mov
or
jle
sti
sbb
mov
pop
jmp
imul
cmp
fcomps
nop
mov
mov
stc
enter
mov
pop
psubsb
data16
cltd
ja
enter
out
out
aaa
dec
jg
adc
cmp
sub
cmpl
or
outsb
mov
and
es
jo,pt
enter
push
in
xchg
xchg
les
xor
sub
nop
popa
int3
fisubs
add
push
ret
adc
mov
repnz
daa
shll
in
cmpsb
pop
and
mov
repnz
xor
cmpsl
loope
idivb
lea
test
daa
push
xchg
inc
inc
sbb
call
push
loopne
jle
lock
adc
add
nop
dec
xor
cld
or
lret
adc
add
es
jno
pop
xor
rcrl
sbb
stc
sar
stos
rolb
sbb
or
push
add
lret
sub
sbbb
pushf
mov
jne
dec
or
cmpsl
push
fwait
test
into
push
sbb
push
movsb
imul
push
inc
stc
mov
add
adc
pop
addb
inc
xor
inc
fnstenv
aam
hlt
pop
xor
rcll
cmp
dec
jecxz
insb
jno
movsl
repz
cltd
mov
pop
push
or
divl
mov
call
std
xor
mov
into
mov
push
xchg
push
xchg
push
push
xor
movsb
scas
mov
cmp
loopne
push
cmc
mov
cltd
push
adc
inc
es
subb
cltd
add
add
xor
mov
xchg
jle
jb
std
outsb
cli
loope
je
arpl
scas
fdivs
movsb
lea
mov
mov
sub
retw
pop
jg
cmp
adc
les
cwtl
out
cld
jg
and
ja,pn
outsl
mov
cmp
xor
mov
mov
mov
sbb
or
repz
pop
inc
jno
jae
sub
pop
xchg
lcall
xchg
jb
cmp
aas
inc
movsl
sbb
ss
cmp
push
lret
push
mov
push
loopne
cltd
mov
sahf
aaa
sbb
mov
inc
aaa
fiaddl
jns
dec
out
sbb
or
xorl
sub
mov
and
out
mov
pop
xor
mov
lahf
in
pop
ret
rorb
mov
hlt
std
mov
addr16
mov
dec
les
outsb
insb
sub
pop
adc
adc
dec
int3
outsb
or
mov
inc
cltd
test
pop
test
in
addl
jnp
pushf
xchg
loope
pop
pop
call
jb
mov
bound
repnz
push
jg
fwait
mov
out
scas
js
in
mov
cwtl
mov
sub
lret
jo
pop
xchg
add
aas
aaa
cmpsl
testb
in
mov
sbb
cmp
pop
mov
jp
pushf
mov
jne
jbe,pn
jp
jns
push
jne
inc
bound
mov
cmp
imul
rcr
ds
mov
cmp
addr16
mov
adc
push
jne
cmp
int3
scas
ss
ss
mov
into
out
data16
sbb
lret
cmp
add
mov
lret
ret
jne
movsl
lea
adc
push
lea
cmp
dec
xchg
shlb
inc
push
mov
outsl
lds
std
fidivs
mov
movsl
rcl
add
jne
mov
mov
jns
sahf
adc
push
addl
pop
scas
outsl
jo
adc
xlat
jo
roll
loope
or
aaa
lahf
xor
sub
mov
and
nop
fsubr
inc
adc
cmpsb
xchg
jbe
or
or
outsb
ret
push
sti
in
sbb
push
xor
mov
pop
sbb
leave
fwait
dec
mov
pop
sbb
mov
cmc
pop
jne
dec
icebp
xchg
lods
mov
fcmovu
iret
jl
hlt
jmp
sahf
inc
mov
adc
dec
mov
inc
adc
sbb
sarl
mov
add
cmp
sahf
xor
enter
or
adc
mov
xchg
or
mov
xlat
or
lock
lock
or
cmp
lock
lods
mov
mov
push
fwait
aad
hlt
mov
je
xor
xor
je
push
inc
xchg
cmp
stos
xchg
xchg
sub
adc
cmp
mov
test
imul
pop
mov
arpl
idivb
jecxz
and
je
test
xor
xor
ret
xor
ss
add
push
cltd
je
test
jg
push
lret
data16
xchg
adc
cld
xchg
cmp
xor
bound
daa
mov
cmp
test
ret
lcall
xchg
sbb
orb
xor
mov
fsubs
in
enter
pop
push
jle
or
sub
fmul
ficomps
dec
es
and
dec
sbb
or
test
rcl
sbb
pop
sub
popa
inc
mov
movsb
add
sti
mov
imul
mov
push
test
repz
int
stos
mov
xchg
in
imul
pusha
dec
lock
xor
dec
cmpsb
addr16
shrl
rorl
pop
dec
cmp
xchg
jmp
test
adc
clc
mov
push
cmp
mov
imul
rcrl
pop
jae
fdivrs
adc
mov
bound
jp
push
xlat
xorl
push
cmc
jno
and
push
or
adc
pop
mov
arpl
sbb
or
jns
int3
call
mov
stc
sub
add
inc
rclb
sbb
push
pop
sbb
adcb
sub
mov
push
frstor
add
outsb
xor
xor
push
mov
test
rclb
lahf
sub
insb
jns
lret
or
lret
mov
ljmp
push
fwait
dec
lock
mov
or
sub
sub
push
cmp
xlat
aad
ja
ds
cli
mov
int3
mov
loop
popa
xchg
xlat
inc
xorb
cmp
inc
xor
notl
mov
push
int3
sub
in
cmpsb
cmp
cld
jbe
or
mov
xlat
icebp
xchg
xor
loope
mov
pop
stos
in
xlat
rorl
sbb
sub
sbb
xchg
pop
fldenv
repz
add
dec
push
push
ret
addr16
mov
sbbl
in
mov
cwtl
jbe
pop
arpl
mov
add
shll
nopl
popa
inc
push
fs
data16
mov
aaa
insb
push
out
mov
mov
push
test
push
xorl
int3
pop
mov
xchg
mov
inc
scas
scas
mov
and
je
dec
mov
loopne
xchg
dec
mov
clc
inc
shl
js
xor
xchg
ret
int
js
pushl
push
mov
fimull
sub
adc
shl
fmuls
sub
jge
xchg
fmull
aaa
cltd
fwait
mov
loop
dec
jbe
or
sbb
dec
filds
inc
mov
dec
and
xchg
shlb
dec
jle
pop
lret
cld
rcll
imul
mov
pop
cmp
or
push
jecxz
cmp
sub
xchg
adc
mov
lahf
lret
into
mov
cmp
push
out
inc
sub
inc
mov
mov
jecxz
inc
call
mov
inc
rorl
bound
sub
sbb
and
mov
cmpl
addr16
push
notl
pop
push
fidivrl
sbb
cmp
jge
fidivs
out
pop
test
rcr
mov
popa
lds
mov
out
cmp
push
outsb
jmp
jno
into
aas
xor
out
int
dec
out
aam
fistl
jp
pop
lret
xor
add
xorb
inc
sbb
bound
mov
inc
pop
and
stos
mov
or
cmp
add
cmp
fstp
aad
arpl
ss
insb
push
stc
dec
jmp
adc
adc
mov
data16
or
xor
cmc
xlat
aas
push
jp
lahf
scas
inc
mov
push
cmp
dec
test
mov
sub
repnz
ja
ljmp
jl
sarl
jge
loop
ljmp
lods
dec
xchg
lods
lds
outsb
pushf
cmp
dec
sti
mov
mov
rclb
hlt
mov
xchg
test
dec
jnp
adc
jle
and
pusha
sbb
ret
lock
jmp
rcrb
sub
xor
mul
xchg
ficoml
outsb
lds
add
or
cmp
inc
adc
and
sbb
add
loop
inc
or
cmpsb
iret
scas
xchg
ret
aad
lahf
sbb
mov
xor
inc
addr16
icebp
mov
jne
jl
cli
int3
sbb
cmp
xor
xor
jp
dec
adc
xchg
je
mov
sbbb
adc
or
in
fld
sbb
sbb
out
sti
jle
or
dec
dec
sub
adcb
sbb
outsb
jae
jae
mov
push
movsl
mov
and
add
mov
cmp
mov
cs
repnz
repz
movsb
dec
add
std
daa
and
and
jb
xor
add
mov
sub
repz
aaa
adc
jecxz
popf
jp
icebp
fbld
aas
mov
sbb
outsb
test
leave
add
mov
jns
and
push
stos
pop
ret
loope
push
sub
and
out
les
arpl
and
pop
repnz
mov
or
cmc
cwtl
xchg
ret
xor
repz
mov
aad
pop
sti
sarb
push
or
aaa
jne
imul
jge
cmc
movsl
or
xchg
orb
pop
sbb
xchg
popa
repnz
fisubs
aam
mov
loope,pn
bound
int3
cmp
sbb
sarl
in
mov
je
sub
xlat
aaa
push
mov
mov
mov
sbb
mov
jb
pop
cmp
fsubl
push
mov
movb
xlat
xchg
mov
out
popf
jmp
mov
out
pop
das
lods
jl
and
lea
sub
push
in
ret
sub
fldt
fldt
sub
push
cmpsb
dec
mov
daa
mov
jle
rcll
leave
dec
loopne
and
and
mov
cld
bound
xchg
dec
jae
lock
add
movsl
cmpsl
int
jnp
sbb
fwait
pop
jmp
movsb
cmp
sub
sbb
out
cmp
and
dec
lahf
btc
mov
movsb
xchg
xor
ljmp
mov
and
mov
or
dec
shll
ret
sbb
dec
repz
mov
int3
inc
xchg
insb
and
push
pop
je
add
push
pop
es
adc
and
and
xchg
dec
push
cmp
lods
xor
stos
push
sub
mov
inc
subps
xchg
jno
xlat
dec
mov
and
dec
jp
mov
test
lahf
xchg
mov
sahf
sti
inc
jnp
addr16
in
or
mov
rorl
dec
jno
push
jno
bound
inc
xchg
enter
and
ds
and
mov
loopne
mov
out
out
or
add
mov
pop
push
shlb
push
outsl
pop
mov
jge
push
mov
push
adc
and
mov
push
in
push
push
push
mov
pop
ret
dec
pop
mov
aas
je
sub
and
fldt
sub
mov
jge
lds
xor
xorb
fwait
add
pop
mov
fistl
cmpsb
jno
cmp
movsl
jg
roll
inc
xchg
mov
mov
or
mov
xor
adc
das
ds
mov
adc
add
cld
mov
add
jno
gs
pop
mov
jle
push
mov
repnz
or
mov
mov
adc
mov
clc
lds
dec
sub
lcall
lds
mov
add
pop
int3
or
int
inc
call
cmp
mov
and
mov
es
mov
dec
push
push
jg
jg
stc
push
mov
mov
and
dec
mov
sbb
and
or
adc
repnz
mov
mov
jl
out
std
and
cmp
jl
inc
push
fnstcw
mov
push
cmp
ds
fbstp
xchg
out
iret
rol
xor
sarb
lock
mov
xchg
dec
ja
std
inc
xor
push
or
lret
stos
bound
cwtl
stos
outsl
icebp
pop
inc
jecxz
mov
sbb
imul
fnclex
lock
int
fptan
xchg
movsl
dec
lret
int3
sbb
cmp
test
mov
inc
xchg
fidivl
push
mov
leave
clc
in
fisubrl
out
sbb
lahf
mov
push
pop
lahf
jmp
insl
ror
repnz
inc
xchg
sub
jb
or
les
test
pop
insl
adc
dec
mov
shll
add
sahf
xchg
inc
imul
mov
mov
fiaddl
aaa
ret
jmp
add
outsl
cmc
lret
xchg
scas
iret
cmpsl
lcall
mov
js
and
aaa
aaa
xor
outsb
das
ret
mov
in
and
cmp
sti
dec
sbb
lahf
mov
cmp
cltd
sub
stc
jns
xor
xor
inc
popf
push
mov
arpl
mov
testb
inc
xchg
sbb
popf
inc
and
ffreep
je
cmp
cld
xor
push
cmp
test
mov
pop
out
imul
cmp
scas
add
sub
cmpsb
frstor
sbb
sbb
das
mov
xchg
mov
lds
mov
js
lea
les
mov
dec
loope
cmpsl
shr
jnp
lcall
dec
into
test
push
cmpsb
push
mov
jbe
push
ret
mov
shrb
int
sbb
fiaddl
imull
pushf
push
shl
ret
mov
lahf
jmp
repnz
push
and
add
sub
cmp
test
mov
pop
rcrb
aas
repz
out
orl
jle
test
mov
popa
mov
leave
xchg
sub
xor
mov
out
dec
mov
inc
pop
stc
or
loope
mov
add
xchg
int
or
cmp
test
pop
push
scas
push
jns
addr16
adc
aaa
xlat
jmp
mov
jp
xor
xor
cli
mov
aad
sub
insb
int3
adc
pop
mov
push
mov
loope
lods
and
aaa
adc
jle
icebp
add
push
inc
and
jge
sahf
aad
js
pop
mov
loopne
xlat
in
xchg
dec
mov
jnp
sbb
ljmp
xchg
es
cmc
sub
test
pop
lahf
mov
scas
arpl
mov
and
add
xor
cltd
xchg
scas
mov
xchg
xchg
push
sub
pop
push
sub
sub
clc
pop
adc
pop
mov
cmc
mov
mov
sub
dec
repz
testb
xor
popf
mov
jle,pn
pop
adc
je
mov
push
fcmovu
jle
or
js
fildll
xor
pop
sub
mov
cmp
in
cld
and
lret
inc
lret
out
jle
jecxz
movsl
fistl
dec
mov
rcll
cmpsb
or
enter
pop
jns
sbb
xchg
sti
mov
loopne
cmp
cwtl
xchg
inc
inc
dec
lret
pop
lret
jg
mov
ds
push
outsb
pop
pop
outsb
movsl
scas
jecxz
mov
call
sbb
cli
outsl
inc
add
mov
pop
push
mov
pop
jbe
hlt
lcall
pop
shlb
push
sahf
insb
push
push
addr16
xor
cmp
aas
sub
jmp
mov
fiadds
cmp
les
je
jmp
in
daa
push
sub
xor
mov
push
int3
push
shl
test
mov
gs
rcrl
mov
dec
jne
mov
out
scas
sub
cmp
pop
inc
jmp
in
sub
inc
push
idivb
call
adc
ret
mov
add
jb
xchg
add
mov
dec
pop
inc
inc
pop
or
lea
aas
dec
scas
icebp
inc
loopne
hlt
scas
roll
xor
xor
mov
mov
pop
push
cld
aaa
or
xchg
lock
dec
pop
jmp
mov
scas
push
outsb
fidivs
ret
repz
sub
lds
mov
pop
sub
mov
out
shrb
clc
or
add
cmpsl
cmp
add
inc
pop
add
pop
clc
divl
cmp
movsl
in
cld
xlat
aam
gs
mov
sbb
jle
jo
push
cmp
mov
and
in
lds
mov
sub
fs
mov
pop
les
jns
aas
rolb
fsubl
add
call
pop
jecxz
mov
inc
inc
mov
xchg
loopne
cmc
mov
push
cmpsl
in
inc
pusha
test
movsl
add
outsl
dec
insl
sub
jns
loope
lret
lcall
cmc
or
sub
mov
inc
sbb
xchg
xchg
pop
scas
loopne
jo
and
jo
xor
lock
mov
pop
loope
cmp
adc
aaa
dec
xchg
dec
in
loopne
mov
lods
lods
std
mov
dec
daa
adc
jae
cmc
jl
inc
sahf
inc
repnz
leave
mov
xchg
push
sahf
frstor
cmp
pop
loopne
mov
imul
mov
imul
or
xor
fmull
dec
jo
dec
inc
stc
jmp
jbe
dec
dec
dec
mov
insl
dec
sbb
dec
push
add
inc
adc
jo
out
pop
adc
dec
sub
pop
repnz
mov
mov
jle
xor
mov
bound
mov
or
fidivrs
aaa
push
out
or
dec
mov
pushf
xor
mov
adc
mov
jle
or
mov
adc
xchg
or
inc
insl
icebp
shll
push
add
jae
inc
call
ds
sahf
rorl
in
lea
aaa
repz
popa
mov
clc
call
jl
xchg
cmp
repnz
sub
push
cmp
ljmp
pop
mov
cmpsl
jmp
popf
cmp
std
mov
push
mov
addr16
jmp
sbb
push
and
push
test
cmpsb
cwtl
test
xor
mov
andb
xor
pop
es
cltd
jbe
adc
add
cmpsl
cmp
pop
nop
jle
jmp
test
jmp
scas
out
ror
inc
sbb
pop
push
pop
lea
push
jbe
and
test
in
inc
cmpsl
pop
repnz
iret
fistpll
imul
js
and
or
ret
inc
mov
into
ret
lock
jbe
int3
mov
add
fisttpl
xor
shrb
push
xchg
test
out
jle
jnp
push
cmp
cmp
xchg
push
arpl
fidivrl
lret
orl
fs
sub
mov
mov
les
outsl
mov
popl
test
iret
das
stc
mov
ret
mov
fwait
pop
dec
std
bound
test
inc
cmp
xchg
cmpsl
bound
xlat
lcall
mov
adc
aaa
fmuls
dec
jmp
bound
fildl
mov
add
lahf
mov
jp
xchg
mov
fwait
inc
mov
cmp
fldcw
xchg
adc
stos
decb
dec
lods
xlat
xchg
cli
mov
ret
cwtl
cmp
and
sub
movsl
dec
repnz
sbb
mov
imul
or
dec
mov
mov
iret
xchg
je
fiadds
mov
pop
mov
add
push
pop
sbb
scas
ljmp
cli
scas
aaa
push
movl
mov
push
lock
mov
sub
jle
sbb
push
test
mov
xor
lock
int
cmp
leave
outsl
pop
aaa
lock
out
push
adc
sarl
std
loope
sub
ljmp
mov
jo
sbb
in
sbb
sbb
sbb
dec
or
inc
push
or
lret
mov
xchg
lods
push
popl
add
jno
pop
mov
sub
les
dec
sbb
hlt
shlb
lea
xor
sti
sub
jne
and
and
sub
jmp
shr
stc
push
lret
data16
push
xchg
cmpsl
dec
cmp
insl
or
insl
js,pt
mov
mov
dec
dec
ret
leave
out
scas
inc
notb
lods
add
jp
jge
mov
pop
dec
mov
int3
pushf
fidivrl
mov
clc
mov
pop
adc
loopne
jnp
repnz
std
pop
insb
xor
and
arpl
adc
push
pop
push
jecxz
pop
or
int
jns
inc
sarl
sbbb
push
mov
das
outsb
fcomps
in
aaa
pop
movsb
jl
pop
push
shll
mov
sbb
cld
xor
pop
aas
xchg
inc
xorl
jne
push
loope
adc
add
flds
mov
push
iret
pop
dec
jbe
in
mov
or
icebp
pop
add
aas
cs
addr16
xor
ss
scas
loope
pop
addb
dec
adcl
xchg
push
inc
jecxz
sbb
adc
pop
sahf
fsts
int3
or
popa
bound
mov
and
int
cmpsb
fdivp
into
adc
lret
insl
jb
cmp
sti
dec
push
mov
mov
enter
jg
test
test
cmpsb
js
fcompl
mov
loop
outsl
add
iret
sub
or
lahf
das
xchg
lods
nop
mov
inc
and
imul
daa
adc
push
sbb
jle
sahf
cmp
jnp
rorl
fisttpl
js
enter
sub
movsb
cmc
and
add
ljmp
sub
and
pop
jle
or
push
testb
imul
out
outsl
cmp
mov
or
jns
cwtl
aaa
mov
hlt
or
sbb
mov
dec
bound
cmp
cld
pop
movsb
pushf
pop
xor
mulb
mov
jb
xchg
fldl
test
jns
push
in
jecxz
inc
mov
mov
in
fisttpll
nop
dec
into
std
dec
mov
sub
push
push
ja
jle
or
add
push
loopne
sub
jbe
jp
lds
aas
std
xchg
daa
les
xchg
cmc
push
scas
dec
sti
out
add
scas
fwait
sbb
add
arpl
imul
shrl
xor
iret
mov
cmp
and
loope
adc
insb
mov
push
imul
in
xchg
ret
pusha
mov
mov
cmp
shrl
scas
fnstcw
mov
int
push
mov
test
cmpsl
mov
testl
sbb
mov
inc
mov
mov
and
aad
cmp
or
pop
adc
inc
movsl
rcrb
stos
push
jns
es
bound
xchg
lock
push
fnstcw
push
ds
fildll
test
test
cs
sbb
xchg
and
push
daa
jnp
xor
sub
js
pop
jo
sbb
pop
push
aaa
dec
mov
or
pop
jns
xchg
jnp
mov
mov
insb
push
int
popa
rclb
cmc
sub
ret
insb
jns
mov
cs
add
dec
aas
push
jl
mov
inc
pop
and
or
mov
sub
js
and
pop
sbb
inc
cmp
cwtl
push
xor
pop
or
outsb
mov
push
inc
rcrl
out
xor
dec
pop
and
in
mov
out
mov
jecxz
cmp
xchg
adc
outsl
mov
mov
lcall
adc
cmp
je
push
xor
jp
mov
xor
insl
leave
jne
std
leave
mov
push
pop
mov
out
push
das
popa
ja
inc
mov
fwait
sbb
xchg
out
fsubrl
or
je
xor
ret
mov
negb
ret
or
push
push
lret
xchg
mov
sub
cltd
jno
jbe
pusha
jecxz
jge
adc
ret
and
aas
dec
mov
adc
inc
repnz
or
push
das
sub
jb
mov
movsl
pop
fisttps
push
sbb
gs
sub
gs
negb
cmp
mov
dec
jge,pt
lds
and
inc
leave
mov
jp
mov
jle
mov
int3
inc
adc
mov
sub
jnp
ja
test
push
fs
jg
sub
pop
popf
push
sbb
mov
insl
or
imul
sahf
jno
std
test
push
test
add
adc
shrl
inc
ret
fistl
rclb
xchg
mov
pop
cmc
mov
test
mov
das
out
and
mov
mov
je
and
xchg
sbb
add
xchg
jae,pt
dec
lock
lar
push
rcl
jnp
imull
pop
in
loop
push
and
fdivs
or
sbb
stos
sub
add
ds
jne
stc
adc
push
sti
test
ljmp
mov
imul
pop
add
outsl
imul
add
mov
or
xchg
sub
pop
inc
adc
rcl
adc
fistl
mov
test
out
ds
imul
movsb
sub
test
jp
test
fnstsw
in
jo
stos
sbbb
mov
sub
pop
pop
push
rolb
sub
inc
das
xchg
cmpsl
adc
mov
pop
shr
and
and
sbb
mov
inc
push
or
push
cmp
pushf
xchg
jnp
mov
and
fucomip
in
xchg
xchg
out
xchg
aam
out
fistps
in
cli
out
mov
or
jmp
push
sbbb
adc
sbb
cmp
movsl
das
mov
mov
xor
xchg
repnz
scas
testl
xchg
or
mov
xchg
or
inc
cmp
iret
cmp
fwait
push
fsubrs
shll
mov
ljmp
test
inc
dec
mov
in
rcrl
push
test
xor
cmc
cmc
test
lea
or
loop
and
js
mov
stos
mov
mov
fwait
mov
or
jp
insl
sbb
jb
sarb
push
cmp
mov
cmp
xor
aas
mov
movsb
xor
test
sbb
fwait
sbb
push
pushf
sbb
in
xor
xchg
dec
and
xor
pop
inc
mov
sub
add
jnp
in
lcall
repz
xchg
in
xchg
in
iret
mov
dec
pushf
enter
mov
inc
cmpsb
scas
xor
jge
lea
push
dec
bound
out
adc
cmp
es
lds
outsb
push
shl
sbb
inc
push
inc
pushf
cmp
pop
adc
popa
fcomps
sbb
nop
rcll
jne
sub
ljmp
outsl
inc
mov
js
mov
call
and
add
inc
mov
call
incb
push
fmul
mov
cmc
jnp
outsl
lock
fiaddl
push
mov
lds
arpl
rcrb
cmp
nop
stos
jle
adc
inc
pop
pop
and
in
jp
lahf
fcomps
push
lods
adc
mov
cmp
cmp
sub
int
adc
and
mov
mov
adc
adc
mov
mov
inc
pop
or
call
icebp
into
and
jg
add
mov
inc
ret
dec
xchg
sbb
pop
stc
mov
cmc
inc
cmc
std
sbb
jnp
sarb
inc
call
push
mov
test
sarl
push
or
ret
adc
lret
inc
stos
and
js
stos
hlt
addr16
mov
in
outsb
and
xchg
fcomps
ret
dec
push
sbb
jbe
jmp
push
push
cmp
inc
dec
mov
cltd
inc
or
das
adc
xor
lods
lods
or
ret
fldenv
adc
leave
push
mov
xchg
mov
sbb
push
mov
jl
out
jl
jg
and
outsl
sbb
mov
cmp
mov
cmp
mov
popa
int3
ret
jp
mov
icebp
xchg
push
out
leave
cmc
push
hlt
jge
xchg
test
push
or
and
add
outsl
cli
sub
jl
mov
insl
xchg
and
cmp
fcmovnu
or
mov
popf
push
xchg
dec
fnstsw
scas
fistpl
pop
jnp
push
movsb
inc
fmuls
mov
pusha
test
flds
jg
sti
stos
aam
div
insb
shlb
sub
js
push
lods
xchg
pop
add
sbb
jmp
push
loop
push
sub
insb
mov
and
and
adc
mov
dec
jl
lcall
sbb
cmpsb
outsb
out
sub
push
aam
ja
jns
lods
mov
and
cmp
mov
test
fwait
hlt
ds
add
negb
int
ret
std
sbb
add
fcmovnb
jbe
pop
ss
into
nop
sub
jge
mov
jo
add
xor
dec
aad
mov
test
or
ds
sbb
jnp
lea
pop
ret
stc
scas
pushf
lods
imul
inc
cmp
sbb
inc
adc
or
xor
mov
push
sub
ja
jmp
xchg
movsl
or
mov
notb
sub
xor
shlb
inc
ror
and
pusha
jo
cli
jl
movsl
jne
pusha
sub
int3
jno
inc
out
das
shlb
push
fmull
ds
sub
sti
cld
lock
add
mov
in
pop
xchg
in
stc
sbb
lret
adc
pop
sbb
jno
bnd
mov
push
inc
mov
xor
jns
adc
sub
add
repnz
lret
sub
out
rclb
jl
push
in
push
mov
cmpsl
dec
ljmp
ja
xor
mov
push
mov
lahf
insl
mov
mov
fcmovu
pop
jg
fbld
sub
int
cli
adc
ret
sub
add
fistps
mov
pop
adc
orb
lods
xlat
dec
movsb
mov
lea
xchg
mov
cmp
push
mov
popf
mov
es
xor
push
xchg
or
out
test
mov
std
aam
iret
subl
jg
jmp
test
mov
cmp
adc
xchg
xchg
inc
lret
dec
adcb
dec
xor
andl
mov
jns
dec
enter
xor
lret
in
dec
mov
pusha
shrl
cld
and
or
adc
imull
adc
and
sub
dec
in
mov
outsb
jne
je
aaa
and
sbb
rcll
push
push
rcrb
jp
and
and
push
cld
das
mov
mov
mov
push
mov
je
popa
insb
jns
mov
fsubl
pop
mov
popa
mov
loopne
das
xlat
stos
mov
mov
hlt
clc
ljmp
inc
pop
daa
adc
fdiv
dec
xchg
enter
inc
imul
or
fld
test
sub
xor
pop
dec
aam
add
inc
sub
aaa
xchg
aas
imul
outsl
push
scas
adc
push
jecxz
shll
les
xor
negl
sub
sbb
aaa
and
divb
test
cmp
das
mov
jo
xor
mulb
out
xchg
je
inc
push
or
dec
inc
pop
std
fldenv
stc
mov
mov
fnstcw
call
adc
adc
es
mov
mov
repz
lods
mov
inc
cltd
movsl
nop
add
push
test
adc
mov
iret
push
mov
hlt
mov
insb
push
arpl
sub
mov
enter
jo
push
jnp
xor
ret
mov
es
hlt
or
mov
sbb
pop
and
in
repnz
popa
xchg
push
jbe
sbb
mov
or
xor
adc
faddl
imul
xlat
sbb
or
push
ret
push
cli
adc
pop
out
or
lahf
popf
roll
add
cltd
outsl
sti
sub
test
jne
test
push
lock
mov
add
loop
xchg
xor
stos
ficoml
dec
mov
push
xorl
in
jmp
bound
gs
mov
icebp
clc
test
insl
daa
or
mov
xchg
push
jb
xor
aas
lods
push
iret
stos
xchg
movsl
movsl
int3
add
fadds
sub
mov
pop
ret
test
jecxz
popf
add
out
sahf
outsl
adc
popf
dec
jo
test
mov
ds
imul
inc
cmp
mov
jmp
ss
mov
clc
mov
xlat
pop
movsb
fneni(8087
insl
xor
xchg
and
xchg
xchg
mov
mov
test
outsl
inc
xlat
out
add
movsb
dec
jge
add
cmp
mov
xchg
pop
mov
add
push
dec
xor
mov
jb
mov
xor
cltd
xlat
cmp
les
jle
jle
mov
imul
mov
aaa
fbld
cmp
sti
lds
push
fstpt
mov
clc
shrl
cltd
out
xchg
sbb
aad
stos
xchg
or
lret
mov
lret
dec
mov
pop
inc
adc
pop
fiaddl
dec
push
sub
stc
scas
fcoms
subl
push
mov
mov
sbb
jb
ja
pop
mov
cwtl
test
pop
jle
dec
jne
fdiv
and
lock
xchg
aaa
xlat
dec
mov
sahf
mov
pop
fsubp
push
cmp
xchg
push
shl
and
fists
inc
vandpd
fidivs
jo
cmp
and
sbbl
ja
push
cmp
nop
mov
push
mov
inc
ret
xchg
jmp
mov
cwtl
arpl
inc
inc
xchg
xor
into
aad
pop
xchg
cli
xchg
or
sub
popa
xor
sbb
inc
jns
adc
pop
fstpl
mov
add
ljmp
out
mov
clc
cmp
jl
das
js
fmuls
dec
cmc
cmp
sbb
jl
pop
cltd
in
xchg
mov
adc
xor
add
nop
push
jnp
sub
popf
jecxz
dec
sti
mov
adc
xchg
das
lret
loop
mov
in
bnd
pop
into
inc
inc
xorl
jge
pop
jns
mov
daa
fisttpll
xor
insb
orb
xchg
arpl
hlt
lds
push
xor
jle
mov
stos
xchg
pop
cld
adc
fstps
cmc
adc
out
inc
ret
and
sub
rcll
movsl
or
or
incl
or
sbb
mov
mov
lcall
test
addr16
mov
sub
dec
ss
jae
cmp
rorl
shrl
je
inc
xchg
aaa
idivl
mov
push
pop
jae
shll
in
sub
push
lea
popf
fstpt
dec
std
fs
loopne
cwtl
dec
or
out
push
add
push
lods
cmp
imul
rcrl
ret
lea
outsb
or
int
dec
ljmp
lods
filds
fsubrs
jp
mov
rcrb
and
add
es
test
stc
mov
inc
and
push
cwtl
es
sub
mov
imul
adc
inc
push
xor
enter
mov
iret
out
cmp
lods
xor
inc
adc
sub
push
cmp
stos
inc
leave
xchg
rorl
jb
lahf
ljmp
jb
sbb
cmp
stos
mov
push
outsl
push
xor
ficomps
imul
les
loopne
int3
call
ja
cmc
xor
cmp
lcall
aam
push
adc
aad
cli
jb
ja
cmpb
test
ret
inc
jecxz
xchg
or
shr
sub
dec
inc
pop
gs
imul
insb
nop
stos
das
adc
lds
dec
dec
popf
cmpsl
fwait
push
in
xor
adc
loopne
mov
in
imul
inc
mov
data16
mov
pop
jns
sahf
xchg
loope
icebp
fisttps
mov
or
push
or
mov
fisubrs
fiaddl
inc
pop
add
fldt
push
arpl
lcall
mov
aad
dec
ja
lds
sti
test
repz
cs
adc
js
mov
subb
inc
jnp
fnstenv
push
mov
cmp
fwait
ja
xlat
jnp
inc
or
push
add
ret
jle
movsb
dec
or
out
mov
or
cmp
aam
mov
loope
mov
bound
mov
jmp
shll
dec
int
and
ffreep
repz
inc
les
mov
dec
cs
lock
cmp
mov
or
int
sbb
and
movzwl
sbb
pop
mov
addb
aaa
jb
and
mov
adc
adc
sub
mov
jp
leave
aaa
fdivr
stos
loopne
push
ss
ja
addr16
inc
ret
or
cld
cmp
ror
andl
add
push
mov
negl
cs
dec
xor
jnp
jae
xchg
out
sub
fsubs
push
andb
pop
xchg
mov
sub
add
mov
sub
std
clc
cmpsl
mov
enter
cmpsl
push
cmc
es
dec
jecxz
jg
dec
or
or
fnstenv
push
dec
lods
mov
js
int
sbb
add
fists
jle
sti
sbb
push
test
sbb
dec
sbb
push
adcl
inc
push
jmp
clc
loop
cwtl
jns
pop
sub
mov
pop
filds
add
es
and
add
cmc
inc
leave
dec
dec
jmp
jmp
mov
pusha
dec
fsincos
flds
std
insb
in
xchg
jp
sbb
mov
ja
pop
lock
daa
leave
lcall
jg
fsubl
es
inc
inc
sub
test
add
push
xchg
jns
xchg
push
mov
xchg
lret
add
out
cli
ror
ja
pop
ja
jp
mov
test
jb
xorl
lret
add
push
jmp
inc
out
pop
lods
push
pusha
insb
cmpl
cwtl
enter
push
out
pop
mov
sub
pop
jl
into
inc
inc
xchg
mov
adc
lahf
scas
jno
sub
or
cld
push
mov
dec
in
mov
mov
es
test
fmuls
cwtl
cmpl
xorb
adc
fs
dec
and
jge
push
imul
cmp
sarb
sahf
pop
in
sbb
hlt
dec
pusha
jmp
xor
fstl
mov
pop
add
popa
outsl
lret
enter
push
lds
test
add
add
mov
mov
test
cmpsl
sbb
dec
cmp
sbb
push
xchg
out
adc
shl
jbe
mov
test
add
shlb
pop
ret
data16
cld
jmp
idivb
popf
fwait
and
adc
mov
xor
fcoml
xchg
pop
pop
lea
sub
push
push
jae
call
push
negb
cmp
xchg
push
pop
fwait
or
hlt
arpl
or
aam
sti
xor
mov
or
mov
mov
mov
adc
aam
inc
add
sti
outsb
icebp
push
push
scas
pop
add
fildl
add
int
lcall
cmp
sbb
mov
push
ljmp
subb
mov
mov
outsb
loop
push
add
repz
loope
bound
mov
add
mov
push
mov
fisubl
jp
out
dec
loop
jl
adc
pushf
roll
mull
jne
popa
out
insb
rolb
xchg
and
cltd
stos
xor
cmc
fisubl
ret
test
test
fs
aam
or
jns
and
clc
fcomps
frstor
push
loopne
mov
mov
adc
or
fdivrs
mov
jp
pop
cmc
dec
inc
in
sbb
xor
inc
sarl
rcr
pop
movb
push
movsb
mov
jae
lods
lock
loopne
inc
cltd
inc
mov
cmpsb
divb
and
jnp
push
push
inc
sub
fistpll
add
enter
nop
movsb
mov
fwait
pusha
adc
stos
jp
mov
fidivrs
xchg
xor
adc
jno
andl
cmc
jb
adc
xor
mov
push
add
lods
xchg
mov
sarb
adc
scas
xchg
cs
pop
sub
and
sub
cmpsl
push
call
lea
mov
dec
inc
icebp
xchg
pop
stos
test
loop
fwait
jnp
inc
push
add
mov
lock
xchg
idivl
cli
jb
inc
adc
in
mov
jl
jae
mov
aas
push
pop
sub
jmp
test
adc
gs
cmpsb
push
jne
pushf
out
dec
fimuls
lret
push
adc
nop
cmc
cwtl
mov
cmp
vpcomuq
add
mov
out
mov
inc
sub
mov
ja
cmc
ret
xchg
lock
mov
and
xor
cmp
lods
lods
stc
jg
sbb
imul
dec
adc
xchg
addb
dec
pop
data16
or
push
jl
pop
sahf
outsl
in
pop
pop
inc
pop
mov
push
add
push
cmp
stc
cmpsl
inc
or
add
push
out
jp
les
cmp
pusha
xor
push
aad
adc
or
imul
mov
icebp
mov
inc
push
stc
fsubrl
adc
dec
aad
sti
mov
hlt
ljmp
mov
pop
clc
inc
dec
lock
ret
fnsave
adc
lcall
dec
mov
movsl
inc
les
bound
and
cmp
ret
rorb
fwait
fwait
pop
loope
mov
mov
and
xor
daa
pop
push
inc
add
les
push
push
mov
xor
sbb
jno
sub
push
add
aaa
jge
cld
cmp
in
scas
jne
mov
cmp
imulb
lods
test
jmp
int
push
fadds
lock
dec
add
loopne
adc
cmp
clc
test
in
push
cltd
and
hlt
pop
hlt
mov
je
cli
jg
into
xor
jnp
mov
in
or
jle
test
push
imul
jns
dec
pop
inc
and
pop
cli
inc
sub
daa
je
mov
sbb
sub
xchg
rclb
jecxz
call
clc
stos
cmp
arpl
jge
inc
pop
or
addr16
push
clc
cmp
loopne
fadds
jo
inc
lods
lods
push
mov
cs
subl
lds
jle
mov
lahf
and
mov
sub
and
out
mov
pop
push
push
daa
test
jle
mov
mov
cmp
mov
pop
and
xor
and
inc
ja
leave
sbb
pop
mov
sub
aam
mov
adc
mov
jo
cwtl
sbb
repnz
out
mov
xchg
jmp
gs
dec
lods
shl
sbb
add
mov
mov
mov
or
xchg
in
ret
bound
fs
dec
aad
mov
ss
loopne
mov
mov
jns
scas
lock
cs
xlat
data16
sbb
mov
xchg
xchg
popa
cwtl
filds
pushf
adc
sub
xor
adc
mov
push
ret
dec
orl
pop
ss
loop
push
fwait
mov
or
sub
ret
bound
pop
jns
push
movsl
test
mov
mov
and
xchg
mov
jo
and
mov
cmpsl
stos
xor
adc
xchg
push
push
push
dec
ja
pusha
dec
add
cmp
xchg
mov
inc
add
jecxz
add
xchg
mov
into
test
mov
xchg
or
xchg
loopne
adc
fbstp
mov
mov
or
scas
mov
iret
cmp
mov
pop
lahf
and
repnz
push
or
and
jg
jle
int3
ss
and
xlat
pop
dec
fnsave
sbb
test
scas
jle
int3
rorb
lea
mov
mov
cs
xchg
xor
ds
idivl
es
nop
in
mov
enter
je
idivb
sar
mov
jnp
pop
das
popa
insl
pusha
iret
aam
jbe
push
rorl
pop
fwait
or
mov
push
cmp
repz
jg
adc
fwait
sub
xchg
out
pop
stc
pop
inc
cmp
mov
fildll
faddl
cltd
sahf
in
mov
jle
loop
int3
std
mov
push
fldl
scas
test
call
stos
popl
mov
push
call
cmp
inc
fisubs
xor
cmpsb
in
mov
lods
mov
cmp
push
testl
out
jmp
jmp
iret
cmp
in
dec
loop
sub
mov
sub
dec
mov
adc
inc
pop
in
into
and
les
sub
xchg
aas
dec
xchg
pop
aad
sub
fsts
push
test
and
scas
das
fs
mov
mov
roll
aaa
mov
cmp
xchg
dec
test
int3
mov
loopne
idivl
fcoml
sbb
adc
rcll
jl
mov
mov
test
cmp
dec
or
push
mov
mov
or
push
ret
scas
jnp
inc
es
arpl
adc
cwtl
adc
fbstp
cs
and
imul
and
out
incl
dec
mov
push
das
shll
push
mov
lock
mov
or
pop
jb
jnp
jl
nop
mov
inc
mov
jne
sub
push
push
inc
or
testb
nop
pop
jbe
jecxz
mov
sbb
in
fildl
iret
xchg
adc
ret
insb
cmp
xor
fcomps
stc
jg
xchg
jae
clc
adc
cmp
dec
and
dec
movsb
shll
inc
or
mov
les
dec
incb
cmc
shrb
popf
dec
add
fistpll
xor
cmp
sub
dec
in
mov
push
sub
xor
mov
add
cmc
loope
fisubl
stos
movsl
pop
sbb
lods
repnz
pop
adcb
jae
adc
cmpsb
xor
and
out
out
lahf
mov
pop
sub
lock
fsubl
flds
bound
cmp
dec
mov
jno
mov
push
in
mov
daa
pusha
jecxz
inc
mov
clc
test
ror
bound
inc
popa
xor
inc
push
jbe
mov
imul
mov
sbb
nop
dec
into
jle
test
outsl
xor
aaa
add
sbb
pop
jno
jno
xor
mov
int3
push
dec
les
xor
cli
xchg
inc
jns
je
out
add
xor
fldl
scas
fwait
fs
mov
movsb
pop
pop
jp
hlt
repz
shll
mov
sub
mov
iret
fildll
push
ja
inc
jb
push
fnstcw
out
mov
xchg
xchg
icebp
mov
push
ds
xor
jno
fwait
mov
aam
mov
out
hlt
dec
adc
int3
test
jg
aas
mov
pop
push
shrb
or
les
xor
mov
out
mov
pop
sbb
int
mov
xchg
out
cwtl
fadd
rorb
cmc
loop
cmp
mov
or
inc
ret
scas
push
inc
sbb
into
dec
fldenv
jmp
scas
outsl
js
xchg
lahf
adc
mov
data16
stos
jle
imul
lcall
test
xchg
shrb
mov
orl
cmp
or
jo
adc
inc
aaa
mov
js
adc
pop
outsb
inc
inc
jp
dec
outsb
jo
mov
sub
jae
mov
fdivr
in
aad
push
ss
and
pop
dec
fmulp
lea
mov
pop
pop
rcll
xor
scas
in
shll
mov
rcrb
stc
stos
xor
inc
fstl
or
xchg
mulb
test
shll
icebp
sub
fidivl
mov
cmp
jg
cmc
sahf
movb
fs
cwtl
lods
fiadds
cltd
sub
mov
lret
lcall
mov
cmp
jl
enter
cmpsl
loope
in
fstps
xor
mov
pop
push
cmpsl
dec
adc
lods
jnp
fcompl
sub
sbb
shll
push
cmp
ret
sbb
jns
out
mov
mov
aaa
and
add
mov
xlat
jg
cmpsb
pop
cltd
mov
add
dec
and
aas
xor
cltd
cmc
and
mov
or
aad
xchg
imul
inc
pop
dec
dec
shr
sbb
sub
sbb
push
jno
fsubl
dec
and
jb
inc
sub
lds
clc
cmc
daa
push
scas
int
mov
add
jmp
dec
daa
dec
jne
leave
imul
cmp
inc
cs
and
dec
and
mov
cs
and
cmc
stc
aaa
popf
loopne
push
inc
in
aaa
mov
js
push
and
mov
fcompl
loope
mov
mov
aam
addr16
mov
or
data16
sahf
xor
jne
pop
xchg
ficompl
xchg
and
test
and
adc
test
mov
sub
push
daa
test
repnz
pusha
push
pusha
dec
fucomi
test
ds
jae
shrb
jnp
test
jo
and
xlat
or
add
mov
sub
in
sti
or
fwait
sub
repnz
fabs
and
icebp
mov
or
lahf
jo
fcmove
xchg
mov
mov
aaa
scas
shr
pop
das
xchg
mov
andb
sub
cltd
lock
xor
jecxz
loop
loop
jle
insb
nop
cmpsl
nop
mov
adc
and
call
inc
pop
and
stc
stos
adc
add
jno
ret
push
js
and
pop
sbb
jg
or
shll
out
inc
insb
xchg
jb
add
stos
repnz
inc
jno
addr16
jne
iret
jmp
mov
ljmp
pop
je
mov
push
pop
xchg
and
cmp
scas
jecxz
cld
pop
push
adc
stc
mov
jne
movsb
push
imul
add
int3
in
js
add
cmpsl
decl
mov
testl
push
cmp
jno
js
mov
sahf
aad
outsl
mov
mov
mov
ret
pop
cmp
inc
lds
popf
fdivs
pusha
test
jecxz
loope
adc
lods
add
inc
stc
outsb
xchg
mov
jns
mov
cmpsb
mov
dec
mov
adc
pop
mov
aas
test
mov
xchg
jno
sub
enter
ds
inc
and
mov
or
push
cwtl
pop
repnz
xlat
addb
cmp
fldt
js
dec
sbb
inc
scas
test
pop
or
jg
adc
hlt
stc
xor
lds
pop
in
sub
xor
mov
into
mov
fildll
or
add
jecxz
lods
fs
and
cmp
movsl
sbb
loopne
fwait
leave
aam
cmp
pop
mov
dec
mov
and
out
pop
push
addr16
and
jmp
cwtl
divl
xchg
pop
subl
test
and
jmp
inc
std
add
mov
cmp
pop
ds
and
and
cmpsl
stc
mov
mov
call
cwtl
pop
and
fucom
add
fwait
out
xchg
xchg
lcall
xorl
repnz
into
aad
aad
jecxz
inc
jp
dec
test
ljmp
adc
push
push
xor
in
add
jmp
test
out
xchg
in
sbb
roll
sub
push
cmp
add
mov
lock
mov
pop
push
or
inc
or
xor
pop
mov
adc
rcr
dec
enter
pusha
movsl
stos
or
scas
pop
push
or
clc
call
push
je
sbb
stc
push
stc
mov
leave
pop
repz
push
jbe
enter
sti
adcl
test
xor
jmp
sub
mov
mov
or
pop
into
xchg
ss
or
and
rcr
mov
aaa
or
jo
lea
xorb
pop
mov
dec
ds
xor
sti
cs
pusha
dec
sbb
cli
and
shrl
sub
imul
repnz
int
pop
iret
je
into
rcrb
adc
jg
dec
popf
mov
enter
sbb
incl
repnz
push
sbb
inc
xchg
push
hlt
adc
sti
cwtl
push
ret
push
xchg
jns
imulb
lods
and
movsb
xchg
sbb
mov
or
test
out
adc
outsl
rolb
mov
scas
add
fbstp
cmp
jae
mov
repz
aas
movsl
jmp
mov
sbb
daa
bound
add
lret
inc
jg
rcrb
mov
pop
outsb
cld
sub
in
std
cmp
fimull
sbb
insb
clc
fsubl
pop
scas
out
pop
imul
push
mov
loop
mov
lods
cmpsl
push
xor
lret
cmpl
pop
adc
push
out
mov
insb
dec
test
or
aas
jnp
enter
adc
mov
push
or
add
repz
pop
inc
mov
lcall
lods
push
pop
inc
stos
xchg
sbb
dec
mov
sub
adc
outsb
push
data16
jne
lds
dec
fs
pop
pop
aaa
lret
fs
and
addb
verr
mov
pop
adc
mov
lods
pop
ficompl
lret
and
pop
test
subb
out
int
jl
arpl
clc
ja
mov
fxch
lsl
sub
dec
repnz
mov
test
mov
in
nop
mov
xor
out
lea
cmp
cmc
addr16
std
jno
and
cmp
js
out
cmp
mov
lret
mov
daa
ljmp
outsb
cmp
cli
mov
jecxz
daa
bound
shll
or
out
nop
mov
jmp
fsubl
out
sub
mov
jge
adc
sahf
sti
mov
out
add
fildl
mov
lods
pop
enter
sub
fwait
data16
mov
js
pop
add
adc
jle
fbstp
pop
mov
lret
popf
cld
sti
inc
and
ss
add
fisubrs
and
sbb
and
fnstcw
lret
xlat
jnp
dec
mov
xlat
idiv
jg
xchg
push
jle
cmp
fsts
xchg
or
stos
add
mov
and
mov
xor
lods
fadd
or
fcoms
enter
jbe
out
jl
push
push
xchg
dec
aaa
inc
adc
scas
ret
fidivrl
pusha
xchg
jb
fwait
mov
fisubrl
jbe
cmp
jae
adc
or
sahf
popl
js
push
or
push
ja
jp
ret
and
adc
push
movsl
stos
ja
or
popf
shll
sbb
lcall
sahf
mov
je
cwtl
sub
sub
or
std
inc
cmp
insl
sbb
fbld
push
iret
loope
rcr
xchg
int
nop
cmp
mov
cmc
xchg
cltd
push
mov
sub
mov
lahf
adc
jnp
in
jmp
dec
fiaddl
jo
inc
imul
mov
roll
and
test
inc
or
icebp
mov
pushf
mov
into
pop
sbb
add
mov
pop
and
mov
and
test
pop
jg
test
dec
test
hlt
push
insw
test
inc
scas
js
lret
cmpb
jns
shlb
xor
jns
xacquire
xchg
mov
adc
push
inc
and
push
cs
jnp
jbe
cmp
xchg
loope
dec
xor
mov
mov
repz
scas
mov
jb
or
mov
lcall
jp
xchg
mov
xchg
andl
sbb
push
pop
movsb
or
adc
dec
and
push
mov
mov
cld
fwait
xchg
cli
pop
mov
inc
mov
popf
arpl
push
or
insb
in
dec
push
or
pop
dec
imul
jno
mov
fists
sbb
inc
push
jo
scas
insl
in
xchg
fnsave
shl
mov
lahf
imul
xor
test
aam
fmuls
adcb
add
sub
adc
subb
aaa
dec
ret
int
loop
mov
gs
sub
enter
jb
inc
in
mov
push
cmc
cwtl
aas
sub
pop
lock
and
in
push
arpl
roll
add
roll
pusha
outsl
mov
push
das
push
cmp
push
pop
stc
add
dec
sbb
dec
stos
lcall
jo
push
sub
loopne
jno
minps
mov
sub
enter
mov
je
fwait
loop
or
jle
movsb
daa
daa
mov
idivb
testb
xor
movsl
mov
shl
in
and
sub
dec
fdiv
inc
inc
cs
inc
mov
dec
xor
lods
mov
mov
xchg
xor
cmp
stos
dec
mov
cmpsb
iret
sti
mov
add
dec
jmp
inc
pop
push
jns
loopne
add
xchg
lret
inc
or
cltd
inc
and
cmc
data16
push
repz
add
push
pushf
enter
xchg
lods
nop
lret
lods
and
sbb
stc
bound
sub
dec
pop
aas
cld
or
ljmp
lods
shlb
adc
cld
cmp
imul
and
ja
push
and
repz
dec
aad
lret
mov
dec
lods
push
insl
dec
xor
lret
rclb
fdivrs
sbb
addr16
jno
jae
push
out
xchg
mov
cmp
jae
aaa
inc
xchg
in
arpl
push
and
out
mov
lahf
dec
mov
mov
outsb
bound
push
inc
xchg
inc
sbbl
das
push
leave
je
cmp
mov
ret
fldcw
add
inc
xlat
sub
cmc
stos
pop
mov
stos
mov
pop
mov
mov
adc
cmp
jecxz
sub
jecxz
jnp
adc
push
jg
ja
push
push
dec
sub
push
mov
out
lea
enter
sahf
inc
ss
push
add
xchg
mov
data16
shr
sub
inc
xchg
xchg
xchg
mov
mov
enter
test
mov
and
shll
dec
and
mov
adc
or
mov
sahf
inc
pop
ss
jae
loopne
addr16
cmp
jp
fidivrl
dec
jmp
movzbl
popf
jo
xor
pop
jmp
imul
in
aam
fwait
xor
pop
jb
sub
test
cli
sbb
insl
lahf
push
pop
mov
add
sub
or
cmpsl
mov
dec
jp
pop
lds
sub
mov
dec
out
cmp
jmp
test
lret
sbb
repnz
das
adc
add
mov
mov
push
test
jb
jae
mov
sti
fstpl
jne
xlat
xchg
or
mov
mov
jne
mov
xor
sub
shr
mov
movsb
lahf
lret
pop
shrl
mov
mov
xor
es
jno
and
dec
add
movsl
dec
ret
shll
testl
sub
xor
mov
std
lods
enter
loopne
mov
cmp
mov
mull
ljmp
cmp
jo
test
mov
lea
inc
dec
outsb
add
fdivrs
jge
rorb
pusha
test
pop
pop
dec
push
push
mov
dec
or
inc
mov
xchg
pop
mov
out
and
pop
adc
mov
sub
loope
sub
jo
test
mov
scas
xchg
fdivrs
pop
shrl
imul
cmp
jb
push
sbbl
leave
cmp
cmpsb
lods
adc
pop
jg
mov
xchg
and
pop
add
inc
outsb
sbb
iret
inc
push
cmp
cmpsl
ret
xchg
cld
pop
adc
icebp
sahf
into
jle
push
pop
mov
out
mov
lds
adc
stc
insl
std
fimull
popf
and
rcl
push
xor
js
sub
ret
adcl
mov
and
loopne
lods
out
or
lret
pop
adc
lret
push
test
fidivl
js
mov
push
sbb
add
dec
aad
mov
inc
lahf
mov
mov
push
int3
and
aam
fst
push
and
dec
dec
int
in
mov
and
pop
add
stc
test
mov
insb
sahf
xchg
scas
push
lret
push
cmpsb
sbb
cmp
cli
or
xchg
mov
mov
adc
mov
mov
lret
inc
xchg
rcll
test
rclb
fsubrs
clc
dec
outsl
sub
dec
add
xchg
out
ds
xor
push
inc
movsb
and
lods
ds
fadds
hlt
arpl
arpl
jp
mov
add
test
adc
and
ja
cwtl
and
cmp
fistpll
fidivs
lahf
insl
out
push
pop
adc
dec
or
adc
lcall
lods
or
dec
mov
pop
pop
push
shlb
daa
out
push
add
mov
sbb
lds
jno
mov
icebp
xchg
es
push
popf
stc
sbb
push
push
jae
jge
dec
stos
test
cmp
push
lcall
aaa
xchg
pusha
test
xor
xor
jne
mov
push
pop
mov
mov
rcrb
sub
jns
lahf
mov
les
xorb
rol
popa
in
lcall
iret
outsb
loope
addr16
cltd
rorb
cmpsb
adc
aaa
scas
repnz
mov
or
add
push
mov
jae
push
adc
cmp
adc
dec
or
jns
dec
adc
insl
xchg
push
dec
js
pop
sbb
fmull
and
mov
pusha
add
in
ror
pop
add
mov
orl
cmp
test
nop
pop
pop
mov
lock
stos
aas
xor
dec
outsb
push
xchg
mov
mov
filds
insb
push
pop
mov
seta
push
dec
das
push
in
adcb
mov
push
mov
scas
jge
pop
sahf
mov
xchg
jle
push
pop
xchg
cwtl
aas
popf
cmp
xchg
cld
cmp
cwtl
pop
ja
adc
pop
inc
and
fldl
mov
lds
sbbb
scas
mov
ja
jl
cmc
push
sbb
movsb
xor
inc
adc
adc
cmp
mov
cmp
adc
enter
js
xor
add
inc
sub
cs
xchg
sub
cs
out
fnstcw
sbb
jnp
inc
push
test
pop
fadd
inc
push
insl
inc
subl
xor
rorl
bound
imul
inc
ret
gs
cmpsb
mov
sbb
in
out
add
sbb
inc
ss
inc
pop
stos
sbb
shlb
icebp
inc
push
cli
ss
add
sbb
fstpt
push
in
push
popa
aaa
lret
jnp
inc
fstpt
lret
xchg
out
mov
mov
jns
mov
xor
xor
lcall
cmovae
popa
cmpsb
and
hlt
in
pop
jae
cmp
ljmp
mov
mov
lods
xchg
addr16
insb
cmpsl
sub
outsb
jecxz
lcall
inc
push
orb
pop
add
shll
sbb
ret
jno
les
xchg
cld
outsb
stos
ffreep
lods
pushf
out
add
fwait
outsl
std
imul
pop
std
in
sub
sarl
loopne
imul
insl
int3
aas
cmc
mov
cmp
jbe
adc
pop
push
lods
or
or
paddsw
add
cmpsl
jge
push
push
add
cltd
dec
iret
xlat
mov
movb
clc
and
mov
loope
push
in
outsb
xchg
inc
jp
das
sbb
lahf
outsl
or
jne
nop
dec
dec
inc
jg
movsb
or
mov
jg
dec
scas
ljmp
add
push
int3
mov
popa
pop
jmp
xchg
adc
fildl
lods
lea
stc
ret
imul
sub
pop
mov
sub
ret
enter
xor
popa
mov
cmp
push
data16
outsl
adc
shll
or
cmp
and
ja
imul
sub
sub
sub
dec
cmp
aam
fwait
es
cmp
jge
mov
fadd
jo
and
pushf
lods
insl
adc
mov
jle
mov
pop
add
sar
mov
ficompl
sub
adc
out
or
cmp
sbb
mov
adcl
dec
addr16
mov
mov
test
pop
jns
scas
scas
and
jne
dec
mov
push
ljmp
push
push
mull
mov
mov
cmpsb
sbb
inc
cwtl
adc
pop
cmpsl
add
sub
lods
filds
shll
adc
xchg
std
jo
sub
daa
out
ds
inc
test
rclb
dec
xor
fwait
sub
or
adc
add
fnstsw
into
sub
dec
pop
mov
neg
mov
add
xor
inc
push
xchg
push
mov
inc
push
xchg
mov
add
push
ja
xor
and
xor
fidivs
cmp
loope
pop
and
dec
movsl
cmp
rclb
mov
xchg
sbb
push
bound
ja
xchg
and
xchg
arpl
mov
xor
jnp
xchg
mov
cmp
fwait
sahf
sub
mov
or
jo
add
cmp
cvtps2pi
jb
dec
xor
fsubrl
fs
movsb
ret
test
mov
jbe
mov
lods
adc
rcl
mov
sub
cmpsb
ss
mov
xchg
mov
scas
hlt
mov
fistl
cmp
inc
movsl
mov
pusha
mov
fdivrp
test
mov
mov
pusha
xchg
je
aad
adc
pop
xchg
les
lods
ret
pop
arpl
inc
cmpb
sti
lods
xor
add
outsl
adc
adcl
out
push
pop
pop
bnd
fiaddl
mov
jecxz
cmp
mov
movsb
aas
cmp
movsb
or
xor
sub
mov
leave
sub
in
mov
jecxz
test
add
push
pop
imul
sarb
sub
inc
push
movsl
stos
aaa
push
pop
loope
icebp
push
int
popa
loope
push
shrb
cmp
sub
mov
aas
pop
daa
and
in
imul
inc
push
cmpsl
jbe,pn
xor
aam
pop
int
in
test
pop
adc
cmp
jmp
adc
dec
and
jns
pop
out
jne,pn
push
ss
sbb
or
les
addl
mov
pop
add
push
pop
cmp
ret
loop
pop
sbb
xchg
inc
mov
jle
loope
adc
and
lahf
sarb
int
ret
decb
cld
or
inc
jns
les
lret
test
ja
pusha
jnp
sbb
xorb
or
mov
dec
in
cmc
ret
cmpsl
bswap
mov
orl
push
popf
pop
cmp
aam
pushf
pop
cmp
test
push
add
cmp
mov
inc
cmp
mov
mov
test
adc
xchg
xor
and
jns
cs
shll
mov
or
xchg
dec
les
jne
or
enter
jno
cmc
pop
inc
imul
inc
inc
add
cmpsl
int
cmp
sbb
mov
jmp
fldcw
jge
mov
imul
add
add
imul
xor
xchg
push
xlat
fwait
aad
fdivl
ss
lcall
es
adc
mov
push
pusha
add
dec
pop
pop
ss
pop
add
pushf
mov
fcmove
es
xchg
add
dec
add
mov
stos
repnz
mov
lock
es
outsb
mov
and
push
mov
pop
xchg
adc
shrl
mov
roll
test
push
repz
std
ljmp
lods
fwait
and
out
lea
popa
mov
loopne
pop
sbb
pop
movsl
leave
loope
bound
push
js
pop
scas
imul
je
inc
sub
mov
stos
mov
aad
push
pop
sub
into
gs
frstor
mov
jne
nop
out
mov
push
mov
bound
jns
or
sub
jl
out
pop
xor
fwait
mov
mov
das
xchg
js
sbb
mov
imul
lds
or
dec
mov
sbb
es
daa
fwait
lods
popf
mov
scas
fidivl
xor
sub
rol
js
sub
mulb
cmp
push
dec
repnz
xchg
jecxz
mov
mov
push
mov
shrl
xor
scas
inc
adc
in
inc
xchg
sbb
clc
in
dec
inc
jge
xchg
gs
sub
xor
js
jno
inc
into
mov
pushf
xor
push
adc
jb
adc
icebp
jne
imul
jecxz
mov
outsl
or
mov
je
sahf
adcb
shrb
adc
cmp
pop
xor
xor
xor
or
sub
fists
jmp
cmpb
or
or
add
movsb
jl
shll
and
mov
addr16
sbb
push
aam
mov
pop
xlat
mov
jl
sub
aad
push
sti
mov
insb
mov
les
xor
test
ss
sahf
sbb
xchg
scas
pop
and
cwtl
pop
cli
inc
mov
jp
in
push
int3
mov
mov
mov
jns
call
xchg
popa
mov
dec
in
mov
dec
imul
in
iret
add
ds
xchg
addl
es
in
daa
lods
xor
xor
gs
or
not
inc
inc
aad
test
icebp
inc
test
cld
mov
dec
lea
aas
and
xchg
inc
lret
leave
fucomip
inc
pop
iret
lahf
addr16
mov
and
into
sbb
push
mov
sub
sub
divb
mov
mov
sbb
dec
lods
pop
cmp
adc
stos
pop
adc
int3
adc
scas
xor
lods
aaa
mov
sbb
xchg
mov
rcrb
pop
imul
in
xlat
inc
repnz
cmpsl
int3
jp
or
lret
pushf
adc
ss
enter
les
enter
ret
cmp
out
sbb
bound
fistpll
sarb
in
sti
dec
out
int3
data16
push
into
sbb
fcmove
aad
leave
pop
insl
and
iret
into
add
int
cmp
sarb
inc
dec
popa
cmpsl
mov
push
mov
lock
cmpsb
sbb
das
arpl
outsb
or
xchg
flds
mov
insb
insl
dec
xchg
inc
push
push
imul
push
and
jg
jns
mov
push
shll
fs
mov
and
xchg
rol
arpl
mov
imulb
add
push
out
popf
mov
fwait
hlt
mov
inc
sbb
mov
loope
cs
mov
popa
add
mov
cmpsb
sbbb
pop
adc
xor
aam
les
mov
movsl
inc
das
test
pusha
jecxz
pop
scas
mov
mov
cmp
sahf
and
jmp
bound
jg
inc
xchg
jecxz
leave
lcall
cmp
out
sbb
jbe
fs
int3
daa
pusha
pop
mov
fistps
xchg
pop
das
dec
movsl
mov
out
cmp
xchg
mov
mov
repz
sub
pop
sbb
shlb
lock
cmp
lea
test
in
call
mov
sub
or
out
or
push
aas
enter
and
and
test
psubsb
pushl
xchg
mov
adc
jo
jge
bnd
mov
cld
dec
outsl
lret
das
lods
adc
mov
cmp
or
xchg
dec
ret
pop
fstps
jp
pop
or
sarb
or
xor
mov
inc
pop
sub
add
push
mov
sbb
xor
mov
js
xchg
push
sub
sti
mov
pop
push
xor
dec
faddl
xchg
sbb
aas
int3
call
mov
ds
fwait
sub
fiaddl
fwait
or
fisttpll
inc
xlat
xchg
arpl
sahf
and
mov
or
in
sbb
aaa
dec
addr16
pop
and
test
sbb
add
int
sbb
jo
addr16
insl
or
mov
int
xlat
pop
pop
push
jmp
hlt
lds
incb
cmp
int3
loopne
shlb
ds
sub
lret
sub
into
jno
lock
mov
mov
les
xchg
push
das
mov
loop
mov
sbb
imulb
out
pop
xchg
outsl
or
mov
scas
jl
sarl
dec
sub
ljmp
rcrl
cli
sub
fimuls
mov
test
aaa
xchg
sub
pop
jle
push
fimull
cltd
cmp
jle
iret
jmp
out
mov
insb
loope
mov
or
and
add
fistl
lret
iret
fdivrl
out
jne
lret
mov
dec
sbb
leave
adc
jnp
jb
cmp
xchg
in
dec
loopne
das
ljmp
xor
rcl
in
jnp
sahf
movsl
jae
sbb
pusha
pop
popf
into
pushf
pop
sbb
int3
xchg
stos
aas
frstor
mov
shlb
mov
arpl
stos
lcall
outsl
mov
dec
ljmp
popf
sete
stos
test
add
add
mov
pop
xor
mov
inc
mov
add
sti
adc
xchg
fsubrs
sub
iret
cli
mov
dec
fistps
adc
std
lcall
cmp
xor
sti
push
or
roll
mov
call
lahf
lea
pusha
ljmp
sub
mov
cmp
or
sbb
jecxz
icebp
mov
stc
cmp
adcl
cmp
xor
enter
bswap
mov
icebp
fidivrl
add
push
icebp
enter
inc
pop
pushl
mov
rcrl
pushf
stos
fwait
sbb
jno
jl
jg
insl
inc
sub
mov
in
add
xadd
inc
jecxz
xchg
sahf
test
and
ljmp
insl
shrb
jl
iret
jg
jg
rclb
insl
inc
push
ret
stos
sahf
xor
lock
outsl
call
test
mov
sbb
push
pop
dec
xchg
dec
sub
loopne
push
inc
sbb
popf
sbb
or
cmp
icebp
cmpsb
adc
pop
mov
mov
lahf
jmp
xlat
fistl
add
dec
push
lods
xor
out
fistpl
and
popf
jg
out
mov
scas
insl
lods
negb
les
cmp
leave
push
xchg
inc
mov
mov
mov
sub
nop
and
ss
jg
popf
mov
sbb
add
jecxz
hlt
mov
addr16
cmpl
insb
fildl
cmpl
js
jecxz
mov
push
mov
lahf
enter
dec
push
dec
hlt
mov
jae
or
ljmp
mov
jo
loopne
lret
fimuls
adc
lock
aaa
add
adc
or
xchg
aad
insl
pop
sub
loop
shrl
inc
stos
addr16
mov
mov
jg
pop
shrl
pop
fisubs
nop
hlt
dec
sahf
cmpsl
inc
cmp
mov
icebp
jl
mul
inc
sbb
sub
sarb
adc
or
outsb
dec
mov
icebp
jp
scas
jbe
jg
jo
icebp
cmpsl
push
mov
and
out
je
lcall
cmp
adc
movsl
pop
xchg
pop
out
mov
adc
cmp
sbb
mov
outsb
add
orb
je
sub
arpl
int3
cwtl
mov
jae
or
mov
cmc
ret
xchg
frstor
and
lods
ret
cld
dec
fstpl
pop
jae
cmp
loope
in
mov
or
ds
or
loopne
test
xchg
cs
lret
sub
xchg
cs
out
jne
shlb
loop
fsubrl
push
sub
in
mov
adc
push
or
jno
and
xor
pushf
push
add
cmp
mov
js
sahf
and
add
sub
int
out
and
xchg
stc
lds
dec
sti
test
out
cmp
cmp
pop
das
inc
arpl
loope
dec
push
mov
test
mov
dec
mov
sub
jne
repnz
or
scas
sahf
rcrb
fnsave
in
incb
sbb
fadds
or
std
or
popa
popa
mov
or
sub
aam
inc
push
push
xor
ret
xor
ret
xchg
ja
xor
jno
pop
mov
sahf
xchg
mov
xor
nop
outsb
int
in
mov
push
add
xchg
fldenv
push
mov
xor
cmp
das
iret
test
cmp
inc
xchg
aad
into
ljmp
lret
or
mov
adc
add
sub
cli
dec
or
push
jnp
xor
jmp
push
leave
sub
fisubrs
sahf
pop
push
adc
push
scas
decb
pop
cwtl
or
push
mov
jg
ja
jo
push
inc
mov
adc
fildll
scas
cmc
mov
xor
inc
xchg
mov
pop
push
int3
negl
mov
inc
or
imul
mov
std
movsl
cmp
in
lods
mov
pop
or
sbb
xor
arpl
faddl
stos
ret
add
loope
das
fldz
and
in
stos
dec
fs
or
out
or
xchg
adc
aaa
xorb
fucomip
or
in
outsl
dec
pusha
orb
sbb
or
sahf
pop
or
daa
xor
ror
insl
cwtl
lahf
inc
sub
daa
dec
dec
push
sti
movsb
pop
ret
inc
adc
shr
imul
and
insl
sbb
jne
movsl
jne
sbb
les
sub
cmp
inc
push
icebp
out
sub
insb
lds
add
xchg
cmp
test
into
add
pop
out
ss
jno
mov
sub
mov
or
rolb
jle
movsl
xchg
mul
fdivl
jb
pop
punpckldq
nop
pop
pop
dec
inc
hlt
data16
mov
fstps
jl
popf
out
dec
fistps
xchg
xchg
std
mov
ds
sbb
stos
pop
je
in
lods
or
dec
push
mov
dec
movsl
xchg
mov
rcl
lret
cmp
sub
insl
jmp
in
out
push
mov
sub
sti
dec
sub
adc
js
arpl
cmpsl
fdivrs
into
ret
or
cwtl
addr16
add
or
push
add
xor
mov
mov
js
xchg
adc
mov
add
popa
and
xchg
daa
cmp
daa
cld
cwtl
sub
sub
and
cmp
jp
loop
lcall
mov
xor
outsl
das
xor
cmp
subb
lock
into
jmp
cmpsl
inc
scas
mov
or
dec
jl
jp
push
cmp
loope
mov
add
in
mov
or
jmp
movsl
jb
dec
fdivl
mov
sbb
insl
movsb
sbb
daa
mov
push
mov
hlt
xchg
sbb
out
and
adc
dec
outsb
pop
mov
inc
sub
in
jmp
push
test
add
inc
fmull
das
nop
notl
pop
xchg
insl
xor
push
pop
sbb
rcrl
push
movsb
lods
and
lods
cmp
daa
repnz
xchg
jnp
inc
xlat
mov
inc
aad
mov
test
loop
movl
test
adc
push
lods
test
sub
add
push
enter
jg
imul
rorl
sub
xlat
mov
pop
inc
stc
jl
and
add
pop
jmp
mov
mov
jne
les
orl
sbb
adc
xchg
mov
mov
dec
jle
movsb
arpl
in
stos
andb
das
hlt
mov
xor
jnp
and
mov
sub
test
and
adc
mov
clc
jb
sbb
pop
inc
data16
add
or
stos
test
xchg
xchg
push
iret
daa
mov
insb
mov
xchg
pop
jbe
adc
and
loop
dec
movsb
xchg
int3
movsl
incl
mov
testl
scas
xor
cltd
push
movsb
ss
adc
jne
movsl
adc
mov
xchg
cmp
sbb
and
xchg
fstl
fildll
dec
stos
mov
mov
push
pusha
xor
jo
pop
mov
xchg
mov
inc
pop
push
lret
std
shll
dec
mov
cmp
dec
sbb
sbb
jmp
arpl
fcomps
mov
cmp
icebp
bound
or
xchg
jmp
pusha
stc
jae
sub
ret
jg
test
sarl
sahf
test
mov
push
aam
dec
cmc
adc
and
jno
adcl
aad
adc
dec
cltd
dec
ss
xor
and
pop
or
cmp
jne
adc
leave
adc
inc
movsb
and
jo
ftst
adc
out
xchg
xchg
push
cmp
or
ljmp
mov
jae
jo
jle
test
add
sarb
sub
fldcw
cmp
ds
or
shlb
pop
pop
nop
push
daa
fidivrl
jb
test
inc
daa
lock
mov
ficomps
push
add
mov
lcall
mov
mov
adc
js
sbb
mov
cmp
mov
jecxz
ja
push
inc
dec
cmp
aad
stos
sbb
in
cmp
hlt
addl
jmp
xor
scas
in
and
or
arpl
mov
dec
add
cwtl
jge
push
scas
cmp
loope
lahf
lods
inc
mov
sub
sbb
pop
mov
aaa
aam
in
pop
ds
jecxz
sub
xchg
push
inc
ss
push
stos
lahf
push
mov
scas
rcrl
ljmp
cmp
mov
pop
xor
ret
sbb
xor
loope
dec
loopne
xchg
or
jecxz
cmp
push
mov
add
lds
inc
ljmp
mov
xchg
loope
adc
sbb
pop
ds
enter
outsl
mov
mov
das
jno
pop
mov
jae
fldcw
scas
mov
fwait
cmp
into
mov
mov
mov
es
xor
dec
dec
add
inc
push
dec
cmpsl
fnstenv
fcoml
out
push
je
das
xchg
pop
inc
inc
mov
mov
cs
out
enter
or
pop
pop
in
sti
pop
popa
xor
subps
jns
inc
jae
aam
jmp
ljmp
bound
lcall
ja
cmp
out
cmpsl
scas
mov
or
inc
loopne
xor
xor
inc
xor
xchg
ret
mov
jge
aaa
ds
jle
mov
push
aaa
xchg
dec
fnstcw
jo
inc
dec
mov
addr16
lea
nop
repz
cltd
add
adc
ljmp
shlb
out
popa
mov
dec
fisubrl
int3
outsl
xchg
mov
adc
insb
mov
int3
icebp
jae
adc
cmp
ds
pusha
enter
sub
cmp
repnz
jecxz
pushw
xchg
push
mov
push
mov
cwtl
test
shl
js
xor
mov
xor
jbe
lret
shlb
in
and
jge
pop
movsl
bound
or
lds
aas
or
jg
lods
and
sbb
mov
addr16
mov
push
dec
dec
sbb
aam
movb
lcall
lret
or
and
and
push
sahf
and
test
xchg
enter
in
movsl
jp
push
insb
je
fisubrs
test
cmp
aas
inc
int
je
faddl
push
inc
daa
fwait
dec
out
xor
into
sbb
adc
dec
fisubrl
xlat
pop
cmp
add
mov
out
jb
lock
movsb
mov
cmpsb
cs
sub
xchg
orl
aam
push
rcll
pop
mov
adc
or
sbb
mov
fcoml
je
mov
sub
adc
outsl
arpl
int
jns
and
out
leave
lods
mov
add
cmp
addr16
iret
dec
or
lret
or
push
pop
clc
test
testl
cwtl
mull
aad
imul
fwait
adcl
rcrb
fdivrs
adc
sub
sub
or
int
pop
xlat
xchg
nop
sbb
std
divl
out
cmp
jg
cmp
jmp
in
sub
adc
xchg
cmpsb
mov
jns
mov
pop
shl
ds
xchg
hlt
mov
xlat
pop
push
fwait
push
sub
add
mov
sub
aas
cmpsl
fldt
add
outsl
fimull
mov
cmpsb
movsb
xchg
lret
inc
jecxz
jecxz
ficoms
add
inc
push
stos
adc
inc
mov
xchg
daa
lcall
jmp
fwait
xchg
into
or
outsb
dec
jns
daa
xchg
push
pop
ss
out
mov
icebp
or
xor
mov
clc
fstp
lods
fistpl
orl
je
jge
xor
lcall
rcl
push
int3
negb
sub
mov
into
dec
xchg
outsl
pop
loope
fidivrs
outsb
div
pop
dec
xchg
or
push
pop
in
dec
mov
sbb
pushf
push
mov
add
stc
xchg
sbb
sbb
xchg
xchg
outsl
and
or
pop
push
cmc
sbb
ss
xrelease
inc
push
push
aas
repnz
fisubrl
les
add
jo
dec
mov
icebp
sub
sub
mov
push
cmp
cmpsb
bound
rclb
popf
mov
out
int
and
daa
lret
xchg
in
popa
loope
adc
jne
adc
mov
mov
out
and
in
inc
leave
shrb
xor
adc
jo
or
inc
aad
int
call
mov
rorb
repnz
sub
mov
ficoms
mov
cmp
mov
aas
and
cmp
inc
ds
and
push
dec
fstl
aaa
icebp
dec
movsl
jnp
dec
cmp
jbe
adc
cltd
inc
jge
fistl
cltd
mov
int
aad
jmp
nop
jl
xlat
push
stos
lods
es
or
xchg
mov
jae
ja
mov
adc
hlt
xchg
and
jg
dec
test
in
test
sub
push
fisttpll
fmull
fcmove
xchg
jnp
jge
aam
jecxz
lahf
jl
test
push
scas
scas
fs
xchg
sub
mov
cmpl
lret
enter
scas
mov
mov
cwtl
addr16
mov
inc
jne
push
sbb
push
mov
dec
imul
incb
leave
cmc
pop
fidivrl
push
adcb
js
inc
nop
into
test
dec
xor
iret
or
lods
mov
dec
aaa
test
pop
jae
test
out
mov
push
lock
push
sbb
ret
sti
pop
and
mov
lcall
inc
enter
cwtl
pusha
out
aam
inc
mov
mov
fcmovnb
jle
jge
sahf
pop
jnp
push
clc
jbe
add
mov
popa
mov
mov
addr16
je
mov
out
lods
sbb
push
mov
dec
das
lcall
sub
insl
mov
push
dec
sbb
repnz
cmovs
cli
bound
cmp
sbb
test
pop
push
lahf
sahf
idivb
inc
pop
mov
repnz
nop
push
jnp
cmpsb
cmc
cltd
sbb
cmp
pop
outsb
cmc
inc
jo
pop
push
cmp
or
ss
outsb
addl
nop
in
mov
and
mov
cmp
and
mov
cmp
inc
mov
pop
push
sarb
adcb
sub
roll
adc
outsb
and
inc
aas
and
aas
in
ja
dec
jmp
jecxz
sbbl
fistl
aaa
rol
sub
push
fucomip
and
mov
outsl
dec
jbe
test
in
cmp
jbe
inc
in
rcrl
mov
mov
add
lret
daa
jmp
lcall
xchg
jmp
add
xchg
movnti
test
popa
inc
mov
sbb
test
fnstsw
cld
jle
sbb
mov
ss
stos
cmp
sarb
jecxz
mov
adc
jl
jecxz
adc
xor
cmp
xlat
sbb
pop
mov
loope
push
subl
movsl
xchg
mov
push
pop
adc
mov
clc
insl
cmp
mov
mov
into
cmp
ror
xorb
add
in
xchg
inc
mov
mov
mov
ret
pop
jg
xor
ffreep
sub
xlat
push
stos
inc
adc
adc
inc
les
int3
in
sbb
je
mov
cmp
pop
pusha
mov
push
jns
adc
sub
out
xchg
inc
cmpsl
and
push
xor
cld
nop
inc
inc
mov
or
sub
ds
out
inc
aaa
mov
pop
adc
or
xchg
xchg
cs
mov
jmp
pop
or
fwait
dec
andb
jmp
sub
out
in
xor
mov
in
sbb
push
and
xor
jb
adc
mov
imul
clc
lret
dec
jbe
mov
iret
or
cmp
data16
adc
lahf
pop
lods
imul
xchg
lea
dec
loopne
outsb
sbb
lahf
push
scas
loop
inc
scas
test
ret
jb
sub
nop
in
fistps
fimull
js
int3
dec
sub
cmpsl
shrl
xor
int3
in
je
push
xchg
aam
lds
jne
dec
ljmp
sti
enter
mov
out
enter
jo
add
adc
xchg
test
out
dec
xorl
test
fildl
hlt
or
cmp
mov
xor
add
pop
cli
in
ret
pop
cltd
cli
pop
inc
cmpsl
xor
fdiv
xor
fcmovnb
inc
aaa
lods
pop
scas
xorl
sub
mov
or
jl
adc
ja
or
and
aad
pop
loop
pop
aas
imul
jmp
pusha
xor
inc
jl
push
jmp
push
iret
and
test
aaa
mov
neg
push
int
ficoms
push
es
enter
mov
mov
dec
and
adc
pop
mov
sete
mov
fs
adc
mov
fnstcw
sub
dec
mov
sub
push
scas
rcrb
test
mov
xchg
ds
and
xor
fnstenv
jge
inc
adc
test
mov
adc
xlat
adc
fiaddl
out
push
mov
xor
mov
jno
into
ret
rcrl
mov
cmp
loopne
mov
xchg
inc
push
mov
call
aas
rcrl
cs
adc
push
xchg
fs
out
push
and
mov
adc
sub
lods
jg
and
cwtl
jb
jno
xchg
inc
outsl
pusha
cmp
xchg
clc
pop
stos
leave
repnz
add
fs
lock
mov
and
dec
shll
incl
pop
jae
addr16
ss
aas
adc
in
je
imul
cld
notb
inc
aas
lret
shlb
insl
mov
stos
jo
out
cmpsl
jae
out
lods
outsl
inc
adc
fadds
fisttpll
inc
jae
out
dec
leave
jne
push
xchg
cmc
xchg
xchg
dec
add
dec
mov
or
jnp
int3
repz
and
and
push
sub
sub
out
pop
xor
repz
cld
adcb
adc
mov
loop
push
ss
nop
pushf
add
sti
jecxz
xor
xor
gs
movsb
mov
and
mov
movsl
mov
dec
movsl
pop
mov
mov
mov
xchg
mov
adc
scas
out
jbe
into
sub
lods
xchg
fwait
adc
xchg
xor
andb
jnp
arpl
push
popa
rcrb
lea
mov
jmp
push
fmuls
jmp
sbbb
lock
pop
mov
insl
stos
iret
cmp
aam
fidivrl
js
not
daa
push
shrb
fcoml
and
add
push
std
insb
pushf
and
jnp
cmp
test
or
sub
leave
pop
aad
int3
int
nop
fisttpll
test
pop
daa
cmp
jmp
mov
or
pop
punpckhbw
dec
xchg
and
sti
mov
test
sbb
adc
cmp
popa
test
and
mov
mov
jb
or
ret
or
fisubl
hlt
decl
mov
mov
lret
sbb
pop
adc
test
sbb
dec
jns
fs
xlat
push
orb
iret
and
mov
aam
sbb
fidivs
test
fs
mov
mov
bound
pop
add
ljmp
lahf
sbb
or
jg
lret
out
rol
repz
mov
data16
in
iret
add
cmp
arpl
push
lods
add
mov
out
ja
mov
push
lods
jbe
sbb
aaa
in
std
stos
lods
push
cld
into
push
xchg
cltd
xchg
fsubrl
mov
push
daa
arpl
sbb
popf
insl
and
add
rol
push
mov
in
xor
addr16
xchg
mov
sub
mov
adc
scas
xlat
xor
fdivrp
sarl
cmpsl
jmp
fidivrl
xchg
pop
fwait
mov
dec
cmp
sub
xor
xor
cmp
icebp
sti
inc
div
repz
pusha
sarl
sub
in
sbbl
aam
jne
iret
fmuls
inc
scas
shrb
mov
jno
lds
mov
add
shll
ret
jbe
xor
rolb
add
push
cmc
popa
sahf
adc
popa
lock
add
inc
repnz
push
testl
mov
or
int
pop
pushf
arpl
add
mov
or
dec
das
imul
iret
pop
aaa
or
fmuls
mov
mov
push
outsl
decb
and
and
push
jae
push
fs
cwtl
dec
xchg
xor
fimuls
aas
add
cwtl
nopl
pop
push
inc
inc
subb
dec
push
mov
out
stc
jge
xchg
pop
enter
in
sub
dec
icebp
jno
push
jl
stc
mov
cmp
out
sbb
mov
or
inc
aaa
pop
mov
adc
pop
jo
push
jbe
jg
mov
je
and
cmp
fmul
push
jl
add
mov
daa
xchg
inc
call
test
movsb
xor
lahf
cmpsl
sarl
jg
cmc
je
mov
add
xor
subl
shl
cmpsl
mov
ret
fdivrs
cmpsb
jge
sbb
aam
lock
push
xor
lcall
mov
test
scas
scas
addr16
int3
xchg
push
imul
and
cld
cltd
inc
lea
hlt
cmpsl
inc
or
jg
push
test
xchg
test
xchg
xlat
loope
jne
les
rcrb
jno,pn
fcmovb
lods
dec
hlt
jecxz
mov
je
xchg
mov
push
enter
cmp
adc
jno
push
es
dec
shll
adc
mov
or
fxch
cltd
sbb
ret
popf
adc
aad
cmc
imul
xchg
ljmp
sub
fwait
adc
pop
push
iret
outsb
and
cmp
addl
outsl
and
push
lahf
loop
fildl
lea
in
pop
stc
lcall
in
xor
inc
sub
cmpsl
xlat
mov
xchg
movsb
jp
rol
or
jp
and
mov
lock
aaa
outsb
mov
and
aaa
sahf
push
out
fcmovbe
test
hlt
movsl
mov
out
fs
pop
push
sub
pop
mov
lret
mov
orb
sub
shl
cmp
push
xor
mov
lahf
pusha
cmpsl
movsl
inc
fidivl
cmp
xor
or
pushf
lods
pop
xchg
mov
aaa
inc
xor
mov
push
outsb
mov
add
dec
icebp
adc
pop
imul
aam
jmp
or
push
jp
adc
idivb
add
out
aad
test
xchg
mov
jb
mov
insl
idiv
loop
stos
icebp
inc
mov
mov
pop
nop
insb
push
arpl
jge
in
popl
dec
ret
je
aas
cmp
dec
sbb
rcr
dec
outsl
adc
sbb
lock
inc
mov
ret
xchg
sti
or
scas
inc
xchg
pop
sbb
adc
inc
jne
repnz
adc
cltd
dec
loope
mov
mov
mov
pop
scas
add
xchg
xchg
xchg
fimuls
test
inc
mov
js
adc
pop
adc
in
mov
dec
scas
aas
movsb
test
sbb
out
xor
fwait
mov
fcomp
shlb
icebp
sti
mov
or
jg
pop
fchs
pop
and
push
mov
mov
lea
shlb
lcall
ss
push
ror
mov
ret
aaa
mov
jno
into
inc
icebp
mov
test
push
mov
push
mov
mov
ret
arpl
jnp
jb
jne
pop
ds
fincstp
sub
imul
out
imul
xor
and
test
sub
push
xor
arpl
add
ljmp
mov
sti
les
scas
dec
outsb
jle
fmul
ds
cmc
in
popf
mov
int3
and
addr16
pop
out
iret
sbb
and
mov
push
jp
push
sbb
xchg
iret
cmp
lret
mov
inc
sarl
mov
daa
loopne
fstps
in
dec
mov
jmp
dec
fisttps
mov
leave
scas
dec
iret
adc
shrb
fldl
ja
or
out
xchg
pop
push
cwtl
lahf
mov
shrb
rcrb
add
mov
in
loop
cmc
xor
icebp
loope
jnp
jbe
popa
bound
insl
lods
cld
push
movsb
insb
testb
aam
mov
cmc
testb
mov
js
dec
aaa
rorb
inc
xchg
sub
pop
cmp
add
into
cmp
push
aaa
inc
push
int3
lcall
lock
push
and
mov
jns
das
mov
fnstsw
mov
mov
cmp
repnz
hlt
mov
ljmp
fcmovbe
inc
lock
ret
call
lods
stos
xchg
xchg
and
mov
out
add
repnz
mov
rol
push
sub
movsb
pop
mov
push
out
leave
adc
fcomi
push
mov
jbe
aaa
call
jp
fldl
insb
int3
mov
inc
imul
loop
jns
cmpb
lahf
jecxz
test
cwtl
push
mov
push
mov
push
xchg
xchg
sbb
xor
and
sahf
jb
cwtl
and
loopne
and
jb
xchg
cmpsl
cmpsb
pop
pop
fisttpll
adc
aad
dec
imul
lcall
int
adc
ds
sbb
data16
iret
sbb
orb
stc
ret
popa
int
add
outsb
cmc
lcall
imul
dec
jno
jmp
pop
cmpsb
jne
jmp
ja
roll
stos
fiaddl
fwait
int3
cmp
inc
test
and
jo
mov
test
pop
call
sub
xchg
fs
push
lret
mov
mov
adc
fmuls
xchg
aaa
dec
clc
ds
cmpsb
push
jnp
dec
lcall
popf
rolb
inc
jecxz
test
imul
pop
es
add
imul
add
inc
int3
shrb
movsb
icebp
sbb
pop
mov
std
cmc
mov
js
mov
arpl
pop
mov
or
movsb
mov
jmp
jp
add
mov
lret
and
inc
xor
les
rcrb
push
dec
push
imul
add
mov
mov
lock
mov
stc
push
adc
stos
popf
loopne
sub
mov
mov
popa
int
inc
in
cmpsb
jne
dec
sub
cs
xchg
js
mov
jno
fisubrs
push
fcmovnu
icebp
or
sarl
imul
in
push
xchg
push
push
jne
sbb
fdivs
sbb
orl
iret
fidivl
mov
mov
pusha
push
in
mov
idivl
add
sbb
out
mov
js
imul
sarl
repz
ljmp
add
add
xchg
fdivrp
mov
add
dec
xchg
sarl
pusha
jno
fdivs
aam
lods
push
lock
aas
inc
inc
mov
in
arpl
pushf
add
xor
jge
leave
pop
popf
cmpsb
inc
ret
stc
dec
ljmp
rolb
pop
maxps
jne
in
adc
and
push
pop
adc
aaa
iret
jnp
orb
lock
pop
test
filds
lret
push
test
imul
mov
outsl
push
jg
ss
mov
or
out
outsl
jo
and
xchg
popf
in
jge
adc
mov
fidivrs
mov
push
aas
clc
or
insl
outsb
dec
fstp
cmp
sub
addl
xor
push
mov
clc
push
test
insl
inc
test
stos
and
cs
push
sbb
lea
xchg
xor
je
pop
shll
sbb
aad
push
pop
jno
cs
inc
jo
scas
into
test
adc
adc
clc
cmc
pushf
cmp
and
and
sti
scas
sahf
fidivl
jp
scas
xchg
lock
jmp
or
cmp
mov
push
jge
push
fidivl
push
push
xor
cmc
icebp
jae
sysret
or
sbb
dec
jb
mov
add
push
or
out
in
test
add
cwtl
cltd
lret
in
ret
rorl
and
jg
sahf
mov
jecxz
pop
int
and
jl
cmp
ret
lret
or
test
int
arpl
mov
jae
adc
push
stos
mov
jge
adc
shr
jnp
and
jo
icebp
inc
aad
cmp
dec
orl
push
xor
sahf
daa
mov
mov
cmp
mov
rcrb
addr16
es
and
jmp
push
mov
frstor
pop
push
or
lock
inc
lret
fidivrs
das
adc
outsb
fcmovb
xor
lock
sub
mov
add
and
mov
fwait
dec
clc
push
pop
xchg
in
adc
dec
gs
rorb
xchg
ss
rcll
mov
loop
sub
mov
lcall
outsb
xor
cmpsl
sbb
lds
xor
push
cmp
jo
lock
mov
or
packuswb
cwtl
and
ret
test
movsl
adc
int3
mov
xor
mov
stos
fdivrl
dec
jle
and
xchg
and
scas
mov
cli
leave
cwtl
cmpsb
adc
adc
push
je
mov
int
and
mov
xlat
add
xchg
fstps
cmp
pop
xchg
adc
dec
in
imul
ds
jecxz
cmp
or
pop
orb
xchg
stos
cmp
mov
xchg
mov
cmp
das
es
inc
cmp
roll
xchg
jle
and
add
data16
mov
lock
mov
push
test
push
adc
imul
ja
in
jge
sbb
js
in
or
pop
loop
add
jae
nop
sbb
push
jnp
push
xchg
inc
aad
cmpsl
test
arpl
xchg
lods
dec
loope
out
push
les
test
rolb
divl
loope
add
sbb
hlt
jns
daa
lods
test
in
insl
push
fnstsw
movsb
fs
int3
aam
inc
jns
push
mov
jbe
loope
add
xchg
mov
dec
cmp
and
imulb
aas
jnp
lods
shlb
mov
add
call
lahf
sub
or
dec
dec
loopne
pop
call
pop
pop
sub
popf
jne
in
cs
hlt
pop
sti
jno
js
push
xor
int
dec
js
std
push
cmpsb
popf
or
jno
movsl
jp
mov
mov
dec
fisttpll
or
cmpsl
push
repz
jmp
dec
fmul
js
dec
dec
adc
movsb
pop
stos
mov
stos
js
pop
rcl
xchg
adc
or
es
int3
loope
sub
push
sub
cli
dec
sbb
std
outsb
icebp
pop
mov
push
in
xor
jb
mov
inc
cmpsl
pop
jns
fldl
add
sub
mulb
movl
popa
jno
mov
xchg
or
loopne
lret
ret
sarl
jnp
jge
and
int3
or
hlt
subb
dec
cmpsb
cmp
jmp
push
out
enter
outsl
out
dec
jmp
call
or
sbb
lret
jbe
fnsave
jle
adc
and
cltd
mov
xor
fadd
movsl
mov
xor
test
or
cmc
dec
rcrl
sub
fucom
pop
and
jmp
push
ret
imulb
lds
lock
nop
and
aad
adc
adc
les
jno
xor
out
inc
xor
leave
sbb
lock
shr
pop
ficompl
shlb
mov
adc
jge
mov
sbb
and
xchg
imul
ret
and
add
out
xchg
fisubs
fcoml
addr16
fs
movsl
je
sti
push
lret
inc
jae
inc
cld
lcall
mov
pusha
pop
sub
daa
jl
inc
sbb
fisubs
and
popa
inc
cld
aad
inc
adc
aad
xor
xor
sub
ds
cwtl
pop
into
mov
mov
out
hlt
loop
test
cmpsl
popf
movsb
lods
nop
add
insb
mov
sub
sub
add
sub
test
les
cwtl
fdivrs
jo
mov
aas
stc
and
es
jge
repz
push
cwtl
aam
sub
pop
shr
dec
adc
jmp
test
pop
pop
sub
scas
lret
gs
out
fcomps
and
xchg
shr
pop
mov
xchg
or
xor
jge
jmp
les
and
xlat
fstl
sub
add
js
add
sbb
enter
icebp
sahf
push
xchg
out
std
sbb
jecxz
or
push
or
mov
mov
cmp
cld
jns
or
add
cltd
shl
insl
jae
mov
lret
dec
pop
sub
push
leave
and
ret
ljmp
and
xchg
lret
negb
enter
inc
mov
sub
dec
or
add
or
movsb
loopne
nop
mov
jle
cs
lahf
mov
mov
xor
shrl
fwait
jmp
mov
fwait
lahf
xchg
xor
popf
scas
sbb
ror
push
cmp
cli
pop
inc
push
in
loopne
inc
xor
rclb
out
nop
js
pop
mov
out
arpl
push
add
and
cltd
fistpl
call
or
test
push
bound
mov
insb
push
push
mov
int
push
inc
push
imul
push
push
enter
gs
dec
in
jmp
mov
cmc
cmc
shrb
cs
cmc
aas
dec
jecxz
cli
pop
xor
inc
sub
icebp
and
xchg
testl
lcall
push
ret
and
xchg
mov
pushl
mov
add
lods
xchg
ret
inc
imul
xchg
mov
imul
jecxz
xchg
xlat
rorl
imul
arpl
fucom
pop
pop
sbbb
xor
mov
pop
and
outsl
add
ja
imul
cmpsl
notl
mov
repnz
aad
pop
repz
cmc
pop
mov
xor
hlt
pop
cmp
lods
sub
iret
lret
cmp
push
mov
mov
jle
mov
icebp
sbb
mov
push
push
in
pop
cmp
ss
or
mov
scas
adc
sub
inc
in
and
push
jne
mov
cmp
sbb
xor
enter
clc
mov
adc
js
inc
xchg
mov
fcompl
inc
pop
add
aaa
int3
mov
roll
push
sahf
pop
idivl
popf
mov
sub
rol
adc
jns
xchg
mov
push
out
loopne
movsb
cs
cmpsb
pop
or
sub
or
mov
adc
jbe
loope
sub
adc
popf
lret
pop
or
pushf
mov
jnp
push
jmp
repz
fnsave
adc
xchg
mov
mov
xchg
sarl
mov
mov
stc
fsubs
jle
xor
mov
enter
add
lea
aaa
imul
ds
imul
fstpl
test
mov
mov
out
xor
stos
adc
and
inc
push
jnp
in
and
pop
pop
mov
aas
inc
mov
push
cld
imul
push
jae
push
cmpsl
pop
into
sti
and
sar
dec
out
out
scas
add
cmpsb
ror
inc
movsb
xor
cmp
push
nop
mov
loop
clc
jae
sub
adc
mov
ret
lret
mov
pop
ja
pop
xchg
aad
iret
add
stc
push
loope
push
push
inc
mov
add
cwtl
outsl
cmp
out
les
loope
cmpsl
pop
jp
jmp
xchg
mov
inc
inc
es
aas
popa
fildl
dec
mov
mov
jae
fsubs
sbb
sub
ljmp
add
and
xchg
pop
add
cli
push
mov
loop
es
xchg
lcall
cmp
inc
adc
or
or
inc
sarb
rclb
and
push
xchg
and
fcompl
repnz
jbe
add
mov
lds
rcrb
jno
ret
pop
ljmp
sbb
repz
aam
mov
je
ja
xchg
jl
test
in
jge
inc
push
pop
gs
sahf
fisttpl
pop
std
mov
vpmaxsw
xchg
sub
mov
ffreep
loop
push
rorb
pop
mov
sti
cmpsb
pop
je
in
fildll
cmc
int
and
lds
cmpsb
rclb
xor
arpl
push
pusha
shlb
sub
pop
xchg
xor
mov
cmp
or
pushf
fwait
mov
sub
pop
insl
aam
clc
mov
dec
mov
test
jl
cltd
dec
mov
into
icebp
in
push
xchg
sub
mov
mov
inc
ret
popa
mov
movsl
add
xchg
xchg
mov
mov
or
or
xchg
dec
cld
inc
cltd
xor
jg
rolb
popf
inc
pop
inc
jecxz
jl
or
icebp
daa
fmull
xor
adc
stc
dec
call
shll
lcall
std
mov
insb
in
ds
jae,pt
or
adc
test
faddl
mov
push
cmp
and
inc
lret
daa
push
push
in
ja
stos
dec
add
lcall
clts
cmp
mul
cli
ficoml
push
push
loope
cs
mov
and
sbb
mov
jae
insl
lahf
loop
je
iret
jl
loope
or
adc
push
xor
inc
xchg
mov
data16
or
mov
mov
dec
adcb
sbb
mov
lds
pop
flds
lret
jg
scas
xchg
decl
mov
xor
inc
jo
xor
movsb
in
mov
stc
cmp
push
in
dec
or
inc
inc
fnstenv
add
ficoml
popa
sub
movsb
divb
insl
fstpt
out
repnz
adc
rcll
sbb
and
cmpl
cmp
pop
mov
xorl
sub
ds
pop
sbb
dec
xor
push
shrb
sti
loop
adc
addr16
lock
aaa
nop
cmp
loop
mov
adc
push
jns
popf
stos
sub
out
jo
pop
mov
lock
pop
lcall
sbb
or
jp
outsl
mov
fnstcw
mov
out
cmp
mov
push
mov
jns
fucom
lds
sbb
mull
xchg
add
xchg
xchg
fisubl
aaa
outsb
jle
imul
fdiv
sub
lds
adc
xor
adc
mov
and
out
cmp
sub
push
and
add
popl
stc
loope
pop
outsb
aam
sub
add
mov
adc
cld
and
jl
fiadds
and
sbb
inc
fs
fstpt
faddl
xchg
ss
dec
and
dec
cli
xchg
adc
push
mov
in
nop
mov
idivl
push
rcrl
jge
and
andb
fsts
pop
jae
lods
cld
and
cmp
mov
ljmp
iret
jge
repz
mov
inc
sub
pop
add
rorl
cltd
pop
shl
cli
pop
mov
add
jmp
or
arpl
mov
mov
popf
loope
mov
or
jg
add
sbb
pop
je
jmp
loopne
cmpl
add
and
cmp
insb
adc
aam
cmpsb
ret
mov
mov
sbb
cmp
cmpl
dec
ret
inc
inc
out
je
nop
in
lods
sub
stos
lahf
jo
pop
incb
nop
sarl
cmp
aam
or
popa
dec
jo
aas
scas
scas
pop
sub
decb
mov
push
or
rcr
dec
push
dec
dec
daa
push
std
sub
adc
cli
sbb
mov
jecxz
fcmove
xchg
xor
jbe
mov
pop
iret
cmp
sahf
mov
cmp
ljmp
push
push
jne
pop
inc
mov
sub
call
ret
bnd
jo
push
in
mov
dec
in
or
lock
int
xor
orb
je
fsub
mov
jl
stos
push
inc
lds
lahf
icebp
jb
pop
pop
adc
aam
stos
pop
pop
int
push
lret
test
sbb
movsl
xchg
in
stc
scas
cmpsl
add
mov
rcr
mov
das
and
inc
fidivs
pcmpeqb
jb
lret
cmpl
iret
sbb
push
das
push
call
push
jno
fdivl
sbb
cwtl
cmp
add
inc
sbb
cld
aaa
imul
inc
out
add
loop
xchg
fldt
jmp
xor
push
mov
jecxz
xchg
pop
sub
sub
mov
mov
scas
xchg
sub
sti
fidivl
jo
mov
add
and
jno
cwtl
ja
pop
loop
lock
lds
lds
lods
cld
mov
fisttps
stc
je
stos
or
xchg
cmp
scas
orb
roll
inc
cwtl
push
or
jne
popa
inc
mov
xchg
and
xchg
pop
lea
mov
loop
movsl
lahf
xchg
adc
andb
sub
stc
cld
cmp
stos
inc
sar
stc
push
jae
inc
mov
sti
mov
imul
out
outsb
inc
sub
lods
sub
aad
mov
fwait
xchg
faddl
jecxz
clc
mov
dec
jns
mov
add
outsb
pop
jnp
sbb
es
fiaddl
dec
pusha
xor
pop
loope
shll
dec
xchg
scas
mov
xor
cmpsl
inc
jo
cmp
in
das
loopne
daa
pop
push
lcall
iret
sub
fldz
push
xor
mov
lea
and
int3
into
jbe
in
push
push
test
fiaddl
mov
fwait
lds
lahf
fsubrs
inc
inc
fisttpl
shlb
cmp
adc
adc
dec
push
dec
std
test
or
or
sub
test
fsubrp
fsubrp
cmp
call
or
jb
jns
popa
xchg
movsl
mov
aad
cmp
test
adc
or
xor
dec
pop
mov
mov
sub
xor
cwtl
push
adc
sarl
les
repnz
imulb
pop
addr16
pop
lahf
mov
jl
xor
outsb
icebp
jge
repnz
and
mov
cwtl
add
push
xchg
cmp
xchg
mov
jae
push
or
cli
out
xchg
and
out
push
sub
loopne
add
add
sub
jp
dec
sub
sti
mov
push
sbb
jmp
or
mov
mov
mov
std
iret
jo
das
push
pusha
imul
scas
fdiv
mov
scas
sub
fcmovu
sbb
and
test
sahf
std
mov
jp
les
cli
mov
cli
or
push
je
aad
mov
sub
fidivs
aas
sbb
cmp
dec
sub
fisubl
pop
das
test
xlat
mov
push
fsubs
mov
call
cmp
adc
mov
or
pop
popf
inc
into
stc
lods
outsb
je
sbb
mov
fsubr
xbegin
std
ss
loop
jns
xchg
mov
lahf
cwtl
cmc
in
push
pop
jmp
jo
xlat
lahf
or
mov
pop
push
and
jg
and
scas
cwtl
pushf
jns
cmc
cmp
repz
lret
cmp
cmp
sbb
lea
mov
jmp
aam
lahf
and
lods
mov
std
das
sbbl
push
pop
sbb
or
in
lret
sti
rol
dec
push
ja
adc
pop
xchg
in
loope
jbe
jmp
in
repz
leave
jecxz
js
pop
xchg
shlb
mov
cmp
repnz
mov
pop
rorb
dec
fnstsw
mov
and
rorb
iret
fdivs
enter
mov
in
pop
hlt
fbstp
xlat
popf
mov
aam
movsl
ret
dec
lock
fwait
pop
les
shll
jae
out
insb
test
fstp
movsl
outsb
ja
mov
xor
imul
fcompl
cmpb
mov
scas
push
xor
shl
push
add
xchg
pop
jno
jecxz
mov
add
jbe
fmulp
lods
adc
mov
out
inc
sub
lods
inc
pop
xchg
inc
mov
lods
xor
jnp
cltd
xor
insb
dec
xorl
jne
fdecstp
movl
fwait
sbb
cld
cmpsl
mov
movsl
jae
sti
sub
pop
xchg
xchg
repz
nop
add
jnp
cmp
push
and
add
xchg
sbb
xor
cwtl
clc
add
repnz
dec
fs
mov
sub
imul
neg
shll
xorl
push
pusha
dec
lcall
jnp
mov
xchg
sub
adc
daa
cwtl
dec
stc
mov
cmp
jecxz
mov
xchg
in
call
outsl
adc
lods
mov
cli
or
bound
pusha
rcll
nop
movsb
sarl
push
out
jp
jno
hlt
movsb
jl
insl
sbb
ficompl
ljmp
dec
or
jle
popf
fwait
cmp
loopne
nop
insb
sarb
adc
push
ret
cmpb
xlat
popf
popa
aas
mov
fwait
and
sub
movsb
lds
add
and
cs
pop
xchg
sub
outsl
push
int3
mov
jbe
jne
stos
pusha
inc
sarl
loopne
std
jmp
add
sbb
fld
ja
adc
xchg
inc
xor
inc
xor
inc
xor
mov
cmpsb
xorl
dec
jns
popa
sub
jge
sarl
mov
test
rcll
sbb
pop
aad
cmp
aaa
in
xchg
dec
mov
sub
or
push
push
gs
xchg
push
nop
subb
sbb
fmuls
mov
popa
int3
addr16
rorb
loop
mov
mov
mov
loope
jb
outsb
in
xlat
inc
jmp
add
and
pcmpgtd
xlat
adc
xchg
clc
or
push
dec
adc
repnz
sbb
outsb
jg
mov
push
stos
int3
fadds
and
mov
orb
test
out
pop
or
test
idivb
pop
jp
sbb
cwtl
lea
cmpsb
pusha
pop
mov
jge
push
sarl
jg
sbb
out
imul
fildl
scas
add
inc
mov
xchg
rolb
iret
stos
or
stos
enter
sub
sub
jl
jbe
cli
repz
cwtl
pop
stc
aas
movsl
movb
push
int3
xchg
rorb
lret
scas
fdivrs
enter
push
daa
cmpsb
adc
test
ficomps
adc
test
fldcw
xchg
fcmovu
mov
dec
test
inc
jg
mov
jge
sub
mov
cmc
hlt
or
inc
fcomps
mov
push
ret
xchg
sbb
sub
jns
xchg
sbb
int3
xor
mov
push
add
ja
adc
loopne
shrl
popf
cvtps2pi
mov
out
xchg
mov
lds
adc
jge
test
mov
push
mov
push
hlt
mov
out
sub
and
jle
fs
jne
or
repnz
jne
sbb
sbb
add
fists
xor
in
xor
xor
push
push
aas
setbe
mov
or
popf
mov
cmp
adc
cmp
dec
mov
cmc
push
cmp
mov
cmp
ret
sub
inc
jae
insl
mov
shrb
arpl
inc
jae
mov
cmc
imulb
mov
and
mov
adc
mov
inc
xor
push
ss
ja
je
jne
std
and
pop
mov
and
cs
in
movsb
pop
loopne
dec
lods
outsl
leave
dec
xor
sub
pop
and
lret
adc
lahf
jno
and
hlt
add
mov
dec
sub
in
out
fdivrl
or
inc
pop
lds
aam
shrb
push
in
fiadds
cmp
mov
outsb
jmp
insl
lods
mov
pusha
fcomps
out
mov
loopne
cwtl
jbe
in
in
scas
inc
in
and
scas
aas
inc
sti
and
ljmp
mov
mov
mov
les
fstpl
cld
push
sub
xchg
add
pushf
cmp
arpl
call
mov
mov
sub
mov
aaa
inc
cmp
sbb
fnsave
xor
imul
xchg
mov
push
int
mov
xor
push
add
sahf
mov
cmc
pop
lret
mov
dec
xchg
push
xchg
clc
daa
mov
and
dec
insl
stos
in
hlt
orl
push
inc
fdiv
inc
insb
jg
jp
adc
xchg
pop
pop
stos
inc
dec
sti
into
aas
test
and
lods
mov
aad
lods
les
int3
mov
xchg
add
pusha
mov
arpl
scas
daa
mov
sbb
xchg
pop
ss
mov
cmc
in
or
mov
sbb
mov
xorl
aaa
xchg
ljmp
int
jne
cmpsl
and
cmc
popa
sbb
lcall
xchg
outsl
push
pop
push
or
pop
add
xchg
ja
inc
sub
sub
jmp
add
fwait
or
test
xchg
and
rcrb
jno
popa
out
loope
sub
jb
mov
mov
fs
in
mov
cltd
lret
out
rol
jecxz
push
lock
aaa
sub
adc
add
popa
lods
push
aaa
sti
or
jb
xchg
ljmp
fwait
push
xchg
adc
mov
sbb
inc
movb
cmpsl
jns
jbe
lock
add
pop
incl
pop
pop
jb
mov
sub
mov
mov
mov
movsb
dec
lahf
jecxz
add
push
insb
fs
sarl
xor
leave
push
inc
aas
lods
cmp
lods
jne
sti
and
inc
jl
shlb
int
dec
in
cmp
inc
sbb
push
jne
dec
xchg
dec
mov
gs
add
push
rorb
or
in
dec
sub
outsl
or
leave
sbb
push
iret
lock
sub
inc
loope
aad
je
xor
jbe
lods
or
lea
ret
jns
fninit
ficoml
int
jl
fldcw
sbb
sbb
cli
mov
daa
xchg
pusha
jge
jl
sbb
xchg
mov
shlb
ret
in
pop
hlt
montmul
cmpsb
ret
inc
callw
cmp
arpl
lock
cwtl
push
aad
pop
push
xlat
or
or
xor
loopne
sub
lret
es
or
cmpsl
das
cld
mov
xorl
outsb
xor
scas
es
mov
dec
fisubl
lds
jnp
out
movsl
mov
clc
sbb
cltd
leave
or
jecxz
in
sbb
sarl
lret
mov
jecxz
mov
fmulp
fwait
pop
addw
lea
in
push
addr16
adc
pop
and
loope
sub
lret
hlt
pop
inc
sti
jmp
scas
sbb
xlat
ret
in
lods
mov
idivl
pop
int3
jmp
mov
pop
and
testb
shlb
and
push
int
stos
adc
fiaddl
pop
add
enter
add
sbb
inc
adc
pop
lahf
lods
ret
imul
ret
lds
adc
mov
daa
dec
xor
xlat
js
stos
sbbb
repnz
jnp
jne,pt
push
fstps
push
mov
gs
or
ja
sbb
push
cli
popf
mov
jp
repnz
pushf
adc
xchg
lahf
pop
fidivs
dec
adc
cmpsl
dec
mov
or
movsb
int3
xchg
cmp
pop
mov
sbb
pop
jge
mov
ret
mov
scas
xor
lock
subl
inc
icebp
aaa
sbb
scas
jb
imul
jmp
inc
pop
push
pop
sbb
and
and
dec
ljmp
sub
repz
shlb
or
adc
sub
fisttpll
dec
nop
mov
testb
xor
loopne
ljmp
cmp
jl
shl
loop
sbb
shll
pusha
mov
sub
jne
fidivs
jge
es
push
lcall
loope
lret
jle
popa
sbb
inc
pop
std
mov
lret
cmp
into
mov
inc
add
push
sarl
aas
movsb
and
cmpsl
jmp
mov
mov
adc
push
lahf
addb
or
inc
scas
or
dec
pop
adc
xor
add
fsubr
rclb
nop
lahf
jl
clc
xchg
shrb
push
test
bound
pop
in
scas
mov
push
imul
jno
lea
and
mov
adc
loope
mov
pop
mov
jbe
out
inc
mov
cld
loopne
mov
cli
and
imul
mov
and
icebp
jge
mov
bound
sub
cmp
sbb
ja
cmp
push
mov
rcrb
sahf
push
sbb
xchg
inc
out
jo
mov
jno
test
jo
aam
sub
mov
pop
cmp
dec
dec
add
call
shrl
adc
hlt
ljmp
sti
jno
xor
cmp
shrl
add
push
add
daa
add
and
push
imul
rolb
call
sub
and
rcrb
das
fildll
push
pop
jae
out
lods
mov
jb
orl
xchg
xor
cld
sar
cmp
push
nop
sbb
add
ljmp
xchg
aas
fucom
lock
xor
ja
stos
xchg
mov
xlat
jne
xor
xchg
or
inc
dec
jg
mov
js
or
pop
sbb
ret
js
sti
sbb
movsl
jp
and
adc
xchg
sbbl
push
repnz
rorl
adc
ss
lret
wrmsr
jne
jle
into
pushf
pop
push
pop
jae
andb
loopne
fcomps
push
and
cmp
add
js
xchg
aas
fists
jb
xor
ds
fiadds
add
js
imul
repnz
or
push
or
into
push
daa
mov
popf
jg
mov
loop
push
xor
cwtl
mov
xchg
adc
xchg
icebp
jbe
je
in
sbb
pop
aam
fsubl
xchg
xor
jbe
push
js
cmp
fwait
pop
xchg
pop
adc
xchg
dec
inc
dec
cmp
add
sarb
jg
and
lea
dec
sub
iret
in
adc
cltd
inc
aam
xor
sub
notb
pop
inc
dec
sub
xchg
mov
shrd
sti
test
sbb
xchg
fdivl
jae
xor
jo
cmp
mov
xchg
sbb
aas
and
push
jecxz
fisubl
fwait
aaa
ret
mov
sub
mov
divb
roll
cmp
cltd
arpl
pop
mov
and
sahf
push
mov
fnsave
int3
popf
xor
les
inc
js
push
pop
data16
out
shr
jo
test
mov
or
mov
or
cld
xchg
dec
aas
add
jae
mov
jno
pop
jnp
adc
inc
dec
fimull
pop
data16
jp
jle
mov
push
dec
aas
out
js
pusha
adc
test
push
lcall
push
xor
adc
dec
cmc
lret
pop
xchg
push
cmpsl
xlat
adcb
lods
lods
fstps
cmp
je
jno
inc
cwtl
add
pop
insl
xchg
repz
mov
ljmp
mov
out
pop
cltd
cmp
push
ja
jmp
cmpsl
les
push
roll
pop
lahf
loope
dec
in
push
loop
xchg
cmp
sub
rcl
stos
or
mov
jns
lods
in
ret
pushf
xor
out
dec
push
xchg
shlb
in
cmp
popa
cld
sub
les
cmpsb
mov
aam
imul
xchg
jge
out
fucomp
gs
inc
pop
pop
fnstenv
xchg
test
dec
popf
sbb
aam
shrl
cmp
dec
inc
stos
mov
push
arpl
std
fcomi
test
mov
adc
inc
mov
dec
ss
pop
loope
out
mov
ja
pop
scas
mov
into
mov
pop
mov
mov
repnz
stos
xor
xchg
push
push
xchg
mov
ljmp
xlat
scas
xchg
and
or
inc
jmp
adc
je
in
repz
inc
dec
add
iret
cmpb
xlat
push
push
xchg
je
fildll
sub
imul
jge
mov
mov
cmp
fadd
pop
jmp
inc
mov
fdivl
jecxz
insl
xor
cmp
pop
cmpsl
or
rol
add
stos
out
movsl
adc
add
je
neg
push
xchg
fisubrl
push
lret
mov
inc
dec
shll
cmp
lahf
and
mov
xor
or
jbe
stc
push
push
mov
dec
push
pop
lock
pop
aam
les
scas
in
xchg
adcl
testb
or
js
sbb
jbe
pop
rclb
adc
or
mov
push
adc
xorb
inc
lahf
out
xchg
jg
fstpl
mov
pop
test
xor
jae
xchg
add
sahf
push
cltd
fcmovu
sbb
enter
fiaddl
xchg
sbb
test
and
stos
jne
inc
out
or
popa
lahf
cwtl
sahf
sub
mov
roll
rol
jbe
iret
sub
jbe
push
sub
nop
adc
sahf
adc
adc
lcall
popf
mov
push
fwait
ljmp
push
sbb
aad
cwtl
or
fisubl
inc
adc
fsubr
in
popa
and
pushf
test
es
clc
jp,pt
xlat
ja
insl
pushf
fcoml
jno
lahf
push
adc
nop
cld
mov
insl
push
es
sbb
fsubl
inc
push
or
add
mov
mov
and
jne
add
clc
mov
mov
fneni(8087
jl
pop
push
sbb
dec
add
notl
xor
xchg
mov
add
repz
add
sub
ds
add
incb
push
inc
or
das
sub
stc
test
mov
push
jb
ss
push
ret
ret
xor
mov
add
jg
jnp,pt
std
jno
inc
gs
add
gs
xchg
dec
mov
sub
hlt
repnz
inc
jae
clc
mov
inc
push
mov
push
aaa
or
mov
sub
and
mov
je
dec
push
add
cmc
pop
movsb
cs
add
cwtl
or
jns
es
lea
adc
cmp
jp
dec
repnz
jno
dec
ror
fisubrl
xor
hlt
or
push
push
mov
popw
fnstsw
lds
js
mov
pusha
scas
enter
sub
jecxz
in
jo
fimuls
push
and
ror
inc
mov
fimull
cmp
add
daa
dec
cmp
push
pop
das
popf
in
mov
cmpsb
icebp
adc
dec
hlt
xor
clc
push
cmp
ja
or
inc
addr16
mov
pop
push
lds
sub
les
imul
bound
push
loopne
lahf
xor
mov
adc
cli
fwait
and
out
fdivr
fdivp
mov
in
pop
add
lahf
mov
es
add
cmp
pop
stos
aaa
sbb
pop
adc
aaa
sbb
das
repz
lock
pop
dec
into
jae
fdivl
mov
sub
repnz
lds
mov
xor
int3
inc
mov
cmpsb
jl
or
std
lahf
xchg
jns
jmp
cmpsb
int
push
ret
cmp
push
rolb
cmpsl
daa
outsl
pop
pop
inc
lods
pushf
jge
ret
int
add
push
test
sbb
or
xor
int3
fwait
pop
fistps
mov
mov
inc
mov
jp
xor
pop
mov
push
mov
jo
fucomi
xor
xor
outsl
jg
cmc
xor
int
repz
lret
lock
push
sarb
bound
loop
js
imulb
push
or
fimull
out
dec
lahf
stc
sub
xlat
cltd
pop
mov
pop
push
inc
sahf
popf
out
mov
adc
adc
push
mov
aad
pop
fs
jg
pop
fdivs
cli
push
idivb
pushf
inc
push
stc
xor
clc
xchg
mov
mov
out
loope
adc
xor
ret
ja
cmp
arpl
bound
lea
jbe
and
int3
iret
arpl
std
jmp
cltd
cmp
jle
mov
out
in
dec
into
aad
mov
iret
loopne
xchg
in
lods
dec
enter
sarl
cmpsl
inc
ljmp
dec
push
outsb
add
push
cmc
cli
pop
lds
stos
add
je
pop
xor
clc
mov
rol
adc
mov
aaa
dec
arpl
xchg
push
pop
mov
loop
cmp
xchg
sub
int
inc
shrl
rclb
shrb
jle
xor
nop
outsl
inc
adc
popf
sbb
and
sbb
ret
inc
push
or
lret
cmpsl
les
scas
lret
lods
mov
js
lds
mov
mov
cmpsl
test
or
adc
inc
arpl
sbb
inc
fcomps
mov
fisubs
mov
dec
dec
push
mov
clc
adc
frstor
shll
popa
je
jge
stos
mov
add
sbb
jae
orb
jge
ljmp
add
leave
sbb
add
sub
jg
lret
shlb
pop
and
movsl
shl
sub
jecxz
add
pusha
sbb
js
mov
sbb
scas
lret
push
scas
int
inc
out
sub
lods
mov
pusha
mov
add
sti
stos
out
pop
or
dec
xchg
jp
add
mov
sbb
cmpsl
movsl
in
and
add
bound
or
mov
mov
popa
inc
and
call
push
mov
pop
aam
dec
inc
add
inc
mov
fstpt
jbe
sti
in
das
cmpsb
xor
xorl
dec
mov
call
imulb
xor
mov
fisubrs
cli
jge
xlat
ret
inc
out
cld
shl
cltd
mov
push
loopne
cli
les
xor
sahf
test
int
mov
xor
subl
jnp
lret
std
push
sbb
call
pop
outsl
data16
in
mov
stc
push
push
or
std
xchg
daa
sbb
ret
fimull
or
mov
popf
fldl
sub
jmp
repnz
sbb
fxch
push
dec
add
popf
mov
jg
movaps
call
jb
lods
aad
and
orb
mov
ret
mov
ficoml
mov
lret
lcall
mov
jns
mov
pop
xchg
adc
imul
adc
sbb
adc
mov
gs
pop
add
adc
dec
mov
mov
adc
adcl
mov
sub
lret
xchg
pop
cmc
gs
sahf
push
repz
ja
popf
lods
imul
cmp
xchg
fsub
pop
adc
mov
jge
imul
cmp
mov
mov
and
jns
lret
aad
imul
popf
loope
shrl
mov
ss
mov
sub
jle
outsl
andl
fldl
inc
fisttpl
cltd
mov
xchg
enter
sti
and
je
inc
ret
xchg
mov
subb
mov
mov
pop
hlt
dec
test
adc
cmp
lret
aas
mov
stc
inc
cmpsl
cmpl
dec
out
cmovbe
add
push
aas
xorl
pop
adc
hlt
imul
xlat
fsubl
push
xor
cmp
aas
fistpll
repz
in
dec
repz
or
and
push
repz
cli
add
orl
pop
xor
imul
pop
inc
lock
mov
js
iret
lock
pop
dec
adc
push
adc
lcall
and
sbb
mov
push
inc
mov
inc
inc
push
cs
lds
sbbb
or
cld
mov
lret
lock
jmp
dec
or
std
dec
xorl
push
xchg
push
jle
mov
pop
dec
outsl
add
xchg
fisttpll
das
cmpsb
or
xchg
nop
xchg
bswap
mov
mov
notl
inc
jbe
arpl
shrb
insl
scas
out
mov
adc
xchg
mov
add
and
and
shrb
fisttpl
mov
mov
sub
sahf
rcrl
mov
jbe
lret
dec
pop
push
mov
scas
and
xor
ds
in
dec
out
inc
js
and
inc
mov
mov
inc
in
mov
mov
mov
stos
xchg
out
xchg
adc
pop
push
cmp
test
dec
out
mov
icebp
push
xchg
out
ret
in
sub
mov
lods
out
mov
rorb
jnp
and
clc
or
jl
xlat
repz
jecxz
addl
in
jl
in
pusha
iret
mov
sbb
stos
jbe
sub
aad
jp
pop
add
mov
or
inc
repnz
mov
jns
xor
jae
push
and
mov
imul
test
dec
fwait
lds
xor
leave
jns
adc
in
mov
push
in
inc
lock
data16
aaa
xor
or
sbb
mov
xchg
and
xchg
pusha
pusha
or
imul
pushf
leave
add
and
inc
test
dec
rclb
cs
iret
sti
mov
nop
mov
mov
cmpsb
ljmp
lret
enter
xor
cwtl
repnz
lods
stos
lahf
movsb
outsl
add
repz
push
pop
fdivrs
sub
fsubrs
jmp
adc
jo
xchg
adc
mov
repz
jne
lds
bound
or
sbb
fwait
cmpsl
xchg
push
into
dec
lea
and
mov
or
xor
mov
adc
cmp
in
pop
mov
or
or
outsb
dec
das
jmp
and
cmpsb
es
mov
repnz
jne
sbb
and
sub
stc
jo
test
jecxz
faddl
ret
sbb
outsb
and
jno
lea
sub
jns
and
inc
push
push
mov
sub
xorb
or
push
mov
xchg
pop
ss
push
iret
sbb
mov
lods
mov
pop
add
std
and
mov
rclb
dec
ss
push
clc
das
mov
loop
fisubrl
or
sahf
mov
je
inc
xor
cmp
cmc
xchg
loopne
scas
cmpsb
leave
sub
stos
fwait
dec
out
inc
rcr
subb
adc
and
or
inc
push
mov
and
lods
jmp
xchg
mov
scas
xchg
cmp
cmp
pop
xor
inc
add
sub
repnz
or
xchg
fsubrl
or
dec
sbb
pop
inc
xor
xchg
add
xor
sub
inc
iret
loope
imulb
rorl
pop
mov
stc
es
call
jl
mov
inc
jecxz
jbe
or
pop
jl
mov
pop
xchg
pop
fists
jbe
cmp
aad
mov
pop
iret
je
xlat
sbb
mov
int3
fisubrs
adc
dec
pop
cs
mov
sarb
fwait
push
loope
pop
jns
mov
lock
fists
jbe,pn
in
gs
jnp
iret
movb
rorb
imul
lret
pop
jge
shlb
dec
mov
push
loop
pusha
sbb
adc
bound
in
xorb
push
jb
xchg
mov
popa
xor
or
fnstcw
icebp
cltd
and
ret
imul
aas
cmp
ret
push
repnz
mov
lods
sbb
fs
aad
sti
xor
pop
pop
jne
inc
mov
mov
lahf
outsb
add
pop
cmc
shl
test
push
mov
mov
dec
dec
fstl
inc
dec
shll
push
loopne
jns
lret
in
sub
popa
mov
lret
popf
mov
inc
out
leave
cvttps2pi
loop
mov
out
inc
mov
mov
inc
movsl
xor
cmp
cmp
xchg
jg
rcrl
sub
pop
in
mov
es
arpl
jge
rol
mov
or
out
push
call
les
push
inc
ror
or
sbb
addl
cli
sahf
ror
jge
mov
sbb
mov
mov
cltd
stos
push
add
fldl
jecxz
aam
pop
negb
sbb
aas
pushl
test
sub
adc
or
jp
sti
sti
les
xchg
lds
push
insl
mov
adc
cmp
negb
stc
sbbl
daa
and
pop
lods
pop
sub
scas
mov
call
push
push
aad
cld
out
mov
popf
xor
fdivrs
sub
pop
sti
push
insb
out
dec
iret
add
xor
or
push
add
pop
mov
mov
mov
aam
inc
xchg
add
int
fadds
shlb
cmp
adc
jae
dec
push
push
stos
test
or
or
and
mov
xchg
filds
inc
add
mov
jbe
jnp
mov
js
bound
neg
call
mov
dec
stc
add
js
shll
fdivp
cmp
shll
sub
dec
sub
jle
sbb
cmpsl
pop
xor
repz
or
mov
mov
into
out
shll
imull
call
mov
xchg
mov
mov
jg
imul
fdiv
pop
in
push
imul
and
aam
insb
lcall
or
fsub
lret
mov
xchg
sub
pop
cmpsb
sarl
das
test
push
rcl
cmpsb
jle
mov
mov
lahf
mov
push
inc
jecxz
imul
mov
pushf
mov
aam
fadds
push
dec
push
lret
cmpsb
push
cmc
pop
jecxz
ja
divl
out
inc
mov
dec
jl
inc
mov
mov
cmpsb
pop
in
inc
push
inc
jle
lea
xor
push
xor
jmp
mov
inc
sub
jns
aam
dec
pushf
xor
cmp
or
adc
lock
jne
sti
cmp
dec
dec
into
and
les
stos
mov
inc
mov
popf
std
mov
or
mov
and
mov
adc
lcall
add
sbb
jne
rclb
push
in
fsubl
xchg
dec
jmp
les
xorl
outsb
mov
adc
and
push
movsl
sti
inc
dec
pop
mov
sbb
jge
mov
xchg
mov
push
and
test
sbbl
lcall
iret
and
cmp
aam
inc
cmp
les
jecxz
adc
push
nop
cwtl
bound
push
sbb
scas
push
addl
insb
push
or
mov
mov
pusha
inc
notl
gs
inc
fld
jae
push
xor
loopne
lcall
or
imul
outsb
inc
dec
inc
cmp
pop
adc
xchg
cmc
sbb
ss
mov
push
rorl
jo
push
push
cmp
fcmove
mov
pop
mov
dec
test
inc
fstpt
lret
lret
mov
rcrb
iret
sti
mov
push
mov
fiaddl
mov
or
push
adc
sbbl
inc
xor
rorb
push
inc
cmp
shrb
or
sub
cmp
daa
ds
sbb
imul
mov
cltd
stos
or
clc
sbb
adcb
jecxz
sahf
lods
outsl
add
sbb
push
sbb
insl
cmp
pop
cwtl
mov
inc
or
daa
or
les
mov
imul
mov
adc
xchg
mov
pop
add
adc
stos
add
nop
push
out
cmpsl
fldcw
jge
adc
movsl
rorl
inc
out
loopne
in
icebp
flds
xchg
xchg
cmc
push
cs
inc
adc
lock
add
dec
mov
lret
sub
push
and
jecxz
scas
xlat
push
dec
pop
inc
inc
push
mov
clc
scas
pop
fisttpll
mov
aaa
test
jbe
mov
add
xor
stos
test
aad
dec
push
add
imul
xchg
lds
cwtl
add
cltd
out
sbb
pop
add
xchg
xchg
daa
icebp
cmp
mov
es
clc
jg
fsubl
add
pop
and
pop
in
inc
push
int3
sbb
adc
cld
mov
mov
mov
xchg
bound
es
xlat
push
mov
cs
jmp
mov
out
gs
call
int3
divl
mov
or
cwtl
andb
lcall
adc
cmp
inc
or
cld
cmp
repz
sub
push
sbb
scas
sahf
sahf
repnz
and
xlat
stos
jnp
xor
fs
mov
fs
lock
outsl
pop
xor
jg
sub
mov
push
outsl
jns
sub
xor
cmp
pop
or
cmpsb
test
rcrb
mov
inc
outsl
cmpb
sub
loopne
and
in
xchg
fldl
hlt
outsl
daa
das
cmc
cmpb
adc
inc
lret
insl
ret
jnp
add
es
xchg
xchg
loope
sbb
movsl
lret
mov
ss
lahf
cmpsb
and
or
arpl
and
sahf
stos
fmull
push
xchg
jmp
outsl
cmp
push
mov
bound
add
mov
adc
rep
xchg
cld
das
lods
cld
xchg
shr
push
push
cltd
inc
pop
hlt
or
fwait
mov
push
cmp
jnp
mov
mov
mov
scas
mov
fisubrl
inc
loop
cmpsb
and
cmp
jae
xchg
iret
hlt
mov
pop
push
stos
bound
shlb
xchg
inc
ret
xor
sbb
xor
mov
mov
push
or
cmpsb
cmp
movsb
icebp
call
or
repz
xchg
xchg
out
out
in
mov
lret
mov
call
add
les
cmpsl
aaa
ljmp
or
mov
out
xorb
jne
sbb
xor
or
inc
inc
aaa
dec
mov
hlt
cmpsb
adc
and
dec
popf
jb
mov
add
call
sbbb
enter
lahf
and
jl
js
and
xorl
mov
inc
add
bnd
pushf
cmp
sub
jl
in
inc
jl
or
cs
mov
xchg
sub
lahf
and
cli
pop
push
and
sub
or
xor
lret
jmpw
fidivrs
mov
xchg
inc
pop
lret
mov
xchg
mov
and
cmp
xchg
inc
rcll
scas
mov
inc
test
dec
lcall
pushf
shll
sub
add
in
aad
mov
je
cmp
push
cli
jne
cmp
and
inc
pop
data16
loop
ss
mov
add
push
es
mov
xor
push
out
mov
xchg
aaa
fisttpll
incl
xchg
popa
loopne
cltd
pop
dec
jbe
pop
xchg
lea
pusha
adc
in
jnp
popf
cld
mov
aad
sbb
je
hlt
or
adc
outsb
aaa
jmp
and
es
int3
dec
lds
adcb
mov
inc
push
loopne
xchg
and
jo
mov
adc
inc
dec
mov
ljmp
in
push
cmpsb
fdivrs
aas
cmpsl
test
inc
push
pop
je
lret
addb
adc
out
in
popf
cs
adc
mov
mov
mov
out
or
adc
cmpsb
adc
or
sbb
insb
das
pushf
adc
xorl
addr16
rorl
adc
test
or
jns
mov
sbb
mov
add
cmp
in
pop
in
in
dec
cwtl
cmp
inc
hlt
cmp
sahf
adc
in
push
sbb
ds
arpl
xchg
outsl
clc
add
popa
sub
mov
out
add
pop
pop
sbb
pop
out
dec
in
jmp
sub
mov
jne
stos
pop
and
sbb
in
arpl
cmpsb
jb
loope
inc
mov
scas
fadd
lcall
mov
push
movsl
add
cmpsl
shr
push
test
int3
das
cmp
frstor
cmp
ror
cwtl
mov
mov
shr
jl
mov
dec
or
aad
xor
mov
scas
sub
cld
jg
xor
inc
mov
lods
add
icebp
xchg
inc
add
cld
adc
jg
mov
bound
in
lret
ret
sub
test
and
jecxz
jl
and
adc
jp
lcall
mov
cli
sbb
mov
sbb
cwtl
push
push
js
in
push
xchg
jnp
ljmp
nop
movsl
cltd
pop
jno
test
inc
ficompl
fstl
clc
filds
dec
mov
adc
and
jb
mov
movsb
push
vmwrite
pushf
out
cwtl
inc
aaa
cmp
sbb
jnp
push
pop
cmp
pop
push
xchg
sbb
pop
push
lods
andb
outsl
xor
subb
and
mov
xor
sub
mov
inc
mov
dec
stos
fs
sub
jae
out
jle
add
and
jns
lds
stos
lcall
cld
in
rcrl
scas
and
or
cwtl
mov
imul
mov
subl
std
adc
lea
mov
dec
imul
es
cwtl
lods
jnp
xor
movsb
aas
mov
or
fiaddl
dec
jae
ja
jns
sbb
fists
pop
pusha
out
mov
mov
sbb
outsl
sub
mov
pusha
mov
movsl
sbb
aas
aaa
in
cwtl
jle
push
stos
mov
push
ret
push
dec
pop
pop
fs
cmpsb
shrl
imul
rcrl
xchg
add
std
mov
cmc
test
inc
pop
cmp
gs
push
ja
sub
lods
bound
push
sbb
sub
sbb
movsb
cmp
pop
popf
insb
outsb
je
ja
into
int3
push
incb
pop
sbb
pop
lds
daa
cs
cltd
pop
in
idivb
push
sub
sbb
sub
push
faddl
ja
cmpsb
xor
mov
dec
pop
push
dec
outsl
pop
cmpsb
cltd
mov
and
xor
mov
push
sti
sbb
xor
jae
movsl
mov
adc
xchg
fcom
adcb
cmp
sti
add
negl
lret
pop
xor
mov
fwait
push
xor
inc
shr
outsl
stos
mov
mov
mov
das
inc
movsl
std
sbb
call
fidivrl
cmp
cmpsb
pop
add
or
jl
mov
mov
inc
fwait
gs
push
mov
ja
jecxz
pushf
je
insb
hlt
addb
js
mov
sub
lahf
or
outsl
mov
inc
push
sbb
ret
mov
xchg
and
sahf
inc
shrb
pushf
fstps
jno
xchg
inc
stos
out
mov
ja
addb
or
ds
xchg
cmp
mov
enter
mov
sub
pop
imulb
sbb
hlt
int3
inc
xor
outsb
pop
sbb
cmpb
add
push
loopne
dec
popf
int3
mov
scas
js
mov
scas
or
fsin
xchg
or
test
repnz
dec
inc
lret
test
mov
fdivrp
cmp
ss
addl
sub
repz
adc
cmp
jmp
in
fsubrs
adc
scas
pop
rcll
je
jae
or
sbb
adc
mov
jge
daa
or
jne
cwtl
fnsave
outsb
std
pop
jle
xchg
insl
repz
enter
shrb
shrb
pop
leave
cltd
stos
subb
iret
push
pop
addl
cmp
mov
cmpl
lret
adc
cmpsb
stc
rclb
cld
in
in
fiadds
iret
jne
jae
cmp
sbb
sbb
mov
adc
loopne
movsl
pop
stc
fdiv
or
add
xchg
xor
and
or
cmp
fstpt
shlb
stc
daa
mov
subb
lods
leave
xchg
add
xchg
hlt
or
push
pop
mov
test
jno
push
xchg
adc
inc
test
jg
adc
sbb
shlb
repz
add
mov
in
test
pop
aam
fs
pop
lds
and
sbb
or
shlb
rol
pusha
mov
push
lock
subb
push
or
mov
and
cmc
push
lret
xor
insl
sbb
mov
orl
sub
ret
add
mov
test
fs
sub
sbb
jmp
cmp
xor
stc
cs
push
or
imul
mov
sub
lock
std
sti
bound
enter
adc
repnz
shl
push
popf
pop
sub
std
push
popa
push
cli
xchg
lods
or
inc
std
push
fs
mov
inc
mov
pop
in
fldt
add
xlat
add
xor
icebp
add
mov
inc
add
sbb
add
lea
lahf
aad
jp
loope
push
xchg
lods
pop
mov
js
pop
jae
dec
stc
cmp
cmp
push
lea
cs
push
mov
shl
insb
push
add
sbb
and
dec
xor
inc
arpl
add
jns
gs
add
js
mov
popl
cmp
pop
or
xor
mov
ficomps
ss
dec
cmp
lea
push
cmc
dec
stos
jno
dec
adc
pop
aad
fists
and
insl
mov
sbb
and
xor
jbe
in
fwait
outsl
into
inc
sbb
adc
fwait
je
loope
mov
dec
inc
cld
out
ss
mov
iret
bsf
dec
mov
add
xchg
movsb
push
add
or
sub
or
lahf
adc
cmp
cwtl
pop
dec
outsl
pop
dec
jge
in
inc
shll
dec
cmpsb
dec
sbb
jmp
aaa
imul
sbb
cli
push
jmp
das
adc
push
stos
sbb
adc
jns
jb
dec
mov
mov
enter
mov
clc
aaa
jno
notb
ficompl
mov
adc
fld
sbb
idivb
test
loop
pushl
push
sbb
and
push
add
mov
xor
pushf
cmc
lcall
xchg
in
add
call
adc
add
push
and
test
add
jbe
fldl
mov
pop
dec
cwtl
cmp
es
jge
sti
scas
dec
shll
dec
fstpt
xchg
sub
dec
imulb
jae
mov
mov
aam
jp
cmp
dec
dec
adc
mov
in
add
xchg
mov
outsb
andl
daa
sbb
push
mov
xor
insl
inc
xlat
test
mov
push
jp
jge
mov
insb
mov
sub
mov
mov
insl
push
cs
mov
aam
in
shl
loop
jb
out
je
inc
sti
or
int3
lret
mov
jnp
xor
fidivs
test
xchg
mov
mov
or
push
jmp
bound
jp
or
jo
outsb
mov
lods
dec
aad
add
pop
clc
push
shlb
dec
loopne
inc
mov
pusha
sbb
ss
or
push
xorb
jne
and
lods
in
mov
mov
test
xchg
notl
push
in
pop
in
push
jb
pusha
movsb
pop
imul
test
xchg
mov
cs
cld
call
imul
jnp
lds
std
or
test
enter
xor
push
pusha
pop
push
mov
sub
sbb
fdivl
rclb
xchg
das
aaa
in
clc
frstor
xor
fcoms
ljmp
mov
add
ret
cmp
insl
cmp
jecxz
popf
sub
fs
sbb
inc
sub
sbb
push
pushf
sbb
test
add
add
fcomps
cmp
test
popf
lcall
adcb
lea
fcompl
hlt
nop
enter
adc
addr16
mov
loop
std
fsubl
add
js
inc
aaa
add
mov
inc
ds
out
mov
jno
add
fstl
push
adc
in
sahf
or
lret
inc
sbb
xor
mov
xor
or
xchg
stc
sub
ljmp
cli
adc
mov
dec
mov
or
xor
push
sub
incl
sbb
icebp
xchg
lods
pop
jns
insb
iret
lahf
cmpsl
lcall
fsts
es
aaa
popa
mov
popf
cld
mov
push
and
dec
cmpl
daa
sub
adc
aas
jmp
mov
pop
js
bound
std
jae
loopne
inc
mov
dec
ror
pop
setbe
iret
in
aad
inc
sbb
push
movsb
std
out
pop
jbe
inc
ret
lock
call
lods
data16
pop
pop
cmp
ss
push
add
ror
push
movb
lods
push
mov
sbb
xchg
xchg
enter
push
xchg
dec
gs
lock
mov
stc
dec
cmpsb
push
je
cmp
outsb
sahf
xchg
pop
or
mov
sti
mov
adc
push
and
test
pop
add
mov
daa
pop
daa
mov
mov
mov
push
test
dec
bound
es
xor
ds
ds
imul
lret
jl
rcr
or
cmp
inc
xlat
inc
sub
popa
es
clc
mov
cli
shrb
xor
mov
pop
push
jecxz
sbb
subb
bt
int
pushf
gs
push
dec
or
shrl
cli
jle
pop
inc
sarb
cmp
push
add
cmp
cbtw
fldl
inc
sbb
fsubrs
push
in
push
ret
sqrtps
stos
pusha
shrb
cmpsl
imul
jle
mov
add
mov
or
lods
cmc
les
pop
cmp
in
mov
ss
sbb
movsl
sbb
add
mov
mov
and
jle
push
lea
into
and
nop
mov
xchg
cli
dec
movsb
jbe
test
xor
cltd
aad
arpl
sub
rclb
xchg
and
pcmpeqb
add
push
pop
push
iret
cmpsl
cmp
mov
repz
mov
mov
out
and
push
lods
hlt
jle
cwtl
ficomps
xchg
pushf
scas
sub
jecxz
dec
mov
rcl
das
push
dec
in
xorl
and
sbb
sbb
out
mulb
jge
add
pop
arpl
into
mov
dec
lods
cmpb
push
pop
pop
daa
movsl
sbb
aaa
lods
xchg
push
stos
or
pop
lahf
repz
push
popa
inc
mov
test
pusha
enter
les
jl
rorl
mov
fsubl
mov
xor
or
call
shlb
out
adc
dec
sub
aad
mov
pop
aaa
pop
out
add
dec
inc
data16
fldcw
push
add
push
mov
jns
mov
icebp
int3
mov
in
xchg
gs
loopne
adc
mov
add
sub
loope
ret
ds
int
inc
dec
and
sbb
inc
leave
cwtl
arpl
mov
adc
mov
add
test
adc
xchg
sahf
jp
pushf
lods
inc
sbb
out
sub
mov
cltd
fmul
jnp
outsl
cmpsb
pop
jge
test
jecxz
movsl
push
lcall
scas
leave
xchg
aas
lods
into
xor
cmp
jmp
jae
sahf
lahf
adc
and
or
lea
cmpl
dec
pop
roll
xchg
and
mov
fmull
pop
test
push
cmp
test
ljmp
push
xor
aad
add
int
int
addl
and
adc
sub
pop
imul
imull
push
adc
xchg
das
cmp
adc
push
dec
inc
cs
xchg
inc
push
add
leave
mov
cltd
xor
add
dec
mov
mov
inc
xchg
ficoms
jbe
ds
mov
or
enter
lret
add
dec
xor
cli
cli
test
add
push
xor
es
adc
or
loop
int
in
jne
jnp
stos
mov
pop
lcall
test
add
jp
out
add
popa
push
xchg
sub
frstors
out
add
pop
and
dec
xchg
or
ficoms
nop
fwait
cli
cltd
jle
ljmp
lcall
std
dec
sarl
mov
outsb
mov
movsb
mov
fisttpll
cs
inc
in
clc
inc
sub
jmp
enter
test
pop
adc
inc
xchg
xor
xchg
adc
xchg
pop
inc
mov
fistps
xchg
add
mov
jne
shlb
sub
loop,pt
and
sahf
inc
mov
shrb
dec
dec
jbe
loop
orl
insl
ret
in
and
sbb
aaa
dec
cmp
cmp
jmp
lahf
xor
vxorpd
pop
test
or
outsb
popf
hlt
imul
jno
nop
sub
lea
mov
dec
aam
orb
sbb
sub
mov
push
imul
rclb
adcl
adc
imul
std
push
mov
mov
push
leave
xor
cmpsb
mov
pop
jge
imul
lret
xor
testb
and
push
xor
pop
out
dec
lods
inc
jae
add
icebp
xchg
pop
xor
nop
int3
jp
decb
pop
scas
and
inc
mov
mov
dec
fisubs
in
adc
jo
jmp
xor
incl
xor
addr16
mov
jge
or
inc
out
lret
mulb
lret
test
mov
in
sbb
imul
push
add
mov
xor
push
fdivl
cmp
sti
adc
mov
mov
popf
push
jmp
popf
mov
fimull
jns
xchg
jle
cld
adc
shr
sub
in
fnstsw
scas
out
fimull
sub
sub
stos
lods
orb
cwtl
pushw
dec
adc
push
cmp
add
lock
sub
xchg
pusha
jbe
push
jmp
push
push
bound
inc
pushf
shrl
cmp
hlt
loope
push
push
sub
push
std
xchg
test
and
xor
pop
ret
or
out
mov
cmpsl
jg
jge
out
test
lret
lahf
xchg
sub
xchg
outsb
mov
mov
mov
iret
dec
aaa
decb
add
ss
mov
adc
fs
and
add
and
sti
push
negl
rcll
cld
ja
daa
hlt
sub
daa
ret
rcrl
icebp
insb
repz
loop
inc
pop
inc
push
xor
mov
push
or
ret
push
sbb
inc
ljmp
lret
adc
pop
lcall
xor
jmp
loope
stos
and
shl
fcoms
push
or
mov
mov
es
lock
into
jb
adc
cmc
xchg
sub
test
inc
fistpll
xchg
mov
cmpsl
mov
pop
lds
mov
cs
mov
repz
roll
push
call
mov
sbb
add
mov
call
pop
and
subl
stos
bsr
mov
cmp
daa
decb
ds
out
movsl
add
xchg
ss
mov
mov
or
pop
xchg
mov
aam
dec
and
lods
popf
mov
ja
push
xchg
sbb
cmp
loope
dec
jp
fwait
mov
xchg
pop
lcall
jnp
inc
pop
outsb
and
mov
cld
fdivp
cmp
fs
mov
sbb
mov
add
pop
sbb
mov
daa
fucomp
mov
push
daa
adc
sub
call
out
subl
lods
sub
cli
in
repnz
ret
sub
out
or
cwtl
into
dec
cmp
add
cmc
lret
cmpsb
pop
test
cli
ja
sbb
inc
inc
loopne
pop
repnz
fidivrl
sub
mov
aam
inc
dec
adc
arpl
sub
fwait
jp
inc
cwtl
sarb
mov
testb
int
cltd
push
cld
cmp
repz
ret
mov
xor
mov
pusha
xor
adc
rorb
mov
push
pusha
inc
jo
mov
scas
mov
outsb
ret
js
xchg
clc
movsb
xorb
sbb
jb
addr16
loop
sub
adc
push
sbb
int3
cltd
lcall
bound
sbb
add
mov
inc
out
inc
out
or
ja
test
push
add
mov
lds
dec
cmp
or
into
imul
xor
jno
fwait
jbe
ret
js
sbb
lahf
push
xor
jnp
sbb
in
pushf
call
sbb
das
cli
fldcw
fnstcw
aad
sti
lret
pop
inc
push
push
lcall
adc
adc
imull
stos
fnstenv
xchg
rcl
sub
imulb
cmp
sbb
icebp
push
lods
pop
add
in
lods
xor
in
ss
mov
ja
inc
test
jle
or
movsb
inc
dec
xlat
int3
inc
add
lret
cmpl
es
addr16
cwtl
push
rcll
rcrl
jmp
aam
out
xchg
push
aas
cmp
cmpsl
push
movsl
and
jmp
mov
and
cmc
clc
aam
stc
aaa
nop
sbb
pop
das
testb
test
mov
add
gs
or
std
gs
and
cmp
rorb
lret
daa
hlt
lcall
or
xchg
outsb
fnstcw
mov
sub
lods
outsl
or
xchg
adcb
push
or
or
data16
mov
mov
clc
out
aam
cs
test
add
jns
push
sub
loope
testl
jge
aaa
rcrl
lods
mov
pop
popa
dec
and
lods
hlt
pop
nop
xlat
insb
push
orl
mov
adc
mov
loope
loope
adc
fsubs
arpl
pop
mov
mov
push
jae
ja
sbb
pop
ficomps
subl
cmpsb
xchg
dec
sbb
pop
test
orl
outsb
je
or
push
les
ljmp
pusha
sub
pushf
mov
adc
lahf
dec
push
xor
mov
adcl
pop
adc
cmp
sbb
fcompl
mov
jecxz
or
imul
stos
cmpsb
push
imul
into
xchg
lods
mov
test
ja
push
fistps
jp
pusha
aad
cmp
test
push
jae
inc
in
mov
and
push
es
sub
push
hlt
and
inc
pushf
int3
outsl
sbb
dec
in
adc
pop
ljmp
addr16
inc
rorb
xchg
aaa
jnp
cmp
mov
sbb
jae
push
jbe
pop
lock
outsl
cmc
jg
fwait
fs
pop
jmp
aam
fsubrl
cli
xchg
push
lock
pop
ja
pop
push
leave
popf
adc
addr16
pushf
cld
xor
sub
add
adc
je
xchg
inc
push
sbb
into
outsb
xchg
fisttps
mov
mov
push
addl
test
js
daa
jnp
pusha
popf
arpl
push
jo
rcrl
xchg
idivb
aas
and
fldl
sbb
or
mov
mov
pop
xor
jbe
aas
cld
jmp
stos
cvtdq2ps
out
cmc
xchg
je
mov
sub
adc
iret
adc
lea
into
imul
mov
fldz
adcl
sti
pop
xchg
jno
fwait
cli
outsl
idiv
lods
add
je
ror
jno
cmp
jbe
js
xchg
xchg
and
jb
ret
mov
mov
out
inc
or
push
test
jge
divb
js
pushf
or
jmp
call
roll
dec
daa
imul
imul
test
push
lret
pop
addr16
pop
mov
out
mov
or
add
mov
push
in
inc
loopne
ss
jbe
mov
lret
and
cmp
cmpsl
jl
lea
cld
sbb
fisubrl
lret
inc
scas
pop
mov
int
sub
stos
sbbl
mul
push
push
ret
jl
or
cmp
repnz
lds
push
push
push
mov
and
sahf
mov
test
jns
dec
hlt
fsubp
fstp
inc
bound
pop
xchg
data16
lea
stos
inc
cmp
pop
add
movsb
test
sahf
and
clc
sub
mov
push
jge
or
call
pop
mov
jne
lahf
add
cltd
popa
rsm
jb
add
out
cld
sbb
jae
lahf
loopne
cwtl
insb
or
mov
pop
inc
sub
movsl
insb
call
or
incb
jg
push
in
das
ret
insb
jb
add
push
add
in
cwtd
cli
cltd
fistl
push
ja
mov
mov
popa
sub
pop
push
cwtl
dec
imul
push
add
sbb
mov
pop
jg
out
negl
fcoms
ja
mov
stc
jbe
or
xor
mov
int3
xor
in
aad
int
mov
push
xor
aas
in
aad
outsl
cmp
inc
jg
xchg
cmpsb
cmpsl
cmc
insl
cwtl
loope
in
xor
imul
into
pop
outsb
mov
push
mov
aaa
daa
and
sbb
xor
stos
call
lcall
rorl
pop
inc
popa
sahf
test
adc
in
in
fadd
pusha
mov
in
xchg
je
test
sub
jecxz
pushf
scas
cmp
ljmp
mov
or
enter
sbb
mov
icebp
fidivl
icebp
mov
cli
jle
jle
add
jl
lea
into
pop
dec
mov
leave
ja
cmc
or
add
sub
testb
daa
test
and
enter
ljmp
lock
popf
mov
arpl
mov
test
pop
fildll
aam
inc
cmc
add
jbe
or
fisttpll
mov
xchg
mov
dec
in
jmp
sbb
fimull
mov
sti
ret
das
inc
lock
test
jnp
hlt
aas
inc
sahf
cmp
gs
popa
test
addb
jle
push
ljmp
adc
loopne
aad
bound
inc
test
mov
cmp
pop
jp
push
stos
fimull
dec
adc
jecxz
sub
mov
mov
and
lds
or
loope,pn
ds
pop
js
xchg
cmp
cmpsb
inc
out
inc
movsb
out
sbb
push
mov
mov
jg
js
sti
lock
ja
je
popf
imul
sub
js
bound
jecxz
inc
mov
enter
fstps
dec
push
imul
jg
or
iret
push
repz
arpl
lret
nop
loopne
dec
or
into
mov
mov
loop
dec
adc
hlt
and
dec
roll
rcll
xchg
push
add
in
rcll
stos
jmp
sbb
mov
mov
and
in
das
pop
xor
iret
je
cwtl
sbb
je
push
in
sbb
lea
lds
dec
not
mov
cmpsl
ror
jne
in
xor
test
loope
dec
and
dec
pop
sub
scas
repz
lods
lahf
lret
in
arpl
psllq
pop
daa
cmc
repz
repz
push
cmp
mov
cmp
mov
inc
sbb
dec
hlt
mov
cmp
push
sahf
mov
movsl
sub
aaa
pop
ja,pn
xchg
sbb
inc
nop
cmpsb
mov
out
add
rcrb
addl
push
sbb
es
or
shlb
lds
imul
ret
sbb
lcall
dec
xchg
adc
inc
mov
push
dec
push
mov
push
mov
shrb
push
mov
into
out
and
add
xchg
sbb
inc
repz
dec
std
adcb
or
int
sub
mov
and
dec
jne
sahf
out
imul
inc
test
mov
idivb
cmp
int
mov
out
shrb
mov
add
mulb
dec
lock
bound
and
cmp
aas
jmp
mov
or
pop
aas
clc
cmp
sub
jecxz
or
mov
clc
or
movsb
cmp
push
sub
or
repz
or
enter
shll
in
jmp
cltd
lahf
scas
cmp
in
adc
leave
stos
imul
pop
xchg
je
repnz
sbb
push
repz
add
data16
stc
addb
xor
cmpsb
add
imull
pop
loope
loopne
xor
lods
mul
xchg
and
stc
testl
popa
fxsave
out
nop
mov
fucomp
les
jno
lret
test
push
mov
out
outsl
rolb
cmp
test
xor
dec
mov
add
mov
mov
add
sbb
stc
mov
js
mov
and
fistl
iret
pop
inc
dec
mov
mov
jmp
lods
ret
push
test
shll
cwtl
out
mov
outsl
stos
daa
cmc
inc
shr
pop
clc
lret
and
xchg
outsb
jecxz
nop
std
mov
mov
js
cs
rcl
clc
movsb
jmp
mov
repz
add
stc
sbb
add
insb
mov
pop
and
imul
and
popa
sarl
mov
jle
ficompl
jge
int
dec
repz
loope
jbe
jae
repz
add
pop
pop
cmc
push
and
and
inc
movl
arpl
insl
hlt
and
repnz
mov
sbb
test
jae
jp
in
xchg
mov
aaa
cmp
mov
repz
adc
cmp
cmp
xchg
movsb
les
mov
mov
add
cli
inc
mov
push
xlat
mov
out
ljmp
xor
or
ss
popa
xchg
mov
aam
xchg
int
add
rol
fwait
pop
xchg
icebp
mov
pop
dec
and
pop
xchg
pop
psrlq
adc
jge
push
sbb
out
cmp
bound
jl
add
or
inc
lods
and
push
idivb
iret
fiaddl
mov
cmp
cmp
pop
fidivs
jle
sbb
loop
sti
push
in
call
inc
dec
fwait
and
push
andb
in
jae
push
jmp
push
mov
jb
insl
cmp
push
and
sbb
cmp
mov
sub
stc
es
push
into
aas
mov
lods
mov
and
jge
or
jp
call
sub
or
push
dec
xchg
imul
rcrb
call
add
sbb
xor
or
popf
mov
or
repnz
dec
adc
sub
lea
sub
lret
movsb
pop
sub
lods
int3
pop
mull
mov
bound
imul
mov
gs
and
ret
shl
xor
sbb
hlt
gs
fisubrs
push
pop
inc
jg
lcall
lods
push
int
jns
jl
push
jmp
rorl
mov
push
js
ret
es
xchg
negb
ret
andb
and
pop
pop
mov
sahf
xor
dec
imulb
aad
push
ja
sbb
jmp
adc
aaa
subl
xchg
lea
lcall
daa
and
sbbl
ljmp
in
aam
mov
in
call
push
mov
lods
sbb
jge
jmp
out
push
mov
aad
mov
xchg
add
xchg
xlat
adcl
add
insl
adc
push
mov
loopne
stos
shrb
and
mov
inc
js
push
adc
mov
and
jg
ljmp
push
fwait
pop
pop
xchg
push
pop
in
sbb
and
jae
mov
mov
imul
lods
xor
cmp
push
xor
xchg
lock
mov
push
ret
ret
sub
test
les
pop
sub
shrb
sbb
and
std
push
outsl
or
addr16
bound
adc
scas
loop
sub
or
adc
fstp
in
inc
push
jno
lods
loop
cwtl
and
enter
stos
lods
ds
jo
adc
mov
inc
add
lret
repnz
cmp
xor
jns
ret
cmpsb
scas
loop
mov
test
and
sbb
mov
loopne
pop
mov
push
out
js
and
add
push
dec
divb
fcoml
mov
pop
rcll
mov
lret
push
jl
sub
movsb
outsl
add
sahf
mov
sarl
cli
inc
call
add
int
jo
cli
lock
les
pushf
adc
cmp
xor
or
add
test
fdivl
mov
mov
out
scas
fwait
xchg
sub
js
pop
mov
inc
cmp
push
nop
adc
mov
lret
mov
xchg
xchg
mov
cmc
add
sub
lds
xchg
push
fcmove
sbb
lods
cld
adc
iret
inc
into
mov
incl
inc
hlt
fcmovbe
sarl
addb
sbb
push
je
sub
out
cmpsb
pop
inc
shr
std
mov
sbb
pop
inc
cmp
push
movswl
push
dec
lret
push
daa
ret
jbe
fwait
inc
xchg
icebp
int
sbb
inc
call
pop
jno
add
stos
sub
cmp
pop
pop
ds
pop
jae
pop
pop
and
faddl
les
js
inc
lcall
sarl
fldl
mov
bound
addl
pop
mov
out
cmp
test
adc
adc
fimuls
mov
sbb
xchg
lods
jge
lcall
xorl
push
lret
leave
adc
cwtl
cmpl
mov
aad
sub
int3
popa
mov
repz
push
ret
cmp
add
or
mov
fmul
jae
icebp
popa
jb
mov
stc
sbb
dec
add
lcall
and
or
mov
mov
adc
and
addr16
or
cmp
xor
xchg
shlb
push
mov
imul
fdivs
fs
ljmp
popa
xchg
out
pop
and
xor
cmp
fdiv
add
out
jnp
lcall
hlt
icebp
das
add
jg
int3
pop
fldl
rorb
sub
mov
push
ret
int3
roll
cmc
gs
lret
dec
mov
xchg
jmp
setb
mov
push
vpaddsb
fstps
mov
pop
add
push
pop
lcall
xor
ss
lahf
rcl
jmp
call
clc
adc
sub
imull
fcos
push
dec
jno
push
out
mov
or
aas
enter
popf
insb
and
jp
int3
xchg
testb
adc
out
mov
shr
lret
and
sub
mov
jle
test
jno
cld
lret
push
ja
idivb
xchg
add
cmpsl
mov
dec
outsl
hlt
lods
and
insl
pop
jmp
flds
pop
jne
repz
or
mov
xor
lods
cmp
es
ja
aad
jns
lret
dec
xlat
ror
dec
movsb
cmp
xchg
popf
fdivs
loopne
xchg
or
fldenv
fisubrs
sub
arpl
dec
mov
mov
dec
jb
fs
lahf
cli
mov
xchg
pminsw
into
inc
add
rcrb
out
call
jnp
xor
jg
xor
push
dec
dec
sub
adc
aad
imul
pusha
sbb
pusha
add
stc
mov
jmp
push
or
outsl
jns
pop
decb
lret
sbb
loop
sub
ret
inc
push
ficoms
mov
dec
sub
movsb
xchg
or
fcomp
add
mov
repnz
cmp
add
push
sbb
push
sbb
sbb
jp
xor
xchg
add
jnp
lods
add
mov
enter
adc
pop
cltd
lock
sarb
in
fimuls
fs
lods
scas
nop
test
pop
mov
push
xor
hlt
fdiv
loope
fcompl
xor
jne
int
mov
xchg
js
jnp
sahf
test
mov
jbe
inc
jmp
repnz
inc
lds
ret
push
sub
test
push
xor
and
iret
sub
sti
mov
mov
clc
jecxz
push
test
add
mov
imul
dec
lods
xchg
lret
inc
orl
add
sahf
mov
sahf
les
push
lock
and
sbbl
push
inc
pop
jbe
xchg
jo
cmpl
mov
inc
shll
jno
mov
repz
add
repnz
mov
or
lods
js
iret
loopne
jmp
adc
mov
jl
clc
insl
fcomi
adc
nop
scas
pop
je
rclb
outsl
jp
ficoml
int3
add
rcrl
push
xor
pushf
inc
orb
sarb
test
and
add
jne
mov
dec
jae
lock
popa
sahf
aad
xor
pushf
pop
mov
mov
hlt
outsb
pop
push
xlat
aad
add
and
out
pop
or
mov
xchg
in
or
sarl
rcr
dec
cmp
call
xor
std
mov
fwait
mov
mov
jne
ret
sub
in
add
push
mull
popa
mov
movsl
jp
dec
push
sub
dec
inc
inc
aaa
in
mov
call
add
sub
cmp
cmc
jno
push
ficoms
cmp
pop
pop
jp
dec
rcrb
fs
cmpsl
mov
mov
inc
xlat
cmp
icebp
movsb
jmp
lret
adcb
sbb
push
in
scas
cmp
xor
xchg
or
jbe
int3
push
movsb
or
inc
hlt
inc
add
jno
cmp
pop
addr16
push
movsl
daa
repz
jae
pop
bound
sub
push
cmp
fstps
mov
stos
mov
add
sub
sahf
hlt
hlt
jno
cli
movsb
pop
inc
addr16
or
push
and
ss
loop
xor
es
sub
mov
mov
xchg
out
bound
xchg
ret
ljmp
mov
jbe
fldenv
mov
adc
lea
test
out
gs
mov
out
cmp
push
fs
or
sub
dec
loop
xor
push
jg
mov
and
pop
ljmp
loopne
dec
sub
inc
add
xor
gs
ret
dec
push
scas
or
lcall
fcom
fcmovnbe
jbe
in
int3
add
fdivl
cmpl
cmp
test
inc
jp
enter
mov
ret
jmp
loopne
mov
insb
pop
insl
andl
sti
add
dec
cmp
out
dec
dec
mov
jg
shl
pop
cltd
lods
test
sti
dec
rcll
adc
jns
xor
in
mov
in
mov
test
add
es
lea
incb
aas
popa
movsl
xchg
je
mov
lret
add
cmc
sub
out
hlt
mov
inc
pop
push
cmpsb
in
enter
pop
in
test
xor
dec
add
lret
icebp
mov
sub
leave
mov
test
push
push
dec
sbbb
mov
inc
int
mov
sub
imul
ss
out
es
cmp
mov
adc
push
pop
es
std
enter
loope
xor
ljmp
test
icebp
mov
out
push
imul
adc
mov
loop
ja
test
push
lods
in
or
dec
dec
adc
insb
push
mov
sub
aam
sub
jo
gs
ficoms
push
xchg
sbbb
out
aam
or
inc
mov
mov
ja
mov
cmp
sub
lods
mov
ficoml
loop
mov
cmp
cmpsb
imul
dec
lea
and
cmc
and
push
add
enter
xor
jne
xchg
dec
lcall
pop
mov
sbbl
cmp
sbb
lds
add
int3
mov
jp
or
push
adc
xor
sub
sub
mov
rcrl
mov
dec
movsl
jo
rorb
in
daa
leave
stc
sbb
inc
in
mov
xchg
sbbl
fnsave
pop
mov
cmp
subb
xchg
sti
xchg
jnp
inc
cli
mov
jp
js
inc
xor
repnz
fimull
jp
inc
jns
mov
aaa
call
jns
andl
cmp
xchg
inc
sahf
xchg
mov
add
add
stos
dec
jno
adc
or
cmp
inc
xor
sbb
xchg
push
scas
enter
jmp
dec
shrb
dec
in
data16
push
xor
in
ja
iret
pop
test
mov
sub
ljmp
jge
insb
outsl
jge
inc
lea
out
xchg
dec
int
pop
mov
jbe
pop
sbb
popa
cmc
lods
mov
stos
int
mov
mov
inc
pop
inc
cmpsl
xchg
outsb
out
sbbl
jecxz
xchg
aam
nop
inc
sbb
lea
hlt
adc
fsub
lea
adc
shrb
mov
adc
inc
dec
push
sbb
and
mov
loop
lds
cs
in
xor
mov
dec
inc
lods
cmp
cmovnp
xlat
dec
xchg
mov
inc
jmp
pusha
dec
es
mov
adc
outsb
popa
sub
cmpsb
lods
pushl
ret
test
push
pop
fldl
inc
inc
stc
mov
arpl
xor
lret
stos
pop
cmp
scas
and
jecxz
mov
shll
xchg
add
test
xchg
pop
fmuls
dec
mov
mov
aad
mov
xlat
adc
imul
inc
lock
inc
and
and
rcrb
pop
rclb
xor
std
adc
out
into
mov
xchg
fcompl
int
in
or
mov
cmpsl
inc
jb
pop
dec
arpl
pusha
fcmovbe
ss
or
adc
dec
mov
js
iret
xor
mov
and
mov
jbe
xchg
pop
cwtl
mov
add
push
mov
mov
or
pop
inc
dec
xor
nop
and
shlb
pop
in
pop
or
rol
lds
xchg
cwtl
cmpsl
inc
je
ret
jne
aas
jo
into
sub
sub
mov
fistps
jl
in
sbb
xchg
mov
cmp
push
mov
or
and
das
roll
sub
je
mov
lds
mov
loope
adc
stc
mov
iret
mov
int3
jae
cmpl
lret
push
inc
xor
repz
xor
jp
push
aad
and
sbb
je
out
popf
or
ffreep
lret
repz
jle
and
sub
and
mov
inc
pop
cmpsl
adc
test
fstpt
add
or
int
push
dec
pop
insl
test
cmp
clc
dec
xchg
pop
xlat
mov
lcall
inc
dec
setbe
add
mov
add
dec
mov
and
repnz
int3
enter
pop
or
std
scas
and
pushaw
in
jg
rcrl
daa
cmp
pop
aad
out
cmp
sbb
outsb
scas
xchg
shll
lods
jae
dec
enter
movsl
push
mov
lret
mov
mov
int3
and
fwait
cmp
out
daa
xlat
adc
in
loope
stos
add
loope
push
adc
out
push
fs
mov
xor
sti
sbb
loope
jnp
movsb
in
int
scas
or
inc
push
sbbl
in
xchg
cli
pop
mov
dec
cmpsl
stos
in
xchg
sbb
int
push
xchg
mov
and
push
inc
sub
cmpsl
pop
mov
in
ljmp
jno
xor
jg
stos
je
arpl
int
andb
jbe
sub
push
inc
add
pop
js
mov
test
mov
add
and
or
xor
aas
int
inc
popl
add
xor
sub
xchg
pop
std
sub
loop
mov
mov
pop
mov
xor
ss
and
leave
int
jno
repz
dec
lret
ds
mov
sub
pop
xor
xchg
and
stc
stos
lret
lahf
rolb
ret
push
aaa
outsl
out
push
sbb
into
lahf
xor
pop
jb
dec
xor
xor
gs
fdivl
imul
sbb
in
icebp
mov
xchg
gs
xchg
xor
outsb
sub
inc
cli
enter
pextrw
outsb
mov
xlat
push
fildl
arpl
inc
adc
ret
ret
popf
mov
mov
xor
les
jmp
or
sbb
leave
cmp
sahf
jg
outsb
mov
cmp
lret
stc
inc
lods
dec
jne
and
dec
in
repz
sub
test
lret
sub
pop
and
jle
lds
mov
sub
add
or
sti
loop
enter
xor
jmp
ret
add
jl
pop
popf
call
xchg
jecxz
das
push
sub
sub
imul
out
aad
mov
mov
mov
xlat
xor
sub
into
cmpsb
dec
loop
inc
outsb
sbbl
dec
js
inc
ficompl
inc
sbb
push
scas
test
and
insb
fsubr
inc
sbb
aas
cld
push
xchg
or
call
into
mov
jl
push
push
rolb
ret
pop
into
divb
mov
call
es
mov
jo
clc
mov
ja
jmp
lds
mov
sub
test
lret
aas
ret
push
scas
push
fdivl
or
lcall
xor
xchg
lret
mov
mov
jns
xchg
sbb
mov
ljmp
inc
lds
in
fcomi
mov
inc
pop
aas
adc
mov
inc
cmp
fnstenv
bound
gs
roll
fsubr
cmp
jl
dec
mov
xchg
inc
addb
mov
nop
xchg
xchg
xor
adc
int3
mov
sub
fnstsw
lock
jns
mov
jge
add
mov
int3
jecxz
push
filds
mov
stos
inc
int
adcb
sti
fnsave
xchg
pop
and
lea
ljmp
jecxz
add
dec
fucomi
subl
sub
imul
push
sti
push
das
scas
inc
dec
movsl
mull
xchg
movsl
or
daa
dec
inc
mov
adc
test
adc
and
mov
mov
and
cld
mov
dec
add
inc
dec
mov
mov
cli
outsb
shr
stos
mov
std
pop
out
rclb
push
scas
in
mov
out
adc
in
lods
or
and
sbb
dec
and
mov
adc
add
aad
leave
es
cmpsb
dec
ret
repnz
mov
xor
stc
pop
ret
jg
mov
mov
xchg
inc
xlat
in
test
xchg
inc
or
mov
push
pop
mov
imul
dec
and
push
xchg
aas
and
rcrb
hlt
mov
xchg
out
xor
or
sti
jns
test
xchg
out
jmp
jae
iret
dec
adc
inc
mov
fidivrl
inc
push
cwtl
jo
inc
or
pop
cmp
test
mov
jne
fstl
in
mov
rcll
mov
je
dec
adc
mov
mov
stc
inc
pop
jg
lahf
and
push
inc
jb
jmp
sbb
sbb
cld
cmp
jne
das
xor
xorb
sbb
mov
dec
adc
mov
mov
sahf
jno
ss
xchg
in
mov
xor
push
add
scas
inc
cltd
mov
jns
push
lock
fs
push
cltd
lds
loope
cmp
xchg
inc
fwait
in
test
je
fnstcw
ja
dec
sbb
scas
aad
pop
jge
lcall
popf
mov
pop
pushf
daa
inc
mov
icebp
mov
hlt
cmp
movsb
jge
pop
sti
jp
jae
mov
and
ficoml
cmp
shll
push
xchg
sbb
testb
dec
outsl
inc
daa
sbb
repz
sub
into
cmpsl
call
clc
clc
aas
pop
loop
jmp
loop
call
lods
cs
xchg
pop
jne
inc
mov
jb
std
stc
lock
mov
sub
lahf
adc
inc
aad
mov
test
out
push
adc
push
cld
arpl
cmp
rorb
xor
repz
fs
add
push
xchg
loopne
mov
sub
imul
inc
idivl
pop
outsl
jae
sbb
mov
sbb
jp
or
dec
or
aam
jae
push
stos
inc
imul
sbb
andl
xchg
repnz
lods
xchg
add
push
mov
mov
mov
andl
sub
sbb
cmp
add
in
dec
and
ret
dec
xor
stc
out
cmp
add
stos
scas
ret
jo
in
int
push
stos
jmp
inc
lcall
push
mov
mov
hlt
adc
cmp
cs
jbe
xchg
push
dec
lds
rclb
mov
lcall
adc
inc
in
sub
cmp
in
cmp
iret
movsb
sti
add
inc
mov
add
mul
add
sbb
pusha
mov
xlat
jne
sub
imul
clc
ret
scas
das
xchg
pop
ds
fadds
es
xor
imul
add
and
mov
pop
stc
fildll
daa
dec
fwait
cld
and
cld
andl
or
push
jnp
in
push
sub
dec
pusha
inc
and
mov
cli
std
idivl
and
inc
cmp
inc
push
rol
rorb
adc
pop
popa
sbb
ljmp
adc
int
shll
in
in
mov
and
pop
mov
push
test
dec
pushaw
dec
adc
pop
add
push
call
mov
xchg
faddl
ljmp
std
add
jmp
cli
or
jae
div
mov
aad
cmp
and
cmp
cs
cs
cmp
sub
jo
in
mov
jns
rcrl
aam
mov
fildl
out
js
sub
in
stos
test
xor
inc
lods
push
fisubs
xorl
mov
out
pop
mov
xlat
inc
xor
dec
dec
lods
int3
aaa
stos
jp
or
test
data16
fnstenv
dec
pop
out
das
push
mov
pop
cmp
insl
fs
mov
sub
shlb
std
push
mov
aam
mov
push
mov
dec
test
lret
mov
mov
mov
push
in
aaa
cld
xlat
stos
jne
or
es
jmp
ss
int3
fwait
sub
daa
out
in
inc
sub
xor
mov
xchg
fcomps
insl
jb
cmpsl
inc
dec
je
sbb
and
pop
jno
iret
push
inc
sbb
ret
or
dec
mov
jno
fsubs
mov
adcl
adc
mov
mov
outsb
cld
mov
push
adcb
cmp
and
lahf
sub
or
pop
test
ret
shl
push
lods
mov
pop
stos
lret
repz
outsl
popa
cmpsb
shlb
dec
inc
inc
das
pop
inc
in
dec
push
daa
lods
aaa
cli
movsl
sbb
pop
cwtl
sub
jns
iret
and
leave
adc
ret
jns
lods
push
ret
loop
into
dec
cmpsl
cmc
inc
mov
mov
and
stc
or
jg
xchg
inc
mov
mov
mov
js
push
mov
mov
mov
cltd
jg
mov
jne
mov
iret
xor
dec
adc
sahf
outsl
sub
out
stos
popa
pop
sti
pop
cmpb
lods
push
jae
data16
out
test
pop
rcll
pop
or
nop
pushf
jb
repz
push
popf
inc
add
leave
imul
stos
jne
icebp
mov
popf
fmuls
test
rclb
push
decb
andl
call
jmp
xor
push
lret
jo
movsl
jbe
popa
pop
movsl
pop
mov
aaa
or
mov
lds
mov
mov
in
test
mov
push
dec
add
ja
sahf
mov
imul
pop
and
sbb
mov
es
add
enter
movsb
jb
mov
mov
and
aas
or
fdivl
push
xchg
popf
adc
jp
pop
mov
dec
loope
jo
lods
sahf
jecxz
or
icebp
fdivp
dec
jne
dec
arpl
mov
pop
lock
ret
xchg
std
bound
sub
push
inc
fldl
pop
xlat
jb
mov
out
inc
outsl
aad
fldcw
xchg
movb
sub
cmp
int3
lods
push
js
repnz
out
es
rcrb
pop
inc
jnp
add
loope
mov
imul
sbb
add
push
flds
addr16
sbb
xor
sub
cmpsl
testb
mov
push
out
xor
push
js
xor
jg
pop
xchg
jae
push
ljmp
and
and
jb
xchg
inc
aaa
imul
insb
and
das
int
aam
jg
addr16
ror
lock
and
and
add
mov
movaps
lret
shll
cmpsl
push
push
lret
daa
jbe
and
repz
add
sub
jge,pn
mov
fistps
incb
cmp
push
and
in
xor
sub
or
inc
xorl
mov
lret
testb
mov
arpl
and
adc
mov
out
sub
pop
pop
dec
and
jg
cmpsb
insb
cmc
test
je
dec
insl
push
jmp
fsub
andps
orb
out
add
push
push
orb
inc
shlb
jo
test
lahf
dec
mov
mov
push
adc
inc
inc
cltd
mov
adc
jge
jg
mov
popa
sbb
and
dec
stc
lahf
dec
jb
push
sbb
scas
addr16
rorl
loopne
mov
in
dec
cmp
jmp
mov
xor
mov
int
sbb
push
xchg
in
test
xchg
xchg
pop
andb
fiadds
mov
in
std
and
adc
adc
icebp
and
rclb
jns
inc
pop
inc
cwtl
xchg
in
mov
aad
ss
gs
cmp
stos
movsl
push
ljmp
jl
clc
mov
xor
or
push
fsubrs
in
mov
mov
or
lret
xchg
jmp
faddp
mov
mov
jl
inc
pop
icebp
in
jnp
ss
in
xor
ja
push
movsb
lods
pop
call
shl
xchg
lods
dec
and
dec
arpl
cld
push
push
pop
sub
out
outsl
out
push
mov
popf
std
shl
pop
out
fidivs
outsb
jp
ljmp
add
repz
enter
pop
into
imul
mov
shl
popa
xor
pop
iret
mov
fucomip
dec
push
add
pop
sarb
test
add
cmpsl
ret
jb
pop
ss
js
cltd
je
add
shll
dec
popa
repnz
inc
mov
and
loop
in
int3
test
hlt
test
sub
popa
push
icebp
push
out
add
outsl
fucom
and
loop
xchg
cmp
cwtl
push
fisubs
lcall
pop
inc
js
ss
cmp
cmp
xchg
ljmp
push
mov
sub
pop
hlt
cmp
pop
inc
iret
mov
and
ja
sarl
dec
jg
sti
in
cs
movsb
outsl
add
or
dec
jno
ret
jb
inc
inc
shlb
push
mov
out
sub
xor
int
jp
in
jo
xchg
scas
push
into
xchg
sub
jecxz
clc
negb
jmp
out
into
mov
cmpsb
aam
lock
add
mov
xchg
dec
loop
dec
outsb
not
out
in
jno
jo
pop
lods
jl
lods
cmp
dec
out
push
mov
xlat
cmpsb
ss
mov
pop
hlt
aad
or
fistps
lret
or
jmp
movb
fsub
in
fistl
je,pn
push
mov
inc
aas
stos
not
inc
hlt
push
aas
sub
das
or
gs
pop
pop
loope
pop
push
and
fldl
push
xor
jo
mov
insl
nop
and
and
cmc
icebp
clc
push
lds
test
enter
mov
lods
add
data16
xchg
xchg
adc
xchg
pop
loop
xor
loope
mov
xlat
scas
sbb
mov
sti
je
and
insl
test
rorl
push
mov
or
fnstsw
sub
lret
test
lret
add
add
ljmp
std
sub
in
jle
adc
hlt
sub
stos
loopne
stc
jge
les
test
js
xorl
jb
popa
push
test
jns,pn
cmp
mov
dec
aad
mov
movsl
dec
ret
or
outsb
fcoms
mov
push
mov
arpl
outsl
stos
mov
scas
add
sub
and
push
and
das
popf
adc
stc
sbbb
mov
cmp
pop
jae
test
sbb
std
rcrl
loop
adc
es
imul
addr16
inc
ret
sub
sbb
sub
mov
sub
mov
rorl
ret
cld
push
mov
data16
cmp
and
add
popa
jmp
sbb
sbb
out
loope
fsubrl
sub
sbb
mov
incb
mov
push
jnp
inc
and
sbb
iret
ret
inc
mov
xchg
add
gs
aad
leave
mov
xor
dec
scas
enter
inc
int
mov
mov
and
cmp
cld
enter
push
sbb
lods
jp
xlat
cltd
and
pop
lods
sub
push
repz
jno
dec
jg
cmp
test
dec
addr16
fistl
pop
aaa
imul
out
inc
iret
aad
push
in
pop
test
lahf
daa
or
das
testl
mov
push
popf
rcrb
test
jl
adc
add
ret
and
or
cmp
sbbl
outsl
aaa
cmp
and
xor
jp
not
push
adc
shrb
jle
or
inc
mov
cmp
sub
ret
mov
int
movsb
xor
fidivrs
mov
jl
movsb
outsl
cld
movsl
mov
cltd
daa
sahf
jecxz
pop
inc
std
fcoms
mov
pop
add
cmp
and
sbb
push
xor
mov
xchg
mov
in
xchg
mov
getsec
push
sbb
mov
mov
mov
call
lock
jb
lcall
dec
or
xchg
push
inc
dec
aam
sbb
inc
pushf
mov
xchg
insl
and
sti
popf
jns
and
mov
add
scas
sbb
rorb
jle
jo
push
push
ds
jns
cmc
xchg
sti
pop
add
jg
loop
lock
mov
imul
adc
rcl
xor
test
bound
adc
push
jno
or
test
sbb
mov
pop
and
xchg
clc
test
fcomps
shrb
mov
rcl
mov
jmp
mov
xchg
int
scas
xchg
cmpl
pop
jge
das
lea
fwait
mov
pop
or
or
xchg
inc
je
sub
cmp
adcb
push
outsl
mov
sub
pushf
es
leave
dec
push
xchg
in
fcoml
cmpsb
dec
lahf
or
mov
mov
dec
or
fadds
outsl
sub
xchg
xchg
movsb
lds
outsb
pop
sbbl
subl
add
xchg
push
adc
jb
enter
mov
mov
inc
mov
mov
in
jg
add
aas
mov
jmp
cmp
add
cld
sub
cli
imul
aas
push
add
jbe
lods
dec
xor
push
jne
aam
push
movsb
jbe
mov
xchg
pop
ret
lcall
jmp
lock
call
jnp
mov
aaa
inc
outsl
push
call
dec
cmpsl
inc
inc
outsl
mov
sbb
or
push
sub
das
loop
lcall
add
sti
nop
mov
inc
push
fwait
adc
push
jecxz
addl
ja
inc
icebp
xor
dec
mov
or
pop
les
les
out
std
cmp
cli
popf
call
inc
jne
hlt
addl
daa
gs
dec
mov
xchg
fidivrs
stos
mull
arpl
mov
mov
mov
popf
dec
or
jae
insl
lcall
sti
test
sbb
mov
dec
movl
push
sbb
jg
in
sbb
jne
dec
cmpsb
cmc
and
push
sub
push
inc
call
jecxz
adc
into
je
test
xchg
xor
les
rcrb
fistpl
ss
dec
inc
negb
sub
dec
mov
push
mov
mov
sub
in
adc
cs
fdivr
outsb
setp
dec
push
mov
xchg
xor
stos
xchg
adc
aas
nop
sub
xchg
repz
in
inc
inc
adc
jmp
jg
mov
jo
dec
xor
popa
cmp
push
mov
loope
mov
jne
pop
arpl
cmc
push
mov
dec
jb
and
adc
sbb
xor
push
pop
pop
bound
nop
mov
popa
or
and
push
pop
lret
dec
dec
mov
std
sbb
push
push
xchg
xchg
mov
imul
add
jge
flds
loopne
push
jg
daa
dec
rcrb
ficoml
xchg
sbb
mov
and
mov
mov
fmul
in
lret
loop
add
loopne
mov
add
jo
push
addr16
lds
push
das
mov
cs
fimull
loop
in
cmp
rorl
xchg
adcb
sub
sbb
pop
pusha
jg
or
adc
inc
enter
jle
dec
aam
mov
sub
stos
movsb
pop
in
cltd
fiadds
mov
subb
loop
adc
fcomi
jbe
jl
negb
dec
orl
dec
jp
jmp
into
movsb
cmpsl
fucomi
fildll
fstl
insl
mov
sti
xchg
dec
pop
cmc
in
faddl
je
add
pusha
jmp
jl
jne
cli
iret
jge
fistps
fdivrl
push
push
test
cltd
adc
inc
mov
clts
test
xlat
cmp
test
shlb
popf
loopne
dec
jae
mov
jns
aas
fwait
push
pop
mov
and
sub
loop
or
mov
xchg
mov
cld
das
and
push
in
cs
loopne
outsl
das
shrl
das
mov
loop
sti
into
shrb
popa
leave
pop
push
pop
test
add
repz
sbb
cmc
aas
add
and
or
sbb
stc
in
loopne
dec
out
lcall
xchg
enter
out
push
dec
test
cmpsb
add
xchg
mov
or
fbld
lret
inc
je
out
fs
push
xchg
loope
addb
test
clc
mov
insb
xchg
fldl
inc
mov
cmpsl
test
jp
sbbb
cmp
in
daa
mov
js
test
add
xchg
xchg
cwtl
mov
adc
mov
stos
test
add
xchg
cltd
in
sbb
iret
mov
and
pop
pop
sbb
dec
jb
mov
add
sti
mov
pop
pop
mov
pop
rorb
inc
and
mov
sub
stc
mov
aam
adc
imul
sub
adc
int
cs
test
or
fmul
movsl
jno
sub
das
xchg
push
subl
add
mov
fistps
in
pop
ror
pop
cmp
add
repnz
xor
lcall
sub
cs
std
fsubrp
push
incb
iret
fcomps
xchg
cmpsb
pop
das
pop
pusha
mov
mov
push
cmp
adc
adc
stos
jne
cmpsb
mov
nop
decb
jle
adc
popf
cmp
fiadds
cltd
pop
subl
inc
inc
outsl
into
ffreep
jg
clc
pop
xchg
jge
or
ret
lock
jo
lret
inc
sahf
jg
cld
add
xchg
cmp
sub
fwait
shl
call
and
and
pop
test
data16
cmp
or
xor
push
mov
cmpsl
pop
ja
lahf
sub
pusha
test
push
jno
ss
jl
jg
mov
inc
mov
leave
and
or
dec
test
push
daa
aad
inc
sub
mov
daa
xor
pop
cmpsl
leave
sub
loop
sti
xor
in
rol
fisubl
and
xor
stc
je
or
les
dec
mov
data16
mov
sbb
add
cmp
rol
xchg
mov
ret
xor
data16
add
inc
fnstsw
xor
cmp
mov
jp
fisttpll
outsb
loope
xchg
mov
je
cs
test
int
sbb
testl
out
xor
jbe
inc
popa
lods
push
lahf
insb
pop
jnp
dec
fs
lahf
stc
stc
jae
inc
push
imul
js
idivb
lahf
pop
lods
mov
subb
mov
mov
jmp
mov
xchg
je
bound
and
adc
inc
imul
lahf
xchg
xchg
sub
ds
cmpsl
xor
sbb
addb
clc
jb
insl
add
xor
or
cmp
cmp
mov
loope
mov
leave
and
rorl
es
pop
inc
pop
add
aaa
call
into
or
cmpsl
les
fwait
std
daa
mov
mov
inc
in
into
adc
jmp
adc
pop
inc
call
mov
test
enter
popa
rcrb
fldt
pop
shll
rcll
inc
or
mov
adc
sub
add
in
loopne
fwait
push
repz
movsb
inc
push
mov
loopne
outsb
sbb
jnp
das
xor
lret
aaa
iret
push
xchg
cmp
push
outsl
add
scas
inc
test
pop
xchg
shrl
mov
cwtl
pop
fs
in
push
stc
pop
lock
or
adc
cwtl
into
iret
mov
cs
lcall
sub
sbb
in
mov
push
inc
pop
add
mov
mov
push
inc
adc
or
insb
in
lock
cmc
in
repnz
xlat
sub
cltd
pop
adc
dec
xor
sbb
mov
or
inc
dec
sahf
test
sbb
fmul
or
notb
cmp
mov
mov
shr
out
popa
mov
inc
in
push
addr16
cmpb
insb
cmpsl
pop
push
es
jno
add
push
mov
icebp
pop
insb
xchg
and
lcall
ds
xchg
mov
cmp
mov
push
ret
clc
in
lea
test
test
pop
leave
sbb
push
push
add
fldt
adc
or
fldl
stc
lret
out
in
jno
add
in
int3
scas
lock
lock
mov
cs
cwtl
sbbb
or
sbb
pusha
and
mov
pusha
in
and
mov
push
adc
les
jnp
inc
iret
sahf
dec
push
mov
fisubrs
dec
retw
cmp
cmp
mov
daa
jbe
and
inc
push
sub
pop
push
ret
pop
and
pop
mov
data16
daa
and
and
loope
xchg
insb
cmc
cmp
clc
es
inc
xchg
add
xchg
roll
mov
enter
xor
xchg
xor
jne
jge
mov
xchg
jmp
xchg
sahf
cmpsb
adc
lcall
aas
sub
aaa
aas
out
fsubrl
pushf
stos
jp
daa
jg
pusha
mov
sub
sti
add
fildll
fidivs
xchg
sub
in
dec
fcmovne
inc
adcl
jns,pn
test
negl
pop
mov
or
push
mov
or
cmp
rol
mov
sbb
jmp
and
adc
jo
dec
repnz
icebp
incb
insl
movsb
test
push
sub
cmp
clc
repnz
add
mov
and
aad
aam
lods
pop
jp
sbb
inc
rol
pop
pop
inc
mov
sub
push
inc
out
xor
popa
inc
add
sub
lock
push
cmp
call
mov
dec
push
daa
mov
neg
imul
jmp
bound
ss
xchg
add
sub
mov
pop
fldenv
push
popf
mov
sahf
insl
test
imul
jae
sub
mov
sahf
int3
or
inc
sbb
testl
add
xchg
loope
jnp
xor
mov
push
fcomps
push
pop
xor
lret
test
xor
std
mov
aaa
stc
push
push
pop
lcall
outsl
sub
ret
xchg
mov
dec
sti
mov
mov
dec
fsubs
mov
and
lea
in
mov
insb
mulb
sbb
ret
push
cmp
lock
xchg
int3
push
push
xchg
out
fs
sub
push
rorl
dec
lds
cmpsb
dec
or
mov
inc
push
cs
mov
iret
push
imul
es
dec
cltd
jmp
mov
jo
push
cmp
outsl
and
outsb
add
stos
cltd
je
lret
notb
pop
aam
mov
adc
push
out
adc
rorl
xor
insb
mov
int
lds
cmp
mov
add
fdivs
push
xchg
inc
iret
jg
loopne
dec
mov
ss
fdivrl
mov
in
xchg
pop
sub
enter
jnp
mov
ja
pusha
or
push
dec
shrb
testb
scas
dec
adc
push
sub
adc
lds
lret
sbb
clc
addr16
out
fcomps
lods
sarb
cmp
into
fs
inc
or
mov
mov
into
and
into
mov
test
mov
fisttpll
gs
lret
xor
jge
pop
repz
cld
and
xchg
cmp
les
add
sub
mov
inc
addr16
test
and
fstp
rol
shlb
xor
jo
or
push
xchg
sub
mov
shll
jecxz
adc
mov
aad
or
cmp
and
iret
add
in
fwait
mov
iret
jg
jl
push
das
insl
orl
mov
sarb
mov
xlat
cmp
test
xor
lods
cmp
ss
pop
xlat
dec
shr
sbb
sar
in
out
push
dec
aaa
fucom
nop
cmpsb
fisubs
jbe
jno
pop
push
or
jns
sub
pop
push
mov
jae
xlat
out
imul
jle
lea
pop
add
fwait
pop
hlt
and
mov
inc
adc
cltd
loop
shlb
addr16
rcr
fldcw
add
pop
sbb
stos
pusha
pop
stc
jb
test
ja
push
mov
movsb
jbe
dec
push
fiadds
cmpl
xor
dec
xchg
dec
ds
or
orl
pusha
dec
outsb
mov
lret
pop
push
test
imul
xchg
sub
xor
repz
inc
lods
xor
imul
xor
stos
icebp
aad
pop
mov
mov
sub
ret
inc
sti
or
dec
jne
ds
fstpt
dec
xchg
jg
test
pop
push
cmc
fisubl
dec
cmp
mov
mov
push
push
jmp
int
enter
add
lock
push
out
popf
mov
mov
lea
dec
or
jo
jmp
cltd
mov
mov
or
cmc
addl
pop
lods
mov
fucomp
pop
cmp
cmp
mov
and
pop
sub
lret
inc
push
scas
out
sbb
cmp
push
mov
push
fs
mov
pop
out
fsubl
movsl
mov
jno
clc
adc
in
adc
sub
xchg
flds
loope
xor
add
push
dec
sub
js
xorl
fmull
fs
adc
xchg
test
bound
pop
cmpl
std
cmpsl
mov
cmp
mov
push
dec
jns
or
rcrb
or
sub
mov
add
inc
shll
sub
mov
fidivrl
xor
into
daa
fs
lahf
mov
add
cwtl
ja
les
push
or
sbb
scas
pop
push
in
iret
adc
mov
jno
mov
pop
notl
rorl
mov
push
sub
sub
faddp
xlat
xchg
imul
shll
in
sub
sarl
ja
xchg
xor
ret
addr16
sbb
add
inc
xchg
cmp
ret
arpl
arpl
lahf
mov
jecxz
cmp
test
xrelease
jmp
jge
add
dec
push
add
ljmp
outsl
or
nop
push
sbb
fldt
testb
push
lret
les
pusha
xchg
mov
lahf
orb
clc
sub
ret
out
bound
fisttpl
xlat
mov
sbb
mov
into
xchg
or
out
dec
push
inc
mov
push
push
pop
aas
and
incb
add
rcrl
das
pop
lods
cmpsb
jnp
mov
pop
sbb
lcall
movsb
lea
cvtps2pi
pop
frstor
mov
arpl
sahf
ret
pusha
lcall
sti
mov
lret
mov
dec
pop
jns
jl
test
pop
hlt
bound
mov
inc
int
and
out
push
sarb
pop
fisttpl
mov
out
xchg
ds
out
or
dec
mov
or
pop
test
pop
fildl
ret
jo
loopne
mov
push
sti
subl
imul
mov
mov
cmpsl
push
aaa
leave
sub
sti
and
in
cli
adc
cltd
push
cmp
and
pop
push
ja
das
mov
pushf
or
mov
dec
add
jl
fisubrl
gs
sub
or
push
xchg
je
adc
dec
and
xor
lock
cwtl
jnp
pushf
dec
cwtl
aaa
sub
pushl
mov
jb
cmp
dec
pop
and
or
mov
jecxz
pop
negb
icebp
or
dec
idiv
int3
dec
maskmovq
negl
push
jp
bound
xor
repz
sub
subb
inc
xor
adc
sub
inc
pop
imul
dec
into
sarl
or
mov
mov
xchg
popf
jl
dec
xchg
sbb
stc
js
ficompl
jg
idivb
jbe
xorb
test
dec
pop
push
xor
or
mov
iret
cs
enter
es
les
cmp
xchg
sbb
ret
fwait
inc
cmp
hlt
aaa
xchg
dec
mov
out
cld
or
scas
into
cld
les
std
jo
pop
dec
fsubrl
shll
pop
xor
sahf
mov
movsl
cld
or
popf
and
push
aaa
lahf
mov
insb
lcall
mov
add
insb
ss
or
mul
test
mov
xchg
call
pop
stos
pop
mov
loope
bound
call
shlb
mov
cmc
cmp
in
mov
test
leave
or
lods
push
stc
jb
popf
push
daa
push
mov
adc
fwait
clc
out
pop
and
daa
or
out
js
xor
inc
repz
mov
push
insb
jne
scas
mov
in
shrb
mov
leave
jnp
or
scas
notl
add
and
dec
fwait
imul
pushf
arpl
sbb
xchg
or
stos
mov
xchg
data16
inc
ja
cmp
pop
sbb
lea
enter
popa
test
sub
pop
js
or
cmp
lods
repz
pop
cmp
rolb
loope
fs
mov
mov
and
adc
std
aaa
jg
jl
roll
pop
mov
fwait
mov
jnp
out
xchg
repnz
adc
pop
sbbl
sub
insb
imul
insb
or
fisttps
aam
mov
cmp
jmp
push
xchg
mov
mov
or
call
adc
jae
popf
or
ss
xor
and
pusha
jno
mov
outsb
pusha
adc
pop
lcall
sub
jnp
push
out
sbb
sbb
cmp
scas
imul
add
iret
cmc
adc
js
mov
and
and
push
out
sbbb
cmp
enter
in
lock
sub
adcb
cmc
shlb
call
mov
ljmp
pop
fwait
inc
adc
mov
cmp
sub
sbb
mov
xchg
dec
push
cmc
cs
fsubrl
stc
and
and
mov
cmc
lret
push
xchg
int3
call
mov
pop
adc
push
lock
aas
dec
inc
or
cmp
inc
sub
push
pop
pop
shlb
add
mov
nop
mov
leave
sub
pop
ret
es
or
hlt
push
cmp
pop
imul
xor
dec
push
je
mov
inc
jnp
pop
fsubrl
loop
ret
adc
scas
shll
push
dec
xchg
mov
in
test
fsubs
int
cwtl
out
in
sub
ret
push
fbld
inc
jne
push
int3
cld
cmp
adc
add
js
sbb
psrlq
dec
lret
in
clc
mov
repnz
dec
fisttps
into
mov
push
sbb
push
flds
push
push
in
sub
ja
sti
cmp
jge
fwait
je
mov
loop
sbb
add
adc
lret
sahf
adc
jne
xchg
lea
int
cmp
add
divl
and
mov
xchg
push
xor
push
clc
enter
xor
jl
sub
cmp
cmc
mov
xchg
pusha
or
jmp
mov
pop
jecxz
jae
inc
es
mov
xor
cmpsl
fwait
loopne
jle
and
or
loopne
mov
mov
xchg
mov
sbb
or
into
rol
jno
repnz
in
popf
sub
sbb
inc
ljmp
in
fimuls
adc
xchg
sub
xor
mov
gs
adc
sub
ffree
rorl
adc
jbe
pop
cs
or
stos
movsb
push
sub
jmp
lahf
add
out
mov
adc
add
add
and
adc
pusha
pop
xor
push
popa
push
mov
dec
lock
adc
adc
sbb
cmpb
nop
pop
cwtl
int3
sub
aam
jg
jecxz
clc
inc
movl
jecxz
cmc
scas
arpl
mov
dec
pop
outsb
mov
scas
out
mov
fbld
push
gs
mov
mov
lcall
fwait
jae
rcrl
aad
fistpl
fyl2x
lock
jae
push
cwtl
sbb
xor
das
imul
push
outsl
lret
lea
sub
out
call
lods
data16
and
mov
pop
sub
iret
idiv
and
sub
outsb
xor
lcall
scas
sbb
add
mov
jg
incb
and
xlat
sbb
sti
insb
bound
mov
aaa
pop
leave
dec
cmc
es
std
lods
sbb
scas
mov
pop
add
add
push
jmp
mov
lock
xor
shrb
fisubrs
jg
add
mov
or
mov
mov
sar
pop
mov
sub
lods
pop
je
cmpsl
dec
jo
inc
mulb
cmp
fnstcw
and
stc
mulb
in
jmp
sub
sub
mov
dec
fsubs
in
sub
mov
repz
sbb
addr16
pop
les
xchg
lret
cmc
push
pop
adc
cmp
in
mov
fprem
std
jmp
lea
call
cwtl
dec
rol
test
push
ja
testb
inc
repz
fidivl
cs
pop
daa
imul
outsb
stos
inc
mov
aam
jcxz
int
dec
xchg
loop
scas
lds
fldl
jo
fadds
rcll
adc
push
fcoml
into
test
aas
pop
xchg
jno
or
out
dec
fsubrs
lcall
xchg
xor
mov
mov
sbb
jmp
push
stos
pusha
mov
xor
push
push
mov
xchg
mov
es
in
pop
pop
push
jb
mov
add
sahf
std
gs
jle
andb
push
pop
pusha
fisttpll
mov
js
outsb
push
adc
test
cli
xchg
push
js
fidivl
push
cs
lds
and
pop
scas
sub
es
mov
ror
xor
hlt
pop
repz
ds
js
lods
ss
in
stos
les
aad
dec
sbb
xchg
xor
jb
adc
dec
mov
ret
and
mov
mov
jle
leave
fucom
fstpl
jae
movsl
std
mov
sub
mov
add
inc
sbbl
sarb
push
inc
mov
in
in
inc
outsl
in
je
pop
adcl
scas
mov
fnstenv
mov
cld
jo
sbb
in
pop
jns
or
mov
or
cs
mov
shll
adc
sub
lods
cmp
or
in
int
mov
mov
add
movsl
clc
jnp
or
lods
ljmp
pushf
xchg
sbb
inc
mov
push
jns
addr16
jmp
add
push
insl
jne
nop
lods
lahf
inc
sbb
stos
loopne
mov
in
push
jecxz
test
das
mov
push
aad
xchg
xchg
ret
xchg
dec
mov
dec
dec
rorb
mov
xor
shr
imul
dec
or
test
fcomps
add
jle
rcr
inc
loopne
subl
push
in
jnp
rol
or
mov
ror
addr16
push
jmp
jl
std
mov
mov
fwait
lret
fnclex
std
xchg
sub
mov
mov
pop
pop
add
push
and
mov
scas
aas
pusha
jg
das
push
pop
mov
lods
test
mov
xchg
sub
mov
gs
aas
mov
ss
dec
popa
and
mov
icebp
pop
xor
popf
push
cltd
dec
sbb
and
cltd
push
mov
scas
lods
cmpsl
lcall
adc
and
jp
pop
or
aas
push
sub
movsb
and
fneni(8087
adc
cmp
mov
lock
arpl
push
movsl
insl
stc
cltd
test
cmpsl
push
mov
lret
and
dec
dec
mov
or
mov
mov
gs
xchg
jecxz
cmp
adc
push
data16
xchg
xchg
pushf
or
inc
xchg
push
xchg
pop
push
shlb
cmpsb
adc
sbb
cmpsb
fs
mov
mov
jb
xor
aas
xor
mov
test
push
stos
pushf
repz
adc
rorb
fstpt
xchg
jbe
xchg
leave
rcll
mov
inc
sti
mov
sub
sub
ret
xchg
mov
push
xchg
pop
in
repnz
add
int3
mov
pop
sbb
shll
ja
mov
jp
jl
out
inc
ljmp
outsb
lock
aam
adcb
daa
js
daa
pop
sub
sarl
xchg
insl
cld
mov
xchg
out
inc
sbb
notb
inc
cmp
add
test
shrl
js
xor
cld
test
scas
sbb
addr16
push
idivl
sub
addb
push
or
into
sub
insb
inc
jge
mov
push
js
popf
push
int3
incl
aas
push
jnp
sti
cmpl
xor
or
mov
das
movsl
flds
xlat
arpl
lea
xchg
cmp
inc
lea
mov
xchg
scas
cmp
ds
cmc
adc
in
or
js
clc
jae
ljmp
jo
xchg
mov
nop
pop
aaa
or
int3
dec
push
cmp
xor
xchg
cmp
ficomps
add
xchg
lret
ret
pop
add
in
add
icebp
out
xor
sub
mov
cmp
ret
mov
lahf
mov
jnp
dec
loop
jmp
outsl
cmp
inc
jb
mov
adc
mov
push
xchg
int3
fcmovb
cmp
fs
or
hlt
cltd
cmc
sbb
adc
icebp
or
cmp
or
or
fcmovnb
int3
mov
jae
jbe
std
add
stc
rorb
sub
ss
in
js
inc
and
aad
xchg
xchg
xor
add
cmc
mov
shlb
test
xchg
js
push
ds
dec
jae
sbb
aad
xor
in
adc
fwait
push
cmp
mov
ret
rcrl
pop
daa
clc
repz
popa
iret
cmp
pop
sarb
fcomip
aas
fstp
mov
jbe
inc
lret
sarl
inc
xor
lods
loope
jecxz
inc
movsl
xlat
or
iret
xchg
dec
jbe
and
fdivrs
outsb
shr
add
ss
dec
dec
loop
or
dec
or
add
clc
pop
cli
je
mov
imul
pop
aaa
or
mov
out
xchg
inc
mov
imulb
fbld
out
dec
mov
push
adc
dec
movsb
sahf
or
mov
jge,pn
cmpsb
and
and
je
cmp
or
sbb
stos
jge
mov
push
adc
cmpsb
jmp
sbb
push
mov
mov
orl
les
repz
cmp
xor
lret
ret
xchg
in
pop
scas
xor
lahf
addr16
mov
outsb
lahf
ret
repz
das
iret
cld
xchg
test
ret
das
dec
push
xor
clc
adc
mov
push
imul
lock
mov
mov
subb
roll
xchg
aas
adc
movsl
aas
ljmp
push
push
inc
jl
gs
xchg
enter
jle
add
inc
hlt
hlt
out
dec
adc
outsl
fildl
filds
mov
mov
pushf
jmp
iret
das
lock
xchg
pop
xor
mov
iret
scas
xchg
aam
aaa
push
outsb
and
es
fisubrs
addl
sub
sbb
aad
test
testl
inc
ljmp
loope
lret
xor
int3
lea
es
xor
xchg
movsl
sbbl
repz
loope
and
push
fbld
cmpsl
ljmp
cmp
jo
mov
daa
fdivrs
pop
aas
lods
into
push
gs
in
xchg
xchg
repz
mov
shll
pop
xchg
and
aad
pop
cmp
clc
lock
adc
sbb
and
cmp
mov
loopne
sbb
out
popa
mov
inc
inc
jb
aas
movsl
pop
pop
hlt
vorps
std
lods
insb
test
mov
push
xor
int
push
inc
sub
lcall
iret
nop
popa
dec
push
inc
pushf
mov
cmp
mov
or
test
arpl
sub
fidivs
xor
cmp
bound
mov
sub
lret
rcrl
dec
xchg
add
daa
std
mov
sub
push
fdivrs
inc
ljmp
imul
fdivrl
inc
dec
xchg
or
mov
add
xlat
scas
test
fisubs
fcomip
xchg
leave
adc
enter
faddl
push
push
sub
mov
popf
cmp
push
rorb
int
push
fstpl
imul
jae,pn
pushf
imul
fisttpl
dec
add
inc
mov
xchg
xchg
pop
aad
push
mov
ja
shrl
mov
and
inc
adc
out
scas
sub
std
push
in
cmp
rcrl
add
or
dec
sub
sbb
insl
mov
jg
stos
jns
pusha
mov
mov
cmc
sub
mov
jmp
adc
sbb
dec
imul
jb
repz
call
dec
push
and
mov
lods
add
js
dec
arpl
xor
mov
jne
cmp
js
int
pop
mov
gs
gs
jmp
jge
mov
fwait
mov
pavgb
stos
aaa
cmp
lds
and
lahf
add
insb
mov
shrl
mov
clc
sarl
cmp
jecxz
pop
ds
jge
sub
in
push
and
pop
push
call
fcom
xor
pop
push
nop
pop
into
push
xchg
dec
leave
gs
cmp
push
arpl
xchg
mov
sub
popa
ss
inc
enter
inc
cmp
cmp
cmp
icebp
test
idivl
sti
xchg
or
push
push
pop
add
pop
dec
adc
rcr
out
jno
jns
sbb
mov
test
clc
mulb
stc
cmp
lret
adc
pop
je
mov
and
ljmp
mov
ss
sbb
xchg
inc
loope
lea
xchg
jge
pop
arpl
mov
fistpll
stos
xchg
jbe
cmpsb
pop
mov
movsl
movsb
loope
fcoms
push
bound
lock
mov
jl
mov
les
mov
pop
pop
sbb
ret
loop
cmp
ss
fildll
pop
adc
xorb
mov
pop
adc
fstps
shll
jmp
xorl
arpl
orl
mov
movsl
pop
sub
ret
inc
dec
jnp
add
push
dec
push
popl
dec
sub
add
pusha
lcall
or
imul
push
mov
and
and
pushf
and
push
into
cmpsl
packssdw
add
mov
cmp
lock
test
aam
lahf
cmp
push
mov
movsb
inc
mov
scas
and
out
clc
adc
or
xlat
rolb
in
sahf
insl
or
push
adcb
ds
insb
jle
mov
les
add
pop
fs
pmaxsw
pusha
dec
lods
add
leave
fwait
and
dec
xchg
or
hlt
sbb
sub
inc
fcoms
stos
rcrb
pop
ljmp
hlt
pmaxsw
pop
mov
inc
pop
rcl
mov
test
fisttpl
or
and
pop
cltd
push
fmuls
stc
shr
stc
repz
push
sbb
gs
repnz
lock
or
ret
jg
movsl
mov
enter
cmp
testl
or
adc
cltd
dec
mov
divb
out
sbb
in
loopne
scas
xchg
test
in
pop
adc
sub
mov
imul
test
stc
lahf
jge
jmp
ret
xchg
inc
push
mov
xchg
aad
pusha
iret
test
mov
pop
push
arpl
or
mov
enter
cmpsl
and
mov
insl
dec
cli
ret
adcb
cmp
inc
fisubl
imul
movl
aaa
cmp
sub
iret
mov
sub
pop
sbb
xor
mov
fdiv
sbb
negb
ret
and
lds
movsl
xor
das
bound
add
dec
out
aam
dec
cmp
cmp
cmp
push
cmc
or
xchg
icebp
xchg
xor
pop
int
push
in
cld
inc
bswap
xchg
xchg
inc
xchg
adc
push
sub
push
cmc
add
cltd
aad
pop
mov
lds
pop
adc
cwtl
fcoms
rcrl
lea
adc
sahf
pop
and
test
aas
cwtl
push
pop
jae
test
shll
in
mov
std
inc
adc
fstl
xchg
out
in
repz
xor
sub
mov
imul
fcoms
daa
outsb
clc
pop
adc
dec
sbb
dec
jo
movsl
cmp
loope
sub
pop
stos
std
fpatan
inc
hlt
add
rolb
inc
into
test
lock
mov
mov
test
pop
ret
repz
and
sti
mov
es
add
jns
and
and
cmp
into
inc
lcall
movsl
hlt
fsubr
outsb
add
add
out
mov
pop
fstps
int
cld
cltd
sub
cmp
int3
or
cltd
mov
divl
xor
scas
imul
and
lret
mov
push
sti
cmpsb
xchg
mov
xor
outsb
icebp
dec
push
addb
mov
aaa
mov
test
pop
pop
scas
dec
repnz
pop
mov
xor
inc
add
dec
ficompl
out
out
adc
sbb
test
pushl
jo
push
scas
adcb
lahf
jae
cltd
push
mov
es
xor
or
mov
out
add
inc
js
or
push
add
lret
ficomps
shrb
sbb
inc
lahf
jo
fwait
sbbb
xchg
xor
xchg
push
cmp
subl
mov
out
jno
jo
ljmp
adcl
add
xchg
daa
xlat
cltd
adc
mov
mov
gs
jmp
adc
adc
cmp
into
dec
push
jl
jns
mov
push
cwtl
inc
dec
in
lahf
sub
pop
sub
sbb
mov
xor
sbb
jecxz
mov
enter
jle
cwtl
mov
adc
jp
test
loope
jb
push
clc
roll
inc
sub
and
clc
les
pusha
push
inc
pop
push
mov
mov
adc
mov
and
sbb
ja
pop
aad
sbb
push
test
mov
pop
shlb
add
in
test
mov
test
sbb
arpl
gs
xor
pop
and
add
into
clc
jle
or
cmp
loope
jge
adc
iret
divb
and
clc
xor
cmp
jne
xor
iret
arpl
test
shrl
stos
fnstsw
xor
cmc
cwtl
push
mulb
out
pusha
fisubrs
imul
adc
adc
addb
adc
inc
leave
mov
sbb
pop
sbb
add
mov
jmp
fmuls
fucom
ret
dec
jle
mov
ss
popa
loopne
xlat
jb
daa
or
mov
fisttpll
lret
arpl
cli
leave
ficompl
iret
mov
mov
and
adc
or
dec
add
and
arpl
push
dec
rcrb
mov
or
stc
sub
loope
into
jecxz
movsl
inc
movsb
mov
int
mov
xor
inc
gs
mov
mov
shrb
jecxz
pop
rorb
addr16
movsb
mov
arpl
cli
add
cli
nop
sbb
xor
rolb
sar
repnz
popf
sahf
rcr
ss
cli
addr16
xchg
push
inc
pop
pusha
pop
cmp
enter
outsb
jbe
repnz
cmp
jo
and
and
push
into
js
bnd
or
leave
repnz
add
mov
sub
add
out
punpcklbw
mov
push
pushf
dec
jge
nop
cltd
cmp
sbb
pop
dec
fucomip
outsb
xlat
filds
out
pop
push
imul
pop
in
lret
xor
cmpl
dec
jb
in
cs
gs
pop
xchg
cmp
xchg
cmp
xchg
cmpsb
outsb
jb
sub
pop
insb
sbb
fisubs
mov
sub
out
adc
jl
dec
dec
pop
aam
pop
cmpsb
dec
add
jecxz
push
push
nop
scas
test
cmpsb
jmp
xor
pop
inc
into
adc
std
fimull
mov
mov
add
cwtl
adc
xchg
fsqrt
fbstp
jae
jb
cmpsb
in
jnp
arpl
cmp
lcall
pop
in
in
pushf
out
mov
stos
add
call
or
and
adc
imul
aad
rorl
leave
push
or
nop
lods
add
testl
js
mov
out
mov
fstl
push
or
adc
out
pop
push
xchg
sbb
jnp
mov
sti
sub
les
fisubrs
cmp
pop
or
or
or
nop
push
out
dec
mov
les
xor
incb
and
jno
fcoml
lods
mov
xchg
lds
mov
rolb
xchg
sub
movsb
xchg
dec
adc
sbb
fidivl
dec
jle
popa
in
inc
cmpsb
mov
sbb
mov
imul
mov
mov
xchg
inc
sbb
adc
call
repz
mov
addr16
test
hlt
test
adc
je
dec
pop
jp
rcr
dec
mov
cmpsb
sti
sub
sarb
jo
push
mov
jmp
and
pop
jg
and
pop
mov
inc
sti
outsl
lods
bnd
jp
pop
or
scas
mov
mov
sub
mov
push
push
pop
lret
pop
add
jmp
in
lret
sub
scas
pop
out
nop
xchg
add
imulb
add
movsl
lods
or
mov
mov
push
outsb
pop
clc
aad
clc
testl
xchg
fsubp
add
adc
fldl
ja
pushf
ljmp
loope
ss
repz
pop
stos
sti
push
cmpb
ret
pop
sub
inc
scas
dec
popf
and
aaa
mov
push
icebp
ret
loop
adc
inc
test
cmpsb
inc
lahf
shlb
in
jg
pop
out
dec
inc
into
xor
mov
mov
jnp
ja
mov
repz
cmpsl
lcall
mov
or
add
stos
outsb
les
push
rcll
scas
xlat
push
clc
adc
xchg
popf
or
push
push
fadds
inc
inc
inc
mov
jecxz
mov
cmc
rcl
mov
pop
jge
out
std
lods
call
outsl
ficoml
dec
loop
or
inc
sbb
bnd
fidivrl
sub
ret
aas
push
testb
loope
xchg
mov
sbb
mov
push
stc
out
pop
pushf
sub
div
scas
repnz
std
icebp
insb
pop
stos
mov
ret
movsb
sbb
or
xlat
cmp
pop
popf
gs
in
scas
xor
mov
sub
jge
movsl
fisttpl
adc
pop
je
shlb
test
decb
les
mov
xchg
sbbb
and
stos
mov
fbstp
xchg
adc
push
jnp
mov
daa
js
xchg
jl
test
iret
or
aam
push
and
mov
mov
repnz
fadd
pop
mov
sbb
push
popa
lods
cli
or
ljmp
mov
imul
xlat
cmp
js
sarb
inc
jp
lret
std
mov
mov
mov
or
push
lods
stos
mov
xchg
push
cltd
sub
push
mov
rcrl
fwait
sarl
out
test
out
xchg
out
sti
sub
test
test
and
mov
lods
data16
fs
pop
cwtl
test
mov
xor
dec
xchg
mov
jae
subl
mov
adc
popa
cltd
push
int
sub
jp
js
add
sub
aad
in
mov
cmp
jl
pushf
rol
push
stos
cmp
gs
mov
fbld
xor
jge
sbb
mov
jbe
stos
or
dec
sub
test
cwtl
outsl
add
cmp
mov
ss
jl
enter
cwtl
cmp
inc
shll
movsb
xchg
jb
mov
sbb
mov
mov
xchg
int
add
dec
xor
mov
andb
rclb
pop
aas
jns
jno
dec
jne
mov
pop
cmpsl
pusha
mov
lods
aas
aaa
lahf
jecxz
fldt
mov
movsb
pop
sbb
sarb
sbb
aam
pop
mov
add
mov
mov
sbb
test
mov
xor
xor
lcall
jl
movsb
jnp
hlt
das
and
adc
or
outsb
xor
fnstcw
pusha
fwait
stos
sbb
pusha
lds
jl
imul
pop
adc
loope
jp
xchg
popa
sarb
inc
shrl
into
fsubs
dec
inc
addr16
pushf
jl
pop
or
lahf
mov
iret
or
in
jl
fldl
addl
lret
jecxz
stos
sbb
mov
jg
mov
out
outsb
dec
js
xchg
into
pop
cs
mov
hlt
inc
mov
loope
inc
fabs
pop
and
daa
mov
push
je
jl
fdivrs
push
in
mov
jmp
mov
mov
cmpsb
rcll
mov
and
in
cmpsb
cmc
mov
outsl
daa
push
dec
push
bound
adc
or
add
push
push
pop
mov
push
push
inc
push
xor
and
and
test
jo
lods
call
adc
xchg
jmp
add
mov
dec
fidivrl
repz
mov
pusha
or
hlt
jle
mov
pop
or
stos
outsl
sub
cltd
dec
mov
punpckhdq
inc
mov
shll
gs
add
sbb
fwait
aaa
xchg
adc
add
add
push
cmp
sbb
jg
ljmp
imul
bound
mov
adc
in
int3
add
inc
pop
add
scas
jns
decb
jle
xor
ret
xchg
cmc
pop
jl
jae
xorb
lock
cmpsb
jbe
repz
mov
je
inc
outsw
inc
xchg
cmc
adc
hlt
pop
xor
enter
sbb
and
push
push
jle
mov
or
sbb
mov
int3
push
out
insl
jns
adcb
cwtl
pop
dec
sbb
pop
dec
cs
add
in
pop
or
fbld
mov
jb
ds
or
in
jmp
addr16
movsl
pop
pop
jae
pop
xor
xchg
xchg
pop
sbb
jecxz
jno
jae
stos
mov
shll
shlb
adcl
mov
in
or
and
lahf
dec
in
add
push
mov
sub
sbb
cmpsl
lret
lcall
ss
dec
andl
aam
push
add
arpl
or
push
jecxz
sarb
out
std
pop
jnp
ret
aaa
mov
in
mov
mov
xchg
in
aas
jp
pushf
mov
mov
inc
inc
cld
mov
nop
daa
scas
jbe
sbb
or
leave
jecxz
inc
ret
dec
xor
cmp
cmpsl
inc
test
mov
jae
hlt
daa
data16
lahf
xchg
mov
or
xlat
movsl
and
push
fstpl
and
xchg
orl
jg
and
lea
jnp
pop
push
fnstenv
fidivrs
movsb
inc
mov
icebp
int
subb
mov
pop
sbb
inc
addr16
adc
adc
fmull
xchg
repnz
adc
pop
out
sahf
xchg
cmpsl
mov
sbb
daa
inc
add
cld
mov
iret
mov
pusha
jbe
mov
or
xor
imul
scas
jne
cmpsl
sub
cltd
push
sub
fidivl
out
pushf
mov
mov
or
push
adc
mov
cwtl
and
push
or
ss
cmc
xchg
cmpsl
stos
scas
sbb
mov
or
add
and
aad
sbb
jno
mov
jno
jle
dec
stos
inc
and
jns
in
jne
rclb
or
mov
test
jle
loop
je
lods
dec
cmp
fimull
sub
sbb
and
dec
adc
imull
cmpsb
dec
std
lods
hlt
dec
sbb
int3
dec
or
xchg
fldcw
mov
sub
imul
nop
cli
test
xlat
sahf
or
bound
jecxz
into
pusha
ja
int3
xchg
or
ret
das
push
add
mov
mov
mov
loope
jo
test
jle
les
movsl
mov
es
daa
inc
add
lea
divb
cmp
aad
and
insl
stos
outsl
xchg
in
add
cwtl
cmp
je
stos
add
hlt
sti
mov
repz
inc
out
pop
hlt
lds
insb
das
in
add
dec
push
add
rclb
mov
loope
pusha
fdiv
push
add
dec
pop
jno
jp
cmpsl
movsb
mov
repnz
mov
jnp
fisttpl
outsl
jne
mov
test
jl
daa
sub
std
adc
xchg
mov
rcrb
test
lods
sub
cmp
fdivs
rcrb
hlt
loop
jp
repz
xchg
pop
or
in
xlat
ljmp
out
aad
and
xor
jge
sbb
adc
jge
jbe
add
push
push
lds
push
pop
sub
xor
fstps
loope
adc
cmp
sti
aaa
test
adc
hlt
scas
xor
cltd
fdivr
cld
adc
in
bnd
repnz
ja
jg
fcoms
jmp
add
das
leave
test
int
cmp
sahf
aaa
push
pop
test
cmp
xchg
cmp
xlat
pop
pop
repz
sbb
enter
or
shrb
popf
pop
inc
mov
dec
stc
xchg
inc
mov
xor
es
ret
addb
aam
lea
aad
sub
stc
jo
cwtl
fisubl
int
push
js
and
imul
cmpsl
lret
mulb
inc
jno
pop
andb
cmpsb
mov
mov
popf
popf
jp
mov
mov
or
jle
cmp
mov
iret
rorb
test
cmp
iret
cltd
lret
popa
sahf
xchg
add
pop
jno
fdivrs
and
inc
enter
mov
mov
xchg
xlat
and
cli
test
jno
inc
or
add
pop
scas
rep
adc
push
pop
mov
repz
or
clc
test
loopne
out
ds
out
xchg
push
fstl
cmp
hlt
inc
and
fcoms
and
daa
repz
aas
inc
sbb
das
mov
scas
outsb
dec
jp
push
ror
bound
inc
and
or
adc
mov
add
out
call
xchg
cmp
popa
aad
fucomip
sub
xlat
std
fsubrs
and
add
add
daa
mov
sbb
sub
add
repz
adc
addb
out
gs
sub
repnz
mov
sbb
rcl
dec
ja
adcl
fistps
mov
ror
pop
or
sub
dec
xor
push
in
ds
mov
mov
add
push
adc
push
sti
add
insb
fistpll
jb
xchg
mull
stc
xchg
scas
jmp
mov
push
mov
inc
cmp
int
sub
inc
xchg
dec
pop
sbb
mov
js
jb
lahf
aam
outsl
andl
jp
sub
adc
fidivrl
cmp
popa
js
mov
pop
or
adc
mov
into
jp
sub
mov
sbb
push
and
or
adc
cld
loope
xchg
adc
enter
in
subb
daa
xchg
xchg
outsl
cld
pushf
in
mov
mov
ja
inc
adc
xor
push
adc
xor
ds
outsl
inc
cmp
in
push
aas
clc
pop
mov
flds
xlat
out
dec
shl
xor
ret
and
divl
ds
adc
pop
and
fsubrp
mov
sub
or
mov
imul
rorb
push
lahf
imul
mov
loope
mov
pop
jne
jl
inc
push
jecxz
std
jl
mov
into
daa
jns
lcall
jae
in
rolb
je
das
push
lods
and
fdivrl
push
jbe
fsubr
dec
cwtl
jbe
adc
mov
adc
xchg
movsl
addr16
addb
shll
mov
cmp
call
push
test
xor
add
pop
repz
cmpsb
or
xor
sbb
push
jl
int3
inc
jmp
int3
xchg
xor
mov
xor
lea
cli
or
xchg
stc
mov
add
ss
rcrb
mov
jnp
and
mov
testb
subb
mov
stos
imul
popa
xor
jo
scas
xchg
and
movsb
and
arpl
shll
push
mov
aas
inc
mov
int
imul
repz
fstl
or
je
inc
rcrl
mov
sarl
xchg
sbb
popf
xchg
cmp
mov
mov
dec
push
adc
hlt
test
fprem
mov
js
jbe
daa
sti
mov
push
shlb
add
addr16
stc
cmp
dec
push
inc
and
pop
popf
test
std
aas
movsb
fsubrp
lea
les
stos
ja
cmp
add
push
push
sub
lods
in
movsb
jecxz
les
bound
data16
push
loop
mov
in
cmp
jle
pop
mov
adc
lcall
mov
stos
fisubl
enter
sub
roll
sbb
or
and
xchg
insb
in
rcll
jae
lods
stc
sub
enter
test
pushf
push
mov
aaa
lahf
jp
push
inc
mov
fsts
mov
push
jno
ret
pushl
cld
in
push
in
negb
sbb
dec
in
scas
mov
cld
arpl
sub
xchg
out
es
imul
in
mov
adc
mov
mov
and
fbstp
test
ret
and
and
push
sahf
movsb
push
sbb
adc
das
push
popa
insl
testb
cmpb
mov
js
push
add
lods
jmp
stos
add
jecxz
dec
fcoml
loopne
inc
imul
bound
push
out
sbb
fdivs
test
mov
movsb
push
xchg
push
add
dec
mov
adc
ljmp
scas
pusha
nop
shrl
xor
mov
dec
sbb
shrl
movsl
fnsetpm(287
cwtl
aas
stc
fsubrl
lret
mov
mov
imul
ja
icebp
inc
dec
cmp
nop
inc
loope
mov
cwtl
aaa
jle
push
bound
pop
jge
mov
mov
adc
jp
outsl
mov
daa
in
mov
dec
push
out
adc
lock
xor
sub
adc
loop
das
and
dec
bt
cvtdq2ps
adc
sub
dec
arpl
repz
sub
and
push
cmp
xor
shrl
mov
xchg
jle
xchg
incb
orb
insb
in
pop
mov
lret
insl
pop
pop
addr16
loope
jo
pop
insb
negb
test
or
in
jg
lods
ficoms
shl
negb
push
inc
sbb
filds
cmp
cwtl
jo
loopne
lcall
aam
jmp
int
add
pop
std
mov
mov
mov
popa
call
jbe
lods
xor
jl
xchg
aaa
cli
inc
or
ret
dec
scas
inc
dec
sub
sub
repz
leave
imul
pop
xchg
fists
gs
lret
jmp
add
sar
outsb
push
jnp
aas
cmp
std
repnz
mov
or
iret
sbb
push
aad
cmp
xorb
pop
jge
inc
xor
push
leave
clc
mov
jecxz
sub
cmc
push
mov
mov
sbb
xlat
test
mov
cwtl
jae
dec
daa
sub
push
aas
nop
imul
mov
sti
addl
inc
inc
xor
outsb
push
lods
leave
pop
adc
inc
dec
movsb
cmc
sarb
inc
sub
push
or
add
stc
scas
sbb
jp
rol
dec
pop
add
pop
mov
loopne
fsubr
arpl
inc
mov
xlat
stos
jp
pop
sbb
filds
pop
outsl
dec
pusha
out
cltd
cmp
decl
scas
fdivrs
test
mov
nop
mov
sbb
call
mov
mov
xor
fwait
sti
movsl
push
cmp
jne
popf
ds
xor
mov
shrb
leave
cwtl
jge
mov
pusha
out
jmp
bound
push
lods
fldenv
nop
add
or
lds
cmpsl
sbb
sub
xchg
test
ret
nop
jle
mov
leave
in
push
and
push
mov
inc
jno
pop
sbb
adc
hlt
or
adc
xchg
testb
cmpsl
or
dec
fnstsw
in
dec
push
or
dec
cmpsl
fcmovne
mov
inc
mov
stos
loope
stos
mov
int3
sbb
pop
dec
aam
lahf
arpl
fstl
xlat
addl
fisttpll
fsubl
inc
sbb
mov
pop
sub
xor
mov
sub
push
mov
xchg
fnstsw
rol
cmp
mov
inc
cmp
xor
test
jno
jbe
xchg
scas
xchg
mov
xchg
lea
xlat
dec
lds
loop,pn
xor
or
adc
cmc
push
rcr
xor
in
insb
cmp
cmpsb
xchg
push
mov
xchg
jns
sahf
in
mull
add
mov
repz
mov
dec
daa
mov
dec
xchg
push
sbb
vmovlpd
repnz
shlb
repnz
fwait
popf
sub
imul
sub
ret
adc
call
enter
mov
add
cmp
stc
arpl
les
xchg
ss
lods
jnp
test
cmc
in
arpl
jo
inc
mov
stos
push
in
mov
in
add
cmp
xor
lea
xchg
call
mov
lods
and
pop
dec
jecxz
mov
mov
xor
fldpi
pop
aas
into
and
andl
std
notb
ja
or
loope
repnz
fidivrl
xchg
insl
xchg
push
inc
aad
fsubs
rcrl
addr16
rcl
inc
das
mov
cmp
out
cmp
and
or
out
pushf
or
ljmp
and
and
insl
add
push
push
subl
jns
or
pop
pop
loope
iret
pop
arpl
dec
mov
enter
mov
idivb
not
push
jmp
out
repz
adc
sub
mov
pop
xchg
mov
sbb
les
sbb
aas
dec
test
test
sarb
add
or
and
pop
cld
aaa
fistl
mov
cmpsb
pop
mov
sub
jg
ret
fisttpl
mov
leave
dec
stc
dec
pop
mov
ss
in
mov
fbld
outsl
mov
mov
lods
adc
add
push
xchg
xchg
aaa
pop
and
adc
rcl
mov
mov
pop
jns
js
xor
jle
and
movsl
dec
aam
int3
pop
cs
xchg
mov
in
out
cmp
xor
sub
fsubs
bound
mov
sbb
jmp
adc
cmp
les
mov
or
dec
das
mov
icebp
and
das
fsin
stos
jmp
push
xchg
faddl
mov
in
and
xchg
sbb
popf
pop
dec
jno
jmp
mov
add
hlt
mov
mov
cmc
stc
mov
into
cmp
push
pop
pusha
xchg
std
pop
pop
dec
sahf
in
jp
push
lahf
jno
iret
ss
scas
decb
pop
jbe
lret
lret
movsb
pop
mov
sbbl
jne
lds
xchg
adc
subb
outsb
ss
pop
mov
cld
sub
or
jnp
mov
and
adcl
repnz
fdivs
bound
int
inc
and
mov
rcr
mov
pop
pushf
mov
pop
jle
enter
sti
cmp
ret
sahf
push
or
mov
test
dec
add
and
push
add
inc
popa
aaa
lret
das
sbb
dec
sbb
aaa
jmp
je
xchg
sbb
mov
hlt
xchg
fistl
add
dec
cmp
push
or
jle
or
dec
pop
sub
jbe
test
adc
cmp
mov
sbb
push
cltd
mov
mov
jbe
or
push
inc
mov
lock
xchg
js
out
mov
mov
or
pop
sti
pop
sarb
mov
std
rcrl
fsubrs
scas
mov
test
scas
push
hlt
mov
add
jno
fstl
mov
cmp
mov
or
scas
add
adc
or
lods
pushf
push
gs
fistps
ljmp
insb
inc
or
es
push
push
sub
outsb
pop
mov
ljmp
mov
sbb
mov
insb
or
xchg
push
and
xchg
lcall
inc
inc
shl
test
fstl
cmp
dec
add
xor
or
mov
lock
push
shr
xorb
icebp
sbb
test
xchg
test
mov
sbb
cld
add
movsb
addb
jnp
repnz
pop
test
aas
cli
in
fadd
pop
adc
je
adc
sub
mov
loop
scas
sbb
jge
jmp
add
xor
loop
xchg
inc
adc
pop
xchg
shl
mov
cld
add
js
pop
pushw
cmp
imul
mov
pusha
mov
mov
incl
insl
mov
inc
cmpsl
cmp
sbb
or
mov
add
ret
aam
xchg
mov
fstpl
mov
das
jne
pop
mov
lea
pop
cvtps2pi
imul
xchg
ss
cmp
cmc
lcall
dec
sub
aaa
int3
je
mov
jecxz
bound
clc
repnz
subb
or
stc
add
inc
ffreep
mov
or
sbb
xchg
adc
lods
push
xchg
or
jo
xchg
into
inc
rcl
xchg
pop
push
cmpsb
rcrl
hlt
cmp
mov
loop
lret
and
mov
lret
sbb
mov
fistl
mov
movsb
ret
add
aaa
push
filds
or
inc
dec
mov
stc
adcl
ret
add
jne
pop
cmp
call
push
add
dec
in
in
or
ffree
arpl
lret
fcoml
lcall
imul
and
fwait
icebp
scas
out
cli
out
mov
xchg
xchg
test
mov
fs
shll
imul
xchg
jecxz
subb
lret
cmp
sub
icebp
sub
scas
xor
pop
mov
sub
idivl
test
jnp
js
push
loop
call
in
aas
fnstcw
xchg
mov
movsl
pop
into
movsb
or
mov
pushf
xchg
sub
sbb
mov
push
stos
mov
fstl
sbbb
dec
aaa
jo
push
push
jmp
pop
pushf
cmp
pop
cltd
mov
cmp
je
mov
enter
cli
imul
adc
pop
insb
jmp
push
dec
lods
outsb
ljmp
ficomps
stos
xchg
fstpl
mov
mov
mov
ret
adc
subl
push
pop
dec
xor
mov
jecxz
lcall
add
arpl
in
cs
dec
or
stos
pop
xchg
dec
xor
push
inc
mov
ret
ds
xchg
shl
sbb
mov
jns
pop
sahf
pop
enter
and
fnsave
lods
jbe
pop
mov
fs
nop
push
arpl
pop
pop
push
in
pop
add
out
push
xlat
lds
stos
cli
push
cmp
inc
add
pop
cmp
mov
xchg
sub
or
stc
adc
call
sub
int
lcall
adc
mov
xor
into
xchg
lret
mov
cld
xchg
sti
jl
mov
xchg
pusha
add
jae
xor
ljmpw
adc
push
adc
movl
pop
xlat
fs
or
filds
or
lret
or
jg
lea
xchg
push
arpl
cmp
xor
je
movsl
mov
inc
cmp
mov
data16
dec
jno
sub
lret
cmp
int3
sub
cli
filds
enter
mov
jg
fs
mov
sbb
push
bound
mov
xchg
push
mov
mov
sbb
xor
add
jmp
dec
add
out
xor
xchg
or
xor
mov
lods
mov
dec
fdivl
movsl
icebp
jle
pop
out
cmpsl
in
mov
mov
inc
xchg
add
dec
movsb
cld
inc
push
mov
data16
mov
xchg
int
sub
bound
lock
mov
mov
fistpl
mov
lcall
cmp
insl
xor
dec
test
and
fstl
scas
shrb
cltd
outsl
movsl
adc
imul
mov
jnp
xchg
ljmp
inc
nop
subl
hlt
xchg
fcomp
mov
repnz
jne
xor
jle
decl
std
in
and
push
out
mov
xchg
fstl
lods
outsb
out
lea
es
ss
in
xchg
je
cmpsl
or
test
lds
testb
mov
push
or
inc
xchg
ljmp
mov
in
lods
in
cli
test
sub
and
lods
mov
sbb
pop
xchg
pusha
mov
cmp
out
push
jno
cs
loope
xchg
gs
fcoml
push
mov
mov
adc
push
xchg
sbb
aaa
sahf
repnz
scas
xor
cmp
test
mov
fwait
jne
pushf
and
cli
bound
push
jmp
outsb
std
or
add
scas
stc
cmp
push
pop
pop
cmc
dec
pop
sbb
xlat
inc
jno
lods
sahf
shlb
xchg
sbbl
lret
leave
xorb
mov
jb
outsl
jmp
popf
mov
hlt
jmp
lret
mov
push
add
mov
insb
jno
sub
dec
dec
cmp
and
pop
fisttpl
jb
test
stc
aaa
jge
daa
xchg
mov
pop
adc
mul
imulb
data16
add
jge
cmpsl
and
sub
call
jle
nop
loope
int3
lds
test
inc
fiaddl
push
in
pop
ret
jp
mov
lods
jnp
jp
pop
xchg
call
mov
outsb
iret
cmp
pushf
cmp
add
loop
mov
xchg
repz
jnp
ret
fsubrl
in
sbb
mov
or
jp
or
inc
fcompl
xor
jmp
popf
ret
adc
test
stc
mov
xchg
push
lds
cmpsl
or
sbb
sbb
xchg
mov
mov
cwtl
ret
and
pop
fmuls
cs
stc
icebp
and
dec
pop
aas
cli
cs
xchg
into
addb
ret
out
out
mov
repnz
pushf
and
cwtl
bound
push
mov
cwtl
cmpsb
sub
push
out
pop
dec
and
sbb
fsubl
or
aad
lret
or
out
cmp
mov
pop
ds
push
pop
out
sub
jge
fimull
test
adc
ret
or
cmp
sub
or
add
pop
clc
jle
cltd
mov
and
mov
xchg
mov
rcrb
push
fnstenv
xchg
mov
loope
jp
pushf
aam
fs
je
xchg
mov
jbe
gs
xor
jae
mov
xchg
dec
or
lods
mov
dec
xchg
mov
outsl
xchg
and
cmpl
das
fcmovnu
push
xor
inc
std
sbb
jnp
mov
iret
inc
enter
pop
jb
mov
mov
dec
mov
cli
pop
and
int3
mov
icebp
xchg
mov
dec
xorl
mov
adc
sub
mov
aad
jo
ficompl
test
mov
in
insb
dec
div
xor
js
rcrb
xchg
inc
loope
into
ret
cwtl
mov
sbb
imul
in
or
xchg
cmp
popw
mov
insl
hlt
or
sbb
cli
mov
les
and
mov
push
clc
shl
shl
insb
rcrl
ret
mov
add
sub
les
mov
pop
mov
popf
inc
jl
and
out
stos
mov
and
rcrl
push
push
push
sti
bound
mov
data16
xchg
cmp
cmp
cmp
fcompl
mov
xor
bound
leave
and
jg
add
jg
dec
push
movsl
popa
pop
push
jecxz
sbb
sbb
mov
push
outsb
out
fistpl
sub
sbb
imul
cmp
aaa
mov
and
daa
mov
xchg
pop
push
bnd
pusha
dec
sbb
jno
std
or
dec
xchg
aad
jecxz
sub
and
push
cli
lret
mov
lret
rcll
mov
mov
daa
fwait
aam
mov
inc
mov
packuswb
pusha
lods
addr16
jle
or
or
clc
js
push
vpshufd
mov
pop
sbb
push
je
xor
lods
lock
dec
mov
scas
lret
es
mov
incl
lds
inc
xor
fsubl
inc
add
into
or
push
je
in
imul
loop
cltd
repnz
movsl
dec
add
outsb
popf
test
popa
jns
aas
mov
icebp
push
pop
das
dec
mov
popa
add
ljmp
push
dec
test
cltd
pusha
lret
out
push
inc
dec
ret
or
out
inc
xchg
sub
jns
in
loop
scas
ljmp
in
mov
sbb
cs
jge
lods
sbb
and
fisubrl
in
lahf
jmp
push
pushf
in
or
jne
sub
in
jb
or
stos
sbb
cmp
push
int3
inc
lods
jns
cmc
jns
test
push
cwtl
cld
fwait
push
inc
dec
jo
jo
imul
ds
enter
gs
push
sub
xlat
inc
mov
sub
fdivrl
pop
aaa
jl
adcl
insb
jge
ret
outsl
cmp
pop
dec
and
cmpsl
dec
fwait
addb
xor
test
jo
int3
and
mov
xchg
ret
pushf
dec
loopne
rcrl
shll
or
test
jo
pop
rcrl
push
aaa
in
sbb
xlat
pop
loope
xor
pop
push
mov
mov
cwtl
cmp
mov
cmc
mov
aad
push
loopne
lahf
cld
push
leave
sub
lahf
call
xor
mov
ds
pop
das
inc
jecxz
test
xchg
lds
arpl
icebp
jg
add
orb
or
pop
or
out
or
add
int
jo
gs
or
pop
or
and
jge
loope
mov
xchg
sarb
mov
pop
add
cmp
cmpb
sahf
mov
repz
xchg
sbb
test
add
scas
and
loop
dec
mov
xchg
mov
aaa
push
mov
ja
dec
inc
xchg
shll
sub
jecxz
dec
sbb
dec
sub
sti
and
fwait
in
adc
cmp
lahf
or
lock
adc
cmp
fisubrl
andl
int3
int
lock
in
push
mov
iret
cmpsb
fwait
xchg
cmpsl
cmpsb
popa
mov
mov
loop
pop
xchg
pop
mov
sub
ret
fldt
add
icebp
xor
insb
outsl
mov
or
xchg
jle
sahf
jnp
bound
add
push
lods
aas
add
mov
adc
adc
ja
sahf
aam
and
mov
xlat
adc
jnp
sar
out
filds
outsb
mov
inc
test
cld
pop
mov
in
imul
je
ds
dec
xor
test
movsl
ss
jb
scas
jmp
or
pop
cwtl
jge
mov
insb
adc
pop
ds
jmp
xchg
imul
leave
mov
cmp
test
mov
xor
mov
mov
loope
inc
cli
sub
jl
inc
xchg
out
fcomps
rclb
repnz
sub
cmpsb
shll
movsl
push
xchg
sti
push
fadd
push
insl
push
je
mov
repz
cli
sub
enter
xor
imul
push
xor
lret
and
ds
pop
cmp
int3
and
nop
incl
inc
sub
andb
insl
stos
into
aam
imul
sub
psubusw
and
ja
sbb
repz
push
ds
inc
iret
out
scas
out
lret
in
fnstenv
dec
sahf
cmc
rorb
cwtl
js
mov
push
outsl
iret
adc
hlt
mov
lods
lcall
or
out
int3
test
xchg
mov
nop
dec
sarb
xchg
xchg
pop
add
dec
into
push
cmpsl
cltd
dec
in
nop
jmp
std
cmp
addl
sbb
jo
scas
mov
fdivs
stos
add
stc
stos
inc
xor
mov
loope
pop
pop
jns
stc
loop
sub
mov
xor
int
jbe
lahf
mov
push
fnstsw
mov
mov
rcrb
pop
dec
pop
fs
cmp
jge
xor
xlat
mov
lea
sahf
lret
pavgw
or
xchg
pop
out
lds
std
cmc
xlat
adc
dec
jecxz
cmpsb
xchg
mov
mov
mov
out
pusha
lods
mov
add
adc
and
mov
dec
or
or
fildl
inc
mov
negb
push
stc
cli
cs
movsl
out
jle
cmp
mov
cmpsb
xor
pushf
or
jg
dec
jg
fld
inc
mov
xchg
lret
fiadds
sbb
pusha
mov
lcall
gs
and
test
cld
shrl
cmp
test
rolb
cmc
xor
xorps
test
clc
and
test
bound
mov
repz
loope
mov
mov
nop
lods
xchg
mov
sbb
shll
in
add
scas
add
into
push
mov
lret
movsb
or
imul
sbb
es
dec
flds
cltd
mov
fcompl
gs
loopne
out
xchg
daa
scas
cltd
xor
fs
xor
adc
sbb
jb
sti
push
jmp
lea
sarb
jae
mov
testl
fbld
les
mov
fisubrl
xchg
enter
push
mov
pop
fcompl
in
and
in
cli
inc
or
sub
hlt
out
inc
repnz
vmaskmovdqu
pop
sarb
fadds
mov
pop
pop
jmp
test
jo
bound
dec
cmp
fdivrs
movsb
or
mov
fidivrs
xchg
jae
sub
push
mov
sahf
inc
into
push
movsl
shlb
jl
repnz
out
mov
dec
inc
mov
xchg
cli
pusha
and
or
fnsave
push
push
xor
cmp
inc
je
mov
push
push
pop
stos
and
out
sub
dec
xor
push
adc
sbb
cmp
mov
push
adc
and
hlt
int3
push
sbb
insl
xchg
in
addr16
testl
sub
cmp
and
pop
js
imul
icebp
lahf
push
ror
icebp
test
std
jns
call
inc
mov
data16
insb
inc
xchg
repnz
movsb
pop
dec
pop
in
sbb
inc
sbb
lcall
lcall
in
cmp
sub
fiaddl
mov
lods
cmc
or
movsb
movsl
outsl
adc
xchg
mov
cld
xorb
cmp
cmp
push
or
cmp
and
mov
rolb
loopne
jmp
cli
jge
icebp
mov
arpl
test
iret
into
cmp
mov
sub
mov
test
xor
pop
imul
xchg
mov
cmp
in
out
std
jle
movsb
sti
in
mov
jnp
fldenv
das
ror
in
lret
mov
shrb
enter
ret
cwtl
or
xor
mov
and
in
xor
sarl
push
aam
xor
sub
adc
scas
div
sub
ret
inc
pusha
xchg
rorb
cltd
iret
mov
aam
xor
mov
jmp
push
mov
dec
push
imul
dec
int3
addr16
mov
gs
movsb
imul
stc
dec
add
cmp
pop
jno
lret
loop
cmp
aas
scas
outsl
test
cli
or
mov
or
jl
dec
or
and
cmpsl
cwtl
add
xor
xchg
lahf
jno
xchg
mov
sbb
stc
test
cwtl
leave
ds
sub
jmp
mov
mov
dec
repz
repnz
mov
push
push
push
lock
mov
popa
cmc
xchg
jno
subb
mov
inc
rcrb
bndldx
fld
repz
xor
mov
and
int
leave
insl
loop
or
sbb
and
stos
and
leave
mov
in
ret
adc
aaa
pop
fidivs
add
mov
cmp
pop
imul
cmpsb
sbb
cwtl
push
insb
push
mulb
test
or
shlb
je
pushl
gs
jnp
cmp
adc
lds
sbb
mov
leave
push
and
cmp
add
cli
mov
inc
xor
out
xor
xor
pop
or
and
xchg
popa
jb
xchg
fimull
xor
cmp
out
dec
mov
xchg
ljmp
into
mov
idivl
mov
jmp
clc
xchg
fidivrl
leave
arpl
fcompl
cmpsb
insb
add
fildl
pop
push
mov
cmp
stc
imul
stos
dec
ja
mov
movsl
jae
add
iret
popf
in
pop
arpl
arpl
cmp
pop
mulb
add
jb
push
dec
js
mov
mov
sbbb
xor
xlat
rolb
xchg
mov
cmp
dec
insb
negl
popa
mov
jle
inc
fistps
mov
mov
jne
sub
push
loopne
jp
adc
mov
adc
inc
or
mov
in
mov
cs
xchg
add
in
hlt
into
enter
shrb
adcl
add
pop
xchg
stos
stos
xchg
das
xor
pop
lret
imul
jmp
pextrw
push
add
jae
in
sub
ret
xor
and
or
movsl
dec
and
push
add
pop
jb
xchg
pop
in
adc
sahf
negl
pop
mov
lret
jae
rcll
or
dec
fadds
xchg
jb
or
in
mov
push
pop
enter
jmp
cltd
aam
add
add
mov
shlb
mov
lock
pop
aas
jae
int
mov
adc
sub
fcmovb
fcoms
cli
fmul
mov
dec
push
mov
pop
aad
popa
leave
push
xchg
mov
sub
ss
fsubrp
das
in
mov
rcr
xchg
leave
sbbb
cmc
ds
push
mov
lock
ret
data16
jle
addr16
lcall
rclb
inc
aad
fidivs
sbb
mov
cld
xchg
shll
xor
ficoms
sub
pop
pushf
ds
lahf
sub
mov
adc
mov
xor
stos
jb
repz
xchg
jb
and
popa
lock
inc
lahf
mov
fs
push
or
test
jp
pop
iret
test
pop
sub
mov
cltd
jae
pop
jmp
xchg
sub
dec
das
dec
dec
push
mov
fs
cmp
jmp
enter
or
fnstenv
mov
mov
movsl
mov
add
or
lcall
loope
aad
pop
pop
lcall
in
inc
pop
cmp
adc
push
cmc
out
adc
into
fs
mov
jle
in
push
nop
test
outsl
push
mov
aam
jge
cmp
jo
adc
push
inc
cmp
nop
test
pusha
or
in
or
jp
fistpll
lret
aad
cmp
pushf
push
scas
out
aas
inc
mov
mov
xor
rclb
insb
iret
ret
rcl
inc
out
pop
jno
sub
leave
jl
lret
out
test
sbb
sbb
js
shlw
neg
addr16
stc
mov
arpl
int3
inc
in
dec
push
je
arpl
hlt
pop
cltd
mov
jg
push
ja
daa
inc
jp
lret
add
mov
mov
or
pop
sti
in
jle,pn
push
clc
repnz
xor
stos
bound
xor
pop
cwtl
cmp
pop
xchg
aad
cmpsl
int3
sbb
pop
nop
fimull
and
jmp
mov
mov
or
lahf
pushl
xor
and
icebp
adc
das
mov
jno
jecxz
and
loope
sti
xor
icebp
add
sub
das
lods
ret
mov
cwtl
adc
adc
jmp
mov
iret
dec
mov
imul
addr16
pop
mov
mov
dec
jl
test
mov
jle
out
mov
adc
or
jnp
cmpsl
dec
inc
sti
mov
or
shll
sub
popf
and
mov
cmp
xchg
cs
cmp
aam
push
mov
test
test
mov
out
pop
jecxz
sub
ja
xchg
popf
adc
dec
inc
and
rclb
cwtl
add
ret
cmp
into
stc
mov
pop
jae
mov
mov
in
pop
xchg
imul
enter
jg
nop
lret
sbb
sti
xchg
mov
xchg
adc
xor
cmp
in
stos
jbe
subl
popa
jno
dec
cld
sub
mov
out
adc
out
sbb
rcr
out
cmp
jge
negl
dec
nop
scas
dec
jp
hlt
arpl
jp
daa
iret
sbb
dec
mov
xor
mov
xchg
sub
mulb
mov
and
dec
int
push
dec
or
shll
mov
arpl
cmpsb
in
xchg
xchg
add
push
mov
jbe
mov
sbb
in
xchg
ret
push
xor
mov
inc
jno
out
xchg
sub
mov
push
add
fdivs
in
mov
mov
push
fs
rcl
mov
repnz
lahf
inc
pop
push
push
and
mov
cmc
add
fists
add
xchg
aaa
hlt
arpl
out
pop
xor
jmp
pop
adc
sti
fistpl
aam
out
loope
add
test
imul
add
lcall
jge
jne
xchg
das
ret
sub
in
inc
arpl
shll
xor
imul
xchg
fisttps
cld
in
pop
sub
mov
mov
sbb
push
call
xchg
mov
adc
pop
or
pop
in
mov
pop
andb
lret
scas
rol
int3
in
inc
notl
push
int3
xchg
mov
mov
mov
mov
sbb
dec
insb
shlb
pop
mov
jmp
xchg
dec
sub
jle
xchg
xchg
and
sbbl
add
enter
and
rcrb
in
rcl
fisubs
sub
jg
imul
lods
sbb
mov
dec
mov
cmp
adc
or
cltd
divb
pop
add
dec
lret
sbb
pop
shlb
pop
mov
sbb
pusha
adc
dec
icebp
subl
sti
push
in
ret
sub
or
aam
out
sahf
ljmp
xor
inc
xchg
sahf
xor
xchg
fincstp
loopne
mov
dec
ret
inc
cld
fmull
jmp
push
adc
rcrb
sub
daa
sbb
lock
scas
aad
inc
jae
jno
xor
sub
sub
mov
int
dec
dec
mov
xor
in
xchg
or
add
cmp
or
es
push
and
js
push
in
icebp
jno
and
cli
and
lds
test
xchg
cmc
adc
xchg
outsb
fcoms
test
pushf
mov
cli
cmpsb
xlat
jne
pusha
outsl
fs
ss
ja
aas
dec
adc
movsb
and
lahf
js
cmpsb
jle
inc
mov
pop
push
fwait
dec
movsl
and
inc
adc
push
push
das
jmp
push
add
sub
adc
push
dec
xorl
adcl
or
jecxz
arpl
inc
and
sarl
pop
std
xchg
loop
dec
fcomp
adc
out
pop
imul
iret
jmp
cmpsl
inc
rorl
pushf
push
sbb
push
xlat
test
loopne
mov
xor
sbb
push
iret
call
mov
leave
scas
push
test
ds
fldenv
stc
shrb
mov
add
pop
xchg
jg
sbb
mov
push
nop
loopne
sarl
or
pop
in
aad
cli
xor
pop
mov
mov
add
add
push
xchg
add
xor
jo
inc
or
add
push
dec
jmp
add
or
lods
sbb
adc
jb
sub
in
bound
loopne
out
je
jle
xor
shll
movl
lahf
add
icebp
out
cmp
adcb
push
loopw
mov
pop
push
pop
cmp
ss
stos
rcrl
enter
push
cmp
cmp
jno
dec
test
xchg
mov
and
xor
addl
or
jmp
xor
adc
outsl
pop
sti
lret
pushf
movsl
sub
add
pop
add
cwtl
loop
sub
pop
adc
sub
push
loop
mov
sub
add
loop
loope
das
and
or
pop
andl
dec
jge
xor
fidivrl
mov
ljmp
or
loopne
shll
addr16
jbe
inc
pop
cmp
mov
cld
sbb
sbb
mov
in
or
rorb
bound
inc
mov
xchg
imul
push
popf
mov
inc
sub
int
cs
and
pop
popa
sub
pop
shr
adc
lret
xchg
mov
pop
mov
xchg
cmp
insb
pop
repz
call
ret
ror
xchg
dec
arpl
lods
cmpsl
inc
pushf
clc
out
cmp
test
add
mov
dec
pop
lea
popf
add
mov
sub
or
cli
add
loop
cmp
sub
add
popf
fists
les
movsb
pop
movsl
std
ja
in
dec
fdivs
mov
mov
loopne
ds
push
mov
add
lods
arpl
mov
out
loope
cmpsb
or
shll
bound
ja
es
add
ret
push
sub
divl
fscale
pop
data16
sbb
or
cmp
cmpsb
scas
jnp
cmp
xchg
and
xchg
xchg
add
incb
movsl
sarl
xchg
mov
jp
cmc
cmp
push
xchg
lods
ret
ret
insb
fistpl
inc
cmpsb
push
or
jl
aam
dec
ja,pt
sarb
out
adc
adc
in
data16
add
jnp
inc
sarb
fcoms
mov
xor
cltd
cld
shlb
inc
and
push
lret
push
mov
fs
out
inc
stos
mov
lods
pushf
mov
xor
pop
jg
stos
cmp
fmull
mov
imul
xor
cmpsl
fwait
popl
ret
or
cmp
insb
test
lret
sahf
idivl
adc
cmpsl
jle
mov
repz
add
psadbw
xchg
inc
outsb
int3
dec
idiv
add
ss
sarb
jmp
jmp
sub
in
sub
lock
movl
inc
xor
or
shlb
fcompl
out
sti
test
and
sbb
inc
mov
out
ret
push
dec
pop
xchg
mov
push
dec
shlb
aas
fimull
pop
xchg
mov
lret
sub
in
int
mov
int
shrl
pop
aad
stos
pop
aaa
ret
mov
push
lcall
notb
jp
imul
stos
adc
pusha
jnp
enter
mov
cmpb
in
test
jnp
cmp
inc
adc
lret
xchg
lds
rclb
test
mov
ror
pop
push
sbb
insb
or
enter
mov
dec
out
fcmovne
jle
orb
and
scas
dec
mov
xchg
std
lcall
ret
xlat
cmp
pusha
mov
mov
push
cmpsb
pop
aam
push
lahf
lahf
pop
orl
jp
and
imul
dec
out
loop
bound
js
cs
jae
and
aas
cli
push
mov
shll
push
lods
push
sbb
daa
sub
push
shlb
test
out
fisubrl
adcb
sti
test
xor
mov
mov
test
call
jge
lahf
add
push
movsl
popf
pop
rcr
data16
into
sbb
and
push
and
or
ss
jmp
or
xchg
inc
pop
in
iret
pop
movsl
mov
popf
mov
mov
mov
adc
rolb
xchg
mov
mov
mov
xor
dec
sahf
ljmp
add
andb
clc
add
cmpsb
in
ficoml
fwait
sahf
pop
out
sub
std
fisubl
mov
mov
shll
adc
in
pop
mov
and
test
testb
jmp
lock
popa
scas
or
stos
inc
cmc
test
cmpl
jle
lret
rcl
cmpsl
xor
fiadds
add
test
dec
aas
iret
adc
add
jnp
icebp
jbe
dec
xchg
or
mov
data16
les
mov
inc
or
jl
cli
je
subps
fwait
pop
in
cmc
cmc
inc
mov
das
repnz
test
dec
icebp
sahf
dec
outsl
push
out
push
xorl
movsl
xor
jbe
push
stc
mov
mov
inc
outsb
pop
cli
fldt
icebp
mov
test
ds
hlt
frstor
ljmp
push
sbb
jecxz
stos
arpl
mov
stos
push
fldl
insl
fcompl
rol
xchg
int3
xorl
xchg
dec
js
mov
sarl
lret
xchg
adc
shll
sub
dec
push
das
call
je
add
rorb
xchg
add
xchg
rcrl
sub
add
mov
push
pop
xchg
inc
sarl
add
cld
cli
daa
mov
cltd
jae
iret
outsl
idiv
jmp
movsb
lcall
dec
add
mov
jmp
dec
stos
dec
mov
cmp
leave
lret
fimuls
stos
adc
xchg
and
and
sbb
lcall
push
lcall
jnp
and
jae
or
rcll
jp
pop
js
ret
or
or
dec
pop
test
popf
and
jb
movsb
addr16
inc
jae
lahf
xchg
cs
lret
outsl
cltd
sbb
div
adc
xlat
xchg
mov
jg
in
sbb
stos
mov
and
stos
mov
xchg
call
call
pop
les
lds
sub
xchg
xchg
ja
xor
shrl
insb
jg
in
ljmp
fildl
ss
or
les
xor
or
mov
add
cmpsb
ljmp
out
xchg
cmpsb
leave
push
sbb
pop
inc
sub
xchg
mov
sbb
mov
movsl
mov
punpckhbw
das
icebp
lcall
jge
mov
adc
jg
add
cmp
sub
into
test
shll
or
or
or
inc
neg
test
mov
cmp
decb
sub
repz
mov
cmp
test
scas
inc
adc
lret
cmp
lods
xorb
psllq
sub
lods
out
inc
popf
mov
sti
dec
popf
popf
xchg
dec
xchg
test
in
es
mov
sub
andl
popf
mov
or
repnz
cld
js
pop
and
sahf
dec
xchg
push
cmpsb
push
in
cmpsb
scas
pop
sub
subl
out
push
iret
inc
mov
test
cmp
add
pop
pushf
mov
xchg
aad
inc
cmp
loopne
push
test
mov
mov
cwtl
add
push
cld
shr
push
loope
aaa
sbb
cmpsl
jnp
add
mov
loopne
push
dec
mov
push
or
lds
cltd
cmc
out
frstor
add
jbe
pop
add
out
insb
aam
mov
adc
mov
dec
imul
add
adc
sbb
xor
mov
adc
mov
dec
rep
sbb
xchg
xchg
fdivrl
rorl
movl
sbb
iret
push
lock
stos
sbb
out
mov
lcall
push
xchg
and
shll
sub
sbb
and
ficoml
mov
pop
in
call
push
bound
repnz
int
cmp
sub
push
pop
push
add
jg
xchg
sets
cmovbe
jbe
pop
dec
repnz
cs
sub
outsl
ja
out
cwtl
adc
xchg
sub
fmul
sti
fstps
cmpsl
iret
popa
or
shll
aaa
add
cltd
sbb
adc
mov
cmp
xchg
or
ds
xchg
cmc
pop
dec
push
pop
cltd
push
int
fsubrl
jne
lea
pop
fnsave
mov
and
or
fcomp
nop
lret
ror
fldl
in
pop
mov
push
xchg
push
outsl
pop
in
dec
jo
jmp
sbb
mov
mov
xor
inc
jb
loopne
mov
jne
outsb
repz
loope
sar
mov
or
sub
and
lahf
vpshad
lret
mov
mov
jns
insb
pop
sbb
lods
mov
das
aas
pusha
sbb
int3
dec
lds
cld
js
sub
xchg
aad
fimull
inc
xchg
mov
roll
imul
mov
add
pop
cmpsl
sbb
jg
orl
push
xchg
xchg
cltd
mov
pop
mov
cmp
jo
push
shrl
dec
push
dec
mov
push
pop
cmp
aas
aas
sub
shr
movsb
popf
outsl
enter
shll
and
jge
js
inc
subb
fs
cmp
aad
jno
and
mov
mov
dec
sbb
neg
rcl
rcr
jae
cmp
mov
cmpsl
and
or
das
dec
clc
stos
iret
stos
fcom
pop
push
cltd
inc
outsb
mov
test
popf
int3
pop
mov
mov
push
pop
mov
push
stos
jb
xor
testl
or
jl
call
es
cmp
push
test
loopne
cwtl
xchg
stos
js
sti
adc
mov
push
cmp
add
lret
mov
jbe
rcrb
jp
das
fstp
mov
aam
mov
lea
stc
push
int3
aam
insb
test
pop
xlat
int
push
jmp
mov
sbb
loope
movsl
pop
and
pop
cmpsb
sti
adc
rcrl
jbe
cmp
gs
cmp
push
cmp
and
xor
push
or
xorb
popa
jbe
or
std
fucom
rcll
ret
pop
filds
idivb
lcall
mov
jnp
sbb
je
inc
add
mov
push
popa
or
test
adc
jmp
stos
lret
xchg
or
gs
lcall
call
inc
arpl
push
str
into
sub
ret
mov
rcrl
mov
ja
pop
push
and
jmp
fsubrs
fstl
or
mov
xchg
push
or
and
out
incb
rcll
xlat
push
sub
dec
jge
gs
pop
mov
mov
xor
jne
mov
imul
xchg
sbb
inc
pusha
mov
aas
inc
push
mov
rorl
inc
jp
inc
adc
push
inc
xlat
rorb
xchg
xor
push
mov
cmp
push
sbbb
addr16
mov
adc
dec
pshufw
xor
dec
push
jb
inc
mov
pop
sar
mov
push
filds
arpl
fwait
push
roll
jecxz
or
push
test
shll
fs
pop
popf
mov
pop
add
add
aaa
sub
dec
jbe
sub
xchg
les
push
insb
fnstenv
pop
lcall
xchg
jmp
testb
fbld
mov
popf
xchg
incl
lea
aaa
lret
add
sub
hlt
jb
out
pusha
or
iret
sub
push
push
ret
jb
sahf
les
mov
mov
mov
lods
sub
leave
test
xchg
stos
adc
ljmp
clc
pop
mov
jge
and
mov
in
arpl
jo
sbb
mov
dec
insl
fcompp
std
cs
cmpsb
addl
jge
xlat
lock
pusha
dec
hlt
sbb
lods
xchg
ss
les
imul
sbb
xor
jb
mov
and
movsb
or
push
hlt
mov
in
shrl
and
mov
stc
lock
inc
mov
or
je
movsl
daa
leave
adc
mov
pop
int3
pop
rolb
loop
add
cmp
lcall
loop
jbe
pop
sub
cwtl
and
xlat
push
jno
mov
jl
loop
in
push
test
fldt
dec
pop
xchg
xor
insb
mov
mov
jo
inc
mov
ret
pop
push
nop
stc
sub
or
fcompl
into
push
dec
xchg
pop
cmpb
aam
pop
jmp
pushf
sbb
and
punpckldq
scas
dec
lcall
out
in
icebp
pop
je
cli
or
std
add
or
pop
jne
adcl
push
test
clc
ret
push
lcall
push
movsl
ja
outsl
push
jmp
fwait
in
ret
pop
jle
cmp
int
out
push
movsb
mov
jmp
insl
arpl
icebp
pusha
xchg
jg
mov
lcall
sbb
pusha
or
scas
xor
or
mov
add
cmc
sbb
xchg
hlt
sbb
aad
mov
jecxz
adc
je
stos
push
mov
xlat
mov
push
lcall
add
in
xchg
and
movsb
inc
sqrtps
mov
mov
ss
or
int3
int3
addr16
xchg
mov
xchg
pop
mov
mov
cmp
outsb
and
arpl
xchg
or
mov
push
pop
jb
in
das
push
push
jne
push
sub
sub
add
adc
mov
leave
lahf
mov
pop
pop
rcr
inc
push
arpl
mov
xor
mov
scas
les
mov
lock
in
lahf
notl
data16
add
bound
cmp
sbb
mov
imul
leave
jae,pt
out
push
mov
mov
arpl
cmp
pusha
jge
and
out
adc
mov
cmp
not
mov
arpl
lret
addl
sahf
iret
pop
shl
push
sbb
mov
ss
pop
mov
xorl
out
loop
push
push
sub
pop
nop
jge
or
sbb
mov
addr16
push
fcompl
and
int3
mov
pop
mov
aam
je
cli
dec
pusha
repz
pop
call
loopne
jns
clc
movsl
fidivrl
ret
push
es
mov
dec
adc
into
xchg
xchg
mov
inc
cmp
daa
add
sbb
mov
cmpsb
into
ret
pusha
pop
mov
pop
dec
add
fs
shrl
nop
mov
movb
sbb
sbb
xchg
bound
push
inc
sub
lret
test
nop
sub
dec
xchg
jge
mov
push
jmp
fcmovb
xor
bound
dec
neg
jl
push
mov
scas
popa
xchg
mov
add
repnz
cmp
adcb
insb
mov
or
mov
and
mov
pop
lea
jmp
dec
sub
inc
add
sti
push
ljmp
push
icebp
mov
pop
fstpt
into
outsb
loopne
fcompl
stc
or
inc
cmp
pop
jmp
inc
hlt
cwtl
push
adcb
out
sub
inc
xchg
sbbl
mov
push
xchg
loope
js
movsl
pushw
xchg
sbb
ds
cmp
ficomps
fmul
filds
mov
xchg
mov
in
icebp
or
jnp
mov
dec
imul
xchg
icebp
push
pop
es
mov
call
adc
popa
jns
dec
clc
lret
xor
inc
scas
int3
add
mov
push
xor
sub
sub
mov
jmp
in
into
inc
mov
jo
sbbl
popa
aaa
jns
jb
lret
loop
mov
popf
cltd
inc
jnp
push
sbb
inc
insl
cmp
ret
add
cmp
xchg
test
lods
stc
pop
xchg
jge
in
jnp
jl
xor
out
fidivrl
sbb
push
shrl
xchg
insl
sub
filds
int3
push
pop
cwtl
je
and
xor
out
rorb
cmp
cmp
hlt
xchg
sbb
inc
loop
sbb
push
or
inc
pop
sub
pop
add
aad
andl
in
jle
pop
mov
push
mov
pop
push
push
mov
xor
adc
in
popa
jmp
shll
cmp
jl
jae
shlb
cld
sub
mov
jno
aam
loopne
mov
push
mov
lret
xchg
cmc
mov
imul
adc
ret
xchg
and
nop
cmp
mov
xchg
rcll
push
cli
lea
jo
sbb
pop
int
and
push
das
mov
dec
jns
fisubl
ss
add
cmpsl
loope
and
out
inc
or
sub
lock
imul
mov
in
les
xor
aam
pusha
lds
inc
scas
test
sbb
and
adc
sub
outsb
hlt
sbb
push
jno
add
and
sub
add
mov
pop
fists
mov
pop
jo
test
mov
arpl
insb
and
add
dec
dec
sbb
and
lcall
lret
xor
lahf
push
jno
pop
aas
daa
movsb
adc
and
add
loop
jae
push
push
jmp
aam
mov
jmp
or
aam
and
arpl
push
lods
pushl
push
adc
and
cmp
je
mul
idivl
mov
fbld
mov
cmp
arpl
icebp
ror
add
jge
mov
mov
cs
fiaddl
sub
pop
jle
dec
push
jge
fdivrl
and
sar
clc
arpl
loopne
cwtl
mov
call
pop
decl
push
mov
fldcw
jo
not
jbe
mov
jo,pt
push
jecxz
pop
mov
xor
lret
dec
mov
push
cmpsl
in
ljmp
jg
mov
jecxz
inc
ficompl
lds
xor
and
hlt
movsl
or
imul
dec
int
subb
xchg
out
test
dec
in
push
cmp
pop
sbb
inc
gs
mov
mov
jo
xchg
in
cmp
pushf
mov
push
push
icebp
rcll
lods
aad
iret
sarl
dec
cmpl
mov
jns
adc
and
pusha
sub
stc
jecxz
mov
cwtd
xor
jbe
xchg
cmpl
fninit
cmp
or
cmpsl
jbe
push
cmc
push
mov
push
rcrl
pop
mov
gs
repnz
xchg
cmp
das
imul
mov
fwait
lds
add
imulb
mov
xor
lea
pushf
sbb
rcr
shl
mov
xor
and
push
and
out
mov
movsl
mov
orb
repnz
lock
xor
lock
movsl
inc
push
data16
repz
popf
and
xor
popa
or
ds
dec
or
cmpsl
push
or
cmp
xor
cmpl
cmp
fs
in
inc
add
in
loop
inc
xlat
pop
push
fs
rcrl
mov
rorl
dec
push
and
add
inc
aad
imul
pop
dec
adc
bound
mov
mov
xchg
or
jl
inc
imul
push
push
dec
aas
pop
cmp
imul
lahf
inc
iret
pop
adc
aaa
lods
fstl
adc
jmp
mov
dec
xchg
mov
cltd
movsl
ljmp
push
hlt
mov
rcrl
cmp
lret
pop
sbb
aad
cmp
mov
push
test
push
xchg
fcomps
testl
sbb
test
iret
jmp
and
sbb
aaa
adc
mov
cmpl
or
sbb
xchg
mov
jno
adc
dec
sbb
xchg
sub
sub
sbb
jge
pop
scas
arpl
std
mov
and
xor
addr16
mov
outsl
pop
xchg
rcrl
repz
mov
idiv
int3
pop
or
mov
loop
push
pop
sub
fsubl
imul
cmp
clc
dec
daa
inc
scas
repz
lds
mov
imulb
dec
lret
cli
dec
mov
icebp
andb
and
mov
mov
xchg
test
mov
or
test
pusha
jo
cmpsl
cmp
push
pop
mov
call
pop
cmpsb
xor
sbb
bound
in
push
adc
xor
adc
shrl
adc
dec
xor
call
leave
cld
mov
cmp
or
or
clc
outsl
orb
lret
pop
pop
or
inc
adc
iret
adc
gs
jge
and
mov
pop
pcmpgtw
inc
lcall
data16
cli
repnz
pop
fnsave
jns
lea
jo
pop
loope
mov
ja
mov
push
jmp
sub
in
mov
dec
repnz
or
lock
arpl
mov
mov
aad
jmp
cmp
inc
add
ja
pop
fsubrs
movsl
aas
jecxz
inc
pop
xchg
mov
push
dec
pop
loopne
pop
mov
mov
sub
pop
loop
mov
adc
call
push
dec
in
ret
mov
jle
lds
int
test
jge
and
dec
jae
pop
pop
xchg
cmp
cmp
and
imul
sub
pushf
out
shll
cmp
mov
dec
jp
jne
popf
pop
mov
cmp
jl
rclb
inc
fs
jae
sub
aas
cltd
xchg
pop
adc
inc
aaa
xor
shlb
mov
call
xchg
push
push
aad
ss
cld
cmp
iret
mov
and
clc
pop
sbb
movb
scas
or
sub
std
cmp
and
xlat
jge
imul
aaa
dec
pop
dec
sbbl
and
cli
dec
pop
ror
jge
mov
pop
adc
sbb
lahf
ja
mov
xchg
stos
js
pop
sbb
std
mov
lcall
xchg
jmp
incb
inc
leave
jge
push
sbb
fwait
pop
hlt
aas
ja
pop
xchg
fidivrl
jo
fnstenv
scas
xchg
fcoms
xchg
mov
fiadds
dec
addr16
and
xor
mov
movb
mov
fmull
iret
popa
sbb
std
xor
insb
xchg
pop
sub
scas
inc
insb
fidivs
inc
xchg
xchg
aam
sbb
insl
popa
es
ljmp
ljmp
pop
into
push
popa
cmp
and
add
icebp
mov
outsl
int3
pop
cmp
dec
cmp
out
dec
dec
sahf
outsb
cwtl
mov
xor
repnz
push
arpl
in
and
leave
test
mov
jb
xor
push
dec
addr16
mov
rcrb
xchg
test
or
cltd
inc
push
mov
and
xchg
jo
push
mov
outsl
insb
jge
lcall
sbb
lahf
mov
xchg
loope
mov
and
cmc
cs
jns
cmp
fsubrs
icebp
dec
loope
rcll
xchg
xchg
mov
and
mov
push
mov
sbb
mov
daa
dec
popf
dec
js
xor
mov
xchg
daa
add
sbb
dec
rcrl
pop
cmpsb
adc
push
lods
sbb
pushf
mov
push
xorl
mov
pop
and
xor
in
mov
pop
clc
inc
add
xchg
in
mov
push
and
jbe
jecxz
cmp
arpl
call
outsb
mov
shll
mov
jp
ret
mov
insl
insb
lods
pop
bound
in
pop
das
pop
fidivrl
mov
je
ja
mov
dec
push
in
mov
adc
jecxz
les
int
or
mov
leave
inc
scas
or
dec
mov
mov
or
outsb
js
xor
dec
ss
fs
jns
lcall
in
xlat
lods
fs
push
mov
or
cmp
and
mov
dec
ficomps
jg
dec
insb
in
push
shlb
data16
and
test
dec
in
xchg
fdivr
lret
xor
sbb
sub
and
pop
shr
ffree
mov
popl
fs
jnp
test
cwtl
mov
mov
xor
jb
sbb
repnz
pop
cmp
xchg
cs
jg
ss
pushf
jae
sub
lds
icebp
pushf
lods
aam
das
add
stos
xchg
jo
cli
mov
xorl
jle
mov
inc
xlat
mov
push
sbb
jge
shlb
adc
add
lock
outsl
push
mov
nop
test
into
shrb
pushl
xor
loop
rclb
or
jmp
int
push
stc
inc
pop
pop
stc
mov
insb
sbb
insl
aam
cmp
test
or
stos
enter
lods
in
outsb
adc
push
dec
inc
sti
sub
stc
in
pushf
aam
sub
cmpsb
cmp
aad
mov
and
cld
les
push
xlat
fs
cld
xor
stos
jl
xchg
lods
mov
repz
or
ror
or
aad
stos
mov
mov
dec
repz
scas
fcmovne
std
mov
cwtl
out
pop
mov
mov
pop
lret
fld
pop
andb
rolb
rorb
repnz
adc
push
push
std
ljmp
or
pop
inc
pop
or
addr16
xchg
popf
jns
stos
push
jl
sub
pusha
cmp
mov
sti
mov
push
lea
mov
adc
push
push
les
jp
in
scas
and
jmp
pusha
sbb
dec
or
lods
jl
xlat
les
adc
data16
push
push
push
or
and
cmpsl
cmp
ljmp
xchg
in
das
mov
cltd
and
dec
jge
push
dec
fxch
es
cli
xchg
andl
sub
push
or
scas
out
andb
mov
std
adc
ja
push
mov
je
push
mov
in
sub
sbb
insl
sbb
xchg
mov
pop
and
mov
call
inc
enter
jne
rcr
enter
cmp
push
adc
ljmp
push
or
mov
push
stos
push
movsl
xchg
xor
xor
pop
test
or
jmp
imul
inc
mov
pop
xor
xor
cs
inc
fsub
scas
fiaddl
sarl
dec
inc
insl
pop
mov
enter
fadds
popa
jne
shl
inc
test
jae
add
in
lock
jbe
push
mov
add
sbb
sahf
dec
loop
aaa
mov
mov
and
pop
shrl
imul
dec
pusha
stc
movsl
mov
sub
out
add
xor
imul
imul
xor
or
add
dec
loopne
fwait
cmp
addr16
add
xchg
push
subl
fcomps
scas
mov
in
sbb
in
addr16
mov
inc
es
cmp
dec
ret
mov
inc
xor
fs
repnz
push
and
push
cmp
insb
fimuls
leave
mov
rolb
pushf
outsl
pop
xchg
loopne
hlt
push
test
mov
int3
ret
out
xchg
and
mov
incb
sbb
dec
jnp
xchg
jo
test
and
mov
aam
lret
sub
or
cs
add
cmpsb
mov
imul
and
mov
cmp
clc
jge
test
adc
jecxz
xor
insb
and
loopne
in
scas
test
pushf
pop
jg
add
mov
dec
pop
bound
enter
test
mov
add
xchg
stos
inc
sbb
sbbw
sub
bnd
cmp
dec
mov
in
loope
xor
push
stos
psubusb
jecxz
xchg
sbb
xor
inc
jl
xor
xorl
xor
jns
add
mov
daa
xor
or
sub
stos
inc
fidivs
lods
mov
ret
ror
int3
add
movl
mov
cmp
in
stc
cld
in
ljmp
jbe
inc
aam
clc
jge
jge
xor
mov
stos
pop
dec
jl
das
and
adc
mov
test
cvttps2pi
lret
mov
mov
ret
sub
cli
popf
pusha
insl
dec
out
pop
mov
aas
lock
xchg
ja
pushf
dec
mov
add
movsl
add
xchg
ja
sub
cli
in
in
pop
iret
lods
cmc
hlt
or
xchg
dec
pop
inc
insb
mov
mov
or
or
add
rclb
leave
mov
mov
mov
aad
lret
sbb
push
push
sub
adc
inc
mov
iret
xor
jo
sbb
or
xor
mov
lahf
leave
scas
xor
mov
cld
inc
clc
jg
pop
push
cmp
jl
xor
mov
mov
loop
test
mov
mov
pop
push
fbstp
and
ss
push
sbb
sub
xchg
pop
cmp
adc
xor
orb
or
or
inc
or
cmp
movsb
mov
dec
mov
out
cmpsb
or
jecxz
cs
clc
mov
mov
pop
jge
test
cmp
jmp
test
push
in
xor
jl
jg
cmp
inc
inc
testl
mov
clc
insl
iret
test
stc
lock
inc
jge
cwtl
pop
decb
in
mov
ljmp
scas
add
iret
stos
imul
mov
aas
inc
mov
shll
leave
ljmp
mov
sbb
imul
pop
ficoms
popf
out
inc
cmp
mov
negb
test
ret
inc
rcrl
jp
shl
xchg
push
and
sub
movsl
mov
in
fxam
call
dec
cwtl
xor
xorl
imul
mov
push
xchg
imul
mov
xor
xchg
gs
fstpt
les
daa
insl
push
ss
push
sti
sbb
xor
pop
xor
lcall
nop
imul
dec
scas
sbb
cwtl
mov
mov
lods
or
stos
test
pop
jns
add
fisubs
hlt
outsl
ret
outsl
fucom
xchg
ret
dec
mov
cmp
mov
negl
push
aam
sbb
orl
push
and
xor
mov
mov
push
sbb
inc
inc
cltd
pop
add
sbb
jo
movsl
lods
test
rclb
mov
mov
push
shrb
mov
pop
inc
sbbb
ror
lret
push
bound
jp
pop
shl
xor
mov
inc
popf
xchg
mov
pop
fsub
into
jno
cmp
insl
mov
pop
fs
pop
outsb
mov
stos
in
lret
pushf
push
int3
mov
jecxz
aas
addb
and
or
jb
add
data16
popf
cmc
repz
or
or
cltd
add
out
add
insl
jmp
lcall
mov
iret
jmp
xorl
leave
fs
test
movsb
adc
sahf
fdivrs
jge
add
and
bnd
or
jmp
ljmp
test
insb
inc
cs
sbb
xchg
and
insb
pop
push
jbe
mov
pop
imul
push
adc
enter
jg
insl
cmp
sbb
dec
or
lret
adc
into
loopne
movsb
jl
dec
xchg
and
xchg
nop
aas
in
inc
in
pop
cmp
pop
lods
mov
mov
pop
push
jg
dec
adc
xlat
clc
pop
dec
fmuls
dec
addr16
jmp
jecxz
jl
cmpl
and
sub
mov
icebp
xchg
pop
pushf
dec
iret
push
jp
int
mov
lds
mov
jp
andb
jg
enter
scas
imul
dec
jne
dec
inc
cwtl
mov
aad
dec
addr16
and
or
jecxz
mov
int
out
pop
mov
inc
scas
mov
lcall
push
jp
adc
sbb
out
fwait
inc
cmp
cmpsl
aaa
pushf
call
xchg
notl
mov
adc
insl
leave
lods
ljmp
cmp
xchg
aam
in
fisttpl
je
out
pop
outsl
sbb
sbb
jmp
into
out
inc
add
daa
push
es
shrl
in
push
fsts
mov
out
mov
cwtl
addb
aas
movsl
mov
xchg
inc
popa
repz
mov
out
jns
inc
movsl
push
inc
xor
sbb
xchg
adc
shr
stc
outsb
mov
and
pop
outsb
jg
xor
push
pop
loop
or
scas
xchg
out
std
mov
mov
sbbb
push
xchg
mov
push
and
imul
xchg
xchg
and
mov
mov
xchg
sub
and
sub
subl
or
pop
leave
adc
dec
je
imul
popa
mov
xchg
mov
push
mov
dec
shlb
or
mov
cmpl
dec
lahf
ja
hlt
mov
push
pop
jl,pn
jmp
and
mov
sub
int
inc
cmpsl
xchg
adc
movsb
jl
mov
mov
mov
adc
stc
mov
imul
repz
jae
pop
int3
adc
fstps
xchg
add
pop
pop
cmpsb
mov
adc
xchg
jne
add
mov
mov
push
xor
or
add
pushf
xlat
xchg
pop
jbe
push
mov
dec
rcr
sbb
fldenv
add
push
adc
loopne
push
sub
out
stc
movsl
std
push
jo
and
loop
ja
in
mov
mov
pop
stos
fnstsw
xchg
daa
xor
addb
mov
rcrl
sub
in
rol
pop
or
shr
dec
mov
mov
insl
andl
xorl
adc
inc
push
mov
jge
xor
lods
lock
repz
pop
add
leave
inc
iret
jge
mov
cmp
out
fsubrp
sbb
insl
dec
xor
cwtl
cmp
sbb
int3
adc
fldt
in
sub
out
xor
xchg
cmp
pop
adc
cld
mov
adc
test
scas
aaa
xor
fcoms
jmp
lcall
fidivrs
pop
xlat
xor
nop
add
xchg
icebp
jae
push
gs
btc
jge
pop
repz
xor
sbb
clc
lret
pop
int3
scas
sub
inc
jle
push
in
loopne
jns
std
aas
xchg
and
jbe
flds
mov
mov
pop
xchg
mov
ds
jne
mov
and
sub
jle
xchg
pop
mov
stc
in
ja
lods
or
stos
mov
fiaddl
and
add
test
mov
lds
idivb
dec
mov
or
test
inc
sub
xchg
xchg
jbe
mov
divl
pop
stos
cmp
andl
insb
stos
sbbl
xchg
jno
jl
lret
incb
adc
inc
rcr
dec
push
sar
jae
imul
dec
xchg
push
bound
cwtl
lds
sbb
pusha
popa
decb
popf
int
sbb
inc
inc
negl
hlt
stos
sahf
clc
out
mov
sbb
xchg
call
push
inc
jnp
dec
test
mov
jnp
cmpsb
or
sub
ljmp
cwtl
add
cmp
lcall
popa
add
and
lahf
in
jge
mov
xchg
xor
aaa
or
mov
or
mov
pop
xor
jmp
in
ljmp
scas
clc
push
out
sbb
xor
clc
and
mov
mov
scas
jbe
push
add
mov
lds
push
repnz
jp
xchg
pop
fisttpl
xor
adc
std
fsubrs
int
cld
faddp
adc
xor
arpl
xchg
js
sub
into
jo
mov
pop
test
clc
cmp
mov
loope
fcomps
jl
cmp
cmp
fwait
aaa
movsl
mov
lds
push
mov
jg
neg
add
sub
and
xchg
jo
ljmp
std
sbb
or
scas
ret
push
fisttps
jmp
shll
adc
test
sarl
cwtl
pop
scas
xor
out
aaa
mov
dec
dec
inc
pop
jae
inc
outsl
adc
jnp
arpl
rorl
fs
cmp
sub
fildll
stos
sbb
sti
ret
daa
mov
add
popf
mov
pop
in
out
and
sbb
cmp
cmpsb
rcrb
cwtl
xchg
cld
aaa
add
jbe
aam
inc
xchg
jecxz
inc
fwait
test
dec
mov
mov
repnz
outsl
lahf
cmc
mov
shl
cli
or
sarl
sub
add
push
lcall
or
xchg
and
cld
fdivl
pop
bswap
in
inc
inc
testl
jp
adc
ret
jno
lods
dec
cmp
cmc
cmpsl
adc
fcmovbe
rcll
inc
push
inc
aad
fyl2x
mov
cltd
xlat
mov
fbld
sarl
cltd
ss
cwtl
in
sbb
adc
ret
es
or
scas
cli
mov
decb
es
jnp
sbb
fmull
js
lret
mov
mov
imul
mov
mov
xor
das
xchg
into
jp
push
push
in
inc
push
lock
int3
xchg
and
adc
sahf
outsb
push
loopne
pop
daa
lahf
mov
loop
jg
or
rcrb
mov
mov
jmp
push
cld
cmp
mov
push
jnp
imul
lea
or
lea
adc
int3
stos
or
jle
clc
stos
mov
outsb
pop
aas
out
jmp
jae
adc
ds
jae
pop
in
xchg
push
lods
shll
jnp
iret
xor
leave
xor
inc
mov
adc
xchg
adc
push
mov
inc
in
adc
push
pop
sbb
mov
ss
and
lock
mov
andl
pop
mov
pop
pop
sti
incb
lcall
sbb
inc
inc
sub
inc
and
jnp
gs
rcll
pop
jno
outsl
mov
fadd
fsubl
insl
jo
and
sub
sbb
cs
push
rcrl
stos
pop
push
pop
ljmp
pop
sbbb
sbb
push
mov
pop
mov
mov
pop
lods
les
dec
je
jb
mov
and
loop
cmp
das
pop
inc
movb
test
dec
mov
mov
stc
add
cmpsl
idiv
push
enter
bound
sbb
cwtl
inc
insl
repnz
dec
in
jns
cmp
fisttpll
addr16
ret
add
jmp
cmc
cmpsb
mov
out
push
jae
sbb
or
mov
rcrl
mov
int
lcall
push
mov
dec
push
fdivl
aas
imul
dec
push
stc
sbb
sti
ljmp
jo
out
or
outsl
out
fldcw
mov
pop
cs
and
jp
mov
mov
inc
jmp
and
mov
aad
insl
push
jnp
lcall
aaa
jle
xor
jge
mov
jecxz
add
test
jo
subb
imul
sbb
adcb
add
loope
jp
loop
add
sbb
cmpsl
jae
inc
leave
subb
ja
pop
xor
stc
out
movsb
sub
popa
jbe
mov
mov
inc
nop
cld
cmp
push
pop
cmpsl
or
push
jae
cmp
or
lock
hlt
mov
daa
jne
sub
les
dec
ss
inc
loop
push
sub
or
subb
mov
insb
sub
jbe
nop
add
pop
xchg
insl
dec
bound
inc
in
cmp
mov
es
pop
mov
fcomi
add
xchg
dec
jne
cwtl
xchg
sub
ss
mov
xor
and
xchg
cmp
aam
aaa
push
mov
push
add
pop
popa
out
jbe
mov
jns
inc
xchg
loop
popa
scas
inc
addb
outsb
mov
stos
aam
popl
enter
ficompl
push
ret
or
pop
pusha
and
mov
mov
mul
lds
pop
movsl
push
test
and
mov
cwtl
push
sub
cmc
mov
lods
jecxz
push
or
xchg
add
arpl
aad
loopne
hlt
cwtl
ret
pop
and
adc
push
and
push
jp
test
mov
adc
xor
mov
aam
jbe
mov
or
ds
sbb
inc
cmp
cs
jle
je
lock
cmp
mov
jns
negl
test
xor
adc
popl
cmp
pop
aaa
fsubl
pop
aad
ds
jecxz
int
je
sub
or
out
and
jbe
jbe
cmp
cmc
lods
xor
cmc
cmc
push
cwtl
sahf
sti
jg
jp
jbe
mov
and
ds
nop
jo
cmp
push
or
dec
pop
jbe
xlat
jbe
cmp
xor
or
xor
mov
jle
jg
jae
ljmp
jbe
test
xchg
das
mov
aad
and
aas
push
add
mov
mov
popf
es
fistpll
pop
ret
and
nop
push
ret
popf
sub
loop
test
js
mov
jmp
fwait
and
dec
insl
stos
push
notl
lock
insb
leave
popa
inc
addr16
pop
shll
add
adc
lahf
dec
cltd
jbe
push
mov
out
mov
icebp
ja
aad
inc
ss
sbb
xchg
add
pop
outsl
sahf
nop
sub
lods
lods
cmp
xchg
test
xor
mov
stos
cmpsl
dec
in
xor
push
add
inc
lcall
movsb
daa
ret
xchg
out
xchg
in
movsb
scas
sarl
sahf
lods
pusha
sbb
test
gs
lods
arpl
or
add
testl
popa
lock
pop
imul
xchg
stc
push
jp
xor
mov
into
ret
jne,pt
add
jg
mov
push
dec
push
jo
cwtl
sub
mov
mov
mov
jecxz
dec
and
imulb
addr16
mov
outsb
push
imul
inc
mov
add
xchg
sub
cmp
inc
xchg
sti
sahf
jno
mov
frndint
sbb
xchg
repnz
test
pop
call
out
lods
sub
sbb
jne
scas
sub
out
ljmp
pop
mov
loopne
lahf
sub
mov
daa
sbb
test
push
ffreep
push
sbb
fwait
leave
loop
aaa
sbb
int
fsin
xlat
jp
lret
std
icebp
pop
outsb
dec
mov
mov
mov
mov
xor
pop
sub
aas
jge
or
lods
or
sbb
imul
jecxz
mov
outsb
das
jae
add
mov
hlt
dec
xor
mov
and
xlat
and
pop
lret
stos
or
ds
pushf
xor
fimuls
mov
repz
jnp
add
mov
fneni(8087
das
push
bound
call
pop
pop
aas
outsb
ss
adc
cs
pusha
gs
ret
inc
push
test
jne
leave
or
jb
ss
adc
movsl
aam
cli
popa
xchg
outsb
inc
mov
orl
imul
in
fnstenv
icebp
enter
lock
fisubrl
sahf
add
or
sub
push
ret
mov
dec
shll
xchg
push
lock
movsb
shlb
sbb
xchg
shrb
mov
lcall
stos
mov
repnz
xor
and
data16
sti
out
dec
sub
and
shll
fidivrl
lahf
sbb
or
jg
sti
mov
aaa
jns
push
add
xchg
lock
je
popf
add
jg
out
mov
adc
out
addr16
jb
mov
and
adc
pop
out
lods
pusha
or
cmpsb
pop
jae
lret
fnstenv
lcall
aaa
mov
push
xchg
pop
mov
jecxz
test
sbb
loop
std
sbb
cwtl
outsl
orb
sti
sub
lods
mov
dec
or
ja
jnp
dec
jo
sub
sub
jae
je
test
repz
mov
gs
loopne
fildll
mov
add
mov
or
xchg
shr
jne
fnstenv
imul
test
add
sbb
push
mov
loop
fisttpll
inc
sub
rclb
jns
sti
jmp
cmp
daa
lret
inc
scas
mov
lock
movsl
cltd
dec
cltd
std
sub
sub
mov
xchg
or
add
lods
pop
mov
inc
insl
mov
xor
push
inc
xor
hlt
push
cmc
add
mov
fs
lods
push
push
scas
jp
sbb
push
jmp
xchg
add
pop
sbb
ret
xor
adcl
adc
adc
jg
push
nop
and
or
jg
pop
ja
cmp
push
inc
dec
repnz
xor
shl
cltd
sbb
mov
cltd
jle
addr16
and
push
movsb
data16
mov
inc
jns
test
jbe
es
and
rcl
dec
mov
or
mov
dec
mov
inc
scas
lds
add
mov
xor
je
jmp
cltd
cld
mov
and
js
daa
mov
pusha
jp
xlat
mov
push
sbb
xchg
mov
test
andb
and
and
xor
mov
cmp
leave
testl
or
loop
subb
testl
cltd
or
leave
mov
or
ss
pop
jnp
mov
xor
out
icebp
je
mov
sub
lahf
loop
mov
ret
jmp
xchg
jne
sub
hlt
addb
fnstcw
xchg
jbe
mov
jo
inc
cwtl
cmpsl
inc
sbb
mov
loopne
sub
jle
movswl
mov
jae
xchg
into
ret
jl
ret
push
inc
adc
pop
cs
jecxz
cmpsl
xchg
out
jg
xlat
jmp
xchg
add
add
xchg
mov
aaa
xor
mov
insl
or
mov
or
das
in
int3
mov
dec
in
adc
cmpsb
iret
xchg
pop
adc
test
cmp
popl
aad
dec
dec
xorl
ret
add
aad
push
adc
mov
push
cltd
inc
push
cmp
mov
mov
xchg
mov
fadd
in
pop
int3
dec
lret
jmp
dec
jb
das
lret
xor
leave
nopl
ret
rorb
nop
sbb
and
mov
lock
lods
mov
jge
int
roll
imul
inc
sbb
adc
fmuls
fld
push
loop
lea
pushf
jecxz
rcrl
lahf
je
sub
pusha
test
sbb
lret
sti
sbb
aad
lods
xor
in
cltd
sarl
cs
mov
ljmp
lods
cwtl
daa
shll
adc
fidivrs
adc
pop
mov
bound
mov
test
jo
inc
ljmp
and
mov
pop
stos
push
mov
js
outsb
ret
dec
sub
push
xchg
notl
pusha
inc
mov
jbe
xchg
popf
sbb
adc
sbbl
ficomps
shlb
push
std
cmp
daa
fdivrs
pop
cwtl
cmpl
pop
mov
psrlq
pop
xor
adcl
push
xchg
adc
shr
rorb
push
mov
adc
adc
cmp
test
ds
sbb
mov
stos
aas
dec
dec
push
or
mov
call
add
jb
gs
mov
iret
loop
in
mov
and
sbb
jle
movsl
mov
pop
adc
cs
add
rcll
mov
push
lock
push
xor
pop
push
mov
aam
rcll
adc
jae
push
sub
dec
test
stos
inc
push
jno
mov
or
cmp
arpl
ret
push
mov
push
dec
movsl
ret
push
into
testb
add
into
stos
outsl
jae
clc
lods
cltd
or
lcall
xor
adc
into
ror
jno
lcall
sbb
mov
mov
sbb
cltd
push
sub
adcl
push
cmpsb
or
imul
xchg
rol
jb
xchg
cs
mov
sub
adc
cmp
xlat
mov
sti
mov
mov
aad
int
icebp
xchg
in
fisubl
mov
push
mov
jecxz
cmp
scas
jbe
mov
lods
andl
fstpl
xorb
or
aaa
dec
add
or
iret
ret
or
push
push
push
xorl
fs
rclb
mov
ss
xchg
pop
and
and
or
fnstcw
sub
mov
xor
adc
loop
roll
cmp
mov
into
mov
jecxz
cmovg
gs
jecxz
mov
stc
popa
cmpsb
fsubrl
aas
leave
mov
push
mov
push
imul
jne
mov
mov
mov
nop
rclb
push
mov
push
pop
xor
mov
sbb
stos
mov
sub
insb
jns
pop
movntq
bound
jg
mov
push
adcb
sub
mov
roll
xchg
sub
pushf
jecxz
je
dec
ds
add
daa
lods
dec
sbb
mov
pop
into
scas
cld
lret
adc
sub
clc
pop
out
sarb
outsl
lods
lret
add
mov
xor
xchg
xor
dec
adc
mov
or
adcl
jns
and
jne
jp
out
lods
stos
sbb
test
pop
outsl
insb
int3
mov
mov
js
lods
adc
insb
lock
xor
pop
inc
mov
push
pop
popa
mov
rcrb
mov
adc
push
and
jmp
xor
lret
mov
cmp
in
pop
rolb
sbb
adc
testb
sbbl
in
movsb
add
rcll
xchg
lds
lods
stos
nop
mov
sub
or
adc
imul
repz
in
pop
sub
mov
das
mov
xchg
adc
xor
dec
mov
xor
cli
and
mov
imul
or
cmc
push
or
xchg
out
sub
mov
pop
mov
push
out
sub
fstpl
adc
test
mov
pop
inc
mov
movsl
dec
and
cmp
shl
stc
shll
push
add
mov
outsb
xchg
rcrb
mov
cmp
popf
cltd
in
sti
adc
mov
pand
js
arpl
inc
js
and
xchg
inc
xchg
push
nop
inc
fistps
xchg
leave
sbb
push
inc
push
dec
scas
fnsave
jb
stos
mov
xor
mov
hlt
jo
jo
xlat
jnp
clc
lds
cmp
imul
mov
or
cmp
wbinvd
inc
or
ja
pop
stos
aas
sub
imul
jbe
pusha
cmpsl
std
xor
pop
packsswb
or
sbb
xchg
mov
xor
jle
cmpsl
popf
jb
push
pop
lahf
bound
out
into
jge
xchg
scas
sub
enter
xor
push
pop
bound
dec
enter
ljmp
lcall
jb
faddl
push
nop
gs
and
xchg
sbb
jmp
outsb
jns
out
loop
xor
addl
out
lock
cwtl
push
dec
mov
or
jmp
lret
je
out
shll
sti
inc
inc
jbe
add
mov
std
push
adc
dec
inc
aaa
pop
sbb
addl
outsb
cmc
enter
subl
xor
clc
cld
ficompl
add
inc
and
mov
sub
popa
dec
rcrb
cmc
and
dec
cmp
mov
test
dec
jb
shrb
xchg
xor
adc
sub
imul
sbb
cmp
ja
negb
pop
inc
jp
std
shll
cmp
pop
in
mov
mov
push
adc
pop
cmc
or
pop
mov
xor
xchg
fwait
scas
movsl
int3
jmp
mov
jbe
in
enter
inc
sbbl
pop
push
lock
scas
sbb
lods
xchg
inc
pop
add
push
in
adc
sarb
add
push
pop
ret
fidivrs
mov
push
out
and
lock
jg
mov
jl
imulb
movsb
lret
aam
scas
lret
call
mov
jmp
xchg
jae
scas
out
cmp
lret
ss
jge
jmp
xchg
and
jae
jns
pusha
push
cmpb
ret
mov
in
fwait
push
daa
outsb
sahf
mov
xor
outsl
repnz
sbb
xchg
add
scas
xor
hlt
xchg
jecxz
pop
aaa
push
xor
ljmp
cltd
jb
xor
mov
pop
test
adc
xchg
fs
movsl
loop
pop
sub
pop
aad
mov
cmpsb
ss
aad
decl
aas
pusha
mov
nop
out
jge
mov
jp
push
jl
out
sub
mov
inc
out
pop
fcompl
pop
jae
flds
clc
or
pop
add
dec
jl
mov
ss
in
out
std
cmp
add
mov
stos
push
data16
or
outsb
sub
lods
imulb
push
jle
lcall
adc
iret
push
sub
inc
mov
dec
js
jne
adc
adc
pushf
arpl
add
js
sub
mov
outsl
out
cmp
in
inc
mov
cmp
arpl
sarb
test
cmp
mov
enter
nop
ret
add
add
dec
shll
push
inc
sub
negl
xchg
mov
aam
xlat
and
jl
xchg
sub
sarl
leave
std
pop
mov
pushf
ds
popa
lcall
push
cmp
shll
jp
loopne
jnp
jecxz
leave
or
mov
pop
rclb
mov
test
push
sbb
aaa
mov
bound
xor
pop
adc
adc
flds
push
xor
lds
test
mov
xchg
mov
outsb
cmpl
mov
cltd
cmp
xchg
lret
push
addr16
mov
loopne
ret
js
inc
xor
and
ljmp
jo
mov
mov
imul
lret
mov
aam
pop
xchg
dec
sub
call
mov
add
xchg
xor
mov
out
cmp
xor
dec
jge
adcl
lods
xor
loopne
rorl
js
cmpsb
fldl
push
in
inc
and
cmpps
inc
call
lret
lock
cmp
lret
js
xchg
pop
xchg
int3
stos
xchg
push
je
insb
lcall
sbb
jns
lret
adc
int3
sahf
ja
add
hlt
lds
xchg
pop
and
sub
das
push
sarb
mov
add
stos
js
xor
loopne
add
je
jp
and
jns
jb
push
mov
repz
or
mov
aaa
pop
jmp
repz
lahf
shlb
and
movsl
and
enter
xor
in
inc
pop
sarl
cmp
je
xchg
xchg
add
orl
dec
jecxz
push
shr
lock
mov
rcl
frstor
adc
in
jns
ret
aas
xchg
sub
and
sbb
add
mov
jmp
sarl
or
fxch
push
or
js
xchg
adc
flds
leave
push
fadd
out
fstpl
repnz
push
mov
xlat
mov
pop
add
and
mov
ficompl
pusha
push
sar
mov
sbb
cs
lods
popf
jb
sbb
bound
out
loope
or
push
std
push
das
mov
outsb
add
sbbl
loopne
insl
jmp
jae
mov
ss
stc
or
ficoms
mov
popa
xchg
add
jbe
mov
cmpsl
push
sbb
call
xor
out
xor
repz
clc
rcl
mov
adc
xor
xchg
jp
hlt
push
jo
cwtl
and
fsubrs
pop
mov
sbb
mov
pop
push
mov
loope
push
push
dec
mov
ljmp
lods
icebp
outsl
add
roll
jge
or
fs
mov
gs
push
pushf
sub
gs
repnz
dec
push
das
test
jg
addr16
jg
push
fcomps
fsubp
xchg
adc
push
mov
pop
cmp
stc
sarb
or
dec
mov
loop
adc
fistl
jp
dec
ret
cmpsl
out
int3
push
and
sub
xor
mov
addl
inc
int
aaa
ss
inc
inc
mov
jnp
push
les
orb
into
test
xchg
nop
mov
rcrl
mov
pop
inc
sub
js
add
and
sub
pshufw
xor
pop
jb
mov
sub
inc
sbb
out
mov
xchg
je
popf
xlat
xlat
push
cmc
notb
push
mov
mov
push
inc
cmp
test
mov
cli
subb
mov
popf
xor
int
jp
out
aas
shrb
iret
lcall
jmp
mov
cs
dec
jne
push
sub
lock
xlat
lret
mov
xorl
popf
cmp
dec
sub
mov
add
scas
and
cmc
push
or
adc
xorb
jecxz
dec
pop
fbstp
push
jns
pop
adc
mov
pop
mov
push
pop
mov
xchg
lret
je
dec
sub
divl
iret
mov
push
aaa
pop
int3
fs
arpl
and
leave
lods
shlb
xchg
and
push
lds
pop
movsb
pop
push
pop
cli
push
mov
mov
inc
movsl
int3
xchg
jg
das
or
lods
dec
stos
xorb
popf
xor
jb
aaa
mov
jne
lret
int
jb
subb
jmp
mov
mov
loopne
jle
arpl
cmpl
xchg
lahf
pop
sbb
js
sbb
inc
cli
in
xor
in
insb
test
push
fsubs
imul
sahf
xor
or
xlat
mov
add
jae
ficomps
sbb
lods
aaa
mov
lock
aas
and
add
das
mov
out
test
stc
mov
and
push
loope
mov
xor
dec
in
cmpsl
xor
adc
xor
idivl
lcall
xchg
movsb
pop
cmp
pop
sub
pop
mov
loope
xor
jp
movsl
mov
in
roll
and
xchg
loope
adc
xor
enter
add
push
stos
fidivl
stos
sub
imul
test
cmc
shrl
jb
inc
sbb
imul
inc
rcr
lods
jp
mov
and
out
in
popa
lock
dec
data16
sbb
push
mov
and
add
sub
or
stos
adc
in
push
imul
aad
sbb
fwait
cli
mov
cltd
add
pusha
out
bound
and
lret
sub
cmp
ljmp
mov
pop
xchg
arpl
pop
stc
outsl
adc
xlat
into
pop
aam
adc
xchg
add
iret
stc
stc
inc
test
push
test
hlt
lret
nop
push
aas
pop
inc
testb
add
shll
setle
pop
xlat
and
mov
sbb
and
bound
adcb
adc
dec
imull
jl
imul
outsl
movsb
sbb
ja
mov
inc
jae
pop
push
arpl
out
dec
ja
outsl
mov
xchg
pop
push
mov
hlt
pop
cwtl
xor
repz
sbb
lods
push
jne
out
inc
sub
xor
mov
jecxz
negb
sti
xchg
les
shlb
stos
or
lock
mov
and
enter
or
ret
and
pop
mov
jnp
arpl
shlb
mov
push
or
pushf
out
outsb
insl
and
lret
test
sbb
mov
or
push
rcll
push
sub
sub
enter
xchg
cld
mov
jne
sbb
pop
pop
or
inc
les
mov
movsl
mov
pusha
adc
or
mov
xchg
data16
push
mov
inc
adc
sbb
movsb
xlat
inc
mov
std
sbb
mov
sub
scas
ja
lret
frstor
xchg
jnp
mov
sbb
inc
and
fwait
es
adc
movb
jecxz
push
fldcw
pop
sbb
imul
pop
movsb
pop
gs
inc
sub
dec
sbb
adc
dec
movsl
cli
dec
push
jb
xchg
in
jecxz
test
fs
loope
push
testb
jno
and
leave
pushl
cmp
iret
or
mov
push
pop
add
push
jbe
sbb
je
and
cmc
ds
in
js
loop
push
enter
mov
push
add
bound
or
int
sbb
sub
add
xchg
mov
dec
cmpb
or
in
xchg
pop
shr
aam
subb
cmp
lds
mov
daa
loope
out
xor
jbe
jecxz
adc
int3
dec
push
aam
inc
xchg
or
xchg
cs
jp
out
int3
movsl
addr16
rcrl
push
roll
jl
inc
mov
dec
push
aam
loop
xor
pop
sbb
dec
mov
push
and
movsl
push
jge
mov
loop
xchg
in
jmp
mov
adcb
test
push
jae
cmc
jg
jnp
stos
and
je
sub
js
jno
test
dec
adc
sbb
daa
xlat
jge
jb
lret
jl
mov
push
or
push
es
mov
lock
mov
lret
out
sbb
lahf
or
lcallw
mov
ror
xor
push
sub
cmp
mov
flds
popf
and
mov
pop
sub
in
push
pushf
cmp
mov
cmp
dec
xor
inc
fdivs
pop
inc
mov
dec
inc
and
inc
sbb
leave
sbb
repnz
mov
lods
jecxz
aas
xchg
or
cmp
xor
retw
in
add
xor
lds
sar
hlt
inc
or
cmp
add
and
lret
sub
jp
jne
dec
ret
icebp
icebp
in
push
jnp
call
fnstsw
mov
dec
inc
je
insb
or
std
cmp
and
mov
dec
mov
out
xor
in
jno
dec
lock
push
icebp
jno
xchg
xchg
sbb
enter
aas
out
mov
stos
dec
add
scas
inc
je
aas
cmpsb
fadd
mov
dec
add
movsb
cmpsb
nop
jle
popw
fnstenv
movsl
jne
lock
mov
call
or
scas
lock
in
testl
sahf
sub
push
cmp
adc
scas
or
mov
push
das
pop
ret
fmulp
xor
not
mov
add
dec
lods
push
cmp
and
cmp
inc
mov
adc
leave
sub
and
push
mov
jno
cmp
cmp
dec
call
pop
out
fbstp
mov
hlt
inc
cmp
xor
je
mov
inc
push
mov
pop
test
mov
ljmp
and
sub
outsb
stc
int3
pop
or
adc
lock
mov
dec
or
cwtl
sub
pusha
movsl
pop
mov
ljmp
mov
mov
ds
jns
loopne
out
sbb
nop
call
mov
xor
jge
lds
push
inc
cmp
shl
inc
dec
jecxz
pusha
mov
add
add
and
lds
xchg
mov
shlb
adc
xor
mov
cmpsl
stc
mov
jmp
pusha
lock
lea
loope
xor
jge
ret
mov
xlat
or
loopne,pn
in
ret
add
dec
loopne
mov
notl
inc
dec
loope
inc
jecxz
std
sahf
mov
fstps
aas
fnstenv
xchg
add
inc
cmpsl
mov
iret
and
aam
sbb
movsl
push
inc
int
xchg
and
sbb
or
add
xchg
sub
sbb
fistl
push
data16
push
cmpsl
in
stos
pop
das
lods
loopne
popf
in
lcall
and
ret
mov
addr16
test
inc
cmp
mov
cli
push
dec
popf
sti
lret
adc
mov
sbbl
jno
cmpsb
mov
lret
jnp
out
xor
outsl
or
aam
aaa
pop
fldpi
jmp
mov
push
js
or
popf
sbb
loop
push
stos
push
pop
xchg
roll
inc
subb
mov
mov
pop
aam
shr
outsl
mov
pushf
dec
sti
stc
ret
rcrb
movsl
pop
and
push
pusha
push
clc
pushf
cmpsl
push
push
test
cmc
cld
mov
push
mov
cwtl
ss
mov
dec
mov
inc
std
dec
cmc
lock
fnstenv
test
fsubl
cmp
outsl
adc
data16
mov
mov
jle
mov
inc
and
jle
adc
sbb
xor
mov
stos
adc
mov
cmpsl
cmpsb
lea
cs
push
call
add
dec
push
cmp
lods
cmp
cmpsb
push
popf
rcrl
divb
jo
fimuls
icebp
cmp
fwait
pop
test
shr
push
jb
in
nop
pop
sub
or
pop
xchg
sbb
lods
xchg
in
scas
in
xor
mov
cmp
mov
xor
rcll
cmp
and
cmp
or
icebp
jp
mov
out
test
rorl
adc
jno
in
sub
gs
rolb
mov
mov
pop
loop
adc
les
dec
mov
mov
and
iret
or
mov
add
or
mov
popa
adc
mov
push
aad
dec
fldcw
sub
repz
pop
loope
mov
xlat
sbb
inc
pop
sub
lds
scas
adc
cmp
inc
add
out
daa
rcll
dec
lret
jg
inc
mov
dec
mov
push
xor
adc
lret
mov
mov
add
dec
pop
xor
ret
xchg
pop
shl
jno
popa
sahf
into
movsl
add
dec
dec
pop
push
or
xchg
aad
mov
adc
mov
xor
cs
cltd
sub
cmp
mov
fnstsw
shlb
push
jnp
fdivrl
rorl
xchg
nop
in
lahf
lods
pushf
les
les
cmpsb
jl
jb
rorl
push
mov
and
movsb
stos
inc
sahf
push
sub
stc
stc
inc
sbb
lods
jo
jbe
and
loopne
jb
jno
pop
jmp
push
jo
push
or
mov
or
bound
xchg
push
fs
loopne
jecxz
rol
adc
push
push
bound
bound
sub
test
mov
add
lcall
mov
dec
int3
fisttpl
jmp
cmpsl
xor
cmp
push
push
or
mov
insb
nop
fisttpl
lcall
mov
jmp
cmp
int3
cmpsb
ljmp
mov
inc
fistpll
stos
jl
sti
or
lods
jno,pn
rcrl
mov
cmc
into
and
push
xchg
mov
jns
aad
in
pop
sarb
fists
rcrb
mov
call
or
outsb
inc
test
mov
imul
sbb
pusha
pop
stos
aad
enter
cmp
lret
mov
shll
rorb
rcl
outsb
xlat
adc
sarl
cmp
not
shlb
sub
lret
push
popf
iret
fsubl
rorb
mov
stc
and
orb
insb
shl
and
sti
mov
sub
inc
lds
mov
xchg
lock
jo
out
rcll
in
mov
mov
fs
cli
mov
subb
loop
insl
in
jae
mov
xchg
insl
xor
sahf
mov
xor
add
aas
xchg
stos
dec
sub
enter
insl
mov
daa
mov
jb
ds
fldenv
jl
lods
add
pop
in
push
adcl
xchg
mov
pop
push
sahf
jg
add
adc
push
jns
jbe
mov
xchg
xor
adc
and
jo
mov
test
inc
push
test
bound
mov
dec
mov
sbb
mov
out
fisttpll
lds
or
mov
aad
sub
sub
add
bswap
cwtl
stc
pop
push
xchg
push
jmp
push
xchg
jp
sub
loop
sub
jmp
mov
imul
mov
pop
jge
inc
outsb
mov
push
cmp
xor
bound
add
call
fisttpll
movb
jo
push
je
mov
push
pop
jns
das
insl
loope
jp
push
jnp
sti
repnz
jecxz
push
xor
out
mov
je
pop
mov
and
movsl
or
jmp
popf
xlat
push
sub
std
and
xor
pop
xor
pop
and
shrl
adcb
cmp
les
cmp
pushl
jno
cmp
in
jbe
popa
into
sbb
arpl
cmp
dec
popa
inc
sbb
dec
fcomi
pop
cld
call
sub
arpl
xchg
xchg
lahf
out
repz
pmaxub
add
push
jne
jl
loope
add
xor
in
out
mov
fxch
int
mov
sti
lcall
mov
fsubs
dec
and
repnz
negb
jnp
je
and
shr
xchg
push
loop
sbb
sub
aam
rolb
cmc
adc
repz
inc
fisubs
jp
mov
and
pop
cli
testl
cmpsb
repz
inc
test
dec
sti
imul
mov
mov
mov
inc
cmp
ror
stos
inc
loopne
cltd
mov
inc
jmp
mov
mov
repz
sbb
push
xchg
pushf
sub
cmp
sub
pop
popa
lods
lahf
outsl
in
loop
adc
mov
mov
mov
shlb
push
pop
add
mov
mov
ja
int
mov
stc
cld
cltd
rcrb
sbb
dec
iret
xor
add
xor
jmp
leave
pushf
sbb
daa
fsubrl
push
sub
mov
insb
ljmp
fsts
test
push
inc
lcall
push
mov
or
in
ret
sub
and
jo
push
js
addr16
cmp
pop
and
cmpsb
jnp
sbbb
addl
push
xor
inc
lret
cmc
call
outsl
sbb
and
adcb
loope
push
xchg
sbb
lock
jns
mov
out
dec
mov
in
mov
or
repz
iret
pop
fdivl
out
xlat
jmp
sub
loop
leave
stos
pop
pop
cltd
jne
sbb
int
movsb
xchg
js
jo
pop
bound
push
hlt
cmp
inc
int
jns
je
xbegin
out
mov
dec
jge
jae
loop
xor
push
mov
mov
push
lea
iret
push
pop
adc
movsl
pop
jmp
gs
xchg
insb
dec
xlat
in
outsb
dec
xchg
aam
or
pop
xchg
pop
lahf
repnz
mov
mov
xchg
jno
pop
roll
loope
lods
or
dec
sbb
popa
out
xchg
xor
lock
jnp
mov
xor
pop
xchg
cld
mov
pop
mov
mov
dec
fistl
sti
jl
jecxz
sbb
inc
adc
es
xlat
fwait
push
in
push
pop
push
and
out
lea
xchg
loop
leave
mov
jns
cmp
pushf
mov
gs
stos
mov
cmp
dec
rcrb
and
aas
add
cmp
shl
dec
imul
jg
idiv
mov
frstor
and
dec
fs
push
inc
aas
cmp
jle
mov
sbb
mov
dec
push
push
sbb
lahf
push
pusha
fldenv
pop
mov
xor
add
push
mov
imul
fdivr
jmp
aaa
push
popf
filds
adc
mov
std
fsubl
test
inc
push
jmp
in
or
inc
icebp
in
std
pop
mov
pop
pushf
cltd
mov
add
adc
iret
xor
push
es
arpl
iret
jbe
cmp
adc
cmp
xchg
xor
jmp
dec
pop
jns
je
mov
hlt
lods
scas
sbb
pop
mov
ret
add
or
pop
and
sbb
xor
mov
xorb
add
push
ret
add
cmp
data16
mov
jle
shlb
push
mov
sti
fdivs
addl
outsb
fwait
inc
mov
push
pusha
daa
push
jle
sbb
cwtl
xchg
adc
and
iret
or
mov
sub
mov
test
les
mov
cmc
inc
int3
test
das
inc
mov
call
cltd
push
jb
andl
pop
imul
cmpb
imul
andb
xchg
cmpsl
hlt
out
cmpsl
pop
fs
cwtl
outsb
add
inc
mov
fsubrl
xchg
dec
mov
jecxz
fmull
test
pop
and
inc
ss
or
cli
je
adc
roll
mov
out
pop
shr
push
icebp
push
repz
subb
cmp
ret
and
cli
sbb
jecxz
xlat
ret
xchg
push
adc
mov
mov
mov
shlb
dec
push
out
dec
in
les
pmullw
push
xor
test
pop
mov
xor
xchg
sub
xchg
mov
out
hlt
mov
mov
or
adc
sub
sbb
cmp
adc
cmc
xchg
or
and
dec
mov
into
jae
push
dec
aam
popf
push
push
icebp
lahf
jbe
out
int3
fnstenv
inc
lods
fs
divb
mov
adc
xor
push
sub
push
dec
push
cmpsl
mov
push
lret
and
lcall
push
dec
aaa
xchg
jns
andl
push
pop
test
and
mov
je
xorl
stc
faddl
rcl
mov
add
sbb
adc
dec
into
mov
pushl
xor
push
lahf
sub
scas
aaa
pop
mov
mulb
and
arpl
in
adc
or
and
outsl
int3
fdivl
dec
out
adc
test
add
xor
push
fadds
add
pop
mov
xor
xor
outsb
pop
sub
xor
lods
mov
cwtl
cmp
lret
or
loopne
cmp
sahf
loop
xor
mov
mov
ja
fwait
out
pop
imul
je
movsb
inc
loop
mov
stos
inc
pop
add
out
pop
imul
inc
loop
in
insb
mov
rolb
dec
stos
xor
jo
fwait
lods
daa
in
adc
int3
cmp
int
dec
mov
adc
dec
inc
dec
push
adcb
inc
push
push
lret
sahf
hlt
out
jg
xor
repz
ds
pop
xchg
test
test
jp
inc
xchg
or
fbstp
push
xchg
dec
aad
xchg
push
xor
add
lods
rclb
jge
mov
clc
sub
sub
pop
xchg
fistps
aam
add
cs
adc
movl
inc
cmp
frstor
je
cli
sbb
mov
mov
jmp
inc
adcb
jnp
sbb
and
fcmovnbe
dec
adc
push
mov
insb
pop
sub
pop
mov
imul
repnz
fildll
fcomps
popa
in
popa
loopne
pop
pop
fwait
negl
jp
cmp
pushf
int
push
inc
loope
xchg
xor
inc
mov
mov
ja
mov
or
push
out
movsl
xor
xor
add
jmp
and
sbb
mov
jb
rcrl
in
xor
mov
test
mov
les
jo
ljmp
das
and
or
pop
test
orb
loopne
data16
push
mov
cld
cltd
mov
jnp
xchg
mov
aam
lock
test
dec
xchg
decb
xor
cmp
ljmp
cmc
adc
inc
pop
int3
repz
cmc
cwtl
or
or
mov
sub
inc
jle
pop
push
or
push
mov
xchg
mov
push
pop
add
sbb
notl
fwait
sub
xlat
mov
aad
out
xchg
xchg
pop
sub
inc
into
loope
jbe
push
rcl
mov
sahf
inc
mov
daa
aad
pop
jns
rolb
add
addr16
call
xchg
stos
adc
sti
inc
add
push
fmull
or
scas
lock
add
pop
loopne
fildl
jnp
mov
pop
rcll
xchg
test
mov
add
push
mov
movsl
and
dec
dec
data16
add
push
fwait
adc
add
orb
clc
jge
aad
sub
push
js
dec
scas
lcall
pop
jl
xchg
cmp
push
cmp
std
or
xor
repz
push
jg
or
ss
mov
push
pop
int3
or
mov
push
test
in
outsb
lds
dec
cmc
into
cmpl
arpl
insl
es
fisttpll
mov
or
out
arpl
ljmp
fidivrs
and
mov
test
cmp
das
and
mov
mov
inc
pop
aam
outsb
or
shl
mov
sub
dec
mov
pop
pop
mov
int3
sar
mov
js
sbb
ljmp
rorb
in
fisubl
faddl
lcall
xchg
insb
lahf
cmp
enter
aaa
hlt
push
dec
mov
out
dec
dec
frstor
xor
xchg
hlt
adc
adc
adc
mov
sub
xchg
push
jnp
orb
or
icebp
dec
xor
shrb
cmp
in
jl
mov
out
iret
mov
push
adc
push
mov
jl
xchg
loopne
cs
jmp
ds
jae
mov
push
sbbb
std
adc
xlat
push
mov
mov
push
sbb
fcomps
mov
repnz
nop
push
arpl
mov
test
and
out
das
insl
daa
fs
fisttpll
popa
sub
or
aas
add
pop
stos
jbe
data16
pop
fcoms
daa
into
fdivrl
and
xlat
fistpl
ret
inc
inc
or
and
out
mov
test
jno
cltd
mov
jae
hlt
loopne
jae
pop
xlat
mov
jmp
mulb
cli
into
jg
push
pop
shrb
jnp
je
bound
pushf
jns
add
xchg
inc
and
in
add
xor
lahf
inc
dec
repz
fcmovnb
mov
in
mov
jle
ret
inc
ret
cli
shrb
ljmp
adc
cmp
inc
lcall
and
stc
std
fstl
push
add
cli
ret
fwait
scas
arpl
icebp
inc
dec
mov
leave
mov
mov
lods
data16
mov
push
pushf
add
cld
dec
and
jecxz
jnp
das
pushf
push
icebp
fs
ret
sub
pop
das
adc
dec
and
push
or
pop
push
mov
insl
icebp
in
jns
sti
sbb
sub
or
shll
push
sbb
add
cmp
dec
out
ret
popf
jl
ljmp
mov
cmovnp
push
pop
add
jp
mov
dec
xchg
adc
idivl
jne
xchg
ret
and
jmp
add
xor
push
fwait
loopne
push
lods
pop
adc
xchg
das
cmpb
jecxz
fsubl
or
xchg
adc
mov
dec
sarl
popa
ret
jge
out
or
stos
inc
xor
das
jmp
add
in
inc
mov
sub
push
aas
cmpsl
mov
addl
lahf
sub
add
dec
dec
mov
clc
push
sbb
mov
push
cmpsb
jae
and
jp
daa
rcrl
pop
lock
fwait
pop
cmp
xor
xchg
mov
jmp
in
adc
inc
xchg
arpl
lea
cmp
scas
mov
adc
and
sub
jne
andb
mov
cmp
js
mov
jp
inc
scas
arpl
imulb
inc
aam
jns
jns
addr16
inc
push
and
sbb
xchg
fimuls
outsl
and
pop
aas
pushf
fdivs
fmuls
xor
mov
hlt
xor
mov
lret
ja
faddl
stc
in
imul
imul
pusha
pushf
aas
pop
inc
jns
mov
push
rorb
adc
pop
xor
push
sub
repnz
pop
cmp
ret
adc
lea
iret
cmpsb
mov
adc
xor
sbb
mov
sub
call
cli
mov
mov
mov
nop
addr16
cmpl
ficomps
add
clc
aaa
sub
sbb
lahf
xor
sub
pop
pusha
sbb
adc
jne
sub
adc
push
jge
add
fildll
mov
shlb
call
arpl
aam
mov
dec
push
or
mov
sbb
les
outsb
ljmp
pop
data16
adc
cmp
push
lds
mov
aas
dec
adc
loopne
imul
cmp
cwtl
pop
push
mov
pop
popf
xor
aam
mov
stos
subl
sbb
inc
xor
xchg
mov
add
add
jle
xor
xchg
jge
jns
cs
sbb
jbe
mov
movsb
test
mov
jbe
movsl
ds
xchg
mov
andb
adc
loop
sbb
cltd
dec
and
mov
test
out
dec
pop
jbe
cwtl
test
push
fs
pop
inc
imul
add
mov
push
clc
mov
outsl
xchg
xor
addl
jl
daa
aam
sarl
and
fcmovnbe
loope
dec
add
jl
pop
and
xor
shr
push
bound
into
out
outsb
mov
jnp
dec
pushf
or
xor
and
test
jno
add
pusha
mov
dec
mov
adc
stos
sti
ja
or
or
xchg
pop
ss
pop
adc
mov
into
aad
pop
mov
aad
push
xor
jne
daa
inc
push
mov
call
rorl
or
scas
adc
mov
std
mov
pop
cmp
xchg
lock
lea
mov
adc
js
adc
out
sahf
add
push
ds
shrb
cmp
ret
and
loop
outsb
sbb
sub
mov
pop
lret
push
add
pop
test
aam
push
dec
pushf
ds
incb
test
shrl
js
inc
lea
ljmp
aaa
xor
sub
popf
sub
xor
in
stos
or
scas
dec
cmc
mull
and
dec
out
mov
cmc
fdiv
sahf
fwait
roll
mulb
push
cmp
add
hlt
test
mov
stos
pop
gs
ds
gs
cli
loope
fistl
sbb
inc
repz
pop
in
inc
jns
iret
mov
push
or
in
jmp
xchg
mov
mov
in
push
adc
mov
jge
out
mov
enter
pop
pop
sbb
xchg
dec
pop
add
cli
es
xor
sarl
int3
xchg
xchg
or
les
xlat
push
push
add
pushl
adc
or
inc
jae
xor
imul
sub
lea
fchs
rolb
cmpsb
xchg
shlb
dec
shl
mov
mov
xchg
in
outsb
insb
adc
iret
xor
jecxz
dec
aas
cmpsl
sbb
cs
add
std
pop
jle
xchg
repnz
aaa
rcrl
jno
cmpsl
jp
sar
mov
cmp
jecxz
loop
sub
fdivrp
cltd
movsl
sbb
ss
imul
and
repnz
mov
inc
adc
push
imul
pop
sub
dec
cwtl
fidivrs
xor
insb
sti
aad
jne
popl
pop
sbb
sbb
cli
insl
cmpsl
out
inc
jecxz
sbbl
shll
jge
stos
add
xor
outsl
enter
xchg
and
daa
cmp
mov
popf
loopne
pop
inc
sbb
push
loopne
add
and
add
popa
or
inc
push
push
jae
pop
rcl
xor
mov
test
sahf
enter
ficomps
int3
xchg
outsl
pop
push
test
mov
sub
or
dec
pop
or
push
fistps
or
cld
mov
adc
jb
sbb
mov
flds
or
mov
pop
sbb
ja
ret
adc
pop
sub
out
add
into
dec
std
or
rol
adc
data16
inc
jp
jae
jge
cwtl
test
jmp
or
gs
adc
movsb
mov
adc
loope
cli
out
dec
or
xchg
mov
idivb
add
add
inc
sbb
xchg
test
lods
in
cmp
cmpsl
nop
mov
push
mov
mov
cmp
xchg
test
pop
jo
dec
adc
mov
test
lods
into
lea
lret
popf
lahf
jmp
xor
enter
int
out
mov
arpl
lret
aaa
js
fisubl
jno
shl
inc
jmp
mov
std
cmpsl
add
je
mov
clc
push
movsb
mov
dec
mov
mov
sbbl
xor
push
adc
adc
sar
xchg
mov
int
das
xlat
mov
ret
int
leave
mov
mov
mov
imul
outsb
ss
pop
or
sub
cmp
dec
mov
pop
bound
in
sbb
mov
pop
mov
cmp
jno
xchg
adcb
das
sbb
mov
mov
andb
jnp
xchg
enter
sub
mov
subb
fs
push
je
pop
shlb
aaa
mov
enter
push
cmp
mov
insl
cmc
mov
adc
cmpsb
jle
add
push
and
jae
mov
sub
js
out
jecxz
xchg
lahf
insb
jnp
xor
xor
and
xor
mov
push
scas
in
mov
and
gs
arpl
jae
push
inc
sbb
fisubl
add
loop
aad
fidivs
add
add
cmp
push
adc
push
aad
or
and
jp
stos
jno
out
cmc
mov
sbbb
inc
daa
adc
lock
in
loope
out
mov
inc
xchg
das
imul
mov
or
push
arpl
popa
jmp
xor
lahf
arpl
dec
pop
test
mov
cltd
pop
in
cli
ficompl
sbb
nop
rorb
out
rep
fsts
stc
sbb
mov
in
ja
or
push
mov
in
xchg
push
mov
or
mov
repz
daa
push
and
push
push
pusha
or
cltd
test
popa
shr
loopne
movsl
pop
ret
inc
mov
cmpsd
scas
sub
xor
adc
mov
pop
pop
in
outsb
addr16
sbb
mov
sbb
or
jno
sub
stos
push
je
or
jo
pop
dec
adcb
mov
adc
testl
cmp
test
pop
xchg
xor
push
jb
push
out
push
mov
jp
clc
mov
pop
in
jp
sub
fs
fmulp
faddl
pop
dec
lods
ret
inc
ja
dec
sbb
cmp
xchg
jnp
insb
lods
xor
jb
xlat
rorb
sub
mov
inc
mov
into
xlat
xchg
cmpsb
xchg
rcll
ds
insl
inc
sub
xor
mov
jo
push
xorl
xorl
movsl
sbb
jo
lods
sbb
loopne
push
stos
out
push
push
cmc
xor
jae
cmp
testl
in
shrb
cmp
or
push
add
loop
es
test
xor
mov
fadds
adc
les
lods
jns
dec
cmpsb
add
int3
jp
out
test
iret
loope
or
scas
cmc
and
pop
es
call
xchg
pop
shrb
mov
and
xor
sub
aam
xor
incl
cs
vpsubsw
lock
dec
jg
in
cli
cltd
negl
in
dec
push
popf
adc
stc
cli
inc
cmp
decb
nop
les
sbb
lods
sbb
mulb
inc
rorl
lahf
xchg
adc
aad
test
out
push
adc
xorl
sti
cwtl
xchg
xchg
jge
jae
fwait
lods
push
inc
int
xchg
arpl
in
sbb
xor
nop
push
das
push
gs
xor
push
lds
jo
stc
inc
jg
das
pop
xor
pop
movsl
cld
dec
sahf
inc
repnz
rcrb
mov
out
push
into
cmc
lahf
mov
push
stos
or
ret
pop
mov
pop
sbb
push
add
mov
xchg
inc
cmpsb
push
stos
pop
call
or
int
mov
adc
test
jmp
push
addb
rcr
nop
cmp
les
adc
xchg
adc
sub
push
sbb
imul
xor
rorl
test
cltd
push
inc
cmpsl
pop
gs
data16
test
push
jmp
push
mov
popf
jae
fimuls
stos
sub
clc
loop
mov
inc
sbb
add
sbb
sarb
pop
xor
orb
mov
jmp
add
push
pop
xchg
cmp
xchg
pop
lock
scas
sbb
loop
aas
fimull
repnz
xchg
pop
add
xor
sarl
inc
jle
xchg
inc
or
gs
mov
in
or
mov
iret
out
jmp
push
or
or
push
push
sbb
sub
hlt
xchg
xchg
int3
and
xor
mov
fnstcw
ret
sti
or
xor
mov
sbb
mov
mov
movsb
and
push
pop
mov
fdivp
adc
sbb
rcl
scas
insl
add
mov
pop
movsb
push
dec
mov
adc
mov
inc
lock
mov
jae
jl
inc
fdiv
xchg
adc
dec
stos
sub
cltd
cmp
xchg
adc
outsb
loope
icebp
int3
push
adc
rolb
adc
pop
sub
adc
sbb
sti
mov
mov
imull
outsb
outsb
lds
stos
dec
arpl
lahf
or
fisubrs
movb
push
hlt
dec
xor
mov
or
xchg
icebp
inc
pop
adc
add
jge
add
ss
pop
push
sbb
mov
sti
inc
jae
xchg
loopne
test
xchg
cld
xor
jp
and
cmp
movsl
test
sub
jle
rolb
adc
rcrl
and
sub
adc
and
mov
out
shrb
sub
dec
scas
sbb
mov
filds
stc
sbb
jnp
xchg
lock
cs
pop
jae
mov
ds
push
dec
inc
aaa
sar
loopne
stos
mov
xor
dec
nop
not
push
mov
bnd
xor
ljmp
hlt
xor
dec
and
jo
cli
pop
xchg
push
into
or
cmp
stos
aam
inc
and
jb
xor
and
pop
xchg
add
shrl
std
jg
and
jecxz
pop
push
jno
jno
mov
sbb
icebp
adc
clc
nop
cmp
cmpsb
push
and
mov
and
aam
movsl
dec
cmp
push
mov
cmp
push
cwtl
xor
loopne
mov
pop
sub
pop
outsl
mov
jbe
mov
pop
outsb
mov
in
or
sub
outsb
imul
ret
inc
test
xchg
popf
aad
cmp
jne
pop
iret
arpl
movsl
int3
mov
sub
dec
inc
pop
jae
dec
es
in
mov
mov
pop
xchg
jno
add
enter
inc
inc
pop
je
inc
cmp
outsb
into
push
inc
xchg
pusha
pop
daa
jbe
xor
fildll
jnp
fwait
call
xchg
xor
sbb
inc
and
jae
das
leave
cs
fcoms
add
mov
es
stc
sahf
gs
xchg
push
and
outsb
mov
scas
push
ja
sub
addr16
xchg
ljmp
aam
outsl
sbb
add
mov
push
dec
mov
cmp
xchg
ror
movb
jmp
jb
sti
add
ret
push
loop
mov
dec
pop
inc
icebp
fdivl
mov
scas
jg
bound
inc
es
add
gs
push
mov
bnd
out
loopne
push
sub
shlb
or
jle
mov
mov
dec
iret
cmpsl
adc
mov
adc
subb
adc
xchg
xchg
sbb
mov
xchg
dec
sub
ja
rcrl
lret
jne
hlt
in
mov
and
mov
aad
int
dec
jg
stos
jecxz
ficompl
cld
nop
call
or
dec
in
mov
or
pop
sbb
mov
cmp
mov
cmpsb
mov
xchg
mov
loope
pop
jae
adc
sbb
sahf
es
or
mov
mov
popa
aam
sti
cwtl
shl
in
mov
pop
mov
cltd
hlt
jb
mov
insb
pushf
push
icebp
xchg
popf
push
xchg
addr16
fldl
sbb
push
jbe
sbb
jmp
nop
cmp
test
loopne
and
adc
sahf
add
data16
mov
cmp
fimull
jb
push
fwait
pop
mov
dec
ds
cmp
vpunpcklqdq
out
inc
js
rcrl
or
ret
adc
cmp
or
xor
test
cmc
adc
std
repz
mov
shrl
jmp
dec
imul
and
in
jle
cmp
cli
lcall
fcoml
jne
or
xor
mov
pop
jge
dec
and
xchg
jp
inc
idivb
and
insl
sbb
pop
cmp
mov
adc
and
or
cli
scas
mov
xchg
je
hlt
bound
nop
into
cmpsb
push
test
mov
adc
and
jl
mov
cmpsb
jmp
sub
jnp
es
mov
inc
mov
push
dec
pop
dec
arpl
pop
loope
mov
cli
nop
je
push
sub
and
push
fstpl
out
xchg
decb
addr16
hlt
test
and
mov
push
mov
xchg
lret
cmc
lcall
icebp
mov
cld
cwtl
das
xchg
mov
adc
push
js
jge
push
mov
xlat
push
jbe
push
mov
insl
adc
ja
xchg
or
xchg
pop
fistps
xchg
and
imul
pop
test
dec
sbb
bound
or
sub
mov
add
sub
sub
iret
dec
icebp
dec
lods
int3
pop
leave
jns
cli
dec
inc
sub
imul
je
mov
mov
cmc
or
sub
adc
jno
mov
mov
inc
xor
dec
adc
mov
adc
jb
mov
jo
fcomi
hlt
insl
push
push
inc
mov
movsb
insl
mov
lret
lret
cmp
lahf
pop
add
cmpsl
es
movsb
cmp
mov
pop
mov
iret
jecxz
mov
adc
inc
sub
mov
mov
loope
mull
in
lea
push
and
xor
mov
ds
test
cwtl
aam
xor
push
lea
jp
fsubl
ss
or
mov
mov
lods
pop
in
pop
jnp
cwtl
push
stos
mov
movsl
pop
pusha
out
mov
aam
and
jl
pop
xchg
insb
xchg
push
cmp
jne
dec
test
dec
loop
lret
fs
xchg
mov
pushf
std
sbb
and
outsl
dec
aas
das
fisttps
add
orb
cmpsl
xchg
mov
sbb
roll
rolb
sti
or
aam
dec
pop
jmp
into
cmp
mov
mov
bound
mov
enter
test
lret
orl
and
andl
cwtl
pop
pop
dec
das
xchg
ret
jle
lcall
stos
popa
aad
bound
adc
mov
fcmovne
inc
xchg
sub
mov
rorb
cld
lcall
adc
sub
sub
add
push
pop
jne
popa
shlb
mov
lcall
aam
push
enter
sbb
push
lahf
sbb
mov
pop
pop
dec
or
rolb
inc
add
movsb
les
fwait
dec
mov
sub
push
mov
push
inc
adc
add
mov
inc
int
in
rcr
adc
mov
sub
lahf
out
out
cmova
xor
in
mov
pop
out
icebp
mov
lds
cmp
mov
xor
jecxz
push
rcll
mov
and
test
std
out
mov
xor
sahf
popf
pop
cld
dec
mov
mov
loope
addb
rolb
pop
daa
xchg
xchg
xorl
sbb
je
adc
je
add
mov
jle
push
fadd
in
in
sub
or
faddp
test
scas
xchg
push
lods
mov
sti
sbb
fimull
js
clc
movsb
div
sub
jae
xchg
add
add
scas
dec
rolb
xchg
sub
test
mov
sub
xor
imulb
and
sbb
daa
inc
popa
sbb
ja
jle
loopne
push
in
das
in
repnz
and
pop
cmp
mov
pop
jmp
mov
out
arpl
out
repnz
cmpps
inc
jp
inc
push
pop
mov
movsb
rol
test
push
xchg
dec
out
jge
add
int
push
cmp
fsub
inc
lods
lods
dec
imul
rorb
add
lds
lahf
push
mov
bound
xor
xchg
sbb
lcall
test
ret
shl
sbb
dec
ret
or
popa
arpl
int
repz
sar
aad
xchg
fwait
test
jbe
insl
adc
mov
cmp
enter
jge
pusha
xchg
add
adc
sti
sub
xor
pusha
lods
add
dec
rorb
pop
out
pop
sbb
out
jnp
pop
int3
jmp
lds
jg
leave
lds
test
lods
push
adc
jb
sub
subl
inc
jmp
fisttpl
jl
daa
int3
lahf
movsl
popa
xor
sbb
loopne
sbb
ljmp
add
xchg
mov
pushf
mov
push
movsl
jb
in
hlt
mov
bound
clc
add
push
pop
inc
jmp
adc
cli
mov
dec
inc
mov
cmpb
ss
data16
int3
fwait
ret
arpl
andl
andb
pop
pop
sbb
aad
pop
shl
aaa
xchg
xor
repz
cmpsb
mov
jo
inc
orl
into
stos
test
cmp
fidivrs
mov
hlt
loopne
fs
int3
clc
and
in
adc
pusha
add
mov
sub
sub
mov
fldl
pop
dec
xor
aas
mov
ss
dec
adc
pop
xor
or
ss
sahf
idivl
mov
cmp
pop
mov
outsb
xor
testl
es
mov
jae
mov
inc
cmpb
and
scas
test
out
lods
xchg
outsb
popa
lea
dec
imul
pop
jae
add
or
into
dec
sub
inc
fistpll
inc
mov
add
xor
sbb
pop
jp
mov
js
dec
push
es
shl
mov
dec
mov
sbb
ljmp
and
add
and
repz
jl
mov
cmp
sbb
cmc
inc
mov
popa
test
mov
insl
jp
scas
xchg
xchg
fimuls
sahf
sub
mov
mov
push
adc
repnz
inc
pop
jmp
pop
fistpll
fsubrs
mov
out
push
pop
lods
cs
xlat
and
ret
pop
pop
cwtl
or
pop
mov
pop
pop
test
ljmp
mov
mov
mov
push
test
xor
inc
test
jg
clc
or
loopne
pop
jne
into
cmc
cmp
xchg
adc
xchg
out
cmc
fs
inc
push
test
pushf
jecxz
int3
les
aad
mov
test
pushf
mov
aad
rcrl
inc
pop
std
sbb
movl
sub
mov
rcrb
ljmp
add
adc
xor
daa
int3
in
jp
out
xchg
jp
fidivs
ret
movsb
andl
xor
adc
mov
or
push
cld
pop
jg
add
cli
dec
jnp
or
in
mov
fistpll
iret
jl
icebp
test
ret
cs
and
inc
adc
xor
fidivl
sub
and
xor
and
pop
out
repnz
push
dec
dec
dec
adc
movsl
or
mov
cmp
inc
sub
sarl
cmp
xor
xchg
add
ret
fiaddl
iret
sub
cwtl
inc
pop
or
sbb
mov
push
xchg
xchg
adc
and
mov
sub
rorl
pop
leave
fnsave
adc
dec
popl
dec
cwtl
sbb
sahf
outsl
jb
add
cmc
iret
fiaddl
and
cmpsl
lds
ss
mov
xchg
mov
add
lret
addr16
ja
aas
out
xchg
mov
in
jle
or
leave
btr
clc
scas
dec
push
mov
test
xor
mov
push
mov
cmpl
xor
popa
mov
mov
outsb
mov
test
sbb
mov
movsl
and
aas
je
fs
push
mov
cltd
mov
ret
pop
leave
jbe
push
das
int
fs
rcrb
jnp
push
in
jl
inc
ret
and
inc
aaa
inc
mov
lea
lcall
pop
gs
inc
fadds
mov
mov
mov
mov
decb
dec
pop
das
in
inc
clc
xchg
xor
cmpsb
xor
rcrb
and
dec
jmp
sub
imul
aaa
xchg
jb
mov
fsubrl
fldenv
sbb
test
mov
mov
lock
cmp
popf
fnstsw
lds
mov
jp
jns
push
and
jne
dec
jg
push
mov
out
int
lret
dec
mov
adc
push
pop
push
mov
dec
call
test
pop
std
push
insb
incl
jecxz
push
adc
outsb
jle
js
in
enter
jp
outsl
mov
cmpsl
mov
sbb
daa
addr16
mov
pop
mov
mov
jecxz
enter
cmpsl
mov
mov
mov
push
ljmp
inc
push
outsl
mov
clc
loop
clc
mov
icebp
aas
mov
int
imul
enter
and
and
xor
lcall
arpl
test
mov
and
ss
mov
add
cmpsb
cmpsb
pop
jbe
movb
in
sbb
loop
icebp
lock
inc
insb
or
xchg
inc
or
sbb
cmp
repnz
cmp
shll
pop
out
insb
sbb
cmpsb
and
push
out
push
aaa
push
repnz
jmp
add
call
sub
pop
mov
push
stos
sti
out
lock
jbe
xor
mov
mov
enter
lods
xchg
add
inc
mov
cmovb
and
loop
adc
xor
push
cmp
or
mov
sub
cmp
lods
push
inc
fwait
pop
sub
fadds
test
push
pushw
lds
lods
lock
loope
and
lods
and
mov
cwtl
adc
dec
pushf
subl
push
cmp
lret
inc
jnp
cmp
nop
or
push
clc
xchg
lods
or
ror
and
push
iret
pusha
sti
mov
push
xchg
cmpsl
xchg
sbb
add
jmp
inc
popf
ret
cmpsb
movsb
pop
cmp
push
jnp
xchg
or
sbb
aaa
mov
aad
lret
ret
xchg
outsb
or
jle
inc
fadds
in
out
pushf
xchg
fisttpll
mov
xchg
adcl
xchg
lea
mov
fisubrs
push
push
sbb
stos
xchg
aad
xchg
add
cwtl
xchg
je
push
cli
cmp
shlb
dec
push
rolb
push
cwtl
cmp
jecxz
xchg
add
mov
rorb
xor
enter
sbb
pop
mov
jns
push
sbb
popa
sbb
arpl
pop
into
pop
gs
mov
push
leave
sub
in
cmc
mov
lods
sbb
cmp
mov
mov
inc
movsl
mov
data16
test
jp
ss
clc
aad
dec
push
jnp
sahf
lahf
and
xor
push
lret
or
scas
mov
fistpl
jnp
push
add
fcompl
iret
aad
sub
stc
mov
lret
pop
call
insb
mov
enter
inc
test
lea
and
hlt
jmp
sahf
sbb
pop
in
ja
xchg
mov
rolb
loopne
dec
jmp
andb
xchg
les
and
sub
cmc
add
add
jle
push
lret
cmp
int3
inc
aad
sbbl
sbb
sbb
cmp
jp
mov
or
inc
and
jo
addr16
imul
cmp
xor
jne
out
lret
mov
cmp
dec
rcll
adc
cmp
jb
in
lds
js
lods
je
adc
mov
fwait
cmp
test
add
lcall
add
dec
mov
inc
cli
mov
gs
loope
jns
xchg
pop
fldcw
pushf
arpl
daa
sbb
inc
adc
adc
xor
out
call
mov
add
inc
pop
sbb
jno
pop
push
dec
loopne
pop
sub
pop
mov
fnop
sbb
sbb
mov
cmp
fildl
enter
push
stos
mov
ret
lock
pop
scas
fwait
jecxz
mov
pop
add
popa
icebp
mov
push
sahf
ret
cmpl
inc
sbb
ficoms
in
mov
sarb
mov
lods
stos
xchg
xchg
rorb
inc
pop
repz
test
and
rolb
imul
arpl
mov
dec
push
lcall
sarb
inc
pop
ret
int3
jmp
adc
xchg
fcmovnu
mov
cmpl
cmp
inc
fcoml
divb
jg
js
sbb
mov
test
rcl
lods
jle
push
add
cmc
lods
out
jecxz
inc
in
outsb
fmul
repnz
and
add
or
scas
mov
orb
stos
fidivrl
sbb
cmp
lret
cmp
in
pushf
icebp
adc
daa
outsb
jns
push
jns
cmpsl
cmpsb
out
pop
test
mov
jne
dec
mov
jns
xchg
popa
das
mov
out
gs
jge
lock
jl
mov
pushw
push
insb
dec
das
dec
dec
pusha
xor
lretw
out
dec
pop
add
lahf
jle
fwait
push
mov
lahf
mov
lds
jge
mov
arpl
ss
scas
xchg
sub
mov
and
test
xchg
xlat
push
shll
jns
push
ds
mov
test
js
adc
add
loope
pop
dec
add
jae
mov
add
inc
bound
imul
outsb
push
dec
es
mov
sub
out
mov
pop
xchg
sub
and
sarb
xchg
les
mov
cli
out
inc
mov
lock
scas
mov
fs
sti
sahf
pushw
insl
sbbl
xchg
xchg
xor
cmp
int3
and
mov
xor
cmp
rcrb
out
xor
mov
in
xor
sbb
xchg
add
push
aad
repz
sbb
in
mov
sub
cmpsb
repnz
lret
inc
int
pop
or
sarb
pmovmskb
test
cwtl
das
inc
aam
movsl
jle
rol
pop
jb
xchg
icebp
mov
pushf
xchg
js
jmp
loope
pushf
mov
jbe
push
ror
or
dec
ljmp
fucompp
inc
lods
subl
std
adc
pusha
test
sti
add
xor
mov
mov
ret
xchg
mov
jmp
mov
add
in
inc
test
rcrl
dec
mov
sub
dec
adc
cmp
jns
cmpsl
ret
nop
repnz
xchg
cltd
gs
repz
mov
fsubl
mov
lock
cmpsl
add
stc
pusha
mov
push
popl
cmpsl
xchg
cmp
lahf
loopne
dec
daa
call
dec
insl
mov
imul
mulw
enter
or
xor
jp
xor
inc
sti
outsb
cmp
loope
in
xchg
push
sbb
pushf
push
cmc
fldl
fists
subb
xchg
mov
cmp
stos
xor
pushf
ja
push
add
mov
das
pushf
ja
xchg
addr16
and
js
cmp
loope
fs
dec
mov
cltd
add
jnp
mov
push
and
hlt
inc
pop
and
pop
aad
jae
cmpsb
lcall
popa
lcall
leave
cmp
push
mov
push
dec
jp
xchg
jmp
push
inc
fnsave
ret
idivl
push
out
ret
cmp
xor
cmp
xchg
je
pop
sbb
xchg
xor
xlat
push
inc
stos
fmul
or
adc
aad
insl
popa
cld
sub
or
cld
push
cli
add
outsb
mov
add
fnstcw
out
insb
hlt
inc
icebp
mov
dec
adc
sbb
or
xlat
cmp
jno
hlt
lret
jp
rol
addb
add
int3
mov
shlb
movsb
stos
pop
jl
pop
cli
xchg
decb
mov
dec
out
add
int3
add
mov
outsl
add
mov
mov
mov
in
into
mov
mov
int3
jno
bound
in
mov
cmpsl
push
cmc
iret
int
dec
push
aaa
jbe
push
xchg
test
test
jl
test
and
ljmp
pop
fisubl
dec
sub
or
stc
jge
sbb
mov
imul
mov
mov
adc
lock
popf
sti
cmp
pop
jge
xchg
or
repz
dec
jae
mov
push
mov
dec
fs
pop
dec
aaa
sub
stos
cmpps
and
bound
or
ds
mov
mov
cmp
nop
fdivrl
out
ficoml
lret
jle
inc
in
jmp
rorb
test
lea
mov
fwait
std
xor
stc
pop
movsb
xor
ret
xor
bound
mov
pop
push
lcall
jbe
add
sbb
fs
into
adcl
pop
out
mov
jle
sbb
sub
sub
stc
xchg
pop
testb
aas
lds
and
mov
cmpsl
jno
das
xor
cmpb
and
inc
pushl
out
pop
lea
enter
sub
pop
sbb
xchg
mov
pop
xor
and
or
iret
mov
cmp
xor
and
mov
inc
and
movsb
pop
rcl
dec
adc
jbe
loope
push
and
xchg
and
xor
dec
jecxz
mov
lcall
pop
xchg
int3
push
icebp
dec
xchg
jae
in
mov
das
jo
xchg
jecxz
and
xor
aam
and
imul
pop
arpl
inc
push
inc
shlb
subl
inc
scas
push
insb
addr16
ja
addb
daa
adc
std
aam
inc
inc
das
fs
imul
cli
push
test
sbb
loopne
jae
sbb
push
or
add
icebp
mov
pop
into
push
or
cs
sbb
out
mov
ret
xchg
ja
pop
repz
push
iret
add
insb
and
sub
cld
jge
dec
and
pop
mov
fdivrs
leave
loopne
shl
cmp
iret
outsl
loopne
aad
xchg
xchg
call
and
xor
iretw
adc
imul
daa
out
cmp
ret
dec
jecxz
popa
mov
jl
stc
adc
pop
stos
popa
gs
sub
test
cmp
sbb
rcll
lret
cmp
movsl
add
mov
cmp
dec
test
clc
and
jecxz
add
inc
addr16
push
and
jge
mov
jp
sbbl
inc
testl
add
xor
jle
lods
es
and
decb
sarb
outsl
fistl
mov
mov
cmp
test
mov
std
iret
fldt
mov
bound
mov
daa
cs
xor
sahf
insb
add
dec
into
shr
or
lock
lea
test
shl
cmp
in
mov
xor
mov
xchg
arpl
jge
pushf
add
in
out
shll
int3
sbb
dec
popf
mov
leave
js
ds
sbb
push
shrl
orb
pop
or
jb
daa
pop
xchg
pop
xchg
rcr
jbe
pop
and
mov
and
movsl
ffreep
lods
push
fstpt
dec
sub
inc
xchg
decl
xchg
fs
fwait
mov
or
or
mov
test
mov
jns
push
hlt
mov
call
adc
cmp
mov
aam
or
mov
push
bound
imul
in
mov
or
andb
rol
test
mov
cmp
mov
mov
sbb
mov
pop
inc
rorl
andl
dec
add
loope
and
add
jb
xchg
mov
dec
fcmove
mov
xchg
pop
mov
lods
popf
dec
insl
je
repnz
sbb
aad
lahf
dec
in
jns
adc
inc
cmp
sub
sti
mov
adc
adc
ja
das
or
pop
xor
inc
cmpsl
outsb
mov
int
push
push
cs
xchg
jp
or
fcmove
jmp
cmp
or
add
es
daa
insb
dec
sub
sbb
icebp
lret
adc
dec
jmp
icebp
fisttpl
bound
notl
cli
sbb
mov
pushf
add
sbb
mov
dec
ds
shld
mov
imul
loope
mov
adc
in
mov
push
xchg
fcmovu
jge
push
xor
movb
nop
bound
pushf
lcall
fcmovb
jle
sahf
push
and
adc
loopne
push
out
adc
daa
dec
aaa
fmuls
mov
ffree
scas
pop
icebp
roll
add
pop
movsl
cmp
ret
sarb
aam
mov
dec
and
movl
dec
bnd
jnp
sbb
sbb
jno
mov
notl
xchg
inc
pop
cmp
mov
shll
cltd
mov
cs
push
mov
and
ficoml
fstpl
add
pop
cmpsl
push
adc
loope
cmp
sbb
aaa
mov
sbb
adc
push
jp
dec
add
cmp
pop
jp
mov
test
lret
addr16
lea
mov
loop
pop
mov
inc
and
cmp
gs
es
mov
rcrb
in
xchg
and
dec
xchg
sbb
aad
inc
sar
addb
ret
dec
ljmp
xchg
cs
cli
xchg
in
jae
ja,pn
mov
mov
out
jb
mov
lret
cmp
lods
in
divl
push
sbb
cmp
iret
imul
js
or
ret
ds
fs
jno
repnz
fcoms
enter
sub
and
mov
shl
dec
loop
lcall
int3
push
test
mov
mov
daa
jbe
cmc
jecxz
cmpsb
inc
arpl
mov
cli
xchg
in
in
xchg
mov
jle
xchg
pop
dec
stos
out
sub
imul
sub
xchg
mov
mov
fucompp
mov
sbb
cli
int
mov
ffree
lods
pop
sbb
in
dec
xchg
or
dec
pop
in
mov
clc
mov
mov
dec
out
mov
mov
nop
sbb
mov
cmp
adc
add
ret
jp
sbb
fninit
mov
dec
shll
gs
sub
movsl
pop
mov
jp
out
montmul
cmpsb
adc
jns
push
dec
fmull
repnz
mov
frstpm(287
mov
sbb
sub
adc
call
daa
or
xchg
mov
notl
and
lahf
mov
pop
push
push
jae
lret
adc
pop
neg
mov
mov
movsbl
push
lcall
dec
xor
test
xor
rclb
jmp
inc
mov
pop
jecxz
fcoml
xchg
enter
test
mov
adc
movsl
jns
aas
call
cmp
cs
fdivs
cmpb
dec
xchg
xchg
out
leave
rcl
xor
out
jge
stos
dec
scas
ja
adc
daa
mov
pop
scas
xchg
aam
add
into
xchg
lret
add
lock
add
mov
mov
loop
ret
sti
jmp
hlt
mov
bswap
sub
insl
sbb
das
nop
mov
jmp
jo
out
ljmp
sub
xlat
repnz
sbb
gs
mov
jbe
cli
inc
adc
notb
dec
push
jnp
add
sbb
jmp
pushf
popf
stc
mov
leave
repz
dec
adc
jbe
jne
mov
mov
into
push
in
bound
cmp
into
rclb
hlt
cld
shl
movsb
mov
popf
jge
imul
fucomip
mov
pop
sub
es
push
mov
lods
insb
imul
outsl
cltd
dec
cmc
nop
inc
out
add
ljmp
in
xor
dec
xchg
test
inc
rcrl
arpl
push
inc
cmpsl
xchg
loopne
inc
ja
jecxz
jo
jnp
int
pop
xchg
test
test
xchg
push
mov
jge
mov
in
or
sbbl
mov
mov
addr16
jnp
outsb
pop
xor
dec
push
test
cmp
lods
pop
aam
push
pop
inc
aas
jbe
or
out
adc
pop
push
jge
aad
rclb
popa
out
mov
int3
push
cmp
xchg
xor
pop
pop
mov
sub
insl
mov
sub
aam
ret
fndisi(8087
and
sahf
popa
mov
sub
xchg
push
cld
mov
pop
push
xor
pushf
mov
mov
pop
fnstsw
mov
push
push
mov
mov
shll
mov
inc
push
clc
arpl
cmp
pop
test
and
cmpsb
jge
ss
rcrb
shr
adc
sbb
mov
xchg
adc
push
arpl
xor
adc
les
dec
xor
xor
test
dec
pop
pushf
cmpsl
mov
pop
pop
cmc
xchg
ret
scas
pusha
cmp
inc
movsl
pop
and
push
in
inc
xchg
imul
jnp
fxch
pop
repnz
aaa
sub
mov
inc
icebp
std
fistpl
test
fwait
xchg
mov
in
out
dec
jg
sub
or
or
sub
push
mov
cmp
mov
or
pop
and
inc
sbb
xchg
dec
add
mov
pop
mov
add
loope
mov
inc
xor
sub
jno
cld
xchg
or
fiaddl
jecxz
dec
mov
in
fidivrl
data16
sub
inc
pusha
and
adc
dec
addb
pop
sub
and
mov
xchg
ljmp
int
sbb
push
mov
sbb
or
mov
adc
sbb
sub
push
fistl
dec
dec
mov
movsl
mov
inc
jmp
xor
add
mov
gs
cmp
jno
outsl
pop
xchg
loop
inc
loop
gs
or
loop
jg
lods
adc
lods
scas
xor
mov
fisttpl
mov
enter
rcr
pop
mov
jne
cmp
dec
sub
imul
jl
out
test
rcrl
out
xchg
sub
aad
bound
into
outsb
es
xchg
and
into
inc
shlb
scas
addb
sbb
aas
sub
cmpsb
xchg
pop
dec
pop
fwait
ss
inc
jae
add
mov
inc
mov
lea
nop
cmp
insl
cld
inc
repnz
xchg
xchg
pop
mov
int
adc
xor
xor
add
mull
movsl
and
out
loopne
loop
jnp
repz
jne
xchg
mov
rorl
outsl
mov
adc
shrb
inc
shll
orb
dec
outsb
pop
dec
scas
ljmp
sub
cmpsl
xor
ror
out
mov
mov
je
sub
aas
jecxz
mov
push
inc
cmpsb
mov
notb
lahf
in
sbb
cmp
mov
call
shrb
cmpsl
add
mov
and
jmp
imul
out
int
lea
push
fs
aad
ds
mov
push
ljmp
mov
pop
bound
xchg
lcall
lret
push
clc
outsl
js
pop
pop
int3
jp,pt
imul
test
cld
xor
ret
lret
cmp
outsb
lret
add
lods
in
je
lret
or
xchg
in
push
adc
and
into
xor
push
and
dec
jne
pop
sub
mov
sti
cmp
dec
cmpsb
scas
loopne
mov
clc
xor
repz
cmpsb
xchg
xlat
gs
in
sti
mov
pushf
setns
jnp
mov
sub
sub
push
aad
and
scas
shlb
adc
mull
lret
add
or
xchg
test
popf
lret
sbb
inc
shll
xorl
addr16
fidivrs
rorl
lods
imul
cmp
cmp
add
pop
push
jmp
xchg
push
mov
mov
mov
loopne
pop
xchg
mov
push
or
gs
inc
addps
jle
push
call
sbb
insl
fwait
arpl
jne
inc
fcomps
test
cmp
mov
stos
or
lea
inc
dec
pop
test
rol
lcall
jno
xchg
cmp
push
and
loope
inc
insl
or
or
mov
pop
mov
add
xchg
xor
dec
int3
fsubl
mov
mov
mov
std
inc
int3
iret
sub
xor
pop
mov
daa
shrb
imul
rcrl
push
add
jg
insl
push
mov
mov
xor
inc
push
mov
or
xchg
push
fdivl
les
jbe
sarb
stc
dec
mov
decb
xor
test
loope
int
xor
or
push
mov
mov
rcr
and
jecxz
scas
std
or
pop
popf
sbb
pop
iret
push
cmp
jg
cmc
nop
adc
sub
sub
in
ljmp
dec
cltd
dec
mov
data16
imul
sub
test
out
inc
push
outsb
ds
jnp
sub
mov
cli
cmpsb
stc
or
shll
cmp
es
mov
imul
ja
and
ret
jg
lret
xor
lds
int
stos
inc
inc
inc
add
xchg
cmpb
mov
pop
xor
dec
insl
sbb
sub
jmp
mov
push
xchg
mov
cmp
rorl
xchg
cltd
fisubs
xchg
test
add
push
in
ror
xor
cmpsb
push
xlat
dec
sbbb
inc
sub
lock
arpl
rol
xlat
xchg
movsl
xchg
mov
test
jno
cmp
dec
mov
es
dec
mov
aam
mov
sahf
out
js
sub
insb
es
mov
mov
cld
repz
fwait
xchg
sub
das
movsb
daa
rolb
sbb
dec
dec
sub
ret
int
dec
jae
mov
fnstsw
mov
inc
sahf
push
mov
dec
cs
rcrl
push
es
sub
and
push
mov
stos
shlb
std
add
mov
jno
push
xchg
sbb
lods
enter
orb
add
mov
push
mov
fistpl
int
xor
fiadds
pop
stos
pop
xchg
call
cmp
push
addb
dec
pop
cmp
adc
mov
xchg
dec
sbb
add
int
jge
jb
mov
lea
call
ss
fsubs
xchg
stos
sub
or
cmp
fwait
mov
or
jae
push
mov
aad
vpshlq
jnp
out
mov
movsl
xor
out
mov
xchg
ja
in
and
pop
cmp
out
rcll
sub
les
cmpsb
daa
cmp
inc
adc
movsb
loope
dec
and
pop
out
cltd
inc
outsb
ljmp
dec
test
inc
lcall
jge
and
xchg
pop
mov
xor
adc
jns
arpl
ljmp
dec
insb
nop
push
call
ljmp
sub
pop
push
imul
push
js
add
mov
pop
cmp
xor
imulb
push
xor
fsubs
jno
call
dec
addr16
test
inc
fildll
outsb
pop
mov
test
dec
add
adc
sti
jns
movsl
test
jb
out
or
inc
sar
popa
push
cmp
sub
mov
clc
jb
jmp
dec
adcb
or
add
or
mov
mov
aad
fmuls
adc
adc
iret
loop
das
std
es
lods
test
pop
adc
sbb
icebp
jne
int3
test
rcrl
clc
ret
rorb
inc
fucom
ljmp
test
aaa
push
push
pushf
xchg
xchg
movsb
push
push
inc
lock
and
popf
popf
mov
cwtl
test
jo,pt
inc
push
jne
test
arpl
imul
inc
sbb
and
test
xchg
ficompl
pop
xlat
jbe
fstpl
in
jnp
sub
mov
clc
jmp
push
sub
push
inc
push
cltd
arpl
mov
cli
pop
jg
inc
mov
shll
xor
xlat
pop
fwait
loope
popa
bound
ljmp
stc
dec
jno
mov
xchg
and
add
iret
imul
jmp
ss
out
adc
popf
dec
mov
add
jno
and
test
push
xor
xor
xlat
pop
lahf
sbbb
mov
sbb
mov
or
push
push
movsb
push
cli
push
loop
add
iret
cwtl
mov
adc
idivl
cwtl
cmp
out
clc
in
mov
jecxz
aas
aaa
aad
sub
sahf
xchg
add
adc
xchg
jae
test
fmul
and
out
fwait
mov
push
push
push
pusha
fsubrp
test
cmp
jnp
mov
sahf
push
sbb
test
lcall
js
icebp
jne
jle
stc
pop
sub
adc
dec
push
bound
dec
pusha
clc
pushl
adc
cmp
bound
out
sub
jecxz
mov
out
and
mov
pop
xchg
and
sbb
jge
dec
xchg
bnd
or
mov
rcrb
jb
fmulp
xor
ds
test
nop
lret
cwtl
push
mov
jbe
xchg
in
stos
cltd
mov
shll
test
mov
movsb
dec
pop
divb
je
cmp
mov
movsl
aas
cwtl
cs
dec
mov
and
xchg
inc
inc
push
sub
pusha
dec
rorb
and
ljmp
mov
sbb
outsl
pop
dec
mov
sub
ljmp
pop
aam
push
movsb
push
dec
lock
cli
cmp
dec
subb
and
outsl
lea
xchg
lret
scas
add
sbb
pop
xchg
xchg
jne
addb
les
shrl
sub
pop
mov
cs
in
int3
mov
insl
dec
mov
mov
pop
ss
les
mov
adc
sbb
or
js
hlt
xor
pop
shrl
sbb
cltd
add
sbb
sbb
xor
fimull
adc
xor
movsl
and
std
cmpsb
cmp
je
sub
sbb
je
fidivrs
insb
xchg
push
mov
sarb
add
mov
and
subb
ds
test
outsb
ja
hlt
push
mov
je
mov
mov
scas
je
std
push
jo
push
jg
jg
call
repnz
rolb
adc
cli
rcl
outsb
xchg
sub
out
aam
cmpsb
pop
sbb
mov
nop
adc
push
cmc
push
push
and
push
mov
inc
repnz
les
mov
test
lret
cmp
pop
mov
push
mov
and
mov
jbe
adc
jmp
ljmp
mov
movl
mov
cltd
pop
xor
and
shr
or
int
lds
insb
sti
mov
iret
pusha
bound
lock
pusha
les
sbb
mov
fdivs
ss
xlat
fldl
mov
mov
mov
pop
jmp
pop
sbbb
aaa
push
inc
jecxz
jo
int
and
js
mov
pop
or
enter
pop
scas
and
test
jmp
lea
adc
add
and
cwtl
cltd
sahf
cmp
xchg
add
sbb
lods
lret
fdivrl
xor
mov
adc
ficoms
cmp
add
ss
sbb
sbb
mov
cmpl
popa
mov
nop
lldt
loop
call
shlb
cmp
mov
outsb
fisubl
cmpsb
adc
dec
mov
les
mov
sbb
sub
dec
ret
pop
daa
xor
out
inc
xlat
sbb
jmp
imulb
xlat
mov
sahf
out
mov
stos
movsl
mov
pop
mov
in
imul
data16
fnstsw
inc
in
inc
add
mov
mov
ss
xchg
call
dec
jp
stc
in
sub
mov
out
sub
rolb
cmp
inc
arpl
outsb
add
adc
popa
pop
pop
repnz
mov
sub
sbb
dec
mov
ret
ret
sahf
stos
sbb
icebp
mov
and
or
ror
inc
ret
divl
iret
xchg
in
mov
flds
sarb
cs
inc
int3
xor
bound
mov
addr16
adcl
jo
in
xor
in
push
jae
mov
fs
in
jl
loope
stos
aas
fwait
push
cwtl
sub
enter
mov
out
add
shlb
push
mov
xchg
xchg
pop
int
push
outsb
or
xchg
xor
ficomps
es
hlt
idivl
jns
std
mov
lea
test
jns
ret
mov
imul
enter
adc
cltd
mov
push
jo
divb
cmpsl
pop
and
out
cmp
sub
pop
paddd
subl
push
stc
lea
or
out
int
ficoms
dec
sbb
sbb
cmp
aam
shrl
sbb
lds
xchg
mov
xchg
or
push
lret
sub
mov
js
lcall
mov
sbb
jnp
dec
cs
push
mov
push
mov
mov
xchg
jmp
aas
adc
dec
xchg
mov
ficoms
mov
mov
inc
xor
fsubr
xor
js
mov
mov
imul
loopne
clc
cwtl
outsl
stos
ror
jnp
push
pop
pop
nop
pop
movsl
test
mov
xlat
adc
shll
clc
jnp
popf
ljmp
jg
lea
lret
mov
xor
push
inc
adc
push
xchg
cmp
sti
mov
xchg
aam
push
push
or
inc
mov
bound
jecxz
sub
icebp
cwtl
and
lds
adc
xor
dec
mov
shll
ds
subb
cwtl
inc
xor
in
jb
ja
pop
data16
jbe
sbb
cli
push
push
repz
pop
xor
aam
cld
push
cmp
add
mov
cmp
lret
lcall
or
sub
ds
out
addr16
inc
jno
int3
jbe
jne
cmc
adc
jb
xchg
adc
je
insb
dec
add
cmpsb
gs
pop
xchg
sbb
jno
clc
imul
rcrl
arpl
or
mov
dec
inc
cmc
hlt
cmp
push
mov
sub
jl
shrl
ds
push
pop
imul
inc
inc
xchg
lods
out
enter
lock
pushf
iret
data16
pop
pop
or
mov
repnz
add
loope
fwait
and
jle
test
dec
inc
cwtl
mov
fdivl
mov
fimuls
xchg
call
pop
das
fs
mov
pop
or
cmp
nop
and
daa
sti
je
insl
aad
popf
int
jne
popa
add
push
std
dec
inc
mov
cld
hlt
les
mov
lods
inc
mov
adc
xchg
lret
mov
arpl
dec
sbb
or
loop
pop
jnp
jnp
or
mov
dec
out
lea
lods
subb
jecxz
add
sbb
js
and
rolb
add
mov
xchg
add
dec
mov
jp
rcll
pop
hlt
mov
xchg
push
mov
sbb
xor
push
push
imul
jae
mov
xchg
es
lods
loopne
std
push
or
ljmp
mov
loopne
outsb
xlat
lods
jb
stc
xchg
ficoms
inc
js
and
popf
pop
or
inc
shlb
jg
mov
or
lahf
or
out
pop
or
insb
sbb
xchg
mov
sub
adc
mov
shrb
popa
and
add
andb
or
or
ret
inc
lret
xor
mov
fsubrl
les
dec
fnstsw
clc
mov
jbe
jge
inc
sub
nop
jle
lods
jae
sbbl
cs
adc
dec
fistps
push
fisubrs
inc
nop
dec
jg
mov
sub
adc
testb
pusha
xor
add
jmp
cmp
inc
dec
sub
decb
push
test
jg
repnz
pop
jl
lods
sahf
jmp
and
pop
xor
jo
ss
mov
mov
mov
arpl
fstl
mov
cmpsl
lahf
lods
mov
xchg
xor
sub
rorb
mov
stos
jl
hlt
inc
call
fmul
lret
jns
lcall
in
aaa
pop
jns
shlb
cmp
sbb
and
mov
cld
scas
dec
lods
sti
and
and
movsl
mov
imul
addr16
lret
cmp
negb
cld
jmp
mov
scas
add
shll
int3
inc
jne
mul
jbe
sbb
cltd
dec
push
cli
mov
out
dec
out
inc
add
dec
push
clc
mov
iret
push
jecxz
cmpsl
rorb
enter
xchg
dec
push
add
movsl
int
test
jmp
adc
cmp
push
mov
mov
mov
xlat
jmp
stos
add
push
leave
movsb
and
inc
jge
lahf
sub
pop
mov
sub
aam
lret
aaa
mov
lock
sarl
aam
push
mov
dec
jg
sarl
rol
icebp
outsl
call
data16
sub
ja
lods
mov
imull
imul
ja
dec
pop
push
lea
jo
mov
and
pop
adc
add
insb
sub
inc
jecxz
mov
jbe
mov
adc
xchg
xor
je
arpl
pop
dec
fxch
cmp
icebp
dec
sbb
repnz
inc
xlat
inc
test
sbb
pop
push
mov
loop
and
xchg
adc
dec
mov
add
rorl
and
pop
fidivl
rorb
mov
mov
cmpsl
mov
pop
mov
push
jp
aaa
das
hlt
and
leave
adc
das
jns
cs
aas
into
add
inc
aas
lods
fdivrp
stc
pop
mov
push
cmpl
dec
es
in
in
iret
pushf
inc
dec
hlt
mov
iret
ret
hlt
or
mov
mov
mov
xchg
xor
mov
inc
pop
cmp
cmp
shll
and
repz
pop
in
ljmp
xor
and
sub
jecxz
adc
pop
cmpsb
mov
adc
sub
add
jg
push
cltd
mov
and
movd
xor
and
sub
andb
push
mov
sti
add
jne
andl
pushl
cli
in
fstps
outsl
inc
xor
jl
cmp
into
js
call
sbb
xchg
mov
pop
pop
pop
push
cmp
mov
add
mov
adc
iret
inc
push
or
imul
or
sbb
cmp
out
push
das
sub
or
xchg
jno
or
repnz
fs
sub
aad
sbb
sahf
or
out
icebp
push
mov
aad
sbb
stos
pop
cmpsb
mov
push
push
sbb
mov
jb
jge
mov
sti
ftst
lcall
bswap
ljmp
pushf
popa
popf
pop
and
push
xchg
cmc
popf
and
jne
aas
hlt
enter
insb
mov
push
ljmp
xchg
push
pop
stc
out
xor
adc
cmp
test
sub
mov
or
flds
sbb
cmpb
sarb
xchg
filds
loope
lret
lcall
or
push
pushf
xor
xor
or
dec
sbb
hlt
repz
inc
xorb
ret
movsl
pop
ficomps
sub
hlt
in
ret
pop
push
push
je
in
cli
rol
loopne
imul
arpl
dec
daa
stos
in
pusha
pop
ret
pushf
xchg
mov
pop
leave
popf
or
bound
adc
cmc
pop
dec
lds
addr16
jmp
mov
lock
adc
jno
adc
decb
mov
inc
cmp
xchg
out
popf
mov
clc
mov
fnsave
cwtl
jnp
and
mov
dec
out
icebp
lock
je
adc
xor
mov
cli
push
aas
nop
test
ja
inc
and
pop
and
pop
push
mov
sbb
leave
out
or
mov
daa
lret
or
adc
mov
pusha
mov
pop
aad
cmp
stos
jo
xchg
pop
test
ja
jne
sahf
das
jbe
dec
jb
add
ret
addr16
je
cmpb
pop
cmpsl
or
idiv
into
lahf
xor
ret
mov
jp
subb
cwtl
scas
sbb
lret
sbb
mov
mov
popf
mov
inc
cmp
out
xlat
xorl
xchg
pusha
cwtl
cmp
mov
test
into
fsubs
mov
or
in
mov
or
adc
dec
stos
test
pop
arpl
lods
test
push
iret
jb,pn
icebp
iret
pop
into
sbb
or
ret
push
pop
scas
clc
ja
data16
or
mov
mov
and
jg
fmull
hlt
std
data16
mov
pusha
jno
push
into
add
int3
push
dec
dec
outsl
mov
push
std
mov
or
push
pop
xchg
enter
cmc
insl
or
and
push
int3
push
add
or
dec
imul
push
inc
xor
push
ja
mov
addr16
pop
popa
insb
lret
and
mov
xor
je
data16
mov
aad
xor
ficoms
es
mov
xchg
out
xchg
and
mov
add
or
lret
shlb
fnstenv
pushf
testb
xor
jp
and
pop
rcrb
in
test
jnp
outsl
push
cld
xor
mov
sub
pop
mov
lahf
inc
jle
outsl
stc
sti
mov
xchg
data16
or
test
cwtl
mov
push
jle
in
roll
lcall
or
loopne
adc
push
enter
jge
orb
xchg
inc
adc
inc
dec
mov
push
cmc
adc
mov
loope
mov
dec
inc
dec
jmp
mov
jmp
in
stc
cmp
cmpsb
push
mov
and
incl
pop
mov
mov
adc
stos
lea
jl
fdivr
out
mov
or
outsl
fsubp
hlt
jge
fwait
je
dec
xor
mov
cmp
lock
sub
inc
leave
inc
dec
or
mov
lret
out
mov
inc
pop
pop
loopne
pop
sub
pop
push
fcoms
js
inc
ds
push
add
add
je
dec
hlt
js
pushf
loope
mov
mov
ror
xor
pop
fmul
mov
aaa
sbb
xchg
ja
mov
negl
mov
push
mov
ds
rcr
mov
xor
outsl
cmc
rorl
or
dec
xor
push
repnz
ret
ret
aaa
push
cmp
mov
icebp
bound
xor
loop
pop
adc
mov
dec
dec
lahf
loopne
sahf
xor
mov
jae
mov
pop
mov
and
in
push
jmp
testl
jmp
jno
jo
fadds
jno
mov
stos
and
adc
jb
inc
test
sub
mov
sbb
idivb
pushl
jp
mov
sub
xchg
les
mov
xorl
adc
sbb
int3
inc
xorl
ret
test
jle
arpl
inc
roll
and
xchg
and
enter
fcomps
in
xchg
jbe
fdivr
adc
aad
sti
fidivrs
int3
push
aaa
inc
xchg
or
cmp
movsl
stos
jecxz
sub
aas
dec
nop
pusha
add
sbb
dec
dec
adc
inc
xchg
or
mov
pop
sbb
adc
sbb
and
hlt
dec
xchg
push
sbb
pushf
out
outsl
fnstenv
mov
xor
pop
jb
adc
inc
stc
fisubrl
into
jge
jmp
push
add
push
out
pop
bnd
mov
add
xchg
xchg
xor
xchg
shrb
orl
push
jnp
xor
cmp
inc
adc
xchg
enter
xor
pop
xor
mov
daa
jl
cmc
push
fdivs
in
lret
daa
loop
outsb
xchg
jge
aas
dec
ss
xchg
lahf
sub
fstpl
lret
cmp
and
cmovo
or
rorl
cmp
inc
pop
negl
push
lcall
mov
lods
test
push
add
int
xchg
pop
jmp
test
mov
pop
and
rcrb
subb
fsubl
inc
jmp
add
pop
scas
xor
cmp
fwait
lcall
lcall
pop
mov
aaa
ret
in
or
inc
xchg
sbbl
mov
jl
in
je
shll
dec
mov
lahf
sub
jo
pusha
sub
adc
fdivrl
cmp
rcl
in
sbb
push
je
lea
jae
and
push
ficoms
shlb
mov
jle
aam
push
int
int3
or
scas
pop
pop
mov
fdivp
cmp
std
sbb
in
mov
outsl
add
into
mov
cmp
mov
dec
out
xchg
jge
cmp
movsl
xor
mov
cmpsb
inc
or
repz
add
push
dec
add
out
in
fs
fwait
mov
loop
push
dec
ljmp
pop
mov
icebp
add
aad
mov
mov
call
cmpl
mov
and
xor
inc
sub
movsb
loopne
fistps
jbe
int
mov
jno
das
cli
mov
call
and
sbb
js
fcompl
dec
and
mov
pop
mov
addl
or
shl
mov
icebp
add
iret
pop
mov
stos
fistl
not
mov
inc
fwait
stc
in
pop
pop
icebp
mov
rcll
pop
add
mov
stos
or
repz
es
je
mov
loope
xchg
out
jg
out
idivl
rclb
addr16
roll
jmp
and
xor
xor
xor
sarl
je
fsubrp
cmp
dec
call
dec
and
pop
aas
addr16
rcr
mov
fildll
xchg
loopne
mov
cmc
adc
aaa
das
xor
inc
xchg
mov
out
jmp
jp
sahf
stos
clc
lds
lahf
xor
add
pop
inc
push
rcll
dec
mov
fdivl
add
loope
ret
inc
xchg
cltd
or
xlat
mov
cmpsl
push
mov
xchg
dec
mov
in
push
push
shll
jnp
cltd
pop
mov
push
mov
adc
xor
in
jle
fwait
shlb
shrl
cmp
rolb
mov
ret
adc
pop
loope
xchg
fimuls
xchg
jae
aad
xor
les
xchg
lods
fbstp
sub
xor
inc
inc
push
les
sbb
sbb
gs
cltd
popa
cmp
int3
jns
ljmp
and
lock
fwait
rolb
sbb
adc
loope
ds
or
emms
mov
pop
je
into
add
jecxz
pushf
stos
repz
xchg
mov
outsb
loop
cmp
cli
shrd
jnp
xchg
mov
dec
in
add
jp
sbb
sub
xchg
adc
pop
jb
jecxz
lcall
adc
nop
sbb
mov
cmp
sbb
lcall
pop
fstpt
cmp
leave
cmp
stos
cltd
adc
pop
jo
jns
xchg
mov
or
leave
jae
mov
push
stos
mov
sbb
andb
xor
imul
push
pop
mov
fisubrs
sub
cs
xchg
stc
mov
ret
adc
rcrb
lea
inc
jg
lret
repnz
push
cmp
stc
test
push
xchg
jno
dec
aam
in
aas
pop
mov
mov
les
push
jo
fadd
pusha
lea
movsl
xchg
mov
xchg
add
adc
mov
pushf
jae
stos
inc
jns
arpl
sbb
fmuls
mov
fsubs
subb
cmp
jecxz
cmp
and
mov
xchg
fnstsw
es
ja
mov
cmp
push
jbe
mov
add
cmp
popa
data16
jmp
push
or
push
mov
lret
inc
xchg
cmpsb
xchg
ja
jge
hlt
xchg
leave
lcall
mov
push
and
addl
dec
mov
mov
add
mov
fdivs
cli
std
cmp
shl
scas
or
test
jnp
mov
pop
and
pop
mov
or
rclb
lock
test
jo
sbb
leave
add
xchg
jl
test
xchg
jb
dec
sti
mov
or
add
add
dec
fisubrs
data16
rcrl
fildl
inc
add
adc
mov
mov
push
scas
pop
and
lret
jge
in
in
mov
roll
sbb
mov
jmp
ds
mov
cmp
icebp
pop
jle
inc
pop
jle
insb
push
push
or
cmp
pushf
xchg
cli
jnp
fwait
ss
jns,pt
xchg
std
xchg
hlt
test
sahf
mov
in
sarb
jns
std
mov
adc
clc
push
shl
fidivrs
fwait
popa
xchg
mov
mov
imul
ljmp
shrl
rcll
mov
inc
xor
data16
adc
sbb
xor
insb
jne
sbbl
inc
aad
cmp
lahf
pop
jle
fsub
cmp
xchg
mov
mov
cmp
dec
mov
sar
mov
mov
pop
jmp
and
aam
iret
jno
loopne
test
cld
mov
dec
popl
es
push
sbb
rcr
gs
outsl
pop
pop
rorl
xor
lods
bound
pop
mov
das
or
call
or
jmp
pop
dec
or
stos
cmp
int
addr16
insl
lods
and
jnp
andl
daa
int3
cmc
inc
shl
sbb
jmp
xor
aas
jle
inc
push
mov
loopne
or
les
loopne
jp
jmp
cmp
xchg
sbb
add
jae
adc
xor
mov
xchg
cs
fildll
repnz
popa
pushf
jo
xchg
jbe
push
mov
es
pop
bound
adc
stos
imul
lret
xor
mov
mov
aaa
lock
daa
jnp
pushl
mov
xor
or
or
xchg
or
popa
cmp
sub
add
mov
mov
inc
ret
insb
test
mov
pop
add
out
add
push
xchg
bound
and
mov
pop
mov
mov
pop
or
lds
xor
lods
pusha
push
pop
inc
and
ret
pop
call
xlat
shl
jo
xor
and
test
sub
ja
mov
sub
xor
add
push
inc
sub
cmp
inc
mov
in
fwait
pop
adc
imul
mov
out
test
lahf
and
test
fisubs
shld
frstpm(287
data16
add
xchg
mov
in
adc
adc
test
sub
dec
fidivl
stos
scas
fsts
scas
adc
stc
and
jmp
gs
or
popf
mov
cwtl
mov
and
inc
jnp
dec
enter
sbb
or
dec
gs
mov
mov
sub
lahf
and
stos
sub
fstpl
negl
fsubrl
cmp
fmuls
jge
mov
aas
dec
mov
fbld
jecxz
mov
mov
rcrb
xlat
sub
mov
aas
insb
out
scas
int
pop
pop
out
adc
and
adc
in
movsb
push
mov
inc
inc
push
lret
mov
jo
in
sti
fnstcw
inc
insl
pop
inc
insl
fiaddl
test
pop
ret
sub
lods
std
xlat
sub
shl
cli
arpl
into
xlat
inc
notl
inc
sub
cmp
stos
clc
pop
pusha
push
inc
sub
shrl
xchg
dec
sub
mov
fwait
sarb
loop
adcb
xor
jb
stos
add
cltd
cmp
dec
push
cmp
mov
and
add
push
xlat
jbe
aaa
mov
mov
cmp
addr16
mov
mov
je
mov
mov
adc
inc
sti
gs
mov
push
inc
imul
stc
mov
adc
fnstsw
outsb
dec
mov
adc
jge
xor
fmuls
or
adc
sbb
jecxz
cmpsl
push
out
sti
mov
ds
stc
mov
test
push
loope
fsts
xor
sahf
loop
fdiv
jge
mov
push
xchg
mov
or
aaa
lods
xchg
xchg
mov
xor
lret
or
loope
mov
cmp
jno
in
push
js
mov
frstor
mov
loop
ss
fsubl
sub
clc
lods
mov
inc
pop
cmp
lea
dec
xchg
ror
stc
comiss
xor
outsb
mov
mov
and
xchg
ret
cmpb
in
ds
inc
pop
jmp
sbb
aad
pop
push
aas
clc
hlt
pop
test
cld
inc
ss
sahf
sbb
xchg
inc
mov
xor
int3
push
inc
inc
jmp
pop
call
test
lods
sub
iret
clc
mov
aam
fistps
in
pop
loop
inc
pop
mov
test
scas
fdivs
inc
shll
or
insb
push
xchg
mov
push
cmpsl
jp
sbb
shrb
inc
xchg
mov
mulb
push
shll
fs
dec
mov
xor
inc
cmpl
adc
inc
cmp
ja
arpl
dec
push
push
cmp
xchg
mov
ficomps
addr16
xor
arpl
inc
orb
lds
jecxz
movsl
sbb
fiadds
mov
jb
hlt
cld
in
mov
mov
pop
roll
dec
sbb
cmc
and
fisubrs
mov
mov
rclb
mov
mov
mov
push
fwait
push
aaa
mov
loopne
and
xchg
or
mov
xor
dec
fdivrl
cs
xchg
sbb
mov
subb
fs
mov
mov
adc
bound
test
mov
push
arpl
ret
or
inc
icebp
das
xor
jg
sbb
jbe
push
lea
iret
jne
stos
pop
push
fistps
mov
insl
pop
jne
add
pop
xchg
test
cld
pop
jge
cmp
out
stos
mov
rorl
sti
loope
push
insl
addr16
pop
inc
aam
ret
jns
sbb
mov
xlat
adc
mov
cmp
lcall
sti
in
xor
inc
pusha
jmp
fisubl
and
sarl
mov
iret
pop
jne
or
test
out
cmp
xchg
pop
imul
sub
idiv
mov
xor
stos
sti
outsb
aad
mov
push
jns
xor
sbb
mov
jae
loope
int
ret
das
pusha
pushf
lret
inc
loopne
sbb
rolb
mov
pop
popf
pop
mov
xchg
push
dec
lcall
cmpsl
sbb
cmc
inc
jnp
and
push
aam
pop
xlat
mov
lds
leave
loop
mov
pushf
sbb
test
mov
mov
movsl
push
xchg
xchg
inc
mov
adc
and
inc
popf
gs
outsl
cs
ds
aaa
es
aam
dec
les
cmpsl
sti
mull
insb
sub
fs
xor
mov
xor
jg
pop
mov
out
inc
fistps
out
and
lds
sbb
mov
test
xchg
mov
scas
ficomps
jnp
lock
xor
lds
cmpsl
xchg
lcall
or
xchg
hlt
es
mov
mov
push
inc
mov
and
clc
inc
data16
filds
pop
adc
inc
add
inc
lods
aad
mov
xchg
cwtl
int
divl
in
sbb
jo
out
shl
pop
mov
mov
add
cmpsl
jmp
cmp
mov
test
leave
mov
mov
ret
cmp
cmp
stos
push
jg
xchg
adc
jmp
push
jle
push
adc
in
int3
sub
call
popa
and
sarl
xor
rol
in
jae
jmp
dec
add
rorb
or
std
sbb
insb
pop
or
mov
jge
or
xchg
add
fsubs
push
mov
mov
mov
popf
mov
push
inc
ficoml
loopne
loop
xchg
out
fdiv
cmova
pop
pushf
scas
mov
imul
dec
mov
or
mov
sti
or
jne
inc
jge
ljmp
mov
das
and
push
mov
idivb
xor
es
scas
bound
movsl
inc
inc
adc
imul
cmpsl
mov
insb
mov
inc
lret
mov
push
mov
mov
fsts
adc
pop
mov
pusha
inc
xchg
lods
jmp
movsb
jge
daa
popf
out
inc
ss
pop
xor
ret
jge
cmp
cmp
cltd
fisubs
mov
xchg
and
cmp
sub
gs
cmp
out
jmp
mov
push
pop
mov
push
mov
mov
push
dec
and
mov
push
js
xchg
mov
sahf
fists
ret
call
in
jp
loopne
call
cmc
fbstp
xor
push
out
dec
add
mov
push
mov
inc
js
fcmovb
xchg
mov
xchg
add
push
out
fbld
mov
or
pop
sbb
lock
in
cmp
xor
jne
inc
ss
ja
hlt
xlat
pushf
pop
and
pop
cltd
mov
pop
fldenv
jg
ret
dec
pop
mov
mov
bound
fs
pop
shlb
andl
xchg
mov
push
imul
sti
sbbb
xchg
add
push
das
sub
dec
sbb
fstpl
and
mov
cmp
adc
and
xor
out
cmp
and
and
int3
out
mov
jle
filds
xchg
out
xchg
pop
nop
xor
mov
mov
lods
pop
lcall
pop
mov
mov
dec
cli
aaa
in
pop
imul
xor
repz
scas
adc
mov
pop
sbb
mov
int
xor
sub
in
lahf
lahf
jg
std
hlt
dec
mov
xacquire
insb
je
inc
cmp
inc
pop
pushf
mov
adc
cmp
stc
loop
scas
mov
sub
inc
xchg
jg
mulb
mov
mov
icebp
rcrb
cmp
rcll
mov
loop
or
adc
imul
movhps
dec
mov
pop
sbb
clc
xchg
je
rcrb
mov
push
adc
lods
out
xchg
xor
cwtl
enter
jg
cli
adc
test
jns
lret
xchg
ja
jmp
loope
sti
lods
ja
fists
pop
daa
scas
xorl
adc
sub
enter
push
push
sbb
fistpll
shll
in
jns
rorb
arpl
sbb
add
movsb
pop
int
ss
mov
xorb
pop
xchg
enter
mov
testb
adc
pop
xchg
jl
sub
mov
insl
dec
lock
std
sbb
adc
insl
cmpsl
jno
arpl
or
addr16
sub
jb
mov
mov
movsb
sbb
adc
mov
sub
loop
scas
inc
mov
sahf
jle
in
test
sar
and
and
cmc
push
jp
stos
fdiv
clc
gs
pop
stos
xlat
pop
vpmaxsw
in
and
popa
aas
push
add
stos
cmp
out
push
dec
scas
mov
test
add
in
dec
popa
push
les
test
xor
adc
mov
scas
int
sbb
lret
inc
ja
mov
scas
cmp
out
mov
out
jg
out
add
xchg
outsl
fadd
mov
add
push
xchg
xor
fisubrl
shrl
xchg
lea
xchg
mov
push
mov
je
rclb
xor
aaa
sub
cmp
inc
cmp
cwtl
adc
mov
or
daa
jnp
jl
xor
mov
jne
jne
int
mov
aas
cmp
js
fsubrs
lock
push
std
pop
add
dec
pop
fsubrl
jb
lods
fisubl
das
cmovne
jle
or
jecxz
mov
pusha
sub
pcmpeqw
jge
out
rolb
jae
fsubs
sub
push
loopne
and
jle
lock
xorb
xchg
adc
cmpl
push
adc
xor
cmpsb
pop
in
or
cli
aas
mov
mov
popa
dec
xchg
enter
les
gs
xchg
rol
jle
mov
test
js
adc
xchg
ljmp
jns
out
nop
testb
pop
stc
mov
mov
adcl
outsl
arpl
push
testb
sub
ljmp
movsb
lods
cmpsl
pusha
gs
xor
sarl
jmp
jl,pt
or
mov
testb
fiaddl
push
jmp
dec
cwtl
sbb
pop
fwait
iret
aad
in
cld
stos
addl
sub
mov
sbb
icebp
repz
mov
hlt
stc
and
pop
mov
test
ds
mov
mov
or
lret
jae
jae
rcl
sti
jge
fwait
add
cltd
push
mov
adc
loop
call
mov
hlt
cvtdq2ps
fwait
add
pop
xchg
jl
cwtl
mov
and
mov
lds
fcom
loopne
shlb
sub
xchg
pop
fsubrs
push
dec
sbbb
fldt
xchg
pop
cmpsl
and
push
out
cmpsb
cmp
dec
pop
sti
sarb
mov
mov
out
dec
jmp
cmp
aam
adcb
testl
xchg
in
cmp
loope
insl
mov
sub
imul
jnp
inc
repnz
jns
cmp
lret
ja
rcrb
xor
mov
lret
out
repz
adc
test
mov
movsl
insb
and
mov
nop
adc
xor
push
in
mov
iret
insb
stc
pop
cmp
inc
jmp
popa
je
iret
xor
sub
mov
cli
xchg
xor
repnz
popl
stc
jo
nop
addr16
add
aaa
inc
pop
inc
pop
shlb
test
jns
es
cmpsl
movl
insb
in
dec
scas
je
cmp
adc
sahf
fnstenv
cmp
lahf
push
jbe
dec
out
sub
loop
bnd
xchg
cmp
or
enter
loopne
fimuls
mov
popf
cld
cli
scas
outsb
push
test
xchg
shlb
outsl
pop
xchg
movq
rorb
jecxz
mov
cmp
rcrl
daa
mov
shrl
pop
mov
add
fstl
insb
or
repnz
mov
repnz
clc
arpl
jp
xchg
inc
xchg
xchg
sbb
jb
push
enter
daa
js
mov
in
neg
lcall
in
dec
jnp
test
jp,pn
test
xchg
xchg
notl
loop
ljmp
daa
push
mov
sbb
pop
test
inc
out
dec
rclb
test
divb
push
or
ds
inc
fistpll
cmp
xchg
nop
mov
push
mov
enter
call
cmp
into
pop
mov
shl
fsubs
and
lcall
cmc
pop
daa
xor
and
mov
xor
ror
adc
inc
push
cmp
xchg
stc
jo
fsubrs
jg
andb
mov
decl
mov
addr16
and
dec
faddl
lahf
pop
xorl
jg
movb
mov
mov
aas
popf
push
dec
test
cmp
sbb
pop
or
adc
xchg
repz
loope
mov
movsl
mov
mov
fstl
shrl
add
cmc
sti
jb
push
pushf
mov
icebp
jb
cmc
and
movsl
dec
and
jmp
insb
push
xchg
idivb
sbb
int3
jl
inc
repnz
scas
jg
jbe
and
adc
mulb
cmpsb
push
pop
mov
sbb
xchg
test
xchg
addl
push
add
pop
cmpsb
cld
dec
cli
jl
or
and
push
pop
popa
mov
popa
cmp
sub
mov
outsb
lock
cmp
inc
into
cltd
test
test
dec
in
in
out
sub
mov
jns
jecxz
in
inc
ret
lcall
or
xor
iret
stc
stc
lcall
add
or
adcl
push
popa
arpl
lret
push
jns
jge
lods
iret
dec
mov
jle
test
inc
sbb
adc
orl
pop
mov
jp
sbb
out
add
aaa
or
jne
outsb
push
push
outsl
cltd
incl
cmp
sbb
xchg
jmp
cmp
inc
jne
push
push
fcompl
fwait
jnp
ret
arpl
stos
loop
jns
lock
shrb
insb
pop
mov
adc
movb
lods
or
inc
cmpb
movsl
shlb
xchg
dec
fsubs
pop
leave
aaa
sub
push
jnp
fmul
ja
xchg
sub
movsb
sub
outsb
jle
cmp
xchg
popf
stos
and
mov
sbb
in
idivl
mov
or
xor
inc
subb
inc
fsubp
ja
insl
jge
mov
lret
jb
xchg
mov
mov
cs
push
jae
sbb
or
mov
daa
xchg
mov
xchg
dec
arpl
mov
outsb
inc
int3
bound
test
scas
push
inc
xlat
pop
loope
push
lods
xor
pop
fld
shrb
mov
enter
sarl
pop
inc
mov
sti
mov
cwtl
out
xor
add
cltd
cmp
cmp
lock
cmp
out
mov
add
loopne
inc
add
sbbl
or
loope
lods
shrb
sub
add
sub
jle
adc
stos
inc
add
fidivrs
call
pop
mov
push
xchg
push
cmp
jnp
loop
ja
fbstp
mov
adc
push
cmp
mov
pop
aaa
stos
ret
add
jg
std
and
sub
sub
pop
shrb
ret
jecxz
cmpsl
lcall
jmp
cmp
add
dec
adc
testb
mov
lret
pop
xchg
lods
xchg
out
inc
cmp
push
xchg
ss
mov
stc
test
lahf
ret
jp
cmp
clc
or
xor
clc
rol
movb
pop
add
jbe
push
sbb
sbb
push
inc
ffree
inc
addr16
loope
mov
mov
mov
int
add
push
outsl
xchg
fmuls
pushw
dec
xchg
fld
test
dec
jp
or
lods
add
inc
movsb
fcmove
js
int
int
stc
and
lods
mov
mov
stc
xor
adc
cli
jmp
pop
ror
fisubrs
out
xchg
lds
dec
xchg
int
lds
cwtl
mov
xchg
dec
js
out
sub
jae
xchg
xchg
push
or
mov
sbb
mov
lret
sub
andb
push
gs
adc
and
lds
xchg
dec
mov
dec
sub
jge
test
fisubrl
test
mov
sti
pop
mov
sbb
aam
nop
je
and
ja
loopne
imul
xchg
adc
cmp
mov
add
mov
sbb
loope
push
shrb
scas
std
nop
dec
and
push
mov
pop
pop
cmp
jbe
jecxz
jmp
xor
mov
icebp
inc
mov
pop
mov
movsb
dec
mov
push
rcrl
jmp
cmp
mov
mov
xor
sub
inc
loop
in
mov
sub
mov
das
es
addl
xor
cmp
cs
rcrb
sbbl
push
cmp
pop
push
iret
xor
sub
inc
xchg
out
fists
mov
push
adc
daa
jb
or
cmp
or
mov
out
jns
out
mov
out
jmp
testl
and
nop
mov
pop
push
mov
loopne
xor
repnz
cmp
sub
cmp
pop
sub
jb
ljmp
mov
es
pop
inc
add
mov
ja
iret
xor
std
adc
adc
sub
push
out
sbb
daa
xor
leavew
jecxz
daa
call
cmp
or
sub
inc
les
and
loope
in
push
sahf
and
bound
pop
lret
adc
ljmp
push
inc
pop
xor
pop
mov
sub
lods
call
xchg
hlt
pop
mov
mov
mov
jno
push
dec
jl
cmp
jp
in
pusha
scas
les
testl
nop
repz
adc
jle
adcb
nop
inc
push
das
pop
repz
aad
shr
bound
int3
je
mov
mov
lock
sbb
repnz
push
filds
pop
mov
xchg
shrl
test
lahf
jno
adc
xor
test
cld
lds
push
xchg
push
pop
imul
push
loope
popa
cmpsb
lock
outsl
xlat
clc
push
and
fbld
aam
dec
inc
icebp
inc
or
arpl
inc
mov
xchg
dec
push
sbb
leave
mov
jmp
je
loop
outsl
lahf
rcr
push
aaa
dec
and
push
sbb
es
inc
fdivrs
testl
nop
inc
outsb
ss
add
sti
dec
adc
scas
movsl
mov
or
in
xchg
adc
test
inc
mul
cmp
add
mov
adc
stos
cmpsl
leave
mov
call
cld
or
mov
loope
mov
je
cmp
pop
jmp
sbb
mov
inc
popa
hlt
pop
xor
loope
dec
adc
pop
int3
mov
xor
sbb
cmp
push
xchg
jno
test
ljmp
jg
cmp
xor
rcr
loopne
lahf
jmp
scas
lahf
or
inc
xor
pop
cwtl
mov
andb
pop
or
dec
xor
lret
and
popf
jae
out
pop
xchg
lcall
loopne
call
ret
cmpsl
dec
mov
fisubl
lods
mov
push
pop
inc
int3
cltd
jo
cmp
mov
jecxz
cmpsb
jp
pop
cmp
adc
add
scas
sar
sub
ja
xchg
xor
and
aaa
cmp
xor
test
jns
xchg
sarl
adc
mov
cmp
xor
lods
sbb
adc
arpl
in
icebp
shll
adc
lock
pushf
hlt
mov
cs
cmp
call
mov
out
popf
pop
and
cwtl
ljmp
sahf
in
cmp
and
cli
jg
xor
add
pop
dec
cmc
lods
cmc
jne
les
pusha
sti
xchg
jle
inc
loope
mov
cmp
sti
jp
movsl
test
call
rcll
adc
cmp
jle
test
sub
push
lds
gs
iret
les
add
cltd
cwtl
or
mov
popaw
jne
cs
push
xlat
mov
scas
mov
mov
jnp
xor
sbb
add
add
xchg
in
insb
dec
aad
or
jmp
xchg
out
je
ret
outsb
dec
inc
push
stos
cmc
int3
sbb
xchg
xchg
inc
sbb
mov
das
xchg
adc
mov
fwait
hlt
or
sub
insl
push
ret
pop
jmp
dec
jle
mov
rolb
xchg
cwtl
addb
inc
cmp
das
stos
cmpsl
jmp
gs
mov
aaa
bound
jb
pop
adc
push
fmulp
mov
leave
and
into
insl
addr16
popa
ror
data16
jmp
ljmp
xor
push
imul
movsb
in
jg
push
mov
aas
jl
imul
xor
mov
ss
jg
inc
pusha
xchg
inc
shrl
in
sub
push
mov
pop
lods
mov
cmpsb
fimuls
dec
in
jbe
mov
add
mov
nop
rcll
cmc
pushf
sbb
mov
out
adc
in
movsl
xor
enter
inc
ds
shrl
mov
outsl
cmpsb
ss
jae
dec
adc
cld
inc
arpl
movsl
jecxz
push
push
lahf
into
sbb
into
cld
fcoml
sub
arpl
shll
adcb
fstp
sub
jp
inc
mov
or
lock
shll
aad
dec
es
xchg
pop
dec
outsl
push
and
call
inc
out
sbb
loop
test
mov
xor
mov
xor
fmulp
divb
sbb
cwtl
out
rep
mov
int3
or
jp
dec
pop
or
push
sub
movsl
imul
adc
cltd
ficomps
nop
call
cltd
mov
adc
xchg
adc
sbb
repz
mov
adc
mov
xlat
lds
bound
xor
mov
std
sti
push
add
aam
sub
push
inc
negb
stos
leave
and
jbe
sbb
stos
add
inc
xchg
insl
push
dec
pop
dec
push
jb
dec
cmc
fadds
xchg
mov
and
mov
jb
mov
out
and
imul
dec
jl
xrelease
insb
outsb
jg
bound
movsl
lods
mov
dec
or
jl
sbb
cltd
lahf
and
jp
imul
adc
popa
jecxz
push
or
sti
mov
adc
pop
arpl
xor
cmpsb
fwait
test
and
popf
je
and
jbe
iret
mov
lds
mov
lcall
out
push
repnz
fsts
repnz
sub
enter
int
cmpsb
dec
arpl
add
dec
and
flds
push
cmc
cmp
mov
pop
call
pop
outsl
xchg
inc
les
das
inc
stos
loope
test
sbb
fcompl
lret
iret
mov
pop
int
test
es
sub
sbb
inc
jg
or
movsl
test
cmp
mov
xor
add
mov
xchg
jmp
and
sbb
jecxz
jle
push
int3
sbb
lret
lock
mov
fcom
les
add
dec
or
idivb
fdiv
gs
lea
jle
mov
dec
add
and
daa
subl
push
sbb
xlat
in
in
cmp
fmull
cld
sbb
sbb
insb
inc
inc
pop
mov
loopne
jle
sub
mov
cpuid
scas
clc
dec
out
test
xchg
je
cmpsl
aas
sub
push
mov
es
mov
mov
xchg
mov
std
fwait
andb
fidivl
aam
ds
xor
sub
stos
sub
lds
inc
rcrb
test
lods
inc
aaa
in
xor
outsb
xchg
in
scas
mov
or
enter
xlat
test
dec
mov
stos
xor
dec
aam
std
xchg
add
pop
divb
inc
jb
xchg
sar
mov
cmp
inc
pop
jno
push
loope
ficoms
cvtpi2ps
out
sbb
adc
clc
xchg
jle
movsb
inc
adc
bound
fstps
pop
stos
mov
mov
mov
xchg
sub
inc
les
loop
push
das
das
leave
inc
dec
xchg
popf
lcall
arpl
call
lcall
pop
xchg
movzbl
mov
lea
mov
adc
addr16
addr16
sbb
sub
mov
xchg
insl
xchg
sub
stc
sbbl
jns
pop
inc
test
mov
lds
sub
mov
cli
loope
movsl
add
out
xchg
mov
mov
leave
jg
push
rorb
cmpsb
pop
sbb
dec
adc
in
pop
xchg
fwait
popf
loop
pop
out
xor
mov
sbb
push
mov
out
cs
cmp
pushf
or
pop
jg
pop
and
sub
jecxz
scas
pop
es
js
test
das
pop
dec
lahf
push
inc
jbe
adc
imul
pop
ds
dec
repz
push
push
sub
jno
dec
mov
add
inc
fwait
and
jne
ret
testb
jge
cmp
or
lock
nop
inc
mov
add
pop
xor
pop
leave
insb
and
mull
leave
sbb
sbb
data16
imul
fwait
int3
lods
mov
cmp
mov
stos
scas
lds
jp
pop
out
mulb
inc
insl
pushf
push
rcrl
or
pop
inc
in
or
sub
add
mov
fisubs
repz
inc
popf
push
negl
stos
fbld
xchg
or
jge
or
push
pop
push
test
nop
xor
cmp
fldz
popf
add
fs
jo
mov
icebp
cmp
mov
lret
add
cmc
leave
shlb
je
add
cmc
mov
xchg
xchg
cmp
fsubs
xchg
out
pop
subb
je
sbb
sub
xor
sbbb
lahf
and
jne
mov
push
pop
jl
ret
scas
xchg
bound
repz
or
and
xor
daa
sbb
jno
jae
enter
and
fisttpl
lret
cmp
mov
test
or
mov
gs
fcmovne
dec
mov
popa
adc
imul
out
out
sub
mov
mov
ds
xchg
les
pop
daa
sub
hlt
sub
int
pop
mov
push
jo
nop
fldcw
test
xchg
sbb
xor
add
out
or
lods
ror
inc
jbe
xchg
imulb
cwtl
ret
and
mov
xor
lcall
adc
scas
dec
pop
movsl
sbb
push
xchg
cmp
cmc
clc
inc
imul
adc
xchg
and
push
xor
push
fcmovu
pop
pushf
shl
je
pop
les
roll
jae
xor
inc
dec
mov
shll
xchg
pop
sub
test
push
xor
shrb
xchg
add
out
mov
pop
out
ss
iret
js
mov
xor
adcb
push
xchg
xor
mov
test
stos
subb
sahf
inc
out
xchg
pushf
test
lock
add
int3
orl
jne
loope
xor
mov
les
loope
jno
enter
pop
ljmp
mov
punpckhdq
add
pop
pop
add
into
push
pop
mov
addr16
sahf
loop
sub
add
jle
cmpsb
or
mov
pusha
xor
jno
sub
out
leave
jmp
sti
cs
and
fbld
inc
pop
xchg
mov
pop
push
lret
into
mov
xchg
movl
adc
mov
test
xorb
mov
daa
sbb
jge
scas
test
sbb
punpckldq
je
jg
ljmp
int3
enter
jnp
test
cwtl
fwait
mov
mov
inc
int
jmp
jnp
jecxz
sub
xor
jb
jmp
fwait
loope
sbb
sti
in
lahf
in
and
push
lret
pop
std
ds
out
inc
mov
jns
ss
pop
jg
jmp
inc
out
in
dec
mov
xor
jl
gs
aaa
data16
lea
xor
loopne
bound
rcl
mov
and
cmp
push
lret
ret
popf
stc
lock
flds
xor
add
adcl
dec
outsl
mov
mov
out
lock
sbb
xchg
and
lahf
push
mov
sub
out
mov
mov
in
sub
hlt
jge
in
lcall
cmp
mov
fwait
stos
shll
gs
jle
dec
divl
sysenter
jns
filds
out
xchg
test
push
test
rorb
div
push
scas
mov
icebp
test
movsb
mov
mov
sub
jb
mov
xor
aas
insl
cmp
mov
xchg
leave
mov
shlb
or
xor
addl
mov
sub
data16
dec
mov
jle
mov
stos
mov
jb
iret
dec
stos
lods
pusha
pop
push
push
fwait
aad
js
mov
push
ret
dec
xor
mov
lret
fucomp
pop
mov
les
cmpsb
and
lret
fdivl
data16
add
jle
mov
cltd
jl
movsb
cmp
dec
mov
repnz
cmp
cmpsl
cmp
lea
dec
sti
mov
sub
mov
xchg
bound
jmp
pop
cs
lret
and
jle
shlb
jno
sub
iret
mov
testl
xchg
lods
repz
adc
mov
hlt
xchg
pop
add
pop
pop
mov
mov
lcall
dec
insl
and
mov
inc
fidivl
adc
cli
or
add
lret
into
add
in
loop
or
adc
mov
divb
sbb
fnstenv
sbb
jge
mov
dec
outsb
stc
ret
arpl
or
data16
rcr
xor
mov
lock
xchg
sti
iret
lods
pop
jmp
cwtl
ljmp
pop
leave
in
pop
pusha
cmp
adc
stos
inc
andb
push
sbb
xchg
inc
adc
sbb
popf
imul
fistpll
mov
fmuls
mov
insb
pop
ret
push
idivl
gs
pop
lea
sbb
clc
jg
xchg
fldenv
aad
cld
ss
sbb
int3
mov
xor
movsb
mov
loop
mov
pop
mov
test
push
mov
std
repz
cli
repnz
mov
stos
aaa
lret
imul
int
push
loop
cmc
push
xor
xor
or
loope
xchg
test
shl
xor
ficomps
or
dec
leave
out
data16
push
popf
fs
fxch
outsl
stos
addr16
test
outsb
push
call
mov
test
lds
icebp
lock
cmp
adc
jno
out
movsb
inc
enter
test
test
fs
lds
or
sub
mov
loope
cmpl
adc
into
and
mov
pop
rcll
rcrb
fcmovb
lds
insl
add
cmc
cmp
sbb
xor
ljmp
icebp
clc
push
jmp
mov
cmp
pop
dec
cmc
in
adc
ja
out
pop
int
sub
int3
dec
mov
orb
aam
or
mov
nop
mov
push
sub
jb
add
aam
hlt
pop
shl
in
sbb
lea
xchg
adc
mov
xor
addr16
push
jg
lret
inc
lcall
cmpl
cmp
jge
enter
mov
cmp
lea
je
mov
push
sahf
movsl
add
pop
push
fsub
pop
scas
dec
lret
push
cmpsl
pop
push
sarb
jmp
je
int
sbb
nop
imul
xorb
dec
adc
jmp
stos
mov
das
mov
jbe
sub
into
lret
lods
inc
push
data16
push
sahf
test
stc
adc
les
push
cmc
mov
inc
mov
lret
andl
or
int3
xlat
inc
sub
and
lds
js
mov
adc
imul
push
pop
icebp
jl
sarl
loope
sarl
insl
mov
das
push
fstpt
push
lcall
adc
pop
add
mov
imul
xchg
sub
lahf
fiaddl
xor
lret
jl
xor
mov
push
or
rol
mov
or
addr16
sbb
insl
cmp
push
stos
adc
xor
sub
jo
fs
hlt
bnd
sbb
repnz
iret
stos
insb
sbb
pop
add
cmpsl
jns
pop
scas
test
mov
sub
inc
stc
ficomps
shlb
cmp
cmp
sbb
push
mov
arpl
out
pop
jo
pop
xchg
ret
or
xchg
jnp
fisttpl
call
inc
push
icebp
movsl
adc
stc
iret
insl
lock
and
insl
fistpll
adc
clc
mov
or
adc
mov
and
mov
pop
dec
daa
je
dec
ja
sbb
cli
and
pusha
push
jle
jp
int
xchg
adc
ret
add
sbb
shlb
fisubrs
push
push
pop
xor
fstpl
add
xchg
mull
nop
push
push
fldcw
daa
cwtl
mov
or
lds
and
les
jno
int3
adc
data16
or
int
pop
sub
jle
mov
or
and
sub
repz
inc
icebp
sub
scas
xor
jp
idivb
inc
rcll
add
rol
pop
sbb
stos
leave
push
add
jge
jo
movsl
fsubp
sub
mov
jbe
lods
adc
sbb
cli
dec
ja
pop
in
and
mov
mov
mov
push
cmpsl
shl
into
insl
andl
cmp
mov
cmp
testl
dec
cmp
loop
cmpl
jae
add
movsb
or
int3
test
sub
add
shl
push
inc
insb
and
stos
stc
bound
add
xchg
mov
leave
stc
add
leave
stc
adc
push
rclb
ljmp
mov
push
fiaddl
clc
scas
jns
mov
or
adc
sbb
fs
stos
rol
add
jb
jp
add
imul
push
stos
xor
hlt
dec
sbb
pusha
fldt
fildl
or
in
inc
sub
imul
sub
inc
xchg
mov
adc
call
es
subl
push
xchg
movsb
jo
cmc
mov
aad
std
pop
cmp
dec
jb
stc
out
pop
pop
sub
inc
dec
or
mov
cmp
cmc
sti
mov
add
dec
das
jns
xor
pusha
sbb
sub
jle
xchg
rol
jnp
stc
pusha
stos
cmp
fildl
xchg
movsb
stos
mov
icebp
mov
add
cs
sub
pop
divl
adc
lret
jle
das
in
mov
mov
insl
lds
pop
leave
push
mov
sub
jae
jp
pop
add
mov
imul
adc
cwtl
xchg
and
gs
xchg
push
out
mov
xchg
nop
pushf
lret
es
add
and
ljmp
sub
lcall
sub
and
xchg
pextrw
dec
sbb
test
ja
icebp
mov
sbb
jg
subl
mov
mov
sbb
outsl
jb
sahf
addb
pop
mov
adc
pop
lcall
or
pushf
inc
jo
mov
mov
cmpsl
and
adc
pop
jnp
repz
leave
mov
clc
cwtl
xor
decb
fxam
in
scas
push
adc
push
xchg
mov
mov
xchg
inc
insl
out
fnsave
in
adc
packsswb
mov
inc
data16
inc
jo
xlat
in
fildll
jne
movsl
or
lahf
adc
mov
outsb
xchg
fimull
loopne
mov
fwait
in
popf
pop
nop
subb
adc
popa
sub
or
sti
nop
daa
les
mov
ljmp
xchg
decl
xchg
jg
je
loop
jno
pop
iret
fsts
xchg
xor
jns
scas
iret
mov
popf
push
xor
out
push
xor
fcomps
mov
adc
and
adc
jg
inc
aas
inc
stos
lea
pusha
es
sahf
add
mov
xor
fsubrs
rolb
push
bound
stos
ret
jo
scas
out
adc
jnp
pusha
pop
sub
mov
mov
jmp
sub
push
pop
jl
sub
lods
sbb
pop
add
roll
mov
inc
mov
xor
pop
cmp
and
fcoml
cmpb
dec
lods
adc
mov
mov
add
or
ds
dec
fldt
mov
mov
ficomps
jo
pusha
aad
pop
mov
xor
idivl
pop
or
xor
mov
mov
test
fbstp
cltd
and
ja
add
shrl
xchg
mov
inc
inc
loope
lea
in
fisubrl
cwtl
mov
mov
scas
pop
add
sub
lahf
in
lret
pop
imull
and
and
and
and
cmp
mov
lret
push
out
push
dec
lods
jl
add
pop
add
push
mov
ret
jg
sub
jo
movsl
xor
popf
lea
cwtl
and
shlb
cmpsb
leave
popf
dec
mov
lods
popf
push
mov
jge
add
jp
adc
add
lock
in
push
mov
push
mov
jnp
cli
jecxz
push
sub
lret
adc
or
shll
into
dec
sbb
mov
add
stc
and
out
sub
sub
xchg
mov
insb
in
and
in
cltd
adc
scas
fcoml
mov
ret
inc
sub
ljmp
addr16
sbb
insb
nop
loop
sbb
cmp
mov
mov
faddl
repnz
inc
or
sti
sub
lds
jecxz
sbb
fisubrl
cltd
pushl
cmp
sub
pushf
les
stc
addr16
xor
pop
mov
mov
add
aam
sar
lods
iret
ljmp
and
adc
mov
loopne
ss
bound
in
add
es
nop
push
les
mov
push
jne
jmp
push
jns
rclb
fldl
sbb
enter
aaa
icebp
inc
pop
dec
sub
stos
add
fisttps
pop
pop
test
out
mov
ficoms
mov
lods
push
fistpl
inc
fcmovu
stc
ds
fsubrp
mov
or
lahf
dec
mov
mov
cwtl
fisttpl
mov
popf
adcb
mov
or
sahf
xchg
pop
std
mov
lea
sbb
cmp
enter
sahf
xbegin
orl
shlb
mov
loope
and
por
cmpsb
jae
dec
mov
sbb
iret
pop
fsts
mov
dec
pushf
popa
hlt
jnp
xor
mov
dec
popa
pop
ret
in
std
push
test
mov
stos
jae
adc
mov
mov
jmp
push
xor
push
jg
daa
mov
xorb
pop
sbb
or
mov
cmpsb
outsl
enter
lds
test
mov
add
adc
insb
nop
out
adc
xchg
pop
xchg
xchg
icebp
sub
movsb
add
outsb
dec
mov
and
lcall
xor
es
mov
inc
roll
inc
hlt
dec
add
fldcw
fucomi
aam
hlt
cmp
and
jns
in
mov
jge
and
jp
xor
into
adc
insl
push
test
inc
out
or
test
mov
movsl
adc
mov
mov
jge
fildll
loope
and
daa
jg
std
gs
cmp
or
movsb
dec
nop
dec
cmp
xor
fcompl
test
pop
jmp
dec
dec
xor
mov
in
cli
mov
js
loopne
in
rclb
sbb
mov
stc
je
pop
mov
outsb
mov
pop
add
pushl
aad
js
lret
stos
fstpl
ret
das
cmp
je
popf
dec
xchg
and
mov
test
out
ret
test
mov
push
cmpsb
and
push
mov
and
adcl
jbe
mov
mov
cwtl
sbb
dec
int3
out
lock
push
mov
and
test
movsl
push
lea
xor
test
cmp
xchg
jne
push
movsl
or
movsl
push
xchg
cltd
lea
push
aaa
xchg
mov
into
xchg
cmp
push
mov
call
sbb
and
push
mov
fstps
out
test
cwtl
jge
mov
jp
ds
in
mov
cmp
outsb
xor
jmp
jbe
out
and
outsb
repz
mov
jp
add
mov
aas
jmp
jne
aaa
mov
dec
adc
mov
mov
test
fcoms
sbb
cmp
xbegin
inc
cs
mov
stos
int
cltd
pop
fs
jle
nop
mov
or
jl
pop
sarl
pop
inc
ljmp
mov
les
nop
mov
andb
or
pop
sub
cmp
dec
cmp
cltd
cmp
lret
jb
mov
retw
xacquire
xchg
js
adc
xchg
push
inc
bound
xchg
push
leave
mov
aam
mov
inc
sbb
shrl
pushf
sbb
in
loope
ss
jmp
test
cvtps2pi
mov
popa
and
sbb
out
jns
mov
xorl
test
dec
into
ret
aas
push
out
push
lcall
pop
scas
jns
iret
data16
pop
xchg
mov
inc
shr
popa
mov
dec
sub
or
icebp
testl
or
cmp
cmc
jo
outsb
out
das
and
mov
ds
addr16
int3
mov
mov
or
xor
pusha
pushf
aaa
cltd
mov
and
andl
sarl
clc
movsb
sbb
inc
sbb
dec
lock
aad
cmp
cmp
idivl
jae
jecxz
sahf
pop
inc
jns
ljmp
dec
bound
jmp
mov
sbb
cli
jmp
ljmp
mov
sbb
pop
gs
fld
pusha
jnp
mov
xchg
sbb
call
pop
jmp
add
and
gs
dec
jnp
mov
mov
bound
out
daa
test
ds
stos
mov
aad
xchg
push
adc
or
lock
mov
pop
out
jno
mov
repnz
adc
shll
stos
push
into
inc
cmp
pusha
aas
and
out
data16
lret
test
sub
gs
and
add
inc
xchg
add
adc
push
hlt
and
cwtl
dec
xor
mov
lods
arpl
in
lods
adc
call
mov
xlat
sbbl
fiadds
jl
in
sbb
in
xchg
clc
rcr
xor
aad
mov
ret
add
mov
adc
out
xchg
mov
xor
jae
cmpsl
mov
test
rclb
dec
lds
call
jle
dec
mov
cmp
jmp
add
xchg
subb
and
mov
inc
cmp
xlat
cmpsl
test
pop
mov
mov
adc
pop
dec
pop
push
cmp
fisttpl
insl
daa
cmp
push
clc
addb
fsub
mov
test
popa
mov
movsb
xor
sub
add
hlt
dec
mov
pop
bound
jp
mov
ds
lcall
test
lds
lods
repz
inc
sub
enter
lcall
testb
pop
cmp
in
fucomip
xor
adc
mov
xor
outsb
adcb
cs
push
sbb
in
aaa
lock
js
mov
jo
sub
xchg
xor
mov
mov
outsl
jo
push
imul
aas
pusha
sarb
mov
push
mov
nop
mov
jae
dec
mov
jbe
inc
cmp
pop
xchg
lea
add
cld
lret
movsb
cmp
ja
dec
mov
fmull
nop
mov
adc
arpl
mov
daa
jmp
jo
cmc
and
mov
push
sub
aas
mov
or
sub
and
mov
imul
imul
test
cld
outsb
cmp
sbb
sub
popa
lods
lods
and
clc
mov
fdivp
jb
ds
jnp
fsubl
push
es
adc
pop
incb
jns
inc
push
push
notl
cmpsl
pop
movsl
fcoml
icebp
dec
out
pop
xchg
lea
inc
xchg
cmp
add
sub
in
pop
aaa
push
add
and
lods
movsb
jge
imul
fisubrs
notb
mov
push
mov
adc
negb
inc
hlt
cmp
loopne
adc
xchg
mov
out
xchg
jge
lods
shl
xor
jns
fs
test
in
mov
pushf
jnp
insl
jl
sti
fiaddl
jo
bound
add
aaa
xchg
nop
ja
and
filds
repz
mov
or
adc
popa
pop
pushf
sbb
jle
mov
sti
shll
xchg
adc
cwtl
loope
xorl
iret
or
mov
jg
cmpsl
or
test
pop
jg
xor
es
icebp
mov
xor
lcall
dec
inc
dec
push
jge
into
fldenv
fwait
ja
and
mov
lods
mov
enter
pop
xchg
pop
int
iret
sbb
xchg
push
subb
mov
aaa
xor
dec
adc
and
fld
sahf
jo
icebp
or
std
jae
andnps
and
xor
out
adc
mulb
daa
jae
cld
mov
mov
push
arpl
mov
iretw
mov
std
lcall
or
fnstenv
sti
pop
lret
leave
mov
pop
push
pop
je
cmpb
xor
in
bound
push
xor
adc
ds
jp
rol
arpl
and
inc
add
adc
shll
cmpsb
cmp
test
mov
in
jne
jbe
xchg
mov
test
mov
mov
dec
add
jecxz
aad
xchg
mov
or
loop
lcall
enter
aad
push
into
in
xchg
in
sbb
lret
mov
hlt
std
loopne
aas
cs
mov
mov
popf
add
popf
popf
jmp
add
mov
fsubrl
dec
rclb
das
jmp
adc
mov
adc
mov
sub
stc
adc
push
iret
xchg
mov
jmp
jbe
in
sbb
addb
fwait
mov
pop
add
aas
add
idivb
xchg
imul
jmp
orb
and
insw
jns
xor
daa
fidivrl
icebp
push
sub
test
cltd
fdivl
inc
adc
cmp
pop
aas
dec
ss
mov
ss
repz
xchg
and
ret
push
negb
call
test
push
inc
inc
dec
fists
std
std
imul
mov
dec
jo
and
push
into
aad
jecxz
leave
out
and
xor
jnp
into
pop
dec
rol
mov
insb
scas
push
sbb
jmp
add
xchg
pop
pusha
fbld
lods
enter
adc
out
pop
aam
ss
int3
pop
cmpsl
lret
call
xchg
or
xchg
ss
sub
pop
lret
adc
sub
testl
lret
pop
cmp
and
cmpsl
xchg
push
mov
push
loop
and
movsl
or
pinsrw
clc
jne
pop
xchg
sbb
es
in
mov
hlt
popf
add
lret
pushf
repz
fisubs
cmp
inc
xor
mov
sbb
push
sub
cmp
sub
mov
popf
xor
ds
outsl
enter
mov
adc
mov
mov
lret
add
cmpsb
imul
push
lret
jno
fmuls
lahf
das
jp
inc
add
mov
jns
sbb
xor
sbb
data16
pop
cwtl
xchg
arpl
xor
popf
sub
push
jbe
dec
mov
inc
cmpl
mov
pusha
sbbb
fsqrt
mov
loope
loope
ljmp
push
inc
lods
hlt
adc
dec
fistps
sahf
in
fidivrs
ret
and
xor
dec
repz
dec
mov
mov
xchg
js
ret
jno
popa
mov
or
mov
cld
sbb
call
popa
adc
inc
cld
mov
gs
dec
xchg
cmp
test
push
sub
jp
or
xchg
mov
rorb
lret
negl
outsb
dec
test
mov
xchg
cld
cmc
lea
aas
lods
pop
xchg
xchg
sti
inc
popa
adc
and
sbb
adc
pusha
loop
sub
aaa
mov
ljmp
and
js
cs
out
iret
pop
push
addr16
sbb
mov
add
lret
in
mov
aas
cmp
add
and
mov
std
insb
adc
scas
jmp
xor
sbb
loope
xchg
xchg
ljmp
fadds
sub
scas
in
mov
out
add
mov
mov
pop
in
pop
cmp
jae
add
cltd
fdivrl
addr16
jecxz
jbe
pop
sbb
push
and
push
mov
and
leave
add
out
shll
mov
sub
sub
inc
xor
mov
cmc
pop
andl
data16
dec
mov
andb
cmp
xchg
add
jp
cmp
and
adc
inc
ljmp
fwait
xor
xchg
jnp
gs
cmc
movsl
add
xor
sub
pop
sub
loop
lretw
add
fsubl
jecxz
movb
cmpsb
xchg
inc
jle
aam
cmp
fbstp
enter
fisubl
cli
repnz
ja
call
arpl
or
imul
stc
loope
adc
test
jnp
jg
in
adc
pop
jl
orb
xchg
mov
mov
mov
mov
pop
notl
add
dec
sbb
mov
adc
push
mov
add
sub
lods
pushf
mov
pop
jne
jecxz
push
in
and
ficomps
cltd
stc
ljmp
lea
mov
fldl
add
mov
or
cmp
fadds
scas
icebp
das
in
inc
dec
das
fs
push
jle
or
outsl
add
rcrl
mov
ret
imul
rorl
mov
inc
inc
insl
jmp
mov
or
movsb
ret
imul
hlt
sub
xor
or
rolb
and
dec
xor
or
mov
xor
cmpsb
sub
data16
mov
iret
sti
insb
and
push
cmp
icebp
push
in
jae
loopne
push
iret
leave
ss
lret
out
dec
scas
pop
pop
stos
sahf
test
stos
les
cmp
dec
arpl
jg
add
sub
push
and
outsl
arpl
push
mov
js
adc
push
inc
and
fidivrs
push
and
xchg
pop
js
sbb
stos
sbb
nop
scas
out
notl
cmpsl
and
arpl
cmp
pop
xlat
adc
or
cmpb
add
mov
push
clc
int3
push
xor
pusha
mov
jo
add
lods
nop
lods
and
mov
cwtl
mov
cli
popf
mov
decl
inc
jmp
dec
int3
fidivrs
and
int
dec
inc
xchg
js
aad
pusha
pushf
stc
mov
mov
dec
adc
les
aas
cmp
int3
outsb
out
jge
push
sub
add
lea
inc
out
jg
mov
inc
cli
push
dec
pop
loope
cltd
push
jmp
std
add
ret
inc
bound
shl
lods
pcmpeqw
mov
ret
mov
push
dec
cld
pop
loopne
xchg
and
leave
or
xchg
cld
movsb
lods
mov
and
jb
pop
xchg
cwtl
test
add
add
pop
mov
lahf
je
pop
adc
jo
xchg
stos
ja,pn
test
or
test
pop
xchg
ss
pusha
sarl
inc
adc
add
lret
fisubrs
xchg
xor
ret
ja
mulb
xchg
add
repz
mov
dec
test
into
daa
cmp
xchg
movb
hlt
inc
dec
cwtl
hlt
pushf
ret
inc
push
fcmove
nop
dec
lds
jg
xchg
daa
popf
cmp
bound
imul
sahf
adc
sub
push
mov
add
jnp
sbb
push
fsubp
jecxz
scas
mov
lret
push
mov
pop
or
out
pop
adc
ds
push
xchg
push
sub
mov
adc
fiaddl
or
jo
adc
xor
xchg
jmp
insb
out
aam
cmp
or
xor
mov
enter
mov
movsl
in
add
pop
adc
aad
imul
imul
pop
ret
pusha
mov
sub
cmp
stc
fimuls
movsl
xchg
leave
jg
xor
out
add
fstpt
pop
push
shll
xor
bound
rorb
popf
pop
pop
andl
sbb
dec
test
mov
fistpl
dec
sub
jp
dec
pop
sbb
dec
arpl
loop
xchg
inc
cmp
movsl
sbb
outsb
sub
aad
and
mov
loop
lods
fisttps
in
call
ret
insb
aam
dec
sti
push
orl
or
aad
pusha
imul
sbb
sbb
movsl
cmp
lods
insl
and
stos
in
loopne
mov
push
xor
jmp
xor
xchg
add
mov
cli
xchg
lahf
orl
xchg
xchg
inc
arpl
mov
cmp
sbb
scas
dec
pusha
inc
rcrl
iret
jg
out
jae,pn
pop
sarl
leave
cmp
pop
push
cltd
or
jg
scas
sarl
inc
repz
stos
cli
fcoms
movsb
jmp
sbb
xor
scas
lods
jno
inc
push
jmp
clc
incl
jo
fwait
mov
enter
and
mov
dec
jg
cld
jge
ret
mov
movsb
and
pushf
aaa
push
rcrb
inc
mov
and
dec
pop
rolb
dec
mov
cmpsb
cs
das
xchg
push
xor
mov
pop
pop
call
push
mov
push
sub
cmc
adc
repnz
dec
pop
sti
cmpsb
inc
imul
andb
sub
into
ffree
xchg
xor
add
cmp
inc
sbb
sub
stc
mov
out
mov
js
add
pop
adc
mov
sub
or
sub
testl
or
cli
adc
xor
int
mov
mov
mov
out
ja
subb
cli
jge
push
mov
xchg
enter
dec
jno
inc
loope
jle
out
jle
fistpl
inc
mov
cmp
and
outsb
ljmp
xchg
jb
repz
jl
push
jb
inc
mov
std
fnstsw
sbb
push
lret
loope
cmp
pop
jle
xor
lea
xchg
sbb
mov
mov
lock
and
out
loop
jnp
and
notl
push
stos
push
or
and
in
mov
ret
fimuls
imul
sbb
cs
dec
dec
jb
add
add
mov
xor
addl
jnp
mov
and
mov
jns
fs
cs
bound
sbb
in
cli
insb
sub
push
jg
jbe
jnp
add
imul
pop
adc
test
push
mov
ficompl
xchg
sahf
repnz
cli
les
jne
push
add
pop
pop
add
mov
negb
pop
inc
xchg
adc
iret
jb
loope
dec
lret
push
xlat
ljmp
xor
inc
in
xchg
jns
mov
inc
mov
cwtl
mov
cmc
jle
xor
jmp
sti
data16
bound
cmp
sti
xchg
and
outsb
sbb
enter
cmpl
push
cmp
inc
pop
cld
pop
idivb
pop
paddsw
sub
in
movsb
inc
add
jo
push
push
ret
movsl
mov
fstpl
sbb
pushf
dec
push
and
cmc
ds
cmpsb
add
cmpsl
popa
out
mov
push
mov
fsubs
push
les
xchg
test
adc
inc
cs
rcrb
int3
je
mov
mov
push
dec
mov
lret
out
add
or
fwait
gs
fbld
dec
dec
sarb
stos
outsb
cmc
mov
sub
jge
mov
push
aaa
inc
sbb
ret
push
stos
push
sbb
mov
dec
sub
imul
xor
ds
pushf
testb
push
push
cltd
popf
inc
sar
push
jae
fadd
inc
movsb
jo
imul
pop
xchg
inc
adc
xor
cmp
sbb
repnz
repnz
hlt
push
inc
fcomps
dec
mov
and
add
jge
mov
dec
push
bound
popf
push
das
xor
out
mov
xchg
mov
jb
add
and
scas
stos
lcall
xchg
mov
mov
loop
ja
mov
in
shrl
fnstcw
xchg
cmp
push
sbb
movb
fdivs
dec
mov
cmpsl
jb
mov
jmp
pop
push
dec
inc
decl
inc
in
jmp
sub
push
in
pop
inc
mov
js
pop
mov
xchg
sbb
dec
mov
inc
cs
arpl
lods
and
inc
add
mov
imul
add
cld
mov
sbbb
cmp
enter
lahf
sbb
data16
daa
pop
int
lahf
xchg
stc
push
test
andb
xchg
sbb
mov
fcoml
sbb
push
int
test
adc
or
mov
mov
xor
sub
cs
cmp
call
cmp
xor
mov
inc
ljmp
daa
fnstsw
in
fcompl
sti
jnp
mov
cmp
inc
sbb
lret
in
inc
jo
dec
aaa
fnstenv
lds
jge
mov
hlt
lea
or
inc
insb
jae
les
push
xor
xor
jecxz
hlt
rolb
shll
loop
pop
imul
data16
adc
push
fcompl
out
and
loope
fstl
sti
push
jo
cmc
sub
push
clc
cmc
pop
lods
ja
mov
pop
rcr
adc
sahf
lods
lahf
addl
jb
leave
jecxz
scas
pop
or
push
mov
rol
call
cwtl
xor
int
mov
jne
mov
aad
addr16
add
mov
in
js
jnp
mov
push
movsl
or
pushf
test
daa
push
test
xchg
cmp
xlat
mov
pop
and
or
sub
xchg
loopne
sbb
dec
scas
fs
dec
popl
push
push
aam
cmc
divl
ret
xorb
mov
test
xchg
pop
test
lahf
xorb
clc
ret
sub
popl
in
divb
lods
movsl
xor
xchg
inc
add
xchg
ficoms
stc
mov
fldcw
roll
add
xor
push
mov
stc
mov
enter
loopne
popa
dec
pop
cmpsl
xorl
sub
jbe
outsl
mov
jp
jne
fs
mov
pushf
or
adc
cmp
jecxz
and
dec
bound
std
push
adc
cmp
test
cmp
jecxz
push
jecxz
xchg
xor
sub
cmp
mov
popf
sub
cmp
call
fmul
enter
push
xor
push
in
jns
mov
jbe
test
cmc
inc
mov
dec
jne
paddsb
popa
cmp
in
inc
push
mov
mov
dec
sbbb
outsl
or
scas
pop
loope
jb
out
bound
dec
test
mov
hlt
mov
dec
mov
cs
mov
movsl
jb
loopne
pushf
insb
clc
jmp
inc
xor
fucom
push
sbb
mov
push
push
cwtl
aam
out
popa
idiv
repz
mov
push
cmp
and
cmpsl
xchg
dec
mov
data16
xchg
cmc
out
loopne
pop
xchg
insb
xor
leave
cli
nopl
popa
fs
jp
push
add
xchg
pop
in
or
test
or
cmp
mov
sbb
lcall
ret
lret
pop
hlt
mov
push
mov
and
cltd
pusha
movb
ret
adc
sub
pop
xor
jnp
arpl
xchg
push
jns
outsb
ficoml
xchg
sahf
std
jl
cmpsl
test
xor
hlt
imul
mov
aad
dec
xchg
addr16
adc
test
insb
call
sub
xor
insb
sbb
inc
sti
out
insl
push
mov
xchg
sub
xor
lret
roll
xchg
xchg
enter
call
inc
test
orl
sub
or
dec
loope
pop
popf
mov
inc
sahf
mov
sbb
cmp
pop
loop
push
sbb
pop
pusha
in
dec
std
sub
movsl
cmp
mov
push
pop
jge
and
out
cwtl
jne
lcall
xor
gs
cmpsb
sub
mov
ret
repz
cmc
sbb
aam
gs
cmp
cmp
lahf
xchg
pop
pop
sub
dec
mov
les
shll
lods
fistps
stc
test
out
push
push
dec
and
xchg
and
mov
push
jl,pt
cwtl
cld
adc
mov
sarb
add
sbb
pop
jg
mov
mov
hlt
sub
mov
loop,pn
rcr
dec
cmpsl
xchg
mov
aad
data16
mov
aas
inc
mov
pop
fnsave
ja
lock
in
xchg
pop
fdiv
adc
sbb
and
inc
adc
or
cs
fiadds
fnstsw
ss
lret
mov
out
adc
pusha
fistpll
pop
or
or
or
xor
jecxz
fs
jnp
mov
ret
and
mov
aam
test
sbb
scas
arpl
pop
shl
cmp
add
mov
dec
xchg
imul
inc
bound
jge
mov
pop
xchg
je
je
int3
xchg
mov
loop
pop
push
adc
adc
sub
sub
ret
repz
jl
dec
out
or
mov
arpl
xchg
push
loopne
test
mov
xor
pop
ljmp
in
movsb
loop
sub
xor
outsb
lahf
cwtl
imul
cwtl
adc
rcll
mov
call
dec
fisttpl
in
imul
insl
popf
imul
int3
push
mov
fimull
cmp
jnp
mov
dec
std
adc
adc
adc
xor
mov
dec
mov
insl
lret
adc
xchg
push
sbb
cmp
mov
std
loope
jbe
inc
mov
push
inc
dec
rcrb
sbb
jb
xor
push
in
mov
cmp
dec
push
ja
sbb
pop
sbb
pop
cli
or
std
pop
jp
sub
movsl
rclb
roll
and
mov
pop
push
lcall
push
jo
dec
call
jne
push
mov
bound
add
lods
cmp
loopne
or
ljmp
jl
ja
out
inc
in
push
cld
shr
pop
and
mov
pop
pop
and
insb
in
lock
mov
adc
movsb
pushf
inc
enter
mov
loopne
gs
xor
mov
cmp
xor
pop
test
hlt
pop
jo
int3
sbb
cld
pushf
rcr
out
dec
aad
adc
xchg
fs
sbbb
and
je
or
xchg
fdivrs
in
push
aaa
cmpb
stos
jp
mov
mov
mov
pop
cmc
adc
jno
mov
jnp
pusha
pop
mov
out
in
imul
jo
enter
cli
or
sbb
cwtl
mov
adc
dec
mov
jne
clc
into
aas
test
icebp
and
movsb
stc
rol
hlt
cmpsl
jmp
divl
in
sub
sbb
cs
mov
sarb
push
test
dec
mov
test
sti
lock
jge
jb
stc
push
adc
inc
inc
xchg
xor
movsb
lcall
dec
shll
sbb
push
jo
aaa
dec
xchg
xor
stos
inc
scas
cmc
fildl
xor
cltd
fisttps
push
in
inc
stos
push
push
adc
aas
jns
pop
loop
loop
ret
rol
divb
insb
fnstenv
xorb
xor
fsubs
ds
jne
mov
cmp
jbe
mov
and
popa
cmp
xchg
push
jmp
sarl
in
dec
cld
pop
lock
adc
inc
out
add
inc
out
movsb
pusha
dec
adc
cmp
js
inc
mull
int3
ljmp
cmc
subl
xor
fsubrs
lahf
movsl
js
sbb
mov
cmpsl
or
adc
lret
or
mov
inc
jp
push
inc
add
jbe
push
add
sub
xor
mov
xlat
jmp
or
adc
shr
dec
xchg
dec
scas
xchg
push
inc
mov
push
push
mov
xor
into
push
fwait
adc
mov
mov
jmp
push
ror
mov
enter
xchg
idivl
pusha
xor
mov
lcall
std
xchg
mov
dec
popa
mov
mov
inc
dec
add
adc
adcb
idivl
mov
pop
lea
pushf
mov
mov
ss
push
xchg
inc
and
shr
lahf
popa
mov
cltd
movsl
jns
cwtl
xlat
fsubrs
push
repnz
add
sub
jb
or
cmp
inc
or
aas
inc
cmp
mov
jmp
or
xchg
xorb
arpl
sbbb
imul
adc
sub
and
and
adc
mov
pushf
pushf
aad
pop
adc
cmp
pop
pop
sub
and
sbb
dec
mov
jo
or
test
mov
or
loopne
xchg
inc
mov
test
pop
aad
pop
int3
test
ret
add
fs
lahf
pop
outsl
xor
arpl
sbb
popf
neg
daa
pop
jecxz
xchg
ret
daa
lret
jmp
lahf
adc
pop
inc
dec
call
das
pop
pop
je
mov
adc
rorl
iret
jp
das
mov
shrb
in
mov
adc
cmp
enter
adcl
outsl
push
mov
in
fildl
push
pop
mov
mov
enter
mov
imul
xor
dec
into
mov
add
or
mov
jg
stos
dec
lods
or
inc
fs
inc
or
aad
xor
test
sahf
and
shl
fsubrl
aaa
clc
jmp
notb
das
sbb
pop
push
lret
pop
sub
jecxz
int3
xchg
push
icebp
bound
arpl
ss
je
rorb
sarb
pop
das
in
out
lret
cltd
roll
adc
je
push
xchg
lret
cmpsb
dec
ret
pushl
repz
mov
cmp
inc
adc
push
xor
adc
sbb
ja
insb
push
inc
mov
xchg
xor
xchg
cmpsb
jnp
mov
sbb
add
popf
or
leave
inc
lods
ret
sub
or
rcr
ja
adc
cmp
xor
mov
lds
ret
jecxz
rcrl
js
dec
cmpb
jl
cmpb
lods
adc
jle
test
in
daa
cltd
and
jp
sahf
xchg
add
mov
out
gs
cmp
call
adc
push
mov
inc
cmpsl
movsb
jecxz
pop
dec
idivb
or
push
loope
inc
lahf
mov
and
dec
cmpsb
mov
mov
sbb
add
inc
sub
leave
pusha
decl
pop
mov
cmp
shlb
push
xchg
gs
sbb
das
rorb
add
call
mov
frstor
movsb
xchg
lcall
popf
mov
movsl
jae
mov
xor
cwtl
pop
loop
rorl
rcrl
xlat
lahf
in
pop
dec
call
jns
jge
out
inc
sub
add
dec
mov
inc
stc
rorb
ss
daa
adc
aam
push
lahf
jle
bound
in
imul
adcb
faddp
mov
fnstcw
lret
ret
lods
int3
scas
mov
push
xchg
sub
sbb
fcmovne
mov
xchg
and
lret
shll
mov
dec
ret
fidivrl
daa
sti
or
pop
cwtl
xor
aas
cmp
div
sbb
dec
cmpsb
pop
lahf
das
push
pop
mov
inc
fidivs
push
loope
int3
sbb
test
les
pop
xchg
pop
loopne
out
aad
je
ret
and
jns
and
aas
outsb
or
mov
fldenv
aaa
mov
sub
and
shl
mov
inc
js
push
and
sarl
add
xor
push
repz
rorb
loopne
sub
gs
imul
jo
inc
call
sarl
cmp
jo
push
jnp
pop
int
jg
ret
sub
push
and
jbe
and
pop
iret
fmuls
add
lret
add
mov
pop
adc
mov
ljmp
data16
jae
inc
ret
add
jae
xchg
fildll
cmp
mov
push
outsl
fdivl
dec
add
loopne
sbb
cmpb
divb
push
mov
out
ret
pop
jecxz
sbb
push
push
movsb
popf
push
repnz
dec
test
jnp
jle
out
inc
sbb
test
push
dec
sbb
or
fmuls
mov
adc
fistl
lods
xor
pop
jp
mov
push
in
cmc
or
push
jno
repnz
pop
mov
sti
mov
or
push
dec
mov
fs
push
test
cmpsb
or
mov
jp
into
cli
stc
test
enter
lcall
xchg
out
insb
shlb
cmp
push
sarl
pop
jge
popf
push
sub
xor
inc
push
imulb
shlb
ss
or
and
mov
mov
mov
pusha
jge
add
pusha
cmp
or
roll
fnsave
xchg
xor
outsl
dec
loopne
pop
jbe
adc
add
inc
ljmp
cli
hlt
jbe
dec
pop
push
fs
insb
mov
jp
out
int
push
out
bound
inc
jmp
or
sub
jnp
lods
sbb
sbb
jbe
pop
push
inc
jbe
in
and
jge
fmuls
mov
test
adc
push
loope
lods
movsl
pop
jns
lcall
in
repnz
inc
shlb
xor
stos
adc
mov
mov
mov
inc
cli
das
sbb
sbb
cwtl
push
scas
popa
jg
rorb
cli
push
inc
daa
jle
lds
shl
movsl
and
rolb
inc
mull
and
int3
mov
and
push
repz
xor
les
jb
scas
roll
inc
push
xchg
sbb
mov
pop
call
adc
popa
fsts
sub
outsl
adc
and
xlat
dec
mov
out
add
icebp
loopne
int3
mov
popf
cltd
add
xchg
divl
das
xchg
lcall
cmp
stos
sub
mov
daa
loope
mov
xchg
jb
adc
cmp
lock
data16
test
fs
hlt
cmp
mov
adc
popa
sti
sub
xchg
mov
inc
push
insl
mov
inc
inc
imul
xchg
dec
lret
fstl
lret
dec
int
rolb
out
or
pop
xlat
mov
aaa
popa
pop
int
rclb
xor
pop
cmp
xor
pop
mov
mov
sub
add
mov
mov
add
push
inc
add
pop
add
insl
imulb
xor
mov
enter
sahf
scas
popf
lods
test
leave
push
outsl
xchg
shrl
fistpl
xchg
sbb
mov
cwtl
mov
xchg
and
sub
cli
jbe
insl
ficoml
sbb
push
cmpsb
inc
ss
test
push
and
pop
ror
dec
enter
ficomps
inc
push
mov
mov
jge
add
xor
push
pop
ret
add
sub
jb
insb
jmp
test
aad
or
pusha
outsb
mov
sub
mov
xchg
add
scas
inc
pop
fists
call
scas
stc
mov
inc
cli
into
mov
lret
xor
push
imul
sbb
loope
neg
xchg
sbb
cmpl
sbb
imul
xchg
rorl
imul
pop
fstpt
push
ss
add
sbb
push
xor
cmp
cmp
cmc
mov
andl
mov
xchg
rcrl
add
adc
mov
jb
sub
jae
sub
push
lcall
sbb
mov
into
mov
cld
xor
pop
jae
sub
popl
and
out
and
adc
outsb
cld
lret
gs
dec
cmp
test
pop
decl
push
push
mov
jl
lret
mov
mov
test
jae
mov
sbb
loop
dec
mov
cmp
pop
lock
test
sub
cmp
lods
push
movsl
pop
data16
pop
sub
and
xchg
int3
mov
and
sbb
jb
and
ja
ljmp
push
icebp
xcrypt-cfb
cmpsl
es
push
fs
jne
mov
jg
push
add
mov
mov
cmp
pusha
mulb
mov
clc
ja
jmp
jns
mov
add
xchg
hlt
or
add
pusha
inc
das
dec
aad
in
push
jno
mov
scas
sub
jmp
arpl
or
jne
sub
adc
icebp
xor
pop
push
dec
negl
cmp
arpl
jecxz
movsb
push
cmp
popa
iret
movsb
ja
cmpl
sti
push
mov
movsb
sbb
jg
fisubs
push
dec
loope
cmp
adc
lahf
sub
stos
mov
cli
mov
test
jno
popa
test
xchg
xor
movsl
and
dec
leave
and
push
addr16
aas
daa
daa
inc
gs
movsb
mov
mov
adc
or
cmpsb
cmp
xor
cmp
jmp
add
imul
lock
cmp
sub
out
cltd
cltd
pusha
adc
movsl
leave
jb
adc
sti
dec
call
enter
sub
xchg
jmp
test
pop
jns
jecxz
push
mov
sub
or
ret
push
pop
push
popa
ds
xor
cmp
clc
add
add
cld
mov
cmp
adc
popa
int
inc
push
cld
js
ret
outsl
andb
dec
xchg
and
andb
movsb
popf
add
aas
scas
inc
aaa
cmp
lods
insb
xchg
leave
sbb
pop
push
pcmpeqd
jne
jae
inc
inc
add
xchg
mov
test
dec
sbb
push
sti
mov
pop
fs
int3
adc
or
dec
jg
jmp
push
dec
and
scas
pop
mov
fucomp
push
shlb
xchg
xchg
outsl
cwtl
adc
aaa
pop
icebp
int
pop
push
es
push
xor
sub
xchg
mov
sub
popf
xchg
and
cmpsl
adc
pcmpgtb
push
cmc
cmc
cltd
shll
test
pop
and
inc
jge
icebp
ret
fcoms
mov
adc
adc
hlt
lcall
pop
mov
mov
jo
push
sub
push
adc
mov
jge
push
push
hlt
testl
dec
mov
mov
mov
das
sub
loop
xchg
imul
fstp
sbb
cmp
mov
xorb
cli
cmp
sbbb
pop
xchg
lea
lods
xchg
cmc
rclb
adc
hlt
std
fsubs
adc
push
push
sub
stos
lcall
xchg
xchg
data16
mov
or
push
test
mov
shll
cltd
mov
iret
icebp
cmp
xchg
testl
mulb
aad
mov
lds
aad
call
pop
jmp
jae
jge
add
add
inc
ja
outsb
ret
pop
fcomi
addr16
sbbb
push
sbb
sar
and
sub
addb
fistpll
mull
mov
sbb
inc
adc
push
cli
jne
stos
and
pop
rcll
cmp
inc
mov
push
xchg
xchg
mov
shlb
mov
fldl
or
ror
sbb
lcall
lea
cwtl
jg
mov
cltd
xor
adc
dec
jnp
ja
adc
enter
pusha
sub
lret
insb
lcallw
inc
in
sub
fucomi
mov
push
hlt
inc
jecxz
or
jl
or
mov
mov
iret
and
inc
shrl
mov
sub
or
jg
cmc
dec
aaa
stos
xor
test
cmp
or
loope
cmpb
ret
mov
dec
and
mov
mov
es
pop
pop
jb
shrb
clc
dec
jns
inc
sbb
push
xchg
dec
mov
push
inc
mov
shlb
adc
xchg
jge
and
pop
xchg
or
push
rcrl
or
mov
dec
xor
mov
ficomps
popf
sti
lret
mov
sbb
adc
push
jb
jge
pop
stc
push
cmp
sti
enter
adc
push
rcrb
in
mov
mov
fmull
cld
movq
out
jmp
mov
sbb
and
inc
dec
mov
mov
pop
mov
mov
dec
xor
aaa
cld
and
dec
sar
outsl
mov
fdivrl
jl
sti
insb
lock
insb
push
jnp
bound
pop
cld
popa
or
adc
and
pushf
int
pusha
push
push
or
mov
cmp
lret
mov
and
das
xor
clc
sub
lcall
push
in
repnz
cmp
cmp
insb
inc
loop
add
cs
xorl
pop
inc
loopne
das
stos
xor
pop
test
lahf
stos
adc
push
mov
xor
mov
adc
push
sbb
sti
aas
push
mov
leave
outsb
scas
inc
popf
inc
mov
xor
xchg
jmp
jg
ljmp
cmpsb
mov
mov
and
mov
sub
in
daa
addr16
jge
aad
ja
push
cmpsl
mov
sarl
and
stos
add
adc
xchg
jle
cmp
lahf
imul
sbb
push
arpl
dec
push
pop
jo
daa
jl
adcl
sub
es
popf
cmp
mull
or
push
sub
jp
test
repz
aad
loop
cmp
pop
mov
lret
stos
mov
cmp
mov
inc
rorb
sub
adc
sbb
stos
in
cld
mov
inc
rcr
popf
cmc
sbb
jg
cmp
iret
mov
mov
mov
enter
mov
pusha
mov
push
scas
jnp
dec
sub
push
mov
icebp
enter
push
pop
lea
lret
rol
lret
xlat
ja
pop
test
xchg
loope
arpl
and
dec
arpl
jnp
inc
push
pusha
lret
ficoml
adc
rolb
lret
jb
dec
lret
aam
jo
idivb
outsl
adc
enter
pop
insl
add
sbb
jno
mov
pop
cld
lock
xchg
shr
dec
lock
lret
shrl
inc
in
jnp
rcl
pushf
int
sbb
pop
push
mov
mov
arpl
int
pop
and
push
or
adc
xchg
fadd
lods
adc
dec
mov
pop
das
sub
test
ljmp
mov
dec
adcb
mov
jp
lods
movsl
push
fsubrp
fmuls
in
adc
repnz
in
ja
push
push
andb
dec
aas
push
cmpsl
test
jb
xchg
xchg
sbb
sub
sti
pop
xchg
sbb
rclb
jbe
dec
mov
cmpsl
dec
xchg
jb
lahf
pop
add
and
xchg
js
jb
mov
mov
add
repnz
out
add
push
cld
shrb
jb
jecxz
cli
mov
bound
and
mov
jo
inc
jnp
jge
xchg
out
or
mov
das
shld
rcrl
xor
das
movsb
sbbb
pushf
out
scas
mov
lahf
inc
dec
pop
loopne
sub
cld
addr16
jmp
call
ljmp
jno
fistpl
mov
mov
dec
sub
xchg
sbb
or
or
add
and
lahf
sub
fnstsw
mov
ret
jge
stos
bound
nop
cmp
lea
fst
data16
aad
mov
int
mov
xlat
mov
pop
cmpsl
cmp
outsl
push
pop
cltd
sub
pop
decb
mov
fs
pop
rorb
pop
sub
xor
lret
dec
fwait
sub
xchg
sbb
push
cmp
addr16
push
lock
movswl
xlat
test
mov
addb
cli
ljmp
add
in
loop
aam
int3
stos
jg
or
cmpsb
xor
cmpsb
jmp
cmp
js
mov
enter
dec
ja
addb
xchg
inc
imul
insl
out
cmpsb
pop
stos
push
jg
int
lret
aad
outsb
inc
fwait
pop
pushf
fcomps
sub
fmuls
jo
adc
jge
lods
popf
adc
scas
mov
call
push
mov
adc
pop
sarb
outsb
jnp
cmc
stos
sub
or
test
inc
and
outsb
rclb
imul
sbb
mov
push
lcall
mov
push
aam
cwtl
ret
cmc
add
mov
adc
loope
xlat
lret
clc
cmp
test
outsl
out
pop
mov
stos
hlt
cld
or
andb
ja
jmp
les
iret
sub
daa
mov
xchg
repnz
dec
cwtl
cmp
mov
adc
fwait
mov
add
ljmp
inc
shlb
add
xchg
or
hlt
push
jl
xor
sbb
les
frstor
ja
insb
inc
divb
in
shlb
repnz
cmpsb
out
gs
iret
cld
jle
cmp
call
addr16
mov
outsb
test
push
je
jns
addr16
or
and
or
dec
movsl
push
sub
sbb
leave
loopne
sub
ret
popa
adc
popf
jbe
dec
xchg
or
fiaddl
sarb
xchg
xor
cmc
shlb
xor
or
pop
mov
cmp
pushf
dec
popa
or
ja
faddl
aaa
cmp
out
imul
adc
test
scas
in
stos
gs
push
loope
pop
lret
xor
jnp
add
sbb
test
xchg
or
frstor
ret
pop
jecxz
lock
sub
mov
jb
push
mov
sbb
and
in
xor
lahf
push
leave
pop
jb
lock
pop
push
loopne
add
and
lea
sbb
xor
notl
mov
call
xor
rcr
adc
ficomps
scas
xchg
outsl
das
inc
add
scas
xor
cwtl
scas
push
or
sarb
mov
clc
jbe
xchg
ljmp
loope
pop
paddusw
mov
cs
mov
out
dec
jb
es
adc
inc
adc
in
jle
mov
test
repz
add
adc
add
or
xchg
dec
sub
jge
jecxz
mov
jle
mov
fmuls
in
sbb
mov
mov
push
dec
imul
mov
mov
xchg
mov
jno
xor
inc
fistpll
cmc
lret
push
mov
jl
push
jbe
mov
leave
add
pop
mov
xchg
mov
mov
fwait
sti
mov
sub
xchg
stos
and
mov
dec
cmpsb
cs
and
xchg
inc
or
in
notl
pop
lret
scas
push
lods
add
mov
xor
push
push
stos
add
xchg
mov
lods
fcmovnbe
movsb
rorb
cwtl
inc
popa
fldl
mov
xchg
mov
dec
orb
loop
lods
test
mov
sbb
movb
or
popf
xlat
jp
movsb
outsl
arpl
cs
ret
loopne
shrb
push
in
int
mov
scas
cld
sub
lea
iret
in
pop
loop
fs
pop
imul
pop
sub
test
mov
enter
xlat
sub
out
sub
nop
fstl
dec
adc
mov
inc
ds
shl
mov
imul
or
movsl
stos
hlt
out
daa
gs
test
or
hlt
sbb
divb
sti
jp
mov
jnp
fwait
dec
sar
inc
sbb
icebp
adc
pop
pop
jmp
mov
pusha
cmpb
push
ja
imul
sub
and
inc
sub
iret
inc
push
xchg
in
roll
add
push
inc
push
clc
add
cli
sub
subl
sub
divl
aaa
jmp
jns
aas
mov
cmp
popl
mov
add
inc
add
sahf
or
addl
cmc
in
xchg
pop
add
dec
and
call
adc
xchg
push
dec
mov
jnp
add
xor
lods
inc
jb
data16
pop
dec
push
mov
ds
adcl
add
mov
jae
xor
andps
pop
sbb
rol
inc
mov
mov
and
push
loope
cmp
mov
and
fwait
mov
jo
pusha
icebp
cmp
inc
mov
adc
cmpb
in
mov
rcr
push
cmp
xchg
cmp
hlt
outsb
in
and
inc
cltd
bound
aam
mov
add
out
stos
rcll
fnstcw
arpl
cltd
mov
inc
pop
xchg
test
adc
xchg
cmp
mov
mov
jmp
mov
mov
stos
add
sar
adc
mov
cmp
cmp
imul
inc
push
adc
mov
push
loop
push
jnp
dec
lcall
pop
test
test
pop
cltd
xor
fwait
cmc
addr16
test
mov
mov
or
pop
xor
push
sbb
mov
les
add
out
out
add
cmpsb
xor
mov
add
imul
pop
cwtl
mov
mov
imul
pop
mov
xor
jl
mov
mov
pop
or
sbb
mov
xchg
jo
jp
cmc
jp
xchg
xchg
aaa
leave
cmp
add
divl
clc
mov
mov
loope
lret
xchg
inc
jmp
xchg
addr16
testb
std
mov
in
dec
repnz
mov
mov
push
sbb
aad
or
sti
pop
jo
clc
mov
xor
call
shrb
mov
dec
mov
and
xlat
add
das
xor
sub
movsb
gs
cmpb
cmpsb
push
pop
std
in
mov
inc
in
mov
ljmp
notl
jo
rcl
mov
int3
lret
into
cmp
push
in
sub
cli
xchg
push
stos
xchg
lods
mov
xchg
and
xor
scas
mov
xchg
mov
mov
cwtl
inc
loop
in
popf
push
jmp
out
rorb
mov
popf
int
jo
and
out
mov
and
fsubrs
mov
ds
ljmp
aad
test
ss
enter
jns
fnstcw
stos
mov
aam
or
movsb
xchg
jl
xor
lea
jae
fmull
outsb
sub
xchg
out
adc
icebp
bswap
xor
mov
and
inc
int
cmpb
dec
pop
xchg
sub
mov
mov
inc
cmp
aam
mov
jge
js
std
movsb
push
shl
test
inc
dec
jl
cmc
cs
cltd
out
rclb
push
jb
sub
cmc
stos
xchg
cmp
mov
aas
pushf
outsl
xor
push
mov
mov
incb
push
test
pop
inc
mov
fildll
mov
lahf
shl
and
sarb
push
lss
xchg
and
push
iret
xor
add
adc
imul
inc
popa
dec
sarb
ds
xlat
ljmp
mov
inc
pusha
aad
xor
fwait
je
mov
jg
sub
push
add
aaa
mov
aam
imul
adc
stos
push
or
xlat
outsb
dec
inc
add
rcrb
mov
adc
loopne
stos
bound
mov
rolb
mov
jle
or
jecxz
mov
jle
or
push
jle
sbb
push
xor
add
fs
sub
adc
inc
leave
or
push
rorl
dec
mov
adc
cmp
cmpsb
mov
sub
aas
adc
xchg
out
mov
push
push
xor
mov
push
ret
iret
ja
je
dec
lods
xlat
add
jecxz
outsl
repz
loope
pop
pop
in
inc
shr
push
and
stc
xchg
mov
mov
ljmp
out
repnz
arpl
fisttpl
ja
sbb
insb
sub
mov
fwait
ds
mov
stos
test
fists
mov
cmp
scas
pop
inc
dec
push
inc
ret
push
mov
pop
mov
cwtl
pop
mov
bound
sbb
pop
imul
test
add
inc
mov
ljmp
cwtl
dec
dec
inc
push
imul
xor
xchg
test
mov
test
insb
hlt
test
mov
cmp
outsl
dec
jg
mov
cmp
adc
sbb
sbb
mov
jno
test
dec
loopne
icebp
mov
andl
loop
mov
xchg
mov
mov
int
rcrb
and
outsb
nop
mov
add
xor
js
fs
movsb
push
aam
lahf
sbb
jnp
es
xchg
cmp
fstps
clc
nop
jno
iret
js
ret
cltd
loopne
sub
xchg
nop
cli
fisubrl
pusha
mov
mov
loopne
mov
pusha
fldenv
mov
pop
add
mov
rorl
ss
iret
xchg
cmpsl
out
insl
iret
xchg
ret
in
jnp
cmp
push
pop
push
scas
je
pop
sub
mov
mov
das
push
dec
mov
out
mov
push
lret
cld
pop
shll
outsb
cmp
mov
inc
movsl
jmp
and
into
mov
xchg
jl
jb
aaa
push
push
sub
inc
jle
pop
fistps
xchg
pop
add
scas
testb
pop
loop
xor
lock
icebp
mov
in
push
and
mov
sub
dec
stos
inc
mov
pop
loopne
popa
xor
mov
mov
into
arpl
in
icebp
fisubl
sub
aas
inc
in
in
cmp
push
mov
lret
push
xchg
scas
fcoml
inc
push
lods
or
push
mov
leave
add
bound
ja
or
jl
jp
not
in
lods
faddl
and
cli
jle
dec
les
insl
mov
sub
dec
sbb
in
aad
shll
pusha
repz
lock
cmp
push
jle
sahf
cltd
sub
into
sub
nop
adc
jge
scas
xchg
sahf
addr16
fisubs
inc
dec
lea
pop
out
push
aaa
sbb
outsb
lahf
cmp
or
sbb
push
imul
jg
mov
xor
cmp
jb
adc
shl
ficomps
inc
mov
stos
sub
ret
jl
fsubs
pop
stos
mov
aam
pop
test
test
jae
jecxz
jge
adc
mov
adc
dec
rclb
xor
sub
scas
stc
pop
sbb
into
inc
sbb
push
cs
push
outsl
mov
test
inc
push
out
dec
shlb
loope
dec
ficomps
repnz
xor
inc
js
adc
jae
lods
ds
mov
push
mov
addr16
adc
xor
inc
ss
mov
rorl
push
mov
movsl
out
mov
popa
pop
inc
fidivrl
xchg
cmp
loop
repz
mov
in
arpl
mov
aaa
xchg
icebp
dec
aad
leave
xchg
dec
lods
imul
out
jne
inc
push
mov
or
addr16
mov
shll
jle
push
sbb
mov
scas
cmp
mov
push
js
dec
mov
mov
inc
push
lea
cmp
cli
jle
add
xlat
jecxz
jp
jno
cs
jo
inc
jne
fbld
sub
mull
push
mov
sbb
cmpl
shlb
pop
push
mov
int
hlt
fdivp
cs
push
movsl
or
jge
jecxz
sbb
mov
mov
cs
test
pop
jnp
and
push
mov
jnp
sbb
ja
stos
jno
ret
cmp
fadds
addr16
inc
lea
pop
aaa
pop
push
inc
scas
fdivl
test
lock
sbb
jae
js
pop
sbb
je
push
ffreep
adc
pop
nop
mov
xor
jne
repz
mov
gs
lret
lcall
jmp
shl
dec
push
movsb
pushf
popf
xorb
cmp
aad
leave
out
cmp
lret
call
fisubl
dec
sbb
mov
popl
pop
cwtl
outsl
and
addb
test
dec
mov
xchg
roll
gs
push
dec
lret
shll
pop
data16
pop
push
sbb
mov
xor
aam
inc
add
mov
mov
cld
cli
imul
pusha
pop
outsl
inc
data16
nop
add
dec
mov
xor
push
jl
mov
xor
xchg
pop
rclb
dec
jno
add
xchg
mov
mov
mov
jne
rcrb
pop
inc
jae
sub
jecxz
imul
jnp
dec
subb
cwtl
or
xchg
pusha
insb
test
or
add
cmp
push
pop
cmp
ret
test
xor
in
mov
xor
popf
in
or
lcall
aaa
or
fs
adc
dec
mov
xor
sahf
and
add
mov
mov
gs
cmp
inc
fs
gs
adc
repnz
lods
mov
dec
jne
pop
ret
mov
test
jl
loopne
xor
pushf
int3
arpl
dec
enter
ret
sahf
cmp
or
imul
xor
lock
pop
fiaddl
dec
mov
pop
lock
repnz
ja
mov
fdivr
aas
xor
cs
or
xlat
inc
sbb
insb
mov
hlt
inc
iret
test
les
adc
xchg
lock
js
push
sub
dec
mov
jmp
and
xchg
mov
push
and
clc
adc
cmp
sub
stos
dec
cmpsl
ret
pop
paddw
pushl
pop
xchg
stos
cld
mov
or
xchg
adc
or
cmp
adc
inc
mov
imul
pop
cmp
push
lea
or
test
int
push
add
xchg
cmp
xlat
mov
dec
xor
stos
add
push
jg
clc
in
xchg
subb
mov
inc
sbbl
cltd
add
fisubl
std
ret
daa
cmp
adc
inc
fsubs
mov
pop
inc
dec
sbbb
inc
fimull
mov
out
js
push
je
jp
insl
in
loop
mov
repnz
dec
popa
insb
bound
xchg
and
sub
lock
lret
inc
test
loope
sub
xchg
movsb
xchg
sar
jg
jle,pn
js
cmp
lcall
xchg
jg
push
push
mov
cmp
jo
and
rcrl
sub
jge
push
sti
or
adc
fiadds
jmp
sub
pop
push
jns
nop
xchg
xchg
inc
add
cld
outsb
orl
aaa
jle
mov
xor
xor
pop
jbe
fsts
lds
clc
cmp
push
cmc
cs
adc
inc
inc
push
and
or
dec
jb
int3
shll
adc
inc
or
or
and
dec
jo
ds
roll
xor
shl
or
and
sbb
std
out
mov
test
sbb
clc
enter
xchg
sub
arpl
mov
pop
cmp
dec
mov
jne
xadd
call
js
and
sub
call
cwtl
adcb
or
jl
lea
rorb
mov
mov
mov
ret
jo
sahf
push
inc
cltd
insb
or
cmp
iret
clc
mov
inc
pop
cmpsl
test
pop
leave
mov
and
pop
mov
pusha
xchg
sbbb
xchg
arpl
scas
jns
adc
ret
jg
inc
pop
out
xchg
pushf
dec
mov
addb
ds
fnsave
shlb
push
push
lret
dec
in
test
in
movsb
cmp
add
xchg
orl
mov
scas
fmuls
jno
lret
cs
jae
mov
cld
jo
and
clc
dec
sub
call
and
lock
jmp
in
hlt
outsb
movntps
jno
or
mov
xor
xchg
movsb
pop
repz
pop
dec
dec
orl
mov
mov
mov
fsub
lods
jp
xchg
int
jns
sbb
adc
cmp
repnz
fcomps
call
cmp
sbb
xchg
push
lock
jp
iret
inc
mov
lods
aaa
aam
adc
mov
mov
and
jmp
arpl
loopne
cwtl
rcrb
sahf
push
out
mov
mov
adc
out
lea
pop
push
frstor
add
or
test
popf
outsl
je,pn
orl
pop
mov
xchg
push
repnz
int
arpl
jnp
fcoms
jg
fldl
mov
mov
icebp
jge
inc
push
and
out
adc
push
loopne
push
out
sub
lods
mov
push
sti
int
sub
popa
lock
loop
mov
mov
jo
ds
pop
cwtl
out
loopne
aas
lcall
push
xchg
fisttpll
imul
int3
std
pushf
mov
fdivs
call
in
loop
shrl
or
repz
mov
fldenv
cmp
dec
push
repnz
call
xor
cmpl
jg
cmpsl
lods
pop
shrb
xchg
inc
and
pusha
and
mov
push
add
pop
mov
pop
aam
icebp
inc
mov
jmp
sbb
fildl
jbe
dec
lcall
lock
or
mov
mov
pop
outsl
dec
inc
mov
pop
int3
ret
data16
mov
mov
popf
push
nop
ja
fcmovnu
fucomp
cli
popa
push
imul
loope
inc
cmpb
filds
jns
sbb
jp
push
scas
sub
inc
inc
xlat
mov
cmp
sub
stc
inc
xor
sub
mov
mov
sub
pop
pop
jns
and
cld
ljmp
adc
mov
and
lods
jbe
and
rclb
pop
xorb
xchg
mov
push
repnz
jo
fs
mov
xor
push
mov
jle
mov
jns
enter
mov
ret
add
out
shrl
dec
jl
mov
jns
fwait
cmp
push
arpl
and
out
jno
scas
fcmovnbe
int3
bound
ja
inc
shlb
int
inc
mov
dec
scas
mov
leave
mov
sub
setge
scas
dec
jbe
dec
insl
scas
inc
and
or
and
mov
mov
es
cmpsb
and
call
ss
daa
je
inc
out
sbb
pop
push
stc
cmp
jbe
ret
xchg
aaa
es
fldenv
and
cwtl
or
adc
shr
gs
xor
test
dec
mov
inc
push
xlat
je
sahf
stos
js
xor
and
push
sbb
clc
addl
and
jmp
lock
fcoml
inc
gs
or
dec
mov
mov
in
testl
sbb
mov
sub
out
jae
cltd
mov
jg
xlat
movntq
or
inc
sub
call
cs
xchg
adc
lea
ret
andl
gs
loop
or
mov
mov
jge
mov
dec
out
hlt
push
mov
imul
sbb
pop
jnp
xchg
lgs
sub
dec
call
sbb
inc
sub
or
adc
sbb
xor
and
sub
lods
out
mov
out
cs
push
addr16
mov
push
add
or
add
movsb
lahf
cmp
sub
insl
imul
xchg
add
mov
in
and
cs
test
ljmp
add
or
sub
mov
mov
push
shrl
cmp
add
mov
mov
cmpsb
cmp
insl
iret
inc
lock
mov
mov
inc
loopne
movsl
inc
xchg
ds
adc
add
xchg
nop
cmc
or
pushf
jnp
xor
int
lea
add
xor
imul
pop
dec
fimuls
adc
xchg
sbb
pop
into
xor
movsl
ljmp
outsl
pop
mov
fimull
imull
clc
push
inc
mov
xor
imul
adc
jl
sub
imul
jns
lea
dec
js
mov
add
icebp
xor
dec
das
cld
sbb
mov
loop
sub
test
and
sbb
lock
into
nop
push
rcl
divl
test
in
ret
lock
lahf
inc
lea
out
adc
pop
out
xor
cltd
lcall
test
dec
loop
xchg
mov
movsb
in
sub
mov
push
mov
push
aaa
push
mov
lret
or
push
mov
pop
push
ret
cmp
outsl
cmp
fmull
xchg
sti
movsl
or
test
outsb
push
outsb
xor
arpl
pop
arpl
push
stos
idivl
mov
call
push
stos
arpl
shrl
enter
sub
fmuls
les
xchg
scas
push
add
adc
add
aad
cmpsl
jbe
mov
add
dec
jo
jne
incl
popf
cmp
scas
aas
inc
and
insl
xorl
xchg
mov
pop
scas
jle
cmp
mov
mov
add
fcompl
xor
arpl
sbb
mov
jo
and
popf
or
iret
call
addl
fnstsw
adc
dec
arpl
arpl
divb
aad
mov
cmp
inc
xor
dec
add
repnz
push
inc
fs
push
push
xchg
or
jecxz
dec
jmp
jbe
scas
add
mov
adc
pop
mov
sbb
cmp
mov
fildl
jb
mov
fistps
and
and
sti
mov
in
pop
xor
loopne
adcl
daa
jnp
insl
xor
sbb
mov
pop
scas
js
rcl
sbb
mov
out
into
adc
and
adc
fstpt
enter
add
gs
loope
mov
jns
test
push
inc
iret
and
cmpb
scas
sub
pop
cwtl
xor
push
test
mov
push
cs
adcl
call
pop
lcall
sub
aas
lea
mov
dec
xor
add
sbb
mov
mov
push
and
sbb
scas
jns
insb
sbb
cld
ja
scas
call
push
lret
xor
jno
pop
mov
jb
nop
loop
jbe
mov
or
inc
pop
cmp
dec
xor
lea
aaa
jl
jnp
xchg
mov
push
popa
mov
sub
inc
jl
and
cli
sar
push
gs
add
ss
in
or
adc
xor
add
push
incb
mov
out
pop
cmp
loope
or
and
cwtl
gs
lret
sbb
mov
xor
call
outsb
mov
add
lock
fdivs
jo
push
mov
cmp
decl
jb
pop
das
je
jmp
xlat
outsb
test
cmp
dec
cmpb
pop
add
mov
test
mov
push
iret
loope
pop
out
je
loopne
repz
fstpl
mov
call
mov
aam
shll
out
loope
out
bound
std
inc
or
sbb
push
sbb
inc
mov
test
das
sti
mov
push
loopne
jmp
in
int3
out
mov
pop
jb
popf
mov
out
push
xchg
aad
mov
cwtl
imul
mov
mov
inc
stos
cs
jne
fwait
and
push
or
mov
push
jne
push
lret
cmp
pop
cmpsl
sbb
push
ret
aam
lahf
sti
mov
int
dec
push
imul
sti
pop
inc
pushf
jnp
enter
lock
xor
adc
in
adc
lock
leave
andl
sub
mov
pop
lret
stos
sub
mov
mov
popa
sub
fbld
je
xchg
xchg
addl
cltd
pop
add
adc
or
lea
mov
xchg
repnz
cmpsb
jmp
jae
data16
sbb
mov
pop
sbb
dec
jmp
jns
cmpsb
fs
fstl
fucom
stos
cmpsb
mov
aam
jmp
fs
dec
into
adc
xchg
setns
xor
mov
jnp
flds
dec
dec
xchg
je
decb
cmpsl
dec
adc
shlb
clc
out
bound
mov
lcall
cltd
arpl
mov
cmp
cmp
add
or
das
adc
sub
or
pushf
xor
test
int
xor
cltd
lret
sbb
pop
or
and
aad
nop
out
js
cld
popl
xor
mov
sarb
sub
push
cltd
sbb
jno
in
insb
jo
std
loopne
sbb
mov
aad
add
test
inc
add
cmp
add
add
lods
test
call
clc
mov
outsl
int
mov
cld
sub
notb
mov
mov
sbb
push
mov
cmp
scas
add
pop
outsb
and
pop
pop
test
mov
xor
xor
call
xor
and
xchg
int
insb
fisttpl
dec
stos
leave
sbb
mov
sub
pop
lret
xchg
enter
inc
mov
test
push
xor
adc
lret
inc
inc
xlat
jp
or
ret
mov
pop
fwait
mov
nop
incl
stos
pop
mov
aad
fildl
jo
divb
jecxz
cltd
pop
enter
ficompl
jmp
jmp
mov
lret
inc
mov
mov
xor
xbegin
into
pop
inc
inc
loopne
mov
mov
sbbl
and
outsl
fcomps
mov
popl
pop
adc
push
lods
imul
int
cli
frstor
outsl
push
hlt
sbb
push
call
aam
mov
xor
adc
bound
jmp
push
xchg
pushf
cld
gs
iret
ret
call
mov
fs
data16
mov
dec
stc
adc
mov
lock
jo
rolb
mov
popa
icebp
aam
or
xor
scas
insb
push
aad
into
push
or
loope
out
or
lods
imull
xor
inc
xorb
cmp
inc
mov
ret
fdivrs
sbb
pop
dec
add
xchg
dec
push
push
jb
lcall
rorl
push
mull
out
imul
pop
in
fsubp
cmpxchg
outsb
inc
mov
pop
pop
scas
add
leave
in
jecxz
push
popf
adc
aam
mov
lahf
orl
iret
mov
mov
jg
inc
xor
pop
jge
inc
fldt
pop
push
cmp
sub
pop
mov
frstor
lea
jge
xor
and
jno
aad
pop
cmp
xor
jbe
insb
and
mov
xlat
pop
pop
lret
daa
pop
imul
mov
cli
cli
es
fxch
fwait
pop
pmulhuw
rcll
xor
sub
shrb
ret
stos
cmp
inc
pop
or
shl
xchg
das
jno
pop
mov
roll
cs
test
cwtl
cwtl
sbb
pushf
mov
mov
xchg
jecxz
scas
sti
push
out
loope
outsb
stos
mov
sbbl
aaa
test
or
jnp
jl
sti
dec
jge
mov
cld
push
sub
inc
cmc
imul
mov
scas
pushf
xor
pop
and
lods
push
adc
mov
in
addr16
jno
pushf
push
xchg
xchg
sub
addr16
mov
stos
pop
lods
cmp
scas
leave
jecxz
jae
xchg
or
imul
dec
push
adc
cwtl
clc
xor
and
jne
sarb
mov
push
nop
sahf
lcall
out
xchg
daa
jl
cwtl
pop
push
adc
mov
cmpsl
hlt
iret
and
and
fs
inc
mov
test
xchg
pop
xchg
dec
pop
pop
adc
pop
jp
fmuls
stos
arpl
xor
mov
and
ja
lahf
sub
lods
aad
cwtl
push
movsl
fstpl
scas
sbb
shl
clc
adc
mov
les
loope
mov
pop
mov
cmp
movsl
jo
mov
mov
fildll
xchg
mov
mov
bound
add
cmpsb
mov
sbb
decb
je
out
loop
mov
jle
shlb
cwtl
pusha
inc
ja
ds
pushf
sub
bound
cs
inc
pop
sub
stos
sub
jbe
out
aad
data16
les
sub
dec
xchg
jp
out
jecxz
in
jle
push
rolb
aaa
mov
jb
pop
cmc
cli
mov
insl
stos
and
shll
mov
sbb
xor
cli
cmp
cs
sbb
jmp
mov
push
jmp
adc
std
mov
push
je
jmp
arpl
lret
jo
ss
movsl
sub
sbb
sub
mov
mov
lcall
imul
and
into
cmp
fidivs
add
out
adc
scas
push
push
pop
inc
sub
sbbl
xchg
add
inc
gs
mov
repnz
cltd
loopne
popf
push
stc
aaa
fwait
inc
pop
out
sub
je
insl
inc
add
es
shl
insb
jb
sbb
cmp
adc
push
pop
pop
xchg
jbe
mov
cmp
testl
sbb
inc
gs
rcr
dec
dec
jg
aas
jne
xor
add
push
xchg
dec
push
stos
mov
rcr
ret
pop
dec
mov
pusha
dec
mov
loop
out
int3
test
jo
jno
adc
cmp
into
dec
push
lock
in
das
jg
jae
jle
js
or
cmp
in
ss
adc
js
hlt
in
in
popf
push
lret
mov
xchg
bound
enter
xor
sbb
int3
loope
imul
aad
mov
cmp
fisttps
jl
adcb
hlt
jecxz
jp
sbb
add
xor
cmp
jp
mov
fidivs
mov
fstp
js
stc
pop
lea
xchg
fwait
pop
loope
cmpsl
daa
cmc
scas
lret
in
xchg
dec
aas
loope
push
sub
mov
mov
les
test
arpl
pop
adc
jb
adc
into
xchg
insb
add
dec
pop
sub
xlat
shll
jl
bound
in
push
popa
push
sbb
pop
sahf
into
xchg
sub
lods
rclb
xor
adc
je
pop
sub
jp
jge
test
shll
pop
or
ja
fnstcw
stc
sbbl
mov
pop
sub
mov
mov
vpextrw
std
mov
mov
cmp
aam
jp
test
arpl
and
stc
cmp
in
xchg
mov
pop
insb
in
lods
push
jns
insb
outsl
jo
jp
mov
cmc
mov
push
xor
lret
push
loope
aad
or
int
or
dec
inc
sarl
nop
cmc
nop
lds
stos
push
push
into
mov
cmc
push
cwtl
les
ja
pop
push
data16
shll
movsb
dec
xor
popa
add
mov
add
pop
add
xor
push
xchg
lods
sbb
push
xor
insb
std
aad
push
xor
mov
testb
es
push
sbb
xlat
sub
aas
push
in
jbe
andl
out
dec
movsl
mov
xor
or
out
push
popa
adc
push
adc
ljmp
inc
sub
push
dec
repz
jnp
fidivs
mov
jge
mov
mov
pop
sbb
jmp
adc
das
inc
ja
jne
out
or
push
aaa
and
mov
subl
out
ret
sub
push
imul
sub
inc
or
xchg
cwtl
dec
out
inc
push
popa
jne
jmp
sub
outsl
adc
push
push
movsb
dec
lds
ja
mov
jo
mov
rdmsr
repnz
mov
jmp
lods
or
mov
outsb
fisttpll
dec
ret
cmpsl
xor
jo
mov
mov
push
jge
sti
clc
mov
jns
push
push
and
into
out
cli
sbb
lods
pop
stos
xchg
mov
inc
push
sub
add
movsb
std
pushf
sub
imul
xchg
aad
out
inc
scas
jbe
mov
lea
cmp
and
insb
sarb
mov
cmp
add
aad
aas
sarl
lret
mov
push
cmp
xor
inc
popf
adcb
mov
mov
cwtl
and
mov
push
pop
inc
jns
fsubrl
movsb
cld
mov
daa
lahf
adcb
out
or
jns
cmc
sub
sbb
std
xor
ss
push
xchg
mov
shlb
adc
scas
test
cwtl
icebp
pop
xchg
add
xchg
lret
and
pop
outsl
push
inc
es
mov
push
fdivs
push
dec
bnd
mov
call
sbbb
adcb
pop
in
or
push
cmpsb
int3
insl
add
movsb
dec
mov
test
or
out
cmp
or
or
daa
sub
pop
push
cwtl
dec
stos
pop
xchg
mov
dec
fbstp
mov
sub
xchg
out
insb
loope
add
pop
fnstcw
adc
pop
xchg
sbb
cmp
adc
dec
xor
push
mov
add
and
js
cmp
sbb
push
lds
fidivrs
jb
pop
inc
out
xor
hlt
xchg
shr
mov
sbb
lods
mov
fmulp
dec
xchg
pop
mov
xchg
fstp
add
pop
add
or
mov
stos
push
mov
push
jg
add
push
xchg
in
sub
fs
xlat
bound
popl
inc
mov
loop
jecxz
sbb
stos
cmpsb
std
or
shrb
mov
jl
jge
and
push
stc
cmpsb
pop
xchg
adc
out
stos
mov
inc
in
xchg
clc
pop
pop
ds
mov
cwtl
jae
mov
xchg
les
mov
shrl
xor
outsl
scas
mov
sbb
pop
testl
pop
cmp
mov
push
iret
inc
xorb
aas
push
fsubrl
xchg
xchg
mov
pop
divl
loopne
or
mov
pop
adc
pop
test
std
gs
mov
push
and
xchg
popf
adc
scas
dec
xor
pushf
inc
add
addr16
cmpsb
fwait
mov
dec
insb
arpl
mov
mov
fists
iret
xchg
push
sbb
gs
xor
shl
mov
nop
ljmp
mov
scas
jle
mov
in
pop
push
cmpsb
outsl
in
jns
dec
push
xchg
or
fadds
enter
xor
xor
aaa
call
jne
add
mov
push
lahf
out
sub
loope
cmp
xchg
enter
adc
popf
addr16
insb
pusha
mov
and
shlb
movsb
lret
sbbb
pop
orb
pop
mov
xor
sub
mov
cmp
dec
hlt
sbb
push
shll
fadds
or
int3
movsb
xchg
xlat
adc
arpl
xchg
stos
jnp
je
add
imul
iret
inc
sbb
cmp
sub
pop
aad
jne
cmpsb
repnz
sub
les
cmp
stc
lahf
and
movsb
int3
sti
ret
inc
mov
outsb
inc
fisubl
adc
push
jg
xchg
cmp
insl
fnstenv
sbb
lret
push
out
mov
add
sbb
test
insl
mov
mov
ss
jb
push
mov
add
mov
mov
inc
push
clc
mov
mov
cmp
add
sbb
fsubrs
repz
pop
xchg
or
push
mov
push
idivb
dec
dec
cmpsb
and
jp
insb
push
mov
cwtl
dec
push
push
rclb
out
mov
xor
xchg
or
push
test
mov
mov
rcrl
xchg
push
outsb
enter
mov
jb
sub
iret
cmp
fmul
sub
lock
lds
imul
fcomps
xchg
jp
cmp
aas
xchg
js
jne
test
cld
ds
fmuls
std
incl
mov
in
jmp
sti
adc
dec
fidivs
adc
or
pop
sub
dec
xor
cmp
les
stc
pop
and
sbb
push
mov
xor
cmp
loope
scas
xorl
fidivrl
icebp
stos
jmp
aas
inc
ja
jg
mov
xor
mov
push
cmp
pop
mov
stos
mov
test
mov
mov
sub
xchg
in
fsubs
imul
dec
cmp
lret
pop
sbb
mov
into
mov
repnz
mov
std
pop
cwtl
push
adc
in
lods
cld
sbb
xor
jp
push
mov
mov
es
lcall
jne
inc
cmpsl
arpl
test
fimuls
cs
sub
jnp
adc
mov
andl
sub
push
mov
sahf
xchg
jne
cmp
mov
fsubrs
in
inc
mov
sub
inc
loope
sub
dec
mov
xchg
jp
jmp
adc
repz
xor
fwait
sbb
jb
pop
sub
cld
cmp
popf
sub
mov
mov
sub
jno
mov
jne
out
nop
push
pop
out
xchg
jae
dec
out
xchg
mov
or
or
ss
mov
scas
lds
ficompl
cld
loop
sbb
les
call
movsb
adc
adc
jb
cmp
lahf
mov
or
fstps
test
xlat
outsb
pop
rcll
dec
add
bound
cld
or
xor
ja
loopne
mov
xchg
push
and
cmp
into
mov
movsb
mov
sti
call
add
lds
pop
jmp
daa
jns
mov
fisubl
and
aad
test
scas
cmp
sub
sub
outsb
lret
sti
int3
daa
bswap
adc
outsl
mov
xor
popf
aaa
in
loope
cmp
pop
adc
cmpsb
into
inc
imulb
sub
fists
movsl
aam
dec
mov
dec
jb
add
movsb
cmp
mov
pop
adc
leave
or
icebp
pop
fisubs
pop
xchg
mov
icebp
out
jbe
andl
jp
stos
mov
out
rolb
pop
xchg
or
clc
loope
repnz
imul
adc
stos
and
sbb
test
jb
popa
shll
adc
leave
pop
jl
xchg
xchg
popf
cwtl
sbb
sub
movb
test
xchg
or
mov
mov
imul
inc
int
sbb
mov
cmc
inc
sbb
dec
push
mov
mov
das
mov
mov
xchg
jle
pusha
jecxz
pop
xchg
cmpl
mov
nop
cmp
lahf
cs
rclb
inc
inc
sub
fildll
inc
adc
mov
cmp
cmp
or
fistps
cmpsl
dec
dec
fldl
repz
push
fisttps
pushf
das
cmc
cmp
cs
or
shll
pop
ficomps
icebp
push
sbb
icebp
and
push
push
cmp
scas
xchg
js
insl
iret
inc
paddq
ljmp
sbb
bound
je
sti
mov
shrl
lods
xchg
das
pop
or
push
int
in
or
ret
mov
scas
sahf
xchg
and
out
push
mov
or
push
mov
bound
adc
int
and
xor
xor
pop
ficomps
push
lcall
or
icebp
in
xchg
xor
xor
or
mov
adc
mov
adc
pop
or
js
push
push
or
sub
shl
inc
push
repz
insb
jno
and
loope
add
add
bound
bound
out
mov
ficoml
imul
inc
addr16
idivb
or
pop
movb
sub
pop
mov
fsubs
or
push
lods
xchg
movsb
insl
jmp
ja
add
mov
ds
push
outsb
sbb
push
pop
fistps
and
fimuls
movsb
cmpsl
mov
ret
ss
js
out
adc
in
mov
shrb
push
mov
cmc
in
xchg
push
cmc
test
inc
ja
cmpsl
fnstcw
ss
add
dec
adc
stos
cmpl
in
dec
xchg
inc
rcrl
ffree
push
cmp
imul
xchg
je
lds
mov
pop
push
mov
std
jg
mov
or
movsb
mov
xchg
in
adc
push
loop
pop
popa
jbe
test
movsb
dec
mov
jmp
pop
jo
ret
inc
jnp
shlb
mov
je
loope
imul
ficompl
lret
xor
push
dec
mov
jne
les
mov
mov
inc
test
arpl
decl
inc
pushf
jl
pop
pop
cmpsb
xor
lds
lcall
mov
adc
aas
out
imul
jo
jl
xchg
cwtl
sbb
fwait
shll
rcr
cmp
inc
mov
cmc
mov
jmp
enter
call
dec
test
push
mov
das
icebp
in
out
cmpsl
mov
adc
cltd
outsb
ret
sarl
dec
shll
shll
jge
enter
test
adc
add
jge
icebp
sub
adc
mov
pop
or
jmp
es
rolb
popf
sahf
lods
inc
and
imul
xlat
stos
loop
cld
fdivs
push
mov
and
sub
loope
mov
dec
cmp
jle
sbb
adcl
sar
cmp
sub
push
jb
es
sub
sub
subl
loopne
add
ljmp
pop
leave
sti
pop
xor
leave
insb
outsb
rcrb
in
shlb
aam
mov
pushf
fidivrs
cmp
mov
aaa
cmp
sub
out
xchg
and
mov
pop
ds
jg
pop
xchg
stc
leave
sub
mov
mov
cmp
scas
inc
sub
fsub
flds
mov
xchg
das
or
jae
js
mov
xor
cltd
filds
mov
jo
sub
loope
push
sub
dec
jno
lcall
in
pop
dec
jecxz
jno
jns
xchg
setbe
loope
sbb
imul
lret
jbe
mov
int
imul
aam
insl
or
add
data16
aaa
sti
stc
lea
xchg
cmp
loopne
in
cld
jne
cwtl
add
dec
cli
cmp
insl
lock
outsb
jmp
fidivs
pop
jle
fists
mov
rorb
mov
fwait
or
adc
mov
and
sub
ret
pop
imul
dec
outsl
scas
pop
or
jle
push
lods
sahf
jbe
add
rorl
sbb
out
jecxz
add
out
push
iret
dec
mov
add
rolb
in
clc
mov
mov
ss
mov
inc
enter
test
cmp
push
and
call
gs
test
enter
mov
mov
or
push
add
mull
jae
into
pop
xor
ret
pop
mov
sti
repnz
push
fsts
movsl
pop
rdmsr
sub
pop
jmp
inc
mov
test
out
inc
add
sbb
enter
or
jnp
inc
rclb
movsb
pop
jnp
inc
push
shll
inc
cltd
cmp
add
pop
jmp
mov
xchg
cli
sub
movsb
jg
fcoms
nop
lcall
std
mov
aas
pop
jl
lret
je
jmp
mov
lret
pusha
xor
sbb
ret
mov
lods
ja
out
out
mov
mov
das
scas
mov
clc
xor
idiv
push
test
inc
xchg
lods
dec
lret
sub
mov
lret
inc
test
test
mov
fwait
sarl
iret
cs
xor
fmulp
daa
shll
popa
fistps
daa
sub
push
fisubrl
xor
jne
mov
movsb
bound
pushl
and
xor
inc
stos
sub
loop
or
fildll
cmc
lods
xchg
cvtps2pi
lds
sbb
mov
push
mov
fcmovu
cmp
das
mov
fstp
adc
out
into
jae
nop
out
pop
lret
dec
stos
fimuls
pop
fistl
mov
mov
js
fisubs
adc
pop
call
sub
lahf
cli
out
and
cmpsb
rorb
cmp
sbb
xor
adc
sbb
leave
cmc
sarl
lods
insl
jecxz
imul
xor
bound
bound
in
cmpsb
nop
push
mov
movsl
fmulp
imul
adc
shll
bound
imulb
jmp
dec
hlt
dec
mov
pushl
push
sbb
int3
daa
sbb
fld
lods
adc
outsb
movsl
xchg
sbb
test
test
outsl
mov
and
fisttpll
hlt
movsb
lahf
xchg
dec
popa
jl
andl
jb
sbb
mov
cmc
rcr
cmp
cmp
add
mov
dec
outsl
loop
imul
cmp
ss
or
ljmp
imul
jnp
sbb
clc
inc
xor
pop
push
jg
out
mov
sbb
lods
push
std
xchg
mov
pop
std
rorb
and
movsl
add
xchg
inc
inc
and
rcr
sbbl
jmp
dec
add
fsts
lods
rcll
cmp
add
repnz
out
cli
outsl
fucomip
cmp
movsb
xor
lahf
and
repz
xchg
cld
cmpsl
std
pop
test
cli
jmp
test
xchg
push
dec
add
test
jnp
cmpsl
aad
out
cmp
popa
movsl
out
ret
repnz
daa
sub
pop
ja
lods
dec
or
enter
lea
sbb
mov
pop
mov
ret
cmp
cs
mov
imul
inc
out
js
mov
in
stos
movsb
mov
out
sbb
cmp
or
push
loop
daa
das
jnp
inc
in
xor
int
jge
sub
ret
or
cmp
in
movsb
outsb
mov
jl
sub
push
xchg
xor
sub
lret
es
cmpl
push
xor
lds
mov
das
push
jb,pt
sub
roll
jns
stc
xchg
jge
cmp
mov
in
push
sahf
mov
mov
imul
lahf
push
and
ss
aam
pop
out
mov
pop
adc
lds
pop
fistpl
iret
inc
lds
xorb
bound
jle
imul
xchg
test
mov
dec
xlat
jg
dec
cld
adc
inc
push
into
outsl
insl
mov
loopne
push
adcb
jae
adc
arpl
add
pusha
arpl
add
dec
outsb
icebp
and
loope
leave
cmp
ja
sti
ljmp
add
outsl
icebp
xchg
xchg
mov
das
cli
out
inc
in
xor
sahf
push
cld
dec
and
push
jno
jg
out
lcall
push
cmp
pop
mov
sahf
aaa
jno
fs
mov
adc
jo
inc
fsubrl
fldenv
xlat
fisubrs
popf
cs
and
dec
pop
ss
mov
sub
fmuls
out
add
cmp
or
ds
mov
adcb
dec
push
loope
popa
insb
adc
xchg
push
gs
repz
push
xchg
xchg
aas
std
xchg
mov
xchg
xor
enter
jnp
ficoml
mov
arpl
in
mov
movl
sbb
mov
ja
mov
adc
psllw
leave
popa
loopne
dec
sub
in
dec
and
sub
andb
push
scas
xchg
sarl
repz
xchg
and
lds
cmc
mov
xchg
test
in
aaa
mov
sbbb
add
outsb
sub
dec
out
xchg
dec
adcl
and
mov
ret
lock
or
loopne
out
xor
rcll
in
sbb
movsl
cmpl
pop
mov
ret
mov
mov
add
adc
xchg
adc
adc
lea
cwtl
insb
cmovbe
enter
aas
xor
loop
lahf
sbb
mov
push
pop
iret
shl
aam
cs
insb
sbb
cmp
cwtl
push
fdivs
mov
in
push
mov
popl
aaa
pop
scas
mov
xchg
mov
movsl
call
enter
cmp
push
mov
unpckhps
bts
cmp
aad
test
sub
dec
jecxz
push
cli
jge
lcall
mov
in
xorb
addl
jo
xchg
loope
cmpsl
mov
and
adc
sub
data16
int
mov
add
sub
sub
xlat
popa
jecxz
jge
shlb
sbb
inc
fucomi
filds
cmc
jmp
inc
outsl
mov
push
shlb
and
filds
jg
mov
insl
xor
adc
inc
mov
stos
push
sub
enter
dec
dec
xchg
mov
lcall
jg
sahf
and
imul
xor
inc
sub
cmpsb
aad
inc
test
cmp
ret
xchg
xor
sub
or
loope,pn
or
inc
xor
cmp
clc
cmc
inc
dec
xlat
xchg
jne
repz
jb
hlt
outsb
xchg
ficoms
sub
mov
fcom
bound
or
icebp
xlat
push
jg
out
popl
pop
mov
jmp
stos
jne
mov
pushf
js
insl
sbb
or
pop
jge
mov
sub
pop
std
dec
repnz
fidivrl
scas
sub
mov
das
xchg
adc
in
mov
out
fnstenv
or
repnz
pushf
hlt
push
pop
fisttpl
inc
jbe
imul
lea
dec
sub
in
sti
iret
nop
lods
sbb
imul
push
pop
cld
adc
mov
jge
dec
jl
mov
ja
sahf
add
sarb
jecxz
rclb
jmp
subl
stos
xor
mov
or
dec
imul
pop
les
pop
adc
inc
or
fsubs
ds
or
add
in
stos
xchg
add
pop
adc
mov
ja
movsl
aam
xor
lods
dec
sti
mov
cmp
sub
gs
fs
sahf
jecxz
popa
inc
xchg
aam
out
fidivrl
scas
dec
xchg
mov
mov
mov
int3
dec
aaa
adc
xor
or
and
in
fnstenv
push
push
sub
les
mov
movsb
add
insb
jp
adc
mov
sub
test
pop
mov
arpl
clc
push
movsl
and
andb
stc
sbb
into
out
or
mov
jae
mov
and
cmp
and
jecxz
adc
daa
sbb
movsb
mov
sub
sti
addl
fwait
add
insb
mov
ja
pop
jl
idivl
push
daa
fwait
jecxz
jb
rolb
sub
out
shrl
xor
jae
ret
stos
cmp
shlb
insb
gs
xchg
sbb
sub
lea
ficoml
mov
jne
dec
jp
nop
xor
mov
fiadds
fs
std
faddl
hlt
repz
sbb
sahf
loopne
es
mov
xchg
pop
dec
outsl
mov
add
or
shll
adc
mov
dec
push
fwait
mov
add
out
mov
in
in
add
jl
pop
cmp
daa
cltd
mov
icebp
cmp
jno
sub
iret
sub
mov
add
lods
jb
inc
sub
fisubl
mov
ret
fdivrp
pop
icebp
fs
jmp
popf
mov
or
add
jmp
adc
sti
mov
push
stos
xchg
cmpsb
nop
sbb
add
jo
addr16
xchg
push
daa
xor
mov
rorl
push
dec
jo
mov
lahf
adc
mov
sub
sub
jmp
dec
jle
cmpsb
fcoml
sbb
add
or
fwait
push
popa
or
out
push
cmp
xor
cltd
push
icebp
xor
and
test
mov
fldcw
insl
push
push
mov
pop
aad
dec
xchg
push
fsubrl
scas
test
xor
mov
jnp
jl
cmp
mov
aas
inc
test
dec
in
test
xchg
fistl
mov
imul
xlat
push
cmc
mov
cmp
inc
leave
ss
std
in
lds
js
vzeroall
cwtl
fwait
or
lcall
jg
ja
stos
mull
stc
clc
xchg
cmp
cmc
mov
sub
adc
out
push
clc
pop
enter
mov
xchg
movsb
lods
xor
imul
out
dec
neg
push
je
and
push
push
imul
ror
push
push
movsl
and
jg
call
das
lea
imull
sub
popa
addr16
mov
mov
int
lcall
arpl
push
xlat
push
int
mov
fcmovbe
cmp
sub
in
sbb
mov
adc
xlat
sub
dec
lds
cli
mov
cli
jo
pop
jge
imul
jb
pushf
in
pop
scas
mov
inc
out
lds
dec
hlt
les
in
test
andl
js
loopne
or
adc
xchg
ds
or
in
decb
mov
bound
inc
arpl
jnp
pusha
sarb
mov
inc
les
outsb
mov
leave
pop
insl
call
sbb
call
enter
xchg
push
lcall
lods
dec
sbb
push
jp
sbb
jl
mov
outsb
fstps
mov
arpl
sti
enter
xchg
mov
int3
stos
mov
adc
stc
out
dec
lea
xor
mov
push
inc
mov
ljmp
loop
pop
add
fucomi
adc
aaa
mov
mov
and
add
push
mov
jo
mov
mov
jg
clc
and
push
es
frstors
lcall
xchg
lret
addr16
xchg
and
pusha
sbb
icebp
mov
fsubrp
add
cltd
sbb
inc
lcall
mov
test
pop
bound
iret
jnp
xchg
mov
adc
jmp
aas
mov
out
push
sbb
in
xchg
pop
cld
daa
adc
fisttpl
and
loop
and
in
in
pop
mov
pop
sub
push
in
pop
ljmp
pusha
rorb
inc
mov
mov
lods
cmp
cmp
aas
cltd
and
jmp
pop
div
mov
jmp
inc
mov
add
idivl
popa
cmp
aad
adc
jge
rcl
mov
inc
arpl
shll
ret
aaa
in
fists
test
lahf
data16
pop
xor
es
sub
pop
sbb
pop
pop
cwtl
in
nop
cmp
or
pop
aas
fcom
lcall
sbb
sar
cmp
push
in
xor
xor
into
test
out
cltd
fstl
push
fidivrl
enter
idivb
fbstp
ret
push
aaa
std
add
adc
fiaddl
shrl
ljmp
cmp
loop
push
and
jno
and
push
daa
mov
lock
imul
or
xor
mov
mov
mov
cld
mov
mov
push
data16
subb
and
stos
movsl
mov
push
pop
lret
je
sub
xorl
or
imul
movsb
and
mov
and
mov
pop
inc
sub
adc
cmp
add
das
dec
or
adc
inc
sbb
cltd
jmp
aad
mov
hlt
cmp
test
cmpsb
inc
sti
pop
das
xor
aas
sbb
inc
adc
mov
insb
stos
xchg
les
xchg
lcall
in
mov
xlat
pusha
cld
push
push
daa
inc
fisubrl
inc
loope
push
or
mov
lahf
jns
mov
xor
xchg
ss
inc
dec
jns
mov
xchg
dec
test
pop
ss
pop
pop
aas
sbb
jne
jne
mov
stc
sub
dec
pop
sbb
jmp
pusha
andl
push
jg
jecxz
stc
adc
mov
push
in
mov
insl
andl
mov
sub
inc
fldenv
in
sbb
insl
repnz
sub
filds
ret
data16
std
pop
cmp
jmp
sbbb
jo
ret
loopne
icebp
mov
movsl
cmp
push
out
vcvttss2si
jle
or
shlb
cli
jbe
mov
mov
mov
mov
pusha
shll
mov
leave
test
arpl
stos
roll
shrl
repnz
push
push
xor
inc
movsl
dec
les
testl
or
fimuls
ja
xor
mov
movsb
and
xor
and
cmp
leave
aam
lret
mov
push
mov
hlt
mov
out
jo
cmp
mov
daa
xor
xchg
jmp
test
dec
in
cmp
cs
sub
hlt
negl
adc
mov
jae
xchg
pop
int3
lods
cmp
pop
jae
mov
and
and
dec
adc
iret
xchg
mov
mov
push
sahf
xlat
jge
aad
nop
xor
xchg
adc
jno
je
pop
orl
pop
js
arpl
jno
dec
aam
add
outsl
or
inc
fstl
adc
aad
aaa
jo
movsb
int
sbb
inc
out
xchg
je
movsl
add
jl
in
dec
in
sbb
filds
std
cld
stc
loope
xchg
add
mov
sub
inc
stos
mov
fldz
imul
repnz
adc
call
out
add
jnp
push
loope
dec
and
sti
lret
inc
mov
cmc
aaa
mov
mov
sbb
jno
xor
sbb
xchg
and
andb
mov
mov
sbb
jg
js
mov
push
jae
pop
sahf
out
jne
jle
mov
mov
pushf
fimull
test
cli
adc
mov
dec
adc
mov
dec
pop
or
imul
rcll
jnp
lods
subl
adc
lods
repz
inc
test
mov
insl
dec
jp
xlat
aas
or
xchg
divl
in
cmc
nop
or
jg
in
leave
jmp
clc
sti
cmp
push
cmpsb
pop
in
jge
loopne
lock
aaa
adc
fidivrl
or
xchg
sbbb
shll
mov
lcall
js
mov
dec
push
std
ss
xor
sub
lea
stos
xchg
push
push
or
sbb
adc
dec
lret
fidivrl
jp
fsub
nop
inc
mov
pushf
cld
stc
daa
imul
pop
div
push
int3
lods
mov
stos
rcl
cltd
scas
js
dec
jae
sbb
in
mov
fadds
sub
add
jae
cmp
jb
mov
mov
mov
jmp
mov
loop
and
mov
bound
sub
mov
out
rclb
nop
mov
orl
insl
idiv
jno
push
cmpsl
push
lock
mov
mov
and
jp
pop
cmp
xchg
pop
jnp
pop
pop
test
or
bound
xorl
stos
leave
ret
ror
adc
cmpsl
sti
test
int
jl
cmpsl
aam
cmc
mov
adc
xacquire
shlb
push
repz
jbe
cwtl
in
xor
bound
ds
movsl
lahf
inc
cli
or
mov
stc
jae
in
sbb
ljmp
sub
in
inc
dec
test
pop
cmp
sub
imul
lods
pop
inc
repnz
inc
sub
xchg
or
insl
sub
mov
cli
xor
inc
pop
leave
aam
jbe
cmpsl
inc
mov
stos
adc
xchg
cmpsb
pop
pop
mov
repnz
int3
inc
and
xchg
inc
and
pusha
xchg
mov
in
rclb
dec
lea
cmp
fucomi
inc
xchg
push
mov
test
pop
movsb
jbe
mov
inc
inc
sbb
lods
pop
scas
push
outsb
movsl
std
and
jns
dec
dec
rol
lahf
inc
jno
lods
dec
daa
filds
insl
sbb
jbe
mov
pop
sbb
xlat
je
xor
out
add
mov
pop
addr16
pushf
gs
xchg
les
lock
fnstsw
test
adcb
push
adc
sub
push
leavew
pop
xchg
ljmp
cli
lods
fsubs
adc
sbb
jmp
dec
test
xor
mov
mov
in
mov
adc
movsb
lock
into
gs
adc
add
ficompl
subb
dec
push
xchg
out
les
fistl
ja
or
fs
pop
in
out
js
test
icebp
sbb
test
test
sub
data16
cmp
imul
loop
sbb
or
pop
jg
ds
lea
xor
cmp
xor
push
xor
clc
je
jnp
sarb
xor
push
test
test
jo
mov
cmc
xchg
mov
clc
mov
jne
cmpl
ret
icebp
aas
dec
jecxz
xor
loope
jo
sbb
addb
jecxz
jl
and
sub
cwtl
or
xor
jbe
mov
mov
sti
mov
jo
lea
enter
in
pop
in
inc
inc
addr16
mov
push
add
popa
insb
or
je,pt
fstps
add
dec
dec
movsb
pop
lcallw
cmp
cmp
sbb
cs
cmp
int3
stos
xor
pop
in
sub
sbb
rcl
pop
sahf
in
dec
mov
dec
cmp
add
mov
dec
mov
int
and
adc
fcmovbe
js
sub
pop
dec
iret
mov
sub
rorl
or
xlat
push
ja
ljmp
adc
mov
movsb
pop
add
faddp
mov
enter
fldt
cmpsb
mov
pop
shll
aam
add
shll
test
xchg
in
mov
stos
adc
ljmp
popa
add
jmp
sahf
call
mov
mov
in
pop
jle
push
cmpb
in
sub
cmc
lods
andl
data16
pushf
lods
inc
fs
fidivrl
test
and
or
push
mov
incw
jbe
push
mov
push
pop
push
std
sbb
xchg
add
test
or
fisubl
stos
fdivs
in
lret
push
rolb
sbb
nop
mov
cmpb
sub
mov
leave
mov
xchg
jge
mov
shll
fisttpl
test
jp
icebp
dec
mov
dec
pop
out
test
xor
fldl
lret
cmp
out
fdivs
std
add
sbb
pop
xor
mov
push
and
ljmp
lret
movsl
enter
and
test
icebp
lods
adc
cmpb
dec
adc
add
mov
inc
call
jmp
nop
inc
loop
lods
adc
mov
jg
jp
xchg
mov
add
enter
cmp
pop
popa
ret
enter
jbe
mov
pushfw
daa
jmp
fadds
xor
push
mov
sbb
pop
lods
mov
lds
cltd
ja
aas
xor
out
inc
adc
jge
jl
xchg
hlt
dec
add
mov
mov
and
pushf
aad
or
popa
sbb
sbb
jns
and
in
push
aad
mov
cmc
lea
jns
inc
mov
les
dec
xor
shll
mov
cld
orl
fmull
and
xchg
fsubrp
sti
add
lds
mov
jp
rcrb
xorb
mov
ss
std
jbe
daa
pop
sbb
xchg
cmp
push
ret
scas
aam
pop
test
mov
adc
jmp
and
mov
lds
jg
stc
jge
sub
mov
pop
xor
mov
sbb
mov
or
cld
movb
jno
and
imul
cmp
mov
lods
sbb
jge
hlt
mov
js
decl
xchg
inc
jge
pop
xchg
jecxz
cwtl
aam
push
push
pop
cmc
clc
and
bound
push
bound
sahf
jb
aas
mov
dec
xor
inc
xor
popa
inc
sti
pop
jl
sub
in
hlt
or
jb
lods
mov
fcoml
add
std
cmpsb
mov
jecxz
call
pop
arpl
mov
pop
out
push
push
add
push
scas
subb
out
dec
lock
outsb
push
into
xor
fcompl
popa
pop
jae
mov
dec
cmpl
cwtl
adc
sbb
xor
sbb
in
test
pushf
lock
mov
add
sahf
pushf
push
in
pop
repz
mov
xchg
sub
push
dec
or
insb
das
jl
cmp
repz
cltd
inc
outsl
cli
sbb
or
loop
sub
xor
jg
repz
mov
aam
jmp
fidivrl
cmp
inc
add
mov
repz
xor
cmpl
mov
cmp
mov
out
in
js
std
sbb
adc
jbe
out
rclb
mov
xor
cli
cmpsl
inc
cltd
test
inc
fcomip
adc
mov
test
jg
cltd
or
std
dec
pop
in
mov
push
aas
addr16
push
jo
les
mov
push
and
in
or
mov
movl
add
hlt
cmp
fsubl
pop
stos
loop
or
movsb
imul
push
inc
repnz
insb
cmpsb
sbb
shl
or
loop
xlat
pusha
in
shrb
out
fidivrs
or
lea
xchg
mov
test
push
test
out
into
xadd
outsb
jmp
inc
rcrb
mov
mov
sub
in
pop
in
fwait
mov
pop
into
mov
adc
pop
or
sub
in
clc
add
rcr
daa
enter
jno
xor
in
std
mov
int
adc
dec
mov
call
mov
lods
enter
mov
shrb
stos
loope
sub
sbb
dec
mov
pop
ja
add
cmc
aad
jmp
pop
push
sub
movsl
jno
cmpsb
test
adcb
add
lcall
mov
std
jmp
xor
mov
insb
jo
sbb
jbe
xor
hlt
in
inc
dec
out
dec
push
jnp
outsl
test
ret
jnp
jle
xchg
cmc
mov
popa
mov
in
xor
enter
mov
or
pop
cs
test
lods
dec
mov
in
xchg
mov
push
cmp
cmpsl
xor
jl
jns
mov
dec
jns
movsl
movsb
jnp
jo
inc
inc
or
loop
adc
icebp
push
mov
addr16
fwait
inc
cld
ficomps
mov
and
pop
dec
int
xchg
inc
es
pop
lretw
popf
xchg
add
lea
dec
pop
lahf
fnsetpm(287
push
mov
addr16
pop
adc
mov
mov
pushf
aad
pusha
xor
cmp
add
stc
xor
jae
cli
mov
test
mov
aam
jns
sbb
sub
in
pop
sbb
sbb
cld
dec
sbb
pop
arpl
lods
jne
pop
xor
sbb
sbb
mov
aam
sbb
adc
lea
xor
sbb
push
jecxz
out
sbb
in
push
test
ret
aaa
adc
xchg
cmp
ret
adc
adc
in
jbe
or
lock
in
repz
push
in
insb
bound
push
mov
fucomip
leave
push
cwtl
fdivrp
cmp
call
mov
mov
mov
aas
aas
pop
xchg
sbb
xchg
adc
xor
int3
xor
and
inc
outsl
xor
adc
pop
xor
jne
sbb
cli
andb
add
jnp
xchg
inc
inc
scas
pop
repz
mov
stc
lahf
or
jbe
call
fwait
stos
mov
fsubl
das
cmp
jnp
ss
clc
and
rorl
jecxz
lods
adc
test
or
test
jo
sti
imulb
in
fsubl
orb
aam
dec
xchg
stc
fsubl
sahf
rcrl
inc
js
xchg
dec
xchg
xor
cmp
jg
xor
adc
push
push
add
enter
mov
sahf
mov
mov
xor
mov
sbb
fwait
fwait
dec
mov
ret
popf
pop
dec
shlb
push
test
inc
rcrb
sub
mov
pop
js
es
into
sbb
mov
into
dec
bound
sub
popf
jne
push
push
inc
popa
div
dec
cs
xchg
aas
cmp
ret
xorl
ds
pavgw
push
xor
push
cld
in
clc
pop
lock
imulb
shrb
sbb
push
aas
cli
jns
sub
mov
sub
iret
les
xor
les
addr16
aas
int3
stos
ljmp
xchg
xchg
cmp
lret
jl
xchg
sar
aas
ss
scas
pusha
outsl
or
add
ljmp
inc
inc
leave
mov
push
inc
xor
add
or
adc
adc
inc
xchg
ret
aam
into
xor
mov
pop
popf
adc
xchg
addl
sub
repz
sbb
loopne
mov
les
sub
or
icebp
jmp
mulb
xor
fildl
push
aaa
daa
scas
aas
pop
xchg
sub
nop
fadd
test
mov
mov
adc
xchg
sub
sub
lahf
fsubl
addr16
or
jo
loop
mov
push
ss
lcall
and
mov
mov
pop
adc
push
dec
loope
insb
mov
mov
ficoms
adc
jae
inc
pushf
mov
pusha
data16
test
adc
in
out
pop
aas
lock
adc
lods
jl
movsl
mov
pop
popf
lcall
out
je
push
add
fidivl
hlt
adc
or
scas
dec
xor
je
stos
push
repz
xchg
inc
push
mov
es
call
movsl
ljmp
dec
aam
jecxz
push
js
mov
mov
gs
add
adc
or
sbb
std
int
ljmp
call
in
dec
pop
xor
push
test
and
xor
in
lret
xchg
popa
xchg
dec
ss
fisubrl
jne
dec
pusha
std
and
sbb
ljmp
push
data16
mov
cmp
jo
out
adc
movsb
js
cld
xchg
jo
sbb
dec
inc
std
popa
cmpl
popa
and
adc
in
bound
dec
fsubrl
or
cmp
in
bound
mov
push
sbb
mov
in
hlt
inc
rcll
push
jle
or
das
and
sbb
mov
cmpb
xor
mov
fs
div
xchg
aad
pop
mov
sbb
lcall
and
iret
xor
imulb
mov
push
lret
pop
jns
and
jne
mov
outsl
call
xchg
jb
pop
xchg
jb
dec
jo
movsl
xor
mov
int
js
gs
iret
fisubrs
jb
cli
lret
mov
add
cmpsb
fcomi
lods
fisttpll
push
dec
adc
cmc
cmpsb
call
adc
mov
cmp
xor
nop
xchg
outsb
loope
clc
enter
xchg
cli
arpl
shr
dec
divb
jae
xchg
in
aas
imul
adc
push
lahf
repnz
mov
push
popf
pop
xor
mov
xor
mov
jmp
call
jecxz
test
dec
inc
pop
mov
cmpsl
lods
push
inc
and
stos
and
fcom
pop
and
jg
enter
jae
sarl
xchg
mov
or
mov
xor
sbb
dec
ret
mov
daa
adc
cmp
cli
int3
pop
mov
sub
pop
sub
sbb
pop
push
jnp
cmpsl
mov
cli
jp
je
add
movsl
lret
cmpsb
add
jl
test
push
jle
xlat
dec
jle
jl
jne
cmp
xor
enter
pop
lods
push
pop
mov
scas
or
test
mov
int3
imul
loop
mov
lods
daa
je
ljmp
xchg
pop
inc
das
add
or
aad
fsts
inc
push
in
dec
outsl
xchg
fldenv
addl
dec
in
cmpsl
aaa
and
cld
and
mov
mov
fdiv
js
or
mov
aam
cmp
push
or
sub
jns
jle
add
xor
es
mov
rolb
fimull
add
mov
clc
mov
pop
bound
inc
mov
adc
adc
fdivs
popa
daa
add
call
inc
mov
adcb
in
cmp
adc
movsl
pop
and
pop
cmpsl
push
lods
enter
icebp
adc
add
xor
or
lds
loop
add
ljmp
test
test
dec
cwtl
pop
fmulp
outsl
ss
mov
jbe
sub
xchg
int3
lock
outsl
adc
jge
insl
popa
andl
inc
inc
test
test
cmp
mov
sbb
aaa
push
push
ss
and
cmp
stos
in
or
pusha
inc
push
jge
fsubrl
inc
jnp
mov
xor
aad
mov
pop
lcall
dec
in
lret
or
stos
xchg
push
loop
dec
xlat
add
mov
test
mov
aas
into
pop
mov
sahf
sahf
sub
dec
mov
mov
pop
repnz
push
stos
aam
loop
mov
push
pop
or
sub
jmp
andl
sub
outsb
aas
sti
out
insl
repnz
add
pop
pop
or
sti
out
push
or
in
add
jne
mov
in
jb
rcr
fisttpl
mov
mov
push
leave
jo
jnp
jge
cmp
mov
xlat
xlat
out
and
pop
xchg
add
push
insl
pop
pusha
ja
inc
aad
inc
mov
jle
fs
pushf
mov
mov
pusha
stos
xchg
hlt
add
push
or
fdiv
pop
in
addr16
jb
push
inc
insb
xchg
ja
int
orb
mov
sub
fisubs
out
gs
arpl
arpl
xchg
in
add
inc
pop
or
je
repnz
jns
sbb
xchg
outsb
xchg
mov
jecxz
in
adc
mov
andb
insb
add
add
mov
dec
notl
xlat
mov
and
adc
jp
arpl
sbb
dec
lods
aam
xor
loop
cs
std
aaa
repnz
jb
push
sbb
mov
loop
cwtl
addr16
ss
mov
aaa
js
cltd
out
insl
lea
aam
cmp
pop
pop
mov
and
stos
dec
push
jmp
jle
ljmp
mov
in
cmpsb
pop
in
push
push
adc
gs
bound
and
lahf
push
fdivl
cmc
or
aam
cmp
mov
push
shll
jbe
dec
cmp
push
lret
out
sub
and
out
xchg
divb
test
dec
lret
mov
mov
inc
fs
push
cli
dec
incb
cwtl
test
lods
xchg
jp
stos
enter
mov
adc
addr16
mov
loope
xor
push
adc
and
bound
mov
popa
push
les
mov
shrl
mov
fiaddl
pop
iret
jnp
adc
leave
push
mov
jns
or
roll
je
rcl
push
in
mov
mov
adc
je
pushf
int3
adc
mov
fisttps
lahf
movsb
jnp
or
mov
ret
xchg
dec
orl
dec
push
ficompl
or
or
and
push
lea
aaa
push
xor
cmp
push
push
mov
mov
ret
lret
pop
pop
mov
sar
imul
cmp
cmp
xchg
mov
dec
xchg
xor
push
cmp
cs
mov
pop
jle
cmp
dec
jne
fsubp
jno
ficoms
inc
test
push
inc
jmp
idivb
push
mov
cmp
cmc
xchg
and
addl
fs
mov
xchg
pop
xchg
mov
sarl
jb
lret
mov
out
dec
push
jno
js
dec
iret
adc
pop
jecxz
lods
mov
movsl
jns
fsubs
clc
and
repz
sbb
jbe
sbb
into
popa
adc
negb
lods
push
mov
lcall
faddp
push
xchg
dec
xchg
pop
mov
add
inc
arpl
nop
push
lods
dec
cmp
pop
mov
inc
dec
add
sub
std
adc
loop
or
push
sub
loop
scas
push
dec
xor
inc
dec
lods
and
mov
add
pop
cli
mov
pop
add
add
jo
jle
rorl
jge
inc
mov
push
out
fdivrs
imul
adc
outsl
xchg
cmp
mov
iret
aad
clc
pushf
pop
bound
sub
repnz
ja
jb
inc
xchg
cld
xchg
and
dec
iret
inc
in
and
leave
inc
mov
push
in
push
or
scas
mov
popf
stos
sbb
mov
mov
mov
roll
xchg
jo
xchg
jle
hlt
sub
dec
cmp
aas
icebp
jecxz
ss
test
sub
inc
sbb
shll
ret
ret
lret
and
out
sbb
mov
cmp
and
outsb
sbb
popf
jmp
ret
das
dec
and
or
and
jge
xchg
dec
mov
test
subb
inc
inc
mov
xor
xchg
test
add
lret
jecxz
in
xor
add
push
test
pop
push
push
and
xor
scas
xchg
push
jnp
jmp
cmc
andb
jns
pop
in
les
adc
sarl
xor
push
jbe
loopne
pusha
adc
jle
mov
mov
nop
xchg
push
loop
rcll
sarl
push
add
or
bound
cli
add
sbbl
push
sub
outsb
ljmp
divb
fs
sbb
mov
aad
cmp
and
mov
sahf
and
nop
adc
out
out
sti
jmp
cli
mov
sbb
sbb
lods
push
adc
mov
jns
xchg
icebp
bound
inc
push
insl
xchg
or
shll
push
ds
add
dec
inc
mov
idivb
cmp
lea
xchg
xor
add
repnz
push
mov
mov
push
mov
xchg
iret
mov
in
pop
orb
push
xchg
sti
adc
jno
xrelease
mov
inc
xchg
xchg
push
out
mov
lret
loopne
fistpll
adc
ret
lahf
cmc
inc
icebp
cwtl
insl
inc
mov
ret
xchg
jp
pop
test
dec
ds
mov
sub
insb
cld
jnp
jmp
addr16
in
pop
pop
pop
mov
or
sbb
xchg
pop
pop
push
dec
cmp
test
inc
stos
les
bound
jae
lahf
roll
push
in
scas
or
scas
xchg
jb
jnp
aad
mov
and
sbb
inc
inc
pop
add
dec
outsb
out
pusha
pop
jbe
mov
in
scas
outsb
sbb
mov
outsb
or
aas
inc
sbb
cmpsl
pop
subl
adc
outsl
pop
sbb
mov
cmc
aam
sbb
mov
mov
mov
movsl
imul
dec
and
rcrl
cltd
or
cmp
mov
or
arpl
lidtl
pop
jle
adc
arpl
jno
les
leave
nop
push
sub
adc
in
cltd
fstl
and
mov
popa
std
mov
or
xor
jmp
pop
out
dec
hlt
push
stc
adc
enter
adc
adc
dec
mov
rcll
adc
adc
mov
out
xchg
push
das
or
jg
push
pusha
inc
dec
gs
cli
dec
cli
sub
fistpll
out
aam
lahf
pop
scas
and
jp
test
stos
stos
mov
cmpsl
inc
pusha
adcl
jns
in
sarl
outsb
jns
sbb
insl
fs
or
das
test
call
xchg
nop
loop
lods
pop
sbb
cld
add
aas
push
imul
adcl
xor
out
push
int3
push
test
mov
cmc
dec
xchg
int
fwait
pop
fimuls
es
pop
inc
inc
enter
cmpsl
clc
nop
pop
and
pop
jo
xor
ja
mov
mov
pop
arpl
lea
roll
mov
xor
jne
js
jo
lds
cs
ret
in
xchg
pop
xchg
sub
push
loopne
jge
xor
movsl
divl
dec
ret
or
mov
cld
stos
jp
sbb
cwtl
ljmp
add
repz
lea
lret
mov
lods
xorb
movsl
daa
push
iret
add
xchg
fimuls
add
jnp
addr16
jge
xor
rclb
cld
sbb
xchg
fdiv
pop
test
lret
je
and
nop
sub
nop
pop
or
adc
rcl
adc
jmp
jno
cmp
xor
cmpsb
pusha
sbb
push
sbb
sub
and
int3
inc
mov
jo
push
cwtl
push
iret
insb
xor
mov
add
jo
scas
jo
je
or
pop
enter
xor
es
sbb
push
cltd
je
inc
enter
and
add
sbb
pushf
jge
neg
pop
ret
sub
dec
sbb
fildll
xchg
push
xorl
shlb
inc
cli
in
test
pop
dec
ret
int3
mulb
int3
faddl
mov
arpl
pop
aaa
pop
sarl
push
loopne
dec
inc
or
movsl
xchg
loop
or
xchg
rcr
fyl2xp1
xchg
addr16
dec
or
test
mov
push
add
push
add
addr16
pop
and
ja
mov
jbe
jle
pop
aaa
jge
xchg
adc
mov
jg
aam
dec
xor
xor
pop
xchg
out
gs
add
or
fdivs
addr16
in
loop
or
fldenv
scas
pop
bnd
xor
and
mov
sub
mov
pop
lahf
pop
rclb
or
ss
das
int
notl
sbb
mov
add
shr
xor
int
or
fwait
bound
xchg
fistpll
popf
or
jno
dec
push
and
mov
test
mov
outsb
movsb
fs
cmp
mov
rolb
sbb
push
popa
adc
dec
or
or
or
loopne
popa
pop
xchg
push
jb
dec
popa
add
lcall
sub
mov
mov
ds
push
sub
and
xor
and
xchg
xor
mov
mov
incb
xor
fnstcw
icebp
in
push
jns
roll
outsb
mov
push
lods
mov
notl
jo
mov
pusha
leave
lods
movsl
pop
test
lea
lcall
add
mov
mov
loop
negb
addr16
mov
lahf
push
mov
push
dec
jle
cld
and
push
or
pop
and
ja
clc
push
inc
sti
jns
cli
inc
clc
mov
test
inc
xor
lret
xchg
movhps
xchg
imul
dec
sti
pusha
jno
push
mov
push
out
scas
loopne
bound
push
rorl
in
sahf
fimuls
and
mov
pushf
addl
push
mov
jno
loope
push
jbe
adc
mov
inc
in
pop
in
mov
xchg
push
sbb
mov
scas
outsl
pop
mov
pop
mov
xchg
sbb
leave
push
mov
enter
jo
mov
push
out
inc
sub
jl
cmp
test
pop
xchg
in
mov
rclb
lods
add
push
sbb
cmp
nop
xor
adc
or
fwait
xchg
repnz
out
mov
jbe
clc
adc
and
int3
lds
pushf
add
sub
mov
dec
inc
jne
fs
push
shll
les
cmpsl
lahf
cmpsl
and
mov
dec
mov
mov
hlt
adc
add
sarl
mov
scas
cmp
in
pop
ret
pop
aam
jmp
roll
add
mov
xor
push
xchg
aas
enterw
rcll
pop
and
scas
aad
sbb
fucomp
inc
mov
outsl
lods
test
push
aam
aas
vpand
call
or
rcrl
aad
aad
out
pop
pop
mov
xor
mov
inc
mov
dec
lds
sarl
cmp
cmpsb
ja
imul
or
gs
or
lfs
insl
into
inc
test
fildll
jecxz
test
cmpsb
sub
lcall
xchg
out
jbe
xor
testb
fsubrl
loope
subl
jo
xorl
aas
lret
push
dec
hlt
aam
rcr
or
fisubrs
mov
mov
ror
mov
ljmp
lahf
lods
test
shr
push
xor
inc
sbb
fidivl
jns
pop
pop
fdivrs
lock
pop
xchg
decl
fs
mov
mov
lds
fcmovu
dec
or
mov
lret
stos
lea
push
push
aas
sub
mov
out
clc
pushf
test
sbb
jnp
insl
in
cmpsb
outsl
arpl
mov
xchg
js
cmp
add
and
jle
imul
mov
push
test
and
fnstsw
js
pop
cmp
add
mov
mov
not
jae
or
or
push
inc
ret
popf
clc
inc
mov
xor
int
mov
fadd
push
pop
push
pop
popa
push
adc
inc
sbb
and
pop
sbb
adc
leave
addr16
xchg
mov
xchg
pminsw
xlat
movsl
xchg
shlb
jae
xchg
bound
mov
outsb
jne
jb
jo
std
cmp
ja
adc
inc
je
les
push
dec
xchg
dec
xor
pop
mov
push
and
lcall
jmp
mov
popa
daa
push
cmpsl
cmp
movsb
aam
faddl
in
fldenv
js
lcall
adc
add
adc
out
add
sahf
mov
or
pop
push
cmpsl
sbb
jge
enter
aam
dec
push
es
shl
mov
push
mov
fdivr
data16
mov
cmpsb
sub
add
cltd
bound
test
jnp
mov
imul
add
push
mov
subb
and
adc
movsb
test
mov
push
imul
push
sub
int
dec
arpl
dec
sub
inc
mov
popa
incb
call
pop
movsl
pop
fistpl
cmp
lods
lret
leave
sbb
lret
mov
cs
jns
iret
adc
fmuls
stc
sti
arpl
sbb
pop
mov
push
jno
pushl
push
xchg
sbb
and
std
icebp
adc
iret
dec
and
popa
push
mov
fucomp
pop
in
aaa
fisttpll
nop
lcall
test
into
xor
shrl
out
or
aad
inc
fstl
sub
cs
sti
movsl
mov
dec
pop
xchg
jb
adc
pop
out
clc
movsb
popa
cmp
arpl
fisttpll
stos
xchg
push
nop
jns
cmp
pop
out
aas
and
mov
mov
cld
mov
xor
mov
inc
pop
adcl
adc
push
mov
jge
aaa
mov
mov
xchg
inc
mov
xor
ljmp
cmp
into
mov
cmp
push
sub
les
xor
mov
mov
outsl
pushf
jecxz
pop
mov
test
push
lret
lea
jmp
fmul
rcrb
and
movsl
lea
xor
add
daa
loopne
shl
xchg
ret
std
mov
enter
jmp
aam
xor
mov
stc
test
xchg
xor
pop
mov
fwait
ds
add
imul
cmp
xchg
xchg
in
inc
in
or
dec
inc
mov
aam
popf
sbb
inc
pop
orb
mov
push
dec
lods
es
and
dec
in
xor
mov
jno
adc
aam
jno
cwtl
pop
push
pop
and
std
xor
and
hlt
and
lea
dec
xchg
out
dec
mov
xor
nop
mov
dec
adc
adc
add
add
mov
jle
test
mov
cmp
loopne
loopne
mov
jae
dec
push
fstpt
xchg
ret
loope
mov
fwait
jg
popf
mov
dec
mov
sbb
or
cmp
test
sbb
xchg
fdivl
push
stos
mov
mov
cli
ret
sub
sub
out
test
adc
mov
movsb
or
nop
jne
inc
mov
sub
push
sbb
mulb
enter
cld
add
shll
sbb
insl
add
add
test
loope
xor
int
pop
mov
inc
mov
outsb
mov
xor
sbb
jbe
push
sbb
lds
jb
test
testl
xchg
rorb
xchg
pop
sub
add
or
cmpsb
push
in
int
xchg
lahf
inc
repnz
xchg
cmp
movsl
and
test
jmp
adc
loope
pushf
mov
jecxz
add
or
or
mov
imul
xchg
repnz
pop
cmp
out
jecxz
pop
cwtl
lock
cld
aaa
nop
popf
mov
std
cmp
xor
out
mov
xchg
cld
loope
mov
enter
enter
mov
hlt
jno
adc
sbb
pop
jl
add
data16
mov
adc
dec
mov
idivb
lret
negl
or
and
test
mov
mov
imul
sbb
xchg
xor
mov
push
mov
ret
into
mov
test
xchg
jmp
lods
test
pushf
addr16
adc
mov
aaa
push
push
es
outsl
cmp
xorb
aas
xor
mov
pop
adc
pop
enter
popa
mov
mov
ss
cmp
faddl
fwait
shlb
jno
jne
int3
pop
in
xlat
sub
iret
scas
add
sbb
out
inc
movsl
xlat
push
shrl
push
das
xor
stos
xchg
lea
xchg
scas
inc
xchg
sbb
out
das
ret
dec
out
sbb
dec
mov
xchg
pop
xchg
pusha
sbbb
mov
aad
xlat
sub
cmp
mov
jp
shrl
fidivrl
dec
icebp
scas
jb
ret
xchg
dec
sbb
popf
notl
into
mov
or
and
pop
or
jl
insl
out
insl
mov
in
xchg
add
jecxz
ljmp
push
adc
add
sbb
adc
fldenv
out
call
clc
hlt
cmp
aad
xor
push
mov
mov
dec
push
inc
and
pop
repz
dec
lods
rcrl
ret
jns
or
xor
sub
faddl
jg
sub
xor
mov
xor
xchg
or
imul
mov
ljmp
mov
mov
push
repz
sub
mov
dec
daa
inc
jae
aas
or
mov
les
loop
arpl
xchg
fadd
dec
mull
push
xor
pop
jae
mov
jne
dec
imul
loop
jge
mov
or
ficoms
lods
inc
mov
jecxz
xchg
push
ss
and
dec
push
bound
cld
mov
imul
add
in
test
pop
sbb
cmpsl
and
pop
in
test
add
xchg
jge
loope
fisubrl
in
xor
cmp
or
int
lock
mov
cmp
jb
aaa
lret
in
shrb
mov
in
aas
or
sub
in
or
push
imul
push
mov
je
mov
shll
add
pop
jmp
xchg
push
popa
inc
dec
loop
adc
xor
jns
int3
pop
mov
sbb
jmp
xchg
mov
arpl
pop
dec
cmpsb
pusha
lret
enter
loopne
or
insl
push
push
and
sub
cwtl
test
inc
cwtl
cmpsb
adc
aad
cmp
int3
push
iret
leave
push
in
pop
insb
shlb
adc
pop
mov
sbb
pop
cmp
or
out
aas
inc
repz
cmp
dec
ja
sti
pop
cltd
mov
jne
aas
mov
push
or
xor
iret
add
xor
jge
std
push
icebp
push
mov
add
mov
cmp
lret
arpl
mov
int3
cwtl
inc
mov
daa
pop
mov
in
jno
nop
xor
out
ret
xor
frndint
cmp
or
xchg
lock
fnsave
lret
cmp
fstpt
mov
push
loop
xchg
jecxz
sti
mov
insb
in
stos
mov
inc
sbb
xor
adc
inc
or
mov
push
lods
sub
std
lods
pop
pop
adc
adc
mov
sub
pop
enter
sub
pop
or
push
cmpsl
clc
xchg
mov
inc
test
in
jns
jo
xor
jecxz
outsl
fcmovb
test
add
adc
sbb
dec
ret
mov
test
stos
jp
gs
jno
xor
imul
cmpsl
cmc
push
sub
testb
idiv
mov
es
jne
mov
xchg
arpl
call
jns
rolb
xchg
xchg
int3
adc
sub
iret
pop
lds
pop
pop
ds
aam
dec
clc
jmp
dec
mov
jb
cli
ljmp
pop
adc
loop
inc
outsl
lea
jge
xchg
bnd
xorb
xorb
xor
cmp
and
mov
mov
and
pop
aad
fisubrs
out
popa
cmp
mov
add
inc
stos
popa
cli
push
call
add
test
xchg
aas
jp
add
sbb
xor
jns
mov
adc
scas
push
sub
dec
mov
lock
outsb
xor
xor
daa
push
and
addl
add
lods
adc
mov
dec
fbstp
adc
sti
test
jbe
icebp
lods
divb
add
jns
mov
pusha
cs
and
int
push
lds
or
fnstsw
movl
and
xchg
mov
mov
les
and
sarl
loopne
mov
dec
mov
enter
mov
and
leave
sahf
movsb
fwait
adcl
lds
pop
xchg
pop
push
jle
jecxz,pt
sub
stos
xor
mov
pop
in
cmp
xor
test
xchg
sar
test
addl
out
sarb
lds
cmc
jno
les
xchg
sbb
or
cmp
dec
lods
dec
hlt
cmp
cmp
mull
dec
jbe
les
cli
push
bound
cmp
leave
cmp
flds
xor
xlat
clc
mov
fisubl
aaa
mov
sahf
out
xor
repnz
inc
add
ret
pusha
push
jnp
pop
xor
jl
mov
pop
pop
loop
scas
cmpsl
mov
in
dec
jmp
sub
push
mov
mov
fldl2e
and
add
loope
pop
adc
testb
push
cmp
addr16
fs
outsb
pop
inc
cmp
call
xchg
cld
je
dec
cmp
jmp
mov
mov
lds
mov
inc
rcpps
adc
lods
jnp
push
xchg
or
sti
icebp
sub
addr16
sbb
and
fidivrs
pop
repz
push
push
arpl
scas
fsubl
sbbl
jge
cmp
fdivl
cwtl
leave
cld
out
xchg
repnz
js
je
adc
fldl
dec
sbb
cld
icebp
or
jecxz
lods
sti
jp
xor
mov
aas
and
xchg
and
mov
fwait
push
idivl
inc
fcomps
inc
mov
lret
mov
pushf
mov
loop
push
xorb
push
imul
lahf
mov
dec
or
hlt
cmc
pop
ja
loope
jmp
sahf
and
sbb
mov
mov
sbb
xchg
cmp
jo
data16
adc
mov
mov
cmp
in
rorb
mov
shrb
pop
jo
mov
inc
push
and
inc
sub
mov
add
jl
mov
into
sbb
mov
jle
pop
add
imul
iret
andl
mov
fimull
xchg
push
cld
scas
dec
loopne
sub
and
ja
lret
lret
mov
fsub
jo
add
repnz
mov
nop
out
sub
xchg
inc
in
outsw
xchg
mov
lret
lahf
xchg
xchg
out
cmc
pusha
mov
push
icebp
fs
mov
add
pop
pop
mov
fsubrl
aad
test
in
and
pop
fdivs
jge
cmp
outsb
outsl
push
out
cltd
lret
and
lods
or
cmp
jae
xchg
out
add
inc
xchg
repnz
adc
jne
dec
mov
lds
cmp
sub
sbb
lock
add
pushl
pop
aad
xor
jl
pop
mov
mov
pop
cmpsl
jmp
andl
loopne
add
mov
jne
add
mov
mov
or
jo
mov
jbe
out
mov
add
fs
in
xchg
fldl
jae,pt
push
add
mov
bnd
xor
fs
arpl
popa
scas
loopne
lcall
sub
jns
adc
aad
out
lcall
push
mov
js
cmpsl
xor
sub
fildll
mov
and
mov
jg
inc
dec
fnstsw
adc
test
inc
sub
push
fisubl
adc
mov
inc
xchg
pop
cmp
pop
lock
xor
xor
pop
outsb
call
mov
mov
into
sti
std
lds
sbb
incl
inc
push
mov
aam
or
push
jbe
push
lcall
jo
or
jns
in
pop
fwait
les
adc
jno,pt
jle
cmpsb
scas
cltd
lea
fs
lods
and
cmp
adc
cwtl
push
mov
lret
jmp
lahf
mov
jne
xlat
cmc
jns
in
fbstp
repz
fcoms
mov
push
pop
mov
int
push
pusha
jp
aaa
cmp
inc
negb
cld
or
idiv
push
jge
dec
jmp
sbb
in
push
ret
pop
mov
push
pop
xchg
in
xor
jne
sarl
or
pop
push
jl
aad
jl
jmp
mov
jns
hlt
pop
fcomps
cmp
dec
mov
incb
cmp
add
mov
mov
add
fsts
rclb
xor
push
cld
shll
outsl
sti
cmp
out
lods
jno
andb
xorb
lret
sbb
sarl
hlt
mov
ss
or
xchg
mov
push
jl
and
sbb
lret
into
loopne
and
xchg
mov
push
xchg
add
sahf
ja
push
sub
imul
jnp
sub
and
fcmovnb
add
fsubrs
pop
and
push
fisubrl
lret
lahf
add
mov
xor
popf
mov
ljmp
loope
loop
divb
mov
or
inc
fld
std
cmpsb
fucomip
sbb
fcoms
dec
mov
lock
dec
enter
scas
xor
mov
adc
into
xchg
push
leave
in
mov
dec
sub
lret
insb
hlt
js
sub
add
mov
ret
fisttps
mov
dec
mov
mov
mov
pop
lret
fisttpl
imul
and
jp
jns
repnz
cltd
dec
lret
les
leave
jb
sbb
jne
and
cmp
in
movsl
test
cli
fiaddl
push
mov
jg
jno
jmp
rcrb
je
mov
je
xor
push
dec
mov
xchg
and
dec
and
in
lock
pop
call
bound
adc
mov
dec
pushf
mov
xchg
mov
fs
test
mov
mov
icebp
mov
cmpsb
cmp
loop
sub
je
xchg
roll
jb
xor
xor
fbstp
adc
scas
in
or
repnz
ficomps
add
xor
dec
dec
bound
inc
jecxz
out
mov
loopne
ror
lcall
mov
nop
inc
imul
sbb
shr
pop
sbb
cmp
leave
test
dec
insb
push
insl
mov
jmp
jno
jmp
mov
aad
and
outsl
adc
jnp
daa
mov
aas
cmp
movsl
mov
outsl
pop
sub
aad
mov
add
scas
jl
addb
lea
or
sbb
mov
shll
inc
push
scas
orb
aam
mov
popa
jle
daa
shrb
aaa
push
ss
aad
add
aam
lret
lds
add
fisubs
xor
rorl
mov
xchg
sub
inc
jno
adc
sub
mov
cld
nop
es
push
add
and
xchg
pop
pop
dec
ficoms
xlat
aam
leave
jecxz
loopne
xchg
or
jno
fcoml
dec
sub
ret
adc
or
inc
mov
add
lds
lea
dec
add
jecxz
push
mov
jns
and
sahf
push
mov
pop
cmp
pop
sbb
push
fcompp
stos
dec
xor
sbb
mov
shl
les
pop
loopne
mov
addl
mov
inc
inc
cmpsl
icebp
and
mov
cmp
std
out
leave
sbb
push
stos
xor
movsl
xchg
xchg
fbstp
fwait
push
xchg
mov
mov
gs
outsb
push
dec
fcmovu
or
and
inc
test
aas
dec
pop
dec
popa
or
js
iret
mov
outsl
jb
int3
mov
push
dec
or
mov
pusha
xor
mov
cmp
int
jne
xchg
movsb
mov
scas
and
xchg
push
push
leave
jo
cwtl
insb
in
mull
lret
mov
sbb
sub
add
andl
sbb
jge
cmp
mov
xor
jbe
divl
lcall
mov
out
jno
add
mov
sbb
or
jmp
mov
call
lret
icebp
pop
sbbb
or
imul
pop
mov
fsts
adc
adc
les
jno
flds
xchg
and
and
insl
mov
push
dec
daa
mov
nop
and
pop
jns
jmp
lcall
adc
or
out
clc
sbb
cwtl
sbb
pop
aam
iret
popa
adc
and
sbb
mov
mov
mov
fbld
leave
push
test
jno
or
shlb
test
mov
jb
inc
mov
sbb
mov
or
sti
imul
lret
leave
insl
mov
xor
inc
sbb
push
cmp
fst
jp
mov
mov
jle
push
rcrl
shll
and
cmc
sti
mov
lret
mov
mov
add
dec
test
xor
addb
daa
imul
out
or
insb
and
inc
mov
mov
cmpsl
sahf
enter
or
cmp
push
pusha
or
in
xchg
mov
enter
push
inc
xor
scas
mov
cld
push
fidivl
inc
out
lods
jmp
xor
xchg
mov
out
mov
adc
aad
fisubs
test
lcall
push
jb
dec
mov
jmp
loop
cmp
ret
lahf
aaa
cli
or
mov
push
xchg
dec
daa
fucomp
inc
test
jo
adc
movsl
or
popf
pusha
adc
adc
dec
push
and
inc
inc
push
mov
dec
mov
sub
xor
push
loopne
in
push
fimull
xor
roll
xor
pop
pop
mov
sti
add
out
int
arpl
aam
je
arpl
xchg
jle
dec
fidivs
daa
ret
mov
das
pushf
fadds
or
sbb
pop
jmp
or
mov
dec
jne
pop
ss
pop
pop
pop
adc
inc
sbb
mov
dec
or
jae
xor
sbb
lret
add
cmpsb
daa
xchg
sbb
mov
pop
and
addr16
test
aad
pop
aaa
cmp
fwait
add
out
inc
sti
pop
sub
mov
inc
adc
pushf
lahf
ljmp
jp
adc
daa
mov
sbb
fistpll
dec
jns
lods
repz
jmp
push
lret
adc
aas
cmpsl
sub
adc
inc
fistpll
rcll
sti
les
jle
out
fwait
mov
shll
cmp
sbb
sub
mov
inc
ljmp
fisttps
clc
inc
loop
jg
fs
loope
arpl
sub
xor
push
inc
sub
adc
or
sarl
insl
fsubl
push
cmp
adc
enter
xchg
stos
les
fnstcw
xabort
adc
and
bound
sbb
push
push
jge
inc
insb
cmp
jns
pop
std
ret
clc
mov
lcall
mov
pop
xchg
and
add
dec
addps
pop
sbb
lds
dec
test
in
dec
jmp
xor
test
lock
pushf
mov
jnp
or
cld
inc
cmp
pop
movb
lods
push
outsb
jb
mov
icebp
jle
sbb
mov
aam
aam
jl
adcl
stos
pop
sbb
fnsave
add
fdivs
push
aas
mov
das
sti
rclb
aam
adc
jbe
not
sbb
aam
pushf
shll
cli
lret
cmpsl
enter
cld
out
or
jns
daa
mov
push
dec
dec
push
inc
es
stos
loop
adc
mov
mov
or
pop
lods
cmp
pop
shlb
lods
in
aam
and
adc
imul
out
add
pop
push
lock
stos
inc
push
jp
les
mov
add
mov
in
sub
xor
sub
enter
and
repz
mov
or
mov
ja
gs
jmp
adc
sbbl
fs
cli
sub
or
push
mov
inc
sahf
clc
lods
fmulp
je
dec
call
sarb
inc
mov
decb
jnp
xchg
repz
scas
dec
sbb
mov
in
repz
fmull
jecxz
rorb
rolb
pop
xchg
std
or
pop
xchg
in
sub
fldenv
mov
pop
jbe
xchg
addr16
jecxz
cld
jmp
push
adc
jno
xchg
mov
or
addl
loopne
dec
cmp
sub
cmpsl
orb
push
dec
push
push
add
outsb
scas
test
rcll
fisttpl
cmp
jecxz
lea
pop
into
adc
imul
or
aas
in
outsl
push
xchg
ret
xchg
mov
mov
sbb
or
mov
outsb
dec
movsl
jle
inc
lcall
addr16
ss
lds
xor
jmp
adc
jae
movsl
ss
push
pop
xchg
mov
dec
add
pop
out
punpckhwd
clc
popf
lret
pushf
jno
or
sbb
ret
cmp
sub
pop
pop
jb
push
mov
pop
sbb
sub
or
mov
mov
ljmp
add
adc
decl
xor
jecxz
inc
xor
sahf
pop
lea
sbb
andb
roll
ret
lds
int3
rorl
inc
dec
int3
inc
arpl
and
or
or
pop
sbb
bound
in
aam
outsb
fstpl
fwait
subb
push
inc
cmp
mov
mov
jp
pusha
sbb
sub
or
movsb
fs
loope
and
cmpsb
adc
lcall
xchg
xchg
jo
test
push
rorb
test
pop
xorb
addb
jecxz
push
ret
jo
das
lock
adc
or
nop
popf
xchg
sub
jno
xchg
push
aam
xchg
outsl
mov
rcll
lods
pop
lret
fisttps
mov
fdivl
imul
lods
inc
dec
lret
out
xor
orb
mov
fsub
jnp
cmp
inc
xor
scas
je
ret
mov
cmp
icebp
testb
mov
or
xchg
dec
movsb
cltd
inc
mov
xor
cmp
push
imul
cmpsl
pop
pop
lds
repnz
cmp
cmp
in
flds
mov
add
jbe
shlb
repnz
sbb
xchg
push
lahf
inc
test
aad
sti
cmc
inc
jo
std
out
popa
xchg
shrb
sti
test
fucomp
fcomps
xlat
test
pop
ret
pop
stos
stos
pusha
test
hlt
dec
dec
cmp
inc
outsb
and
mov
mov
pop
stc
cmp
stos
jg
inc
aad
test
jbe
adc
jnp
sub
aad
push
call
js
or
dec
cli
jne
out
jbe
clc
jns
adc
test
ror
push
adc
int
push
imul
cmp
fisubl
xor
outsb
ljmp
mov
jl
xchg
add
ret
hlt
hlt
scas
jge
sti
icebp
call
dec
leave
pop
nop
test
push
lret
pop
xor
xchg
dec
add
lods
pop
cmpsb
sbb
lahf
sub
xchg
push
dec
into
sub
iret
sub
ja
jmp
imul
sbb
ss
mov
cld
adc
xchg
pop
jae
movsl
mov
pusha
sbb
ljmp
mov
xchg
arpl
mov
mov
mov
dec
dec
cmpsl
push
mov
pop
xchg
and
push
xor
dec
jb
cmp
and
pushl
dec
xchg
test
xchg
jo
lret
jno
jbe
xchg
movsb
add
repz
jmp
out
ja
mov
mov
adc
push
jp
lret
cmp
lret
push
pop
data16
push
movsl
mov
mov
int
inc
xlat
mov
sbb
mov
adc
jae
cld
pop
ficompl
jmp
push
inc
fwait
lahf
iret
push
mov
leave
jb
cmp
push
out
mov
ja
jmp
sbb
sahf
hlt
psubd
inc
stc
insb
daa
clc
push
aad
jne
popa
lods
jmp
cmp
es
dec
repnz
dec
out
out
jl
shl
fs
sbb
jg
xlat
push
popf
xchg
movsb
and
push
or
fnstenv
fsubr
add
dec
inc
pop
loopne
add
rcll
les
testb
imul
stos
cmpl
dec
nop
in
out
in
xchg
inc
pop
push
lahf
lods
push
mov
lahf
and
cmpsb
pushf
popa
mov
je
rcll
xchg
sbb
lea
aas
mulb
xchg
dec
ljmp
push
cmp
cltd
in
fstpl
cmp
dec
stos
loopne
outsb
pop
mov
xor
jno
scas
adc
xor
roll
or
push
dec
lock
int
stos
adc
mov
out
je
add
inc
mov
ja
dec
jp
pushl
add
lock
xor
jns
cmp
dec
aaa
iret
or
clc
adc
shl
mov
outsl
js
dec
stos
rolb
inc
mov
pop
sbbl
dec
xchg
xchg
ds
call
data16
add
mov
sub
les
mov
cwtl
jnp
or
fdivrl
ds
mov
in
stos
mov
shll
xchg
mov
mov
cmpl
dec
aam
je
ficoml
pushf
inc
stc
leave
pop
cmp
stos
scas
hlt
es
jnp
add
adc
push
jnp
fwait
cld
loop
scas
jnp
in
pop
and
xchg
out
mov
pop
mov
xchg
inc
push
sti
cmp
adc
sarl
pop
mov
sbb
lret
lahf
outsb
xchg
jne
fwait
incl
push
mov
sahf
xchg
sbb
inc
popa
mov
imul
loopne
out
sub
ljmp
je
movsb
in
and
or
jb
jle
sbb
adc
adc
shll
cmc
mov
hlt
aam
lods
sub
hlt
push
rorb
dec
push
stos
sarb
xchg
loopne
pop
mov
pop
dec
adc
outsl
ret
jo
inc
ja
stos
hlt
sub
mov
cli
rorl
sub
or
inc
mov
mov
mov
pop
dec
je
add
rorb
imulb
lock
lock
sbb
add
cmp
sub
les
cwtl
icebp
mov
dec
filds
movsl
xor
hlt
inc
jecxz
pop
lret
and
xchg
loop
movsl
jecxz
push
popf
scas
jne
orb
mov
mov
or
aas
fcoml
icebp
inc
in
sub
out
pop
cmp
outsb
adc
js
pop
lods
cmpsl
jle
mov
icebp
inc
out
js
imul
pop
pop
ffreep
xor
xchg
insb
lret
into
jb
fstps
xchg
out
mov
xchg
out
mov
nop
outsb
mov
jo,pt
push
or
cs
cmp
push
stos
jno
add
loop
xchg
sub
adc
flds
out
xor
jo
xchg
gs
mov
adc
sub
test
xchg
pop
cmpsl
outsl
pop
cs
mov
and
fisubs
mov
sahf
test
or
push
and
or
cmpl
repnz
push
lret
xchg
lret
xor
aad
add
mov
fbld
mov
jl
jns
roll
cli
sub
iret
push
jecxz
cld
and
test
and
mov
out
or
xor
push
cmpsb
jbe
scas
jo,pn
xchg
xor
shlb
or
mov
rcrb
clc
jle
cmpsl
cltd
stos
fcoms
and
popa
ss
sub
xchg
inc
stos
push
cmp
add
adc
int3
dec
jmp
repz
mov
sub
dec
jnp
outsl
xor
les
pop
push
es
fstps
ds
pop
shr
fsubr
mov
enter
xchg
dec
sbb
push
and
xchg
add
lock
test
popf
xor
sbb
mov
aad
dec
mov
cmpsl
aam
mov
sub
inc
cli
in
pushf
inc
int3
cmp
loop
mov
xor
std
repz
jb
xchg
das
mov
xor
rcr
push
push
jge
sbb
jb
ljmp
xchg
es
jmp
stos
sub
xchg
aam
push
enter
sub
sahf
mov
hlt
cld
fwait
insb
pop
or
repnz
ja
jb
xchg
stos
lret
mov
ret
add
cltd
mov
mov
lock
mov
mov
add
jge
icebp
mov
mov
xchg
mov
jp
nop
into
jg
xor
jb
sbb
sbb
loope
ss
jl
cltd
pusha
push
pop
cwtl
inc
pushf
xchg
pop
jbe
aad
insb
popa
pusha
fdivrl
jae
ja
mov
push
fsubs
push
push
ret
rol
dec
cmpsl
mov
in
incb
push
mov
sbb
mov
mov
adc
cmp
adc
inc
andl
cmp
adc
ja
sub
insl
inc
addr16
sbb
outsb
nop
lret
push
and
cli
arpl
inc
popa
or
mov
jno
mov
xorb
jae
fildll
int
or
pushf
sub
pop
mov
divl
scas
push
fisubl
mov
cmp
jle
movsl
idivl
sub
push
call
jle
out
scas
testb
das
lock
icebp
imulb
push
push
jae
push
add
cmp
pop
addl
jbe
aad
test
mov
movsl
and
or
pop
push
testl
subl
mov
xchg
dec
daa
jnp
fst
mov
sar
mov
pop
enter
dec
mov
push
mov
mov
cld
out
je
push
push
lret
clc
test
dec
leave
xor
andl
mov
mov
pop
pop
sti
mov
mov
lcall
sbb
xor
cs
jle
mov
in
cmc
in
lods
dec
pop
push
jbe
nop
lret
mov
xor
fiaddl
dec
push
movsl
push
addb
pusha
and
out
gs
inc
test
mov
inc
add
mov
lock
add
pushf
daa
and
xchg
cmpsl
rcrl
jns
and
cld
mov
mov
dec
mov
push
imul
jbe
fucomi
xor
or
dec
cwtl
pop
xor
hlt
dec
andb
mov
sbb
aaa
sub
ss
js
jmp
push
std
or
fldt
pop
add
xchg
xor
scas
mov
das
hlt
test
pushf
push
pop
sub
mov
pop
popf
or
xchg
push
fwait
dec
mov
push
in
cmc
jns
jecxz
add
or
mov
adc
sub
fildl
out
in
outsl
or
jp
lds
loopne
adc
sub
mov
sahf
pop
sbb
jmp
inc
scas
jb
mov
in
fdivrl
xchg
cmp
jbe
insl
pop
xor
lods
push
mov
and
sub
cli
les
mov
clc
rcrl
dec
ljmp
add
add
or
cli
movsl
fisubrl
and
sbb
mov
call
sbb
insb
jle
mov
or
cmpsb
mov
rcl
mov
pop
dec
ds
mov
lcall
cmc
imul
lock
xor
aam
mov
add
jno
cmp
inc
jg
pop
jo,pn
cmovnp
fiaddl
test
jne
mov
and
leave
rcrb
scas
jle
scas
outsb
push
add
push
pusha
xor
xorb
sub
mov
mov
add
push
cmc
mov
inc
aaa
out
dec
inc
xor
test
mov
mov
cld
cmp
cli
mov
lock
cltd
mov
push
fimull
sahf
pusha
xor
lret
nop
fwait
jno
mov
mov
push
pop
das
dec
xor
fbld
call
pop
xchg
lret
ds
call
add
mov
add
imul
adc
mov
test
leave
in
ja
push
cmpsb
mov
test
xlat
or
cmp
pop
aad
xchg
cltd
adc
cli
test
popf
jp
inc
mov
outsl
bound
mov
jne
cmp
dec
fs
insl
rcrl
inc
inc
xchg
dec
or
ss
mov
fdivrl
cmp
rcl
dec
movsl
sbb
imul
std
pop
push
clc
adc
dec
aaa
cmpsb
outsb
fisubrs
in
out
jge
xlat
std
aas
in
xor
nop
imull
push
icebp
dec
scas
test
sub
sbb
mov
xor
cmp
inc
scas
ljmp
mov
test
xchg
jp
sbb
sbb
push
bound
ss
sub
xor
test
divl
in
ljmp
adcl
dec
jnp,pt
pushf
xor
mov
pop
mov
inc
les
rorb
mov
pop
sbb
or
fcmovne
mov
shlb
push
ss
mov
mov
add
leave
pop
mov
add
shrl
cwtl
sbb
sub
xchg
stos
sub
sbb
push
stos
test
xchg
mov
jl
fdivrs
cltd
int3
push
pop
and
push
xor
stos
sub
aas
test
dec
pop
out
adc
xorl
test
jb
aas
leave
lcall
xchg
daa
mov
cmc
lcall
sti
orb
test
jns
push
daa
or
or
aam
xchg
push
test
imul
pop
shll
mov
addr16
and
pop
dec
cld
loope
sub
adc
out
fbstp
dec
sub
jno
mov
sahf
loopne
add
dec
aam
dec
xchg
xor
lock
cmc
push
test
push
insl
aaa
adc
cmp
dec
xlat
add
sbb
xchg
and
ljmp
fdivs
dec
js
stc
int3
add
push
and
adcb
sub
aad
push
jb
add
mov
sahf
jb
into
cmp
call
cmpl
gs
cmp
lock
insb
outsl
insb
inc
mov
repz
lret
mov
jae
in
cli
arpl
mov
ret
pushf
adc
jnp
cli
ret
xchg
daa
add
dec
pop
fwait
out
icebp
in
mov
push
mov
jl
pop
lahf
pop
push
fiadds
pop
and
int
mov
es
fwait
and
int
pop
ljmp
adc
adc
mov
cmpsl
in
xor
jae
jecxz
in
shrl
mov
insl
cmpsb
aas
cmovns
pop
repz
pusha
ss
lahf
adc
daa
cmp
in
popa
xchg
lock
mov
xor
stos
pop
jnp
pop
loopne
dec
sub
nop
mov
das
test
in
loope
xchg
stos
or
das
pop
jb
stc
cmp
pushf
scas
sbb
push
lods
shrl
mov
inc
fs
sahf
call
jne
inc
mov
rcrb
dec
in
sarl
inc
ss
and
xchg
repnz
or
add
sub
cmpsl
pop
sub
jae
sti
out
adc
pushf
cmpb
push
cli
push
lahf
sub
mov
fidivrs
adc
lret
repz
jno
sub
pop
out
mov
push
and
ljmp
enter
pop
push
mov
jl
mov
pop
ficomps
dec
xchg
out
inc
adc
incb
jo
sbb
mov
cwtl
in
iret
insl
xchg
clc
mov
addr16
sub
mov
mov
push
inc
mov
mov
add
sub
pop
test
dec
cli
xrelease
push
sub
adc
ret
test
add
loop
fcmovne
jp
dec
xchg
mov
sub
pop
cmc
inc
pushf
inc
ja
and
scas
jae
adc
push
cmc
mov
in
cmpsb
push
xchg
testb
push
or
popf
mov
push
adc
fcomip
mov
jns
repz
xor
cmp
mov
cs
pop
sti
bound
test
xchg
and
loope
and
nop
adc
lods
push
mov
icebp
mov
mul
andb
adc
push
test
jg
jl
cmpsl
into
out
dec
jbe
fsub
push
mov
pop
xchg
xor
push
aam
or
loop
mov
fs
adc
in
jo
cwtl
ret
movsb
in
aaa
cmp
mov
pop
pop
xchg
movsb
push
repnz
iret
and
fnstcw
dec
cwtl
clc
xchg
and
jp
jb
popl
imul
cwtl
dec
incb
arpl
push
scas
lcall
mov
and
dec
mov
lret
dec
cmp
in
pop
cld
jg
ret
addr16
enter
sahf
xor
xchg
int3
push
leave
push
pop
fnsave
ror
push
cmp
cmc
aaa
lret
xchg
sahf
movsl
mov
rorb
push
bnd
addr16
inc
and
imul
mov
xor
cwtl
cmpb
xor
stc
inc
xor
add
mov
enter
xor
sub
movsb
mov
pop
fimull
add
shll
xchg
inc
lahf
movsb
mov
loope
cmp
aas
push
out
andb
mov
fisttpl
jae
stc
aaa
and
sub
test
lcall
ja
out
loope
or
cmpsl
ja
cmp
pop
push
add
mov
roll
or
in
xchg
lock
idivl
mov
xor
ss
sbb
adc
cmp
das
push
xor
enter
adc
clc
xchg
inc
jne,pn
sub
lods
add
shll
cmp
jmp
cmc
shrb
jmp
mov
dec
dec
in
inc
and
out
frstor
insb
fildll
mov
subb
bnd
mov
cmp
fcoml
cmp
and
mulb
xlat
sub
stc
pop
xchg
mov
and
pop
movsb
dec
xchg
mov
mov
adc
dec
fdivrl
dec
mov
or
pop
aam
in
xor
jae
outsb
js
clc
hlt
pop
dec
nop
insb
xor
vmovq
aam
negl
pop
daa
mov
rcrl
shr
lock
sbb
push
and
xor
cmp
xchg
fs
dec
arpl
aam
stc
clc
sbb
cs
ds
sub
rol
fiaddl
ja
test
fsubrp
and
in
loop
mov
jnp
fisttpll
inc
arpl
stc
jbe
test
int3
xchg
xchg
pop
or
mov
icebp
out
jl
out
adc
push
movsl
dec
mov
addr16
scas
arpl
mov
cmp
mov
fisttpl
push
dec
adc
scas
mov
xor
push
inc
pop
and
xchg
es
frstor
sub
fsubrs
cmc
mov
mov
mov
cs
movsl
add
mov
inc
xor
push
mov
loop
sbb
in
lock
movsb
std
dec
jecxz
dec
sbb
or
mov
pop
sbb
push
sbb
xor
ret
lcall
sbb
jl
or
stos
pop
insb
add
sub
sub
xor
dec
and
push
jge
push
loop
xor
adc
dec
std
test
add
add
ljmp
mov
shl
sbb
fiaddl
sbb
ja
sub
int3
pop
cmpsb
xchg
aaa
int3
xchg
out
pop
dec
mov
movsl
int3
adc
jl
rcr
push
scas
stos
scas
and
dec
aas
or
cmp
lods
sbb
jecxz
fisttps
pop
leave
push
mov
pop
stos
push
sti
xchg
push
mov
lahf
daa
cwtl
lret
mov
cld
cmpsl
test
dec
lret
cmp
fistpl
bound
adc
mov
push
aam
mul
xor
movsl
sub
fmulp
push
ss
push
sub
lahf
out
add
out
int3
push
adc
mov
test
faddl
roll
mov
inc
adc
sbb
leave
imul
cltd
mov
mov
xchg
xchg
rcr
ret
stos
jns
adc
mov
push
lds
mov
xchg
fiadds
pop
insl
lock
ret
or
pop
or
jecxz
out
adc
pushf
jge
aas
xlat
lds
inc
xchg
inc
outsb
mov
inc
mov
outsb
dec
push
inc
inc
cltd
popf
adc
decl
mov
out
mov
mov
iret
jo
hlt
mov
xchg
push
sbb
or
test
hlt
repnz
mov
mov
out
inc
sbb
idivl
dec
cmc
in
pop
sub
and
into
xor
icebp
scas
adc
shrl
cmpsb
inc
int
dec
or
call
daa
fiadds
pop
ljmp
add
jp
mov
sahf
ret
push
imul
shlb
out
decl
test
sbb
dec
push
sbb
inc
addr16
jbe
xor
loop
stc
lea
es
loop
loope
mov
xor
jno
sbb
loop
adc
push
cmp
pop
sbb
movsl
xor
jmp
or
das
or
aas
loopne
or
xor
add
mov
in
sarb
pop
adc
and
mov
lock
push
scas
cmp
cmp
icebp
dec
cld
mov
mov
fisubrs
pop
bound
cmpb
pop
das
xorb
add
mov
inc
inc
fcmovne
mov
dec
int3
ss
jb
clts
or
mov
jp
in
lds
sahf
jbe
cmpsb
hlt
and
lcall
xchg
pop
ss
push
lahf
jle
fstl
pop
sub
cmp
lods
adc
ljmp
add
ret
mov
lods
out
mov
cmp
mov
jecxz
nop
add
adc
sar
aaa
cmp
mov
ret
push
fcoms
sbb
outsl
inc
enter
add
push
addr16
leave
aas
adc
lret
bound
xor
pop
mov
add
in
add
or
lcall
dec
mov
es
ret
add
imul
jne
pusha
addr16
mov
cmpsl
stos
dec
cmp
fst
and
adc
jb
add
mov
in
aaa
add
inc
pop
inc
lods
sbb
ja
mov
jno
add
xchg
lret
test
int3
notb
popf
xchg
lea
and
push
cmpsb
or
aaa
fdiv
xchg
cmp
in
lea
mov
sahf
push
xchg
mov
and
and
mov
xchg
lea
jge
int3
pop
shrl
stos
jmp
rolb
push
add
shlb
xor
push
sub
mov
xor
into
xchg
fcom
aas
sbb
jl
test
aad
ss
jge
insl
or
dec
out
rcrl
aas
icebp
add
jg
mov
movsl
ds
mov
push
or
pushf
arpl
jne
iret
insl
mov
fdivrs
pop
sbb
mov
xor
icebp
and
mov
out
cmp
cltd
adc
adc
adc
xlat
fsubrp
xchg
adc
mov
aam
cmp
dec
pop
mov
sti
sti
sahf
in
unpcklps
pop
dec
adc
addr16
and
xchg
xlat
xchg
jbe
ja
fidivrl
scas
les
ds
fsubr
inc
push
push
loop
lock
divl
flds
andb
les
ds
sahf
mov
cmp
pop
lahf
and
cmp
push
sbb
mov
out
fs
fnstsw
mov
sub
mov
lds
in
in
sbb
push
inc
push
pop
push
pop
aad
xor
loopne
scas
jb
push
mov
outsl
fsts
test
sub
fsub
push
sbb
inc
jne
mov
aas
cmp
push
outsl
leave
sbbb
mov
movsl
push
mov
stos
lcall
stc
shrb
jmp
mov
mov
add
test
js
hlt
xchg
mov
lds
push
addb
call
out
sbb
into
inc
adc
fcomps
ds
dec
push
test
xchg
push
movsb
inc
idivl
imul
mov
popa
jnp
sbb
cmp
cmc
icebp
pop
add
xor
call
scas
fwait
cmc
icebp
jmp
xchg
cmp
mov
aas
fistl
mov
shrl
cltd
mov
cmp
fs
jl
pop
icebp
and
into
push
fnstenv
icebp
lcall
inc
in
test
sub
and
mov
inc
loopne
or
shrl
mov
mov
ret
mov
test
int3
sbbl
sbb
sbb
scas
testl
rcll
adc
pop
push
add
stc
daa
subb
stos
mov
lret
mov
mov
jne,pt
inc
xchg
jmp
mov
aas
add
push
dec
push
enter
mov
cmpsb
mov
and
xchg
pop
hlt
mov
push
push
or
xchg
dec
jbe
ss
sub
test
out
jne
mov
jge
cwtl
leave
lods
inc
shl
movsl
xor
push
aas
lods
out
call
mov
ja
mov
filds
sub
dec
popa
insb
inc
aad
sarl
dec
mov
jle
mov
dec
rorl
xor
push
lahf
addr16
xchg
cmp
xor
mov
cmp
loope
xor
pop
in
aaa
into
xor
loope
inc
pop
hlt
sahf
mov
fdivrs
ret
les
and
mov
lret
je
and
test
jmp
dec
xchg
mov
push
and
adc
rorb
jle
adc
adc
mov
push
sub
sbb
or
jo
arpl
cmp
add
cmp
in
push
cmp
stc
or
nop
into
push
into
ja
out
pop
iret
xchg
orl
mov
push
arpl
dec
inc
or
xchg
inc
xchg
out
adc
push
rolb
sahf
orl
mov
in
xchg
push
sbb
pushf
stc
push
scas
adc
mov
mov
lcall
inc
test
test
mov
sub
jne
jle
jbe
add
adcl
outsl
outsl
mov
xchg
jnp
les
stos
rclb
inc
call
dec
cmp
cmp
sahf
sub
cmp
rcr
mov
push
sbb
mov
adc
inc
repnz
pop
dec
cs
lods
mov
and
sub
push
outsl
fcoml
mov
push
mov
das
sbb
rorb
fwait
jbe
mov
ds
dec
mov
ficomps
stos
std
pop
leave
inc
loop
lds
xchg
and
mul
xor
lret
add
dec
cmp
sub
sbb
jns
std
xchg
shl
pushf
aas
mov
sbb
and
jae
fsubp
push
ret
sbb
mov
popa
push
mov
daa
pop
xor
push
xor
mov
add
jge
out
ficompl
aad
inc
out
jecxz
mov
mov
pop
cwtl
test
inc
pop
jp
or
test
dec
mov
test
lods
xlat
bnd
aas
shrl
pop
xchg
ljmp
mov
sbb
xor
lret
sbb
clc
xor
jo
and
push
lret
icebp
add
lret
pop
andb
mov
mov
nop
or
mov
xor
jnp
cmp
push
jg
jl
adc
xchg
cld
out
jmp
and
add
addr16
data16
shlb
add
fnstsw
jb
popf
or
sbbb
iret
test
mov
sahf
pop
int
data16
mov
xchg
out
xlat
icebp
push
sarb
jns
sbb
lock
xchg
push
jns
jp
into
cmp
push
call
test
push
lcall
arpl
push
fsts
inc
jnp
adc
cmpsb
ret
sbb
negb
test
add
jnp
pop
ds
push
outsl
cs
push
adc
daa
fisttpll
call
out
mov
test
jne
loop
movl
mov
loopne
fstl
gs
out
loope
jp
daa
cs
hlt
inc
test
inc
adc
and
or
call
bound
out
xor
rorl
idiv
mov
out
sbb
xor
xchg
pop
cmp
and
fistpll
and
dec
test
fsubl
nop
add
enter
imul
sub
adc
insl
int3
push
cmp
outsl
mov
adc
popa
sbb
add
sub
daa
sbb
jecxz
push
jns
lds
sbb
or
and
cmp
in
int
int
ljmp
adc
fsubl
cli
push
cmp
in
insb
mov
mov
mov
movb
xor
outsl
roll
js
mov
jno
call
push
scas
or
cmc
and
ja
jne
inc
das
cmpsl
rol
xchg
jnp
and
enter
sub
pop
xor
rclb
cmpl
add
cld
ds
orl
mov
inc
fisubs
jg
and
imul
mov
sbb
imul
dec
push
xor
adc
sub
inc
adcb
mov
das
cmp
cltd
nop
icebp
sbb
xchg
insl
mov
popf
icebp
scas
mov
sbb
jno
cli
icebp
aad
repnz
xchg
int
icebp
int
pop
xchg
mov
adc
sahf
lods
fwait
pop
call
push
in
xchg
roll
pop
adc
icebp
cmpsl
inc
loope
and
rcrl
addps
cwtl
cwtl
lahf
in
sub
pop
pop
enter
fadds
test
jns
and
adc
xchg
push
mov
lahf
movsl
push
in
int
in
cmp
pop
call
mov
mov
sub
sahf
mov
push
xor
insl
sub
sbb
ja
lds
in
repz
in
and
xchg
mov
icebp
mov
cli
mov
push
cmp
push
popa
idivl
adc
insl
inc
rorb
xchg
sub
xchg
rolb
push
adc
push
mov
jb
outsl
jl
cmp
push
ss
adc
sbb
cmpsl
mov
loop
sbb
lret
mov
pop
pushf
imul
fisttpl
ja
adc
pop
cli
mov
iret
fwait
lcall
jnp
mov
shl
cmc
lcall
push
in
test
inc
hlt
push
pusha
jnp
inc
clc
shlb
mov
negb
and
movsb
pop
mov
xchg
or
pop
inc
stc
cli
ljmp
out
mov
fsub
xor
push
push
sub
push
mov
shll
add
cmc
cwtl
dec
adc
adc
inc
sbb
inc
js
sub
testl
or
sti
xor
arpl
andb
mov
jl
inc
popa
iret
daa
idiv
repz
nop
or
adc
jp
fwait
int
or
cltd
aam
jp
push
push
scas
lds
add
addl
sub
stc
cmc
repnz
sub
sarl
xchg
and
dec
add
mov
jne
and
xchg
dec
lds
icebp
imul
inc
out
mov
les
mov
aad
or
stos
repz
lahf
adc
add
lods
or
loopne
pop
sbb
sub
pop
jecxz
shlb
int
mov
lret
and
or
xor
pop
and
fiadds
outsb
stos
stos
jb
lret
inc
pop
dec
aaa
js
mov
or
sub
fnsave
and
les
push
orl
or
lcall
test
mov
enter
xlat
sahf
out
pop
add
inc
xorb
out
xchg
sbb
pop
add
mov
push
inc
or
cmpsb
pop
push
or
je
outsb
mov
add
mov
test
mov
sbb
stos
out
jo
cli
scas
dec
sub
mov
inc
into
sbb
dec
out
rorl
clc
mov
enter
sti
dec
xlat
xor
push
fsubr
jle
in
dec
jg
mov
outsl
cmp
inc
xorl
sbb
sbb
mov
repz
adc
mov
insb
xor
fwait
cmp
xchg
pop
and
add
repnz
scas
push
xchg
lods
cwtl
insl
and
jno
in
or
jne
rorb
mov
adc
test
sub
push
scas
mov
daa
mov
sbb
push
sub
mov
std
pop
or
lret
cmpsl
out
inc
sub
jbe
cmpsl
add
dec
and
lret
xchg
mov
adc
movsb
xchg
xchg
or
icebp
xor
mov
inc
int
cmp
mov
mov
aaa
aad
call
add
pop
sti
add
mov
dec
aaa
test
mov
add
stos
mov
xchg
ss
mov
divb
jg
ja
jge
int3
sti
mov
mov
dec
or
pop
jno
push
jnp
push
push
pop
adcb
pop
leave
loope
lds
adc
dec
jecxz
pop
mov
lds
cmp
js
pop
xchg
subb
mov
push
ds
or
fidivl
sarl
mov
push
jg
andb
pop
sahf
mov
outsb
outsl
jne
sbb
rolb
inc
adc
sbb
test
mov
mov
cld
push
and
mov
test
push
int3
xchg
push
dec
pop
mov
and
xchg
insb
les
test
sub
mov
jb
mov
cmp
ret
cltd
movsb
cmpsl
dec
inc
push
and
cs
mov
cmp
mov
pop
pop
add
ret
movsl
inc
movsl
jno
arpl
pop
data16
dec
in
mov
xor
icebp
popa
clc
shlb
pop
test
mov
add
cmp
cmpsb
mov
pushf
or
movsl
sub
in
data16
shl
mov
fcompl
das
sbb
test
stc
arpl
cmp
fidivl
fistl
es
clc
xchg
sahf
xchg
scas
cltd
cwtl
popf
scas
aam
mov
sub
repz
mov
cmp
inc
pop
scas
and
in
adc
mov
repnz
fisubrs
rcrw
cmp
mov
out
inc
adc
push
out
popf
mov
scas
movsl
push
xchg
cmp
pop
pop
lods
sub
xlat
popf
pop
sub
push
std
or
lret
inc
jae
shl
and
jmp
in
xchg
inc
xchg
scas
xchg
sub
clc
in
loop
nop
adc
mov
mov
test
jbe
fdivr
jb
ret
lcall
dec
aad
out
jb
cmp
jo
imul
cmp
scas
divb
adc
cmp
in
daa
outsb
xor
inc
daa
scas
mov
lcall
out
xorl
arpl
mov
clc
out
std
cli
inc
push
sbb
jg
popa
movsl
out
push
push
call
mov
mov
pop
or
xlat
jl
dec
and
cmp
or
test
sbb
sbb
aad
inc
fwait
inc
ljmp
cmpsb
inc
in
adc
mov
mov
xlat
pop
mov
repz
jno
dec
mov
xchg
cmp
insl
cmp
and
daa
icebp
mov
les
mov
push
aaa
in
hlt
xchg
cmp
inc
rcrl
sti
add
icebp
aad
xchg
insb
cltd
dec
dec
inc
leave
sbb
lea
cld
jg
add
leave
adc
xor
aas
lret
fucomip
divb
icebp
bound
test
mov
ss
push
outsb
sub
aaa
mov
jae
test
xlat
in
and
in
les
fcmovu
stos
iret
pop
cmp
sti
jbe
sbb
das
es
outsl
mov
int
fwait
or
mov
sub
dec
cmpsl
movsl
ja
push
mov
inc
jmp
dec
test
xor
mov
ret
lock
cmp
test
fld
adc
pop
fstpt
xor
scas
cltd
sbb
xor
gs
add
addr16
push
divl
and
stos
dec
shll
ja
mov
adc
sbb
or
mov
filds
sub
popa
cmp
inc
or
add
stos
inc
xor
inc
fldcw
lcall
movb
fpatan
lahf
mov
fs
in
push
clc
mov
push
cmp
in
ja
cmp
add
mov
in
inc
mov
ret
sbb
adc
xorl
inc
test
mov
clc
sbb
sbb
jb
cmp
mov
cld
mov
fisttpl
cmc
sub
leave
xchg
dec
gs
xor
sub
imull
mov
test
cmp
pusha
jne
xor
mov
test
fwait
ljmp
sti
sub
out
xchg
outsb
inc
je
es
rcl
sub
daa
cli
add
inc
mov
jbe
popf
and
mov
mov
fstpl
shll
inc
int3
mov
nop
or
pop
pop
cmpsb
mov
cmp
dec
loop
shl
adc
sub
insb
and
inc
inc
shll
jnp
jl
jg
xor
popf
push
ja
daa
mov
mov
mov
subb
push
test
lods
mov
pop
jle
les
and
mov
sub
cs
mov
les
idiv
and
out
push
out
cmpb
lcall
movsb
cmpb
ljmp
sbb
adc
push
push
xor
rcrb
sbb
mov
das
sub
adc
outsb
roll
cmpl
stos
push
repz
mov
stos
sub
cmp
fucomi
pop
call
xor
cmp
xor
testb
mov
dec
jne
lods
lret
xlat
xchg
repz
mov
sbbb
xchg
out
fsubs
cmp
fistpll
jp
fs
les
ljmp
adc
mov
sub
inc
push
test
dec
popf
mov
mov
iret
cmp
mov
mov
dec
in
ss
faddl
or
and
jp
xchg
push
movsb
xor
jbe
insl
repnz
add
add
xchg
mov
push
lods
loope
rcrb
ret
das
fs
fwait
adc
and
sbb
mov
jae
pop
and
fsubs
push
mov
jne
push
mov
repnz
mov
shll
hlt
xchg
push
scas
bound
ja
mov
or
cmp
aaa
test
mov
fidivrl
cmc
dec
and
push
fs
loope
mov
xchg
push
add
and
push
fcoms
lods
imul
lea
mov
mov
js
xor
jp
inc
inc
inc
inc
jnp
add
mov
insl
and
in
mov
sbb
push
cmpsb
push
gs
add
pushf
push
pop
push
or
add
movsl
ljmp
shrb
add
adc
lds
dec
stos
loope
fsubrs
out
imul
fwait
ret
stc
add
dec
cltd
cmpsl
sub
outsl
sub
xchg
fidivrs
lods
fstpl
jno
push
fcoms
leave
dec
ja
pop
lret
lock
pushf
rol
push
jnp
mov
mov
and
xchg
js
mov
push
int3
das
ljmp
repnz
xchg
jne
punpckhdq
out
lock
ror
call
xchg
mov
sub
adc
mov
mov
lahf
or
movl
test
orb
outsl
outsb
ret
add
out
mov
xlat
ret
inc
pop
test
inc
insl
mov
das
pop
in
andb
je
xchg
in
aaa
pop
es
orl
fucom
and
sub
cwtl
iret
insb
cld
arpl
dec
inc
sub
fwait
testb
push
jbe
adc
sbb
hlt
mul
outsb
stc
jg
and
addr16
pop
inc
insb
std
loopw
inc
xorb
negb
sub
loop
add
lcall
jae
pop
cmpsb
mov
xor
sub
push
lods
mov
ss
fbld
lret
mov
cltd
insl
cs
in
adc
mov
xor
cmpb
lahf
mov
mov
call
mov
js
push
or
cltd
pop
mov
adc
sub
loope
jecxz
out
pop
inc
jp
addr16
fimull
xor
cmpl
hlt
adc
pop
fstpt
or
int
in
mov
pop
imul
nop
add
pop
jp
scas
gs
sub
cmp
js
mov
insb
sti
mov
sub
ja
sbb
xchg
adc
les
imulb
mov
fcomps
mov
popa
hlt
add
lds
jmp
cmpsb
or
lods
inc
cmp
jmp
lea
jae
mov
movsb
mov
xchg
cmpsl
add
iret
sub
loopne
daa
cli
mov
stos
ret
lcall
lds
hlt
nop
fidivl
cmp
leave
mov
out
pushf
mov
out
lea
test
cmpsb
dec
pop
les
xchg
jle
out
mov
addr16
cltd
imul
cmpl
pop
notb
mov
cmpb
dec
xchg
lahf
add
in
sbb
imul
push
lock
inc
xchg
push
sti
test
popa
imul
lea
xor
xor
mov
jl
xchg
repz
pop
add
mov
or
popa
mov
mov
jg
xchg
enter
arpl
js
dec
ss
int
pop
dec
mov
inc
enter
pop
mov
xchg
imul
cli
repnz
in
xor
sbb
sbbb
add
and
imul
mov
jbe
push
add
add
lock
stos
fwait
push
or
out
add
xlat
sti
roll
fidivrl
lds
mov
xchg
inc
ret
test
test
and
xchg
sahf
mov
fistpl
sbb
out
sbb
ds
popf
adc
enter
inc
iret
inc
je
fcomi
adc
sbb
sub
andl
jle
pop
test
data16
mov
inc
inc
pop
or
mov
fwait
movl
gs
or
ret
xor
or
mov
mov
lods
add
test
xchg
popf
roll
inc
ja
cmp
pop
in
push
or
sub
push
lret
int3
call
dec
scas
out
mov
popf
mov
xchg
mov
adc
test
push
scas
add
adc
jp
data16
mov
or
jnp
call
mov
mov
es
inc
ret
jb
test
xchg
and
jno
push
xor
add
aad
jg
xchg
push
pop
inc
push
jp
addr16
and
sub
out
pop
es
inc
loopne
cmp
js,pn
ja
daa
xchg
add
ja
mov
into
xorb
movsl
push
jl
or
mov
pop
mov
mov
or
jo,pn
mov
ss
int
js
hlt
lea
inc
in
pop
mov
pushf
cld
mov
and
outsl
add
inc
lods
data16
cltd
mov
stc
or
lds
or
dec
movsb
insb
dec
repnz
and
mov
cmp
push
add
sbb
mov
loopne
es
push
cmp
stos
shrl
mov
mov
pop
fwait
mov
jg
xor
sbb
push
cmp
mov
inc
inc
ds
in
pop
mov
loopne
outsl
or
bound
adc
mov
fstps
mov
adc
nop
sbb
mov
cmp
test
inc
lcall
mov
xchg
outsl
outsl
inc
mull
mov
nop
imul
cmp
cmp
loop
and
daa
xorl
push
inc
icebp
dec
xchg
and
adc
imul
movsl
mov
push
sarb
fbld
mov
push
mov
movl
sub
arpl
sbb
cld
enter
jge
data16
push
in
stc
lret
scas
flds
popa
cltd
jmp
mov
lods
pop
in
lahf
add
sbb
faddl
and
xchg
add
jecxz
add
test
pop
dec
lds
or
or
inc
rolb
jne
subl
popl
int
add
sbb
mov
movsb
pop
mov
popaw
arpl
lock
cmp
jnp
mov
xchg
push
mov
fwait
int3
adc
adc
pushf
xor
add
or
and
push
cmp
inc
jae
xor
xchg
nop
cs
pop
mov
fcmovne
and
mov
jb
cmc
inc
data16
mov
mov
mov
out
fstps
xor
xor
add
inc
ja
leave
and
lret
push
fidivs
cmpsl
sub
daa
loop
push
movsl
movsb
lret
cmp
movsl
push
cmp
xchg
or
mov
sbb
gs
outsl
pop
cmp
sub
jp
clc
xchg
movsl
jmp
pop
outsb
cmc
aas
testb
mov
nop
mov
call
lcall
stc
fadd
stc
dec
std
addl
xor
push
movsb
mov
cmp
mov
cmpsb
push
fs
dec
daa
xor
out
stc
fsts
cs
mov
mov
jge
imul
xchg
lds
sub
pop
xor
inc
mov
xchg
movd
fs
xlat
lods
shl
lahf
fistpl
and
addr16
je
iret
cmp
mov
cmp
mov
pop
stos
movsb
xchg
lods
push
adc
add
sbb
push
dec
adc
sbb
in
pop
mov
les
mov
sbb
lret
xchg
jns
or
subb
sbb
push
jns
jl
in
pop
icebp
mov
lods
fstps
or
inc
xchg
dec
inc
pushf
int3
inc
call
aad
fbstp
fst
push
iret
adc
leave
or
inc
sbb
into
movsl
or
mov
or
rcll
sub
loop
mov
dec
push
cld
jecxz
sub
aad
jae
rcrb
and
loop
test
in
std
lret
mov
pop
push
mov
mov
pusha
ret
cmpsb
add
inc
adc
lret
ret
push
fcomps
testb
add
ffree
cmp
repz
andps
pop
pop
scas
or
ja
xlat
bound
mov
xchg
push
xor
dec
sbbb
mov
dec
pop
cmp
xor
jne
adc
shrl
mov
push
sbb
push
push
int
lods
mov
push
cmp
jl
fisubrl
ljmp
or
adc
imul
outsb
jg
cmpsb
mov
addr16
sub
and
cmc
jae
mov
mov
fcoml
pop
adc
in
push
jp
jge
leave
cli
out
int3
mov
es
ljmp
jmp
add
push
or
sbb
jbe
mov
or
pop
loope
in
add
and
fdivs
gs
enter
popa
push
stos
xor
push
jnp
and
repnz
lret
adc
pushf
test
mov
xchg
test
pop
out
fisubrs
pushf
sub
mov
in
test
int3
xchg
push
jecxz
fadds
add
xor
cmp
or
subl
loopne
xchg
in
faddl
cwtl
clc
xor
inc
and
cmpsl
stos
mov
or
lret
xor
mov
mov
dec
adc
cs
xchg
scas
rcr
push
jl
jno
aam
cld
push
shrl
inc
push
add
out
or
testl
xchg
inc
and
in
mov
jle
cmpsb
sar
test
xchg
pop
fwait
xor
adc
cmpsb
inc
jb
cmp
or
add
jb
decl
mov
add
push
pop
push
das
mov
xchg
arpl
mov
adc
pop
mov
lret
mov
imul
sub
in
cld
xor
scas
adc
bound
rdtsc
in
sub
push
and
lock
push
and
mov
movsb
inc
xchg
pushf
sbb
pop
or
xchg
shll
lods
mov
out
inc
dec
mov
aam
push
xchg
out
rcrl
mov
or
sbb
sub
pop
test
test
lret
cmp
dec
lods
or
loopne
inc
fimull
rcll
xor
add
sarl
sbb
or
insl
lahf
inc
sbb
cmp
nop
sub
mov
sub
fimull
mov
adc
add
lahf
jmp
sub
adc
jmp
mov
push
pop
cmp
nop
push
adc
add
ss
jge
adc
dec
arpl
push
stos
mov
testl
orb
push
daa
sub
xor
dec
loope
mov
or
fisubrs
cmp
or
add
mov
dec
cli
lea
mov
cld
mov
sbb
push
or
inc
lods
sub
call
xchg
mov
movsb
jae
push
jl
push
gs
in
mov
je
pop
mov
movsl
inc
push
fadds
cmp
test
pop
pop
mov
dec
add
mov
inc
repnz
push
sub
clc
dec
leave
test
and
fsubs
sti
ret
movsb
or
aas
push
sub
jmp
fdivl
shll
and
rcrl
ljmp
xor
cmp
mov
jne
jae
rolb
dec
mov
test
sub
ja
cmp
jecxz
addr16
mov
and
mov
or
push
mov
outsl
cmpsb
jge
out
sbb
add
scas
ljmp
cmp
adc
push
xchg
push
jns
jns
pop
sbb
dec
mov
mov
sahf
cmpsl
xor
test
loop
add
mov
pop
sub
sbb
jmp
sbb
loop
xchg
jnp
fbstp
outsl
mov
cli
mov
mov
xor
pushf
imul
scas
mov
jnp
cli
xor
in
out
or
into
xchg
xorl
test
jo
pop
pop
es
pop
mov
and
lret
xchg
std
pop
ds
rcrl
inc
aaa
out
in
add
iret
inc
incb
nop
stos
add
or
adc
sbbl
pop
pop
loop
jbe
pop
or
mov
ret
add
sub
or
or
adc
mov
incl
push
add
insl
aam
hlt
in
cltd
enter
hlt
mov
pop
loope
cmc
out
aaa
outsb
sub
ret
mov
mull
enter
mov
mov
stc
cs
dec
lea
and
out
sub
mov
repz
push
stos
icebp
add
into
adc
jecxz
insb
std
int3
sbb
dec
mov
and
outsl
movsb
mov
js
cmp
shll
arpl
test
adc
push
add
jns
clc
mov
cmp
test
and
ja
adc
into
popa
xchg
xchg
dec
xchg
lea
in
xchg
mov
out
sahf
cmp
dec
inc
jl
cs
push
out
pop
into
out
aas
dec
xchg
dec
lcall
movsb
jb
mov
xor
pushf
or
push
add
mov
js
push
lock
sti
das
mov
lea
or
jp
out
pop
call
loop
cmc
cli
and
leave
shrb
shl
aam
cmpsl
xor
stos
push
cmp
lahf
ret
add
out
hlt
sub
jb
aad
mov
jg
mov
out
inc
add
jbe
sub
inc
subb
js
shlb
mov
push
inc
sub
jnp
cmp
pop
sub
or
rorb
call
mov
in
dec
rcrb
test
pop
pushf
xchg
fwait
and
stc
inc
ret
lahf
or
dec
xchg
pop
mulb
cltd
pop
mov
push
lret
mov
cmp
in
test
mov
jl
les
xchg
adc
and
icebp
aaa
and
sub
adc
cmpb
jae
ss
sbb
xchg
pop
xor
xchg
pop
je
jmp
gs
pop
sub
repnz
in
pop
push
pop
cwtl
cmp
arpl
int3
dec
clc
mov
clc
adc
push
sti
xchg
jo
pop
inc
mov
cmp
in
in
push
and
popf
popa
pop
mov
mov
cmpsb
xchg
push
sahf
mov
aas
stos
insl
push
dec
bound
inc
push
clc
sbb
mov
cmp
loope
adc
adc
stos
sti
xor
mov
ror
rorb
jg
inc
test
cmp
orb
and
jbe
and
insb
xchg
xchg
cli
xor
out
test
xchg
cmp
dec
mov
xlat
mov
add
inc
jge
fucomi
into
pop
inc
lret
scas
pushf
cmpb
and
fcmove
fs
pop
or
push
jge
aas
and
lock
sbb
lds
lock
pop
outsb
call
mov
mov
shl
adcl
ret
jb
pop
xorl
xchg
inc
jnp
mov
mov
popa
lcall
in
adc
mov
les
inc
mov
sahf
outsb
jge
aam
lahf
out
adc
jb
sub
adc
mov
fdivp
inc
sbb
insb
lods
mov
adc
jl
mov
imul
test
shrb
add
data16
adc
repz
adc
cmp
aas
lds
cld
mov
stos
inc
push
dec
ljmp
dec
mov
mov
cmp
push
js
inc
sahf
jp
dec
fnsave
cmp
dec
xchg
into
lods
jle
mov
add
cmpsb
mov
cmp
pusha
xchg
aaa
jmp
test
fists
xor
cmpl
add
xchg
inc
addl
inc
repnz
xor
push
mov
aad
mov
sub
push
sbb
std
lea
add
scas
sbb
lret
or
push
adc
clc
mov
imul
jge
cmp
xchg
pop
and
lcall
mov
test
test
xor
test
inc
mov
fwait
repz
pop
fnstenv
mov
jge
dec
fldenv
sbb
cs
gs
jb
mov
push
imul
adc
jno
icebp
ljmp
ret
sbb
dec
scas
loopne
sub
std
jb
repnz
shlb
dec
jp
es
sbb
mov
push
rcrl
bound
movq
sbb
cwtl
push
jns
push
or
sahf
inc
cmp
and
pop
jns
sbb
mov
sahf
mov
cmp
cli
pop
pop
adc
push
arpl
inc
in
sbb
mov
fs
mov
or
dec
mov
loope
dec
dec
adc
inc
repz
sub
fwait
lret
roll
push
xchg
and
mov
int3
scas
mov
fcomps
movsl
inc
dec
insl
push
inc
inc
cs
and
outsl
xchg
int3
mov
test
arpl
mov
xchg
and
es
push
cmp
or
add
cmp
movsl
cmp
ss
aaa
shlb
xchg
jbe
xor
lds
into
aaa
sbb
push
push
push
dec
add
out
les
jg
inc
out
or
in
aas
out
ret
adc
call
mov
das
mov
jl
ror
inc
in
mov
into
stos
clc
jbe
xchg
mov
mov
and
jns
xor
push
movsb
cmp
mov
xor
inc
sbb
jecxz
mov
ds
cmpsl
shrb
ret
out
sub
mov
jp
cltd
iret
xchg
scas
movsb
jbe
mov
dec
xchg
xchg
adc
sub
shl
and
in
or
cmp
mov
mov
jno
dec
lcall
xor
add
push
jge
jnp
jbe
mov
xchg
fidivrs
aad
lock
and
nop
mov
pushf
jnp
movsb
bound
outsl
imul
and
arpl
into
aaa
jge
xchg
jmp
sub
aas
fs
es
and
ss
pushf
jecxz
ja
and
jnp
pop
inc
xor
fildl
fwait
loop
int
inc
scas
sti
sub
xchg
adc
xchg
and
mov
gs
test
popa
dec
cltd
push
lret
xchg
sahf
mov
out
sbb
jb
jns
jmp
jmp
or
enter
mov
das
xchg
xchg
inc
es
arpl
fiaddl
imul
push
dec
push
xchg
repz
call
test
repnz
pop
adc
and
add
inc
add
int3
out
xor
iret
pop
test
or
cmpb
mov
aam
stos
add
out
jecxz
mov
ss
loop
icebp
inc
push
jb
stos
mov
test
push
mov
aas
addr16
adc
dec
popa
jae
imul
es
cmp
shlb
sub
popf
movsl
out
inc
cwtl
xchg
mov
xchg
and
scas
popa
jne
jns
mov
xor
dec
pop
push
and
push
dec
inc
daa
test
fldt
push
cmp
push
ficompl
roll
pop
dec
stc
jmp
mov
loopne
sbbb
push
out
inc
out
cmc
lock
adc
cwtl
push
xor
std
adc
das
outsl
mov
adc
push
inc
sbb
les
es
ficoml
in
scas
add
xchg
adc
ret
pop
lock
push
add
stos
ret
aam
pop
ffree
cmp
mov
push
ret
scas
inc
pop
push
sub
out
out
push
push
sub
pop
popa
dec
dec
pop
push
test
jno
daa
push
lods
scas
incl
add
sub
in
push
push
mov
inc
or
sub
or
jg
bound
xor
lock
xor
mov
clc
les
testb
insl
sub
mov
cmpsb
add
push
jbe
jle
fbld
mov
ficomps
shl
mov
xor
sbb
or
push
in
not
mov
sub
push
lock
push
and
inc
add
and
loope
and
cmp
and
sbb
mov
jp
clc
flds
inc
mov
mov
xor
lock
mov
movsl
and
push
les
mov
xchg
mov
push
push
pusha
cmp
scas
jmp
test
mov
ljmp
inc
or
xchg
lret
or
inc
and
adc
shl
mov
jge
push
xor
aaa
dec
mov
in
stos
addr16
pop
nop
fstp
or
xchg
adc
sub
test
sub
mov
cmp
dec
cs
sarl
jp
dec
add
ret
push
inc
push
jns
xor
fldl
dec
jl
jae
adc
es
or
das
and
scas
dec
iret
dec
mov
rep
mov
sub
mov
fwait
lret
imul
pop
daa
lcall
push
jbe
jo
dec
in
fucomip
cmc
mov
insl
sub
inc
cmp
lret
add
fwait
push
xor
cmp
stos
xchg
mov
nop
mov
dec
inc
into
leave
lds
push
jecxz
out
popa
jmp
adc
das
xchg
mov
es
pop
push
fistpl
scas
sub
int
sbb
movsl
jns
dec
ret
test
aam
xor
pop
or
xchg
ret
stos
jg
ret
xor
fisttps
sbb
test
push
push
mov
fisttps
jbe
pushf
inc
cmc
pop
punpckhbw
or
cmp
out
sar
arpl
aaa
std
cmp
mov
xor
clc
fnsave
pop
leave
or
mov
mov
popa
mov
cmpsb
sahf
push
inc
inc
sub
in
mov
mov
pop
xlat
lds
icebp
lret
mov
add
je
push
add
add
dec
out
mov
daa
and
enter
out
push
mov
and
outsb
loopne
sbb
fildl
shll
in
push
or
push
jmp
add
push
stos
inc
fidivs
adc
cli
icebp
push
nop
fs
inc
cmp
pop
dec
jnp
repz
out
pop
pop
lret
xchg
sbb
sbb
cmp
in
sub
pop
xchg
rorb
xor
add
sbb
add
sbb
lret
inc
adc
cmp
cmpsl
mov
pop
jmp
push
std
mov
xor
mov
call
out
les
mov
outsb
jne
sbbl
dec
lock
sub
les
push
je
loopne
adc
jne
lods
adc
nop
rol
mov
jg
in
stos
arpl
push
mov
xchg
inc
loop
cmpsb
dec
ss
je
mov
inc
jecxz
pusha
jle
or
sti
push
cmp
push
bound
dec
jo
les
cmc
inc
out
fcmovnbe
mov
int3
mov
stos
iret
in
sbb
jno
mov
sub
popa
or
xor
or
ss
stc
out
mov
sub
or
ja
xor
cmpsb
jb
or
xlat
xchg
icebp
pop
sti
lock
mov
mov
cmpsb
icebp
aad
xor
fwait
test
sbb
outsb
cmp
aad
dec
in
xlat
das
jbe
and
scas
jecxz
outsb
xor
stos
scas
mov
dec
pop
loope
add
add
out
testb
decl
xchg
insb
mov
and
leave
test
addb
insb
mov
adc
ror
jo
loop
insb
test
std
in
and
dec
adc
inc
jle
jmp
fbstp
outsb
mov
iret
daa
mov
out
adc
dec
and
inc
arpl
adc
std
xchg
repz
push
mov
test
add
out
push
out
stos
mov
ljmp
inc
cli
mov
inc
imul
inc
popa
adc
cmp
orb
int3
or
push
insl
inc
mov
mov
xchg
jle
pop
sbb
mov
jl
stos
movsl
cld
and
dec
jno
and
loope
inc
jge
dec
jge
inc
subl
dec
jo
shll
pop
pop
inc
shll
aaa
andnps
push
sub
repz
cmp
das
pop
sub
lret
push
sarl
in
xchg
pop
cld
cmc
lahf
out
xor
cmpsb
jb
fwait
or
paddusb
xchg
xor
sti
cmpsl
sub
mov
sbb
pop
fldenv
mov
aaa
add
out
fwait
cmp
aam
fdivrp
cli
push
into
pop
sub
push
mov
ret
icebp
inc
js
aas
aaa
sub
adc
and
test
fldcw
lcall
nop
stc
mov
loope
daa
popa
mov
flds
dec
test
cs
shr
clc
adc
sahf
mov
pop
and
adc
sub
mov
and
dec
inc
add
or
data16
dec
mov
les
xor
dec
push
mov
jae
mov
bound
es
adc
lea
test
jge
ss
int
push
aad
and
push
inc
int
or
push
daa
mov
mov
int
inc
cld
push
dec
mov
jne
out
setl
adc
repnz
loop
cmpsl
in
dec
enter
xor
rcrb
std
imul
in
mov
pop
or
fsubrl
iret
mov
cmp
sahf
mov
icebp
in
mov
arpl
add
ret
xchg
fsub
xlat
push
mov
push
fcmovbe
sbb
mov
mov
push
addr16
add
xchg
inc
or
fistpll
mov
push
ja
and
div
xchg
add
push
popf
inc
mov
cltd
lds
and
gs
sarl
add
mov
push
sarb
dec
test
scas
jle
dec
dec
inc
inc
outsb
mov
ja
daa
inc
or
push
inc
pop
pop
test
test
mov
pop
aaa
aaa
dec
cwtl
dec
jb
lret
or
sbb
jecxz
sub
jo
insl
nop
jl
inc
lahf
xchg
xchg
aas
adc
jg
adc
outsl
push
jbe
mov
insl
sahf
push
push
ret
add
jnp
adc
decl
movsl
ljmp
pop
daa
fldt
mov
and
pop
mov
mov
shlb
jnp
dec
out
sub
dec
xchg
or
sahf
xchg
jle
or
or
mov
es
or
jecxz
cmpsb
push
xlat
mov
or
fdivrl
test
sbbl
bound
xor
cld
imulb
push
jo
cltd
dec
mov
enter
sar
xlat
ljmp
mov
fidivrl
movsl
sub
rcll
pushf
xchg
sub
mov
leave
scas
clc
nop
push
fwait
mov
das
mov
test
push
mov
leave
inc
bound
xchg
daa
int
jb
jb
out
imul
mov
jbe
addr16
mov
ja,pn
flds
dec
aad
aaa
jne
adc
and
imul
mov
ja
ja
aas
lods
aaa
ffreep
stos
pop
out
aam
cld
push
sti
sub
shl
fcoml
dec
ret
lock
call
dec
int3
gs
out
dec
fcomps
jno
data16
mov
xor
inc
in
sbb
cmp
ror
and
cmp
mov
scas
push
mov
sbbl
pop
dec
pop
pop
push
cmc
into
dec
imul
adc
xlat
clflush
lea
jb
das
push
add
dec
and
add
inc
ljmp
andl
mov
or
leave
or
cld
gs
pop
dec
cmp
mov
sub
scas
sbb
imul
leave
pop
xor
cmc
mov
add
fisubs
pop
jmp
mov
xor
stos
dec
pop
push
fdivp
or
mov
lods
pop
ja
or
test
jnp
sbb
mov
scas
jmp
mov
pop
aas
mov
sar
in
rcr
and
imul
push
mov
aam
and
pop
xchg
cmp
cmpsl
dec
mov
das
pop
mov
sub
int3
ja
repz
bnd
mov
cmp
outsb
arpl
sub
aam
jns
push
xchg
frstor
sub
jbe
cmp
lret
test
push
aam
lods
outsl
xlat
data16
cli
aas
push
cmp
pop
fistl
or
popa
dec
mov
out
movsb
fidivrs
into
fsts
push
clc
xor
or
sti
sbb
arpl
clc
jl
jp,pt
xor
sbb
dec
sti
in
jo
dec
and
je
mov
out
dec
xor
mov
std
test
dec
aas
jbe
fldcw
xlat
or
push
sbb
mov
sahf
ret
sub
ljmp
inc
adc
icebp
hlt
sub
pop
and
sbb
in
xchg
mov
xchg
push
sbb
or
push
cmp
rcll
lock
stos
into
push
pushf
add
push
mov
sahf
xor
push
mov
cltd
pop
or
je
push
add
inc
pop
or
push
cmp
std
aaa
pusha
pop
ljmp
add
negb
inc
sub
jecxz
mov
adc
dec
mov
mov
push
and
mov
fdivrl
jmp
add
arpl
mov
sbb
xchg
push
pop
fst
outsb
dec
andb
cwtl
cmp
cmpsb
fmul
push
push
adc
inc
or
int
sti
ror
cwtl
pop
aas
pushf
dec
cmp
bound
mov
insb
mov
push
pop
dec
push
sbb
dec
std
mov
inc
inc
adc
inc
mov
inc
inc
pop
mov
adc
aas
inc
mov
je
push
leave
xchg
mov
add
gs
mov
adc
mov
sub
jb
sbb
jnp
cmpsl
andb
jae
mov
lret
push
jmp
jmp
jb
xor
add
clc
cwtl
add
stc
decl
outsl
add
lret
pushf
les
sbb
fiaddl
sbb
mov
rcll
shlb
jecxz
pop
movsl
xchg
or
fs
clc
push
sub
aaa
xor
push
xor
ljmp
dec
sbb
xor
fcmovnbe
scas
cs
mov
arpl
fldt
add
add
lret
or
xchg
inc
xor
leave
shll
shl
sahf
call
mov
imul
cmp
or
bound
flds
lods
pop
icebp
stos
jmp
inc
shlb
data16
add
push
paddsb
loopne
pop
push
inc
push
jmp
loopne
mov
dec
repz
push
xchg
inc
dec
mov
mov
shrl
or
pop
loop
rol
fistps
and
andl
subb
mov
cli
cmp
out
data16
mov
dec
or
notb
iret
sbb
test
jns
mov
repz
lret
hlt
ret
push
jle
inc
sbb
inc
popf
xchg
sub
cmpsl
orb
cmp
add
xchg
jne
test
xchg
push
mov
test
cmp
push
jp
or
idiv
movsb
cmp
push
pop
ja
aaa
repnz
lret
mov
out
sbb
jo
sahf
mov
xchg
aas
mov
loope
sbb
out
add
push
xor
jne
add
dec
push
addb
lds
or
jnp
cmp
jne
adc
les
les
arpl
dec
fcmovb
fcmovnb
add
aaa
stos
xchg
enter
fiadds
adc
pop
dec
lret
inc
add
dec
add
popa
or
inc
push
test
jo
pop
push
sbb
pop
movsb
mov
loop
xchg
or
push
adc
sbb
cmp
call
loopne
pusha
ss
jp
test
jnp
lcall
nop
adc
arpl
orb
fistl
into
jb
mov
into
arpl
jb
fnstcw
jmp
sub
xchg
xor
dec
jne
pop
int
xor
lret
clc
push
in
adc
fs
loopne
les
decl
jne
mov
sub
in
mov
mov
fstps
mov
je
rcrl
sahf
cwtl
int
inc
mov
mov
jb
adc
mov
dec
push
xor
icebp
fdivl
dec
stc
inc
sub
and
adc
ljmp
outsb
test
fidivl
pop
imul
add
sbb
xorb
inc
xor
repnz
dec
mov
addb
sub
cld
aaa
mov
movl
pop
clc
push
int
fsts
pop
mov
pop
adc
cmc
pop
cmpsb
and
jae
hlt
cmp
gs
dec
cli
ds
xchg
xchg
je
inc
sti
inc
adc
xchg
push
ja
push
jne
daa
lea
adc
cmp
loopne
std
push
out
fsubl
fsub
pop
jp
or
fdiv
sub
inc
jp
xchg
xchg
lods
outsl
xor
movsl
xchg
xor
gs
mov
push
lock
add
sub
aaa
shl
mov
push
pop
andl
cld
inc
pop
push
pop
outsl
jns
iret
dec
gs
aad
push
dec
dec
shll
fists
ds
outsb
and
cli
adc
mov
jl
cmp
fld
in
out
inc
loopne
les
iret
sbb
ja
dec
and
les
idivl
fildl
call
int3
pop
mov
push
inc
rol
je
adc
pop
add
mov
test
test
fildll
test
inc
repz
xchg
push
lea
fidivs
sub
lret
adc
in
jge
inc
in
icebp
xor
mov
add
adc
jnp
movsb
lret
mov
pop
inc
out
push
test
icebp
mov
imul
jb
aaa
les
les
lock
inc
pcmpgtb
leave
lods
roll
adc
fs
jo
fmul
ret
lcall
mov
push
std
sbb
rcrb
test
inc
pop
imul
lods
int3
mov
in
jecxz
dec
cmp
daa
jnp
mov
adc
cwtl
push
rorb
push
inc
add
xchg
push
pusha
shrb
and
push
test
lods
jb
jg
or
xlat
mov
mov
dec
rcll
aaa
testl
test
pop
mov
fincstp
fwait
pop
jge
xchg
inc
push
jp
mov
pusha
sahf
push
xor
int3
sti
push
dec
add
add
or
cli
cmc
push
xor
je
ds
and
sti
test
jp
push
push
std
dec
push
addr16
xor
mov
lods
mov
cli
test
mov
xchg
hlt
imul
repnz
jecxz
and
into
pop
mov
loopne
or
xor
arpl
sbb
xlat
inc
xchg
sub
bound
scas
iret
out
sub
inc
inc
pop
dec
or
cltd
mov
mov
mov
into
or
das
dec
sbb
and
pusha
cmp
lods
xor
jp
scas
and
mov
push
imul
mov
ret
int
aas
scas
xchg
jbe
movsb
loopne
testb
adc
in
in
jmp
movsl
dec
ljmp
mov
mov
outsb
push
mov
mov
sahf
pop
inc
pop
pop
mov
inc
mov
cmp
je
subb
dec
mov
xor
pop
lret
scas
jo
adc
mov
ret
in
push
movsl
and
and
fwait
mov
jae
lcall
aad
call
mov
sub
les
cmp
repz
mov
cmpsl
or
mov
orb
mov
mov
fcomps
mov
jl
mov
call
mov
jo,pt
mov
clc
dec
cmp
dec
jbe
fstpl
int
fnsave
sbb
cmp
mov
mov
stos
jae
aad
stos
fmuls
scas
stc
pop
insl
xchg
sbb
std
addr16
fidivl
add
cmpsb
test
push
ds
inc
out
sub
stos
cmp
dec
mov
jb
dec
xchg
in
cltd
cmpl
mov
rcrb
xor
xor
add
lret
xchg
jne
cmp
mov
sub
pop
stc
push
pop
fstpl
call
mov
leave
mov
fwait
and
mov
ds
xor
fldenv
adc
loop
adc
sub
andl
xchg
xchg
mov
loope
xor
jp
pop
sub
or
stc
out
adc
test
xor
lret
imul
jmp
adc
fcoms
mov
repz
cmp
inc
pop
xchg
fsubl
imul
test
cli
stc
jns
adc
xchg
jle
adc
dec
scas
xor
sbb
out
mov
push
pop
ret
insl
sub
neg
icebp
mov
jmp
adc
sub
xor
mov
inc
popa
cmp
xchg
aad
and
xor
inc
mov
mov
jp
add
add
lret
sahf
push
movsbl
insl
popa
jmp
jmp
pop
sub
jl
rclw
sub
xor
inc
adc
xorb
fwait
aad
test
mov
xor
lret
xorb
mov
xor
sub
cmp
xchg
pop
inc
cmp
daa
cmpsb
add
mov
xchg
stos
pop
pop
xchg
mov
push
scas
or
or
lcall
movsb
lods
int
addr16
add
bound
lret
stc
sbb
and
fldenv
pop
xchg
cld
test
jne
icebp
lods
notb
ljmp
leave
call
cmp
xchg
pop
sub
in
inc
mov
outsb
jae
cwtl
test
dec
and
push
add
mov
loop
jg
rorl
pop
loopne
jg
jmp
xchg
pop
or
xchg
popa
mov
push
cmp
push
pop
stos
sub
jo
jmp
mov
and
lods
xor
rol
mov
sub
jp
push
add
aad
daa
cs
jno
js
fcmovne
inc
insl
jo
push
dec
sub
in
test
jl
sub
add
lret
push
and
or
mov
out
popa
cs
inc
mov
jo
fisubrl
cmp
roll
pop
push
jns
jo
data16
pop
and
insl
orl
or
pop
sub
xor
outsb
push
add
mov
mov
stos
or
mov
push
and
mov
pop
aas
adc
insl
mov
fimuls
push
adc
in
or
sbb
adc
stos
sbb
pinsrw
addr16
or
jbe
dec
inc
push
mov
or
lret
jbe
adc
sub
sbb
push
dec
lahf
push
pop
adc
and
mov
add
aad
mov
dec
push
popa
iret
or
fsub
xchg
popf
mov
adc
clc
out
mov
xor
lds
out
xchg
aam
int3
cmpsl
inc
dec
hlt
inc
or
ret
mov
jbe
hlt
or
shr
sbb
stc
mov
pop
and
cwtl
xor
push
sbbl
mov
stc
and
inc
inc
or
jbe
mov
flds
cltd
loop
int
cmp
pop
fiaddl
scas
loopne
add
sbb
inc
sbb
sub
xor
repnz
stos
adc
fisttps
gs
nop
aam
jp
xchg
pop
dec
dec
shl
ja
cmc
xor
pop
push
adc
aas
sbb
ret
imul
lods
sub
add
clc
gs
ja
pusha
stos
lret
inc
adc
pop
lea
insl
insl
aas
lret
inc
stc
mov
pop
mov
jmp
je
dec
cli
rcll
into
mov
rorl
jb
cld
add
bound
pop
push
or
jge
insb
mov
mov
cmp
push
in
jb
data16
mov
pop
sbbb
lods
sbb
push
ljmp
mov
loop
sbb
xor
jge
repnz
mov
and
fbld
paddusw
sub
divb
xor
js
jmp
xlat
andl
testl
in
pop
jp
std
cmp
or
jns
flds
fmuls
mov
clc
je
sahf
mov
push
lods
inc
and
ficomps
les
fs
test
loopne
clc
jbe
xchg
leave
cmp
sub
mov
imul
push
sbb
fnsave
testb
cld
push
xchg
or
mov
or
xchg
adc
sbb
inc
jnp
xchg
stc
ja
lds
jle
rcl
js
ficompl
dec
iret
sub
adc
sbb
scas
add
lods
adc
xor
push
rcr
gs
mov
adc
ror
scas
mov
cmp
add
aas
in
xor
xor
lahf
mov
jmp
imul
cmpsl
dec
dec
cmpsb
and
xchg
cmp
dec
addl
push
xor
sti
mov
pushf
or
mov
dec
pop
jns
imul
ret
inc
xchg
pop
testl
jno
xor
push
nop
mov
movsb
test
or
inc
fs
mov
cmp
lds
hlt
xor
mov
mov
mov
je
xchg
mov
inc
in
add
pop
cmc
pusha
xchg
sub
enter
mov
inc
sbb
fsincos
sbb
pop
sbb
jb
sbb
in
push
aas
inc
and
push
cmc
xchg
sub
adcb
mov
je
dec
lret
repnz
mov
dec
dec
and
sub
or
testl
and
xchg
mov
inc
inc
lods
pop
and
push
ss
xchg
xor
sub
lcall
int
addr16
data16
and
sbb
push
test
in
cmc
add
mov
mov
pop
cmp
rorb
xchg
xor
shll
sub
mov
gs
or
jg
je
cmp
std
adc
rol
push
call
push
aas
push
dec
test
arpl
jmp
dec
and
data16
xchg
aam
mov
jmp
ret
xchg
cmp
sbb
sbb
cwtl
scas
mov
negl
rcrb
sub
lock
dec
movsl
bound
nop
fdivl
inc
lods
pop
inc
jl
xor
mov
es
data16
cltd
xchg
push
ret
xchg
mov
imulb
pop
cmp
arpl
outsl
pop
lds
xchg
mov
fdivl
lret
jnp
aas
int
jbe
out
aam
sbb
cs
stos
dec
dec
hlt
sub
sbb
lods
xchg
icebp
mov
jmp
mov
jg
mov
test
fdiv
ret
nop
push
mov
lea
cmp
lcall
xor
xchg
and
mov
adc
inc
roll
pop
cmpsl
into
mov
loope
sbb
stos
fidivs
stc
out
push
inc
adc
sub
bnd
insl
mov
imul
pop
mov
sbb
fmul
push
sbb
out
sub
js
mov
mov
int3
sarb
push
xchg
push
shlb
xlat
dec
outsb
out
gs
add
out
lret
inc
sub
mov
lock
sti
dec
ret
cltd
sub
daa
iret
repnz
mov
xchg
cs
out
jecxz
cmp
mov
pop
and
mov
cli
xchg
push
fidivrs
jnp
add
xchg
nop
ret
addr16
into
stos
push
adc
jno
add
cmp
lods
jge
mov
aas
loop
ror
ljmp
jge
xchg
lret
sub
sti
fdivrl
orb
add
andb
out
and
sbb
jp
adc
jnp
out
jo
mov
sti
test
inc
sbb
movsb
sub
aaa
xchg
jno
mov
ret
push
sub
dec
imul
div
das
mov
push
xor
in
xor
lahf
fisubs
sbb
sub
adc
insl
aaa
repz
push
hlt
push
push
mov
adc
mov
jecxz
fwait
xor
mov
dec
rcrb
cld
and
sub
test
jne
jno
xlat
cwtl
cmpsl
mov
mov
jae
inc
lods
mov
xor
fwait
or
mov
mov
loope
jle
dec
mov
dec
inc
aaa
stc
rorb
push
enter
cmp
sbb
outsb
data16
iret
cltd
out
jns
rclb
inc
add
jns
inc
mov
pop
xchg
dec
adc
mov
jno
and
jnp
xor
pop
insb
ret
add
mov
in
cmp
inc
mov
lahf
fistl
std
mov
xor
in
xchg
cltd
mov
sar
insb
and
and
sub
fistpl
xchg
data16
dec
loope
or
scas
insl
mov
push
ljmp
inc
mov
popf
mov
rcll
push
hlt
shrd
lods
push
loop
fcomi
jnp
add
pop
jbe
std
stos
cli
or
sti
push
jns
pop
lods
or
outsb
gs
clc
mov
outsl
sbb
mov
fadds
int
ljmp
ret
test
push
jg
xor
sub
je
mov
xchg
ljmp
popa
sbb
fs
jg
lcall
cmc
jmp
test
in
mov
cld
xchg
mov
and
inc
inc
decb
adc
mov
pop
orl
cs
je
add
es
inc
jmp
ret
inc
jg
cwtl
icebp
mov
jns
cmp
cmc
adc
mov
popl
dec
sahf
adc
add
mov
xor
inc
adc
outsb
jl
adc
call
pop
out
pusha
imul
dec
dec
mov
xchg
xchg
mov
fdiv
ja
or
js
sbb
fidivl
dec
and
mov
xchg
pop
mov
das
in
mov
mov
daa
mov
sub
into
stos
mov
test
add
sub
insb
mov
int3
mov
and
or
repz
inc
lods
xor
div
inc
test
mov
inc
loopne
mov
pop
mov
in
aaa
leave
cwtl
mov
insl
jg
xor
pop
bswap
or
scas
mov
test
in
sahf
jb
inc
mov
stos
ds
das
aas
sbb
mov
ja
cld
jle
jg
icebp
fistpl
fs
sub
sbb
mov
inc
roll
int
xor
outsb
xchg
push
xlat
lea
cmpsl
cmp
adc
sbb
cld
cli
cmp
or
pop
outsl
xor
mov
aad
in
mov
sbb
inc
push
adc
fstps
xchg
sti
push
mov
or
mov
in
xor
ret
cs
lods
fsts
and
aam
loop
loope
jne
jb
ja
cmp
push
leave
pop
rorb
int
jae
mov
sbb
xor
inc
mov
ds
or
cli
and
out
sti
lock
and
pop
xchg
pop
int3
popa
push
es
stos
xor
xchg
leave
jle
aam
sub
sub
adc
mov
and
xor
inc
xor
mov
pop
pop
lea
xor
jae
iret
arpl
adc
rol
cli
test
xchg
xor
gs
mov
cwtl
jle
xchg
adcb
push
mov
nop
int3
shll
inc
insl
aas
arpl
sbb
data16
xchg
inc
mov
ffreep
inc
xorb
sbb
test
mov
ds
andb
in
xchg
popw
mov
add
out
testb
sub
push
js
lds
xchg
loope
jno
pusha
push
push
or
mov
sub
push
inc
sbb
mov
push
sub
xor
aad
sbb
mov
adc
mov
xchg
out
and
int3
mov
das
je
loopne
mov
rorl
mov
or
mov
sti
push
jp
int
js
sub
andb
pop
lods
or
lods
aad
cmpsl
mov
cli
and
call
sbb
popa
insb
mov
inc
sub
push
mov
ffree
adc
mov
sti
inc
cmp
jl
jno
xchg
mov
clc
inc
fwait
or
out
daa
gs
jg
sahf
mov
sbb
shll
lcall
mov
popa
push
xor
sub
sarl
fistps
pusha
mov
fs
int3
jb
mov
out
push
outsl
add
cmp
mov
int
inc
xchg
jne
xchg
or
rolb
sub
or
jns
mov
fsubs
inc
inc
aas
jns
pop
lea
jle
lea
jmp
adc
fistpll
rolb
mov
pop
jge
inc
add
add
test
addr16
pop
or
out
jge
sahf
or
cmp
ret
ftst
ja
inc
dec
cmc
pop
sub
loope
lds
sub
aaa
std
jle
movsb
lret
xchg
movsl
jae
cmp
int3
fsub
fsubp
leave
push
addr16
fs
push
mov
out
dec
frstor
in
xchg
cmpsl
mull
and
lret
cld
orl
loopne
xchg
push
fstl
mov
dec
mov
ja
stos
std
das
stc
sub
add
push
movsl
jmp
jmp
xor
sbb
jae
mov
sub
stos
push
push
xchg
arpl
hlt
xchg
xchg
cmc
sub
lds
add
stos
popa
call
in
adc
scas
mov
and
add
and
sub
sub
mov
adc
and
push
fs
lds
dec
dec
ds
cmp
pop
mov
dec
sub
ja
xor
and
pop
dec
push
and
mov
xor
sbb
sar
add
cwtl
sub
cmc
or
dec
jge
xor
je
jnp
mov
out
ds
xor
bound
cmp
sbb
xchg
cmp
jns
xor
dec
cld
mov
pusha
mov
xchg
add
push
mov
add
push
mov
pop
fiaddl
dec
lds
dec
mov
mov
stos
negb
mov
loope
outsl
lods
inc
and
jge
xchg
cltd
add
je
xlat
ret
xchg
into
shrb
repz
fmuls
sbb
lods
lea
lcall
mov
push
mov
jl
xchg
dec
jne
or
icebp
xchg
in
mov
jecxz
vucomisd
loope
cmp
lods
mov
mov
dec
inc
push
xchg
cmp
mov
pop
push
mov
xor
loopne
sbb
xor
arpl
insb
outsb
jmp
jecxz
lahf
mov
sub
mov
mulb
xor
add
lods
fnsave
cmpps
insb
rcrl
ficoms
idivl
arpl
cmp
mov
mov
icebp
fistl
sub
push
xchg
stos
loop
sub
pop
mov
lahf
cmp
in
jmp
dec
xchg
test
mov
mov
imul
shll
pop
and
jo
rcrb
or
leave
nop
sbb
mov
mov
jge
rcll
in
pushl
testb
fists
mov
rcr
mov
lds
out
jbe
testb
inc
popf
rcll
lret
addr16
or
or
out
push
int
inc
mov
les
inc
push
mov
sbb
fidivrs
outsb
and
xor
scas
xlat
cmp
lds
out
pushf
leave
lret
push
add
in
push
loope
mov
fists
xor
cmpl
mov
fsubrs
fiaddl
sarb
push
hlt
dec
pop
ficoml
lods
loope
mov
push
jmp
dec
cmpl
dec
pushf
and
test
fsubrs
mov
mov
faddp
clc
inc
cltd
fsubrl
fsts
pop
sub
dec
aas
fildl
sarb
adc
popf
cmpsb
stc
cmc
fidivs
adc
std
push
jp
and
incb
cwtl
fimull
xchg
leave
adc
daa
aam
clc
mov
shll
xchg
lret
js
outsb
pop
mov
jb
sbb
cltd
jl
or
mov
push
dec
fcoms
pop
das
mov
xor
and
fwait
or
xor
pusha
icebp
and
dec
das
stos
sbb
pop
sbb
hlt
in
jno
or
lock
dec
notb
aaa
les
xor
mov
mov
shlb
test
and
push
or
imul
cli
cmpl
ljmp
push
xchg
or
mov
aad
movsb
jge
mov
xchg
inc
adc
dec
les
push
push
popf
aas
or
mov
out
sahf
imull
sbb
scas
and
insl
lret
xchg
outsb
es
jge
mov
or
loopne
rcl
sub
sub
adc
faddp
mov
add
mov
sbb
push
aad
push
mov
adc
test
xchg
nop
sbb
stos
jl
dec
pop
jae
insb
icebp
aaa
stos
cwtl
lret
ljmp
ss
jne
adc
cmp
xchg
fsubrs
inc
testl
jmp
and
scas
pop
pop
aam
cmp
repnz
mov
xchg
mov
pop
sub
sub
push
repz
jle
jg
fistps
adc
xor
sbb
daa
pusha
mov
rclb
cwtl
fisubrl
cltd
xor
incb
pushf
dec
push
lret
rol
mov
push
push
sbb
out
mov
or
jne
push
dec
mov
pushl
sbb
add
cmp
pmaddwd
mov
cs
scas
jne
call
dec
push
ret
scas
aad
jmp
rcl
fdivrs
and
pop
sub
sub
add
ja
inc
mov
cs
gs
in
cmpsl
iret
adc
ja
out
adc
lea
hlt
dec
mov
lcall
shll
inc
jb
dec
popa
cmp
imul
loopne
jnp
xchg
mov
xor
mov
xchg
in
push
daa
data16
or
dec
lods
mov
sbb
js
sbb
scas
fimuls
xlat
outsb
inc
cs
leave
pop
push
or
sbb
dec
and
les
pop
cmpsb
jmp
outsb
xchg
in
add
decl
rolb
in
xchg
or
imul
mov
movsb
lds
sub
subb
pop
mov
dec
loope
and
mov
and
mov
iret
or
cmp
dec
and
sub
cmpsb
inc
push
push
mov
pop
pop
sub
rol
push
dec
jecxz
lods
pop
lea
or
xlat
pop
out
movsb
fisttps
cmp
ret
jle
push
sbb
aam
repz
loope
sbb
les
repnz
cwtl
xchg
into
inc
nop
mov
jle
movsl
aam
popf
xor
push
lcall
int
es
nop
push
jnp
add
xchg
cmp
pop
and
mov
xor
je
mov
dec
ret
pop
popa
mov
adc
push
lods
push
int3
mov
shlb
cs
lret
je
xor
out
sbb
lods
es
push
mov
scas
aaa
rclb
inc
jae
or
shrl
loopne
mov
mov
jae
xchg
gs
jne
cmc
scas
jmp
inc
pop
aad
sub
test
faddl
and
mov
mov
rorb
sub
negb
push
jnp
inc
push
lods
ja
sub
ljmp
mov
popa
test
add
stos
test
mov
xor
scas
mov
xor
pop
push
push
sti
int
sbb
cmp
xchg
mov
sbb
sub
cmpsl
sbb
ret
sub
push
test
int3
or
adc
dec
cmovge
cs
popl
data16
dec
test
push
mov
sub
or
mov
push
popa
mov
jo
rcr
js
aaa
push
icebp
loope
inc
push
mov
cwtl
jl
mov
and
mov
or
lock
push
inc
pop
es
cmpsb
fcmove
out
xor
push
jge
icebp
cmp
int
fbstp
loop
fdivs
xchg
mov
push
sahf
fisubl
mov
mov
mov
push
fnsave
xor
iret
dec
inc
dec
xchg
out
sbb
mov
out
shl
shlb
fwait
outsl
sahf
loop
data16
loop
xchg
addb
dec
push
mov
inc
shll
cld
fimull
cltd
jbe
shlb
or
lret
xor
aas
addr16
stos
or
bound
arpl
inc
xchg
clc
pop
xor
mov
adc
jmp
es
bound
mov
mov
je
lods
mov
jb
jae
mov
movsb
movsb
aad
imul
mov
mov
jo
push
push
sbb
mov
gs
push
loopne
outsb
outsb
ljmp
dec
mov
cmp
push
or
out
and
and
jo
sub
sbb
push
arpl
fwait
stos
outsl
xchg
jge
arpl
or
lret
orb
mov
rol
imull
xchg
inc
mov
cli
dec
daa
cmp
pop
dec
mov
fwait
xchg
imul
lds
fisubs
jecxz
add
fidivrs
pop
stos
out
xor
add
fsubrl
negb
and
lcall
xlat
pushf
aad
rorl
sbb
xor
push
cli
lock
dec
gs
push
sub
mov
bound
cmp
repnz
scas
cmp
pop
sub
mov
mov
icebp
int3
mov
mov
adc
jmp
inc
js
syscall
jbe
loopne
add
imul
enter
xchg
jp
dec
pop
add
cmp
and
gs
cmpsl
mov
not
call
shll
mov
or
shl
lods
repz
mov
cmp
pop
jmp
lods
iret
loopne
or
in
mov
jge
mov
mov
mov
push
lods
imul
or
rcr
mov
or
cld
sub
jns
repz
test
ja
lret
cli
mov
fildl
jle
enter
rolb
rcl
dec
aad
pop
sbb
push
push
in
cmp
mov
in
ja
mov
xor
pop
push
dec
test
sbb
jo
pop
aas
jg
mov
mov
call
push
fwait
adc
sub
xlat
and
stc
das
mov
pushl
rorl
xlat
push
pop
bound
outsb
imull
cmp
cmpb
and
lock
mov
lock
pop
sub
and
lea
cmp
sti
iret
jecxz
cltd
cmc
leave
xchg
movb
jno
cmp
fwait
in
insl
and
aam
lods
cmp
push
jmp
cld
in
test
cmp
xchg
and
add
push
or
arpl
dec
or
fwait
mov
mov
mov
js
hlt
imul
mov
mov
scas
or
cmp
dec
shll
jns
icebp
in
inc
fidivrs
sub
or
shlb
xor
movsb
add
popa
xchg
mov
push
pop
sbb
popf
les
bound
aad
sub
xor
and
add
mov
out
mov
cmpsb
or
roll
loop
fsubl
or
push
es
outsl
shrb
mov
jae
inc
mov
jecxz
mov
mov
fwait
push
or
fwait
aam
push
popf
dec
cmp
lock
cwtl
sahf
mov
setno
push
insl
mov
add
xor
es
sbb
cmp
lock
mov
cmpsl
sbb
add
xchg
sub
xchg
xor
cmp
push
xor
inc
xor
ss
pop
mov
or
in
xchg
loop
scas
inc
adc
xchg
mov
test
out
sbb
pop
outsb
iret
lock
stc
test
shrl
vorps
mov
stos
faddl
mov
repnz
jecxz
int
out
sub
cltd
pop
loop
pop
jge
or
into
dec
sar
into
push
sysenter
cmpsb
mov
mov
mov
push
add
pop
push
cmpsl
cmpsb
cmp
push
dec
cld
dec
cltd
xor
sbb
pop
jns
adc
mul
cmp
popf
inc
out
es
movsl
aad
lret
cmpl
lock
sti
je
pop
scas
test
aam
jns
add
mov
adc
stos
pop
mov
mov
mov
xorl
ds
dec
rolb
inc
pop
jp
imul
loop
xchg
stos
dec
cwtl
adc
xchg
int
imul
cmp
push
je
leave
shll
subb
xor
arpl
outsb
push
xor
push
push
xor
cmp
mov
test
xlat
jae
add
push
nop
pop
push
mov
mov
out
imul
dec
jg
in
dec
icebp
xchg
les
stos
aad
mov
adc
add
sar
sbb
mov
pop
lcall
pop
jns
icebp
inc
cmp
mov
int3
push
shlb
pop
pop
lea
xor
add
out
add
jae
push
jg
pop
insl
inc
pop
jg
clc
xor
push
xchg
ss
and
stos
loopne
or
in
subb
filds
pop
nop
lret
or
add
cmp
mov
push
je
clc
cwtl
jl
dec
test
mov
fnstenv
jmp
pop
mov
inc
fs
outsb
pop
mov
xor
dec
mov
fptan
pop
cmp
aad
jmp
jp
fcomps
iret
mov
jb
adc
dec
arpl
mov
es
outsl
pusha
call
ljmp
int
mov
jl
std
sbb
out
stos
bound
popf
mul
pushf
int3
cmp
enter
repnz
inc
lock
jge
imul
fadd
adc
icebp
or
scas
inc
push
cmp
bound
add
xor
daa
rcrb
add
aas
xor
inc
testb
pop
leave
pop
icebp
mov
inc
inc
mov
pushf
sub
repz
divb
outsl
mov
pop
push
inc
add
call
sbb
lret
and
ds
test
rcrl
daa
ds
clc
pop
jnp
mov
mov
es
push
pop
mov
lret
sahf
fdivrp
cli
je
mov
xor
lahf
in
sbb
loopne
sti
inc
test
mov
inc
aam
sahf
test
cltd
add
adc
adc
mov
adc
push
push
mov
mov
jl
pop
daa
lock
cmp
stos
fnstcw
inc
lods
mov
fucomp
fwait
pop
jl
shlb
out
xchg
adc
and
xchg
ffree
sub
cs
mov
lcall
mov
sub
ret
test
lea
mov
mov
cmpsb
dec
fs
call
push
cs
jecxz
fwait
xchg
mov
popa
scas
xor
out
mov
aas
sub
xchg
push
adc
sub
inc
ret
and
add
adc
adc
fucomi
jae
jo
and
notb
cmp
pop
sbbl
popa
add
fidivl
mov
mov
cmc
sub
fimull
push
add
push
cld
jl
jp
mov
cmpsl
mov
lods
cmpsb
xchg
es
adcl
ds
push
call
insl
sbb
adc
cmpsl
popf
mov
clc
add
xchg
enter
mov
dec
call
inc
icebp
push
lock
scas
jle
mov
lahf
fiadds
in
mov
pop
fbld
mov
cmp
arpl
clc
push
into
sbb
dec
pop
into
bound
sub
pop
xchg
into
xlat
mov
mov
js
mov
dec
je
scas
jge
pushf
test
out
mov
fstl
jecxz
mov
hlt
jge
test
xor
out
dec
test
stos
inc
add
mov
push
push
jg
push
push
leave
or
xor
xorb
scas
in
cmc
mov
int
xor
cmpsl
sub
movl
add
mov
bound
das
dec
cli
and
jns
add
add
inc
pushf
dec
add
arpl
and
adc
lods
adc
xor
mov
insl
or
lret
sahf
and
cmp
pop
test
push
mov
fnstcw
aam
inc
fwait
daa
xchg
stos
out
cmc
rclb
incb
mov
mov
in
nop
dec
ffreep
out
outsl
mov
xchg
or
popl
sbb
dec
add
pop
ds
add
repz
jno
and
incb
push
dec
insb
adc
inc
arpl
mov
insb
cmp
pop
xchg
fdivs
pop
stc
push
fisubrs
shr
adc
sub
inc
and
test
mov
sti
adcl
decl
fsts
dec
loope
mov
pusha
jl
leave
movsb
insl
test
test
add
aam
and
mov
push
sub
cmp
test
aam
push
mov
ljmp
aaa
popa
mov
and
stc
cmp
sub
fwait
int3
into
inc
ljmp
dec
hlt
sub
and
jbe
and
enter
mov
mov
enter
outsb
jmp
aam
loop
sub
xor
xchg
jno
movsb
mov
and
jp
aam
inc
mov
mov
jecxz
out
add
push
cmp
addr16
idiv
es
or
out
xchg
and
cs
and
lods
jmp
cmp
cwtl
push
jbe
adc
ret
jns
push
push
mov
dec
mov
mov
xchg
data16
mov
scas
call
pop
sbb
inc
fistpll
ljmp
push
mov
dec
and
fwait
arpl
pop
ds
out
cmp
and
or
cmp
mov
enter
scas
and
or
lods
cmp
jns
aas
sbb
cmpsl
pop
inc
sub
leave
mov
lret
push
aam
dec
mov
pop
loope
or
aaa
xor
subb
ret
jg
outsb
lds
sahf
pop
push
mov
lods
push
pop
ds
mov
add
fwait
or
int3
and
push
mov
mov
lea
into
sub
psubsw
lret
xor
mov
lds
inc
sub
jae
int3
les
out
fildl
leave
mov
rorl
xchg
mov
cld
cmp
icebp
dec
and
push
sbb
inc
pusha
pop
lret
lea
and
shld
cltd
movb
mov
shrl
push
pushw
aam
xchg
daa
or
jg
fcomip
jae
cmp
add
xor
sub
lods
insb
popf
push
ret
sbb
pop
inc
cmp
outsl
pop
mov
or
adc
adc
inc
push
sarb
add
stc
sub
adc
aaa
pop
pop
adc
in
jns
dec
fadds
mov
jnp
push
jno
xor
mov
pop
xor
pop
faddl
inc
out
sbb
xor
out
movsl
push
cmp
int
push
or
jnp
lds
mov
loop
inc
push
arpl
xchg
bound
and
andl
repnz
adc
mov
shl
outsl
jl
cmpsl
popf
iret
push
test
adc
jecxz
sbb
enter
pop
pop
stos
fldl
inc
loop
and
lret
or
sub
jmp
je
jo
insb
xor
xchg
les
jnp
bound
dec
mov
sub
stos
clc
int3
xchg
scas
mov
inc
jmp
in
xor
cmpsl
ret
movsb
push
push
fisttpl
sbb
in
ret
stos
mov
mov
cltd
pop
dec
add
cmc
lds
dec
outsl
pop
js
das
push
aas
cmc
sbb
xor
data16
fstp
popa
in
notb
xchg
call
adc
pop
push
jnp
into
cltd
int
lcall
dec
jl
mov
cmp
mov
aam
loopne
arpl
pop
fdivl
frndint
or
orl
mov
mov
jge
mov
fs
lahf
sub
xchg
jb
fcoms
scas
xchg
mov
cmp
fidivrs
stos
insl
addb
push
out
fdivs
sahf
add
dec
andb
pop
out
xchg
test
sbb
in
imul
mov
outsl
call
mov
cmp
shl
daa
ljmp
inc
stos
push
mov
or
xchg
mov
lds
push
mov
push
orb
fsub
adc
dec
ret
repz
xor
clc
mov
cld
add
push
xlat
cmp
aas
imul
sahf
test
jmp
bound
sub
pop
fucom
outsb
xchg
outsl
mov
adc
repnz
mov
mov
mov
adc
dec
lock
xor
mov
inc
or
jno
test
int3
xor
rep
ror
pop
ljmp
mov
cmp
decb
mov
sti
test
daa
dec
mov
pop
lds
mov
mov
fs
outsl
pop
cmp
cmpsb
push
shlb
xor
mov
pushf
adcb
cli
jo
dec
push
ja
sti
pop
loopne
jae
icebp
xor
pop
pop
ret
push
leave
inc
inc
aad
call
clc
in
addl
inc
aaa
adc
add
push
idivb
je
xchg
neg
and
stos
ss
test
mov
pop
or
jmp
xchg
jle
pushf
adc
mov
call
pusha
cmpsl
fiaddl
andl
push
jmp
add
andb
cs
orb
or
xchg
push
mov
fwait
cmp
add
push
repnz
sub
pop
shrl
ljmp
or
icebp
push
faddp
inc
dec
sbb
sahf
fwait
daa
sub
dec
scas
inc
les
lahf
add
in
fs
adc
push
popa
inc
jmp
mov
dec
loopne
jo
outsl
mov
cs
xchg
ret
sbb
adc
add
mov
je
adc
cmpl
into
outsl
and
and
push
insl
aam
and
inc
mov
push
or
jbe
xchg
dec
xor
cmp
mov
jecxz
cltd
cli
push
cmpsl
xchg
sub
adc
sub
adc
mov
push
inc
mov
mov
ja
dec
push
testl
push
pusha
jmp
lahf
sbb
hlt
enter
ds
sbb
pop
cmp
movsb
fwait
dec
clc
in
pushl
push
inc
fcomps
repz
iret
jp
mov
fcom
add
and
aas
mov
insb
adc
adc
cmpsb
repnz
call
and
in
jb
clc
dec
jmp
shll
insl
jne
int3
dec
or
cmpl
popf
sub
xchg
rcrb
xchg
hlt
sbb
aaa
xchg
cmpsb
jp
dec
jl
mov
dec
rcrb
jle
rorl
mov
mov
lcall
daa
js
rcl
stos
les
popa
ss
pop
out
cmp
movsb
add
movsl
insb
cmpsl
div
call
dec
cmp
pop
xor
nop
cwtl
dec
and
dec
andb
mov
and
or
add
enter
ljmp
sahf
mov
ret
imulb
flds
mov
xchg
movsb
mov
dec
scas
sbb
rorb
jbe
stos
mov
sbb
or
mov
jl
pop
out
addb
lock
loopne,pn
setae
out
sub
mov
xchg
dec
mov
insl
fs
sub
lods
fwait
add
outsb
mov
push
mov
shr
adc
lret
xor
lcall
cmp
sub
inc
cs
mov
or
push
repz
repnz
adc
in
add
sti
rcrl
xchg
mov
inc
push
outsb
cmp
and
repnz
int
out
aam
aam
cmp
in
xor
push
sbb
mov
dec
js
fadd
loop
outsl
xchg
repnz
popa
jle
test
xor
shlb
mov
add
arpl
popa
arpl
push
fwait
push
mov
mov
sub
int
scas
loope
mov
data16
fistpll
test
xchg
dec
mov
add
cli
or
es
out
inc
jecxz
cmp
icebp
jne
jbe
adc
imul
or
jge
adc
int
lret
addr16
push
push
mov
jns
dec
and
loopne
and
mov
hlt
or
cmpsb
in
es
jmp
test
rcl
push
sub
xchg
fcomps
mov
je
stc
mov
leave
in
adc
pop
out
and
inc
mov
xchg
inc
or
mov
jecxz
push
lret
xor
mov
jb
iret
pop
mov
jmp
xchg
mov
xchg
add
sbb
shl
scas
les
stos
leave
cwtl
scas
adc
mov
push
inc
dec
fbstp
push
sbb
fucomp
das
xorl
push
dec
scas
pop
and
mov
and
hlt
das
insb
je
andb
insb
mov
fucom
mov
cmp
cmpsl
test
xchg
cmp
roll
repnz
push
test
ret
mov
add
bound
mov
push
out
cmp
xchg
jne
repnz
add
dec
test
loop
jbe
xor
push
cmpsl
sub
fcmovb
scas
jecxz
dec
popf
mov
into
pop
sbb
dec
jmp
push
repz
adc
icebp
je
mov
stos
cld
sbb
sub
hlt
inc
movsb
sti
fdivrp
test
jge
cwtl
pusha
outsl
loopne
shl
insl
inc
int3
or
mov
subb
xor
cmpsb
mov
inc
inc
mov
in
pusha
stos
xchg
jecxz
jno
adc
or
idivb
lods
pushf
fmuls
mov
pop
in
movsl
imul
push
lret
clc
scas
flds
stc
or
fs
insb
push
sub
adc
ret
jns
mov
jl
fwait
mov
mov
lock
sbb
push
and
inc
mov
lcall
ss
adc
popf
sbb
xor
out
mov
pop
or
pop
lret
xor
test
and
fs
in
dec
push
add
imul
cmp
mov
cli
cmp
pop
jl
bound
dec
pop
mov
aas
ds
mov
add
xchg
pop
xchg
inc
xor
xor
jbe
push
fdivrl
add
mov
js
cmp
fcomps
sbb
and
ret
cmpsl
lea
cmpsl
int
jg
mov
dec
inc
push
call
outsl
add
in
out
stos
popa
lea
or
ds
and
xchg
xchg
andl
pop
cmpsb
pop
stos
push
mov
push
sbb
fidivrl
dec
dec
into
mov
aaa
ret
pop
mov
inc
lods
push
fists
push
cmp
inc
inc
push
jge
loop
adc
popf
sbb
lret
push
sbb
xor
inc
mov
adc
push
xchg
jp
mov
push
add
push
pop
inc
push
sbb
stc
test
push
fcoml
fsubs
dec
lods
push
dec
js
sub
mov
loopne
in
adc
xor
add
cmpsl
mov
xchg
mov
mov
sub
scas
andb
fnstenv
jo
cmp
in
jne,pn
sub
mov
fs
dec
mov
fldenv
push
ret
fidivrl
popf
xchg
rcll
push
xor
mov
lock
jmp
xchg
out
and
addb
and
inc
dec
ljmp
inc
pop
dec
insl
jae
arpl
xchg
fwait
stos
adc
cwtl
push
jnp
pop
enter
mov
negl
mov
stc
cmc
cmc
mov
fcompl
pushf
lahf
sub
daa
cmp
pop
push
fwait
dec
aas
inc
aas
jg
in
cmpsl
call
push
aad
push
xor
imul
cmpsl
out
sub
loope
cli
in
jo
es
addr16
ds
mov
in
repnz
lret
jle
jo
iret
adc
sbb
shlb
roll
xor
nop
sub
fstps
xchg
jp
dec
ljmp
pop
jne
xchg
inc
cltd
leave
rcrl
lcall
cmp
jnp
mov
dec
test
sahf
jmp
lds
sbb
fldl2t
or
test
cmp
and
test
sbb
repnz
push
in
repz
mov
adc
jge
xchg
andl
fiadds
jne
fldl
pushf
in
cmp
pusha
mov
sub
add
loop
ret
cmc
add
in
ss
inc
cli
adc
xchg
fcompl
decl
sbb
xor
out
pusha
stos
and
movsl
movsb
loop
push
cmp
xchg
addr16
xchg
inc
inc
enter
jns
rcrl
fildl
out
bswap
push
or
inc
sti
cltd
sahf
push
jo
mov
adc
mov
mov
jecxz
mov
shrb
les
inc
and
rcrb
imul
fistpll
outsb
ds
das
cmp
mov
xchg
inc
ljmp
leave
add
add
divl
lds
xchg
hlt
mov
mov
mov
mov
mov
loop
das
pop
daa
mov
lcall
cmp
xor
dec
or
aaa
mov
xchg
loope
out
or
es
out
push
mov
cmp
push
add
xor
jl
mov
outsb
xchg
sub
or
xlat
adc
fs
cmp
cmp
sbb
mov
push
xchg
and
pop
neg
movsl
inc
jo
mov
add
leave
mov
inc
rclb
insb
xchg
ret
mov
inc
xchg
adc
cmpsl
sub
rorb
jle
mov
pop
inc
adc
insb
pop
cmovnp
jp
sub
inc
mov
mov
lea
push
dec
notb
mov
ss
ret
pop
addl
cmc
fwait
test
pop
dec
notl
rolb
cmp
outsl
nop
and
mov
adc
lea
cmpsb
sbbl
xor
rcrl
push
and
aad
scas
push
inc
push
test
pop
imul
pop
pushf
insl
mov
sub
ror
rcl
inc
icebp
fmul
sbb
adc
mov
fidivs
push
xor
push
add
dec
iret
jno
mov
mov
adc
stc
xlat
sub
nop
cmpb
mov
mov
lahf
push
lahf
popf
add
pop
js
clc
ret
inc
dec
cwtl
push
jg
and
repz
jnp
repnz
mov
sbb
pop
sub
fdivs
jmp
dec
enter
fs
movsb
aad
nopl
cmp
push
fildll
lock
mov
jle
sub
push
inc
or
jp
les
ss
lds
adc
fwait
or
dec
rcr
pop
jp
das
movsl
test
pop
mov
push
movsl
sbb
cmp
fcmovu
mov
or
pop
jmp
cmp
and
xlat
popf
mov
adc
fsubrs
fistpl
sarl
pop
inc
fdiv
lea
aas
adc
mov
lods
flds
in
jae
pop
pop
mov
sbb
pop
leave
jns
inc
filds
jo
and
adc
or
mov
in
jne
pop
push
call
jo
mov
fnsave
aad
test
xor
icebp
pop
or
cmc
xchg
mov
sbb
les
mov
mov
push
sbb
jg
int
ficoml
xchg
and
jns
roll
rol
push
or
fldt
cmp
out
cmp
into
in
add
sbb
push
js
mov
rolb
xor
pop
mov
lcall
sti
cld
jle
shrb
push
sub
xor
inc
pop
push
or
icebp
sub
mov
scas
inc
adc
in
lods
outsb
pextrw
jbe
in
adc
lea
pop
xchg
stos
and
fistps
cli
jo
pushf
int3
data16
sub
test
xor
ret
and
js
arpl
outsb
mov
out
dec
push
sbb
or
outsb
add
int3
dec
stos
inc
shrl
inc
fwait
cmc
pop
icebp
sbb
xchg
imul
icebp
xchg
lret
iret
popl
mov
popa
out
pop
mov
mov
lahf
sbbl
pusha
std
cmpsb
sub
js
andl
push
dec
arpl
popf
dec
ja
ja
loope
xchg
adc
dec
adc
add
or
cmpsl
jge
push
jnp
lret
pop
pushf
stos
mov
lea
loope
cmc
xchg
sub
gs
popa
xchg
mov
inc
outsb
cmpl
pop
test
and
or
out
xchg
sbb
dec
sub
and
ret
divb
sbb
bswap
in
ret
jns
xor
fs
movsb
inc
lods
cmpxchg
mov
fadd
ds
mov
xchg
mov
mov
clc
or
cmp
xor
add
mov
push
adc
loopne
imul
inc
into
sahf
inc
aad
and
inc
icebp
call
mov
sub
rol
jno
mov
pop
pushf
lds
dec
imul
adc
sti
in
cld
and
mov
push
xor
add
stos
test
jge
jl
cmpsl
fisttpll
push
sbb
aam
fimull
or
push
and
andl
sub
and
and
push
jnp
jno
cmc
andb
lock
fld
loopne
icebp
dec
jb
negl
aam
sbb
add
adcl
inc
lcall
out
fsubrl
fbld
jo
stos
scas
xchg
shll
sarl
pop
inc
cwtl
popa
pop
inc
jmp
adcl
xchg
imul
mov
xchg
scas
pushf
lret
shll
and
push
enter
mov
push
xchg
lds
fbstp
bound
pop
incl
sub
sbb
mov
mov
cltd
xchg
out
push
stc
mov
pushf
cmp
nop
sub
push
push
ljmp
rclb
aaa
sbb
jne
cmp
xor
jns
popf
cmp
cwtl
xchg
mov
orl
xor
jg
gs
pop
mov
arpl
ja
sbb
jnp,pt
imul
int
cwtl
enter
test
nop
out
xchg
push
xchg
out
xchg
pop
pop
popa
push
jecxz
or
dec
cmp
sar
aas
xchg
pop
pop
jecxz
add
test
adc
int
sahf
lahf
scas
and
inc
dec
leave
mov
divl
jnp
xor
or
xchg
aad
push
inc
ret
jno
fldz
jb
movsb
dec
popa
arpl
addr16
dec
jg
fsts
mov
out
xor
loope
add
sahf
aaa
lret
fwait
add
ret
sbb
in
stos
add
and
imul
outsl
fadd
jge
jge
push
test
clc
push
cvtpi2ps
push
lock
and
loope
lea
xor
mov
mov
sub
sub
sub
xchg
out
imul
bound
clc
test
jmp
dec
lret
mov
lahf
ror
int3
dec
adc
scas
bound
gs
add
stc
mov
xchg
lds
jbe
or
push
bound
jno
mov
roll
cmpsl
test
loopne
adc
cmp
pop
cmp
movsl
pop
add
sub
test
mov
jae
lds
aam
pop
push
sub
outsl
or
xorl
jge
xchg
imul
loop
stos
sbb
shll
xchg
test
inc
push
daa
and
xchg
sbb
jmp
cmpb
sbb
pop
jo
add
pop
mov
sub
jmp
aad
dec
outsl
and
sahf
and
xchg
and
xor
mov
out
xchg
mov
lea
dec
rcll
popf
cmp
mov
add
cli
push
adcb
fidivrs
jb
shl
lods
sub
insb
dec
jmp
push
add
rclb
scas
push
xlat
fcoml
jnp
fisubs
pop
pop
mov
cmp
fnstsw
jae
sbb
rcll
in
push
add
cld
fsub
aaa
pop
or
fmul
ja
sub
fldcw
jmp
dec
and
fadds
js
lods
imul
and
dec
dec
xor
js
repz
scas
and
or
ds
jo
icebp
sub
mov
and
or
int
std
in
cwtl
das
mov
dec
jecxz
pop
loope
sahf
arpl
jae
push
leave
outsl
mov
push
shll
xor
mov
cmp
xor
cmp
mov
pop
inc
xlat
insb
fdivs
andl
stos
xchg
rol
std
cli
out
repnz
xchg
in
mov
sub
pusha
out
insl
out
jle
lods
fs
mov
outsl
mov
mov
pop
rol
ror
outsl
push
rol
and
lea
stos
mov
push
push
sbb
jo
adcl
add
cmp
jg
cmc
mov
es
sahf
adc
dec
popa
push
push
std
fadds
lods
mov
cwtl
mov
pop
lcall
ficompl
pop
into
push
test
insl
loope
addr16
mov
xor
lret
jp
pop
movsb
rcrl
jae
push
push
jno
cmc
ds
mov
adc
jecxz
icebp
cwtl
pop
div
cmpsb
push
imul
test
dec
xor
popa
movsl
jecxz
cmpsl
mov
dec
into
call
movsb
xor
mov
sbb
jbe
and
sbb
xor
in
cmp
mov
stc
addr16
adc
int3
adc
popf
pop
pushl
cmp
in
orl
sub
jae
jnp
sbb
inc
loop
cltd
ret
les
adc
lock
mov
add
insl
les
sahf
and
aas
cs
pop
add
pop
sub
mov
sarb
inc
push
mov
push
push
es
fcmove
out
rorb
and
lahf
cmp
pop
xchg
dec
jbe
cmp
mov
push
loop
adc
rcr
xchg
and
adc
pushf
pusha
mov
push
mov
dec
push
cltd
cmc
push
js
pusha
add
cmp
pop
out
bound
mov
cld
outsl
cmp
shlb
dec
int3
imul
jecxz
add
xchg
cmp
setno
add
enter
mov
jnp
out
cmp
push
mov
jbe
int3
fistps
out
inc
push
jnp
imul
jne
sub
jb
subl
dec
sarb
fidivrl
daa
mov
dec
push
sbb
jnp
bound
nop
aam
cmp
inc
sub
test
sub
lock
imul
mov
es
iret
fistpll
or
adc
mov
cs
dec
sbb
xor
inc
push
dec
out
cli
add
cmp
addr16
popf
arpl
cmp
adc
mov
push
ljmp
in
xchg
push
or
push
pop
and
cmpsl
jg
or
push
adc
jo
push
ss
xor
rep
xor
pop
fwait
dec
outsb
xchg
data16
add
push
mov
xor
fildl
rorb
lret
and
jns
add
and
sbb
mov
mov
inc
push
adc
roll
adc
mov
cltd
scas
add
aam
mov
test
andl
and
popa
in
or
add
jae
aaa
loope
dec
fsubrs
or
push
cs
js
jbe
outsb
roll
push
fcomps
or
pusha
test
or
test
push
add
sbb
popl
mov
push
adc
lret
test
repz
faddl
and
out
or
jno
and
inc
cld
mov
stos
lods
je
repz
cmpl
mov
inc
scas
mov
notl
loop
cmp
sub
out
pcmpeqb
pop
stos
sbb
clc
pop
cmpsb
out
vcvtpd2psx
bound
out
sbb
shrb
lock
add
sbb
push
and
mov
jmp
jge
sub
and
in
je
mov
mov
cli
dec
mov
jbe
jp
push
fwait
clc
inc
stos
push
push
in
inc
icebp
ret
mov
lret
out
testl
cmp
mov
roll
jne
fiaddl
cmovns
std
and
rcl
sub
imul
sbb
add
xor
pop
icebp
and
popf
lret
xchg
rorl
cli
or
cmc
dec
xchg
inc
test
scas
mov
sub
stc
fstpl
push
mov
hlt
out
push
fwait
xor
scas
stos
and
and
xchg
inc
pop
pop
fwait
or
out
addr16
std
imul
mov
mov
ds
cmp
and
sub
xchg
test
fists
or
mov
mov
pop
or
push
mov
pop
cmp
cltd
cmp
in
scas
rcrb
sbb
jnp
dec
dec
mov
cmp
pop
in
aaa
insl
ja
jno
pop
and
mov
sub
repnz
mov
mov
repnz
push
fiadds
xor
ret
pop
push
add
pop
pop
xor
pop
outsb
jp
ja
mov
adc
rcrl
xchg
int
sbb
sub
rcr
mov
mov
pop
or
insb
cli
inc
push
enter
xor
cs
insb
push
dec
andb
push
cmp
adc
xlat
hlt
std
scas
stc
adc
jae
in
ja
inc
dec
mov
sbb
lods
je
imul
xorl
out
jl
imul
sbb
shlb
inc
lret
push
xor
mov
pop
jb
into
sbb
mov
push
xchg
outsb
mov
mov
xchg
add
pop
fimull
hlt
xchg
int
xlat
in
nop
lea
notb
lcall
loope
mov
rolb
rorb
test
or
push
lds
aam
push
push
adc
ficoml
stos
xchg
pop
mov
inc
xor
lret
jae
xchg
inc
lods
push
jo
cmp
roll
mov
pop
lahf
cld
cmc
leave
or
pop
and
insb
inc
fdivrl
pusha
outsl
jbe
les
mov
or
inc
subb
aad
push
in
push
fcoms
int3
or
and
int3
fidivrs
mov
inc
out
pusha
mov
mov
push
jnp
xor
sub
stos
and
pop
cmp
in
inc
les
outsb
or
in
mov
xor
pop
xor
jo
negb
cmpsl
push
xchg
fstpt
rolb
xor
lcall
dec
pop
cmc
in
subb
mov
xor
aad
leave
outsb
mov
xchg
and
xchg
cmp
push
dec
mov
mov
sub
lods
aas
push
data16
dec
add
mov
call
and
xor
jp
aas
sarb
or
mov
cmp
pop
addr16
mov
ss
mov
outsb
shlb
fs
jae
nop
loope
rolb
sub
mov
stc
hlt
enter
ss
pusha
jno
popf
sqrtps
into
xor
mov
xchg
add
scas
sub
movsl
fcomp
ret
loopne
inc
cltd
outsl
test
mov
jns
enter
or
push
cmp
fildl
aam
insl
test
pop
movsl
xchg
mov
sub
pop
jge
dec
std
jno
jbe
int3
adc
dec
fcmovnu
out
sbb
mov
mov
leave
lahf
ja
cld
jnp
push
jne
xorb
or
pop
mov
popw
and
loop
lea
push
movsb
out
pop
xor
pushf
shll
mov
das
adcl
pop
mov
adc
iret
adcl
stc
fcmovnu
mov
xchg
cltd
sub
jp
and
mov
cmp
sbb
xor
data16
mov
mov
ja
jmp
cld
push
adc
ret
jnp,pn
lret
lods
dec
mov
enter
dec
inc
fisubrs
inc
jmp
lock
sub
dec
mov
fs
int3
gs
out
xlat
adc
incl
xchg
dec
ja
add
or
adc
sub
into
inc
sbb
mov
fisubrs
test
lods
mov
adc
arpl
jns
shrl
add
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
fcomps
jge
jnp
stos
out
filds
jecxz
pop
pusha
push
xor
push
cli
adc
inc
jmp
or
jle
jbe
lret
xor
aaa
cmc
pusha
push
sti
or
jge
cmp
mov
push
pop
addr16
mov
inc
aas
and
fidivrs
fwait
cld
ds
sbb
sub
mov
clc
fildl
xor
insl
adc
sub
push
roll
cmp
divl
in
push
ja
lods
ret
push
or
dec
jmp
cmp
pop
or
adc
loope
mov
clc
jmp
adc
jle
scas
or
addr16
cld
pop
push
inc
inc
mov
mov
lcall
xor
popa
sub
mov
lret
fcom
mov
sub
in
adc
xchg
sbb
jo
pop
ret
movsb
or
arpl
insb
repnz
xchg
pushf
xlat
mov
les
es
dec
shll
out
push
leave
lahf
jl
or
int
clc
test
int
pusha
mov
and
fs
and
cmp
icebp
mov
sbbl
fsubrl
std
mov
ja
jne
dec
xchg
popa
scas
fcompl
mov
push
sahf
xchg
inc
pop
xorb
or
mov
movsb
mov
adc
out
pop
jns
popf
adc
mov
dec
movsb
jne
mov
mov
cmc
fnstcw
or
aas
xchg
lret
loop
xor
sbb
fcomps
ljmp
sbb
lcall
dec
aad
jge
add
dec
lret
or
xchg
dec
dec
inc
sub
fadds
adc
fwait
bound
lds
add
xlat
and
inc
iret
imul
sbb
mov
pushf
gs
cs
fs
xchg
inc
int3
push
mov
cmp
pop
frstor
outsl
cmp
mov
mov
jns
fcmovne
mov
psrlq
nop
ret
xchg
mov
into
adc
and
jmp
adc
lret
fsubp
and
cmpsb
xchg
sbb
aam
arpl
jb
jg
popf
mov
dec
gs
sub
out
and
je
mov
mov
xor
jno
daa
incl
cmp
jge
inc
cmc
cmp
bound
je
lcall
sbb
decb
cmp
gs
xchg
das
mov
jp
movb
mov
inc
or
imul
fistps
in
xchg
clc
int
push
stc
dec
inc
sbb
loopne
cmpsl
add
ds
rcrb
mov
icebp
sbbl
inc
cmp
repnz
movb
ret
jnp
inc
xchg
sti
jns
pop
stc
scas
xor
xor
call
xchg
in
sti
mov
xor
mov
out
fcoml
dec
and
sub
sub
daa
adc
and
xor
nop
push
or
dec
xor
repnz
xor
adc
mov
cmpsb
and
xor
in
addl
ljmp
jae
mov
dec
sbb
mov
divl
mov
or
add
aas
fwait
sbb
nop
in
jb
rcr
int3
xchg
dec
sahf
pop
loope
push
test
je
lret
clc
or
xchg
cmp
outsl
repz
cmc
mov
jmp
test
fnstenv
lret
pop
sbb
xchg
negl
stos
and
push
ret
jp
imul
data16
ljmp
aam
call
sbb
mov
iret
inc
pop
scas
add
jl
es
sub
jg
outsl
out
mov
cmc
ss
sbb
sbb
jecxz
pop
sub
pop
sbb
aaa
cmpsl
cmpsl
xchg
adc
xor
push
repz
mov
cmp
or
cmp
inc
sbb
std
jmp
mov
lcall
xchg
lock
pop
xor
push
in
outsl
daa
roll
xchg
pop
mov
pop
push
jg
ljmp
or
enter
call
jecxz
inc
imul
push
sti
movsl
mov
inc
add
mov
cltd
add
lock
sarb
jge
xchg
int3
adc
add
ret
int3
ficoms
mov
repz
inc
inc
cmp
outsb
and
mov
jnp
test
xchg
test
mov
cmpsl
sbbl
adc
scas
out
sbb
call
je
loopne
pusha
scas
sbb
ss
outsl
lods
add
imul
push
fbld
push
cmp
imul
cmpsl
lret
mov
pusha
sbb
lods
rep
out
dec
push
lods
ljmp
xor
dec
xchg
imul
pop
mov
cmp
mov
adc
inc
call
cmpsb
or
jns
fists
mov
pop
adc
fldcw
and
in
sub
cltd
xor
jecxz
or
rep
movsb
adc
pop
das
jne
cmp
rclb
jne
add
xchg
in
xchg
test
fsub
mov
dec
sub
scas
mov
push
lcall
nop
stos
mov
int
inc
push
inc
dec
dec
pop
fnstenv
rcll
and
or
std
pop
pextrw
leave
cmpsl
push
fisubrl
int
jle
jmp
int3
pop
xchg
jg
jg
mov
lret
out
icebp
adc
mov
repz
je
imul
mov
scas
dec
mov
lods
imul
pop
dec
dec
sbb
outsb
js
adcb
inc
imul
fsts
xchg
jnp
sbb
push
aam
es
dec
inc
cmp
cwtl
loop
das
fsubrl
and
es
xchg
mov
mov
or
push
stos
aaa
xor
or
or
jne
add
fisubs
cmp
into
xchg
std
add
inc
movsb
test
mov
sbb
fsubrp
mov
ret
cltd
inc
aad
inc
push
sbb
les
ja
cld
sbb
xor
or
xchg
pop
add
sahf
incl
inc
sub
mov
mov
fdivrl
cld
fstpt
ret
mov
sub
jne
xchg
mov
in
imul
iret
jo
roll
cs
push
pop
leave
in
in
scas
pop
sbb
push
inc
push
jecxz
xor
addb
mov
cmpsb
mov
fistps
push
jns
or
or
movsb
cs
push
dec
repz
bound
sbb
insb
stos
in
inc
and
cld
daa
mov
ret
and
test
push
and
lods
mov
xchg
pop
orl
adc
adc
test
xor
out
mov
rclb
xor
out
add
ret
imul
sub
jp
or
mov
cmp
ljmp
mov
mov
push
mov
sub
imul
dec
inc
jnp
ds
push
add
push
out
jl
mov
imul
mov
loop
cmp
into
pop
push
jnp
mov
cli
push
sbb
shl
shl
adc
pushf
mov
scas
lcall
sbb
insl
jbe
mov
mov
mov
adc
push
js
dec
push
test
lods
sub
lahf
lock
stos
lcall
inc
xor
cmp
xchg
sbb
pop
add
lods
pop
push
add
rorb
mov
adc
xchg
push
sub
gs
cs
xchg
add
sub
lds
cmpsb
jl
fcmovb
sbb
sbb
xor
orl
and
add
popa
push
roll
push
daa
adc
mov
xchg
sub
jmp
addr16
inc
and
sbb
jae
dec
dec
test
pop
rolb
loop
jecxz
loop
mov
jno
pushf
fidivs
or
nop
cmp
shl
test
push
mov
pusha
fisubrl
adc
pop
subl
jo
mov
add
push
dec
xor
xchg
imul
in
push
xchg
adc
add
sbb
xchg
mov
or
jmp
cmp
push
rclb
pop
adc
push
arpl
cmpsl
fsubr
adc
pop
and
jmp
mov
push
sub
lret
xchg
scas
sbb
xchg
push
pushf
pushf
sbb
pusha
or
mov
or
dec
rclb
pop
mov
into
lret
add
cmc
rorb
xor
lahf
lds
out
ret
jnp
pop
rcr
clc
cmp
jo
hlt
mov
push
lods
popf
jmp
pop
loop
add
cmpsl
jb
sub
leave
mov
clc
sti
test
jae
rclb
lods
call
push
ss
add
push
cmp
test
fstpl
mov
enter
mov
out
push
clc
xor
cmp
out
inc
lahf
fdivrp
cltd
mov
add
nop
xchg
and
xor
ja
movsb
mov
adc
and
mov
subb
xor
cmpsl
daa
xchg
enter
push
movsl
cmc
aas
call
sub
in
add
insl
cli
sub
lea
cmp
rcrb
xchg
cmp
fisttpl
out
mov
sbb
cmpsb
lahf
mov
imul
push
js
lahf
repz
xchg
icebp
cmp
mov
insl
dec
xchg
xor
test
cmp
cmpsb
pop
subb
mov
xor
mov
jecxz
bound
fdivrp
or
aas
inc
mov
fdivs
imul
mov
sub
sub
adc
xchg
in
mov
iret
mov
sbb
inc
mov
enterw
mov
jmp
add
mov
hlt
test
hlt
push
js
pushf
jns
jbe
sub
push
dec
push
popa
mov
mov
pop
and
jmp
sbb
stc
jno
and
xchg
test
xchg
mov
out
leave
cmp
into
test
mov
xchg
mov
fwait
in
dec
xchg
fwait
push
inc
inc
mov
aas
jl
sub
fwait
adcb
sbb
cmp
cmp
mov
and
jb
in
test
and
mov
outsb
loop
mov
dec
sub
lret
jg
pop
jl
cwtl
sub
leave
ljmp
mov
outsb
scas
inc
pusha
inc
push
ss
xchg
ret
andb
ja
xchg
inc
dec
insl
push
pop
pop
mov
xchg
pusha
aas
lds
jnp
inc
mov
bound
bound
fsubl
mov
imul
jbe
inc
testb
test
push
int3
in
fildll
adc
adc
adc
or
addb
jae
idiv
cmpsb
pop
mov
jecxz
stos
rorl
pushf
add
adc
pop
push
sbb
push
lods
push
iret
add
cwtl
jmp
movb
popf
xor
and
rcrl
dec
inc
sbb
daa
cmp
push
into
mov
or
mov
mov
xchg
faddl
jmp
in
inc
lea
int3
push
mov
xorb
sahf
scas
ljmp
aam
sub
xchg
call
cmpsl
iret
int3
cmp
pop
push
insl
dec
or
dec
insl
and
rcrl
and
and
js
sub
push
fucom
xchg
std
setns
imul
sbb
insl
outsb
sub
mov
out
and
jp
loop
es
add
sub
or
push
clc
in
or
jns
inc
je
lea
lea
int
xor
cltd
sbb
stos
cli
std
shl
fcoms
xchg
enter
cmc
aaa
pop
mov
cmp
pop
out
add
imul
xor
inc
test
mov
sbb
das
jmp
mov
cmp
int3
and
mov
xchg
jno
rol
fsubrl
leave
sti
push
movsl
xchg
cmp
shrb
fdivrp
fwait
js
pop
leave
data16
or
push
and
cmp
dec
ficoml
and
pop
and
and
clc
movsl
dec
in
hlt
ret
push
addb
fldenv
aaa
cli
sti
jne
dec
out
cmp
mov
pushf
test
add
or
push
mov
pop
and
mov
rol
repz
mov
and
sbb
sahf
jg
xchg
and
adc
push
push
loop
lahf
dec
stc
xchg
inc
out
push
pop
js
sub
pushf
ret
cs
mov
es
jbe
pop
mov
push
inc
pop
adc
or
cmp
mov
test
add
sbb
xor
jns
xchg
into
mov
pop
pop
xor
pop
mov
dec
push
sbb
mov
fucomp
and
sti
icebp
push
rcll
es
lcall
insl
push
xchg
xlat
aas
cltd
inc
add
push
cmp
daa
out
sbb
adc
and
repnz
loop
out
adc
jecxz
and
or
cmpsl
adc
adc
daa
out
dec
aam
and
daa
insl
pop
sbb
pop
hlt
leave
out
xchg
mov
or
sbb
je
cmc
xchg
jg
and
aad
and
cmc
xchg
sbb
xor
aad
lahf
sbb
jbe
push
scas
adc
cld
les
jns
sbb
push
mov
xchg
or
in
inc
das
mov
in
fmull
mov
jae
xchg
int3
fidivrs
cwtl
into
xor
sub
jns
push
popf
arpl
int3
test
jle
stos
psrlw
lea
clc
mov
fistpll
jge
pusha
jg
add
mov
dec
sbb
int3
push
fsubl
imul
push
cmp
pusha
jno
push
cmp
mov
fwait
leave
mov
in
cli
out
scas
cmpsl
jl
mov
sub
sbb
jg
mov
ja
cltd
or
arpl
es
mov
and
mul
scas
mov
xchg
jbe
xchg
es
and
push
or
fsubl
cld
bound
dec
sti
stos
xchg
fiadds
push
repz
xchg
outsl
popa
mov
out
mov
jbe
cmp
jnp
andl
es
stc
in
mov
push
pop
sbb
or
push
outsl
stc
sbb
test
stos
fcmovnbe
mov
pop
xchg
dec
sti
arpl
inc
jb
ret
inc
lock
cmpl
push
and
dec
js
adc
repz
add
sbb
rcl
dec
data16
dec
mov
sbb
inc
push
push
movsb
xor
sub
mov
xchg
xchg
xchg
shl
mull
push
popf
gs
pop
adc
xor
adc
mov
loope
mov
mov
add
pop
repnz
sbb
pop
test
subl
in
sbb
pop
ljmp
pushf
and
mov
das
add
cwtl
inc
mov
dec
push
in
inc
aas
cwtl
ffreep
les
or
test
outsb
pop
je
pop
adcb
jg
jl
mov
and
or
and
hlt
mov
ljmp
and
dec
das
push
sbb
push
cs
out
xor
cmp
mov
xorl
incb
lret
rclb
mov
push
dec
cmpsl
inc
pushf
cmp
jecxz
jg
xchg
imul
inc
ds
xor
js
cltd
xchg
cld
or
lahf
cmp
clc
popa
push
jle
dec
mov
loop
push
jnp
fsubl
divl
fsubp
repz
enter
add
jl
xor
mov
repz
and
pop
ss
imul
cmp
push
push
popf
clc
out
mov
ficoms
sub
sub
rolb
jne
mov
fs
xchg
bound
push
rcrl
mov
lods
sar
and
xchg
cltd
mov
xchg
in
iret
lgs
ds
xor
xor
dec
jae
inc
call
jo
jge
and
std
push
loope
pop
addr16
mov
stos
out
sbb
rdpmc
notb
cmp
push
adc
nop
adc
dec
pop
test
or
ror
adc
dec
jno
xor
sbb
lcall
sub
xor
jno
loopne
add
cmp
lock
push
scas
fs
push
aad
xchg
xchg
rol
stos
mov
sbb
rolb
mov
push
test
lock
std
std
xor
mov
rcl
push
adc
shl
je
mov
loop
test
icebp
out
mov
out
mov
pop
xlat
rolb
xor
hlt
jge
outsb
movsl
loopne
dec
xor
add
dec
mov
sbb
imul
push
movsl
shrb
pop
mov
into
sub
adc
test
jne
test
pop
int3
mov
cmp
cmp
mov
mov
std
ja
fadd
addr16
ret
and
or
movsb
imulb
mov
xor
icebp
mov
mov
ljmp
mov
out
lods
bound
xchg
push
cli
je
scas
xor
in
out
push
mov
mov
mov
dec
or
out
inc
or
pushf
mulb
or
out
outsl
scas
or
mov
fsub
push
and
enter
cmp
mov
inc
in
mov
and
test
lea
jne
and
mov
mov
and
mov
xor
pop
add
add
jne
in
test
add
out
movsb
mov
xor
mov
loopne
test
imul
and
in
xor
scas
das
ret
sub
sarl
addl
addb
leave
ret
pusha
mov
rcrb
int
jl
add
inc
mov
inc
and
xchg
sbb
fistps
xor
mov
ds
lret
js
mov
and
out
push
inc
rorb
jo
pop
add
inc
out
sbb
and
pop
aad
lods
or
xchg
ds
push
inc
test
stos
xor
jns
aaa
lods
adc
dec
cmp
cltd
xchg
notb
mov
jmp
jbe
cltd
xor
cmp
add
dec
pop
and
mov
gs
add
mov
pop
pop
dec
pushf
iret
test
popa
push
xchg
cmp
mov
push
xor
lds
add
or
mov
addr16
lahf
mov
int
lock
xor
icebp
in
fmuls
ficompl
push
fnstenv
and
dec
sahf
pop
push
push
fidivs
rcll
daa
cmp
popf
insb
test
or
lahf
adc
sbb
jle
or
mov
cli
mov
sbbl
sbb
dec
test
je
mov
shl
jge
ljmp
pop
sbb
shll
fsubrs
aam
clc
fldt
es
aas
es
xchg
adc
sbb
push
jmp
cs
inc
lret
lret
adc
sub
adc
inc
aaa
cltd
cli
in
data16
push
enter
mov
xchg
jmp
jae
xchg
sub
inc
mov
pop
rcr
aaa
ficompl
mov
push
xchg
push
test
mov
call
cs
ss
pop
mov
out
sbbb
shrl
mov
stos
mov
scas
cmp
mov
adc
cmp
xchg
mov
movsl
in
or
xor
push
aaa
test
pop
stc
jg
adc
mov
dec
sub
mov
int
cmp
mov
mov
test
test
jle
lods
push
and
mov
dec
fsubrp
dec
flds
std
push
mov
nop
les
mov
aam
sbb
mov
lret
sbb
ljmp
out
clc
pop
iret
jo
sti
popa
imul
insl
push
fwait
cli
inc
add
sbb
push
adc
gs
cmpsb
sbb
sub
inc
or
bnd
dec
or
jle
adc
test
mov
cmp
xchg
lahf
jo
out
push
ret
call
repz
daa
pop
sub
out
js
or
mov
or
pop
sub
xor
jle
adc
int
enter
pop
pop
popa
pop
fimuls
sar
mov
repnz
adc
or
clc
push
xchg
enter
dec
iret
loope
adc
sub
or
xor
sbb
push
dec
xor
call
or
jmp
lret
lret
mov
mov
push
pop
mov
and
in
imul
pop
mov
imul
cs
or
scas
adc
cld
es
repz
aaa
push
xlat
dec
xchg
gs
xchg
jae
cltd
ret
push
out
or
out
in
inc
cld
imul
and
dec
cmp
gs
and
scas
repnz
xchg
repz
call
push
ret
imul
les
pop
inc
pinsrw
addr16
out
push
and
rorb
jnp
cmp
icebp
rolb
cmc
cli
mov
jb
scas
mov
lret
icebp
pop
movsl
add
fidivrl
cmpsb
ss
inc
sbb
inc
push
dec
sarl
enter
lcall
sub
mov
mov
cmp
jl
xchg
imul
pop
sti
and
rolb
mov
jl
mov
lret
nop
pop
test
push
lret
cmc
inc
lock
out
lret
adc
out
mov
lahf
push
sbb
hlt
inc
mov
adc
sbb
jb
push
jb
lock
mov
popf
xor
in
pop
adc
cltd
aam
add
jecxz
sub
push
fcoms
sahf
inc
add
into
leave
sbb
aas
mov
js
adc
insl
adc
sub
ja
pop
iret
xchg
std
push
and
pop
aas
mov
cmpsb
scas
rep
inc
cmc
cli
mov
push
inc
dec
lahf
mov
mov
testb
inc
dec
mov
std
jle
mov
push
in
push
sbb
push
mov
and
sbb
push
test
cmp
xchg
or
fwait
imul
ret
push
cs
das
mov
cwtl
loopne
mov
cld
or
dec
pop
sub
or
int
int3
mov
pop
imul
rcrl
ficomps
dec
xchg
adc
pop
outsb
lret
inc
push
nop
ja
xchg
divb
add
mov
sub
mov
ficoms
mov
or
jge
sbb
pushf
jnp
xor
jno
outsl
aas
sti
test
nop
mov
mov
lock
pushf
add
stos
ds
mov
inc
or
xchg
pushf
jno
mov
lds
fcmovnb
movups
mov
xchg
xchg
outsl
in
dec
movsl
jne
xor
jmp
pushf
mov
inc
rcrb
inc
or
dec
popf
push
pusha
dec
cmc
xor
ret
jp
out
mov
aam
mov
xchg
pop
mov
and
enter
mov
mov
push
ljmp
pusha
insb
or
nop
sbb
cwtl
lods
dec
fnstsw
in
cmp
cmp
aaa
es
add
adc
mov
sbb
add
lcall
jge
mov
cmp
hlt
sbb
dec
cltd
movsb
add
adc
add
fs
insb
fsubrs
pop
in
adc
lock
imul
stos
in
leave
test
sub
ja
add
sbb
leave
sbb
aas
fwait
call
xchg
fcmovne
leave
test
call
stos
lret
fs
js
mov
mov
inc
jle
xchg
jmp
in
cld
jns
mov
cmp
out
outsb
dec
sub
push
pop
test
nop
lahf
shll
nop
xchg
mov
xor
cmp
push
pop
adc
xchg
adc
stc
rclb
call
popa
jl
cltd
inc
jbe
popf
and
jle
stc
lahf
addb
xor
sub
mov
or
adc
mov
xor
fildl
cmp
lret
add
xchg
add
pop
pop
bnd
mov
mov
js
sbb
out
jg
lock
sub
dec
dec
sti
jo
loope
shlb
ret
or
mov
and
mov
sub
lods
out
add
cld
push
dec
into
fwait
insb
fisubl
jl
push
js
mov
out
imul
in
sub
mov
aad
lods
mov
imul
loopne
mov
iret
sahf
xor
fistps
sub
add
cld
and
jp
bound
lods
imul
or
int
call
xor
out
subl
loopne
pusha
insl
mov
js
lcall
jge
arpl
push
sti
inc
sbb
cwtl
push
lods
xor
ja
and
repnz
cmc
loope
sbb
sbb
sbb
je
popa
cmp
aam
pop
add
mov
mov
and
in
dec
mov
fistps
out
and
ds
lock
rcrl
inc
pop
jo
xchg
inc
adc
mov
mov
mov
das
xor
add
pop
push
push
mov
jle
and
adc
and
mov
hlt
adc
out
mov
jns
clc
rclb
sub
xor
daa
xor
xchg
repz
call
mov
imul
pop
sbb
sbb
setb
and
ja
jno
jmp
out
enter
sub
cmp
enter
push
xor
fdivrp
rsm
push
stos
sub
inc
testl
jb
adc
leave
push
mov
divb
stc
push
aad
push
sub
cmp
insb
inc
inc
int3
rolb
inc
mov
mov
pop
cld
jns
mov
inc
imul
ret
mov
aad
std
subb
inc
popa
jns
sarb
jne
inc
jo
sub
jle
cmp
cmp
bound
lret
ss
jb
mov
mov
inc
cmc
fcoml
mov
aas
data16
stc
mov
dec
imull
jge
pop
aas
sub
sub
pop
repnz
addl
mov
mov
pop
insb
std
pop
inc
decb
out
jne
or
adc
and
les
fcom
js
outsb
imul
mov
jecxz
loopne
add
xchg
iret
lods
sahf
shlb
daa
or
inc
sub
xchg
popa
mov
mov
xorl
xchg
mov
scas
test
scas
adc
in
lods
mov
arpl
dec
pop
push
mov
addr16
mov
fnstcw
pop
sahf
mov
ljmp
clc
jmp
lret
and
xor
out
je
or
pop
les
jg
jnp
leave
mov
pop
or
cwtl
aam
mov
rorb
aad
repz
jp
sub
gs
test
dec
sub
jmp
shl
loop
add
jecxz
lret
mov
inc
sbb
push
push
sub
or
mov
insb
insb
push
adc
xchg
call
scas
loopne
sarb
cmp
ds
stos
dec
pop
jp
mov
repz
in
imul
mov
popa
test
jb
xchg
or
sbbl
add
push
adc
jmp
in
enter
xor
testl
je
imul
or
popa
aad
mov
sub
xor
sarb
in
out
lahf
pop
imul
adc
pop
cmp
lahf
dec
mov
pop
and
aas
daa
lahf
jecxz
sbb
pop
sbb
fildl
dec
cmp
subl
push
out
scas
insl
sub
pop
out
pushf
mov
outsb
or
cli
js
aas
fcomps
xchg
fs
repnz
shrb
lock
movsl
test
sahf
iret
jecxz
sub
je
mov
mov
decl
mov
loop
andb
popa
push
dec
push
mov
xchg
test
dec
add
imul
clc
push
scas
xor
dec
and
mov
in
fisubrl
jle
fxch
and
repz
test
lods
scas
loopne
lahf
gs
sbb
inc
sbb
mov
lea
inc
fiaddl
jmp
insl
push
pushf
outsb
push
pop
ja
sahf
push
xlat
dec
xchg
es
mov
bound
dec
sub
add
mov
xchg
mov
pop
mov
in
fistl
add
and
imul
cmp
inc
enter
and
pop
push
ljmp
adc
cwtl
push
lahf
jne
sarl
cmp
mov
xchg
mov
xchg
mov
out
mov
or
mov
jmp
xchg
orb
pushf
jge
shrb
adc
or
loop
pop
cld
aad
mov
fdivr
jb
cltd
xadd
fnsave
xchg
pop
sub
xchg
lods
jp
lds
jmp
int
ja
iret
imul
add
test
sahf
xchg
jb
xor
ret
mov
push
loope
sbb
fmulp
test
outsb
cmp
dec
loopne
jle
sub
mov
sahf
pop
dec
pop
sub
sub
dec
xor
pop
in
sub
and
imul
jg
xchg
add
dec
xor
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pushf
rep
add
rep
add
pop
outsb
