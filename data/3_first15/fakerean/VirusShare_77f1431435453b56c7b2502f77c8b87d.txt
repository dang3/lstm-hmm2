sbb
add
mov
pushf
mov
add
ljmp
iret
xchg
ds
jl
int
arpl
cltd
shl
sbb
lret
or
dec
repnz
ja
out
popa
sub
icebp
cmpsl
pop
mov
jne
or
hlt
cs
jmp
sbb
sahf
out
pusha
xchg
cmpsl
aad
cmp
xor
aaa
dec
mov
fcompl
aad
gs
mov
add
dec
repnz
and
cmp
je
dec
pushf
inc
push
push
adc
xor
sbb
inc
dec
aam
bound
dec
sahf
scas
xlat
jg
and
xchg
xor
fs
pop
cld
jg
add
in
fimuls
fwait
sub
subb
adc
adc
fs
jecxz
or
out
lret
adc
ja
sbb
push
add
clc
mov
imul
das
lcall
push
out
pop
in
push
int3
xchg
pop
movsl
test
aas
jno
jbe
jne
push
cli
sti
pop
leave
movsb
lcall
mov
sahf
outsb
xchg
gs
push
pop
js
mov
cmpb
push
hlt
mov
push
jmp
subb
lods
push
fsubl
bound
jle
lods
fucomp
push
xchg
or
pop
repnz
negb
subb
jne
popa
push
push
shl
ficomps
std
stos
adc
mov
outsb
pop
arpl
mov
and
xchg
jge
xlat
push
pop
popf
sbb
mov
inc
lds
mov
lods
cmp
les
sti
mov
add
sar
cmpsb
adc
into
mov
insb
dec
jecxz
and
dec
jmp
test
cmp
lret
cmp
mov
sub
pushf
mov
lcall
fucomip
fcmovnbe
sbb
pop
cmpb
dec
dec
gs
mov
in
xor
vpaddw
sti
jbe
ret
lea
outsl
repz
repz
into
sub
lock
ds
clc
pop
je
icebp
out
stos
push
pop
arpl
bound
mov
icebp
cmp
mov
ds
or
mov
add
dec
repz
xlat
loopne
iret
mov
add
shrl
loopne
push
mov
cwtl
jl
sub
pushf
cmp
lds
bound
mov
push
xchg
insb
xlat
lret
push
aaa
icebp
lcall
negl
aam
mov
into
mov
fs
std
and
xor
or
push
pop
mov
and
mov
mov
mov
sub
push
fwait
jo
ret
fbld
stc
arpl
gs
fisttpll
mov
in
into
ret
loope
pop
jle
xor
push
out
inc
sub
sbb
jbe
mov
add
shr
pop
mov
insb
xor
mov
mov
int3
jns
xlat
test
sbb
mov
mov
push
and
sub
rorb
sub
lods
dec
scas
out
ljmp
and
scas
mov
mov
inc
ror
dec
dec
cmp
je
repz
push
xor
movsb
les
lea
jne
fcoms
mov
fadd
xchg
jae
fildll
popa
adc
loope
lods
sub
dec
mov
add
testb
into
cltd
ret
or
das
push
jp
xor
jae
jl
push
cmc
nop
fmull
xchg
inc
sub
int3
in
loope
dec
push
sbb
fs
lock
jae
xlat
movsl
cmp
sbb
xchg
das
cltd
push
insl
push
xchg
aad
lcall
push
lock
sbbl
imul
popf
loop
jne
stos
cmp
sarb
hlt
push
popf
popa
outsl
dec
in
divl
test
enter
fldl
movsb
test
sub
pop
shll
jne
popf
mov
and
fsub
cmp
sysenter
cmpxchg
sbb
xchg
add
jle
and
and
pop
test
hlt
push
inc
pop
cmp
cltd
pushf
inc
fidivrl
out
dec
cltd
aam
repz
push
outsb
inc
mov
nop
sarl
add
cld
popf
incl
xchg
mov
sar
push
popl
jg
outsl
cmp
or
insl
mov
scas
cmp
fisubs
adc
out
mov
pop
in
push
push
fstpt
cmp
hlt
inc
popf
and
cmp
push
test
cmc
cwtl
mov
jmp
and
pop
lds
push
clc
push
jl
into
fdivrl
xchg
in
inc
xchg
cmp
cmp
pusha
scas
cltd
cmp
adc
mov
fiadds
out
mov
xchg
push
movsb
sbb
pop
pop
ds
repnz
jl
xor
xor
dec
outsl
sub
fwait
xor
in
outsl
das
hlt
inc
iret
out
cmpsb
bswap
mov
inc
adc
and
aam
push
cmp
subb
in
dec
jg
mov
cmpsl
inc
pop
xchg
lret
aas
in
stc
ja
test
xor
test
dec
and
and
movsl
daa
stos
xchg
add
inc
adc
push
cmp
push
cmp
repnz
out
jg
ds
mov
xchg
aas
sub
cli
pop
add
adc
testb
inc
in
mov
lcall
inc
sbb
scas
test
scas
fnstenv
fwait
pushf
push
mov
lret
pop
dec
and
in
lret
jb
mov
jb
and
jle
adc
inc
outsl
add
xor
jp
lds
jg
leave
inc
std
dec
or
pop
xchg
cltd
and
test
lods
pop
bound
adc
xchg
jmp
push
inc
xchg
jnp
pop
sub
mov
add
sub
add
popf
xor
test
or
pop
adc
sub
loopne
aam
test
cld
mov
cmp
jge
jnp
hlt
popf
adc
mov
ljmp
outsb
in
mov
xor
mov
imul
inc
dec
pop
mov
bswap
jg
fcoml
stos
push
mov
mov
addb
cmp
push
sub
std
or
xchg
sub
into
ss
fiadds
or
iret
insl
scas
add
adc
push
out
ss
add
dec
inc
cmc
xor
and
xchg
setg
adc
push
push
mov
sbb
sub
sarl
movsb
and
cmp
push
lret
and
jbe
mov
xor
aas
pop
mov
jae
dec
jle
fisubs
jecxz
dec
loop
pop
or
jl
cmp
jecxz
stos
test
add
mov
outsl
mov
dec
cmp
rorb
xchg
lea
xlat
clc
mov
xor
xchg
inc
sbb
and
imulb
bnd
addr16
add
pop
aaa
out
xchg
jp
pop
xor
jnp
jge
cli
adc
xor
popf
or
pop
cmpsl
sbb
addr16
dec
xchg
jp
sub
mov
xlat
xchg
aam
test
mov
fprem
cs
shl
fcompl
out
loope
cmova
dec
add
lds
pop
inc
fmulp
lea
and
jbe
popf
dec
scas
aas
daa
lret
dec
push
jp
add
hlt
lock
add
outsb
mov
repnz
xchg
jno
insl
insb
xchg
or
imul
mov
out
loope
pop
or
ja
insb
punpckldq
cltd
shlb
int
adc
mov
adc
loop
rcrb
xchg
imul
fdivl
mov
add
dec
fsubl
mov
and
hlt
cmp
pop
outsl
shr
xlat
sub
push
jmp
sbb
cmp
mov
xor
cwtl
adc
xchg
or
fsts
fcoml
push
test
push
sbb
xchg
push
cmpsb
and
adc
jecxz
jle
bound
popa
in
test
int
adc
sti
mov
inc
jne
adc
pop
sub
adc
insb
adc
dec
xchg
or
cmp
dec
jbe
push
or
mov
fisubs
stos
bound
mov
xor
daa
lahf
inc
inc
fsub
loopne
mov
mov
imul
mov
mov
sub
pop
inc
fwait
add
xchg
stc
imul
inc
sub
pusha
and
pop
dec
sbb
imulb
fistps
push
pop
out
sbb
mov
push
xor
rorb
add
subps
mov
int
cli
jmp
xor
sub
cli
cmpsb
add
adc
push
and
jo
pop
lock
dec
es
icebp
xchg
rorb
jl
ret
data16
mov
movsl
js
push
push
jbe
popa
fwait
cmpsl
mov
cmp
aad
nop
mov
and
or
adcl
ja
dec
jb
out
push
das
jmp
dec
xor
push
sbb
and
sbb
ret
xor
lcall
shrb
add
add
sbb
mul
push
out
imul
ljmp
push
fwait
ja
sub
mov
mov
nop
add
sub
push
mov
out
or
fstl
movsb
aas
cmp
pop
adc
pop
adc
cmp
insl
mov
cmpl
cmp
les
or
sbb
sub
jecxz
adc
and
cwtl
adc
mov
adc
jle
sbb
pop
and
loopne
outsb
adc
and
xor
cmpsb
inc
fcmovnbe
stos
cmp
jle
sahf
imul
xchg
pop
cmp
out
xlat
sbb
cs
adc
pop
sbb
xchg
fs
clc
fs
arpl
add
jl
lea
sub
xchg
xchg
push
add
xchg
sbb
dec
pop
push
leave
daa
mov
pop
cmc
dec
xor
inc
les
mov
fcmovnbe
pop
hlt
lock
xchg
jb
lds
push
add
lahf
repnz
outsb
xor
test
insb
push
xchg
sbb
and
bound
push
lcall
gs
outsb
jmp
lret
add
shll
jnp
stos
mov
add
test
jno
movsb
in
push
xchg
mov
sub
into
cmp
cmp
fwait
mov
stos
xchg
pop
and
sbb
test
into
push
cmpl
mull
cmp
es
out
add
cmp
stc
fnstenv
inc
mov
lcall
je
iret
jecxz,pn
aas
test
sub
mov
sbb
inc
sub
xlat
pop
lea
push
sbb
lods
xor
ljmp
or
ds
test
sbb
loope
pop
mov
fnstcw
aaa
je
jnp
pop
imul
fwait
lds
dec
lock
scas
xor
nop
sbb
lods
push
xchg
mov
fwait
mov
popa
jnp
cmp
jno
mov
jle
sarb
movsl
insl
push
jnp
mov
cmpsb
push
dec
fs
xchg
adc
lods
std
push
xor
ret
clc
addl
jns
pop
subb
leave
mov
dec
fisttpl
pop
call
js
out
dec
leave
loope
push
gs
filds
test
popf
loope
cmp
lods
pop
pop
scas
hlt
add
push
jo
cmpl
pop
and
and
popa
int
push
call
push
mov
mov
aas
bound
fwait
inc
shlb
out
or
scas
mov
int
lds
mov
xor
movsl
jge
adc
mov
cmc
or
xor
mov
push
sub
pusha
jo
mov
aas
add
adc
mov
pop
lret
sarl
lods
inc
sbb
mov
inc
scas
arpl
inc
push
pushf
aas
sbb
dec
dec
xor
cli
cvtdq2ps
mov
mov
pop
pop
andl
sub
inc
push
int
sbb
aas
mov
roll
sbb
nop
gs
pop
out
sub
push
mov
iret
cmp
js
aas
int3
mov
je
out
xchg
add
in
mov
fnsave
jp
sbb
mov
mov
mov
cmpsb
shll
outsb
loopne
fistps
rcrb
dec
sbb
add
mov
cld
pop
andnps
fcompl
pop
je
push
mov
mov
outsb
xchg
mov
xchg
sbb
shlb
pushf
push
pop
jl
pop
push
xchg
dec
aam
push
das
mov
pusha
cmpsl
mov
lahf
movsl
test
mov
xlat
mov
sti
sbb
or
inc
test
ds
leave
sbb
cmp
pop
loope
dec
inc
cmp
dec
push
hlt
xorl
pushf
popf
dec
mov
cld
lcall
lock
pop
lret
fistps
in
inc
sbb
jle
pop
xchg
adc
mov
sbb
cmpsb
inc
mov
ds
jmp
lods
push
repnz
mov
sbb
adc
pop
loope
cmovns
xchg
call
aam
push
inc
ss
dec
scas
out
out
and
sub
mov
out
sub
jo
cmp
mov
cmp
or
and
pop
push
sub
insl
iret
ljmp
bound
adc
push
js
out
clc
jg
out
mov
sti
adc
out
shl
lds
sbb
xor
fidivrs
pop
adc
cwtl
jb
fcompl
xor
popa
sbb
js
or
sbb
jb
jle
iret
inc
fists
pushf
shrb
shr
or
and
jle
fcmove
xor
iret
xchg
jg
jno
or
mov
mov
mov
pop
sub
int
dec
mov
int3
jbe
shll
sbb
pop
rcrl
icebp
jns
add
iret
scas
testl
or
sti
mov
inc
mov
lret
add
nop
mov
lret
mov
push
out
frstor
xchg
and
push
sbb
icebp
and
mov
jg
movsl
add
data16
and
pop
xor
iret
fucomi
xor
sub
out
mov
scas
btr
sbbb
and
and
repnz
sub
cmp
mov
subl
dec
pushf
ss
and
sahf
sub
jnp
mov
lret
dec
mov
inc
vmovdqu
mov
cmp
push
lods
jge
lcall
inc
in
and
movsl
imulb
inc
mov
ja
sbb
leave
mov
ja
cltd
jnp
adc
stos
cmpsb
xchg
sbb
cmp
jp
fildl
sbb
sub
mov
jo
ficoms
stc
sbb
jne
mov
lods
inc
in
test
pusha
xchg
ja
jg
push
call
leave
push
cmp
and
xlat
movsl
rorb
leave
das
mov
addl
pop
outsl
jle
lods
movsb
aaa
or
inc
imul
pop
jbe
sub
pop
xor
and
pop
mov
push
or
pop
mov
addr16
sbb
mov
xchg
xor
pop
push
jge
fwait
in
and
jg
cmc
mov
je
add
xchg
movsb
mov
pop
add
or
roll
jecxz
jno
or
rorl
xchg
jbe
shlb
pop
test
adc
das
xchg
mov
pop
mov
js
out
xchg
int3
std
mov
das
jecxz
cmp
jbe
ja
test
insb
ljmp
insb
jecxz
push
jg
call
idivl
aas
fnsave
dec
or
stc
jmp
fwait
stos
jb
or
std
lea
mov
jl
pop
mov
xchg
sub
rorl
dec
dec
jbe
push
sbb
ljmp
out
jo
pop
nop
mov
xor
fmuls
fwait
ja
adc
lret
pop
pop
sbb
in
pop
nop
cmpsl
dec
cld
imul
adc
test
dec
es
mov
sub
mov
sub
outsb
xor
shll
insl
sbb
xchg
enter
out
aaa
dec
clc
test
mov
fildl
and
repz
das
mov
lahf
mov
in
leave
mov
pusha
imul
aas
rcl
outsl
mov
out
adc
push
jl
scas
sbb
inc
push
and
xchg
imul
pop
adc
adc
mov
imul
mov
add
inc
movsl
fldcw
inc
cmpsl
mov
sub
and
xchg
das
jmp
in
push
inc
movsl
enter
pop
xchg
mov
ret
fnsave
cmp
cmp
insb
test
les
xchg
sbb
es
cltd
jle
mov
dec
lock
ljmp
push
jle
mov
mov
inc
ljmp
or
mov
ror
and
test
xchg
inc
imul
mov
lahf
fidivrs
loopne
pop
lcall
and
sbb
sub
mov
adc
pop
adc
dec
lcall
cmpsl
enter
xchg
push
mov
ret
add
mov
out
jbe
pushf
cmp
adc
test
out
je
pop
push
pop
and
mov
mov
sarb
mov
mov
adc
out
mov
das
pop
xor
xor
sbb
cwtd
dec
sub
dec
inc
das
jl
push
fcomps
in
aad
sbb
sub
or
cmc
cld
lret
mov
aam
mov
in
xor
stos
cmpsl
adc
xchg
mov
lret
fldcw
and
adc
jle
or
jno
testb
fs
jbe
les
cmp
push
push
pop
mov
inc
outsl
mov
daa
cmpxchg
ret
pop
cmp
and
jbe
lods
leave
sahf
pop
sbb
scas
mov
jnp
jle
jp
fwait
pop
cmp
push
lock
dec
loope
daa
or
mov
cmp
and
sbb
and
into
dec
add
movsl
mov
mov
or
push
ss
outsl
jg
roll
ftst
in
pop
pop
jg
pop
aam
lahf
cmp
sbb
and
pop
pop
xor
rorb
movsb
cs
jo
gs
inc
dec
push
mov
sub
lds
cld
icebp
dec
xchg
addb
outsl
ljmp
push
sarl
nop
ret
push
push
mov
outsl
push
pop
mov
and
add
mov
jecxz
sbb
add
xorb
pop
gs
clc
mov
fisubrs
enter
cmp
bound
mov
cmp
shl
hlt
cs
cmpl
stos
mov
inc
xchg
lock
imul
sub
mov
cmpsb
sub
mov
out
mov
in
add
adc
mov
dec
xchg
pop
or
jge
fmull
and
fcomps
adc
into
push
aas
jo
arpl
lock
jno
or
lods
std
aas
out
in
imul
ds
ss
or
mov
int3
mov
fsubl
push
ja
adc
mov
adc
int3
and
ret
es
xchg
cmpb
dec
in
stc
push
adc
out
stos
mov
xor
inc
sub
fdivrp
aad
mov
into
shll
andl
or
shlb
movsl
sbbl
push
jae
adc
mov
pop
add
cmp
shlb
roll
sub
xlat
jl
inc
imul
jge
loopne
fucom
loopne
sub
arpl
adc
xlat
inc
adc
cld
icebp
std
lret
dec
sub
fwait
rclb
jmp
sub
jp
aad
push
mov
gs
lcall
push
cmpsb
push
cltd
adc
iret
out
cmp
xor
cli
cmp
aas
mov
aam
push
xor
sbb
call
fs
adc
inc
or
jno
or
out
adc
or
hlt
mov
sub
cmp
mov
fmulp
cwtl
add
repnz
hlt
dec
test
mov
jno
mov
enter
push
jae
mov
adc
out
pop
rorb
das
movsb
fiadds
xor
nop
shlb
and
xchg
std
nop
pop
imul
sub
xchg
lea
push
mov
scas
cmp
mov
and
iret
xchg
mov
es
jbe
xor
jbe
aad
mov
movsb
ret
pop
mov
popa
xchg
fwait
sar
xchg
dec
inc
aas
outsl
adc
les
sub
and
ljmp
jge
and
push
mov
dec
add
jmp
into
arpl
idiv
movsl
mov
adc
dec
inc
xlat
jl
popf
faddp
mov
add
lret
insb
sub
jecxz
decb
or
ss
cli
mov
sahf
arpl
outsb
pop
nop
scas
es
icebp
xor
sbb
cmp
iret
into
in
enter
cmp
insb
emms
jo
cmc
cmp
xor
add
xor
fs
subl
add
sti
pop
out
xor
popf
sahf
repz
push
repz
fsts
mov
push
sbb
pop
pushf
cmpsb
sub
popa
inc
pop
aaa
inc
jno
push
mov
mov
jb
mov
inc
xchg
push
pop
les
xor
ret
loop
sbb
pop
fisubs
mov
test
cld
jno
inc
jecxz
outsl
mov
out
mov
jge
cmp
dec
xor
mov
std
push
fucomi
inc
das
mov
jl
xlat
insb
pusha
add
leave
mov
adc
ljmp
rcrb
xor
xchg
fimuls
out
out
sub
nop
sub
lds
push
or
adc
idivb
mov
jge
or
jp
push
scas
jecxz
mov
out
jno
sti
jp
fwait
xor
mov
fs
mov
push
mov
pushf
repz
popf
sahf
pop
pop
mov
mov
mov
bound
insl
stos
add
inc
test
mov
push
mov
jns
nop
mov
in
dec
mov
pusha
mov
shlb
rcrb
xor
pop
addr16
inc
push
push
adc
into
stos
inc
jg
and
cld
daa
lahf
mov
mov
stc
ret
mov
xor
icebp
xor
das
cmp
call
jae
inc
scas
imul
push
pushf
mov
push
mov
in
jge
sub
in
xchg
ss
aad
push
push
cltd
cmp
mov
mov
jp
dec
mov
stos
inc
mov
insb
pop
mov
aas
cmp
bound
push
sbb
fisubl
or
mov
fs
xor
mov
xchg
or
push
jne
jb
lods
jl
jo
rcr
push
cmpsl
cmp
jge
pop
xchg
out
and
outsb
mov
leave
cmp
xchg
cmp
dec
int3
sbb
call
stos
std
jmp
sub
push
mov
mov
and
pop
xor
or
sub
cs
dec
fcoml
jno
test
sub
jbe
js
icebp
movb
sub
cmp
ss
loope
rcll
rcrb
pop
cld
inc
mov
xchg
rsm
cld
ja
scas
shrl
lods
std
daa
loopne
xchg
push
aad
test
cmpsl
lods
mov
jmp
leave
jo
lcall
adc
adc
mov
mov
iret
leave
adc
insl
rcll
ljmp
xor
xchg
sbb
push
xor
cmp
das
xchg
pop
push
jno
in
es
lahf
fdivrs
cmp
mov
add
push
mov
jns
inc
fbstp
das
pop
or
add
fimuls
xor
mov
orl
bnd
ljmp
pop
sub
fistpll
pop
loop
incb
xchg
mov
add
push
jge
pop
jg
adc
cmp
inc
out
repnz
fists
sbb
mov
cmp
repnz
test
lcall
mov
call
divb
test
mov
or
push
dec
js
add
mov
fstpt
mov
push
push
mov
push
test
ret
sarl
roll
cmp
lods
or
ss
pop
popf
mov
les
outsl
faddl
xchg
sti
push
hlt
add
xor
add
jmp
pop
int
mov
jne
cwtl
cmp
dec
loop
pop
push
jp
xor
or
shll
add
or
lods
dec
cli
aam
dec
subl
ss
std
jne
add
nop
pop
fisubl
lahf
rcll
nop
pop
lret
sti
ret
bound
push
sbb
jp
push
lret
cltd
popa
push
sbb
aam
test
lds
and
ficomps
sbbl
mov
ficoml
dec
push
imul
test
cmpsb
push
mov
jne
adc
add
mov
jg
lret
ret
loop
loop
imul
push
adc
pop
jl
enter
add
or
xchg
inc
icebp
xchg
fdivl
dec
pop
or
out
das
mov
dec
movsl
dec
sbb
sbb
add
aaa
pop
sarl
js
mov
insb
pop
sar
jno
cmp
dec
dec
mov
add
inc
push
jmp
cli
loope
and
dec
outsb
pop
xchg
sbb
jns
mov
pop
inc
sbb
sbb
add
push
out
stos
cmp
sti
in
icebp
xchg
in
dec
xor
xlat
fdivs
sbb
jns
push
inc
cmpb
aad
and
outsb
jp
cmp
xchg
add
xor
and
push
dec
fstl
testl
sahf
aas
xor
xchg
in
mov
push
pop
lret
and
mov
dec
fisttpl
cmpsw
xchg
aam
inc
movsb
pusha
pop
in
dec
call
pop
xor
mov
inc
add
or
out
push
es
xor
push
testl
inc
mov
jnp
loope
outsb
cmp
inc
push
jl
fldenv
rol
repz
pop
cs
leave
clts
push
dec
insl
mov
mov
xor
pop
jb
into
imulb
movsl
fisubl
pushf
inc
insb
mov
addl
xor
mov
or
inc
test
cmpsb
inc
push
xchg
mov
icebp
repnz
testb
jl
add
mov
pop
and
push
imul
pop
or
mov
hlt
into
and
push
sbb
mov
sbbl
mov
ds
lock
xchg
xor
xor
cmp
push
add
fimull
repz
mov
or
pop
mov
cmp
stos
rcrb
rolb
cmp
rcll
movsl
jg
lds
dec
jae
mov
shrl
pusha
fsubl
incl
mov
imul
rol
loop
sub
cltd
imul
mov
xor
jbe
sub
cmp
pusha
push
aas
xchg
cmpsb
pop
ficoms
add
sbb
movsb
sti
ss
out
push
mov
sub
mov
adc
sbb
sbb
pop
mov
adc
shl
sahf
inc
loop
fwait
push
cltd
mov
sahf
cmp
and
push
fildll
adc
sbb
push
nop
repz
mov
scas
or
mov
out
add
cmpb
arpl
inc
scas
cs
roll
cmp
inc
outsb
pop
lods
popf
cmp
and
mov
cmpsl
push
dec
xor
cs
and
loopne
std
inc
rolb
shll
inc
or
lret
lret
cmp
into
mov
add
fwait
pushl
cmp
and
fcomp
pop
out
jge
cmp
jmp
cli
pop
out
xchg
xlat
jb
aad
stc
rorb
add
inc
ficoml
mov
fisubrs
ss
cmp
xchg
sub
lds
jge
and
cmpsl
cmpb
mov
add
and
push
jle
and
sub
nop
jg
dec
stc
out
mov
sbb
enter
popa
je
inc
inc
insl
pop
cmp
fldpi
stos
adc
inc
mov
dec
dec
movsl
int3
loop
neg
stos
mov
cld
popa
nop
sbb
cmp
cmpsb
ss
jns
xchg
mov
icebp
jle,pt
imul
adc
and
nop
lods
mov
in
mov
mov
daa
jp
push
rcrl
out
and
dec
aam
cmpsb
xchg
dec
jmp
cld
mov
int
aas
adcb
inc
insb
movsb
imul
xchg
aaa
stos
pop
sub
or
loop
cmpsb
fs
loop
mov
jno
mov
jne
push
in
rorb
subb
nop
andb
mov
int3
inc
lock
call
dec
test
or
xor
addb
adcl
mov
push
push
rorb
testw
dec
add
aad
mov
sub
aaa
mov
nop
pop
xchg
push
imul
sbb
testb
lret
cmpsb
sbb
or
fcmovnu
push
dec
cld
jne
dec
adc
mov
inc
inc
xor
iret
outsb
addr16
xor
into
js
mov
jg
or
stc
add
dec
movsl
sub
mov
sub
pop
fidivrl
add
cmp
xor
push
xor
ss
inc
stos
call
dec
sbb
push
jmp
dec
and
jg
outsb
mov
cmp
aad
mov
leave
int3
mov
jl
add
jp
jb
pop
cmp
mov
aas
sbb
push
lcall
std
insb
xchg
jle
dec
in
cmc
outsb
sub
mov
cld
and
dec
loop
pop
cmpsb
mov
pop
test
fbstp
in
or
lcall
sub
adc
in
sbb
mov
mov
je
jno
iret
add
add
adc
cld
inc
gs
cmp
call
xchg
les
dec
sbb
cli
roll
insl
push
out
mov
jno
sub
faddp
xchg
sarb
in
mov
outsl
mov
repnz
popa
jmp
aad
inc
test
in
mov
setp
or
loopne
fstpt
das
iret
xlat
cmp
ljmp
cmp
xor
push
adc
in
add
popa
mov
das
test
mov
xorl
mov
push
lret
mov
insl
lret
imul
cmp
sbb
adc
mov
cmpsl
and
adc
mov
shlb
scas
loop
mov
push
sub
inc
mov
mov
cmp
pop
imul
xlat
adc
addb
pop
dec
dec
test
mov
xchg
icebp
adc
fwait
pop
and
xchg
push
sub
add
imul
insb
sub
mov
jg
push
and
push
jne
adc
and
push
lock
sbb
aad
pop
movsl
popf
sbb
dec
stos
ds
dec
es
xchg
push
cmpsb
cli
lahf
cmp
xchg
inc
push
add
add
mov
xor
lcall
scas
cmp
jle
dec
xor
pushf
jp
sub
pop
fstl
in
ds
mov
mov
lret
adc
and
arpl
xor
jmp
mov
xchg
pop
rcll
xor
dec
jg
mov
adc
adc
sahf
mov
sub
mov
jns
scas
aam
fildll
and
xchg
jecxz
xchg
test
cmpsb
mov
decl
xor
sahf
sbb
test
fcomip
fsubrl
test
inc
aad
lret
js
hlt
jmp
mov
shlb
xor
sbb
stos
insb
ss
mov
cmpsl
aad
jbe
fdivrs
ret
mull
and
stos
push
data16
dec
push
or
rclb
adc
pop
and
inc
stos
xor
pop
in
or
add
pop
cmp
cmp
xor
das
mov
add
repnz
rcrb
cmp
fadd
in
sti
mov
imul
dec
mov
dec
pop
pop
ficoms
inc
bound
dec
jle
mov
pushw
or
icebp
mov
sahf
neg
mov
jb
jb
cmp
adc
push
stc
jae
mov
mov
gs
dec
aam
add
sbb
insb
mov
push
jae
xlat
mov
stc
push
lret
mov
rcrl
cmp
xor
dec
jno
dec
nop
xchg
stos
shrl
xchg
out
cli
sub
jbe
cmp
adc
mov
and
dec
push
adc
ds
icebp
cwtl
hlt
mov
outsb
sbb
xor
test
xor
xor
cmp
jmp
push
js
sbb
ret
rcrb
mov
sbbl
cli
add
dec
insl
mov
les
in
jge
lds
jl
loop
push
and
dec
enter
rcrl
imul
jecxz
xor
lahf
mov
pop
test
int
lret
push
mov
inc
mov
and
add
pop
ja
mov
inc
push
sbbl
inc
gs
mov
in
jno
lock
xchg
adc
mov
lock
jno
repnz
pop
mov
test
xor
push
and
dec
mov
rcrl
mov
pop
scas
ja
push
rcr
mov
push
movsb
daa
mov
fstl
xor
add
sbb
add
adc
xchg
aas
scas
xchg
test
outsb
jmp
int
add
jmp
loop
sbb
ja
jae
push
lock
sbb
ljmp
cs
mov
jmp
call
pop
adc
xchg
push
add
std
push
test
pop
mov
into
push
sbb
sbb
aad
mov
hlt
jg
fiadds
bound
cvtpi2ps
inc
out
jl
inc
dec
loop
and
mov
cmp
jge
cmp
decb
mov
cs
xchg
xchg
insb
ss
aaa
les
jnp
push
lahf
jp
stc
cli
or
xor
pop
lds
inc
cmp
mov
adc
fs
fistpl
xchg
stos
push
dec
fwait
xchg
fs
cmovnp
enter
inc
or
bound
arpl
filds
test
mov
mov
jp
mov
mov
push
dec
push
fists
lahf
aad
mov
mov
mov
sub
push
xchg
ja
icebp
loop
mov
mov
fbld
in
adcl
shl
lods
pop
inc
jmp
and
and
pop
lds
push
clc
ljmp
out
pushl
cmc
adc
mov
loop
in
pop
pop
andl
adc
xor
and
add
xchg
leave
xchg
push
cwtl
fisubs
jae
popa
jmp
ffree
fidivl
mov
movsb
sbb
dec
data16
repz
shll
adc
push
pusha
xlat
inc
jns
dec
out
push
pop
testb
inc
imul
adc
inc
je
inc
rol
mov
jae
jle
pop
popa
sti
cmp
out
stc
gs
mov
lea
adc
xchg
testl
test
sub
mov
mov
sbb
lcall
adc
cltd
cltd
std
dec
ja
movsl
fsts
jo
rol
cvtdq2ps
in
call
test
cmp
jne
in
cmp
sbb
into
jmp
mov
mov
je
xlat
insb
enter
push
jnp
adc
roll
divl
scas
mov
jo
div
dec
mov
out
or
inc
xchg
push
dec
mov
mov
stos
sahf
push
adc
imul
out
pop
div
adcb
clc
subb
adc
push
sbb
pop
or
in
bound
jle
xor
adc
cmc
js
jle
or
add
out
or
dec
cltd
jp
cmc
into
hlt
mov
clc
xor
addl
pop
jnp
jl
shl
jno
iret
out
mull
jns,pt
add
cmp
fwait
mov
xor
stos
inc
aaa
xlat
adc
ret
lcall
sub
adc
jbe
loope
fabs
cmp
dec
movsl
out
add
stc
mov
mov
out
dec
xor
fistpl
xor
sbb
add
cmc
or
sti
or
sahf
add
decl
cwtl
cmc
gs
jnp
aad
loop
push
pop
divl
cmp
xor
sub
insb
pop
int3
addr16
imul
mov
outsl
in
roll
mov
sub
push
dec
mov
jne
test
lods
pop
adc
xor
jbe
lds
cmp
out
nop
out
xor
inc
test
repz
adc
rcrb
enter
push
clc
loopne
repnz
lea
decb
mov
inc
cltd
lret
or
mov
mov
jo
cmp
lock
repz
outsl
dec
inc
mov
or
dec
mov
mov
xchg
xchg
ja
pop
stc
inc
ud2
mov
lcall
mov
test
push
or
nop
leave
roll
imul
arpl
xorb
fiaddl
jno
inc
int3
cld
xor
movsl
insb
mov
xchg
mov
cmpsb
xchg
mov
adc
push
and
dec
mov
or
inc
das
jno
leave
lods
jp
mov
sub
and
mov
cs
cmc
and
mov
out
test
imul
sti
loopne
andl
daa
sbb
mov
pop
mov
xor
cmp
clc
lods
or
mov
test
cs
aad
outsb
sub
push
push
sub
aad
mov
mov
imul
sahf
imul
push
mov
mov
popf
aas
fiadds
push
sti
insb
repnz
ds
sub
mov
add
pop
clc
xchg
aas
push
test
push
and
rclb
insb
mov
ror
push
dec
dec
pop
dec
stc
dec
test
fistpll
and
lcall
cmp
lods
inc
int3
mov
or
adc
popf
sbb
mov
lcall
popa
insb
call
mov
xor
hlt
fwait
pop
out
ret
sahf
sbb
inc
fs
cwtl
int3
nop
pushf
fldenv
jnp
add
stc
aad
push
jecxz
or
sbb
or
cmpsb
pop
insl
lods
adc
pop
push
pop
iret
enter
and
push
adc
ficompl
or
je
lock
sbb
xchg
in
xchg
lahf
cmp
repz
inc
lret
scas
push
jp
cmp
mov
aam
mov
or
sub
cmpsl
fadd
inc
mov
int3
popa
push
movsl
xchg
and
cmp
inc
movsl
or
repnz
mov
or
ss
outsl
jb
adcl
push
sub
mov
push
iret
push
push
add
aaa
dec
and
add
jne
adc
lret
inc
aad
loopne
xchg
stc
popf
jp
scas
ds
jns
adc
cmp
inc
mov
lea
mov
mov
mov
repz
push
outsl
popf
imul
in
pushf
aam
mov
add
lock
add
xlat
jp
sbb
mov
fdivr
adc
push
sub
frstor
lods
rcrb
sti
pop
xor
fstpl
mov
sbb
xor
push
push
jae
int
bnd
push
jno
xchg
test
test
in
or
rcrb
dec
cmp
loop
hlt
fcoms
std
or
push
jns
sub
cmp
data16
mov
cltd
stos
das
cmpsl
cmp
bnd
rclb
jo
or
jmp
jge
popf
mov
lea
xchg
stc
out
dec
mov
out
enter
icebp
sbb
jbe
dec
sarl
fildl
mov
lcall
imul
daa
adc
cltd
sub
jns
test
inc
jno
fsub
nop
jle
mov
and
clc
pop
and
out
lds
mov
fs
fs
lret
dec
je
cmp
pop
mov
add
xchg
clc
pop
fwait
mov
xor
pop
push
movsl
cld
out
xchg
jae
push
add
les
sub
push
dec
push
fmull
ret
aas
xchg
addl
stos
sahf
or
pop
repnz
aad
ret
int3
inc
sbbl
jo
mov
xchg
sbb
pop
imul
popf
mov
loop
scas
jle
repnz
sti
icebp
push
and
dec
in
ret
sub
leave
out
flds
mov
inc
dec
and
aam
fsubr
sahf
out
mov
loopne
out
adc
cmp
out
scas
outsb
out
and
outsl
ret
cwtl
xchg
jo
adc
cmp
push
pop
mov
das
jo
leave
dec
out
and
mov
nop
mov
int3
pusha
adcl
xchg
insb
insb
mov
mov
pop
xor
mov
stc
aad
test
add
fadds
push
mov
adc
sub
push
dec
iret
lods
int3
ss
jl
pop
mov
fisubl
lahf
daa
out
adc
in
or
outsl
or
jecxz
jnp
add
pop
mov
push
fisttpl
cmp
pop
jl
or
jbe
in
test
stos
lock
movsl
mov
lahf
movsb
daa
fdivr
xchg
cmpl
sbb
loope
jmp
adc
xchg
xor
lret
jb
inc
push
push
sbb
jmp
xchg
inc
dec
adc
pop
mov
lcall
loopne
inc
xchg
xor
into
xchg
pop
rcll
mov
mov
int3
xor
arpl
int3
call
dec
push
clc
sbb
dec
inc
es
stc
inc
adc
mov
test
inc
xlat
aam
cmpsl
divl
adc
rcrb
aam
xchg
jp
dec
push
inc
push
insl
xor
imul
insb
nop
popf
cltd
mov
dec
mov
sub
dec
aaa
outsb
adc
sbb
fsubr
adc
lods
in
bound
or
and
and
iret
dec
xchg
inc
jl
dec
ret
cmp
setnp
stos
test
xor
je
mov
add
fs
aaa
out
mov
pop
push
adc
stc
repnz
add
jae
jo
xor
xchg
xchg
xor
inc
popf
push
lcall
xchg
rclb
dec
dec
es
mov
je
jne
cmp
aaa
imul
adcb
mov
sti
inc
imul
push
cli
add
stos
popl
sti
push
clc
jbe
repnz
cmp
xchg
push
out
enter
xor
stos
test
lods
inc
xor
add
aaa
add
out
pop
insb
cld
loop
mov
mov
sti
xchg
fwait
inc
enter
push
cmp
in
cmp
mov
xchg
pop
addl
andl
std
sbb
push
into
movsb
out
dec
sbb
pop
out
or
out
icebp
inc
notl
and
imul
fcomps
stos
mov
jne
outsl
dec
dec
jp
xchg
inc
mov
stc
movsb
inc
mov
or
pop
xchg
fisubl
fwait
sti
mov
xor
xlat
pop
arpl
cmp
push
and
inc
gs
outsb
inc
fldenv
daa
inc
loopne
cmp
lods
inc
popa
jne
popf
pusha
pop
sub
push
movsl
test
aad
popf
movsb
jne
negb
popf
cli
xlat
out
xchg
xchg
ds
lea
xor
mov
negb
lods
add
inc
push
test
pop
testb
aad
and
and
je
ret
mov
loope
out
enter
les
mov
scas
sub
add
xor
jp
into
jae
or
int3
pop
pop
dec
mov
pop
lds
add
mov
mov
add
lds
pushf
sbb
push
je
and
sub
ficomps
mov
pop
add
lock
into
loope
push
inc
mov
les
pop
cmc
lea
fbstp
bound
xor
inc
sbb
jo
out
sbb
or
shll
mov
imul
call
dec
sbb
lods
inc
jmp
jns
or
sub
lcall
xor
sbb
mov
loope
daa
sub
xchg
int
xchg
in
pop
adc
sub
mov
inc
sub
sub
scas
shrl
push
cmc
es
loopne
addr16
sub
nop
or
lret
jle
adc
notl
cmpsb
rcl
addl
das
push
andb
ljmp
rcrl
loope
decb
sahf
sub
fs
movl
ljmp
movlps
pop
or
sahf
add
xor
push
cmp
loope
push
pop
adc
lds
insb
jno
lret
aaa
scas
pusha
in
cltd
out
mov
ds
pop
jge
jb
pop
cmp
cltd
adc
imul
adc
orl
push
out
mov
and
add
vpunpckhwd
fstpl
cmp
push
out
mov
mov
mov
rorb
hlt
xor
xor
sub
lcall
dec
rcrl
cmp
fs
xlat
mov
cld
aas
fmull
xchg
imul
cmp
stos
repz
pop
add
add
add
jge
in
aad
inc
pop
mov
mov
int
push
popf
hlt
sub
push
xchg
call
xor
cs
cmpl
xchg
lock
add
es
or
in
cld
dec
sti
ret
repnz
jne
sub
jnp
scas
jl
popa
xor
jp
lcall
inc
les
cmp
push
add
repnz
jmp
mov
sbb
sbb
ljmp
out
xchg
mov
das
jo
ficomps
xchg
jne
add
mov
xchg
xchg
aas
jge
cmp
orl
repnz
push
es
mov
sbb
aas
pop
adc
aam
jnp
push
jae
push
fnstcw
dec
cmp
xchg
mov
loopne
movsl
mov
cmc
iret
xor
loope
cli
and
ljmp
add
add
sahf
adc
add
add
xchg
push
lahf
add
jo
mov
mov
testb
das
cmp
arpl
fstps
repz
lock
scas
popa
fwait
outsb
mov
sbb
mov
pop
sbb
adc
outsb
cmpsl
divb
int
fstpl
andb
std
outsl
stos
lret
dec
gs
out
aad
mov
jmp
dec
inc
lret
cmp
stos
dec
push
pop
jge
mov
outsb
inc
xchg
inc
add
pusha
adc
jp
repnz
addl
or
inc
adc
mov
inc
adc
call
and
cmpsl
rolb
mov
xlat
mov
xchg
jge
xchg
xlat
fstps
mov
jp
popa
ljmp
push
xor
cmp
push
add
or
das
lahf
adc
outsb
mov
mov
out
test
repnz
inc
fstpt
scas
push
dec
push
pop
mov
pop
rcll
dec
shlb
test
jnp
insb
inc
shll
sbb
out
jmp
bound
xor
fstpt
sbb
push
scas
and
rcrl
imul
pop
lods
ret
lcall
sub
mov
dec
sub
jge
mov
ds
xchg
or
xor
scas
mov
lahf
rclb
imul
adc
out
pop
cmpsl
jp
in
icebp
xchg
push
movl
in
cwtl
out
dec
and
ljmp
cwtl
jnp
xchg
xchg
test
pop
leave
arpl
adc
add
sbb
xchg
ljmp
lods
xor
std
cld
add
repnz
and
in
orb
dec
jp
push
push
cmp
xchg
movsl
outsl
mov
mov
pop
pop
rolb
iret
adc
pop
mov
dec
xlat
mov
shll
lahf
mov
add
pop
and
int3
fstpt
iret
out
and
lcall
cmpsb
cli
mov
cmp
jns
adc
or
sub
inc
scas
dec
jecxz
insl
loopne
in
fnstcw
adc
leave
rcl
xor
or
loope
or
mov
dec
or
lds
mov
push
adc
push
into
call
push
push
cmp
pop
or
shrl
insl
inc
filds
fnstsw
sahf
out
add
icebp
daa
std
popf
pusha
data16
repnz
test
add
xchg
or
orl
push
cmp
push
xchg
das
fsub
mull
xchg
out
jmp
xchg
push
stos
aas
andb
mov
xchg
jne
cmp
xchg
push
cwtl
jmp
lods
push
mov
insl
xchg
add
fsubrs
stos
lcall
inc
cld
xchg
add
aaa
xor
jbe
int3
mov
cmp
mov
xchg
jns
ds
pop
fwait
out
popa
adc
ljmp
pop
jge
js
and
adc
or
fsub
mov
mov
outsb
mov
lock
fbld
hlt
add
mov
loope
push
mov
lock
gs
jne
dec
and
xlat
data16
jmp
test
loopne
pusha
insb
xchg
mov
pop
or
dec
mov
ja
sarb
add
dec
pop
cltd
sbb
addr16
mov
lret
bound
movsl
leave
nop
mov
fmulp
and
adc
cli
cltd
mov
mov
mov
outsl
in
fiadds
jmp
test
mov
cs
adcl
les
push
inc
push
popf
and
je
and
fldt
xchg
addr16
lcall
ret
fiaddl
sub
mov
jns
dec
add
add
inc
mov
push
xor
pop
test
mov
lock
or
push
inc
mov
sbb
push
pop
shlb
ret
outsb
xlat
pop
stc
xchg
inc
or
std
les
insl
cmp
sbb
pop
add
push
cmp
enter
cmp
adc
int
cmp
repz
mov
mov
push
and
gs
popf
cmp
fbstp
mov
dec
inc
popa
sti
mov
mov
push
push
sti
jge
cs
clc
daa
lret
out
dec
ret
cmp
pop
mov
xchg
jcxz
xchg
enter
dec
cmpsl
mov
add
jmp
aam
or
imul
pusha
lahf
jne
mov
mov
pop
and
test
xchg
in
nop
cli
dec
popf
sbb
mov
xchg
outsb
dec
fisttpl
or
and
xor
roll
andb
rorb
in
popf
test
stos
lods
push
jge
xor
sub
jns
jmp
inc
push
ret
sbb
sarl
insb
add
fmuls
jb
xchg
jno
pushf
or
rorl
mov
pop
int
jns
addb
je
fs
pop
cmpl
dec
jle
pop
test
pop
in
cmpsb
sahf
jg
pop
aam
cld
jg
or
sbb
and
mov
inc
in
mov
imul
pop
push
cmp
jg
cmp
adc
addr16
adc
addb
xor
aaa
das
outsl
shrl
lock
stc
pop
aad
jmp
into
mov
mov
push
xchg
aaa
add
cmp
jns
insl
popa
push
cmpsl
cmp
xchg
mov
mov
push
loopne
jae
cmp
push
adc
lock
addr16
xor
xchg
add
pop
xchg
xor
ret
pop
gs
xor
movsl
xchg
iret
mov
popf
inc
mov
enter
orb
iret
mov
arpl
lret
clc
bound
cmc
and
mov
jne
mov
push
push
push
roll
mov
push
mov
arpl
dec
or
ss
jbe
pop
data16
push
or
imul
cmpsl
add
jnp
in
ret
int
out
mov
fs
xor
dec
ficoms
adcb
imul
leave
adcb
jnp
inc
fisttpl
cli
fldenv
cmc
jb
lcall
adc
pop
sbb
sbb
fistpll
mull
mov
push
mov
xchg
in
fdivrs
push
sub
mov
rol
add
xchg
andl
adc
push
rcrl
inc
shll
jbe
cmp
outsb
daa
sub
fwait
cmp
scas
push
mov
cs
push
mov
cmp
cwtl
mov
cmp
rcrl
add
fmul
jns
mov
pushf
sub
or
sbb
jmp
sti
cmpsb
mov
data16
sub
imul
lods
cmpsl
lret
adc
xor
cmp
jns
ret
cmp
xor
cmovbe
adc
and
out
idivl
xchg
adc
mov
test
pop
loopne
bound
jmp
jbe
das
adc
inc
jge
movb
sbbl
pop
popf
push
xchg
scas
cwtl
hlt
fidivrs
nop
xor
add
gs
and
add
jp
push
and
sahf
jbe
inc
dec
mov
out
fmull
rorl
or
pusha
sbb
sbb
sarl
enter
and
add
notl
sub
lods
hlt
loope
or
popa
or
lock
cld
loope
pop
dec
aaa
sar
scas
addl
dec
fisubs
fucomp
dec
sub
xor
and
inc
sti
hlt
inc
outsl
and
in
cs
sbb
das
sbb
popf
nop
out
and
cli
popf
cld
jne
add
sbb
cltd
push
daa
movsl
inc
xchg
inc
sbb
lods
xchg
sbb
mov
jb
int3
pushf
add
fs
lods
repz
int
mov
sbb
leave
in
testb
dec
jns
push
jb
jns
mov
mov
in
add
jbe
repnz
mov
insl
push
jbe
mov
arpl
cmp
and
cli
xor
mov
cld
out
rorl
lods
jl,pt
xchg
outsb
inc
pop
scas
or
cmp
jle
sub
mov
jecxz
cltd
mov
fldl
out
inc
sbb
int3
jmp
mov
sub
or
test
lea
mov
or
push
mov
icebp
cmp
sub
addb
xchg
ficoms
dec
push
fs
movsb
les
sub
jp
adc
fdivr
jb
rcrl
xor
sbb
pop
mov
xchg
test
sub
or
sbbb
lret
scas
cmpsl
in
in
mov
out
inc
sbb
xor
andb
lret
push
cmp
xor
dec
dec
sbb
xlat
mov
xor
xlat
add
roll
insl
or
aas
nop
push
lret
fdivs
mov
jmp
adc
adc
mov
xchg
jno
inc
sub
lret
xor
adc
test
es
cld
jg
mov
xchg
repnz
xor
xchg
adcl
push
into
je
aam
dec
inc
ss
and
mov
pusha
xchg
fistpl
push
xchg
pusha
out
adc
cs
xchg
jmp
xor
cmp
dec
repnz
je
jbe
cmp
mov
mov
xchg
add
cli
add
push
sti
cmpl
xor
push
jbe
push
or
ja
pop
or
outsl
cmp
add
pop
hlt
dec
mov
dec
pop
imul
push
test
pop
in
imulb
pop
in
inc
in
sti
mov
ss
sub
jae
cmpsl
andb
xor
les
mov
enter
xchg
fsubrs
push
nop
xchg
mov
cmpsl
xchg
sub
push
inc
and
imulb
fmul
mov
inc
mov
jg
decl
es
push
mov
mov
adc
dec
xor
inc
mov
repnz
pop
push
jecxz
push
add
xor
xchg
dec
xchg
adc
xlat
loop
notl
xchg
stc
dec
outsb
push
lds
ret
dec
adc
hlt
in
push
jo
push
pop
sbbl
sahf
jle
popa
mov
ja
pop
es
vcvtsd2si
mov
mov
add
lahf
mov
ret
lahf
sub
pop
or
test
in
mov
bound
xor
mov
in
orl
stos
add
mov
repz
jnp
mov
and
push
ret
jne
out
xlat
mov
sbb
pop
fistpl
notl
movsl
mov
inc
cmp
sub
insb
rcrl
roll
outsb
inc
xchg
cmp
pop
cmovae
inc
loopne
mov
movl
cld
stc
out
mov
mov
adc
dec
mov
and
push
push
add
and
cmp
mov
push
int3
fdivs
enter
pop
icebp
sub
sar
mov
add
and
lock
in
or
push
gs
repnz
movsb
lret
leave
mov
push
push
push
cld
nop
push
sbb
mov
push
rolb
dec
inc
outsl
cmp
xchg
push
sub
sub
data16
in
fisttpll
inc
mov
outsl
push
add
cmp
xor
imull
test
cmp
sti
call
adc
icebp
add
mov
inc
pop
stos
dec
fs
insl
test
mov
mov
subl
stos
jecxz
sub
cli
fildll
push
pop
sub
les
jo
dec
in
js
cmp
inc
add
xchg
int3
call
mov
mov
ret
dec
lds
addb
xchg
cmp
jae
cmp
xchg
ja
pop
pop
push
or
iret
stc
subl
mov
sbb
aaa
cltd
push
int
aas
pop
mov
in
add
addr16
ret
sbb
and
sbb
or
xor
cmp
push
repz
cmp
out
inc
dec
push
insb
rorl
or
dec
leave
inc
int
pop
jle
sub
orb
jl
je
mov
xchg
mov
nop
xchg
mov
add
sbb
sub
cwtl
jl
jg
sub
dec
xchg
test
mov
imul
int3
push
mov
ljmp
out
xchg
adc
push
and
cmp
mov
ret
mov
or
pop
shr
and
loop
in
sbb
jo
leave
mov
test
insl
sub
cmpsl
int
xchg
jno
jns
mov
mov
mov
mov
mov
fs
xor
cmp
into
dec
cli
xor
push
inc
test
pusha
or
cmp
add
into
repz
cltd
or
mov
scas
mov
shll
mov
dec
lods
loop
cwtl
lods
and
sub
pushl
mov
scas
js
sahf
add
enter
sbb
dec
mov
notl
je
sbb
xchg
shlb
jecxz
add
xchg
hlt
and
lea
test
ret
pop
movsl
sti
in
jle
add
div
mov
fsub
lea
xor
nop
pop
pop
sbb
push
dec
test
inc
adc
cmp
sub
call
in
sbb
lret
cmp
inc
add
mov
cmpsl
imul
out
mov
xchg
jne
shl
push
pop
cmpsb
fs
inc
mov
ficoml
xchg
inc
add
aas
mov
gs
dec
pop
into
push
fisubrl
xchg
movsl
lea
inc
mov
jnp
push
out
in
push
fnsave
sahf
aam
sahf
sub
push
mov
adc
popf
cwtl
xchg
sub
outsl
add
sbb
pop
scas
push
outsb
imul
lret
into
xchg
add
adc
sbb
cltd
popa
shlb
add
fldt
aaa
mov
in
xchg
mov
jg
je
dec
notb
xchg
jno
popa
ds
add
cmp
les
fidivl
gs
ss
xchg
xor
sbbl
inc
loopne
jbe
fdivl
xor
or
xor
fildl
cld
sub
cwtl
push
jo
nop
movsl
aad
adcb
cld
test
scas
pop
pop
xlat
cmpsb
aad
lret
cltd
movsl
xor
jno
in
nop
addb
lods
adc
push
shl
popa
xor
leave
into
sbb
int3
inc
xchg
sub
jmp
mov
lahf
sub
pop
daa
cmpb
out
or
lods
cltd
mov
cmp
rcrb
loope
cmp
jmp
adc
or
lods
ret
jbe
or
jg
cmp
and
cmp
sub
mov
shrl
insl
cli
test
cltd
jne
inc
xchg
jmp
mov
cwtl
lock
dec
push
pop
jbe
cwtl
add
fstl
mov
imul
ret
mov
cmpsb
mov
mov
imul
aas
mov
xchg
pop
shrb
push
ret
jo
fstl
fwait
push
xchg
dec
cmp
jl
mov
popa
data16
test
out
fsubl
sti
inc
adc
lea
adc
ljmp
ret
inc
out
arpl
jbe
jns
loopne
bound
pop
push
int3
enter
outsb
je
xchg
sub
and
js
sub
scas
sbb
mov
fcmovnu
fucom
add
mov
sbb
pop
jo
cmc
repnz
cmp
mov
pop
repnz
in
into
ret
je
adc
or
cmpsl
hlt
fsubs
xchg
mov
or
or
push
fistl
jbe
lret
mov
mov
scas
cmpsl
insb
in
aam
xor
cmp
sbbb
out
cmc
clc
fisubrl
or
xchg
xor
je
test
subb
arpl
into
movsb
out
cmp
push
into
jge
add
in
inc
inc
dec
mov
pusha
aas
cmp
std
push
xor
out
xchg
mov
xchg
ret
pop
mov
push
push
out
mov
jno
shll
shll
mov
jae
adc
in
inc
rcrb
cltd
mov
pop
fstpt
cmp
xchg
out
fldcw
mov
jp
jmp
lods
mov
pop
jns
mov
imul
cltd
ljmp
dec
fcmovb
mov
nop
mov
sarb
loope
add
mov
repz
leave
jecxz
rclb
adc
leave
call
jae
or
inc
and
cmc
adc
and
ss
jbe
mov
adc
dec
cmp
jns
sbb
fwait
js
mov
fiadds
aad
pushf
repz
popf
xchg
cli
in
inc
fiaddl
pop
leave
or
xor
jno
addr16
ljmp
fmuls
fiaddl
jmp
out
nop
sub
cmp
dec
test
test
insl
pop
mov
or
adc
xlat
add
jne
add
test
pop
adc
movnti
call
jb
lret
cmc
mov
lock
dec
pop
cmc
add
out
adc
inc
sbb
scas
leave
xor
or
cmp
ds
jmp
and
xor
sbb
jno
neg
sub
sub
jp
mov
add
int3
int3
jnp
rorl
cld
and
cmp
jo
add
cmp
mov
divl
cmpsl
inc
pop
sbb
adc
roll
xchg
and
push
add
add
mov
push
inc
jmp
mov
nop
in
mov
mov
mov
jnp
repz
lock
xchg
add
add
pushf
cli
sub
dec
icebp
out
outsb
jo
pop
loope
cmp
int3
sbb
xor
fildl
sub
sbb
xchg
mov
idivb
cmp
pop
push
je
subl
stos
pop
cltd
fidivs
lret
push
ss
out
or
mov
repnz
xor
rcll
fwait
pop
cmc
xchg
outsb
cwtl
jg
roll
aad
pop
aas
shll
js
and
movsb
test
adc
xchg
add
jg
sub
mov
push
mov
loop
mov
out
aaa
or
inc
nop
pop
repz
out
mov
push
inc
pop
pop
dec
pop
test
imul
call
adc
mov
mov
cmp
add
xchg
ret
aam
ret
push
je
mov
xor
and
popa
mov
sub
cmpsb
jno
jg
dec
cmc
jnp
int3
fsts
sub
adc
pop
sub
ret
hlt
push
sti
sub
cli
icebp
mov
icebp
sbb
mov
mov
ja
addr16
xor
pop
add
and
mov
cmp
loopne
mov
les
cld
stos
icebp
add
xchg
mov
ljmp
sbb
xchg
mov
mov
pop
inc
sub
xchg
sbb
push
stos
jae
aad
leave
into
aad
sbb
adc
jne
mov
mov
pop
rcrl
icebp
pop
mov
adc
jle
dec
mov
cmp
sbb
push
dec
push
add
push
call
imull
movsl
outsl
ds
mov
icebp
mov
sub
sbb
jl
pusha
hlt
lds
cltd
or
out
mov
outsb
jnp
dec
je
xchg
or
outsl
dec
cld
mov
popa
paddsw
aas
and
aas
mov
jmp
mov
scas
pop
jecxz
dec
fs
push
sbb
repz
rcr
call
mov
stos
jl
jl
push
mov
lds
mov
add
push
lahf
fadds
lret
out
jmp
or
push
xor
mov
mov
or
mov
mov
aad
cmpsl
xor
sub
loop
xchg
and
push
sbb
and
xchg
lea
daa
imul
mov
mov
mov
hlt
test
in
gs
ljmp
push
into
pop
in
int
xlat
rcll
pop
mov
aaa
and
mov
fs
and
in
mov
bound
inc
push
loopne
or
sub
shrd
sbb
sbb
test
pushf
push
inc
inc
add
fwait
in
pop
sbb
mov
enter
push
pop
and
cmp
xor
jns
scas
int3
xchg
fs
adc
xor
std
out
ret
sub
jb
int3
adc
pop
sbbl
pop
mov
pop
ror
aad
mov
gs
push
xchg
cmp
pop
fstpt
lret
mov
stc
jmp
mov
adc
in
mov
jle
inc
mov
lds
out
pop
or
arpl
adcl
lock
adc
or
inc
ds
xchg
push
mov
sub
xor
std
push
pop
int3
aad
cmc
push
and
add
and
sti
gs
sub
in
repz
mov
pop
cmp
pop
adc
movsl
aas
sbbb
pop
sub
jno
adc
fmull
xor
xchg
jae
sub
scas
push
test
out
loope
dec
es
call
adc
sub
inc
dec
mov
in
ret
adc
leave
insl
insl
cmp
mov
les
pop
stc
dec
jbe
ret
mov
xlat
xchg
or
jae
pop
ficomps
xchg
cmp
sti
cmp
cli
push
das
pop
mov
in
lahf
and
aaa
repz
jge
add
cmp
lcall
std
xor
adc
movsb
xchg
mov
jne
les
cwtl
cwtl
imul
mov
les
pop
inc
scas
lret
push
lds
pop
mov
movd
lds
adc
repz
in
nop
inc
outsb
jmp
imul
test
mov
push
mov
and
rorb
lods
cmpsb
adc
inc
stc
xchg
int
mov
mov
out
push
pop
int
jge
pop
jno
adc
mov
ds
push
pop
iret
sarl
test
cmpsb
clc
xchg
fsub
or
sahf
mov
jnp
jns
fwait
icebp
or
mov
xor
lea
push
std
jbe
adc
out
into
pcmpeqb
int
mov
test
jmp
dec
sub
loopne
frstor
jg
pop
pop
ds
xchg
fistl
dec
cs
adc
add
xor
mov
ret
cmp
popf
inc
cmp
ret
ss
xchg
out
jmp
in
fildll
out
pop
xor
subl
xchg
sahf
lds
loope
xor
push
jae
push
inc
test
dec
sti
jge,pn
sarl
sub
loopne
jno
mov
or
scas
dec
into
leave
sti
je
in
mov
ds
ds
dec
out
xchg
icebp
std
addb
mov
mov
jne
adc
or
pop
repnz
ja
push
jb
in
icebp
or
loop
jmp
roll
push
cmp
popl
pushf
rcll
inc
in
js
out
shlb
outsb
jmp
dec
push
xchg
outsl
dec
adc
stc
pop
stc
addb
adc
sahf
loopne
cmp
fwait
mov
push
pop
mov
fwait
decl
push
push
ffree
pop
mov
xchg
scas
mov
loope
dec
cmpsl
sbb
push
nop
mov
lahf
out
xorl
sarl
popa
dec
xor
mov
or
mov
test
mov
mov
or
jns
jle
mov
outsl
jb
stos
cmp
loopne
ljmp
push
insb
add
clc
mov
cld
cmp
mov
repz
repnz
xchg
cmp
inc
ficoms
mov
push
xchg
mov
mov
mov
lods
add
push
xor
and
loop
mov
hlt
xchg
sbb
lahf
or
dec
or
xor
js
sub
dec
fwait
inc
cli
cmpsb
mov
xchg
xor
dec
add
sub
jne
xor
push
lcall
xorl
gs
push
subb
adc
sbb
dec
fldcw
inc
loopne
or
jge
in
std
rep
sahf
je
mov
or
lahf
dec
sub
rcr
adc
push
sbb
mov
gs
push
pop
mov
xor
sbb
into
lods
fs
fsubrl
or
sbb
dec
popa
push
xor
bound
adc
and
test
lea
pop
add
into
sbb
js
pop
cwtl
aaa
xchg
imul
jnp
cmp
mov
ret
stos
fnsetpm(287
fildl
mov
test
loop
cmp
mov
rcr
outsb
daa
in
faddp
movsb
push
dec
fldl2t
push
ja
pop
push
xor
enter
jns
dec
pop
stos
sbb
lds
xchg
pop
sub
adc
sbb
add
mov
xor
inc
mov
scas
or
and
mov
xchg
lods
insl
adcw
fucomip
in
addr16
push
add
test
lds
or
mov
stc
and
and
cmp
repnz
adc
and
push
mov
pop
insl
insl
aas
mov
repz
cmpsb
adc
js
jno
sbb
outsb
jmp
mov
push
aam
and
into
mov
iret
sbb
nop
jecxz
dec
loopne
or
dec
push
pop
movsl
xlat
lods
xchg
pop
pop
or
push
dec
aam
rcrb
or
mov
outsb
fucom
xchg
xchg
or
pop
mov
es
iret
push
popa
js
mov
xchg
sub
out
jne
sub
pop
clc
add
in
cltd
aaa
mov
mov
add
loopne
adcl
add
insl
dec
lock
lea
shr
lock
loop
cmp
push
notb
and
dec
push
dec
push
xlat
xchg
imul
jge
jno
icebp
lcall
andb
lret
sub
push
and
pop
rcrl
cmc
mov
call
std
or
mov
ja
repz
pop
mov
dec
test
lret
nop
pop
dec
push
cli
jae
push
add
mov
lock
and
insl
imul
pop
cmc
in
sub
and
in
or
cmp
or
lcall
and
xchg
xor
sahf
lret
das
push
mov
insb
jl
sbb
jmp
mov
gs
and
pop
add
shlb
mov
push
xlat
dec
xchg
xor
int3
fsts
push
adc
jl
adc
mov
test
out
jnp
push
bound
lret
movsl
lret
xor
dec
jnp
push
jbe
shll
push
std
xchg
and
stos
jmp
pop
jo
ret
push
js
jl
cmp
stos
mov
test
lods
stos
cmp
loop
mov
icebp
rcll
pop
or
pop
adc
or
int3
bound
mov
mov
pusha
mov
mov
test
xchg
cmp
pop
cmpsl
dec
inc
popf
sarl
loopne
movsb
lcall
cmpsl
dec
and
mov
inc
aad
cmp
mov
inc
mov
and
insb
adc
es
jge
push
call
lret
in
sub
push
lods
add
mov
fists
sahf
pop
dec
cld
cmp
insb
ja
add
outsb
mov
push
adc
dec
jno
cmpsb
fwait
jae
inc
mov
jge
movsl
sub
cmp
lods
add
sub
icebp
add
js
xchg
stos
stc
mov
xchg
sarb
or
mov
inc
or
ret
addl
sti
fcoms
mov
mov
fstpt
aas
mov
out
fisubrl
cmp
xor
out
jg
jno
jnp
jns
jecxz
fs
inc
ret
aaa
lods
scas
lds
sbb
int
and
push
mov
in
inc
xchg
jg
lahf
pushl
mov
sahf
cltd
or
jmp
inc
xor
outsb
insl
xchg
imul
mov
push
data16
push
cmp
call
fimuls
repz
shl
push
nop
push
lods
repnz
pop
jae
por
int
xchg
test
mov
fwait
test
imul
jp
outsb
pop
cmp
jno
add
mov
sub
push
push
jp
icebp
fadd
shrl
bnd
test
sbb
or
pop
in
or
inc
dec
xor
cmp
imul
aam
xor
push
mov
les
cmp
jp
mov
mov
clc
cmp
sbb
scas
pop
mov
xchg
inc
fldcw
xchg
mov
push
mov
cmp
pop
jecxz
cmp
mov
loopne
testl
add
or
pop
test
xchg
rol
and
mov
call
pop
sbb
aam
andb
inc
andl
xchg
xchg
in
imull
jb
add
jge
jle
mov
test
xchg
std
loop
pop
pop
pop
push
sub
push
pop
fdivs
jmp
enter
aad
ret
pop
adc
sahf
test
adc
mov
pushl
fcoms
loop
out
xor
cmp
cmc
ja
jle
fmull
push
mov
pusha
cmpsb
jl
call
mov
mov
xchg
mov
push
out
mov
movsb
in
xor
aad
dec
adc
dec
pop
jp
or
sub
push
push
les
shr
mov
cltd
pop
mov
stos
and
mov
inc
push
movsb
ficoml
out
add
insl
jge
mov
sbb
add
pop
rcll
adc
fldl2t
fists
add
add
mov
xor
xchg
adc
fisttpll
pop
inc
outsb
in
imul
adc
jne
scas
push
xor
imulb
add
xchg
fcmovbe
sbb
xor
cld
sarb
shll
adc
mov
mov
inc
push
push
mov
xor
xor
and
sahf
add
cmp
jle
mov
imulb
fildl
test
push
push
adc
sbb
inc
jbe
add
bound
jge
arpl
subl
and
and
arpl
mov
adc
addl
imul
imull
pop
sub
pusha
push
out
push
and
pushf
push
adc
popa
pusha
or
dec
dec
movsb
dec
jne
out
cs
sbb
push
incb
or
mov
mov
into
cmpsl
mov
jno
xchg
sub
stos
and
pop
xor
inc
mov
ret
xor
out
or
cltd
inc
adc
ss
and
imul
lock
jne
inc
pop
out
nop
push
sbb
or
aaa
std
pop
adc
popa
fldenv
es
mov
mov
mov
cmpsb
add
and
pop
dec
aaa
or
out
push
loop
into
adc
or
lret
test
jns
xchg
ja
test
hlt
pushf
xor
add
cltd
sub
sbb
inc
ljmp
mov
add
xor
xchg
lock
dec
mov
aam
adc
jmp
pop
adc
sub
rcrl
pushf
pop
jno
std
imul
dec
cs
pusha
je
dec
mov
js
bound
mov
add
cli
fildl
test
int3
cmpsl
int
test
pushf
cmpsb
push
adc
test
jl
test
mov
mov
cmp
ficoml
imul
mov
jnp
fisttpl
cwtl
adc
fdiv
pop
dec
mov
ljmp
in
fwait
lea
into
xor
mov
push
mov
loop
outsl
xchg
cmp
movl
xor
add
and
jecxz
mov
mov
or
jne
ds
out
jne
mov
test
xchg
push
rcll
cmpsb
not
pop
cmp
inc
mov
mov
add
push
js
xor
les
clc
sub
decb
out
lods
jo
ja
outsb
pop
xchg
xor
das
xchg
daa
mov
cmp
out
lods
lret
mov
mov
dec
cmp
pop
sub
iret
hlt
dec
test
dec
cli
inc
je
add
fisttpl
inc
lret
add
and
xchg
cmp
loop
jl
mov
test
sbb
xlat
fwait
movb
jo
insb
dec
mov
mov
rorl
out
outsl
mov
call
movsl
xchg
rcl
jo,pt
pusha
inc
xor
add
daa
rorb
lcall
mov
inc
xchg
dec
je
adc
movsl
shlb
jl
xor
int
xor
cmp
lret
rcll
js
ljmp
mov
mov
loope
push
mov
lds
push
mov
sbb
and
fstpt
mov
mov
call
negl
fstpl
daa
sbb
dec
cmp
je
pop
inc
insb
cmp
xchg
fists
ret
jp
jmp
mov
and
mov
push
das
jnp
ja
or
mov
lock
push
test
push
repz
mov
push
pop
in
inc
mov
and
es
das
push
sbb
mov
jnp
dec
ret
push
rol
dec
ret
sbb
aaa
pop
gs
fsub
sub
cmp
add
jl
inc
sub
push
add
push
push
fwait
mov
lret
insl
jnp
scas
sub
push
jbe
fs
stos
mov
aad
inc
pop
add
aas
dec
add
jecxz
pop
mov
bound
sub
add
fidivs
out
pop
lcall
push
inc
movsb
subb
orl
sbb
pop
ret
dec
inc
mov
xor
movsl
mov
hlt
pop
imul
ja
mov
or
data16
pop
loop
push
xchg
add
incb
sti
inc
sbb
push
dec
jns
cmp
pop
cs
fsubrl
jge
sbbb
jne
ja
pushf
es
popf
das
sbb
mov
das
int
xchg
xchg
out
out
and
cmp
mov
sti
sbb
jmp
mov
xlat
cltd
xchg
xchg
pop
jmp
idiv
in
sbb
and
bound
push
mov
xor
mov
test
into
rol
push
insb
mov
jno
push
popa
arpl
or
adc
arpl
pusha
jp
hlt
jb
scas
push
pop
jb
xchg
jo
mov
sbb
xchg
or
in
xchg
adc
push
pop
icebp
lahf
dec
or
inc
rcll
mov
mov
sbb
out
add
xchg
and
ss
mov
and
idiv
daa
push
sbb
movsb
pop
fildll
xor
out
dec
push
cmpsb
lcall
sahf
push
movsl
in
jnp
push
push
xchg
pop
jp
pop
and
pop
sub
sbb
mov
iret
push
sub
std
pop
xchg
es
outsb
push
jle
lcall
sbb
add
fdivp
xchg
nop
addl
xlat
and
enter
adc
xor
lret
imul
jmp
lods
pop
arpl
jge
data16
fs
sbb
test
sbb
adc
jb
lahf
jno
jnp
mov
mov
js
jae
push
orb
jmp
lock
je
in
insb
pop
cli
rcrl
lds
in
rorl
adc
push
dec
xlat
fwait
adc
notb
jle
and
addr16
inc
popf
nop
mov
xchg
fidivrs
mov
sahf
testl
scas
popf
inc
sub
adc
jae
ret
fidivrs
fldln2
pop
mov
xor
into
sbbb
jbe
mov
insb
rorb
xchg
xchg
pop
mov
in
jbe
cmp
xchg
or
test
jns
pop
shrl
les
push
fmuls
pop
xor
loop
xchg
xchg
test
cmpsl
sti
cmp
xchg
cmpsl
mov
call
inc
rorb
aaa
mov
jnp
enter
sar
adc
fcomip
push
add
cmp
idiv
in
iret
mov
sub
lahf
mov
cli
in
into
xor
rcrb
mov
stc
in
jmp
push
xchg
nop
mov
scas
push
scas
mov
xor
enter
shlb
xchg
xchg
push
gs
pusha
pop
movsl
popw
fidivrl
stos
mov
add
mov
jne
int
sub
mov
addb
push
push
sub
jnp
les
fistpl
test
in
int3
cmpsb
js
sbb
nop
mov
inc
lock
stos
add
fcmovnbe
popf
adc
xchg
lods
inc
jbe
dec
mov
decl
mov
push
mov
adc
or
mov
mov
ret
lahf
jns
cmc
mov
iret
fiadds
or
mov
mov
adc
dec
xchg
pop
je
xchg
mov
lcall
push
xor
xchg
jl
fwait
mov
mov
pop
scas
sub
aam
rolb
imul
mov
push
inc
aas
pop
ss
pop
mov
jnp
jo
sahf
and
xor
cmp
std
rcl
dec
inc
adc
mov
pop
inc
mov
movsl
sbb
loope
call
ret
inc
in
test
xchg
inc
dec
mov
sbb
cmp
sbb
ret
repz
in
aad
jmp
mov
scas
mov
shr
adc
cmp
adc
cmp
xor
test
sub
insb
xor
adc
sbb
repz
cmp
and
sbb
into
rcr
push
shlb
mov
out
int
and
in
pushf
mov
jl
cmp
or
xor
inc
adc
addr16
add
and
stos
xor
xchg
adc
pop
das
stos
loopne
lea
adc
lea
imul
jno
clc
pop
pop
adc
pop
add
xchg
add
xchg
or
pop
push
movsb
sbb
mov
dec
lock
add
lods
and
stos
mov
sbb
lcall
je
xchg
outsl
rclb
inc
ss
sub
inc
stos
ret
jnp
call
sarl
test
enter
test
xchg
pop
dec
test
sbb
jge
or
xchg
addr16
pop
push
cmp
out
push
mov
cmpsl
mov
mov
sub
cmovge
or
addr16
mov
repnz
mov
insb
test
push
insb
test
dec
ss
in
popf
push
jb
lods
ficoml
xchg
leave
dec
mov
inc
inc
dec
jecxz
pop
nop
jbe
sub
movsl
les
xchg
inc
jmp
addr16
movsb
xchg
sbb
jbe
xchg
lods
cld
xor
push
sub
lods
andb
jl
test
cmpsb
sbb
in
outsl
sbb
insl
test
mov
insl
and
jl
bound
inc
push
sub
or
repnz
dec
sti
insl
sub
popa
mov
jnp
sub
add
sub
push
sbb
push
jae
cmc
mov
mov
dec
jb
in
pop
or
cwtl
jns
fwait
jge
pop
dec
and
add
mov
push
je
mov
sub
pop
xchg
dec
das
pop
xor
xchg
lret
mov
test
jle
cltd
aad
xchg
push
fninit
add
mov
xchg
and
in
adc
fidivl
jns
cmpsl
jo
pop
xlat
xchg
mov
adc
pop
repz
add
cmp
inc
jp
cmp
jl
aam
lea
pusha
cmp
shll
lds
ror
ja
or
shll
mov
adc
dec
fisttps
setnp
mov
jb
and
rcl
test
inc
ja
subl
mov
mov
loopne
xchg
into
movsl
jno
mov
imul
lret
push
outsb
dec
pop
sbb
jae
outsl
jne
mov
fcoml
or
into
leave
lahf
and
push
pusha
mov
xchg
je
clc
int3
add
mov
mov
addb
lods
xchg
jl
aaa
dec
out
out
and
jns
imul
push
inc
or
out
jp
jne
aad
enter
cltd
jo
xor
or
sub
jae
rorb
lods
icebp
mov
test
push
cli
mov
shll
ss
cs
scas
loopne
sbbb
inc
cmp
cmp
stos
sbb
push
ss
scas
cs
jmp
stos
push
les
sarb
sarl
test
je
enter
lret
xorl
push
mov
push
ljmp
int3
sbb
sbbl
jb
fdivrp
mov
fstps
iret
mov
mov
push
xor
mov
jno
mov
cmp
cmp
stc
jno
sbb
in
ret
addr16
push
in
fists
push
inc
dec
xor
mov
add
test
sbb
pop
jp
rcr
les
enter
dec
mov
pop
xchg
or
movsl
cli
mov
outsl
outsb
mov
test
xor
push
fmulp
xor
xchg
inc
fmuls
lods
jae
jns
and
mov
and
pop
xchg
iret
nop
mov
shld
cs
rcll
push
imul
daa
jmp
fnsave
test
and
xor
out
pop
fbstp
imul
xor
push
add
jae
test
xchg
jae,pt
mov
shlb
mov
cmp
cs
add
sub
repz
imul
inc
cmc
out
and
mov
das
sbb
cmpsl
pop
cmpb
roll
push
cmp
xor
pop
lcall
adc
scas
push
jecxz
sub
sub
mov
lods
out
cmpsl
push
dec
cmpl
jmp
mov
out
jle
jg
mov
cli
aam
or
out
leave
push
repnz
insl
jge
in
lret
sbbb
mov
outsb
imul
dec
jmp
adc
aad
inc
mov
xchg
lret
ret
stc
bound
and
lods
xchg
xchg
lret
dec
arpl
arpl
mov
dec
or
inc
lock
inc
shrl
das
fs
std
pusha
and
test
in
ficompl
mov
mov
fwait
xchg
js
stos
rolb
xorl
jb
dec
pop
enter
xor
dec
dec
lcall
and
push
rcrb
inc
inc
test
add
sahf
mov
jnp
ds
sub
das
loopne
sub
cmp
pop
pusha
mov
jmp
cmpsb
test
cltd
call
or
movsl
fcoml
xchg
scas
fisubl
ss
cmp
pop
call
stc
push
movsb
xchg
js
ret
rorl
xchg
xchg
xchg
adc
push
ret
inc
push
and
mov
pop
jge
movb
mov
jnp
or
stos
fbld
jp
outsb
out
mov
adc
lret
addr16
dec
cs
out
popf
ds
lods
add
dec
pop
jmp
add
test
aas
mov
cli
cmp
lahf
inc
imul
pop
jmp
jne
int3
cmp
sbb
adc
mov
adc
pop
rclb
or
adc
add
xchg
cmpsl
sub
jne
rolb
push
pop
jb
jle
icebp
adc
adc
fistl
inc
xchg
subb
out
aas
scas
jo
cltd
push
mov
push
sub
out
into
in
dec
fdivrs
xor
data16
addr16
xor
inc
shrb
mov
clc
stos
and
icebp
sti
push
repz
repnz
inc
sbb
imul
fadd
push
hlt
or
inc
ja
add
pop
insl
pop
or
jmp
xchg
mov
sahf
test
push
sub
mov
hlt
inc
in
test
rcr
frstor
dec
dec
cwtl
pop
push
xchg
push
outsl
pop
push
out
sub
sti
jg
sbb
cltd
dec
ret
leave
cmc
pop
mov
mov
inc
mov
movsb
sbb
out
rorb
sub
xor
mov
or
and
push
jecxz
scas
cmc
shll
dec
mov
lcall
xor
leave
or
mov
lea
adc
imul
aas
nop
mov
mov
sbbl
jno
jno
ss
push
sbb
pop
jge
into
cld
jns
adc
jmp
sub
xchg
pusha
cmpsb
cmp
lock
into
test
mull
aas
inc
pop
les
pop
dec
mov
xchg
addb
cld
jns,pt
out
cld
lahf
sahf
jg
out
subb
in
or
sub
call
xor
push
loop
enter
negl
dec
or
clc
inc
and
lods
sarl
ss
pop
push
and
sub
or
imul
dec
lret
sbb
push
pop
mov
cmp
dec
jno
ret
mov
jle,pt
mov
test
pop
inc
sahf
leave
mov
jnp
rclb
sbb
fs
mov
mov
jns
xor
bound
xchg
repz
push
cmpsl
mov
jnp
sbb
xchg
in
in
push
mov
jae
sbb
push
xchg
add
push
mov
dec
sbb
pop
sti
jl
inc
add
outsl
arpl
or
jmp
call
lahf
pop
dec
fistps
lret
lret
call
xor
jg
jne
loope
sub
pop
sub
sbb
ret
xchg
es
mov
lahf
rcll
xchg
bound
filds
call
dec
int
sbb
daa
add
adc
and
decb
stos
out
imul
push
dec
jo
dec
enter
dec
pop
imul
adc
ficompl
dec
and
cmp
push
mov
push
scas
inc
adc
dec
imul
sahf
mov
and
arpl
fcomps
shrl
xchg
mov
out
dec
cmp
sahf
add
push
cmp
movsl
ja
dec
dec
pop
stos
jecxz
dec
data16
cmp
loope
cmp
leave
loop
adc
cmp
xchg
std
repnz
mov
sahf
fwait
cmp
pop
repz
outsb
jmp
cmpsb
pop
sbb
jp
ret
and
stos
int3
lods
das
inc
sub
inc
pop
adc
imul
pop
cs
mov
test
into
pop
int
mov
push
pop
inc
pop
cmp
push
sub
jne
mov
nop
insb
cs
gs
test
popa
adc
movl
pop
dec
fdivl
adc
jae
adc
mull
data16
lea
call
out
lret
fstpl
mov
cmp
mov
bound
sub
push
mov
inc
sbb
push
jnp
out
lahf
and
scas
push
pop
aas
adcb
inc
mov
inc
les
je
inc
inc
cmp
jns
jo
cmc
add
xchg
sbb
pop
and
dec
xchg
icebp
jge
bound
gs
lret
sahf
sti
push
iret
outsb
les
shrl
dec
sub
decb
jg
sub
pop
cmp
testl
jl
mov
push
cld
sub
scas
xor
rcrb
cmp
ret
lea
shll
add
imul
xor
iret
arpl
jnp
roll
adc
sub
jae
lods
cmp
repnz
add
and
iret
xchg
testb
inc
jl
inc
arpl
cmpsb
mov
sahf
inc
pop
outsb
test
mov
mov
adc
fstl
fsubr
mov
sub
hlt
xchg
dec
adc
into
jg
xchg
into
ljmp
or
xor
lret
into
push
lea
stos
jno
xchg
pop
fiadds
in
cli
shll
clc
adc
in
rcrb
jle
insl
dec
fs
sub
cmpsl
push
aam
icebp
std
pop
das
add
stc
in
mov
in
mov
mov
xor
add
mov
dec
jge
rcrl
inc
jne
mov
ret
into
fsub
addr16
fs
inc
dec
jne
aad
stos
adc
and
pushf
shr
mov
loop
inc
fnstsw
push
adc
rolb
push
test
push
cltd
jo
or
push
mov
loop
fndisi(8087
or
jmp
ja
test
mov
or
test
lock
mov
imul
or
ret
lock
ret
outsb
std
xchg
loop
or
mov
push
cmpsb
nop
pop
addr16
lcall
push
and
cli
fcmovnu
pop
push
mov
dec
jl
cmp
repz
xchg
xor
lock
sub
fistpll
jno
mov
cmp
aas
movsb
gs
ret
mov
xchg
push
loop
outsl
les
jmp
mov
jmp
aaa
xor
stc
mov
ja
mov
rol
in
aam
jle
cmp
mov
mov
test
mov
test
lods
xor
mov
xchg
loopne
sub
push
or
dec
xor
jmp
inc
jne
gs
gs
jo
repnz
pop
mov
insb
aaa
gs
inc
daa
xorb
nop
iret
lahf
pop
and
out
faddl
lret
add
cld
shll
jmp
or
jno
mov
add
xchg
xor
jl
pop
imul
add
mov
cmp
jg
test
mov
mov
mov
jnp
pop
jns
iret
imul
mov
xchg
pop
mov
in
push
sahf
movsb
aad
movsl
shrb
sub
add
mov
inc
jo
aam
and
push
sbb
pop
and
inc
arpl
inc
adc
xchg
rolb
dec
icebp
adc
iret
pop
out
push
or
imul
nop
aad
sub
js
xor
sbb
sub
addr16
pop
jbe
fnstenv
push
dec
pop
shlb
or
repz
sub
dec
outsb
outsl
cmp
cmp
lret
test
imul
and
cmp
mov
jmp
xchg
or
xchg
cmp
jl
in
cmp
stos
inc
jne
imul
jb
or
outsb
cmp
into
jno
aad
push
dec
xchg
daa
scas
or
leave
jo
mov
iret
pushf
pop
xlat
or
or
int3
mov
rclb
pusha
push
push
inc
jge
pop
sbb
fisttps
mov
dec
stc
dec
pushf
fstps
scas
sbb
ss
data16
lds
icebp
pop
sub
test
repz
fmuls
dec
dec
xor
out
stos
dec
fistpl
flds
pop
mov
shlb
test
and
enter
dec
jb
push
imulb
mov
je
xchg
push
test
cmp
mov
test
mov
lock
out
xchg
and
and
mov
sbb
bnd
mov
loope
and
gs
pop
imul
or
pop
sbb
out
ljmp
or
pushf
shrl
retw
jp
sbb
outsb
in
enter
fmuls
decl
js
in
cmp
xchg
push
inc
push
aaa
pop
xchg
push
loopne
pop
fwait
dec
mov
daa
icebp
fcom
add
jg
jl
dec
scas
lret
dec
jp
xor
sahf
shll
sbbb
push
xchg
xchg
jle
dec
jle
icebp
and
out
sti
mov
sub
pop
lock
sbb
fsubl
shlb
sbb
mov
or
subl
mov
mov
adcb
stos
mov
ds
nop
mov
mov
lods
sbb
or
mov
out
pop
mov
pop
adc
and
fisttpll
sub
shlb
ja
xchg
sarl
scas
shll
push
loope
or
pop
mov
mov
xor
xchg
jbe
pop
repz
and
std
jae
ljmp
jle
mov
sbb
insb
jo
mov
in
lods
adc
lods
in
ds
sbb
scas
leave
bnd
inc
push
xchg
pop
jp
mov
mov
jns
mov
mov
xlat
inc
mov
int
jno
add
in
arpl
cmp
or
jbe
subl
arpl
cmp
nop
push
dec
mov
xor
jg
jle
push
pushf
xchg
add
movsb
mov
inc
cltd
in
add
fwait
addr16
mov
in
xor
repnz
jle
add
dec
mov
dec
in
add
out
mov
cltd
cwtl
mov
fs
fsubp
or
sbb
cmp
stos
push
std
dec
add
lahf
mov
movsb
shl
cmp
shl
xor
lods
test
xlat
mov
in
xchg
adcb
mov
adc
fmuls
test
js
rorl
sbb
pop
in
and
sbb
xor
jnp
mov
sub
jnp
pop
fucomip
push
lret
xchg
hlt
and
push
push
cmpsb
mov
ss
mov
pop
lret
pop
movsb
faddl
in
add
xor
cmc
jb
movsl
or
or
lahf
pop
mov
xor
xchg
fldcw
xor
adc
add
test
add
lcall
pop
repnz
or
iret
aaa
push
arpl
lahf
std
mov
xor
lret
cmpl
stc
xchg
insl
xor
sbb
mov
fwait
lret
mov
mov
rorl
mov
mov
icebp
sub
ret
lock
ja
or
aam
lret
push
aad
adc
push
sub
and
pop
mov
sbb
xchg
pushf
das
cwtl
push
inc
lea
or
and
pop
push
jge
subl
mov
movsl
aas
test
punpcklbw
xchg
in
out
cmp
ss
inc
sahf
fimuls
lahf
jns
in
shlb
mov
and
mov
xlat
push
into
ss
push
xor
pushf
incb
pusha
mov
cmp
pop
xchg
mov
popf
fisttpll
xor
or
cmpsb
lds
or
push
jbe
pop
push
sahf
jg
pop
xor
sub
cmc
mov
and
add
lcall
mov
sti
xor
cltd
imul
pop
and
sbb
scas
pop
scas
mov
add
jmp
lret
pushf
xchg
or
sarb
in
rorl
push
imul
rcrb
ss
add
pop
adc
push
jb
mov
add
push
xchg
shrl
sbb
push
add
scas
sub
aam
lret
inc
addr16
decb
ja
outsb
and
data16
cmpsb
xchg
outsb
inc
incb
lock
jmp
mov
mov
dec
lds
cmpsb
popf
mov
or
fbld
leave
mov
scas
cmpsl
stc
jne
mov
hlt
rclb
dec
mov
enter
ja
lcall
dec
cwtl
jo
add
cwtl
sbb
jg
or
mov
shlb
xchg
dec
cmp
add
adc
xchg
jae
adc
insl
mul
adc
fists
xchg
cmpsb
push
outsl
inc
mov
or
push
test
addl
xchg
and
pusha
aas
mov
out
xor
fneni(8087
subl
ficomps
movsb
cs
mov
and
adc
adc
or
int3
call
testb
inc
ds
aas
aaa
sub
mov
icebp
and
stc
imul
in
fwait
or
nop
cmp
push
xchg
enter
sti
push
ficoml
mov
and
sub
test
sbb
jecxz
jns
stos
daa
test
inc
popa
inc
in
jne
ret
fisubrl
xchg
mov
mov
lods
aaa
int3
jne
sub
mov
lea
out
mov
mov
dec
ret
lret
icebp
cmp
cmpsl
jo
push
xchg
setne
stc
or
mov
push
and
cltd
inc
sbb
mov
mov
fisubrl
mov
mov
adc
lret
mov
iret
in
jb
or
cmpsl
cmp
mov
enter
stc
push
stc
mov
addr16
pop
call
push
mov
dec
inc
adc
xor
mulb
inc
insb
xor
lods
ficoms
xor
add
scas
dec
and
scas
pop
xor
xlat
lret
sahf
mov
mov
ret
mov
lret
out
xchg
and
inc
jle
aaa
es
push
lahf
pop
andl
push
aas
decl
movb
xchg
pop
in
mov
sbb
xchg
fwait
push
dec
test
jge
rcl
dec
loope
insl
pop
and
xchg
push
inc
pop
sti
push
icebp
dec
inc
in
mov
cli
jle
jl
cmp
and
lods
push
pop
inc
pop
insb
and
xchg
ss
mov
xchg
jge
cmp
icebp
gs
lock
test
xchg
dec
js
lret
loopne
push
adc
push
out
aam
jnp
lods
xor
sti
and
cmc
xlat
jp
add
or
std
dec
jnp
pop
aaa
pop
cmp
shll
adc
xlat
xchg
dec
std
xchg
aam
in
insl
or
xchg
jp
loopne
call
dec
rolb
jge
sub
push
pushf
pop
sub
push
scas
in
es
data16
cltd
js
ret
or
sbb
adc
sub
in
pop
mov
push
adc
test
xchg
jmp
repz
popf
xor
pop
dec
jl
jne
sub
adc
fld
mov
push
adc
adc
lea
out
pop
xchg
jo
jle
pop
xlat
insb
inc
sbbl
scas
adc
mov
inc
adc
push
in
enter
daa
lret
mov
mov
add
test
js
mov
testb
dec
push
bound
daa
andb
ja
jecxz
hlt
dec
add
mul
or
cmp
cld
cmpsl
push
jg
lcall
fldcw
divb
mov
test
fwait
test
data16
xor
lcall
sbb
sub
push
adc
mov
mov
jl
sub
fstpl
mov
and
nop
xor
pusha
pop
pop
test
in
fnstsw
mov
shl
outsl
sub
fstpl
aas
cmc
mov
lock
push
mov
mov
add
mov
or
xchg
adc
push
push
and
inc
xchg
mov
adc
cmp
fnstcw
mov
fs
in
cli
fnstcw
insb
mov
sub
and
push
movsl
jo
xchg
shll
jns
mov
idiv
push
push
andb
push
shrb
test
xor
mov
aam
jns
dec
push
add
hlt
mov
inc
in
fbstp
push
das
mov
dec
mov
fidivrl
mov
stos
mov
mov
jge
mov
test
dec
mov
fdivrl
dec
int
mov
lret
add
call
xlat
pop
stos
lcall
xchg
adc
repz
fs
pushf
mov
sub
mov
adc
mov
jecxz
add
les
outsl
cmp
xor
dec
add
pop
fst
push
stos
sub
mov
js
imul
std
mov
scas
push
mov
xchg
hlt
xchg
lods
dec
cmc
cmpsl
nop
inc
cmpsl
lahf
fidivs
mov
dec
movsl
and
jns
or
cmpsl
pop
ficompl
jmp
mov
inc
insb
es
or
imulb
or
in
mov
lock
mov
mov
mov
cs
jecxz
jp
and
arpl
shlb
or
lods
aas
xor
sub
cmp
cld
cmp
mov
lock
pusha
pushf
sbb
ja
loop
rorl
cmp
jp
jb
pop
negl
int3
in
xchg
add
sub
xor
dec
ss
adcb
inc
in
mov
cmp
xorl
aas
push
movsb
test
div
pop
popf
mov
std
dec
movsl
repnz
adc
fstps
fimull
test
pusha
mov
std
push
pop
jp
xchg
popf
rclb
gs
cmc
int
enter
das
add
adc
pop
loope
cmpsb
xor
mov
sbb
cmp
mov
sub
in
filds
test
movswl
or
dec
loop
setg
mov
or
add
jge
int
mov
call
pop
ja
xchg
fisubl
stc
inc
lods
mov
pusha
fwait
add
or
sahf
idivb
ror
mov
arpl
int3
pop
movsb
mov
mov
es
pushf
rol
pop
xor
lods
push
test
push
test
sahf
cmp
stos
sbb
jg
jmp
sub
pop
push
add
aaa
xchg
jl
lahf
fcoms
pand
mov
xor
pop
lds
push
xor
jge
inc
pop
test
fdivs
dec
cwtl
jmp
je
adc
add
mov
js
and
mov
mov
cwtl
jmp
loop
mov
mov
add
int3
std
xchg
cli
cwtl
sub
stos
jb
fsubrp
push
dec
sarb
xchg
xchg
adc
ljmp
faddl
and
push
inc
pop
outsb
lock
aas
loope
inc
add
mov
jnp
adc
and
mov
push
lahf
xor
cmpsl
or
sahf
ret
cwtl
sub
mov
pop
push
test
enter
pop
enter
das
inc
aad
jp
sarb
pop
jg
inc
popf
and
push
mov
jge
pop
adc
ret
mov
test
subl
mov
cltd
mov
add
fdivrs
mov
fidivs
sub
inc
insb
and
sti
test
or
cmp
jbe
mov
ja
inc
mov
je
insl
insb
je
lods
stc
inc
leave
pop
sub
lahf
insb
shrb
sbb
lret
xorb
leave
sub
adc
and
into
sbb
aaa
mov
out
sbb
add
mov
sbb
mov
mov
in
sbb
add
push
jae
xchg
ret
es
jo
enter
cmp
cwtl
insl
inc
test
xor
or
cmpsb
fs
xlat
sahf
jge
lcall
xchg
jge
lods
jge
pop
xchg
test
into
dec
pop
ret
adc
pop
dec
adc
push
xor
and
test
xchg
in
cmp
stos
mov
fwait
cwtl
aas
ret
sub
clc
and
pmaxsw
fcomp
test
sub
jne
push
arpl
pop
or
pop
int
push
loope
push
aam
add
stos
sqrtps
pusha
cwtl
insb
into
js
stos
lcall
mov
fdivs
dec
sbb
fistl
ds
sub
jle
std
xor
addr16
push
rolb
dec
cmovno
ret
jl
or
outsl
shl
jne
adc
sub
mov
mov
mov
fs
stc
scas
insl
and
insb
inc
scas
decl
or
fcoml
scas
mov
adc
fldt
popf
sub
or
dec
repz
push
inc
sti
push
adc
xchg
cmc
jl
xor
sub
ret
push
cmp
push
mov
mov
pushf
lods
sub
dec
xor
cltd
sbb
xchg
imul
inc
scas
jge
jb
loopne
sti
jp
hlt
fwait
pop
mov
int
mov
sti
into
in
fsin
sbb
fistps
adc
cmp
sarl
stc
in
aaa
fs
aaa
or
insb
sbb
push
push
shll
dec
xchg
std
icebp
loope
push
daa
popa
mov
dec
test
leave
xchg
pop
mov
add
mov
stc
sbb
sub
sahf
cmp
pop
xchg
jbe
adc
test
subl
xchg
inc
sub
scas
mov
adc
rol
push
mov
imul
cmp
data16
push
inc
xchg
xchg
mov
push
mov
int3
cmc
push
aas
aam
ret
addr16
mov
inc
out
xorl
insl
or
pop
inc
dec
xchg
sub
fs
and
ret
mov
xor
rcrl
mov
pop
andl
pop
sub
sahf
mov
mov
add
test
adc
xor
arpl
fldlg2
lahf
insb
xbegin
mov
pusha
mov
jnp
stc
or
shll
rcll
mov
push
mov
pop
aas
movsb
int3
adc
add
pop
or
xorl
push
push
stos
popf
fstps
xchg
es
hlt
insb
js
xor
loopne
or
aaa
jo
arpl
mov
stos
repz
jmp
fs
frstor
out
xlat
cmpb
pop
sbb
mov
xor
call
push
and
loopne
pop
mov
push
leave
dec
mov
and
pop
rcrl
pop
pop
and
jne
ja
push
cmp
mov
jns
sbb
icebp
lret
xor
testb
pop
adc
in
inc
sub
jge
xor
pop
inc
jle
adc
sub
fcoml
aad
mov
cmovae
arpl
inc
mov
pop
das
cmpsb
jo
sahf
pop
ljmp
cmpsb
xor
mov
cmp
ror
mov
add
loop
inc
sbbb
jnp
mov
fldz
or
mov
adc
mov
sub
lahf
lea
adc
pop
xchg
xor
jb
xchg
outsb
jp
aad
jns
out
xor
hlt
adc
addl
cmpxchg
leave
into
sbb
add
das
test
cmc
pop
lods
mov
adc
mov
xor
xchg
or
push
push
lea
mov
pop
subl
rcrb
nop
nop
inc
jmp
add
stos
into
pop
mov
sahf
popf
mov
xor
mov
popa
push
add
adc
cmp
inc
or
cmpsl
test
pop
adc
xor
pop
xchg
jge
mov
or
ja
ret
inc
or
sbb
loopne
scas
int
jne
addr16
les
js
fcompl
add
ficoms
push
mov
sti
mov
scas
pop
in
mov
mul
jnp
cmp
or
pop
or
pop
decb
pop
aad
or
imul
and
sti
int
mov
sahf
in
test
std
cmp
add
les
das
fistl
fs
or
mov
aaa
out
sub
mov
popf
stc
cli
push
test
xor
lret
pop
outsl
xchg
xchg
sub
sahf
mov
das
rolb
push
out
hlt
stc
insl
push
mov
mov
scas
in
jns
in
jbe
jecxz
push
incl
mov
lret
and
cs
mov
pop
mov
sbb
pop
ficoml
add
add
add
or
je
call
xchg
lods
cmp
push
mov
jnp
cmpsb
pop
stos
sbb
mov
arpl
aaa
mov
jecxz
ljmp
pop
ja
in
or
xchg
xor
pop
lahf
and
mov
pop
push
mov
push
jne
sub
cmp
push
sti
mov
cld
xor
repz
out
and
shl
add
mov
dec
xor
cmp
addl
adc
sbb
mov
push
xchg
add
pop
and
add
xchg
ret
sub
jmp
fadd
mov
mov
push
adc
ret
sbb
movb
aad
arpl
dec
xor
repz
ds
dec
imul
fnstsw
dec
mov
adc
and
in
sti
scas
aas
arpl
push
or
mov
lret
ss
in
mov
add
iret
das
fldl
and
mov
outsl
jg
lea
in
jge
mov
xchg
scas
jmp
test
or
jbe
pop
add
push
cld
cmp
stos
xchg
inc
jns
dec
sbb
pop
sub
jnp
push
xor
jl
aad
and
mov
inc
je
data16
jle
inc
sar
das
fnstcw
das
xor
dec
jle
lahf
inc
movsb
and
xor
fsubrs
cwtl
notl
inc
cltd
mov
insb
sahf
aas
outsl
sub
jecxz
andb
daa
adc
aad
pop
cmpsb
and
ret
push
data16
rcl
lcall
fdivl
jmp
out
and
dec
out
push
jp
jge
aad
push
leave
sarl
xchg
inc
xchg
loopne
push
ret
popf
pushw
ret
mov
js
sub
mov
cld
in
pop
les
icebp
adc
jge
imul
mov
int3
mov
or
adc
in
mov
dec
out
mov
lret
adcb
out
std
stos
mov
xchg
inc
sbb
or
dec
lods
xchg
pop
test
push
scas
xlat
std
lds
jnp
lds
jmp
inc
pop
xor
push
in
aad
dec
dec
fcoms
aas
or
dec
rcrb
push
sahf
shlb
adc
sahf
sahf
sub
push
int3
jno
mov
jne
adc
mov
sbb
xor
ficoms
xor
push
outsl
sbb
mov
loope
adcl
and
in
into
xchg
pop
and
xor
cmp
xor
push
mov
dec
dec
test
rcrb
into
in
fs
cmp
jmp
test
lret
fbld
xor
scas
lcall
fnstsw
sbb
repz
jl
add
addr16
ret
rolb
popl
outsl
dec
push
ja
mov
xchg
dec
add
in
out
insb
rcrl
lcall
in
fiadds
in
pop
pop
pop
sub
or
fwait
in
inc
outsl
mov
gs
jns
icebp
fidivrl
and
dec
jge
pop
sbbl
stos
test
mov
push
lahf
sbb
xchg
leave
inc
sbb
add
inc
out
into
pop
callw
sbb
outsl
roll
call
leave
daa
fs
xor
loopne
test
mov
shlb
stos
jl
and
pusha
into
data16
adc
out
pop
xchg
subb
int3
dec
xchg
pop
iret
sarl
xor
dec
add
les
add
rol
ljmp
pop
inc
push
pusha
aas
cmpsb
cmp
int3
inc
mov
and
mov
int3
jnp
std
xchg
mov
pop
sub
cltd
fstpl
xor
cld
add
lret
pop
mov
and
sbb
cmc
xor
insb
cmp
or
lds
inc
out
mov
gs
test
in
cmp
xor
mov
test
pop
imul
dec
or
mov
repz
lea
in
and
leave
jno
enter
and
add
dec
sub
push
fsubrs
sub
rorb
iret
xchg
adc
jns
jo
cli
enterw
pop
adc
jg
mov
ja
xchg
cmp
mov
cmp
sub
xchg
pop
pop
ret
jne
inc
add
fbld
xor
xchg
test
insl
sub
push
test
adc
popa
dec
daa
jg
dec
pop
movsb
cltd
adc
lret
aas
insl
xchg
sub
cli
je
in
clc
bts
xchg
sbb
fs
jns
and
mov
mov
gs
sbb
gs
gs
fisubrs
daa
stos
insl
mov
int3
xchg
cmpsl
shll
and
aas
adc
xor
sub
addb
pop
mov
push
in
xchg
push
pushf
adc
push
jl
pusha
pop
ret
dec
mov
pop
sbb
into
cmp
fsub
clc
jle
adc
cmc
adc
cmp
sbb
cmp
std
fwait
ds
cmp
pop
rcrb
stos
imull
dec
xor
pop
imul
push
mov
jne
mov
xchg
mov
cmpsl
shrl
adc
and
les
fcoms
mov
pop
xchg
in
imul
sbb
in
xlat
dec
xor
sahf
xor
notb
inc
rorb
push
repz
inc
add
stos
jle
mov
dec
sub
iret
sbb
jg
fmuls
sub
mov
xchg
xchg
imul
dec
aaa
dec
pushf
mov
shrl
cmp
inc
shlb
push
and
dec
jne
ficompl
pop
int
push
pop
push
mov
popa
insl
test
orl
and
mov
adc
sahf
sbb
scas
adc
push
inc
cmp
jmp
arpl
cmpl
inc
js
loope
cmp
cmp
je
popl
push
mov
sbb
fcoms
pop
ret
inc
scas
imul
xchg
popf
rorl
dec
outsb
xchg
mov
dec
sub
push
xchg
inc
mov
out
push
lds
popa
adc
push
pop
push
iret
dec
and
or
sbb
stos
lret
pop
jp
pop
int
scas
mov
ja
lret
pop
outsl
mov
out
sub
mov
mov
scas
jbe
mov
out
add
mov
inc
pop
cli
mov
frstor
mov
xchg
lock
jle
add
mov
mov
je
ja
loop
in
std
mov
in
test
lock
rcr
popf
js
adc
add
adc
sub
push
popa
jbe
movsb
arpl
sahf
addr16
mov
cmp
repz
lods
mov
mov
mov
dec
hlt
out
dec
ja
cmp
ret
repz
repz
pop
jmp
negb
in
mov
dec
sbb
xor
mov
fcmovbe
popa
push
lods
enter
sti
pop
out
scas
aaa
mov
insl
xor
movsl
inc
out
xor
sbb
fs
ja
mov
sbb
lods
mov
lahf
and
cwtl
push
sti
xchg
push
add
in
push
stos
add
leave
xor
inc
push
out
test
fwait
aad
imul
or
stos
cmc
dec
rcll
cmp
ja
push
push
jnp
or
cld
shrl
pop
stos
jle
xlat
outsb
ret
iret
test
cs
iret
jno
in
pop
ljmp
or
data16
movsb
xor
jmp
jae
xchg
xchg
lock
fsts
dec
or
jb
leave
dec
std
push
lods
inc
inc
rorb
mov
dec
dec
das
sti
loop
push
cmp
pop
cmpsb
pop
mov
sub
hlt
inc
pop
mov
popf
cli
out
jle
rolb
popf
add
movsl
sub
lea
inc
dec
pop
ss
fdiv
stos
clc
mov
inc
es
jl,pt
and
cltd
sub
cmp
push
aaa
hlt
push
ret
into
lods
cmpsl
push
xorb
lods
and
bnd
idivb
xor
fwait
test
enter
bound
arpl
cld
xor
push
adcl
or
xor
movsb
fcmovu
xlat
sub
xor
cmc
js
push
pushf
lret
shll
rep
push
mov
mov
cmc
sbb
aam
pop
mov
xchg
bswap
pop
sti
out
divb
lea
cwtl
push
and
sti
stos
xor
jo
jle
cld
mov
daa
nop
jle
arpl
enter
jmp
pop
jmp
je
sbb
xchg
xor
inc
jecxz
fidivrl
sti
pop
and
add
adc
mov
mov
pop
mov
psraw
loopne
mov
push
pushf
mov
and
inc
cs
add
sub
and
push
fwait
pop
sbb
sbb
sbb
gs
fs
mov
sub
xor
stos
je
fimuls
jnp
inc
das
lret
cwtl
addb
loop
data16
jp
fprem1
and
insb
xor
lock
pop
jg
cmp
int3
lea
sarl
and
into
xchg
cld
push
dec
divb
shl
xchg
adc
mov
mov
cmpsl
jle
rolb
push
xor
push
mov
push
cmp
mov
stos
mov
ror
inc
xchg
dec
mov
inc
or
add
imul
mov
clc
je
mov
xchg
xor
add
and
xor
scas
push
adc
mov
or
dec
pop
lds
inc
lds
cwtl
ljmp
daa
mov
xchg
inc
xor
pusha
adc
mov
or
xlat
pop
adc
movsb
lds
in
rcr
mov
mov
jmp
xchg
fimull
notb
mov
int
fs
int3
xchg
push
mov
and
iret
push
mov
add
aad
mov
push
add
ret
popl
imul
sub
and
popf
or
cmp
daa
add
neg
jnp
ljmp
mov
aaa
mov
out
addr16
mov
adc
outsl
sub
test
or
bound
stos
add
dec
stos
mov
sbb
mov
lahf
fdivrl
xor
mov
xchg
push
lock
or
mov
push
xor
lods
andb
inc
push
enter
lret
mov
stc
add
jo
pop
or
jnp
cld
mov
es
mov
jne
jle
mov
loop
push
fidivrs
in
movsb
pop
mov
cmp
imul
pop
test
add
aas
imul
sarb
scas
aas
faddl
pop
mov
lret
sbb
sahf
push
mov
jecxz
in
jle
push
in
cmpsl
xor
imulb
vmovntps
andb
mov
sub
inc
icebp
arpl
lods
cmpsl
and
push
lods
cmp
xor
xchg
mov
sarl
pop
adc
jmp
push
or
xor
xchg
lret
cltd
xchg
and
jo
push
mov
fnstenv
inc
mov
mov
adc
cmp
cs
mov
inc
mov
leave
leave
aas
rcrb
cmp
sbb
outsb
pop
pop
xor
push
mov
cmp
mov
ds
jecxz
add
pop
add
iret
mov
cltd
aaa
bound
dec
aaa
mov
fucomp
stos
mov
lret
in
pop
ja
mov
push
dec
xchg
mov
out
ret
pop
bound
testb
mov
sbb
jmp
test
push
xorl
out
ljmp
es
cmp
push
xchg
xor
jg
cli
aam
add
pop
adc
jne
jns
or
push
in
fisubrs
mov
mov
add
cli
std
lea
sbb
stos
xchg
xchg
insl
into
pop
or
leave
outsb
clc
sub
mov
mov
int
aaa
pop
mov
stos
aaa
dec
mov
add
roll
inc
cmc
and
xchg
xor
push
add
or
int3
in
xlat
inc
push
lock
pop
insb
js
xor
mov
inc
jne
pop
ss
jo
push
gs
popa
sub
and
xchg
cld
ret
or
test
cmpl
mov
pop
or
mov
pop
mov
and
iret
mov
push
inc
push
insb
xchg
mov
sbb
in
xor
jle
sbb
dec
push
jb
pop
sbb
loope
fstl
addr16
jno
out
mov
lcall
mov
mov
or
stos
imul
pop
push
dec
iret
daa
fwait
iret
jno
inc
imul
xchg
jb
lahf
push
fisubl
sbb
ss
xchg
add
inc
and
int
mov
sbb
lock
out
sahf
xchg
adc
xorb
pop
jg
sub
push
outsl
repnz
mov
sbb
push
jmp
and
dec
mov
mov
mov
mov
adc
mov
loope
rcll
stc
lret
push
jbe
inc
in
gs
push
cld
mov
and
inc
into
sbb
stos
sub
inc
popf
lea
mov
jmp
iret
in
push
mov
jmp
insb
push
jge
sbb
cs
mov
gs
lock
push
cmp
mov
add
loopne
je
outsb
mov
xorl
movsb
arpl
adcl
push
daa
jbe
cmp
push
push
push
dec
in
ds
scas
call
lcall
aaa
pusha
into
repz
mov
mov
jo
aaa
push
pop
pop
sbb
out
sub
test
jnp
out
mov
jge
sbb
inc
push
shll
hlt
inc
add
aas
pop
dec
fwait
aad
and
jmp
pop
call
cmp
sub
mov
sbb
xchg
jp
cmp
mov
stos
lret
idivb
pop
jns
test
mov
hlt
arpl
cmpsl
lea
loope
test
lret
dec
sub
mov
jmp
int3
and
cltd
ret
jge
stos
jae
fisttps
mov
imul
mov
inc
lock
cltd
xchg
pop
lret
mov
push
cmpsb
loope
in
xor
mov
pop
add
push
loope
fistpl
ds
mov
add
add
adc
aaa
or
cli
adc
mov
pop
mov
imul
dec
push
mov
cmp
out
jns
mov
xlat
adc
inc
outsb
and
stos
push
pop
mov
push
lea
pushf
push
icebp
cld
aas
pop
aas
into
sbb
mov
xchg
pop
adc
mov
out
xor
ret
jp
and
or
aam
cli
inc
cmpsb
dec
cwtl
cmp
cmp
fdiv
fdivrs
push
and
xchg
push
add
aas
or
mov
lcall
ficompl
sub
adc
lret
aad
jmp
xor
inc
push
add
fisttps
and
mov
stos
repz
outsl
sahf
add
int3
jno
outsl
mov
jnp
leave
mov
into
rep
cs
or
test
out
repnz
call
pop
dec
mov
sbb
adc
adc
sahf
sahf
repnz
push
shll
sbb
adc
lcall
sbb
jl
les
sub
lahf
mov
inc
cld
inc
cmp
jb
int3
xchg
std
add
push
cwtl
sahf
jbe
and
mov
cmp
mov
pop
cmpl
lret
xchg
lods
mov
in
sbb
stos
popa
pop
jne
jp
dec
std
leave
into
jecxz
aas
mov
call
inc
mov
mov
cmp
insb
xor
js
idivl
mov
pop
jecxz
push
push
in
sbb
cmp
jle
jae
scas
shlb
pop
xlat
jmp
sahf
sbb
fldenv
adc
out
or
out
sahf
and
xchg
jge
push
loopne
mov
or
mov
imul
outsb
mov
fidivs
inc
adc
fsubrp
in
ret
xor
xchg
mov
and
gs
pop
adc
push
xor
shufps
add
fs
add
pop
cmp
test
iret
push
outsb
add
ficompl
sbb
mov
sub
or
js
or
jo
mov
aaa
outsb
cmpsl
add
adc
xchg
testl
cmp
and
xchg
arpl
icebp
fistps
imul
xchg
push
in
push
sbb
dec
mov
das
test
mov
sbbl
dec
lods
adc
jns
add
push
inc
int
add
ret
push
ss
sub
movsb
adc
xlat
sbb
cmp
mov
test
imul
jle
outsb
xchg
inc
out
loopne
aaa
fucomp
pop
pmulhuw
in
in
lods
das
and
lods
mov
outsb
mov
imul
mov
mov
je
ss
out
insb
pop
js
daa
mov
or
data16
addl
sbb
call
mov
cmpsb
out
jb
stos
subl
pushf
cli
dec
mov
je
pop
jmp
push
icebp
ds
cmpsl
outsl
sub
pcmpeqd
movsb
inc
mov
pmulhuw
xor
push
pusha
out
call
mov
mov
adc
add
mov
jno
jnp
or
and
shlb
push
push
aaa
les
and
sarb
aam
outsb
pop
mov
cld
aam
jmp
fs
sub
lahf
ljmp
adc
push
stos
in
xchg
fs
iret
fcoms
test
xor
push
rol
pop
adc
movsb
lods
pop
pop
add
mov
sub
les
mov
les
mov
xchg
pop
xor
mov
sbb
dec
or
fidivs
cmp
xchg
shl
cmp
push
dec
or
jno
and
hlt
jecxz
notb
fisttpl
sbb
out
ljmp
dec
arpl
add
hlt
xchg
loope
sub
enter
ret
push
inc
aaa
aam
out
cmp
je
out
pusha
rcrl
dec
in
jno
add
daa
shrb
or
ljmp
dec
jmp
xchg
mov
ljmp
or
push
or
sbb
mov
test
sbb
loope
xchg
and
not
jo
pop
xlat
inc
push
sbb
cmp
xchg
xchg
cmp
pushf
pop
jle
rcll
in
sub
mov
xchg
push
xorb
js
mov
sub
mov
js
das
rolb
and
popf
aam
xchg
cmp
xchg
push
push
mov
and
sbb
add
mov
xor
xchg
in
loopne
mov
xchg
push
stc
xor
cmpl
cmpsb
rorl
shll
jg
jmp
pop
or
in
push
aad
jo
push
fdivs
xchg
push
mov
cmpsl
cs
xchg
imul
ja
fs
xor
jl
les
xchg
cmp
mov
or
pop
sub
sbb
movl
pop
scas
flds
mov
sub
adc
xor
xor
mov
cmp
xchg
insl
xchg
arpl
mov
mov
mov
out
jp
xor
add
out
jo
jne
mov
xchg
mov
mov
ja
push
mov
inc
xor
inc
add
outsl
mov
and
jmp
sub
lods
dec
in
xor
and
fadd
push
adc
xchg
sub
push
adc
xor
gs
arpl
add
xchg
shl
jg
xchg
or
inc
sbb
rcr
int
xchg
push
and
nop
push
push
mov
jnp
lods
mov
int3
decb
pushaw
loop
dec
cmp
leave
xchg
shll
adc
or
cs
cs
cmp
arpl
push
sub
cmp
mov
repz
jmp
rclb
push
rclb
adc
lock
fdivs
mov
xlat
xor
out
dec
aad
jp
stos
call
cmpsl
fdivl
cld
leave
insl
lea
mov
add
adc
ret
push
mov
fiadds
adc
xchg
pop
lret
in
icebp
inc
sub
push
insl
nop
test
out
imul
in
fnsave
pop
mov
fwait
cmp
sbb
stos
and
cld
cmp
cmpl
mov
fdivr
aad
cmp
pop
nop
fisttps
sbb
or
cltd
out
ljmp
sub
pop
pop
loopne
mov
add
cmpsb
stc
outsl
sub
movsb
push
mov
in
fsub
and
sub
mov
aaa
mov
pop
inc
and
mull
shll
outsb
sar
xor
mov
push
jecxz
sub
int3
rcl
stos
mov
or
repnz
and
ds
xor
mov
dec
call
sub
std
imul
daa
jle
push
les
and
pop
nop
cmp
and
dec
aam
and
stos
into
cmpsl
jmp
rcll
inc
jl
or
out
rcr
cmp
into
dec
stc
xchg
cmp
in
mov
cmp
imul
repnz
sahf
lock
push
sub
cmpsb
adc
arpl
or
jl
xor
push
fistpll
pop
scas
sub
dec
repnz
test
xorl
fists
pushf
cmp
push
sarb
addr16
or
jne
lahf
clc
pop
xchg
out
add
dec
xor
dec
bound
jmp
test
mov
std
and
jno
jo
inc
pop
jg
mov
xor
xor
jne
fs
cli
jl
lcall
aas
and
hlt
push
xor
xlat
rorb
xorl
xor
loopne
cmp
jns
test
test
lret
popf
sub
sbb
idiv
lret
adc
push
pop
and
sub
push
mov
aam
repnz
lcall
push
fwait
xor
add
and
or
pusha
test
loopne
out
cmp
jmp
sbb
jge
dec
mov
fstl
cmc
adc
cmp
xchg
cmp
pop
lds
dec
movsl
fdivr
push
xor
lock
pop
daa
lcall
shrl
outsb
cltd
rorb
jp
add
jb
pop
setae
adc
mov
and
or
inc
into
fs
shrb
push
cmpl
int3
call
lock
and
push
mov
in
push
jo
jne
mov
sbb
insb
ss
mov
mov
or
sti
mov
and
mov
fiaddl
test
iret
mov
iret
sbb
mov
adc
jnp
gs
mov
cmp
sbb
pop
rclb
push
dec
cltd
xchg
loope
repnz
jns
mov
mov
jle
mov
xchg
loope
lock
es
inc
adc
fisttpl
fidivrs
int
or
push
leave
outsl
pop
mov
mov
stos
mov
lock
outsb
out
rorl
into
push
sub
fnsetpm(287
inc
sahf
das
sub
inc
mov
stos
jbe
jnp
mov
gs
loop
popa
dec
shll
cmp
sbb
jge
jle
jns
lea
add
cmp
sbb
cmp
outsl
cmp
mov
xchg
roll
add
add
add
loopne
xlat
or
cmp
jbe
cmp
mov
xchg
movl
jno
ss
inc
xlat
cli
sub
inc
nop
shrl
xor
jge
sub
rolb
sub
jno
pop
mov
and
imull
cld
and
movsl
cmc
or
mov
cmp
pop
bound
std
ret
stos
fs
adc
sub
lea
into
dec
xor
call
and
xchg
ja
dec
inc
lret
adc
dec
inc
loopne
ret
pushf
inc
loope
dec
dec
inc
dec
in
inc
jb
mov
in
scas
pop
mulb
jnp
mov
cmpsl
mov
lea
ret
mov
dec
dec
clc
mov
roll
imul
sub
jae
cmc
and
pop
inc
imul
outsb
xchg
call
and
fwait
mov
stos
mov
push
imul
sarb
jg
test
adc
sahf
out
icebp
push
pop
imul
daa
inc
out
adc
pop
icebp
loop
ja
inc
inc
ret
enter
add
in
repz
cmpsb
mov
lret
out
pop
dec
xchg
je
jbe
shlb
test
sbb
sti
out
test
mov
dec
fucomp
mov
cmpsl
sbb
scas
push
push
and
inc
push
out
sbb
mov
sbb
adc
mov
enter
or
lea
sub
push
cltd
mov
push
inc
fsub
ss
jno
je
hlt
fnstcw
stc
inc
ljmp
sub
mov
xor
pop
jb
inc
xchg
mov
pusha
std
or
stos
cwtl
push
es
lods
mov
mov
jb
stos
mov
xor
push
push
jle
daa
popf
adc
repz
lahf
xor
jg
mov
lds
fdivp
mov
jne
fildl
test
sahf
jae
dec
mov
mov
add
out
jecxz
fcompl
mov
or
repnz
aad
lcall
sbb
imul
jo
repz
push
mov
jno
lods
rcrb
pop
add
cmc
cwtl
ror
xorl
lahf
mov
popf
or
xor
push
pop
mov
addr16
or
out
lcall
lret
jb
adc
ds
mov
jp
fistpll
scas
pop
mov
ss
pop
hlt
movsl
popa
push
mov
sahf
stos
cmp
outsb
sbb
pop
adc
call
aad
add
adc
dec
mov
sub
insl
test
rcr
mov
fistpll
cmpsl
sbb
fsub
or
loope
push
mov
push
push
push
lret
shl
test
dec
jb
outsb
divb
sub
push
pop
adc
leave
loop
in
ror
adc
pop
lcall
out
cmp
mov
and
dec
mov
popa
mov
or
shl
ja
testb
imul
xorb
pop
loop
movsl
dec
les
movsl
loop
mov
sbb
sub
inc
popf
or
dec
dec
leave
out
cmp
sbb
popa
mov
adc
mov
add
cltd
xcrypt-cfb
cmpsl
mov
dec
js
fsts
adcb
sahf
outsl
lret
mov
fstpl
aas
or
xchg
int
out
cli
jecxz
add
and
jbe
and
add
ret
mov
mov
adc
cmpsb
stc
cmp
adc
outsb
xchg
or
push
mov
xchg
sub
les
pop
mov
sbbl
xchg
jno
mov
and
sahf
inc
insl
repnz
push
cmp
and
xor
adc
sahf
mov
push
aam
sub
dec
aam
sbb
loopne
sbb
and
dec
pop
mov
xchg
or
data16
ss
sub
cmp
lcall
das
imul
or
xor
mov
mov
pop
sub
cltd
ret
and
xchg
ret
std
hlt
push
mov
stc
insb
ss
arpl
push
nop
cwtl
cs
jl
int3
imul
stc
adc
dec
std
in
fldt
cltd
pop
adc
lds
fisubrs
mov
pop
and
mov
lock
mov
add
sub
or
inc
cmp
icebp
bound
lret
fsts
sahf
xchg
or
lds
cmp
xchg
in
mov
sbb
rcll
jmp
je
pop
mov
xchg
xchg
int3
mov
rorb
push
insl
popf
push
sub
stc
mov
pop
add
shrb
jp
xchg
loop
fwait
stc
inc
ds
cld
imul
subl
cli
adc
loop
pop
ficomps
outsb
out
push
and
dec
mov
pop
jb
mulb
cmp
and
call
idiv
sti
popf
push
xor
aaa
xchg
nop
xchg
shlb
in
rol
test
pushf
xchg
inc
jo
jno
mov
sbb
fcoms
je
xchg
lea
cli
sub
int3
imul
xlat
popf
push
sbb
stc
sbb
jge
mov
mov
lret
pop
out
sub
dec
xor
sti
cmp
out
xchg
sti
pop
push
insb
mov
lea
jg
add
cmp
cmp
popf
sub
stc
inc
mov
adcl
push
gs
or
and
mov
fldenv
push
pusha
xchg
add
pop
rolb
pop
dec
pop
test
mov
sub
repz
shrl
jge
addr16
dec
hlt
lods
enter
mov
jp
mov
adc
mov
mov
xchg
pop
in
mov
xchg
bound
push
arpl
adc
pushf
mov
jae
scas
cld
or
icebp
xor
cld
sub
or
and
loope
jle
xor
scas
cld
and
push
je
mov
sbb
popa
adc
and
dec
jmp
xchg
mov
dec
push
mov
mov
jb
xchg
push
dec
inc
roll
push
stc
mov
paddd
cmp
pop
jmp
or
cmpsb
sbb
ljmp
das
adc
mov
adc
nop
dec
lret
sti
out
ja
jnp
repnz
fdivrs
clc
jmp
psrld
out
dec
imul
pop
out
arpl
incb
mov
sarb
jbe
pop
lret
jae
pop
push
xchg
xchg
int3
das
adc
sub
adc
jmp
imul
aad
pop
in
mov
imul
jno
add
scas
ficoms
mov
lds
push
jne,pn
mov
ja,pt
sbb
lock
push
or
sarl
test
ret
pop
sbb
cwtl
sub
cwtl
adc
daa
inc
xchg
movsb
dec
mov
test
in
pop
add
popa
pop
in
lcall
ja
push
imul
fisttpll
and
add
xor
cmp
lock
inc
dec
fwait
push
insl
inc
rolb
enter
lcall
cmpsb
mov
iret
stos
mov
sbb
pop
mov
sub
pushl
jl
sar
jmp
lods
sub
daa
std
test
and
stos
mov
rorl
movsb
cld
dec
jne
dec
jmp
xchg
or
xchg
sbb
push
bound
cmpsl
je
dec
push
add
fwait
lock
dec
nop
jl
test
push
imul
cmp
add
xabort
aam
dec
adc
call
enter
mov
push
add
mov
jae
test
add
movsl
cmp
fmull
dec
adc
xchg
testb
sti
push
add
sar
fisubrs
dec
cmpsb
data16
adc
sub
js
pop
inc
dec
xchg
cmpsb
cs
movsl
cmp
jg
inc
into
dec
lret
insb
faddl
test
mov
call
fdivs
repnz
dec
pusha
jmp
pop
adc
pushf
js
jno
mov
enter
das
lcall
fwait
pop
jnp
dec
mov
mov
pop
sbb
mov
mov
xchg
push
push
lea
add
xchg
jl
dec
sbb
jl
jne
xlat
adc
pop
les
jp
repz
push
push
test
cli
lods
and
push
mov
mov
xor
inc
sbb
in
jecxz
je
and
push
bound
or
jle
jle
and
sub
mov
xor
jns
sbb
inc
adc
div
out
je
setle
lds
cltd
adc
cmp
or
leave
shl
outsb
mov
add
ror
psrld
clc
lods
outsl
xlat
add
push
scas
cmp
int
imul
clc
repnz
sub
cmp
mov
stos
sbb
cli
sub
pop
test
mov
mov
xchg
sahf
dec
xor
out
roll
mov
inc
in
mov
jnp
dec
mov
lahf
out
mov
insb
jb
jo
frstor
cmp
push
mov
int3
jl
cmc
or
cmp
jnp
popf
stos
mov
imull
jl
mov
jnp
adc
les
jo
and
cmp
call
mov
pusha
in
add
aam
mov
lret
jns
xor
sbb
jnp
jo
push
test
xor
int3
cltd
outsb
jle
mull
sbb
rcrl
stos
cltd
push
fldpi
xchg
adc
pop
sub
xchg
inc
icebp
mov
inc
out
test
xchg
add
shl
imul
enter
ds
int
pop
push
jl
sarl
mov
add
cmp
jno
in
movsl
adc
sti
dec
shlb
mov
or
lcall
nop
jle
inc
adc
dec
gs
jle
cmp
dec
mov
xor
jns
push
mov
loop
mov
fstpl
or
and
loopne
mov
jne
ret
cmp
mov
and
mov
xchg
int
movsb
dec
in
lcall
lods
hlt
push
dec
mov
icebp
fcmovne
lods
jnp
pop
adc
sub
nop
push
adc
lahf
mov
rcrb
dec
ds
and
sub
enter
jle
aad
call
xor
in
xchg
mov
xchg
hlt
test
xchg
and
vmovaps
push
sbb
bound
mov
inc
sti
loopne
pop
and
mov
test
xchg
jae
jp
mov
pop
test
jne
test
fwait
out
pop
sbb
dec
dec
pushf
lds
jne
popf
stos
cmp
xor
pop
mov
inc
or
lahf
js
mov
add
lret
inc
fwait
adc
push
xchg
sub
mov
test
mov
mov
mov
xchg
les
in
movsl
mov
cmp
stos
orb
lods
insb
aaa
pop
insb
lods
xor
xchg
pushf
mov
pop
xor
lods
aam
add
dec
and
in
into
xor
xchg
mov
inc
adc
arpl
mov
out
mov
stc
jecxz
je
adc
data16
rcrl
sub
dec
shlb
scas
xor
inc
stos
and
push
gs
clc
sub
mov
dec
add
push
lods
aam
cmp
or
stc
xchg
loope
lahf
js
and
jbe
rcrb
je
pop
pop
ret
push
out
push
popf
inc
jge
xchg
adc
stos
add
jne
ret
fs
push
icebp
loope
out
imul
adc
inc
ja
jae
cmp
add
lcall
or
sbb
daa
insl
dec
clc
out
in
mov
out
pop
sbb
sbb
clc
sbb
pop
dec
inc
sub
faddp
push
les
lds
aad
leave
mov
mov
lock
and
repz
push
fiaddl
je
stos
mov
cld
xchg
bound
mov
xchg
aam
push
push
xchg
push
xor
add
nop
push
insb
data16
ret
xor
xor
xor
add
mov
insl
push
xor
cmp
mov
cmpsl
lods
adc
pusha
into
xor
bound
dec
sti
jge
fsubrl
out
mov
jnp
xchg
inc
push
popl
pop
cld
in
icebp
ret
adc
les
scas
pop
subl
sbb
arpl
leave
mulb
jno
hlt
mov
outsl
add
fs
mov
xor
pop
mov
or
sbb
lods
mov
inc
les
fcoml
mov
ret
pop
arpl
into
jns
or
mov
negb
outsb
rcrb
jle
or
inc
add
cld
mov
inc
imul
out
mov
ret
es
out
mov
addb
enter
in
leave
push
cmpsl
jge
inc
and
sub
nop
ds
into
fdivl
jecxz
rclb
adc
mov
stos
daa
sbb
inc
lahf
xchg
lock
sbb
roll
mov
sub
call
mov
xor
adc
adc
mov
adc
jle
jb
ja
mov
and
test
add
outsl
and
push
call
mov
cli
movsb
stc
cmp
add
iret
in
movsb
xchg
nop
ja
xchg
stc
cmp
dec
jnp
dec
push
insb
sbb
sub
adc
lock
loop
icebp
addr16
xchg
popa
sbb
xchg
cmc
dec
ret
repnz
add
adc
aas
xchg
push
mov
or
mov
sbb
jp
shlb
repz
in
mov
in
xchg
clc
push
xchg
mov
ficoml
adc
mov
jl
or
push
sti
cld
out
stc
pop
lods
outsb
js
or
imul
sahf
mov
lret
jno
mov
pop
ljmp
fcompl
cmp
sbb
cmp
xchg
mov
xchg
sahf
inc
scas
out
sub
mov
jecxz
enter
mov
push
mov
lds
ret
std
das
pop
or
pop
lds
aam
out
add
sbb
mov
mov
enter
dec
sarl
lret
mov
sbb
dec
stos
adc
adc
dec
add
out
dec
xchg
and
xchg
push
les
ret
xor
fidivrl
outsb
cmp
aam
pop
or
xor
std
arpl
sub
xchg
lret
in
mov
sbb
lret
imul
icebp
mov
out
jnp
cmp
notl
arpl
ret
pop
imul
dec
cmp
jnp
jl
out
push
std
xchg
mov
mov
xchg
or
popf
push
dec
add
jle
dec
cli
add
int3
scas
adc
push
inc
push
mov
aaa
rcr
jno
lock
lahf
dec
jo
leave
loopne
push
dec
stos
inc
aad
push
xchg
or
stos
mov
lret
pop
into
cwtl
roll
and
cmp
int3
mov
loope
or
imul
mov
fistpll
adc
xorb
popf
pop
ljmp
mov
xchg
inc
jb
dec
js
pop
dec
adc
xor
mov
push
sbb
stos
jecxz
sub
cmp
and
ficoml
push
push
lds
aad
pushf
lock
hlt
add
shlb
pop
ss
js
and
mov
mov
mov
popa
mov
mov
inc
daa
or
fs
mov
dec
jno
cmp
pop
or
cmp
xchg
push
bound
loopne
inc
xchg
mov
arpl
gs
xchg
mov
jl
jae
cli
orb
pop
xchg
cmp
test
arpl
adc
mov
mov
lock
mov
dec
data16
dec
sbb
mov
add
or
popa
mov
push
and
pop
es
dec
sarl
ss
mov
mov
sbb
pusha
or
mov
jnp
stos
pop
and
push
xchg
fisttpll
or
dec
adc
jne
add
sub
push
aaa
mov
ds
jl
adc
mov
sub
enter
pusha
cltd
lods
loop
inc
or
sub
mov
pop
xchg
loope
cmp
mov
sti
push
cmp
mov
push
enter
mov
lods
fiaddl
xchg
and
dec
adc
mov
or
sub
sbb
add
xchg
push
pusha
jno
push
loop
pop
or
add
sub
jmp
mov
jnp
dec
roll
test
jb
test
cmpl
cmp
sbb
mov
stos
sub
push
cmp
mov
inc
gs
movsl
sahf
cmc
or
loope
pusha
in
stos
loope
pop
sbb
xchg
test
movsl
je
cltd
push
mov
xor
jecxz
les
mov
xor
fcmovne
push
push
std
dec
mov
inc
xchg
loopne
dec
xlat
out
out
mov
je
outsb
pushf
aaa
xchg
stos
stos
xchg
hlt
repz
enter
ja
push
clc
and
and
cli
cmp
inc
xor
pop
sbb
decl
sti
pop
aas
fisubrs
jl
push
xchg
ljmp
inc
sub
je
sbb
jmp
xchg
fistps
loop
mov
and
lea
push
dec
cld
repnz
xorl
out
std
fistpl
sub
outsl
mov
or
pop
mov
test
outsl
or
cmp
push
xchg
push
jecxz
loope
inc
pop
xchg
and
dec
push
dec
or
sbb
cmp
inc
mov
stc
sti
call
mov
mov
pop
sub
test
dec
xorb
outsb
sub
sub
mov
aas
jbe
mov
sub
jle
pop
mov
adc
sbb
divl
inc
push
or
es
fbstp
sahf
out
cltd
mov
pop
out
cmpsb
adc
xor
lret
mov
adc
pop
mov
call
pop
js
cmp
test
mov
imul
cmc
xchg
lret
jno
clc
fbstp
jae
sahf
ss
mov
inc
daa
icebp
es
jnp
add
mov
scas
jnp
jg
std
dec
scas
push
popf
adc
loopne
pop
lcall
lock
xchg
loop
mov
int
mov
add
xchg
stc
mov
or
sbb
rcll
in
sbb
mov
insb
ret
xor
pop
loopne
jbe
sahf
lahf
inc
ror
rorl
jle
dec
pushf
mov
sbb
inc
out
mov
or
decb
ja
addr16
jbe
outsl
cmp
subb
mov
or
mov
aas
push
add
insl
push
sub
shl
ja
or
movl
enter
cmp
add
mov
jbe
cmpb
adc
push
cmp
outsl
mov
push
or
jb
cmpsl
fsubl
sub
test
loopne
testb
fsubrl
pop
mov
mov
cmp
in
mov
out
jle
dec
pop
cmp
nop
test
sbb
fcmovne
pushf
fiadds
mov
mov
into
push
sbb
sahf
inc
add
mov
dec
pop
test
daa
mov
imul
cmpsb
cmc
cmovae
dec
mov
mov
test
orb
jecxz
mov
fs
or
xchg
mov
pushf
enter
or
cwtl
lahf
enter
xchg
outsb
mov
jmp
jbe
out
mov
mov
dec
xorl
xor
push
arpl
pop
jmp
xor
shl
test
xchg
lds
shrb
dec
mov
outsl
xchg
jnp
lahf
or
sahf
shrl
pushf
aas
mov
fstl
imul
jnp
insl
cmp
ret
dec
sbb
mov
call
pop
xor
lret
cmpsl
mov
jmp
pop
sahf
scas
xlat
repz
jl
out
out
stc
into
inc
dec
mov
adc
jne
insl
ret
or
jo
mov
push
imul
cmp
pop
or
mov
stos
imul
push
or
push
push
mov
mov
lcall
cmp
or
imul
loopne
repz
sub
rolb
lret
lock
cmpsl
popf
orb
jne
je
negl
or
ljmp
push
imul
cmp
test
ret
mov
ret
pop
stos
pop
cli
daa
sbb
out
into
shlb
in
pushf
jmp
dec
mov
mov
rol
insb
jne
mov
inc
rcll
lret
jnp
xor
xchg
inc
sub
mov
sub
insl
cs
dec
or
js
test
mov
dec
dec
pop
int
sbb
push
or
sub
mov
xchg
dec
push
add
or
aam
add
mov
mov
xchg
xchg
les
sbb
pop
mov
lds
push
adc
sbb
repnz
dec
pop
sbb
cltd
cmc
fildll
mov
mov
fstpl
cld
add
fidivs
cmp
fdivs
js
les
add
ret
in
ror
outsb
pushf
imul
sbb
popf
int3
hlt
int3
aam
ja
subl
dec
jl
lods
insl
push
push
push
or
jnp
int
mov
mov
jbe
jae
scas
pushf
pop
je
gs
out
cmc
sbb
jmp
daa
xchg
jge
xchg
xchg
shll
adc
dec
xchg
clc
push
arpl
lahf
xchg
test
data16
inc
jne
sbb
dec
sbb
int3
cmp
mov
dec
mov
scas
lahf
dec
les
enter
cmp
jae
mov
and
xor
inc
in
adc
shr
push
mov
std
jl
and
inc
outsl
xor
sub
push
and
jbe
cwtl
daa
int
fldl
pop
test
pop
mov
cmpsb
pop
lds
popa
fmull
and
push
push
xchg
or
ret
adc
out
leave
mov
cwtl
xchg
add
mov
xchg
fs
push
add
sbb
add
cwtl
or
sbb
dec
mov
dec
mov
scas
sub
or
mov
lock
arpl
push
imul
leave
mov
ret
adc
insb
lcall
sbb
incl
ret
push
mov
leave
pop
aaa
test
push
pop
jae
sahf
out
push
imul
arpl
xorb
insl
sbbl
js
jmp
or
cmpl
add
shlb
jnp
insl
cmpsb
outsb
cld
mov
testl
in
cmp
outsb
call
dec
sub
rcl
cmpsb
es
loop
xchg
fisubrl
les
lock
sub
xor
imul
dec
pop
mov
jo
fildll
xchg
mov
jle
add
aaa
pop
fldl
push
sub
pop
add
mov
std
pop
sub
repz
xor
insl
lock
and
mov
xchg
add
test
call
mov
dec
ds
lret
out
loope
dec
xor
mov
mov
popf
aad
mov
pop
fisubrl
and
xchg
adc
sbb
out
pop
jecxz
push
xchg
and
testl
ret
ljmp
movsl
push
outsb
adc
lods
jnp
cmpsb
je
or
aaa
dec
testl
add
jbe
outsl
enter
loopne
fbld
inc
mov
sti
out
loope,pn
push
scas
xor
std
loopne
jmp
jl
out
test
pop
sbb
add
cmp
pop
and
xor
mov
cmp
ss
stos
xlat
and
es
hlt
stos
cmpsb
mov
aaa
fs
in
fisttpl
fists
stc
dec
sbb
ljmp
xor
shr
sbb
pop
ss
rcr
mov
jmp
mov
gs
js
push
enter
rcr
jo
outsb
mov
push
je
jecxz
cmpsl
xor
fdivl
adcl
add
cmp
sahf
mov
jne
lcall
mov
jp
or
fnsave
scas
sub
adc
sub
push
ds
mov
roll
sti
mov
movsb
cmp
sub
scas
sbb
clc
out
pusha
jmp
jle
dec
xchg
out
xchg
jnp
in
fwait
or
push
jo
rcll
popf
xor
adc
jne
ss
mov
hlt
xchg
ljmp
mov
xlat
add
lahf
push
sub
cltd
jne
add
addl
or
fdivrl
lcall
ret
fwait
mov
jg
ljmp
outsl
sbb
es
dec
mov
adcl
xor
push
popf
insl
outsb
dec
sbbl
mov
push
call
test
add
leave
repnz
cld
push
cmp
sub
lahf
cmp
mov
adc
test
les
sub
sub
mov
cwtl
cmpl
or
jne
ret
imul
addr16
aaa
sub
sub
aaa
or
aaa
inc
mov
outsl
imul
in
pop
popf
inc
cmp
les
inc
loopne
adc
xchg
sbb
jle
out
jne
xchg
xchg
andb
sahf
jle
les
pop
rclb
xor
lcall
xchg
mov
xor
sbb
push
add
jnp
movsl
and
push
repz
mov
xor
stos
aas
je
cmc
fadd
mov
mov
push
das
pop
jge
test
call
add
ljmp
sti
push
aam
fnsave
mov
int3
or
es
or
mov
and
dec
in
roll
enter
xchg
loop
lods
out
decb
aas
and
pop
jmp
enter
push
movsl
xor
and
cmpsl
cmp
add
dec
ficompl
xor
and
pop
sahf
cmp
in
push
mov
imul
jno
sbb
sbb
outsb
and
data16
add
popf
adc
bound
inc
fistl
cmp
sbb
fiaddl
mov
cmp
adc
xchg
ret
scas
imul
or
sub
lret
pop
fs
jecxz
insb
jl
jle
lock
push
mov
mov
mov
std
dec
gs
adc
jo
cmp
mov
pop
sub
adc
js
push
cmp
pushl
and
jne
jno
loopne
shll
xor
cld
and
add
mov
mull
push
scas
push
cmpb
aam
lcall
lcall
push
xchg
xchg
je
or
test
std
xchg
test
sub
test
jnp
adc
fbstp
in
arpl
mov
xchg
ljmp
xor
sti
stc
mov
fstpl
out
jge
dec
or
imul
mov
push
sbb
mov
jg
rcrl
xor
icebp
mov
sbb
cltd
rolb
mov
rorl
js
xchg
push
mov
lcall
inc
clc
mov
fisttps
push
adc
cld
mov
stos
or
insb
ljmp
push
mov
jge
jp
imul
xor
add
arpl
adc
std
aad
mull
or
dec
fnstenv
subps
jae
cmp
mov
push
push
mov
popa
or
add
jge
sahf
jmp
lret
pusha
lret
dec
iret
sbb
leave
push
je
mov
repnz
or
sbb
sub
decl
and
push
test
popf
vhaddpd
movsb
add
sub
mov
aaa
sub
insb
adcb
adc
out
andl
ret
js
push
xchg
addr16
add
aas
and
mov
lcall
cmc
or
jle
mov
hlt
dec
sbb
stc
cmc
jnp
adc
jb
adc
mov
pop
movsl
cmp
add
jo
cmp
pop
mov
pop
dec
aas
add
rcrl
pop
ficoms
jmp
ret
xor
fwait
ljmp
xlat
test
data16
lcall
gs
fs
xchg
cmp
sar
int3
mov
mov
xor
lret
jle
or
in
xor
cltd
jmp
test
popa
jne
clc
es
scas
push
jnp
push
or
jae
add
or
jge
sub
mov
push
jmp
loopne
mov
divb
push
or
lahf
test
cmp
pop
push
into
cmp
nop
sarb
adc
and
aad
mov
lds
jge
pusha
cmp
sub
push
in
xor
mov
sbb
lret
call
or
test
and
or
and
xlat
arpl
sub
sub
js
addr16
and
jg
or
insb
or
xor
mov
mov
mov
cwtl
add
std
xchg
adc
mov
lret
cwtl
jg
popf
cmp
lahf
sbb
out
imul
xchg
nop
sub
loopne
lock
cmc
dec
mov
insb
lods
dec
mov
fyl2x
sub
pop
adc
xor
insl
imul
sarl
push
imull
sbb
sub
jno
cltd
pop
iret
mov
cmp
jl,pt
dec
mov
pop
mov
les
call
sarl
mov
ds
sarb
xor
jae
in
inc
mov
pop
xchg
or
push
fidivs
lret
std
jl
in
rol
cmpsl
mov
sub
sub
jl
pushf
fsts
xor
aam
adcl
shr
and
enter
and
add
jl
add
and
imul
or
stos
nop
addb
xchg
push
mov
push
int3
std
jmp
mov
or
test
cmp
mov
jecxz
fstps
and
xchg
imul
push
push
cld
ret
aam
push
xchg
icebp
mov
xchg
aas
push
inc
test
rorl
cs
jp
cld
and
aas
push
das
and
jns
cmp
jne
mov
push
mov
ret
imul
xor
push
cld
inc
faddl
inc
nop
popa
sbb
add
push
insl
int3
ret
jecxz
cmp
ljmp
enter
mov
gs
lock
in
les
add
data16
test
sti
sbb
daa
pop
cli
inc
adc
call
inc
adc
insl
imul
xchg
push
xchg
mov
or
popf
cmp
adc
aad
js
and
mov
push
loopne
loop
je
mov
pop
cmp
inc
loop
add
pop
cmp
mov
mov
xor
mov
nop
xchg
pop
mov
add
dec
outsl
pop
insl
ret
mov
cld
xchg
or
push
imul
mull
lret
daa
inc
push
sbb
sti
ret
pop
adc
jno
leave
outsl
dec
push
pop
mov
adc
mov
mov
dec
cmpsb
jbe
ret
push
inc
faddp
insl
mull
ds
inc
cs
ret
cmp
xchg
insl
mov
jmp
pushf
inc
push
mov
lea
cmp
mov
adc
push
add
xchg
pop
adc
sbb
call
ficoml
inc
arpl
or
outsb
pusha
ret
adc
fnstenv
hlt
ficoml
andb
scas
mov
stc
in
hlt
and
dec
inc
xor
mov
ljmp
mov
pop
pop
jmp
xchg
daa
fldenv
adc
xchg
xor
sub
loopne
pop
or
inc
sub
outsl
jmp
popf
rcl
sub
cmp
and
cltd
outsb
xchg
push
fdivr
popf
cltd
mov
pop
sub
leave
test
ret
pop
arpl
jecxz
decb
and
adc
fadds
ficoml
ret
mov
add
adcl
movsb
subl
into
xor
add
test
mov
mov
push
xor
loop
and
orb
decb
sbb
xlat
mov
inc
cmp
cmpsl
lods
repnz
fists
popf
xlat
out
push
adc
popa
pop
mov
rorb
pop
cmp
sbb
mov
ja
or
in
jbe,pn
cwtl
lret
aaa
stos
push
push
pop
sbbl
xchg
std
insb
fistps
daa
sub
iret
xchg
outsb
imul
ds
dec
lock
outsl
cs
mov
mov
and
or
mov
fisubl
push
cmp
mov
fldl
cltd
adc
cmc
or
cmc
js
fnstsw
adc
es
push
test
fwait
call
mov
popa
out
xchg
rclb
faddp
out
push
cmpsl
mov
add
mov
jnp
add
sbb
das
sub
les
inc
imul
iret
mov
mov
xchg
xchg
xchg
shl
lea
loope
in
cmp
ror
shl
fdivrs
popa
lods
cld
fmuls
rorb
pop
mov
addr16
sbb
dec
cld
pushl
popf
xlat
push
fadds
xor
dec
lret
adc
sub
imul
popf
shrb
sbb
inc
sbb
cmpsl
jg
ds
pop
scas
mov
in
mov
scas
and
aam
cs
sbb
aas
rorb
xchg
pop
fadd
idivb
dec
mov
adc
push
add
add
cld
roll
out
dec
aam
cmp
jge
jnp
jns
in
out
imul
test
sbb
sub
inc
iret
test
cld
jle
arpl
cmpl
mov
adc
lods
popa
sbb
adc
mov
add
in
call
jp
outsb
cmpb
xor
fldcw
cmp
hlt
je
fildl
hlt
sbb
xor
cmp
mov
das
cld
in
push
mov
add
mov
imul
pop
xchg
or
addr16
mov
xchg
lods
repnz
and
mull
fs
into
nop
and
pop
stc
mov
sarw
loop
sbb
cs
lods
das
popa
popa
test
jecxz
cmpsb
cmp
inc
or
in
dec
movsb
leave
mov
lret
shlb
in
jge
cmp
lret
pop
xchg
outsl
jns
out
je
and
sbb
push
sub
or
xchg
shlb
xchg
lret
loope
inc
mov
push
and
pop
cmp
scas
cld
inc
cmp
sub
scas
cltd
xor
push
mov
fcoms
lods
push
int3
cmp
cwtl
push
pop
pusha
int3
or
inc
push
and
or
rcl
mov
jecxz
sub
and
dec
push
scas
sub
add
insb
add
and
stos
iret
cmpsl
jne
jl
in
outsl
push
mov
mov
mov
mov
mov
lret
pop
dec
in
in
scas
bound
or
cmp
jo
inc
fisubl
sub
sub
mov
xchg
insl
leave
pop
dec
pop
cmpb
mov
je
jae
nop
push
mov
outsl
scas
lret
mov
cltd
adc
jmp
sbb
sbb
mov
lods
rcrl
rorb
imul
or
aas
push
adc
andb
adc
pop
loopne
pusha
and
mov
pop
mov
rcl
dec
leave
sbb
cmc
ljmp
daa
and
adc
and
fs
jne
or
pop
mov
rorb
fwait
out
fcoml
pop
add
mov
jo
test
jnp
xor
and
xlat
mov
jae
pop
in
mov
fistps
mov
pop
lret
js
insl
insl
pusha
push
pop
out
xchg
fldcw
ss
xchg
cli
mov
sub
dec
js
jae
pop
mov
sub
inc
sahf
sbb
lahf
jnp
cwtl
cmpsb
sbb
inc
scas
gs
sahf
sarb
inc
popa
mov
adc
cmpsl
test
sub
incb
push
xor
stos
cmp
sub
inc
cmpsb
push
cli
rclb
js
fwait
in
fidivl
mov
ljmp
xchg
shll
cli
test
std
sbbl
flds
add
jl
pop
scas
clc
push
ret
stos
mov
enter
dec
sbb
fimull
bound
mov
pop
das
mov
push
daa
mov
bound
loop
out
outsl
gs
cli
jb
xchg
mov
and
lret
cmc
lds
pop
ds
mov
cmc
sub
mov
mov
data16
jo
mov
lret
xor
in
lea
in
ja
insl
lds
stos
push
xor
std
lods
aas
insb
out
scas
int
into
fdivp
add
mov
fwait
inc
xlat
ss
and
xchg
xchg
inc
or
fisubrs
inc
xchg
mov
pop
mov
js
cmc
mov
aas
jb
push
inc
idivb
mov
adc
pop
ficoms
dec
pop
mov
mov
sti
xlat
dec
in
sbb
xor
sarl
call
cld
adc
icebp
jo
sub
push
sub
aas
mov
adc
data16
inc
cmp
push
clc
int3
insl
scas
imul
sub
in
call
jmp
push
in
xchg
fadd
sbb
xor
repnz
add
outsb
dec
iret
fbstp
divb
stc
lds
jne
mov
imulb
push
cmp
rcll
push
or
rorb
out
add
sti
out
sub
das
repz
adcl
jmp
jne
push
lock
cld
loope
cmp
mov
pop
push
xor
fnstsw
sub
pop
pop
lahf
pop
loopne
addr16
div
sub
setno
mov
ja
and
clc
cltd
lret
mov
pop
mov
push
lret
rol
push
xor
out
daa
test
les
pop
out
int
ja
cs
lret
and
cmpsl
xor
mov
inc
push
add
addl
lea
push
addl
mov
sub
rclb
pop
lock
mov
insl
pop
out
pop
xor
inc
fs
fnsave
in
push
xchg
mov
out
cltd
cmpb
or
test
mov
sbb
lcall
cmp
mov
mov
inc
clc
pop
test
xchg
dec
fisttpl
cmc
test
les
xor
jge
mov
sub
outsl
repnz
mov
pusha
out
cmp
xor
xchg
add
add
mov
add
jne
leave
xchg
sbb
out
js
sub
inc
ret
inc
outsb
leave
jns
sbb
cs
fisttpll
pop
ljmp
into
pop
xchg
aas
or
roll
sub
push
es
jecxz
cmpsb
lret
mov
push
xor
mov
xlat
mov
cmp
sub
pop
lds
sbb
xor
test
push
push
aad
out
fadds
xor
mull
out
test
sti
andl
scas
or
dec
cmpsb
dec
outsl
subl
mov
cmp
ret
cli
movsl
dec
sbbb
push
imul
pop
adc
in
add
lahf
outsb
fs
and
pusha
mov
mov
lcall
subb
xchg
xor
pushl
inc
les
and
jecxz
aad
in
jge
scas
std
sbb
mov
or
dec
outsb
mov
into
push
push
xchg
aad
or
stos
cmpsb
lods
cltd
gs
adc
pop
aas
in
lds
int
jle
jg
loope
nop
cli
mov
xor
mov
je
lret
cs
repz
fldl
sbb
test
or
push
jle
pop
inc
xorb
cmpsl
and
xchg
fsts
fiaddl
adc
jmp
or
addr16
add
mov
in
xchg
mov
jl
mov
push
and
lret
repnz
in
push
mov
mov
fistl
popl
cltd
xchg
repz
add
xor
inc
pop
pop
or
loopne
mov
ljmp
mov
add
mov
repz
xchg
xor
loope
adc
cli
popf
sub
movsb
iret
cmp
xlat
dec
xchg
pop
jl
sbb
adc
pusha
jns
cmp
xchg
xchg
pusha
adc
hlt
and
divb
mov
xchg
rorl
inc
sbb
inc
into
nop
cmpsb
shll
jb
mov
sarl
or
loope
push
xlat
stos
repnz
jne
nop
cmc
xchg
jge
rorb
lods
das
or
jnp
in
outsb
and
mov
outsl
mov
cmpsb
add
fmuls
mov
sub
sub
out
pusha
sahf
lcall
fistpl
sarl
pop
add
inc
inc
sar
test
lss
push
dec
mov
dec
cwtl
fdiv
in
std
inc
cmp
insb
aaa
mov
scas
lock
xchg
testb
sbb
scas
ljmp
lods
movsb
xor
jne
daa
jg,pt
mov
jbe
test
shl
and
or
sub
daa
pop
fimuls
mov
xchg
arpl
adc
dec
add
rorb
mov
mov
push
icebp
xor
in
imul
repz
push
imul
pop
mov
push
jns
test
movsl
push
negl
mov
and
dec
lods
jp
mov
or
daa
hlt
loopne,pn
lock
jne
dec
adc
sbb
out
out
rcr
daa
pusha
and
inc
mov
xor
xchg
mov
fcmovnbe
test
xor
int
ret
cli
mov
xlat
lods
lret
inc
sbb
mov
cmp
popa
test
xor
dec
xchg
std
loope
ja
xor
sub
ret
dec
mov
mov
inc
jo
imul
stos
pusha
cld
cs
mov
es
sbb
mov
ret
xchg
jbe
movsb
adc
fsubr
jecxz
scas
or
outsl
mov
inc
jle
sbb
xchg
aam
or
test
andl
sbb
test
out
xchg
insl
push
fistl
dec
popf
cmp
mov
push
xchg
mov
sbb
xchg
das
pop
xchg
bswap
lahf
xchg
pop
clc
inc
arpl
xor
fwait
jp
iret
in
outsb
inc
pop
inc
dec
fisubl
xlat
ljmp
push
push
ja
pop
rcl
cs
mov
call
movsl
out
in
daa
ljmp
lret
pop
por
daa
sarb
mov
push
pop
insb
dec
jno
sub
shrb
jo
cwtl
dec
mov
ret
mov
fstps
lea
popa
lock
mov
xchg
rol
xchg
xchg
lods
cld
scas
adc
popf
pop
dec
fstpt
daa
inc
les
aad
jbe
inc
xchg
xor
ret
mov
stc
lret
pop
insl
jae
loope
dec
cmp
mov
xor
outsb
pop
jb
or
pushf
fildl
lock
cmpsb
bound
add
outsb
movsb
pop
idivb
add
orl
xlat
out
sbb
addr16
inc
mov
xor
stos
fld
movsb
or
xor
movsb
ds
cmpsl
sub
sahf
ja
adc
out
icebp
and
jbe
subl
mov
or
popf
cmc
repz
xchg
pop
inc
adc
mov
push
addr16
shrb
data16
mov
mov
pop
hlt
xlat
fcmovnu
mov
and
scas
stc
mull
mov
dec
inc
lret
movb
push
push
int3
stos
insl
sub
pop
jecxz
add
outsb
in
xor
jp
cmp
cmp
pop
mov
sub
scas
adc
mov
outsl
jl
dec
arpl
pushf
inc
daa
sbb
fistpll
or
sub
dec
sbb
and
push
sub
jnp
fcoml
and
arpl
bnd
xor
loope
mov
gs
or
shll
cmp
cmp
jns
xchg
dec
jb
repnz
aas
or
dec
scas
mov
call
jnp
sbb
stc
and
mov
cs
mov
cld
xchg
fidivrl
and
inc
lock
push
sub
jmp
xchg
jg
sub
imul
movsl
rclb
fwait
push
imul
sub
sub
mov
loope
push
out
roll
ljmp
jge
test
adc
icebp
cmc
pop
pusha
jle
mov
pop
inc
xchg
add
pop
jns
pop
pop
sbb
daa
std
jmp
and
cmpsb
arpl
lods
scas
push
dec
lcall
out
jnp
cmpsb
adc
mov
jecxz
leave
out
inc
mov
or
pushf
push
loop
jo
xchg
lret
nop
bound
scas
and
push
inc
adc
repnz
pop
pop
and
hlt
mov
ljmp
imul
icebp
or
jge
out
sbb
rcl
scas
pop
xor
fildl
cmpsb
in
fimull
sub
repz
mov
addb
push
jno
mov
add
test
push
inc
jns
cmpl
fs
mov
jle
insl
mov
dec
mov
mov
inc
mov
fs
jl
jnp
rcr
mov
popa
jmp
arpl
xor
push
mov
pusha
leave
push
inc
fdivrl
jno
imul
mov
out
movsl
jecxz
sbbb
addr16
xor
and
or
adc
dec
in
push
adc
push
pop
rcrl
lret
pushf
mov
jno
cli
cmpsb
add
xchg
push
mov
adc
add
fiadds
aad
out
jb
lods
into
movsl
lock
outsb
dec
sbb
inc
push
mov
mov
cmp
test
add
jae
adc
dec
enter
pop
insb
repnz
outsl
and
add
jecxz
or
or
clc
out
lahf
repnz
push
add
icebp
inc
mov
mov
and
or
out
push
jg
lret
loop
mov
adc
inc
jns
jl
fsts
ja
pushf
repnz
stos
mov
mov
mov
aam
jo
push
push
popa
mov
mov
sub
cmp
iret
push
jle
xor
les
shll
push
cmp
pop
insl
loopne
test
ljmp
pop
mov
and
jne
jo
xchg
std
jb
imul
mov
sbb
test
sbb
andl
xchg
sbb
fmul
outsb
loope
shrl
mov
subb
fstpt
loopne
incb
out
pop
sub
push
push
dec
ja
push
fidivrl
cmpb
cmp
outsb
push
out
lds
pusha
scas
out
sub
aad
sub
mov
popa
or
out
xchg
jo
aam
scas
adc
mov
inc
and
push
jne
xor
outsb
add
dec
sbb
push
add
push
cli
dec
mov
push
pop
hlt
xlat
mov
in
inc
mov
pop
jl
push
mov
and
outsb
and
pop
mov
dec
xor
cli
or
stos
xchg
jge
faddl
cmp
push
testb
daa
icebp
fcomps
pop
bound
lahf
lods
aaa
fwait
mov
pop
sub
adc
sbb
push
testb
mov
xchg
loopne
xor
inc
lcall
and
lods
sub
pop
push
cld
xor
cmp
mov
mov
jl
jmp
pop
ds
imul
test
aam
repnz
lods
out
shlb
inc
stc
loop
or
out
xor
fcompl
xor
mov
mov
ljmp
std
push
lcall
test
adc
out
fstpl
or
mov
cmp
jl
push
push
mov
cmpsb
push
pop
aas
outsb
ficoml
out
and
sub
outsb
inc
jae
xor
jp
mov
stc
mov
push
xor
and
pop
fwait
inc
dec
loop
mov
sbb
cmp
mov
sbb
dec
push
ja
xor
mov
xor
pause
loop
fnstcw
outsb
insl
xor
or
cmc
xor
lcall
stc
push
in
cmpsb
mov
sbbb
lock
push
lea
dec
lods
xchg
jmp
xor
and
cltd
in
inc
shlb
adc
popa
pop
adc
push
movsl
hlt
aad
shrl
stc
jbe
jo
jbe
outsl
mov
aad
mov
xor
inc
scas
fsubrp
fldl2t
or
sub
mov
mov
mov
mov
popa
push
inc
dec
inc
lcall
mov
add
cmp
dec
mov
repz
into
cmp
dec
test
sub
ret
das
and
subl
shrb
loopne
cwtl
and
or
pop
add
aas
es
aam
sarb
subl
rcrl
roll
or
leave
and
lods
push
cmp
mov
aaa
push
add
lods
loope
xchg
mov
dec
pusha
rorb
adc
jecxz
popf
cmp
push
push
xchg
repnz
cmc
jno
cmp
pop
dec
xor
sbb
jmp
mov
mov
in
xchg
sbb
lret
or
nop
jg
lock
push
xchg
jecxz
and
and
iret
push
cmp
popa
fmulp
cmp
cmpsl
dec
popa
int3
push
jmp
shrl
sub
cmove
hlt
call
dec
loope
ss
or
addr16
lcall
lcall
and
pop
repnz
lea
pop
xor
sub
fbstp
pop
das
int
rcll
pusha
cmp
jl
fs
sbb
scas
sbb
pop
int
push
and
mov
inc
mov
or
and
jp
pop
aam
es
push
cs
adc
mov
add
sub
nop
pop
out
mov
addr16
incb
dec
sub
out
jb
mov
mov
cltd
cmpsl
sbb
push
cmc
sar
dec
shl
repnz
xor
repnz
or
sub
jmp
lahf
add
xchg
shrb
mov
lds
xlat
mov
das
fldenv
imul
insb
ret
shr
mov
add
lods
subb
cmpsb
fistpll
xorps
inc
test
xor
xchg
gs
push
add
adc
ljmp
pop
pop
and
test
aas
adc
adc
jmp
pop
push
in
xchg
push
cltd
pop
dec
pop
xor
loop
adc
xchg
add
aad
mov
cmc
pop
push
icebp
shlb
jle
mov
shlb
js
movsb
aad
and
adc
jnp,pt
lds
data16
and
or
xor
mov
pop
mov
jne
mov
fs
test
insw
push
shl
mov
stos
stos
stos
ds
cmp
shll
mov
fsubrl
cmp
call
jmp
push
dec
rcr
imul
sahf
mov
dec
pop
ljmp
lcall
push
std
aas
push
mov
pushf
push
cmp
push
jns
mov
xchg
bound
bound
rcrl
and
hlt
or
sbb
adc
test
cli
insl
sbb
int3
cli
push
inc
pop
lahf
push
mov
leave
pop
and
add
repnz
ja
filds
xor
sbb
push
xor
cmpsl
lds
loop
sub
data16
cmp
ja
pop
sti
sub
mov
lock
pop
pop
push
lcall
push
adc
inc
pop
out
pusha
sbb
aaa
mov
stos
fsubs
inc
fnsave
inc
jge
push
add
fisubrl
adc
mov
xlat
shl
cmpsl
in
js
inc
in
data16
cmpsb
sbb
jle
xchg
clc
push
aam
jge
arpl
loope
jl
push
movsl
mov
pop
cmp
lret
adc
aaa
xor
dec
aad
subl
sub
pusha
sub
scas
jecxz
arpl
mov
data16
mov
mov
or
loop
sahf
mov
fsubl
jecxz
sub
inc
sar
mov
adc
aaa
sub
xor
adc
cmp
cwtl
dec
sub
loope
lea
aad
pop
mov
inc
gs
sub
inc
push
iret
inc
clc
and
and
out
aam
jns
daa
scas
fcmovbe
dec
repnz
ret
jnp
xchg
movsl
fbstp
inc
cmp
and
push
loope
inc
pop
xchg
xchg
dec
cmp
out
push
mov
mov
cmc
mov
jge
mov
es
ds
pop
mov
in
cmp
sbb
negl
testl
mov
add
push
xchg
in
xchg
adc
mov
push
rclb
inc
fadd
cmp
sub
and
mov
loop
xchg
int3
leave
and
or
pop
push
fs
sub
mov
scas
fildl
std
inc
in
push
push
push
call
jno
popf
and
ficomps
or
or
and
aas
test
or
jge
test
out
xchg
jo
cmp
cld
das
pop
fcomp
sarl
cmp
imulb
roll
push
stc
out
imul
cmp
adc
pop
mov
inc
dec
pop
rolb
dec
adc
cmp
ja
sahf
insl
add
inc
test
adc
or
mov
ret
andb
mov
push
xchg
jl
insl
push
das
jl
add
sahf
and
aam
pop
mov
addr16
in
xor
iret
jae
mov
or
cs
int
push
pop
leave
dec
arpl
jb,pt
loop
dec
mov
adc
cltd
cmp
inc
in
fisubs
int
int
xor
ds
fwait
arpl
dec
popa
int3
int
adc
mov
shrl
pmaddwd
out
mov
mov
cli
cmc
push
push
mov
xchg
fidivrl
inc
adcl
jp
sbb
mov
and
jne
pop
adc
jle
or
insb
dec
mov
hlt
and
adc
push
rolb
stc
mov
jge
or
adc
jmp
dec
dec
xor
jg
xor
in
cli
cmp
adc
xchg
dec
add
insl
cltd
push
jge
jl
movsl
mov
add
add
adc
inc
pop
lods
mov
out
inc
pushf
and
sub
outsb
pop
jnp
in
sbb
outsb
push
push
jmp
addr16
add
imul
out
imul
into
pop
test
jp
lods
loope
lret
add
cmp
mov
sub
ljmp
repz
fs
js
inc
pop
push
imul
test
dec
insb
add
cmp
incb
out
jae
out
sbb
xchg
out
push
int
movsl
adc
lods
icebp
inc
jne
xor
test
pop
push
inc
mov
dec
mov
and
std
add
or
sbb
jae
or
or
adc
cld
ficoml
xor
das
fs
sbb
ficompl
in
lahf
stc
test
jbe
xchg
cmp
xor
les
xor
ret
or
mov
xlat
lds
orb
xchg
and
std
mov
xchg
lds
push
insl
sahf
and
adc
outsb
jnp
push
push
or
inc
out
fcmovu
aaa
stos
mov
rcll
pop
roll
fdivp
inc
adc
or
insb
jne
std
or
jl
out
xor
call
test
or
inc
or
jne
push
cmp
leave
mov
pop
pop
mov
mov
mov
test
xchg
inc
add
mov
rep
and
imul
inc
repz
ja
mov
and
or
cmpl
sub
or
stos
mov
adc
push
loopne
cmpsb
mov
aaa
jp
mov
mov
fcmovnbe
fdivr
or
dec
fidivrs
insb
pusha
dec
arpl
mov
pop
mov
sub
pushf
mov
jae
mov
pop
nop
ja
test
testb
lock
dec
jns
sti
pop
repz
xor
scas
adc
cmc
jecxz
mov
lret
add
mov
fists
fcmovb
xchg
in
mov
mov
fisubs
cmc
push
test
inc
loope
imul
lock
hlt
adcb
mov
loop
mov
rorb
push
orl
out
stc
insl
sbb
aam
cmp
inc
rcl
or
jecxz,pt
adc
outsl
jb
jo
xor
mov
stos
jno
mov
push
adc
xlat
inc
jbe
enter
xchg
cmp
out
divl
xor
in
push
mov
push
xchg
insb
jnp
out
ret
and
pushl
adc
or
loop
or
cmpsb
stos
fmul
sub
cmp
int
adc
adc
outsl
imul
xor
inc
push
jge
nop
je
out
push
in
rcr
divl
call
popa
push
insl
sbb
data16
xor
das
imul
xchg
fmull
lcall
add
popa
out
cmp
jecxz
mov
push
leave
mov
push
jecxz
in
ret
mov
xchg
in
mov
jb
movsb
cld
jge
movsb
loope
hlt
inc
test
stos
popa
cmp
clc
cmp
mov
sub
andb
mov
cmp
push
mov
sbb
dec
imulb
or
lret
out
gs
pop
mov
add
adc
jecxz
push
xor
sub
xlat
inc
inc
xor
cltd
aas
aas
jb
adc
or
movsb
xchg
pusha
stc
enter
sbb
and
mov
mov
jbe
add
lds
jmp
mov
lea
ret
gs
or
in
hlt
in
shlb
jecxz
fmuls
fwait
mov
das
ds
fsubl
xchg
pop
mov
mov
sahf
call
js
lret
or
shlb
jle
cmpsl
jns
or
mov
repz
cmp
lods
outsb
adc
loopne
sub
mov
aad
je
push
cs
sub
jbe
inc
daa
push
mov
andl
dec
xchg
cmpsl
ja
fnstsw
and
ja
add
imul
mov
inc
sbbb
push
or
lock
pusha
stc
pushf
fldl
mov
or
icebp
test
mov
inc
or
inc
pop
shlb
icebp
and
lods
fwait
mov
mov
xor
sub
lret
aad
lea
adc
xchg
add
cmp
inc
fs
mov
pop
int3
push
xchg
xchg
sub
imul
lahf
sub
outsb
in
leave
and
push
addr16
push
xchg
outsb
pusha
ds
push
repz
push
mov
xchg
pop
cli
jmp
jge
pop
in
push
ljmp
xchg
scas
icebp
xor
rcrb
cmp
xor
xchg
xor
or
cmp
shr
pcmpeqd
cmp
fldcw
and
aas
scas
out
dec
jg
xchg
enter
dec
pop
je
mov
rolb
imul
inc
sub
div
subb
jb
dec
repz
rorl
sarb
scas
out
test
jge
sub
xor
or
ret
sub
hlt
dec
xor
push
fisubl
add
test
ffreep
push
pop
xchg
lock
mov
rorb
adc
cmp
sub
les
jbe
std
mov
adc
lahf
fcomi
xchg
push
dec
dec
icebp
push
fmull
push
out
aam
sbb
in
pmaddwd
cmc
mov
data16
jno
test
repnz
add
add
mov
dec
vmovss
push
testl
add
mov
in
insb
push
inc
je
aam
jl
jns
push
addr16
xor
aaa
cli
lcall
pop
inc
mov
push
rclb
sti
cmp
cli
push
inc
popf
inc
mov
sub
cli
adc
fisttps
gs
pop
aaa
cld
xchg
push
leave
dec
jns
pop
adc
lret
clc
dec
ficomps
jge
outsb
aam
test
jae
mov
push
fildl
rolb
sbb
pop
cld
jne
jmp
inc
push
jnp
fwait
and
pop
pop
scas
in
jecxz
test
arpl
mov
xchg
cwtl
push
mov
or
cmp
xorl
mov
repz
mov
pop
mov
xor
je,pt
xchg
in
imul
or
mov
mov
lods
rorl
pop
popa
ds
ds
mov
push
cli
orb
in
icebp
mov
loope
pushl
mov
mov
jecxz
mov
xchg
inc
xchg
push
cmpsb
fnstenv
dec
inc
scas
inc
xlat
sub
out
jbe
add
test
and
push
mov
imul
mov
aas
insb
push
aaa
xchg
cwtl
xlat
fimuls
dec
cmp
cmp
cld
jg
roll
in
jmp
push
aad
inc
enter
sub
sbb
xchg
push
sbb
jne
fsubr
inc
dec
sub
mov
mov
dec
push
int
lret
jnp
cmp
std
add
or
test
xchg
sbb
loopne
sub
nop
push
cli
fldcw
pop
popf
mov
inc
nop
test
sub
lret
rolb
push
mov
inc
pop
fiadds
in
fstps
xchg
lret
and
cmpsl
scas
movsb
movsl
mov
push
int3
adc
mov
mov
fwait
add
gs
jg
push
ds
sub
mov
cmp
dec
xchg
and
sbb
adc
sub
add
int3
aam
jbe
daa
insl
jo
icebp
das
mov
call
rolb
dec
fwait
dec
push
xchg
push
mov
lods
and
jle
mov
stos
and
mov
cwtl
jge
inc
jne
xchg
aad
mov
push
xchg
xor
push
repnz
inc
out
mov
pop
pop
mov
push
xchg
cmpsb
dec
or
je
sub
inc
push
mov
int3
mov
lock
out
cmp
xlat
faddl
sahf
push
jae
scas
jl
int3
xorl
xchg
imul
into
jb
lods
lds
mov
xchg
add
std
in
fsubl
dec
sub
out
data16
lcall
xchg
in
outsl
jno
imul
scas
xorl
xchg
and
pop
sahf
ja
inc
test
das
xchg
xchg
mov
incl
cmp
sahf
dec
hlt
sbb
hlt
cltd
lret
lcall
jg
push
mov
mov
and
jns
lods
push
cmpsl
jo
test
mov
das
add
notb
out
mov
cmp
js
mov
push
mov
jnp
shlb
xchg
xor
fidivrs
das
neg
cmp
push
or
pushf
xchg
or
js
cmpsl
stos
stos
cs
mov
push
or
sbbb
pusha
lds
fwait
push
pop
sbb
outsl
adcl
fdivp
std
dec
cmp
sub
dec
pop
sbb
mov
add
fdiv
xor
dec
call
rorb
hlt
inc
push
and
sahf
stos
aam
sub
or
repz
mov
xchg
mov
les
loopne
cmp
mov
pmulhuw
inc
sbb
int
out
sub
add
aam
fstp
dec
test
or
jmp
sbb
lahf
in
sbb
int3
rolb
inc
sbb
and
outsl
int3
stos
int3
sbb
stc
add
sbb
and
cmp
test
dec
cld
or
add
mov
push
jecxz
vunpckhpd
push
push
je
jb
ret
jae
test
loopne
fdivrl
ret
mov
dec
xchg
inc
shrb
jecxz
xor
xchg
div
cmp
cmp
clc
in
cmpl
sbb
push
test
js
adc
xchg
cld
mov
adc
test
add
mov
nop
and
and
icebp
xor
insl
push
js
movsl
sub
push
sbb
test
insb
loope
dec
cmpsb
ja
cmp
jns
dec
in
shlb
mov
inc
lret
int3
out
mov
pop
enter
dec
push
add
mov
jbe
cli
pusha
loop
js
dec
mov
orb
adc
sub
jb
gs
jae
pop
pop
mov
aad
loope
pop
push
jp
sub
sbb
and
mov
mov
mov
or
in
jle
pop
and
andb
jnp
cltd
pop
clc
jg
lea
imul
fildl
inc
fsubl
mov
test
xor
push
cmpsb
cwtl
or
cli
scas
std
xor
ljmp
xlat
sahf
cmp
sbb
dec
rcrl
test
pop
xchg
and
shll
mov
outsb
cld
xchg
cmp
ret
xlat
nop
loop
outsl
dec
out
in
stc
cmp
pminub
push
cs
lcall
aas
lock
add
jg
mov
sbb
fiadds
mull
iret
push
cli
pop
ds
fdivrs
push
stc
bound
int3
adc
pop
mov
xorl
cmp
imul
lahf
shlb
fstpt
bound
test
ds
push
les
pop
or
jne
xor
sti
scas
pop
adc
and
cs
mov
mov
enter
pop
jno
mov
in
les
int
pop
aas
or
daa
mov
inc
inc
sub
pop
stos
xchg
loope
jne
popf
and
jnp
and
lds
sbb
fnstenv
jb
xchg
repnz
stc
mov
cltd
push
cmp
mov
pop
lcall
jo
mov
xchg
cmp
into
xor
into
dec
je
dec
fcoms
lods
cmpl
jecxz
in
jle
aad
jns
cmp
xor
loopne
push
imull
movsl
fdivr
sbb
data16
mov
popa
xor
dec
ficomps
test
mov
xor
and
mov
jge
lds
pop
xor
scas
test
cltd
inc
pushf
dec
out
mov
push
insl
lret
popl
add
scas
pop
cmp
pop
push
pop
fisubl
sbbb
xchg
jae
add
inc
mov
rcrl
and
scas
ljmp
pop
xchg
fists
push
xor
mov
xchg
insl
jbe
ss
popf
push
jnp
lock
and
xchg
mov
iret
dec
adc
xor
movsl
insl
pop
nop
jo
jno
fisttpl
aaa
outsb
ret
fs
pop
idiv
bound
jbe
push
add
repz
sub
xchg
ljmp
mov
jne
bswap
mov
and
dec
shrb
push
leave
push
sub
jmp
leave
scas
stos
push
mov
cmp
insl
ljmp
test
rcll
fidivrl
adc
daa
ficoml
adc
push
mov
fnstenv
and
adc
pushf
shlb
insl
cmp
pop
lret
jo
mov
push
imul
es
ret
dec
inc
lods
xor
mov
sbb
push
cmc
iret
std
push
in
shl
in
cmpsl
xchg
out
cmp
xor
mov
lret
fdivl
lds
mov
cmp
push
fwait
pusha
push
lea
arpl
test
movzbl
adc
mov
sarl
sbb
or
xchg
insb
test
lock
mov
fmul
into
pop
push
pushf
jp
enter
add
or
adc
addr16
xchg
jo
add
dec
mov
or
cmp
xchg
bound
mov
mov
or
scas
mov
movsl
xorl
add
adc
dec
outsl
xchg
insl
push
orl
sbbb
inc
pusha
rorb
repnz
mov
lahf
shl
mov
lahf
xchg
xchg
mov
into
clc
sahf
sub
stc
add
lods
ret
popf
data16
cmp
sti
je
fistl
or
lret
sbb
pop
pop
icebp
dec
fld
fisttpll
xchg
repnz
rorl
lods
gs
popl
inc
xchg
lahf
mov
mov
jmp
mov
and
hlt
in
clc
push
sbb
sub
es
scas
ret
in
cmc
xor
test
ljmp
mov
inc
cmp
popf
sub
mov
pop
cmpsl
xor
pop
scas
jns
fisttps
jo
add
xor
xchg
shll
xchg
mov
sbb
fidivrs
sub
shr
mov
test
or
stos
subb
cmp
inc
les
jge
aad
adc
push
xchg
lock
sub
mov
out
jno
mov
cmp
movb
ret
fs
mov
inc
push
and
jne
mov
sbb
sub
ss
inc
mov
movsb
cli
outsb
add
push
jge
xchg
mov
jle
xorb
in
cmp
out
sub
xchg
in
mov
es
xchg
orl
mov
sub
outsl
push
xchg
jae
clc
jbe
xchg
popl
mov
insl
mov
push
push
out
in
pusha
pop
pop
enter
lock
xlat
test
mov
int3
push
cmpsl
rcr
adc
cmp
adc
shr
push
rorb
mov
push
mov
or
sbb
fists
adc
sub
dec
xchg
sub
xor
xlat
mov
push
mov
daa
mov
jae
pop
insl
imul
lds
cmp
lret
jno
xchg
xchg
or
bound
lret
loop
notb
in
xorl
mov
jp
shll
insb
jmp
fbld
mov
psllw
push
out
sub
pop
lods
mov
fistps
ljmp
sub
or
or
push
nop
es
fadds
add
out
ljmp
daa
mov
jp
sahf
in
cmc
mov
jmp
sub
aam
ffreep
das
jge
dec
dec
mov
js
mov
ret
das
mov
je
xchg
fucomip
scas
push
mov
mov
lea
mov
xchg
xor
push
in
bound
cmp
gs
mov
jns
jmp
adc
scas
or
inc
cli
inc
pop
sarb
test
xchg
push
xchg
dec
data16
sub
lcall
jmp
jmp
xor
pop
push
xorl
pop
cmc
stos
iret
pop
sub
pop
test
add
xchg
scas
das
cli
cmc
mov
in
mov
std
xor
inc
aam
ljmp
mov
testl
fisttpll
jb
aaa
sbbb
and
imul
hlt
leave
je
cmpsb
mov
xor
mov
mov
cltd
out
in
mov
loopne
and
popf
enter
loope
or
loop
mov
andb
jl
imul
lea
push
push
pop
lea
lock
clc
mov
mov
cmp
inc
mov
cli
shrl
xor
or
inc
pusha
jne
add
pusha
jmp
xchg
scas
dec
dec
insl
and
cltd
xor
icebp
mov
xor
out
pusha
sbb
or
or
loope
popf
jo
or
or
nop
mov
leave
jb
jmp
adc
mov
jae
sbb
dec
xlat
lret
out
out
jg
adc
popl
add
outsl
movsb
xor
lds
out
clc
dec
jns
addr16
ret
les
xor
xchg
add
pop
fwait
addr16
in
bound
push
pop
cmp
cmp
sarb
dec
scas
out
push
clc
adc
cmp
push
sbb
pop
mov
sub
ret
lock
test
into
xor
cmc
push
sti
subb
push
add
adc
add
in
jge
mov
aad
push
push
pop
test
jb
fdivrs
inc
icebp
testl
xchg
pushf
jg
pop
loopne
in
xor
daa
test
dec
mov
and
sub
loop
stc
sbb
sti
cmp
cmpsb
sarb
jge
sub
mov
aaa
loop
ljmp
dec
pop
test
jno
dec
add
aam
leave
dec
cmp
mov
push
mov
cmp
inc
rolb
fdiv
add
pop
and
xorl
ret
pop
adc
sahf
jbe
stc
pop
in
xchg
out
mov
insb
inc
dec
fsubrl
sbb
loopne
push
shl
into
hlt
mov
imul
std
dec
sub
pushf
mov
clc
in
mov
cmp
mov
lods
ljmp
push
adc
test
push
adc
and
scas
sbb
push
cs
mov
cmpsl
cmp
mov
push
jmp
and
xor
fnstsw
fists
jle
ret
dec
ret
movsb
cltd
cmc
sarb
mov
or
push
jb
dec
loopne
cld
ss
lret
rcrl
xchg
fadd
sbb
and
cmp
mov
pop
sub
insl
int
fistl
data16
fisubrs
and
lret
and
mov
dec
push
add
jp
xor
ljmp
xchg
rorb
in
and
mov
mov
sar
test
fldenv
das
and
imul
aaa
shlb
dec
cli
out
add
pop
cwtl
and
push
repnz
mov
add
cmc
adc
dec
aam
daa
and
sub
push
mov
enter
stc
rcrb
bound
roll
dec
and
gs
js
inc
sbb
adc
pop
mov
idivb
or
push
aaa
pop
pop
adcb
cmpsb
insl
add
out
fcomip
dec
pop
xchg
in
sub
fsubl
xor
negb
or
push
imul
loope
xor
pop
int
daa
pop
iret
daa
jne
pusha
add
sbb
add
mov
sbb
lock
out
pop
call
sti
mov
mov
sub
data16
and
insb
lds
fildll
sete
xchg
arpl
test
push
sbb
aad
nop
push
arpl
pop
stos
xchg
lods
loop
inc
cwtl
aas
addr16
roll
scas
repnz
arpl
fimull
enter
roll
daa
inc
dec
mov
pop
xchg
pop
sub
in
inc
stc
rcrb
xchg
mov
scas
xchg
out
sbb
adc
xlat
dec
ja
pop
cmpsl
rolb
daa
daa
mov
add
cmpsb
sbb
cs
movb
jbe
xchg
js
adc
testl
pop
leave
ret
pushw
xor
ret
jmp
jp
dec
stc
dec
out
in
sahf
push
hlt
push
mov
cmp
push
cli
stc
push
push
lahf
xchg
xor
hlt
adc
nop
lods
bound
jl
mov
out
out
pop
cmp
out
mov
push
cwtl
sarb
ss
jmp
outsb
xchg
popf
outsl
rorb
pusha
sbbl
in
call
mov
in
sbb
jmp
mov
push
and
shrb
lcall
mov
lahf
stos
inc
xchg
lcall
sub
stc
sub
sub
adc
cmp
fdivrs
lock
inc
add
aad
xchg
call
sub
fstps
push
aam
jle
sti
jns
xor
orl
rcrb
xlat
lret
mov
pop
pop
out
test
sub
lock
das
push
pushf
xchg
jecxz
pop
cmp
xchg
adc
jae
imul
xchg
push
cmp
loopne
jmp
nop
or
pop
call
dec
jge
sub
or
mov
pusha
scas
jg
add
pop
push
into
es
dec
icebp
aad
push
dec
insb
pushf
jo
add
mov
push
xor
dec
sbbl
pop
and
and
xor
iret
push
repz
xor
mov
jmp
pop
fiaddl
sbb
clc
or
adc
mov
out
add
ja
mov
xor
fistpll
fstpt
sub
mov
cmp
add
add
pop
jb
cmpsl
into
ss
push
jno
test
mov
and
flds
jae
mov
test
push
jl
pop
lock
sbb
dec
int3
les
jl
and
es
addr16
in
pop
push
cli
imul
into
jecxz
sub
mov
clc
xor
dec
mov
xchg
mov
mov
jbe
ljmp
daa
xor
ss
movsb
xchg
sbb
enter
push
inc
pop
add
insb
bound
xchg
xchg
loop,pt
xorl
inc
mov
ret
dec
jae
push
lcall
popf
ja
nop
and
sbb
mov
push
stos
cmpsb
sub
call
jp
xor
test
enter
movsb
repnz
stos
jl
flds
xchg
lods
ja
xchg
mov
mov
mov
cmp
cmp
pusha
lcall
inc
push
bnd
call
cmp
push
test
fidivrs
aas
xor
cli
push
iret
and
daa
xchg
aaa
test
test
in
out
aam
repnz
lea
cltd
xchg
adc
scas
push
sub
fildl
dec
inc
adc
jl
ror
lahf
fildll
in
in
inc
sbb
jle
hlt
or
das
daa
ficoms
jne
xlat
lcall
sub
clc
adc
mov
adc
cmp
test
push
vxorps
mov
adc
arpl
aam
and
popa
cmc
dec
rorb
lahf
dec
test
aad
mov
add
mov
xor
aam
sub
push
jp
das
insb
adc
sbb
movl
test
mov
push
push
stos
rorb
iret
sub
push
rclb
pusha
dec
dec
push
repnz
pop
jmp
outsb
mov
lods
mov
imull
addr16
or
dec
ss
fnstenv
jns
inc
arpl
popa
fidivs
push
inc
fstp
hlt
push
pop
imul
je
and
mov
cld
ja
and
adc
sbb
fisttpll
lods
push
cmp
push
jl
jge
xor
jecxz
imul
xchg
movsl
test
pop
dec
add
icebp
aad
sahf
in
dec
jl
mov
scas
adc
add
sub
jns
push
pop
jecxz
mov
pop
leave
jb
pop
pop
call
mov
push
fwait
adc
lock
scas
ljmp
or
xor
push
xchg
fwait
pusha
xor
adc
jb
dec
pop
and
sbb
scas
mov
dec
mov
mov
vpunpcklbw
lock
push
bound
cmp
cltd
mov
or
mov
mov
xchg
inc
sub
and
lahf
mov
or
in
addr16
cmp
inc
dec
dec
jle
inc
bound
out
inc
or
or
cmp
pop
lea
jnp
cwtl
aaa
sti
cli
push
aas
jecxz
hlt
fbstp
test
cmpb
loop
imul
scas
push
push
je
mov
loop
addr16
adc
outsl
sbb
and
popf
sbb
xchg
std
add
lods
outsl
adc
pop
jg
inc
pop
pop
mov
adc
adc
ja
or
outsb
xor
mov
xchg
gs
ret
sub
out
cmpsl
ret
and
xchg
not
jb
insw
mov
clc
les
sub
mov
jl
and
sbb
cltd
mov
xchg
mov
sub
or
and
inc
jg
mov
outsb
clc
jnp
insb
aad
fisubrl
xor
pop
mul
jmp
cmp
mov
lret
xchg
leave
stc
roll
add
mov
cmp
lea
test
cltd
jne
inc
pop
cmp
dec
xlat
mov
jae
pop
outsb
lods
pop
fadd
sti
push
cli
inc
rcl
je
sbb
imul
pop
imul
or
adc
xor
jmp
inc
test
lahf
sub
in
lcall
xchg
imul
insb
mov
adc
sbbl
inc
test
scas
pop
add
cmp
xlat
pop
imul
je
mov
out
xlat
mov
or
call
and
cmp
ja
pop
mov
arpl
clc
push
repz
arpl
adc
arpl
enter
ret
stos
nop
mov
and
mov
lahf
addb
decl
jg
mov
dec
xchg
mov
push
dec
xchg
push
insl
nop
js
rorb
lret
sbb
mov
movsb
sub
fildl
mov
xor
cmpsl
outsb
and
pop
or
pop
push
or
mov
and
not
sbb
aas
jg
cli
push
je
rcrb
insb
lea
call
xor
mov
or
test
xor
push
push
pusha
xor
mov
ret
mov
mov
repnz
adc
sbb
dec
imul
lock
and
push
mov
or
loopne
push
pop
subb
inc
scas
arpl
imul
fistpll
pop
lcall
mov
xchg
test
outsl
adc
jl,pn
int
lahf
out
bound
lea
popf
jle
xchg
iret
push
pop
mov
cltd
xchg
test
cmp
jo
jb
xchg
ljmp
stc
add
push
inc
xor
arpl
cmpsb
mov
clc
add
lods
pop
fidivs
xor
sbb
bound
das
fmuls
mov
sbb
xchg
loopne
push
dec
out
sub
dec
jnp
pop
sahf
lods
pop
fnstsw
frstor
mov
inc
add
in
int
ja
add
dec
add
pop
psrld
dec
lods
xchg
inc
cmp
jns
pop
jnp
xchg
lret
arpl
in
mulps
or
jecxz
cmp
mov
ja
std
and
inc
add
pop
test
out
aaa
fsubrs
mov
xor
lea
sub
ljmp
adc
push
adcb
clc
imul
inc
dec
and
xadd
lea
xor
add
clc
sbb
int3
jne
lea
fwait
popf
push
xchg
push
scas
cltd
adc
fadds
ret
cmpsl
mov
int
xchg
sarb
flds
shrl
pop
rcr
inc
adc
stc
ret
test
jecxz
add
lock
add
repnz
push
out
push
loop
hlt
ja
or
gs
test
out
or
add
fwait
test
cmp
xchg
push
mov
lods
xchg
inc
stos
cld
out
xor
cmp
cmp
inc
adc
in
insl
inc
ljmp
sbb
sub
and
xor
shrl
jge
dec
lcall
lods
push
cld
sarl
add
addr16
das
sbb
pop
or
sbb
imul
pop
decl
xchg
pop
cmp
adc
add
orb
lcall
mov
sbb
call
adc
jge
mov
sub
push
mov
stos
test
mov
fildl
fidivl
sti
xlat
mov
sub
jnp
fdivs
dec
jecxz
mov
sub
mov
int
xor
out
clc
rclb
xor
inc
mov
inc
rolb
and
rol
xchg
pop
pop
dec
jne
mov
cmp
xor
cmp
mov
xchg
nop
adc
in
xchg
inc
cli
push
aas
seta
into
icebp
push
ljmp
mov
pop
js
mov
mov
scas
sub
xor
pop
add
lahf
adc
mov
imul
lahf
faddl
enter
in
pop
daa
mov
movsb
mov
das
popf
mov
neg
loop
add
or
push
stos
sub
lock
enter
mov
xor
and
fwait
fs
test
xor
les
adc
inc
add
iret
mov
in
mov
mov
jno
clc
xchg
xor
mov
jbe
lods
mov
lcall
rcr
push
mov
cld
inc
jbe
add
mov
pop
add
les
mov
fmuls
mov
xor
out
inc
inc
shr
fldt
xchg
add
std
sbb
xchg
mov
mov
cs
sub
dec
cmc
xchg
pop
or
xchg
xchg
xor
jns
xor
jl
mov
jecxz
out
jno
pop
daa
fsubrp
js
pushf
inc
test
lcall
lods
lahf
outsb
fstpl
jmp
cmp
cwtl
mov
arpl
xor
popa
dec
cltd
mov
adc
dec
mov
jae
nop
les
sbb
int3
cmp
jl
dec
stos
mov
push
push
dec
lcall
sbb
lahf
lret
test
test
and
out
xor
cwtl
stos
xor
clc
rcl
test
outsb
dec
mov
mov
out
mov
sahf
mov
jbe
in
xor
cmp
and
push
and
orb
insb
scas
enter
push
jle
mov
mov
mov
cmp
xor
mov
inc
popf
rcrb
inc
cltd
int
int3
jg
cltd
or
adc
jmp
mov
fmul
pop
sbb
inc
movsb
add
fsts
pop
xchg
sbb
xor
fcmovnu
or
and
ficomps
push
bound
or
enter
aad
push
xlat
movsl
push
mov
test
sbb
xor
add
jne
xchg
mov
and
mov
and
mov
mov
mov
adc
outsl
lahf
mov
xor
fwait
inc
test
sbb
les
xchg
out
push
push
cli
outsb
xchg
add
mov
pop
shr
push
dec
pop
and
mov
jmp
fdivr
mov
jae
gs
jl
cld
mov
cmp
fnstsw
std
mov
sahf
sub
sub
pop
mull
dec
jae
sub
int
dec
aas
xchg
or
mov
fimuls
mov
mov
hlt
pop
test
fstpt
cmp
lea
inc
mov
mov
mov
imul
mov
push
stos
jle
cmp
lahf
gs
mov
test
sbb
mov
fisubs
lds
imulb
icebp
mov
cwtl
or
loope
bound
fdivrs
push
ljmp
jb
sub
mov
mov
dec
cmp
mov
mov
cmpsb
scas
mov
pop
out
sbb
jmp
subl
mov
sahf
pop
lea
in
hlt
lds
pop
push
fnstcw
test
loopne
jge
mov
push
xchg
in
xor
je
cmp
lret
sub
or
fdivs
dec
stc
add
dec
or
xchg
out
inc
jne
ja
cld
xchg
arpl
fwait
lcall
pop
ds
mov
xor
jbe
xchg
scas
jle
cmpsl
mov
ss
jns
push
mov
or
mov
inc
sub
xor
stos
decb
fnstcw
iret
int3
mov
jp
push
sbb
mov
pop
es
push
sbbb
sub
popf
imul
and
push
jnp
jecxz
dec
push
sbb
sub
arpl
ss
inc
add
push
ljmp
or
cmc
rolb
mov
xorl
dec
popa
lret
push
sbb
fwait
es
fsubp
andl
xor
jl
cmp
movsl
les
arpl
roll
daa
lock
mov
pop
mov
test
cmp
iret
sub
pop
xchg
stos
in
fwait
mov
push
mov
das
add
jp
push
or
adc
jmp
mov
jnp
fwait
xor
lea
xchg
jno
icebp
xchg
enter
dec
mov
arpl
jmp
jno
lds
testb
fsubs
inc
out
push
test
int3
mov
cmp
jle
push
int3
rol
into
nop
pushf
pop
out
inc
or
stc
test
jge
loopne
rclb
mov
icebp
rolb
add
enter
sub
fstp
xchg
sub
dec
and
pop
popa
mov
jne
and
enter
adc
inc
sub
in
push
movq
pop
adcl
js
xor
xor
insb
pop
add
ja
test
push
dec
xchg
push
jmp
xchg
xchg
mov
inc
daa
mov
jecxz
testb
std
loope
mov
adc
mov
dec
pusha
or
divw
fcmovne
lahf
xchg
hlt
cmp
sarl
lea
cmp
ja
adcb
dec
xlat
loopne
fwait
mov
push
inc
lods
xchg
cltd
or
test
sub
scas
xor
mov
cmpsb
mov
pushf
lret
subps
cmp
cld
pop
int
nop
xor
pop
lahf
test
push
add
push
xor
outsl
sti
inc
iret
repz
xchg
sbb
mov
ljmp
adc
jb
mov
lea
xchg
cld
xchg
test
inc
sub
sub
clc
fidivl
aam
add
or
fcomip
pushf
xchg
xchg
inc
jo
repz
out
popf
cmpb
push
adc
loop
rorb
jecxz
fucom
in
mov
xor
in
hlt
aam
jo
jmp
addb
cmp
mov
add
push
push
xchg
lock
cmpxchg
mov
mov
xchg
icebp
hlt
int
data16
inc
push
rcrb
ss
xchg
mov
pushf
sub
int
pop
mov
cmpl
jno
xor
fwait
cmp
test
pop
cmp
test
ja
xor
in
sbb
add
push
mov
pop
ret
daa
xor
adc
fndisi(8087
insb
inc
push
pusha
fbld
test
enter
ret
movaps
xchg
push
add
in
rolb
and
orb
test
mov
cmp
or
push
mov
dec
shlb
xor
sub
rorb
xchg
out
cltd
dec
xor
lcall
divl
pop
out
adc
xchg
dec
or
dec
jle
lret
mov
pop
sbb
arpl
shl
imul
jns
movsl
clc
cs
jnp
mov
xlat
fs
shrl
test
cmp
cs
cmp
fstpl
mov
sbb
xchg
sbb
mov
stos
mov
xor
out
cmp
daa
or
js
in
jecxz
movb
push
iret
popa
rcrb
out
and
pop
mov
iret
in
stc
add
xchg
mov
adc
mov
mov
out
xor
xor
call
fs
data16
in
push
rcrl
dec
xlat
les
inc
xlat
mov
cmovnp
neg
add
stos
cltd
out
vmovq
enter
lock
stos
icebp
cmp
or
dec
adc
mov
cld
lods
nop
shr
mov
dec
stos
cltd
xor
add
sbb
rolb
ret
popa
loope
outsb
mov
add
xchg
inc
cs
sbb
lcall
inc
sub
daa
adc
lods
lahf
or
das
lods
add
popf
pop
cmp
sub
in
xlat
rolb
rol
and
mov
and
push
sahf
xchg
push
dec
mov
imul
out
scas
loope
rcrb
bnd
dec
pusha
jl
mov
adc
xor
inc
sti
inc
sbb
negl
rcr
lods
pop
and
stc
dec
cmc
cmc
add
dec
and
push
add
sub
mov
pop
jns,pn
lahf
fldl2t
rcrb
movsl
fstps
ret
ljmp
orl
fimull
dec
movsl
pop
push
pop
in
jmp
stos
mov
stos
or
lds
or
add
notb
rorb
or
mov
cltd
dec
inc
and
and
xor
or
cwtl
cmpsb
pop
cltd
fwait
ljmp
shl
aaa
inc
add
inc
mov
test
test
sub
sbb
jge
mov
xchg
sub
inc
jecxz
fildl
inc
cmp
es
outsl
add
dec
enter
mov
xchg
int
xchg
and
fcoms
or
pop
jg
repnz
lea
mov
aam
scas
push
cs
testl
mov
decb
add
dec
lret
cltd
cmp
ja
sbb
sub
fsubl
mov
lods
push
hlt
andl
mov
add
jns
into
out
xor
mov
iret
jne
into
je
into
lock
idivb
popf
ret
mov
ret
inc
repz
push
arpl
mov
aam
dec
ds
mov
sbb
cwtl
je
pop
and
cmpb
cs
mov
lods
jle
pop
mov
addr16
pushf
and
add
sub
fcmovb
lods
lcall
and
mov
push
aas
mov
jns
pop
mov
xchg
aas
cltd
lcall
ret
lds
stc
mov
lcall
dec
jo
xchg
addl
int
mov
adc
jbe
jecxz
pop
dec
pop
xor
cmp
pop
pop
sbb
mov
sbb
jo
adc
sahf
sub
sbb
add
hlt
and
fs
hlt
add
lret
cmc
or
enter
popf
fistl
mov
sahf
inc
jbe
inc
in
mov
inc
aas
cmp
inc
test
iret
daa
jle
imul
mov
sub
repnz
mov
fcompl
das
jge
scas
xchg
xchg
int3
push
into
mov
js
jae
lods
mov
adcb
sub
mov
mov
rclb
pop
xchg
es
mov
testb
pop
mov
cmp
adc
push
fwait
mov
xor
neg
push
push
call
and
pusha
or
outsb
notl
out
push
scas
mov
pop
xlat
in
push
movsb
repz
insl
rol
fs
notb
cld
and
aaa
sub
xor
das
repnz
xchg
outsb
leave
jbe
dec
sub
out
xchg
jbe
jmp
call
jecxz
sub
iret
clc
cli
lret
xchg
es
in
mov
cld
stos
inc
mov
dec
stc
jmp
jmp
lcall
aad
fistl
cmp
lcall
pop
or
ror
lods
mov
or
lock
pop
outsb
jl
mov
in
jg
icebp
rcll
jp
pop
lods
dec
jg
test
mov
or
xchg
jnp
sbb
xchg
xchg
adc
lcall
mov
aad
faddl
lret
cmp
sub
inc
rorb
pop
dec
add
scas
das
shr
or
push
push
inc
xchg
add
push
fadd
nop
or
leave
pop
and
pop
mov
cmp
test
pop
dec
sub
sub
scas
inc
jp
and
xchg
scas
ret
stc
jmp
push
addr16
arpl
into
int3
std
mov
cmp
lret
notb
sarb
or
lods
jecxz
push
negb
ret
jge
push
ds
xor
scas
or
lret
jle
inc
push
or
test
jecxz
mov
cmp
gs
orl
mov
push
xchg
je
inc
mov
xchg
in
mov
pop
sbb
inc
test
icebp
sbbl
pop
sti
cld
int3
mov
xor
movsl
xor
daa
in
push
jbe
cld
pop
cli
popl
aas
repnz
imull
mov
imul
aad
cmpsl
or
mov
ret
test
pop
jbe
inc
scas
punpckldq
inc
cmp
jnp
out
jle
test
ds
jne
aas
or
fsubl
and
insl
test
iret
jp
mov
insl
sbbb
push
jns
in
mov
pop
mov
jb
dec
mov
and
popf
gs
popf
mov
shll
enter
fcoms
push
sub
sti
sbb
mov
jmp
in
mov
pushl
sti
outsb
mov
xchg
imul
inc
int3
sbb
dec
dec
ja
gs
out
jmp
bound
cmpsb
xchg
stos
nop
xchg
push
outsl
pop
test
jns
cli
fwait
adc
jae
hlt
fsubl
aas
fdivrl
popf
sahf
scas
or
or
mov
ret
jae
sbb
inc
cltd
inc
fs
adc
jb
push
sub
pop
gs
pop
pop
pop
fdivl
cwtl
cmp
cld
jne
xchg
mov
pop
push
pmaddwd
and
lock
jmp
leave
push
pop
adc
mov
fs
negl
mov
mov
aaa
mov
cltd
inc
mov
sub
jg
pushf
repz
movsl
push
dec
mov
dec
dec
test
dec
stc
push
sti
cmp
sbb
outsb
pop
mov
lods
iret
mov
rcr
fistps
mov
loopne
rol
xchg
cwtl
mov
ficomps
es
sub
pushl
cmp
repz
inc
pop
mov
jp
into
imul
aam
add
cmp
repnz
sub
lea
test
sub
jae
push
daa
shrl
xlat
mov
leave
imul
push
lds
inc
ja
mov
test
call
xor
mov
loopw
sbb
rorl
add
pushf
push
shrb
xor
add
pop
and
jl
lds
insb
int
mov
popa
ljmp
pop
outsb
fptan
mov
cmpsb
dec
mov
jns
les
cwtl
sbb
jns
aad
mov
cmp
pushf
in
in
adc
fidivrl
sub
mov
ret
jns
mov
rclb
pushf
shlb
mov
addr16
sbb
xchg
xchg
mov
mov
cwtl
fisttps
xchg
inc
int
push
xchg
mov
or
cwtl
cmp
mov
cmp
jp
jns
ja
xchg
outsl
mov
push
fwait
clc
mov
xor
cmpsb
icebp
imul
cmpsb
leave
ret
std
jb
xchg
pop
daa
push
outsl
dec
lock
and
mov
mov
mov
push
and
data16
fbstp
insb
xorb
shrl
push
inc
into
mov
lret
in
arpl
mov
aad
test
mov
rorl
dec
jle
sub
in
jg
movsl
push
negb
addr16
shl
pusha
mov
je
cmpsl
dec
es
lahf
enter
fidivl
xchg
mov
mov
loope
mov
call
and
shl
cs
clc
scas
add
jle
fbld
add
push
cmp
imulb
mov
mov
cld
or
sub
or
inc
mov
mov
sti
or
sbb
xchg
or
push
les
and
lods
or
push
jbe
dec
popf
xlat
pop
shl
mov
push
mov
sub
in
aam
int3
pushf
push
mov
cmp
xor
xor
mov
pop
mov
cltd
pop
push
popa
jae
add
or
pop
mov
xchg
rcr
fsubp
movsb
adc
pop
cwtl
jno
add
xor
mov
popf
lea
push
rcrb
add
xor
inc
mov
subl
pop
stos
sbb
fsubrl
mov
ds
imul
ja
cmp
test
dec
shr
cltd
xchg
pop
mov
add
subb
push
out
mov
lods
fidivrs
inc
cmp
fwait
loopne
mov
mov
dec
imul
ljmp
mov
xor
jmp
lock
xchg
xchg
shll
imul
xchg
xor
scas
imul
rorb
pusha
mov
push
out
iret
lret
mov
mov
aam
mov
mov
and
clc
sbb
sbb
xchg
mov
push
jne
idivb
xor
push
xchg
addr16
and
add
xor
adc
rol
xchg
push
ficomps
ret
ret
pop
lods
rcl
arpl
inc
out
loopne
xchg
fs
cmpsl
pop
push
lcall
es
sbb
mov
inc
adc
addr16
in
enter
mov
bound
lret
scas
cmp
icebp
es
xchg
jge
call
neg
incb
ljmp
inc
cmp
add
jl
mov
sbb
jge
xchg
sub
lock
es
getsec
mov
mov
mull
mov
gs
call
addr16
leave
pushf
sub
dec
movsl
loopne
aam
push
enter
ficompl
lret
and
andb
pop
push
push
pop
push
xchg
loopne
dec
jmp
mov
xchg
push
lods
repnz
shrb
and
in
or
stos
imul
jo
mov
hlt
fwait
jno
sub
je
cmpsl
and
mov
push
xor
frstor
lock
inc
call
pop
test
jne
push
pop
cli
push
pop
repz
clc
ja
ret
sbb
xchg
xchg
lret
xor
mov
xor
and
push
stos
mov
lods
fsubrp
add
cld
pop
popa
push
sbbb
scas
fcoms
and
test
enter
imul
push
mov
sub
lock
into
and
mov
stos
xchg
lcall
sbb
pop
call
sti
add
les
outsb
and
scas
xor
and
cmp
frstor
rcr
push
dec
mov
stos
jno
addl
cmpb
repz
lret
jno
arpl
jne
mov
ss
repnz
mov
sbbl
and
jbe
enter
or
cli
xor
movsl
repz
movl
outsb
pop
stos
fld
pop
mov
fldcw
lea
in
in
fdivs
icebp
cld
scas
mov
xor
adc
and
xchg
pop
enter
mov
mov
bnd
and
jns
pop
mov
test
xor
pop
lods
lods
jecxz
mov
adc
in
pop
sbb
daa
lret
outsl
frstor
push
shlb
dec
mov
fnstsw
ret
mov
adc
test
imul
fdivrl
jp
jle
mov
mov
jle
push
addr16
into
rol
sub
cmp
inc
adc
aas
icebp
sub
lea
pop
xchg
cmp
mov
mov
cwtl
stos
push
cli
xchg
sub
and
mov
imull
xor
mov
ds
es
in
sbb
inc
ja
rcll
jnp
aas
xor
sbb
sub
sub
or
mov
out
rolb
inc
ljmp
in
int3
xor
cmpsb
test
movsl
mov
rcll
xchg
dec
pop
testl
test
loope
mov
push
fcoml
xchg
das
imul
adc
call
jl
inc
out
dec
pop
cs
jno
and
daa
inc
nop
add
mov
mov
fwait
pop
mov
insl
or
push
stos
sub
mov
hlt
lcall
mov
adc
jp
repz
mov
ficoms
nop
adc
sub
dec
mov
jecxz
decl
test
cmpsl
mov
arpl
adc
popa
fidivs
pop
call
test
push
xor
ss
ret
imul
out
jmp
cmp
arpl
movl
outsb
mov
mov
xchg
fcmove
sub
icebp
cmc
pop
sbb
or
inc
mov
scas
jl
sbb
or
scas
in
lods
fnstenv
add
xchg
leave
mov
lds
imul
scas
or
pop
inc
arpl
jle
imul
cmp
mov
cld
lods
aaa
jecxz
push
xchg
xchg
xchg
out
fmulp
movsb
outsb
push
fdivl
cmp
arpl
or
jmp
scas
mov
fsubr
add
cs
xchg
popf
push
sti
in
out
jne
jge
mov
lcall
jle
adc
cmp
and
jp
bnd
mov
cmp
leave
leave
jecxz
mov
lret
or
adc
push
bound
fisttps
mov
jp
outsb
pop
sbb
push
ss
sbb
and
scas
dec
dec
data16
xchg
inc
sbb
pusha
xchg
inc
rorl
mov
sbb
mov
push
fcoml
xchg
lea
pop
mov
sub
jle
xchg
push
es
fmulp
inc
mov
ds
mov
dec
sbb
mov
cld
fisubl
add
ficomps
add
call
stc
mov
scas
lret
inc
insl
lret
dec
pop
adcb
xchg
pop
xor
xchg
cli
test
dec
lods
inc
mov
std
scas
pop
push
out
xor
adc
mov
xor
sub
pop
pop
das
data16
loopne
mov
mov
pop
fsubrs
addb
lahf
cwtl
lock
loope
pop
dec
or
jae
dec
xchg
or
and
fs
int3
andl
std
fisttpll
mov
push
cmp
pop
and
jb
pushl
ret
jbe
movl
push
pop
nop
dec
test
adcb
insl
ljmp
cmp
and
xchg
pop
aad
scas
test
in
je
jne
pushl
push
sub
jecxz
and
aam
cmpsl
je
aad
fisttps
add
rcrb
cmp
sbb
lods
ljmp
push
push
into
stos
jmp
sahf
shrb
lds
pop
adc
and
mov
jne
outsb
inc
xor
adc
outsb
insb
popf
add
pop
mov
orb
jecxz
mov
or
jae
lods
test
test
in
das
repz
ret
mov
push
mov
mov
fs
dec
cmp
shl
xor
jo
fidivs
mov
mov
mov
cmpsl
push
lcall
mov
cltd
rol
jmp
or
in
ja
mov
bnd
lds
xor
fsubl
dec
movsl
adc
lcall
or
shl
jne
test
mov
dec
fldcw
in
int3
jns
mov
idivb
pop
cmp
jb
fs
lcall
pop
xor
insb
imul
mov
clc
jne
sub
xor
pop
inc
lock
push
mov
iret
pop
inc
xor
or
xor
notb
jmp
sbb
sub
lahf
or
mov
lret
lret
rclb
and
sub
mov
xchg
xchg
sarl
gs
bound
std
sbb
pop
in
mov
xchg
mov
and
adc
xor
push
rolb
cmc
xlat
fsubrs
add
or
ffreep
pop
add
icebp
mov
hlt
test
cmpxchg
push
scas
lret
test
ret
pop
pop
adc
mov
sub
jo
adc
mov
or
movl
xlat
ja
pusha
ljmp
add
xchg
inc
jb
sbb
stos
call
aaa
das
and
add
sbb
fimuls
test
insl
aas
sub
cs
add
int
insl
push
mov
xchg
mov
pop
sbb
pop
xchg
sahf
xchg
dec
pop
xchg
and
or
clc
sub
push
dec
mov
xchg
stos
cs
xor
jge
pop
out
jle
jge
jo
mov
nop
cwtl
mov
mov
ljmp
adc
movsb
shl
aaa
addr16
or
cmp
test
lret
jle
inc
pushf
mov
pop
jae
mov
sub
adc
fwait
xchg
adc
dec
cmpsb
inc
pop
aad
push
pop
stos
mov
mov
mov
imul
jnp
loop
je
mov
add
jge
adc
mov
push
mov
outsl
repz
jg
je
inc
fcompl
in
into
or
in
jle
lret
push
insb
ds
cld
sub
mov
test
push
xchg
lods
cmpsl
int3
lret
pop
addb
jg
mov
inc
fs
jne
inc
xor
sub
push
mov
pop
arpl
fstpl
in
mov
xor
add
xor
xchg
outsl
and
shll
fs
arpl
test
push
dec
test
or
sub
sbb
xchg
incb
jg
movsb
daa
ds
shll
xchg
jecxz
inc
jne
dec
adc
test
jecxz
in
inc
adc
mov
xchg
in
pmovmskb
lahf
out
xchg
hlt
std
mov
aam
dec
pusha
sbb
call
cmp
rcl
jp
fadd
jo
or
inc
sbb
in
aam
xchg
cmp
dec
xlat
pop
dec
dec
pop
fisubl
out
xchg
sbb
je
jecxz
xchg
loope
jns
test
and
sahf
int3
add
xor
scas
sbb
xchg
es
mov
sub
add
sahf
daa
cwtl
lds
cmp
jae
push
mov
mov
push
pushf
outsb
js
mov
iret
xor
popf
xor
dec
aas
cmp
jle
repnz
pop
push
mov
lock
inc
mov
addr16
imul
push
daa
aaa
popa
xchg
int3
lods
repz
mov
cmp
jbe
mov
and
arpl
hlt
mov
jge
or
inc
cld
dec
and
jmp
popf
mov
insb
xchg
sub
dec
imul
sub
dec
test
pop
xor
pushf
cmpsl
insl
cld
outsb
lret
xor
and
filds
push
add
out
cmc
bound
hlt
popa
shll
pop
mov
flds
xor
push
cmp
jbe
push
out
pop
adc
jnp
sub
into
repnz
fidivrl
mov
mov
pop
fcoms
mov
orb
mov
mov
mov
and
pop
out
mov
mov
test
add
jecxz
shll
mov
mov
int
int3
stc
test
inc
cmp
cmp
into
xlat
jae
cs
movsl
in
ficoms
jp
sets
pop
cmp
inc
xchg
pop
xchg
icebp
out
xchg
add
sbb
sarb
das
shrl
xor
repz
add
cmpsb
movsl
mov
pop
or
mov
jle
es
sub
mov
loope
fyl2xp1
pop
inc
pop
jecxz
adc
xor
jmp
imul
xchg
xchg
lret
sbb
sarb
bound
push
sub
push
imul
dec
xchg
add
mov
sub
pop
pop
lods
fistps
sbb
or
shll
outsl
lock
lea
mov
sbb
clc
out
iret
incb
sbb
cmp
jo
push
inc
jl
in
ret
outsl
je
inc
lods
mov
mov
add
add
outsb
pop
mov
inc
popa
and
clc
push
mov
std
or
stos
push
xchg
mov
sbb
adc
into
test
lea
mov
pop
stos
mov
jmp
popf
pop
cmp
jno
adc
incb
out
divl
push
mov
out
adc
lds
inc
cmpl
es
ds
push
je
enter
mov
mov
incb
mov
sti
xchg
push
aaa
cmp
data16
push
xor
fcmovnu
clc
rorl
int3
add
arpl
rcrb
fidivrl
push
or
loopne
cmp
lcall
sahf
or
daa
sbb
stos
pop
sub
or
cs
imul
add
adc
fsubrl
xchg
shr
mov
shr
mov
add
sub
fdivrs
les
push
inc
cmp
push
or
pop
lcall
clc
push
out
aad
movsl
mov
xchg
pop
mov
sbb
insl
mov
jmp
lret
iret
arpl
mov
notb
inc
mov
push
jge
xchg
add
inc
hlt
loope
mov
cmpsl
xor
xor
push
mov
xchg
sub
outsb
xorl
scas
dec
mov
cmp
push
movsl
das
adc
out
fs
cmp
sbb
dec
test
ss
add
int3
adc
pop
add
cmp
rorb
cmpsl
dec
out
sbb
and
fmulp
ds
into
addl
popa
xor
negb
or
xor
jl
dec
fsubs
mov
movsb
sub
icebp
mov
adc
mov
fsubrl
jge
pop
insl
mov
mov
lret
popa
ja
pop
out
mov
or
dec
dec
mov
cld
std
ss
and
popa
frstor
fidivrl
sub
test
je
aad
lea
inc
inc
out
pusha
pop
adc
movsl
mov
sbb
pop
mov
imul
sub
scas
test
mov
mov
es
incb
or
add
lods
clc
or
jno
sub
adc
push
mov
jle
pop
hlt
stos
dec
outsl
jno
mov
arpl
loop
outsb
lret
or
jmp
cmp
mov
into
lods
fwait
xor
sub
popf
push
ffree
ds
stc
lahf
lds
mov
jns
adc
ljmp
popa
and
xlat
jne
shlb
add
lods
scas
test
and
js
or
sub
movsb
lds
xchg
xchg
xchg
fmull
or
inc
dec
cltd
pop
jae
pop
cmc
push
or
sub
inc
jae
popa
push
stos
or
fmuls
jne
iret
inc
jo
xor
push
mov
fisubl
stc
or
dec
lret
stos
xor
sahf
rclb
xchg
insb
arpl
lcall
test
xorb
add
add
test
and
lea
sub
and
jmp
jo
out
mov
add
sub
jp
ss
mov
cmpsl
mov
fwait
scas
es
sahf
dec
out
inc
jp
inc
jb
int3
std
data16
xchg
adc
lahf
mov
fildl
sbb
jno
data16
inc
or
pop
sbb
sbb
aaa
inc
cwtl
dec
inc
ffree
push
mov
ret
add
sbb
mov
ror
xor
fistpl
lret
ljmp
adc
inc
mov
xchg
test
mov
lret
js
mov
js
push
jl
stos
ret
icebp
mov
out
mov
in
jno
jecxz
lret
data16
cmp
sbb
lea
add
cmp
jl
bound
js
push
mov
loop
ljmp
aam
mov
pop
pop
fdiv
mov
insl
pop
cmpb
mov
scas
sub
hlt
loop
test
es
int3
daa
pop
and
dec
lods
dec
je
pop
cmp
movsl
jne
jo
xor
fiadds
dec
fwait
test
xor
xchg
insl
xchg
cmpsl
insb
push
aas
leave
insb
filds
lods
or
push
ss
dec
xor
popf
stos
jl
das
lods
mov
imul
rorb
xor
sub
icebp
les
push
pop
aad
jno
push
cmp
mov
out
unpckhps
movsb
mov
mov
mov
in
test
mov
adc
xchg
nop
outsl
cltd
faddl
incb
pusha
cmp
jb
mov
sbb
js
dec
or
stos
test
and
rorl
es
dec
cwtl
jecxz
mov
test
pushf
and
fisttpll
in
push
mov
mov
fstpt
xor
mov
xchg
mov
aad
fmuls
jno
and
adc
into
int3
aad
cmpsb
xchg
pop
pop
jl
dec
in
adc
push
out
xchg
cmp
push
and
cmc
test
mov
dec
lods
lods
inc
sub
aaa
mov
adcl
aad
lret
rcrl
int3
push
dec
stos
fmull
sub
lds
xor
dec
xchg
or
and
ficoml
inc
insl
mov
add
cmp
popa
lahf
vmwrite
cli
pop
mov
adc
jo
je
push
shr
fs
cmp
xchg
jbe
jne
push
int
lret
add
mov
xchg
xchg
addr16
lods
sbb
lret
shlb
adc
sahf
loopne
xchg
mov
lds
adc
lret
cwtl
outsb
fdivrs
in
sub
pop
not
sub
pop
in
pop
jg
sbb
jae
pop
jae
jns
mov
cltd
push
cld
and
push
mov
shl
imul
lds
jno
mov
or
dec
and
test
movsl
ss
cwtl
sbb
jno
add
out
inc
push
nop
daa
iret
dec
repz
mov
add
and
aad
data16
xlat
cmp
test
dec
arpl
into
lods
in
outsl
xor
cmpsl
dec
xchg
pop
mov
imul
ljmp
add
mov
ljmp
or
out
clc
sbb
stos
enter
gs
cmp
mov
push
sahf
faddl
xor
cltd
hlt
cmp
mov
loop
sbb
sbb
push
and
movsl
add
hlt
sub
jmp
je
xor
nop
dec
xchg
and
das
fwait
jae
xor
push
ficoml
aam
out
mov
cwtl
mov
sub
fs
fcompl
mov
lods
test
xchg
jns
pop
dec
in
pop
inc
cld
loopne
fwait
mov
pop
insb
mov
ja
inc
orps
xchg
adc
orb
cmovp
xor
xchg
test
sbb
add
mov
lea
adc
xor
sti
iret
dec
xchg
mov
loope
leave
daa
in
daa
ss
pop
sbb
and
sbb
mov
dec
out
cwtl
adc
test
mov
inc
or
loop
inc
jbe
push
dec
repnz
outsl
mov
pop
inc
dec
ss
pop
jae
nop
add
mov
mov
jp
cmc
push
xlat
or
jae
mov
mov
das
popf
inc
ret
scas
sub
cli
inc
js
inc
sub
loopne
pop
add
loope
dec
and
add
out
pop
lods
push
or
roll
adc
js
aaa
jno
repnz
mov
in
leave
cmp
and
test
xor
pop
ds
mov
cmp
scas
dec
xor
cld
mov
xchg
add
rolb
sbb
add
fildll
inc
fwait
stos
mov
and
jb
pusha
pusha
jmp
xchg
cmp
imul
adc
xchg
nop
pop
call
sarb
mov
jle
sbb
sbb
cli
dec
aad
lahf
out
int3
pusha
pushf
insl
inc
dec
lods
out
cmp
pop
sbb
das
mov
fcomps
sbbb
inc
test
push
jg
sub
cmp
add
maskmovq
negl
lret
popa
mov
lret
lahf
adc
fwait
xchg
jl
out
lods
mov
or
mov
xor
sbb
push
fstpt
int3
cmp
rcl
push
cmpb
outsb
and
jb
jmp
ficoms
xchg
push
add
sbb
mov
filds
xchg
cs
fistps
jle
enter
call
rorb
iret
adc
data16
pop
gs
add
fsubp
inc
mov
dec
cmp
jo
pop
and
jle
imul
lahf
pop
mov
mov
or
addr16
mov
fcmovu
xchg
in
inc
add
xor
int
js
mov
stos
in
or
sub
xchg
add
mov
rcrl
in
into
or
loopne
sub
cld
xor
and
enter
cmpsb
ret
arpl
mov
inc
dec
jno
or
push
inc
in
dec
add
cli
call
adc
push
pop
lds
mov
add
jne
outsb
loop
add
sub
fdivrl
int
mov
xor
xchg
inc
cltd
lock
cwtl
sahf
dec
lds
push
mov
cmp
adcl
sbb
out
cmc
pop
cmp
push
jmp
jge
imul
jbe
xchg
mov
push
xchg
cwtl
int
cmp
pop
sti
aad
dec
lock
mov
inc
xchg
fistpll
cmp
mov
xchg
mov
insl
in
mov
cli
jl
mov
lock
sbb
clc
mov
inc
add
out
cltd
mov
scas
xlat
das
call
and
sahf
xchg
and
fimuls
mov
movsb
cmpsl
xorb
push
mov
movsl
pop
mov
pop
aas
cmp
inc
cltd
lea
les
dec
mov
mov
cmp
mov
push
push
je
adc
fadds
cmp
out
cmc
bound
movsl
push
sbb
je
cmpsb
jle
std
mov
shlb
sti
mov
mov
xchg
stc
mov
dec
push
loop
sub
cwtl
push
push
inc
push
push
add
jmp
add
and
mov
lea
imul
cwtl
popa
das
xor
mov
add
xchg
es
xchg
dec
aas
lods
mov
daa
scas
lret
xor
lds
lock
jmp
pop
dec
les
mov
mov
ss
cmp
repnz
cmpsb
xchg
push
mov
jnp
xor
addl
cmc
add
sbb
add
loopne
fs
and
mov
lods
jecxz
dec
scas
inc
rcrb
xchg
nop
orb
test
add
sbb
pop
inc
mov
and
incl
mov
stc
test
mov
inc
ss
mov
out
out
xchg
leave
push
loope
mov
std
iret
pop
sub
aaa
int
test
jmp
sub
inc
inc
les
cltd
dec
and
or
lea
or
aas
mov
cmpsb
sbb
call
pop
inc
fs
jg
pop
lcall
jnp
jge
fucom
into
pop
call
add
in
outsb
and
mov
mov
mov
stc
pop
sbb
fwait
dec
pop
cmp
fdivl
and
lret
pop
stos
inc
jne
imul
mov
jbe
jmp
mov
pop
test
pop
xchg
nop
scas
dec
out
add
dec
jg
loop
dec
xchg
mov
xchg
mov
dec
dec
test
loopne
rolb
scas
mov
push
cmp
mov
gs
push
add
lahf
lahf
cltd
mov
mov
dec
mov
inc
cmpsb
insl
jg
fmuls
mov
cltd
inc
ror
std
nop
dec
bound
xchg
pop
dec
mov
ror
je
daa
add
jl
movsb
add
hlt
push
sahf
clc
push
xchg
mov
sub
addr16
jne
daa
iret
nop
nop
clc
mul
inc
mov
repnz
aam
lahf
int3
adc
jge
mov
mov
inc
mov
push
push
sub
inc
sbb
pop
mov
add
outsb
addr16
insl
test
fwait
addr16
iret
sub
data16
stos
into
loope
cmp
pop
push
add
pop
divl
jmp
sub
icebp
adc
into
inc
loope
lret
test
xor
es
loop
mov
in
mull
mov
mov
aas
into
sub
loopne
fistps
gs
xor
sbb
push
push
adc
pop
jns
adc
and
fst
pop
imul
cmp
sub
mov
fcompl
test
xor
pop
mov
mov
int3
pop
jg
sti
lds
dec
clc
mov
dec
pop
pusha
fwait
lret
sub
add
inc
mov
xor
lret
cltd
rcr
std
fistpl
jecxz
or
or
push
and
mov
fdivs
int
stc
fildl
adc
pop
and
jne
push
scas
dec
mov
lods
or
dec
add
xchg
sub
outsb
adc
push
sbb
or
mov
inc
mov
jns
lods
int
fstl
lea
xlat
lock
mov
or
dec
imul
cli
mov
cmp
mov
inc
cltd
leave
sbb
jecxz
lods
mov
stos
cmp
mov
xor
outsb
inc
out
in
neg
pop
sub
gs
call
jmp
or
lret
in
not
lcall
jne
inc
test
out
jmp
pop
mov
jo
lret
xor
adc
das
jns
adc
sbb
jno
add
movsb
mov
inc
dec
push
int3
cmpsl
sub
lret
addr16
iret
repz
jbe
mov
out
inc
cmp
mov
xor
mov
push
push
loope
mov
xor
movsl
lcall
sbbl
cmpsl
aaa
push
and
add
out
rolb
in
mov
jg
loope
pop
rorb
fiaddl
jmp
or
mov
jb
jno
bound
ret
fldt
ljmp
data16
jae
addl
pop
xor
push
xor
inc
jne
arpl
sbb
push
inc
push
and
sbb
lds
xor
inc
sti
dec
in
sahf
xor
test
add
push
or
ret
cmp
sub
xchg
scas
mull
in
je
int3
push
leave
int
into
mov
fstpt
aaa
jl
loop
enter
or
jg
cltd
or
iret
jno
test
jl
adc
add
pusha
lea
outsb
adc
pop
inc
jbe
cmp
ror
inc
xor
lock
xchg
pop
mov
jp
cli
lcall
mov
nop
ljmp
pop
in
stos
das
pop
mov
add
gs
sub
out
pusha
movsl
es
lods
jns
lea
sub
sti
or
test
inc
mov
jo
mov
repnz
add
in
inc
test
roll
ficomps
inc
in
pop
ss
inc
xchg
fisttpl
push
sbbb
out
or
repnz
sbbl
lds
lahf
jl
xchg
leave
lret
add
sub
jecxz
sbb
popa
loope
sahf
sbb
fisubl
fcmovne
shlb
pop
xchg
mull
outsb
arpl
inc
scas
push
loope
popf
arpl
sub
loopne
nop
fcoms
mov
ret
cwtl
push
sub
adc
hlt
aam
jmp
fcomip
je
imul
push
dec
sub
xchg
push
push
pop
mov
dec
mov
cmc
mov
rolb
jno
mov
call
xor
insl
mov
fwait
scas
cmp
xor
das
mov
mov
pmulhw
sarl
mov
pop
cmp
hlt
sbb
pop
xchg
hlt
dec
dec
adc
addr16
push
imul
daa
fs
int3
cli
jno
push
mov
lcall
cmp
sarl
and
add
push
push
cmpsl
xchg
pop
ds
loopne
dec
or
push
add
jmp
aam
cmp
scas
mov
xchg
lcall
dec
mov
push
xchg
stos
mov
cmp
cli
dec
mov
and
daa
adc
int
addr16
pop
scas
push
das
xor
pop
lret
jg
aad
pop
jb
xchg
inc
jnp
inc
add
pop
stos
xchg
lods
dec
insb
sahf
es
inc
mov
int3
cmpl
push
std
cmpsl
addr16
or
out
push
jmp
test
ss
mov
dec
movsb
and
lahf
outsl
jmp
xorb
cmp
pop
popf
cmpsb
test
fistl
aaa
push
roll
cld
jno
mov
jle
xor
sbb
push
fs
cwtl
xchg
rcrb
sbb
out
jge,pn
repz
cmp
push
mov
jb
je
test
jo
xor
pop
cltd
dec
inc
movsb
les
mov
dec
push
adc
scas
pop
jle
jae
in
mov
mov
rcl
mov
ja
xor
cs
out
out
dec
test
jmp
mov
xchg
rorb
adc
add
push
ljmp
icebp
or
aam
test
andl
jnp
fadd
pop
imul
or
xor
pop
xchg
dec
leave
sbb
or
push
xchg
out
jno
lret
call
or
sbb
lcall
mov
stos
scas
testb
mov
daa
sub
mov
sbb
out
adc
rolb
movsb
xchg
and
pop
lcall
sbb
aad
out
test
scas
out
xchg
fldl
cmp
adc
js
fldt
loop
xor
lock
lds
outsl
insb
or
adc
pand
add
lcall
cltd
insl
flds
add
ficompl
stos
je
mov
daa
ja
loopne
jne
push
mov
dec
push
movsl
pop
sbb
adc
insb
out
leave
fs
or
sub
mull
jp
imul
sbb
and
gs
pop
bound
mov
cmp
aaa
scas
mov
movsl
pop
repnz
scas
rolb
dec
ret
addr16
mov
push
push
stos
jno
xchg
push
dec
sub
in
push
lods
pop
add
add
rcr
in
lret
lock
cli
mov
xor
lahf
aad
ljmp
xchg
push
fstpl
test
inc
xchg
lods
movsb
in
push
mov
mov
movsl
adc
insl
scas
xor
inc
cmp
out
les
test
xor
iret
pop
sbb
icebp
call
lret
in
cmp
test
adc
mov
imul
xchg
xchg
dec
repnz
cmpsl
dec
pushf
adc
insl
xor
sbb
bound
push
stc
cmpsl
sub
iret
dec
mov
movsb
je
or
sub
xchg
and
mov
sbb
rcll
mov
adc
test
lcall
imul
cmp
dec
adc
mov
mov
inc
jbe
in
pop
jnp
lcall
mov
std
push
ds
xchg
ret
ficompl
or
cmpsb
mov
insb
dec
sub
les
ds
gs
shl
dec
into
pop
lcall
fcomip
xor
sbb
in
cmpsb
pushf
and
sbb
push
and
and
sbb
lock
sub
jns
inc
mov
rorb
cmp
sub
xor
mov
cmp
cmc
or
icebp
adc
pushf
clc
outsl
aas
cmp
dec
dec
in
ret
stc
mov
test
fistpll
inc
or
pop
xor
sub
icebp
std
sar
loop
mov
pusha
pushaw
test
push
rcrb
sub
mov
cli
sbb
fisubrs
jbe
jb
mov
push
sub
inc
sarb
xor
rcrl
sub
outsb
and
sub
mov
popa
arpl
mov
fmuls
or
test
pop
xchg
ja
add
outsl
pop
dec
xor
fs
shrl
outsb
in
ss
xchg
dec
lahf
mov
leave
inc
pop
pop
cmc
fidivs
or
ss
sub
arpl
push
test
mov
scas
sbb
ret
xchg
jns
jg
jl
cmc
adc
pop
mov
scas
or
push
add
xchg
mov
mov
add
dec
aam
scas
jp
adcb
insl
push
cli
shl
enter
or
and
mov
inc
dec
mov
rorb
ja
cmp
pop
dec
mov
fildl
and
iret
fstpt
push
jle
pop
dec
arpl
and
and
aam
jbe
cmpsb
in
leave
pop
mov
shlb
fsubs
es
and
lea
add
popa
fwait
xchg
outsl
add
dec
dec
aas
cwtl
call
test
fcoml
outsb
mov
jno
fisubl
xor
fldt
and
inc
neg
cli
cli
and
dec
add
push
inc
fsubs
leave
nopl
jno
stos
sbb
push
jge
mov
js
push
adc
sbb
cmp
pop
jno
insb
or
push
std
mov
lret
or
cmp
adc
je
xchg
sub
xor
sbb
in
pop
pand
in
pop
in
insl
test
cmpsb
cmp
leave
pop
sub
call
xchg
inc
scas
sahf
mov
scas
pop
ljmp
das
neg
repz
adc
or
shl
sahf
testb
mov
jns
jne
in
add
outsl
es
mov
jl
jo
dec
icebp
dec
orl
pop
xchg
sti
xor
and
mov
insl
xor
test
push
and
sub
imul
in
icebp
add
imul
sub
xor
jle
push
pop
mov
add
call
into
inc
int3
mov
mov
adc
pop
adc
dec
and
insb
lcall
mov
cmp
jg
inc
jnp
mov
xor
dec
sbb
sbb
out
dec
xchg
mov
adc
jae
stc
pusha
imul
roll
jo
mov
cmpsb
fisttpll
pop
addr16
jns
lods
and
cli
sub
pop
out
mov
mov
pop
flds
jae
jle
mov
lods
fnsave
pusha
adc
out
ffree
dec
bound
loopne
or
mov
cmp
and
aaa
mov
and
loope
pop
in
imul
inc
mov
and
sahf
lcall
adc
push
add
out
xchg
stos
cltd
xchg
aam
xor
stc
sbb
push
stc
sub
dec
loop
push
dec
mov
adc
xchg
cltd
sub
stc
mov
dec
mov
mov
xchg
mov
lds
inc
outsl
in
imul
mov
xchg
adc
push
pushf
sub
pop
jno
fwait
pop
cwtl
aad
cmpsb
lret
in
cmp
repz
vmovd
ret
sbb
hlt
xchg
adc
fcomp
xorl
xor
dec
mov
insb
gs
inc
sbb
in
out
jnp
xchg
mov
out
and
enter
jbe
es
int
add
jae
test
in
es
pop
daa
adc
inc
fldt
sbb
shlb
mov
pusha
pop
mov
ja
in
or
add
or
ret
gs
std
out
gs
mov
addl
outsl
out
std
into
and
lcall
hlt
ja
clc
xor
and
ss
xor
jns
in
imul
inc
aas
mov
js
imul
mov
push
lds
aad
cmp
xchg
pop
pop
stc
mov
xchg
sbb
fnstenv
sub
es
out
pusha
shl
mov
push
dec
pop
or
xor
ds
movsb
fldt
stos
pop
mov
insb
shll
xor
mov
push
xchg
loope
push
mov
stos
mov
pop
mov
lods
mov
fwait
adc
xchg
push
dec
mov
mov
mov
int
mov
lea
lea
xor
and
jmp
rcll
adc
push
int
lahf
sub
inc
mov
mov
mov
fwait
lea
dec
add
lret
movsb
xchg
sti
adc
xchg
mov
mov
xlat
sbb
pop
push
je
sbb
movl
xchg
in
test
jmp
push
je
dec
push
icebp
push
mov
pop
jae
push
add
aas
xchg
lods
adc
sti
or
mov
popa
sbb
push
ja
xchg
inc
fistpll
hlt
ficoml
jg
out
mov
shrb
insl
mov
call
pop
cmp
cmp
xchg
jne
aas
or
cmpsb
outsb
sbb
aad
or
mov
jb
aam
loop
sahf
lods
cmpsb
xchg
lds
in
pop
dec
pop
bound
mov
push
lret
int3
add
xchg
sbb
std
push
mov
stos
pop
es
loope
jmp
xor
jo
mov
jae
aam
inc
nop
hlt
adc
inc
push
add
jmp
or
push
and
fwait
pop
add
xor
mov
in
lock
int
lahf
xor
jecxz
mov
loope
sub
outsb
imul
cmpsl
rcr
mov
ret
icebp
icebp
sub
pop
jnp
sbb
arpl
mov
push
xor
jecxz
and
stc
xchg
xor
push
sub
int
enter
sbb
pop
popa
jno
push
pop
hlt
inc
pop
pop
sbb
lcall
jb
sar
sub
jge
jnp
test
xor
add
popf
and
js
xor
stos
pop
dec
inc
mov
std
pushf
xor
mov
xor
adc
mov
pop
dec
test
push
iret
out
jne
clc
pop
dec
cmpsb
mov
mov
and
int
imul
es
sbb
xor
ficoms
mov
mov
jmp
test
int
stos
xor
ss
and
shll
adc
sub
pop
and
jns
out
fdivs
fwait
data16
test
jno
test
jae
loope
ret
sbb
cmp
subl
mov
gs
push
mov
arpl
mov
insb
fcomps
sahf
dec
sbb
loop
mov
and
mov
mov
inc
push
xchg
mov
scas
push
xor
int
stos
mov
lods
dec
fcomps
das
lea
pop
fbld
cmpsb
nop
cmpsb
pop
sahf
dec
aaa
push
mov
sbb
stos
sbb
push
jae
out
in
movsb
pop
mov
insl
loop
mov
scas
aas
push
push
lcall
cmp
jnp
jmp
cld
sbb
loop
clc
scas
or
cmp
xchg
lahf
jge
mov
lret
dec
or
xor
mov
jbe
mov
into
fcmovnb
xchg
inc
je
or
aam
cli
cmp
jns
fsubrl
cmp
xchg
adc
lret
std
out
add
mov
push
stc
scas
add
push
inc
add
cmp
or
fldcw
arpl
pop
jecxz
or
or
mov
mov
cltd
mov
mov
fdivl
mov
sti
popa
addb
cmp
sub
testl
sub
dec
cmp
jo
push
enter
jo
jne
adc
push
xor
fcomip
sub
lds
icebp
shrb
adc
iret
mov
out
pop
subl
and
mov
ficomps
push
mov
cmp
clc
or
fldl
call
out
lds
pushf
icebp
add
push
in
inc
imul
adc
in
xchg
ja
adc
dec
es
push
dec
mov
stos
pop
clc
xchg
dec
ret
cli
je
mov
pop
imull
xlat
cmp
mov
pop
fwait
enter
or
sub
jecxz
jge
adc
ds
inc
aam
or
rcll
es
enter
fstl
and
mov
add
pop
sbb
jno
fs
lcall
mov
and
loopne
ja
cmp
and
mov
insb
mov
hlt
push
mov
inc
pop
mov
push
pop
add
rorl
das
gs
cmpsl
jnp
int
add
dec
xchg
mov
mov
js
inc
xor
pop
loopne
nop
mov
iret
jl
sbb
and
daa
sub
lret
mov
dec
mov
movsl
jecxz
lea
xor
dec
xor
fdivl
inc
mov
in
sbb
stos
fdivs
jge
inc
stos
mov
jl
jge
into
or
push
and
outsl
les
icebp
icebp
mov
test
icebp
test
sub
leave
lds
stos
imul
adc
jl
push
addl
repz
les
sbb
mov
mov
nop
push
xor
push
gs
popf
sbb
sub
rclb
test
test
jnp
inc
insb
in
jmp
inc
shll
stos
scas
bound
add
pop
cwtl
and
add
aam
inc
dec
xor
xchg
ss
mov
and
push
xchg
cmp
bound
addl
ja
mov
xor
adc
lds
add
mov
pop
cmp
push
or
repz
ficompl
jne
mov
in
mov
cs
fisttpll
mov
sbb
mov
loope
decl
adc
sub
and
dec
in
push
inc
lea
movsb
dec
bound
ficoml
inc
jl
jp
jns
mov
lret
loope
dec
out
mov
andl
mov
xchg
and
pop
cmp
push
and
jbe
or
and
fdivrp
xor
lods
cmp
ret
test
pop
adc
bound
mov
popf
xor
pushf
cwtl
add
fsubr
cs
prefetch
std
loope
pop
loopne
int
and
lea
movsl
fstpl
movl
mov
lock
dec
and
fdivrs
and
data16
lret
cmp
push
mov
fmuls
iret
loopne
icebp
and
imul
jmp
sbb
mov
xchg
jbe
jp
xor
push
int
xchg
mul
pop
sub
das
ret
stos
les
mov
xchg
dec
jmp
sti
xor
sub
es
or
data16
bound
test
aad
stc
iret
and
out
add
test
mov
enter
mov
mov
fiaddl
pop
in
sub
jge
daa
pop
cmp
out
in
negl
mov
enter
inc
cltd
pop
adc
lcall
js
or
hlt
pop
and
sub
loope
add
sub
das
arpl
mov
jmp
mov
jp
and
loopne
and
dec
xchg
adc
cmp
xchg
repnz
dec
insl
inc
inc
pop
dec
jmp
fisttps
push
fs
push
div
mov
or
and
std
cmp
mov
mov
xchg
xor
push
push
fsubrs
pop
push
dec
pop
mov
rcll
jmp
jle
mov
cmp
in
fmull
and
imul
adc
cld
pop
movsl
cmpsl
adc
xchg
lret
scas
cld
out
mov
or
outsb
mov
dec
fwait
dec
xchg
ficomps
inc
mov
rcrl
daa
pop
mov
addl
cmpsl
addr16
push
push
daa
mov
insb
lock
jge
jno
jo
test
inc
fwait
cwtl
rcr
pop
lock
xchg
mov
ret
inc
mov
insl
or
xchg
lcall
jmp
mov
jno
shll
sub
mov
sbb
dec
jle
push
pusha
or
mov
ret
inc
stc
dec
in
mov
pop
push
out
jmp
push
jo
ror
imul
into
or
hlt
ljmp
mov
int3
in
ret
push
adc
jbe
arpl
inc
pop
filds
jp
jo
arpl
jb
nop
out
lock
loopne
divps
popf
sbb
rorb
jl
mov
pop
loope
nop
fneni(8087
dec
jb
sub
jmp
or
insl
pop
shll
bound
in
add
loope
mov
xchg
adc
std
and
cmp
mov
mov
pop
xchg
aam
sub
push
mov
jl
inc
fistps
cmp
aaa
in
aad
or
mov
or
hlt
lock
xchg
push
xor
sub
sbb
lods
addb
cltd
xchg
add
imul
and
or
data16
lahf
pusha
inc
jmp
out
sbb
add
xlat
mov
cltd
push
fs
cmp
fldcw
mov
das
adc
out
mov
aaa
inc
scas
push
push
icebp
repnz
imul
and
dec
clc
lret
out
xchg
daa
jno
outsl
xchg
in
push
movsb
dec
das
inc
mov
pop
data16
push
xor
or
mov
jno
jae
lea
xlat
rolb
popa
and
cmp
sbb
or
insb
sbb
lret
adc
js
adc
xor
mov
push
shll
inc
fmul
in
std
pop
add
sbb
cmp
jnp
or
xchg
imul
ja
or
or
adc
sahf
add
js
mov
xor
lods
inc
jb
outsl
idiv
mov
lea
sub
test
xor
jle
data16
stos
xor
data16
out
and
fildll
dec
bound
and
cs
lods
mov
into
pop
adc
adc
pop
out
adc
and
jecxz
ret
pop
ja
jg
je
add
scas
rclb
jle
shlb
movsb
adc
rorl
scas
push
xor
outsb
sbb
cmpsl
fnsave
mov
adc
icebp
stos
xchg
jg
xor
rcll
push
inc
loop
push
pop
inc
cmp
xchg
push
push
jp
mov
je
cmp
inc
inc
xor
xor
fwait
fwait
stc
or
mov
jne
xchg
rcrb
or
inc
int3
and
in
dec
pop
pop
xor
add
iret
jmp
inc
lret
jnp
sub
sub
out
mov
push
out
in
add
lret
aad
jo
sbb
ficoms
outsb
shl
movsb
inc
and
leave
push
arpl
repz
and
js
shll
xor
lds
xor
dec
cmp
or
mov
repz
je
xlat
test
out
scas
clc
or
lret
fsub
in
fsubr
outsl
imul
lret
aaa
addr16
cmp
sbb
movsb
push
int
inc
xlat
ljmp
dec
xchg
enter
fiaddl
add
cmpb
bound
jbe
mov
sub
adc
out
popf
xchg
ss
jno
cmpsl
fs
sub
fadds
pop
xchg
or
sbbb
fs
inc
adc
mov
lea
xor
mov
or
gs
or
add
loopne
and
xor
jle
xor
and
js
xchg
aas
sbb
insl
and
iret
and
inc
clc
pop
push
xor
repnz
call
icebp
fimull
sbb
pop
add
int
test
fdiv
push
cmp
es
pop
mov
sbb
nop
shl
pop
sbb
mov
lea
fidivl
out
out
fldl2t
pop
mov
push
pop
jnp
insb
sub
fistpl
pop
cld
cltd
dec
push
aam
stc
aam
mov
push
cmp
cmpsl
mov
imul
xor
mov
lcall
push
enter
imul
lret
dec
inc
mull
int3
mov
orl
sub
stos
je
sti
pop
in
repz
xlat
xchg
lock
adc
std
cmp
ror
add
xchg
out
fs
icebp
aad
pop
adc
mov
jmp
aaa
fs
pushf
gs
push
fdivl
inc
test
push
mov
fwait
aaa
call
xor
push
sbb
mov
les
xor
int
cli
ds
mov
cmp
push
pop
out
sub
push
enter
lret
push
add
arpl
movsb
inc
mov
lret
lds
test
cld
sub
or
aas
dec
leave
or
pushf
mov
lods
lods
mov
shl
adc
or
add
pop
jb
bound
pushf
jb
jbe
iret
js
sub
outsl
dec
xchg
pop
cmp
cltd
enter
mov
in
ss
and
lds
mov
daa
or
and
ja
es
push
jl
sarb
test
add
ds
enter
repz
movsb
xor
mov
inc
mov
aad
dec
add
xor
inc
cs
mov
mov
jl
fnstsw
mov
das
aaa
iret
inc
push
sarb
ss
or
jp
das
pop
out
loope
jno
mov
jnp
push
ds
mov
add
mov
xor
sahf
inc
aam
es
cmpsb
add
jmp
mov
roll
add
or
sbb
in
jns
sbb
jns
testb
mov
mov
fistps
subb
jo
push
lods
daa
jle
fucomp
add
mov
or
mov
outsl
pop
pop
mov
inc
lret
fwait
sbb
lods
aas
ds
push
sbb
mov
sahf
in
jns
mov
jae
xlat
adc
mov
es
sti
data16
push
adc
gs
inc
and
jge
pushf
inc
or
int3
or
inc
or
rol
test
movsb
aam
sbb
mov
push
jge
lahf
popa
inc
sbb
add
and
popaw
rcll
jo
gs
arpl
pop
cmp
xchg
into
fldcw
je
jbe
shr
adc
jbe
test
adc
cmc
cmc
lock
inc
push
andl
stc
shrb
or
xor
push
ss
das
popf
aad
popa
test
test
jecxz
or
into
jne
pop
pop
pusha
shlb
loope
mov
cmp
pushf
insl
mov
xor
xchg
jae
sub
mov
jecxz
inc
mov
pop
xlat
repz
in
adc
popf
sbb
mov
mov
stc
or
lret
inc
imul
addr16
repnz
add
or
fists
mov
ljmp
xor
or
jnp
push
cmc
nop
movsb
jnp
cwtl
sbb
stos
jae
add
adc
mov
mov
scas
cmpsb
mulb
ds
mov
std
add
pop
cmc
mov
ss
mov
add
mull
xor
add
test
xchg
sbb
in
loop
les
mov
lods
add
mov
push
dec
mov
or
or
insl
popf
mov
inc
fnstsw
scas
loop
js
repnz
mov
inc
inc
in
cmp
pop
fiaddl
jo
adc
outsb
push
mov
inc
mov
ret
fldl
adc
rcr
adc
adc
ss
ja
jns
jnp
jo
push
loopne
adc
nop
mov
repnz
insl
inc
sub
das
cmpsl
jecxz
push
mov
cs
xbegin
pop
scas
aam
mov
rolb
push
aaa
aaa
pop
gs
int
xchg
sub
lock
jb
aaa
call
ja
ds
pop
sub
sub
sbb
push
pushf
inc
inc
in
dec
mov
hlt
cmp
cmp
sbb
sub
pop
int
xor
enter
sbb
pop
xchg
jno
cmp
aas
xchg
and
dec
fdivrp
add
mov
cmpsl
sbb
sbb
add
fiaddl
bound
inc
jecxz
push
jmp
mov
and
rcl
cld
test
and
inc
dec
nop
fnsave
push
jbe
or
in
jae
stc
movsb
les
mov
or
fcoml
and
pop
and
dec
jbe
cwtl
xor
add
pop
sbb
in
and
xchg
testb
pop
test
add
int3
dec
int3
int
sbb
xlat
xor
mov
jl
inc
fwait
inc
in
or
cmp
cmp
test
les
aaa
pop
data16
lcall
jnp
je
ljmp
jg
bound
cwtl
je
pop
xor
mov
adc
push
in
stos
jo
data16
sbb
dec
rol
scas
adc
push
xor
cs
or
movsb
sahf
scas
popa
sarb
sub
push
mov
iret
xchg
lret
ret
nopl
aaa
int3
and
inc
xchg
jmp
push
gs
stos
jnp
js
mov
add
inc
push
sahf
pop
pop
mov
cmp
sub
aam
xlat
push
in
or
test
sarl
cwtl
test
push
sbb
insl
out
in
std
xchg
fyl2xp1
dec
mov
aaa
mov
roll
cmp
sti
cmp
lds
inc
fdivr
sti
jge
dec
mov
or
or
cs
mov
pop
lret
dec
loopne
sbbl
jne
sub
rcl
xchg
mov
leave
cwtl
das
jne
sbbl
pop
add
dec
jns
cmp
incl
inc
pop
or
imul
mov
ret
mov
and
rol
jg
sub
test
std
and
pop
iret
mov
xor
pop
xchg
fdivrl
add
cmp
adc
dec
out
in
jno
rclb
out
fiaddl
cli
pop
or
dec
mulb
ror
loope
dec
sub
xlat
insb
lods
sub
pop
and
sahf
xchg
dec
nop
sbb
xor
xor
mov
aad
jl
loope,pt
mov
aaa
inc
test
inc
lds
in
inc
rol
ficompl
aaa
dec
xor
mov
dec
mov
jb
push
sbb
mov
dec
in
repz
inc
push
pop
ret
xchg
or
cmpsb
xchg
insb
rcrb
sub
test
icebp
dec
mov
inc
mov
sbb
or
fs
lret
imul
bound
mov
rorb
pop
iret
hlt
pop
inc
sub
sbb
and
and
mov
or
rorb
fnstsw
mov
mov
mov
xchg
out
jae
and
pop
inc
in
push
push
movsb
mov
push
out
nop
xchg
jecxz
xor
xchg
out
add
mov
adc
movsb
adc
cld
dec
xor
and
imul
pop
cmc
aad
test
ss
mov
test
cmpsb
mov
push
push
dec
test
std
adc
dec
xchg
jg
and
das
jmp
je
leave
lret
mov
icebp
int3
dec
add
mov
pusha
adc
and
out
es
cmc
cld
push
repz
jecxz
fisttps
hlt
into
mov
jns
cwtl
sbb
push
jg
or
jno
stc
sub
mov
loope
cmpsb
cmc
pop
fnstsw
sarl
pop
and
cmc
loop
leave
out
dec
jge
xor
in
cld
ror
dec
pop
mov
insb
ja
sbb
fcompl
inc
cmp
std
icebp
cli
mov
pop
add
jl
xor
insb
test
icebp
scas
out
inc
mov
sbb
lock
ja
jp
adc
lea
mov
ret
mov
lret
jb
jb
cltd
push
addr16
sbb
movsl
adc
xchg
ret
xchg
adc
leave
cmpsl
or
xlat
mov
mov
adc
jl
cld
inc
xor
icebp
xor
stos
shll
push
mov
push
scas
and
cmp
mov
mov
pop
xchg
add
pusha
xor
mov
fcoml
jmp
lods
in
adc
jecxz
push
and
sti
aaa
dec
and
mov
inc
outsb
mov
test
ret
lds
pop
cs
arpl
je
jb
mov
cmp
xor
in
fucom
out
push
or
xchg
push
dec
lret
or
pop
test
call
and
sbb
push
daa
adc
sbb
int3
pop
push
psubusb
outsl
jecxz
ret
leave
aam
or
loop
and
adc
cld
xchg
in
fcoml
dec
insb
fdivrs
push
cmc
mov
in
xor
add
jg
insl
cwtl
loope
ret
sti
pop
sub
lret
push
jo
aam
mov
pop
mov
sti
mov
in
xor
adc
or
js
push
mov
cli
int3
adc
dec
nop
jbe
lret
add
xchg
addr16
aad
mov
mov
inc
mov
ret
mov
pop
mov
int3
push
gs
cltd
shll
fsubs
push
int
xchg
push
push
and
xor
sbb
sbb
cld
xor
fnstsw
les
stos
jg
mov
add
inc
popf
ljmp
cld
jmp
and
mov
cwtl
es
out
add
fs
and
sbb
mov
cmp
push
pcmpgtw
jne
xor
mov
dec
lcall
dec
push
cmc
jae
sarl
mov
xor
xor
sub
sbb
es
mov
outsb
daa
inc
sbb
or
or
mov
fcmovnbe
dec
add
mov
out
mov
adc
add
or
insl
jbe
add
sub
push
adc
xchg
setl
inc
fwait
cmp
dec
enter
jmp
mov
mov
neg
mov
clc
xchg
shrl
xor
mov
ret
bound
jmp
push
sti
leave
out
and
shll
lret
mov
cld
loopne
dec
inc
test
pop
xor
pop
sbbb
das
lahf
sbb
lret
or
dec
mov
inc
aad
mov
xchg
or
cmp
dec
dec
mov
mov
mov
pusha
or
xchg
int3
lods
push
xrelease
je
push
cmp
stos
ljmp
lea
loope
fs
sbbl
add
sti
mov
or
inc
xchg
or
mul
adc
test
repnz
jg
cmp
push
jb
sbb
sbb
mov
push
pusha
pop
xor
push
out
push
mov
nop
fadd
or
xchg
push
xchg
or
bound
fwait
jmp
add
and
xor
pop
dec
lcall
adc
bound
pop
push
jne
insl
mov
sbb
xchg
ficomps
or
mov
ljmp
or
inc
push
mov
iret
mov
jle
mov
adc
addr16
sbb
xor
movsb
inc
scas
add
outsl
xor
imul
or
loopne
imul
in
mov
js
cwtl
add
insb
fildl
push
ficompl
jae
and
mov
stc
mov
lea
je
jg
sbb
imul
pop
sbb
mov
sbb
pushf
mov
xchg
repnz
lahf
es
pop
inc
add
dec
int3
pop
dec
pop
cmp
loop
dec
mov
mov
inc
or
dec
in
cli
and
jno
inc
push
jbe
push
cmp
inc
ret
fdivp
fldcw
mov
sbb
and
add
mov
mov
out
out
push
push
adc
hlt
sbbb
in
bound
ds
adc
enter
out
idivb
cli
mov
sbb
mov
dec
sub
movsb
or
leave
sbb
push
pop
cmp
inc
sub
repnz
imul
test
lahf
jbe
fcmovne
daa
sbb
pop
jp
fistpl
or
jl
test
imul
fcmovnu
leave
aam
fsubl
mov
add
in
push
lds
add
shl
out
orl
test
int
lods
ficoml
cmp
lods
data16
lret
sbb
jp
mov
sbb
nop
out
mov
add
jg
jnp
xchg
mull
ret
cld
or
cmp
mov
int
and
js
fistps
jae
mov
cmp
jnp
and
lret
or
pop
adc
lods
adc
sub
cmp
sbbl
or
lods
lret
int
dec
mov
mov
push
inc
cld
insb
or
mov
into
xor
icebp
cs
xor
mov
pop
call
shl
loop
xchg
xchg
push
in
mov
int
and
dec
dec
cmp
jle
dec
clc
add
dec
adc
add
mov
pop
mov
ss
xchg
lret
jle
mov
xchg
sub
push
and
divb
xchg
nop
in
aad
and
mov
shll
popa
repnz
xchg
xchg
mov
fsub
ljmp
lahf
xor
out
movsb
and
jnp
mov
movsb
or
mov
add
sub
es
inc
nop
pop
fadd
clc
test
orl
popl
lret
mov
in
cmpsl
fisubs
xchg
jp
add
dec
jmp
mov
mov
nop
pop
mov
js
xor
mov
sarl
dec
xor
xchg
out
pop
push
sub
jecxz
movsb
add
cltd
mov
or
jae
add
out
pop
int3
push
icebp
movl
imulb
jno
fisttpl
xchg
dec
icebp
lds
outsl
pop
mov
inc
aaa
pop
mov
arpl
fidivrl
cmp
aas
mov
out
inc
jl
call
inc
fsubs
pop
or
in
xchg
inc
sbb
mov
std
push
negl
adc
jl,pt
inc
pop
sub
mov
pop
inc
or
sbb
jl
dec
sub
dec
nop
cmpsl
inc
int3
push
dec
stos
pop
mov
pop
shll
and
dec
mov
pushl
popa
inc
pop
mov
cmp
mov
inc
js
push
sub
or
xor
cmp
or
shll
pop
lret
loope
push
or
pop
int3
and
out
jp
xchg
popa
not
negb
bound
stos
sbb
sub
adc
sub
push
incl
sub
inc
inc
call
add
jp
lahf
sub
cmp
and
aam
movsl
cmp
shl
imul
inc
gs
mov
pop
adc
cld
int
aad
and
pop
jns
add
repnz
sub
cmp
lret
mov
lret
rol
and
fwait
xorb
dec
scas
adc
loope
imul
mov
ss
into
and
stos
mov
push
das
frstor
icebp
pop
add
pop
or
sub
bound
out
or
repz
adc
ja
xor
test
rolb
xor
sbb
dec
shl
ficoms
test
jp
out
insb
popa
popl
pop
xor
lds
push
shl
cmp
sar
mov
pop
jno
xchg
call
int3
rorb
mov
lock
call
add
dec
ret
fidivs
ds
out
js
bound
jb
insl
sub
out
jo
scas
loop
mov
pop
ss
fcompl
mov
and
insb
mov
shrb
lret
mov
push
jecxz
push
cltd
loopne
pop
push
or
ret
sbb
ficoms
pop
xchg
cmp
cmp
test
into
fisubrs
mov
int
and
dec
fdivr
xor
daa
lcall
inc
push
mov
ljmp
xor
dec
mov
jmp
in
pop
mov
test
xor
jmp
xlat
fsubrs
mov
mov
ret
adc
jg
shl
iret
shrb
sbb
cmp
iret
loopne
add
xor
add
sti
arpl
cmp
cwtl
bound
frstpm(287
std
je
call
mov
fwait
adc
mov
push
cli
cs
push
push
sub
mov
outsl
je
cmp
cmp
shlb
dec
out
out
dec
inc
pop
mov
jnp
mov
sub
add
push
xor
js
stc
jl
dec
inc
mov
sbb
inc
negl
push
test
push
sbb
notl
pop
or
sbbl
in
je
cmp
stos
aaa
icebp
xor
aad
enter
ret
add
imul
or
add
xchg
jne
mov
out
push
rolb
and
sub
pop
dec
fst
push
sti
sbb
andl
xor
xor
pop
cltd
sbb
cld
mov
xchg
jp
addr16
or
arpl
jmp
add
mov
or
scas
lods
rcl
inc
mov
pop
pop
jl
jae
add
mov
cmc
dec
movsl
mov
push
xchg
pop
testb
mov
lds
fs
movsb
outsb
pop
jo
imul
bnd
pop
mov
loopne
lahf
mov
inc
psubusb
lds
rclw
jbe
ja
xchg
hlt
ljmp
fs
inc
add
xor
test
jg
push
inc
fisubrl
loopne
bound
in
jmp
cltd
add
movsb
lds
hlt
add
pop
subb
adc
push
mov
cld
fists
and
lock
ret
fisubs
int
push
pop
jb
add
out
sub
inc
cli
faddp
mov
push
sbb
ret
movsb
in
push
mov
adc
stos
sbb
jp
fmuls
push
clc
arpl
mov
mov
mov
shl
mov
daa
ret
call
mov
lods
sbb
fs
sub
ds
shrl
imul
dec
jp
mov
sbb
push
xor
sub
mov
xlat
push
int
sub
inc
test
mov
and
sti
movsl
dec
dec
shlb
jecxz
js
fwait
and
arpl
aam
aas
addr16
scas
xlat
iret
pop
pop
jno
enter
into
mov
imul
repz
out
gs
cmpsl
mov
in
inc
repnz
popa
add
insb
outsb
stos
sarl
dec
daa
sarb
ja
push
inc
iret
pop
int
pop
ret
gs
hlt
fwait
push
and
sarb
and
jp
dec
rcrb
insb
sahf
into
inc
jne
inc
pop
jecxz
cli
mov
inc
out
xchg
sarl
xchg
and
pop
lcall
mov
mul
cmc
xor
mov
inc
cs
ffreep
scas
dec
in
call
fs
cmpsl
fwait
pop
scas
lahf
arpl
xchg
dec
pop
xchg
mov
sbb
stc
and
fcomps
outsb
dec
out
dec
in
test
jnp
repnz
addb
jns
cltd
push
data16
xor
xor
mov
popf
mov
push
mov
imul
or
add
rorl
jmp
mov
adc
mov
mov
inc
ja
xlat
es
es
ds
inc
cli
in
mov
mov
mov
cli
addr16
dec
leave
pop
lds
pop
imul
pop
push
cltd
outsb
lahf
pop
arpl
xor
xor
mov
or
mov
sbb
xchg
fcmovu
xor
mov
hlt
sub
nop
movsl
dec
push
push
push
xorb
iret
rcl
std
inc
mov
mov
cmpl
adc
or
mov
inc
orb
sbb
adc
pop
inc
mov
pop
or
fadd
jno
add
jns
fcomi
movsl
out
inc
cli
jo
add
sub
mov
nop
movsl
repz
fnstsw
sbb
jmp
and
repz
mov
in
mov
pop
cltd
mov
icebp
daa
mov
test
pop
or
cli
mov
movsb
out
lahf
enter
test
sbb
mov
je
lods
dec
cmp
sub
dec
push
mov
jns
sbb
sub
data16
repz
loop
lea
xor
insb
fisubs
mov
outsb
pop
and
xchg
cmp
aam
fcomp
dec
mov
sahf
push
and
xor
movsl
or
icebp
scas
push
mov
xlat
mov
lods
jecxz
and
xchg
cmp
mov
mov
or
lcall
roll
cltd
jecxz
pop
loopne
ss
mov
movsb
repnz
dec
stos
mov
cld
mull
inc
and
sub
pop
sbb
add
push
ljmp
je
mov
mov
mov
cli
xor
lcall
imul
lods
cmp
in
rol
lret
das
adcb
fstl
adc
mov
ljmp
mov
add
sbb
out
fidivs
mov
lods
rolb
dec
pop
jnp
outsb
mov
xor
pop
lahf
andl
test
repz
in
mov
dec
adc
cmpsb
icebp
aaa
mov
xchg
repnz
movsl
pop
mov
mov
dec
subl
cmp
jge
outsb
iret
std
and
notl
decl
testl
test
lock
sub
insb
pop
sti
ficompl
test
dec
fxch
in
aas
pop
sbb
insl
pop
outsl
test
push
insb
idivl
cmc
sbb
push
dec
lahf
vmovss
push
rcr
push
faddl
xchg
lahf
fisubl
add
push
leave
cmp
aad
popa
fucomi
jl
adc
or
fisttpll
ljmp
aas
cltd
subl
inc
mov
xor
ja
lahf
in
inc
mov
ret
push
enter
pop
inc
pop
inc
dec
mov
sahf
addr16
or
arpl
loop
sub
inc
stc
cmp
std
xchg
sbb
sbb
cwtl
in
mov
es
test
lret
mov
sahf
dec
lea
xor
jmp
lods
dec
pop
fdivs
pop
stos
out
bound
add
inc
shlb
ss
repz
dec
dec
jnp
push
dec
pop
or
pop
stos
les
mov
mov
cli
cld
xor
fnop
mov
pop
std
std
push
aaa
test
insb
xorl
sbb
push
push
jb
xor
pop
xor
mov
je
imul
mov
lcall
mov
fimull
cmp
dec
or
divb
add
cmpb
xlat
mov
or
in
loope
inc
cltd
or
mov
push
jle
pop
jle
in
repz
lock
or
sub
arpl
cmp
jb
sahf
cmp
aaa
or
aas
push
ljmp
mov
add
push
rorl
sub
test
cmp
rorb
and
jg
add
fstpt
sti
mov
add
jl
cld
popf
inc
mov
hlt
aas
inc
jmp
push
sub
pop
sti
jb
lods
xchg
ja
or
frndint
dec
subl
jae
nop
xchg
add
in
lret
mov
mov
aam
lods
xchg
repz
push
ret
add
pop
sub
jecxz
xchg
addr16
shll
push
fldl
bound
sbb
aaa
pop
mov
pop
sti
clc
add
add
jb
fldcw
jae
lahf
stos
push
adc
mov
sbb
lret
fists
je
and
sbb
cwtd
sbb
unpcklps
clc
sbb
movsb
sub
sahf
sbb
scas
xchg
pop
push
or
adc
jns
sbb
pop
push
jo
jbe
out
dec
pop
out
add
pop
lds
add
cmpsl
ss
push
rorb
pop
cwtl
mov
cs
pop
jp
push
fistps
xlat
or
and
push
dec
loope
sbb
xor
mov
jbe
stos
popa
jmp
sti
dec
push
inc
jecxz
jae
popa
test
test
faddl
inc
fdivrs
dec
adc
cmp
ja
cli
dec
or
fcoms
mov
sub
sbb
or
test
pop
adc
sahf
movsl
sub
or
sbb
fisttpll
mov
sbb
in
das
add
sahf
add
add
movsl
cmc
out
clc
mov
inc
or
cmp
cmp
inc
in
test
mov
inc
sub
jns
mov
std
sub
pop
ds
push
push
xor
push
cwtl
lret
stos
jbe
sti
push
insl
push
xchg
mov
fucomi
repz
or
sub
rcl
aaa
xchg
xchg
lcall
data16
lds
int
cwtl
or
cmp
mov
cmp
sar
sub
idivl
subl
ja,pn
cli
push
push
push
adc
pop
mov
setno
jne
inc
sbb
sub
jnp
adc
aad
leave
mov
push
or
int3
mov
pushf
xchg
sbb
dec
push
xchg
dec
jbe
repnz
mov
ljmp
dec
add
in
int
vpunpckhbw
js
dec
in
add
and
cmpsl
jns
sbb
rorl
mov
dec
push
cmp
fiaddl
inc
cli
mov
add
idivb
into
lea
push
je
xchg
pop
jp
pop
addr16
mov
scas
and
in
aam
sti
and
das
xorb
insl
sahf
pop
mov
xchg
push
adc
loope
data16
jae
adcb
xchg
cwtl
jno
dec
cmc
pop
jge
retw
rolb
pop
fiaddl
stos
stos
andl
cmp
sub
jae
push
xor
push
fnsave
fstl
orl
cltd
push
inc
out
test
adc
push
pop
mov
xchg
mov
shlb
out
or
pop
popa
aam
and
xchg
decb
jecxz
xor
jnp
fisubrl
aam
or
push
loop
dec
pop
add
adc
hlt
les
cwtl
clc
pop
fst
cmc
mov
push
xor
js
sbb
sbb
push
mov
mov
arpl
rclb
pusha
out
sub
cs
push
adc
fwait
mov
sub
adcb
lds
mov
les
insb
xor
mov
cmp
ja
movsl
loopne
lods
mov
push
jmp
jmp
and
sbb
cmp
mov
mov
sub
inc
pop
lahf
push
push
sub
push
in
push
ss
jae
out
int3
enter
mov
dec
xchg
or
xchg
jp
leave
sub
call
add
jecxz
into
ss
scas
lods
hlt
rclb
aad
leave
or
pop
push
or
mov
repnz
mov
mov
or
mov
sub
lods
adc
roll
sahf
dec
pop
pop
adc
and
into
cmpsb
cmp
negb
add
sub
adc
fwait
mov
push
mov
data16
loope
sahf
mov
stos
ret
push
cmp
movb
inc
jg
sbb
jmp
in
or
lret
aad
mov
cmpsb
ljmp
pop
bnd
mov
sbb
cld
mov
lahf
aaa
fsub
pop
cld
popa
fdivrl
inc
push
call
push
xchg
and
or
xor
lock
aam
pop
xchg
xchg
add
nop
movsl
pop
mov
movsl
xchg
nop
jnp
dec
jg
pop
sti
push
leave
inc
xchg
push
mov
pop
repz
sbb
ja
jle
and
mov
test
ds
cmpsb
cs
outsb
sub
int
cwtl
mov
sarb
push
mov
mov
push
popf
out
sahf
ror
jae
repz
pop
xor
and
inc
mov
imull
mov
aad
jle
push
mov
nop
cltd
cmp
push
fldt
lods
or
imul
rcll
mov
sub
xchg
mov
push
mov
loope
aam
dec
out
lcall
push
sub
lret
sahf
arpl
sub
and
mov
into
aam
jb
mov
sub
pop
cltd
mov
addr16
add
imul
daa
push
lock
mov
xchg
je
sbb
mov
adc
mov
mov
push
fimull
stc
arpl
jle
mov
or
out
adc
cmpl
loop
cmp
stos
cmc
push
xor
jne
push
arpl
push
lods
cltd
ljmp
mov
jb
sbb
mov
mov
imul
mov
push
mov
dec
pop
pop
pop
cltd
jl
in
and
clc
xor
mov
adc
add
or
lea
nop
mov
fmuls
lock
lret
pop
mov
testl
mov
sub
sbb
push
mov
jmp
push
inc
pop
xor
jbe
cmp
les
and
push
std
out
xchg
rcr
movsb
loope
andb
sub
test
sbb
hlt
jb
sahf
loopne
cs
inc
repnz
jge
mov
jmp
dec
and
popa
or
out
mov
xchg
or
mov
outsl
jno
mov
lahf
ja
pop
fsubl
fisubrs
cmp
cs
xchg
push
imul
pavgw
dec
fs
pop
fimuls
add
stc
jb
adc
movsl
xchg
mov
mov
pop
shll
and
cmp
outsl
cmc
xor
movsb
test
getsec
jp
lods
subl
add
xor
mov
cwtl
mov
insl
inc
sahf
icebp
fadds
mov
adc
push
lahf
frstor
rolb
in
jb
sbb
sub
movsl
scas
mov
jo
daa
lahf
aaa
stos
sub
gs
or
sbb
sub
inc
xchg
push
inc
xchg
es
lods
imul
mov
scas
or
sub
ret
pop
scas
loope
std
imul
sub
ja
xchg
fnstcw
xchg
jnp
cltd
pop
push
mov
decb
imul
enter
js
and
adc
jnp
xchg
inc
dec
inc
cli
xchg
les
outsb
jg
mov
imul
pop
es
jo
push
loop
mov
cli
mov
ss
mov
ret
sub
mov
movsb
xchg
rorb
or
mov
fisubs
push
scas
xor
clc
repz
testl
pop
dec
lds
jmp
pushf
jecxz
or
jnp
cmpsb
sub
mov
pop
shl
xchg
adc
and
jmp
push
inc
je
jb
sbb
lret
shlb
or
jb
mov
adc
rcrl
inc
lea
push
repnz
std
push
gs
cmp
sar
add
lret
daa
scas
xchg
aam
jle
push
jp
xor
mov
or
push
std
jmp
push
lods
mov
rcrb
inc
in
std
bound
lods
iret
loope
or
jp
dec
int
lret
jge
mov
icebp
sti
mulb
mov
add
in
ja
movsl
aas
inc
adc
push
stos
mov
jne
lahf
push
scas
sub
and
xchg
scas
idiv
jno
repnz
adc
push
lods
stc
nop
add
adc
scas
out
xchg
dec
xchg
out
push
popl
dec
mov
inc
pop
sub
clc
in
push
aam
xor
fwait
push
sub
dec
mulb
and
and
ffreep
fldt
mov
sub
mov
inc
xor
ror
push
xchg
adc
adc
enter
and
inc
sub
lahf
cmc
mov
gs
in
arpl
ret
faddl
dec
jle
sub
mov
and
movsb
testb
jae
mov
scas
mov
cs
ja
mov
daa
sub
je
jecxz
test
pop
jbe
jecxz
jmp
rcll
push
mov
or
cli
lcall
stos
ret
and
xchg
inc
jle
call
pushf
dec
lcall
cmc
and
push
cmp
test
inc
xchg
aas
sub
sub
xchg
sbb
jge
aam
pushf
jo
mov
movsb
movsb
cli
add
cs
orl
rep
push
repnz
sub
jle
outsl
and
jne
sub
mov
pop
sub
sbb
rorb
popa
mov
pop
push
es
xchg
test
pop
cmp
enter
sub
in
das
mov
pop
inc
iret
xorb
pop
int
mov
xchg
lret
iret
test
in
sti
shlb
push
cmpsl
lock
mov
int
les
mov
aad
push
aaa
cli
push
inc
dec
arpl
sbb
mov
cli
fistps
sbb
mov
mov
fists
cld
pop
adc
pop
ja
out
mov
dec
add
shrl
stc
sub
push
daa
mov
daa
add
mov
out
scas
mov
mov
je
lea
jmp
nop
jne
out
mov
sbb
mov
or
pop
js
hlt
jp
push
jb
xchg
repz
std
mov
xchg
stos
push
daa
mov
mov
lret
sbb
dec
hlt
mov
out
cmp
fcomps
mov
int3
inc
pushf
add
mov
addr16
and
inc
outsl
clc
mov
sbb
mull
sti
sub
push
adc
mov
add
arpl
or
cmc
dec
push
xchg
mov
dec
add
pop
cmpsl
fwait
dec
cmpsb
push
xchg
xchg
imul
add
das
jnp
mov
std
pop
add
daa
aas
and
sub
into
jno
xor
sbb
ret
ja
push
cmp
xchg
iret
lret
fmuls
in
mov
add
pop
push
aaa
sub
pusha
mov
add
in
adc
out
rcr
xor
hlt
fisubrl
rcll
xchg
imul
outsb
sub
cmp
jge
jnp
jg
inc
shll
mov
or
cmpsl
sarb
mov
fmull
xor
je
mov
add
aas
pop
aam
or
repz
repnz
cmp
jle
pushf
xorl
xchg
in
jns
imul
lahf
rcrl
sbb
lock
jb
jmp
ja
xor
mov
jbe
dec
and
add
and
movsl
push
gs
sub
push
push
push
xchg
mov
fs
push
pop
outsb
push
xor
loop
xchg
mov
mov
mov
dec
mov
lods
sub
push
inc
sub
not
loope
xchg
push
add
mov
ja
ds
jb
sub
mov
or
pop
mov
sar
imul
inc
mov
out
sbb
or
sub
mov
cmp
adc
jb
jle
push
in
jl
xchg
fistpl
arpl
ret
in
ret
dec
rorb
shrl
dec
jo
or
mov
inc
push
loope
push
pushl
inc
in
and
aad
iret
ret
lret
jns
mov
mov
fs
test
jmp
jb
mov
rclb
xchg
jbe
mov
lods
push
xor
pop
cltd
daa
pop
fisubrs
lahf
daa
popf
xor
cmp
jno
cs
outsb
mov
push
cmp
cltd
lcall
fistpll
xchg
xchg
mov
sub
scas
ret
sti
jb
fiaddl
repz
inc
addr16
jl
in
mov
mov
dec
lahf
jne
mov
xor
mov
pusha
clc
mov
scas
mov
nop
inc
and
xchg
and
bound
insb
sub
fs
bnd
ret
pop
xchg
ljmp
adc
push
cs
jae
sub
mov
or
out
inc
out
test
outsb
mov
xchg
inc
les
jle
int
sbb
push
imul
cs
int3
dec
shl
adc
cmpsb
insb
adc
xor
call
out
jno
sbb
sahf
shr
popa
push
cmc
cmp
mov
push
push
sbb
push
in
pusha
lea
mov
push
fildll
sahf
insl
add
dec
mov
cmpsl
test
mov
adc
mov
xor
add
lods
std
jmp
inc
add
cmc
mov
xchg
fisttpl
in
fbstp
jbe
adc
pop
sub
sub
aam
shr
inc
xor
ficomps
loope
mov
jp
inc
xor
outsl
dec
xor
sahf
mov
mov
pop
dec
xor
clc
mov
push
and
dec
hlt
adc
dec
mov
mov
fldt
mov
pop
lods
cltd
fs
xchg
adc
or
jg
pop
cmc
cltd
mov
mov
mov
mov
push
dec
lock
add
adc
mul
push
mov
mov
repnz
cmpsb
icebp
mov
lret
xor
add
fwait
out
subb
fcompl
push
or
cs
scas
aas
in
lret
mov
loopne
jb
jne
push
arpl
mov
mull
mov
lahf
aam
mov
loop
jno
arpl
jle
and
jbe
push
xorb
jns
inc
mov
pop
push
mov
idiv
jmp
mov
imull
adc
mov
fwait
inc
and
rcrl
jl
insl
test
mov
push
ss
sbb
fdivs
xchg
mov
int
movsb
std
sub
shrl
ret
mov
mov
int3
adc
dec
movsl
es
daa
into
das
sbb
xchg
jl
out
imul
mov
sbb
into
cmpsb
mov
stc
enter
add
or
cwtl
inc
cmpsl
dec
mov
lds
std
fimull
xchg
int3
adc
ret
rorl
subl
jmp
int3
imul
push
adc
fdivs
add
sub
in
hlt
inc
adc
push
add
dec
aam
jge
pop
xor
mov
int3
mov
mov
lock
mov
cmp
and
stos
scas
inc
mov
push
pop
adc
stos
cwtl
aas
mulb
push
lods
dec
std
and
int
cmpsl
int3
loope
pop
ss
jae
push
leave
adc
inc
xor
and
pusha
xchg
ss
push
outsb
scas
loop
cld
fcmovne
and
imul
stc
ljmp
movsb
repnz
rcll
sahf
cmp
paddsw
xlat
cmp
pop
cld
xchg
cmp
push
add
or
rclb
cmpsl
imul
std
xor
int
andl
push
movsl
jnp
sbb
and
sub
leave
adc
mov
adc
out
fisubl
fwait
push
aaa
cs
aas
rcll
cld
sbb
gs
add
inc
test
hlt
daa
sub
cs
int3
push
push
leave
lret
ffree
inc
add
orl
lret
jp
inc
les
cmp
jo
ss
shll
sbb
push
addl
xchg
push
cwtl
xor
add
scas
inc
or
in
pop
xchg
jae
mov
jo
push
lea
jbe
daa
adc
in
fstps
sbb
sarl
fldt
bnd
pop
cmp
cmc
xor
loope
in
xchg
xchg
xchg
jmp
pushf
mov
adc
lods
inc
push
mov
enter
fwait
pop
hlt
xchg
push
std
mov
inc
mov
or
mov
adc
les
pop
mov
pusha
in
push
arpl
inc
vmwrite
into
mov
push
xor
push
mov
inc
dec
subl
fiadds
xchg
mov
push
test
sar
push
or
lahf
jbe
gs
add
add
mov
adc
das
pop
enter
pop
xchg
inc
stos
ret
sbb
cmp
orb
pop
mov
mov
sarb
lret
lock
pop
les
add
scas
cmpsl
ror
lcall
fcoml
lret
mov
xchg
jns
fnstcw
dec
out
sarb
cmp
sub
imul
cmp
dec
ja
and
pop
xchg
icebp
mov
inc
and
out
ss
push
xor
and
mov
cmp
and
sahf
and
lcallw
scas
push
xor
rorb
lods
push
fisttpll
aam
mov
mov
xchg
cwtl
stc
cmp
lea
ret
xlat
repz
popf
push
jle
sub
inc
push
sbb
jp
in
dec
or
stc
adc
out
insl
shll
mov
dec
outsb
xchg
inc
rolb
hlt
shl
jns
xor
adc
and
xor
imul
jnp
sub
mov
scas
in
mov
adc
lret
out
ljmp
pop
push
jb
xchg
iret
sbb
push
scas
dec
or
dec
push
adc
mov
int
or
jg
aad
jl
jge
mov
xor
dec
imul
aad
stos
aaa
push
xlat
into
pushf
inc
mov
cmp
cmp
or
faddl
mov
sbbw
mov
arpl
sub
rorb
leave
jl
xchg
imul
or
pushw
outsb
mov
or
out
push
fldenv
les
inc
orb
push
cmc
xorl
loope
or
call
xchg
bnd
pop
xor
mov
adc
jno
lcall
dec
push
call
adc
movsb
xchg
stos
mov
jnp
in
xchg
or
imul
jl
icebp
lcall
clc
lret
fnstcw
lcall
ficoms
mov
das
daa
cmp
out
fsubl
hlt
or
cwtl
in
mov
sar
lahf
pop
subb
inc
lcall
xor
lahf
push
in
popa
sbb
lcall
cmp
imul
gs
adc
movsb
xchg
sbb
lock
fmuls
cld
cmpsl
pop
cmp
in
lods
mov
xchg
jbe
mov
xor
adcb
ljmp
pop
inc
xor
inc
mov
and
sbb
daa
mov
rol
mov
addb
outsl
adc
push
dec
mov
sbb
loope
pop
bound
mov
sub
push
rcll
jbe
inc
xchg
lds
pop
xor
popf
fdivrp
add
fwait
loope
mov
mov
clc
out
mov
xlat
pop
inc
outsl
and
sbb
mov
xor
fsubr
leave
sbb
adc
iret
cltd
out
mov
dec
push
jns
aam
arpl
stos
in
pop
mov
in
sub
mov
aad
repz
sbb
inc
pop
cwtl
test
jbe
enter
fiadds
pushf
aad
aas
lcall
dec
cmp
int
sub
js
cmp
xchg
and
loopne
jns
fcoml
das
aas
xor
les
pop
insl
add
int
push
or
and
mov
dec
push
mov
mov
adc
movb
ds
sbb
mov
push
in
jge
lcall
mov
inc
popf
shrl
cmc
pop
aad
ja
dec
inc
insl
mov
addb
jmp
out
pop
loop
add
cmp
mov
jbe
and
adcl
or
and
imul
jne
iret
cwtl
push
pop
cltd
cmp
ficomps
sbb
push
xor
mov
sbb
mov
decl
imul
out
pop
hlt
filds
mov
testl
aas
jmp
int
std
mov
push
dec
fistl
mov
outsl
inc
pop
mov
mov
cs
fs
xor
xor
fwait
jo
jecxz
push
mov
mov
negb
lret
adc
push
sbb
xchg
loop
cmpsb
inc
jl
clc
mov
mov
cli
add
push
jbe
aaa
divb
push
ret
sbb
lret
mov
fs
add
cltd
mov
mov
sbb
inc
xchg
jecxz
lcall
add
mov
int3
gs
sbb
jno
mov
in
addr16
jnp
stc
cld
push
push
xor
adc
fwait
mov
jbe
rorl
mov
std
movsb
xchg
dec
push
test
or
inc
sub
and
mov
mov
lods
inc
shrl
xchg
push
popf
mov
mov
rcrb
in
mov
pop
aam
dec
sub
scas
pushf
in
cmp
inc
add
outsb
jmp
adcb
mov
test
fisttps
adcl
push
fmul
mov
psubusb
pop
out
xchg
enter
inc
cmpl
xchg
addr16
jb
jbe
jg
fcmovnu
mov
scas
hlt
push
jl
sbb
jnp
mov
addr16
mov
aam
inc
cmpsl
push
pop
mov
jge
loop
jl
leave
mov
cli
cmp
adc
pop
or
adc
mov
repnz
pushf
icebp
es
sahf
shrl
jo
xchg
out
dec
pop
jmp
mov
mov
pop
cmp
iret
mov
cmp
test
loopne
imul
cli
leave
enter
dec
xchg
fdivs
mov
int
sbb
cli
inc
or
jle
cmp
movl
dec
jmp
mov
cmp
pop
pop
dec
cmp
adc
fsubl
daa
iret
mov
scas
push
push
push
popa
in
clc
add
mov
jle
adc
das
or
ljmp
jae
imul
out
sti
jmp
stos
xchg
push
cltd
int
lcall
ss
and
mov
mov
lret
std
outsl
sbb
test
inc
xlat
movl
adc
scas
andb
mov
adc
or
xchg
add
pop
jb
dec
mov
push
pop
and
das
push
das
push
lods
jnp
std
dec
addr16
adc
add
repz
fistps
add
pop
ja
mov
nop
and
sti
fs
enter
push
push
mov
dec
pop
test
dec
das
ret
pop
pushf
icebp
pop
xchg
xchg
fsubs
not
mov
adc
rorl
cmp
enter
sbb
icebp
pop
repnz
mov
xchg
adc
js
mov
lods
mov
jnp
fisubrl
push
pop
xchg
adc
jns
mov
or
decl
cld
add
mov
sahf
rclb
fsts
arpl
int
inc
dec
and
sahf
lods
and
enter
cld
xchg
insl
iret
lods
cmp
add
out
mov
in
dec
scas
adc
cwtl
mov
or
and
xchg
cmp
ret
inc
pop
adc
push
or
pop
movaps
cmp
jecxz
or
cmc
push
jno
clc
sbb
cmp
sub
sub
jmp
xor
inc
sbb
push
jmp
xlat
adc
popa
rclb
rcll
addr16
test
mov
jp
push
imul
mov
and
data16
jmp
sbb
enter
pop
jbe
rorl
push
loop
in
or
inc
or
dec
inc
test
cmpsb
jmp
sbb
shll
bound
mov
ret
fwait
sbb
enter
cmp
mov
add
mov
cld
pushf
xchg
ret
cmpsb
mov
fs
shll
daa
adc
mov
mov
fnstenv
adc
adc
fists
cmp
scas
xchg
cltd
push
mov
jle
popl
adc
or
leave
test
push
adc
inc
cmc
dec
into
pop
cltd
mov
push
jmp
es
fwait
mov
les
xchg
jns
and
gs
mov
push
loope
fwait
adc
insl
movsl
imul
popa
jbe
cld
xchg
loop
and
push
addr16
cli
fcompl
inc
mov
xor
or
jp
xchg
mov
jg
cmp
test
adcl
add
dec
sbb
imul
int
ret
xor
pop
adc
mov
dec
cmp
lds
out
adc
iret
xor
mov
icebp
fs
fbld
xchg
pop
es
jle
adc
xchg
or
xchg
insb
divl
sub
xchg
out
mov
aas
out
push
in
ret
inc
jp
iret
inc
lahf
push
push
outsb
pushf
xchg
test
scas
push
pop
repnz
mov
je
rcl
lds
rcl
popa
filds
popf
and
mov
mov
add
sti
fcomi
out
jg
mov
xchg
dec
dec
xor
jo
notb
mov
stc
fs
out
ror
or
scas
jno
sahf
xchg
rolb
mov
outsb
push
cmp
add
in
xchg
cmp
xor
stos
aad
mov
je
pop
mov
add
push
jecxz
out
and
xchg
jg
cmp
rep
in
cmp
iret
mov
mov
adc
sbb
sahf
adc
cmpsb
cmpsb
inc
sbb
or
mov
in
cmp
mov
mov
cwtl
mov
xor
adc
xchg
sahf
fs
fstl
mov
aad
adc
adc
dec
cmp
cwtl
jecxz
es
jmp
call
es
jno
out
imul
nop
cmp
andb
unpcklps
in
je
scas
call
push
cli
jmp
dec
repz
in
das
scas
shll
and
dec
outsb
or
xchg
mulb
addr16
mov
jge
push
sub
push
sub
cli
aam
icebp
call
jl
pop
lret
xchg
lcall
ret
dec
adc
out
stos
aaa
repz
and
mov
mov
sbb
push
mov
mov
add
dec
mov
xchg
pop
dec
mov
stc
xchg
push
dec
pop
icebp
mov
pop
mov
push
pop
add
sub
mov
mov
and
jmp
dec
pushf
je
adc
ja
adcb
mov
push
aaa
mov
scas
andl
orb
pop
or
fwait
push
mov
lret
jge
xor
add
xchg
sarb
xor
mov
iret
or
cmp
fyl2x
cmp
mov
shrb
ja
insl
xchg
loop
mov
mov
out
sub
mov
in
jns
xor
push
mov
popf
es
push
or
imul
repnz
pop
loope
dec
mov
mov
pop
mov
je
in
out
aaa
adc
push
mov
sub
pop
push
gs
fcmovnb
inc
loope
xchg
mov
cmp
ret
insl
push
orl
mov
and
hlt
sbb
adc
aas
stos
test
data16
xchg
ret
push
inc
subb
in
pop
filds
mov
xchg
outsb
xchg
inc
adc
sti
push
xor
jmp
lret
mov
xchg
mov
insb
mov
cld
scas
xchg
jo
xchg
hlt
xchg
adc
sti
or
sti
decl
xor
push
and
pushf
push
mov
lret
dec
lahf
dec
pop
femms
jge
adc
sbbb
int3
testb
and
pushf
std
loope
ret
fsubr
xchg
loope
push
xor
jns
ja
lods
jmp
cmp
or
insl
push
jb
loopne
pusha
data16
mov
sahf
mov
popa
mov
jl
mov
push
pop
xchg
cmp
roll
or
fsub
mov
pop
xchg
add
sbb
test
jg
adc
jmp
xorl
sbb
mov
hlt
or
ljmp
and
cwtl
push
inc
pop
int3
jle
les
insl
mov
in
daa
lcall
jns
sub
or
pop
bound
add
xchg
sub
loop
pop
sbb
icebp
loopne
dec
ds
and
insl
std
or
mov
mov
add
rcrl
mov
add
cltd
mov
push
sbb
fs
jne
adc
scas
shlb
pop
nop
aam
lret
adc
negb
dec
lret
aaa
cs
push
mov
xor
mov
xchg
clc
xchg
mov
sub
outsb
xlat
jg
xchg
adc
cmp
or
icebp
sbb
jnp
int
adc
lcall
fucompp
test
imul
sarb
and
lcall
cld
cli
stos
imul
std
stos
push
add
and
inc
stos
mov
outsl
or
xchg
pop
std
cs
add
pusha
bnd
loope
add
pop
jg
lods
daa
arpl
dec
and
cmpsb
push
cmp
adc
jb
in
imulb
out
stc
lds
leave
in
pop
out
daa
insb
enter
and
push
cltd
int3
sbb
aas
dec
pop
fldenv
mov
loope
icebp
push
add
dec
mov
mov
gs
out
lret
aas
scas
frstor
sahf
aad
push
sub
or
mov
pop
add
es
dec
test
fs
in
sub
icebp
mov
mov
jg
cmp
push
pop
pop
xchg
fildll
nop
imul
mov
aas
int
sub
cmp
mov
out
daa
adc
mov
fwait
jl
dec
dec
cld
adc
inc
sti
aas
bound
cltd
stc
inc
adc
orb
inc
mov
dec
rorl
mov
out
testl
lea
std
movsl
add
xor
add
mov
mov
in
push
cmpsl
push
or
and
or
fstl
pop
push
int3
loope
mov
push
jno
filds
addb
fst
mov
xorl
and
dec
pushf
addb
inc
cmp
sub
sbb
push
out
mov
imul
xor
std
pop
imul
adc
leave
mov
pop
pop
lock
cltd
sub
sub
pop
and
gs
dec
mov
cld
das
popa
push
fildll
int3
out
push
or
push
mov
das
jle
or
inc
movl
sub
xchg
cli
mov
xchg
ss
pop
inc
mov
sbb
jge
rol
cmp
pop
jg
jno
popf
nop
data16
add
inc
out
jecxz
jns
dec
ja
outsb
aaa
or
pop
xchg
jle
dec
movsl
jnp
mov
inc
mov
test
mov
das
dec
inc
push
or
shll
adc
es
sub
gs
pop
xchg
sub
nop
call
xor
lahf
adc
pop
subb
adcb
sbb
pop
dec
in
int3
pop
fwait
inc
adc
je
xchg
scas
pusha
jnp
adc
mov
xchg
push
pushf
jno
xor
inc
icebp
xchg
rol
hlt
lods
mov
loop
cmp
cmpl
xor
das
sub
icebp
mov
fcomip
aam
cs
in
and
cmp
add
jl
add
sbb
fwait
lahf
mov
int3
jle
hlt
mov
test
inc
ds
lahf
fs
in
cmp
pop
insl
lcall
or
adc
pop
in
cld
cmpsb
xchg
in
sbb
repz
ss
push
mov
inc
cmp
mov
popa
lret
jo
dec
adc
sub
mov
out
jge
xor
mov
inc
cmp
sbb
movsb
movsl
cs
lret
rorb
jnp
repnz
mov
data16
fdivrs
mov
movsb
popa
cs
sub
popw
call
sbbl
test
shrl
add
mov
sbb
and
adc
test
stos
jbe
sahf
pushf
in
test
inc
aad
dec
test
or
loop
aaa
icebp
int3
icebp
out
cld
je
and
leave
stos
mov
rclb
ret
nop
pop
pusha
or
shr
test
mov
xor
scas
es
or
pop
mov
ret
push
mov
and
xor
or
dec
sbb
je
sbb
add
mov
cmp
pop
cwtl
cs
push
mov
dec
mov
mov
or
outsl
test
loopne
xrelease
xlat
mov
push
dec
pushf
jl
pop
xor
pop
add
fisttps
sbbb
stos
jns
mov
xchg
fildll
fistpll
lods
popf
jmp
mov
mov
add
jo
jp
jb
scas
dec
in
lea
or
xchg
repnz
pop
dec
push
in
rorb
test
leave
aas
cmp
jo
and
imul
negl
lock
mov
movsb
xor
int
adc
stos
dec
cvtps2pd
dec
lret
movsb
push
xor
mov
push
mov
in
mov
in
les
hlt
and
xor
popa
jp
mov
mov
pop
inc
push
push
out
loop
jmp
sub
mov
dec
push
push
ret
aaa
clc
test
lock
and
int3
stos
je
push
jae
hlt
sbb
dec
and
cmc
xchg
fwait
mov
jp
adc
jmp
orb
adc
xor
cltd
pushl
adc
insb
xor
add
loop
pop
or
and
addl
pop
sbb
idivb
push
mov
or
in
fistps
in
sar
pop
pop
jle
mov
mov
xor
dec
repz
aaa
adc
inc
mov
enter
cmp
sbb
adc
pop
out
scas
adc
das
rolb
icebp
mov
sbb
lret
pushf
xchg
mov
cli
std
movsl
sbb
pop
xor
sti
sbb
insb
and
lds
test
or
lods
shll
jmp
sub
scas
sbb
btc
sub
test
andb
sub
jp
jns
addr16
jp
sahf
flds
inc
fwait
ret
loope
in
outsl
mov
mov
jno
leave
pop
mov
cs
pushf
inc
sub
xchg
imul
push
shrl
outsl
dec
es
repz
popf
adc
stos
push
mov
popa
adc
rol
fsubs
xchg
sarl
daa
mov
mov
out
idivl
lods
lods
data16
sub
ret
stc
test
cmp
repnz
stc
stos
jbe
ja
mov
mov
xor
repnz
adc
sbb
push
movsb
push
lds
xlat
imul
movsb
mov
push
lods
in
sbb
inc
inc
cmc
jmp
push
pushf
xor
adc
add
jg
imul
les
mov
dec
leave
in
push
add
in
or
jp
sbb
pop
inc
push
jle
sub
mov
xchg
push
xchg
inc
fs
sub
fsts
fimuls
movsb
jbe
mov
cmpsl
int3
sbb
in
test
jg
imul
inc
fmuls
mov
sbb
mov
mov
aas
fnstenv
cld
add
or
xor
mov
and
sbb
pushf
jo
mov
sbb
mov
lret
jl
pop
push
popf
push
lea
je
mov
jmp
cmp
ja
out
jne
pop
std
mov
in
int3
shlb
dec
insl
cmp
mov
jmp
xor
adc
sbb
sub
leave
lea
mov
sub
xchg
sahf
add
lock
inc
mov
fisttpl
stc
ret
sbb
jl
xchg
mov
xor
daa
xchg
in
ds
xor
test
adc
lea
mov
mov
mov
lret
pop
jmp
push
outsb
adc
sub
mov
fld
jae
in
pop
mov
hlt
mov
pop
into
add
pop
andps
dec
pushf
mov
sub
jnp
jns
scas
adc
or
or
pop
inc
sub
rcl
mov
push
or
movsb
shlb
dec
jo
gs
or
sbb
and
pushf
push
and
jb
pop
addb
out
cmpsb
mov
fdivl
adc
xchg
sti
xor
pop
mov
enter
addr16
sub
aas
lret
sbb
sbb
xchg
stc
adc
pushf
jns
scas
cwtl
imul
fisttps
cmp
add
pop
xlat
outsl
mov
or
add
or
iret
stos
pop
or
icebp
sub
std
idivl
lea
pop
jecxz
ja
lahf
mov
pop
and
pop
jge
jae
lods
movsl
or
clc
test
rcll
cmc
sub
and
icebp
xor
and
scas
or
and
popf
outsb
cmp
in
outsl
pop
adc
mov
hlt
bnd
in
pop
mov
xchg
jle
mov
std
add
cmp
xchg
push
mov
jbe
mov
int3
mov
out
andb
xor
add
or
mov
mov
out
mov
dec
cld
dec
cmp
ficoms
loop
mov
xor
sbbb
js
jge
ljmp
shll
inc
in
xorb
xchg
jecxz
in
out
xchg
jo
jo
ret
cmp
ljmp
xchg
cmp
cs
cmp
dec
sbb
test
ja
push
jnp
or
or
xor
int
xor
cltd
mov
jne
adc
aam
sub
or
imul
shlb
pop
cmp
aam
sbb
xor
mov
negb
aad
mov
daa
cmc
or
or
cmpl
and
inc
jnp
push
andl
shl
cmp
jae
out
sub
push
lret
orl
stc
and
test
adc
jmp
xchg
sbb
xor
nop
icebp
insl
jmp
aam
mov
outsl
aaa
sbb
out
mov
cmp
pop
dec
js
push
or
sub
sub
shll
mov
lea
mov
out
ds
sarl
shrl
mov
inc
iret
fwait
in
pop
sub
cld
mov
inc
push
push
loopne
jbe
sub
je
in
pop
push
add
sub
push
idivl
pop
adc
mov
leave
nop
xchg
jl
dec
add
das
stos
mov
sbb
aad
or
dec
dec
or
and
pusha
lock
mov
xchg
adc
pushf
xchg
rorl
movsl
loope
into
pop
int
sbb
dec
xor
or
fldenv
je
xchg
mov
and
or
push
and
mov
pop
call
sbb
mov
push
cmp
push
pushf
lcall
cmp
shrb
pop
les
jp
lret
rcll
xchg
mov
xor
lret
outsb
adc
or
out
es
sub
or
outsb
xchg
inc
addr16
mov
xlat
out
cs
push
adc
ret
jae
insl
in
or
fnstcw
call
push
std
inc
jne
decb
and
fidivrl
or
ljmp
xor
leave
pop
mov
int
loope
cwtl
mov
xlat
pusha
mov
fs
mov
or
into
mov
test
mov
mov
mov
ret
pop
xchg
jg
xor
hlt
std
repnz
call
and
pop
jg
addr16
push
lret
out
fstpl
repz
clc
fdivrs
add
daa
scas
stos
adc
xchg
adc
repz
icebp
mov
and
ret
add
jg
sub
mov
sbb
into
mov
adc
mov
pop
xchg
adc
cmp
dec
test
insl
or
and
mov
icebp
adc
adc
and
out
adc
xchg
mov
filds
lea
lret
push
movsb
cmp
sub
mov
mov
mov
cmpsl
add
push
call
dec
xlat
xlat
jo
and
js
in
push
hlt
push
dec
pop
cld
mov
sub
push
jae
jge
push
cmp
rclb
jmp
idiv
pusha
fsubrs
inc
orb
cmp
dec
loope
movsl
mov
lock
adc
lahf
int
sbb
sub
mov
enter
inc
add
scas
in
loopne
mov
test
or
mov
dec
insb
out
rclb
xchg
xlat
mov
push
xchg
addr16
xlat
push
in
mov
shrl
test
into
push
jl
pop
test
sti
or
xchg
bsr
xchg
push
inc
imull
dec
xor
xchg
mov
bound
cmpsb
inc
cli
aaa
mov
jp
test
jmp
lds
xchg
sub
lcall
push
jne
mov
mov
jno
fistl
mov
in
ret
ljmp
push
dec
adc
jnp
jne
push
xor
cmp
dec
inc
mov
andl
sbb
lods
xchg
jl
jne
lret
mov
mov
pop
fwait
popf
sub
jnp
dec
cltd
lods
test
in
cmpsl
stos
or
pop
and
and
in
xchg
lahf
cmp
in
push
push
and
pop
fnstcw
js
icebp
dec
pop
pop
ja
popa
aam
xchg
jg
jno
out
in
pop
std
pop
out
sahf
not
pushf
popf
xchg
jmp
repnz
mov
dec
xor
adc
rol
xor
or
fcomi
hlt
dec
insl
sahf
out
sub
cmp
mov
dec
outsl
lea
add
rclb
test
imul
inc
dec
push
ret
fldl
push
pop
popf
push
scas
jecxz
scas
or
adc
sbb
jbe
mov
jl
jno
push
add
mov
pop
lods
jg
imul
aam
popa
cmc
testb
mov
sbb
push
mov
outsl
cli
cmp
push
inc
dec
push
pop
rorl
addl
and
faddl
fldl
mov
xchg
pop
sti
loop
dec
mov
aaa
mov
sbb
jmp
mov
fldcw
pop
or
adc
lahf
stos
insl
jg
pop
lods
cs
sub
xchg
arpl
jmp
adc
add
movsb
icebp
test
add
andb
jnp
stc
push
mov
mov
pusha
sbb
xchg
int
out
mov
mov
jo
lds
cmp
into
sub
add
dec
hlt
les
mov
lahf
xor
arpl
dec
stos
fistl
mov
scas
xor
jmp
and
insl
shrb
inc
lcall
inc
pop
repnz
jae
bound
or
dec
aaa
xor
dec
mov
ss
pop
movsl
pop
adc
iret
jge
push
dec
or
mov
xchg
mov
add
push
inc
int3
jns
ret
mov
cmpsl
pop
add
test
xchg
pop
cmp
cltd
fs
sahf
sahf
cltd
xchg
imul
xchg
cld
cmp
cld
fwait
or
mov
mov
mov
lret
mov
jp
push
add
leave
mov
xchg
sbb
pop
out
sbb
flds
push
pop
ss
cld
pop
fwait
mov
inc
mov
faddl
lret
xchg
cmp
mov
pop
push
pushf
inc
cmp
pop
ret
xchg
mov
inc
ja
rcrb
hlt
mov
fwait
and
in
cmpb
mov
mov
mov
insl
int
xchg
icebp
push
cld
inc
jg
fldcw
jl
push
mov
data16
in
insl
xchg
sbb
rorb
or
jmp
cmp
sub
jae
sbbl
xchg
repnz
orl
lahf
fnstenv
mov
data16
movsb
jnp
jmp
insl
push
cmp
inc
pop
push
out
fdivrl
aam
mov
mov
push
fisttps
mov
lods
add
add
sbb
lock
add
nop
ss
jmp
mov
dec
mov
sti
repz
subb
or
xchg
adc
push
pop
in
int3
cld
in
fisubrl
inc
inc
mov
gs
and
ficompl
and
push
inc
mov
lahf
test
fstpl
push
loop
cmp
arpl
sarb
bound
adc
repnz
sbb
fsubl
loopne
add
mov
test
dec
lahf
hlt
cli
and
push
or
cmc
xchg
repnz
dec
outsb
pop
pop
jb
xor
mov
es
pushf
xor
dec
cmc
sbb
mov
sbb
mov
cmp
sub
lock
ja
in
insb
shrl
adc
cmp
sub
das
sbb
cs
adc
push
ret
dec
popf
sbb
lahf
lret
shrl
cmp
sbb
popf
cli
enter
aas
xor
enter
sub
lock
fs
je
lods
mov
xor
outsl
or
add
xor
fidivrs
mov
pushf
xchg
cmpb
jg
and
aad
loopne
push
scas
or
add
xor
pop
mov
xor
xchg
aas
stc
push
cmpsl
mov
nop
mov
push
push
inc
mov
push
dec
xchg
dec
mov
imul
sbb
push
out
push
out
repnz
sub
insb
shrl
adc
in
je
push
mov
movsb
mov
je
fsubrl
aam
je
movsl
clc
rcl
xchg
inc
pop
push
mov
sub
xchg
sub
cltd
inc
movsl
mov
je
mov
and
movsl
repnz
adc
mov
and
shlb
push
rcr
jns
push
in
xchg
and
ljmp
orb
pushf
or
cltd
movaps
and
add
mov
fmuls
mov
inc
lods
int3
xchg
xor
mov
adc
mov
jp
xor
jno
adc
lds
aas
pop
stc
inc
cmp
sarl
mov
or
push
or
mov
mov
sbb
aaa
imul
jno
inc
hlt
fisubl
mov
lea
ss
cmp
loope
mov
or
in
sbb
iret
mov
inc
jmp
adc
sti
scas
mov
lret
xchg
loopne
cli
xchg
ljmp
out
lahf
dec
jge
loopne
cmc
stc
push
xchg
repz
push
add
fidivs
loop
mov
dec
or
cwtl
icebp
xchg
pop
mov
or
in
or
ja
push
push
sbb
cmp
mov
aas
push
mov
outsl
and
test
cmpsb
mov
mov
jb
dec
sub
repz
pop
xor
jmp
push
or
pop
adc
push
daa
nop
cmp
cmc
lahf
mov
jne
fs
lods
push
push
mov
xor
push
or
enter
fwait
lcall
and
std
mov
push
outsl
mov
es
ret
sahf
inc
sbb
outsb
push
mull
fdivrl
jae
jns
xchg
and
lret
sbb
add
in
mov
mov
into
outsl
push
or
fisubs
bound
daa
adc
and
jns
imul
imul
fadd
jp
xchg
cld
and
hlt
xchg
xor
test
test
testb
inc
sbb
arpl
jg
jne
add
popa
jno
inc
cmp
sbb
movsb
inc
pop
es
dec
daa
rcll
sbb
pop
sub
or
mov
pop
lret
push
or
inc
jne
icebp
adc
push
fwait
cmp
pop
dec
movsl
sahf
add
cmpb
sub
xchg
dec
fs
loop
insb
or
mov
sbb
sub
addr16
xchg
dec
and
es
dec
sub
cmpsb
fadds
outsb
cmpsl
roll
dec
push
adc
pop
mov
shll
fstpt
inc
repnz
inc
mov
bound
sub
fists
cmp
xchg
lods
mov
mov
xor
test
popa
pop
xlat
sub
inc
enter
mov
and
jge
in
fnstenv
push
ss
xor
mov
push
test
sub
or
adc
pushl
pop
sbb
ret
xchg
sbb
dec
pop
inc
mov
and
movb
sub
fldt
out
adc
push
pop
sub
pop
dec
pushf
shlb
fwait
outsb
xor
sub
rcll
in
xchg
jbe
xor
divl
call
cmpsl
mov
add
and
fimull
test
loop
jg
gs
scas
jmp
sbb
inc
mov
jns
mov
aaa
lods
jo
pop
hlt
push
shr
imull
xchg
jecxz
pop
clc
pop
inc
lcall
sub
jb
adc
lret
cmp
cltd
mov
adc
sbb
cmp
clc
stos
xor
dec
js
hlt
mov
pushf
push
in
pop
stos
dec
lods
jmp
lahf
insb
sbb
pop
loop
jae
mov
xorb
repz
cmp
xchg
or
sub
add
jge
xlat
out
das
movsl
lods
std
dec
mov
xor
daa
loop
xor
repnz
xchg
js
in
hlt
xchg
pop
iret
xor
leave
mov
mov
add
rcr
push
inc
iret
and
daa
sti
mov
or
test
mov
mov
xchg
sub
rolb
cmpsb
movsl
bound
jl
iret
and
es
pop
jp
or
sbb
pushf
lods
inc
addr16
stos
cwtl
test
fcoml
call
mov
ret
or
orl
pop
es
fistpll
xor
jb
xchg
add
or
add
dec
xor
adc
aaa
jl
adc
aaa
orl
in
mov
cld
inc
mov
push
test
xchg
pop
ror
mov
test
adc
push
fidivl
jmp
out
fstpl
inc
ljmp
insb
jno
repz
iret
inc
xchg
cwtl
cmp
jmp
and
push
adc
pushf
testb
insl
je
enter
cmpl
jecxz
inc
das
and
mov
aam
data16
mov
or
shrb
push
cmp
sti
mov
into
cld
pop
hlt
xchg
arpl
mov
rolb
pandn
inc
fisubl
xor
cli
add
sbb
cs
pop
jge
or
add
or
mov
rol
or
loopne
fisubl
cmp
mov
mov
div
sub
es
mov
hlt
and
pop
shlb
testl
jb
adc
cs
sbb
out
dec
pop
rcll
mov
add
jns
ds
push
adc
and
and
out
lret
sub
vmulss
mov
mov
rclb
call
jne
inc
aaa
inc
xchg
int
lahf
mov
cmp
pop
nop
ljmp
push
xor
mov
lods
aaa
xor
cmp
cli
jno
out
dec
in
movsl
je
dec
bound
add
stos
adc
cmc
int3
jecxz
cli
fidivs
sbb
in
ret
bound
mov
push
sub
into
jns
fs
adc
mov
inc
lock
mov
push
dec
scas
sub
in
cmp
push
lods
push
fwait
push
mov
mov
fbld
lock
cmp
jge
sbb
fsubrs
inc
pop
nop
inc
es
stos
insl
sub
sbb
les
pop
xchg
push
push
pop
sbb
sbbl
js
into
movsb
outsl
lods
push
adc
sti
sub
popf
ss
mov
mov
adc
dec
aam
insl
mov
lods
push
sub
pop
into
sbb
in
aas
adc
movsl
rcll
mov
mov
std
lahf
cmp
cmp
jns
imul
dec
mov
sbb
ljmp
call
ds
sub
xchg
outsl
into
into
xchg
loop
mov
push
mov
lcall
pop
insl
xchg
cmc
std
loop
mov
jns
sub
jge
cmp
push
hlt
dec
sub
lcall
adc
sub
inc
dec
ss
stos
fwait
sbb
incl
sarl
xor
fs
in
jae
pop
cmp
sti
loop
or
lock
out
cmpsl
mov
das
mov
jl
outsb
mov
pop
push
jns
xor
and
addl
jle
icebp
dec
hlt
sbb
lea
inc
mov
pusha
sbb
sub
icebp
cmpb
mov
or
push
sbb
push
push
mov
testb
popa
jge
dec
in
inc
and
jne
loopne
aas
loop
cmp
in
jp
pop
out
push
mov
mov
push
or
add
lock
mov
aad
je
mov
fidivrl
call
push
and
aas
imulb
push
mov
pop
jo
addr16
jns
pop
cmp
push
data16
mov
push
pop
mov
out
add
cmpb
outsl
jbe
sbb
push
test
int
cs
jmp
ja
cmpsl
push
add
enter
push
cmpsb
notb
movl
mov
cli
sub
dec
adc
neg
sub
jecxz
cmp
pushfw
test
cmp
xchg
subb
ds
subl
xchg
mov
mov
std
dec
imul
mul
test
lret
xor
insl
jnp
nop
lods
push
popa
pop
sbb
adc
adc
aas
lahf
dec
cld
mov
cmpsl
in
adcl
jo
mov
dec
ss
adc
sub
test
cmpsb
push
mov
pextrw
xor
idivb
insb
dec
lods
xchg
or
cmp
and
mov
adc
and
or
cmp
lret
mov
scas
cmpsl
push
adc
jae
jns
js
or
inc
loope
lret
pop
and
dec
stos
add
lds
stc
pop
mov
mov
ljmp
jp
fwait
mov
addr16
fxch
enter
push
inc
and
jae
mov
sub
iret
dec
call
bound
lahf
fnstenv
clc
test
in
jae
lods
std
inc
pop
and
popa
out
jae
iret
or
sub
rdtsc
cmpsb
dec
loopne
shll
into
sar
jl
or
push
popf
mov
push
lahf
aas
or
fs
arpl
movsl
cmp
sub
cs
xchg
lea
arpl
fdivrs
sub
add
cld
movsb
stos
jl
add
mov
cltd
popa
dec
dec
out
movsl
pushf
pop
scas
pop
and
cmpsl
scas
dec
test
and
js
sub
xchg
sbb
jg
dec
pop
imul
xor
mov
stos
fcomi
jl
std
sbb
pushf
imul
jns
mov
std
mov
lods
xchg
loopne
cmpsb
sti
mov
pop
mov
lds
push
jns
jb
lea
sub
pop
cwtl
cmpl
ljmp
sbb
out
mov
lret
pop
popf
icebp
hlt
lret
das
cmp
jg
add
pop
xchg
push
jo
and
cli
loop
adc
xor
cmp
sub
inc
pop
dec
in
out
xchg
fists
push
lods
cmp
lcall
shlb
cpuid
lock
cmp
sbb
dec
inc
mov
mov
std
jns
jecxz
decb
sub
add
repz
sahf
mov
jo
test
es
xchg
out
xchg
push
sbb
fildll
adc
scas
or
sub
adc
lret
sbb
cmp
inc
loopne
mov
mov
dec
jp
jns
or
data16
pop
cmp
in
xor
aas
sub
jp
cs
adc
les
stos
fwait
dec
sub
outsb
fsts
aaa
push
dec
dec
outsl
jge
loopne
adc
int
xchg
and
cwtl
ds
adc
sbb
cs
fs
lret
pop
shrl
or
pop
test
xchg
int3
add
xchg
shlb
lock
push
sub
push
lret
frstor
test
jns
jb
xor
ret
das
sub
sti
popl
pop
test
lock
dec
add
clc
jecxz
mov
push
mov
std
xchg
fisubs
imul
add
jle
fnstenv
lret
push
mov
movsb
add
adc
fwait
adc
out
sbb
sub
cmpsb
fwait
jp
cmpsl
mov
int
add
imul
cmp
shr
xorb
inc
push
jae
xor
xchg
add
mov
orb
mov
push
xor
pushf
xchg
push
xor
movsb
cld
sahf
testl
cwtl
jo
addl
outsb
push
and
dec
add
xor
cmc
xchg
faddl
aas
lea
into
or
mov
cmp
addr16
int
ret
scas
jbe
xlat
fildl
ret
cltd
or
jge
xor
cmp
ret
ss
sti
roll
orl
lods
xor
loopne
in
mov
popf
dec
push
ret
gs
arpl
inc
inc
icebp
mov
mov
nop
neg
lret
in
mov
push
enter
sub
cltd
call
data16
jbe
ss
xchg
jne
inc
mov
popa
mov
imul
jmp
inc
jmp
sbb
jne
rorl
clc
fst
idiv
pop
popf
cmpsb
xchg
jl
data16
inc
push
jmp
inc
mov
lods
adc
xchg
sti
in
call
aaa
jae
xchg
cs
imul
shll
fcomps
movsl
in
hlt
mov
leave
xchg
fwait
add
xor
xor
jecxz
insl
ss
jge
test
jne
fs
lcall
xor
test
or
std
mov
movsb
and
arpl
dec
leave
in
ds
sahf
mov
inc
xor
add
or
jno
jle
out
jno
mov
inc
jle
push
out
cmp
out
mov
jl
add
pushf
dec
cmp
loopne
lock
pop
rcrb
rclb
or
and
jno
sub
stos
shll
lods
xor
movsb
cld
data16
mov
adc
leave
movsb
xchg
xlat
clc
pop
sub
xor
pushf
sub
cld
mov
xlat
cld
sub
mov
out
push
mov
mov
data16
mov
fadds
dec
dec
sub
jecxz
xor
push
or
or
add
inc
call
pop
xchg
dec
lret
mov
scas
xchg
out
call
imul
enter
out
cmp
js
sbb
xlat
inc
cmc
fwait
push
inc
mov
out
loop
rcl
cs
and
jno
jbe
and
in
lahf
notl
into
adc
js
inc
sub
and
xor
fld
adcb
arpl
int3
add
int
jnp
test
test
mov
repnz
or
jo
sbb
cmp
jl
iret
imul
shrb
mov
mov
mov
sbb
cmpsl
sbb
dec
sarb
inc
into
xor
mov
cmpsl
mov
and
sbbb
sbb
xor
gs
adc
adc
ret
cmp
push
loope
les
lcall
lea
mov
dec
in
add
mulb
lcall
leave
fldpi
rorl
xlat
cltd
roll
ja
jae
mov
mov
mov
mov
sub
adc
sub
mov
jb
sub
push
push
fnsave
cmpsl
pop
outsb
call
cmp
push
push
mov
iret
cmp
ret
pop
jp
mov
pop
test
inc
js
dec
mov
sbb
sub
add
or
ret
lret
or
mov
inc
adc
add
mov
mov
jg
pusha
push
push
fldl
je
loopne
and
movl
fcmovu
arpl
mov
insb
pop
stos
out
or
inc
sbb
dec
or
or
xchg
fisttps
add
add
mov
push
add
dec
cmpl
test
mov
add
es
inc
loopne
ret
lret
imul
adc
std
icebp
sbb
dec
mov
aam
aam
pop
mov
fwait
sbb
loop
and
aas
mov
mov
xor
pop
pcmpeqb
sub
divl
loope
dec
jp
dec
cmp
enter
out
inc
int3
daa
mov
pusha
les
inc
insb
and
mov
xchg
das
in
cltd
clc
sbb
lret
mov
out
aaa
icebp
and
mov
inc
sub
or
dec
inc
rclb
fimull
add
jo
lcall
clc
iret
or
sahf
jns
lahf
movsl
aaa
sbb
js
int3
adc
lds
xchg
out
and
pop
shll
push
sarb
push
scas
out
aad
fldcw
filds
into
xchg
scas
aad
loope
cmp
rcll
mov
mov
outsl
mov
add
xor
mov
stos
loopne
push
ljmp
stos
sbb
mov
dec
xchg
push
jo
rorl
ss
sbb
cmp
int3
mov
and
lds
les
add
arpl
dec
aad
sti
in
je
pop
sahf
mov
and
cmp
daa
mov
mov
imul
imul
cmp
sub
ja
mov
sub
lahf
pusha
out
into
das
add
and
mov
cmp
outsl
push
inc
jne
rol
xchg
sub
mov
jnp
sbb
dec
in
push
pop
mov
adc
scas
mov
push
jg
mov
mov
inc
shlb
lcall
jns
cli
outsb
cmpb
xchg
int3
jmp
jl
loope
adc
or
fstpt
fstpt
cmc
sbb
and
loop
push
xor
dec
rorb
pop
bound
stos
dec
fisubrs
push
cmp
or
inc
pop
inc
cmp
mov
pop
push
popa
rcrl
sbb
mov
jbe
push
rcrl
or
push
jmp
mov
pop
into
pop
jnp
and
fists
pop
bound
and
mov
sarl
push
push
inc
dec
jge
ficompl
dec
cli
sarl
lahf
mov
inc
xor
cltd
mov
push
addr16
subb
enter
lcall
repnz
fnstcw
sub
or
dec
dec
insb
push
lret
xchg
mov
in
dec
jmp
adc
ljmp
test
and
addl
das
mov
xchg
add
enter
add
dec
cmp
aam
jno
loop
sbb
dec
jp
xlat
es
rcl
mov
fsts
stos
cmp
jp
add
out
pushf
pusha
dec
lock
out
push
adc
and
sub
out
rorl
and
fldcw
popf
xor
fcoml
jae
adc
push
sub
std
sub
sbb
add
fwait
push
aad
sarl
lds
lcall
add
or
or
mov
mov
jl
xchg
fcmovnu
jp
jno
ret
or
jecxz
roll
addr16
fistpll
add
in
addb
mov
mov
xor
arpl
dec
repz
mov
arpl
lret
bound
rclb
mul
nop
loopne
int3
pop
inc
inc
jbe
out
into
xchg
int
rcr
ja
inc
outsl
cmc
pop
sahf
daa
dec
icebp
ja
cmp
int
pop
push
and
pop
dec
sbb
scas
push
lret
and
jb
loopne
mov
cmp
popf
mov
sbb
stos
jg
xor
push
icebp
movb
adc
in
lock
xor
test
lea
sbb
clc
jmp
rcl
xlat
mov
xchg
xchg
ljmp
cmpl
mov
cmpl
add
adc
out
loop
dec
sub
mov
cmp
mov
or
dec
call
jg
lds
cli
add
out
punpckhdq
dec
cltd
push
pop
vcmpsd
flds
mov
data16
push
test
ror
push
pop
mov
sahf
xchg
cmp
mov
pushf
pop
in
sub
enter
xchg
jb
cltd
ror
lds
pushf
cmp
stc
xor
int3
and
xchg
or
rcll
in
test
les
dec
mov
or
and
jp
or
fistl
cmp
sti
mov
xchg
pop
mov
cli
cmp
js
mov
fsubrp
call
inc
pop
cmc
jns
sub
mov
mov
mov
xchg
insb
mov
lds
jo
inc
es
gs
cmpl
sbb
adc
mov
or
fwait
push
jo
add
stos
stos
loop
inc
jbe
cld
adc
push
stos
and
fdiv
into
insb
pop
adc
shl
js
icebp
pop
call
fiaddl
mov
mov
jo
test
ret
sub
and
xchg
cld
xlat
pop
dec
mov
push
adc
jnp
jne
add
push
lahf
sbb
hlt
cmpsl
or
out
daa
jbe
out
aaa
pop
sti
cmp
idiv
pop
mov
stc
js
add
adc
jmp
enter
bound
iret
in
or
aam
push
sti
mov
stos
jne
xor
adc
scas
pushf
ds
rolb
lahf
and
dec
in
sub
aas
insl
fwait
and
inc
pop
xlat
push
xor
mov
pushf
insb
cmp
stos
dec
xor
mov
into
int3
push
pop
ret
pop
clc
scas
mov
out
and
outsl
roll
jns
pop
outsb
jg
lret
mov
call
fistl
adc
cmpsl
jmp
stos
nop
dec
ret
popa
add
pushf
icebp
or
adc
mov
push
xchg
xlat
push
rolb
add
sahf
out
xchg
mov
hlt
mov
jns
xchg
adc
xchg
fnclex
or
lds
adc
push
xchg
or
mov
das
cmp
into
pop
fiadds
push
sub
sti
out
sub
jo
jne
pop
test
xchg
push
rorb
in
xchg
stos
jns
jno
sub
cmp
sahf
fsts
adc
pop
pop
fcompl
fldcw
xchg
mov
repnz
test
mov
in
sbb
mov
push
jmp
fcoml
loop
out
inc
ret
cmp
js
cmpsb
pushf
ficompl
es
dec
clc
mov
xchg
inc
out
inc
mov
mov
fst
dec
sbb
in
and
dec
mov
mov
mov
and
sub
aaa
jge
stc
insl
dec
into
lret
sahf
ret
aad
jo
mov
pop
mov
jmp
shrb
mov
push
inc
xchg
and
es
stos
mov
add
mov
test
jno
lea
popf
fsubr
adc
dec
jge
mov
adcl
jbe
pusha
jns
mov
shrb
mov
int
test
pop
jae
stos
pop
or
std
push
jl
out
in
out
shrl
test
jnp
cmc
out
pop
dec
mov
or
das
jl
sete
movsb
aaa
and
je
add
pop
fdivr
and
xlat
stos
stos
dec
sbbb
test
jg
inc
inc
xor
std
sbb
push
movb
dec
rcll
jb
popa
rorb
sbb
mov
sub
inc
leave
add
mov
and
popf
test
orb
aam
test
push
cmp
dec
stos
inc
mov
loope
cwtl
cli
and
aas
pop
inc
xor
mov
mov
mov
dec
cmp
fnstsw
and
and
add
push
out
sub
push
scas
sub
fdiv
mov
cmp
lcall
mov
leave
sbb
push
insl
jmp
jo
pop
mov
sub
sub
es
dec
out
test
aaa
xor
imul
test
push
and
lods
xchg
lea
lock
inc
push
sbb
popl
es
cmp
arpl
in
add
sbb
imul
jp
or
fs
call
imul
mov
pop
cmp
faddl
cmp
dec
lock
sarl
mov
enter
call
imul
test
sub
cmp
push
push
repz
enter
mov
mov
std
cltd
jp
ja
xchg
movl
add
xor
mov
popf
mulb
mov
scas
aas
sbbl
pop
lds
mov
mov
push
loope
mov
cmpsl
test
test
sbb
adc
or
movsb
jbe
int
cmc
sar
mov
test
int3
push
mov
cmc
call
mov
mov
mov
cmpsb
loopne
movsl
fadd
data16
jns
jne
lock
in
fldenv
cwtl
scas
push
out
jb
mov
repnz
pop
xlat
xor
sbb
mov
pop
push
fwait
mov
mov
push
sahf
mov
lds
mov
arpl
fwait
int3
insl
add
fstpt
daa
mov
dec
mov
in
push
sbb
repnz
or
pop
outsb
movsl
aas
shll
jmp
xchg
out
xor
ret
xchg
mov
stc
insb
test
fiaddl
pop
mov
daa
popf
jbe
arpl
xor
jmp
rcrb
mov
sbb
mov
leave
jle
xchg
leave
cmp
or
dec
mov
adc
jle
adc
arpl
mov
mov
cmp
jmp
add
cmp
sub
roll
rcrl
in
push
mov
aas
ret
push
xchg
mov
add
mov
mov
enter
mov
sbb
pop
mov
lock
adc
mov
dec
push
ljmp
xchg
in
mov
imul
dec
sti
call
or
je
ss
mov
sahf
cltd
xchg
shrl
sub
inc
lret
test
scas
call
xchg
mov
or
imul
flds
push
mov
into
mov
or
cmpsb
aas
cmpsl
jmp
test
mov
cwtl
push
jbe
and
data16
call
int3
xlat
push
jecxz
add
dec
cs
lahf
push
jb
cmp
aas
fdivs
cwtl
adc
into
enter
jge
int
popf
cli
push
cmp
push
mov
sub
push
in
or
ljmp
mov
jmp
fwait
addr16
jo
inc
rclb
mov
pop
or
xchg
sbb
lret
add
sub
jl
mov
pop
imul
pushf
mov
outsl
mov
insb
inc
neg
mov
cltd
shrb
push
scas
mov
rolb
cmpsb
adc
js
cmp
push
jl
pusha
sbb
test
dec
and
add
iretw
outsl
fildl
push
jl
pop
rorl
ret
mov
fimuls
in
mov
mov
clc
popa
fsubs
or
lods
mov
test
adc
adc
push
call
mov
test
push
or
or
xlat
pop
dec
pop
cltd
icebp
dec
mul
icebp
fidivrs
dec
xchg
mov
mov
lret
xchg
and
inc
in
out
out
gs
or
rcrb
mov
jb
push
mov
ja
cwtl
or
mov
inc
xor
sub
inc
and
cltd
mov
repz
jne
xor
lds
dec
and
sti
or
xor
ja
int
cltd
ret
inc
lock
mov
dec
pop
imul
mov
scas
push
aam
rcrl
mov
mov
fcom
cwtl
xchg
iret
xor
notb
clc
fists
imul
jb
pop
bound
in
pop
fcmovnu
xchg
or
arpl
movsl
sarb
mov
push
xor
cmp
pop
aam
mov
aas
fwait
sbb
out
mov
shl
fcom
adc
jl
pop
leave
fs
notl
xor
push
lods
mov
enter
and
dec
mov
sbb
scas
mov
jne
sub
lods
sbb
jno
decl
adc
sub
int3
xchg
mov
jno
push
mov
shll
push
imul
sbb
jle
mov
lcall
or
xchg
dec
cmpsb
outsb
aas
and
lret
imull
sbb
cmp
xlat
fnsave
pushf
test
push
pop
jno
cmp
xchg
pop
mov
pop
loop
jnp
push
adc
sub
push
push
or
add
or
lods
or
and
scas
cltd
bnd
sbb
inc
repnz
pop
jae
sub
leave
and
mov
fildll
inc
and
stos
xchg
jg
dec
fs
data16
incb
add
sarl
imul
xchg
cld
test
mov
out
jmp
icebp
test
pop
flds
into
add
arpl
rcl
jne
cli
in
sbb
out
sbb
shll
push
adc
emms
stc
pop
xchg
cmp
adc
jnp
or
into
or
sub
dec
xor
pop
inc
das
mov
cld
scas
sbb
jbe
jno
addr16
dec
fiaddl
stos
cmp
sbb
dec
mov
mov
cmp
sbb
mov
pop
lods
or
aaa
xlat
mov
insl
stos
data16
sbb
lods
push
jl
mov
jae
iret
je
in
aam
adc
mov
push
sarb
mov
add
neg
dec
jecxz
outsl
xchg
fcoml
mov
add
pop
scas
test
push
adc
outsb
lock
inc
das
sub
outsb
gs
xchg
outsl
xchg
jae
sub
pusha
ja
push
lds
out
outsl
mov
pop
loopne
ret
hlt
nop
sbb
addb
fnstcw
cs
scas
pop
adc
xchg
jae
sub
or
pop
mov
and
dec
jg
jnp
aad
in
mov
int3
xor
lods
sub
mov
out
inc
sub
in
les
mov
jp
adc
outsl
dec
mov
pop
aad
cmpsl
sbb
adc
popa
xor
mov
mov
jecxz
data16
inc
pushf
adc
mov
mov
out
add
push
xchg
inc
dec
xor
jns
int3
cld
jle
and
or
cld
sahf
push
mov
mov
bound
es
adc
in
subl
mov
lcall
insl
sbb
mov
mov
or
sbb
lock
jbe
xchg
arpl
cmp
enter
imul
daa
xor
push
xchg
pushf
inc
sbb
subl
scas
inc
aam
pop
lahf
lret
movsb
data16
adc
faddl
mov
push
jle
pop
pop
fadd
sub
mov
inc
scas
les
pusha
les
imul
mov
dec
test
in
xchg
pop
and
sahf
xor
jmp
lret
fucomi
dec
gs
pop
push
pop
lds
mov
loope
add
insl
lcall
xchg
cmp
dec
leave
ds
rcl
fisubl
dec
sub
idivb
lods
and
jae
lret
adc
and
daa
iret
ret
aam
pop
out
xor
mov
mov
ds
ret
cmc
in
push
and
shl
cs
add
inc
inc
cmc
ror
js
or
adc
js
mov
rolb
pop
pop
inc
add
jo
jbe
gs
or
cmp
and
lret
add
ror
leave
and
lds
or
xchg
xor
movsl
pusha
sbb
push
cmp
jle
push
mov
dec
cltd
cmp
filds
mov
sbb
sbb
lock
gs
int
push
imul
sub
inc
mov
dec
mov
push
nop
jno
jo
inc
in
xchg
cmp
mov
jae
imul
push
cmp
sub
mov
aas
es
lods
lods
mov
fisubs
push
mov
nop
mov
jns
dec
xor
fwait
xor
add
dec
xchg
add
jl
jbe
mov
andps
jle
ret
inc
in
mov
aas
cmc
adc
push
jl
jo
mov
enter
sub
cmpsl
xchg
addr16
outsl
dec
pop
stc
popf
mov
xchg
rorb
loopne
sbb
test
insb
inc
cmp
in
pop
inc
out
xor
or
push
cmpsl
xor
or
jmp
and
adc
int3
cmpsl
jno
add
les
sbb
ficoml
bound
push
push
cli
mov
xlat
cmpsb
ret
mov
lock
std
mov
adc
fcmovbe
add
mov
stc
xchg
ret
dec
or
cmp
cli
mov
xor
test
std
lcall
inc
dec
out
sarl
xor
cmp
ret
mov
std
imul
mov
mov
xor
push
mov
xchg
int
and
xor
lea
fwait
outsb
ror
ljmp
or
adc
and
and
sub
in
das
and
loopne
sahf
nop
movsb
xor
cli
push
rcrl
mov
ss
fimuls
dec
cmp
or
roll
leave
mov
out
mov
enter
loop
mov
dec
in
dec
imul
rcl
inc
push
aaa
dec
cmp
in
mov
arpl
sti
xchg
repz
or
fs
dec
sub
dec
adc
in
addr16
and
popf
push
jmp
fdivr
notb
jbe
lret
add
mov
push
sbb
fs
jb
xor
call
fistl
add
mov
scas
mov
mov
inc
adc
add
sahf
mov
ret
lock
lods
sahf
xor
and
xchg
out
cmc
push
and
xchg
cli
push
aaa
lods
and
das
xor
lods
sbb
jmp
or
scas
lods
and
push
ljmp
cld
data16
scas
ret
mov
adc
ficoms
std
or
iret
fsubrs
rclb
xor
mov
cmpsb
add
sub
xchg
cld
push
sbb
cs
or
aad
xor
inc
mov
into
xor
add
outsb
aad
push
push
jl
mov
pop
inc
aaa
pop
mov
sbb
mov
cli
js
xor
sub
sbb
cld
fwait
ret
lea
das
lds
mov
adc
mov
and
sbb
js
cmpsl
test
and
or
mov
sbb
leave
and
jl,pt
xor
sub
sub
jecxz
popf
jle
stc
mov
jns
add
and
jbe
xchg
fcompl
lods
cli
push
in
inc
push
push
pop
sbb
inc
or
dec
jno
adcb
or
jmp
cmpb
bound
arpl
jne
cmc
cmpsb
dec
cwtl
int
or
adc
pop
mov
fwait
xlat
cltd
pop
pusha
repnz
into
fildll
imul
lret
xchg
add
and
or
aaa
insl
pop
nop
stc
mov
stos
sbb
aad
movsb
cli
lahf
push
fisttpl
push
and
cld
mov
loope
popf
pushf
dec
sub
and
mov
ret
adc
popa
sti
bound
daa
inc
cld
xor
xor
push
movsl
arpl
test
mov
jle
inc
xor
enter
insl
mov
cmc
inc
rcrb
ret
mov
data16
xor
pop
mov
mov
pop
push
movsb
jbe
xor
mov
mov
in
jl
add
test
dec
jno
ja
scas
push
cmp
jno
lret
jbe
ror
add
popa
xlat
mov
daa
int3
cld
or
xor
or
negb
je
or
add
dec
adc
jb
or
mov
leave
aad
add
xor
pop
add
or
sbb
xchg
jne
loop
mov
sti
repnz
and
push
cmp
pop
into
test
sub
mov
sub
inc
negb
pop
xor
add
aam
cld
sbb
ss
inc
pop
xor
dec
arpl
jnp
nop
fdivr
pop
stc
mov
xlat
push
inc
sbb
cmp
jle
aam
pop
fisttps
inc
div
push
or
adc
push
lods
dec
cld
mov
loopne
cmpsb
dec
inc
sub
sub
jl
cwtl
pop
cli
out
cs
push
pop
sbb
incl
sub
push
mov
out
xor
sub
sahf
das
daa
xor
sub
or
and
or
push
push
repnz
movb
ljmp
fwait
shrl
das
popa
divl
outsl
jne
lea
sub
aad
push
dec
fs
push
adc
jmp
pop
jns
fmuls
push
sub
insb
xchg
xchg
jnp
push
cs
out
jmp
mov
test
enter
movsl
pop
cmp
inc
loope
dec
loop
subb
sbb
jg
and
int
sub
fstpt
insl
xchg
xchg
push
pop
push
mov
xor
into
imul
mov
or
in
outsl
popa
aam
fildl
scas
iret
xchg
popf
or
sub
jno
or
sbbb
adc
sub
xchg
in
xchg
sub
cltd
push
push
push
cs
icebp
mov
in
inc
int3
outsl
dec
cld
mov
out
add
dec
jmp
std
adc
test
dec
fsubp
mov
or
or
push
cld
fwait
push
lea
insb
xor
cltd
lahf
lret
imul
and
mov
repnz
xlat
pop
push
push
sub
cs
int3
ret
scas
fstp
lcall
jecxz
shll
mov
sbb
test
in
xchg
inc
inc
in
xor
mov
push
jmp
and
sbb
push
push
mov
ret
lds
jb
or
xchg
test
cmpsb
fs
add
dec
push
ds
ret
test
std
mov
insb
mov
add
test
and
inc
rcr
fs
cltd
mov
movsl
add
aas
fdivs
mov
add
ja
out
push
sbb
adc
mov
and
jno
repz
add
jle
and
out
adc
cltd
pop
dec
push
push
add
inc
sub
movsl
mov
into
xor
xchg
xorl
andb
or
xor
stos
daa
arpl
lret
ds
add
outsb
sbb
daa
es
lea
cwtl
and
mov
xchg
aad
jb
in
pop
mov
xorb
popw
mov
insb
mov
sbb
pop
mov
inc
xorb
mov
xchg
jno
pop
lcall
stos
adc
mov
cwtl
adc
add
popa
adc
xlat
or
sbb
jne
push
jecxz
mov
dec
or
jbe
ficoms
push
xchg
or
xor
stos
add
jecxz
push
pop
bound
hlt
gs
push
lods
jge
lcall
out
test
mov
lahf
sub
insb
push
popa
pop
clc
cld
add
pop
inc
jo
inc
sti
int
xchg
sbb
adc
lea
jle
inc
xchg
mov
sbb
xchg
jp
fwait
ds
jle
aaa
inc
test
int
rep
fldl
fldt
mov
jo
add
out
out
lods
sub
mov
pop
xor
xor
fbstp
leave
aam
pop
pop
or
test
mov
jl
and
mov
cmp
lcall
jmp
cmp
flds
daa
pop
cmpsb
mov
ljmp
ds
mov
cmp
cmp
inc
imul
mov
xlat
mov
mov
inc
adc
jge
int
sahf
push
xorl
mov
adc
dec
sbb
adc
insl
lods
adc
mov
mov
adc
mov
int3
clc
pop
mov
inc
jle
test
out
push
cmp
enter
pop
inc
xchg
cmp
jns
cmp
and
repz
into
xchg
cmc
cwtl
bound
pop
icebp
insl
pop
adc
push
sarl
stos
lret
sub
leave
jae
xchg
iret
in
pushf
loopne
mov
pop
adc
into
sub
in
nop
call
pop
add
stos
sub
xor
outsl
jns
iret
popa
std
mov
addl
jae
sub
mov
jp
out
mov
inc
addr16
or
or
inc
cmp
inc
pop
xchg
cli
fwait
sbb
test
push
test
jno
push
inc
sbb
mov
push
xorb
jge
psraw
xor
xor
popa
lock
aad
loop
mov
adc
imull
ret
xor
scas
subl
inc
pop
insl
imul
sbb
lods
into
popf
pop
ss
xor
inc
repnz
mov
xor
test
mov
jae
aam
fisubs
mov
pop
das
ja
icebp
mov
adc
int3
push
cmovge
dec
jg
insl
xchg
xor
or
loopne
rclb
aaa
or
push
add
outsl
icebp
call
iret
cmp
mov
pop
add
js
jle
xchg
cmpsb
jne
ja
sbb
adc
enter
jle
gs
pop
mov
lock
iret
xlat
mov
ret
sarb
cmp
push
leave
out
outsb
aam
sub
add
jmp
lret
mov
cmpsb
cld
cli
or
sti
sub
dec
push
cmp
test
nop
testb
adc
jno
imul
in
mov
cmp
icebp
pop
sub
cmpb
push
cmp
jecxz
jge
mov
cmp
notb
sub
ja
push
movsl
cmpsl
ljmp
or
mov
enter
xor
or
ror
sbb
pop
outsl
std
sahf
in
push
inc
pushf
cmpsb
cmp
jl
cmp
jne
roll
sbbb
clc
adc
push
fucomip
jb
sub
mov
hlt
rclb
add
xchg
aas
gs
loope
int3
dec
mov
sbb
rcrl
test
jle
cmp
loopne
mov
cwtl
push
movsl
adc
mov
cmpsl
rcr
inc
mov
int3
add
mov
fcmovne
mov
dec
lret
repnz
icebp
shll
add
push
sbb
cmp
nop
cmpsb
ja
mov
add
xchg
mov
sbbb
jl
nop
adc
aad
xor
xlat
int
icebp
int3
shrl
ret
mov
lds
cmc
dec
jno
mov
cmc
sub
sub
fcmovnb
inc
cmp
pop
lahf
jno
ret
sub
sub
inc
mov
cld
int3
ret
pop
scas
and
mov
sub
dec
sarb
mov
daa
pop
or
or
jo
lods
cld
sbb
stos
add
iret
sbb
lock
pop
gs
inc
aas
scas
stos
insb
mov
pop
mov
dec
notb
sbb
mov
mov
stc
and
add
sbb
int
je
pushf
dec
cmp
popf
or
pop
cmp
xchg
inc
mov
adc
push
inc
pop
push
mov
mov
jb
je
inc
lods
jnp
nop
js
imul
fdivs
or
adcb
movsl
test
adc
ret
mov
repnz
sub
leave
sbb
imul
je
jbe
jmp
out
hlt
pop
jns
les
mov
fdivl
les
insb
pop
popa
sbb
xchg
stos
cmp
pusha
nop
loop
xor
fistpl
jecxz
sbb
iret
loope
sbb
or
enter
jle
ljmp
add
sub
sub
repnz
or
aas
sahf
pop
xor
mov
fisubrs
dec
scas
mov
pop
mov
mov
sub
mov
cmp
dec
mov
sub
shlb
fistps
cmpsl
mov
jg
loope
inc
mov
inc
pop
movsl
iret
lock
mov
out
pop
push
stos
jne
mov
xchg
cmc
mov
mov
add
sub
add
bound
jle
cmpsw
dec
sub
pushf
mov
mov
add
ds
test
jbe
cmp
test
add
cmpsl
fiadds
pusha
xor
test
ret
js
stc
rol
adc
adc
pop
jns
or
sbb
or
xor
push
or
sbb
inc
adc
push
push
push
cmpsl
test
push
fcmovu
fs
push
mov
push
cmp
lods
decb
jo
jno
inc
pop
push
in
inc
out
popf
cmp
in
test
mov
adc
outsb
push
movsb
lock
lret
xor
clc
push
rorb
das
pop
int3
mov
out
xchg
cmpsb
mov
outsl
sub
je
aas
add
outsb
ds
jnp
and
mov
jmp
outsl
and
sub
lods
das
adc
mov
xacquire
cmp
nop
xor
hlt
lret
mov
decb
pop
adcl
pop
in
das
cli
int
insb
lea
adc
repnz
andb
cmc
mov
jb
aaa
das
cmp
in
ss
xor
cmp
sbb
out
stos
enter
shl
fwait
fs
stc
imul
loop
lret
scas
inc
lret
sbb
sub
mov
jno
add
loop
daa
aaa
pop
iret
or
fdivrl
jne
cmp
mov
insb
movsl
push
sbb
cmp
pushf
mov
xchg
subb
add
push
loopne
loop
sub
jg
insl
ljmp
cmp
vpaddb
shl
outsb
xor
mov
repz
fnstsw
orl
jp
divb
mov
pop
inc
filds
fwait
xor
adc
lods
outsl
sub
xor
inc
xchg
mov
testb
mov
push
les
lods
add
mov
iret
cmc
xchg
dec
lds
xchg
test
push
clc
jmp
inc
or
js
insl
repnz
stos
test
mov
in
inc
data16
mov
lods
pop
mov
and
int
stos
call
cld
xor
fstpl
add
ds
dec
mov
jecxz
sub
leave
cs
inc
push
push
imul
idivl
imul
xchg
pop
pop
int
popa
in
mov
imul
insb
push
fisubl
inc
and
mov
jecxz
fwait
adc
in
popf
subl
xor
cld
sub
mov
mov
mov
mov
ja
js
popa
loope
cs
push
mov
inc
jmp
iret
in
push
popa
outsl
in
or
imul
je
outsl
adc
mov
fldcw
movsl
pop
sbb
mov
fidivs
movsb
lahf
dec
pop
xchg
stos
loopne
inc
sbb
js
iret
mov
or
fwait
jns
call
push
mov
daa
adc
and
push
pop
inc
mov
or
dec
imul
push
push
and
mov
mov
stos
lods
lret
xchg
iret
xchg
add
mov
mov
sub
xchg
adcb
xchg
mov
stos
sbb
addr16
icebp
int
dec
stos
pop
js
pop
fcoml
mov
xchg
jecxz
fbld
les
jle
mov
ret
add
fld1
enter
loope
pop
and
insb
test
jle
push
cmp
int
mov
push
dec
jo
lods
movsb
sub
mov
xor
push
imul
sub
lds
jnp
mov
in
movsb
ds
and
jnp
push
scas
add
mov
mov
sub
cmp
mov
add
sub
push
roll
and
leave
sub
icebp
push
inc
cld
int3
cmp
fld
jmp
test
sbb
stc
jecxz
jle
push
push
dec
sahf
aad
mov
sbb
mov
push
popf
std
jmp
cmpsl
adc
divl
out
incb
mov
pop
adc
arpl
push
push
and
cmp
shrl
pop
js
xchg
pop
xchg
nop
sub
pop
push
adc
sub
hlt
test
inc
lock
xor
xchg
xchg
cmpsb
and
lock
and
add
movsl
mov
fists
xchg
icebp
xor
popf
mov
shrb
and
ja
test
or
push
xchg
pop
pop
sub
ror
dec
stos
lret
iret
pop
pop
bound
mov
cmp
mov
push
or
mov
scas
mov
xchg
mov
and
repnz
jbe
cmp
mov
xor
mov
lret
mov
xor
mov
fidivl
rcl
rorb
cmp
pop
xchg
pop
push
sub
cmpsl
fld
pop
xchg
std
loop
cli
cmc
stos
fcmovu
jae
mov
imul
pushf
dec
std
or
mov
popa
popa
repz
push
pop
jge
jo
les
push
mov
mov
push
pop
out
xchg
adc
jge
sbb
dec
mov
cmp
jg
xor
stc
ss
dec
mov
adc
hlt
ja
xchg
jns
and
mov
xchg
xchg
fisubs
cmp
lods
repnz
xlat
and
xchg
inc
movsb
repnz
mov
mov
mov
in
call
movsb
outsl
pop
je
adc
cmpsb
loop
pop
mov
dec
mov
fcom
clc
sbb
sbb
andb
shr
stos
add
loopne
cmc
push
dec
ds
xor
or
out
fistps
mov
das
jnp
daa
jns
ljmp
or
xchg
lret
push
or
daa
stc
push
xchg
cmp
les
cmp
pop
mov
mov
lods
and
data16
cli
jae
and
and
and
and
push
or
bound
cltd
or
push
mov
mov
pop
mov
sahf
lods
mov
xor
push
xor
pmuludq
aad
xchg
mov
out
mov
outsl
mov
lcall
jbe
gs
push
push
js
lcall
sub
xor
roll
int
push
repz
add
mov
fisubrs
ficoms
cwtl
jo
ds
mov
mov
stos
popa
sar
cmp
push
rolb
pop
xor
inc
add
jo
xchg
cmpsb
cmp
stc
stos
and
stos
or
test
add
adc
incb
loopne
jne
mov
in
cli
pop
or
pop
mov
mov
push
jmp
jbe
ds
xor
cmpsl
je
fdivs
mov
ljmp
aad
loope
aam
push
je
mov
sub
cmc
aas
pop
adc
outsb
test
outsl
add
mov
add
adc
adc
pop
and
sbb
out
lret
fnstcw
push
pusha
sub
out
push
sarb
aaa
in
rolb
mov
xchg
stos
cmp
cmpsb
out
lea
push
test
sahf
push
xchg
stc
imul
push
roll
cmpsl
jnp
sub
sbb
movsb
fdivrs
into
and
inc
int
inc
xchg
in
xchg
mov
outsl
push
shrl
jmp
push
mov
out
sbb
sahf
and
stc
fmull
cmpsl
adc
int
xor
and
xchg
push
mov
fcoms
jbe
pusha
xchg
push
sbb
jmp
repnz
fdivrs
dec
jg
mov
sub
sub
in
mov
adc
cmp
mov
ret
loopne
cmp
or
sbb
movsl
mov
iret
pop
adc
loop
mov
mov
mov
cmp
cmp
jmp
and
xchg
xchg
cltd
lcall
aas
imul
lcall
jbe
in
mov
outsb
es
push
std
arpl
loope
pushf
mov
inc
test
insb
adc
lock
sti
pushl
test
int
mov
adc
xchg
or
xchg
inc
imul
in
xor
jno
push
add
or
out
dec
nop
xor
outsb
or
or
out
push
jecxz
jle
and
xchg
mov
xor
lods
loopne
jecxz
stos
mov
mov
adc
jno
mov
dec
xchg
fdivl
in
mov
cmpsb
mov
mov
mov
and
push
popf
jmp
fwait
ds
addl
sub
mov
test
pop
packssdw
jp
mov
dec
cli
adc
clc
scas
cmovns
inc
jns
mov
mov
adc
mov
fwait
push
stc
and
or
in
mov
iret
xchg
jno
faddp
inc
leave
scas
push
aaa
in
or
lret
cmpsb
or
movsl
in
fidivrs
data16
mulb
mov
lds
sub
xor
pop
add
ss
dec
add
xor
lret
stc
push
scas
je
sub
daa
lahf
dec
jmp
imul
xorl
fs
inc
dec
rclb
lock
cs
es
pop
push
lahf
sbb
xor
mov
inc
mov
out
pop
cli
test
adc
dec
adc
inc
aas
sub
sahf
aad
scas
mov
sub
jg
popf
dec
or
sbb
xchg
push
cmp
jle
xlat
mov
xlat
sub
dec
xlat
xchg
mov
cmp
out
push
pop
mov
lret
push
pop
jae
or
loope
or
mov
sub
lock
mov
fimull
adc
outsl
mov
push
popf
add
rcll
loope
mov
mov
push
xchg
std
jecxz
jae
scas
cmp
push
mov
adc
xchg
dec
adc
fidivs
cmpsl
add
loop
int
repnz
or
rclb
test
fnstsw
scas
mov
fnstenv
sbb
jae,pt
xchg
and
xchg
cmp
es
popa
lods
clc
rolb
xchg
sahf
push
add
bound
loope
dec
cltd
daa
lret
pop
add
cmp
js
hlt
fdivrl
pusha
mov
mov
xorl
cmp
or
sub
pop
popa
call
and
jno
pop
dec
shrb
repz
scas
jnp
icebp
je
test
xchg
in
sahf
or
in
in
das
negb
xchg
or
jl
inc
push
imul
fst
pop
and
pop
outsl
inc
dec
js
or
es
scas
cmpsl
fcomp
test
mov
ror
pop
daa
push
mov
xor
or
out
jge
imul
in
idivb
add
cmc
insl
or
mov
adc
jno
test
lea
sahf
xchg
les
movsb
jno
mov
sub
cmp
dec
inc
dec
insl
sar
sbb
mov
inc
hlt
in
push
sub
stos
sbb
add
test
mov
and
xchg
int
std
mov
std
xlat
int
adc
aad
sub
nop
into
mov
int
mov
insl
mov
lret
jg
sbb
call
adc
cmp
cltd
sarl
stc
aas
leave
ficoms
mov
mov
jge
push
and
aam
fcoms
push
push
inc
shlb
push
cmovb
or
movsl
lcall
roll
das
dec
sub
cltd
jp
test
lcall
xorb
mov
inc
ja
inc
sti
cmp
shrb
xor
jne
ss
inc
mov
xor
mov
push
xchg
inc
mov
inc
arpl
sub
nop
loopew
leave
jle
ja
jo
test
pop
repz
lods
mov
test
jbe
cmc
pop
gs
push
cmp
mov
pop
push
ss
push
push
out
fildll
push
insb
adc
sub
jle
pushf
sub
nop
xor
sub
dec
fs
lcall
into
cmpsl
push
lret
loop
mov
mov
sub
cltd
jno
lcall
sub
cmp
out
into
mov
cli
push
jmp
stos
lret
lods
sbb
shll
xor
push
je
mov
pop
aaa
sbb
out
push
sub
jg
sbb
mov
fisttps
dec
test
insb
int3
cs
aad
mov
rcll
loop
pop
or
mov
inc
push
cmp
pop
push
dec
loop
mov
xchg
idivb
nop
lods
lock
jl
xchg
call
sub
inc
sbb
mov
sub
movsl
div
xchg
xchg
fcompl
jo
sub
insl
loope
mov
in
outsb
xchg
sbb
jne
mov
xchg
lods
inc
mov
and
mov
in
mov
xchg
outsb
icebp
or
mov
jne
pop
icebp
pop
sbb
adcl
mov
dec
in
mov
push
out
and
enter
in
add
mov
sub
dec
arpl
sbb
mov
cmpl
mov
pop
adc
lret
call
fstps
lea
cltd
pop
imul
dec
rdtsc
sahf
sahf
ret
cmpsl
stos
sbb
push
ds
jae
imul
dec
call
jno
test
sub
adc
cmpsl
in
mov
mov
fidivs
cmp
mov
mov
pop
sti
mov
pop
push
mov
jns
jl
pop
leave
pop
xorl
or
icebp
rcrb
int
nop
ret
ret
gs
jbe
jle
jo
clc
pushf
pop
inc
repnz
movsb
push
push
lds
xchg
inc
or
std
fistpll
ret
popa
mov
xchg
mov
loope
out
push
gs
mov
or
xchg
insb
inc
adc
test
xlat
ret
sbb
jne
stc
lods
mov
pusha
mov
or
das
cs
or
adc
add
out
scas
fiaddl
ljmp
sbb
fildl
outsb
out
pop
shlb
pop
add
mov
rclb
adc
mov
mov
jbe
xchg
aaa
adc
jp
pop
cmp
adc
cmc
outsb
jmp
clc
adc
ss
es
and
lret
sbb
adc
clc
lods
xor
pop
xchg
cmpsb
jae
pop
mov
aad
mov
mov
cmpsl
dec
add
cmpsl
xor
sbb
incl
dec
test
cltd
lock
incb
sbb
lods
push
push
adc
ret
pop
hlt
jg
dec
xchg
xchg
inc
sbb
mov
arpl
mov
fisubs
iret
subl
daa
jge
std
addl
ficomps
iret
adc
std
sub
add
xchg
and
imul
mov
pop
aaa
adc
xchg
xlat
mov
mov
xchg
iret
js
adc
outsl
add
jecxz
mov
das
rcll
push
pop
jns
pop
adc
xor
inc
loopne
dec
and
lahf
xchg
push
clc
rorl
pop
out
in
pop
pop
or
or
xlat
sbb
fidivl
sbb
faddp
clc
imul
imul
cld
inc
push
add
jle
imul
sbb
cmp
clc
add
xchg
rclb
pop
jbe
fstp
push
mov
inc
jle
cwtl
push
cmpsl
add
je
mov
stos
xchg
pop
jae
fs
push
xor
xchg
leave
inc
jbe
xchg
enter
jno
fwait
cmp
lods
xchg
in
mov
fnstenv
aad
in
out
inc
pop
les
cmp
pop
sbb
push
sbb
fwait
mov
shlb
pop
test
xchg
add
push
scas
inc
js
aad
mov
mov
in
cltd
sbb
xor
jbe
adcl
out
xor
imul
cld
push
xchg
fsts
pusha
mov
jnp
jmp
jecxz
cmp
sbb
scas
mov
popf
push
dec
jns
mov
sbb
push
sub
mov
stos
jg
lret
stos
pop
fsubs
outsb
fldl
jo
cs
push
or
sub
mov
or
pop
aas
sub
fdivl
stc
std
out
lods
mov
xchg
xchg
inc
roll
mov
jp
in
arpl
sub
jo
sub
fdiv
repnz
pop
sub
sbb
arpl
push
adc
jmp
lahf
cmp
add
xor
pop
cli
mov
jo
movsl
sub
cmp
sbb
adc
lds
mov
mov
jecxz
jle
xchg
fs
cmp
jmp
pop
push
fmul
shl
or
sub
sbb
lret
loop
or
testl
pusha
fnstsw
inc
in
xchg
mov
jecxz
add
dec
fcmovnbe
push
xchg
add
mov
sub
sbbb
xor
sbb
jecxz
jb
test
imul
shll
cmp
dec
dec
lret
push
add
inc
jno
shll
mov
fwait
xor
jg
setge
sbb
mov
lock
fiadds
and
mov
mov
dec
cmpb
xchg
or
lock
ja
cltd
cmpsl
mov
xchg
cli
xlat
lret
xlat
sbb
mov
xchg
testl
inc
pop
sbb
std
dec
shr
add
call
jecxz
subb
jae
lcall
cmp
test
pop
pop
mov
add
out
add
lea
push
out
in
mov
pushf
push
imul
iret
inc
clc
iret
lds
xchg
imul
mov
push
or
mov
fildll
adc
cmp
leave
stc
lock
sbb
adc
in
testb
int3
lods
push
dec
bnd
fldenv
dec
mov
push
sti
jns
ror
xchg
adc
cmp
or
pop
fldl
sub
push
cli
inc
in
xchg
dec
pushf
pop
jg
test
subb
test
pop
addr16
aaa
mov
push
jae
dec
in
in
test
icebp
jno
sub
push
repnz
adc
dec
leave
push
fisubs
dec
jne
xor
adc
daa
sbb
rcll
sub
cmpsl
xchg
aad
fdivrl
out
rolb
test
cmp
xor
rcrb
daa
add
hlt
loop
add
xor
rorl
push
inc
cmp
cmp
adcl
lods
xor
mov
mov
cmpsl
sub
in
or
out
repz
hlt
lock
out
lods
outsl
cmp
adcl
mov
gs
imull
jb
pop
mov
mov
xor
test
jbe
jb
jne
call
les
push
inc
aad
xchg
dec
repnz
out
add
ss
movsl
fstl
and
lods
arpl
bnd
push
ljmp
aas
mov
std
inc
fimull
test
xchg
xchg
sub
fisubrl
mulb
outsl
inc
push
cmp
adc
inc
sub
mov
add
lret
repz
dec
and
clc
mov
sbb
adc
dec
xchg
inc
enter
stos
jnp
dec
push
xchg
inc
call
sub
cmpsl
mov
and
sbb
pop
inc
dec
aad
jecxz
sti
aam
lods
mov
pop
iret
adc
test
lds
jo
daa
push
xchg
outsb
lods
mov
jbe
and
dec
fistps
mov
add
xchg
mov
sbb
lret
and
or
jae
xchg
fwait
push
jno
adcl
aad
test
pop
dec
add
pop
adc
jmp
jne
rcr
push
mov
add
iret
mov
mov
rcrb
imul
mov
xchg
js
les
outsb
sahf
and
add
movsl
or
lcall
or
cmpsb
ljmp
stos
push
mov
fisttpll
mov
idiv
adc
fadds
lods
clc
xchg
pusha
adc
inc
jecxz
mov
cmp
or
pushf
xchg
shlb
jbe
stos
mov
sbb
adc
and
bound
dec
test
cmpsl
push
mov
xchg
or
xchg
hlt
lahf
and
inc
xchg
fisttps
ljmp
mov
lahf
push
sub
jns
push
call
mov
push
mov
dec
xchg
decl
jnp
loop
pop
jl
out
loop
stc
mov
jecxz
test
enter
popa
xchg
dec
add
js
enter
je
pop
enter
sub
sbb
mov
push
mov
or
fidivrl
popf
jb
push
xchg
cltd
mov
fstl
inc
inc
divb
push
iret
mov
ret
adc
test
cmpsb
push
mov
dec
shr
test
pop
push
xorb
insb
push
in
scas
jp
jg
mov
mov
add
pop
sti
mov
xor
js
ljmp
pop
cmp
push
xchg
scas
scas
push
out
mov
jo
divl
ret
ljmp
insb
jbe
fucomi
lret
pop
fadd
loopne
leave
ja
push
or
arpl
aam
jmp
filds
adc
cmp
repz
cld
cld
sub
pop
push
add
dec
pop
mov
rolb
jl
stos
mull
jno
xchg
adcb
push
fwait
push
pop
fcompl
test
add
xor
sbb
jb
neg
xorl
dec
sbbl
sub
and
fcomps
xchg
lret
iret
cmpsl
je
out
add
inc
jmp
inc
lds
and
pop
sarb
and
jbe
imul
jmp
test
mov
inc
data16
pop
sub
and
jl
test
mov
popf
pop
sbb
in
fcmovu
icebp
and
push
mov
imul
loop,pt
fisttpl
rcrb
cltd
aaa
inc
ror
pop
push
int
mov
in
test
mov
repz
loop
flds
cmp
and
arpl
cmp
pop
das
mov
mov
and
dec
xor
adc
test
mov
dec
fsts
push
jb
nop
cmp
ds
aas
lret
ret
xchg
mov
pop
outsb
pop
rorl
adc
adc
mov
mov
faddp
test
out
ret
lods
mull
adc
jecxz
scas
dec
testl
lret
push
push
and
sahf
ret
xchg
cmc
push
insb
fcoml
sbbb
dec
rorb
xor
test
xchg
dec
mov
fwait
mov
sub
mov
div
and
jmp
shrb
pop
xor
cltd
movsb
mov
jo
mov
decb
add
push
stc
rcrl
sbb
cmpsb
stos
add
enter
cmp
rcrb
mov
xor
insl
imul
xor
cmp
sbb
add
pop
or
subb
add
xchg
loope
sub
fxch
and
and
insb
sbb
stos
mov
xchg
xlat
out
cmp
inc
mov
xor
jle
fcmovnb
jmp
pop
mov
jecxz
daa
pop
and
into
push
in
pusha
scas
xchg
sbb
mov
jns
fs
xchg
jmp
push
daa
scas
cs
pop
cmp
dec
aaa
repnz
pop
repnz
push
jl
mov
and
out
pusha
in
mov
test
fldenv
fs
push
and
scas
sbb
mov
and
insl
shll
xchg
andl
pop
lea
pop
mov
cld
pop
into
loop
adc
lret
sub
arpl
cld
mov
mov
mov
loope
scas
dec
daa
mov
out
or
lret
cltd
int
lea
out
lods
jbe
out
mov
jl
push
mov
mov
cmpsb
mov
xlat
xor
and
mov
lock
mov
and
lds
sub
in
and
mov
mov
mov
out
mov
mov
clc
cmp
adcl
loope
jno
push
stc
bound
inc
sub
loop
gs
popf
xor
mov
push
shlb
cmp
data16
lret
mov
andb
cmovnp
pop
pushf
or
add
add
sbb
jl
fidivl
popf
mov
jae
inc
insb
stc
aas
cmc
ret
popa
mov
cld
pop
out
inc
int3
cs
dec
cmp
lret
cwtl
fistps
ror
cmpsb
or
push
or
adc
mov
cld
and
add
lea
xor
push
jae
jo
outsb
shrb
andl
xor
cmp
dec
leave
cli
add
jl
jae
outsb
loopne
sub
imul
ja
jbe
add
in
or
sti
ds
inc
jp
or
test
and
jnp
out
mov
lock
push
std
iret
shr
mov
push
movsl
lods
inc
dec
pop
mov
sbb
sbb
and
pop
and
in
push
pop
inc
lock
cmp
scas
shlb
xchg
push
cmc
leave
arpl
ret
hlt
cmp
push
xchg
mov
or
cmpsb
add
lret
aas
add
arpl
mov
jl
mov
mov
pop
and
cmp
pop
sahf
xchg
out
inc
insb
cli
hlt
lahf
mov
and
inc
iret
jl
mov
or
rcrb
int3
iret
xchg
push
mov
xlat
rol
dec
sub
ds
push
lods
xor
adc
test
jmp
ret
imul
xbegin
xchg
adc
cltd
into
sub
imul
push
xor
sti
push
sub
push
push
shl
mov
sbbb
adc
mov
add
push
rorl
iret
mov
stc
inc
pop
dec
dec
mov
icebp
stc
lahf
addr16
inc
hlt
push
push
out
pop
mov
xor
loopne
mov
xor
sbb
add
mov
and
loopne
jns
push
or
sti
in
mov
jbe
add
xor
xlat
sub
xor
ds
mov
cmp
jno
test
gs
pop
sahf
insb
mov
std
add
sub
dec
es
jge
or
mov
fs
push
or
outsb
add
lahf
cltd
mov
jmp
jge
cmp
push
call
dec
popa
cld
dec
mov
lret
mov
bound
lret
and
test
cmp
push
mov
pop
xchg
les
xor
mov
add
mov
leave
pop
addr16
repnz
adcb
and
lahf
lahf
dec
fbld
or
jg
or
mov
rcl
fistl
xchg
rolb
or
xor
add
inc
enter
dec
dec
add
pop
push
lret
mov
int3
insl
test
inc
repnz
adc
out
scas
lods
xor
push
inc
ja
adc
daa
pop
inc
mov
push
xchg
repz
enter
add
cltd
clc
not
mov
je
shrb
mov
inc
test
add
std
lea
mov
ljmp
pop
cmp
adc
fdivp
dec
popa
mov
into
add
daa
mov
lds
js
xchg
xchg
in
mov
add
jnp
js
and
mov
ds
dec
subb
xor
cld
mov
sub
sub
fwait
inc
clc
out
cwtl
outsb
xchg
pop
sub
cs
mov
and
jns
pop
jp
js
mov
adc
cmp
push
inc
jo
aam
adc
cmp
jns
pop
lret
leave
out
aaa
adc
sub
jle
mov
jnp
test
mov
adc
push
fbld
ds
inc
jg
inc
or
gs
test
bound
cmp
ja
jne
or
and
sbb
and
scas
cs
scas
aam
xchg
sbb
fnstenv
insb
mov
bound
dec
inc
jns
in
pop
mov
neg
loop
pop
jnp
jmp
adc
fdivrs
cmp
into
push
mov
inc
inc
das
mov
mov
jg
mov
ja
push
jle
and
jecxz
scas
popf
jbe
xchg
cli
out
imulb
test
mov
stos
lret
mov
jo
mov
lea
aaa
sbb
xchg
fsubs
xor
xchg
call
mov
cmp
add
repz
incb
pop
jp
xor
sub
xlat
ret
jmp
push
sub
popf
jle
mov
rep
pop
adc
add
out
idivl
fisubrs
jnp
pushf
sub
or
jne
add
lahf
std
into
stc
into
cmp
fisubl
push
push
fnstenv
sti
cmp
fsubrl
dec
iret
and
adc
sar
test
and
ja
clc
sahf
in
sub
inc
push
imul
lret
jg
dec
or
push
int
jge
inc
cwtl
ljmp
ja
aam
aam
dec
imul
adc
dec
ret
pusha
mov
pop
sbb
inc
mov
inc
dec
sti
pop
inc
in
or
insb
add
scas
imul
pop
sub
movsb
bound
xchg
xor
mov
das
loope
sub
mov
imul
mov
nop
pushf
add
jg
inc
push
add
pop
call
mov
xchg
or
lds
adc
mov
push
pcmpeqb
pop
movsl
mov
fmuls
sbb
stc
adc
jmp
into
fisubl
fdivs
xor
stc
movb
inc
push
enter
jnp
inc
and
jmp
fildll
mov
test
push
insb
sahf
dec
cmpsl
xchg
sbb
cmp
ja
out
insb
cmc
xchg
movsl
nopl
mov
xchg
adc
dec
outsl
sub
addb
test
aaa
pop
ja
aam
cltd
negl
and
sub
jae
divb
pop
xchg
lret
inc
or
pusha
js
imul
sahf
jb
mov
jl
mov
sub
jbe
dec
cmpsb
jg
lods
jg
js
les
aam
loop
outsl
xchg
iret
lret
or
xchg
jbe
pushw
mov
cmp
scas
outsl
lods
imul
enter
mov
pop
mov
pop
sub
int3
fs
ss
push
add
movsl
outsb
es
es
mov
pop
std
mov
and
mov
outsl
inc
mov
add
nop
out
test
addb
jne
mov
xor
cmp
popa
push
out
xor
xor
inc
mov
push
int
pop
ss
dec
out
xchg
fdivl
sbb
push
jmp
repz
cs
addr16
cmp
sub
cwtl
aad
lcall
jb
call
andl
push
jno
cmpsb
inc
dec
adc
aaa
sbb
adc
jns
adc
ret
xchg
inc
notl
jnp
outsl
jo
jno
mov
jmp
cmpsl
or
cmp
inc
jle
and
xchg
dec
jg
jle
pop
dec
in
add
insb
mov
das
mov
in
ret
sahf
shll
in
inc
inc
dec
ja
mov
nop
cmpsl
test
lods
push
jnp
mov
xchg
sbb
cmp
mov
cli
js
in
xchg
mov
xchg
and
mov
pushf
rcll
outsl
mov
fwait
or
add
das
cmpsb
jg
jae
pop
push
push
pusha
lds
cmp
mov
mov
push
stos
loope
dec
icebp
pop
mov
xchg
mov
or
data16
inc
mov
ds
test
add
add
add
out
xor
push
lds
das
add
mov
fstpl
dec
push
lahf
push
aad
push
jl
xchg
fsubp
inc
xor
sub
dec
lods
push
adc
dec
fcoml
gs
aaa
or
adc
sbb
push
pusha
insl
or
movb
dec
add
cmpsl
inc
xor
adc
into
mov
mov
ret
adc
mov
and
nop
jg
push
sub
aam
mov
js
into
adc
xchg
push
inc
xchg
jecxz
std
movsb
or
lret
jmp
and
jns
outsb
inc
inc
and
loop
sbb
lcall
push
push
xchg
lahf
test
lods
int
xchg
xchg
das
xorb
fcomps
and
pop
jg
decl
dec
sub
stos
pop
pop
push
mov
push
inc
push
sbb
in
fsub
adc
cs
mov
sbb
pop
push
sarb
jb
ret
mov
cwtl
add
clc
adc
cltd
ds
xchg
dec
inc
into
xor
cmovno
rcr
mov
ss
and
push
call
ret
add
faddl
stc
js
rolb
and
idivb
sahf
push
sub
pop
and
js
jg
stc
mov
imul
cmp
aam
xchg
or
das
mov
pop
push
xchg
or
dec
sahf
jae
add
dec
out
incb
jle
mov
test
js
xor
clc
ret
mov
adc
ds
lahf
mov
cmp
aam
cmp
inc
mov
add
repnz
sbb
mov
pop
sub
out
mov
jae
cmp
add
mov
sahf
push
xor
fwait
pop
xchg
jge
sub
ret
lret
pop
xchg
jae
dec
lcall
inc
push
inc
scas
or
popf
inc
cmp
daa
adc
inc
or
sbb
mov
fs
lds
idiv
dec
add
test
sbb
push
sub
or
mov
mov
inc
into
movsb
cmp
push
dec
dec
and
sub
aam
sub
jbe
xor
dec
imul
out
dec
xchg
or
cmp
or
mov
cltd
ret
jbe
sbb
shr
cmp
movsb
lock
pop
adc
push
sbb
into
cmp
dec
cmp
push
mov
aam
neg
subb
cli
fcoms
js
mov
out
push
out
pusha
ret
xor
iret
or
sbb
leave
insb
pop
or
cli
dec
mov
dec
inc
pop
pop
inc
mov
test
imul
rcll
test
xor
and
stc
mov
bound
push
mov
in
push
cld
sbb
fsin
or
jg
stos
mov
imul
sub
sbb
negb
mov
adc
jge
mov
arpl
pop
dec
lods
call
in
mov
icebp
inc
icebp
xorb
add
mov
imul
or
or
dec
push
fldt
subb
jns
rorl
enter
pop
rcrb
mov
push
sub
lock
fldcw
clc
dec
xor
inc
adc
dec
cmpsl
repz
cmp
xchg
mov
mov
mov
mov
inc
push
out
or
jmp
inc
inc
or
out
cmp
test
or
sbb
repz
and
cmp
mov
cmp
or
fcomps
xchg
insl
adc
imul
out
dec
cmp
ja
pop
and
out
pop
jecxz
jbe
in
in
pop
push
push
mov
add
arpl
sbb
xchg
dec
jl
mov
cmpsl
mov
adc
dec
aam
sarb
nop
out
popf
push
add
dec
jne
scas
jnp
daa
stos
cli
jg
push
lea
mov
scas
mov
cmp
pop
daa
sbb
pop
dec
mov
or
lret
rclb
inc
mov
out
cmpsb
inc
fsub
xchg
pop
dec
xor
lock
xor
aam
sub
sbb
mov
stos
dec
addr16
syscall
outsl
ffreep
mov
sahf
repnz
jb
mov
popa
shl
push
pop
pop
jge
jge
es
fldcw
sub
push
mov
push
mov
push
fldt
rorb
push
lcall
mov
ljmp
add
das
pop
jle
pushf
add
cmpl
ror
cmp
push
pop
clc
and
cmpsb
mov
std
xchg
aas
inc
inc
mov
pop
arpl
arpl
push
fstps
ja
in
add
push
jle
xor
icebp
mov
cltd
pop
cld
xchg
jp
test
ret
rcll
jno
inc
adc
dec
cmp
jns
in
pop
loopne
mov
pushl
add
rorb
jmp
lock
xor
mov
xor
push
pop
jnp
push
imul
xor
popa
mov
mov
repnz
jns
mov
and
add
jne
xorb
xchg
inc
inc
enter
pop
pop
rorb
mov
fcomps
xor
mov
fs
xchg
popf
push
lock
dec
pop
push
adc
test
adc
push
pop
mov
push
rclb
cmpsl
sub
dec
je
addr16
sbb
adc
dec
lods
pop
mov
sets
sbb
testl
stc
clc
mov
push
aad
imul
movl
mov
and
or
fmull
repnz
enter
push
sub
push
addr16
xor
push
jl
push
rcrl
sub
push
pop
or
ficomps
mov
aad
push
push
inc
sbb
jmp
pop
loop
in
arpl
push
pop
movd
sub
mov
pop
test
jns
add
jnp
cmp
sbb
in
adc
mov
decb
add
pop
stos
daa
js
add
adc
addb
popf
pop
jae
pusha
inc
hlt
cmc
nop
jnp
ret
xlat
cld
cld
popa
xor
fs
sub
sub
mov
adc
jo
cmpsl
jbe
cmc
xor
cmpsl
rolb
sbb
xor
add
aaa
mov
push
imul
inc
and
out
mov
add
ss
mulb
fwait
cmc
mov
push
sbb
pop
fs
mov
iret
call
add
subl
adcb
push
or
lahf
xchg
cmpsb
inc
fisubrs
xor
test
out
daa
out
insb
inc
loope
cmpsb
jge
daa
rorb
jmp
test
inc
jge
pusha
lahf
fbld
in
pop
loopne
mov
cltd
cmp
cli
or
dec
xchg
test
setne
out
adc
rolb
and
inc
dec
and
pop
call
lock
mov
lods
jne
insb
lea
mov
es
repz
arpl
test
xor
xor
ds
or
xlat
jbe
pop
stc
push
adc
inc
lods
call
pop
jns
out
mov
jmp
xor
in
inc
jns
mov
loope
pop
or
mov
mov
out
out
xor
xchg
je
lea
dec
movsb
bswap
call
lock
out
mov
sbb
pop
aam
iret
mov
shll
cli
mov
pop
fnstcw
add
dec
adc
lahf
lods
out
lods
dec
shl
cmp
test
icebp
pop
adc
xchg
cmpsl
jbe
and
and
sub
adc
jne
push
out
mov
pop
imul
fstpl
and
fdivrl
and
dec
jmp
jns
lahf
push
push
push
mov
out
mov
outsl
shl
in
lods
lods
mov
cs
jo
mov
ret
divl
or
adc
mov
adc
in
xchg
repz
jne
lods
or
or
notl
daa
aad
mov
jnp
adc
and
and
outsb
pop
cmpsl
or
stos
inc
adcb
sbb
inc
dec
pop
mov
sbb
ja
cmpsb
mov
aaa
xor
in
adc
testb
pop
testl
pop
popf
arpl
or
mov
fdivrl
xlat
aam
icebp
jl
pop
and
jle
jecxz
bound
adc
cmp
mov
sti
dec
into
add
mov
nop
cmp
mov
ret
jecxz
xor
das
mul
call
jae
jae
loop,pt
inc
adc
lcall
mov
add
cmp
lret
mov
add
or
lcall
addl
mov
cmc
xchg
mov
mov
cmpsl
cmp
loop
mov
ret
or
jne
push
mov
xchg
jns
xchg
in
mov
shr
inc
sub
mov
mov
into
scas
and
mov
or
ja
sahf
push
adc
sub
je
mov
mov
pop
shl
jb
sub
and
lods
sarb
call
push
jae
test
mulb
jnp
jge,pn
repnz
xchg
sbb
repz
mov
js
into
lds
sahf
das
sub
adc
data16
mov
repnz
push
je
outsb
push
cmovl
faddl
mov
repz
mov
push
jmp
aas
fildl
inc
mov
sarb
aad
mov
xor
outsb
ret
cmp
add
cld
mov
xor
lea
jmp
inc
adc
mov
fidivl
andl
add
xchg
pop
or
in
into
xchg
ss
daa
inc
std
iret
arpl
popa
jmp
jmp
cmp
dec
inc
add
fdivrl
and
mov
test
cli
mov
shlb
push
je
out
scas
ja
jle
xor
pop
out
jbe
xor
xchg
sub
mov
inc
inc
sbb
lret
pop
jg
and
aaa
and
into
daa
int3
out
lods
ret
lea
inc
mov
subl
insb
stos
movsl
add
inc
pop
or
gs
mov
test
popf
jne
inc
cwtl
push
xor
inc
nop
dec
les
cmpsb
ficoms
sub
jecxz
pop
mov
jmp
xchg
jmp
or
lret
fcomi
mov
xchg
mov
jge
jl
stos
int3
sahf
cltd
push
jnp
icebp
cmp
cmp
stos
mov
xchg
in
cmpb
push
push
jno
and
stos
negl
ret
jae
xchg
ret
jecxz
pop
push
inc
xchg
fnstsw
push
ss
pop
das
insl
cltd
or
inc
aad
and
addr16
dec
notl
sub
pop
push
mov
sarl
mov
sbb
sbb
dec
lods
inc
iret
adc
jno
popf
daa
imul
xchg
and
out
test
xchg
add
testl
push
lods
in
in
shlb
lret
fnstsw
pop
imul
in
xor
bswap
cmpsb
jbe
mov
push
dec
lock
int
movsl
xchg
mov
push
addr16
sub
mov
inc
cmpsl
push
mov
shrl
push
addr16
gs
aad
ret
pop
sbb
mov
push
jbe
out
clc
das
mov
fpatan
imul
adc
push
mov
jb
push
dec
getsec
sbb
pop
jo
in
push
aad
xor
popa
jmp
addl
aas
lods
xchg
and
add
inc
roll
cs
mov
test
xchg
sbb
xor
pop
int
imull
push
adc
push
mov
cmpsl
dec
pop
push
mov
ficompl
fildl
dec
and
cwtl
cmpsb
sub
mov
sbb
xchg
arpl
incl
wbinvd
jmp
jmp
aad
ljmp
andb
and
jo
add
shll
movsb
sti
fisubs
mov
mov
pop
mov
or
lods
arpl
aad
stc
rolb
pop
adcb
aam
out
adc
inc
sub
dec
hlt
lds
push
sti
dec
lahf
flds
xchg
sarb
dec
inc
fisubs
test
sbb
xchg
mov
int3
xchg
mov
fistl
cmp
scas
test
and
movsb
mov
jle
and
jecxz
sbbb
xchg
bound
lds
sub
lcall
or
test
int
add
cmp
hlt
cwtl
dec
sbb
push
bound
out
add
pusha
pop
sub
adc
push
jmp
out
add
roll
cmpsl
ja
daa
cmc
pop
lret
es
mov
add
pop
jns
imulb
popf
fucom
andl
cmp
out
fsts
adc
mov
in
add
popa
xchg
aad
test
sbb
push
xchg
jl
inc
movsb
mov
inc
mov
add
mov
test
daa
mov
mov
mov
pop
dec
jle
or
xchg
push
push
pop
and
subb
bound
lods
pop
xchg
stos
add
jle
popa
mov
call
mov
sub
mov
push
cmc
repnz
xor
sub
adc
sti
aaa
mov
ja
aam
mov
cmpb
jl
or
pop
jbe
xchg
lods
jne
jle
fcomps
add
xchg
mov
sahf
dec
in
or
cld
sbb
pcmpeqb
ds
adc
push
sarb
jbe
jns
stos
pusha
push
test
mov
aad
sub
add
xchg
dec
dec
cltd
cmp
adc
loopne
fwait
movsl
adc
sbb
js
inc
adc
pop
idivb
and
mov
in
mov
stos
fwait
xor
jns
les
icebp
inc
dec
lds
push
aaa
in
dec
in
addr16
push
add
jbe
mov
into
xor
adc
jge
mov
xor
arpl
addr16
xchg
push
popf
insb
and
ljmp
movsb
push
jae
xchg
dec
int3
push
push
jmp
mov
adc
lcall
xor
dec
in
push
test
xchg
scas
lea
cltd
sub
lcall
push
fcomps
iret
mov
aad
es
insl
dec
xchg
shrb
sub
iret
adc
add
lock
jbe
cmpsl
andb
cmc
popf
fs
add
jo
rolb
test
loope
cwtl
aad
iret
int
mov
les
xorb
shrl
enter
shlb
jo
inc
add
push
roll
scas
push
or
stc
pop
roll
out
xchg
push
scas
mov
fwait
movd
aad
arpl
gs
ds
adc
ret
les
dec
fcoml
arpl
cmc
pushf
test
in
and
iret
fldenv
mov
pop
mov
fs
mov
jle
xor
fidivs
scas
xchg
call
xchg
sbb
test
sub
sub
cmp
sahf
xchg
pop
fisttpl
sub
jg
cmpsl
scas
out
xchg
fimull
je
xchg
popa
divb
push
jle
inc
ficoml
das
fwait
push
dec
stc
inc
clc
push
inc
xchg
inc
or
jmp
in
pusha
nop
loopne
jne
mov
xchg
pop
sub
sub
mov
xchg
loopne
push
add
mov
movl
and
pop
mulb
sbb
cmp
cmp
push
inc
mov
lods
xchg
sbb
fwait
mov
push
inc
and
dec
pop
cli
mov
mov
push
mov
test
inc
and
stos
or
adc
push
enter
push
in
inc
ljmp
test
out
mov
jmp
addr16
mov
daa
xchg
mov
pop
sbb
inc
dec
adc
lods
sbb
leave
daa
xchg
jne
ret
and
loope
push
loope
sbb
cld
pop
aas
cmp
cmp
add
mov
hlt
icebp
popf
and
lods
seta
dec
mov
cmp
sbb
cmpsl
je
cmp
jl
or
add
movsb
and
xor
scas
js
push
jp
dec
cmpsb
xchg
mov
xchg
repz
mov
call
imul
aam
add
enter
addr16
in
les
and
sbb
sbbb
xor
add
or
jmp
and
mov
push
iret
pop
push
outsb
cmc
stos
push
into
call
dec
and
call
popa
mov
dec
push
shrb
hlt
pop
mov
mov
addr16
inc
jmp
mov
jae
jecxz
test
add
mov
adc
and
minps
decl
mov
popf
ss
arpl
les
nopl
insb
arpl
shll
mov
fadds
add
fldenv
xchg
test
pop
mov
adc
adc
xchg
mov
cltd
sbb
bound
add
jl
add
movsb
mov
mov
or
mov
push
ljmp
mov
push
cmp
mov
ds
xchg
dec
pop
or
push
bound
jmp
mov
inc
sti
cld
adc
cmpsl
inc
fcmovb
cmp
mov
sbb
mov
inc
insb
cmp
lea
pusha
push
jp
push
lahf
dec
test
pop
js
push
leave
arpl
repz
adc
adc
mov
adc
dec
mov
lret
and
out
xor
sbb
push
xchg
gs
sti
mov
out
scas
jl
dec
mov
sub
cmpsb
cmp
popf
cld
jne
xchg
inc
imul
mov
fs
hlt
nop
cmp
xor
in
hlt
lret
add
iret
cmp
or
fildll
mov
aad
ficompl
lock
fists
add
push
enter
sahf
fwait
mov
hlt
out
lret
pop
mov
mov
jae
sub
xchg
in
rcl
scas
test
mov
andl
mov
ja
mov
pop
test
jg
outsl
mov
into
lods
aaa
fldcw
mov
sub
enter
loope
orl
jno
and
cmp
subl
cli
sbb
shrb
fdivs
in
daa
jge
sbb
imul
cli
mov
and
push
jg
call
and
lea
add
fdiv
out
xor
jmp
cltd
pop
push
movsl
int3
add
lods
or
std
push
mov
xor
shlb
int
out
fsubp
push
mov
mov
jle
push
jg
jmp
scas
mov
cmp
dec
fcmovbe
mov
cmp
imul
leave
rep
je
jae
arpl
mov
andl
test
pop
adc
jmp
adc
cmp
sbb
pop
add
sub
jo
mov
arpl
mov
mov
jl
sbb
mov
fxch
and
mov
jl
mov
rclb
nop
scas
rorl
std
inc
jle
pushf
lock
mov
hlt
imul
loope
cmc
or
sbb
popf
popa
nop
sbb
xor
icebp
or
xchg
mov
arpl
cmc
inc
je
test
and
lods
adc
mov
jmp
stos
dec
xchg
rorb
jno
fldt
scas
lret
subl
testb
push
xor
pop
pop
sub
push
cmp
jge
jp
icebp
inc
shll
and
add
out
sbb
lods
mov
jne
mov
and
test
xor
out
cmpsb
jge
sbb
mov
pop
mov
aas
dec
pop
js
xor
adc
enter
test
lcall
mov
dec
adc
out
pop
fldt
repz
scas
nop
add
cld
pop
mov
pop
push
imul
xchg
sbb
rcl
fldcw
mov
inc
xor
push
mov
stc
add
pop
inc
jo
int3
mov
mov
push
fsub
inc
cltd
ja
out
das
jo
or
pop
jmp
in
cwtl
stos
push
lcall
fidivs
add
out
lret
xlat
xor
scas
mov
mov
insb
movsb
jmp
mov
aad
and
jmp
mov
xchg
test
in
lcall
jns
inc
repnz
aas
mov
cltd
sub
outsl
sbb
mov
sbb
push
rclb
es
outsl
sarl
icebp
loopne
out
cmp
push
push
sub
imul
test
sub
cmp
movsb
dec
cmp
xor
es
hlt
sbb
call
test
jle
cltd
enter
pop
std
cmp
imul
jb
imul
int3
stos
inc
clc
jl
or
std
test
cltd
or
mov
negl
xchg
push
sahf
pminub
ja
clc
jl
cmp
xchg
divl
adc
xchg
cli
pop
add
les
or
jmp
mov
int3
inc
popa
dec
imul
cmp
int
mov
sub
mulb
xchg
dec
adc
insl
clc
push
xlat
cmp
sti
popa
sub
lds
pop
nop
lahf
cltd
scas
jns
pusha
fimuls
mov
mov
stos
jbe
adc
cmpsl
mov
call
arpl
jg
mov
mov
and
dec
push
cmp
in
mov
pop
loop
in
jns
mov
sar
sbb
out
and
fs
mov
out
jb
scas
pop
mov
ljmp
cltd
cld
repz
cmp
or
cmc
lret
lods
and
cwtl
and
mov
dec
jbe
out
test
pushf
mov
dec
xlat
fisttpll
jbe
test
mov
loop
mov
sbb
cwtl
stos
outsb
push
enter
push
dec
push
in
jge
jp
outsb
adc
ss
cmp
mov
notb
add
fsubp
push
pop
or
xor
daa
shrb
fadds
arpl
mov
sbb
dec
je
addr16
das
stc
xor
and
mov
mov
xchg
jns
or
jge
sbb
loop
or
js
and
test
dec
pop
out
push
cmp
int3
sub
lds
in
pop
cmp
mov
sahf
mov
in
cwtl
nop
cmpsb
xchg
roll
iret
cs
ret
xor
xchg
and
xchg
fs
mov
fistl
push
mov
jo
mov
sub
ds
cmp
aas
sahf
js
movsb
dec
cmp
loope
adc
mov
mov
fnstsw
shll
movsb
cmp
cmp
shll
pop
mov
data16
jmp
and
pop
push
aaa
ja
or
cmp
es
add
out
xlat
mov
inc
jl
xor
cmp
out
xchg
lods
inc
loope
out
pop
mov
inc
aas
and
mov
stos
jge
add
and
int
add
mov
addl
stc
jo
int
lret
out
pop
pop
fstpl
fs
in
xchg
addr16
dec
sub
stos
aas
adc
iret
add
mov
adc
cs
insb
pop
cwtl
cwtl
jnp
lock
push
push
dec
add
mov
enter
push
jl
fs
mov
sub
inc
dec
lret
push
dec
gs
jp
ss
sti
mov
and
lcall
loop
movsl
mov
pop
inc
into
or
outsl
mov
sub
icebp
or
dec
mov
imul
adc
out
adc
inc
jns
jle
das
inc
push
jl
and
int3
adc
icebp
or
lret
dec
jp
mov
sarb
sahf
in
fidivs
sub
jae
cld
fdivr
out
leave
insb
cwtl
cmp
xor
loop
movsb
add
dec
xchg
push
cmc
movsl
test
std
dec
or
xchg
jnp
dec
test
cmc
sti
data16
aad
jg
rcrl
add
lods
negb
repz
aas
gs
dec
and
dec
sub
in
outsl
mov
dec
scas
jnp
sub
pushf
cmpl
or
push
into
push
push
repz
cmc
and
jg
inc
or
mov
imul
pop
testb
push
ss
fldenv
pop
xchg
fistpll
xchg
sub
xchg
inc
loope
push
add
aad
jl
popa
xor
xchg
ficoml
ljmp
xlat
sub
arpl
daa
inc
hlt
or
sub
arpl
pop
rcll
cltd
fwait
repnz
xor
push
sub
xor
pop
jp
add
inc
or
rcrl
push
or
mov
push
mov
imul
mov
lahf
add
test
mov
sbb
jmp
stc
jb
and
call
jmp
xchg
fsts
add
orl
call
sti
cmp
sbb
ret
aam
mov
arpl
dec
cmp
loope
cmp
orb
rcrb
das
sahf
das
push
fdivl
fcompl
xchg
adc
cmp
ret
pop
inc
mov
inc
je
inc
mov
scas
sbb
aaa
fcmovb
iret
pusha
pop
mov
popa
shl
xchg
jo
insl
dec
mov
cmp
and
lret
add
dec
bnd
and
sti
sbb
push
mov
aas
sub
mov
cmc
jl
or
xchg
push
adc
sbb
jno
test
xor
jmp
js
clc
inc
add
enter
and
cltd
mov
pinsrw
jo
decb
push
in
xor
aad
mov
insb
adc
mov
pop
sub
or
push
sub
jbe
or
aad
pop
fidivs
xchg
test
mov
push
insb
movsl
push
dec
fisubrs
mov
jnp
xor
jmp
xor
cmp
dec
add
lcall
xchg
inc
and
enter
sbb
bound
mov
mov
jle
xor
or
ret
push
ss
fdivs
rcr
loopne
push
lds
in
std
call
jmp
stos
icebp
adc
enter
add
rclb
test
sub
aad
mov
and
ss
xchg
notl
aas
pusha
js
cli
add
arpl
mov
push
fildll
pop
sbb
sub
dec
jmp
js
fs
je
ret
lods
jmp
out
inc
clc
popf
xadd
loop
xchg
movb
push
popa
jnp
push
cmc
les
mov
xchg
repz
pop
dec
sbb
add
sub
add
fld
xlat
dec
adc
int
mov
jmp
push
ret
imul
sbb
add
repz
out
inc
push
inc
sbb
or
call
sbb
ja
in
add
aam
sub
andb
loop
aaa
inc
repz
lods
hlt
ja
jl
jo
sbbl
aas
jo
mov
mov
call
paddusb
pop
mov
lods
popa
sub
dec
mov
push
data16
mov
ss
jbe,pn
f2xm1
and
push
adc
out
xchg
push
mov
jae
lret
scas
sbb
in
out
enter
cld
add
jns
test
icebp
dec
push
mov
xchg
repnz
pop
dec
add
xchg
lods
cmp
pop
add
pop
dec
cmp
mov
jmp
cmp
push
in
xor
or
xchg
cmp
rcrl
cmp
pop
jmp
insl
pop
aad
fmulp
xor
jne
lret
or
sarb
sub
push
or
lea
orb
cmp
nop
jge
cli
pop
rcr
mov
add
int
jae
adc
cltd
loope
sub
es
imul
cmpb
jmp
nop
ret
lods
mov
mov
xor
pop
inc
stos
or
addl
adc
imul
fdivrp
jmp
sub
push
add
add
push
push
add
cmp
or
aaa
xor
pop
xchg
sbb
cmpsl
pop
inc
ret
in
xchg
hlt
xor
or
lock
push
xchg
mov
mov
adc
ret
jecxz
rclb
mov
rcrl
mov
fnstsw
repnz
test
and
xchg
loop
scas
cmpsl
sbb
test
mov
test
movsl
daa
add
icebp
cmp
mov
pop
imul
loopne
sti
shll
pop
fdivl
xchg
cmp
mov
negl
insb
jle
test
jmp
jmp
das
sub
sti
fdivrs
icebp
xchg
daa
cld
imul
or
ja
scas
in
lret
mov
sub
test
loopne
mov
sti
cmc
jbe
imul
sbb
inc
mov
loop
fnstcw
punpckldq
lea
and
xor
insb
sub
pop
xchg
jno
repnz
fisttpl
dec
inc
scas
nop
inc
jge
push
jb
insl
fnsave
mov
lock
pop
lods
outsl
lock
and
lock
dec
sub
in
sub
test
ja
mov
lods
call
sti
test
lahf
sub
add
pop
push
jns
mov
mov
rcrb
and
addr16
inc
and
shr
mov
push
mov
pop
lods
mov
iret
arpl
cmpsb
or
enter
ret
filds
pop
cs
mov
pop
nop
ret
cmp
add
push
push
mov
push
inc
adc
fsubrs
ficompl
fadds
cmpb
sahf
xchg
mov
movsb
mov
dec
push
lds
add
xor
cltd
mov
cmp
loop
ds
xor
lods
mov
sahf
mov
jg
mov
push
stos
fstl
sbb
test
pop
hlt
repnz
jge
pop
fs
aam
xchg
mov
sahf
cmpl
jns
mov
orb
mov
mov
xchg
and
cwtl
mov
pop
mov
mov
iret
gs
sub
icebp
pop
roll
pop
movsl
cmp
fistpll
add
pop
fisttpll
test
cmp
imul
call
inc
popf
arpl
rclb
xor
dec
inc
inc
push
or
test
jl
dec
push
xor
cmp
jecxz
jge
shrl
fildl
xchg
adc
enter
xor
sbb
mov
in
lea
dec
sbb
cmp
and
cmp
add
in
movsb
and
in
mov
push
fsts
stos
dec
lahf
test
push
mov
je
fmulp
add
xchg
jno
or
cmp
dec
sbb
dec
mov
insb
mov
pop
push
cmc
sbb
mov
aas
in
cwtl
mov
or
dec
fsubs
nop
sbb
popf
js
lret
pop
mov
cmp
imul
stos
mov
inc
in
lods
negl
jne
scas
ja
and
and
clc
lods
pusha
popf
lea
xchg
jae
mov
ds
sbb
icebp
jg
push
sti
loope
adc
int3
imul
pop
and
mov
push
fildl
sarb
push
movsl
and
jbe
pop
sti
pop
imul
fwait
shll
mov
ss
fisttpll
idivb
cmp
sbb
les
mov
or
arpl
adcl
dec
pop
js
call
cmp
or
popf
lock
sbb
mov
jno
lods
jp
inc
or
ljmp
cmc
in
mulb
mov
jg
mov
add
inc
daa
and
sbb
add
aam
test
fbld
out
sub
push
jo
add
in
adc
pop
ret
mov
mov
sub
popf
ret
and
ret
inc
adc
or
and
dec
push
adc
pop
movsl
leave
sub
push
inc
mov
mov
fs
inc
lcall
add
popa
fcompl
push
dec
mov
pop
movsb
scas
cmp
aam
adc
cmp
hlt
lahf
mov
incb
shr
sahf
jbe
push
xorl
xor
jg
in
and
push
adc
and
inc
nop
int3
mov
movsb
arpl
mov
mov
cmp
mov
xlat
scas
and
inc
xor
daa
in
mov
fwait
aas
stos
in
dec
shrb
or
cmp
jno
in
or
dec
cmc
loop
cmp
sub
and
jns
and
pusha
adc
mov
js
add
insb
xchg
insb
pop
das
xorb
stc
cmp
inc
cmp
xchg
call
test
mov
inc
jb
mov
scas
mov
test
pop
jecxz
mov
inc
pusha
cwtl
inc
out
iret
test
push
xchg
cli
ljmp
pop
inc
scas
cmp
mov
mov
sub
sub
stos
dec
and
cmp
pop
lods
add
xor
jae
cmp
mov
sub
mov
dec
push
mov
cmpsl
mov
push
mov
xchg
mov
ljmp
mov
jg
in
leave
ljmp
daa
mov
out
imul
ret
cwtl
jne
dec
insl
shll
and
fsubrs
xchg
pop
mov
imul
push
in
jle
jecxz
into
movsb
mov
imul
pop
mov
lret
outsl
fcomps
jge
adc
les
int3
movsl
lds
out
push
cld
mov
cmp
xchg
cmp
imul
jge
arpl
inc
gs
xchg
lods
sub
test
enter
mov
cwtl
push
je
xchg
call
pop
xorb
inc
in
cmc
loopne
out
mov
jecxz
adc
movsl
in
push
push
imul
dec
lret
push
adc
into
xor
in
mov
adc
or
inc
stos
and
dec
add
pusha
mov
adc
sbb
push
pushf
mov
pop
mov
mov
ret
insl
testb
mov
arpl
aam
inc
cmpsl
fwait
inc
inc
popa
insl
xor
dec
sbb
fs
je
iret
cmp
cld
std
xor
cli
and
push
stc
push
xor
jae
lcall
stos
shl
cli
movsl
fwait
in
add
sbb
nop
sbb
test
cltd
xchg
out
xor
in
fdivl
inc
mov
lcall
addr16
das
hlt
jl
sub
jo
test
pushf
xchg
xchg
mov
inc
cs
cltd
std
hlt
push
pop
sub
decl
or
mov
jp
jg
mov
vmwrite
jae
icebp
push
xchg
mov
xor
inc
test
cmpsb
push
xchg
scas
sbb
cli
es
mov
mov
lods
xor
mov
pop
clc
fnstsw
sbb
insb
xlat
repnz
xchg
sbb
jne
aas
adc
rcrl
iret
pop
xor
push
xchg
inc
jl
das
lods
pop
and
movsl
scas
ret
sub
lret
add
stos
push
imul
push
loope
in
lcall
inc
mov
inc
aad
xor
adc
imul
lret
adc
adc
inc
insl
dec
shrl
dec
add
mov
inc
and
gs
dec
test
jle
adc
xor
out
fcomp
or
mov
shrl
add
lahf
lahf
push
push
orb
jle
mov
lret
xchg
movsb
test
ss
pop
add
sbb
adc
adc
lock
add
fsubs
add
out
and
pop
loopne
popa
pushf
cmp
es
fildll
jnp
or
cmp
fsubrs
sbb
sbb
mov
and
inc
and
or
or
add
lods
cmp
xchg
dec
fdivs
mov
mov
pop
xchg
inc
rcl
mov
push
scas
sub
mov
adc
pop
mov
mov
fwait
xor
mov
scas
dec
sbb
fisttpll
pusha
xor
out
into
add
push
jns
mov
jmp
fisttpll
xor
inc
jle
pop
cli
ret
push
dec
rorl
xor
loop
loop
dec
and
mov
in
push
dec
jge
add
or
dec
das
mov
aam
fldenv
sarl
jae
mov
rcrb
dec
insb
cmp
lods
ficomps
rorl
mov
sbb
pop
or
sbb
out
cltd
mov
adc
iret
shll
mov
icebp
ljmp
popf
cmp
xchg
icebp
xchg
or
insl
inc
sub
int
mov
or
mov
and
rol
adc
or
scas
mov
in
negb
enter
mov
mov
scas
jecxz
push
xchg
xor
loope
inc
pop
pop
arpl
and
or
mov
in
aad
shll
lcall
mov
gs
nop
inc
mov
xchg
xchg
inc
cmpsl
xor
or
dec
inc
sbb
es
add
mov
enter
xchg
cmc
xor
mov
adc
jns
fdivl
pop
ret
mov
loop
stc
in
pop
adc
add
fs
cmp
add
fwait
pop
pop
add
es
xorl
cmpsb
aad
push
call
mov
xchg
mov
push
outsb
outsl
idiv
sub
scas
and
or
loopne
mov
sbb
imul
test
imul
mov
jnp
push
pop
jo
pop
imul
lock
sub
push
gs
lds
jmp
cmp
xchg
ret
jno
std
daa
jno
jae
pop
push
sub
int3
out
popf
inc
andl
mov
sbb
dec
aad
sbb
jbe
in
dec
int
fstps
push
test
xor
test
enter
mov
sbb
cmp
mov
mov
jge
mov
divb
mov
into
lret
push
dec
pop
inc
push
aam
stos
xor
into
cs
cmp
adc
push
loop
sarl
mov
loop
shr
mov
mov
sarb
jp
mov
and
in
or
in
cs
shlb
mov
lods
addr16
inc
mov
jle
stc
push
jle
push
and
inc
test
sbb
and
push
mov
fs
mov
enter
pop
lods
popf
pushl
loopne
inc
pop
mov
nop
cmp
and
fstl
in
test
pop
pop
push
adc
enter
jbe
pop
nop
subb
xor
movsb
outsl
sub
mov
mov
aad
and
stos
bound
dec
daa
xor
outsl
xchg
iret
xchg
sub
mov
jnp
out
lahf
mov
jo
ss
jbe
cmc
jnp
or
mov
mov
xchg
and
mov
add
add
enter
lcall
bound
test
dec
bswap
cmp
sub
fistps
pusha
icebp
outsl
inc
inc
test
xlat
push
loope
jnp
mov
xor
xchg
sbb
repz
fistps
and
mov
ja
mov
nop
push
pushf
xchg
testb
in
dec
ja
ret
xchg
jne
xchg
lock
and
gs
and
fildl
adcl
push
into
jb
out
mov
rclb
mov
xor
or
mov
xor
xchg
std
leave
or
cwtl
repz
xchg
sbb
sub
je
add
mov
cmp
lahf
cmp
jle
pushf
mov
fisttpl
cld
push
test
cwtl
pop
sbb
insb
icebp
sub
add
nop
ja
repz
mov
mov
popa
sti
data16
cmpsl
iret
mov
mov
icebp
and
shrb
jle
insl
or
xor
jle
or
and
icebp
push
adc
pusha
mov
inc
dec
dec
aas
pop
fidivrl
lds
fildl
data16
xchg
loop
fnstcw
ss
mov
pop
testl
shl
mov
movsl
cmpl
jle
repnz
repnz
in
repnz
push
jle
jl
and
call
cli
in
or
or
div
mov
fcmovb
test
sub
xchg
pusha
out
sub
push
add
push
cmpsl
push
fdivrl
mov
and
mov
xchg
mov
sub
pop
lea
push
dec
add
sub
lods
in
stos
sbb
xchg
xchg
adcl
mov
adc
mov
inc
insl
mov
ljmp
dec
sub
cmp
rcll
sub
subb
rorl
lret
ja
sub
movsl
aam
mov
mov
mov
fstpt
movsl
fsts
popa
sbb
jmp
mov
cmp
push
cmp
xor
and
addr16
sbb
fwait
arpl
out
xchg
aas
sbb
test
inc
and
outsb
xchg
leave
fsts
jnp
push
cltd
or
cmp
shl
mov
popf
inc
adc
andb
daa
inc
daa
int
js
test
add
loopne
in
push
lahf
xchg
or
sbb
shll
xchg
daa
cs
lret
in
lea
xchg
fnstsw
mov
hlt
out
jecxz
mov
mov
xor
rcrl
notb
cli
xor
int3
lea
or
xor
scas
fsubs
nop
bound
test
sbbl
xchg
es
sbb
call
jns
inc
ret
pop
cmp
lds
icebp
das
add
scas
stos
inc
into
cmp
sbb
stc
movsl
insb
outsb
cmp
stos
xchg
mov
push
cmpsb
push
jmp
nop
sub
pop
shl
in
sub
push
movsb
xchg
xorb
js
ss
ljmp
mov
mov
mov
and
add
out
jns
icebp
add
cld
std
dec
and
sub
adc
mov
pop
fwait
cmc
sub
and
jae
jns
lods
mov
gs
inc
mov
stos
pop
or
int
inc
mov
test
mov
sub
pop
inc
lahf
test
dec
dec
mov
test
cmp
mul
add
push
sbb
mov
out
dec
out
push
cmp
pop
insl
adc
je
mov
lret
mov
fmul
pop
and
int3
cmc
rorl
add
fsubrs
jb
sti
jno
mov
clc
call
scas
dec
loopne
adc
jae
dec
mov
inc
test
adc
jge
out
inc
sbb
cs
arpl
mov
cmp
in
add
push
pop
aam
mov
xor
or
jl
adc
mov
mov
xchg
es
test
adc
iret
mov
sub
adc
inc
push
mov
push
xchg
xchg
loope
stos
stc
test
insl
sub
subl
out
lock
jmp
add
imul
sub
jns
sub
int
adc
fbstp
ljmp
dec
cmpsl
aas
xor
mov
and
xor
xor
mov
add
add
fwait
dec
pop
xchg
and
out
out
aam
inc
mov
lea
push
divb
sbb
add
fiadds
addr16
jae
or
sbb
mov
lods
jne
mov
jne
jecxz
stos
cmp
cli
pop
xchg
pop
in
mov
jg
js
pop
enter
aaa
mov
adc
dec
xchg
dec
adc
sbb
stos
ljmp
adc
jp
lret
int3
or
ljmp
adc
imul
dec
dec
js
adc
outsb
addr16
sub
pop
xor
xchg
sbb
repnz
ret
in
lcall
fcomps
xor
std
inc
add
pop
cmp
mov
adc
cmp
or
jae
mov
jb
xchg
sbb
lock
aad
sbb
jle
test
cld
mov
mov
loop
push
adc
pop
mov
aad
gs
sub
or
mov
and
mov
add
imul
fcoms
jle
andl
add
or
pop
mov
add
decb
adc
fldenv
rcrb
inc
xor
mov
dec
inc
inc
movsb
pop
addl
sbb
dec
push
xor
jmp
mov
sbb
pop
into
arpl
pop
push
xchg
pcmpeqd
mov
loop
icebp
add
xor
cmp
push
xor
mov
loop
aas
stos
stos
call
or
mov
mov
adc
sbb
mov
scas
dec
jns
or
ja
mov
je
insb
mul
and
xor
inc
xor
and
pop
push
pusha
nop
fwait
xor
xlat
cmp
pop
mov
scas
fs
cmp
push
lods
insb
and
fldenv
outsb
in
xchg
imul
inc
into
sub
push
fistpl
xchg
cltd
inc
movsb
or
addl
fistps
push
push
hlt
outsb
pushf
xchg
aam
pop
fdiv
adc
arpl
in
xchg
sub
add
mov
mov
out
or
dec
not
jo
cli
cwtl
mov
fwait
daa
shlb
push
scas
shrb
movsb
xchg
sub
jbe
push
mov
push
sar
nop
movsl
test
jno
add
jne
sub
aaa
imul
test
std
das
jge
jp
or
push
cs
dec
cld
pushf
out
insl
inc
out
mov
pop
mov
repz
aam
mov
outsl
insl
mov
lret
ds
loope
daa
mov
fisubl
out
je
icebp
out
aam
sub
and
lds
outsb
sub
imul
test
xchg
inc
dec
int3
pushf
xchg
pusha
sahf
xorl
mov
lcall
mov
mov
sub
cmp
icebp
cmp
cli
pop
int
or
test
test
push
mov
fwait
lret
cmp
pop
jg
push
icebp
repnz
adc
add
lcall
pop
notb
clc
lock
xorb
imul
push
push
inc
ljmp
push
rcl
push
xchg
pop
fcompl
jno
sub
lret
notl
inc
push
adc
das
pusha
adc
pusha
push
outsb
dec
cmpsl
push
mov
and
ret
push
cltd
fisttpl
dec
sbb
mov
gs
xchg
shrl
mov
outsb
mov
mov
ret
mov
adc
shlb
jo
xor
addr16
xor
shrb
lock
adc
fs
in
pop
ljmp
push
cmpsb
lods
cli
sub
fsubp
aam
movsl
bound
sbb
xor
cmp
into
sbb
push
jae
enter
or
scas
cmp
out
xlat
pop
and
mov
in
outsl
jle,pt
fadds
push
xchg
cmpsb
jecxz
pop
push
popa
loope
push
push
std
push
mov
xchg
outsb
mov
test
and
pop
aas
or
cmp
add
aam
or
adc
fildl
push
mov
jp
stos
xor
pusha
mov
lahf
jecxz
and
aas
lahf
scas
scas
repz
adc
cmpsl
pop
pop
fdivl
mov
cmpsl
in
sub
inc
incl
test
jnp
adc
add
jnp
push
inc
jl
ja
push
test
mov
sbb
mov
test
adc
icebp
out
pusha
sbb
mov
mov
sarb
loope
shrb
call
fsts
jmp
mov
roll
xchg
ror
inc
xchg
jg
or
mov
lret
imul
push
sbb
push
jg
loop
mov
inc
lret
test
out
sbb
arpl
mov
and
jge
mov
jno
fldcw
xor
mov
dec
and
mov
push
xlat
cmc
dec
adc
sbb
ret
mov
add
in
mov
jmp
lahf
cmp
das
dec
rcrb
sti
jno
stc
mov
pop
in
xchg
cmpsb
pop
hlt
or
test
mov
dec
dec
dec
adc
nop
aaa
xchg
inc
add
stos
in
mov
or
jae
and
das
in
sub
shlb
ljmp
mull
cmp
fisttpll
pop
adc
mov
pop
mov
add
jns
sbbb
or
jmp
mov
fwait
pop
int3
mov
jl
adc
loopne
or
stc
adc
cmp
lret
mov
aaa
sbb
inc
dec
pop
cmp
lods
mov
fcomi
daa
test
pop
mov
outsl
adcl
sbb
adc
sbb
jae
add
pop
mov
insl
lret
mov
enter
push
leave
test
mov
adc
cmp
jecxz
mov
dec
scas
mov
testl
adc
jecxz
fisubrl
shll
enter
dec
jg
loope
jo
lcall
cmp
sbb
dec
aas
mov
rclb
pmaddwd
sbb
push
iret
loopne
xchg
pmuludq
stos
xchg
xchg
mov
pushf
es
cmp
stos
adc
jg
leave
imul
rcrb
or
repnz
test
lret
sbb
pop
out
inc
mov
pop
lds
stos
adc
push
pop
adc
test
add
arpl
mov
sub
mov
jns
pushf
jb
xchg
lahf
jg
xor
aam
imul
out
pop
xchg
mov
ja
fildl
pop
addr16
cmp
mov
hlt
mov
jb
inc
inc
fnstcw
and
pop
pop
jno
sub
loope
sti
or
imul
cwtl
inc
aad
add
gs
mov
adc
or
cmpb
cmp
add
movsl
or
xchg
push
xchg
xchg
cmpsb
sar
sbb
outsb
add
lods
or
inc
test
lcall
sub
stos
lods
xor
add
aad
pop
dec
in
pop
lea
inc
popf
cmp
js
and
sub
pop
pushf
fisubl
inc
fwait
mov
fsubr
xchg
mov
aam
adc
sbb
hlt
test
cltd
shrl
in
bnd
cmp
inc
mov
out
inc
jo
repz
nop
sub
das
inc
inc
sbb
mov
xchg
and
adc
test
xchg
and
inc
xor
aaa
aas
adc
ljmp
mov
sub
rcr
je
xlat
leave
bound
lock
jnp
popf
mov
nop
scas
shrl
imul
jg
xorl
daa
xchg
repz
add
cmp
insl
iret
shlb
lret
xor
and
ja,pn
mov
sub
inc
xor
inc
sub
xor
dec
mov
and
fbstp
mov
xchg
adc
dec
sbb
mov
sbb
mov
cmc
repnz
testl
pop
push
cmpl
mov
les
and
cmp
xchg
jnp
pop
adc
out
lock
int3
test
out
mov
jns
pop
test
mov
mov
ja
outsb
jge
cmp
in
mov
fwait
pushl
xchg
mov
mov
popa
lahf
shr
data16
ss
and
fwait
push
push
pop
cmc
inc
mov
inc
stos
pusha
sub
adc
xor
cmp
out
dec
sub
mov
test
out
fidivrl
es
xor
push
inc
push
push
loop
mov
out
xor
lahf
fimull
jle
js
cmc
sahf
mov
fldt
mov
cs
aas
pop
outsl
push
gs
lret
loop
leave
lods
sahf
mov
pop
jb
es
and
add
fwait
jnp
push
out
jl
pop
mov
sbb
or
mov
clc
xchg
pushl
lahf
xor
dec
pushf
imul
add
mov
fcoml
or
fs
xchg
lock
pop
sbb
jae
inc
test
and
cwtl
iret
add
dec
mov
imul
mov
cmc
mov
sbb
adc
add
lock
dec
push
cmp
shr
cmp
aas
mov
sbb
inc
call
push
ret
add
sub
xor
and
movsb
mov
mov
fldt
jae
sub
mov
mov
jne
mov
sbb
test
sti
adc
pop
adc
mov
cmp
push
adc
fnstcw
ljmp
or
sbbl
pushf
mov
outsb
or
je
push
cmp
loopne
out
xchg
or
movsl
or
jbe
ficomps
cmp
fildll
mov
inc
gs
and
dec
xchg
lods
xorb
fsubrs
pop
popf
mov
in
xor
jo
daa
rcl
xchg
xchg
inc
out
and
rorb
sub
pop
ret
push
jmp
lock
xchg
lret
das
nop
outsb
mov
xchg
xor
lahf
lea
xchg
mov
pop
push
shl
call
sub
xor
cltd
push
jge
flds
cmpsb
jbe
int
cmp
stos
adc
dec
jne
mov
push
dec
fidivl
insl
test
gs
add
lods
arpl
repnz
pop
mov
les
inc
jne
dec
shlb
mov
hlt
mov
ret
lods
outsb
loop
xlat
aam
xchg
adc
int3
adc
inc
iret
test
sub
cli
adc
test
in
dec
repnz
xchg
scas
xor
cmc
movsb
jns
test
loop
insl
inc
repnz
or
jmp
clc
cld
mov
xchg
mov
cwtl
mov
pop
dec
push
xchg
stos
dec
fs
lock
sub
dec
sbb
stos
jb
je
push
mov
ja
push
mov
popf
xchg
cmp
sbb
jnp
out
lods
inc
imul
push
inc
cmp
nop
dec
jnp
fldenv
mov
loope
mov
push
xor
sbb
loop
subb
mov
repnz
add
ret
insb
adc
mov
in
fistpll
push
in
js
xor
sub
cld
cmp
daa
aam
out
data16
xor
out
xchg
out
cmp
cmpsb
add
shlb
popa
out
or
pop
stos
mov
mov
mov
jae
inc
push
lcall
add
scas
lods
shl
addb
jle
subb
mov
mov
gs
sbb
scas
dec
adc
inc
sub
xchg
cmpps
add
mov
andl
stos
xchg
inc
mov
inc
cmpsb
or
leave
xor
data16
movsl
push
cmp
sbb
aaa
aad
inc
outsb
inc
push
jp
insl
frstpm(287
mov
lods
mov
lods
push
push
push
inc
lea
mov
pop
pop
push
mov
fwait
push
jle
fcmovb
loope
adc
dec
nop
mov
adc
hlt
add
mov
xor
pop
jbe
sbb
mov
pop
rcrb
xchg
pop
add
mov
loopne
adc
lret
lods
sbb
shrb
ljmp
or
mov
mov
and
aas
mov
enter
xchg
or
xchg
setnp
cmc
sbb
scas
fistpl
insb
or
stc
mov
sbb
adc
sub
fbld
pushl
xor
pop
cli
cltd
out
lret
sahf
fwait
xchg
out
ret
or
pushf
aad
or
stos
sbb
pusha
cwtl
mov
cmp
lret
sbb
lret
into
xlat
dec
rcrl
fcmovnbe
insb
adc
call
das
and
xchg
add
scas
sub
test
jle
add
call
stc
mov
fsts
add
add
adc
lahf
sar
sbb
scas
popf
in
pop
jns
add
mov
cmp
and
scas
xchg
out
push
sub
movsl
sub
gs
rorl
dec
stos
in
fcos
out
xor
shll
test
mov
jmp
call
in
sbb
aas
inc
dec
cmp
add
icebp
negl
mov
xor
enter
adc
xchg
insl
xor
mov
xchg
int3
in
mov
iret
movsl
push
pop
out
clc
mov
or
jg
dec
in
jo
inc
orb
lret
xor
loopne
jnp
inc
sub
outsl
cmp
push
lds
fstps
movsb
out
andw
ret
lcall
mov
into
lods
shlb
inc
or
aaa
pop
sub
ljmp
icebp
les
movb
es
and
inc
xor
icebp
and
dec
push
jmp
cs
mov
sbb
cmpsb
ficomps
mov
clc
pop
ret
call
cmp
bound
jg
and
adc
inc
xchg
leave
push
rcrb
lea
loope
inc
insl
fdivrp
xchg
push
andl
je
das
outsl
cmp
push
push
or
js
repnz
mov
cmpsb
sub
loop
fdiv
lods
pop
push
testb
mov
popf
test
jnp
test
insb
push
mov
pop
push
cmpsb
xor
add
ficoms
shrw
sub
jnp
pop
les
ja
or
hlt
das
and
push
or
mov
pop
rcrb
pusha
shrl
pop
cld
les
mov
shrl
sbb
jmp
or
in
or
sbb
dec
rcrl
mov
jmp
das
fld
daa
and
inc
push
fimuls
or
loope
lret
xchg
das
cmc
mov
sub
or
push
push
mov
loop
aad
push
dec
cmpsl
inc
mov
adc
icebp
movsl
inc
sbb
stc
push
stos
popf
daa
paddusw
insl
lahf
in
movl
int
mov
cmpsl
repnz
enter
xchg
inc
lcall
cmp
jp
je
sub
mov
clc
int3
jmp
pop
lahf
popf
dec
loopne
push
mov
fimuls
sub
in
xor
stc
inc
cmp
or
inc
notb
dec
sbb
push
inc
mov
stos
stos
outsl
inc
dec
rclb
cld
adc
jnp
or
mov
jno
pop
imul
xor
and
mov
inc
inc
fdivs
push
jno
lods
stos
jno
mov
push
sub
sbb
arpl
test
les
add
xchg
push
and
add
or
inc
adcb
popf
xor
ftst
scas
jle
lcall
aam
add
fisubl
icebp
outsl
jnp
cmpsb
cmp
pushf
push
fsts
ss
inc
jecxz
in
les
jne
std
test
inc
ficoms
jecxz
dec
pop
xor
ficoml
iret
mov
inc
jg
ds
ja
insl
in
pop
adc
int3
stos
js
pop
pop
add
jge
mov
sbb
rol
pop
lcall
xchg
mov
xlat
js
arpl
xchg
icebp
xchg
jmp
mov
leave
in
imul
add
push
lods
push
or
adc
mov
stos
mov
subl
xchg
jp
loop
hlt
shr
fs
push
push
pop
xchg
mov
push
clc
call
adc
in
ss
arpl
cmc
cmp
or
mov
or
movsl
enter
push
dec
mov
hlt
sub
int
mov
in
les
adc
mov
mov
mov
sbb
xor
push
incb
pop
insb
sbb
dec
cmp
in
mov
mov
or
scas
inc
dec
cltd
lcall
loop
xchg
subb
push
mov
mov
nop
fstsw
lock
or
testl
dec
fstps
mov
cmp
in
mov
xchg
ficompl
fcoml
xor
cmpsl
imul
or
ds
adc
xchg
and
sti
mov
sbb
push
add
cltd
or
jge
mull
out
shlb
rcrl
mov
xor
lret
stc
out
push
dec
pop
pusha
data16
out
pop
adc
mov
ljmp
xchg
adc
mov
cld
jbe
imul
lret
xorb
add
mov
inc
cwtl
addr16
in
add
sub
sbbl
jo
fldl
shlb
sub
std
mov
pushf
or
aas
fldl
mov
das
cmc
pusha
popf
aad
xchg
ja
add
insl
nop
fidivrl
imul
xchg
arpl
popa
sub
mov
test
jno
js
movsl
test
mov
cld
and
push
test
mov
cmp
iret
pop
loope
ret
mov
mov
lret
sbb
inc
gs
push
or
jmp
popf
mov
jno
ret
lock
xchg
jecxz
hlt
and
dec
loope
sahf
or
push
addr16
adc
pop
push
jo
mov
sub
scas
push
je
mov
testb
mov
sbb
test
outsl
push
pusha
add
jg
dec
lret
or
xlat
xor
mov
jle
jl
jns
add
mov
dec
mov
push
pop
and
dec
dec
movsb
jl
loopne
insb
push
fwait
sbb
push
mov
mov
iret
push
gs
push
rorl
out
pop
ret
sbbl
scas
adc
jle
mov
pushf
shlb
mov
ja
fstpt
push
inc
mov
add
inc
mov
outsb
jno
jmp
fildll
pop
cmp
outsl
sub
pop
out
jae
inc
or
sbb
mov
dec
push
sub
popa
push
push
pop
rcll
mov
push
cmc
or
stos
mov
rol
xchg
push
in
fstpl
push
mov
push
jg
aad
pop
dec
fwait
cmp
notl
mov
arpl
lcall
aad
bsf
fldcw
xor
iret
inc
rcll
std
push
popf
mov
dec
push
fnstcw
xchg
adc
cmp
in
in
popa
cmpsl
clc
jle
sti
std
add
dec
adc
adc
movsb
cmpsb
in
imul
jb
ficompl
lret
aas
xchg
idivl
mov
push
test
ljmp
sub
cmp
jnp
mov
jno
mov
test
bound
pushf
imul
mov
xor
shl
stc
into
cmp
rclb
fcoml
xchg
cld
fwait
pop
negl
fsubrs
inc
dec
inc
hlt
clc
pop
xchg
in
subb
ljmp
scas
cmp
aad
mov
and
add
sub
arpl
jl
pop
xchg
std
insb
ret
je
cmp
nop
inc
sub
xlat
adc
test
int
test
add
lahf
ss
inc
push
cmp
es
inc
pop
xchg
pusha
sbbb
clc
jno
rolb
adc
repz
mov
clc
pushf
xchg
push
mov
and
insl
in
lea
adc
enter
cmp
mov
idivb
mov
sarl
xor
lret
or
fisttpl
fninit
sbb
adc
cmpsl
push
dec
lea
mov
jge
negb
fwait
lret
popa
push
and
mov
add
test
fmuls
or
test
sbb
add
sbb
call
clc
sub
mov
mov
mov
mov
jmp
xchg
aas
sub
sub
call
pop
sub
push
leave
in
lea
cmp
push
add
gs
arpl
cltd
ljmp
fstps
imul
xchg
outsb
adc
mov
add
push
sbb
adc
rorb
js
xchg
xchg
sti
pop
rcll
loope
imul
in
rcl
es
pop
jnp
int3
xchg
jecxz
mov
roll
jns
shlb
mov
dec
cmp
mov
rorb
mov
or
subl
ret
cmp
add
pop
ja
shll
out
lds
cmc
dec
xchg
mov
cmp
addr16
cltd
sub
mov
xchg
xor
fs
sub
dec
je
arpl
xor
je
adc
mov
jecxz
ret
sahf
mov
pop
mov
sti
jl
jo
or
fisubrs
sub
popf
sbb
int3
pinsrw
push
push
add
and
test
mov
int
jnp
shl
mov
push
int
ljmp
and
fcmovnu
out
or
and
mov
fistpl
loope
lock
hlt
test
js
out
cmpb
jns
mov
sub
es
mov
sahf
sub
popa
insl
das
test
mulb
outsb
jae
mov
adc
scas
jbe
stos
sub
or
sti
push
in
push
and
in
push
fists
pop
in
imull
test
mov
mov
jb
cltd
andb
or
sub
clc
mov
xor
adcl
push
in
daa
iret
jbe
dec
imul
pop
outsl
aas
or
negb
pop
jge
mov
xchg
xor
es
jae
ja
pop
ljmpw
lods
orb
ret
cmp
cmp
sub
pop
dec
jle
jo
jle
js
rcrb
jl
in
xchg
push
gs
add
mov
outsb
inc
rcrl
dec
xor
fsubr
sbb
sahf
sbb
fdivl
fs
out
add
repnz
mov
dec
pop
pop
sti
testb
in
xchg
cmpsb
cmp
sub
jge
pop
sub
jae
xor
sbb
xor
mov
fcomps
sub
mov
out
and
pop
rcl
std
pop
and
jge
add
insb
xorb
stos
adc
in
and
insl
sbb
sbb
imul
adc
inc
int3
cmc
mov
repz
jbe
jne
sub
mov
jns
mov
mov
stc
in
adc
sbb
or
inc
mov
into
or
xchg
mov
xchg
mov
subb
fincstp
aaa
inc
aaa
cmp
xor
loope
cmp
leave
cmp
popa
mov
jecxz
aas
repz
add
cld
xchg
xchg
mov
cmovns
xchg
dec
mov
stc
dec
cmp
push
incl
pushf
mov
push
mov
mov
jle
loope
ret
xchg
dec
enter
pop
cs
aad
push
rorl
or
stos
mov
xchg
dec
cli
enter
stos
decb
repz
outsl
subl
mov
push
mov
xor
ss
sbb
shll
movsl
dec
sub
gs
cmp
insb
pop
cmp
insb
test
push
out
pusha
mov
lds
hlt
sbb
pop
scas
sti
xor
and
fcoms
sub
mov
popa
pop
shrb
pop
arpl
lahf
mov
js
mov
mov
ret
imul
inc
xor
jmp
punpcklbw
cltd
rolb
or
ret
loop
pop
cmp
sarl
cmc
and
mov
sub
jle
sbb
shll
data16
mov
std
rorl
jp
push
call
and
pop
push
aad
mov
clc
cmp
dec
or
and
call
push
stos
or
scas
or
xorl
push
mov
fs
jae
push
add
mov
js
gs
and
ret
sti
test
cwtl
push
scas
mov
out
lret
mov
mov
repz
fldenv
scas
mov
sub
mul
sub
imulb
or
lods
jbe
ret
xchg
sub
daa
shrb
mov
test
inc
jb,pt
movsb
cmp
dec
mov
ja
mov
les
mov
cltd
xor
pop
shll
or
jnp
or
jmp
sub
pop
pop
push
push
xchg
add
sbb
add
dec
hlt
das
mov
test
and
stos
shrl
adc
test
xchg
ss
daa
mov
sbb
pop
fadds
imul
adc
pop
add
adc
addl
jbe
push
idivl
cmp
xlat
sbb
daa
xchg
leave
imul
sbb
mov
or
inc
stc
pmulhw
movsb
outsb
mov
test
rolb
das
jp
jbe
cmp
aad
arpl
movsl
out
mov
gs
sub
xchg
push
push
sbb
fiadds
cltd
xchg
into
push
ds
testl
pop
jne
nop
mov
and
out
mov
in
pop
mov
cmp
sub
enter
dec
adc
in
in
aam
mov
cmpsl
sub
cwtl
scas
lret
rolw
cmc
push
xor
sub
ret
add
or
jb
test
dec
ret
bound
add
pop
jmp
push
out
adc
mov
ret
push
jne
push
loop
mov
and
nop
cmpsb
pop
out
inc
jmp
inc
jl
seto
dec
dec
mov
loopne
lea
jne
push
jle
jle
jmp
mov
xchg
scas
inc
push
adcl
mov
dec
jb
cld
cltd
inc
cmpsb
or
testl
add
mov
inc
xor
mov
incl
imul
pop
daa
out
int
mov
cmpsl
mov
dec
icebp
and
leave
dec
jl
adc
mov
sbb
pop
pop
stc
loop
ds
arpl
jae
repz
mov
mov
add
and
lods
fcomip
repz
xchg
cmp
push
lret
dec
jp
inc
ljmp
aad
push
and
mov
and
push
jle
push
sub
iret
imul
aas
int3
sahf
in
out
mov
cmp
rcl
popf
scas
fs
cmpsl
xor
fucomi
in
xchg
dec
mov
lds
iret
icebp
push
push
popa
cwtl
or
cmc
xor
nop
or
or
insl
cmp
push
mov
jle
aad
xor
push
and
lods
inc
inc
mov
jae
push
pop
repz
fwait
pop
clc
mulb
sti
cmp
adc
stc
lret
push
mov
enter
cmp
push
jb
push
pop
mov
mov
push
jnp
mov
xchg
int
mov
dec
push
in
loope
mov
out
aaa
stos
push
or
adc
loope
push
fs
aaa
test
orl
pop
scas
pushf
ret
fldenv
les
ret
mov
fdivrs
add
mov
inc
and
inc
xchg
pop
cmp
test
and
cwtl
xor
outsl
leave
inc
xchg
xchg
mov
mov
dec
dec
loop
stc
xor
daa
adc
mov
mov
xchg
rcll
lock
test
ret
frstor
lcall
negb
push
insb
add
xlat
mov
outsb
mov
jl
fwait
call
push
pop
dec
and
ds
xor
xchg
stc
mov
mov
dec
out
mov
hlt
call
inc
pop
clc
int3
sub
xor
jno
lock
xchg
and
mov
sub
ret
mov
test
stos
sub
add
enter
xor
cmp
test
lcall
inc
stos
jmp
mov
inc
mov
add
sbb
cmp
jb
push
fimull
pop
dec
fimull
fwait
je
sbb
and
dec
das
or
xlat
jl
je
push
adc
stc
leave
sti
mov
xor
mov
cmc
enter
mov
jb
add
test
in
js
out
adc
stos
pop
jge
shll
gs
frstor
jb
cmpl
push
fdivr
inc
sbb
sub
jae
cmpsl
fistpll
push
push
jp
xchg
pop
aam
fimuls
cmp
insl
and
dec
sbb
dec
dec
fmull
lret
nop
ss
test
jo
adc
cs
cmp
bound
les
and
cmp
imul
mov
gs
xchg
stos
pop
aaa
sbb
mov
mov
aad
aam
adc
popf
cmp
mov
fsubrs
add
out
out
cmp
xchg
ljmp
add
test
insb
fwait
jae
inc
jnp
xchg
aam
xor
pop
rolb
push
mov
std
shl
insb
push
mov
movsb
xchg
cmc
jns
jge
push
scas
push
in
dec
pushf
std
test
xchg
adc
adc
pop
mov
mov
pop
repz
mov
and
out
rolb
cli
imul
popa
bnd
icebp
pushf
dec
daa
enter
adc
inc
mov
jmp
push
sbbb
sbb
insl
adcb
aaa
cltd
leave
unpckhps
std
xor
in
loop
jno
vprotb
add
mov
das
test
and
bnd
pop
mov
out
outsl
insb
out
int
xor
adc
aad
inc
jo
sbb
movsb
ds
push
or
fwait
test
jae
pop
lahf
xchg
or
sahf
xchg
pop
xor
lea
sbb
mov
stos
pusha
ljmp
scas
push
and
push
dec
adc
sub
icebp
insl
je
inc
add
adc
dec
cltd
cld
sbb
in
pop
aas
xorb
leave
sbb
push
insl
lods
sarb
jmp
mov
shll
sarl
xchg
test
sbb
push
dec
jns
lods
leave
push
arpl
cmp
into
out
sahf
jmp
xor
in
mov
mov
mov
and
cmc
mov
or
jmp
mov
in
lahf
repz
mov
ficoms
dec
and
pop
sbb
xchg
xorb
xor
cmp
sub
mov
loopne
inc
stos
or
test
adc
cmpsl
adc
cmc
xchg
pop
add
aas
lods
sbb
popf
pop
mov
loopne
imul
cltd
mov
test
lea
clc
aaa
dec
cmc
rorl
dec
int
xor
cmp
test
ja
or
or
jge
adc
test
or
fadd
popa
inc
insl
jg
sub
push
xchg
adc
negb
dec
aaa
into
inc
push
mov
scas
lods
fadds
leave
in
dec
dec
push
cmpsb
stc
insb
shlb
fcom
outsl
push
test
mov
push
jp
popa
sub
jb
cmp
or
add
into
and
jnp
dec
rol
xor
mov
xor
ds
cld
sbb
sbb
insb
mov
lds
xor
sbb
gs
xor
test
sarl
pop
daa
sarl
cwtl
mov
mov
out
lods
aas
xchg
ljmp
push
ret
push
mov
or
lock
cmpb
lds
clc
lcall
or
cli
ljmp
in
cltd
add
adc
icebp
mov
lods
or
dec
xchg
stc
mov
out
push
cmpsl
shr
xlat
inc
pop
add
push
dec
into
jmp
sbb
mov
movsb
sub
pop
mov
dec
outsb
push
xor
jp
xor
pop
adc
or
fdivrl
ror
aas
xchg
daa
sti
rcr
cmp
ds
adcb
idivl
push
adc
cmpsl
pop
cmpsb
arpl
fcmovnb
or
pop
push
inc
mov
jae
mov
scas
js
mov
push
mov
pop
in
test
fwait
mov
data16
lret
jo
xchg
imul
jbe
fnsave
mov
mov
imul
push
adc
aaa
xlat
call
dec
add
icebp
mov
pop
dec
insb
sbbb
fcmovb
mov
int
daa
bound
xchg
mov
mov
sub
cwtl
iret
in
roll
call
mov
push
andl
loope
movsl
add
or
or
mov
inc
lret
add
shll
ret
jmp
test
mov
jle
testb
fxtract
insl
dec
cmc
adc
push
sub
mov
rcll
sar
ret
enter
inc
in
and
mov
mov
mov
mov
sahf
ss
pop
rcrl
add
out
push
jns
xor
cltd
bound
pop
or
arpl
fstps
ss
test
je
dec
aam
cmp
mov
lret
clc
js
pushf
sbb
je
hlt
push
xor
push
hlt
cmp
push
xchg
mull
mov
push
cmp
sub
lea
fistpl
and
repnz
cmp
jo
sub
leave
test
sbb
adc
and
jns
mov
bound
rcrl
addr16
cs
mov
inc
dec
lea
mov
call
nop
fidivs
aam
outsl
and
adc
mov
movsl
jae
scas
pusha
dec
and
and
mov
xorl
inc
orl
sbb
cwtl
cmp
inc
fistpl
repnz
loop
lods
les
rcll
cmp
outsb
dec
xor
xchg
cmp
lcall
repz
dec
cmp
push
popf
dec
add
scas
or
adc
push
sahf
add
popa
daa
jp
ficoml
inc
imul
rolb
inc
mov
cmp
dec
xchg
jecxz
hlt
mov
shrl
dec
cmp
imull
jg
sbb
pop
adc
pop
gs
addr16
mov
aas
dec
roll
roll
pop
push
ljmp
dec
and
mov
sub
lret
pop
xchg
jb
popf
jbe
push
test
pushf
push
aas
jns
enter
jns
jg
mov
xchg
mov
gs
std
pop
mov
dec
sbb
subl
push
sub
pop
mov
je
pop
add
mov
push
mov
je
iret
lds
and
push
ret
movsl
sahf
sub
xchg
insb
jnp
lock
and
psraw
jp
lods
jle
popa
out
sbb
faddl
aaa
outsl
mov
repnz
mov
xchg
negb
gs
jnp
cs
inc
add
addr16
jbe
clc
add
ds
enter
pusha
or
jl
ljmp
pop
dec
jecxz
ficomps
jle
lock
popa
orl
sbb
icebp
push
push
movsb
push
mov
cmpsb
pop
les
xchg
sti
mov
jno
faddl
scas
aam
or
ficoms
enter
mov
inc
push
outsb
and
repz
clc
int
pop
push
loopne
insl
test
addb
test
test
and
pop
mov
jl
mov
mov
inc
jnp
ss
push
int3
push
xor
adc
jne
popa
stos
test
lret
loope
sbb
test
xchg
and
cwtl
mov
dec
pop
inc
leave
ret
pop
mov
js
fs
jo
out
dec
insl
nop
xchg
xor
lods
pop
cmpsl
push
pop
jle
xor
test
cmp
lods
mov
pop
push
mov
sub
pop
aad
xchg
mov
and
and
jecxz
stc
sub
xchg
fs
mov
push
jb,pt
and
push
rcr
sub
les
outsb
aas
clc
mov
mov
xor
jns
cmc
xor
insl
loopne
outsb
bound
icebp
es
push
aaa
sbb
cli
sbb
repnz
jo
mov
mov
push
adc
xchg
dec
mov
inc
lret
sbb
sahf
push
in
or
out
dec
imul
add
sub
int
mov
push
std
pop
lret
fsubrp
pop
xchg
popf
inc
lods
int
cmp
int3
push
stos
pop
lock
dec
test
or
mov
mov
sbb
fldl
sbb
mov
mov
push
jbe
sbb
jns
ja
xchg
std
out
movsb
popf
repnz
inc
sbb
insl
or
int3
pushf
popa
enter
inc
pop
inc
xchg
and
push
mov
jecxz
js
ret
popl
push
mov
test
stos
loopne
jno
push
or
jge
xor
jecxz
sbbl
mov
adc
std
push
push
cmpsb
and
into
leave
lods
and
pop
fwait
cmp
orl
daa
cld
jecxz
je
pop
fdivrs
test
mov
jl
sub
fstpt
jp
lret
sbb
enter
insb
mov
dec
aas
das
cmpsb
mov
int3
and
lods
lea
ss
xor
xchg
pop
ja
fwait
push
shlb
xchg
cmp
insb
push
pop
popa
pop
movsl
xchg
ss
js
es
out
push
cmp
dec
push
loope
arpl
int3
mov
jb
lea
push
popf
daa
divl
sbbl
inc
xchg
aad
mov
jo
leave
inc
xor
aad
dec
push
cli
std
push
fsubrs
repz
or
mov
mov
xor
or
iret
test
jg
cmpsb
je
out
push
xchg
xchg
xchg
fstpt
stos
in
sub
sbb
insl
xchg
dec
push
or
lcall
incl
rorl
cmc
call
push
dec
pop
outsl
dec
nop
lret
mov
das
mov
adc
sub
clc
pop
add
into
sar
test
pop
fadds
mov
push
lret
inc
imul
mov
mov
ss
inc
jnp
jo
out
loope
pop
jo
and
out
popa
adcl
mov
popa
jp
mov
and
push
mov
cmp
shr
dec
and
int3
shll
lcall
mov
imul
fdivrl
out
inc
stos
pop
popa
add
push
stos
outsb
ljmp
or
fildl
mov
xchg
mov
rol
addr16
or
pop
mov
pushf
and
sbb
xor
les
inc
push
mov
and
pop
mov
fwait
lret
aad
sub
xor
sub
or
loopne
push
cmp
and
fistl
xchg
inc
adc
xchg
cltd
ds
cvtdq2ps
push
loope
xchg
bound
adc
push
pop
cmp
inc
into
push
mov
sbb
loopne
mov
adc
in
loope
jno
mov
mov
daa
clc
xchg
lret
mov
add
repnz
push
shl
cli
ficoml
mov
lret
daa
xor
and
adc
in
test
or
mov
pop
decb
lret
incl
or
cmp
push
push
test
ficomps
fwait
sbb
sub
add
dec
adc
cmp
pusha
or
sbb
pusha
mov
cld
scas
or
sbb
into
push
xchg
rcr
xchg
stos
xchg
ds
xchg
add
fs
imul
orl
sbb
test
cmp
andb
loop
jle
out
push
cli
fsts
xchg
add
xchg
xchg
pop
sbb
shlb
call
xor
xor
fistpll
cli
nop
xlat
das
adc
push
je
in
cmpb
pop
fisubs
adc
stos
jl
icebp
outsb
lretw
sub
add
out
out
pop
mov
sahf
cmpsl
rolb
or
out
pop
mov
insl
mov
push
shl
ret
xor
cmp
ja
sbb
leave
iret
push
mov
mov
jbe
sbb
call
insl
xchg
fld
sbb
into
cmp
faddl
add
addr16
jle
add
into
adc
out
cli
in
test
cs
addr16
in
addl
mov
stos
pop
clc
add
cwtl
xor
cmp
xor
lds
adc
jnp
adc
repnz
cmp
movsb
cmc
inc
pop
cmp
inc
int3
hlt
xchg
jg
cld
mov
aaa
rol
and
call
addb
pop
mov
cs
dec
cld
mov
xorb
test
jbe
add
mov
lcall
or
lcall
sub
adc
repz
nop
adc
movsb
jmp
loopne
sbb
sti
lods
cmp
stc
ja
cmpsb
push
lret
jmp
dec
pop
cmpsb
test
fnstenv
mov
xor
xchg
iret
mov
cs
xor
lods
sub
int3
pop
xchg
jb
jbe
stos
repnz
inc
imul
mov
sub
or
lcall
and
test
shrl
flds
pop
jp
mov
xor
add
bound
add
dec
fadd
mov
mov
add
adc
fsubs
repz
arpl
mov
outsl
cmpsb
adc
lock
aad
adc
test
je
fstp
jbe
push
jno
leave
pop
ret
mov
mov
mov
div
lods
ror
xchg
imul
into
jp
cwtl
mov
movsl
fdivrp
lds
add
jb
cmp
dec
andl
in
add
push
outsl
outsl
outsb
jle
jge
inc
dec
jp
orb
iret
mov
cmp
int3
adc
sub
mov
xlat
insb
add
jecxz
mov
sub
and
push
adc
xor
add
jns
pop
test
and
sub
jo
sbb
jno
decb
pusha
dec
outsl
imul
and
cmp
mov
mov
fwait
lods
add
inc
mov
pop
cmp
fwait
clc
xchg
mov
sub
jl
cld
imul
push
movsl
ja
push
dec
inc
pop
ret
inc
mov
or
iret
sbb
dec
push
jno
mov
lret
push
mov
sub
sub
sub
hlt
loopne
push
cmp
subl
sar
lret
movsb
divl
or
pop
lods
mov
xchg
mov
push
or
xchg
xor
mov
mov
call
or
lret
add
and
xor
mov
popf
test
jb
cmp
cli
orb
cwtl
rorl
dec
popa
dec
mov
mov
ret
sahf
out
pop
pop
or
outsb
mov
cltd
push
dec
fwait
repnz
xchg
fsubp
pop
jns
rorb
shlb
pop
rol
mov
pop
imul
jp
jae
sbb
sub
jl
int
leave
xor
repnz
add
jl
xlat
enter
test
push
sbb
fistpl
and
stos
cmpsb
cwtl
mov
cmp
mov
and
rorb
sbb
js
out
dec
addr16
sbb
sbb
test
xchg
and
pushf
cmp
ficoms
push
pop
mov
fimull
scas
popf
call
cmp
xorl
aaa
shrb
lret
out
movsb
add
sub
hlt
arpl
fs
mov
fidivrs
fcmovnu
fisttpll
or
ds
insl
cli
andb
pop
cmpsb
xchg
adc
sahf
imul
add
pusha
decb
js
inc
cs
ret
push
int3
xchg
pop
adc
int
jb
cmp
pop
jmp
sbb
pop
lret
push
ficoml
cld
mov
clc
mov
mov
idivb
cmp
fs
mov
mov
leave
adc
ljmp
out
adc
mov
adc
or
push
nop
les
pop
jmp
add
aad
daa
out
mov
lahf
sbb
xchg
filds
stos
fs
lret
xchg
rclb
imul
or
inc
pusha
push
push
xchg
sbbl
pop
les
or
repz
adc
dec
cwtl
mov
mov
hlt
dec
je
xchg
pop
sub
mov
cli
push
pop
rolb
push
movl
jo
loope
imul
jmp
cs
aam
scas
xor
xchg
dec
jp
sub
ds
pop
cmp
lcall
push
xor
dec
mov
sbb
enter
inc
push
movsl
jno
push
scas
pop
xchg
in
enter
addb
sbb
jno
repz
fistps
push
sbbl
mov
add
xor
fsubrs
jle
lahf
xchg
sub
push
fnstsw
inc
xchg
pop
or
push
stos
mov
shlb
and
and
xor
pop
shld
jb
mov
ret
push
imul
jb
inc
sbb
sti
call
dec
add
mov
mov
repz
xlat
dec
xlat
stc
hlt
mov
repnz
mov
add
adc
cli
insb
inc
jnp
sbb
or
jno
lods
movsl
mov
aam
pop
mov
mov
ja
insl
push
rclb
cmp
ljmp
add
pop
out
adc
push
in
xlat
push
and
pusha
scas
fwait
push
cwtl
lds
stos
outsl
icebp
jne
in
in
mov
notb
mov
sub
jle
lret
iret
fwait
int
aad
cmp
ret
pop
es
rcr
push
sti
push
ss
test
dec
inc
popf
das
jns
dec
push
jle
mov
imul
incl
rcrl
pop
xor
jmp
lea
lcall
dec
out
sbb
inc
ljmp
mov
lret
test
pop
rcrl
mov
addb
jns
pop
jb
jge
cs
fiadds
fstpt
fwait
lds
xor
mov
jae
imul
and
lds
push
jnp
xchg
sub
inc
add
mov
lock
lds
dec
dec
cmp
mov
dec
jo
mov
outsb
out
clc
icebp
mov
xchg
add
xor
inc
out
dec
cmp
packsswb
add
mov
into
push
repnz
mov
call
push
or
add
lcall
shl
cmp
adc
inc
fdivrl
dec
and
mov
xor
movsl
cmp
mov
sbb
pusha
call
jge
in
pop
clc
in
mov
sub
das
jo
mov
mov
xor
push
push
mov
xor
mov
mov
mov
and
adc
add
iretw
subb
mov
lods
outsb
js
repnz
cmp
lea
xchg
loop
xlat
shrl
cmpsl
pop
adc
out
push
aas
ja
cmc
notb
jno
sub
stos
scas
mov
mov
cli
lret
adc
hlt
inc
addr16
fisttpl
xor
fnop
adc
dec
add
push
leave
dec
adc
or
sbb
aad
ror
push
mov
push
add
ret
push
dec
shl
inc
clc
cmp
lret
dec
xchg
mov
mov
push
xlat
push
into
addl
ret
cmp
cmp
dec
fs
jecxz
in
xchg
adc
sbb
mov
int
sub
xchg
dec
or
inc
cld
dec
dec
push
out
test
fidivs
jno
mov
ret
mov
movsl
addr16
insb
lods
inc
sub
xchg
pop
pop
insb
pop
addr16
pop
outsb
movsb
dec
adc
shl
pop
and
mov
loopne
mov
pop
outsb
jnp
mov
and
pop
push
popf
data16
mov
sbb
shrl
jmp
in
popf
stos
xchg
push
pop
cmp
arpl
std
je
jmp
and
insb
insl
or
lahf
imul
cli
int
stc
pushf
lcall
cmp
inc
xchg
mov
ret
shl
sbb
in
je
in
ffree
or
nop
and
cmp
lea
into
in
jno
cs
ret
out
rcl
scas
pop
popf
or
mov
mov
and
aaa
mov
imul
sub
sahf
mov
fwait
or
inc
dec
pop
jae
dec
add
aas
cli
add
push
cli
jns
and
mov
sub
cmp
cmp
add
jbe
repnz
fidivrl
or
idivb
adc
subl
pop
jge
aas
xor
repnz
int3
loopne
jmp
jae
lea
cmpl
hlt
xorl
loope
jg
cmp
xchg
fnstcw
push
sub
xchg
cmp
cmpsl
insw
das
ss
cld
pushf
jb
shl
std
inc
push
add
jmp
lods
mov
sbb
jp
sbb
shlb
mov
lcall
sbb
lahf
mov
sub
in
shrb
popf
mov
test
push
cld
shr
jle
and
xlat
cmpsl
fnsave
in
jo
xchg
ret
ss
mov
sbb
jl
or
mov
add
sbb
push
imul
loope
and
dec
dec
push
mov
addl
aaa
xlat
xor
push
jbe
repz
xchg
adc
xchg
stc
out
and
lds
pop
scas
repnz
add
jg
jl
loopne
out
jmp
mov
in
rclb
sbb
ja
inc
jecxz
mov
pop
add
out
adc
hlt
ret
jae
jmp
lahf
pop
ret
sub
pop
jmp
rclb
clc
dec
inc
shlb
push
push
arpl
imul
mov
sbb
jb
in
or
xchg
pop
sbb
mov
push
mov
in
imul
push
push
and
sub
add
mov
sub
pop
shlb
cs
adc
outsb
lahf
repz
in
in
dec
jmp
mov
das
dec
arpl
jne
ret
ret
and
push
arpl
clc
aad
add
cmpsl
imull
mov
xor
push
popf
stos
es
jg
push
cld
out
push
mov
popf
lods
imul
or
popf
cwtl
mov
cs
adc
cmp
rcrb
add
jno
das
jbe
sarb
loope
mov
fistpl
test
push
adc
adc
int3
and
xchg
insl
das
out
imul
sbb
cmp
cld
dec
adc
push
dec
cmp
xchg
aad
dec
lcall
lahf
adc
fistl
iret
fcom
and
adc
call
aas
or
jmp
and
les
add
aas
fsubrs
sub
ljmp
lret
pop
das
repz
mov
jg
push
xorb
mov
or
push
dec
or
mov
fdivrl
pusha
imul
outsb
pop
mov
jp
test
jecxz
or
outsb
repz
pop
lock
jbe
pop
inc
or
or
add
arpl
fistpll
in
test
push
cltd
dec
sub
mulb
mov
inc
aas
jo
in
mov
jmp
roll
icebp
push
ret
ret
mov
loop
pop
cmp
movsb
pop
repnz
fcmovb
icebp
jb
xlat
mov
xor
push
push
inc
addb
or
inc
xchg
lahf
add
pop
aas
fisttpl
adc
dec
addl
gs
cmp
call
push
pop
stc
lret
xchg
cld
xor
sbb
mov
imul
int3
scas
roll
out
mov
lahf
and
sub
lds
xchg
nop
add
push
jbe
push
ss
or
sbb
mov
adc
push
jno
gs
ret
cli
adc
out
mov
add
dec
ret
cmc
mov
aam
dec
mov
subb
inc
outsl
mov
pop
fnsave
cmp
dec
in
inc
test
stc
insb
mov
and
stc
or
inc
test
les
outsb
cmpsl
dec
hlt
inc
ficompl
mov
mov
inc
mov
inc
je
lods
rcrl
cmpsl
in
ret
xchg
mov
arpl
push
mov
cmc
jmp
dec
or
leave
dec
xlat
sar
push
push
xor
out
in
inc
jecxz
daa
ja
adc
aam
gs
je
icebp
mov
mov
xchg
mov
out
jmp
or
jno
jno
inc
lods
xor
aad
jle
cltd
pop
push
out
cmpsl
adc
in
xlat
pop
push
xor
lahf
inc
cmpsb
adc
pop
ja
stc
or
out
ret
scas
repnz
orl
sub
je
push
fbld
lret
pop
xor
cmp
testb
cli
mov
xor
mov
sub
lods
pushf
push
imul
jb
fcomi
push
lods
sub
arpl
js
xor
stos
xchg
adc
aas
mov
fsubrl
mov
or
cld
nop
inc
xor
call
add
xchg
mov
in
mov
xlat
cmp
out
or
pop
pop
sub
std
jmp
sbb
movsb
imul
mov
sbb
icebp
cmp
jns
stos
stos
sub
or
pop
mov
dec
pusha
in
sbb
sbb
mov
mov
jmp
outsb
or
mov
adc
push
adc
mov
lret
cmp
dec
or
sub
inc
pop
push
flds
sbb
mov
mov
sbb
test
mov
mov
imul
dec
arpl
push
cld
ffreep
or
popa
and
scas
and
jg
jnp
inc
sub
mulb
aas
cmp
cld
mov
xsha256
cmpsb
adc
pop
insb
je
in
mov
pop
mov
movsb
push
and
bound
add
aaa
stc
hlt
cmc
cli
xchg
mov
adcb
pop
stos
in
scas
fisttps
out
inc
adc
mov
std
fldcw
loopne
les
pop
cmp
jnp
dec
lcall
mov
push
aam
mov
add
dec
scas
fmuls
xchg
loopne
loope
cmp
push
sbb
pop
out
lahf
adc
cmpsb
cmpsb
and
jne
neg
sbb
cmp
pushf
mov
out
ja
and
in
ss
mov
push
inc
psrlw
addr16
stc
sbb
fsub
pop
or
xchg
test
pop
ljmp
test
stos
fstpt
pop
sub
repnz
dec
pop
jmp
and
cmp
jg
aaa
xchg
sbb
into
inc
lcall
repnz
sarl
mov
clc
pop
leave
cmp
movsb
xor
bound
push
lcall
clc
stos
pop
cmc
mov
mov
inc
inc
cmp
xchg
dec
subb
movsl
testb
insl
push
xor
fnstsw
mov
xchg
jns
xor
jb
ljmp
jl
fildl
ret
jl
int3
jne
js
fldl
add
loopne
cmpsb
incl
sbb
cwtl
or
mov
and
call
lods
pop
adc
or
cli
cld
inc
pusha
pop
or
pusha
cmp
rcrl
mov
lds
jmp
mov
out
pop
into
fs
jno
push
aas
xor
xchg
lret
sub
and
aam
mov
das
dec
fcompp
cwtl
scas
xchg
nop
push
les
insl
test
sub
call
xchg
sbb
scas
test
jg
stc
mov
out
pop
out
pushf
cmp
fwait
jns
les
pushf
push
jns
test
jge
mov
add
fiaddl
sub
and
pop
cmpsl
sbb
jg
inc
lock
ret
fcomps
or
popa
pop
or
int3
mov
or
adc
lods
cmpsl
xor
xlat
ficomps
jle
adc
sahf
push
lahf
mov
das
pop
aas
not
jl
rcrb
jae
push
sahf
popa
jne
mov
fsubp
in
sub
repnz
mov
jnp
or
push
stos
stos
lret
lea
adc
pop
aaa
mov
adc
mov
adc
mov
insb
mov
cmp
dec
fbld
in
xchg
sbb
lret
jecxz
mov
add
test
scas
mov
imul
mov
adc
mov
out
dec
jp
xor
imul
xchg
insl
mov
lods
adc
mov
mov
sbbb
or
aas
cmc
or
movsl
subb
test
scas
cmp
inc
add
cmp
gs
ret
outsl
shll
mov
ja
in
xor
jbe
jns
or
sarl
sbb
fldt
cld
lcall
mov
jne
stos
add
jb
loop
in
jb
pop
cmp
mov
loop
int3
lcall
negl
scas
mov
fstpl
es
es
sarb
and
xchg
sub
jo
push
fadds
mov
dec
xor
xor
jne
xchg
inc
xor
shll
jbe
pusha
test
subl
lahf
pop
bound
and
jnp
in
imulb
cwtl
jecxz
jae
mov
mov
lea
sub
lret
inc
popf
nop
dec
test
incb
push
fcmove
pop
ds
loopne
loop
pop
outsb
loope
push
mov
fidivs
mov
pop
sbb
push
rolb
bound
push
or
in
hlt
aaa
jb
pushf
int3
rcr
mov
inc
arpl
mov
pop
ja
fwait
in
repnz
sub
sti
int3
sbb
ret
sbbb
dec
pushf
cli
xor
iret
xor
dec
xchg
dec
bound
sub
jge
insl
out
mov
add
leave
popa
loope
incl
jl
int3
pop
incl
jge
clc
fistl
or
mov
xchg
jne
jae
mov
ss
push
jne
dec
adc
dec
add
mov
test
pop
jge
testl
dec
std
popf
pop
mov
sbb
xor
xor
pop
mov
nop
test
mov
cmp
xchg
sbb
arpl
jmp
ja
in
ret
mov
or
inc
mov
dec
xchg
and
xchg
aad
pushf
daa
add
inc
lock
adc
xchg
pop
enter
push
mov
fwait
inc
pop
xor
xchg
mov
cmpsb
jbe
jb
sbb
insb
fwait
pop
add
mov
mov
test
aam
cmpl
xor
push
mov
jge
js
rcrl
mov
lret
lods
mov
in
aas
mov
jl
push
int3
cli
stc
icebp
movsl
popa
jl
and
inc
sub
push
cltd
lret
ja
xor
cmpsb
push
xchg
popf
sbb
lahf
fstl
mov
fwait
xor
or
push
and
jb
sbb
outsb
jno
scas
out
push
push
or
ja
xor
dec
jmp
cmp
inc
pop
xor
sub
and
pop
or
mov
xchg
mov
hlt
or
mov
mov
xchg
rolb
and
mov
inc
fnstcw
mov
xchg
stos
pop
insb
xchg
pop
aas
icebp
sub
push
bound
jb
into
out
push
aam
mov
cltd
inc
jbe
ja
ret
cwtl
ja
dec
sub
mov
mov
inc
pop
inc
mov
int3
lods
das
ret
push
adc
subl
mov
mov
popa
out
aas
add
test
cmpsb
mov
movsl
ds
lock
in
dec
ret
popa
popa
mov
push
add
cmpsl
loop
loopne
int
lret
adc
pop
or
or
push
jns
push
fistps
xchg
cmpsb
les
xor
mov
mov
shlb
or
scas
xchg
or
mov
mov
jae
nop
push
in
fdivr
mov
mov
mov
sbb
cmp
das
stc
sbb
imul
lahf
out
test
sub
inc
push
daa
jnp
jmp
stos
rorl
pop
dec
ljmp
fwait
push
int3
loopne
inc
sbb
dec
into
xchg
fstl
fs
cmp
pop
push
shl
and
shr
push
sbb
outsb
lock
popf
cwtl
dec
cmp
lods
jne
xchg
mov
cmp
ret
or
sbb
mov
or
jae
adc
or
mov
adc
mov
dec
cltd
loope
lods
pop
xlat
add
sbb
mov
mov
insb
fdivrl
andl
jl
lea
shl
pop
icebp
es
sub
adc
jg
cmpsl
inc
lahf
addb
movsl
data16
scas
movsb
into
fstpt
cmp
jo
pop
xor
or
ficompl
xor
sbb
or
xor
mov
das
inc
nop
lods
fisubrs
push
push
pop
ret
stos
addl
in
pop
xchg
xchg
mov
sub
in
xchg
xchg
test
xchg
mov
out
adc
pop
and
pop
ds
xor
push
jmp
data16
inc
imul
mov
mov
jno
sub
mov
adc
push
out
sub
idivb
loopne
aaa
lret
lock
jge
push
cltd
dec
rcr
or
sbb
inc
les
cmp
push
enter
lock
xor
sbb
dec
push
mov
mov
rolb
sbb
lods
jns
adc
into
jmp
mov
lods
adc
sub
mov
fcoms
les
and
jp
and
jne
out
addr16
loopne
scas
lock
andl
movsl
pop
or
push
jmp
out
hlt
inc
pop
fucom
jg
mov
test
xor
out
sbb
push
mov
loopne
cs
lahf
cmp
and
addr16
mov
push
lahf
jnp
insl
add
inc
push
jno
sahf
mov
push
stos
int3
mov
in
jl
mov
scas
jbe
out
sarl
leave
pop
adc
fisubl
dec
adcl
sub
dec
jno
mov
fdivrp
mov
or
loope,pn
push
pop
push
lods
add
stc
xcrypt-cbc
cmpsl
adc
mov
mov
sbb
pop
jp
hlt
sbb
shr
pop
mov
sti
sahf
lock
les
or
cmp
add
aaa
push
jp
cmpsb
nop
sti
xlat
bound
cmp
aad
push
aaa
int
xor
and
mov
cs
out
popa
cs
scas
sbb
dec
sub
das
js
cmp
xchg
sti
adc
mov
subb
movswl
adc
push
scas
push
mov
neg
fldt
repz
inc
inc
lcall
pusha
add
jno
xchg
inc
jmp
jns
jmpw
or
lret
in
mov
and
imul
and
add
ud1
daa
push
rclb
aam
inc
mov
mov
mov
mov
and
sub
dec
insl
mov
daa
in
pusha
inc
and
aaa
adc
stc
sub
push
add
movsb
xchg
xor
xor
gs
xchg
push
rol
fcmovnb
fsubs
mov
es
fnstenv
nop
lea
mov
sub
or
popa
mov
sub
lret
mov
lds
adc
subb
inc
mov
sub
xlat
jmp
adcl
add
fiaddl
push
push
push
or
les
call
mov
fistl
cli
xchg
push
outsl
pop
jge
arpl
subb
icebp
loop
lahf
and
push
iret
leave
in
dec
or
imul
pushf
jno
inc
mov
xchg
repnz
push
sbb
sub
bound
fdivl
mov
sbb
cmp
iret
add
jecxz
nop
push
aas
dec
test
jns
je
push
mov
cmc
sbb
ds
imul
and
push
pop
cmp
aaa
dec
inc
and
pop
shl
xchg
sysenter
in
xor
outsb
imul
pop
adc
fisubrs
and
or
jb
dec
xchg
scas
call
shlb
enter
aas
out
aas
outsl
xor
dec
cmp
push
and
xchg
ds
push
mov
lods
cmc
adc
int
in
jecxz
inc
inc
dec
add
out
pop
out
pop
push
sahf
lds
mov
bound
lahf
mov
call
out
pop
inc
and
lret
cli
xor
pop
cltd
shrb
pop
sbb
popf
clc
iret
and
arpl
mov
repz
cmp
mov
out
jae
arpl
mov
out
sbb
pusha
xchg
push
sbb
and
xchg
pop
jbe
pop
add
inc
pop
das
out
mov
mov
arpl
inc
lods
xor
mov
cmpsl
push
push
sbb
sar
stos
out
ret
push
out
lret
out
ss
sub
stos
xor
daa
leave
xor
push
fmuls
sbb
mov
pop
mov
xchg
lret
fs
je
push
dec
fldcw
push
pop
leave
ljmp
rcl
jge
xchg
lds
dec
test
andb
scas
out
sub
adc
dec
xor
sub
insb
iret
incb
add
add
or
aas
jne
gs
and
pusha
cmp
add
sbb
pop
lods
push
xchg
outsb
ja
or
sub
fxam
lret
addl
outsl
mov
int
mov
enter
sti
push
es
mov
flds
dec
test
loopne
and
inc
inc
mov
stc
cmp
loope
jmp
xor
lds
int
adcb
out
xchg
push
aad
movzbl
shr
inc
orl
lahf
ss
in
ret
in
arpl
fcoml
or
jno
dec
or
xor
arpl
cmpsb
push
lcall
jb
add
popa
hlt
scas
push
mov
ds
sub
dec
lea
inc
es
nop
nop
sti
das
jno
push
or
aaa
cmpsb
adc
out
pop
cli
or
adc
loopne
pop
ret
and
inc
or
movsl
xchg
mov
addb
je
insb
jg
test
mov
iret
jne
into
es
fs
scas
pop
sbb
xchg
test
pop
into
loopne
movsb
fldt
test
jl
frstor
mov
inc
ss
scas
cmpsb
and
roll
push
push
dec
xor
push
push
push
cmpsl
or
out
cltd
push
das
popa
mov
lcall
jl
xchg
hlt
stos
adc
mov
stos
push
mov
push
cmpl
mov
xchg
fldcw
loop
inc
pop
xlat
sub
rcrl
add
ds
xor
xchg
loopne
mov
mov
shl
insl
jne
jg
xchg
jo
push
repnz
out
mov
lret
loopne
sbbl
or
cmp
sub
cwtl
loope
mov
cmp
fdivrs
jg
and
dec
pushf
or
movsl
add
lods
mov
xchg
cmp
mov
mov
sbb
jnp
shlb
ja
cmc
mov
rolb
cmp
leave
fst
xlat
sub
and
xor
imul
mov
repz
and
mov
js
mov
ds
xor
cmp
mov
lock
jns
mov
jge
xor
jp
enter
in
mov
cmp
mov
cmp
loopne
mov
sub
imul
popa
pop
push
inc
ret
jecxz
fcoml
push
inc
jl
mov
icebp
fnsave
xchg
xor
xchg
loopne
lretw
cmp
xchg
adc
mov
popf
pop
pusha
add
das
repnz
xchg
js
mov
adc
cmpsb
dec
jns
daa
mov
push
ljmp
divb
movsb
fimuls
mov
int
pushf
mov
daa
adc
jno
push
sbb
or
jbe,pt
sti
xchg
xor
or
sti
cli
pop
inc
mov
push
mov
lods
mov
mov
mov
cs
pop
sub
stos
push
stos
inc
pop
jnp
fwait
adc
pusha
cmp
je
xor
ficomps
fcoml
or
xor
mov
push
call
and
movsb
notl
pop
imul
mov
outsb
js
mov
ljmp
mov
inc
lods
insb
call
clc
test
inc
hlt
imul
out
fsubs
push
inc
repz
inc
xor
les
into
xlat
in
je
or
cs
jnp
adc
sti
and
les
inc
cltd
sti
ljmp
inc
adc
sub
jbe
pushf
rcrb
and
repnz
movl
icebp
or
stos
sub
or
push
sub
js
cltd
scas
push
mov
movsb
movsl
pusha
sub
cmova
mov
mov
mov
mov
ret
xchg
loop
xchg
insl
push
sbb
sbb
mov
xor
inc
popf
bound
daa
cld
sti
daa
dec
out
cmp
ret
pop
xor
xchg
ficoms
cmpsb
pop
clc
fwait
ljmp
mull
pop
mov
sahf
mov
pop
mov
mov
lret
mov
push
and
sbb
test
mov
movsb
dec
pop
and
testl
inc
push
sub
inc
add
push
stc
dec
leave
push
movsl
ljmp
rorl
aam
pop
loopne
ds
lret
sub
xchg
mov
push
icebp
pop
int
adc
out
lods
add
xor
adcb
in
mov
js
add
lock
and
outsl
es
push
out
inc
stos
lods
push
stos
push
outsl
mov
xor
or
cmp
ds
pop
mov
clc
sbb
dec
xchg
push
and
fisubs
in
add
cmc
pusha
sti
pop
aas
mov
leave
xor
in
jmp
inc
call
pop
and
push
fsubrs
je
dec
fs
pop
in
sbb
imul
push
mov
fildl
and
pop
ja
add
jno
and
mov
or
aaa
xor
cmp
pop
adc
mov
test
cmp
daa
mov
not
sbb
mov
psraw
stc
jecxz
inc
pusha
cli
mov
andb
push
imul
enter
shll
out
dec
je
mov
scas
cmp
in
pop
push
rclb
pop
add
cmc
in
push
lods
xor
call
insb
cmc
aas
sub
inc
or
jae
fsubrs
movsb
xchg
orb
push
hlt
inc
scas
pop
cmp
repnz
mov
inc
dec
fldcw
es
divb
aad
hlt
insl
loope
push
pop
push
pop
scas
mov
inc
aad
adc
mov
test
mov
les
push
push
ja
mov
jns
jmp
out
loop
mov
cs
movsb
mov
push
xchg
or
sub
add
rcr
and
xchg
in
cmp
ljmp
add
inc
stos
jb
dec
data16
push
das
mov
ficompl
mov
mov
sub
daa
push
int
dec
popf
push
test
sti
add
insb
xchg
int3
mov
icebp
test
xor
xchg
dec
mov
pop
or
xchg
xor
sbb
daa
repnz
inc
imul
adc
in
jp
sbb
mov
insb
imul
data16
mov
aaa
mov
loop
cs
insb
dec
in
rol
test
mov
pop
int3
sub
add
icebp
shr
cltd
sbb
mov
pop
je
cmp
dec
loope
dec
sub
ljmp
aaa
add
fdivs
das
sti
mov
xchg
push
sti
lods
cld
leave
and
mov
outsl
das
stc
shrb
in
ss
loopne
pop
fs
scas
mov
xchg
ss
pop
out
push
scas
sub
cmp
call
lds
add
inc
into
xchg
sahf
xor
push
xor
xor
add
cmp
outsb
inc
add
es
jge
push
dec
fsubl
cmpsl
jecxz
bnd
push
pop
js
ss
jne
lods
or
sub
imul
incl
imul
inc
rcr
xor
mov
xchg
adc
push
ret
pop
imul
push
lea
cli
jg
sbb
mov
and
movsl
adc
fistl
jle
das
in
inc
push
inc
in
push
cmp
and
or
jl
std
mov
mov
rol
lods
es
jl
lret
les
mov
dec
and
cmc
dec
pop
scas
stos
lret
ljmp
push
fidivrl
imul
push
mov
shrl
xor
mov
lods
sbb
sub
or
dec
int
and
pop
push
mov
test
xchg
mov
test
test
test
xor
jecxz
hlt
sti
cmp
sub
pop
push
sbb
cs
std
mov
cmpl
jp
or
add
iret
pop
lods
cmpsb
ljmp
incl
sub
sbb
mov
adcb
mov
or
out
lock
ja
mov
jge
jecxz
mov
push
xor
pop
rolb
shlb
cmpsl
xchg
out
xchg
jp
cmp
shrb
cmp
add
push
and
ljmp
xchg
add
inc
out
push
jo
push
aad
mov
inc
cltd
fistpl
mov
mov
mov
imul
add
jo
inc
inc
int
test
push
pop
inc
add
mov
sub
subb
jae
adc
and
pop
loop
pextrw
cli
ffree
mov
outsl
mov
dec
sub
cltd
pop
clc
and
xchg
scas
insb
rcll
or
aad
mov
mov
mov
inc
inc
cltd
in
stos
jnp
xor
pusha
int
or
dec
stc
ret
arpl
leave
sbb
mov
fprem1
ja
and
hlt
mov
loopne
inc
jo
fiadds
lods
pop
push
xchg
stos
pop
je
push
xorps
arpl
ljmp
cltd
ja
out
int3
sub
ljmp
add
jmp
jmp
jecxz
ret
aas
cmp
pop
outsb
mov
mov
and
sti
push
jo
std
pusha
ljmp
push
fs
dec
jmp
pop
xchg
sbb
jmp
fwait
sub
popf
mov
mov
test
or
mov
inc
movsl
in
cltd
or
mov
popf
dec
imul
lcall
cld
xor
adc
fcmovnb
leave
pop
orl
cmp
lahf
pop
pop
sub
inc
cli
mov
ja
jmp
cld
sbb
ljmp
mov
inc
sub
xchg
std
jo
pusha
fsts
cmp
loopne
jae
or
jp
fstl
lcall
stos
sbb
scas
lahf
cmp
mov
mov
sti
dec
mov
mov
xor
hlt
dec
mov
clc
mov
cmc
ds
pop
fiadds
cmp
cmp
repz
mov
push
scas
rcr
push
cmp
sbb
inc
mov
je
sbb
outsb
lock
out
imul
mov
insb
dec
scas
movsb
outsb
test
inc
popf
mov
lods
lahf
sub
push
xchg
stos
mov
mov
sub
sub
enter
or
stc
imul
in
in
jne
rolb
je
xor
xchg
adc
jb
pop
testl
lret
or
out
into
add
leave
fstpl
or
icebp
pop
add
das
lods
fwait
hlt
shll
mov
mov
inc
lahf
shlb
pop
shl
xor
or
fcoml
rcrb
shll
push
sar
sbb
ljmp
mov
xchg
cmpsl
xchg
xor
int3
dec
xor
mov
fdivrl
mov
dec
sahf
test
mov
jo
sub
ss
pushf
lar
jne
mov
cmc
push
sti
push
aas
jbe
inc
lea
jg
cli
call
push
loop
aaa
jae
addr16
sti
movsl
push
decb
test
out
sub
mov
xchg
adc
push
push
add
xchg
push
sub
and
popf
xchg
sti
mov
sbb
andb
dec
stc
sbb
adc
lods
movsl
das
rcl
fists
fisubl
mov
pop
test
es
lret
sub
dec
mov
movsl
data16
sub
push
pushf
xchg
mov
ss
dec
cmp
daa
pop
xchg
fnstcw
sub
pop
xchg
sbb
or
outsb
lret
add
movsb
std
mov
fisttps
cmp
mov
push
adc
inc
sbb
orl
xor
mov
inc
loope
jl
mov
iret
mov
cmp
jae,pn
add
add
sub
arpl
repnz
ret
in
mov
cltd
dec
int3
mov
adc
cmpsl
aam
scas
lea
add
sub
mov
fs
icebp
jmp
xchg
cmp
xor
sub
shl
mov
mov
jno
dec
popa
mov
inc
popf
adc
dec
push
aaa
test
pop
dec
jo
loopne
jp
cmpb
mov
ds
cmp
addr16
pop
mov
ficompl
mov
and
pop
fisubl
cmpl
pop
mov
arpl
cwtl
in
mov
mov
stc
adc
lods
mov
jmp
xchg
jge
aam
xchg
adc
push
dec
cs
mov
lea
xor
cwtl
lock
adc
les
mov
add
jmp
push
push
or
cli
bound
or
mov
fwait
clc
std
xor
and
shrl
push
mov
stos
lock
idivb
push
xchg
aaa
pop
pop
add
js
jno
sbb
push
fimull
sub
inc
mov
jo
cli
cmp
loop
push
mov
mov
or
cmp
add
int
ja
or
out
jle
cmp
stos
adc
dec
push
adc
mov
pushf
loopne
out
lods
out
jb
ljmp
xor
addr16
jo
insb
jo,pt
jno
sbb
repnz
mov
xchg
ret
sahf
sub
inc
mov
negl
aas
push
shrb
or
jmp
cld
push
inc
push
int
or
clc
push
repz
data16
cmp
mov
mov
mov
in
lock
lods
shr
data16
pop
icebp
bound
bound
jnp
aaa
sahf
mov
jnp
outsb
enter
or
or
aam
js
lret
mov
call
jb
or
xor
push
adc
push
jecxz
jns
xlat
test
and
add
add
jae
out
dec
xchg
ds
fs
mov
push
cmp
ja
lcall
sbb
adc
xor
imul
mov
jns
mov
loopne
xchg
repz
xor
aam
cld
pop
or
loope
sbb
call
xchg
fisttps
sbb
cmp
ss
icebp
or
inc
sub
js
push
or
imul
sbb
loopne
lcall
cli
mov
adc
xchg
std
add
lods
mov
or
movsl
imul
push
ljmp
test
mov
loope
es
fcmovne
sub
and
xor
idiv
inc
scas
sbb
daa
rclb
xor
insl
sbbl
repnz
add
ljmp
enter
pop
and
lret
add
repnz
mov
ficoml
jnp
push
adc
pop
daa
mov
cmp
xchg
sahf
test
lahf
test
mov
out
jb
dec
cltd
add
jae
nop
fldt
pop
jbe
cld
movsb
mov
aas
mov
shll
add
imul
and
cmpsl
mov
cmp
xchg
out
cli
hlt
push
xor
adc
cmc
push
mov
dec
lahf
push
dec
lret
push
enter
add
lcall
ret
cmp
sahf
inc
mov
scas
push
jns
cmpsb
mov
mov
loope
movsb
sub
dec
pop
jl
mov
sbb
fisttpl
cmp
mov
mov
xor
fmul
push
inc
lcall
mov
add
test
lods
push
xchg
lcall
imul
es
mov
adc
push
test
testl
arpl
sub
and
js
mov
insl
cmp
mov
ficoms
mov
adc
sarb
jae
lds
shrb
ret
sti
addr16
lahf
mov
and
mov
pop
push
dec
xchg
dec
cmp
aas
add
push
xchg
lahf
mov
loope
pusha
dec
pusha
mov
mov
or
cmp
adc
pop
xchg
test
sarl
insb
add
sahf
mov
repnz
into
inc
daa
jmp
push
mov
pop
pusha
mov
push
jne
movsb
and
xlat
imul
dec
or
das
test
into
inc
pop
divl
repz
inc
call
add
push
pop
cs
push
mov
dec
jecxz
aam
stc
sub
sbb
sub
push
mov
jmp
fmull
scas
pop
pop
les
pushf
out
repnz
or
imull
xor
ss
and
les
shl
inc
inc
mov
sbb
int
xchg
test
push
dec
loope
and
dec
inc
jecxz
mov
inc
mov
add
sti
mov
pop
sub
adc
xor
sub
pop
loope
icebp
sbb
push
mov
xlat
jp
pop
ja
sar
fs
cs
int3
pop
mov
popa
loope
clc
pop
push
jo
xchg
cmp
popf
lock
add
test
inc
and
xor
cmova
mov
ja
sbb
das
pushf
enter
mov
xor
int3
stc
rcrl
insl
das
sbb
movsl
mov
xchg
mov
dec
lea
stos
cld
push
xchg
add
xchg
test
dec
or
aad
push
jns
sbb
icebp
lock
cltd
iret
fmul
enter
pop
inc
data16
sti
in
orl
push
test
or
lahf
inc
cmpl
sbb
xor
mov
iret
in
cmp
clc
lods
leave
jmp
das
scas
push
adc
mov
gs
adc
imul
inc
mov
and
stos
test
adc
mov
mov
ret
add
cmp
and
pushf
rcrl
ljmp
or
xor
pusha
popa
sbb
adc
xchg
and
fsubl
cmp
cmp
lahf
inc
or
xor
xchg
push
mov
dec
fstpl
add
jg
fadds
and
xor
sub
sub
and
aas
out
fwait
lea
cltd
inc
addr16
dec
sbb
pushf
call
fildl
or
or
or
jbe
xchg
push
cmp
or
xor
lret
xor
xchg
sub
int3
and
mov
cmp
mov
ret
rol
mov
adcl
and
adc
dec
std
outsl
test
xor
jmp
jge
pop
mov
sbb
sahf
imul
hlt
and
or
pusha
adc
dec
je
in
mov
test
sub
dec
out
adc
jnp
aaa
xchg
adc
aam
cmpsl
xchg
jno
jns
sub
jb
addr16
jl
push
shll
in
sub
mov
nop
pop
pushf
fcoml
push
pop
sbb
sub
and
sbb
lahf
dec
test
pop
sbb
adc
addr16
sub
subb
popf
mov
in
push
repnz
mov
fstl
mov
and
and
fdivrs
push
iret
ds
dec
sahf
stos
or
mov
jp
xchg
jne
jg
daa
xchg
ds
out
test
or
jge
and
xor
jl
lea
dec
jmp
out
jge
dec
cmp
push
call
adc
mov
mov
jb
shrb
mov
adc
popa
sbb
xchg
ljmp
lret
cmp
fsubrl
int
movsb
orl
cwtl
mov
push
add
adc
pop
sar
pop
jl
fsubr
jle
subb
sub
std
enter
int3
lods
or
ljmp
lods
cli
mov
push
adc
pop
mov
notb
adc
aas
rcr
sub
sbb
xor
inc
adc
sub
mov
sti
stos
sahf
pop
adc
sbb
cld
add
adc
xchg
psubusw
xchg
push
push
stc
or
clc
push
mov
addr16
mov
xor
xchg
lds
adc
cli
shll
xchg
lret
popa
mov
fsubs
das
hlt
ljmp
sti
aas
jle
adcb
aaa
mov
test
dec
loop
push
and
pushf
xor
fucomi
hlt
sbb
sbb
sub
pop
or
xchg
icebp
inc
lea
jae
sbb
adc
dec
and
cmp
daa
in
loope
sub
gs
cld
push
or
push
imul
stos
scas
icebp
xchg
inc
cs
stc
std
popf
mov
inc
push
cmpsb
scas
pop
jno
pop
add
jmp
in
jns
add
daa
jnp
or
js
mov
mov
jecxz
dec
xor
xchg
inc
push
popf
rorl
jnp
aas
ret
sub
cld
mov
push
mov
arpl
pop
xchg
jg
insl
jae
push
cmp
jno
adc
add
mov
aaa
sbb
mov
lcall
xor
sub
sbb
cmp
mov
sub
sahf
stc
je
inc
xchg
repnz
shlb
pop
or
jb
ljmp
popa
mov
pop
dec
cmp
fidivs
cltd
push
sbb
stc
nop
xor
hlt
in
pop
fisubs
repz
xchg
dec
in
inc
lahf
pop
repnz
out
adc
mov
shrd
ficoml
pop
fs
shlb
cmp
or
fisubs
push
adcb
push
mov
jae
pop
imulb
popa
dec
outsl
enter
push
and
out
popa
cmp
mov
lods
cltd
adc
shl
test
mov
inc
dec
arpl
add
test
lods
call
hlt
cmp
ret
xchg
push
push
xchg
out
out
cwtl
movsb
into
popf
aaa
jg
sbb
mov
aad
jp
mov
cwtl
push
mov
fwait
cmp
repz
adc
inc
xchg
xchg
xor
mov
cli
fldt
mov
mov
and
cltd
lahf
mov
jb
es
cli
shlb
mov
mov
sbb
fdivs
jb
add
into
fdivl
lock
in
mov
std
sbb
ss
pushf
into
xchg
lahf
inc
sub
push
inc
mov
push
mov
pusha
lcall
jbe
insl
dec
lret
push
jns
jo
lahf
jae
adc
push
sub
push
xchg
mov
popa
push
cmp
jae
idivb
andl
stos
mov
ficoml
xchg
xchg
xchg
fcompl
dec
dec
add
sahf
pop
scas
sahf
jmp
jns,pn
mov
mov
lret
xchg
adc
pop
inc
adc
fildll
sbb
shll
sar
jmp
cmc
adc
out
data16
bound
add
jge
sbb
or
sti
pop
sub
mov
aas
add
pop
iret
sbb
mov
cmp
shl
movsb
mov
hlt
rclb
stos
mov
lds
pop
adcl
jg
mov
out
cmp
outsb
inc
out
sarb
jp
std
neg
and
pop
scas
mov
enter
and
das
adc
xor
add
jp
jl
sub
push
push
lret
inc
or
cmpl
addr16
sub
pop
jbe
jmp
lret
stos
fildl
pop
mov
adc
sub
ljmp
mov
movsl
in
mov
mov
lcall
lock
filds
cmpb
aad
mov
xchg
jmp
stc
inc
pop
dec
in
insl
push
shlb
outsb
fdivrl
cwtl
adc
in
dec
or
push
negl
repnz
out
int3
mov
cmpsl
shrb
lods
and
pop
inc
mov
cmp
jnp
cmp
mov
aad
cs
aas
push
xor
pop
dec
xchg
dec
sub
xchg
in
or
mov
js
aam
pop
adc
push
in
sbb
imul
fs
js
add
push
jmp
push
sti
add
mov
pop
adc
jecxz
inc
out
inc
and
icebp
iret
cmp
aaa
pop
xorl
mov
test
sub
js
and
test
in
push
push
cmc
jl
shll
adc
insl
mov
pop
xchg
cmc
bound
sbb
sbb
push
pop
js
jmp
scas
idivb
ds
and
jns
sub
pop
orb
stos
adcl
stos
push
mov
pop
std
into
dec
cmp
int3
adc
fildll
insb
xchg
cmp
sbb
push
ds
mov
lcall
stos
cmp
xchg
into
or
sub
mov
adc
mov
fmul
fs
shlb
fisttpll
adc
int
inc
inc
push
scas
add
push
imull
insb
movsb
mov
lahf
nopl
pop
cmp
imul
xchg
ret
jbe
jl
pop
pop
stos
adc
bound
xchg
push
add
mov
jnp
ret
rol
stc
fcoml
push
fmulp
stc
decl
xor
mov
xor
into
mov
mov
dec
rcll
jp
mov
sti
hlt
sub
sub
add
enter
jo
test
jp
jg
mov
mov
xor
mov
push
lret
push
cltd
cmp
pop
aaa
or
lock
cmp
mov
movsl
jge
inc
aam
arpl
pop
xor
sbb
xchg
cmpsl
mov
mov
sub
aaa
inc
stos
mov
fdivrl
push
lods
insb
mov
and
icebp
lods
fidivl
insl
adc
fcoms
xor
jne
jb
leave
or
stc
xor
es
cs
xlat
ds
test
sbb
std
leave
cmp
test
cmp
inc
enter
dec
rclb
and
adc
sbb
xor
push
fcmovbe
fucomi
jmp
hlt
xor
dec
mov
test
jmp
push
mov
push
addl
push
mov
int
or
cltd
push
inc
sub
mov
pop
stos
in
outsb
aam
jl
mov
fnstsw
cmpsb
movsl
lods
out
fldl
in
pusha
fdiv
sub
and
int
mov
cmp
cltd
or
cmp
fistps
sarl
fcmovu
and
add
jae
jo
dec
fisttpl
jle
cli
pop
stos
inc
or
outsb
aad
push
test
dec
aaa
scas
adc
add
lcall
dec
aad
cli
sahf
sub
add
push
mov
inc
cli
inc
and
xchg
xchg
mov
divb
and
lahf
mov
dec
in
out
sub
fstpt
mov
pop
pop
icebp
inc
scas
sub
addl
shl
cmpsb
lret
in
dec
icebp
dec
icebp
sub
rorb
inc
repz
mov
jecxz
nop
sarl
jns
mov
and
adc
cltd
add
mov
sbb
rolb
fdivl
sbb
sub
shll
outsb
fsubs
or
add
leave
pop
das
cmp
std
pop
fildll
adc
push
xchg
or
test
inc
test
insl
or
hlt
rcrl
pxor
mov
add
popa
pop
rclb
xor
inc
stos
inc
cmc
lret
mov
jp
jne
mov
repz
pop
rcl
adc
inc
cld
int3
xor
sub
lcall
mov
push
imulb
sbb
fwait
push
ss
sub
inc
pushf
in
lea
mov
lods
jle
mov
pusha
pop
rcl
cmp
adcl
lock
shrb
lds
mov
stc
cmp
in
push
ljmp
lahf
sub
inc
sbb
imul
xchg
mov
cmc
imul
iret
or
in
shlb
add
push
cltd
in
fwait
inc
imul
jbe
or
mov
aam
sbb
sub
mov
loop
fnstenv
jp
mov
push
out
arpl
stc
mov
fsts
fstl
mov
lds
out
add
andl
jge
xchg
lods
push
add
adc
fbld
jle
mov
movsb
add
pushf
cmp
and
out
dec
std
sbb
test
aaa
lods
pop
mov
lahf
mov
mov
clc
ljmp
fwait
cmc
inc
shl
xchg
std
pop
sub
lret
leave
push
je
bound
int
sub
add
cmp
push
insb
mov
dec
cmpsb
ds
add
in
lret
mov
in
scas
leave
test
xchg
lods
fcoml
enter
cld
shl
in
and
das
push
jb
inc
sahf
xchg
jmp
and
dec
cmc
xchg
aam
lock
sbb
xchg
xchg
sbb
jmp
mov
aam
stc
lcall
push
aaa
pop
sar
dec
push
daa
divb
mov
cmp
call
push
insl
test
out
dec
push
or
lret
lods
adc
jb
addr16
cwtl
inc
inc
addr16
mov
mov
xchg
shr
pop
push
enter
mov
ss
scas
out
ja
xchg
rorb
sbb
outsb
xchg
push
sub
out
and
or
cmpsl
mov
sbb
lds
jg
mov
adc
add
insl
fcoms
ret
call
jecxz
and
shl
sti
les
cmc
push
cmp
movsb
push
out
jmp
fcmovnu
rorb
mov
cmp
push
sbb
cmp
and
test
jne
in
iret
mov
ret
mov
cmc
fisubl
xor
pop
add
mov
xor
std
xor
dec
es
sahf
shrb
js
xor
xchg
push
mov
in
push
adc
jp
inc
xor
dec
adc
iret
ss
int
adc
mov
lods
push
lods
lahf
outsb
daa
orl
or
jbe
ret
xor
lcall
pushf
sbb
xor
dec
cmc
repz
or
or
rcll
notl
sub
cltd
cmp
dec
call
jecxz
mov
das
xor
push
push
mov
movsl
xchg
and
daa
pop
aam
cli
xor
pop
mov
sbb
ljmp
add
adc
testb
insl
scas
jno
jg
cmp
cmpb
sbb
daa
sub
iret
incb
movsb
and
push
aaa
in
lock
out
fs
mov
xchg
add
outsb
mov
adc
pusha
das
lea
jge
jmp
test
pop
add
adc
ret
lret
fs
repz
and
je
lret
sti
outsl
fisttpll
mov
icebp
subb
or
fistpll
in
pop
dec
loope
mov
mov
es
out
clc
push
mov
scas
stos
and
imull
xorl
push
mov
mov
dec
jp
ljmp
leave
jl
pop
push
jecxz
xlat
push
jge
dec
cmp
pop
out
pop
inc
iret
xor
out
neg
sub
sbb
call
orb
push
dec
mov
popf
sbb
xchg
stos
sbb
mov
mov
mov
jg
out
or
mov
adc
jecxz
xchg
xor
mov
lret
cmp
cmp
or
pop
aad
sarl
xchg
js
scas
xor
add
jne
xor
negl
xchg
decl
jg
rorb
fs
pushf
xchg
inc
push
jg
aad
xor
repnz
stos
push
ss
iret
xor
repnz
mov
shrb
test
add
mov
jne
jae
cmpl
jae
xchg
xor
arpl
bndstx
xor
ret
std
cmp
xor
xchg
sub
jl
xchg
repnz
fimuls
lcall
js
and
push
cmp
mov
cs
mov
sbb
pushf
cmc
into
inc
add
out
jmp
lock
loopne
iret
mov
pop
pop
mov
cmp
cmpsl
sarb
pop
sbb
cs
xchg
inc
mov
ficompl
jg
arpl
adc
and
mov
dec
ficoms
mov
xor
xor
jecxz
mov
mov
inc
daa
cmp
cmpsb
aaa
shlb
xor
mov
std
xchg
mov
roll
push
and
lock
mov
pop
popf
jge
push
xchg
jge
xor
lret
scas
movsl
cmpsb
mov
add
arpl
xor
test
jp
aas
mov
pop
and
lock
gs
imul
xchg
in
xor
insl
adc
and
cmpsl
shrb
cmp
lds
xor
stos
dec
pop
inc
fstpl
shrb
mov
ret
pusha
mov
inc
and
adc
push
movsb
inc
jb
ljmp
inc
cmp
cmpsb
int3
adc
sub
in
std
push
jg
cli
inc
jg
fcompl
sub
lods
loop
dec
jmp
mov
xchg
xor
fidivl
stc
in
neg
div
stos
pop
push
rolb
adc
ret
pop
mov
lret
sub
mov
sub
test
shrb
dec
out
mov
ljmp
or
stc
or
and
push
sbb
push
stos
cltd
pushl
xor
stc
push
negb
iret
xchg
lods
cld
cmp
shr
mov
xchg
movb
push
out
int
cmp
or
insl
push
push
lret
arpl
dec
sbb
adc
mov
jnp
testl
std
test
test
sbb
int3
mov
mov
pushf
adc
push
or
mov
stos
dec
and
outsb
repnz
xchg
sbb
jmp
mov
out
xchg
je
jl
fsts
movsb
add
push
fwait
and
clc
ja
shlb
jmp
dec
inc
je
pop
dec
lret
aas
lcall
test
out
inc
js
sub
jnp
sarl
aad
int
insl
iret
adc
addr16
xor
pusha
sbb
aam
jmp
loopne
lcall
inc
pushf
scas
loope
adc
sbb
mov
cmpsb
or
lret
test
mov
xor
shlb
aas
mov
jae
movsl
mov
test
pop
push
jne
or
ss
pop
or
sub
into
cmpsl
xchg
adc
pop
adc
jae
jns
aaa
and
adc
cli
xor
dec
imul
add
sbb
inc
sbb
cwtl
mov
bound
pop
sub
call
cld
and
add
sbb
aaa
lods
jl
sbb
or
adcl
imul
out
lea
xchg
and
dec
jle
mov
out
pop
xchg
ds
mov
cli
insb
or
cmpsb
add
mov
aam
mov
sbb
pop
fidivrs
sti
xchg
sar
sub
stos
push
sbbl
xor
mov
dec
fstpt
call
adc
mov
ss
test
mov
mov
push
mov
cmp
jp
repnz
add
cltd
aad
pop
andl
cmc
ficompl
inc
ds
push
or
leave
lret
rolb
jge
mov
push
or
mov
rcll
jle
push
sbb
mov
loope
add
jb
jae
ja
int
mov
shlb
js
nop
or
movsb
and
int3
adc
inc
in
jne
jmp
jge
imul
mov
scas
frstor
mov
dec
js
xchg
inc
jmp
subl
dec
sub
push
lock
sbb
je
icebp
xchg
into
pop
ja
mov
xchg
xor
or
cmc
pop
jbe
jo
popa
ret
push
cmp
out
das
add
imul
sub
sbb
cmp
jnp
ds
arpl
dec
out
adc
insb
mov
scas
arpl
xor
jp
adc
pop
xor
pop
lcall
pop
scas
cmp
mov
sbb
clc
sbb
sbb
dec
xlat
sbb
hlt
mov
cs
movsb
pusha
idiv
jb
mov
orb
jo
pusha
adc
mov
dec
fists
mov
int3
inc
sub
mov
inc
jnp
adc
jl
outsl
add
sahf
mov
jnp
add
fwait
adc
icebp
aam
xchg
and
notb
fwait
adc
test
jo
das
arpl
adc
repz
jl
nop
xchg
push
adc
mov
out
pop
cmc
xor
push
bound
xchg
addr16
bound
lods
outsl
push
fdivr
or
add
sub
pop
sbb
mov
sub
jl
pushl
fcmovu
mov
sahf
imul
imul
mov
mov
out
fnsave
and
rol
xor
leave
cltd
mov
dec
out
mov
cwtl
and
lcall
cmpsb
rcll
pop
jbe
jle
sarl
loop
add
cmp
dec
out
xchg
gs
in
cwtl
imul
cmp
int3
pop
cmp
xor
jbe
pop
adc
dec
pop
daa
lret
outsb
jo
gs
push
jg
xor
andl
lods
xchg
das
cs
lock
test
xchg
push
sub
mov
and
data16
int3
in
inc
and
rorb
pop
mov
push
jae
push
and
xor
in
je
sub
test
nop
stos
idiv
lea
xor
sbb
repnz
mov
lods
out
pop
mov
jns
jp
jno
cli
out
mov
push
insb
inc
ss
outsb
lahf
rclb
aaa
xchg
aad
cltd
xchg
daa
push
das
push
push
or
repnz
xor
mov
xlat
or
inc
or
mov
movsl
out
add
sub
jne
lret
xchg
mov
sbb
inc
lea
jbe
loope
mov
sbb
add
mov
insb
stc
inc
adc
add
and
xor
xchg
xor
in
inc
pop
lea
pop
test
lock
cmp
mov
mov
mov
mov
movsl
sti
out
adc
or
inc
jno
push
xor
rorb
aad
mov
das
test
iret
mov
sub
scas
jb
fsubrl
lcall
aad
fnstcw
movb
scas
lret
in
cmp
cmp
add
xchg
mov
sub
mov
mov
cmp
jmp
and
rcl
dec
inc
out
aaa
repnz
mov
and
fldcw
inc
repz
andb
dec
clc
or
jge
lcall
adc
push
pop
jp
sbb
push
cmp
int3
out
test
insb
mov
mov
lods
push
mov
stos
fwait
les
mov
arpl
js
dec
cmpsl
xlat
iret
add
std
aad
cmp
leave
cmp
fisttps
sbb
pop
out
sahf
and
and
adc
into
imul
dec
xorb
enter
push
mov
push
inc
xchg
test
daa
mov
and
dec
mov
out
xor
xor
jnp
enter
pop
dec
adc
pop
fs
test
jae,pn
add
mov
cmp
pop
and
ret
loop
dec
pop
ja
sub
es
cmp
gs
repz
dec
loop
roll
cltd
sbb
iret
sbb
movsb
loopne
es
in
sub
pusha
mov
loope,pn
pop
inc
repnz
pop
pop
sbb
add
or
push
out
mov
mov
xor
cwtl
mov
cmpsb
mov
aas
lcall
mov
test
jae
les
jo
decb
sbb
ret
call
int3
daa
lods
sub
pop
adc
mov
test
mov
repz
cmpsl
inc
cmp
push
testb
lods
bound
xchg
les
in
mov
ss
sarl
ficoms
and
aas
push
cwtl
dec
add
lods
test
push
daa
mov
mov
xchg
inc
jnp
and
adc
movsb
das
cltd
fs
in
js
cmp
add
pushl
xchg
loope
orb
ret
push
scas
jne
cli
cwtl
test
in
and
fmuls
mov
lods
stos
jmp
or
leave
iret
mov
movb
stos
stos
shl
push
fsubrs
xchg
out
push
and
js
popf
aas
pushf
mov
mov
and
add
cmp
mov
addr16
cmp
out
or
sub
or
out
pop
mov
and
add
adc
inc
dec
or
xor
mov
int
arpl
pop
add
aad
cmp
icebp
lock
outsl
sbb
rclb
stc
pop
gs
cs
test
cltd
movsb
xchg
repnz
mov
or
hlt
outsb
mov
xor
adc
mov
mov
es
xor
fcoms
nop
andb
cltd
push
cmp
mov
cs
dec
cmp
mov
repz
push
fnstcw
jae
bound
std
arpl
daa
push
nop
out
mov
mov
sbb
push
xor
pop
push
pop
test
lea
sbb
push
or
pushf
jo
cmp
outsb
inc
or
pop
cmp
ss
sarb
movsb
jmp
insl
add
cmp
sbb
push
mov
dec
into
fisubrl
das
fwait
jno
ret
and
ret
sbb
out
mov
xor
mov
jl
mov
decl
scas
fcompl
xorb
pop
movl
mov
mov
mov
int3
lret
aad
or
push
js
mov
mov
sbb
fmul
test
dec
cmc
mov
dec
rcrb
xor
out
pop
xor
imul
or
inc
fldl
adc
push
arpl
pushl
jg
push
lret
xchg
out
and
fcmovb
imul
hlt
push
sbb
mov
stos
subl
mov
mov
jle
not
push
fimull
adc
arpl
mov
mov
scas
jmp
test
lds
mov
mov
hlt
les
push
xchg
cmc
hlt
sub
adc
cmp
jne
fucom
imul
mov
xor
addb
mov
sub
ret
scas
lret
xor
mov
push
xlat
aad
adc
push
mov
test
bound
mov
fsts
cli
sub
xor
pop
sub
mov
out
pop
jnp
xlat
mov
fs
xchg
lods
and
mov
add
aaa
rcll
push
or
imul
loop
fsubs
ret
sahf
arpl
insl
pop
cmp
add
inc
es
pusha
stc
push
jle
insl
in
inc
adc
or
pop
lcall
inc
loope
and
adc
cmp
cmp
add
sub
jp
xchg
dec
aad
inc
cmp
and
jae
icebp
int3
movsl
data16
lret
xchg
lret
mov
xor
sbb
fiadds
aam
mov
mov
add
cltd
adc
jl
xor
xchg
mov
ljmp
stc
jl
inc
aas
loop
mov
mov
mov
lret
or
mov
data16
fwait
clc
test
mov
xchg
leave
insb
insl
test
mov
mov
cmp
push
scas
jb
icebp
fnsave
mov
and
xor
mov
fwait
mov
out
stos
lds
aaa
push
and
aas
ret
cli
push
ret
pop
mov
mov
int
sub
and
fistpll
jmp
shrl
repz
jl
rorb
xor
and
out
int
in
cmp
sub
cmp
cltd
add
and
and
mov
pusha
scas
outsl
push
mov
mov
mov
aad
ret
data16
mov
mov
mov
mov
xor
lock
adc
call
fcompl
mov
cmpsl
dec
in
sbbl
rorl
imul
sbb
into
push
loopne
dec
add
jno
cmpsb
dec
addb
mov
adc
leave
cmc
xchg
popa
ret
test
nop
add
lret
rol
adc
or
cmp
or
negl
out
ret
cwtl
mov
repz
and
pop
add
repz
fadd
push
cmp
mov
sbb
mov
dec
or
outsb
push
dec
xchg
jae
fstl
lcall
std
mov
fchs
clc
xchg
aam
cmp
dec
xchg
mov
push
fsubs
cmp
dec
dec
test
or
mov
jmp
or
xchg
arpl
push
negb
sbb
popf
pop
fldln2
int3
xchg
cmp
js
int
adc
pop
imul
sbb
push
push
xchg
jp
pop
sbb
std
push
jp
inc
pop
jge
movsb
mov
out
or
dec
loope
pushf
push
cld
ret
in
xor
fadds
popf
cmp
mov
stos
loopne
adc
enter
fldl
in
push
lcall
dec
hlt
out
orb
xchg
das
sub
test
pushl
or
pop
mov
in
fildl
jo
sub
and
out
mov
lret
popa
xor
add
pop
idivl
imul
mov
cli
jnp
sub
arpl
call
adc
mov
xchg
cmp
in
or
jno
lret
push
lret
cmpsb
add
sbbb
loope
cmp
pop
mov
push
es
jmp
inc
cmp
cmpsb
sbb
xchg
mov
out
push
mov
xor
call
repnz
adc
sbb
inc
xor
iret
jge
in
ret
or
in
inc
rcrl
push
add
mov
mov
jae
mov
adc
mov
jno
std
lcall
iret
mov
mov
orl
rorb
sbb
movsb
dec
push
mov
adc
xor
sub
inc
test
jmp
inc
mov
test
andb
or
push
xlat
aaa
mov
and
popa
pop
xor
mov
xchg
ss
imul
mov
adcl
push
cmp
daa
and
xchg
lea
sbb
dec
sbb
sbb
test
or
push
jae
pop
cmp
jo
pusha
xchg
inc
dec
aam
out
hlt
mov
dec
insl
loope
incl
mov
loope
orl
mov
push
mov
dec
inc
movsb
sbb
push
lea
fsubl
sahf
dec
in
loope
mov
sbb
sub
out
movsl
pop
mov
jg
adcb
enter
fbld
jp
les
push
jne
xchg
push
in
arpl
loope
movsb
testb
repz
scas
cmp
push
push
and
out
in
push
pushf
adc
xor
mov
mov
adc
into
add
aas
adc
test
xchg
call
lretw
or
mov
ds
movsb
lods
in
sbb
popa
lock
push
pop
lds
mov
xchg
js
mov
xchg
test
fucomip
in
mov
push
pop
jnp
sub
inc
xchg
clc
mov
testl
mov
dec
aam
mov
lock
notl
mov
jle
ss
pop
loop
fbld
mov
dec
add
mov
ljmp
loop
jmp
icebp
sahf
inc
xchg
in
popf
fwait
mov
mov
insl
shlb
scas
jnp
or
sbb
pop
push
push
fisttps
mov
or
in
sub
fidivrs
add
mov
flds
sbb
jb
in
jle
mov
and
jns
ficomps
jg
inc
jge
jg
das
mov
cmp
test
popf
call
fbld
imul
scas
popf
add
mov
sahf
adc
out
leave
lcall
lahf
sub
jge
pop
lahf
movsb
mov
scas
mov
arpl
andb
jae
in
adc
repz
adc
daa
loopne
js
out
xchg
popf
mov
pop
cmp
aad
add
rorl
cmp
jge
cmc
xchg
clc
xor
aaa
sbb
sub
or
out
arpl
xor
xorb
and
data16
stos
dec
pop
mov
adc
mov
mov
xor
mull
loopne
lret
je
push
insb
into
pushf
shll
negl
or
dec
push
scas
aam
jg
dec
and
ret
sahf
or
ficompl
repz
clc
aas
inc
pusha
or
inc
pop
inc
ret
insl
mov
aad
dec
xor
loopne
fadds
or
mov
in
push
loop
xor
sub
mov
cmp
inc
mov
sub
cmc
aas
cmp
stc
js
out
das
and
lds
sub
jmp
stos
push
inc
cmp
es
adc
es
pop
cmp
scas
dec
mov
insl
and
clc
adc
add
pushf
js
int
push
sub
leave
cld
fildll
xchg
hlt
pop
mov
xlat
outsb
jmp
out
and
or
out
xor
mov
in
lock
out
jg
sub
jp
cld
xor
ljmp
jecxz
aaa
ja
cmc
mov
sub
cwtl
push
jns
or
mov
inc
leave
mov
fnsave
mov
loope
pop
jbe
in
xchg
insl
out
xchg
inc
fldl
lods
mov
repz
cmp
lret
add
pop
push
cmp
aaa
fmuls
cmp
push
movsb
pop
cwtl
leave
scas
xor
faddl
dec
cmp
inc
cmpxchg
pusha
or
mov
sub
test
jbe
ds
add
jl
popa
mov
xchg
jnp
adc
xlat
push
aad
jge
jno
andl
xor
test
mov
pusha
insb
pop
repz
jl
push
lds
fs
pop
sub
mov
leave
into
cmp
sbb
std
mov
adc
jnp
je
cmpsb
mov
in
aaa
divl
jge
mov
adc
xor
mov
cmp
aas
cmp
or
cwtl
mov
sbb
jb
jne
out
mov
out
ror
or
fdivr
int3
mov
add
arpl
mov
addr16
rcl
jg
xor
stos
mov
mov
sbb
dec
in
mov
jl
mov
lock
fidivs
sbb
push
dec
adc
js
out
aad
decl
test
sub
jp
je
mov
mov
std
inc
lock
jmp
pop
std
add
dec
mov
xchg
or
sub
dec
test
lahf
loope
sbb
andb
cmp
mov
jae
call
inc
or
inc
mov
cltd
fidivrs
sti
sbb
sub
rcrl
je
sub
movsl
push
dec
xor
clc
daa
pop
dec
outsb
pop
pop
cmp
xchg
fpatan
mov
xor
mov
add
js
mov
jp
xor
sub
je
fldenv
fdivrl
out
mov
addr16
test
jns
into
insb
enter
xchg
push
dec
ficoms
mov
push
cmp
pop
push
das
je
inc
jg
imul
fstpl
mov
dec
or
popf
xor
pop
mov
mov
jno
ss
shll
dec
adc
jno
pop
mov
push
mov
fs
lds
sbb
jge
aas
inc
cmc
cmc
push
idivl
push
fists
mov
hlt
jp
fwait
adc
pop
fwait
outsb
mov
xchg
mov
jmp
and
mov
jg
push
test
fidivs
js
inc
jmp
stc
inc
push
jns
in
in
and
add
sbb
mov
out
pop
mov
iret
test
mov
sub
and
mov
out
loop
mov
repnz
jl
inc
and
xorl
je
and
or
inc
in
les
adc
or
xchg
adc
shll
fisttps
cld
jno
aaa
sbb
int3
lcall
mov
jle
aam
jns
dec
jbe
xorl
mov
or
add
inc
adc
mov
in
insl
movsb
cmp
inc
sbbb
dec
add
xchg
pop
jl
lods
xor
out
jo
xchg
mov
or
pop
jo
cmp
rorb
in
pusha
xchg
add
lds
push
mov
sbbb
push
addl
enter
in
aaa
and
sbb
shrb
jnp
mov
push
pop
pop
add
dec
jmp
pop
sbb
mov
dec
xchg
shll
sub
sub
cmc
lods
sub
adc
aad
out
mov
fwait
or
adcb
aad
mov
push
pop
dec
sbb
push
gs
lds
sub
dec
packsswb
ret
mov
inc
xor
sbb
jp
push
push
ret
lret
loope
xchg
cmpsl
pop
cwtl
fnstcw
mov
aad
cmpsl
pop
push
movsb
or
mov
lock
inc
cltd
int3
mov
pop
adc
pusha
sub
pop
push
mov
mov
sbb
ss
xchg
pop
push
dec
testl
lcall
cwtl
imul
jno
jl
and
lds
scas
inc
sub
sarl
lods
push
mov
enter
enter
jbe
sub
leave
cmpsb
dec
lcall
ljmp
out
pop
mov
ret
push
sti
jbe
shl
std
ds
and
sahf
mov
pop
sub
mov
mov
or
dec
mov
jmp
dec
jnp
xchg
dec
pop
xor
mov
sbb
pop
cs
mov
ds
xchg
je
cmc
jbe
inc
inc
or
pop
mov
add
inc
pop
mov
adc
lods
insl
test
push
jae
xchg
xchg
test
pushf
push
mov
mov
ret
stos
movsb
mov
mov
xchg
aas
jge
jnp
lahf
fwait
add
mov
jo
std
pusha
add
aaa
fisubrs
dec
mov
out
cmpsb
sbb
mov
dec
dec
mov
sbb
test
lret
je
inc
sub
in
mov
jo
loopne
imul
fsubr
fsts
jnp
push
cmpsl
test
fwait
mov
fs
or
movsl
subl
or
lea
out
lret
out
xor
mov
push
add
out
daa
xor
jmp
xchg
mov
popa
pushl
fcoml
dec
in
push
nop
fsubl
jle
adc
hlt
cmp
or
fisubrs
xchg
arpl
rclb
push
into
roll
pop
daa
in
add
aad
or
ss
or
aaa
and
orl
outsb
int3
cmc
cld
fxch
test
mov
or
push
jb
mov
test
push
jmp
int3
daa
lret
ljmp
xor
mov
jb
pop
add
add
and
ret
stos
xchg
in
xor
adc
add
mov
faddl
sbb
int
stos
xor
mov
push
push
dec
mov
pop
icebp
jno
dec
ret
and
mov
pop
pop
dec
call
and
jge
lds
leave
sbb
mov
push
mov
pop
pop
lret
mov
xchg
orb
icebp
rcrl
mov
cltd
stos
into
daa
sub
add
pop
jns
popa
jbe
or
fwait
loope
shll
push
add
mov
pop
mov
xlat
shlb
je
xchg
mov
push
insl
or
and
int
lret
call
mov
gs
xchg
aam
or
xor
loopne
shlw
in
stos
mov
stos
adc
cs
pop
je
ljmp
pusha
dec
test
mov
fisubs
test
scas
test
rcl
or
lret
sbb
int3
lret
daa
cwtl
or
push
pushf
out
shlb
lock
jb
jge
dec
leave
adc
aam
outsb
push
sub
cmpsb
fsts
lret
das
shll
sbb
jno
in
ss
xchg
aam
cmc
push
mov
pop
pop
out
jo
js
sarb
nop
xor
cmp
mov
imul
test
sbb
sub
cmp
aad
mov
sbb
int3
lea
ficoml
push
arpl
jmp
cmp
jns
mov
pusha
aaa
add
cmpsl
outsb
inc
fmull
push
stc
jl
mov
test
dec
test
mov
push
repz
sbb
ret
mov
pop
dec
xchg
mov
adc
or
push
data16
cmc
xchg
bound
adc
rcrb
roll
adc
sbb
pop
test
lods
test
or
adc
fnstsw
arpl
jo
and
cmp
jno
or
lret
pop
mov
out
mov
push
emms
sahf
in
in
xchg
cmpsl
lea
dec
sbb
mov
lea
ljmp
in
ret
cwtl
scas
sub
sahf
jmp
inc
pusha
daa
test
lcall
in
mov
fimuls
mov
clc
adc
xor
insl
call
popa
ljmp
xlat
jb
pop
jo
inc
push
dec
jno
dec
in
lock
ja
pop
aas
sbb
pushf
pop
js
and
subl
mov
sti
add
push
adc
movsb
and
test
ljmp
lret
or
je
xor
mov
dec
mov
push
mov
pop
fstl
add
dec
jge
push
hlt
popf
adc
jne
stos
popf
stos
pop
cmp
fnstsw
xchg
pop
xchg
sub
sub
fnstcw
or
adc
shr
shll
mov
sbbl
push
ljmp
or
or
or
dec
cwtl
adc
push
xchg
mov
hlt
sub
popl
push
jle
dec
in
repnz
sahf
adc
and
std
mov
scas
sbb
hlt
dec
aas
jns
pop
es
addb
fs
xchg
inc
sub
sahf
incb
jg
gs
mov
rol
testl
stos
or
mov
jp
rdpmc
icebp
fdiv
pop
fcmovbe
cmp
into
mov
decb
xor
adc
jg
pop
push
dec
insl
in
sub
adc
adc
xchg
xchg
mov
sbb
scas
push
xchg
cmp
test
pop
dec
outsl
pop
mov
test
or
pop
pop
xchg
test
sub
in
lea
movsl
xor
outsl
xor
inc
dec
loopne
add
mov
add
xchg
lock
mov
mov
pop
push
outsl
std
mov
inc
add
or
sbb
xor
jl
pop
push
std
or
enter
fdivr
xor
fnstsw
js
and
mov
clc
push
in
xor
lahf
pop
fcmove
ds
mov
es
jb
mov
mov
pop
aam
push
movsl
jbe
or
mov
mov
jbe
sar
jno
sbb
testb
sbb
nop
push
std
jne
movsb
xchg
cmpsl
and
fwait
push
lcall
xor
imul
pop
cwtl
add
add
int3
fbld
js
and
std
pusha
int3
inc
sub
sarl
out
or
push
pop
mov
outsl
repnz
cwtl
cmp
les
xor
push
or
or
lret
jp
fdivr
cmpsl
repnz
add
insl
adc
fs
cs
daa
inc
repz
mov
fistpl
push
test
push
pop
std
inc
mov
daa
lcall
out
fwait
ljmp
inc
cmp
adc
push
sar
cmp
xchg
bnd
cmc
fisubs
sub
jbe
jo,pn
or
xchg
jle
and
fidivs
sub
mov
movsb
into
inc
daa
xchg
inc
je
jae
jle
cmp
iret
jecxz
cmp
pusha
lods
test
and
jle
into
xchg
sub
lds
adc
insb
call
popa
xchg
push
jbe
js
jp
sti
ja
sbb
pusha
and
aas
add
shrb
test
mov
jmp
rcr
pushf
mov
cmpsb
rclb
xlat
scas
sub
inc
fmul
mov
fstpl
pushf
inc
sbb
sarl
mov
aad
loop
insl
loopne
sbb
call
imul
mov
mov
xor
push
mov
cmp
dec
jno
pop
in
bound
pop
fdivrp
mov
or
dec
scas
into
cmp
shll
lret
pop
and
sbb
arpl
lods
and
xor
shlb
push
loop
outsb
push
adc
daa
mov
sub
mov
cmpsl
dec
xchg
and
repz
cld
imull
push
jae
lret
flds
cld
insl
xchg
popf
mov
mov
ret
jns
push
fstps
cvtdq2ps
sbb
in
mov
in
jb
fiaddl
dec
push
add
es
int3
ds
pop
aad
mov
in
lods
neg
in
stc
loop
inc
ljmp
sbb
stc
adc
adc
jg
adc
gs
cmp
mov
idivb
xor
adc
or
xor
xchg
test
imul
sbb
cmp
fnsave
shl
xchg
imul
cmp
inc
inc
mov
inc
mov
push
push
xor
mov
and
add
inc
mov
in
aad
sti
inc
bound
mov
jg
or
add
enter
push
scas
mov
shrb
jns
aas
ret
vcvtpd2ps
sarl
mov
sahf
and
leave
aas
pusha
lret
mov
cwtl
movsl
scas
xor
xor
fcoml
in
inc
lock
and
add
mov
pushf
cmp
ljmp
bnd
inc
repnz
mov
sub
pop
push
fwait
push
out
aaa
adc
jns
mov
sub
dec
xchg
jae
mov
shrl
outsl
pusha
dec
adc
test
sbb
fbstp
leave
sub
jg
xchg
jl
push
mov
push
xchg
xchg
cmpsb
fdivrs
repz
add
aad
cli
jne
dec
mov
xor
aas
jns
bound
lret
mov
add
aas
sbb
cmp
mov
mov
mov
mov
and
movsl
adcb
sti
fists
cmp
call
and
sub
fwait
xchg
dec
cmpsb
inc
inc
out
cmpsb
jg
loopne
aas
sub
stc
or
sub
add
repnz
imulb
pop
xor
add
jne
pop
fcmovnb
std
xor
arpl
fmuls
loop
jle
imulb
popa
sahf
jmp
lret
in
cmp
cmp
stos
outsb
daa
fldenv
es
sbb
loope
jne
int
push
hlt
xchg
or
enter
rclb
jp
xor
inc
xchg
sbb
jmp
push
jne
dec
in
cmp
and
shll
mov
ds
les
cmp
xor
jg
adc
outsb
mov
clc
dec
jbe
adc
push
mov
fldt
adc
sbb
xchg
aaa
xlat
out
ljmp
push
inc
loop
mov
jmp
lahf
stc
rcrb
pop
je
adc
mov
clc
outsb
icebp
or
xor
add
push
mov
inc
cs
jle
cld
push
cmp
mov
mov
jne
inc
adc
add
sbb
out
pop
push
pop
jle
sbb
test
push
shlb
xchg
pop
dec
lcall
sahf
sahf
xchg
shll
dec
lea
xchg
rcrl
pop
pusha
pop
sbb
test
in
inc
jmp
movsl
jp
fcompl
jmp
sbb
in
rorb
mov
jae
push
cmp
push
jo
aas
int
xchg
dec
cltd
es
xor
push
push
cli
xlat
les
add
jp
outsb
dec
dec
dec
or
mov
or
pop
xlat
adc
rolb
ss
push
dec
test
push
lea
pop
enter
jnp
bound
pop
mov
sbb
mov
rolb
xchg
out
scas
pop
stos
mov
shlb
out
mov
lock
bound
and
jae
xor
insl
daa
jecxz
int
call
sbb
fstpt
subl
mov
js
stos
xor
fwait
les
xor
or
shll
xor
jg
jnp
leave
and
jp
xchg
test
and
mov
rol
and
outsl
cmp
mov
arpl
and
pop
inc
mov
sub
clc
into
jne
mov
xorb
aas
adc
mov
in
jbe
dec
sti
push
fldt
lock
fistpll
adc
sarl
xor
mov
dec
data16
mov
dec
out
mov
push
fldt
dec
loop
js
cmp
cld
dec
pop
mov
outsl
and
ja
ret
cli
mov
push
gs
xor
and
rcrl
adc
adc
jle
cwtl
xlat
test
loope
shr
mov
je
jge
cmp
cmp
inc
call
or
ja
or
fstpl
sbb
stos
add
xchg
jmp
xor
arpl
jge
pop
fidivl
stc
jle
sub
movsl
xor
clc
inc
jg
js
out
leave
pushf
out
scas
shl
inc
loope
ror
inc
scas
das
mov
outsb
mov
push
mov
xchg
andl
adc
mov
jle
push
and
movsb
or
inc
test
rcl
or
jge
imul
aas
fidivrs
test
push
sub
adc
mov
fwait
sub
test
sti
adcb
cwtl
jmp
or
lcall
jno
fst
pop
push
mov
dec
icebp
in
push
jge
aad
and
addr16
push
pop
lret
add
mov
loop
push
mov
dec
xchg
inc
xor
jl
jmp
pop
add
dec
leave
push
jnp
pusha
sub
leave
adc
inc
inc
pop
add
pop
xor
outsb
daa
lret
mov
jo
jl
dec
mov
gs
xor
das
lds
sbbb
ficomps
std
mov
aas
movsl
mov
loopne
lock
shlb
xor
scas
jmp
out
ret
fs
mov
enter
mov
jle
cmp
and
add
dec
clc
call
jl
aaa
je
xor
xor
cmc
add
adc
fistpll
mov
jge
call
fcompl
dec
ss
mov
push
dec
adc
cld
sbbb
jl
pop
insb
pop
mov
mov
fdivrl
cmc
imull
rcrl
popa
adc
lret
insb
pop
inc
jno
ss
cmpsb
pusha
icebp
sub
pop
push
addr16
pop
ljmp
adc
pop
out
cmp
shll
nop
push
pop
sub
push
es
int3
pop
stos
pop
push
sti
in
add
dec
movsl
dec
inc
or
in
jb
push
in
call
sub
jne
inc
xor
fisubs
jnp
jnp
xchg
xchg
mov
dec
jp
mov
icebp
popf
push
fsubrl
rorb
xchg
sahf
xchg
int3
jmp
ds
fimull
call
out
mov
jp
pop
mov
pusha
push
gs
or
jnp
shlb
push
pop
jge
add
xor
int
pop
aas
in
mov
sahf
movb
and
js
mov
xor
lds
pop
sbb
std
jmp
aas
cltd
inc
push
fadds
push
dec
pop
cltd
pop
iret
or
cmp
mov
sbb
popa
aad
dec
pop
mov
rolw
hlt
push
pop
push
popa
ret
out
lahf
jle
das
dec
aam
lret
xor
xchg
inc
scas
jl
mov
mov
popa
adc
and
mov
test
les
mov
push
cli
stos
ja
sti
rclb
clc
inc
ljmp
in
sub
popf
lods
jge
lret
out
ret
fdiv
cmp
or
inc
gs
xchg
dec
ss
sub
mov
stos
jae
sbb
xchg
js
daa
push
pop
aad
sbb
jnp
pop
mov
insl
loope
adc
xor
out
cmp
mov
fucomip
or
dec
in
push
insl
push
mov
out
daa
mov
or
jnp
mov
mov
imul
add
cmp
and
mov
adc
jbe
cmpsb
push
nop
inc
inc
sub
jbe
fdivp
sub
push
ljmp
inc
sbb
aaa
aas
jecxz
xchg
incl
push
das
jno
lods
or
ret
incb
mov
fwait
jle
call
cwtl
and
xlat
jmp
and
cltd
in
mov
xlat
sar
inc
out
and
mov
and
fdivrs
flds
aam
jb
jg
mov
mov
add
sahf
push
lea
sub
xchg
rcll
aam
daa
jns
pop
mov
sub
fst
fcompl
or
mov
adc
ret
lods
jmp
xor
mov
push
test
adcl
outsl
xor
inc
push
mov
stc
cmc
lret
mov
jmp
clc
dec
inc
sub
cmpsb
cmp
adc
inc
sub
loop
std
rcrb
ret
ret
enter
adc
mov
and
xchg
repnz
sahf
enter
xchg
adc
pop
dec
adc
std
pop
jnp
inc
mov
cmp
mov
pop
repz
adc
adc
movsl
pop
dec
sbb
cmpsb
or
xchg
mov
imull
popf
add
addr16
mov
xchg
imul
imul
adcb
out
loopne
xlat
lods
in
xlat
gs
jecxz
addr16
fcmovbe
add
mov
add
daa
test
jg
add
mov
lods
rolb
in
or
jo
xor
test
in
sbb
enter
ja
mov
test
adc
sbb
xchg
inc
mov
cltd
mov
inc
mov
bnd
inc
push
jnp
mov
mov
mov
mov
adc
or
nop
dec
fsub
pop
cwtl
jg
mov
into
arpl
js
decb
and
cld
push
and
push
mov
decl
sbb
sbb
jecxz
push
pushl
pop
xchg
dec
stos
outsl
movsb
mov
push
test
test
movsb
pop
add
sub
in
dec
add
sbb
fs
adc
mov
adc
jmp
dec
sbb
adc
out
into
mov
lcall
int3
jg
cmc
mov
jl
xlat
and
loope
cmp
xor
dec
pop
push
dec
adc
jmp
and
fidivrl
mov
negb
or
hlt
ret
test
sub
add
or
inc
and
push
ds
xchg
add
push
rolb
inc
pushw
lock
icebp
adc
jmp
sbb
jl
or
xor
pop
in
aam
cmp
push
test
mov
cli
lret
int3
outsb
in
pop
add
lahf
sahf
pop
push
cltd
mov
lock
inc
sbb
inc
xchg
mov
out
mov
daa
lcall
jmp
adc
cwtl
inc
insl
addr16
pusha
mov
pop
ljmp
cmpb
loope
dec
jge
int3
test
fwait
and
shll
sub
aas
mov
mov
vfmaddsub213pd
fwait
hlt
jb
jl
xor
pop
imul
syscall
pop
enter
inc
pusha
pusha
ljmp
lcall
or
in
dec
pushf
loop
mov
cs
addl
mov
lock
js
cld
cmp
in
arpl
cwtl
adc
mov
loope
aaa
inc
fistpll
add
pop
movsb
lretw
in
add
in
loopne
add
testb
adc
ja
pop
mov
mov
mov
shr
fs
arpl
or
test
mov
and
jbe
in
cmpsl
rcr
cmp
pop
add
cmp
std
cmc
pop
xchg
mov
mov
mov
inc
sbb
push
and
lret
push
scas
or
aad
push
enter
pop
pop
mov
fisttps
out
orb
push
pop
je
je
movsl
inc
fs
adc
xchg
xor
adc
repnz
xor
imul
sbb
into
cmp
scas
repnz
daa
jle
sub
cmpl
scas
push
cmpl
scas
jmp
or
int
lcall
clc
loop
inc
mov
mov
mov
mov
cs
xchg
sub
fiaddl
inc
pushf
dec
mov
loope
cmp
data16
mov
pop
cmpsl
cmc
add
sbb
popf
inc
and
leave
or
mov
repnz
insl
stc
repz
cwtl
jb
pushf
adc
lea
movaps
inc
leave
cmp
sbbb
scas
jb
fadds
push
push
cmp
sub
hlt
pusha
dec
mov
mov
insl
addb
and
cmp
ja
stos
pushw
aam
in
pop
sbb
fildll
dec
xor
rorl
fldcw
or
je
jmp
jo
mulb
dec
sub
adc
jecxz
dec
inc
lods
sarl
andl
insl
popa
mov
sub
push
popa
sub
call
jle
or
cmc
xchg
cmp
mov
mov
and
inc
xchg
std
mov
xchg
sub
push
pop
cmpsl
stc
lock
add
orb
loop
insl
xor
popf
cs
addl
lret
ret
or
xor
mov
aas
andb
and
scas
inc
jns
test
jbe
sbb
cmp
pop
sub
add
idivl
push
xchg
sub
mov
xor
addl
lret
loop
shlb
jp
std
xchg
js
in
mov
test
mov
cmpsl
inc
pop
jmp
scas
mov
pop
shlb
fnstenv
mov
in
cmc
xor
outsb
fisubl
leave
wrmsr
cltd
arpl
jp
jo
into
iret
js
je
pop
out
cmp
jmp
fsts
cld
sbbl
out
or
insl
push
outsl
mov
push
xor
jnp
mov
hlt
in
ror
pop
sub
dec
push
inc
dec
inc
and
dec
dec
adc
sbb
inc
mov
test
jecxz
xor
popa
jecxz
sbb
dec
jae
lock
sbb
sbb
xchg
rolb
jmp
jbe
jecxz
mov
cltd
adc
mov
push
push
xor
fsubrs
sub
loope
mov
add
dec
gs
push
dec
xchg
inc
jmp
fidivrs
and
nop
scas
mov
jne
ljmp
push
iret
aam
push
dec
add
divb
dec
mov
jge
call
or
pop
lods
imul
in
loop
inc
xchg
and
mov
les
movsl
popf
push
mov
aaa
gs
mov
cld
xor
out
in
sti
xchg
jno
push
mov
addr16
arpl
adcb
roll
lahf
js
fdivr
lea
pop
mov
mov
inc
jno
pop
mov
xor
jge
in
dec
sahf
pop
iret
push
mov
mov
repz
lret
aaa
cld
push
shrb
adc
fnsave
popa
pop
cld
sbb
and
mov
jg
push
fdivr
imulb
frstor
inc
in
aas
push
mov
xchg
ss
inc
sbb
adc
stos
sbbb
pop
sbb
mov
pop
rcll
lods
stos
cmp
push
jmp
xor
lret
cmp
jecxz
mov
mov
into
stos
bound
aaa
movsb
add
xchg
aam
repnz
fsubrl
cwtl
cmpsl
sbb
push
je
mov
pop
jmp
sbb
inc
sbb
mov
push
xor
mov
fdivrp
mov
cmp
mov
dec
ds
and
pop
cmpsl
inc
aad
mov
jle
jecxz
mov
mov
ftst
xchg
push
sub
push
cmp
jns
lret
add
adc
cmp
out
aas
or
repnz
sysenter
xchg
icebp
cmc
leave
adc
hlt
adc
jne
sub
xchg
cmp
lret
in
jecxz
mov
pusha
push
jecxz
inc
and
cmp
mov
cmp
rorb
mov
lock
mov
icebp
jl
orl
mov
pop
mov
xorb
push
imul
aad
mov
pop
mov
mov
mov
outsb
cmp
push
outsl
idivb
sbb
icebp
cmp
pop
and
ss
add
mov
jb
repnz
rcl
mov
repz
jo
dec
jne
cmpsl
push
push
mov
stos
in
es
pop
out
jns
jge
cli
mov
cld
dec
fldl
cli
outsb
hlt
adc
andl
adc
das
and
nop
jno
mov
or
lods
stc
jg
lea
popf
fidivrs
sbb
mov
push
pop
sbb
dec
mov
mov
ret
cmp
fldt
pusha
sbb
jns
stos
repnz
lret
ljmp
daa
les
mov
xor
jbe
cmp
test
pop
flds
and
repnz
inc
mov
dec
js
cmp
xchg
add
jno
mov
mulb
addr16
xlat
in
int3
pop
repz
push
cmp
cld
inc
mov
sbb
cli
nop
movzbl
out
jns
pop
jl
iret
mov
lea
sahf
xchg
jne
stc
mov
ss
xchg
xor
out
cmp
xor
sub
xchg
aaa
cmp
add
mov
call
pop
shll
sbb
lea
dec
pop
mov
inc
outsl
ds
aas
xor
and
mov
iret
popa
mov
lcall
mov
pop
adc
dec
popa
sbbb
adc
jbe
fucomip
push
cmpsb
stos
inc
repnz
cmp
sarb
sub
lea
and
mov
ret
cli
lcall
pop
lahf
push
mov
fimull
cmp
push
xor
pop
cld
or
mov
dec
push
rorb
inc
in
cwtl
fcomi
or
add
pop
cmp
mov
jns
movsl
paddd
push
jne
push
mov
and
jmp
popa
add
jns
insl
cmp
mov
addr16
out
lock
insb
pop
call
pop
mov
sub
and
adc
xchg
cmpsb
sahf
nop
not
cmp
cs
mov
lcall
cmc
xor
in
sbb
jne
push
test
pop
sti
jnp
movsl
cltd
fsubrs
notl
jo
std
in
mov
push
adc
fcom
xor
hlt
hlt
or
mov
jne
mov
dec
pop
or
in
cmp
xor
mov
mov
dec
scas
int3
pop
aad
out
and
dec
xlat
sbb
dec
in
adc
and
test
add
sti
jns
xchg
cld
daa
mov
mov
fwait
push
add
mov
xor
sub
stos
xlat
testb
loope
fs
or
psllq
sub
xchg
sub
shl
sbb
cmp
sbb
xlat
push
ljmp
fimuls
push
call
xchg
aas
insb
aam
add
ljmp
lcall
rolb
ja
ja
mov
add
dec
inc
ds
mov
dec
cmp
or
sahf
notb
lahf
jns
mov
jmp
cld
xchg
jecxz
daa
cwtl
pop
lcall
movsl
push
adc
mov
push
loop
cmp
pop
adc
outsl
shlb
ja
mov
movsb
shl
push
mov
pop
cmp
enter
jg
or
jmp
lds
mov
in
movsb
clc
gs
adc
cld
sbb
mov
jecxz
aad
lret
lret
and
loop
std
test
pop
xchg
out
pmaxsw
add
ds
hlt
mov
lods
push
pop
sbb
jne
jns
pop
iret
sub
adc
mov
sbbb
jno
cmp
inc
rcrb
push
add
xchg
xor
aam
mov
fwait
ljmp
mov
loop
ljmp
or
out
and
lods
or
lea
ret
sbb
push
mov
xchg
xchg
or
mov
or
mov
sub
jle
in
dec
push
sub
mov
bound
lods
mov
movsl
mov
adc
xchg
fisubs
xor
in
fildl
fisubl
push
mov
xor
xlat
push
jns
push
add
sbb
push
stos
das
xchg
inc
sub
lods
mov
adc
and
stos
pop
adc
pop
stos
mov
leave
mov
loop
sbb
fstl
mov
adc
inc
mov
pop
outsl
xor
pop
shlb
mov
dec
paddq
test
lret
decb
dec
add
jg
mov
lock
shl
inc
pop
push
call
xchg
pop
xlat
xchg
mov
jge
xor
icebp
jmp
in
and
push
dec
mov
xor
aas
inc
inc
add
add
cltd
cmp
shll
mov
inc
mov
sbb
out
mov
push
jnp
xor
inc
push
xor
fwait
je
inc
popa
pop
lock
sub
jecxz
push
cwtl
lret
mov
mov
sti
push
xor
xchg
push
sbb
dec
sbb
fsubs
xchg
int3
inc
pop
sbb
push
rolb
sbb
and
jp
push
add
push
es
aas
cmp
cwtl
insl
lock
adc
ds
mov
dec
js
fcmovbe
aas
sbb
adc
dec
xchg
and
insl
push
orl
out
push
jns
mov
mov
xor
sbb
push
cmc
dec
imull
and
pop
jle
add
xor
je
ret
iret
hlt
addr16
cmp
movsl
mov
mov
xchg
lods
cmc
stc
xchg
imul
aad
je
test
rclb
xchg
sub
adc
mov
cmp
add
mov
mov
stc
push
les
and
adc
cmp
cmpsl
sbb
dec
in
xchg
push
test
or
jns
faddl
adc
decl
cmp
cwtd
or
adc
cmp
mov
mov
pop
xchg
and
movsb
into
out
adc
add
gs
sbb
ret
fsubs
mov
or
xor
mov
cmp
mov
mov
icebp
add
xor
pusha
xchg
iret
dec
add
int3
cmpl
mov
mov
jno
sub
addl
ret
xor
mov
sub
stos
repnz
les
scas
sub
mov
roll
test
and
mov
cmp
icebp
fwait
inc
jg
jp
sub
and
in
in
mov
jl
push
sbb
xor
shr
mov
outsb
mov
cmp
lret
mov
inc
adc
xchg
sar
jmp
daa
mov
sub
and
mov
les
bound
jbe
mov
pushf
loop
xlat
cmpsl
mov
lods
ret
push
popf
xor
inc
ljmp
jg
addb
or
outsl
orl
ljmp
cmp
icebp
pushf
sub
mov
lds
dec
cwtl
flds
dec
fdivrp
cs
inc
popf
movsl
cmpsb
orb
mov
sti
adc
dec
or
test
or
fwait
jle
test
pop
repnz
mov
mov
and
xchg
shrl
push
cltd
sub
sub
jae
iret
stos
push
sbb
aas
mov
stos
fwait
lea
nop
sets
mov
sbb
jno
in
out
xchg
fidivs
push
insl
push
xchg
adc
adc
pop
mov
dec
xchg
push
fcomps
xor
sub
in
mov
adc
jbe
mov
adc
sarb
add
sbb
cmp
rolb
nop
outsb
mov
cmp
jecxz
mov
mov
out
fildll
mov
fiaddl
test
scas
je
dec
fisttpll
sbbb
andl
fs
scas
lahf
pop
in
lret
mov
insb
adc
jnp
jg
fldenv
inc
mov
inc
out
mov
loop
push
and
inc
fimuls
out
test
mov
add
sbb
jbe
jp
aas
and
inc
scas
push
mov
js
cmp
add
cmp
inc
cmp
lcall
test
js
cmpsl
xchg
and
xor
jg
loop
mov
stos
outsb
jae
mov
xor
xchg
dec
cwtl
je
into
xorb
imul
dec
pushf
bound
mov
lahf
bound
or
in
lret
jmp
xchg
mov
jge
add
sarb
test
dec
or
cmp
andb
pop
insl
scas
lods
pop
movsl
in
xchg
lret
mov
leave
outsb
or
sahf
xor
outsl
int3
outsl
jo
push
imulw
mov
mov
int3
imul
mov
pop
push
test
adc
xchg
xor
mov
xchg
in
jmp
fadd
lcall
fdivs
and
sbb
imul
test
and
scas
repz
mov
mov
out
movsb
es
cmp
cli
pop
mov
fwait
clc
fwait
sub
adc
hlt
inc
out
and
js
outsb
sub
fists
add
mov
sub
and
sti
aas
or
add
sbb
inc
aam
pop
inc
cmpsl
icebp
orb
mov
nop
xor
jecxz
out
stc
jae
movsb
mov
pop
push
in
and
int3
aas
aas
cmp
inc
sbb
and
test
mov
mov
stos
xchg
jno
ret
or
stos
xorb
jbe
fdivrl
addr16
or
cmpsb
mov
pop
cld
mov
dec
addr16
xor
or
dec
in
jae
add
adc
xsha1
cmpsb
or
aad
ja
mov
ja
mov
sarb
jns
leave
dec
adc
mov
adc
lret
bt
loop
pop
mov
push
out
mov
pushl
repnz
cmp
sahf
lods
dec
jecxz
in
orb
or
jle
test
daa
and
cld
and
stos
jb
out
mov
xchg
fwait
xorb
dec
pop
dec
cmpsb
cmp
cmp
inc
xor
out
mov
movsb
mov
ret
icebp
inc
inc
aaa
add
outsb
push
movsl
sub
shlb
xchg
mov
ficoms
popa
aaa
xor
lcall
pop
xor
insl
dec
sub
push
and
sbb
and
sub
stos
rol
mov
cwtl
aad
inc
lods
xlat
or
xlat
out
cmp
fsubrs
xchg
mov
push
jb
cwtl
inc
jns
pop
inc
test
out
in
dec
pop
add
lret
jne
imul
push
add
fimuls
call
sub
scas
shll
and
ljmp
sti
cmp
shl
popa
adc
ja
es
sub
inc
in
leave
leave
cmp
out
ret
mov
mov
push
int
mov
push
icebp
cs
adc
and
repnz
jl
mov
xor
xor
add
hlt
les
pop
lds
sbb
outsb
cld
mov
aam
scas
mov
repz
popa
cmpl
mov
subl
mov
je
sub
enter
psubq
add
daa
pusha
test
call
out
das
add
das
mov
push
or
push
fcmove
jo
mov
mov
in
push
xchg
jb
sbb
push
xchg
shl
sbb
cmp
jo
fcompl
aaa
mov
add
movsl
leave
lods
popa
fcmovu
jbe
das
xor
jno
cld
aas
int
test
cmpsb
je
mov
sarb
inc
xchg
rol
mov
js
and
push
outsl
mov
dec
cmp
mov
add
cld
into
push
xlat
pop
or
and
bound
jl
cmp
std
in
pop
jo
mov
test
dec
mov
jae
jecxz
add
add
adc
lds
rcrl
cmp
cmp
fildl
das
in
jg
js
rcrl
pop
jbe
popf
jae
or
das
js
push
hlt
cmc
popf
push
lahf
ficoms
jl
imul
jge
mov
bt
pop
push
mov
loopne
nop
lods
shl
cmpsl
clc
mov
and
mov
icebp
mov
inc
repnz
cltd
push
cmp
pop
pushf
es
movsb
add
mov
ds
negl
jne
or
push
mov
sbb
pop
or
push
push
hlt
fnstsw
test
call
stos
loop
clc
mov
add
cmp
dec
jb
fsqrt
mov
xor
mov
lcall
scas
cltd
jo
push
mov
cld
adc
js
les
push
into
aam
sub
outsl
pop
mov
pushf
jae
test
xor
addr16
bound
outsl
scas
push
outsb
push
xor
jecxz
mov
cmp
inc
divb
mov
in
pop
lock
dec
lods
in
in
pop
and
fcmovnbe
push
cmpsb
es
dec
xor
fnstsw
aad
dec
pop
mov
inc
orb
jl
inc
aaa
xchg
cld
dec
fildl
lods
sbb
mov
out
or
cmpsl
dec
push
pop
pusha
sub
and
mov
sbb
jmp
mov
int
sub
mov
cmc
push
mov
icebp
mov
jb
gs
inc
cmp
jl
out
shl
dec
dec
and
sub
add
lods
mov
sahf
sti
fnstcw
ret
xor
pushf
aas
shrl
push
cmc
and
aad
mov
inc
jecxz
cmp
fiadds
sbb
enter
aad
mov
mov
pop
push
shrb
outsl
mov
cmp
in
mov
jmp
pop
sub
pop
push
sbb
notb
les
cmpb
arpl
sub
pop
inc
lret
shr
dec
es
or
outsl
mov
mov
push
sbb
pop
push
sbb
cmp
pop
ret
mov
xor
mov
loope
push
jmp
pop
xchg
adcb
daa
pop
inc
stos
sub
push
mov
add
rorb
loope
cld
mov
xchg
movsl
leave
pop
gs
push
testl
test
mov
dec
sbb
add
pop
lods
cmpsb
out
in
pop
add
rcrb
ret
mov
test
icebp
shrb
movsb
jecxz
lock
pop
subb
lea
cmp
lahf
push
or
aam
pop
hlt
inc
fisttpl
adc
dec
shlb
insl
xchg
jb
add
cmpb
gs
adc
test
fimull
push
mov
test
cmp
cwtl
xor
hlt
jp
cmp
test
and
aam
jmp
je
insb
mov
iret
out
outsl
out
xchg
fdivrl
fmull
in
pusha
mov
sbb
mov
pop
mulb
or
mov
lcall
add
jnp
fcmovnb
mov
clc
out
dec
ja
jns
stos
loop
jle
in
repnz
arpl
and
stc
xchg
jno
outsl
push
int3
sub
dec
jb
dec
icebp
inc
mov
addr16
pop
lds
mov
xchg
dec
cmp
sahf
call
xchg
push
movl
aaa
mov
xchg
and
lods
add
in
or
mov
or
mov
xchg
jbe
aas
jno
add
in
mov
je
inc
aaa
xchg
clc
insl
sub
and
aam
lods
loopne
bound
test
xor
inc
sub
push
cmpsl
daa
loope
push
stos
rorb
test
mov
xor
int
es
mov
adc
out
cmp
lret
inc
pop
mov
div
adc
inc
imul
jmp
out
mull
cmp
aam
adc
dec
jmp
decl
fcmovnb
mov
push
pop
mov
jb
scas
mov
pop
repz
or
pop
dec
hlt
or
in
mov
pop
lret
mov
ss
in
mov
mov
popl
jl
lret
sbb
jbe
pop
cmp
arpl
mov
mov
dec
pop
into
out
jge
jle
push
into
test
arpl
lea
mov
int3
sbb
inc
cld
fmull
out
in
outsl
hlt
mov
and
inc
mov
jl
push
pop
push
stc
pusha
push
sti
popf
or
mov
mul
push
insb
roll
dec
lods
inc
mov
loopne
lds
stos
std
popf
stc
add
push
jbe
leave
pop
push
adc
gs
cmp
movb
cmc
ret
mov
ret
cmpsb
fidivl
jecxz
fcoms
sbb
adc
lea
stos
jl
inc
int
pop
nop
cld
ja
jb
jb
pop
sub
xchg
in
jnp
push
pop
pop
sbb
sbb
inc
jno
pop
ret
int
out
lret
lret
fcom
jns
movsb
dec
scas
xor
mov
stc
popw
jmp
cmp
pop
hlt
mov
adc
inc
out
sub
cli
push
xchg
lods
xchg
xchg
mov
mov
dec
das
mov
daa
movb
imul
mov
aaa
jo
lahf
lods
mov
ds
and
xchg
repz
in
pop
outsb
icebp
cmp
out
inc
pop
cmp
xchg
pop
pushf
ljmp
push
xchg
jp
shrl
gs
aam
pop
sub
inc
xchg
mov
adc
lcall
jl
jle
fisubs
mov
inc
mov
adc
sbb
pop
or
dec
scas
lea
out
jmp
jecxz
xlat
pop
sbb
popf
fcoms
call
divb
or
je
xor
mov
arpl
leave
imul
sub
nop
xchg
jnp
sbb
sbb
mov
mov
add
add
ljmp
nop
cmpsb
les
and
dec
pop
or
sbb
sub
in
filds
aaa
push
maskmovq
notl
cmp
xor
lret
out
aas
arpl
inc
fs
inc
ss
mov
and
rorl
lahf
sub
add
lret
cwtl
faddl
mov
sbb
inc
mov
movl
ss
out
xchg
int
int
aaa
xchg
or
dec
hlt
mov
stc
cmpsb
daa
sbb
aad
out
push
and
mov
out
xchg
pop
in
or
sub
push
add
sub
cmp
mov
in
xchg
enter
sub
cmp
mov
push
pusha
mov
xorl
dec
jge
lret
mov
jnp
cmc
pop
inc
xor
test
and
pushf
mov
enter
jbe
sbb
jg
hlt
or
cmpsl
adc
fdivrl
int3
sbb
xchg
into
push
mov
and
mov
jg
sub
outsb
int3
out
mov
jns
jnp
or
std
fisttpll
ss
inc
mov
mov
mov
mov
mov
pop
sbb
xor
lea
es
dec
mov
lods
and
mov
mov
sbb
mov
jns
mov
push
cli
shll
dec
int
xchg
lods
mov
fmul
fstps
sbb
xchg
and
jbe
jmp
test
fsubrl
xor
push
insl
mov
mov
and
repnz
xchg
mov
out
in
cmp
ret
push
orl
cmpsl
inc
into
into
enter
or
dec
iret
adc
xor
aad
mov
loopne
mov
loope
out
aam
sub
sub
sar
dec
out
rcr
dec
mov
in
jmp
mov
dec
add
sub
mov
imul
in
jg
inc
ja
repz
sub
dec
and
ds
idiv
mov
iret
sub
les
push
xchg
divb
jbe
and
jne
push
xchg
leave
mov
dec
dec
scas
push
push
push
sbb
xor
insb
mov
cltd
std
pop
push
adc
stos
out
jae
pop
lods
jno
pop
mov
cmp
test
sbb
faddp
fcoml
clc
cmpsb
sub
daa
mov
pop
inc
lods
scas
inc
cs
xor
loopne
leave
xor
inc
mov
mov
call
addr16
sbb
dec
dec
int
push
nop
mov
js
inc
aam
outsl
mov
push
into
jns
jnp
or
and
stos
movsl
out
inc
mov
testl
inc
push
inc
ljmp
addr16
inc
pusha
enter
stos
sub
mov
int
xchg
in
subb
decl
jno
push
pop
pushl
sbb
out
mov
adc
add
mov
icebp
mov
cmp
lds
sub
adc
adc
dec
scas
mov
mov
pop
jmp
inc
mov
les
fadds
mov
aaa
sti
or
loope
cmpsb
jo
xor
xchg
pop
push
add
lock
lahf
mov
movsb
mov
add
mov
pop
bound
mov
nop
cmpl
add
inc
fcomps
adcb
mov
pop
loopne
imul
lods
lret
movsb
adc
fmuls
push
fs
push
sahf
mov
xchg
mov
mov
xchg
movl
jg
cwtl
addl
aam
aam
lcall
push
enter
fidivs
mov
pop
xlat
je
lods
je
or
fwait
sub
or
xorb
fsubrs
cli
mov
jb
aad
xor
dec
push
fcmovb
xchg
dec
iret
sub
sbb
push
pop
loope
xchg
arpl
sbb
loope
shlb
and
jno
xlat
iret
xchg
jmp
loopne
movsb
pop
adc
int3
lahf
dec
jae
jmp
popf
insb
lods
jns
sahf
imul
decl
jge
dec
xor
in
push
jb
int3
add
jnp
and
into
jp
add
das
adc
push
jg
insl
rcll
cmp
pop
mov
dec
cmp
xchg
sub
add
fsubl
loop
mov
jmp
insl
pop
mov
xor
fcmovu
cmp
jno
loopne
stos
and
movsl
aaa
inc
jno
pop
and
insb
test
sbb
rol
push
sbb
rcll
pop
fcmovbe
enter
in
xchg
call
push
ja
jle
imul
cmp
das
les
daa
lea
mov
or
dec
and
adc
mov
fcomp
into
js
icebp
xor
sti
fnstcw
dec
adc
cmp
inc
push
lret
aam
andl
stos
js
cmp
popf
in
int
adc
shll
sub
sub
push
data16
adc
mov
pop
pop
and
nop
mov
add
push
in
add
adc
jne
xchg
cli
repnz
cs
pop
xlat
mov
mov
mov
adc
and
xor
sub
jnp
lods
cmp
mov
fwait
xchg
pushf
and
in
inc
outsb
adc
pusha
test
jnp
mov
mulb
mov
and
iret
xchg
enter
test
pop
xchg
adc
pop
adc
xchg
add
jl
sbb
push
pop
mov
stos
loopne
popa
cmp
cmc
shlb
test
jae
adc
lods
test
outsl
and
adc
lret
das
and
add
out
divb
mov
xor
xchg
imul
xchg
xchg
dec
xchg
je
jne
push
and
outsb
inc
addb
cmc
push
notl
daa
cli
in
jl
mov
or
ljmp
mov
jl
ss
jg
mov
jb
xchg
mov
stos
mov
cmp
inc
movb
sbb
call
lahf
fimuls
xor
mov
xchg
scas
xchg
push
sbb
dec
cmp
rcr
cltd
nop
mov
mov
data16
sub
in
and
jnp
cltd
fadd
jns
lret
push
inc
lods
repnz
adc
jmp
mov
dec
fs
sbb
into
and
or
sbb
popa
or
out
push
js
push
fidivrs
adc
ds
xlat
outsb
popa
jo
adc
xchg
popa
sbb
ss
cmp
dec
dec
in
add
dec
out
outsb
inc
jge
dec
mov
pop
push
adc
jae
adc
cld
pop
and
mov
mov
dec
jl
insb
push
dec
sub
je
das
xchg
add
or
xorl
mov
push
or
lds
mov
lods
push
sbb
shll
pop
test
fidivrs
adc
ss
pop
inc
push
ret
aas
repnz
test
and
dec
cltd
add
sti
mov
mov
aas
mov
rcrb
jno
mov
adc
fisttps
cld
pop
jl
xor
mov
es
or
lds
lahf
jo
loopne
cmpsl
jbe
cmp
ss
lret
fwait
inc
and
cmp
jbe
into
sar
dec
sub
scas
fbld
mov
and
cmpsl
or
mov
loopne
inc
adc
stc
leave
mov
frstor
pop
xor
iret
popa
push
mulb
xor
xchg
sbb
adc
jmp
lahf
fwait
pusha
enter
inc
pop
pop
inc
fimull
adc
dec
out
xor
ds
loopne
sub
pop
push
sahf
mov
add
scas
fadds
adc
cmp
test
pop
es
aam
sub
nop
or
xchg
push
mov
jne
jns
pop
repz
incb
xchg
xor
lea
mov
inc
out
xchg
mov
mov
sub
mov
repnz
xchg
inc
adc
and
call
add
insl
fisubs
cwtl
add
xchg
lds
push
xchg
jnp
xchg
sbbl
sub
adc
xchg
xchg
scas
jne
mov
lret
xlat
cmp
adc
lds
cmpsl
int3
bound
mov
mov
add
xor
xchg
cmp
mov
aad
xlat
xchg
call
sbb
sub
add
xor
shll
jno
xor
pop
push
push
imul
lret
adc
lock
outsb
push
push
outsb
pop
leave
add
aam
push
ljmp
in
dec
lock
imul
lods
or
bound
jnp
and
pop
in
and
pop
xchg
cltd
push
and
adc
call
adc
lock
pop
dec
mov
mov
out
inc
xchg
xchg
mov
test
orb
pop
je
xor
lds
sbb
cmp
mov
sbb
insl
inc
cmpb
ss
sbb
inc
cmpsl
pop
imul
fisubs
adc
ret
test
insl
repz
mov
pop
push
out
bound
das
dec
arpl
repnz
bound
mov
cmp
inc
xchg
jl
pop
call
insl
into
sbb
pop
jp
mov
push
inc
xchg
cwtl
in
nop
data16
push
pusha
sub
and
mov
lahf
add
lret
mov
aad
and
lock
xor
add
fadds
mov
out
call
pop
lret
xchg
cmp
decl
pusha
testb
ljmp
jbe
add
in
loopne
fdivs
inc
movzbl
cwtl
add
mov
jo
and
lret
xchg
arpl
in
popf
mov
xor
inc
icebp
jg
pop
lds
mov
iret
int
leave
insl
nop
inc
or
movsl
pop
mov
mov
test
mov
cmpsl
add
adc
daa
rcrb
ss
repnz
rorb
and
es
test
hlt
cmpsl
inc
sarl
mov
pop
lods
rcrb
fldcw
rorb
in
fwait
in
push
push
faddl
fisttpl
push
test
int
enter
mov
pop
adc
cmp
mov
pop
ret
push
aam
lret
ja
inc
ss
or
pop
or
lods
push
ficompl
push
push
in
test
push
mov
lret
pusha
test
xor
pusha
pop
mov
xor
imul
pop
fistpl
push
inc
and
in
or
xlat
xchg
mov
pop
cwtl
push
dec
pop
push
mov
popf
jnp
imul
sbb
xor
jb
ja
ficompl
outsl
xchg
xorb
mov
pusha
pusha
jne
fwait
add
dec
sbb
push
mov
test
movsl
lods
xchg
push
fidivl
fisubrs
sbb
clc
or
sbb
cmpsb
sbb
pop
ret
in
fcomip
sub
push
mov
xchg
dec
frstor
cs
in
or
cs
push
dec
sbb
test
mov
sbb
popa
or
iret
mov
dec
cmp
adc
inc
sub
pop
xchg
sub
fistl
or
mov
add
fcompl
cmp
stc
test
or
jnp
cmp
ds
aaa
lretw
into
in
gs
mov
cmp
scas
jge
imulb
mov
sub
je
clc
iret
mov
jb
hlt
jge
pop
cmp
mov
lock
sub
sbb
jns
neg
pop
pop
jne
in
sub
and
or
mov
and
mov
arpl
scas
lea
and
sbb
jge
mov
lock
xchg
sub
rcrl
test
cmc
lea
mov
jecxz
or
push
lret
cmp
xor
pop
add
mov
mov
push
push
inc
mov
dec
sbb
dec
cmp
out
xchg
cmp
jmp
xchg
push
inc
inc
push
pop
enter
sub
pop
mov
push
mov
lcall
sbb
jp
popf
into
shl
lods
out
mov
dec
mov
cld
aas
lret
ffreep
mov
cwtl
mov
out
in
adc
mov
mov
jmp
in
dec
aad
xchg
int
jae
lahf
lods
test
aad
add
sub
jecxz
mov
xor
shr
push
ja
out
fistpl
jns
adc
ss
lahf
daa
push
mov
and
mov
xor
inc
div
data16
xlat
dec
mov
lret
jnp
push
mov
mov
jle
adc
mov
dec
fwait
dec
mov
mov
mov
into
push
fimull
sbb
test
sar
lods
lret
lock
cmc
add
dec
dec
push
pop
xlat
hlt
int3
adcb
mov
adc
imul
adc
data16
bound
mov
cmpsb
ficomps
int
jnp
dec
cld
xchg
int
dec
rorb
jb
xchg
repnz
jmp
lea
inc
and
push
mov
sti
and
and
add
mov
mov
popa
popf
into
sub
mov
test
movsb
mov
jl
xor
adc
jb
test
nop
and
mov
pop
mov
mov
iret
leave
in
popa
inc
jae
in
fwait
adc
xchg
mov
jecxz
cmp
jl
mov
jle
mov
imull
lods
jnp
mov
into
push
push
add
stos
stos
mov
xorl
flds
pusha
testl
aas
shlb
lds
shlb
aas
out
outsl
mov
fs
in
adc
and
jp
dec
mov
inc
add
dec
jno
aam
outsl
cwtl
cmp
xor
add
sbb
xlat
popa
sbb
ljmp
sbb
lahf
xchg
mov
jg
call
repnz
bound
dec
jmp
in
pop
cmp
out
das
sbb
push
movd
jo
or
push
sbbb
repnz
pop
dec
test
push
push
pop
mov
sbb
test
jle
out
stos
inc
pop
movsb
lock
daa
loop
loope
or
jo
ret
adcl
lods
adc
orb
loopne
loop
outsl
push
xchg
imulb
js
xchg
loopne
xchg
and
movsb
mov
hlt
jle
mov
push
adc
pop
loopne
pushf
xchg
fwait
xchg
jmp
mov
int3
std
faddl
outsl
out
in
inc
in
push
mov
mov
dec
mov
arpl
int
add
mov
sarb
icebp
jecxz
jbe
and
sub
add
jmp
loope
aas
mov
leave
test
pop
fs
xchg
mov
out
adc
popa
andb
outsb
mov
pop
push
cmp
sub
dec
loope
lock
mov
test
inc
fisttpl
push
push
xchg
test
push
or
stc
loopne
jge
test
cmp
mov
fs
jbe
sbb
cld
pop
mov
js
cmp
jnp
pop
mov
dec
divl
mov
pop
dec
les
leave
outsl
fcompl
popa
iret
push
dec
into
xchg
jg
add
outsl
sub
mov
lcall
outsl
sub
setno
add
and
enter
out
or
push
adc
sbb
negl
pushl
lea
mov
out
jo
jb
pop
ficompl
mov
inc
jnp
aas
loopne
in
std
adc
in
shll
mov
dec
or
cmpsl
int3
ja
icebp
mov
inc
roll
aaa
lock
cltd
sbbb
cmpsl
out
add
imul
xchg
xor
or
fdivrl
js
js
add
dec
clc
mov
or
adc
lahf
mov
push
ja
pop
movsl
addr16
adc
cmp
lret
std
pop
mov
in
imul
sub
mov
std
mov
adc
xorl
aam
push
mov
push
xchg
push
loop
or
push
sarb
nop
jbe
adc
shll
pop
or
popa
jns
testb
jnp
sbbb
mov
lea
pop
push
shll
mov
cmp
dec
fildl
addl
mov
sub
aaa
lods
rorl
sub
test
lahf
sbb
lahf
jns
pop
pushf
imul
sub
push
inc
cwtl
pop
push
and
sbb
sub
inc
dec
repz
test
sub
fwait
xchg
jbe
nop
and
jb
enter
lds
cmp
mov
shlb
bound
stos
test
inc
out
xor
lods
cmp
repz
cmpsl
inc
and
mov
pop
lcall
sbb
add
jae
jns
out
jmp
jge
aam
sbb
jp
les
push
sbb
mov
push
cmpsb
clc
movsl
add
pushf
repz
xor
pop
into
repz
or
cwtl
loope
shlb
xorl
ds
aas
or
inc
sbb
test
lods
lret
add
repz
or
sbb
inc
mov
gs
aaa
cld
and
cmp
leave
pop
scas
ss
push
sub
and
adc
cmp
pop
int3
insl
repz
andb
or
mov
mov
cmp
jne
jg
test
jmp
repnz
xor
sbb
cmpl
mov
or
cmp
jl
push
in
mov
repnz
jg
push
push
mov
pusha
cmpsb
pop
ja
jl
movsb
or
pop
pop
popf
or
pop
lock
push
ljmp
sub
fyl2x
ljmp
aas
jne
xchg
xor
xlat
xlat
pop
loop
jle
or
pop
out
add
adc
sbb
insb
ret
pop
sahf
lods
cmpsb
pop
popa
fwait
push
pop
in
and
push
icebp
inc
jg
mov
mov
test
pop
fidivrs
push
test
rorl
je
popa
adc
shlb
push
subb
ljmp
and
or
push
fcmovne
mov
cld
mov
aas
popf
push
sbb
stc
nop
xor
ret
or
mov
dec
mov
imul
in
or
out
mov
rclb
sti
dec
mov
xlat
rcll
xchg
icebp
pop
fstpl
pop
call
push
lods
inc
xchg
cmpsl
push
mov
add
int3
dec
fdivrl
les
das
leave
xchg
xchg
jbe
in
mov
fs
pop
test
insb
ret
pop
sbb
dec
add
push
bound
pop
jmp
jo
int
out
pop
call
xchg
call
jge
and
xchg
sbb
sbb
scas
sbb
data16
sub
xchg
into
jp
ja
ljmp
test
inc
xchg
sarl
stos
adcb
mov
js
mov
mov
mov
sahf
int3
dec
rcrl
xchg
cltd
arpl
xchg
leave
sub
and
lods
and
ret
dec
pop
add
push
insl
mov
sbb
xor
dec
test
aad
iret
cmpsb
lahf
fldcw
and
hlt
or
insb
mov
into
dec
mov
or
cmp
gs
std
sub
xchg
mov
aas
jne
lock
dec
adc
push
mov
dec
popf
adc
pop
push
lock
mov
scas
int
fwait
cmp
out
mov
iret
mov
sti
mov
jecxz
pop
out
push
ljmp
push
push
rcrb
mov
mov
in
lock
decl
clc
jge
mov
pop
in
out
inc
stos
and
dec
call
or
push
xor
or
fstps
cltd
loopne
dec
mov
mov
int
jae
jnp
mov
enter
std
std
or
mov
in
jp
cwtl
push
int3
fsubrl
inc
mov
mov
mov
mov
mov
fstl
pushf
adc
xchg
mov
jge
xchg
dec
inc
fidivrl
xchg
mov
jmp
cmpsl
xor
jl
mov
rorl
add
loopne
clc
and
rol
add
into
pusha
icebp
mov
shlb
add
rolb
and
xlat
mov
cmpsb
lcall
sub
ret
sti
ficomps
pop
gs
push
enter
stos
cmpsl
mov
mov
hlt
fld
cmpsl
dec
dec
iret
mov
push
jle
push
adc
movsl
imul
jmp
add
sub
jmp
xor
call
cmpsb
add
xor
fcmovnb
xchg
repz
sar
inc
iret
cmp
cli
or
ds
fdivs
cmc
imul
icebp
fdivrs
jge
cmp
mov
adc
aaa
jge
outsl
push
and
loope
dec
xor
push
dec
aad
adcl
mov
test
pop
aaa
andb
dec
xor
pop
cs
inc
in
jmp
sbb
or
add
das
ds
stc
sahf
sbb
cmp
mov
xor
fadd
push
rcr
push
fistps
and
incl
or
bound
cltd
pop
das
and
imul
sbbb
das
jp
lock
clc
xor
insb
mov
rcr
fadd
adc
addr16
enter
loop
sbb
pop
cmc
dec
cmp
cmp
test
jbe
xchg
shl
dec
push
cmpsb
mov
hlt
mov
push
cwtl
or
push
mov
mov
cli
mov
push
or
xor
clc
push
popa
push
mov
sbb
dec
bound
jnp
inc
enter
nop
push
and
lods
repz
pop
cmc
inc
jmp
push
mov
jae
push
jmp
push
pop
loope
clc
stos
loope
inc
je
aad
mov
aam
dec
push
mov
outsb
clc
out
dec
ret
push
sub
inc
cmp
sub
sbb
jp
outsl
add
xchg
lahf
xchg
and
dec
daa
and
sbb
insl
pop
sarl
push
add
popa
daa
dec
dec
arpl
cmpb
ret
outsb
aam
and
lds
daa
cli
mov
dec
lods
xor
or
push
sbb
cwtl
xchg
test
xchg
sub
sub
out
xchg
pop
neg
gs
inc
sub
add
test
adc
loopne
fwait
fwait
xchg
pop
push
pop
std
scas
dec
movsl
and
or
adc
stos
andb
push
pop
push
xor
mov
xchg
pop
insl
das
cwtl
frstor
imul
jp
arpl
mov
lret
data16
lret
rcl
daa
fisttpl
cmpsl
in
popa
jbe
cmp
lods
js
or
adc
cli
mov
sti
arpl
in
cltd
repnz
roll
push
pusha
mov
ss
and
lcall
stos
pop
test
sahf
test
aas
mov
popa
cmp
aaa
xchg
jo
jge
sti
test
dec
stc
sub
inc
movsl
sbb
and
jo
in
jne
test
jnp
lods
xor
cltd
pop
cmp
sti
adc
jns
ds
cmp
xchg
push
stos
shlb
jns
mov
sub
pop
or
outsb
mov
fidivrl
or
adc
lock
or
fildl
andb
mov
xchg
testl
daa
lock
pop
test
sub
mov
loopne
les
loop
out
mov
repnz
sbb
add
adc
mov
shll
ljmp
pop
rcrl
dec
int
cmc
jb
cmp
cmpsb
and
ret
out
pop
ljmp
aas
stc
ds
jecxz
scas
xor
xor
ss
jne
repz
daa
xchg
flds
test
push
inc
pop
int
fwait
sahf
mov
push
or
mov
subb
mov
mov
out
out
mov
cmpsl
popa
imul
xor
hlt
je
ljmp
in
in
mov
jge
adc
add
jnp
jb
adc
out
in
aam
push
stc
cmp
icebp
dec
jle
test
pushf
nop
call
movsl
or
ficompl
mov
mov
inc
mov
sub
adc
mov
in
mov
inc
mov
outsb
mov
icebp
mov
or
cmp
or
stos
sbb
mov
dec
push
jo
jbe
push
hlt
cli
push
mov
nop
das
push
push
xor
pop
xor
sbb
pop
out
daa
clc
int
mov
sbb
fwait
pop
xor
aas
hlt
push
outsb
lock
fsubrl
cltd
test
and
ror
adc
fiaddl
xor
push
shr
inc
xchg
testb
in
dec
jecxz
sub
mov
inc
xor
js
loop
cmp
daa
and
ss
jb
push
popa
in
add
hlt
sbb
and
in
mov
cmp
mov
sub
imul
and
dec
mov
jne
ljmp
scas
mov
mov
pop
mov
movsb
add
xor
mov
jmp
in
mov
stos
and
mov
adc
add
cmpsl
jns
lods
and
push
push
sbb
cmc
adc
repnz
enter
shll
das
dec
fs
adc
and
dec
push
rorl
sahf
cmpsl
js
mov
push
sbb
ss
inc
mov
nop
add
mov
lcall
mov
or
or
xor
or
or
sub
shll
push
mov
stos
in
imul
std
jb
mov
out
sbb
push
imul
jbe
or
fsub
lret
xchg
lcall
mov
inc
jmp
and
scas
lods
mov
xor
sub
out
lock
cmp
in
pusha
mov
and
fstpt
push
lahf
pushf
gs
jne
ds
sbb
and
adc
dec
popf
aaa
jno
sbb
outsb
stc
sbb
adc
dec
sarl
or
xor
and
dec
add
sub
and
mov
in
cld
lock
jno
cmp
xchg
add
and
filds
mov
ljmp
outsl
adc
shlb
adc
mov
add
in
mov
addr16
or
inc
xor
clc
xchg
ret
adc
call
ds
fnstenv
ret
notb
add
out
insl
xor
cwtl
sub
enter
rcll
adc
push
mov
out
cmp
int3
sti
popa
leave
inc
mov
dec
xchg
cwtl
inc
pop
xchg
leave
dec
xor
shr
or
xchg
lret
fmuls
leave
pushf
or
and
fldl
inc
std
push
mov
loopne
mov
xor
lret
sub
xor
icebp
aad
cmp
inc
nop
inc
push
daa
cmp
lods
imul
push
jne
test
dec
call
repnz
hlt
adc
pop
push
popa
and
and
ds
or
push
dec
jmp
movsl
push
pop
push
xchg
pusha
pop
cmpsb
xor
scas
cmp
icebp
or
push
ret
push
out
insb
xor
add
lret
cmpsb
cltd
pop
jo
adc
cmp
fidivs
cmpl
xlat
imul
sbb
rcrl
lcall
ficoml
fwait
xchg
jle
les
jns
iret
idivb
popl
movsb
push
aaa
enter
mov
rclb
lods
pop
test
imul
ja
and
inc
mov
enter
sti
inc
xchg
callw
repz
mov
lea
mov
popa
xchg
lods
into
push
jmp
push
jge
cmp
mov
mov
lock
pop
adc
and
std
in
int
sbbb
filds
insl
pop
call
mov
inc
add
ja
and
cld
das
or
stc
xchg
sub
adc
jmp
int
fwait
sbb
push
cmpsb
cwtl
mov
pop
cmpsl
xor
inc
cmc
push
jp
ljmp
sub
pop
sbb
ja
stc
sub
enter
fnstenv
lock
jg
pop
test
fcompl
cltd
in
loope
mov
insb
xor
jo
loopne
loop
xor
pop
ficompl
add
xor
sub
push
add
data16
stc
in
cmp
in
mov
enter
mov
ds
or
in
mov
popa
test
jl
or
xor
mov
repz
and
dec
jecxz
cwtl
stc
xchg
int3
lods
or
xor
mov
jae
movsb
lret
cmpsl
inc
stos
pop
cs
das
es
in
cmp
pop
fdivs
mov
push
push
lods
dec
sub
and
dec
mov
data16
std
sbb
add
hlt
mov
sti
in
rcll
scas
inc
pop
and
push
lods
aam
fcomps
loopne
notl
mov
loop
xchg
idivb
pop
sbb
stc
cmp
mov
pop
push
pop
sahf
fnstcw
lcall
cmp
out
dec
sahf
in
mov
mov
mov
mov
imul
dec
pop
cwtl
lds
pop
push
in
int
and
ficoml
iret
pop
xor
push
test
cmp
jl
dec
cld
dec
push
sarl
mov
xchg
add
loope
clc
movsl
adc
dec
inc
cmc
mov
mov
shl
arpl
scas
pop
fs
dec
sub
add
std
and
mov
jno
mov
xchg
mov
inc
popa
ja
cld
aaa
cli
mov
pop
les
hlt
xchg
and
jle
aad
sub
out
jp
dec
jmp
xchg
stos
imul
arpl
inc
out
sti
into
jle
mov
push
std
pop
dec
pop
loop
lret
jne
fstps
in
mov
loope
inc
hlt
add
stos
push
xrelease
icebp
addr16
in
ss
sbb
bound
fdivl
xchg
pop
enter
fbstp
das
leave
fwait
inc
imul
sub
adc
add
xor
push
jne
shl
mov
int3
pusha
pop
imul
dec
lock
sti
cli
out
push
stc
in
jns
add
mov
and
lds
mov
adc
std
push
mov
mov
inc
shlb
std
sub
cmpb
xchg
jb
jp
fmul
dec
lea
incl
dec
mov
jne
xor
xchg
xor
lcall
filds
or
xchg
sahf
jb
jg
jge
push
xchg
adc
adc
mov
sub
push
push
sub
je
xor
inc
fiaddl
jle
shrb
xchg
or
and
inc
jns
and
dec
js
ja
sub
xlat
mov
test
xchg
stos
dec
push
imul
adc
repnz
es
pop
repz
push
push
je
ficoml
cmpsl
push
cmp
jb
int3
cmp
adc
std
sub
or
xchg
stos
arpl
incb
sahf
test
js
fsubl
adc
or
xchg
iret
mov
jns
mov
rorl
cmpsb
leave
add
push
iret
cmp
in
cltd
aad
jnp
xchg
es
push
js
arpl
loope
dec
xchg
fisttps
lock
loopne
mov
movntps
dec
add
aam
dec
rclb
mov
fnstsw
cmp
pop
aas
daa
mov
std
ret
cld
data16
mov
sbb
out
mov
and
rcll
lods
inc
scas
xor
inc
bound
and
loop
adc
fs
iret
int3
test
arpl
decb
pop
pusha
sbb
insb
xchg
int
xchg
jl
add
sbb
fidivs
sbb
inc
push
pop
lret
inc
cli
adc
sub
xchg
outsb
and
sub
fldt
xor
cmpsb
lods
js
jo
scas
inc
mov
sbb
fisubl
jno
in
push
jmp
push
or
bound
pop
out
dec
adc
out
stos
adc
adc
test
mov
push
repz
jl
je
and
loop
js
pop
dec
fsubrs
fwait
lods
mov
push
cmpsb
test
pushf
in
imul
xchg
add
imul
adc
mov
loop
cmp
jge
fs
fbstp
mov
and
push
push
pop
inc
test
call
mov
sub
xchg
aam
mov
scas
jb
aaa
and
stc
xor
xchg
int
cmp
pop
in
gs
popl
test
stos
jno
fisttps
push
std
cmp
xor
push
pop
adc
push
ds
push
lock
pushf
pop
popa
out
into
insb
cli
pop
rcrl
jbe
cltd
fwait
dec
add
dec
xchg
sti
lods
es
pop
rorl
mov
push
cmp
pusha
jl,pn
dec
mov
repz
add
mov
xor
sahf
adc
sub
xor
jbe
ja
inc
test
mov
sahf
bound
loop
push
add
lret
repnz
les
cmpsl
scas
sub
xchg
les
dec
push
jns
shr
jl
inc
stos
addl
dec
mov
ljmp
insb
mov
mov
xchg
jecxz
ja
dec
xor
icebp
cmp
int3
leave
fists
cwtl
ficoml
data16
out
and
cmpsb
cld
lds
icebp
repnz
and
jnp
js
fbld
sub
inc
insb
pushf
pop
daa
inc
enter
add
pop
aam
dec
in
dec
sbb
icebp
inc
es
mov
inc
cmp
push
mov
arpl
mov
and
mov
sti
cwtl
mov
mov
ja
sub
xchg
push
push
adc
adc
adcl
decb
daa
xchg
arpl
push
mov
repz
or
pop
sbb
jbe
push
imul
dec
inc
mov
inc
add
or
jne,pt
sub
mov
push
out
ror
pop
add
push
ss
mov
pop
out
jne
xor
push
mov
adc
inc
cltd
mov
aaa
scas
ja
repnz
aas
mov
ljmp
add
pop
into
lds
addr16
add
sarl
stc
cltd
jbe
mov
adc
leave
pop
mov
push
negb
mov
inc
sbb
imul
pop
mov
lcall
shll
dec
je
xchg
jb
cmpsl
cmpsl
std
lods
rcrl
loopne
cmp
popf
push
pop
cltd
test
popf
dec
shll
mov
fbld
sbb
adc
xor
dec
popf
xorb
in
sbb
mov
jl
push
push
ljmp
call
jno
int
push
and
sbbl
inc
ss
adc
mov
pop
fdivrl
icebp
callw
fwait
xor
and
xlat
loope
enter
jo,pt
mov
into
in
inc
mov
xor
jp
loope
repz
push
out
jb
es
pop
cmp
fwait
shrb
daa
stc
push
adc
mov
fs
or
inc
pushf
pop
jp
jmp
adc
pop
lea
adc
push
sub
std
sub
in
cmp
repnz
dec
pop
negb
cld
cs
sbb
push
xor
inc
xchg
ljmp
mov
xor
mov
sbb
mov
test
enter
cmp
sbb
push
xor
pushf
in
pop
or
jnp
mov
mov
js
mov
loopne
dec
fsubr
negl
scas
xor
xchg
lods
popf
mov
lahf
fmuls
sub
and
ret
clc
mov
sub
dec
cmp
lods
rcr
fs
ja
xor
pop
addr16
mov
jge
jp
jb
aam
cltd
cmp
jmp
ficoms
and
xchg
cmc
cwtl
mov
jmp
popa
or
xor
bound
imul
shll
inc
test
mov
in
inc
out
push
inc
shrb
test
push
jns
subb
mov
mov
movsb
aad
into
scas
sub
inc
add
daa
and
dec
test
sahf
lods
xchg
sbb
dec
mov
push
je
stos
shlb
clc
cli
pop
and
xchg
xor
decb
out
negl
in
fmulp
sbb
cltd
in
movsl
gs
ja
addr16
cmp
jo
pop
add
add
movsb
fcompl
out
mov
cld
nop
popa
pop
dec
jae
lock
arpl
ret
flds
jge
jl
ss
inc
adc
imul
jae
pushf
pusha
popa
and
inc
mov
inc
hlt
inc
adc
adc
push
fs
stos
jg
or
je
jae
and
rorl
dec
inc
dec
in
push
stos
in
stos
xchg
arpl
mov
sbb
mov
mov
mov
fisttps
ds
mov
aaa
lds
subl
xchg
sub
dec
mov
jle
sti
push
fistps
nop
or
sub
and
scas
pop
imul
xchg
dec
mov
jo
cltd
or
es
adc
mov
cmpsl
dec
jmp
adc
repnz
cmp
cmp
jne
imul
sub
xchg
aas
add
inc
das
lret
cmpsl
push
cli
mov
xchg
test
subl
lods
sbb
push
cwtl
pop
das
and
adc
fidivrl
jb
aaa
stc
sub
jmp
xchg
pop
cmc
inc
inc
mov
sbb
push
and
jae
xchg
retw
jmp
push
hlt
pop
cmp
cmc
xchg
ret
mov
hlt
enter
fdivs
int
mov
fsts
add
mov
mov
js
test
dec
mov
xchg
or
push
jnp
mov
ja
jnp
or
inc
repnz
scas
mov
dec
ret
xor
shlb
push
inc
aaa
sub
shlw
push
mov
xor
push
jle
xor
fldpi
cmpsb
out
xor
or
mov
cli
aad
sarl
sub
xlat
ret
ret
test
inc
sarb
lea
and
dec
push
test
shlb
adc
cvttps2pi
testl
fsubrl
cmpsb
das
jnp
stos
stos
push
sbb
mov
div
cld
jae
pop
push
cmpsl
jmp
jge
mov
mov
movsl
insb
sub
sub
cmp
cmp
nop
lret
pop
jb
ss
imul
mov
shr
dec
out
push
lahf
insb
and
pop
inc
or
mov
aam
cmpsb
jmp
imulb
addl
or
sub
jb
or
movsb
and
int3
add
push
xchg
dec
pop
xor
iret
mov
xor
loopne
mov
in
icebp
mov
out
mov
int
imul
adc
fnsave
mov
mov
movsl
or
dec
dec
and
cmpsb
roll
repnz
sarb
inc
pop
int3
cmp
stos
mov
fnstsw
push
mov
bound
push
in
cmp
out
insl
cs
xchg
fwait
cmpsb
pop
cmp
add
push
xor
sub
test
mov
in
jnp
sub
aad
push
pop
and
enter
cmp
mov
fwait
add
xchg
xor
dec
mov
jp
icebp
push
fldl
xchg
dec
outsl
stos
xorl
lods
jno
mov
in
ds
subb
std
jg
push
mov
insl
xor
add
mov
movsl
addb
test
in
test
ljmp
fdivrp
sub
push
aad
cmpsb
jbe
mov
lahf
xor
push
movsl
outsl
test
test
fwait
pop
lret
das
cwtl
inc
out
enter
mov
pop
jecxz
cmp
jae
or
jmp
test
jns
jne
xchg
fstl
pop
push
sub
mov
sbb
lcall
out
or
inc
insl
sub
lahf
mov
ljmp
gs
push
add
push
mov
ud0
sub
cmpsl
sti
xchg
push
imul
mov
xor
xor
stc
test
gs
insl
cli
shl
fmulp
adcb
test
out
add
sbb
aam
std
xor
jno
dec
shlb
insb
add
nop
not
add
out
sbb
div
mov
decb
dec
inc
adc
cmp
leave
mov
and
repnz
mov
aaa
mov
int3
pop
int
addr16
xor
or
hlt
pop
sbb
jl
pop
andl
adc
jg
cmpsl
dec
xor
xor
push
mov
ret
repz
jno
sub
aaa
xlat
inc
iret
fidivl
lret
stc
dec
sub
rorl
aad
add
shll
mov
test
fdiv
xchg
lahf
push
sbb
cmp
adc
adc
push
mov
pop
out
sub
sub
aas
in
dec
leave
scas
dec
mov
jl
in
sub
push
insl
cmp
inc
inc
jns
arpl
in
jne
jbe
fldl
xor
pop
pop
imul
stc
popf
jp
push
cmp
mov
mov
or
ljmp
inc
subb
dec
push
sti
nop
pop
mov
xchg
xor
repz
rcrl
js
data16
jmp
stc
jb
pop
cmp
inc
fstps
repnz
test
mov
jne
lock
xor
xchg
adc
sub
sub
jecxz
rcrb
cmp
cmp
cmpsb
pop
subb
sub
xchg
mov
jle
xchg
mov
insl
sub
aad
fs
outsl
pop
and
lret
dec
jecxz
lcall
inc
orb
test
sbb
out
sbb
mov
scas
stos
xor
mov
es
nop
adc
xchg
push
and
call
adc
sti
outsl
scas
jl
add
ds
fldl2e
call
lock
cmpsl
pop
rorb
mov
scas
jl
and
push
push
cmp
fwait
sub
fsubs
jl
bnd
cmp
xchg
and
addr16
rcll
loop
mov
pop
mov
das
jmp
pop
pop
je
shll
leave
xor
and
aam
movsb
push
push
jne
jmp
addb
shrb
xchg
imul
inc
jbe
mov
bound
push
jmp
out
out
add
je
mov
jg
adc
rcll
ss
cmpsl
movsb
ss
imul
sub
test
faddl
jecxz
xchg
inc
mov
add
std
xchg
pop
movsb
repz
sbb
fiadds
xchg
cmpsl
insl
dec
cwtl
cmc
addl
adc
pushf
cmp
sbb
bound
mov
inc
test
inc
dec
lea
loop
hlt
cmp
sub
pop
cmp
push
mov
cmp
and
push
std
stos
inc
mov
cmp
mov
sahf
scas
add
mov
cmp
in
lret
addr16
hlt
sbb
testb
mov
push
cltd
imul
cmp
shlb
in
jp
dec
mov
mov
sub
mov
push
filds
or
cmp
aaa
adc
das
arpl
jns
mov
popa
jno
mov
pop
iret
popf
popa
pushf
mov
sahf
cmp
fiadds
push
movsb
dec
push
xchg
jns
imul
bound
outsb
pop
push
adc
mov
jecxz
out
out
cmc
ds
or
sbb
stos
insl
les
stc
and
cwtl
add
jnp
add
rclb
xchg
xor
std
imul
adcb
push
mov
xchg
mov
movsb
pop
add
xor
adc
je
pop
shll
dec
xlat
ficoms
mov
and
loope
filds
test
jmp
fwait
mov
sub
mov
movsl
cmc
or
mov
mov
mov
mov
dec
int
xchg
xor
int
add
pop
int
hlt
mov
pop
popa
inc
js
mov
dec
push
mov
add
xor
jb
xchg
inc
lock
xchg
jg
rclb
add
inc
or
xchg
lret
sbb
cmc
loopne
cmp
mov
adc
mov
cmpl
sti
inc
pop
mov
shrl
jp
pop
lahf
test
sbb
popf
xchg
addr16
stos
push
adc
inc
stos
pop
adc
cmpsb
xor
scas
scas
jno
movsl
imul
sbb
inc
sbb
insl
loope
cs
scas
out
popa
fmulp
sub
shrl
pop
lcall
aas
mov
shr
adc
or
aad
jge
nop
or
clc
xor
jae
fcoms
aam
and
lret
xor
movsl
add
cmpsb
sahf
ja
data16
mov
sub
int3
dec
lret
sbb
cmp
and
test
ds
int
mov
adc
daa
dec
jmp
int3
pop
push
lret
mov
out
adc
xchg
test
sub
pop
in
stos
nop
icebp
into
xchg
pusha
jle
adc
pop
jge
mov
xchg
xor
mov
ss
repnz
shlb
outsl
sub
mov
fsub
pop
sub
dec
aam
mov
fiaddl
icebp
out
and
jle
call
stos
scas
movsb
push
daa
das
jns
or
arpl
jb
or
nop
xchg
inc
sub
fs
jle
inc
lea
push
adc
jmp
pusha
pop
outsb
cwtl
jp
mov
pop
sub
jae
push
ja
pop
add
sub
popa
mov
mov
popa
outsb
sbb
lret
mov
push
roll
movsl
fcmovnb
into
dec
les
xor
xchg
pop
cmpsb
push
das
fmuls
xor
jno
mov
dec
and
icebp
sub
push
lods
sub
mov
jle
pop
mov
dec
jo
out
add
lds
test
sbb
pushf
lds
push
rcrl
xchg
lcall
mov
mov
add
insb
push
in
sbb
test
push
xchg
roll
ret
dec
flds
popf
sahf
sbb
scas
mov
fwait
xlat
add
ss
jns
xchg
sub
sub
test
pop
js
adc
stos
ljmp
xor
out
mov
or
dec
add
sti
stos
xor
and
movsb
movsl
inc
dec
rclb
ds
cltd
in
lret
sahf
aaa
pusha
pop
loope
cwtl
lea
xchg
aas
ret
mov
loopne
mov
jle
test
xor
inc
xlat
and
pusha
jecxz
push
imul
jne
xchg
cltd
shlb
inc
ljmp
idiv
aad
popf
push
add
mov
pusha
cltd
and
pop
pop
js
cwtl
pop
jp
add
push
mov
movsl
out
mov
push
int3
lret
mov
pusha
andl
or
jo
sbb
sahf
dec
or
sti
lds
pop
mov
pop
mov
jecxz
nop
fdivs
enter
mov
cmpsl
into
mov
popa
mov
dec
jecxz
aaa
and
adc
fcomp
in
clc
loop
loop
dec
aam
out
out
and
fistl
sbb
nop
or
lcall
ja
js
adc
sub
imull
jmp
jmp
out
xor
js
mov
jns
or
jae
sbb
js
dec
sarb
pop
jno
imull
ds
fnstenv
push
test
out
sub
xchg
xchg
xchg
inc
inc
mov
jb
int
jno
ret
sarl
add
shll
xchg
xchg
es
aam
loopne
fnstenv
leave
adc
aaa
jle
xchg
arpl
iret
mov
lret
mov
push
adc
and
jne
xorl
ja,pt
mov
insb
cwtl
sahf
popf
inc
pop
movl
je
sbb
daa
mov
addl
es
mov
inc
mov
divl
mov
out
push
mov
mov
adc
xchg
adc
test
pop
stc
icebp
mov
psubusw
mov
lret
xchg
loopne
or
sbb
in
push
adc
cli
xor
cld
pop
fistps
xchg
and
loop
cwtl
push
ss
xchg
jnp
jb
mov
aad
cmp
cmp
mov
imulb
outsl
test
ss
or
push
rcpps
out
test
sarl
adc
into
inc
mov
sub
imul
or
xor
into
mov
pop
add
mov
inc
pop
addr16
stos
or
lret
icebp
inc
mov
shl
sbb
iret
jge
cmp
movsl
icebp
outsb
popf
push
jns
fs
ds
xlat
inc
xor
fmuls
fbstp
insl
push
int3
pop
mov
fstpt
cmp
lahf
sub
mov
add
loope
mov
dec
mov
test
mov
push
sbb
pop
xchg
nop
and
fisubrl
lds
mov
mov
jp
and
jmp
cmc
out
cltd
cmpsl
jmp
cltd
and
jae
cmp
fldenv
pop
test
add
pop
push
scas
cs
call
movsb
jne
iret
stos
gs
ja
les
stos
inc
push
into
sub
jmp
outsb
xor
xchg
in
rep
inc
or
xor
dec
cmp
pop
cmp
push
lahf
jg
push
ret
into
pop
jmp
or
rclb
ds
int
push
mov
arpl
fisubrl
xor
nop
loope
lods
add
jl
sub
push
dec
shrb
push
out
push
push
xchg
mov
add
sbb
fcmovnu
imul
outsl
push
xlat
dec
dec
jns
mov
jo
mov
pop
cmpsl
outsb
es
xor
sbb
mov
or
xor
or
cmp
cmpsl
jmp
inc
ljmp
les
sub
add
mov
mov
jg
sub
xchg
adc
lock
push
fs
adc
stos
push
shlb
xchg
push
or
lret
jns
inc
out
inc
mov
push
jle
add
mov
jo
or
or
or
insl
ret
lcall
lock
insl
xlat
adc
lock
inc
add
xchg
push
lret
jp
mov
hlt
pushf
fs
push
rolb
mov
pushf
add
lret
lret
and
pop
int
sbb
cld
sar
rcrl
in
push
dec
repnz
sbb
inc
dec
in
cwtl
fsubr
mov
xchg
fldt
sbb
sbb
or
test
test
add
sub
pop
push
imul
mov
xor
fsts
lret
cli
out
add
cli
push
enter
xchg
add
sbb
mov
daa
int
mov
lds
stc
in
jne
cmpsb
flds
lock
in
ljmp
jmp
jbe
dec
aam
add
lea
cmp
mov
rorb
cmp
lret
sbb
test
arpl
in
fnstsw
sbb
adc
cmp
mov
test
fs
xchg
test
cltd
mov
movsl
adc
sub
cs
cmpl
lahf
adc
sub
gs
dec
jnp
ja
push
je
adc
sbb
imul
sub
popa
xor
loop
push
leave
jp
sub
ljmp
clc
test
mov
imul
popa
mov
jnp
ret
push
test
sahf
cmp
jne
xchg
sub
icebp
jp
pop
cmp
sbb
testl
jp
arpl
mov
xchg
xor
xor
gs
jl
cmpsl
sbb
sbb
cmpsl
or
xchg
jmp
lea
repz
mov
iret
and
outsl
pop
or
imul
fldt
push
mov
xor
lret
mov
pop
and
neg
test
dec
ja
pop
in
or
test
lret
xor
push
movsb
or
shlb
test
jle
ljmp
ror
scas
add
arpl
mov
mov
mov
andb
push
xchg
push
loop
test
dec
lahf
sub
mov
jnp
out
gs
xor
cs
jmp
jo
enter
adc
out
add
xchg
fs
repz
movsl
jb
xlat
xor
pop
xchg
js
out
xchg
pop
out
test
repz
sub
ds
mov
cwtl
sbb
dec
sub
mov
out
cmc
sbb
xchg
lods
imul
xchg
sub
gs
mov
push
xchg
in
lret
xchg
jl
push
sarb
dec
addr16
mov
xchg
sbb
xchg
ffreep
mov
add
in
push
lret
inc
pop
iret
mov
pop
xchg
cmp
lods
cltd
pop
andb
cmpsl
mov
in
jge
aaa
sbb
stos
mov
icebp
mov
fcom
rorl
ljmp
dec
dec
sub
inc
lret
cwtl
inc
jl
clc
sub
sbb
sbb
std
xor
jnp
or
lds
mov
mov
test
jne
mov
mov
outsl
fsubrp
add
xchg
imul
jmp
jg
mov
jle
mov
or
icebp
and
les
movsb
ror
lret
mov
ja
mov
and
inc
pop
ret
xchg
sbb
dec
das
lcall
mov
mov
fcompl
loop
or
call
fs
dec
sub
dec
or
test
leave
and
dec
adc
adc
popa
shrl
cltd
pop
xor
insl
movsl
push
mov
add
lret
cmp
pushaw
pushf
sbb
push
push
push
iret
jo
lret
cs
loope
jl
in
inc
mov
sbb
adc
stos
insl
ja
inc
aad
mov
pop
into
clc
add
or
add
in
pop
mov
mov
mov
mov
leave
xor
sbb
out
cmp
outsl
pop
push
testl
stc
cmp
dec
add
dec
mov
imul
sbb
inc
aas
subl
fdivrl
xchg
cli
aaa
inc
xchg
ret
adc
push
pop
push
subl
aad
xchg
adc
aad
loopne
or
xor
sbbl
push
in
das
fisubrl
movsl
jecxz
aad
orl
outsl
lods
jmp
outsl
cld
mov
aas
push
push
or
xor
pop
dec
divl
mov
ljmp
cs
roll
fdivs
xlat
jge
cs
jo
movsl
jae
jmp
add
lods
fisubl
add
mov
and
testb
fidivrs
add
fcoml
sbb
xor
mov
cmpsl
mov
and
lea
adc
mov
loope
xchg
scas
xchg
pop
xchg
std
cltd
fstps
cmp
jp
dec
cmpsb
lock
sub
mov
sbb
icebp
adc
xchg
cwtl
pop
fsubrl
and
aad
cvtps2pi
adc
jbe
xor
gs
jl
mov
gs
or
divl
test
jno
adc
jp
dec
inc
cld
pop
icebp
sti
cmp
and
xor
cwtl
mov
jb
cmpb
mov
ja
add
fimuls
sbb
pop
mov
push
notb
jecxz
pop
sahf
ret
mov
pop
iret
and
div
stos
popa
xlat
ja
hlt
xchg
mov
jp
adc
mov
sbb
les
and
mov
lahf
mov
enter
daa
cmp
mov
roll
sbb
mov
jns
lds
jmp
cmp
js
lret
loop
js
in
sub
add
repnz
jge
int3
sub
std
outsb
inc
pop
stc
adc
bndldx
and
test
mov
test
push
or
xor
loope
sub
pop
cmpsl
cmp
fs
fs
cmp
push
les
daa
ds
or
sarl
ja
sbb
imul
push
ljmp
fdivl
divb
adc
sbb
enter
mov
xlat
sbb
xor
sti
sub
in
or
inc
add
out
mov
int3
negb
inc
fstl
outsl
jp
adcb
dec
mov
push
ja
sub
sub
push
repnz
arpl
xor
mov
xlat
dec
and
pushf
mov
push
push
mov
xchg
cli
pop
fidivs
cmp
pop
mov
shll
aad
lret
mov
outsb
andb
roll
sub
mov
ljmp
push
dec
mov
stos
xor
mov
xchg
inc
insb
sbb
fbstp
add
fiadds
jo
into
mov
cmpb
loopne
adc
into
insb
sbb
pop
aas
in
sahf
xchg
mov
or
lds
stos
mov
jmp
rol
cmc
addr16
mov
mov
sahf
out
or
jp
push
push
aam
add
leave
adc
pusha
or
jge
sub
sub
jns
pushf
pop
push
sub
test
fcomps
adc
xor
xor
jno
jle
dec
dec
mov
repnz
in
jmp
fiaddl
xor
and
mov
lds
jae
test
cmpsl
xor
test
loopew
test
dec
or
xor
and
add
jg
add
xchg
cmc
xor
mov
std
sub
jnp
cmpsb
scas
add
xchg
cmp
add
sub
pop
pop
inc
les
sbb
jge
pop
jnp
cld
sub
addb
movsl
call
adc
test
rolb
sub
xlat
push
jo
in
adc
sarb
and
cs
lret
jmp
daa
push
aad
inc
scas
pushf
push
or
adc
pop
push
push
stos
mov
jg
xchg
call
add
scas
clc
mov
outsl
loopne
cmc
mov
sub
adc
repnz
jecxz
and
addr16
rcrl
dec
pop
scas
std
lahf
cmp
dec
jp
shlb
push
and
push
or
fwait
dec
mov
addr16
push
bnd
sub
or
inc
cld
cmp
xlat
adc
sub
xchg
loopne
divb
xchg
sbb
mulb
clc
lret
cmp
out
enter
testl
jmp
or
or
hlt
or
repz
dec
cmp
lcall
fsub
or
mov
clc
inc
lods
ja
sub
sbb
adc
xor
cmc
mov
mov
ret
ja
and
outsb
ss
fucomp
xchg
sbb
outsl
cld
cmp
fdivs
ja
lods
ret
jbe
push
pushw
xchg
pushf
or
cld
fcmovnu
dec
xchg
xchg
adc
or
mov
xchg
iret
movsl
fbstp
scas
add
scas
andb
mov
outsl
dec
cmp
jmp
fyl2xp1
incb
mov
int
xchg
add
or
xor
mov
mov
lret
and
push
jae
inc
add
stos
inc
push
stos
maxps
dec
sub
add
or
movsb
std
inc
push
bound
es
repz
loop
xor
ss
out
hlt
jle
ficoml
or
mov
sahf
push
sahf
pushf
adc
lea
loope
pop
or
out
sub
mov
push
mov
enter
call
jp
jecxz
adc
sub
outsb
sub
ds
mov
cmp
dec
push
repz
push
xchg
int
push
push
mov
xchg
sbb
cli
adc
div
rcrl
xchg
fidivrl
jne
xchg
lock
imul
insb
pop
aam
xchg
in
sub
mov
xchg
xor
dec
jl
push
fwait
sub
imul
adc
lock
mov
push
aaa
es
gs
dec
cmc
into
decl
sub
mov
into
cmp
mov
and
jecxz
inc
cmp
movsb
pop
sti
icebp
dec
stc
pop
xor
fmull
pushf
sbb
vpsadbw
cltd
jns
fwait
xor
out
sahf
jmp
cmpsb
es
push
push
sbb
or
stos
into
mov
xchg
adc
mov
cwtl
mov
jecxz
loop
pusha
mov
and
push
imul
movsb
imul
push
loope
pop
mov
inc
cmp
mov
outsl
rorl
imul
cmp
stc
xor
aam
lahf
pop
or
inc
mov
movsl
inc
mov
fistps
sub
dec
scas
scas
leave
pop
popf
inc
add
je
mov
pop
jecxz
xlat
xchg
adc
sbb
dec
xor
aaa
int3
fdivrl
jle
pusha
dec
icebp
pop
mov
cs
dec
xchg
push
dec
adc
xorl
lock
cmp
or
xchg
imul
std
fistl
popf
xlat
pop
ret
jns
gs
dec
inc
repz
pop
bnd
and
dec
orb
xor
mov
bound
inc
nop
pop
mov
dec
sbb
ror
add
fcmovnbe
popa
in
ds
and
inc
mov
xchg
jge
rcr
mov
sbb
das
cmp
mov
xor
test
cmpsb
cmp
sub
scas
mov
jne
loope
mov
push
icebp
sub
mov
xchg
mov
and
mov
sub
push
outsb
sbb
int3
sbb
xchg
push
mov
lahf
adc
xchg
mov
push
push
jne
inc
lds
mov
ret
imul
or
imul
xchg
xchg
shr
mov
enter
inc
or
fsubs
cli
or
inc
and
xchg
imul
cmp
sti
pop
jne
jmp
jnp
mov
adc
xchg
test
sar
inc
je
push
decb
push
out
push
cmp
and
sti
jl
mov
cs
pop
mov
out
mov
out
mov
push
rorb
leave
jg
out
adc
insb
mov
xchg
cmp
pop
pushf
sub
das
loope
pop
pop
push
leave
xor
test
aaa
add
mov
call
je
ss
insb
sbbb
movsl
fs
mov
push
nop
jl
sub
nop
into
cltd
mov
add
and
rorl
cltd
push
sbb
adc
fdivl
push
xchg
les
pop
lods
into
enter
push
pop
push
adcl
jnp
lahf
adc
mov
add
xchg
add
pop
pop
fsubr
cli
adc
aam
mov
cwtl
push
fisttps
stc
push
or
jns
xor
lret
int
imul
pop
push
xchg
mov
mov
insl
and
pop
mov
sub
out
call
arpl
icebp
jmp
jmp
mov
stos
xchg
mov
mov
sti
nop
in
mov
cmpsb
sub
jae
cmc
addl
mov
mov
fcmovb
and
and
jg
and
jne
xchg
jnp
in
add
mov
mov
repnz
outsl
cmp
aad
stos
mov
and
mov
pop
andl
repz
xchg
adc
cmpsl
jp
add
aas
xor
mov
xor
push
lahf
cmp
pop
leave
jg
dec
cs
dec
lods
mov
out
ret
pop
sub
dec
lea
stos
add
mov
and
enter
jg
mov
adc
fists
shr
pusha
imul
mulb
push
scas
mov
and
pop
or
mov
shll
inc
popa
outsb
mov
lds
rorl
sbb
cmpsl
loope
pushf
inc
push
jecxz
or
mov
cmp
dec
push
je
jne
test
cmc
dec
das
ret
fidivl
mov
fldt
xchg
adc
jb
fiadds
mov
or
ret
mov
mov
mov
jl
xor
inc
cmpsl
mov
insb
rcl
adc
mov
push
outsl
sub
icebp
push
push
pop
xor
mov
xchg
sarl
mov
add
aaa
mov
repnz
mov
cmp
imul
lret
cmp
fwait
add
mov
rclb
cs
data16
mov
test
movsl
jb
into
push
loope
cmc
inc
cmp
xchg
insl
pop
jecxz
mov
cld
ds
xchg
inc
fwait
jo
aaa
pop
and
andb
sarb
xchg
sti
pop
xor
inc
mov
mov
push
pop
fbld
aad
repz
jno
push
sub
mov
xorb
lret
jmp
int
loop
sahf
push
out
push
lods
jl
mov
test
inc
lods
sbb
movsb
enter
scas
mov
jno
mov
add
es
and
xchg
ret
mov
dec
outsb
lahf
xchg
movsb
sbb
sub
cld
mov
push
cmp
jecxz
push
cmpsl
orl
aam
inc
out
inc
rcrb
pusha
xchg
mov
cmp
bound
or
sub
pop
jnp
jecxz
popa
sub
sub
or
sub
sbb
dec
std
push
outsb
sub
js
mov
iret
inc
ds
cld
es
in
fwait
add
jmp
fmull
icebp
add
lret
xchg
mov
test
out
inc
pop
inc
pop
sti
fistpl
into
dec
fsubrs
sbb
xorb
xor
shld
and
mov
movsl
fidivrl
fwait
lock
pop
adc
das
jb
mov
sub
aaa
add
sarb
rcrl
xor
iret
mov
pop
pop
mov
jecxz
xchg
fcoml
mov
adc
cld
fdivrl
or
xor
cs
mov
roll
push
and
fisubrl
stc
and
ret
pop
cmp
xchg
cmp
ja
arpl
les
and
mov
jno
cmp
in
test
sbbb
hlt
xchg
push
mov
ss
mov
imul
fsubp
imul
stos
outsb
inc
fldl
xor
cs
movsl
pop
out
push
jnp
int
cmpsb
adc
cmpsb
call
push
cmc
je
movsb
push
and
xchg
dec
or
cmp
dec
or
int
lea
adc
jmp
in
or
cmp
and
fbld
xor
mov
sub
mov
aaa
sub
test
div
scas
cmpsl
loop
scas
sti
add
out
mov
cmc
adc
es
push
jnp
shll
inc
xchg
and
int
out
outsb
sbb
fstpt
rcl
pop
xchg
test
int
sbb
push
ss
jg
xchg
fnstcw
fbstp
or
test
lds
adc
out
jbe
inc
dec
xchg
sahf
ficoml
sub
clc
sbb
je
aad
outsb
xor
pop
lods
stos
aad
push
ja
sti
incl
inc
sub
insb
mov
lods
push
fsubr
mov
call
jp
jge
sub
xchg
addl
sbb
or
xchg
xor
inc
outsl
inc
outsb
call
andb
add
mov
xor
xchg
push
xchg
xor
or
je
cld
mov
and
sub
sub
mov
test
xchg
idivl
lahf
sbb
ds
adcb
lods
mov
inc
and
mov
xchg
mov
cmp
out
enter
xchg
pop
push
cmp
or
fldt
mov
sub
loop
shrl
add
mov
test
lods
mov
testl
or
sbb
es
test
cmp
pusha
fdivrl
fs
lods
xor
cmp
or
mov
push
push
xor
jg
sbb
inc
and
lds
jno
mov
pop
push
fcoml
hlt
loope
mov
jg
cli
aaa
int3
lds
inc
mov
es
out
mov
in
vmovdqa
fnstenv
les
cmp
push
xchg
addb
adc
mov
call
enter
arpl
jl
mov
stc
and
loop
xor
addr16
adc
and
lds
ss
int
push
xchg
pop
iret
clc
js
cmc
cltd
fistpll
jbe
ljmp
aas
sahf
mov
leave
divl
sbb
fiaddl
leave
mov
sarl
jb
and
jno
xchg
test
fstpl
push
fldt
inc
jno
mov
lods
xchg
xchg
popl
enter
mov
cmp
cli
xchg
dec
mov
fisttps
push
xchg
repnz
mov
es
mov
sarl
cmp
mov
int3
gs
mov
pop
xchg
fwait
les
xchg
jle
fs
mov
cmpsl
push
ja
inc
hlt
int
daa
mov
cmpsl
sub
lods
jg
dec
lds
daa
sub
cmp
and
and
cld
out
dec
loop
mov
inc
shl
adc
repnz
daa
fdivrl
cli
inc
pusha
das
pop
and
outsl
andl
mov
push
stos
rolb
cmp
mov
ror
pop
std
xchg
icebp
xchg
inc
fmuls
push
nop
fsub
int
stos
cmpsb
lret
int
pop
nop
out
dec
dec
push
addr16
fldcw
call
flds
xchg
stos
scas
in
cmp
rcll
mov
or
out
add
les
xor
inc
nop
pop
pushf
mov
add
fs
xor
push
out
fmul
orb
hlt
mov
xchg
hlt
and
and
mov
or
fwait
stos
sbb
addr16
lcall
or
or
daa
sbb
and
push
subl
mov
mov
dec
test
jo
jmp
cltd
mov
das
and
jns
jnp
cld
push
add
dec
jno
stos
scas
out
pusha
and
loopne
mov
adc
mov
loope
dec
jecxz
mov
aaa
lods
outsl
push
jge
std
cmpsl
mov
or
movsb
js
adc
push
cltd
leave
lock
mov
and
push
push
cld
pusha
std
or
ds
insb
imul
sbb
inc
cs
aaa
fwait
repnz
movsb
in
roll
andb
and
sub
adc
sub
adcb
pop
ror
or
pop
fldl
scas
lret
xchg
xor
jle
dec
push
push
mov
insb
inc
mov
in
adc
cmp
push
xor
lods
or
lock
vmovdqa
mov
lret
push
sbb
outsb
in
pusha
stc
xorl
lret
xchg
jge
rol
jmp
enter
mov
leave
mov
dec
mov
push
jb
cmp
push
add
in
jne
cli
push
inc
seto
out
xlat
nop
addr16
and
jp
movb
push
xor
hlt
mov
xchg
jecxz
push
add
jg
push
fwait
dec
notb
shrl
outsl
gs
inc
push
push
jbe
mov
fistps
cmpsl
mov
xchg
push
cltd
xchg
and
idivb
dec
adc
xor
fistpl
xchg
ja
movsb
add
sub
mov
data16
pmaxsw
lcall
je
push
xabort
xor
jmp
mov
mov
push
jne
inc
out
jmp
inc
cmp
and
lret
int3
imul
scas
out
movsb
aaa
pushf
into
out
leave
mov
loope
test
jecxz
js
lret
xor
inc
push
out
and
sbb
and
shr
cltd
aad
push
std
pushf
loope
push
sbb
and
mov
fnstcw
enter
inc
out
movsl
pop
push
dec
insl
js
ja
stc
adc
jae
rorl
lock
andb
add
out
add
ret
scas
push
pop
sub
or
jns
sub
shlb
in
fadds
dec
rcll
pop
pop
popa
cmp
jns
bound
fcmove
xlat
mov
push
xor
fsubl
popa
lret
fs
mov
test
xchg
dec
stos
inc
xchg
sar
adc
inc
mov
dec
sub
xchg
pop
ss
xlat
add
mov
fisubrl
pusha
pop
xchg
cmp
mov
jno
jp
and
jmp
mov
jbe
stos
dec
cmpsb
hlt
or
sub
and
inc
sub
pop
inc
dec
loope
inc
cltd
and
mov
sub
mov
nop
movsb
jecxz
xor
add
enter
jnp
in
dec
pop
jo
data16
sbb
mov
inc
cmp
les
adc
lahf
dec
sbb
jl
test
repz
adc
pop
aaa
sub
rcrl
jmp
mov
push
adc
xor
xor
or
cld
xchg
cltd
lock
insb
xor
insl
in
adc
mov
popa
or
test
cmp
out
nop
pop
fdivs
lcall
cmc
fwait
rorl
adc
es
lods
sbb
push
addr16
cli
ljmp
je
mov
xchg
cmpsl
adc
cli
fsubrs
cmp
cmc
outsl
lock
fdivrs
inc
mov
dec
pop
repz
imul
fidivs
pop
aam
sub
cmp
je
and
or
inc
fdivrp
or
cmpsb
fcomps
lea
mov
pop
lock
lods
bnd
mov
xchg
sbb
mov
out
pop
mov
lcall
cmp
xchg
push
stos
dec
test
push
push
and
adc
lret
xor
inc
outsb
mov
repnz
dec
xchg
xor
popf
pushf
or
jp
sub
fmul
lods
lods
add
cwtl
xchg
pop
and
fdivrs
or
add
lcall
addl
repz
xor
sbb
cmp
pop
imul
xchg
es
pushf
pop
fsubrs
pop
lcall
mov
inc
cmc
push
fld1
int
lcall
dec
jmp
dec
imul
sub
cmpsl
or
mov
xchg
in
jle
loop
out
in
outsl
leave
push
ret
jns
fwait
cmpsl
push
jle
jae
cmp
mov
rcr
adc
adc
insl
cli
scas
push
jge
icebp
push
shrb
pop
xchg
notb
mov
mov
loop
std
jge
fsubr
aad
or
pop
repz
bound
xor
out
fyl2xp1
ret
dec
scas
xchg
pop
push
aam
dec
mov
cs
in
dec
mov
mov
and
mov
jl
stos
dec
clc
aaa
xor
xlat
andl
xchg
lock
outsb
pop
pop
rorb
int
xor
pop
adc
jg
mov
and
mov
adc
pop
aad
xchg
xor
adc
add
sub
mov
cmp
fcmovb
int3
push
jp
imul
popa
iret
mov
jecxz
sbb
outsl
sbb
into
pushf
pusha
outsl
jecxz
mov
xchg
test
and
outsl
jge
pop
je
mov
sub
xchg
mov
mov
leave
bound
dec
lods
jns
sbb
jns
xchg
les
adc
je
test
jecxz
stos
jne
pop
push
into
fcompl
out
clc
sbb
mov
testb
inc
mov
xor
xchg
hlt
insl
or
push
pusha
outsl
cs
pop
aam
pop
push
out
insl
and
lahf
sub
sti
int3
mov
and
push
mov
xchg
and
ret
movsl
add
mov
sub
push
test
in
jo
mov
gs
negb
mov
rolb
cmpsb
mov
push
aaa
test
push
lds
adc
jge
lock
mov
fbstp
aad
aam
insb
mov
mov
cmp
jnp
jae
mov
lock
xchg
cmp
push
xchg
mov
add
xchg
cmpsl
and
push
fidivrl
in
adc
add
pop
push
int
pop
sub
test
and
test
outsb
mov
aad
mov
sub
sub
aas
aam
jp
scas
dec
mov
and
xor
insb
into
jnp
repnz
jge
loopne
cmp
mov
mov
loop
aas
scas
into
mov
mov
movsb
cmp
sbb
cmp
add
insl
mov
js
in
pop
xor
negb
push
and
fstpl
outsb
imul
pop
mov
scas
dec
fucom
leave
mov
mov
jnp
loopne
xor
es
push
out
movsb
mov
fdivs
adc
push
scas
xor
jg
sbb
dec
cmp
push
dec
xor
push
or
inc
icebp
push
xchg
jbe
adc
sbb
push
pop
cmp
cmp
rcll
or
jle
call
bound
adc
lods
jge
mov
jle
rorl
lcall
add
and
call
mov
jnp
xchg
loope
push
ret
daa
push
outsl
mov
mov
lds
mov
push
mov
push
and
popa
or
repnz
lea
out
fistps
divb
lret
xor
mov
test
jno
sarl
test
or
mov
inc
xchg
xchg
imul
mov
pop
scas
rolb
mov
mov
js
out
jl
add
ret
or
mov
ret
out
gs
jne
xor
jp
int3
int3
jle
push
mov
icebp
lret
outsl
xor
jp
sahf
notb
scas
inc
inc
and
faddl
ss
in
aaa
inc
mov
sub
rol
add
inc
ljmp
nopl
in
fs
out
adc
enter
push
sbbl
sbb
jae
dec
mov
xchg
daa
cmp
adc
ss
inc
pop
call
icebp
push
nop
lea
xchg
xchg
lods
imul
aad
sub
push
movsb
xor
imul
pop
repz
addr16
pusha
idivb
lea
icebp
mov
xor
push
int3
add
xchg
xchg
inc
pop
loope
jne
out
xchg
add
je
flds
movsb
insb
ja
pop
ja
popa
mov
sbb
lods
lcall
int3
jbe
inc
idivb
push
and
rorl
dec
lret
or
negl
xchg
mov
jo
int3
push
push
int
mov
fidivrl
test
sub
jp
sub
sub
mov
repz
xchg
test
mov
jle
xchg
out
in
pop
adc
movsb
adc
pop
xor
dec
jmp
lret
push
adc
ss
js
flds
fs
mov
adc
or
lds
mov
sbb
xchg
daa
dec
cmc
sbb
lods
pushf
loop
imul
xor
lods
les
jo
push
in
andl
gs
cmp
into
cltd
imul
lods
dec
ret
inc
dec
cmp
gs
mov
jbe
mov
test
aad
add
jo
push
mov
aas
jmp
nop
xchg
test
lahf
clc
loope
mov
mov
xchg
cs
pushl
mov
add
imul
mov
rcl
xor
mov
cmp
xchg
jecxz
and
adc
daa
adc
aam
add
pushf
mov
ret
enter
add
mov
xchg
and
xor
loopne,pn
cmp
sbb
inc
xor
push
fs
lods
popa
ficoml
cmp
add
dec
push
mov
mov
out
addl
lret
jns
cmp
imul
add
push
jb
inc
repnz
aas
mov
jne
sub
xor
sub
dec
dec
xor
cmp
rol
into
jbe
mov
popf
arpl
sub
in
jmp
xchg
lds
xchg
gs
or
push
pushf
jp
push
pop
in
sub
adcb
repnz
push
pop
iret
addr16
pop
pop
rolb
adc
arpl
adc
sbb
repz
pusha
sbb
lcall
push
pusha
push
sub
stos
sar
loopne
call
mov
inc
out
test
dec
insl
sbb
sub
sub
xchg
xchg
rol
mov
out
push
js
pusha
mov
mov
imul
pop
mov
mov
sti
aam
call
pop
dec
lahf
cmp
arpl
push
out
les
jge
movsl
mov
arpl
sahf
sbb
cmp
scas
shrb
xchg
fnstenv
adcb
mov
xchg
dec
ficompl
in
and
rcr
lea
sysret
ss
jo
nop
adc
inc
insl
es
xchg
shlb
adc
test
fdivrl
inc
sub
push
lock
cmp
or
mov
pushf
stc
dec
push
std
fsubr
shlb
adcl
jmp
xor
iret
or
lret
mov
cwtl
push
dec
push
cmc
adc
dec
xchg
fcmovb
xor
pop
mov
and
stc
dec
push
cltd
js
adc
mov
imul
out
pop
sub
xchg
dec
adc
cwtl
xchg
cs
jae
jle
iret
pusha
xlat
loope
push
mov
dec
out
add
cmp
mov
loop
cmp
adc
in
or
roll
push
jo
push
sahf
and
testb
pop
pop
or
les
inc
pop
call
int3
lahf
rclb
add
test
movsl
add
xor
push
lahf
jb
imul
cmc
pop
mov
pop
aaa
aad
inc
pop
ja
in
test
std
cmp
loopne
fistpl
xor
fisttps
daa
cmp
mov
dec
mov
cli
adc
jb
inc
jno
lret
shlb
sbb
aam
pop
lods
xchg
stos
in
repz
arpl
movsb
pop
fbld
pop
jbe
and
pusha
icebp
test
push
negl
lret
cltd
iret
inc
push
jecxz
jnp
rclb
loopne
inc
cmp
or
lods
push
test
andb
in
and
test
dec
mov
mov
inc
stos
cmp
push
cltd
bound
andb
cmpsb
or
mov
dec
lods
gs
nop
mov
aad
negl
add
out
cmc
xor
add
sbb
cmp
jno
or
mov
xor
ja
push
pop
dec
sti
or
daa
dec
push
sti
fildll
jbe
jecxz
in
sti
cmp
and
mov
cmp
mov
sub
or
or
dec
adc
xchg
or
fs
jne
rcll
push
sbb
popl
or
ljmp
and
xor
lcall
and
leave
xchg
leave
aad
jo
add
jp
add
xor
mov
push
iret
adc
test
andl
stos
dec
jno
jae
cmp
mov
or
lock
int3
lcall
mov
mov
lock
cmp
xchg
adc
mov
inc
mov
adc
jge
clc
jns
bound
mov
add
xorl
and
mov
jne
ss
add
stos
jo
shrb
es
push
pop
jmp
add
stos
sahf
loope
adc
xor
xchg
popa
xchg
shrb
lock
repz
es
push
cmp
dec
cltd
add
loope
ret
push
sbbl
push
punpcklqdq
ljmp
push
in
test
insl
and
sbb
dec
jb
mov
movsl
inc
add
push
aaa
js
shlb
or
and
adc
add
cli
inc
std
mov
push
push
add
out
mov
vphaddbq
pushf
sub
aam
xchg
sub
stos
repz
dec
mov
or
ja
sbbl
mov
or
nop
test
mov
or
xchg
sub
dec
insl
mov
xor
push
popa
sub
testl
daa
sub
loopne
out
xchg
aam
cwtl
add
shl
dec
and
imul
jnp
push
gs
mov
dec
and
adc
lds
pop
push
pop
stos
sub
js
iret
dec
mov
and
test
aas
imul
sahf
mov
mov
inc
les
cmp
dec
std
xlat
adc
stos
sub
or
pop
jmp
lock
shr
fisttps
pop
sub
push
rcl
lahf
daa
outsl
mov
lods
and
lods
cwtl
mov
loope
cmp
fbstp
stos
mov
movsb
jmp
xchg
inc
arpl
cmpsl
xchg
adc
in
pop
mov
or
sbb
mov
push
pop
cmpsb
in
xchg
push
xor
add
pop
xor
pop
in
or
sbb
push
mov
sbb
gs
aam
out
cs
pushf
stos
dec
je
push
adcb
cli
fistl
and
xchg
or
and
lds
mov
adc
push
xchg
cmp
fimuls
sbb
je
add
in
jnp
cli
pop
jp
xchg
nop
iret
pop
cmc
push
pop
mov
mov
jns
es
and
push
rcrl
mov
jne
jbe
stos
sbb
repz
dec
int
out
fs
add
inc
mov
sub
jne
ret
ret
pop
pop
adc
inc
jmp
push
push
jg
popf
loop
push
push
nop
inc
push
push
repz
or
repz
mov
pusha
push
push
loope,pt
pop
frstor
scas
sub
mov
flds
imul
sbb
mov
or
mov
ss
adc
jmp
or
int
push
mov
xor
dec
or
cli
bound
or
sub
cmp
inc
jl
pop
add
in
ret
adc
pop
test
adc
mov
shl
mov
mov
mov
scas
or
mov
lea
push
adc
mov
in
jecxz
fs
mov
sar
lret
cmp
lcall
push
xorps
sbb
inc
xchg
push
iret
insb
jo
movsl
dec
jmp
mov
pop
clc
push
in
sub
lea
lock
add
mov
xor
jle
cmp
sub
rcrl
enter
daa
and
pop
test
faddl
insl
push
push
test
es
inc
insb
mov
mov
ficompl
inc
or
add
lahf
inc
dec
sbbl
fnstsw
int
dec
out
pop
cmp
bound
nop
mulb
hlt
mov
mov
push
sahf
insl
inc
rcrb
sub
xlat
jne
in
inc
aas
or
or
je
pop
mov
dec
adc
jae
mov
lock
jge
in
push
mov
js
sbb
dec
mov
cltd
pop
jnp
dec
idiv
aam
cmp
or
add
mov
fstps
cmc
movsl
push
mov
mov
lods
xchg
xorb
int3
ss
push
dec
lea
sbb
shlb
push
dec
lahf
push
jbe
lock
push
xchg
shlb
pop
andb
mov
mov
shlb
mov
iret
in
lods
stc
insl
dec
push
mov
out
cmp
xor
lahf
pop
shll
mov
jne
push
dec
cmp
enter
mov
aad
jl
jo
imul
sub
inc
ret
rorl
adc
int3
dec
rcrl
lods
faddp
repnz
mov
xor
cwtl
jbe
ret
add
dec
outsb
inc
cmp
test
sbb
xchg
jp
inc
dec
sub
movsb
lods
cwtl
jne
and
imul
add
sti
pusha
rcrb
and
mov
push
pop
aad
lret
cmp
cs
fs
push
lahf
sbb
jne
xchg
xchg
sub
stos
test
int
xchg
dec
outsl
je
int3
and
cmp
jle
insb
ljmp
push
shll
bound
mov
jae
icebp
scas
sub
pop
daa
in
and
ds
inc
push
hlt
mov
into
je
mov
leave
pop
cmpsl
mov
adc
or
xchg
inc
xor
xor
ljmp
sahf
xor
ljmp
mov
ret
sub
sub
pusha
insl
roll
lcall
ds
or
stos
cmpsl
xor
out
xor
mov
cmp
cwtl
in
cmp
sub
jmp
cmpsl
dec
cld
shl
bound
bound
in
add
mov
dec
pop
and
inc
xor
mov
push
adc
adc
stos
popf
int3
xchg
js
and
insl
adc
das
leave
dec
mov
push
mov
and
cs
sti
mov
call
lods
into
dec
mov
sbb
out
xchg
mulb
daa
sub
mov
ja
mov
fwait
iret
int3
loope
mov
cmp
jmp
out
jmp
incl
in
fstpl
jne
adc
push
dec
mov
pop
push
or
dec
pop
in
insb
cmp
cli
addr16
xchg
or
inc
sbb
push
lods
add
mov
in
lret
jbe
sbbb
lods
add
mov
jecxz
cmp
jnp
dec
inc
sub
insb
mov
cwtl
out
orb
gs
int
imul
cmpsl
cld
mov
fadds
pop
into
inc
lods
xor
pushf
outsl
daa
push
arpl
fwait
cmpl
cmp
push
xchg
cmc
push
jnp
dec
push
push
fdivrs
pop
lret
xchg
adcb
enter
xor
daa
mov
nop
jno
call
out
or
xlat
inc
jns
mov
jbe
mov
rclb
daa
cltd
or
sbb
add
shrl
mov
inc
add
mov
mov
bound
pushf
adc
outsb
imul
ret
test
mov
mov
call
push
in
gs
imul
jmp
lock
adc
fcoml
aam
jns
call
dec
add
jns
push
test
pop
mov
jg
xor
jp
push
cmpsb
std
rcl
aas
repnz
ds
leave
ds
and
fbld
push
xor
fbld
dec
push
leave
and
dec
xor
pop
add
jp
mov
cli
les
mov
fisttpll
aas
ja
pop
popf
sub
insl
mov
inc
fnstenv
add
aam
mov
fneni(8087
mov
jae
xchg
sbb
pop
mov
loopne
test
and
inc
test
push
jge
and
fdivrl
mulb
pop
test
gs
mov
cli
mov
cmpb
cltd
jle
inc
daa
dec
pop
adc
popa
mov
dec
mov
js
lods
int3
scas
jns
mov
sarb
mov
insl
cltd
loop
mov
mov
xchg
push
mov
outsl
in
aaa
dec
push
cld
js
jmp
shlb
xchg
mov
cltd
dec
mov
inc
cwtl
fcoms
lea
insb
or
lret
pop
movsl
jge
sbb
out
sub
pop
xchg
rorb
fmulp
sbb
mov
iret
mov
fwait
adc
movsl
inc
lret
mulb
pop
sti
adc
call
push
popa
lods
xchg
mov
adc
pop
mov
add
scas
loopne
add
xlat
notb
xchg
shll
loopne
fsubs
arpl
sub
cmpsb
pop
xchg
mov
test
stc
pop
fldenv
pop
push
bound
or
fistpll
repnz
repnz
inc
xor
mov
xchg
aas
mov
hlt
jae
aaa
or
jmp
pop
cmp
pop
dec
ret
xor
adc
lock
jle
out
cld
pop
cmp
mov
dec
iret
idiv
sbb
into
mov
js
mov
xchg
cld
mov
cmpsl
pushf
mov
call
loopne
out
lods
pop
into
lcall
xchg
cmp
imul
mov
xchg
es
arpl
mov
fsubs
rcrl
mov
pusha
insb
jmp
cmpsl
push
lods
xor
mov
stos
pop
test
xchg
jae
shl
out
fsubrl
enter
pop
sub
stos
andl
mov
fistps
aad
js
xchg
jns
xchg
and
mov
mov
mov
stc
aaa
push
or
mov
icebp
cmpb
pushf
sub
cwtl
adc
sub
sahf
cmp
subb
mulb
cmp
out
leave
push
jae
add
not
cmc
out
fcmovu
adc
xor
mov
icebp
clc
add
lret
mov
lcall
daa
sub
jno
mov
add
and
sti
dec
insl
iret
jl
shrl
mov
xchg
dec
test
sub
lock
adc
lock
cmpsl
aam
test
movsl
mov
fucomp
cmp
ret
test
sbb
cltd
inc
sbb
xor
cmp
addl
cmp
nop
mov
loope
xor
pop
int
aas
not
test
mov
cli
inc
inc
xor
loop
adc
inc
pause
mov
xchg
stc
dec
and
cwtl
xchg
out
inc
sti
repnz
icebp
aaa
jg
or
pop
or
loope
dec
dec
idivb
inc
pop
xor
je
sbb
es
mov
sbb
das
and
mov
or
sbb
sbb
ja
jmp
insl
dec
add
lock
arpl
imul
pop
das
inc
mov
cwtl
cmc
xchg
mov
seta
dec
mov
jb
push
push
sub
or
push
aaa
rcll
cmp
xor
xchg
push
rcrl
int3
push
xchg
jmp
adc
lret
mov
push
stc
lock
mov
cmp
inc
pop
adc
cmpsb
sarl
xor
sub
mov
add
mov
in
sbb
dec
mov
rcll
inc
mov
jmp
xor
or
jo
insb
cld
sbb
fnstenv
xchg
xor
in
mov
adc
sbb
test
xlat
or
lcall
in
jge
in
out
or
jnp
rcll
jb
lret
leave
push
dec
jle
inc
movsl
or
pop
sbb
repz
cmp
mov
in
fcmovbe
mov
mov
incb
inc
dec
gs
sbb
aam
cli
or
push
mov
inc
ja
dec
lret
sub
aam
add
xchg
cwtl
pop
arpl
stos
aaa
rcl
cmp
cltd
loop
fdivr
cli
add
mov
or
mov
xchg
sub
pushf
jns
inc
cmp
shr
jno
sahf
xor
push
xor
scas
xor
mov
pop
add
aam
sbb
fimull
and
lret
lret
jmp
ljmp
adc
pop
loop
les
pop
cmp
insl
jbe
mov
mov
daa
pop
mov
sbb
dec
push
sub
sub
sbb
dec
cmp
push
push
and
or
pushf
dec
loope
mov
sub
test
dec
mov
xchg
dec
int
imul
cmp
out
sub
out
jle
push
xlat
jecxz
and
cwtl
fsts
jb
pop
mov
sbb
stc
add
mov
xchg
arpl
sbb
stos
sub
add
dec
jo
test
jnp
jb
cld
insl
push
sbb
ds
mov
mov
sub
xchg
loop
out
pop
je
push
pop
push
pusha
ja
dec
inc
sti
hlt
out
pop
mov
in
push
cmp
cmp
xchg
pusha
jbe
mov
add
jmp
adc
je
adc
ljmp
popa
in
push
inc
or
sti
cmp
push
or
js
in
loopne
inc
out
lds
add
add
push
sub
jno
fbstp
xor
and
inc
or
shlb
rcr
sti
xchg
test
xchg
leave
mov
push
xchg
test
imul
loopne
adc
andl
mov
xlat
mov
add
fsubs
or
mov
mov
xchg
pop
stc
xor
outsb
rorl
add
sub
sahf
mov
sub
mov
mov
cmp
incl
cmpl
rcr
xchg
and
xor
and
into
insb
dec
sub
popf
sbb
pusha
ja
mov
test
mov
xchg
out
fisubrs
test
cmpsl
dec
or
sub
rcrb
pand
push
xlat
add
sbb
xor
mov
and
in
lea
stc
dec
out
mov
xchg
aaa
push
fs
in
add
jb
jnp
push
ljmp
sti
sub
ret
adc
jle
lret
jo
ds
sbb
mov
sub
and
mov
push
test
ja
popf
mov
or
push
inc
mov
jnp
mov
jg
mov
push
fnstsw
pop
push
xchg
fdivr
repz
mov
aad
xor
and
or
pop
fmull
xor
scas
out
shlb
push
xlat
jo
shr
xor
lret
or
dec
insl
data16
sbb
enter
data16
mov
adc
ret
push
aad
dec
je
add
jl
cmp
push
dec
dec
test
testb
std
xchg
stos
scas
inc
push
jae
mov
out
out
call
inc
and
out
cli
loopne
mov
pop
sub
and
in
pushl
imul
sbb
les
sbb
xchg
and
outsl
jp
cmpsb
shll
je
push
add
repnz
cs
scas
pop
shr
daa
insl
jnp
dec
pop
lods
test
add
stos
xchg
mov
inc
mov
push
outsl
pop
daa
stc
sbbl
jecxz
lods
cmp
xchg
addr16
sbbb
cmp
insb
xchg
out
js
loope
pop
fistps
pop
ljmp
mov
mov
mov
cmp
or
enter
into
int
mov
mov
jmp
mov
jnp
lods
rcrb
adc
add
push
mov
pop
xchg
std
add
pop
sti
jne
fidivrl
ja
jns
loop
jl
pop
add
inc
or
adc
movsb
je
mov
sub
loope
mov
adc
dec
sbb
jnp
lcall
iret
dec
neg
add
jne
xchg
mov
insb
push
push
in
cmc
adc
sbb
dec
mov
das
insb
nop
adc
xchg
jmp
in
mov
int3
sub
dec
or
adcb
and
lret
xchg
inc
rcll
ss
push
xchg
mov
mov
movsl
and
aas
push
jnp
je
fdiv
cmp
pop
out
in
xor
filds
or
inc
add
sar
fcmove
mov
scas
jnp
stos
int
mov
xor
adc
xor
outsl
sbb
movsb
push
mov
aas
pop
out
ja
ret
in
out
inc
leave
pop
fimuls
and
pop
cmp
pop
or
fwait
jno
mov
xorb
mov
lret
shrb
xor
mov
movsl
loopne
ffree
mull
jl
movsl
cld
fnstenv
xchg
mov
rolb
lahf
fs
jecxz
nop
mov
rclb
mov
or
inc
and
sbb
cmpsl
and
mov
dec
push
xchg
and
or
test
push
ror
pop
arpl
fwait
mov
es
dec
lret
outsb
mov
xor
aad
jb
jg
xchg
or
pop
sub
xchg
inc
aas
inc
div
and
sbb
sub
fildl
cwtl
pop
sbb
adc
test
pop
mov
xor
and
push
sbb
not
out
out
xchg
mov
std
mov
mov
ja
ret
in
pop
jp
fnstsw
sbb
and
test
in
mov
push
xor
mov
movsl
enter
push
xchg
add
movsb
xchg
iret
sbb
repnz
sub
sbb
divb
mov
ds
lret
xchg
out
imul
popa
aas
std
cld
shrl
aas
fs
mov
ljmp
outsb
xchg
mov
ficompl
aad
jnp
cltd
and
xchg
xchg
stc
lea
shl
popa
sub
out
cmpl
cmc
cmp
insl
xor
xchg
orl
fs
sbb
mov
xchg
sbb
in
pop
pop
mov
lock
push
push
xchg
pop
popa
inc
aaa
xor
nopl
addr16
cmp
neg
repnz
xchg
pop
lret
xor
lods
pop
add
xor
pushf
mov
pusha
inc
es
movsb
mov
testb
or
and
test
xchg
mov
inc
andb
xchg
xchg
movsb
mov
adc
in
xor
push
adc
icebp
jbe
cld
dec
cwtl
xchg
cld
es
sub
jno
out
cmp
sbb
push
add
or
cmp
push
mov
scas
xor
daa
xor
add
movsb
push
jge
add
in
dec
std
cmpsl
lock
and
or
pop
outsl
push
inc
pop
ds
lret
sbb
sub
mov
out
in
cmc
xchg
sbb
lods
bnd
xchg
dec
jg
sahf
push
sbb
test
daa
ret
jb
inc
xchg
lahf
scas
or
rorb
dec
cmp
jmp
adc
push
jmp
gs
lret
mov
jg
add
lea
es
insl
xor
inc
xchg
ret
rcrl
mov
jbe
push
fisubrl
call
mov
popf
push
xor
mov
loope
cmpsb
je
pop
xor
xchg
pusha
mov
shll
incl
mov
sub
dec
add
test
and
add
inc
cmpsb
mov
mov
jecxz
sbb
ret
and
sbb
movsb
xchg
std
dec
pop
lea
enter
xor
fistps
pop
add
mov
popa
mov
js
and
outsb
arpl
xor
cmpsl
rclb
pop
inc
test
stos
aaa
add
mov
sbbb
jge
xchg
movl
xor
addr16
xchg
jg
adc
add
add
stos
ret
dec
lods
xor
push
sarl
push
jp
sub
decl
out
mov
adc
test
inc
pop
popa
xchg
test
data16
pop
fisubrs
mov
fisubs
rcrl
jmp
cwtl
mov
push
mov
aad
xchg
fnstcw
imul
stc
rcll
cmp
mov
cmpsl
push
jns
sahf
or
xor
jecxz
push
xchg
repnz
lea
js
mov
sbb
in
popf
cltd
and
mov
lods
cmp
cmc
cltd
out
jnp
ret
fidivs
aam
push
cmp
arpl
andb
push
mov
call
test
mov
push
adc
adc
test
add
adc
xchg
pop
lods
bound
sub
test
push
pusha
jecxz
arpl
pop
daa
test
cmc
popa
rolb
jbe
or
addb
cltd
loope
test
and
out
fnstsw
lret
adc
aam
push
mov
in
mov
xor
cmp
scas
and
dec
xor
int
scas
ror
cmpsl
lods
adc
xor
pop
push
sbb
les
faddl
repz
mov
add
push
adc
sbb
fs
lcall
jle
pop
pop
dec
aaa
lahf
out
mov
ret
jo
push
mov
add
mov
je
das
adc
xor
andl
ret
push
out
test
clts
pusha
mov
arpl
push
jo
sti
mov
js
push
insb
in
push
in
imul
jmp
adc
mov
add
cmc
xchg
insl
nop
jnp
xchg
adcl
popl
pop
inc
and
cwtl
popa
dec
add
mov
push
mov
pop
jge
or
aas
nop
imul
mov
mov
mov
pop
lods
dec
pop
out
lods
mov
or
push
sti
mov
movl
sub
addr16
rcl
push
add
cmc
divl
and
xlat
inc
and
adc
or
xchg
push
jg
int3
pop
cmp
push
test
call
adc
sbb
mov
js
cmp
inc
insl
imul
xchg
sti
addr16
adc
imul
jo
iret
jmp
pop
mov
arpl
push
sbb
out
or
cmc
lods
punpckhwd
adc
or
notb
dec
icebp
gs
sbb
add
sub
sub
add
mov
out
js
cli
lcall
jg
movsb
addr16
xorl
and
repz
and
in
inc
mov
or
cmp
push
sbb
or
pop
lock
lods
ja
imul
cmc
cli
and
adcl
jno
call
inc
inc
cmp
test
fs
jle
addl
repz
cmp
xchg
mov
leave
dec
push
or
mov
inc
ljmp
rorl
mov
ljmp
adc
lret
inc
sbb
push
imul
andl
cltd
adc
stos
rorb
ljmp
pop
jg
mov
sub
cli
jmp
ds
je
jns
clc
xchg
add
pop
mov
in
push
call
repz
popa
cwtl
inc
xchg
test
xor
std
sahf
pop
mov
and
inc
call
fildl
insl
push
xlat
mov
xlat
adc
leave
sub
xchg
lea
fisubrs
xchg
push
cltd
rcr
lcall
popf
xchg
lock
or
pop
cmc
out
add
inc
jae
repnz
jo
std
dec
dec
inc
pop
adc
cmc
imul
out
fdiv
pop
jge
or
push
mov
inc
pop
jmp
push
mov
call
popa
orl
sbb
daa
pop
inc
and
cli
jbe
inc
movsl
xchg
out
sbb
arpl
cmp
scas
lea
xchg
mov
pop
aaa
xor
xlat
jne
fst
outsl
aas
inc
cs
loop
out
lds
sub
or
mov
in
leave
sahf
pop
jns
fwait
arpl
cld
pop
and
jbe
int
mov
pop
aas
lods
test
les
outsl
je
jb
in
mov
lret
cmp
cmp
xlat
mov
aaa
mov
jmp
jmp
bound
inc
in
pushf
sub
and
add
loopne
pop
xchg
rol
nop
push
xchg
pop
push
in
enter
jbe
lret
les
cmpb
cltd
xchg
stos
push
int3
into
mov
add
ja
mov
int
and
in
xor
rcrb
test
cmp
jne
scas
sbb
ljmp
dec
inc
ret
call
inc
mov
dec
enter
scas
push
pusha
lea
mov
xor
into
cmp
out
jg
pusha
and
xchg
xlat
inc
add
jp
cli
je
push
xor
mov
add
mov
jo
and
movsb
stc
pop
test
add
inc
mov
loope
dec
test
loopne
lods
dec
mov
out
pop
nop
inc
sbbb
adc
cs
mov
xorl
jge
les
and
cmpsb
xlat
insb
outsl
mov
jp
sahf
stos
mov
xor
repz
push
adc
pusha
xchg
fwait
mov
mov
hlt
sti
push
pop
cmp
jg
insl
hlt
pop
arpl
lock
add
sbb
jge
push
fiadds
mov
fiaddl
cmc
mov
aaa
lock
push
data16
lret
xor
inc
scas
inc
in
sar
add
dec
pop
jmp
aaa
inc
cld
pop
test
dec
pop
sahf
sub
sti
into
in
bound
es
mov
jo
mov
icebp
mov
xchg
push
sub
fildll
push
and
mul
or
push
sub
lret
push
jmp
add
dec
push
lahf
sbb
scas
daa
and
aaa
orb
test
lea
and
xor
xor
push
repz
inc
push
dec
int3
orl
cmp
sti
insl
mov
push
dec
xor
fs
push
push
cmp
decl
ret
push
pop
jp
push
dec
xchg
mov
jb
stos
dec
ret
push
push
jp
push
fucom
in
jle
cltd
push
test
insb
xor
sti
rcr
or
imul
mov
cmp
jge
and
push
adc
out
xchg
lahf
jg
lods
mov
cmpsl
push
test
fimull
fists
xchg
and
jmp
sbb
mov
xchg
js
js
iret
daa
push
lret
adc
ficompl
inc
jl
mov
fsubs
dec
adc
xchg
out
xor
pusha
fmulp
test
shr
in
or
and
mov
and
cmp
push
loope
lds
sbb
fwait
mov
andl
out
mov
cmpsb
int3
out
js
mov
sti
out
mov
insb
inc
and
loop
add
push
mov
data16
outsl
inc
add
repz
or
je
jl
pop
mov
imull
outsb
mov
sahf
in
inc
repz
mov
je
repnz
mov
dec
jmp
in
jge
stos
inc
sub
aas
mov
sar
insb
mov
pop
ljmp
sahf
in
xchg
out
insl
jmp
mov
sbb
dec
xor
add
sbb
pop
xor
ret
scas
cld
pop
mov
in
lock
in
insl
notb
or
push
sub
sbb
rorb
shll
or
rcrl
les
mov
or
add
mov
mov
in
idivl
stos
cmpsl
cmp
inc
inc
cmpl
imul
pop
jno
push
and
jo
aad
lret
pop
fiadds
xchg
push
outsb
xchg
sub
push
add
rclb
pop
test
ret
aas
dec
cmpsb
xor
sub
mov
push
xor
dec
sub
call
push
adc
xlat
sub
lret
and
mov
or
ret
mov
push
cld
shl
jge
into
in
push
icebp
test
outsl
cmpl
jae
jmp
jecxz
push
aad
inc
xchg
ret
repnz
xchg
loope
jbe
and
adc
lahf
fsub
cmp
std
sbb
mov
mov
repnz
sub
dec
mov
pushf
push
mov
jb
xor
std
mov
and
xchg
fstl
icebp
std
xchg
dec
add
mov
iret
pusha
cmp
fwait
sbb
cmpsl
jl
cmp
hlt
or
scas
pusha
iret
hlt
xchg
cmp
adc
out
cmp
xor
dec
out
pop
sub
pop
mov
pop
pop
and
mov
and
aam
xor
cmp
adc
pop
scas
ret
testl
cwtl
ds
mov
xor
test
mov
aas
sub
decb
cmp
xchg
sbb
or
mov
frstor
push
mov
jno
add
or
jne
and
insb
push
inc
sub
xchg
mov
cli
push
out
dec
lods
jae
or
sub
test
xchg
inc
les
cmc
or
jae
pop
jns
inc
pop
pop
push
in
imul
loopne
mov
inc
jne
sbb
dec
jle
out
push
sbbl
popa
movsl
movsb
arpl
mov
jae
jno
fdivrs
push
mov
movsl
mov
mov
test
pushf
jl
pop
and
xor
pop
xorl
pop
add
je
dec
add
jo
test
repz
pop
add
xlat
movsb
pop
pushf
jp
aam
pop
mov
or
mov
mov
popa
or
push
adc
adc
test
mov
mov
jbe
roll
rclb
mov
cmpsb
outsb
popa
push
cltd
jp
and
or
sbb
jl
in
lahf
pop
sbbl
inc
lods
loopne
dec
sbb
xor
decl
pop
mov
inc
and
mov
sti
inc
jno
mov
shll
adc
and
push
repnz
movsl
fnstenv
jg
mov
push
jbe
icebp
add
mov
pop
mulb
mov
push
and
gs
sub
cmp
add
iret
jle
push
cmp
mov
add
inc
sbb
jae
add
add
mov
xor
mov
mov
imulb
mov
insb
call
xchg
mov
pop
scas
mov
cmc
iret
mov
jge
cmpsl
int3
das
xchg
shlb
jp
or
enter
push
mov
out
add
dec
mov
andl
fcomi
fs
mov
add
popl
add
in
xchg
loop
and
scas
les
pop
and
cli
mov
shrl
sbb
jo
sahf
push
sub
addr16
aas
pop
and
imul
and
sbb
pop
icebp
arpl
or
cld
xor
dec
push
shrb
fcomip
lret
or
faddp
cmc
lahf
aas
sbb
lea
clc
lret
inc
jb
idivb
mov
and
insb
sbb
lcall
pop
inc
sub
addb
xchg
into
pop
jo
mov
and
gs
and
inc
lods
pop
add
mov
xchg
ja
bound
mov
xor
fs
cmc
out
dec
pop
sbb
and
and
leave
mov
repz
xchg
mov
in
xchg
cmp
dec
pop
jbe
cmc
sbb
enter
add
stos
sub
cmp
shlb
mov
fldt
xchg
testl
jmp
mov
lret
rclb
mov
in
lret
shl
sbb
pop
cld
xor
mov
in
ljmp
int
lds
cmp
lods
lds
int3
pop
imul
es
mov
sub
mov
mov
lea
call
mov
adc
mov
jne
shll
outsb
rorb
sub
nop
fsts
sbb
inc
fisttps
popa
data16
rorl
sbb
int
pop
lret
mov
ret
fsts
jg
sub
fst
xor
popf
xchg
aaa
fsubrp
ja
push
fimull
test
push
xor
movsb
jno
mov
lret
push
or
inc
int3
or
mov
jl
lret
or
sub
cmp
lahf
jmp
movsl
sbb
push
mov
fmulp
pop
imul
mov
xchg
jo
scas
cmp
inc
mov
cltd
and
hlt
cmpsb
mov
mov
fwait
out
jp
or
imul
fnstenv
sti
scas
adc
xchg
or
mov
cli
pop
pop
add
lock
and
sbb
imul
push
fs
fstpl
xor
rol
les
flds
movsb
lret
sbb
mov
fstps
hlt
push
in
or
movlps
fsubrs
inc
adc
icebp
pop
mov
or
and
mov
in
and
sar
cmp
inc
arpl
mov
mov
mov
jp,pn
or
arpl
dec
mov
mov
lret
movsl
mov
inc
cmpl
test
jmp
inc
jo
fs
inc
add
xchg
outsl
adc
dec
push
cwtl
movsl
sbb
cmp
test
cmp
adc
lds
stc
loope
mov
and
mov
push
xlat
je
data16
arpl
push
sub
cwtl
inc
fldcw
xchg
mov
lret
negb
sbb
lock
cs
dec
fbstp
shlb
mov
icebp
fs
lock
shll
jge
test
cmp
or
les
scas
jmp
mov
dec
inc
in
or
add
je
sar
cwtl
std
mov
stos
je
cli
pop
bound
lret
jnp
mov
pop
dec
or
sub
mov
shll
fwait
test
adc
and
pop
inc
aaa
jl,pt
jns
insl
fwait
sbb
sub
fcmove
dec
mov
rorl
ss
or
movsl
mov
rcrb
push
insb
mov
cmpb
pop
pop
insb
insb
loop
xor
inc
add
stos
xlat
adc
pop
loop
test
push
imul
out
and
add
cwtl
out
xchg
ljmp
xor
xor
insl
and
subl
fcompl
push
mov
rolb
je
lock
into
mov
dec
dec
mov
lods
xor
ljmp
sbb
aad
cmp
icebp
cli
les
out
data16
icebp
push
pop
mov
mov
lods
out
lds
pop
int3
adc
sbb
adc
lcall
pop
or
in
inc
in
std
leave
push
sub
in
ret
pop
mov
outsl
test
and
in
mov
aaa
mov
adc
push
pop
icebp
cmp
jbe
jne
jb
mov
lods
repz
xor
lea
push
shrl
cmpxchg
push
jle
sub
cwtl
xlat
repnz
fisttpll
push
mov
push
fsubl
or
cmp
sub
sti
push
push
add
and
or
jbe
sti
inc
fwait
notb
pop
jle
ret
push
cmp
jb
push
cmp
xchg
sub
das
ja
mov
inc
jl
rcr
stos
aas
aas
hlt
sbb
std
xor
mov
das
std
xlat
mov
fisubl
xchg
shlb
add
into
sbb
pop
cwtl
fdiv
cld
mov
ror
orb
mov
je
sub
mov
out
fisubl
jge
out
mov
out
adc
fwait
lds
nop
cwtl
icebp
jns
fidivrl
mov
lds
in
arpl
adcl
or
sub
inc
push
lea
test
dec
leave
insl
jbe
sbb
mov
cmp
bnd
push
movsl
sbb
push
rcrb
add
sub
xchg
adc
xor
in
jge
jo
int
pop
jl
les
sub
mov
and
mov
repnz
scas
popf
movsl
xor
stos
fmuls
cmp
pushf
ja
sbb
je
pop
and
dec
dec
mov
ficoms
je
jno
mov
pop
cli
ljmp
sahf
jbe
xlat
mov
push
ljmp
call
pop
in
icebp
lret
lds
mov
ljmp
mov
movsb
sbb
pop
sahf
ret
jmp
dec
adc
cmpsb
mov
in
inc
gs
inc
out
and
xchg
or
xor
test
and
mov
pushf
pusha
popf
stos
push
loopne
shrl
les
pop
xchg
xor
or
sbb
leave
mov
into
popa
push
sti
rolb
jns
sbb
ss
lds
dec
xor
lea
push
push
in
mov
ret
sahf
aaa
mov
jbe
cwtl
mov
mov
test
adc
adc
insb
jnp
jno
ret
and
into
outsb
aam
or
ds
rolb
std
movsb
test
scas
orb
mov
std
pop
xchg
test
lret
sbb
fwait
pushf
or
imul
test
mov
outsb
mov
sbbb
mov
scas
out
jnp
leave
cmp
mov
or
push
ret
push
insb
mov
jl
inc
cmp
push
stos
and
sbb
mov
dec
inc
mov
sbb
mov
outsb
cld
iret
bound
add
adc
dec
push
enter
inc
imul
adc
in
push
sub
gs
fistpl
xor
push
fadds
pop
mov
rcrb
jg
push
insl
movsl
mov
cmp
cmp
and
and
fnstsw
inc
and
shlb
stos
mov
ret
sub
loope
xchg
dec
jge
int
and
dec
rclb
xor
and
add
xorb
nop
cmp
jg
mov
fisubrs
packsswb
add
enter
mov
inc
sahf
mov
or
pop
mov
pop
int
std
leave
jecxz
mov
add
movb
mov
sbb
mov
xchg
and
inc
fiadds
inc
das
pop
jp
xor
fmul
mov
bound
cwtl
mov
xchg
adc
lods
inc
mov
cmp
imul
jp
nop
mov
out
xlat
insl
inc
pusha
push
cmp
mov
pop
lods
and
jae
orl
xchg
mov
jo
jb
in
mov
clc
push
fsts
and
das
fs
mov
enter
sub
xchg
add
adcb
movsl
test
iret
mov
scas
arpl
jge
rcrb
or
mov
dec
outsb
jo
add
mov
mov
and
mov
xchg
imul
and
mov
inc
inc
mov
je
pop
loope
incb
popa
add
mov
adc
push
into
pmuludq
das
inc
fistpll
orb
or
imul
inc
sub
inc
arpl
lahf
jbe
mov
jno
orl
mov
or
add
fnstcw
adc
clc
xchg
and
mov
je
add
popf
adc
sub
mov
add
mov
fucom
out
xor
mov
push
jns
cltd
dec
xor
lret
dec
mov
aas
jecxz
movsl
sub
or
inc
jb
sar
push
push
add
hlt
inc
push
xor
xchg
adc
cmc
je
cmp
sarb
or
mov
sub
dec
int3
push
insb
int3
mov
stc
stc
movsb
lea
xchg
adc
scas
push
push
xchg
xchg
xorb
inc
add
dec
xor
push
fcomps
mov
std
lahf
cmc
movsl
ret
mov
and
fptan
mov
jp
push
orb
and
jae
lret
das
inc
jnp
imul
jge
arpl
rcrl
push
popf
or
inc
sbb
xor
aaa
inc
movsb
clc
aad
movsb
int
shrl
jb
inc
adc
clc
inc
aas
loope
pop
int
mov
inc
xor
inc
jbe
add
jle
mov
loope
and
sbb
cmpb
iret
ffreep
je
lea
inc
sbb
lds
arpl
push
add
dec
push
inc
mov
mov
sub
pop
out
xchg
xchg
insb
adc
pop
adc
sub
sub
cs
jle
dec
cmp
fidivrs
stos
jo
mov
pop
icebp
or
ffreep
pusha
sbb
icebp
pop
inc
lahf
repnz
fmulp
add
aad
jo
cmp
icebp
out
psubb
mov
cwtl
clc
fmull
xchg
call
xchg
add
mov
xchg
rolb
cs
je
and
aam
fisubrs
cwtl
dec
jecxz
adc
repz
dec
push
fsubl
mov
in
daa
sub
inc
sbb
sbb
das
gs
stos
test
in
in
call
and
fadd
jb
jnp
xchg
pop
shrb
jnp
fnsave
cmp
sbb
lods
lea
orb
clc
push
pop
fwait
test
add
mov
mov
stos
popa
fs
js
push
out
pop
pop
sub
pop
lcall
pop
outsl
jno
jmp
mov
jp
jl
inc
mov
rolb
ja
and
scas
xchg
fsubrs
add
push
inc
cmp
orb
js
add
sub
xchg
and
dec
out
inc
mov
cmp
sub
pop
repnz
mov
stos
jl
mov
jns
divl
jg
and
dec
int3
push
inc
stos
sti
adc
int
in
sub
push
inc
sub
cltd
mov
adcl
clc
or
dec
adc
jmp
sbb
enter
dec
sahf
adcl
dec
inc
or
adc
rorl
mov
and
clc
andl
sahf
gs
popa
mov
add
pop
and
push
jo
lods
fsubrl
sbb
sarb
test
test
test
inc
call
mov
push
mov
loopne
mov
push
or
sub
aas
test
outsl
push
repnz
push
jmp
inc
adc
inc
aad
mov
fs
test
add
jb
mov
mov
xchg
push
and
shll
push
lret
sbb
stos
mov
lods
jb
jecxz
out
jecxz
pop
movsl
xor
jae
cmpsb
mov
jmp
push
daa
xchg
aas
in
pop
mov
jp
ret
std
shl
insb
movsl
push
jg
sbb
or
int
rcrl
outsl
cmpl
adcb
inc
dec
test
cwtl
aam
ljmp
mov
cli
sbb
mov
jge
jl
int
push
add
inc
inc
mov
aad
cmp
dec
sbb
dec
jg
stos
test
and
ja
popa
sar
cmp
jg
cmpsb
cmc
inc
pop
out
pusha
int3
add
adc
pushf
push
cmp
loopne
push
xor
add
push
call
cmp
cmc
xchg
xor
xor
sub
pop
lahf
stos
pop
jp
stos
adc
nop
mov
sbb
push
popa
mov
dec
jmp
lcall
lcall
and
arpl
jge
jns
out
cmp
ds
push
enter
sahf
xorb
dec
movsl
mov
mov
ficoml
dec
mov
xchg
jb
filds
cltd
outsb
js
std
mov
fidivrs
in
les
bound
addr16
sub
das
daa
jecxz
es
in
fsubrs
loop
and
jp
fldenv
int3
movsb
xchg
jg
loope
test
mov
sbb
push
xor
aaa
aad
dec
sub
stos
jb
lahf
loope
cmp
jmp
mov
cmpsl
pushf
mov
test
iret
movsl
mov
repz
pop
shll
sarl
mov
rclb
xchg
inc
lret
sub
shl
jnp
aaa
je
sbb
and
add
nop
inc
cli
add
test
mov
sub
lcall
pmulhw
dec
mov
aaa
xchg
adc
dec
stc
jbe
xor
cwtl
lcall
fwait
out
cmp
add
mov
xchg
jne
cmpsl
xchg
dec
adc
adc
sbb
dec
aaa
xorl
in
and
and
ja
sbb
mov
nop
in
push
test
in
cmp
cs
fiaddl
into
call
cmp
lods
movsb
xor
pop
nop
cmp
hlt
cmpsb
push
cli
cli
out
sub
adc
rolb
push
cmc
adc
cmp
and
sbb
fcompl
icebp
push
sarl
movsl
inc
enter
push
push
cmp
enter
add
dec
mov
pop
repz
push
xchg
iret
in
jmp
pop
inc
add
jnp
loopne
lods
lods
lock
aad
pop
mov
std
pop
pop
test
test
xor
sub
cmpsl
lods
cmp
clc
jo
fs
mov
jae
inc
sti
icebp
adc
pop
xor
push
jle
aas
andb
rol
push
subl
dec
arpl
js
cltd
dec
mov
xchg
cli
wrmsr
pop
jecxz
push
pop
pop
jmp
sbb
dec
mov
mov
cmp
mov
and
in
sbb
sbb
and
jae
jmp
arpl
pop
xlat
cmpsl
clc
jno
es
insb
mov
lcall
je
gs
hlt
inc
dec
aad
pop
or
jmp
addr16
paddsw
mov
mov
xchg
xor
in
or
fsub
push
hlt
add
xlat
dec
fs
aaa
loope
xor
movsl
push
je
add
jae
inc
sub
push
xchg
jo
adc
push
out
jbe
fnstcw
lcall
cmp
inc
mov
cmp
jne
xor
cmp
pop
test
or
out
xchg
outsb
out
test
negl
dec
adc
and
adc
orl
mov
int
std
jbe
or
mov
mov
movsl
xlat
push
test
or
mov
stc
inc
pop
add
popf
or
fnstsw
push
mov
std
aas
mov
idivb
cmp
jns
xlat
pop
jl
pop
xlat
pop
xor
adc
test
xlat
loop
popf
mov
cmpsl
jp
loopne
jbe
rcrl
pop
xlat
repnz
and
outsb
xor
addl
out
call
push
testl
imul
scas
adc
xchg
push
into
add
push
shl
sbb
sti
outsl
sbb
mov
popa
push
mov
push
mov
addr16
les
xchg
push
les
lret
push
mov
rcr
push
pop
fstpl
ret
sti
test
dec
loop
mov
xchg
mov
ljmp
dec
sub
in
mov
push
insb
mov
ret
aad
adc
adc
cmpsb
mov
push
bound
fdivs
mov
cmp
sub
sahf
jle
sub
pop
gs
dec
cmp
int3
call
add
cmp
andl
sub
sbb
dec
cli
je
sub
pop
dec
out
pop
or
xchg
enter
lods
pop
and
sub
or
pop
mov
dec
rclb
inc
ljmp
mull
andb
push
pop
mov
add
dec
xchg
mov
push
cmp
aad
lock
mov
push
clc
cld
add
out
nop
inc
scas
jns
scas
xchg
jne
adc
sub
insl
leave
add
mov
cltd
pop
jge
push
fstp
fldenv
aam
jb
popa
pop
add
pop
fwait
in
mov
mov
jae
mov
ljmp
inc
int3
or
test
pop
inc
orl
jne
or
popf
jecxz
addr16
xor
or
call
xor
insb
jg
sub
lahf
mov
xchg
inc
decb
in
jle
mov
xor
sbbl
mov
stc
or
data16
out
sub
jge
addr16
je
push
aas
mov
sub
xor
cmc
push
mov
cli
jmp
loope
dec
ljmp
data16
loopne
xlat
ret
repnz
cltd
jecxz
cmpsl
sbb
sub
jb
in
pop
pusha
sbb
inc
push
lods
or
push
push
cli
pop
scas
int
js
js
jmp
dec
mov
cmpsb
mov
sbb
ss
enter
enter
mov
out
call
cli
sbb
cmp
dec
mull
leave
push
cltd
stc
jecxz
and
ja
cltd
adc
stos
rol
mov
ljmp
aam
jl
or
mov
sbb
lock
iret
cld
aaa
sbb
ss
mov
cmp
dec
stos
iret
aam
adc
sahf
es
adc
mov
aas
add
push
int3
js
xchg
mov
cld
push
dec
sub
enter
leave
orl
and
xchg
mov
test
or
mov
cld
lock
shlb
aad
loop
pop
cmp
outsb
cli
jl
mov
in
dec
xchg
sbb
mov
pop
mov
dec
mov
jno
aad
fistl
sub
mov
pushw
iret
adc
popa
loope
xchg
ja
fstps
xor
nop
loopne
int3
ret
sub
push
pop
lea
jmp
sbb
dec
mov
cmp
pop
mov
jp
and
push
or
data16
jae
cmp
push
xchg
push
xchg
cmp
dec
sahf
add
sahf
xchg
popf
mov
mov
dec
adc
cmp
int3
fiaddl
jne
mov
add
jae
cli
mov
inc
jl
cmp
inc
and
cmp
xchg
popa
dec
in
notl
fwait
das
dec
pop
lock
arpl
mov
lock
cltd
stos
pop
pop
daa
cmp
or
pop
adc
inc
pop
in
pop
xchg
fs
push
pop
fcmovnb
shlb
or
dec
shl
lahf
jp
xchg
ret
lret
mov
mov
and
cmp
inc
gs
or
sbb
jle
das
mov
xchg
jo
insb
scas
jnp
xorb
leave
add
cmp
jmp
jge
scas
lods
test
lret
int
cli
icebp
icebp
inc
sbb
mov
mov
popf
repz
fstpt
ja
mov
test
add
cmp
bound
push
cmp
mov
rcll
cmp
aad
ret
inc
sahf
nop
and
mov
divb
jae
test
inc
jno
loop
sub
mov
push
cmp
add
add
in
sbb
es
in
sar
stc
sti
std
pop
nop
and
outsl
xlat
popf
in
negl
and
sahf
fbstp
push
jmp
adc
loope
clc
test
inc
int3
inc
jge
push
ja
rcl
movsl
cs
je
pusha
cmp
mulb
imul
or
sti
decb
sbb
test
clc
and
or
jnp
push
pushf
mov
sbb
and
sub
adc
loop
xchg
test
ljmp
and
in
jle
dec
adc
jmp
pushf
enter
sbb
push
nop
or
pop
ror
fs
xchg
test
or
xchg
scas
inc
dec
and
xor
insb
cltd
shrb
lret
repz
xor
pop
adc
rcrl
scas
enter
pop
fprem
js
mov
movsb
sbb
dec
imul
enter
stc
mov
adc
fwait
jecxz
xchg
mov
outsb
xor
push
pop
pop
iret
mov
pop
push
and
add
shlb
or
mov
sub
loop
add
stos
mov
pop
pop
sbb
jnp
loopne
mov
int3
pop
xchg
bound
cmp
push
mov
pop
sbb
daa
jp
shlb
lret
fsts
mov
pop
inc
push
push
sarb
adcb
xchg
enter
cmp
xor
and
pop
mov
movsl
int
add
sub
into
ret
lock
fisttpll
xchg
push
rcrb
xlat
push
mov
or
leave
mov
push
outsl
lret
mov
push
out
test
dec
popf
add
mov
xor
fists
in
idiv
jbe
xchg
sbb
mov
icebp
lret
data16
jne
ret
popf
fnstcw
sub
lock
inc
pop
ror
xor
jle
ret
and
fisubrl
arpl
and
inc
adc
jns
ds
mov
testl
cmp
jmp
sub
cmp
pop
je
or
out
xor
in
movsb
cld
cmc
xchg
cmp
push
adc
push
xchg
pop
or
dec
stos
sub
loop
lock
cmp
xchg
bound
fwait
mov
popf
xor
sbb
inc
sub
dec
xor
pop
pop
mov
std
rcrl
and
mov
mov
arpl
bound
insl
arpl
add
push
push
xor
insb
xchg
cmpsb
fwait
sub
sahf
lret
aaa
push
sbbb
push
in
cmc
fwait
mov
push
mov
rol
pushf
scas
hlt
repnz
imul
fs
shrl
sbb
xchg
movsb
dec
cmc
ja
test
clc
imul
ja
das
cmpsb
fistl
sub
mov
lods
aad
pop
push
in
popf
mov
cmp
push
add
adc
mov
test
inc
out
add
push
and
push
cmp
or
xor
and
xchg
mov
sub
dec
xchg
movsb
jle
popa
sub
cmp
mov
xchg
fidivrl
add
inc
mov
pop
out
leave
pop
or
sub
repz
inc
xchg
mov
jns
jmp
pop
popf
push
sub
leave
lods
sub
mov
std
mov
adc
xchg
add
out
insb
sub
mov
aaa
add
out
fsubrs
pusha
outsb
or
in
push
mov
inc
mov
adc
aaa
xor
subb
sbb
jae
xchg
call
lret
inc
adc
dec
dec
push
pop
xchg
or
mov
push
pop
dec
mov
lea
pop
jo
inc
push
fdivrs
dec
push
std
int
out
ljmp
lea
mov
movsb
ss
adc
jae
push
xchg
sub
ljmp
xchg
cmc
scas
int
popf
into
mov
jb
test
sbb
cmpsb
mov
mov
orl
mov
sub
fcomp
iret
mov
add
loop
mov
es
int3
lcall
push
cs
scas
adc
sbb
je
loopne
pop
fidivrs
not
das
cmp
in
push
jbe
mov
pusha
xchg
xor
negl
xlat
scas
mov
adc
stos
sahf
mov
clc
test
pop
dec
jns
mov
mov
sbb
push
mov
dec
mov
out
mov
add
rolb
outsl
andl
lods
fdivrs
pop
xor
stos
mov
test
add
push
pop
mov
push
sub
inc
mov
jae
stos
dec
gs
idivb
mov
shrl
jbe
sub
shlb
movlps
js
xor
pop
mov
loope
sub
push
jb
dec
inc
push
scas
push
push
push
inc
dec
xchg
test
insb
mov
dec
das
int
fisttpl
lods
pop
sbb
arpl
jbe
shrb
cmc
xor
and
mov
push
xor
mov
sub
dec
in
mov
out
inc
jecxz
xor
or
mov
sub
and
sbb
jmp
shl
int
pop
scas
cwtl
fdivp
cmp
dec
aad
xor
addl
insb
stos
lds
or
pop
pop
dec
insl
shl
sbb
divl
mov
dec
and
pop
jmp
incb
sbb
jmp
pushf
and
cmp
mov
xor
or
jbe
push
into
in
mov
sub
sub
call
or
aad
cmpsl
std
sub
aas
outsb
mov
iret
cltd
add
push
and
sbb
enter
es
add
inc
jae
inc
std
jbe
jmp
imul
cmp
jae
cmp
pushf
inc
mov
cltd
arpl
cld
iret
fdivs
adcl
push
sub
popa
sub
mov
nop
mov
std
xchg
push
xchg
out
xor
or
xchg
add
fildl
inc
insl
and
vpternlogd
cmpsb
push
call
mov
mov
iret
gs
dec
pop
adc
mov
loop
push
pop
mov
das
push
xchg
inc
push
inc
fisttps
dec
pop
pop
enter
fimull
subl
inc
pop
in
cmp
test
js
xor
xchg
jmp
jae
in
iret
iret
xchg
jns
into
inc
inc
movsl
js
xlat
into
loop
xor
add
out
imulb
ds
cmp
scas
bound
mov
dec
inc
push
stos
scas
mov
fmul
xcrypt-cbc
cmpsl
xchg
inc
pop
sbb
sub
and
xchg
jnp
clc
mov
out
pop
cwtl
cmpsb
push
hlt
fiadds
outsl
inc
jno
neg
add
cwtl
adc
or
clc
add
fwait
or
sbb
or
xor
cmp
mov
xor
and
xchg
subl
fnstsw
cmp
arpl
popa
and
jecxz
aas
mov
ficoms
cmp
xor
leave
push
fidivrl
jmp
push
iret
cmp
mov
or
pushf
sbb
mov
ljmp
push
xorb
adc
and
movsl
leave
or
lcall
jno
leave
adc
rorb
inc
mov
jno
jge
enter
inc
xchg
fldcw
popf
push
pop
ds
lds
add
pop
mov
mov
cmp
hlt
mov
mov
test
xchg
in
sbb
notb
mov
xor
popa
loop
push
xlat
xchg
add
push
out
mov
pop
adc
add
sub
nop
inc
in
jo
cmp
mov
add
mov
xor
iret
out
add
pop
mov
push
mov
add
sahf
add
and
arpl
lret
into
push
and
add
xchg
out
std
aaa
or
jle
pop
hlt
clc
mov
jecxz
pop
or
pushf
test
or
sti
into
comiss
outsb
sbb
insl
dec
fiadds
cmp
and
lret
adc
adc
adcl
xor
sbb
movsb
mov
xchg
iret
push
frstor
jne
pop
movntps
inc
dec
out
xchg
lods
sbb
lods
push
jo
inc
xor
pop
ror
mov
out
stos
or
out
cmp
ljmp
sub
cwtl
jnp
sbb
test
pushl
jo
dec
mov
mov
sti
fbstp
sub
insl
ret
ret
push
sbb
sbb
sub
pop
bound
xchg
rcl
cmpsb
fdivrl
outsl
pop
push
adc
and
ret
sub
add
push
inc
bound
cltd
push
loopne
sub
iret
inc
jp
add
jge
xor
xchg
cli
iret
movsl
lcall
xchg
pop
jle
dec
sbb
push
jne
ret
aam
movb
or
sti
sbb
scas
out
pop
xor
mov
adc
mov
cltd
gs
or
cs
dec
popf
or
ss
jae
das
je
push
fs
push
inc
and
mov
sub
cmpsb
mov
in
push
loopne
leave
mov
mov
inc
mov
lods
mov
jbe
outsl
test
add
rolb
arpl
loop
stos
pop
add
push
scas
movsl
mov
inc
xor
hlt
dec
mov
mov
inc
and
xchg
and
sub
pop
and
cmpsb
lea
push
cmp
sub
pop
xchg
imul
lock
int
stos
xchg
or
in
xor
dec
lret
jge
mov
push
aaa
popf
out
and
push
out
in
outsb
ja
jg
nop
pushf
cld
pop
enter
lret
dec
data16
outsb
mov
lret
sub
push
cmpb
jmp
or
fisubl
iret
push
or
mov
cld
push
jmp
jl
xchg
ja
int
ja
xchg
cmp
insb
sub
rcll
scas
jns
sub
push
insl
cmpb
lds
mov
cmp
mov
test
jnp
lods
test
cmc
sahf
cwtl
scas
or
pmulhuw
outsl
sbb
xor
sbbl
inc
push
aam
adc
add
xchg
xchg
sbbb
int3
xchg
jecxz
dec
test
push
jge
lods
ficoml
lret
sbb
sub
sbb
sbb
or
dec
xchg
push
dec
inc
xor
mov
repnz
pop
mov
mov
test
or
std
jl
mov
push
jle
leave
mov
pop
int
sub
nop
jbe
push
pop
rorl
cmp
in
fs
push
sub
mov
adc
adc
loopne
cmpl
sbb
pop
std
mov
fsub
mov
mov
jnp
xchg
inc
insl
xchg
decb
popa
out
loopne
xor
add
std
add
pop
pop
sub
jns
arpl
iret
dec
subl
jbe
in
dec
mov
addr16
hlt
or
aam
or
add
jl
lock
mov
fwait
cmc
mov
ljmp
or
jle
jb
js
and
lock
mov
push
push
cltd
adcl
adc
inc
lcall
hlt
sti
xlat
enter
popf
xchg
cmpsb
stos
int3
jle
enter
shll
nop
leave
movsl
lahf
subb
mov
das
dec
jl
xchg
aas
inc
dec
or
sbb
dec
jb
notb
in
cld
loop
xorb
xchg
filds
aad
cmpsb
add
lods
in
mov
jg
out
in
xcrypt-ofb
cmpsl
sub
mov
sbb
adc
outsl
adc
xor
sub
inc
pusha
push
mov
lret
gs
fadds
in
sbb
lock
jbe
mov
test
pop
rcrb
xor
aam
mov
pop
adc
sbb
sbb
cmpl
fsubl
js
sahf
mov
sar
fisubrl
cli
dec
jecxz
test
ljmp
out
inc
cld
sub
nop
add
mov
adc
sarl
jmp
cmp
hlt
int3
test
fstpt
and
pop
fidivs
xor
js
insl
xchg
nop
adc
sbb
mov
push
das
jmp
insb
movsb
dec
sbb
pop
push
jo
fcoml
iret
cmpsb
fiadds
jge
test
push
mov
pop
xchg
jb
mov
gs
mov
and
mov
das
rcrl
lock
jns
into
pop
cmp
adc
push
test
daa
fsubrp
push
adcb
stos
out
and
subb
cmpsl
mulb
sub
test
and
adc
pop
loopne
sub
leave
and
inc
jge
ss
sti
movsb
popf
push
aad
enter
setne
psubw
loope
push
mov
mov
mov
mov
in
inc
cmp
push
sbb
int
cld
movsb
dec
add
stos
nop
pop
xchg
jge
mov
mov
or
jbe
xor
and
je
pop
or
inc
mov
pop
mov
mov
xor
cmp
enter
out
pop
sbb
push
dec
push
mov
loopne
push
aaa
mov
xchg
mov
push
hlt
cmp
mov
insl
xchg
movsl
clc
cmp
aam
loop
pop
jae
add
sub
xor
add
aad
pop
clc
and
sahf
neg
arpl
inc
sub
mov
fwait
outsb
mov
aam
and
dec
inc
push
and
and
sub
lods
adc
ss
in
insb
mov
loop
into
add
daa
out
dec
fstps
cli
aaa
js
cltd
mov
push
push
cmp
lret
xor
push
jmp
call
stos
xor
push
inc
gs
mov
stc
mov
mov
ja
sub
iret
iret
mov
xchg
out
push
dec
test
cmpsl
inc
test
inc
mov
xor
repz
mov
jecxz
xchg
or
into
pop
mov
ja
popw
scas
leave
xor
incb
clc
jbe
or
xchg
loop
mov
push
mov
bound
pop
xor
lcall
fwait
cmp
aaa
xor
or
bound
xor
adc
xchg
sub
mov
test
xchg
iret
into
dec
sub
xor
mov
and
xor
inc
imul
jo
call
neg
adc
cmc
or
cld
jmp
mov
pop
and
sub
mov
test
in
xchg
dec
flds
mov
rorb
jmp
cmp
inc
jnp
add
cmpsb
enter
sarb
xchg
lods
jb
stos
pop
fnstsw
ja
shll
in
fwait
pop
aam
xor
test
popf
je
outsb
stc
and
adcl
mov
ljmp
imul
scas
xchg
and
pushf
mov
aam
in
and
scas
mov
mov
mov
pop
sarb
repz
stos
popf
fisubl
fucomp
mov
cmp
cmp
inc
mov
push
cs
pop
cs
js
sarb
inc
lcall
and
mov
ficoms
js
and
pop
mov
xor
nop
popa
es
and
adc
cli
and
testb
popf
adc
add
jp
mov
xor
cmpsb
mov
xorb
add
mov
mov
xlat
push
testb
mov
aas
popf
dec
aad
call
jl
ds
jo
out
xor
out
out
inc
cmp
dec
out
insl
movsb
fisubrl
dec
fnsave
pop
mov
jnp
ret
xor
adc
fistpl
stos
mov
and
ss
mov
out
dec
sub
call
in
pop
or
mov
or
sbb
adc
mov
add
mov
out
andb
and
add
or
addr16
inc
scas
mov
mov
fimuls
mov
pop
ds
fisttpll
insl
call
push
fcomi
movsb
clc
in
in
dec
lods
mov
jge
xor
loope
jne
or
scas
add
add
fs
mov
mov
push
in
sbb
dec
or
rcrb
call
shl
inc
jecxz
or
xor
cli
xchg
aam
or
loop
ljmp
push
pop
sbb
pushf
mov
movsb
sub
rol
dec
cmpsl
mov
jmp
xorl
rcrl
and
nop
arpl
stos
pop
mov
inc
xlat
fisttpl
pop
inc
mov
bound
lret
xchg
sbb
push
push
vunpckhpd
aam
je
cmc
data16
cwtl
sbb
dec
mov
aad
sbb
out
mov
cld
jl
mov
add
dec
push
cmpsb
xchg
aaa
mov
add
add
inc
loopne
or
outsl
jge
stos
fdivl
xor
mov
cmp
adc
sbb
scas
loopne
shrl
sbb
daa
imul
mov
jno
rorl
nop
jo
test
pop
cmc
ljmp
cmpsl
jg
sbb
push
pusha
incb
adc
jp
in
dec
or
pushf
je
sbb
xchg
sahf
scas
jae
in
cli
xchg
rcrl
out
mov
pop
and
mov
jp
in
loop
stos
sub
mov
jle
lahf
divb
or
xchg
mov
mov
xchg
mov
push
xor
push
mov
mov
xchg
call
mov
andb
roll
push
push
fisubrl
mov
xor
cwtl
fstpt
cld
in
jo
sub
decl
or
xchg
push
popf
aam
mov
mov
fadds
outsb
popf
dec
cmp
mov
dec
mov
sti
callw
cmp
mov
ret
xchg
add
add
mov
inc
jg
popf
jmp
xlat
js
cmp
mov
daa
sub
jo
movsl
subl
mov
mov
dec
sub
loop
sub
jbe
push
inc
mov
pusha
test
fldcw
cmc
pop
into
test
clc
push
mov
out
sbb
mov
insb
mov
mov
jns
pop
sub
sub
and
mov
gs
cmpsl
mov
cmc
inc
addl
popf
cmp
pop
inc
and
mov
jp
jne
xorb
roll
movsl
popf
sti
lahf
lahf
lds
inc
iret
xchg
in
sub
int3
inc
jle
fdivs
push
mov
lods
test
pop
push
mov
inc
xchg
pushf
insl
cmp
inc
sub
sub
cmc
loop
adc
jbe
sbb
int
push
pop
mov
inc
mov
mov
mov
pop
add
sbb
push
mov
fs
lahf
in
sub
fs
push
pop
mov
cmp
scas
loope
push
imul
sahf
push
or
dec
sub
int
hlt
push
aas
js
cli
out
pop
repnz
xchg
jmp
sub
cmpsl
cmp
dec
je
fstp
mov
fsts
pushf
insb
pop
sub
test
enter
mov
hlt
add
push
bnd
stos
flds
daa
pop
repnz
pop
pushw
cmp
rdpmc
jge
jne
inc
adc
arpl
or
test
data16
sbb
or
inc
stos
test
push
jae
cld
push
enter
jnp
xchg
push
cmp
cli
xor
xor
or
cwtl
mov
mov
dec
stos
into
mov
aad
and
or
les
mov
movsl
cli
icebp
in
push
lods
outsb
fisttps
popf
xchg
fldl
mov
push
pop
xchg
fwait
decb
sbb
hlt
and
imul
xchg
mov
dec
sub
xchg
aaa
push
fwait
push
rol
push
and
mov
popa
loope
stos
fwait
nopl
fimuls
mov
lahf
int
cmp
inc
out
es
jns
es
out
repz
inc
in
adc
mov
rolb
pop
pop
push
fbstp
in
iret
mov
mov
push
daa
fdivrl
mov
ljmp
push
inc
mov
lea
sub
insb
je
push
dec
push
dec
xchg
and
dec
push
push
outsl
and
clc
ja
test
or
push
or
mov
mov
jo
sub
inc
mov
push
repnz
fsts
and
add
in
sbb
inc
cmp
pop
aaa
inc
push
sub
es
enter
or
inc
adc
fdivrs
repz
scas
lcall
jno
out
mov
dec
les
dec
add
repz
sub
sar
and
pop
negl
jae
or
cltd
decl
dec
fisttpl
xchg
cs
sbb
adc
fmuls
sbb
push
xor
mov
fcos
push
test
push
add
popf
sub
int3
jge
jmp
push
lahf
ss
ljmp
imulb
daa
fxam
xor
mov
lods
test
cltd
jecxz
lods
loopne
icebp
addr16
wbinvd
mov
jnp
mov
test
insb
rcrb
out
xor
xchg
push
clc
lock
mov
push
std
fcomps
inc
mov
bound
popf
sbb
shl
mov
int
fnsave
cmpsb
outsl
jl
xchg
enter
mov
cli
cld
cmp
fidivl
xor
cmpsl
jbe
and
int3
lock
and
push
movsb
jg
adc
insb
scas
lods
movsl
sub
xchg
mov
adc
add
adc
outsl
xchg
mov
sbb
add
cmpsb
add
mov
xor
ljmp
or
sti
rorl
faddp
xor
mov
dec
test
mov
push
jb
cwtl
sub
mov
pop
push
add
nop
ds
jo
jns
jbe
xlat
rcr
or
dec
inc
fsubp
and
jae
cmp
mov
jge
mov
push
outsb
cwtl
jp
ja
mov
lret
hlt
and
aaa
lods
rolb
adc
push
fstpt
stc
fdivrs
pop
mov
aas
rdpmc
sahf
lock
xchg
inc
push
stc
or
aam
scas
jg
pop
cmpsb
mov
jle
xchg
loop
pop
es
enter
aaa
loopne
cmc
fildl
lcall
jg
xor
push
sarb
daa
loop
pop
clc
adc
cmp
enter
js
lcall
adc
out
inc
stos
xchg
cld
ror
jb
xor
scas
add
mov
das
pop
add
std
rcl
arpl
dec
sbb
jle
ret
sbb
stos
sub
push
xchg
xchg
clc
test
mov
or
ret
shll
cltd
xor
fiaddl
or
imul
add
std
add
jl
sub
adc
inc
movsl
pop
xor
test
push
stos
aad
mov
ffree
mov
push
xor
push
movsb
aaa
sbb
jo
inc
sub
mov
mov
or
mov
addr16
pop
rcll
in
pushf
push
mov
cmp
cmp
jmp
mov
daa
fcmovb
sub
test
or
dec
rolb
add
int
enter
fcmovne
dec
insl
scas
fmull
in
in
sarb
int
jecxz
sbb
pushf
je
push
pop
arpl
dec
pusha
xor
xchg
sbb
sub
xchg
out
dec
call
loope
lods
xlat
mov
imul
dec
inc
push
loopne
xchg
xor
cmp
cmp
dec
push
jg
in
add
or
rcll
cld
fcomps
mov
cltd
popl
int
aas
mov
aad
pop
insl
xchg
repnz
xchg
cmpsl
sub
popa
add
test
jle
test
lock
push
and
es
ds
imul
cmp
lds
jns
mov
insb
fsubrp
or
sarl
sub
out
test
or
mov
inc
lods
jne
out
mov
sbb
gs
cmpsl
in
popf
ljmp
scas
int
mov
lret
mov
aaa
push
push
lods
fdiv
or
sbb
mov
adc
mov
imul
aas
in
fsts
inc
rcrl
into
jno
add
dec
jb
or
pop
xchg
aas
cmpsb
hlt
xor
xor
mov
dec
xor
loope
inc
mov
call
sub
stc
ss
adc
test
adc
cmpsb
test
lock
ss
xchg
lock
jle
inc
iret
push
sbbb
xchg
xchg
add
movsl
mov
lds
add
push
arpl
push
cmpsl
push
scas
movsl
stc
mov
fwait
icebp
pop
in
jecxz
pop
jns
push
and
into
mov
rorb
test
lcall
inc
push
or
mov
lds
ja
enter
xchg
jmp
mov
inc
xchg
pop
inc
nop
enter
xor
ljmp
cld
mov
jns
stos
adc
adc
popf
mov
push
fldenv
mov
outsb
dec
arpl
insb
dec
xchg
push
mov
pop
je
out
imul
addl
push
fcmovne
incb
xchg
out
or
adc
cmpsl
int
xchg
pop
test
out
adc
pusha
xchg
test
mov
fmull
cmp
daa
mov
int
push
inc
sub
push
inc
outsl
xchg
fbld
js
cmp
adc
push
outsb
sti
in
imul
xchg
xchg
out
adc
inc
inc
sbb
ds
andl
cli
dec
inc
xchg
sahf
aad
inc
ja
stos
fistpl
movsl
add
mov
imul
cmp
fisttpll
cmp
cmpsl
or
shll
adc
mov
bound
pop
subb
out
mov
movsb
nop
pop
ds
mov
imul
inc
push
ss
add
aam
and
enter
pop
mov
push
cmpsb
and
call
mov
testl
pop
into
pop
enter
mov
mov
adc
jmp
repnz
dec
lcall
sbb
lcall
out
adc
popf
outsb
or
repz
push
mov
daa
orb
ja
stc
and
xchg
mov
push
dec
push
inc
jns
cmpsl
push
je
jle
fistl
or
pop
jns
ret
xchg
data16
push
mov
fsts
enter
dec
repz
xor
sbb
xchg
aas
mov
stc
xor
push
je
lods
push
ret
mov
push
fldenv
cs
sbbb
in
into
dec
cmp
push
sub
addb
adc
test
outsl
push
mov
pop
int
xor
ja
rclb
das
loop
mov
jnp
jae
push
or
mov
ds
xor
mov
cmc
int
or
insl
mov
fdivrl
adc
or
out
xor
jnp
xlat
push
xchg
jb
xlat
les
lret
xor
cmp
push
xchg
cmpsl
das
jmp
rclb
dec
mov
bound
es
outsb
and
and
xchg
out
mov
hlt
push
scas
sbbl
pushf
push
mov
xor
push
inc
and
cwtl
mov
pop
push
and
sarb
mov
lret
ss
adc
jge
outsb
movsb
push
popw
sbb
inc
into
dec
into
push
je
push
or
xor
lds
inc
adc
sub
jge
or
movsb
push
out
std
sub
lahf
in
jp
andl
leave
or
mov
xor
inc
stos
in
test
adcb
cwtl
or
pop
fiadds
das
sub
fwait
test
pop
testb
clc
int
cmpsb
repnz
das
pop
shr
rclb
imul
in
xchg
div
test
loop
js
sbb
repz
mov
js
sub
mov
flds
out
rcrb
sbb
pop
repz
pop
orl
add
hlt
ss
fidivrl
flds
cmp
mov
push
repnz
xor
pop
sbb
mov
add
fnsave
push
pop
mov
cmpsl
sahf
xor
ds
push
sub
shll
scas
arpl
xchg
icebp
scas
jl
mov
aas
sub
cmp
push
and
xchg
mov
mov
call
stos
pushf
inc
enter
pusha
loope
pop
mov
xchg
lahf
test
jns
and
dec
inc
jl
jae
cwtl
in
push
xchg
mov
and
scas
or
aad
push
inc
test
add
and
insl
div
pop
mov
xor
out
cmp
cmp
and
inc
sub
ss
and
pop
or
xchg
xchg
loop
mov
add
push
fwait
mov
jp
aas
pop
jnp
xchg
imul
xorb
lcall
mov
pop
push
shlb
jbe
adc
jbe
inc
outsl
or
rcrb
cs
adc
ret
sub
rcr
mov
or
out
adc
push
pop
loop
jmp
xor
sbb
jbe
mov
adc
cmpsb
cld
loope
in
xor
sub
lock
popa
cld
movsl
mov
jmp
mov
cli
jns
or
daa
jl
stos
or
inc
mov
arpl
push
adc
iret
popa
out
xor
and
enter
adc
clc
xor
sub
scas
push
popa
add
jmp
cli
pop
add
cmp
jns
stos
bound
push
in
inc
std
pop
test
int
fidivl
cmp
xchg
aam
mov
adc
pop
sub
int
movsb
mov
dec
mov
rcl
jg
dec
daa
jg
outsl
add
add
enter
jns
sbb
movsb
clc
inc
fs
test
or
popa
mov
dec
inc
ss
adc
xchg
lds
push
jle
sbb
cmc
negl
jns
mov
cmpsl
js
in
roll
les
cvtps2pi
sbb
ret
mov
loopne
stos
jecxz
scas
scas
pusha
jmp
test
mov
shrb
push
in
pop
add
pusha
pusha
test
dec
mov
and
test
ret
lods
lcall
or
mov
and
mov
cmp
lds
test
fcmovnbe
xorb
aas
insb
add
stos
clc
sbb
push
and
xorb
int
sbb
jo
jge
push
mov
rcl
loope
push
stos
pop
test
jl
mov
sbb
cs
mov
mov
push
scas
jl
sbb
aam
xor
push
mov
jmp
pop
mov
sub
repnz
out
mov
inc
xchg
sti
stos
aaa
daa
or
sbb
cli
repz
mov
sbb
aas
es
inc
mov
dec
mov
cmpsl
or
shlb
jae
pop
dec
insb
les
xchg
movsb
sub
iret
out
stos
xchg
mov
inc
push
sar
fldl
idiv
pop
xchg
mov
xchg
adc
out
outsb
pop
push
push
cmc
mov
js
xor
leave
adcl
mov
push
cmp
loope
out
add
mov
stos
imul
xor
pop
loopne
in
inc
repnz
inc
scas
repnz
lret
pop
daa
sbb
xor
pop
and
lods
sbb
ret
push
jl
out
stc
insb
xor
stos
push
jecxz
jmp
mov
scas
addr16
roll
add
pop
jg
or
cmp
popf
mov
rolb
push
in
mov
pop
xchg
aad
lock
addr16
cmp
inc
push
ja
and
faddl
xchg
xor
fwait
cmp
or
fsubs
data16
mov
inc
mov
lods
pop
jmp
mov
push
icebp
jae
jecxz
mov
popa
xchg
lds
mov
addr16
mov
inc
xchg
arpl
mov
mov
jne
popa
xor
cmp
ret
pop
jnp
data16
or
call
in
les
clc
jbe
insb
add
popa
dec
pop
cli
mov
or
inc
scas
and
mov
cs
loopne
mov
fiadds
shrl
movsb
arpl
xor
lock
test
push
test
or
rcl
mov
or
jl
addr16
inc
adc
jmp
aaa
fisubl
xor
loopne
push
test
jae
mov
lret
lods
ljmp
mov
insl
cmp
jp
jl
xchg
cli
fs
jbe
stos
dec
mov
sbbl
lods
in
mov
shll
sub
es
mov
xor
daa
dec
dec
sbb
fidivs
lea
inc
add
adc
cmpsb
dec
dec
xchg
mov
mov
cwtl
dec
fcompl
sbbb
in
inc
inc
push
rcll
rorb
jb
pop
negl
sub
dec
pop
cli
mov
pop
jnp
cmp
vpaddw
shll
repz
fwait
xchg
test
dec
nop
mov
ljmp
in
jae
adc
cmp
mov
push
test
loopne
imul
or
int3
cmp
fcomps
hlt
jp
pop
dec
mov
lahf
vpmacssww
push
add
xor
xor
popf
xor
cld
cltd
scas
push
xor
outsb
jmp
sahf
out
in
stos
add
rolb
add
cmp
inc
subl
pop
dec
stc
ret
sbb
pop
cmp
sbb
xchg
lret
movb
call
push
add
sub
clc
push
leave
call
adc
xor
dec
jge
xchg
movsb
and
adc
scas
int
sbb
lea
movsl
sarb
lret
mov
roll
rolb
jb
add
xor
mov
arpl
xor
dec
test
cmpl
mov
pop
push
lock
push
hlt
movsl
cmp
mov
push
mov
ret
sbb
ljmp
sti
das
pop
notl
subb
push
jmp
mov
mov
stc
add
push
xchg
aad
xchg
std
loop
sbb
xchg
cmp
cs
xchg
shr
jmp
ror
cmpsb
ret
add
adcb
cmp
rol
mov
lret
test
push
insb
js
adc
cmpsl
and
and
push
pop
push
sub
adc
pop
mov
and
inc
leave
addr16
repz
mov
fisttpl
jbe
pop
xchg
outsb
dec
push
test
aas
call
fucomp
popa
push
mov
jne
or
xchg
lods
push
adc
cmc
popf
jnp
aaa
subb
cmpsl
sti
dec
mov
mov
or
out
cmp
in
dec
jo
leave
jmp
pop
mov
xor
cltd
sti
lods
add
out
pusha
jl
pop
and
fnstsw
and
std
jne
jmp
jl
into
lock
push
lahf
mov
push
xchg
xchg
pop
ja
dec
sub
adc
repz
sti
cltd
jl
pop
mov
cwtl
jmp
in
leave
mov
shll
mov
scas
stc
xor
sbb
cli
mov
inc
loopne
stos
cwtl
mov
movsl
sti
imul
mov
aad
insl
or
or
scas
sbb
jl
mov
or
adc
xchg
mov
adc
ds
out
pop
ss
sbbl
and
testl
and
cmp
dec
cmpsl
add
push
lods
cmc
jo
xor
js
inc
jbe
pushf
xchg
movq
repz
or
loopne
arpl
pusha
cwtl
addr16
adc
cmpsl
push
add
cmp
and
jmp
jg
pop
das
dec
mov
sbb
roll
mov
call
and
xchg
and
and
cwtl
jns
daa
and
sbb
es
mov
push
mov
gs
gs
in
and
push
arpl
ja
xor
pop
in
lods
stos
cmp
jns
inc
push
fsubs
sbb
scas
int
sub
popa
cmp
call
jg
in
cli
push
aam
inc
mov
popf
jno
inc
lret
xchg
xor
or
add
jp
pushf
lods
push
or
and
stos
ret
cmc
shll
xchg
aad
es
popa
sub
mov
ljmp
stc
jl
js
mov
xchg
xchg
xor
xchg
and
inc
enter
sub
mov
cli
xchg
xchg
mov
cltd
test
pop
fcoml
cmpsb
xor
cmpl
stc
loopne
adc
sub
pop
sbb
lock
inc
xor
loopne
mov
sbb
mov
hlt
in
xlat
and
std
insl
aam
popa
lods
shrb
xchg
pop
add
sbb
ljmp
sahf
ja
out
xor
aas
pop
xorb
or
fnstcw
sarl
aas
out
and
icebp
pop
aad
repnz
inc
dec
pop
js
xchg
mov
mov
stc
adc
pop
dec
dec
jmp
dec
popa
dec
repnz
add
leave
outsl
leave
rcrb
sub
sarl
shll
jo
imul
cwtl
xor
jp
push
cltd
mov
out
push
loop
xchg
loope
mov
ja
cmc
out
xlat
sarl
mov
mov
jmp
subb
cld
jo
out
mov
sbb
rorl
dec
cld
shl
rclb
rcr
popa
cli
cld
jecxz
push
inc
inc
out
jne
mov
pop
fcomps
std
xor
sub
sbb
xchg
adc
cwtl
insb
mov
and
add
enter
add
imul
sbb
into
int
or
jl
mov
pop
or
mov
and
or
jno
lcall
in
popa
xorb
sbb
push
cmc
test
and
xchg
inc
test
inc
xor
call
mov
xchg
pop
out
sbb
lret
data16
ret
cltd
jae
dec
repz
xchg
nop
fnstcw
pop
pop
xor
mov
push
pop
adc
out
mov
cltd
adc
repz
enter
imul
dec
pop
mov
loope
leave
pusha
pop
rclb
aaa
add
sbb
sub
es
fcom
ror
subb
and
inc
mov
dec
lahf
push
mov
scas
xchg
mov
pop
jae
fdivrl
cmp
push
push
pop
push
jbe
movsl
out
xor
loopne
scas
xor
notl
in
shrb
inc
scas
ror
inc
inc
cmp
fcomps
and
mov
das
pop
push
or
sbb
or
sub
or
scas
rorb
mov
test
roll
lea
sarl
cmpsb
jecxz
rorl
jns
jp
aam
pop
sub
dec
xor
mov
js
pop
xor
in
or
push
xchg
jae
pop
icebp
movsl
mov
arpl
mov
ljmp
mov
fwait
or
sbb
push
sbb
in
xchg
jl
xor
mov
jmp
out
decl
jnp
loop
cmp
test
outsl
xor
jnp
sub
pop
jle
pop
enter
clc
ljmp
or
mov
bound
pusha
popa
cmp
mov
add
out
or
pop
cmp
jno
jnp
push
jae
mov
mov
nop
cli
adc
jge
es
fdiv
ret
ja
pushf
push
push
sbb
push
clc
push
push
push
in
jns
jae
mov
pop
inc
rorl
data16
pop
daa
sub
cwtl
jo
aaa
inc
mov
mov
jg
jo
xor
lock
jecxz
sahf
dec
xchg
and
leave
pop
popa
cmp
out
dec
insb
jmp
cmp
imul
in
pop
setg
or
jne
imul
mov
leave
aaa
stos
jg
mov
vmovups
rorl
sbb
cmc
push
mov
inc
cmpb
adc
movsb
mov
inc
jns
inc
frstor
lcall
les
pop
adc
mov
push
xchg
dec
pop
lret
gs
sub
mov
inc
movsl
bound
mov
mov
cmp
jle
hlt
add
aad
mov
adc
mov
pop
bound
push
int3
es
into
mov
ss
pusha
cmpsb
jno
daa
mov
jns
add
inc
pop
sbb
pop
jp
stos
ljmp
ret
dec
mov
into
adc
call
xlat
call
in
repz
xchg
sub
in
xchg
mov
aam
jle
ljmp
out
cmp
int3
cmc
int
lock
cmpl
mov
js
cmp
mov
xlat
or
scas
int
int
push
adc
enter
xlat
mov
dec
not
ja
imul
sarl
std
cmp
jge
jne
mov
shrl
aam
fwait
ret
fstl
cmp
pop
cmp
push
std
icebp
xchg
and
push
in
xor
js
jecxz
out
repnz
ret
adc
addr16
jns
cmp
outsb
ss
inc
xchg
xlat
jne
xchg
xchg
xchg
mov
add
imul
adc
jae
mov
stos
int
test
out
leave
aaa
popf
dec
out
mov
fidivrs
mov
jnp
mov
repz
push
out
addr16
lock
test
jns
mov
stc
rclb
mov
mov
stc
jge
lock
jae
xchg
sub
lock
fbld
movsb
mov
or
fcoms
sbb
push
xchg
loop
pop
mov
movsb
jae
add
cmpsb
stc
mov
imul
adc
cmpsb
mov
jo
inc
in
cmp
sar
mov
ret
aaa
fidivrs
fidivrl
loopne
sub
icebp
cmp
mov
sbb
xor
mov
movsl
push
mov
lds
enter
cwtl
pop
xor
rolb
les
test
sbb
mov
jno
dec
int
jl
out
and
jne
hlt
push
mov
or
inc
and
sbb
bound
adc
jg
ficoms
fdivl
popa
push
pop
or
push
test
aas
jge
sub
xor
movsb
push
jmp
cli
mov
loope
adc
mov
mov
shlb
jns
sti
int3
and
mov
xor
into
int
add
test
js
inc
jge
mov
lock
pop
lods
sub
xor
jl
fisubs
adcl
pop
int3
out
and
fisubs
aad
test
insl
sub
mov
pusha
dec
xor
lock
ss
popa
jo
ja
pop
jne
push
mov
js
jp
sub
stos
mov
jl
mov
outsl
jae
bound
ret
jecxz
movsl
mulb
push
ljmp
dec
pop
push
adc
sbb
mov
lcall
in
mov
cwtl
or
xor
jno
cltd
inc
xchg
jbe
sahf
es
dec
mov
push
adc
lods
lods
nop
enter
jo
test
xor
pop
je
stos
inc
or
fcmovnu
and
fsubr
mov
pop
xor
nop
xchg
adc
pop
mov
push
inc
stos
sub
pop
adc
xor
loopne
movaps
mov
xor
call
xchg
daa
add
dec
in
mov
sub
sub
jb
test
jns
mov
ss
or
xchg
dec
xchg
lret
mov
loop
push
je
stos
add
jae
scas
cs
mov
add
push
adc
lahf
int3
bound
fcoms
cmpsb
mov
call
jne
mov
pop
jp
xchg
in
xor
out
dec
cmp
push
or
and
out
repnz
sbb
mov
pop
mov
mov
in
pop
mov
inc
jns
stos
inc
insl
inc
xchg
or
faddl
cwtl
cmc
jno
es
and
inc
cltd
lock
pusha
gs
shll
inc
ss
cltd
sub
pop
icebp
mov
push
cmpsl
jmp
cli
fidivrs
popa
ret
pop
fiadds
pop
xchg
pop
aam
jl
xor
push
mov
sbb
gs
jo
mov
fstpl
jne
call
inc
mov
dec
in
loop
test
enter
inc
aas
sub
xchg
xor
inc
cld
inc
dec
cmp
ja
pop
push
adc
aad
mov
and
cmp
add
and
or
jnp
ret
push
jmp
dec
lds
lret
push
jo
sahf
and
popf
sub
push
pop
pop
or
cmp
mov
iret
sbb
push
mov
lods
sbbb
out
sub
pop
adc
addr16
fs
pop
dec
cmp
inc
mov
pop
lds
mov
mov
jg
inc
jne
leave
icebp
jae
jle
adc
push
in
repz
sub
xor
mov
mov
arpl
sub
cltd
mov
cmp
adc
es
ret
mov
pop
cmovo
cwtl
lahf
enter
xor
push
pop
push
bnd
cmp
dec
pop
push
mov
jae
mull
repnz
cmp
sbb
push
ret
popa
cmpsb
jmp
jbe
dec
sarb
cmp
jl
pop
jle
cmp
mov
fisubs
mov
jp
adc
ficoml
ja
xor
mov
mov
cmpsl
gs
sar
lock
push
jmp
scas
mov
aaa
sbb
sbb
or
fisttpl
mov
or
sub
pop
loope
es
insb
add
push
push
popf
push
pushfw
adc
aam
outsb
add
test
adc
incl
mov
inc
ret
lods
push
shrl
sbb
hlt
clc
cmp
frstor
xchg
aaa
cmp
pop
push
scas
add
repnz
xchg
mov
sbb
subl
push
adc
push
dec
loopne
fimull
mov
in
pop
pop
dec
mov
and
and
pop
cli
dec
and
pop
mov
lcall
lret
cld
pop
push
mov
mov
or
cli
and
add
popf
movsb
lcall
push
rorl
fs
cmpsb
mov
loopne
adc
scas
push
jge
xor
insb
lret
mov
rclb
maxps
inc
rcrb
cmpsb
rcll
mov
sub
je
fwait
xchg
sarb
ja
mov
or
iret
dec
mov
mov
adc
or
test
pop
aad
push
inc
lret
mov
jbe
bound
mov
popl
adcl
repnz
aas
dec
mov
and
sbb
pop
pop
jmp
jecxz
leave
ret
scas
push
jmp
inc
xchg
push
sub
mov
daa
aas
xchg
add
mov
xor
and
xchg
inc
and
add
shl
outsl
aaa
lds
mov
test
fldenv
loop
push
insb
add
sub
sbb
cmp
push
jb
clc
in
or
xor
mov
fadds
imul
nop
sub
lea
adc
cli
cmp
cmpl
adc
and
int3
aam
cmpsb
sbb
popf
std
jae
lahf
repnz
sbbb
cwtl
cwtl
sbb
mov
fidivrl
add
test
iret
dec
dec
ficoms
callw
rorb
add
xor
popa
lret
lods
mov
and
mov
xchg
lock
aaa
test
push
popf
mov
jae
pop
jmp
fidivs
pop
lods
jae
ret
dec
shll
xlat
xchg
stc
ja
fistpl
out
pop
lods
sub
mov
cmp
sbb
or
add
fcoms
mov
sbb
add
sbb
xor
jne
lods
test
xor
mov
imul
mov
pop
adc
sbb
in
fpatan
push
ljmp
std
scas
int
push
push
pop
out
pop
ja
aas
push
ffreep
jp
in
pusha
out
insb
sub
and
jo
mov
adc
add
push
jg
leave
xor
xchg
popa
fisubl
shll
lcall
call
xor
dec
sahf
inc
cmp
sbb
out
movsb
add
lods
dec
arpl
addl
adc
push
lcall
aas
pop
ja
push
ret
mov
xchg
dec
sub
add
sti
pushf
insl
test
xor
pop
cmp
mov
adc
sub
mov
cmp
mov
fwait
xchg
sti
subb
sbb
imul
sti
enter
sub
movsl
or
jecxz
inc
inc
adc
mov
in
push
fdivrs
aas
adc
mov
mov
pop
orb
pusha
jnp
leave
inc
pop
inc
js
push
dec
sub
xchg
mov
popa
es
testl
aam
mov
adc
fcomps
dec
fcompl
sbb
jo
push
in
sbb
gs
cmp
loope
test
add
imulb
gs
lret
mov
cvtps2pd
xor
jecxz
loopne
popa
lea
xlat
and
lret
mov
sbb
sti
pusha
fstpt
push
push
dec
test
stc
cs
int
dec
push
faddp
fstpl
cs
mov
out
popf
xorb
std
dec
inc
inc
insb
in
add
shr
stos
xchg
pop
int
sbb
repnz
fdivrl
and
clc
push
sub
test
pop
shrb
faddl
scas
mov
aad
xor
rcrb
inc
push
imul
enter
sbb
je
dec
sbb
inc
out
xchg
push
or
jmp
sub
nop
lcall
nop/reserved
sahf
push
sub
jp
mov
call
popa
mov
scas
push
pop
ljmp
push
ret
je
xor
jne
push
cmc
js
iret
cmpsl
jb
sbb
and
push
pop
jge
clc
push
js
rclb
popa
insb
push
cmpb
jecxz
fcmovnu
ret
ret
push
jae
out
mov
leave
scas
test
and
xchg
cwtl
bound
add
jmp
add
jo
jmp
sbb
mov
call
cs
or
adc
adc
ljmp
pop
dec
pusha
out
lahf
mov
sbb
push
or
lods
out
stos
adc
les
xorb
lret
mov
sub
mov
ja
icebp
idivb
jp
scas
adc
ja
jb
ljmp
xchg
xchg
ds
pushf
daa
bound
push
mov
jl
and
cs
lcall
idivl
push
test
loope
ljmp
and
pusha
cmp
push
sbb
push
push
shlb
icebp
js
jge
push
sbb
cmpsl
mov
jbe
test
ljmp
cmpsl
shr
mov
xor
test
cwtl
popa
pop
cmpsl
movsb
lods
adc
jae
insb
sub
cltd
pop
push
lock
iret
pcmpgtb
fidivrl
int
mov
pop
daa
dec
xor
loopne
mov
cmp
push
xlat
push
and
stos
push
sub
int3
lea
jp
add
mov
xor
cmpsb
in
sub
mov
adc
rcrl
push
push
sub
jb
int
pop
push
call
mov
or
sub
mov
jmp
inc
xchg
cs
xchg
jmp
mov
jmp
aam
loopne
mov
jmp
js
fptan
fdivrs
xlat
push
adc
cli
mov
iret
push
add
lods
sti
push
mov
add
xchg
xchg
loope
int
xchg
divb
dec
xor
lcall
sbb
mov
cmp
pop
or
mov
cli
lahf
xchg
sub
bound
std
jae
leave
outsl
pop
lods
and
test
mov
pop
cmp
arpl
mov
mov
dec
imul
insl
rcll
imul
dec
bound
jl
mov
aas
and
test
and
fidivl
push
dec
fwait
in
mov
xor
sahf
sub
add
ds
stos
xlat
mov
in
ss
cmpsb
les
push
stos
cmp
lods
das
and
test
push
mov
mov
outsb
nop
dec
mov
fwait
pop
lds
mov
mov
outsb
stos
or
pop
sub
int
mov
int3
lods
test
add
inc
mov
adcb
stos
test
stos
xchg
and
pop
adc
xchg
mov
xor
xor
icebp
inc
mov
push
fidivrs
jg
fstps
lock
inc
pop
les
sub
lods
insb
rcll
xchg
jle
sbb
jle
sub
cmpsl
int
fnstcw
std
push
fsubl
cmp
sbb
dec
xchg
inc
mov
sbb
shlb
pop
out
add
or
inc
pop
sti
test
fst
iret
jae
in
mov
test
ds
push
lods
or
xchg
sub
jne
and
xchg
pop
adc
rcrb
lock
scas
cmp
repnz
or
jns
pushf
or
sbb
aas
mov
imul
dec
subl
filds
cmp
mov
shl
mov
dec
insl
or
cmpsb
jmp
cmpsl
xchg
xchg
lcall
in
lods
mov
movsl
mov
inc
scas
mov
jecxz
test
daa
jg
cmp
cmp
jl
pop
out
add
xchg
mov
mov
jle
cld
bound
fimull
div
mov
je
mov
jae
jle
lock
imul
mov
call
lahf
cmp
les
lahf
add
mov
xor
mov
in
aas
mov
fld
pop
shrb
cli
pop
lds
xor
or
jne
add
inc
aam
jmp
aad
pop
out
sti
mov
dec
sub
dec
add
sub
and
xor
pop
das
idivl
movsl
iret
mov
scas
arpl
sub
cs
mov
mov
idivl
icebp
pop
mov
adcl
rcrb
mov
sub
and
icebp
cmpsb
gs
xor
ja
jle
mov
xor
xchg
pop
ror
addps
jbe
test
icebp
cmp
xchg
mov
insb
and
mov
mov
lcall
sbb
bound
mov
pop
jbe
inc
cs
mov
jp
add
jae
fldl
sub
pop
push
mov
out
mov
ljmp
or
clc
xchg
insl
rorb
les
push
imul
test
jg
sti
and
and
cs
jbe
stc
nop
vpshlb
mov
add
xchg
fcmove
nop
jb
mov
fists
cmp
in
dec
add
or
pop
and
pop
push
lret
pop
jbe
je
fmull
jae
sub
cmp
loop
fdivrp
pop
pop
lods
lods
inc
nop
mov
mov
mov
add
in
push
mov
arpl
lock
mov
mov
push
xchg
in
ljmp
movsl
xor
int
bound
adc
xor
ds
pop
jae
jge
fbstp
push
frstor
imul
lret
jge
mov
aaa
lods
aaa
lcall
mov
sbb
fdivl
jge
repnz
gs
push
mov
fimuls
popl
addb
aad
aaa
pop
or
scas
cmp
enter
outsb
mov
pop
rdpmc
shll
xorl
rorl
cwtl
inc
sub
add
mov
fwait
shlb
insb
popl
fbld
repz
pand
test
sbb
dec
adc
mov
lcall
lock
mov
xlat
push
sbb
push
lcall
add
or
lret
out
pop
mov
aam
adc
dec
idivl
js
sbb
dec
push
pop
and
mov
in
clc
loopne
adc
xchg
sbb
test
and
stc
cli
mov
push
scas
je
movsb
outsb
rcl
call
pop
icebp
adc
push
scas
out
outsl
pop
loopne
lods
aas
or
sarl
jecxz
lahf
xor
int
fidivl
cmc
ficoms
in
idivb
mov
xor
ds
jb
or
xchg
jne
in
xlat
mov
xor
mov
jae
insb
push
es
icebp
in
and
pop
push
or
mov
lcall
jecxz
fmulp
fsubrl
sbb
cltd
int3
loop
lds
push
jae
sbb
push
push
jle
or
mov
jle
rcrb
adc
divb
add
inc
movsb
push
mov
mov
mov
dec
mov
shlb
or
adc
mov
mov
movsb
dec
pop
pop
dec
or
mov
jnp
cmp
lret
icebp
imul
xor
lods
add
decl
dec
jge
repz
movsb
sbb
pushf
adcl
repnz
aas
mov
imull
mov
sub
add
xchg
mov
cltd
jb
dec
xor
cwtl
fldt
inc
or
rorb
cltd
jne
mov
popf
jl
outsl
mov
movsb
inc
or
cwtl
int
repz
mov
and
in
faddp
xorb
fnstenv
xor
push
mov
cmp
mov
lret
lods
out
pop
mov
ss
pop
mov
mov
loope
mov
pop
dec
xor
repnz
lret
fwait
ret
mov
adc
mov
pop
fcompl
and
inc
cwtl
arpl
stos
add
negb
mov
repz
jecxz
rol
xchg
shlb
push
xchg
fimuls
into
pop
and
mov
cli
mov
adc
sbb
iret
inc
dec
ffree
push
cmp
ja
cs
mov
jle
pop
cwtl
sub
lods
scas
aaa
out
cmp
or
aad
imul
ds
ja
mov
pop
mov
sub
xchg
loopne
inc
ret
fistpll
push
iret
negl
xlat
mov
arpl
or
mov
xchg
and
stos
xchg
push
inc
test
adc
sbbb
addr16
jmp
pop
outsb
int3
out
jg
push
pop
mov
jmp
in
mov
sub
add
imul
or
testb
inc
adc
std
lret
test
xor
pop
fwait
push
fcomps
movsl
sti
fbld
dec
jo
orl
pop
vpshlb
push
pop
clc
enter
push
scas
jb
add
mov
mov
mov
or
cmp
sbb
inc
jp
add
jecxz
xchg
xchg
or
add
ljmp
jae
adc
mov
sub
repz
xchg
int3
lret
push
mov
loopne
push
jae
popa
mov
gs
and
xor
in
jo
gs
into
call
pop
repnz
push
outsb
movswl
pop
jmp
adc
xchg
or
or
testb
push
repnz
das
jmp
scas
push
jb
jb
dec
cmp
mov
aam
nop
scas
push
in
sbb
aad
stos
je
out
les
fsubl
popf
pop
rolb
pop
mov
add
push
mov
or
ja
push
sub
popf
arpl
jecxz
into
adcl
ja
mov
inc
push
js
push
ffree
mov
sub
dec
sbb
subb
clc
fcomi
in
and
imul
out
rclb
xchg
lds
xchg
imul
lods
jge
fwait
mov
mov
das
and
and
stos
mov
adc
add
xchg
push
ret
rolb
fnstenv
cmp
xchg
ret
stos
adc
scas
imul
jmp
or
stos
push
das
int
lea
dec
xchg
movsl
pop
subl
or
jbe
cmc
outsb
es
negl
inc
xchg
pop
addl
out
nop
adc
inc
sbb
mov
add
imul
std
mov
out
aas
test
or
push
and
jb
and
jno
xor
cmp
mov
adcb
sbbl
jbe
xor
mov
xchg
mov
mov
lcall
lods
xor
xchg
cli
popa
in
mov
stc
loop
jge
dec
popa
lret
mov
cmp
jmp
jl
mov
lahf
or
cli
mov
int
ficoml
sub
inc
sub
cmp
gs
mov
data16
push
xor
adc
add
pop
jge
and
jl
loopne
push
xchg
dec
sub
mov
jnp
ljmp
stos
jo
clc
add
pop
sub
push
ret
mov
pop
pop
popa
push
sbbb
rolb
stos
dec
xchg
test
sbb
in
mov
cmp
pusha
xchg
sbb
sti
push
inc
push
aas
popa
and
into
mov
pop
pop
xchg
push
push
gs
pop
js
mov
add
xorl
sub
jge
dec
xchg
sbb
loope
enter
mov
mov
push
nop
aaa
add
in
int
push
test
mov
outsb
pop
int3
call
inc
das
jmp
outsl
movsb
imul
out
xchg
jg
lret
pusha
sub
cltd
gs
test
rolb
icebp
int3
pop
imul
dec
movsl
stc
lret
jno
or
imul
leave
in
xchg
sbb
and
push
xchg
and
xor
mov
pop
pop
adcb
or
repz
pusha
cmc
psrld
inc
in
adc
ret
cmc
xchg
popf
xchg
dec
xlat
cmpsb
mov
test
cmp
mov
jle
in
jne
arpl
cwtl
add
dec
shrb
cmp
imul
lods
inc
je
adc
icebp
iret
sti
jb
cmc
jle
dec
into
das
or
pushf
into
pop
jb
es
jg
mov
add
addr16
lahf
fnstsw
insb
push
push
xor
cs
jg
mov
icebp
lahf
mov
movb
mov
fcomps
ret
push
add
pop
mov
sub
mov
inc
and
ja
stos
dec
cmp
and
mov
mov
and
xchg
std
dec
jno
loopne
xlat
cli
or
pop
cmp
stos
loop
aas
xchg
push
pop
inc
shrl
xor
int
dec
clc
je
mov
jp
lock
lods
cmp
cmp
push
mov
sub
pop
pop
fsubl
pop
mul
js
enter
or
pop
cmp
test
imul
outsl
das
repnz
cli
mov
aam
xchg
hlt
stc
mov
int3
in
or
or
pop
mov
stos
sub
cs
in
das
test
add
mov
std
sub
lods
sahf
cwtl
lahf
sahf
sahf
ljmp
clc
pop
es
xchg
sbb
and
and
mov
jo
jne
outsl
ret
outsl
fld
mov
cmp
push
out
pop
mov
loope
adc
mov
pusha
lea
mov
lahf
xor
jmp
mov
outsb
lock
imulb
push
cs
aam
adc
mov
or
dec
int3
mov
dec
or
in
xor
inc
mov
jb
dec
cmc
lods
mov
aam
sbbl
stc
das
inc
fistl
pop
lcall
inc
add
aam
fwait
xor
dec
pusha
sbb
xchg
pusha
fisubrl
add
enter
mov
test
pop
enter
add
add
ret
ds
or
push
or
pop
gs
mov
jecxz
xchg
pusha
mov
pop
ret
pop
stos
cwtl
mov
pop
bound
scas
fmuls
inc
pusha
cmpsb
shll
les
addl
bound
push
mov
imul
cmpsl
stos
mov
push
jmp
pop
mov
push
lcall
sbb
xchg
shlb
sbb
pop
jmp
repz
sub
out
inc
push
mov
cli
push
and
mov
or
inc
fs
out
call
mov
int3
cld
mov
daa
or
mov
repz
clc
pushf
add
sub
test
jmp
xchg
jne
cmpl
or
cwtl
cmp
imul
daa
pop
jb
inc
mov
dec
loop
imul
xor
sub
lds
lret
mov
sbb
sub
dec
sahf
popa
in
or
cmpsl
cli
jb
icebp
testb
push
lock
leave
shlb
int
ds
dec
push
xchg
outsb
in
or
cwtl
jb
data16
roll
jo
or
subb
rolb
pusha
js
in
xchg
shrb
movb
fwait
mov
push
mov
ss
addr16
cmpsl
cmp
xorl
or
jg
xchg
call
mov
insb
addb
fisubrl
or
pop
arpl
inc
aad
shr
data16
out
dec
and
jle
js
sbb
aam
mov
mov
jmp
mov
cmpl
jo
sub
sub
jae
stos
mov
loope
lret
sub
xor
mov
imul
jae
arpl
fwait
xor
test
mov
lret
in
cmpsl
pushf
stos
jle
lcall
sbb
xchg
gs
pop
push
sti
scas
mov
xchg
mov
push
jnp
jbe
int
pop
add
jmp
popf
add
dec
adc
cmc
or
jno
or
dec
in
rcrb
ss
aam
push
or
imul
inc
test
push
sub
sbb
or
push
pop
cld
inc
dec
xchg
scas
pop
dec
sub
lret
and
bnd
xor
or
shr
sar
and
jne
test
fsubs
fs
cmp
rorl
xchg
cmp
dec
xor
sbb
push
and
sbb
lret
js
push
push
das
jecxz
into
inc
in
pop
jnp
popf
stc
insb
div
lret
cmp
dec
push
sub
push
push
data16
in
and
and
push
xor
pop
or
pop
lret
js
ljmp
inc
sub
in
das
xchg
push
stos
mov
enter
shll
mov
addr16
push
call
pop
mov
xchg
cwtl
xchg
sbbl
outsl
cmp
sbb
mov
call
inc
outsl
cmpsb
xchg
mov
test
lret
les
sub
lret
xchg
popf
in
xchg
push
int
sbb
xchg
mov
cmp
icebp
push
repz
push
call
xor
dec
push
pop
ficoms
jns
das
arpl
fcoms
fucomi
movb
xchg
adc
xlat
mov
mov
push
dec
mov
sbb
inc
cmpsl
addr16
jne
sub
mov
aad
lahf
pop
cld
jmp
fisttps
sahf
adc
pop
xchg
es
stos
and
push
xchg
out
mov
pop
cmp
lcall
or
mov
cmp
rorb
sbb
pop
cltd
es
xlat
in
hlt
lock
popf
xchg
jb
sub
cmpl
scas
mov
jge
cmp
adc
xchg
lret
mov
aaa
jg,pn
fcompl
in
addb
cmpsb
mov
stos
xor
push
call
stos
das
xchg
cmpsl
das
cltd
adc
jmp
mov
sbb
jbe
int
dec
jbe
pop
jo
out
out
jnp
test
xchg
fmuls
push
adc
iret
sbb
mov
jg
xchg
insl
push
kmovw
mov
cmp
shrl
mov
popa
or
mov
mov
inc
out
sub
aaa
sub
pusha
xchg
or
mov
mov
pop
xchg
daa
in
dec
icebp
les
fsubl
lods
add
cmp
das
mov
rclb
gs
or
jbe
test
sub
fbstp
and
dec
das
xor
and
mov
cmc
fdivl
filds
aaa
je
cmp
inc
scas
inc
call
cli
int
inc
and
dec
pop
sahf
subb
in
xor
inc
lahf
xor
or
xor
push
scas
ret
dec
push
adc
addb
jge
jl
inc
sub
pop
dec
jbe
loope
mov
out
xchg
sub
pusha
popf
or
rcl
push
pusha
stos
sub
dec
idivl
xor
movsl
xchg
lods
shlb
jae
fldt
leave
cmp
sar
scas
cld
pop
adc
ficompl
cltd
push
xchg
daa
cmp
mov
sub
jl
push
cmp
mov
jo
scas
mov
jmp
dec
pop
mov
mov
mov
xlat
sti
cmp
mov
mov
mov
imul
outsb
lds
lea
es
add
dec
daa
loop
jl
and
mov
nop
mov
flds
jnp
pop
or
mov
push
sbb
fsub
dec
xchg
mov
xchg
xchg
enter
jne
inc
xchg
sub
xchg
aam
dec
add
fs
or
mov
mov
scas
sti
adc
push
outsb
xor
cmp
push
xchg
push
int
dec
jp
das
mov
xchg
cwtl
cmc
test
jo
pop
pop
aam
stos
in
or
add
jg
pop
xor
rcl
inc
arpl
out
cmp
cmp
into
jmp
movb
mov
lret
daa
out
iret
into
jmp
sarl
subl
outsl
push
ret
or
fsts
dec
mov
pop
in
imul
jns
jle
cmp
xchg
call
push
dec
add
mov
repz
and
imul
xor
xor
sub
mov
xor
sbb
lret
adc
popa
iret
mov
add
xor
adc
les
shrb
imul
scas
hlt
sbb
sub
idivl
fldt
into
cmpb
aam
sub
stos
in
pop
test
xorb
mov
xchg
and
js
ret
fcoml
xchg
or
stos
or
sbb
inc
mov
jg
xor
addr16
ljmp
mov
fildll
inc
out
dec
xchg
dec
ja
ret
and
imul
push
ss
sar
fdivrl
adc
loopne
cs
mov
mov
sbb
fs
xor
movsl
mov
mov
fadd
sbb
or
mulb
in
or
inc
sub
xchg
ss
xchg
fnstsw
jo
pop
add
bound
and
pushf
mov
mov
shlb
mov
push
pop
jecxz
lahf
jno
jecxz
inc
leave
outsb
push
repnz
add
xor
cmp
or
jno
aam
sti
mov
sub
mov
sub
insl
nop
imul
imul
filds
mov
add
mov
add
lock
jge
sbb
fnsave
movsl
insb
rclb
xor
add
jl
xchg
pop
mov
sahf
repnz
test
pop
insl
xchg
aas
cmc
stos
or
pop
mov
jecxz
pop
mov
xor
mov
add
mov
hlt
mov
jne
nop
jno
loop
lock
mov
ret
jae
adc
nop
inc
jle
into
push
aaa
cli
mov
ffreep
inc
scas
sbb
mov
push
mov
mov
jbe
mov
aad
pop
sbb
cli
xchg
pop
xor
and
mov
sahf
outsl
sub
mov
test
sahf
sbb
cmc
xor
and
mov
sbb
fsubrp
sahf
outsl
add
xor
sahf
testb
xor
jo
aas
xchg
adc
call
in
lds
mov
dec
clc
mov
ret
lock
or
inc
out
and
jno
jle
not
mov
jge
and
add
je
inc
add
pop
cwtl
test
mov
add
pop
mov
out
cmp
jecxz
mov
add
pop
ljmp
pop
test
and
test
idivl
movsb
outsb
sbb
mov
hlt
cltd
lock
cmpsb
je
and
push
inc
rclb
cmp
rcll
fcomip
shr
repnz
mov
fcomp
and
lret
jnp
jb
stos
jl
jbe
mov
in
repz
rcll
into
dec
jbe
js
loopw
and
fstps
sbbb
or
add
mov
adc
mov
inc
pusha
xchg
push
sahf
mov
lahf
lea
pop
cmp
sti
xchg
mov
jnp
and
or
leave
push
xchg
nop
decl
add
and
daa
rolb
mov
xchg
popa
jmp
push
das
stos
mul
xor
pop
inc
in
adc
in
fwait
jge
cmp
inc
loop
fs
pop
fstps
jae
sti
sti
lods
xor
sahf
or
and
js
mov
fwait
pop
add
addr16
mov
int3
cmp
cmp
and
jno,pn
or
sbb
call
sbb
stc
and
xor
rcll
andl
xchg
pop
nop
sbb
or
sub
pop
jmp
lret
iret
hlt
fwait
lret
test
fcoms
cmc
mov
lahf
sub
add
mov
sub
fucomip
arpl
xor
pop
mov
pop
rcll
hlt
movsb
outsl
mov
mov
and
popa
cli
lret
jnp
cmpsb
insl
fnstcw
enter
rcll
cmc
iret
dec
adcl
imul
lret
adc
movsb
je
push
in
push
cmp
jge
mov
mov
sbb
test
mov
sbb
push
negl
imul
push
push
sbb
dec
and
stc
dec
data16
push
sbb
imul
push
ret
add
inc
cld
sbb
push
sbb
popf
push
sub
sbb
cld
sahf
aam
jbe
shll
pop
sbb
adc
jecxz
test
icebp
pop
inc
mov
std
push
lods
cmp
imul
fstl
orl
adc
cmp
cmpsb
test
ret
mov
xchg
xchg
mov
sarl
ljmp
pusha
mov
nop
sbb
out
test
jecxz
lfs
shlb
adc
into
inc
mov
xor
das
dec
repnz
sbb
bound
xchg
cmpsb
imul
xor
sbb
adc
jo
aas
pop
dec
mov
notl
cli
std
pushf
mov
stos
jp
mov
shrb
fsubrs
lock
pushf
lcall
fadds
push
pop
lret
push
add
xor
into
pop
mov
repnz
aam
mov
mov
jb
adc
sbb
leave
push
clc
pushf
push
pop
fnstsw
mov
inc
mov
rolb
aas
sbb
fsts
mov
xchg
iret
adc
sub
cmovle
jo
mov
jo
mov
inc
jb
adc
and
scas
pushl
ds
test
inc
int
idivb
fdivs
mov
push
cmp
outsb
pusha
ja
inc
sti
sbb
ss
jp
mov
pop
sub
loop
mov
fs
jns
sub
je
pop
xchg
cmp
lds
jbe
lea
scas
out
mov
mov
outsb
mov
lahf
loop
ljmp
xchg
sub
mov
stc
orl
stos
push
loope
sbb
xchg
xchg
scas
lcall
pop
adc
push
and
arpl
les
push
xchg
arpl
jecxz
cmp
sbb
pop
pop
je
ljmp
push
movsb
push
cs
push
call
pop
ljmp
ja
xchg
movb
into
orps
clc
pop
push
mov
test
mov
dec
and
dec
notb
jecxz
push
add
repz
out
scas
movsb
mov
xchg
bnd
je
sbb
push
int3
pop
pop
daa
filds
mov
icebp
mov
mov
iret
cs
in
repz
aad
cmp
add
inc
dec
and
push
nop
push
sti
loopne
inc
adc
jg
fstp
mov
int3
xlat
sub
outsb
data16
and
and
mov
jae
mov
push
cmpsl
adc
imul
adc
inc
ret
xor
loop
bound
fs
int
mov
push
loopne
icebp
mov
out
xor
lods
stc
inc
dec
data16
call
jg
xor
fcompl
dec
sub
add
sbb
mov
fisubrs
ror
push
push
mov
rcpps
sub
imul
xor
or
inc
inc
jne
ret
scas
xor
lods
popf
xchg
inc
mov
xlat
or
dec
jb
cmc
mov
es
inc
or
loop
cmp
ss
lods
ffreep
out
out
xor
jbe
xchg
sub
dec
popf
insb
out
push
lods
and
and
adc
jmp
rolb
negb
insb
inc
sbb
test
mov
sub
into
push
fldenv
dec
std
cmp
sbb
xlat
cmp
adc
cmp
jo
pushf
sub
mov
popa
fs
pop
leave
scas
add
xor
cld
loop
sahf
cmp
mov
add
add
fwait
js
int3
sahf
xlat
jo
and
push
sub
movsl
jns
les
xchg
mov
dec
jne
push
inc
pop
xchg
sbb
sub
mov
xchg
les
push
inc
and
sbb
cmc
xchg
push
lea
or
jge
xchg
test
adc
push
push
sbb
in
pushf
clc
js
insl
lock
leave
outsl
lea
cmp
in
std
mov
xchg
mov
inc
dec
movsl
xor
mov
push
xor
mov
mov
sti
psrad
sub
repnz
push
sbb
insb
and
dec
and
mov
scas
inc
in
imul
xor
stos
inc
daa
mov
mov
lret
mov
pusha
lahf
sub
jge
imul
sarl
aas
dec
inc
sub
ja
daa
out
mul
jp
rorl
cmpsb
mov
mov
outsb
aam
push
scas
xor
mov
cmpsl
pusha
cltd
push
repnz
test
or
xchg
or
stos
pop
dec
inc
sbb
xchg
xor
cmp
xor
adc
in
inc
in
fnsave
push
or
scas
and
insb
inc
mov
lods
sub
xlat
mov
mov
mov
xchg
inc
in
pop
in
push
ja
or
mov
int
les
test
mov
int3
jmp
cwtl
adc
movsl
sub
or
jae
mov
insl
fiadds
mov
mov
mov
and
sbb
jmp
movsb
dec
dec
add
jle
or
sub
jo
ret
nop
lahf
mov
push
daa
shr
xor
cmpsb
or
adc
jno,pt
lds
ret
push
mov
adc
add
sub
pop
or
ss
push
xchg
addr16
xchg
stos
mov
call
bound
fisubs
out
loope
pop
mov
out
jo
inc
add
out
add
inc
out
sti
cwtl
movsb
pop
mov
push
outsl
mov
std
fildll
movsl
dec
psubsb
popf
jns
mov
pop
xor
rcrl
cmp
lcall
inc
call
or
shrb
dec
xchg
int3
sbb
lret
popa
fstp
xor
leave
fwait
mull
mov
mov
repz
xchg
rcll
shr
loopne
push
xchg
jg
ljmp
jnp
mov
insb
ret
int
dec
cmp
je
or
movsb
aaa
or
xchg
dec
push
sti
cmp
push
mov
xchg
aad
std
push
in
in
xchg
mov
cmp
cmpb
xchg
mov
lock
jge
dec
scas
adc
movsb
fcmovne
data16
mov
pop
testl
xchg
mov
arpl
push
cmp
and
and
xchg
sahf
pop
jbe
shrl
inc
mov
and
fisubrs
pop
inc
rcrb
imulb
jge
dec
xchg
xchg
dec
push
insb
mov
cmc
ficompl
dec
xchg
add
add
lahf
call
jp
fsts
out
mov
mov
sbb
or
in
test
and
out
hlt
cmp
rol
test
add
pop
ret
mov
lahf
jmp
jge
mov
out
fmul
adc
jne
jmp
out
testl
out
les
adc
ret
jge
test
sub
or
xor
xchg
inc
add
dec
mov
stc
out
pop
mov
ljmp
xlat
push
ljmp
jp
test
push
outsl
mov
ja
jns
shl
in
mov
fs
cmpsb
jge
dec
xchg
xchg
aas
movsl
xchg
popa
jp
jg
mov
cmp
fcomps
cmpsl
cltd
jne
imul
dec
addb
xchg
sub
leave
adc
into
and
adcb
lods
popa
push
mov
mov
cmp
insl
add
sbbb
lock
loopne
mov
clc
mov
repz
mov
adc
jnp
pop
adc
jno,pt
scas
mov
mov
loop
dec
sub
mov
pusha
xlat
cwtl
test
repz
shlb
push
pusha
pop
cs
jg
sbb
aas
in
push
mov
faddl
jmp
xchg
sbb
xor
repz
lods
cwtl
dec
jmp
leave
push
call
sarb
sarb
subl
ficompl
jg
pop
pop
loopne
ds
test
cmp
ja
mov
nop
xchg
push
jecxz
jmp
or
xchg
lahf
push
js
bound
mov
cwtl
push
and
push
movsb
and
push
xor
fiadds
rcrb
jecxz
or
inc
in
mov
aad
cmp
or
test
pop
dec
xor
and
out
and
ja
aad
inc
not
lcall
sahf
sub
fidivrl
inc
ss
ds
stc
sub
lcall
pop
adc
out
cmpsl
cmp
into
adcb
popf
ret
sahf
jl
cmpsb
xor
shll
data16
cwtl
add
loop
hlt
ret
jns
sbb
dec
arpl
repnz
cld
push
adc
jg
jbe
fdiv
sbb
clc
xor
cmp
call
mul
xor
inc
outsb
cs
not
mov
stos
pushf
pusha
xchg
testl
movl
gs
mov
nop
ret
popa
cmp
dec
mov
mov
out
pop
rcl
inc
out
rolb
push
int3
push
mov
ss
stos
cvtpi2ps
sahf
leave
jg
xchg
out
repnz
mov
fimuls
pop
cmc
sbb
pusha
ds
mov
lods
cli
mov
rorl
rcrb
ss
sub
fiaddl
jae
and
out
je
mov
in
stos
fsts
mov
out
sbb
sbb
aaa
mov
cld
inc
movsb
hlt
rolb
fstps
std
xor
imul
mov
lahf
sbb
sub
out
xchg
sbb
jmp
xor
and
enter
jecxz
pusha
add
ficomps
xlat
mov
fistl
movsl
clc
mov
inc
aaa
and
dec
adc
cmpsb
scas
push
push
inc
inc
mov
adc
add
test
popf
loopne
or
stc
xchg
jle
shrb
out
sub
sbb
ljmp
popf
fwait
dec
push
inc
fsub
xor
xchg
aad
repz
scas
cmpsl
pusha
ret
cmpb
adc
data16
mov
fnstsw
mov
test
stc
mov
std
test
jmp
jl
pop
sbb
or
and
lret
fimuls
mov
mov
pop
loopne
cmp
sbb
test
insl
in
lret
aaa
fs
jo
dec
adc
adc
xor
pushf
inc
mov
mov
jle
and
pop
jnp
nop
out
inc
mov
shll
shrl
mov
cs
mov
mov
xchg
daa
pusha
cwtl
scas
dec
or
push
rcr
dec
nop
adc
sbb
divb
out
push
call
inc
cltd
negl
sbb
movsb
cmc
mov
sbb
test
lods
mov
int3
lods
mov
add
int
lcall
add
cmc
sbb
and
pusha
or
or
add
push
sbb
fcomps
push
call
jge
ss
cmp
and
int
incl
scas
sbb
dec
sub
mov
ret
push
shrb
ja
xor
out
stos
dec
and
incl
cmp
xchg
ljmp
xor
inc
inc
xchg
mov
pop
orl
gs
cwtl
lods
xor
xchg
hlt
in
cs
insl
daa
shl
dec
lret
mov
inc
jge
lahf
mov
pause
mov
cmc
mov
repnz
push
pop
pop
push
mov
sub
add
sbbb
xor
or
add
sub
and
jmp
mov
sbb
stos
scas
arpl
pushl
shlb
sbb
xchg
lea
lret
es
sub
and
adc
xor
hlt
or
or
das
sahf
jp
icebp
pmaddwd
add
cld
jno
mov
xchg
xlat
dec
or
movsl
pop
xchg
shll
xchg
lret
jno
mov
out
inc
jge
pushl
mov
scas
pop
xor
adc
test
or
mov
addr16
roll
js
cltd
insl
subb
or
std
insb
icebp
and
std
jmp
mov
jmp
dec
daa
les
cs
into
scas
data16
adc
frstor
and
jmp
jae
outsb
fdivs
movsb
aad
out
sbb
mov
in
sbb
adc
add
xor
xor
adc
lahf
hlt
xor
jns
lret
adc
dec
aam
inc
leave
sbb
popl
mov
or
mov
jge
add
mov
jmp
inc
dec
notb
roll
aad
sarb
jge
adcl
cmc
and
sbb
xor
sub
clc
cmp
mov
inc
fcmovb
pop
pop
stc
cli
sti
mov
mov
test
cmpb
scas
clc
mov
addb
loopne
or
add
push
ret
scas
sbb
imul
frstor
mov
xchg
add
rorl
adc
pop
cmpsl
loope
cmp
ficoms
push
div
js
xchg
inc
xchg
popl
jle
or
scas
fmuls
in
cli
dec
pushf
sub
sar
rcll
sbb
mov
or
mov
mov
xor
lods
rcrl
cmp
mov
out
mov
test
mov
jne
clc
inc
xchg
pusha
iret
ret
lock
mov
add
cmp
ret
addr16
adc
pop
cmpsb
xor
adc
pop
inc
mov
pop
mov
push
inc
mov
fnstcw
sub
andb
mov
xorb
testb
arpl
loope
jmp
push
sbb
cltd
lahf
int
sbb
mov
add
jecxz
pusha
sbb
push
leave
test
mov
inc
lds
je
jl
push
mov
int
aad
shld
sbb
lret
push
xor
aad
push
sbb
lds
mov
xor
fsub
cli
jmp
mov
push
sbb
mov
push
and
sbb
nop
pop
out
xlat
aas
sbb
sbb
jae
mov
pop
pop
pop
inc
adc
imul
cmp
sub
push
push
xchg
outsl
dec
cmp
lahf
pop
xchg
sub
inc
xor
or
sahf
std
sub
sub
add
xor
xor
push
fsubrp
inc
test
stos
stos
push
imul
jo
jbe
call
mov
ja
les
mov
inc
or
mov
add
in
inc
inc
xchg
mov
push
fwait
inc
sbb
dec
icebp
push
push
mov
call
into
pushf
xor
rcll
jecxz
jge
inc
insl
dec
js
lret
pop
fcoml
mov
out
je
sub
cltd
mov
clc
and
aam
dec
add
jg
in
gs
bound
push
jmp
adc
dec
clc
mov
xchg
xor
scas
ljmp
pop
mov
dec
mov
sbb
mov
xchg
das
sarl
aam
inc
insb
lea
push
repz
mov
xchg
ja
js
inc
push
mov
and
jne
push
adc
adc
nop
ja
sub
push
test
push
sbb
sub
sbb
fcomi
fs
xchg
inc
outsl
cmpl
sub
mov
pop
fmuls
repz
pushf
push
inc
add
out
cmp
cmp
int
jae
shll
add
and
pop
ret
pop
cs
pop
mov
add
mov
mov
sub
jb
xor
mov
mov
or
jae
popa
mov
testb
repnz
repz
jbe
mov
nop
push
pushf
mov
push
mov
lret
sbb
into
sbb
lock
cmp
xchg
add
mov
bound
xor
jge
add
test
and
cwtl
dec
pop
in
into
shl
jg
lods
dec
xor
js
pop
in
mov
dec
dec
jmp
xchg
cmc
movsl
shrb
ret
push
mov
aam
jmp
daa
fnstenv
es
hlt
xchg
xor
lret
inc
rorb
pop
sub
adc
lds
cwtl
lret
add
ja
stc
aam
getsec
out
outsb
lcall
pushf
out
add
ds
xchg
sub
dec
inc
inc
out
int3
cmpsl
loop
and
loop
stos
nop
dec
test
pop
bound
cwtl
pop
inc
push
push
jns
pop
push
fdivrl
fwait
push
pop
punpcklwd
xchg
and
dec
stc
data16
dec
cmp
fimuls
sbb
jnp
or
test
in
ss
fisubrs
cmpsb
xor
jl
push
rcrb
loop
aad
sub
lods
cmp
hlt
jl
pop
fs
fwait
lret
dec
stc
cltd
mov
out
sarb
insl
dec
mov
fs
dec
or
mov
cld
dec
or
sbb
imul
stc
sbb
pop
stc
aaa
cmovbe
nop
push
inc
aaa
dec
push
mov
push
stos
loope
out
stc
mov
fadds
or
movsl
xchg
mov
xchg
xchg
pop
shlb
fmull
push
jns
in
scas
int3
lods
test
inc
hlt
mov
mov
mov
roll
out
or
scas
jne
sbb
subb
cmc
clc
test
ds
les
pop
in
insl
adc
push
jmp
and
mov
push
add
out
cmpsl
mov
out
mov
pop
pop
pusha
pusha
push
mov
push
out
or
ljmp
mov
pop
sbb
and
jns
shlb
aam
outsl
das
push
mov
movsb
subb
jnp
add
int3
xchg
in
andb
nop
pop
mov
sarl
addl
xlat
mov
roll
ret
lcall
dec
adc
loop
xchg
xchg
movsb
xchg
ror
mov
push
lds
movsl
notb
mov
pop
rorb
dec
loop
daa
mov
sbb
sbbl
icebp
push
test
cmp
mov
jecxz
and
jg
add
test
jmp
sti
inc
push
imul
mov
mov
fstpl
sbb
mov
mov
lahf
hlt
lds
jnp
push
pop
cld
shlb
mov
push
cwtl
mov
xchg
xor
xor
jl
xchg
insb
call
jmp
adcb
lret
dec
stc
fistpl
adc
mov
push
dec
and
testl
ror
mov
sahf
jbe
daa
mov
scas
idivb
mov
shlb
xor
adc
sahf
out
notb
int
inc
cmp
outsl
cmpsl
xchg
cld
push
xlat
mov
aaa
lret
push
dec
jmp
xchg
rcr
shlb
pop
pop
repz
mov
ror
push
sbb
jge
sbb
cld
jae
pop
push
mov
adc
lret
nop
test
cld
cwtl
mov
ret
pop
and
jno
pop
sahf
pop
and
push
sub
cld
pop
test
pop
pop
in
dec
test
jp
add
insl
js
pop
scas
in
inc
push
push
mov
mov
int
test
aas
add
pop
scas
out
push
cmp
mov
into
aad
loope
sub
fs
pop
mov
into
inc
push
xlat
mov
jp
and
out
sarb
jmp
mov
test
mov
xchg
xor
shl
decl
aad
xchg
outsb
cmp
test
or
mov
pop
ror
daa
rol
popa
popa
jnp
mov
loop
je
cmp
mov
cwtl
mov
pop
mov
sbbl
fisubl
lods
sbb
xor
xchg
xchg
repnz
mov
add
add
enter
les
cli
and
cwtl
mov
dec
adc
fistl
xchg
jge
inc
jnp
mov
jno
jbe
arpl
mov
mov
lock
cmp
push
pminub
dec
enter
lahf
inc
sti
mov
cmp
push
pusha
and
lea
mov
or
add
adcb
dec
ljmp
rclb
enter
sbb
xchg
pop
sbb
stos
sbb
fsubrl
push
pop
dec
dec
leave
push
in
pop
inc
xorl
add
loopne
scas
xchg
ja
scas
or
cli
jl
sbb
rcll
ljmp
sub
mov
and
in
xchg
ret
aaa
test
bound
xchg
scas
inc
mov
mul
mov
push
dec
rcrl
sub
aas
push
or
daa
fldenv
icebp
cli
mov
cmpsl
jbe
faddl
adc
data16
xor
mov
jp
adc
cmp
or
jle
ljmp
jp
popf
cmc
mov
inc
mov
rep
repnz
pop
in
rol
mov
lret
inc
push
mov
lret
fnstsw
dec
mov
push
aad
push
sbb
cld
loope
dec
icebp
adc
outsb
mov
xchg
push
pop
mov
mov
xchg
sbb
push
rcrl
test
mov
inc
xchg
in
adc
movsb
xor
gs
lcall
jnp
popa
pop
add
pushl
cmp
xor
or
add
sub
int
sti
imul
mov
adc
in
xchg
inc
inc
push
jge
mov
rclb
adc
ret
outsl
lret
ret
or
pop
push
aam
inc
push
xor
push
inc
adc
add
ror
in
loopne
pop
dec
adc
jp
and
lds
psubusb
mov
data16
jmp
inc
xchg
add
mov
lea
fidivrl
dec
jecxz
pop
lea
aaa
xchg
push
jmp
das
fsubs
data16
adc
adc
jp
insb
jae
les
cmpsl
dec
cld
xchg
repnz
sbb
xchg
mov
mov
scas
mov
jnp
call
jp
mov
mov
add
jecxz
fwait
xor
jne
xchg
push
inc
ret
xchg
dec
iret
mov
inc
inc
cmp
insl
and
add
je
lods
sar
cmp
cld
stos
aad
adc
mov
inc
js
scas
push
pop
mov
int
pop
cmp
inc
pusha
jnp
cmpsb
iret
gs
in
mov
sahf
stos
loopne
dec
mov
out
mov
stc
lret
sub
in
ljmp
xor
jne
sub
pop
push
push
push
lods
dec
shll
mov
push
fcoms
cmc
add
mov
leave
testl
pop
sbb
mov
or
pop
sub
dec
roll
cmp
push
pop
stc
aaa
test
aam
xchg
inc
aas
and
mov
es
jbe
adc
jmp
loop
pop
add
add
jle
mov
loope
loop
mov
in
frstor
movl
arpl
daa
std
insb
cmc
mov
insb
js
push
inc
push
cmp
dec
test
lods
inc
sub
fisttpll
push
push
pop
cwtl
scas
inc
scas
lock
push
mov
sbb
lcall
or
scas
rcrb
push
cmc
int3
dec
rolb
movsb
dec
in
gs
mov
push
and
fstl
cltd
fldt
push
dec
mov
int
cmpsb
ret
jg
push
add
rcrb
mov
in
ret
sahf
insb
cwtl
push
ret
addr16
icebp
pop
push
ficomps
aad
orb
outsl
jno
gs
imul
loopne
mov
xchg
stos
insb
pop
and
sbb
repnz
es
les
jb
xor
mov
clc
lret
fimull
cltd
xchg
fnstsw
test
pop
inc
add
enter
adc
mov
ljmp
add
add
xlat
jnp
adc
add
fcomps
shlb
sahf
mov
pop
enter
dec
cli
movsb
andb
mov
xor
xchg
stos
cltd
lret
or
out
mov
mov
add
pop
xchg
sbb
inc
pop
and
jo
jo
mov
sub
mov
out
icebp
cltd
jo
cwtl
xchg
push
out
shld
fbstp
repz
add
cmc
mov
xor
sub
mov
dec
xchg
scas
pop
call
or
push
lds
enter
les
jmp
stos
or
mov
xchg
test
mov
sbb
add
or
fnstsw
cmp
test
stc
mov
lods
pop
jns
adc
insl
sub
mov
mov
inc
lods
mov
dec
sub
outsb
aam
lret
out
xchg
inc
and
cmp
fistpll
cmpsl
pop
add
mov
std
lods
pushl
xchg
mov
jge
xchg
das
mulb
mov
out
push
test
dec
and
pushf
sbb
mov
push
jp
add
mov
and
dec
pop
push
testl
sbb
icebp
js
cmp
fdivrs
dec
jl
out
fsubl
aad
jg
jecxz
dec
popa
repnz
xchg
clc
aad
xor
pop
cmp
and
pop
push
mov
cmp
cmp
jo
fcmovnu
jge
mov
enter
int
sbb
xchg
pushf
xlat
test
xor
int
jne
enter
ja
jmp
mov
xchg
jae
pop
sarb
xchg
sub
loopne
cmp
pusha
mov
pop
out
cs
mov
cmp
adc
mov
mov
jbe
dec
dec
icebp
shr
fstps
xlat
aam
xorb
and
sbb
mov
adc
push
das
jle
xor
aas
in
adc
out
ret
push
in
lahf
jne
mov
lods
loop
mov
jne
mov
xchg
aam
add
lret
pop
js
cmc
test
or
mov
sub
jbe
sbb
cmp
xchg
mov
adc
jne
mov
and
add
sbb
sub
and
jg
aad
jp
rcrb
shl
insl
mov
adc
stc
into
pushl
incb
and
dec
int
adc
dec
xchg
mov
pop
cmp
xchg
int
lahf
dec
cmpsl
push
xor
mov
das
imul
cld
lret
aam
cmp
mov
rcll
push
ret
test
ja
inc
mov
mov
test
xor
stos
mov
test
jae
data16
stc
sahf
std
inc
xor
dec
aas
pop
push
mov
jecxz
es
inc
mov
inc
push
out
or
dec
push
xor
ret
int
adc
adc
mov
mov
imull
and
add
cltd
cwtl
cmpsl
xor
push
andb
and
push
cmp
push
fstl
adc
lret
ror
push
jecxz
clc
ss
add
jmp
cmp
fcomi
repnz
mov
outsl
mov
jae
push
fprem1
inc
xor
and
fnstsw
dec
pop
lcall
jmp
xchg
fimuls
pop
cmpsb
imul
sub
adc
xchg
pop
lock
in
hlt
mov
or
cmp
rorb
cltd
add
sti
push
outsb
jno
xchg
ret
rcrl
jnp
xchg
xchg
inc
inc
push
push
cmpsb
and
imulb
mov
push
fwait
std
cmp
aad
cmc
push
cmp
mov
or
loopne
add
push
outsl
orl
pop
ja
mov
outsb
and
pop
mov
fs
cmp
arpl
iret
or
xor
fmul
add
jle
xor
sahf
lcall
mov
xchg
sbb
pop
rorb
pop
push
cmp
mov
jmp
out
test
fnstcw
add
inc
insb
or
push
push
dec
sbb
xchg
mov
out
add
jg
outsb
add
pop
mov
xchg
outsl
imul
adc
scas
sti
sbb
sarb
data16
mov
jg
sub
mov
enter
dec
out
sarl
and
lea
sub
mov
ret
psrlw
outsb
add
test
jns
push
jg
jle
add
movsl
sarl
fwait
pop
sbb
icebp
dec
push
addr16
jns
std
xor
fdivrl
hlt
mov
mov
lcall
fdiv
fwait
inc
stc
mov
sub
in
rcll
and
mov
insl
xchg
push
lods
jno
lret
je
jl
mov
rcll
inc
dec
lea
add
shll
dec
mov
gs
jbe
xor
inc
mov
outsb
xchg
sbb
sarl
mov
lods
fcompl
shl
xchg
rcl
cmp
sbbl
rcl
lock
ret
rolb
movsl
sub
test
sbb
test
sbb
adc
jp
data16
cmp
sbb
xchg
adc
mov
xchg
push
lahf
fwait
shll
or
mov
push
in
mov
xor
xor
aaa
dec
je
push
xor
mov
pushf
lea
in
cs
icebp
in
jg
pop
jmpw
pop
pop
scas
test
xchg
pop
repnz
rcrb
in
ret
xchg
jbe
jo
dec
clc
push
jo
out
call
adc
hlt
xchg
mov
add
push
fcoms
aad
jnp
mov
notb
js
inc
stos
fiadds
jns
jbe
lods
orb
rclb
xor
xchg
pusha
jae
setb
dec
inc
sahf
mov
sbb
mov
add
adcb
faddp
repz
mov
das
sbbb
push
inc
sub
mov
inc
call
xor
out
inc
out
sbb
xor
jnp
mov
stos
mov
push
jp
mov
adc
jp
repnz
inc
sbb
mov
dec
les
mov
mov
push
mov
pop
pop
pop
outsb
loop
dec
sti
mov
jno
mov
or
dec
inc
mov
wbinvd
popf
jo
lds
gs
popf
add
das
out
mov
decl
popa
pop
ss
outsl
push
push
adc
xlat
shlb
lret
push
sarb
inc
loope
cli
cmp
insl
sub
xor
loopne
xor
popf
lcall
adc
and
hlt
jo
xlat
loopne
stos
sbbl
inc
cmp
or
add
icebp
cmp
fldl
dec
adc
push
mov
pop
ret
xchg
pop
gs
mov
loopne
xor
enter
jecxz
push
dec
icebp
cmpsl
sbbb
sbb
dec
push
test
fincstp
cld
in
aaa
mov
xor
cmp
das
xor
cmpsb
imul
inc
jae
fimull
adc
sbb
pop
lahf
and
xchg
xchg
ds
adc
fstl
fwait
ja
in
scas
ficoml
ds
and
push
pop
addr16
mov
xchg
jo
out
daa
and
jo
push
xor
pop
out
jp
mov
xchg
fimuls
int
push
and
sub
lea
fwait
jne
fisttpl
addr16
and
adcb
jns
lret
and
in
lods
jae
loope
mov
pop
rolb
mov
test
data16
mov
jno
in
iret
lcall
push
jmp
test
push
xchg
add
mov
mov
sbb
rcrb
adc
dec
fisubs
fmulp
pop
leave
mov
mov
int
daa
stc
xor
push
fdivs
out
aaa
adc
xchg
enter
pop
jae
nop
jmp
lar
push
scas
loope
loope
cli
cmp
pop
xchg
cmp
sti
sbb
push
dec
xorl
push
jge
xor
test
subb
mov
jmp
call
test
mov
and
mov
sbb
adc
mov
jo
cmp
fdivp
fimull
mov
xor
mov
decb
push
sbb
push
mov
movsl
jmp
je
inc
mov
ret
arpl
mov
xor
pop
in
stos
cmpsl
dec
push
fcoml
inc
lock
dec
add
cmp
outsl
pop
dec
test
sarb
arpl
mov
inc
dec
sbb
push
mov
xchg
aas
push
lea
les
cmp
xchg
inc
sub
pushf
inc
mov
iret
movsl
cmpsl
jo
test
xchg
xchg
jb
mov
cmp
inc
test
lea
mov
subl
push
mov
dec
xchg
inc
and
or
xchg
test
add
addb
mov
sbb
adc
enter
test
adc
push
loopne
xchg
adc
push
jno
adcl
inc
sahf
aam
sbb
aad
sbb
lret
add
rcll
pushf
lods
jns
ret
sub
in
mov
mov
inc
fcmovu
push
mov
mov
lods
mov
pop
and
dec
push
movsb
mov
call
ja
add
sbb
sbb
mov
jbe
sub
imul
jp
mov
das
outsl
das
sbb
or
xchg
pop
int
pop
inc
or
in
mov
mov
ss
or
mov
popa
lahf
add
es
pop
dec
movsl
mov
aas
mov
cmpsb
jge
dec
dec
or
rorb
lahf
jg
insl
xchg
xlat
sti
test
sub
ja
popa
dec
and
xchg
mov
inc
mov
nop
mov
xchg
jp
jo
xchg
dec
lcall
jp
into
aam
xor
mov
push
movsb
jle
rcll
loop
bound
mov
mov
xchg
cmpsl
mov
out
cltd
lahf
imul
mov
pushf
mov
ss
pop
stos
push
add
pop
add
mov
lods
jmp
call
push
stos
xchg
xchg
add
push
outsl
mov
int
ds
push
cmc
dec
xorl
scas
mov
sub
loopne
nop
fdivrs
mov
sub
sub
sbb
in
es
mov
sub
push
stc
sub
pop
lods
imul
iret
cmp
add
xchg
and
cli
outsl
adc
shrb
mov
shll
aam
xor
or
test
and
pop
add
xor
cmp
dec
int3
inc
and
out
cmp
fisubrs
xor
jnp
add
test
jbe
test
clc
pusha
xchg
push
add
jnp
sub
je
adc
jle
mov
subb
cs
test
repz
test
movsl
sub
cltd
adc
es
ret
aas
mov
xchg
in
jge
pop
in
pop
sub
inc
lahf
xor
mov
addr16
pop
mov
jno
repz
jno
add
or
fst
mov
inc
dec
fstpt
and
loop
subl
push
mov
fwait
inc
mov
outsb
xor
xchg
jne
sbb
mov
jae
cmp
cld
mov
arpl
xchg
das
enter
dec
mov
lods
sarb
mov
loopne
adc
mov
pop
hlt
xchg
xchg
dec
adc
pop
jmp
xchg
cmp
cmpsb
xchg
jbe
out
data16
mov
jbe
push
sti
xchg
insb
in
cmpl
orl
mov
xchg
int3
push
inc
or
lret
scas
ficoms
add
out
or
inc
lock
adc
lods
lcall
push
sbb
outsb
pop
ja
sub
stc
insl
mov
or
jb
push
jnp
xchg
in
fiaddl
fstpt
push
sub
mov
sub
fidivs
in
inc
inc
push
sub
fwait
les
lret
or
pushl
clc
popf
out
mov
out
adc
in
ret
in
adcl
scas
out
xor
pop
in
test
sub
std
or
mov
dec
xchg
pop
pusha
mov
data16
mov
mov
push
clc
in
cmp
movsl
shufps
pop
or
push
mov
sub
sbb
fcmove
pop
lea
and
jbe
mov
or
popa
out
or
jp
lcall
into
jmp
cli
push
add
das
adc
dec
loop
xchg
cs
lret
lahf
mov
test
dec
insb
enter
ja
mov
mov
mov
jns
xchg
aaa
rorb
mov
xchg
popf
lret
add
or
incb
mov
loopne
inc
sbb
cwtl
or
mov
pushf
mov
jl
jmp
cmp
xor
xor
sbb
cli
push
mov
pop
push
cmpsb
pop
movsb
xchg
adc
or
dec
sahf
push
gs
cli
sbb
xchg
xchg
pop
iret
orl
aam
jno
repz
scas
adc
daa
bound
in
and
idiv
or
hlt
popa
or
xor
cmp
and
lcall
sub
aas
sub
inc
inc
and
loopne
push
sub
ja
inc
int3
xchg
push
jno
pop
popa
inc
xchg
out
aaa
mov
fldpi
sbb
adc
mov
hlt
jbe
jo
dec
cmp
xchg
mov
jae
adc
mov
incb
push
mov
loop
cmp
int
jl
lret
imul
jp
pop
fldenv
adc
cmp
dec
out
inc
mov
xlat
jne
pop
jbe
shr
jno
cmpsb
lret
or
outsb
ficompl
mov
xchg
pop
and
dec
fwait
pop
sbb
lret
sarb
ret
push
pop
push
stc
ljmp
in
loope
lods
insb
pop
mov
lock
xchg
sub
cli
outsb
ljmp
push
xor
mov
xor
mov
jno
adc
pop
cmp
mov
sbb
aad
shr
clc
call
pop
popa
scas
sbb
mov
sbb
rcr
mov
cmpsl
mov
or
adc
rcr
push
int3
jecxz
out
mov
or
push
and
andl
mov
dec
dec
xchg
fsts
jo
xchg
push
ds
mov
sbb
repnz
into
pop
repz
imul
push
or
jle
pop
arpl
loopne
jmp
sub
shrb
into
cmp
out
inc
lret
cmpsl
imul
or
mov
xchg
xor
adcb
rcr
sub
xorl
lea
repnz
fwait
mov
das
xor
fwait
pop
mov
jecxz
stos
sub
mov
xchg
pusha
and
fnsave
test
mov
ret
fninit
aas
loopew
ret
sbb
sbb
cmc
push
idivl
fldt
adc
orb
fimull
push
into
dec
loope
mulb
gs
fdivr
enter
fcmove
push
xchg
add
testb
add
subb
fsubr
imul
push
aas
mov
inc
jp
and
pop
inc
xchg
shll
jge
push
sahf
and
shlb
mov
cs
sub
mov
in
stc
push
cli
loop
sbb
scas
fwait
test
mov
mov
mov
xchg
and
cli
push
cld
mov
push
xchg
mov
lret
adc
mov
stos
cs
out
dec
bound
adc
js
inc
incb
mov
rolb
outsb
sarb
xor
jle
inc
fsubrs
dec
stos
cmp
or
mov
ret
push
sub
lmsw
addl
outsl
shl
mov
pop
xchg
mov
or
loope
push
jge
pushf
and
std
filds
sti
jo
inc
adc
leave
cld
and
out
mov
es
cmc
jmp
scas
repnz
xchg
mov
mov
lea
fsubr
out
roll
add
sbb
adc
insl
or
and
jnp
inc
iret
jg
sub
push
jp
dec
or
shll
and
add
xchg
adc
adc
hlt
inc
imul
inc
mov
cld
cwtl
gs
mov
mov
adc
push
cmp
xchg
es
or
sbb
mov
add
and
cli
je
ret
icebp
test
push
dec
lods
arpl
adc
mov
scas
sub
enter
int
lock
cmc
insb
push
jb
lret
cmpsb
pop
pop
scas
shlb
dec
xchg
xchg
ss
or
notb
pop
cmc
gs
shl
out
mov
insb
sub
sub
repnz
mov
xchg
shlb
mov
out
insb
push
sub
jbe
cmp
rcpps
loope
test
push
jle
cwtl
add
mov
call
int
loopne
shlb
push
ja
mov
pop
das
ljmp
mov
fisubrs
pop
xorb
jl
mov
xor
aas
lret
sbb
pop
jle
imul
jns
insl
mov
in
test
xchg
insb
push
adc
mov
bound
and
and
movsl
sbb
pop
mov
pop
adcl
loope
lds
pop
or
out
cltd
mov
out
mov
rclb
push
dec
ss
pusha
xchg
or
add
adc
sbb
push
add
jmp
mov
int3
orb
push
mov
insb
ljmp
sbb
lcall
sub
orb
fcomip
scas
or
mov
or
cmp
enter
xor
mov
in
xor
jecxz
pop
fisttpll
push
xchg
mov
clc
mov
cmpsb
in
dec
mov
insb
mov
call
loopne
bound
mov
xchg
adc
jmp
outsl
aaa
icebp
dec
fsubs
sub
lret
aam
clc
add
stos
lods
mov
sub
fwait
stc
call
into
and
outsb
dec
jnp
stos
test
pop
cli
arpl
adc
jnp
ja
pop
ljmp
aas
push
xor
out
cmp
loope
shl
pop
pusha
scas
xorb
lock
cltd
das
into
sbb
cmp
add
sbb
mov
add
and
outsl
xchg
jno
pop
fwait
daa
movsl
mov
jbe
dec
cmpsl
fs
adc
mov
fldenv
bound
fwait
sarb
mov
iret
in
cmpb
xor
and
dec
icebp
dec
push
mov
xchg
lret
xchg
sbb
daa
pop
std
negl
cli
ljmp
inc
xchg
fisttpll
or
mov
sahf
bound
aas
xchg
aas
cld
out
shlb
daa
pop
cli
pop
aas
sti
xchg
ror
lods
in
ret
gs
loopne
push
or
add
xor
pop
inc
xor
fdivl
aas
jmp
mov
das
pop
in
lock
rcr
push
pop
xchg
lods
cmp
push
cltd
and
ljmp
and
fsubrs
lret
push
cs
stos
imulb
push
rcll
sbb
aaa
hlt
push
mov
dec
ss
push
cwtl
xor
xchg
pop
test
sbb
fucomip
scas
aaa
push
and
push
jp
repz
into
pop
in
imul
pop
cmc
pop
leave
imul
sbb
add
fwait
and
iret
xchg
ds
dec
push
in
pop
mov
bound
mov
dec
xor
push
cmp
adc
inc
outsb
cmpsl
jl
es
mov
ret
xor
pop
in
loop
push
outsb
or
or
mov
cld
xchg
scas
push
fimull
xor
xchg
sbb
test
movl
aaa
jle
fists
dec
sbb
xchg
sahf
sbb
loop
negl
popa
mov
mov
push
out
imul
mov
insl
inc
inc
mov
mov
pop
and
mov
cmp
fwait
inc
adc
sbb
stos
mov
ss
outsb
scas
es
inc
repz
mov
adc
loop
push
mov
outsb
mov
inc
out
mov
add
xchg
jae
sti
mov
adc
cmp
or
mov
nop
sbbb
lods
shrl
mov
push
testl
dec
or
mov
xchg
pop
out
test
push
jp
call
pop
popf
and
out
mov
xlat
mov
test
dec
aaa
sbb
sub
mov
xchg
insb
loope
and
inc
fldl
mov
push
sahf
cmp
jg
inc
jns
xor
xchg
inc
jns
ds
stos
movsb
fidivrl
mov
mov
cwtl
test
clc
jg
mov
repnz
in
inc
xor
mov
fldcw
xor
sub
mov
sbb
mov
add
gs
push
mov
xchg
adc
int3
lret
sbb
mov
ret
sti
gs
lahf
adc
dec
rorb
fistpll
inc
pop
push
inc
xor
cmp
or
js
push
insl
jmp
push
loope
dec
and
inc
mov
jno
cltd
jbe
mov
fdiv
pop
scas
movsb
aam
enter
sbb
call
fiadds
inc
push
add
mov
bound
cmp
mov
pop
fucomip
cld
sub
mov
iret
faddl
fdivp
aaa
or
xor
fildll
popw
out
add
addb
je
add
push
std
aas
es
movsl
xor
popf
fistl
ret
and
pop
or
or
lahf
cltd
xorl
push
inc
sahf
add
nop
push
push
fbld
lcall
xchg
xchg
insb
mov
add
in
cmp
mov
or
pusha
xchg
pop
inc
mov
sbb
sarl
leave
or
movsb
bound
lret
out
mov
imul
ss
mov
or
or
jl
les
imul
xorl
jno
jo
addr16
orl
cmc
mov
fbld
xchg
adc
inc
inc
adc
fwait
pop
jge
stc
lret
add
rolb
je
rcr
cs
loopne
mov
and
push
adc
mov
xlat
lods
pusha
inc
cltd
inc
cmp
dec
jmp
mov
push
or
aaa
hlt
mov
push
pop
sbb
xor
adcb
lret
popf
add
add
ss
stc
jge
add
fisubs
xchg
enter
push
fdivrs
movsb
fdivrs
dec
xor
int
movsb
shrb
and
xor
int3
sbb
es
jno
shrl
frstor
sti
lahf
push
push
lcall
xor
outsl
scas
pop
gs
stc
adc
or
xchg
adc
xchg
jmp
jge
jnp
mov
adc
insb
das
into
lea
icebp
fwait
test
fmull
movsl
loopne
loopne
test
data16
push
pushf
test
add
clc
push
mov
mov
cmp
lods
sbb
arpl
mov
inc
push
cltd
and
pop
jmp
jl
inc
fnsave
in
pop
pop
jecxz
jbe
sbb
fidivs
or
sbb
pop
addr16
andb
inc
and
aam
jb
test
outsl
test
xchg
pop
dec
cmpsb
leave
fdivr
fwait
adc
dec
xchg
ret
mov
aam
push
cmc
add
push
stc
inc
and
in
repnz
mov
cld
adc
pushf
add
in
fucomip
xor
sbb
push
aas
clc
gs
inc
jl
inc
aad
sbb
enter
shrl
push
mov
jae
jle
ret
push
jo
mov
push
mov
ret
fs
xchg
cs
in
aam
jge
sub
scas
leave
xor
pop
mov
sub
add
or
mov
xchg
sbb
xchg
aam
lret
fdivl
jbe
mov
mov
add
or
sbb
xor
sbb
test
pop
sahf
pop
mov
stc
inc
mov
dec
loop
inc
cmpsb
push
cmpsb
jp
pushl
insb
add
lods
jo
imul
sub
popa
mov
out
outsl
cltd
cli
pop
push
repz
cmp
mov
push
sbbb
dec
das
sub
ficoml
and
mov
scas
or
into
or
cmpsl
mov
inc
jmp
fsub
fmuls
cmp
sbb
repnz
sbb
aaa
dec
sbb
jnp
sbb
stc
jmp
mov
xchg
mov
sbb
jg
dec
loope
push
in
jmp
pop
jp
aad
sti
outsb
mov
inc
push
es
xchg
notl
jle
pop
push
xchg
sbb
popl
mov
lret
mov
jge
fisubs
xor
push
or
ror
dec
cs
je
cmp
insb
jg
lock
ret
lahf
lock
jo
imul
popa
mov
jl
std
popa
dec
ljmp
and
sbb
or
out
enter
aad
pop
frstor
push
push
inc
and
enter
testb
sub
sub
pop
pop
xor
or
inc
repnz
jns
mull
imul
notb
mov
ss
and
sbb
js
xchg
add
js
xor
mov
adc
push
movswl
xchg
arpl
aam
jmp
mov
mov
fcomps
adc
ja
lock
roll
test
add
add
dec
and
pop
xchg
lcall
in
pop
int
sbb
cltd
or
xor
int3
jae
cld
testl
lcall
adc
jne
and
aaa
sub
test
xchg
lcall
hlt
enter
mov
xchg
xor
mov
pop
sub
rclb
ljmp
fwait
shll
rcrb
fsubl
aad
sub
enter
sti
lcall
mov
dec
fs
outsb
push
leave
cmp
add
cld
xchg
push
inc
adc
xor
pop
and
nop
imul
lds
das
arpl
push
sub
cwtl
mov
lods
adc
into
xor
mov
add
testb
ficomps
andl
add
mov
iret
dec
repz
dec
sbb
lds
xor
leave
add
or
mov
jmp
test
inc
stc
nop
leave
mov
or
push
insb
mov
adc
in
add
test
inc
sub
pop
sbb
or
cmp
mov
jle
mov
push
rcrl
push
addr16
mov
push
std
sub
and
flds
or
repnz
ret
jnp
int3
mov
nop
dec
sbb
ret
xorb
jg
mov
daa
test
test
test
mov
lock
cmp
mov
jp
adc
das
aam
aas
movsl
sbb
stos
jno
cld
xlat
dec
ret
int
add
jle
push
push
fildll
inc
or
in
leave
sti
mov
int3
or
sub
jg
fldl
ficompl
mov
mov
push
into
sarl
mov
test
mov
pop
sub
mov
adc
shl
cltd
ret
out
ret
lods
aam
cs
popf
inc
or
sub
loopne
leave
or
repnz
push
lret
inc
pop
lds
mov
cmp
lds
pop
jae
shr
push
xor
cli
stos
add
mulb
jle
stos
cs
sbb
mov
mov
and
jecxz
or
ficoml
nop
mov
fidivrs
imull
movsl
mov
insl
mov
cmp
rep
add
mov
nop
stos
dec
and
out
int3
imul
or
icebp
xchg
std
mov
rcrb
xchg
dec
pusha
mov
xor
pop
mov
fsubs
push
mov
dec
push
push
jb
lret
jge
inc
popf
sbb
cwtl
fwait
int3
cs
ss
or
sbb
jecxz
sti
filds
dec
int
rorb
scas
or
shll
nop
ret
push
iret
les
mov
dec
dec
icebp
cwtl
nop
cli
or
jbe
lret
pop
in
mov
loop
pop
dec
jecxz
lahf
movsb
iret
mov
mov
movsl
into
jo
pop
xchg
fidivrl
pop
std
pop
mov
lods
xor
mov
mov
icebp
dec
or
repz
push
cmpsl
inc
inc
loope
out
incb
inc
mov
aaa
mov
jns
pop
fdivl
out
mov
pop
int3
shlb
shll
sub
aaa
mov
push
repnz
ret
imul
int3
jl
lds
xchg
lods
push
into
push
mov
mov
inc
nop
xor
lea
sbbb
mov
push
mov
inc
jnp
std
push
jae
fbstp
mov
arpl
fiaddl
icebp
cmp
shlb
adc
fnstsw
cmp
je
aas
dec
or
sub
repnz
mov
inc
mov
inc
pop
frstor
xchg
sahf
or
push
andb
fwait
sub
es
rorl
add
jae
adc
ja
cmpsb
imul
fnsave
pop
or
pop
jns
loope
neg
rolb
sbb
insl
sbbb
leave
addr16
aad
testb
test
jge
sub
sub
xor
inc
cld
arpl
dec
jecxz
sub
mov
pop
cmp
scas
ret
inc
sub
add
push
push
ds
mov
xchg
inc
push
mov
or
fisubrs
xor
pushf
lds
or
lret
jnp
in
out
cli
es
pop
mov
int3
dec
sub
insl
push
inc
push
jecxz
add
out
push
pop
in
pushf
ja
jns
sbb
add
fwait
adc
rolb
mov
sub
pop
inc
sahf
ljmp
push
jbe
stos
fs
cmp
les
loop,pt
add
imul
add
inc
fwait
xchg
push
aaa
stos
add
inc
aaa
cmp
mov
es
pop
sbb
repz
cs
leave
div
sbb
or
or
adc
pop
pusha
push
lahf
js
inc
shlb
jge
mov
pop
xchg
scas
push
jns
insb
in
and
ffreep
inc
mov
pop
sbb
push
mov
in
nop
out
inc
push
out
jg
mov
ret
inc
jne
popa
mov
add
mov
mov
mov
stos
jge
add
mov
mov
test
frstor
nopl
das
dec
jl
in
inc
outsl
mov
sub
int
into
mov
or
mov
xor
cmp
mov
xchg
and
lds
xor
push
xor
inc
adc
lods
sub
or
in
outsb
lahf
into
cs
cmpb
sbb
arpl
leave
repnz
or
or
jbe
imul
mov
or
repnz
sbb
inc
inc
inc
jb
icebp
jecxz
mov
repz
test
pop
loopne
stc
jmp
xchg
and
inc
pop
cmp
pop
nop
in
xchg
xchg
or
imul
xorps
insl
sub
lds
ss
int
mov
cmp
pop
enter
ljmp
jge
bound
loope
sbb
jne
jge
fbstp
mov
sbbl
cmp
outsl
sbb
sbb
cld
mov
mov
scas
xor
xchg
and
mov
cmp
cmp
test
sub
ja
pop
leave
mov
add
sbb
les
rcrb
dec
jae
mov
pop
push
scas
jnp
inc
pop
fstl
in
fildll
test
and
hlt
or
push
add
inc
outsb
cmpsl
lea
outsl
enter
or
ffree
cld
fldt
dec
and
sbb
mov
sbb
xor
mov
sub
ljmp
push
sub
test
arpl
out
jmp
add
jns
subl
repnz
fidivl
das
insb
jmp
lret
and
jo
loope
mov
dec
push
aam
and
les
ljmp
pushw
test
fld
or
aaa
adc
daa
loop
mulb
leave
sbb
mov
and
fwait
mov
mov
scas
mov
in
mov
loopne
cmpsb
or
enter
arpl
imul
test
sbb
jo
pop
inc
jmp
mov
mov
pop
out
rcrl
out
mov
cmpsl
jbe
mov
cmpsl
out
repz
cmp
nop
rol
and
imul
pop
jge
xor
xlat
cmp
sbb
or
adc
pop
mov
mov
xlat
adc
sub
push
lds
pop
xchg
and
cmp
mov
cmp
jnp
xchg
push
and
jle
pop
jbe
sysret
jmp
out
sub
outsb
das
or
movsb
out
adc
in
jmp
inc
mov
les
inc
pushf
xchg
icebp
mov
inc
stos
daa
cld
push
mov
cwtl
jns
inc
mov
jno
loope
frstor
and
fimuls
jno
mov
insl
sub
push
mov
mov
das
loope
sahf
jne
enter
rorb
xor
mov
imul
jo
ljmp
sti
cmp
mov
push
mov
out
outsb
inc
inc
outsl
mov
fldenv
xor
jle
push
in
mov
sti
adc
cmpl
pop
sbb
das
or
jne
faddl
mov
insb
cmc
sbb
int3
mov
clc
lahf
mov
mov
stos
ret
jns
mov
fnstenv
jnp
cwtl
xor
xchg
inc
gs
loopne
sti
loop
std
push
mov
loopne
ret
enter
mov
push
dec
fs
scas
add
xchg
adc
ret
pop
outsl
out
test
mov
and
nop
xchg
ljmp
mov
dec
popf
jp
push
call
xor
jmp
or
pusha
or
out
sub
ljmp
cwtl
repnz
mov
lock
xchg
rorl
in
add
sub
cwtl
lea
testb
mov
hlt
lahf
loop
xchg
ja
mov
nop
sbbl
mov
test
dec
repnz
bound
int3
addl
pop
xchg
mov
pop
dec
and
sbb
pop
sub
pusha
mov
xor
ret
imul
loopne
jg
mov
mov
pop
sbb
mov
ljmp
insl
jns
repz
mov
aam
hlt
addr16
push
mov
es
clc
or
cmp
nop
push
jne
fidivrl
cmp
stc
fsubrs
and
rclb
and
scas
or
push
fs
movq
in
push
mov
stos
movsb
dec
jle
xor
or
xchg
dec
rorl
cmp
jle
imulb
outsb
or
repz
cwtl
out
mov
push
popa
push
mov
mov
lods
xchg
fildl
xlat
mov
pop
icebp
out
pop
fidivl
mov
adc
dec
cmpsl
adc
and
mov
push
xchg
fs
sbb
ficoml
shl
dec
out
jne
jo
push
mov
or
push
cmpsb
dec
rcr
xlat
cs
movsl
imul
mov
jge
jecxz
adc
inc
stos
fdivl
cs
rolb
push
push
sbb
push
insl
push
std
test
icebp
or
cmpsl
mov
jnp
xor
xchg
pop
mov
push
movsl
or
pusha
push
sbb
jmp
fistl
out
fists
cwtl
out
imul
les
xor
lods
clc
in
orl
icebp
mov
add
pop
pop
inc
lods
jo
add
xor
cmp
adc
add
std
lods
xor
loope
mov
xchg
shrl
cwtl
negl
push
sub
in
shrb
mov
jo
jmp
inc
or
inc
push
ds
sbb
les
das
push
pop
inc
in
mov
cmpsb
dec
push
pop
xchg
int
ja
ret
mov
mov
or
inc
mov
cmp
inc
cli
dec
xchg
repz
sahf
xchg
daa
test
and
scas
in
jp
and
pop
pop
sub
push
dec
fldl
push
sub
daa
test
adc
in
aas
cltd
test
push
sbb
push
or
addr16
cld
out
push
data16
aad
xorl
mov
mov
cmp
sub
je
lret
lret
ljmp
jbe
dec
cltd
cs
adc
pop
ljmp
xor
int
aad
jae
icebp
insb
mov
outsl
and
cmp
loop
adc
es
fisttpl
sbb
std
xor
xor
adc
jae
add
mov
push
mov
xlat
scas
sub
cmp
add
fistps
push
push
gs
xchg
leave
mov
outsb
enter
jge
mov
mov
imul
pop
gs
push
mov
push
es
xchg
add
xchg
lock
or
scas
pushf
addr16
imul
rep
add
fcoml
nop
sub
jmp
or
loopne
jb
fwait
xor
cmp
sub
push
shll
rolb
ljmp
shl
push
pop
ljmp
jo
mov
hlt
shll
cmp
arpl
pusha
sub
sahf
ss
push
inc
dec
aaa
jmp
pop
nop
outsb
popa
inc
lds
fsubrp
push
push
std
mov
mov
test
out
dec
out
lods
fcomi
inc
sbb
jno
xchg
xorb
xchg
jne
jnp
sti
test
lret
test
pop
roll
and
arpl
pop
mov
stos
ret
divb
in
mov
cmp
xchg
les
loope
data16
in
enter
push
gs
stc
sub
add
mov
add
out
sti
add
aas
jns
jbe
andl
outsb
and
xchg
mov
jmp
bnd
in
mov
mov
in
int
rorb
addr16
cmp
int3
inc
mov
pop
into
xchg
jle
cwtl
subl
jp
adc
movsl
push
sub
push
push
arpl
fmuls
sbb
aad
sbb
adc
add
out
lea
mov
cwtl
inc
or
xor
fs
out
jo
inc
jle
loop
cltd
outsb
add
xchg
mov
mov
dec
jno
rcr
dec
nop
stos
shr
add
jb
out
addb
sub
xor
iret
jecxz
int
or
or
xorb
fwait
mov
imul
sub
repnz
dec
aad
and
add
and
daa
sbb
jns
mov
inc
jo
sub
stc
push
pop
mov
mov
hlt
fsubs
jecxz
ret
arpl
mov
pushf
jl
fnstenv
or
pop
push
imul
or
mov
inc
cltd
add
addl
push
lock
in
mov
xchg
xor
mov
pop
and
in
pushf
adc
dec
pop
cmp
repz
mov
pop
xchg
out
repz
and
dec
pop
push
ss
dec
jg
inc
mov
and
and
xchg
mov
ret
add
and
cmp
jns
lods
sar
lret
cmpsb
mov
and
xorb
inc
xor
nop
in
mov
pop
mov
roll
inc
push
mov
inc
mov
cmpb
fisubs
mov
and
mov
xchg
cmp
mov
jmp
mov
jg
int3
sbb
mov
mov
xchg
mov
xor
push
loop
dec
pop
lock
sbb
xchg
in
pushf
in
and
sbb
mov
mov
sbb
mov
fcoml
cmpl
sti
jge
aad
sbb
adc
xchg
jle
xchg
inc
sbb
push
outsl
fs
xorb
lret
xchg
push
jae
test
jge
into
adc
ficompl
xchg
hlt
cmpsl
out
mov
mov
fstp
jae
adc
iret
xchg
je
lods
lock
dec
in
jnp
and
dec
repz
jo
and
lea
cld
loop
xor
popf
gs
das
cmp
inc
xchg
mov
lcall
stos
test
bound
rol
lods
out
cwtl
ja
test
mov
cld
adc
inc
mov
jne
mov
sub
mov
cmpsl
xor
mov
mov
sub
test
push
rcr
or
pop
aaa
pop
cmp
xchg
es
xchg
ss
sub
adc
fcompp
cmp
lret
loopne
mov
mov
sub
add
xor
push
idivl
adc
or
pusha
arpl
cmp
lods
cs
and
notl
ds
mov
mov
jns
adc
mov
or
mov
nop
icebp
out
hlt
or
sub
mov
add
dec
pop
divb
out
mov
es
adc
push
std
call
fwait
adc
roll
stc
push
or
sbb
in
inc
leave
jmp
loopne
sbb
inc
pop
inc
jbe
sbb
insb
or
cmc
addr16
pop
repnz
mov
sahf
mov
mov
int
movl
ret
fbld
repz
mov
fcmovnbe
add
std
fildll
and
andb
and
cmp
outsb
pop
ljmp
ja
mov
inc
mov
jns
jl
js
je
prefetch
lret
test
push
fcompl
stos
add
pop
test
fcoms
hlt
jg
orl
or
push
adc
jno
mov
shl
cmpsb
test
das
aas
mov
mov
and
push
les
push
adc
add
inc
loopne
xchg
in
push
jmp
cmp
adc
mov
lahf
push
cltd
mov
mov
xor
sarl
mov
cmp
pop
lret
test
xchg
clc
adc
xchg
inc
out
inc
pop
sarl
jge
popf
in
shlb
iret
out
xchg
notb
dec
aaa
push
sbbl
loope
xchg
cmpl
sbb
xchg
imul
loop
ja
mov
or
outsl
add
jns
lcall
test
cmp
loope
ja
add
pop
scas
mov
pop
dec
push
nop
push
dec
shlb
insl
fdiv
cmp
fstpt
out
test
mov
stos
enter
pushf
adc
mov
aas
jge
push
fnstenv
test
mov
mov
and
adc
gs
adc
in
in
orb
int
inc
xchg
mov
ficomps
gs
int
jns
out
xchg
push
outsl
pop
add
ret
insb
dec
fistps
mov
std
iret
inc
mov
add
mov
aas
movsb
add
sub
cmp
dec
aam
dec
aad
mov
das
stos
inc
pop
or
pop
fisubl
xor
sbb
push
add
fwait
push
test
rol
and
cltd
jno
xor
hlt
mov
sbb
aas
addr16
call
xlat
mov
xlat
movsl
push
xchg
shrl
pop
mov
icebp
cli
ljmp
add
rcll
das
push
sbb
hlt
iret
btr
les
add
cltd
xlat
pop
jne
dec
stos
dec
sbb
xor
adcb
arpl
out
cmpsl
lds
adcl
cmp
daa
dec
cmovle
pop
out
repz
pop
xor
sub
sarb
jae
daa
sbb
nop
in
rol
sbb
or
sub
mov
repnz
test
cmp
mov
dec
loopne
add
xchg
jl
pop
aam
aas
inc
out
icebp
fsubrs
ret
insb
sbb
scas
nop
xchg
inc
sbbl
aaa
pop
insl
xchg
adc
jmp
push
lods
ret
js
add
and
sbb
push
pusha
xchg
xor
add
cmp
leave
aaa
or
xlat
shrb
subl
int
jae
std
and
stc
push
daa
jae
dec
rcr
sbb
pop
xor
jb
sahf
sbb
cmp
ret
cmpsl
jns
inc
fdivs
xor
jno
adc
sbb
cmp
sub
jmp
out
rcr
fisubl
cmp
xchg
jp
cmp
ficoms
jo
jp
mov
mov
push
jno
dec
js,pt
iret
insl
bound
inc
mov
lcall
lahf
cmp
mov
sbb
inc
jne
or
jbe
xor
in
outsb
sub
fadd
jnp
nop
pop
subl
push
mov
sahf
scas
loop
loopne
pushf
pushf
inc
jns
mov
int3
mov
pop
test
adc
xchg
fimuls
xchg
fimull
add
fsubrp
push
mov
cmpsl
inc
shlb
cli
lock
sub
mov
dec
std
sub
rorl
jne
rclb
mov
jae
mov
nop
aad
add
push
xor
fcompl
xchg
fbstp
push
jl
mov
or
lea
inc
sub
jns
cwtl
mov
aad
cmp
sub
fisttpll
jb
in
xor
fst
mov
int3
mov
mov
inc
xor
xchg
pop
cmc
xchg
je
mov
aam
lret
insl
fstl
repnz
add
push
sub
pop
sub
cltd
popf
sub
jmp
lret
mov
popf
imul
lods
ss
mov
inc
adc
sub
fists
jecxz
and
pop
jns
imul
mov
cld
adc
hlt
jo
cli
and
sub
mov
inc
xchg
add
jl
lods
push
rorl
cmp
bound
popa
leave
mov
ffree
ljmp
push
mov
xchg
insb
and
out
sarl
inc
mov
daa
das
ret
popf
xlat
roll
into
test
hlt
mov
sti
popf
jno
negb
or
cld
sub
aad
sub
mov
fnsave
scas
adc
shrb
inc
mov
std
sahf
aaa
push
sahf
and
add
imul
push
shlb
in
test
hlt
sub
mov
mov
js
jo
in
mov
and
sbb
adc
and
movsb
jmp
filds
mov
rol
lahf
sti
mov
pop
sub
dec
jecxz
lret
cmpsb
inc
sarb
inc
add
push
addr16
add
mov
imul
popw
sub
sbb
ja
mov
sub
loopne
dec
dec
sbb
adc
jg
dec
arpl
push
jmp
sbb
jge
pop
adc
and
lods
inc
sbb
fiaddl
das
enter
mov
into
cs
out
cmp
icebp
fidivl
lock
mov
jbe
jmp
ret
les
xor
out
pop
mov
pop
dec
loop
xchg
fists
cmc
jp
std
or
mov
xchg
or
fcomps
dec
xchg
pop
leave
cmpl
fwait
iret
dec
inc
push
mov
mov
rcrl
cmpsl
fwait
mov
imul
or
or
aam
push
lods
sbb
fsubrl
testl
sahf
add
aad
fistpll
mov
push
jmp
xor
lods
movsl
movsl
mov
dec
fisubrs
fsubrs
sbb
aaa
or
adc
shlb
pop
rcr
and
xorb
jne
shlb
pop
push
mov
ror
pusha
out
aaa
clc
mov
xchg
cmp
cli
das
cmp
xchg
xorb
push
dec
adc
lods
xchg
test
pop
sub
das
enter
scas
call
cmp
adc
sti
mov
cmpsb
popf
repz
adc
dec
pop
pop
shlb
in
xor
and
addr16
and
sub
jmp
mov
dec
push
and
or
mov
cmp
les
jecxz
dec
rcll
loopne
lahf
xchg
loop
push
loop
fisubrl
cli
lcall
or
cwtl
sub
jb
jae
push
or
and
mov
negl
xchg
lcall
push
insl
ret
lret
lods
xlat
sub
cmp
and
pop
mov
jl,pn
cmpsl
or
movsl
jae
cltd
sbb
nop
inc
push
pushl
dec
inc
sbb
repz
scas
lods
pop
xchg
enter
in
lock
dec
sbb
adc
push
lock
dec
push
into
sub
clc
sub
lahf
mov
ret
mov
push
lahf
or
in
mov
push
cmp
xchg
je
mov
fstl
cmp
fcomps
loopne
lret
xlat
sbb
adc
add
cmp
test
or
xchg
cli
lret
cmp
mov
fildll
pop
or
shl
pusha
sub
cmp
push
bnd
pop
rcrl
pop
mov
xchg
inc
or
lds
filds
iret
xor
in
jp
inc
into
cld
cld
out
ds
cwtl
cmp
iret
call
or
in
xchg
sub
bound
rclb
inc
int3
sub
mov
aam
mov
in
sub
cmp
inc
ficompl
test
jne
jecxz
adc
shll
pop
pop
addr16
sbb
fabs
in
add
push
push
das
xor
rorb
xchg
or
imul
sbb
fimull
push
add
pop
loope
loop
mov
inc
sbb
xlat
stos
xchg
sbb
cs
pusha
mov
inc
fsubs
insl
je
xchg
std
lods
lret
mov
sti
dec
mov
mov
mov
scas
mov
mov
cs
pop
sbb
xor
xor
jns
sahf
jb
push
jo
out
lea
push
ja
lds
enter
sub
mov
mov
pop
pop
cwtl
xchg
cmpsb
fildl
popf
shlb
movsl
dec
sub
xor
dec
or
xchg
lret
xchg
sub
int3
divb
cmp
cltd
push
shr
popa
sbb
pop
leave
cs
popf
dec
and
aam
nop
cmp
aas
rolb
push
int
sbb
dec
mov
add
call
push
mov
mov
inc
cmc
pop
fnstcw
iret
jns
out
mov
inc
dec
push
xchg
xor
aaa
push
inc
leave
xlat
add
stos
and
fsts
ffree
es
sub
out
sarb
or
cmp
cmp
mov
and
mov
inc
mov
adc
hlt
jbe
or
add
pop
or
adc
sahf
cs
les
insb
loopne
lcall
inc
jg
adc
mov
stos
mov
mov
lahf
push
mov
pop
push
hlt
mov
out
out
jmp
sbb
cmp
ret
insl
push
sbb
lcall
dec
rol
lods
push
mov
popf
test
mov
xchg
out
xchg
outsb
pop
add
ret
cwtl
jecxz
clc
mov
mov
xor
ljmp
subl
xor
into
mov
pop
inc
mov
outsl
sbb
iret
outsl
and
fs
xor
mov
bound
dec
xor
xor
xchg
ds
repnz
add
pusha
movsb
and
lret
es
aaa
aaa
or
test
movups
cmp
mov
rcr
mov
mov
push
out
cltd
inc
pop
pop
ljmp
xchg
pushl
push
and
jg
or
and
sbb
in
xchg
jne
push
int
addr16
add
push
aad
inc
out
fildll
fcoms
in
js
je
or
mov
push
ja
mov
push
insb
push
xor
cmp
pop
mov
mov
jo
das
pop
cltd
adc
jne
inc
jp,pt
outsl
lret
and
das
dec
xor
jno
outsl
incl
inc
xor
mov
hlt
bnd
sbb
add
ss
addr16
adc
insl
pop
int3
mov
fcoms
mov
fstl
std
aam
mov
test
fldenv
inc
dec
lahf
sti
lret
and
sbbl
imul
xchg
loopne
icebp
jl
mov
push
xchg
popa
outsl
adc
inc
mov
jne
stc
push
test
mov
stos
in
int3
sbbl
loop
inc
mov
int3
sbb
mov
lods
mov
aaa
out
xchg
subb
outsl
mov
cmp
enter
mov
punpcklbw
sbb
cmp
mov
xchg
cmpsb
ljmp
push
repz
fwait
cmpsl
sbb
outsb
mov
aad
ficoms
xchg
shll
lock
pop
dec
fs
or
test
stc
stos
push
and
or
std
scas
push
emms
out
xor
add
fldl
and
inc
adc
daa
push
pop
enter
daa
sbb
nop
push
inc
gs
or
lahf
popa
ljmp
xor
and
or
push
and
lret
sub
orb
add
push
xchg
xchg
add
inc
nop
pop
hlt
xchg
test
add
pop
pop
scas
pop
repz
std
jge
in
adc
sub
xor
mov
into
rcr
mov
fdivr
xchg
mov
movsb
xchg
fistps
jae
and
jle
cwtl
std
jno
jp
ret
out
or
outsb
aad
add
jp
mov
jns
mov
push
cmp
sahf
movsl
mov
cltd
ja
xchg
in
mov
dec
repnz
mov
stc
imul
or
add
outsl
stos
insl
repnz
add
pusha
in
dec
push
sub
sub
sti
push
push
mull
sti
sub
cltd
push
test
pop
xor
add
cltd
mov
add
loopne
xchg
mov
mov
mov
fcomi
daa
out
cmc
ss
ss
jns
mov
enter
leave
je
nop
cmp
mov
dec
loopne
fnstenv
insb
and
cwtl
mov
dec
popa
stos
test
imul
sbb
int
push
ljmp
mov
jecxz
pop
fidivrs
mov
fcmovb
jmp
inc
notl
sub
icebp
addr16
test
sti
inc
arpl
pop
mov
add
dec
mov
pop
push
pop
mov
nop
sub
xorb
jbe
and
mov
cmp
in
mov
sub
xchg
jg
mov
inc
clc
cld
mov
stc
mov
enter
push
xchg
xor
popl
dec
push
fsubl
jle
jle
mov
add
xchg
lock
cs
jp
lret
int
ja
mov
mov
les
nop
xchg
out
lret
pop
lods
sbb
icebp
ret
out
adc
int3
call
std
inc
dec
and
mov
inc
cs
sub
pop
popf
dec
xchg
lcall
ret
xor
jecxz
dec
lods
hlt
les
cli
mov
lsl
xchg
cwtl
int
and
data16
imul
mov
pop
add
push
add
xor
out
push
dec
pop
jge
add
jae
cld
jecxz
cmpsl
adc
pop
decl
test
jge
jbe
sbb
popf
xchg
into
xor
mov
out
pop
mov
pop
roll
cwtl
imul
push
shr
pop
lcall
xor
sub
sbb
outsl
pop
jmp
jge
leave
shrb
add
mov
cmpsb
out
cmp
mov
setl
mov
add
lock
insb
shrl
fidivl
out
movsl
cltd
popa
inc
sti
inc
scas
ja
je
in
lock
movsl
inc
inc
fmuls
cs
adc
and
int3
inc
ds
mov
in
inc
cmpl
shrl
mov
jl
or
inc
jmp
frstor
and
lods
int
sbb
dec
sub
leave
cmp
dec
ficomps
cli
lret
mov
pop
pusha
js
in
daa
add
sti
std
dec
incb
stc
enter
insl
and
iret
shl
mov
push
sbb
push
inc
pop
and
push
mov
dec
push
mov
jae
pop
fld
mov
je
jns
daa
jge
enter
je
rep
cmp
test
int
jbe
adc
jmp
mov
jmp
outsl
nop
fsubrs
push
push
aaa
xchg
pushf
inc
xor
lods
mov
pop
jmp
add
gs
cs
or
ljmp
jmp
jecxz
scas
adc
out
inc
inc
pop
fs
into
je
fcomip
xchg
outsb
push
xor
in
cmp
shlb
test
pop
or
outsl
adcb
mov
into
xchg
in
xchg
addr16
push
pop
mov
or
adc
sbb
jno
faddl
loop
xchg
mov
nop
inc
push
pop
jnp
lock
jbe
out
pop
sti
jg
mov
jg
int
dec
std
cli
push
adc
cmc
dec
push
or
dec
je
sub
push
cmpsb
inc
in
fadd
test
cltd
rcl
cld
out
add
mov
mov
loopne
xchg
and
setae
sub
adc
xchg
sbb
clc
loope
into
rcr
mov
mov
loope
mov
cs
aaa
xor
iret
sub
fldcw
loope
inc
mov
mov
aaa
stos
aas
push
and
nop
ret
iret
fcomp
push
mov
push
js
dec
add
shll
add
ret
push
je
push
imul
xchg
addb
adc
xchg
push
and
das
popa
pop
ljmp
mov
adc
test
call
lahf
loop
fadd
into
push
jp
lds
clc
adc
mov
outsb
cmp
sahf
mov
mov
push
jle
dec
das
sti
in
fwait
jmp
or
insb
fwait
cmp
add
lcall
je
setp
sarb
push
sahf
xor
in
mov
fs
insl
sbb
cmp
push
sbb
movsb
mov
mov
or
add
mov
cmc
add
mov
inc
and
sub
out
outsl
xor
jne
mov
xor
inc
inc
jno
xchg
xchg
xlat
jae
inc
outsl
or
xor
sahf
fidivrl
push
cli
jl
adc
in
or
xchg
xor
push
dec
iret
pop
or
aaa
lcall
testb
and
fnstsw
jae
xor
push
mov
daa
push
mov
sbb
in
jno
inc
sahf
adc
xor
ret
mov
mov
popa
push
pusha
adc
loopne
jp
sub
sub
mov
lock
jo
sbb
cmp
cmpsb
or
pushf
push
pusha
jecxz
repnz
pop
hlt
cmp
enter
cmpb
mov
xor
lock
les
add
xchg
scas
test
in
std
pop
push
pop
out
cwtl
sbb
ret
mov
mov
clc
fiaddl
xor
sub
mov
mov
xorb
test
int
pop
mov
inc
inc
dec
int3
pusha
jl
jp
jp
or
sub
sbb
xchg
and
shrb
or
js
ret
rorb
mov
push
adc
dec
dec
hlt
or
lret
and
jp
mov
lods
sbb
ret
negb
mov
insl
pushf
fsts
jp
xchg
mov
mov
sub
rclb
aaa
out
jecxz
ror
jp
or
scas
les
fists
fmulp
adc
dec
stos
fxch
push
mov
cld
jmp
mov
fstpl
dec
xor
lock
push
aad
fstpt
lret
jecxz
xor
loop
adc
pop
ret
jno
jo
js
xlat
mov
fistpl
or
sbb
cmpsl
in
loop
fdivrs
icebp
test
mov
mov
mov
shll
push
in
or
insl
cld
inc
andb
in
in
xor
int3
outsl
cmp
push
cmp
shrl
mov
add
add
sub
inc
sbb
add
sarl
pop
jp
arpl
mov
pop
push
mov
sbb
ljmp
sub
sbb
xchg
ret
xor
mov
and
inc
push
or
mov
cmpsb
pop
sbb
push
xlat
loopne
jne
inc
repnz
xchg
mov
add
push
sbb
mov
cmp
mov
gs
inc
xor
mov
dec
rcrl
out
xchg
sahf
dec
inc
cmpl
xchg
add
dec
xchg
mov
std
mov
shlb
xor
mov
jbe
cli
cmp
push
pop
test
jne
fldt
dec
subl
jno
add
jg
fcoml
add
xchg
ds
arpl
dec
gs
push
cli
push
inc
imul
mov
cli
data16
bound
popl
or
roll
dec
cltd
inc
mov
in
cs
mov
pop
addr16
dec
insl
sahf
aaa
sub
lods
xchg
pop
out
dec
add
inc
xchg
sub
test
int3
push
xchg
and
or
and
hlt
push
inc
iret
pop
fs
adc
jno
jmp
mov
out
xor
pop
cmp
xchg
hlt
pop
jecxz
mov
jnp
cmp
cmp
push
lods
cs
jp
call
mov
push
popf
insb
imul
pop
cwtl
push
adc
hlt
cmp
pusha
mov
pop
push
xor
adc
cmpsb
pop
inc
add
inc
mov
mov
lcall
icebp
ret
andb
jns
notl
mov
rorl
mov
or
xor
pop
jns
xchg
cltd
and
sbb
mov
int
cmp
sub
mov
into
test
pop
mov
idivl
pusha
andb
iret
cmc
std
lods
stos
adc
push
stc
cltd
sbb
and
and
cmpsl
mov
scas
lret
repnz
xchg
imul
mov
cmpsl
pop
scas
pop
cld
adc
mov
mov
lret
imul
fildl
cmp
ljmp
xchg
into
mov
cltd
cli
xchg
push
cmpsl
repnz
fs
jns
push
inc
xchg
cmp
popa
test
and
mov
or
push
xchg
inc
adc
jne
push
push
cmpsb
in
loop
xchg
pop
sbb
fst
xor
mov
shll
mov
mov
jne
sbb
shrl
rcr
out
mov
add
stos
insb
jmp
dec
jae
mov
rcrl
inc
jle
add
inc
push
andl
add
lahf
sbb
mov
xor
repnz
movsb
cltd
sub
cwtl
lret
jecxz
sbb
imul
fcmovnu
jo
dec
addr16
scas
lcall
xchg
lods
rorl
outsl
js
mov
jl
cmp
dec
cmpsl
aas
addr16
jmp
sbb
in
inc
mov
sarl
or
mov
pop
pushf
inc
mov
mov
sub
sbb
push
xor
mov
pop
mov
out
xchg
sub
aaa
mov
add
pop
daa
mov
sbb
jecxz
xor
sbb
mov
mov
xor
push
sbb
incb
push
rclb
sub
aam
mov
sti
adc
push
cld
test
test
sub
ljmp
loope
push
fistps
pop
inc
sub
hlt
lret
in
adc
call
and
stos
fdivrs
push
iret
sbbb
fldenv
mov
sti
pop
jno
fmuls
mov
cld
decb
in
fsts
and
push
fcmovnb
cmc
cmp
xor
sbbl
xor
ljmp
test
out
push
sbb
pushf
scas
and
in
or
push
sub
inc
mov
pop
pop
cli
scas
dec
adcl
sbbb
sbb
pop
jle
daa
dec
jmp
or
hlt
jo
xchg
xchg
sbbl
imul
xchg
dec
xor
stc
in
jb
sub
push
dec
push
inc
cmpsl
rcrb
add
add
xchg
sbb
sub
xchg
imul
pushf
hlt
mov
enter
idiv
icebp
push
xlat
mov
inc
inc
lock
mov
adc
aad
mov
in
mov
popf
pop
push
push
lods
lret
gs
sbb
mov
inc
pushf
and
pushf
cltd
rorb
adcb
mov
mov
cmp
iret
pop
sti
xchg
or
out
std
mov
mov
shll
bound
add
or
stos
dec
imul
sbb
inc
sub
sub
xchg
jo
xchg
lea
out
sbb
mov
out
sbbb
or
aad
and
pushf
out
xchg
pop
inc
mov
int
adc
jbe
push
ja
cs
lret
test
ja
inc
gs
test
adc
mov
movsb
psubw
ss
sbb
es
shll
or
mov
sbb
push
fstps
ja
mov
jb
cmp
testb
jo
pop
fbstp
jp
push
int3
jle
xchg
dec
cmp
cli
push
pop
mov
jecxz
push
insl
or
es
or
inc
fldt
xchg
addr16
aad
xchg
xchg
fisttps
scas
aaa
jno
shlb
aam
mov
sbb
shlb
in
cmpsb
or
leave
pop
in
arpl
xor
lahf
dec
push
popf
add
stc
lcall
pop
int3
xchg
mov
dec
popa
xor
dec
sub
sbb
pop
add
mull
lcall
jp
push
aas
inc
sub
inc
xchg
scas
mov
mov
pop
cmc
and
or
out
stos
sub
dec
mov
into
jecxz
push
lcall
mov
pop
into
adc
outsb
sbb
pushf
jl
ficomps
xorl
ss
dec
xchg
in
das
xor
and
mov
das
sarb
ss
push
cmp
cltd
push
mov
popf
popa
outsl
bound
and
movsb
inc
bound
and
pop
enter
push
cwtl
jp
std
add
mov
xor
xchg
inc
xlat
stos
xor
sub
out
mov
cmpsl
icebp
mov
js
jecxz
ficoms
shlb
pusha
cmpsl
sti
sbb
ret
adc
xor
stc
fcompl
lcall
add
mov
pop
in
or
ja
fwait
or
sub
inc
push
cltd
sbb
roll
or
popa
add
or
inc
xchg
push
incb
add
cltd
inc
xlat
lods
sti
jp
in
daa
add
loope
sub
push
dec
lahf
into
ret
dec
sub
mov
xchg
xchg
in
scas
daa
in
jne
xor
sbb
je
dec
mov
mov
dec
xchg
stos
add
icebp
xlat
ss
xor
stc
out
cltd
inc
nop
push
lret
std
mov
mov
push
mov
jg
test
mov
xor
sbb
imul
mov
shrb
pop
xchg
dec
cs
aad
sbb
pop
ljmp
jno
out
cmp
repz
xchg
sub
popa
jecxz
mov
push
rcrl
or
xchg
cmp
es
mov
call
loope
mov
mov
xchg
cmp
add
pop
pop
xor
cmp
mov
jno
pop
popf
add
inc
jge
enter
popf
inc
ljmp
mov
mov
js
test
in
mov
in
inc
and
scas
repz
and
iret
push
rorb
das
test
iret
pusha
fwait
pop
mov
out
cs
xchg
pop
sbb
out
mov
and
in
mov
daa
cmp
inc
mov
pop
mov
sub
cli
leave
outsb
leave
frstor
dec
inc
or
adcb
fwait
in
xchg
inc
xchg
pushf
cmp
pop
imul
or
inc
popa
push
movsl
sub
fcompl
repnz
fcmovu
call
add
or
push
in
and
stos
or
scas
icebp
loopne
jle
add
lds
fisttps
xchg
push
fisubrl
lock
lds
push
repnz
jne
fsubrl
fs
cmp
leave
fcmovb
stos
movsb
mov
xor
pop
fistpl
imul
and
push
das
fwait
incl
push
xchg
xor
addl
xchg
icebp
pop
cmpsl
inc
xor
stc
cmpsb
jnp
inc
jns
push
lock
fcomps
mov
push
jno
jge
lret
xor
fwait
pop
add
push
stos
dec
rorl
sbb
sarb
mov
fdivl
clc
int
mov
jae
dec
inc
add
pop
sub
inc
fdiv
add
sbb
dec
adc
insb
and
gs
pusha
mov
je
or
or
jmp
mov
mov
inc
and
bound
or
inc
scas
lret
mov
lcall
cs
pusha
outsl
jb
lahf
jle
outsb
aaa
mov
or
in
mov
in
push
hlt
dec
fstp
mov
in
and
ds
lret
rcrb
jp
inc
mov
xchg
xchg
pop
dec
mov
andl
mov
add
inc
popf
sub
push
ds
lods
lahf
out
loope
int3
loope
push
pop
cs
mov
push
popa
orl
pusha
pop
stos
adc
push
es
pop
mov
cmpsl
mov
scas
lret
pop
pop
mov
xchg
xchg
mov
incb
lcall
cmpsl
out
aad
xor
xchg
inc
fildll
ss
pop
stos
push
es
pop
loope
inc
xchg
mov
inc
push
mov
dec
xor
hlt
aad
push
pop
outsb
sub
repnz
jmp
mov
adc
fldl
inc
ret
mov
sti
out
sub
popa
ds
add
mov
xchg
icebp
xor
sbb
call
ljmp
xor
in
dec
int3
adcl
mov
sahf
mov
and
outsl
sub
jl
js
and
push
add
add
test
and
or
or
sbb
sbb
test
sub
les
or
cmp
sub
out
and
aam
shrl
leave
bound
roll
or
jo
jecxz
orl
lcall
lahf
push
sti
xchg
pop
jg
popa
add
push
pushf
add
xor
add
es
mov
jbe
mov
test
push
mov
mov
mov
aas
sub
push
pop
xchg
cmp
test
add
push
dec
ficoms
mul
and
jae
xor
push
sub
pop
sbb
pop
sbb
or
push
in
jg
jnp
sub
scas
xor
fidivrl
nop
inc
aaa
movsb
in
arpl
scas
in
xchg
add
iret
pop
push
shrb
pushf
ja
int
pushw
jns
pusha
in
pop
int3
arpl
insl
cs
jg
in
sbb
jnp
xchg
or
scas
lods
lahf
mov
pop
jbe
or
fdivs
or
sti
cmp
jnp
mov
leave
lods
fldcw
add
repz
and
push
cld
push
pop
mov
adc
push
push
ret
daa
imul
xor
dec
add
and
repnz
and
add
hlt
ljmp
jle
mov
aam
js
sti
xor
xchg
sub
shrl
lret
xor
fs
or
xor
enter
sub
sti
push
jno
out
push
xchg
fs
sub
mov
mov
xor
cmpsb
xchg
cmc
les
jge
shrl
ret
lret
or
out
aaa
scas
xchg
enter
xchg
or
add
cmc
push
hlt
push
mov
add
fsts
test
mov
inc
add
mov
cli
cmp
or
and
insl
add
notb
or
mov
sbb
jno
sub
movb
push
negl
add
lock
mov
mov
sub
pop
dec
cltd
fistpl
addr16
dec
hlt
int3
push
xor
cmp
push
sbb
cmpsb
inc
xchg
add
sbb
and
rcr
pop
test
lret
gs
mov
jg
xor
push
ss
jo
sarb
ljmp
mov
pop
mov
out
jmp
nop
ljmp
iret
insl
leave
lds
jns
imul
icebp
ds
stos
cltd
cmpsb
rclb
inc
popa
xor
cmp
aam
add
in
xchg
scas
xlat
xchg
mov
daa
mov
and
mov
sub
negb
jns
pushf
out
stc
jae
rorl
rcl
jbe
cmp
adc
push
jmp
cli
mov
test
pop
sbb
add
or
decb
sub
adc
jge
jle
icebp
shll
aad
insl
bound
rcrl
and
lds
and
jns
xchg
das
ds
fs
dec
int
cwtl
jno
xor
in
pop
mov
inc
mov
push
jecxz
pop
add
iret
add
fs
scas
cmp
push
pop
pop
mov
inc
add
rcrb
cmp
jg
mov
loope
xchg
sbb
lock
xlat
or
test
fildll
xchg
subl
stos
fcom
andl
cmp
sbb
add
ret
cmp
in
mov
sub
push
sub
iret
out
mov
jno
xchg
mov
lods
sub
sub
xor
ret
jae
cmp
rcl
inc
ljmp
mov
fsts
xor
inc
in
cmpsl
fwait
push
xlat
scas
shlb
jp
lock
mov
out
dec
xchg
or
mov
daa
mov
cmpsl
scas
cwtl
fcmovu
loop
add
cmpsb
clc
rclb
jmp
pop
in
lods
out
inc
push
testb
mov
cli
cltd
data16
jae
cwtl
adc
filds
push
pop
mov
test
dec
daa
call
pop
lahf
jl
popa
adc
cmp
and
lods
in
out
dec
mov
lret
in
cmp
push
sbb
cmpsl
aaa
cld
out
pop
stos
xor
outsl
pop
int
mov
push
lods
shl
icebp
outsl
add
inc
lea
cmp
push
jg
cli
cmp
lahf
aaa
sub
xchg
inc
test
cli
cmpsl
lret
sbb
test
push
stos
dec
cmp
cmc
sub
rclb
lret
jle
inc
call
negl
push
jl
jae
and
jmp
dec
movsl
sub
mov
cmp
dec
fnsave
rcrb
push
mov
mov
cmp
jg
add
test
rol
rcl
mov
testb
dec
inc
cmp
cs
sub
sbb
add
add
leave
push
xchg
xor
cmp
dec
mov
repz
std
cmp
enter
mov
lds
jmp
lock
addb
std
insl
or
sahf
in
cmp
push
scas
stos
out
je
in
jp
push
adc
movsl
cmp
in
pop
movsl
rcll
cmc
les
or
hlt
outsl
add
mov
mov
into
adc
scas
mov
test
movsl
loope
xor
adc
jae
inc
sub
inc
aad
and
mov
jle
cbtw
mov
mov
adc
loopne
inc
cmp
je
lret
jp
fs
sarl
movsb
jecxz
jno
ja
int
or
jne
lods
sahf
xchg
adc
je
sub
nop
add
jno
dec
cmpsl
xchg
inc
and
push
jmp
int
js
clc
mov
pop
adc
popa
sub
rorb
bound
jmp
mov
mov
movnti
jmp
mov
imul
sarb
sbb
jne
and
cli
push
jnp
add
movsl
or
xor
fisubl
data16
sbb
hlt
bound
in
pop
testl
jno
mov
xor
push
mov
inc
sbb
add
nop
push
mov
daa
jbe
dec
sbb
loop
stos
fcoml
fisttps
out
in
mov
jb
inc
in
pop
pop
loop
xor
inc
cmp
xor
jnp
mov
mov
dec
ljmp
xchg
aad
push
lcall
cmp
fildll
dec
mov
inc
xadd
aaa
negl
inc
popa
mov
push
mov
mov
cmp
cmc
adc
sub
mov
lea
sbb
push
xchg
cmp
aas
scas
enter
mov
xor
pop
push
enter
jbe
popa
clc
rolb
fsts
out
mov
inc
add
test
push
outsb
jge
aaa
push
in
sub
or
aaa
mov
jns
and
push
data16
test
jbe
inc
js
arpl
popa
cli
das
lods
rcrb
cmp
push
lods
and
xor
push
sub
push
push
or
and
dec
adc
push
or
sbb
lea
or
xor
lret
cmp
cmp
pop
repz
mov
xchg
pshufw
jns
jge
jge
ss
push
cmpb
test
mov
and
aas
movsb
js
ret
jo
jnp
xor
and
mov
fidivrs
xor
pop
cmc
xchg
insb
lcall
jne
xor
arpl
add
mov
mov
aam
push
loop
sbb
sbb
cli
and
jg
mov
inc
pop
xchg
xchg
push
and
push
cmp
dec
stc
iret
adc
cltd
loope
or
inc
dec
xchg
jmp
sub
xorl
mov
cld
test
or
adc
or
scas
and
and
fmul
leave
iret
test
xchg
push
or
pop
adc
call
cmp
shrl
sbb
and
sbbl
dec
nop
mov
aaa
out
mov
mov
sbb
pusha
and
imull
rol
js
mov
mov
jmp
mov
call
fildll
mov
cmp
mov
mov
mov
repnz
shll
inc
xor
es
or
adc
lcall
iret
jae
cmpsl
and
fisubs
pop
fbld
pop
inc
add
xor
imul
jne
mov
pop
add
mov
jb
in
xor
es
iret
fimuls
loopne
int3
mov
lds
push
insl
test
popa
mov
cmp
xchg
mov
fnstcw
arpl
ja
inc
ret
xor
es
sbbl
fnstcw
add
fdivr
hlt
jbe
xchg
test
cmp
mov
xor
sub
nop
icebp
push
xor
ret
jmp
and
cs
mov
hlt
adc
dec
insb
cmp
cmp
mov
cmp
and
mov
aam
mov
mov
inc
cli
repnz
sub
pop
push
sbb
xchg
out
lcall
adc
xlat
cmc
jb
xor
cmp
fbld
cld
dec
addr16
sub
fnstcw
clc
or
dec
adc
test
mov
out
and
rcll
jge
jo
xchg
in
sarl
inc
mov
xchg
addr16
cmc
jp
int
and
jo
cmovno
pop
in
arpl
frstor
notl
popf
push
int3
test
push
xchg
rorb
out
test
stos
in
in
rcrl
das
sarl
int
aaa
hlt
enter
es
aam
les
and
mov
pop
js
insb
and
je
jo
nop
push
outsl
call
mov
fs
fidivs
dec
nop
mov
or
cli
orl
lods
jb
std
or
xor
sar
mov
mov
push
mov
and
mov
mov
into
cltd
adc
add
sarl
iret
cwtl
ljmp
dec
fwait
inc
cmp
xchg
fidivrs
aam
push
aad
pop
pop
mov
mov
dec
or
add
adc
jno
xchg
cmc
inc
das
xchg
andl
dec
mov
daa
out
outsl
imul
icebp
outsl
push
sub
orb
fwait
enter
and
jbe
inc
push
and
in
mov
dec
rorb
adc
lcall
pop
adc
pusha
hlt
xchg
and
xlat
cmp
adcb
clc
in
aaa
lods
popf
add
dec
loopne
or
mov
push
outsl
ret
cmp
mov
or
mov
roll
mov
xchg
loope
imul
push
push
ret
push
and
sar
xor
push
lret
pop
mov
inc
aam
cmp
out
push
inc
aad
das
cmp
adc
imul
iret
loopne
sbb
push
dec
xorb
or
jecxz
sbb
cltd
dec
sbb
lds
out
out
add
xor
mov
scas
sbb
xchg
arpl
jmp
aam
pop
sub
xchg
incb
sbb
shl
clc
ret
and
inc
xchg
ja
mov
fcomps
cltd
dec
push
xorl
push
cmpsb
mov
fidivl
mov
push
out
cmp
fldenv
push
loop
out
pop
cmp
push
jmp
push
xorb
out
std
or
pop
xor
xor
pop
or
fadd
mov
hlt
into
adc
add
in
test
insl
and
push
bound
out
add
lods
push
jae
sarb
mov
fldl
arpl
shr
sub
sub
call
je
and
xchg
sarl
hlt
xchg
xchg
add
mov
jecxz
push
pop
sahf
push
ficoml
and
rcll
add
in
imul
jmp
rsm
cmp
int3
cld
jb
arpl
in
ljmp
movsb
xchg
xlat
jp
ret
out
jecxz
and
in
lods
mov
or
cmpsb
je
sbb
xor
pop
fdivs
xlat
adcl
push
mov
in
add
imul
gs
sub
push
sbb
cmp
lock
jecxz
lahf
rclb
cmp
gs
lea
enter
test
outsl
pop
sub
mov
fidivl
dec
test
mov
add
insl
xor
cmc
push
or
fdivrl
dec
or
into
pop
mov
imul
dec
xchg
mov
cmp
cli
sti
loope
ficoml
mov
arpl
xor
movsl
std
shl
mov
andb
and
dec
mov
cmp
adc
mov
or
rcrl
scas
sbb
cld
cmc
icebp
adc
adc
inc
popf
pop
mov
or
pop
adc
pushf
inc
out
movsb
fisubs
bound
addr16
jmp
popf
jae
xor
movsl
sahf
scas
sub
aad
mov
popa
xchg
cmpsb
mov
inc
sub
mov
cli
pop
data16
out
std
jp
ffreep
lds
push
nop
pop
movsl
or
addr16
mov
leave
imul
imul
sub
sbb
insl
mov
mov
mov
and
out
push
pop
cwtl
pop
imul
pop
lock
or
jle
imul
or
sahf
mov
les
xchg
inc
cmpsb
add
sbb
inc
insb
int
lret
mov
ret
xor
adc
pop
fcomip
setns
fmuls
mov
cmpsb
mov
push
jae
pusha
pop
dec
lcall
sub
sbbb
add
aad
stc
or
ret
dec
mov
cmpsb
cmp
jbe
pop
mov
push
xchg
push
xor
out
pushf
mov
jb
leave
addl
out
mov
fldt
ja
xchg
mov
test
mov
sbb
inc
repz
in
je
pop
add
xchg
sbb
mov
fsubp
es
aas
xor
push
inc
jo
xchg
dec
jns
call
int
sahf
cs
inc
or
jae,pt
inc
andb
jp
jecxz
filds
sub
jmp
mov
cwtl
jl
mov
outsl
leave
pop
cmp
add
cmp
andl
imul
outsl
ficomps
xor
pop
sbb
lcall
insb
daa
stos
inc
xchg
lret
fs
mov
inc
outsl
ficoml
pop
jno
fistl
dec
test
lahf
dec
gs
shl
push
push
or
push
incb
repz
insl
inc
addl
pop
subl
jecxz
push
xchg
jo
in
aam
pop
clc
arpl
cld
pushfw
sti
pop
mov
push
push
aaa
xor
loop
dec
iret
inc
xchg
push
pop
or
pop
into
add
stc
adc
mov
pop
lcall
add
ror
or
call
ss
inc
mov
dec
push
call
les
or
lret
mov
push
push
das
mov
dec
cld
lock
fsubs
add
insb
sti
add
jecxz
and
jecxz
clc
addr16
jmp
lods
enter
loop
test
jp
push
inc
nop
xor
sahf
mov
inc
gs
push
add
les
adc
add
mov
push
ds
add
xor
jl
xchg
jb
mov
pushf
into
fldt
and
mov
inc
adc
or
ret
cltd
subb
sbb
cld
lock
out
inc
sbb
inc
jbe
jg
lea
test
jo
mov
gs
mov
xchg
xchg
adc
clc
pop
add
xor
test
lcall
sub
faddp
aam
adc
mov
sub
dec
xchg
fs
mov
push
lret
ss
inc
pusha
push
adc
xchg
sbb
mov
loopne
test
jmp
imulb
imul
add
inc
fsubrl
mov
sbb
mov
pop
mov
es
int
int
mov
push
fwait
pop
std
lcall
push
pop
lcall
pop
outsb
or
mov
rorl
jae
clc
jae
lods
sbb
adc
fstl
and
add
ffreep
hlt
iret
cmc
mov
jb
in
inc
in
mov
aam
push
adc
push
dec
test
lock
mov
stos
pop
xchg
test
aaa
sbb
ds
jg
dec
mov
dec
les
push
cli
sub
xor
out
mov
pop
pop
repz
cli
sbb
insb
js
add
jb
mov
outsl
and
sub
aam
sbb
insb
mov
mov
jg
lahf
inc
push
jmp
add
ljmp
inc
add
inc
mov
pop
cmp
cld
bnd
hlt
xchg
jbe
aad
inc
jl
sub
sbb
mov
xor
cli
jge
addr16
test
xorb
scas
test
mov
cmp
push
sub
hlt
mov
lds
cmp
mov
mov
nop
xchg
repz
out
xchg
pushf
in
add
mov
shr
add
jmp
mov
add
and
scas
int3
jbe
mov
mov
scas
push
add
pop
jns
jp
cld
xchg
pop
scas
xchg
cmp
cmpsb
out
push
mov
dec
xor
or
or
jp
idivb
add
mov
push
lcall
aas
clc
call
cld
loope
jne
jns
fcom
sub
ss
add
mov
mov
mov
pop
xchg
pop
jl
jp
dec
sahf
fcmovbe
daa
test
and
xor
dec
pop
cltd
ret
jb
sti
xchg
stos
and
pusha
leave
push
aaa
push
push
ja
add
jl
push
lahf
jl
subb
cld
shrb
dec
push
adc
lea
femms
xchg
jg
jl
and
cmp
out
xor
sbb
rorb
mov
out
xor
sbb
js
lods
push
xchg
add
xor
mov
sbb
push
test
xor
ret
imul
out
mov
inc
pusha
mov
mov
push
fldcw
aaa
and
xlat
mov
jl
mov
test
jae
push
stos
data16
sub
sub
jno
mov
xor
pusha
push
inc
dec
daa
pop
ret
lods
arpl
lock
fcom
aaa
imul
nopl
pop
add
imul
or
add
xchg
sbb
xor
mov
sub
imul
nop
fidivs
pop
jo
jns
movsl
jae
mov
fmuls
sbb
aad
add
daa
pop
lods
adc
fwait
and
sbbb
in
mov
cli
mov
push
xchg
aaa
nop
inc
scas
cmp
sbb
lcall
mov
roll
xchg
cmc
movsb
inc
and
pop
mov
and
mov
fidivs
bound
sub
inc
jp
adc
lret
xchg
or
mov
outsl
pop
mov
mov
xchg
adc
cmp
popf
pop
pop
es
xchg
mov
jnp
sbb
shrb
sbb
das
into
mov
in
push
push
inc
fadds
xchg
decl
roll
dec
movsb
pushf
das
repnz
enter
mov
add
loopne
imul
cwtl
pop
sbb
cld
xor
xchg
sub
lods
nop
jno
iret
std
add
insl
shll
movsb
or
dec
mov
xor
stc
loopne
ror
cs
and
jmp
data16
xor
xchg
lds
fcmovnu
ljmp
js
and
jp
stos
out
adc
stc
mov
adc
push
scas
pop
xchg
cmp
mov
stos
nop
call
pop
ss
dec
roll
jb
movsl
pop
mulb
ljmp
mov
int
rcll
mov
inc
sti
push
sahf
lods
jne
loop
sub
outsl
add
and
inc
jo
inc
je
insb
mov
inc
mov
inc
movl
fidivs
das
das
in
fistps
push
xor
aad
outsb
lods
fst
xor
xchg
scas
pop
adc
mov
sbb
in
or
lock
mov
loope
mov
loope
xor
dec
repz
lcall
xchg
leave
mov
lcall
jne
out
or
fdivl
xchg
pop
repz
fsubs
out
push
dec
push
add
in
mov
lret
loop
sbb
arpl
xchg
mov
data16
mov
push
test
xchg
cmp
bound
inc
xchg
xor
jno
mov
sahf
xchg
pop
sub
mov
xor
hlt
push
mov
sarb
ja
and
cmp
adc
pop
and
pop
pop
pop
adc
sub
add
mov
neg
int3
or
xchg
mov
pop
popf
cmc
mov
ja
jp
mov
xchg
loop
pmaddwd
pop
xor
sbb
lahf
pusha
in
or
and
fistpll
xor
std
pop
vmovlpd
and
add
jbe
xchg
orl
adc
inc
scas
mov
push
or
sbb
lds
or
int3
xchg
lods
adcl
pop
movsb
mov
mov
stos
pushf
xchg
or
push
fadds
inc
lods
sbb
adc
cmp
add
push
mov
and
jno
leave
insl
push
stos
pop
clc
popf
jle
ljmp
inc
aad
mov
adc
jns
xchg
sbb
roll
aam
add
dec
cltd
lods
popf
fucom
lret
shr
sbb
jg
out
test
xchg
imul
into
pop
push
lcall
jbe
pop
jae
jg
jle
xchg
mov
jmp
rclb
mov
outsb
stc
inc
lods
ret
bound
jns
mov
dec
lods
pop
sub
adc
nop
ja
jg
hlt
jb
push
xchg
lds
or
sbb
mov
mov
and
sub
inc
sub
lret
out
push
std
pop
adc
add
dec
jo
pop
pop
repz
sbb
sbb
inc
pop
or
gs
cmpsl
clc
jns
iret
sti
cltd
mul
ret
xchg
jle
sub
test
or
pop
mov
lcall
mov
decb
into
into
pop
mov
scas
iret
pop
jo
mov
jne
mov
mov
int
fidivrl
in
dec
cwtl
jecxz
in
aaa
outsb
pop
stos
mov
adc
arpl
cmpsl
pop
dec
adc
ljmp
aad
pop
inc
jns
lds
jb
dec
mov
ja
push
push
mov
jl
mov
xor
aad
in
mov
jl
addr16
sub
rorb
mov
inc
mov
dec
lahf
xor
xor
inc
clc
push
cld
dec
xor
popl
lock
std
mov
andb
push
rorb
rorl
punpckldq
loop
pop
xor
mov
xor
push
iret
add
neg
lea
mov
sub
out
cld
loopne
fisubrl
jmp
xor
mov
mov
push
imul
cmc
in
sbb
cmpsl
xor
dec
ds
cmp
adc
mov
jg
or
cmp
jns
inc
xchg
repnz
cmc
pop
add
lahf
jo
or
ret
mov
mov
dec
mov
fistpl
push
fs
negb
fidivl
adc
movsb
dec
leave
push
push
dec
inc
sub
mov
pop
ds
lea
mov
mov
gs
je
pop
and
imul
mov
push
and
ja
mov
shrl
dec
fisubs
cmc
hlt
or
pop
xor
xor
insb
push
and
jl
sbb
shlb
push
mov
adc
dec
xchg
jns
and
inc
mov
and
pop
xor
adc
push
adc
fcmovnu
push
test
aad
cmc
mov
dec
inc
pop
outsl
adc
les
loop
push
add
pop
jne
mov
dec
adc
lcall
and
jp
push
int3
dec
sbb
les
xchg
jge
adc
cmp
jl
imul
roll
add
scas
pop
push
iret
fisubrl
pop
insb
pop
aad
mov
cld
outsl
fstl
pop
push
cmp
or
imul
or
mov
mov
notb
mov
push
fisttps
add
movsl
test
mov
std
mov
shl
pop
les
sub
mov
das
adc
dec
xor
cmp
imul
leave
jnp
ja
jbe
dec
ficoms
es
cmpsb
jg
dec
imul
pop
mov
ret
lods
lea
mov
aaa
aad
pop
test
jle
pop
stos
cmc
fwait
pop
fistl
lcall
inc
mov
aaa
repnz
enter
add
mov
mov
sbb
imull
jns
push
rcr
das
adc
lea
movsb
aad
cltd
fdivr
lret
push
jb
add
cwtl
outsl
sbb
shr
hlt
loope
and
push
test
cli
push
fisubrs
hlt
repz
outsl
mov
push
jge
jp
ljmp
add
and
mov
mov
gs
sarb
in
addb
lods
jbe
je
ss
add
and
ret
lock
sub
and
dec
and
or
mov
jp
pop
inc
xchg
jg
mov
adc
inc
or
push
das
pop
rorb
out
mov
xor
dec
inc
mov
and
cmp
arpl
leave
popa
data16
test
mov
insb
rcr
or
cmp
les
sti
mov
jnp
rorl
pop
pop
dec
pop
jl
mov
dec
mov
and
bound
push
fs
lcall
ja
jo
cwtl
cltd
jnp
adc
or
sar
push
dec
push
dec
popa
add
cmpsb
aad
divl
popf
pop
push
leave
imul
mov
cmp
ret
fmuls
fidivs
ret
or
mov
mov
sub
ret
sbb
mov
cmpl
add
mov
movl
imul
jo
je
dec
jb
cmp
cmp
icebp
popf
mov
or
cmp
not
lret
mov
les
ret
lcall
mov
orb
jns
into
int
rol
xor
ficoms
insb
xor
and
stos
or
cmpsl
sub
dec
imul
lods
or
lea
into
mov
mov
xchg
enter
push
loopne
xchg
outsl
adc
add
ficompl
pushf
inc
jl
sub
adc
inc
and
fsubr
push
or
imul
and
les
imul
cmp
std
mov
jb
push
dec
sarl
mov
dec
insl
out
fdivs
sbb
inc
cli
aam
adc
xchg
addr16
ljmp
shrl
sub
and
test
xor
and
mov
xchg
popf
mov
add
stos
jg
in
push
lret
xor
shrl
dec
pop
jle
dec
xchg
rorl
lock
push
inc
add
jmp
leave
mov
sub
std
ljmp
pop
dec
or
or
sarb
sbb
sub
pop
adc
les
imul
add
push
fcmovb
inc
xchg
jg
test
and
inc
les
ret
lds
xor
stos
inc
inc
mov
inc
push
sub
das
fsubrs
fisubl
sar
or
insb
mov
lcall
xor
shrl
pop
imul
inc
pusha
jbe
pop
xor
pop
js
aam
ja
sub
fcom
dec
jmp
daa
pop
mov
decb
fsubrl
jns
mov
sbb
insl
cwtl
jl
imulb
f2xm1
xchg
or
nop
xchg
insb
xchg
scas
cld
mov
mov
or
dec
pop
ljmp
mov
pop
mov
mov
stc
scas
iret
sub
cmp
rcrb
push
sub
inc
jne
insb
xchg
add
ljmp
mov
call
testl
cs
pop
sbb
pop
loopne
jmp
jp
cmp
sub
imul
xor
dec
subl
mov
mov
or
int3
aaa
xchg
cmp
or
push
mov
sbb
addr16
and
jb
fwait
lea
clc
add
xchg
mov
inc
pushf
inc
bound
jne
test
mov
movsl
cltd
sub
or
cmp
in
jge
je
jno
pop
aas
movsb
push
add
fstl
das
pop
mov
andl
mov
in
movsl
ss
leave
cltd
pop
lret
bound
in
fcmovnb
cmpsb
mov
sbb
scas
pop
xor
nop
jae
inc
in
shr
loope
dec
push
xchg
dec
jg
les
mov
or
outsl
dec
in
fwait
and
push
jp
popa
repz
dec
adc
jle
cmpsb
imul
adc
adc
and
push
mov
inc
jne
imul
lods
fstpt
mov
pushf
popf
push
in
pop
rorl
cmp
xlat
mov
and
shl
lcall
bswap
fstpl
push
xchg
sbb
or
mov
or
cmp
sbb
repz
std
jp
sbb
sub
pushaw
rol
pop
cmpsb
sti
sub
mov
or
sarl
pop
xor
mov
sbbb
scas
xchg
fists
bnd
mov
cltd
jno
add
or
imul
and
outsb
lock
in
lock
sarb
inc
or
pusha
in
jns
xchg
push
adc
lahf
or
cmp
mov
in
pushl
or
sbb
jbe
pop
xlat
adc
push
test
cmp
aas
es
sbb
lcall
adc
pusha
or
outsl
movb
mov
out
loope
push
cmp
js
or
leave
ja
lahf
in
mov
mov
mov
cwtl
test
mov
lods
shll
cmp
sbb
popf
insl
mov
jns
adc
mov
shrb
add
pop
aas
scas
push
bound
and
mov
and
mov
icebp
and
addr16
lods
cmp
sub
dec
bound
xchg
pushf
and
mov
je
push
cld
mov
aas
pop
pusha
hlt
ret
scas
xor
pushw
adc
xchg
mov
push
insb
mov
fbld
add
xchg
push
cmc
sbb
pop
rorb
xchg
xor
frstor
inc
fisubl
lea
push
sbb
push
aad
add
aas
out
mov
cmp
fdiv
sbb
sbb
cmpsb
ss
add
xchg
insl
fs
adc
push
adc
push
cmp
orl
xchg
mov
imul
mov
movsb
jecxz
mov
fwait
hlt
and
dec
fisubl
fcmove
mov
sub
inc
movsl
and
cmp
iret
int
pop
inc
mov
repz
inc
loop
or
push
fwait
dec
push
push
fmuls
pusha
adc
loopne
icebp
out
sub
int3
enter
dec
pop
or
sbb
lods
mov
test
je
out
xchg
add
lock
jp
popf
mov
inc
icebp
jg
dec
xor
test
cmp
movsl
cld
xchg
jae
mov
add
imul
pop
hlt
inc
lahf
ret
or
xchg
fxch
push
insl
mov
pop
cmp
xchg
outsb
insl
nop
jge
sbb
xchg
mov
imul
add
and
ja
cwtl
fldt
inc
push
dec
xlat
cwtl
push
xor
popa
jae
inc
movsb
aas
movl
lock
push
xor
or
dec
sbb
enter
shl
popf
mov
ret
sbb
into
ret
into
sub
push
adc
test
xchg
dec
and
fildl
into
out
and
in
fisubs
cli
bound
test
and
jmp
and
jno
lret
dec
lods
ja
cmp
mov
aaa
ljmp
call
jns
add
dec
notb
sbb
fisubrl
xor
sub
add
in
fidivs
adc
fstl
cmp
push
dec
push
fwait
mov
std
xchg
pop
adc
femms
xchg
cmp
xor
scas
aaa
pop
mov
fwait
int
fidivrs
movsb
aam
pop
in
je
stos
test
aaa
test
xor
movb
lea
xchg
ja
and
ret
nop
mov
jmp
pushf
push
stos
sub
je
arpl
push
cli
sbb
inc
popa
fildl
and
push
add
pop
js
pop
nop
mov
insl
mov
mov
push
inc
fsubs
inc
mov
sbb
mov
or
add
sbb
pop
mov
nopl
movsb
idivl
sbb
mov
stos
mov
ljmp
cmp
test
xchg
mov
push
mov
pop
push
pop
add
xor
pop
cmp
ds
inc
out
mov
in
push
icebp
push
in
add
xchg
fimuls
test
inc
push
xchg
mov
mov
xchg
fwait
clc
into
sbb
cmpl
cmp
sbb
inc
dec
sub
fisubs
adc
movl
subl
pop
fst
inc
in
lret
mov
lea
out
sub
pushfw
xor
or
in
push
jo
xor
ljmp
inc
out
mov
ja
imull
pop
jecxz
push
adc
into
inc
push
es
loope
loope
jno
cwtl
add
out
lret
adc
mov
and
into
mov
cmp
xchg
sub
inc
outsb
inc
scas
mov
stos
add
fisubs
or
adc
lahf
shlb
fwait
fs
mov
stos
push
pop
sahf
fs
sbb
and
jno
push
lret
sbb
fldenv
outsl
in
daa
repz
cmp
xchg
in
int
sti
lds
pop
or
cli
mov
add
rcrl
pop
loop
loopne
fwait
stos
adc
into
inc
inc
enter
out
sub
mov
sbb
popf
xchg
es
jmp
push
mov
iret
fs
pop
fcompl
lds
and
xchg
sub
fwait
and
pusha
ja
jge
inc
loop
int
aas
loopne
pop
ja
mov
shll
cld
hlt
ret
sbbl
jb
mov
dec
cltd
push
enter
lods
mov
and
jo
dec
jl
sbb
xchg
std
sbbb
cmp
cmp
adc
test
fsubrl
imul
test
aas
call
fidivs
imul
das
arpl
cmp
into
xorb
lods
ljmp
mov
fwait
cmc
mov
xchg
sbb
ja
adc
or
sbb
push
sbb
jnp
je
push
or
jae
outsl
divps
add
jnp
test
dec
dec
add
daa
cmp
ss
lds
push
xlat
xchg
xchg
xor
hlt
lahf
mov
in
jle
dec
ja
hlt
aad
add
adc
cltd
mov
repz
push
add
mov
out
rclb
mov
push
shlb
in
ret
add
mov
int3
nop
jmp
and
mov
mov
cmp
sub
pushf
and
lock
mov
loopne
outsb
je
mov
xchg
in
scas
es
jne
mov
adc
xchg
icebp
sahf
dec
push
das
insb
mov
mov
fdivs
cmc
lds
and
dec
mov
testb
in
dec
xchg
call
fcoms
inc
xor
imul
xchg
mov
rep
adc
mov
insb
push
insl
mov
aam
inc
sbb
pop
out
sub
nop
das
inc
jns
mul
jle
pusha
jne
insb
mov
add
repnz
mov
pop
in
or
dec
fisubrs
ss
faddl
sbb
mov
ss
xchg
xchg
lds
push
cwtl
inc
push
add
cmp
call
mov
inc
cli
dec
in
roll
push
xor
pusha
dec
mov
lods
arpl
daa
stc
xchg
outsl
mov
mov
out
jp
add
jno
test
in
sbb
out
fwait
sbb
sub
ret
push
adc
mov
orl
xor
xchg
mov
mov
ss
movsl
xor
push
cmp
cmp
add
xlat
push
sbb
push
jns
add
call
arpl
pop
popa
dec
jne
pop
jb
or
xchg
add
push
stos
les
jge,pt
lcall
adc
pop
fs
sub
xchg
dec
mov
pop
in
and
dec
popa
cmpsb
repnz
xchg
mov
mov
iret
out
inc
push
test
pop
xchg
xchg
jnp
shll
adc
fistl
loop
mov
inc
push
mov
dec
xchg
mov
mov
jecxz
cwtl
rcll
xor
add
lods
mov
pop
push
adc
insb
lret
inc
jle
nop
adc
dec
mov
fcomps
in
pop
xchg
dec
dec
mov
jnp
pop
sub
ret
stos
fstl
addb
xlat
sub
pop
sub
ret
ss
mov
call
rolb
cmp
xchg
cmp
and
es
mov
insb
push
xor
mov
lret
movsl
sub
push
add
xor
movsb
ljmp
or
nop
aas
addb
push
xlat
sub
cmc
mov
jbe
loope
out
cli
push
cmp
fcmovbe
js
and
test
mov
or
dec
push
sub
push
or
out
movsb
dec
and
stos
dec
arpl
repnz
or
movb
scas
lods
jl
cwtl
sti
cmp
sbb
dec
std
ret
fstp
add
sbb
xor
adc
loope
lds
out
dec
sub
cmp
loopne
popa
std
inc
push
arpl
bound
cwtl
sbb
scas
adcl
mov
sub
cltd
clc
shl
movsb
adc
mov
cmp
sub
adc
jo
popa
fnop
or
add
enter
aaa
or
test
inc
mov
cld
icebp
mov
pop
mov
mov
push
sub
sub
iret
jl
add
popa
cs
repz
xor
lock
es
cwtl
mov
filds
lock
int
ljmp
std
fdivr
pop
and
dec
push
pop
in
outsl
or
rcll
sbb
fwait
ret
arpl
fmuls
out
fnstenv
pop
dec
out
sbb
inc
ret
inc
push
xor
mov
pop
add
outsl
dec
add
arpl
adc
ret
out
in
or
into
dec
inc
outsl
pop
nop
imul
lahf
pop
sbb
xor
and
add
test
mov
cmp
xchg
pop
cltd
add
pop
and
out
mov
and
push
and
sub
fsubrs
add
mov
cmp
mov
mov
inc
fidivl
xchg
adc
add
shll
rcr
mov
cmp
pop
mov
aad
repnz
push
jae
idivl
std
repnz
imul
arpl
mov
popa
lds
ds
pushf
cmpb
xchg
push
imul
movsb
inc
loop
pop
test
fnsave
push
xchg
jl
mov
test
and
out
push
rcll
std
popa
popa
mov
dec
jno
cli
xchg
pop
shlb
push
out
cmp
imul
in
xchg
xchg
mov
lods
xchg
stos
or
ds
mov
dec
sbb
xchg
testl
out
dec
inc
inc
popl
or
in
cli
pop
insb
bound
dec
ja
aaa
test
adc
stc
or
and
mov
in
push
in
lret
sub
sbb
test
jl
xor
inc
inc
mov
lds
xlat
jg
add
sub
pop
cs
fwait
lret
pop
xlat
sbb
pop
cld
or
sbbl
xchg
mov
imul
rcll
jle
lret
ss
and
dec
dec
xchg
ljmp
dec
daa
adc
push
add
sbb
pop
inc
pop
arpl
lock
js
cmp
sbb
lcall
xlat
xchg
cs
push
push
mov
mov
lods
es
xchg
push
adc
icebp
out
leave
movsl
in
inc
in
mov
into
in
sbb
sahf
in
sub
mov
aam
je
jecxz
fwait
cwtl
sub
sub
inc
ret
push
push
mull
jae
sahf
movb
test
into
mov
std
xor
ja
dec
std
mov
je
jbe
cmp
addr16
lea
dec
cmp
dec
lds
into
dec
mov
or
mov
mov
cmpsb
sbb
pop
lret
sbb
test
push
jmp
orb
inc
or
mov
loope
cmp
aaa
xchg
jle
mov
test
pop
sbb
xchg
jle
lahf
push
test
movnti
jl
inc
push
dec
pop
ret
fwait
cli
dec
mov
mov
icebp
cli
pop
jle
dec
sahf
fnstsw
pop
iret
hlt
call
lahf
push
pop
sti
mov
daa
aaa
inc
rorb
mov
xchg
movsb
and
inc
mov
mov
dec
jp
adc
ds
adcb
aaa
xor
cmc
in
mov
out
mov
or
add
mov
out
testl
dec
adc
push
sti
fdivrp
add
inc
adc
mov
sub
jmp
sbb
sbb
or
arpl
shrl
daa
cmpsb
sbb
test
adc
xchg
pop
dec
add
iret
xchg
ret
nop
xor
movl
jno
xchg
mov
inc
test
daa
adc
xchg
push
pop
imul
out
adc
mov
xchg
push
lahf
inc
jnp
mov
pop
into
outsl
sti
push
jbe
sub
cwtl
out
pop
push
lcall
xchg
mov
jb
cmp
inc
mull
in
or
xor
lret
or
lea
or
mov
rol
dec
ret
aad
call
jne
push
dec
int3
and
pop
jb
xchg
lds
js
jne
dec
push
shrl
mov
inc
or
call
xchg
cli
fs
cmc
lds
sbb
call
insb
cld
mov
cmp
or
in
adc
scas
rcr
push
daa
in
push
cmpl
imul
in
insb
scas
sub
xor
mov
jns
cmc
push
pop
xchg
cmp
lods
outsl
ja
adc
lea
call
in
imul
mov
or
inc
ret
dec
and
pop
xor
sbb
clc
pushf
popa
lock
push
fwait
pop
aad
or
pop
pop
pop
rcll
fstl
out
xorl
outsl
cmp
fs
cwtl
lock
fcomps
and
sbb
rcl
jne
stos
imulb
fisttpll
dec
or
fdivrl
sbb
push
movsb
stc
test
sti
fistpll
addb
xchg
insl
and
add
inc
imul
dec
inc
cltd
out
push
sti
in
out
pop
add
lds
cmp
mov
or
mov
add
insb
out
or
je
rolb
sbb
add
lahf
xor
mov
push
sarb
xor
mov
xor
loop
and
imul
stos
test
jp
mov
aaa
test
std
sbb
test
mov
inc
imul
ja
loop
push
inc
lahf
pop
fcompl
dec
inc
jl
jb
loope
nop
xlat
xor
pop
adc
sbb
push
enter
popa
cmp
in
dec
cmp
add
mov
mov
fnop
dec
stos
dec
adc
imul
jo
loope
bound
xor
mov
xor
dec
jle
loopne
jmp
lock
jp
mov
adc
int3
mov
mov
mov
sbb
push
push
cmp
mov
sub
out
fucomp
push
call
call
arpl
mov
ds
or
iret
dec
imul
imul
or
jge
jl
popa
jecxz
lcall
jge
and
pop
jns
leave
sub
lret
in
stc
jp
loope
adc
sbb
aas
adc
mov
mov
xchg
std
mov
sbb
or
lock
fs
cmp
leave
jnp
and
fidivrs
bound
sahf
jecxz
movsl
or
ljmp
gs
mov
push
dec
mov
mov
push
push
mov
cmp
jp
out
inc
push
mov
cmpsb
cmp
inc
sahf
xor
jp
add
insb
fnstcw
std
out
pop
movsb
insb
cmp
lods
add
pop
add
cmp
insl
or
lock
mov
sbb
pop
andb
inc
and
inc
sbb
mov
pop
mov
cmc
ja
imul
xchg
loopne
fisttpl
pop
pushf
push
pusha
adcb
dec
cmpsl
xchg
imul
cld
add
lahf
fdivl
mov
add
fucom
aas
fildl
lods
add
hlt
cmpl
jae
ja
arpl
daa
int3
add
inc
add
sbb
xchg
shll
jne
data16
adc
sbb
mov
stos
icebp
mov
dec
rolb
mov
ds
popa
cmp
cmp
mov
stc
gs
adc
push
add
inc
push
dec
popa
mov
jns
ljmp
lret
inc
das
addr16
into
mov
cmp
mov
int3
xchg
jbe
pop
mov
das
and
inc
hlt
imul
cld
mov
sbb
push
cmp
dec
pop
jb
ret
cmp
ret
inc
insl
sub
xlat
and
add
sbb
cmp
add
sbb
orl
rclb
popl
and
mov
or
pop
xlat
sbb
jns
jmp
roll
test
xor
lock
daa
int
movsb
imul
ret
test
adc
pop
cld
cmpsb
loop
add
int
dec
repnz
mov
cwtl
mov
imul
outsl
mov
mov
shl
lahf
dec
out
sbb
mov
jmp
add
inc
push
iret
xchg
mov
bound
arpl
cs
and
add
pop
leave
icebp
daa
sub
xchg
rcrl
orb
loope
js
xchg
push
cmp
je
inc
sub
xor
in
push
and
xchg
in
insb
repnz
into
in
xchg
mov
inc
arpl
sub
and
xchg
mov
mov
imul
sub
sub
cmp
and
test
paddsw
jo
mov
mov
push
loop
out
or
andl
adc
test
call
aas
jl
stos
add
fiaddl
sub
aaa
inc
outsl
adc
cmp
loopne
jo
jecxz
mov
out
mov
ss
loop
xlat
cli
das
test
pop
mov
add
outsb
scas
loope
sti
fwait
cmp
jecxz
enter
cli
aas
push
or
fs
sub
arpl
and
fs
push
dec
mov
jne
dec
sub
xor
or
and
dec
xchg
inc
inc
popa
push
cmp
dec
xor
movsb
mov
ds
mov
call
sub
pushf
and
addr16
push
xchg
outsl
sub
jl
mov
xchg
inc
adc
xor
mov
dec
sub
or
sub
sti
movsl
pop
add
outsb
add
in
xorl
adc
mov
fildl
dec
jns
aaa
jb
mov
xor
lahf
stc
int
movsb
sub
adc
popf
push
shlb
js
xor
test
pop
int
fsubl
out
lcall
lea
mulb
xor
stos
icebp
roll
aaa
xor
clc
out
mov
lret
mov
sbbl
pop
inc
aas
fwait
xchg
sbb
pushf
fwait
push
testb
sbb
mulb
xlat
push
mov
arpl
das
lds
dec
xchg
pop
dec
pusha
mov
in
sub
fwait
and
aam
sub
in
fistpll
sahf
out
mov
pop
and
cmpb
xor
inc
js
mov
or
movsl
mov
das
mulb
xabort
hlt
mov
mov
out
cmpsl
jle
pop
fwait
fwait
xchg
testb
add
cwtl
icebp
mov
xor
out
jbe
jne
or
stos
cli
imul
cs
enter
mov
jmp
jbe
sbb
push
imul
outsl
rorb
nop
jmp
fisttpl
test
das
xor
int
mov
insl
loop
les
push
mov
jmp
and
jnp
es
mov
hlt
cld
scas
adc
push
mov
jo
ret
ja
aam
popf
daa
sbb
jle
adc
test
repz
pop
aam
in
mov
dec
arpl
mov
stos
out
dec
hlt
jp
pop
ret
cs
out
ficomps
jle
ss
mov
fsubs
imul
hlt
xchg
ja
sbb
adc
in
lcall
pop
sub
push
and
sub
cmp
mov
int
jl
jmp
imul
movsb
mov
push
push
loope
repnz
dec
into
lcall
push
leave
adc
or
xchg
xchg
pop
lcall
lods
sbb
jno
ljmp
in
in
mov
push
mov
sbbb
in
test
pop
loopne
dec
add
ret
cmpsb
pop
xor
nop
jg
adc
mov
lret
lods
test
xchg
mov
movsb
lret
insb
xchg
adcl
lahf
adc
sbb
imul
cld
xor
ds
pop
xlat
push
scas
jp
popf
adc
adc
mov
adc
loop
sbb
dec
popf
xor
pop
dec
cmpsb
add
jle
outsl
sub
js
imul
xchg
mul
dec
push
fs
mov
push
test
fildll
add
daa
sbb
cld
lcall
xchg
push
cs
popa
test
sub
inc
adc
fldcw
int3
stos
adc
stc
adcb
push
inc
lahf
iret
cmpsl
pop
inc
add
jp
subl
add
jno
jle
xchg
add
adc
fcomip
jno
lock
aam
fcmovnb
inc
cmp
xor
sti
cli
or
mov
fdivr
push
adc
mov
mov
cmp
rcrl
or
hlt
push
inc
dec
pop
mov
mov
mul
adc
jmp
sbb
or
inc
test
sahf
fdivs
xchg
sub
pop
jb
nop
pop
inc
inc
aam
mov
icebp
cmp
stos
xchg
lcall
lahf
iret
sbb
pop
mov
or
insl
add
add
jne
and
and
shl
adc
xor
insb
jno
stos
xchg
mov
idivb
inc
inc
outsl
and
aad
jmp
dec
idivb
or
cmp
divl
insl
test
adc
in
mov
ret
in
aaa
add
mov
and
pop
push
ficomps
sbbb
xchg
je
push
ljmp
ds
stc
lahf
push
test
inc
push
ret
imul
aam
inc
sub
xor
push
and
popf
xor
dec
and
decl
jecxz
in
mov
or
lods
shl
scas
push
rcrl
xchg
call
mov
stc
add
jecxz
mov
push
lds
lret
xchg
adc
cmp
mov
rol
pusha
popa
psrad
dec
call
adc
mov
stos
mov
pop
sbb
or
push
sbb
mov
jp
adc
aam
pop
in
fldenv
push
mov
shll
jno
pop
mov
shl
cmpsl
push
arpl
xor
pop
cmpsl
pop
icebp
orb
or
pop
lret
jge
sub
push
enter
push
lods
inc
mov
and
leave
fmuls
cltd
mov
xor
and
or
sbb
inc
test
mov
cmpsl
push
add
mov
decb
outsb
sub
lret
cwtl
rcrl
ljmp
into
mov
sub
arpl
inc
fwait
enter
mov
lds
mov
not
iret
pop
push
idiv
or
inc
ljmp
daa
pop
sub
sub
mov
push
insl
fwait
movsl
bound
push
popf
cli
iret
push
sub
icebp
addr16
jl
int
popa
gs
push
inc
add
mov
jmp
xchg
push
or
hlt
mov
mov
sub
fs
mov
mov
ljmp
jnp
adc
lds
or
iret
in
filds
inc
and
mov
stos
adc
push
mov
jbe
mulb
fbstp
shl
dec
sti
cltd
or
test
shlb
enter
inc
xchg
in
popa
sbb
adc
in
idivl
in
in
pop
push
sub
cmp
cmpsl
loope
jns
xor
in
lea
add
sub
adc
mov
dec
push
xchg
pop
stos
rcll
jns
dec
jg
or
push
fsubrl
in
push
les
popf
scas
outsl
lahf
roll
sub
sub
add
dec
xor
inc
mov
in
shrl
xchg
sub
mov
pop
xchg
sbb
in
mov
rcrl
push
inc
loope
aad
mov
push
iret
sar
pop
add
inc
repz
imul
pop
add
popa
jnp
push
and
aam
cmp
and
loop
cld
add
iret
movsb
insb
ret
imul
dec
cmpsl
fisubl
repnz
pushf
mov
divl
ret
stos
lret
xor
test
jno
aam
cltd
jns
xor
push
testb
inc
cmp
loopne
movsl
adc
adc
cli
dec
repz
pop
pusha
addr16
inc
mov
xor
lahf
xchg
test
push
sarb
repnz
daa
pop
xor
fld
aad
or
mov
cmp
scas
shlb
cwtl
incl
mov
mov
es
nop
inc
jge
sub
cmp
and
sub
push
imul
pop
dec
xor
cltd
popf
jmp
pop
ds
cltd
or
mov
fiadds
push
inc
int3
rcl
bound
out
mov
test
scas
sti
cmc
aad
dec
mov
mov
mov
lea
sahf
aaa
lcall
out
sbb
cwtl
cltd
arpl
shll
mov
cltd
xchg
mov
xchg
mov
mov
lret
or
mov
xor
cmp
mov
xchg
cltd
notb
movsl
jb
sub
jp
add
lods
adc
cmpsl
ficomps
call
addl
leave
dec
adc
xchg
xor
subl
pop
outsb
and
mov
cmp
std
dec
push
cmp
push
xor
cmc
arpl
mov
scas
jl
repnz
cmp
in
sahf
mov
adc
and
cmp
cmpsl
adc
sbb
dec
sti
jmp
sub
mov
jp
fistpl
push
fwait
test
mov
inc
mov
fisttps
fmuls
imul
sbb
xchg
mov
out
mov
sbb
aad
mov
mov
scas
out
xchg
mov
ss
mov
pop
push
lock
adc
push
pop
adc
imul
xchg
insb
notb
lea
push
jns
xchg
iret
fisttpl
push
addr16
addl
incb
or
push
mov
imul
ja
fcoml
stos
push
xor
dec
addr16
mov
imul
subl
sub
test
cmp
jne
mov
fiaddl
add
xlat
jg
add
and
and
rol
mov
lds
rorb
xchg
sbb
adc
daa
jo
xchg
pop
gs
mov
fstpt
inc
fwait
or
jae
movsb
adc
mov
push
xchg
or
repnz
inc
xor
rcll
xor
pusha
test
adc
int3
sub
push
mov
shlb
icebp
outsl
movl
pop
pop
movsb
stos
aad
aas
or
lods
in
jb
sbb
movsl
mov
jns
dec
flds
sub
les
mov
mov
xor
jo
push
subl
adc
aad
mov
fmuls
stos
movsl
mov
in
dec
pop
mov
daa
and
add
jl
mov
stos
inc
jo
and
ret
sahf
or
and
popf
jg
dec
dec
bound
pop
or
dec
scas
popf
hlt
pop
push
push
pop
lds
jns
and
cli
jno
stc
fs
inc
push
ljmp
cld
mov
insb
xor
pop
sub
pushl
xchg
lret
jmp
xor
pop
xor
in
sbb
mov
faddp
fs
imul
enter
shll
je
hlt
shl
ficomps
aas
cmp
push
adc
cmc
adc
clc
jns
in
cwtl
sub
popa
xchg
test
push
adc
xor
ds
cmp
ljmp
mov
xchg
fcmovb
push
lahf
jb
cs
mov
lahf
jge
mulps
inc
and
push
add
cmp
add
mov
aad
adc
fistl
mov
pushf
jnp
movsb
and
iret
dec
and
cld
pop
pop
lock
fcomps
cmpb
icebp
inc
lcall
pop
xor
xchg
lahf
inc
js
repz
gs
movsb
adc
fildl
mov
out
sarb
add
loop
rorb
xchg
sahf
mov
dec
arpl
jne
jno
cmp
faddp
sub
shl
pusha
inc
add
jge
xchg
sub
test
aad
mov
pushf
hlt
xchg
sbb
fsubrs
inc
out
mov
and
idiv
mov
dec
sbb
cmpb
add
and
push
xor
sub
add
mov
sahf
inc
sub
test
mov
lahf
aad
push
ds
or
fs
dec
adc
sbb
sub
movsl
and
push
cmp
or
aad
xor
push
imul
lds
cmp
xor
dec
dec
pop
lcall
sbb
sahf
and
aam
es
or
cmc
out
pop
mov
push
mov
add
xchg
push
xchg
xor
out
xor
notb
and
cwtl
mov
repz
shrl
pop
push
push
fcoms
mov
lahf
hlt
or
int
iret
repz
dec
pop
mov
test
es
push
lds
into
push
stos
and
pop
bound
cwtl
push
out
into
mov
dec
adc
jbe
cmp
mov
rcl
lcall
inc
inc
scas
mov
addr16
jns
repnz
stos
sub
lahf
aas
dec
pop
or
inc
fxtract
mov
jns
ljmp
lods
jl
fwait
stos
std
mov
mov
and
mov
mov
push
adc
cwtl
adc
mov
mov
int3
sub
rolb
jp
xchg
aad
or
ljmp
insb
inc
cwtl
pop
mov
fwait
and
cmp
jle
cltd
je
iret
fisubl
repz
cmp
out
call
sbb
push
xchg
shlb
push
mov
cmc
std
addr16
mov
icebp
loopne
mov
pushf
bound
mov
loop
inc
mov
lea
mov
ss
into
ret
xor
dec
jmp
adc
xor
mov
push
adc
sbb
shl
mov
fdivrp
lcall
xchg
data16
sbbl
or
fs
cmpsl
cmp
pusha
lea
pushf
scas
sub
movsb
testb
cmp
dec
cli
inc
cmp
out
mov
sub
fincstp
cmc
adc
out
out
lcall
lret
cwtl
add
dec
ffree
add
pop
sub
pop
fdivp
je
mov
dec
or
test
lret
jle
je
clc
stos
and
test
popf
sub
and
data16
ljmp
mov
xchg
jnp
aaa
les
sub
icebp
fldt
les
int
dec
popa
mov
mov
mov
pushf
cmp
out
rcll
clc
inc
cld
sti
push
fcmovbe
mov
pop
repz
mov
sbb
jno
jnp
mov
scas
lds
lods
add
adcl
mov
jb
dec
aas
mov
push
jb
cmpb
mov
ds
icebp
jo
inc
or
dec
jae
adc
repnz
jno
push
cmp
movsb
addr16
lods
orl
mov
add
rcr
lret
xor
popa
push
pusha
js
mov
jbe
push
sbbl
out
fwait
mov
bnd
ret
mov
adc
inc
jmp
dec
sub
add
and
or
mov
scas
repnz
and
pop
inc
das
mov
jl
and
xchg
in
aas
mov
mov
js
sub
jbe
les
jge
jo
leave
out
popa
ja
sti
and
pusha
ja
and
xchg
mov
sub
add
nop
outsb
and
jge
pop
jle
push
lods
xchg
adc
lret
mov
sub
mov
ret
loopne
lahf
ja
sub
sbb
xchg
repnz
xor
pop
fidivs
jae
sbb
cmpsb
push
frstor
pop
add
push
shll
in
cmp
push
xchg
mov
jmp
xchg
pushf
cmp
sub
dec
bound
cld
xor
cwtl
pop
dec
inc
jle
fdivrs
mov
shll
fs
jno
and
lcall
adc
cmp
ror
pop
mov
mov
or
xchg
into
mov
sbb
adc
hlt
xchg
repnz
scas
jg
loopne
push
out
leave
inc
jno
jbe
icebp
idivl
sbb
stos
dec
push
cmp
test
push
hlt
adc
pop
ja
cmp
fcomps
ret
xor
dec
mov
jl
fsubrl
lea
aad
sbb
gs
inc
clc
jl
pushf
or
xchg
inc
jno
in
loope
in
popa
loop
in
sti
pusha
daa
add
das
mov
notb
xchg
adc
in
sbb
adc
cs
dec
xchg
sbb
jp
or
arpl
cli
or
into
lret
jl
dec
sub
mov
arpl
cmp
jmp
jl
lahf
mov
xor
push
out
inc
xchg
popa
in
stc
dec
movsl
jb
pop
jmp
jbe
pop
jns
sahf
out
fldl
rcll
hlt
test
fdivrs
xor
lret
popf
inc
cli
add
jl
mov
repz
mov
xor
mov
inc
add
jle
xor
cmp
push
call
addr16
pop
mov
mov
mov
stos
shll
je
mov
mov
jl
adc
fidivs
ficomps
xor
mov
std
cld
pop
add
in
sub
notb
jne
jl
sti
sbb
dec
setb
sub
lea
ss
pop
mov
mov
aas
fsts
pop
xor
fmuls
xor
pop
in
negb
push
gs
cmp
sbb
jne
fsubs
lahf
into
popf
sbb
mov
call
aas
pop
sti
push
pop
fs
cmp
pushf
mov
stos
mov
insl
sub
movsl
lea
pusha
aam
jl
daa
out
or
mov
scas
pop
xchg
push
fwait
je
lods
mov
cli
fidivs
addr16
in
imulb
jae
mov
lods
loopne
sbb
inc
xchg
lret
lods
movl
outsl
push
ja
dec
movsb
sub
sbb
mov
xchg
and
inc
inc
call
jecxz
pop
outsb
mov
shlb
adc
cmp
rcrl
push
cmpsl
dec
sbb
inc
cmc
data16
loopne
in
stc
push
sahf
xor
scas
mov
mull
push
xchg
rep
sti
sbb
xor
aas
mulb
ja
mov
xor
adc
aas
mov
add
movsl
jle
cltd
in
sbbb
int3
orb
insl
lods
hlt
cmp
xchg
mov
lea
lret
pop
mov
xchg
add
pop
js
fstpl
into
mov
jle
jne
inc
int
hlt
movb
test
push
repz
in
inc
xchg
data16
xor
and
addr16
pop
cmp
adc
dec
scas
lahf
in
inc
stos
xsha1
cmpsb
iret
jecxz
pop
dec
jo
xchg
or
xor
adc
jle
mov
outsb
xor
cmpb
loopne
dec
xor
ja
stc
add
out
mov
popa
outsl
popa
push
icebp
enter
scas
imul
into
popa
fcmovnu
jle
xor
mov
fnstsw
popf
std
pusha
jecxz
add
dec
mov
lea
xchg
iret
daa
adc
mov
inc
xlat
cmpsl
cmpsl
jae
call
cmp
push
mov
xchg
mov
mov
sub
out
mov
add
stc
jb
fists
dec
or
push
das
add
test
pop
fsub
lea
xchg
popa
sbb
adc
or
mov
fs
xchg
daa
aaa
sbb
xor
push
test
xor
or
cli
out
sar
iret
cmp
imul
cs
fiaddl
addr16
mov
gs
insl
dec
mov
or
inc
jge
xlat
in
sarb
push
cmpsb
push
sub
push
shll
xlat
es
mov
adc
adc
lahf
mov
lods
adc
nop
push
hlt
in
inc
outsl
bound
xchg
add
inc
mov
or
adc
add
fcomps
xchg
mov
push
lret
sbb
jbe
mov
in
pop
sub
cwtl
mov
int
jle
mov
pushf
test
jae
adc
add
mov
cs
pop
ds
or
stos
jp
ja
push
mov
push
daa
pop
jmp
push
cmpsb
cmp
xchg
cmpsl
and
daa
push
xchg
hlt
jns
or
js
xchg
cmc
jo
outsl
push
int
pop
jo
in
sub
dec
mov
inc
xor
push
or
pop
mov
dec
ss
in
jb
xchg
push
pop
outsb
das
jno
xchg
cltd
add
xor
sahf
sbb
ja
push
dec
xchg
jge
iret
sub
ret
mov
mov
xor
inc
ret
inc
and
cmpb
lahf
into
bound
mov
inc
rcrb
cmpsb
xchg
movsb
pushf
sbb
scas
sti
jne
and
add
dec
stos
xchg
lods
in
mov
mov
testl
dec
push
int3
push
fmuls
mov
mov
fidivl
push
inc
adcl
daa
xor
cs
cmovne
push
aaa
addb
jo
sbb
sti
roll
cmc
xchg
adc
jle
xor
icebp
stos
jnp
iret
xchg
push
adc
in
inc
ja
dec
dec
mov
pop
xchg
test
or
fisubs
mov
ret
dec
lods
and
test
mov
fistpll
hlt
xchg
out
pop
out
scas
ja
mov
fmulp
pop
mov
push
out
das
push
in
enter
xchg
test
mov
mov
add
or
push
and
fistpl
clc
int
sbb
adc
cmpsb
aad
sub
adc
and
call
add
pushf
xchg
sub
es
subb
std
cmp
int
sbb
inc
and
aas
xchg
push
xor
jo
pop
lahf
scas
sbb
gs
dec
jnp
sub
sub
jb
mov
sbb
xor
xchg
cmp
mov
or
leave
push
icebp
sbb
lret
jae
mov
repz
dec
repz
arpl
jmp
push
dec
fsubp
sti
sbb
lret
dec
andl
sti
lods
aaa
dec
sti
lret
ss
aad
pop
jo
int3
lea
mov
pop
cmc
sub
popa
mov
hlt
addr16
fldenv
out
mov
jp
pop
pop
scas
xchg
mov
push
das
pop
clc
outsb
jl
cmp
sar
push
inc
rcll
repnz
lret
xor
sub
je
lret
outsb
dec
out
mov
mov
jecxz
mov
hlt
cvtps2pi
loop
enter
clc
jo
cmp
and
dec
mov
sub
loop
dec
dec
cmc
notl
and
mov
and
pop
jecxz
sarl
xchg
test
repnz
adc
xchg
mov
jae
mov
add
shrb
lods
inc
push
pop
push
cltd
pop
xor
or
push
and
shlb
out
mov
cmp
jge
mov
jae
pop
negb
jnp
int3
scas
sbb
cmp
loope
mov
ficoms
movsb
push
mov
add
push
push
pop
inc
imulb
jbe
les
ror
fwait
inc
dec
push
inc
mov
mov
repnz
call
adc
es
sarl
mov
push
mov
pop
sbb
fcmovnbe
dec
mov
fsubr
mov
adc
push
dec
in
orb
push
ret
xchg
lods
mov
ret
fneni(8087
or
or
xor
pop
gs
icebp
sub
pusha
push
jp
and
adc
repz
bound
leave
iret
test
sub
sbb
dec
pcmpeqb
mov
ficoms
mov
dec
dec
adc
dec
push
sbb
adc
pusha
sub
or
mulb
mov
aad
aad
jge
xchg
mov
xlat
into
fistpl
hlt
mov
iret
xchg
or
cs
cmpsb
mov
loopne
mov
cmc
mov
sbb
dec
es
mov
cmp
stc
xor
repnz
or
xor
inc
sub
popf
pusha
adc
lea
sub
imul
loopne
or
adc
loop
cmp
jge
orl
cmpsb
dec
mov
add
and
movsb
mov
mov
lds
or
out
lret
jecxz
mov
pop
mov
adc
outsb
xor
pop
cld
insb
inc
or
add
cs
add
inc
xor
pop
fsts
mov
and
loope
and
jnp
test
dec
in
or
inc
add
or
pop
cltd
xor
fisubl
push
sub
cmpsl
mov
mov
addb
hlt
push
mov
xor
pop
sub
lcall
out
pop
xchg
adc
inc
nop
jbe
jb
push
les
cmp
scas
rorl
pushf
dec
xchg
push
lods
out
andb
in
int
repnz
or
adc
ja
inc
loop
jb
shlb
jg
push
fsubl
cmp
ljmp
std
add
test
jl
push
in
cmp
xor
jmp
cs
inc
dec
mov
cmpsb
lcall
and
lcall
and
cmp
fs
fcoml
dec
jno
jge
add
jno
cwtl
jnp
insl
je
xor
cs
in
lahf
mov
mov
or
std
pop
jo
xor
pop
jg
cmp
out
cs
jge
mov
mov
mov
sub
push
xor
mov
loop
mov
cs
imul
push
inc
push
mov
into
jp
jns
pop
dec
push
addr16
xor
addb
jae
in
clc
int
pushf
inc
jp
xor
incl
bound
daa
outsl
push
mov
das
fsts
mov
addl
mov
mov
leave
dec
in
cld
call
mov
bound
push
add
mov
fisttpl
into
add
adc
xchg
pop
mov
in
ret
xlat
out
xor
mov
stos
call
adc
into
pop
outsb
add
push
push
inc
mov
adc
xchg
call
stc
push
rcr
adc
inc
xor
sar
or
push
sub
jmp
inc
bound
fwait
and
or
fstl
pushf
jl
pushl
add
xchg
mov
fistpll
pop
jecxz
inc
jb
adc
sub
xrelease
jae
movsb
push
mov
cmpsl
clc
jge
out
mov
arpl
jbe
xchg
xor
push
loope
sbb
and
test
imul
aaa
and
xchg
not
mov
lea
lods
ret
mov
fldlg2
out
push
or
fistl
stos
xlat
add
xor
or
leave
add
in
fcmovu
aas
ds
iret
pop
test
cmp
ds
outsb
test
stc
and
lock
mov
in
mov
mov
lods
icebp
in
cmc
xor
fildll
add
rcrb
add
je
outsb
dec
or
jle
mov
lea
dec
arpl
imul
addl
add
ret
dec
ljmp
std
orl
fwait
xor
in
sbb
cmp
test
cwtl
shlb
out
cmp
push
sub
outsb
pop
or
dec
imul
xchg
les
jmp
cli
inc
add
cmpsl
imul
mov
sbb
popa
enter
movsb
shlb
pop
lea
jno
lock
int3
mov
or
or
xchg
push
pop
or
xchg
add
hlt
cltd
mov
fcompl
and
or
add
mov
fsubl
sbbb
sub
mov
fcmovnbe
pop
dec
mov
aaa
in
flds
jmp
in
inc
lret
paddusw
lret
std
lcall
movsl
xlat
idivb
jne
insl
push
fiaddl
aaa
loop
push
sbb
sahf
popf
gs
aam
sbb
rclb
rcll
push
cs
sbbl
in
inc
inc
xchg
jbe
push
shlb
jnp
lods
lcall
and
fcomps
enter
test
push
mov
jge
fisttpl
pop
add
cs
out
mov
push
aas
mov
or
cwtl
xchg
in
leave
ret
test
outsb
inc
dec
out
arpl
pushf
test
xor
divl
add
adc
gs
int3
test
mov
dec
lcall
scas
sti
or
arpl
scas
imul
mov
dec
xchg
inc
sub
in
jge
xchg
xor
push
clc
stos
mov
mov
or
push
cmp
sub
mov
and
jge
orb
cld
aaa
lret
adc
mov
push
jle
dec
icebp
arpl
mov
shlb
int3
out
out
cmp
loope
sbb
cmpsb
icebp
js
test
mov
jbe
mov
xor
aam
and
fcmove
fdivl
mov
xchg
inc
push
call
faddl
jne
ret
mov
push
adc
les
xor
mov
push
rcrb
ret
cs
scas
mov
xor
cs
lods
js
pop
pop
std
clc
fmul
jl
cmpsl
into
add
or
sub
es
int3
mov
call
xchg
fisubl
ret
mov
leave
mov
pop
or
mov
movsb
aas
mov
push
xchg
mov
iret
cld
mov
sbb
aaa
adc
inc
out
insb
pop
cmp
iret
sub
mov
mov
and
sbb
loop
enter
mov
cmp
add
or
imul
out
dec
mov
or
push
adc
out
jmp
adc
lea
sbb
cmp
push
jg
dec
fimull
xor
loop
jbe
sub
lds
xchg
addr16
inc
out
sub
sub
das
push
xchg
or
or
scas
sbb
test
mov
ret
pop
dec
shrb
test
push
sbb
pop
and
test
fisttps
xchg
in
ds
add
mov
jl
pusha
subb
mov
imul
test
sub
sub
aas
fsts
xor
push
mov
movsb
jbe
testl
push
mov
push
push
pusha
test
push
or
lret
inc
jle
sahf
dec
push
inc
or
inc
cmp
das
leave
ljmp
jp
iret
data16
nop
negl
je
scas
lods
cmpsl
jle
cmpsb
pop
fsubrs
in
sub
adc
rclb
mov
sti
cmc
dec
lret
movsl
xchg
stc
inc
rcrl
and
pop
stos
sub
sub
ds
int3
mov
nop
roll
stc
mov
out
lahf
leave
popa
or
add
clc
xchg
leave
push
shlb
sub
xchg
sub
fst
idiv
ficoml
sbb
outsl
lea
in
mov
sbb
dec
rcll
push
pop
push
pop
sbb
jae
xlat
jecxz
inc
lahf
scas
lea
jns
into
add
popa
mov
add
push
sub
adc
outsb
jnp
out
jne
jnp
adc
add
and
int
add
es
fcoml
mov
push
inc
dec
mov
jnp
sub
cld
sub
add
std
and
loope
gs
nop
out
and
cwtl
scas
adc
cmp
mov
cmpl
clc
iret
iret
inc
sahf
dec
jno
in
jge
dec
push
imul
or
je
add
pop
shlb
xchg
cld
out
enter
cltd
lea
pop
jbe
les
add
mov
jne
jle
arpl
rol
dec
hlt
push
or
out
pop
xchg
mov
and
divb
mov
ficoms
jbe
sub
jns
cmp
mov
dec
out
cmpsb
ss
repz
or
and
sbb
stc
loopne
pop
lcall
xor
std
mov
mov
aas
insb
xlat
jbe
pusha
sbb
jmp
jg
cltd
pusha
es
ljmp
cwtl
pushf
in
outsl
jns
cwtl
arpl
xlat
push
dec
das
lock
cmpsl
xor
push
aam
outsl
xchg
out
xor
jne
loop
push
pushf
popa
fwait
add
dec
outsb
lods
notl
cmp
lds
pop
xor
dec
mov
xchg
push
call
lret
adc
pop
lahf
sub
push
mov
xchg
jae
mov
mov
jb
pop
andl
test
nop
ja,pn
lods
sub
loopne
test
adc
mov
lcall
int3
cmp
nop
fimull
xchg
ret
and
shll
mov
mov
nop
or
inc
lods
out
push
xlat
sti
and
xchg
cmpsl
sbb
int
and
std
mov
cmp
mov
test
mov
es
add
ss
ds
push
xchg
push
push
xor
cmpsl
fidivs
or
movsl
xchg
jle
or
pop
stos
cmpsb
xchg
and
mov
mov
mov
mov
pop
cmp
popf
mov
dec
jl
pop
mov
jl
jb
dec
fwait
cmp
cs
mov
mov
adc
cmpb
popf
std
inc
xchg
fistpl
test
lret
mov
jae
outsb
mov
xor
stos
pop
jno
push
sub
pusha
add
ficoml
or
mov
fsubrp
dec
aad
mov
dec
dec
xchg
xlat
push
inc
or
xchg
adc
xchg
jns
sbb
or
mov
cmpsl
cmpsl
jae
sbb
cs
sub
fcoml
loop
push
bound
cmp
lock
cmp
xchg
lds
pop
repnz
push
mov
repnz
shlb
scas
pushf
fistps
ret
insl
jnp
test
stc
jl
subl
fidivrl
je
push
in
dec
jo
rol
outsl
outsb
lds
xor
xchg
mov
testb
inc
icebp
movsb
push
jbe
int3
cmp
xchg
int
inc
out
in
and
fs
inc
fs
lds
or
es
push
leave
lcall
inc
outsl
dec
mov
or
xor
lods
iret
fs
aad
lea
addb
adc
mov
outsb
inc
jae
cmp
int3
mov
into
and
or
out
add
outsb
inc
das
lods
add
out
xor
sbb
cld
push
lock
scas
mov
or
or
movsb
jp
pushf
cmc
std
add
mov
cmp
inc
and
pop
loop
scas
lret
enter
push
idivb
or
pop
add
dec
mov
or
sar
xor
lds
sbb
out
mov
cmp
insb
fstpl
loop
dec
outsb
pop
frstor
aad
dec
push
jns
jns
jne
dec
insl
jecxz
dec
imull
sar
add
dec
sub
fidivrl
aad
sbb
mov
and
pop
dec
jge
mov
pop
movsb
pop
sub
xchg
jmp
ret
push
dec
xchg
xor
sub
dec
jb
sub
daa
and
lds
pushf
xor
xor
xor
lods
jmp
and
sub
xchg
cmp
cld
inc
sarl
in
in
ja
push
or
push
jb
bound
fcompl
mov
adc
xorl
rcr
sub
mov
mov
mov
mov
loop
add
in
imul
imul
xrstor
and
fwait
cmp
in
ds
or
mov
mov
cmp
cwtl
add
ss
xchg
mov
mov
push
xchg
aad
pop
cltd
xor
sbb
lods
pop
orl
mov
inc
insb
or
aaa
daa
andl
pop
jnp
mov
fsubr
add
outsl
mov
xchg
in
and
lock
insb
and
rcrb
cwtl
enter
xor
push
jge
mov
imul
adc
fiaddl
push
mov
iret
into
cmp
jbe
stos
mov
cmpsb
mov
cmp
jbe,pt
jo
loop
ljmp
repz
jno
popf
or
xor
cwtl
vpaddusb
and
test
push
rolb
mov
imul
push
sti
ret
hlt
test
or
cmpsb
cmp
insl
lods
or
fcomps
jl
imul
movsl
scas
lds
mov
cmp
push
insl
rorl
decl
dec
push
adc
je
fiaddl
pop
ret
inc
out
and
aad
pop
fdiv
and
out
sub
rcr
fcoml
hlt
ljmp
pushl
adc
cmp
gs
add
out
and
lds
pop
xchg
stos
insb
cwtl
gs
movsb
ret
inc
das
push
inc
sbb
and
andb
mov
cwtl
mov
in
jge
xor
inc
and
int3
and
fstpl
popf
mov
clc
pop
adc
shll
push
in
or
jae
rcrl
out
pop
xor
inc
outsl
sbb
loope
cmpsl
and
imul
jne
cmc
lret
cmp
sbb
push
incl
or
aaa
add
hlt
ror
push
scas
jne
lods
inc
push
jecxz
jbe
mov
das
mov
push
push
mov
dec
push
or
xchg
into
or
repnz
stc
stc
stc
fisubrl
loopne
push
pop
dec
mov
mov
hlt
lcall
pop
or
adc
xchg
out
dec
in
jecxz
mov
mov
mov
push
xchg
rdpmc
push
jle
fwait
sbb
mov
ds
mov
sub
push
inc
cmp
mov
xor
cmpsl
sbb
in
imul
lea
stos
ss
cmp
aas
lahf
mov
insl
mov
insl
cmp
cmp
mov
push
test
inc
mov
lcall
icebp
inc
xor
xchg
sub
daa
ret
int
mov
or
xchg
mov
mov
push
pusha
mov
outsb
icebp
hlt
adc
ret
cmpb
out
dec
lds
push
test
pop
inc
dec
stos
out
ds
jge
inc
jne
sub
pop
adc
shr
pop
movl
pop
and
je
or
mov
ljmp
mov
aaa
pop
lods
pop
dec
fnstsw
clc
outsb
jo
pop
dec
mov
jo
push
pop
mov
xor
sub
test
and
pop
leave
mov
idivl
test
xchg
add
or
xor
mov
or
dec
add
and
or
mov
push
notl
fbstp
pop
push
gs
fs
movb
pop
push
icebp
test
cltd
test
add
cmp
or
push
and
rcl
cmp
jnp
add
push
dec
add
ror
xlat
cmp
jb
cld
or
or
shll
cmpsb
add
adc
in
mov
clc
xchg
mov
jns
dec
pushf
outsl
cs
dec
and
out
enter
mov
xlat
mov
mov
int
addr16
push
or
mov
xchg
mov
xor
bound
or
int3
jno
mov
push
int
in
les
or
pop
shlb
mov
and
in
out
push
shrb
adcb
sub
iret
cmp
dec
nop
and
dec
stos
push
pop
jns
out
inc
adc
out
jbe
stc
jp
xchg
rclb
jo
loopne
or
mov
xchg
scas
fdivrp
repnz
fs
fwait
sub
push
mov
insb
add
sbb
xor
testl
popa
jnp
mov
mov
ljmp
test
ja
jae
jno
add
mov
into
xchg
jbe
sti
cmc
loop
sbb
mov
mov
shrb
pop
rclb
scas
clc
insb
adc
outsb
dec
sbbb
inc
test
pop
and
xor
call
test
inc
mov
xchg
loopne
ds
cli
insb
push
lret
cs
mov
sti
outsl
inc
ret
inc
jb
push
loopne
cmp
cmpsl
and
cmp
gs
jbe
aam
mov
pushf
mov
test
and
mov
int3
aam
mov
xlat
fwait
inc
stc
jo
sbb
shr
aas
mov
jo,pn
push
mov
dec
adc
xor
loop
mov
pop
js
loopne
sub
sub
outsl
mov
inc
lahf
shufps
sbb
adc
rcl
scas
pushf
je
jmp
xchg
add
mov
sub
out
aam
dec
push
stos
jo
repz
push
ss
add
xchg
aam
dec
mov
inc
mov
ds
dec
imul
daa
mov
xchg
aad
add
inc
aaa
pop
test
in
sub
inc
xchg
dec
popa
mov
inc
or
nop
ja
adc
movl
stos
mov
cmp
jns
inc
and
sub
mov
clc
leave
call
dec
add
mov
movsb
pop
int
insb
mov
in
es
stos
mov
or
mov
pop
push
cld
push
jb
insl
ja
sbb
cwtd
xor
mov
jmp
cmp
out
loope
loope,pt
sarb
cmp
mov
mov
xor
cmpsl
int
dec
pushf
movsb
loope
jp
sub
push
repnz
mov
push
dec
sub
loopne
popa
mov
mov
and
push
add
adc
repz
mov
sbb
cld
mov
gs
inc
daa
xor
popf
sar
sub
push
daa
orl
das
movsb
imul
mov
pop
jo
test
cwtl
cmp
jo
mov
mov
add
or
and
fcomi
imul
arpl
cmp
jb
stc
jo
adc
mov
xor
xchg
jge
pop
fisttpll
pop
xlat
enter
insl
test
loop
sbb
test
mov
mov
pop
mov
pop
divb
jae
sbb
pop
lods
dec
inc
je
daa
outsl
aas
and
xor
js
cmpsl
stos
xor
dec
out
pop
inc
jno
mov
xorl
inc
movsl
sub
push
cli
cmp
fldcw
push
rorb
bound
imul
lahf
ficomps
sti
mov
xchg
sub
cmp
inc
into
lea
lcall
or
ja
ficoml
negb
pop
sbb
mov
or
aad
sub
inc
int3
pop
pop
jecxz
lea
mov
mov
pop
inc
push
dec
mov
dec
mov
dec
dec
or
mov
mov
lods
inc
pushf
xor
sbb
ljmp
jo
clc
insb
movsb
scas
jmp
in
shlb
popa
movsb
mov
push
pop
jmp
je
rorb
cmpsl
sbbl
mov
sub
into
out
imul
shrl
push
cmpl
idiv
flds
jp
push
pop
and
stc
jbe
or
mov
out
mov
sti
sbb
mov
test
pop
mov
jno
push
xor
stos
jns
inc
test
ljmp
std
call
arpl
sbb
imul
fimuls
fldl
outsb
fisubrs
push
out
in
add
sub
cmp
mov
out
lret
jg
cmp
mov
fdivrs
cmp
jle,pt
sbb
cmc
or
and
push
sbb
dec
inc
fsubr
jbe
mov
jl
fistps
je
mov
aad
rorb
test
mov
rclb
hlt
adc
repnz
dec
add
xor
push
cmc
iret
fcmovnb
fsubs
push
inc
ret
vphadduwq
lds
xchg
add
rolb
gs
xchg
xchg
fwait
mov
cwtd
cmp
jo
xchg
push
mov
push
xchg
sar
mov
shlb
and
je
xchg
nop
fstpl
push
add
ret
mov
sbb
fbstp
sbb
xor
stc
xchg
aad
int3
jle
rcrb
dec
cmc
cltd
dec
test
mov
mov
and
mov
inc
addr16
clc
stc
jle
sti
out
mov
sbb
imul
mov
fs
mov
in
inc
mov
pop
pop
scas
arpl
or
inc
pop
scas
fistl
pop
jecxz
push
mov
push
outsb
sub
inc
jp
and
push
adc
pop
out
xchg
xchg
mov
out
xor
xor
test
push
push
mov
lds
adc
jg
mov
push
movsb
es
adc
xchg
push
arpl
int
pop
mov
pop
pop
shrb
push
cmp
inc
aas
shll
mov
adc
movsb
jb
movsl
adcb
cmp
mov
enter
orb
dec
lea
adc
loopne
loopne
push
and
lret
cmp
sti
sub
or
inc
cmp
popf
pop
fstl
add
jb
jl
js
call
mov
jo
movsb
mov
sub
jbe
shl
pop
ja
js
sub
xchg
repz
xor
cmc
and
lahf
sub
aad
loope
jno
out
int3
dec
out
mov
cmc
ret
jo
call
push
rorb
xchg
je
push
jae
mov
adc
xor
or
and
popf
jo
xor
xchg
loop
xchg
push
sbb
ja
leave
xchg
leave
push
add
add
push
fsubrs
sti
test
dec
sub
mov
jb
stc
and
daa
out
add
inc
andb
mov
fimuls
repz
sbb
lods
dec
popa
xchg
in
test
fsubs
cmp
xchg
call
sbb
bound
test
das
dec
and
insl
sub
es
imul
orb
ficoml
xchg
ljmp
sbb
cmp
dec
mov
push
dec
gs
lods
movsb
lahf
xchg
jge
sub
push
mov
popa
push
mov
push
inc
xor
jb
mov
and
fcompl
mov
mov
cwtl
sbb
push
lahf
pusha
or
dec
jb
hlt
pop
lock
out
xchg
xor
jl
inc
enter
cwtl
adc
xor
jle
and
cmp
int3
dec
sti
add
out
jge
ret
movsl
in
int3
mov
data16
jp
test
test
loop
pop
sbb
and
cmpsb
into
inc
pusha
stc
sub
in
mov
or
xcrypt-ofb
cmpsl
insl
mov
fiaddl
jge
jmp
inc
jg
sbbl
nop
xor
lcall
jo
cmp
cwtl
xchg
adcb
sbb
sbb
mov
jns
test
or
out
enter
test
jo
jle
or
mov
add
test
das
lret
scas
sbb
and
pop
lods
dec
in
xor
ljmp
xor
mov
pop
push
adc
dec
stos
in
scas
icebp
adc
dec
sbb
jb
push
mov
sahf
cmpsb
or
repnz
shll
dec
lea
pop
shrb
xchg
xlat
sub
or
je
jl
cmp
jg
jb
pop
jb
sbb
rcll
push
cmp
fcmovne
adc
and
xchg
cs
cmpl
mov
push
jl
scas
push
jne
xor
das
or
sarb
clc
pop
xor
fucomp
test
imul
mov
pop
push
mov
pop
mov
or
jp
add
cwtl
popa
inc
loop
cld
outsb
sarb
mov
popa
xchg
dec
pop
clc
and
jp
or
mov
arpl
adc
sub
xor
frstor
pop
test
jae
and
push
mov
aam
shll
or
jg
push
push
inc
ret
call
pop
pop
lret
pop
jo
in
push
pusha
ss
mov
arpl
push
jnp
push
xchg
ret
or
pop
ficompl
into
stos
or
in
insb
das
or
pxor
lea
mov
cmp
insb
cmp
push
sbb
testb
aad
mov
xor
jmp
cs
rorl
push
aad
mov
sbb
dec
sbb
mov
fucomip
sbb
dec
xchg
int
iret
cmpl
pop
dec
movsb
push
mov
or
mov
sub
int
call
in
pop
push
pushf
das
push
push
push
repz
add
je
inc
test
xchg
loop
xor
sbb
and
and
push
sbb
fsubrs
mov
fcmovnbe
popa
fmuls
pop
adc
call
pop
lcall
xchg
add
pop
fidivrs
sub
jns
pop
std
out
sbb
push
inc
xchg
js
pop
push
loope
stc
scas
xchg
xor
xlat
loopne
int3
xor
sbb
divl
leave
lock
add
sub
add
rclb
pop
mov
push
inc
shlb
pusha
xchg
ret
inc
dec
imul
jge
leavew
jb
sub
pop
aaa
xchg
in
xchg
xchg
xchg
icebp
jno
pop
sti
cli
dec
mov
shll
push
out
pop
daa
test
scas
jg
lcall
dec
adc
ljmp
mov
sti
outsl
lcall
mov
inc
ret
mov
jmp
mov
push
js
test
js
pop
fucom
js
lcall
cmc
int
std
inc
rcrl
mov
out
in
xor
aam
jbe
push
mov
sbb
test
dec
ficoml
lea
les
jl
or
cmp
xlat
push
jmp
and
in
jne
jo
mov
mov
pop
dec
ds
insb
sti
mov
int3
out
stc
mov
test
xchg
das
jl
pop
lea
ja
imul
xchg
add
js
push
lahf
xlat
in
fs
outsb
cmp
sahf
inc
cmp
js
mov
mov
cmp
cmc
out
mov
cli
cwtl
push
xchg
cld
les
pop
imul
inc
es
ljmp
mov
mov
xor
sub
adc
add
dec
fsubrs
ret
leave
stos
loope
mov
push
mov
push
and
mov
lods
je
xchg
popf
lcall
mov
pop
mov
cmpsb
jg,pt
add
in
jo
pop
push
mov
inc
ds
loope
pop
mov
cmp
or
jo
inc
jecxz
dec
and
ds
ss
movsb
cmpsl
jo
add
dec
gs
jle
sbb
lahf
pop
adc
push
cmpl
pusha
lods
sbb
or
and
leave
outsb
or
repz
inc
or
lock
ffree
mov
and
xchg
and
insb
sbbb
fdivrl
scas
mov
loop
cmp
outsb
jg
or
addb
pop
arpl
aam
iret
push
ficomps
mov
pop
pop
icebp
pusha
mov
and
jb
call
ret
fisttpl
dec
mov
lock
stos
pop
jp
stc
sbb
mov
adc
adc
jmp
mov
add
ret
iret
lea
sub
loope
jne
stos
lea
add
pop
pop
sub
sub
sbb
mov
aam
mov
push
arpl
mov
mov
sbb
outsb
outsb
outsb
ret
sub
jecxz
int
in
fistpl
cltd
xor
dec
out
shl
clc
lahf
xor
xchg
jnp
mov
xor
push
cmp
mov
out
mov
mov
out
push
sahf
dec
int
jne
mov
out
aas
nop
icebp
sahf
push
jle
cmp
xor
jne
xchg
sahf
pop
mov
divl
pop
pusha
add
inc
test
icebp
sar
icebp
adc
and
mov
inc
fcoml
cli
mov
lret
nop
inc
shr
cmpsb
cmp
fs
stc
lock
push
sbb
imul
imul
sub
imul
mov
ss
addl
xchg
mov
mov
in
xchg
dec
pushf
nop
and
lret
loope
jecxz
dec
add
pop
daa
cltd
push
js
aas
push
je
cli
std
daa
mov
insl
call
and
add
xchg
mov
jns
lcall
mov
leave
cwtl
adc
push
mov
dec
lock
xor
loop
in
ret
sbb
push
mov
popf
dec
pop
ljmp
xchg
popf
daa
push
pushf
jmp
inc
nop
adc
repnz
lret
lea
push
sbb
ss
lahf
in
mov
cwtl
leave
sar
es
cmp
xchg
cld
testl
add
jp
cs
inc
loop
xlat
mov
in
sbb
mov
xchg
mov
popa
add
adc
incb
insl
or
out
test
aad
mov
mov
repz
xor
icebp
cmp
ret
in
out
fmul
imul
adc
enter
fs
and
dec
sbb
repz
push
sub
repz
adc
lahf
loope
int3
add
lds
push
sbb
outsl
mov
jnp
mov
dec
and
icebp
push
rcrl
sarl
xchg
arpl
push
mov
js
sub
jmp
mov
inc
addb
sub
int
mov
pop
notrack
jbe
push
inc
and
mov
push
fwait
push
mov
enter
xchg
shll
ret
lds
add
xlat
push
pop
jb
cmp
add
sbb
sub
sub
loope
out
ja
sub
and
mov
mov
imul
insb
cmp
fstl
mov
xor
xor
leave
popa
decl
scas
mov
xchg
repnz
jge
enter
movsl
cld
in
cmpsb
daa
fcomi
test
push
jbe
jmp
and
add
lock
jb
sub
sbb
repnz
and
movsb
stos
mov
stc
movsl
mov
ret
sbb
insb
or
rorb
and
fdivs
sub
cmp
fwait
cltd
push
rorb
xor
je
pop
mov
dec
push
iret
mov
xor
pop
mov
mov
aaa
cwtl
jbe
adc
adc
xchg
nop
mov
xor
jae
pop
push
push
push
jecxz
das
call
inc
and
sahf
mov
stos
push
sbb
arpl
xor
incb
fmuls
popa
dec
icebp
add
aad
int
stos
cld
push
int3
push
push
push
pop
dec
push
inc
dec
xor
or
and
jl
or
cs
movsb
or
inc
adc
mov
pop
jo
ljmp
fs
mov
sbb
jle
sbb
add
jno
jp
push
or
add
push
test
nop
dec
dec
iret
stos
in
or
imulb
lods
and
push
daa
and
mov
popf
or
xor
cld
aas
dec
jne
stos
mov
nop
lahf
ss
lea
lds
ja
and
inc
or
jge
dec
xor
xchg
push
jb
mov
and
pop
add
dec
je
sub
repnz
dec
mov
jg
sub
cmpsl
lahf
out
stos
jbe
pop
lea
cmc
enter
push
mov
pusha
and
in
sbb
or
xchg
push
jg
daa
lods
test
mov
sahf
pop
jnp
add
or
cli
mov
push
pop
lea
mov
lods
ret
jg
bound
add
imul
xor
pop
dec
sub
jecxz
fnstsw
or
cmc
adc
sbb
clc
rcrl
sarl
xacquire
les
mov
and
popa
dec
movsb
ja
and
shl
adc
adc
into
add
dec
pop
jmp
popa
jmp
pop
mov
cmp
fcmovbe
fisubrl
gs
sbb
andb
bound
aaa
sub
ror
ret
pop
int
sub
mov
fwait
mov
mov
jg
or
sahf
cmp
xchg
jne
cmp
call
push
rcrb
inc
xchg
lret
push
ficompl
inc
sub
mov
aaa
andb
mov
loop
aam
aaa
dec
adc
add
outsl
inc
mov
push
fwait
pop
mov
call
sbb
lods
jmp
lea
fstps
int3
pop
xchg
cmp
scas
aad
adc
test
or
stos
inc
adc
cmc
adcl
mov
into
sbb
decb
shll
les
cli
pop
push
subl
ja
and
push
or
sbb
movsl
int3
into
or
inc
out
add
into
dec
repz
out
addr16
xor
cmpsb
add
stos
pushf
out
out
out
inc
in
mov
push
dec
fdivrs
fstps
gs
inc
or
pop
stos
leave
push
pusha
inc
xor
sub
clc
jbe
repnz
daa
sbb
jecxz
cmpsb
shrb
mov
inc
jae
sub
outsl
std
into
sbb
or
fmull
xchg
cmp
jl
int3
aam
sub
xor
ja
out
jns
mov
dec
mov
add
or
dec
mov
mov
and
and
mov
push
and
and
jmp
dec
scas
in
scas
mov
aad
or
mov
pop
loopne
bound
aad
adc
cmp
test
js
dec
loop
cwtl
sbb
mov
cmp
push
dec
pushf
push
sahf
jnp
outsb
mov
ss
js
fstpt
push
fcoms
sbb
call
cmp
clc
data16
lock
sub
subl
mov
xor
sarl
cli
mov
ret
jb
pushf
dec
mov
repnz
inc
insb
and
xchg
ljmp
and
cmovnp
jecxz
fdivrs
lods
das
adc
or
sahf
inc
repnz
std
jb
push
lods
fisubrl
loope
ror
push
cmovbe
dec
inc
xchg
mov
and
cmp
subl
testl
xor
mov
int
sbb
hlt
mov
pop
or
aaa
cmc
jle
inc
clc
jne
sub
and
in
mov
call
ret
iret
outsl
sub
movsl
jp
scas
icebp
add
fistl
or
mov
xlat
push
adc
jge
mov
fstpl
fidivrl
das
mov
mov
or
cltd
or
pop
icebp
push
jo
in
adc
inc
mov
insl
pop
mov
push
jp
push
jbe
hlt
jmp
fists
xor
add
scas
sub
scas
jg
stos
mov
aaa
xchg
or
js
mov
ret
mov
xor
aaa
lods
mov
aad
pop
mov
xchg
add
or
mov
sub
cmp
mov
adcl
stos
out
pop
jb
daa
mov
cmp
ss
dec
das
test
add
push
lcall
add
cmc
cld
fdivrs
cld
sub
insb
or
test
xchg
push
mov
popa
push
add
je
sti
sbbl
pop
jge
je
pop
out
je
mov
js
ss
push
xchg
mov
sub
das
dec
js
imul
mov
loope
pop
mov
xlat
jnp
cli
in
push
icebp
and
push
mov
jge
mov
mov
push
ljmp
sbb
arpl
and
push
mov
sbb
loope
adc
sbb
rcrb
bound
sbb
hlt
and
xchg
push
ja
and
insb
dec
jecxz
sahf
testl
scas
mov
jae
test
sub
add
das
daa
sahf
jp
les
lods
imul
sbb
cmc
mov
das
popf
into
cmp
or
xchg
xchg
sti
fdivs
test
mov
loopne
xchg
jns
shr
dec
fld
lock
enter
jle
mov
fstpt
int3
fs
cs
jge
sti
mov
ljmp
inc
aam
or
pop
lahf
in
and
xchg
cli
cmp
loop
push
rclb
dec
mov
xchg
lods
pop
js
scas
enter
cmc
mov
data16
mov
test
mov
dec
mov
fmuls
add
jge
add
dec
lret
push
je
xor
daa
inc
into
jle
and
fsubs
xchg
cltd
aad
jb
sbb
shr
xor
cmp
cmp
adc
mov
jno,pn
pop
les
icebp
xor
push
jo
cltd
cmp
inc
or
cmp
pop
jbe
popf
das
and
clc
lahf
add
in
icebp
and
sbb
jmp
aas
cmp
pop
repnz
popa
push
js
jae
mov
and
jbe
mov
and
into
mov
js
fimuls
mov
push
pop
jns
out
sub
imul
pop
fldt
je
jbe
adc
sahf
incl
add
movsb
pop
repz
out
and
pushf
outsl
mov
cwtl
es
and
add
cmp
pop
js
int3
inc
inc
jns
dec
fst
icebp
hlt
jecxz
repnz
cmpb
lods
ljmp
sti
faddl
or
and
jl
sub
mov
pop
jne
imul
nop
test
cmc
testl
mov
xor
adc
add
pop
outsb
cmp
jle
xchg
fdivr
inc
mov
loop
clc
test
ljmp
arpl
xchg
inc
xorb
je
ficoml
jg
je
dec
mov
mov
lcall
or
clc
dec
cmp
mov
xor
lods
jmp
test
pop
adc
xchg
ljmp
mov
in
jge
shll
xor
or
mov
or
inc
rolb
imul
imul
into
mov
aam
rorb
out
es
clc
pop
push
mov
and
dec
scas
fbld
add
xor
mov
xor
ds
xor
cmp
testl
sbb
ss
call
cmp
or
xor
or
in
in
jmp
icebp
or
add
clc
mov
lods
aaa
aad
xchg
bnd
mov
inc
call
testb
or
sbb
fisubl
mov
inc
lcall
into
xor
dec
popa
scas
rclb
fdiv
xchg
pop
inc
leave
sbb
add
xlat
ret
mov
xor
leave
in
in
dec
addr16
add
xor
repnz
aam
dec
cmp
out
das
popf
mov
jle
jmp
adc
mov
subb
fsts
push
pop
push
mov
cmpsl
outsl
insl
cmp
pop
aas
orl
mov
lock
sub
pop
mov
sub
push
orb
sbb
clc
add
cwtl
je
xor
in
mov
inc
cmpsl
cmpsl
inc
jnp
bound
or
xchg
adc
popf
nop
mov
insb
arpl
mov
push
cld
mov
xchg
cmp
icebp
fs
jecxz
shl
movsb
aaa
inc
add
data16
fdivl
xor
loop
scas
shl
scas
xor
outsb
fbld
gs
or
dec
arpl
sbb
repz
add
popa
lods
std
cld
inc
pop
enter
mov
cmp
push
inc
add
adc
mov
addr16
es
and
arpl
roll
xchg
aam
daa
sbb
sub
jae
mov
pop
xchg
rorl
scas
sbbl
push
xchg
imul
stc
fcmovb
loopne
and
or
pop
int
inc
std
ja
mov
notl
push
mov
orb
lods
pop
lods
or
cli
adcl
loopne
mov
dec
mov
and
test
fiadds
lcall
xchg
xor
iret
scas
push
out
dec
movsb
or
and
sub
inc
and
lcall
and
mov
mov
fsubrs
push
xlat
jns
int3
xchg
pop
imul
das
sbb
adc
sbb
jg
andl
mov
pop
mov
movsl
adc
xchg
lock
jmp
ja
jg
jmp
fcomps
add
cmpsl
sti
dec
jge
mov
pop
adc
push
dec
in
jbe
adc
inc
cmpsb
insl
and
out
push
das
loope
sbb
lods
dec
lcall
and
adc
ds
fldenv
xchg
dec
icebp
repz
mov
add
push
pushf
addr16
inc
add
cs
mul
inc
adc
lods
pop
jge
js
lahf
mov
jb
cmp
mov
test
lods
scas
int
push
inc
dec
mov
jmp
inc
dec
loope
fistps
mov
and
cwtl
test
mov
retw
sub
pop
lret
adc
dec
fwait
jno
mov
push
mov
stos
mov
shrb
es
or
jg
out
inc
inc
addl
dec
rolb
loopne
aam
rorb
pop
es
mov
mov
data16
or
sbb
cmpsl
loopne
add
stos
xor
dec
ret
rcrl
repnz
pushf
nop
fdivl
xor
sbb
pop
dec
sub
or
aaa
lahf
idiv
hlt
pop
pop
ret
jmp
adc
dec
add
outsl
mov
xor
adc
cmp
mov
pop
je
clc
lods
lods
lret
xor
int3
dec
lret
andnps
aas
xlat
mov
imul
movsl
dec
lcall
pushl
add
daa
mov
pop
rcll
fmuls
jge
das
test
xchg
adc
sbb
add
or
loop
addr16
push
sbb
cld
call
cmp
data16
mov
mov
movsl
cmpsb
cmp
jbe
sub
ljmp
and
sub
popa
mov
call
es
push
dec
cltd
outsl
outsb
leave
cli
sbb
outsb
adc
sbb
or
js
test
shlb
ror
lods
lods
loope
add
jmp
cmp
push
and
in
clc
outsl
jbe
pop
shll
sti
push
stos
pop
leave
cmpb
add
or
xchg
sub
ret
in
pop
jg
scas
mov
and
outsb
mov
arpl
adc
lahf
ljmp
xor
sub
dec
orl
arpl
mov
cld
adc
cld
jbe
shll
lret
jp
daa
and
insb
pop
xor
in
mov
pop
pop
sbbl
add
push
sub
clc
js
push
pop
movsl
mov
jb
xor
lea
call
or
mov
insb
cmp
push
xchg
push
cmp
mov
cmpsl
mov
push
imul
inc
jb
inc
or
std
adc
and
mov
out
std
pushf
pop
sub
xor
cmp
in
cwtl
cli
xor
dec
jne
sbb
loope
fs
xor
in
mov
ljmp
pop
std
jns
push
and
lcallw
pmuludq
mov
test
nop
dec
jl
lahf
xorl
data16
popf
das
pop
scas
xor
cmp
stos
mov
sbb
mov
nop
and
sahf
cmp
sahf
cwtl
cmp
push
repz
mov
cmpsb
pop
jmp
jmp
inc
add
lods
cmp
jnp
jne
adc
push
pop
pop
mov
es
fisubrl
pop
repnz
inc
test
pop
push
cwtl
jecxz
or
aad
lods
push
xor
dec
shr
std
aam
scas
test
repnz
jns
cmp
mov
dec
mov
mov
mov
addr16
sar
lret
das
mov
pop
ljmp
lret
addr16
cmovle
cmp
mov
cmp
rcrl
jno
jl
adc
test
mov
leave
arpl
sbb
cld
mov
fld
push
xchg
mov
pop
pop
pop
and
nop
lret
je
inc
lods
pushf
cmpl
adc
pusha
inc
call
cs
mov
fidivl
jne
call
xchg
push
repz
cmp
push
push
mov
cltd
xlat
lcall
dec
movsl
je
add
jno
scas
cli
push
notb
mov
ja
push
lds
scas
test
dec
sbb
lahf
sbb
adcw
pop
lret
and
data16
push
add
pop
mov
pop
lods
cmp
mov
push
sub
ret
outsl
aas
aam
lods
fstps
imul
cmpsl
mov
inc
lods
adc
rorb
xor
insl
xor
shrl
mov
push
xchg
ljmp
int3
inc
repnz
or
je
inc
sarb
mov
leave
sbb
mov
mov
inc
pop
insl
ds
fstl
sub
push
fbld
push
or
lret
sbb
mov
mov
pushf
cmpsb
aad
cmpsl
pop
cmp
mov
lahf
es
ljmp
adc
inc
imul
xchg
aad
mov
rclb
pop
jl
xchg
movl
jne
fildll
sbb
icebp
sub
imul
xor
stc
jp
insl
pop
ret
stos
idivb
xor
inc
sub
cld
dec
cmp
negb
shlw
sub
sbb
rcr
repz
cmp
sub
mov
imul
bswap
les
dec
jb
inc
mov
and
movsb
cmp
cmp
insl
in
sbb
clc
xchg
fsubp
mov
dec
cmp
sbb
ret
bound
push
outsb
mov
mov
cmpsb
pop
push
pcmpeqb
jg
repnz
sbb
test
sbb
fistpll
push
insb
jb
sub
pop
dec
in
imulb
and
xchg
jle
psadbw
xor
mov
out
rcll
cmp
inc
jo
pop
xchg
cmp
nop
test
std
xchg
sahf
mov
ret
pop
jl
jo
jns
pushf
mov
fcompl
jle
adc
lcall
aam
push
lods
dec
and
cmpl
pop
mov
shl
push
mov
mov
xor
cltd
inc
gs
test
add
fs
jne
jmp
in
icebp
aas
outsl
imul
pushf
stc
and
in
adc
lret
negb
sub
mov
mov
sbb
sub
pop
jae
push
addps
lret
mov
sub
aam
jmp
mov
cmp
mov
xchg
pop
fdivl
adc
cmp
pop
sub
mov
call
mov
sbb
push
or
and
addr16
jns
mov
stc
fcmovb
ljmp
insb
jmp
jp
mov
fwait
insl
test
rcrl
push
movsl
inc
js
orb
mov
or
ret
cmpsb
stc
adc
loop
scas
pop
dec
data16
je
scas
jbe
shrb
ds
cmp
inc
pop
mov
outsl
popf
dec
jb
sbb
add
fisubs
or
outsb
lods
xor
jb
call
xchg
dec
push
jge
out
mov
addr16
imul
js
and
clc
mov
pop
sbb
sbb
push
les
cmp
lea
in
test
hlt
dec
fdivrs
fidivl
cmpl
adc
jg
sarb
call
and
in
and
les
pop
cwtl
mov
lcall
sub
shlb
mov
fstp
mov
cmpsb
in
enter
jns
xchg
aam
cmp
popa
push
pop
lds
pop
or
xchg
in
aaa
test
adc
push
scas
cmp
cmc
jb
pop
lcall
mov
out
cmp
sarb
or
movnti
pop
stos
xor
es
lds
jb
jp
xchg
sub
cmp
dec
scas
xchg
xor
out
mov
push
and
or
mov
push
sbb
mov
dec
sub
ljmp
pop
push
in
push
dec
inc
insb
xchg
push
ljmp
xchg
inc
mov
inc
jbe
in
jmp
iret
mov
into
jbe
sbbb
sbb
jo
sbb
sub
rorb
adcb
adc
fdivs
and
xor
adc
enter
test
sbb
fsubl
or
notb
and
sbb
dec
ds
addr16
movsl
fildl
aaa
push
adc
scas
push
lods
aas
lret
bound
mov
data16
pop
inc
lret
xchg
and
data16
mov
xchg
mov
adc
xor
repnz
ficoml
lock
xchg
sbb
sub
andb
dec
dec
leave
cmc
ljmp
lods
inc
rorb
xchg
push
decb
fildl
mov
scas
loopne
xlat
mov
jb
adc
mov
movsb
inc
xor
mov
out
inc
dec
xchg
idiv
and
mov
mov
negb
xor
icebp
stos
hlt
into
lods
and
inc
ficoml
arpl
lds
cmp
into
sbb
out
js
int
pop
mov
pusha
jbe
pop
mov
xlat
rcrl
or
add
jg
push
mov
lret
pop
mov
ljmp
cld
lods
sti
popf
xchg
jmp
jno
data16
add
xchg
sar
pusha
arpl
insb
shrl
mov
push
lds
sub
fmull
lock
dec
andl
xor
jecxz
lea
stc
and
pusha
sbb
inc
sarl
je
sub
shrb
lock
hlt
lcall
xchg
imul
cmc
cmp
scas
pusha
outsl
add
mov
mov
xchg
popl
or
xor
out
sbb
movsb
mov
add
loop
test
inc
and
ror
jge
cld
into
repz
fistps
cmpsb
cmpsl
into
mov
mov
movsb
jmp
idiv
das
mov
mov
jecxz
nop
pop
pop
xchg
repz
popa
je
out
decb
out
push
sub
and
clc
pop
jle
aaa
ja
lods
idivb
shrl
xor
mov
sub
pop
insl
mov
inc
push
xchg
int3
into
dec
scas
repz
cmp
sbbl
ret
mov
addr16
inc
shlb
mov
arpl
repz
push
std
xlat
daa
inc
xchg
mov
sbbl
mov
cmp
incb
mov
outsb
jmp
imul
xchg
shlb
or
cmpsb
add
aam
rclb
sbbl
pop
mov
popf
stc
or
or
movb
sbbl
jmp
aaa
lret
rorb
push
sti
popf
cwtl
fidivl
pushf
out
push
xchg
push
aas
out
lahf
pop
fdivrs
pushf
dec
and
aam
sbb
loopne
ffreep
repnz
add
stc
pop
fidivl
repnz
fstpt
dec
mov
mov
dec
cli
cmpsb
dec
and
add
jp
mov
xor
fwait
mov
shufps
movsl
scas
push
mov
in
sahf
cli
dec
in
out
xor
xlat
cmpsb
es
add
arpl
mov
cwtl
add
arpl
mov
xlat
fwait
sbb
out
pop
jecxz
jns
out
mov
fisubrl
dec
adc
cmp
mov
imulb
jg
aaa
add
cwtl
push
int3
dec
dec
cli
mov
xor
lcall
lret
or
lods
lock
xchg
enter
jge
add
mov
loopne
dec
cmpsb
mov
jne
and
in
mov
andb
notb
fildl
mov
pop
filds
insb
xor
fcmovu
mov
dec
cmpsl
imul
jo
mov
data16
jnp
stc
mov
xchg
cmp
mov
xchg
test
push
test
cmpsb
test
jle
insl
aas
mov
inc
dec
inc
imul
jle
ret
add
adc
int
dec
lret
jbe
add
adc
cmp
mov
jg
push
lret
pop
jne
dec
jbe
cmpsl
and
mov
pushw
xchg
mov
adc
push
mov
push
mov
cmp
aaa
loop
mov
call
test
outsb
jmp
and
mov
fldcw
ret
aad
das
fists
cmpb
out
mov
aam
sub
push
xchg
outsl
fsub
or
add
push
mov
rol
sbb
test
mov
icebp
or
gs
daa
xchg
sbb
adc
push
xchg
rorb
push
int3
xlat
lcall
rorl
mov
insl
inc
inc
pop
test
sbb
cmp
scas
jl
js
dec
sti
scas
imul
out
jmp
xchg
mov
pop
xchg
cwtl
insl
pushf
bound
inc
xchg
pusha
imul
jge
pop
loopne
lods
loopne
pop
je
pop
test
lock
and
push
sub
cli
and
rorb
and
dec
adc
mov
mov
or
sbb
mov
mov
jae
xchg
ds
lret
ja
sub
test
sbb
loopne
dec
mov
stos
sub
insl
inc
pop
pop
xorl
or
jb
adc
jo
cmpsb
mov
scas
or
insb
xchg
in
push
fcompl
and
mov
dec
into
add
test
or
les
lods
loope
ret
cmpsb
or
loope
dec
push
aas
enter
or
sub
ret
xchg
dec
mov
mov
test
and
sub
andb
dec
fs
xor
sbb
lock
loopne
shlb
movsl
push
cli
cltd
pop
push
cmp
mov
mov
pop
push
mov
divl
es
movsb
cmpsl
mov
sbb
cltd
ss
mov
aam
mov
and
jmp
sub
or
sub
add
or
xor
das
push
or
fs
sub
sbb
mov
mov
push
aad
fs
iret
int
call
enter
mov
iret
out
in
adc
pop
xor
std
cmp
pushf
mov
sbb
in
sbb
cmpsb
jecxz
xor
mov
cs
adc
jmp
mov
xor
dec
jge
pop
mov
xchg
add
dec
xor
jmp
adc
aaa
fwait
xor
std
fisubrl
dec
pop
adc
jae
mov
xchg
int
cmpsb
pop
aas
adc
jns
stos
outsb
mov
mov
xchg
mov
mov
pop
daa
adc
add
jno
push
insb
push
and
int3
je
mov
mov
cli
jb
dec
mov
add
xor
les
jno
ss
dec
nop
cld
or
xor
xchg
dec
xchg
out
add
in
sbb
loopne
int
ret
lods
inc
add
nop
push
mov
add
cmpsl
es
aad
loop
cmp
and
lea
sbb
xor
jle
insl
out
mov
loopne
push
mov
lods
lahf
inc
nop
xor
into
sbb
xchg
and
out
adc
xchg
cld
pop
xchg
movsl
sub
add
std
dec
addr16
insl
bswap
jns
mov
in
mov
mov
shlb
adc
dec
or
xchg
xor
int3
fs
or
ret
mov
aas
or
dec
shlb
add
jb
xor
int
int
leave
ss
sub
cmp
xor
scas
popf
push
shlb
mov
lcall
push
pop
mov
popa
xchg
and
xchg
cmp
lds
mull
sub
add
mov
inc
fistpl
push
sbb
insl
pop
push
out
dec
push
cmpsl
add
push
mov
push
jbe
inc
aaa
aaa
iret
dec
mov
aad
test
incb
fldenv
adc
stos
mov
jns
add
lcall
xlat
jmp
xchg
fnsave
inc
cmp
aad
inc
out
daa
fcomps
icebp
and
pop
popl
push
push
push
incb
pushf
loope
push
lret
jp
insl
aas
push
xchg
inc
add
jge
and
mov
adc
and
or
push
pop
sbb
add
and
lea
shrb
imul
repnz
xchg
icebp
fwait
popf
inc
cmp
xchg
daa
and
and
mov
rcll
push
aad
mov
jle
inc
cmp
jb
and
xor
cmp
sbb
jns
or
ljmp
loope
cli
andb
pop
test
in
das
in
push
test
sub
push
dec
jp
mov
mov
mov
rorl
inc
mov
fidivs
add
inc
inc
and
imul
cmp
and
pop
mov
adc
xchg
pusha
hlt
ret
jb
pop
or
jecxz
shll
xor
mov
andb
cltd
inc
cmp
mov
imul
xchg
sbb
dec
loopne
fnstsw
out
lahf
inc
je
lods
adc
mov
popf
xchg
in
fwait
divl
pop
mov
push
pop
or
mov
sarb
mov
or
fisubrl
cmp
imul
dec
xor
mov
mov
inc
stos
adc
insb
mov
jae
jo
lds
outsl
jmp
xchg
and
dec
lds
adc
ljmp
sub
inc
jmp
push
insb
aad
aad
jno
call
push
fistpll
pop
in
shlb
inc
pop
or
loopne
sbb
add
and
shlb
negb
dec
mov
and
add
daa
rcr
int
cmp
lods
mov
and
loopne
and
jg
jle
enter
or
or
loopne
inc
cmp
sahf
push
and
mov
stos
je
or
sbb
and
mov
inc
pop
dec
push
jnp
mov
add
stos
push
xchg
rcrb
movsb
roll
sub
xor
aam
das
add
mov
pop
adcb
push
int3
mov
cmp
imul
std
daa
dec
ljmp
out
stos
jnp
ret
fcmovne
out
dec
jecxz
loope
neg
mov
adc
sub
mov
add
int
mov
hlt
decl
adc
loop
dec
addr16
jecxz
jbe
mov
xchg
xchg
aad
pop
inc
inc
push
dec
int
inc
or
mov
sub
cld
push
fs
loop
loopne
movsl
ret
push
dec
cmp
xor
fdivr
push
je
jp
out
inc
mov
push
mov
xchg
icebp
test
cmc
test
fcmovu
pushf
push
mov
push
push
push
sbb
test
out
out
jmp
or
push
cwtl
sar
or
rolb
push
mov
add
sub
push
pop
jge
sub
enter
sub
or
inc
and
mov
sbb
ret
mov
push
push
dec
aas
mov
bound
dec
and
scas
add
lea
movsb
xchg
push
push
lcall
push
insl
aaa
in
push
jle
testb
and
fcmovnbe
cltd
decb
mov
jne
stos
fdivl
gs
sbb
es
jne
xchg
mov
popa
cwtl
jecxz
fwait
movsl
inc
sub
push
icebp
mov
inc
daa
movsb
push
pop
dec
call
and
cmpsb
fsts
or
adc
loopne
enter
add
cmp
or
aaa
and
les
jp
mov
jecxz
adc
loop
mov
mov
test
rcrb
or
std
fidivrs
pop
ret
or
sbb
lret
subb
bound
clc
adc
inc
cmpsb
sub
or
mov
pop
dec
scas
sub
push
bnd
push
inc
xlat
pop
inc
pop
dec
cmp
push
iret
push
loopne
xchg
jl
inc
shl
mov
fsubl
and
add
jne
push
pop
lea
int
popa
ss
xor
scas
mov
jecxz
fidivl
mov
cmp
hlt
test
jbe
xchg
out
addl
mov
pop
cltd
jo
dec
add
pop
add
and
adc
pop
jmp
cmpsb
add
mov
repnz
cmpsl
add
popf
dec
inc
bound
ss
testb
or
xchg
sahf
in
sub
test
insb
inc
jp
jo
es
fiaddl
rcr
and
lds
add
dec
movsb
dec
aad
cmpsb
dec
inc
jle
ret
in
fisubrl
ljmp
test
mov
pop
mov
ljmp
xchg
sbbl
or
cmp
jo
cwtl
aad
hlt
mov
push
xchg
inc
lock
loop
fcomp
pop
xchg
or
mov
cmpsl
pop
and
cs
xchg
and
data16
sbb
xchg
jae
sti
inc
shr
xchg
push
mov
les
jle
push
adc
mov
mov
js
int3
test
mov
icebp
mov
adc
mov
lret
pop
cmp
dec
subb
and
arpl
jl
imul
subb
in
cmp
js
pop
adcb
ret
mov
mov
pop
aas
cmc
or
adcl
mov
ss
add
pop
xchg
xchg
insb
test
bound
mov
or
test
jle
rolb
scas
fdivp
adc
adc
sbb
inc
mov
adc
test
cmp
push
loop
lds
mov
inc
adc
repnz
mov
sub
mov
inc
push
push
pop
loope
push
jmp
hlt
outsl
cli
mov
pop
jno
or
xchg
lds
dec
pop
mov
orb
jp
mov
mov
adc
jo
daa
or
jecxz
les
sbb
ljmp
xor
dec
lret
addr16
aam
mov
loop
shll
xchg
inc
inc
subl
inc
jb
xor
sbb
js
adc
xor
pxor
rclb
rolb
adc
cmp
or
mov
mov
jecxz
inc
dec
inc
push
test
stos
mulb
dec
push
push
cmpsb
insl
shrb
fnstsw
imul
add
add
dec
push
cmp
dec
add
mov
sbb
jbe
mov
cmp
pop
mov
xchg
out
xor
ds
push
sbb
bswap
mov
mov
jno
sbb
movsl
stos
ljmp
addr16
lret
cmp
and
mov
dec
pop
shl
adc
push
ss
ljmp
cmp
dec
mov
cmp
daa
ret
inc
loop
mov
scas
out
lret
inc
loope
pop
inc
xchg
sub
mov
push
fdivs
sahf
out
push
lret
add
jbe
mov
mov
xchg
inc
call
daa
jg
xchg
mov
shlb
aad
mov
push
scas
arpl
sbb
test
stc
fldl
sti
les
and
mov
lds
outsb
stos
mov
outsb
faddl
incl
lcall
xchg
rorb
and
scas
es
outsb
xor
add
loope
cmp
das
mov
or
sub
fs
in
and
mov
pusha
popa
cld
cmpl
lds
in
clc
dec
add
xchg
dec
push
jmp
test
arpl
loope
scas
repz
and
push
mov
imul
into
shl
loop
aaa
mov
shlb
ret
outsl
nop
ds
cmpsb
mov
sub
nop
fnstsw
rorl
or
sbb
in
andl
mov
data16
add
stos
rcll
fwait
sub
mov
cmp
hlt
or
xchg
mov
insl
mov
sub
ja
push
push
pusha
mov
pop
or
mov
or
push
ss
xchg
mov
push
mov
int
jl
aas
test
pop
js
es
mov
in
out
shll
arpl
push
aam
sub
and
adc
movsb
daa
mov
mov
cmpsb
pop
repz
adc
int3
xchg
xchg
sbb
and
cwtl
lahf
mov
jae
stos
cmc
mov
out
data16
jmp
popf
fldcw
test
sbb
add
push
mov
pop
sar
lods
push
enter
xor
js
movsl
adc
cmp
or
fcoml
in
subl
or
push
pop
add
aaa
fwait
in
sub
add
xchg
mov
ss
dec
xchg
jecxz
dec
je
lahf
jb
mov
fs
push
xchg
push
cmpl
dec
pushf
cmp
sbb
xchg
es
icebp
or
xchg
ja
ret
test
jmp
sbb
stos
outsb
sub
dec
sub
push
ret
cmpsb
loopne
mov
bound
pushf
add
push
xchg
or
out
mov
cmpb
pop
sbb
dec
xchg
sbb
xchg
ljmp
movb
push
mov
cld
loope
dec
or
dec
jmp
adc
mov
jbe
cld
enter
mov
sub
cmp
inc
sbb
std
push
push
dec
inc
dec
fwait
xchg
inc
arpl
insl
jbe
sub
es
cmp
mov
mov
xorb
popf
cmp
vpsllq
fcoml
pop
cmpsb
mov
cs
adc
sbb
jno
in
inc
xchg
imul
inc
in
ja
push
jle
mov
into
cltd
pop
push
push
fidivl
add
mov
pop
dec
lods
add
in
das
imul
mov
stos
mov
andb
xlat
mov
inc
lahf
cmp
in
jecxz
jnp
xor
add
mov
mov
sub
mov
cwtl
jl
inc
mov
pop
sbb
fcmovu
dec
or
sarb
cmp
leave
jecxz
jle
flds
sub
push
jns
sbb
mov
ja
int
popf
and
pushf
out
cmp
xchg
dec
mov
jle
xor
lret
mov
test
mov
or
sub
sahf
fsubs
pop
cwtl
js
sub
out
movsb
cmp
push
ds
outsw
sub
movsl
adc
and
adc
mov
xchg
ret
or
lret
ja
inc
das
cmp
pop
sbb
xchg
lea
pop
mov
std
jno
int3
sbb
dec
cmp
mov
mov
call
jne
adc
pop
mov
fdivrs
sub
mov
inc
arpl
adc
jnp
movsb
test
xchg
cmp
sahf
xchg
out
xchg
adcb
aam
xchg
xor
xchg
pop
add
jno
dec
or
adcb
sub
adc
aas
dec
xor
sbb
leave
mov
push
outsl
sbb
stos
aad
mov
or
enter
add
data16
cmp
stos
mov
dec
cmp
ret
push
sub
outsl
in
scas
in
nop
sbb
cmp
mov
lret
sbb
aad
idivb
test
aaa
add
ss
daa
hlt
xor
add
imul
pop
xchg
pusha
enter
push
ret
cmc
push
sub
cmp
js
clc
xchg
fisttpl
insb
pop
sbb
pop
xor
je
jbe
xchg
jl
xrelease
sbb
sbb
push
mov
push
aas
shlb
fwait
imul
mov
mov
xchg
and
xchg
test
out
scas
pop
enter
mov
add
in
inc
mov
add
push
sbbb
pop
fbstp
clc
add
mov
cwtl
lret
cmp
sar
inc
dec
push
xlat
add
cmpsl
xor
ja
sbb
gs
and
xor
mov
daa
adc
and
jl
movsl
jno
cmpsb
adcl
cmpsb
add
fucomip
call
xor
xlat
dec
pop
add
jle
stos
adc
and
xor
jle
mov
push
decb
adc
cs
mov
cmp
inc
jge
xchg
mov
movsb
lahf
sbbb
cmp
push
popf
cmp
mov
adcb
ds
adcl
outsb
pop
jmp
in
lcall
xlat
cmc
out
iret
js
in
lret
lret
sub
mov
out
std
push
mov
dec
jle
push
out
ret
popf
jecxz
in
sahf
and
adc
sub
aaa
xchg
push
xor
cmp
mov
lock
stc
and
imulb
stos
jle
nop
sbb
jno
push
pop
mov
dec
jmp
ljmp
jb
adcl
mov
mov
jno
mov
mov
imul
rcrb
call
insl
jno
aaa
cmp
dec
inc
mov
sbb
add
call
or
push
cmp
ret
adcb
mov
popa
aas
fmull
ret
and
jecxz
xchg
clc
sub
pop
insb
lea
push
cs
gs
adc
sbb
jne
fidivrs
fimuls
jmp
ror
jg
jno
pop
jne
push
popa
popf
jge
movsl
push
stos
mov
std
cmpsb
sahf
push
push
push
cmpl
adc
pop
imul
push
test
mov
sub
lods
xchg
adc
push
or
cld
rorb
inc
mov
cld
call
movsb
xor
mov
clc
ljmp
popf
push
das
aam
inc
rcrl
inc
xor
fs
push
xchg
jb
repz
inc
xchg
aas
out
fs
rolb
mov
xor
lock
loopne
inc
jle
loopne
dec
mov
and
mov
popl
push
into
out
icebp
pop
leave
mov
cmp
std
lret
dec
mov
pop
mov
jecxz
outsl
pop
and
mov
orb
push
fimull
pop
aad
pop
jp
sbb
ss
dec
fs
dec
push
sbb
aaa
leave
insl
add
mov
mov
leave
test
xor
mov
lahf
hlt
adc
xor
ljmp
inc
daa
or
pushf
xchg
xor
pop
or
insl
ret
jae
icebp
push
orl
lcall
push
cmp
dec
adcb
jg
mov
xchg
aas
push
mov
cmp
xor
jno
inc
dec
sub
out
xchg
push
fstpl
sub
inc
cld
adc
xor
popl
mov
testb
and
push
test
and
sub
cmp
pop
inc
iret
imul
scas
dec
and
cli
mov
arpl
loop
xchg
mov
ficoml
dec
xchg
xchg
mov
out
dec
jp
push
icebp
inc
lahf
or
in
jecxz
leave
jl
lret
aad
push
xchg
imul
and
push
ljmp
out
out
jnp
sti
inc
or
in
xchg
and
mov
out
mov
mov
cmpsb
mov
push
call
pop
pop
into
test
add
and
je
adc
mov
xor
sbbb
push
int3
test
or
sbb
lods
adc
inc
pop
jb
pop
push
outsb
in
inc
pop
mov
stc
stos
scas
popf
cmc
lods
std
fsubr
sti
push
adc
lock
jae
mov
es
daa
sub
pusha
xchg
or
inc
cmpsl
pop
loope
int3
or
sub
es
cmp
fidivs
mov
test
outsl
roll
sti
nop
icebp
movsl
xchg
mov
insl
push
ds
and
cmp
outsb
sub
test
ljmp
pop
sbb
fisubrs
cltd
or
lcall
insb
and
dec
sub
xchg
ds
aad
sahf
std
jbe
inc
shlb
and
mov
xchg
sar
in
mov
out
jl
je
and
jl
cli
ja
and
mov
jbe
push
cmp
repnz
add
pop
push
repnz
and
scas
add
jge
adc
xchg
daa
mov
inc
push
mov
mov
mov
or
fnstcw
enter
movzwl
fcmovb
xchg
fsubs
fsincos
jns
cmp
insb
mov
cmp
cld
xchg
xchg
aam
and
jae
dec
jno
lds
sarl
bound
xor
dec
sbb
into
push
dec
xlat
movsl
or
fidivs
aad
mov
dec
add
notl
pop
cmp
ficoms
call
xor
mov
mov
xor
scas
adc
jno
out
push
lret
sahf
cmp
jo
or
cmpsl
icebp
popa
je
mov
adc
push
fcoms
jmp
fiadds
xchg
packuswb
add
mov
std
arpl
mov
imul
inc
adc
inc
bound
lock
sbb
sub
mov
add
jae
loope
into
inc
or
mov
cmp
aam
sub
push
leave
push
mov
xchg
xchg
fbstp
sbb
jl
jae
adc
fildll
dec
cmp
jo
nopl
icebp
clc
enter
xchg
or
cmp
pcmpeqd
mov
movsl
popf
or
in
mov
cmp
lock
adc
sbb
push
pop
fsubr
push
rorl
cwtl
inc
shr
lock
cmp
cmp
dec
adc
push
add
mov
mov
aad
cmp
stc
leave
mov
xchg
addr16
mov
lret
or
test
mov
loope
andb
and
jo
adc
lea
dec
mov
aaa
or
pop
mov
xchg
dec
xchg
push
ds
repnz
je
add
sbb
add
add
push
mov
dec
fwait
or
jmp
orb
push
out
adc
xchg
sbb
jno
cld
jecxz
test
stos
sub
jp
mov
aas
adc
incl
jmp
lret
test
mov
lock
int3
sar
mov
cmpsb
mov
push
jne
sarb
pop
pop
das
stos
cmp
sbb
roll
addr16
cmp
test
or
sbb
mov
pop
cltd
xchg
in
icebp
dec
outsb
pop
bound
xor
sbb
imul
les
in
stos
int3
inc
ss
add
sahf
shlb
std
and
pop
cmpsl
lret
pop
cld
sub
lahf
pop
sub
mov
sbb
out
rorl
inc
ffreep
push
out
lods
shlb
jecxz
jns
nop
dec
pop
dec
jecxz
popa
jbe
sub
aas
lods
push
add
test
and
inc
mov
cmp
jns
in
push
jle
jno
pop
adc
push
clc
sarb
jecxz
cmp
loope
es
adc
movsb
add
lods
pushf
mov
fidivrl
call
jp
insb
mov
addr16
lock
mov
push
sub
lock
lret
fisubrs
fstp
xchg
inc
int3
aas
nop
xorb
in
jnp
jo,pn
push
pop
push
popf
imul
sbb
dec
mov
rdpmc
ret
repnz
sub
stc
popa
pop
sub
mov
nop
add
shrb
cld
cmp
mov
iret
and
jl
push
popa
lret
mov
in
jle
arpl
hlt
mov
jns
and
out
jb,pt
push
and
fnstsw
arpl
loope
pusha
mov
aas
pop
movsb
imul
adc
lods
rcrl
xor
jge
cmp
hlt
sub
stos
je
dec
ret
sub
sub
and
clc
out
jbe
fyl2xp1
push
pop
mov
add
xor
ljmp
nop
sbb
push
lea
push
dec
or
fisubl
and
icebp
jo
fwait
out
push
inc
add
add
cwtl
faddl
xlat
iret
push
push
xchg
xchg
jno
and
cmpsb
pop
pop
repnz
movl
insl
sbb
das
sbb
movsb
jo
adc
lcall
xchg
gs
loop
sub
testl
mov
push
xor
mov
std
hlt
add
push
pushl
je
ret
shl
or
fnsave
negl
mov
sbb
gs
out
pop
xchg
je
sbb
adc
int
xor
jbe
mov
out
push
sub
or
das
scas
in
mov
lock
jl
fwait
adc
dec
mov
aaa
xor
or
iret
sub
dec
mov
mov
sbb
sub
pop
push
lods
inc
inc
inc
and
xchg
or
loope
or
fwait
xor
sahf
jbe
jbe
xchg
xchg
pop
test
sti
sete
jp
push
xchg
stos
ljmp
icebp
pop
aam
jle
in
shlb
sub
lret
or
pop
sub
int3
or
or
dec
mov
pop
xchg
jp
inc
lcall
cs
loopne
mov
stc
fisttps
lods
pushf
pop
and
test
addl
and
xor
aam
add
fs
inc
xchg
mov
rclb
push
jmp
add
xor
pop
adc
xchg
mov
ja
push
stos
mov
mov
sbbl
outsb
jo
inc
mov
fldl
pop
inc
mov
add
adc
adc
push
and
jg
adc
scas
outsl
in
dec
push
data16
or
jo
aam
pop
ret
faddl
pop
out
aad
lcall
fptan
mov
pop
aaa
sub
or
xchg
add
lcall
ret
cld
in
add
es
stos
xchg
jno
push
les
fdivl
push
sbb
push
repz
sbb
sub
arpl
mov
mov
xor
lret
xor
push
mov
dec
iret
cmp
lods
jmp
inc
cmp
scas
test
sahf
inc
out
movb
vcvtsd2ss
daa
inc
xchg
enter
xchg
mov
outsl
or
mov
push
ss
scas
addl
xchg
stos
lcall
xchg
dec
xor
or
scas
jb
insb
lods
mov
mov
jg
pop
mov
push
jnp
pushl
jns
xor
adc
and
imul
sbb
push
std
mov
inc
test
hlt
or
arpl
sarl
aaa
cmp
pusha
fcmovu
inc
test
aaa
pusha
add
jmp
popf
test
cwtl
or
xchg
cld
movsb
xchg
push
mov
xchg
xchg
fcomps
popl
xchg
push
xchg
xor
pop
push
dec
fnstsw
dec
inc
mov
popa
imul
sub
push
stos
pop
mov
jecxz
pushf
add
insb
fnstsw
icebp
cli
inc
stos
shrl
xor
shll
es
ds
fstp
outsb
xor
pushf
fwait
xchg
pop
sbb
cltd
cwtl
lods
cmpsb
insl
pusha
int3
fxch
mov
adc
adcb
push
dec
mov
mov
sti
mov
and
je
mov
mov
rorl
or
repnz
or
mov
jb
mov
dec
divb
xchg
xchg
and
inc
setnp
aad
pop
sbb
inc
and
aas
jns
push
or
lock
das
ret
push
mov
frstor
idivl
das
cmpl
flds
add
cli
lcall
jnp
mov
mov
lods
jle
aam
lods
fucomp
stc
clc
nop
popa
jno
enter
inc
bound
push
or
ss
mov
outsl
lret
push
sarb
xchg
iret
dec
adc
dec
or
inc
push
into
adc
xchg
lods
adc
lahf
test
mov
ret
imul
or
sbb
dec
stos
jle
xchg
rcr
jp
xchg
mov
cli
push
xchg
xchg
add
add
or
movsl
lds
cmp
cmp
inc
adc
in
cmp
mov
test
test
in
jbe
inc
sub
scas
icebp
xor
mov
mov
ret
fwait
mul
sub
rcrl
fsts
stos
fcoms
jmp
iret
sbb
mov
xor
mov
mov
mov
push
leave
repnz
lret
mov
adc
push
mov
add
jb
pop
imul
not
fdivl
int3
repnz
xchg
out
clc
int3
mov
je
mov
ret
push
mov
lahf
mov
je
xor
mov
dec
int3
mov
add
pushf
lret
movsb
loop
xorb
out
hlt
sbb
pop
sub
push
push
mov
mov
addr16
push
push
or
sbb
iret
add
add
or
pusha
dec
add
push
sbb
mov
or
or
add
jle
xchg
inc
jmp
int3
jle
out
cmp
xchg
movsb
cli
loope
and
inc
mov
sub
bound
pop
mov
out
repnz
pop
popa
cwtl
test
mov
in
stos
sub
test
add
add
inc
push
ret
sarb
pop
stos
insl
inc
fdivrs
xchg
movsl
lret
ficoms
int
and
xchg
cwtl
jns
fwait
mov
aam
in
sbb
fcomps
leave
rcrb
inc
push
sahf
mov
fldcw
jp
aam
add
into
push
adc
mov
imul
lahf
xchg
rcrb
aad
or
add
div
push
out
sub
add
in
nop
xor
sbb
sub
ss
sub
bound
jo
out
mov
addr16
xor
test
inc
fstl
lcall
mov
inc
pop
mov
mov
fimuls
stos
mov
sub
or
dec
leave
arpl
push
mov
out
sub
orl
or
cli
ficoms
repz
int3
imul
xor
xchg
lods
push
lods
clc
sub
pop
adc
push
cmp
and
pop
push
outsl
push
add
mov
xor
jp
cli
cmpsl
sahf
jno
sbb
push
jmp
in
xchg
testl
leave
adc
cmp
jo
daa
js
sub
mov
lock
push
nop
frstor
or
data16
insb
push
les
lds
xor
jp
outsl
lods
pop
loop
jno
stos
inc
pop
xor
lea
shll
jns
sbb
dec
repnz
int3
aaa
ret
jb
scas
jmp
out
xor
rcr
sbb
pushf
adc
negb
stc
scas
sub
incl
mov
fs
test
das
inc
in
cld
pop
cwtl
push
jo
mov
gs
and
mov
inc
xor
pop
aam
push
les
dec
jnp
add
mov
addr16
jne
hlt
xchg
lock
ds
cmp
arpl
ret
lds
xor
jmp
inc
and
adc
inc
loop
push
ds
mov
mov
fcomps
cmc
xorl
test
or
or
sub
icebp
imul
pop
pop
repz
and
inc
jbe
push
cmpsb
gs
ja
xor
aas
lods
inc
je
lds
into
outsb
pop
fwait
mov
and
imul
addb
inc
dec
int
hlt
loop
push
sahf
and
mov
push
data16
andl
sbb
dec
and
mov
jae
cltd
fwait
mov
xor
iret
ljmp
xchg
push
jbe
nop
push
mov
ds
sbb
lahf
invd
icebp
jge
adc
xor
jg
outsl
inc
jae
inc
mov
mov
fldt
inc
cmp
jno
ficompl
inc
aaa
test
fisubl
xor
jp
popa
sub
jo
insb
scas
jmp
mov
add
adc
and
xlat
aas
cmp
or
dec
cmp
adc
jl
cli
mov
mov
sbb
pop
jb
xchg
cmp
adc
xor
sub
xor
sahf
jl
outsb
jmp
enter
xor
outsl
jnp
js
mov
loopne
stc
lock
push
jb
jp
hlt
insl
lcall
jg
lds
fmul
pop
pop
mov
test
sub
stos
and
bound
and
cmc
in
icebp
shlb
xorl
je
inc
cmp
xchg
lods
and
jne
cs
dec
adc
test
jg
cwtl
jg
push
cmpsb
cvtps2pi
mov
popf
dec
cmpsb
enter
notl
testl
cmc
add
pop
ljmp
add
sub
push
loope
cmp
loopne
pop
cwtl
pop
pop
lret
sbb
dec
and
mov
data16
jp
aam
arpl
mov
cmp
jg
cltd
in
xor
fmull
loopne
jle
sahf
push
sahf
mov
adc
push
mov
jae
dec
adc
ja
scas
sub
mov
aas
fisubrl
pushf
rclb
mov
pop
push
movl
test
jg
push
xor
fldcw
xorb
jnp,pn
fldcw
mov
and
ja
xchg
fnstsw
mov
in
movsb
ljmp
repz
lea
cmc
aam
cmp
fpatan
stos
add
call
sahf
and
dec
sub
sub
dec
test
lret
xchg
in
dec
push
mov
mov
pop
fs
or
sbb
lahf
sahf
add
shl
cmp
pushf
inc
mov
mov
and
dec
dec
mov
push
xchg
test
loopne
popf
sbb
or
jae
bnd
sbb
in
mov
lds
test
test
dec
popf
pusha
sbb
test
and
lods
cmp
mov
jbe
push
test
enter
sbb
push
xlat
jnp
mov
das
pop
std
ljmp
rcrl
mov
ja
mov
cld
ret
add
push
shrl
lock
mov
fiadds
or
pusha
lret
fisttpl
cmp
push
and
std
xchg
mov
sub
mov
jbe
das
out
hlt
xor
lahf
cs
add
das
std
jmp
dec
bswap
pop
aaa
inc
push
mov
adc
mov
mov
mov
fimull
fsts
ret
or
out
jbe
movsl
jecxz
fmuls
insb
push
fstps
mov
xor
inc
stos
out
sbb
sub
lea
call
imul
test
jmp
push
imul
jns
push
push
into
arpl
mov
in
out
stc
in
je
jb
xor
xor
enter
push
pop
les
stos
aas
cmpsl
iret
aam
nop
mov
lcall
decl
and
mov
and
aas
fs
lds
iret
dec
hlt
rcl
dec
xlat
adc
and
out
call
mov
cmc
stos
dec
jmp
dec
sub
pop
jle
mov
fsubs
xchg
shl
cltd
xchg
xor
jno
mov
stos
popa
xchg
xor
sbb
sbb
sbb
clc
scas
inc
xchg
lcall
xchg
daa
bound
sbb
jno
lret
push
test
nop
shll
jp
jnp
lret
lret
inc
push
xchg
fcompl
inc
insb
jne
pop
mov
push
pop
repnz
dec
jmp
jno
dec
into
gs
mov
push
dec
fistpl
sbb
pop
adc
xlat
loopne
adc
popa
mov
mov
hlt
or
or
lret
inc
pop
repnz
jg
aas
loop
es
data16
cmp
sub
cmpsb
pushf
add
pop
inc
push
lds
bnd
xor
xorb
push
pop
sbb
jo
lret
lret
pushf
jmp
pop
or
mov
addr16
je
push
mov
addr16
loope
mov
andl
xlat
cs
xchg
fldt
jl
stos
jns
cli
insl
xor
jne
faddp
push
subb
mov
in
add
jp
decl
jns
adc
scas
and
mov
flds
adcl
popf
cmp
jp
sub
xchg
ljmp
pop
mov
shlb
arpl
ret
adc
clc
test
fbld
in
in
inc
test
mov
pop
out
push
outsb
add
lds
and
mov
push
call
mov
xchg
push
pusha
mov
mov
jo
xorb
fsts
mov
stos
cmp
pop
add
and
repz
push
jecxz
add
neg
js
adc
adc
xchg
out
fildll
insb
cmp
jb
jne
xchg
jle
pop
scas
xchg
and
int3
lock
cmp
add
push
push
bound
not
dec
jno
sub
xor
ret
jne
dec
jecxz
icebp
dec
out
ds
stos
sbb
movsb
jg
xor
sbb
icebp
jns
outsl
rcrl
sbb
imul
xchg
jg,pn
mov
insl
subl
cli
or
aaa
aas
mov
pop
das
dec
mov
fisubl
push
mov
fldenv
cmc
push
jnp
das
in
sahf
scas
jno
pop
sahf
sub
adc
push
sahf
mov
dec
mov
int
insb
push
gs
fdivrl
dec
fidivrs
enter
ss
cltd
mov
rcrl
pusha
lahf
cmp
mov
fwait
adc
ss
lds
push
pop
xchg
imul
mov
icebp
mov
push
gs
xor
out
mov
cmp
inc
in
xorb
in
imul
add
dec
mov
rclb
adc
mov
add
cld
cld
int3
mov
in
lcall
lret
adcb
add
clc
stc
add
push
leave
ljmp
xchg
cmp
add
xor
inc
pop
int3
push
cmc
enter
dec
xchg
push
shlb
push
outsb
xchg
push
push
iret
out
ljmp
dec
and
add
repnz
cmc
sar
std
dec
in
cmp
inc
iret
enter
and
xchg
inc
inc
adc
stos
xor
mov
aam
icebp
push
push
std
ja
xchg
cmpb
mov
dec
cmp
ss
xlat
jge
sub
les
mov
jo
stos
sub
mov
dec
mov
xor
stos
mov
shrb
inc
pop
pop
jns
mov
inc
scas
mov
lea
pop
mov
and
out
call
lea
clc
xor
adc
jbe
inc
add
nop
stc
rol
clc
adc
add
nop
pop
andl
mov
push
ret
pop
ljmp
popf
push
and
dec
ret
mull
mov
adc
xchg
dec
nop
mov
sub
pusha
mov
mov
or
hlt
mov
rol
or
cltd
adc
hlt
popa
ficoml
test
cmp
and
loopne
mul
movsl
xchg
aaa
repz
pop
lods
ss
sub
fwait
mov
cmp
lods
dec
in
fdivrp
cmc
mov
add
mov
xchg
xchg
mov
pop
test
dec
loopne
scas
stos
dec
or
adcl
es
sbb
es
int
arpl
imull
call
movsb
jmp
ja
loop
mov
sbb
std
fwait
sub
ljmp
and
inc
repnz
lret
pop
stos
test
outsl
xchg
dec
ljmp
call
cmp
add
jo
sbb
jmp
jecxz
insl
push
jns
stos
push
in
inc
sarb
std
and
jno
cwtl
sub
adc
or
sub
or
rcrb
push
pop
mov
push
clc
lods
rcrl
in
popa
imul
xchg
add
dec
movsb
subl
nop
dec
xchg
mov
test
arpl
mov
push
xor
pusha
inc
std
xchg
stos
jmp
jo
mov
sub
push
lcall
jbe
pop
add
in
leave
into
enter
stos
movsb
jno
inc
pusha
sub
and
add
cwtl
repnz
inc
test
sub
mov
push
dec
jae
ret
add
js
orl
lods
imul
ret
aad
cmp
mov
jl
inc
in
fsub
mov
push
pushf
stos
push
dec
pop
das
sarb
dec
daa
mov
sarl
and
or
jl
pop
rorb
popa
lods
cmpsl
mov
adcl
in
scas
fwait
shld
mov
clc
and
or
mov
les
sbb
xor
pop
popf
sarb
sub
push
inc
clc
and
inc
mov
je
fisubl
stos
push
aas
push
push
jge
mov
inc
mov
enter
incl
sub
cwtl
in
jmp
push
repnz
mov
std
imul
fdiv
out
fdiv
test
lock
cs
ss
cmp
mov
ja
adc
and
add
hlt
jno
dec
pushf
mov
enter
scas
xchg
mov
lcall
pop
pop
aam
or
adc
jge
fistpll
sbb
jbe
xchg
rclb
loopne
leave
cmp
dec
stos
inc
and
cmp
in
xchg
dec
data16
cld
add
sbb
adc
push
outsb
dec
xor
push
in
ja
jle
or
sub
insl
icebp
test
cmp
mov
push
aas
or
dec
sbb
mov
cmp
pushf
daa
clc
test
mov
aad
and
lea
out
mov
jp
xchg
ret
js
pop
fsubr
pop
and
mov
insl
push
xor
sti
and
inc
mov
dec
jg
ss
fistpll
cmpsb
mov
or
and
loop
pop
shrl
ficoml
in
and
loopne
fcoms
jl
pop
mov
test
sub
das
mov
or
jp
insb
hlt
cmp
data16
inc
stc
push
xchg
movsb
mov
cmpsl
fnstsw
and
pushl
inc
faddl
cmpsl
dec
cmp
int
jmp
stc
mov
mov
push
pop
pop
adc
mov
sbb
mov
call
adc
fnstsw
fstpt
lods
gs
loop
jbe
jnp
sarl
adcl
adc
mov
inc
repz
std
dec
mov
dec
push
movsb
dec
jmp
nop
jne
sbbl
fwait
cmp
mov
mov
and
or
mov
fiaddl
test
push
inc
nop
loopne
push
xchg
ficoms
lods
lea
movsl
loope
and
or
in
popa
mov
aam
mov
lea
jge
push
add
cmpsb
fs
pop
pop
add
push
fisubrl
lahf
cmp
pop
clc
pop
lret
popa
pop
js
pop
push
out
and
cld
movsl
int
mov
add
pop
inc
and
add
xlat
dec
sbb
sti
mov
push
fsubs
jns
sbb
or
dec
push
inc
cmpsb
mov
iret
mov
insb
push
fwait
test
xor
push
or
out
enter
lret
pop
aas
shl
in
gs
mov
test
xor
inc
and
lcall
pop
lret
xor
ret
scas
cs
jge
mov
das
test
hlt
pop
fstps
and
lods
sti
fimull
adc
or
out
nop
mov
aaa
mov
mov
sarb
pop
inc
out
or
mov
faddp
inc
jecxz
aad
cs
dec
hlt
lret
stc
inc
push
jb
fs
pop
pop
adc
rcl
in
lcall
jecxz
cmpsl
movl
mov
out
adc
push
loop
pushf
xchg
popf
shlb
movsl
imul
inc
push
loope
fsts
aad
outsl
dec
add
inc
pop
jno
inc
jbe
sub
and
mov
jns
leave
pop
dec
push
jns
xchg
je
xor
jae
arpl
inc
lcall
nop
movsl
mov
mov
fcomp
mov
sub
pop
dec
mov
mov
js
ljmp
sbb
or
mov
inc
cmp
cmp
inc
sub
je
lods
ret
outsb
cli
or
jge
js
inc
mov
or
pop
sub
in
les
out
and
and
arpl
cmp
repz
or
jb
test
xor
aam
mov
push
bound
ds
add
mov
jmp
scas
in
mov
aas
pushf
lret
scas
ret
mov
mov
or
jp
inc
cltd
push
xchg
in
and
push
cmpl
call
adc
cmp
mov
pop
in
jle
inc
lret
lret
add
std
dec
rorl
stos
pusha
lret
pusha
js
enter
sbb
adc
sub
aaa
ljmp
adc
fsubs
inc
sub
in
xlat
or
lock
inc
jg
shl
das
cmc
jp
mov
into
in
xor
int
xor
mov
lock
outsb
xor
sbb
dec
mov
cwtl
mov
insl
xchg
push
sahf
dec
cmpsb
push
xchg
pusha
pop
pop
adc
push
and
pop
out
mov
pop
jmp
mov
adc
mov
sti
sbb
and
pop
mov
xor
gs
pop
mov
pop
push
adc
sub
icebp
xchg
cmp
icebp
sub
out
cmpl
or
mov
stos
cmp
adc
pop
inc
jo
fdivrs
add
loopne
push
jmp
add
dec
jb
lock
or
or
jmp
xor
cmpsb
fisttpll
jnp
jo
xor
testl
pusha
in
pop
sbb
popf
pop
repz
insb
cld
fiadds
sub
inc
adc
repz
outsb
and
insb
subb
testb
dec
lret
sbb
punpcklwd
call
fdivl
movsb
add
sub
sub
mov
stc
xor
lea
jnp
add
xor
push
xor
in
test
xor
dec
adc
popf
xchg
fwait
cmp
ja
mov
mov
sub
and
ret
pop
imul
bound
out
shl
cmpsl
movsb
or
call
inc
repz
or
pop
xor
jle
out
pop
jle
cmpps
pop
fdivrs
js
pop
test
mov
stos
outsl
lahf
jp
movsb
sbb
repz
mov
fcomip
adc
pop
inc
cmp
cmpsb
movsb
cld
cmp
jno
push
frstor
inc
and
repnz
repz
addb
sbb
push
sub
jecxz
mov
notl
dec
ret
dec
xchg
les
sbb
xchg
sar
int3
xchg
push
stos
pop
stc
jge
mov
and
sub
movups
push
and
jnp
xchg
mov
sbb
jno
aaa
adc
int3
iret
jo
cmp
rcrb
sbb
lods
adc
jl
loop
sbb
rcll
add
add
cs
cld
cs
lods
inc
push
nop
mov
jg
push
dec
mov
sub
push
lods
lcall
out
es
paddusb
repz
imulb
clc
cwtl
movsb
cmp
lea
dec
sub
xchg
push
adc
mov
pop
mov
jns
mov
out
call
lret
fwait
and
mov
jg
cmpb
imul
and
lods
dec
cmp
push
icebp
mov
mov
ds
sbb
mov
and
cmp
jb
dec
mov
ret
or
xchg
pop
jmp
xor
test
je
cmpsb
pop
loopne
in
nop
out
test
mov
pop
add
xor
hlt
push
pop
inc
shrb
mov
mov
jmp
out
and
rorl
dec
bound
inc
push
lock
add
mov
and
cmp
mov
add
sub
lea
xchg
jb
inc
pop
test
inc
pushf
mov
pop
sbb
sti
sbb
lods
sbb
int
pop
in
or
dec
xor
cmp
lods
sub
cltd
insb
cmp
adc
mov
add
pop
sbb
pop
mov
jnp
dec
and
fstpl
xor
popf
rcr
les
pushf
xor
rolb
cs
stc
imul
sbb
mov
mov
test
mov
xlat
hlt
fistpll
outsb
cli
movsb
fnstenv
mov
xchg
push
sbb
test
pusha
adc
lret
outsb
cmpsb
pop
add
adc
popf
and
je
and
mov
jge
or
nop
clc
and
aad
xlat
roll
pop
mov
xor
addr16
stos
xchg
xchg
sub
loopne
cmc
orb
movl
dec
push
xchg
mov
dec
mov
and
sarb
dec
sub
cmp
mov
into
cltd
mov
sbb
jns
cmp
das
lock
rcll
xor
dec
xchg
cmpxchg
mov
loopne
lret
push
mov
sbb
pop
leave
push
loop
rol
fst
jmp
addr16
push
scas
jno
adc
ror
jge
add
jecxz
mov
in
pushf
adc
dec
les
mov
nop
icebp
add
mov
sbb
adc
mov
outsb
add
pop
cmp
mov
sbb
mov
inc
sbb
cmc
sub
loope
or
xor
push
arpl
orb
addr16
add
int3
fsubrl
inc
jg
push
inc
push
roll
xor
fs
decb
dec
mov
mov
mov
test
insl
sbb
dec
in
and
mov
push
or
push
int
add
pop
sub
xor
xor
out
mov
mov
xor
mov
test
dec
testl
filds
iret
fcompl
jb
test
cld
fstp
fcoms
out
push
adc
add
pop
xchg
jl
inc
ja
push
lods
cld
mov
xor
clc
or
mov
and
mov
sub
nop
push
push
aam
adc
add
dec
push
bound
jns
pop
in
xor
mov
lods
inc
in
scas
ret
sahf
mov
mov
sub
sub
jae
xchg
jle
adc
out
adc
jbe
mov
push
sbb
out
and
aad
inc
ja
pop
ret
cmp
fcoms
jne
xor
mov
imul
pop
add
out
dec
ret
push
movsl
mov
sbb
lret
push
jmp
jecxz
xchg
mov
out
xchg
xorl
inc
xlat
data16
jmp
cli
push
andl
push
nop
xchg
rcrb
xchg
xor
xchg
xchg
stc
or
pushf
push
mov
sahf
roll
insl
cli
push
ficoml
xor
jae
mov
loop
pop
std
fdivrl
jmp
jmp
mov
out
aaa
sbb
test
mov
mov
fisubs
xor
mov
mov
aas
cld
in
rclb
aam
pop
xchg
js
or
movsb
test
xor
jmp
aam
mov
adc
jnp
xor
push
mov
out
or
loope
call
jle
movsb
jge
jae
xorl
scas
mov
add
inc
cld
stos
and
fwait
push
cmp
push
push
loope
xor
ds
add
int3
sub
aaa
jns
push
rolb
mov
adc
in
addl
loop
into
jle
dec
cmpsb
sub
xor
xchg
mov
or
out
push
movsl
and
in
pop
adc
add
xor
mov
je
xlat
je
aad
fimuls
and
stc
add
jns
sub
leave
sbb
popf
xor
shrl
xor
add
push
pop
sbb
sub
popa
stos
xlat
cmp
mov
push
adc
add
mov
movq
iret
outsl
lret
pop
xchg
test
popf
fnsave
push
pop
add
xlat
cmp
loop
mov
stos
sbb
mov
mov
add
jmp
push
aaa
xchg
hlt
adc
adc
jge
dec
inc
push
fstl
or
je
dec
inc
jae
mov
push
bound
iret
aaa
push
adc
cmp
popl
sub
nop
pop
jns
and
out
inc
clc
sub
xchg
in
add
fimuls
andl
or
jnp
or
xchg
out
push
pushl
ds
cmpsb
mov
sbb
jb
movsb
addr16
pushf
lds
push
mov
jo
cmp
ror
sub
repnz
js
ret
jecxz
fidivrs
add
pop
mov
cltd
int3
lods
or
fisttps
sbb
add
sbb
cli
scas
test
sbb
jmp
arpl
mov
loop
inc
jp
call
imul
sub
inc
js
push
sub
add
outsl
rorb
jne
pop
fs
hlt
js
pushf
adc
aad
mov
pop
sub
repnz
add
xor
mov
mov
out
leave
mov
insl
lds
pop
mov
adc
pop
out
add
adc
mov
js
xchg
pushf
inc
repz
dec
mov
mov
test
jae
repnz
aad
repnz
mov
test
imul
lods
xor
arpl
sbb
dec
push
test
gs
mov
sbb
rcl
xchg
mov
loopne
xchg
out
loope
adc
in
ret
dec
insl
adc
mov
xchg
push
xor
dec
xchg
mov
psubsw
push
jnp
nop
mov
stos
mov
pop
filds
rorb
jg
fs
dec
add
clc
arpl
xor
lea
sub
push
insb
xchg
aad
add
stc
xor
mov
lret
push
mov
xlat
ret
mov
out
shl
pop
nop
push
mov
mov
enter
pop
pop
push
and
xchg
mov
inc
lock
dec
xchg
stc
and
mov
cmp
mov
lret
popf
pop
mov
sbbl
pop
mov
js
sbb
xchg
push
lcall
xor
push
inc
je
iret
add
adc
sub
xchg
test
cmc
push
dec
mov
mov
ja
add
xor
push
setbe
sub
adc
adc
lock
leave
cs
lahf
pop
mov
stos
jecxz
jb
out
add
or
pop
ds
in
fisubl
cmp
fmulp
cmpsl
mov
inc
dec
into
fcomi
int
mov
xchg
jge
sarl
int
and
in
movsb
test
xor
nop
loopne
leave
sbbb
add
sub
outsb
int
das
add
mov
push
mov
ljmp
in
jbe
fisttpll
fstps
and
shlb
xlat
ret
rcll
cmpsb
push
out
mov
mov
sub
mov
jge
popl
into
js
adc
imul
icebp
out
dec
rcrb
fcoml
pop
int
repnz
shl
cmc
pop
adc
mov
xor
jle
or
pop
adc
add
ljmp
dec
push
xchg
adc
pop
sbb
cmp
inc
adc
iret
loopne
jmp
in
add
push
push
dec
outsb
adc
test
dec
lds
and
mov
ja
lods
push
icebp
bound
cli
fldenv
sbb
aam
inc
cmp
jnp
fimull
js
cmc
jns
push
mov
dec
xchg
subl
xor
jmp
cmp
cmp
popf
les
fidivl
jno
mov
test
sahf
repz
scas
dec
ljmp
xor
push
arpl
pop
push
push
jge
dec
add
jno
ljmp
cmp
and
and
loope
pushf
sbbb
out
mov
lods
xchg
jecxz
mov
fs
div
push
inc
pop
jns
lcall
pop
xlat
adc
pop
xchg
fcoms
jge
mov
test
rolb
push
sbb
stc
cmp
pop
jmp
pop
pop
and
pop
mov
verr
cmpb
into
out
movb
inc
mov
out
inc
popaw
dec
pop
insb
jne
loopne
sahf
leave
and
pop
mov
cmp
dec
pop
push
mov
es
sub
inc
loop
push
xchg
into
jmp
mov
test
movsb
pushf
fcmovne
popf
mov
jne
and
mov
pop
scas
sbb
jnp
sbb
cwtl
or
scas
movsl
nop
cwtl
sti
repnz
ljmp
test
gs
js
xchg
cld
outsb
stc
sub
shll
mov
inc
nop
mov
insl
mov
push
aad
lcall
add
cmp
xor
mov
cwtl
jns
sbb
aam
cltd
xor
popa
adc
jl
push
sbb
sub
lds
mov
negb
imul
es
ljmp
mov
fildll
arpl
jb
push
push
jb
dec
pop
in
dec
push
xlat
out
fisubl
push
and
scas
pop
or
mov
addr16
and
sti
dec
clc
test
arpl
dec
loop
gs
loopne
mov
das
jecxz
and
lcall
cmp
scas
jo
cwtl
and
adc
add
fwait
pop
and
pop
sub
pop
gs
cmp
fstl
ljmp
lods
adc
mov
scas
xor
push
faddl
jl
sbb
sti
repnz
lods
sub
mov
sbb
xchg
inc
adc
inc
cltd
jb
adc
jno
pop
int
leave
rorl
andl
test
xchg
add
jecxz
jb
and
int3
in
int3
sub
inc
idiv
hlt
fldt
dec
push
adc
fsubrl
dec
adc
fildll
jl
cmpsl
or
adc
shll
ret
mov
inc
pop
pop
adc
xor
ss
pushf
icebp
push
or
popa
daa
je
cmp
mov
push
inc
subl
or
pop
inc
pusha
inc
push
add
pop
mov
add
adc
dec
xor
mov
cmp
in
inc
dec
int3
mov
test
sub
xchg
iret
mov
xor
lret
rcrb
inc
bound
pop
jns
dec
nop
call
inc
daa
addr16
sub
push
ljmp
loope
insb
cli
ja
nop
js
repz
sub
pushf
xchg
mov
jbe
je
mov
cmp
scas
sub
aad
add
ret
pop
sbb
push
cwtl
sbb
stc
mov
inc
xor
shlb
outsl
lods
mov
enter
xchg
add
fldenv
jmp
jge
push
push
test
sbb
push
push
call
ret
cmp
adc
push
outsb
sarb
out
mov
jecxz
add
out
into
xor
jg
and
sub
das
jb
rcll
mov
data16
dec
jmp
hlt
jns
dec
push
jns
pop
xlat
push
in
lods
pushf
mov
push
mov
addl
push
dec
cmp
mov
insl
test
test
fwait
pop
or
outsl
pcmpeqb
inc
add
jns
push
rcrb
or
or
cld
aad
in
sbb
mov
test
mov
fdivl
ret
or
mov
cmp
jae
pusha
out
push
test
push
scas
mov
mov
xor
sub
stc
out
lock
cmp
xor
nop
xchg
sub
and
jnp
fs
push
fiadds
leave
push
sbb
cli
or
clc
cmp
mov
mov
mov
dec
jecxz
adc
aaa
mov
lcall
xor
inc
cwtl
mov
push
cmp
mov
ja
in
rep
push
fdivrs
test
lret
lods
lds
mov
mov
mov
pop
mov
in
or
call
add
lcall
sahf
and
leave
xchg
sahf
xchg
mov
mov
in
in
clc
pop
push
out
sub
sbb
adc
jmp
inc
or
addb
cmp
adc
mov
pop
or
in
ret
imul
jle
je
push
nop
test
cli
xchg
pop
mov
mov
fwait
aam
lods
mov
aad
scas
sbb
fwait
lea
andl
inc
xchg
js
test
or
mov
scas
hlt
pusha
pop
mov
pop
pop
les
enter
loop
pushl
cmp
adc
adc
nop
out
mov
pushf
cmp
test
jmp
std
dec
sub
rolb
cmp
popl
fadd
sub
xchg
sub
pop
push
and
imul
xchg
mov
loop
cmp
mov
clc
filds
add
pop
sbb
into
aad
or
cmp
and
test
nop
jno
mov
popf
hlt
mov
inc
and
push
ret
mov
scas
sbb
scas
sub
cmc
sarl
sbb
mov
or
iret
cmp
ss
loope
rcrl
push
ds
xor
lcall
pop
imul
mov
test
mov
loopne
clc
cmp
bound
test
mov
pop
dec
push
ret
icebp
mov
push
jg
ja
jle
push
arpl
xchg
stos
insl
pop
ficompl
int
mov
cmpsb
insl
mov
aad
dec
lock
adc
and
inc
movsl
bound
pop
sbb
test
jnp
shlb
cmpl
out
mov
push
jmp
daa
es
decb
ss
pop
push
rorl
dec
mov
scas
insb
pop
in
jns
inc
lea
mov
imul
pop
jns
mov
shr
sub
lock
sub
jns
push
inc
sbb
jb
and
insl
lock
in
inc
arpl
sbb
cmp
or
or
xor
repz
fcom
test
mov
sbb
push
mov
inc
or
adc
sti
or
dec
dec
into
lea
sub
pop
push
jecxz
cld
movsb
das
pop
scas
bound
aad
push
pop
cmpsl
ss
test
adc
inc
in
mov
fimull
repz
xor
inc
lea
jle
outsl
pop
inc
xchg
rorb
pop
insb
out
xor
and
add
inc
repz
in
xchg
scas
lret
repnz
add
aas
bound
fs
loope
push
xchg
adc
addr16
adc
cs
leave
jg
xor
outsl
inc
mov
loop
cmpsb
and
stos
inc
push
aas
jg
insb
sbb
and
cli
xchg
inc
xor
aam
outsb
xor
outsl
hlt
push
mov
push
mov
addr16
pusha
jnp
mov
push
add
mov
test
or
mov
mov
lea
fs
xor
fwait
nop
sahf
sti
jmp
scas
sub
pop
fmuls
push
mov
mov
jl
daa
jo
gs
xor
xchg
jno
fidivrl
adc
pop
xchg
push
jno
mov
mov
jmp
sub
pushf
daa
les
cmp
sub
sub
pushfw
lahf
sbb
and
pop
xchg
adc
pop
mov
mov
cmp
or
jle
sbb
gs
jge
mov
push
dec
sarb
pinsrw
cmp
push
mov
sub
sub
add
sbb
jnp
dec
test
xchg
sub
mov
jbe
inc
mov
adc
xchg
push
push
ljmp
gs
int3
testb
sub
sbb
fmul
lds
mov
jae
adc
test
loopne
push
sub
xchg
call
or
or
and
push
shll
std
xor
mov
imul
or
sbb
pop
jb
or
fs
xor
leave
imul
leave
cmp
call
cmp
jo
push
or
xor
scas
jo
imul
ret
cmp
add
or
mov
mov
mov
pop
imul
adc
ja
lahf
pusha
mov
and
mov
jg
loopne
in
adc
lret
mov
jae
movsb
mov
jecxz
lods
sub
pop
rcll
aas
push
adc
loop
test
push
lock
mov
pop
scas
xchg
add
loopne
dec
adc
mov
imul
add
inc
cltd
pushf
pop
xchg
sbb
mov
add
test
call
imul
sahf
jmp
xor
sub
and
scas
xchg
mov
mov
andb
arpl
adc
fwait
or
xor
fisttpll
add
mov
outsl
fstp
sahf
mov
hlt
mov
cmc
and
mov
pushf
mov
sbb
xlat
popf
das
sub
shl
xchg
pop
lock
pushf
outsb
ret
loope
cmpsb
sahf
gs
icebp
arpl
cmp
shrl
adc
and
mov
mov
mov
jge
jnp
ds
lods
das
mov
sub
and
adc
fsubrs
mov
dec
adc
fimuls
push
mov
or
cmp
add
mov
mov
inc
jo
xchg
push
sti
add
in
mov
mov
xlat
xchg
adc
fsubs
cmp
dec
scas
pop
out
imul
sahf
popf
ret
fdivr
mov
jecxz
faddl
loope
push
clc
xor
pop
xlat
sub
movsl
or
pop
or
cli
xchg
sbb
js
ficompl
cmp
cmc
test
popf
into
mov
cmp
mov
and
sar
test
mov
jg
dec
aam
jle
mov
fisttpll
or
arpl
inc
jo
xor
push
dec
sub
adc
mov
push
xchg
xchg
and
sbb
mov
in
iret
fnstenv
jl
clc
mov
fisubs
xchg
pop
sbb
pop
lds
pop
in
aad
sysenter
shll
sarl
cmp
xchg
outsb
cmp
mov
sub
cwtl
add
xor
neg
loopne
sbb
les
aaa
mov
sub
sti
sbbl
push
call
push
jmp
jns
push
sbb
adc
mov
push
pop
inc
mov
popf
or
dec
or
fadds
push
push
mov
cmc
pop
add
jns
out
data16
mov
xchg
xchg
inc
mov
xchg
push
lock
test
mov
jl
push
xchg
bnd
out
jp
inc
and
popa
int
jb
stos
pop
stos
insb
pop
outsb
ljmp
out
pusha
inc
jo
in
test
mov
add
in
and
inc
out
and
data16
adc
ret
loope
aad
jns
or
and
mov
popf
add
adc
jg
inc
imul
testl
cli
fstpl
sub
sbbb
lock
add
pop
les
xchg
ss
popf
sbb
jb
mov
pop
mov
int
enter
xchg
mov
insl
inc
outsl
in
jle
stos
push
xchg
mov
roll
divps
mov
int3
push
pop
sub
pop
ja
outsb
ffree
push
xor
and
dec
push
mov
push
mov
xor
xchg
adcl
xor
xor
mov
jge
inc
icebp
add
xorb
js
xor
cmpsl
repz
push
lods
lea
scas
scas
jle
cmp
sub
repz
and
int3
shrl
mov
cmc
mov
add
loope
push
cld
int
clc
adc
pop
pop
rcll
inc
xor
mov
mov
xchg
arpl
lret
in
int3
cmp
xchg
leave
mov
out
sti
pushw
add
dec
mov
adc
ja
or
cmc
inc
lret
or
movsb
ret
rcrb
out
cli
sub
push
adc
and
dec
fistl
xchg
fwait
ljmp
call
jae
shl
lods
popf
insb
cmp
shl
lea
mov
and
pop
bound
sub
xor
xor
sbb
js
stos
int3
in
push
dec
add
jl
jle
xchg
leave
jl
sti
or
cmp
adc
push
jns
in
imul
push
jl
push
repz
jmp
enter
into
cli
scas
out
sbb
xor
aad
lods
sub
and
adc
cltd
jg
in
scas
outsw
lods
adc
xchg
inc
or
inc
fisubs
movsl
aad
mov
xchg
mov
pop
dec
sub
and
push
dec
jne
pushf
out
js
shlb
int3
push
mov
xchg
aas
and
xor
push
mov
pusha
and
push
xor
mov
in
sbb
call
outsb
and
repnz
adc
pushf
xor
test
out
insl
mov
stos
inc
mov
pushf
push
xchg
mov
dec
jns
mov
movsl
in
dec
mov
push
aaa
and
mov
lcall
fidivs
jmpw
adc
cmp
movsb
sbb
mov
mov
dec
mov
lea
mov
ret
clc
jno
mov
inc
xor
insb
adc
cmp
insl
stc
icebp
inc
bound
std
push
in
mov
stos
inc
jno
cmp
mov
and
mov
sub
or
ds
dec
push
mov
test
mov
es
test
cmp
pop
test
cmpb
lods
mov
dec
jns
scas
jo
inc
addl
jmp
inc
loope
lret
sahf
add
inc
rol
loope
cmp
dec
enter
or
fadds
pusha
add
xchg
jge
or
stc
and
mov
jg
xchg
push
mov
subl
je
fsubrp
jecxz
jae
pop
lods
or
xchg
or
push
sub
mov
push
faddl
shlb
int3
mov
pusha
popf
mov
jge
ljmp
xchg
jns,pt
pop
lock
scas
divl
mov
pop
mov
add
leave
cli
or
outsl
xchg
mov
lock
cld
push
push
pop
sub
addr16
xchg
les
lcall
push
call
in
push
loopne
rolb
rorl
sbb
jle
insb
nop
cmpsb
icebp
jbe
add
out
xor
incl
hlt
out
in
cld
push
out
cmp
scas
inc
into
pop
repz
adc
dec
lock
inc
loope
jle
adc
les
jae
in
add
or
and
inc
sbb
ja
daa
pminub
cmc
cmpsl
sbb
out
push
js
out
insl
das
mov
hlt
pop
xor
add
lock
jmp
mov
xor
pushf
dec
hlt
orl
push
and
push
hlt
mov
mov
out
negl
cmp
test
add
fnclex
test
pop
outsb
roll
aad
xchg
pop
ljmp
dec
and
scas
mov
bnd
push
jle
inc
push
push
jns
ja
fs
mov
xchg
leave
and
cmp
loopne
inc
pop
inc
or
xchg
pop
jle
xlat
lea
inc
decl
repz
adc
incl
pop
movsl
mov
sahf
mov
jbe
xchg
push
pusha
xchg
mov
add
jae
inc
pushl
out
cmp
pop
sub
pusha
mov
lahf
cmpsb
ds
push
daa
fistl
xchg
lock
je
incb
adcl
fdivrs
push
pop
xor
mov
hlt
and
les
dec
cmp
cld
or
mov
stos
icebp
xor
mov
cmpsb
lcall
or
pop
pop
pop
or
mov
aaa
outsb
mov
shll
mov
cmc
shlb
out
xor
xor
xchg
imul
iret
dec
push
mov
mov
sbb
mov
ja
shl
aas
mov
xchg
push
inc
mov
cmp
adc
insb
mov
dec
rcr
mov
ficompl
test
daa
inc
sar
jmp
enter
push
pop
xchg
cmp
addr16
push
and
ret
or
je
or
add
mov
stos
xchg
mov
test
lahf
push
adc
xor
or
fcomps
adc
jae
xorl
dec
pop
adc
dec
push
cmp
nop
jae
int3
ds
push
mov
out
pop
rcll
or
lret
orl
or
insb
outsl
test
repnz
dec
cltd
and
jle
mov
rcrb
divb
inc
inc
js
loope
minps
je
inc
imul
and
int3
sarb
js
cwtl
ret
and
inc
jecxz
sbbl
xchg
sbb
mov
test
pushf
lcall
shlb
movsl
ficomps
sbb
mov
pop
dec
xor
cmp
xchg
loop
pop
adc
dec
je
and
dec
or
pop
loopne
cmp
fsubl
sbb
xor
push
shlb
or
mov
lds
add
pop
inc
arpl
dec
xor
fld
adc
enter
test
push
call
lea
je
into
out
add
repnz
and
sarb
inc
shrb
stc
mov
das
outsb
pop
mov
in
sahf
ljmp
mov
mov
xor
pop
lret
or
xorb
scas
sbb
sahf
cld
lods
repnz
ja
mov
add
inc
movsb
mull
mov
mov
out
test
mov
imul
jno
mov
ds
and
add
js
mov
add
mov
aad
popf
repnz
xchg
fildll
movsb
rorl
hlt
jle
sub
mov
cmp
dec
test
jge
inc
jle
push
loope
xor
push
pusha
inc
fistpll
popa
adc
mov
popa
dec
js
mov
pushf
aaa
xor
mov
pop
fsts
xchg
lds
inc
lods
mov
iret
int3
dec
add
cmp
sbb
aam
add
xchg
mov
pop
frstor
push
arpl
rcr
inc
push
into
lods
cmpsb
add
mov
dec
fwait
mov
or
xor
lock
jo
inc
cmpsl
xchg
es
rclb
repnz
int
fistpl
jp
inc
and
mov
ret
add
clc
cmp
outsl
rcrl
ja
mov
sti
inc
fsub
loopne
adc
sub
mov
and
push
lret
xor
pop
or
jl
into
fldt
mov
stos
addb
dec
push
pop
cld
cmp
push
jmp
add
addr16
fldl
add
loope
inc
fs
xchg
and
sbb
in
and
adc
ret
push
cli
ljmp
aas
ret
aas
addl
out
in
and
cmp
mov
xchg
sub
or
adc
jb
rclb
mov
aam
int3
movsl
inc
sbb
fdivrl
push
pusha
cmp
outsl
mov
popf
xor
adc
xor
in
push
sbb
add
scas
sahf
adc
sbb
lahf
mov
pop
and
sub
bsf
dec
add
aam
and
mov
inc
aam
push
jno
or
jno
pop
call
leave
rcrl
out
bound
sub
sbb
gs
scas
jmp
sub
fs
mov
mov
mov
cltd
mov
xchg
daa
xchg
daa
ret
repnz
sub
jo
cltd
cmpsb
js
loop
loope
mov
imul
mov
out
scas
es
shrl
cltd
cvtpi2ps
fidivl
fdivp
into
sbb
inc
js
movsb
sahf
cmp
xchg
jge
hlt
negb
movsb
jne,pn
xor
sbb
outsb
int
pop
lret
aam
cltd
stc
push
xchg
pop
push
sbb
add
push
lret
sbb
mov
movsb
xorb
test
push
pop
or
sbb
fld
jbe
pop
call
jbe
mov
xchg
in
sar
pop
push
jbe
jle
dec
jecxz
das
dec
jmp
mov
imul
gs
xchg
mov
repz
mov
lret
scas
mov
cmpsl
insb
clc
mov
mov
adc
test
outsl
das
mov
dec
or
into
mov
push
pop
es
movsl
outsb
stc
decl
and
jmp
push
mov
xchg
ret
dec
ss
fs
push
dec
ds
inc
push
sub
call
xchg
sbb
cmpsb
inc
lea
mov
cwtl
and
imulb
mov
jno
mov
into
fimuls
dec
add
jge
cltd
jmp
push
cmp
or
imul
dec
leave
lret
sub
add
mov
push
jmp
call
lret
mov
ja
xchg
push
or
bound
fdiv
xor
push
xchg
cli
lret
xchg
inc
in
das
loopne
pop
and
test
cmpsl
lods
push
stc
fistpll
and
jbe
dec
jmp
push
inc
loope
dec
mov
xchg
adc
insl
push
sbb
mov
dec
cltd
sahf
into
je
nop
jmp
mov
inc
insb
mov
js
fwait
push
repz
in
pop
cs
adc
sbb
outsb
mov
cmpsl
addr16
cmp
and
xchg
or
arpl
mov
add
je
or
add
mov
stos
andl
ja
sub
xchg
ret
adc
sar
mov
dec
jbe
ja
and
or
hlt
leave
jnp
mov
dec
enter
fadd
xchg
mov
push
xchg
xlat
sahf
lret
scas
shrl
into
lret
sahf
aas
pusha
sbb
enter
lods
ds
lahf
xchg
mov
inc
mov
add
jl
popf
aam
fstps
jmp
sbb
push
sub
addb
ret
pop
adc
inc
jno
add
out
mov
push
insb
and
fnsave
dec
lods
and
inc
jns
pop
je
repz
int3
mov
ret
icebp
pop
mov
sbb
daa
sub
or
ja
push
push
sar
push
add
push
lcall
into
mov
xor
insl
xchg
mov
push
push
inc
shll
cld
pusha
popf
xchg
inc
jg
fimuls
xchg
pop
adc
pop
aad
adc
sub
cmp
nop
sarb
xchg
sbb
jmp
add
movsl
out
scas
stc
jo
test
loope
sahf
push
fcomps
xchg
xor
mov
into
push
fwait
push
jmp
cwtl
sbb
out
inc
mov
add
in
rcrl
xor
push
inc
enter
xchg
sbb
or
mov
jg
mov
and
sub
sub
movsb
and
pop
cltd
mov
dec
jp
xor
dec
jo
std
fisttpl
hlt
test
xor
aam
xchg
pop
cs
mov
pop
inc
icebp
sahf
pop
mov
adc
xchg
lcall
mov
inc
jp
outsl
or
xchg
mov
test
jg
fisubs
or
gs
out
aas
fadds
jns
dec
pop
cli
out
aam
fistpll
nop
shrb
bound
push
fiadds
inc
mov
sahf
dec
xlat
mov
scas
lods
jns
xor
fildll
xor
int3
out
nop
ljmp
scas
push
pop
push
xchg
cs
push
mov
stos
xor
fistpl
lea
xor
inc
jbe
inc
addr16
shlb
aas
int
subl
movsb
xorb
dec
mov
jbe
pop
les
fmulp
cmp
imul
flds
pop
sub
std
lea
fs
data16
mov
ljmp
fbld
iret
sbb
int
push
int
push
sbb
pop
dec
orl
imul
lea
pushf
add
mov
daa
fiadds
das
popa
mov
sub
cmpsl
push
outsl
lock
push
dec
loop
scas
pushf
or
jbe
test
inc
imul
das
adc
push
and
xchg
nop
in
dec
adc
sbb
sub
pop
push
dec
jl
sub
out
dec
inc
insb
movsb
lahf
loop
mov
xchg
shlb
sarb
dec
repz
xchg
push
fstl
and
popf
leave
int3
adc
js
shlb
ficomps
clc
js
shll
push
addl
mov
rep
push
aam
mov
inc
xchg
out
adc
fwait
mov
into
mov
jae
movsl
or
mov
out
push
and
lret
repz
or
push
andb
addr16
cmp
mov
iret
pop
mov
sub
fnsave
jbe
dec
mov
std
andb
add
push
popa
fildll
movsl
pop
adc
stc
aad
cmp
mov
jae
lcall
xchg
popf
lods
inc
xor
pop
push
mov
test
mov
pop
inc
fdivrp
insb
fistpl
mov
repnz
sbb
mov
or
mov
lret
xor
pop
out
lods
out
mov
iret
dec
cmpl
ja
jecxz
add
add
dec
mov
ret
dec
pop
stc
and
negb
push
imul
xlat
mov
or
sbb
mov
mov
stos
jle
push
movsb
push
fdiv
push
cmp
fidivrl
aas
int3
sub
jge
add
mov
sub
movsb
aam
clc
in
xchg
xbegin
lea
ret
mov
pop
push
shll
aam
test
shrb
push
mov
mov
fwait
xor
int
cmp
dec
xor
sbb
sub
scas
adc
lock
and
mov
cmp
xor
cmp
inc
rorl
inc
adc
out
outsb
test
push
push
inc
test
scas
shll
pop
adc
fsubrs
xchg
ret
inc
and
shrb
in
int3
negl
inc
lock
and
xchg
push
hlt
cltd
dec
jp
mov
sbb
pop
add
loop
push
mov
fadd
sub
pop
inc
inc
sti
mov
cmp
adc
push
xor
loop
jns
rorl
out
push
mov
subb
push
fildl
test
push
cli
repnz
mov
push
adc
or
pop
notl
inc
pop
insl
inc
push
fsts
repz
mov
loop
xor
dec
add
aaa
xor
push
xor
addr16
add
inc
sahf
jo
cld
pop
rcl
js
cmp
dec
cmp
and
mov
mov
and
ljmp
xor
dec
dec
add
push
dec
test
popf
push
test
xchg
movsl
mov
leave
repnz
and
sub
psubb
add
dec
std
inc
call
inc
pushf
negl
jg
cmpsl
test
pop
imull
mov
jae
test
mov
jae
pop
xor
jns,pt
stos
ds
xor
push
enter
pop
cmp
out
adcl
cmpl
roll
out
ret
push
mov
lcall
push
sbb
in
outsl
push
in
inc
cmc
xchg
cwtl
add
adc
mov
mov
cmc
or
adc
data16
xchg
mov
mov
xchg
cmp
cmpsb
pop
cmp
scas
int
mov
cltd
mov
cmp
test
adc
test
dec
cs
xchg
cli
xor
es
and
cltd
fimull
cmpsl
popf
jle
pop
mov
sbb
cmc
mov
aaa
outsl
andb
pusha
xchg
jl
and
or
movsb
test
mov
cmp
shr
loopne
insb
stc
push
lret
shlb
inc
sub
xchg
mov
mov
mov
mov
xlat
cmp
je
pop
int
shlb
xchg
pop
rcrb
lcall
add
out
push
icebp
dec
sbb
fmulp
mov
jg
mov
add
and
ja
cmp
push
movsb
jl
leave
add
mov
lods
repnz
cmp
jnp
inc
cmp
in
lahf
dec
out
call
push
dec
adcb
mov
push
leave
jb
in
xor
dec
and
jmp
jg
fcomps
test
pop
mov
and
outsb
vpaddb
jnp
clc
in
push
imul
jmp
add
lcall
adc
dec
pop
repz
xchg
lret
jbe
fld1
stc
pushf
jbe
addr16
mull
in
hlt
cs
sbb
inc
mov
fwait
pop
xchg
xor
jecxz
add
sub
fwait
int
cmpsl
sbb
xor
outsl
js
push
mov
xchg
cld
xchg
mov
cmp
mov
popf
jmp
mov
dec
fwait
cmc
jbe
add
or
stos
das
or
dec
aaa
stos
aam
inc
and
sbb
xchg
repz
sbb
push
rorb
stc
call
add
in
xchg
lock
pop
movsb
pop
add
int
movsb
lods
pop
in
mov
cmpsb
or
out
mov
inc
dec
dec
add
into
sbb
pop
mov
jno
adc
cltd
pop
ja
aad
cmc
insb
lea
xchg
dec
mov
js
fists
xchg
orl
clc
les
mov
cmpsb
inc
and
in
iret
cmp
pushf
and
xchg
stos
shll
sub
and
sti
mov
ret
stos
out
or
jmp
gs
clc
repnz
into
into
fnsave
mov
insb
sbbb
icebp
movsl
pop
xchg
inc
lret
push
pop
jbe
out
pop
push
or
lods
shlb
push
jmp
mov
sbb
outsl
sub
shlb
shrb
in
or
pushf
add
sub
dec
insb
iret
mov
test
dec
cmp
stc
pop
cli
pop
daa
out
mov
lods
rcr
sbbb
cld
mov
lds
insl
imul
fsubrl
mulb
fildll
out
stos
in
adc
leave
ret
mov
testl
add
pusha
inc
sub
jns
fstpt
mov
dec
xchg
pop
aam
inc
cmp
aam
adc
inc
loopne
movsl
lret
test
cli
out
xor
sub
int
aam
adc
ficoml
or
mov
rcl
je
xchg
scas
mov
sbb
sbb
push
les
and
inc
add
xor
jbe
xor
xchg
fstps
and
xchg
cmp
dec
inc
mov
sub
stos
movsb
jno
lods
xchg
xchg
imul
pop
xor
inc
mov
inc
jnp
mov
sub
test
mov
int3
sahf
adc
mov
adc
sbb
mov
repnz
mov
in
stos
push
xlat
fwait
lret
pushf
mov
mov
lods
out
pusha
ret
mul
call
push
popf
movsl
mov
jo
nop
mov
shll
pop
mov
rolb
sbb
addr16
mov
outsb
aas
nop
mov
out
jl
mov
in
sbb
inc
testb
ficoms
movsb
pop
push
mov
or
cli
lods
aaa
ret
movsb
shrb
mov
sbb
int
imul
stc
xadd
int3
aaa
fwait
and
out
pop
cmp
sub
add
movsb
insb
or
bound
mov
xchg
push
pop
cltd
icebp
xchg
adc
xchg
aad
inc
nop
sbb
mov
outsb
mov
cmp
pop
mov
xor
cmp
inc
pushl
ss
outsb
sub
icebp
mov
jge
movsl
mov
fs
pop
popa
subl
test
nop
je
and
decl
adc
ljmp
lock
sahf
inc
call
pop
insb
jmp
cmp
lods
rorl
rcrb
insb
idivl
jnp
mov
outsb
xchg
push
shrb
sub
mov
das
lea
stos
adc
call
jae
cld
cmp
shlb
dec
loope
add
test
xorb
xchg
mov
cmp
cld
mov
mov
sti
or
dec
or
push
out
jbe
xor
xor
inc
jle
cwtl
cmp
xor
sbb
cwtl
xchg
inc
inc
jne
fdivrs
into
clc
jle
mov
inc
std
inc
push
icebp
or
xchg
fbld
xor
mov
jg
push
stos
outsb
in
aad
iret
xchg
push
movsb
xchg
lahf
lcall
es
mov
es
ret
daa
dec
mov
lret
dec
sub
add
add
sbb
loopne
cltd
or
cmp
ja
add
call
mov
jns
call
jp
js
inc
and
mov
ret
jbe
push
lods
in
mov
out
push
fsubr
daa
fsubrs
sub
push
sub
mov
cmc
in
mov
add
loopne
xor
add
cld
xchg
sbb
inc
sub
push
mov
outsb
ds
outsb
pop
ret
outsl
fnclex
add
andb
in
jle
mov
lcall
test
stos
add
jl
hlt
mov
les
mov
sub
test
inc
xchg
outsb
mov
sub
outsl
rcrl
cmp
andb
lahf
int3
push
inc
vpsrlq
sti
push
js
xchg
adc
sbb
sub
cmc
scas
mov
inc
adc
dec
call
fdivrs
inc
int3
popa
add
mov
mov
dec
sub
sub
data16
scas
popa
jp
xlat
mov
cmp
ljmp
adc
sub
dec
dec
jne
cs
test
xchg
xor
xchg
jo
jmp
inc
popa
mul
mov
pop
adc
out
inc
daa
add
out
push
xor
jb
loopne
fisttpll
dec
aad
jmp
inc
scas
mov
pop
clc
notl
push
add
inc
cmp
mov
int3
xorb
mov
test
sbb
shl
ficompl
mov
push
mov
or
int
mov
sbb
pop
inc
mov
test
addr16
or
faddl
push
imul
jbe
xchg
es
clc
loop
mov
or
jl
sahf
sbb
fdivrs
add
das
sub
push
in
flds
dec
imul
jae
sbb
add
call
and
adc
popa
pop
mov
sbb
mov
or
push
hlt
xor
inc
stc
js
movsb
lods
orl
cld
pop
out
xchg
cmp
pop
jmp
loopne
xlat
lea
rolb
push
pcmpeqd
jge
les
fs
xor
rcrb
shrb
mov
loop
rorl
enter
xchg
shl
push
testb
jp
adc
cli
push
add
and
stos
mov
scas
rcr
xor
out
mov
xchg
mov
push
jmp
int
movsb
pop
test
jae
fcmovu
adcb
movsb
scas
rolb
xchg
pop
into
jns
push
jo
lret
pop
adc
xor
movsb
dec
je
outsl
testb
int
xor
xchg
cld
and
sub
adc
jecxz
je
mov
xlat
test
jp
push
sbb
subb
lea
mov
aad
mov
mov
mull
pop
scas
xor
stos
pop
mov
mov
xchg
cld
mov
imul
xchg
and
inc
int3
mov
in
repz
dec
sbb
push
xchg
and
stos
decl
cmc
repnz
out
dec
xchg
add
mov
sbb
pop
mov
repz
inc
mov
cld
fisttpl
cmp
ret
insl
ja
and
mov
bound
push
outsb
cltd
ficomps
in
xchg
sub
loop
repnz
ret
xor
rol
rorb
xchg
out
mov
sbb
cltd
dec
les
das
or
push
imul
out
lcall
orl
lds
cmp
jno
mov
in
xchg
test
dec
decl
movsb
imul
and
insb
mov
mov
insl
xor
popf
ja
adc
add
dec
inc
dec
movsl
push
mov
mov
push
xchg
aam
push
das
in
iret
xlat
into
stos
and
pop
scas
xor
es
shrl
adc
xchg
cmpsl
test
add
fstps
movsb
fwait
ds
fidivrl
jbe
or
test
inc
push
clc
mov
xor
add
adc
xor
subb
xor
nop
pop
or
jp
add
mov
xor
cmp
pusha
sub
lahf
aam
mov
ret
sbb
jge
dec
sbb
mov
mov
sub
ss
ljmp
shlb
cmp
cmpb
jb
push
xor
mov
lahf
icebp
mov
mov
add
mov
cmp
mov
stc
lock
mov
arpl
mov
mov
mov
xor
sub
push
adc
cmpsb
jle
hlt
cld
jle
and
sbb
inc
lahf
sbb
xchg
insb
mov
das
pop
pop
push
testl
aam
lods
ret
pop
repnz
aas
jp
iret
lret
push
or
add
and
cmpxchg
push
jl
enter
js
sub
out
repnz
cmp
dec
xchg
test
cltd
dec
jbe
xchg
mov
fistpll
cli
jle
leave
add
andl
fmull
cld
jp
mov
int
movsb
out
sub
hlt
or
sub
imul
insl
in
incl
cmp
pop
out
jl
fnstcw
pop
inc
cld
int
cmp
inc
jl
std
jmp
inc
fsubr
xchg
jne
bound
jnp
movsl
xor
stos
mov
jp
jge
add
push
rolb
outsb
test
hlt
push
pop
mov
mov
push
mov
and
enter
or
js
sar
fildl
cmp
flds
push
mov
xlat
sbb
and
rcrb
mov
cmp
icebp
hlt
mov
repz
mov
xchg
jl
sbb
repz
sarb
or
pop
nop
out
xor
and
sbb
adc
idiv
std
enter
sti
xlat
mov
fnsave
inc
xchg
pushf
int3
mov
cmp
and
fistpl
pop
add
mov
cli
lea
imull
notl
push
insl
aas
and
xorb
ja
jo
inc
fadd
cmp
orl
inc
or
fidivl
jg
adc
stos
stos
or
pop
pop
out
pop
pop
loopne
inc
push
add
sbb
xor
xchg
cmc
cmpsl
cmp
mov
and
adc
mov
push
jl
insl
xchg
mov
mov
cmc
inc
add
lea
and
and
adc
insl
mov
fldcw
mov
mov
adc
cmpsl
push
icebp
stos
or
and
jle
inc
push
inc
movsl
decl
fisubrs
fsubrs
mov
nop
into
dec
call
dec
cmp
fimull
xchg
fpatan
popf
out
xor
pop
das
js
das
cmpsl
mov
in
stos
sbb
adc
mov
pop
aas
cld
xor
fmull
pop
mov
and
dec
add
loope
jg
mov
mov
jl
cmpsl
mov
or
test
cmpsl
popa
xor
or
and
call
out
das
cwtl
push
mov
jnp
cmpsl
popl
addr16
xlat
insb
mov
imul
mov
sbb
in
test
or
cmpsl
push
mov
jmp
cmpsb
dec
call
clc
insb
lods
mov
dec
and
aad
mov
push
xchg
imulb
dec
lods
pop
shlb
jo
mov
shll
jo
jbe
dec
popa
cwtl
ret
cmp
sbb
cwtl
mov
mov
into
jmp
push
rorb
shlb
mov
dec
jno
sub
jmp
sbb
xchg
pop
pop
fwait
aam
in
lret
ret
jmp
jle
adcb
xchg
outsb
adc
movsb
testb
push
mov
xchg
pusha
iret
lret
mov
adc
xorl
xchg
lds
push
dec
js
sti
cmpsb
test
fcom
lcall
sarl
fcoms
jns
dec
paddsw
loop
cld
push
test
dec
js
inc
inc
mov
sbbl
add
shl
xorl
hlt
jge
inc
push
inc
divb
or
mov
sbb
pop
aam
mov
jne
lahf
mov
mov
repnz
shrl
or
jo
add
mov
adcl
in
jae
shll
xor
stos
fs
fcoms
pop
sub
gs
testb
jns
cmp
sbb
and
mov
movsb
xchg
mov
movaps
and
xor
and
pop
scas
das
test
loop
pusha
repz
outsl
decl
mov
pop
aas
jmp
lss
dec
idiv
loopne
in
fcomip
fsubs
xor
clc
dec
mov
rcr
mov
pop
stos
cmp
inc
loopne
adc
sbb
cmp
idivb
sbb
icebp
xchg
push
xchg
mov
sub
out
and
lock
cmp
push
xchg
shl
mov
xchg
pop
movl
aad
add
insb
adc
dec
imul
sahf
call
or
xor
je
jecxz
cld
pop
pmullw
data16
cmp
xchg
inc
outsl
push
mov
inc
in
pop
lea
inc
outsl
aas
xor
imul
cmp
int3
roll
sbb
adc
sbb
testb
jl
xchg
or
or
repz
mov
dec
xchg
icebp
cmpsl
out
daa
sbb
sar
ret
mov
shrl
divl
push
test
mov
pusha
jns
xchg
ljmp
dec
movsb
or
fstl
cmp
mov
pop
jmp
outsb
das
roll
out
mov
and
push
xor
mov
nop
inc
sub
mov
pminub
and
movups
mov
xchg
xchg
xchg
push
mov
push
cmp
push
xor
pop
outsl
xor
into
out
fwait
insb
xlat
aad
fadd
or
sbb
dec
xor
inc
out
pop
inc
jnp
jno
jbe
daa
fiadds
dec
test
sarl
cmp
ds
in
in
in
cld
pop
xor
aam
xor
je
jo
add
pop
jmp
sub
mov
add
add
push
mov
movsb
and
or
and
mov
mov
imul
daa
in
adc
inc
std
test
std
or
cmp
and
jecxz
andb
push
icebp
lods
and
sbb
ss
icebp
jp
cs
sub
xchg
insb
mov
scas
sbb
sbb
lahf
pop
sub
cmpsl
xor
cmp
cmpsl
pop
add
fidivrl
mov
imul
mov
scas
inc
cltd
stos
mov
dec
lret
push
jo
test
sub
pop
into
cltd
cmp
lret
jle
mov
xchg
xchg
xor
mov
shlb
fmul
sub
push
jno
inc
mov
jle
ljmp
inc
pop
push
sarl
sub
int3
pop
popa
jmp
nop/reserved
fwait
dec
in
jmp
mov
insb
mov
cmp
adc
mov
pop
repz
loop
test
imul
adc
repz
daa
jecxz
pop
adc
fdivl
mov
and
pop
cmovbe
dec
fmuls
mov
dec
enter
cmp
inc
mov
push
mov
mov
push
lret
ret
and
push
cmp
and
js
xchg
cli
and
mov
mov
fldcw
dec
test
pop
dec
incl
sub
nop
mov
mov
cmp
cmc
scas
mov
into
jb
mov
inc
sti
sbb
clc
int3
addr16
aad
mov
subl
fnsave
sti
ret
in
repz
arpl
pop
xor
dec
cmpsl
pop
stc
lds
ja
pop
mov
add
fldl
out
dec
cltd
push
lock
xchg
jae
jae
sbb
inc
shrb
push
mov
push
ljmp
sbb
outsl
jnp
mov
jbe
minps
mov
dec
cmp
and
adc
and
inc
jne
pop
xor
adcl
loop
lret
inc
and
mov
push
jnp
push
lahf
mov
add
pop
pop
inc
dec
mov
mov
aad
mov
ss
cmc
rcrl
sahf
shll
aam
orb
imul
add
addl
mov
ret
xor
rorl
xchg
adc
mov
js
jnp
mov
aaa
out
lods
or
cmpsl
aas
shrb
dec
mov
pop
xchg
fcoms
in
mov
mov
mov
in
mov
mov
mov
pop
lods
cmpsl
jmp
push
jle
push
lea
or
and
sub
in
jmp
cmp
pop
cs
fisubs
dec
pop
mov
xchg
in
int
cmp
mov
dec
ret
cmpsb
jne
mov
lcall
in
mov
mov
js
subb
aam
jg
push
or
cmc
shl
lahf
cld
les
aas
push
fdivrl
jmp
incl
sub
imul
inc
push
test
inc
insb
outsl
sub
mov
out
enter
inc
mov
lahf
sbb
shrb
in
push
dec
push
ss
out
mov
mov
fcom
hlt
cmp
rcll
out
mov
repz
push
sti
dec
lret
xor
push
clc
out
lret
jmp
pop
leave
cltd
pop
sbb
dec
out
mov
inc
or
dec
je
inc
sbb
in
push
dec
pop
or
scas
insb
stos
jo
add
movsl
push
inc
repz
scas
mov
aas
data16
insb
hlt
shll
int3
insb
jo
repz
movsb
ds
jmp
mov
mov
push
push
xor
jo
aas
mov
inc
jp
ret
arpl
dec
add
sbb
ds
inc
sbb
pop
hlt
mov
cld
repnz
xchg
ret
sbb
cmp
mov
mov
cmp
mov
lcall
jb
jmp
mov
sbb
out
xchg
aas
push
fucomip
add
mov
test
lret
mov
shll
dec
jg
rolb
imul
call
or
xchg
mov
add
jg
or
testl
sub
jb
sbb
scas
das
jno
sub
xchg
and
data16
lods
enter
fldcw
jbe
insl
mov
nop
mov
enter
dec
or
xor
push
dec
in
insl
dec
jns
push
repnz
xchg
fdivr
jae
or
inc
dec
ja
insb
jle
das
loop
mov
mov
mov
xchg
pop
pop
inc
hlt
sbb
loope
push
movsb
out
das
stc
push
add
dec
push
cmpsb
pop
pop
ret
sti
cmovbe
movsb
test
and
dec
dec
negb
shrl
mov
cmp
mov
insb
and
pop
dec
fsubs
jg
fcoms
pushf
repz
push
pop
imul
push
or
sbb
negl
cmc
mov
int
sarb
cmc
add
push
mov
pop
or
sbb
and
hlt
dec
mov
lcall
leave
cwtl
cmp
cmp
pop
and
jl
in
mov
lret
arpl
test
push
aad
mov
or
mov
iret
pop
out
mov
jae
add
dec
xor
int
rcll
lahf
jge
push
test
cmp
ja
insb
dec
std
cmp
jmp
fistpll
mov
mov
inc
xchg
jge
cs
cmp
adc
scas
jns
dec
hlt
nop
xchg
pop
or
lcall
jb
mov
dec
stos
mov
push
outsl
or
xchg
in
jl
xchg
or
cmp
dec
insl
mov
xchg
out
xchg
xchg
or
push
rorl
in
stc
or
lods
mov
inc
mov
xlat
fsubrs
lea
rolb
cli
rcrb
cmc
jmp
and
fwait
mov
in
mov
in
adc
xlat
mov
outsl
aas
test
mov
sub
out
mulb
pusha
pop
sahf
push
ret
hlt
int3
inc
loope
lret
fbld
jmp
scas
cmp
lea
pop
insl
or
add
sub
lcall
enter
movsb
mov
jns
mov
adc
mov
pop
push
insb
inc
ss
aaa
inc
int3
test
mov
push
xor
sbb
mov
jl
pop
arpl
pop
loopne
sub
cmc
jge
adc
cld
add
push
and
movsb
clc
and
gs
out
cmp
push
nop
sahf
sub
iret
popf
into
mov
jo
shll
jnp
andb
lods
jl
and
sbb
add
fidivrl
test
jp
jo
int
ljmp
cmp
adc
jl
out
cltd
sahf
sbb
lret
mov
pop
pop
pusha
test
test
jecxz
mov
inc
push
mov
add
fisubl
xchg
push
cmp
mov
dec
test
xchg
jg
xor
mov
lock
xor
lods
lods
iret
pop
popa
mov
xor
inc
mov
ljmp
dec
mov
lahf
loopne
xchg
fdivrs
das
cmp
mov
and
les
jns
cli
fsubs
jns
test
icebp
jge
call
out
movlps
dec
cmp
ret
push
aam
pop
adc
leave
sub
in
pop
adc
cs
iret
jecxz
movsb
and
sbbl
mov
scas
or
xchg
aaa
andb
cltd
mov
xchg
loope
cwtl
or
adc
adc
inc
ss
scas
mov
imul
pop
mov
dec
inc
mov
imul
rcl
or
inc
add
and
divb
xchg
orb
dec
icebp
xchg
inc
pop
xchg
jne
sbb
sub
in
sub
inc
xchg
inc
lcall
sbb
add
adc
aam
repz
test
push
jle
push
scas
shl
ljmp
xchg
es
out
mov
outsb
out
inc
mov
iret
cli
mov
jae
lcall
pop
sub
sar
add
and
pusha
pop
xchg
sbb
cmp
jbe
rorl
jle
cld
mov
mov
shrl
ss
loop
pop
add
pop
cmp
sti
or
pop
or
mov
lret
dec
and
dec
xor
gs
in
out
sbb
or
xlat
das
roll
lret
clc
in
in
das
mov
decl
and
leave
pop
arpl
pop
hlt
mov
jns
mov
xchg
jg
sarl
scas
addb
das
jmp
mov
push
xchg
push
inc
adc
push
jns
icebp
add
push
popa
mov
adc
clc
adc
xor
andb
xor
sub
xlat
jo
and
push
xor
fcomp
add
insb
adc
push
adcb
sbb
pop
insl
sar
jge
dec
insb
add
notl
lret
das
push
es
mov
out
and
inc
jo
std
dec
je
lods
mov
popf
mov
sub
and
cmp
dec
jno
pop
mov
push
shll
xchg
stos
movsb
into
cmp
pushl
in
fidivrl
xor
insb
aam
fisttpll
mov
push
enter
push
push
es
into
aaa
add
mov
push
add
or
push
js
fisttps
pop
add
cld
push
mov
out
lahf
push
inc
ss
dec
mov
or
enter
xor
ds
cmp
das
clc
lods
cmc
push
ret
subb
mov
xchg
jmp
xor
inc
stos
push
cli
jno
movsl
lahf
out
push
or
andb
fisttpll
xlat
js
fisttps
xchg
sub
xor
gs
sarl
into
int3
lds
pop
fisubrl
pop
popa
hlt
mov
dec
sbb
mov
cmpsb
aas
leave
sti
lods
pop
incb
jno
jmp
icebp
add
and
xchg
jae
mov
es
imul
ret
fldt
lods
nop
insl
ss
jle
mov
loop
adc
push
sbb
mov
dec
daa
push
aad
and
sbb
sub
fwait
popl
sub
xorb
iret
fwait
pusha
xchg
outsb
add
pop
out
jle
aam
stos
jge
sbbl
movsl
cmp
stc
mov
pop
sti
or
sbbb
ss
mov
clc
mov
fadd
inc
fs
imull
movsb
or
shl
stc
xchg
and
icebp
cmp
cmp
jne
add
lock
out
push
stos
stc
cmpb
xorl
jb
push
jo
lock
das
cmp
imul
out
push
cld
mov
nop
add
imul
add
mov
jmp
or
sarl
sub
jl
or
dec
push
lods
lcall
adc
fimuls
cmc
into
pusha
and
ficoml
ss
outsl
loop
sbb
push
leave
sub
pop
xorl
add
int
in
icebp
jl
test
les
lcall
lods
scas
scas
nop
lcall
sbbl
inc
orb
mov
pop
aaa
sub
repz
adc
stos
mov
in
ds
lds
pushf
shr
call
push
cli
popf
pushf
out
inc
daa
adcl
xorl
and
jge
dec
mov
out
push
outsb
inc
jecxz
or
das
mov
mov
lods
popf
xchg
iret
lds
inc
mov
mov
push
pop
sub
mov
stos
or
icebp
insb
inc
fbld
into
out
mov
jl
sbb
inc
pop
xchg
inc
fsubr
out
sbb
mov
add
movsl
lock
shrb
dec
fistps
jge
xchg
into
fdivrl
sub
mov
test
and
xchg
mov
mov
jmp
inc
lcall
mov
adc
jno
and
cmp
daa
pop
icebp
fbstp
pop
or
mov
dec
push
jecxz
iret
das
cmp
push
xchg
dec
or
pop
pop
repnz
in
imul
xchg
dec
pushf
in
pop
aaa
fnstenv
mov
cli
gs
sub
and
xchg
psrld
xor
rorl
jns
dec
lahf
mov
pop
push
pop
test
and
mov
mov
and
cmp
imul
sub
sbbb
fldcw
or
js
adc
cmp
test
cmp
dec
mov
ret
out
sub
dec
xchg
dec
cli
aaa
inc
add
aad
lods
add
aam
mov
or
in
or
pop
repz
pop
jmp
cmp
clc
or
nop
xor
les
scas
xchg
shl
data16
cltd
sahf
mov
xor
mov
push
xor
sub
arpl
xchg
mov
and
xchg
ret
cmc
inc
or
in
jb
and
jb
push
and
xor
stc
es
das
int3
cmp
xchg
es
int3
push
adc
sub
sbb
call
into
add
addr16
outsl
lock
mov
addl
add
mov
xor
mov
cmp
and
pop
out
push
lcall
scas
push
mov
push
dec
add
pusha
dec
add
lods
imul
roll
add
sub
lock
imul
jle
shr
test
mov
xor
gs
jle
out
mov
jg
cwtl
or
mov
test
lods
int
movsl
add
test
pop
in
sbb
enter
fsubrs
cmp
jbe
inc
movsb
or
int
push
cmc
push
imul
int3
sub
push
shll
mov
mov
daa
jno
lea
jge
and
xor
inc
inc
xchg
pop
pop
scas
pop
cmp
mov
xor
mov
call
jb
lods
cmp
xor
mov
repnz
or
lea
cmc
or
and
sub
and
mov
and
dec
fmull
lret
push
jp
jbe
enter
cltd
loop
or
mov
xchg
mov
inc
int
cmp
adc
repz
lds
in
adc
adc
pop
pusha
popa
or
movsb
fcoms
cmp
nop
imul
pop
mov
jbe
mov
pop
js
repz
shrb
jno
lcall
in
fwait
push
inc
jbe
out
sbb
push
cs
mov
rorb
xchg
push
into
popf
outsl
sub
fistps
loope
or
pop
stos
push
rcl
imul
nop
jmp
stc
lods
sbb
int3
add
loopne
shrb
sahf
add
and
pop
shlb
lcall
mov
enter
push
scas
js
sub
adc
mov
jmp
inc
fldz
add
mov
dec
pop
mov
add
jmp
jnp
fbstp
xchg
pop
xchg
sbb
pop
jmp
xor
mov
mov
sub
mov
lcall
cmpsb
jmp
xchg
popf
inc
and
inc
and
shlb
push
add
iret
pushf
mov
scas
push
mov
mov
iret
imull
das
mov
testl
call
push
cmpsb
ret
clc
adcb
jmp
lahf
inc
sbb
arpl
fld
cld
jl
insl
inc
xchg
shl
cli
jl
in
jb
push
shlb
sub
or
jecxz
leave
push
xchg
nop
pusha
cmp
and
mov
adc
call
sbb
lea
pop
subl
aam
mov
or
insb
xchg
ljmp
cmpsl
inc
dec
out
sub
push
mov
lret
sub
dec
xchg
mov
enter
ja
loopne
inc
cmc
jle
adc
pop
push
add
lods
sbbl
push
jp
mov
and
fstp
xchg
sahf
jnp
incl
mov
popa
out
popa
shll
iret
and
and
xor
out
mov
aad
mov
sub
and
rcl
in
dec
push
jb
adc
fldt
mov
mov
sar
mov
and
jno
mov
mov
mov
gs
sub
mov
mov
adc
out
jns
mov
mov
into
mov
xchg
dec
das
movl
inc
inc
lahf
mov
rcl
test
xchg
mov
in
je
mov
lods
inc
ljmp
lret
push
push
inc
adc
mov
cmp
jnp
cmp
pop
push
je
cltd
mov
mov
add
ljmp
divl
push
or
cmp
mov
in
insb
inc
in
pop
dec
pop
icebp
push
pop
sub
cmp
push
out
push
dec
dec
sbb
fsubl
iret
daa
xchg
sub
ret
fdiv
cmpsb
or
fs
outsb
push
mov
test
stos
bswap
lret
xchg
xchg
mov
ret
jp
cwtl
repnz
adc
dec
add
or
aaa
xlat
push
lods
enter
xchg
xchg
ltr
inc
mov
adc
mov
push
das
push
pushf
cmc
dec
les
out
sub
shrl
mov
out
insl
fsubrp
movsb
imul
mov
xchg
cmpsb
dec
std
insl
cmpsl
mov
xor
mov
outsl
dec
jbe
nop
push
xchg
sbb
cmpsb
imul
movsl
jl
ret
push
divb
leave
mov
sub
jae
sbb
pop
flds
push
mov
xchg
leave
pop
in
aad
jnp
inc
popa
popl
sub
fwait
push
mov
addr16
xchg
jmp
pop
mov
push
test
stos
std
das
aas
sbb
bndstx
inc
jo
xchg
test
mov
push
lods
sub
daa
dec
push
mov
sub
cmp
xchg
mov
int3
adc
lcall
mov
out
ret
insl
aaa
cs
outsb
mov
mov
xchg
fidivrs
mov
dec
insb
jo
iret
push
sbb
leave
data16
rolb
mov
lods
ljmp
loope
jae
mov
xchg
mov
add
aaa
mov
lcall
arpl
jle
xchg
in
xor
fistl
pop
loope
stos
sub
add
int3
decb
xchg
test
test
mov
xchg
fs
lods
into
test
inc
int3
cwtl
sbb
or
stos
add
rorl
in
sbb
rorl
insl
imul
loope
in
hlt
sbb
sysenter
andl
cmp
cld
jb
or
mov
pop
lods
sub
pop
test
adc
gs
cltd
fadd
push
call
push
fs
out
test
jecxz
jo
js
repz
pop
ljmp
pop
mov
mov
ds
hlt
push
inc
std
mov
jo
cmp
sbb
pop
adc
dec
repnz
test
jb
cs
jp
push
adcb
sarb
testl
mov
call
aas
mov
loop
out
andb
insl
mov
outsb
cwtl
sub
and
pop
or
bound
insb
int
cmpl
test
or
movsb
mov
and
fnsave
xor
or
insb
dec
push
lret
enter
cld
ret
pop
jbe
or
std
jle
jno
into
push
fidivs
mov
int
mov
addb
mov
fimuls
jo
mov
pop
jbe
lds
dec
push
out
call
xor
dec
jne
mov
ja
mov
ljmp
sbb
jno
and
scas
xor
inc
push
sbb
xor
mov
or
lods
stos
cwtl
xchg
test
mov
cmp
mov
xor
clc
push
orl
xor
fisttps
lea
xor
sub
or
xor
fcmovnbe
in
jle
lods
aam
pop
mov
frstor
rcrl
inc
jb
fldt
adc
call
mov
bound
stos
in
push
pop
lret
es
mov
mull
dec
cmp
out
int
insb
and
adc
inc
xor
aaa
nop
push
mov
shlb
js
insl
ret
jns
jne
xchg
or
mov
outsl
dec
nop
adc
xor
daa
push
je
jmp
jl
sti
cmp
pop
push
outsl
roll
mov
stos
inc
xor
and
push
xor
adc
ljmp
cmp
and
sbb
push
mul
mov
dec
rorb
mov
cmc
mov
loopne
mov
add
mov
lods
gs
inc
jne
push
pop
fwait
dec
pop
notl
push
dec
repnz
idivl
lret
imul
cmp
sti
jns
sub
push
imul
fwait
and
jmp
lods
or
ficomps
or
lock
pusha
ss
lea
dec
lret
push
dec
dec
arpl
mov
jae
ret
mov
sbb
or
pop
and
mov
mov
ficompl
mov
in
or
stc
repnz
cmp
subl
and
rcr
cmp
imul
xchg
xor
sbb
lahf
mov
mov
adc
jecxz
or
sub
mov
mov
jnp
and
xchg
and
push
push
inc
fistl
rcr
cmp
sub
aas
fnstsw
test
ret
inc
add
sbb
push
or
pop
int
mov
jne
or
sbb
mov
inc
dec
push
dec
jbe
daa
rorb
mull
sbb
iret
in
sbb
add
lods
mov
or
adc
adc
jb
insl
pop
sub
out
fisubrl
into
xchg
mull
sbb
fimuls
add
mov
xlat
push
mov
inc
lds
fs
mov
sub
inc
lea
push
cld
jg
loope
jl
aas
movsb
nop
sbb
cmp
sub
xchg
cli
push
push
mov
pop
jo
dec
adc
in
test
cld
inc
push
jns
sti
mov
mov
pop
inc
imul
nop
insb
push
das
inc
sti
lret
icebp
jp
mov
pop
int3
mov
dec
and
add
mov
dec
ja
daa
shll
mov
sub
in
xchg
pushf
out
and
dec
adc
inc
test
outsl
mov
fsts
or
fiadds
jne
stos
add
in
add
mov
adc
pop
pop
loop
cwtl
jnp
fldt
fidivs
cmp
daa
xchg
test
xchg
xor
shl
or
xchg
push
and
cmp
add
aad
rcl
out
mov
ret
push
jecxz
mov
lods
xchg
sub
cli
and
sub
pop
repz
sbb
mov
loop
loope
test
sti
aas
and
xchg
insl
fildl
mov
das
xor
daa
jnp
xchg
and
fucomp
mov
cmp
das
aam
insb
xchg
mov
out
jle
push
push
setbe
popf
shrb
cli
mov
mov
and
mov
fdivl
iret
in
cmp
aad
or
mov
push
sbb
inc
ds
inc
cltd
fistpll
fdiv
sbb
fs
and
lret
in
shl
cmpsb
notb
dec
and
adc
mov
out
or
scas
call
and
cmp
adc
fadd
lcall
std
xchg
sbb
pop
inc
scas
or
fldenv
test
and
push
sub
inc
call
sbb
dec
cmp
decb
rcll
mov
jo
mov
mov
lock
test
shll
movb
or
xchg
mov
pop
arpl
inc
stos
cmc
push
faddl
subl
popa
mov
lret
fcmovnu
iret
subl
push
fwait
pop
push
lock
aaa
inc
popf
dec
sar
sahf
outsb
add
sbb
add
div
jno
hlt
loop
clc
cmp
xchg
cmp
mov
mov
sbb
imul
rol
inc
xor
stos
clc
adc
or
loop
ror
ret
jle
addb
les
xor
das
pop
or
push
pop
in
cld
hlt
iret
enter
imul
sub
pop
and
leave
push
push
pop
xchg
fidivs
lahf
jge
into
xchg
lods
xchg
aam
jl
movsl
sbb
iret
repz
movsb
push
adc
xorb
mov
cmp
mov
or
pop
jmp
cli
into
inc
mov
mov
fwait
and
outsb
add
mov
int
jl
outsl
jo
pop
ljmp
scas
jne
inc
rsm
nop
lods
out
in
mov
ret
js
or
jae
aas
cmp
inc
mov
sub
int
clc
push
and
stc
arpl
xor
mov
dec
or
adc
cmpb
push
cmpsl
lcall
sbb
add
leave
sbb
cld
push
sarl
jge
inc
inc
clc
cld
mov
pop
call
inc
rorl
lahf
mov
call
or
repnz
and
mov
inc
loop
mov
pushf
push
adc
gs
mov
jno
fucomp
pop
pop
fcmove
hlt
fldenv
test
insb
mov
jbe
lock
mov
add
dec
repz
ret
add
mov
shrl
ss
mov
cmc
dec
xor
in
mov
scas
pushf
adc
gs
daa
xchg
ret
sub
cltd
inc
mov
mov
shr
js
xchg
lds
inc
ret
lcall
stc
arpl
imul
pop
adc
enter
lahf
call
cmp
sub
out
pop
test
or
and
fwait
pop
dec
xor
lahf
adc
lock
sbb
sbb
lcall
out
dec
sub
jbe
cmp
and
pop
xchg
mov
in
jnp
gs
or
cmpsb
lods
add
pushf
push
fcmovnb
cwtl
or
push
hlt
movsl
adc
or
mov
adc
lahf
mov
push
xor
jmp
loope
adc
mov
or
rorl
ret
cld
sti
sbb
enter
lock
dec
cmp
lds
arpl
push
rolb
ret
mov
mov
or
jle
arpl
je
jmp
cmpl
dec
sub
jecxz
xchg
push
xor
jecxz
inc
into
stc
pop
jne
dec
lcall
inc
iret
adc
lods
push
sbb
mov
jne,pt
int3
xlat
jae
jnp
xchg
enter
inc
or
and
sahf
mov
test
mov
lea
lret
sbb
in
jb
xor
pop
mov
xlat
mov
push
inc
imul
and
aam
scas
divl
cmc
push
les
xor
pop
loope
and
push
fstpl
imul
ficomps
cmpsl
daa
je
dec
inc
std
inc
sbb
pop
dec
ret
inc
add
aad
mov
scas
sbb
js
xor
sbb
out
sbb
push
popa
sbb
mov
mov
xchg
dec
lahf
iret
sub
pop
icebp
sub
pop
pop
mov
push
aam
mov
add
xlat
dec
push
and
jb
arpl
pop
dec
or
mov
mov
dec
jecxz
mov
jmp
jae
sti
std
xchg
sbb
pushf
dec
shrl
cs
push
xchg
xorb
push
bound
out
in
sub
inc
jbe
mov
test
xchg
or
inc
imulb
pop
adc
push
int3
add
je
or
icebp
cmpsl
repz
jno
xor
jb
fs
jp
imul
das
repz
sub
ficoms
jb
ja
and
into
jmp
mov
loop
mov
stos
sarl
push
mov
dec
pop
sbb
mov
in
pop
insb
std
scas
outsb
int
sub
mov
pop
cmp
add
inc
cmp
loope
sbb
xchg
scas
inc
jge
jbe
and
lahf
in
xchg
lods
mov
xor
push
enter
in
and
dec
adc
outsl
pop
call
lock
xchg
imul
fs
adc
cli
lea
xchg
jae
mov
sub
das
fisubrl
sbb
mov
jp
stos
divl
mov
mov
clc
xchg
sub
mov
mov
out
das
ss
xor
cli
dec
lahf
outsl
mov
ljmp
inc
sbb
mov
sbb
stc
sbb
gs
add
pusha
dec
lds
pusha
sahf
subb
and
mov
cmp
daa
fimuls
push
jecxz
pushf
pusha
imul
cmpsb
push
and
mov
lods
mov
fs
aad
popf
and
daa
sbb
loopne
xchg
cmp
pop
scas
push
lea
decl
fwait
xor
ss
testb
clc
stos
inc
inc
and
jp
js
adc
iret
cltd
addr16
repnz
mov
aas
lcall
pop
xor
cwtl
or
cs
push
inc
rdpmc
sbb
jne
push
jecxz
jae
xchg
popf
mov
adc
inc
scas
lret
and
into
sbbb
es
ret
pusha
sub
jb
and
scas
adc
lods
arpl
push
add
pusha
push
js
ficomps
push
cmp
in
andl
and
imul
das
mov
or
mov
xchg
out
and
jp
pop
mov
push
jp
addb
stc
mov
stos
jecxz
xor
fbstp
or
loope
dec
sbb
into
jno
xor
mov
test
das
stos
xor
jp
shrb
ja
mov
daa
orl
sbb
pushf
ret
xor
push
mov
lds
ss
rep
sti
std
mov
mov
pop
shlb
iret
mov
clc
shlb
aad
lret
sbb
fstps
and
clc
or
lret
es
mov
cli
movsl
push
shlb
cs
jns
repnz
fs
inc
dec
dec
adc
jg
jmp
mov
sub
mov
lahf
mov
enter
test
out
shrl
xchg
andb
adc
in
into
mov
sahf
sub
dec
mov
ret
int3
add
lea
fs
stos
pushf
fwait
pop
ljmp
sbb
sar
inc
fwait
add
or
stos
sbb
test
mov
insl
popa
jnp
iret
pop
mov
mov
in
or
cmpsl
fucomi
cwtl
stos
pop
adc
jo
enter
bound
mov
aas
inc
push
fcoms
mov
sbb
insl
inc
ljmp
clc
jmp
mov
gs
xchg
popf
push
pop
pop
push
mov
dec
lret
cmp
ja
xchg
and
add
cli
push
fld
rorb
adc
fsub
repnz
adc
ss
fcmovb
jbe
aas
sbb
lret
addb
test
inc
xchg
mov
mov
inc
fiaddl
scas
xor
insl
data16
cltd
jnp
repz
dec
lea
sbb
scas
or
adc
loopne
ret
pop
push
test
aaa
add
in
and
pusha
cwtl
loop
test
fsubs
fidivl
call
dec
push
aam
xorl
sti
pop
divl
inc
loopne
push
inc
jnp
sub
jb
data16
stos
add
mov
loopne
test
mov
into
cmp
repz
xchg
xor
jae
bound
outsb
add
or
jl
xchg
loope
iret
jne
sbbl
push
pop
sub
fisubrs
push
adc
fxch
xchg
push
pop
xor
sub
jb
fs
xchg
shlb
pop
sbb
das
cwtl
testb
popa
mov
sahf
add
push
cmpsb
dec
loope
mov
loopne
sbb
lods
data16
nop
inc
cli
lds
andl
icebp
mov
sbb
sub
push
ljmp
mov
outsb
sbb
dec
gs
xchg
push
push
cmp
jae
mov
push
mov
or
jno
pop
xor
mov
and
cmp
xor
mov
shll
clc
out
loopne
int
arpl
aaa
add
push
sarb
scas
daa
div
sub
push
sub
mov
enter
mov
sub
sub
fistl
lret
hlt
pushfw
or
lock
add
jae
push
sbb
jmp
or
shl
pushf
icebp
mov
mov
jmp
cmpsl
cmp
lahf
mov
push
xor
mov
pop
rcrb
aas
shr
inc
xchg
pop
adc
mov
loopne
js
fsts
std
imul
add
pushf
jp
and
jg
fwait
inc
mov
xchg
push
add
sbb
pop
std
hlt
out
lcall
test
sub
test
in
cld
int
push
mov
iret
jne
addr16
cwtl
incl
pop
popf
push
push
popf
lods
push
push
test
jle
into
adc
jmpw
mov
pop
push
cmp
pop
pop
push
add
mov
xchg
popf
pop
nop
sub
repnz
mov
arpl
cmp
add
scas
mov
sarl
lret
xchg
in
dec
lea
icebp
out
movl
mov
scas
mov
lds
cld
push
insl
fucom
pop
cmp
add
push
push
dec
popf
cmp
jg
push
cld
out
dec
cmp
xchg
lock
in
ja
adcl
xor
cltd
adc
mov
push
lcall
nop
sub
nop
sub
orl
icebp
into
sti
je
addr16
xor
lds
addr16
mov
repz
pop
or
jb
mov
lods
lcall
imull
out
ss
imul
pop
call
popf
ds
or
lods
das
fsubs
mov
add
mov
fnstsw
pop
ds
rorl
mov
pop
xor
jns
shl
jmp
jmp
mov
mov
data16
enter
scas
lods
add
and
inc
aad
aam
sub
ja
and
es
fld
insl
sbb
jmp
inc
mov
arpl
dec
jg
aad
sbb
push
pop
pop
cmp
pop
or
dec
gs
or
fldenv
pusha
pushf
jp
push
mov
in
rclb
push
aam
int3
lret
orl
push
ret
mov
add
add
push
dec
fsts
sub
mov
pop
inc
mov
dec
adc
mov
sbb
call
mov
lock
clc
xchg
decl
jb
xchg
in
xchg
pusha
insl
xlat
dec
negl
scas
rolb
rcll
cmp
shrb
mov
loopne
or
dec
pusha
push
lods
jmp
test
nop
and
enter
pushf
int3
adc
pushf
xorb
mov
test
mov
out
lods
icebp
movsb
sub
and
xchg
scas
testl
dec
mov
out
test
inc
bound
fnsave
pop
cmp
outsl
push
pop
dec
fistpl
sbb
adc
mov
aas
mov
xor
jb
cmp
orl
cmpsb
and
adc
loopne
xor
pop
cmp
in
adc
hlt
dec
addr16
cli
mov
lods
repnz
sbb
and
xor
jno
jne
aad
push
and
sub
mov
repz
cmp
cmpsb
push
test
aad
ja
daa
daa
stos
pop
frstor
jns
lret
pop
jnp
mov
cmp
lea
jge
adc
sarl
popf
inc
rcl
pop
inc
mov
xor
jmp
adc
popa
ja
jle
adc
inc
ds
addr16
mov
pop
cmp
faddl
xor
pop
mov
outsl
dec
in
aaa
cwtl
push
xor
mov
orl
hlt
scas
mov
push
pop
jne
adc
negb
inc
dec
test
or
clc
in
enter
jno
pusha
add
call
cmp
push
pushf
out
jnp
aad
add
pop
je
fsub
xchg
dec
out
jmp
subb
xchg
clc
into
adc
mov
aam
push
aas
dec
testl
sbb
out
sub
jo
test
jne
test
jp
lcall
mov
xchg
mov
xchg
jmp
addr16
clc
xor
sub
mov
or
repz
mov
fcomps
stos
fldcw
jecxz
sub
jmp
out
pushf
repz
sbb
fsts
int
xchg
imul
aad
fs
dec
adc
xlat
movsl
xor
nop
ret
lods
xchg
push
sbb
es
rcr
mov
shlb
fnsave
sar
add
add
test
lcall
mov
push
xchg
add
push
scas
or
pop
xlat
push
mov
stc
movsb
aam
pop
xor
ret
das
ss
rcll
das
cld
inc
xchg
iret
sbb
out
dec
push
dec
xchg
enter
jne
adc
popf
leave
loope
sti
fdivs
fbstp
data16
mov
mov
sub
lock
pop
aas
mov
divb
mov
scas
lock
mov
test
imul
dec
mov
sbbl
xchg
lret
mov
pop
sbb
cmpb
arpl
lahf
sbb
scas
lods
add
mov
sbb
jns
popa
bound
xor
sbb
clc
mov
cmp
fmull
mov
jle
out
jne
xor
stc
jnp
data16
test
enter
std
pop
ljmp
cwtl
sub
adc
aas
sbb
cld
loop
js
pop
imul
cmc
cmpsb
mov
inc
jne
pop
mov
mov
mov
cmc
mov
aam
fdivs
test
test
push
sarl
xchg
hlt
aad
inc
jns
adc
mov
mov
xchg
mov
fldl
lods
xor
lock
cmp
bound
ss
leave
jnp
cmp
xor
xor
insb
inc
mov
outsl
pushf
jg
aam
sbb
push
jp
jnp
jecxz
call
xchg
xlat
movsb
fadds
pop
ss
xchg
ds
js
popa
xchg
adc
iret
xchg
fadd
pusha
lret
xchg
xchg
push
clc
push
jmp
lea
push
in
mov
mov
adc
inc
arpl
mov
leave
das
cltd
loope
out
fs
xor
and
mov
rol
fisttpll
jbe
int
pop
rcl
cld
test
xchg
mov
loopne
fldl
sbb
fsubl
or
adc
cmp
lret
jl
movsb
scas
push
push
cmp
ret
aaa
or
xchg
add
jns
push
repz
pushf
fcoms
aam
loopne
push
ljmp
jle
test
pop
inc
sub
xor
dec
cmp
mov
mov
and
dec
out
jg
ret
inc
insb
sbb
insl
push
btr
adc
push
cmp
jp
adc
scas
sbb
jns
gs
pop
cmp
mov
movsl
mov
mov
cwtl
imulb
jge
and
repnz
mov
mov
ret
inc
mov
scas
pop
icebp
push
shlb
and
and
cld
fdivrp
outsl
jnp
cmpl
scas
jb
sbbl
and
mov
out
negl
lock
lahf
stos
cmc
stc
sbb
push
jb
sub
js
pusha
rclb
lock
xlat
shll
adc
hlt
xchg
cmpsl
pop
decl
loope
fisttpll
xchg
and
loopne
js
xor
sub
mov
inc
fwait
andl
inc
sahf
inc
mov
scas
outsl
push
cmp
sub
rep
adcl
pop
add
arpl
fwait
int
push
mov
jp
add
or
push
and
popa
jmp
jno
mov
mov
bound
or
ffree
push
sti
jns
aam
sub
lret
fwait
mov
inc
xor
pusha
sbb
aad
aas
pop
mov
shlb
push
out
add
adc
and
pop
out
mov
inc
pop
add
rcrb
mov
icebp
std
mov
ror
mov
dec
imul
leave
call
sub
fstps
push
sbb
pop
stos
lea
xor
aas
pusha
xchg
mov
es
ds
aam
out
hlt
push
xchg
cmpsl
pop
rcll
lods
xor
stos
test
add
dec
out
bound
adc
popa
pusha
ja
int3
pop
fimuls
loope
and
and
sub
jb
xor
inc
adcb
aas
pop
je
pop
add
movsb
jbe
and
scas
sub
test
push
mov
addr16
adc
add
ficoms
dec
adc
pop
mov
ljmp
scas
loop
adc
inc
lds
jns
jg
iret
lret
jbe
adc
mov
inc
ret
mov
pop
adc
adc
mov
lret
sbb
lcall
push
mov
loope
mov
mov
mov
test
inc
and
pop
repnz
addr16
imul
sahf
mov
sub
cmpsl
mov
xchg
popf
mov
xchg
mov
pop
inc
sub
and
inc
out
add
adc
sub
enter
or
in
push
sarb
xor
pushf
dec
xor
mov
sub
inc
or
mov
es
cli
jne
pavgw
jp
dec
xor
or
mov
pop
jbe
and
out
imul
hlt
call
das
iret
dec
int
mov
mov
xchg
lcall
test
add
push
movb
fstl
jge
or
insl
add
ficoml
fdivs
inc
and
pop
or
mov
push
cmp
push
and
daa
outsl
out
cld
jbe
out
outsb
fisubl
mov
arpl
push
sbb
aam
lock
ss
imul
xchg
outsl
repnz
cmp
mov
mov
mov
sbb
adc
cmp
leave
nop
outsl
dec
cmpsb
sbb
stos
xlat
inc
icebp
pop
jbe
rolb
mov
inc
imul
inc
aaa
nop
jbe
adcl
cltd
push
mov
test
push
xor
pop
and
jle,pn
mov
int
in
mov
push
test
leave
aaa
adc
insb
sbb
in
cwtl
inc
mov
cli
push
jle
sub
jecxz
mov
into
rcrb
psubusw
sub
xor
ljmp
mov
xor
stc
mov
dec
and
sti
lods
xor
sbb
or
mull
xchg
pop
popf
push
push
flds
mov
fsubrs
cli
xchg
test
lret
insb
add
xor
jl
jg
test
jb
pop
enter
test
adc
lahf
fdivrs
sub
sub
and
cmpsl
ror
sbb
stos
incb
add
jp
xor
cltd
pop
icebp
mov
inc
test
cwtl
push
fbld
mov
sub
pop
aaa
sub
sbb
cwtl
aas
mov
mov
or
cmpsb
sarl
jb
les
and
in
mov
add
push
ret
dec
inc
or
aaa
mov
jge
leave
mov
xor
mov
jmp
xor
push
repz
inc
aas
or
inc
sti
cmp
push
aaa
jle
sub
stos
hlt
lods
shll
push
adc
mov
dec
sub
xchg
xor
outsb
loop
mov
adc
stos
add
push
dec
add
push
sub
lea
xchg
inc
add
sub
inc
adc
mov
fimuls
add
stos
fmuls
and
mov
dec
enter
out
mov
call
ljmp
or
notl
sub
ja
mov
stos
out
or
mov
mov
shrl
jo
push
jnp
or
das
dec
fsubrl
gs
xchg
fisubrs
outsl
std
cmpsb
jle
out
lock
lock
fwait
jne
aas
mov
push
dec
mov
pop
imul
inc
jmp
push
mov
cmc
adc
out
inc
ljmp
jecxz
inc
pop
lcall
ret
outsb
jnp
cmp
add
fldcw
pop
pusha
sbb
aas
or
and
inc
dec
push
dec
push
mov
gs
push
loope
lock
ja
shlb
adc
insb
mov
or
xchg
xorb
jo
divl
sbb
and
bnd
dec
in
icebp
mov
xlat
enter
int
pop
and
xchg
lods
mov
stos
addr16
lahf
ret
hlt
rolb
arpl
cwtl
jno
jo
mov
or
xor
popa
mov
fnstsw
mov
pop
sbb
sbb
aam
fwait
mov
or
fdivs
cmpsl
and
jnp
jmp
mov
mov
jne
faddl
mov
xchg
enter
lret
insl
push
push
xor
aas
imul
notl
cmpsb
dec
jecxz
daa
cmpsl
je
mov
lds
xchg
add
lcall
mov
mov
adc
clc
loope
push
popa
add
mov
mov
shlb
nop
xchg
cmp
dec
xchg
fxch
bound
jno
jmp
or
and
fdivrl
sbbl
rcrl
mov
insb
notb
fisttps
pop
ss
imul
dec
and
mov
jmp
inc
lods
pop
mov
sahf
sbb
dec
out
sub
fisttpl
popf
fs
sahf
bound
push
rorb
add
sbb
or
pop
rcrb
pop
jbe
inc
push
popf
xor
mov
add
popa
repnz
mov
idivb
jb
lods
adcb
jmp
jmp
xor
add
xchg
popf
cs
int
lock
push
sbb
je
pusha
sbb
mov
or
jae
adc
je
lret
push
out
fbld
dec
mov
or
add
cmp
pop
push
cli
insl
in
xchg
pop
xor
pushf
lcall
cltd
jns
xchg
mov
jbe
mov
and
mov
mov
push
xor
cwtl
rcrb
pop
insb
fldl
push
pop
dec
inc
jbe
xor
test
int3
cmp
mov
addr16
push
outsb
ffree
dec
aad
xor
pop
or
add
jl
mov
mul
das
lret
xchg
xor
mov
test
inc
push
push
ss
pop
ja
das
stos
stos
cld
loopne
adc
or
dec
lcall
inc
dec
dec
out
aaa
inc
xor
dec
sub
test
push
popa
dec
loop
shll
xchg
sub
jecxz
movsb
shll
negb
inc
fs
push
leave
cs
addr16
and
enter
loope
or
out
scas
or
xor
mov
inc
pop
repnz
in
jmp
mov
push
cmp
mov
cmp
mov
cmp
in
sbb
xchg
lock
sbb
cmp
add
push
dec
push
pop
mov
orl
cwtl
stos
mov
jg
jle
sub
and
call
lcall
xor
nop
cli
push
add
xchg
pushf
inc
repz
push
add
jp
push
mov
orb
les
jno
stos
push
jae
xor
push
and
inc
mov
ffree
nop
out
decl
and
pop
lea
jo
imul
add
mov
insl
lahf
pusha
add
ljmp
imul
push
push
xchg
iret
inc
repnz
xchg
pop
icebp
push
xchg
xchg
xchg
mov
subl
jg
or
repnz
lds
or
adc
jle
mov
inc
addl
sub
into
mov
jge
lea
xchg
cmpsl
dec
imul
pop
pop
ret
mov
inc
cli
push
cmp
mov
pop
jle
xchg
in
leave
shll
cmc
adc
cmp
arpl
add
mov
xlat
adc
inc
inc
cmp
js
gs
fildl
pop
add
jbe
repnz
cmp
xchg
mov
out
mov
insl
xor
sbb
call
or
xor
leave
ja
dec
outsb
dec
leave
sbb
cmpsb
cmpxchg
mov
fidivl
inc
pop
or
sub
adc
xor
adc
pop
aam
xor
sahf
cmpsb
mov
dec
pop
push
and
mov
lods
loop
outsl
jb
decl
jg
stc
jae
and
xor
mov
rcl
pusha
jno
fwait
jle
and
inc
movsl
sbb
sbbl
xorl
xor
cmp
jb
in
or
dec
pop
jl
xlat
out
clc
inc
ret
push
out
xchg
sub
pop
mov
jmp
insl
inc
sub
jmp
pop
add
cltd
in
jecxz
andl
or
or
jmp
xchg
mov
cmpsb
cmp
shlb
loop
stos
stc
mov
cltd
pop
mov
dec
or
ret
sub
sbb
add
iret
sti
fildll
pop
pushf
js
xchg
nop
mov
xor
inc
ret
jecxz
pminsw
fwait
clc
add
mov
clc
add
aaa
es
pop
bound
dec
mov
cmpb
jae
mov
dec
popa
loope
inc
imul
ss
sub
enter
sbb
and
gs
add
pop
mov
aaa
into
and
scas
sub
mov
ret
push
xchg
push
outsl
out
test
ret
adc
cwtl
test
rolb
sbb
cld
sahf
stos
inc
mov
fists
pop
pop
adc
int
shr
mov
push
stos
aam
bnd
push
jp
bound
fsubrp
lcall
pop
cli
sbb
jb
repnz
es
js
fwait
dec
or
xor
mov
mov
divl
push
icebp
mov
outsl
or
push
jnp
cmpsl
pop
cmp
mov
cmp
pop
cmc
pop
dec
mov
sbb
and
andl
pushf
ficoml
sbb
dec
mov
sub
push
xchg
pushw
mov
outsb
and
add
cs
cmc
xchg
mov
jbe
repz
jl
dec
stc
mov
les
aam
push
or
push
mov
jnp
cmp
fs
cmovl
cmp
aam
fistpl
inc
pop
or
mov
filds
lahf
in
and
sbb
lret
adc
lea
mov
xchg
imul
jb
dec
inc
inc
stc
in
cmpsb
insl
dec
fs
daa
jmp
pop
dec
jmp
or
fcompl
lcall
ljmp
pop
fldcw
cmp
fwait
or
jb
scas
cmc
jg
insb
cmpsl
fs
cmpb
cld
insb
mov
sahf
lcall
imul
stc
pop
add
movsl
test
stc
inc
jbe
inc
lock
or
pop
cltd
mov
ret
mov
popf
pop
and
out
lds
adc
sbb
ror
push
int
fsts
mov
or
clc
hlt
daa
xor
test
cmp
imulb
sbb
dec
sti
add
adc
mov
outsb
push
jo
inc
stc
ret
jecxz
xchg
inc
dec
mov
push
in
sarb
outsl
ficomps
mov
adc
pop
dec
inc
in
dec
out
mov
push
or
fisubs
xlat
push
pop
fistl
sub
scas
add
add
incl
test
mov
rolb
jg
adc
sub
dec
stc
add
das
pmaddwd
std
xchg
in
or
pushf
pop
test
jl
ret
inc
dec
outsl
dec
mov
fwait
sahf
mov
test
mulb
imul
adc
sbb
out
call
jmp
sbb
jle
mov
lahf
sub
clc
mov
push
pop
ret
outsb
or
sub
daa
xchg
iret
js
ss
popf
out
xlat
and
cmp
dec
shrl
fimuls
call
pop
pop
pop
imul
aad
inc
out
cs
pop
jns
push
mov
adc
arpl
sbb
lods
je
sbbb
fisttpl
bound
sub
test
mov
add
pop
push
fnstcw
sub
fcmovu
adc
hlt
ja
popf
pop
sub
xchg
push
popa
add
popf
test
xchg
xlat
jns
and
mov
gs
add
mov
dec
or
fistl
into
imul
mov
stos
inc
push
imul
jecxz
mov
jno
cltd
fiaddl
mov
dec
int
push
cmc
aaa
mov
fwait
mov
int
lret
and
stos
sti
xlat
lods
cmp
rclb
and
and
cltd
jbe
pop
inc
mov
inc
dec
lock
xlat
es
jne
xchg
sbb
pushf
repnz
inc
and
stos
inc
jecxz
jge
and
fwait
gs
mov
jmp
popa
push
clc
mov
add
push
mul
pusha
decl
addr16
dec
xor
or
arpl
pop
mov
mov
jbe
shrb
into
sbb
stc
or
mov
inc
sbb
push
or
mov
in
fdivrs
jl
icebp
mov
inc
fdivs
push
pop
mov
and
mov
xor
mov
xor
fcom
jmp
xchg
jne
mov
loopne
dec
push
hlt
mov
inc
cmp
sbb
add
test
leave
lods
jmp
lea
std
idiv
or
push
orb
subb
mov
mov
cli
sbb
repz
loopne
sarl
xchg
sub
cwtl
jecxz
add
adc
fdivrs
mov
bound
push
jbe
inc
out
jbe
pop
movsl
hlt
inc
xor
in
push
das
add
je
xchg
cmp
insb
bound
mov
loope
push
pop
movsb
push
xchg
pushf
call
subl
ret
cmp
add
rcrl
int
ds
add
jp
sbb
jg
mov
sub
mov
mov
insl
jne
push
xchg
test
mov
fstps
cmpsb
pop
lods
and
add
fxtract
xor
call
sub
xorl
pop
out
sub
mov
mov
dec
xchg
xor
nop
lods
sbbb
mov
imul
imul
das
dec
test
mov
in
jmp
dec
pop
inc
cmpb
add
jmp
imul
pop
pushf
hlt
fs
xor
ds
xor
aaa
lahf
mov
adc
cmp
mov
shl
dec
decb
out
inc
mov
pop
sbb
push
gs
xor
add
jg
shrb
mov
mov
insb
jge
mov
push
add
in
lcall
cmp
push
clc
outsb
and
sbb
or
ss
std
js
cmp
jge
dec
cmpsl
ja
shl
jno
xor
addb
dec
dec
in
shlb
sbb
repz
insl
xor
aad
jnp
mov
fisubs
fmull
ret
dec
cld
jo
mov
in
addl
cmp
cltd
mov
sub
pusha
and
inc
ljmp
push
test
mov
dec
ds
jae
into
les
aaa
and
jmp
lock
jnp
insl
push
adc
lcall
popf
mov
add
xchg
es
jns
call
xchg
sti
bound
xchg
cwtl
pop
nop
popf
cltd
inc
xor
pop
in
mov
pusha
jae
orb
shrb
shrl
xor
int
mov
mov
hlt
cmpsl
das
cs
inc
subb
xor
in
pop
add
std
mov
mov
jge
pop
mov
add
nop
push
jg
movl
dec
add
out
pop
les
mov
pop
jge
or
mov
lahf
mov
push
mov
roll
pop
mov
cmp
cmc
sub
lret
inc
jns
mov
stos
jae
mov
sub
push
mov
aam
fs
adc
and
sbb
fsts
and
pavgb
fwait
xchg
mov
pop
pushl
hlt
pop
mov
inc
pushf
test
jb
ffree
cmp
out
push
jge
xchg
stos
or
movsb
sub
imul
test
pushf
pop
ret
add
dec
xor
rcll
cld
xchg
fwait
test
cli
pop
loopne
mov
inc
jbe
lods
jne
or
sbb
into
xor
adc
roll
fwait
xchg
pop
push
mulb
xor
add
dec
or
ficoms
jg
jl
shlb
push
mov
subl
xlat
fstl
mov
jne
ljmp
lcall
addl
push
xor
mov
shll
in
fsts
jae
and
cwtl
fmulp
lcall
add
icebp
shrl
aad
idiv
mov
mov
ret
lret
and
cmp
xor
dec
sbb
adc
aam
icebp
jbe
dec
mov
cmp
cmpsl
cmp
addl
mov
bound
jne
nop
or
into
ret
inc
sub
push
xchg
and
fidivrs
mov
rcrl
test
xor
nop
fcomps
test
cli
test
mov
lods
ret
fstpl
daa
xor
je
sbb
lahf
and
inc
jb
fcompl
adc
push
push
jle
jbe
push
in
ret
add
jns
push
in
or
and
imul
rcl
fmull
mov
jge
in
mov
das
enter
pop
pop
push
into
insb
add
lods
hlt
or
outsb
add
cmp
aad
xchg
fnsave
xchg
push
lret
call
sbb
nop
dec
in
or
mov
dec
pop
pushf
imul
mov
fs
dec
dec
dec
mov
jmp
std
rcr
mov
addr16
dec
fsts
popf
hlt
fldln2
cld
xchg
in
xor
xchg
mov
adc
pop
push
int
xor
push
pop
push
popa
pusha
mov
aas
cmp
adc
ficompl
and
pop
out
mov
xchg
int3
int3
pushf
xchg
inc
pop
xchg
mov
outsl
push
popf
and
stos
insb
mov
or
inc
lcall
push
fs
fldt
mov
cmp
les
xchg
mov
not
adc
cmpsl
dec
and
mov
fstpl
mov
mov
push
rcrl
xchg
sbb
popa
cmp
cwtl
pop
jg
and
aad
xchg
mov
sub
cmpsl
mov
jge,pt
je
pop
push
push
test
xchg
repnz
and
push
aad
and
out
enter
and
add
pop
add
dec
xchg
outsl
stos
add
loopne
push
lcall
fistpll
ljmp
xchg
pusha
in
out
add
mov
push
idivb
pop
lods
scas
int
pusha
mov
mov
mov
push
cmpsl
add
clc
mov
add
sub
lods
leave
fnstcw
or
mov
lahf
add
rcr
cmp
subl
loope
insb
pusha
cmc
loope
jg
icebp
and
mov
or
jl
add
and
call
repnz
xchg
jp
jno
hlt
pop
push
cmp
shrl
jbe
shll
sahf
in
add
push
out
and
ja
sarl
dec
shll
jnp
jo
inc
pop
cwtl
ljmp
pop
sub
adc
lcall
dec
mov
fistpll
out
sbb
aad
sub
mov
popf
leave
sub
mov
and
stos
lds
outsb
and
int3
in
shl
cmpsl
test
sti
pop
or
cmp
dec
add
adc
sbb
and
sub
sbb
in
scas
cmp
shll
or
dec
sti
cwtl
stos
aaa
adc
xchg
mov
lock
mov
push
mov
shrb
and
rorb
inc
xchg
and
pop
push
stc
jno
out
fsts
lea
inc
jle
nop
jl
rcl
fldl
sbb
xchg
iret
int3
mov
pop
mov
add
movsb
sar
movsl
outsb
jmp
pop
mov
je
inc
pop
mov
out
test
cmp
xlat
cmpsb
mov
es
xchg
testl
mov
sub
sub
inc
jo
int
dec
in
inc
mov
jo
dec
test
repz
fstps
imul
sbb
hlt
insl
mov
cs
scas
jo
push
dec
es
and
ja
test
fildl
xor
jecxz
stos
xchg
into
mov
int
mov
sti
xchg
out
cwtl
push
idiv
je
clc
xchg
pop
cmc
mov
test
mov
fwait
xor
lea
mov
fsubrs
mov
into
in
push
out
data16
lret
cmp
mov
adc
xor
int3
push
inc
and
pop
fidivrl
push
dec
mov
inc
inc
loop
jl
or
mov
cmp
cs
icebp
cmpsl
ljmp
jecxz
sub
dec
divb
loope
push
xchg
sbb
inc
cli
mov
push
mov
out
cmc
jle
inc
fldcw
lahf
xor
iret
adc
test
fbld
mov
aad
movsl
xor
shlb
pop
push
lds
and
xlat
in
pop
mul
pop
add
data16
jns
leave
cmp
jns
and
dec
ret
push
mov
or
xchg
mov
rorb
std
mov
cld
jecxz
test
inc
mov
addl
std
pop
fs
gs
xor
push
je
mov
and
fists
mov
fdivrl
popf
jb
cmp
in
aam
call
sub
xchg
inc
or
mov
ljmp
sbb
test
loope
xor
or
push
dec
daa
push
ret
movsl
and
push
scas
in
pop
sbb
test
push
outsl
shll
xchg
and
adc
inc
aad
xorl
add
mov
jnp
mov
loop
add
jmp
push
jl
out
outsl
insb
shlb
ljmp
int
call
out
negb
jae,pn
dec
inc
fists
repnz
gs
xor
mov
mov
jle
in
notl
xchg
repnz
ds
xchg
mov
test
push
iret
ja
lods
mov
lds
xor
mov
xor
jb
add
test
rolb
loopne
xchg
dec
adc
aas
sbb
out
je
push
pop
rolb
and
rclb
lret
rol
into
std
mov
cmpsl
into
mov
in
mov
cltd
pop
ss
js
sbb
ret
cmp
add
xchg
jbe
sub
sbb
add
daa
jg
repz
cmpsb
lds
xchg
mov
lods
pop
inc
loope
daa
xlat
jmp
or
and
fildll
in
ror
xor
cmp
cli
pop
and
aaa
inc
fwait
mov
repnz
and
in
insl
lods
mulb
lds
xchg
and
pop
or
clc
inc
popa
sub
lret
das
mov
mov
sbb
pop
idivl
mov
inc
push
call
mov
ret
mov
rcrb
fnstenv
outsl
and
mov
pushf
cltd
pop
cmpsb
xchg
cmp
mov
je
pop
lods
pop
adc
push
or
stc
mov
add
inc
xor
fistpl
push
in
pusha
xlat
pop
shll
in
imul
adc
lret
pusha
fnstcw
and
dec
ret
dec
push
add
mov
push
test
jns
insl
inc
pop
jno
hlt
jg
pop
mov
pop
sbb
push
lret
mov
sbb
cmp
sbb
outsl
das
out
and
or
push
data16
inc
mov
jb
add
xchg
daa
add
out
xor
test
hlt
mov
cli
fyl2xp1
jmp
cmp
mov
sbb
cmp
testb
lcall
in
inc
outsb
add
jmp
xor
mov
test
inc
inc
sub
pop
int3
sahf
and
pushf
popf
in
mov
nop
cmp
push
jecxz
arpl
repnz
and
into
jnp
aad
fldl
inc
test
dec
xor
mov
adc
cmpsl
inc
pusha
arpl
mov
dec
das
add
fimuls
sub
cmpl
dec
cmp
setbe
gs
lock
inc
fwait
mov
jmp
or
imul
ds
mov
inc
cmpsl
data16
cwtl
mov
sub
sub
push
add
jmp
sbb
imul
int
mov
add
roll
xlat
pop
test
mov
shll
outsl
repz
aam
and
xor
push
pop
ljmp
inc
and
xor
mov
loop
and
mov
cmp
sbb
push
ss
jge
rcrl
enter
adc
sbb
mov
stos
mov
cmp
cmp
mov
fdivs
mov
inc
addr16
jo
inc
sub
dec
jb
jno
xlat
ljmp
sub
pop
pop
lret
adc
mov
xchg
cmp
cmp
cmp
ljmp
jp
pop
jbe
mov
fstpt
movsb
iret
in
mov
xor
lds
cmp
in
std
lea
jns
incb
push
fst
xor
pop
jg
cwtl
jge
fidivrl
push
loopne
push
loope
sbb
mov
adc
xor
pop
imul
js
mov
orl
sbb
adc
cmpsl
xchg
cmp
mov
add
insl
inc
scas
xchg
jmp
mov
ljmp
js
sub
pop
cmpsl
jp
and
cmp
inc
cmp
lret
cmp
cmpsb
fidivrl
je
imul
out
cmc
ret
jne
das
aas
sarl
pop
out
loopne
dec
adc
imul
mov
adc
mov
dec
xor
pop
sub
jp
mov
test
mov
inc
jmp
aaa
cwtl
cmpsb
cmp
in
dec
jne
push
jbe
push
jmp
leave
movsl
mov
add
xchg
adc
ljmp
sbb
gs
add
push
dec
xchg
sti
pop
bound
loopne
cmp
or
jnp
popa
ja
cmpsl
mov
jns
jbe
pop
filds
jnp
pop
jnp
mulb
xor
lcall
and
pop
fsubrp
sub
test
lret
insb
pushf
and
shl
mov
andb
adc
lret
push
int
call
jno
ja
sbb
pusha
lods
dec
or
aad
imull
sahf
mov
pop
mov
adcl
jns
gs
out
flds
xchg
add
nop
leave
filds
mov
lods
adc
cwtl
leave
xor
std
lods
lds
call
out
jne
cmp
js
push
and
mov
mov
movb
add
inc
adc
int3
in
ja
popa
test
fnsave
fistps
jl
sarb
jg
jbe
add
repnz
ret
mov
xor
movsb
pop
xorb
sahf
cmpsb
pop
subb
push
xor
hlt
mov
xor
fmull
sub
dec
or
dec
add
sahf
out
cmp
mov
jo
xchg
inc
movsl
mov
idivl
icebp
xchg
inc
push
fldt
jnp
push
xchg
popa
push
and
outsb
push
adc
ljmp
lret
mov
daa
cltd
fs
int
movsl
dec
stos
or
insb
or
jbe
inc
pop
lcall
mov
pushf
or
or
sub
pop
jg
mov
pop
push
jno
cmp
icebp
dec
nop
pop
shll
ss
scas
sbbl
jmp
mov
iret
fimull
mov
mov
pop
add
xchg
aad
xor
lods
add
shll
xor
fisttps
loop
or
cmp
xchg
int3
or
xchg
sub
inc
adc
pop
push
sbbl
cs
mov
mov
hlt
cltd
adcl
lea
push
outsl
or
push
leave
adc
arpl
pushf
and
xor
push
imul
ja
into
mov
jmp
push
ss
ficomps
fistl
or
mov
call
pop
xchg
pushf
add
es
lret
hlt
sub
cmp
push
std
aaa
fidivrl
push
adc
ja
loop
lcall
sbbl
xchg
popf
mov
inc
js
pop
arpl
cltd
int3
loopne
adc
rolb
add
mov
movsl
jl
inc
sahf
sub
lret
cli
pop
mov
testb
push
sub
jbe
aad
fsub
mov
add
cs
shlb
inc
push
sbb
fstpl
and
jns
test
les
sbb
ljmp
jl
js
arpl
movsl
pop
daa
mov
in
aaa
movsl
xor
iret
push
mov
bswap
ja
test
dec
loopne
es
inc
imul
mov
loopne
cmc
jnp
mov
mov
popf
sbb
xor
dec
nop
in
stos
sbbb
xchg
iret
or
out
mov
mov
int3
fdivs
mov
lods
ret
add
out
xchg
xchg
sub
lcall
shlb
push
decl
das
xchg
in
lods
jmp
add
lods
int
pop
js
adc
xor
subl
pop
xor
jnp,pn
adc
aad
out
mov
popa
lahf
and
in
xchg
jg
add
inc
xor
int3
shrb
jmp
orl
jecxz
cli
orb
xorb
call
sbb
repnz
and
pop
dec
mov
ss
and
dec
cmc
sbb
and
aaa
mov
jecxz
or
je
xchg
cmp
test
sbb
les
pop
out
lret
pushf
sbb
shll
cltd
mov
mov
movsl
cltd
mov
lods
ljmp
pop
fwait
pop
lods
shrl
dec
ds
xor
sarl
scas
inc
xor
rcr
sti
mov
inc
dec
lret
pop
aaa
lods
fs
xchg
imul
outsl
arpl
sbb
fcompl
pop
sbb
adc
push
test
call
std
jo
sbb
imul
stos
adc
stos
inc
and
cs
pushf
xorl
test
fs
test
test
push
xchg
rcrb
or
cmpsb
cltd
dec
push
sub
divl
movsb
arpl
rorl
aam
bound
jp
mov
sub
insl
xchg
setle
pop
xchg
fildl
or
pop
aam
add
mov
mov
and
in
push
inc
add
push
adc
or
out
arpl
popf
pop
push
fldl
es
mov
popf
rol
and
pop
adc
xchg
aam
and
adc
es
fldl
loop
ret
ss
jle
sub
mov
mov
push
sub
dec
icebp
inc
pop
data16
filds
dec
test
lods
add
dec
out
ret
aaa
ljmp
in
xor
lcall
pop
cmp
sbb
or
lret
or
jg
std
call
pusha
rcrl
cmp
cmp
or
dec
jne
pushf
cmp
push
xor
lods
jmp
das
orl
pop
stc
cwtl
cmpsb
mov
cmp
xor
cli
xchg
add
cmp
nop
xchg
dec
out
scas
dec
inc
mov
jg
lods
sub
in
jle
icebp
mov
and
mov
push
or
and
out
fistl
iret
xor
push
mov
cmc
and
scas
ficoml
rcrl
sub
icebp
push
push
push
movsb
andl
repz
and
inc
sbb
or
add
popa
repnz
out
enter
push
fidivs
test
pop
mov
addr16
das
lahf
or
shrb
cmc
popf
je
push
sti
push
ja
and
push
mov
jmp
movsb
push
inc
fadds
ret
enter
fcompl
and
push
ss
push
xchg
push
daa
and
dec
fildl
or
sub
adc
loop
into
decl
jae
sbb
test
jne
jnp
adc
jnp
loop
and
cs
add
ret
cs
push
mov
push
jl
jbe
mov
sub
dec
loop
bound
cmpsb
jne
push
in
or
or
fidivl
mov
iret
sbb
arpl
sub
scas
test
addl
jb
and
mov
add
cwtl
lods
pop
jb
ljmp
jp
adc
fs
xchg
pop
xchg
push
mov
mov
inc
jb
xor
inc
int
dec
inc
imul
xchg
push
jne
pop
dec
inc
adcl
jne
cld
mov
iret
iret
mov
mov
cli
xorl
inc
andl
test
cmpsl
lcall
jge
gs
and
aas
push
cmp
cli
xchg
xchg
ficoml
mov
jb
jbe
sub
sbb
into
mov
push
jbe
pushf
enter
and
rorb
inc
fistl
add
and
aas
pop
push
push
pop
adcl
in
or
test
dec
or
pusha
sub
sub
lret
das
pop
push
sub
mov
dec
push
sub
mov
xchg
ficomps
dec
jb
push
jge
outsb
cmpsb
or
pop
mov
xchg
daa
pop
out
pop
or
movsb
jp
mov
push
dec
mov
lret
lods
ffree
shrl
dec
les
pop
imul
fbstp
pop
mov
fsubs
mov
inc
stos
jns
imul
mov
add
xor
rclb
cltd
arpl
popa
movsw
pop
xchg
add
push
pop
add
dec
sbb
add
daa
sbb
pop
ljmp
mov
jo
bnd
jge
jecxz
fsubs
cmc
insl
cmp
sub
adc
ja
ret
xor
fstl
mov
dec
cmp
jne
xor
jae
movsl
add
jnp
jbe
jp
xchg
fistpl
xor
push
in
adc
enter
push
flds
aam
icebp
movsb
inc
ror
mov
cmp
divb
cmpsl
outsl
sarl
or
cltd
jo
cmp
add
xchg
and
icebp
push
inc
jl
inc
jl
jbe
loope
mov
in
jg
sub
mov
cmp
incl
aaa
pop
mov
loopne
dec
jle
jecxz
ljmp
mov
sbb
inc
aam
aaa
push
mov
call
xor
sbb
dec
jge
mov
adc
pop
stos
mov
sbb
inc
dec
mov
jb
adc
push
xor
pop
and
loope
jnp
das
sbb
shlb
pop
xor
lcall
mov
pop
mov
jbe
jle
leave
push
insb
lods
or
jle
xlat
sub
shll
scas
ss
cmp
test
js
lods
jb
jns
mov
lret
out
jae
xchg
cmp
cmp
push
cmpsl
pop
inc
fisttpl
lret
pop
jb
and
adc
andb
dec
daa
pop
push
movsb
mov
xor
adc
mov
ror
into
popf
xorb
pop
cmp
pop
sarb
and
fildl
or
mov
mov
xchg
mov
jne
push
sahf
out
or
xchg
adc
mov
test
cmp
pop
pop
or
fadds
sub
ja
in
call
cmp
arpl
mov
dec
movsb
pop
int
insb
lock
mov
jp
jnp
or
jae
jecxz
adc
xchg
loopne
movsl
pop
pop
push
mov
sbb
test
push
mov
ja,pt
insl
cltd
adc
imull
sahf
hlt
dec
xchg
stos
jp
in
call
mov
mov
adc
outsl
movsl
inc
jbe
aas
mov
gs
jmp
sub
stc
repz
add
inc
add
add
shll
cmpsl
mov
cmpsl
jnp
jb
push
into
aas
or
mov
jnp
sahf
nop
adc
mov
lock
rorl
repnz
mov
fadds
xor
push
cltd
add
call
mov
aam
jge
lods
jnp
orl
xor
push
xor
xchg
jge
cmpsl
mov
sbb
cmp
jns
enter
mov
out
imul
and
lcall
lcall
loope
popf
lock
pop
addr16
mov
icebp
xor
rclb
mov
xchg
push
je
sarb
and
loop
clc
pushf
push
cmc
sbb
jno
dec
fstl
jno
daa
popf
int
in
mov
lods
cmpsl
subb
or
mov
adcl
xchg
aaa
add
sahf
int
ret
int
inc
inc
lock
mov
jecxz
or
xor
lahf
pop
out
mov
je
xchg
ret
dec
out
pop
xor
lea
add
xor
fs
inc
push
xchg
getsec
fiadds
dec
cmp
sbb
stos
push
test
loop
in
jb
ljmp
loopne
or
xorb
andb
xchg
in
pop
gs
es
and
scas
jecxz
sub
in
jmp
xor
inc
sbb
push
jmp
push
inc
jmp
enter
push
pop
addl
subl
or
jnp
js
jmp
pop
sbb
jnp
and
nop
sbbl
push
out
or
or
into
mov
cmp
mov
mov
push
decb
nop
push
hlt
adc
adc
xchg
pop
imul
int
int
out
fcmovnbe
in
hlt
repz
sub
xor
stos
enter
xlat
out
xlat
mov
ja
jecxz
addb
dec
inc
push
inc
sub
adc
lock
les
lods
xor
ffree
bound
jo
xor
mov
push
jne
mov
mov
and
pop
inc
mov
xor
fsubrp
adc
or
sub
inc
jg
rol
mov
cmpl
add
add
bound
inc
jbe
inc
sub
xchg
pop
mov
dec
inc
jp
push
stos
jb
mov
test
and
in
jmp
cmc
sub
mov
and
stos
mov
and
mov
adc
clc
sub
sbb
into
sub
div
daa
mov
sub
stos
add
stos
xor
jl
outsl
inc
lahf
xchg
cmp
add
pusha
mov
and
jae
sub
and
repnz
daa
add
or
pop
add
jbe
xor
mov
inc
into
lret
sahf
add
out
mov
jo
mov
cwtl
xchg
out
sbb
sbb
and
sbb
sbb
mov
dec
ja
xchg
lods
xor
add
repz
loopne
les
cli
mov
and
cmp
inc
add
add
jp
mov
icebp
lods
add
mov
js
lds
fldl
inc
mov
xorb
imul
sbb
xchg
cwtl
movups
pop
dec
rcll
imul
push
cs
ljmp
cmpsb
mov
pop
pop
xor
mov
insl
outsb
cld
subw
popf
cmc
or
icebp
lods
imul
push
add
test
xor
pop
mov
push
orl
stc
and
and
xchg
push
test
add
mov
xor
or
sub
push
sbb
sub
pop
in
dec
fwait
in
mov
mov
dec
adc
in
into
sbb
and
mov
test
pop
pop
mov
cld
pop
xor
insl
xor
lock
and
pusha
push
das
loop
ss
inc
test
sti
incl
cmp
pusha
lods
mov
fidivs
mov
push
xchg
sbbl
jle
lcall
cpuid
push
xchg
mov
push
jg
cmp
mov
adc
and
addl
sti
gs
dec
push
loop
xlat
out
mov
adcb
dec
push
jl
sti
jmp
cmp
mov
mov
dec
repz
daa
xchg
or
outsl
jns
cmpb
int
out
mulw
je
inc
enter
dec
out
movsl
mov
xlat
cmovno
les
out
adc
mov
mov
jl
ljmp
xchg
out
jle
add
cmc
fs
lea
mov
push
aaa
sbb
shlb
and
push
movsl
movsb
loopne
adc
hlt
lahf
inc
cmpsl
push
daa
ret
cmp
sahf
popf
jle
or
test
or
ja
lods
pop
mov
xor
push
mov
stos
add
cmp
inc
subl
cs
cltd
loope
mov
rol
dec
rolb
outsl
dec
push
cmp
add
ljmp
mov
xor
mov
lds
add
mov
call
imul
pop
xor
jg
sahf
pop
jo
loopne
int3
arpl
es
and
gs
sub
into
filds
cmp
test
xor
sbb
enter
sbb
adc
or
ret
mov
xchg
xchg
outsb
hlt
sub
dec
lods
loopne
pop
or
enter
ljmp
sbbb
cmp
pop
mov
orb
lahf
xchg
fwait
jg
roll
sahf
jne
adc
aad
push
xor
jno
xchg
inc
inc
push
sbb
xchg
inc
adc
sub
and
rcrl
mov
mov
shll
or
mov
or
lock
push
cmp
cmpsb
lock
in
mov
mov
fwait
dec
clc
imul
and
pop
or
add
loope
inc
push
inc
pop
leave
pop
ret
enter
xchg
xchg
xchg
pop
imul
loop
insl
sub
test
xchg
mov
inc
popa
jne
push
xor
imul
mov
pop
jb
dec
cmp
jmp
rcll
mov
orl
sti
mov
cmp
orl
mov
pop
cltd
pop
incl
push
mov
push
or
shll
lahf
mov
push
jb
fldcw
shll
addr16
int
jl
std
sbb
mov
fdivrl
cmp
pusha
addr16
movsl
cwtl
cmovbe
xchg
dec
or
inc
or
mov
cmp
and
xorl
lods
push
dec
pop
jp
fsubs
imul
sbb
imulb
in
addr16
add
add
fwait
iret
repz
jo
shll
inc
loope
dec
fsubrp
mov
xor
mov
or
ljmp
inc
jne
adc
dec
pop
outsl
mov
dec
scas
pop
daa
aad
lahf
lods
fsubl
or
hlt
pop
std
inc
cmpsl
mov
add
or
or
fstps
xchg
or
fcoms
xor
insb
pop
insb
fidivrl
popa
test
scas
cmp
ss
mov
pushf
xchg
sub
jb
push
mov
jge
inc
loope
cmp
xchg
iret
lds
mov
dec
mov
xor
and
in
or
push
add
sbb
adc
call
test
stc
pop
ljmp
aam
imul
ret
les
addr16
movsb
stos
push
mov
shlb
push
loope
sahf
repnz
mov
xchg
call
add
jg
and
inc
sahf
xorb
daa
int
and
xor
xchg
mov
mov
mov
arpl
imul
ja
test
shrb
les
ret
fidivrl
movsl
sbb
mov
aad
pop
fdiv
outsb
mov
or
mov
lods
inc
loope
cmc
es
push
pop
test
pop
pop
hlt
or
call
test
sbbb
or
lds
sub
cmc
adc
sub
push
jge
sub
cmpsb
imul
push
lods
sbb
faddl
aad
push
cmc
inc
sbb
xor
add
or
ds
imul
or
dec
cmc
jmp
cli
push
cmp
or
dec
test
add
mov
push
dec
lds
iret
jno
push
inc
ss
test
stos
mov
movsb
mov
ret
adc
das
or
push
sbb
xor
xchg
and
dec
dec
pop
sub
fwait
ret
or
es
sbb
add
mov
scas
ja
push
pop
cltd
lret
xlat
xchg
roll
andb
xchg
in
pop
jmp
cld
lea
mov
adc
loope
sbb
mov
loop
das
ljmp
lods
jp
arpl
jp
movsb
push
call
adc
pop
xorl
push
add
cmp
pop
fisubl
fcomp
adc
sahf
jbe
or
pop
adcl
js
adc
movsb
xor
icebp
leave
cmp
iret
cmp
sub
cmpsb
shufps
insl
popf
sub
rcrb
out
aas
ror
mov
shll
jmp
sbb
popa
rorb
or
push
dec
sbb
daa
mov
lea
mov
dec
and
cltd
das
popa
add
dec
pushf
add
or
or
adc
xor
mov
mov
adc
sbb
repz
pop
fidivs
mov
ss
lcall
mov
out
testl
loope
sti
dec
ja
subb
dec
push
test
iret
mov
call
push
xor
mov
sub
fimull
add
xchg
dec
jns
sbb
inc
fisubs
popf
adc
sub
dec
adc
jnp
lret
xchg
cwtl
dec
push
pop
mov
roll
push
imul
mov
out
jg
arpl
mov
push
outsl
loop
iret
add
call
dec
fidivrs
es
pop
push
aaa
xchg
push
inc
test
in
cmp
push
dec
add
arpl
pcmpeqw
jo
cwtl
pop
pop
cmp
mov
jmp
mov
mov
push
mov
mov
push
aas
insb
add
mov
push
mov
enter
out
inc
aas
cmp
vmwrite
test
or
push
flds
sub
test
jbe
jno
xchg
roll
aas
in
push
lret
mulw
repz
nop
daa
dec
test
ret
xor
xchg
movsb
mov
aas
jg
sub
mov
pop
lcall
add
gs
gs
and
inc
std
and
cltd
cmc
pushf
jg,pt
notl
add
lock
imul
out
stos
popa
push
pop
mov
fildll
push
scas
pusha
xchg
mov
xor
push
loop
int3
push
ds
rcrb
mov
in
add
pop
lahf
pop
inc
cmc
push
lahf
bound
rorl
xor
data16
test
fdivr
xor
mov
lahf
iret
lcall
sbb
scas
ret
dec
adcl
std
dec
shlb
sub
push
inc
es
push
inc
mov
lds
add
push
cltd
rcll
cltd
inc
mov
mov
pushf
cld
pop
push
add
data16
rclb
dec
clc
pop
push
cmp
and
or
ret
mov
daa
adc
negb
and
int
cmp
movsb
rcrb
or
or
gs
fcmovu
mov
popf
mov
sti
daa
bound
idivl
sarl
popa
lods
ja
adc
incl
or
inc
sbb
jb
in
push
out
xchg
dec
cld
std
das
int
arpl
pop
pop
mov
pop
lret
xchg
sub
push
mov
cmp
push
inc
out
sbb
jo
insl
fs
ret
xchg
inc
or
int3
or
sarb
lret
jae
dec
jge
clc
mov
addr16
jl
std
pop
sub
sbb
mull
ljmp
sbb
aas
lds
test
push
sar
or
push
in
pop
inc
cmp
sub
lods
sub
loopne
or
test
jbe
popl
jb
repz
and
clc
aam
outsb
fstps
and
cmp
sub
push
cmpsl
loop
mov
add
insl
push
mov
push
mov
pop
das
sub
scas
rcrl
sub
data16
dec
xlat
push
or
insb
imul
int
sub
stos
add
dec
lea
sub
push
xor
sbb
cmp
jmp
mov
imul
iret
xchg
xchg
adc
sbb
inc
mov
fwait
out
loopne
scas
xchg
cmp
test
mov
and
adc
out
xchg
mov
scas
in
add
jge
push
ss
popf
inc
movsl
aam
dec
mov
and
jg
jle
jno
xchg
icebp
and
jo
jns
fs
sbb
push
cs
push
add
jg
test
push
into
in
cmp
dec
push
sbb
int3
xchg
gs
xor
lcall
add
dec
jge
ret
mov
movb
inc
jmp
sbb
push
lods
mov
movsb
repz
cmp
insl
lods
fldl2e
fimuls
pop
sbb
mov
mov
adcl
or
xchg
cmp
add
ljmp
mov
or
addl
mov
jae
movsl
xchg
sub
lret
inc
pop
push
fs
aaa
inc
divb
add
xchg
sub
in
fwait
jb
sbbl
mov
add
test
jecxz
push
mov
in
cmp
in
or
das
inc
jo
outsl
js
fmul
test
scas
sub
or
push
stos
aam
dec
mov
lahf
inc
sbb
aas
jg
xchg
icebp
lds
cltd
mov
sarb
ljmp
push
repz
xchg
xor
mov
pop
push
push
xchg
loopne
jmp
rcr
leave
stc
jg
pop
mov
xchg
and
or
cmpsl
sub
or
lcall
stos
xor
inc
fistpll
dec
sub
push
add
cwtl
scas
pusha
sub
test
repz
popl
cmp
push
jnp
je
jmp
sub
add
gs
pop
lcall
sbb
push
add
inc
outsl
popf
imul
sbb
cmp
in
enter
sub
pushf
xchg
stos
imul
pop
aad
push
nop
mov
fimuls
cmpb
jp
mov
mov
inc
add
mov
mov
test
or
dec
xchg
add
sub
mov
push
divpd
cmp
imul
pushf
std
sti
jno
pop
push
ds
ljmp
lret
push
pop
ss
sub
shlb
xchg
cmc
jmp
add
mov
jb
dec
mov
inc
bound
andl
cmp
xor
inc
and
pop
pop
outsl
vaddps
les
lock
out
stos
std
xchg
push
outsb
cmc
dec
dec
xchg
je
mov
popa
out
in
cwtl
sub
add
mov
fcom
adc
mov
aaa
and
mov
push
xor
out
repnz
xchg
test
out
inc
pop
out
mov
push
movsb
sti
out
into
xor
lret
popf
jae
repz
jecxz
adcl
inc
pop
rcrb
and
xor
movsl
inc
int3
sarl
jnp
hlt
push
xorl
lds
mov
movsl
mov
icebp
xchg
mov
mov
bound
stc
mov
dec
dec
or
dec
inc
cmp
push
rcr
insb
push
movsl
pop
movsl
mov
aam
lahf
leave
mov
sbb
pop
aad
sahf
mov
jnp
pop
into
out
stos
icebp
dec
insl
push
pop
adc
je
aam
nop
mov
xchg
xchg
inc
outsl
adc
imul
sbb
jnp
sahf
cmpsb
mov
sarb
negb
das
xchg
adc
adc
mov
mov
sbb
data16
cmpsl
clc
movsb
cmc
xchg
cmp
and
shll
aas
les
ret
pop
xchg
repz
leave
filds
push
inc
mov
pop
bound
enter
jbe
inc
popa
into
add
and
loopne
mov
or
call
vsubss
fwait
bound
pop
sbb
repz
mov
out
xchg
adc
mov
addr16
cltd
or
push
insb
inc
outsl
fwait
repz
pushf
cltd
shrb
and
mov
xchg
imul
fstpl
mov
aam
inc
push
iret
cmpsb
push
cmp
push
cli
xor
loope
test
ret
fdivrp
xor
jne
dec
aaa
lea
cmc
ret
jbe
in
stc
adc
or
lods
xor
repnz
pop
push
inc
pop
outsl
ds
insb
push
inc
call
mov
int
dec
lret
out
xlat
jnp
ljmp
int3
cmp
ds
push
pushf
daa
lcall
mov
dec
xchg
and
js
subb
add
mov
andb
cld
loop
loopne
movsb
jbe
lcall
push
nop
push
sub
fmuls
data16
or
fmull
sub
adc
mov
and
jae
vpsllq
or
xchg
lods
cld
repz
sub
movsl
ss
mov
sub
cmp
adc
adc
pop
or
in
push
sahf
fwait
test
stc
int
std
jb
and
adc
imulb
xor
push
pop
cltd
ret
mov
sahf
xchg
out
mov
xchg
mov
jmp
popa
sbb
jae
ljmp
pop
out
jo
lahf
mov
shrl
imul
addl
fs
dec
mov
adc
out
xor
mov
out
xor
xchg
bound
ja
cmp
mov
loop
xchg
iret
clc
push
fidivl
xor
push
out
scas
aaa
movb
mov
or
mov
stos
shll
jp
popf
mov
add
pop
neg
clc
xchg
loopne
push
into
pop
fs
mov
cmp
adc
or
lea
das
ljmp
out
and
and
or
xor
clc
inc
dec
push
push
out
mov
int3
les
cmp
in
sub
push
ljmp
sarb
lret
or
fbld
out
pop
jae
movsl
dec
repnz
or
subb
call
xchg
inc
sub
loopne
decl
ret
rol
mov
enter
inc
std
das
clc
imul
sub
sbb
ljmp
cmp
xchg
push
shl
xchg
dec
sbb
push
sub
and
test
out
js
xchg
les
orl
mov
cmp
mov
inc
cltd
lock
push
mov
stc
push
or
dec
inc
ljmp
add
rclb
cltd
sti
push
std
into
shrl
int3
sbb
inc
lea
test
hlt
stos
add
std
mov
ret
cmp
in
ss
icebp
pop
inc
dec
pop
lahf
sub
push
aad
nop
mov
xlat
cwtl
xchg
adc
or
or
add
sbb
rclb
ret
push
jb
add
xor
ss
dec
lds
xchg
add
loop
and
scas
cmc
or
dec
adc
sub
xchg
xor
pop
mov
inc
pushf
mov
cmp
and
sbb
jecxz
out
cmp
lcall
lret
mov
mov
dec
cmp
shl
imul
xor
or
ljmp
loop
adc
je
out
out
jbe
or
mov
dec
adc
lea
inc
sub
xchg
lods
jne
sahf
jp
mov
lods
pop
cmp
mov
dec
sbb
adc
cmp
xchg
clc
add
sub
cmp
addr16
gs
and
sbb
fistl
sbb
gs
loop
inc
das
mov
test
jo
in
xor
push
loopne
cmp
pusha
pop
fstpl
xchg
push
cmp
pop
outsl
cmp
mov
mov
xor
inc
cmpsl
outsl
pop
or
push
jb
jge
ret
push
mov
mov
stc
idivl
mov
icebp
test
subl
mov
or
cltd
sbb
sbb
jl
inc
cmp
mov
std
mov
cld
mov
dec
cmp
add
insb
arpl
ljmp
sub
out
outsl
pop
push
inc
jmp
aad
push
lret
add
lock
jbe
mov
pop
in
inc
jp
jbe
xchg
and
jp
and
stos
in
pop
mov
shlb
sub
imulb
rol
push
sub
dec
ret
mov
sub
bound
mov
xor
dec
insl
mov
fdivrs
loop
xchg
jnp
shrl
pop
push
inc
outsl
mov
addr16
adc
xchg
insb
hlt
js
dec
xchg
lcall
std
cmp
or
xrelease
lret
mov
fisttps
adc
jle
or
rcl
mov
cmp
inc
jecxz
sub
or
cmpsb
stos
jno
jb
xchg
dec
mov
cmp
cmc
inc
push
mov
sub
addb
mov
loope
jbe
cmp
mov
mov
lods
lahf
jmp
ret
mov
repnz
outsb
push
shlb
sahf
push
sub
cwtl
mov
pop
xchg
jecxz
jl
push
xchg
fs
in
loop
add
rcrl
stc
in
or
inc
insl
pusha
test
std
jb
cmp
jne
pop
push
cmc
xor
mov
jns
fisubl
cmp
mov
sub
adcl
out
jo
jno
orl
lds
mov
cltd
js
sbb
push
or
lods
into
push
push
jge
shll
out
mov
xor
repz
xchg
jp
mov
xchg
pop
lods
enter
je
decb
cmp
mov
loopne
cli
movsb
popf
addr16
rclb
cmp
jnp
mov
mov
movb
stos
xor
push
mov
lods
repz
cltd
lret
lods
andl
fimuls
fidivl
pop
sub
hlt
leave
xchg
jno
pusha
loope
dec
iret
std
stos
adc
rep
lock
lret
cs
jnp
addb
sbb
push
sub
or
cmp
lret
cwtl
lahf
ja
sub
inc
movsb
std
lretw
out
xchg
insb
mov
xchg
and
push
scas
mov
les
int
imul
roll
jg
jns
adc
shll
sbb
sbbl
aaa
sub
xchg
inc
arpl
ss
inc
dec
das
arpl
outsb
sahf
mov
and
arpl
cmp
cmp
mov
insb
loop
shlb
jmp
xchg
xchg
inc
push
xchg
mov
mov
test
dec
pop
mov
lret
mov
sub
mov
nop
push
cli
push
enter
xchg
mov
sub
test
inc
jecxz
fucomp
push
pushf
xor
mov
jno
and
mov
or
mov
fistl
mov
mov
ficompl
int
int3
and
js
push
jo
adc
mov
clc
mov
cmp
pop
sub
jp
test
inc
icebp
cmp
lahf
pushf
in
sbb
mov
das
adc
cmp
int
fidivrl
pop
add
adc
push
idivl
movbe
xchg
inc
xor
cs
push
cwtl
ret
pop
cmc
jo
xor
in
rcll
std
mul
mov
or
test
stos
out
scas
pop
jge
add
pop
xor
dec
lods
int
pop
ret
inc
jle
mov
push
jle
mov
mov
enter
fnstsw
xchg
mov
mov
dec
out
and
bound
mov
pusha
mov
test
sti
push
hlt
mov
mov
scas
add
dec
aam
add
mov
pop
leave
push
inc
push
mov
mov
add
inc
dec
or
mov
ret
cmp
mov
and
fildll
xchg
xor
xor
jbe
inc
cmp
in
xor
xchg
inc
in
and
fwait
dec
shrl
cmp
fdivs
sub
shl
mov
and
mov
ret
mov
mov
mov
test
cmp
cmp
jo
inc
movsb
push
inc
xor
and
jae
lods
ret
andb
aam
lea
je
dec
imul
hlt
leave
lahf
call
pusha
sbb
ss
cmp
push
mov
in
call
jmp
or
or
sub
jno
jb
daa
sub
cmp
inc
mov
jno
sbb
div
shrl
pop
rol
or
mov
stos
cmp
mov
jmp
das
pop
xchg
sbb
xor
idivb
mov
repnz
sub
adc
mov
stos
movsl
sub
push
fxch
xchg
or
repz
rcr
push
aad
or
ss
inc
and
clc
scas
jp
negl
fsubp
sbb
fs
mov
incb
inc
or
cltd
clc
subl
xor
pop
outsb
pslld
mov
sbbb
insl
dec
lcall
add
ja
sbb
rol
or
mull
inc
or
mov
inc
mov
loop
aaa
insl
jmp
jae
imul
movl
mov
shl
sub
scas
stc
lock
inc
xchg
add
xor
mov
xchg
das
es
imul
in
lret
mov
je
mov
fisubrs
sub
loop
lods
es
mov
loope
add
nop
jo
pop
sbb
sbb
pop
test
dec
xchg
lds
inc
mov
mov
sbb
jmp
aad
ret
ds
pop
fstl
pop
jb
mov
and
jbe
inc
sbb
mov
sub
push
cs
adcl
pop
xor
sbb
sub
std
dec
lcall
mov
pop
mov
leave
loopne
and
mov
add
rorb
adc
enter
sub
push
leave
cld
jmp
mov
pop
lea
mov
mov
sub
and
pop
imul
fidivrl
add
es
fdivrl
cli
pop
push
push
xchg
jge,pn
pop
jnp
jl
lea
mulb
out
mov
sub
or
mov
mov
outsl
arpl
pop
sub
shl
add
inc
aam
lret
adc
cmp
dec
jb
cmc
loop
clc
arpl
xor
fwait
and
loope
in
and
std
or
xchg
aad
js
jg
outsl
mov
sti
icebp
mov
mov
or
sub
cmpsl
add
dec
lret
xchg
cmc
inc
shll
push
mov
adc
jge
int3
pop
sub
sub
sbb
fmull
pop
sbb
adc
pushf
daa
lods
mov
add
push
inc
addb
cltd
aas
loopne
subl
arpl
imul
xchg
push
dec
sub
xlat
movsb
sbb
sub
icebp
push
sti
add
mov
add
fdivl
adc
cmp
pop
addb
in
push
mov
pop
aas
sub
push
int
jle
add
mov
fbld
jl
push
fwait
lds
pop
js
mov
pushf
addr16
in
inc
cltd
jns
cltd
stos
sti
cs
repnz
or
into
stos
adc
cmp
push
mov
test
gs
sub
fisubl
call
rcr
daa
insb
sbb
shr
xchg
push
lds
dec
je
in
out
adc
cmp
lcall
dec
xlat
jp
xchg
fidivrs
pusha
das
ljmp
rclb
jl
das
f2xm1
imul
xchg
adc
dec
xor
mov
jnp
test
pushf
xor
sub
movsb
xchg
add
cmp
sub
xchg
imul
mov
nop
je
mov
pop
pop
movl
out
xchg
in
les
mov
out
call
sbb
idivb
or
dec
jge
fsubr
ret
call
mov
ret
add
fdivl
xchg
add
pop
mov
je
flds
es
dec
icebp
adc
ds
addr16
push
pop
push
push
mov
cs
push
inc
and
mov
xor
pop
mov
xor
add
ret
mov
xchg
ret
mov
or
sub
lret
or
int
out
adc
pop
fisubl
sbbb
repnz
xchg
lock
ror
int
and
sbb
push
sub
xchg
and
std
mov
cld
frstor
jns
inc
add
sub
aad
in
cs
xchg
inc
and
movsl
jns
jmp
inc
pop
pop
push
fdivs
inc
aas
out
adc
lods
jbe
mov
movd
ficomps
and
mov
jae
mov
and
sbb
push
test
mov
scas
repnz
gs
fstps
xchg
fldl
fsubs
adc
adc
cwtl
mov
add
roll
and
test
xchg
popa
dec
or
xchg
roll
lds
out
xchg
jp
push
sbb
push
jb
in
ret
dec
mov
xor
mov
lret
out
setns
add
pop
mov
jbe
lea
or
jg
icebp
inc
out
movsb
aaa
into
jns
adc
iret
xlat
pop
jne
lret
fldt
xor
inc
xchg
mov
shlb
cwtl
pop
jns
cmp
xchg
cmpl
adc
cmp
fidivrl
scas
sbb
mov
and
lock
add
mov
shll
pushf
sub
scas
inc
mov
pop
inc
sti
iret
stc
mov
daa
ljmp
cwtl
xchg
adc
cld
inc
sub
inc
in
sbb
dec
loopne
pop
mov
push
hlt
frstor
dec
in
sub
jo
aad
iret
xor
dec
pop
inc
cwtl
clc
cmpsl
inc
xchg
dec
push
jge
mov
mov
into
andl
ljmp
jns
ljmp
jbe
push
mov
inc
sbb
mov
push
insb
dec
pop
mov
xor
mov
int3
test
and
cwtl
adc
into
and
dec
cs
dec
hlt
cmp
test
in
pop
push
bound
arpl
fcmove
or
push
and
sbb
push
dec
jns
cwtl
aad
add
mov
push
fs
subl
cli
lock
jno
cmp
pop
lcall
xchg
aad
inc
mov
mov
cltd
mov
out
aaa
lea
pop
lods
sub
dec
push
lds
movsl
cmp
sbbl
dec
sbb
lahf
sbb
sub
inc
into
fsubl
in
push
out
jecxz
movb
std
enter
std
test
clc
cmp
mov
iret
xor
sbb
sub
out
daa
call
mov
inc
jbe
notb
sub
data16
and
jmp
movsl
sahf
in
or
adc
dec
call
movsl
sub
or
mov
cmpsl
mov
lods
lea
xor
mov
int
dec
inc
int
ss
in
sub
add
cmp
out
lods
pushf
inc
iret
fadds
not
jg
mov
jns
xchg
gs
int3
pop
xchg
enter
cmp
sub
inc
mov
add
inc
dec
add
cmp
xor
repnz
mov
into
mov
inc
js
dec
dec
js
fs
pop
imul
insl
inc
or
test
xchg
push
mov
aas
mov
scas
or
or
popf
int
add
adc
or
pop
cmpsl
sub
fs
aas
test
mov
loopne
fsubs
sbb
dec
rcrl
mov
pusha
or
or
bound
pop
test
adcb
sahf
add
sbb
jecxz
adc
cmpl
dec
stos
popa
add
sub
scas
pop
out
cltd
icebp
cmp
mov
movsl
or
test
or
pop
adc
movsb
shlb
and
ficomps
cs
inc
pop
xchg
pop
in
xor
test
jo
test
or
rcl
fwait
sbb
push
das
inc
in
loopne
inc
jle
jbe
out
cmp
add
fs
imul
aad
cmc
ja
clc
sahf
lahf
cs
adc
and
lret
addr16
xorb
arpl
nop
insl
cltd
inc
test
sar
cmp
ja
lahf
dec
sbb
imul
stos
es
scas
mov
mov
inc
lcall
jl
jns
inc
cmp
shrl
mov
arpl
dec
outsb
call
mov
add
stc
neg
cmp
incb
pushf
mov
cwtl
dec
sub
adc
lret
and
mov
mov
xchg
repz
push
lret
repnz
xor
enter
mulb
loopne
idivl
xlat
cmp
push
outsb
jno
test
mov
xor
mov
and
pop
adcb
mov
stc
clc
out
push
mov
push
jns
insl
aaa
push
cmp
sub
jo
and
jbe
je
xchg
adc
push
and
out
fdivs
stos
enter
xlat
dec
sti
insb
sbb
cmpsl
xor
adc
inc
mov
lret
inc
loopne
jae
arpl
sti
lcall
adc
ss
lods
sbb
dec
push
pop
mov
ljmp
mov
or
pop
outsb
enter
aam
mov
and
mov
test
daa
jb
movsl
cmp
adc
push
mov
push
test
mov
rorb
orl
sbb
mov
iret
pop
ljmp
sbb
xor
loop
stos
sbb
shlb
or
shll
leave
xor
pop
dec
mov
insl
insb
adc
push
aam
sub
sub
int3
cmp
les
push
xlat
adc
aam
test
fwait
inc
lahf
sbbb
pop
mov
lcall
out
xor
lret
cmovle
sub
adc
mov
js
push
push
xchg
cltd
pop
insb
jnp
pop
lret
and
dec
outsl
pop
aam
jbe
pop
inc
xor
push
add
lcall
sar
in
jle
cmp
dec
inc
xor
cmpb
ljmp
sahf
and
mov
xorb
xor
add
mov
jl
inc
out
add
push
mov
mov
iret
cmp
pop
sbb
into
xchg
xchg
inc
xchg
jae
sub
das
nop
or
sti
mov
push
xchg
xor
popl
rcr
push
push
int
inc
lahf
or
insb
idivl
or
xlat
mov
js
pop
mov
cli
sub
and
inc
pop
adc
pop
loope
in
mov
adc
xchg
xchg
pushf
mov
inc
int
jo
mov
popa
nop
and
or
scas
outsl
in
pusha
rclb
push
insb
push
adc
mov
loope
loope
das
stc
sarb
clc
push
dec
and
jb
or
mov
testb
and
xchg
in
xchg
loop
cmp
mov
cmp
cltd
xchg
out
fs
pop
xchg
add
push
sbb
sub
add
das
push
cmp
cmp
inc
imul
mov
adc
nop
mov
sbb
shlb
rep
push
mov
clc
call
cmp
js
fcmovbe
loope
mov
test
fisttps
inc
mov
ret
fwait
test
dec
mov
mov
sbb
test
ds
movsb
push
xchg
daa
sbb
push
adc
outsb
outsl
adc
test
ljmp
or
lods
aas
stos
xchg
jns
mov
and
xchg
xchg
mov
or
leave
mov
scas
xchg
push
outsb
pop
aaa
dec
mov
mov
xchg
aad
fsubp
sbb
add
aas
jg
fdivr
lea
mov
data16
add
xor
inc
pusha
jle
inc
xchg
ficompl
push
or
xchg
sub
in
test
fsub
test
jge
and
adc
repz
clc
push
jecxz
je
inc
jns
pop
cld
and
cmp
cmp
fsub
das
pop
cmp
mov
mov
popa
dec
popf
iret
sarl
jns
mov
das
scas
imul
pop
xchg
pop
nop
push
and
xchg
jbe
pop
stos
sti
imul
xchg
nop
std
movsl
rcr
lods
pop
inc
aaa
add
movsb
mov
and
loopne
sub
cmpsb
and
popa
out
and
and
pop
aaa
xor
push
adc
mov
jmp
sbbl
hlt
js
fcomps
dec
pop
aas
push
xor
jb
in
add
xor
scas
in
jbe
in
leave
mov
fildll
mov
and
call
jns
inc
cmp
adc
sbb
push
leave
sub
xor
xchg
xchg
shll
orb
or
lret
adc
stc
lods
jne
loope
or
cmp
scas
xor
das
data16
mov
stc
aam
mov
mov
jne
fstp
pop
shlb
sbb
icebp
jb
icebp
mov
mov
stc
pushf
jg
dec
jae
xchg
mov
lods
movsl
xor
rcr
rorl
sbb
or
xchg
dec
into
and
cmp
mov
insb
push
icebp
mov
ror
dec
mov
lret
add
add
mov
mov
into
cmpsl
dec
movsl
sbb
repz
cwtl
mov
inc
mov
xor
xchg
scas
int
and
push
movhps
outsl
pop
jecxz
xchg
cmp
lods
adc
scas
cwtl
dec
adc
je
rol
adc
sbb
add
arpl
and
dec
fistps
js
loop
loope
jns
outsb
mov
mov
loope,pn
out
pop
dec
sbb
hlt
xlat
jl
dec
mov
jmp
pop
inc
sbb
push
sbb
add
and
lcall
push
push
cmp
push
lds
in
movsb
aam
mov
adcb
pop
dec
ss
ffreep
sub
fisubrs
imul
lods
and
fwait
sti
push
adc
arpl
rol
sti
cld
mov
mov
shlb
scas
cmp
imul
test
imul
out
bound
loopne
aad
dec
inc
mov
dec
xchg
mov
popa
enter
es
bndldx
pushf
xchg
and
jecxz
and
das
js
aam
test
push
aas
or
jl
pop
pop
lcall
pusha
imul
fbstp
mov
daa
sub
enter
mov
mov
jo
mov
fsubl
loop
push
sbb
les
jb,pn
ja
or
mov
sbbb
xor
icebp
mov
pop
cmp
mov
push
mov
xor
pop
mov
push
mov
mov
mov
pop
cli
int3
inc
or
dec
mov
xchg
ret
repz
insb
xor
cli
out
pop
rolb
push
imul
lret
push
xor
stos
fs
out
jne
xchg
add
pop
cmc
xor
xorl
cmpsl
mov
into
mov
loopne
push
push
mov
add
add
lods
std
int3
or
push
cmpsl
and
ret
popa
stos
ss
xchg
and
pop
pop
ret
repz
loope
xchg
mov
cmp
orb
fsub
add
maskmovq
testl
iret
mov
scas
pop
out
sub
mov
adcb
ljmp
stos
jge
in
cmp
es
adc
push
loope
insb
lahf
mull
adc
ds
pcmpeqd
xor
push
jle
and
adc
fcmovnb
in
jle
mov
pop
ret
cli
cltd
inc
dec
fbstp
xchg
add
jbe
inc
sbb
hlt
push
scas
insb
test
sub
jp
out
mov
sbb
iret
dec
std
insl
pop
jno
movsb
daa
mov
mov
aad
or
jp
sbb
movsl
push
rcll
jp
pop
mov
mov
xor
and
mov
inc
hlt
int3
fmuls
ret
xchg
xchg
inc
mov
sbb
sbb
dec
cltd
xchg
mov
pop
rcrl
imul
xor
xlat
xor
sahf
mov
cmp
xchg
adc
lods
and
cs
lret
cmp
xor
pop
pushf
adc
xchg
inc
lahf
inc
xor
aad
push
sub
int
je
mov
inc
xor
adc
out
es
pop
ljmp
lods
call
inc
jb
pop
cwtl
lret
test
jmp
dec
xorb
mov
push
xchg
outsb
repz
in
xchg
orl
mov
int
and
pop
add
mov
in
ret
sub
pop
and
pop
imul
dec
shll
push
ja
adc
or
scas
jmp
adc
lock
in
xor
sub
xor
les
jae
das
int3
incl
pop
and
sbbl
fadds
int3
lock
jb
mov
notl
aad
or
sbb
or
test
add
lock
mov
cld
sbb
xchg
insl
fimuls
or
in
ret
pop
pop
adc
xchg
xor
fs
jecxz
mov
xor
daa
shlb
and
and
mov
xor
out
mov
sti
ja
cmp
sbb
sahf
mov
cwtl
and
sbbb
cmp
paddsb
call
outsb
aad
leave
aaa
cld
shll
mov
jle
cli
jl
loope
aad
xor
cmp
jmp
imul
out
js
clc
or
cmc
fwait
aad
cmp
fstp
pop
sub
nop
stos
or
test
mov
push
or
stos
inc
xlat
mov
fwait
xchg
or
xor
jp
mov
jo
ss
dec
cmp
jae
stc
cmp
jl
push
push
ret
stc
ds
push
cs
movsb
fldl
push
rorb
lds
cwtl
cltd
push
add
inc
and
loop
and
add
decl
clc
subb
orl
aaa
repnz
iret
in
loopne
inc
cmpsb
loop
mov
pop
mov
xchg
adc
addr16
adc
mov
jmp
and
add
je
enter
div
faddp
je
mov
dec
mov
sbb
lahf
mov
negl
insl
cmpsl
imul
and
and
fnstcw
fstpt
push
lea
push
xchg
je
stos
arpl
cbtw
or
lock
jle
jl
mov
xchg
push
sbbb
mov
adc
cwtl
inc
rcll
cmc
pop
outsl
sub
lock
jecxz
mov
out
mov
frstor
jmp
mov
mul
lret
mov
stc
test
cmc
lods
mov
outsb
jle
pop
dec
pop
mov
mov
or
mov
jbe
sub
push
mov
movsb
and
push
clc
loope
or
imul
test
adc
dec
jns
hlt
je
shrl
push
fldt
scas
dec
popf
fsubrp
loope
pop
lds
mov
inc
int
pop
or
mov
xor
data16
sub
mov
andb
push
ljmp
mov
and
ja
subl
mov
jno
sbb
inc
ja
movl
rclb
inc
push
xchg
jl
imul
pushf
inc
faddl
das
inc
sub
jnp
mov
adc
push
bound
inc
nop
jno
out
lret
dec
xor
adc
xchg
stos
loopne
loope
push
fisubrs
lahf
push
dec
cld
jno
jmp
push
mov
aam
mov
xchg
sub
stos
fwait
cld
xchg
jl
dec
dec
add
pop
mov
in
clts
cmp
xlat
leave
and
xor
sbb
jmp
bound
adc
push
push
sbb
int
test
std
dec
hlt
xlat
xchg
scas
jmp
hlt
into
ljmp
hlt
jmp
adc
mov
movsb
pop
mov
xchg
inc
jo
in
dec
lcall
cmp
push
imul
jg
xor
xchg
cmp
xchg
pop
sub
fisttpl
mov
and
xchg
mov
xchg
xlat
jg
mov
adc
iret
inc
mov
inc
jge
mov
shl
leave
daa
sti
out
ds
orl
xchg
push
out
xchg
mov
leave
mov
arpl
mov
cmp
push
xlat
les
sahf
pop
int
and
mov
das
inc
movsb
pop
mov
jae
xor
cmp
rcr
pop
cmc
xor
cmp
add
or
push
loop
cmc
outsl
icebp
aad
mov
sbb
inc
or
mov
rclb
imul
nop
cli
loop
jae
lret
shlb
push
jns
jle
xor
and
jge
dec
cmp
jnp
jo
bound
fwait
mov
nop
roll
es
das
fidivl
mov
jmp
out
mov
jp
shll
je
cmpsb
jge
idivl
xlat
int3
cmpsl
jne
ret
inc
pop
in
sub
lea
dec
rol
mov
shlb
movb
cmpsl
rolb
aas
shlb
pop
sub
pop
mov
lock
nop
dec
sub
or
in
loope
mov
lods
pop
cltd
cld
int3
cmp
pop
rcll
mov
xchg
xor
imull
in
and
xchg
faddl
pushf
xchg
cmpsb
les
jge
push
rclb
adc
pop
lret
sbb
xchg
jb
or
dec
les
jmp
xchg
xor
or
push
jg
sbb
cmpsl
mov
jae
pusha
insl
push
mov
fnstcw
movsl
cmp
das
enter
dec
cmp
jmp
inc
test
decb
inc
pop
add
inc
subb
insb
jb
lahf
xchg
mov
xor
push
jle
push
into
ja
loop
addr16
jge
fistps
nop
xchg
cltd
ja
jno
mov
aas
jl
dec
out
inc
std
fcomi
movsl
xchg
loopne
nop
inc
test
mov
pusha
adc
repz
xor
pop
jmp
stc
shlb
movsb
imul
lods
outsb
ljmp
or
lods
rcll
xchg
lret
cmp
xor
and
das
mov
jno
bound
push
xchg
xor
sbb
add
inc
orb
xchg
xor
lahf
orl
sub
jb
xchg
jbe
xchg
and
and
dec
outsl
jnp
lods
sbb
test
jg
pop
leave
pop
fistl
xchg
popa
mov
lods
nop
inc
insl
adc
sbbl
or
out
filds
cmpb
scas
lock
jnp
lret
popf
clc
daa
sahf
shlb
adc
add
pop
imul
xor
push
repz
out
lods
xlat
pop
inc
in
mov
into
mov
inc
xchg
in
insl
cmpsl
jp
xchg
push
cld
sub
int
rcrl
movsb
jmp
cltd
popa
xchg
int
cmpsb
inc
cmc
and
das
mov
jnp
sbb
mov
test
in
dec
cltd
mov
sbb
and
sbb
das
bound
jne
dec
push
sbb
jg
cltd
push
cmc
add
lret
loope
or
mov
push
fildl
mov
test
bnd
and
mov
inc
fmul
imul
out
fiaddl
xchg
xchg
testb
les
lods
and
xor
xchg
cmpsb
andb
mov
and
popf
mov
inc
stos
add
inc
rolb
mov
xchg
jmp
int3
test
lret
movsb
cltd
mov
iret
mov
pop
or
mov
sbb
pop
cmp
add
cmc
sti
inc
dec
jge
mov
repz
clc
shl
int
inc
mov
mov
pop
sub
cmp
aad
stc
jno
pop
mov
in
repz
and
es
adc
or
fnstsw
je
fwait
xchg
push
jne
fcoml
add
shr
test
rorl
mov
sbb
sbb
dec
in
jge
lock
inc
test
pusha
sbb
loop
shrb
popf
pop
outsl
jbe
orb
jp
and
ss
ss
clc
lock
rol
add
lods
pop
push
leave
xchg
out
jae
int3
xchg
test
push
inc
adc
insl
xor
mov
nop
mov
mov
sub
add
inc
roll
mov
adc
lcall
add
cld
test
addr16
xor
into
pusha
shll
test
inc
mov
fwait
popa
rcrb
push
push
lods
push
jge
pusha
inc
dec
push
jmp
fisttpll
sub
and
sbb
pushf
loop
pop
icebp
sub
leave
fwait
jecxz
lock
add
jge
xor
hlt
in
cs
cmpsb
jl
test
sub
gs
dec
add
inc
or
jecxz
and
clc
daa
loopne
test
jp
jnp
jmp
int
js
add
jno
fisttpl
inc
lods
jae
add
ds
dec
ljmpw
scas
test
scas
imul
sbb
add
sub
mov
mov
test
popf
fwait
pop
ja
xorl
or
popa
pop
cmp
push
jg
jmp
pop
or
sarl
xchg
out
mov
pop
lahf
sub
int
adc
insb
mov
dec
loope
push
add
sti
fwait
sbb
nop
loop
add
adc
outsb
mov
pop
gs
dec
and
mov
xchg
mov
jmp
jne
outsb
jmp
xchg
mov
inc
push
fbstp
scas
filds
mov
data16
xor
insl
nop
mov
sub
pop
loopne
popl
repz
cmp
xchg
jge
mov
icebp
cmpb
sub
xchg
mov
jne
fstps
shll
fistl
loope
jbe
dec
inc
out
je
repz
out
push
and
jle
jno
jb
xchg
sbb
jmp
repz
xchg
in
push
mov
adc
pop
lods
jp
mov
push
jnp
mov
pop
sbb
jb
mov
fildl
into
jmp
punpckhdq
lods
enter
fwait
mov
ret
push
enter
cmp
or
test
pusha
mov
dec
andb
out
push
sub
jnp
enter
subl
sahf
xlat
loop
pop
inc
in
gs
lret
push
rcr
or
jl
xchg
ret
sahf
sbb
insl
or
pusha
loope
pop
cmp
push
bound
adc
mov
fnstsw
xchg
cmp
ja
shl
lret
mov
mov
lods
and
mov
bound
fs
lods
xor
mov
cld
mov
pop
rcl
iret
pop
aad
fwait
shlb
repnz
sti
ret
fwait
mov
jnp
adc
ja
shlb
sbb
mov
lahf
push
mov
add
push
or
imul
xchg
sbb
inc
or
dec
rcll
pop
or
mov
fdivl
and
and
mov
insb
adc
dec
xchg
sbb
add
ss
inc
insl
adc
ret
loopne
or
inc
jge
pop
nop
push
inc
fnsave
jecxz
pop
mov
test
mov
out
xorb
icebp
cmpsb
clc
ljmp
add
sub
and
std
pop
cwtl
pop
adc
or
in
sub
in
cmp
cmp
das
sti
data16
push
rorb
dec
lock
lods
cmp
movsl
js
test
mov
arpl
rcl
aaa
mov
jno
in
and
aad
jb
add
lahf
popf
jmp
adc
imul
sbb
and
andb
cli
pop
fcompl
bound
mov
pop
and
popf
sub
sub
xchg
or
xor
addr16
movb
mov
ds
add
xchg
adc
xchg
sbb
dec
clc
lahf
inc
cltd
adc
in
pushf
and
mov
nop
mov
jecxz
pop
out
outsb
jle
enter
inc
loopne
xor
adc
es
jmp
cltd
mov
mov
sbb
dec
lods
stos
xchg
icebp
mov
xchg
ljmp
pop
xlat
das
out
inc
arpl
sub
xor
movl
xor
and
int3
int
fnsave
int
xlat
sbb
iret
daa
in
loope
xchg
int3
ss
dec
sti
jmp
mov
mov
push
xchg
cmpsl
in
mov
pop
std
pop
and
out
es
jb
add
lret
xchg
dec
sub
mov
pop
mov
in
js
or
retw
pop
fsubr
dec
push
push
movsb
adc
outsl
mov
sub
dec
push
sub
movsb
xor
xchg
sub
jo
push
mov
int
into
sub
adc
xor
adc
sub
push
sub
outsl
lods
add
mov
gs
xchg
cmpsb
out
sldt
dec
test
pushf
sbb
addr16
test
push
fs
test
push
xorb
loope
icebp
sahf
repz
jg
inc
xlat
xchg
mov
inc
sahf
inc
push
xchg
ret
push
loope
ret
sub
inc
jge
ljmp
insl
xchg
and
mov
outsb
shrl
sub
movsb
bound
inc
and
pop
loopne
dec
push
nop
mov
fs
mov
mov
andl
or
aam
cmpb
mov
jmp
ja
fsubrs
test
aaa
arpl
pusha
and
rcr
aad
xor
pop
or
lods
in
cmp
sub
xchg
xor
and
ss
xchg
mov
jae
pop
int3
imul
cmp
push
or
add
ret
pop
lahf
pop
jbe
pushf
cwtl
dec
mov
fwait
cmpsb
test
lds
mov
and
dec
pushf
aas
loop
subb
cmp
xor
or
pop
or
sbb
js
add
pop
je
dec
icebp
cmc
add
insb
or
faddp
or
sbb
xchg
or
adc
mov
lret
mov
xchg
lcall
mov
lea
fnstenv
inc
repz
jno
mov
and
push
enter
or
xor
dec
push
xor
xlat
shlb
lcall
rcrb
out
dec
and
les
push
ja
insl
mov
mov
add
test
in
mov
lea
or
cmpsb
xchg
mov
mov
push
js
adc
jg
enter
je
psubw
xor
pop
int3
xor
in
aaa
shrb
jg
ret
movsb
sbb
push
and
add
stos
xor
sub
push
push
inc
cmp
add
stc
xchg
jge
push
push
xchg
sbb
enter
cmp
ljmp
ljmp
sub
repz
xchg
out
pop
cltd
divb
adc
fdivs
cmp
js
les
das
in
mov
movsb
cwtl
cmc
clc
and
lret
adc
lods
or
mov
jge
out
fs
xchg
xchg
stc
inc
sub
test
ljmp
les
cltd
out
lahf
fdivs
pusha
add
mov
cltd
stos
loope
inc
hlt
cmp
or
leave
mov
scas
sub
mov
scas
adc
aad
xchg
les
scas
dec
vorpd
out
cmp
lods
add
aaa
mov
out
cld
jge
push
addb
pop
xchg
pop
or
mov
fdivrp
cmp
jae
push
dec
cmp
jo
ret
mov
pop
test
mov
mov
push
sbb
sti
stos
pop
and
or
xor
movsl
jo
pop
xor
push
int3
xchg
add
push
cmp
adc
std
adc
stos
arpl
icebp
jns
jno
hlt
pop
dec
cmpsl
adc
adc
sarl
fucomi
repnz
jnp
hlt
loop
stos
enter
stos
xor
fs
xlat
fiaddl
adcl
je
push
and
mov
xor
test
push
and
pop
push
xor
arpl
ljmp
mov
imul
std
fs
mov
jns
icebp
adc
leave
mov
bound
inc
pop
push
jmp
xchg
and
dec
out
loop
mov
ljmp
jbe
inc
push
ficompl
int3
pop
das
mov
xchg
push
adc
jecxz
jne
jl
adc
cmc
in
ret
hlt
xor
data16
xor
mov
jb
sbb
loop
mov
dec
pop
int
xchg
pop
addb
sub
shll
xchg
jp
pop
mov
fwait
adc
mov
neg
dec
add
push
mov
dec
xchg
dec
mov
jbe
add
push
imul
xchg
jmp
xor
dec
pop
lahf
ffreep
mov
adc
inc
add
xchg
jb
inc
test
dec
shr
dec
leave
xchg
cmovo
adc
das
mov
imul
mov
loopne
out
push
sub
xchg
repnz
push
out
movsl
pop
inc
inc
out
out
pop
cli
jbe
mov
inc
cmp
sahf
push
aas
mov
jg
cwtl
ja
cmpsl
popa
pop
mov
aas
jne
hlt
sahf
mov
mov
pop
xchg
loope
lods
lods
adc
out
test
je
push
jns
push
dec
subl
fstpl
cltd
pusha
push
lret
lock
out
dec
jecxz
rclb
mov
push
scas
xchg
test
sub
cmp
pop
icebp
add
xchg
cmp
jl
xchg
or
rcl
mov
adc
ljmp
or
mov
push
jnp
cmp
movsb
lods
mov
mov
push
jne
stos
jmp
int
das
add
xor
adcl
push
cmpsl
pop
aam
cmpsb
dec
xorb
sub
xor
pop
dec
cld
outsb
xchg
and
repz
pushf
add
inc
dec
repz
jbe
imul
cmpsl
aas
shll
sbb
lret
fucomp
in
sub
push
idivl
stc
fnsave
jl
xchg
sbb
inc
mov
push
jge
sub
xchg
cmp
js
push
push
mov
insl
mov
int
push
clc
dec
sub
ja
dec
jnp
imul
lahf
jns
in
jb
mov
int3
xor
fs
cmp
jns
jle
xor
cmpsb
hlt
xor
pop
xor
pusha
pop
cmp
aaa
inc
pusha
xchg
cmpsb
and
lcall
mov
or
dec
xchg
aaa
jg
sub
dec
lret
jo
into
inc
mov
xchg
dec
sub
mov
popa
sbb
and
jnp
cld
icebp
mov
push
jae
rclb
and
add
and
dec
mull
stos
mov
or
inc
inc
jb
stos
adc
cli
sbb
lahf
ljmp
push
arpl
mov
bound
hlt
push
xchg
pop
push
lds
dec
filds
ljmp
or
cmpsl
and
mov
andl
lret
ret
or
std
mov
fwait
stc
add
insl
sbb
adc
cmc
add
stc
dec
lret
push
pop
jnp
imul
repz
pop
mov
in
or
cmc
pop
lods
insl
pop
dec
jnp
xor
shl
stos
iret
adc
sub
lods
lea
fisubrl
loop
pop
xlat
sarb
insb
mov
in
jae
icebp
push
cld
out
adc
mov
jl
mov
sbb
sbb
xchg
cmp
sarb
jnp
daa
sub
in
cmp
fisubs
jo
stos
scas
pop
data16
push
psubq
xor
dec
xchg
mov
adc
jno
rorb
xchg
and
fistps
lock
into
jne
or
fnstcw
fists
sbb
push
bound
ret
sub
dec
push
ret
stos
mov
or
mov
mov
fistpl
pop
sbb
push
push
das
mov
stos
iret
add
dec
cld
les
sub
dec
pop
xchg
fcmove
dec
push
sbbl
adc
and
cli
jne
jmp
xor
add
and
ja
jecxz
ljmp
ret
jge
roll
xorb
pop
push
fidivl
mov
fs
mov
push
push
daa
out
pusha
pop
mov
lods
loop
mov
push
ja
push
lcall
sti
push
mov
dec
mov
je
push
mov
xchg
cmp
pop
adc
pop
push
pushf
lods
mov
lea
inc
pop
shl
xchg
jb
inc
addl
lea
pop
shl
scas
cmp
mov
cmpsl
aam
loope
xor
aad
popf
cmpsl
add
and
test
lock
mov
or
dec
dec
icebp
cltd
arpl
add
add
pop
lret
and
pop
sub
mov
xchg
add
outsb
or
jge
inc
and
xlat
mov
inc
call
movb
ret
int
pop
push
inc
rolb
hlt
frstor
stos
adc
test
jg
std
jecxz
xor
lcall
sbb
or
sarb
push
test
lahf
mov
inc
mov
test
negl
sahf
pop
push
inc
loope
add
fwait
aad
cwtl
jns
jbe
or
cld
xchg
scas
shrb
dec
mov
jmp
adc
mov
jo
lahf
jbe
fcmovnb
cmp
inc
das
mov
inc
xchg
repz
in
mov
movsb
and
scas
and
or
enter
and
dec
lcall
loopne
xor
int
cmp
ljmp
xchg
outsl
lret
jmp
rcll
push
sub
sub
inc
mov
bnd
test
arpl
adc
ljmp
pop
mov
imul
cmc
sub
jmp
jbe
mov
outsb
inc
jnp
repnz
pop
fldenv
lcall
cltd
repz
adc
js
cmp
imul
dec
xor
sub
mov
icebp
mov
loopne
data16
cmp
add
lds
add
incl
test
xchg
sub
out
jmp
loop
mov
push
clc
sbb
inc
mov
inc
mov
sbb
jae
sub
pop
xchg
enter
fwait
aas
inc
jecxz
sbb
cmpsb
test
ficomps
ds
xor
movsl
xor
cmp
inc
nop
rcrl
cmp
sub
sub
push
mov
repz
cmp
mov
test
ficoms
loop
daa
inc
aaa
adc
inc
addr16
pop
and
cld
popa
xor
add
dec
shr
jbe
loopne
fcmove
lods
add
inc
jb
jecxz
or
pop
pop
or
into
pop
add
and
andb
shlb
stc
iret
push
in
push
mov
push
mov
xor
pusha
cmp
xchg
pop
lods
cmp
mov
push
push
sub
dec
cmp
lods
out
or
andl
clc
mov
mov
sarl
gs
sub
push
hlt
pusha
adc
sarl
aad
push
movsl
sti
lahf
xor
push
pop
xchg
xor
push
pop
inc
adc
mov
popf
sub
data16
sub
sbb
sarl
push
push
or
cmp
insl
inc
repnz
jno
test
pop
mov
pushf
cs
mov
cmpb
jae
pop
stos
lods
lahf
iret
add
adc
push
adc
fcomp
mov
push
sub
push
fsubrs
mov
mov
inc
rolb
pop
orb
cwtl
pop
cmp
xchg
insl
sti
pop
fisubl
loop
cmp
xor
pop
jnp
imul
in
fstps
dec
shl
adcl
mov
pop
test
cmpb
cmp
rol
ss
mov
aaa
ss
inc
aaa
jg
rcll
push
cwtl
inc
cmpsb
popa
scas
add
fwait
mov
imul
push
cmp
xchg
mov
xor
mov
xor
insb
jb
xabort
insl
dec
jecxz
sub
ljmp
lret
bound
fs
push
loop
test
jns
mov
xchg
fwait
push
loopne
mov
push
mov
cmc
adc
jmp
or
cmp
push
mov
mov
adc
fisttpll
lahf
or
inc
cmc
outsb
pop
push
shrl
dec
xor
pushf
inc
popa
in
je
daa
add
mov
push
sbb
lock
ret
test
mov
iret
neg
dec
sbb
xchg
mov
xchg
and
rcll
mov
xchg
xor
mov
leave
mov
push
sarl
jge
or
frstor
insl
jnp
cwtl
or
nop
mov
arpl
adcl
xchg
cwtl
test
sub
mov
fnstenv
dec
xor
mov
popa
fwait
inc
dec
xchg
shll
pop
and
push
sbb
or
adc
cmp
pop
mov
push
ss
test
push
mov
inc
mov
xor
aaa
adc
jnp
push
add
arpl
int
das
inc
or
bound
xchg
and
insl
jp
cmp
sti
outsb
xchg
mov
std
add
jbe
fldl
aam
push
lahf
scas
lods
dec
cmp
mov
sarl
jp
pusha
mov
dec
insb
ds
cmpsl
popw
ljmp
orl
leave
in
mov
xor
xchg
je
arpl
and
mov
bound
inc
sarl
inc
push
and
cmpsl
mov
pop
arpl
push
mov
cli
lcall
cmp
fidivrs
repnz
jmp
cmp
sti
push
adc
shl
jae
aaa
or
mov
mov
ss
pop
pushf
cs
cwtl
xor
out
jl
pop
imul
movsb
clc
in
icebp
adc
orl
orb
cld
xlat
jecxz
in
lock
dec
xchg
sub
arpl
mov
mov
lds
xlat
aam
test
pusha
cmp
sti
bound
jmp
xor
dec
fiadds
test
dec
addl
push
and
aaa
repz
jno
xchg
xchg
in
push
push
or
in
pop
mov
lods
and
mov
mov
and
mov
adc
and
inc
adc
ds
xor
nop
cmp
popa
lods
loopne
mov
mov
jnp
xchg
inc
clc
push
aad
fwait
pop
out
xchg
mov
dec
cmc
dec
arpl
xchg
sbb
pop
aaa
repnz
push
and
das
cmp
bound
cmp
scas
ja
int
dec
fisttpl
pop
leave
and
divb
adc
xor
arpl
cmp
out
mov
add
mov
xorl
mov
mov
lahf
xor
test
outsl
cli
dec
test
ljmp
icebp
lds
std
pop
sub
popf
push
aad
sub
out
mov
mov
out
adc
test
mov
adc
inc
dec
test
leave
pop
sbb
ljmp
sbb
jnp
jle
fs
mov
leave
sarb
push
movsl
and
cld
xchg
arpl
add
jmp
xchg
test
xchg
adc
testl
mov
pop
xchg
mov
mov
push
pop
les
adc
ja
dec
repz
ss
mov
or
push
add
push
scas
decb
push
cmpb
xor
jno
dec
cmpsb
jae
lret
pop
ja
js
adc
xchg
xchg
xor
ficoml
popa
pop
push
js
imul
pop
mov
shll
push
shll
xchg
inc
aam
fwait
test
lahf
cmpsl
mov
inc
pop
and
jne
mov
push
dec
mov
mov
sub
movsb
and
test
je
cmp
mov
xchg
push
dec
add
movsb
ror
pop
int
jae
and
jo
cs
rorb
jno
add
fwait
aas
aam
lahf
ss
fwait
int
push
and
insl
testb
test
fildl
push
mov
pop
std
mov
pushfw
jg
jp
jo
cwtl
and
repnz
hlt
fstp
mov
sarl
add
popa
pop
divps
loopne
fistl
dec
push
push
arpl
stos
adc
push
repz
inc
mov
clc
or
dec
and
mov
pop
sbb
push
stos
das
int
mov
idiv
icebp
pop
push
mov
in
push
sub
xchg
je
mov
les
stos
inc
mov
sbb
repz
cmc
push
push
in
lods
mov
andb
cli
mov
out
aas
xchg
xchg
inc
push
rclb
stos
pop
and
out
shl
cmp
cmp
loope
outsl
push
push
cmp
data16
or
sub
clc
arpl
mov
or
xor
imul
mov
mov
xchg
out
mov
inc
jecxz
lret
and
mov
dec
mov
jb
out
lret
xchg
mov
popa
jnp
dec
mov
in
dec
sub
mov
loopne
mov
test
pusha
scas
fisttpl
dec
push
adc
jmp
hlt
sbb
mov
cli
pop
mov
imul
xor
and
int3
or
int3
push
xchg
shll
lret
xchg
sahf
enter
inc
nop
cmp
sbb
jo
mov
adc
fidivs
jnp
pushf
mov
sub
jno
push
sbb
jmp
push
ds
xchg
inc
subl
cmp
xchg
xchg
sub
xchg
adc
sub
lcall
popa
add
mov
shr
mov
fwait
pop
arpl
jle
mov
ficomps
into
add
popl
and
cs
add
sub
test
xchg
daa
stos
outsl
inc
jnp
scas
push
inc
and
or
or
mov
call
push
orb
push
mov
pop
lcall
out
fisttpl
test
jnp
je
sbb
es
mov
icebp
jge
push
add
jmp
pop
sbb
daa
cmpsl
fstps
cmp
sbb
shrl
rolb
mov
xchg
sub
daa
cmpsb
xchg
mov
sub
xlat
bound
jno
push
fisubrs
js
pop
aaa
shr
cmp
add
lock
xchg
and
aaa
push
jnp
rorb
jecxz
rclb
in
sub
enter
lock
clc
iret
icebp
sbb
xchg
aas
pop
pop
lret
inc
mov
xor
xor
add
scas
shll
mov
cmp
pop
enter
mov
push
int
jecxz
sbb
or
mov
xchg
rcrl
mov
adc
push
ja
adc
lahf
gs
push
hlt
xchg
fcoml
mov
push
cvtdq2ps
loopne
aad
lods
adc
push
adc
xchg
loope
cmpsb
dec
fsubrl
in
out
jecxz
cmp
xchg
mov
add
cmp
mov
or
mov
mov
ret
and
sarb
jno
pop
jmp
xchg
arpl
je
mov
mov
dec
jmp
add
inc
jno
sbb
icebp
push
mov
inc
pop
add
ds
cmp
pusha
mov
shll
xor
jnp
xchg
or
cmp
and
data16
in
mov
cmp
pop
pop
xorl
pop
jb
jne
cmp
xor
mov
shrl
pop
ret
sub
repnz
xchg
inc
or
inc
idivl
sub
sub
add
cld
outsl
mov
repz
and
and
cmp
cmpsb
sub
sub
sub
mov
sbb
aas
xor
jmp
in
loope
jecxz
jp
repz
and
inc
fldl
leave
not
inc
fisttpl
data16
jmp
xchg
loopne
in
xchg
push
stc
mov
sbb
outsb
pop
lahf
cltd
lahf
pop
inc
or
into
mov
dec
mov
ficoms
pop
fwait
cmp
pop
in
ret
jle
hlt
push
mov
cltd
shll
dec
xchg
adc
divl
sbb
dec
and
mov
std
dec
enter
lock
lahf
js
inc
int3
inc
mov
push
dec
add
xchg
cmp
test
enter
cmp
or
mov
xchg
fisttpl
lret
pushf
test
leave
out
fcompl
inc
and
sbb
inc
xchg
pop
mov
lcall
pushw
pushaw
out
daa
repz
dec
add
xor
lret
and
sbb
jns
mov
movsb
ljmp
push
dec
mov
mov
test
cmp
movntq
or
xchg
sub
aaa
xchg
ds
aas
and
push
mov
loope
sub
insl
out
dec
sbb
and
mov
xchg
add
mov
add
add
sahf
jecxz
lods
scas
jg
jb
push
aaa
mov
ss
adc
imul
fwait
pop
int3
in
sbb
in
loopne
insb
mov
push
icebp
aam
sbb
mov
repz
js
add
xlat
mov
imull
inc
into
push
pop
adc
repz
call
or
push
rorb
mov
movsb
jl
push
cwtl
jg
enter
inc
jns
xor
mov
xlat
dec
adc
and
rcl
and
repnz
iret
add
xchg
add
scas
jns
xchg
or
test
sbb
adcl
das
xchg
sbb
fucomp
jp
pusha
pop
sub
das
out
repnz
jge
loopne
shlb
cmp
fwait
mov
cld
imul
loope
jae
cld
inc
jecxz
aam
jnp
push
jb
in
add
lahf
sbb
push
cmp
stos
cmp
loope
sbb
push
aas
sub
push
insl
int3
mov
ljmp
fwait
dec
loope
dec
bound
fmul
fnsave
test
jo
adc
data16
mov
call
push
or
mov
lock
mov
ds
loop
filds
test
fs
outsl
out
mov
pop
push
clc
aam
pop
mov
xor
imul
push
mov
mov
fbstp
jne
push
mov
xchg
mov
xchg
fs
int
mov
int3
mov
jmp
popf
push
mov
and
pop
mov
cltd
adcl
testl
movsl
fcom
jne
mov
fistps
adc
dec
int
mov
mov
mov
mov
push
push
in
adc
test
es
mov
aas
mov
lods
pop
rcll
daa
stc
stc
dec
outsb
ret
adc
mov
mov
std
jge
addl
ljmp
enter
jmp
jbe
leave
sub
dec
push
cmpsb
fwait
outsl
lret
ret
pop
andb
jae
mov
je
jl
xchg
leave
push
fstpl
add
mov
jmp
ss
xor
mov
enter
mov
xor
je
xchg
pop
xchg
mov
sbb
mov
cmp
push
cld
push
jge
orb
mov
xchg
aaa
stos
shll
loope
jle
xchg
in
mov
ds
fwait
push
les
adc
fimuls
into
lret
dec
aam
out
add
es
add
or
ja
push
pop
mov
xchg
dec
push
xor
cli
in
cmc
inc
rcll
add
mov
push
lcall
stos
xchg
andb
push
jge
test
sub
cwtl
xchg
je
push
xor
mov
xchg
ljmp
xchg
movsl
jg
adc
inc
dec
sub
push
sub
shll
push
leave
dec
cli
add
scas
push
lods
mov
lods
fdivrl
push
mov
js
aad
rcrb
mov
jmp
ljmp
cmovno
sti
and
push
lods
mov
shrb
lds
mov
push
mov
adc
inc
mov
sub
mov
call
fstl
lds
or
jle
mov
or
sbb
cltd
es
mov
push
aad
leave
adc
xor
add
jecxz
or
enter
in
inc
xor
push
sahf
cmp
push
or
inc
ret
mov
sti
outsb
fstl
ds
push
add
dec
aaa
cmp
dec
roll
mov
into
or
inc
movsl
pop
cmc
mov
jb
dec
add
dec
or
or
clc
sub
jmp
dec
mov
sub
mov
cmp
mov
sar
jge
sub
push
in
push
sti
mov
sub
ds
in
mov
adc
gs
out
aam
pushf
jl
xor
jnp
or
xor
out
fwait
mov
mov
sbbl
mov
jo
movsl
decl
mov
dec
fstpl
insl
or
gs
pop
sub
lods
cmpsl
out
lcall
jne
lods
xchg
dec
aas
ss
ja
repz
xor
jb
cmp
jecxz
out
ljmp
xor
cmp
scas
inc
or
jbe
dec
pop
pop
shlb
loope
dec
xor
jecxz
xchg
iret
ficoml
roll
cmp
xor
nop
xchg
inc
outsl
repnz
xchg
int
pop
xchg
xchg
push
mov
xor
push
xchg
ss
sub
and
cltd
jo
or
cmp
add
mov
xchg
mov
jge
dec
mov
ret
pop
scas
push
sub
dec
insl
decb
sahf
cmp
out
sbb
arpl
add
add
mov
out
shlb
fucomi
jno
lods
lcall
jb
hlt
aad
in
dec
addl
aam
sub
cmp
add
or
sub
mov
inc
out
into
outsl
fstl
mov
test
ret
xchg
add
jg
inc
or
jo
test
mov
jno
push
xchg
or
xchg
inc
icebp
fnstsw
dec
in
jo
ja
rcll
add
enter
dec
mov
jne
inc
int
stc
xchg
add
out
flds
imul
jp
pop
sub
sub
rolb
push
lds
mov
push
mov
leave
lcall
jb
movsb
push
insb
and
inc
push
jmp
mov
mov
testl
adc
or
and
test
xor
cltd
aam
in
sbb
popf
shrl
pop
outsl
mov
mulb
into
mov
addr16
enter
ret
pop
sbb
mov
lahf
xchg
pop
fsubrs
test
add
movsl
pop
ret
jecxz
scas
sbb
stos
and
imul
cmp
mov
orb
mov
stos
pop
pop
cmpsb
fadds
les
fisttps
mov
mov
push
sub
lods
dec
pop
aaa
out
sbb
push
dec
push
hlt
add
mov
mov
add
out
out
cmp
divb
xchg
shrl
push
inc
test
pop
push
jb
lods
call
mov
xor
jne
or
popf
in
jmp
setp
sub
das
mov
pop
fstps
lock
mov
add
mov
repnz
fisttps
js
jl
cmpsb
loope
out
mov
sub
jbe
int
adc
test
cmpsl
inc
or
pushf
push
imul
mov
add
and
daa
out
lret
scas
int3
or
sub
lea
sbb
adc
sbb
fcmovbe
cmp
pcmpeqw
cs
xchg
cmp
pop
idivl
mov
ret
cmpsb
fmull
xor
xchg
ret
pop
rcrl
fwait
or
sbb
mov
or
pop
pop
adc
mov
imul
movsl
pusha
and
insb
xor
jnp
push
push
pop
push
mov
mov
aas
fistpll
adc
or
rol
add
xchg
cmp
push
xor
outsb
adc
xchg
cmc
add
dec
fisubrl
es
dec
xlat
clc
enter
mov
mov
shll
add
push
movsl
sti
pop
into
xchg
jae
sbb
clc
push
out
push
bound
cmc
mov
or
pop
lea
and
jne
sbb
fwait
and
fstl
jecxz
out
fdivrp
jl
sbbl
loope
mov
shll
fcmovnb
adc
lea
std
sti
adc
sahf
dec
add
push
cmp
cwtl
shr
jle
and
test
out
sbb
es
xchg
mov
fmull
orl
es
inc
mov
outsl
in
inc
xchg
iret
insl
lods
sti
adcb
test
push
sbb
fmuls
add
pop
fldcw
sbb
lcall
loop
pop
mov
dec
mov
test
shlb
dec
in
jmp
aaa
imul
cmp
mov
sub
and
pop
mov
cwtl
leave
pop
or
inc
rclb
push
out
jb
and
incl
cld
jg
fimull
aad
mov
mov
imul
adc
sbb
aam
bound
xor
cli
jecxz
dec
xchg
imul
xor
outsl
cmc
dec
insb
cmp
push
xor
es
pop
sbb
dec
mov
mov
repz
into
sbb
ljmp
and
mov
pusha
insl
jbe
xor
fwait
lahf
xor
in
clc
subb
jnp
push
out
mov
mov
mov
lods
inc
cmc
mov
test
xchg
mov
add
jg
iret
jnp
aam
enter
add
enter
push
stos
mov
imul
dec
mov
jg
mov
and
mull
and
pop
pop
push
push
xchg
cmp
mov
mov
ds
mov
stos
sahf
dec
push
push
pop
sbb
cmc
ss
pop
mov
in
sbb
or
inc
clc
inc
pop
push
outsl
out
jbe
subb
stc
in
cmp
orl
jmp
inc
push
jne
jb
pop
insl
sub
pop
mov
cmp
adc
xchg
popf
sarl
stos
shl
out
pop
xlat
popf
sub
xchg
or
jb
loopne
mov
mov
mov
test
push
mov
pop
sti
dec
mov
push
fsubr
ss
loope
in
mov
mov
or
inc
cwtl
cmp
sahf
nop
add
xchg
popa
pop
popa
sbb
pop
sbb
pop
test
pop
in
ret
jmp
scas
stc
inc
mov
mov
xor
inc
adc
and
es
out
jnp
cwtl
add
outsb
push
cmp
stos
inc
insl
sbb
xlat
add
popa
inc
es
xlat
addr16
push
out
sbb
pushf
mov
test
pop
xor
or
sub
inc
sbbl
cmp
pusha
pop
mov
mov
mov
repz
mov
int
movsl
push
cltd
add
fs
jnp
inc
xchg
cli
push
sbb
das
insl
imul
pusha
js
in
lret
roll
push
leave
mov
push
cmp
cmp
push
dec
mov
jmp
xor
sbb
pop
enter
mov
mov
gs
jno
sub
rclb
mov
mov
jle
in
xor
xchg
outsb
pop
mov
sub
mov
cmpsb
and
push
call
mov
xchg
or
adc
dec
or
sahf
icebp
cmp
shlb
cmp
jg
js
sub
add
mov
mov
cmp
test
push
mov
xchg
pushf
xchg
xchg
push
out
mov
add
popa
dec
mov
xor
add
out
nop
sub
ljmp
inc
int3
cmc
xchg
fs
loope
jnp
pop
scas
mov
cmp
mov
or
sbb
dec
cli
rcrl
sub
int
mov
in
jecxz
pop
addr16
lahf
lret
mov
outsl
adc
push
inc
or
sub
bound
pop
movsb
cmpsl
inc
xor
ds
push
cld
in
pop
add
test
push
mov
cmpsl
mov
cmp
jl
xchg
shll
imul
sbb
add
mov
adc
mov
mov
scas
fidivrl
mov
cmp
aaa
cld
xchg
in
aad
lods
push
or
int3
std
fldcw
fbstp
cmpsb
sbb
xchg
pop
push
cmpsl
ja
sub
fisubrl
enter
push
jle
lea
mov
xchg
and
je
lds
and
imul
ret
jmp
ret
decb
clc
jg
cmpsb
pop
aam
andl
xor
nop
jb
pop
inc
leave
imul
aas
fimull
inc
fwait
stos
xchg
in
lea
lret
jns
stos
xchg
ljmp
rorl
pusha
inc
testb
mov
nop
inc
lcall
pushf
xor
stc
cmpsl
sub
push
mov
cmp
and
add
pop
scas
mov
or
daa
in
inc
adc
push
outsb
jmp
push
cli
aaa
mov
in
ret
push
aas
mov
pop
subl
out
dec
cli
aaa
add
lret
dec
pop
dec
lea
or
dec
fisttpll
pop
inc
mov
push
jle
or
sbb
loop
mov
rorl
fdivrs
sub
sbb
push
inc
inc
mov
dec
jecxz
fsubl
dec
push
jnp
cmp
lock
pusha
aaa
and
movsl
cld
jns
aam
xchg
mov
mov
test
cmpsb
loopne
sub
and
fcoms
cmpsl
js
mov
or
inc
lcall
int
fxch
xchg
sbb
or
enter
pop
xchg
push
jmp
in
push
sbb
test
xor
repnz
xchg
popa
jae
or
add
rclb
cltd
into
sarl
pop
test
shr
and
jne
aam
push
mov
mov
out
jns
jp
mov
inc
roll
out
mov
test
dec
mov
call
sbb
aam
jp
je
test
inc
in
test
ret
f2xm1
jl
mov
cmpsb
sub
test
cmp
cmp
add
jecxz
cwtl
mov
fs
mov
xor
mov
out
out
add
gs
flds
int
or
in
rcrb
aas
cmpsl
mov
popa
loop
les
inc
loope
cli
in
lods
jl
pop
add
hlt
in
xor
subl
es
adcl
jecxz
fs
jge
sub
notb
int
dec
mov
cli
jmp
push
nop
fstpl
lds
mov
mov
sbb
out
inc
or
sbb
enter
cmp
cmp
js
jns
push
repnz
outsl
sbb
faddl
jb
or
cwtl
or
mov
pop
sub
dec
repnz
cmpsb
push
cmc
and
ss
das
add
das
test
scas
jnp
or
mov
mov
xchg
push
xchg
jb
jns
jg
outsl
mov
hlt
testb
cmpsl
push
rorb
inc
pop
xchg
dec
pop
xchg
xor
or
adc
pop
outsb
fstps
jae
push
or
push
pop
fmul
and
jo
and
imul
mov
add
pushl
cmp
and
mov
jo
repz
xchg
lea
mov
arpl
add
inc
lock
mov
sub
fucomip
in
into
ror
dec
cmp
cmp
fistpll
mov
cld
xchg
push
or
xchg
gs
push
push
jae
lret
sahf
iret
xor
and
test
fistps
test
mov
out
pop
stc
xor
std
mov
push
in
sbb
pop
arpl
imul
xor
js
jmp
sbb
push
xchg
cmpsb
and
xor
ficoms
mov
sub
fwait
sbb
fwait
sub
sbb
xchg
mov
pop
sub
or
adc
int
cmp
mov
jp
cmp
or
loope
push
adc
mov
out
je
push
and
cmp
test
gs
rcl
mov
stos
arpl
test
pop
mov
cmpsb
or
mov
clc
dec
sbb
mov
jnp
and
dec
insl
sub
ficomps
sbb
dec
cmp
mov
jo
cmp
mov
jb
or
imul
mov
pop
dec
in
xor
jno
mov
jecxz
xor
inc
push
js
fldt
movsb
sbb
clc
mov
pop
xor
jbe
mov
xor
andl
pop
sbbl
mov
daa
inc
mov
inc
out
fidivrs
mov
pop
out
xchg
cmc
inc
add
mov
mov
jmp
adc
add
cmp
test
xchg
mov
xchg
in
fiadds
aam
sbb
icebp
shrb
adc
pusha
je
stos
mov
push
jno
adc
pop
rcl
cli
xlat
adcl
dec
sub
cmp
mov
das
adc
mov
loope
fistps
inc
pushf
mov
call
or
mov
mov
adc
cmp
imul
and
ret
pop
push
pop
lcall
call
lret
xchg
test
sub
push
arpl
cmp
lret
imul
pop
stos
ss
inc
mov
test
jno
pusha
mov
std
cwtl
cli
pop
bound
add
xor
out
xchg
out
xchg
test
imul
xor
and
repnz
mov
jns
std
mov
std
jb
fmul
loope
jbe
mov
xchg
mov
fst
mov
out
scas
or
fdivrl
mov
testl
daa
dec
lret
les
mov
mov
ret
jl
cs
fstpl
rcrl
into
pop
mull
pop
mov
test
fsubr
testl
dec
loop
jo
notb
push
addr16
bound
data16
dec
cli
insb
or
pop
addr16
jae
outsb
push
push
fmuls
fstl
jae
fidivrs
push
pusha
pop
mov
mov
jo
add
xchg
or
mov
outsb
mov
push
cmc
jne
mov
add
mov
insb
das
push
call
aaa
or
scas
movsb
pop
xor
push
and
out
loope
stc
imulb
adc
inc
arpl
jmp
xchg
sarl
sbb
outsl
mov
xor
inc
xor
mov
inc
inc
incl
leave
xchg
jne
cwtl
movsb
bound
mov
pop
out
xor
nop
jnp
scas
mov
jno
or
cwtl
push
mov
cs
daa
stos
sub
pop
mov
xchg
out
mov
stos
cs
jbe
fcos
push
rorb
jle
push
cmp
fcom
into
stos
insl
inc
inc
jne
push
call
pop
inc
mov
orl
xor
sub
pop
jb
in
pop
negl
jb
push
xchg
add
sahf
loopne
ljmp
arpl
inc
xchg
xchg
pop
cwtl
popf
dec
xchg
or
or
pop
sar
cwtl
aaa
sub
mov
bound
aad
lock
cmp
rcr
push
stc
mov
cld
sti
push
lret
aam
icebp
aad
jne
pop
in
lcall
mov
mov
andl
jmp
hlt
add
jo
sub
inc
aam
xchg
inc
mov
and
pop
mov
cmc
add
push
imul
cmpb
clc
mov
test
dec
outsl
mov
and
push
and
add
sahf
das
pop
cmp
pop
pop
repz
test
je
dec
jbe
mov
addr16
inc
cmp
pop
jne
fiadds
jnp
add
lret
add
add
pusha
rorb
test
mov
pusha
jns
fnstsw
inc
mov
rolb
lock
dec
popa
or
or
lcall
cmp
andb
dec
ds
in
add
fildl
sub
outsb
cmp
sahf
in
stos
or
clc
test
fisubrs
js
pop
imul
popf
cmp
inc
sub
shl
and
gs
or
mov
add
cli
xchg
mov
test
jecxz
or
or
cld
inc
jp
sbb
notb
adc
aam
xor
adc
loopne
push
push
mov
outsl
push
mov
jbe
jbe
xchg
jle
sub
push
stc
mov
ljmp
mov
movsl
cmp
clc
cmp
mov
stos
inc
sbb
jno
cmp
je
mov
xchg
mov
in
gs
loop
mov
mov
jle
inc
mov
push
aam
ret
add
fwait
lret
daa
mov
jo
es
xchg
mov
mov
xchg
dec
out
sarl
adc
iret
xchg
lret
fcomi
shlb
cmp
xchg
das
cmpb
subb
mov
push
das
lret
add
into
loop
xor
hlt
dec
pcmpeqw
pop
jns
cmp
push
leave
sbb
jg
in
cmpsl
out
bound
cltd
mov
dec
call
xchg
int
les
loopne
inc
ret
mov
lea
inc
mov
aas
push
mov
push
and
or
inc
cmp
in
div
lcall
shlb
push
pop
sub
outsb
in
and
cmpsb
jl
js
icebp
inc
cmp
sahf
pop
movups
std
cltd
pop
inc
xchg
imul
dec
ret
push
add
lahf
push
and
pop
sahf
ljmp
dec
xchg
pop
xor
push
in
adc
mov
arpl
jmp
mov
popa
stc
out
xchg
xor
popa
lods
mov
out
mov
pushf
mov
push
and
stos
ficoms
and
pop
and
mov
push
sub
sbb
cmpsl
popa
in
push
cmp
inc
xor
leave
push
inc
test
or
int
ljmp
pop
lods
mov
xor
lcall
out
push
mov
xchg
add
pop
dec
inc
xchg
fidivs
gs
pop
cmp
movsl
sbb
in
lret
jmp
ljmp
pop
int
mov
icebp
jp
cmovle
mov
mov
test
adc
sbb
test
pop
out
pop
adcb
push
jae
cli
bound
adc
pop
pop
lock
jl
out
mov
aad
cmp
cld
xchg
faddl
adc
icebp
pushf
fstl
xorl
and
sbb
pop
mov
cld
shrl
sahf
xor
inc
mov
jl
jg
cmp
sarl
push
sbbb
repz
in
xor
jns
sbb
pop
dec
add
aaa
sahf
pmuludq
mov
sbb
mov
pop
daa
cmc
mov
sub
or
mov
push
es
lea
inc
mov
pop
outsb
das
pop
cmc
daa
ljmp
in
mov
sub
sbb
sahf
fwait
and
mov
popa
adc
inc
mov
les
mov
and
imul
or
lret
xchg
aad
orl
andl
leave
add
dec
jne
lods
out
or
fucomp
in
fcoms
jo
push
movsl
fdivp
jne
cmp
push
dec
or
jno
mov
sub
add
and
fildll
adc
pop
push
mov
pop
bnd
out
lahf
in
das
aad
mov
pusha
mov
idivb
and
dec
popf
cs
outsw
shr
adc
ror
jbe
jae
int3
add
cld
mov
mov
imul
mov
sbb
push
xorl
jns
sbb
sub
enter
xchg
and
fisubl
std
push
fidivrs
jmp
lods
xor
add
dec
inc
and
mov
cli
adc
lods
dec
cwtl
clc
pop
add
inc
aas
rolb
mov
sahf
fisubs
dec
aas
jnp
mov
imul
mov
out
sub
adc
push
sub
xchg
rcll
daa
and
stc
ss
out
call
dec
pop
sub
loop
pop
sbb
jae
add
in
fucomp
push
inc
outsb
jg
lahf
push
int
test
mov
and
test
xchg
insl
in
or
test
pop
inc
iret
ljmp
or
lret
addr16
arpl
dec
sbb
dec
inc
pop
adc
cmp
jmp
lahf
loopne
sbb
inc
mov
push
and
mov
roll
xchg
dec
sub
jne
fldt
movsb
cmpsl
jl
loop
into
out
pop
sbb
outsl
stos
inc
lcall
in
adc
adc
sbb
in
dec
arpl
ljmp
loopne
mov
mov
adc
inc
xor
ljmp
loopne
xchg
xorb
gs
xor
mov
lods
sbb
aam
and
xchg
insl
jbe
jecxz
jb
xlat
rcrl
movb
mov
adc
paddsw
test
xlat
testl
pop
pusha
inc
mov
push
bound
push
das
cmp
movsb
xchg
jge
jmp
inc
fbstp
pop
sarl
pop
adc
cmpsl
jmp
adc
mov
mov
nop
cwtl
lods
fs
in
loope
lods
not
push
jecxz
ss
std
jmp
repz
mov
incl
add
or
xchg
not
fsubs
jbe
les
push
mov
jmp
fsts
in
push
sub
xchg
stc
adc
adc
repnz
fpatan
xchg
push
inc
and
mov
scas
cmc
add
dec
or
push
adc
push
mov
xchg
jb
clc
shrl
xchg
xor
pop
pushf
inc
in
sbbb
cmp
inc
or
leave
repz
cld
scas
arpl
xlat
nop
pop
pop
stos
add
lods
cmc
aaa
insb
inc
cmpsb
scas
into
fdivrp
inc
cmp
nop
leave
mov
repz
out
mov
inc
jnp
testb
scas
fnstsw
inc
ljmp
data16
mulb
sarl
cmp
test
pop
iret
push
mov
ja
int3
in
add
cmc
imul
jae
sar
add
nop
push
and
popf
xchg
cmp
mov
movb
mov
sbb
sahf
sub
jge
lret
push
js
ds
stos
loop
shrl
push
jmp
lret
sbb
fs
in
xchg
pusha
sbbb
roll
mov
jmp
mov
mov
es
sbb
push
add
dec
je
fs
outsb
decl
mov
adc
push
fidivrl
mov
jno
jo
rolb
pop
movsl
repnz
sub
movq
sbb
sub
mov
inc
sbb
push
cmp
adc
lret
push
push
decl
xchg
xor
cmp
hlt
aad
sbb
push
pop
icebp
dec
push
xchg
mov
push
jge
leave
dec
jl
jg
cmp
in
add
push
psubw
cld
negb
pop
adcl
das
adcb
inc
sbb
addb
nop
enter
ficoms
jle
enter
roll
lea
stos
mov
xor
inc
adc
jne
sti
cltd
jl
add
pop
pop
rolb
jbe
push
and
push
daa
xor
or
ret
push
les
rorb
inc
cli
out
push
sbb
add
test
inc
hlt
xchg
dec
mov
cmc
cld
mov
stos
mov
fadd
lcall
xlat
testb
xor
fidivrs
subb
scas
inc
adc
ja
mov
out
fs
loop
sbb
push
lcall
addr16
jecxz
mov
and
fdivr
sti
pop
lea
jge
mov
movsb
xor
clc
aas
lea
xor
add
enter
int
sti
mov
sbb
in
sbb
push
xlat
pop
shr
subb
and
xchg
xor
ja
iret
jle
xor
sub
or
rclb
push
popf
xchg
jo
mov
or
adc
data16
and
or
sub
dec
out
lock
pop
or
das
aas
js
xchg
push
addl
cmp
adc
int3
test
nop
lea
adc
cli
repnz
int3
daa
setg
xor
fsubl
sar
pop
nop
lret
pop
aam
pop
cld
icebp
lret
int3
xchg
adc
scas
enter
push
out
outsb
jle
pop
aam
xor
gs
push
mov
repnz
xchg
repz
aam
icebp
cmp
and
xchg
add
in
mov
pop
sbbl
fadd
ja
inc
inc
jecxz
ja
jg
mov
fnsave
jg
mov
mov
jle
ds
aad
adc
adc
jecxz
test
push
mov
mov
sarl
daa
insl
loop
mov
jns
in
rorb
pushf
rcrb
sub
rclb
adc
pop
push
mov
mov
fistpll
stos
add
mov
xlat
fs
inc
push
cmpsb
add
divl
movsl
cmp
fisubl
mov
mov
mov
scas
push
and
push
test
enter
outsl
mov
xchg
filds
repnz
push
jg
aad
jle
mov
xlat
movsl
clc
rolb
push
dec
ds
mov
sbb
data16
inc
pop
inc
imul
or
xlat
fcompl
xchg
push
lahf
std
jb
dec
in
test
popf
lock
movsb
jle
sbb
mov
cli
cwtl
xchg
mov
mov
outsl
adc
mov
push
mov
push
push
in
daa
clc
dec
scas
inc
or
mov
leave
int3
clc
in
imul
mov
int
mov
icebp
ds
stos
push
data16
push
xchg
cmp
jno
popl
xchg
pushf
popa
in
addr16
lret
loop
adc
mov
leave
out
ret
and
addr16
enter
enter
pop
sbb
inc
pop
jae
mov
lcall
and
lods
add
pop
mulb
clc
add
xchg
mov
mov
mov
push
or
add
cmp
push
int3
loopne
cmp
stc
lds
add
sub
ss
test
jbe
pop
pop
pop
inc
std
lods
ljmp
jae
mov
pop
adc
xchg
mov
ret
mov
xchg
pop
std
lods
out
and
jo
mov
fimuls
test
in
shll
push
mov
mov
inc
je
mov
into
loopne
push
or
adc
cmp
mov
push
pop
and
mov
push
adc
mov
pusha
inc
adc
jns
call
add
cmpsb
inc
or
addl
inc
pop
shrl
mov
or
lret
mov
sbb
push
int
fimuls
mov
xlat
test
jl
pop
xor
mov
addr16
add
sbb
jmp
xlat
xchg
testb
fisttpl
mov
mov
xchg
cwtl
lret
stos
ja
mov
dec
sahf
lret
adc
jb
mov
lcall
and
sbb
ja
mov
roll
scas
inc
jmp
jns
lock
mov
and
int3
jnp
insb
mov
test
and
mov
mov
mov
out
mov
in
aam
xchg
jae
lahf
call
aad
mov
js
popf
ja
jecxz
mov
outsl
cwtl
dec
lds
xchg
mov
inc
sar
js
int3
xorb
daa
insl
sti
or
adc
je
iret
sarb
push
mov
rcll
or
or
int
cmp
pop
xchg
out
ds
xorl
jmp
in
stos
outsl
xchg
lea
sar
clc
lcall
or
sbb
xchg
pop
hlt
sub
nop
call
js
and
insl
aam
lds
xor
mov
adc
mov
push
fnstsw
push
push
test
mov
test
in
push
lahf
insb
test
iret
jnp
xchg
in
test
lret
mov
push
sahf
js
cmpb
mov
or
push
mov
cmp
cmp
xchg
imul
out
cmpsl
sub
aaa
fs
adc
jmp
arpl
dec
arpl
mov
push
jno
lods
xchg
lea
or
mov
nop
mov
pop
cmp
lods
iret
in
xchg
mov
fnstenv
fildl
nop
cli
jp
cmp
gs
fldcw
inc
or
xchg
test
loope
xchg
mov
dec
adcb
mov
add
fs
jle
and
xor
mov
arpl
data16
sbb
mov
push
ljmp
xor
cmp
out
lret
push
xchg
and
or
testb
js
icebp
inc
xchg
mov
subl
jb
ljmp
sub
mov
and
incl
pop
cltd
lods
cmp
mov
add
lea
dec
subb
ret
mov
addr16
sahf
mov
out
lret
ljmp
scas
pop
push
dec
cmp
mov
inc
addr16
lods
test
adc
dec
repnz
add
shll
data16
sti
push
or
mov
jo
ja
sub
xchg
jecxz
scas
clc
pushf
pop
je
sarb
aas
call
fidivrl
push
mov
mov
popa
pop
lods
outsl
mov
gs
stos
ja
mov
xor
out
dec
xor
sarl
dec
sbbl
outsb
clc
mov
jl
stos
leave
imul
ja
test
addr16
int
sbb
aad
cmpsl
xchg
int3
mov
inc
sbb
fldenv
cld
add
popf
nop
xchg
jmp
sarl
add
add
stos
js
inc
aaa
mov
push
out
loope,pn
mov
pushf
scas
push
fwait
xchg
xchg
sub
mov
sub
es
add
xchg
jae
xchg
adc
lret
xchg
mov
stos
in
sub
enter
ljmp
mov
sbb
inc
adc
push
pop
arpl
popa
xor
add
add
lds
inc
popf
mov
lret
or
inc
push
sbb
mov
lcall
jle
lods
or
inc
arpl
pushf
in
stos
lea
push
sbb
sbb
not
jns
or
scas
jne
xchg
cs
addr16
test
adc
or
dec
xor
xchg
mov
or
stos
test
arpl
jg
mov
jo
inc
pop
stos
xchg
rolb
test
sbb
or
dec
or
mov
mov
inc
sarl
mov
aad
or
out
or
test
fdivr
stos
pop
data16
lods
ret
iret
mov
pushf
stos
dec
and
and
mov
dec
subl
pop
ljmp
lds
jp
xchg
lea
mov
jp
add
rolb
jecxz
push
or
sub
sub
into
mull
sub
and
push
sbb
aam
pop
pushl
mov
punpckhdq
stc
popf
sbb
sete
mov
mov
lock
push
or
repnz
push
mov
mull
dec
mov
lods
dec
dec
out
push
pop
leave
sub
sahf
aad
sub
xchg
sbb
push
frstor
ds
jns
mov
fstpl
or
iret
dec
out
aaa
mov
aam
jg
sbb
sbb
adc
push
jge
fsubrl
push
mov
mov
divl
in
inc
into
pusha
gs
lods
mov
cmp
xor
xor
fistpl
mov
push
insb
mov
je
xor
add
mov
js
cli
jg
movsl
sub
inc
mov
scas
adc
fcmovnb
xchg
imul
scas
jae
test
push
stos
ds
push
ret
jb
sbb
xorb
cmp
popa
jge
popf
popf
inc
aas
scas
cs
dec
fsubl
sbb
orb
jp
in
add
mov
repz
pushf
cs
ret
and
popl
ret
fistps
add
mov
mov
pop
xchg
sub
jb
popf
insl
stos
jecxz
inc
mov
inc
add
push
scas
js
adc
je
dec
and
lret
push
xchg
adc
popa
jmp
ffree
in
js
adc
fstpl
xchg
shl
mov
or
xor
jo
mov
ds
pop
loopne
mov
and
int
sbb
nop
popa
enter
push
adc
les
cwtl
aas
cmp
mov
sub
jge
jbe
pop
pop
outsl
fcompl
lods
out
test
xchg
jno
dec
cmp
mov
clc
pop
inc
adc
test
int
push
stc
add
pop
sar
jae
rcll
xor
sbb
sub
lods
lcall
pop
clc
int3
test
jnp
push
jae
call
popf
mov
xchg
xchg
and
lahf
jb
push
dec
or
ljmp
mov
mov
sbb
sarb
fildll
sbb
out
mov
jge
inc
push
das
scas
inc
hlt
add
sbb
sub
dec
out
inc
sarl
adc
lret
xlat
jnp
aam
ljmp
jne
pop
cmp
idivl
mov
xchg
orl
loopne
sbb
faddl
cmpb
fistps
test
testl
cmp
sub
imul
repz
repz
and
add
sbb
xor
mov
imul
mov
repz
inc
adc
adc
mov
sarl
stos
aas
enter
data16
mov
pop
pusha
xchg
ror
jno
push
mov
xchg
sub
hlt
mov
pop
push
inc
cmp
sti
clc
fcomps
xchg
out
push
lahf
cmpsl
movb
pop
and
mov
jle
sbb
negb
test
adcl
aad
dec
adc
insl
push
sbb
fimull
out
hlt
fildll
push
scas
sti
stos
push
push
dec
movsb
and
bound
xor
jno
inc
test
sbb
aam
cmp
pop
cmp
loopne
sub
jecxz
and
ret
mov
jno
rcrb
lret
sub
adc
movsb
mov
and
adc
cmp
mov
add
outsb
stos
lcall
or
cmp
jno
int
enter
ljmp
adc
enter
outsl
js
mov
mov
test
insl
add
xor
pop
sahf
cltd
pop
jecxz
pop
hlt
mov
js
sbb
int3
shll
fwait
subl
in
xchg
daa
aas
stc
ret
mov
in
les
mov
sarb
idivb
mov
leave
dec
sub
push
push
dec
fucom
std
inc
inc
jb
insl
in
cmc
ss
out
jmp
mov
or
sub
and
xchg
mov
pop
lret
xor
sbb
cmp
loop
pop
js
xor
test
movsb
movsl
arpl
ret
in
cmp
ret
lock
mov
xchg
insb
icebp
mov
push
icebp
pop
mov
outsl
cs
pop
mov
or
xor
movsl
fists
fcmovne
int3
addr16
jle
fwait
shr
jecxz
jae
mov
mov
popa
adc
dec
and
ljmp
pusha
push
sbb
shrl
xchg
adc
loopne
into
arpl
sub
imul
push
pop
mov
cmp
adc
fwait
mov
iret
inc
aam
add
dec
call
dec
inc
push
pushf
inc
xor
out
fsts
and
xchg
xchg
dec
ja
sbb
or
sti
xchg
fdivrl
fldenv
dec
icebp
ret
pushf
and
lahf
mov
das
sub
jo
jecxz
popf
dec
sbb
jne
pop
js
rclb
lds
inc
movsl
add
sbb
ljmp
sti
nop
jo
aad
hlt
addb
inc
hlt
mov
call
jmp
xchg
mov
dec
imul
enter
lods
popa
inc
jns
pop
mov
inc
jae
popf
jle
jmp
dec
ds
das
dec
sub
mov
ja
jns
sub
outsb
lret
sub
aam
pop
mov
daa
lock
pusha
lods
adc
std
sub
bound
fs
jno
dec
loopne
jecxz
xchg
xchg
cld
stos
jb
cmp
or
dec
test
test
mov
mov
lahf
push
xor
add
adcl
cmp
in
stos
sbb
lds
push
pusha
inc
sub
push
rcrl
mov
jge
mov
icebp
test
add
push
call
mulb
sbb
xchg
fimuls
cmp
push
mov
fists
lods
fs
and
push
sub
ds
pushf
sbb
pop
ret
jmp
in
enter
int
out
push
inc
mov
mov
and
cli
jbe
sti
test
jnp
rcrl
mov
lock
add
mov
aad
fdivs
and
lock
aad
or
mov
imul
adc
outsb
dec
adcl
cmp
mov
in
mov
outsl
mov
jg
push
cs
push
mov
or
mov
lea
pop
es
push
outsl
mov
cmpsl
movsl
fdivrl
sub
clc
mov
xchg
jb
push
cmp
popf
insl
dec
cmc
in
sbb
and
cmp
push
test
xor
mov
dec
nop
std
pop
xor
or
jmp
movsl
cmp
ja
fsts
dec
in
sub
and
mov
in
aam
sbb
pop
jle
push
dec
push
push
test
pusha
out
or
decb
inc
mov
dec
xor
enter
cwtl
pop
lds
stc
dec
lods
push
div
push
loope
sti
dec
lods
scas
idivl
mov
popa
sbbb
pop
jns
mov
andl
cmp
stos
or
pop
jb
cmp
stos
mov
inc
mov
out
imul
mov
in
imul
aad
add
mov
lea
stos
cmp
das
push
push
and
xor
mov
push
mov
hlt
and
inc
jp
fstpt
add
xor
inc
imul
pop
adc
push
sub
pusha
addr16
or
clc
xlat
mov
je
ss
inc
and
or
lods
sbbb
adc
outsl
adc
ss
jle
call
shll
mov
mov
add
cmc
xor
test
mov
and
mov
cmp
outsl
jle
loop
dec
and
and
aad
pop
in
popa
push
mov
jns
inc
mov
mov
dec
fadd
into
int
add
test
pusha
sbb
push
push
psllw
and
mov
shrl
adc
xchg
and
data16
mov
jle
fwait
leave
dec
inc
pusha
mov
or
jp
js
xlat
in
sti
aaa
es
pop
test
xor
or
pop
cmpsb
sub
popa
test
cmp
jo
std
lods
pop
xor
cld
adc
and
das
repz
sti
test
push
mov
pop
out
cmc
mov
shlb
cmp
call
rcrl
rcrb
cmp
addb
movsb
es
sub
es
mov
cmp
mov
sub
cwtl
loopne
pusha
stc
xchg
push
push
mov
aaa
dec
mov
jl
mov
test
into
lret
sbb
fildl
dec
clc
call
mov
in
sarl
dec
inc
ja
lock
jp
fistpl
shlb
add
rcll
inc
movsl
mov
test
das
cmp
push
cmp
imul
out
mov
push
dec
scas
out
xor
pop
movsw
das
cmp
mov
jg
or
icebp
sub
pushf
test
out
xchg
cmp
xchg
cmp
adc
call
xchg
movsl
test
jo
cwtl
popf
insl
xchg
and
lea
pop
jmp
rorb
xor
mov
mov
js
in
push
and
inc
xor
dec
jb
push
jns
mov
inc
or
mov
jo
push
pop
cmc
or
jmp
jbe
dec
adc
pusha
jl
std
ss
dec
xchg
sbb
loopne
adc
push
in
mov
aas
test
mov
lods
js
fsts
subb
sub
fs
or
dec
loop
das
sub
and
lret
adc
xchg
inc
sub
sub
pop
xor
inc
push
ja
adc
std
ffree
xor
shll
popf
xchg
pop
inc
add
cld
jae
mov
lret
pop
test
ja
adc
out
jecxz
add
test
popf
int3
xor
xor
fwait
push
sbb
xlat
xor
test
ret
ds
cmp
aaa
sub
lret
out
lret
stos
fwait
daa
loopne
out
icebp
xor
ds
xchg
inc
mov
test
pop
aam
fs
cmc
sar
mov
cld
out
mov
xchg
fidivl
fs
adc
loope
and
adc
push
adc
add
pop
push
push
cs
stos
sbbl
out
push
and
fs
mov
jno
sbb
inc
insl
je
loop
pop
jno
add
insb
repnz
lds
pop
ljmp
adc
ret
ja
test
or
in
ja
cmp
fiaddl
adc
mov
repz
pop
mov
mov
pop
adc
jne
dec
xchg
dec
inc
adc
add
lds
mov
jnp
mov
sub
push
xor
inc
cmp
loope
and
push
pop
lock
mov
xchg
mov
sub
pushf
and
shufps
xchg
push
fsts
out
in
mov
jnp
icebp
movb
inc
mov
lahf
in
mov
or
aaa
out
loope
ret
sbb
cmp
in
flds
lock
movsl
mov
sub
inc
jae
jle
pop
imul
stos
shlb
push
mov
cmp
scas
dec
into
sbb
and
aad
fsubr
add
adc
dec
add
jne
or
jo
or
xchg
test
lret
xlat
pop
scas
mov
adc
inc
test
jb
enter
es
mov
and
and
gs
movsb
insl
fmull
popa
movsl
ret
loopne
sub
out
std
inc
sub
int
daa
jne
aas
out
arpl
adc
mov
das
lret
push
mov
jecxz
jle
cs
pop
and
sub
add
js
arpl
add
lcall
push
and
jb
int
mov
dec
mov
test
mov
lcall
push
mov
push
out
adc
fs
jl
push
lods
xor
or
je
ret
jnp
pop
or
pushf
sub
in
jb
sahf
into
inc
sub
lcall
xchg
pop
mov
lahf
cwtl
cs
cs
sub
xchg
fsubrs
jl
dec
mov
xor
outsl
lret
sbb
nop
dec
cmp
pusha
popa
mov
xchg
gs
inc
ja
jne
lea
ret
hlt
mov
xchg
sbb
inc
push
adc
addr16
xlat
sbb
out
push
jmp
les
loopne
in
push
pusha
inc
mov
ljmp
push
push
outsb
inc
dec
lock
xchg
cmpb
es
mov
test
daa
pop
imul
int
jecxz
das
lret
sahf
jge
sbb
dec
mov
enter
dec
mov
out
je
jge
and
push
testl
lea
popf
lock
test
mov
cmp
lods
sub
loopne
xchg
inc
in
shrl
jns
lock
pop
pop
and
fsubrp
add
js
scas
in
xchg
adc
mov
lods
inc
mov
repnz
sub
adc
mov
insb
orl
adc
push
mov
mov
mov
and
pop
mov
dec
pop
ja
jge
icebp
xchg
in
adc
das
inc
xchg
lods
aaa
in
sbb
in
lods
movsl
mov
stc
into
je
jbe
add
jge
scas
jbe
mov
add
mov
sub
filds
or
xchg
sbb
sbb
sahf
test
test
out
sbb
shlb
lcall
lods
cwtl
or
adc
dec
or
aad
lods
lds
sub
mov
loopne
jle
andb
out
jb
xchg
mov
popa
hlt
in
mov
sub
adc
lea
clc
sbb
popl
je
gs
adc
push
das
mov
inc
push
std
and
test
loopne
ja
push
es
pop
xchg
dec
xchg
sub
movsb
xlat
xor
gs
dec
adc
lea
xchg
imul
xchg
inc
imul
xchg
sub
movsl
lods
xchg
test
xor
test
ljmp
and
aam
jmp
xchg
jne
ljmp
fldcw
push
mov
mov
or
inc
iret
or
add
imul
arpl
cli
jg
push
ret
add
insl
cmovg
sbb
test
fwait
arpl
pop
and
pop
fidivrs
in
imul
xchg
cmpsb
xor
push
movsl
out
mov
data16
add
mov
ja
cmpsb
lea
mov
ss
jae
inc
push
fldenv
decb
aas
mov
cli
int3
insl
lds
jp
pop
ja
loop
clc
inc
xchg
pop
xor
into
add
popf
and
cmpsb
jno
mov
mul
popa
xchg
push
dec
repz
dec
push
sahf
ret
dec
repz
shrb
jmp
and
sub
xor
bound
xor
push
add
addr16
aad
lods
pop
mov
in
insb
call
leave
add
stos
add
int3
insb
dec
cmp
aaa
sti
imul
or
in
daa
popa
jle
mov
stc
fcomi
cmp
mov
popa
xchg
loope
inc
or
sbb
ss
gs
xor
or
jne
imul
xor
stos
cld
push
xchg
mov
arpl
cld
in
inc
popf
scas
stos
xor
fs
nop
adc
bts
sbb
xchg
cs
mov
jmp
dec
fcom
or
dec
or
clc
daa
mov
adc
insb
mov
pop
mov
or
cmp
mov
inc
leave
mov
in
jb
xlat
push
lods
cmp
ds
push
lods
mov
xorb
xchg
jbe
ljmp
inc
mov
mov
push
jne
ja
push
dec
jmp
gs
mov
mov
adc
int3
lahf
loope
mov
sub
or
add
aam
sub
jne
imul
gs
and
lods
pushf
or
cmp
jbe
ljmp
push
push
xchg
jnp
push
sub
adc
mov
clc
in
ss
movsb
cmp
mov
bound
popa
iret
adc
jp
mov
or
xchg
jle
push
shl
push
fwait
add
daa
popf
mov
push
ss
or
mov
sarl
adc
cwtl
or
pusha
sbb
push
or
mov
inc
popa
outsl
ret
add
xchg
push
test
int
sub
jno
sub
mov
push
push
mov
jecxz
test
push
jmp
push
shrb
aad
sub
sub
ret
xchg
iret
cltd
pushf
xor
in
xchg
and
or
mov
in
in
jnp
jge,pn
daa
xchg
mov
xor
repnz
aad
xchg
into
push
adc
jp
mov
cmp
pusha
pop
mov
frndint
shlb
xchg
push
jnp
xchg
add
xor
shll
mov
adc
dec
xchg
stos
nop
out
dec
repz
jecxz
push
notl
into
cmp
insb
jecxz
xor
dec
js
adc
test
xchg
nop
loopne
lcall
pusha
add
pop
or
je
dec
push
pop
jae
mov
addb
out
imul
jae
xbegin
jb
push
push
icebp
mov
jae
jp
xchg
sub
clc
jl
inc
mov
or
push
dec
adc
ss
cmp
inc
mov
outsb
push
sub
cmp
es
inc
fs
leave
inc
add
cmc
insb
fcoml
repz
jl
test
repnz
sbb
fstpt
adc
pop
pusha
cmp
in
lds
jno
sub
ret
dec
push
imul
xchg
gs
cmp
cmp
cmpsl
mov
cltd
mov
fs
aas
loopne
jg
cmp
mov
loop
jne
pusha
xchg
push
xor
sub
ss
in
add
movsl
out
lret
jne
into
mull
xor
repz
outsb
shrb
bnd
fidivrl
imulb
dec
and
xchg
fcmove
or
dec
imul
inc
xchg
aas
jmp
pop
push
ret
shll
inc
repz
mov
shl
scas
lock
sub
cmp
addr16
mov
out
lahf
jne
loope
xchg
in
fsub
xor
push
bound
int
mov
inc
pop
xor
addb
test
or
fwait
mov
jae
cli
mov
fnstcw
mov
nop
ds
lds
adc
mov
std
xor
dec
scas
mov
and
inc
repnz
gs
into
rcl
fwait
ret
dec
mov
mov
test
fstl
aas
dec
addr16
inc
sub
push
setns
movsl
je
xchg
lcall
pop
int3
daa
mov
xchg
pop
jecxz
cmovbe
movsb
lahf
in
lahf
popf
xchg
mov
or
cmp
das
sti
leave
jbe
sub
jno
push
cs
sub
add
mov
dec
cmpsl
loope
popf
fistl
jle
mov
jp
mov
sbb
mov
push
icebp
jp
mov
jmp
pop
pop
mov
les
aas
rcl
repnz
mov
adc
adc
hlt
test
xchg
inc
cmpsl
imul
pop
mov
pop
shlb
out
inc
adc
repnz
out
ja
subl
or
aas
lods
shl
fsubrp
ficompl
enter
xchg
push
dec
mov
adc
jecxz
imul
dec
cmp
ret
lock
movb
inc
cmc
rorb
lods
in
loopne
das
inc
out
lea
arpl
scas
aaa
addr16
mov
sti
mov
push
inc
bound
mov
fwait
sti
insl
or
cmp
push
inc
movsb
inc
ret
push
sbb
jmp
imulb
and
aad
in
decb
sarb
lahf
insb
xor
repnz
stc
push
mov
aad
scas
in
leave
and
cwtl
lods
int3
outsb
mov
popf
insb
pop
dec
insb
fwait
fwait
cmp
mov
sar
xchg
sub
insb
sbb
or
inc
and
imul
test
aam
pop
addr16
cmp
outsb
nop
mov
push
and
icebp
sbb
or
inc
add
mov
lahf
ficompl
fisttpl
scas
in
test
inc
jge
cmpsl
cltd
rcrb
xor
mov
les
nop
jecxz
pop
sbb
and
mov
jge
outsl
add
int
mov
test
cmp
cmp
jg
jecxz
adc
dec
je
xor
mov
pop
in
mov
mov
lret
cmp
outsl
and
insl
mov
js
daa
pop
xor
push
lds
and
ljmp
cmp
adc
jl
shll
scas
aas
dec
jmp
jp
cltd
xchg
ss
into
cwtl
mov
dec
jl
mov
mov
pop
jns
xchg
sub
ret
fsubs
mov
mov
ja
xchg
cmp
andl
xor
ret
out
mov
mov
push
scas
jl
fisubl
or
enter
add
dec
aam
sarb
ljmp
mov
fnstcw
aaa
mov
sub
fidivrs
fsubr
xor
shl
cmc
notl
lock
and
xor
js
or
pushf
aaa
aaa
mov
js,pt
push
aad
lock
push
movsl
sbb
popf
test
stc
mov
jno
mov
bound
insl
mov
jno
jmp
add
movsl
ljmp
xor
out
rol
sub
pop
dec
jle
bswap
in
das
fistpl
inc
test
aad
sub
imul
pop
push
rep
pop
sub
push
cpuid
mov
and
xchg
push
push
mov
inc
in
and
mov
jle
and
icebp
adc
pop
pop
aas
jmp
pcmpeqd
dec
or
push
andb
in
xorb
jmp
insb
xlat
inc
sahf
push
xlat
mov
adc
and
mov
nop
jno
ficomps
and
xchg
ret
std
mov
sbb
inc
scas
mov
je,pn
mov
add
push
adc
outsl
rolb
push
cli
cmp
xchg
inc
pop
mov
dec
packuswb
or
and
imul
push
ja
dec
jp
adc
pushf
enter
inc
and
and
push
sub
push
jbe
jg
les
lock
push
lea
mov
jno
xlat
std
pop
inc
sub
sbb
in
jo
decl
call
or
call
or
mov
mov
popa
mov
xchg
or
push
mov
push
out
outsb
cmp
xor
add
iret
xor
push
xchg
jno
jbe
daa
test
sub
test
daa
cmp
mov
mov
cmpsb
vshufps
movsl
sub
push
pop
sbb
icebp
jge
fdivrs
sti
or
cli
orps
push
shr
jg
jne
data16
bound
imul
jne
leave
jo
int
punpcklwd
jmp
mull
mov
cs
insb
mov
cmp
or
les
jl
out
mov
inc
mov
adc
stc
pushf
loope
or
mov
jl
cmc
addr16
jmp
push
sti
xchg
cli
out
push
push
sti
cmpsb
push
int
push
ret
test
lahf
cwtl
push
imul
push
outsb
xchg
cmp
push
cmp
int
push
adc
or
or
adc
inc
sbb
xchg
lcall
xor
inc
mov
dec
cmpsb
jnp
aad
pop
jbe
mov
ljmp
outsl
mov
clc
out
and
loopne
int3
mov
dec
clc
jecxz
out
jp
mov
shlb
xchg
push
into
dec
push
int
adc
jecxz
cmc
in
insb
mov
daa
dec
add
cs
ret
mull
push
subl
mov
sbb
inc
inc
and
leave
mov
sub
negl
mov
and
lods
push
push
jno
les
mov
frstor
rorl
jmp
mov
das
xor
pop
enter
in
testb
sbb
sbb
bound
js
push
xchg
data16
jge
mov
fimuls
out
jge
sarb
or
test
mov
imulb
pop
cmpsb
sub
sbb
sbb
das
cmp
xor
decb
push
cli
xlat
loop
outsb
and
roll
leave
shll
cltd
pop
ds
mov
mov
test
test
mov
cmpsb
inc
pop
jmp
lods
jns
sbb
xchg
mov
dec
subb
movsl
mov
jne
xchg
and
pop
mov
repz
lahf
imul
cmpsl
mov
add
jmp
cmp
shl
int3
push
adc
lods
mov
mov
fnstenv
stos
int3
push
inc
xchg
fwait
jae
push
mov
lods
lods
je
das
popf
inc
out
and
in
jle
mov
stc
fstl
jl
dec
cld
mov
in
mov
test
rorl
inc
jbe
and
inc
mov
sti
push
sahf
mov
sub
jnp
jmp
not
shrl
xchg
in
call
sbb
addr16
ja
mov
aaa
sbb
and
jnp
fldt
or
call
xor
sbb
ljmp
or
je
xlat
dec
jmp
adc
mov
repnz
jae
out
fsubrl
xchg
mov
in
jnp
imul
inc
jle
pusha
icebp
in
and
fwait
cmc
lret
mov
mov
mov
jl
test
orl
mov
int
fwait
mov
cmp
flds
das
push
dec
xor
xlat
enter
add
jle
and
lods
pop
jne
xor
mov
mov
sti
jmp
mov
ret
cmp
aaa
jge
sbb
cmp
mul
inc
jmp
xor
dec
lahf
icebp
pop
and
mov
jb
xor
aaa
mov
jmp
leave
pop
ljmp
mov
sub
es
adc
insb
xchg
adc
sbb
push
xchg
cmp
xchg
mov
or
and
pop
add
jne
cmp
cmp
jmp
cmp
or
add
jbe
add
dec
xchg
jmp
nop
lret
pop
mov
sbb
pushl
jbe
enter
push
in
fdivrl
cs
mov
adc
jl
pop
or
or
dec
fisttpl
imul
xchg
mov
int3
add
xchg
and
jns
movsl
ret
fwait
or
popa
fstl
or
push
cmp
dec
cwtl
dec
ret
aaa
in
stos
scas
xchg
jl,pn
cmp
dec
push
adcb
pop
clc
data16
push
setbe
dec
mov
xchg
adc
outsl
mov
mov
pop
jns
push
rolb
adc
ds
xor
xor
cld
jb
stos
and
push
mov
dec
pop
cmpsl
test
arpl
xor
push
lods
jbe
pop
ret
cli
mov
out
and
jmp
incl
cltd
sahf
ja
inc
sarb
rcll
nop
repnz
enter
ja
adcb
nop
push
mov
push
mov
aaa
push
out
ljmp
mov
inc
inc
adc
jae
imul
adc
imul
and
pop
and
int3
sbb
mov
xchg
mov
jb
cwtl
push
push
xchg
mov
xor
lcall
scas
mov
mov
sub
or
fists
inc
pushf
stc
push
inc
pop
pop
inc
inc
hlt
fimuls
push
out
mov
mov
and
mov
outsb
in
cwtl
inc
faddl
mov
dec
out
mov
popf
dec
into
mov
xor
mov
or
mov
inc
lds
call
sarb
movsl
xchg
jo
dec
inc
loopne
jo
dec
data16
and
inc
int
jbe
test
xorl
cmp
inc
js
imul
or
cmpsl
imul
das
mov
xchg
jmp
outsb
push
jns
jge
test
addr16
xor
lock
in
std
mov
xor
cmc
bound
cmp
cmp
movsl
sub
inc
cmp
inc
fimull
stos
push
push
or
mov
out
adc
mov
and
mov
movsb
push
mov
daa
mov
sbb
fdivl
scas
adc
es
push
xchg
cs
mov
les
cmpsb
shll
mov
pop
sbb
xor
xchg
mov
jbe
mov
rcll
push
pop
fs
test
loopne
fcomi
loopne
sbb
loop
shrb
cmp
pop
scas
insb
call
sbbl
inc
add
sub
cltd
rcl
adc
aad
std
adc
jl
cli
ror
xchg
mov
fbstp
sbb
fisttpll
hlt
cmc
cmc
unpckhps
mov
sbb
mov
mov
and
push
dec
ret
in
ds
and
add
xor
mov
or
sub
aas
fdivrl
or
rol
push
mov
dec
xor
and
pop
jecxz
add
leave
repnz
push
sub
loopne
lret
jle
mov
add
add
push
fnstcw
testb
xchg
xchg
data16
mov
jo
xchg
fwait
rol
xlat
pop
lods
add
jecxz
cmp
pop
mov
mov
jbe
xlat
lea
or
sbb
jmp
add
outsb
cs
ret
and
or
pop
xchg
outsb
xor
push
inc
out
lock
cld
scas
xor
jecxz
jmp
hlt
sahf
jle
dec
jb
xchg
push
add
push
inc
lods
cmp
stos
ret
clc
xlat
fmulp
pop
push
push
sbb
pop
dec
lret
lcall
pmaxsw
sbb
xor
xchg
inc
out
ds
pop
sbbb
sbb
stos
incl
cmpsb
jecxz
push
arpl
push
cmc
call
xchg
cltd
lods
in
addl
sbb
iret
inc
lods
out
inc
clc
scas
daa
pop
dec
sub
cltd
aas
lret
pop
mov
movsl
stos
lcall
enter
popw
leave
inc
sete
lret
and
push
call
pop
pop
dec
ds
push
dec
mov
test
lea
and
jns
dec
lcall
mov
xchg
in
aad
or
jo
jge
mov
xor
mov
jmp
push
dec
cmp
mov
aam
and
int3
idivb
mov
pop
xchg
nop
jbe
fistpll
dec
xchg
push
xchg
pusha
pop
les
add
and
mov
stc
inc
andb
jae
and
add
dec
add
pop
xchg
fists
nop
push
xchg
or
imul
push
mov
cmpsl
dec
push
les
mov
pop
fbld
pushf
inc
lret
ds
or
in
lcall
add
lods
stos
fdivrs
and
mov
test
adc
pop
insb
leave
push
xchg
outsl
stos
xchg
xor
popa
xchg
movsb
icebp
xchg
jno
jb
sbb
das
dec
aas
mov
or
add
cmp
push
xlat
pop
stc
xor
add
movsb
ja
xchg
or
jbe
mov
mov
add
push
mov
sub
adcb
sub
or
and
dec
push
or
adc
jbe
loopne
mov
rcrl
mov
inc
outsb
imulb
push
cmp
or
sahf
jp
jmp
inc
add
call
ftst
jnp
into
mov
dec
lea
stos
sub
pop
icebp
icebp
inc
sbb
mull
repz
lock
push
inc
out
cwtl
xchg
pop
fdivrs
pop
inc
cmpsb
pop
sbb
clc
jnp
dec
xor
fdivs
cmpsb
jge
push
push
inc
js
push
jl
fs
mov
xor
pop
dec
or
pop
jle
fadds
popa
cwtl
jmp
pop
cmpl
daa
xchg
lock
mov
movsl
js
imul
scas
adc
sbb
test
sbb
mov
mov
adc
cmp
cmp
cwtl
dec
xor
sub
popf
xchg
cmp
mov
push
sub
cld
movsl
nop
mov
adc
and
push
push
enter
fimull
mov
or
mov
adc
sbb
jl
mov
dec
fnstsw
fisubrl
jne
inc
shrl
and
fnstcw
mov
jne
inc
mov
negb
test
int3
add
jne
popf
in
je
dec
or
or
je
jp
push
xchg
sub
andb
rcr
sub
inc
lods
pusha
sub
rcrb
jmp
cmp
in
icebp
push
mov
xor
add
add
push
test
das
outsl
popa
adc
push
iret
dec
icebp
add
sbb
sbbb
push
lcall
jae
mov
ret
mov
ss
or
scas
push
dec
cld
inc
mov
bound
imul
int
mov
cs
and
inc
jbe
ja
sti
enter
and
test
cmp
enter
sarb
repnz
shlb
pop
cmpsl
inc
or
sbb
push
lods
cmc
jge
in
test
dec
xor
inc
dec
sub
mov
fimuls
jmp
ret
push
mov
adc
loopne
or
dec
dec
fstpl
xchg
dec
fwait
or
jbe
pmaxub
iret
and
rcr
pushf
jecxz
pusha
mov
lea
daa
sub
inc
lcall
sbb
std
push
mov
stos
call
or
mov
int3
stos
arpl
aad
mov
or
mov
out
and
jl
jae
stc
cli
cmp
adc
mov
mov
sub
sti
scas
cltd
mov
xor
push
fstp
lock
jno
aaa
in
in
les
shrb
push
aam
mov
adc
mov
dec
idiv
rcl
xor
or
push
shll
int
imulb
jecxz
mov
mov
sub
rcrl
movsb
popf
in
sbb
jnp
push
addb
faddp
mov
ljmp
fs
push
add
cmp
popa
push
or
fxch
lods
add
push
xor
out
mov
shl
or
test
add
lahf
lahf
sub
xlat
aaa
push
nop
imul
push
sti
lods
enter
out
ss
xor
jne
mov
lods
mov
bound
adc
mov
fs
inc
jg
pop
mov
mov
lods
imul
adc
je
pop
scas
stos
loopne
or
mov
sbb
pop
xor
out
out
push
stos
mov
mov
mov
aas
mov
jp
xchg
mov
shrb
sub
mov
add
enter
ljmp
xor
pop
cld
mov
cs
cmp
out
das
xor
out
mov
icebp
pop
outsl
loop
jge
in
mov
lods
ja
enter
inc
pop
fsubrl
or
enter
lock
shlb
sbb
fcom
dec
or
pop
cmp
lds
imul
and
sub
loopne
pop
ret
xor
fsubrl
movsb
ret
mov
mov
inc
shr
push
ja
push
mov
sub
in
xor
popf
or
or
pop
push
outsl
mov
stc
dec
outsb
sbb
and
sub
cltd
rcrl
cmp
mov
mov
ss
jecxz
sbb
cmpl
cmp
pop
sbb
cmc
or
js
daa
push
xchg
fcmovnb
insb
movsl
jo
loopne
pusha
mov
mov
lea
cmp
cmpsb
inc
jg
std
aad
dec
sub
gs
jg
and
mov
sti
fdivrl
adc
jb
scas
add
loope
stc
icebp
mov
cmp
xchg
pop
out
mov
dec
insb
inc
imul
imul
shr
jl
ficoms
push
decl
fwait
out
ja
inc
hlt
pop
rcl
adc
lds
stc
adc
fdivs
cmp
mov
mov
dec
xchg
xlat
xor
mov
pop
dec
or
test
arpl
mulb
pop
push
addr16
cmc
cmovo
sbb
outsb
cli
icebp
or
sbb
and
add
lcall
dec
pop
test
out
filds
cmp
pop
pop
add
mov
add
arpl
add
imul
push
popa
jo
and
aas
xchg
and
aas
lea
mov
mov
mov
rcr
outsb
sahf
lea
repnz
xor
scas
sub
push
sbb
mov
adc
fistl
sbb
pop
cmp
inc
push
rcll
outsb
push
cltd
xor
mov
inc
mov
test
pop
lret
push
repnz
dec
lods
xchg
xchg
pop
faddl
xor
insb
sahf
repnz
sbb
cmp
lahf
mov
jp
xor
call
or
negl
jne
cwtl
or
sub
sbb
sbb
cmp
adc
pop
popf
jno
mov
mov
push
out
push
pop
fwait
loop
insl
lret
fsubrs
bnd
sub
arpl
lret
xchg
add
adc
pop
ret
hlt
js
push
cltd
mov
std
das
ja
xor
mov
adc
mov
addr16
push
sub
in
leave
sbb
mov
jnp
mov
push
mov
mov
pop
outsl
dec
out
cld
stos
or
pop
dec
pop
in
out
pop
push
jbe
daa
aaa
adc
dec
sbb
and
dec
mov
lods
and
aad
faddp
push
and
pop
ret
fcoml
xchg
sarl
popa
test
adc
in
fldenv
lods
nop
lcall
sahf
mov
inc
cld
pushl
cmc
push
sbb
aam
int3
adc
mov
into
dec
aad
bnd
cwtl
les
xor
cmc
cmp
imul
aas
and
push
sahf
popf
dec
mov
and
fs
or
mov
rolb
scas
adc
scas
add
sub
adc
scas
push
inc
repz
and
sti
aas
xchg
ds
aas
push
not
call
pop
fimull
jno
out
cmp
cmp
into
lods
daa
lock
test
sti
add
jmp
add
push
pop
push
cltd
out
cli
dec
cmp
adc
lods
and
addb
pop
ret
mov
jns
xor
into
xchg
aad
pop
sub
mull
popa
ljmp
js
mov
pop
sub
lret
sbb
cmp
sbb
and
lcall
rolb
sbbb
fucom
and
cmp
pop
loopne
and
filds
insl
xchg
pop
roll
inc
pop
and
mov
cmp
xor
aaa
cmp
jns
popf
mov
fiaddl
add
adc
ljmp
mov
sub
cmpsb
push
je
pop
push
pop
add
mov
out
aam
outsl
dec
adc
loop
sbb
jg
sbb
jl
movsl
cld
ja
jb
inc
or
adc
mov
inc
bnd
jae
nop
fistps
in
adc
es
call
stos
push
jnp
jno
xor
dec
fsubrs
sahf
in
push
pushf
push
mov
daa
out
ss
lock
je
sti
pop
add
xor
lods
mov
cmp
jne
and
sub
and
insl
pop
adc
adc
repz
stos
jmp
movsl
add
inc
fs
inc
jp
xlat
push
or
push
pop
inc
mov
cld
or
push
popl
mov
add
push
push
inc
test
insb
sub
aas
lahf
out
dec
xchg
cmpsb
jne
mov
jecxz
push
mov
push
push
nop
add
arpl
cmp
sbb
clc
hlt
fnstsw
inc
mov
js
shl
jne
into
idiv
mov
shrl
push
push
dec
mov
jmp
mov
in
or
iret
movsb
test
jecxz
mov
or
jne
sar
insb
addr16
push
insb
lahf
push
sbb
add
push
jae
out
jo
mov
and
jns
adc
push
mov
mov
movsb
mov
sahf
fisubs
mov
repnz
push
popf
mov
in
stos
lods
mov
jge
adc
mov
mov
ficoms
jg
stos
push
adc
test
dec
or
inc
fs
ret
mov
push
sbb
mov
mov
xor
mov
or
pop
lret
dec
cmp
push
mov
mov
add
rcrl
cmpsb
pop
xor
inc
adc
and
lea
cmp
lea
mov
popa
pop
loopne
sahf
dec
cmp
adc
or
sub
adc
rol
push
mov
int3
mov
lcall
leave
loopne
mov
fcoml
jns
and
jmp
pop
mov
lahf
rcll
xor
dec
mov
dec
or
dec
or
mov
mov
dec
pop
pop
jmp
mov
xor
jb,pn
fwait
jbe
cmp
cmp
and
pop
xchg
or
mov
push
rcrb
pop
mov
out
dec
mov
ljmp
sbb
fsts
sahf
cmp
mov
ficompl
cmova
dec
in
pop
xchg
cmp
js
push
sbb
cmpsl
sub
pop
and
xor
inc
inc
mov
pop
mov
ret
adcl
xor
arpl
sub
test
jp
xor
jo
inc
ret
mov
jge
repnz
jnp
mov
lcall
push
fistps
adc
in
stos
cld
sarb
cwtl
jb
mov
insb
lods
push
jp
push
orb
out
xchg
cmp
fldenv
aaa
insb
stc
push
aas
int
cmpsb
jns
xor
rcll
add
les
mov
push
push
sbb
lods
lods
nop
mov
pop
dec
stc
cltd
loopne
js
lcall
jo
mov
mov
les
or
mov
jl
cmc
inc
xchg
xchg
xchg
push
pop
push
xor
xchg
cmp
mov
push
dec
testb
idivl
in
push
xor
push
xchg
mov
lods
xchg
mov
dec
aas
xor
fimuls
mov
lret
jae
mov
ja
add
sub
mov
lahf
xchg
pop
mov
sub
cli
ror
aam
pop
mov
fcomps
pop
ret
mov
sub
iret
inc
iret
ljmp
mov
pop
add
jbe
test
push
fbld
sub
subb
push
xor
xchg
xchg
iret
mov
add
daa
push
cmpsl
cltd
dec
cs
jne
shr
xlat
cltd
shll
and
inc
je
inc
xchg
inc
scas
lahf
repz
add
lock
jmp
stos
and
mov
dec
rolb
and
jge
sbb
in
sbb
sti
dec
test
add
adc
movsl
ja
or
test
cld
xor
outsb
xlat
aas
pop
insl
jg
xchg
jno
mov
gs
mov
leave
push
dec
int3
addl
gs
push
stc
negl
and
jg
push
scas
sahf
or
ds
adc
dec
popa
cmp
pop
ljmp
jmp
out
daa
stos
data16
dec
in
mov
jb
jns
clc
and
cs
cld
jecxz
iret
pushw
stc
out
add
xor
leave
mov
into
outsb
adc
movsl
jne
clc
sub
mov
mov
push
inc
cmp
nop
lock
int
bnd
mov
cmp
sub
cmpl
pop
push
pop
lea
push
fcoms
mov
cmc
inc
mov
popa
ss
and
jnp
cmpsb
mov
mov
push
inc
int
shl
aam
fidivrs
jo
insb
dec
push
mov
push
mov
ds
adc
mov
jecxz
add
ja
pop
and
sarl
cld
cmp
in
mov
mov
and
dec
mov
mov
aam
add
js
mov
pop
cmc
mov
add
dec
jg
jp
and
push
and
fsubrs
push
mov
adc
push
mov
sub
xchg
xor
test
adc
aaa
or
dec
stos
cmp
or
fwait
dec
push
add
shll
daa
das
gs
shrb
push
mov
enter
mov
dec
ret
pop
int3
jno
and
xlat
push
arpl
push
testl
mov
pop
jp
call
andl
into
mov
cld
es
testb
arpl
or
lret
inc
sub
xor
xchg
jns
mov
movsl
add
popf
lcall
dec
call
std
inc
testl
test
xchg
xchg
xchg
xor
imul
push
ljmpw
stos
xchg
mov
lahf
jge
fcomps
in
out
xchg
mov
cmpb
outsl
mov
mov
into
mov
or
mov
jmp
lret
jecxz
jl
push
lahf
lods
add
jmp
mov
push
and
cld
movsb
stos
insl
cltd
xchg
stos
jns
add
insl
sti
dec
or
pop
orb
cmp
fwait
rclb
xchg
pop
jg
popa
mov
imul
loopne
adc
subl
pop
pop
dec
mov
sbb
and
mov
outsl
fisubrl
frstpm(287
mov
cmp
xchg
push
in
jl
jp
movsl
rorb
fcomip
lahf
ficoms
gs
push
hlt
xchg
xchg
les
test
xor
ss
rorl
in
push
lds
xchg
out
stc
fsubrp
in
xchg
inc
xor
dec
fimuls
cmp
jae
mov
or
sub
out
mov
fld
and
ffreep
adc
icebp
jle
xlat
cmp
pop
pop
jno
out
mov
icebp
fwait
and
cmpsb
cmp
mov
add
xchg
mov
inc
push
mov
add
jae
xchg
out
jae
dec
clc
sub
out
pop
jecxz
inc
and
mov
dec
dec
jle
sub
clc
push
outsl
into
push
pop
loopne
icebp
popa
sbb
and
sub
push
push
stc
daa
add
mov
jmp
jecxz
cmpsl
rcll
adc
mov
mov
shll
in
adc
std
in
mov
pop
lock
fidivs
jb
push
and
in
jns
and
popa
ret
adc
lret
out
mov
xchg
mov
inc
or
pop
decb
imul
push
lcall
mov
cli
scas
out
xchg
add
in
clc
jb
in
les
push
addl
push
bound
andb
inc
xchg
movsl
jge
and
xlat
sub
mov
mov
jne
or
or
jne
rcll
or
int
icebp
scas
ss
adc
std
dec
mov
call
outsb
leave
ja
hlt
out
push
or
sbb
daa
dec
add
sub
add
dec
movsb
in
or
inc
xor
sub
daa
jnp
shl
lods
mov
and
in
push
vpmulhw
or
mov
pop
mov
mov
xor
les
or
es
es
rcrl
jle
lods
adc
fcomi
add
stos
bound
pusha
sbb
xor
mov
or
mov
fwait
icebp
js
push
mov
xchg
fiadds
and
je
stc
out
scas
icebp
scas
in
xor
add
jmp
shll
add
scas
sub
cmp
js
pusha
jp
add
out
pop
in
pop
out
js
sbb
imulb
into
mov
hlt
jo
xor
jecxz
fsubs
cli
add
mov
and
cld
xchg
add
xlat
or
dec
pop
cmp
imul
mov
mov
or
stc
jp
xchg
dec
test
arpl
out
pop
and
stc
mov
je
inc
lods
and
or
cmp
je
jne
mov
rclb
sbb
mov
dec
pop
cmp
out
push
cmp
rorb
stos
push
jb
mov
inc
out
add
jge
inc
mov
and
sub
push
jecxz
std
or
xchg
in
iret
inc
pop
mov
ljmp
mov
mov
inc
dec
dec
fs
stos
push
mov
cmp
into
inc
sbb
fnsave
cmpl
gs
pop
push
shll
sti
cwtl
sarl
push
sub
lock
rol
xchg
cmp
out
bswap
and
xchg
cmp
mov
and
jne
add
mov
and
add
shl
add
xor
mov
test
movl
push
add
and
add
sbb
inc
mov
int
xchg
xchg
stc
xchg
dec
pop
ror
jae
sbb
mov
push
cmpsb
or
sub
outsl
mov
sbb
push
adc
mov
jecxz
add
cwtl
jmp
test
cmp
dec
mov
sbb
stos
sbb
inc
push
sbb
daa
cltd
mov
push
sub
push
xlat
jecxz
push
xor
xor
test
out
insb
dec
test
shlb
pop
jp
loop
pop
sub
dec
and
pop
lret
rorb
adc
add
daa
push
sqrtps
sbb
hlt
sub
sbb
add
mov
enter
mov
loop
out
ret
shrb
mov
ss
stos
sub
out
mov
dec
cmp
push
jno
sbb
pop
andb
cli
mov
insl
dec
bound
test
inc
andl
jecxz
dec
jnp
mov
pop
cltd
xchg
xlat
addr16
cld
mov
sub
shll
mov
rcl
and
jne
lea
lds
sub
icebp
pop
or
mov
mov
mov
iret
aas
xlat
dec
or
stos
in
cs
xor
xor
outsl
out
clc
test
xor
lret
xor
mov
daa
jmp
jbe
or
ljmp
hlt
inc
dec
mov
outsb
roll
sbb
fsubrl
stos
xlat
fnstsw
rcrl
pop
inc
decb
push
xor
pop
fwait
sarl
daa
stc
cmovno
orb
rorb
xor
inc
dec
jl
mov
dec
sahf
call
int3
movsb
sti
stc
daa
mov
mov
and
xchg
jge
pop
or
scas
imul
xor
test
xor
pop
mov
inc
lret
stos
sbb
lods
xchg
cltd
pushf
jmp
cmp
cmpsl
jo
pop
in
adc
dec
push
stos
stos
cltd
sbb
sarb
repnz
sub
ljmp
cld
into
mov
sub
cli
in
xor
push
das
push
sub
push
test
les
pop
lods
mov
jae
and
mov
add
ret
aas
dec
clc
mov
inc
imul
mov
xor
push
cs
pusha
hlt
sub
mov
xor
lods
fsubs
les
pushf
test
inc
adc
aas
in
cltd
jne
and
pop
push
and
imul
push
loope
mov
aas
jns
adc
pushf
les
mov
xlat
data16
sub
cmpb
ljmp
dec
push
xor
mov
or
ds
clc
cmpsl
push
inc
loop
fstpl
dec
jno
pushaw
daa
fidivs
inc
mov
xor
jmp
stos
push
jmp
test
repz
insb
mov
in
sub
shl
push
mov
pop
ror
jg
div
ljmp
mov
cmp
shr
xchg
adcl
loope
sbb
clc
les
adc
aas
pop
adc
aas
mov
cmc
cmp
rcll
or
sbb
dec
rcll
add
fisubrl
xchg
shrl
cli
std
add
loop
movsl
sbb
shr
jp
aas
ret
sahf
cmp
xor
pusha
pop
mov
sbb
js
arpl
ja
xor
out
add
aam
jno
or
rorb
lahf
mov
pop
popa
add
mov
mov
in
pop
push
rorl
sti
sahf
in
sub
jg
lret
jp
popa
mov
or
int3
imul
sub
add
pop
mov
mov
jge
adc
xor
xchg
shll
cwtl
or
test
cmc
in
call
lcall
push
jo
jae
int
pop
out
mov
dec
fs
or
cltd
cmpsb
test
cmp
cmovo
pop
xor
and
cwtl
mov
fcoms
shll
cmp
sub
jecxz
mov
jmp
push
dec
int
repz
inc
int3
testl
xchg
int
mov
lret
xchg
and
stos
sbb
idivl
js
jae
imul
adc
mov
mov
jge
xchg
pop
adc
push
pop
test
roll
nop
fidivrs
mov
stos
xorl
insb
xor
cmp
add
stc
movsb
xchg
dec
mov
pop
aam
movsl
test
inc
mov
divl
cmpsb
or
pop
jns
jbe
sti
mov
in
jb
sbb
mov
xor
iret
inc
push
shlb
in
sub
nop
jle
pop
adc
inc
ja
cmc
push
jl
imull
cmc
add
adc
jmp
dec
outsl
pop
data16
pop
add
cli
movsl
sbb
ss
pop
shll
push
xor
cld
les
push
inc
popf
aam
push
repz
inc
leave
sahf
cmp
lock
add
fdivs
addr16
popf
ljmp
add
cmc
add
je
mov
and
loopnew
ja
jle
xchg
add
pop
lahf
cmp
out
rcl
ror
pop
mov
aam
cltd
jmp
or
js
jmp
jg
stos
mov
sti
cmp
sbb
sub
jg
adc
xor
dec
fldenv
jmp
test
insl
cmp
insb
cwtl
jbe
jo
mov
sbb
inc
sub
aad
push
imul
fnstenv
and
iret
fdivr
jae
and
enter
jecxz
pop
jns
push
push
or
mov
test
andl
jmp
scas
push
lods
aam
and
bound
jmp
mov
sbb
mov
mov
mov
test
xchg
xor
inc
jnp
push
mov
pop
push
adc
jbe
and
mov
mov
lret
sbb
dec
movsb
mov
xchg
sub
jnp
data16
dec
add
jl
leave
clc
fisubrs
ja
or
dec
sbb
mov
fidivrl
shll
jmp
sub
cmp
lds
dec
cmp
push
pop
sbb
or
or
cmovg
cmpsb
inc
push
push
call
shll
cmpsb
divb
test
test
xor
push
rorb
cld
shrl
pop
icebp
sub
int
push
mov
inc
push
pop
adc
sbb
jg
jge
iret
push
pop
inc
daa
mov
lea
stos
lret
test
jecxz
out
xor
mov
iret
add
aad
das
and
xlat
jbe
add
or
cmp
loopne
ss
mov
pop
mov
jnp
mov
mov
mov
pop
pop
and
push
mov
lock
lods
ja
add
jbe
dec
mov
sub
stc
orps
repnz
push
xor
cmc
popf
push
out
jg
mov
fwait
sbb
lods
add
xor
fnstcw
and
xor
mov
icebp
out
xchg
dec
dec
int3
xchg
daa
sbb
mov
push
mov
out
push
add
mov
ret
or
push
push
fcomp
mov
adc
loope
adc
inc
push
jle
xchg
dec
repnz
fimuls
lods
inc
incb
mov
cwtl
adc
dec
sub
fcmovnb
inc
mov
scas
hlt
sub
sub
mov
and
lret
push
aaa
add
rcrl
aad
out
jge
daa
xchg
add
mov
vfnmadd132ps
fdivrs
adc
add
je
dec
jns
push
test
jnp
mov
enter
xlat
jle
scas
out
imul
lods
inc
scas
inc
loopne
cmp
das
sbb
arpl
xor
mov
push
mov
lods
enter
jae
repz
push
lcall
ds
xor
call
ret
aaa
scas
jmp
popf
cmp
outsl
mov
enter
into
xchg
and
jmp
loope
mov
sub
in
insb
pop
test
shrb
lods
inc
loope
xchg
mov
and
shll
aaa
sbb
sbbl
pop
mov
cs
pop
jp
frstor
aam
xchg
addr16
mov
into
sub
sbb
sahf
lea
movsb
adc
das
jl
mov
test
cmp
jg
mov
lods
mov
xorb
es
jle
les
mov
push
imul
pop
dec
push
mov
sahf
push
popa
pop
dec
imul
xchg
sbb
push
ss
xor
sub
cmp
pop
xchg
add
or
fwait
popf
xor
mov
lds
js
in
jge
xor
mov
outsl
lret
sbb
sub
daa
cmp
fidivrl
xor
arpl
pop
mov
lock
mov
fs
mov
in
test
push
sbb
push
stos
loope
or
inc
fs
repz
add
out
dec
or
outsl
ret
fdivr
adc
repz
popf
dec
out
shrl
and
cli
sarb
std
inc
scas
iret
or
or
push
mov
mov
cmp
ss
inc
add
mov
mov
imull
lods
pop
pop
stos
popa
cmc
sbb
pusha
scas
loopne
test
pop
dec
or
mov
in
out
adc
jmp
xchg
mov
dec
jle
pop
inc
jp
or
je
fildl
or
das
push
sub
scas
mov
xchg
lods
dec
pusha
fisubl
repz
push
push
dec
stos
repz
mov
cmpsb
aad
xor
sub
out
iret
ret
ja
test
mov
std
movsl
in
dec
sub
loop
sub
jp
xchg
xchg
push
aad
dec
xchg
in
sub
add
aaa
shrb
mov
mov
pop
rcrb
mov
test
and
dec
push
cmp
das
mov
mov
notb
mov
outsb
adc
out
and
mov
data16
add
or
and
pop
sbb
pop
cmpsb
icebp
jle
rcrl
inc
ljmp
push
jl
cmpsl
imul
pop
dec
fs
nop
and
push
mov
outsl
clc
sub
out
push
push
jl
xor
dec
push
int3
mov
cltd
lods
out
shl
lcall
enter
sbb
inc
insb
cmp
test
bound
jae
popa
adc
add
and
in
es
addr16
arpl
inc
loop
jb
stos
es
loope
int3
fldt
daa
mov
sub
xchg
xchg
mov
push
sub
in
jb
scas
sub
or
pop
rcrl
dec
xchg
dec
dec
push
fs
pop
sarl
pop
jle
shll
jo
sbb
cli
sub
xchg
push
hlt
stos
mov
push
insb
jae
outsb
dec
arpl
or
sbb
mov
ja
inc
fs
dec
mov
clc
pop
jmp
xlat
pop
or
push
lahf
inc
mov
movl
iret
adc
or
mov
mov
test
arpl
cmp
pop
and
or
mov
add
lods
dec
dec
aas
lret
mov
jb
mov
push
sbbl
cwtl
xlat
add
mov
xchg
jmp
outsb
cltd
mov
enter
repnz
hlt
mov
jne
je
popf
mov
outsl
add
mov
xor
into
repz
xor
dec
stc
add
fldl
add
test
mov
test
mov
lock
int
jp
cmpsl
jmp
jbe
mov
inc
lret
sbb
dec
pop
loop
mov
inc
jnp
hlt
leave
inc
mov
outsb
mov
nop
push
pop
adc
outsl
cmp
in
inc
sarl
or
and
pop
lods
xor
fdivs
sub
adc
xchg
ret
gs
in
mov
sbb
jecxz
cmpsb
jl
jmp
jge
sub
xchg
stos
test
scas
test
popf
add
mov
cmc
hlt
sbb
jg
and
cmp
out
movsb
jne
enter
dec
or
cmp
jo
mov
ja
imul
jb
mov
or
fstpt
sub
shr
stos
push
mov
mull
dec
xor
aaa
push
scas
das
insl
push
ds
mov
mov
adc
rol
sbb
xchg
gs
rorb
cmp
pop
or
or
pop
mov
push
lods
in
int
pop
rclb
pop
subl
outsl
pop
scas
in
lods
sub
popf
push
jmp
mov
cmc
jne
jge
pop
pop
mov
jb
pop
loop
add
mov
pop
cmp
dec
aad
pop
std
repnz
nop
ror
sahf
xchg
xchg
push
sub
push
fs
lock
sub
xor
outsl
fcom
mov
adc
ss
sub
fstpt
bnd
clc
popa
imul
xchg
lea
mov
jl
fmul
lahf
push
popf
div
cmp
pop
out
cltd
pop
aad
repnz
stos
arpl
rcrl
jle
xchg
pop
outsl
mov
out
pop
cmp
scas
cmp
outsb
jne
mov
inc
imul
test
or
mov
in
mov
pop
push
test
fdivrp
dec
cs
lret
cmpsb
shrl
dec
int3
inc
insl
out
push
and
mov
mov
rclb
inc
adc
xchg
mov
inc
jmp
mov
jbe
test
pop
bound
roll
inc
sbb
repnz
dec
xchg
pop
ljmp
jne
jne
adc
lea
push
sub
dec
xchg
lahf
sub
addr16
mov
fiaddl
pop
sbb
lock
mov
popa
faddl
loope
cmp
shlb
arpl
cld
mov
hlt
jecxz
aas
mov
sbb
pushf
mov
sub
nop
sbb
xchg
lods
decb
push
sbb
ja
sarl
fisttpll
enter
outsb
sub
popa
inc
pop
cmp
and
sbb
and
pop
daa
popf
test
inc
int3
repz
iret
movsl
jp
mov
pop
inc
gs
cs
add
add
push
cmp
rcrb
sub
call
add
orl
pop
dec
loopne
xor
sub
jp
pop
or
lahf
in
mov
je
ss
inc
sub
outsb
add
jmp
int
mov
rcll
mov
orb
test
out
add
cmp
insl
andb
repnz
xor
mov
in
int3
pusha
sub
pop
and
push
inc
ja
cmp
xor
fsubrp
mov
sti
and
dec
insb
jae
flds
lds
add
mov
decb
jl
ss
xchg
xchg
addr16
and
pop
imul
lock
pop
pop
mov
divb
lret
ja
cmp
adc
cli
adc
sbb
lret
xor
and
das
jae
movsb
test
lret
iret
jl
iret
std
inc
push
pusha
sti
jg
push
adc
jne
add
adc
nop
mov
jmp
sbb
ljmp
unpckhps
out
dec
in
lock
inc
fs
sti
fwait
movsb
enter
je
mov
lcall
xor
outsl
xchg
jo
popf
fwait
jno
insb
sbb
decb
lea
xchg
nop
dec
xchg
sub
fildll
hlt
inc
cmpsl
lea
rcrb
jecxz
inc
lods
push
pop
fiadds
call
clc
add
sbb
mov
push
mov
fcoms
pop
xchg
jb
shrl
sbb
inc
fucomp
hlt
or
cmp
test
dec
jecxz
repz
loopne
push
push
mov
fs
sbb
jg
ljmp
aad
rcr
inc
idivb
pop
ret
add
sbb
fstpl
arpl
add
add
dec
jb
dec
dec
popf
xchg
pop
cmp
xor
leave
pmulhuw
mov
enter
test
loope
stc
sbb
addr16
fildl
ret
xchg
lcall
jnp
and
popa
and
stc
xor
sub
fucomip
sub
das
jmp
bound
fsubrp
outsl
call
fmull
cmpsl
fmuls
cld
jno
fstpl
mov
inc
cmp
les
lods
push
lods
ss
mov
xchg
out
cmp
stos
and
je
jb
enter
xchg
pop
test
inc
ficoms
addr16
out
imul
gs
js
call
add
mov
and
shrl
pop
clc
mov
dec
insl
test
dec
add
es
lea
xchg
cmp
sub
loop
push
inc
int3
fcmove
lret
rorl
loop
pop
lock
mov
and
pop
dec
cmc
sub
sub
xchg
mov
ret
inc
mov
mov
inc
loope
sub
pop
mov
inc
popa
and
aas
je
es
jmp
cwtl
xor
stos
pop
jg
dec
mov
ror
jae
scas
dec
add
cmp
rclb
lret
adc
xor
dec
loopne
push
je
loope
in
outsb
mov
int
add
xor
push
cmp
jg
ljmp
adc
ja
cmp
pop
dec
inc
ss
mov
call
pop
stos
inc
inc
leave
fsubrs
scas
out
adc
fmuls
jl
cli
mov
pop
ret
jmp
dec
jecxz
rclb
push
shl
push
xchg
fs
mov
fs
jl
add
fwait
inc
xchg
pop
jp
test
int3
xor
xchg
int3
stos
xchg
mov
mov
or
scas
int3
cmp
sub
jae
ds
xor
into
arpl
and
das
cmp
xlat
xor
daa
cmp
scas
popf
mov
cmp
xlat
jnp
mulb
pop
rcr
sar
lret
adc
fildl
sbb
cmp
cmp
inc
xchg
mov
in
mov
insl
sbb
xlat
or
jns
xchg
or
dec
jns
sbb
inc
sbb
lock
lret
jno
lret
or
add
int3
and
push
xorb
mov
mov
push
mov
pop
xchg
mov
stos
sbbb
out
lods
addb
push
xchg
mov
jbe
pop
xorl
dec
xchg
jb
cmp
cmp
loope
test
mov
stos
aas
nop
add
xchg
std
push
outsb
insl
decl
dec
cmp
xor
insb
sub
inc
xor
insb
fs
xchg
das
sbb
ljmp
and
inc
mov
subb
mov
scas
xchg
roll
ja
fidivs
xor
insb
pop
bound
hlt
adc
shrl
lret
into
imul
testb
mov
adc
adc
lret
lret
push
xchg
ret
jb
push
sti
push
icebp
dec
xchg
add
inc
sub
xchg
adc
clc
js
mov
movsb
je
sub
addr16
push
subl
or
icebp
pop
pop
mov
out
sub
cmpsl
imul
nop
mov
ds
mov
jmp
and
cltd
dec
mov
cmpsb
sbb
stc
mov
ret
mov
inc
xchg
icebp
in
ljmp
sbb
cmc
cmp
sahf
bound
sbb
push
stc
mov
ds
das
jbe
sbb
mov
jb
loope
and
adcl
sub
rolb
jo
ret
lods
testl
lea
pop
rcll
inc
dec
mov
add
add
cmp
jne
xor
jle
mov
frstor
hlt
hlt
fiaddl
out
jae
cli
in
nop
xor
and
aad
cwtl
scas
out
jo
or
add
pop
neg
ljmp
stos
pop
sbb
call
in
in
push
or
dec
jg
xorl
ss
jo
sub
sub
stos
and
mov
inc
mov
fcomps
jmp
les
and
pop
fldl
gs
dec
inc
mov
sbb
fadd
jns
loope
ficoml
fnsave
lcall
or
and
test
outsl
add
dec
jmp
xchg
xlat
adc
and
jge
insb
mov
pop
mov
push
cmc
jg
adc
jle
inc
mov
inc
push
data16
add
inc
enter
daa
sub
ret
pop
push
out
fcoml
aas
jnp
push
mov
or
xlat
xlat
push
inc
lret
ja
dec
or
jecxz
adcl
pop
gs
push
lahf
mov
mov
jbe
xor
push
add
sbb
cmpsb
pushl
sub
add
xlat
pop
xlat
ljmp
pop
cmp
lods
xor
scas
fidivrl
clc
iret
sbb
add
cmp
pop
in
add
and
std
mov
popa
adc
sub
dec
das
sbb
xor
shl
mov
rcr
fisubrs
out
jo
pop
jmp
jg
dec
out
sub
in
popa
into
pop
mov
adc
inc
movsl
fwait
inc
or
xor
dec
mov
iretw
adc
clc
dec
fists
add
fsubs
ret
popa
adc
push
push
xorb
fadd
adc
ss
pop
cld
add
cmpsl
push
subb
mov
sub
fsubl
sub
sbbb
out
dec
ret
fcomp
lret
mov
scas
lea
ror
lods
mov
imul
pusha
push
or
jle
sbb
xchg
xor
scas
mov
arpl
ss
sarb
fdivs
inc
lods
mov
inc
mov
xchg
mov
xchg
cmp
dec
sub
jae
mov
sub
mov
add
loope
fcompp
xchg
out
or
push
pop
push
push
dec
sub
fstl
cs
sub
jns
and
sbb
or
sahf
mov
pop
pop
arpl
test
or
lds
dec
fwait
push
scas
pop
aad
enter
out
outsl
mov
xor
movsb
out
cmp
xchg
ret
jle
push
shrl
mov
mov
push
mov
enter
or
mov
je
aas
lods
pop
stos
sub
sub
xchg
xchg
adc
inc
xor
rcll
xor
aas
adc
xor
mov
rcrl
pop
and
sti
mov
add
arpl
add
dec
xchg
fistps
sbb
xchg
rorb
mov
nop
add
push
inc
xor
cmp
push
hlt
aad
xor
mov
xor
jae
xor
add
out
fwait
cwtl
xor
ficoml
cmpsb
pop
idivb
adc
xchg
pop
push
cmpl
rcrb
inc
adc
jp
jnp
inc
sbb
sarl
enter
test
push
in
scas
jbe
xchg
mov
pop
test
push
push
mov
sub
xchg
dec
cmpsb
push
outsb
xchg
cmc
xor
rorl
jbe
mov
inc
lret
and
je
roll
and
call
jmp
xor
cmp
insl
int3
add
pop
mov
mov
jmp
sbb
aaa
lock
cmp
adc
stos
je
pop
dec
mov
jae
add
das
mov
mov
insb
fistpl
nop
jmp
cmp
jnp
movsl
cmp
stos
cmc
stos
jne
orb
in
aas
fsubrl
xor
cmc
pop
std
das
add
ret
in
inc
pcmpeqw
sub
in
mov
iret
adc
mov
cmp
xchg
or
and
xrelease
add
dec
outsb
cs
lahf
call
fs
push
cmp
cmp
and
cmc
mov
cltd
xchg
stos
pop
outsl
stos
xchg
cmp
repz
pop
outsb
aas
push
pop
inc
aam
arpl
pop
mov
scas
pop
addl
out
jnp
rorl
sbb
stos
xor
sbb
stc
fcmovbe
lret
jge
adc
fwait
ja
cwtl
adc
sub
mov
push
push
dec
out
mov
jbe
stc
lea
cmp
add
cmp
aam
mov
in
gs
subb
outsl
rolb
mov
loop
xor
aas
fmuls
call
pop
call
jno
in
dec
pop
dec
jecxz
and
jle
dec
adc
popa
mov
xchg
push
sbb
movsl
mov
rcrb
sub
push
add
ror
aam
sbb
jle
add
or
lahf
js
push
aaa
xchg
shl
sub
and
ret
ret
inc
inc
dec
xor
dec
jbe
lahf
out
mov
scas
jge
filds
mov
das
int
sbb
xor
pop
mov
sub
jecxz
cmp
or
lcall
sarb
dec
mov
cmp
je
push
lods
movsb
cli
adc
cmp
add
testb
in
push
shlb
push
imul
mov
jl
mov
sbb
xchg
js
pop
jno
xlat
arpl
in
add
adc
in
je
add
les
pushf
arpl
push
aas
sub
ret
or
add
pushf
repz
xor
int
lret
push
outsb
or
sub
and
mov
push
mov
cmp
pusha
mov
cmp
mov
rcll
jae
xchg
xchg
add
cmpb
and
imul
jae
daa
insb
dec
arpl
test
outsb
adc
subl
aam
jnp
jp
jp
fcompl
bound
or
jp
out
sub
imul
rol
mov
adc
cwtl
sbb
test
push
gs
push
sub
aad
lds
leave
sbb
cs
fcompl
and
pop
pop
push
test
pop
pushfw
bound
out
loope
push
xchg
scas
popa
stos
inc
into
cmpsb
jp
and
dec
jae
out
out
sub
cwtl
xchg
or
adc
test
nop
decl
or
cli
lret
in
xor
stc
xchg
sub
out
popa
out
bound
pop
mov
pop
xchg
push
mov
xor
lahf
xor
into
pop
popa
pop
int
aas
fs
ret
sarl
in
jl
pop
adc
call
test
ret
lock
mov
lcall
jmp
mov
shl
inc
mov
andb
dec
xlat
std
or
mov
test
mov
and
mov
jbe
mov
outsl
cwtl
mov
in
icebp
xor
lcall
scas
and
xchg
push
sub
mov
daa
add
test
jne
pop
out
es
mov
inc
cs
inc
mov
frstor
out
jae
bound
pop
mov
jp
cmp
inc
lea
aam
inc
mov
test
cmp
mov
stc
push
push
aad
pop
dec
sbb
repz
cwtl
jge
sarb
fisubl
mov
cmpsb
xchg
sbb
xor
addr16
lcall
pop
repz
std
pop
and
stos
inc
ret
daa
xlat
sbb
sub
lods
sbb
ss
shll
xchg
test
andb
out
rorl
mov
jnp
push
lcall
les
outsl
pop
jnp
movsl
popa
pusha
les
push
sub
jne
into
dec
mov
mov
push
pop
popf
inc
lds
mov
xorps
fidivl
mov
insb
jl
xlat
shl
jns
stos
inc
or
int
cmpsl
lret
imul
sahf
decb
push
call
bound
push
idiv
popf
mov
lods
rcrl
repnz
dec
sbb
adc
in
pop
xchg
mov
adc
fcmovb
mov
rclb
sub
stc
mov
push
sub
mov
jmp
rolb
shll
aad
loopne
xor
shrb
lock
mov
jmp
into
mov
test
dec
enter
sub
repz
cmp
loop
imul
jne
jge
add
mov
inc
or
mov
fsts
cmpsb
push
into
icebp
repz
call
adcb
ret
jne
stos
clc
ja
push
shll
out
mov
add
sti
test
xor
shlb
sub
push
cld
lods
cmp
adc
stos
sub
and
xchg
mov
mov
jle
cld
xchg
iret
pusha
std
idivl
mov
das
xor
adc
adc
sahf
dec
lods
pop
adc
adc
mov
rorb
cmp
loop
pop
cld
out
andb
xchg
mov
xchg
jne
pop
mov
cmpsb
add
add
fists
mov
scas
out
mov
jae
in
loope
mov
jmp
dec
imul
repz
mov
jecxz
sbb
int
mov
cmpl
std
hlt
and
stos
push
scas
std
scas
inc
rol
enter
jl
mov
pop
xor
arpl
incb
repnz
jne
xchg
jecxz
sbb
fcmove
idivl
and
cmp
mov
lcall
jge
js
sar
and
out
cmp
cmp
xchg
mov
stos
dec
xchg
add
int
scas
pop
sarl
mov
call
in
jnp
test
and
addl
jle
mov
xchg
cmp
and
sbb
mulb
mov
popl
ret
outsb
lods
adc
pop
leave
test
lds
les
aaa
ret
sub
push
ret
push
loop
cwtl
sbb
xor
mov
les
mov
nop
pop
call
das
out
dec
and
and
and
dec
cwtl
dec
es
rorb
push
push
shlb
adc
sbb
add
test
or
hlt
push
jnp
hlt
loop
sbb
sbb
lcall
lods
add
scas
adc
out
iret
jne
jb
negl
jle
add
add
xchg
insb
call
int3
adc
cmc
push
popa
clc
ds
test
or
jl
and
lcall
fcoms
lret
jne
sub
movsb
mov
stos
add
dec
repz
xor
out
jmp
into
data16
bnd
bound
or
int
loop
ds
sahf
mov
int3
push
mov
leave
addr16
xchg
in
push
ds
data16
out
push
sub
lds
add
fisttpl
sbb
sbb
es
jecxz
lods
add
sbb
fidivs
outsl
lret
pushf
into
push
lret
jecxz
mov
xchg
pop
scas
aaa
movsb
mov
test
repz
sub
mov
repnz
adc
test
add
pop
cmp
les
lret
dec
and
int3
rcrl
cs
jmp
je
loopne
int3
pop
stc
push
sbb
leave
in
pop
pop
jecxz
adc
push
int
ror
flds
cmp
push
jnp
mov
mov
insl
pop
sti
and
in
data16
ds
fistpl
jo
jbe
je
adc
jae
xchg
lea
scas
pop
in
sub
push
pop
lret
inc
outsb
cmp
or
xor
jns
jg
in
jmp
add
std
addr16
and
rolb
mov
aam
int
sbb
lcall
and
jge
or
dec
adc
int
aad
mov
ss
xor
cmpsb
sbb
inc
cli
fisubs
jg
pushf
jns
rcll
mul
icebp
and
xchg
pop
add
sbb
adc
push
mov
push
jg
sub
add
mov
in
out
or
xor
mov
pop
das
inc
outsb
repnz
dec
jge
mov
or
jne
xchg
pop
sbb
hlt
xlat
pushf
adc
xchg
xor
or
stos
jo
mov
hlt
filds
shufps
lock
and
les
mov
jae
sub
lock
mov
inc
aaa
mov
ror
adc
loop
test
sahf
dec
int3
stc
fsubp
mov
and
fs
sub
cmpb
cmp
fadd
cli
jecxz
inc
mov
popa
push
out
scas
shlb
cmovle
lahf
xchg
std
and
aam
xor
dec
jmp
mov
push
mov
jns
xchg
insb
inc
stc
mov
dec
stc
js
sbb
emms
push
lahf
mov
push
lea
aam
adc
pop
daa
int3
xchg
ficomps
add
mov
ret
cmp
fmull
mov
and
daa
out
popf
pop
rclb
notl
mov
rcrb
push
add
mov
sub
adcb
cmp
sahf
and
jo
dec
jns
js
cmp
push
inc
ss
xchg
push
faddl
lods
data16
in
inc
adc
out
loopne
jmp
cwtl
cmp
sub
andb
loope
into
pop
call
adc
mov
in
popf
test
xorb
pop
mov
xchg
inc
cmp
ja
aas
push
rcll
outsl
pop
mov
icebp
add
or
jbe
into
les
jbe
rcrb
lret
jg
jge
xchg
xor
jo
jo
mov
popf
rcrb
cmp
mov
in
aam
mov
fcoms
inc
xorb
push
out
and
jp
shl
or
jbe
out
stos
xlat
jbe
xchg
in
stc
mov
dec
jne
and
shrl
mov
push
adc
adc
xchg
enter
dec
lcall
gs
daa
jne
push
xor
dec
inc
jmp
cld
sahf
arpl
je
fiadds
sbb
xor
lcall
movsl
jnp
and
icebp
xor
rcrb
enter
push
fildll
pop
inc
mov
cmp
outsl
adc
fdivr
cmpsb
push
mov
push
scas
xchg
fwait
loop
mov
sub
aas
mov
jo
lods
pop
fs
xor
jbe
sbb
mov
or
inc
mov
sub
ret
shll
sub
sbb
shrl
mov
sub
cmp
imul
mov
jbe,pt
jns
xor
ret
pop
ljmp
lret
add
add
mov
shlb
daa
rcr
call
mov
xchg
dec
xchg
and
or
mov
shr
lock
mov
adc
pushf
xor
mov
daa
repnz
sarl
jecxz
cmp
and
lock
adc
xor
jne
int
test
negl
push
shrl
dec
xchg
fwait
cltd
movb
xchg
mov
push
sub
int3
mov
ja
jo
jl
sub
add
push
adc
out
les
test
fistps
nop
cli
or
pop
adc
stc
aam
sub
inc
addb
aaa
push
jnp
inc
xchg
ds
mov
pushf
icebp
std
jae
cmp
mov
sti
into
imul
and
xor
push
das
out
jnp
add
outsl
movsb
cmp
adc
loope
xchg
cmp
sbb
mov
sahf
les
and
xchg
cmpl
adc
cld
sti
mov
mov
push
add
xor
ds
add
insl
push
adc
mov
sub
dec
mov
pop
ret
jmp
add
sbb
flds
pop
xchg
mov
cmpsb
and
ds
cmp
pusha
and
mov
iret
adc
test
testb
cmpsl
insl
insb
inc
stc
or
mov
jo
mov
inc
push
xlat
cmpb
pop
mov
aam
cmp
ja
xlat
jne
cld
ds
mov
jns
push
pop
jg
bound
movsb
push
mov
sbbl
dec
push
mov
mov
push
lret
adc
mov
mov
stos
mov
aam
xchg
xorl
jns
lods
jp
xor
xor
push
xor
sbb
shlb
data16
mov
hlt
loope
sub
arpl
dec
daa
xchg
xchg
es
inc
das
mov
pop
dec
cltd
pop
fldcw
sarb
jle
pop
and
mov
or
push
cwtl
sbb
cvtdq2ps
jle
int
sbb
test
loop
xchg
repnz
jns
in
in
xor
sbb
add
les
dec
mov
fistps
shl
sub
imul
std
jno
ret
xchg
sbb
sahf
call
sahf
cmp
pop
cs
cmp
xchg
adc
shll
cmpsb
jb
add
addr16
mov
xchg
push
arpl
shrl
mov
mov
lcall
mov
jb
adc
mov
jle
arpl
scas
movsl
arpl
dec
and
out
jno
inc
inc
push
frstor
out
adc
je
cmpsl
cwtl
cmp
sbb
into
std
mov
int3
jecxz
xchg
stc
sub
nop
lods
or
cmp
out
dec
iret
add
mov
dec
and
addr16
addr16
xor
ret
xchg
sub
lahf
cmc
es
lcall
add
outsl
push
and
adc
mov
or
in
clc
repz
push
xor
xchg
je
pop
sarl
jns
mov
pop
int3
ror
add
adc
jmp
dec
lods
push
mov
addr16
sbb
lds
int3
test
idiv
cmp
outsl
in
cli
mov
enter
gs
sti
faddl
ret
sub
cmp
pop
jo
shlb
and
push
pop
mov
push
fsubl
jecxz
fiadds
pusha
mov
jno
cmpsb
jns
gs
jg
cwtl
mov
adc
mov
jmp
test
mov
rorb
push
pop
and
std
and
les
lahf
push
std
or
jo
dec
mov
popf
dec
jle
pushw
mov
push
std
lea
adc
xlat
and
sub
stc
imul
daa
inc
aad
jmp
and
push
arpl
and
int3
lahf
add
or
out
dec
out
push
and
sbb
mov
pop
repz
insb
loop
cmc
incl
xlat
sbb
dec
fcoms
jns
js
mov
xchg
sub
mov
sbb
or
inc
rcr
pop
sbb
pop
inc
or
adc
fstl
in
jae
insl
je
stc
iret
pop
shll
sub
call
sub
cmp
repnz
lret
in
adc
test
pop
adc
jg
loope
mov
and
out
push
pop
icebp
push
outsb
sahf
jmp
ja
xor
fcomps
and
test
dec
gs
mov
mov
jle
and
mov
test
shll
icebp
insl
mov
int3
mov
pushf
cmp
mov
xchg
add
fwait
rorb
sbb
pop
mov
mov
hlt
shlb
pop
lcall
js
sbb
orl
add
lock
add
lock
dec
icebp
imul
pop
sub
cmpsb
ret
adc
rorb
mov
or
sbb
aas
or
je
fnsave
sbb
popf
push
shl
inc
cmpsb
sahf
test
lcall
iret
push
shl
push
add
iret
jp
movsb
sbb
mov
jecxz
push
mov
or
les
dec
mov
ja
lds
pop
fwait
cmp
push
mov
push
mov
nop
mov
push
rclb
sarb
es
push
adc
fimull
data16
mov
std
mov
lods
idivb
iret
add
int
test
sahf
mov
aaa
fwait
mov
mov
jb
mov
pop
cmpsl
xor
pop
sbb
in
pop
out
mov
push
mov
ljmp
cmp
filds
fiadds
xor
push
div
jo
inc
xchg
imul
out
push
mull
inc
lds
jo
add
ljmp
repnz
call
cmpl
xlat
repnz
int3
dec
and
mov
test
adc
add
jae
into
mov
fadds
pop
mov
out
pop
pop
add
pop
shl
mov
cmpsl
hlt
lahf
sbb
xlat
cltd
scas
adc
mov
push
je
js
stos
jmp
pop
into
movb
mov
ds
fs
cmp
stc
cld
jno
or
in
mov
clc
jbe
ja
movsb
sub
cli
adcl
ret
sub
sbb
or
arpl
shrb
cld
pop
xor
clc
test
push
mov
push
shl
int
divl
mov
les
and
popa
and
mov
dec
push
movsb
idiv
sarb
jecxz
and
out
inc
popf
mov
push
out
out
movsb
je
and
std
adc
cmp
jle
inc
jb
mov
outsl
sbb
fldl
jge
fs
scas
xor
and
lahf
rol
enter
mov
loope
jmp
sahf
mov
fstl
cmpsb
add
jne
pop
scas
ljmp
ljmp
gs
cwtl
pop
pop
dec
adc
test
test
cmc
cltd
mov
adc
inc
mov
inc
sub
loop
mov
adc
jecxz
mov
insl
test
and
jo
test
ds
icebp
push
neg
loop
mov
mov
mov
cmp
nop
aam
jmp
ret
lea
decl
sahf
xchg
sub
imul
clc
pop
add
and
es
jbe
xorl
jmp
mov
mov
jecxz
fs
mov
mov
repz
dec
push
call
mov
jns
push
sub
xor
jmp
push
inc
lret
mov
shrb
jb
push
cmp
add
popa
outsb
and
fiadds
mov
dec
pop
jl
inc
jae
push
pop
mov
xorl
ja
or
gs
mov
gs
in
fwait
jle
repnz
jecxz
roll
hlt
sub
and
and
in
sti
and
and
mov
repnz
jbe
cmpsb
sbb
adc
fs
ret
divb
inc
push
cs
test
sub
movsl
out
popf
ret
loopne
insl
outsl
push
mov
iret
test
pop
xor
into
outsb
and
ljmp
inc
or
mov
adcl
jnp
dec
leave
sbb
or
sahf
test
push
sysenter
addr16
mov
aad
nop
dec
mov
jno
mov
xlat
roll
jle
jp
stos
lret
data16
lods
pop
or
jne
fisubrl
das
pop
imul
sub
int
xor
shlb
out
or
sub
fdivr
and
push
mov
or
lock
shrb
or
into
stos
adc
sbb
jae
xor
int3
jne
or
test
inc
cld
jnp
mov
test
jp
or
mov
adc
inc
mov
jp
or
cmpsl
ret
mov
shrb
int3
pushf
jae
ret
lock
cwtl
add
or
pop
pop
sbb
frstor
ljmp
fildll
mov
or
push
xchg
rclb
jne
cld
call
xchg
pop
je
ljmp
test
fnstenv
pushf
cmp
mov
push
jmp
ds
fmuls
xor
inc
mov
pop
enter
mov
neg
cld
cli
arpl
loopne
sarb
push
shl
stc
xchg
pop
pop
pop
sub
mov
pusha
addr16
lret
inc
adc
adc
mov
push
push
jae
sbb
movsb
sahf
xchg
ljmp
lret
mov
inc
pop
jns
inc
repnz
fadd
std
fwait
gs
inc
imulb
sbb
adc
cmp
push
minps
mov
mov
inc
int3
loop
adc
in
test
and
sub
fmulp
inc
adc
mov
pop
std
js
mov
push
stos
fs
or
cmp
mov
mov
sub
test
xchg
enter
fmul
mov
mov
bnd
into
jmp
pop
xchg
mov
cmp
outsl
loope
cltd
stc
imul
adc
pop
add
cli
nop
cmp
test
adc
movsb
sub
or
ljmp
loopne
xchg
ret
aas
xor
hlt
xor
sarl
cmp
xchg
pop
int
mov
nop
mov
cmp
das
lea
les
jle
dec
cwtl
push
push
js
push
sub
iret
pop
aam
out
pushf
pop
xrelease
and
fcoms
push
les
cwtl
mov
cli
test
add
jl
inc
cmp
fidivs
and
sub
out
daa
push
mov
data16
mov
pop
pop
shlb
pop
popa
add
cmp
mov
std
gs
xchg
repnz
or
lcall
les
iret
stos
inc
stc
mov
sbb
sbbl
aad
push
xor
pop
into
mov
nop
cld
mov
push
lcall
sti
dec
add
ror
xlat
sti
hlt
inc
adc
lahf
dec
sub
sub
dec
shlb
mov
test
test
call
inc
xchg
jb
testl
gs
push
int3
lret
into
ja
sahf
cmp
fcoms
in
test
dec
pop
inc
inc
xchg
mov
in
repnz
jns
adc
arpl
js
repnz
cmc
hlt
xchg
rcr
jnp
addb
cmpsb
repnz
outsl
pop
dec
pop
cld
pop
fldl
adc
jmp
and
cmp
inc
cltd
bnd
mov
je
xor
test
pushf
cwtl
aas
outsb
add
push
imul
pop
jns
sbb
dec
fsubrp
stc
xorw
icebp
aaa
in
inc
push
adc
in
std
mov
xor
loope
pop
rcrl
fsubr
cmpb
lods
xor
pushf
cld
or
pop
dec
xchg
mov
add
ret
sarl
cli
mov
aam
fwait
in
push
jge
repz
sub
xchg
jne,pn
xor
jmp
xor
repnz
dec
arpl
mov
cld
mov
lods
fisubs
insb
mov
in
stos
nop
je
out
jmp
cmp
sbb
out
jl
arpl
sti
sbb
cmp
testb
add
adc
and
mov
or
mov
inc
cmp
fdiv
mov
cmp
cmp
insl
rolb
adc
lods
xorl
loop
es
add
inc
xor
pop
mov
cmp
inc
mov
mov
adc
scas
adc
jb
mov
add
xor
dec
pushf
cmp
inc
mov
cmp
sahf
mov
mov
movsb
and
or
and
fiaddl
lea
jne
test
push
out
sbb
cmpsl
pop
cmc
mov
fildll
cwtl
dec
jp
and
lcall
test
cmp
lret
fucomp
push
out
std
cwtl
js
cmp
std
stc
mov
dec
rclb
cmp
mov
add
daa
add
shlb
push
or
lret
imul
imul
fnstsw
xchg
adc
jmp
mov
dec
jle
or
insb
insl
jnp
jle
mov
gs
in
dec
imul
and
push
addr16
dec
or
pop
or
or
cmpsb
xor
pop
les
inc
mov
stc
lret
mov
clc
push
jb
pushf
and
scas
stc
stc
shlb
sarb
cmp
push
leave
ja
icebp
push
xor
sbb
push
sar
insb
clc
notl
push
ds
js
insl
adc
inc
adc
xchg
jp
xchg
jns
mov
adc
or
out
jge
loop
addr16
gs
pop
mov
pop
jne
xor
or
jns
xor
out
add
xchg
xor
leave
adc
addr16
pusha
fs
mov
cwtl
out
adc
mov
adc
sti
sbb
stc
test
out
testl
lret
sbb
mov
sub
cli
xchg
pusha
xchg
push
std
inc
fidivrl
dec
outsl
testl
inc
ja
or
dec
movsl
pop
pop
call
pop
testb
xor
aaa
xor
lret
std
in
jg
add
lret
sar
popl
leave
pop
mov
popf
iret
xchg
and
mov
and
stos
int3
xchg
fs
jl
mov
je
adc
mov
mov
leave
or
adc
jp
cmpsb
push
sti
bound
pop
pop
imulb
xchg
ret
add
js
jns
jmp
call
lods
adc
xor
movsl
out
inc
adc
mov
or
fldt
inc
mov
aad
ja
xchg
arpl
add
into
aaa
clc
jecxz
lods
add
mov
ds
push
imulb
fnstcw
and
jmp
loope
aad
xchg
xor
mov
es
add
cmpsb
mov
pop
sbb
adc
or
popf
mov
xchg
and
hlt
jae
dec
or
and
xchg
mov
aaa
dec
adc
insb
inc
pop
adc
xchg
and
andl
mov
dec
mov
nop
cmp
jmp
mov
cld
fisubrl
lret
push
ret
jecxz
adc
ret
rcll
enter
pop
cmp
scas
pop
adc
inc
jecxz
push
dec
ficoml
mov
and
fists
sar
push
imul
inc
out
push
adc
out
cmp
popw
xchg
mov
cmc
xchg
pop
mov
cli
mov
mov
ret
and
out
pop
rol
adc
push
ret
inc
dec
int
mov
or
ret
push
sti
inc
push
fcomi
or
xchg
and
int
daa
and
mov
in
scas
inc
fldenv
filds
inc
add
das
mov
jle
dec
std
fwait
sbb
push
sub
add
data16
push
jmp
inc
push
cmp
xchg
mov
subl
pusha
andb
add
cmpb
pop
adc
add
xor
mov
mov
jecxz
fs
outsb
pavgb
addl
cmp
sar
lods
inc
mov
test
lret
pop
and
pusha
movsl
mov
pop
adc
xchg
idivb
mov
lods
mov
push
jecxz
cmp
mov
mov
out
insl
subb
inc
ja
inc
aas
mov
pop
jo
or
mov
add
aad
jb
or
jo
fcomps
lds
adc
repz
fwait
jno
clc
mov
and
push
fmulp
addr16
rcrb
push
mov
jmp
fwait
push
or
in
adc
cmpsb
cli
stc
aam
mov
jo
mov
data16
inc
test
ss
iret
sub
lods
dec
lods
jnp
test
ret
adc
jmp
sub
shll
sub
sub
or
xchg
xor
lock
ss
out
mov
imul
stos
sbb
mov
add
in
push
popf
dec
xor
repz
and
cmovne
out
cld
dec
or
sub
mov
or
cld
pop
mov
sub
into
ljmp
xchg
js
jmp
out
ret
jmp
ficoms
xor
push
int3
add
ret
in
lahf
mov
imul
pop
adc
scas
pop
inc
sbb
cmp
repz
dec
push
mov
xor
jmp
scas
stos
pop
popa
push
mov
insb
pop
mov
ljmp
callw
mov
push
adc
and
les
loop
fs
movsb
mov
rcrb
repnz
imul
mov
jecxz
inc
and
mov
push
dec
inc
jmp
mov
inc
loop
rolb
add
cmc
xchg
out
lock
pop
shlb
xor
daa
mov
mov
or
ja
sub
pop
outsl
sub
mov
inc
lock
xchg
fdivrs
add
stos
movsb
jno
cmp
sarb
adc
hlt
or
arpl
cli
ljmp
clc
outsl
fimull
inc
xchg
scas
sub
fisubrs
cwtl
add
mov
sub
and
cmp
lcall
daa
sub
ret
movsb
std
xlat
adc
enter
fstpt
pop
sbb
aaa
jp
dec
sub
test
stc
movsb
add
aas
push
cs
rcl
rcrb
in
add
push
clc
pop
ret
div
test
imul
add
xchg
aaa
adc
mov
movl
pusha
cmp
xchg
inc
out
lcall
popf
fwait
or
fsubl
mov
dec
xchg
push
add
xchg
and
movsb
fbstp
loop
les
scas
notl
and
sub
pop
push
xor
fisubrs
insb
movsb
cld
mov
pusha
sbb
test
sbb
mov
fistps
std
mov
jnp
adc
sub
test
inc
xor
sarl
xor
aaa
jmp
jmp
cwtl
mov
lret
push
popf
or
xor
push
jg
sub
mov
sbb
fiaddl
popa
loopne
fisubrl
push
mov
ret
adc
fwait
lcall
cmpb
fsubl
jno
push
jle
sbb
sbb
into
stos
xchg
cmp
sbb
push
call
in
xorl
in
pusha
out
pop
mov
xchg
jno
xchg
xchg
aad
jl
ljmp
mov
sti
jmp
jnp
hlt
or
push
lcall
pop
or
push
sbb
repz
mov
pop
mov
adc
cmc
ljmp
aam
inc
movsl
nop
adc
push
fcoml
cmpsb
push
outsb
xor
and
mov
sub
mov
cmc
clc
push
pop
mov
inc
mov
pop
icebp
pop
sbb
sbb
sbb
add
in
loopne
outsb
fistpl
mov
loop
insb
insl
lock
cmc
stos
push
clc
inc
ds
push
jle
pusha
sarl
rorb
int
push
repz
pop
jo
cmp
cltd
std
jecxz
mov
cmpxchg
sub
xor
and
push
push
bound
cmp
sbb
dec
repz
mov
lds
mov
lret
ja
mov
sbb
jae
jno
fisubs
pop
jbe
sub
adc
jmp
push
enter
rorl
repnz
scas
mov
mov
add
bound
scas
dec
jmp
mov
add
push
test
xchg
mov
mov
jge
add
inc
mov
xor
scas
loop
les
fildl
xchg
int
adc
add
xlat
and
mov
jle
call
jne
or
push
int
inc
scas
loope
std
jmp
mov
push
xchg
jle
mov
jecxz
stos
cld
in
xor
cmp
inc
lock
cmpsb
gs
int3
xor
push
adc
and
xor
add
movsb
test
push
popa
and
pop
insl
test
lea
push
dec
adc
shlb
inc
dec
out
inc
stc
mov
push
adc
sti
mov
inc
push
clc
hlt
mov
les
lods
in
pop
pop
in
dec
push
mov
fnsave
xor
cmc
aaa
inc
movsl
pop
push
in
outsb
add
movsl
jne
dec
adc
fcomps
out
outsb
jae
xchg
popf
loop
sub
push
xor
dec
sar
fisubl
nop
rorl
jge
xchg
ds
jne
jg
jbe
test
loopne
sub
mov
mov
and
sbb
call
xchg
or
inc
xchg
loope
dec
lcall
stc
js
or
into
testb
pop
cmp
adc
jo
jbe
xor
pop
daa
cmp
mov
push
cmp
clc
shll
mov
es
jo
in
lock
popl
mov
mov
inc
mov
std
mov
sti
xchg
imul
jecxz
dec
std
fmuls
push
xor
xchg
and
push
fdivp
std
out
mov
push
jns
pusha
dec
es
mov
adc
or
pop
pop
in
les
add
xchg
xor
cmpsl
fisttps
ret
adc
push
adc
sub
and
mov
int
insb
pop
aad
inc
push
dec
pop
dec
sarb
push
loope
out
push
jne
sbb
ret
in
mulb
mov
inc
xchg
mov
sub
add
dec
fnstenv
inc
push
cmp
addl
sti
push
enter
dec
adc
jb
aaa
in
cs
cmpsb
loope
lret
popf
sbb
orl
jge
ds
test
pop
push
cmp
fistps
pop
xor
pop
add
ljmp
lret
pop
jb
rcrl
call
out
mov
mov
mov
push
ret
cmp
pop
or
test
pop
movl
push
adc
xchg
jmp
scas
popf
inc
sub
into
sbb
mov
sub
mov
mov
xchg
pop
sub
push
inc
lret
mov
mov
xchg
mov
divl
sbb
bnd
je
stos
mov
push
mov
fildll
sbb
jge
imul
les
std
cmp
mov
into
xor
test
pop
sub
xor
xchg
push
jl
pop
cwtl
xor
xor
into
cmpsl
push
xor
fimuls
in
lea
test
pop
repnz
fstpt
js
in
mov
jl
adc
jbe
mov
xor
dec
push
insb
jno
scas
mov
xchg
ss
xor
inc
dec
mov
dec
xlat
js
pop
neg
lock
loop
loopne
adc
dec
mov
dec
test
dec
xor
sub
mov
aad
ja
adc
pop
add
xchg
lret
pushl
enter
pop
mov
ljmp
push
sub
fsubrl
popf
dec
mov
repnz
mov
dec
inc
popa
add
fldt
cmp
repz
lahf
in
aad
mov
jle
lahf
dec
adc
dec
fidivrs
cmp
js,pn
mov
mov
addb
loop
push
xchg
pop
add
daa
dec
lret
sbbb
or
xor
xchg
or
mov
mov
mull
inc
mov
sbb
push
pop
xchg
and
xchg
jne
or
je
and
push
in
sbb
faddl
int
int3
pop
cltd
out
lea
fcoml
pop
xchg
pop
paddsb
cli
jmp
pop
fcmove
lcall
mov
sbb
inc
ret
xor
lods
insb
and
mov
test
inc
test
inc
stc
dec
adc
add
or
gs
inc
ret
imul
fmul
aas
test
insb
inc
jo
ret
ret
icebp
ret
shrb
xor
xlat
inc
jle
out
imul
fnsave
shl
or
push
scas
fdivrl
adc
out
push
inc
mov
int3
add
loopne
mov
test
pop
leave
imul
inc
into
jge
cmp
pop
popf
mov
lock
mov
leave
jp
cld
cmc
dec
ljmp
ror
jbe
in
pushf
fistpl
lock
test
lock
cmp
xchg
fcomip
sahf
popf
push
mov
dec
aad
js
mov
fimull
cmp
cmp
or
bound
inc
cmp
stc
xchg
out
xchg
xchg
xchg
sub
xor
fistl
pop
pop
or
and
pop
add
inc
sbb
test
aam
mov
rep
xorl
push
jg
dec
lods
xchg
out
mov
rcrb
idivb
fisubl
aaa
mov
negl
shlb
mov
jle
xor
sarb
mov
repz
std
call
jb
out
cmp
mov
and
das
jo
jno
aaa
fwait
repnz
mov
ds
inc
divl
inc
pop
lcall
inc
stos
out
add
ljmp
lahf
test
sub
jb
adc
sbb
mov
xor
nop
push
pop
mov
sub
ss
jnp
les
cmpl
loopne
jns
shlb
and
scas
xrelease
mov
sub
decb
or
mov
dec
ja
cmc
jg
aad
sarl
in
bound
ficoms
call
cmp
je
addb
mov
mov
cmpsb
stos
jo
add
push
aad
sub
sub
rcll
xor
add
adc
in
xchg
mov
andl
jo
pusha
daa
sbbb
jb
push
sbb
call
push
dec
xchg
pop
push
fs
jno
cli
dec
jg
pop
inc
int3
nop
outsl
xchg
outsl
push
dec
jle
adc
push
push
pusha
rcrb
xor
xlat
mov
ret
push
sbb
mov
adc
gs
loop
jo
add
pop
jl
and
shll
test
arpl
iret
jle
out
rdpmc
subl
xorl
jl
hlt
and
stos
fistpll
push
cmc
divl
and
outsl
mov
icebp
xchg
mov
sbb
arpl
shlw
dec
out
xchg
mov
xlat
hlt
dec
xchg
push
pop
jge
sbb
test
add
xor
mov
mov
push
aaa
repz
and
inc
out
cmpsb
jle
xchg
sub
mov
cmpsl
scas
inc
sbb
lods
decl
push
jp
inc
or
cld
xor
mov
lret
call
adc
icebp
xchg
in
cmc
fcoml
sahf
xchg
mov
fisubl
cmp
push
int3
xchg
xor
mov
cmp
sahf
mov
shll
lcall
adc
sbb
inc
mov
je
xchg
fwait
das
jmp
aas
je
pop
aaa
mov
repz
daa
sbb
fldenv
cmp
inc
xor
rorb
cmovno
jne
pop
sub
mov
push
cmp
ret
dec
lcall
stos
in
cltd
ret
pop
dec
xor
xchg
sub
pop
inc
pop
mov
push
pop
leave
fcmovbe
jb
lret
daa
cli
aam
outsb
popl
cli
call
cmp
and
jbe
bound
lock
jns
xchg
ret
addl
stc
pop
cmp
pop
adc
sub
sub
jmp
mov
jmp
mov
dec
or
add
lds
mov
rol
cmp
and
and
fdivs
paddb
sbb
testl
cs
cmpsl
push
cld
mov
fadd
xchg
pop
lret
pop
mov
and
and
push
lds
and
push
daa
lea
ret
ljmp
xchg
into
push
push
outsl
push
jb
call
int
mov
mov
stos
sbb
repz
and
push
add
shll
push
shl
popf
cmp
lret
pop
aad
outsl
xlat
test
and
sysret
push
cmp
popa
and
repz
sub
popf
pop
gs
mov
mov
push
mov
push
pop
fcomps
fbld
add
sub
sub
push
mov
insb
xchg
lahf
in
and
inc
out
outsl
mov
and
sbb
decb
add
nop
push
mov
cmp
cmpsl
and
nopl
mov
pop
cwtl
js
ret
ret
hlt
into
ret
or
pop
int
outsl
cwtl
jns
sub
push
jecxz
or
out
addr16
sti
cli
dec
inc
push
ret
push
arpl
push
sbb
ss
push
sbb
add
test
mov
les
mulb
jle
inc
dec
inc
in
and
call
jg,pn
out
dec
and
push
cmpsb
mov
leave
push
sub
rcrb
andl
lea
movl
fcmovu
insl
cmp
pop
pop
mov
cmc
add
mov
push
xchg
rclb
mov
out
jb
xchg
jnp
or
imulb
in
mov
mov
push
addr16
mov
sbb
xchg
mov
pop
aas
dec
cmc
or
bound
repz
cltd
mov
sub
mov
lahf
in
dec
scas
icebp
in
rcrb
loopne
jnp
cltd
mov
movsl
sti
push
xchg
nop
sarb
out
push
adc
jae
cmpsb
out
cli
push
pop
std
xchg
into
inc
cmc
push
je
sub
in
push
leave
adc
sahf
xor
adc
cmp
add
push
cmp
movsl
ljmp
fistpl
call
je
jmp
adc
mov
jp
es
rorl
jmp
repnz
enter
cmp
push
pop
sbb
mov
aaa
ja
mov
outsb
mov
add
leave
cmpsl
inc
jno
adc
loope
cmpsb
push
cwtl
shll
outsl
xor
inc
or
dec
repz
mov
sub
divl
jb
les
and
jle,pn
xchg
in
cli
bound
jg
dec
sbb
daa
notb
sbb
insb
sbb
in
or
jnp
ret
push
scas
sbb
out
inc
lret
dec
insl
mov
mov
imul
lahf
subl
lock
adc
push
cmp
and
jge,pn
add
push
nop
pop
xchg
jnp
cmp
arpl
test
mov
test
out
xor
inc
dec
mov
aaa
mov
ja
sub
mov
orl
popa
lret
cld
outsb
dec
mov
xorb
mov
adc
lock
lcall
sbb
mov
std
int3
aad
cmp
jno
cmc
mov
in
scas
push
ja
js
fsubrs
xorb
movsl
xor
fdivrl
divl
push
ljmp
ja
aad
inc
sti
add
mov
and
fists
add
pop
jo
xor
xlat
mov
icebp
sub
pop
lock
cmp
push
adc
les
jge
pop
jmp
in
pop
adc
lret
in
mov
add
aas
outsb
mov
push
clc
sbb
add
aam
inc
mov
adc
or
mov
mov
popa
xor
aaa
ds
sbb
or
sub
idivb
inc
push
data16
inc
or
mov
mov
test
getsec
mov
mov
jns
or
popf
enter
or
xchg
loope
pop
inc
pop
outsb
shll
mov
push
ds
fstps
icebp
rclb
jg
fstps
in
inc
stc
fwait
mov
lahf
pop
or
into
cwtl
lret
frstor
pop
push
dec
out
mov
fidivrs
push
xlat
aam
mov
cmp
mov
popf
fs
inc
adc
and
lahf
shl
lds
add
push
mov
and
lods
xor
imulb
test
pop
test
sbb
nop
fisubs
pop
das
test
inc
sbb
subl
push
pusha
push
fistl
fisttps
cmc
fstpt
cmp
pop
into
xor
xchg
roll
fsin
push
sub
add
stos
push
mov
fisubs
xchg
shrl
decb
sub
add
stos
inc
add
in
int3
scas
xor
mov
jl
inc
dec
rolb
mov
sub
lock
pop
adc
lret
test
sub
ljmp
test
push
fsubrl
jae
push
push
dec
sbb
bound
fisubl
das
push
sub
jmp
add
aas
cmp
stos
fwait
mov
pusha
or
inc
pop
nop
rolb
or
ret
lahf
dec
sarl
pop
xor
arpl
icebp
jmp
outsb
iret
xchg
out
js
stos
push
push
orl
fs
arpl
inc
cld
xchg
aaa
add
clc
sbb
addr16
lock
fwait
jge
pop
mov
jae
xor
cs
inc
xor
xchg
push
or
jl
cld
inc
jns
addr16
mov
mov
sub
mov
inc
aaa
cwtl
fs
xchg
push
fildll
cmpsl
push
aaa
shrb
addr16
les
jmp
mov
pop
adc
dec
addr16
cmp
and
jl
in
dec
adc
push
and
movsb
mov
dec
mov
jne
mov
and
lcall
stos
sbb
and
push
inc
in
inc
push
outsl
lock
push
clc
insb
rcrl
insb
inc
into
imul
sarb
pop
mov
sbb
addb
sbb
cmpsl
push
mov
push
mov
sbb
loopne
insl
xchg
nop
jp
jo
cwtl
out
mov
sbb
cmp
jb
cs
imul
cmp
stos
fnstcw
push
shrb
dec
outsl
mov
sbb
jne
sbb
jb
or
cmpsb
mov
push
popa
gs
mov
sub
rclb
and
adc
jo
mov
cwtl
adc
pop
lfence
adc
dec
insl
xor
dec
ja
or
dec
sti
lods
add
ds
push
in
pop
imul
add
gs
cmp
push
loopne
adc
add
pop
jp
inc
insb
lods
cmp
lods
jne
fidivl
mov
dec
rorb
pop
dec
lea
out
aam
cmp
mov
dec
xchg
enter
lea
cwtl
lock
je
xchg
leave
mov
sbb
ret
clc
jb
and
loop
loop,pn
adc
jmp
loop
lret
push
lahf
std
pop
loop
insb
mov
pushl
add
jecxz
in
fdivrs
mov
in
inc
push
pop
iret
insl
adc
sti
fists
andb
mov
mov
xchg
sub
ret
mov
test
and
shrl
sbbb
dec
xchg
mov
cld
jo
fsubl
mov
test
sarl
add
lcall
push
sub
sbb
fcomi
dec
mov
lea
notl
mov
mov
and
sahf
lcall
jl
or
sub
dec
inc
int
xor
jmp
int3
sub
scas
loop
inc
and
and
jb
cmp
negl
xor
inc
mov
inc
and
jl
cld
sti
in
pop
inc
sbb
push
inc
out
imul
sbb
into
cmp
inc
mov
sbb
fidivl
jecxz
les
or
popa
jmp
mov
ss
pop
xchg
xlat
rol
cmp
lock
adc
xchg
cld
pop
inc
ds
mov
cmc
scas
xchg
or
fcompl
mov
add
cs
dec
add
scas
cli
shrl
mov
jecxz
jg
cmp
mov
pop
xor
outsl
inc
loope
or
push
clc
test
cmc
add
push
shll
sbbb
mov
sub
into
mov
adc
or
nop
sub
cmpsb
shll
imul
and
fcomi
xchg
loop
push
sbb
jl
cld
lock
cmp
fsubrs
sbbb
cwtl
xor
adcb
xchg
lea
inc
xor
mov
fiadds
mov
bound
out
outsb
das
fildl
out
imul
js
pop
mov
call
lods
pop
adc
in
inc
push
mov
sub
test
xchg
jmp
call
mov
jmp
movsb
mov
adc
xchg
popf
xchg
dec
push
mov
inc
push
sub
mov
shrb
fdivr
push
fsincos
or
pop
xor
inc
inc
fistpl
cld
in
cld
dec
repz
lret
inc
push
les
leave
pop
das
dec
addl
leave
movsl
mov
jns
mov
test
mov
mov
fistpl
sarb
jg
xchg
insb
fstps
add
jb
addl
pop
mov
jo
sub
pushf
lods
imul
cmp
je
scas
jg
ret
or
ret
ret
cwtl
mov
sub
dec
push
sub
fnsave
mov
mov
xor
popa
or
add
push
loopne
pop
std
jg
das
push
adc
nop
xor
pop
js
int3
xchg
gs
icebp
mov
mov
lods
popw
mov
xchg
test
je
ljmp
xor
xor
cmpsl
sbb
pusha
or
insb
push
add
nop
inc
out
inc
std
sbb
or
iret
cmp
ljmp
rorb
mov
in
and
outsb
xor
jmp
mov
mov
push
hlt
pusha
clc
dec
add
cld
mov
lock
ret
and
aas
bound
jge
loopne
sbb
aaa
nop
sbb
test
pop
cmp
mov
imul
call
mov
dec
push
or
adc
test
imul
push
add
adc
loop
cmpsl
ljmp
fnsave
aaa
arpl
xchg
xlat
sub
jbe
mov
shlb
xor
arpl
rcl
mov
scas
mov
arpl
push
mov
sti
stc
repz
enter
in
aas
push
lret
xchg
jmp
ret
or
jge
sub
xchg
call
es
sub
pop
jge
cmc
xchg
shrb
enter
cmpb
in
adc
sub
test
ret
loop
fisttpl
mov
or
cmp
inc
sub
cmp
movsb
repz
sbb
mov
ss
subb
cmp
stc
lea
fcmovu
jmp
sahf
and
std
mov
xchg
or
dec
xchg
and
cmc
push
call
xchg
jb
idivb
cmpsb
mov
jnp
push
xchg
push
xchg
push
pop
pop
or
xchg
add
sbb
pop
int3
sub
fs
out
cli
ds
lret
sub
xchg
rcl
outsb
mov
sub
into
mov
and
sbb
pop
mov
adc
mov
xchg
pop
test
xchg
or
loop
mov
fdiv
repz
inc
cmc
in
add
lret
gs
in
mov
fdivrs
loopne
or
mov
jp
jmp
fldl
sbbb
cli
inc
xor
into
movsb
negb
push
or
lcall
test
lahf
cmp
popa
pop
les
sbb
jae
sbb
xchg
test
sub
add
jnp
loop
stos
dec
pop
mov
loop
mov
xchg
or
divl
sub
fisubs
add
jb
add
mov
test
rcll
sub
js
test
test
popf
lret
jne
adc
push
js
mov
cmp
xchg
mov
mov
push
rorl
xchg
loopne
sub
add
mov
pop
popa
mov
movsl
xlat
inc
inc
lods
lods
dec
inc
add
cmp
es
jnp
jmp
lret
lcall
dec
xchg
cwtl
adc
fstl
call
xchg
cmp
push
out
or
cmp
xorl
mov
inc
and
mov
mov
cmp
out
jo
jl
mov
mov
push
nop
and
mov
mov
dec
sbb
inc
jbe
mov
or
daa
cs
mov
cmpb
ret
xchg
test
jno
sbb
mov
cmpsb
dec
or
push
xchg
ljmp
out
jle
xor
inc
jg
mulb
jb
fsts
fwait
ss
rcrl
mov
jl
inc
fbstp
push
jne
rolb
xchg
fwait
cs
xor
adc
inc
xchg
leave
xlat
push
mov
lods
lds
lods
sbb
test
aas
xchg
mov
mov
fcmove
insb
sbb
pushf
xor
or
imul
inc
cmp
test
pop
inc
adc
dec
mov
mov
out
lods
sarb
movsb
std
outsl
fimuls
dec
addl
pop
inc
sbb
popf
es
lret
cmpsl
imul
adc
and
mov
insl
jl
mov
insl
mov
pop
inc
and
pop
fmull
movsl
and
mov
stos
inc
push
dec
mov
sub
mov
icebp
les
xchg
pop
jg
adc
add
je
push
mov
and
aad
in
int
or
push
je
aam
fs
jecxz
add
lods
sbb
cmp
incb
pusha
shl
daa
dec
pop
pop
cmp
sahf
nop
repz
or
or
sbb
in
sub
roll
pop
mov
aas
fldl
push
cmp
pop
cwtl
or
pusha
cmp
xchg
pop
add
sub
fbld
mov
xchg
cmpsl
mov
pop
rcl
clc
addr16
bound
gs
mov
outsb
cmp
imul
mov
outsb
inc
pop
mov
sti
push
cmp
sbb
jmp
jp
jnp
int
mov
out
push
jge
scas
insl
pop
shll
cmp
lock
and
dec
lds
adc
ss
ljmp
jae
lahf
hlt
ret
xchg
addr16
adc
enter
and
test
dec
sti
stc
lods
dec
mov
jb
lahf
pop
js
aaa
jl
jle
lds
jno
jecxz
xor
imulb
mov
pop
add
data16
enter
setne
push
fidivl
cmp
inc
test
imul
dec
data16
dec
pop
dec
sbbl
aas
fadds
popa
lea
xchg
inc
pop
and
je
adc
jle
and
stc
xlat
sbb
test
mov
adc
or
hlt
stos
pop
mov
fnsave
test
repnz
insb
pop
jae
leave
lcall
or
test
stc
push
ljmp
xor
mov
mov
addr16
cmp
test
sub
xchg
xor
push
movsb
and
cltd
mov
xor
loope
sub
sbb
mov
or
sbb
push
jae
ret
addl
jmp
pop
cmp
xchg
in
call
pusha
les
jne
mov
push
aas
dec
cld
sarb
pop
jne
or
aam
mov
pop
addb
mov
testb
loop
dec
mov
xchg
sbb
cmp
in
mov
in
in
scas
add
insl
sti
jge
jmp
jae
mov
mov
ds
mov
sub
sti
xchg
js
cmpl
sti
push
sarb
int3
push
mov
lret
into
into
call
decl
jmp
ja
scas
xchg
nop
neg
in
pop
in
movl
sub
out
cmp
test
dec
jno
jge
mov
mov
or
lahf
lahf
pop
daa
sbb
mov
fisttpll
mov
add
jge
in
and
les
je
lods
inc
lock
outsb
push
imul
outsb
lret
sbb
inc
pop
pop
scas
das
and
jns
cmp
ss
xor
aas
jns
cltd
jmp
aas
jns
cltd
xor
nop
mov
lret
add
loope
pop
sub
push
xchg
bswap
cmp
movsl
dec
push
les
xchg
pushl
mov
or
dec
cmp
sbb
imul
fwait
push
adc
mov
cmp
mov
xor
jb
push
loopne
push
xchg
or
sub
iret
mov
mov
adc
insb
rorb
icebp
ret
fisubl
jne
rcll
push
shrl
mov
fdiv
xchg
pop
push
fcompl
ret
stos
je
lret
sbb
sbb
xchg
lahf
push
sti
call
mov
xor
hlt
sbb
call
push
mov
scas
cmpl
jne
int
stos
je
loope
test
mov
jle
and
pushf
or
or
add
push
cmp
hlt
fsubrp
sbb
mov
loope
xchg
mov
mov
and
test
mov
cmp
mov
push
adc
lret
xchg
mov
jnp
jge
fisttpl
mov
mov
jmp
add
popl
out
xor
and
rcr
ret
xchg
fdivs
fcoms
fildl
and
lods
idivb
rcll
add
and
enter
outsl
pusha
aad
std
or
ss
in
xlat
cltd
pand
xor
shlb
mov
mov
enter
pop
out
lea
test
sbb
cmp
adc
cld
out
inc
ret
sbb
jno
incl
pop
je
pop
cmp
dec
cs
test
push
jnp
add
mov
push
jl
ficompl
pop
xlat
dec
xchg
inc
in
adc
add
jmp
xchg
xchg
sbb
jb
sbb
loope
sbb
cmp
sbb
adc
jl
test
shr
push
cmp
mov
cmp
dec
mov
adc
test
push
lret
adc
cltd
jb
pop
mov
xchg
jecxz
jae
les
std
xchg
into
scas
mov
jl
movsb
leave
mov
jno
mov
xchg
dec
pop
clc
mov
sub
jg
mov
jb
data16
jne
out
pop
add
pop
mov
imul
add
sbb
das
mov
insl
xchg
mov
fcoms
push
addr16
xchg
xor
lcall
je
xchg
lcall
or
jmp
sbb
mov
mov
out
mov
dec
push
sbb
pop
jle
ffreep
pop
pop
scas
dec
mov
mov
and
push
xor
mov
icebp
mov
mov
mov
addr16
pop
fisubrl
cmc
sub
cmp
daa
popa
cmpsb
mov
and
cmp
dec
adc
test
push
cmpsl
popf
add
aaa
mov
insb
pop
subb
out
xchg
int
cmovle
xchg
ljmp
and
out
enter
mov
mov
nop
xchg
insl
xchg
fisubrs
xchg
cmp
lea
pop
sbb
mov
lret
push
pop
int3
outsb
pop
loopne
dec
mov
shll
test
loope
scas
add
fcmovnbe
sbb
mov
dec
push
jp
in
and
or
push
or
pop
sbb
pop
stc
add
or
in
test
mov
ja
push
xor
fisubs
ja
xor
jne
xor
or
adc
ss
and
out
into
inc
loopne
insb
popf
sbb
ret
test
out
adc
pop
adc
add
je
pop
aas
pushl
mov
sbb
jecxz
push
sahf
mov
out
cmpb
pushf
or
in
pop
scas
xchg
shl
adc
arpl
sub
lods
sbb
ljmp
mov
push
cld
inc
leave
xor
lahf
inc
bnd
push
add
or
cltd
mov
xor
loop
je
jb
stos
jp
cmpsb
cmovne
sub
lods
js
push
push
mov
jns
cmp
mov
adc
frstor
std
inc
lock
outsl
loopne
sbb
jp
sbb
scas
daa
gs
fmull
and
mov
jmp
mov
cld
aaa
pop
push
cwtl
mov
lcall
cmp
fnstsw
dec
mov
out
jne
mov
mov
xchg
ss
mov
cwtl
pop
aaa
cld
sbb
push
inc
add
sbb
jmp
xor
fdivs
mov
idivl
dec
cwtl
outsl
and
push
inc
sbb
lcall
push
cmp
xchg
test
mov
repnz
cltd
ss
lret
sti
push
mov
enter
xlat
xor
pop
bound
push
scas
mov
jg
sbb
sub
mov
int3
xchg
sub
popf
fdivs
xor
dec
xor
clc
addb
ja
iret
loope
ds
xor
xlat
xlat
test
int3
push
lods
push
add
mov
jge
jle,pn
jp
inc
mov
mov
loope
add
test
push
fisttps
sarl
mov
adc
or
xchg
repnz
dec
aaa
cmpl
add
xor
mov
push
sbb
in
fldt
sbb
jmp
mov
xor
shlb
mov
adc
xor
jbe
out
cli
ja
out
out
pop
xchg
xor
mov
mov
xlat
mov
push
jo
xor
xchg
clc
and
outsl
pop
mov
sbb
mov
mov
lock
and
jle
stos
sbbb
mov
pop
push
test
pop
jl
mov
mov
adc
enter
or
leave
roll
fs
aam
fdivrl
xor
mov
scas
in
aad
inc
jbe
mov
test
push
push
loopne
fidivl
inc
fstl
adc
xchg
dec
outsl
xor
jmp
inc
pop
std
mov
ja
hlt
jnp
call
lahf
imul
imul
cmp
negb
sub
in
pop
adc
call
inc
pop
cmp
push
flds
adc
popa
rclb
pop
push
sti
mov
sbb
sub
xor
rolb
stos
sbb
pusha
cmpsb
push
shll
shl
out
aaa
movsl
inc
ljmp
cli
cld
mov
outsb
mov
xchg
push
push
movsb
dec
inc
testb
mov
adc
ja
inc
clc
mov
mov
mov
cmp
insl
jb
shrl
testb
pop
fdivs
pop
add
icebp
jmp
insl
push
mov
jmp
cli
nop
das
or
push
mov
arpl
cmp
mov
int
arpl
adc
filds
push
push
aas
mov
out
aaa
or
pop
cwtl
test
sub
cmpsb
inc
mov
fistl
hlt
sbb
pop
adc
pop
jmp
imul
sub
jns
dec
pop
cmp
jmp
gs
imul
sbb
adc
enter
insl
xor
add
aas
xchg
sub
jmp
jbe
xor
or
push
inc
lods
mov
mov
shr
nop
popa
add
mov
adc
roll
xchg
mov
dec
sub
mov
stc
cmpsb
scas
testl
subb
jmp
subl
xchg
rorl
fldenv
push
push
daa
add
lock
icebp
es
les
shl
mov
lret
dec
dec
loope
outsl
xchg
inc
and
inc
adc
push
popa
mov
in
jge
divb
das
push
fisttpl
mov
xlat
mov
xchg
ds
popa
inc
adc
push
not
jo
pop
pop
or
popa
and
in
mov
in
pushf
jo
pusha
jmp
movsb
hlt
out
and
jae
inc
cmpsb
xchg
inc
jge
rorb
fsts
sbb
xor
subb
aam
fisubl
mov
xor
inc
mov
popa
and
pop
or
mov
and
mov
inc
add
jnp
insl
sbb
xor
aaa
xor
pushw
inc
pop
stos
dec
pop
fmuls
sub
mov
sbb
adc
in
jbe
sub
mov
inc
xor
iret
pop
lcall
fstps
sbb
addr16
pop
push
sarb
rol
add
mov
sahf
jnp
das
das
hlt
movsb
dec
in
jo
sbb
in
jmp
and
dec
inc
and
fcmove
fmuls
sub
fwait
jns
lret
ret
xchg
out
xchg
das
jg
mov
clc
pop
sahf
jnp
inc
sbb
shll
pop
addr16
jnp
imul
ss
mov
std
pop
je
push
dec
jno
dec
mov
or
scas
push
mov
xorl
movsl
cmp
gs
cwtl
loopne
cmp
xchg
push
mov
add
andl
jecxz
test
call
inc
jp
push
xchg
test
out
push
ret
mov
adc
repnz
sub
lret
or
xor
cmp
sbb
pop
cwtl
les
pop
cmc
and
ror
scas
sub
out
leave
lret
loop
nop
adc
mov
sti
or
lret
adc
mov
sub
sbb
cmp
jmp
or
adcl
pop
imul
jge
aam
xor
jge
js
dec
enter
sub
pop
inc
ds
test
mov
xor
jb
xor
scas
mov
leave
popf
or
inc
out
push
mov
xchg
out
add
jg
xor
sub
xor
fisubs
and
xor
jle
cld
stos
pop
jp
and
mov
sahf
xchg
leave
mov
push
jae
mov
ja
inc
shrl
and
cltd
mov
mov
sbb
mov
mov
cmpsl
movsl
add
stos
rcl
pop
and
clc
pop
test
cld
aas
gs
jg
lea
cld
adc
loope
pop
shrb
dec
mov
sbb
popf
mov
addl
vmread
in
testb
stos
shll
pop
movhlps
cmp
pop
addr16
out
cs
adc
test
add
cmpb
rcll
aaa
call
fcmovnu
fs
push
lock
fistpl
sbb
jno
jmp
sbb
in
pushf
mov
stos
and
dec
and
iret
xchg
jmp
mov
pop
inc
dec
mov
mov
test
addb
loop
pusha
and
mov
xchg
adc
lds
pop
lea
std
adc
push
adcb
dec
mov
mov
sbbl
adc
insl
xchg
enter
aas
loopne
loope
cli
dec
orl
lret
jecxz
sbb
ja
jl
bound
cld
ljmp
mov
ficoml
les
jb
mov
lret
and
push
and
push
adc
or
hlt
or
and
dec
dec
add
out
mov
sub
ss
or
or
cmp
mov
inc
mov
stos
pop
ljmp
test
into
jmp
and
inc
mov
dec
xor
inc
add
push
inc
mov
sarl
ljmp
lds
clc
cmpsb
test
jecxz
and
sar
or
sub
jle
jmp
mov
and
jecxz
lcall
push
cmp
add
cld
add
cli
lahf
mov
icebp
popa
push
pop
or
mov
sub
in
or
movsl
xchg
pop
or
stc
jge
xchg
ror
sahf
rorl
adc
mov
jbe
int
xchg
xchg
aad
imul
fcoml
fs
decl
leave
stos
pop
ljmp
adc
fimull
lcall
inc
mov
pop
aaa
idiv
mov
sbb
push
stos
xor
xor
fadd
shll
roll
mov
scas
or
fsubrs
mov
lods
mov
popf
or
cmp
inc
mov
xchg
hlt
jge
jge
or
xchg
int
mov
ja
xchg
in
dec
loopne
inc
inc
lock
lods
call
arpl
jb
sahf
lcall
mov
pop
stos
xor
std
das
mov
push
movsl
xor
lahf
cmpl
inc
std
add
mov
sti
push
xor
imul
mov
fs
sbb
cmpsl
mov
add
pop
xchg
test
mov
mov
xchg
adc
xchg
repz
stos
and
cmpsl
pop
jle
fmuls
fimuls
sar
xchg
pop
in
jne
cmp
xorl
aam
wbinvd
push
and
cmpb
psubw
rcr
xchg
adc
cmp
in
scas
sbb
pop
sbb
pushf
insl
jbe
cwtl
ljmp
mov
lea
cld
mov
imul
lds
mov
xchg
shlb
lods
cmp
arpl
cs
repnz
or
test
mov
pop
ret
fdivrl
je
mov
inc
adc
xchg
test
pop
mov
shrl
mov
nop
outsl
mov
gs
dec
dec
subb
xchg
fsubs
or
jnp
push
dec
jnp
pop
rcrb
dec
sbb
repnz
push
pop
fdivr
sarl
mov
sub
jae
jne
int
mov
orl
out
mov
adc
xor
jae
add
dec
pushf
es
xchg
fdivrl
push
lods
sbb
xor
adc
jo
jl
insl
dec
fwait
mov
fisttpll
out
pop
jg
push
in
sub
popf
push
pop
out
or
fs
je
arpl
subb
dec
adc
lock
add
call
mov
std
lods
push
mov
adc
xor
jnp
pop
aad
inc
std
in
cmp
imul
jge
loopne
into
dec
cli
push
adc
bound
jbe
cmp
adc
inc
inc
loop
jb
pop
jo
push
fistpl
scas
mov
ss
jcxz
inc
rep
popa
insl
jmp
mov
popf
xor
mov
lods
out
aas
fcmovb
aad
mov
and
fiaddl
push
sbb
outsb
aam
enter
inc
out
ds
mov
outsl
ja
or
add
out
mov
ss
cmp
add
sub
outsl
ret
pop
in
mov
ljmp
pop
xor
pop
insl
popa
add
push
mov
sub
adc
int3
lea
imul
fs
jae
scas
or
xor
cmp
movsb
add
ds
mov
dec
adc
adc
in
push
cli
mov
fs
push
mov
push
mov
xchg
ljmp
adc
lcall
loop
stos
jmp
lods
sarb
dec
hlt
mov
cli
xchg
cmc
pop
jg
dec
out
enter
scas
push
jge
xchg
push
rorl
cmp
das
mulb
popf
insb
mov
dec
repz
shl
xor
sub
fcomi
cwtl
adc
mov
jne,pt
push
jns
incl
mov
cmpsl
cli
lods
sbb
sbb
add
scas
arpl
cld
xor
popl
es
stc
jbe
pop
cld
mov
mov
xchg
mov
and
push
out
out
push
out
insl
cmp
aam
mov
jnp
cmp
sbb
out
lea
and
mov
test
xchg
jno
rcll
aad
fisubl
jge
sets
jb
test
stos
aam
not
clc
xor
mov
jmp
pop
sarb
sub
pop
and
mov
jno
ret
leave
sbb
jge
mov
cmpsb
inc
pop
sahf
loopne
add
movsb
imul
jle
xchg
adc
imul
sbb
adc
ffree
cmp
mov
jnp
pop
fdiv
mov
pop
icebp
addb
cld
out
add
jno
imul
pushf
xor
inc
in
jbe
shrl
lods
push
inc
push
pop
jbe
jo
adc
mov
mov
addr16
fisttpl
mov
ret
jo
or
sbb
popa
mov
pop
aam
cmc
push
cli
das
cmp
pop
push
lret
xchg
insb
mov
imul
sub
lret
or
pop
and
add
jg
jb
aaa
xor
negl
loop
fdivrl
or
sbb
mov
push
jne
es
faddl
inc
insb
cwtl
lods
loope
cmp
mov
xor
mov
stos
fistl
sbb
sub
or
xchg
outsl
into
or
adc
sar
sar
test
dec
ljmp
inc
jmp
xchg
adc
mov
int
push
dec
sbb
psubusw
dec
in
lcall
sti
jno
out
test
xchg
dec
sbb
repnz
daa
rorl
cs
push
out
testl
dec
out
icebp
pop
mov
cwtl
daa
test
lods
lds
push
push
ds
xor
jecxz
pop
data16
jmp
jl
inc
xchg
and
andb
dec
gs
dec
das
pushf
adc
mov
mov
test
fdivrs
mov
sub
lahf
les
out
jbe
inc
or
and
add
repnz
into
mov
scas
xchg
adc
mov
push
ds
push
in
scas
sti
lahf
mov
fs
int3
fmul
lret
sub
cmp
pop
cmp
lea
jle
test
test
cwtl
or
imul
jecxz
hlt
mov
jecxz
sbb
mov
clc
push
mov
stos
notl
push
pusha
iret
es
push
lds
jmp
jnp
mov
mov
or
test
push
iret
inc
mov
mov
pop
sub
pop
repz
rcrb
jne
or
dec
ljmp
push
mov
jle
enter
fs
and
adc
les
mov
lret
test
insb
mov
or
add
and
mov
add
mov
ret
adc
fstps
lret
popa
push
lods
outsb
xchg
cmp
mov
cmp
pop
insl
mov
lret
movb
pop
sbb
push
shrl
and
sbb
cmp
dec
outsl
fidivrs
sbb
mov
and
mov
data16
dec
inc
mov
jle
stc
jbe
std
dec
out
mov
adc
adc
sbb
sahf
jae
lea
gs
dec
pop
les
cmp
xor
jecxz
in
outsl
dec
cwtl
int
or
sbb
and
mov
repnz
nop
jno
inc
and
sbb
out
ds
add
pop
cmp
and
cld
mov
arpl
sbbb
or
xor
stos
xchg
pop
ljmp
test
or
out
pop
cmp
cld
mov
orl
leave
arpl
cmp
outsl
add
mov
jo
leave
push
std
pop
push
sbb
push
xchg
or
cmp
xchg
aad
aam
fistl
ljmp
adc
jae
mov
fwait
iret
rcrl
dec
shll
fadds
push
shll
movsb
jb
cwtl
out
cltd
jle
pop
clc
jns
and
add
inc
cwtl
icebp
scas
inc
jae
adc
or
xor
push
adc
fisttpll
sub
je
sbb
cmpsl
popa
popf
adc
lock
jo
mov
ret
cmpl
test
std
shll
mov
cmp
push
jne
faddp
icebp
clc
cs
cmpsb
fmul
mov
mov
sub
test
jne
pop
pop
dec
lock
jecxz
adc
inc
sarl
or
cmp
lret
push
cmpsb
dec
scas
mov
push
mov
xchg
sti
icebp
and
fcoml
inc
loop
cli
pusha
int3
clc
add
sbb
cld
mov
sub
lahf
cmp
mov
loop
xorb
mov
ret
lahf
leave
mov
pushf
fdivrl
shrl
cmp
xchg
ljmp
mov
out
push
cmp
daa
pop
stos
aad
out
out
aam
push
stc
sbb
ret
jno
sbb
sete
mov
push
in
or
mov
incl
add
loop
out
daa
data16
rcr
jbe
lods
orb
push
jnp
pop
xor
push
xchg
mov
imul
mov
xorl
add
jmp
inc
das
push
shll
pusha
push
mov
xor
stc
lea
js
jmp
cmp
ja
add
pop
xchg
lahf
addr16
mov
adc
fcompl
lds
ret
adc
test
jo
cmpsl
repnz
pop
adc
adc
mov
adc
das
das
sub
pop
push
mov
jnp
insb
and
imul
xchg
ror
mov
pop
outsl
cwtl
xchg
movsl
pushf
push
mov
aas
test
dec
pop
sbb
mov
lods
mov
mov
in
inc
lods
gs
inc
ljmp
mov
testb
and
jae
cmp
cld
mov
sbb
in
mov
call
cmp
inc
sub
add
cmp
ret
lods
xorl
dec
addr16
mov
popa
jl
aam
aas
sahf
fidivrl
inc
xorl
and
add
rcl
lds
rorl
orb
stos
std
pop
pop
out
test
cmp
dec
xchg
jns
pop
fstpt
sbb
lods
inc
cltd
dec
jecxz
add
jb
and
inc
pop
xor
out
inc
cmp
sub
fwait
out
mov
cs
arpl
test
jb
mov
out
jo
in
pop
je
mov
outsb
pop
xchg
fisubrl
pop
dec
jp
fdivrs
cmp
rcll
jnp
fiaddl
and
aas
xor
addr16
or
cli
mov
xchg
es
cmp
notl
sub
mov
or
cltd
push
xlat
mov
sub
lea
outsl
sbb
jb
add
push
loopne
push
bound
jge
pusha
pop
xor
push
push
std
hlt
test
inc
outsl
out
mov
jbe
ja
repz
pop
ljmp
call
sub
or
jle
mov
jmp
fs
mov
sub
loopne
pushf
mov
int3
ror
cwtl
and
adc
imull
jl
push
push
jl
lock
lahf
adc
push
call
or
mov
mov
pushf
and
lret
jno
push
loop
mov
bound
push
xor
test
test
and
or
push
int
movsb
mov
in
push
retw
ljmp
repnz
ss
xchg
adc
hlt
hlt
in
mov
lret
cmpsl
dec
mov
fnsave
stos
in
cmc
std
fidivl
inc
insl
sbb
out
xor
pop
lret
add
ror
insb
dec
imul
and
mov
push
fdivr
jecxz
and
and
inc
push
or
xor
and
jl
insb
or
sbb
xchg
xchg
inc
mov
lods
push
decl
enter
filds
shll
mov
int3
and
fdivl
pushf
inc
sbb
fcmovb
inc
mov
adc
cld
jp
popf
xor
inc
int
leave
mov
cld
int
jle
mov
test
insl
push
test
scas
inc
popf
addl
dec
push
push
inc
xor
das
orl
xor
adc
int
sbb
out
pop
leave
scas
lods
add
pop
lods
outsl
lods
dec
aas
cltd
push
fdivr
imul
cld
pop
xor
cld
outsl
scas
popl
iret
enter
movb
xlat
push
or
mov
cmc
scas
lods
mov
mov
in
mov
and
shrl
mov
pop
out
subb
and
test
mov
xchg
adcl
or
and
movsl
das
lods
xor
leave
sbb
push
push
iret
nop
jnp
popf
leave
cmpl
push
iret
xchg
data16
and
and
js
mov
das
mov
lds
pop
lret
fidivs
mov
add
jmp
adc
jl
pop
mov
fcmovne
shll
ret
fs
sbb
mov
popf
test
jecxz
inc
xchg
mov
xlat
add
jg
push
sub
jnp
cmp
sub
push
lcall
add
mov
test
sub
adc
xchg
nop
ret
mov
cwtl
imul
ret
xchg
pusha
jae
or
aas
push
pop
out
mov
add
mov
movsb
out
push
mov
and
jne
push
orb
dec
ret
jbe
xor
xchg
jb
mov
dec
fistpl
pop
sub
leave
sub
loope
adc
push
sub
add
jg
xor
mov
or
das
negb
mov
mov
cmp
and
out
inc
testb
cmp
inc
mov
push
ds
test
mov
add
push
fcmovnu
cmpsb
imul
cmp
pop
in
lret
or
mov
aad
cmp
jmp
mov
aaa
fs
pusha
mov
push
sub
addr16
xchg
cmp
js
pop
mov
xchg
cwtl
sub
adc
jl
test
jge
pushf
sti
rcrl
lods
xchg
jns
push
test
gs
sbb
pop
iret
shl
ljmp
mov
sub
mov
stos
das
jb
data16
jg
aas
sbbb
mov
dec
push
ljmp
sti
orl
pop
pusha
imul
fs
rcll
pop
mov
lcall
addr16
push
cmp
ds
ds
aam
pop
sbb
cmp
dec
jb
rolb
fisubrs
pop
pushf
adc
scas
std
dec
ret
fwait
addr16
add
lods
cli
fsubs
dec
mov
pop
lahf
push
mov
adc
jae
ljmp
sbb
xchg
and
lea
es
jge
fcoms
mov
in
movsl
jbe
subb
repz
movsb
pop
in
cwtl
and
adc
test
mov
mov
notb
dec
mov
pop
jno
or
inc
call
repnz
cmp
lods
add
or
fists
pushf
inc
dec
cltd
and
sbb
insb
pop
push
pushf
sbb
pop
or
xchg
aad
add
or
mov
adc
dec
lds
lret
arpl
mov
xor
dec
push
pushf
and
inc
imul
mov
shl
lcall
hlt
std
popf
ds
fcoms
out
addr16
dec
dec
xor
mov
pop
out
lcall
mov
int3
stc
cmp
mov
mov
pop
push
mov
cmp
or
push
sub
scas
out
add
or
pop
push
shl
sbb
loopne
push
jae
jg
dec
lock
shrb
mov
cmp
iret
and
xchg
daa
ss
aad
mov
jmp
adc
sub
inc
mov
arpl
adcb
xor
mov
bound
mov
dec
xchg
sub
outsl
test
scas
jp
fwait
jae
outsb
pop
cli
pop
lods
xor
lock
test
lea
mov
inc
bound
mov
out
sbbl
cmp
rcll
lock
bound
icebp
ja
movsb
jne
xor
cs
call
lcall
cmp
es
pop
cmpsl
repnz
ret
imul
ficoml
in
lea
stos
mov
mov
outsb
xchg
sti
sub
cmp
push
mov
xchg
push
es
mov
xchg
ljmp
xchg
add
and
jl
mov
cli
cld
cmp
sbb
dec
xchg
push
aaa
dec
and
push
cmpb
fnstsw
hlt
fisubl
mov
orb
call
loop
out
xchg
cmp
inc
add
mov
lcall
xor
cmp
call
popa
or
push
shlb
outsl
push
xchg
mov
adc
out
jg
fsubr
jl
sub
int3
xchg
ficomps
cwtl
cmpb
xchg
jbe
ljmp
mov
xchg
fldenv
mov
test
pushf
and
or
xchg
xchg
add
shlb
pop
jae
or
cli
jg
lods
mov
mov
test
cmp
cwtl
test
fiadds
adc
inc
and
sub
adc
mov
jg
insb
jno
sbb
push
hlt
or
fldl
ja
mov
cmp
movsb
mov
lock
cs
sbb
jle
out
dec
mov
jns
add
mov
inc
fcmovb
iret
dec
jecxz
test
fidivs
mov
js
fldl
sbb
inc
enter
jae
shrl
pop
inc
xor
dec
cmp
daa
pop
xlat
push
cmpsl
jae
dec
push
mov
add
js
mov
sbb
andb
pusha
icebp
lret
rclb
xchg
pop
mov
xor
cmp
inc
aas
fstpt
sti
lods
inc
test
jno
daa
push
mov
imul
iret
jg
dec
mov
js
jl
adc
add
aas
mov
stc
stc
movsb
cmc
mov
mov
rolb
lods
lcall
test
jb
sbb
std
cld
push
mov
xor
cmpsb
pop
xlat
add
dec
mov
lahf
adc
push
adc
sub
jnp
outsl
lea
mov
dec
mov
dec
add
rolb
cmp
movsb
adc
jp
inc
push
iret
aas
pop
xlat
pushf
test
popa
shll
pop
jmp
xchg
cmc
add
lcall
cmp
mov
and
in
fcmovnu
clc
in
or
paddsb
pop
mov
fldenv
bound
ljmp
stos
pop
jg
and
sub
mov
hlt
mov
shll
jecxz
stos
sub
cmpsl
xor
cmp
inc
pop
pop
add
lods
cwtl
andl
mov
inc
xchg
jne
cmc
enter
cmp
mov
popf
addl
repz
or
cmp
xchg
push
scas
jmp
das
sub
sahf
ljmp
fs
jns
fld
out
mov
scas
and
jns
or
ljmp
xchg
inc
mov
mov
jmp
fildll
ret
ret
pop
mov
mov
mov
pop
in
inc
popa
sbb
pop
gs
out
jbe
and
clc
sub
loop
repnz
imull
inc
mov
fucomp
gs
sub
in
shll
in
dec
mov
cli
dec
xlat
popa
xor
lcall
sbb
sqrtps
xlat
out
ljmp
fxch
pop
cwtl
adc
and
jnp
stos
xchg
pop
xchg
loopne
jl
xchg
pop
mull
mov
cli
fwait
mov
pop
jbe
xor
aaa
pop
daa
xor
and
jge
pusha
mov
pop
jb
mov
cs
stc
aad
lods
repnz
jae
and
xchg
push
stos
lods
sbb
sub
and
fcomp
add
jno
inc
mov
enter
mov
push
push
ret
add
gs
xchg
pop
divb
dec
xchg
mov
xchg
xor
push
inc
or
call
cmp
dec
mov
xchg
xchg
jbe
orl
mov
mov
jns
pop
mov
js
ja
dec
xor
ficomps
andb
inc
mov
pop
mov
popf
push
rcll
dec
testl
stos
fnstsw
sub
mov
in
in
mov
xor
sbb
scas
aam
mov
insb
adc
insb
nop
and
cld
outsb
repnz
rorl
in
repnz
xchg
inc
cmp
bound
pusha
push
and
cmp
scas
and
adc
xor
leave
dec
dec
sub
mov
pop
xor
push
cmp
fisubrl
movsb
or
out
testb
jne
aam
stos
jns
or
mov
and
inc
sub
sbb
test
jmp
push
daa
fimull
pop
dec
jnp
jb
xlat
sbb
or
imul
stos
xchg
popf
cmp
negb
outsb
adc
ret
dec
fwait
pop
imul
xor
test
mov
outsb
call
imulb
or
jle
pop
jmp
aad
fcoml
stc
push
cwtl
mov
or
in
xchg
sub
sbb
sti
fists
xchg
inc
movsbl
out
repnz
or
or
arpl
nop
lret
ret
stos
xchg
lea
sbb
mov
dec
or
jecxz
sbb
sbb
adc
inc
sbb
jge
int
data16
pop
xor
addb
inc
fidivl
cmp
xlat
jl
mov
inc
shrl
fisttpll
sbb
mov
ljmp
xor
push
xchg
mov
push
push
test
or
mov
stc
sub
leave
cli
or
cld
sbb
xor
out
mov
fyl2xp1
imulb
fcomi
cs
js
push
mov
jl
push
loop
inc
adc
gs
aas
loope
test
mov
ds
push
sahf
fistl
fcoml
mov
ja
jg
jge
add
pop
xchg
dec
sar
roll
mov
scas
push
lret
mov
xchg
sub
inc
in
xchg
and
nop
jb
insl
or
pop
movsb
loope
aas
data16
lea
fildll
jl
popa
xchg
in
out
sldt
add
xlat
cmpsl
sbb
loop
fwait
mov
adc
jae
mov
ficompl
aad
ds
dec
loopne
pop
and
bound
mov
cmpb
xor
shrb
and
in
dec
fcompl
sub
jg
push
fcoml
daa
and
addl
test
loope
inc
mov
inc
addr16
out
adc
dec
push
pop
test
pop
add
mov
mov
pop
sbb
mov
stos
mov
pop
fadds
adc
inc
inc
mov
cmpsb
mov
pop
test
fisubrl
cwtl
loop
sbb
jmp
icebp
cmp
pop
lret
and
testl
cltd
scas
in
sub
ljmp
out
ja
ljmp
sbbl
xor
cld
mov
int3
scas
cmp
or
call
sbb
std
dec
int3
shr
push
inc
out
and
add
push
or
sub
dec
mov
aam
or
je
adc
int
inc
bound
add
pop
inc
imul
dec
std
popa
jns
jle
push
shlb
or
adc
mov
lret
xchg
into
sbb
insb
lahf
mov
test
cmpsl
or
cmp
es
pop
mov
fistpl
outsl
push
xchg
sbb
xorl
mov
jp
fistpl
cmp
fcmovnu
add
push
xchg
add
push
cmp
and
shl
dec
lods
das
sti
pop
les
into
sub
mov
pop
and
xchg
nop
aas
push
int
xor
mov
adc
adc
fdiv
out
lcall
jge
cmpsl
cld
pop
in
shlb
add
xor
in
stos
lea
je
mov
jo
add
cmp
cmpsb
ret
sbb
test
ja
adc
int3
xor
mov
and
imul
loop
sbb
imul
mov
or
outsb
pop
roll
mov
pusha
and
xchg
add
pop
and
jno
test
iret
cmp
dec
adcl
test
xlat
mov
cmp
xchg
fs
data16
inc
cmc
test
mov
in
cwtl
jae
repz
mov
or
fs
in
push
mov
sbb
movsb
dec
daa
mov
sub
in
fwait
xchg
ss
les
shrl
pushl
jge
cmc
jae
and
into
sbb
outsb
popa
daa
mov
and
xchg
pop
shll
mov
sub
bound
pusha
ljmp
sarb
push
shll
ja
shrl
movsb
adc
cmp
rcrl
fwait
add
clc
stos
fstpt
jne
out
aas
rorl
xchg
mov
movsb
jl
xchg
pop
imul
cmc
in
ret
mov
xchg
lock
mov
mov
mov
xor
fidivrl
jno
stos
pop
test
in
jae
mov
out
pop
cs
mov
mov
aam
mov
adc
sbb
mov
mov
dec
lods
dec
jg
xchg
js
lahf
ja
inc
pop
rcll
rcrl
dec
popf
aad
mov
insb
cmpsb
or
in
mov
stos
push
or
pop
cmp
add
jmp
xchg
pop
sbb
testb
orl
sub
loope
or
mov
mov
and
lret
push
inc
adc
mov
sbb
outsl
xor
lods
fldenv
js
mov
cmpsb
cld
push
ss
add
sub
fxch
ret
bound
sub
cmp
inc
ret
dec
pop
aas
mov
cmpsl
popf
ljmp
xchg
das
sub
sub
outsl
pop
xorb
cli
xchg
aas
push
add
shl
jno
xlat
or
lds
std
push
out
cmpsl
jb
orb
mov
xor
movb
mov
gs
fcmovnbe
sub
xor
sub
rcrl
push
sbb
adc
push
orb
push
or
std
or
or
rolb
sub
adcl
add
out
cs
and
mov
sarl
sub
inc
add
sahf
enter
das
cmp
jg
or
jmp
dec
xchg
mov
sbb
xchg
sub
cmp
mov
lahf
xchg
rorb
xor
dec
lcall
test
sub
and
int
mov
sub
push
sti
mov
into
sti
xchg
cwtl
xchg
xchg
outsl
pop
mov
repz
cmp
rcll
xlat
mov
sub
lcall
push
jge
ret
ficoml
scas
adc
lods
call
push
jae
jp
arpl
sub
inc
cmp
adc
dec
mov
outsl
fidivrl
sbb
pop
sbb
or
into
les
xchg
dec
aas
js,pt
pop
push
das
xchg
or
dec
mov
imull
popa
xchg
inc
out
into
xchg
jns
movsl
outsb
adc
loopne
jb
lahf
dec
push
jle
mov
pop
insl
repnz
jp
fnstcw
or
add
ja
mov
inc
sbb
lcall
cltd
scas
xchg
cli
pusha
dec
ljmp
pop
cwtl
daa
arpl
push
jns
jmp
sub
shl
imul
int
add
imul
pushf
or
sbb
mov
icebp
scas
mov
push
outsb
mov
lcall
adc
xor
or
push
mov
popf
add
inc
mov
add
add
rorb
cmp
push
adc
or
mov
pop
aaa
out
fs
or
dec
sti
fdivs
test
lock
orl
push
add
mov
addr16
xor
mov
or
fadds
popf
inc
ret
mov
sbb
xchg
and
mov
jne
sub
icebp
pop
aas
movsb
jns
cmc
mov
in
js,pn
cli
dec
sub
pop
mov
imul
jecxz
out
xchg
xor
sub
mov
mov
or
push
int
mov
subl
out
xchg
lahf
loope
test
ss
aas
jge
stos
jecxz
cmp
test
adc
xor
popf
mov
jne
pop
sbb
sti
or
mov
sub
cmp
sbb
xor
aad
sbb
jb
cmpsl
xor
and
pop
ljmp
sbb
xor
xchg
loope
rcll
pop
sbbb
jns
and
cwtl
mov
mov
leave
jns
and
in
out
push
mov
or
mov
or
movsl
push
xor
jbe
adc
bound
add
adc
aaa
fnstcw
inc
outsb
sub
pop
and
inc
sub
insb
nop
sbb
je
stos
mov
mov
adc
movsb
fstps
add
xchg
cmpl
movsb
inc
ja
mov
inc
es
dec
mov
xchg
mov
shlb
les
push
dec
fwait
lods
jg
inc
mov
in
push
mov
xor
test
sarb
dec
fs
popa
test
sbb
xchg
xor
xor
aaa
sbb
dec
nop
push
divb
out
jle,pn
ret
outsb
addr16
or
fldenv
sub
dec
push
loope
rorl
jbe
popa
addr16
pop
cli
dec
outsl
lock
adcb
loopne
and
mulb
mov
dec
fists
ret
adc
mov
mov
popf
xchg
xor
mov
rclb
popf
mov
js
imul
repz
mov
pop
mov
cmc
enter
cmp
jo
enter
out
js
sti
imul
scas
cmp
rcrb
lahf
out
cmp
xchg
sbb
dec
add
in
sti
cwtl
cmpsb
idivb
adc
pop
mov
gs
pop
pushf
enter
push
xchg
lret
add
sbb
sub
stc
incl
cwtl
into
cmp
roll
shl
fs
sub
pop
xchg
in
imul
push
cli
jnp
rcrl
and
sbb
adc
sarl
je
iret
jle
mov
enter
or
inc
scas
ja
mull
fidivrl
je
int
jno
subb
cmp
fs
jb
push
pop
pop
add
out
insl
es
push
adc
adc
push
sub
add
inc
lcall
outsl
push
pop
test
mov
arpl
adc
fnstenv
xor
sbb
add
ds
mov
jbe
mov
sbbb
sbb
xchg
mov
test
mov
fld
mov
cld
call
leave
mov
imul
mov
sbb
mov
insl
pop
xchg
xchg
leave
dec
xchg
mov
aaa
aad
pop
add
xchg
scas
sti
and
adcb
out
shrb
push
push
inc
movaps
fistpl
mov
adc
inc
or
jbe
xor
inc
and
pop
lcall
cmp
mov
sbb
mov
pop
adc
or
out
xchg
aam
inc
sub
xchg
sub
inc
movsl
test
movsb
xchg
lods
mov
lods
or
push
repz
dec
rcr
jl
fwait
and
or
jl
push
push
enter
and
cwtl
es
mov
inc
stc
and
push
jo
fidivrl
sbb
fmul
push
pop
rclb
xchg
hlt
adc
orb
xor
dec
popa
sbb
push
stc
cmp
inc
or
in
popa
xchg
fwait
out
sbb
adc
push
loop
flds
dec
pop
adcb
outsl
mov
xchg
xchg
in
sbb
out
test
dec
push
sub
and
jo,pn
push
cmp
and
addl
and
mov
mov
scas
mov
insl
ljmp
add
ret
lahf
jg
xchg
test
dec
xchg
sub
push
fistl
mov
or
pop
aam
pop
push
ljmp
jecxz
sbb
push
repnz
dec
sbb
cwtl
imul
jb
aas
push
icebp
inc
xchg
inc
mov
push
or
test
aad
gs
cltd
dec
pop
lcall
fwait
push
test
and
jb
sub
aam
ljmp
push
insl
adc
inc
adc
out
mov
xchg
scas
mov
addr16
mov
xor
dec
jb
les
cmp
push
xor
fmull
dec
fisubrs
dec
xchg
leave
arpl
lea
adc
push
jmp
loopne
inc
fimull
and
fdivr
rorb
idivl
xchg
mull
dec
jge
pop
dec
inc
pop
and
das
in
bound
inc
and
ss
icebp
push
pop
outsb
push
mov
sbb
jne
faddl
cmp
dec
clc
imul
jne
faddl
fisubs
shll
dec
and
and
test
fdivs
cs
inc
mov
imul
fdivrl
js
pop
daa
movsl
and
and
mov
jae
and
pop
dec
cmpb
jne
in
js
cmpsb
xchg
sti
jnp
or
mov
les
xor
and
sarb
jp
mov
sbb
sahf
vcvttps2dq
call
out
lods
shrl
into
push
lahf
xor
or
jo
pop
or
arpl
cmpsb
dec
mov
pop
push
sbb
adc
out
nop
aas
stos
mov
or
add
add
jle
ljmp
cmc
sarb
and
fisubrl
pop
movsl
mov
int
js
mov
movsl
pop
xlat
jns
push
mov
xchg
sub
data16
or
jge
les
mov
or
cmpsb
cmp
std
sbb
or
push
loopne
ret
push
sbb
inc
mov
test
xchg
nop
inc
cmp
or
sbb
dec
lahf
lods
push
clc
xor
orl
adc
ss
nop
add
inc
jecxz
cmc
out
push
mov
sub
jnp
jp
popa
jnp
test
or
mov
mov
hlt
xor
inc
push
mov
ret
out
icebp
or
cld
adc
pop
into
xchg
push
dec
mov
ss
sub
js
xor
and
dec
lds
cmp
sub
sub
fcomps
push
adc
xor
call
fwait
mov
sar
jp
sahf
inc
mov
pop
pop
stos
jge
es
out
mov
mov
and
popf
sti
les
mov
dec
mov
popf
ljmp
das
sbb
adcb
cmpsl
sub
ds
xchg
fbstp
movsb
imull
shll
lret
cwtl
fldenv
push
arpl
inc
mov
lret
cmp
mov
jae
pop
mov
and
jle
lds
stos
in
popf
adc
test
jne
cmc
popa
clc
mov
xchg
clc
xor
cld
dec
cmc
pop
sub
and
sub
mov
push
pop
fdivrl
mov
sub
into
inc
int
xor
cmc
push
inc
or
ret
out
scas
arpl
fmull
pop
xchg
shlb
retw
adc
lahf
xchg
inc
popf
inc
mov
or
adc
stos
mov
pop
pop
push
sarb
movsl
push
in
daa
mov
push
push
scas
out
test
fwait
sbb
in
mov
dec
mov
mov
pop
dec
jl
shl
push
inc
xchg
sbb
sbb
dec
enter
push
push
mov
dec
push
pushf
pop
outsb
in
rcrb
cmp
or
scas
rorl
add
sub
loope
push
sti
scas
inc
or
movl
pushl
btc
punpckhdq
cmpsl
dec
pop
or
sbb
inc
or
lods
mov
or
fcmove
mul
jno
stc
jl
jp
outsb
or
fldl
jmp
je
popa
cmpsl
test
cmp
mov
push
cs
inc
scas
iret
jecxz
div
pop
lods
rcrl
push
insl
xor
add
in
aad
imul
stos
jns
adc
mov
ds
bound
xchg
push
ret
rcll
mov
adc
and
movsl
push
pop
push
or
inc
lds
mov
xchg
outsb
data16
outsb
popa
ret
dec
mov
ror
push
lock
rcll
xor
sbb
mov
ss
rcll
aaa
sahf
or
shrb
sub
lahf
inc
mov
or
mov
dec
dec
adcb
ds
popa
dec
jmp
inc
xor
push
or
in
and
xor
notb
test
cli
lcall
mov
or
mov
arpl
or
rcrl
in
icebp
or
sbb
xchg
stos
insb
stos
pop
iret
jmp
arpl
lods
out
imul
xor
push
js
dec
ds
pop
daa
add
and
mov
jo
cmp
in
mov
or
jmp
ljmp
sub
cwtl
pushf
mov
setnp
jmp
xchg
or
push
mov
xchg
cmp
mov
fisubl
jnp
dec
fstl
cmpsb
and
adc
dec
into
fs
repz
repnz
mov
mov
scas
iret
xor
xchg
push
inc
push
test
add
lret
bnd
push
jp
andl
arpl
pop
jmp
mov
xor
in
mov
xchg
aam
sub
les
pop
pop
add
cmp
mov
sub
add
arpl
xor
les
push
mov
divb
out
inc
sbb
das
loop
hlt
int3
sbb
mov
mov
push
add
push
mov
pusha
add
fstpl
test
cs
and
lock
pop
xchg
sub
into
cmp
dec
scas
andb
xor
out
xor
jnp
xorl
rol
sbb
lahf
push
ss
cwtl
sub
jle
jmp
lds
xor
push
fcompl
mov
xchg
in
loop
fidivrs
inc
rcrb
lret
hlt
dec
int
push
or
inc
jno
lea
outsb
sti
sub
daa
mov
mov
mov
arpl
ja
adc
in
or
adc
and
lea
mov
jge
or
bsf
pop
test
mov
jg
dec
ret
repnz
in
xchg
test
dec
pop
adc
cli
jmp
lods
icebp
mov
outsb
inc
mov
jae
cmp
jp
mov
in
xchg
adc
cltd
mov
loop
inc
adc
popa
stc
addl
in
or
sub
outsl
push
xor
inc
inc
and
inc
loopne
cmp
sahf
mov
arpl
jmp
xor
jge
inc
mov
arpl
cli
subb
frstor
mov
ja
sbb
inc
aam
mov
leave
scas
imul
xor
push
aaa
jecxz
dec
mov
dec
cwtl
scas
pop
shlb
and
ffreep
or
sub
jmp
dec
mov
dec
sub
mov
cs
cmp
fwait
je
movsb
aas
mov
lret
bound
add
sub
sbb
cmpsb
xchg
or
into
inc
jne
add
gs
or
gs
sub
inc
fcoms
adc
mov
aam
outsb
repz
daa
in
insb
das
inc
out
fistl
pop
xchg
xchg
loope
mov
pop
test
or
inc
jmp
mov
sbb
repnz
dec
mov
push
lds
cmp
insl
test
fistl
xchg
and
lea
xchg
add
icebp
xor
dec
pop
fisttpl
or
aad
in
negb
jns
out
xchg
fdivr
adc
aad
jle
shl
in
mov
aas
out
sub
jb
sub
popl
jb
loopne
and
xchg
inc
in
mov
push
lret
cli
pop
mov
push
std
pop
ja
and
fimuls
out
inc
and
leave
jbe
push
cmpsl
fdivrs
cwtl
sub
or
inc
in
pop
cmp
pop
dec
nop
xchg
pop
xor
imul
ret
push
add
in
int
insb
add
cmp
sarl
xchg
jbe
pop
loop
xor
jl
or
fldt
mov
xor
push
in
mov
call
and
movsb
jne
add
cmp
jecxz
adc
fnstsw
xchg
aaa
loop
test
cmp
mov
in
in
leave
mov
rcll
rolb
les
addl
push
testb
cld
js
adc
pop
jge
stos
clc
cmp
xchg
jns
lds
jmp
xchg
cwtl
xchg
aaa
addr16
int3
in
ficomps
xchg
push
mov
pop
sti
sub
fnstenv
scas
mov
fidivrs
xchg
out
movsb
js
push
inc
fwait
jecxz
push
sbb
pop
stos
rorl
bound
push
mov
sbb
ret
aad
stc
js
in
xchg
xchg
insl
ja
das
push
repz
adc
loopne
mov
movl
test
sub
or
xlat
neg
jae
clc
cwtl
jne
ss
testb
pop
das
ljmp
mov
xchg
insl
or
add
xchg
or
movb
int3
sahf
imul
test
mov
fisubrl
or
pop
mov
mov
les
imul
in
inc
test
xchg
add
adc
jne
add
jno
pushf
mov
adc
idivl
orb
add
and
pop
xlat
insb
dec
movsl
pop
xchg
adc
cmp
sbb
mov
pop
and
jne
dec
sbb
cwtl
mov
jo
cli
jae
and
ja
inc
push
xchg
dec
push
pop
fistps
test
push
pusha
inc
das
mov
xor
add
lds
or
mov
dec
jbe
inc
pop
pusha
add
fstps
pop
in
jle
leave
js
sub
movsl
bound
xchg
sub
cmpsb
sub
stos
fidivs
sbb
fbld
xlat
jle
jmp
sub
push
lret
add
jo
ss
shlb
add
ljmp
mov
xchg
and
fbld
xor
mov
ss
jge
inc
xchg
movsl
in
add
call
pop
sbb
pushf
jne
or
js
ljmp
jae
dec
sub
in
in
jge
xchg
cltd
mov
push
sbb
push
stc
cmp
add
push
inc
in
push
es
imul
les
sti
or
jbe
sbb
pop
enter
pop
fisttps
cmpsl
mov
ret
test
xchg
add
mov
repz
xlat
push
push
xchg
sbb
cmp
xchg
sbb
push
into
inc
notb
cmpsb
mov
xchg
adc
mov
sbb
negb
pop
pop
cmc
dec
test
movl
and
mov
pop
xor
das
jle
push
dec
ss
clc
adc
cmp
mov
scas
sbb
jle
or
and
cmp
push
test
les
aam
jbe
out
aaa
cmp
andl
or
addr16
arpl
outsl
cmp
xchg
pop
bound
test
sub
xor
xchg
or
cmc
xor
xchg
xchg
rorb
push
xor
int
lods
push
pop
sahf
iret
dec
pop
add
test
push
xlat
ljmp
into
adc
mov
ljmp
loopne
xchg
out
push
jge
mov
dec
push
push
subl
pop
lcall
int
cmpb
cli
mov
je
cmp
stos
incl
pop
jo
jle
mov
cmc
mov
scas
jle
scas
iret
popf
rcr
or
les
fcom
adc
jp
fwait
insb
cmp
aad
cmp
cwtl
inc
add
leavew
fsubs
mov
das
cmp
pop
jo
iret
cmpl
in
pushl
data16
int
add
or
mov
movsl
clc
das
mov
movsb
push
faddl
push
jbe
sahf
mov
aaa
dec
xchg
push
inc
flds
xrelease
sarl
pop
mov
jle
lock
mov
inc
lahf
sti
jmp
push
ja
addr16
loopne
adc
add
cmp
mov
cmp
ret
mov
add
test
scas
jno
shl
mov
out
mov
or
bound
mov
repz
lret
mov
aad
les
xchg
mov
dec
pusha
inc
and
pop
ret
jae
aaa
push
shlb
pop
and
mov
in
inc
adcl
push
sbb
scas
hlt
lods
pop
jae
cld
jmp
xor
pop
lods
dec
push
js
loope
stos
lcall
std
imulb
arpl
lds
mov
mov
sbb
pop
and
outsl
mov
push
pop
pop
cmovne
callw
iret
push
pop
sbb
popf
inc
aad
shr
insb
int
add
aaa
push
pushf
or
lcall
mov
xchg
adc
jmp
out
clc
push
sbb
out
sbb
fwait
jnp
clc
cmp
into
inc
xor
jle
push
jg
jo
add
cmpsl
in
xlat
push
jno
cli
fsubr
and
adc
orb
mov
pop
xor
xor
mov
mov
lret
mov
mov
sbb
sub
dec
int3
and
outsl
hlt
mov
daa
add
mov
fnstcw
jno
cmpsl
setle
cmp
leave
mov
adc
push
mov
xlat
repz
dec
add
aaa
add
pop
lcall
sub
mov
fidivrs
xchg
out
and
mov
push
jmp
push
adc
jg
pop
dec
mov
test
mov
out
mov
lahf
jbe
fwait
sub
inc
fsubrs
aaa
xor
xlat
mov
lods
inc
iret
or
iret
xchg
test
incl
stc
rorl
movsl
rcrb
mov
loope
imul
cmp
in
fidivrl
jne
dec
loop
sti
inc
jae
sahf
cwtl
add
in
dec
movsl
fxam
dec
gs
leave
inc
jge
lods
leave
xchg
cld
xlat
sbb
add
shlb
mov
fstpt
mov
test
push
dec
cld
nop
add
push
icebp
fildl
popf
hlt
iret
stos
jb
inc
inc
mov
ret
sbb
repz
pop
jb
scas
loopne
dec
mov
mov
jmp
pop
jmp
cwtl
in
addr16
mov
xchg
mov
xor
and
inc
addr16
xchg
lods
and
mov
shll
and
fdivrs
out
add
out
inc
es
roll
cmpsb
mov
push
fcmovbe
pop
xor
push
push
aas
add
jnp
dec
sbb
jae
test
adc
push
pushf
enter
scas
pushf
push
test
clc
out
push
addr16
in
test
xor
fdivs
rorl
lds
mov
data16
add
push
jbe
iret
sbb
arpl
sub
jb
mov
mov
lret
cmp
leave
inc
jns
mov
in
sub
hlt
scas
test
mov
jl
imul
shlb
arpl
or
mov
mov
int3
clc
xchg
mov
stos
and
pop
ret
xchg
pop
js
xor
sbb
push
mov
fimull
movsb
js
mov
stc
cmp
ljmp
popa
lods
mov
push
mov
int
movsb
jmp
lahf
xchg
xor
fisubl
fldcw
and
mov
jno
cmp
ret
pop
xlat
pop
sub
push
inc
push
inc
jge
push
pop
push
add
push
mov
dec
call
scas
sti
push
xchg
mov
and
xor
int
dec
mov
repz
lods
mov
aas
outsl
imulb
pop
outsl
push
pop
mov
jnp
test
fstl
cmpsb
je
sbb
add
xor
lea
mov
xor
push
imul
or
adc
add
lahf
movsl
inc
or
and
insb
loop
inc
shll
aam
sbb
add
push
shrl
clc
jle
mov
jp
cmp
lret
jg
out
pop
es
sbbb
dec
int
mov
mov
mul
xor
sbb
fistl
mov
out
sub
or
mov
cmp
pop
xor
shlb
xchg
inc
mov
mov
or
mov
icebp
fsub
sahf
lcall
and
mov
outsl
mov
in
ss
jge
push
xchg
push
cmp
mov
push
sub
js
jns
mov
icebp
push
adc
pop
xor
addb
jge
ror
sub
jl
lods
mov
pop
mov
sub
fists
daa
out
pop
test
dec
adc
pop
fwait
mov
push
ret
out
jecxz
jecxz
sbb
fs
movsb
pop
test
sbb
cmpsl
mov
lcall
int3
push
inc
and
daa
in
decl
pop
dec
sub
mov
clc
mov
and
cmp
lcall
insb
or
sarb
in
mov
fldt
add
outsb
xor
mov
mov
shlb
xor
cld
add
aaa
jmp
jno
sbb
cmc
xchg
mov
fildl
mov
add
jl
jnp
jge
push
and
orb
clc
sbb
shrb
mov
sti
iret
inc
pop
xor
pop
les
cmpsb
mov
lds
lods
fmuls
dec
out
hlt
stc
or
enter
cmc
sbbl
les
jl
movsb
mov
xchg
and
ficoml
out
rorb
jg
mov
dec
imul
pop
sbb
lods
dec
cmp
or
out
xchg
and
ja
xchg
mov
subb
xchg
or
fnstenv
inc
mov
sbb
xlat
pop
outsb
mov
into
adc
dec
mov
std
stc
mov
mov
lret
jmp
xlat
in
iret
adc
fistl
mov
cmc
xor
mov
rcll
inc
push
es
push
push
adc
mov
jmp
outsl
fsin
dec
pop
xor
adc
sti
fisubs
fldenv
add
push
mov
popf
and
xchg
enter
mov
add
std
push
pop
xchg
ret
jno
roll
dec
mov
addr16
out
jg
xor
sub
das
sub
inc
fistpll
cmp
scas
xchg
nop
xor
jo
int
push
mov
inc
test
sub
push
lcall
fcompl
dec
lahf
mov
in
sbb
cmpsl
je
shlb
outsb
xrelease
iret
sbb
shr
sahf
repnz
cmp
mov
and
repz
mov
dec
loope
push
push
adc
fs
mov
outsl
jp
pop
outsb
sbb
in
out
sbb
jle
faddl
jnp
push
dec
out
sub
enter
lods
sbb
addr16
jmp
popf
ja
mov
gs
ret
xor
iret
pop
call
lock
cmp
push
int
or
pop
xchg
gs
mov
out
dec
lods
pop
out
std
jecxz
or
push
dec
cmpsb
mov
xor
test
iret
dec
xchg
push
loopne
out
push
jl
addb
and
xchg
inc
scas
cmp
std
adc
cli
push
jecxz
ficoml
inc
mov
iret
loopne
cld
pushf
imul
jle
sar
pop
mov
nop
mov
fimull
dec
int3
cli
mov
xchg
inc
cmp
int
mov
mov
imul
cmp
cltd
or
mov
dec
clc
dec
mov
stc
mov
aam
popa
pop
xchg
push
sahf
sbb
and
pop
sbb
int
icebp
jbe
fidivs
xchg
lds
bound
aaa
fldenv
push
arpl
leave
jne
sbb
add
inc
add
insl
push
jmp
adc
fildll
inc
mov
ljmp
inc
pop
iret
loop
scas
push
popf
lahf
mov
into
jmp
adc
popf
push
inc
lahf
orb
inc
push
lock
mov
and
enter
ret
cmc
ret
mov
jge
stc
in
xchg
dec
xlat
cs
cmp
aam
lods
push
xor
mov
xor
and
pop
and
and
fs
mov
jne
jns
dec
in
test
cmp
mov
aaa
push
sbbb
xchg
insb
inc
add
gs
dec
jg
lds
cmc
adc
aad
popa
or
add
mov
inc
fsubrs
pop
aad
dec
shlb
in
xor
inc
jbe
push
add
stos
movsl
stos
cs
idivb
test
insb
std
cmp
ljmp
cs
in
repz
orl
pop
push
ds
leave
lahf
imul
in
xor
or
cmp
movsb
xchg
add
push
add
fwait
insl
addr16
int3
test
out
negl
dec
add
sahf
inc
mov
mov
mov
xor
les
or
sbb
popa
sbb
mulb
mov
dec
adc
lahf
push
mov
movsb
or
pop
cmpsb
cmpsl
icebp
jecxz
sub
push
sbb
dec
xchg
jno
aad
js
pop
add
lcall
mov
xchg
mov
add
fxch
xchg
sbb
inc
repz
dec
inc
pop
sub
jp
lds
xchg
cwtl
mov
xchg
dec
out
xchg
push
imul
lret
dec
or
mov
lods
popf
ds
mov
arpl
mov
jb
fcoml
pop
imul
xor
and
sub
sub
dec
lahf
jo
int3
fimuls
shrl
fs
add
lret
daa
cld
lret
lret
scas
add
push
jg
mov
sbb
movsl
test
out
push
fs
ret
inc
cmp
push
cwtl
test
adc
mov
xor
sbb
test
mov
pop
test
jge
movsb
in
movsl
insl
das
mov
in
mov
adc
outsl
adc
jmp
pop
int
cli
cmp
loopne
add
and
xor
push
sbb
out
adcb
ljmp
aas
jae
pop
and
inc
shl
sbbl
int3
cltd
sub
jo
cld
mov
aam
dec
or
insb
in
lahf
imul
push
in
mov
jecxz
or
push
adc
jmp
stos
call
xchg
push
es
dec
mov
sbb
and
sub
inc
sbb
incl
jae
rep
popf
fnstenv
and
scas
cmpsb
into
lahf
cmpsb
arpl
jge
mov
out
aad
sub
addl
mov
in
push
in
mov
or
pop
sub
and
inc
dec
cs
sbb
sbb
into
shl
int3
stc
cmp
cmp
cmp
jecxz
xchg
or
push
data16
and
add
and
das
out
xlat
test
loop
mov
or
jbe
or
add
push
cmp
xor
fdiv
push
out
out
out
xchg
dec
cmpsl
ljmp
cmp
mov
loopne
jl
or
movsl
sti
mov
mov
jge
inc
cltd
jmp
add
xor
shll
lock
mov
xchg
or
dec
lcall
push
xor
shlb
inc
mov
jl
cmp
mov
mov
scas
jbe
aas
jo
insb
cmp
mov
mov
mov
je
arpl
adc
push
cli
and
lret
outsl
aaa
and
pop
xchg
xor
ljmp
and
xchg
adc
in
pop
sti
xlat
jns
sbb
out
and
aad
scas
mov
cmp
adc
dec
mov
mov
xchg
mov
daa
es
stc
jae
adc
cmc
xchg
push
out
int
fadds
outsl
add
in
sub
adc
call
ret
or
mov
push
mov
xlat
xor
sbb
or
sbb
and
pop
add
mov
pop
add
jno
or
iret
or
mov
push
stos
xor
add
ret
jl
xchg
test
and
iret
jl
lods
mov
pusha
xor
stos
pop
pop
popa
dec
cmp
and
scas
mov
push
frstor
push
mov
cmp
daa
int3
xor
hlt
adc
push
and
dec
mov
jmp
push
into
cmp
mov
daa
mov
leave
xchg
or
push
inc
and
pushf
xlat
push
fwait
xchg
loopne
cld
or
clc
fnstenv
aad
mov
add
pop
outsl
fcomip
fwait
mov
mov
xor
es
mov
dec
scas
std
pop
sbb
fs
adc
sbb
int3
int
mov
inc
out
pop
xor
into
sbb
push
js
mov
pop
lahf
mov
mov
mov
sub
mov
loop
rorb
insb
cltd
mov
xchg
ss
mov
in
jmp
pop
std
pop
pop
add
push
dec
or
fcoml
mov
cmovg
stc
call
jbe
test
jb
fidivl
gs
notl
inc
or
jmp
jae
aam
cmp
or
sbb
sub
aas
inc
ret
ljmp
jecxz
clc
data16
push
fnsave
xchg
lcall
push
mov
in
mov
loopne
and
bound
and
jp
jmp
or
mov
mov
movsb
sub
mov
or
mov
loope
sbb
fsubrl
call
jmp
fs
mov
dec
sub
pop
inc
jne
xchg
push
sbb
xchg
addl
loope
shll
es
dec
sbb
mov
sbb
inc
pop
pop
mov
dec
xchg
cld
fisttpll
dec
movsb
shlb
adc
mov
jbe
jg
insb
adc
push
outsb
push
sub
push
sub
sub
cmp
cltd
xchg
les
fisttps
inc
das
outsb
xor
imul
jmp
loope
les
inc
loop
mov
aaa
cltd
pop
mov
mov
jbe
jno
cmp
sub
sbb
jns
jg
push
loope
ficompl
bound
cmp
xchg
aam
jo
sti
mov
lahf
gs
notb
sub
mov
sub
loop
mov
mov
sub
lds
sub
xchg
in
cmp
sub
sub
movsl
cwtl
leave
das
into
stos
mov
push
or
jle
je
jns
adc
adc
sub
cmp
hlt
pop
outsb
jns
arpl
shll
icebp
pop
jl
js
xor
stos
or
jg
push
data16
roll
cli
push
daa
inc
mov
cmpsb
mov
or
cmc
movsl
add
jbe
or
and
fidivs
push
mov
mov
sbb
pop
lcall
or
ljmp
ja
add
out
cmp
lods
test
push
mov
pop
push
inc
insb
mov
cld
mov
out
xchg
out
sbb
aam
fisttpll
push
inc
sbb
sub
insb
pushf
inc
push
mov
adc
cmp
cli
arpl
pop
push
dec
into
xor
add
aas
xchg
movsl
mov
mov
adc
xor
sub
adc
int
cmpsl
sbb
fwait
mov
test
sbb
adc
inc
adc
dec
scas
dec
push
dec
xchg
push
shl
out
lock
mov
xor
movsl
mov
ficoms
ss
out
push
rcr
loope
ja
insb
mov
fprem
out
aaa
add
xorl
int
lock
js
sbb
scas
dec
out
ret
pop
inc
jge
ja
shlb
lret
mov
sahf
pop
test
rcrl
sub
xlat
push
push
pop
movsl
bound
sahf
addr16
sbb
daa
mov
clc
mov
punpckldq
shlb
rcrb
mov
lods
mov
mov
jnp
cmc
mov
jl
test
dec
mov
ret
sahf
movsb
call
ss
test
mov
adc
dec
xor
bound
push
push
adc
sahf
pop
adcb
in
push
cwtl
cmp
sub
mov
xor
sbb
test
or
dec
mov
test
mov
push
loop
imul
push
je
sbb
add
mov
sti
pop
into
scas
aas
dec
xchg
mov
pop
js
xchg
xchg
adc
out
mov
cmpsb
or
decl
arpl
xor
xchg
pop
pop
mov
xor
pop
ja
or
mov
mov
enter
jbe
dec
or
icebp
test
lea
mov
insb
inc
and
mov
mov
xor
mov
push
int
mov
mov
cmp
adc
jl
add
and
adc
jg
pusha
repz
or
fdivl
rorb
sbb
or
push
cmp
adc
pusha
mov
mov
repnz
jg
push
sbb
outsb
xchg
jmp
mov
push
outsb
sbb
inc
aad
or
fldenv
xchg
test
icebp
sbb
shrb
test
stos
inc
insl
inc
lods
std
lock
pop
pop
adc
leave
stos
aaa
jbe
icebp
stc
aaa
inc
jae
mov
mov
mov
xor
or
sti
xchg
lods
cltd
push
std
iret
push
stos
jecxz
dec
add
xchg
scas
jae
push
mov
push
cmp
cmp
add
jmp
lods
mov
in
xor
sub
and
push
subl
rcll
add
outsl
or
or
pop
lret
loop
pushf
adc
rorl
pop
rorb
in
push
push
lea
mov
shll
inc
std
cmp
jg
jae
or
mov
mov
cmp
cmc
sbb
aam
inc
cs
ljmp
add
mov
xchg
xchg
mov
ret
loop
mov
aas
repnz
ret
movl
mov
adc
and
xchg
inc
rorl
and
add
jl
call
mov
sbb
push
hlt
mov
sub
inc
sbb
jne
call
pop
or
in
mov
or
fisttpl
pop
pushf
rclb
or
das
roll
ss
outsl
fistpl
nop
xchg
ja
ret
ljmp
sbb
cmpsb
int3
scas
mov
clc
mov
jecxz
fs
popa
fidivrs
js
popa
adc
or
jmp
shrb
insl
sysenter
in
push
push
mov
lods
xor
aas
pop
pushl
jne
scas
xchg
mov
jno
pop
gs
mov
mov
leave
jmp
jl
push
mov
icebp
lcall
int3
jg
xchg
enter
pop
xor
call
mov
popa
mov
fs
fstpl
fnsave
xchg
es
cmp
jle
hlt
sbb
rol
cmpsl
mov
push
jp
or
shlb
scas
push
rcr
adc
ret
jno
rcl
dec
cmp
hlt
nop
xor
mov
push
in
inc
cmp
leave
fxtract
jg
mov
xchg
je
add
aad
jbe
aas
inc
push
out
cs
dec
out
call
shrb
or
inc
xchg
jae
xchg
aaa
adc
inc
xor
jge
popa
pop
incb
pop
jmp
sub
xchg
in
and
into
rclb
lods
loop
scas
clc
movsl
and
test
imul
rorl
lods
push
aaa
jmp
icebp
iret
stos
push
repnz
xor
mov
test
add
pop
es
lcall
xor
mov
cmpb
mov
mov
fisubrs
out
lcall
shll
fcoms
sub
roll
and
push
cmp
mov
fidivl
xor
mov
notb
test
dec
flds
dec
jns
or
xchg
aam
xadd
sub
in
movsb
movsb
std
jge
xor
pop
fwait
lahf
int
pop
scas
pop
mov
in
scas
xlat
sub
jo
mov
xchg
jno
inc
cld
xchg
ds
imul
pusha
mov
fwait
dec
mull
mov
or
lock
jecxz
filds
shll
mov
or
addl
add
ds
jae
rorb
or
jg
inc
xchg
jl
mov
add
xchg
jecxz
cmp
mov
push
sbb
sbb
mov
inc
stc
add
push
adc
jnp
std
or
inc
add
pop
shll
cmp
imull
push
jo
cmpsb
xor
pop
push
shrb
shll
cltd
sub
mov
sub
aam
jne
lret
sti
enter
test
xchg
cmp
rclb
xor
dec
bnd
sub
and
call
sarb
sti
das
out
xchg
andl
into
scas
loopne
adcl
les
mov
das
and
or
cmpb
aad
xor
pop
ret
insb
inc
int
lret
push
inc
fistpl
xlat
pop
insb
pop
mov
int
mov
push
mov
outsb
dec
sbb
jne
mov
jnp
into
cmpsl
test
sbb
cltd
test
adc
lahf
cmp
mov
aad
test
movsb
sub
xchg
jo
push
imul
pop
mov
lds
std
shl
pop
jne
loope
mov
mov
cmp
neg
imul
call
and
and
cmp
into
mov
xor
dec
insl
cwtl
jnp
scas
out
push
and
xchg
ja
nop
icebp
mov
imul
fbld
idivl
int3
mov
in
aaa
fadd
jp
jb
mov
sar
cmpsb
test
int3
andb
lods
stc
jbe
mov
mov
and
pop
push
insb
addr16
jns
lcall
ds
xchg
lds
loope
or
push
js
jmp
xchg
jp
add
cmp
lret
int3
and
push
mov
adc
pop
sub
pop
mov
sbb
scas
mov
sti
jb
ss
sahf
insb
pop
mov
loopne
pushf
das
mov
mov
or
sahf
fnstenv
out
sarb
out
pop
repz
outsl
loopne
cli
mov
xchg
aad
mov
popf
iret
arpl
mov
stos
das
mov
in
cwtl
mov
dec
cmp
add
sub
jg
inc
loope
mov
mov
imul
xchg
jo
jne
sarb
aad
loope
jle
sahf
jp
loop
sbb
out
jp
sti
inc
mov
gs
mov
xlat
pop
int
jecxz
mov
push
nop
dec
into
or
inc
leave
lcall
lds
inc
dec
lcall
shrl
rorb
mov
addr16
jne
notl
mov
inc
iret
insl
jno
add
dec
xor
cmp
daa
outsl
int
lret
lods
jns
mov
push
mov
adc
add
add
xchg
jb
shl
mov
int
int3
movsb
stos
dec
mov
jne
ret
aas
jmp
sbb
pop
xchg
enter
jle
es
push
or
push
adc
add
orl
and
dec
mov
ret
jl
cmp
lret
and
or
jo
add
or
mov
sub
nop
and
orl
pop
xchg
fimuls
cmp
andb
int
sti
icebp
jmp
inc
or
and
movsb
fldcw
or
jmp
dec
mov
cmpsl
jmp
cmp
std
xchg
pop
lret
xchg
data16
pop
jecxz
push
jbe
mov
cmp
sbb
in
aam
sbb
cmpsl
cmp
mov
adc
sub
dec
int3
xor
pop
cld
data16
add
jno
mov
dec
std
fdivl
sar
int3
mov
cld
shlb
int3
insl
mov
lcall
jge
out
ds
jmp
jl
or
pop
movb
add
pushf
cmp
adc
mov
adc
mov
addl
jae
cmc
push
add
adc
mov
dec
repnz
lods
shrb
enter
add
test
push
mov
xchg
jo
add
fnsave
imul
mov
xlat
rorl
filds
and
icebp
mov
mov
mov
pop
fisttpll
sar
insl
inc
enter
pop
nop
loop
cmpsb
in
test
push
in
jbe
hlt
pop
xchg
inc
jl
cmp
push
fwait
outsb
lock
lock
ret
out
pop
ja
popf
aas
mov
or
pop
repnz
push
nop
aad
mov
jo
sti
add
mov
idiv
test
daa
xor
add
movsb
call
mov
jno
jmp
lea
in
nop
repz
cld
mov
xor
mov
jg
xor
xchg
cwtl
arpl
jecxz
cmpsl
push
add
jl
and
pop
in
jmp
lods
test
popf
cmp
repnz
and
es
cmc
pop
jecxz
mov
sahf
ds
cmc
outsl
fnstcw
into
stos
lock
dec
bound
nop
sahf
jne
in
hlt
xchg
add
dec
pushf
jb
cmpsb
sti
and
mov
jnp
mov
iret
pusha
mov
repz
fidivrl
lahf
mov
es
popf
xor
pushf
inc
mov
and
sahf
aaa
sarl
out
push
add
ss
push
aaa
sub
inc
jne
cli
jo
jne
and
insb
xor
stos
nop
hlt
adc
cmp
je
lcall
push
pop
outsb
push
aad
dec
bswap
push
icebp
sti
mov
lods
out
js
mov
sti
lds
or
xor
sbb
test
push
fwait
pusha
sub
cmp
insb
lock
jmp
sub
push
push
cmc
imul
es
push
in
jl
incb
adc
shrb
mov
movsl
mov
out
sbb
push
leave
cltd
hlt
mov
mov
repnz
cli
mov
js
cmp
enter
in
loope
xchg
mov
push
sbb
int
in
popa
xlat
movsl
mov
mov
in
cmc
dec
jge
sbb
cmp
push
mov
xlat
pop
stos
mov
and
push
lea
mov
adc
sub
aad
inc
gs
fld
in
pop
adc
adc
jo
sbb
xlat
stos
mov
adc
lods
inc
and
adc
stos
xor
scas
int3
imul
dec
push
and
jo
movsb
stos
jns
jp
sbb
imul
testb
xchg
loop
stos
imul
mov
adc
mov
lds
mov
fstpl
adc
std
sub
mov
lods
stos
or
sub
shlb
in
rorl
addr16
ret
xorl
push
xlat
test
call
mov
mov
pop
mov
adc
pop
test
int3
mov
mov
test
push
push
movb
insl
push
subl
add
js
mov
lahf
mov
cli
rcr
push
adc
inc
cmp
pushf
jle
xchg
xor
arpl
pop
cld
or
xchg
jbe
push
loope
pop
xchg
cmp
lock
mov
jbe
je
or
clc
gs
mov
mov
fadds
movsl
pop
loop
incb
or
push
add
adc
adc
pop
aam
rcrb
and
and
mov
ss
leave
lods
push
cld
lahf
mov
imul
jne
mov
jl
iret
jbe
insl
lds
or
xor
xchg
and
cmp
int3
test
sbbl
xlat
sub
pop
push
in
mov
inc
xor
notl
in
adc
lds
pop
jns
push
mov
inc
inc
pop
mov
adc
adc
data16
daa
filds
shrb
jne
cs
add
xchg
or
into
adc
mov
sti
pop
into
adc
or
mov
dec
or
push
imul
dec
cwtl
mov
inc
call
add
jne
rcrl
sar
pop
es
sub
ficoms
sahf
pop
fs
cli
hlt
lahf
enter
mov
sub
jbe
outsl
mov
sub
movsb
daa
lds
cltd
cmp
in
jns
adc
mul
sub
dec
mov
testb
xchg
inc
dec
or
sbb
leave
pop
add
mov
out
xchg
jecxz
in
jne
cmp
sub
sbb
mov
inc
add
scas
fs
xchg
lea
shrb
stos
es
add
pop
dec
insl
inc
movsl
add
xchg
xor
xchg
jmp
mov
loope
mov
inc
add
inc
mov
mov
push
cmp
ffreep
mov
lods
fmul
int
mov
mov
mov
cmpb
or
test
rolb
and
pop
cmp
insl
mov
mov
jge
aas
mov
out
pop
outsl
mov
mov
xlat
fs
fcoml
push
loope
mov
xchg
cwtl
mov
sub
or
xor
lock
jmp
aam
scas
push
mov
adc
hlt
stos
in
imul
push
inc
aas
outsb
subl
in
xor
push
fsts
mov
test
testl
cli
arpl
add
jne
mov
jge
out
pop
push
push
shll
push
nop
insl
fdivs
test
dec
fsubl
and
xorb
or
or
and
push
loopne
sub
call
xlat
mov
mov
movsb
jb,pn
add
and
dec
push
std
scas
jmp
inc
fsubs
pop
cltd
xchg
scas
sub
test
jecxz
insb
jns
mov
orb
pushl
pusha
cmp
aas
leave
push
std
pop
das
dec
add
ja
and
cmpsb
pop
inc
xchg
bound
cmp
lahf
jnp
adc
xor
xchg
mov
push
cmpsb
mov
repnz
jg
fcmovnu
es
negb
mov
adc
pop
push
dec
adc
push
adc
mov
and
push
adc
dec
jnp
jo
insb
data16
push
pop
decb
mov
fstpt
xchg
xchg
rcrl
fnstcw
ret
and
inc
cmpsb
dec
jl
add
jp
movsl
mov
jge
push
adc
movsb
and
mov
pushf
jge
pop
test
inc
int
mov
dec
jae
out
push
mov
pop
cmp
loope
jp
adc
mov
push
mov
loope
cmp
xlat
ja
pusha
add
push
xchg
repnz
mov
and
jle
cltd
and
lods
push
mov
mov
lret
in
or
out
mov
push
xrelease
cmp
sbb
iret
xor
dec
jb
orb
xchg
fs
mov
scas
dec
fsubr
scas
inc
loop
or
fwait
or
lret
sbb
push
fwait
outsb
rol
les
imul
jle
jb
push
cmpl
imul
xchg
mov
enter
cli
gs
jecxz
mov
ret
xchg
movl
repnz
stos
fisttpl
loope
sbb
dec
loopne
hlt
aad
adc
jp
and
jmp
mov
cwtl
pop
pop
addr16
inc
pushf
pop
xchg
and
add
mov
in
popf
adc
lods
push
or
ficomps
adc
cld
push
lahf
mov
and
pop
mov
fwait
or
push
mov
xchg
imul
jge
cs
inc
cmp
jae
sbb
inc
sub
push
jb
mov
mov
es
dec
jg
jecxz
mov
ljmp
ja
pushf
arpl
addr16
out
lods
aaa
adc
jge
xchg
in
rcrl
fs
cmp
or
sbb
popa
and
add
fistpl
sub
lret
adc
scas
pop
push
std
dec
repz
dec
shll
fsts
sub
insb
cltd
pop
rolb
jmp
mov
sub
jge
mov
mul
or
jmp
cli
cmc
sbb
pusha
insb
mov
sbb
mov
pop
popa
pop
mov
cld
sbb
out
adc
orb
mov
sub
pusha
push
dec
popl
or
jno
pop
mov
adc
lahf
es
xchg
mov
mov
daa
cmp
es
jnp
ret
xchg
test
cmovo
pop
das
in
cmp
inc
jecxz
jo
hlt
ficomps
pop
xor
cmpsb
mov
jae
dec
jmp
addr16
cli
das
out
push
xchg
rclb
pop
gs
and
mov
les
adc
in
fucom
jbe
pop
fsubr
pop
aad
inc
jmp
out
fdivr
mov
add
in
int
cmp
or
jo
pop
push
imul
data16
repz
sahf
mov
std
pop
xor
mov
or
adc
sbb
mov
sbb
pop
movsb
rorb
stc
pop
es
pop
outsl
scas
and
pop
cmp
cmp
and
cmp
sub
clc
add
mov
xchg
mov
in
fs
pop
inc
cli
sbb
jno
sbb
sbb
push
xor
lret
mov
data16
fcmovnbe
pop
shlb
cmp
adc
inc
mov
mov
dec
or
mov
push
inc
stc
out
out
cld
cmpsl
sti
inc
mov
adc
repz
fwait
out
pop
cltd
pop
std
adc
out
movsb
sbb
int3
int
mov
push
lcall
test
cmp
sbb
xchg
xor
mov
in
adc
pop
or
stc
sbbb
hlt
xlat
int3
xor
sbb
js
push
bnd
test
mov
orb
rcll
jae
cmp
sbb
call
mov
jns
cmp
rolb
stc
xorl
jae
mov
movsl
or
pop
and
mov
int
out
adc
inc
dec
imul
loop
das
or
jae
out
popf
in
lock
stos
ret
cmc
nop
imul
subl
ret
cmp
shlb
add
movsb
cmpsb
inc
data16
dec
xchg
ficoml
mov
fcoml
mov
scas
inc
sahf
xor
stos
sub
jo
sbb
data16
in
or
add
popa
dec
fisttpl
cmp
std
cmp
and
push
ljmp
in
ret
xchg
dec
xchg
jbe
out
xchg
push
adc
out
jnp
xchg
jmp
mov
adc
addl
rorl
flds
fwait
fwait
xchg
inc
pop
jl
mov
inc
clc
push
movsl
pop
mov
dec
mov
or
push
sarb
xor
nop
dec
or
ds
mov
mov
jecxz
or
inc
cmpsb
push
outsl
xchg
pop
fwait
lods
ficoml
add
mov
jle
popf
mov
push
mov
mov
mov
xchg
sahf
adc
gs
lds
test
shrb
jnp
cs
xor
push
pop
jmp
insl
mov
sub
sub
xchg
imul
push
inc
ja
out
pop
mov
imul
dec
inc
insl
gs
ljmp
push
daa
xlat
mov
insl
adc
popa
xchg
fwait
inc
lods
mov
stos
mov
in
dec
inc
leave
xchg
fisubs
lahf
and
insl
out
push
lock
cmp
push
test
or
cmc
xchg
test
insl
dec
push
cmp
fwait
in
pushf
lret
fsubrl
adc
push
push
cltd
inc
mov
mov
iret
inc
inc
mov
inc
adc
mov
ja
jbe
ja
aas
fwait
loopne
scas
in
jbe
xchg
push
shll
pop
arpl
sbb
push
jno
mov
loope
lret
enter
out
je
test
push
cmp
test
and
lret
lret
fistps
mov
push
test
cmp
push
mov
outsb
mov
jo
ljmp
pop
insb
sub
xchg
dec
lea
aam
das
enter
ljmp
in
fadds
clc
cld
faddp
sbb
pop
leave
push
insb
dec
shlb
pop
dec
divl
xlat
pushl
and
test
inc
cmp
cmp
cwtl
push
and
add
dec
sub
add
sub
stos
dec
adcb
daa
dec
mov
scas
and
in
daa
ret
mov
push
mov
cwtl
stc
mov
pop
ja
fucomi
xchg
jb
lea
pop
jge
adc
repz
ja
mov
sbb
jp
or
mov
or
xlat
jne
or
movsl
or
addr16
loope
cmp
xchg
call
gs
xor
daa
pop
ss
or
xor
das
test
pop
push
and
pop
push
mov
sti
fdiv
xlat
mov
sbb
xor
add
sbb
in
dec
xor
ret
test
rcrb
imulb
jae
aaa
out
pop
mov
xchg
fneni(8087
shlb
mull
pop
pushf
fs
mull
or
mov
jo
add
sub
push
or
adc
fidivrl
push
push
aaa
icebp
mov
jo
outsb
jmp
xchg
int
les
fstps
stc
push
sbbl
mov
push
cwtl
xchg
or
add
enter
push
aam
or
or
xchg
testl
fsts
stos
dec
jle
and
imul
cmp
scas
add
inc
outsb
mov
out
mov
lret
push
inc
repnz
fbld
ljmp
mov
mov
mov
xchg
jl
jmp
adc
in
ret
inc
lods
stos
mov
in
and
xor
pop
sub
push
dec
pop
push
test
inc
int
cmc
push
aas
int
push
pop
and
ret
pop
mov
out
ss
add
ss
nop
dec
dec
stos
xlat
loopne
dec
or
mov
jg
pop
cmp
and
jo
daa
mov
sub
jecxz
and
cmc
cmp
cmp
push
notl
pop
xchg
cmp
scas
jecxz
imul
loope
xor
loop
stc
push
sbb
mov
push
and
dec
js
testb
jne
js
jns
inc
sub
jae
adc
xchg
je
push
insl
dec
test
mov
mov
mov
pop
adc
sbb
mov
mov
adc
bound
jne
test
shrl
ss
or
mov
cmp
std
mov
pop
xor
in
add
daa
pop
add
xchg
or
or
jge
mov
inc
lods
sbb
jle
add
outsl
jnp
stos
scas
mov
push
pop
movsl
xor
mov
sub
popl
push
jae
insl
or
xor
pop
cmp
sbb
xor
adcl
jecxz
cmc
and
inc
std
add
ss
dec
adc
loopne
or
jg
jnp
or
or
jae
xchg
test
pushf
mov
rolb
sub
sub
aam
cmpsb
pop
fmull
fs
jge
or
lcall
in
jmp
mov
aas
push
dec
ret
xchg
fmul
scas
push
aam
pop
cwtl
sub
int3
fs
cmp
imul
mov
xchg
fistl
sbb
and
sub
sahf
cli
lcall
and
lahf
jbe
cmpsl
dec
push
scas
xor
fisubrl
js
mov
lret
loopne
sbb
iret
mov
repz
jae
mov
push
daa
in
insl
data16
pop
pusha
pop
shll
leave
ljmp
adc
inc
sarl
mov
imul
mov
sahf
movsb
stc
addr16
sub
lds
xchg
or
sub
push
xor
mov
and
xchg
movsl
mov
xorb
push
test
mov
xchg
adc
cmpsb
aas
test
cmpsl
dec
lock
pop
arpl
jnp
in
fcmovbe
outsl
lcall
test
mov
cmp
cld
mov
mov
orl
xor
jle
or
dec
loope
dec
jae
call
loope
orb
je
jns
into
adc
jno
mul
pop
rclb
jns
fildl
mov
sbb
mov
mov
mov
fcom
push
das
mov
rcrb
stos
imul
mov
jge
das
in
test
fimuls
imul
leave
xchg
add
cmp
ret
js
mov
scas
jbe
test
mov
lea
xchg
xor
xchg
jns
shrb
sbb
push
lods
in
lret
int
aaa
sub
mov
cmp
sbb
scas
out
repz
xchg
into
xlat
mov
xor
push
mov
jl
cmp
test
xchg
inc
loope
dec
aad
and
negb
xor
stos
fbstp
push
mov
fdivrl
dec
xor
insb
adc
add
fwait
rol
test
mulb
sahf
xor
shrl
sub
xor
pop
es
xor
inc
jbe
je
push
pop
adc
push
jmp
sub
in
ljmp
dec
adc
mov
lds
in
lods
ss
clc
cmp
icebp
xor
xor
sbb
push
lods
rcll
imul
fcomps
xchg
dec
loopne
in
mov
sbb
xchg
jo
les
iret
pop
lahf
or
mov
sbb
inc
push
pop
xchg
scas
fldcw
inc
xchg
sti
pop
adc
adc
cmpsb
xchg
fiadds
push
adc
dec
adc
mov
cmp
lods
push
add
jbe
mov
mov
push
in
lret
mov
jae
negl
lahf
cmp
inc
dec
mov
sbb
sbb
mov
dec
add
xor
lcall
stos
loop
jnp
sub
cmp
cld
out
add
mov
jle
gs
and
push
loopne
xchg
stos
scas
test
inc
sub
adc
sub
aam
loopne
pop
or
mov
lods
cld
mov
sub
loope
xchg
mov
sbb
inc
insb
pop
and
iret
xchg
pop
xchg
inc
mov
imul
fs
imul
imul
shll
xchg
xrstor
mov
push
dec
paddusw
add
add
stc
jecxz
je
cli
or
iret
cmp
inc
addr16
mov
or
repnz
jae
xor
fists
cmp
test
test
test
clc
mov
cmp
cmpsb
push
loopne
xchg
mov
or
out
pusha
push
ds
mov
out
ret
push
lea
in
or
sub
stos
das
cltd
or
xchg
sub
loop
xchg
dec
aad
jne,pn
lea
cmp
iret
mov
jae
mov
arpl
gs
xchg
cli
cmpsl
mov
mov
lods
arpl
sbb
cmp
xchg
sub
jae
mov
sbb
mov
fisubrs
in
add
dec
scas
sti
dec
cld
stos
cmpsl
add
push
fstl
dec
mov
push
jns
inc
xchg
push
popa
inc
shrb
push
xchg
sub
lds
pop
call
xchg
pop
leave
push
cmp
mov
test
xchg
mov
lock
fidivs
stos
or
ds
mov
insl
mov
fcmovne
faddl
rcrb
icebp
stos
sub
xchg
jle
dec
push
insb
push
divb
dec
aam
mov
test
xor
sti
insl
fucomp
test
shl
lds
inc
popf
insb
mov
leave
divb
out
out
mov
lcall
jmp
shll
sarl
repz
ret
xchg
or
lahf
add
imul
mov
and
mov
fistpl
pop
ljmp
cli
push
xor
lahf
scas
aaa
push
shlb
das
push
mov
out
in
addr16
imul
cmp
lcall
fdivrl
jo
mov
shlb
je
fstl
cmp
sub
repnz
in
adc
ret
xchg
adc
je
movsb
adc
mov
lahf
mul
lea
clc
inc
ss
mov
pop
pop
dec
inc
into
xor
pop
jge
lcall
mov
popa
mov
test
mov
test
insl
gs
xchg
dec
dec
pop
lcall
sub
adc
loop
sbb
sub
add
dec
jb
icebp
dec
dec
sub
inc
sub
lods
insl
sub
test
and
mov
imul
fmuls
mov
div
test
xchg
inc
daa
jle
mov
dec
call
sbb
pusha
sbb
xor
lods
clc
fistl
fistpll
int3
out
scas
xor
xchg
fsub
fs
or
pop
inc
pop
fsubrl
sahf
stos
dec
pop
push
outsl
pop
xor
xchg
inc
pop
imul
sahf
in
cmp
aaa
adc
fsubl
dec
loope
enter
xchg
mov
xchg
or
xchg
xor
lods
test
sahf
pop
jge
xor
nop
dec
call
xchg
sbb
std
iret
pop
cmp
jbe
pop
adc
or
sti
and
mov
lock
loope
dec
push
js
or
sbb
add
fucomi
lahf
daa
call
mov
gs
js
jno
sbb
stc
xchg
sub
outsl
fwait
sub
adc
stc
jecxz
add
jge
scas
jle
das
cmp
cmp
sub
push
fsqrt
jge
ja
out
ret
mov
or
adc
adcl
mov
push
and
mov
mov
lahf
xor
pop
and
loopne
mov
sahf
mov
out
push
stc
push
les
dec
mov
gs
daa
jecxz
inc
sbb
dec
hlt
arpl
cwtl
imul
dec
je
xchg
mov
cmpsb
jo
mov
mov
pusha
jo
sbb
adc
jg
xlat
adc
fwait
add
insl
cmovnp
aaa
mov
lret
test
mov
mov
daa
xchg
xchg
popa
loop
jecxz
pop
jo
mov
mov
mov
int3
mov
addr16
std
and
hlt
and
mov
or
push
mov
lahf
and
cmp
jbe
nop
pushf
xchg
rol
lock
lods
ret
aam
xor
sub
and
mov
loope
xor
adc
xchg
fsts
cwtl
mov
outsl
aas
mov
jns
adc
dec
mov
nop
mov
inc
push
into
repnz
or
inc
cmpsl
mov
je
and
lea
jno
pop
or
mov
xchg
and
xchg
or
mov
xor
repnz
add
cltd
jl
mov
push
insl
add
outsl
sbb
testl
jno
mov
cmp
data16
add
dec
push
xchg
lods
call
mov
imul
mov
fwait
daa
into
dec
xor
cmc
cmpsb
fdivrs
pusha
shl
fidivrs
out
leave
nop
cmp
arpl
sbb
dec
adc
xchg
add
scas
mov
cwtl
imul
in
pop
ljmp
add
verw
push
or
xchg
sti
xchg
rcll
shll
lahf
cmp
xchg
addr16
mov
push
mov
movsl
pop
popa
sahf
jb
mov
je
clc
jl
add
mov
call
inc
stos
push
mov
pop
or
outsb
int
and
leave
push
addr16
xor
das
idiv
jno
push
mov
sbb
cmp
or
aam
int
sti
pop
pop
mov
adc
cmpsb
imulb
clc
mov
notl
push
and
test
sbb
mov
je
gs
jnp
pop
jae
xor
jne
enter
inc
adc
mov
mov
loopne
ljmp
xchg
pop
cmp
mov
dec
fiaddl
idivb
dec
or
mov
cmc
mov
push
add
dec
dec
xor
dec
in
mov
sarl
popf
push
iret
subb
push
xorl
mov
enter
push
mov
and
rcl
mov
or
cli
aam
add
lds
push
sub
sub
sbb
cmc
shlb
enter
or
cli
inc
arpl
lock
sbb
dec
xchg
and
enter
enter
mov
fisubs
mov
xchg
ss
sbb
movsb
jp
shrl
mov
cmpb
aad
push
out
repnz
je
cwtl
sub
push
sub
and
clc
out
pop
push
pop
testl
test
add
addr16
xor
ret
jle
rcrb
mov
popf
inc
xchg
ss
in
add
popf
push
ret
pop
and
cmp
sbb
mov
mov
cmp
lods
dec
scas
out
and
lock
cwtl
jns
or
lds
add
loop
movsb
cmpsl
movsl
in
sbb
arpl
ja
xchg
jle
xchg
in
mov
jmp
jnp
push
test
mov
rcll
addr16
push
dec
pushf
aaa
loopne
inc
pop
rolb
cmp
inc
cli
xor
sbb
pushf
mov
ja
jnp
jne
mov
pop
cmp
sarb
outsb
sbb
movsb
jno
and
lods
cmp
fisubl
mov
mov
adc
cld
push
lret
dec
inc
mov
jo
jg
mov
imul
or
cli
lea
stos
xchg
mov
enter
test
fdiv
cmp
divl
inc
cmp
push
pop
lea
mov
arpl
xor
cmpsb
pop
in
cmp
inc
mov
cld
cmpsb
adc
in
std
scas
pop
enter
push
dec
icebp
jmp
mov
xchg
popf
fisubrs
inc
adc
mov
mulb
jae
pop
rclb
pusha
arpl
orb
inc
mov
sub
lds
dec
fwait
dec
sub
mov
lods
leave
jnp
mov
pusha
push
pop
lahf
adc
fwait
xchg
out
movsl
aaa
or
in
lods
iret
movsb
dec
mov
sbb
stos
jbe
outsb
pop
mov
sub
mov
repnz
imul
mov
fcmovnu
movsl
insb
loop
mov
es
jmp
mov
imulb
add
inc
daa
sub
jnp
jne
outsb
clc
jns
loopne
adc
sbb
addr16
mov
cli
gs
dec
imul
fsubrs
adc
cmp
ja
cmp
cmp
sarb
repz
je
dec
mov
repnz
inc
inc
fadds
popa
lret
jns
xchg
mov
movsb
add
test
ljmp
adc
aaa
inc
mov
loop
out
lods
icebp
filds
test
outsb
fisttpl
xor
mov
cmp
adc
es
rcr
cmp
xchg
or
sub
and
in
rorb
sub
stos
cld
lea
ret
add
mov
outsl
inc
popf
pop
mov
imul
sahf
mov
cltd
ret
dec
je
xchg
enter
pop
jmp
pop
gs
or
jl
fwait
insl
and
imul
lahf
in
out
add
dec
in
adc
clc
pop
or
bound
out
push
icebp
dec
push
mov
cmpsl
aaa
call
or
imul
mov
jl
mov
notb
jg
push
or
xchg
xchg
fildl
in
xor
adc
or
aas
mov
dec
aaa
mov
mov
cld
cmc
sbb
adc
push
movsb
sahf
popf
jge
fstpl
test
mov
jne
xor
popf
movsb
icebp
cmp
rorb
sub
push
clc
and
shlb
std
loop
fs
pop
fcomps
aam
mov
or
jecxz
shlb
test
nop
adc
jge
push
test
sti
xchg
lret
inc
leave
stos
sub
sub
add
out
mov
mov
mov
shrl
ja
jecxz
hlt
mov
lock
test
mov
mov
mov
or
cli
fiadds
dec
cs
xchg
cmp
cmp
divb
jo
xchg
push
test
rcll
loop
addr16
lds
dec
mov
or
or
sbbb
inc
sbb
scas
dec
mov
sub
mov
xchg
lds
pop
repnz
iret
inc
inc
test
or
lret
xchg
lcall
outsl
orb
sbb
sub
in
xor
stc
bound
xor
inc
int3
ljmp
xlat
rolb
mov
xor
in
pop
ret
clc
aas
leave
cwtl
adc
pop
jle
aad
adc
push
iret
cwtl
jae
inc
popf
lcall
add
mov
data16
jmp
push
dec
stos
dec
loop
and
push
push
fdivrp
or
xlat
fnsave
fsubs
adc
flds
cmpsb
sub
ss
popf
shl
mov
bswap
adc
lock
sub
mov
stos
and
jge
arpl
loope
fmull
movsl
sti
insb
mov
jnp
mov
imul
cmpsl
mov
sarl
sub
je
rcrb
mov
mov
pop
out
loop
xchg
divb
cmp
dec
ja
mov
mov
mov
and
or
rorb
cld
xchg
pushf
mov
mov
push
mov
lods
push
xlat
in
lods
fbstp
dec
cmp
xor
cmc
jno
cmpsb
pop
push
sbb
push
cmp
loopne
xchg
push
sub
adc
aad
lea
out
adc
xor
xlat
sbb
mov
lods
and
fsts
cltd
repz
loopne
cli
stos
js
gs
add
dec
jo
popf
xor
addb
sbb
negb
mov
jecxz
and
push
mov
pop
notl
jp
or
bound
cwtl
sti
clc
xchg
sub
sub
cwtl
xor
sbb
movsl
adcb
or
in
jno
xchg
xchg
mov
test
aam
xchg
jo
in
pop
cmp
jl
jg
pop
mov
out
pop
shl
jle
lock
test
negl
mov
decl
mov
jno
pop
or
mov
inc
inc
frstor
insb
mov
push
pop
push
daa
sub
add
sub
lret
pusha
dec
pop
cmp
movsb
add
and
shrl
push
push
inc
jno
shr
adc
jo
std
push
insl
enter
cmp
push
stos
jmp
cwtl
push
icebp
dec
or
lds
sbb
mov
int
sub
pop
sbb
int3
add
sub
outsl
and
clc
pop
pop
mul
filds
sarl
mov
incl
xor
jnp
or
std
mov
mov
scas
fcoms
aas
addr16
cmp
add
mov
shll
add
add
pushf
lahf
movsl
dec
mov
sbb
out
xchg
je
dec
cmp
xchg
add
cmp
stc
add
jp
pop
pusha
int
add
or
mov
mov
pop
dec
repz
xor
fldt
js
pop
cmpsl
scas
push
jmp
ret
cmp
ljmp
push
loopne
mov
fdivrp
or
xchg
jne
or
mov
push
add
inc
nop
ss
add
popa
sbb
jecxz
push
jbe
pop
jmp
xor
push
outsl
shll
iret
inc
orb
jle
push
lcall
jae
out
and
xchg
inc
clc
xchg
test
imul
repz
in
jno
mov
pop
into
push
cmp
movsb
dec
mov
out
mov
add
sub
fstl
das
ds
cmp
xor
cwtl
push
fdivp
es
bound
call
sbb
push
push
aas
lods
fisubrl
icebp
mov
push
jne
mov
add
push
mov
push
out
mov
and
bnd
out
inc
jge
aam
pop
test
jbe
sbb
out
lret
int
mov
sub
jbe
mov
mov
stos
mov
ret
scas
or
mov
or
ljmp
inc
outsb
in
dec
lock
sbb
je
inc
test
sbb
push
shll
scas
cli
insl
cli
stc
dec
mov
int
int
push
or
sub
imul
cli
sbb
lcall
sub
adc
lock
pop
and
outsl
flds
mov
adc
sbb
add
or
nop
adc
and
mov
repnz
mov
mov
clc
sahf
stos
decb
adcb
jmp
rorb
rclb
shll
xor
and
loop
stos
jnp
and
mov
dec
dec
pusha
sub
xchg
push
jmp
xlat
das
cmp
clc
popa
js
lods
cli
bound
sar
mov
sarl
mov
add
leave
or
pop
jmp
insl
xor
aam
xchg
push
clc
mov
mov
cmp
add
hlt
jae
insb
xor
icebp
and
cmp
insb
movsl
fcoml
repz
loop
dec
cmp
jne
fwait
push
dec
fidivs
faddl
push
xchg
loope
movsb
cmc
aad
mov
inc
clc
inc
out
popf
add
outsl
mov
xor
outsl
jns
jo
addr16
pop
ret
stos
adc
xchg
inc
fmul
jmp
adc
pop
into
out
cmp
and
ror
out
cmp
pop
sbb
add
clc
sub
test
pop
inc
sub
cmc
mov
or
out
adc
mov
aaa
sbb
cmp
adc
xchg
add
sbb
jb
in
dec
sub
cmp
movsl
int3
in
imul
clc
cltd
inc
cmpsb
lea
test
pop
xor
mov
das
adc
hlt
inc
cmpsl
cli
push
fsub
popf
sti
arpl
lock
mov
jb
and
push
das
and
sub
nop
mov
pusha
ja
testb
ss
int3
push
jle
int3
int
rorl
icebp
mov
pop
xor
fidivrs
mov
adc
repnz
mov
lods
pop
mov
call
cmp
or
add
je
aam
es
mov
fisttpl
inc
popa
push
pusha
popa
mov
pop
test
lods
fidivs
test
adc
repnz
push
dec
in
lret
cltd
dec
adc
stc
js
and
mov
aam
xchg
and
ljmp
xchg
iret
insb
imul
pop
push
adc
les
pop
repz
enter
adc
mov
sahf
and
das
pushf
push
adc
mov
push
push
pop
aam
mov
into
mov
dec
sub
inc
xchg
stos
sub
ret
in
clc
sahf
jae
jno
push
cmpb
inc
push
stos
jmp
mov
push
adc
push
push
xchg
sub
sbb
push
stc
mov
dec
xchg
push
sahf
adc
das
push
scas
gs
int
dec
and
sbb
or
sub
dec
sub
mov
mov
mov
jle
jl
sahf
ud1
dec
pushf
outsl
loopne
mov
stc
push
jecxz
and
push
xchg
pop
loope
insb
test
push
pop
jnp
iret
in
xor
dec
dec
pushf
and
insb
rclb
add
fcoms
sbb
int3
or
cwtl
aam
jns
out
sub
mov
xor
cmc
data16
mov
mov
cmp
jp
and
dec
js
aam
insl
ss
add
jbe
xor
sahf
jp
cmp
nop
les
cmp
ljmp
cld
arpl
xchg
ljmp
dec
imul
xchg
cmp
push
inc
inc
xorl
xor
inc
scas
push
dec
dec
or
leave
test
mov
ja
shll
add
ret
jbe
cld
push
test
cmpsb
fnstsw
in
std
out
xchg
mov
inc
fst
mov
popa
sahf
mov
cmp
ja
mov
pop
in
rorb
xchg
xor
lds
xchg
test
mov
mov
divb
sti
add
popf
mov
pop
int
jl
addr16
cmc
iret
xor
mov
popa
notb
loopne
lock
ret
fbstp
repnz
test
xchg
daa
sbb
push
int
mov
lcall
cmp
cwtl
xchg
ds
cmp
lds
fwait
sub
lret
jbe
jne
rcrb
popf
or
and
push
pusha
sbb
or
pop
pop
dec
loope
dec
pushf
inc
testb
enter
or
mov
stos
clc
xor
cmpb
insl
xchg
add
and
shrb
dec
mov
icebp
shrb
jns
das
xchg
enter
mov
push
shlb
lods
test
adc
mov
stc
div
nop
xor
mov
imul
hlt
jmp
pop
cs
inc
sbb
imull
hlt
insl
push
inc
lea
cmp
rolb
divl
inc
data16
in
movsb
clc
loop
push
jecxz
dec
push
add
mov
ss
xchg
jp
stc
cmp
mov
stos
sbb
bound
outsl
sub
paddb
jmp
jge
pop
push
stos
je
movsl
jae
cli
mov
push
jnp
xor
scas
jb
cltd
pop
gs
in
xor
das
imul
lret
lahf
fdivs
dec
fxch
cs
testb
cmp
in
xchg
aas
sbbb
mov
stc
jl
fsubrl
push
loopne
xchg
fbld
cmp
adc
fmulp
mov
rclb
inc
push
mov
pop
xor
pop
aaa
add
shl
dec
loopne
or
movsb
mov
lahf
or
out
std
pop
mov
push
fldt
xchg
gs
in
ror
pop
test
lcall
and
jl
fnstenv
movsl
pop
cltd
outsb
rcrb
stos
cmpsb
and
cmpb
adc
pop
xor
pop
movsl
or
fcomi
lods
call
inc
je
fimull
hlt
or
pop
insb
int3
sti
xchg
pop
mov
aaa
fcomps
mov
outsl
push
dec
les
movsb
in
adc
sarl
or
xchg
repnz
xor
int
mov
xor
aam
mov
je
xchg
das
loopne
push
jge
jmp
mov
aad
add
mov
in
in
out
scas
inc
cmp
sar
or
sub
push
push
pusha
mov
and
xor
stos
mov
cmp
pop
cmpsl
shrw
jge
mov
scas
push
fsubl
dec
stc
ret
or
popa
mov
inc
les
xchg
or
in
in
ret
int
xchg
movsl
lea
stc
jno
add
inc
sbb
je
jae
xchg
sbb
ret
or
scas
popf
sbb
lcall
pop
and
jns
push
inc
movsl
sub
sbb
popa
imul
xchg
decb
sbb
incl
and
cmp
xchg
push
push
xchg
xlat
in
sbbb
in
les
clc
popa
mov
shll
aam
xlat
or
imul
push
push
mov
ss
arpl
dec
cwtl
aad
mov
mov
das
pop
pop
xor
jno
loopne
cmp
mov
imul
cmp
jmp
mov
loop
sub
out
cmp
cmp
lcall
pop
ret
nop
rolb
addr16
jne
xchg
leave
mov
loopne
push
xchg
or
js
lret
and
scas
and
xor
loop
mov
mov
les
mov
icebp
pop
mov
inc
push
lods
inc
xchg
xchg
or
dec
les
cmpsl
xchg
mov
mov
es
xor
cmc
ss
mov
jmp
sub
cld
inc
sahf
addl
inc
arpl
sub
data16
fdivr
mov
sbb
movsb
pop
ja
xlat
cmp
lret
push
or
jle
fisubl
mov
imul
leave
lahf
cmp
ret
mov
dec
flds
and
jle
xchg
sti
sbb
lcall
push
iret
stos
and
es
mov
fimull
pop
and
mov
mov
xor
insl
das
mov
xchg
sbb
and
fs
std
test
pop
mov
or
sub
lds
sti
out
iret
lcall
xchg
lds
adc
cltd
repnz
outsl
bound
mov
fisubs
adc
mov
stc
popf
fs
icebp
add
pushf
test
imul
mov
sbb
jbe
fimuls
aam
inc
inc
test
sub
mov
fcmovnb
pop
xchg
stos
xchg
in
sbbb
and
loope
aas
sub
cmp
shll
lods
out
cmp
out
pusha
cmp
and
pop
xchg
mov
adc
push
adc
or
lret
clc
insl
fistpll
inc
jbe
sarb
or
syscall
ljmp
js
sarl
das
jo
ret
daa
push
xchg
test
mov
shll
jo
into
or
in
cmp
mov
inc
idivl
and
out
fmul
inc
in
pop
out
or
mov
sub
push
icebp
xchg
rcr
sbb
mov
xchg
add
pop
mov
or
push
sub
fwait
and
sbb
incb
pop
mov
fwait
lret
jbe
sbbb
dec
cmp
jle
xchg
addr16
cltd
push
lock
outsb
mov
scas
lahf
xlat
jns
mov
outsl
lds
test
xor
inc
or
popf
xor
sti
adc
mov
pop
lahf
mov
cwtl
xchg
or
cmp
mov
rcr
imul
cmp
stos
aaa
jg
push
pop
imul
cli
fdivrs
fists
mov
cmc
aam
mov
cmpsb
push
cwtl
iret
sub
cmp
mov
inc
rolb
add
js
hlt
test
loopne
hlt
pop
dec
adc
push
adc
ja
popf
in
xchg
xor
xor
lahf
scas
lea
inc
xor
daa
lret
lock
push
sarb
and
lea
mov
cmp
popf
loopne
andl
add
inc
sub
inc
xor
xchg
push
aaa
popa
push
xchg
hlt
cwtl
add
fcomps
mov
push
or
ds
adc
fidivrs
lds
test
movb
mov
sbb
xor
xchg
call
leave
fdivl
mov
push
std
push
mov
mul
scas
or
xor
xchg
scas
stos
dec
mov
mov
mov
cmp
repz
mov
pop
ret
adc
sbb
test
jae
sbb
clc
inc
mov
cs
int
pusha
pop
mov
mov
arpl
xor
pusha
adc
out
or
xchg
xchg
push
sbb
sbb
hlt
daa
add
pop
cmp
movsb
xor
xchg
daa
push
or
push
fnsave
in
lods
insb
push
lahf
dec
xor
push
loope
fistpl
dec
int3
jmp
xchg
or
fidivrl
lret
jns
enter
fstps
ljmp
pop
jno
pop
fmull
outsb
sub
mov
cs
push
adc
mov
or
scas
pop
test
sbb
fildll
jmp
adc
pop
std
jb
adcl
outsb
fsub
add
inc
mov
je
fadds
in
jae
push
mov
mov
dec
into
xchg
adc
pop
arpl
mov
mov
scas
test
lock
inc
dec
sub
enter
push
mov
lds
jl
out
bound
call
aam
sbb
mov
mov
lahf
aam
sub
lds
popa
xchg
mov
inc
negl
adc
outsl
cwtl
sbb
push
ja
ljmp
repnz
andl
sub
loope
mov
out
jp
lret
mov
jae
popa
inc
inc
cwtl
mov
aam
je
out
fwait
pop
mov
mov
sbb
pusha
cli
xor
lods
arpl
jne
sub
xchg
pop
mov
xor
dec
cmc
rclb
dec
fisubl
xor
inc
jmp
jmp
sub
ljmp
mov
enter
ret
add
push
addr16
jno
cmp
jecxz
imul
jl
xlat
mov
int
jle
mov
dec
pop
jl
mov
xchg
sub
sbb
aas
mov
jmp
add
cs
mov
mov
rolb
loope
pop
loop
pop
shlb
testb
cmp
jge
clc
inc
in
and
cmp
xor
jmp
sub
fnstcw
ret
shr
add
leave
add
sahf
ret
loope
test
inc
mov
xor
cmp
or
dec
loop
in
dec
mov
xchg
mov
mov
sub
pop
and
lahf
mov
mov
ljmp
jl
jl
dec
lods
mov
mov
inc
loopne
pop
jge
lea
fdivr
pusha
and
scas
pop
arpl
into
add
or
mov
dec
test
mov
xor
loopne
inc
nop
cld
fwait
pop
out
lock
mov
aad
hlt
dec
fs
sbb
jle
ret
shr
enter
push
bswap
jb
scas
mov
fnstenv
fmuls
ret
es
les
cmp
sti
repz
push
outsl
sbb
aad
in
xchg
push
cmp
adc
fucomip
dec
xchg
mov
aad
ret
cld
cmpsl
pop
scas
adc
lods
inc
add
push
push
lods
out
jnp
outsl
jge
push
cmp
mov
mov
xor
adc
repnz
shll
mov
xlat
add
lods
sub
ljmp
push
fbld
idivb
mov
std
negl
dec
xor
mov
pushf
shlb
adc
ljmp
iret
ficoml
lock
dec
testl
mov
xchg
cmpsl
mov
xor
in
push
mov
jge
pop
push
cmp
std
lods
loopne
movsb
rorb
lret
and
lret
rcll
rolb
jbe
cmc
aas
adc
pop
cmp
cmp
lds
scas
pop
fcoml
std
and
pusha
xchg
cli
ljmp
jmp
out
cwtl
bound
cmp
lret
clc
mov
sbb
in
js
cwtl
das
pop
data16
mov
stos
fnsave
lret
cmc
or
and
jle
test
xchg
std
push
push
jle
adcb
lods
loopne
mov
movb
sbb
lds
mov
xor
dec
dec
jbe
stc
mov
or
pusha
pop
pop
xor
sub
mov
sbb
les
cwtl
loop
cmp
or
inc
jle
or
mov
jmp
push
add
xchg
mov
fstps
shlb
sbb
fwait
or
gs
jnp
repz
push
sbb
int3
int3
push
notb
mov
add
mov
or
xchg
iret
xchg
push
sahf
jp
mov
dec
int3
stc
sbb
cmp
push
dec
jg
push
lods
pusha
dec
adcl
and
dec
sbb
xchg
dec
aad
subl
js
dec
push
arpl
mov
jmp
lret
rcl
int
sub
dec
das
xchg
movsl
es
lret
aaa
mov
inc
cmp
mov
les
xor
inc
sub
mov
clc
pop
cmp
pop
negb
fnstenv
sbb
inc
loope
push
ret
jbe
inc
and
pushf
adc
mov
jns
cli
mov
ret
cmc
jp
mov
ss
push
aas
push
out
or
jmp
mov
cmc
rcr
lods
and
mov
jle
cmp
adc
iret
or
mov
add
dec
push
loope
out
mov
loopne
stos
in
sbb
lcall
mov
push
mov
out
fstpt
int
xrelease
hlt
push
cmpsb
cmp
dec
push
iret
cmp
int3
push
stos
mov
pushf
sahf
xor
sbb
mov
hlt
movsb
mov
hlt
inc
push
cmp
inc
cwtl
sub
sbb
iret
mov
mov
aas
out
pop
cmp
iret
out
imul
popf
scas
incl
ja
or
push
sub
adc
lds
push
test
xor
inc
test
or
mov
fs
mov
xchg
xor
mov
sub
or
aam
mov
sub
xor
xor
sarl
mov
cli
xchg
fucomp
xlat
aaa
xchg
pop
adc
mov
cli
test
mov
fcoms
icebp
call
nop
pop
sub
clc
push
sbb
cmp
scas
out
dec
xchg
pop
ret
inc
cmc
xchg
mov
mov
call
mov
sub
xchg
cmp
and
movsl
out
mov
add
add
pop
or
leave
jmp
loop
lods
lret
pusha
or
ret
rol
into
cmc
push
mov
sub
out
shll
cli
ficompl
and
movb
xchg
xchg
push
jb
xchg
push
push
cmpsb
dec
sub
test
sti
pop
lods
not
mov
mov
sbb
cmp
out
sbb
xor
or
shr
mov
jns
mov
cmpl
xor
dec
mov
push
sbb
or
popa
repz
mov
cwtl
es
mov
imul
popa
lahf
iret
mov
sti
mov
jnp
sub
lret
mov
lock
pop
es
or
fdivrl
rcrl
mov
repz
in
fcoml
jae
movsb
cmp
lret
cmp
sub
xor
mov
mov
adc
ret
popa
bound
adc
xchg
adc
rorb
dec
popa
pop
je
push
and
xor
andb
je
popa
ret
aad
daa
xchg
imull
cmp
out
xchg
sti
das
jecxz
aam
movsl
push
icebp
jg
push
and
cwtl
cmpsb
hlt
popa
jbe
pop
inc
jecxz
or
and
mov
pop
mov
pop
lret
sbb
rclb
rorb
test
mov
and
inc
inc
mov
or
push
pop
sbb
lods
adc
or
call
js
push
scas
enter
mov
xor
aas
fwait
movsb
inc
ja
cld
pop
icebp
clc
sub
sbb
add
cmpl
inc
cmpb
xchg
inc
test
push
aad
cmp
adc
mov
jns
cld
ret
push
cmc
test
int
push
pop
in
mov
pop
mov
out
test
xchg
inc
push
jle
shrb
ror
and
cltd
sahf
insl
mov
out
fsub
sub
das
fdivrs
lcall
cwtl
pop
xchg
sbb
mov
inc
into
dec
loop
cmpsb
inc
aaa
sbb
pusha
sahf
push
mov
pop
enter
cltd
dec
mov
and
in
fs
test
lods
mov
fdiv
or
pop
lret
aam
pop
sub
add
gs
push
or
inc
cmpsb
xchg
push
insb
test
cmpsb
jmp
mov
ds
add
mov
fstps
adc
or
and
pop
xchg
jb
leave
iret
cld
ja
loop
stc
outsb
xor
mov
addl
in
push
or
sub
and
xchg
mov
popf
test
mov
xchg
out
and
or
jne
or
jbe
movsb
or
rclb
jmp
dec
adc
lds
xor
mov
xchg
cltd
mov
cmp
das
lret
int
pop
mov
inc
lahf
movsl
adc
sbb
jb
out
dec
inc
dec
shlb
movsl
add
js
pop
dec
fwait
mov
cmp
push
mov
shlb
mov
push
jmp
and
and
ja
in
inc
cmp
mov
xchg
cli
mov
push
jl
mov
inc
insb
jne
rsm
iret
inc
daa
pop
mov
ss
and
in
lcall
pushf
mov
stc
fstpt
popf
incb
mov
shrb
lods
add
lret
or
out
ret
mov
and
mov
pop
mov
or
loope
data16
lret
clc
mov
jmp
test
and
cmp
jl
in
popa
mov
xchg
xchg
test
test
loope
dec
cmp
cmp
stos
rclb
dec
push
push
pop
mov
jnp
aad
pop
mov
aad
xchg
pushf
jno
or
pushf
out
lods
pop
ds
adc
cmp
push
fcoms
add
lods
hlt
cmp
xchg
pop
and
jne
or
xor
mov
mull
lea
fiaddl
or
lods
adc
pop
test
cmp
dec
lds
mov
ftst
out
aas
bound
mov
bound
mov
jno
push
xchg
lods
pop
fists
xor
bound
ja
lcall
iret
js
or
arpl
out
icebp
repz
insb
daa
sub
dec
data16
lds
cmp
gs
les
outsb
or
aam
aas
iret
dec
push
das
jle
gs
iret
in
pop
es
sub
and
test
cltd
cmp
inc
cltd
jecxz
outsb
shlb
pop
loope
iret
cld
dec
notb
mov
mov
adc
dec
popa
sub
inc
test
xorl
imul
andl
jg
xor
repnz
dec
mov
jge
lret
pop
out
mov
xchg
repz
jo
mov
and
sarb
add
fwait
sub
fcomps
dec
out
gs
arpl
test
add
sar
rcl
pusha
add
jb
cli
sbb
mov
jg
push
cld
or
mov
cmp
ret
add
xor
dec
cwtl
dec
mov
in
dec
xor
enter
xor
outsl
xchg
pop
inc
sub
cld
notl
ja
adc
mov
vcvtps2pd
or
xorl
cmp
movsb
movsb
sub
and
fst
push
jno
and
sti
in
gs
mov
xor
mov
fisubrs
ss
lea
rorb
adcb
inc
loopne
das
gs
scas
inc
lock
rcrl
add
cmp
add
mov
adc
ret
mov
popf
outsb
mov
mull
jle
neg
mov
mov
sbb
dec
cld
jmp
bound
mov
cmpl
xchg
adc
lret
insb
dec
inc
aad
out
mov
pop
insb
jp
cwtl
sub
sahf
lds
add
insl
addr16
in
push
call
arpl
dec
lret
imul
mov
ss
inc
invd
xchg
xchg
out
mov
inc
int3
lods
jb
movsb
call
xchg
ja
xor
mov
popa
xchg
sbb
adc
xor
sub
adc
scas
adc
test
in
test
sbb
xchg
js
cmpsb
jmp
cmp
pop
inc
enter
inc
imul
cmpsl
and
xor
push
data16
lcall
rclb
or
les
pusha
out
xchg
adc
cmp
mov
pop
hlt
mov
push
sub
push
mov
xchg
jmp
mov
or
mov
imul
cltd
jae
cltd
popf
fsubrl
sub
in
ja
mov
std
daa
jo
xor
push
in
in
mov
repnz
ja
movsl
call
mov
outsb
add
cld
lahf
les
stc
inc
sbb
pop
lds
out
fldl
imul
sbb
inc
sbb
in
sub
or
notb
mov
gs
jge
sbb
ret
ds
imull
call
and
dec
ja
push
in
xlat
je
in
imul
in
and
sbb
push
cmp
pop
lods
fnstsw
bound
xchg
cmp
js
mov
push
aaa
in
pop
stos
js
aas
das
repz
fistpll
ljmp
xchg
mov
sub
mov
dec
imul
aam
not
xlat
mov
xchg
mov
das
in
int
sbb
into
inc
mov
fldenv
mov
loop
inc
and
mov
sub
repnz
stos
leave
mov
mov
cmp
fdivrp
fcom
jb
sbb
fnstsw
ficomps
or
lret
leave
popf
sbb
push
lahf
dec
jo
jmp
out
aad
mov
adc
pop
xor
ja
icebp
dec
cmp
xor
jmp
xchg
shlb
in
ljmp
and
xor
pop
rorl
xor
test
pop
stos
iret
call
or
popa
in
inc
push
inc
dec
iret
push
inc
arpl
jnp
loop
movsb
out
or
clc
in
jmp
outsb
xlat
sarb
shl
leave
push
fs
dec
aaa
lret
lret
mov
jo
mov
in
adc
icebp
push
pop
mov
lcall
pop
xchg
jg
cltd
imul
and
mov
cmp
data16
fistps
mov
aas
or
adc
jb
sub
dec
mov
hlt
jp
pop
adc
call
pop
insl
sar
mov
clc
cmp
fldt
cmp
xchg
imul
cs
adc
and
xor
pop
mov
cmpsl
inc
add
cld
ja
jmp
and
add
cmp
imul
and
xor
test
adc
ds
rcll
and
stc
add
dec
pop
jae
add
out
fldt
shll
dec
call
int
dec
mov
dec
imul
mov
push
sub
mov
fidivrl
mov
xchg
dec
adc
sub
sub
test
xchg
inc
in
dec
add
xor
sarb
or
data16
jae
mov
pslld
jg
cmp
or
sbb
and
cmp
and
pop
push
xchg
fs
dec
inc
push
push
insl
roll
push
int3
frstor
xchg
xlat
mov
test
mov
xchg
jae
imul
lods
xor
stos
or
or
fstpl
les
call
or
xchg
mov
cmpb
out
jb
sub
add
dec
test
inc
test
jae
int
push
lahf
in
outsb
sahf
daa
mov
mov
repz
push
out
mov
adc
loopne
cmpsl
ja
cmp
add
pop
mov
mov
inc
mov
imul
mov
xor
insb
cmp
dec
jl
add
out
fisttpl
jnp
push
pop
roll
call
insb
push
test
out
jo
or
inc
testb
idiv
cltd
sub
int3
xor
jle
fcoms
jo
or
mov
jno
int
pop
push
movsb
sti
dec
mov
imul
push
out
xor
imul
cs
xor
test
mov
mov
pusha
and
mov
and
das
push
jg
xor
popf
je
out
mov
mov
movups
test
dec
xor
inc
in
mov
cmp
lock
mov
addr16
cmp
push
aam
push
jmp
movsl
outsb
call
pop
imul
in
adcb
cmp
sar
adc
je
cmp
sti
or
dec
test
aam
xor
inc
fcmovu
leave
lea
cmpsb
xchg
ret
les
xchg
lods
push
leave
call
lcall
andps
jge
mov
pusha
or
mov
gs
cltd
ret
sti
and
dec
push
das
jge
push
push
xchg
lahf
or
test
mov
adc
pop
cmpsb
sbb
in
dec
cmp
mov
repnz
arpl
adc
out
mov
outsb
cwtl
out
adc
mov
cmpb
mov
mov
mov
mov
in
and
or
dec
xchg
xor
decb
lcall
daa
cmp
mov
clc
xor
jp
mov
xchg
xchg
or
mov
sbb
jb
test
lds
pop
xchg
push
cwtl
mov
mov
shrb
mov
mov
test
push
mov
inc
dec
cmpsl
mov
dec
add
fisubrs
cmp
idivb
popf
xchg
jnp
push
mov
sbb
popa
dec
mov
xchg
xchg
loope
and
jge
in
or
xchg
mov
iret
sbbb
sbb
pop
add
jecxz
in
inc
scas
inc
stc
repnz
dec
xchg
xor
lds
xchg
fwait
inc
add
mov
sub
mov
dec
loopne
pop
xchg
xor
adc
mov
cmp
jle
std
adc
jo
cmp
pop
mov
outsl
pop
xchg
jb
lds
jl
faddl
in
ret
push
aas
push
icebp
into
mov
arpl
sub
mov
hlt
mov
cwtl
jg
inc
gs
in
jnp
test
adc
imul
mov
stos
xlat
arpl
cltd
cmp
sbb
mov
add
ret
pop
dec
in
mov
adc
cli
dec
es
push
hlt
ret
or
push
jge
or
xlat
mov
push
fisubs
mov
imul
bound
fsubs
add
clc
jbe
cmpsl
and
mov
into
shrb
lods
cs
pop
jge
jmp
daa
fisubrl
adc
mov
cmp
inc
ljmp
clc
sub
movsb
aas
ja
sub
jmp
insl
inc
mov
mov
add
cmp
rcrb
dec
push
dec
ffreep
std
adc
sbb
inc
add
mov
cmc
mov
lcall
mov
add
mov
pop
adc
ret
movsl
sub
inc
pop
aam
mov
aas
and
xchg
or
push
and
mov
or
cli
cld
cltd
ja
push
add
stc
or
subb
and
add
ficompl
jbe
inc
mov
xchg
xchg
mov
loop
add
clc
cmpsl
shr
push
add
and
loop
cmpsb
xchg
jb
pop
lods
cwtl
lea
lods
sti
test
outsb
mov
cmp
sbb
repz
lea
or
mov
lock
adc
xchg
xor
and
sbb
lock
xchg
les
rcl
stos
int3
fcmovnbe
cltd
std
jb
jae
shl
cmp
xor
dec
and
sub
aas
mov
fisubs
out
sub
scas
and
dec
inc
dec
inc
dec
or
sahf
dec
dec
popf
jne
into
clc
mov
sbb
insl
xchg
leave
shl
inc
xchg
orl
cli
ret
sbb
mov
cmp
jge
test
test
ficompl
cltd
mov
and
sub
adc
mov
and
movsl
xor
pop
js
jle
mov
clc
push
fs
test
fsubp
inc
shlb
loope
xchg
mov
xchg
rolb
sub
xchg
pop
cmp
shll
aad
xchg
ss
lds
mov
jg
push
mov
rol
or
xchg
mov
jbe
fcmovu
ror
outsb
test
pop
bound
leave
cmp
and
clc
inc
sbb
loopne
inc
sub
or
mov
sti
sbb
xor
call
or
dec
pop
or
push
out
and
lods
and
pop
or
loop
push
adc
negb
sub
and
and
push
negl
jo
aas
in
push
addr16
jnp
push
inc
in
mov
and
inc
lock
jo
je
scas
popa
inc
add
cmp
xchg
in
mov
jnp
stos
aam
xchg
xchg
cmp
adc
ret
into
fisubrl
fdivl
leave
imul
sbb
incb
sub
inc
sar
outsl
push
ficompl
dec
loope
rcrl
push
lret
cwtl
xchg
mov
push
mov
jbe
pop
cmp
icebp
icebp
mov
jbe
cmp
sbb
mov
jo
mov
mov
sub
repz
cltd
decb
into
dec
mov
jo
lcall
lods
xorb
outsl
in
pop
aaa
dec
mov
mov
je,pn
lods
in
add
dec
dec
test
mov
in
mov
fildl
loopne
scas
dec
or
dec
mov
and
fstpt
or
dec
mov
loopne,pn
stos
out
test
enter
shlb
aas
sub
pop
jb
pusha
xchg
xchg
ss
dec
cs
push
test
std
xchg
fnstcw
pop
jmp
mov
test
insl
jnp
rorb
or
data16
or
jg
pop
adc
js
add
clc
jne
cmpsl
scas
cmp
jge
call
fs
mov
push
loope
bound
imul
mov
in
out
ja
es
fdivs
addr16
jb
testl
daa
mov
jg
mov
adc
or
aaa
jmp
mov
adc
test
insl
dec
or
in
icebp
lea
in
shll
call
mov
jmp
maskmovq
idivl
sub
xchg
mov
cmp
insb
mov
mov
pop
negb
inc
outsb
sbb
and
inc
lock
bsf
or
mov
pop
sti
push
ss
adc
mov
sahf
xor
and
in
fs
adc
push
sbb
mov
add
sahf
or
push
cmpl
stos
loopne
adc
adc
popa
fistpl
mov
adc
sbb
vmulsd
dec
fsub
xor
subb
mov
bound
aas
or
add
pop
add
rcl
fcoms
adc
shrl
shll
aad
jl
idivl
jg
add
mov
adc
jae
and
and
scas
aad
cmp
stc
ja
inc
ss
and
in
xor
sbb
adc
std
pop
add
loope
jle
aad
test
cmp
cs
sub
mov
popa
fsubrs
clc
imul
xor
or
js
jmp
loope
cmpsl
xor
inc
xchg
cld
sub
sub
outsl
out
xlat
add
jo
rcll
mov
leave
dec
lret
mov
xchg
adc
scas
xchg
sbb
repnz
cmpb
mov
adc
xor
adc
scas
push
js
outsb
daa
add
dec
int3
push
pop
cmp
mov
sbb
cmp
lock
js
daa
pop
test
ret
ficoms
fnstenv
push
cmp
mov
inc
push
inc
cmc
fdivr
and
xor
inc
scas
imul
imul
icebp
movsb
dec
fnstcw
push
inc
push
cmp
popf
xorl
cmp
pop
les
pop
lods
inc
xor
fdivrp
cmp
lcall
xchg
mov
fsubrl
push
mov
insl
push
jp
xchg
or
cli
push
xor
cmp
notl
sbbl
stc
inc
imul
or
lea
xor
frstor
outsb
jne
inc
xor
sbb
push
mov
ljmp
cld
cmc
addb
in
pusha
mov
xchg
shll
mov
xor
mov
inc
out
xor
test
push
pop
inc
sub
pop
popa
push
xor
lret
jns
jbe
dec
xor
mov
aas
push
les
and
jae
insl
or
rorl
xchg
imul
jp
push
add
inc
stos
and
xchg
stc
sar
in
cld
push
mov
adc
jb
jbe
sbb
fs
mov
dec
call
cs
inc
sub
fstl
fcomi
aam
mov
cmp
pop
cmc
adc
xlat
adc
js
andb
xor
fs
in
cmp
and
arpl
fimuls
sahf
jle
fadd
scas
mov
arpl
mov
sar
mov
push
fsubrl
int
out
test
mov
stc
stc
mov
pop
outsl
cli
fwait
shrb
pop
mov
cmc
dec
sub
es
repz
das
sbb
pop
aam
cmpsb
lret
inc
mov
jge
loopne
xchg
push
and
into
sbbl
sub
mov
jbe
lahf
in
add
mov
divl
cmpsl
insw
loopne
sbb
in
paddusb
adc
pop
pop
icebp
dec
fnstcw
int
int3
adc
push
in
fidivs
mov
aas
pop
dec
ljmp
out
lds
xor
out
cmp
inc
adc
aas
push
adc
add
nop
lahf
push
pop
mov
comiss
stos
lods
add
repz
jge
cwtl
xor
add
push
xchg
cli
packssdw
aaa
idivl
push
out
pop
pop
xchg
cs
dec
icebp
and
sub
loope
sar
in
cmp
js
or
outsb
fidivrs
inc
cmpsl
les
ja
mov
mov
pop
cltd
dec
cltd
push
jge
scas
fsubr
into
out
cmp
sbb
inc
sbb
fisubl
xor
pop
lret
cmp
jmp
and
sbb
sub
sbb
aam
mov
jae
fs
jmp
xor
push
push
stos
xor
fcompl
adc
loope
cs
test
jge
pop
adc
aas
sbb
lret
jge
dec
decl
mov
or
out
out
inc
mov
push
and
xchg
or
lods
pop
lcall
mov
ret
cmp
pop
fs
inc
scas
shr
jle
dec
jecxz
cmp
fadds
lcall
sbb
in
fnstcw
mov
cld
sub
test
ljmp
incb
xchg
in
dec
inc
jae
jecxz
add
cmpsb
les
xor
adc
lds
pop
pop
pop
adc
ds
cmp
rcrb
push
xchg
sti
lahf
gs
lret
xchg
push
push
inc
xor
das
add
lret
inc
fcoml
sub
xchg
loopne
ds
sbb
pop
popa
xchg
shlb
call
dec
adc
cwtl
js
in
push
stos
std
and
xlat
adc
mov
cmp
imul
das
test
pop
mov
xlat
adc
jo
jl
sbb
push
inc
test
inc
push
cs
inc
lcall
aad
xchg
xor
mov
dec
std
lcall
imul
mov
push
daa
pop
es
jno
jae
push
pushf
lods
sahf
cmpsb
loopne
push
jb
int
dec
pushf
mov
mov
pop
cmp
pop
mov
dec
rolb
pop
aas
hlt
push
ret
mov
adc
scas
mov
xchg
jp
dec
mov
adc
lods
fsubs
rclb
in
aaa
stos
es
mov
ss
jae
mov
cmp
or
mov
jbe
mov
mov
jne
nop
xchg
fsubrs
stos
inc
loop
icebp
mov
movsl
push
call
jbe
jns
xchg
test
adc
push
jb
mov
cltd
aam
ds
aaa
xchg
or
push
and
dec
adc
sub
in
dec
or
outsb
pop
mov
or
shl
in
ret
loope
cmp
mov
imul
scas
sub
cmc
push
pop
sahf
ljmp
dec
lods
add
add
scas
xchg
cmp
ja
lcall
outsb
movb
je
mov
or
pop
sahf
std
scas
stos
aaa
jle
mov
sahf
repnz
call
inc
push
adc
popf
push
cmc
cs
xchg
push
or
and
mov
enter
gs
adcb
cmpb
inc
mov
mov
es
xlat
sub
in
xor
mov
lea
lret
lret
inc
mov
jecxz
inc
sbbb
test
in
cmp
fadds
mov
test
scas
mov
jns
and
push
push
insb
push
xlat
push
sbb
mov
xor
jno
pop
mov
sbb
lds
fwait
subl
pop
aad
cmp
je
rorb
sahf
sub
shl
adc
xor
hlt
mov
xchg
loope
clc
js
push
out
repnz
rolb
sbb
repnz
inc
xchg
fisubrs
test
inc
lret
loop
and
inc
xchg
test
out
insb
dec
sub
xlat
lds
sub
into
sub
fwait
or
outsl
sbb
loope
je
mov
test
add
sbb
sbb
iret
insl
adc
xlat
adc
outsl
sti
dec
push
sahf
xor
add
sti
mov
xlat
es
stos
rcll
adc
scas
push
mov
xchg
sarl
push
daa
or
add
jb
mov
mov
mov
pop
test
adc
hlt
insb
cmp
push
push
jo
adc
add
mov
rcrl
jle
inc
ret
cmpsb
xorb
add
pop
add
sub
xchg
sub
dec
xor
fwait
cltd
call
shl
incl
sub
divl
jns
mov
aas
sbb
clc
inc
pop
enter
push
lock
aam
mov
inc
psubsw
cmpsb
dec
cld
xchg
cs
mov
rcrl
xchg
lret
das
sub
xor
adc
mov
iret
jbe
lret
out
pop
jecxz
icebp
xor
pop
jmp
lods
xor
inc
mov
push
pop
imul
mov
dec
out
and
nop
scas
pop
mov
cs
cltd
clc
ja
mov
cltd
xchg
xor
xchg
fwait
inc
incl
mov
push
scas
or
outsb
fbstp
push
lods
fucomp
icebp
fcoms
mov
mov
dec
mov
dec
adc
mov
das
jnp
add
jle
jno
cmp
push
sbbl
xchg
and
ja
mov
mov
loope
out
jbe
sbb
mov
lret
in
stos
jecxz
sarb
jl
adc
jne
add
in
mov
jne
push
divb
add
adc
jge,pt
push
icebp
mov
add
push
fcmovne
data16
dec
push
lods
mov
addr16
pop
leave
cmpsl
mov
ja
and
mov
push
sub
call
out
cltd
xchg
daa
push
cmp
shll
ja
addb
mov
imul
icebp
add
inc
test
mov
push
inc
adc
fcmovu
and
jbe
mov
mov
pop
test
movsb
jp
hlt
jnp
mov
pop
fadds
mov
test
sub
inc
shrb
lea
pop
rcll
stos
and
out
xchg
jb
loope
inc
jne
cmp
movsb
xor
xchg
fnstsw
sbb
ja
stos
rclb
add
cmp
or
mov
cwtl
fidivrl
mov
ljmp
jecxz
dec
xor
mov
outsb
subl
aas
scas
cmc
or
xchg
mov
lods
mov
scas
mov
int3
ret
cmp
ljmp
into
cld
je
jnp
mov
jne
aad
sub
dec
cmc
js
sarl
mov
jge
mov
lahf
add
xchg
cli
arpl
cmpsb
out
dec
pushf
sbb
pop
das
add
push
repz
cmp
idiv
test
mov
mov
mov
pop
and
std
jo
xchg
rcl
push
inc
push
imul
scas
sbb
dec
jp
adc
imul
sti
mov
or
ja
pop
fs
cmp
xor
mov
int
or
push
mov
mov
repnz
lret
sbb
jbe
xor
inc
add
pushf
frstor
push
aas
push
dec
or
ljmp
clc
jbe
std
imul
or
adc
lret
data16
enter
in
inc
sbb
push
add
sub
in
cmp
sbb
push
xchg
sbb
dec
lea
xchg
cmp
mov
adc
clc
and
fmulp
push
xor
sbb
mov
addr16
push
add
push
in
cmpsl
in
and
in
leave
jno
js
mov
stos
aad
pop
pushf
inc
in
adc
jae
push
jl
jge
decl
xchg
lock
push
je
mov
or
ss
adc
dec
jmp
mov
mov
adc
mov
int
jge
push
and
sub
ficompl
lea
ret
and
lcall
int
mov
jae
and
sub
adc
or
ret
aas
fwait
jno
in
inc
inc
add
dec
xor
xlat
lret
pop
inc
or
inc
sbb
imul
dec
mov
mov
in
push
fistl
popf
mov
lahf
int3
test
jp
dec
push
mov
jecxz
insl
cmp
dec
scas
in
test
js
fucomi
lock
std
xor
xchg
lcall
nop
mov
fdivl
movsb
cmp
idivl
fwait
loop
xor
clc
cmp
mov
pop
fisubrl
pop
dec
inc
cs
mov
jno
cmc
fstl
fsubrs
pop
roll
filds
shrl
lods
mov
icebp
rorb
jo
repnz
sbb
sub
cmp
shlb
cmp
jg
lods
das
push
xchg
loope
mov
xor
inc
xchg
cld
ret
cs
mov
add
cmp
insl
push
xor
push
lock
push
popa
jecxz
incl
sub
fldl
sbb
int3
and
push
xchg
xchg
in
cmp
loope
xor
sub
fnstcw
push
pop
jl
or
push
or
lock
pusha
leave
insl
pop
and
stos
je
pop
xlat
pop
dec
movsb
rcrl
fstpl
pop
and
adc
jecxz
int3
scas
bound
mov
sqrtps
movsb
cld
das
mov
or
fldl
into
fcompl
pusha
loopne
jns
pushf
xor
add
arpl
cli
push
push
inc
sbb
jp
jno
test
mov
les
cmpsb
push
aad
lods
movsl
or
pop
add
dec
imul
sbb
inc
jne
divl
add
sub
cmpsb
bound
loopne
jg
mov
test
shrb
sbb
hlt
sbb
xor
or
mov
neg
pop
sbb
js
in
adc
jmp
lret
dec
cmpsb
in
incb
cmp
jmp
jl
setnp
mov
repz
push
and
add
and
dec
stos
lods
icebp
and
bound
lret
enter
lea
mov
jl
pusha
sti
mov
rorb
and
imul
push
aam
sbb
inc
jnp
push
rolb
sbb
sub
sbb
cmp
enter
push
sub
add
ds
sahf
mov
lahf
nop
int3
stos
cmp
mov
and
pop
inc
sub
sti
mov
mov
mov
popf
adc
mov
shld
fcomps
push
cmpsb
mov
xchg
daa
sbb
inc
sub
ss
int
insb
outsb
add
test
testb
add
imulb
mov
jbe
push
inc
jge
xchg
ret
pop
aaa
aas
lods
mov
add
adcl
xor
mov
mov
pop
sbb
adc
sub
mov
outsl
ja
hlt
or
in
in
mov
dec
std
adc
out
in
xchg
test
mov
add
insb
sahf
sarl
sub
fs
jg
adc
jp,pt
sbb
lcall
dec
shll
adc
in
imul
fadd
pushf
ljmp
arpl
repnz
pop
add
ja
pop
shlb
insl
mov
cld
mov
popf
dec
mov
hlt
inc
orb
push
xor
lock
fnsave
adc
xor
ljmp
or
push
rcll
rcrb
faddl
xchg
adc
jnp
decb
sbb
xchg
ret
outsb
xchg
popf
into
aad
mov
out
sub
xor
sbb
repz
int3
lods
shll
mov
and
fsts
push
mov
in
leave
pop
or
fdivrp
lds
sub
fsubrs
mov
mov
xor
add
addr16
inc
das
iret
mov
mov
add
addr16
aad
and
inc
cli
fstp
pushf
es
inc
adc
outsl
stos
stos
jle
cwtl
push
cltd
mov
inc
sbb
push
mov
mov
cld
sbb
cmp
or
xor
add
pop
es
push
adc
cmc
dec
leave
mov
fs
rolb
imul
into
jl
xor
pop
mov
sub
push
lret
mov
mov
notb
push
dec
xchg
adc
ss
ss
icebp
outsl
sbb
dec
sub
lahf
mov
push
mov
mov
shld
sub
add
in
push
pop
push
adc
imul
rcrb
push
cltd
dec
mov
jecxz
pop
inc
dec
jne
pop
lahf
xor
js
mov
inc
jae
clc
dec
sahf
sub
jne
into
rorb
inc
adc
lods
xor
inc
scas
gs
scas
ds
xor
mov
dec
pop
int
sub
sub
jne
push
sbb
add
xor
pushf
sub
mov
push
xchg
jecxz
ret
andl
data16
push
jecxz
adc
add
cmp
jl
add
mov
cmp
mov
sub
lods
add
test
adc
fdivr
mov
push
das
cmp
fldenv
dec
or
xor
push
dec
add
sub
inc
xor
movsl
ret
arpl
lahf
mov
test
test
lods
cmc
pop
outsb
mov
pop
dec
jnp
pushf
mov
popa
in
loop
test
testb
aas
cmp
sbb
or
jo
lcall
jecxz
test
cmp
adc
jle
add
sub
pop
inc
push
sti
test
movsb
xor
rol
xchg
mov
leave
js
cs
fs
mov
xchg
in
add
jne
adc
pop
push
xchg
xor
cmp
cmp
push
push
or
jmp
ss
xor
mull
or
es
movsl
xchg
xchg
bound
sbbl
mov
push
daa
or
sub
and
adc
xchg
push
mov
jge
out
jo
xchg
aas
shrb
outsl
jle
popa
enter
push
sbb
les
pop
sahf
pop
sarl
bnd
sahf
addr16
mov
pusha
pushf
outsb
pop
aaa
adc
xchg
jmp
out
std
push
sahf
sub
push
lds
push
push
jae
repnz
leave
daa
and
inc
scas
mov
aaa
mov
push
push
inc
push
adc
aas
jmp
arpl
ret
mov
jg
pop
mov
pop
fwait
sbb
lock
mov
ret
lods
mov
sbb
into
xlat
cmpl
fdivr
dec
mov
adc
aas
shl
movsl
sahf
addl
mov
cmp
aad
mov
cmpsl
pop
or
imul
pop
add
out
or
push
mov
xchg
pop
aas
scas
dec
cmp
bound
das
mov
lods
rcrl
mov
and
inc
repz
pop
daa
je
idiv
ficoms
mov
xchg
mov
std
pop
arpl
pop
add
std
es
ljmp
sbbb
popf
inc
mov
test
sub
jle
scas
test
pop
mov
lock
cmp
movswl
sahf
in
shlb
mov
es
fmuls
imul
xchg
leave
shrb
pop
add
cpuid
shlb
inc
mov
mov
mov
fsubr
into
mov
fstpl
pushf
das
mov
out
dec
mov
leave
or
adc
es
lods
sub
fs
xchg
aam
jns
adc
jno
jmp
popl
enter
divl
xlat
iret
push
orb
cmpsl
js
lds
pop
out
es
xor
dec
cmp
test
push
jnp
xchg
imul
clc
inc
push
mov
xchg
xchg
shlb
fiaddl
or
nop
outsl
xor
adc
push
arpl
pop
loop
adc
inc
jbe
addr16
inc
in
rorb
jecxz
fstps
std
test
into
xor
shrl
push
jg
xor
int3
sbb
popa
inc
fistl
and
xchg
iret
push
xlat
jne
pop
nop
bound
aas
mov
xchg
xchg
rcrl
lods
ljmp
in
sbb
jg
mov
leave
fisttpl
lret
in
mov
jge
jmp
pop
inc
pop
push
mov
test
ficomps
inc
xchg
jp
jno
push
jnp
mov
cld
push
hlt
cli
fs
imul
add
xchg
fiaddl
daa
test
bound
in
sbb
sarb
jne
push
insl
jne
in
and
pushf
sub
mov
mov
add
in
cmpsl
imul
loop
mov
repnz
call
js
and
jle
adc
adc
mov
repz
sbb
movsl
aad
in
push
lea
push
fadds
or
fisubs
jle
dec
xchg
jg
push
dec
rcr
aad
ret
push
inc
int3
cmpsl
add
xchg
jne
mov
mov
sbb
scas
daa
fdivrs
cs
jp
sub
mov
inc
stos
repnz
hlt
mov
out
xor
push
xchg
add
das
dec
mov
ja
sbb
jo
sbb
std
nop
push
add
pmullw
xor
ret
leave
lret
adc
lret
or
xor
or
pop
cmp
cmpsb
orb
data16
cmpsl
xlat
push
jno
mov
divl
cmp
and
mov
add
fistps
sahf
aaa
setg
lods
mov
imul
mov
xchg
cs
das
push
mov
enter
mov
jbe
rcrl
fwait
xchg
stos
inc
xchg
fcomps
fidivrs
aam
cmp
fsubrl
decb
outsl
dec
xor
scas
cmc
dec
lods
or
cmp
in
popf
cld
inc
pop
fdivrl
add
jmp
ret
rclb
andl
inc
mov
popf
add
and
jne
xchg
aad
dec
mov
add
int
inc
insl
scas
into
ret
or
jg
mov
push
fnsave
shrl
or
pinsrw
sbb
mov
adc
push
mov
mov
add
loopne
gs
imul
das
adc
rorl
sbb
rcrl
ret
mov
inc
add
loop
cmp
lret
cmp
cmp
fs
xor
fstl
loope
call
xchg
ljmp
pop
push
mov
mov
mov
cltd
cmp
mov
mov
mov
xchg
jbe
dec
pusha
add
cmp
stos
sub
add
jae
cmpsb
in
pop
call
pop
pusha
seto
and
leave
pop
int
ficoms
sub
insb
cltd
fwait
jae
mov
loope
xor
imul
in
adc
daa
cmp
cmp
jmp
arpl
pop
aas
pop
pop
jns
mov
es
addb
out
sub
movsl
mov
mov
jb
jmp
sbb
mov
push
push
pop
scas
pop
scas
push
dec
mov
loope
mov
mov
fldenv
lret
addr16
repz
or
int
into
mov
jmp
or
or
cmc
lods
neg
outsl
mov
std
xor
jge
or
in
shlb
leave
in
lods
out
and
jae
mov
stos
aad
outsb
mov
jae
rcrl
push
pop
test
lcall
lret
mov
pop
xor
in
and
or
push
mov
mov
jp
ret
stc
sbb
cwtl
cmp
cs
or
adcb
adc
loopew
js
add
or
cmp
addr16
jae
cmp
inc
mov
icebp
and
dec
ret
xor
into
movsl
or
lds
lret
dec
mov
jecxz
sti
adc
add
lea
mov
dec
or
pop
pop
mov
sti
ljmp
inc
adc
icebp
aas
ljmp
outsb
scas
testl
cmpsb
jmp
and
push
test
push
xchg
adc
fistps
mov
movsl
or
add
insl
mov
xchg
mov
les
dec
mov
fwait
insb
leave
lahf
mov
inc
push
pop
inc
adc
lods
lods
mov
mov
in
push
push
ljmp
inc
rorl
and
jns
aaa
sahf
sbb
mov
push
cmp
les
andl
adc
cmp
cs
lret
rorl
in
imul
notl
in
icebp
aam
adc
push
sti
les
sub
and
add
xchg
je
clc
mov
xor
push
das
gs
sbb
out
subb
fisttps
dec
int3
into
call
divb
rol
testl
adc
cld
dec
pop
incl
mov
jmp
adc
jg
stos
lock
and
ljmp
cmp
fistps
outsl
imul
push
mov
jg
fwait
and
fcmovnbe
mov
aas
mov
inc
push
jp
cmpsl
fisubrl
pop
pop
mov
repnz
add
movsl
or
mov
rorl
les
xor
shlb
cmp
inc
add
push
lcall
push
int
mov
mov
adc
sti
fwait
and
cmp
std
outsl
shll
mov
cmc
sbb
ds
stos
out
mov
ljmp
adc
xchg
mov
xchg
je
ficomps
push
xlat
mov
mov
xor
enter
sbb
push
test
adc
stos
push
test
adc
adc
adc
pushf
pop
dec
aas
shlb
rcrb
aam
lcall
clc
shlb
sahf
ret
loopne
and
push
fdivr
idivl
xchg
into
dec
xlat
stos
cmp
jge
lahf
pop
and
sahf
loop
inc
popl
fsubrl
negb
mov
adc
aad
inc
push
out
cmpsl
mov
pushf
inc
jecxz
add
mov
pop
outsl
data16
arpl
movsb
rcl
dec
insl
fbstp
add
adc
push
aam
popf
xlat
clc
xor
gs
mov
pop
push
fwait
mov
cmc
cld
push
ss
out
xchg
push
push
and
ljmp
push
into
in
xchg
sarb
fsubs
mov
ret
mov
pop
push
adc
pop
bound
push
nop
sbb
jno
xor
or
or
aaa
loop
inc
nop
xor
mov
inc
or
adc
push
loopne
fisubrl
fcomps
ja
shll
arpl
mov
jge
mov
sub
call
es
daa
jne
cmp
in
jmp
mov
ret
push
xchg
mov
jb
leave
dec
mov
mov
subb
addb
sbbl
je
lods
dec
std
xor
mov
inc
bound
ret
call
dec
push
sub
insl
mov
sbb
mov
addl
adc
sub
mov
xchg
xchg
xchg
mov
mov
pop
jecxz
lds
dec
mov
scas
into
aaa
frstor
rolb
test
stc
mov
int3
xchg
dec
gs
daa
fmul
std
jecxz
test
sbb
sete
sti
mov
pop
repnz
popa
jb
add
cld
fstpl
jne
xor
fs
xor
pop
pop
insl
test
data16
push
lods
jl
pop
arpl
sub
nop
push
pusha
lods
fxch
sahf
enter
inc
in
sbb
fsubrs
lods
lret
mov
aad
sahf
xor
xchg
mov
aad
inc
in
outsl
jne
xchg
jge
pop
mov
cmp
push
add
or
dec
les
lods
sbbl
mov
xor
push
not
pop
mov
push
push
push
or
and
and
or
sub
sub
iret
or
and
int
loope
mov
pop
rsm
clc
add
adc
je
sti
insl
inc
das
mov
mov
push
push
fstpl
insb
les
insl
cmp
in
cmp
pop
popf
or
adc
pop
mov
lcall
mov
adc
push
ja
in
sbb
lods
adc
fwait
mov
mov
lret
lcall
or
dec
xchg
cmp
cmc
popa
shrl
and
dec
daa
fcompl
in
rcll
test
pop
aas
in
push
pop
sbb
adc
xor
pop
adc
dec
push
xchg
lea
clc
push
call
cwtl
dec
xor
out
cmp
sahf
xchg
fwait
lods
jne
xchg
dec
movsb
add
xchg
or
inc
xchg
fisttpl
movsl
rorb
adc
daa
mov
jecxz
push
jg
mov
js
xchg
addr16
ret
iret
shrl
sub
xor
xchg
inc
push
cmp
movsb
mov
jg
pop
pop
imull
int
fadds
and
pop
pop
jmp
repz
push
repnz
cmc
mov
ljmp
adc
cmp
test
cmp
cmpsb
jae
sbb
jbe
rclb
mov
jg
mov
dec
adc
lret
std
xor
lods
mov
hlt
hlt
mov
jo
xor
fbld
inc
xor
sub
fldt
dec
loopne
xchg
lods
sub
dec
xchg
jge
bound
ss
arpl
push
mov
lods
add
and
pop
dec
cmpsb
push
pop
push
dec
adc
jbe
ja
aad
shlb
mov
dec
dec
inc
sbb
mov
pusha
mov
in
push
push
lahf
shrb
xor
loopne
test
iret
movb
xchg
in
or
sub
xchg
arpl
loope
dec
sbb
cmp
cli
and
shlb
push
sbb
ljmp
ds
mov
aad
push
arpl
dec
pop
loope
cmpsb
cld
jl
xchg
fdivs
push
dec
ja
daa
push
or
xor
xchg
sarl
daa
cmp
mov
mov
cmp
sbb
shll
popf
pop
mov
mov
andb
mov
cwtl
push
mov
in
mov
ss
jmp
arpl
mov
pop
xchg
and
cli
lahf
xor
repz
repz
fdivrl
cmp
xlat
inc
add
mov
inc
stos
pop
fwait
pop
cmp
sub
jb
out
jae
pop
sbb
xor
std
repz
cmp
outsl
mov
loop
sbb
push
stc
mov
in
fcoml
cmp
lock
and
test
scas
fisttps
inc
dec
push
mov
mull
aas
adc
mov
test
dec
aas
imul
mov
pop
shlb
es
mov
inc
xchg
dec
inc
ljmp
push
mov
mov
insb
mov
dec
push
data16
xor
dec
cwtl
mov
repz
leave
pop
and
cli
es
xor
mov
push
rorb
pop
dec
and
dec
jb
out
aas
or
mov
dec
push
fs
flds
fidivs
xchg
pop
psubsw
mov
jge
cmp
data16
add
jle
or
xchg
pop
fwait
cwtl
inc
sbb
mov
mov
mov
outsl
xor
mov
aaa
inc
test
orb
mov
push
aam
push
fstl
adc
cmpb
cmpsb
push
stos
nop
je
jb
insl
jecxz
in
pusha
je
fwait
jne
and
mov
enter
imul
or
dec
or
pop
out
adc
pop
push
inc
inc
js
movsl
sbb
test
xor
das
pop
adc
cwtl
mov
adc
lds
fcompp
test
mov
imul
push
nop
mov
mov
stos
lcall
or
sub
lahf
jl
cmp
cmp
xchg
lahf
test
dec
sbb
in
xchg
ja
mov
inc
lret
mov
pusha
xchg
mov
dec
aam
mov
movsb
xchg
add
imul
or
cmp
xchg
xor
fwait
sarl
inc
sbb
push
int
xor
popf
test
ret
js
or
adc
xor
es
leave
sbb
popf
jbe
in
or
pop
xchg
cmp
xchg
loopne
and
and
das
or
icebp
mov
xchg
out
call
fisttpl
push
arpl
add
inc
in
inc
mov
cmc
cmp
stos
les
mov
push
lret
fidivrl
out
shlb
push
call
or
pop
pushf
decl
cmc
mov
pusha
xchg
rcrl
inc
outsb
jb
iret
mov
pop
cmp
movsl
es
fwait
loope
stc
dec
in
pop
or
mov
in
sbb
ss
fmul
vpunpckhbw
jecxz
sahf
mov
sbb
cs
pop
push
mulb
daa
addr16
fs
loopne
adc
out
clc
push
sti
sub
adc
pop
xlat
ud1
and
inc
adc
cmpsb
in
inc
pusha
dec
mov
xor
cmp
inc
xor
pop
dec
push
push
inc
in
mov
inc
mov
cmpsb
scas
test
loope
addl
add
push
mov
mov
into
adc
pop
xchg
xor
xchg
jae
repz
aas
mov
shl
dec
dec
pop
push
movsb
jl
xchg
sbb
push
or
push
lods
sub
jno
rorl
js
out
dec
je
pop
enter
test
xchg
dec
stos
lock
addr16
fs
insb
add
int
lods
push
popa
es
or
lcall
loop
xlat
jle
scas
leave
push
xchg
dec
ret
sub
or
inc
jl
and
xchg
xlat
xchg
arpl
out
sub
inc
push
xchg
cmp
imul
aas
cld
lcall
sahf
dec
dec
xchg
or
loopne
call
jmp
adc
jno
pop
ret
jmp
out
pushf
sub
mov
and
aam
enter
fiadds
push
push
out
push
dec
mov
and
xor
push
adc
cmc
xlat
pushf
mov
call
cld
inc
mov
mov
test
jl
cmp
add
ret
ja
sub
mov
dec
or
push
arpl
stos
jno
inc
xchg
push
test
sub
dec
mov
or
mov
cmp
inc
mov
xchg
jnp
test
hlt
or
rclb
outsb
mov
imul
push
jg
jge
sub
mov
sbb
push
and
outsl
out
xchg
cmpsl
in
lods
push
xchg
lret
lcall
addb
push
add
push
sub
into
movsl
mov
cmp
xlat
ret
pop
imul
hlt
gs
clc
insb
cwtl
xorb
inc
xorl
out
add
xchg
popf
mov
jne
test
push
std
cs
and
mov
xor
lds
sub
movsb
pusha
inc
xchg
shrb
mov
add
lret
mov
and
mov
ja
cmp
mov
and
sub
in
stos
sbb
jb
dec
jge
mov
cli
and
cmpl
mov
inc
sub
jno
or
sub
mov
clc
aaa
andb
in
inc
jns
sahf
cmp
push
daa
xor
lahf
stc
jp
pop
mov
andl
test
xchg
fsubl
mov
or
or
mov
mov
dec
addr16
add
mov
push
subl
movsb
push
inc
paddb
mov
sbb
mov
outsb
xor
jae
xchg
imul
or
mulb
mov
jg
cli
sti
mov
shll
jle
fstl
xchg
rorl
jnp
mov
in
ficoms
inc
aad
mov
lret
cli
sub
sub
repz
cld
ret
idivl
mov
ficomps
sti
adc
add
mov
jo
js
add
mov
adc
push
adc
jo
mov
clc
cmp
cwtl
push
mov
pop
adc
mov
jl
mov
inc
cli
pop
push
lds
jge
pop
inc
push
jns
insb
jne
or
xor
push
dec
xchg
stos
mov
nop
mull
add
xor
pop
jno
xor
jecxz
dec
jl
inc
or
lods
sbb
divb
mov
mov
inc
mov
cli
fidivl
test
or
xchg
cs
or
jb
js
nop
rorb
push
repnz
sbb
mov
fstpt
mov
cmc
xor
mov
adc
sub
xor
fstps
loopne
jns
push
jl
pushf
dec
lret
fwait
mov
imulb
cltd
gs
jge
repnz
mov
data16
or
loopne
mov
mov
cmc
das
les
push
dec
mov
out
mov
in
js
push
or
insl
xor
shlb
out
movsb
dec
ss
popa
test
dec
sbb
lock
fldenv
fs
rcll
mov
push
xlat
and
jb
test
pop
pop
rol
dec
xor
fadds
mov
xlat
pushf
mov
xchg
cmpsb
pop
repz
mov
insb
sbb
leave
xor
sub
add
mov
lea
loope
or
in
scas
std
or
and
xchg
ds
cmpsl
loope
push
idivl
int3
sub
dec
sahf
xor
jge
cmp
mov
dec
insb
mov
fisubl
jo
dec
mov
aaa
repnz
cs
jae
or
pop
push
inc
mov
or
mov
sub
sub
push
pop
xor
arpl
arpl
aaa
sti
mov
jg
sbb
pop
dec
dec
into
test
stos
cld
jmp
not
mov
in
icebp
dec
loop
fisubrs
stos
mov
pop
testb
pop
inc
movsb
aam
inc
push
sub
add
hlt
fldl
pop
fsubl
add
dec
push
jge
pop
cmp
pop
inc
xchg
push
and
jmp
movsl
mov
jmp
fimuls
jno
mov
add
or
sti
movsl
xchg
mov
sbb
mov
xchg
adc
js
mov
mov
scas
xor
sbb
shll
mov
and
pop
lret
and
es
ja
lock
int
inc
adc
push
daa
xor
mov
xchg
lock
movsb
fisubrl
ljmp
or
into
ja
cwtl
ja
dec
and
push
ja
add
sub
jl
push
cmp
out
mov
xchg
mov
shl
jp
in
adc
xchg
mov
gs
pop
daa
jmp
test
sti
mov
mov
outsl
imul
cli
nop
bound
stos
inc
dec
cmpsl
mov
fstl
out
ds
xchg
movsl
or
xor
xor
jg
push
push
xor
lret
cli
mov
sbb
add
icebp
ds
fcompl
xor
adc
dec
xor
mov
into
pop
in
inc
push
lods
popa
aad
pushf
dec
mov
mov
loopne
jns
lret
roll
dec
ret
cltd
mov
stc
or
jmp
lahf
icebp
xchg
mov
jge
dec
jmp
fidivl
mov
adc
adc
jp
push
cmp
mov
gs
or
cltd
das
or
aaa
je
jae
mov
xchg
fisubrs
lcall
cmp
pop
lret
adc
divl
pop
or
or
push
roll
jb
push
cltd
imul
hlt
aaa
fstpt
inc
push
mov
in
jno
mov
add
bound
mov
icebp
jo
pop
ficoml
mov
push
mov
cmp
dec
aad
fisttpl
mov
repnz
mov
mov
dec
add
sbbl
sbb
sub
cmp
adc
incl
jp
add
fstpt
psubq
mov
jo
sbb
mov
daa
lods
cmp
xchg
les
mov
and
push
fisubrl
pushaw
out
enter
ret
adc
jp
sbb
pushf
mov
xchg
test
push
push
push
addb
or
cltd
cltd
test
fcmovu
inc
in
push
ss
jge
sbb
xor
inc
mov
mov
and
adc
or
in
or
inc
sub
fists
adc
dec
add
outsb
ss
clc
aaa
mov
sbb
lods
pop
mov
stos
sbb
dec
mull
cmpl
clc
pop
jle
add
mov
hlt
fistps
jb
mov
add
fisttpll
repnz
dec
push
mov
in
lea
or
cmp
cmpl
ja
std
lret
push
xchg
and
lods
xor
mov
in
xchg
xchg
xchg
or
jmp
iret
cld
xchg
cltd
cld
popf
imul
ds
shl
add
mov
clc
lcall
pop
jbe
mov
xor
and
movsb
jmp
je
push
in
mov
jo
pop
add
jb
sub
stc
jnp
push
push
and
push
movsb
cmpl
sub
andl
inc
xchg
fs
pop
std
insb
push
jae,pn
jbe
insl
popa
xchg
ret
push
stc
cmp
mov
loope
js
gs
or
sbb
xlat
inc
pop
scas
mov
sti
inc
stos
subl
xchg
es
jno
aad
arpl
movsb
sahf
mov
lea
insb
dec
ljmp
stos
test
inc
dec
out
cld
out
jp
pusha
enter
and
out
data16
pop
xor
in
cmp
and
aad
cs
dec
lods
popl
mov
and
popf
jg
clc
int
pop
stos
mov
xor
cltd
loopne
ds
push
cmc
std
add
pop
inc
push
iret
outsb
cld
dec
mov
dec
mov
mov
fmulp
sbb
repnz
add
xchg
mov
inc
xor
jle
dec
movsl
dec
jmp
test
rcrl
sbb
shlb
ljmp
mov
cmp
sbb
cmc
sbb
aad
jle
push
inc
add
cld
pop
int
daa
mov
sub
test
lahf
push
fisttpl
fdivr
cmp
push
faddl
sahf
data16
sahf
scas
and
push
mov
inc
js
sbbb
pop
sbb
cltd
aam
add
jb
mov
testl
mov
sub
mov
outsb
outsl
cmp
mov
lods
xor
adc
sbb
push
pop
push
push
rolb
mov
in
lret
jg
cmp
insb
fcomps
cld
or
into
and
sbb
leave
dec
dec
fidivrs
mov
mov
in
pop
or
je
arpl
sar
sub
les
pop
jp
into
sti
out
mov
push
mov
int
push
add
loop
xchg
rol
stos
dec
mov
gs
xchg
mov
arpl
les
mov
cmp
push
into
mov
and
mov
sbbb
inc
xchg
pop
sbb
xor
ficoms
pop
clc
pop
and
push
sbb
ds
xor
sub
pop
sahf
and
xchg
lcall
push
cltd
rcrl
test
out
xchg
loope
pop
dec
and
mov
arpl
add
sbb
pop
xchg
or
adc
dec
int
push
fistpll
testb
test
out
sbb
cmc
jg
gs
jno
inc
imul
scas
mov
xlat
dec
ret
aas
sub
adc
orb
cmp
mov
xchg
mov
mov
xchg
mov
shll
sub
inc
or
xor
rcrb
xor
lock
ja
jmp
add
xchg
xor
sbb
jb
xchg
push
adc
mov
mov
stos
mov
fs
dec
push
push
repz
xor
add
pusha
pop
stos
mov
movsl
in
out
mov
mov
cmp
movsl
into
ds
sahf
cmp
fs
and
xor
pop
pop
xor
pusha
xchg
pusha
std
imul
fsts
sti
xchg
popa
dec
pop
clc
jo
xor
cltd
push
fstpl
inc
push
ljmp
pop
stc
mov
test
mov
stos
dec
push
adc
mov
fimuls
outsb
lods
push
adc
int3
shrl
repnz
aas
repnz
das
les
aaa
xchg
push
sub
xor
mov
outsb
mov
loop
scas
fiaddl
fcoml
fisttpl
fs
js
movb
xchg
mov
mov
push
xchg
jb
lods
popl
pop
and
push
adc
imul
mov
into
adc
jnp
cmp
movsl
cltd
sub
jecxz
shlb
mov
fs
jno
inc
aam
dec
in
out
push
test
mov
mov
mov
movsl
push
pop
jmp
fsubl
lret
mov
jo
pop
scas
aas
mov
decb
mov
push
push
rclb
fbld
pushf
ss
mov
insb
xor
cmp
jl
sbb
jle
lcall
push
in
lahf
mov
push
and
ljmp
aad
mov
pop
leave
jae
pop
test
inc
movsl
pop
adc
dec
sbb
dec
mov
loope
int3
test
mov
dec
inc
in
outsl
addr16
insb
sub
xchg
pop
push
push
jl
jle
fildll
mov
clc
orl
aad
scas
cli
inc
ljmp
xlat
dec
mov
in
jae
add
into
call
mov
cmp
sbb
add
loope
shll
pop
mov
lret
clc
mov
or
mov
push
test
fwait
mov
dec
sbb
ss
sub
repnz
fs
loope
pop
faddl
mov
inc
cmpsl
xorb
pop
jg
add
cmpsl
imul
insl
jecxz
and
je
stos
xchg
fwait
repz
push
out
int
xchg
pop
inc
sbb
bound
cmp
ret
stos
repz
enter
dec
sbb
lret
in
inc
stos
inc
adc
les
add
adc
xor
xor
or
sbb
lods
mov
call
adc
mov
dec
negl
jbe
fisubrl
test
pop
xchg
lea
in
push
mov
repz
cmpsb
cmp
lods
test
sbb
hlt
mov
lods
cld
adc
mov
iret
dec
adc
jmp
stc
inc
test
mov
mov
insl
inc
cmp
out
or
outsl
jg
xor
jmp
ljmp
inc
fwait
repnz
rcl
orb
sti
xorb
ds
insl
jmp
push
sub
cs
mov
sub
inc
in
aas
xchg
jno
mov
dec
aad
xchg
inc
xor
sub
dec
popa
lret
sbb
mov
sub
inc
xchg
mov
mov
fdivp
insb
cmp
push
test
jbe
jmp
leave
mov
sbb
dec
nop
hlt
imull
mov
mov
jp
adc
kunpckwd
pop
sarl
xor
xor
dec
jle
add
xor
push
test
dec
push
loop
mov
add
add
loope
clc
sub
mov
or
xor
cmp
and
shlb
cmp
mov
and
adc
in
jg
cmp
mov
aaa
mov
mov
mov
ja
fcompl
or
lahf
call
test
xlat
mov
aaa
xlat
push
inc
out
pop
jo
mov
xchg
adc
ss
or
scas
jne
mov
aam
push
outsl
lock
xchg
je
xchg
sub
cli
xchg
sbb
jb
or
push
adc
inc
out
sub
xor
movsl
arpl
and
add
iret
fidivrs
dec
addps
inc
mov
sbb
or
xor
in
mov
orb
enter
push
mov
sbbb
sbbb
icebp
cmp
mov
cli
outsb
mov
faddl
lret
jle
daa
add
mov
sbb
sub
xchg
mov
sbb
mov
and
cmpsl
cmp
decb
enter
out
or
jns
pop
outsl
inc
mov
jo
lods
lret
jmp
in
pop
rolb
js
inc
or
lods
jp
push
fimuls
xchg
pusha
and
push
movsb
jle
arpl
or
clc
mov
loopew
loope
push
arpl
ret
xchg
sbb
xchg
data16
mov
sahf
or
cmp
xor
out
cmp
and
loop
xor
cltd
sti
in
loopne
or
addb
cmp
jnp
pop
cld
sub
out
jns
daa
mov
cmpl
and
push
pop
clc
js
push
shlb
mov
jb
pop
out
into
pop
pop
imul
pop
loopne
jae
sbb
lea
inc
in
fs
and
inc
sti
cmpsb
push
dec
hlt
pop
in
xor
inc
movsb
xchg
jecxz
add
repnz
cmp
leave
cli
insl
xlat
and
adc
outsl
out
outsl
imul
dec
gs
inc
or
lret
cmovne
lods
or
inc
addr16
mov
add
dec
mov
insb
sti
jp
adc
sub
in
push
mov
mov
xor
jmp
mov
fnstsw
add
das
aad
dec
into
or
and
cld
mov
mov
dec
jae
in
sub
xchg
mov
lds
adc
adc
xchg
cmp
add
mov
jno
lahf
loop
lret
push
into
pop
fisttpl
lahf
jg
jne
jecxz
dec
push
sysenter
out
fs
popf
xchg
jne
loop
dec
stos
jecxz
sarb
repnz
out
mov
sbb
xor
jmp
xor
icebp
mov
mov
dec
mov
xor
jle
repnz
subl
mov
pop
push
ret
dec
aam
and
js
sbb
push
cmpsl
or
rcll
mov
std
push
cmpb
sub
lea
sub
add
out
sbb
sbb
jnp
dec
jno
rclb
xchg
add
mov
dec
aad
imul
insb
mov
or
cld
xchg
sbb
icebp
jb
fdiv
mov
es
dec
mov
insb
dec
outsb
add
jb
mov
cmp
negb
push
icebp
and
in
pop
mov
js
push
es
sbb
pusha
lret
ds
fdiv
fstp
shll
inc
fcomps
inc
in
xchg
push
call
mov
fyl2x
push
push
sbb
xchg
loop
or
sub
inc
pop
fiaddl
cmp
sbb
sbb
mov
iret
ret
cmp
insl
add
mov
jmp
sub
xchg
loop
cltd
jmp
shlb
cmp
pop
pop
ret
jnp
mov
inc
inc
pop
out
int3
outsl
ss
add
shrl
mov
andl
sarl
es
addr16
xor
std
mov
jno
das
cltd
xor
mov
dec
mov
cmp
cmp
in
fcmovnb
push
xchg
push
leave
popf
das
mov
pop
dec
xor
mov
dec
in
xor
and
lods
add
lss
out
or
sbb
adcl
cwtl
call
xor
arpl
out
stos
cltd
xor
fs
adc
gs
mov
call
mov
xchg
mov
cmp
jge
and
idivl
sbb
jns
lahf
xchg
insl
lds
sbb
cmpsb
stc
and
mov
or
xchg
insb
xorl
pop
dec
pop
mov
push
shlb
test
fdivrl
test
xor
inc
mov
cltd
xor
jb
data16
xor
bound
jl
dec
int
js
rep
push
fsubl
decb
loopne
xlat
addl
xchg
cmp
imul
sbb
lods
jbe
pop
ljmp
mov
inc
call
pop
outsl
add
pop
jbe
mov
aaa
mov
nop
xor
xor
cltd
push
aad
mov
ss
into
xchg
testb
scas
push
pop
pusha
bound
test
add
leave
stos
lret
sbb
inc
push
jge
into
pop
mov
lcall
sti
scas
jl
pop
cmp
sbb
frstor
out
jo
sbb
dec
data16
jne
sub
jp
lahf
inc
out
iret
jae
push
inc
cmc
mov
test
sub
cwtl
insb
adc
sbb
mov
xor
adc
or
cli
cli
cmp
ja
mov
out
cmpsb
adc
clc
pop
xor
or
or
pop
lea
in
jo
imul
pop
xchg
push
mov
sub
inc
mov
mov
inc
pop
xlat
inc
ret
fiadds
fs
les
mov
adc
and
loopne
mov
in
lock
xor
outsb
push
inc
repz
cmp
push
pop
mov
jno
push
dec
je
xor
push
getsec
xchg
add
insl
jo
cmp
push
adc
mov
test
int3
je
xchg
push
movsb
loope
lret
mov
mov
cltd
add
mov
sub
lahf
pop
sahf
cs
out
sbb
dec
fnstcw
mov
jmp
fwait
sub
add
ret
or
nop
dec
sahf
repz
mov
and
mov
and
dec
inc
loopne
jmp
and
xchg
insb
or
mov
loope
pop
andl
xchg
roll
mov
or
adc
lea
xchg
fwait
sbb
cli
lock
sahf
stc
cmp
hlt
imul
negb
call
xorb
hlt
pop
mov
cmp
pop
js
je
shr
adc
sbb
sub
xchg
leave
or
sahf
aaa
lds
repnz
fisubl
and
xchg
aad
ss
jge
adc
jbe
cmp
add
mov
out
jns
lock
out
ror
jmp
movsb
pop
dec
or
imul
les
jb
lret
sti
and
or
xchg
jno
imul
jmp
or
xor
data16
insb
jmp
inc
outsb
ljmp
data16
int
sub
jne
adc
inc
mov
mov
mov
loopne
xchg
jecxz
int3
rcr
int3
lret
sbb
movsb
xchg
shll
or
sbb
xorb
aaa
mov
sub
clc
mov
sbb
dec
cmp
jbe
xor
adc
dec
into
aad
mov
js
adc
push
sbb
shl
mov
aam
outsb
in
in
gs
jle
out
hlt
hlt
pop
rol
bound
test
insl
incl
in
jge
adc
les
cli
insl
sub
arpl
add
sti
mov
sub
mov
nop
fsubp
test
sqrtpd
mov
aas
or
lahf
test
daa
xor
mov
pop
rcll
add
push
movsl
lods
adc
adc
sysenter
pop
push
seta
fisubrs
or
jb
sbb
test
push
push
sub
lret
sub
insl
out
scas
push
push
fisttpll
out
nopl
inc
out
adc
adc
xchg
fsubrs
int
sbb
rorb
aaa
pushw
nop
movsl
push
mov
lahf
fwait
inc
lret
add
dec
or
cld
das
pop
and
pop
push
in
cmp
jg
popa
push
insb
xchg
scas
mov
push
cwtl
dec
cmpsl
mull
or
jl
test
xor
sub
lea
in
xchg
lods
fs
jb
mov
xor
mov
pop
sahf
test
inc
fdivrs
test
pop
cli
xor
jge
stos
sub
push
inc
repnz
insl
sub
jge
in
mov
xor
leave
or
dec
sub
call
lock
adc
dec
stc
xor
int3
call
inc
shr
push
fxch
int3
test
and
jb
sub
mov
enter
pushf
push
aas
inc
scas
sbb
push
imul
or
out
pop
mov
xchg
cs
arpl
xor
sub
xor
adc
add
mov
cmpsb
clc
inc
leave
ljmp
fidivl
rcll
dec
je
mov
in
lcall
push
or
push
lods
pop
sahf
mov
imulb
push
stc
in
test
lcall
mov
pop
jbe
push
dec
int3
and
push
or
and
lahf
jmp
push
mov
or
pushf
push
adc
pop
xlat
jo
sbb
dec
ds
jp
sub
movsb
dec
dec
mov
bound
iret
mov
lds
push
cmp
nop
addl
push
stc
orl
cmp
or
fmulp
mov
jg
test
adc
pop
repnz
xchg
out
push
sbb
cmpsb
mov
std
cmp
test
mov
iret
cld
cmpsb
in
cld
fld
jmp
neg
jne
jle
jmp
bound
les
iret
lea
fldl2e
cld
jno
out
addr16
fsubl
lea
repnz
xor
adc
jge
push
lcall
mov
iret
push
mov
call
cmp
data16
push
ret
les
movsb
xor
adc
jo
rorl
cmp
push
pusha
sbb
jge
movsb
leave
dec
pop
test
imul
push
mov
in
movb
popf
das
loop
pop
mulb
outsl
loop
leave
pusha
inc
push
adc
cmp
popa
xchg
rolb
in
daa
in
xchg
repnz
fstpt
and
push
stc
mov
jno
and
out
scas
out
adc
mov
and
pop
xor
dec
xor
lahf
outsl
sub
dec
fimuls
adc
push
push
dec
popf
mov
xor
fdiv
push
mov
loope
adc
lods
in
sub
adc
adc
cmpsl
xchg
les
pop
add
repnz
lcall
in
je
in
add
inc
nop
push
pop
hlt
inc
out
test
xchg
jb
xchg
pop
repnz
out
cltd
inc
jae
stos
sbb
pop
cld
adc
push
inc
inc
cmpsl
sbb
sub
sub
enter
fcoml
pop
insl
mov
pushf
sub
lcall
fcoml
int
pop
jge
push
in
ficomps
shrb
sbb
or
push
push
nop
push
out
fldt
bnd
adc
rcr
xchg
or
fildl
sbb
fstpt
loopne
out
mov
ficoml
jl
pop
add
aam
ret
cmp
jp
jge
inc
test
xchg
popa
mov
sti
stc
pop
nop
xchg
les
in
mov
adc
test
ja
ljmp
scas
repz
pop
out
in
sub
insl
pusha
ja
int
out
xchg
lret
jl
adc
std
sub
mov
mov
pop
cmp
adc
rcrb
fsubr
rcrl
mov
es
mov
sub
sahf
pop
dec
cmp
and
aaa
pop
shlb
test
movsb
adc
inc
outsb
loop
xor
sbb
xor
int3
lods
std
pop
jae
add
stos
sahf
out
lock
mov
mov
dec
and
dec
sbb
ss
cmpsb
mov
push
fidivrl
call
test
pop
lea
mov
pop
cmc
push
out
mov
fcoml
inc
mov
dec
bound
pand
dec
je
pop
clc
pop
mov
cmpsb
xchg
adc
and
daa
xchg
imull
cmp
inc
dec
sub
jp
inc
cmp
dec
dec
push
js
sbb
xchg
and
jmp
xchg
into
dec
lret
and
lea
xor
inc
jne
adcb
dec
sbb
mov
nop
and
insl
cli
adc
into
in
stc
mov
jne
pusha
push
fistl
testb
shlb
cmpsl
popa
mov
int3
icebp
lahf
and
lret
xor
xlat
jge
push
enter
sbb
orb
xchg
xchg
and
in
out
in
pop
in
lret
ja
and
pop
xchg
enter
or
inc
sub
jns
or
cmpb
jnp
add
dec
sub
pop
cltd
inc
push
notb
sbb
into
data16
adc
es
sbb
test
inc
mov
test
repz
mov
pop
bound
in
pop
cmp
xor
mov
fsubs
stc
sbb
jmp
into
in
xchg
xchg
arpl
popf
aaa
movl
data16
mov
stos
cmp
adc
mov
mov
mov
mov
mov
xchg
sub
inc
pop
out
adc
aam
push
test
xchg
xchg
imull
stos
push
pop
fisubrs
jb,pn
sbb
cmp
data16
std
out
outsl
sub
inc
jno
pop
lock
into
adc
sti
iret
subb
cltd
lock
arpl
inc
fdivrs
testb
inc
rcll
mov
or
cs
pop
xor
std
cli
cwtl
clc
in
lret
pop
or
in
add
cmovle
out
mov
loop
rorb
sub
cwtl
jns
and
push
sub
addr16
jns
mov
and
mov
je
ds
inc
pushf
mov
cmp
push
lods
mov
out
inc
out
daa
fsts
aam
add
int
pop
lods
cmp
add
xchg
popf
popa
xor
mov
lcall
jecxz
out
dec
xchg
shrb
pushf
test
rcl
cmpsl
out
xor
fwait
and
inc
cmp
mov
jne
mov
xchg
and
xchg
and
xchg
popa
or
or
scas
xchg
scas
cmpsb
lret
push
outsb
xchg
jnp
sti
sbb
jle
jmp
shlb
mov
ret
jbe
mov
shrl
movsb
push
push
cmpsl
and
jle
xchg
mov
pushf
lock
incl
daa
mov
mov
xchg
mov
adc
out
popa
fisttpll
in
and
sbb
xor
add
pusha
je
dec
and
dec
push
sbb
pop
in
mov
adc
push
jbe
orl
pop
dec
and
jecxz
in
movsb
int
stos
stos
fs
add
cmp
mov
es
shrb
hlt
push
push
add
stc
lea
mov
push
push
sbb
subl
aaa
lds
or
rcrb
into
mov
cmp
lods
xchg
in
jns
push
stos
mov
mov
lods
ds
adcl
test
add
shl
ljmp
xor
and
xchg
xor
adc
insb
sbb
push
inc
xor
or
outsl
sub
or
mov
fsubrl
test
or
pop
mov
das
xlat
add
fucomp
adc
cmpsl
adc
push
sub
adc
push
xor
xchg
stos
test
stc
xor
cwtl
loopne
pushf
into
mov
pop
jecxz
push
pop
pop
adc
es
into
popa
cmp
mov
repnz
lahf
cmp
pop
mov
cld
ficompl
mov
stos
jno
sub
in
imul
inc
pop
testl
pop
ret
loop
out
rorl
aaa
insl
or
pusha
cs
or
test
add
inc
add
ljmp
test
or
fnsave
inc
lods
daa
mov
and
dec
cmc
xchg
pop
add
and
ss
cmpb
adc
lock
ror
pusha
hlt
mov
mov
and
into
mov
sub
fiaddl
addr16
call
rcrl
xchg
mov
repnz
xchg
push
sbb
sahf
jne
add
sub
jno
fiaddl
mov
jne
pop
addb
and
xchg
mov
ds
fs
adc
fldl
sahf
or
fisubrs
or
add
loopne
outsl
dec
dec
adc
jecxz
ret
das
les
rorl
stc
leave
subb
adc
or
sub
mov
dec
adc
mov
xlat
mov
sub
lods
lret
leave
sbb
nop
mov
or
push
outsl
push
cmp
test
inc
pop
push
int
mov
mov
sbb
mov
shl
push
and
mov
jo
xchg
push
sub
or
les
pop
scas
jp
xchg
lea
enter
into
fcmovne
addl
cmp
shrl
inc
mov
add
push
aaa
es
add
push
mov
insb
sub
cld
dec
lret
dec
fdivrs
jo
jnp
jae
pop
or
jnp
int
cltd
rolb
xchg
sarb
and
jl
loop
popa
pop
push
jge
ds
clc
clc
test
mov
sahf
mov
cmp
cmp
xchg
sub
dec
rcrl
fnsave
or
mov
jecxz
imul
ret
std
popf
or
out
jle
frstor
jmp
inc
int3
or
adc
add
pop
or
push
pop
inc
imul
dec
sub
lret
fsts
iret
xor
jb
stc
cmpsl
mov
push
std
mov
mov
pop
or
das
xchg
mov
movsl
inc
adc
nop
adc
jg
js
aad
out
test
rorl
push
fcmove
inc
loop
xchg
in
or
rcl
sbb
loop
ret
sub
imul
cmp
idivl
push
cmp
in
pushf
jae
hlt
lahf
clc
inc
mov
data16
ss
cmp
test
fs
mov
inc
xchg
pop
lods
mov
mov
dec
stos
aas
push
xor
pusha
ja
clc
pop
out
or
xor
dec
push
sbb
cmp
cltd
adc
jge
daa
pop
push
iret
pop
rorb
jecxz
nop
sbb
test
or
fs
push
pop
lods
push
loop
sub
jp
call
jg
aad
jns
dec
xchg
ss
in
jecxz
xchg
je
int
roll
xor
xchg
adc
das
jo
cli
add
mov
inc
jo
cmpsl
fsubrs
out
into
mov
aaa
xlat
lea
dec
hlt
xchg
cmpsb
mov
xor
adc
sub
js
cmovge
sub
fwait
in
rcrb
cs
inc
sub
sub
xor
cli
push
out
outsl
sbb
daa
loope
cwtl
mov
sbb
mov
sahf
mov
sahf
mov
cmpsb
out
cmpsl
mov
jg
mov
mov
dec
push
sbb
or
les
xor
mov
jle
arpl
je
fistl
xlat
aaa
lret
cs
adc
out
cwtl
and
push
into
sbb
sub
sbb
dec
popf
mov
cmpsl
in
mov
mov
xchg
lcall
sub
orl
or
fidivrl
das
xchg
adcl
in
test
dec
or
mov
pop
sar
addr16
xor
cli
unpcklps
jecxz
lret
dec
cmpsb
es
jmp
aam
cs
jns
mov
mov
mov
ja
sbb
xor
stos
je
cmp
dec
lea
pusha
fisttpl
push
shrb
xchg
cmp
std
shl
cmp
rcrl
inc
fistpl
mov
xchg
inc
test
dec
dec
xor
sti
xor
mov
mov
dec
or
loope
arpl
jo
sti
insb
add
push
mov
outsl
dec
ret
dec
cld
repz
jp
push
mov
in
jmp
xor
push
inc
cmp
cmp
outsb
in
jl
xor
mov
or
mov
fucomp
inc
sbb
outsl
push
das
xchg
in
and
ffree
test
andb
xor
dec
adc
or
imul
adc
jns
test
lcall
add
mov
outsb
mov
xchg
mov
jb
es
orl
and
mov
push
mov
fisubl
or
sub
push
push
fdivrs
sbbb
push
dec
js
shll
mov
fs
pop
bound
mov
cmc
stos
inc
imul
mov
daa
ja
repz
or
dec
ss
sub
push
or
ret
stos
int
fcomps
lret
xor
negb
dec
lret
insl
add
jno
bound
fdivr
loopne,pn
adc
das
shlb
mov
push
fwait
daa
fsubl
pusha
dec
jmp
xor
test
fidivl
sub
lcall
jo
xor
popa
and
cmpsl
insb
mov
popa
aas
test
push
jl
rcrl
lds
daa
scas
inc
xchg
mov
push
lahf
push
ret
in
add
cltd
jnp
out
dec
bound
mov
in
into
gs
call
xchg
sub
and
sahf
jg
add
stc
out
adc
push
cmp
mov
adc
fisubl
xchg
add
pop
xchg
push
int
sbb
and
cmp
in
sub
sbb
inc
push
std
scas
insl
in
mov
mov
adc
ljmp
lcall
pop
xlat
sahf
cmc
in
fwait
mov
icebp
add
add
push
lahf
lahf
fucomip
int
hlt
fnstenv
inc
add
mov
ja
call
stos
repz
sub
mull
rorb
lock
mov
xchg
push
ret
jle
cs
jns
inc
mov
icebp
push
jno
enter
cwtl
push
sbb
lcall
leave
adc
cmp
push
xchg
xlat
test
mov
clc
fwait
xor
adc
rclb
imul
mov
jl
xchg
add
rolb
sub
dec
pop
jmp
fadds
movl
push
je
xchg
iret
adc
call
inc
and
pop
neg
mov
in
out
in
pop
lret
aas
push
dec
shll
xchg
into
movsb
je
in
adc
out
ret
lods
and
adc
lods
dec
adc
imul
xchg
pop
and
lock
pop
repz
test
leave
inc
mov
xor
test
movsl
stc
xchg
xor
ret
pop
pusha
push
sub
scas
lock
xor
inc
fsubl
sbb
pop
dec
pop
sti
jge
inc
lret
xchg
fidivl
xor
test
jmp
pop
xchg
push
fsubrl
inc
sub
pop
xlat
jmp
jecxz
test
inc
call
into
jl
dec
jne
adc
clc
push
push
lcall
mov
cli
inc
aad
mov
out
sbb
push
cmp
test
dec
loope
test
lahf
mov
test
test
sahf
imul
loop
mov
jno
std
pop
inc
push
out
adc
fldenv
inc
mov
xchg
push
mov
into
inc
inc
mov
fidivrl
dec
sbb
mov
shlb
outsl
sub
pushf
addr16
or
testb
outsl
pop
outsl
shrl
out
ret
in
mov
lods
mov
stos
xchg
mov
cmp
in
bound
ret
lea
mov
xchg
mov
mov
and
bound
xchg
arpl
adc
adc
xchg
pusha
mulb
idiv
or
or
sbb
sbb
xchg
addl
addr16
sbb
and
es
test
lahf
pusha
and
mov
inc
shl
cld
movsb
rol
add
int
in
dec
scas
pop
cmp
mov
fsubp
clc
xor
aas
sub
mov
bound
loop
xchg
or
fistpll
cltd
push
sub
daa
inc
adc
fisubs
ret
sahf
mov
mov
dec
iret
mov
enter
mov
pop
inc
or
icebp
addr16
pop
inc
jl
clc
call
bound
sarb
xchg
lods
in
pop
or
aas
outsb
pop
xlat
js
pop
add
jae
test
in
inc
jle
cmp
mov
and
rorl
ds
ja
mov
lfs
fs
jmp
clc
push
imul
and
sbb
xor
push
dec
popa
fbld
mov
adc
movsb
data16
pop
aaa
dec
in
jg
repnz
mov
add
insb
rcll
sar
sbb
or
pusha
imul
mov
in
mov
gs
mov
or
inc
mov
cmp
mov
cmc
scas
push
cwtl
and
mov
mov
sbb
std
popa
in
ficomps
mov
mov
push
jge
or
ss
xor
rcrl
lahf
sbb
push
dec
dec
bnd
mov
lods
fwait
jns
and
cmp
xchg
je
adc
and
stos
xor
mov
jge
sbb
jg
adc
divb
sub
adc
cmp
cmp
lock
jg
push
jp
int
push
or
arpl
mov
fwait
jb
dec
and
add
and
push
fadd
cwtl
mov
inc
je
xchg
movsb
imul
loopne
adc
add
mov
cmp
sub
adc
inc
mov
jle
pop
adc
insb
call
sub
xor
enter
mov
mov
iret
fldenv
mov
xor
fs
out
pop
xchg
cld
prefetch
lcall
ret
xchg
mov
mov
xor
push
movsb
hlt
movsl
mov
pop
mov
dec
ja
nop
ret
jo
out
lds
das
jno
mov
mov
inc
mov
pop
sub
lret
adc
add
iret
shll
std
push
push
loopne
rcll
dec
inc
stc
inc
xchg
mov
add
jne
xchg
mov
aam
cmpsb
push
mov
mov
add
push
ror
and
inc
mov
xchg
xor
out
lods
add
mov
test
add
mov
sub
mov
sub
orb
add
jg
das
add
insl
call
lds
les
in
lcall
adc
bound
xchg
pop
xor
shll
imul
ljmp
lret
icebp
add
dec
arpl
shll
push
adc
inc
in
in
jle
popf
bound
imul
pop
mov
mov
test
sbb
cltd
sub
pop
jmp
xchg
imul
xor
test
popa
or
adc
fsubrl
loope
mov
sahf
icebp
add
inc
sbbb
cltd
push
call
mov
bnd
lods
andl
loop
rcl
popa
mov
xchg
push
fcmove
fsubrs
mov
cld
xchg
sub
mov
inc
pop
icebp
sti
xchg
cltd
cmp
sahf
jo
jmp
bound
lahf
adc
adc
lea
cmp
mov
sub
jb
clc
test
dec
stos
xchg
std
js
xor
call
stos
das
es
ret
push
mov
lea
in
inc
xor
xor
jl
mov
insl
iret
xchg
insb
addr16
pop
lods
pop
mov
xchg
mov
std
inc
or
arpl
mov
xor
cmp
ss
ds
lret
into
mov
cmp
jae
call
mov
push
fnstsw
xor
mov
in
add
jg
fmuls
mov
jl
sbb
jo
sub
xor
xor
dec
dec
push
jge
in
push
sbb
sbb
outsb
adc
repnz
repnz
andl
sahf
mov
es
push
leave
dec
jle
dec
push
call
push
repnz
pop
push
cmc
bound
mov
push
mov
xor
sbb
cld
or
pop
dec
mov
cmpsb
pop
dec
push
cmc
subb
mov
xchg
sub
nop
cmp
inc
jo
and
cmp
jl
cli
jae
test
sub
mov
sub
inc
push
fdivrl
mov
das
mov
mov
xchg
dec
iret
loop
cli
shr
push
xchg
or
jge
cmp
mov
fdivrl
mov
cmp
mov
push
sahf
ret
inc
or
cmpsb
jge
in
xchg
pop
sbbl
sbb
call
insb
push
push
data16
add
stos
into
mov
xor
and
or
and
fwait
jle
gs
sti
sbb
loopne
pop
fs
dec
pop
shll
pop
fcomps
xchg
jmp
xor
inc
adcb
cwtl
aad
loop
fistl
cs
ja
enter
push
and
shrl
cmp
lcall
cmpsb
adc
arpl
clc
sbb
mov
sarb
mov
cmp
xor
and
adc
ds
push
mov
in
mov
xchg
cmpsb
dec
imul
lods
jle
fisubs
bound
ljmp
out
gs
lret
int
outsb
cmp
push
xlat
pop
loop
pop
into
sbb
repz
cmc
push
shl
stc
fwait
push
mov
push
inc
pop
xchg
cmpl
add
push
popf
xor
out
repz
push
or
shlb
fadds
dec
add
xor
fldl
pop
cs
sub
test
mov
sti
fwait
push
jle
ffreep
adc
and
push
cs
xlat
rcr
adc
out
lock
mov
xor
loope
dec
out
pop
and
adc
inc
out
lock
in
push
insl
mov
pop
mov
stc
pop
pop
cwtl
ss
sti
push
test
call
pop
pusha
bound
jb
dec
cmp
push
mov
or
pop
mov
ds
mov
rorb
cmp
sub
enter
ret
sbb
fucomp
xlat
jg
into
fimuls
insb
or
dec
pop
or
sbb
insl
fisubrs
mov
push
popa
pop
call
sbb
incb
dec
xchg
mov
inc
or
fistl
iret
push
sahf
push
imul
iret
cmp
xchg
scas
sbb
dec
das
mov
mov
in
fsubr
cmpsb
jle
pop
or
sbb
mov
sbb
ss
ficoml
stc
loop
dec
loopne
xchg
divl
std
dec
push
xorb
shrb
and
xor
ret
pop
mov
sbb
jnp
push
jo
out
pop
aad
fcoms
cmpsb
popf
call
sub
and
and
dec
sbb
ja
insb
lock
in
mov
mov
sbb
cs
inc
dec
sub
stos
sub
mov
mov
imul
imul
int3
push
inc
std
outsl
mov
test
inc
adc
repz
loopne
scas
mov
lea
nop
sub
xor
or
mov
push
pop
jp
ss
rcrb
jmp
dec
testb
sub
push
push
idivb
lcall
jae
add
in
xor
sbb
rcr
scas
inc
mov
xchg
lcall
decb
push
gs
push
xchg
in
scas
push
out
xor
jae
es
lods
loope
sub
dec
mov
cmp
pop
es
ret
mov
sub
dec
cmpsb
outsb
repnz
add
outsl
icebp
test
push
add
dec
sbb
adc
cmp
aaa
mov
push
adc
ja
xor
adc
addl
and
sub
push
sbbb
in
fcompl
mov
fadd
sahf
pop
rcll
xchg
mov
inc
fcmovb
sarb
mov
shlb
loop
sub
cltd
pop
stc
out
mov
movsl
push
in
out
dec
movsl
and
shrl
mov
rcrb
or
or
add
jb
jge
cmpsb
sbb
gs
or
ret
filds
inc
xor
lret
ja
movsb
jae
sbb
stos
jp
and
mov
inc
fcmovnb
ljmp
shrb
sbb
loopne
xor
inc
jmp
shlb
inc
cwtl
stos
mov
jmp
inc
fldcw
push
movsl
xchg
sarl
rclb
mov
sbb
or
loop
cmp
daa
movsb
adc
imul
fs
mov
dec
in
adc
arpl
nop
sbb
xlat
xchg
and
push
push
add
push
cmpsl
lahf
stc
cmp
dec
or
out
mov
push
in
mull
jge
shlb
jno
ret
adc
popfw
jl
ss
mov
shll
sub
adc
sub
push
mov
lret
sbb
dec
sub
mov
add
mov
test
lcall
cmp
lahf
xor
nop
mov
push
sbb
mov
xchg
shll
mov
pop
outsb
pushf
js
adc
and
sub
adc
je
xchg
leave
aaa
xchg
lahf
pop
aad
inc
xchg
test
testl
mov
lea
push
jecxz
out
aaa
add
cmp
ficomps
pusha
ja
dec
sbb
pop
fisubl
cld
outsb
in
pop
aam
cmp
push
popf
mov
dec
xchg
sub
xor
mov
in
ljmp
jmp
adc
std
das
inc
jbe
ss
aaa
rcrl
xchg
mov
pusha
stos
jae
adc
in
cmpsb
mov
aam
adc
jl
fildl
xchg
scas
cmp
test
add
test
stos
push
and
push
dec
dec
dec
decb
out
cli
lahf
ficompl
push
fsubrs
pushf
jle
jg
fwait
inc
stos
pop
shl
shl
pop
pop
xchg
loop
loope
cld
sbb
pop
sub
nop
or
dec
into
and
out
aam
mov
lret
mov
jns
push
outsb
cltd
push
out
sarl
xchg
mov
out
outsl
sti
push
test
and
pop
jl
in
repz
ret
call
mov
aas
pop
sbb
sub
fstpt
mov
clc
lahf
ljmp
cmpsb
inc
xor
das
loopne
mov
push
fstpt
dec
jno
jno
inc
cmpsl
fldcw
pop
sbb
js
mov
lock
sbb
or
pop
adc
jmp
sbb
mov
jmp
jns
mov
cmp
js
scas
mov
and
sub
das
rcrb
jns
mov
cmpsb
inc
out
mov
jecxz
adc
movsb
sbb
scas
cmp
mov
mov
mov
cli
push
out
cld
icebp
hlt
jae
sar
pop
pusha
cmp
sub
or
lock
ljmp
mov
xor
shll
inc
rol
push
fstps
ror
mov
mov
dec
fnsave
push
xor
push
sub
and
xor
insl
adc
lods
pop
or
aam
lret
jle
add
shlb
pop
xchg
jo
and
lods
mov
add
sub
scas
add
shll
movsb
sbb
into
les
test
cmp
std
mov
js
push
inc
aaa
inc
mov
scas
pop
fisubrl
add
mov
jecxz
pop
and
sub
nop
mov
inc
pinsrw
leave
push
add
xchg
jl,pt
outsb
repz
scas
dec
add
mov
ret
fwait
int3
jge
loopne
out
inc
lsl
adc
pop
scas
popa
adc
mov
fildll
pop
ret
popa
mov
push
and
push
cmc
addr16
mov
sti
inc
repz
cli
movsb
cli
pop
dec
lds
mov
sub
repnz
cli
mov
xchg
or
cs
add
ret
mov
lret
testl
incl
or
mov
repz
mov
dec
lock
xchg
mov
xor
jbe
lea
add
jb
adc
jae
jbe
jnp
mov
fnstenv
jne
mov
mov
pop
daa
data16
outsb
les
mov
push
fildll
arpl
fstpl
jne
inc
sub
in
ret
mov
mov
push
popa
adc
iret
pop
push
pop
inc
repnz
fisttpll
mov
movsb
pop
jle
adc
arpl
push
loope
lods
or
mov
jnp
loope
stos
bswap
push
add
lret
xor
jne,pt
mov
jmp
out
cmp
sub
add
lret
lahf
repz
ds
jnp
mov
inc
sbb
outsl
xorl
push
push
nop
lahf
std
shlb
mov
or
push
jmp
repz
cmp
addl
loope
fsubrp
out
mulb
and
xchg
sbb
pushf
arpl
subb
mov
ficoms
test
lcall
push
and
js
clc
cmp
jle
add
test
sub
pop
aaa
xchg
push
xchg
or
or
ret
or
test
andl
mov
inc
dec
sub
and
inc
orl
int
adc
and
mov
aas
xor
imul
add
pusha
pop
dec
dec
mov
jp
pop
inc
and
mov
das
xor
push
push
add
popa
push
or
jne
sti
mov
fldl
mov
daa
inc
pop
call
out
arpl
ljmp
mov
call
jge
scas
dec
movsl
addr16
jnp
es
inc
pop
addr16
wbinvd
jle
adc
out
clc
pop
sbb
pop
jl
or
sbbb
lea
ror
push
push
push
xor
popf
pop
test
pop
stc
cmp
cmp
mov
scas
mov
mov
fstpl
rorl
and
orb
lret
sub
xchg
xchg
idivl
ret
jge
movsl
mov
cmp
add
test
lahf
cmp
mov
mov
pusha
es
jbe
adc
pop
xchg
sub
push
arpl
mov
push
jbe
fwait
sti
or
or
das
icebp
mov
aas
outsb
add
jmp
fstl
pop
and
sbb
adc
inc
dec
scas
sarl
bound
pushf
dec
popa
ret
push
call
mov
jo
push
into
rclb
push
mov
lods
sub
pop
repz
fwait
adc
aas
aaa
shr
xchg
pop
mov
mov
push
fnstsw
xchg
daa
in
cmp
les
push
mov
cmp
repnz
lcall
pop
cmp
lds
rcll
mov
cs
add
fcoml
clc
cmp
dec
mov
adc
pop
mov
pop
xchg
and
push
mov
mov
jp
shlb
int
add
imul
bnd
xchg
ret
mov
jo
inc
mov
mov
ja
push
dec
dec
popf
lods
pop
dec
arpl
test
or
cs
cmpsl
test
xchg
jl
lods
scas
push
sub
les
test
out
mov
insl
mov
inc
cmpsl
and
push
xchg
mov
mov
mov
das
mov
ljmp
enter
inc
mov
push
shl
dec
lahf
fdivl
mov
xor
sub
cmp
loope
pop
or
and
sub
in
inc
shlb
dec
cmp
xchg
mov
add
push
jmp
push
or
call
fidivl
and
push
js
xchg
pop
int3
out
stos
test
xchg
cmp
out
pop
dec
out
cmp
out
add
lret
lahf
sbbl
jecxz
lea
sbb
aam
aas
push
les
xchg
xor
or
xchg
movsb
dec
push
movsb
out
neg
mov
das
scas
mov
pop
and
pop
lods
data16
in
xlat
lods
push
sbb
test
loopne
les
mov
xor
and
mov
xor
lds
shlb
dec
jne
aad
inc
mov
lcall
movsb
xchg
cmpsb
sbb
mov
pop
js
stos
lods
out
jne
fistpll
cmpl
aas
sbbb
lahf
push
fiaddl
dec
movsl
cmc
jmp
mulb
adc
or
jge
and
mov
jmp
rcrl
insb
arpl
sbb
fs
cmp
and
xchg
push
scas
in
jge
das
xor
mov
ds
lret
sbb
popa
cmp
sahf
js
xchg
scas
mov
lock
adc
loope
dec
xor
in
scas
xor
sub
xchg
inc
fsubr
gs
mov
shrb
xchg
in
cmp
jl
jae
adc
add
lret
jb
sbb
in
mov
mov
cmp
or
mov
imul
daa
pop
pop
and
call
aad
pop
aas
pop
test
das
cmp
lret
std
sbb
adc
xchg
xchg
xor
adc
aas
sbb
in
or
fadds
dec
call
mov
out
push
add
fisubs
movsb
fsts
xor
out
mov
jno
xlat
outsl
aaa
int3
push
test
popa
xchg
add
and
dec
jge
enter
push
push
pop
xchg
adc
fisubrl
out
ret
adc
insl
mov
clc
cmp
jnp
adc
inc
pop
clc
hlt
jno
mov
push
pusha
sub
repnz
mov
inc
inc
mov
subl
push
mov
clc
call
fdivrl
xchg
in
push
inc
mov
add
adc
dec
and
decb
fdivrl
jmp
mov
jbe
adc
es
or
and
xchg
insl
inc
add
sti
cmp
mov
das
lret
jns
nop
pop
hlt
lods
push
mov
fildll
fsubs
cmp
out
dec
stc
mov
sub
jbe
jg
cld
pop
leave
sahf
adc
cmp
adc
mov
scas
jae
or
cmp
loope
inc
data16
fimuls
cmp
sub
jbe
sbb
rorl
jns
xor
cwtl
in
rcr
js,pn
scas
enter
sbb
shr
call
insb
lock
xlat
xchg
fldl
test
mov
jmp
repnz
pop
xchg
pop
subb
in
cli
xlat
mov
adc
dec
push
xchg
mov
dec
dec
push
sbb
in
mov
jge
or
icebp
ret
cmp
jg
lahf
xor
mov
out
imul
fcmove
inc
lsl
mov
mov
pop
jg
mov
cltd
movsl
mov
loop
jo
fiaddl
mov
jae
inc
add
ja
mov
xlat
xchg
dec
pop
mov
and
loope
jge
jns
stc
mov
aad
or
lock
es
out
pop
mov
out
jmp
out
es
dec
pop
ds
or
pop
ret
sbb
fbld
cwtl
test
dec
fcmovnb
dec
cmpsb
ja
shlb
in
and
cmpb
test
jnp
daa
dec
xchg
loope
lea
jmp
mov
mov
cmpsb
push
popa
jecxz
mov
lods
mov
lret
es
ror
out
cli
scas
adc
aas
jmp
rcll
adc
or
loop
pop
xchg
repnz
sahf
add
js
jle
cmp
icebp
pop
xor
ss
ljmp
fwait
jp
addr16
fldl
jge
cmpsb
lahf
pop
mov
mov
xor
push
jl
push
inc
icebp
or
dec
stos
outsb
and
cmpsb
dec
imull
pop
out
add
rorl
or
jmp
cmp
addb
test
lcall
sahf
idiv
addr16
jne
addr16
loopne
sub
push
shl
je
stos
out
test
xchg
clc
hlt
loopne
test
xchg
fiaddl
or
lret
rorl
mov
xchg
fdiv
xchg
filds
popf
inc
dec
mov
outsb
mov
loopne
and
rcrl
repz
dec
into
mov
cmp
or
ret
jns
cld
fbld
sti
shrb
test
pop
jge
push
sarl
movsl
mov
outsl
loop
cmc
out
cmp
popf
fdivrs
xchg
nop
cmp
sarw
add
xlat
push
popf
nop
ret
sbb
lret
jb
loopne
dec
fnstcw
xor
xchg
or
or
fwait
xchg
icebp
mov
ja
add
shrb
push
adc
mov
sbb
jb
shl
into
jg
dec
cmp
cmpsb
xchg
sub
lods
lods
lahf
pop
jnp
cwtl
sbb
xchg
add
jge
jl
cwtl
icebp
into
add
jne
jae
push
add
pop
xchg
popf
in
insb
push
jne
rclb
ljmp
outsl
push
jb
cltd
flds
int3
mov
sbb
shll
mulb
insb
mov
cmp
pop
ja
shlb
pop
xor
imul
je
sti
xor
pushf
push
inc
aad
inc
mov
xchg
popa
mov
mov
xchg
lds
setge
sbb
testl
mov
xor
sbb
add
outsb
aaa
jmp
mov
or
sub
xchg
lret
cmp
mov
adc
clc
adc
xor
cli
inc
daa
aaa
inc
sti
mov
imul
negb
jl
int3
add
xor
fs
iret
lahf
mov
sbb
xchg
inc
sbb
push
sub
scas
add
ret
or
push
mov
popf
jecxz
nop
mov
cs
fildll
xorb
adc
xchg
pop
je
dec
adc
xor
dec
sub
std
xchg
mov
cmp
inc
enter
mov
aas
xchg
xor
lds
int3
jbe,pt
xor
in
jecxz
adc
int
in
jne
lahf
pop
and
fimull
test
jb
xchg
repz
jne
xor
inc
jecxz
iret
or
or
roll
out
scas
mov
dec
cmp
pop
repz
pop
cmpl
es
inc
mov
push
sub
loope
add
lret
das
dec
loopne
popa
out
pop
aam
fistl
das
or
and
stos
pop
xchg
sbb
int
clc
in
push
cmp
add
shll
imul
stc
hlt
fwait
jns
incb
cli
mov
repz
or
mov
pop
and
mov
mov
pop
sbb
pusha
xchg
stos
jns
fcmovnbe
push
dec
cmp
mov
mov
jns
xchg
cmpsl
cmp
inc
in
rorl
shl
and
push
push
and
inc
or
jle
sbb
repz
xlat
adc
jg
xchg
mov
test
pop
pop
xchg
cld
ljmp
adcl
insl
jl
ja
jb
mov
mov
scas
mov
loope
and
and
lea
enter
idivb
pop
js
sub
cmc
jmp
jae
mov
jecxz
adc
mov
imul
jg
xchg
pop
jnp
cmpb
mov
adc
or
mov
fidivl
pop
inc
dec
addr16
push
test
mov
or
outsl
insl
lcall
sbb
movsl
sub
jns
and
adc
lock
xchg
xor
mov
mov
gs
fwait
inc
stc
cmpsb
mov
ret
and
xchg
xor
adc
add
mov
mov
cmp
test
pop
std
mov
or
mov
adc
cltd
mov
lcall
push
in
mov
sub
push
out
aaa
lea
adc
jbe
pop
mov
mov
xor
cmp
xor
imul
or
shll
int3
lret
int
cmpsb
repnz
push
fcompl
push
push
push
inc
mov
lea
fwait
and
push
jl
mov
ja
les
sbb
push
mov
dec
sbb
inc
dec
mov
fadds
cmp
sub
dec
sub
mov
xchg
lock
xchg
xchg
pop
sbb
jge
cmpsl
pop
or
xchg
inc
dec
sahf
test
mov
sbb
imul
adc
into
mov
xchg
mov
dec
faddl
xor
clc
inc
mov
rcr
call
pop
shl
push
nop
dec
loope
dec
jo
mov
mov
icebp
xchg
pushf
pop
dec
cwtl
fmull
cs
mov
fidivrs
mov
cmp
fldt
cli
mov
mov
pop
or
enter
jg
cld
test
mov
fadd
mov
outsb
shl
gs
jns
and
mov
aaa
test
fcoms
js
sarb
or
jmp
shr
aas
mov
pusha
and
xchg
les
fstl
jg
and
daa
fcompl
push
bound
cmp
mov
fdivrl
outsl
pop
push
or
cmp
push
bound
dec
sbb
mov
arpl
gs
mov
sahf
xchg
daa
pop
inc
jmp
aaa
inc
mov
adc
shrl
lret
pop
add
pushf
cli
mov
adc
and
fisttpll
lods
push
pop
in
push
out
lcall
jl
jo
loopne
mov
cmp
jg
pop
xor
mov
fcmovne
or
and
dec
out
lret
pop
subl
mov
jl
dec
stos
imul
imul
push
shl
xchg
mov
loop
test
arpl
rorl
mov
fldt
sbb
icebp
pop
cmp
mov
xor
add
inc
mov
inc
gs
pop
loope
gs
sub
xchg
dec
mov
in
sub
roll
adc
daa
loope
in
push
xor
mov
fsubs
xor
aaa
fwait
sbb
sub
xor
xor
int3
mov
and
push
sti
popa
arpl
push
dec
out
dec
adc
loopne
sub
in
lds
outsl
xchg
dec
aad
push
mov
push
push
mov
pop
mov
xor
add
mov
cmp
out
add
mov
stos
inc
push
shrl
test
jle
fldcw
dec
jno
out
inc
mov
stos
mov
icebp
and
pop
sahf
ds
orb
shlb
and
jbe
adc
fs
daa
inc
mov
push
adc
jle
or
dec
test
pop
lods
push
xchg
lahf
inc
daa
lods
pop
xchg
call
push
push
jle
push
inc
adc
xchg
je
adc
mov
data16
lret
leave
adc
cmpb
push
mov
xor
mov
jo
fcmovne
dec
popa
add
adc
push
lods
pop
shlb
or
stos
dec
into
push
mov
notb
ret
push
jbe
xchg
inc
out
jae
dec
push
jbe
xlat
cltd
cmp
in
cmp
lret
sbb
stos
push
arpl
cwtl
pop
sahf
test
in
fs
dec
dec
into
sahf
or
fisubrs
lcall
mov
push
mov
pusha
and
mov
aam
movlps
cmc
pushf
cmpsl
das
xor
cltd
pop
cld
dec
test
adc
sbbl
inc
jo
xchg
adc
lock
cmpsl
aam
sub
cmp
jl
jae
ja
xor
push
xchg
rclb
mov
and
mov
lea
sahf
xchg
adc
add
pusha
adc
pushw
add
mov
add
add
psubusw
idivl
xchg
adc
in
fwait
add
jg
inc
mov
rcl
jg
gs
addr16
popa
push
xor
outsl
jge
pop
mov
cmc
imul
fwait
pop
lea
adc
icebp
inc
xlat
stc
sbb
and
fsubl
mov
incb
or
sub
into
fldenv
and
out
hlt
jo
sarl
test
mov
sub
push
cs
sub
mov
cwtl
leave
xchg
into
es
mov
jo
or
sub
sbb
cli
xchg
out
pop
and
in
sbb
stos
sub
lods
dec
pusha
movsb
pop
push
mov
in
loopne
push
mov
pop
cmpsl
push
jne
xchg
ja
sbb
xchg
js
decb
mov
scas
sbb
inc
out
cs
stos
cmpsl
add
inc
rorb
mov
jb
movsb
lcall
aaa
int3
or
es
cld
test
inc
xor
push
jmp
dec
sub
mov
test
loop
ret
fadds
aad
sti
ficoml
and
mov
jle
xchg
sbb
or
jb
xchg
xor
push
sub
test
xor
into
pop
xor
xor
sub
mov
aam
and
fcomp
sti
test
xlat
adc
jl
mov
les
sbb
and
xor
add
mov
in
and
adc
fstpt
pop
ljmp
mov
jb
iret
jae
jb
in
in
dec
jg
into
add
popf
dec
rcrl
data16
rcl
ficompl
push
pop
push
jno
fists
mov
dec
add
push
fs
mov
lods
daa
mov
cmpsl
imul
stos
sbb
mov
push
movsl
xchg
cmp
sub
pusha
xchg
inc
dec
mov
cmp
pushf
sahf
xor
rep
mov
or
shlb
lret
pop
shll
inc
adc
in
lcall
rcll
pop
test
xchg
cs
and
mov
je
je
pop
repz
or
jecxz
shr
xchg
loop
ret
js
test
aam
push
mov
dec
jge
rorb
scas
xor
cld
xchg
push
pop
jnp
push
jb
xor
es
enter
fisttpl
cltd
xor
imul
mov
scas
pop
push
xchg
or
iret
mov
pop
jmp
xlat
adc
dec
imull
mov
movsl
enter
jecxz
sbb
push
jnp
lods
lods
jnp
xlat
pop
cs
jle
sbb
fxch
adc
sub
les
or
xchg
fs
gs
or
pop
sar
add
inc
test
lock
sub
jo
jno
xchg
fstpl
mov
or
adc
scas
insl
pop
sbb
inc
pop
daa
jne
jb
pushf
pop
jle
mov
ficoml
scas
movsb
lea
fdivs
pop
sahf
repz
aad
lret
jb
sbbb
sbb
daa
ja
mov
pop
mov
mov
rcrb
mov
int3
jo
xor
std
int3
dec
sub
xchg
mov
lret
mov
mov
imul
fisubrl
pop
or
lea
inc
not
sub
dec
xor
loopne
subb
out
out
push
dec
xchg
repnz
or
jle
xor
insb
sub
sub
cmp
inc
lods
addb
es
loope
subb
cmpsl
xor
jae
push
mov
or
or
mov
cmp
dec
sbb
iret
xchg
mov
pop
pop
popa
inc
enter
lret
iret
jnp
sub
mov
add
andb
push
out
jne
cwtl
xchg
xchg
or
mov
arpl
cmp
sub
cmp
shlb
mov
cwtl
sub
mov
addr16
mov
popa
mov
sbbl
adc
xor
jmp
sbb
jns
mov
dec
pop
ficompl
ret
or
and
cmp
les
out
xchg
enter
popa
repz
out
pop
push
ss
mov
jno
xor
xchg
scas
fidivs
dec
add
mov
fwait
sbb
push
mov
jae
inc
cmpb
jbe
cmpsl
cmc
push
or
xor
aam
jl
lcall
add
jmp
data16
inc
push
adc
mov
ljmp
pop
mov
fiadds
es
movsl
pop
xchg
jo
mov
push
or
aas
shlb
repnz
cli
das
aam
lods
mov
shl
and
ds
mov
aam
sub
push
mov
std
xchg
iret
mov
xchg
jp
jae
adc
lret
adc
pop
mov
lahf
adc
iret
cwtl
in
dec
jne
mov
js
scas
sub
xor
cmpsb
rcrb
adc
out
cwtl
fs
mov
js
sti
mov
inc
pop
stos
divl
movsl
aam
std
dec
lret
nop
mov
mov
push
bswap
lods
imul
push
ret
rclb
cs
sub
mov
jmp
dec
test
loop
pop
lock
adc
dec
testl
dec
insb
sahf
cs
ds
dec
sbb
jnp
mov
pop
mov
xchg
mov
or
movsb
adc
rorb
adc
lahf
fidivrs
ja
fcompl
mov
int
jb
repnz
push
shlb
addr16
push
outsb
out
in
xchg
xchg
lret
in
daa
arpl
sub
mov
push
je
fsub
sub
cmp
imul
loop
call
push
jae
popa
mov
dec
hlt
and
lock
jbe
fisubs
add
pop
mov
cmp
jle
xlat
lods
and
ds
cltd
hlt
mov
pop
sbb
sarb
clc
mov
mov
movsl
jecxz
jge
test
xorl
shrb
sub
rcr
jae
int
mov
subl
out
jle
inc
clc
mov
inc
jne
sub
ja
rorl
adc
aad
xchg
mov
addl
hlt
insb
decb
psubb
xor
das
fcomp
xor
sbb
and
pop
or
mov
icebp
add
fisubrl
mov
rcll
imul
clc
daa
mov
dec
scas
out
jmp
test
jns
lret
fcompl
pop
xchg
jmp
sbb
mov
je,pt
fldt
push
adc
xor
push
pop
daa
dec
inc
mov
cwtl
dec
clc
sahf
adc
inc
popf
inc
fs
xchg
ret
xchg
cld
cld
mov
sub
push
mov
xor
add
dec
jno
mov
test
addr16
xchg
js
inc
mov
stos
cmp
cltd
out
fs
and
and
pop
mov
jnp
add
iret
lock
add
imul
pop
or
and
xchg
fwait
and
mov
inc
decl
cmp
adc
stos
stos
mov
xchg
sbb
push
arpl
icebp
sbb
mov
cmpsl
mov
inc
and
or
fisubs
mov
ds
in
or
mov
aam
pop
jne
inc
dec
out
aad
and
xor
mov
ss
bound
xchg
lock
in
mov
iret
inc
and
adc
mov
movsl
fs
fsubl
ja
xor
inc
outsb
mov
jae
lret
js
push
xchg
mov
mov
dec
int3
xor
lret
sbb
and
adc
adc
dec
xchg
sbb
jge
add
push
and
pushf
mov
ds
imul
psubusb
add
mov
data16
std
enter
push
ret
adc
sub
ja
cli
test
mov
push
subb
mov
xor
and
push
fldcw
mov
adc
fisttpl
pop
call
fildl
push
mov
test
arpl
fisubrl
in
push
mov
dec
mov
cli
mov
stos
mov
and
cmp
mov
push
inc
mov
es
push
ret
jg
sub
stos
mov
mov
inc
mov
test
xchg
mov
push
jl
inc
and
sub
inc
test
push
xor
sub
inc
push
fidivl
mov
cltd
or
nop
or
and
aad
lea
xor
push
dec
fcoml
rclb
in
stos
sbb
xor
ss
add
mov
shrb
adc
pop
push
push
pop
mov
stos
jno
jmp
xchg
ja
adc
adc
sbb
pop
cwtl
sbb
mov
mov
or
test
test
aam
inc
cmp
dec
out
or
jg
inc
sarl
push
in
inc
cmpl
leave
adc
jno
inc
or
mov
arpl
scas
xchg
nop
adc
scas
pop
movsb
mov
fiadds
inc
fidivl
outsb
in
adc
in
cmp
test
jno
adc
jne
fimull
mov
xlat
sub
add
inc
imul
add
orb
jmp
adc
sub
push
or
cmc
icebp
xor
repnz
mov
add
or
inc
jns
xor
ret
sbb
add
pop
jnp
jno
mov
xor
xchg
dec
ja
jmp
addr16
in
sahf
and
cli
movsl
or
mov
es
inc
xchg
leave
sub
gs
add
cmp
cmp
data16
xchg
pop
or
ja
stos
or
js
imul
scas
repnz
aam
pop
icebp
pusha
push
subl
mov
mov
scas
bound
sbb
cmp
xchg
test
adc
jmp
sub
jecxz
dec
mov
ficoml
jmp
pop
test
xchg
ds
push
sahf
add
cmp
xlat
jo
xor
stos
insl
imul
or
fdivr
arpl
mov
xchg
push
fcoms
jmp
daa
subl
or
cli
ja
aaa
ss
mov
cmp
popa
fstl
inc
je
movsb
mov
sbbb
push
mov
adc
into
daa
out
sbb
cmp
rclb
loopne
test
aaa
jbe
sbb
pop
dec
clc
xor
or
cld
push
imul
test
rorl
xchg
sub
cs
in
adc
test
xor
xlat
std
or
lret
sub
adcb
sub
dec
dec
or
fnsave
repnz
fldenv
fs
pop
nop
test
inc
or
push
sub
jno
push
movl
cmp
xor
inc
pop
xchg
int
pop
sub
jne
jnp
out
ror
and
leave
push
stc
mov
stos
hlt
inc
call
and
or
insl
push
mov
imul
pop
sbb
cld
outsl
adc
cmc
shll
pusha
lcall
aad
fsubl
fimuls
pop
pop
ret
fnstcw
sbb
dec
push
enter
loopne
cltd
je
or
xchg
sbb
add
inc
push
ja
mov
insl
adc
jmp
adc
pop
cmpsl
subl
push
mov
lods
clc
push
push
int3
lods
imul
std
sub
iret
xor
mov
dec
xchg
jae
sub
adc
adc
stc
ljmp
in
into
mov
jne
and
aas
hlt
xor
push
jbe
or
or
jno
add
mov
pop
dec
sub
cld
and
notb
in
fiaddl
mov
pop
dec
dec
sahf
push
lods
jg
fistpll
dec
mov
dec
mov
mov
fadds
jbe
xchg
jl
jns
in
mov
jg
mov
pop
sbb
lock
imul
xchg
xchg
xchg
inc
lcall
inc
xchg
rorb
sahf
inc
out
cmp
xchg
cmp
cmp
push
sbb
ja
adc
inc
mov
in
aad
mov
sbb
imul
sub
mov
mov
icebp
ja
cmp
or
adc
scas
jns
xchg
push
adc
mov
add
sub
dec
rol
aam
pushf
int
sub
and
add
cmpsb
jno
mov
fadds
or
dec
sub
hlt
test
popf
adc
or
je
out
pop
sub
pop
test
cmp
dec
lret
lea
push
jmp
stos
ds
add
rorb
mulb
dec
jg
inc
enter
inc
pop
or
mov
dec
out
jmp
lret
pop
sbb
imul
add
push
adc
fldenv
sbb
stos
insb
cmpsb
addr16
adc
movq
dec
pop
movl
fmuls
push
pop
lds
inc
das
dec
mov
mov
imull
sbb
sbb
dec
nop
mov
scas
jo
xchg
pushf
mov
push
fs
insb
fisttps
lret
mov
inc
cld
rcrl
sbb
jge
das
jge
adc
push
mov
insl
mov
sbb
push
mov
mov
push
or
rol
adc
mov
lods
fst
sub
gs
pop
inc
hlt
mov
int3
xor
xor
mov
push
mov
insb
sbb
lods
insb
ret
nop
pop
loope
daa
sub
arpl
dec
aaa
and
imul
xorb
sub
mov
rorl
push
lcall
push
das
fimuls
dec
push
insl
or
std
loop
xor
stos
add
mov
and
mov
rol
and
mov
dec
nop
dec
stos
xchg
mov
in
dec
jmp
sub
out
call
addr16
mov
stc
inc
mov
outsl
mov
lea
ret
movaps
daa
lods
mov
std
adc
pop
sub
jge
stos
xor
xchg
mov
mov
jns
scas
orb
popa
and
iret
lods
xor
mov
fisttpll
jae
addr16
sub
cmp
into
sbb
push
es
loopne
dec
pop
push
sbb
sub
mov
or
sub
shlb
lret
cwtl
movsl
inc
pop
mov
lret
stos
jnp
and
mov
inc
ret
adc
mov
inc
ljmp
fdivrl
lahf
aam
in
ret
ret
push
lret
jns
push
adc
lcall
mov
fs
push
xchg
lds
test
dec
rcrl
test
mov
or
insb
mov
fprem
sub
jae
sbb
pusha
pop
dec
mov
push
inc
popf
xlat
lds
xor
xchg
adc
cmp
adc
cs
arpl
sbb
fnstcw
ret
in
push
in
jno
test
xchg
mov
in
add
sbb
jns
in
adc
push
sub
faddl
mov
jecxz
mov
and
jno
dec
and
cltd
mov
adc
loope
outsl
aas
adc
lods
and
pop
mov
inc
cmp
cltd
loope
sbb
inc
jno
add
push
scas
out
das
shll
pop
cmp
cmp
sbb
cmp
pop
adc
in
push
and
bound
mov
jnp
cmpsl
push
inc
ret
out
xor
ds
xlat
sbb
test
and
pop
lahf
push
adc
push
sbb
xchg
andb
mov
sbb
shlb
cmp
cmpb
adc
mov
fbstp
adc
push
ficoms
ret
mov
adc
fmuls
xchg
rcrb
xor
loope
fimuls
add
dec
add
sbb
mov
pushf
cmpsb
push
aam
ljmp
xor
or
mov
outsb
fistpl
inc
loopne
out
push
gs
xchg
mov
stos
cmp
jge
in
das
mov
gs
xchg
jbe
lea
std
loopne
ret
test
sub
sub
mov
imul
icebp
iret
jg
add
jge
mov
inc
int3
jp
pop
inc
dec
adc
jnp
mov
xor
cmp
inc
pop
enter
mov
cltd
lods
mov
jg
shll
pop
pop
push
repnz
je
fsubp
call
mov
mov
dec
jae
mov
adc
xchg
out
lea
int3
aam
cmpsb
fbstp
lret
leave
mov
jne
jae
lods
insl
cmp
push
jecxz
test
mov
movsb
adc
mov
in
cmpsl
iret
add
xchg
adc
mov
mov
rcll
out
mov
or
mov
test
push
outsb
addl
sub
jns
dec
scas
add
lret
loopne
shrl
cmp
inc
sbb
jne
inc
push
addr16
dec
test
xchg
xchg
dec
or
sub
fs
ljmp
pop
sbb
test
pop
test
xchg
add
sbbb
add
sub
fnstsw
movsb
and
call
in
mov
loop
pop
rcrb
pop
fisubs
mov
sbbb
sub
cmp
fsubl
neg
rorb
mov
fstpl
mov
xor
xor
jo
lret
subl
mov
and
adc
mov
lods
jp
imulb
push
push
xchg
xor
mov
xchg
mov
mov
es
xchg
pop
das
hlt
push
inc
or
push
out
inc
mov
xchg
add
or
test
insb
in
cmp
clc
mov
push
or
add
aaa
popf
mov
mov
sub
xchg
enter
xchg
dec
mov
xchg
sbb
insl
inc
xchg
ret
add
mov
rclb
xchg
pop
sbb
out
clc
xor
inc
and
aam
xor
ljmp
push
test
sub
lods
sbb
mov
add
dec
xor
dec
fstps
pop
mov
pop
subb
shlb
mov
xor
cmp
outsb
roll
lds
stos
popa
jb
adc
repz
cmp
dec
sarb
cmpl
jge
cmp
insb
scas
testb
push
aaa
fdivrs
sbb
xor
scas
aam
add
es
out
mov
fnsave
and
mov
rcrb
jecxz
scas
mov
xchg
or
idivb
cmp
adc
mov
rcrb
inc
sarb
push
das
out
insb
mov
aam
movsb
mov
imul
scas
and
out
dec
mov
sbb
sub
out
cmp
xchg
pop
insl
inc
aad
or
arpl
test
jl
lret
mov
in
movsb
addr16
jno
int3
movsb
mov
and
push
sti
jg
mov
xchg
sbb
lock
xor
jge
fcomps
dec
addr16
repnz
sbb
fldenv
pop
sahf
out
jecxz
or
or
mov
jp
mov
imul
xorl
add
push
add
cmp
jg
mov
call
and
lcall
ja
in
jle
inc
shl
inc
mov
cmp
fadds
mov
mov
jecxz
add
outsl
inc
push
loope
xchg
repz
jl
mov
fxch
outsl
inc
imul
hlt
dec
pop
cmpsb
fcoms
push
mov
pop
fsubs
iret
lds
push
and
les
call
out
cmp
rcrl
fdivs
sbb
ljmp
int
fsub
dec
add
pop
pushf
mov
fisubrs
sub
mov
push
cs
test
push
inc
inc
int3
jbe
push
pop
sbb
pop
decl
jae
mov
xorl
mov
cs
cmp
lds
add
loop
push
inc
pusha
insb
jp
mov
mov
incl
fstpl
cmp
mov
mov
jns
in
lret
mov
mov
inc
push
jp
push
int
xchg
adc
loopne
imul
cli
leave
repnz
add
fs
push
dec
loop
fadds
icebp
xlat
movsb
xchg
divb
test
iret
pop
in
fnstsw
push
jg
sbb
jecxz
aad
sbb
sbb
std
push
das
jle
minps
mov
repnz
add
mov
pop
or
xor
push
adc
mov
cld
xlat
rep
shrd
mov
fidivs
and
ficoms
call
addr16
mov
or
outsb
ja
mov
mov
imul
lods
and
fs
add
pop
in
jns
popf
pop
enter
sbb
mov
into
add
jae
add
mov
xchg
fst
and
pop
push
inc
bound
movsb
xlat
test
push
sar
push
in
shl
rolb
jne
shr
or
aas
mov
daa
pop
lahf
ret
sahf
mov
pop
lcall
inc
dec
dec
cmp
pop
dec
jp
xchg
scas
les
or
mov
mov
repz
fistl
mov
add
lea
sub
inc
sub
into
shl
add
ja
cmp
jmp
subl
aam
call
push
xor
test
sbb
push
out
leave
lret
imul
stos
jnp
xchg
imul
lock
insl
xor
jp
imul
arpl
sahf
cli
subb
fnsave
in
lods
jg
in
call
in
xchg
or
add
rorl
enter
pop
jb
sub
es
shll
cli
cwtl
push
in
sub
cmp
and
pop
int3
incb
xchg
cwtl
in
lcall
addr16
lods
rcll
add
dec
jbe
ljmp
roll
sbb
repnz
jb
xchg
imul
jnp
or
sbb
mov
adc
jp
sub
fwait
pop
ret
mov
jl
xor
inc
xor
mov
sti
dec
xor
dec
and
push
lcall
xor
sbb
mov
cmp
divb
and
mov
aam
fiadds
add
test
fsubs
xor
mov
jl
cmp
jb
dec
addr16
test
lret
mov
js
movsl
lods
je
push
int
add
addr16
shr
addr16
adc
enter
loope
call
sub
add
in
fidivs
fisttpll
mov
dec
mov
inc
inc
push
cwtl
pop
adc
bound
mov
ds
data16
movsb
cmp
pop
mov
aaa
xchg
jl
es
or
scas
je
outsl
out
dec
clc
flds
add
add
mov
movsb
push
out
sub
xor
stc
pop
out
subb
mov
cwtl
out
int
adc
xchg
lea
mov
inc
or
cmp
loopne
sbb
adc
jae
scas
mov
mov
addr16
daa
sahf
scas
push
xor
push
jecxz
inc
adc
fiadds
sub
call
inc
inc
clc
pusha
adc
aad
addr16
shlb
mov
dec
mov
mov
xchg
jmp
sbb
lds
jne
jg
aad
xchg
outsb
imul
push
mov
jbe
cld
out
pushf
jge
jno
insl
into
xor
hlt
lds
popa
adc
pop
inc
cmp
push
add
mov
dec
std
xor
loope
adc
imul
ja
outsb
jmp
shll
xchg
bswap
inc
dec
stos
fldenv
hlt
mov
mov
pop
xchg
dec
pop
dec
push
call
inc
les
push
mov
xchg
repnz
sbb
in
xchg
mov
mov
dec
mov
dec
fs
lods
pop
mov
pop
push
push
push
shll
out
ljmp
push
pop
lcall
push
pop
push
inc
iret
sub
adc
jo
ds
cmpsb
negl
pop
cli
cld
cmp
pop
dec
inc
std
xchg
aad
mov
add
out
fwait
lret
rsm
divl
loopne
mov
cmp
dec
cs
add
or
cmp
or
and
or
fwait
xchg
loop
sbb
mov
repz
adc
in
repz
lea
pop
jp
or
adc
ret
arpl
lret
pusha
add
bound
push
test
xor
enter
insl
sub
mov
rorl
rorb
cmpsb
xor
xlat
xchg
out
jns
push
imul
jl
push
mov
xor
push
cld
add
pop
loope
jno
adc
clc
cmpb
dec
in
lret
in
pop
out
inc
nop
cli
shlb
popf
lock
dec
ret
mov
dec
push
push
dec
pop
in
addr16
xchg
aam
inc
andb
scas
mov
sub
adc
fsub
mov
lods
inc
push
icebp
cmpsb
aad
jne
pushf
xor
into
inc
popa
pop
inc
add
ss
adc
cmp
push
ret
inc
mov
sbb
cmp
outsl
nop
sbb
xor
push
subl
pop
in
stos
mov
loopne
pop
je
xor
cmpsb
mov
aad
pop
or
sarl
ficoms
inc
clc
fdivrs
out
es
popf
xchg
adc
daa
mov
and
dec
cli
xor
mov
aas
pop
shl
jbe
sub
or
inc
int
sub
adc
lea
mov
inc
xchg
pusha
test
lock
lahf
xchg
inc
pop
cld
ljmp
fstps
xor
mov
pop
sar
bound
hlt
inc
mov
sbb
mov
int3
cmp
cmp
sbb
std
fdivrl
xchg
test
sarb
jns
aaa
lcall
cld
scas
push
fsubp
pop
adc
cmpsb
out
iret
pop
out
cs
lods
ficoml
push
std
xchg
mov
cmpsb
xor
xchg
mov
cmpl
mov
aad
js
pop
jnp
and
xchg
adc
movsl
cli
inc
pop
dec
test
adc
cwtl
mov
mov
sub
aas
cmp
jnp
and
inc
jno
push
jns
data16
xchg
sub
mov
add
jmp
cmpsb
loope
movsb
push
lcall
add
int
or
repz
inc
roll
add
jecxz
xchg
fwait
sub
arpl
inc
les
leave
sbb
or
int
xchg
in
jne
sar
push
sbb
or
push
ss
fcompl
roll
xor
cmp
push
hlt
in
enter
pop
jp
into
cld
xor
stos
push
test
aaa
pop
push
in
sbb
cltd
add
fisttpl
negl
aas
test
popa
mov
pop
xorl
clc
ja
and
cmp
add
dec
or
insb
in
stc
xchg
stos
dec
pop
jecxz
push
pusha
mov
roll
ja
fsubrs
mov
ret
dec
xlat
scas
dec
mov
cmpsl
add
and
dec
mov
adc
insl
add
in
mov
add
jg
inc
clc
lods
adc
outsl
cmpsb
pop
push
dec
sbb
jb
mov
popf
mov
loop
sbb
arpl
mov
jge
fiadds
mov
sahf
mov
call
lahf
scas
fwait
mov
inc
push
lock
lds
mov
push
inc
xchg
imul
jnp
adc
sarl
jecxz
xor
into
movsl
sbb
call
jge
in
mov
push
je
syscall
into
aas
in
movsb
xchg
inc
cmpb
cmp
nop
or
loop
popf
xor
or
leave
arpl
sub
enter
add
xchg
gs
stc
push
in
loopne
cltd
jns
jae
add
js
xchg
jecxz
repnz
arpl
dec
nop
pop
pop
mov
ss
fistps
stc
test
lahf
mov
push
push
loop
loopne
into
arpl
cmp
adc
imul
repz
xor
int3
ds
sbb
cmp
data16
pop
mov
mov
movq
inc
sbbb
int3
add
jno
or
cmp
pusha
mov
idivb
mov
out
mov
lock
ss
iret
out
add
xor
rolb
pop
cmp
out
lods
pop
xor
popa
mov
into
cli
je
sbb
xor
pushl
or
faddl
sub
sub
pop
out
fs
jg
outsb
in
fprem1
in
aas
cmpsb
inc
push
xor
in
sub
nop
xchg
mov
inc
dec
cmp
adc
push
lcall
ret
sti
fcomip
xchg
test
sti
mov
out
adc
add
add
push
rcrl
insb
pop
jne
mov
push
sub
stc
faddl
jne
cmp
jnp
ja
and
mov
push
sub
pop
mov
into
stos
fidivrl
jp
cmp
mov
xlat
jg
pop
lds
dec
outsb
jns
xlat
sahf
mov
cmpsl
xchg
push
jae
cmpsb
call
pop
insl
lret
test
cwtl
sbb
fists
ss
add
inc
jle
pop
cltd
mov
stos
pop
push
popa
hlt
stos
stos
push
in
loop
xor
push
rcrb
insb
or
clc
or
mov
rorl
jg
cmp
sub
mov
mov
xor
bound
xchg
xchg
insl
inc
cltd
xchg
cmp
push
iret
test
jg
cli
hlt
fimuls
fsubs
loope
add
loopne
notl
pop
sub
mov
xor
scas
and
shrl
rorl
cmp
orb
mov
out
out
rsqrtps
sub
call
sbb
pop
testl
test
mov
and
adc
pop
pop
push
push
fst
mov
in
xchg
popa
add
lret
fldl
xchg
lods
add
jno
sub
push
fdivrs
loopne
inc
lcall
sub
test
fsubrs
jnp
cmpsb
cmp
repz
xor
or
divl
imul
jbe
adc
adc
mul
mov
jno
loopne
push
aad
das
rolb
mov
roll
mov
sbb
push
dec
mov
in
xchg
into
addl
lods
repnz
or
rolb
sub
bound
sbb
sub
jnp
jl
pop
cwtl
pop
mov
in
dec
cmc
outsl
loop
push
and
push
cli
int
jp
lods
js
mov
or
xchg
mov
sbb
incl
es
adc
stos
ret
push
std
cmp
pop
pop
ret
repz
loope
scas
shld
pushf
int
push
pop
jo
push
dec
call
mov
push
movsb
and
xchg
js
insl
lods
ds
sbb
mov
cwtl
movsb
inc
in
push
daa
sbb
xchg
ret
adcb
outsl
fistps
scas
or
push
bndstx
stos
jns
sbb
mov
mov
inc
xchg
fldcw
test
pop
adc
aad
lcall
pop
test
test
add
cwtl
pop
std
mov
out
push
mov
fyl2xp1
cmpsb
pop
adc
dec
je
sub
pop
cmp
mov
test
sbb
lods
lcall
xchg
insb
fidivrl
ret
add
lahf
insl
add
xchg
stos
rorl
loopne
mov
cmc
mov
js
je
or
xor
shlb
cmpsb
arpl
rcl
inc
mov
outsl
push
sub
rcl
clc
rep
mov
cltd
rol
mov
jno
push
fldl
push
mov
ljmp
test
mov
cmp
jge
cli
xlat
and
lds
sbb
rolb
push
in
shl
mov
pop
clc
test
sbb
pop
addr16
dec
xor
in
pop
mov
and
jg
pop
jg
mov
cmpsb
cmp
mov
push
xchg
loop
pop
cmpsb
push
insl
daa
ret
mov
out
mov
adc
lahf
push
mov
outsl
aas
mov
pop
in
and
jmp
lock
mov
xchg
loop
dec
mov
iret
mov
push
push
stos
in
ds
int
pop
xor
jp
add
and
sti
loop
mov
popf
daa
outsb
sbb
inc
in
ret
aam
and
jo
int3
inc
sub
shll
and
dec
adc
xor
jnp
shll
stos
push
insl
dec
and
xchg
imul
cmpsb
cld
fnstsw
test
mov
repz
sub
add
lret
xor
arpl
cli
test
arpl
push
arpl
inc
mov
fnstenv
cmp
push
outsl
jb
out
push
cmpsb
pop
mov
dec
pop
or
add
stos
pop
inc
stc
xchg
lock
icebp
dec
outsl
xor
sbb
adcb
and
addr16
dec
pop
cmpsb
xchg
add
mov
gs
sub
push
mov
mov
and
cmp
xor
shrl
push
mov
test
ss
insl
arpl
mov
shll
and
cld
jp
std
test
dec
xor
mov
sbb
imull
insl
and
daa
sbb
roll
cmp
jecxz
mov
or
testl
nop
es
pop
jecxz
add
es
in
sti
mov
adc
jg
fidivrs
fucomip
and
aad
shlb
mov
add
dec
mov
je
repz
jmp
cmc
mov
into
out
stos
das
mov
addr16
jle
mov
sbb
and
fidivrl
rcr
dec
jno
jae
pushf
jbe
mov
lods
call
adc
mov
lret
jl
xchg
mov
aaa
jo
or
pusha
add
jns
les
outsl
pop
inc
aad
xchg
mov
clc
lods
mov
fisttpll
scas
pop
pushf
cmpsl
pusha
andl
adc
xchg
pop
sub
mov
jg
adc
xchg
mov
daa
jg
pop
pop
sbb
arpl
inc
arpl
and
mov
add
shlb
xor
outsl
mov
in
repz
lea
or
pop
sbb
sbb
cmpsl
pop
into
cpuid
daa
cmpsl
js
dec
aaa
leave
std
lahf
lahf
sbb
cmc
xchg
lock
test
pop
mov
incb
cmpsl
je
fisubl
lret
fs
and
repnz
cmp
loope
aad
imul
mov
lock
mov
stos
loopne
sbb
sub
jo
push
sbb
mov
lock
cmpsl
in
add
ss
shrl
lock
mov
ret
sub
push
ret
rcr
out
ss
je
cmp
lods
iret
inc
movsl
cs
rol
mov
or
xchg
lret
shll
mov
cmpsb
cmpsb
in
outsl
cli
das
cmp
fcomps
push
andl
and
cmp
enter
cmp
movl
adc
jle
push
icebp
insb
int3
jns
ficomps
pusha
mov
push
repnz
aam
stos
fdivp
fsts
mov
push
mov
add
sub
and
int3
fistps
lret
data16
inc
adc
in
in
int3
insl
add
popf
mov
sysexit
or
push
pushf
gs
js
in
jnp
cmpsl
jnp
sbb
sub
test
iret
les
push
push
or
lods
jecxz
into
push
jbe
mov
loop
aaa
dec
enter
shr
push
fcomps
push
dec
nop
dec
mov
inc
inc
out
int3
loope
or
pop
aad
mov
ss
push
insb
dec
dec
lods
enter
ss
jl
cmpsb
mov
xchg
mov
xchg
cmp
decl
sbb
in
ds
inc
jnp
xor
shrl
loope
aas
stos
adc
imul
movsl
mov
mov
xor
dec
push
mov
lret
push
or
fs
xor
cmp
add
dec
mov
icebp
gs
lock
mov
xor
or
lret
loope
aaa
pop
sub
jecxz
jo
mov
rcll
push
pop
rcl
push
mov
sbb
cmp
jl
xor
aad
pushf
and
push
stos
xchg
out
repnz
jmp
gs
shl
in
addr16
inc
stc
stos
mov
mov
ret
push
or
iret
gs
lods
add
daa
add
inc
mov
lods
pushf
lods
lret
inc
cmp
loop
mov
sub
pusha
mov
fcmovbe
movsl
sbb
push
insl
inc
jae
xchg
inc
push
shr
es
xchg
jbe
sti
pop
loopne
lds
dec
es
ljmp
sbb
mov
les
sbb
je
out
add
adc
xchg
sub
scas
cmc
dec
xor
sbb
mov
stos
adc
loopne
movsl
fildl
mov
pop
fcmovb
fmull
mov
aam
imul
push
push
xchg
lret
mov
repz
int
bnd
push
mov
dec
sbb
mov
push
inc
xchg
or
rep
int
jae
sbb
cmpsb
lret
mov
or
cmpsb
lds
cmpsb
rclb
cmp
mov
mov
std
adc
pop
adc
es
inc
dec
xor
bnd
add
nop
call
repz
xor
mov
sbb
mov
cmpsb
stos
ljmp
fildl
imul
and
ljmp
xor
cmp
jnp
inc
stc
push
movsb
leave
sub
mov
rclb
pushf
mov
fndisi(8087
mov
pop
js
js
jmp
add
and
sahf
outsb
std
sbb
insb
pop
jnp
lcall
sbb
lahf
testb
mov
add
xlat
sbb
inc
jne
xor
mov
push
xchg
push
cwtl
mov
jg
ret
adc
jae
out
mov
aam
stos
bnd
repz
pop
xchg
sbbb
sbb
sbb
call
xor
mov
xor
clc
popf
dec
mov
sbb
adc
and
and
inc
pop
push
icebp
imul
sub
lods
mov
mov
cmc
ret
adc
xchg
daa
mov
stos
push
pop
pop
inc
ss
xor
inc
ja
inc
adc
ja
sarb
ret
jnp
in
jne
xchg
fcmovnbe
roll
sbb
stc
push
xchg
mov
xchg
insl
testb
data16
gs
cmp
arpl
pop
andl
cld
test
cmpsl
sbb
jge
movsl
in
shl
nop
sbb
insb
sti
mov
inc
insl
aas
lods
hlt
jnp
mov
add
dec
or
dec
pusha
mov
push
or
in
nop
pop
push
mov
pop
cmp
inc
push
cld
cli
inc
negb
in
int
into
mov
in
pop
fsub
xchg
inc
ror
add
into
loope
arpl
ds
jo
adc
and
out
and
imul
ds
add
dec
and
jae
js
sbb
out
lds
dec
flds
insl
fldenv
adc
out
in
inc
jo
ret
fcmovu
mov
ljmp
rcl
mov
push
loopne
push
jb
dec
and
mov
lds
lahf
daa
aaa
scas
test
insl
jno
push
ret
pop
xchg
sti
js
mov
repnz
fcmovnbe
mull
xchg
mov
scas
lea
outsl
notb
fisttps
add
mov
imul
movsl
arpl
mov
or
fidivrs
punpcklbw
pop
dec
fistpl
push
hlt
insb
pop
jl
or
xor
adc
pop
fimuls
into
mov
call
xor
adc
pop
add
mov
fcoms
mov
inc
cmp
inc
lret
adc
and
xor
sbb
bound
dec
mov
sub
cmc
or
mov
jl
inc
push
in
add
subl
icebp
mov
jb
sbb
xchg
aam
xchg
cs
scas
mov
fwait
xor
xchg
jp
jecxz
pushf
stc
cmp
jge
popa
jmp
sub
inc
jbe
flds
xor
push
test
sub
in
repnz
aas
sub
mov
pusha
jmp
xor
lret
loope
std
mov
hlt
cmpsb
out
stos
bound
call
out
arpl
mov
mov
or
stos
pop
loopne
inc
popf
leave
out
insb
insl
pop
inc
les
jp
xor
adc
xlat
mov
dec
loopne
ret
cld
adc
mov
call
iret
mov
mov
enter
ret
ja,pt
jb
outsb
dec
not
inc
aaa
scas
rolb
mov
imul
insb
inc
loope
cmp
jl
imul
lock
aaa
or
mov
xor
dec
bound
dec
xor
mov
dec
add
mov
aas
aas
or
xor
mov
rolb
cmp
ds
sbb
dec
call
rolb
xchg
dec
mov
push
dec
push
cmpl
inc
fbld
sbb
insl
stc
fsubr
leave
inc
sbbb
loop
mov
aas
jne
hlt
lods
popf
aas
out
add
lret
loopne
mov
loopne
jl
fstp
fwait
setae
add
jbe
pop
sub
in
lret
mov
sub
imul
sbb
or
outsb
cltd
sti
xorl
hlt
push
aad
test
sub
ljmp
mov
aas
lods
push
fistl
mov
mull
add
dec
rorl
or
fsubl
movsl
push
inc
neg
jecxz
lds
mov
or
roll
stos
and
jb
push
xchg
cmpsl
push
lret
push
jns
inc
ss
aas
outsl
push
pop
je
lahf
aas
mov
enter
sbbb
outsl
and
push
ret
sub
adc
sbb
mov
mov
mov
dec
das
xor
push
jbe
push
lock
jmp
sub
push
dec
in
pop
pop
aas
jp
push
lods
inc
adc
mov
das
mov
cmp
add
mov
or
out
fmuls
movsb
iret
inc
fsubrs
xchg
fwait
pop
jmp
adc
lret
push
scas
hlt
mov
adc
pop
ficomps
dec
outsb
fs
sbb
stos
test
inc
into
mov
jg
cli
lret
hlt
mov
xor
jb
shl
adc
mov
pop
shrl
and
sbb
dec
insl
mov
sub
in
sbb
adc
stc
sbb
shl
cli
arpl
fprem1
je
int
sbb
cmp
xchg
jb
clc
xchg
cmpsl
inc
sti
lcall
scas
mov
add
aam
mov
cld
cmp
jmp
es
push
outsl
shll
hlt
add
cmp
inc
sahf
loope
dec
mov
rcrl
ljmp
sub
inc
mov
inc
cmpsb
mov
jp
in
xchg
and
clc
ret
sbb
push
jle
lock
adc
inc
add
cmpsb
test
fmul
pop
dec
dec
jns
repnz
and
jmp
dec
mov
aam
adc
push
jno
test
outsl
mov
mov
bound
and
add
push
arpl
inc
add
jnp
jmp
int
inc
mov
sbb
insb
shll
paddq
pop
dec
insb
jle
in
pop
leave
dec
repnz
cmpsb
adc
test
lret
xlat
push
lcall
lcall
lock
push
jge
pop
cli
mov
push
xchg
inc
pop
popa
push
xchg
dec
jecxz
lret
iret
outsl
sub
test
dec
pop
sub
jge
sub
repnz
xlat
loopne
or
std
dec
repz
lret
xchg
jnp
lods
inc
mov
sbb
out
iret
stos
hlt
xchg
fistps
shlb
sbb
or
outsl
movsl
xor
cld
or
cli
loope
stos
dec
mov
cmpsb
mov
call
addr16
lock
jb
iret
outsl
add
mov
push
sub
mov
inc
sbb
jp
sbb
inc
mov
loope
add
xlat
cs
mov
xor
pusha
sub
testl
xchg
hlt
sub
out
ds
jmp
add
loopne
sbb
in
sub
addl
jp
repnz
enter
add
addr16
or
js
xchg
xchg
xor
enter
cmp
loopne
mov
add
aam
mov
out
sbbl
inc
aaa
or
fidivrs
dec
insb
xchg
pushf
push
aas
mov
jae
aad
mov
fbstp
rol
jns
add
cmpsl
adc
rcrl
sbbb
roll
xchg
push
pop
ds
es
sub
lods
fisubrl
lods
cmp
icebp
gs
inc
iret
out
push
lcall
sub
clc
push
pop
inc
dec
dec
rcrb
push
pushf
add
inc
mov
jns
or
mov
inc
mov
inc
inc
ljmp
pop
jnp
rcr
imul
xor
lahf
jb
jg
mov
pop
mov
jae
xor
fwait
lds
mov
or
fiaddl
lret
xchg
ret
pop
pop
mov
lds
cli
xchg
ret
fnsave
in
or
fisttpll
xchg
mov
push
adc
jg
iret
aaa
lret
push
jge
push
jle
inc
xchg
ficompl
outsl
out
out
in
dec
mov
fisubs
push
inc
stos
push
dec
cli
push
push
xchg
xchg
sbb
in
ja
push
mov
cmp
popa
clc
mov
int3
jnp
arpl
xorb
xor
add
cmp
pop
and
inc
mov
mov
repz
sbb
push
mov
imul
fistps
stc
ret
xchg
dec
inc
in
xchg
mov
aam
and
bound
jg
xchg
std
lock
or
popa
in
mov
stos
imul
mov
jmp
daa
fadd
testl
bound
and
std
mov
cmp
dec
mov
mov
icebp
mov
mov
mov
jp
fimull
cmp
xor
inc
testl
xchg
ds
xchg
pop
iret
dec
imul
fidivrl
fwait
pop
mov
mov
mov
aaa
push
push
xor
push
or
and
test
and
std
rorb
dec
xchg
add
lret
sbb
sub
push
popa
leave
dec
out
jecxz
aaa
lcall
xchg
inc
xchg
sbb
lea
xchg
jne
add
mov
repnz
lcall
pushf
es
jge
cmp
and
cmp
adc
popa
xchg
cwtl
sti
dec
xchg
clc
inc
push
sub
add
mov
cmc
push
pop
aad
jl
adc
int
ljmp
mov
inc
in
cltd
cmp
lock
daa
lds
pop
out
jne
jle
je
test
aad
out
and
adc
sbb
mov
shl
out
add
add
mov
pushf
ja
insl
jno
push
stos
dec
push
cmp
lcall
sbb
cmp
ljmp
xchg
jne
lods
push
sub
xlat
fwait
in
adc
xorl
rorb
js
ret
mov
lock
mov
jns
sbb
xor
cmp
insb
adc
ds
loope
pushf
ret
call
cmpsb
jns
daa
sbb
lods
jmp
dec
add
mov
dec
inc
repz
out
scas
movsl
jnp
insl
jae
xchg
push
fisubrl
inc
mov
mov
cmpsb
add
imul
xorb
push
add
mov
mov
shlb
cmp
inc
std
mov
pop
pop
mull
loop
divb
inc
leave
movsb
jg
aaa
notb
pushf
adc
xor
or
stos
jmp
dec
mov
cmpsb
lods
pop
pushl
pop
pop
ret
cmc
xor
and
lahf
es
dec
push
data16
leave
adc
rolb
sub
xchg
mov
lock
mov
into
jns
mov
arpl
seto
sub
mov
out
inc
std
inc
cld
fst
push
pop
dec
cmp
leave
xlat
loopne
stos
mov
cld
jo
jo
fisubl
cmp
arpl
cli
clc
mov
jae,pt
mov
je
popf
jbe
movsb
aad
testb
sbb
call
shrl
out
push
es
cwtl
out
sti
scas
inc
dec
push
imul
aas
push
jmp
cmp
mov
xor
aam
mov
out
mov
lock
fwait
and
movsl
into
mov
hlt
loopne
mov
xor
out
mov
aas
stos
rcrl
inc
js
push
mov
aaa
inc
icebp
add
test
jo
add
mov
cmp
xorb
mov
cmpsb
popa
insl
mov
xor
inc
jno
loopne
iret
xacquire
mov
lock
or
cmp
mov
std
aad
and
enter
xchg
stc
xor
das
push
sbb
cmp
stos
xor
scas
sbb
adc
rclb
stos
pop
sub
mov
mov
icebp
push
mov
fistpl
mov
testb
inc
adc
scas
divb
inc
xor
mov
stos
adc
sbb
icebp
movsb
in
cmp
ret
jp
jbe
mov
or
out
scas
jp
xchg
mov
stc
movsb
test
cmp
ret
fs
popf
pop
push
mov
mov
repnz
fldl
test
je
lds
or
repnz
dec
int
lea
fdivrs
cs
pop
jne
fs
ds
pop
pop
xchg
rclb
stc
inc
sub
call
jg
rorb
jbe
cld
pop
pop
pop
aad
leave
arpl
xor
rcrl
sbb
mov
jl
fistpl
fxch
sbb
adc
cwtl
xchg
adc
outsl
cmpsl
mov
shlb
xchg
stc
lahf
iret
cmp
sarb
orb
notb
pop
jne
push
enter
inc
aam
mov
cmovae
int
sbb
test
rcrl
inc
cmpsb
push
dec
pop
xor
push
ljmp
mov
sbb
idivl
lods
test
arpl
mov
jg
arpl
subl
and
imul
or
jle
ja
and
jp
jb
add
je
dec
repnz
ficompl
inc
xor
adc
inc
jecxz
cld
mov
idivl
loopne
jecxz
sbb
insb
mov
inc
in
imul
aam
adc
mov
and
stos
or
in
testb
cmp
cmp
pop
lret
aaa
mov
mul
adc
push
inc
ret
push
pop
imul
or
cwtl
stos
inc
pop
repz
scas
jne
icebp
xor
adc
xchg
sbb
int
out
movsb
inc
in
pop
out
out
js
lret
pop
mov
in
lds
mov
xchg
mov
test
cmp
add
stos
fistps
stc
ljmp
mov
sbb
dec
adc
mov
jb
jns
and
fistl
mov
xor
push
fimuls
mov
push
xlat
gs
inc
mov
in
test
push
fdivrl
sbb
mov
subb
push
imul
cmp
icebp
test
dec
mov
nop
xor
pop
sub
pop
pop
xor
dec
inc
xchg
and
add
xor
scas
mov
fistl
stos
mov
jg
or
insb
mov
ret
and
ret
mov
mov
test
mov
fistpl
dec
or
mov
adc
dec
dec
dec
test
pop
sub
sahf
sarb
dec
mov
fistpll
movsb
hlt
orl
scas
cmp
jbe
cld
test
lods
arpl
das
inc
out
add
sbb
xchg
lds
inc
push
xchg
mov
add
movb
xchg
pop
insl
sbb
jge
in
cmp
xor
out
adc
lahf
cwtl
inc
inc
mov
jbe
and
xchg
push
push
fcmovu
testb
pop
ljmp
shll
push
and
xor
ret
sbb
push
insb
scas
xchg
dec
addr16
ud0
or
pushf
ret
aad
mov
and
jne
pop
inc
icebp
loop
fmulp
fs
push
in
xlat
repz
outsb
sbb
xchg
enter
xchg
lock
mov
aam
fisubs
xor
jle
dec
ret
push
aas
mov
pop
fiaddl
xchg
fstl
bnd
mov
mov
cli
inc
jbe
pop
mov
adc
out
push
stc
xlat
pop
cli
pop
popf
leave
stos
pop
inc
push
test
adc
push
adc
mov
lods
test
jmp
push
loope
xor
insl
cli
sbb
in
fisubrs
in
fxch
pop
jbe
push
xchg
cmp
jp
dec
add
mov
cmc
js
lret
mov
inc
mov
imul
xchg
sub
rclb
mov
sub
sti
fdivr
repz
ljmp
jmp
orb
dec
mov
push
pop
cltd
test
xchg
imul
dec
mov
cmp
dec
scas
fs
jne
jae
dec
mov
cwtl
pop
xchg
inc
loop
dec
das
or
mov
fs
sbb
add
fs
ds
jmp
rolb
sar
sbb
mov
xor
fcoms
jnp
nop
outsl
pushf
add
adc
xchg
add
cmp
add
into
sbb
pop
cld
push
mov
call
pop
fidivrl
pop
inc
jns
gs
xor
push
das
out
andb
data16
sub
mov
hlt
lcall
popf
stos
aad
fimuls
adc
bound
lea
ljmp
loopne
hlt
mov
test
orb
mov
out
dec
sbb
leave
mov
sbb
pop
mov
cmpsl
fimull
lods
inc
mov
mov
in
cwtl
test
dec
sti
stos
cmc
je
mov
ret
cltd
dec
fstps
aad
sbb
mov
push
fsub
mov
shl
mov
jne
int3
push
pusha
mov
xor
sbb
stos
lods
lahf
xor
lcall
mov
push
movsb
xchg
aam
sbb
pop
out
sbb
inc
add
aam
movsb
shr
push
inc
lcall
cmc
insl
ret
aad
in
cltd
ljmp
adc
fnstenv
adc
jo
imul
in
in
lret
pop
xchg
and
xchg
stos
int
in
pop
jae
ja
fwait
xor
xlat
mov
jmp
or
fidivl
xor
cmc
test
lods
rol
lock
mov
repnz
jbe
add
les
or
bound
sub
jbe
aam
je
or
inc
jbe
dec
xchg
pop
dec
mov
shll
rcrb
cmp
jne
jp
sbb
adc
repnz
mov
aaa
xor
push
cld
mov
mov
sahf
inc
cli
mov
jae
jne
mov
pop
pop
jmp
shl
cmp
push
mov
stos
jbe
ds
xchg
out
sub
gs
cwtl
mov
inc
xor
jge
jbe
loope
push
push
test
cmp
js
arpl
lods
in
mov
fsubr
loopne
lds
sbb
cmp
mov
inc
push
fwait
mov
push
into
push
inc
add
add
daa
cmp
jno
jp
adc
xor
mov
pop
lcall
out
pop
cld
ljmp
fnstcw
data16
mov
shlb
test
into
cmp
in
or
and
adc
pop
jl
shlb
gs
jb
push
lds
push
adc
push
jp
ja,pn
adcl
sarb
add
inc
xor
outsb
outsb
push
pop
aam
sbb
mov
jo
insb
and
out
xlat
push
scas
sahf
enter
fstps
sarl
pop
int
push
mov
shll
int3
cli
dec
mov
push
loope
push
xor
das
push
jo
and
movsb
cwtl
jbe
jae
mov
lahf
sbb
int
int
ret
mov
fxam
push
lcall
inc
dec
sbb
xchg
imul
or
pop
mov
cltd
mov
inc
dec
pop
imul
out
imul
fnstsw
sbb
sahf
adc
pop
mov
out
repnz
dec
int3
dec
cmc
pusha
popl
daa
mov
push
fistpl
aam
outsl
mov
js
call
pop
cwtl
pop
push
xor
call
and
inc
sti
movsb
sub
les
sub
xlat
xchg
pop
cltd
mov
sub
or
add
add
rcrb
and
push
fnstenv
xor
lods
fsubs
ret
cmp
xchg
cli
jg
fs
lret
sub
roll
iret
call
inc
pusha
test
ds
sub
stos
inc
popf
sti
cwtl
clc
jb
jg
sub
stc
sub
dec
fstl
fidivrl
cmpsl
incl
sbb
add
jbe
aad
insb
fistpl
loop
and
push
test
dec
dec
sub
or
push
shlb
or
jns
and
jne
and
mov
cmp
into
cmp
xchg
pop
mov
push
push
push
add
mov
pop
xchg
cmp
and
add
mov
sbb
clc
jb
popf
out
daa
and
push
inc
sub
mov
push
sub
push
inc
lcall
add
xchg
adc
adc
ret
xchg
addr16
cmp
cmp
push
push
mov
sarb
pop
sbb
loop
leave
xorl
sub
xchg
stos
std
mov
icebp
test
loope
and
pop
cmp
push
movsb
nop
test
xor
jb
push
xchg
fsubl
pop
add
out
mov
add
inc
sbb
lret
xor
dec
cs
cmp
cmp
popa
ds
mov
cmpsb
xor
stos
inc
xor
sahf
cld
mov
mov
aaa
out
arpl
pop
fstps
sbb
and
loopne
iret
or
xchg
into
jb
imul
cmpsl
push
ror
adc
or
add
lods
sub
sub
jge
movsl
push
push
and
pushf
sub
arpl
mov
imul
mov
lahf
or
adc
test
je
test
fstp
ja
xchg
xchg
cli
mov
xlat
daa
fdivrl
aam
jl
outsb
cli
dec
lahf
lahf
xchg
pop
data16
into
adc
ss
add
addr16
rcrb
push
inc
shll
jbe
pop
mov
jb
or
pushf
pop
je
in
dec
mov
fwait
jp
loope
or
mov
mov
sub
xor
addr16
jge
mov
ret
sti
testl
pop
xchg
mov
add
mov
ror
jb
lods
mov
cli
xchg
xorl
pop
jge
adc
out
fildll
sub
rcrl
shl
repnz
xor
xor
repnz
rcrw
lods
pop
fcoms
adc
bound
shlb
pop
fisubrl
mov
jbe
loope
push
sbb
sbb
mov
dec
lcall
lahf
sbb
and
loop
xchg
filds
xchg
cmp
fstp
fwait
popa
inc
roll
movsb
cmp
jnp
inc
repnz
fmull
and
inc
les
test
push
popf
aam
xchg
imul
xor
sbb
adc
mov
mov
jge
loopne
scas
paddusw
add
mov
loopne
popa
out
or
fwait
push
loopne
add
movsl
lock
andb
jp
bound
dec
sub
ja
imul
fs
test
cmpsb
testb
loopne
jecxz
mov
cmp
pop
cmp
xchg
outsb
loope
inc
push
stos
xchg
push
xor
or
clc
and
loope
dec
out
adcl
push
mov
iret
andb
ljmp
nop
jnp
jle
push
in
xor
loopne
arpl
fildll
jne
pop
cmp
inc
push
mov
push
test
stos
or
mov
mov
fildl
mov
jg
mov
ss
cmc
mov
aad
push
cmpsl
mov
pop
mov
test
cld
push
aam
fimuls
aaa
dec
shlb
es
mov
pop
jecxz
cmp
add
sub
mov
sub
adcb
cmpsb
jle
inc
out
fnstenv
mov
jecxz
push
jl
test
jo
scas
mov
dec
ret
inc
mov
bound
cmpsb
mov
push
add
in
fbstp
lds
jp
insl
mov
scas
imul
sbb
daa
cmp
ss
xor
loop
and
lcall
adc
int3
push
adc
ja
clc
mov
jecxz
fsubl
pop
cmp
push
lea
mov
mov
cmp
adc
sub
pushl
push
pop
popf
or
call
inc
inc
and
pop
das
imul
or
das
jbe
xchg
jns
mov
insl
mov
lret
stos
punpckhwd
pop
pop
pop
cld
stc
test
inc
fcomps
xor
ss
and
test
lcall
mov
push
dec
or
xchg
sarl
insb
mov
aam
mov
out
aaa
pop
and
ret
mov
pop
aad
xlat
mov
sub
sub
out
aad
and
in
sbb
cld
mov
inc
addr16
aaa
jmp
add
sbb
sarl
cltd
outsb
push
repnz
xchg
cltd
test
mov
lods
jbe
lods
adc
aas
je
cmpsl
movsl
rolb
scas
cmpb
addr16
inc
aas
mov
xchg
in
outsb
test
scas
fcomip
cmp
adc
jnp
xchg
and
mov
insb
into
jo
out
mov
mov
daa
movsb
add
jge
iret
fwait
jnp
subl
push
lods
movsl
nop
and
leave
repz
xlat
fisubrs
aad
bound
test
mov
xlat
neg
sbb
mov
dec
push
dec
mov
mov
mov
cmp
orb
or
pop
add
movsl
into
sbb
out
cmp
mov
jp
push
xorb
sub
daa
inc
xor
loop
xorl
divl
pop
push
bound
aam
inc
mov
imul
lret
xchg
adc
cli
push
inc
aaa
cld
loope
or
std
mov
push
stc
sahf
lcall
mov
xor
jns
or
cltd
js
pop
fidivrl
push
pop
popa
fwait
daa
cmp
add
pop
mov
call
xchg
pusha
jmp
sbb
sbb
hlt
mov
outsb
cmp
jg
enter
jb
inc
push
lret
xor
add
xchg
cli
out
mov
mov
shr
jbe
enter
sub
aaa
jo
scas
sarl
fcmovnbe
and
lcall
xchg
cmp
xchg
pop
sub
add
mov
outsl
xor
inc
popa
cmpl
mov
dec
jb
push
adcb
dec
and
aas
ret
mov
icebp
cmp
imul
pop
test
lcall
mov
add
hlt
ja
test
scas
outsb
dec
and
mov
pop
ja
aas
adc
xchg
popf
xor
and
stos
arpl
add
and
jge
cmpsb
idivl
int3
jmp
dec
aam
in
or
cld
jns
outsl
lods
push
cmp
push
add
repnz
rcll
mov
out
outsb
data16
add
addr16
mov
repz
adc
js
mov
or
pop
aad
or
cmp
ja
les
adc
jge
aas
push
aas
xchg
sbb
mov
aas
mov
sbb
es
lds
nop
in
jnp
int3
or
imul
and
aad
and
repnz
push
rolb
xor
cmovp
xchg
push
jns
sbb
and
bound
call
fisttpll
hlt
lcall
mov
add
scas
push
adcl
fldt
shll
mov
subl
or
les
pushf
and
xchg
mov
mov
cld
mov
jge
aad
dec
sti
mov
or
arpl
mov
sbb
out
out
lahf
fistps
or
xor
mov
lods
cwtl
es
push
or
outsl
enter
in
int
fs
push
sub
jmp
test
add
call
repnz
aaa
out
addr16
je
ljmp
xchg
negb
mov
dec
mov
cmp
xor
lods
jns
fistps
adc
jae
aam
and
fldt
shl
mov
mov
lods
movsl
into
push
cmp
adc
inc
nop
cli
rorl
gs
cmp
xchg
mov
je
in
fs
int3
nop
adc
pop
xlat
orb
insl
fldl
or
outsl
mov
push
sub
das
pop
jecxz
iret
mov
xchg
js
lcall
insl
push
mov
dec
jbe
cmp
push
cmp
mov
adc
add
cwtl
inc
lcall
fmull
jae
pop
call
xor
pop
push
aad
pop
xchg
sbb
nop
ljmp
outsb
leave
pop
popf
scas
test
and
dec
outsb
test
and
incl
mov
jecxz
push
xor
and
fcoml
add
mov
leave
pop
lods
cmp
fsubl
mov
push
xchg
mov
fcoms
sbb
lds
loopne
aaa
push
jno
add
xchg
and
dec
jecxz
sbb
mov
push
jae
xchg
push
jb
lret
pusha
mov
mov
push
fnsave
add
int3
push
adc
dec
loopne
addl
test
aaa
ret
sbb
nop
dec
mov
lahf
dec
mov
push
xchg
xchg
push
fildll
scas
test
jg
jne
cltd
mov
push
adc
andl
js
xor
inc
sahf
and
int3
push
fwait
mov
jnp
sub
ds
movsb
mov
mov
je
roll
or
xor
xor
mov
dec
loopne
cmp
xor
inc
dec
lcall
in
jle
aad
pop
cs
or
ljmp
mov
lret
sbb
fst
inc
or
andl
mov
mov
sbb
add
leave
pop
inc
push
int
ja
push
add
out
and
fwait
push
cmp
add
pmuludq
loop
pusha
lea
int
or
jmp
add
cmpl
int
or
pop
jge
ficoms
bnd
push
adc
cmp
sub
jo,pt
add
insl
into
scas
pop
roll
pop
movsl
xchg
mov
repz
mov
out
or
pop
sbb
fcoml
dec
mov
or
movsb
dec
lods
call
sar
inc
je
iret
mov
movsl
mov
ljmp
pushf
mov
stc
ja
push
add
scas
lcall
in
push
aaa
pop
pop
and
arpl
pop
into
adc
mov
xor
adc
jns
inc
insl
jmp
cli
lods
lods
out
push
jae
and
mov
es
push
mov
pop
popa
push
insl
xlat
mov
enter
cwtl
sub
dec
inc
push
and
iret
in
xchg
xchg
sub
add
mov
mov
dec
jnp
enter
sahf
mov
nop
xor
pop
mov
dec
cmpsl
imul
and
and
daa
mov
hlt
jmp
rolb
jecxz
rcrb
out
mov
mov
or
stos
daa
movsb
mov
icebp
jmp
mov
and
setne
mov
sarl
clc
test
jmp
dec
test
scas
jbe
ds
push
lock
push
ljmp
stos
mov
mov
loope
xchg
cwtl
jmp
mov
adc
sub
sarl
lahf
and
out
xor
mov
ffree
lcall
xor
sub
int3
lahf
pusha
out
mov
mov
push
lods
mov
add
aam
or
loope
push
fildl
ret
push
and
test
push
popa
fs
fstpl
xchg
stc
cmp
adc
std
push
dec
jle
lock
pop
and
and
mov
lock
dec
dec
jl
insb
stc
mov
and
nop
xchg
and
push
into
xlat
xchg
movsl
insl
dec
push
dec
push
ficompl
xor
pop
and
iret
scas
adc
pop
lret
pop
stos
in
inc
jnp
test
loopne
ss
fidivrs
lahf
xor
mov
sub
mov
cmp
or
push
iret
push
ljmp
mov
mov
push
sbb
rclb
inc
std
repz
fnstcw
sub
notb
and
mov
not
dec
jns
pop
sbb
fsubrl
mov
cmc
ja
aaa
pop
bnd
jge,pt
add
frstor
psrad
fsubrl
and
sbb
out
out
push
sahf
lods
scas
and
cmp
popa
shll
mov
lss
in
dec
mov
popa
loopnew
mov
or
adc
sub
stc
push
call
outsl
in
add
mov
xchg
and
popf
jns
adc
bound
test
rcll
rcr
stc
rcrl
mov
dec
out
fstp
mov
push
int3
push
cmp
lods
test
pop
or
mov
push
mov
push
sub
lahf
adc
cmpb
and
add
lds
gs
lods
stos
loope
xchg
leave
mov
mov
lahf
adc
sbb
test
add
and
inc
jae
arpl
dec
inc
pop
mov
push
jp
push
cmp
sbb
fs
and
sbb
and
ret
jns
xlat
outsb
enter
jb
adc
fstpt
cmp
adc
dec
icebp
jo
setp
mov
mov
pop
jo
cmc
xchg
jbe
movsl
jno
mov
xchg
out
inc
bound
sbb
sub
leave
nop
test
lea
and
push
fstpl
test
xor
icebp
imul
push
in
in
subb
add
cltd
jle
testb
mov
jnp
and
sub
ja
xchg
ja
lcall
gs
xor
inc
pop
mov
or
es
adc
sub
out
sbb
iret
popf
in
lea
cmc
call
rol
fmuls
loope
adc
cwtl
test
sub
fidivl
or
andb
cs
scas
sub
imulb
or
std
popa
jne
andl
pop
cmpsl
xchg
dec
cmc
rorb
lahf
cmp
lods
push
pop
pushf
pop
jecxz
je
orb
out
and
lahf
ret
ljmp
ds
jg
mov
rcrb
adc
ss
mov
adc
pop
dec
xchg
icebp
jno
cmp
pop
add
and
imul
mov
inc
imul
jo
mov
mov
sub
aaa
sbb
out
xchg
mov
shlb
imul
les
push
cmp
pop
fs
push
test
das
data16
mov
dec
push
sbb
lret
adc
push
xchg
push
loopne
cld
ret
mov
aam
rcl
orl
xchg
fwait
adc
sub
ds
xchg
sub
punpckldq
mov
pop
cwtl
xchg
insl
pop
jnp
mov
scas
sbb
mov
out
sub
or
push
clc
lret
or
xchg
push
mov
mov
mov
dec
mov
adc
inc
push
pop
sub
cmp
fimull
in
fwait
xchg
and
lret
pop
xor
jp
add
in
pop
sti
sub
lret
stos
icebp
sti
or
das
push
xlat
jecxz
ror
insl
aad
je
dec
lods
mov
adc
and
dec
sbb
aam
cwtl
dec
rorl
mov
scas
dec
xor
ds
bound
push
dec
push
xor
fs
les
pop
clc
sbb
mov
sub
sub
lods
dec
addr16
or
dec
cmp
adc
xlat
lcall
or
xor
and
iret
lahf
sbb
jne
std
pusha
xorl
mov
loope
popa
icebp
pop
cmp
test
xchg
ret
pop
push
dec
pusha
or
mov
fs
arpl
daa
insl
inc
movsb
in
push
sbb
lock
mov
cmp
es
dec
sbb
sbb
xchg
inc
xor
jge
sub
clc
cmp
scas
rcrl
in
sbb
push
xor
push
popf
stos
test
fdivrs
cmp
cmp
push
jns
xor
mov
pushf
adc
add
sarl
xor
idivb
imul
dec
je
mov
cmp
push
cs
xor
in
in
scas
xchg
sub
insb
mov
pop
adc
test
lcall
pop
addr16
and
aad
lahf
mov
bound
dec
inc
dec
add
xor
in
iret
cmpl
mov
aam
out
mov
cmpsb
or
dec
cmp
xchg
mov
jmp
sub
lods
or
jmp
daa
out
sub
rol
ja,pn
xor
rorb
pusha
lcall
mov
xchg
mov
ja
sub
mov
adc
loop
test
mov
and
xor
xor
mov
imul
cmp
and
jle
out
roll
mov
pop
cli
jmp
out
dec
xor
mov
lret
nop
ljmp
mov
jle
mov
adc
ret
les
cmpsb
iret
insb
jns
repz
jecxz
idiv
js
sbb
push
push
lock
test
es
out
pop
lock
cwtl
bnd
out
lea
outsl
imul
lahf
push
inc
rcrb
outsb
xchg
pushf
xchg
loopne
leave
leave
aaa
cmc
iret
mov
adc
lea
mov
xor
mov
dec
jae
sbb
xchg
gs
data16
imul
movsb
arpl
enter
jbe
cmp
sub
mov
int
das
test
add
dec
xchg
int3
mov
push
jae
push
das
in
loop
cmp
insl
jne
push
mov
nopl
mul
or
dec
adc
imul
pop
das
pop
and
mov
adc
lock
test
mov
push
jle
mov
push
xchg
test
pop
pop
lods
lods
test
call
fs
jbe
push
jbe
jecxz
add
cwtl
pusha
dec
push
shl
outsl
mov
push
cli
jnp
inc
out
push
ds
mov
nop
mov
test
adc
in
mov
xchg
cmp
mov
fstpt
imul
aaa
or
push
or
in
cltd
mov
sbb
shrl
in
mull
stos
cmp
ret
add
pop
pop
fwait
push
push
outsl
mov
outsl
inc
bound
and
sbb
lea
mov
push
xor
push
push
mov
sbb
and
lret
inc
push
push
mov
pop
sbbl
imul
stc
nop
pop
mov
mov
pop
mov
pusha
aas
in
ja
jo
out
ja
xchg
fisubl
and
pop
pop
rcr
cmpsl
idivb
add
cltd
and
cmp
fstps
sbb
push
mov
in
in
mov
into
xchg
push
adc
mov
sub
inc
fistpll
fwait
add
decl
sbb
hlt
xchg
popl
lahf
adc
aaa
jg
lods
clc
out
lods
sahf
mov
mov
xchg
lea
dec
int
outsl
inc
jns
push
ret
insl
je
pushf
cmp
fidivs
and
xchg
fimuls
pusha
cmp
in
mov
lods
cli
dec
add
lock
fistps
jle
xchg
adc
fnstenv
fmul
stc
add
sbb
lods
pusha
lret
popf
test
add
out
push
mov
sahf
loope
push
or
mov
xor
test
pop
mov
pop
in
out
and
adc
mov
out
xchg
sbb
and
loope
mov
rolb
mov
inc
jg
outsl
leave
dec
mov
or
adc
cmp
mov
lret
push
pop
jns
test
mov
sub
ret
jecxz
add
inc
and
dec
and
xorl
repz
mov
jmp
stos
cmc
mov
jle
mov
fdivr
pop
jne
push
lcall
lds
cmp
stc
mov
repnz
mov
push
lock
sub
rcrl
inc
mov
icebp
mov
mov
inc
pop
pushf
push
jnp
pop
xchg
mov
jmp
cmp
push
cltd
mov
push
xlat
and
cmp
dec
mov
pop
jecxz
pop
movsb
lcall
icebp
cmp
cltd
lock
test
cltd
xlat
jle
out
nop
jle
jmp
testl
je
dec
mov
jns
imul
mov
cmp
inc
pop
push
sbb
pop
fwait
add
add
inc
hlt
shl
das
cmp
pusha
dec
cs
pushf
cmpsl
mov
or
mov
hlt
ja
xchg
sbb
gs
jmp
gs
out
arpl
icebp
dec
fdivrs
nop
iret
gs
test
jo
hlt
fildl
jo
adc
xchg
jae
test
ss
cmpsb
mov
push
aaa
and
or
outsl
push
ljmp
jecxz
xor
or
addl
sahf
std
jmp
out
or
xor
xor
mov
push
lods
fidivrl
pop
mov
mov
push
inc
das
and
mov
mov
mov
popa
push
push
loope
mov
cld
jne
sub
scas
adc
gs
ljmp
pop
in
sub
inc
push
mov
jae
sarl
inc
clc
xchg
aas
fmul
push
mov
push
cmp
push
loop
xchg
arpl
mov
xchg
mov
repz
mov
repnz
or
sti
fdivrp
inc
mov
ds
adc
lahf
sub
jge
outsl
and
and
dec
jmp
mov
mov
push
lea
dec
dec
xchg
filds
rcrb
insl
or
int3
inc
addr16
cmp
mov
jp
sbb
outsl
out
mov
rorb
mov
jmp
push
std
inc
or
dec
arpl
xorl
and
lcall
out
push
cmpb
adc
pop
push
popa
rorb
and
jae
fdivrs
and
dec
and
enter
lcall
add
mov
inc
jmp
sbb
rorb
or
sub
inc
cltd
xor
jp
rolb
lret
nop
mov
cmpsb
and
add
jb
dec
or
sarl
mov
and
jns
mov
cmp
pop
lcall
cmpl
out
push
mov
out
enter
in
mov
sub
fwait
fs
mov
je
cld
repz
lds
ret
jno
test
popa
push
leave
scas
xor
ficoms
cmp
negl
shll
out
arpl
pop
clc
mov
dec
scas
xchg
sbb
xor
pushf
or
dec
scas
adc
lods
pop
call
sbb
mov
clc
cmp
jo
insl
push
lods
xor
pop
jbe
mov
xchg
xchg
inc
pop
std
aas
dec
mov
xchg
mov
fcompl
out
xor
stos
mov
xor
and
test
mov
das
jo
out
push
sbb
mov
insl
mov
test
lahf
cltd
sbb
mov
es
icebp
std
push
mov
inc
les
andb
mov
sarl
pop
outsl
jle
xor
and
xor
nop
xchg
add
mov
add
jns
ljmp
jecxz
in
out
loopne
out
xchg
xor
add
ds
enter
push
mov
fistps
sub
inc
pushf
shrb
dec
push
sbb
fstp
and
jmp
ret
js
xchg
add
mov
xchg
pop
in
ret
pop
sti
sbb
sbb
mov
fstpt
js
ret
out
mulb
mov
xchg
sub
in
cmpsb
push
mov
dec
negb
pop
cmpb
cli
push
xor
mov
fwait
les
push
mov
cmp
testl
int3
dec
in
inc
mov
insl
aaa
cld
cmpsb
mov
loop
push
out
xchg
sbb
shl
cld
push
mov
ret
mov
jecxz
add
lods
out
fisttpll
cmp
inc
pop
dec
in
push
fcoml
daa
into
daa
aad
and
decb
sub
test
int3
jb
lcallw
lcall
cmovnp
fwait
push
in
cwtl
mov
jg
aas
pop
stos
out
add
adc
lods
cmp
xor
push
lds
mov
sub
lods
imul
jmp
jnp
inc
cmp
subb
roll
push
xor
lock
dec
es
test
repz
out
outsl
in
sbb
sti
pop
pop
sbb
cmp
jnp
enter
xor
hlt
hlt
inc
mov
push
pop
bnd
sub
or
push
lret
out
xchg
and
mov
pushf
or
mov
into
das
int
mov
stos
mov
pusha
mov
mov
cmp
call
and
fists
and
popf
js
fmull
imul
adc
cvtpi2ps
sub
xchg
inc
out
mov
mov
ljmp
call
daa
push
jne
dec
sbb
or
mov
jg
in
cltd
inc
xor
or
adc
rolb
pop
fnstsw
cmp
pop
cmpsb
aam
xorb
jge
mov
in
mov
xchg
sub
or
inc
and
xor
lds
cld
rcrb
jns
sbb
or
jg
fisubrl
mov
mov
out
xchg
shlb
pop
pop
add
xor
xchg
cmp
int3
xchg
int3
and
adc
outsb
push
fiaddl
je
jbe
insl
jle
and
or
in
nop
dec
push
pushf
add
mov
int
cmp
xchg
pop
or
imul
xor
xor
int
add
mov
sub
inc
dec
dec
jle
push
adc
jecxz
jns
xorl
mov
hlt
aam
mov
sub
fwait
xor
insb
test
nop
mov
adc
cwtl
mov
sbb
ret
jno
insb
mov
and
andl
loopne
mov
mov
mov
mov
pop
and
ret
push
inc
dec
cmp
leave
movsl
gs
outsb
xor
insb
xchg
adc
std
in
xchg
lock
outsl
aaa
cmp
das
lret
rcrb
jmp
cmp
int3
or
add
or
sbb
push
lahf
fwait
xchg
mov
add
icebp
cltd
inc
sub
or
dec
or
aaa
push
pop
fsubs
cmc
arpl
std
or
xchg
pop
xor
in
xchg
cmp
jecxz
jg
xchg
jno
pop
jmp
mov
sbb
push
xchg
es
pop
movsl
inc
xor
sbb
dec
movsb
push
ss
push
add
rolb
and
sbb
mov
xchg
jmp
enter
popf
or
and
xchg
ret
in
xchg
inc
mov
movsb
lock
mov
push
ret
mov
push
and
jg
push
xor
mov
shrb
jp
mov
and
xor
outsl
mov
xchg
aad
lcall
ds
out
cwtl
punpckhwd
dec
lret
cld
mov
xchg
test
stc
pop
push
or
cmp
jge
inc
ja
nop
add
stos
xchg
sub
pop
lock
mov
push
subb
fldt
outsb
es
xchg
jecxz
push
push
inc
rclb
xorl
popf
cmp
cmpsb
enter
jle
testb
cmp
adc
jo
cwtl
xchg
jp
shll
cmpb
faddl
inc
adc
addb
out
jo
outsb
in
fs
and
jg
gs
xchg
push
jo
pop
jo
pop
sti
or
das
xchg
lods
shr
rolw
orb
scas
dec
mov
mov
popf
xor
popf
ficoms
aas
push
xchg
jl
adc
jns
adc
xor
arpl
mov
inc
pop
jno
mov
cmp
jge
mov
xor
cmp
inc
outsl
jecxz
shll
jge
dec
roll
andnps
and
jecxz
jg
or
xchg
das
gs
imul
in
rcrb
sarl
mov
xchg
mov
pop
jb
test
jp
mov
ftst
stc
dec
dec
mov
xchg
jmp
lea
in
sbb
test
ss
mov
mov
into
iret
addr16
push
ds
dec
aad
xor
inc
jecxz
notl
mov
mov
push
inc
rclb
adc
fcmovne
push
xor
roll
leave
nop
lret
movsb
aaa
adc
sbb
popa
jnp
dec
daa
adc
mov
dec
in
cmp
sub
cmp
insb
xchg
ja
jecxz
cmp
ret
fmuls
jg
in
addr16
pop
pop
mov
xchg
aaa
lahf
xchg
xacquire
xor
pop
inc
out
pop
ficoml
js
loopne
sbb
clc
rorb
sti
cld
vpaddusb
adc
enter
scas
inc
push
jmp
ja
pop
mov
popa
jb
aam
jp
xchg
addr16
pop
xor
sbb
pop
mov
add
xor
mov
or
les
shl
loope
cltd
insb
mov
sarl
push
lahf
push
cmp
sub
scas
jne
lret
mov
jne
mov
xchg
and
mov
mov
mov
mov
ret
aad
jge
push
sub
add
leave
pushf
je
aam
dec
outsb
outsl
decl
lea
lret
ss
insb
lods
sub
cmp
push
clts
mov
cs
xchg
into
dec
test
push
cs
xor
cmp
fnclex
jmp
sbb
add
or
fnstenv
fnstenv
movb
pop
into
shrl
out
and
xchg
je
dec
cwtl
xchg
sti
lods
or
daa
lds
lcall
lcall
popa
outsb
subl
in
add
stc
cwtl
aam
ret
sbb
lcall
mov
imulb
sub
xor
inc
out
xchg
push
and
or
les
jno
out
sbb
lahf
aas
dec
pop
test
jp
pusha
fidivs
shl
sbb
or
in
add
mov
out
cmc
repz
mov
mov
push
mov
stc
mov
int3
push
mov
iret
adc
movsb
fst
cltd
adc
xor
fisubrs
add
sbb
addr16
inc
xchg
inc
fidivrs
push
sub
icebp
pop
les
pop
and
push
shlb
fildll
add
push
pop
jmp
repz
daa
ja
dec
sub
or
push
idivl
cmp
imul
inc
adc
outsb
fs
fcmovne
call
pop
stc
mov
shl
and
cltd
dec
sub
mov
out
or
jb
mov
test
test
cltd
loope
por
mov
loopne
push
xchg
sub
sbb
xchg
test
or
repnz
sbbb
in
test
sbb
push
aad
mov
je
sub
out
inc
mov
sub
xchg
xchg
cmc
mov
dec
hlt
imul
scas
jo
lock
jl
out
cwtl
xor
scas
xchg
push
loope
fsubrs
jmp
inc
dec
ds
dec
pop
mov
dec
clc
adc
mov
addr16
jno
decb
mov
mov
inc
push
aam
notl
pushf
and
and
sbb
sti
inc
lods
jbe
mov
xchg
test
pop
xchg
movsb
in
xchg
lea
fidivrl
add
fcmovne
jg
dec
xchg
push
push
fldcw
pusha
lea
jmp
ds
push
pop
je
cmc
inc
sbb
std
jp
push
push
jb
loopne
mov
sysret
push
scas
pop
mov
xchg
dec
subb
mov
repnz
inc
xchg
hlt
mov
jecxz
lods
jne
sbb
or
rorb
cmpsl
fldt
xchg
pop
mov
add
push
or
repnz
pushf
dec
push
sbb
jecxz
movsl
xlat
add
test
in
cmp
in
adc
mov
jnp
fcomi
jnp
mov
rorb
pop
cmpsl
mov
out
daa
dec
push
push
jno
mov
lock
imul
mov
sbb
out
adc
mov
loopne
jns
add
jb
sahf
inc
cmpsl
push
aam
std
sub
mov
jge
into
cmp
xchg
cwtl
int
lods
fyl2x
mov
mov
xlat
xlat
add
jae
mov
mov
mov
mov
pandn
sbb
test
jg
xor
rep
cmpb
inc
lret
je
into
pop
add
xor
decb
adc
call
lret
jo
cmc
in
inc
shrl
lahf
fisubrs
cld
adc
cmp
fsubrs
scas
push
cwtl
icebp
out
ret
stc
jbe
cmp
push
mov
xchg
rorb
testl
add
xchg
sub
ds
mov
dec
or
lods
jmp
cmp
pop
fsubs
pushl
mov
stc
lcall
lds
loopne
adc
jmp
add
xchg
mov
push
dec
cli
xchg
xchg
ss
nop
popl
andb
sub
push
fidivrl
jecxz
pop
jecxz
shl
mov
push
mov
sti
fdivp
sub
sub
ds
outsl
cmc
divl
fistps
sahf
js
lods
sbb
sub
subl
sub
dec
cmp
loopne
ret
push
jae
xchg
adc
push
add
or
jge
mov
adc
mov
lret
pop
cwtl
xor
adc
sub
adc
mov
push
addb
icebp
ja
lret
stos
test
fwait
xchg
xor
jne
in
jle
pop
jl
pop
adc
sarb
fildl
push
xor
int
loop
xchg
je
in
repnz
jo
ss
idiv
and
jle
mov
mov
imull
cmpsl
ss
sub
dec
data16
fdivr
xor
pop
push
addb
inc
dec
mov
jp
inc
dec
jp
fisubrs
lods
shlb
fsubrs
test
hlt
xchg
adc
jmp
dec
insl
loopne
mov
gs
pop
scas
std
movsl
inc
and
jnp
sbb
xor
sbb
fsubp
dec
jne
mov
cmpsl
and
int3
repz
test
jno
repz
test
mov
ret
mov
sahf
icebp
repnz
cld
pop
mov
stos
sub
mov
out
push
es
lea
out
sbb
push
xor
xchg
jmp
and
shl
fs
bnd
shlb
in
jg
adc
jns
cmpsb
adc
pushf
ljmp
cmp
mov
lds
pop
mov
xchg
into
out
in
or
lock
mov
sub
test
or
or
sahf
pop
mov
or
jns
rcl
adc
xor
mov
adc
sub
or
mov
fdivr
imul
mov
jnp
pop
dec
cs
xor
negl
cmp
xchg
arpl
fcoml
dec
sub
pop
test
cmp
pop
icebp
lds
fnstsw
ljmp
scas
les
adc
stos
inc
push
outsl
sub
cmc
or
loopnew
xor
in
cs
rcr
leave
dec
add
popa
and
andl
pop
push
cli
scas
xor
loop
rcr
sbb
fidivs
mov
mov
scas
mov
xchg
jno
shr
cltd
cmpb
dec
mov
push
and
daa
popa
xchg
xchg
mov
dec
sub
pop
and
imul
ret
push
lret
inc
and
lods
pop
mov
movsl
jns
xor
sub
dec
pop
adcb
test
or
ds
call
test
cmp
push
xor
ss
cld
pop
push
loop
pop
pop
sbb
jo
cmp
insb
scas
mov
test
or
inc
cmp
shlb
call
inc
rcrb
testb
syscall
fs
dec
adcb
push
pop
negb
jle
jnp
push
mov
or
mov
pushf
mov
pop
push
add
or
adc
mov
sub
lods
and
pop
dec
das
pop
ds
leave
fsubrp
imul
and
fs
int
mov
addr16
inc
mov
ficoms
pmaddwd
enter
mov
into
jle
sbb
xor
xchg
test
dec
mov
test
je
or
inc
out
imul
add
sbb
mov
jno
dec
mov
mov
and
imul
cmp
jae
mov
lret
sbbl
adc
ret
jge
inc
cmp
imul
mov
push
in
imul
mov
dec
dec
add
cmp
sarb
xchg
pusha
mov
test
push
test
cmp
dec
adc
loope
push
add
pop
xchg
push
scas
fwait
sub
popf
test
dec
rorb
in
loopne
movsb
mov
out
push
xor
jno
insb
jne
and
in
xorb
mov
leave
inc
add
mov
incb
jl
inc
jle
into
rorb
sahf
mov
and
adc
in
addr16
lret
pop
fs
ret
ljmp
jbe
fisubrl
pop
xlat
in
mov
das
fldl2e
mov
pop
fnstcw
dec
push
or
mov
sarb
cmp
test
jbe
insb
dec
mov
aaa
jo
scas
cmp
push
mov
repz
mov
pop
pop
divb
push
jecxz
in
lods
lret
mov
dec
clc
push
sahf
out
incl
and
mov
pop
dec
movsl
xchg
mov
pop
push
jecxz
sarl
xchg
rorb
ja
or
rolb
jg
test
leave
rol
dec
fsubl
xlat
int
cmpsb
insl
cmc
sbb
out
jb
pop
mov
cmp
insl
xor
sbb
arpl
ds
mov
ret
xor
hlt
pop
sub
or
lret
push
jb
pushf
stc
add
mov
push
mov
push
mov
and
xor
test
and
xor
fnstcw
jp
mov
lds
cmpb
inc
rcll
push
lods
lret
pop
cwtl
cmc
and
insl
push
mov
fstpl
push
mull
mov
adc
jmp
fdivs
or
stos
or
insb
in
out
cmpsb
aaa
jle
xchg
subb
mov
jnp
pusha
arpl
jp
nop
mov
lea
dec
add
inc
jb
cmpsl
scas
and
mov
loope
jo
roll
mov
fnstcw
ror
sti
cmp
jb
mov
or
lea
inc
hlt
inc
stc
mov
mov
stc
sub
arpl
icebp
bound
scas
pop
repnz
ljmp
into
imul
sbb
sub
cli
xchg
addr16
push
cmc
push
mov
inc
idivb
inc
iret
xchg
dec
jmp
add
xor
cmp
stc
mov
mov
fadd
lds
or
outsl
or
bound
test
ret
and
outsl
ret
ss
mov
or
pop
aaa
jmp
xor
cmp
subb
jnp
lcall
pop
outsb
data16
sbb
testl
loope
push
inc
aaa
xchg
or
push
inc
jbe
cmp
lahf
mov
xor
xor
inc
call
dec
cmp
lods
movsl
cmc
cmp
xchg
jbe
sbb
xchg
scas
enter
pop
jle
fildl
dec
adc
scas
xor
jge
inc
and
lock
loop
mov
lahf
loop
outsl
ds
lret
imul
adc
lods
ljmp
pop
cli
int3
xchg
mov
sbb
adc
jecxz
or
lret
xor
push
pop
xchg
faddl
idiv
pop
out
cltd
pop
xchg
das
test
fbld
bound
iret
push
cltd
in
fcomp
imul
adc
cli
fsts
xor
mov
mov
fcmove
adc
lahf
cmp
mov
or
mov
jecxz
adc
ret
lea
sub
sbb
or
aam
dec
out
cmp
fimull
inc
cmp
mov
cmc
jnp
cmc
mov
jl
fmull
insl
xor
mov
inc
std
aam
add
xor
push
push
sbb
cs
int
pop
out
cmp
jl
cwtl
cwtl
sub
stos
das
pusha
mov
popf
inc
xchg
fldcw
dec
adc
cmp
mov
lret
ret
jae
imul
jbe
movsb
mov
sbb
pop
rcrl
pop
mov
jle
push
xchg
sarl
shll
and
or
sub
out
icebp
mov
es
and
incl
xchg
movl
movsl
mov
sub
fnstcw
gs
fstpt
lea
sub
adc
cmp
pop
hlt
and
fisubs
fiadds
inc
push
int3
jb
stos
jp
push
mov
sbb
sub
inc
xchg
in
push
roll
jnp
divb
bound
mov
or
sarl
pop
and
and
cmp
mov
jmp
insb
add
jmp
mov
and
jge
pop
cwtl
bound
ja
dec
xchg
sbb
jle
or
push
gs
cmp
adc
inc
push
lods
xchg
loope
push
mov
out
xchg
cmp
pop
sbb
mov
testb
out
sbb
and
xor
or
outsb
leave
sbb
mov
adc
imul
nop
fstps
jnp
push
pop
xchg
rclb
cmp
mov
mov
or
jbe
add
or
pop
and
mov
or
cmp
sub
flds
js
jge
xor
sbb
jp
scas
mov
or
mov
lahf
repnz
lods
or
and
and
dec
add
xor
push
xor
shrb
decb
scas
cmc
out
outsb
das
insb
loop
mov
sbb
stos
andb
jbe
enter
push
popa
lods
cmp
adc
and
lret
add
mov
mov
sahf
jge
xchg
mov
and
outsl
je
sub
scas
cltd
xchg
es
push
call
into
adc
and
outsl
sti
call
in
jge
mov
or
or
rcll
lds
dec
in
add
lret
mov
dec
xlat
in
leave
std
shll
popa
and
aam
push
fs
in
cmc
lret
xor
orl
fbstp
adc
jne
ret
and
pop
dec
jae
jmp
cmpsb
pusha
fwait
add
xor
push
add
inc
movsb
pop
stos
xchg
cmp
sub
cwtl
call
popf
sub
jmp
mov
mov
lea
jbe
rorl
sub
mov
lock
jbe
pop
es
mov
sub
lret
jecxz
mov
pop
pushf
add
push
popf
push
fnsave
iret
outsl
cmp
arpl
dec
jne
loope
jb
cmp
daa
test
sbbl
push
lcall
jmp
or
ja
rcl
mov
sbb
js
in
cmp
jp
aaa
jmp
pop
mov
push
pop
ret
inc
ds
sbb
fwait
mov
in
aas
rcll
cwtl
mov
adc
or
pop
lret
sub
adc
scas
sub
sub
mov
xor
outsl
sarl
iret
fsts
fwait
into
or
lock
cltd
ficomps
rol
jl
inc
xor
es
push
mov
mov
mov
adc
bound
cmp
popf
adc
dec
inc
stos
enter
sub
lds
aad
loopne
adc
mov
mov
mov
jb
mov
push
mov
xchg
inc
mov
jmp
add
jp
add
jne
out
or
roll
pushf
cmpsl
add
scas
jge
scas
mov
push
mov
inc
mov
sub
jno
jge
adcl
inc
mov
sub
aad
fisubs
pop
jnp
xchg
sub
mov
cmp
aaa
rcrl
fldl
stos
divl
mov
inc
jecxz
popa
and
repnz
test
jge
xor
scas
xor
mov
push
pop
ss
imul
nop
aam
jecxz
and
cmp
fadd
insb
cwtl
and
lret
loopne
insl
push
cmp
pop
aas
jmp
imul
rolb
dec
dec
mov
scas
push
movsl
mov
clc
fimull
lods
ja
das
in
jns,pt
mov
cmpsb
inc
and
mov
or
pushf
xor
mov
sbb
mov
ljmp
ret
cwtl
and
in
push
sbb
cmp
adc
fisttpll
pop
sarb
movsb
add
js
and
mov
in
arpl
sub
fisttpll
jb
lahf
sbb
and
cmp
jae
insl
cmp
dec
cli
cmpl
pop
inc
mov
add
in
push
mov
pushf
outsb
jbe
adc
test
cmp
xor
sbb
lret
mov
mov
jp
jbe
push
lcall
or
sbb
cmp
cltd
vshufps
icebp
out
cmpsl
je
cmp
add
add
jbe
call
aad
mov
adc
fldl
js
dec
aam
fsubl
dec
leave
idivl
sbb
cli
adc
lods
pop
inc
pop
push
popa
aam
fdivl
scas
test
ret
mov
scas
lods
ja
cmp
mov
lcall
shlb
sub
pop
test
push
nop
or
fmuls
das
pop
xchg
and
sahf
mov
shll
sub
arpl
lcall
xchg
add
cld
push
inc
lea
mov
xor
push
fwait
lods
pop
lret
cwtl
inc
push
xchg
cmp
mul
jmp
sbb
mov
imul
adc
jns
and
fcmovbe
push
jl
movsl
jecxz
jg
sub
lahf
ffree
idivl
pop
je
lcall
jmp
sub
xor
adc
sbb
hlt
insl
push
arpl
outsb
adc
pop
adc
xor
inc
ret
call
sub
mov
jp
fucomip
nop
push
push
scas
mov
bnd
sahf
jmp
push
mov
and
or
inc
mov
sub
or
ds
ret
mov
cli
sub
jmp
fmull
cmp
or
pop
push
ljmp
add
xchg
cmp
adc
adc
push
mov
cld
mov
or
arpl
jno
push
jo
movsl
sub
outsl
ret
jo
test
cwtl
inc
imul
stc
and
cld
gs
push
sub
fbld
sub
andb
mov
pop
xchg
lock
fadd
cmp
xchg
inc
pop
cmpsb
adc
out
mov
aaa
popf
lods
mov
insl
sbb
loopne
xor
inc
dec
stos
pop
cmp
jl
and
inc
lods
mov
scas
std
es
jbe
sub
ffree
jnp
in
fisttpl
mov
pop
push
push
cmpsb
test
test
or
sub
daa
cmpsb
dec
leave
push
sbb
sub
dec
mov
jle
fdivp
pop
imul
push
cmp
and
pop
push
xchg
mov
mov
pop
aas
inc
cmc
mov
pop
add
sbb
aaa
out
faddl
ret
sub
dec
pushf
cmp
in
ds
arpl
aam
xor
movsl
pusha
or
add
mov
test
xor
mov
and
xchg
shl
pop
sbb
jmp
xchg
jo
jg
dec
sbb
cld
add
ljmp
and
outsl
mov
rcrl
out
lahf
enter
and
adc
dec
fwait
out
es
mov
int3
adc
adc
and
add
lea
into
out
push
mov
adc
insl
pop
mov
out
mov
mov
lahf
rorl
sub
jo
mov
inc
out
mov
push
dec
out
jbe
jle
sbb
mov
xor
loop
inc
xlat
loop
dec
outsl
push
popf
cmp
inc
mov
in
loope
xor
pop
sbb
sub
imul
jmp
adc
xchg
mov
repz
mov
xchg
jle
mov
enter
std
nop
pop
rol
mov
imul
test
mov
push
mov
cli
out
dec
add
pop
xor
jae
push
movsb
add
inc
mov
jge
iret
cwtl
imul
xchg
mov
fcmovnbe
insb
loop
pop
mov
mov
inc
imul
out
decb
sbb
out
cltd
add
pop
mov
mov
out
push
mov
push
sbb
ficoms
jl
movsl
in
push
outsb
pop
and
or
mov
push
add
fcmovnu
lret
rclb
mov
mov
sub
sub
xchg
popa
pop
and
xor
xchg
pop
xchg
and
test
cmp
or
addr16
test
into
mov
and
xor
test
in
ss
mov
xchg
sub
jl
adc
cmp
inc
cmp
test
cmpb
in
stc
push
std
adc
loop
notb
sub
jne
xchg
cs
dec
lret
shr
cmc
inc
clc
jp
clc
push
mov
cmp
je
ret
mov
clc
out
pop
push
push
imul
gs
cmc
sarb
push
les
div
push
pop
xchg
into
cmpl
fs
xor
pop
jo
and
pop
cld
stc
sbbl
iret
xchg
sub
xchg
inc
or
sti
jecxz
dec
and
inc
jmp
cmpsl
fiadds
sub
outsl
mov
aas
push
jmp
dec
pop
push
sbb
and
sub
mov
and
popaw
stos
out
iret
addr16
cmp
jns
sub
or
jl
mov
sahf
gs
sub
rcrb
adc
add
out
mov
enter
shr
div
dec
mov
movsl
mov
test
sub
into
cmp
outsl
jo
mov
jb
cmpsl
push
jle
or
xor
jne
imull
test
jno
cmp
out
and
push
push
jae
fldl
sbb
cli
fsubrl
pop
mov
and
mov
aad
pushf
pushf
fs
push
dec
dec
cltd
push
movsl
and
dec
xor
cli
jp
test
jae
inc
fnstsw
insl
xchg
push
call
scas
jb
in
popf
push
push
push
lcall
pop
aas
adc
lahf
push
xor
mov
pop
incl
sbb
lret
push
dec
pop
outsl
cmc
xchg
dec
or
sbb
pop
and
sbb
mov
js
ret
pop
iret
out
jno
cli
mov
mov
xor
xor
push
ret
xchg
mov
jb
inc
mov
cmp
add
outsl
jge
insl
rcll
popa
jnp
pop
mov
sahf
imul
iret
pushf
out
nop
pop
push
push
cs
std
or
push
fisubrs
loope
call
pop
jge
xor
dec
sti
dec
adcl
jbe
ja
and
push
cltd
aam
fldenv
push
out
lods
mov
mov
mov
add
lcall
ss
xor
push
add
in
cmp
je
adc
jp
mov
das
fistps
lods
adc
cmp
sbb
imul
imul
xchg
adc
aas
idiv
pop
arpl
adc
xchg
lods
insb
imul
jl
sahf
call
imul
ja
cmpsb
mov
inc
add
pop
and
inc
data16
test
es
pop
adc
fcmovb
cltd
mov
je
pop
pop
scas
in
jns
les
mov
aad
mov
insl
lret
out
shrb
stos
lret
daa
cmpsl
mov
popa
sbb
call
add
or
punpcklbw
fwait
cs
add
icebp
mov
aaa
xor
pop
inc
and
jae
negl
xor
pop
fisubs
xchg
popf
push
sbb
mov
sti
loop
add
dec
xchg
sbb
push
xor
sti
cld
lret
icebp
movsb
pop
mov
ds
push
jbe
in
mulb
not
scas
cmp
xchg
mov
push
dec
xchg
mov
and
mov
scas
sbbb
add
ss
or
push
ds
mov
dec
adc
popf
or
icebp
mov
sti
cli
or
addr16
fidivl
mov
push
adc
js
xchg
pop
jo
and
call
imul
outsl
mov
repz
xchg
movzbl
and
daa
jns
xlat
mov
or
insl
add
add
xchg
jne
sub
es
scas
test
lret
adc
inc
in
adc
jns,pt
jg
cmp
mov
clc
xchg
mov
icebp
xchg
mov
sbb
jbe
inc
aas
loopne
and
mov
ret
test
cld
loope
jno
push
rolb
hlt
push
jmp
aad
jg
lret
iret
add
and
add
filds
mov
nop
out
mov
mov
xchg
test
imul
add
loopne
sub
pop
lods
push
test
addr16
and
xchg
aas
lahf
fistps
mov
xchg
dec
cli
popf
lret
insl
sbb
loope
in
sbb
dec
in
jb
shlb
push
dec
imul
sub
in
stos
sub
cmp
rorl
mov
into
icebp
dec
mov
push
mov
mov
mov
push
mov
popa
pop
imul
pop
ds
xchg
xorl
adc
mov
lods
cwtl
xor
sbb
dec
push
adc
insl
loop
push
xor
push
mov
push
sarb
jne
lretw
xchg
fidivrs
cwtl
std
mov
xor
jle
aaa
pop
inc
pusha
dec
fnstsw
jb
push
pop
mov
jl
idivl
es
test
adc
mov
or
lcall
int3
xchg
iret
sbb
xor
insb
outsl
popf
dec
mov
xor
imul
popa
into
out
and
cltd
fs
enter
ret
xchg
stos
ds
hlt
jp
adc
mov
pop
adc
fisubl
push
fldcw
pop
fscale
xor
sbb
ror
inc
pushf
jle
pop
mov
test
scas
push
xchg
pop
test
test
mov
or
xlat
js
jb
or
xchg
sbb
mov
rcr
xchg
cmc
fildll
jmp
ret
ljmp
outsb
adc
lcall
pop
es
cmp
and
jb
mov
mov
push
cmpb
mov
out
jne
pop
aad
jp
push
lahf
inc
or
bound
and
xlat
pop
xchg
stos
mov
out
and
and
ds
hlt
outsl
and
mov
fstpl
ret
push
cmp
jno
cld
lret
sti
or
pop
cmp
test
inc
mov
stc
lea
adc
cli
or
jae
mov
daa
in
pop
mov
test
pusha
jae
cmp
es
mov
sub
fcomp
pushf
adc
mov
push
jns
loopne
mov
and
hlt
adc
push
pop
push
repnz
test
push
add
inc
mov
cltd
mov
pop
aad
insl
loopne
stc
ret
jnp,pt
dec
loop
push
je
fcoml
mov
adc
xor
inc
mov
es
adc
dec
push
lahf
dec
pop
call
adc
out
loop
stos
xchg
aad
dec
add
in
mov
mov
mov
and
loopne
add
fstpt
mov
push
xchg
inc
popa
negb
fucomip
movsb
or
jns
outsb
xor
mov
mov
adc
push
clc
jns
and
xlat
sbb
es
adc
sub
mov
push
mov
add
lea
jnp
cmp
sub
out
popf
mov
xor
push
jl
pusha
decb
aaa
inc
loop
fsubrs
imul
movsb
adc
jecxz
stos
and
mov
dec
mov
cmp
mov
mov
shrl
test
ds
psrlq
fildl
jno
ljmp
arpl
mov
outsb
aam
ljmp
push
insl
in
or
xlat
ss
testb
dec
imull
mov
sahf
cwtl
lock
outsb
inc
sub
imul
outsb
sub
repnz
push
sub
cmp
popa
ss
imul
pop
xchg
cmp
xchg
or
fldl
mov
push
sbb
push
scas
mov
arpl
xlat
outsb
pop
push
jne
dec
les
mov
mov
xor
jb
ljmp
jecxz
inc
sbb
mov
ret
sbb
or
jae
xor
xor
stos
mov
xchg
jl
mov
and
mov
test
pop
inc
pop
inc
je
es
or
loopne
in
mov
shrl
sbb
mov
push
insb
cmp
xor
push
push
pop
inc
add
and
outsb
cld
mov
gs
hlt
xchg
sub
adc
mov
jb
mov
jmp
mov
mov
jp
mov
lahf
adc
mov
and
adc
push
mov
or
inc
push
or
mov
fidivrs
jl
iret
xchg
xchg
sub
notl
mov
out
lea
lds
sbb
hlt
imull
and
or
and
nop
or
test
cmp
jo
mov
ffree
addb
xor
mov
cmp
mov
lret
lea
sub
ja
sbb
aaa
stos
xchg
daa
rcr
nop
addl
xor
repz
dec
cs
or
arpl
jno
inc
and
sbb
adc
and
punpckhbw
cwtl
jns
lret
lcall
adc
test
mov
pop
repnz
or
es
in
je
mov
je
fisttps
adc
fs
and
or
mov
pop
xor
push
dec
xor
stc
xchg
xchg
sbb
push
out
repnz
inc
xor
sbb
pop
and
pop
push
pushf
mov
mov
cld
jmp
mov
sub
dec
sbb
ret
aaa
insb
sbb
pop
and
sub
adc
or
ljmp
dec
cltd
clc
mov
pop
les
nop
push
mov
insb
adc
subb
mov
pop
ret
pop
lret
loopne
fdiv
addr16
stos
adc
frstor
imul
shr
mov
xor
xor
sbb
inc
xchg
psrld
iret
je
xchg
adc
inc
jg
sbb
pop
mov
jg
aas
dec
cwtl
adc
and
imul
dec
fnstcw
inc
aad
push
add
cltd
leave
lret
data16
lcall
std
mov
xchg
fidivs
scas
lea
mov
dec
push
sbb
test
lods
test
cmp
push
and
adc
ljmp
iret
mov
pop
shrl
mov
repnz
loopne
cli
mov
pop
clc
js
sub
outsl
mov
xchg
cmp
mov
rolb
and
mov
sbb
loopne
in
ljmp
sbb
ja
cwtl
sbbl
xlat
scas
mov
and
cmp
jo
rcrb
in
mov
pop
loope
jmp
mov
mov
sti
mov
rorb
stos
inc
into
sti
lods
jo
clc
mov
cmc
lret
cld
ss
xsetbv
fsubl
sti
pop
aad
repz
out
mov
ds
aas
pop
push
xor
test
inc
mov
cmp
mov
gs
xor
jne
icebp
and
cmpsw
ss
dec
outsb
fisubl
mov
add
cli
loope
sbb
xor
dec
jns
add
outsl
fwait
and
lret
lods
scas
dec
insb
xchg
lock
stos
adc
and
xchg
cltd
xor
xchg
out
pop
out
out
add
js
cwtl
sbb
jg
cmpsb
push
push
cs
jge
jg
mov
mov
mov
jo
mov
sahf
adc
iret
and
xor
pop
imul
leave
adc
pop
push
mov
int3
sbb
mov
xor
xchg
pop
mov
inc
cmp
push
orl
int3
jge
lahf
les
subl
sub
lods
test
jae
pop
push
popa
lcall
jg
cmp
or
push
shll
push
jae
pusha
enter
in
ret
xchg
gs
loopne
nop
sbb
push
out
cmp
mov
addr16
cli
aaa
test
int3
inc
push
inc
lods
int3
insl
cmp
jmp
stos
in
jns
outsl
push
adc
out
pusha
adcb
popf
pop
push
das
cmc
fcoml
ds
xchg
in
sub
rcrl
pop
jecxz
mov
insb
stos
dec
mov
int
jae
fstpt
push
int
jb
loop
movb
insb
shlb
popf
mov
mov
dec
mov
adc
lret
pop
xor
mov
push
push
or
call
inc
in
cmc
jbe
push
fwait
push
mov
std
cli
xor
lret
and
or
add
xchg
ret
dec
jp
dec
mov
add
nop
and
push
pop
and
lds
in
add
sbb
jmp
jp
or
dec
xor
cwtl
jae
shl
vmwrite
lods
notb
push
cltd
fisttpll
imul
pop
dec
incb
inc
ja
test
jb
sub
sub
or
out
xchg
lea
mov
test
xor
shlb
std
mov
xor
mov
jle
fldt
sub
push
sub
and
mov
mov
data16
dec
or
jle
lcall
xor
decb
sub
xor
lods
fwait
mov
sbb
mov
popa
and
inc
xor
or
adc
and
repz
fadds
dec
sbb
pop
mov
jne
xlat
or
push
push
pop
mov
fldenv
jnp
mov
imul
push
cltd
cmp
fsubr
out
xchg
jmp
inc
mov
push
and
adc
push
pop
loopne
inc
aaa
insb
popf
call
pop
sarb
adc
repz
mov
mov
cmp
adc
jp
pop
imul
jl
dec
mov
fiadds
out
cmp
popa
rolb
fadds
mov
mov
ljmp
roll
in
je
adc
add
lret
mov
enter
fcomi
or
xchg
cwtl
jp
lods
dec
movsl
rcll
mov
out
xchg
outsb
dec
xor
jl
dec
stos
pop
inc
sbb
xchg
shlb
dec
or
dec
mov
and
fimull
nop
sar
sub
adc
jo
ror
addr16
lahf
mov
cli
jge
mov
cmpsl
xchg
sub
jnp
mov
popl
test
call
and
adc
adc
pop
insl
adc
insl
xor
or
cmp
inc
push
or
inc
js
and
adc
ret
les
inc
rorb
and
in
mov
pop
aam
sub
sbb
sub
mov
mov
cs
mov
sbb
icebp
mov
out
inc
lods
inc
outsb
xchg
shl
xchg
mov
xor
out
adc
dec
lock
inc
push
inc
mov
xlat
mov
cmp
dec
and
es
mov
mov
fnstenv
or
fisubrl
cmp
xor
mov
iret
std
aam
shll
fwait
imul
out
es
out
in
and
mov
ss
pop
cmpb
jo
push
cmp
xor
dec
jge
pusha
ret
loopne
in
xor
or
push
push
cmpsl
lahf
hlt
js
movsb
fisubs
jl
das
mov
lcall
fdivl
negl
pop
nopl
or
stc
icebp
negl
loop
ret
mov
push
outsb
push
mov
or
imul
pop
sub
fiadds
sbb
test
jge
xorb
dec
or
scas
sub
shll
mov
jae
jle
lock
add
jecxz
push
outsb
imul
lret
pop
cwtl
std
scas
stos
pop
js
scas
sub
aas
je
jnp
pop
subb
add
fbstp
mov
lahf
cltd
imul
hlt
cmp
xorl
imul
ds
and
leave
je
jno
subl
and
pushf
cmp
aam
inc
idiv
xor
enter
test
jg
fistl
out
setnp
sbb
jecxz
lods
xlat
lock
pop
xchg
mov
in
dec
and
and
int3
or
xchg
arpl
aas
jns
cld
sarb
dec
sbb
adcl
cmp
cwtl
aam
int
add
sbb
test
out
fs
cs
pushf
push
pop
push
add
call
sub
mov
out
xchg
mov
sub
neg
jno
xor
sbb
lcall
lods
pop
mov
mov
pop
test
pop
prefetch
jnp
cltd
das
out
add
and
pop
cmpsl
repnz
clc
int
pop
enter
push
inc
dec
outsl
std
sub
xchg
fisttpll
in
xor
inc
inc
add
adc
pop
jmp
dec
push
xor
adc
movsb
pop
sbb
xor
jecxz
in
push
in
sub
das
fwait
mov
fs
sub
inc
jno
xor
imul
sbb
mov
lret
lret
pop
push
push
jne
sbb
adc
call
lcall
loope
ljmp
shll
xchg
out
int
adc
fbld
das
sbb
test
jns
mov
and
inc
or
js
out
sahf
pop
int
dec
pop
xlat
pop
or
insb
sub
inc
insl
or
mov
mov
test
pushf
pop
push
stos
pop
lret
push
mov
shrb
lods
add
push
xchg
mov
loope
imul
cmp
int3
xchg
lahf
loope
push
ror
inc
ja
jg
push
sub
jno
mov
dec
scas
lahf
bound
cmpsl
nop
ret
loop
or
enter
imul
mov
fucomi
and
out
insb
imul
movsl
movsl
mov
add
adc
inc
cmp
push
lret
fistl
repz
mov
jle
jnp
jmp
int3
stc
cltd
xor
sti
movsl
jle
pop
mov
xor
cmp
mov
xchg
cmp
movsl
mov
adc
test
or
push
dec
xchg
adc
test
pop
cmp
adc
repnz
push
pop
cli
lret
loop
in
push
cli
xor
cmp
jb
stos
push
sbb
mov
les
fldt
push
faddl
hlt
or
sti
in
pop
aad
shlb
stc
int3
popf
xor
sbb
mov
cld
and
mov
bound
testl
xor
dec
mov
les
xchg
int
std
int
sub
mov
out
lret
mov
lret
test
mov
xchg
dec
adcl
pop
dec
shll
test
mov
dec
ficompl
add
insl
rcll
mov
dec
lret
dec
andl
pushf
jns
dec
push
sub
ja
addb
add
mov
cmpsb
test
mov
mov
mov
in
shrb
ret
mov
and
pop
cld
pop
mov
fcompl
stos
lods
rcll
xchg
push
or
push
lods
and
ror
mov
pop
and
rcll
push
call
pusha
jbe
in
ficompl
cmp
mov
jl
or
nop
jp
pop
in
jecxz
addr16
dec
adc
hlt
iret
and
movsl
jne
jnp
test
sub
xchg
add
ja
jb
das
sbb
add
test
or
push
push
xchg
sub
clc
insb
pop
jne
fldcw
mov
insl
add
jl
sahf
xor
scas
mov
jbe
mov
loop
jo
pop
xchg
mov
cmc
cmp
sbb
xlat
call
sbb
pushf
add
stos
repz
mov
test
mov
dec
repz
repz
ds
lock
cmp
cmc
push
fmul
std
fcmovnb
fnstsw
sbb
lea
notl
std
ret
cmpsb
cmpsl
cmp
inc
ds
adc
jecxz
call
iret
dec
mov
sub
mov
cmpb
and
fsubrs
inc
jp
stos
inc
les
ds
outsb
mov
loopne
xchg
in
or
cmpsl
popa
dec
imul
sahf
aam
movsl
cld
shlb
and
jg
scas
push
fs
add
sub
cld
enter
mov
xorl
rcr
jle
shll
pop
jne
ja
out
cmp
pop
cmp
jno
ret
fcomi
sbb
bound
mov
arpl
fnstenv
or
shlb
sar
in
and
push
js
or
outsb
scas
mov
in
xorb
inc
lds
dec
mov
jb
dec
les
jmp
pop
ljmp
insb
xor
xor
popf
cltd
xor
jbe
pusha
insl
and
mov
int
or
cmp
jl
jg
aam
ss
test
sub
ja
xlat
hlt
mov
ficoml
and
ret
lods
iret
lret
inc
cmp
nop
aam
xchg
lock
inc
pop
cmp
and
xchg
or
imul
lods
rcrb
call
rorl
scas
insb
mov
jge
stc
add
outsb
xlat
dec
sti
outsl
cld
add
leave
icebp
outsl
in
into
xor
inc
flds
loope
push
shlb
jnp
scas
gs
sbb
mov
jae
cld
movsb
aad
add
xchg
and
mov
push
into
fsubrs
mov
sahf
out
sub
test
push
cmp
mov
cld
cmc
out
outsl
das
out
mov
fcmovne
fwait
movb
cmp
xor
adc
ficomps
cmp
push
sbb
jg
xchg
add
in
daa
dec
test
adc
lret
stos
push
scas
or
imul
jmp
mov
cmp
mov
cmp
das
ljmp
add
data16
icebp
push
aaa
sbb
pop
fsub
or
cmpl
shrb
xchg
inc
sti
lret
mov
into
testl
ljmp
jo
shrl
cmpsl
repnz
mov
or
push
mov
or
dec
imul
or
stos
cmp
jmp
sbb
in
xchg
dec
sub
and
and
stc
sub
sbb
push
xchg
add
jne
mov
push
mov
ljmp
fimull
adc
dec
ja
push
mov
lds
mov
loop
sub
gs
jno
fwait
stc
adc
cmpsb
clc
pop
jecxz
insb
and
divb
push
mov
stc
cmpsb
in
jmp
mov
dec
std
jb
cmp
xor
xchg
dec
test
daa
ja
ret
jns
adcb
push
aad
jge
fwait
dec
sahf
mov
sub
xlat
js
xor
sub
xchg
stc
fsub
mov
dec
cmpsb
adc
repnz
scas
test
shlb
sbb
mov
add
mov
pushw
xor
adc
je
xor
ss
repz
push
inc
rcr
push
sub
vcmpss
imul
enter
stc
lods
in
repz
xchg
scas
sbb
fmuls
mov
sub
mov
mov
xor
sub
adcb
and
sbb
pushf
mov
dec
int
jp
popf
push
adc
sub
dec
inc
enter
cmp
es
adc
sub
sub
call
popf
stc
sub
orb
jecxz
mov
sahf
pop
inc
sub
fneni(8087
js
lock
dec
mov
fmuls
xor
imul
mov
jmp
jl
je
das
pop
movsl
clc
mov
mov
cwtl
add
aas
cmpsb
and
outsb
cmpsl
test
sub
pushf
mov
mov
loop
xor
or
es
xchg
pop
add
push
add
sbb
lret
jo
movsl
fs
sbb
lahf
int3
dec
in
out
jge
xchg
push
jp
ret
mov
adc
cltd
fs
adc
mov
jg
movsl
cs
mov
cld
ret
mov
mov
je
add
pop
ror
pop
dec
mov
lods
arpl
aad
pop
std
pushf
inc
adc
std
adc
inc
and
jmp
je
jmp
push
sarl
sub
push
std
mov
mov
xchg
mov
loop
cs
or
popf
mov
or
mov
cwtl
shlb
lret
jge
mov
dec
gs
add
stc
fmulp
dec
mov
xorl
hlt
test
xchg
fimuls
adc
test
mov
outsl
es
add
shrb
dec
lods
add
je
xor
jecxz
stos
and
imul
inc
inc
movsl
aam
mov
mov
ret
rcrl
dec
xlat
inc
icebp
stc
iret
xor
bound
dec
pop
xchg
roll
lock
sahf
mov
push
mov
pushf
pop
adc
les
test
lahf
repz
mov
jo
dec
loope
data16
and
xchg
push
callw
or
mov
dec
sbb
push
adc
daa
pop
fistps
shll
cwtl
out
pop
fildll
sbb
cwtl
dec
add
imul
push
test
je
push
jmp
push
mov
inc
push
aaa
imul
mov
pushf
push
cmp
push
pop
xor
arpl
fcomps
outsl
xor
sbb
inc
movsb
cmp
outsb
add
mov
push
mov
xor
stos
gs
imul
or
jo
xchg
pop
fwait
jbe
push
and
push
ret
or
stos
iret
xchg
mov
mov
add
fidivl
and
jns
js
mov
adc
push
sbb
mov
adc
fisttps
push
stos
push
lcall
sbb
gs
stos
and
in
push
leave
add
pusha
xsaveopt
stos
push
aad
sub
xchg
sahf
fisubs
xor
cmp
fcoml
lret
ds
sti
inc
xchg
mov
daa
mov
aam
mov
push
xor
sub
or
mov
mov
xorb
cmp
stc
cmp
inc
lds
dec
add
or
lods
out
cmp
jmp
aaa
cmpsb
sbb
or
movsb
add
adc
icebp
mov
mov
pop
popa
outsb
aaa
add
mov
sbb
xor
add
cwtl
adc
hlt
ds
pop
scas
mov
pop
test
aaa
jge
adc
inc
fdiv
jge
mov
in
xchg
adc
aad
outsb
lcall
test
pmulhw
inc
ss
cmp
std
aas
push
sbb
cmp
ret
or
mov
xor
repnz
int3
mov
leave
cmc
pop
test
xchg
and
mov
fs
cmc
cmp
jo
subb
push
outsl
push
inc
pop
and
lods
mov
addr16
push
dec
scas
fs
mov
cld
jge
sbb
loope
aam
push
repz
inc
mov
xchg
dec
add
xor
cmpl
sub
mov
cmpsl
or
js
andb
aam
pop
scas
xchg
stc
adc
sub
out
leave
mov
adc
out
shlb
lret
mov
out
iret
test
int3
in
jecxz
push
in
lahf
fildl
or
add
insl
xor
into
lcall
in
in
mov
pop
xor
dec
or
add
adc
popa
sahf
inc
fsts
mov
mov
add
sub
dec
cmp
fcompl
inc
or
and
push
and
addr16
js
insl
mov
clc
adc
mov
mov
jo
sub
test
aad
mov
and
pusha
lock
sub
enter
arpl
insb
jns
mov
dec
repnz
orl
and
mov
fldl
xchg
mov
sub
and
mov
mov
sub
mov
shll
arpl
mov
fidivl
jb
or
or
jae
pop
push
push
pushf
je
lea
mov
fs
in
popa
inc
adc
pushf
add
cld
lret
mov
pusha
cld
add
inc
test
mov
imull
leave
jl
mov
pop
xor
mov
dec
lock
test
in
inc
nop
lods
in
int3
adc
fwait
sub
push
inc
cmp
sbb
mov
data16
add
pop
mov
fs
inc
jnp
test
popf
imull
mov
jb
cmp
ds
rcll
pop
fs
lds
lea
adc
cmp
call
cmc
orl
movsl
test
push
popa
insb
add
push
mov
and
arpl
pop
jnp
lods
inc
mov
sbb
daa
pop
arpl
inc
inc
leave
xchg
push
xor
lahf
mov
imul
pop
and
mov
ja
cs
jecxz
ffreep
rorl
lods
dec
cmp
std
mov
sarl
push
jl
adc
insl
out
or
pop
push
lret
sti
clc
and
cmp
mov
outsl
enter
fnstcw
push
mov
test
inc
xor
sub
jae
jns
add
mov
add
lods
push
outsb
sahf
pop
fldl
jbe
addr16
mov
test
mov
mov
jl
mov
gs
xor
fst
push
push
mov
mov
inc
into
cmpsl
xchg
sub
or
popf
mov
lods
imul
push
or
ds
in
sub
out
xchg
popa
pop
lret
xchg
jp
test
mov
cli
mov
shl
rolb
mov
push
sub
and
fbstp
fwait
mov
je,pn
xchg
ljmp
dec
bound
jne
std
mov
fwait
stos
aaa
inc
mov
mov
out
icebp
sti
mov
pop
or
xchg
dec
xor
dec
push
adc
jmp
jb
loopne
sahf
fisttps
pop
das
mov
icebp
ljmp
jno
int3
mov
mov
stos
adc
pop
mov
hlt
lret
or
mov
cmp
fs
and
cmp
push
xchg
and
cmp
mulb
pop
daa
cmp
std
push
jecxz
addr16
sbb
xchg
fs
xchg
test
inc
movsl
popf
sbb
les
gs
fdiv
data16
push
xchg
lock
xor
or
adc
enter
stos
fsts
lahf
xor
or
rclb
pop
pop
pop
out
xor
push
les
ljmp
shrb
into
fimull
push
push
mov
sbb
pop
sub
test
push
stc
mov
insl
or
push
scas
pushf
and
jmp
call
xchg
sub
fs
scas
inc
mov
movsb
push
push
sub
lods
lods
xor
out
pop
sti
fildl
out
push
hlt
mov
movsb
loope
mov
scas
imul
pop
xor
dec
hlt
out
rep
dec
add
out
cmp
xchg
std
cs
mov
mov
mov
popf
aad
fcomps
ret
cld
push
sbb
fcmovu
stos
scas
call
mov
pop
sar
ss
jp
inc
lcall
test
int
push
outsl
mov
shlb
ja
dec
enter
mov
cmp
xchg
fisttps
pushf
adc
sbb
gs
pop
loope
rcr
repnz
sub
push
adc
in
dec
sbb
pop
pusha
out
and
divb
repnz
and
scas
sbb
jo
inc
cmpsl
mov
or
inc
and
and
jecxz
pushf
mov
shll
scas
add
pop
dec
jmp
mov
and
dec
inc
mov
cli
loop
xchg
pop
inc
mov
jecxz
rorb
into
insl
xchg
push
pop
push
jmp
jge
xor
adc
adc
cli
inc
mov
fcoms
lahf
xchg
in
fcmove
pop
add
and
jbe
adc
or
pop
or
es
mov
pushf
rclb
cli
add
popf
mov
imul
pop
popa
and
movsb
int
add
adc
sbb
addr16
push
pop
jmp
xchg
stc
adc
insb
aad
mov
cmp
xchg
popf
jecxz
mov
cmpsb
or
aam
xlat
xor
jns
mov
xor
or
cmp
pop
and
in
xchg
mov
add
iret
addr16
scas
mov
aaa
imul
mov
mov
mov
and
inc
enter
lods
or
dec
mov
lret
pushf
es
mov
adc
insl
dec
in
jno
mov
or
push
inc
sbb
inc
mov
pushf
js
call
popf
xor
mov
es
push
dec
cmp
inc
push
es
or
pop
outsb
sbb
jae
jno
stc
xor
arpl
ret
outsb
mov
mov
jecxz
push
imul
lods
and
push
shlb
scas
test
xor
dec
dec
scas
push
or
or
mov
das
mov
int
test
and
xchg
mov
out
clc
mov
jp
adc
divb
mov
movsb
push
xchg
rcll
xlat
adc
adc
xor
cmp
rcrb
dec
xor
xchg
adc
jo
mov
cmp
add
shlb
mov
cmp
lods
mov
and
jmp
lods
jno
xor
cld
repz
adc
push
mov
test
daa
xchg
mov
xor
fmulp
fs
lods
push
and
imul
cltd
xchg
stos
aad
dec
dec
xchg
movsl
rcrl
in
scas
push
mov
ja
cltd
test
xchg
stos
loop
dec
insl
cwtl
cwtl
dec
imul
cs
sub
pop
xchg
xor
pusha
mov
jmp
pushf
rclb
adc
mov
out
xchg
mov
das
and
in
popf
les
pushf
daa
mov
mov
and
daa
call
xchg
out
outsb
cmc
leave
mov
loopne
andl
pop
jbe
adc
in
adc
mov
imul
push
outsl
push
add
inc
pop
aaa
sbb
sbb
lcall
mov
mov
aas
push
lahf
sarl
leave
movsb
mov
das
cmp
pop
int3
or
pop
outsb
jb
sbb
jge
fcompl
pop
jae
mov
shll
pop
faddl
sub
out
imul
fbstp
and
fwait
sub
dec
push
test
test
xlat
push
pushf
xor
cli
std
adc
shll
pop
aam
mov
shlb
jmp
dec
hlt
pop
andl
sub
sbb
movsb
stos
mov
imul
add
cmp
push
popf
shl
mov
or
sub
pop
in
in
fildl
add
addr16
push
sub
mov
stos
push
mov
mov
add
gs
jno
xor
ret
rolb
out
in
xor
sub
aam
stos
pop
cld
mov
xchg
pop
rorl
mov
fstl
out
lock
cli
leave
pop
sub
jg
pop
incl
xchg
frstor
rclb
mov
xor
push
out
lret
cmp
cmp
pop
and
cmp
cmp
cmp
or
fcoml
std
pop
imul
mov
and
in
mov
cmp
outsl
push
in
add
add
pop
mov
or
xchg
mov
dec
adc
cld
xchg
mov
push
add
cmc
dec
shlb
sub
cmp
fs
jo
mov
ss
shrb
mov
mov
subb
lods
rolb
sti
jecxz
mov
adc
inc
lods
adc
movups
daa
ss
lret
movsl
cmpl
cli
xchg
mov
xchg
sub
mov
enter
mov
adc
sub
adcl
loop
mull
add
aam
ret
sbb
repnz
fists
fistl
mov
cmpb
xchg
mov
mov
shrb
jb
vdivpd
inc
xor
lock
jmp
ljmp
scas
pop
fwait
pop
test
add
icebp
mov
test
and
int
or
movsl
int
sbb
ror
stos
mov
or
push
std
mov
lea
lret
or
mov
adc
jmp
add
leave
cmp
mov
dec
push
cli
or
leave
in
fisubl
ret
adcl
es
fcoml
xchg
in
pop
pop
lds
enter
jmp
jmp
lcall
cwtl
aaa
sub
or
repz
mov
out
lret
mov
push
inc
ret
out
out
pop
into
sbb
fsubl
in
lret
je
xchg
and
or
push
lcall
push
imul
pop
and
add
fadds
test
aam
add
mov
fwait
pop
fwait
push
mov
lods
leave
out
stos
push
xchg
dec
mov
mov
test
jo
xlat
sub
sub
xchg
mov
cs
daa
sbb
xor
mov
pop
lea
and
pop
dec
dec
or
shll
mov
les
adc
bswap
out
repnz
push
shll
outsb
cmpb
out
mov
addl
repnz
and
pop
cld
mov
or
nop
aaa
jb
xor
sub
mov
and
and
les
push
inc
push
add
jmp
pusha
push
fwait
push
cmp
mov
mov
std
rorl
mov
cltd
and
lds
mov
xchg
imul
in
jp
add
cltd
lahf
mov
inc
repnz
insl
ret
xchg
jg
dec
jbe
xorb
cli
and
pop
push
jnp
fcompl
loop
jl
and
test
int
daa
fwait
sub
cmp
or
mov
add
ja
mov
sub
js
shll
sbb
popf
stc
adc
or
push
int
xchg
clc
xor
call
and
stos
outsl
testb
push
enter
jmp
adc
sub
cmpsl
add
inc
scas
fidivrl
repnz
es
push
aas
fdivl
dec
add
xlat
or
push
pushf
cmp
scas
pop
xchg
mov
mov
test
pop
repz
or
push
push
daa
dec
nop
xchg
dec
dec
mov
or
lcall
aam
add
pop
dec
lahf
mov
lods
mov
outsl
mov
mov
pop
push
and
lcall
xchg
or
movsb
shll
dec
mov
xor
ret
xchg
mov
cltd
push
enter
cbtw
jnp
xchg
cmpsl
mov
sahf
push
movsb
lret
and
shlb
mov
cmc
inc
frstor
push
ds
icebp
pop
arpl
add
jle
jne
fdivl
fisttpl
push
cmc
xchg
hlt
adcb
insb
xchg
jmp
push
dec
sbb
fisubrl
shl
loop
add
pop
adc
nop
gs
dec
jae
or
cld
adc
popf
scas
pop
mov
cmp
out
inc
fsubl
cld
mov
in
pushf
or
int
pop
xchg
mov
fldenv
adcl
cld
and
adc
lret
add
mov
mov
out
sbb
jecxz
subb
fcomps
mov
mov
inc
xor
call
cmp
dec
iret
dec
mov
pop
sbbl
sub
inc
sahf
inc
lahf
imul
xchg
push
ficoms
shll
xor
ljmp
and
cmp
btr
lock
xchg
jb
xor
jnp
out
addl
push
nop
nop
stos
push
adc
xchg
fsts
xor
push
imul
mov
in
cltd
es
add
push
outsl
cs
dec
repnz
and
lea
adc
pop
sbb
sbb
cmp
movb
fisubrs
fcom
cld
and
shlb
enter
mov
pop
jmp
fsubrp
nop
xor
jg
pusha
lods
in
insl
call
fsts
dec
xchg
test
insl
xchg
cmp
xchg
addl
inc
sarb
rcl
testb
or
popf
add
xor
test
aad
int
sbb
movsl
sahf
dec
inc
cs
mov
xchg
and
add
mov
mov
mov
mov
adc
fdivrp
movsb
out
or
jnp
mov
cmp
dec
cmp
pushf
mov
or
movsb
jmp
xchg
inc
sbb
push
movsl
inc
push
ljmp
sarl
pop
xchg
jne
mov
mov
mov
or
push
adc
cmp
cmp
push
sarb
mov
or
aaa
pop
cmp
mov
mov
sub
in
or
enter
out
inc
pushl
shlb
popa
pop
pop
cs
mov
push
xchg
inc
ret
stc
jb
clc
lahf
inc
mov
mov
cli
sahf
add
test
mov
pop
push
sbb
jp
bound
xor
imul
hlt
jnp
push
sar
xor
arpl
in
mov
mulb
or
or
out
xchg
adc
and
gs
pusha
push
out
inc
adc
adc
icebp
sahf
imull
jg
into
leave
mov
xchg
test
imul
mov
lret
add
aam
jnp
push
mov
jne
sub
das
mov
inc
dec
xor
cmp
jmp
jmp
xchg
outsb
xchg
xor
jle
jnp
hlt
ja
mov
cmpsl
mov
jb
cmp
iret
xor
ret
sbb
mov
sub
push
cltd
imul
pushf
xor
aas
iret
pop
inc
push
sub
mov
pop
lds
sub
sbb
push
adc
sti
aam
push
push
push
jbe
out
xchg
scas
sbb
pop
icebp
mull
jl
inc
data16
call
mov
adc
sub
sub
xchg
push
shll
call
cli
sub
fdivp
xor
pop
add
fldenv
xorb
imul
mov
in
add
mov
jp
sti
shll
shrb
add
mov
push
cmc
jp
push
jae
fs
lods
in
lret
fisubs
lock
adc
dec
cmpsl
lock
iret
out
push
lds
jmp
jg
push
cld
mov
xor
fists
fistpll
mov
xchg
fstpt
iret
fstl
rorl
ja
movsl
dec
rcrl
jmp
or
out
xor
callw
xor
mov
psadbw
add
cmp
and
sti
in
fcoml
xchg
xor
out
xchg
stos
jo
lret
pop
push
xor
add
pusha
dec
icebp
popf
pop
call
jno
jnp
sbb
pop
xor
es
adcl
push
mov
dec
dec
sbb
cmp
rorb
cwtl
fnstcw
push
push
lods
repz
notl
ret
cs
pop
lcall
mov
fsubs
xchg
jnp
cltd
and
inc
lcall
sub
inc
addl
push
call
loope
mov
insl
push
fsubs
or
lret
aas
into
mov
add
ss
mov
push
inc
or
nop
jns
sarb
lods
imul
push
add
popa
jae
push
mov
les
test
mov
sub
inc
dec
stc
inc
or
push
fistps
sbb
sbb
push
clc
rcr
popf
inc
cmc
cmp
lret
mov
mov
into
addr16
xor
push
push
mov
sbb
fnstcw
in
int3
das
xor
and
gs
xor
push
xchg
or
inc
push
or
negl
fmull
aad
inc
or
jecxz
xor
mov
fwait
pop
xor
or
inc
in
xchg
outsb
aad
push
ss
cmpl
scas
popa
hlt
bound
subb
jg
insl
test
daa
jbe
sub
push
outsl
mov
lahf
aam
cmpl
xor
sbb
arpl
out
cmc
lcall
and
xor
push
loopne
add
and
lods
scas
test
or
sub
pop
sub
lahf
packuswb
outsl
dec
fcoms
jle
rol
nop
sar
stos
mov
push
mov
xchg
ret
jge
push
ljmp
ret
mov
iret
cmpsb
adc
jmp
shlb
pop
sti
cmpl
dec
cmpsl
lahf
push
cmc
cmp
data16
dec
or
cli
movl
test
jbe
mov
pop
jno
daa
lods
pushf
mov
and
int3
popf
out
add
call
or
popa
ds
cltd
cli
jge
sub
push
lahf
add
push
fxam
ss
sti
xchg
ficoml
inc
outsb
jae
inc
pushl
fsubs
pusha
push
dec
negl
or
std
clc
xchg
push
pushf
sbb
xchg
out
leave
mov
fimuls
leave
imul
adc
daa
iret
or
popf
popf
pop
and
add
adc
bound
jge
lock
incb
sub
mov
mov
push
mov
shrb
pop
cwtl
inc
mov
sbb
mov
sbb
das
xor
ret
jg
xor
jmp
cmp
stc
in
aas
push
xor
or
imul
mov
push
xchg
pop
jmp
push
push
std
xor
scas
mov
dec
dec
jl
movsb
pop
insb
cmp
xchg
enter
push
bswap
push
data16
test
or
les
cmpsl
je
int
aas
push
sub
xchg
mov
popf
sahf
incl
out
jno
out
aaa
push
repnz
pop
jp
repnz
lock
jnp
dec
and
lea
mov
in
and
mov
dec
add
sbb
or
pop
inc
das
add
dec
xor
xlat
aad
shlb
xchg
data16
xchg
std
sub
lcall
fsubr
stc
push
mov
dec
mov
mov
movnti
jbe
mov
jb
pop
mov
movsb
pop
inc
icebp
popf
dec
aas
dec
add
scas
sbb
dec
repz
inc
dec
in
das
into
push
mov
insb
inc
jl
push
adc
mov
mov
cltd
mov
and
in
mov
fcmovnu
popa
xchg
fdivrp
and
xor
xchg
dec
adc
mov
mov
mov
into
rol
sarb
icebp
and
ljmp
add
jge
sub
sub
movsb
insl
std
pop
sbbl
idivl
jge
push
xlat
call
xchg
xor
jbe
daa
jmp
sub
iret
pop
scas
cmc
xchg
es
movsb
ds
mov
mov
sbb
dec
jo
sti
cmp
pop
push
jle
movsb
test
fmuls
xor
test
jb
rorb
mov
xchg
dec
loopne
hlt
cmp
cmp
ja
arpl
stos
iret
inc
sub
xchg
repnz
xor
cltd
jae
or
adc
xchg
fldcw
addb
pop
pop
add
iret
mov
cltd
xchg
jbe
fadds
jne
mov
pop
cmpl
movsb
fisubl
lods
or
leave
sub
stos
int
xchg
inc
lods
movsb
imul
push
sbb
pop
hlt
mov
mov
adc
dec
popa
inc
mov
push
dec
jl
sub
aad
das
dec
add
inc
lds
push
sub
push
leave
push
adc
icebp
inc
sbb
lret
jbe
popf
mov
push
mov
mov
outsb
push
aas
lds
sub
or
or
cli
sbb
out
fwait
jmp
or
dec
xchg
scas
lods
xchg
dec
lret
xlat
in
mov
out
call
in
cmc
mov
outsl
insl
ret
xchg
sub
xchg
mov
mov
pop
inc
dec
in
test
orb
ds
add
hlt
lcall
adc
jl
pop
mov
push
data16
xlat
mov
pop
pushf
lods
mov
or
inc
icebp
pop
movsl
or
push
loopne,pt
and
shll
inc
adc
or
xchg
jg
frstor
in
add
mov
adc
sbb
inc
rorl
insl
out
xchg
cmp
and
gs
pop
xor
cwtl
fadds
int3
out
mov
nop
adc
mov
mov
fildll
push
lock
xor
adc
loope
inc
or
movsb
cli
outsb
pop
mov
mov
dec
dec
popa
add
jp
daa
cmc
xorb
adc
outsb
pop
inc
fstpt
roll
add
mov
or
fwait
or
aam
jae
mov
xchg
jae
sub
mull
add
cmpsl
push
jne
pop
les
sub
aas
addr16
push
cwtl
sbb
enter
mov
ss
out
add
ret
push
push
outsl
enter
xchg
mov
sub
pop
popf
lds
loopne
cmpsb
push
out
pop
jmp
fmulp
test
rcll
decl
inc
xor
lea
cwtl
fdivrl
cmp
inc
pop
xchg
push
arpl
jmp
mov
dec
aam
aad
xchg
and
int3
out
push
and
adc
clc
sahf
lcall
cmp
gs
dec
insb
fsub
xor
sbb
lea
or
mov
es
xchg
cwtl
lock
pop
cli
pop
mov
push
stc
push
sub
push
bound
xchg
ljmp
and
mov
jns
cmp
movsb
out
inc
rcll
add
shr
outsl
mov
sbb
mov
push
and
stos
xor
mov
cmp
cmpsl
sahf
mov
sbb
jmp
and
addr16
cmovne
xchg
sbb
cmp
cltd
je
addr16
imul
mov
jge
lds
inc
ljmp
xchg
popa
out
mov
js
aas
xor
fidivs
lahf
sub
scas
shlb
xchg
outsb
nop
shrb
xor
loopne
aas
test
cld
fxch
mov
cmpsb
aaa
push
bnd
fimull
and
hlt
rol
sub
adc
enter
push
leave
add
int3
sub
popa
pushf
rorl
mov
adc
les
jnp
aas
mov
orb
xchg
aad
mov
outsl
mov
push
dec
cwtl
adc
lea
shlb
outsb
jb
mov
mov
into
ja
xchg
pop
lret
xchg
loop
lret
out
sbb
push
xchg
inc
push
sub
jnp
mov
ljmp
adc
not
mul
cmp
mov
pop
cmc
sbb
mov
xlat
sbb
push
iret
push
mov
ror
rcrl
mov
mov
mov
sti
je
imul
xor
outsl
adc
fmull
push
bnd
nop
push
pusha
xorl
cmp
idivb
in
movsl
and
popf
xchg
bnd
mov
test
jl
adc
sahf
movsb
inc
xor
dec
mov
push
mov
sti
push
jle
sbb
xchg
scas
push
inc
mov
ret
gs
js
shrb
shl
jl
cltd
aas
pop
cmpsb
adc
enter
mov
push
mov
xchg
cmpsl
push
dec
mov
sub
sub
sbbl
enter
push
mov
aad
test
inc
in
fistps
push
jno
add
addr16
jns
dec
adc
lods
hlt
test
jbe
mov
mov
dec
shlb
sbb
push
add
out
add
push
pop
sub
adc
jae
scas
and
and
mov
inc
je
nop
insb
or
push
nop
mov
popf
inc
in
clc
mov
rcr
push
in
ljmp
xchg
rcrl
cld
hlt
popa
dec
or
enter
je
fnsave
lcall
cli
jle
popf
xchg
xabort
xchg
in
push
sbb
fsubr
pop
adc
testb
or
addr16
cmp
push
stos
fs
pop
push
push
stos
int
adc
push
scas
sbb
or
add
mov
shl
adc
and
and
xchg
mov
cs
mov
fimull
mov
pop
jle
xchg
cmp
jo
jae
inc
ret
fwait
mov
sub
pop
lods
rcrb
jmp
jge
cmp
jno
cli
lods
jnp
adc
xor
fabs
push
and
bound
fsubrs
pop
sub
push
and
sub
xchg
push
insb
int3
cmp
leave
rcr
ror
shrb
cmp
push
out
lods
data16
movsl
lcall
push
bound
pop
cmpl
es
mov
aam
mov
stos
xchg
ljmp
in
mov
fsubs
xchg
scas
or
or
ret
add
jp
push
fidivs
dec
jmp
sbb
ret
dec
adc
inc
js
mov
mov
pop
aas
mov
sbb
dec
mov
cmp
dec
push
xchg
pop
mov
dec
shll
ljmp
inc
das
push
lock
hlt
dec
dec
cli
orb
das
shl
add
pusha
push
repnz
cmp
lret
enter
jl
fstpt
sti
sbbb
sahf
xor
popa
pop
inc
lret
jae
notl
add
and
push
mov
pushf
mov
cmpsl
jb
jb
inc
cltd
insb
xchg
xor
insl
xchg
inc
sbb
movsb
jo
stc
cmp
push
sahf
into
dec
shlb
sbb
mov
clc
call
dec
mov
test
sbb
scas
notb
stos
es
jo
inc
les
imul
into
pop
cmpsb
stos
jmp
rclb
or
xchg
cmp
cmp
hlt
ds
dec
les
daa
in
shr
jae
dec
mov
xchg
mov
shrl
push
pushf
call
inc
fisttps
shll
mov
roll
xor
inc
mov
mov
push
popf
lds
out
out
dec
add
rorb
ret
les
in
int
mov
dec
jl
sbb
xor
dec
sub
rorb
mov
dec
cltd
roll
in
mov
add
popa
lea
scas
dec
cld
cmpsb
loopne
push
jo
clc
notb
mov
repnz
in
xlat
xchg
incb
loopne
pop
rcrl
lcall
rcr
push
test
mov
in
fsubrs
dec
lods
aam
mov
sbb
jno
fistl
rcll
test
mov
add
sbb
pop
lods
mov
testb
push
jmp
jno
mov
mov
adc
fbstp
mov
out
jg
mov
mov
lret
sub
add
dec
adc
add
iret
and
cltd
cmp
scas
xchg
int
xor
add
cld
push
sub
push
cmpsb
push
enter
sbb
mov
adc
and
insl
scas
jmp
pop
inc
movsb
out
add
jbe
popf
ss
xchg
or
adc
dec
sub
push
jg
mov
and
test
leave
out
mov
push
js
xchg
mov
cld
sbb
int
or
cmp
cmc
pop
fiadds
or
cmp
xchg
ror
push
and
cmp
and
sbb
scas
outsb
and
inc
mov
and
ret
xor
aad
aaa
or
lret
outsl
sub
aad
jp
xchg
jle
outsl
jmp
jg
ljmp
and
aad
cmpsb
inc
xchg
arpl
and
daa
xor
lret
cltd
test
stos
mov
in
xchg
testb
xor
out
or
mov
call
pushf
loopne
adc
xchg
into
pop
movsb
mov
mov
add
cmp
dec
ds
push
adc
cmpsb
sub
movsl
ficoml
fildl
rolb
adc
cmpsl
xlat
dec
ret
int
mov
and
jno
sub
pop
sbb
fs
stc
pop
sub
loop
mov
addr16
popf
ja
or
push
popf
dec
lret
mov
pop
xchg
mov
xor
orb
and
fnstcw
sarl
pop
inc
jno
movsb
push
out
fwait
jl
adc
add
add
sbb
test
out
mov
out
iret
or
and
cs
xchg
push
push
xchg
and
dec
iret
icebp
lods
cmp
jmp
jo
scas
test
movsb
testb
imul
addb
jnp
lcall
mov
das
sbb
movsl
and
sahf
inc
sbb
push
nop
pushf
cltd
and
mov
mov
mov
xor
nop
sbb
or
mov
mov
test
leave
outsl
jge
and
das
xor
out
mov
loop
std
sarl
pop
fsts
jbe
xor
or
mov
aas
mov
sbb
jae
and
push
adcb
mov
xor
das
stos
pop
push
aad
jmp
xchg
or
sarb
lret
test
cltd
jg
inc
sub
sub
cmp
ret
xchg
add
mov
mov
mov
int3
lcall
testl
stos
rorl
xor
into
mov
test
aaa
mov
add
js
push
ss
movl
xor
inc
push
lods
mov
arpl
lods
ss
pushf
aas
movsb
divb
popf
rcrl
es
mov
scas
mov
inc
mov
mov
sbb
sub
inc
xor
mov
shrb
or
xchg
mov
scas
jbe
sub
lahf
mov
dec
out
pop
xchg
push
fstl
mov
sub
scas
push
sub
mov
jne
lret
pop
sub
sbb
icebp
movsl
xor
mov
mov
xor
cmp
scas
adc
inc
and
pop
jbe
or
in
adc
jno
je
dec
call
xor
jmp
fcoml
jp
mov
pop
insb
loope
or
pop
adc
and
or
fisubl
pop
inc
lock
leave
cmpsl
js
jae
mov
lds
pusha
dec
dec
subb
roll
inc
sti
cmpsl
jbe
push
xchg
test
xor
sub
fisubrl
mov
out
mov
mov
lea
sub
cltd
and
cmp
push
jae
or
mul
lret
loope
pop
inc
outsb
jno
xchg
sub
iret
cld
cmpsl
hlt
outsb
mov
adc
insb
mov
or
dec
jae
dec
adc
ds
test
cli
into
fmul
xor
fsubl
push
jb
mov
movsb
movsb
std
xchg
mov
fsubl
and
xchg
push
clc
sbb
inc
sbb
push
aaa
lock
mov
and
ret
mulb
in
arpl
sbb
cmp
test
add
fimull
pop
ds
xchg
jns
cmova
call
push
nop
xchg
stc
cmpsl
je
sub
mov
sbb
xor
sbb
daa
fxtract
jb
xchg
lds
sub
xchg
addr16
mov
cltd
insl
mov
negb
loopne
ficoml
push
mov
mov
mov
jnp
or
lods
std
iret
push
movsb
xlat
xlat
mov
icebp
push
pop
addl
mov
sbb
mov
cltd
sbb
mov
in
ret
mov
mov
mov
xor
jg
aaa
mov
daa
sbb
push
and
mov
stc
lock
and
je
push
sub
imul
pop
cld
mov
enter
mov
insl
jbe
stos
cmc
addr16
jae
fwait
jo,pt
hlt
jae
pop
das
and
mov
lods
mov
cltd
iret
jecxz
cmp
sbb
or
push
inc
dec
leave
xchg
cwtl
into
jne
sub
cmp
pop
inc
push
enter
sbb
push
mov
pop
sbb
mov
push
xor
dec
addr16
push
inc
mov
adc
out
js
xchg
or
or
mov
loopne
shrl
lea
pop
aam
or
lahf
add
push
push
sbb
sarb
sbb
test
clc
aas
jb
shll
pop
and
xchg
inc
cmpsl
sahf
adc
lea
xchg
push
cli
xchg
or
nop
ljmp
add
rorb
out
jae
mov
sti
dec
cs
enter
lcall
sbb
ds
cltd
test
mov
std
xchg
sahf
sub
ljmp
outsl
daa
in
ja
jg
xchg
xor
hlt
lret
push
cmc
call
push
inc
dec
xchg
inc
xchg
rorb
cwtl
xor
ret
std
inc
pop
mov
mov
or
icebp
inc
stos
cld
mov
movsl
mov
push
into
lods
addb
xchg
cwtl
mov
cwtl
dec
mov
cmc
js,pt
push
push
jo
mov
sbb
cmpl
dec
dec
testl
aas
jg
mov
xchg
lods
bound
roll
sub
jbe
out
and
nop
scas
add
orl
aam
jbe
jg
jbe
sub
outsb
inc
cmp
cwtl
outsl
xchg
mov
add
adc
mov
cmp
pushf
xor
cmpsb
aad
daa
insb
jecxz
in
insl
push
mov
test
call
icebp
add
dec
sahf
mov
sbb
mov
or
fisubl
hlt
stos
inc
jmp
rorl
nop
mov
sub
inc
pushf
add
cs
xchg
iret
lea
and
sub
ret
mov
icebp
push
pushf
push
sti
outsl
jb
sbb
push
xor
stos
add
dec
dec
out
add
push
mov
je
jecxz
rcl
pushw
push
push
adc
mov
mov
test
jle
daa
faddl
fs
leave
scas
shrl
pop
lds
inc
xor
jecxz
xor
adc
faddl
dec
ljmp
add
push
cwtl
push
lods
pop
insl
and
dec
adc
mov
fmuls
xor
sti
outsl
fdivrl
ljmp
pop
fwait
jnp
addr16
inc
xchg
pop
xor
jl
jge
mov
mov
dec
lret
inc
adc
test
dec
jmp
cmc
mov
mov
sub
add
dec
xor
mov
xor
cltd
test
pop
scas
ljmp
adc
sbb
call
mov
xchg
xchg
add
shr
stos
sbb
mov
push
mov
imul
divb
enter
loope
inc
xchg
push
sub
out
aas
mov
add
mov
pop
inc
ss
inc
and
mov
cmp
icebp
into
mov
jl
test
stos
fsts
cmp
sbb
cmp
mov
xlat
sub
jmp
dec
imul
sbb
nop
aaa
mov
and
dec
mov
or
mov
push
shl
icebp
adc
stc
ret
jne
mov
xchg
outsb
in
or
xchg
pop
shll
pop
insb
jbe
stc
loopne
int3
pop
pop
ja
cmp
mov
ljmp
faddl
mov
lcall
mov
loope
roll
xchg
xor
fwait
push
xchg
outsb
jmp
ficoml
or
fnstenv
repz
cmp
mov
enter
cmp
aaa
push
jle
or
negl
shll
or
mov
inc
lods
fisttpl
das
mov
adc
pop
lea
mov
sti
cmpsb
or
sub
pop
hlt
dec
out
mov
sub
and
ljmp
out
pop
pop
xchg
jno
in
fsubrl
mov
and
leave
rorl
pop
push
or
mov
sub
mov
push
mov
adc
xor
and
and
test
outsl
mov
dec
stos
imul
inc
fildl
lods
xor
std
lret
jnp
inc
sbb
loopne
xchg
rorl
nop
pop
inc
loop
sbb
rcll
mov
lds
mov
in
repz
jmp
mov
inc
pop
cmp
push
das
jnp
xchg
enter
lods
faddl
push
sbb
popl
pop
in
outsb
jg
mov
jg
nop
mov
scas
mov
xchg
shll
cmp
in
lea
int
lea
std
mov
jecxz
jle
out
add
cmpsb
cli
test
xor
in
rcrb
cmc
mov
shll
pop
ss
cwtl
mov
movsl
jg
ret
sahf
jo
aam
incl
push
sbb
lcall
pop
xchg
sbb
dec
icebp
xchg
fs
cs
sbb
add
mov
not
lret
mov
inc
push
cmp
and
push
je
insl
add
hlt
mov
push
or
sub
dec
cmp
xchg
out
mov
push
xor
lcall
cmpsl
into
add
mov
rcrb
ss
je
and
mov
xor
or
dec
dec
mov
sbbb
into
xor
fildll
or
or
push
leave
mov
sub
dec
icebp
pop
cmpsb
shll
call
inc
sub
adc
sbb
cmp
sub
sbb
movsb
mov
shr
sub
insb
mov
out
cltd
lock
cmc
repz
int3
mov
lock
fs
ret
movsl
stos
xlat
imul
add
adc
cmp
test
adc
mov
jae
fwait
mov
jno
xor
stos
mov
mov
and
add
mov
ret
lock
test
cwtl
popf
out
cmp
aaa
jo
ret
sahf
in
daa
mov
add
icebp
gs
add
xor
in
xor
lret
ja
dec
mov
clc
xlat
cmp
stos
mov
fwait
pop
loope
mov
js
sbb
inc
mov
jmp
xor
test
gs
xchg
fcoml
jl
jge
jle
lods
cwtl
movsb
inc
test
push
loope
sbb
xlat
out
lds
sti
cmp
inc
inc
add
rorb
filds
sub
test
xchg
cmp
xchg
fisubrs
xor
sarl
sub
nop
cmpsl
int3
mov
mov
and
xchg
pop
dec
push
inc
xor
pop
pop
popa
int
jmp
add
inc
popl
sbb
push
lcall
imul
div
subl
adc
mov
test
pushf
push
arpl
push
insb
jo
repz
fs
jb
mov
int3
dec
dec
cltd
cld
outsl
out
ret
jnp
ss
subl
mov
sbb
xor
xor
imul
nopl
add
cmpsb
sahf
fcmovbe
jmp
aaa
fimull
or
dec
and
mov
popf
add
mov
fnstcw
pop
mov
ss
daa
and
mov
movsb
and
mov
nop
push
sbb
mov
aam
mov
js
inc
push
dec
add
and
mov
fildll
js
add
jmp
pop
lret
cwtl
adc
jns
mov
andb
lods
jb
loope
gs
stos
ret
mov
ss
sahf
pop
mov
scas
ja
add
and
call
dec
cmp
jbe
js
add
mov
push
je
test
scas
pop
push
mov
inc
cmpsb
or
clc
jo
inc
xchg
ja
sbbb
out
inc
repnz
mov
or
call
inc
cltd
xor
fwait
xor
aas
lahf
lods
mov
sub
sbb
arpl
mov
fbld
addl
arpl
jg
notb
fwait
adc
iret
cwtl
push
cwtl
mov
xchg
push
fistps
imul
repnz
inc
xor
push
stos
xlat
jecxz
xchg
fisubrl
xor
popa
inc
jge
push
movsl
add
mov
add
jb
loope
inc
adc
push
test
push
xchg
jp
das
xchg
pop
lahf
fs
roll
xchg
fs
push
push
dec
add
cltd
lods
mov
sarb
loope
out
in
mov
rorb
lcall
pop
je
ljmpw
mov
ret
adc
sub
testb
addr16
andl
inc
push
push
mov
sub
rolb
or
fistpll
sbb
add
jmp
mov
lea
add
addl
insl
and
add
nop
mov
popa
iret
jb
loop
or
adc
int3
mov
inc
movsl
clc
mov
fdivs
in
pop
inc
and
ljmp
pop
iret
cmp
movsb
popf
xchg
adc
out
dec
hlt
fcmovbe
call
rorb
sub
add
push
xlat
xor
in
fs
mov
or
dec
mov
loope,pt
lds
cmpsl
mov
ret
and
addr16
out
aam
add
cmp
xchg
ret
sub
outsl
pop
jge
in
pop
cmp
mov
cmpsl
push
icebp
loop
push
or
cmpsl
sub
jecxz
push
incl
cltd
push
mov
fstps
push
and
pop
shlb
out
mov
movsl
lock
test
aad
mov
fs
test
cmp
hlt
or
or
cli
mov
mov
sub
pop
and
sbb
aaa
cmp
push
push
xchg
enter
test
leave
inc
xor
popf
pop
jns
loopne
xchg
mov
pop
push
cmp
jmp
addr16
sbb
outsb
test
mov
pop
mov
push
popa
ljmp
and
mov
js
aam
or
adc
mov
inc
notl
insb
xorl
negl
pushf
sub
sbb
mov
dec
shll
rorb
inc
loopne
pop
add
xor
and
xchg
inc
daa
pusha
clc
das
lea
adc
movl
mov
cmp
frstor
mov
lcall
and
dec
in
xchg
mov
adc
rorb
test
iret
rcr
pop
daa
jl
pusha
outsl
popw
ret
dec
int
jns
es
jns
push
sbb
cltd
addr16
push
inc
dec
cmp
enter
popf
sti
scas
add
jo
push
xlat
loope
dec
inc
xor
pop
pop
push
jne
daa
or
mov
adc
xor
add
daa
stos
in
lret
in
in
xlat
pop
mov
test
mov
daa
test
inc
fadds
fwait
sub
js
push
repnz
cmp
shll
push
scas
aam
push
push
push
or
in
addr16
sbb
movsb
and
fstpt
jl
dec
lcall
dec
jae
mov
xor
and
int3
add
bound
cmp
addl
xor
iret
dec
pusha
cmp
xchg
push
mov
mov
xchg
adc
xor
or
fiaddl
adcb
imul
dec
rclb
mov
jne
call
mov
inc
repz
test
push
push
push
cmp
xchg
aaa
add
mov
push
jecxz
and
xchg
push
aad
cli
cli
xor
gs
rcrl
xchg
insl
sub
add
or
leave
sbbl
ljmp
add
ret
mov
xor
and
pop
mov
decl
repz
imulb
cmp
or
xor
stos
inc
fistps
movsl
iret
stc
out
and
lock
xchg
or
je
dec
sbb
or
stc
insl
test
push
stos
gs
or
movsl
jp
cmp
mov
mov
shlb
cmpsl
fstp
stos
adc
andb
mov
cltd
ficoms
sti
adc
cmp
inc
into
test
mov
add
inc
add
data16
add
cs
pop
xor
or
pop
add
imul
in
add
mov
xchg
push
mov
mov
add
scas
inc
inc
adc
in
or
inc
and
fistpll
mov
mov
adc
inc
lea
xchg
in
xor
fwait
inc
sbb
xor
or
data16
stos
shlb
pusha
cmpsb
pop
inc
mov
hlt
addb
das
ret
mov
dec
pop
leave
popa
cmp
ja
jbe
mov
mov
icebp
lret
jecxz
pop
jns
push
adc
hlt
int
cmc
aas
movsl
adc
push
add
push
fs
push
push
inc
dec
jae
cmp
cmp
pop
scas
lahf
fisubl
cmp
add
mov
adc
inc
mov
mov
xor
xor
adc
std
add
add
popf
aaa
sbb
pop
iret
shr
in
outsb
or
and
pop
adc
test
stos
mov
imul
xchg
inc
add
and
add
test
mov
int3
out
data16
push
movsl
pop
ret
repnz
cwtl
push
and
gs
rorl
xchg
leave
mov
ja
xchg
xor
mov
ja
xchg
lahf
hlt
mov
adc
fld
mov
fsts
repnz
mov
xchg
fistpll
xor
jg
aas
scas
jle
cmpsb
cmc
or
push
sarb
adc
adc
sub
xor
fimuls
sub
cmpl
dec
jne
hlt
xor
icebp
arpl
stos
fdiv
mov
lods
jb
pop
lcall
dec
add
xchg
out
lds
add
xor
test
test
mov
mov
nop
jmp
add
icebp
adc
push
ret
sti
mov
xor
mov
mov
mov
dec
nop
arpl
mov
pop
cmp
mov
push
push
addb
cld
jp
pop
gs
iret
pop
dec
cmp
mov
cmpsb
push
into
push
push
or
sub
mov
jae
sub
cmc
pop
dec
scas
xor
or
dec
scas
mov
inc
mov
or
cli
xchg
pushf
fcmovne
jbe
dec
mov
inc
dec
addl
js
loope
dec
fwait
mov
jns
leave
mov
psubb
jnp
adc
dec
icebp
xor
mov
jo
mov
rcrl
jno
rorb
mov
mov
ss
jmp
xchg
xchg
fsts
push
mov
int3
subb
faddl
adc
lret
cmp
xchg
pop
inc
outsb
push
and
sbb
es
shl
add
mov
mov
cmp
into
mov
adc
or
push
psubusb
out
movsl
and
roll
leave
mov
imul
mov
test
cmc
inc
lock
lea
inc
sub
out
popa
lcall
and
aad
nop
mov
push
jae
fwait
mov
push
mov
mov
hlt
daa
push
shlb
ja
shlb
push
xchg
orl
stc
adc
push
roll
aad
xchg
or
inc
je
movsl
daa
sbb
cmp
pushf
jg
pop
sub
outsl
mov
adc
icebp
adc
sub
rclb
dec
sub
lret
or
cmc
testb
sbb
jae
test
test
pop
adc
flds
inc
xchg
lock
cld
mov
sbb
movsl
mov
and
loope
pop
mov
add
sti
pushf
jbe
out
inc
sti
push
es
aam
mov
xchg
imul
movsb
es
xchg
mov
pop
inc
pop
cltd
or
aas
xchg
pop
scas
xlat
dec
cmp
std
test
mov
jbe
sti
xor
lds
movsb
pusha
mov
cmp
jae
inc
rorb
cld
sbb
arpl
jns
or
stos
xor
cmp
mov
decb
call
mov
rorb
xor
int
imul
lret
insb
pop
pop
and
test
shll
cmc
dec
sbb
push
add
js
bndstx
gs
or
push
adc
lock
inc
jno
mov
lods
ret
mov
imul
push
mov
pushf
xchg
fldcw
inc
adcb
add
xor
push
mov
rcrl
inc
pop
popa
push
scas
xorb
sbb
lcall
xchg
clc
test
sbb
roll
sub
inc
into
fisubrs
into
sub
pop
or
call
push
leave
inc
adc
insb
lea
ret
xchg
inc
shrl
out
inc
jb
push
pop
outsl
loop
dec
mov
in
dec
sbbl
or
mov
adc
xor
ja
inc
adc
inc
xchg
add
and
cmpsl
hlt
adc
cmovns
sbb
pop
jge
mov
testl
and
xorl
jmp
rorl
or
cmpsl
push
jle
or
cld
stc
mov
fbld
les
out
dec
pop
add
dec
rcll
addr16
add
rcll
inc
mov
lock
push
xchg
bound
addl
pop
test
push
pop
cltd
ss
repz
push
sti
sub
dec
fiaddl
xor
aad
cmp
sub
xor
cmpl
mov
cmp
icebp
push
popf
aas
cmp
fs
push
dec
ss
loop
cmpsb
scas
dec
aam
push
cmpsb
cmpb
fisubl
movsb
inc
clc
add
out
dec
outsb
inc
icebp
je
into
xchg
cmpb
rcrl
outsb
in
push
ret
lock
out
inc
mull
jge
test
add
push
call
call
mov
lret
shrb
outsb
stos
or
adc
pop
lods
add
loop
hlt
addr16
call
sub
xor
push
mov
js
jmp
dec
pop
fstpl
call
in
stos
ja,pt
imul
rolb
push
lret
cmpsb
add
jl
mov
fldt
cmp
sub
add
loopne
push
or
push
jbe
mov
push
ret
push
inc
push
mov
push
mov
mov
lods
cmp
or
mov
dec
sar
leave
gs
mov
je
rcr
jge
push
jo
popa
lods
lods
icebp
cmpsl
sub
das
ret
lret
push
push
adc
movsl
lods
lods
pop
loopne
mov
mov
xchg
dec
sbb
xchg
pop
jmp
cmp
orb
out
das
push
xchg
push
scas
lods
fwait
cwtl
add
adc
shlb
mov
xor
sahf
lret
movsb
iret
inc
push
arpl
adc
in
frstor
stos
push
add
xchg
xchg
leave
ds
mov
dec
out
ror
push
mov
cmp
aad
push
clc
loop
sbb
push
inc
xchg
test
fiadds
push
aam
xchg
dec
mov
das
mov
jmp
pop
pop
fcoml
and
repz
das
cli
out
add
mov
scas
shr
pop
cli
xor
jo
inc
insb
outsb
aam
pop
test
dec
test
pop
rorb
add
aaa
adc
xor
andb
icebp
or
cmp
filds
mov
pop
je
mov
ret
inc
cli
add
pop
push
sub
cmp
or
fwait
xor
jo
pop
add
and
scas
das
mov
cmp
or
cmp
add
xchg
addr16
divl
fidivrs
cltd
fsubp
aas
mov
pop
out
dec
stc
in
in
cmp
mov
push
inc
lock
nop
rclb
cmp
fs
dec
inc
sub
xor
scas
push
popa
sarb
mov
sub
hlt
dec
mov
orb
dec
enter
cmpsl
pop
adc
call
jecxz
adcb
xor
and
mov
shl
push
adc
fsub
test
scas
and
lock
sbb
adc
sub
push
test
in
mov
mov
icebp
add
shll
test
and
les
sub
and
inc
mov
out
into
imul
xchg
clc
in
cwtl
sub
lods
pop
sti
jecxz
imul
adc
or
inc
addl
cmp
ja
sub
jg
and
inc
inc
inc
dec
sbb
or
dec
aad
mov
popa
clc
dec
movsl
repnz
pushf
stos
jb
repnz
aad
cmp
out
fcoml
inc
mov
sub
mov
xchg
sarl
pusha
xor
loope
mov
aas
mov
iret
mov
xor
adc
sahf
iret
adc
lock
cwtl
lds
cmp
xchg
fbld
push
enter
cmp
push
loopne
test
arpl
xor
repnz
add
aam
mov
and
or
aad
add
lret
xor
imul
dec
sub
push
mov
call
sbb
jb
cltd
ja
int3
fildll
ret
inc
pushf
adc
in
mov
sbb
rorl
jnp
iret
test
push
scas
out
sub
pop
in
lcall
sbb
ja
adc
cld
in
pop
aaa
test
aad
mov
in
enter
fcmovu
adc
xor
add
imul
cmp
out
or
fldenv
jmp
cmpsl
hlt
mov
adcb
cmp
cmp
push
pop
sbb
jmp
inc
ret
sub
mov
test
push
lods
add
sub
cwtl
push
inc
addr16
arpl
dec
fidivs
mov
shrl
mov
mov
push
adc
cltd
lds
movsb
loop
mov
push
rcl
add
mov
lahf
inc
sub
popa
repnz
jl
clc
imul
aas
stos
pop
bound
shl
or
xchg
test
add
idivb
movsb
adc
fstps
mov
aad
mov
jb
mov
pop
lea
dec
sub
icebp
scas
jnp
sbb
push
cwtl
jp
xchg
jb
nop
jnp
mov
mov
and
ljmp
pop
cmpsl
pop
cmp
shrl
push
jbe
outsl
insb
out
pop
xchg
mov
cmp
pop
jecxz
jecxz
pop
loopne
lret
push
int3
xchg
pop
stos
push
lds
xchg
add
jnp
pop
in
out
mov
cs
cmpsl
mov
mov
mov
shl
pusha
cmp
pop
test
adc
mov
mov
jbe
aas
dec
dec
xor
sti
sbb
ficoml
das
call
sbb
inc
mov
xchg
jae
test
ljmp
pop
fbstp
fiaddl
rep
jb
addb
cltd
adc
mov
jne
aam
ret
mov
mov
xor
outsb
adc
lret
add
repnz
hlt
mov
xchg
jp
lahf
pop
fldl
cmp
mov
xor
mov
fwait
mov
adc
insb
jno
mov
test
fcomip
add
mov
adc
mull
aam
xchg
divb
mov
pop
daa
inc
jecxz
stc
lea
mov
push
xchg
adc
fsubr
mov
adc
pop
imul
push
and
rcrl
xchg
fucom
add
adc
out
adc
xchg
xchg
aad
jmp
sub
push
pop
pop
hlt
mov
test
dec
inc
sbb
data16
ljmp
cld
sbbb
dec
jne
jnp
xchg
lfs
into
shll
test
adc
mov
sub
xchg
subb
nop
mov
jge
sub
jp
dec
in
popf
out
add
pop
mov
xor
jno
xor
mov
fsubr
repz
mov
cmp
inc
ljmp
inc
cmp
jo
insb
xor
int3
add
mov
adcb
push
repz
pop
outsl
pushf
les
imul
ret
mov
mov
xor
movl
dec
int3
pop
push
addr16
pop
push
ret
lcall
or
mov
sbb
sbb
sbb
popf
adc
addl
divb
in
jl
test
add
adcl
lods
cmp
dec
sbb
adc
orl
fsqrt
fimuls
push
insb
rcr
popa
pop
adc
sub
cmp
jnp
and
pop
xor
dec
icebp
push
jbe
push
or
pushf
pop
pop
inc
icebp
pop
add
inc
aaa
jns
lods
pop
mov
adc
sub
rclb
lods
jg
cld
mov
dec
mov
or
add
adc
inc
out
cmp
pop
sub
add
dec
adc
arpl
pop
or
pop
lret
lret
jle
ret
inc
test
cmp
cmp
shlb
inc
dec
mov
enter
push
je
mov
sub
loop
std
lods
inc
out
xor
and
push
xor
loop
xorl
mov
fsubl
movsl
lret
orl
les
jno
sbbb
cmc
or
aaa
push
mov
add
clc
sbb
jecxz
xchg
leave
dec
dec
lods
pop
mov
xchg
mov
in
or
dec
push
cmp
outsb
lods
notb
pop
push
aam
insb
shrb
cmp
stos
adc
mov
clc
and
jbe
jp
cmp
js
sbbl
inc
pop
aad
sub
in
rorb
sbb
movsl
enter
insl
xor
xor
adc
addr16
test
push
je
inc
int3
pop
fwait
lcall
les
lahf
pop
shlb
rol
aaa
add
add
pmaxsw
mov
sbb
jg
imul
lret
test
pop
or
movsl
aaa
inc
fisubl
fidivrs
fnsave
scas
jge
push
xchg
pop
mov
rorb
loop
dec
sbb
cwtl
and
sbb
lret
notl
push
push
jb
jle
cltd
push
xor
pop
push
or
int
cmp
inc
xor
cmp
mov
and
fwait
iret
and
dec
icebp
rorb
aad
add
inc
dec
pmullw
imul
push
sbb
aas
pushf
andb
sbb
cmp
inc
fst
lods
adc
jge
lret
xchg
popf
push
jno
lret
and
add
xor
repz
xor
int
rcll
movsb
xchg
loop
pop
out
ds
movq
jne
and
dec
and
hlt
addb
mov
sti
lret
loop
mov
push
dec
popf
sbbb
jmp
mov
add
dec
dec
movsl
mov
movsl
inc
mov
push
out
push
das
and
push
aas
sbb
sarb
icebp
sahf
out
cltd
fistps
push
outsl
push
jge
xchg
scas
cmp
cmpl
imul
push
dec
mov
testb
sbbb
push
mov
push
push
sbb
div
ffreep
cmp
in
adc
lahf
pop
out
fldenv
sarb
les
cwtl
xchg
add
add
js
push
sbb
loop
or
xor
ljmp
jo
mov
dec
jmp
ret
ja
cwtl
fst
fnstcw
jmp
xchg
imul
push
clc
lcall
push
int3
mov
push
bts
jo
inc
pop
mov
mov
jb
jg
jg
mov
sbb
lcall
xchg
in
xchg
mov
addb
push
mov
or
int3
mov
push
dec
push
cld
adc
sbb
adc
mov
sahf
mov
pop
js
outsl
fcomp
sti
push
xor
sahf
popf
and
push
pushf
enter
and
iret
out
pop
test
inc
pop
sbb
insb
mov
adc
int3
push
jle
fiadds
push
adc
xlat
and
repz
jbe
rcr
cli
ja
insb
subb
movsb
daa
test
int
stos
cld
loope
add
xchg
lret
jge
dec
sti
or
gs
out
aad
xchg
fildl
adc
cmp
pop
and
inc
jb
adc
mov
cmp
orb
xor
negb
les
cli
pop
clc
jecxz
and
mov
mov
xchg
xchg
pop
stos
jmp
inc
add
sub
cli
rolb
xchg
dec
lcall
push
and
dec
inc
xor
in
or
add
jae
lret
xor
outsl
sbb
cmc
jne
decb
mov
leave
in
cmp
mov
jnp
xchg
jae
xorl
push
sarl
hlt
icebp
cmp
xorl
aam
inc
dec
sbb
lcall
movb
sbb
test
sti
test
mov
ret
cs
mov
sahf
xor
pop
dec
xchg
xlat
jns
xchg
aam
jp
clc
xor
arpl
sahf
sti
cmp
pop
inc
in
jbe
sbb
mov
xchg
push
pop
xchg
mov
jmp
stc
andb
iret
dec
pop
lahf
pop
outsb
or
xchg
mov
push
stc
mov
mov
mov
jae
jne
sbb
or
mov
inc
movsb
inc
mov
or
shl
outsl
cs
mov
in
and
and
or
add
mov
jle
ss
arpl
cmp
out
or
daa
aas
mov
xchg
sbb
ret
in
jmp
stc
jmp
jb
push
adc
xor
cmp
push
mov
fsubrs
addr16
es
and
popa
roll
xchg
dec
inc
xor
cmp
dec
subl
or
lods
imul
mov
add
ljmp
jmp
push
mov
inc
rolb
mov
stos
add
mov
xchg
dec
xchg
out
loop
add
sub
stos
int3
mov
sub
out
or
cld
xor
sti
push
cmp
inc
pusha
pop
sti
mov
ds
js
pop
dec
popa
lret
or
cwtl
dec
sub
mulb
mov
mov
mov
lea
sub
sarb
xor
lea
mov
arpl
das
inc
cmp
cmp
dec
fs
mov
jb
jge
or
into
and
ficomps
cld
cmp
leave
aad
inc
in
les
fldenv
lock
mov
push
cmp
xor
pop
push
and
aaa
pusha
xchg
jb
and
or
jmp
cmp
and
mov
movsl
out
sbb
shll
pop
jb
aas
xchg
push
flds
pop
fwait
loopne
push
mov
clc
test
repnz
mov
movsb
sub
out
push
out
sub
cmpsb
enter
lock
xchg
shr
repnz
icebp
xchg
add
in
imul
jg
xor
mov
hlt
lods
mov
and
out
lahf
daa
cmp
adc
sbb
or
int
ret
push
inc
outsl
outsb
push
and
lock
push
sbb
cmp
popa
fisubl
cld
or
mov
or
jne
push
std
inc
mov
mov
sbb
loopne
sbb
and
popa
pop
and
movsl
cwtl
fmull
jecxz
ds
push
mov
mov
push
insb
pop
jecxz
inc
aas
aad
xlat
sbb
call
inc
stc
push
popa
and
dec
dec
mov
loop
call
ja
push
testb
shrb
js
push
shl
inc
fsubl
cmp
jne
mov
movsl
movsb
fnstcw
or
out
add
lea
aaa
jns
pop
jle
jno
enter
mov
das
je
ss
adc
das
out
lock
out
jp
jg
mov
sahf
pushf
arpl
mov
xlat
push
xor
xchg
jne
xor
aaa
mov
outsl
dec
sbb
arpl
fcomps
jecxz
bound
loope
adc
iret
xchg
mov
in
xchg
xchg
cmova
cmp
dec
test
adc
cmpsb
pop
and
mov
adc
mov
lret
in
cmp
add
push
ljmp
test
xchg
mov
fsts
sti
push
push
lea
in
bound
and
jne
ds
movl
js
push
into
cwtl
mov
jbe
xlat
js
lock
ss
jne
dec
push
and
stos
xchg
jmp
sbb
fidivl
pop
pop
inc
cmp
mov
out
mov
or
movsb
outsl
insl
call
xchg
cmp
push
dec
add
repnz
or
mov
fdivs
dec
adc
sbb
ds
pop
mov
lret
decl
adc
loop
xlat
gs
pop
ss
sarb
andb
inc
in
xchg
iret
push
sub
sbb
dec
lods
imul
test
mov
push
pusha
pop
sbb
in
jne
ret
ds
push
cli
data16
movl
rorl
jl
inc
xor
out
pushf
into
push
into
push
repz
inc
add
sub
cmp
stos
adc
add
sbb
pushf
mov
pop
and
pushf
xchg
mov
jbe
inc
push
fldl
or
pop
dec
dec
roll
cmp
pop
inc
lret
inc
cli
enter
push
adc
mov
ret
push
pusha
adc
jns
pop
jo
jb
and
aad
cs
movsl
adc
test
cmc
xchg
out
loop
sub
push
push
and
or
cwtl
xor
ret
jnp
push
add
aaa
in
sbb
push
mov
jmp
imul
adc
scas
or
ud0
aam
xor
push
out
cmp
aaa
pop
lock
cmpsl
mov
pusha
lods
push
xor
and
andl
mov
dec
pushf
lret
mov
enter
xchg
cmpsb
int
push
aas
lcall
jno
aam
pop
or
inc
jmp
sbb
ja
mov
cmpsb
or
mov
sub
push
bswap
mov
es
jge
leave
mov
inc
jmp
lcall
pop
sub
nop
test
fsubrl
outsl
jb
push
nop
std
lcall
sbb
fistps
dec
stos
pop
push
push
pushw
inc
jbe
in
push
test
in
push
imul
stos
pop
cmc
pop
sti
lods
jae
adc
rorb
xor
addb
je
mov
dec
fmul
test
or
push
sarb
in
xor
ss
push
mulb
xor
push
movsl
sub
lods
xchg
inc
cwtl
ret
xchg
push
adc
int
loop
jae
mov
cltd
adc
test
fwait
das
pop
fists
mov
lcall
lock
add
lock
dec
push
lods
sub
sbb
mov
lods
call
nop
mov
scas
ret
mov
sbb
test
and
add
push
sarl
push
sahf
mov
roll
imul
imul
sbb
jns
das
add
jg
std
inc
mov
ror
mov
loope
frstor
xor
js
mov
ror
aaa
stc
js
das
lcall
mov
jmp
lock
jg
xchg
int3
out
aad
sub
dec
scas
lret
gs
fcmovbe
nop
mov
mull
mov
rcr
xchg
and
pop
insb
sbb
inc
or
sub
stc
and
push
fwait
popf
add
lock
divl
dec
testl
adc
fiaddl
push
mov
jle
jle
jle
xor
in
stc
adc
repz
int3
loope
std
jns
xorl
jae
cmp
add
shlb
test
sbb
adc
mov
jae
imul
lahf
test
sbb
jnp
cmp
loop
int3
adc
fistl
sub
arpl
cmp
popa
adc
clc
cltd
bound
mov
xchg
dec
xchg
cltd
mov
mov
add
mov
in
cltd
stos
add
iret
jecxz
roll
cwtl
sub
add
push
mov
pop
inc
or
mov
out
xor
xor
xor
call
mov
stc
and
xlat
xlat
lea
incb
dec
push
sbb
mov
lea
test
mov
jl
mov
mov
add
cmp
ds
js
fldenv
sub
sub
dec
test
imul
clc
ret
cmp
jae
cwtl
test
xor
inc
enter
outsb
pop
andb
add
je
cli
lods
adc
xchg
ja
mov
shl
in
sub
lods
sbbb
aaa
inc
sub
push
jbe
repnz
jae
and
das
ljmp
push
repnz
pop
jge
in
insl
lcall
or
push
hlt
push
mov
inc
push
mov
shl
adc
enter
adc
roll
mov
push
sub
mov
xor
mov
stos
mov
lds
cmp
adc
call
push
mov
inc
cmp
test
pop
cmp
add
xlat
and
mov
sbb
fdivrs
frstor
dec
je
sbb
mov
shrl
sar
xorb
shl
and
dec
out
cmp
mov
test
call
in
outsb
test
in
dec
gs
add
jecxz
rolb
pop
xchg
mov
int
xchg
dec
loop
movsb
mov
inc
movsb
movsl
cmp
pop
shlb
testl
stos
jmp
popf
xor
push
movsl
push
movsb
inc
jp
cld
nop
leave
cwtl
or
dec
lock
sarl
jno
sbb
jbe
ljmp
mov
es
gs
ljmp
mov
lret
jb
xor
add
jecxz
and
dec
pop
fldenv
mov
fs
xor
xchg
aad
inc
mov
and
stos
fidivrl
popf
xor
fnstenv
js
insb
insb
xor
sahf
js
adc
mov
jp
rorb
das
xchg
xor
cwtl
cmpsb
rclb
mov
xor
mov
and
sub
or
pushf
sub
pusha
into
stos
leave
aas
fstpt
jp
push
cmp
mov
outsl
mov
push
push
pop
fisubl
or
mov
push
jmp
sub
xor
aaa
cli
sarb
or
sbb
mov
dec
cmp
adc
add
or
and
orl
fwait
pop
sbb
dec
and
ja
sbb
andb
addl
andb
ss
cmc
lock
add
mov
mov
insb
pop
cmp
rorb
mov
dec
xchg
pop
inc
sbb
pop
sbb
xchg
sub
data16
insl
mov
xlat
mov
stc
rcr
shll
lcall
mov
in
jo
add
and
test
shll
jne
std
sub
add
pop
test
bnd
fcomi
xor
add
push
scas
sbb
test
popfw
sub
aam
out
push
mov
and
xchg
inc
push
shlb
gs
pop
push
mov
mov
sarl
loope
pop
icebp
add
js
call
test
ja
push
std
aad
sbb
in
pusha
and
lods
jmp
pop
negb
xchg
pop
loope
enter
mov
push
enter
out
cs
xor
or
mov
movsb
in
push
or
divl
enter
inc
xchg
cltd
jae
sub
sti
imul
mov
sub
xchg
aas
push
push
dec
sub
jl
shll
sbb
or
mov
adc
es
stc
call
shr
pushf
jb
daa
xor
sub
add
jmp
sub
pop
in
cmp
shlb
mov
jnp
lea
sub
fwait
or
adcb
sbbl
xchg
mov
call
fdivrl
xchg
test
and
mov
pop
addl
call
dec
push
movl
jo
pop
jge
call
add
pop
mov
in
sub
leave
daa
fildll
sub
mov
in
ds
inc
data16
and
loopne
ffree
jns
push
adc
inc
push
aam
lods
jb
push
push
add
dec
int3
mov
in
jns
pop
lds
adc
scas
daa
jb
in
xor
dec
fistpll
mov
sti
mov
xchg
inc
pop
ret
add
ja
into
push
mov
out
dec
mov
lea
test
cmp
mov
cmp
fcomi
lret
dec
ret
loopne
dec
dec
fs
or
jno
enter
xor
ret
jp
pop
dec
aam
mov
xchg
jno
test
pop
out
jbe
imul
fnstenv
jb
or
call
testb
xlat
sub
mov
lds
add
std
data16
push
xor
popa
cld
fistl
push
lea
call
push
pop
push
sub
mov
leave
ljmp
sbb
pop
loop
mov
ja
adc
xor
xor
bound
adc
fdivl
enter
mov
mov
scas
and
sbbb
add
pop
popf
lret
das
divb
insb
jbe
cmp
lds
aas
cltd
cltd
fistl
push
fdiv
stos
gs
pop
insb
sub
mov
cmpsl
mov
and
mov
xlat
sahf
xchg
aad
sbbb
pop
add
cmp
movsl
inc
cli
imul
fs
out
shrl
in
or
inc
sbb
stos
stc
adc
jno
test
sbb
test
xchg
add
addr16
and
mov
movsl
iret
cmp
ja
adc
rorl
push
out
jge
and
mov
insl
dec
inc
loope
push
out
scas
lds
int
repz
imulb
hlt
dec
imul
push
inc
mov
mov
jne
int3
loope
and
out
je
loopne
mov
mov
adc
mov
xchg
repz
mov
sarl
inc
push
sub
sub
xchg
or
enter
inc
cmpsl
lods
pop
cmp
inc
subl
movsl
dec
mov
jae
sub
mov
je
jne
xlat
xchg
nop
cmpb
into
cmpsl
pop
dec
xlat
testl
rorb
lods
int3
test
jg
fldenv
cmp
adc
std
scas
cmpb
or
dec
setne
std
inc
jae
sbb
call
in
jle
jp
sub
clc
xchg
jle
cli
or
lret
jb
jmp
push
adc
cmp
lds
sub
sbb
add
xlat
dec
jno
push
orb
jae
xlat
cmpb
out
push
and
dec
xchg
iret
and
test
cmp
xor
gs
aaa
xchg
std
aad
inc
adc
cltd
leave
mov
pushf
mov
mov
shlb
sub
mov
add
xchg
mov
jbe
jg
sbb
outsl
gs
push
ljmp
stos
xor
xchg
iretw
arpl
pop
and
jl
jnp
sbb
mov
sub
push
push
sub
subl
repnz
sbbb
jnp
jae
cmpsl
shl
sub
sti
cmc
fbstp
xchg
mov
sbb
test
mov
daa
clc
fists
pop
sti
jbe
pop
cmp
xor
and
cmp
and
mov
inc
out
push
out
cmp
aas
mov
sbb
cmp
mov
mov
hlt
ja
add
push
inc
and
xchg
sub
cltd
mov
outsb
in
in
int
and
cmp
sub
stos
mov
jp
push
daa
or
jae
test
mov
push
dec
mov
mov
stos
imul
ficomps
inc
dec
repz
out
xchg
ss
ja
ds
sub
daa
jge
cwtl
xchg
lods
pop
ss
xor
push
shll
rorl
push
cli
pop
jmp
movsl
xlat
lret
cmpsb
mov
mov
jecxz
mov
scas
pop
sbbl
pushfw
fisttps
scas
out
cmp
fcoms
test
xchg
xorb
cli
aad
xor
inc
or
es
ja
jmp
push
mov
sbb
pop
cwtl
sub
rcll
testb
mov
mov
ss
icebp
cltd
icebp
testl
mov
fdivrs
sub
jb
jb
movsl
lret
incb
fs
xchg
xorb
mov
inc
sbb
mov
or
in
lods
jmp
sub
ss
loope
fwait
int
sub
mov
inc
popa
int3
dec
repnz
jmp
cs
sbb
pop
pop
dec
ljmp
add
inc
orb
sub
outsb
lret
jns
xor
pop
or
in
mov
xor
outsl
xchg
adcl
not
mov
or
adc
add
scas
xlat
imul
jnp
and
es
sbb
daa
lret
and
aas
enter
jl
stos
imul
dec
leave
inc
inc
pop
jb
lods
aam
fld
andb
ljmp
pusha
mov
or
adc
adc
add
xchg
aaa
mov
xchg
enter
scas
adc
in
movsb
mov
xlat
orb
push
lcall
insb
push
inc
rol
xor
lret
outsl
arpl
icebp
push
jne
xchg
lock
xchg
jecxz
shrb
loopne
inc
rorb
mov
fbstp
jecxz
in
cld
inc
icebp
jbe
mov
fisubrs
mov
inc
mov
fsts
sbb
dec
stos
jo
in
xchg
mov
mov
sti
jns
xor
inc
pop
add
rcl
and
sbb
xlat
repnz
test
and
mov
dec
stos
sub
push
push
addr16
subb
shlb
mov
cmp
ljmp
outsb
push
sub
es
pop
inc
or
and
push
jl
imul
and
xchg
hlt
jmp
xchg
lcall
ret
jge
movsb
aaa
or
arpl
js
sarl
sarb
sbbb
rclb
lods
cld
ss
in
lahf
mov
fadd
cwtl
clc
outsl
pushf
add
push
out
outsb
mov
mov
cltd
mov
mov
movsl
xor
aaa
lds
jecxz
dec
mov
xchg
xor
rorb
enter
push
add
stc
inc
and
mov
daa
sbb
sub
and
xchg
test
jo
pop
in
imulb
sub
add
add
inc
mov
dec
fldt
pop
das
jns
pop
les
pop
fstpl
add
aas
call
insl
push
mov
int
sbb
push
lods
loop
mov
mov
jns
mov
cs
mov
and
push
lcall
push
inc
dec
push
fs
xchg
insb
sbb
repz
std
mov
adc
push
rcl
rorb
sub
add
mov
and
int
les
mov
push
dec
xor
out
clc
adc
dec
stc
mov
inc
or
xor
mov
jb
pop
cmc
xlat
or
jbe
mov
dec
test
xor
shlb
jmp
int
loope,pt
pop
push
xchg
cmp
push
sbbb
rcrb
pop
std
in
lods
dec
call
es
popa
jno
inc
xor
dec
mov
movsl
add
add
sbb
mov
repz
out
xor
sbb
pop
and
clc
inc
rdpmc
jb
inc
jo
push
dec
movsl
shll
in
or
ja
adc
and
or
xor
mov
rcrl
sbb
fs
cmp
mov
into
js
cmp
add
push
movsb
lock
lods
jne
cmp
pop
add
mov
fs
add
lcall
jl
inc
mov
mov
sbb
push
adc
in
in
jl
sub
test
cs
adc
jmp
mov
outsl
call
cmpsb
add
xchg
adc
rcrb
push
ljmp
pop
mov
sub
mov
lock
fbld
pop
pusha
aaa
lret
cmc
push
inc
pop
rcrb
xchg
rclb
add
mov
push
push
inc
das
negl
loopne
loop
or
inc
sbb
cmp
mov
sarl
test
dec
lock
mov
mov
out
shl
and
mov
fs
jne
popf
sbb
mov
cmpsb
or
push
cmpsb
add
stos
cmp
testb
mov
or
sarl
cmp
movsb
mov
arpl
inc
aaa
rcl
cli
mov
push
imul
adc
add
lahf
sbb
push
mov
or
in
insb
lods
fwait
test
int3
or
lods
xchg
mov
cmp
loop
mov
rep
or
inc
xchg
sbb
stos
call
data16
ljmp
testb
dec
mov
xor
aad
mov
mov
sti
dec
jbe
mov
stos
jge
xchg
mov
outsb
test
bound
stc
jbe
inc
pop
imul
push
xlat
sti
out
js
std
int
aam
in
push
cmp
cmpsl
mov
lahf
dec
or
or
pop
lods
arpl
lret
cmp
fistps
cld
sbb
pop
add
cmc
push
in
adc
push
cld
jp
cwtl
mov
mov
push
push
xchg
jne
jp
test
cwtl
cwtl
aad
test
mov
sbbb
add
adc
inc
mov
dec
xchg
push
cmpb
mov
pcmpeqw
adc
ja
mov
xchg
xor
mov
dec
por
inc
push
ficoml
jns
ljmp
dec
aad
add
stc
dec
test
addb
inc
hlt
loope
pop
mov
lods
sti
mov
sbb
test
call
sub
mov
rcl
adc
aam
fildll
push
jae
xor
mov
sbb
inc
jb
mov
or
dec
sahf
inc
sub
int3
cmpsl
mov
mov
push
loopne
scas
icebp
nop
inc
fsubl
dec
xlat
jns
add
sub
popf
lods
stos
and
mov
adc
dec
das
push
mov
imul
mov
dec
sub
mov
inc
jne
cwtl
or
jp
push
test
xchg
test
mov
ljmp
push
outsb
sub
inc
aas
add
xchg
popa
loop
das
lods
mov
sarl
push
lret
dec
loop
fmulp
and
jge
and
arpl
xor
iret
push
shl
fsubr
subl
sbb
jmp
jp
cmc
adc
dec
jbe
call
enter
adc
mov
adc
scas
pop
mov
sbb
shlb
std
add
mov
mov
fists
ficomps
push
mov
rcrl
stos
out
mov
cmp
stos
rolb
xchg
jnp
mov
mov
insb
sbb
or
sbb
cs
pop
push
mov
mov
jb
mov
xlat
xor
insb
fwait
daa
jge
sbb
and
pop
pop
lret
int3
rcll
ret
enter
pop
xor
jae
xor
mov
add
in
mov
inc
dec
xchg
xchg
pop
lret
lods
repnz
loop
nop
scas
out
fcmovb
out
and
pop
mov
xchg
push
popf
sbb
mov
dec
out
sti
xchg
dec
sbb
fwait
lods
das
imul
jg
mov
fstps
cwtl
cmp
fld
loop
sbb
pushl
pop
mov
cmp
mov
and
stos
les
jno
stos
les
fbstp
mov
xchg
pop
out
fxch
or
test
mov
inc
addr16
xchg
das
push
inc
mov
or
mov
nop
mov
cli
inc
lahf
sub
gs
stc
insb
mov
cld
adc
test
and
lea
inc
dec
xor
mov
jae
adc
cmpsb
inc
movsl
add
push
ss
push
xchg
or
add
push
pushf
cmp
pop
ret
testl
or
and
cmpb
stc
dec
jbe
pop
in
add
push
lret
cmp
sbb
ffreep
cmpsb
adc
sti
fisttps
je
mov
jmp
fwait
lods
add
ja
in
pop
fisttpll
movsl
lods
and
sub
popf
sbb
mov
addl
outsl
mov
lds
cltd
add
push
in
aaa
filds
test
scas
xor
mov
movsb
imul
mov
loopne
jns
mov
ja
or
lret
pushf
adc
es
mov
xchg
imul
in
mov
ljmp
pop
add
inc
xchg
int3
adc
push
jl
add
mov
xchg
loope
cmp
xor
lods
jo
ret
adcb
mov
xchg
add
pop
addr16
arpl
scas
scas
push
mov
mov
adc
jno
mov
or
mov
andb
ficoml
arpl
push
pop
jmp
and
dec
or
notb
dec
jle
add
cmp
cmp
dec
adc
test
pop
jp
sub
aam
daa
jle
in
fmuls
mov
mov
aam
jbe
jmp
fldt
adc
hlt
mov
out
or
pushl
push
ret
mov
push
lahf
mov
or
add
jmp
jecxz
pop
pop
leave
sub
xchg
in
adc
jne
cld
mov
ljmp
es
xrelease
js
push
and
subl
cltd
add
es
test
aad
test
incb
pop
jns
mov
cmpsl
aaa
ret
mov
or
cmovne
iret
cmc
inc
dec
mov
das
iret
pop
cltd
rclb
xchg
sub
jns
stc
ret
data16
mov
cli
sub
inc
xchg
aam
es
fimuls
out
ja
aas
sub
pop
ret
test
insl
mov
jge
lea
ret
pusha
mov
mov
add
sub
push
jge
stos
mov
cmp
in
pop
int
inc
lods
inc
das
pop
mov
dec
into
mov
sub
jmp
sub
mov
cmp
mov
dec
jo
or
in
fwait
mov
mov
pop
negb
mull
cmp
mov
mov
sahf
fimuls
lret
push
inc
mov
rolb
fstl
and
dec
in
mov
in
and
jns
or
sbbl
dec
add
movsl
sbb
clc
mov
and
mov
sub
jp
out
in
repnz
jl
fsubl
dec
inc
inc
imul
fdivl
and
movsl
lcall
pusha
inc
mov
pushf
dec
mov
sbb
adc
pop
lahf
hlt
insb
xor
mov
or
pop
loope
jge
cmp
mov
xor
inc
push
in
in
addb
les
xchg
subl
jmp
dec
mov
stos
je
aam
nop
xor
mov
aas
into
cmc
xor
jecxz
xor
pop
out
rorl
flds
insl
addr16
adc
jae
lds
or
daa
fs
cmp
es
rorb
xchg
lock
jb
mov
cmp
loope
inc
mov
add
push
or
int3
mov
or
nop
subb
lods
imul
cmp
inc
or
enter
jae
cmc
cmp
cs
xchg
sbb
adc
mov
mov
pop
stc
adc
stos
dec
push
lea
ja
adc
into
mov
push
sbb
pushl
dec
arpl
xchg
fistps
mov
add
sub
aam
xor
roll
mov
adc
sbb
jo,pt
out
or
sti
loop
cmp
ss
sub
out
ds
lcall
lahf
in
insl
sahf
pop
pop
les
jno
jge
mov
mov
or
cs
in
add
push
sti
jecxz
iret
cld
inc
jne
test
sbb
in
mov
xchg
push
jnp
adc
mov
sbb
or
sbb
xor
mov
movsl
sbb
pop
jns
ss
jnp
shrb
icebp
fadds
bswap
gs
das
sahf
xor
aaa
inc
lcall
ficoml
scas
xchg
test
inc
loope
cltd
pop
cmc
sar
cmp
cmpsl
fimuls
test
jmp
dec
push
xchg
mov
test
fidivl
sbb
rol
cwtl
and
cmp
call
cmp
popa
add
jno
push
int3
dec
andb
mov
jl
adc
push
cwtl
arpl
dec
scas
jecxz
jno
mov
int
cmp
jbe
xchg
jg
or
mov
pushf
push
push
pushf
mov
imul
push
sbb
ja
sub
jecxz
sbb
push
mov
xor
gs
jmp
mov
push
xchg
lcall
cmpsl
or
push
pop
dec
vmovntps
nop
out
pop
add
stos
ret
sub
aaa
iret
dec
xchg
sub
or
mov
mov
repnz
inc
inc
shlb
fdivp
push
rol
lock
ret
leave
sbb
repnz
dec
mov
pop
cmp
and
stc
popf
cmc
inc
negl
imul
dec
addr16
cmp
test
push
das
sbb
dec
jmp
mov
pusha
lret
pop
cmpsl
mov
push
cmp
inc
into
xlat
ss
xor
mov
xor
movsl
orb
xor
pop
daa
xchg
fcoms
push
push
scas
xor
es
stos
xor
divl
out
sbb
cmpsb
adc
lock
shll
sbb
push
jbe
movsl
int
xchg
ja
xor
mov
xchg
add
jl
xchg
daa
sbb
iret
cmp
fidivrs
mov
xor
jecxz
dec
adc
aas
rol
mov
cwtl
out
out
xchg
push
and
sbb
xchg
lea
fwait
test
sub
sbb
push
sti
inc
xor
sbb
aas
jo
jns
test
and
out
push
outsb
and
lcall
sub
or
call
loop
pop
ret
hlt
fisubl
add
fwait
cmp
cmpsb
jne
punpckhbw
cmp
loopne
stc
mov
jb
dec
xor
fstpl
lahf
or
jns
mov
out
and
gs
popf
sub
out
cmpsb
ljmp
mov
xor
xchg
add
inc
lret
adc
push
daa
mov
ret
fucomi
xlat
xor
and
jae
inc
adc
mov
mov
inc
or
out
cld
mov
ss
mov
mov
add
push
scas
adc
mov
mov
test
dec
aaa
pop
mov
mov
xor
push
in
mov
in
inc
cwtl
sbb
or
sub
das
xor
xor
lret
dec
mov
adc
insl
push
cmp
or
add
movsb
xchg
scas
add
and
loope
imul
dec
incb
and
fdivs
inc
out
xlat
das
or
or
sub
imul
inc
adc
gs
sbb
mov
pop
outsb
sbb
inc
js
dec
sti
in
push
bound
sbb
xor
pop
daa
psubw
cmp
fildll
adc
subb
outsl
mov
fisttpl
gs
lahf
les
mov
xchg
push
ret
xchg
jl
shlb
pop
test
jb
and
in
xlat
je
out
xor
pop
sub
movsl
and
loope
insl
xchg
mov
mov
hlt
imul
add
and
inc
fstpl
push
mov
out
divl
cmp
iret
add
adcl
int
mov
inc
xchg
xor
in
ja
outsl
xchg
mov
sbb
mov
fidivrs
popf
sahf
push
mov
add
mov
push
or
aaa
and
testb
sahf
inc
out
xor
sub
fs
jge
rorl
cmp
mov
aas
add
lcall
push
mov
sbb
in
movups
inc
and
movsl
scas
jns
fcmovnb
jns
std
cmp
xchg
jnp
addl
inc
xor
xchg
icebp
aad
mov
cmp
fbld
dec
jae
mov
xor
rclb
and
lock
lock
negb
inc
cwtl
push
js
ret
adc
cmc
mov
sub
hlt
mov
xchg
testl
or
int
sub
inc
mov
jecxz
adc
sub
push
mov
outsl
mov
mov
lret
loope
mov
dec
int
adc
xchg
mov
aaa
cwtl
fwait
daa
dec
cwtl
mov
and
push
cmp
xchg
dec
mov
sahf
xchg
jecxz
in
xor
xor
inc
jne
or
faddl
push
xorb
mov
ret
pushf
or
ret
pop
push
insb
sbb
outsl
push
or
mov
jo
fnstsw
push
sahf
adc
pop
xor
or
xchg
out
dec
js
jno
or
lret
popf
jmp
dec
and
jmp
mov
or
add
jae
add
ljmp
outsb
icebp
js
push
jle
sub
add
dec
gs
scas
mov
fcmovb
jg
lods
shrl
clc
pop
repz
inc
inc
cmp
mov
adc
in
hlt
push
xchg
inc
adc
in
clc
pop
lods
insb
jb
mov
pop
fidivrs
and
dec
ud0
cli
pop
mov
jge
sbb
nop
xor
sbb
push
sbb
adc
push
adc
pop
mov
jo
sbb
push
dec
push
dec
sti
push
jmp
xchg
jp
dec
fnstenv
and
enter
mov
scas
movsb
fwait
orb
pop
xor
xor
xor
cmp
mov
mov
cmp
push
test
cmc
fucomip
cs
aaa
or
std
mov
mov
jbe
push
push
or
and
push
cmp
pop
lahf
pop
cmp
stc
out
xchg
enter
mov
sbb
repnz
jle
mov
add
xor
sub
rcrb
imul
hlt
pusha
jmp
clc
test
insb
out
loop
es
xor
mov
dec
dec
sbb
in
test
xchg
push
bound
nop
insl
fnstenv
and
or
aas
fcoml
jp
cli
xchg
aaa
xlat
jge
jbe
or
inc
in
int3
loopne
pop
rolb
pop
clc
xor
iret
and
mov
les
cld
dec
repnz
scas
pop
xchg
in
xor
jmp
inc
dec
pop
xchg
or
xchg
rolb
mov
jp
mov
sub
sahf
jnp
mov
sbb
shrb
aad
pop
shll
shll
int3
or
adc
dec
mov
lahf
jle
icebp
sub
xor
dec
sub
jmp
in
xchg
push
inc
hlt
arpl
sub
dec
jb
movsb
or
push
int
sbb
hlt
jmp
fimuls
les
push
sub
in
repnz
jb
xchg
popa
cmp
lcall
pop
test
xchg
test
aaa
ja
sbb
out
stc
jle
xchg
push
sbb
cmp
pushf
dec
mov
aas
jecxz
fmul
adc
add
xor
ret
out
or
mov
xchg
xor
adc
arpl
mov
pop
push
shrd
enter
ret
xor
xor
mov
lock
adc
ficomps
xchg
push
insb
lds
out
mov
into
int
or
xlat
inc
and
lret
fistpll
dec
or
and
xchg
dec
stos
xor
pop
cmpsb
xor
add
sbb
loope
push
mov
mov
push
xor
div
xchg
push
aam
and
and
lea
push
rcll
sub
push
test
daa
add
push
daa
std
mov
sub
sarb
or
xchg
sahf
cmp
xchg
mov
fwait
add
in
mov
xchg
inc
push
jno
xor
cmc
mov
mov
clc
or
mov
dec
push
repz
sti
aad
or
xor
sbb
and
sti
dec
clc
out
cmp
or
loopne
push
pusha
subl
dec
repz
xlat
shrb
scas
pop
sbb
loopne
enter
adc
lds
les
cltd
jle
adc
fisubl
scas
push
mov
push
imul
cmp
push
mov
sahf
mov
mov
stos
add
movsl
add
and
fimuls
cwtl
aas
addr16
movsb
pop
pop
bound
mov
dec
jns
and
arpl
adc
or
xchg
call
scas
lahf
push
subl
push
sbb
ds
pop
pop
stos
push
paddw
pop
ret
mov
out
addr16
sub
aam
pop
adc
pop
out
repz
add
cmc
and
es
sub
mov
call
dec
inc
cmc
sahf
and
sbb
or
xorl
or
fcompl
sub
pusha
out
push
push
xor
add
push
pop
add
xlat
movb
sub
inc
pusha
aas
add
insb
mov
dec
ret
outsl
xor
mov
pop
pop
pop
addr16
aaa
mov
arpl
pop
sti
pusha
sahf
mov
jno
push
cmp
xor
mov
lahf
mov
and
hlt
mov
mov
mov
pop
sub
cmc
dec
xchg
push
xchg
lock
add
jmp
jle
jb
xchg
adc
clc
cmc
inc
pop
mov
and
pop
das
jo
lahf
cmp
aaa
dec
iret
dec
js
in
sub
sub
aaa
test
xchg
xor
mov
xor
ror
in
cmp
xlat
mov
repz
xor
push
dec
fisubl
andl
push
xchg
out
jae
out
jp
mov
aas
mov
jl
mov
and
cltd
or
add
inc
stos
les
xchg
rorl
or
call
jnp
leave
fucomip
cltd
mov
jo
mov
dec
pop
and
lea
xchg
dec
ret
pop
pop
xchg
orb
jmp
gs
dec
cld
and
mov
inc
xor
cltd
int3
fadds
aad
push
xor
sub
out
aas
add
loopne
mov
push
or
push
mov
mov
outsb
mov
lods
dec
pop
or
and
sbbl
jg
inc
cld
out
jl
daa
pop
xlat
fnstcw
inc
iret
mov
dec
sbb
insl
aaa
or
cmpsb
jno
cmpsl
mov
movlps
fcomps
sahf
xchg
mov
add
xchg
sub
jmp
pop
mov
imulb
mov
adc
fwait
push
clc
mov
sarl
lock
sahf
cmp
pushf
add
lcall
ljmp
fistps
push
jno
mov
xor
daa
std
dec
add
insb
ja
gs
outsl
je
push
pop
cli
stc
ret
add
jb
cmpsl
cmp
mov
mov
cs
mov
mov
sub
adc
in
shrb
adc
mov
es
mov
cmpsl
scas
xchg
push
hlt
mov
push
mov
into
jecxz
test
or
fcoml
pop
jno
les
adc
and
jg
or
or
adc
sbb
test
mov
push
jle
adc
ficomps
lea
mov
pushf
or
fs
insl
inc
pop
push
cmpsb
and
inc
or
sbb
out
inc
sub
ljmp
lret
push
jecxz
jne
mov
adc
lahf
mov
in
shrb
mov
add
loop
mov
and
xor
stos
mov
lods
cmp
test
dec
mov
mov
inc
inc
gs
push
mov
pop
orl
aaa
add
fldl2t
adc
pushf
push
inc
mov
test
sub
jecxz
ljmp
cmpsb
adc
mov
jno,pn
push
xchg
or
pop
lock
mov
stos
sub
push
je
fimull
adc
add
das
pop
sub
dec
outsl
mov
insb
xlat
mov
fcoms
in
cmp
xor
movsb
sarb
xor
fsubrs
jmp
sub
xor
xorb
lea
or
in
repnz
mov
adc
push
pushf
fimull
inc
int
imul
cmp
imul
push
and
xor
or
pop
fnstenv
jg
sub
cmp
sbb
stc
sub
sub
mov
lods
push
out
pop
hlt
xor
push
cwtl
nop
inc
test
add
lds
ss
mov
ss
fmuls
mov
jp
dec
xor
jl
addl
mov
xchg
pop
icebp
sbb
mov
inc
push
int
movsl
pop
cld
ret
negl
mov
push
imul
and
rorb
mov
xchg
jne
xor
pop
ds
inc
in
popa
xchg
fcompl
lods
inc
or
xchg
or
movsl
mov
jg
je
std
adc
mov
adc
pop
push
xchg
cld
daa
mov
xchg
or
push
fsubp
dec
test
int3
or
addr16
push
mov
pop
and
orl
push
divl
mov
cmp
jns
aas
cmp
xlat
pushf
mov
push
mov
jp
mulb
xchg
sbb
ljmp
idivl
jp
int
rorb
outsw
int3
movsl
loop
hlt
wrmsr
mov
fimull
xchg
insb
add
sbb
ja
sbbb
nop
scas
add
lret
or
pop
out
xor
push
nop
mov
and
shrb
add
mov
setno
mov
andl
jns
jmp
xchg
ds
icebp
dec
lahf
test
mov
popf
je
and
and
and
mov
jne
lcall
mov
dec
pop
jl
and
enter
xchg
adc
into
in
mov
pop
leave
addr16
fisubl
or
ljmp
push
jbe
jge
push
and
mov
jb
mov
cs
or
in
mulb
enter
bound
cwtl
dec
ret
jl
push
cmp
cmp
cld
or
in
cmp
in
jg
test
loop
lret
in
hlt
lcall
jae
and
filds
push
dec
cmp
pop
push
and
jmp
mull
push
repnz
shl
mov
mov
xchg
mov
mov
loop
and
rcl
fistpl
addr16
push
push
loope
mov
clc
mov
or
sub
sub
jg
push
and
sbb
mov
hlt
lds
push
pushf
xlat
dec
cmpsl
aad
rcl
pop
pop
adc
adc
enter
jle
jg
pop
loopne
or
das
cld
addb
stos
mov
test
popf
arpl
xchg
popf
xchg
cld
and
adc
push
repnz
lods
fdivl
imul
dec
push
lds
out
negl
xchg
ds
xchg
daa
out
rcrl
cmp
outsb
je
xchg
cmpsl
mov
idivl
cmc
pop
sub
dec
pop
fnstcw
dec
int
fxch
movsl
or
pop
imul
jns
aaa
leave
sub
gs
sbb
mov
jne
dec
pop
fcmovnb
sbb
push
inc
jno
call
mov
sub
push
leave
insl
and
jnp,pt
mov
mov
sbb
ja
mov
test
sbb
or
out
mov
inc
scas
call
out
cld
mov
sbb
outsb
mov
mov
ss
adc
inc
mov
enter
mov
mov
into
ret
fwait
inc
adc
in
ficoms
add
test
and
mov
cwtl
sbb
sub
push
mov
jb
out
push
sub
aam
loopne
add
jne
andb
ljmp
rcrl
in
mov
lcall
sbb
imul
add
sub
mov
inc
ret
xor
mov
int
sbb
in
shll
mov
fldenv
xor
call
sbb
push
ficomps
arpl
insl
jns
dec
enter
cmp
inc
ja
push
fnstsw
ss
out
dec
aad
vshufpd
mov
test
mov
sbb
inc
jb
or
sbb
call
sbb
jg
mov
ror
jbe
test
push
or
push
dec
arpl
pop
adcl
fidivrl
cmp
sti
les
in
mov
push
stos
insb
add
sti
aam
movsb
mov
test
sub
cmc
mov
add
adc
cmpsb
xor
int3
pop
mull
and
je
cmp
daa
mul
outsl
sti
fildl
les
les
pop
cltd
push
xor
xchg
push
push
xor
lds
dec
int3
sub
ret
aam
pop
dec
fsub
roll
push
inc
int
mov
mov
cmp
push
daa
gs
pop
adc
aam
aaa
outsb
cmp
in
in
push
jo
push
or
xchg
push
jle
push
shll
or
scas
or
sahf
adc
bound
mov
adc
sub
in
xor
pop
sbb
inc
mov
insb
inc
jb
lods
pop
ret
call
inc
movb
jne
fwait
dec
xor
sbbb
dec
sahf
jmp
clc
int
jnp
insb
insb
lea
data16
rol
pop
jmp
mov
shr
xor
add
pop
insb
mov
scas
fistps
addl
cld
jmp
xor
repz
dec
add
in
shll
and
cs
mov
sbb
nop
mov
adc
mov
fucom
and
cmp
and
stos
dec
mov
sarl
mov
and
mull
mov
fcomp
push
les
adc
jmp
xchg
test
mulb
scas
std
sub
inc
and
sub
addl
and
xor
cmp
cli
and
mov
lods
lods
das
rcrl
or
fmuls
pop
lcall
scas
jbe
pop
insl
jns
sbb
orb
mov
mov
js
mov
repnz
xchg
pop
dec
sub
enter
cmpsb
push
je
cmp
dec
and
xchg
sbb
jecxz
mov
pop
aad
pop
fwait
ss
jns
or
and
inc
movsb
xorl
dec
out
sub
cmpsb
push
pop
cmp
dec
js
outsl
das
lahf
nop
jmp
rcrb
inc
shll
pop
add
fimull
fs
pop
fwait
hlt
dec
outsb
arpl
sbb
xchg
inc
sbb
call
inc
dec
sbb
pop
mov
mov
sbb
movsb
inc
pop
js
imul
xchg
test
mov
mov
adc
mov
push
xlat
test
mov
lea
dec
fnstenv
sbbl
fwait
int3
sbb
mov
orl
pop
pop
pop
sahf
push
jmp
or
sbb
jno
adc
jbe
sbb
and
inc
sti
pop
inc
sbb
inc
inc
decl
pop
clc
cwtl
push
rorl
add
xchg
jns
push
dec
rolb
mov
int
dec
add
shlb
cmc
inc
xor
test
hlt
insl
add
in
movsb
inc
jle
sarb
fsubs
fnstsw
inc
or
int3
jns
jl
push
arpl
bound
mov
dec
mov
test
icebp
jp
mov
in
add
and
insl
andb
hlt
fs
addl
pop
popa
and
xor
in
dec
into
pop
js
xchg
decl
int
mov
push
dec
dec
adc
movl
fists
adc
adc
jg
fwait
js
dec
or
in
and
fwait
or
inc
sub
test
aad
push
ret
mov
test
xchg
sub
pop
lahf
cwtl
stos
xchg
dec
jae
inc
mov
mov
xchg
sub
push
and
shrb
test
and
mov
mov
adc
insl
dec
sub
inc
sysexit
mov
inc
lds
mov
or
insb
cmc
out
fsts
test
mov
lret
or
or
ret
dec
fwait
or
mov
negl
cmp
jecxz
ljmp
jnp
ds
in
dec
lahf
in
sahf
notl
sbb
xchg
jle
mov
pop
rcrb
lcall
dec
fwait
lods
push
test
std
push
ss
outsl
das
jbe
push
mov
add
sbb
push
adc
gs
stos
pop
mov
test
sbb
pop
mov
cli
xchg
push
or
fcomp
inc
cwtl
faddl
lahf
mov
cwtl
fisubrl
jp
jge
or
arpl
pushf
or
mov
xchg
mov
inc
jns
fisttpll
mov
mov
imulb
add
or
xchg
push
fnstsw
or
ss
or
cmp
sub
sbb
sub
fwait
les
push
lahf
call
jne
scas
mov
cli
enter
mov
xchg
daa
addb
enter
jns
mov
fiaddl
negl
push
dec
mov
mov
imul
sbb
sti
push
lock
mov
mov
fldt
test
inc
bnd
adc
fwait
stos
cmp
inc
sub
imul
imul
outsb
out
cmpsl
or
mov
addb
jmp
aam
mov
mov
test
jo
shr
xchg
jno
cmp
ss
dec
je
notl
mov
xacquire
cs
sbb
pop
add
iret
movsl
in
or
std
push
sti
pop
pop
jno
mov
push
bound
movsl
rolb
push
jg
cli
xchg
ret
and
inc
lret
mov
inc
dec
sbb
cmp
push
jb
pop
aad
dec
sti
mov
push
rorl
push
cmp
xor
stc
das
push
fnstsw
add
add
addb
shlb
add
pop
mov
mov
addl
pop
jecxz
roll
inc
cltd
sub
or
aam
test
and
xchg
rol
int
inc
jne
adc
pop
inc
mov
jae
test
mov
sub
fsubrl
fnstsw
enter
lahf
inc
pop
rcr
lods
bound
mov
jbe
fsts
iret
and
hlt
push
in
out
pop
roll
stos
aas
sbb
xchg
or
pop
iret
sbb
sub
mov
sbb
sub
dec
arpl
repz
or
int3
jno
inc
and
insl
test
jle
ficompl
in
mov
div
add
xchg
mov
push
jns
push
or
fbstp
ret
or
ss
movsb
ljmp
dec
adc
popf
pop
out
xchg
lds
xchg
push
mov
out
push
xchg
sbb
ss
push
pop
lret
iret
or
js
arpl
sbb
fimull
xor
push
ffree
fcompl
and
pop
dec
das
cmp
mov
sub
int3
shll
mov
out
inc
or
sahf
adc
push
insb
test
ja
dec
fld1
jg
xlat
mov
insl
xchg
adc
loope
shlb
in
scas
jl
aam
frstor
dec
push
jg
test
icebp
sbb
push
out
jge
jecxz
or
mov
jae
and
int
push
fsubrs
xorl
jb
enter
sbb
sbb
mov
xor
push
and
push
fmul
sbb
lods
add
mov
outsb
mov
std
loopne
dec
std
nop
mov
push
push
dec
test
loope
aad
cmpl
pop
cmpl
xchg
adc
inc
shll
ljmp
leave
mov
rcll
jl
cmp
mov
int3
sub
jb
js
jbe
rorl
cmp
cmpsl
push
cmp
xchg
cmp
sbb
imul
add
sub
sub
xchg
call
stos
xchg
sub
push
sar
xor
or
pop
fsts
adc
fnsave
fistpll
push
xchg
in
int3
scas
and
mov
add
dec
test
sub
mov
xor
fistpl
mov
arpl
mov
lret
jecxz
into
mov
les
ss
mov
adc
mov
mov
call
shlb
rcll
pop
lahf
inc
mov
outsl
cmpsb
adcb
fisubs
clc
fisubrl
dec
loope
jnp
insb
test
test
out
pusha
sti
sub
fdivrs
test
addr16
xchg
lahf
mov
mov
mov
cld
das
xchg
or
lahf
inc
loop
mov
js
sbb
xor
psubusw
cwtl
loop
inc
insb
ds
dec
lcall
add
push
xchg
es
fnstsw
ds
xor
test
fmul
cltd
out
cld
loope
jmp
loop
dec
clc
les
hlt
aaa
adc
je
pop
stc
div
cwtl
sti
mov
lret
sti
sub
adc
ljmp
or
in
ret
loopne
stc
into
inc
cmp
cmc
ljmp
push
fcompl
mov
sub
sti
enter
je
mov
adc
andl
push
out
fwait
in
test
mov
ret
repz
add
mov
mov
call
cs
in
inc
ja
std
or
dec
xor
sbb
out
and
mov
leave
ds
lret
xchg
lods
loope
iret
jecxz
and
jge
push
and
loope
andb
dec
mov
loopne
and
in
mov
imull
mov
xor
push
pop
in
push
add
dec
mov
outsb
inc
data16
push
jbe
or
dec
movsl
xor
test
cld
dec
test
packsswb
dec
lea
sbb
int
push
push
in
sbb
pop
sbb
add
inc
jge
mov
mov
fcoml
addps
subl
cmp
int
sbb
add
loope
pop
mov
insl
lahf
adc
dec
sbb
mov
ret
cmp
xor
cmc
xor
cmc
mov
lcall
sbb
dec
insb
mov
xchg
cld
js
add
xor
sub
pop
cs
out
sub
sti
mov
imul
shlb
hlt
fstps
mov
sbb
mov
inc
mov
pop
in
jns
push
int3
cld
sbb
inc
pop
mov
repnz
mov
out
lods
and
xlat
xor
xchg
sti
cmpsb
inc
loop
mov
sbb
adc
mov
jl
sbb
adc
aaa
imul
outsb
dec
dec
mov
adc
adc
push
stos
jo
cmc
xchg
rolb
insl
imul
lret
std
popa
out
jmp
sbb
sub
cmpsb
cmp
jecxz
sub
dec
adcb
mov
lea
jl
mov
fldcw
and
int
es
arpl
and
adc
mov
popf
in
sub
pop
jo
mov
ljmp
test
lods
xchg
mov
int
aaa
lock
in
cmpb
in
shl
outsl
out
mov
sbb
xchg
inc
jae
inc
lahf
and
dec
add
mov
jb
and
mov
ss
daa
decl
push
mov
xchg
jge
jae
loopne
inc
fbld
mov
sub
mov
cs
bound
cwtl
fcom
das
jge
xlat
push
sub
in
dec
fldcw
mov
dec
inc
dec
shlb
push
mov
or
movsb
or
rcrb
jle
mov
imul
sub
mov
push
hlt
sti
push
mov
push
push
into
lcall
in
ds
dec
ja
add
popa
andl
xor
ficomps
cmp
sahf
frstor
daa
pop
enter
push
in
rorb
or
test
add
jno
rcr
mov
add
test
arpl
js
jno
or
mov
cmp
out
fwait
lea
sub
repnz
std
push
sub
insb
enter
mov
fsubrs
xlat
inc
mov
je
jae
aam
out
mov
test
adc
je
xchg
jp
mov
scas
xlat
vrsqrtss
aaa
data16
jge
xor
lods
lods
cmc
push
ja
popf
fwait
ds
rorl
hlt
pop
cmp
cmc
pop
push
fnstcw
add
rorb
or
sbb
jle
addl
add
aas
nop
idivl
imul
mov
icebp
enter
xchg
mov
sti
adc
insl
or
jp
cltd
jl
gs
das
mov
notb
mov
notb
xor
popf
insl
fistpll
lods
lods
test
loopne
lcall
or
repnz
xchg
sbb
jmp
add
mov
pop
loopne
mov
push
jo
lahf
mov
lea
cmpsl
fwait
sbb
insl
xchg
adc
out
jb
addr16
push
fwait
pushf
daa
daa
xor
fidivs
test
cmp
inc
lret
add
inc
mov
mov
rclb
cs
cmpsb
cs
sbb
shl
jmp
lahf
sbb
mov
add
add
xchg
lahf
add
xor
dec
push
fwait
sbb
sub
cmc
xor
adc
pushf
mov
data16
ret
add
das
enter
lret
fsubs
int3
push
fstpt
fs
and
movsl
mov
lret
decb
clc
mov
add
xchg
and
jp
scas
jnp
xor
sub
lea
iret
mov
pop
out
inc
loop
pop
nop
or
loope
fisttpll
out
and
aaa
lret
popaw
loop
sub
call
and
jg
cltd
hlt
imul
cmp
pop
or
mov
cld
fabs
push
pop
pop
out
lds
cld
pop
jmp
push
cltd
rol
or
cmpsb
fldenv
mov
ja
sub
inc
pop
in
push
sbb
test
iret
dec
cmpsl
aam
xorps
std
ja
and
add
xor
sbb
jecxz
xchg
mov
inc
fistpll
loopne
add
inc
and
arpl
mov
jo
into
imul
xor
xchg
jge
outsl
movsl
sub
lods
addr16
das
xor
aas
in
mov
call
inc
mov
test
ss
mov
fnstsw
or
and
xchg
inc
stos
lea
arpl
jle
mov
hlt
shl
jnp
adc
inc
inc
cli
jnp
mov
push
cld
add
pushl
sbb
jmp
cmp
push
add
mov
xchg
pop
push
adc
add
in
scas
cmpl
push
sbb
inc
jae
push
inc
sbb
jo
insl
jo
lds
lds
clc
mov
pop
out
and
dec
sbb
aam
push
in
dec
rcrl
sbb
test
mov
mov
and
pop
popf
push
fldl2t
push
cmpsl
cmp
test
cmpsl
daa
sub
cwtl
sbb
outsb
jmp
lret
insb
or
jbe
mov
mov
shlb
xchg
jmp
pop
cwtl
enter
rol
xchg
insb
jmp
out
addr16
or
pxor
into
and
jne
mov
pop
jecxz
sub
mov
stos
pop
push
outsl
push
shl
pushf
lds
adc
mov
cltd
mov
stc
push
nop
add
jmp
lret
outsb
test
xchg
jbe
mov
sub
dec
and
loope
mov
into
addr16
mov
pop
sbb
xor
pop
cmc
dec
mov
outsl
frstor
pop
jle
xchg
cmp
dec
inc
push
mov
outsl
dec
mov
inc
pusha
and
int
and
and
mul
sub
in
jae
mov
ja
and
dec
shlb
add
test
mov
mov
orl
aam
fldenv
cmp
test
mov
inc
mov
jmp
clc
sub
movsl
sub
call
adc
mov
std
sub
jle
jmp
mov
or
stos
cs
xor
sub
xor
jmp
inc
clc
js
cmpsl
xor
cmc
or
mov
and
xlat
mov
inc
sub
call
push
mov
fs
cmp
lahf
stos
adc
cmp
pop
mov
pop
jbe
repz
or
test
pop
enter
add
pushf
data16
daa
mov
jbe,pn
cmp
mov
pop
lods
incb
ret
sti
cs
clc
dec
jns
shll
sbb
or
cmp
repz
popa
adc
je
ret
imul
push
sahf
cmp
sbb
xor
cmp
or
lea
dec
test
or
jp
push
sbb
pusha
shlb
push
idivl
aas
xchg
lods
dec
imul
mov
aad
dec
adc
dec
ficoml
lds
pop
dec
leave
jne
cmp
and
mov
fcmovbe
std
leave
jg
int
cmp
xor
mov
dec
xchg
in
cli
insl
loop
push
aam
lret
out
sub
loope
bound
ja
adc
sbb
dec
iret
scas
stc
push
sub
adc
cmc
cmc
in
push
das
jo
sub
mov
or
adc
xor
cmp
fists
mov
jnp
or
add
lea
fdivrs
ss
out
mov
mov
cmp
popa
shl
adc
rclb
mov
xor
popa
jnp
adc
js
faddl
leave
lock
mov
push
mov
testl
test
mov
cli
push
sbb
or
jle
mov
gs
cmp
push
xchg
rorl
and
dec
imul
les
sub
dec
jmp
adc
xchg
lahf
pop
xchg
add
movsb
jnp
insb
gs
imul
repnz
mov
popf
enter
and
leave
mov
push
stos
sahf
inc
and
fldcw
pop
cli
add
pushf
ret
sbb
imul
or
popa
es
push
int
ljmp
mov
int3
int3
push
sub
movsb
dec
test
and
jne
in
push
data16
jo
pop
jae
xor
jge
call
jl
jl
scas
ret
xor
xor
cmpsl
mov
aaa
mov
je
pop
testb
jg
fs
push
pop
dec
sub
or
pushf
dec
pusha
ficoml
xchg
pop
adc
fidivrl
testl
adcl
sbb
ja
fcom
in
sub
mov
mov
xchg
and
cmc
scas
mov
std
inc
in
mov
aaa
and
in
cmp
xchg
ret
sbb
jbe
pop
ja
add
out
mov
iret
cltd
xchg
dec
pop
movsb
sahf
movsb
sbb
shl
mov
mov
insl
xor
and
xor
in
jnp
sbb
add
and
dec
jnp
lret
mov
xchg
js
sbb
cmp
mov
pop
pop
push
das
rcr
xchg
push
das
fisubs
ljmp
into
jl
mov
xor
mov
mov
ljmp
adc
cld
sub
dec
aaa
dec
dec
js
fcomip
xchg
pop
out
dec
ficomps
test
xlat
and
push
jecxz
pop
fcoms
mov
sti
add
imul
ja
or
cwtl
inc
sub
das
pusha
movsb
inc
xchg
or
mov
aam
out
mov
popf
xchg
mov
stos
jp
adc
stc
ss
add
pop
out
lea
out
ficoml
inc
jne
stos
or
imul
popf
and
data16
inc
js
mov
in
sbb
popf
push
mov
ja
cmp
pop
jge
cmpsl
mov
scas
xchg
lret
sub
mov
repnz
lret
sub
cmp
sbb
jg
icebp
fwait
pop
push
mov
pop
dec
std
mov
sub
xor
scas
inc
cmp
push
mov
sub
je
mov
imul
shll
je
inc
je
cmp
mov
shlb
enter
loopne
cmp
pop
into
xchg
cmp
fisttpl
sub
and
dec
mov
rolb
and
les
add
mov
outsb
pop
pop
in
cmpsl
cmp
xor
sti
cltd
or
sbb
scas
pop
rolb
jae
mov
cmovge
sbb
xchg
repz
mov
aad
cmp
mov
stos
sahf
lods
push
adc
dec
jnp
mov
ficoml
mov
stc
cmp
idivl
fs
je
pop
fsubl
push
push
push
in
pusha
xor
sub
stos
dec
dec
mov
pop
gs
inc
leave
or
fstpl
adc
jp
mov
xor
dec
stc
int
movb
inc
inc
shlb
adc
or
jbe
fs
fimull
insb
in
mov
and
pop
outsl
xchg
lahf
ljmp
xor
push
repnz
pop
dec
mov
push
insl
test
std
aas
xchg
ljmp
loope
adc
and
sbb
lret
or
in
loop
iret
mov
int
mov
ds
xchg
inc
fnstsw
in
or
ljmp
xchg
xchg
cmp
push
clc
sti
adc
bound
xchg
iret
je
in
mov
add
xchg
ret
dec
cwtl
out
sbb
ficoml
inc
jbe
cltd
push
xorl
cmp
xchg
xorl
mov
inc
rolb
fsubp
rcll
push
xor
sub
pop
loop
stos
insl
loopne
lds
jnp
sbb
in
jae
lret
xchg
sbb
xor
shlb
pop
cltd
jp
xchg
pop
stos
outsl
int3
dec
out
stc
xchg
out
add
mov
push
sbb
dec
fdivrs
xchg
xor
sarl
outsb
mov
add
push
popa
mov
dec
add
mov
sbb
push
jp
sahf
dec
faddp
add
mov
mov
pop
dec
sub
int
jbe
movsl
xor
in
jbe
filds
cltd
add
sbb
push
fistpl
dec
aas
lds
xchg
pop
lods
aam
pop
add
test
stc
cmc
pop
scas
rcr
call
pop
cs
inc
xor
test
pop
insb
pusha
iret
mov
pop
adc
jge
jne
inc
or
pusha
test
sahf
ret
sub
mov
cmpsl
and
push
inc
out
imul
test
mov
sbb
and
xchg
loop
push
cmc
xchg
aad
mov
rcrb
int3
pop
push
idivb
mov
and
lea
sarb
in
js
lahf
dec
sbb
arpl
outsb
in
inc
clc
add
fsubp
frstor
dec
leave
popl
inc
rcrl
rclw
inc
sbb
mov
cwtl
mov
adc
incb
or
dec
das
mov
shl
add
shll
pop
dec
lea
adc
fcmovnu
xchg
es
popa
push
int
xor
ss
and
cli
and
fidivl
xchg
jne
jb
jle
jbe
inc
pop
push
movsl
and
das
dec
jne
cmpsb
imulb
adc
jnp
xor
daa
and
aaa
cld
sbb
xchg
jge
test
cs
cld
loopne
add
lds
mov
fbstp
xor
jno
aam
stos
loope
popf
out
fcompl
sarl
mov
mov
inc
das
daa
jl
or
lods
imul
dec
sbbb
stc
push
leave
xor
mov
sbb
into
test
imulb
or
pop
lods
fildl
or
dec
ja
mov
cmpb
ljmp
adc
xor
fiadds
fcmovnbe
xor
and
push
jp
test
inc
push
pop
mov
pop
out
push
call
and
iret
adc
xor
fcmovbe
cmp
adc
dec
xchg
pushf
in
inc
xlat
inc
jmp
add
lea
push
push
hlt
or
cltd
fsubs
movsb
or
je
push
in
loop
imul
xor
loope
gs
mov
rclb
faddl
sbb
movsl
loopne
cmp
lahf
push
iret
out
or
outsl
fninit
cmp
out
enter
adc
stc
xchg
push
xor
outsb
ja
int3
bound
int3
sbb
xor
xchg
jecxz
add
dec
outsb
push
insb
lcall
in
pop
cmp
mov
push
xor
shll
sbb
mov
push
addl
sarb
lcall
sub
pop
and
shrb
dec
int3
sbb
add
push
aas
cmp
push
jge
mov
sbb
dec
or
imul
lods
mov
lds
iret
mov
lds
test
pushf
xlat
aaa
aam
adc
lahf
clc
lods
push
je
xchg
cmp
stc
and
lea
clc
testl
sub
mov
in
xor
mov
sub
mov
sub
ret
jo
xlat
sub
and
jne
aas
sbbl
mov
sub
and
jle
inc
ror
in
popf
and
cli
das
fldcw
inc
push
add
mov
jge
filds
popw
loopne
push
stc
in
push
pop
add
push
imul
cmc
scas
fisubs
aad
jl
nop
xor
aam
repnz
outsb
xchg
mov
lods
mov
test
in
aam
ja
loop
and
xor
lods
pop
and
psubq
ret
outsb
sbb
xor
push
add
inc
sbb
lods
jecxz
rorb
shr
enter
addr16
mov
lock
inc
mov
mov
ret
fdivrs
into
and
xor
dec
dec
out
jae
gs
jae
push
pop
ds
pop
push
cltd
push
mov
cmp
xor
jo
xchg
repnz
fcoml
imul
lret
inc
lods
pmovmskb
cmp
pop
xor
ljmp
push
into
push
ror
popf
mov
stos
mov
clc
imul
aam
and
sub
call
push
sarb
stos
jae
pop
sbb
or
jl
and
jns
dec
pushf
add
push
repnz
adc
push
sub
orb
ret
sbb
shr
aam
mov
xchg
jo
das
icebp
pop
pop
loope
xchg
call
cmp
pop
mov
shl
roll
xchg
cmp
push
es
adc
add
inc
fildll
sub
pushf
xchg
into
ret
fucomip
cmc
shrl
push
push
faddl
adc
xchg
imull
stos
pop
xor
sbb
popf
dec
xchg
lret
loope
mov
xor
push
fldt
jecxz
mov
pop
call
jmp
mov
repnz
cmpsl
movsl
lret
out
lds
and
fmull
inc
mov
jno
inc
rcl
cli
scas
push
fisubl
outsb
ret
cmovne
push
shlb
mov
cli
aam
push
sub
push
mov
jge
andb
add
cmpsb
or
jae
sahf
je
andl
mov
in
push
cmp
pop
dec
and
jae
sub
mov
leave
mov
movsl
mov
or
push
dec
cmc
cmc
fcompl
mov
ljmp
sub
mov
fldlg2
push
lods
xchg
lock
inc
into
cmpsb
test
int
jb
dec
outsb
int
outsl
or
xor
xor
rclb
repnz
lods
dec
das
fstl
andl
jnp
mov
mov
ss
or
fstps
inc
mov
shll
mov
push
enter
mov
xchg
sbb
jle
call
xchg
popf
clc
mov
das
inc
cmpsb
imul
or
outsb
or
push
mov
lea
movsb
fwait
sub
insl
pop
sbb
cmpsb
and
cli
repnz
xchg
lock
gs
add
and
pop
cs
and
sub
aaa
xor
push
mov
sbb
fsqrt
mov
popf
push
adc
dec
adc
cmp
cli
mov
jl
aad
call
stos
in
xorb
adc
test
mov
outsl
aas
mov
jecxz
lods
push
xor
clc
das
adc
dec
test
and
fisubl
aaa
mov
fdivr
cli
gs
mov
jns
pusha
repnz
mov
dec
pop
pop
sub
in
test
inc
test
fisttpll
sbb
movsl
inc
or
andb
push
imul
cwtl
or
add
std
les
std
adcb
dec
addl
sti
inc
add
dec
mov
jmp
and
and
lock
or
xchg
aas
mov
add
jae
cmp
add
jmp
imul
xor
scas
pop
adc
mov
mov
xor
lds
mov
xchg
out
mov
les
cmp
xchg
data16
call
icebp
pop
xor
mov
jmp
sahf
push
cmpsb
add
imul
sti
dec
cmc
push
in
xchg
daa
lock
cmp
incl
std
in
insb
pop
and
dec
fildll
loope
and
outsl
cmp
je
and
call
loopne
or
pop
test
movb
int
shll
pop
sbb
xchg
test
inc
mov
add
sub
imull
push
pop
outsl
adc
xor
dec
pop
mov
sarb
lret
stos
loope
aas
ljmp
adc
jnp
xchg
mov
cmp
add
mov
push
cmp
imul
sbb
inc
xchg
jecxz
inc
in
push
dec
sub
pop
xchg
mov
stos
or
inc
in
into
rorb
dec
and
or
imul
aad
roll
ss
push
and
aaa
test
adc
cmp
clc
jl
push
outsb
lret
dec
stc
movsb
fstpl
test
enter
ss
ret
cmp
and
int
or
xchg
movsl
cmpsl
or
mov
jb
xor
xchg
in
lahf
push
addb
ljmp
sarl
scas
jge
imul
imul
lea
inc
lahf
push
mov
jb
add
std
fidivrl
lock
xor
inc
popa
mov
idivb
dec
mov
pushf
push
rclb
ss
cltd
and
dec
stos
repz
pop
addb
sbb
push
xor
rol
jmp
lret
ljmp
mov
xchg
sarl
xor
cli
idiv
cltd
lret
insb
xor
add
leave
int
xchg
cli
popf
ret
jae
nop
xchg
add
and
aaa
ja
push
or
fcom
fcompl
jne
test
pop
mov
andb
pop
inc
daa
cmp
xchg
rorl
adc
xor
je
mov
pushf
jno
fsts
adc
scas
hlt
loopne
xchg
es
out
xchg
clc
xor
dec
inc
jbe
sub
out
int3
xchg
push
popf
les
ljmp
mov
pop
hlt
cmp
add
push
inc
jbe
or
inc
dec
cmpsb
and
negl
sub
lods
adc
ss
shll
pushf
and
cmp
mov
pop
popa
mov
or
mov
inc
shl
adc
jns
fcmovnbe
dec
ret
and
outsl
pop
movsl
movsl
sbb
fldt
call
inc
cmpb
mov
cmp
stc
cmp
fisttps
jbe
add
out
pop
dec
aam
sbb
int
mov
movsb
movsl
cmpsb
dec
jno
mov
xor
arpl
xchg
dec
push
xchg
nop
push
push
daa
push
xor
cs
add
push
sub
push
jecxz
jo
xor
outsb
dec
sbb
jo
push
je
inc
xchg
es
push
sbb
mov
jmp
lcall
rol
repz
pop
dec
je
push
sbb
out
mov
lea
push
addr16
mov
push
inc
jge
js
mov
pop
shl
push
dec
push
xor
bound
movsl
std
lods
fs
psraw
movsb
movsb
fisubs
into
shll
mov
lcall
pop
setbe
xchg
nop
fcom
jnp
or
sbb
fs
sti
cltd
stos
jg
or
jno
push
mov
mov
cli
hlt
hlt
ficompl
stos
pop
or
mov
push
push
and
dec
fldenv
sbb
pop
repz
clc
pop
xchg
lea
and
jp
cmp
cmpsl
adcl
ds
mov
aaa
add
xchg
mov
adc
xorb
pusha
rolb
add
dec
in
add
stos
movsb
loopne
push
std
push
inc
add
lock
push
movsl
xor
mov
mov
cld
jmp
cmp
sahf
shll
jecxz
sbb
mov
pushf
xor
mov
stc
pushf
ret
stos
aam
aaa
dec
cmp
and
push
test
inc
fdiv
int3
sub
insl
inc
push
cmp
rorb
pop
inc
in
xor
push
repnz
cmpsl
pop
mov
sti
or
ret
sub
cmp
in
sub
mov
repz
or
sub
push
loopne
gs
adc
stc
pop
scas
xor
xchg
fwait
roll
cmpsl
adc
cmp
cmp
fistpll
inc
in
pop
fdivp
sbb
dec
das
sub
pop
jecxz
or
cmpsb
xor
je
fsub
jae
mov
stos
mov
clc
jns
mov
out
test
inc
daa
stos
incl
fisubs
sbb
inc
mov
lods
cmp
inc
add
mov
pop
adc
nop
jae
fiaddl
cmp
lock
cmc
xchg
cmp
lret
sbb
jo
enter
rol
push
mov
addr16
ja
and
sbb
mov
les
repz
sub
fs
adc
push
and
shufps
aaa
jbe
dec
sbb
adc
popf
ficomps
mov
sti
adc
sbb
addb
sar
std
sbb
pop
ds
insl
pop
cmpsl
or
nop
add
leave
adc
imul
out
jnp
sbb
test
mov
popf
scas
xchg
xchg
in
ds
mov
mov
and
jg
inc
push
mov
leave
scas
add
mov
mov
mov
lock
mov
mov
cmp
jp
fisttpl
sub
das
popf
mov
push
cli
dec
dec
daa
jns
nop
mov
fnsave
orb
les
sarb
push
sub
test
jnp,pt
push
push
jo
loop
push
add
xor
sbb
bound
pop
ds
icebp
push
js
push
iret
pop
test
push
mov
add
mov
sub
jecxz
pop
or
lret
enter
jp
sub
aas
xlat
or
sub
and
icebp
or
scas
push
out
sahf
jae
movsw
cmpb
fnstenv
push
add
jge
rcrl
aas
and
aas
mov
fistpll
inc
rolb
and
imul
insl
mov
jnp
movl
rolb
xor
add
int
push
mov
mov
xchg
neg
rcr
pop
js
insb
mov
cmp
sub
and
dec
movsl
mov
ret
inc
out
xchg
sub
sub
or
mov
popa
pop
mov
push
jmp
push
mov
xor
hlt
mov
sub
push
cmc
loop
sub
cmp
jae
leave
fadd
testb
aam
jae
out
imul
add
mov
cs
clc
jo
pop
loop
stos
mov
aas
xor
sbb
dec
stos
push
mov
in
pop
fwait
mov
pop
repz
fstps
movsl
lret
dec
test
push
inc
test
mov
aad
mov
insb
sbb
out
push
cmp
ds
rcrb
loop
repnz
imul
inc
lret
add
jl
andb
jle
aas
lock
js
sub
cld
adc
mov
mov
shll
and
popa
movl
jns
sbb
dec
jle
inc
mov
xchg
mov
sbb
movsl
and
pop
or
push
fadds
pop
or
or
adc
movsb
inc
mov
xchg
cmpsb
xchg
jns
adc
or
sbbl
dec
sbb
add
test
pop
in
rcrl
les
lret
sbb
inc
sub
push
dec
jb
mov
and
jg
ret
cmp
sarb
pushf
cltd
jle
imul
dec
leave
imul
aad
xchg
xchg
stos
mov
ja
and
pushf
aaa
pushl
ja
push
jp
fnstsw
js
shrb
cmp
imul
mov
stos
stos
cmpb
shrb
fxch
fstpt
lea
inc
adc
fs
adc
pop
loopne
dec
inc
jnp
and
mov
test
add
push
roll
mov
dec
mov
jne
das
jle
cwtl
sub
xchg
pusha
cmpb
jo
jecxz
dec
mov
pop
mov
xchg
dec
xlat
xchg
cmp
pop
js
repnz
int
sub
fcomi
xchg
xchg
aam
or
and
and
or
js
inc
push
les
dec
sub
pusha
in
xchg
stos
cmpsb
dec
ljmp
pop
ljmp
fcmove
ret
insl
fwait
mov
xadd
pop
lds
xchg
cmp
inc
sub
dec
int3
xor
icebp
repz
lcall
ljmp
loope
inc
push
cli
insl
cmp
lea
jno
sbb
loope
mov
sub
shlb
sbb
lds
fidivl
int
ficomps
mov
out
inc
pop
push
ss
cmpsl
xor
mov
inc
cmpsl
add
xlat
jmp
cmc
out
sarl
cltd
out
lret
dec
aam
and
sub
or
xor
sbb
mov
mov
movsb
iret
fisubrl
loop
out
in
jle
or
mov
mov
or
loop
sub
mov
mov
cmpsb
cld
dec
sbb
xchg
jmp
sub
hlt
fwait
ja
sbb
lods
mov
sub
jno
lock
mov
push
sbb
les
call
out
cmc
xor
add
scas
mov
stos
hlt
dec
mov
pop
jl
add
js
mov
lret
pushf
lahf
mov
scas
mov
je
sub
xchg
in
lea
aas
sbb
xchg
iret
xchg
mov
sbb
popf
push
fsts
and
mov
xchg
and
loop
int
xor
movsb
into
sub
or
cmpsb
popa
popa
mov
arpl
push
lods
cli
dec
ret
test
mov
neg
cmp
ljmp
push
call
or
ds
sub
push
faddl
stc
test
xor
adcb
xchg
call
pusha
fcom
mov
rolb
lods
lcall
ljmp
repnz
push
orb
xchg
loop
push
call
dec
lahf
mov
sbb
js
and
inc
or
push
lods
fstpl
test
repz
adc
mov
pop
insb
pop
sbbl
stos
add
sti
icebp
add
ja
repz
push
dec
lods
les
ss
push
and
mov
lock
movsb
cwtl
rcrb
cli
decl
xchg
shl
shrb
push
jb
sbb
add
sbb
hlt
lcall
adc
lcall
fbstp
pop
mov
addb
in
or
js
mov
scas
mov
std
push
cmp
push
hlt
imul
or
sahf
cmp
pop
add
xor
fdivl
lret
mov
xchg
popf
add
addr16
add
dec
mov
xorl
jg
aas
adc
pop
nop
ja
aam
cld
stos
fdiv
repz
mov
scas
cli
std
int
ds
out
and
add
inc
mov
pop
jo
cmp
insb
cmp
mov
mov
ja
inc
cmpsb
push
adc
outsl
mov
movsb
inc
mov
scas
bnd
aam
or
inc
mov
sbbl
je
pop
nop
std
cwtl
adc
inc
rorb
jnp
pop
fbstp
cmc
addb
cmp
and
push
cs
mov
mov
jns
or
stos
mov
jmp
ds
jnp
das
push
in
cmp
insb
cwtl
mov
mov
and
push
testb
adc
nop
push
mov
mov
jl
inc
in
push
je
sbb
into
lods
push
mov
mov
fcmovb
shl
cmp
ret
inc
leave
ljmp
sbb
pop
fmuls
or
test
xchg
loop
movsb
sbb
addl
call
sub
dec
or
jl
dec
mov
mov
cmpsb
test
mov
sub
cmpsl
rcrl
and
mov
je
loope
adc
adc
push
mov
cmp
test
push
or
les
mov
mov
sub
mov
inc
mov
ja
ret
addl
mov
jge
pop
enter
movsl
outsl
push
mov
cs
in
cltd
rorl
insl
mov
jecxz
xchg
cmp
ret
mov
xchg
mov
dec
xor
fcoms
movsb
push
dec
mov
mov
cmp
mov
lret
pop
push
repnz
imul
leave
inc
jno
in
daa
push
xchg
pop
loopne
popa
pushf
xchg
test
pop
call
or
in
cwtl
push
inc
sbb
inc
popa
lcall
loop
popa
daa
pop
stos
dec
fistl
jg
add
cmp
lahf
sti
jmp
bound
bound
gs
insl
mov
aaa
and
mov
xchg
loope
loop
imul
aam
movsl
loope
mov
pop
movsb
push
pop
xchg
cmp
sbbl
test
ss
test
inc
fisubs
push
inc
xchg
cli
xor
lahf
mov
rcll
push
insb
mov
jbe
roll
pop
adc
cmp
sub
push
int
bound
ds
dec
pop
adc
inc
or
addr16
xchg
add
mov
cmp
nopl
push
mov
sbb
outsl
stos
mov
sub
in
aad
rcrb
repnz
adc
movsl
ss
sub
enter
pop
xchg
cmc
pop
push
cmc
xchg
divps
jp
les
stc
jno,pt
and
out
aad
mov
sbb
mov
sub
sahf
adc
inc
xor
mov
xor
cmc
std
jae
jno
xchg
in
push
or
jecxz
divb
insb
mov
and
mov
ss
sub
sub
jns
sub
jecxz
loopne
stos
xor
into
std
cmpsb
push
adcl
lock
add
inc
xchg
mov
push
jmp
cs
mov
insb
insl
cmpsb
arpl
imul
cmp
mov
and
inc
jle
fadds
fs
dec
pop
ret
adc
xchg
movsl
cmp
nop
insl
sbb
add
test
pop
test
cmp
push
pop
pop
movsb
cmp
mov
add
je
cmp
push
adc
mov
adc
call
jecxz
fmuls
js
scas
scas
jmp
sub
repnz
ja
aas
inc
insb
repnz
pop
cltd
cmc
mov
push
mov
roll
push
sbb
fcompl
mov
pop
rep
lds
imul
shr
enter
icebp
cmp
repnz
jmp
jecxz
mov
mov
mov
cltd
inc
dec
pop
dec
fisubs
jo
sub
fimull
adc
dec
mov
enter
out
in
ror
ret
ret
push
xchg
and
mov
or
not
out
xlat
dec
add
xor
lea
shl
pop
or
cmp
sub
in
clc
aas
mov
dec
cld
test
mov
cli
cmp
pop
xchg
jp
or
mov
outsl
add
xchg
sbbl
fstps
pop
mov
dec
jecxz
mov
push
ljmp
int3
sub
shlb
ret
xor
inc
sahf
lds
mov
push
js
push
cmp
and
and
cld
test
stos
sbb
xchg
cmp
in
insb
rcr
cmpsb
or
mov
lock
test
cli
inc
mov
dec
fstpl
cmp
rcrl
std
jl
or
mov
rclb
stc
ljmp
inc
testb
and
pop
mov
lea
ds
mov
pop
popa
sbb
dec
fnstenv
add
ja
cs
or
imulb
mov
dec
test
call
sub
addr16
xchg
cmp
dec
jo
pusha
stos
cmpsl
jo
cli
dec
in
and
clc
int3
leave
xchg
and
pop
or
ret
iret
call
orb
inc
mov
rorl
push
stos
mov
fists
jne
pop
sbb
dec
xchg
xchg
mov
mov
push
push
ret
mov
test
insb
ljmp
lea
xchg
ficomps
or
aad
push
js
cmpsl
mov
mov
jo
jecxz
repz
adc
shll
xlat
das
shrl
subl
push
mov
jmp
sub
imulb
scas
push
fidivs
inc
sbb
pop
xor
and
pop
scas
cmpsl
mov
mov
xchg
pop
and
add
mov
push
dec
xor
jmp
nop
jle
fstps
cmpsl
in
sub
push
ret
movsb
clc
int3
outsl
mov
and
cltd
sub
scas
push
scas
fwait
xchg
repz
incl
adc
lods
pop
ljmp
sbb
out
imul
mov
fildll
push
rclb
nop
pop
sub
jae
in
lahf
pop
int
sbb
inc
rorb
iret
int
jb
inc
aad
test
dec
adc
or
in
test
mov
dec
cmp
add
push
or
ja
adc
sahf
pusha
pop
mov
lods
adc
cmp
loop
rcl
xor
test
inc
mov
dec
ljmp
inc
ret
cwtl
sbb
push
xchg
adc
mov
rclb
mov
sarb
pop
push
stos
rorl
jle
mov
mov
xlat
push
or
sub
xchg
in
push
lahf
jns
push
pop
je
movsl
movsl
or
lock
sub
les
jmp
rclb
jmp
sub
xor
pop
pop
or
in
mov
or
rclb
xchg
adc
pop
inc
popa
and
push
or
arpl
jle
xor
jmp
push
jns
aaa
push
mov
out
gs
jecxz
pusha
jmp
xor
mov
pop
mov
out
or
mov
in
lods
mov
jecxz
pop
rcrb
addr16
add
into
or
jmp
rorl
mov
jns
mov
enter
cmp
xchg
pop
mov
jp
mov
mov
pop
enter
dec
inc
jle
cmp
jp
shlb
ljmp
shrb
call
js
rcll
es
sahf
iret
cmp
sub
hlt
dec
clc
and
fidivrs
movsb
leave
and
or
arpl
loopne
cmpsl
inc
or
mov
jl
sahf
jle
mov
lea
test
jecxz
repz
repnz
out
cmp
inc
inc
leave
adc
push
xchg
lods
icebp
nop
xor
fmul
mov
xchg
repz
lods
mov
mov
shrl
pop
pushf
adc
jl
sysret
push
outsb
popa
mov
sti
cmpb
adc
jnp
jmp
inc
outsl
daa
pop
sub
adc
fcomi
data16
sbb
or
orl
push
and
int3
push
cmp
call
mov
cmp
pop
xchg
jb
in
or
pop
pushf
int3
in
ss
aaa
and
aam
movsl
aaa
pop
clc
je
and
aam
call
xchg
mov
aam
xor
lods
pop
add
mov
or
jmp
or
fwait
out
test
int
test
lcall
movsb
sti
or
loop
call
std
jg
test
mov
scas
mov
jmp
adcb
and
dec
pop
pop
sub
inc
ficoml
mov
push
push
jecxz
cs
hlt
dec
into
loopne
push
loope
mov
lret
jmp
pop
leave
add
sub
into
mov
test
mov
faddl
xchg
push
dec
dec
into
clc
int3
hlt
xchg
jge
add
arpl
int3
inc
aaa
sbb
add
aam
xor
jg
aas
add
jp
sbb
adc
push
cmp
cwtl
adc
push
pop
out
and
cmp
cmpsl
xchg
jo
insb
orb
xor
or
sbb
mov
xor
hlt
jae
mov
cmp
or
loop
cmp
jle
sbb
sbb
mov
ss
cltd
inc
fadds
adc
shlb
daa
mov
sbb
sub
dec
cmp
push
leave
cli
push
aad
ds
mov
and
jo
adc
shlb
sub
mov
scas
xchg
movsb
add
mov
mov
lock
imul
jecxz
push
push
inc
mov
jmp
pop
aas
mov
sbb
aam
je
lods
mov
pop
loopne
mov
mov
pop
mov
fldt
inc
pop
and
movl
fs
xchg
mov
xchg
das
mov
adc
mov
pop
push
lods
mov
and
pop
in
sub
adc
js
movsl
xchg
lock
push
sub
push
scas
cmp
sub
dec
xor
xchg
jl
cwtl
cmp
add
cld
out
nop
adcb
cmp
xchg
dec
sub
outsb
frstor
test
adc
mov
arpl
mov
pop
mov
pusha
shlb
mov
cmp
lock
push
push
push
fistpl
mov
dec
inc
int
dec
sub
inc
int3
xchg
lahf
add
insl
jae
shr
adc
jbe
dec
sub
mov
push
adc
jmp
sub
jge
pushf
mov
call
cbtw
dec
leave
inc
ret
mov
lock
rcll
shll
mov
rcrw
xchg
and
lock
mov
pop
mov
push
out
arpl
sbb
ds
mov
lds
insl
mov
dec
ficomps
sbb
xor
dec
cmp
cmp
dec
adc
inc
scas
or
jnp
dec
inc
mov
adc
ja
and
sti
jle
sbb
gs
pop
fisubl
cmp
add
jge
or
inc
fsubs
inc
or
inc
leave
xchg
dec
lock
dec
loope
mov
xlat
rcrl
add
shrl
inc
orl
addr16
pop
adc
ret
xor
xchg
sub
fwait
push
and
aas
mov
fs
das
xlat
sahf
stc
out
mov
dec
stos
jbe
shll
ds
insb
jb
sbbl
mov
inc
inc
sub
inc
add
test
sti
rcl
loope
push
movsl
outsl
lea
jae
outsb
sbb
add
push
mov
aam
aad
outsl
fstpl
dec
inc
faddp
lahf
pop
out
xchg
les
and
int3
inc
jle
or
fisttps
aam
rcrb
mov
das
test
sub
xor
mov
dec
dec
insb
and
mov
cmp
call
loop
subb
pop
xor
mov
addl
and
ds
in
jle
les
fisubrl
push
ds
add
sub
clc
dec
cmc
aad
mov
out
pop
rolb
xchg
pop
mov
cmp
fiadds
xchg
ljmp
push
push
push
or
push
sub
push
movntq
out
test
out
jmp
push
dec
mov
bts
push
push
and
mov
andl
mov
cs
insb
data16
into
cli
stos
xchg
movsb
mov
iret
jnp
adc
daa
cltd
loopne
xchg
xor
mov
push
jo
out
xchg
xor
add
jns
jne
pop
out
cltd
mov
mov
push
push
fbld
sbb
arpl
sbb
jg
mov
aad
nop
fxch
dec
pop
push
xchg
or
push
cs
mov
icebp
and
and
stos
lods
jne
adc
or
inc
shlb
ret
leave
incb
dec
cltd
adc
icebp
dec
push
push
xor
popa
push
xorb
rorb
mov
ja
test
pop
cmc
pop
sub
sbb
cmp
int
push
and
std
fsubl
ret
sbb
xor
sbb
push
mov
sub
push
lds
xchg
xor
icebp
lods
fidivrs
rcrb
fs
sti
add
mov
add
pop
push
je
push
add
xor
push
jo
inc
sub
sbb
xchg
pop
fmull
mov
xchg
movsb
xor
dec
ds
in
leave
jg
cwtl
mov
test
and
xchg
jp
sub
iret
push
js
xor
xorl
es
jmp
jg
popf
pop
daa
push
dec
cmp
inc
std
movsb
jmp
movsl
add
and
lds
dec
aad
fisttpll
fnstsw
mov
in
adc
mov
sub
sbb
imul
add
jl
mov
jnp
pop
std
loop
push
shll
addr16
adc
pop
inc
adc
cltd
push
pop
dec
notl
rcrb
mov
mov
pop
xchg
inc
add
movsl
cli
add
lds
cs
fsubs
mov
push
insl
dec
outsb
cmc
mov
negb
aam
push
jmp
xor
es
add
or
push
sarl
mul
or
push
xchg
mov
dec
xor
lods
aaa
insl
mov
mov
inc
pusha
dec
push
fisubrs
insb
scas
mov
inc
xlat
aam
in
mov
stos
fs
call
mov
insb
ds
bound
jb
xchg
or
adc
in
fcmovnb
xchg
sti
inc
imul
cmp
mov
adc
dec
mov
je
xchg
inc
pop
adc
mov
cli
popa
adc
outsl
push
mov
jns
das
call
mov
xor
mov
aam
dec
lods
popf
ficompl
insl
push
push
jp
pop
sti
sbb
sbb
jle
test
jb
add
and
ja
shrl
sbbb
dec
and
es
mov
or
jg
push
jns
pop
mov
mov
ficompl
lods
jae
icebp
imul
lods
mov
loopne
shl
jg
sub
cs
xchg
push
pusha
je
lea
outsl
sti
lods
add
repz
shll
int
fisubrl
movsb
std
pop
in
inc
pop
inc
es
adc
adc
aas
mov
add
sbb
pop
mov
out
cmc
loope
adc
push
mov
add
pop
stos
jmp
pop
mov
test
js
xlat
and
cmp
cmp
popf
ret
cltd
in
xchg
xlat
ficoms
enter
cmp
out
xlat
mov
mov
or
or
xchg
xchg
mov
mov
mov
dec
mov
mov
xor
enter
lods
decl
rol
xor
test
add
ss
ret
mov
mov
cmp
mov
hlt
js
pop
push
add
fdivp
jecxz
popf
test
insb
mov
and
fisubrs
or
and
rcrl
aam
xchg
xchg
insb
pop
xor
pop
jns
call
jbe
int3
imul
sahf
sub
call
outsb
adc
out
cmp
mull
sbb
pusha
xlat
test
xchg
mov
push
mov
and
sub
les
lahf
inc
aas
addl
mov
dec
push
dec
jns
or
std
ficompl
push
push
into
cmc
fbstp
dec
fmulp
aaa
mov
shlb
inc
inc
loopne
shl
aad
fisubs
lds
and
popa
fnstenv
fidivrs
mov
pushf
mov
clc
xor
fwait
xor
ret
sahf
loopne
cli
jns
mov
aas
mov
test
inc
or
pop
add
mov
push
pop
adc
push
popa
push
jnp
sub
push
adc
mov
push
les
test
movsb
add
inc
loop
sbb
cmp
loope
mov
aad
mov
in
sbb
dec
imul
cmpsl
jo
jbe
daa
loope
sub
sbb
mov
or
rcrb
xor
lcall
jp
repnz
push
push
inc
adc
sub
xchg
incb
sbb
aad
cs
push
or
dec
aad
daa
pusha
jg
ret
nop/reserved
aas
enter
push
inc
fistpl
jle
in
ret
loope
aad
in
popf
subps
jns
subl
in
add
mov
subb
fwait
adc
popa
pusha
stos
cmpsl
insl
jp
jle
stos
rcrl
aad
bound
mov
lcall
outsb
outsl
mov
mov
lock
rcrb
sar
add
into
mov
scas
iret
mov
pushf
dec
ja
rcrb
dec
pop
jle
jnp
int
and
jnp
ds
pop
lea
imul
pop
shrb
and
dec
push
sbb
cmp
mov
add
outsb
addr16
push
lahf
lret
idivl
nop
cmp
outsl
rcrl
subb
push
mov
neg
nop
imul
push
sub
lock
lods
ds
mov
adc
mov
mov
cld
lods
rcr
inc
pop
mov
adc
ret
inc
jae
sbb
pusha
int
mov
jbe
mov
push
sti
mov
jl
out
std
aam
dec
jl
imulb
jge
or
insl
pop
or
xlat
cmc
rorl
stc
inc
leave
fwait
push
mov
dec
test
and
sub
test
fwait
jl
inc
ja
clc
sbbb
mov
push
insb
sub
jl
xchg
mov
inc
and
js
mov
shlb
mov
pop
mov
cmpsb
sbb
and
test
and
and
addr16
in
mov
mov
cmpb
pop
js
adc
xchg
mov
clc
lods
stc
jp
xor
push
shlb
sub
stc
imul
xorb
or
adc
mov
pop
pop
out
pause
mov
test
in
pushf
xchg
outsl
jbe
in
jp
push
push
mov
std
stos
sbb
andl
cmp
sbb
mov
push
sbb
pop
or
cmp
sbb
fstpt
xchg
mov
mov
inc
mov
xor
cld
sbb
std
orb
scas
mov
sub
lahf
push
into
mov
ljmp
aaa
gs
loopne
inc
jle
xor
stos
sub
in
and
rcrl
stos
push
jae
shr
ret
out
or
sub
push
mov
sub
scas
jg
mov
loopne
mov
mov
mov
mov
lds
jnp
xchg
imul
js
jmp
lock
mov
add
sbb
fsts
and
pop
popf
or
fs
cmp
adc
and
je
sbb
leave
pushf
stos
push
sbb
std
push
pusha
xchg
lret
imul
jns
mov
jle
fwait
out
cmc
rcl
int3
and
test
push
lods
mov
jbe
gs
cmpsb
push
int
mov
jns
lea
xchg
mov
add
cwtl
ja
pop
out
push
jg
test
aad
sbb
mov
sbb
js
mov
rcr
pop
push
pop
xchg
xchg
xchg
mov
outsb
sti
insb
dec
lret
mov
test
jne
mov
pop
and
and
jg
xchg
adc
fimuls
pop
jmp
out
insb
aaa
mov
cli
pop
icebp
lods
mov
aam
imulb
xchg
mov
mov
push
pop
push
pop
into
jge
popf
stos
popa
cmp
mov
cwtl
xchg
add
out
lock
sarb
mov
fists
xchg
fists
and
mov
cli
mov
hlt
iret
sbb
cmp
xchg
and
adc
lds
punpckhbw
iret
jp
leave
mov
adc
xor
daa
mov
xor
outsl
lds
ljmp
or
das
into
xchg
xchg
xchg
jb
push
push
bound
or
fs
test
adc
and
loopne
je
inc
lea
lods
push
bound
pop
xor
jno
clc
aad
jns
adc
pop
mov
loope
pop
adc
pop
add
jb
xchg
in
adc
pop
mov
push
xchg
sub
les
scas
mov
andl
mov
adc
cli
rcr
push
and
movsl
loop
int3
pop
gs
insb
mov
out
xchg
adc
mov
adc
sub
and
adc
xlat
add
loopne
outsl
movsl
in
xor
pop
add
sbb
psllq
iret
mov
lret
not
sahf
ret
das
mov
les
in
scas
pop
push
or
call
lret
aad
sub
cmp
xchg
mov
fists
jo
lods
popf
inc
hlt
jecxz
or
dec
inc
jl
mov
and
xchg
xchg
shl
jbe
clc
mov
mov
and
ret
mov
xchg
jl
es
aaa
negl
dec
or
mov
and
mov
inc
in
mov
sbb
icebp
into
adc
sbbl
sbb
jbe
scas
in
and
jg
nop
push
out
icebp
lahf
test
xor
push
xchg
jl
dec
inc
inc
mov
into
fisubrl
mov
mov
sub
inc
test
imul
cld
add
rcrb
mov
nop
dec
nop
outsb
adc
pop
stos
enter
jp
daa
xor
int
sahf
push
mov
add
testl
push
jl
or
mov
push
scas
repz
test
inc
lds
pop
and
sub
add
mov
pop
pop
push
movsb
js
inc
push
shl
loop
push
leave
scas
mov
or
jmp
and
daa
out
rorb
mov
add
outsl
cli
lcall
ds
and
sti
xchg
cmp
ss
movb
adc
push
mov
daa
sub
std
or
dec
imul
inc
sub
mov
jp
aaa
pop
aaa
test
xchg
push
pop
cmpsl
je
ljmp
sbb
adc
movsb
lds
cld
int
adc
scas
mov
idivb
rorb
lods
orl
or
sbb
fstps
pop
hlt
mov
ja
or
ja
stc
cmp
mov
cmp
mov
repnz
ror
mov
push
in
dec
lods
pop
popa
push
mov
jae
sbb
pusha
clc
adc
out
adc
je
and
into
aaa
add
pop
hlt
pop
inc
or
xor
mov
ret
push
dec
nop
pop
adc
mov
jmp
push
adc
jp
sahf
neg
enter
mov
sbb
push
movsl
add
imul
in
xor
sti
ret
and
pop
lcall
fwait
int3
cmc
fldl
inc
cltd
daa
push
stc
out
fmuls
xor
inc
jb
push
fwait
cld
mov
mov
xchg
adc
pushf
and
mov
mov
out
mov
imull
rcrb
jno
movsb
in
jge
jg
jmp
cmpsl
or
xor
fwait
mov
scas
pop
popa
nop
cmp
imul
je
out
pop
repz
lret
hlt
pop
aam
jg
and
add
in
add
fcom
xchg
mov
cmc
cmc
sti
xchg
idivl
and
in
mov
inc
leave
push
mov
sub
sub
rclb
cmp
mov
adc
loop
mulb
mov
pop
mov
push
in
push
imul
cmc
mov
push
inc
dec
pop
sub
inc
fwait
cld
lods
sub
pop
pop
mov
push
out
jnp
xchg
inc
add
stos
out
test
shrl
fimuls
leave
xchg
out
in
jmp
mov
and
ja
xchg
and
outsb
inc
cmp
jle
dec
mov
mov
cmp
and
xchg
xchg
stc
fisttpll
xor
add
dec
pushf
mov
test
stc
icebp
mov
je
bound
stos
push
pop
dec
insl
je
sbb
pop
mov
mov
cmp
pusha
lea
sar
push
mov
stc
enter
mov
pop
mov
sahf
cld
xchg
and
add
fisttps
dec
xor
fisttpll
xor
out
jecxz
test
sub
push
mov
inc
clc
orb
mov
inc
pop
bound
mov
jmp
mov
icebp
ret
mov
daa
mov
ljmp
jno
notb
xor
sub
push
repz
fmull
lods
fmuls
push
out
int
scas
push
sbb
mov
push
xor
xchg
jmp
dec
push
insl
mov
mov
std
jmp
mov
jecxz
popa
ds
sub
dec
aas
je
pop
mov
mov
jbe
inc
testl
lret
outsb
dec
and
xor
add
jb
icebp
xchg
mov
jp
imul
xchg
push
sbb
icebp
push
push
cwtl
arpl
aas
mov
popf
sbb
loope
adc
lods
and
aam
cmp
bound
mov
fsubrl
cli
push
scas
scas
loop
or
shll
rcrl
or
repz
jo,pt
loope
xor
outsl
adcl
in
mov
leave
mov
pushf
dec
dec
push
push
sub
jmp
pusha
adc
pop
outsl
xchg
cltd
mov
pop
mov
inc
leave
hlt
scas
inc
sbb
repnz
mov
lods
dec
test
inc
pop
je
cmp
les
clc
xchg
jp
test
push
or
test
out
pop
adc
ds
cmp
insb
enter
and
add
and
div
jle
push
jns
push
lods
in
adcb
outsb
adcl
mov
call
xchg
pusha
fincstp
hlt
and
mov
jp
xchg
mov
sub
xchg
dec
dec
dec
dec
sti
sub
mov
xor
daa
sub
jnp
or
pop
ds
nop
out
mov
in
in
cwtl
out
and
in
mov
in
xlat
push
sbb
mov
pop
sub
repz
and
jmp
pop
mov
push
mov
and
cmp
push
and
je
outsb
xchg
repz
inc
call
scas
cmp
clc
clc
xchg
jmp
fcoml
ret
rorb
sbb
mov
dec
xchg
int
test
fwait
movsl
mov
xor
add
xchg
push
inc
push
into
div
push
cmp
pop
inc
jne
mov
pop
addl
in
aad
push
imul
xchg
xlat
inc
je
sub
and
or
dec
sbb
repz
repnz
out
mov
pop
push
push
xchg
mov
icebp
jle
loop
dec
lods
dec
in
sub
in
and
aad
insb
hlt
sbb
mov
into
mov
cmp
push
inc
insb
test
pushf
ljmp
xchg
xchg
inc
imul
and
iret
mov
jbe
add
arpl
sub
sahf
in
push
jp
xor
adc
sub
stos
sti
mov
aam
adc
loope
fmuls
repz
adc
mov
icebp
push
daa
or
icebp
dec
cs
incl
aam
or
enter
es
push
test
sti
outsl
hlt
imul
out
je
push
pop
imul
cmp
inc
mov
jbe
jns
jne
bound
and
push
int3
cmc
jg
or
das
cmpsb
aas
mov
mov
push
addr16
pop
aad
push
jnp
cmc
imul
hlt
repz
iret
fldenv
push
xchg
mov
pop
sbb
test
mov
xor
stc
xor
jo
fcmove
mov
call
fwait
inc
push
mov
es
subb
loope
add
mov
xchg
adc
std
lods
mov
out
fcomi
inc
clc
fsubs
in
das
push
sub
cltd
nop
jb
mov
call
adc
jmp
lock
mov
insb
pop
dec
stos
xchg
into
movsb
sti
add
fistps
sbb
lcall
inc
pop
add
ror
sub
aas
and
xchg
pusha
mov
nop
popf
mov
loop
stos
sbb
mov
pop
ret
out
mov
add
push
test
loope
hlt
cmc
sbbl
jecxz
dec
jnp
fiadds
pop
ret
lock
xorl
xor
pop
xchg
test
push
adc
jg
mov
cld
js
into
pusha
sbb
mov
aas
inc
push
imul
jb
mov
xchg
and
lock
movsl
jnp
negb
push
ljmp
dec
addr16
in
sub
push
mov
les
ljmp
add
pusha
inc
sbb
dec
inc
in
scas
xor
outsl
or
fdivs
mov
adc
test
mov
xchg
cltd
arpl
xor
mov
lcall
jle
fisttpll
xor
lods
insb
push
xor
xor
xchg
mov
xrelease
pop
into
popf
xchg
fiaddl
or
xor
push
mov
movb
push
push
test
cmp
mov
cmc
es
movsb
out
insl
adc
mov
and
fs
xlat
pop
std
out
mov
leave
cmpsl
pop
mov
push
jl
frndint
mov
mov
push
dec
or
jge
sub
mov
repnz
pop
inc
aad
fidivrs
outsl
iret
daa
scas
jo
pop
fs
cmc
push
xor
mov
fwait
add
or
xor
push
out
sub
add
inc
mov
enter
imul
or
mov
push
rorb
mov
clc
and
dec
xchg
sub
mov
imulb
pushf
and
mov
aam
or
testb
push
fisubrs
test
inc
arpl
sti
sti
cmpsl
outsb
fldenv
push
pop
inc
andb
pushf
loop
push
mov
mov
int3
popf
xlat
arpl
push
stos
xor
jbe
popf
sub
jg
call
pop
loop
fdivp
cwtl
adc
mov
or
inc
push
sarb
xor
movsl
ret
mov
or
mov
inc
jbe
leave
xchg
cmc
and
xchg
inc
pop
leave
inc
pop
and
push
push
sub
decb
bnd
ss
out
cmp
push
fs
mov
and
clc
out
jns
hlt
mov
xor
inc
inc
and
cmc
mov
and
outsb
out
pushf
pushf
mov
fmuls
cmpsb
ret
roll
mov
cmp
out
sbb
mov
ret
mov
lret
lcall
jns
xor
push
scas
or
xor
pop
jb
movsl
nop
ljmp
imul
loope
sti
ret
not
xchg
fmul
sub
iret
jg
fldl
daa
mov
sub
stc
and
mov
ror
dec
push
xchg
adc
inc
es
js
cld
in
jbe
mov
stos
addr16
stos
pop
stc
rcll
jp
xchg
or
sbb
outsb
pop
stos
sbb
es
lret
xchg
xor
pop
inc
sbb
or
jne
nop
pop
in
and
cld
mov
lahf
stc
out
sbb
inc
lock
dec
cmc
outsl
push
adc
mov
or
push
dec
fs
imul
and
movsl
cmp
lods
cmp
mov
push
fsubl
notl
outsl
popa
or
stos
das
mull
lea
negl
popf
mov
sbb
or
loopne
push
pop
jne
pop
push
xchg
mov
and
add
inc
xor
rcrb
enter
or
pushf
xchg
loopne
jo
aam
adc
insb
push
mov
mov
mov
xchg
into
xor
lods
xchg
or
bound
pop
imul
out
inc
shr
std
xlat
push
sbb
or
fadds
dec
mov
fcompl
sub
ret
gs
adc
cwtl
pop
mov
jne
pusha
jg
addr16
jns
add
pushf
inc
stos
or
ret
sbb
mov
jo
cwtl
ds
mov
repz
jp
test
jg
xchg
jecxz
push
push
fldl2t
imul
std
jo
stos
fstpl
jmp
cs
xor
lock
andl
sarb
shl
jb
inc
test
lret
jl
xchg
lret
push
xchg
fcmovnb
aad
push
pop
xor
cmp
fcmovnb
sub
or
sbb
aas
mov
cli
in
push
gs
inc
xchg
add
pop
test
xchg
inc
cmp
sub
and
pop
sti
jp
shll
sub
jbe
roll
mov
sub
lahf
movsl
orb
mov
sti
mov
shrl
mov
rcrl
jp
and
xor
fs
lock
ret
les
ds
ret
sub
jmp
fstpl
sub
inc
jbe
adc
cmp
sub
jge
dec
and
test
push
scas
test
push
ljmp
sti
les
pop
jle
or
mov
add
ss
or
lds
pop
pop
sub
out
cmp
hlt
jl
cli
cmc
js
ficompl
lahf
aas
gs
cmp
clc
and
rcrl
or
xchg
jne
insb
mov
and
popf
fwait
loop
fwait
in
push
adc
mov
lods
sub
mov
nop
cli
repnz
cmpsl
lds
mov
sbb
xor
jmp
inc
pop
or
frstor
fwait
insb
jne
addb
clc
mov
test
or
jno
leave
daa
out
iret
and
das
addl
test
ss
xchg
jb
sti
sub
mov
cmc
rcr
scas
cmp
pop
outsb
or
lock
lock
sbb
pop
xchg
and
sbb
pop
leave
stos
repz
or
test
sub
fildll
imul
mov
or
sbb
es
or
sbb
xlat
ret
xchg
xor
mov
clc
pop
addr16
add
dec
pop
test
imul
mov
fs
push
imul
fs
sub
ss
rcl
adc
jb
fidivs
daa
cmpsb
sbb
inc
mov
cwtl
data16
xor
xchg
jbe
inc
xchg
mov
xchg
dec
xchg
add
xor
movsl
adc
in
lds
sbb
jp
mov
cli
aas
lock
xchg
or
cld
add
pop
xchg
scas
cmc
jge
in
push
pop
sub
inc
fst
fwait
or
sbb
call
insb
adc
inc
shrl
fmulp
inc
cld
popaw
in
mov
dec
sbb
mov
or
repnz
test
mov
sbb
cvtpi2ps
test
xlat
lods
dec
sbb
mov
xor
jmp
repnz
int3
and
hlt
mov
jno
adcb
xor
lcall
dec
fidivrl
mov
mov
sbb
ja
add
inc
sbb
pop
call
fnstcw
inc
xchg
pop
fcmovnbe
add
sbb
sbb
pop
mov
or
xor
int3
add
icebp
mov
test
cmp
mov
or
cmp
jns
pop
dec
inc
fwait
cli
sub
and
and
pop
or
jl
lret
adc
out
lahf
pop
leave
cmp
dec
mov
fcoml
insb
outsb
pusha
mov
scas
lcall
jo
cli
adc
xor
dec
in
inc
xor
int3
mov
stc
dec
xchg
loope
add
ja
sbb
sub
cmpsl
jge
les
aam
jecxz
lds
stc
outsb
aas
cmpl
ljmp
push
outsl
dec
sub
popf
shrl
pop
jb
mov
insl
mov
or
cmp
shl
cmp
sbb
pop
jle
fldenv
andl
adc
in
loop
inc
in
mull
jne
gs
push
push
mov
xchg
sub
lahf
lret
sub
shl
fs
pop
loop
and
enter
popa
add
fmull
imul
lods
stos
mov
rorl
aas
xlat
loop
sub
dec
push
mov
and
mov
loope
add
push
stos
jmp
icebp
xlat
mov
cmp
jle
pushf
adc
mov
mov
xor
inc
repz
std
adc
ss
mov
inc
orb
dec
lock
mov
xchg
iret
push
inc
out
insb
call
xchg
aam
into
sub
or
push
lds
dec
pop
add
icebp
cwtl
cmc
inc
fcoms
fisubrs
jecxz
dec
dec
inc
insl
add
neg
push
loopne
pop
ja,pn
aas
sbb
or
dec
pop
test
test
jno
cli
lret
jl
fadds
lcall
popa
test
fs
es
cmc
push
add
inc
pop
movsl
popf
dec
loop
cmp
jae
and
inc
cmp
insb
push
imul
insb
les
sarb
out
pop
lds
ljmp
iret
faddl
xchg
add
jmp
jle
dec
stos
and
testl
jp
dec
pusha
jbe
repnz
in
add
push
bound
imul
and
dec
jle
in
out
movsb
popf
es
cld
xchg
cmp
jb
popf
push
jmp
xor
sbb
insb
jne
inc
mov
pop
sbb
cmpsb
dec
int3
add
icebp
xchg
lret
jne
cmp
xchg
shll
and
std
inc
outsl
fs
xor
xor
mov
inc
or
mov
addl
pop
cs
fcompl
mov
xor
fidivrl
xchg
dec
decl
shl
es
in
inc
push
loopne
iret
in
std
push
mul
jge
pop
int3
cmpb
daa
in
cmp
dec
xchg
scas
dec
shr
out
iret
mov
inc
xor
mov
cmp
insl
mov
lds
aam
mov
outsb
jns
mov
stc
inc
cs
lea
push
aam
mov
xchg
and
xchg
mov
adc
aas
aas
dec
inc
fistpll
lret
jnp
adc
shr
lds
pop
movsl
fdiv
xchg
aad
jg
fcomps
mov
push
pop
lahf
or
stos
mov
fimull
xor
or
push
sbb
ficomps
cld
lods
xor
fs
jnp
dec
mov
push
mov
aaa
mov
iret
push
cmp
addr16
xchg
cwtl
idiv
push
dec
xchg
mov
adc
push
pop
jmp
cmpsl
addb
lods
and
and
fldcw
sbb
push
jb
mov
dec
rorb
jnp
mov
push
add
pop
adc
jp
push
cld
insl
daa
xchg
out
cmp
adc
ficoms
lcall
push
jl
andb
push
ljmp
stos
outsb
sub
addr16
cmp
lods
mov
pop
push
push
in
popl
les
addl
lret
jecxz
leave
mov
cmc
inc
push
adc
stc
xor
pop
adc
ret
or
test
jb
xchg
shl
xchg
sub
xor
mov
pop
or
jno
push
repnz
add
inc
movsb
inc
test
dec
lods
and
sub
fdivp
xor
xor
and
loop
je
icebp
test
sub
jl
insl
mov
cmp
into
flds
icebp
push
and
mov
lret
movsl
lcall
popf
shrb
mov
cmp
imul
adcb
out
es
mov
movsb
sarl
je
fcomps
xor
and
iretw
out
xor
push
nop
mov
mov
test
cmp
aaa
daa
aas
push
cmp
jecxz
scas
jecxz
repz
jno
in
clc
xlat
outsl
cmpl
mov
dec
movsb
fs
sub
repz
or
adc
ja
andl
xor
push
and
sarl
pop
scas
pop
in
iret
pushf
scas
mov
stos
xlat
sbb
sub
cmp
or
add
push
scas
mov
in
mov
add
jb
xchg
push
push
inc
mov
or
sub
fwait
sbb
movsl
dec
xlat
xchg
and
sbb
push
out
test
loopne
outsl
std
fbstp
mov
in
inc
gs
mov
push
xor
fiaddl
int3
or
dec
loopne
test
inc
loop
scas
das
outsl
pushf
test
xchg
cmp
or
jb
lahf
mov
mov
inc
scas
push
out
cmp
and
xchg
xor
pop
movsb
repz
mov
idivb
pop
and
add
xlat
or
mov
testb
sub
push
sbb
jmp
mov
sbb
ret
scas
bound
lds
data16
sub
jno
mov
fwait
gs
sub
sbb
xor
inc
or
fsts
outsb
add
add
pop
out
pop
in
mov
xlat
dec
push
mov
test
decl
mov
cltd
call
aad
mov
or
push
icebp
adc
push
repz
mov
std
gs
xor
push
mov
jno
xchg
add
stc
test
rcl
mov
call
adc
xor
outsl
pop
sbb
and
imul
adcl
cltd
mov
cmc
jae
enter
cmp
and
ret
push
xchg
clts
lcall
dec
adc
cmp
pop
push
jns
loopne
mov
js
mov
js
jnp
and
cmpsb
stc
push
aam
pop
lea
sub
sub
sbb
loope
pop
loop
repz
mov
jl
and
cmpsb
arpl
xchg
push
mov
add
mov
fsubs
mov
imul
sbb
and
test
sbb
fsubrs
andl
or
mov
mov
and
push
add
cltd
daa
cli
sbb
ds
sbb
insl
push
in
mov
arpl
adc
enter
std
jne
int
in
inc
jecxz
out
lret
pop
arpl
xor
jnp
mov
mov
subb
pop
clc
jnp
mov
in
cmpsb
xor
jae
xchg
pop
rclb
dec
pusha
xchg
xchg
mov
dec
or
jne
lahf
out
dec
pop
fildl
cmp
in
fstl
jecxz
inc
imul
data16
divb
das
daa
stc
pop
pushf
lods
fstpl
cmp
xor
mov
dec
into
pop
dec
mov
mov
xor
js
add
pop
cmpsb
fs
add
pop
pop
aas
test
or
lea
mov
inc
and
fwait
push
adc
shrb
cmp
jle
je
insb
pusha
leave
stos
adc
pop
les
das
mov
inc
ja
lcall
repnz
sub
out
add
imul
fmull
xorb
testb
dec
mov
sbb
out
mov
aam
push
jge
mov
inc
cmp
sub
imul
scas
mov
xlat
xchg
mov
jnp
cmp
dec
popa
hlt
push
mov
gs
fstpl
cmpsl
in
notl
iret
stos
jnp
lret
repnz
addr16
xchg
push
mov
mov
repnz
ficomps
mov
sub
fs
mov
dec
into
inc
xchg
pushf
rcrb
jl
dec
and
clc
aam
or
sbb
and
xor
or
out
push
push
popf
mov
fsubrl
sbb
lahf
mov
fs
loopne
ror
fldcw
aas
or
cmc
pop
insb
mov
push
adc
sub
lea
dec
pop
loop
lock
imul
push
negl
dec
mov
jno
pop
adc
push
fcmovbe
out
sub
sbb
mov
test
jnp
fildll
loop
cmc
lahf
setno
decb
pusha
inc
xchg
cmp
pop
sub
inc
shll
push
mov
scas
frstor
nop
sub
loope
ds
mov
cwtl
icebp
or
and
icebp
and
mov
xchg
adc
mov
adc
or
adc
or
xor
xor
aad
mov
inc
dec
mov
jmp
adc
sbb
fidivrs
iret
xor
mov
xchg
imul
sbb
mov
insl
jno
mov
jge
push
jnp
sub
loopne
jns
mov
cmp
push
loop
stos
xchg
insb
and
push
xor
mov
mov
lahf
adc
fdivs
xchg
xlat
jp
dec
mov
into
mov
sbb
sbb
jmp
add
test
cmp
pop
add
daa
ja
xlat
sbb
jecxz
dec
add
jecxz
mov
int
or
test
push
loopne
mov
push
fildl
mov
sti
and
mov
mov
mov
loop
icebp
ss
mov
push
push
imul
pop
outsl
mov
pop
mov
cli
cmp
xor
repnz
fwait
fs
sbb
sbb
scas
data16
fucomp
cld
dec
mov
add
xor
jnp
jnp
xchg
cmp
cmp
iret
lea
xor
jmp
fstl
lods
cwtl
sub
push
dec
das
fmuls
push
jmp
mov
cmp
cmpsl
xchg
jnp
nop
clc
push
jecxz
xlat
pop
js
inc
lods
fdivl
xor
call
inc
rcrb
mov
in
xchg
cmp
pop
lock
pop
pop
fidivl
bound
push
icebp
popa
xor
jne
movl
movsb
pop
insl
out
dec
mov
push
xchg
int
adc
push
cli
in
insb
mov
or
sbb
mov
stos
scas
adc
cld
xchg
aad
jb
ss
or
gs
rolb
sbb
add
jae
leave
cmp
enter
pop
jno
cmpsb
jecxz
mov
cmp
dec
cld
lods
movsb
pushf
fstpt
xchg
sti
mov
fisttpll
cwtl
js
aaa
das
stos
xchg
push
and
adc
add
xor
sub
mov
ficoml
mov
add
fwait
mov
ja
int3
jne
mov
out
incb
std
scas
rolb
mov
mov
mov
movl
mov
cmc
mov
and
jo
jb
movsl
jnp
shrl
jp
and
loopne
jl
jg
scas
out
fyl2x
ficompl
inc
mov
xchg
shll
cmp
or
lock
sti
iret
daa
jnp
pop
mov
mov
jp
xchg
cli
jb
mov
push
movsb
cmp
inc
cmc
fldl
dec
mov
adc
mov
sbb
pop
sbb
fwait
add
push
and
push
rcll
outsl
cmp
pop
inc
cmc
shlb
les
sbb
arpl
xchg
adc
test
orb
movsb
je
push
aam
aaa
and
call
sbb
shrb
lcall
jae
xchg
aas
jp
outsb
inc
orb
xlat
rcrl
popl
pop
mov
fstps
cmpsb
testl
jnp
sar
xchg
daa
clc
repz
andl
roll
xor
or
inc
mov
jl
dec
or
cmp
mov
scas
or
mov
sbb
mov
and
or
lds
pop
out
pop
in
aad
outsb
scas
and
dec
mov
cmp
dec
outsb
pop
sbb
lds
mov
add
int
loop
pusha
aam
cmp
mov
icebp
push
dec
sub
jmp
les
xchg
scas
dec
call
fs
push
mov
pop
sub
inc
push
rorl
inc
push
das
sub
sbb
popf
mov
add
xor
aas
fnstsw
mov
dec
iret
ljmp
fs
hlt
and
jns
scas
add
dec
xor
outsb
lock
mov
mov
push
pop
lds
xchg
mov
insb
mov
test
daa
outsl
cmp
out
insl
je
and
ds
cmpsl
xchg
mov
pop
frstor
fmul
jle
ljmp
xlat
or
int3
mov
pop
insl
rorl
push
adc
sub
add
inc
and
push
notl
std
cli
fadds
stc
xchg
mov
inc
and
inc
add
pop
insb
push
adc
popa
hlt
fcomi
dec
scas
aad
aaa
test
roll
add
xlat
aas
mov
mov
mov
pop
fsub
push
callw
sahf
fwait
mov
sbb
mov
mulb
test
cmpsb
and
in
fs
mov
shlb
jb
das
and
jbe
push
push
inc
rcll
sti
sub
stc
aaa
mov
adc
pop
sub
xor
iret
pop
cmp
stos
sbb
lahf
hlt
repz
pop
cmpsb
imul
inc
sub
outsl
scas
inc
push
cwtl
mov
test
mov
inc
sub
lret
add
out
dec
test
idivl
loopne
push
test
sub
xchg
mov
add
mov
sbb
adc
add
dec
mov
xor
push
mov
xchg
scas
mov
jmp
call
aaa
cwtl
insl
cltd
lcall
xor
leave
cmpsb
xchg
ss
sbb
sbb
push
stc
in
clc
jge
mov
push
xlat
leave
into
push
inc
mov
jmp
and
pushf
insb
int
rcrb
addr16
divb
testl
outsl
mov
xor
les
out
xchg
jb
cltd
sub
mov
pop
es
lods
cmc
push
sub
and
and
jo
xor
mov
popf
stos
fucomip
stos
add
lea
adc
mov
pop
pop
addr16
xchg
cmp
inc
mov
notl
mov
push
sub
push
out
fisttpl
and
cmp
loopne
sub
pushf
les
outsb
push
push
je
cmp
mov
xor
pop
sbb
adc
aad
clc
sub
scas
stos
rorl
lcall
pop
mov
in
pop
aad
sbb
mov
and
mov
sbb
nop
fiadds
sbb
or
add
movsb
xchg
add
shrb
das
or
xor
add
aam
sub
ds
mov
or
cli
cwtl
push
jp
and
mov
arpl
push
test
in
insb
cli
rcll
add
inc
pusha
mov
mov
loop
mov
inc
jns
in
mov
enter
lock
adc
pop
sbb
sub
fstps
shlb
cli
lods
push
xor
lock
rcrl
roll
and
pop
mov
sub
outsb
adc
mov
xchg
shrb
adc
adc
pop
jne
sub
sbb
lret
push
inc
outsb
imul
pop
stos
cmp
xor
lds
sbb
pop
sub
pop
hlt
adc
lock
pop
fdivrl
jne
loop
fs
inc
aas
jns
fldl
mov
push
scas
xchg
loopne
cwtl
lea
loope
inc
mov
lds
aaa
int3
mov
movsb
incb
jnp
xchg
add
arpl
popa
lds
scas
cmpsb
xor
dec
outsb
aaa
fnsave
inc
int
sub
in
mov
push
xchg
mov
or
cs
or
fs
adc
xor
sub
pop
mov
adc
rcll
jecxz
push
sbb
enter
jmp
mov
or
or
lcall
mov
and
inc
adc
mov
jp
shlb
test
lahf
sbb
or
adc
movsb
or
mov
scas
push
std
lcall
fcmovnbe
dec
push
and
roll
popf
mov
xchg
stc
jp
das
data16
outsl
sti
cmp
sub
arpl
push
xchg
sub
push
dec
aaa
cmpsl
mov
je
sub
fisubl
insb
scas
es
imull
push
xchg
lahf
mov
std
pop
xchg
in
mov
xor
hlt
fcoms
aad
cmpsl
lret
pop
pop
aaa
arpl
mov
mov
adc
dec
stos
jle
jle
lea
movsb
daa
and
out
cmc
iret
mov
mov
cld
fistl
xor
mov
ret
add
shlb
mov
adc
adc
out
mov
adc
adcb
aas
adc
rorl
scas
or
gs
aaa
mov
and
pop
adc
es
loope
scas
ja
mov
and
aas
pop
adc
and
xchg
in
ds
push
aad
sbb
mov
lods
loopne
pop
pusha
sub
clc
lcall
xor
into
push
pop
decb
test
into
dec
mov
andb
repnz
adc
cmpsl
push
add
sub
jae
imul
les
mov
incb
bound
lret
outsl
inc
inc
movsl
cli
adcb
xchg
mov
inc
mov
pop
mov
jge
cmp
mov
or
ds
inc
inc
call
jbe
lahf
dec
adc
or
ret
inc
cmp
ret
fst
ja
adc
or
push
sti
scas
cmp
sbb
pop
bnd
dec
add
add
push
mov
enter
enter
insl
add
addr16
out
xchg
loopne
icebp
inc
popf
insl
cmp
add
cmp
test
in
lods
rol
mov
inc
mov
fsts
and
aam
jg
xor
xlat
aaa
repz
mov
dec
or
adc
pop
add
cmp
mov
loop
jl
inc
push
mov
ljmp
in
add
pusha
jl
ret
mov
shrb
cwtl
inc
sbb
xchg
mov
rol
mov
test
or
xchg
jg
pop
add
stos
inc
cmpsl
fs
sbb
add
pop
pop
mov
add
scas
sti
movsb
bound
fs
jns
leave
mov
inc
pop
mov
push
pop
outsb
loopne
sub
out
push
fs
mov
mov
cmpsb
xchg
ret
lret
clc
or
int3
cmp
and
push
mov
sbb
cs
cld
and
jnp
xchg
sub
cmc
lahf
xchg
sub
std
cmp
fwait
jecxz
ljmp
cmc
outsl
cli
fs
sub
stos
sbb
mov
jle
pop
test
pop
add
mov
sub
dec
stc
jecxz
insl
imul
ret
jp
mov
push
mov
push
push
add
mov
in
ds
jmp
scas
jb
add
sub
aas
jb
add
pop
out
mov
shl
xor
mov
hlt
sahf
call
fs
jne
jae
mov
sub
mov
mov
jge
cmp
data16
mov
jge
hlt
dec
inc
xor
cmp
add
adc
aas
cltd
mov
jle
out
pop
fists
mov
cmp
xchg
loop
jp
xchg
xor
sub
jno
das
jmp
xchg
or
sub
mov
repz
xchg
scas
sbb
lods
mov
mov
jle
xor
add
cmp
in
pop
mov
push
push
daa
dec
cmpsl
in
mov
or
xor
dec
mov
mov
pop
movsb
mov
cwtl
pop
pop
lods
jl
imul
shrb
jb
out
jp
sub
and
push
ds
xor
mov
ja
ss
pusha
push
sub
mov
dec
inc
xor
ljmp
or
cli
push
pushf
out
dec
adc
das
mov
xor
cli
loop
push
lods
lods
pushf
add
mov
gs
mov
mov
push
movnti
add
inc
mov
in
pop
aas
and
and
mov
mov
xorb
scas
inc
aam
mov
in
jns
and
jmp
jns
sbbb
or
sarl
push
xor
mov
mov
fists
repz
rep
imul
mov
hlt
mov
pop
arpl
in
and
xor
push
adc
push
orb
es
es
les
movsl
ljmp
lock
loope
lds
mov
jmp
roll
sub
mov
jmp
jnp
mov
adc
mov
pop
repnz
filds
pop
mov
mov
or
sub
or
stc
add
cmpsb
out
adc
or
sarb
mov
and
dec
xor
cmpsl
loope
mov
dec
xor
pusha
rcrb
incl
lahf
ficompl
sti
xchg
jg
push
inc
lret
cmp
and
jbe
or
mov
les
add
sbb
int3
push
dec
pushf
mull
xor
push
xlat
pop
xlat
ftst
pop
hlt
in
lret
push
jns
push
adc
out
mov
push
push
stos
add
idivl
ds
aaa
clc
sub
dec
aam
ljmp
jge
outsb
mov
lods
aad
sbb
cmp
sarb
icebp
mov
mov
sbb
test
and
jo
cmc
aas
mov
aam
add
and
out
and
cmpsb
jmp
lds
cmp
add
arpl
sbb
cmp
xchg
and
xor
arpl
hlt
adc
push
roll
mov
testl
mov
sti
inc
popa
inc
dec
nop
push
add
dec
test
cli
leave
pop
mov
aad
repz
fs
push
push
movsl
mov
movsl
mov
shr
lods
adc
push
xchg
mov
gs
popl
arpl
mov
and
and
js
mov
in
pop
repz
repz
int3
cmp
xor
shrl
cwtl
jecxz
add
aas
popa
lret
pop
stos
cmpsl
and
fiaddl
ret
je
cmpsl
ja
adc
loopne
mov
cmp
mov
shll
mov
stos
jns,pn
or
out
decl
pop
push
shrb
mov
xchg
mov
pop
rorb
fisttpll
jge
scas
push
popf
idivl
xor
inc
fisttpll
push
xchg
push
push
and
repnz
or
push
mov
or
dec
aam
cmp
gs
and
sub
cld
out
in
lea
push
rorb
and
cwtl
stos
orl
xchg
sbb
jmp
add
mov
xor
es
jno
push
fs
jecxz
jmp
cmp
adc
sub
push
in
dec
mov
rcrl
sub
jle
and
inc
js
xchg
jne
ret
das
jl
mov
movntps
stc
loope,pt
cltd
or
add
sub
stc
mov
or
push
pop
ljmp
ret
or
cltd
cmp
call
mov
shl
ss
imul
loopne
mov
add
fsubl
out
int
mov
or
test
adc
pop
sub
repnz
aaa
mov
loopne
outsb
cmc
mov
push
cltd
mov
dec
mov
cmp
push
repnz
cmp
mov
and
rclb
mov
mov
aam
push
into
dec
mov
add
ss
xchg
inc
xor
dec
push
addr16
adc
leave
mov
les
sti
dec
mov
fs
mov
data16
sbb
sahf
xchg
lods
aas
ret
lret
adc
pushf
popa
mov
clc
dec
cld
push
fst
and
iret
add
shrb
pop
and
aaa
inc
dec
mov
repz
cmp
ret
out
lods
icebp
add
aas
fcomip
xchg
test
test
sbb
pop
iret
shll
inc
insb
sub
scas
in
push
test
in
mov
ds
sbb
je
xor
popf
notl
mov
ret
cmp
xchg
scas
stos
ss
adc
sub
inc
inc
cmc
popa
mov
mov
push
arpl
ret
inc
fisttpll
pop
sub
aad
or
or
int
pop
test
cmp
jge
rcr
fsubs
lds
jl
sbbl
dec
cwtl
inc
mov
push
cmp
loop
jecxz
pop
adc
addr16
leave
xchg
add
or
push
ret
add
inc
scas
cmp
stos
out
sti
lods
inc
mov
int3
test
scas
add
xchg
jne
push
or
es
xchg
ret
aam
mov
adc
or
out
lahf
mov
pop
xchg
addr16
popf
ret
pop
cmpsb
jle
adc
mov
cmpsl
and
dec
rcll
cwtl
jbe
lods
mov
cmp
insb
sahf
std
in
dec
ss
ret
xchg
rcr
push
mov
sub
sarl
inc
into
or
test
add
lahf
jbe
insl
xchg
leave
jecxz
lret
lods
stos
add
jns
dec
stos
or
daa
or
clc
pop
add
mov
adc
hlt
mov
lahf
nop
xchg
xorb
imull
cmp
insb
test
jb
pop
or
mov
int
test
pop
xchg
rcl
mov
sbb
dec
lret
sub
or
scas
aad
ret
xchg
dec
fsubl
xchg
and
dec
push
pop
mov
adc
adc
sbb
pushf
xor
inc
xchg
mov
push
stos
push
pushf
dec
mov
inc
mov
icebp
out
mov
lret
jge
xor
adc
stc
cmp
test
mov
push
and
push
je
incl
or
pop
sub
movsl
fldt
mov
cmp
jno
shll
xlat
mov
cli
loope
add
ret
mov
add
mov
fnsave
dec
push
adc
push
bound
stc
mov
xor
or
push
std
xor
xchg
addr16
mov
ret
ficoml
lret
mov
fwait
cld
int
adc
sbbb
ljmp
cmpsb
stos
dec
dec
jae
adc
mov
push
jbe
test
xchg
add
sbb
xchg
mov
adc
repnz
pop
jp
fimuls
loope
int
iret
xchg
adc
lahf
dec
sub
cmp
push
mov
cmp
mov
repnz
fs
out
lea
in
push
jns
aaa
pop
jbe
popa
ficoml
mov
repnz
jb
lret
insl
sbb
cmpsb
aad
cmp
mov
scas
fistpll
mov
xchg
xorb
out
sbb
lds
fwait
jp
pop
and
lock
dec
popa
loop
pop
push
scas
fucomip
jp
jo
adc
aam
mov
push
xchg
ret
xorl
std
push
and
push
lcall
addr16
add
jecxz
stos
in
lea
fimull
ja
imul
mov
sub
loope
add
leave
jnp
xlat
aad
cmp
mov
xchg
stc
fisubrl
bound
mov
pushl
add
jae
push
xor
jno
shlb
es
outsl
out
nop
pop
inc
jmp
test
or
sub
add
add
cmpsl
jge
ret
insl
outsl
pop
adc
adc
mov
add
mov
add
cltd
into
popa
xor
jno
std
hlt
mov
push
and
push
out
out
loopne
push
pop
fwait
movsl
test
cmpsl
pushf
jno
out
pop
lcall
xchg
sub
jg
mov
or
sbb
jno
xor
jle
popa
rolb
in
mov
add
xor
sbb
add
mov
dec
cwtl
jb
inc
xchg
mov
mov
lea
dec
dec
add
mov
dec
imul
loopne
cmpsl
mov
pop
testl
adc
mov
sub
mov
xchg
cmp
xlat
and
rol
pop
cltd
jl
mov
adc
pop
rorb
pop
push
pusha
ja
rolb
mov
pop
cwtl
movq
insb
inc
insl
outsb
push
insb
movsl
lret
mov
push
in
push
dec
jg
adc
jnp
ret
mov
pop
cmc
negb
jg
rcl
jbe
mov
mov
inc
mov
ljmpw
add
nop
cld
pop
cwtl
fimull
nop
dec
notb
adc
lret
inc
rcrl
jmp
insl
out
or
add
popa
or
test
sub
dec
pusha
push
movsb
mov
or
rclb
hlt
int
xor
jp
mov
adc
lds
fdivs
add
lea
mov
dec
sahf
cmpsl
movsl
cmc
or
mov
mov
in
mov
movsl
mov
sub
pop
xchg
popa
insb
je
or
test
and
fstpl
movsl
dec
fisttpl
dec
push
mov
and
addr16
sub
lcall
outsl
ror
test
dec
jp
adc
dec
and
mov
xchg
pop
sar
inc
jnp
les
int
insb
int
into
cs
jb
scas
dec
jl
aaa
pusha
dec
cs
cmp
sbbl
enter
addr16
lcall
in
dec
int3
in
push
jb
pop
outsl
pop
scas
xor
cs
mov
enter
add
stos
sub
sbb
xchg
pop
std
add
jae
ja
outsl
test
push
fucomp
imul
cmpsb
stc
or
test
adc
in
pop
cmp
test
fidivl
sbb
mov
lods
test
inc
mov
ss
call
fildll
add
in
daa
lods
scas
add
repz
xor
mov
or
xor
dec
rcll
shl
pop
jl
scas
xorb
jp
hlt
int3
fwait
test
test
iret
lock
jge
scas
cmp
cs
push
jp
jle
lods
fwait
xchg
xor
jg
mov
jne
leave
jecxz
pop
xchg
add
jne
dec
mov
push
cld
int3
int
pop
rcll
and
sub
fstpt
lret
dec
lods
push
sarl
push
xchg
outsl
je
push
inc
xchg
pop
or
lds
add
xor
cmc
and
pop
in
cli
cmp
fcoml
pop
scas
sarb
test
mov
push
mov
and
aas
inc
sbb
movsl
out
sbb
mov
xchg
pop
aaa
jo
cmp
loop
inc
mov
sub
mov
aad
cmpl
sbb
scas
popa
fistps
pop
pop
cld
lds
jnp
inc
pop
mov
inc
adc
int
mov
xlat
jl
jmp
cmc
jg
push
jp
std
inc
mov
mov
jns
movsb
and
pop
shll
flds
adc
xchg
or
lret
into
lcall
fnstsw
or
aam
lret
xchg
leave
cmp
stos
sbb
scas
cltd
sub
mov
cmp
add
mov
aaa
pusha
int
imul
out
lret
inc
fnstenv
outsl
les
fcompl
fs
adc
sbbb
mov
adc
push
or
xchg
and
je
mov
jne
pop
nop
mov
cli
scas
test
jmp
xor
lods
rcll
jge
mov
pop
inc
xchg
dec
pusha
mov
pop
popaw
daa
sahf
adc
les
and
dec
scas
scas
ficompl
push
fdivrl
mov
pop
xchg
add
aad
mov
mov
push
push
mov
shr
inc
stc
pop
mov
sbb
lret
mov
mov
out
push
movsl
mov
pop
lds
jae
in
sub
xchg
inc
out
cmp
cmp
mov
aas
popf
data16
push
xor
push
sahf
cli
sbb
ret
mov
mov
in
clc
xlat
push
push
cs
popf
xor
cmc
xchg
ja
outsb
sahf
jo
fcoml
xchg
cmp
pop
nop
add
adc
loope
loope
pop
sub
xchg
idivb
xlat
test
dec
cs
sub
and
in
scas
mov
xor
pop
inc
xchg
mov
xor
mov
shrl
mov
es
icebp
outsl
jp
jp
and
fstps
aaa
loope
inc
subl
jge
push
dec
inc
mov
in
fisubs
jmp
push
xor
inc
ds
or
dec
shrl
add
outsb
inc
ja
and
pop
xchg
notb
cmp
xchg
push
push
and
scas
std
push
mov
and
ret
jnp
sbb
cmpsb
rcl
jb
push
ljmp
mov
subl
test
mov
arpl
or
dec
dec
pop
or
addr16
sub
icebp
mov
dec
jne
push
sbbl
jns
push
fcoms
ret
xchg
mov
js
fcmovnu
or
lret
sti
push
sarb
pop
cwtl
test
push
stos
lods
dec
jns
sbb
lret
cmpl
loop
and
and
mov
push
dec
sub
xor
es
cmp
sub
test
shl
or
add
mov
call
sbb
mov
add
fidivrs
dec
mov
std
in
cmpsl
or
int
mov
push
xor
lcall
js
mov
jbe
arpl
nop
std
sbb
out
sti
insl
repnz
fnstenv
ja
sbb
insl
ss
push
insb
insb
sub
mov
in
leave
inc
sbb
movsl
fsubl
test
push
addr16
mov
adc
add
ret
outsl
xor
mov
rol
xor
nop
mov
in
ss
xor
aas
pop
or
dec
inc
dec
jbe
inc
imul
repnz
push
sahf
lret
outsl
push
or
push
xchg
je
insl
and
sub
sbb
loope
mov
pop
aad
fbstp
jo
mov
int3
enter
mov
jge
push
add
lret
mov
rol
dec
push
mov
mov
cwtl
lret
or
stos
mov
data16
int3
dec
adc
inc
repnz
popf
sbb
sbb
data16
stos
fistl
push
ret
icebp
call
ds
jns
sbb
imul
cmpsb
out
sarb
pop
in
mov
cmpsl
repnz
cmp
mov
repz
fstl
push
or
ret
mov
sahf
fldl
dec
mov
inc
sbb
sti
push
js
dec
push
push
stos
iret
push
jbe
inc
mov
push
fmul
inc
or
cmpsb
push
nop
xchg
les
lcall
mov
lcall
incb
dec
stc
push
pop
push
push
aaa
ret
mov
push
mov
dec
inc
xor
xchg
mov
xor
push
imul
sub
sub
inc
shrl
fisubrs
xorl
jge
dec
sbb
ret
rclb
ljmp
das
sbb
loopne
dec
pop
sbb
mov
test
sbbl
movsb
add
mov
jbe
stos
lods
fcompl
lahf
lods
lcall
pop
movsb
and
aas
push
notl
xchg
test
pop
sbb
add
inc
sti
je
aaa
inc
ss
push
sbb
leave
imul
and
lret
sub
js
xor
push
invd
gs
js
scas
mov
pushf
adc
or
lods
or
int3
je
arpl
call
lret
dec
cmp
repz
fbstp
dec
pop
idiv
cmp
out
xor
bound
iret
sti
xchg
push
push
mov
iret
cs
cwtl
lods
outsb
jecxz
jno
dec
inc
push
in
lea
xchg
or
xchg
test
lods
cmp
xor
scas
push
dec
fsubr
inc
jmp
ja
imul
mov
dec
stos
dec
or
push
mov
imul
in
cmp
sub
stos
mov
xor
xchg
jbe
jae
out
pushf
mov
mov
mov
out
inc
inc
cmp
mov
pop
jp
pop
push
test
pop
sbb
mov
js
sarb
cmc
aaa
stc
pop
or
test
mov
ja
mov
inc
das
in
out
sbb
xchg
sbb
popf
mov
sahf
iret
mov
mov
add
mov
fistpl
push
inc
test
enter
inc
xor
mov
mov
add
dec
pop
imul
sub
bound
test
pop
lcall
popa
push
mov
add
insl
inc
stos
adc
pop
cmp
and
jbe
in
add
data16
fldenv
mov
dec
fsubl
lds
xor
pusha
adc
insb
in
andb
rolb
lcall
xchg
stos
nop
add
adc
sbb
imul
mov
push
cs
pop
test
add
adcl
add
sarl
scas
sbb
rcll
pop
notb
popf
xlat
cmp
cwtl
out
movsl
or
out
xor
shrb
inc
and
and
subb
or
jne
dec
aaa
and
das
aas
test
ds
lods
shr
inc
js
pop
cmp
jmp
test
cmpsl
inc
jno
lds
inc
inc
nop
mov
fisubrs
push
enter
icebp
loopne
pop
jb
les
push
test
jp
push
lcall
shrb
mov
ljmp
xchg
adc
xor
jbe
or
add
or
lret
xor
mov
loope
push
aas
mov
fistl
popf
test
inc
sub
mov
add
iret
mov
and
mov
sarl
into
idivl
gs
pop
insl
lahf
push
repnz
das
xor
and
repnz
jns
jne
mov
dec
pop
xchg
xor
push
aad
sbb
lahf
cmc
dec
xchg
add
imul
mov
loopne
pop
mov
bound
adc
or
add
and
cmp
lcall
adc
fsubs
sbb
xchg
fsubr
mov
inc
movsl
inc
and
in
jp
jge
nop
add
jae
xchg
mov
and
sub
add
mov
daa
dec
and
xor
hlt
mov
lret
and
stos
lahf
cmp
jno
push
aad
or
mov
fdivl
add
mov
movsl
mov
xchg
xchg
fdivrl
cs
push
sbb
sub
push
cld
mov
rorl
hlt
or
sbb
jl
sbb
xor
sahf
in
jle
and
fdivl
addr16
push
fadds
inc
pop
mov
or
add
pop
jge
outsb
xlat
cmpsb
jns
int
sbb
movsl
adc
pushf
pop
dec
and
add
leave
test
mov
add
movsb
fcmovu
mov
adc
add
sbb
xchg
push
xchg
xlat
and
dec
push
xor
into
iret
es
test
lock
call
js
ficoms
push
addb
je
in
loopne
or
sub
sbb
sub
aas
xor
adc
and
lret
inc
xor
fildl
out
mov
cs
mov
out
mov
ret
dec
add
lods
dec
xchg
call
pop
and
mov
and
repz
stc
sbb
cmp
push
mov
adc
nop
mov
cld
mov
sti
inc
pop
outsb
popa
sahf
in
out
inc
push
jl
aas
lock
mov
aad
sbb
xor
dec
or
pop
cmp
jnp
xchg
lods
xchg
jecxz
jno
loop
repnz
lahf
cs
xlat
sbb
loope
dec
dec
aas
or
push
or
mov
mov
mov
xlat
dec
popa
out
xor
sub
inc
adc
mov
jmp
stos
mov
pop
lds
inc
inc
pushf
cmpsb
addr16
pop
orb
pop
and
test
cmp
movsl
mov
mov
es
mulb
pop
xchg
push
or
call
mov
and
and
jnp
jbe
test
movsb
testl
add
int
lds
addb
xchg
fwait
xlat
hlt
es
clc
mov
mov
and
jno
sub
mov
mov
sar
or
dec
es
jo
inc
inc
aaa
psllw
test
fistpll
jmp
mov
and
pop
mull
es
insl
inc
or
insb
dec
addr16
in
dec
jecxz
mov
inc
cltd
sub
out
test
dec
sub
cmpsl
xchg
scas
jle
xchg
cmp
popa
mov
xor
jp
adc
cmp
pusha
loopne
movb
push
adc
push
and
scas
pushf
in
sti
popa
addr16
and
lock
sbb
mov
sahf
jmp
and
adc
mov
jno
out
js
dec
fstpt
ja
pop
fidivs
sub
lods
jb
les
icebp
data16
push
sub
insb
push
js
and
mov
cltd
pop
sub
jg
loop
jle
ljmp
mov
jmp
les
imul
cmp
sub
fucomi
andb
dec
insb
push
lea
inc
test
push
lret
pop
add
push
aas
sub
adc
mov
xor
add
lret
dec
popa
ss
inc
or
lcall
in
rcll
sbb
xor
dec
stc
jbe
ficoml
adc
sbb
scas
lahf
ficomps
jl
ficomps
in
inc
repz
mov
inc
cmp
int
sub
into
sbb
mov
scas
and
test
imul
sub
cli
inc
xor
xchg
dec
fsubrs
cmp
popa
cld
pop
pop
push
xchg
or
lock
cmpsl
ja
mov
aaa
pop
imul
rcl
scas
mov
jb
stos
daa
cwtl
mov
mov
sbb
inc
int3
outsl
js
int3
out
xchg
fcmovb
add
xor
movb
in
mov
xchg
fwait
jle
sbb
in
lock
out
mov
xor
or
dec
cmpsb
sub
lea
sahf
in
dec
sbb
int
in
hlt
cmpsl
popa
cmp
mov
or
pop
loope
fsub
mov
mov
inc
adc
mov
pusha
mov
pop
loop
sub
xchg
jl
or
jp
push
cltd
mov
push
loope
ficomps
inc
inc
jbe
test
sub
das
data16
in
pop
and
xchg
mov
adc
mov
jnp
pop
test
mov
in
out
xlat
inc
cmp
sub
pop
ds
or
inc
fwait
adc
mov
adc
inc
leave
cwtl
and
cwtl
xchg
je
cwtl
int
ljmp
xor
out
out
stos
mov
in
sbb
fdivl
cmp
inc
popf
jb
inc
lahf
sub
mov
sub
in
test
orb
inc
xchg
lret
ljmp
scas
fisttpll
pop
inc
test
sbb
add
mov
subb
and
or
das
gs
inc
stos
hlt
adc
fs
add
vpsubd
push
xchg
mov
push
scas
push
aaa
push
mov
xor
loop
addb
adc
and
sbb
adc
adc
std
inc
hlt
int3
mov
jge
sbb
push
das
mov
hlt
movl
sti
addr16
cli
sub
xchg
xor
add
push
jo
sub
xchg
adc
sub
lods
add
jnp
aad
jecxz
mov
xor
xchg
out
cmp
sub
xor
mov
subl
popf
mov
adc
sub
das
ret
scas
imul
adc
jae
scas
or
xchg
rclb
je
mov
pop
sbb
xchg
cs
or
xchg
jle
into
and
loopne
aaa
ss
jl
mov
xor
jp
arpl
jp
dec
lcall
xchg
mov
jmp
mov
adc
sti
pop
shr
outsl
addr16
xor
fistps
mov
cmp
shl
fisubl
movb
inc
xchg
repz
testb
vmulss
mov
ror
push
rolb
rcrl
pop
cmp
fbstp
mov
fcompl
pop
out
push
ss
mov
and
aaa
enter
addr16
ficomps
fs
les
aad
push
mov
test
lea
inc
cmp
xlat
test
jne
mov
push
push
pop
fstl
cvtdq2ps
pop
ret
stos
popa
or
jle
adc
sub
mov
cmpsl
push
push
orl
roll
sub
scas
insl
scas
sub
call
push
pop
in
ss
sub
insb
mov
out
int3
or
jns
int
jmp
data16
imulb
or
pop
ljmp
cmp
lds
pop
jle
mov
push
inc
xorw
push
outsl
outsl
scas
mov
fsts
mov
mov
ljmp
fsubrl
popf
lods
ficomps
fs
cmp
and
pushf
xlat
jo
push
fwait
add
jp
stos
add
inc
daa
dec
mov
in
pop
mov
sub
scas
jl
ja
xchg
stos
cli
mov
nop
push
and
rcr
aas
ljmp
pop
loop
mov
addr16
and
pop
lret
sub
sbb
cmpsl
and
mov
xchg
sahf
ds
mov
insl
loope
dec
xor
lea
or
or
addr16
andb
and
enter
cltd
sarl
daa
pushf
in
sbb
daa
or
out
adc
adcb
lret
fisubs
mov
adc
adc
cmp
testb
pop
xchg
out
push
jmp
dec
repnz
data16
js
mov
into
cmp
jns
push
push
les
push
test
and
adc
push
call
fimuls
jp
cld
adc
gs
lea
hlt
mov
cmc
mov
mov
fsincos
aas
jnp
out
rcll
mov
mov
cmp
addr16
addb
pop
fwait
cld
ret
add
aas
cmc
ja
xor
cwtl
in
dec
mov
lock
adc
gs
repnz
sub
mov
cmp
fisttpl
sbb
icebp
dec
add
sahf
insl
imul
fs
insl
jno
enter
mov
sbb
mov
repz
add
jle
outsl
lods
movsb
iret
jp
stos
pop
stc
sbbb
and
test
sub
inc
or
inc
push
lahf
dec
lcall
mov
test
cmpsb
mov
in
movsb
xor
gs
addr16
stc
loopne
push
mov
clc
mov
mul
dec
xor
sub
cmp
mov
mov
stc
pop
jmp
jno
jae
pop
push
pop
test
xor
mov
ficoml
add
fidivs
sub
sbb
mov
lret
insl
ror
imul
imull
dec
add
lock
test
add
arpl
mov
mov
mov
rcll
or
pop
pop
add
adcl
push
in
sbb
sub
cmp
jae
push
daa
adc
jp
sahf
dec
or
xor
jo
and
gs
testb
mov
push
or
lods
leave
adc
shl
add
add
cltd
loop
lods
dec
pop
subb
xchg
adc
sub
xchg
jecxz
shlb
addr16
push
push
adc
js
mov
dec
insb
sbb
mov
add
jl
shll
sub
scas
pop
lods
mov
push
mov
mov
xchg
pop
lock
fsts
mov
jp
in
jne
dec
sbb
rolb
rorb
and
mov
xchg
pop
frstor
xor
sub
or
push
push
sbb
xchg
dec
les
push
mov
sbb
out
jns
pop
data16
popa
int
pusha
popa
sbb
xlat
scas
rolb
lahf
inc
pop
movsl
mov
and
data16
add
cmpsl
fdivrl
cmp
gs
jle
cmp
std
inc
cld
jae
pop
lret
subl
outsb
cmp
lea
pop
jno
ja
hlt
insl
jbe
pop
ja
mov
or
data16
fstpt
pop
add
jmp
mov
aad
sub
lahf
inc
cli
cmc
mov
xlat
negl
and
inc
arpl
adc
add
mov
lods
pop
outsl
sahf
dec
push
enter
iret
mov
sbb
mov
ds
xchg
adc
pop
cltd
lods
fisubs
fistps
lds
mov
xor
mov
ja
xchg
hlt
dec
xor
dec
shr
pop
add
or
xor
or
inc
sti
ljmp
pop
adc
mov
scas
pop
jl
notb
xor
enter
cwtl
lods
xchg
jle
adc
or
mov
scas
mov
mov
call
sub
jecxz
push
dec
outsb
je
loopne
xchg
xchg
push
dec
pop
call
fdivrl
les
insl
cmp
add
ficoml
out
pusha
push
pop
or
mov
push
in
jbe
outsl
mov
ret
mov
push
icebp
cmp
dec
add
push
fwait
adc
stos
mov
xchg
push
xor
or
popf
jae
xchg
push
sub
clc
nop
repz
hlt
in
in
add
leave
in
or
adc
xor
scas
inc
inc
and
ret
inc
jmp
fisubl
xchg
rcrb
sbb
je
inc
adc
daa
imul
add
test
xor
mov
sub
jbe
rcrl
movsb
rorb
add
cmp
mov
out
in
push
adc
xchg
cmpsl
sub
jg
sti
mov
add
mov
mov
movsl
fwait
and
xor
push
and
cmpsb
or
xlat
mov
pop
mov
lret
outsl
sahf
sbb
fwait
jo
call
insl
lds
pop
mov
shrl
out
pop
es
sub
mov
pop
gs
aas
cmp
jb
ljmp
dec
divps
jecxz
dec
sbb
dec
xchg
ljmp
lock
mov
pop
or
test
in
push
aaa
fdivs
outsl
jb
mov
outsl
les
test
inc
loop
daa
clc
pop
repnz
cmp
inc
mov
push
mov
inc
jle
xchg
mov
cli
scas
mov
imul
pushf
push
pop
pop
sub
mov
mov
or
inc
mov
mov
cmpsb
and
push
cmp
ljmp
cli
mov
dec
repnz
iret
arpl
mov
add
xorl
and
stc
and
push
mov
lds
mov
inc
add
adc
nop
mov
push
push
push
ret
pop
ret
addr16
pop
adc
inc
and
dec
inc
push
xchg
idivl
iret
jb
xchg
pop
aas
pop
mov
rcr
and
lahf
pusha
pop
mov
dec
mov
mov
sub
fildl
sbb
jbe
jp
leave
push
mov
push
popl
aaa
aam
ljmp
cwtl
loop
out
jp
dec
add
test
and
push
or
fld
mov
test
dec
aaa
cld
add
and
stc
test
push
aad
inc
test
mov
lds
addr16
cld
ss
cli
jmp
mov
ficompl
clc
loopne
xchg
jp
gs
jnp
add
fists
jp
mov
dec
negb
imul
ffree
testb
add
in
mov
mov
lret
lea
ja
loope
sub
and
mov
pop
sub
lret
stos
xor
shrb
adc
mov
pop
jle
fisubrl
fdivrl
push
xchg
dec
iret
dec
mov
pop
lret
sbb
arpl
mov
jp
xor
sub
push
mov
cmp
mov
test
dec
xor
outsl
lods
dec
pop
mov
or
and
mov
loope
aas
jnp
ror
repz
lods
movsl
pop
xchg
ds
or
ret
aas
add
adc
mov
jb
xchg
fldenv
mov
movsb
gs
clc
push
jg
adc
mov
mov
jno
movsl
mov
add
rcl
xchg
mov
xor
mov
fdivr
scas
or
call
or
cmp
pop
push
sub
pop
test
arpl
scas
jo
cmp
inc
xlat
jecxz
mov
aas
sbbl
xlat
or
pusha
fsubrs
out
xor
mov
mov
cld
xor
je
mov
add
push
fimuls
lods
xchg
rcr
test
pop
xchg
add
xorw
pop
rorb
mov
inc
mov
scas
add
insb
mov
jb
mov
inc
and
push
enter
cvtps2pi
leave
dec
in
xchg
and
and
popa
xchg
mov
jae
stos
adc
repnz
das
jb
repnz
or
mov
mov
inc
xor
xchg
or
mov
and
push
xchg
and
pop
arpl
pop
aam
jae
or
cmpsl
or
push
ja
stos
outsl
nop
decb
xchg
pop
jns
movsl
das
lcall
cmp
insb
imull
pop
sub
lcall
jmp
adc
push
stc
cmpsl
xchg
jle
sub
or
sub
and
cmp
push
sbb
sbb
jmp
inc
add
xchg
icebp
ds
mov
mov
jo
adcb
mov
testl
xor
shrl
or
pop
cmpsl
mov
sbb
or
mov
push
cmp
iret
xchg
mov
clc
sbb
dec
inc
mov
in
sub
xor
inc
xadd
or
hlt
iret
rcl
jle
out
gs
inc
ror
rol
cmc
test
push
xor
leave
jecxz
add
cltd
xchg
test
add
in
filds
stos
pop
call
jne
jne
and
ficoms
push
mov
mov
outsl
fldz
sbb
popf
or
mov
adc
fsubl
fcomi
push
inc
pop
popa
insl
andb
dec
in
add
out
inc
cmpsb
fldenv
orb
jg
addr16
frstor
lret
mov
cmp
cld
push
addr16
fcompl
ficoms
clc
xchg
shrb
cmp
push
mov
sub
pop
xor
lea
and
sbb
inc
in
inc
sub
lods
std
sar
es
push
lods
mov
add
dec
mov
in
jecxz
adcl
cmc
and
add
hlt
jmp
push
dec
sub
fidivs
in
pop
cmp
pop
xor
pop
out
and
aam
push
repnz
lahf
js
rcrb
mov
or
ss
shrl
aam
xor
inc
mov
ds
or
popa
cs
fsubl
adc
repz
out
or
and
das
sahf
movsl
sbb
adc
and
rolb
hlt
lcall
fcmovbe
sbb
fwait
mov
shl
in
outsl
ljmp
dec
dec
nop
sbb
inc
xor
mov
mov
add
inc
or
sub
std
xchg
jge
sti
dec
push
cwtl
pop
jne
mov
jge
mov
push
jae
and
xchg
cmc
mov
mov
sub
dec
enter
arpl
or
xor
and
cmc
cmc
int3
nop
stos
imul
fdivrs
push
dec
adc
lcall
popf
xor
outsb
popf
pop
push
push
ret
pushf
push
mov
jecxz
mov
cs
popf
mov
fmuls
mov
neg
stos
ret
dec
mov
gs
push
shll
ret
sub
cmp
push
mov
inc
mov
insl
repz
xor
cmp
andl
xchg
mov
mov
enter
aad
and
mov
inc
fs
pop
fsubrs
test
sub
mov
je
loopne
mov
xchg
jbe
jmp
fildll
test
mov
mov
sbb
test
mov
pop
mov
mov
xchg
nop
rcrl
jecxz
loop
add
inc
in
fcoml
sub
in
ret
or
push
cmpsl
jge
dec
dec
in
insl
mov
movsb
insb
fbld
dec
sub
dec
and
das
into
inc
sbb
pop
jno
cmp
cld
pop
inc
adc
push
enter
mov
cmc
out
sti
ret
sub
and
insl
jae
int
or
adc
xor
push
fisubs
inc
jae
jg
in
pusha
outsb
xchg
sub
push
mov
in
dec
pop
xor
loop
dec
cltd
push
xor
lcall
ds
xchg
cmpsb
cmpsb
pop
popf
movsb
push
lea
pop
lret
out
ret
mov
cmc
ljmp
int
xor
mov
mov
mov
mov
imul
sbb
mov
cmp
test
sbb
fimuls
repnz
jae
xor
in
aaa
dec
push
outsb
scas
cmp
out
pop
cmp
xor
fnsave
lock
jmp
pop
add
inc
aas
gs
push
pop
iret
loopne
stos
shl
xor
cs
out
cs
fidivrs
pusha
dec
out
in
setbe
dec
popa
inc
jmp
lahf
int3
sbbl
or
hlt
inc
daa
cltd
dec
stos
testl
scas
jmp
xor
xchg
xchg
mov
mov
xchg
and
push
decb
shrl
mov
fsubrl
jae
xchg
mov
rcll
jle
xor
inc
fstps
sbb
and
pop
sahf
sbb
xchg
les
dec
xchg
and
jae
dec
xor
inc
loopew
scas
inc
cmp
stc
push
insb
add
outsb
cmp
loope
out
mov
test
mov
test
pop
jp
jns
sub
xor
xchg
stos
inc
icebp
mov
xchg
mov
jge
add
mov
repnz
push
push
mov
cltd
repz
stos
fmul
push
xchg
fists
sub
sbb
je
jae
cmpb
jecxz
jns
adc
jne,pt
repz
mov
add
nop
push
nop
scas
jns
cmc
test
sbb
stc
mov
or
int3
jp
aaa
icebp
imul
sbb
mov
imul
inc
lods
lahf
insb
xchg
sbb
sarb
mov
scas
test
and
push
xchg
and
out
fiadds
aas
xor
and
lods
in
jle
jecxz
dec
shlb
lea
adc
data16
jle
mov
mov
les
add
vsubps
jmp
jle
imul
and
inc
in
dec
stc
mov
push
movsb
clc
shlb
push
mov
sub
mov
adc
mov
sub
outsb
jl
push
or
call
jae
out
dec
das
stos
xlat
stos
add
lods
xchg
das
lret
scas
jle
aad
je
add
daa
dec
mov
iretw
nop
pop
int
ss
push
pop
inc
aaa
repz
push
dec
mov
and
fidivl
cmp
push
leave
sbb
push
sub
push
movsb
out
mov
mov
mov
jae
xorb
ss
out
jecxz
ret
pop
out
jg
cmp
jo
lret
or
mov
xchg
mov
sbb
lods
adc
hlt
cmp
xchg
fdivrs
lds
xchg
push
pop
push
sbb
es
or
mov
lods
pop
and
jmp
push
outsl
aad
int3
dec
xchg
inc
and
xlat
cmp
das
pop
xchg
sti
sahf
xor
popf
ja
mov
adc
ds
xchg
and
iret
xchg
adc
fwait
mov
popl
rclb
stos
jnp
test
jl
test
shlb
inc
fsubr
out
cmp
adc
sub
cmp
rorb
dec
sbbb
out
push
mov
fists
pop
push
loopne
imul
loopne
pop
call
xor
xor
insb
cmpsl
inc
loopne
int3
int
shlb
shrb
sbb
inc
push
xlat
loopne
inc
mov
push
imul
lods
decl
cmpsb
test
arpl
or
mov
dec
mov
fisubrl
mov
cmp
mov
pop
adc
mov
xor
call
js
fisttps
into
out
fldcw
mov
and
push
mov
subb
xor
jbe
adcb
sbb
mov
shlb
or
cmpsb
inc
dec
add
les
mov
pop
or
dec
mov
outsl
sbb
xchg
push
xor
dec
jmp
xor
cwtl
test
jg
jmp
in
add
cs
mov
push
pop
sub
cmpb
adc
adc
fidivrs
idivb
addr16
mov
mov
push
outsl
pop
push
pop
adc
or
mov
lret
or
cld
cmp
daa
in
ja
das
lock
sbb
inc
mov
in
fdivl
inc
cmc
xor
or
mov
leave
ja
xchg
add
into
jle
ret
ret
test
add
push
in
push
jns
push
std
xor
cmp
xchg
test
dec
push
add
cltd
pop
pop
cmp
mov
popa
out
mov
xor
jbe
rclb
sbb
dec
jb
or
jo
les
fs
std
mov
adc
sub
mov
pushf
xor
int
cltd
adc
lret
and
mov
push
pushf
mov
sbb
je
push
pop
sub
mov
pop
fstps
movsb
js
dec
in
mov
pop
adc
mov
lret
and
ja
gs
push
push
inc
jno
mov
addr16
xor
push
ja
mov
pop
mov
fcmovne
cli
jbe
sbb
mov
rolb
pop
inc
inc
shll
js
adc
fiaddl
or
xchg
mov
popf
enter
add
sbb
aad
dec
mov
clc
icebp
dec
hlt
jno
or
mov
push
stc
xor
mov
adc
mov
test
lcall
xchg
mov
ret
enter
jne
movsl
jb
mov
mov
fbld
dec
insl
cltd
test
in
xchg
inc
insb
sbb
rolb
test
jle
mov
push
stos
or
push
mov
jbe
mov
push
movsl
ljmp
jo
sahf
mov
xchg
add
dec
xor
sbb
jbe
mov
or
filds
out
push
inc
adc
das
jns
jo
inc
sahf
into
inc
cmp
cld
and
test
mov
ficoms
in
nop
icebp
dec
mov
in
outsl
sbb
mov
int3
test
ret
dec
xchg
jp
mov
or
add
cmpsl
jae
jle
pusha
loop
fidivl
gs
inc
push
lcall
stos
sarl
rcrb
push
jns
push
fnstsw
hlt
xor
daa
cmp
fs
icebp
or
mov
jl
adc
repnz
sub
iret
je
adc
xchg
sbb
leave
xor
xlat
and
jmp
push
sub
or
dec
sub
in
popa
push
pop
daa
aad
mov
aad
sbb
in
or
dec
test
inc
stos
fsubrs
mov
adc
mov
test
sahf
add
jnp
imulb
and
cmpsb
cli
mov
in
fmul
mov
aaa
or
cmpsb
mov
or
cmpsl
mov
jbe
dec
mov
add
add
mov
cmp
stos
pop
jp
or
xchg
sub
mov
scas
je
scas
jno
das
jae
ds
dec
mov
je
stos
or
js
push
sbb
mov
call
out
push
repnz
fwait
scas
enter
cmc
jge
andl
sub
mov
rol
rep
rcll
push
mov
dec
div
adc
inc
loopne
les
mov
jge
xorl
inc
and
jle
jb
inc
fs
dec
inc
sahf
and
push
enter
jne
into
ja
stc
leave
add
mov
out
add
ja
cmpl
int
add
mov
xchg
xlat
cld
jmp
jae
test
lds
mov
ss
add
xchg
bound
pop
rorb
in
sub
mov
mov
jb
adc
add
das
ret
movsl
iret
insb
aas
cmpsb
dec
mov
sbb
fs
jge
imul
push
mov
mov
inc
adcb
pop
sahf
fildll
call
add
cwtl
fistpll
and
scas
das
mov
jg
push
sbb
arpl
jo
xchg
push
mov
push
std
mov
int
inc
xor
push
rol
xor
cltd
jmp
push
ret
lock
pop
into
popa
jge
xor
mov
aam
jae
xor
lds
xchg
xchg
stc
ja
xor
aad
push
gs
push
ret
out
ret
inc
pop
nop
sahf
sub
les
jmp
aad
inc
push
sar
ljmp
xchg
and
call
adc
mov
xor
jp
xchg
fisubl
cld
lret
dec
xchg
push
fdivs
cmp
dec
or
cmp
fldenv
inc
fdivl
mov
psubsb
inc
cmc
jne
mov
fdivl
into
xchg
out
cmpsb
adc
pop
jl
cli
mov
jns
cli
dec
mov
lcall
sahf
lds
in
cltd
fsub
pushl
mov
addl
faddl
test
jno
inc
xchg
data16
in
mov
aam
addr16
adcl
cmc
pop
stos
and
sbb
cmp
cli
sbb
ret
in
sbb
aam
and
sub
scas
sbb
adc
jl
cmp
ja
push
cld
jmp
cli
push
shrl
pop
out
sbb
xor
test
jne
fimuls
das
xor
repz
adc
push
pop
test
mov
sub
pop
aam
add
test
daa
mov
xchg
push
dec
fists
test
pop
push
sub
dec
test
jp
and
loop
add
or
sub
shll
cltd
rorl
xor
clc
xchg
xor
nop
sub
fcomps
jno
clc
sahf
cwtl
pushf
or
push
fdivrp
cltd
lock
xchg
pop
test
xchg
inc
xor
fs
dec
add
inc
xlat
test
outsl
mov
adc
cmp
aad
in
cltd
mov
mov
call
add
mov
insl
adc
jne
movsl
sbb
je
popf
mov
cmp
sub
mov
das
in
fst
dec
cmp
sub
shll
mov
adc
bnd
enter
cmp
ja
or
jbe
xchg
nop
pop
mov
xchg
rcl
push
lret
mov
or
lock
adc
movsb
pop
sub
dec
mov
xor
movsl
xchg
cs
mov
xor
movsb
ljmp
das
mov
add
push
jnp
xchg
mov
jmp
imul
xchg
ljmp
loope
or
testl
and
out
ljmp
nop
mov
sbb
mov
int3
jmp
cld
jmp
or
xchg
push
pop
iret
and
movsl
inc
push
jb
imul
js
xchg
scas
adc
int
imul
pop
mov
xchg
or
jmp
inc
das
adc
and
pop
inc
loopne
imul
mov
cwtl
ret
xchg
insl
lret
xorl
sbb
fwait
pusha
int3
stos
cltd
arpl
inc
popa
popf
dec
sub
in
add
add
lahf
in
mov
adc
pop
faddl
in
je
and
adc
repz
pusha
pop
push
pop
fbld
sbb
or
mov
das
jle
lods
jnp
inc
mov
daa
jecxz
movsb
inc
aad
jae
fisttps
cld
mov
add
xchg
je
push
subl
loope
inc
pop
cmc
add
mov
mov
xorb
jmp
mov
mov
ss
adc
je
push
xor
rclb
push
fldenv
mov
dec
xchg
les
adc
or
iret
dec
imul
sarb
adc
lock
adc
xor
movsb
jb
sub
insl
push
insl
movsl
pop
add
stos
mov
jmp
xchg
movsb
in
dec
ljmp
dec
sub
and
pop
jmp
dec
stos
push
pop
ljmp
ja
js
mov
lcall
sbbb
mov
jg
in
jmp
inc
sub
xlat
aad
push
dec
mov
repz
cli
xchg
in
sbb
inc
lea
jnp
push
pop
gs
adc
sub
leave
testl
lds
fs
je
in
cmpsb
push
jae
insb
das
sahf
mov
test
xor
in
sarb
popf
or
mov
pusha
sbb
lahf
mov
mov
lcall
in
sub
pop
add
adc
mov
mov
push
push
aad
testb
mov
or
insl
dec
jno
push
cltd
lods
je
in
loope
fcmovnbe
mov
and
sub
pop
into
insb
pop
jo
jg
jnp
pop
iret
lcall
test
cld
pop
outsl
dec
xor
xor
mov
lahf
sbb
add
imul
insl
jno
mov
cmp
xchg
rolb
mov
shrl
sbb
mov
jge
sub
outsb
dec
dec
jmp
xor
xchg
or
push
mov
iret
sbb
jns
mov
pushf
test
mov
mov
fstps
xor
jne
mov
dec
add
bound
sbb
gs
xchg
mov
mov
and
sbb
movsb
popf
mov
adc
cli
mov
outsb
ret
imul
repz
out
lret
jp
arpl
push
sahf
mov
mov
test
fwait
sbb
mov
std
add
inc
mov
mov
wrmsr
stc
adc
push
or
add
mov
sub
adc
xchg
sbb
pushf
fsts
pop
and
inc
rorb
sub
dec
movhps
mov
sub
jl
loop
movsl
mov
push
in
mov
rolb
adc
mov
data16
push
sub
mov
jle
mov
mov
and
xor
add
adc
mov
into
dec
mov
inc
xor
test
sub
jle
call
xor
and
rorb
out
jl
int3
lds
es
jo
les
push
xchg
inc
add
fsubs
cld
mov
mov
ficoml
std
adc
in
pop
cwtl
data16
jb
xor
and
sti
cmp
adc
push
xchg
loope
jmp
xor
lret
out
pop
jno
ds
dec
push
sub
add
dec
je
in
xor
adc
faddl
or
in
loopne
sub
xchg
mov
movsb
cmp
shll
int3
aaa
enter
cmp
fs
or
and
dec
ja
inc
inc
jl
adc
mov
xchg
scas
adc
int
inc
cwtl
adc
mov
loope
push
dec
inc
lret
sbbl
stc
inc
pop
add
leave
xchg
add
aam
sbb
call
or
je
out
mov
in
subl
test
jp
or
add
mov
xorb
mov
mov
mov
mov
cli
sbb
jl
les
mov
out
sub
das
cmp
jle
jg
add
pop
fsub
xor
dec
add
add
mov
scas
popa
push
nop
jl
lret
jns
and
add
jo
out
push
cwtl
nop
push
xrelease
bound
inc
mov
sub
push
inc
add
jo
mov
sub
int
adc
sub
pop
lcall
ss
push
sbb
xchg
inc
pop
repnz
lret
imul
sbbl
mov
stos
test
outsl
push
mov
dec
fwait
cmp
adc
sbb
jge
gs
cs
adc
dec
out
push
xchg
daa
xlat
fdivrs
push
fistl
les
or
mov
add
pop
lret
xor
cmp
mov
sahf
lods
lock
mov
aam
mov
push
lret
or
pop
andb
or
loop
mov
fmuls
ror
outsl
jle
xchg
lahf
fistl
push
jns
lods
push
dec
test
inc
in
sarl
xchg
dec
rol
negb
mov
loope
lods
sahf
push
popf
lods
jl
mov
rol
nop
lahf
stos
jo
pop
push
loopne
nop
les
xor
inc
adc
inc
pop
mov
adc
sub
lea
cmp
loopne
xorb
std
sbb
jb
pop
lret
fsubl
lods
scas
mov
jo
push
pushf
sub
and
add
imul
inc
sti
aad
pop
mov
jge
aam
sahf
push
ds
adc
mov
int
push
ret
add
mov
push
leave
data16
jo
push
adc
xchg
and
jecxz
xor
rcll
test
shlb
mov
repnz
fiadds
push
movsl
jp
idivb
dec
sarb
out
fwait
arpl
or
mov
jg
fists
in
push
shl
inc
mov
stc
daa
sti
jp
ja
cld
outsb
pcmpgtd
out
cmpsb
mov
enter
jl
pop
add
lahf
or
test
dec
mov
mov
idivl
or
daa
out
cmp
mov
and
and
dec
es
mov
or
add
sub
dec
xchg
imul
pop
daa
cmpl
cltd
xor
stc
add
push
mov
imul
jmp
jno
jmp
xor
pop
aam
out
subb
sti
xchg
sub
mov
call
pop
inc
mov
push
mov
push
inc
lcall
jae
sub
xor
mov
mov
gs
andl
xor
stos
mov
sbb
cmpsl
dec
jnp
mov
arpl
push
jmp
and
movsl
test
or
push
push
cltd
gs
push
and
es
cli
xor
pop
outsl
sbb
clc
sub
pop
mov
pop
lcall
push
lock
mov
sbb
pop
and
jl
inc
adc
clc
push
or
leave
rcl
lods
mov
mov
fistl
cli
dec
loope
inc
addl
sbb
pop
sub
dec
xchg
jbe
mov
pop
push
mov
sub
sbb
loope
lea
in
fnstenv
mov
insl
ret
mov
insl
inc
jmp
sbb
imul
mov
addr16
jl
fyl2xp1
sbb
shr
icebp
xchg
jp
inc
lret
int
push
sbb
mov
emms
xor
out
imul
or
lret
imul
loopne
outsb
sar
sar
mov
mul
mov
dec
add
mov
ljmp
clc
lret
pop
fdiv
jl
sub
mov
sbb
mov
mov
enter
jle
adc
fidivrl
cmp
bound
inc
dec
jle
fcmovb
incb
rorl
loope
mov
xchg
out
adc
fldl
aaa
sub
fsubrl
adc
inc
xor
mov
dec
pushf
lods
and
push
cwtl
or
jb
in
sub
sub
sub
jo
mov
and
cs
xchg
loop
inc
ds
pop
cmp
popa
movsb
xor
jns
dec
es
in
mov
lcall
rolb
insb
ljmp
sub
repz
jbe
dec
lcall
pusha
mov
xchg
das
aaa
test
andl
sub
xchg
push
cwtl
mov
inc
mov
and
adc
cli
dec
add
xchg
js
hlt
ds
pop
mov
and
inc
clc
and
push
mov
shlb
xor
sbb
test
xor
dec
fstl
mov
or
mov
roll
aas
movsl
test
std
fstpl
jg
sbb
mov
mov
fwait
bound
int3
inc
popa
sub
inc
test
imul
jne
and
int3
cmp
int
aam
enter
fldt
sub
ss
stc
cli
jl
sbb
scas
cmc
or
mov
inc
daa
mov
mov
mov
out
mov
sub
stos
pop
daa
cmpsl
dec
or
or
popf
xchg
or
dec
mov
fisubrl
push
loope
arpl
in
enter
cmp
lea
jmp
xor
sahf
push
sbb
pushf
mov
or
dec
inc
sar
pop
int3
adc
adc
mov
cli
sbbb
iret
add
and
add
pcmpgtb
jne
pop
pusha
and
ret
push
orb
fiadds
sahf
fdivr
push
test
inc
insb
out
fdivs
out
cmpsl
cli
mov
lahf
insl
shr
mov
xor
mov
fbld
push
jae
ficomps
call
out
in
rorb
dec
cmp
jecxz
push
in
out
rcr
out
pop
dec
inc
push
and
cs
movl
xchg
ss
push
cmp
and
lods
jb
fstl
lea
lahf
sub
es
or
les
loop
shrl
test
lcall
or
stos
dec
daa
and
jp
cmp
push
jg
sub
mov
out
xor
push
les
sbb
jp
and
es
stos
jge
stos
ljmp
test
sahf
pop
or
lock
inc
dec
aas
adc
pop
dec
pop
push
jmp
out
aas
jecxz
int
push
popa
push
in
nop
adcl
pop
fs
ljmp
arpl
xor
fdivrl
andb
push
imul
das
insb
dec
aaa
xor
inc
out
into
sub
jle
xchg
cmp
fsubrl
xchg
imul
stc
push
and
pop
adc
lods
mov
dec
shl
cmp
cmp
fwait
sbb
push
mov
sub
ljmp
dec
pop
push
ffree
mov
xor
pop
cmpl
inc
mov
insl
and
movsb
mov
repnz
sbb
jns
mov
cld
mov
cmpsl
rolb
pop
dec
cmp
jmp
pop
sar
xchg
pop
bound
inc
fcmovu
mov
dec
lahf
mov
mov
xor
mov
xor
mov
mov
loope
popa
filds
add
cltd
push
or
adc
filds
pusha
or
sub
mov
ss
arpl
shlb
or
mov
push
mov
mov
les
ret
imull
ja
stc
dec
in
dec
in
cmp
jp
pushl
xchg
dec
xchg
sti
pop
iret
or
lahf
aas
imull
or
push
inc
push
lock
inc
push
mov
xchg
push
out
dec
aaa
mov
cmp
ja
sbb
xchg
cmp
fdivrl
cmp
xchg
imul
imul
into
adc
cli
mov
push
aam
cs
iret
stos
and
pop
push
sub
insb
mov
ljmp
out
mov
jecxz
xchg
dec
aad
jo
pusha
cwtl
lds
ret
loopne
sub
outsl
xchg
wrmsr
mov
add
cmp
outsb
mov
sbb
mov
jae,pn
push
jo
push
fdivs
xchg
loop
aaa
popa
dec
jo
mov
fisubrs
mov
std
lret
mov
xchg
les
pop
cmp
cmp
xor
mov
fistpll
push
xchg
inc
cmp
and
inc
hlt
inc
push
in
adc
arpl
rclb
into
mov
push
add
pcmpeqd
jp
mov
test
loop
lds
sub
imul
push
and
inc
jge
xchg
sub
lret
cld
xchg
sub
sarl
cmpsl
out
ja
movsl
cs
filds
rcr
fnstsw
gs
into
adc
mov
push
mov
scas
sbb
movsl
mov
in
inc
dec
cmp
adc
dec
in
int
imul
nop
shrl
lret
mov
cmp
fsubs
arpl
rcr
stc
shrl
push
xchg
sub
dec
ss
hlt
dec
jmp
test
mov
iret
mov
outsb
sbb
pop
repz
hlt
ret
mov
shr
mov
sub
cmp
adc
test
pop
rol
adc
jl
imul
popa
cmp
dec
adc
push
inc
sti
loop
lods
mov
jno
mov
sub
sub
jo
outsl
fnstenv
ret
sbb
leave
hlt
test
fwait
or
adc
daa
jecxz
loope
sub
aaa
xor
outsl
dec
adc
fdivrs
rolb
sti
inc
call
or
cmpsb
mov
xchg
dec
les
and
pop
ja
icebp
mov
and
xor
fstl
xchg
inc
shlb
sub
fwait
xchg
xor
ss
gs
push
fidivrl
scas
mov
push
xchg
xchg
sbb
mov
xor
push
cmpsb
cltd
pop
mov
inc
xor
les
iret
mov
sub
sub
stos
and
jno
pop
imulb
jns
inc
mov
xorb
ror
nop
xchg
and
xor
arpl
imul
pop
jo
lcall
sub
mov
ss
sub
sbb
adc
pusha
adc
and
jbe
cli
push
pop
or
pop
sbb
xor
or
out
lcall
sbb
pop
leave
loope
loopne
scas
cli
push
and
lock
mov
cmc
gs
or
jp
and
adc
fxch
mov
popf
gs
push
xchg
mov
mov
jp
sbb
in
push
jp
or
outsl
test
jns
mov
sub
cmp
lret
jnp
inc
lcall
data16
add
out
movsb
pop
push
clc
push
dec
fistl
pushf
sahf
ja
mov
cmp
subb
imul
dec
jnp
sbb
xor
or
dec
int3
and
sbb
sub
push
push
aas
fcomip
mov
in
or
or
mov
stos
jno
jnp
stos
cmp
neg
jp
int
adc
into
inc
adc
out
imul
jmp
mov
sub
test
fisttpll
je
jmp
and
xor
popa
dec
rorb
jg
push
jl
inc
sbb
cmp
loope
mov
stos
adc
push
call
fidivl
aaa
xor
pop
sbb
sub
lea
sar
lds
and
push
loop
dec
mov
xchg
ds
xor
sub
das
jecxz
fwait
int3
or
pop
ficomps
add
mov
arpl
pushf
in
outsl
in
cltd
jle
sub
or
fdivs
fcoml
xor
jmp
add
sub
lret
jge
dec
fs
shlb
leave
xchg
xchg
repz
jecxz
push
movsb
daa
push
enter
and
pop
pop
mov
xor
stc
insl
or
fs
add
rorl
mov
enter
loopne
or
iret
inc
pusha
cmpsl
push
adc
cmpsb
ja
mov
pop
mov
xchg
pop
orb
outsb
push
mov
addl
fiadds
jno
sti
mulb
mov
dec
sti
dec
mov
pop
roll
test
addr16
fidivrs
cs
add
in
mov
fst
cmp
xchg
xchg
das
sahf
jl
mov
dec
je
adc
pop
aaa
inc
loop
mov
push
pop
jle
jo
cmpsb
or
enter
loope
mov
sub
aad
lods
shrb
or
cmp
xchg
pop
ret
xchg
shll
ja
ja
xchg
ret
pushf
xrstor
sti
arpl
repnz
ljmp
cmp
ret
xchg
scas
in
das
mov
dec
add
orl
inc
mov
sub
mov
cmp
cmc
cltd
add
jmp
cmp
je
dec
and
mov
sub
dec
xchg
mov
mov
rcr
push
popa
imul
push
in
out
jne
cld
jo
icebp
scas
push
and
sub
cmc
sub
sbb
xchg
mov
mov
xchg
dec
cmp
dec
lds
sti
stc
aad
sti
sbb
rcl
cld
mov
into
outsb
pop
pop
mov
faddl
sub
cs
dec
leave
fdivrl
xchg
jns
jnp
xor
add
shrb
or
les
mov
pop
and
repz
xchg
dec
mov
jge
pop
xchg
jl
inc
add
xchg
test
das
dec
and
jmp
std
int3
push
addl
repz
lea
popa
mov
icebp
aam
ljmp
mov
es
jnp
add
or
cmp
in
test
xor
mov
jle
xor
fisubrs
mov
adc
scas
push
in
dec
sbb
movb
inc
rol
repnz
call
xlat
dec
inc
push
lods
cmp
iret
daa
push
sub
inc
pop
in
pop
jl
adc
divb
or
mull
sub
sbb
pop
and
lods
adc
cmpsb
push
push
or
pushf
les
inc
mov
aam
enter
add
test
lret
les
adc
js
jne
jb
bound
outsb
sub
xor
pop
mov
adc
xor
and
clc
xchg
fwait
test
les
cmpsl
pop
xchg
dec
rcrb
cmpsw
adc
aam
ret
pushf
or
cli
jmp
dec
xchg
pop
loop
xor
arpl
jo
mov
ja
sbb
movsl
loope
lret
pop
movsl
mov
sahf
mov
xchg
mov
mov
sub
and
cmpl
lea
cltd
push
scas
shl
pushf
dec
xor
in
pushf
int3
adc
sbb
push
jp
pop
xor
pcmpeqw
das
ja
lret
and
lock
and
fnsave
xor
pushl
ss
sbb
aaa
ret
sbb
in
daa
mov
xor
in
test
fsubs
rorl
setl
jmp
outsb
call
ss
divb
lret
pushf
adc
in
test
xchg
adc
lds
popa
jne
ficompl
cmp
jae
imul
and
and
outsl
hlt
push
pop
mov
and
sub
lods
push
mov
int3
enter
shr
pusha
sbb
out
inc
loope
inc
test
mov
inc
xchg
ret
adcb
clc
loop
orb
mov
movsl
stc
and
push
ret
arpl
and
pop
int
fucomip
dec
std
sbb
push
negl
test
bound
outsb
xchg
pop
jb
sbb
add
mov
fstpl
mov
pop
cld
lock
cmpsl
std
mov
in
jl
xchg
aas
in
lods
push
mov
mov
inc
mov
stc
mov
push
mov
mov
cmp
popa
push
mov
and
movsb
mov
out
add
inc
sub
bswap
cmp
icebp
es
fs
sbb
mov
mov
cmp
dec
xor
cmp
aad
jb
stos
sbb
sbb
out
sti
lods
lock
xchg
pcmpeqb
xor
lods
pop
out
adc
jmp
jecxz,pt
dec
aas
mov
testl
or
test
lahf
jmp
push
pop
mov
pop
sbb
negl
inc
out
dec
cmc
and
mov
mov
add
mov
daa
sub
divl
fisubs
mov
shll
mov
rcl
subb
imul
mov
mov
cmpsl
int3
sbb
cltd
call
ljmp
retw
ja
addr16
notl
bound
push
out
push
ljmp
imulb
add
mov
xor
fcompl
imulb
aas
xor
mov
stos
sbb
es
inc
mov
mov
mov
inc
pop
dec
xchg
cltd
xchg
stos
pop
adc
outsb
arpl
arpl
push
xor
jb
imul
sub
mov
push
dec
mov
out
sbb
leave
mov
or
xor
jp
andl
lret
push
fs
scas
xor
aas
lahf
xchg
pop
out
sti
out
dec
mov
jle
and
mov
arpl
xchg
xchg
fidivrs
inc
push
ss
pop
push
in
push
int
arpl
sub
orl
cmp
add
push
dec
sub
add
fdiv
jns
xorl
int3
push
iret
movsl
insl
mov
or
cmc
das
push
rorl
mov
push
cmp
ss
scas
push
mov
mov
lret
xor
in
jge
push
test
mov
fcompl
jnp
lods
scas
pushf
sub
mov
jmp
sbb
cmp
sub
andl
xchg
daa
mov
jo
mov
mov
rolb
ja
aas
es
popl
lahf
inc
into
scas
push
pop
mov
push
cmc
add
push
insl
or
push
lods
xchg
fwait
enter
jb
xlat
lahf
cmp
mov
pop
fiaddl
mov
pop
push
jmp
push
sbb
out
or
popf
mov
or
sbb
movb
mov
mov
cmc
mov
out
sbb
jecxz
jl
mov
sub
cltd
or
cmp
adc
imul
addr16
jae
inc
insl
xchg
jle
aaa
subb
mov
and
dec
aaa
push
adc
fnstcw
xor
inc
rcrb
enter
hlt
loop
fwait
xor
cmpsb
out
aaa
xchg
inc
cld
xchg
outsl
fcoml
enter
movsl
adc
dec
pop
out
mov
mov
cs
aas
jns
pop
mov
pop
xchg
fsubl
sub
jge
arpl
ffree
sub
mov
out
add
xchg
pop
or
test
cmp
lock
jne
out
cmp
sbbl
mov
sub
cltd
inc
pop
movsb
cmp
and
pop
ja
dec
pop
adc
dec
sbb
in
jp
mov
cmp
call
mov
push
fcmove
popf
icebp
mov
std
add
or
inc
scas
jg
out
enter
adc
sti
stos
hlt
or
add
add
mov
dec
adc
push
push
ss
xor
das
cmp
xchg
mov
sub
repnz
cmpsb
pop
cld
lods
jo
dec
cld
repz
mov
inc
and
sbb
pop
and
stos
jbe
fisttpll
test
cmp
add
cmp
xchg
pop
test
dec
fsts
fs
lods
jg
lds
into
sbb
xlat
jo
js
pop
call
cmp
testl
lods
mov
adc
stos
xlat
sbb
out
int
ss
inc
imul
sub
adc
xor
mov
pop
or
jecxz
add
mov
fwait
aam
leave
icebp
mov
stos
das
mov
sbb
jnp
sub
enter
ret
push
jbe
push
inc
inc
faddl
movsb
lock
push
xchg
jl
call
imulb
lea
or
mov
mov
movsl
pop
or
mov
into
jb
pause
jae
inc
cmp
and
jbe
push
clc
adc
mov
mov
pop
adc
adc
sub
mov
cmpsl
enter
in
cmp
popf
mov
jno
test
ss
daa
and
xchg
mov
ret
mov
cmpsb
inc
insb
daa
xchg
lods
outsb
mov
push
loopne
pushf
adc
fiaddl
push
fs
pop
add
mov
xlat
jecxz
fbstp
cmp
movsb
inc
mov
fisubl
iret
pop
in
vandps
inc
sar
mov
pop
sti
addr16
mov
cwtl
mov
cmp
sub
sub
sbb
xchg
sub
in
cltd
push
mov
repnz
imul
add
sbb
mov
pop
fldt
sub
sbb
add
popf
sbb
sub
dec
lods
dec
cmp
mov
xchg
movsb
sbb
mov
jmp
lcall
adc
lahf
xor
mov
jmp
adc
popa
sbb
rorb
pop
sub
and
movsl
pop
out
adc
fistpll
cs
xchg
pop
pop
jnp
insb
sbbl
addb
lods
stos
icebp
cld
add
or
repz
xchg
dec
lods
jbe
shr
dec
lret
test
shl
dec
les
xchg
pop
jp
sub
iret
cs
sub
and
movaps
inc
arpl
jle
pop
icebp
sub
push
ja
sub
in
pop
out
and
cmp
js
mov
test
out
or
rcr
insl
jmp
into
push
rcrb
and
mov
cmp
mov
sub
int
sbb
je
sbb
add
inc
clc
pushf
add
or
jbe
jo
and
les
lahf
xor
int
jo
inc
test
je
jl
mov
call
loop
mov
test
mov
nop
aaa
std
push
repz
mov
xlat
mov
xchg
cld
xor
jo
jge
mov
mov
jns
mov
out
adc
fsubp
mov
shll
in
repnz
push
cmp
jnp
bound
cmp
sub
xchg
or
arpl
inc
int
jne
ss
shll
dec
add
aad
xchg
insl
rorb
inc
fwait
dec
movsb
sub
loope
out
incl
or
xchg
sub
add
mov
je
jmp
pop
je
leave
loope
pop
imul
jnp
pop
fimuls
sub
ja
fdivrl
cld
xor
imul
lret
test
push
sahf
out
adc
mov
insl
cmp
jecxz
sbb
mov
and
mov
push
icebp
fsubrs
push
mov
insl
in
jmp
into
repz
pop
cmpsl
or
das
addr16
xor
inc
dec
cli
ds
sbb
jg
pop
ljmp
cwtl
cmp
cmpsb
jge
mov
lret
jne
mov
pop
cmp
jl
lods
ror
call
lret
je
or
mov
arpl
inc
movsb
sbbb
sarb
push
cmp
push
mov
sub
negl
xor
clc
sub
in
jl
stos
and
pusha
push
test
push
enter
jnp
jbe
add
dec
jmp
pop
sub
inc
inc
push
cmp
sbb
xchg
in
js
sbb
mov
in
popa
out
mov
or
sbb
mov
es
jne
in
inc
cmpl
push
jl
adc
ret
test
xor
daa
dec
sbb
adcb
adc
repnz
fldt
jnp
fcmovbe
sbb
movsl
mov
push
sbb
daa
mov
or
mull
pop
loop
jge
cmp
scas
push
and
mov
cmp
ja
mov
push
cs
cvttps2pi
out
dec
adc
or
int3
xor
shll
outsb
sbb
mov
aaa
push
or
push
mov
in
or
fdivl
cmp
push
mov
push
lahf
lret
mov
adc
dec
pop
cmc
iret
xchg
je
inc
nop
ljmp
adc
sbb
fdivr
stc
sub
push
pusha
and
xor
movsl
jg
lods
adcb
lds
hlt
scas
test
mov
mov
adc
out
das
pop
test
fadd
jne
mov
test
sbb
scas
pop
cmp
jno
std
cmovne
mov
pushf
cmpsl
jp
push
iret
frstor
test
cmp
pop
mov
push
cltd
adc
cld
cwtl
test
int3
cmp
insl
jb
insb
mov
push
add
sbb
lods
adc
cmpxchg8b
pusha
push
push
lock
pushf
notl
imul
xor
pop
push
mov
push
sub
fsqrt
pop
sbb
mov
and
mov
adc
adc
jne
ja
push
outsl
dec
iret
mov
aam
xor
and
hlt
and
arpl
js
mov
cvtdq2ps
jp
lods
rorb
mov
dec
das
mov
mov
pop
fistps
push
xor
rolb
add
add
sub
dec
loope
adc
push
push
mov
jl
xchg
fimuls
imul
fwait
mov
std
out
and
adc
inc
inc
push
add
push
jecxz
push
adc
sub
lds
cli
cld
ret
xchg
mov
aam
lret
xchg
shl
sbbl
pop
xor
movsb
adc
lret
adcl
int3
xor
aam
icebp
jb
pusha
add
mov
imul
lcall
xor
sbbb
les
cmpsl
test
push
rorl
adc
std
cmp
dec
mov
ret
dec
mov
sub
jge
ret
loope
inc
gs
mov
sti
ficomps
dec
test
das
add
imul
loope
xor
inc
mov
outsb
push
cmp
sub
insb
and
ret
add
xor
jg
xchg
leave
mov
mov
outsl
stos
dec
or
stc
push
mov
mov
sbb
xchg
stc
cmp
add
test
subb
mov
cltd
stc
jl
mov
es
es
lods
popf
xchg
pop
xchg
push
mov
xchg
ss
pop
in
jns
les
fwait
mov
rorl
test
jmp
jns
jle
arpl
mov
mov
fucomip
pop
mov
sbb
dec
xchg
in
outsl
push
fildll
ds
lcall
cmp
mov
mov
or
and
xor
int
sub
lds
mov
xchg
pop
and
in
mov
mov
pop
and
xchg
pushf
mov
sbb
dec
push
xchg
icebp
fsubs
ror
cld
pop
xchg
add
loop
fistpll
xor
mov
xchg
std
in
add
add
roll
xor
push
pop
aas
rolb
xor
lds
fs
clc
iret
nop
test
mov
repz
cltd
int
xchg
xchg
cmp
pop
jle
nop
xor
mov
test
dec
sti
push
insb
cltd
push
xor
scas
pop
and
push
push
fwait
inc
pop
rcll
lret
ljmp
pop
push
ljmp
ja
jg
or
out
push
loope
les
mov
ret
jle
sub
daa
leave
out
adc
dec
xor
test
icebp
cld
mov
mov
xor
aas
xchg
lret
out
inc
mov
pop
leave
mov
nop
popa
daa
mov
xor
adc
andb
sub
movl
in
adc
inc
out
aad
or
jae
mov
nop
fiaddl
xchg
pushf
addl
adcb
mov
cld
aad
jnp
dec
mov
cmp
fdivs
xchg
pop
sub
in
aas
icebp
shrb
movsb
mov
fabs
fnstcw
aam
cs
and
adc
mul
jmp
mov
test
stos
lret
push
cwtl
lahf
cld
inc
jae
in
outsb
fwait
insb
gs
sub
jnp
sbbl
jo
dec
mov
in
mov
les
cli
push
jns
lods
xchg
dec
das
add
repz
xchg
sub
int3
xor
roll
out
daa
pop
xor
ljmp
cmp
add
ret
mov
sbb
cmc
ds
sbb
mov
or
popf
and
and
add
mov
mov
cmp
das
jae
mov
adc
ja
ds
fidivl
hlt
in
mov
das
add
push
movsb
push
xchg
or
sub
xor
outsl
mov
sbb
imul
dec
sub
imul
andl
fstp
lcall
adc
push
adc
pop
roll
stos
dec
cld
xor
data16
adc
loope
in
cwtl
fldcw
jmp
lret
add
loop
fs
bound
divl
testb
ds
loop
xor
xchg
aad
mov
jmp
outsb
lahf
adc
mov
add
cmp
sti
test
jg
sub
das
or
xchg
sbb
test
call
adc
in
push
ret
mov
loopne
mov
lcall
push
sbbb
ret
and
lods
dec
enter
negl
jle
lahf
lahf
lret
add
stc
pop
jnp
mov
jae
xor
cli
cmp
mov
dec
fs
sub
pop
repz
in
xchg
leave
ljmp
mov
pop
sti
mov
inc
adc
push
mov
sbb
cmpsb
push
sub
dec
test
mov
mov
mov
mov
scas
popa
inc
int3
and
sub
jns
mov
call
fs
mov
outsl
adc
sbb
into
mov
mov
and
repz
mov
ss
daa
out
cmp
push
outsl
mov
xlat
cmp
mov
fcomp
push
jp
or
nop
push
aas
xchg
inc
shrl
loop
push
out
inc
mov
inc
jns
jne
xchg
add
daa
inc
xor
cmc
push
inc
into
pop
push
ljmp
fwait
push
sbb
insl
push
sahf
stos
adc
or
dec
adc
fcomps
push
inc
add
adc
add
cmp
xor
push
cmp
icebp
xchg
fnstenv
mov
iret
fwait
lods
lods
jle
dec
sbb
xor
fisttpl
addr16
inc
shl
mov
mov
jg
andb
add
jne
inc
xor
pop
and
sarb
ret
shlb
shrb
sub
lret
inc
andl
movsl
and
movb
std
or
push
std
fsubrs
lods
or
jecxz
addr16
mov
out
push
les
jne
cmp
sub
sar
jno
adc
cli
fmul
cmp
test
adc
xchg
mov
movsb
cli
dec
gs
adc
jo
outsb
adc
mov
hlt
inc
aam
xchg
mov
sqrtps
or
cmp
add
xchg
pusha
mov
icebp
leave
xlat
sub
cmpsl
dec
in
mov
flds
cli
movsb
push
adc
adc
enter
xchg
adc
mov
into
mov
mov
std
jae
test
imul
out
push
xchg
fdivrs
inc
lcall
pop
daa
push
sti
push
mov
mov
xor
and
cmpsl
pop
add
mov
add
mov
shlb
aad
mov
add
push
sub
mov
or
fcmovne
adc
sti
outsb
and
test
jne
into
je
xor
pop
insb
adc
cltd
cltd
mov
sbb
out
mull
loope
lret
js
cmp
sub
sbb
lds
adc
jle
ljmp
out
mov
das
and
outsl
inc
fdiv
sub
and
into
ret
out
loope
mov
mov
sbb
cmc
mov
mov
jns
fcompl
and
mov
push
in
fisttps
or
inc
int3
push
jnp
xor
mov
add
out
mov
nop
pop
jecxz
jno
jmp
nop
test
ret
adc
mov
jne
test
aad
test
in
movsl
xchg
and
add
or
mov
es
jge
or
lret
mov
inc
push
add
push
popa
movsb
jg
adcb
cmp
lods
ds
pop
or
mov
mov
aad
pop
push
cmp
fidivs
mul
and
sub
out
add
and
cmp
mov
divb
add
loop
test
not
or
decb
pushf
inc
push
pop
mov
shlb
mov
fcoml
fwait
and
xchg
push
clc
mov
repnz
mov
ds
decl
cld
mov
mov
pop
lahf
cli
mov
jmp
cmc
mov
add
cwtd
mov
sbb
test
aaa
xchg
jbe
jp
mov
jle
icebp
ficompl
ret
fs
fsubs
sbb
fmuls
imul
repz
sub
add
mov
popf
jge
and
inc
sbb
xor
insl
test
inc
imul
cwtl
sti
jecxz
add
out
xor
popf
cmpsb
test
xor
imul
loope
outsl
mov
mov
xchg
mov
xor
adc
into
das
add
jbe
std
cmc
push
push
or
outsl
pop
mov
testl
pcmpeqw
adc
push
stos
in
movsl
pop
roll
pusha
scas
sahf
jne
es
cld
pushf
ret
mov
inc
fsubl
fdivl
sbb
cld
mov
sub
inc
xor
fcomps
and
mov
subl
jns
lret
cmc
or
mov
mov
dec
add
scas
inc
or
fsubrp
lcall
sbb
lock
add
push
dec
xchg
dec
push
test
fildll
jecxz
jbe
decb
int3
jne
inc
cmp
daa
push
sarl
sub
cmp
dec
jmp
mov
jb
adcb
ljmp
test
stos
mov
aad
inc
mov
push
stc
xchg
pop
lret
js
mov
shl
adc
mov
rol
push
or
sbb
jle
icebp
dec
cmc
cli
mov
scas
lods
stos
xchg
test
pop
popa
or
imul
jge
inc
loopne
fdivs
gs
pop
mov
clc
imul
mov
test
lret
add
imul
sub
fcomp
mov
pop
pop
jb
cmp
fsubrs
lods
mov
mov
pop
add
lods
data16
or
cmpsb
hlt
outsl
dec
inc
test
mov
or
inc
aaa
std
pop
rol
fsts
cmp
jmp
sti
insl
pop
bound
sub
inc
sub
mov
mov
xchg
enter
ret
loopne
lock
xchg
sbb
mov
outsb
dec
call
lea
cmp
int3
fisttpll
ljmp
xor
outsl
sbb
mov
xorb
fwait
loop
mov
mov
push
addl
mov
pop
mov
xor
insl
pop
push
lret
jge
rorb
scas
cmp
dec
pop
sbb
leave
pop
sub
pusha
arpl
sbb
mov
ljmp
lea
fnsave
jp
xor
push
mov
inc
clc
push
xchg
cmovo
and
adc
ss
daa
push
adc
add
push
xlat
mov
les
enter
mov
mov
or
xor
int
mov
xchg
loopne
pop
mov
test
mov
pop
pop
rorl
lcall
subb
cmp
dec
sub
and
in
jg
add
aad
mov
cwtl
pop
push
jo
jmp
scas
leave
push
sub
scas
pushf
sbb
jg
insb
test
rclb
cmp
jmp
cmpsl
or
ss
push
lods
in
dec
add
sub
push
mov
xor
mov
mov
xor
cmp
ds
sbb
iret
push
xor
sahf
das
std
sahf
sbb
decb
shlb
push
pop
les
out
or
pop
adc
js
nop
dec
add
ljmp
popa
dec
mov
cwtl
in
addr16
mov
call
jb
mov
out
div
movups
dec
js
xchg
in
pop
jl
xchg
popf
dec
andb
popa
xor
push
lods
test
test
into
and
xor
js
popl
sahf
das
pop
jne
jg
into
xor
popf
cld
bound
fdivrl
adc
stc
add
fsub
mov
push
xchg
mov
cli
mov
mov
lcall
std
daa
int
mov
mov
sub
sub
int
dec
and
xor
adc
call
push
mov
lock
add
ret
ret
fsubrp
loope
and
js
dec
movsl
cli
sbb
rclb
pop
mov
dec
adc
adc
fwait
sahf
cli
mov
sarl
and
sbb
cmp
mov
fwait
push
pop
mov
sti
in
std
mov
sub
mov
or
mov
add
xchg
mov
push
add
cmp
cmc
shll
pop
rolb
mov
mov
jmp
push
xchg
loope
sub
cmp
push
cmpb
fucomip
test
jecxz
pushf
jge
lcall
sub
xor
inc
outsb
lret
ds
out
out
xchg
outsb
addl
and
insb
xchg
sti
mov
xchg
push
stos
sbb
cmp
in
sbb
push
inc
dec
add
dec
sub
cmp
add
repnz
sahf
daa
sbb
or
inc
dec
inc
ret
jb
xchg
lret
out
pusha
mov
mov
sbb
inc
pop
pop
xchg
cmp
mov
mov
jbe
in
or
stos
dec
out
xor
dec
loope
fildll
das
imul
popf
fwait
jb
xlat
aaa
push
arpl
mov
and
adc
pop
or
fstp
push
xor
leave
mov
mov
xchg
push
mov
dec
dec
jl
pop
mov
stc
nop
push
pop
cmp
xchg
mov
scas
mov
xchg
lret
add
mov
push
cld
in
cmp
andps
fcoms
in
cwtl
fs
outsb
and
jno
mov
lahf
fsubr
jecxz
cmp
add
mov
sahf
stc
mov
nop
icebp
sarb
dec
and
cmp
fwait
xor
mov
inc
push
in
cmp
mov
and
fiadds
mov
mov
js
jno
push
gs
add
imul
imull
lea
lahf
scas
in
dec
lods
pop
iret
fdivl
out
jo
mov
sbb
stos
sbb
std
mov
clc
xchg
mov
ss
rcrl
cmp
jbe
lret
lds
fistl
icebp
jecxz
pop
sub
std
cmp
into
insl
aas
shl
jo
sbb
adc
and
lds
insb
ljmp
cld
cmp
lock
mov
rcl
dec
scas
mov
inc
pop
sub
adc
sbb
xchg
adc
cmpsl
jg
push
inc
jl
mov
push
jo
loope
xchg
stos
divb
std
pusha
sahf
mov
rcll
shrl
mov
mov
jmp
add
lcall
pop
inc
inc
test
decb
out
jge
js
aad
dec
fwait
xchg
aad
fcoml
test
or
xchg
xor
subl
sbb
sub
insl
cmp
fbstp
cltd
adc
insb
and
mov
mov
cltd
in
je
shl
popa
into
or
push
iret
in
dec
iret
xlat
push
test
sbb
enter
jnp
lods
sbb
lret
jnp
sbb
and
nop
jg
mov
adc
mov
out
adc
aas
mov
pop
jae
into
cli
pop
inc
mov
mov
push
xor
je
pop
shl
jg
ja
lret
fwait
fwait
or
int
outsb
cmp
int3
add
mov
mov
dec
dec
inc
add
addr16
cwtl
neg
call
cltd
sti
filds
jo
cwtl
insb
outsl
sarb
xchg
and
mov
pop
mov
cli
movsl
lahf
fbstp
and
and
cld
dec
sbb
imul
or
push
icebp
into
subb
mov
jbe
or
arpl
ret
scas
add
fsubs
mov
jp
add
addr16
into
mov
andl
or
popa
mov
test
lcall
stc
pop
mov
pop
cmp
and
sbb
mov
or
xor
push
sub
nop
push
sti
jl
push
scas
jle
vhsubps
pop
enter
xchg
stos
mov
add
mov
add
dec
cmp
add
and
mov
mov
pop
fucomip
scas
lahf
cmp
mov
fmull
ljmp
addb
out
jno
jmp
loop
ret
out
jo
jnp
out
cmpl
mov
or
rclb
and
xchg
or
add
or
add
into
rclb
add
mov
mov
lock
fucompp
cmp
xchg
xlat
adc
inc
pop
sbb
aas
ljmp
cwtl
loope
and
push
aas
and
inc
xchg
mov
and
xor
mov
lcall
mov
inc
stos
mov
sarl
pop
clc
ret
aad
es
cmpsb
sarb
or
movsl
lods
hlt
pop
xor
sub
dec
ja
push
xchg
add
arpl
les
in
addr16
pop
push
repnz
add
lahf
arpl
push
ret
or
fs
dec
push
cmp
sub
push
cmp
mov
inc
cmp
jmp
pop
enter
mov
xchg
dec
iret
test
and
sbb
inc
mov
xchg
or
les
shrb
sti
into
shlb
imul
sbb
mov
aaa
repnz
mov
roll
sub
cmp
movsb
int
sbb
and
rolb
sub
jo
sbb
lcall
mov
sub
outsl
push
mov
cs
add
outsl
mov
insb
shll
loopne
mov
mov
out
jae
lds
outsb
pop
fcomps
fs
adc
mov
ret
adc
sub
mov
mov
inc
mov
sbb
add
inc
mov
mov
and
jns
fldl
movsl
jns
fidivl
dec
xchg
mov
xchg
out
aas
aas
or
sub
pop
pop
dec
adc
pop
jp
cmpl
notb
dec
xchg
dec
pop
popl
testw
mov
mov
imul
cltd
jle
daa
in
adcl
enter
in
adc
shlb
loop
cmpsl
mov
std
stos
xor
fdivl
sbb
add
sbb
pushl
sub
in
dec
addl
and
pop
mov
cmp
out
mov
test
stos
fisttps
sahf
ljmp
inc
das
mov
jp
pop
pop
xor
stc
mov
stos
test
jg
adc
iret
mov
push
imul
shlb
fildl
cltd
in
or
sbb
leave
inc
xchg
test
mov
std
or
dec
sti
inc
notb
mov
testl
jmp
sub
cmp
aam
dec
xchg
push
xlat
mov
dec
aad
sub
cmp
ficoml
ja
lret
cmp
loop
out
mov
pushf
pusha
dec
pop
dec
mov
sbb
lret
dec
or
or
xchg
pop
cmc
xor
and
mov
lods
pop
push
add
je
xlat
mov
jmp
sbb
stos
fiadds
les
ja
js
xor
add
push
push
pop
popa
lret
cmp
insb
jnp
aad
fmul
fldl
mov
inc
gs
mov
aad
inc
xor
stc
dec
or
xchg
data16
mov
adc
or
pop
xchg
pop
jl
xchg
aad
hlt
or
mov
cltd
push
pcmpeqw
jge
add
mov
pop
lahf
dec
mov
dec
mov
repz
ret
push
push
add
mov
add
test
push
xchg
mov
mov
in
mov
xor
aad
pop
cmc
rorb
popa
xchg
pusha
mov
cmp
stc
pop
popf
xchg
std
mov
movhps
and
pushf
sub
dec
call
jmp
or
in
lcall
push
call
mov
and
iret
sbb
mov
lcall
sub
rep
sub
adc
pushf
cmp
aad
push
inc
aad
mov
mov
xchg
cltd
push
fadd
arpl
xor
xor
shlb
out
mov
cli
sub
dec
lcall
mov
cmpl
mov
repz
push
in
sti
inc
cld
int
pop
sbb
xchg
aas
int
cmc
addr16
cli
push
jecxz
xor
push
jnp
xchg
movsb
cwtl
sarl
push
in
cs
lock
inc
cli
push
mov
sub
rcrb
mov
mov
js
add
xchg
sbb
pushf
xor
pop
leave
xchg
or
xorl
push
clc
inc
in
adc
mov
shlb
divl
testb
popf
sbb
das
sub
push
adcb
push
push
mov
mov
xchg
popf
mov
push
push
sbb
das
out
divl
stc
mov
ficoms
pop
leave
pop
subl
icebp
scas
inc
sub
dec
ret
iret
mov
test
out
push
cmp
je
addr16
mov
popa
cwtl
aam
jo
out
aas
jle
test
jecxz
dec
cld
test
lods
add
xlat
sbb
test
imul
mov
pop
dec
jo
cmp
imul
push
add
ds
out
cs
ret
testl
mov
aad
packssdw
mov
icebp
movsb
aad
mov
lret
push
adc
js
ds
xchg
pop
mov
xchg
pop
roll
cs
sbb
cld
sbb
mov
mov
mov
xor
sar
cmpsl
cli
repz
int
push
out
imull
imul
pop
aad
imul
out
in
adcb
enter
inc
loop
cltd
and
pop
and
cmp
mov
add
cwtl
push
hlt
adc
subb
cwtl
adc
ret
inc
mov
out
aas
push
andl
dec
dec
ljmp
adc
outsb
ja
pop
cmp
daa
adc
fndisi(8087
pop
inc
inc
mov
inc
jnp
cmpsl
out
mov
test
aam
inc
cs
mov
mov
sub
andb
pop
mov
jg
jb
or
fsubrs
stos
mov
pop
mov
add
push
mov
mov
mov
imul
or
xor
adc
fs
xchg
dec
and
jne
out
lret
jl
inc
adc
ret
fistpl
adcl
mov
push
fidivs
nop
jmp
cmpsl
mov
out
jmp
pop
into
out
sbb
test
popa
imul
jne
sahf
aam
lock
or
sti
pop
push
ljmp
fistl
mov
mov
pushf
inc
sub
sbb
test
lods
jmp
bound
push
pop
lahf
sub
fadds
shr
movsb
inc
aad
insl
pop
jbe
jl
aaa
sub
lods
mov
adc
lahf
imul
push
and
jb
xchg
sbb
insb
sub
sbb
mov
mov
pop
shrl
cmp
int3
mov
push
xchg
jle
pmulhuw
scas
push
mov
jno
push
pop
iret
and
cltd
jle
imul
mov
mov
fcmovu
pop
add
mov
outsb
arpl
xchg
ret
aad
mov
subb
ss
jle
jae,pn
sbb
movb
lahf
mull
sbb
push
pop
call
cmpsl
or
les
and
popf
mov
out
cld
push
cmp
fst
int
lock
sub
in
dec
cmpsl
inc
xorb
push
lahf
xchg
mov
out
loope
xor
inc
pop
fdivl
cs
dec
stos
out
sti
mov
dec
lret
not
pop
inc
and
out
push
dec
fcomps
fwait
insl
and
and
hlt
in
neg
stos
gs
lock
or
decb
xlat
in
mov
xchg
dec
sbb
rcl
sbb
aas
les
add
insb
push
xchg
sub
sbb
add
out
or
in
clc
enter
sub
es
into
icebp
jle
ljmp
push
and
dec
movsl
imul
daa
lock
popf
adc
mov
sbb
adc
pop
sub
sub
xchg
js
stos
out
pop
and
xchg
push
mov
lds
push
insl
push
or
add
imul
or
lods
adc
jle
cmp
sbb
push
pop
push
js
or
jl
jp
sbb
or
push
mov
loopne
addr16
ret
jo
loope
jle
sar
imul
mov
bound
outsb
cmp
pop
orb
pushf
outsb
xor
arpl
imul
scas
sub
jecxz
add
mov
xchg
out
cmpsl
ficoml
data16
dec
arpl
push
inc
sbb
jle
in
or
aad
adc
pop
jl
in
mov
out
add
in
and
cmp
or
pop
push
or
xchg
dec
stc
aaa
push
or
loopne
and
xor
ret
cmp
repnz
fs
stos
pushf
addr16
and
lods
and
xor
lock
push
loopne
pop
cmc
in
xchg
lods
out
xor
out
loopne
loope
cmp
call
inc
xor
add
daa
or
outsl
mov
xacquire
jae
subb
sub
fsubl
icebp
popf
in
stc
in
fsts
out
sbb
int3
and
addb
iret
pusha
add
scas
cmpsb
push
cmpsl
push
hlt
je
in
ja
rol
daa
cmp
xor
fildll
loope
add
xor
sbb
leave
sarb
mov
push
ret
inc
inc
jecxz
cmpb
sbb
fwait
mov
push
aam
mov
arpl
int
fwait
dec
sub
outsl
sahf
jmp
mov
dec
jmp
push
outsb
mov
mov
xor
lret
mov
adc
dec
cmpb
dec
add
loop
cmpsb
push
mov
ljmp
cmc
jl
loop
xor
es
enter
or
leave
shl
gs
jg
pop
aam
mov
cmp
addr16
je
xor
adc
fcoms
mov
sbb
jle
cld
or
dec
call
add
aam
dec
jmp
and
xor
mov
sar
out
je
or
popf
jmp
or
test
lds
cmp
sbb
popa
jne
mov
pop
shrb
push
stc
pop
xor
stos
mov
mov
test
cltd
adc
in
cmpsb
mov
hlt
sub
in
xlat
stos
sbbl
loopne
daa
ss
push
jae
rcll
dec
shl
add
push
mov
mov
xor
mov
sbb
and
cmp
orb
movl
jle
scas
push
xor
sahf
mov
lods
sbb
int3
mov
cli
sbb
mov
mov
inc
jno
mov
pop
add
shlb
inc
cld
subb
pop
aaa
incl
mov
imul
push
adc
jne
jp
cld
ljmp
dec
adc
xchg
popa
push
jle
out
mov
lods
pop
push
adc
mov
mov
int
adcb
inc
cmp
sbb
test
out
pop
add
test
ja
in
movsl
fnstcw
jecxz
inc
dec
mov
cmp
mov
mov
push
clc
pop
inc
sti
sub
or
xchg
push
imull
ret
dec
into
cmpsb
jp
cmp
out
into
inc
cmc
out
lret
outsl
pushf
and
cmp
or
pop
dec
mov
xchg
mov
cmp
cmc
test
adc
xor
inc
and
or
xorl
mov
cmpsl
and
and
mov
test
cmp
iret
outsl
mov
sarl
fwait
push
ret
in
mov
test
xchg
outsl
loopne
lcall
fmuls
cmp
mov
cmp
add
inc
aaa
jb
and
aaa
fadds
adc
ret
add
popf
fucomi
ljmp
or
lds
jecxz
imul
mov
popf
mov
iret
inc
and
add
dec
xlat
pop
xorl
mov
mov
in
jb
fmul
fs
fs
sub
lcall
loop
js
inc
pop
add
xchg
jb
mov
rcll
xchg
push
rep
jmp
enter
jecxz
je
jnp
pop
out
and
mov
mov
mov
push
cmpsl
imul
push
je
leave
sub
add
inc
lret
je
inc
mov
cmp
or
jle
cmp
dec
dec
mov
mov
push
out
jge
lret
fisttpl
pop
les
dec
and
dec
and
shr
stos
pop
imul
add
loope
pop
or
xor
sbb
out
js
aaa
mov
jb
fs
int
adc
enter
sub
sarl
cli
mov
sti
sbb
lds
dec
subb
adc
mov
imul
stos
andb
in
int
push
mov
lahf
add
dec
xchg
inc
cmp
push
int3
jns
adc
mov
dec
cmp
and
jle
fnstsw
xor
or
test
ds
and
jecxz
add
jl
in
in
in
mov
xchg
out
xchg
mov
and
popa
sbb
lods
call
les
inc
jo
and
and
jno
rcll
mov
mov
das
push
xchg
xchg
fldl2t
jbe
test
push
xchg
pop
andl
lds
popa
and
add
jae
mov
mov
xor
jg
test
xor
popf
xchg
add
movsl
movsb
cmp
andl
mov
leave
sbb
or
mov
add
lret
shll
mov
dec
mov
dec
sub
lds
pusha
pop
rcll
add
dec
xorl
rorb
jg
mov
mov
loopne
rcll
mov
sbb
pop
inc
popf
inc
jae
sub
adc
xor
rcl
dec
pop
sbb
cmp
scas
mov
xor
scas
xor
pop
paddusw
int
hlt
cli
xor
xor
out
stos
leave
jns
add
and
sub
jno
mov
mov
and
rcrl
mov
jl
xor
test
fwait
test
lahf
xchg
inc
lret
popf
inc
sub
andl
sbb
xchg
cmc
jecxz
cmp
jg
shll
push
add
cmp
fisubl
addr16
dec
repnz
sbb
lock
mov
lock
pushf
xorb
cmp
push
xor
popf
dec
mov
shrl
jl
insb
jmp
xor
push
jo
dec
add
push
int
subb
and
or
mov
addr16
pop
imul
rorb
outsl
jmp
and
jno
loopne
lret
shll
cmpsl
or
jp
xlat
adc
sbb
loop
add
dec
or
mov
xor
fistpl
outsb
adc
ljmp
repz
inc
pusha
xchg
dec
test
decb
xchg
stos
jle
sbbb
xchg
dec
negb
out
ds
sub
xlat
push
lods
mov
and
mov
test
mov
xor
inc
cwtl
iret
sub
imul
push
add
mov
sti
int
push
sbb
xchg
add
push
dec
fists
xor
mov
add
adc
arpl
jl
das
lock
or
and
out
push
xchg
stos
jb
pop
jge
or
jmp
inc
leave
mov
or
into
mov
adc
sbb
ss
push
jbe
push
popf
popa
adc
push
xchg
pop
data16
cld
jne
xchg
out
lahf
mov
in
xchg
bound
mov
nop
xor
test
xchg
ss
outsl
into
rorl
push
dec
add
adc
mov
dec
and
inc
fwait
hlt
into
repz
pop
adc
sub
xchg
stos
fists
fadd
fiadds
cmp
aaa
push
iret
outsb
jae
leave
xchg
xor
divl
dec
mov
rclb
jle
jb
testb
cli
sub
lcall
into
mov
push
jno
cli
test
mov
imul
gs
mov
push
push
add
hlt
push
rcrb
cmpsb
fs
lret
and
fcoms
pop
outsb
sub
repnz
pandn
mov
push
jne
dec
add
cmp
mov
and
cmp
jb
xchg
fsubrl
je,pn
or
iret
dec
push
sub
xchg
xlat
jge
push
push
mov
xor
sub
and
jecxz
rclb
jmp
sti
clc
cmp
in
inc
inc
outsl
cmp
movntq
scas
loopne
cmp
cwtl
sbbl
adc
mov
push
orb
into
jge
sahf
cmp
scas
and
mov
cli
enter
inc
insl
mov
leave
xor
xor
push
jge
in
or
mov
and
sar
dec
aam
in
jl
test
dec
ret
fcmove
out
daa
popa
lods
adc
int3
sahf
and
shl
std
xchg
mov
inc
test
ret
pushl
sub
mov
add
scas
clc
inc
cld
ret
popf
mov
adcl
mov
lahf
hlt
arpl
push
sub
pop
fstl
add
sub
sub
adc
lods
in
xchg
sbbb
shrb
xchg
clc
outsl
stos
idivb
cwtl
add
dec
mov
jb
jno
icebp
cs
cmpsb
ret
mov
stc
cwtl
dec
rorl
sbbl
je
lcall
mov
jge
arpl
cltd
or
pop
ljmp
lock
xchg
filds
int3
mov
sarl
mov
sub
jns
or
arpl
js
loope
adcb
or
das
cmp
dec
out
adc
push
jle
les
scas
sub
mov
ljmp
nop
sbb
add
inc
hlt
or
pop
out
jg
sbb
xlat
fcompl
xchg
inc
adc
sti
stc
cmp
cmpl
test
inc
sbb
or
add
in
fwait
pop
imul
cmpsb
pop
mov
cmpsb
cli
xchg
popa
nop
dec
mov
sub
shll
popa
int3
es
stc
jecxz
data16
shrl
dec
outsl
xchg
out
rclb
stos
inc
arpl
pop
mov
nop
std
cmc
sub
out
into
fsubrs
mov
repz
fcoml
adc
notb
je
xchg
sbb
lret
xlat
sub
push
cmpsl
push
dec
pop
mov
fcoml
jno
inc
jns
inc
or
dec
mov
adc
push
sbb
addr16
adc
jg
lods
jns
mov
lret
and
adc
mov
mov
cmp
add
pop
icebp
ret
adc
fists
fisubrl
push
out
scas
mov
sbb
mov
push
xlat
mov
out
repz
mov
sbb
jl
push
mov
and
fcmovbe
iret
pop
loop
cmp
adc
ret
fstpl
pcmpeqd
adc
mov
mov
movsb
les
movsl
or
rorb
mov
addl
lcall
shrb
xchg
into
movsl
scas
jecxz
pop
fucomip
cli
jp
jp
add
add
pop
int
movl
lcall
and
dec
pop
int3
jge
cmpsl
xchg
or
cs
popf
fwait
push
lahf
sub
cmp
dec
push
clc
sub
int3
das
xchg
mov
add
xlat
movsb
xchg
and
dec
lret
and
inc
rolb
imul
data16
repz
and
loop
sahf
test
into
sub
ss
mov
adcb
jp
mov
add
outsl
notb
push
or
loope
push
mov
sbb
insl
fadds
bound
movsb
sti
outsl
xchg
push
xchg
fistl
xchg
fs
jmp
push
aad
nop
mov
popa
repnz
adcb
xchg
adcb
fistpll
mov
icebp
jg
divb
or
jno
sbb
int3
repz
cwtl
enter
jno
xor
das
or
and
in
popa
cmp
gs
xor
mov
push
lock
das
scas
into
rcl
mov
sbb
aaa
fnstenv
sbb
or
int
mov
xor
test
dec
pop
jp
lret
xor
dec
xchg
cs
or
test
divb
out
das
aas
mov
movsb
scas
lret
addr16
or
push
test
xor
stos
call
push
nop
fs
jno
hlt
imull
sbb
cmc
xchg
mov
faddl
aad
ljmp
push
jp
loop
or
cmp
in
cwtl
mov
mov
and
cmp
fdivrp
lahf
ficompl
ror
mov
pop
jae
cmp
pop
aam
cmp
testl
jecxz
lds
je
test
xchg
enter
insb
jecxz
sahf
inc
out
fcomps
pop
cmpb
push
cmp
sub
add
fldcw
cwtl
adc
xchg
cmp
mov
test
lock
push
aad
and
add
mov
jmp
jne
or
leave
inc
add
out
aad
ret
adc
mov
loopne
movsb
jecxz
cmp
notl
imul
mov
test
sub
filds
mov
std
xchg
cmc
sbb
cmpb
dec
and
mov
add
shrb
adc
movsb
and
insb
or
and
cs
xchg
add
or
cmc
adc
adc
es
xor
movsl
clc
cmp
jmp
push
sub
lret
int3
xchg
mov
fcompl
stc
fnstenv
pushf
das
das
or
mov
cmpsb
pop
movsb
fs
dec
xor
pop
and
daa
jnp
push
push
ja
jp
scas
scas
cmpsl
sub
mov
and
movsl
test
idivl
mov
push
mov
xchg
pop
lods
bound
subl
sub
rolb
jb
sbb
test
mov
xlat
jle
ljmp
stos
cld
lods
push
fmull
pop
mov
sub
fnstcw
fcomip
adc
shrl
mov
add
in
sub
or
and
lock
cltd
pop
dec
mov
xchg
aam
fcoml
lret
xchg
sbb
adc
inc
insl
dec
push
fdivp
mov
pop
adc
fldt
pusha
sbb
mov
and
fcomps
stos
mov
or
mov
loop
roll
sub
pop
mov
outsb
sarl
inc
sti
jns
mov
fidivrs
xchg
cmp
sahf
loop
add
test
nop
pop
outsl
clc
xchg
jnp
mov
mov
pop
cmp
jnp
add
or
mov
push
mov
or
cmp
stos
into
aam
inc
inc
push
xor
negb
jbe
and
arpl
gs
push
pop
sbb
roll
pop
movsb
mov
dec
and
loope
xchg
and
shr
bound
int
cmpsb
in
xor
rorb
imul
xchg
popf
popa
lods
cli
movsl
push
stos
out
sub
pusha
js
jg
mov
jmp
jo
xchg
and
push
pop
bound
sahf
dec
xlat
xlat
lahf
icebp
adc
mov
scas
hlt
cltd
enter
ds
add
mov
adcb
hlt
cmpsl
lods
adc
jle
inc
push
and
ficoml
inc
loop
push
push
jb
gs
inc
movsb
mov
push
cmp
outsb
push
arpl
lret
repnz
pop
cmp
sbb
mov
lret
cs
cmp
mov
jl
mov
push
mov
pop
les
and
aad
aaa
outsb
divl
sub
pop
in
out
inc
xor
inc
aam
push
into
inc
rcl
cs
clc
fldt
test
aas
pop
xor
xchg
inc
out
and
daa
push
mov
adc
mov
pop
inc
push
lods
lcall
fwait
pop
push
jmp
ret
mov
xchg
idivl
out
pop
and
mull
dec
gs
or
push
negb
push
cmp
jge
jecxz
clc
ret
mov
gs
out
sub
mov
ficoml
test
ss
add
or
mov
mov
push
lcall
xor
pop
rclb
testb
pop
inc
or
jb
insl
mov
push
mov
cwtl
dec
out
sub
jmp
add
pop
push
pop
popf
sub
out
jbe
dec
lahf
mov
ss
adc
cmc
sub
cmp
cmc
insb
popa
loop
outsl
scas
in
adc
push
xchg
fwait
call
push
daa
mov
mov
aad
cmc
jno
adc
mov
xchg
pop
sub
scas
loop
idivl
shl
add
mov
in
fsubrl
movsb
mov
xchg
pop
test
mov
in
mov
lret
dec
xchg
add
cs
imul
xchg
xor
mov
cwtl
push
inc
or
jne
fwait
pop
mov
mov
js
movsl
adc
or
push
orl
and
dec
pop
cmp
and
cli
add
jns
mov
adc
sub
push
mov
dec
shrb
arpl
call
ret
movsb
aam
dec
jp
jge
fsubs
sbb
push
xor
add
inc
xchg
xorb
jno
or
test
or
pop
aad
sbb
cmp
mov
aaa
pop
xchg
mov
mov
enter
pop
sbb
mov
mov
in
jo
jl
orb
pop
jbe
push
pop
xchg
out
sti
add
icebp
test
scas
arpl
mov
xchg
sbb
pop
jge
das
jnp
mov
sub
cmpsb
mov
test
cwtl
dec
push
jle
in
xor
jecxz
sbb
decb
jle
mov
dec
and
sti
fsubs
data16
jl
mov
jo
sbb
nop
sub
pop
sbb
push
jae
jge
imul
or
and
add
out
pusha
popa
cli
jecxz
adc
inc
aaa
jge
loope
jnp
gs
mov
mov
add
outsl
sub
fimull
and
mov
test
push
xor
xchg
adc
repnz
push
dec
xchg
roll
test
mov
push
lods
push
pop
xlat
and
outsl
mov
fnsetpm(287
out
lret
jecxz
in
push
add
xlat
loop
gs
mov
hlt
ja
cmpsb
scas
test
mov
rcll
ja
mov
out
xor
and
inc
scas
stos
inc
jbe
jecxz
mov
pop
jns
out
rclb
mov
shlb
pop
popf
into
and
mov
gs
sub
cmpsl
incb
mov
mov
out
testl
xor
jb
out
clc
add
lret
and
add
pop
sub
adcb
jle
ja
add
into
flds
mov
mov
or
inc
pusha
mov
sbb
fdivrl
movsb
mov
int3
mov
adc
pushf
push
fcmovb
aad
mov
sbb
shr
mov
mov
xchg
call
sbb
cmp
and
lret
test
out
pop
xchg
repz
aad
repnz
or
data16
xchg
insb
mov
lods
adc
aad
mov
mov
addr16
pop
ss
mov
and
jns
or
shl
pop
nop
pop
out
shr
insb
test
cmp
cmc
xor
pop
addl
or
das
push
pop
gs
dec
pop
mov
mov
fst
andl
lret
dec
call
adc
pop
mov
mov
cli
cmp
inc
and
outsb
push
test
jnp
jmp
xchg
jg
pusha
in
test
push
icebp
fdivrl
arpl
cmpsb
aaa
xchg
adc
jmp
daa
js
mov
jae
repnz
int
repnz
push
pop
mov
xor
mov
and
adc
jg
cmpsb
movl
adc
rcr
pop
mov
fmuls
and
and
test
mov
mov
repnz
push
jmp
dec
roll
ss
mov
sub
mov
cmp
add
ficompl
and
xor
push
xor
sbb
lahf
xchg
and
es
or
cmp
shl
xchg
cmpb
xchg
cmp
mov
aad
out
mov
pop
orb
mov
inc
xor
cmp
add
and
push
xor
jb
ret
and
and
mov
inc
mov
syscall
movsb
das
lcall
add
inc
in
cmp
and
clc
imul
adc
sahf
jl
lret
jmp
cmp
pop
mov
shll
jb
mov
adc
es
sub
dec
mov
cmc
and
inc
mov
out
repnz
pop
addl
dec
adcl
stos
jno
xchg
and
pop
les
dec
mov
test
jno
test
xor
cmp
and
mov
inc
es
pop
push
inc
lods
in
movsl
mov
shlb
int3
mov
daa
jmp
mov
stc
cmp
fdivs
sbbl
das
pop
vpunpcklbw
out
jne
std
popa
inc
mov
scas
cmp
movsl
aas
dec
pop
flds
std
stc
add
fs
sub
call
shl
mov
mov
jns
stos
mov
sti
add
pop
cmp
out
out
or
ja
daa
aad
sub
ja
mov
inc
int
sbb
mov
cmp
adc
ret
ljmp
mov
mov
xchg
jb
cwtl
adc
and
loope
mov
popa
data16
and
dec
sub
enter
pop
iret
in
rolb
clc
push
lahf
sahf
adc
loop,pt
jne
mov
shr
add
add
movsl
stc
adc
push
xchg
ret
outsb
in
adc
dec
push
xor
mov
dec
std
adc
xchg
or
add
xor
insl
icebp
pop
sub
pop
or
nop
xor
push
push
push
add
popa
jbe
pop
addr16
shlb
in
outsl
outsl
jae
fwait
into
jg
jnp
out
mov
sub
cmpsb
int
mov
cmp
add
mov
sbb
sub
cmp
imul
cld
push
jg
imul
mov
mov
adc
sub
aad
pop
enter
dec
pushf
fiaddl
stc
add
pop
add
push
call
int
mov
add
es
in
fmuls
cmpsb
lahf
cmp
cmp
pop
jnp
in
add
movsl
fistl
cli
popa
stc
test
ret
inc
into
or
mov
fsts
mov
inc
stos
sahf
pushf
cmc
mov
sti
adc
adc
pop
xor
and
lret
popl
out
fsts
jnp
mov
cmc
outsl
sbb
jle
pop
pop
es
and
lahf
adc
das
jne
mov
cmpl
and
sub
pop
enter
push
pusha
cmp
xchg
sub
push
inc
mov
fs
rcrl
in
in
and
mov
push
mov
lock
sbb
adc
mov
dec
bound
lret
or
inc
mov
xlat
aaa
push
sbb
test
out
shrl
add
shl
adc
push
sub
loopne
lods
fistpl
mov
movsl
pushf
mov
imul
mov
xor
sbb
fldl2e
shlb
dec
fsubp
inc
pop
inc
shlb
xchg
xorl
sub
aaa
mov
test
or
dec
lds
insl
mov
adc
pop
jne
inc
jae
aad
push
xchg
mov
mov
shl
adc
repz
je
or
fidivrs
loop
xor
pop
jp
arpl
das
into
cld
mov
push
sub
mov
pop
add
je
fldcw
cmp
or
loopne
scas
das
andb
gs
adc
or
pop
out
dec
loop
aas
xchg
insb
in
xor
jmp
arpl
icebp
lock
ss
xor
mov
loopne
test
push
push
repnz
jecxz
int
and
repz
arpl
inc
sub
leave
test
adc
test
sahf
fs
jp
push
push
cmp
jb
xor
sbb
adc
daa
stos
xor
dec
loop
jmp
loop
jns
int3
sbb
outsb
push
bound
jno
dec
mov
and
jo
sbb
cld
mov
mov
xchg
shrl
das
imul
pop
dec
jmp
addr16
dec
jg
aam
dec
add
outsl
outsb
repz
xchg
gs
addr16
add
pushf
xchg
loopne
inc
jle
ja
stos
adc
pop
scas
es
pop
inc
mov
sti
mov
stos
jmp
popa
lds
dec
mov
push
jne
pop
cmpsb
clc
int
je
push
sbb
mov
xchg
sub
insl
and
roll
orb
nop
imul
rorb
push
shr
lock
jg
jmp
lea
out
xchg
dec
jmp
xchg
inc
pusha
jo
push
mov
xchg
fcomi
adc
add
insl
inc
lret
push
mov
xor
mov
dec
mov
jmp
fists
mov
sbb
xchg
fdivr
mov
loop
cmpb
rcll
sbb
scas
xchg
jae
cmp
jb
test
and
cld
and
cmp
xor
movsl
dec
mov
push
and
sahf
jge
rolb
addb
nop
push
lret
mov
and
xor
inc
cmc
fstpl
dec
mov
mov
inc
mov
test
xlat
xor
sub
sbb
pop
sbb
mov
pop
mov
cli
popa
outsb
hlt
ja
pop
mull
inc
das
adc
mov
cld
test
xchg
add
lods
xor
mov
xor
and
mov
xchg
shlb
flds
lret
push
and
mov
mov
pop
iret
ds
mov
into
push
sbb
xchg
dec
cmp
add
out
sahf
arpl
nop
mov
in
mov
adc
aam
in
call
pop
shl
imull
scas
jp
in
cmpsl
mov
leave
je
out
insl
out
pop
or
ret
and
push
push
dec
orl
mov
or
je
shrb
loope
jno
or
arpl
xlat
add
out
aam
std
pushf
loopne
into
jg
and
mov
int3
mov
sti
addr16
aad
sbb
xchg
lods
add
je
inc
xor
mov
in
sahf
xorl
dec
mov
pop
pop
xchg
add
jmp
shrb
xlat
cs
cmp
cmp
out
pop
stc
call
adc
inc
scas
mov
push
inc
lahf
fcomi
add
loope
fmuls
scas
pusha
out
push
flds
mov
sub
cmpsb
ficoml
je
mov
jbe
mov
jae
jge
sbb
idivb
pushf
lods
mov
shr
mov
shll
mov
adc
gs
out
mov
jmp
sbb
sbb
shrl
cmp
cs
outsl
and
sbb
in
mov
jnp
inc
mov
popa
add
sbb
dec
jno
subl
insl
pop
jp
push
pop
dec
jg
stos
xchg
jge
cmpl
test
daa
jmp
gs
xor
aaa
push
mov
fsave
jp
loop
leave
incl
mov
lcall
inc
scas
xor
xchg
xchg
xchg
das
xor
fcmovnu
aad
or
cmc
add
dec
mov
pop
sbb
pop
stos
das
or
cli
mov
into
movsb
jecxz
jp
add
clc
and
or
mov
jo
das
and
shl
dec
out
imul
inc
js
push
push
xor
xchg
fistpll
test
lret
jne
xor
jae
insb
call
iret
frstor
repz
dec
bnd
mov
push
mov
ja
mov
push
loop
push
push
popf
scas
sub
add
fwait
shl
jp
xchg
pushf
adc
sub
int
sub
test
fcmove
inc
adc
cmp
sub
lahf
sub
aaa
filds
push
imul
mov
jne
pop
xor
jle
inc
jo
fsubp
fs
fstp
inc
aaa
xor
lahf
outsb
loopne
shll
dec
out
adc
rorb
mov
in
sub
rcr
fwait
aas
push
outsb
int
xchg
clc
jp
or
pop
pop
xchg
jmp
aad
sbb
adc
test
ljmp
cmp
int3
mov
sbb
test
fstpl
or
mov
stc
inc
ljmp
lods
push
ljmp
cltd
sbb
cmp
sub
call
repz
push
stc
mov
pop
jge
jno
rorl
fstpl
sbb
lock
std
pop
xchg
pop
fs
mov
mov
mov
or
inc
sbb
cmc
dec
sbb
dec
cwtl
fidivl
dec
inc
lahf
lods
mov
aaa
popf
jae
inc
pop
lret
dec
in
in
xor
xchg
mov
or
xchg
push
push
mov
and
test
push
add
jle
fldt
addr16
adc
outsl
lahf
push
xchg
movsl
scas
dec
xchg
repz
xchg
out
in
ret
dec
ret
ljmp
rorb
push
or
push
icebp
inc
sbb
je
push
pop
inc
test
adc
jno
shll
inc
push
or
sbb
pop
ja
jle
pop
fptan
sti
aad
es
das
les
shll
adc
dec
shrb
xor
adc
shll
pop
jecxz
sub
aam
dec
inc
testb
sar
xchg
add
dec
daa
sbb
inc
fidivrl
cltd
or
lods
je
in
pop
fwait
jno
push
add
les
lea
cmp
sbb
mov
and
aaa
call
gs
and
pop
mov
rclb
mov
cwtl
sub
pop
add
bound
fwait
ret
lret
xlat
int3
gs
test
xchg
jge
mov
push
jnp
pop
and
sbb
adc
pop
jg
dec
dec
lea
iret
lcall
jp
rcl
lret
or
push
or
insl
and
cwtl
out
nop
xor
cmpsl
jmp
or
les
mov
dec
jne
in
cmp
fs
in
sub
clc
ss
sbbb
dec
ljmp
daa
fmuls
cmp
cmp
xor
and
cld
loop
out
mov
outsb
test
lea
xor
sub
mov
mov
insb
loop
lret
inc
xor
xor
insb
mov
pop
dec
jp
inc
test
adc
pushl
dec
cmp
and
add
imull
addr16
sub
aam
insb
test
data16
ljmp
pop
sbb
jl
add
push
add
lea
in
sub
mov
ljmp
in
push
pop
mov
or
mov
testl
out
xor
movsl
mov
cmp
outsb
fdivl
jne
cmpsl
pop
xchg
imul
into
ds
pop
andb
jle
mov
jmp
icebp
stos
das
movsb
repnz
out
sub
mov
pop
push
jns
jmp
dec
mov
push
sub
andl
fwait
mov
in
in
push
push
pushf
sbb
in
rcrb
ljmp
sbb
fbld
push
jl
jae
jmp
xor
xchg
xor
hlt
lret
dec
and
xchg
les
fdiv
xchg
inc
shrl
add
xchg
jo
sub
mov
push
fwait
out
test
mov
daa
rclb
xorl
out
pop
test
fwait
or
dec
mov
dec
mov
lcall
ret
pop
sahf
inc
int
shr
imul
lret
jmp
mov
and
sbb
rcl
mov
push
daa
stc
sbb
lea
mov
mov
out
xlat
aad
dec
sub
out
mov
mov
ss
hlt
or
push
adc
sbb
ret
mov
fdivs
arpl
jmp
das
jg
mov
sbb
ficoml
xchg
das
lods
test
inc
or
scas
imul
pusha
fstp
cmp
dec
mov
shll
movsl
mov
pop
loopne
push
lea
mov
jl
inc
out
cli
and
mov
jmp
stos
jnp
pop
pop
fldcw
pop
mov
shrl
mov
cmp
add
mov
push
add
iret
mov
ret
mov
push
pop
cmp
sbb
adc
test
xchg
jg
xchg
lcall
cmp
xchg
xor
jl
hlt
cmc
loopne
xchg
mov
jns
lods
adcb
pop
cmp
inc
cmpsl
push
jnp
pop
fnstcw
add
scas
adc
push
sub
int
out
xor
jne
jbe
xor
pop
lcall
cltd
mov
jp
rolb
and
push
inc
add
jecxz
mov
mov
movsb
jmp
js
imul
sub
addl
sarb
pop
mov
mov
mov
inc
cmp
adc
jmp
inc
mov
dec
sbb
movsb
mov
test
jns
movb
xchg
lock
test
and
scas
mull
lods
adc
clc
mov
dec
bound
ds
cwtl
pop
inc
fcoml
inc
outsl
mov
or
pop
out
jl
add
fucomp
xorb
add
cmp
imul
test
cltd
popl
lahf
dec
movsl
xlat
in
call
mov
pop
sub
mov
adc
push
lret
and
lret
mov
fimull
inc
cmp
jns
jge
jmp
incl
push
arpl
cmpsl
pop
roll
jmp
mov
jmp
call
push
imul
sbb
cmp
gs
data16
cmpsl
ss
mov
test
xchg
dec
stos
pop
pop
incl
cmp
xchg
shlb
leave
mov
imul
test
mov
lods
aas
dec
adc
add
out
and
int3
test
add
testl
xor
mov
xlat
jl
push
bound
adc
and
dec
adc
mov
das
cmp
dec
pop
test
push
gs
out
fstps
or
cltd
mov
mov
test
push
in
pop
sub
cmp
or
inc
inc
test
repnz
fnstenv
fwait
mov
add
mul
out
stc
cltd
xchg
in
nop
stos
mov
adc
sub
rorl
sub
rcll
adc
adc
xor
push
fistpl
xchg
sbb
repz
pop
pop
or
sbb
mov
mov
movsl
cmp
xchg
mov
mull
or
push
jle
mov
scas
sbb
lcall
xchg
mov
lock
jno
pop
or
push
in
dec
movsl
adc
mov
outsb
imul
dec
les
xchg
pop
add
test
and
sbb
sbb
outsl
int
dec
jne
push
pop
into
test
subb
or
inc
lcall
stos
mov
xchg
rcll
fstpl
or
insl
inc
das
test
xchg
stos
mov
mov
xor
pop
pusha
push
add
sar
pop
add
cmc
and
mov
sbb
jbe
or
popf
sahf
mov
loopne
fisubs
imul
dec
mov
frstor
push
xchg
xchg
xchg
xlat
dec
cmp
sbb
iret
call
js
pop
imul
and
fcmovnu
mov
push
into
adc
sar
push
mov
push
dec
nop
out
popa
int3
js
fs
ja
out
rcll
rorb
push
and
out
pop
rol
pop
sbbb
jno
outsl
jno
stos
mov
xchg
jae
je
cmpsl
je
or
jle
insl
lret
jno
loop
imul
mov
and
xchg
andl
dec
add
inc
mov
bound
rolb
adc
xchg
aas
popf
cmpsb
cli
mov
and
out
test
pop
pop
sahf
adc
adc
enter
mov
mov
adc
jmp
sahf
mov
push
out
cmp
outsl
xchg
std
icebp
popf
dec
jp
cmp
subl
mov
out
aas
test
mov
enter
testb
out
fnstsw
jnp
jbe
inc
inc
mov
adc
mov
popa
jo
dec
adcl
jae
aad
out
add
mov
insl
fcoms
lds
add
jmp
roll
lahf
xor
aad
lret
mov
mov
push
bnd
jb
movl
xor
ljmp
and
fadd
stc
pop
into
repnz
shrl
ljmp
mov
sbb
jne
push
out
dec
push
ds
in
mov
adc
mov
mov
adc
mov
or
jge
ljmp
out
cwtl
jns
call
fcomip
and
push
icebp
pop
stos
lcall
push
out
pop
dec
popf
dec
arpl
out
pop
jo
cmp
push
pop
loop
xorl
mov
out
sub
pop
add
mov
fidivrs
adc
rcrl
cmc
popa
pop
pushf
mov
pusha
addl
out
sub
xor
inc
int3
jbe
cmp
inc
addb
lret
push
jae
push
add
mov
cmpsb
or
or
lcall
les
aam
add
into
test
mov
outsl
sbb
pop
scas
in
jp
in
mov
mov
sbb
adc
mov
dec
add
test
mov
ret
pop
lret
jmp
lahf
mov
in
and
rcrb
jo
push
jne
adc
lock
mov
xchg
dec
push
xlat
mov
mov
in
fcomps
ja
inc
lods
insb
jle
in
mov
jbe
push
dec
dec
jle
mov
or
addr16
stos
push
fnstsw
mov
gs
js
clc
or
cmc
sub
or
add
sub
jns
pop
mov
insl
inc
adc
test
mov
mov
xchg
mov
jmp
int
outsl
scas
insl
jno
inc
push
int3
in
pop
pop
inc
dec
mov
pop
and
mov
sahf
psllq
mov
mov
mov
daa
inc
xor
dec
mov
mov
rcll
push
push
lcall
sub
push
das
imul
test
loop
cmp
and
lahf
lcall
adc
jge
inc
xchg
cmp
jp
test
insb
cmpsb
mov
rorb
push
call
cmp
les
xor
lret
dec
add
lds
cmp
sbb
es
pop
les
jns
dec
repz
sbb
sub
jl
or
in
out
insl
mov
movsl
adc
das
in
mov
mov
pop
mov
mov
add
inc
subl
fcomp
dec
test
pop
lock
pop
add
mov
pop
jp
sub
mov
mov
xchg
sbb
push
lcall
shrl
lods
xchg
movsl
jecxz
sbb
xchg
push
mov
push
sbb
mov
add
pop
pop
in
rol
bnd
pop
xchg
jecxz
into
outsb
rcrl
repnz
pop
sbb
fs
cmp
loop
sub
push
in
inc
sarb
xor
jbe
push
pop
mov
movsb
imul
pop
pop
mov
and
lcall
cmp
push
test
pop
stos
push
and
add
jo
outsb
jecxz
mov
arpl
clc
cmpl
push
cwtl
push
pop
mov
xlat
into
dec
add
pop
inc
dec
test
adc
ja
nop
call
dec
repnz
repnz
dec
ss
stos
push
leave
insl
xchg
push
jo
test
clc
fistl
xor
xchg
test
les
aam
push
in
icebp
sub
xchg
dec
ss
mov
fstpt
add
mov
push
in
add
adc
cmp
sub
jmp
adc
aam
fsub
insb
ret
add
in
aaa
mov
dec
and
popa
xchg
test
sbb
xor
pop
popf
dec
mov
and
fldenv
adc
cmp
pop
mov
inc
mov
test
frstpm(287
test
xor
add
mov
jmp
std
jo
insb
cmpsl
push
mov
pop
mov
mov
lahf
loop
jne
jl
bound
bound
fs
leave
sub
movsb
dec
popa
mov
jbe
pop
cmp
les
shlb
xchg
cmc
mov
das
jns
movnti
push
cmp
inc
lock
fists
dec
outsb
mov
xchg
int
sti
jbe
jns
out
movsl
xchg
pop
lds
push
xchg
dec
orl
pop
in
int3
dec
adc
or
mov
sbb
mov
mov
lret
jge
xchg
fisubs
imul
incl
mov
inc
lods
sub
pop
push
push
mov
int
mov
std
jmp
xchg
fisubrl
fs
stos
ja
mov
es
leave
stc
push
dec
jb
jecxz
movsb
mov
jne
xchg
pop
pop
mov
cmp
stos
jb
adc
xchg
rcrb
xor
idiv
in
lea
adc
mov
lret
mov
mov
push
insb
fsts
adc
fcoms
dec
dec
mov
loope
xor
aaa
or
cli
xchg
jb
scas
neg
das
mov
je
cmp
call
ja,pt
je
mov
aam
mov
fidivl
xchg
cmpsl
jge
out
cmc
mov
insb
jno
xchg
out
xorl
cmc
leave
inc
stos
adc
and
nop
xchg
cmpsb
addr16
cmp
das
lea
mov
dec
push
sar
push
or
mov
jmp
shr
arpl
jbe
loope
add
pop
xlat
inc
outsl
imul
and
into
ret
dec
dec
push
sbb
ret
jne
mov
jnp
insb
loope
push
jge
arpl
lret
imul
aam
and
inc
jbe
inc
scas
jo
repnz
push
arpl
cmp
xchg
in
mov
cmpsb
mov
or
cwtl
jecxz
icebp
push
mov
daa
cmp
push
mov
fs
adc
ljmp
add
jno
adc
lea
mov
daa
inc
sti
scas
mov
cmp
clc
js
pop
pop
jb
cli
lret
cmp
sbb
mov
test
mov
in
mov
add
pop
mov
sahf
jp
mov
and
mov
cmp
fildl
outsb
mov
dec
or
sub
sbbb
push
in
pop
das
cmp
outsb
inc
call
mov
pop
cmp
sbb
sub
pop
cmp
shr
sarl
inc
out
jl
adc
jge
popf
repnz
jbe
lods
xchg
push
cli
cwtl
call
or
mov
mov
sub
lcall
cmpsb
mov
loope
xor
frstor
inc
repnz
jl
cmp
in
mov
clc
movb
adc
in
xlat
lahf
or
incl
or
test
das
ljmp
les
xchg
iret
sbb
push
imul
mov
test
aaa
push
xchg
inc
mov
ljmp
jno
pop
arpl
lcall
xor
ljmp
adc
or
cmp
jmp
inc
mov
dec
out
pop
in
or
mov
mov
into
mov
sbb
clc
sbb
cld
pusha
xchg
adc
push
jbe
sti
addb
add
pop
sbb
clc
fwait
xor
pop
pop
push
test
xchg
jmp
jns
shlb
hlt
lret
xor
or
xchg
pop
dec
xchg
push
jne
push
jae
mov
orl
inc
aad
inc
lret
or
sbb
adc
push
aaa
push
adc
jecxz
enter
sub
push
push
push
clc
adc
repz
push
xor
movsb
icebp
fidivl
mov
fistl
push
mov
and
jo
add
rcll
pop
scas
fisubs
nop
enter
enter
mov
pusha
jge
push
xchg
ret
fs
jmp
call
xchg
subl
je
testb
adc
call
push
sbbb
jb
and
ror
in
add
mov
roll
fwait
xchg
mov
sub
hlt
and
cmpsl
adc
test
mov
fs
sub
inc
int3
sbb
dec
aas
inc
mov
and
push
xor
out
mov
setge
sbb
push
cmpsl
fistpll
push
pusha
adc
jp
idivb
cld
ret
outsb
mov
lea
mov
into
xor
popa
mov
mov
sub
xchg
mov
stos
adc
outsb
mov
lret
mov
sub
jecxz
popa
shrb
sbb
sahf
push
lret
lea
and
imul
mov
lret
inc
jno
pusha
lods
add
mov
mov
sbb
xchg
icebp
mov
outsb
loope
shrb
rcl
imul
jne
aam
cmp
and
mov
loope
movsl
dec
mov
jl
movsb
cmpsl
cwtl
pop
xor
jp
jae
fiadds
or
xor
scas
mov
ret
or
aaa
push
xchg
xchg
lret
jge
push
je
call
and
dec
and
cmp
lret
dec
aaa
insl
and
repnz
mov
xchg
jno
insl
jg
pop
push
adc
mov
mov
movsl
xchg
in
push
inc
push
mov
fwait
loop
mov
dec
push
and
in
addr16
int3
lds
cwtl
xlat
daa
jns
shll
inc
sub
dec
out
inc
imul
pop
xor
adc
cmp
sbb
int3
lods
daa
ljmp
adc
iret
xor
xor
jl
pushf
subb
xor
pop
mov
dec
das
add
mov
lcall
xorb
xchg
jb
in
dec
push
sbb
fmul
movsl
or
aaa
addr16
out
xchg
and
inc
jp
repz
jae
hlt
imul
dec
mov
scas
in
xchg
jno
push
sub
shrl
mov
repnz
outsl
inc
xchg
sub
jno
pop
test
arpl
xchg
mov
or
popa
jmp
lahf
dec
stos
enter
fidivrs
imull
jns
and
sbb
adc
push
in
dec
out
ds
in
lahf
jle
aas
and
inc
test
cmpsb
lcall
inc
jbe
stc
dec
in
xchg
jl
sbb
or
out
fld
sub
mov
mov
push
into
sub
cltd
js
mov
int
inc
in
sub
add
ret
push
pop
jmp
addr16
inc
inc
add
pop
popl
inc
add
and
ljmp
jno
addl
ja
xchg
nop
sub
mov
test
cmpsl
adc
int3
push
cli
add
adc
jns
fnstsw
sbbl
loope
push
gs
cltd
add
les
sub
or
imul
repz
incl
outsb
out
and
xor
sub
xor
scas
sub
xor
daa
mov
xchg
sahf
inc
test
dec
and
popf
xlat
shl
icebp
sub
out
mov
lcall
fisubrl
xchg
scas
adc
loopne
int3
lcall
mov
pusha
push
into
dec
jnp
repz
mov
stc
adc
pop
mov
iret
icebp
mov
fcoms
inc
sbb
mov
repz
and
mov
add
pop
lret
fstps
subb
and
lret
jno
mov
pop
outsb
cmp
jle
and
xchg
rcrl
push
mov
xchg
ljmp
vmwrite
icebp
ds
ja
lret
repz
dec
cwtl
xor
inc
lret
and
mov
imul
mov
inc
jnp
or
pop
mov
or
aad
jbe
leave
lods
cmp
mov
stos
fs
test
sub
xchg
mov
cmp
or
icebp
pop
dec
sahf
test
mov
call
in
add
movsb
test
xchg
lock
lret
pop
nop
rclb
sbb
aad
inc
std
jp
mov
pop
mov
lds
xchg
or
stc
or
gs
lret
notl
add
pop
sub
and
dec
and
mov
pop
aaa
pop
push
call
push
in
dec
outsl
ret
and
shll
xchg
or
sbb
xchg
in
fisttps
adc
adc
dec
or
mov
push
pushf
cltd
lods
scas
add
cmpsl
jecxz
outsl
stc
inc
out
mov
add
inc
aaa
movb
mov
and
xor
jmp
lods
xchg
clc
mov
idivl
mov
shrb
cmp
jl
jno
and
mov
lea
fwait
rolb
push
hlt
aaa
test
or
add
add
int
nop
or
jg
jp
fs
pusha
scas
dec
and
ljmp
pop
lds
aam
in
mov
xchg
aad
fisubrs
xchg
stos
test
loop
enter
inc
jmp
fisubl
sbb
sbb
int
adc
dec
in
xchg
add
out
or
sub
das
cmp
stos
xchg
mov
sub
push
das
fdivrp
sub
sbb
push
xchg
pop
push
xor
pop
mov
mov
les
sbb
dec
push
scas
mov
cltd
lock
aas
lock
cmp
dec
mov
push
push
or
mov
jbe
mov
out
in
sub
shl
inc
xchg
outsl
pop
mov
rcr
push
mov
mov
jae
out
mov
mov
les
mov
clc
lods
sub
xchg
inc
in
push
or
and
sub
je
mov
jne
and
xchg
aaa
dec
inc
xor
mov
push
xchg
ret
inc
repnz
subb
stos
ss
ss
sub
hlt
jb
mov
pop
std
iret
jnp
pop
les
aad
dec
hlt
xchg
in
push
popf
lret
hlt
jno
out
pop
outsb
add
lds
cmp
mov
ds
xor
addr16
push
inc
push
jne
xchg
sbb
push
ljmp
aad
jle
push
test
fdivs
rcll
into
dec
fs
xchg
jb
adc
nop
test
les
mov
add
cmp
out
icebp
cmp
xor
out
ffreep
or
bound
mov
fdivp
mov
xorl
ret
outsb
cld
fistps
xlat
stos
adc
lret
aaa
adc
add
jl
lcall
or
dec
out
jp
xor
dec
ss
test
addl
sbb
pop
xor
je
sbb
and
inc
ljmp
xchg
pushf
repnz
cli
and
js
incl
scas
movl
es
loop
cmp
fadds
push
popw
arpl
xchg
lods
xchg
movsb
adc
cli
stos
js
dec
movl
pop
push
and
icebp
push
lds
jb
arpl
add
in
inc
insb
addr16
test
cmp
leave
sbb
xchg
hlt
dec
dec
and
ror
jge
cmp
jns
add
xchg
adc
shrd
pusha
lds
cmp
fidivrl
int
popa
push
push
cmc
loop
xor
insl
aam
fsubs
push
xchg
xchg
add
push
stos
lret
push
fs
push
sub
scas
pop
ljmp
repnz
mov
enter
push
cmp
mov
jbe
std
push
or
mov
jecxz
mov
into
popa
pop
and
pop
negl
loop
out
inc
mov
mov
lds
aaa
inc
inc
push
ds
xor
cmp
addr16
dec
popa
mov
mov
imul
ret
jge
jmp
inc
push
dec
mov
fisttpl
mov
sbb
add
test
push
add
gs
mov
jbe
mov
shll
sub
clc
cmp
fwait
loopne
jg
jnp
out
mov
daa
ds
shrl
and
addr16
ljmp
nop
sub
or
jno
divb
test
dec
or
movsl
adc
add
xchg
cltd
mov
addr16
testl
imul
clc
inc
je
scas
xchg
insl
cmp
scas
and
xor
adc
and
daa
cltd
xchg
out
mov
pop
cmp
mov
data16
arpl
stos
jg
pop
inc
sbb
jg
jne
adc
lret
insl
jae
mov
pcmpeqw
pop
pop
iret
pop
js
cmp
pop
push
lcall
and
dec
sbb
pop
arpl
xchg
lds
pop
mov
mov
ficompl
dec
fnsave
lods
inc
ja
into
cmc
cli
addr16
ss
mov
or
add
adc
sub
xchg
adc
cmp
pop
push
cmpsl
movsl
pop
or
jo
push
clc
adc
adc
pop
pop
adc
mov
adc
div
sar
daa
dec
mov
cmpsb
xor
in
mov
push
push
pusha
xchg
je
push
pop
lahf
cmc
mov
dec
dec
lahf
fwait
int3
idivb
mov
inc
jp
jb
hlt
scas
or
jns
jge
jg
addb
and
outsl
shlb
repz
xchg
test
hlt
xchg
negl
and
addr16
or
daa
xchg
add
inc
mov
ja
push
rcrl
sub
bound
pop
pop
cmp
push
push
les
sar
pop
mov
adc
rolb
push
loopne
outsl
cli
sub
pusha
push
or
push
test
push
out
mov
mov
sub
sbb
add
and
or
xchg
or
gs
nopl
jae
mov
hlt
mov
call
test
or
out
mov
mov
lock
mov
dec
scas
push
fs
dec
push
jl
xor
cmp
add
movsb
mov
aam
aaa
aas
or
xlat
xchg
sub
repz
test
rcll
lcall
bnd
aas
or
jle
cmc
adc
inc
fldt
add
mov
shl
pop
cmp
loopne
test
or
jmp
movsb
mov
push
arpl
je
loope
mov
jl
mov
mov
mov
sub
mov
add
xchg
mov
popf
add
inc
xor
mov
and
cmp
add
bound
sbb
repnz
ljmp
scas
sbb
push
not
add
sub
cltd
rcl
mov
cmpsb
dec
push
test
daa
sbb
lahf
sti
imul
gs
lcall
xor
fiaddl
std
mov
fisttpll
mov
cs
getsec
mov
xor
adc
mov
mov
in
mov
mov
scas
mov
dec
pop
fcomps
or
std
into
jl
outsb
lcall
in
and
pop
jmp
mov
out
or
mov
jecxz
jmp
pop
lcall
and
adc
in
xchg
jnp
lea
jecxz
mov
pop
sub
hlt
leave
daa
mov
push
jno
loop
sbb
fmulp
imul
xor
cmp
or
pop
sbb
into
inc
out
lret
test
add
mov
pop
push
push
outsb
jo
iret
in
out
clc
in
pop
cmp
mov
aam
sahf
enter
add
and
pcmpgtw
je
fdivrl
dec
adc
shrb
pop
lock
xchg
ss
movsl
sub
addl
sub
jo
sahf
jmp
and
sbb
xchg
js
mov
jo
enter
movsl
add
xor
sbb
adc
lahf
sahf
aaa
lock
rcr
jecxz
xchg
dec
mov
adc
inc
and
adc
repnz
into
ss
mov
dec
push
mov
or
push
xor
lds
jae
sub
xlat
int3
clc
xor
adc
xor
push
jge
add
cmp
adc
in
xchg
mov
popa
imul
and
mov
enter
loope
adc
fwait
push
imul
notl
loope
andnps
cmpl
sub
test
daa
shlb
or
cmp
shl
jb
push
fdivrs
popf
lret
cwtl
mov
out
jp
mov
daa
sti
repnz
insb
mov
jns
jl
xchg
jle
pop
pusha
inc
gs
inc
out
insb
jmp
mov
sbb
push
xchg
test
push
mov
adc
xchg
xchg
dec
fcoml
mov
xchg
and
cmp
push
pop
fcmovnu
sub
mov
aad
fyl2xp1
insl
jo
mov
fdivrl
and
sub
hlt
and
sub
cld
sub
stos
fldcw
mov
ret
insl
cmp
jb
sbb
decb
call
push
xor
popa
int
cmp
orb
test
scas
and
rclb
aas
xor
adc
sti
add
int
mov
push
sbb
inc
sbb
mov
xchg
leave
push
icebp
movsl
in
inc
add
nop
mov
fiaddl
in
jnp
mov
jno
jge
add
pop
xchg
cmp
mov
lcall
aad
mov
into
sbb
cs
cld
stc
mull
dec
lret
xor
aam
aad
aad
xor
loope
mov
call
lea
jge
adc
lods
enter
pop
push
test
and
fucomip
push
sub
adc
int3
pop
sbb
fs
lcall
icebp
adc
inc
jno
aas
push
and
cmpl
fldcw
addr16
icebp
ljmp
pop
or
loope
testb
das
mov
cld
idivb
fmull
dec
popa
push
test
ret
inc
out
pop
sub
push
out
inc
pushf
or
cmc
xor
adc
fbld
xor
pop
cmpsl
mov
mov
ljmp
dec
jo
ds
jne
mov
ret
sbbb
push
jmp
xchg
les
mov
aad
add
cmp
xor
pop
sbbb
aas
daa
in
popf
pop
or
aaa
stos
jns
lods
shrb
adc
jne
roll
xlat
loope
mov
lock
hlt
inc
cmp
arpl
push
sub
loopne
psubsw
sbb
cmp
cmpsb
icebp
lcall
sti
scas
cmp
fdivr
clc
xor
movsb
dec
cmpsl
mov
mov
push
movsb
adc
cmc
test
shufps
xor
xchg
mov
dec
out
adc
pop
inc
sbb
icebp
repnz
adc
and
push
shlb
in
xchg
dec
insl
iret
mov
imul
fldl
mov
loopne
push
cmpsl
push
mov
ljmp
ficoml
mov
sub
mov
in
loopne
dec
jo
fbstp
dec
adc
sbb
out
mov
mov
loope
adc
ljmp
test
cmpsb
testl
sub
in
or
push
gs
jbe
xchg
popa
adc
in
movsl
pop
xchg
fs
add
xor
jecxz
and
shl
mov
in
or
std
xchg
lea
mov
jecxz
outsl
adc
stc
add
inc
jbe
xchg
int3
and
sti
mov
cmc
xchg
sub
dec
enter
clc
fsubrl
push
push
jp
movsl
int3
pop
add
cmpsb
jle
cmpb
cmp
sbb
add
cli
xchg
insb
icebp
inc
jbe
sub
aaa
xor
fwait
lcall
insb
jns
mov
adc
sbb
stc
cs
rcl
pop
mov
fiaddl
or
fwait
push
cmp
movsb
sub
lcall
push
imul
fwait
je
mov
adc
or
pusha
test
leave
mov
adc
ret
xchg
call
or
andl
ds
rcrl
daa
mov
outsl
daa
cmpsb
inc
in
or
out
pop
repnz
in
push
ret
out
cmp
icebp
pop
adc
psubq
cmpsl
pop
lahf
sub
add
cmp
aad
push
or
dec
jne
jo
test
clc
jne
ds
sub
fiadds
lcallw
jg
xor
inc
cmpsl
xchg
jns
jmp
pop
cmpl
lret
test
outsb
jg
lods
jne
sub
mov
mov
ljmp
in
adcb
inc
clc
enter
sub
sbb
fs
sbb
xchg
insb
jnp
xor
inc
jg
mov
jle
mov
cli
sbb
repnz
push
pop
mov
xor
or
sbb
mov
sti
mov
fnstenv
xchg
and
mov
ret
push
push
add
xlat
sti
ret
or
mov
lods
jo
xchg
cli
dec
push
pop
jmp
lcall
jae
and
jno
push
xor
mov
std
mov
ds
push
stc
adc
jne
out
mov
sub
imul
sub
cmp
push
inc
testl
push
or
inc
sbb
jb
dec
insb
dec
sub
into
test
out
cmp
lods
and
dec
shll
jge
repz
mov
push
or
sbb
add
ljmp
pushf
mov
rorb
push
mov
out
mov
add
fstps
push
popa
sub
nop
push
push
push
testl
mov
dec
push
push
push
push
in
xchg
lahf
push
push
xchg
lods
pop
stos
mov
pop
jne
fldl
jmp
cmp
rcrl
repz
mov
cmp
stos
pop
leave
mov
sbb
sub
or
dec
pop
inc
or
ror
leave
and
push
cmp
push
ror
sub
movl
sub
dec
es
jle
push
push
mov
adc
mov
xchg
insb
daa
out
mov
lret
test
dec
aad
mov
xor
mov
xor
cmp
outsb
pop
rol
sarl
pop
fnstsw
test
imul
ds
test
scas
inc
fidivs
add
into
test
sbb
cltd
lods
sub
mov
sbb
cmp
push
push
inc
xor
lcall
pop
jge
out
and
aas
pop
inc
movsl
mov
push
aad
mov
jae
lret
dec
das
into
cltd
mov
lea
sbb
dec
pop
mov
mulb
push
pop
mov
mov
les
jbe
lods
test
ret
test
imull
aaa
stos
out
xlat
jmp
ret
xor
or
jb
push
or
scas
xor
dec
add
ret
add
negb
push
aam
jp
jno
cmp
mov
sub
enter
adc
test
das
sub
cmpsb
mov
scas
cmp
jno
incb
cwtl
dec
xchg
shll
movsl
cmpsb
call
and
in
push
fsubp
stos
mov
sub
add
ds
outsl
add
aam
ss
mov
sub
icebp
and
jl
jecxz
ret
loope
pop
xor
imul
movl
addb
sub
aad
dec
ds
testb
jns
jo
add
aam
shrl
jo
stos
in
out
xchg
testb
lahf
pop
adc
shrb
push
dec
imull
jl
hlt
mov
test
mov
out
orb
mov
dec
mov
test
fs
cld
mov
xchg
icebp
xchg
mov
testl
sbb
jg
mov
mov
pop
stos
insl
icebp
pushf
jecxz
ret
adc
out
fdivrs
loopne
push
push
xchg
push
adc
das
js
inc
xchg
loope
les
inc
sub
cmpsb
cltd
fs
mov
jbe
les
mov
outsb
les
call
push
negb
ja
out
fstpl
in
addr16
popa
pop
mov
mov
movsl
roll
ror
pushf
notb
cmp
inc
dec
and
xchg
push
movsb
push
insl
sub
repz
in
out
lea
int
rcll
sub
pop
cmpsb
aam
popf
mov
mov
push
and
xor
icebp
xchg
xchg
push
aam
adc
ljmp
movsb
jmp
jno
addr16
push
cmpsb
mov
inc
xor
push
xor
xor
je
rorb
or
xchg
sub
cmp
and
xchg
pop
cmp
int3
sbb
jmp
cmpsl
mov
fisttpl
or
arpl
clc
inc
dec
push
mov
mov
and
mov
mov
xchg
outsb
sub
jmp
lods
sbb
pop
cmp
adc
les
ljmp
insb
jmp
sub
pop
add
jle
add
inc
xchg
xor
in
adc
inc
adc
scas
mov
mov
lds
imul
and
mov
imul
lret
or
sbb
mov
cwtl
cmpsb
mov
rcl
xchg
fwait
mov
ret
or
inc
ficomps
sbb
xchg
push
cmpsb
xor
subb
jne
dec
test
jbe
int
fs
es
or
push
fs
inc
sub
push
loope
out
add
mov
adc
push
cmp
push
and
sub
add
xchg
cltd
xchg
nop
pop
iret
stos
aam
das
xor
ljmp
push
or
mov
mov
call
xchg
imul
jae
push
sbb
adc
clc
jp
pop
mov
xchg
addr16
js
xchg
push
sub
xor
notl
inc
xor
mov
mov
push
test
add
test
push
mov
jno
xchg
test
mov
cmp
and
xor
mov
inc
cwtl
sub
push
out
bound
shll
ds
ret
outsl
sub
sbbb
jle
test
outsl
test
dec
outsl
sub
jae
push
mov
data16
mov
and
pop
repz
movsb
insl
dec
mov
dec
jo
lcall
mov
cmp
popa
sbb
in
add
dec
push
push
scas
mov
or
dec
cmp
arpl
mov
in
mov
pop
push
xor
adc
push
fdivr
imul
gs
adc
bound
adc
sbb
push
and
sbb
pop
cmp
rcrb
cmp
into
mov
daa
fistps
cmpsl
jle
pop
mov
int
outsl
movsb
mov
xlat
inc
lods
jmp
mov
sbb
sbb
lret
ljmp
rcrb
cmp
int3
mov
lcall
movsl
xchg
out
in
shl
out
neg
sub
inc
lds
jae
push
loop
or
inc
pop
pop
ja
push
jno
dec
push
mov
into
inc
insb
aad
pop
push
inc
pushf
and
shr
sub
xor
in
mov
adc
xor
arpl
cmpsl
pop
inc
xor
mov
insb
popf
outsl
dec
mov
bound
fidivs
fsubrs
shll
adc
test
or
pop
and
pop
and
push
mov
xor
and
fs
jno
test
add
push
js
outsb
aaa
xchg
jno
enter
in
je
shlw
je
cmc
dec
xchg
sbb
push
cltd
mov
push
in
ss
push
in
mov
pushf
adc
nop
jnp
cmp
movsl
and
outsl
neg
cli
push
mov
pop
push
out
cltd
iret
jbe
outsb
mov
jp
repnz
repz
daa
jo
or
lds
pushf
imul
jae
rorb
mov
out
movsb
int3
shr
fcmovne
inc
cmp
jle
sbb
xor
pop
test
fdivrs
js
and
hlt
int
sbb
test
and
inc
inc
std
mov
jge
loopne
add
rclb
mov
lcall
inc
ds
ret
jge
push
mov
jns
stos
pop
sti
adc
out
inc
arpl
sub
jge
cmp
inc
popf
shll
jge
shlb
rclb
mov
dec
mov
aaa
jle
int
or
dec
or
in
dec
adc
pop
cmp
outsl
inc
cmp
jp,pt
mov
inc
mov
sbb
ficoms
fcoms
push
popf
push
stos
mov
scas
shrl
push
sub
push
pushl
cltd
leave
add
dec
push
iret
popf
movb
mov
adc
adc
addr16
std
lods
xchg
insl
cltd
imul
xchg
pop
ss
sub
popf
inc
push
movsb
lahf
push
add
repz
add
adc
sub
or
in
pushf
stos
xor
inc
mov
pop
in
cmc
cmp
cltd
jbe
adc
jg
pushw
xorl
adc
adc
outsl
and
jge
jmp
outsl
mov
cmp
adc
imul
ljmp
xchg
les
scas
das
in
jo
inc
adc
xchg
xchg
add
mov
xor
push
inc
fsubs
idiv
mov
mov
dec
andl
jecxz
jge
clc
jo
loope
popf
ljmp
sbb
fmuls
pop
dec
mov
xor
fimuls
repz
add
adc
and
rcl
mov
adc
push
and
fildll
push
xchg
outsl
cwtl
or
add
outsl
nopl
xchg
stos
nop
push
sub
and
sub
shll
js
push
ret
pop
sbb
push
fimull
mov
ret
ficomps
das
push
data16
pop
or
mov
jno
movhps
int
xchg
inc
and
cmp
nop
icebp
push
jbe
cmp
ficoml
popf
pop
inc
test
daa
mov
jle
scas
xchg
pop
cli
xchg
cli
push
jns
sub
movsl
adc
repz
jb
pop
add
sbb
imul
cmpsl
push
aam
pushf
test
repz
mov
push
bndldx
ja
jle
outsl
enter
xchg
mov
pop
inc
jno
xchg
inc
mov
ja
jo
push
jge
dec
js
xchg
jmp
pop
or
in
pusha
cmp
dec
cmp
test
jmp
mov
out
ret
fsts
mov
arpl
in
imul
outsb
lret
push
sub
cwtl
out
popa
scas
dec
cmp
iret
test
xchg
out
cmp
and
mov
stos
int
pop
sub
lahf
sub
lahf
out
out
loop
jo
sbb
outsl
pusha
movsb
push
push
and
fucomp
cmp
mov
or
inc
dec
mov
jg
imul
xor
cmpsb
jb
cmp
cltd
mov
adc
mov
cmp
dec
jae
mov
ret
mov
xor
and
dec
scas
and
mov
dec
adc
icebp
pop
dec
fsubrl
xor
fidivs
inc
pop
cmp
stos
jb
cwtl
lods
cmc
rcr
sbb
jl
loop
cmpsl
fwait
or
enter
out
add
adc
push
inc
mov
scas
xchg
mov
arpl
dec
ss
roll
ret
fstpt
inc
shll
rcrb
ud1
push
mov
imul
in
inc
in
dec
xchg
in
push
xor
or
adc
fstl
stos
sub
push
rorb
cmpsl
xchg
xchg
sub
ja
fadds
adc
xchg
add
sahf
inc
lock
cmp
mov
outsl
lcall
mov
jae
cmpsb
fiadds
mov
loopne
xchg
fldt
rol
lds
cs
fildl
lock
pop
lods
pushf
cs
movsb
xchg
cmp
pop
call
inc
test
push
fiadds
popa
sub
and
lcall
out
loop
fbld
incb
test
push
fmull
mov
sahf
jp
xchg
xchg
gs
ret
gs
cmp
ret
jns
sarb
and
int
adc
mov
cmp
ret
cmp
sub
xchg
mov
sub
orb
jge
out
push
pop
xchg
in
iret
cmp
out
lods
loope
rcr
les
jns
or
jae
sbbb
sub
or
scas
cmp
movsb
aaa
mov
in
push
sahf
repz
jns
xchg
cld
jno
mov
repnz
addr16
imul
lods
lods
xchg
or
outsl
push
xchg
xor
dec
mov
sub
adc
xchg
outsb
sub
jg
mov
dec
std
mov
sub
jp
jnp
push
out
stc
inc
dec
mov
sbb
addr16
pop
jl
in
mov
inc
je
loopne
addr16
inc
pop
cmp
out
stos
jno
mov
dec
inc
repz
jo
and
mov
xchg
jb
xor
mov
cwtl
lock
pop
pop
xor
inc
adc
mov
lock
sub
fsubrs
push
dec
mov
daa
push
fdivp
testl
mov
sub
cld
adc
pop
in
pusha
fldt
jnp
mov
cmp
dec
xor
or
xchg
push
pop
nop
clc
out
nop
insb
pop
insl
int3
imul
push
cmp
aam
bound
xchg
mov
repz
jg
sbb
adc
inc
push
in
jl
mov
mov
pop
ss
sahf
cli
cmpsb
ljmp
mov
xor
les
add
mov
add
mov
insb
or
adc
jbe
pop
dec
negl
add
cmp
jmp
mov
xchg
mov
push
fmuls
jmp
or
outsb
lds
add
mov
push
lea
loope,pn
xchg
push
push
in
jb
dec
jno
push
sub
add
cld
xchg
ds
inc
repz
in
aad
push
mov
mov
dec
mov
call
loope
xchg
jbe
mov
shrl
nop
nop
xchg
push
push
dec
pop
lods
adc
je
and
aam
imul
mov
mov
clc
and
in
jb
mov
loope
mov
out
movsb
sub
inc
dec
add
divl
flds
fnstsw
mov
push
outsb
sbb
push
push
notb
dec
inc
scas
shl
imul
cmp
cmc
sar
insb
cmp
fisubrs
pop
mov
mov
inc
insl
movsl
icebp
jnp
test
test
push
mov
push
ja
mov
add
xchg
sar
inc
mov
and
push
or
repz
addr16
push
daa
mov
inc
jno
jb
and
push
pop
jecxz
pop
dec
jmp
lcall
lahf
call
xchg
mov
push
data16
cltd
xchg
mov
ljmp
and
dec
pop
es
in
bound
out
clc
test
xor
cltd
frstor
mov
jge
jns
inc
stos
in
cmc
pop
lcall
loop
xchg
and
sarl
test
loopne
lahf
mov
xchg
in
pusha
xlat
outsb
xchg
mov
mov
jg
decl
pushf
or
popf
or
inc
add
mov
fucomip
scas
imul
repz
mov
inc
gs
lcall
add
ljmp
pop
addr16
repz
divb
add
loopne
jle
mov
rolb
jmp
xor
loopne
dec
jns
idiv
test
mov
lds
mov
push
pop
mov
ljmp
leave
enter
outsb
pop
jno
or
sbbb
inc
and
lcall
lcall
sub
aas
add
xchg
and
jp
mov
or
xchg
das
cmp
add
ret
mov
jmp
pop
mov
punpckhwd
cmpsb
mov
ret
jno
dec
xchg
es
es
sub
cmp
ret
out
lcall
pop
add
dec
movsb
testl
mov
int
inc
out
cltd
scas
repnz
pusha
loopne
repz
xor
outsl
inc
xor
dec
xchg
popa
and
movsl
pop
jae
push
icebp
nop
jbe
icebp
movsb
mov
sub
pusha
dec
ss
lret
ja
add
mov
ljmp
add
stc
cwtl
test
cmpsb
adc
lret
fimuls
push
dec
inc
cs
inc
xor
xchg
cmp
incb
ss
xor
fidivrl
arpl
and
push
pushf
mov
aad
test
cmp
je
jecxz
or
lock
ja
pop
cmp
push
and
xlat
jbe
sub
and
imul
sub
addr16
inc
imul
cli
mov
fcoml
push
rorl
sti
mov
notl
jo
stc
push
fsubs
adc
pop
sub
scas
sub
filds
movsb
jecxz
mov
xchg
sbb
cltd
roll
pop
sub
js
mov
enter
movsl
add
ljmp
data16
sbbb
outsl
decb
sti
or
mov
cld
jno
jl
sub
fnsave
add
bound
sbb
lea
xor
in
jge
int3
insl
icebp
jp
mov
push
in
add
add
pop
xchg
icebp
ja
pop
mov
lods
cs
jmp
or
push
lret
add
in
in
mov
cmp
xlat
jmp
push
sbb
test
inc
or
jge
ja
add
add
inc
lahf
aam
bound
xchg
rcll
sub
sahf
jl
inc
orl
dec
lahf
test
bound
inc
jae
xchg
pop
les
adc
sub
cmp
inc
scas
adc
ret
xchg
and
pop
xchg
lock
cmp
mov
inc
daa
out
js
push
and
jp
adc
mov
dec
imull
jo
mov
callw
shrb
mov
cmp
jle
push
cld
in
xchg
scas
adcl
pop
mulb
push
push
sbb
jb
bound
pop
enter
outsl
pop
fs
test
out
push
ja
mov
ljmp
cmp
mov
mov
mov
lock
sbb
js
xchg
and
call
sbb
outsb
lock
arpl
mov
ret
shll
inc
insl
lods
jp
mov
mov
adc
mov
mov
jmp
aad
lahf
xchg
mov
dec
repnz
mov
cwtl
outsl
das
push
pop
pop
sub
orb
push
into
cmp
in
pop
lcall
fyl2xp1
or
xlat
jb
mov
and
or
sbb
aad
andb
mov
jo
mov
mov
std
adc
sbb
out
insb
lock
jae
loope
ret
pop
mov
lods
mov
rcll
xor
xchg
push
dec
inc
ret
rclb
cmp
pop
stc
adc
mov
shll
add
ret
xor
std
rorl
adc
leave
lods
leave
add
cltd
and
dec
push
jmp
repnz
out
cmp
mov
shrl
inc
pop
movsb
mov
xchg
push
in
mov
mov
inc
pusha
loop
lcall
inc
loope
jge
mov
scas
and
push
xor
cmpsb
scas
inc
mov
insb
push
xor
mov
add
imul
push
push
sbb
push
dec
ja
jb
adc
sub
jns
rcrb
and
ljmp
loopne
jbe
ficompl
in
or
pusha
sahf
cmpsb
add
or
mov
addb
lahf
mov
adc
mov
pushw
fmulp
fcmovu
hlt
adc
xor
js
xchg
inc
xchg
fwait
popf
xchg
sbb
sub
mov
das
ljmp
mov
or
lods
push
xor
cwtl
out
daa
cmp
clc
add
mov
out
pop
divb
js
pop
jmp
or
decl
jmp
aaa
push
fdivrl
loopne
mov
pop
mov
cwtl
xchg
xchg
fidivs
cmp
push
mov
dec
ja
dec
dec
jecxz
mov
arpl
enter
lods
popa
jbe
and
fmuls
inc
das
cmpsb
and
popf
mov
mov
or
mul
mov
adc
or
sbb
mov
popf
push
jno
leave
or
push
inc
in
fstpt
rorl
mov
es
and
and
mov
pop
movsl
mov
pop
dec
mov
sub
es
xchg
jp
int3
aaa
repnz
dec
pop
mov
repz
cmp
in
xchg
cmp
movzwl
addr16
cmpsb
push
xlat
cmpb
dec
pop
add
sbb
insl
jno
fnstcw
xor
pop
mov
or
inc
dec
insl
jae
lahf
leave
pop
out
jge
fildll
mov
clc
push
dec
sahf
jb
xchg
cmp
xchg
xor
in
cs
sub
inc
test
xchg
cmp
in
pop
test
or
into
cmpsb
and
fisttpll
mov
mov
int
fsubr
push
loop
mov
lahf
xchg
popa
mov
mov
in
loope
jae
push
cltd
dec
dec
jns
imulb
scas
sbb
jge
sub
pop
add
push
inc
into
scas
faddl
mov
adc
xchg
mov
negl
pop
jne
in
icebp
daa
inc
jno
shlb
inc
mov
insl
sbb
mov
mov
dec
pusha
cmp
ss
mov
jge
sbb
mov
je
push
jbe
ja
aaa
mov
insw
mov
push
pop
int3
roll
sbb
cmp
mov
push
andl
cmp
ss
and
mov
inc
push
sub
push
sbb
inc
dec
frstor
dec
cs
iret
xor
fidivrl
pop
xor
lock
loopne
adc
out
cmp
jecxz
hlt
bnd
cmp
adc
fs
mov
jns
rorl
ret
mov
divl
mov
in
ret
enter
aad
stc
jbe
in
bound
mov
imul
aad
sub
rolb
sub
or
mov
mov
bound
jne
push
pop
aam
popf
lcall
push
xchg
inc
shll
ja
and
mov
mov
lret
dec
or
xchg
push
cmpsl
cmpsl
test
outsl
into
stos
xchg
xchg
das
pusha
lods
adc
aas
nop
rcr
mov
sub
push
mov
or
ss
xchg
sub
outsl
lahf
cmp
dec
lcall
push
lahf
pushf
push
mov
stc
cmc
add
leave
cmovge
sar
add
or
les
or
inc
mov
mov
jns
mov
aaa
mov
mov
lds
fmull
mull
or
add
fdivl
xor
and
adc
lret
xor
or
adc
lock
push
pop
mov
push
testb
add
je
xchg
fldt
cmpsb
or
nop
push
cmp
push
mov
push
out
pop
mov
test
sarl
sbb
pusha
xor
jbe
es
jb
lret
cli
test
mov
call
xchg
adc
push
dec
fdivrs
sahf
loopne
xchg
bound
add
aas
pusha
inc
add
lea
sbb
sbb
and
js
push
ss
push
and
les
add
test
sub
and
sbb
dec
mov
jnp
and
test
outsl
mov
push
add
push
xlat
mov
bound
insl
testb
test
xor
rcll
sbb
add
push
ja
mov
out
mov
cmp
xor
jmp
fildl
pop
inc
movsb
push
push
sarl
lods
xor
call
and
xchg
incb
adc
shr
lret
mov
xor
add
jo
test
dec
xor
mov
decb
or
mov
pop
idivl
movsb
in
jmp
or
sub
sbb
call
and
dec
sbb
mov
xchg
pop
lods
insl
push
aad
test
pop
adc
sub
aad
aam
mov
mov
int3
add
mov
push
int
inc
mov
jg
push
sub
sub
test
inc
movaps
iret
ljmp
mov
data16
ret
fldl
insl
cmpsb
dec
mov
push
dec
xchg
icebp
add
xchg
mov
in
popf
cltd
push
out
inc
inc
add
jecxz
mov
xchg
setge
stos
shrl
push
xor
dec
push
sub
add
repz
fld
icebp
adc
test
add
pop
in
push
pop
mov
push
shll
mov
xor
push
push
pop
test
mov
fidivrl
cmp
xor
xlat
mov
fs
idiv
push
leave
shl
mov
lock
cmpsb
mov
or
jno
pushf
add
xor
xor
adc
jb
xchg
loope
hlt
loope
inc
mov
inc
xchg
xor
sub
inc
add
mov
mov
jle
mov
ror
xchg
stos
xchg
cmpsb
pop
repz
les
mov
xchg
addl
jnp
sub
jnp
lods
dec
cmp
cwtl
and
inc
lods
mov
sarl
das
push
xchg
lret
or
jecxz,pt
lds
jae
sub
push
fcompl
adc
pop
xchg
dec
push
aaa
lret
mov
sti
loop
icebp
popa
std
push
lret
sbb
pop
repz
inc
inc
sub
mov
jge
clc
test
pushf
sbb
jb
mov
mov
push
and
cmpsl
cmpl
mov
fdivrl
repz
fidivl
fbld
dec
lahf
and
shll
push
repz
mov
xchg
icebp
xchg
movsl
sbb
hlt
idiv
sub
add
push
inc
xor
scas
xchg
dec
push
insb
mov
sub
sub
and
mov
pop
xchg
js
jle
lock
dec
push
xor
pop
push
mov
jno
sti
add
out
fidivs
aaa
leave
pop
sub
es
fisttps
push
cmp
adc
mov
fcomi
es
incl
aad
test
ret
or
int
scas
inc
adc
sub
pop
or
stos
xchg
add
xor
ret
pop
lahf
call
inc
scas
fsub
insb
rclb
add
push
test
js
jne
scas
mov
daa
cmpsb
bound
pop
aas
and
sbb
cmp
imul
rcll
fwait
pop
mov
or
inc
rolb
mov
pop
je
and
lret
shlb
mov
cltd
cmovg
adc
pushf
mov
divb
mov
mov
push
and
stos
dec
mov
sbb
pop
mov
sbb
cmp
push
pop
test
xchg
sbb
insb
insb
nop
pop
lds
jg
in
xor
mov
mov
aam
mov
lds
faddl
jge
cmc
push
jb
or
aaa
and
ja
fidivs
pushf
jb
iret
jnp
pop
ljmp
sbb
fisttpl
mov
xor
sbb
cmpb
pusha
xchg
aaa
inc
jmp
movsl
jo
jbe
add
loop
jge
int
in
pushf
mov
jo
int
negb
out
ss
pop
stos
in
rcrl
mov
mov
into
jmp
push
adc
popl
ja
shr
sbb
adc
cmp
mov
insb
or
mov
push
cmp
in
aaa
pushf
inc
cmc
es
mov
repnz
sub
inc
movsl
xor
movsl
pop
arpl
repnz
lret
dec
enter
inc
inc
xlat
xchg
mov
sub
cmp
in
mov
adcb
test
inc
inc
out
rcrl
and
jbe
cmp
xor
cld
inc
jl
aam
inc
adc
es
xchg
jmp
pop
dec
loop
vpsllvq
mov
scas
enter
icebp
jo
xchg
sbb
pop
dec
or
insl
sbb
daa
imul
in
repnz
shll
fucomp
ret
pop
xorb
add
lcall
popa
cmpl
or
out
xor
aas
mov
jnp,pt
shll
xchg
mov
hlt
or
jmp
push
xchg
cmpsb
add
or
or
clc
dec
hlt
jl
hlt
lret
test
xchg
sbb
fsubrs
xchg
pusha
stos
jne
mov
inc
cltd
or
cli
int3
cwtl
or
xor
add
lea
lock
add
xor
test
or
xor
sbb
es
lahf
jno
xchg
int
xchg
insb
pop
lcall
push
pushf
js
loop
jnp
sub
add
push
add
test
repz
xchg
adc
pop
pop
test
jnp
cmpsb
jo
faddl
or
jge
and
adc
mov
popf
xchg
into
add
inc
mov
jle
pop
sub
icebp
out
xchg
sbb
insb
xchg
push
xor
in
add
in
or
int3
mov
packuswb
popf
pop
push
mov
mov
je
pop
and
loopne
ljmp
int3
inc
jns
mov
or
sti
hlt
adc
loope
xchg
out
popf
out
inc
add
ljmp
aaa
or
je
xchg
ret
pop
shrb
cmp
dec
mov
and
push
and
cmpsb
mov
sub
daa
clc
pop
pop
gs
jp
imul
pop
rorl
popf
ja
imul
cmp
sub
shll
push
or
add
pop
jns
sbb
das
push
aas
loop
xor
ss
or
scas
inc
push
mov
mov
and
jo
cli
movsb
lods
sbb
icebp
xlat
sti
mov
pop
nop
rcr
out
fneni(8087
int3
push
mov
cmp
inc
ret
push
test
arpl
xchg
jmp
ss
notb
xor
cli
adc
rcll
mov
xchg
cmp
add
lods
mov
jg
ljmp
jo
clc
pop
imul
or
cld
fwait
sbb
sar
mov
sahf
loop
lods
jo
and
mov
xor
sti
adc
pop
dec
sub
cmp
inc
mov
int3
push
xchg
push
mov
mov
std
pop
jb
dec
adc
divl
repnz
loop
push
dec
pop
push
pop
adc
andl
notl
mov
inc
adc
or
scas
mov
cmp
mov
mov
xor
rcll
cmp
repz
cli
stc
push
or
in
mov
add
push
std
push
daa
std
imul
or
mov
inc
lods
or
iret
push
aam
pop
add
cwtl
fwait
rcl
cmp
scas
js
push
mov
xchg
stos
adc
fwait
sbb
pop
ret
fstpt
ds
lock
movsb
loopne
and
dec
push
or
das
dec
sbb
rcrl
jge
lcall
arpl
mov
inc
push
loopne
test
pop
push
dec
dec
aam
repnz
mov
push
push
xchg
fwait
in
test
dec
and
add
imul
pop
es
mov
lds
mov
and
mov
and
es
adc
xor
shll
ja
push
int
lret
mov
enter
xchg
or
shrb
dec
ljmp
int
or
out
repnz
and
mov
jmp
nop
dec
insl
loop
dec
fmul
mov
ret
adc
out
xchg
mov
rorb
lahf
roll
mov
popf
add
incb
test
pop
test
pop
icebp
cmp
cld
stc
scas
or
cmp
mov
jne
cltd
mov
cmp
fs
in
jo
test
jge
decb
inc
sbb
dec
outsl
int3
and
xchg
dec
iret
add
and
jno
cli
outsb
inc
pop
mov
outsl
repz
or
in
cmp
sbbb
mov
clc
bound
xchg
std
pusha
mov
mov
mov
and
popa
cli
jno
xlat
add
push
mov
and
in
das
ss
mov
jbe
fwait
pop
sub
mov
push
push
cmp
and
scas
mov
das
lret
xchg
dec
fsts
pushf
add
xlat
and
or
xlat
inc
outsb
inc
inc
stc
push
sub
sbb
xchg
sbb
push
aaa
or
in
test
pop
push
or
pop
sarb
icebp
jle
scas
test
clc
aam
movsl
nop
pop
or
lret
cmp
adc
mov
subl
jp
enter
cwtl
fnstcw
mov
aad
daa
aad
mov
mov
idivl
dec
addl
stos
cwtl
scas
xor
ffree
jmp
pop
cmpsb
pop
jle
pop
xchg
addr16
sbb
mov
jo
mov
clc
pop
dec
test
clc
jo
mov
ret
popa
test
popa
mov
rcl
adc
pushf
mov
push
or
xchg
mov
mov
xor
sbb
adc
push
xor
stc
jnp
popa
fstps
xchg
sbb
xchg
rcrb
lea
adc
jbe
fistpll
movsl
pop
test
clc
les
imul
fcomps
loop
hlt
fstps
sahf
xor
outsb
mov
int3
inc
jae
sahf
inc
mov
mov
sbb
mov
iret
adc
lock
push
out
fs
and
or
adc
movsl
scas
mov
in
jno
sub
push
sti
fs
jp
pmulhuw
out
lret
sub
mov
add
repz
clc
cmpsb
lahf
sub
xchg
mov
pop
cmc
push
add
fidivrl
popf
lret
loop,pt
lret
jne
adc
js
pop
dec
loope
dec
enter
int3
xor
xor
mov
jbe
jmp
repz
jecxz
cmp
pop
xor
adc
mov
and
cltd
xor
test
insl
lea
mov
xorl
arpl
xchg
and
enter
in
imul
sahf
rclb
push
mov
or
and
sahf
xchg
pop
mov
test
test
fwait
jns
roll
out
xchg
mov
outsb
cmp
test
fsubrl
cmp
sbb
or
dec
xor
fsubrl
push
mov
andl
mov
fsubs
or
gs
imul
enter
pop
mov
add
outsb
lock
shl
cmpsb
mov
mov
and
inc
fidivrs
push
dec
mov
rolb
or
jle
loopne
mov
lret
push
add
mov
fiaddl
repz
fmuls
js
xor
or
mov
enter
jp
inc
mov
ret
into
daa
pop
inc
mov
imull
xchg
std
mov
les
arpl
adc
loopne
test
out
adc
xor
jbe
hlt
dec
pop
stos
rol
outsl
jg
hlt
jne
inc
ret
aaa
push
xor
sbb
ds
imul
push
insl
sbb
insb
dec
adc
add
subb
cmp
xchg
xchg
inc
sbb
inc
stc
in
add
leave
inc
add
imul
pushf
sbb
mov
cmc
mov
arpl
shrl
sbb
jne
jbe
sbb
mov
mov
dec
cmc
clc
cmpb
js
rorb
jne
pop
jne
daa
push
push
pop
iret
sbb
jmp
push
push
push
das
mov
cmp
add
leave
sahf
add
mov
leave
dec
test
mov
jecxz
adc
jge
jnp
pop
out
xorl
aad
out
mov
push
mov
cmp
icebp
fsts
lods
push
adc
jle
cmp
push
push
hlt
xlat
xor
popf
fs
test
fcmovnb
cmpsl
rol
cmpsl
cmp
cmc
jle
xchg
sbbb
cld
stos
adc
xor
sbb
test
jmp
inc
or
call
dec
sbb
push
and
pop
jo
out
xchg
sahf
aaa
xor
xchg
jecxz
inc
mov
es
inc
enter
mov
loope
pop
or
in
jmp
loope
mov
cmc
repz
fs
or
add
int
xchg
mov
sbb
cmp
dec
add
lds
adc
mov
sbbl
and
ret
lds
fsubl
test
xchg
cmp
sbb
int3
mov
mov
mov
into
sahf
sub
cmp
mov
add
and
mov
mov
shrl
jge
aas
pextrw
fwait
ja
lds
jnp
insb
lods
xor
dec
out
cwtl
jae
popf
loope
mulb
cmp
mov
push
inc
lea
xchg
jbe
addl
std
xor
sbb
dec
cs
mov
jns
aam
sahf
xor
test
je
pop
test
push
xchg
jge
mov
add
xchg
jle
loopne
cmp
iret
add
mov
adc
fsubrp
shll
imul
je
loopne
int3
push
sbb
and
sahf
mov
daa
stos
cmp
psubw
clc
cmp
imul
cli
lret
insl
and
adc
mov
nop
add
cmp
repnz
xchg
pop
mov
cmpsl
iret
repz
or
fsubrp
add
xchg
js
bound
mov
adc
fiaddl
stc
add
cltd
mov
xor
lods
out
frstor
incb
jno
mov
cltd
or
dec
sti
pop
mov
loopne
cs
sbb
xchg
lods
fiaddl
or
inc
jl
pop
out
bnd
xor
sbb
inc
mov
lods
and
push
and
shl
stos
inc
mov
shll
aad
push
or
loop
test
rcrb
sbb
push
mov
nop
inc
xor
mov
adc
jl
insl
and
aaa
cmp
popa
or
incl
pop
imul
dec
pop
add
ret
push
sub
jmp
ss
or
test
jae
dec
insl
shll
imul
outsl
cmp
add
push
xor
push
add
stos
jl
jbe
mov
int
inc
add
jmp
gs
inc
lds
nop
sub
cld
cmp
pop
pusha
loope
out
sub
mov
jne
push
insb
pop
out
push
push
dec
loopne
xchg
aad
jno
repz
lods
and
adc
arpl
jbe
pop
mov
mov
sub
in
std
out
iret
rclb
dec
lds
sub
push
inc
lret
cmp
test
push
xor
and
inc
cmc
mov
ja
push
in
cmpsl
jecxz
roll
sti
xor
je
xchg
jb
cmpsl
mov
add
pop
jno
mov
xor
mov
pusha
ficomps
addl
pop
mov
loopne
in
and
daa
pop
aaa
outsl
adc
sarb
push
subb
mov
negb
cmpsb
push
test
mov
out
outsb
add
sbb
ljmp
mov
rolb
jns
outsb
dec
cmp
push
adc
xor
scas
xchg
shrl
nop
andb
shl
and
mov
sbb
cmpl
mov
mov
lcall
data16
ja
cld
arpl
imul
xchg
xor
fnstenv
push
push
rolb
fcmovne
pop
mov
inc
fwait
push
cmp
lea
dec
test
push
mov
dec
inc
fimull
ja
push
jno
xchg
jbe
and
sub
mov
jl
mov
mov
orb
xchg
fadds
insl
in
stos
mov
xchg
sub
push
sub
in
not
xchg
imull
mov
mov
pop
into
fisttps
or
sbb
cld
adc
loop
arpl
sub
mov
mov
ss
aam
subb
rcrb
shll
bound
jg
or
mov
mov
int3
iret
push
wrmsr
sbb
ja
add
or
scas
jl
adc
dec
push
stc
sbbl
fcoms
lret
and
adc
inc
pop
inc
shr
scas
adc
movb
out
fisubrs
inc
popa
nop
inc
lods
ljmp
cld
xor
and
mov
jl
mov
testl
inc
adc
sbb
scas
sub
cmp
bound
inc
pop
pop
add
mov
mov
push
xorl
mov
lds
fsub
and
jbe
fldl
iret
adc
fimull
cltd
sbb
push
leave
and
jno
sub
lods
mov
mov
and
xor
inc
fnstsw
shlb
outsb
mov
mov
mov
out
mov
hlt
push
scas
and
mov
sbb
nop
fdivrs
pop
aaa
lret
xor
sbb
xchg
jl
pusha
mov
imul
and
jg
push
ljmp
dec
xchg
divl
test
mov
and
mov
mov
das
pop
cmp
inc
dec
std
cmp
push
cmc
scas
fistps
or
xchg
cmc
into
add
into
cld
adc
pop
mov
mov
cmp
movsb
movsb
jbe
pop
fldcw
pop
push
jne
aas
fists
pushf
in
lcall
push
pop
or
xor
pop
push
sub
ret
fsts
in
test
or
xchg
movb
js
cmp
jle
cmp
fxtract
rorl
inc
inc
scas
push
jg
add
xchg
cltd
divl
cmpsb
clc
cmp
mov
inc
out
daa
xor
dec
jns
adc
bound
and
push
dec
dec
cmpsb
lods
sub
pop
jo
jecxz
mov
jl
shrb
sbb
enter
adc
decl
addb
pop
sub
xchg
fwait
shll
sbb
out
lods
inc
mov
xchg
cmpsb
mov
mov
in
inc
pop
fsubrs
mov
cmp
or
mov
dec
jbe
icebp
bnd
mov
mull
dec
xchg
push
js
cmp
fisttps
inc
xchg
pop
movsb
stos
mov
jmp
mov
fistl
pusha
cmp
fs
pushf
test
inc
into
pop
or
xchg
xorl
pop
inc
sbb
mov
in
mov
mov
or
dec
push
mov
lds
pop
lret
rol
call
xchg
jecxz
lret
insl
cwtl
adc
xor
cmpsb
and
clc
push
cmc
add
data16
mov
cmovp
push
adc
xor
nop
dec
clc
test
daa
mov
mov
jbe
pop
sahf
test
pusha
test
xchg
jno
sbb
sti
stos
loop
dec
pop
mov
jle
or
sarb
jle
out
mov
idivl
jecxz
sahf
inc
lahf
push
pop
xor
xchg
pusha
ja
and
adc
xchg
aam
mov
shll
dec
push
inc
insb
std
sbb
cmpsb
andl
test
push
fstps
imul
sti
xchg
push
dec
push
addb
mov
rolb
fcmovnb
dec
sbb
inc
orb
mov
jge
lcall
and
inc
loopne
jl
cmpsb
mov
lods
ffree
xchg
addr16
jns
sbb
ds
cmpsb
inc
rorb
shrb
inc
lock
es
jbe
fwait
push
pop
mov
enter
sbb
cld
testl
or
fcoms
test
cmp
ret
adc
jmp
push
aas
xor
ljmp
rcrl
pop
mull
inc
add
faddl
jno
mov
hlt
pop
es
inc
imul
push
leave
sub
sub
in
clc
inc
xchg
add
dec
imul
sahf
ret
push
dec
out
xor
or
mov
cmpsb
and
shll
fmul
scas
das
jle
stc
fs
push
aad
inc
or
mov
idivb
and
movsl
mov
arpl
das
adc
xor
jl
xchg
adc
js
jno
mov
out
enter
mov
vminps
cmp
adc
fsubs
fidivrl
sub
rolb
nop
ss
lret
sub
stos
stc
or
add
pop
fstps
clc
push
jg
jle
cwtl
mov
cmpsb
lea
mov
sarl
into
sub
insb
lret
jg
mov
and
mov
add
add
idivb
pop
pop
push
and
lds
cmpsl
jae
sahf
cmc
sbb
aaa
cli
sbb
xor
aad
xchg
test
cmpsl
mov
xchg
call
lock
push
xchg
mov
fsubs
mov
push
mov
xchg
shll
repz
dec
and
test
cltd
jecxz
or
pop
imul
out
and
test
stos
mov
test
jns
sub
lock
out
mov
and
mov
leave
xor
dec
nop
shlb
shll
xorb
lds
scas
pop
orl
pop
cmpsb
jge
pusha
pop
sarb
or
xor
jns
mov
push
xchg
fs
pop
test
xor
vpor
popa
std
jg
pusha
jae
mov
inc
ljmp
xchg
adc
adc
popf
popl
gs
xor
pop
adc
push
mov
pop
adc
cmpb
rcll
in
hlt
adcl
or
add
inc
xchg
mov
arpl
sbbb
scas
movsl
sbb
cmp
sub
insb
mov
dec
xchg
inc
pushf
xor
push
cmc
mov
inc
cmp
aas
out
pushf
and
int3
sub
jmp
aas
js
fcoms
pop
std
test
js
add
in
stc
sub
cld
push
jecxz
add
dec
in
sub
mov
dec
cmp
xchg
popa
into
xchg
adc
divb
test
fs
ds
popa
data16
dec
adc
call
mov
rorb
cwtl
cli
jmp
cwtl
stos
in
adc
mov
sub
inc
inc
dec
push
push
mov
gs
psubd
adc
jns
pop
jg
fisttpl
adc
cs
cmp
incb
cmpsl
xchg
mov
data16
stos
cltd
push
icebp
mov
leave
lods
repz
cmp
lods
and
out
mov
pushf
add
aaa
jbe
mov
inc
sbb
shll
jnp
mov
fildl
pusha
mov
arpl
test
push
in
xchg
jnp
jnp
shll
repnz
lock
inc
jl
push
loop
adc
mov
jp
outsl
push
dec
push
dec
dec
cmp
xor
xchg
add
cmpsb
and
or
in
call
add
jle,pt
mov
add
ljmp
add
inc
and
mov
push
push
lret
mov
jae
jb
cmp
in
sbb
inc
out
inc
sbb
fidivrs
cmc
push
addr16
dec
mov
int
pop
loopne
insl
cwtl
add
inc
pop
push
pop
cltd
jbe
ds
repz
lahf
lahf
test
jp
in
mov
fwait
test
mov
scas
add
jl
out
nop
xchg
lret
or
popf
mov
push
sub
int3
call
or
adc
mov
je
fistl
in
enter
imul
inc
add
negb
adc
jl
xchg
cmp
xlat
pop
idivw
inc
push
cmpsl
daa
in
push
adc
out
rcl
shlb
push
aad
addl
mov
ficoms
and
or
dec
loope
out
aam
mov
inc
sub
fsubrp
repnz
imul
rorl
out
add
mov
inc
aaa
sub
ss
sub
dec
lret
notl
into
lret
xor
stos
out
das
in
std
inc
xlat
aaa
sub
rcrl
cmp
insb
test
rcll
mov
mov
pop
mov
push
je
leave
push
mov
jbe
insb
mov
clc
push
mov
cmp
leave
sub
jbe
jmp
cmpsl
popa
aas
ljmp
subl
mov
mov
jp
pushf
or
push
pop
add
pop
in
icebp
or
mov
daa
test
xor
mov
jnp
es
fcomi
call
mov
pusha
sbb
cld
fldenv
popf
add
leave
xor
rclb
xchg
jge
cmpsb
lret
pop
jo
jnp
lret
sub
sahf
scas
orl
adc
mov
inc
daa
xlat
in
imul
les
out
push
xor
mov
sbb
arpl
mov
vpunpcklwd
sub
cli
jge
insb
mov
mov
imul
test
cs
mov
xchg
inc
lret
lcall
je
test
mov
sub
arpl
push
pop
pop
stc
hlt
jns
mov
fimuls
dec
push
adc
pusha
sahf
dec
icebp
inc
adc
ret
cwtl
ljmp
stos
mov
aam
sbb
pop
mov
xchg
push
mov
js
sbb
out
xor
jl
jg
or
movsb
dec
shll
jl
mov
shr
imul
ret
inc
enter
push
fisubrs
mov
shr
mov
add
test
insl
fsubrp
repnz
lods
mov
or
pop
stos
insb
out
call
mov
xchg
pop
push
pop
ds
and
jg
jg
push
in
imulb
pop
daa
aas
cmp
mov
pop
ret
mov
inc
pop
mov
push
adc
outsl
shll
fimuls
movsl
jg
add
jg
fldt
lret
ret
popf
and
xor
lahf
pop
vpaddusw
insl
lods
test
inc
sahf
sub
bswap
out
mov
jno
movsb
popf
xchg
and
aas
pop
sbbb
pop
ljmp
in
jae
adc
sbbl
pusha
adc
cmp
sbb
loop
mov
cmp
cmp
jp
fwait
push
cmp
dec
adc
xor
fs
jmp
jecxz
jecxz
jbe
daa
mov
inc
xchg
push
add
xchg
dec
or
in
call
and
inc
mov
imul
push
and
sbb
jmp
inc
jl
test
push
mov
jmp
push
lods
mov
dec
mov
adc
test
lea
incl
sbb
xchg
mov
out
outsl
les
lds
js,pt
mov
fbstp
dec
xchg
sbb
or
loopne
outsb
mov
pop
mov
enter
lret
sbb
ja
decb
in
jno
jo
andb
dec
iret
inc
das
scas
sbb
fsubrl
jno
xchg
outsb
or
mov
jge
pop
adc
iret
stos
or
ucomiss
stos
mov
sub
push
pusha
inc
sbb
movsb
imul
cltd
and
xchg
outsl
pop
sub
fcompl
jmp
dec
pushf
lret
pusha
lret
out
mov
cmp
xchg
int3
cwtl
cs
popl
stos
adc
jge
xchg
sbb
lcall
xchg
ss
clc
xchg
pop
jmp
push
popa
and
cmp
jbe
insb
add
add
or
sbb
pushf
jae
loopne
stos
xor
inc
jbe
mov
xchg
addr16
jecxz
xchg
xchg
in
sub
xchg
lahf
jge
stos
adc
loope
loope
loope
pushf
jecxz
mov
shl
lcall
popa
arpl
pusha
cmp
mov
pop
sbb
fs
movsb
cli
fiadds
add
out
rcrb
or
int3
outsb
mov
lods
xor
add
jge
sbb
xchg
jecxz
xchg
mov
push
cmpsb
pop
out
mov
cmp
popa
int3
out
stos
lret
dec
aas
sub
jle
outsb
stos
cmp
test
fwait
mov
mov
shll
add
xchg
in
sbb
es
stos
repnz
pop
shlb
sub
aas
jno
pushf
stos
sub
push
jns
in
lods
push
jmp
negl
bnd
mov
cltd
imul
push
adc
xor
test
jmpw
add
hlt
mov
mov
push
arpl
je
adc
or
sub
xlat
push
inc
test
in
stos
cmpsb
mov
das
jge
cwtl
imul
loope
mov
aam
push
fidivl
lods
hlt
sub
test
fidivrs
repz
or
movsl
nop
sbb
and
ret
aam
jmp
xchg
jbe
lahf
or
sbb
sub
adc
outsl
sbb
add
out
decb
pop
insb
popf
pop
gs
jl
outsb
sub
ja
pop
clc
mov
sti
sbb
mov
pop
out
jp
mov
outsl
push
lods
lock
stos
rcrb
stc
pushf
add
out
fnstcw
lahf
push
mov
movsl
clc
imul
xlat
in
add
xor
aas
mov
stos
sbb
add
aam
in
xchg
stc
adc
jl
cld
shlb
mov
push
mov
xchg
xchg
pop
sbb
mov
push
adc
icebp
xlat
es
jmp
mov
lods
test
repz
notl
mov
or
and
mov
add
sub
and
aad
pop
mov
mov
pop
add
lret
adc
inc
mov
les
out
push
nop
stos
and
aaa
bound
xchg
clc
pop
sub
ret
mov
movsl
mov
or
mov
lret
fwait
js
cmp
adc
leave
sbb
cmp
sub
cltd
dec
adc
cmpsb
fisubl
jg
mov
sub
dec
or
and
fsubs
cmp
xor
mov
mov
fldenv
jno
mov
sbb
jns
aaa
test
xchg
and
das
pop
fsubrl
sti
fucomip
jno
jns
cmpl
dec
pop
cmpsb
pushf
pushf
ficomps
pop
arpl
stos
ja
jge
jmp
orl
out
ljmp
jb
into
mov
fbld
cmp
shlb
fadds
or
inc
push
jg
jg
rep
imul
push
push
add
or
addr16
icebp
jecxz
movsb
negb
das
add
insl
notb
sub
adc
xor
mov
jle
pop
dec
sahf
gs
jbe
hlt
shll
in
dec
add
dec
sbb
adc
repnz
ret
insl
hlt
imul
xchg
je
inc
imul
push
orb
inc
xchg
in
cmc
add
in
push
mov
cli
sub
das
xlat
cs
jo
mov
inc
jge
out
rol
cmp
pop
push
mov
cli
movsb
das
dec
mov
cmp
loopne
sahf
arpl
adc
mov
mov
or
xor
data16
adc
or
aaa
adc
cmp
mov
popf
inc
test
xor
ljmp
push
sub
test
and
popl
add
dec
cvtdq2ps
push
sbbb
add
jbe
in
lahf
xchg
push
hlt
cltd
and
sbb
or
rcrl
cmp
aam
stos
sti
test
dec
shll
ffreep
out
add
loopne
idivl
imul
or
aam
inc
mov
xchg
fsubrl
pop
adc
xor
lds
xchg
fldt
repz
fsubrp
sbb
push
mov
test
add
xchg
imul
push
cmpsl
xchg
push
mov
je
rolb
jns
push
lret
sbb
push
enter
add
xor
or
dec
pop
adc
scas
addr16
inc
mov
add
decl
les
lods
hlt
test
mov
notl
inc
xor
mov
fs
fs
mov
sahf
sbb
push
inc
es
ja
push
and
jbe
in
adc
push
das
mov
adcl
je
enter
loopne
mov
mov
jp
push
lret
js
xor
call
and
loope
pop
insb
cmp
shll
mov
push
jns
xlat
add
aaa
cmpb
sbb
sub
call
mov
and
inc
mov
testl
int
jnp
push
xchg
shl
xchg
and
push
mov
fdivrl
cwtl
loopne
in
je
shlb
pop
push
movsb
mov
pop
iret
ret
push
shrb
sbb
imul
roll
lcall
roll
mov
in
subl
fistpl
add
das
push
mov
pusha
cli
jecxz
fsubr
pusha
sti
push
xor
inc
mov
pop
pop
rcl
xor
shl
sbb
js
sar
push
in
adc
leave
bnd
into
pop
mov
scas
xor
xchg
mov
adc
cmp
push
xlat
daa
sti
mov
ret
push
pop
mov
outsb
imulb
lods
xor
daa
xor
ljmp
add
mov
shl
stos
mov
pop
mov
sbb
ret
rcr
jo
push
inc
orl
jae
or
mov
or
adc
add
or
or
js
mov
cmpsb
jbe
jecxz
jb
je
push
mov
lds
xchg
lcall
xor
dec
mov
pop
jns
mov
inc
aad
insl
mov
std
ja
shr
cmp
jmp
dec
loope
ficomps
mov
imul
lods
repnz
mov
xchg
lods
sar
loopne
adc
test
cwtl
xor
mov
in
dec
mov
add
rol
pop
outsb
cmp
daa
gs
sarl
bound
xor
out
cmpl
rol
nopl
mov
add
mov
out
fwait
enter
inc
outsl
mov
jo
jb
outsb
and
mov
pop
sahf
out
inc
mov
dec
push
mov
call
enter
lds
sbb
inc
mov
daa
test
shrl
outsb
inc
sbbl
divb
push
adc
lret
cltd
lahf
mov
inc
cmp
into
test
mov
lret
mov
out
xchg
adc
insb
imul
adc
cld
sbb
fiadds
insb
mov
fdivrs
jnp
mov
js
jl
inc
inc
jecxz
nop
xor
insl
nop
aas
or
inc
pusha
pop
sub
cmp
inc
cmp
cmp
andb
enter
sub
pusha
divl
sub
hlt
jle
sub
rorb
or
push
fcmovnbe
scas
or
xchg
movsb
shrl
out
imul
mov
mov
pop
or
adc
sub
push
mov
pop
ffreep
sub
push
xchg
inc
rorb
lret
mov
or
rclb
inc
push
daa
or
repz
xor
mov
xor
jb
jmp
ljmp
icebp
mov
fstpl
mov
jg
aam
xchg
add
mov
sbb
gs
push
out
jae
das
lods
decl
popf
and
mov
dec
xchg
ljmp
sbb
sbb
dec
sub
xchg
std
mov
into
stc
inc
push
mov
gs
cmp
mov
xchg
xor
in
ja
push
cmpsb
jp
push
or
xchg
and
sbb
pushf
ret
imul
shrl
xchg
sti
jl
repnz
xchg
mov
sbb
push
push
mov
or
mov
aam
imul
arpl
sbb
addl
xchg
nop
test
push
cmp
sbb
imul
lods
inc
sub
sub
ja
xor
insb
data16
loope
movsb
int
jl
aaa
adc
sub
add
pop
leave
mov
sub
dec
inc
test
dec
repz
jle
or
movb
sbb
push
lret
in
pop
scas
or
sbb
lds
popa
dec
lds
repz
sbb
popa
lret
rcll
mov
js
cwtl
add
jae
fs
sbb
push
push
cmpsb
or
lods
lcall
xor
cmp
cld
xor
cmpsl
add
bound
mov
and
mov
cmpsl
ja
add
sbb
ficoml
mov
jecxz
push
pop
mov
sub
lcall
imul
ret
sbb
or
enter
das
adc
fdivl
fistps
loop
fcmovnbe
mov
sbb
ret
mov
in
idivl
adc
rcll
inc
imul
xor
mov
sti
adc
dec
sub
pop
cltd
sbb
mov
push
out
jb
mov
jae
scas
ja
add
cmp
loop
mov
nop
out
cmp
push
push
cld
cld
in
movl
data16
adc
scas
sub
xchg
addr16
mov
ficoms
sahf
dec
or
and
movsl
jae
mov
dec
xchg
fs
push
push
jae
push
aaa
pop
out
in
lcall
rolb
xchg
cmp
jecxz
movsl
inc
and
loope
cmp
sbb
add
outsb
inc
jecxz
push
mov
sbb
mov
outsl
xor
xor
int3
cmp
lods
or
dec
iret
mov
pusha
test
push
lcall
mov
lock
or
jno
loope
stos
out
bnd
stc
mov
pushf
xor
push
es
jbe
outsb
push
or
push
mov
mov
fldcw
xor
sub
leave
lds
mov
cmpb
push
std
sub
test
pop
xor
xchg
lods
add
bound
fsubl
movsl
cmpsl
pusha
cmc
popf
push
mov
inc
jne
mov
pop
loope
fiaddl
jp
fiaddl
push
stc
sti
lods
dec
push
mov
addb
push
and
std
dec
insl
shl
and
mov
pop
mov
jae
adc
jg
test
cmpsb
fadds
call
xchg
inc
in
and
sbb
inc
mov
cmp
js
shlb
pop
sub
xor
lods
stos
sbb
lock
cmpsl
mov
or
daa
and
loopne,pt
jae
xchg
test
fstpt
sub
jmp
inc
jae
xor
pop
leave
jmp
pop
jb
dec
imul
xchg
clc
ret
into
aad
jnp
xchg
test
rorb
mov
cmp
punpcklwd
cltd
rol
je
pop
sbb
adc
push
xchg
imul
or
inc
lock
out
data16
out
dec
loope
clc
call
lahf
dec
cwtl
adc
insb
in
lahf
cmc
xchg
daa
insl
sti
lahf
enter
je
xchg
mov
insl
pop
cli
aaa
rol
sahf
lods
hlt
cmp
jbe
ss
out
inc
sub
mov
or
xor
incl
dec
pop
xor
fsubr
inc
dec
add
mov
cmp
insl
mov
leave
cmp
addl
test
xor
jbe
int3
in
cs
hlt
repnz
jns
and
xlat
xchg
jns
shl
xlat
pop
or
imul
cmp
clc
roll
push
inc
sbb
adc
jo
aas
xchg
xor
lret
scas
sbb
lock
add
jae
dec
popf
andb
lods
xchg
insb
sbb
sbb
jnp
xor
dec
sbb
outsb
rcrl
dec
xor
jae
push
lret
inc
adc
call
inc
push
inc
mov
inc
int3
in
xchg
scas
xchg
cmp
sbbl
fdivr
adc
test
push
push
imul
dec
add
in
cld
sub
mov
outsl
xor
fnsave
push
xor
lahf
push
push
xchg
jb
push
lods
out
sbbl
gs
add
mov
lods
outsb
push
daa
seto
adc
push
cmp
mov
ss
jmp
outsl
data16
dec
mov
jbe
scas
xchg
in
lret
fimuls
out
fsubl
insl
fistpl
or
in
push
stc
push
and
loope
xchg
dec
imulb
cwtl
mov
mov
push
mov
push
gs
inc
add
int3
arpl
rol
fmull
and
mov
inc
xor
stos
mov
pop
pushf
call
lret
xor
xchg
cli
and
insl
lods
subl
xchg
or
inc
ljmp
push
int
fs
stos
addb
andl
enter
mov
mov
fmull
xchg
inc
adc
or
faddl
mov
fisubrl
aas
iret
xorb
scas
shl
andb
cmpsb
mov
lock
mov
lret
xchg
jg
lret
test
or
jmp
mov
mov
sub
cmp
jmp
push
fldpi
aam
repz
sbb
icebp
push
push
lret
mov
xchg
cli
lds
gs
dec
insb
stos
iret
shlb
mov
pop
mov
add
push
roll
stos
testb
xchg
xchg
jnp
lret
mov
ror
add
mov
idivl
mov
loope
jno
pop
push
leave
mov
xchg
mov
inc
in
jne
inc
jge
fucom
xchg
cmpsl
cmp
sbb
sbb
pop
enter
shlb
cmp
dec
je
lahf
jg
insb
jecxz
cwtl
add
repnz
rorb
sarl
cmp
adcl
aam
jl
mov
lret
push
cmpsb
push
movsb
and
push
outsb
outsl
xchg
jb
lods
sbb
in
mov
mov
adc
xor
mov
or
pusha
dec
lods
arpl
add
out
jne
xchg
dec
fistpll
orl
dec
psraw
mov
cmpsb
sbb
mov
stos
pop
or
inc
jecxz
shll
orb
jl
in
outsl
inc
push
or
mov
stos
in
int
dec
addr16
mov
cltd
and
cmpsl
jle
popf
out
push
frstor
or
daa
mov
mov
mov
cltd
lds
les
jb
pop
lret
mov
test
xor
xor
pop
push
jp
sub
mov
lods
pxor
xor
repz
lret
xor
in
xchg
jp
insl
pop
and
sub
jo
push
rcll
fs
xchg
pop
lcall
adc
cwtl
imul
in
ret
xchg
inc
mov
pop
enter
out
lret
xchg
and
xchg
inc
in
jne
ss
aam
in
iret
pop
adc
sub
pop
stos
cmp
sub
jge
test
inc
test
or
jg
lds
mov
pop
mov
mov
sub
dec
scas
loopne
dec
adc
fisttps
pop
dec
or
popa
bswap
cli
sub
sahf
cmp
pop
mov
shr
xchg
cmpsb
dec
mov
push
mov
fidivrl
dec
mov
andb
jnp
pop
mov
aad
out
inc
add
mov
jp
pushf
sti
pop
cs
jmp
out
insl
jg
cli
lret
movsb
jno
push
mov
push
fucompp
std
call
stos
mov
sbb
pop
adc
pop
mov
loop
sbbl
sarb
mov
notb
xchg
aad
cwtl
js
test
pop
inc
inc
push
push
xchg
add
int3
out
add
dec
shrl
sti
fstl
cli
sub
cwtl
inc
repz
jbe
mov
enter
test
aad
js
mov
negb
mov
test
out
les
lds
or
dec
mov
mov
adc
scas
popf
leave
push
lahf
push
call
dec
sub
sub
repz
jnp
rclb
mov
xor
scas
dec
mov
sub
mov
jns
xor
xchg
imul
mov
dec
std
or
call
mov
mov
jae
push
jns
pmaddwd
pop
mov
sub
jmp
mov
fidivs
into
notl
insl
cmc
push
jo
mov
pop
push
xor
repz
sahf
inc
mov
and
cmp
repz
lods
mov
mov
jbe
insb
movsl
lds
mov
aad
insl
xchg
fcomps
push
paddsb
sub
xchg
dec
call
mov
cltd
sbb
inc
mov
pop
lret
je
out
shlb
add
in
mov
test
repnz
mov
ret
stos
cmp
pop
or
mov
rolb
pop
inc
mov
push
mov
push
add
jb
les
cltd
or
adc
call
test
mov
mov
in
mov
js
adc
xchg
mov
pusha
or
xchg
cmp
insl
mov
ficoms
push
mov
clc
mov
sub
jmp
fcmovbe
notl
in
push
xchg
sub
push
imul
cld
cmc
jae
sarl
xchg
mov
or
xchg
jae
andl
sub
xchg
push
cmpsb
in
lds
xlat
pop
mov
mov
xor
rcl
popf
adc
pop
xor
aaa
push
sbb
int
jo
lcall
stos
test
rorb
pusha
xchg
enter
cmp
or
sbb
ja
mov
lods
sbb
out
cld
cli
ja
jnp
nop
xchg
int3
sbb
xchg
lcall
xchg
imul
and
sub
dec
push
stos
movaps
jbe
mov
addl
push
or
adc
pop
inc
test
lahf
es
outsb
out
popa
mov
mov
jb
cld
and
adc
cmp
out
les
int
out
xlat
inc
aam
push
mov
call
adc
push
pusha
and
out
inc
cmp
cmpb
les
mov
or
lret
mov
pop
sbb
mov
fsubr
mov
xchg
enter
fidivrl
mov
sbb
popf
stc
lods
jno
push
cmpsl
xor
repnz
mov
adc
mov
stos
mov
incb
pop
cmc
insb
xchg
imul
dec
inc
stos
fmul
mov
push
out
stos
pop
insb
pop
xorl
fldlg2
pop
sti
inc
call
loop
lods
jne
adc
jo
mov
test
pusha
adc
mov
adc
jo
popf
inc
popa
push
inc
or
sbb
fwait
shl
ljmp
jl
and
aaa
jl
jmp
cmp
std
pop
pop
jle
xchg
mov
adc
ss
addr16
jle
or
jnp
dec
pop
adc
xchg
lret
sti
in
ret
movsb
xchg
sbb
xchg
cmpsb
mov
xor
xchg
ret
shl
leave
pop
pop
mov
sub
xchg
aad
pop
jb
mov
lret
pop
div
jb
int
xor
popa
push
xorl
xlat
push
std
flds
xchg
push
jmp
hlt
sarb
jecxz
lcall
cs
clc
mov
cmp
sub
mov
adc
adc
out
dec
xchg
xchg
xor
adc
cmc
andl
pop
call
rcll
inc
cltd
jae
lcall
fldenv
repz
sqrtps
adc
jbe
inc
sub
out
shll
aad
stos
push
test
cmp
out
pop
adc
rol
dec
fisttpl
push
mov
mov
in
mov
mov
cmc
les
push
jmp
push
roll
cmp
lea
mov
fsubs
std
and
jle
mov
lock
sbb
out
aas
dec
lahf
xlat
test
in
ds
pop
pop
adc
imull
fsin
jb
sti
push
and
push
inc
jnp
mov
and
pop
jecxz
dec
add
mov
jp
mov
xchg
pushf
sub
in
pop
les
rclb
fadd
sub
hlt
outsb
push
inc
es
xchg
repnz
imul
outsl
and
fs
mov
cmp
je
xor
insb
sarb
xchg
lods
add
iret
sub
mov
mov
or
push
mov
aas
mov
inc
lods
push
nop
add
shlb
push
and
nop
add
call
cmp
and
add
add
adc
pop
idivl
imul
jg
aad
outsb
repnz
out
pop
add
adc
in
bound
inc
and
xchg
jbe
icebp
aas
ljmp
incb
fstpt
movsl
cmpsl
mov
inc
push
xor
sahf
mov
cwtl
add
imul
sbb
or
shrl
sub
das
bound
pop
jns
ja
push
aad
rclb
dec
adc
mov
dec
add
shlb
popa
dec
mov
test
std
jmp
lret
xor
mov
dec
subl
dec
rol
fs
add
incl
xchg
negl
sti
inc
cmp
xor
jns
aad
xor
mov
inc
pop
inc
push
psrld
jp
rcrb
mov
popa
stos
aaa
adc
mov
pusha
rcll
push
dec
push
xor
fistps
mov
outsl
and
outsl
push
std
cltd
in
and
stc
xor
testb
and
das
xchg
clc
repnz
sub
add
movsb
pop
cmpsb
mov
and
imul
arpl
xor
das
scas
ljmp
lds
ret
lods
dec
insl
mov
cltd
lods
cmp
shr
int3
mov
jno
xchg
js
outsb
mov
add
jmp
addr16
cmp
fcmovnu
or
cmp
mov
pop
mov
das
mov
push
cmp
loop
mov
arpl
outsl
push
jp
or
sbb
ds
lock
lods
in
fistps
push
ror
test
cltd
sbb
xchg
out
gs
test
fstpl
jnp
inc
cli
add
ljmp
data16
and
loope
enter
outsb
mov
mov
push
enter
out
xorb
gs
mov
das
sahf
cmp
dec
adc
adc
xor
lahf
aaa
lods
add
push
icebp
lret
shrl
bound
movsl
sbb
inc
sub
push
enter
push
xchg
cmp
out
mov
xchg
std
dec
icebp
test
sbb
inc
push
xor
enter
mov
sbb
lret
sbb
xchg
push
add
pop
stc
dec
xchg
add
and
lret
push
test
popf
xchg
call
inc
pushf
fwait
stos
js
jmp
lock
sbb
cmc
cld
mov
and
movsb
sbb
lods
pop
jl
xchg
mov
arpl
cli
mov
lcall
repz
mov
or
adc
sub
pushf
xor
jnp
sub
jo
jnp
ljmp
nop
pop
and
add
inc
fdivs
rorl
sbb
jp
mov
pop
dec
shlb
data16
or
ljmp
std
adc
rcrl
cld
push
pop
dec
sub
cld
adc
sahf
fwait
out
pop
fisubrl
cmp
imul
sbb
dec
ljmp
in
jecxz
imul
adc
mov
ljmp
mov
mov
inc
xchg
sbb
fwait
jnp
int3
sbb
cmpb
lods
dec
addl
jl
sti
adc
jo
int
mov
cli
pop
xor
in
nop
je
dec
dec
adc
mov
sub
mov
push
mov
mov
adc
pop
je
sub
add
adc
xchg
xor
push
ljmp
out
decl
lea
xchg
or
jle
outsb
dec
mov
xchg
dec
iret
test
rorb
jns
loopne
lds
pop
or
in
xchg
dec
cmp
mov
fidivrl
js
push
push
push
stos
mov
call
data16
fisubs
sub
and
add
push
sbbb
xchg
add
ja
push
pop
stos
add
popf
mov
mov
bnd
ss
div
push
das
sub
pop
jb
mov
rclb
mov
bound
mov
imul
into
jno
xchg
add
mov
jnp
pop
and
aam
test
cmp
mov
adc
adc
sbb
inc
inc
imul
scas
jae
in
hlt
adc
in
into
or
rclb
xor
dec
std
clc
cmp
jno
mov
repnz
push
mov
sbb
or
cs
ds
xchg
std
out
jns
popa
xchg
push
push
mov
fdivl
cmp
inc
pop
lcall
div
cmpl
loop
mov
ret
dec
aas
outsl
or
ret
or
cmp
test
xchg
mov
mov
insb
fistl
adc
mov
pop
lds
mov
addl
clc
mov
sahf
test
pop
stos
test
mov
and
jmp
cmp
mov
dec
jp
mov
cltd
aas
inc
lds
adc
jo
inc
sbb
lahf
std
ja
push
jo
jmp
xor
test
jecxz
inc
cmp
in
pop
cmp
fadd
jnp
adc
mov
and
mov
lahf
inc
stc
adc
jb
pop
fisttpl
mov
fstps
xchg
mov
repz
or
pop
adc
lret
push
pop
fldcw
adcl
cmpsl
fidivrl
jb
sti
xor
xchg
pop
add
inc
and
push
aam
loope
and
push
and
adc
adc
push
mov
popa
and
inc
pop
test
lret
sub
cli
cwtl
and
sbb
xchg
cmp
lret
in
btr
dec
insb
mov
dec
movsl
mov
push
push
inc
inc
xor
sbb
popf
mov
stc
pop
out
push
mov
cmp
inc
or
push
rcll
testl
inc
clc
mov
xchg
lock
sub
mov
sub
add
scas
loopne
jnp
xchg
inc
leave
xor
test
mov
subl
push
lods
arpl
fsubs
xchg
xchg
stos
imull
xchg
jns
rcl
movb
lret
jnp
lds
ret
stos
out
scas
or
xchg
pop
dec
add
pop
and
lods
sbb
add
leave
xchg
shll
lods
stc
arpl
sbb
pushf
loopne
lods
roll
lahf
enter
inc
mov
mov
xchg
stos
lea
insl
xchg
cwtl
dec
popf
xchg
insb
jle
repz
stos
push
adc
test
cmp
lods
jae
mov
pop
add
je
scas
push
mov
inc
mov
shlb
cmp
jge
fcmove
sub
pop
insb
mov
inc
dec
jle
mov
rolb
cltd
or
lcall
mov
adc
out
inc
arpl
jae
sbb
mov
mov
in
shlb
nop
int
adc
mov
cmp
rclb
loopne
ljmp
icebp
fsubrs
and
dec
test
lahf
mov
push
adc
jne
mov
gs
pop
mov
inc
repnz
push
dec
rolb
jge
lock
inc
inc
cli
push
cli
test
push
repnz
cmp
pop
movsb
xchg
cmp
xchg
leave
insl
arpl
xchg
es
jecxz
jbe
movsb
mov
add
out
insl
adc
mov
jo
sub
lds
js
lds
ret
orl
and
into
cli
mov
pop
out
mov
cmp
cs
loopne
mov
ss
push
fwait
and
sbb
inc
cwtl
loope
push
into
in
rorb
mov
sbb
sbb
in
popf
nop
mov
push
ret
sub
clc
dec
xor
sbb
sub
dec
and
dec
jae
mov
gs
cmp
sbb
push
test
test
jp
fstl
scas
xlat
je
icebp
movsl
orb
push
in
repnz
dec
jge
cmpsl
cmp
mov
stos
adc
mov
out
jnp
test
jmp
cmp
push
inc
add
inc
clc
jmp
notl
pushf
repz
popa
ss
repnz
fadds
je
movsl
inc
jno
cmpsb
xor
mov
or
xlat
sbb
mov
xor
mov
sbb
leave
and
mov
sbb
xor
jno
push
mov
push
lret
fldenv
bound
add
jbe
xchg
ja
mov
cmpsb
lea
xchg
xlat
ret
mov
mov
jmp
adc
jl
add
mov
inc
cmpsb
ret
push
out
int3
jmp
in
jns
jecxz
pop
sti
sub
jp
test
mov
mov
lcall
pop
adc
leave
ja
sub
pop
leave
mov
pop
dec
ja
pop
decb
or
pop
push
lcall
add
daa
mov
sbb
outsb
das
mov
loope
and
enter
inc
jle
ss
shlb
push
jns
cmp
xchg
xlat
xor
outsb
lcall
jmp
push
icebp
roll
ja
mov
jne
jbe
fadds
push
cmpsl
push
ret
xor
xchg
jge
mov
es
add
cmp
pop
jg
sub
push
push
stc
push
call
aas
ret
inc
mov
loop
inc
jns
rorb
push
push
jmp
lcall
inc
jno
mov
stos
je
inc
stc
gs
movsb
sub
inc
xchg
xchg
inc
ret
popa
inc
xor
lods
lods
push
sahf
sbb
mov
mov
out
jae
dec
mov
lret
dec
rcrl
aam
mov
xlat
cmc
jmp
iret
dec
out
mov
mov
int
callw
int
stc
ret
cld
sti
mov
cmp
int3
adc
dec
outsb
adc
mov
testb
dec
xchg
fsubr
movsb
hlt
add
jmp
ret
int3
sbb
push
xchg
jno
mov
pop
mov
adcb
shrl
ret
rol
and
in
ljmp
cwtl
mov
sar
cmp
xor
ds
and
inc
fdivrs
dec
sub
in
lds
loop
iret
xchg
jbe
fimuls
outsl
test
dec
test
pusha
xor
ret
inc
dec
xor
lods
mov
sarb
into
push
or
fsqrt
sbb
xor
gs
repz
icebp
jl
sub
ficoml
mov
fstpl
insb
mov
mov
cmp
aaa
dec
adcl
sti
shll
add
dec
arpl
sbb
fbld
and
pushf
sbb
push
mov
jb
cmpsl
fcoml
lds
inc
imul
xchg
sub
dec
dec
inc
xor
ljmp
rclb
lods
out
adc
aam
les
push
pop
pop
xor
push
stos
lret
mov
fcoml
sbb
add
cmpsb
push
loope
sub
cmp
insl
and
inc
ret
cmpsb
inc
int
jmp
push
ljmp
inc
pop
mov
xchg
aad
lcall
add
jno
pop
enter
and
push
xor
inc
repz
in
out
movsb
dec
push
adc
xchg
sub
dec
mov
xor
pop
sub
clc
dec
adc
push
and
jnp
and
xor
push
mov
mov
jge
orl
xor
scas
stos
push
add
and
movsl
or
add
ret
pop
inc
pop
adc
sar
push
out
and
iret
mov
xor
gs
test
jnp
fwait
in
jmp
dec
fiaddl
pop
imul
fucomp
lock
mov
subb
out
add
mov
addl
cld
es
stc
mov
cmp
shlb
xchg
pop
out
scas
sub
iret
iret
cld
outsb
idiv
das
scas
icebp
mov
in
in
andb
aas
jecxz
mov
dec
inc
test
sbb
fdivp
push
loopne
mov
les
cli
loopne
dec
pop
cmpsl
sub
lods
xchg
xchg
aad
and
cmp
sbb
jle
sub
pop
mov
mov
gs
adc
xchg
into
jp
dec
mov
add
xor
jnp
adc
and
pushf
lods
cmpsb
aam
adc
mov
pop
mov
jg
test
sub
jle
adcl
add
mov
cmp
dec
fs
sub
notl
and
scas
pop
fcomp
pop
lods
mov
jno
or
sbb
jne
outsl
or
add
es
and
mov
add
cmpsb
xor
push
dec
jmp
dec
out
or
js
mov
insl
push
cmp
popa
inc
scas
jge
add
pop
add
push
mov
xor
xchg
mov
adc
aas
xchg
sahf
mov
addr16
fistl
xor
inc
xchg
hlt
aas
cwtl
ficoms
xor
and
repnz
lret
pop
push
pop
fs
scas
stos
daa
pop
inc
and
mov
add
mov
mov
push
test
add
xchg
in
pop
popa
aaa
cmp
addr16
or
mov
decb
add
mov
xchg
popf
test
jbe
mov
mov
cli
test
jbe
shll
or
mov
cmpsb
test
mov
call
mov
mov
xchg
jge
inc
jns
call
add
jge
je
dec
insb
jg
jge
data16
lea
dec
hlt
mov
mov
add
movsb
jnp
push
add
jne
inc
shll
into
sbb
imul
jns
rcll
or
iret
sahf
pusha
adc
int
outsb
push
fwait
cld
jg
push
pop
out
pop
mov
adc
inc
dec
fidivrs
sub
cmp
dec
loopne
mul
rolb
mov
jns
insl
std
mov
xor
fsubr
aaa
sbb
cmpb
leave
xor
fstpt
mov
and
push
pop
out
mov
filds
ret
xchg
int
bound
push
sbb
ljmp
push
fwait
push
insl
lock
out
or
loopne
lock
dec
cmpsl
stos
sbb
fistl
lcall
pop
push
pop
jp
cmp
jno
stos
test
add
xor
push
int
aad
pop
push
dec
ror
xlat
mov
mov
xor
fldcw
pop
xchg
es
adc
and
scas
cwtl
mov
das
mov
fnstenv
lods
mov
sub
jmp
sbb
jne
and
stos
jns
jne
dec
jno
addr16
leave
fisubs
scas
jae
movsl
mov
pop
push
jnp
sub
push
add
test
lds
jmp
mov
sbb
add
popf
inc
pop
xchg
xchg
push
or
cmp
lret
add
pop
cmp
lret
or
push
out
popa
xor
int
jmp
mov
adc
outsb
jecxz
xchg
stos
and
enter
mov
mov
xchg
pop
aad
inc
mov
je
rcrl
andl
adc
mov
jle
fstpl
arpl
adc
or
xchg
popa
jp
and
sbb
test
arpl
mov
rclb
je
jge
jg
imul
test
iret
aas
inc
xchg
and
xchg
testl
dec
gs
int
out
or
movb
in
xorb
aam
les
add
lods
cs
int3
add
mov
jae
push
js
ficompl
add
mov
and
add
mov
mov
fwait
ret
dec
in
outsl
in
test
and
adc
mov
aam
enter
pop
xchg
push
lret
ljmp
rol
push
bound
lahf
js
add
add
or
mov
push
aam
jb
jne
xchg
cltd
push
fsub
mov
inc
fdivrl
adc
mov
xor
push
pushf
mov
hlt
pop
mov
loop
inc
repz
inc
fstl
ljmp
mov
loop
inc
and
xor
push
jns
mov
fs
insl
and
inc
repz
addr16
or
in
mov
insl
js
mov
xchg
std
or
push
add
or
mov
jmp
push
out
hlt
aam
or
int3
inc
fcomps
das
fcom
mov
fcoms
cwtl
lret
mov
push
filds
ret
lcall
lret
mov
lret
and
mov
incl
scas
mov
jmp
add
dec
xchg
sub
fnstcw
fisubrl
push
mov
cli
mov
movsb
mov
inc
and
scas
xchg
lret
or
dec
inc
fwait
xchg
dec
js
xchg
sti
aam
mov
mov
mov
out
lods
scas
mov
xor
push
push
jbe
mov
sbb
cmpsl
icebp
ret
std
xor
cmpsl
inc
lcall
dec
fistl
hlt
xchg
xlat
imul
sbbb
sub
sub
lret
decl
adc
jg
xor
insl
mov
adc
imul
test
xchg
in
sbb
sub
adc
mov
sub
sub
test
sbb
mov
lahf
cmp
mov
stc
pop
bound
inc
ljmp
decl
fistpl
shrl
pop
in
test
cmp
add
and
nop
adcl
xchg
sub
mov
xlat
cs
xor
cltd
ja
data16
test
adc
aad
mov
es
push
or
lret
push
test
push
shlb
jmp
jmp
imul
stc
xor
xchg
fcoms
insb
mov
push
and
cmp
mov
popa
out
xor
scas
insl
push
fldl
repz
sbb
adc
movsb
jne
pop
ss
jns
mov
sbb
cmp
pop
call
lock
cmp
dec
into
push
push
inc
add
xlat
lret
push
cmp
cld
cmp
adc
shll
dec
aam
add
push
fidivs
and
push
mov
push
stos
test
icebp
mov
sbb
out
dec
pop
or
popf
int
out
imul
push
jmp
inc
enter
or
mov
dec
jo
adc
jno
cmp
mov
mov
cmp
add
out
mov
negb
imul
sub
sbbb
data16
lock
mov
sbb
jmp
cmc
aad
scas
stos
paddb
xlat
push
pop
dec
cmp
aam
xchg
sbb
jo
add
insl
and
repz
repnz
popf
clc
add
push
and
push
sub
mov
in
mov
mov
or
popf
ret
sbb
and
xchg
push
xchg
fmull
fs
add
scas
in
xor
jecxz
xchg
scas
loope
iret
loopne
jo
andl
aam
jbe
push
xchg
or
in
jecxz
dec
aad
out
lcall
leave
jno
pop
xchg
cmp
jl
mov
loop
test
sub
xchg
aam
ljmp
icebp
mov
into
cltd
push
lret
mov
addr16
xchg
inc
cmp
sbb
outsl
cs
mov
cwtl
int
ljmp
repnz
orb
addr16
add
cld
into
imul
movb
test
push
or
inc
mov
sti
out
addr16
sbbb
ja
std
and
inc
jo
mov
and
out
jl
inc
or
out
mov
xor
ljmp
in
repnz
and
cmp
add
cmp
jns
pop
sub
jle
mov
pop
addl
sub
lea
test
and
std
push
call
insb
jge
xchg
pop
xor
je
mov
add
jecxz
inc
sbb
mov
mov
xchg
xor
inc
jp
inc
pop
dec
mov
inc
xor
mov
imull
cmp
push
push
andb
adc
roll
test
dec
jno
cltd
mov
test
adc
idivl
movsb
hlt
pop
js
nop
xchg
mov
jmp
and
adc
push
sub
xchg
push
jae
sub
mov
pop
pusha
pop
fwait
lret
inc
cltd
cmpsl
inc
daa
jle
sub
push
jle
mov
test
ja
movsl
xchg
pop
pop
loopne
or
and
and
mov
or
xor
jbe
mov
sbb
or
cltd
pop
lea
enter
sub
test
xlat
hlt
shll
mov
mov
aaa
fs
pop
jnp
xorl
filds
rorb
pop
mov
push
sbb
imul
xorb
inc
incl
jo
or
pop
call
push
lea
mov
xchg
adc
add
cmpsb
or
xchg
pushf
test
lock
sub
mov
adc
movsb
xchg
sub
rcrb
ljmp
add
call
mov
cs
xchg
mov
jecxz
adc
inc
fwait
pop
mov
jp
pop
lcall
dec
jo
and
ret
sbb
imul
mov
cmpsl
xchg
xor
pop
add
mov
jge
mov
xchg
mov
adc
cmpb
mov
or
lods
lods
fdivs
add
stos
scas
dec
mov
pop
lcall
xor
sub
test
or
add
sbb
sub
xor
shll
and
gs
mov
inc
jg
pop
pop
sub
pop
std
call
mov
daa
movsl
shll
movsb
inc
lock
int
sub
mov
xchg
dec
xchg
and
inc
jl
insl
fwait
ss
sarl
shrl
push
call
popa
mov
or
push
cmp
mov
lea
or
lret
jp
dec
jno
jno
lock
xor
jecxz
popf
loope
lret
lahf
enter
sub
adc
and
push
cld
outsl
or
dec
clc
fdivrl
bound
dec
mov
xchg
in
push
sub
out
push
or
push
incl
into
mov
shl
xor
dec
xor
cmp
sub
jae
cmp
mov
gs
fmul
je
out
adc
inc
mov
lcall
pop
aas
mov
jg
pop
push
cmpsl
les
pop
xchg
andl
ljmp
cmp
or
out
stos
fs
or
insl
or
orl
pop
mov
or
add
aam
or
jbe
ds
sbb
and
xor
adc
enter
adc
in
subl
shlb
add
cmpsb
mov
popa
dec
or
in
fisubrs
xor
and
loopne
inc
mov
pop
into
ret
jne
cs
pop
pusha
dec
fs
or
and
mov
pop
filds
sahf
mov
dec
movsl
lret
shlb
xor
fcmovbe
or
fdivrp
xchg
add
cmpb
pop
mov
xor
mov
inc
call
fnstenv
hlt
mov
mov
mov
xchg
andb
jae
adc
negb
ljmp
push
stos
add
repz
and
push
push
mov
stos
test
jo
sub
ffreep
out
adcb
js,pt
mov
aaa
xchg
outsl
and
aas
jno
jle
lret
mov
int3
loope
mov
cmp
xchg
xchg
sbb
dec
jb
ss
add
pop
dec
ror
or
push
addr16
jno
mov
in
bound
add
sub
outsb
xor
or
stos
dec
pusha
adc
xchg
test
in
push
in
push
loope
cmp
sbb
clc
xlat
inc
testb
cli
inc
test
push
int3
push
int
dec
daa
das
int
jae
dec
and
lahf
xor
shrl
adc
aas
andb
push
imul
neg
mov
jecxz
pop
test
add
dec
mov
adc
jo
mov
mov
das
jmp
sbb
cmc
stos
outsl
mov
or
mov
addr16
clc
inc
push
in
sub
int3
sub
pushf
and
mov
xorl
sbb
outsl
inc
push
dec
sub
stos
mov
repnz
push
mov
sbb
negl
jnp,pt
jle
mov
push
mov
in
insl
js
cmpsl
imul
mov
pop
insb
in
outsl
pushf
lods
and
shlb
sub
inc
je
push
pop
scas
icebp
cmpsl
repz
xchg
int3
leave
rorl
xchg
ds
lahf
push
cmpsl
push
repz
movsb
push
dec
fidivrs
cmp
bound
imul
dec
into
sbb
mov
jae
xchg
jmp
lods
pop
iret
inc
xchg
push
lret
sbb
lods
fnop
jecxz
push
ds
fs
into
mov
into
fs
leave
jge
ss
and
testl
mov
jl
mov
cmp
xor
fs
sub
jno
inc
insl
or
outsl
and
leave
data16
push
inc
int
sahf
xor
arpl
xor
mov
cmp
pop
icebp
bnd
pushf
mov
dec
dec
mov
jo
es
mov
mov
das
add
cmpb
xor
cmp
rorl
dec
push
fsubr
cmp
add
jne
jmp
icebp
int
lods
xor
xchg
out
mov
ljmp
outsl
repnz
pop
jg
push
inc
lea
xor
neg
insl
fnsave
stos
cmpsl
and
into
arpl
gs
pop
push
cmp
inc
fdivrp
mov
mov
imul
sarb
jmp
mov
fwait
lret
dec
out
mov
mov
jnp
lds
mov
pop
lea
inc
test
lods
lret
test
xor
mov
jg
or
inc
inc
out
pop
mov
je
push
xor
or
sub
mov
dec
xlat
fsubs
mov
movsl
cmc
repz
je
cmp
xchg
xor
sbb
dec
mov
out
pop
in
inc
icebp
enter
mov
faddl
xchg
jnp
pop
iret
hlt
sub
jae
sbb
sbb
aad
es
lret
and
shrb
clc
imul
les
dec
mov
mov
shll
test
mov
inc
add
ja
jp
xlat
out
jb
popa
jb
in
or
push
dec
cmp
fs
xchg
or
push
jns
jns
scas
push
add
pop
or
cmpsl
or
pop
adc
jmp
adc
lock
push
xchg
xchg
mov
mov
lods
stc
daa
imul
dec
jg
jns
mov
jne
outsl
jg
imul
out
pop
xchg
sbb
int3
in
ror
in
fnstsw
add
or
int
push
jle
cmp
mov
lret
leave
hlt
jecxz
adcb
jge
iret
and
popf
pop
stos
adc
inc
je,pt
jne
xchg
xchg
imul
mov
dec
mov
pop
das
add
out
xchg
cltd
lcall
je
pop
jge
and
repz
ja
jge
cwtl
mov
fldenv
imul
mov
dec
xchg
sub
and
dec
decl
es
sub
adc
fidivs
lcall
decb
cli
add
lock
sarl
jge
cltd
aam
cli
pushf
jecxz
stos
cltd
jae
cmc
rorl
xchg
test
jge
mov
push
cmp
mov
out
mov
ja
lods
push
xchg
sub
shr
jns
mov
mov
fldt
pop
es
inc
int3
subl
xchg
test
jns
arpl
jb
inc
mov
and
push
sbb
mov
mov
rcll
jno
cmpsl
call
pop
cwtl
mov
sub
insl
fwait
loope
jnp
cmp
jb
hlt
mov
lock
mov
sub
outsl
inc
xchg
adc
std
pop
pop
mov
movsb
sub
add
inc
scas
fwait
lods
js
mov
aaa
cmp
insl
clc
outsl
hlt
sub
mov
lret
mov
cmpsb
cmp
scas
dec
jnp
mov
jnp
mov
dec
daa
clc
mov
pop
in
inc
dec
mov
xor
mov
dec
xchg
push
rcrb
sbb
sbb
sbb
jecxz
in
sbb
pop
bound
jae
cmp
mov
cld
xchg
rorl
xchg
add
adc
movsb
stc
or
popf
mov
lea
call
mov
jns
sbb
cmp
mov
out
xchg
loop
sbb
je
inc
push
xorl
push
sub
push
adc
mov
lds
imul
clc
enter
fistpl
in
bound
jle
sub
mov
mov
pop
fcomps
fisttpl
shlb
mov
dec
sbb
call
or
pop
icebp
iret
pop
push
xor
enter
jg
mov
shll
out
aam
pop
sub
cmpb
jl
std
ds
cmc
jne
das
sbb
push
mov
insb
rcrl
daa
sub
jge
mov
movl
jno
insl
movsb
pop
xlat
push
cli
add
adc
ja
std
dec
sbb
ja
cmpsl
cmc
ss
cmp
fs
pop
out
sahf
push
in
and
stos
and
cmc
mov
cmp
cmp
sub
inc
jecxz
pop
hlt
rcl
jg
je
insb
cmp
pop
jae
cwtl
lods
and
dec
mov
fmull
int3
mov
out
fcmovnu
and
lods
popl
push
mov
int
icebp
pop
and
mov
mov
movsl
sbb
jecxz
jno
imul
jge
shr
test
mov
mov
repz
test
subb
or
and
out
inc
std
xlat
fcoms
fstl
and
mov
hlt
fnsave
xor
test
push
je
pop
or
imulb
ljmp
dec
adcl
push
push
mov
fs
sub
push
cmp
xor
nop
xorl
sti
xchg
mov
adc
mov
mov
jns
mov
jo
mov
fistpll
dec
and
scas
mov
sbb
mov
dec
pop
fnstcw
or
mov
push
in
mov
lds
push
sub
call
aad
pushf
addr16
push
pop
dec
scas
or
or
pop
shll
rcrl
push
stc
test
mov
adc
aad
push
das
xchg
mov
push
in
cmp
cmp
pop
cmp
mov
in
dec
inc
daa
adcb
loope
leave
and
push
mov
cwtl
xor
xor
mov
mov
das
fistps
sbb
movb
pop
aam
jmp
cltd
xor
das
inc
lcall
addr16
xchg
int
jnp
mov
pop
jmp
aas
ficoms
movsb
ljmp
mov
fucom
pop
outsb
sbb
mov
sbb
stos
and
sub
jnp
xor
pop
mov
push
mov
xor
xor
sbb
sub
add
je
shl
out
cmp
mov
into
out
sub
adc
movsl
pusha
ds
mov
dec
int3
push
and
gs
cmp
jbe
jne
movsl
fwait
xor
jns
nop
stos
lcall
mov
xchg
sbb
rcrb
mov
in
mov
or
mov
xlat
push
enter
insl
dec
fdivrl
aas
dec
xchg
pop
xor
aas
push
mov
rcrl
ret
rclb
in
add
int3
dec
mov
outsl
xchg
les
sbb
pop
xor
into
xlat
rorb
push
mov
hlt
cmpsb
inc
ss
push
mov
xchg
pop
outsl
or
ja
mov
add
xchg
cld
jnp
ljmp
gs
cwtl
test
push
les
push
setle
inc
test
inc
rolb
scas
adc
and
sub
mov
rorb
and
fcompl
aaa
pop
shrb
dec
into
imul
fcom
cmp
stos
inc
das
test
daa
and
addr16
mov
lret
push
sbb
movsb
xchg
cmpsl
das
push
xorb
in
xor
icebp
lcall
loop
in
xchg
xor
inc
gs
sub
lods
cmpl
hlt
pop
gs
pop
in
dec
je
mov
adc
mov
les
cmp
xchg
sahf
ja
xor
add
adc
sbb
icebp
mov
sub
push
xchg
dec
int3
pop
jno
js
imul
enter
xor
sbb
xchg
xchg
xlat
addl
popa
push
jp
pushf
push
test
or
pop
sahf
movsl
adc
xlat
test
and
cmp
jge
add
test
xchg
movsb
dec
push
nop
mov
rcrb
lcall
xor
push
loop
jo
shrb
icebp
mov
jnp
xchg
push
mov
sbb
mov
fnstcw
cltd
bound
xchg
xor
xchg
ds
repnz
flds
mov
dec
hlt
ja
xchg
or
xchg
push
cmp
pusha
mov
xor
jge
test
jb
arpl
mov
sbb
and
sub
sahf
leave
rcr
loop
out
lcall
in
jb
cmp
push
inc
stos
js
jbe
lods
repnz
sub
pop
aam
sbb
out
or
add
cmpsw
rclb
lea
cmp
adcl
dec
pop
and
cmp
jge
ret
push
aaa
xchg
cmp
mov
mov
sbb
push
mov
popf
xor
jno
dec
es
je
in
mov
fsubrl
cltd
or
adc
jp
inc
rorl
mov
push
xor
testl
adc
sub
scas
sub
je
pushf
mov
repz
inc
sbb
sub
add
popa
xor
mov
dec
inc
out
inc
jbe
mov
or
rorl
bound
pop
lcall
sar
dec
jp
sbb
in
xchg
out
cmp
imul
dec
fsubl
pop
lock
sbb
xchg
incb
adc
sbb
enter
loopne
xchg
pop
cli
pop
or
stos
sbb
imul
xchg
imul
cltd
mull
fldcw
hlt
sahf
jecxz
sbb
push
xchg
imul
mov
insl
lock
jno
sub
and
jo
mov
xor
xor
test
push
ret
sbb
fidivrl
inc
ret
ljmp
dec
mov
and
pushf
test
fwait
outsl
fldcw
icebp
mov
jl
xchg
outsb
movsl
in
lahf
ja
push
aaa
push
jecxz
mov
mov
mov
sbb
xor
xchg
adc
addr16
fildl
int3
inc
add
pop
xchg
and
clc
pop
xor
repz
cmpsl
mov
cld
xchg
fstps
mov
fwait
cmc
push
add
cmp
lret
and
mov
out
pop
mov
daa
mov
sub
lods
loop
enter
test
cmc
mov
cmp
jge
pushf
call
inc
dec
xchg
sbb
mov
mov
dec
out
add
mov
inc
xchg
popf
movb
xchg
pop
xlat
addr16
and
popl
cmc
daa
shlb
or
fdivrl
and
jle
inc
xor
cmpsl
or
fimuls
mov
xchg
lock
jnp
cmpl
sarb
arpl
mov
daa
push
lret
das
inc
test
imul
loop
mov
divb
std
aaa
cmpl
cmpsl
fcompl
call
ret
xchg
lcall
mov
inc
sbb
outsl
aas
std
sbb
insl
push
movsl
jp
int3
repnz
pop
adc
mov
mov
and
jl
subb
pop
mov
sbb
dec
fnstcw
mov
dec
push
sti
pop
jb
or
test
cltd
je
mov
ja
insl
mov
inc
mov
das
ja
js
clc
ret
out
dec
mov
cli
inc
mov
je
pusha
cltd
dec
xchg
adc
data16
test
sbb
add
cmp
cmp
adc
dec
notl
xchg
lcall
mov
pop
aad
std
push
fistpll
sub
mov
in
es
sub
xchg
jne
or
adc
dec
or
out
mov
mov
repnz
in
or
dec
div
mov
xchg
sub
lods
jg
loope
add
xor
addr16
adc
xchg
pop
jns
cld
jmp
and
inc
repz
jp
sub
cli
cmp
cmc
adcl
je
insl
out
xchg
jle
inc
insl
fcmovb
dec
jmp
sbb
dec
or
addr16
outsb
push
popl
and
sbbl
cmp
push
sub
ja
lock
popf
lret
adcb
dec
daa
lock
mov
gs
dec
jp
push
clc
bound
dec
sti
sub
inc
ret
lea
mov
js
sti
test
jge
int3
adc
jne
cmp
cmp
jae
xor
sbb
dec
inc
arpl
imul
or
xlat
cmp
sub
test
stos
mov
and
add
or
pop
gs
loop
xchg
dec
cltd
nop
cmc
push
ja
subl
xlat
push
mov
pop
sbb
aaa
xchg
icebp
or
push
or
sbb
sub
popf
add
imul
fyl2xp1
in
fstpt
outsl
shrb
rcl
dec
jne
adcb
inc
int3
pop
and
xlat
add
fisubrl
cwtl
xor
lods
insl
sahf
testl
test
adc
shl
inc
outsb
xor
loopne
dec
rol
pop
jg
fcmovnbe
movsl
lcall
mull
lock
push
sbb
push
mov
imulb
fisubl
pop
or
imul
call
xor
cs
xchg
out
and
adc
es
aad
cmp
aas
icebp
fbstp
and
repz
sub
xchg
push
pop
gs
ljmp
xchg
addr16
jmp
cs
pop
jo
mov
es
loope
rcll
div
shl
mov
push
pop
xor
popf
fsubrs
test
dec
lock
aas
lea
and
push
movsb
lds
add
pop
mov
into
mov
xchg
push
xlat
cmp
jns
std
je
mov
test
out
jno
sub
push
sbb
cmpsb
mov
mov
shl
aam
xchg
jmp
adc
pop
mov
or
test
loope
push
cmp
or
pop
xchg
mov
enterw
and
push
js
es
and
adc
ret
and
negl
dec
pop
jp
mov
sti
or
dec
mov
mov
mov
fucompp
inc
mov
mov
add
add
jns
iret
mull
cltd
les
pushf
mov
mov
push
sbb
jo
cmp
lods
pop
imul
jno
pop
pop
daa
lret
cmpsl
in
push
cmpsb
in
push
lods
push
inc
xor
jge
add
test
fsubrs
mov
jb
testl
lds
std
pop
addr16
jno
gs
int3
pop
mov
cmc
sub
dec
mov
je
cmp
cwtl
mov
dec
repz
pop
jne
cli
test
xor
fidivrl
scas
mov
or
cmp
pusha
ljmp
mov
lret
xchg
daa
data16
mov
xchg
and
adc
scas
iret
pop
sbb
adc
adc
push
inc
lcall
vmread
iret
or
lods
pop
dec
cmp
xor
xchg
imul
and
repnz
stos
xchg
xchg
mov
nop
lahf
inc
dec
out
ja
fstl
pop
dec
icebp
xchg
pop
insl
fmul
cli
pop
sub
inc
jecxz
and
mov
inc
or
stos
lea
icebp
sub
adcb
int
xchg
rorl
add
inc
xorl
dec
sub
sahf
inc
add
jae
std
mov
outsb
jmp
xor
inc
dec
jecxz
pop
xchg
mov
push
or
pushf
imul
outsl
or
aam
jno
in
cmp
aam
xor
push
add
xchg
inc
ret
pushf
cs
pop
cld
arpl
jmp
jno
mov
sbb
sti
xchg
cwtl
mov
mov
mov
sbb
fs
lock
add
movsl
jo
and
or
ds
dec
adc
icebp
mov
mov
mov
push
cmp
cld
push
popf
xchg
xor
loope
iret
mov
fimull
push
scas
mov
xchg
repz
dec
mov
clc
sbb
daa
cld
imul
add
xchg
inc
xchg
out
jp
sahf
data16
call
ja
jae
cli
jns
inc
fs
adc
es
adc
push
mov
rclb
or
js
cmpl
push
subb
dec
notl
mov
sahf
sbb
dec
mov
pop
xor
xlat
pop
xchg
movsb
mov
gs
ss
mov
cmp
add
xor
daa
mov
dec
pushf
dec
dec
mov
dec
xor
scas
scas
idivl
cmp
or
mov
mov
orb
pop
mov
enter
test
das
pop
xor
fmul
mov
scas
cmp
or
jns
stc
jae
adc
add
in
dec
inc
push
dec
testb
insl
push
push
mov
movsl
rorb
and
adc
shrb
int3
dec
fidivs
pop
test
mov
jg
aaa
push
and
adc
lret
int
test
lods
add
es
mov
ficoml
clc
and
dec
jmp
sub
iret
roll
js
out
bound
cmpsl
icebp
pop
sbb
in
xchg
xchg
dec
movb
xchg
xchg
mov
out
mov
dec
push
pop
adc
dec
iret
popa
sbb
push
mov
pop
pop
push
arpl
lret
sub
push
mov
ss
ret
xchg
popf
inc
or
cmpsb
aaa
cmp
adc
in
test
mov
push
cld
daa
cmp
mov
sub
xor
mov
xor
and
or
push
and
fdiv
xlat
data16
mov
jl
adc
push
rol
pop
lea
mov
loopne
mov
hlt
jae
and
jge
mov
pop
cltd
call
adc
or
ja
inc
pushf
xor
daa
xor
mov
fwait
mov
std
ja
and
lock
mov
lods
pop
and
sub
rol
cmp
pop
in
mov
mov
movsb
jecxz
xlat
les
ret
negb
icebp
cmp
sbb
xchg
jbe
ret
clc
outsb
iret
mov
xor
and
mov
dec
bound
push
movsb
or
or
rcll
mov
or
stos
pop
and
sbb
adcl
pop
shrb
mov
lahf
notl
lret
mov
cmp
push
jge
pusha
mov
das
mov
push
lret
movl
rolb
cmp
mov
dec
arpl
test
lods
movsb
lods
cmp
daa
ret
sub
pop
mov
adc
jle
pop
addl
loope
mov
or
mov
inc
in
dec
std
xchg
and
popf
rclb
xor
popa
and
fnsave
xor
imul
add
cmp
jne
push
je
sub
pushf
pop
int
in
or
lahf
icebp
mov
test
aad
les
insb
out
daa
cmp
sub
rorl
imul
out
pop
sbb
push
outsl
sbb
scas
push
adc
arpl
js
adc
les
and
mov
mov
mov
and
ret
lock
mov
dec
sub
sarb
fcmovbe
jae
fs
xchg
mov
sub
sub
dec
push
and
sbb
adc
mov
bound
dec
sub
and
lcall
jo
test
inc
mov
not
scas
insb
test
mov
test
pop
push
pop
push
inc
out
pcmpgtw
sbb
aam
inc
xchg
mov
rorb
mov
scas
dec
dec
bound
pop
stc
loope
push
aad
jbe
push
imul
jbe
cmp
repz
bound
test
out
stos
inc
xchg
repz
push
or
in
outsb
stos
lods
fisubl
mov
jp
push
push
rorb
xchg
lahf
push
lods
dec
mov
aad
in
and
mov
sub
lret
bound
filds
adc
in
xchg
pop
sahf
adc
push
xor
mov
pop
pop
push
sub
rorl
mov
mov
ret
xor
popa
pop
dec
jae
lods
jo
jo
lcall
int3
orb
divl
negb
addr16
mov
xor
mov
adc
data16
lea
int
dec
jns
and
out
xchg
lods
xor
mov
pop
jmp
add
ret
inc
addr16
push
mov
sbb
push
mov
sbb
leave
stc
add
pop
ss
call
cmp
testl
inc
jg
inc
sub
or
fdivr
mov
cld
sbb
nop
hlt
xor
shrb
enter
test
test
jmp
and
cmpsl
imul
pop
inc
sbb
dec
not
dec
adc
mov
ss
sbb
in
lods
add
cmp
mov
inc
js
add
out
sti
dec
push
push
adc
movsb
mov
sbb
fwait
dec
stos
aas
dec
sahf
std
or
mov
hlt
loope
cltd
int3
add
mov
push
outsb
cltd
adc
cltd
or
or
cmp
sbb
mov
aas
gs
push
cmp
sub
sub
or
inc
lret
out
mov
lret
sub
call
jnp
add
or
add
ds
sti
add
dec
adc
testl
dec
adc
adc
push
loope
ds
and
mov
add
xchg
jl
sub
pusha
daa
sub
into
mov
std
adc
call
xchg
push
je
nop
lea
pop
enter
jbe
dec
lret
ljmp
jns
xchg
xchg
cmp
and
fadds
mov
test
jns
cmp
iret
les
je
and
cld
in
in
movsl
mov
sbb
push
mov
rorb
leave
sahf
aaa
push
xor
in
inc
jb
dec
sub
push
pop
jbe
dec
scas
jns
cli
arpl
push
mov
and
mov
xor
pop
scas
mov
and
stos
adc
lret
jo
add
sub
lock
push
mov
stos
inc
and
mov
jle
sbb
jmp
mov
scas
pop
clc
das
js
push
shl
repnz
mov
pop
outsb
and
stos
sbb
sub
ljmp
ret
out
add
xor
sub
mov
push
cs
mov
mov
push
lret
sahf
loope
divl
lea
hlt
arpl
xchg
daa
add
hlt
or
inc
outsb
loop
or
inc
dec
mov
xor
cmp
xor
out
ret
adc
pop
pop
sti
test
mov
push
imulb
sbb
adc
ljmp
mov
pop
sbb
sti
sub
add
das
scas
repz
pusha
adc
cmp
ret
or
test
cltd
ja
and
xchg
jmp
fwait
pop
push
jmp
dec
xchg
xchg
or
xor
mov
movsb
pop
mov
inc
pop
lds
aad
test
out
sub
inc
fldl
je
imul
out
jle
jns
or
push
mov
jge
or
popa
dec
push
jbe
push
add
pop
ds
sub
xchg
sbbb
idiv
rcrl
stos
push
push
xchg
mov
stos
insb
adc
mov
mov
pop
fdivrl
jno
into
ret
repz
or
inc
in
loop
test
idiv
out
pop
mov
mov
add
xchg
cmp
adc
dec
out
fildl
rdpmc
mov
mov
insb
xchg
ss
inc
mov
sbb
push
adcb
dec
scas
fdiv
inc
jmp
mov
test
jp
dec
or
int
ret
aas
push
in
std
mov
addr16
imul
test
push
inc
xor
and
push
icebp
mov
rorl
daa
lret
test
lret
jmp
out
fimull
js
push
outsb
pop
sub
fbstp
xor
lea
roll
cmpsl
dec
lcall
lds
inc
xor
movl
add
ljmp
jg
jno
xor
mov
jl
push
lret
or
insb
cmpsb
in
and
shl
jecxz
lret
dec
and
dec
repnz
mov
jne
mov
fidivrl
xchg
neg
fidivl
iret
fstps
ret
sub
jecxz
push
fdivrl
lahf
sbb
mov
shrl
inc
xor
pop
inc
js
mov
gs
push
or
mov
idivl
push
pop
lods
insl
mov
lea
std
dec
add
xor
shrl
or
test
aam
cmc
arpl
cmp
mov
outsb
sahf
xchg
jecxz
xor
mov
fldcw
cmpsb
es
jno
daa
addb
test
mov
pop
pop
mov
mov
clc
pop
cmpsl
xchg
in
rclb
and
out
pop
cmp
aam
pop
xchg
mov
stos
test
test
xchg
jbe
push
jo
fwait
xor
sbb
xor
push
inc
ret
dec
cld
mov
mov
or
es
adc
push
shll
xlat
adc
mov
sub
andl
fisttpl
lret
push
push
inc
inc
cld
push
fnstenv
and
push
cmp
adc
iret
dec
repz
repz
pusha
cmp
inc
in
test
mov
lea
jecxz
repz
shll
imull
add
fcompl
push
xchg
clc
imul
test
mov
mov
mov
cmpsl
push
cli
jmp
in
repz
jbe
adc
push
in
mov
test
mov
pop
push
dec
xor
mov
test
add
mov
loope
insb
test
in
jecxz
and
das
mov
ds
and
pop
xchg
and
xor
pop
cmpsb
loope,pt
test
leave
movb
or
pop
mov
cmp
data16
outsb
adc
xorb
dec
sub
fcmovne
mov
lcall
hlt
push
pop
jp
pop
cmpsl
push
and
push
in
pop
mov
mov
movsb
fwait
out
cmp
mov
test
lret
sbb
outsl
ret
sbb
push
jmp
fistps
ljmp
add
push
mov
pop
pop
fbld
push
imul
mov
pop
cwtl
cmpsb
repz
adc
jg
jnp
idivb
fidivrl
push
int
mov
out
or
fs
cmp
xchg
ljmp
mov
push
and
pop
icebp
add
cmpsl
jo
sbb
and
add
sbb
cli
ret
jns
loopne
jo
sbb
mov
jmp
das
mov
test
dec
aam
mov
push
push
sub
jl
aad
xor
xchg
ficomps
or
pop
sbb
sbb
ss
enter
and
dec
aam
adc
scas
xor
cmp
cli
mov
into
pop
insl
imul
add
out
mov
push
dec
dec
repnz
pop
push
aad
xor
lock
into
cmpsb
pop
adc
shll
pusha
pop
test
sbbb
sbb
ljmp
outsl
enter
mov
out
adc
jecxz
loop
roll
cmp
mov
lcall
mov
push
adc
mov
cmpsb
dec
pop
xchg
xchg
fs
out
xchg
aaa
rcrl
nop
dec
inc
scas
sbb
add
adc
sbb
call
or
sbbl
jae
or
fisubrs
push
jle
inc
push
cmp
inc
pop
adcl
ret
dec
loope
sbb
mov
popa
pop
idivl
jmp
xchg
call
popf
inc
lcall
pusha
cwtl
or
mov
jp
add
jbe
insl
cli
fwait
add
xchg
cld
pop
loop
push
or
pop
mov
leave
mov
xchg
rolb
mov
cmp
xchg
cmpsb
pop
adc
dec
push
xor
cmpsb
stos
lock
and
mov
test
mov
pop
popf
xchg
push
rorb
jno
dec
scas
sub
adc
mov
fs
jns
ficoms
cltd
das
outsl
mov
mov
arpl
icebp
dec
jo
out
push
in
insb
lcall
jmp
mov
or
and
adc
pop
sbb
jns
inc
daa
fwait
add
popa
ret
movl
sub
in
rol
dec
sbb
pop
mov
sbb
cmpsb
add
or
loope
xor
call
xchg
insb
out
loope
fcoms
mov
fadds
sbb
push
dec
into
jmp
ss
sub
popa
adc
jp
mov
cmpsl
mov
arpl
scas
adc
shl
mov
outsb
dec
sbb
add
xlat
jae
or
push
adc
mov
hlt
mov
pop
sub
jae
add
xorb
fsts
repnz
cmp
cmc
and
jp
inc
push
cltd
cmovo
mov
xchg
fld
add
stos
sub
into
incl
ja
mov
insb
mov
push
sub
pop
jle
ffree
cmp
in
mov
je
sub
in
je
xorb
mov
fdivrl
dec
dec
jecxz
imul
and
pop
or
jb
jmp
rcl
fsts
cwtl
dec
leave
pop
dec
les
cltd
or
or
les
push
jmp
cmp
xchg
rcll
dec
push
add
shl
jle
xor
xchg
dec
stc
push
mov
push
jecxz
push
add
aam
and
aad
xor
and
xor
insb
arpl
jb
and
fwait
jmp
cwtl
movsl
rorl
cli
xchg
loopne
adc
xor
out
nop
leave
lds
pop
int
ficomps
sarl
icebp
pusha
mov
ret
sub
mov
int
cwtl
jge
cwtl
add
cmpsb
add
jmp
xor
add
xchg
test
sbb
ss
push
scas
jmp
cmp
fdiv
stos
aas
sar
lahf
adc
lahf
push
lcall
scas
jl
xlat
push
and
inc
lcall
inc
mov
pop
imul
mov
inc
hlt
jne
shl
das
sbb
jle
out
scas
mov
mov
pushf
pop
popa
push
pop
out
test
cmpsb
iret
jge
dec
ljmp
xchg
cmp
fwait
add
cmp
je
outsb
insb
cli
popa
lret
hlt
mov
test
mov
pop
sub
clc
xor
jge
sub
ficoml
loope
jnp
or
cltd
stos
xchg
push
scas
std
insb
jge
mov
mov
sub
cmpb
lds
les
and
sbb
cmp
enter
jbe
push
sub
fwait
mov
and
cmovge
cmp
xchg
test
je
pop
dec
dec
mov
mov
xchg
sbb
sbb
aam
aaa
fisubs
inc
fstp
mov
push
in
nop
jl
leave
push
mov
insl
sub
jmp
test
mov
pop
mov
adc
je
pop
cmpb
enter
mov
ja
dec
outsl
aas
sub
mov
outsb
push
push
ret
mov
mov
fwait
adc
movsb
fistpl
jp
cs
leave
cmp
iret
leave
dec
cmp
mov
adc
adc
shr
rcrl
xchg
js
push
fildl
or
push
xchg
hlt
sbb
into
or
ror
lock
fdivr
push
aaa
scas
cmp
lods
dec
and
inc
or
outsb
fistpll
inc
bound
adc
lahf
in
xlat
fstl
mov
cmpsb
inc
repz
dec
or
fidivrl
fistpll
dec
sub
pop
mov
and
and
in
xorb
pop
test
push
xchg
icebp
sar
or
ficoml
int3
and
xchg
mov
iret
xchg
push
popf
xor
call
outsl
push
xor
pop
xchg
sub
ret
cmpsb
dec
xor
xchg
push
cltd
mov
in
rorb
adc
or
cwtl
out
sub
imul
fdivs
inc
pop
daa
popa
jg
mov
xchg
mov
fisubl
cmpsb
mov
nop
fstl
cmp
adc
test
lea
in
std
mov
rclb
iret
mov
mov
xchg
jb
fisttps
cmp
sbb
xor
push
inc
xchg
sub
repnz
mov
xchg
test
dec
faddl
cmpsb
cmc
hlt
bound
das
ret
lret
lret
inc
divps
sbb
aaa
fnstcw
movsb
xchg
in
cwtl
and
cmp
inc
cmpsl
testb
orb
pop
push
ss
out
jnp
daa
push
jae
xchg
daa
lahf
add
push
mov
into
or
lods
mov
hlt
cs
stos
js
adc
cmpsl
adc
out
lods
push
pop
imul
push
cs
or
jl
sbb
jle
pop
rcll
inc
xchg
mov
nop
testb
clc
pop
stos
out
jg,pt
fdivs
dec
mov
test
adc
mov
hlt
sbb
es
mov
ficoml
ljmp
std
cld
mov
lret
test
inc
scas
sbb
cld
mov
testl
dec
lret
or
lock
je
xlat
xor
scas
pop
out
fsts
lods
xchg
iret
adc
imull
lods
clc
sbb
or
sbb
mov
sbb
jp
ljmp
pop
cld
inc
test
mov
or
mov
pop
lds
repz
cltd
sahf
out
inc
jno
jge
pushf
jecxz
pushf
xchg
pop
aaa
movsl
sub
and
pop
lcall
pop
push
clc
call
cmp
mov
aam
icebp
ja
xchg
pop
xchg
in
cmp
push
push
stos
sub
out
lea
push
sbb
push
loopne
pop
push
jns
arpl
movsl
test
fdivrp
pop
mov
pop
stos
gs
and
sbb
bound
insl
mov
addl
add
push
inc
cmp
add
ss
cli
mov
fbld
push
dec
add
daa
pop
shll
sbb
mov
jbe
arpl
dec
sub
ljmp
imul
pushf
push
outsb
fwait
fs
mov
cmc
sahf
cmc
mov
jne
int
jmp
pop
or
lods
pop
jl
loope
lods
pop
push
sbb
add
and
mov
push
bound
and
mov
or
push
inc
clc
scas
mov
xor
mov
rorl
test
and
jmp
mov
xor
fistps
outsb
pop
and
fisubrl
xor
or
jmp
push
push
xor
pop
xchg
mov
jge
decb
rolb
out
add
mov
mov
dec
push
pusha
add
or
mov
cmp
ret
adc
dec
nop
pop
ja
or
and
or
cmp
mov
xchg
jecxz
add
in
mov
fs
sti
lds
fs
rclb
cmp
outsl
add
call
and
in
mov
out
push
jmp
call
dec
enter
lcall
mov
mov
stc
int
fcomps
sbbb
orl
mov
mov
iret
jbe
movl
test
add
jecxz
dec
pop
xchg
cmpsl
cmpsb
pop
outsb
dec
jnp
xchg
mov
sbb
adc
fcomps
inc
leave
inc
adc
fs
adc
jb
push
lds
xor
jl
sbb
add
add
bound
xor
dec
add
cmp
jns
in
xchg
lret
ret
push
sub
mov
add
out
inc
dec
mov
xlat
dec
jmp
add
or
pop
bound
sub
cmp
cmp
fsub
int
ss
insb
xchg
push
pop
pop
sub
sti
jl
bound
test
addl
fsubl
les
add
cmp
dec
cs
xor
stos
sub
or
sub
push
cmp
cmp
daa
out
stos
mov
sbb
sti
xor
push
out
cmp
incl
sub
mov
loopne
xchg
mov
jle
sub
cmp
cmc
jb
sbbb
fbstp
jb
aas
fsubrl
rcll
inc
adc
add
arpl
inc
mov
add
mov
inc
inc
frstor
sarb
sbb
add
sbb
sbb
or
ja
xchg
push
fisttps
push
jbe
inc
push
cld
out
sbb
test
adc
imul
fdivl
jno
or
xchg
iret
mov
outsb
std
mov
hlt
sub
dec
push
dec
arpl
mov
jo
push
scas
lahf
pop
rcl
fistpll
add
roll
push
jl
or
adc
imul
outsb
cs
xchg
xchg
cmpsb
or
pop
jge
pop
inc
cs
popl
cld
inc
cmp
call
pop
xlat
and
int3
aam
or
aas
xor
jecxz
push
and
outsb
xor
sti
xchg
mov
in
pushf
repnz
inc
repnz
mov
sub
pop
push
mov
cmp
push
lods
xchg
inc
mov
jne
xor
clc
adc
fcoms
cltd
lods
call
out
or
movb
sbb
sub
pop
insb
wrmsr
jp
stos
mov
xchg
push
int
orb
adc
xor
push
lods
jno
stos
out
ds
movsl
push
sbb
add
es
pop
sbb
adcl
push
cmc
cld
cmp
push
and
adc
sub
adc
mov
leave
push
adc
arpl
in
inc
and
arpl
outsl
and
or
dec
dec
xor
inc
ret
push
addr16
cli
ret
jae
out
shll
ret
add
lods
aad
fdecstp
imul
mov
aam
or
add
in
push
inc
arpl
repnz
jns
add
xchg
add
out
adc
out
mov
aaa
fmul
cmp
sub
xorl
mov
jne
push
push
cmpsl
xor
cmp
add
inc
imulb
test
sbb
jmp
orb
xchg
dec
adc
int
cmp
jl
mov
in
mov
mov
jae
cmc
int
xlat
lods
push
jmp
adc
or
mov
cltd
out
js
mov
es
test
add
inc
fnstenv
sub
outsb
nop
dec
movsb
fs
ljmp
subl
ret
pop
jns
pop
sbb
push
push
lock
popf
insl
dec
mov
mov
jge
lahf
dec
sub
and
adc
clc
pusha
ret
lret
mov
data16
das
mov
inc
dec
lea
pop
lea
sub
add
mov
push
rcll
push
fsin
add
cs
push
neg
loop
mov
add
movsl
adc
iret
adc
add
aam
inc
pop
mov
add
aas
loopne
inc
inc
clc
fisttpl
sarl
pusha
scas
mov
movsb
dec
push
mov
or
dec
shrl
mov
aas
mov
test
or
idivl
cli
or
jecxz
dec
xchg
xchg
in
pop
or
adc
mov
andb
mov
cmc
mov
pop
outsl
mov
popl
jb
jno
xor
fstpt
aam
inc
inc
and
sti
fisubs
daa
mov
jmp
cmpl
and
and
jno
push
mov
inc
xchg
dec
dec
push
cltd
push
mov
dec
daa
mov
and
sub
jb
sahf
mov
das
jo
push
mov
sbb
add
cmp
push
cs
adc
mov
jle
add
inc
and
dec
push
xchg
mov
ret
icebp
out
jle
in
mov
xor
xor
dec
daa
fcom
adc
aas
imul
in
push
outsb
aaa
insl
fsubrp
adcl
stos
das
jmp
adc
pop
ss
mov
rcr
xchg
rcrl
push
and
cs
decb
es
loop
xchg
shrl
mov
lea
cmpb
ret
arpl
test
dec
sbb
pop
addr16
mov
testb
adc
xchg
popa
hlt
mov
mov
inc
xor
pop
add
or
ja
and
mov
push
mov
dec
pop
jle
jno
test
push
push
popa
jne
or
push
and
cmp
icebp
cmp
push
and
scas
pop
insl
cld
test
dec
mov
aas
mov
or
jo
test
jnp
outsl
clc
sbb
pop
jnp
or
xor
ds
inc
xchg
xchg
add
mov
mov
in
mov
push
inc
lahf
scas
test
lret
ret
inc
int3
cmpsb
sahf
sarb
addr16
mov
ds
test
shlb
pushf
lea
xor
std
inc
push
mov
inc
repnz
fsubrl
cmp
lcall
pushl
test
addr16
pop
filds
ja
lret
inc
mov
lds
pop
pop
test
shlb
shll
in
out
in
dec
and
jo
das
or
insb
ror
leave
mov
or
xchg
sti
mov
push
and
jp
fdivl
loopne
stc
jge
or
mov
out
push
fucom
cmp
aad
out
xchg
das
divb
inc
and
cwtl
pop
sub
adc
and
lcall
sbb
insl
adc
icebp
scas
pop
mov
incb
push
and
fsubl
ret
inc
dec
sahf
adc
lcall
lds
inc
scas
scas
decb
adc
sar
mov
pushf
call
out
cmc
push
dec
mov
mov
push
pop
ficomps
mov
inc
sub
in
rcrb
aas
vmovaps
pop
pop
mov
movsl
push
mov
pop
leave
mov
push
loop
jmp
aas
push
push
cli
push
sbb
rcrl
dec
out
gs
and
add
hlt
jp
jns
sub
leave
pusha
mov
lds
jne
inc
or
push
mov
pushf
mov
push
pop
mov
subb
cs
sub
mov
or
movsb
int
mov
ror
nop
ja
sbb
out
jecxz
sub
mov
pop
in
xor
es
jb
inc
push
inc
sti
enter
xor
jmp
pop
cli
out
sbb
cli
mov
inc
inc
mov
inc
push
pop
std
or
fldcw
mov
fstpl
sub
xchg
jb
fs
pop
xor
aaa
jg
mov
fwait
sbb
sub
lcall
cmc
fisubl
push
iret
addr16
cmpb
push
jne
add
aad
push
hlt
cmp
sub
and
outsl
mov
ret
aam
cs
cmpsb
cwtl
or
mov
ss
or
mov
mov
xor
mov
aas
dec
js
sbb
jle
mov
push
or
jno
sub
insl
mov
into
push
add
repnz
ret
int3
pop
aaa
pop
pop
jmp
stos
fiadds
xor
pop
xor
inc
sub
xor
lock
stc
lret
xor
rolb
mov
sub
mov
cwtl
xchg
xchg
and
xor
popf
cld
popf
xor
shll
out
inc
ljmp
popa
incl
pop
in
adc
dec
fwait
in
or
mov
lods
pop
mov
bound
test
inc
jae
dec
movsbl
cmpsl
fcomps
and
push
lret
imul
fwait
enter
cmpb
sbb
ja
sbb
xlat
bound
pop
div
pusha
sub
jg
ljmp
shl
dec
test
jecxz
pop
dec
cmpsl
sub
call
cmp
cli
push
or
xchg
inc
cmp
mov
addl
fcoms
int3
inc
add
pop
dec
mov
in
and
dec
dec
xorl
mov
das
adc
or
xchg
lahf
jp
outsb
mov
mov
andl
push
repz
sbb
mov
mov
cwtl
movsl
sbb
xor
pop
addr16
cmc
enter
das
out
and
mov
ret
xchg
mov
xchg
sysexit
loope
sub
cltd
mov
cmp
aam
es
and
push
inc
dec
jge
mov
adc
imul
orb
mov
ljmp
adc
xlat
lahf
test
mov
mov
mul
mov
stos
nop
jne
mov
pop
mov
mov
jl
or
rcl
add
fidivrl
cli
into
jno
insl
and
push
in
imul
hlt
mov
xor
icebp
mov
pop
fidivrs
fisubrl
test
pop
inc
movsb
mov
mov
lea
inc
stc
pusha
data16
lea
mov
xchg
in
jecxz
xchg
ss
sbb
xchg
inc
mov
pushf
xchg
cmp
xor
jg
test
fwait
inc
jo
xchg
jecxz
adcb
pop
and
jnp
aam
pop
sub
in
and
jne
xchg
mov
jnp
mov
cmp
test
push
cld
dec
fnstcw
fwait
iret
xabort
push
arpl
add
and
mov
xorb
loope
adc
pop
mov
mov
adc
mov
ficoml
cltd
sub
out
xchg
mov
pop
adc
sub
pop
aas
jmp
pop
jne
mov
inc
cltd
hlt
popa
gs
mov
mov
and
rolb
sbb
and
repnz
xchg
leave
xchg
stos
movsb
les
idivl
push
lock
sarb
popf
or
xchg
mov
cmp
or
hlt
imul
adc
and
mov
int3
sbb
inc
push
lret
xchg
js
inc
push
jno
lcall
in
push
scas
mov
shll
pop
cmp
dec
cmp
cmpsl
nop
pop
fmuls
or
fdivrs
es
icebp
pop
add
lea
jp
repz
pop
pushf
push
sbb
push
cwtl
mov
mov
js
lea
xor
xchg
jecxz
pop
in
jns
push
or
test
sbb
dec
fldl
mov
addr16
push
jge
mov
xchg
cmc
and
inc
mov
push
dec
jnp
xlat
or
incb
mov
cmpsl
mov
cmp
popf
in
mov
fistpl
pop
add
mov
push
mov
or
popa
jnp
cmpsl
pop
mov
jo
shlb
mov
pop
je
xor
jbe
out
repz
imul
fnstenv
and
jmp
add
sti
xor
and
push
fldenv
jo
popl
add
nop
in
lret
out
jmp
mov
das
mov
and
ds
inc
sub
jo
les
fs
sbb
sub
sbb
xchg
orb
jno
mov
push
adc
bound
sti
jle
lods
rcl
pop
inc
pop
and
sub
adc
jecxz
rclb
sar
testl
das
rorb
sbb
in
sbb
lds
arpl
and
push
dec
iret
mov
fnsave
scas
xor
mov
pusha
push
push
cmp
dec
jg
push
jge
out
addr16
cltd
push
pop
and
mov
int
ss
adc
inc
gs
jl
and
sahf
aad
mov
push
push
push
push
adc
cmp
adc
cmp
push
shrl
stc
addr16
roll
mov
les
scas
push
and
or
lret
add
pop
adc
ret
loopne
dec
aam
leave
imul
adc
adc
arpl
lods
and
push
sub
decb
xchg
mov
fs
test
xor
cltd
cld
iret
cmp
push
sub
popa
push
xchg
and
roll
sbb
mov
add
adc
aas
mov
int
rorb
push
outsb
stc
push
insl
sbb
and
jg
negb
arpl
mov
dec
inc
mov
sub
push
inc
mov
lods
adc
or
xlat
les
add
ror
cmpsl
xor
inc
in
sbb
mov
pop
sub
cmp
ds
ds
mov
xor
jbe
mov
aam
mov
jne
ret
cltd
pop
push
out
inc
stos
cmp
sub
fiadds
mov
inc
mov
jbe
mov
pop
int
xchg
pop
popa
loope
imul
fldenv
into
sbb
lock
divb
cltd
sti
add
cltd
xor
push
and
pop
adcb
mov
stc
dec
in
subl
stc
adc
fadds
cld
repnz
xor
out
push
mov
imul
test
inc
xchg
mov
faddl
pop
inc
mov
add
je
nop
sub
outsb
cmp
in
mov
mov
inc
scas
test
insb
push
mov
dec
adc
lea
popf
mov
xchg
loop
movsl
dec
mov
stos
es
inc
and
fstps
inc
lret
mulb
sti
ss
jmp
add
xor
fcoml
ss
scas
test
stos
loope
push
sbb
mov
cmp
fmull
mov
push
mov
outsw
jo
mov
xor
in
rol
stos
movsl
jb
les
pop
cltd
mov
js
loopne
push
lea
xor
fs
iret
in
push
xchg
sub
mov
inc
hlt
xlat
loope
fs
sub
and
add
push
xchg
push
pop
inc
mov
mov
dec
sbb
jbe
test
mov
adc
fimull
pop
push
addb
pop
test
xchg
arpl
test
out
xor
jae
push
jmp
dec
push
pushf
int3
mov
lock
jp
fbld
leave
jno
int3
mov
andb
push
ret
push
ss
sbb
add
adc
mov
push
cli
insb
mov
outsb
and
daa
push
fisttpl
cmp
popa
mov
push
xchg
inc
inc
lds
pop
bnd
insb
lea
inc
cwtl
clc
mov
or
dec
aaa
subl
cmp
xor
push
aad
xor
cmp
scas
cmp
outsb
adc
add
and
jg
push
fxch
int3
add
test
insl
incl
jnp
inc
push
mov
loope
into
jl
cmc
jmp
or
xor
insl
pusha
mov
js
xchg
push
xor
pop
sbb
push
mov
in
add
icebp
add
fbld
arpl
movsl
xchg
jecxz
pop
mov
or
mov
sarl
inc
icebp
jle
dec
mov
out
dec
js
clc
int
pop
and
dec
inc
int
mov
scas
sbb
hlt
cmp
lcall
push
push
fisubrl
mov
sarb
pop
sub
jno
add
mov
dec
cmp
nop
jbe
aam
sti
test
mulb
movsl
incb
mov
xor
sbb
mov
call
rcr
aad
pop
sbb
mov
andl
mov
gs
testl
push
dec
sbb
lahf
scas
mov
mulb
inc
mov
in
mov
sub
sub
sub
jne
cld
xchg
test
sub
xchg
sahf
mov
sub
stos
sub
imul
push
cmp
mov
pop
jmp
enter
inc
ret
into
jo
div
push
test
mov
clc
popa
cmp
shr
aam
in
daa
mov
loop
mov
lahf
sbb
lods
mov
jno
sub
inc
cs
jle
or
outsb
andl
and
hlt
cmc
dec
daa
dec
and
jo
bound
mov
push
scas
jbe
fisubrl
lahf
push
out
lret
push
xorl
push
xchg
sub
repnz
mov
pop
test
pop
and
std
cmp
cmpb
cwtl
ret
insb
pop
out
movsb
pop
mov
pop
push
push
pop
push
pushf
add
call
jge
mov
and
cld
push
pop
movsb
outsb
cmp
int3
mov
negl
popa
pop
xor
loop
xchg
testb
push
stos
out
mov
add
sub
in
xchg
mov
push
xchg
inc
ds
hlt
ficoms
xchg
out
jmp
mov
lret
sub
push
stos
jmp
or
sub
imul
xlat
cmp
into
xor
and
push
mov
mov
mov
push
mov
es
ss
or
jle
add
jmp
or
mov
push
pusha
cmp
aad
imul
xor
ds
or
cmpsl
addl
pop
and
cmp
aas
xor
add
push
and
mov
adc
pop
mov
shlb
ror
add
push
test
pop
subb
xor
mov
jae
decl
jl
jge
sbbb
or
pop
pop
je
add
pop
fcompl
mov
xchg
out
data16
mov
jns
loop
mov
into
pop
stos
pop
xchg
mov
lods
mov
nop
mov
pop
call
inc
sub
insb
mov
sbb
sahf
and
cmpsb
popf
jo
pop
sbb
shr
sub
idivl
adc
dec
and
aam
inc
movsb
cli
push
push
mov
ss
movsl
lock
and
into
sub
out
and
dec
shll
pusha
ljmp
cwtl
and
nop
push
fimuls
mov
mov
cmp
mov
mov
inc
sti
pop
shlb
cli
lahf
test
inc
les
mov
xchg
bound
push
dec
out
and
cmp
pusha
xchg
mov
pop
call
loopne
loopne
rclb
out
xor
pop
cld
test
rcl
data16
ja
pop
add
mov
push
in
pop
int3
add
in
xchg
mov
jbe
and
imul
je
in
jne
and
add
and
jle
add
push
ds
test
les
dec
and
dec
lds
jge
and
mov
in
xchg
inc
add
test
adc
mov
arpl
testb
stc
lret
out
les
jb
xchg
outsl
pop
ljmp
push
pop
lret
jmp
insb
cmp
sub
lods
pop
insb
test
jne
and
lea
std
push
scas
mov
sbb
lahf
gs
cwtl
xor
scas
repz
mov
inc
push
cmp
mov
enter
dec
outsb
sbb
mov
mov
adc
sbb
das
inc
sbb
xor
stos
in
mov
outsb
stos
imul
cmp
inc
jg
inc
fadd
aad
add
inc
pop
insb
ror
xor
cmp
ret
xor
push
insb
loopne
js
repz
lds
call
popf
pop
lea
pop
int
in
prefetch
add
mov
in
adc
xchg
mul
fwait
jb
inc
mov
xchg
mov
inc
test
es
and
test
jne
mov
stos
aas
aam
jae
jbe
mov
aas
fs
push
outsb
dec
jo
ss
pop
and
jbe
mov
outsl
fsts
in
rol
movsb
dec
pop
popf
mov
xchg
stos
push
push
out
shlb
mov
pop
in
nop
mov
dec
mov
insl
out
rorl
das
aas
fists
sbb
mov
jne
lcall
movsb
enter
into
mov
enter
ds
in
mov
scas
add
mov
insl
dec
push
mov
xchg
mov
cmp
xor
push
and
leave
inc
cltd
outsb
sti
and
dec
shl
lret
dec
add
mov
sbb
fwait
or
push
iret
jne
add
pop
pop
cmp
mov
sub
xchg
cmpsl
mov
jecxz
mov
shl
or
add
jb
cmpsb
andb
je
lds
or
sbb
dec
and
or
es
jp
scas
sub
aas
idiv
psubq
mov
sbb
call
inc
mov
jno
out
xor
mov
clc
mov
stc
xor
fldenv
lret
inc
inc
mov
push
in
add
push
push
test
mov
mov
jb
sbb
dec
push
push
sub
sub
cli
xchg
xchg
pop
es
out
adc
iret
scas
mov
and
adc
ja
sahf
imul
mov
dec
adc
push
stc
out
push
add
fdivrl
test
mov
int
iret
lret
sarl
fmull
leave
fistpl
cltd
mov
jle
out
xor
addr16
xor
dec
and
push
lock
fs
lret
push
pop
divl
pop
mov
leave
fsub
jmp
pop
cld
dec
adc
jo
and
inc
sti
mul
out
mov
fneni(8087
or
ficoms
jge
scas
sub
in
dec
imulb
int
mov
mov
sbb
adc
jns
roll
push
inc
in
jl
xor
stos
jge
loopne
xlat
out
sub
stos
ja
sbb
jb
pushf
insl
scas
xor
ljmp
js
shl
ret
ficompl
cmp
xchg
xchg
rol
jecxz
mov
pushf
xchg
cmc
adc
arpl
dec
pop
out
dec
mov
sub
nop
lods
ja
test
add
dec
jb
cmpsb
addr16
inc
mov
insl
add
inc
shll
repz
and
lcall
js
test
dec
ret
pop
daa
lret
dec
popf
rclb
jne
xchg
mov
push
imul
inc
stos
inc
inc
mov
sub
jle
cmc
adcl
sbb
cmp
mulb
sub
sbb
inc
cmp
popf
insb
fucomp
lds
movsl
dec
pop
cmpsb
mov
call
inc
adc
pop
bound
dec
testb
mov
mov
mov
cmpsb
daa
lret
repz
adc
adc
ljmp
gs
push
repnz
lahf
pop
xchg
xorb
mov
pop
repz
fxch
mov
add
push
into
aam
rcll
push
mov
cwtl
mov
fstl
mov
jns
jno
addr16
dec
ucomiss
cmp
aam
pop
mov
xor
push
xchg
fimull
push
xor
lds
fldl
mov
jl
outsl
stc
sub
push
clc
outsl
das
aas
adc
loop
and
add
or
std
xor
xchg
aam
push
cld
into
imul
arpl
fildll
xchg
sbb
lds
pop
mov
mov
mov
mov
cltd
pop
arpl
jb
fsubs
js
jnp
xchg
inc
rol
pop
dec
jp
imul
and
out
pop
call
in
fildl
adc
cmp
call
aas
hlt
and
xchg
inc
pop
and
fwait
pop
cmp
test
mov
std
pop
pusha
notl
dec
pusha
xchg
xlat
jp
and
pushf
add
pop
inc
mov
aas
jns
pop
ds
movsb
insb
lods
dec
fwait
loopne
aas
push
pop
loopne
push
hlt
xchg
mov
dec
jl
mov
dec
push
xchg
pop
pop
mov
rclb
jnp
adc
call
and
in
xor
ds
cmp
lahf
and
dec
adc
fwait
dec
sbbl
jae
les
jne
pop
cmpsb
or
xor
or
xlat
pop
push
ret
cmp
lcall
cmpsb
fdivrs
fistpl
int
jae
and
pop
arpl
clc
jb
jnp
or
daa
mov
xchg
stos
xor
add
jbe
jle
iret
cmp
jmp
sbb
mov
inc
push
cwtl
popa
pop
test
outsb
cmpsl
outsb
xlat
dec
mov
js
inc
dec
sti
test
or
out
out
out
fcomps
pushf
cmp
popf
imulb
or
movsb
cmp
xorl
xor
out
inc
fsubl
dec
and
mov
or
push
and
xor
out
ss
out
xlat
sti
cmp
jb
sti
pop
jbe
xchg
outsb
sub
pop
inc
pusha
sub
ret
ficomps
lahf
pusha
push
jg
jp
dec
add
and
cmp
lret
xchg
int3
sbb
jbe
addl
mov
mov
sar
cmp
xor
cltd
test
ret
add
ja
cmp
aad
mov
ret
adc
lods
add
jmp
pushf
jp
and
cmp
movsb
cs
fwait
pop
aad
sti
adc
lret
call
xor
push
push
adcb
je
xchg
and
inc
or
mov
sbb
stos
daa
fnstsw
jl
jmp
sbbb
adc
repz
pushf
xchg
lret
fdivrp
add
sub
xchg
xchg
cmp
lret
sub
xchg
adc
ljmp
dec
call
movsl
xor
pop
pop
jns
cmp
stos
inc
insb
pop
popf
adc
js
flds
dec
xchg
cwtl
ds
or
hlt
scas
int3
jbe
inc
test
divb
push
push
jl
sbb
inc
pop
or
jmp
pushf
pop
pop
mov
ljmp
sub
inc
in
xor
fmuls
dec
inc
fs
xor
dec
sbb
and
adc
lret
iret
push
dec
xchg
fistl
aaa
dec
iret
leave
push
cmpsb
fdiv
icebp
mov
nop
loop
scas
lock
mov
mov
push
or
imul
mov
leave
or
mov
mov
or
add
inc
sbb
jnp
jae
mov
out
inc
lret
das
sbb
in
or
mov
frstor
int
das
repnz
xorb
sub
cmp
jo
insb
mov
shlb
fmul
sbb
repz
sub
mov
xchg
repnz
imul
in
shl
pop
xlat
test
testb
mov
jo
inc
loop
inc
xor
iret
incb
cli
leave
addr16
sbb
adc
mov
jns
lahf
test
addr16
stos
shll
jns
inc
add
lret
jge
xlat
scas
cmpsb
cld
push
inc
iret
add
pop
fidivl
ss
push
lahf
xor
mov
int
pushf
mov
inc
cmc
xorl
mov
scas
test
cmp
insl
inc
xor
imul
int
stos
add
pop
mov
fiaddl
ds
mov
inc
adc
fucomip
push
in
and
dec
sub
pshufw
cmpsb
or
cwtl
pop
stos
mov
fdivrs
fwait
call
sbb
shll
jge
mov
mov
cmp
call
daa
cmp
adc
mov
adc
stos
stc
fs
xor
ljmp
xchg
mov
stos
dec
divps
stos
cli
arpl
mov
gs
pushl
nop
orb
push
out
pop
lahf
jns
xchg
xor
pop
push
push
mov
jno
mov
rolb
xchg
movsb
imul
ret
cmp
test
stc
jo
and
in
push
mov
pop
push
seto
std
stc
cltd
outsb
call
in
popl
mov
jl
mov
mov
sbb
add
insl
mov
add
stc
cld
insl
pop
sbb
fisubl
lds
arpl
fmulp
and
cltd
cmpb
stos
and
push
rcrl
jbe
inc
rcr
push
imulb
ret
mov
lods
shl
push
test
mov
cmp
inc
sbb
push
outsb
xchg
sub
xlat
mov
sbb
dec
jmp
mov
lods
dec
inc
loop
loope
xor
test
fdivs
in
out
dec
inc
mov
jae
test
jle
push
or
sti
adc
test
sbb
mov
pop
daa
xor
daa
rorl
jnp
data16
push
clc
cli
cmpsl
or
lock
iret
popa
std
ret
orb
adc
cmp
add
jo
adc
outsb
xchg
xlat
sbb
xlat
push
mov
add
out
iret
addb
mov
mov
negb
mov
jg
subb
mov
mov
push
and
pop
ja
movsl
mov
xlat
lods
inc
outsb
and
mov
add
xchg
pop
adc
gs
mov
xchg
and
imul
and
cmpb
fistl
pop
cwtl
ljmp
outsb
mov
sbb
fwait
rorb
adc
pusha
jae
and
adcb
sbb
push
sahf
xor
push
andb
pushf
jp
cltd
xchg
or
subb
add
in
inc
repz
shrl
sub
mov
inc
mov
xchg
pop
sarb
pushf
cmc
cs
sub
jle
mov
mov
les
fnstenv
adc
mov
call
and
pushl
shrb
jns,pt
into
sub
jb
fildll
rclb
xor
out
xchg
rol
shrb
dec
push
jg
aas
das
pop
out
mov
pop
divb
pop
pop
sub
test
xchg
cmp
xlat
mov
insb
jae
int3
and
mov
cmp
push
les
mov
arpl
xchg
js
and
pop
sahf
fcoms
jg
xchg
jns
js
xchg
mov
outsl
mov
aaa
stos
mov
cwtl
inc
imul
adc
mov
std
and
mov
fdivr
fidivs
or
aas
jmp
dec
lods
jo
push
test
and
mov
les
insl
imul
jmp
push
out
in
xchg
popa
cmp
gs
popa
xchg
cmp
dec
cld
insl
inc
fisubl
cmpsl
cmp
in
scas
sbb
ret
aas
arpl
lret
add
mov
dec
rcl
or
adc
insl
inc
pop
imul
in
loopne
xlat
hlt
test
fwait
adc
push
jo
into
push
mov
xchg
jno
iret
faddl
pop
ret
repz
mov
adc
push
cmp
pop
inc
mov
les
add
push
cmp
mov
testb
cmpsl
push
dec
adc
rclb
std
push
out
add
push
add
sub
and
hlt
pushl
int
mov
cwtl
out
lret
fnstsw
jmp
jecxz
imul
mov
jge
insb
inc
mov
push
add
cs
pusha
rcl
pusha
jne
xor
dec
ss
mov
mov
int3
and
leave
and
push
aas
ret
and
insb
cmpsl
pop
push
pop
fs
inc
aaa
xchg
xchg
addl
fisttps
xor
out
mov
cmpsl
mov
adc
rcrl
fidivl
push
mov
jmp
jecxz
mov
lds
ficomps
jg
mov
andb
inc
push
iret
mov
arpl
jge
jne
or
scas
sbbl
in
push
or
lahf
lret
outsb
cli
fidivrs
pop
xchg
pop
push
movsb
cs
mov
and
in
mov
inc
mov
jns
or
mov
sub
rolb
lds
adc
in
fwait
sbb
xor
data16
es
xlat
jne
loope
jmp
pop
hlt
xor
test
xchg
in
jns
fists
call
jmp
mov
adc
xorl
jp
pop
movsb
andl
lock
test
ja
dec
add
jl
xlat
test
cmp
add
mov
mov
jp
mov
inc
mov
js
jns
hlt
xchg
jmp
iret
int
cmpl
add
test
sbb
xchg
stc
adc
in
mov
je
add
dec
and
addr16
fs
fists
adc
nop
jo
dec
pop
nop
hlt
mov
or
daa
sub
outsl
ljmp
push
xchg
and
inc
dec
jb
mov
iret
cmpb
cmp
sbb
jle
and
lds
pop
mov
xor
adc
aas
mov
xlat
mov
mov
sub
sti
stos
bound
or
sbb
repnz
pop
mov
test
pop
xchg
popa
sub
xor
sub
xchg
adc
xlat
ds
incb
mov
jbe
inc
xor
rcr
in
xchg
cwtl
xchg
in
sub
jns
subl
adc
and
or
xchg
mov
outsl
push
test
mov
xchg
push
leave
ds
push
pop
lock
fstps
movsl
mov
fsts
aad
scas
mov
and
hlt
lret
and
sub
lret
or
hlt
xor
push
adc
fsubrp
inc
xchg
push
inc
add
adc
scas
pop
dec
jp
xor
aas
dec
loope
or
add
ss
daa
test
inc
xchg
lods
push
lahf
mov
xor
jns
sub
scas
mov
lcall
ds
shrb
adc
repnz
rcr
adc
sar
mov
out
mov
je
push
sarb
mov
ss
test
je
xor
add
neg
ss
push
shl
cmp
dec
sbb
insl
pop
jp
or
sub
in
mov
cli
jno
cs
mul
roll
mov
daa
push
in
fs
les
hlt
out
iret
cltd
mov
int3
insb
shll
push
xchg
mov
icebp
xchg
rclb
mov
mov
cmp
adc
xor
leave
es
mov
mov
xor
push
mov
js
mov
xlat
adc
xchg
jbe
inc
test
mov
es
jns
cmp
jg
leave
ficompl
adc
and
ds
sub
sbb
inc
leave
add
repz
xlat
add
loope
fcmovbe
adcl
dec
shrb
int3
shrb
pop
push
ret
ljmp
jecxz
testb
movsb
pop
lods
imul
fldcw
outsb
xchg
mov
inc
push
and
adc
fwait
add
and
lcall
ret
outsb
in
popa
push
inc
dec
xor
pop
xor
push
sbb
sbbb
sbb
ret
shll
jb
ljmp
jg
mov
dec
pop
or
sbb
jae
dec
js
cmc
mov
xor
cmp
jae
insb
cmp
pop
pop
outsl
xor
jae
cmp
cmp
xor
ds
mov
dec
sub
aaa
and
jno
shll
or
cmp
adc
cs
pop
movsb
jno
xchg
test
dec
mov
daa
ja
and
sub
jnp
jbe
jnp
fstps
das
jns
xlat
pop
push
dec
dec
pop
push
int3
or
test
dec
les
and
xorl
cmp
out
jmp
or
fidivrs
cld
cmp
mov
out
sub
xchg
test
xor
loopne
in
xor
int3
std
roll
push
mov
pop
mov
mov
fldl
iret
sbb
aaa
ja
mov
xchg
stos
xorb
add
popa
add
dec
push
pop
fidivrl
shlb
push
dec
xchg
rcrb
pop
dec
pushf
pop
sub
push
int
jg
adc
mov
aam
arpl
rol
dec
clc
outsl
inc
mov
mov
jne
outsl
test
xchg
shrl
push
call
adc
mov
adc
ss
fbld
jne
call
les
pop
shl
insb
xor
push
aaa
loop
icebp
fisubs
icebp
mov
mov
jp
lock
test
inc
aam
mov
int3
jecxz
xchg
sub
sub
or
frstor
aam
pushf
push
lcall
fdivrs
shl
sbb
add
inc
rcr
mov
mov
dec
pop
jns
ss
hlt
xchg
les
sub
shlb
xchg
push
sbb
out
jle
subl
add
sub
push
pop
inc
xor
in
inc
bound
add
scas
movsl
inc
stos
add
aaa
inc
ds
mov
out
jb
test
jae
push
xor
adc
out
jl
jns
stc
mov
aam
inc
popf
inc
jbe
and
dec
test
jno
test
popf
lods
push
rcl
mov
add
mov
ror
orl
inc
push
cld
fs
jae
fwait
mov
add
aaa
add
inc
mov
xor
xchg
mov
pop
out
jl
jo
pushf
fisttpll
loop
sub
cmpsl
cmc
cmpl
dec
cmpsl
lock
dec
fbstp
xchg
in
cs
sub
cmp
and
loope
sbbl
loop
outsb
inc
and
sbb
xlat
dec
cmp
ljmp
in
inc
test
aas
dec
les
cmp
cmpsl
and
dec
fiaddl
dec
sbb
js
int3
lret
das
fprem
testl
icebp
mov
mov
sub
cmpsl
and
loope
lds
pop
jle
mov
mov
push
in
stc
in
scas
xchg
aam
or
mov
push
js
mov
pop
sbb
mov
jbe
std
fucomp
mov
insl
mov
xbegin
mov
hlt
lahf
inc
shrl
addb
jno
xchg
ljmp
aas
mov
jl
aas
int3
jbe
mov
mov
or
nop
ljmp
mov
data16
mov
sub
test
lods
push
popf
pop
movsb
inc
xor
jmp
push
test
imulb
xor
lock
sub
or
nop
shrl
scas
mov
sub
lret
mov
dec
clc
jno
jne
dec
in
sarl
enter
jl
dec
sbb
or
std
or
jge
lds
xor
jnp
adc
insl
jle
and
notb
icebp
add
mov
lock
jmp
sahf
ret
lea
int
ja
jnp
roll
xchg
cmpsb
in
pop
xlat
inc
sahf
movsb
popf
push
pop
negb
mov
xor
popa
iret
xor
push
sub
push
mov
jl
mov
sub
cltd
les
push
dec
testl
adc
fs
xchg
in
mov
jmp
add
add
push
insl
int
xchg
xchg
push
xor
pop
mov
push
push
lea
jl
insb
cmp
jbe
sub
movsl
pop
out
inc
sbb
cltd
mov
sub
pmaxub
hlt
xchg
test
and
xor
in
and
mov
test
inc
sbb
mov
lds
jnp
mov
pusha
push
dec
sub
sub
jae
jmp
xchg
imul
jns
movsb
imul
stos
aam
movsl
dec
arpl
sbb
lods
pop
dec
stc
lods
push
popf
mov
sti
rorl
cmpsb
push
hlt
dec
inc
jle
and
mov
je
das
data16
push
jbe
sbb
dec
repz
punpckhwd
test
mov
imul
xor
decl
dec
je
shlb
pop
xchg
xchg
fidivrl
sub
cwtl
call
mov
inc
lock
arpl
ljmp
pop
int
in
loopne
stos
inc
mov
mov
insl
mov
mov
ret
xchg
leave
add
shl
loope
sub
lret
jnp
stos
sub
ljmp
ret
jbe
jle
cli
push
and
lea
fisttpll
imul
xlat
test
jecxz
sub
jge
dec
push
dec
or
jo
test
out
mov
movsb
sbb
lret
jae
mov
push
mov
sub
xchg
enter
insb
cli
jp
xchg
imul
jecxz
leave
adc
xor
mov
outsl
in
cmpsb
adc
mov
mov
seto
jae
cmpsb
dec
loope
inc
push
and
and
sub
push
and
jo
mov
dec
repz
adc
fs
xor
aad
movsb
jno,pn
add
push
out
cltd
lahf
roll
push
inc
push
fimuls
aas
mov
pop
mov
mov
inc
das
ds
xor
aam
pop
ficoml
rcl
adc
pcmpgtd
lahf
pop
jno
pop
test
clc
push
decb
pop
mov
xorl
mov
inc
cmpsb
sub
data16
mov
jp
jecxz
icebp
scas
push
mov
into
call
ret
adc
sub
mov
out
pop
sub
xchg
jae
bound
mov
nop
mov
sub
test
insl
filds
sub
loop
out
dec
ljmp
test
jae
shll
jmp
sbb
imul
enter
lock
pop
push
in
bound
stc
jo
call
dec
adc
pop
cmpsl
fiaddl
sub
lods
lods
mov
xchg
arpl
call
adc
xchg
adc
pusha
stc
aaa
xor
xchg
cmp
mov
scas
jae
mov
lods
mov
test
pop
jecxz
sbb
sbb
mov
and
lods
and
mov
pop
shr
mov
xchg
sbb
mov
lret
add
decb
adc
ja
mov
out
mov
mov
shlb
mov
fadds
mov
jno
addr16
ds
inc
pop
or
xchg
mov
int3
and
fwait
ret
pop
mov
pop
cmp
push
xchg
outsl
sbb
jae
adc
pop
das
pop
or
jb
insb
ficompl
mov
pop
jmp
out
push
mov
pop
sti
aam
jns
inc
in
push
lods
xchg
in
sub
testl
adc
or
je
xor
adc
add
lret
sub
or
mov
sub
into
in
xchg
jb
mov
pop
jno
sub
jmp
fstp
sbb
cld
or
fwait
xchg
jae
cmp
xchg
in
xlat
mov
movl
test
pop
gs
xchg
scas
rcr
sarb
loope
call
es
mov
add
cmp
ss
jl
add
gs
insb
outsl
repz
mov
adc
jne
jae
ss
push
add
inc
and
int3
movsl
sbb
mov
sub
inc
xor
roll
mov
xchg
sbb
add
faddl
pop
inc
in
xchg
xchg
in
leave
inc
lods
sub
ret
enter
pop
push
daa
cmpsb
cs
lock
mov
jns
fisttpll
out
add
dec
adc
int3
ret
mov
outsl
leave
iret
jmp
sub
lcall
repz
cld
and
dec
leave
lcall
aam
xchg
mov
mov
pop
shrl
scas
mov
adc
stc
fsts
push
js
imul
add
cs
ds
out
or
or
jge
mov
sbb
push
inc
mov
xor
push
inc
sahf
filds
test
or
pop
cmpsb
lea
jnp
sub
add
call
stc
pushf
int3
inc
test
jbe
lret
mov
imul
ss
repnz
sub
inc
mov
test
es
mov
xor
in
in
ret
les
sbb
and
loopne
shlb
xor
ret
dec
inc
cmp
pop
push
sbb
bnd
aam
in
pop
pusha
lds
mov
mov
sub
rorb
mov
sbb
in
push
push
cmpsl
pop
loope
mov
xor
addr16
pop
les
roll
inc
cmp
popa
je
leave
mov
in
jle
dec
xor
dec
add
mov
test
outsb
push
mov
les
rolb
in
xor
adc
sahf
es
xchg
loopne
ret
cmpsb
xor
test
mov
js
cmp
lcall
sbb
stos
jge
leave
decb
ljmp
aam
push
or
repnz
lea
mov
push
sub
or
mov
sub
pop
adc
push
inc
repz
bound
xchg
inc
mov
push
fst
xchg
fsubrs
popa
cld
jnp
fwait
mov
imul
pop
lods
sbb
cs
decl
out
mov
push
push
stos
mov
movsl
jnp
xchg
mov
loope
pusha
lods
lods
jecxz
dec
notb
mov
lds
test
xchg
cmpsb
sbb
popf
jno
jne
sub
jecxz
mov
jns
loopne
xchg
lret
push
and
push
sub
mov
add
iret
push
fs
xor
mov
mov
mov
xchg
xchg
pop
xor
sbb
data16
add
pop
aaa
les
das
and
cmpsb
mov
push
gs
sbb
ret
inc
scas
pop
ss
movsl
divl
enter
test
mov
adc
fadd
cmp
push
sbb
out
mov
push
rcr
out
and
sbb
arpl
nop
sti
sub
inc
popf
mov
and
mov
xor
ja
mov
xor
push
cmp
cmp
xor
or
notl
and
movsb
stc
jl
dec
xor
mov
in
insl
jge
sbb
clc
or
push
rolb
sbbb
mov
xchg
scas
mov
push
jno
mov
fbld
mov
and
sbb
aaa
ret
nop
mov
push
sub
xchg
cwtl
lret
jmp
cmp
mov
cld
gs
push
stos
stos
push
jp
in
popf
outsl
clc
adc
pop
xchg
aaa
into
subl
movsl
adc
xchg
outsb
xor
xchg
push
addr16
mov
sbbb
mov
sub
test
jae
pop
call
mov
shl
and
mov
pop
cs
addr16
add
xchg
add
mov
push
adc
fs
arpl
pop
sti
loop
in
fildll
or
mov
fisttpll
sub
loop
ficompl
push
es
addr16
into
pop
mov
cwtl
call
rorb
je
filds
mov
hlt
pop
inc
mov
popw
dec
push
jp
lcall
adc
inc
xor
push
jb
out
loop
in
sub
mov
pop
pop
pop
inc
sbb
repnz
dec
sbb
out
xchg
pop
jne
lods
stos
ja
imul
mov
sub
inc
mov
xchg
fwait
lods
in
inc
jmp
mov
cmp
and
jne
in
lahf
sub
xchg
xchg
pop
std
mov
lret
pusha
lahf
pop
dec
test
and
cmp
int
add
fnstsw
es
add
dec
lea
scas
cli
jnp
mov
stos
mov
shl
inc
in
repz
mov
sub
push
jno
test
jbe,pt
xor
fidivs
push
test
xchg
std
sbb
lds
fidivrl
fmuls
bound
inc
cmp
jbe
aam
sub
dec
inc
inc
sbb
shr
sbb
pop
shll
pop
fidivl
mov
dec
sub
lret
jae
push
mov
scas
inc
inc
mov
subb
ror
xor
push
push
and
pop
fldcw
in
rol
fidivl
xor
outsb
out
jns
mov
jbe
jle
push
pushf
insb
jns
leave
inc
dec
xor
adc
sbb
inc
or
iret
data16
je
add
jecxz
jecxz
pop
mov
icebp
adc
dec
mov
jo
jno
pop
xlat
aad
add
and
mov
pop
mov
sub
push
push
pop
cmc
leave
in
dec
popf
pop
mov
mov
dec
stc
sbb
cli
aam
or
imul
jae
ja
and
lea
jmp
inc
mov
je
xchg
add
xor
mov
sahf
push
arpl
xchg
leave
push
inc
sbb
fdivl
mov
daa
cmp
out
cltd
out
lods
cmp
lahf
scas
and
fnstcw
xor
loope
mov
cmp
pop
test
cltd
je
cmp
lret
mov
aam
shlb
jge
xor
shll
xchg
xor
mov
mov
xor
mov
cmpsb
mov
xchg
xorl
xlat
mov
or
push
mov
and
sub
adc
jge,pn
add
fdivr
in
clc
or
dec
ficomps
mov
xor
sub
nop
test
mov
adc
shr
sarl
test
cmp
adc
sbb
rorl
inc
shll
imul
popf
pop
ret
mov
jb
hlt
dec
add
sbb
adc
pop
pop
push
mov
mov
scas
push
mov
subl
xchg
and
adc
dec
xchg
jp
mov
dec
push
sti
sub
push
mov
cli
push
mov
scas
gs
out
jns
jge
loopne
cwtl
push
psubsw
ret
lret
jb
pop
inc
cmp
pop
cld
cld
loop
xor
adc
aas
das
or
testl
pushf
mulb
sbb
inc
imul
pusha
inc
dec
stc
pop
push
lret
cwtl
jae
mov
add
mov
mov
mov
je
sbb
and
sub
jno
pop
xchg
lock
mov
add
inc
push
loopne
pop
cli
or
hlt
push
call
mov
pop
sbb
gs
aaa
out
arpl
mov
or
jo
or
cmpsb
outsb
mov
shll
lcall
popa
scas
jmp
aam
sbb
mov
arpl
jmp
push
lret
insl
pushf
xchg
adc
fldt
sbb
out
stos
adc
hlt
jmp
xor
or
rcll
flds
hlt
lret
imul
adc
push
sar
sub
or
dec
xchg
jge
fildl
xor
in
ret
mov
icebp
gs
mov
cmp
daa
decl
add
sbb
adc
dec
stos
sahf
mov
fcomip
das
cmc
push
das
lret
mov
sub
xchg
dec
xchg
scas
ret
add
das
dec
cmp
xor
jb
sbb
pop
aam
ret
lds
movsb
xchg
or
mov
mov
mov
inc
ljmp
cmp
subl
pop
popa
sub
adc
fisubl
lea
jnp
and
cmp
adc
je
lret
xor
sub
in
mov
or
aad
out
dec
insb
int
and
push
jbe
pop
insb
adcb
xlat
adc
popa
stos
cli
enter
dec
xor
jp
mov
outsl
ret
add
cmc
imul
ss
pop
popa
test
sbb
ja
mov
adc
lret
push
jecxz
mov
cmpsl
push
xor
mov
sahf
pop
mov
xor
pop
jle
cld
mov
push
in
sbb
iret
dec
mov
test
rcrl
push
cmpsl
bound
out
shrb
lret
loop
adc
movsl
pusha
stc
mov
mov
lods
dec
notl
dec
in
ds
into
xor
mov
sbb
cmp
mov
push
cmp
popf
fisttpll
inc
les
in
jecxz
jne
jb
jbe
loopne
adc
xor
xchg
jp
sti
das
popl
push
mov
test
jg
lds
xchg
jmp
mov
inc
js
or
gs
mov
or
adc
jae
xchg
jmp
shll
dec
test
fildll
ss
loope
stos
mov
repz
jecxz
pop
arpl
mov
rorl
mov
xchg
mov
icebp
xor
mov
int3
filds
loope
lods
imul
xchg
rcrb
out
cmc
mov
cmpsl
inc
aas
add
sbb
push
sub
mov
add
mov
sarb
insl
pop
xor
inc
xor
push
cmc
jp
ficomps
leave
pmuludq
mov
mov
sub
je
pop
sti
test
lods
cmpl
inc
jmp
jae
inc
or
or
sub
lds
mov
sub
inc
fisttpll
ret
mov
pop
xchg
cli
or
or
mov
popa
and
or
add
mov
inc
mov
xchg
jnp
popa
cmc
jmp
fdivp
imul
insl
ja
mov
jg
movsb
jns
push
and
pop
and
and
adc
je
cmp
and
in
xchg
popf
sub
sbb
jecxz
push
cmp
subl
xchg
lods
je
mov
mov
fsubrp
loope
int
dec
and
xor
mov
jno
sbb
lods
mov
mov
sub
adc
lock
jle
cmp
jge
cmp
adc
inc
aam
pop
jmp
xchg
adc
js
jae
sub
cmpsb
loopne
dec
pushf
fildl
or
test
xlat
andb
stc
test
cmp
daa
rorb
idiv
sti
mov
xor
mov
mov
push
stos
mov
loop
insl
mov
in
shrl
imul
mov
ret
dec
cmp
adc
lahf
pop
mov
insl
pop
push
or
shr
test
es
inc
add
adc
xchg
inc
bound
movsl
push
adc
imul
jb
mov
mov
jne
bound
enter
push
lret
out
mov
cmpb
pop
xor
cmp
fsubrs
xchg
sub
mov
sbb
arpl
lret
ds
popf
not
cmpsb
sarl
xlat
and
icebp
pop
push
or
and
not
xor
fwait
sbb
dec
das
rcrb
xor
pop
dec
lret
xchg
push
and
and
test
lea
xorl
adc
or
rclb
cli
or
int3
movsb
ss
arpl
pop
jno
mov
jo
push
es
push
mov
mov
mov
incl
xchg
push
out
lock
cmc
push
fbstp
dec
push
push
sub
lret
in
pop
push
mov
repnz
or
jp
push
cmp
xchg
mov
cwtl
push
mov
mov
dec
mov
push
jns
push
dec
cwtl
jbe
add
pop
lods
jbe
fsubrs
decb
fdiv
jmp
jg
jge
cmp
cs
imul
les
mov
stc
gs
xchg
push
aam
aaa
lea
clts
lahf
divl
cld
int3
inc
in
and
dec
test
and
mov
inc
scas
inc
cli
loopw
fcompp
mov
fldl
pop
cmp
fiaddl
fimull
dec
jnp
push
into
push
aas
push
je
cmp
cld
sub
jecxz
repz
lahf
hlt
and
push
adc
movb
cmpsb
aad
lret
xor
push
imul
add
xchg
xchg
adc
loop
stos
pop
cli
in
inc
xchg
xchg
mov
mov
repz
movsl
sub
das
ret
aas
sub
mov
into
and
mov
ja
and
push
pop
loopne
mov
cmp
jle
data16
imul
sub
aaa
sub
inc
out
lret
push
push
mov
xlat
into
sbb
ja
xchg
lret
sbb
inc
jo
jbe
ljmp
sarb
test
out
outsb
in
sub
cmp
fwait
imul
stos
test
mov
outsl
sahf
subb
sbb
push
mulb
in
andl
fadds
inc
popa
rolb
push
push
jecxz
jno
mov
or
movsl
imulb
aaa
cmpsl
jp
jne
lods
arpl
fwait
orb
bnd
push
outsl
jmp
mov
inc
movsl
shlb
xor
ja
into
dec
fidivrs
cmpsb
xor
jg
data16
mov
imul
or
and
add
ret
dec
xchg
ss
notl
cmpsl
push
jne
inc
test
sbbb
out
in
and
das
pop
jo
push
int
push
pop
jmp
or
mov
decl
mov
xchg
push
cltd
aad
fisttpl
and
mov
loope
andb
push
leave
mov
lea
pop
adc
into
daa
shll
adc
mov
mov
sub
icebp
insl
push
jno
outsb
add
imul
mov
mov
std
xor
mov
cltd
in
or
push
push
idivb
fisttpll
cmpsl
jae
je
xchg
push
out
push
gs
test
and
inc
or
scas
inc
ljmp
xchg
sti
sbb
jmp
lcall
mov
jae
cmp
repnz
fnstenv
jo
add
inc
into
jg
sahf
mov
push
pop
mov
sbb
dec
aas
mov
iret
stos
dec
scas
out
mov
pop
inc
and
sbb
mov
mov
daa
scas
cld
in
mov
nop
add
stos
push
jecxz
xor
loope
pop
mov
js
testl
call
sbb
push
mov
es
icebp
xchg
pop
pop
fwait
pop
mov
dec
loope
lret
aaa
mov
xchg
jns
loop
push
out
jne
mov
cmc
loop
lcall
sbb
pop
mov
xlat
out
inc
pushf
test
adc
lahf
add
and
inc
xorb
rcll
add
ret
cltd
sarl
mov
jp
test
insb
lret
inc
xchg
adc
in
adc
sub
jne
jmp
push
mov
xor
mov
sbb
xor
add
xchg
ficoms
push
cli
insl
sbb
mov
repz
cmpsb
enter
cli
cmpsb
andps
xor
xor
lds
jo
mov
shll
pop
push
test
jge
mov
aad
cmpsb
push
cmpsb
cmp
nop
loop
jl
sarl
stos
inc
dec
push
loop
adc
mov
add
jge
fcmove
and
inc
icebp
pop
js
cmpsb
jp
lock
jmp
popf
stc
rcrb
sbbl
dec
push
mov
and
sbb
xchg
cmp
mov
mov
and
subb
pop
cmp
push
mov
shrb
jecxz
jb
repnz
push
maxps
bound
out
out
adc
dec
push
inc
sahf
push
inc
inc
shll
insb
rcpps
iret
pop
outsl
lret
testb
pop
mov
scas
lcall
fists
cmpsl
adc
dec
pop
sahf
mov
add
clc
int
xchg
mov
sub
sbb
sub
js
xor
xchg
in
sub
repz
xchg
adc
xchg
jp
mov
pop
aas
jmp
in
insb
out
and
je
and
sbb
cmc
mov
inc
ret
scas
sar
cmp
loope
inc
repnz
mov
clc
sbb
cmp
sti
leave
outsb
mov
or
add
mov
lahf
sbb
jl
sbb
xchg
mov
fldcw
inc
sbb
and
xchg
xchg
jecxz
mov
cld
addr16
roll
stos
cltd
pop
insb
dec
xchg
xor
add
mov
push
aad
and
pop
js
sub
insl
sbb
mov
in
aaa
xorb
pop
or
mov
push
jle
jb
mov
rol
pop
adc
pop
sbb
sub
xor
xor
pop
nop
mov
fsubr
addr16
xchg
mov
and
push
imul
dec
arpl
jp
lea
ja
js
dec
jo
lcall
dec
sub
xor
dec
mulb
lds
pop
mov
int3
pop
bound
icebp
aam
sarl
mov
std
popa
dec
rcr
imul
test
inc
push
lcall
imul
pop
pusha
insl
xchg
jmp
sbb
mov
imul
lods
jl
dec
clc
lods
into
jbe
dec
pop
mov
hlt
nop
xchg
js
dec
adc
push
mov
xchg
leave
ret
or
pop
stc
jmp
sbb
dec
aaa
mov
sub
repz
aam
mov
testl
shr
jns
enter
pmullw
movnti
aaa
xchg
leave
fnstcw
push
movsl
inc
ss
lea
sbbb
js
imul
push
jae
jbe
pop
cmp
or
aam
aam
addr16
pop
xor
cmp
gs
cs
cmp
cld
mov
push
sbb
fcoms
out
cwtl
dec
lods
xchg
int
test
xchg
xchg
jmp
xchg
popa
inc
cmp
mov
dec
and
pop
mov
push
pop
lret
sti
les
or
scas
insb
dec
mov
test
jns
ss
bound
leave
je
jecxz
loop
mov
cwtl
rcpps
cmc
arpl
call
sbb
and
xorl
rcrb
xor
mov
push
dec
sbb
sub
sbb
and
mov
xchg
mov
shll
clc
cltd
ret
add
fsubs
xlat
mov
fdivr
xchg
mov
call
pop
aaa
lods
ss
sbb
mov
sbb
outsb
jne
jle
and
stc
jmp
xlat
dec
inc
lea
leave
rorb
push
push
stos
or
ja
lret
stos
mov
testb
int
pop
imul
mov
pop
sub
push
shll
cmp
jns
cmp
dec
mov
mov
jmp
xor
sub
dec
xchg
icebp
push
cmp
mov
jno
fcmovnu
push
xchg
push
aam
int
mov
or
pop
outsb
lahf
stc
outsb
or
pop
arpl
mov
cmp
xchg
lcall
enter
xor
jne
pop
std
cld
or
inc
sub
es
mov
sub
adc
dec
inc
fwait
jae
mov
aaa
and
int3
xchg
aaa
lahf
push
out
pushf
jl
mov
pop
xchg
mov
xchg
xchg
adc
lahf
jne
mov
aaa
push
mov
or
jo
mov
xchg
cmpl
pop
push
mov
int
dec
push
test
mov
xchg
fs
in
adc
scas
ret
stos
push
jp
dec
fcomps
sub
adc
adc
mov
stc
mov
fidivl
loop
or
sbb
ficomps
loopne
cmp
jge
mov
leave
das
gs
ss
and
int
and
mov
adcl
mov
insl
xorb
and
xchg
jl
xor
mov
xchg
xchg
push
rcll
pusha
push
jg
test
mov
ja
mov
or
lock
cld
adc
pop
jo
insl
outsb
stc
dec
push
push
mov
pop
jne
mov
sub
lret
sbb
adc
das
xor
jns
cmp
cmpsl
xor
jae
push
xor
xor
jbe
xorb
insl
mov
xor
xchg
fistpl
les
sar
ret
push
cmp
push
gs
xchg
pop
stc
int
xor
or
lock
sub
pop
movsb
and
mov
aam
pop
subl
and
push
xorb
ficompl
popf
and
roll
aam
jg
adc
popa
jo
in
sbb
sbb
add
mov
dec
rorb
test
mov
repz
jmp
imul
js
inc
outsb
jnp
pop
icebp
inc
in
dec
shl
push
jns
xor
imul
push
ljmp
mov
aaa
in
xchg
std
dec
gs
xchg
ljmp
inc
mov
iret
arpl
push
sbb
pop
pop
adc
jle
adc
xchg
cmp
add
xchg
aam
imul
jns
pop
ja
cli
adcb
fisttpl
imul
aaa
mov
or
adc
mov
or
mov
add
jle
mov
sub
test
mov
pop
jge
push
push
add
fisttps
jmp
cltd
je
clc
adc
push
mov
xchg
add
xor
adc
xchg
xchg
mov
sbb
xlat
mov
lret
jecxz
mov
aas
jmp
cmpsb
pusha
les
nop
mov
movsb
movsl
mov
loopne
sub
es
xchg
inc
lret
inc
shrb
dec
pop
mov
into
adc
pushf
cmp
cs
data16
jge
dec
jmp
out
and
lahf
pop
xorb
jg
mov
rorl
pop
xchg
mov
inc
jo
mov
aaa
jge
sbb
fs
mov
lods
pop
adc
push
xor
loopne
xchg
jnp
rol
out
jne
cmp
dec
xor
gs
idiv
mov
and
cmove
or
sub
outsl
dec
xchg
pop
mov
cli
data16
lods
mov
cs
jmp
lret
bnd
or
popl
cwtl
fstl
add
fsub
cmp
popa
fwait
xchg
xor
fs
sub
loope
out
lahf
outsb
lret
data16
add
or
test
outsb
daa
lahf
mov
fisttps
ficoml
lcall
fcmovb
mov
pop
ret
stos
inc
mov
inc
das
inc
inc
ret
movsb
rcrl
push
shr
pop
jbe
push
insl
setb
iret
push
inc
jl
outsl
mov
popf
repz
xchg
sbb
pop
and
mov
mov
test
jne
nop
xchg
xchg
arpl
sbb
and
mov
aam
xchg
ds
xor
sub
out
or
push
add
pop
mov
sub
pop
rcl
mov
mov
addr16
jmp
mov
mov
mov
into
jmp
dec
test
cmp
inc
fs
mov
les
fistpl
gs
mov
adc
xor
xchg
test
pop
fists
add
push
pop
imul
push
fsubr
and
rcll
cmpsb
repnz
xlat
cld
sarl
mov
sbb
pop
ljmp
cmc
fwait
dec
add
xor
ljmp
cli
jne
inc
mov
jno
dec
xchg
out
in
div
dec
xchg
int
call
idivl
mov
rcrb
pushfw
call
pop
adcl
pop
call
push
xchg
stc
icebp
clc
and
icebp
mov
xor
and
into
sub
pop
pusha
push
mov
fbld
mov
and
clc
dec
stos
xor
call
imul
popf
rcl
lea
sub
lahf
mov
nop
fnstenv
cmc
push
xchg
in
mov
enter
sub
xor
enter
or
mov
in
cmp
lcall
or
mov
mov
ljmp
jb
and
push
repnz
ret
mov
add
and
cmp
aas
adc
inc
push
std
sbb
aaa
sbb
cmp
je
outsl
outsb
push
pop
std
mov
pop
adc
scas
mov
fcmove
test
or
loopne
cmp
adc
pop
push
daa
das
fmul
cmpsb
in
dec
jmp
xor
sarl
adc
pop
ss
cmc
fmuls
call
popa
ljmp
pop
push
mov
test
insb
jnp
and
xorb
imulb
ret
scas
dec
pop
push
inc
xlat
and
mov
pop
push
inc
movsl
jg
hlt
mov
ja
pop
aaa
out
sbb
adc
adc
das
mov
pusha
jae
pop
dec
sbb
loop
into
xor
int3
ret
cwtl
hlt
push
xor
jb
cmp
jb
lock
les
not
popa
pusha
or
adc
loope
loope
scas
aam
call
roll
xor
loop
je
xor
je
out
mov
jmp
sbbb
or
ljmp
cmp
aaa
nop
ss
mov
es
cmp
repz
xor
mov
push
js
mov
xor
ljmp
enter
push
ljmp
in
insb
mov
xchg
pop
mov
sbb
mov
sbb
xchg
xor
jmp
cmpsb
insl
mov
test
and
mov
sbb
mov
xchg
out
into
dec
insb
mov
sub
mov
and
repz
clc
mov
inc
in
test
shrb
dec
jle
jp
push
iret
push
es
out
rcrb
shll
jno
inc
lock
pminsw
pusha
out
inc
push
cmp
aas
cwtl
xor
push
cmp
push
cmpsl
popf
outsb
or
mov
xchg
ss
add
test
stc
das
dec
xor
cmpsl
push
aas
mov
repnz
mov
add
es
gs
mov
out
iret
mov
sbb
loope
faddl
mov
mov
stc
stos
ja
or
shll
in
roll
sub
jl
or
mov
dec
mov
push
jg
or
lods
dec
test
cld
push
outsl
jl
xchg
es
outsb
mov
aam
lret
mov
bound
shlb
lods
cmp
nop
jae
in
cmpsl
or
pop
rol
add
and
add
push
xchg
add
inc
hlt
stos
ljmp
or
fwait
shl
xchg
adc
xchg
outsb
push
and
rorl
inc
xor
dec
xchg
test
add
fisubs
data16
push
inc
and
xor
mov
and
je
xor
jp
push
sti
hlt
out
syscall
jmp
clc
mov
or
imul
jbe
mov
in
jne
clc
repnz
gs
test
or
push
xchg
mov
movsb
leave
push
mov
enter
xchg
mov
mov
lahf
sub
xlat
mov
xchg
out
shlb
outsb
mov
frstor
cltd
push
test
push
je
movsb
shr
hlt
xchg
cmp
pop
out
stos
dec
jg
xchg
and
in
xor
outsl
js
jne
stc
loop
pop
out
or
popa
movsl
dec
cmp
in
test
push
push
ja
out
shrb
jno
sub
int
je
dec
push
iret
dec
pop
dec
rcrl
outsb
or
xchg
int3
push
repz
scas
pop
push
lods
sbb
adc
dec
lods
lock
and
mov
shlb
pusha
std
jle
cwtl
imul
lcall
jg
add
jmp
or
int
pop
shr
leave
and
cmp
pop
cmp
iret
push
push
jmp
stos
xor
fmuls
insb
jb
inc
lods
in
aas
mov
xlat
sahf
cmpsl
jmp
push
fsubr
jbe
sti
fs
mov
rcll
add
pop
int
mov
lods
in
stos
sbb
xor
imul
mov
and
xlat
add
fmull
gs
repnz
sub
into
imul
push
jns
repnz
lods
fsub
loopne
fwait
js
stos
ds
and
je
cs
mov
jle
inc
popf
in
out
jae
mov
pop
inc
es
xor
push
jl
xor
in
in
inc
mov
adc
sbb
gs
mov
jmp
sbb
test
cmpsb
dec
fimuls
fucom
jo
ss
scas
mov
movsb
push
dec
rorl
lret
imul
pop
jl
lods
dec
mov
or
pop
shlb
loop
xor
pop
add
test
call
jb
pop
push
add
sub
pop
fildll
cmpsb
mov
xlat
lret
push
lods
clc
push
mov
in
push
xor
jp
scas
xorl
sub
les
ret
add
lds
xor
xchg
xlat
dec
repnz
lods
sbb
mov
inc
ljmp
sub
sub
sbb
cmp
scas
scas
jbe
mov
mov
scas
es
movsl
pusha
mov
inc
dec
aaa
fnclex
push
jmp
pop
and
out
out
mov
sbb
dec
gs
add
cs
push
cmp
jb
mov
pop
leave
ss
imul
scas
and
in
mov
insl
dec
mov
xor
mov
gs
pop
rcll
mov
pop
scas
xchg
and
jno
or
mov
mov
insb
push
jmp
fcmovb
or
sbb
xchg
dec
add
repz
adc
jno
insb
pushf
lock
repnz
andb
lods
icebp
ret
or
adc
lahf
adc
dec
inc
popa
aas
cmp
add
int3
xchg
aas
mov
pop
cld
nop
fistps
das
mov
add
aas
adc
push
mov
outsl
js
and
loopne
xchg
out
push
jo
jecxz
jmp
fs
fldl
stc
daa
cwtl
ss
lret
jns
iret
mov
pop
jmp
ds
cld
shr
hlt
mov
adc
sub
jb
ss
jo
mov
decb
and
mov
add
xchg
mulb
xor
add
lods
fcos
mov
fs
rcrl
push
outsb
fwait
pop
repnz
inc
mov
xchg
int3
ret
jae
out
pop
enter
push
loope
push
mov
call
imul
lock
jb
rcl
mov
push
mov
push
sub
xchg
sbb
push
push
mov
hlt
insl
fsub
arpl
outsb
movsb
and
pop
push
fisttpll
or
pop
cltd
pop
sbb
xchg
fcmovnbe
push
imul
aam
push
in
jmp
xchg
pop
sbb
and
xchg
nop
cmp
clc
into
fsubs
rclb
xchg
mov
pop
ljmp
mov
push
jnp
das
js
addr16
xchg
js
sar
mov
pusha
es
sub
jns
pop
pop
jae
add
je
jns
test
lock
push
clc
cmp
pusha
pop
jbe
jae
stos
mov
icebp
movsl
nop
xchg
and
dec
jb
popf
lahf
loope
iret
add
pop
mov
inc
outsb
lods
sub
and
dec
sbb
pop
fisttps
mov
into
push
lods
out
xchg
inc
mov
popf
jbe
test
sahf
xor
rorl
ljmp
mov
ljmp
jmp
mov
sar
inc
loop
mov
cld
jbe
adc
rcrb
fisttpl
pushf
outsl
pop
int
xchg
adc
add
test
flds
mov
mov
aad
mov
fstpl
fisttps
mov
lds
fs
xor
pusha
movb
fcoml
push
or
lods
addb
jle
ljmp
add
call
mov
into
test
clc
or
pop
pop
scas
test
xchg
imulb
xor
out
pop
mov
push
leave
rcrl
inc
fistl
or
gs
fisttpll
sub
pop
in
mov
dec
mov
mov
leavew
cmc
pushf
daa
out
dec
pop
mov
ret
mov
dec
cmp
xor
sbb
mov
outsl
out
fsubs
sbb
imul
insb
mov
xchg
fisttps
dec
fidivs
add
popa
mov
lds
jns
scas
xchg
mov
push
enter
enter
mov
int3
popf
cli
pop
mov
cli
fdivr
aad
cmp
movsl
aam
and
xor
cmp
mov
dec
jbe
mov
mov
test
jmp
ret
fadd
movsl
add
ror
mov
mov
adc
mov
aam
add
fistpll
add
ljmp
xchg
inc
aaa
repz
mov
mov
xor
dec
daa
int3
fwait
loope
in
or
mov
pop
or
cs
lcall
push
imul
adc
dec
les
ljmp
out
loope
es
pop
adc
push
outsb
and
and
fiaddl
sbbb
and
sub
pop
outsl
sub
xlat
jl
dec
cmp
jno
dec
sub
je
ss
pop
ja
mov
add
lret
inc
jle
push
popa
rcl
jnp
jo
mov
mov
jle
adc
xchg
xor
push
inc
jmp
sbb
dec
add
mov
std
int3
cmp
pop
outsb
fcmovne
shlb
ss
push
repnz
cld
ret
jmp
or
insl
stc
jmp
loope
out
ret
mov
jno
test
jnp
xchg
sar
pop
addb
sbb
mov
ss
mov
aas
mov
pop
jns
int
jns
mov
popl
cmp
xor
dec
cmp
add
push
push
add
mov
push
aaa
adc
adc
mov
leave
pop
pop
inc
aas
xchg
dec
jbe
sar
sbb
ret
push
nop
or
mov
fwait
popa
ret
sub
and
sub
dec
cmc
mov
or
xor
enter
adc
ror
push
jge
and
cmpsl
cmpsb
test
inc
aas
rorl
fldenv
test
psubb
fistpl
sub
fdivr
fwait
dec
sub
std
cld
pop
push
aad
hlt
packssdw
loope
int3
les
imul
lret
sub
jae
test
jg
push
xchg
mov
in
xor
adc
pop
jo
nop
cwtl
or
loopne
adc
mov
xor
sbb
imul
or
push
insl
mov
cmpsl
push
inc
sarb
mov
dec
repz
repnz
xchg
jb
mov
test
sub
mov
popa
leave
dec
xchg
mov
imul
fcmovu
xchg
mov
xchg
rcr
adc
pop
xchg
test
imul
fildl
fidivrs
xor
dec
sti
loop
dec
lock
sbb
adc
dec
stc
pop
repz
sub
ret
mov
pop
rcl
jns
test
enter
push
dec
or
jecxz
call
mov
in
sbb
aas
in
fwait
push
xchg
mov
mov
loope
stc
repnz
cmp
xor
pop
xchg
addl
dec
clc
sub
aas
out
orb
outsl
add
or
ss
inc
or
and
xchg
fneni(8087
push
lock
scas
push
stos
pop
jbe
lcall
push
sbb
pop
into
push
push
ljmp
xchg
lods
shl
xor
adc
sub
push
mov
jb
stos
cwtl
outsl
jl
out
pop
jecxz
sbb
xchg
jbe
arpl
and
aaa
cmc
mov
movsl
jno
fmuls
ret
popa
mov
je
jno
popf
and
xor
daa
ret
lods
dec
mov
mov
stc
shlb
jne
sub
inc
pop
lea
adcl
dec
lret
push
shlb
jno
sub
inc
jo
das
mov
imul
insb
adc
into
mov
lock
push
jne
sahf
gs
sub
aaa
xchg
dec
scas
add
jg
jnp
xor
pop
fsubs
cs
cltd
leave
xchg
xchg
sti
mov
movsb
imul
call
loop
sub
les
iret
shr
push
mov
ljmp
test
gs
fldcw
lock
test
mov
jge
rclb
ds
mov
add
lods
stos
clc
xchg
lock
pop
loop
or
movsl
gs
pushf
cli
movsl
sbb
xchg
sub
and
daa
push
jbe
sbb
sbb
mov
mov
xchg
ficomps
rcr
in
xor
add
inc
or
scas
inc
rorb
dec
mov
les
int3
in
gs
mov
mov
dec
sbbb
int
into
pop
xchg
add
add
xchg
xchg
mov
push
mov
xor
jle
out
jg
stc
mov
jp
jge
stos
xchg
sbb
out
repnz
in
nop
and
scas
sbb
adc
mov
fmull
notb
push
loopne
js
jmp
lods
outsl
ds
mov
xor
lret
xor
sbb
cwtl
sar
dec
imul
enter
in
imul
adc
inc
add
or
xor
clc
imul
add
and
add
mov
xlat
sbb
sbb
sub
jbe
das
jae
lcall
add
cmc
in
stos
bound
adc
cmc
add
add
adc
popa
cs
xchg
inc
jnp
sub
inc
stc
xchg
adc
xchg
adc
jne
lidtl
mov
add
cld
icebp
ljmp
mov
enter
test
adc
sbb
push
adc
xor
lahf
orb
movsb
push
fiaddl
pushf
dec
lcall
call
mov
push
push
scas
jnp
int3
lods
mov
mov
jge
mov
push
dec
test
daa
sub
rcr
test
mov
sub
dec
mov
mov
leave
cmc
mov
sti
sti
mov
cwtl
mov
mov
enter
lcall
mov
out
sub
daa
stos
repz
inc
and
adc
inc
xor
insl
and
in
sbb
dec
pop
lcall
or
sbb
or
jbe
and
pop
sbb
or
in
xchg
lcall
xchg
iret
jecxz
js
add
in
lock
test
in
mov
jbe
cli
call
and
gs
jb
movsb
mov
push
cmc
in
mov
xchg
mov
mov
mov
pop
pushf
or
xor
mov
jo
stos
arpl
popa
mov
and
pop
sbb
adc
xchg
jecxz
test
mov
fcoml
pop
pusha
ds
rolb
aaa
adc
repz
sbb
sarb
shlb
adc
xchg
xchg
cli
cwtl
mov
jg
add
call
mov
js
je
fstl
inc
lods
mov
inc
add
inc
mov
shlb
mov
or
mov
lahf
jbe
push
lock
cmpl
gs
xchg
outsb
sub
daa
scas
and
stc
adc
je
xor
xor
xchg
fmulp
jb
cmp
decb
sub
jmp
jo
mov
and
jecxz
out
call
cli
cld
cs
adc
lcall
xor
loope
adc
or
xchg
mov
inc
adc
nop
imul
sbb
mov
pop
enter
mov
or
mov
xor
mov
cmp
loope
test
ja
ret
inc
mov
xor
add
imul
sbbb
fmuls
pop
xlat
cmp
in
scas
mov
call
sub
lahf
stc
lret
stos
test
and
push
out
mov
jecxz
mov
dec
loopne
mov
xchg
xchg
or
add
inc
sbb
cmp
push
jge
bound
mov
js
cmpsb
pop
sub
loop
repnz
xchg
clc
push
sub
sbb
pop
push
int
add
cmp
loop
call
sub
xchg
rclb
sub
ja
popf
fs
add
aad
jno
adcb
mov
inc
cmpsl
je
setb
lods
sbb
pop
out
push
inc
mov
dec
cmp
cld
lods
cmp
xchg
ljmp
jg
jecxz
mov
mov
jecxz
inc
lcall
outsb
xor
dec
push
cwtl
aas
call
sub
cwtl
in
xor
popf
enter
sbb
test
adc
lret
xchg
ss
xor
hlt
mov
mov
add
jno
into
pop
pop
jbe
stos
daa
repz
scas
dec
aaa
jp
cltd
rol
popa
leave
sbb
ret
aad
iret
ljmp
loop
addr16
push
push
js
cld
cmp
sub
xchg
mov
leave
dec
int
insl
pop
mov
pushf
out
jo
adc
mov
sbb
adc
add
pop
frstors
add
sbb
mov
and
das
das
in
xorb
and
rcl
in
out
fs
cmpsb
repnz
cmpsl
cld
shr
dec
movsl
push
fdivrs
test
les
dec
add
cmp
fimuls
jle
rolb
sbb
ljmp
das
imul
fwait
ljmp
ss
pop
mov
stos
in
out
and
pop
je
movsb
xchg
dec
add
loop
cs
or
call
call
shll
lods
outsl
imul
pop
sahf
lret
lahf
pop
push
popl
sub
push
jo
mov
mov
movsb
mov
jl
dec
jno
gs
xor
mov
test
cmpsb
aas
lahf
and
dec
popf
lahf
cmpl
sub
loope
xor
adc
mov
in
adc
sbbl
adc
sub
shlb
ret
pop
stos
ret
mov
mul
inc
mov
and
lret
pop
pop
pusha
loop
in
push
lcall
shrl
push
cmp
add
cmp
rolb
fmuls
xor
sub
push
fwait
ds
imul
icebp
add
dec
jne
repnz
adc
mov
cwtl
mov
jns
and
into
aas
fimuls
pop
int3
adc
out
std
les
and
movsl
shrl
fmul
sbb
ret
test
outsb
into
sub
lea
hlt
test
sbb
ss
xor
sahf
scas
mov
xchg
jle
cli
sar
or
sbb
xor
jb
push
cmp
mov
lcall
adc
jp
xor
add
dec
shl
xchg
lods
lahf
xor
mov
mov
mov
jae
fists
pushf
mov
int3
leave
jmp
ja
aas
cmc
ja
mov
inc
sub
insb
xlat
mov
out
lcall
popf
adc
xor
fwait
dec
pop
sub
gs
xor
cmp
cmp
fdivl
push
das
clc
aam
jae
mov
add
push
mov
mov
sub
inc
incb
fildl
orl
xchg
pop
inc
mov
or
cmpl
and
stc
mov
mov
inc
sti
cmp
mov
adc
mov
sbb
in
and
cld
loopne
push
repnz
mov
push
jl
and
jmp
cli
push
in
dec
lock
icebp
jp
in
mov
loope
adc
xor
imul
mov
sub
inc
sub
sbb
mov
dec
jecxz
stos
xlat
addr16
hlt
and
fwait
ret
adc
out
and
cmp
mov
je
fldl
add
stc
cltd
add
jp
cmp
adc
xchg
cmovbe
ret
adc
mov
push
mov
sbb
jns
sahf
je
in
add
out
sbb
xchg
add
pusha
lods
push
test
test
lret
loopne
sbb
fs
cmc
ficomps
adc
add
insl
mov
or
pop
mov
and
lahf
dec
fbld
xorl
mov
xchg
jmp
jle
repnz
sub
jnp
adc
into
mov
mov
test
or
push
test
insl
xchg
aas
dec
add
sub
aam
mov
cmpsb
int3
xchg
mov
or
push
jecxz
jecxz
push
imul
mov
jne
lds
mov
add
xchg
push
xchg
xchg
hlt
mov
aas
out
cli
in
popa
arpl
enter
pop
nop
imul
add
shlb
rorl
xor
cmp
and
pop
repnz
and
gs
mov
xor
cli
cmp
pop
adc
mov
aad
jbe
stos
xlat
rcll
dec
push
daa
push
push
pop
insb
inc
lahf
daa
sbbl
pop
or
sub
or
xlat
cmp
mov
lods
push
xor
push
cmpsb
fstpl
mov
fs
jg
insl
mov
les
push
shr
push
jns
into
mov
mov
out
mov
mov
pop
xlat
lret
mov
adc
movsl
fcmovbe
imul
mov
jmp
leave
mov
lods
inc
cmpsl
and
cmpsb
icebp
cmp
adc
push
and
dec
arpl
gs
in
mov
mov
pop
or
mov
add
sub
test
add
mov
push
fwait
mull
xchg
xor
sbb
push
fmuls
sub
call
daa
sbb
and
aad
cltd
in
xor
or
xor
mull
push
sbb
fistpll
icebp
loop
fcmovne
loope
pop
push
cmp
cmp
scas
jge
aas
sub
out
not
pop
cld
out
ljmp
dec
sbb
cmp
add
ret
into
sub
pusha
dec
pusha
dec
mov
jb
movsl
dec
jl
push
mov
mov
add
inc
adc
and
xlat
cld
bound
push
pushf
jle
shrb
addl
rorb
and
daa
adc
mov
xchg
cmc
in
fldl
dec
repz
xorl
stos
add
test
arpl
mov
jno
out
inc
mov
jnp
out
push
jg
in
xor
jnp
pop
inc
add
movsb
mov
sbb
pop
cwtl
jmp
stos
orb
in
xchg
fdivrl
out
jne
jnp
jmp
popl
and
decb
cld
mov
mov
jno
imul
ret
loope
xor
mov
testb
test
pop
xchg
ficomps
xor
rcrl
fsts
jecxz
shrl
and
lea
xchg
faddp
mov
mov
xor
fimuls
push
imul
ret
adc
loope
xchg
xor
mov
mov
stc
in
pop
jl
xchg
lahf
in
aad
pop
scas
cwtl
jge
fs
ds
clc
bound
xor
addl
xor
aaa
and
dec
add
repz
pop
test
or
adc
cmp
imul
out
popf
mov
movsb
in
sbb
jg
in
sahf
hlt
inc
adc
cmpsl
mov
sahf
scas
xor
repnz
and
out
sbb
pop
mov
mov
sbb
outsl
sub
sbb
mov
cmpsl
stos
pop
fidivrs
jae
push
pop
pop
mov
outsb
enter
fistpll
inc
dec
in
cli
lods
rclb
mov
mov
pop
movsb
mov
add
mov
lods
sbb
adc
sbb
xor
xchg
insb
imul
and
ret
xchg
inc
jl
ret
dec
xchg
xor
mov
mov
gs
jo
cld
scas
mov
mov
jle
es
std
sti
pop
jnp
dec
or
jbe
and
in
cmp
xchg
xchg
xor
jecxz
dec
dec
rcll
aaa
inc
js
rorb
sbbl
enter
pop
fimuls
movsb
sbb
nop
adc
pop
and
pop
cs
cwtl
shrl
scas
sbb
sbb
cmp
add
outsb
cli
test
arpl
inc
aad
in
loope
je
dec
loope
dec
or
into
sub
mov
lret
add
adc
adc
sub
outsb
jg
imul
call
fisubrs
aaa
inc
dec
lods
js
movsl
mov
mov
xor
xor
push
addr16
xor
nop
cmp
cmpsl
pop
cwtl
aaa
shlb
cmp
and
repnz
push
and
aad
aas
fs
or
cmp
jl
push
clc
mov
fistps
mov
cmp
inc
enter
iret
jae
pop
popa
mov
mov
aas
push
sbb
or
ss
jl
sar
xchg
sarl
pusha
nop
test
ljmp
test
cmp
sarb
in
cmp
negb
setb
cmp
and
dec
mov
hlt
cmpl
xor
cmp
and
xchg
pop
mov
push
xchg
adc
jbe
addr16
dec
clc
test
lahf
cmpsl
aad
dec
fnsave
pop
pushf
mov
test
add
int
out
xchg
cli
ds
cmpsb
cmp
fcomi
out
cli
or
ret
mov
pop
stos
clc
xchg
add
ds
add
push
shl
loopne
mov
and
test
pop
hlt
push
cmp
in
ret
in
ljmp
push
dec
mov
xchg
bound
xchg
adc
inc
inc
adc
sub
xchg
int
ljmp
cmp
push
pop
movsb
jnp
pop
xchg
adc
xchg
icebp
add
mov
mov
mov
movsb
filds
insb
ficomps
cltd
jb
out
adc
sbb
dec
jle
lret
mull
xor
movsl
aam
cmp
add
push
outsl
push
xor
movsl
jnp
dec
push
pop
push
xchg
xor
imul
dec
in
or
adc
leave
jnp
aad
mov
adc
and
pop
inc
mov
lds
jnp
hlt
decl
lock
mov
add
mov
mov
xchg
xor
in
ret
cld
cmpsb
call
adc
push
enter
jnp
and
iret
and
jp
dec
out
xor
xor
sahf
arpl
fwait
data16
dec
fwait
pop
xor
push
mov
loopne
shlb
arpl
scas
fisubs
xchg
jge
pop
fldcw
rorl
cmpsb
jle
dec
push
sub
add
pushf
pop
push
xor
xchg
push
and
or
xlat
aad
movsl
int3
jnp
dec
sub
adc
or
and
xor
adc
aas
xchg
and
cmpsl
call
fwait
dec
fisubrl
push
enter
cmp
fimuls
pop
lds
or
fs
jb
add
xchg
mov
cmp
into
push
xlat
mov
mov
clc
das
sub
pushf
push
popf
mov
xchg
in
testl
cmp
call
test
adc
inc
test
push
adc
xor
xchg
test
lret
movswl
and
push
clc
sub
xchg
adc
call
push
sub
mov
mov
insl
int3
mov
mov
es
faddl
add
lret
outsb
push
ja
int3
aam
repnz
rolb
vmread
push
mov
addl
or
test
sub
cmp
and
pop
fistpl
test
sub
mov
adc
ss
push
dec
mov
mov
xlat
push
test
and
repz
inc
subl
daa
out
jnp
jle
cmp
add
xchg
cmp
mov
push
or
scas
clc
insl
addr16
mov
pop
and
xchg
mov
xor
imul
in
loopew
mov
shlb
sbbl
stc
cmc
jnp
aaa
cmpsl
adc
push
aaa
dec
arpl
sarl
inc
repz
xchg
dec
jle
cmp
xchg
push
fnop
push
push
xchg
xor
fcomip
scas
sahf
outsl
push
arpl
add
dec
add
stc
sbbb
popf
jecxz
mull
dec
adc
sub
xchg
js
push
mov
inc
aad
gs
out
and
fcmovnb
cwtl
mov
stos
stos
jo
jbe
stos
mov
shlb
cmc
mov
xchg
fdivrs
sbb
mov
mov
dec
pop
ficoms
add
push
push
xlat
sub
mov
in
outsb
mov
sti
jecxz
int3
inc
fsincos
ja
hlt
call
or
jl
cmp
lds
popa
lret
cmp
insl
mov
lods
mov
notb
sub
jno
jecxz
loope
je
in
daa
mov
loopne
fistpll
mov
int
jbe
push
cmpsb
pop
and
std
lods
aaa
inc
mov
ret
into
lcall
inc
mov
aam
call
subb
cmp
std
test
ret
mov
jmp
push
in
mov
mov
scas
inc
imul
pop
push
mov
int3
pop
clc
mov
ss
mov
cmp
ljmp
sahf
orb
stc
xor
add
mov
lret
cmp
lcall
mov
lds
mov
popa
sbb
imul
cli
data16
dec
fsubrs
push
fisubl
pop
mov
xor
mov
mov
int
cmp
or
cmp
cltd
mov
call
ret
aam
cli
int
push
cmp
push
data16
and
mov
decb
inc
adc
mov
movsl
xchg
ja
push
sub
rcr
movsb
jl
xchg
out
mov
xchg
sahf
test
in
adc
in
loopne
fstps
sahf
outsl
push
in
outsb
testb
cltd
sub
jnp
xchg
cmp
mov
add
xchg
sbb
icebp
jle
dec
pop
xchg
popa
in
cli
idivl
add
out
mov
push
test
dec
std
loopne
jecxz
fsubl
jno
xchg
xchg
or
repnz
pop
js
fsts
test
mov
lock
push
lahf
ret
pop
fldl
fsubp
lcall
jno
jmp
fstl
xor
movsb
out
mov
loope
xor
push
mov
std
mov
rorl
icebp
pop
aad
sub
mov
mov
loopne
outsb
mov
push
cmpsl
mov
mov
jp
sti
je
js
add
mov
arpl
sub
lret
xchg
data16
es
and
mov
ficoml
aas
push
mov
xchg
in
lods
jmp
push
stos
mov
icebp
inc
sbb
popa
xor
adc
sub
lock
inc
mov
pop
icebp
jae
mov
push
lods
jno
mov
pop
roll
ss
je
sbb
inc
dec
and
xlat
or
push
sub
mov
mov
pop
mov
jb
pop
rorl
adc
scas
aam
mov
stos
cltd
hlt
paddusb
mov
out
push
aas
pop
pop
mov
lret
imul
daa
pop
cltd
shlb
xor
xor
shlb
xchg
pop
mov
push
dec
push
push
push
cld
add
lock
jg
addb
jp
pop
inc
xlat
or
adc
jnp
dec
pop
mov
out
mov
adc
loop
xchg
or
cmp
jno
stos
add
mov
test
addr16
jnp
dec
bound
lds
lea
dec
insb
mov
mov
sbbb
push
aas
cmp
mov
fcmovnu
adc
addr16
sub
out
insb
xchg
into
pop
pop
adc
arpl
push
test
aad
or
xor
bound
addr16
adc
mov
sbb
push
jecxz
cmp
and
push
inc
into
add
xchg
push
pushf
jns
or
push
or
bound
test
xchg
jp
push
cmp
in
mov
in
or
dec
xchg
mov
add
cwtl
and
adcb
adc
popf
dec
inc
dec
mov
daa
test
lds
lods
jl
pop
ja
lcall
mov
mov
sahf
push
bnd
cmp
mov
test
xchg
imul
push
ret
ljmp
dec
sti
repz
scas
add
cld
sbb
out
mov
dec
bound
or
lahf
rcrl
jl
out
scas
push
mov
push
cli
mov
iret
pushf
jbe
cs
fidivs
pop
mov
pusha
and
cli
mov
int3
fdivrl
into
fs
repz
cmpsl
add
dec
dec
inc
clc
out
pop
sub
mov
pmaxub
arpl
jbe
sbb
fxch
fsubl
scas
xbegin
int3
jns
out
adc
push
jo
push
out
stos
cmp
push
xlat
cmpl
pusha
mov
xorl
aas
call
mov
xchg
inc
mov
xchg
cmc
push
xchg
pop
jmp
rcrl
loopne
adc
pop
and
xchg
and
jge
xchg
rorb
movsl
lods
test
jae
out
rorl
rclb
and
inc
and
pop
addr16
pop
cmp
sbb
dec
and
sub
dec
or
dec
sbb
cs
cmc
gs
ljmp
test
push
pop
test
xor
adc
mov
sbb
sub
cmc
or
sub
mov
inc
aaa
inc
cmc
and
xchg
xchg
test
shl
cld
jle
sub
lock
inc
jno
popa
mov
sub
dec
and
ljmp
pop
xchg
xchg
push
jmp
xchg
rclb
jo
mov
test
mov
xor
xchg
pusha
mov
push
test
js
pop
mov
mov
mov
xchg
clc
mov
popf
sbb
add
mov
enter
inc
sarl
xor
clc
paddsw
frstor
mov
adc
cmp
sub
inc
xchg
bound
mov
addr16
adc
jne
aam
test
popf
int
pop
lods
lea
jnp
ljmp
dec
addb
adc
outsb
cltd
int3
leave
loop
jb
repz
dec
cli
sbb
cs
vrsqrtps
mov
push
push
rcl
cld
mov
push
push
repnz
sub
jl
mov
jae
fisubl
movsl
adc
lds
imul
mov
push
insb
cli
cld
jg
mov
mov
xchg
xchg
incb
mov
mov
cli
movntps
ds
sahf
out
jno
lret
lret
out
sub
pop
and
fildl
mov
addl
inc
out
enter
inc
push
mull
jb
fdivl
mov
imul
mov
and
jne
cltd
adc
les
mov
adc
stos
dec
outsl
sbb
loopne
and
test
je
adc
test
stc
cmpsl
sti
mov
or
fxch
cwtl
dec
pusha
shrl
push
loop
push
cmp
outsb
xchg
dec
stos
pop
push
sbb
dec
sbb
mov
adcl
pop
mov
ret
mov
in
jge
popf
popf
imul
ljmp
mov
fiadds
jp
sbb
or
dec
cltd
mov
scas
in
rorl
push
jnp
pusha
je
sub
mov
xchg
outsl
std
mov
mov
pop
ret
movb
stos
fs
insb
call
decl
cmpsb
sbb
mov
dec
xor
dec
and
into
shlb
pop
jbe
pop
stc
mov
aaa
mov
and
mov
jle
mov
dec
negl
daa
aam
movsl
test
xchg
mov
or
in
gs
daa
shrb
xor
sbb
push
int3
inc
xor
pop
fildll
push
cmp
mov
mov
pop
sub
sub
cmpsl
repz
insb
jnp
and
lock
mov
mov
mov
lret
cli
decl
repnz
and
xlat
and
cmp
repnz
jnp
scas
mov
insl
packsswb
or
sbb
aaa
push
xor
movb
xchg
pop
daa
inc
or
mov
xor
sti
dec
push
dec
sbbl
pop
inc
and
xor
arpl
ja
add
jecxz
sub
add
cmp
xor
jno,pt
inc
dec
enter
xor
inc
and
fldcw
mov
or
dec
mov
and
pop
cmp
add
movsl
mov
in
mov
xchg
pop
int3
push
rorb
out
cmp
xchg
in
cmpsl
es
and
jbe
add
jge
ret
inc
and
push
jo
mov
insl
nop
xchg
ss
push
or
push
mov
iret
and
int3
mov
dec
ds
xchg
stos
xor
and
cmc
xor
xor
cmpsb
dec
loopne
jae
push
mov
cmp
sbb
inc
std
cmp
adc
inc
mov
cld
sbb
jle
mov
outsl
inc
adc
outsl
pop
outsb
adc
hlt
fadd
in
pushf
jecxz
nop
nop
or
jno
out
ret
sbb
mov
loop
inc
das
xor
cmp
pop
jae
mov
jns
loopne
lea
fdivs
setnp
repz
dec
xchg
je
inc
cs
fwait
dec
fidivs
sbb
outsb
nop
lock
testb
cwtl
rcrl
das
mov
mov
pop
shll
mov
add
pop
adc
add
rclb
or
cs
out
mov
xchg
lock
loope
into
test
aam
enter
fldcw
cmp
and
test
dec
or
adc
dec
xor
or
pop
jbe
xor
cmc
adc
push
jge
aad
fldenv
cmp
xor
pop
dec
retw
fstpt
inc
mov
jae
mov
mov
std
pushf
cli
xor
adc
mov
inc
addl
mov
pop
jae
ret
enter
addl
aaa
and
inc
mov
jmp
repz
mov
xor
dec
mov
roll
int3
adc
fwait
sub
jne
push
and
xlat
mov
mul
cmpsl
rcrl
adc
std
pop
outsb
loop
ror
jns
or
pop
test
adc
js
iret
jge
rclb
xor
mov
cmp
mov
fucom
ret
and
hlt
lods
repnz
pop
inc
adc
push
mov
loopne
fsub
dec
andb
inc
insb
lock
inc
xchg
jne
sbb
xor
sub
fld
fidivrs
xchg
lahf
add
loop
rcrl
mov
cmp
or
pop
sbb
test
add
xlat
leave
sbb
or
jecxz
imul
movsb
movb
jno
faddl
hlt
inc
jp
stos
test
add
mov
mov
xor
aad
imul
mov
pop
mov
jo
jnp
in
mov
push
adc
jle
adc
lea
fildll
jns
jl
add
push
jne
loopne
inc
inc
lods
mov
cmp
int3
or
sbb
and
daa
pop
inc
cli
js
or
or
bound
notl
xchg
cmpsl
xchg
movsl
inc
scas
clc
sub
mov
push
or
fnstcw
aad
xchg
loop
mov
shrl
mov
outsl
dec
or
xchg
aam
and
xorl
sub
nop
mov
sub
jecxz
mov
cmc
outsl
adc
add
cmp
inc
into
jo
cmp
out
xor
cwtl
inc
mov
sti
fdivr
ds
mov
or
sub
and
stc
sbb
adc
jl
lahf
sub
inc
mov
mov
stos
aad
and
out
mov
in
and
xchg
mov
sbb
xchg
xor
cmp
lods
mov
and
stc
imul
in
shll
fcmovu
jp
push
lcall
add
imulb
pushf
movsl
js
int
fiaddl
mov
sub
out
adc
xchg
jo
sar
test
pop
pusha
mov
lea
jg
sbb
dec
loop
inc
push
mov
pop
xchg
push
out
popf
cmp
mov
test
pop
ljmp
aas
movsl
xor
ds
jg
mov
pop
xchg
sub
xchg
mov
sti
loope
pop
fsubr
scas
add
jo
adc
mov
mov
pusha
std
fisttpl
add
outsb
dec
sbb
sti
cmpsl
inc
adc
cltd
pop
xchg
add
xor
ret
mov
shlb
push
in
movsl
push
daa
add
cmp
repnz
fsts
push
xor
fs
or
shll
xchg
pusha
outsl
jg
fs
xchg
rol
cmp
adc
xchg
imul
repnz
inc
fsub
scas
adc
cmp
jmp
into
adc
adcl
sub
imul
repnz
cmpsb
push
mov
dec
lds
push
mov
pop
fs
aas
sbb
sbb
jle
sub
popa
inc
lea
push
xor
fscale
fdivrl
movsl
pop
sarl
inc
fisttpll
arpl
mov
mov
loopne
push
aas
mov
xchg
iret
jnp
mov
pop
ret
or
add
lcall
loopne
pop
pop
insb
cmp
or
add
add
rcl
repnz
mov
lods
jnp
in
push
dec
add
pop
lea
jecxz
iret
mov
addr16
sbb
ret
inc
inc
pop
cld
cli
fisubs
call
lahf
sarl
push
push
pop
mov
ljmp
loope
mov
xchg
test
mov
shll
lods
loope
sti
je
jne
and
test
into
pop
mov
and
mov
push
repnz
notl
mov
repnz
adcl
clc
test
bound
sub
mov
fs
fstpl
std
call
outsb
fisubrs
add
jae
xor
sbb
jb
test
sbb
stc
lret
mov
xor
xor
fcomip
iret
stos
mov
xlat
and
add
dec
imul
inc
mov
ret
js
movsl
jge
xchg
scas
pusha
push
pop
xchg
or
sbb
push
sbb
pop
lods
cltd
push
adc
dec
push
cmpsb
mov
icebp
inc
jbe
cmpsb
test
inc
gs
jbe
or
ds
fwait
mov
shll
xchg
cmp
int
inc
adc
jge
jmp
dec
mov
movsl
out
sbb
out
sbb
repz
mov
lods
rolb
lods
mov
lock
xchg
adc
sti
fucomi
mov
aam
mov
arpl
cld
aaa
jae
mov
xor
das
and
cmp
push
rcll
jbe
or
inc
jb
ljmp
je
data16
lock
jmp
imul
ror
cmc
dec
cmpsl
arpl
sub
push
and
xchg
cld
xchg
cmp
dec
sahf
repz
sbb
push
mov
lods
inc
and
notl
gs
out
mov
lret
mov
inc
ljmp
sub
lds
in
sub
mov
les
das
jle
frstor
jge
pop
jge
mov
ret
in
fmull
call
dec
and
dec
inc
hlt
dec
subb
pusha
mov
lcall
xchg
mov
in
mov
mov
inc
sahf
mov
sbb
jne
sub
repnz
and
call
test
imul
xor
aaa
jmp
dec
lcall
cmp
sbb
sti
inc
and
sti
xor
push
adc
ljmp
loopne
jae
add
fld
mov
leave
push
mov
jmp
fildl
and
mov
and
out
jnp
add
push
sub
adc
into
fs
das
cmpsb
leave
sbb
push
rcrl
jne
sti
movb
mov
jmp
ficoms
in
and
loope
mov
jnp
pusha
cmpl
mov
xorl
roll
sbb
pop
sbb
add
mov
xchg
xchg
lret
pushf
and
xchg
clc
pusha
lret
aas
add
inc
jne
das
cmp
add
fnstsw
lret
out
jg
js
jmp
jo
xorb
xor
pop
dec
arpl
lods
pop
mov
inc
and
adc
imul
in
jbe
int3
in
cli
ds
test
xchg
pop
cmp
cmpsl
aaa
enter
sub
in
ret
out
mov
lret
sbb
mov
push
mov
sbbl
lods
aad
add
out
or
mov
notb
pushl
shlb
daa
adc
lret
and
mov
sub
shlb
popl
push
jp
je
rorl
push
ss
bound
mov
dec
pop
cwtl
xor
loop
dec
sbb
xchg
orb
iret
inc
jecxz
cld
daa
icebp
jle
insb
cmp
or
jmp
mov
xchg
and
aaa
pop
insl
int
push
push
fcoms
jecxz
push
cmc
lea
xchg
hlt
push
leave
shlb
cld
lret
and
js
mov
or
insl
jle
pop
cli
icebp
and
stc
push
xor
xor
sub
or
loopne
mov
sub
jns
adc
rolb
pop
xor
adc
loope
or
ror
repnz
cmp
mov
push
xlat
lds
ds
nop
je
data16
repz
stos
xchg
ror
cltd
or
aaa
push
cmp
push
bound
mov
repz
cltd
adc
les
mov
jbe
cli
xchg
add
aam
jmp
pop
ss
add
mov
mov
lret
pop
and
movsb
in
les
jg
sbb
cmp
jle
in
jae
cwtl
adc
jns
repz
das
xlat
stc
xchg
insb
scas
push
cmp
aas
dec
jno
inc
loop
xchg
push
mov
xchg
cmp
out
jo
jecxz
xchg
push
mov
std
and
fcompl
mov
sbbl
cmp
push
mov
mov
lahf
insb
pop
imul
in
pop
xorl
sub
sbb
lret
ret
fs
in
fldl
lea
out
lahf
mov
fsub
xor
jno
pop
sti
inc
lods
imul
je
mov
sbb
add
das
pop
xlat
in
mov
adc
mov
scas
lods
shlb
dec
dec
cmp
stos
sub
xchg
enter
xlat
ljmp
aaa
scas
cltd
je
iret
pop
leave
aaa
test
dec
cld
fs
mov
mov
cwtl
and
xor
or
mov
adc
mov
addr16
dec
fwait
shlb
lret
pop
xchg
lods
add
in
and
cwtl
or
and
xlat
dec
repnz
pop
jle
or
add
jbe
addr16
lods
nop
cmp
dec
mov
leave
dec
sub
lahf
push
lret
cmc
ljmp
push
cmp
andl
cmc
inc
sbb
in
jne
in
fcmovnb
mov
in
out
push
fisubrl
mov
jb
pop
test
push
leave
sub
ds
pusha
mov
and
cld
cmpw
lret
jo
push
fistpll
dec
ret
or
dec
ret
cmpsl
fwait
adc
push
push
sub
jae
ret
sti
adc
aam
cmp
xchg
shr
push
mov
inc
mov
fcmovu
fabs
xchg
popf
pop
mov
insb
fmuls
clc
inc
cmpsb
push
add
jb
jmp
data16
insb
push
int
scas
test
aas
dec
jbe
outsb
push
adc
pop
je
pusha
and
sub
js
or
insb
push
popf
insb
repz
mov
mov
inc
sbb
lea
int3
pop
stos
xchg
add
jge
les
push
sub
out
inc
ss
or
push
fidivrs
cmp
adc
mov
pop
inc
mov
cmpsb
aad
sarb
jmp
sub
addr16
enter
lods
adc
sbb
sti
mov
push
dec
push
jno
mov
cmp
out
jmp
insl
stos
cmpsb
mov
push
pop
loop
lcall
outsb
mov
inc
adc
jns
jno
inc
lcall
mov
mov
fsubs
mov
int3
add
mov
clc
xchg
or
pop
fsubs
and
jg
sbb
pushf
or
lods
es
inc
pop
data16
hlt
cmc
pop
test
lea
jbe
xor
inc
into
mov
inc
lcall
sub
aaa
pop
repnz
out
add
fwait
ja
push
lods
outsl
mov
pushl
adc
push
in
xor
mov
loop
pop
push
shlb
sbb
nop
lods
imul
and
mov
cld
test
mov
sub
nop
xchg
daa
ja
jbe
or
or
addr16
push
cmpsb
sub
pop
mov
add
xor
sbb
stos
ja
jne
adc
popa
int3
inc
rcrb
inc
push
mov
xchg
add
fs
aam
out
clc
ficomps
push
jle
in
cmc
jo
pop
jecxz
int3
bound
in
scas
pushf
or
pop
repnz
jbe
lods
push
or
cwtl
sbb
sbb
call
pop
inc
dec
add
push
jns
dec
mov
jmp
loopne
ret
scas
push
mov
fstpt
leave
hlt
push
xor
dec
add
adc
fwait
inc
lahf
cli
mov
or
in
lret
mov
outsb
inc
in
inc
xor
fistpll
mov
fistpl
int3
imul
xchg
lock
sub
jo
cmpsb
shlb
xor
lahf
jb
test
mov
dec
mov
bound
sbb
mov
fcomps
jecxz
test
test
call
add
inc
push
jge
lea
jns
sub
and
test
push
fwait
orb
xchg
push
push
cs
repz
xor
std
inc
insl
lret
inc
jl
jmp
inc
pop
xchg
stos
sbb
xchg
and
sub
xchg
pop
rclb
test
rorb
or
cmpsl
jo
mov
rol
cwtl
enter
jnp
inc
inc
pop
sbb
inc
pop
jmp
into
jo
out
dec
stos
fdivrl
pop
cmpsl
pop
hlt
cltd
jnp
push
ljmp
es
ja
je
cmpsb
fwait
mov
sub
fbstp
cli
mov
mov
scas
and
push
popa
neg
adc
mov
sbb
sahf
sub
mov
jbe
xchg
icebp
inc
sbb
mov
inc
or
push
pop
cmc
shrl
mov
jae
pop
in
add
dec
add
aam
lret
push
sbb
in
mov
push
stos
lret
sahf
jp
addb
jmp
and
add
adc
lret
out
push
xor
jecxz
rorl
and
cmc
ret
ret
jecxz
fcmovne
mov
sbb
inc
fbld
call
gs
add
stos
filds
les
enter
das
mov
clc
inc
mov
and
fstl
push
test
mov
insb
pop
and
aas
call
lret
xchg
sarb
subl
or
push
fcompl
clc
out
adcb
xor
js
xor
loope
add
xor
lea
hlt
nop
repz
popf
icebp
sbb
int3
into
cmp
jmp
stos
dec
lahf
sub
out
or
ss
addr16
and
daa
loope
mov
mov
lret
pop
inc
negb
and
push
in
jae
lods
mov
js
cmpsb
jmp
or
add
dec
jns
loope
xchg
call
push
push
xor
sbb
jmp
xor
mov
lods
mov
adc
out
xor
mov
repz
fiadds
in
inc
mov
ror
int3
dec
arpl
arpl
dec
in
add
rorl
or
push
aaa
sbb
mov
das
nop
or
and
inc
movsb
add
inc
sub
pop
mov
cmpsl
or
fsubs
sbb
add
nop
movsb
adc
or
cmp
lret
adc
add
rolb
sti
ds
insl
sub
and
imul
xchg
mov
rol
push
mov
inc
je
or
push
clc
mov
xchg
xchg
push
sub
and
xchg
jns
sub
add
add
or
mov
aam
pop
lods
loopne
cwtl
popa
lret
add
inc
pop
mov
data16
es
hlt
mov
cmp
stos
in
mov
scas
test
pop
push
ror
sub
xor
mov
aaa
or
or
cmp
xchg
mov
in
adc
outsb
mov
xchg
in
xchg
push
pop
mov
icebp
dec
repnz
clc
jp
add
xorl
inc
outsl
push
or
lret
loopne
mov
jp
lcall
mov
repz
xor
push
lds
add
adc
pop
pushf
sub
mov
pop
push
inc
mov
dec
push
sarl
shl
out
rcl
test
jns
or
ds
xchg
sub
cltd
xchg
fwait
mov
movl
dec
sti
repnz
push
roll
or
xchg
cmp
lds
ret
mov
fiaddl
cmc
sbb
lods
jns
in
inc
repz
dec
ret
es
lods
jge
ret
movsl
jae
add
stc
jge
lret
in
jbe
int
idivb
fcoms
lcall
jns
cmovge
rolb
mov
xchg
mov
dec
mov
cs
fildl
cmpsb
nop
pop
push
and
pop
hlt
test
std
xchg
test
xlat
fs
sub
push
sub
xchg
enter
lods
sbb
push
fcoms
push
xlat
lods
add
push
jnp
adc
into
xlat
mov
jg
cmp
mov
adc
es
dec
cmp
xorb
pushf
add
push
scas
inc
mov
push
mov
sbb
jbe
xchg
aaa
push
sti
ss
pop
icebp
inc
dec
inc
bound
push
and
into
outsl
nop
pusha
cmova
push
cld
test
mov
fsubs
sbb
adc
pop
pop
adc
pop
xor
jns
adc
mov
cmc
push
adc
jecxz
loop
pop
in
jmp
dec
scas
dec
xlat
xchg
shlb
dec
sub
int
jg
add
push
mov
xor
mov
dec
inc
inc
loop
repz
or
adc
ucomiss
int3
cmp
out
outsb
lret
xor
xchg
shrw
pushw
inc
inc
ja
ja
adc
setae
jne
out
xchg
ret
sbb
push
sbb
inc
vmaxpd
cmp
test
stos
pop
fisubl
or
xchg
js
push
jbe
lods
fwait
out
xor
and
inc
pop
je
icebp
int3
scas
mov
imull
ja
and
mov
push
insb
mov
enter
push
orl
imul
mov
lock
jl
repnz
or
cmp
jmp
xor
mov
push
mov
sub
jnp
add
pop
mov
jae
sub
fwait
xor
cli
cmc
jl
xor
scas
mov
mov
clts
push
fistpl
pop
push
daa
outsb
shrl
movsl
pop
push
and
xchg
lods
aas
into
ja
add
sbb
ret
jg
cmc
adc
scas
jno
xor
dec
loopne
sub
xor
repz
mov
lock
scas
mov
xor
add
push
cmpsb
adc
pop
add
lea
into
inc
lret
cmp
or
loopne
out
xor
jle
fdivl
test
mov
mov
cmpsl
repz
dec
dec
out
or
jp
js
sbb
cmc
test
outsb
stos
shrl
mov
cmpsb
cmp
add
les
in
xchg
sbb
jno
es
and
fsubrl
lret
cld
aad
loop
mov
inc
aas
imul
xchg
add
xlat
imulb
pop
andb
arpl
xchg
es
gs
data16
lods
jg
and
mov
inc
push
mov
into
inc
aad
xorb
mov
mov
addr16
pop
or
xor
sub
and
push
decb
aad
repnz
ret
jbe
mov
sbb
push
xor
cs
mov
xor
mov
hlt
lcall
nop
jbe
lret
cmp
je
sub
sbb
mov
shrl
mov
gs
pop
or
sub
pop
and
push
out
cwtl
mov
mov
mov
jp
push
cmp
xchg
cltd
jns
jp
aas
loopne
push
test
inc
imul
lea
mov
ja
pop
cmpsl
sbb
adc
pop
cmpsl
inc
jecxz
inc
jp
jge
sbb
stmxcsr
cmp
mov
movsb
imul
mov
stos
dec
mov
sbb
inc
fisttps
andb
dec
push
addr16
adc
add
inc
popa
xchg
xor
jns,pt
add
iret
mov
fidivs
dec
filds
push
outsl
pop
xchg
jge
fdiv
inc
outsb
sbb
in
lahf
mov
testb
add
push
insl
aaa
sbb
imul
es
daa
dec
stc
mov
pop
push
dec
mov
or
mov
mov
jmp
test
adc
movsb
iret
push
and
push
mov
stos
xor
pushf
mov
add
jp
and
xchg
les
mov
pop
mov
sub
shlb
jae
mov
xchg
aas
sbb
xor
and
or
aad
test
cltd
fidivl
jae
subb
iret
cmp
clc
mulb
lahf
mov
mov
loope
cld
mov
lahf
les
repz
movsl
and
mov
mov
sbb
fwait
mov
pop
shrl
jno
lea
pop
jl
out
outsl
mov
cmpl
shrl
xor
mov
cwtl
out
mov
stc
xlat
mov
pop
pusha
js
loopne
mov
mov
ss
les
push
mov
pusha
sbb
mov
lea
testb
lods
popa
pushf
in
push
ret
lret
dec
adc
pop
icebp
mov
insl
xor
stc
sbb
lcall
enter
push
test
pop
popf
cwtl
mov
xchg
pop
mov
dec
xlat
mov
mov
fldcw
stos
mov
add
add
fisubrs
and
popa
divl
inc
sub
or
ja
mov
mov
xor
adc
test
aaa
xor
jae
inc
xor
repnz
test
add
pop
xlat
dec
pusha
test
mov
dec
loopne
inc
ja
into
add
outsb
cmp
sub
push
fstpt
jne
sub
pop
mov
aas
aad
psubsb
pop
xor
daa
inc
push
push
mov
popf
add
imull
or
dec
fucom
inc
adc
cmc
jl
popa
ja
inc
push
jo
push
ds
lods
mov
idivl
dec
adc
mov
pop
fisttpl
mov
jnp
inc
inc
mov
pop
adc
bound
rol
jle
xchg
stos
xchg
inc
mov
insl
mov
ret
pop
inc
adc
movsl
in
aad
loope
inc
mov
ljmp
ljmp
stos
jecxz
xor
stc
dec
fcomps
add
cmp
mov
pushf
arpl
push
mov
cmp
pop
lds
mov
xchg
mov
cmpsl
sti
xchg
shll
xlat
mov
pop
adc
dec
cmp
push
xchg
sub
or
jb
and
or
inc
jl
daa
cmpsb
xor
test
sti
movsl
jnp
push
xchg
sbb
mov
push
popf
outsb
or
cwtl
daa
sbb
popf
icebp
cwtl
imul
cld
les
dec
adc
stc
mov
mov
cmp
int3
dec
iret
pop
out
in
and
fsubrp
loopne
out
pushf
loopne
es
add
movsl
xor
push
cs
repz
add
nop
enter
jns
lret
std
aaa
pop
mov
lahf
push
lods
dec
fldt
fcoms
loopne
mov
roll
mov
xlat
dec
cmpsl
stos
lcall
jp
daa
lret
or
and
addr16
pop
and
sbb
inc
jl
xor
stc
and
jb
lret
push
add
dec
jns
mov
cmpsb
mov
arpl
push
stos
lods
sub
jns
sub
inc
pop
push
sub
dec
call
nopl
mov
sbb
sub
pop
enter
xor
rcll
adc
lea
stc
iret
jecxz
xchg
mov
ljmp
mov
pushf
and
push
jbe
test
adc
jo
pop
push
mov
or
mov
cmp
nop
pop
aaa
and
and
arpl
out
imul
pop
iret
jp
nop
jge
dec
lods
es
mov
sub
arpl
fcmovnu
mov
sub
je
fwait
and
and
lcall
repz
pop
dec
movsb
or
test
mov
adcb
mov
mov
push
mov
xor
mov
lods
out
fs
cmp
cmp
fisttpll
aam
inc
mov
mov
rcrl
pop
in
inc
and
add
call
and
inc
cs
mov
push
and
cmp
xchg
mov
std
sahf
pop
inc
fildll
jnp
nop
lret
je
pop
test
xor
leave
js
add
ja
in
jg
inc
dec
jb
jecxz
insl
cmc
inc
or
pop
xchg
rcrb
jb
movsl
push
aaa
mov
mov
sbb
xor
mov
adc
mov
inc
pop
lods
pop
mov
testb
mov
cmp
xlat
ds
push
and
mov
mov
cli
out
sbb
lret
add
inc
jmp
out
sbb
mov
inc
out
xchg
and
repnz
out
cli
mov
bound
shlb
dec
mov
adc
adc
mov
ljmp
cmp
push
adc
int3
pop
orl
fldcw
cmp
or
push
jae
xor
cli
cmp
pop
aaa
add
test
repz
sahf
fdivrl
mov
repz
fwait
cmc
lret
push
and
pop
cmpsb
mov
sub
add
pushf
xchg
dec
adc
inc
cmp
aaa
dec
dec
jg
mov
sub
nop
pop
movsl
cs
outsl
sbb
imul
rcrl
and
xchg
scas
cmp
das
imul
mov
inc
divl
shll
out
in
xchg
fdivs
lret
stos
add
aam
test
sub
sub
jle
pop
push
inc
repz
xor
loope
mov
adc
add
sub
cmp
call
cmp
inc
lret
pusha
je
push
inc
xor
push
sbb
mov
clc
test
pop
fwait
stos
rcl
popl
sbb
mov
fsubrs
add
lret
push
dec
cwtl
iret
push
mov
fiaddl
ja
mov
xor
jo
push
mov
jp
aas
push
adc
sub
mov
insb
xor
popf
xchg
imul
xchg
pop
add
jg
mov
push
ss
loope
sub
jecxz
movsl
imul
pop
xor
aam
inc
or
sub
mov
jb
mull
push
push
filds
leave
nop
pop
daa
push
cmc
xchg
scas
jmp
sub
sbb
jge
stos
fldl
jl
jl
adc
push
das
push
imul
mov
rcrl
pushf
and
pop
push
psubb
pop
in
sbb
mov
jecxz
incl
jl
xor
push
paddb
xchg
xor
cli
mov
lcall
sub
in
clts
bound
mov
pop
lcall
dec
enter
mov
insb
call
outsl
cmp
shrb
push
test
ja
aaa
daa
and
in
mov
shll
bswap
xchg
sahf
out
jno
mov
adc
sbb
es
dec
mov
or
das
jo
lret
jp
test
std
xor
mov
shlb
fadd
and
push
push
rcll
pop
pop
mov
cmp
and
test
add
insl
insl
scas
arpl
sahf
pusha
outsl
sbb
mov
cmc
pop
loopne
in
xchg
aad
lods
adc
cmpsb
push
arpl
daa
shl
fwait
stos
pop
jns
ss
jbe
xchg
subps
out
xor
inc
ljmp
mov
pop
cmpsb
xor
xorb
cmp
jmp
cs
jg
mov
or
sbb
shr
jg
cmpsl
adc
jg
inc
mov
and
ud2
fidivrs
sbb
sub
fucomp
cmp
outsl
out
mov
mov
fisubs
pusha
and
sbb
mov
sbb
inc
dec
ret
inc
mov
std
add
popf
add
xor
or
imul
or
in
inc
shrl
std
push
sbb
xchg
into
rolb
add
xchg
cld
inc
and
sti
lcall
xor
aaa
mov
mov
lcall
lock
and
push
cmc
mov
xor
enter
sarb
jg
pop
sub
sbb
jns
fsubrs
push
ja
mov
sub
jns
lods
fbstp
jg
mov
into
inc
data16
imul
sarb
aad
arpl
repz
mov
ror
push
push
pop
test
in
aam
push
push
outsb
ds
jmp
xchg
push
mov
loopne
roll
icebp
mov
dec
jecxz
aad
sub
clc
push
sub
dec
jne
out
ret
inc
dec
fwait
gs
xor
rolb
outsl
jmp
cmp
fiadds
dec
add
cli
push
push
jmp
push
mov
jge
sbb
lret
ss
add
stos
negl
test
mov
lret
dec
outsb
pop
mov
ss
xlat
or
push
mov
xor
sub
push
jge
inc
dec
mov
mov
or
xor
cmp
cmpsl
jns
dec
mov
mov
enter
fists
adc
mov
jg
cld
lret
shll
dec
outsb
test
mov
pop
lds
loopne
mov
dec
xchg
mov
jbe
inc
das
addr16
mov
or
popa
xlat
xchg
cmp
mov
adcl
sub
xor
xchg
ja
sbbb
aam
pop
jnp
rcrb
loopne
in
xchg
rcrl
and
ljmp
fists
sbb
ret
cmpsb
jne
in
push
call
outsl
xlat
mov
ss
aas
add
dec
cmp
cltd
lcall
pop
sbb
cmp
mov
and
cmp
push
inc
int3
sbb
pop
jno
mov
dec
cmpsl
xchg
mov
shll
or
repz
int3
pslld
and
dec
ljmp
sbb
shrb
push
cld
cmpsb
cmpsl
sbb
dec
mov
and
arpl
xor
icebp
sub
es
jge
sub
jg
sbb
pop
inc
call
popf
out
jmp
insl
add
orl
popf
movsb
insb
push
rcl
bound
inc
pop
imul
adc
test
das
ja
out
dec
xchg
jbe
sub
push
mov
insb
lock
sub
into
aad
and
jnp
mov
jbe
outsb
pop
push
add
xlat
xchg
jbe
int3
pop
xchg
adc
insl
mov
mov
repz
enter
cli
xor
lds
inc
cmpsb
adc
or
daa
jle
cmp
je
sti
or
movsl
lcall
mov
fwait
jno
pop
sbb
dec
add
xor
test
hlt
nop
sub
xlat
mov
andl
pushl
push
xor
sbb
sub
add
jns
mov
push
sarb
dec
insb
pop
fcoml
xchg
or
das
pop
arpl
and
inc
add
mov
fbld
sbb
daa
out
xchg
insl
scas
jl
or
stos
ret
outsl
std
jbe
testl
call
cs
push
ss
sub
sub
mov
add
adc
sub
dec
xorl
fiaddl
cmp
mov
movsb
adc
repnz
lahf
xchg
dec
aam
jmp
loop
daa
mov
fwait
stc
xor
jecxz
mov
fcomps
jp
test
sbb
test
movsl
aam
aam
lret
mov
mov
int3
fs
int3
xor
repz
lahf
xor
lock
lret
test
cmp
push
pop
jp
movsbl
pop
dec
xchg
mov
nop
pop
ljmp
dec
clc
jle
std
push
rcl
loop
xchg
mov
aas
lds
sbb
imul
pop
add
loopne
cmp
mov
adc
scas
adc
je
mov
repz
inc
data16
stc
jno
push
dec
sub
cli
mov
pop
and
add
push
add
push
adc
xor
jnp
sbb
out
shrb
in
mov
jp
rol
leave
test
xor
imul
add
hlt
ss
loop
pusha
and
and
adc
mov
fistl
add
popa
sub
mov
or
cmp
pop
push
rclb
push
mov
ret
and
hlt
out
testb
mov
mov
pop
pop
pop
es
dec
pop
push
nop
in
rolb
sahf
test
out
mov
sar
sub
daa
fnsave
mov
sbb
aaa
data16
xor
mov
add
dec
dec
inc
out
cmpl
jbe
test
stc
es
jo
or
mov
cmp
lods
cltd
icebp
dec
outsb
shrl
je
xchg
fcmovu
ret
pushf
push
mov
inc
inc
and
andl
fiadds
mul
sti
shll
mov
xlat
js
xchg
inc
lcall
mov
fcoml
mov
mov
aaa
test
pminsw
and
mov
jne
cmpsb
fwait
loop
scas
cld
push
andps
ficomps
shr
sahf
in
enter
repnz
mov
movsb
jecxz
xchg
add
mov
dec
into
jno
push
in
mov
push
scas
mov
xchg
or
adc
push
sub
push
scas
add
jnp
dec
ret
les
shll
jnp
cmp
test
outsl
xor
mov
subl
adc
inc
cli
popf
push
into
stos
shlb
int3
lods
loop
dec
xchg
add
pop
mov
je
in
arpl
ret
sub
jmp
mov
sub
and
push
outsl
aam
xchg
or
lds
mulb
push
scas
xchg
addr16
and
icebp
pusha
cmp
pop
movsl
jl
mov
bound
and
xor
cmp
jp
mov
imul
and
xor
sub
stos
and
inc
pop
je
lea
dec
outsb
aad
pop
pop
xor
and
arpl
scas
push
sar
sub
inc
lahf
jae
xchg
inc
inc
pop
fwait
nop
enter
movsl
lods
jb
aas
int3
jg
loope
inc
or
mov
mov
cwtl
cltd
lock
pop
jbe
insb
mov
sub
lods
mov
sahf
pusha
xor
lds
popa
hlt
adc
or
fsubrl
or
dec
int3
testl
mov
push
aaa
mov
lock
das
inc
sub
in
jno
xchg
outsb
out
jae
jge
jne
test
jb
xor
fidivs
dec
mov
je
dec
xchg
roll
inc
dec
inc
lret
mov
cmpsl
push
inc
ljmp
bound
add
jmp
dec
and
pusha
imul
adc
daa
push
rorb
stos
js
leave
mov
jge
int3
test
sahf
push
push
cmc
pop
pop
ficompl
mov
or
and
jmp
mov
add
movsl
adc
pop
into
stos
mov
jbe
mov
testb
pop
cld
sbb
decb
mov
inc
dec
mov
xor
mull
xchg
sub
pop
add
fs
xchg
mov
ret
jns
inc
fs
pop
inc
sub
and
dec
sub
lret
dec
push
cmpl
outsl
les
sub
dec
in
mulb
in
sub
and
repz
cmp
add
imul
fs
sbb
mov
pusha
pop
repnz
mov
test
xor
lods
hlt
sub
fiaddl
pop
test
add
sub
sub
ja
mov
or
pop
inc
inc
mov
popf
xor
lods
outsl
mov
sub
or
sub
inc
fstp
and
nop
xchg
lods
push
sub
inc
incb
into
inc
dec
jbe
int3
push
adc
jbe
and
pop
std
push
pop
fildll
sub
push
mov
xor
xor
sti
xchg
fsubl
data16
clc
lock
cmp
add
mov
sub
mov
sub
ja
enter
inc
lret
loopne
loope
lcall
call
cmp
jmp
lea
push
inc
xchg
std
mov
imulb
lock
das
sbb
jno
or
sub
jmp
lret
mov
and
jmp
fstpt
sub
dec
je,pt
add
ret
mov
imul
mov
in
adc
mov
arpl
adc
sub
add
mov
std
es
pop
sub
dec
jb
pop
add
push
push
jno
movsl
pop
pop
inc
gs
inc
sahf
aas
jae,pt
add
sub
and
ds
jbe
cmp
mov
fisttps
mov
nop
mov
mov
sbb
xor
push
lahf
and
xchg
pop
mov
mov
xor
dec
adcb
dec
pop
lock
dec
lods
clc
lcall
movsb
push
cmp
fsubl
out
faddl
int
cli
out
inc
hlt
std
xlat
fidivl
push
arpl
inc
mov
fnstsw
xchg
fbld
jae
push
adc
jmp
xor
mov
lret
xchg
push
mov
sbb
sbb
test
pop
lret
or
xlat
or
jl
cmc
mov
dec
hlt
jb
cltd
movsb
jne
push
adc
in
jnp
popf
outsb
sub
and
test
rorl
push
stos
mov
fldcw
xchg
mov
lock
push
out
mov
sbb
add
dec
sub
mov
and
inc
or
ret
push
or
push
push
insb
cmp
aas
adc
xor
imul
mov
popa
lret
rcr
xlat
push
sbb
test
shrl
adc
ror
jno
inc
repz
enter
subl
shrb
cmc
and
cmpsl
push
ds
sub
sbb
aaa
push
pop
arpl
mov
mov
jne
stc
les
pop
pop
sub
xchg
add
mov
xchg
fistpll
dec
jle
jle
adc
clc
mov
sbb
pop
cmpsb
fistpll
sub
xchg
movsl
les
gs
in
jo
out
pop
outsb
pop
xor
ret
jmp
add
insl
mov
jns
sbb
scas
and
jge
fwait
adc
icebp
ret
and
mov
lcall
gs
loopne
mov
stos
mov
cmp
jl
xchg
cmp
xlat
inc
fcmove
rcll
xor
sub
mov
or
fisttpl
pop
fldenv
xchg
sahf
lods
mov
adc
imul
bound
push
pop
inc
mov
cmpl
lods
push
lgs
sub
out
in
stc
clc
inc
mov
movsb
je
repz
fwait
add
mov
cmp
sub
mov
ljmp
aas
xor
in
data16
js
test
shll
jno
fwait
add
dec
sbb
adc
mov
pop
in
mov
mov
cmp
lret
xchg
scas
inc
cmp
inc
stc
imul
aas
aad
xor
and
in
add
xchg
test
push
push
mov
in
or
fs
and
jbe
cwtl
cmpsb
pop
movsl
xchg
xchg
push
test
xor
imul
jmp
int3
nop
xor
jge
fsubrl
and
add
push
push
lret
mov
adc
lcall
das
mov
sbb
popf
cmpb
mov
bnd
insl
pop
sub
loope
xor
xor
sti
mov
cmp
mov
or
lock
sub
inc
outsb
and
pop
imul
rorb
pusha
fistl
sbb
jb
dec
fprem
in
mov
inc
cmp
outsl
or
xlat
or
pop
gs
ds
mov
mulb
add
add
ljmp
cmpsb
add
arpl
aam
daa
lods
ds
loopne
fisubs
cmc
push
movsb
xchg
mov
jb
push
push
xchg
dec
xlat
mov
pushf
popa
mov
push
data16
cmp
lock
push
popa
test
mov
std
ja
jo
mov
fmull
jmp
mov
mov
rcll
mov
and
int3
inc
notl
xor
es
push
repz
arpl
aam
mov
and
sub
sbb
sahf
in
pop
inc
inc
leave
pushl
cltd
inc
cmp
sbb
mov
mov
jle
shll
xchg
popa
inc
xchg
ret
add
cwtl
cli
mulb
jge
sar
mov
sahf
outsb
sub
inc
inc
pop
out
je
jmp
push
sub
pop
cmp
in
xchg
cmpsb
rcrb
mov
rcll
jb,pn
outsb
nop
jecxz
xlat
fcmovne
ds
aad
mov
push
jbe
cmp
lock
push
loop
add
int
jge
or
aaa
in
sbb
adc
insl
lret
push
jg
pusha
xor
mov
sbb
sub
rcll
xor
sub
loop
cmpsl
pop
inc
clc
adc
and
mov
cmp
xor
jbe
push
xchg
push
repnz
scas
sbb
sbb
data16
test
fstpt
or
xchg
addr16
jmp
mov
sub
add
add
adc
sub
cs
shlb
pop
inc
nop
shl
sub
arpl
ss
in
in
sbbb
js
fwait
popa
pop
adc
ljmp
loop
or
mov
clc
push
jnp
cmpsb
lds
pop
arpl
test
stc
int3
pop
dec
dec
int3
clc
push
mov
fdivs
push
xlat
repz
scas
adc
mov
loopne
addr16
push
psadbw
ret
ja
imul
add
orl
stc
aas
xor
adc
inc
shll
cmp
xor
sbb
inc
divl
lods
aaa
ljmp
add
mov
pop
xchg
jnp
push
icebp
popf
scas
add
mov
out
pop
arpl
mov
iret
fs
jne
sbb
pop
lea
push
dec
dec
and
or
or
mov
xorl
mov
popl
adc
ds
mov
enter
push
movsb
pop
mov
rol
push
add
adc
jge
sbbl
cli
xchg
out
lahf
sbb
rcrl
adc
jne
sub
icebp
negb
push
cmp
cmp
jnp
cli
stc
dec
xor
jno
pop
push
cmp
mov
cmpsl
dec
push
xor
jl
repz
fwait
inc
dec
xchg
cmp
nop
push
jg
insl
push
icebp
sbb
cmp
popf
addb
cwtl
mov
inc
xchg
dec
mov
pop
and
xchg
dec
pop
negl
sbb
stos
gs
iret
sarl
icebp
lea
fstpl
inc
cli
aas
mov
push
mov
or
inc
adcl
push
dec
lock
sub
in
sub
xor
sub
jmp
jge
das
fisttpl
imul
aad
dec
pushf
dec
xchg
push
dec
jg
sub
jg
hlt
and
mov
jo
adc
in
mov
mulb
dec
stos
imul
xchg
push
xchg
bound
xchg
test
test
sub
lcall
inc
push
push
lea
sbb
jl
or
mov
popa
daa
cmpsb
or
jno
and
add
jle
jbe
popf
pop
lahf
fsubrs
jle
jg
dec
lcall
pop
int3
and
push
js
xor
inc
inc
xchg
packsswb
xchg
fwait
mov
xorb
addr16
mov
sub
sub
mov
pop
hlt
cmpl
loop
decl
and
mov
sub
std
adc
xchg
sub
sbb
cli
inc
pop
mov
sbbb
in
es
pop
mov
or
int
sub
dec
repnz
imul
inc
mov
imul
repnz
mov
cmp
xor
ja
mov
mov
mov
loop
adc
jg
or
pushf
ds
dec
sbb
test
pop
jns
cmp
loopne
mov
jbe
popl
pop
xchg
jg
repnz
mov
add
daa
jb
fs
aam
imul
popa
sbbb
pop
adc
cmp
movsb
cltd
sub
jae
clc
in
dec
xor
shlb
cmp
inc
mov
jmp
ja
mov
sti
push
es
xchg
mov
dec
pushf
jmp
inc
in
lcall
aaa
negl
xor
dec
test
fsub
mov
insl
int
add
mov
scas
push
cmpsb
sbb
push
dec
cld
mov
int3
push
iret
sbb
pop
cmp
add
push
loop
loop
jnp
jnp
add
mov
pop
in
push
ja
xchg
xor
cmp
test
inc
push
ss
and
clc
ja
sub
push
gs
jg
jbe
enter
sbb
add
decl
cltd
pushf
cli
adc
cmpsl
cmpsl
imul
nop
mov
pop
loope
inc
lret
mov
stos
jns
les
pushf
fdivrp
dec
inc
push
mov
mov
xchg
pop
pop
inc
jae
inc
inc
pop
mov
fisubrs
push
int3
add
mov
mov
aas
sbb
frstor
ljmp
xor
jno
cmp
cmc
mov
cwtl
push
mov
mov
int
adc
cmp
inc
mov
add
pop
dec
gs
andl
and
or
lcall
lods
jo
dec
ret
jae
adc
leave
cli
cmp
scas
pusha
rorb
and
stc
or
cwtl
testb
mov
test
fstps
test
pusha
mov
jns
dec
mov
pushf
mov
mov
inc
dec
sti
test
adc
or
gs
jns
jp
xchg
jnp
fwait
outsl
loop
push
jle
mov
dec
imul
cmp
mov
jae
and
popf
shll
sbb
sub
fs
cltd
rorb
stos
push
adcl
jne
push
jmp
bound
pop
mov
or
pop
xor
call
sub
mov
lds
outsl
inc
pop
movsb
leave
cmpsb
or
clc
push
dec
lods
or
test
xchg
int
out
jge
mov
and
leave
data16
fwait
je
inc
push
sbb
call
aam
push
dec
sbb
cld
pop
idivl
rcll
sbb
lret
cli
sbb
pop
out
mov
jbe
fildll
xlat
les
cmpl
inc
subb
mov
mov
push
cs
jge
out
out
sbb
xchg
shlb
mov
div
jo
icebp
gs
icebp
add
jne
fwait
xchg
icebp
cmpsb
sub
icebp
sub
imul
pop
mov
dec
jae
les
mov
in
and
mov
cltd
sbb
je
push
shlb
movsl
stos
fdivs
cmp
dec
cmp
push
xor
ret
jae
subl
notb
push
roll
sbb
add
div
mov
cmp
mov
ss
pop
inc
xor
mov
dec
ret
mov
mov
test
scas
test
add
add
pop
push
bnd
out
pushw
jp
clc
xchg
mov
subb
sbb
fisttps
jne
cmp
mov
jo
dec
je,pt
mov
lret
iret
shll
movsl
outsb
dec
pusha
xor
inc
or
lods
movsb
sbb
icebp
mov
jo
push
or
jge
es
cs
xchg
mov
xorl
xchg
jp
adc
sub
jb
loope
sahf
sub
inc
ficoml
push
xchg
aad
fsubrl
inc
or
adc
xchg
mov
ret
mov
cmp
fneni(8087
pop
jmp
cmp
ja
mov
push
loope
addb
inc
sbb
push
jo
mov
data16
sbb
enter
pusha
pop
pop
xchg
in
mov
repnz
xchg
push
cmpsb
sub
jl
es
xchg
jae
sub
aad
daa
xor
or
sti
jecxz
mov
stos
xchg
vcomisd
inc
mov
mov
push
jae
into
jle
jle
cld
add
cld
mov
or
aad
call
xor
cld
jne
add
leave
fcoms
nop
push
and
dec
push
in
push
pop
pop
dec
and
mov
adcb
xchg
push
push
cmp
fs
and
imul
jl
add
sub
in
cld
xchg
sbb
ret
xchg
mov
jg
push
or
inc
rclb
inc
jb
push
test
and
and
gs
ja
test
std
or
jp
mov
adc
aaa
enter
fisttpl
inc
js
insb
icebp
sub
iret
pop
aad
cmc
xor
push
pop
jmp
scas
in
lcall
jae
inc
dec
xchg
arpl
cmpl
cli
or
jl
and
pop
inc
gs
popf
test
jmp
cmp
lcall
loopne
fimull
testl
cli
and
lret
dec
je
push
scas
gs
lods
adc
cmpsl
jecxz
cmp
das
xlat
ss
cmp
int
das
test
jns
adc
inc
lahf
xchg
es
xchg
daa
ss
mov
push
icebp
jecxz
push
cld
sub
pop
xchg
out
outsl
movsl
jp
shll
inc
and
or
mov
ja
inc
outsb
xchg
push
shll
out
sbb
je
hlt
push
faddp
imul
in
into
or
adc
outsl
add
je
pushf
mov
jno
sub
mov
into
cmp
cmp
inc
leave
movsl
adc
icebp
lock
xchg
sti
or
jns
xchg
std
popf
jb
add
wrmsr
inc
mov
jmp
out
mov
mov
aam
dec
rcrb
outsl
stos
jbe
movsb
and
or
mov
ss
mov
add
inc
aam
pop
imul
imul
ficompl
lock
out
lcall
js
push
lds
mov
frstor
aas
cmp
and
ret
and
jno
loope
sbb
push
xchg
dec
pop
fldcw
pop
cs
xchg
pusha
sub
es
ret
aad
xchg
loopne
popa
repnz
icebp
add
pop
lcall
mov
sub
pop
pop
mov
data16
cmp
sbb
int
pop
jns
push
ds
mov
sbb
adc
xchg
daa
jno
cmp
out
subb
insl
fstpt
xchg
xchg
in
or
cmp
loop
imul
mov
sub
in
fs
and
aas
filds
fwait
sahf
jmp
mov
enter
xor
gs
adc
jno
cwtl
lods
insl
xor
mov
pop
popf
pushf
fwait
jp
cwtl
scas
pop
cmp
inc
and
mov
stos
mov
popf
orl
shlb
jns
and
dec
test
dec
aas
mov
mov
add
jecxz
fwait
je
cmpsb
fistps
leave
push
sub
jne
cmp
sub
mov
cmp
or
jl
cmp
stos
jg
pop
sub
inc
test
cs
dec
sbb
aam
xlat
sbb
leave
or
loopne
xlat
add
cltd
push
lcall
or
push
les
jp
sub
pop
jnp
add
clc
xchg
mov
std
pop
sub
rcr
inc
add
pop
push
cmp
scas
pop
mov
pusha
mov
fimuls
jb
repnz
sbb
int
lret
scas
lahf
xor
sub
push
pushf
adc
shr
cmpsl
scas
das
movsl
and
jmp
add
inc
xchg
jg
sbb
cwtl
in
push
nop
jno
pusha
jne
xor
cmpsl
jbe
fdivrs
fldl2t
test
inc
dec
pop
lea
inc
pushf
sbb
popf
sub
ret
fcomip
lret
push
jbe
xor
jg
lret
outsl
fimull
adc
jmp
cmp
mov
fdivs
jg
jb
into
mov
loop
mov
loope
jecxz
iret
dec
pop
mov
dec
in
push
out
xor
ret
rclb
fwait
and
lret
cmp
mov
repz
outsl
ret
lock
ret
mov
repz
stos
repz
dec
mov
outsb
xchg
xchg
je
dec
push
xchg
call
test
adc
shll
add
movnti
and
inc
push
movsb
test
shrd
jl
adc
sub
lds
enter
insb
sub
and
fisttps
sti
and
popa
sbb
loop
and
std
test
loop
pop
dec
daa
xchg
mov
pop
mov
das
out
dec
mov
cmpsb
ret
inc
daa
cli
int
dec
cmp
jbe
je
inc
sahf
or
and
pop
jb
push
inc
pop
loop
mov
cmp
mov
test
cmp
popa
xor
lcall
cmp
fdivr
sbb
call
arpl
inc
mov
test
xor
rclb
add
pop
imul
jp
dec
inc
push
js
addr16
lret
int
movsl
mov
push
pop
mov
xorl
xlat
xlat
xchg
xchg
mov
in
fstpt
ja
and
mov
mov
pop
rcrb
push
add
shl
mov
mov
inc
xchg
mov
lds
sysenter
xor
cmpsb
xor
sub
daa
inc
stc
orl
push
leave
lret
int3
jns
outsl
rol
fistpl
pop
adc
inc
jg
push
jnp
jns
jo
mov
stc
icebp
into
jp
addr16
arpl
xchg
pop
or
or
jne
sbb
add
xor
mov
adc
inc
decl
cmpsb
mov
or
jecxz
std
das
stc
mov
call
pop
arpl
stos
test
mov
xchg
out
int3
jbe
jge
cld
dec
imul
cltd
jne
popa
add
cmp
pusha
push
mov
loopne
loopne
mov
xor
fwait
jp
and
pop
push
push
push
cvttps2pi
jo
icebp
push
dec
in
adc
js
cs
test
jns
filds
mov
mov
rorl
ret
lret
inc
mov
call
ret
ljmp
adc
inc
pop
addl
ret
lock
or
inc
idivb
jecxz
enter
push
ret
daa
icebp
dec
aam
xchg
xor
ss
int
adc
jg
lret
and
push
xor
fnstcw
pop
or
pop
inc
push
sub
cmp
push
call
or
in
mov
and
cmp
nop
and
xchg
ficoml
cmp
xchg
dec
add
lret
popa
xchg
ss
sub
inc
xchg
push
imul
out
inc
hlt
into
push
cmpb
add
xchg
jecxz
dec
push
mov
in
sub
fistl
scas
test
je
mov
jmp
mov
loopne
dec
adc
lret
push
testl
pop
sub
fisubs
add
lock
hlt
lahf
jmp
prefetch
or
jl
test
or
fwait
dec
out
das
aas
outsb
push
cmc
mov
push
pop
cmc
lret
or
mov
ss
mov
mov
aas
dec
mov
test
sub
popf
pushf
add
push
out
stos
cmp
cmc
sbb
add
cli
lret
fwait
xor
or
cmp
cmpsl
pop
and
lods
scas
inc
daa
cwtl
mov
clc
icebp
jae
sbb
mov
push
pop
movsl
add
or
leave
pushf
sub
pop
mov
mov
repz
ret
cmpsb
or
rolb
sbb
mov
in
push
or
jp
mov
mov
cmp
test
pop
cs
ror
lods
and
ret
jg
inc
jle
pop
xchg
push
ret
adc
lods
jb
dec
bound
pushf
push
movsb
adc
rcll
inc
mov
pop
cmp
mov
cmp
outsb
sub
fistpll
pop
outsb
lods
xchg
dec
fisttpl
leave
push
aaa
jmp
cmp
mov
lret
pop
popf
repnz
imul
mov
mov
in
or
imulb
or
push
daa
paddusb
add
test
inc
add
fisttpl
cmpb
js
sub
jne
mov
mov
mov
ljmp
push
mov
sub
std
mov
inc
mulb
rcll
je
push
inc
sbb
mov
sbb
cmpsb
dec
and
es
cmpsb
add
adc
cmp
cmc
adc
sbb
mov
push
dec
sar
lods
insb
stos
lds
andl
mov
sti
push
cli
aam
shrb
imul
jp
lock
out
xchg
mov
test
sbb
enter
insl
sub
cwtl
mov
pop
sub
mov
inc
mov
pop
cmp
sub
dec
inc
std
int3
insl
iret
lods
into
inc
test
pop
dec
cwtl
xor
inc
xchg
xchg
dec
xchg
bound
jle
fcmovne
push
imul
sbb
jecxz
xchg
sahf
nop
or
inc
add
lahf
xchg
inc
sub
rorl
jae
and
leave
jns
mov
xchg
call
std
fs
rcrl
mov
pusha
pop
scas
jg
es
aad
pop
sahf
lods
addr16
adc
cmp
outsb
push
in
inc
aam
mov
add
es
sub
and
fdivs
shl
push
bound
jno
dec
mov
or
dec
sub
pop
mov
mov
mov
scas
mov
jns
cmp
sub
dec
movsb
lock
pop
fdivl
imul
adc
sbb
push
jne
gs
mov
push
insl
push
push
inc
mov
sub
cmp
mov
pop
loop
or
jl
jno
fs
sub
jnp
test
dec
je
and
adc
push
lcall
dec
xor
sub
rolb
sub
scas
pop
mov
or
mov
mov
popa
subb
sarb
shlb
cmp
xor
mov
cltd
in
inc
aad
cmp
mov
roll
imul
movsl
js
xchg
cltd
ror
mov
pop
cmp
jmp
shrb
xchg
pop
dec
inc
sbb
mov
loope
out
out
loop
ja
jnp
aaa
sub
cwtl
or
inc
gs
cltd
cmp
cwtl
nop
lea
popf
jecxz
adc
dec
imul
ss
aaa
filds
mov
jecxz
int
mov
leave
iret
rorl
and
ds
push
imul
dec
sbb
sub
mov
rclb
movsb
mov
test
mov
cmpsl
mov
fsts
int3
rcll
sbb
iret
out
mov
or
mov
aas
mov
or
loopne
fstl
mov
or
pop
lret
dec
adc
xchg
es
cmpsb
xchg
lods
inc
clc
jl
stos
xor
adc
jns,pn
mov
sbbl
incb
mov
dec
push
mov
lcall
pop
push
xchg
xor
cmc
out
je
fmull
sahf
mov
or
bound
mov
jns
dec
scas
xor
pop
or
test
aas
mov
mov
ret
das
fisttpl
sbb
fcmovnu
cs
into
cmp
jp
fldenv
loope
divl
cmp
jecxz
cmp
rorl
add
test
scas
les
aas
and
or
jle
call
mov
mov
mov
test
push
enter
out
push
in
xchg
movsl
jmp
insb
nop
divl
push
ret
mov
outsb
mov
test
mov
and
jns
sub
scas
test
pop
stos
outsl
sub
jb
inc
jne
cmp
and
sub
popa
jb
add
mov
es
data16
push
cmpsl
addr16
in
xchg
push
adc
cmc
das
adc
mov
inc
sub
adc
stos
pushl
out
mov
cmpsl
in
or
xchg
pop
fwait
pusha
nop
outsl
adc
lods
sub
enter
in
fdivs
mov
push
outsl
pushf
mov
fists
ds
and
jecxz
pop
jnp
push
adc
bnd
mov
pop
xchg
fiaddl
mov
outsl
loope
xchg
mov
ret
mov
mov
jge
mov
notb
pop
inc
pmuludq
mov
les
sub
negl
mov
pop
xchg
xor
cmp
mov
aad
jno
aam
mov
push
mov
adc
in
jle
dec
ds
ja
pop
mov
or
aam
jbe
mov
bound
jne
mov
in
mov
data16
in
std
orl
push
push
push
insb
sub
bound
mov
fcomps
lds
push
pop
dec
jg
mov
and
jge
xchg
jae
shll
xchg
imulb
push
rorb
jle
xchg
cmp
popf
push
inc
mov
stos
sbb
in
mov
shlb
imul
dec
js
imul
enter
enter
andl
xor
push
push
add
jno
test
ds
jge
imul
jl
xor
dec
ss
arpl
enter
dec
push
pop
mov
push
mov
loopne
mov
imul
pusha
dec
outsl
mov
or
sub
pop
jae
sahf
and
fnstcw
pushf
or
jecxz
dec
add
xor
lret
fwait
add
roll
push
adc
repz
adc
and
sub
and
loop
inc
pop
push
out
sub
add
mov
pop
cmp
add
jecxz
pop
insb
push
inc
jg
repz
call
sbb
mov
jnp
xchg
rolb
mov
inc
adc
push
repnz
add
out
sub
add
cltd
dec
dec
and
mov
sbb
sub
mov
rolb
or
push
add
jle
outsb
xchg
pop
mul
push
add
jl
push
xchg
pushf
or
in
adc
fistl
outsb
push
cmp
out
xchg
add
in
add
cmp
pushf
xchg
adc
mov
mull
pop
das
push
xchg
mov
jns
cmpsl
sbb
in
pushf
test
pop
lea
icebp
adc
cmp
sub
data16
test
mov
mov
bound
les
jnp
push
scas
cld
int3
push
imul
xchg
in
jnp
lret
push
cmp
das
and
mov
adc
scas
jle
out
ljmp
movl
stos
dec
aad
lret
add
add
icebp
xchg
xor
cs
popf
jmp
xchg
out
add
inc
js
and
jp
je
dec
jl
fwait
xor
and
hlt
out
or
pop
jmp
icebp
cltd
adc
out
add
mov
repnz
jbe
mov
or
and
sbb
rcll
mov
movsb
cld
imul
add
pop
inc
mov
rcr
call
fadds
sub
scas
add
mov
bound
mov
pop
stc
push
inc
mov
sub
lcall
lahf
dec
dec
daa
stos
jmp
mov
dec
popa
out
cmp
or
mov
or
jge
adc
push
push
inc
loop
lcall
push
stos
push
xor
jecxz
sar
pop
mov
popa
scas
sub
xor
data16
lcall
mov
lods
cmpsl
stc
les
push
inc
and
jecxz
push
or
ret
stos
inc
fldl
enter
mov
lods
jno
movsl
out
ret
add
or
inc
jb
outsb
cld
jle
mov
push
dec
add
mov
ljmp
in
jmp
ficompl
sub
orb
out
xor
push
sbb
push
or
call
jmp
lret
fadd
insb
js
mov
rcl
loope
aaa
push
mov
imul
addr16
mov
ja
adcb
adc
lcall
sbb
sbbl
sbb
popf
out
movsl
add
ficoms
jbe
cmpsb
inc
xchg
rcrl
stc
iret
sub
pusha
arpl
push
mov
inc
int3
incl
aam
pop
outsl
daa
add
shrb
pop
add
pop
je
addr16
rcll
jp
jp
scas
enter
cld
push
adc
dec
mov
jae
xlat
push
inc
daa
push
xor
clc
xlat
adcb
mov
xchg
movsb
sahf
cmpsl
sub
stos
js
inc
mov
inc
mov
and
aam
push
arpl
clc
dec
xor
push
aam
mov
orl
sbb
daa
adcl
mov
cltd
xchg
loopne
dec
aad
rcrb
stc
dec
or
rolb
push
sbb
push
int3
xchg
rorl
inc
das
mov
inc
add
sub
mov
lds
or
mov
push
popf
andb
leave
dec
mov
xchg
mov
mov
or
fcos
repz
push
sahf
and
add
into
in
lret
sarl
lods
mov
test
ja
loopne
cmp
jp
lods
cli
repz
enter
std
or
pop
repnz
test
push
jbe
cld
push
lea
out
push
sub
aas
std
insb
out
adc
pop
addr16
enter
xor
cmp
push
jmp
cli
xchg
cmp
pop
bound
out
es
enter
ds
movsl
push
mov
xchg
test
mov
or
gs
add
mov
stos
push
lock
pop
testb
jbe
sub
das
mov
lea
fisubl
repnz
and
imul
xor
inc
inc
jl
dec
add
jecxz
mov
rcr
jns
aam
dec
mov
dec
int
dec
icebp
and
adc
out
dec
jg
les
sbb
notb
adc
mov
int3
cmp
lcall
jns
xor
xor
jns
xorb
popa
popa
dec
pop
sahf
dec
icebp
lret
je
mov
push
sbb
int
decl
outsl
sub
dec
pop
sti
in
stos
das
gs
dec
lock
daa
cmpsl
orb
mov
popa
jmp
cwtl
call
fs
and
lods
or
icebp
scas
jb
pop
adc
or
ret
push
cli
outsl
shlb
sbb
testl
mov
adc
add
test
jg
fdivl
and
inc
shr
xchg
sahf
sarb
dec
in
in
rorb
mov
xchg
push
push
add
xrelease
aas
and
and
bound
sub
pop
push
sub
ror
adc
inc
and
mov
cld
ret
int
mov
ss
xchg
push
mov
add
push
add
mov
jno
iret
add
cmc
enter
jnp
aam
popa
cmpsb
adc
out
jp
jg
insb
xor
mov
sub
dec
lods
in
mov
gs
push
dec
es
xchg
and
adc
push
outsl
push
cmp
aas
adc
mov
enter
rcl
or
push
sti
sbb
aas
call
mov
push
sub
push
and
je
imul
inc
xor
movsl
lock
movsl
cmp
pop
jo
push
mov
fsubp
xor
jo
push
xlat
ds
adc
subb
imul
cwtl
jns
aas
sahf
xchg
mov
dec
cltd
mov
aas
mov
and
aaa
scas
mov
adc
xor
or
lods
jbe
lahf
cltd
mov
sbb
jo
nop
addr16
lea
nop
fsubr
mov
sarb
inc
shl
and
aaa
push
mov
xor
inc
cltd
decl
inc
sahf
add
out
sbb
xchg
inc
ret
subl
add
lods
call
rcrl
loop
into
mov
stos
jb
int3
mov
cs
jg
jb
arpl
imul
jbe
mov
into
test
cmp
add
ja
aaa
bound
push
jle
and
sbb
and
add
inc
adc
jo
sub
sub
cmpsb
daa
fists
rorb
out
cs
test
scas
xor
gs
jge
lds
loop
jp
fildl
push
sub
mov
or
fdivrl
dec
jo
cs
pop
shlb
push
pop
push
fdivl
insl
icebp
out
call
insb
add
mov
dec
insb
pop
clc
xchg
inc
iret
mov
test
test
inc
inc
add
xchg
dec
ret
aaa
adc
sbb
out
adc
cmp
mov
cmp
xor
out
data16
mov
push
push
inc
repz
add
or
mov
pop
mov
jne
int3
or
xor
stos
ss
mov
push
pop
sbb
jns
inc
sub
packuswb
inc
add
in
or
je
sub
pop
xor
xor
sub
xor
push
dec
insl
push
dec
inc
sub
mov
dec
and
rcrl
dec
cmpsl
mov
inc
or
cmp
dec
or
repz
sub
mov
test
sbb
xor
imul
arpl
popa
and
xor
pop
fsub
test
shl
mov
mov
and
mov
inc
push
outsb
fldl
cmp
inc
lahf
mov
mov
dec
mov
jle
mov
mov
lret
std
or
dec
dec
in
xor
jno
xor
and
in
stos
daa
push
xchg
in
dec
repnz
das
repnz
jnp
loopne
int3
in
in
add
in
cmp
inc
push
jmp
lcall
cmp
xchg
jecxz
dec
sub
sub
ret
shll
xor
mov
lret
and
iret
lods
sub
icebp
aam
in
mov
lods
into
dec
sbb
inc
inc
cmp
in
gs
xchg
adc
push
and
add
insb
mov
pop
mov
call
clc
call
push
adc
dec
xlat
bound
sub
cmc
aad
xchg
shr
fidivrl
jg
adc
or
sbb
push
mov
jp
mov
lock
jg
out
aas
ss
scas
dec
idiv
je
pop
int3
imul
jns
xor
pop
jns
sarl
cmp
lret
sub
sub
mov
mov
insb
adc
loope
lds
ljmp
stc
cld
or
out
or
lods
cmpsl
push
pop
movsb
jg
xchg
or
mov
cmp
loopne
jnp
lods
sbb
mov
scas
addr16
adc
push
das
mov
aad
inc
mov
inc
add
xchg
xor
ss
sub
stos
cli
or
out
cwtl
stos
mov
sti
and
jbe
gs
pop
divb
xor
sub
pop
pop
fdivrp
call
insb
mov
cmc
nop
inc
sti
sarl
repnz
cmpsb
lods
cmp
fdivs
ficoml
lock
jg
xchg
cmc
push
jb
out
fdiv
dec
sub
mov
imul
add
mov
ret
mov
sbb
daa
mov
sarb
aas
aad
jno
pop
lock
and
push
and
ficompl
push
addr16
loopne
lods
cmp
iret
push
sbb
popa
jb
outsb
xchg
add
loop
mov
loope
jnp
xor
xchg
cmp
sub
or
or
pushf
icebp
int
jmp
in
push
inc
sub
cli
addl
dec
cli
inc
inc
hlt
sub
daa
daa
mov
hlt
push
mov
repz
mov
sub
aad
mov
imul
shl
fs
jo
cld
sbb
fldl
std
clc
pop
mov
cmp
jp
add
push
sub
pop
outsl
outsb
add
push
xor
popa
mov
dec
adc
add
movnti
call
cld
adc
shll
out
xor
add
loope
gs
popf
pop
sahf
sub
and
ss
xor
and
xchg
pop
cmp
mov
pop
sub
adc
jecxz
cmp
popa
mov
xchg
mov
in
test
iret
xchg
sarl
or
lods
lock
sub
dec
repnz
dec
bound
negb
mov
mov
jne
mov
fbld
aas
lahf
pop
jmp
cmp
jmp
mov
popaw
dec
nop
repnz
add
hlt
test
push
mov
fs
mov
jg
dec
sti
in
fsubl
fidivrl
addr16
mov
push
sbb
jno
clc
xchg
mov
test
out
xchg
pusha
pop
xor
xchg
inc
ja
push
mov
test
out
adc
inc
jecxz
test
pushl
rol
cmp
jae
bound
popf
int
jle
add
loopne
sub
das
and
lret
dec
xchg
lahf
cmc
inc
push
or
lahf
out
or
dec
cmp
sbb
sub
sub
sti
das
lahf
test
addr16
aaa
sub
jb
sti
dec
mov
scas
lret
outsb
loope
in
fcompl
sti
int3
lret
pop
push
sub
push
out
ja
adc
push
sub
stos
loop
call
fwait
jae
jp
mov
cmc
adc
push
mov
xlat
ret
test
fsubrs
mov
xor
cmp
icebp
lret
outsb
js
pop
inc
fimull
mov
xchg
and
notl
inc
scas
sbb
imul
mov
pop
imul
cwtl
inc
mov
xlat
cltd
pop
clc
jge
sti
iret
out
stos
xor
nop
movsl
jecxz
mull
add
pusha
repz
push
sub
sub
gs
push
and
push
push
xchg
adc
jmp
adc
aam
out
ja
jl
dec
and
out
in
push
leave
jnp
lahf
lret
mov
movsb
inc
adc
loop
out
add
es
add
jge
inc
push
push
mov
loop
jmp
fiadds
sarb
pop
cld
add
cmp
cmp
pop
xchg
mov
mov
addb
in
push
xchg
jmp
pop
xor
pop
cs
pop
cmp
mov
or
jg
mov
int
scas
jmp
subb
pop
es
adc
insl
xchg
cld
cltd
and
cmp
inc
daa
mov
xchg
xor
pusha
pop
icebp
mov
ljmp
push
jo
or
inc
mov
scas
out
iret
xchg
jp
outsb
fimull
add
outsb
cmp
jbe
inc
push
pop
ret
das
xchg
rolb
xchg
rcr
jg
add
bound
outsb
mov
movl
push
cmc
dec
sbb
adc
push
and
sub
es
decb
sub
in
dec
ret
stc
icebp
fucomi
fsub
testb
mov
mov
xchg
mov
sub
scas
add
sub
xlat
pop
xchg
stc
das
lods
imul
push
out
push
mov
imul
test
das
mov
mov
fsubrs
inc
mov
xchg
pop
pop
cs
pop
mov
adc
lods
sub
push
mov
jae
adcl
add
cmpsl
sub
insl
shll
xor
dec
mov
mov
push
and
push
out
xchg
es
loop
add
inc
sbb
or
nop
inc
or
imul
ds
test
hlt
arpl
inc
lret
mov
lret
dec
aaa
dec
pop
ja
pop
imul
or
xchg
mov
fimuls
push
jb
sti
ret
leave
ljmp
out
jl
das
inc
addr16
test
push
sbb
cmp
inc
outsl
cmpsl
cmpsl
jno
out
aas
jl
mov
and
ror
scas
xor
in
fsubrl
xchg
jge
aam
adc
jne
cwtl
xchg
push
fwait
test
mov
inc
rolb
push
in
decl
xor
xor
bound
mov
dec
push
inc
cmpsb
outsl
jbe
xor
push
pop
sbb
inc
adc
imul
adc
gs
xor
inc
js
fsubs
sarb
sbb
stc
add
pop
leave
add
cwtl
or
pop
lds
cmp
inc
incb
imul
pop
push
out
insb
movsb
sub
push
xchg
lods
cmp
loope
imul
mov
movsl
pop
sbb
or
int3
mov
sbb
mov
faddl
ss
push
outsl
and
and
push
repz
sbb
adc
push
sti
stos
in
sub
sub
daa
jle
push
and
inc
and
mov
aaa
lock
mov
loope
xchg
pop
into
mov
je
or
outsb
loopne
enter
sbb
push
mov
xor
mov
test
mov
xchg
xor
or
cmp
jp
jb
xchg
mov
mov
imulb
xor
test
hlt
push
mull
mov
pop
popf
inc
ficoms
adc
gs
cmpsb
or
in
mov
sar
xchg
and
ja
lahf
mov
cwtl
dec
in
mov
fbstp
loope
aad
add
add
dec
or
inc
jae
sti
repz
sub
sbb
sbb
sbb
iret
pop
jne
mov
out
push
popa
adc
loope
add
das
dec
leave
pop
into
push
mov
mov
sti
into
out
ja
movsb
out
pop
fdivrl
jmp
dec
repnz
icebp
mov
pop
sarl
call
popf
cs
shll
and
outsb
popf
out
mov
sub
adc
cmp
cmp
cmp
insl
jle
test
ret
cs
roll
inc
and
inc
out
dec
shrl
mov
jne
adc
pop
mov
push
sub
das
adc
mov
fisubrl
movsb
pop
push
int
pop
adc
add
xor
xchg
mov
es
out
inc
sub
mov
sub
lds
xor
xchg
pop
pop
into
pop
dec
adc
mov
add
popf
inc
decl
mov
lret
aas
dec
das
push
add
sbb
mov
lcall
cltd
fmuls
fidivrl
cmp
lret
xchg
mov
cmp
movsl
bound
cli
imul
xchg
dec
arpl
popa
insb
ret
sbbl
fnstcw
sbb
rcrb
jmp
pop
shr
fisttpl
stc
cld
xor
mov
andb
sbb
cld
inc
sub
xchg
fs
mov
sub
pop
out
jo
adc
fs
imul
and
std
jae
or
mov
adc
jno
popa
pop
mov
leave
inc
jo
jne
fistpl
cs
movsb
iret
inc
jns
push
or
fcmovne
rcrl
inc
ficomps
add
adc
dec
or
cmp
cld
iret
xchg
sar
mov
jnp
add
nop
push
leave
cmp
xchg
cmp
dec
push
push
cwtl
adc
test
lret
or
das
scas
pop
sbb
mov
popa
push
push
dec
cmp
sub
sbb
in
pushl
outsl
ja
mov
adc
pop
dec
inc
pop
push
and
push
out
movsl
into
scas
jb
dec
and
leave
aad
popa
neg
xchg
pop
test
xchg
movsl
stc
lods
and
ss
clc
mov
ja
add
sbb
push
jns
popa
xor
push
dec
mov
mov
rorl
mov
fidivrs
push
aaa
mov
insl
adc
scas
push
inc
inc
std
or
shrb
sbb
mov
repnz
ficomps
inc
hlt
or
sub
ret
xor
fisttpl
cmp
mov
nop
insb
testl
mov
daa
and
add
es
mov
daa
fadds
pop
push
nop
mov
mov
sub
sbb
popa
leave
pop
xor
dec
mov
imulb
mov
mov
sub
dec
pop
test
adcl
adc
lret
push
std
in
mov
dec
test
mov
pop
dec
xchg
cli
cwtl
std
push
xchg
pop
push
and
sbb
xchg
loop
popa
pop
les
adc
je
xchg
addb
inc
push
fnstsw
repz
ja
cmp
push
cmp
out
clc
jge
push
or
out
jo
cmp
pop
adc
jo
adc
popa
les
cmp
inc
mov
je
or
daa
mov
andb
movaps
test
pop
mov
add
adcl
int
call
inc
fimuls
mov
xlat
lds
and
mov
mov
ud1
icebp
jmp
cltd
lods
movsl
mov
out
dec
shr
xchg
daa
insl
mov
mov
outsl
inc
ja
into
adc
cmp
in
pop
sbb
test
and
mov
add
iret
mov
inc
ret
jnp
jnp
pop
or
lcall
sbb
adc
fwait
scas
call
popa
movsl
mov
insb
loope
push
test
pusha
or
rcrb
push
inc
ficomps
mull
xor
mov
lret
pop
dec
jbe
cmpsb
leave
xchg
mov
inc
insl
shrb
push
popw
fidivrs
lret
cmpsl
daa
mov
pop
jge
sub
gs
insb
das
int3
lods
push
ficoms
test
jg
push
xor
aad
mov
notb
mov
mov
mov
test
shl
add
dec
cmc
lahf
cli
jp,pn
pushf
fdivrp
cmp
pop
sbb
xchg
addl
clc
mov
jno
mov
add
cwtl
aaa
imul
adc
push
add
jne
xchg
out
pop
cmp
push
jmp
pop
outsl
pusha
adc
aaa
aam
test
lock
cmc
in
inc
adc
out
in
inc
xlat
xchg
xchg
stc
sub
fwait
test
jmp
xchg
push
imul
mov
rcrb
add
mov
mov
hlt
pop
in
cmpsl
pop
xchg
cs
scas
lcall
outsl
jg
rcrl
out
and
inc
inc
push
pop
inc
add
test
out
xchg
xchg
xchg
hlt
xchg
je
dec
gs
sbb
sarl
inc
mov
sbb
lods
ss
fsubrl
test
mov
dec
xor
test
add
aas
xor
fisubl
mov
and
adc
ds
decb
daa
lods
daa
push
fcmovnu
pusha
xor
or
adc
push
mov
popa
gs
int
mov
jnp
inc
loope
adc
or
and
cmp
mov
inc
push
push
jae
aas
xor
xor
out
insb
dec
divb
das
ljmp
inc
roll
jp
loope
pusha
push
sub
pop
pushl
jg
stos
jne
ret
fwait
test
mov
ljmp
cmp
cmp
inc
and
xchg
fistl
sbb
push
arpl
adc
push
pop
adc
pop
sahf
mov
add
push
mov
jg
dec
fidivrl
sub
call
cmpb
jnp
nop
ljmp
push
mov
xchg
leave
inc
mov
jmp
int
adc
xor
sub
xor
mov
mov
cmp
jp
cmpsl
insl
mov
jmp
aas
repz
mov
dec
fiadds
adc
adc
cli
cmpsl
xor
mov
lods
jae
or
in
pop
jecxz
xorl
addr16
xor
pop
cli
mov
add
mov
sti
test
jl
dec
sub
push
mov
rclb
xchg
shl
jmp
jecxz
push
insl
cmpsb
push
pop
repz
mov
cmovg
fs
push
xchg
faddl
mov
add
push
xchg
call
leave
push
sbb
jg
cmpsl
or
push
jae
xor
rolb
icebp
or
lods
mov
ret
xchg
subl
stc
dec
jge
sub
es
mov
jae
cs
clc
pop
mov
xchg
lods
enter
push
jmp
out
lods
sahf
imul
add
ja
scas
fstl
lds
scas
in
lods
xchg
add
leave
mov
jae
mov
lods
and
fildl
in
jns
dec
lds
sbb
addr16
pmaxub
aas
and
push
or
imul
sub
leave
dec
imul
add
or
jo
ja
cmp
fisttpl
cmp
jns
pop
mov
fmuls
sahf
popa
hlt
sbb
xchg
xchg
rcrl
sbb
jne
mov
scas
jnp
loop
xor
enter
dec
xor
pop
adc
mov
add
nop
mov
loopne
xchg
fwait
jne
lock
mov
ror
jb
sti
rorb
pop
leave
xchg
ljmp
jmp
add
sbb
cs
sub
dec
push
jne
insb
icebp
xchg
in
cmpsl
sbb
adc
adcl
shll
inc
push
push
cmc
or
iret
fcmovnu
lods
push
mov
jmp
test
sub
xchg
push
insb
sbb
cltd
push
push
inc
add
je
sahf
adc
fstpt
add
xlat
out
push
mov
push
cmp
fsubrl
pusha
loope
xor
jecxz
jge
jmp
clc
daa
mov
ljmp
mov
lret
xchg
leave
or
sbb
cmp
jbe
movsl
jbe
inc
pop
hlt
xor
in
dec
daa
ds
fistl
push
cmp
data16
dec
test
add
into
mov
rorb
sub
sbb
dec
addr16
jnp
fstl
inc
call
or
sbb
int
stc
loop
leave
inc
call
fwait
sti
add
push
fcoms
std
sahf
gs
sub
xor
pop
int3
xchg
add
and
and
mov
inc
stc
push
xchg
push
pop
repz
pop
sarl
jo
les
push
jnp
pop
insw
cmc
dec
or
xor
push
sub
negb
fisubrs
mov
or
xor
and
mov
dec
stc
sbb
push
rorl
pop
mov
xchg
jmp
sbb
mov
js
mov
and
jecxz
lea
aad
shr
outsb
jns
add
dec
pop
xor
mov
sub
dec
shrl
mov
ds
in
mov
inc
out
push
push
imul
mov
push
gs
lcall
push
dec
pop
stos
out
popa
loopne
push
push
jne
cmp
push
dec
ljmp
push
pushf
or
push
in
push
sbb
lcall
scas
fwait
inc
xchg
mov
fisubs
jg
lods
push
daa
lar
call
repnz
fsubrl
pusha
add
sub
nop
fs
fidivs
leave
je
mov
fistpl
sub
inc
hlt
mov
daa
in
int
mov
dec
lock
cmp
inc
sbb
int
jns
inc
arpl
sbb
push
fmull
nop
lret
or
pop
ljmp
out
cld
sbb
fldenv
inc
xchg
fimuls
jo
push
mov
ljmp
test
call
aas
lea
adc
movsb
shll
mov
jnp
shlb
mov
mov
sahf
jg
sub
stos
push
sub
dec
fistl
int3
popa
add
test
ds
movsl
roll
jnp
out
xchg
insl
jle
push
push
or
pop
sbb
push
jmp
fwait
out
ss
iret
inc
fs
imul
pop
sbb
and
imul
sub
fistpl
mov
scas
sub
imul
add
lret
adc
pop
out
cmpsb
jnp
inc
dec
cmp
mov
in
xor
xor
int3
test
cwtl
lahf
push
fidivs
pop
and
jns
xor
pop
test
mov
ret
decb
adc
stos
mov
or
xchg
aaa
shrb
mov
dec
int3
mov
out
or
jmp
inc
sbb
arpl
les
repnz
ficoms
leave
insb
shll
leave
gs
xchg
add
movsl
jl
and
mov
jg
xchg
sahf
sub
jno
stos
shlb
add
mov
xor
pop
add
mov
cmp
adc
inc
sti
sbb
add
push
adc
dec
sub
push
or
stos
xchg
mov
push
mov
pop
inc
je
mov
iret
loope
pop
scas
or
imul
cs
cwtl
shlb
mov
fs
mov
push
sar
cmp
fiaddl
popf
scas
iret
or
sbb
add
ret
jg
adc
dec
lahf
xorb
pop
adc
loopne
cmp
push
insb
testb
addb
lods
push
idiv
pop
sub
in
dec
lods
daa
sub
rorl
jecxz
lcall
inc
aam
cmc
pop
int3
mov
stos
gs
shrl
mov
ljmp
mov
adc
nop
sub
adc
inc
lds
lea
jnp
sub
ss
loopw
mov
dec
adc
lahf
cld
pop
mov
jns
mov
or
mull
push
and
stos
mov
jns
adc
sub
inc
shll
scas
pcmpeqd
scas
sahf
repz
add
lea
mov
scas
enter
test
or
cld
gs
pusha
fistl
loopne
imul
mov
imul
lcall
jbe
or
leave
lcall
mov
clc
push
dec
inc
sbb
mov
imul
sub
int3
leave
mov
jne
leave
xor
cmp
fistps
repnz
jns
xor
inc
sahf
xor
das
push
loopne
inc
gs
mov
adc
sbb
pop
repz
outsl
inc
sarb
cmc
jb
xchg
sbb
pop
mov
jecxz
lods
pusha
stos
pop
ljmp
or
lcall
jmp
mov
mov
aam
jae
mov
test
mov
or
test
push
push
leave
inc
sti
dec
fdiv
jg
jb
cmpsb
aad
insl
insb
and
jecxz
mov
fs
mov
jge
xchg
cmpb
xchg
std
or
jb
xorl
repnz
aaa
xlat
or
pop
daa
inc
les
fidivrl
jecxz
xchg
mov
dec
adc
out
mov
push
cmc
imul
mov
xchg
mov
inc
xchg
imul
xlat
outsl
dec
xchg
js
and
cmp
push
inc
jp
or
iret
dec
pop
xchg
jo
lcall
mov
sbb
daa
add
and
sbb
mov
dec
jno
or
push
jo
mov
xor
push
xchg
push
icebp
lahf
dec
test
push
insl
fs
jnp
push
add
jg
jge
or
jle
mov
inc
jl
lods
int
leave
shl
dec
lock
sbb
sbb
mov
stc
mov
or
sbb
mov
dec
push
xor
hlt
scas
cs
mov
dec
fstpl
sahf
and
xor
subb
add
xor
cmpsb
dec
sub
or
and
aaa
cmp
rorb
ja
xchg
test
inc
xchg
pop
aaa
js
inc
jmp
xchg
and
imul
push
popf
push
dec
cltd
aam
adc
dec
cmp
sarl
popf
inc
popa
or
jne
xchg
insb
cmpsl
adc
pop
add
and
repz
mov
adc
fsubl
pop
and
pop
es
or
lock
xchg
cs
lret
or
xor
mov
jnp
call
jle
add
jl
push
andb
jp
add
mov
test
int3
add
jmp
cmc
fildl
lret
pop
jae
pop
repnz
stc
fistpl
xchg
mov
bound
pop
cmp
dec
repnz
cmpl
roll
lds
sub
and
hlt
mov
cs
ja
mov
js
das
jge
jno
mov
in
and
pop
jecxz
loopne
ret
test
xchg
mov
sub
jbe
dec
rorb
dec
inc
pop
sarb
mov
xor
lds
add
je
sarl
pop
imul
subb
dec
loopne
or
setb
xchg
cs
fdivrl
test
pop
and
lods
addl
roll
stc
pusha
push
call
xadd
xor
add
scas
inc
jmp
pop
dec
inc
lahf
out
mov
xor
cmp
cwtl
sub
popa
cmp
clc
out
adc
jl
mov
or
sub
mov
push
shll
iret
in
mov
cmp
aad
lock
xor
inc
sbb
arpl
mov
cld
sar
ja
clc
test
sti
mov
cmpb
sbb
bound
adc
cmp
sub
enter
enter
pusha
add
sub
mov
ljmp
lret
sub
icebp
test
stc
ror
ja
icebp
inc
leave
jne
fwait
add
test
enter
pop
subl
std
fildl
mov
pop
nop
out
movsl
aam
mov
cmp
mov
js
jae
cmp
mov
jge
pop
pushf
add
clc
bound
call
pusha
pop
movsl
stc
xchg
pop
cltd
fsubr
lcall
jp
leave
mov
mov
insl
stos
inc
mov
in
scas
jecxz
lahf
cmc
lret
and
out
mov
out
xorb
mov
dec
test
xchg
fldl
adc
cmp
cmpb
mov
cmp
inc
or
mov
xchg
mov
test
sub
cwtl
mov
xor
and
daa
ds
sti
cmp
sub
clc
or
insl
stc
lock
aam
movsl
gs
je
inc
ja
mov
jecxz
int3
cmp
ljmp
nop
inc
loopne
ss
mov
add
rorb
imul
pusha
add
in
sub
shr
mov
adc
les
mov
mov
stc
lret
mov
rcrb
or
mov
leave
and
aas
xchg
jmp
fisubs
and
or
cmp
sub
push
leave
mov
pop
ret
orl
cmp
xchg
mov
mov
sub
aaa
rcll
push
add
lds
mov
xchg
imul
rcl
icebp
mov
es
xchg
or
xor
js
xchg
mov
mov
jp
test
es
or
hlt
mov
pop
sub
lds
or
ja
das
xorl
push
mov
add
inc
out
xchg
cltd
mov
hlt
mov
in
repnz
jge
popf
xor
push
sub
stc
das
lds
jne
inc
js
xchg
or
pop
xchg
outsb
xchg
arpl
xchg
xor
mov
pop
call
inc
jno
inc
jp
aas
xchg
and
mov
inc
gs
stc
xor
pushf
push
jae
pop
pop
or
loope
jbe
pop
adc
arpl
jmp
leave
aad
adc
dec
ror
aas
adc
loop
scas
loopne
or
repz
pop
push
inc
mov
push
xor
ss
in
xchg
or
in
pop
or
push
or
js
in
leave
inc
inc
outsl
fistpll
fwait
add
in
or
and
xchg
cld
fimuls
jae
insl
pushf
int3
shr
or
mov
mov
xchg
std
subps
xorb
mov
xchg
lock
decl
orl
popa
add
fisubs
mov
aaa
mov
mov
cmc
mov
bnd
aam
jg
jb
in
mov
insb
dec
push
fwait
lods
lock
xor
mov
mov
iret
or
out
xchg
dec
daa
gs
scas
mov
xor
push
gs
ret
test
or
incb
das
pop
ja
addr16
cs
inc
and
cli
xchg
aaa
lahf
or
shlb
loopne
sbb
addb
pushw
jle
jns
repnz
pusha
cwtl
out
inc
mov
sbb
ror
and
xchg
insl
push
sbb
daa
inc
add
and
add
bound
xor
ds
dec
dec
add
int3
lods
or
das
adc
mov
scas
ret
arpl
jmp
aas
loopne
adc
int
loope
add
shll
jge
lret
dec
adc
xor
mov
push
dec
sbb
push
pop
dec
pop
in
leave
sbb
shl
or
adc
push
inc
lods
aad
adc
mov
mov
jg
lods
dec
aas
daa
jbe
jge
pop
jns
pop
mov
cmc
sbbl
dec
cwtl
insl
mov
scas
mov
mov
data16
cs
out
aas
add
mov
xor
mov
mov
lock
fisubs
es
scas
out
lods
push
sbb
mov
ljmp
xor
jmp
js,pn
cli
push
lahf
data16
sahf
xchg
pushf
loope
push
lds
fsts
or
fadd
popa
jb
inc
xchg
sbb
jb
out
scas
sub
mov
sub
lds
sbb
or
rcll
mov
mov
or
sub
rcrb
nop
xchg
jp
jecxz
adc
cld
jl
dec
cmp
movsb
push
clc
mov
sub
clc
xchg
lret
adc
es
mov
aad
or
push
mov
scas
icebp
pushf
jno
xor
lock
and
xchg
dec
push
pop
add
insl
loopne
mov
in
adc
ds
sbb
sub
pushl
mov
enter
lahf
cmp
fucomp
movsl
lds
push
push
cmp
test
mov
inc
sub
dec
adc
sub
pop
and
cli
mov
cmc
mov
xlat
cmp
popf
jecxz
dec
add
inc
jnp
outsb
outsl
add
stos
iret
lret
lahf
or
mov
fwait
mov
sub
loop
scas
mov
jnp
or
mov
movsb
lret
sub
and
xor
cmp
cmp
xchg
and
lahf
cmp
xchg
sbb
ret
adc
popf
push
outsb
lret
lods
aas
cmpsl
aam
mov
bnd
lret
cmp
mov
and
xor
enter
in
shlb
bound
int
lods
and
sbb
popf
sub
fidivs
ret
jae
les
mov
or
or
test
xchg
adc
inc
fmull
jo
mov
add
push
pop
mov
shlb
out
cmp
xor
out
pusha
lret
add
fcomi
ja
call
ljmp
inc
aaa
pop
mov
cmpl
jns
insl
pop
clc
out
dec
in
mov
js
add
push
and
push
mov
jmp
ljmp
mov
pop
lret
xor
adc
or
jmp
std
cmc
outsb
xor
lret
aam
cmpsb
push
pushf
mov
mov
fs
arpl
dec
pop
negb
aad
jecxz
jmp
nop
out
aad
mov
out
jo
pop
in
aaa
pop
mov
div
mov
ss
aam
fildll
iret
mov
pop
pop
repnz
cmp
pop
ret
pop
jo
xor
pushf
dec
popf
or
push
mov
mov
shrb
loope
popa
jp
mov
inc
lods
xorl
into
lcall
mov
cmp
mov
cmp
mov
mov
sub
mov
ljmp
mov
add
shrb
cmpsl
fbld
int3
sti
cli
xor
mov
jo
xchg
adc
or
ljmp
pop
les
jae
inc
js
cmp
sbb
jmp
test
sbb
str
das
mov
or
filds
fists
sub
pop
sbb
jns
or
call
decl
lret
mov
fdivp
movsb
loopne
repz
and
and
call
xchg
adc
mov
or
lock
clc
enter
add
pop
sbb
pop
sbb
fwait
test
push
jno
loop
jo
fldcw
out
jecxz
lret
dec
outsl
inc
and
push
scas
or
imulb
mov
inc
movsl
push
insl
mov
adc
jecxz
inc
rclb
pop
addb
inc
xchg
ficoml
xlat
scas
sbb
pop
dec
xchg
fimull
call
adc
xchg
mov
or
cmp
adc
cmp
icebp
adc
test
leave
cmp
outsb
test
xchg
leave
in
cmc
pop
rcl
int
aam
orb
and
xor
mov
mov
jmp
mov
push
mov
xor
loope
pop
lods
fists
cmp
push
lock
sbb
orl
in
push
adc
pushf
inc
lcall
push
add
fldt
ror
mov
or
cld
incb
cmp
push
aam
jecxz
mov
add
ss
jne
int3
jmp
leave
subl
sahf
and
dec
sub
movsb
and
sbb
inc
mov
and
int
ret
test
cmpsl
orl
insb
test
jle
jne
xchg
arpl
lret
adc
jae
sahf
loope
or
add
lods
cmpl
dec
lea
sbb
rcll
mov
cmp
mov
add
cld
js
in
insb
add
inc
push
insb
lret
js
movsb
inc
push
mov
adc
aam
jno
xor
aas
cmp
xor
sbb
inc
pop
pop
xchg
lret
xor
ficoms
mov
pusha
pop
test
out
js
pop
out
xchg
cmp
mov
push
dec
rolb
cs
xchg
push
pop
adc
loopne
and
inc
int3
mov
push
sbb
adc
xchg
fimuls
sbbb
push
ljmp
adc
add
mov
fscale
jg
test
out
xor
sbb
push
jl
sub
inc
test
or
mov
push
lock
test
mov
or
pushf
cmc
ret
jg
jno
mov
mov
aaa
addb
fmull
sbb
sub
mov
dec
add
mov
mov
divl
mov
cld
in
sub
or
lock
sbb
mov
lock
orl
test
dec
cltd
sub
lahf
xchg
fsubr
scas
mov
mov
imul
nop
jnp
mov
in
int3
jmp
ljmp
out
push
and
adc
mov
dec
cwtl
int
lcall
pop
loop
add
mov
fprem
cli
xor
jp
mov
dec
out
cld
fdivs
sbb
push
sbb
mov
ss
es
les
mov
cltd
into
mov
dec
scas
xor
and
or
cmp
inc
sub
popf
mov
mov
dec
cmp
or
mov
add
daa
add
mov
dec
sub
mov
and
push
mov
xchg
clc
inc
jmp
sbb
xor
add
inc
inc
push
sbb
mov
pop
and
bound
mov
lods
jge
or
jnp
xchg
dec
mov
mov
imul
loope
icebp
pushf
xor
xchg
jl
jbe
push
or
aaa
push
into
xor
ret
jmp
lret
inc
fisttps
sbb
add
lds
jl
inc
mov
jp,pn
push
and
jbe
faddp
fstps
mov
movl
les
out
movsl
sub
add
and
inc
mov
int
out
adcl
movsl
push
xchg
inc
mov
ret
xor
daa
push
sub
push
jg
movb
in
mov
and
jge
cmpsl
fistps
nop
cmp
in
inc
push
fcompl
adc
pop
out
add
xlat
jecxz
clc
lods
test
jl
mov
mov
or
in
mov
jnp
fs
stos
subb
mov
adc
scas
in
andnps
in
sbb
cmp
lea
mov
movsl
cli
pop
inc
addps
sbb
inc
dec
ljmp
pop
pop
stc
popf
sub
dec
mov
mov
repz
push
sub
dec
popa
int
xor
mov
xchg
and
movsb
std
ffree
add
push
xchg
sahf
mov
push
add
lcall
or
in
mov
lret
dec
insb
into
mov
mov
adc
insb
mov
cltd
stos
int
mov
xor
mov
xchg
les
rcrl
lods
inc
shrl
inc
or
repz
add
lods
xor
dec
push
cltd
out
addr16
and
or
push
adc
gs
daa
rorb
outsl
pop
js
cmp
push
xor
aam
xlat
mov
xchg
jo
adc
xchg
cld
cmpsb
add
xor
cmpsb
lret
add
mov
stos
push
fisubs
dec
sarb
mov
add
xor
test
clc
jnp
mov
mov
ret
clc
inc
cmpsl
shll
dec
xor
xchg
xchg
imul
jns
mov
inc
in
aam
jle
cltd
mov
jmp
call
xchg
push
dec
fwait
leave
lretw
push
shrb
pop
push
pop
jb
test
xchg
cmc
xor
jmp
pop
lods
arpl
insb
insl
adc
cwtl
data16
sbb
int3
cwtl
das
outsl
shl
mov
inc
push
jmp
cmp
ret
dec
inc
sbb
faddl
mov
mov
or
cmp
cwtl
or
jp
push
add
xor
bound
aam
ss
sub
icebp
jge
jmp
pop
insl
leave
push
jl
jnp
jp
imul
xor
aam
fwait
fwait
mov
pop
test
jle
xchg
mov
mov
lcall
and
push
sahf
xchg
jle
inc
sbb
sub
sbb
lock
popf
cwtl
push
xor
addr16
ljmp
mov
jbe
push
xchg
outsl
jbe
cs
fsubp
cmp
stc
popl
adc
or
xchg
scas
lods
inc
jp
adc
mov
jge
dec
pop
sbb
arpl
xor
rcrl
jae
call
popa
ret
and
add
out
inc
stos
testb
add
fld
icebp
ret
lret
sbbb
cmp
and
jg
cltd
pushf
loop
jns
pushl
sub
in
xor
adc
and
fiadds
mov
sbb
out
leave
ljmp
xor
push
pop
test
mov
stc
ret
jg
int
repz
loope
xor
aam
cld
dec
rdmsr
pop
mov
test
out
cmp
lds
movb
or
mov
ds
fisubs
inc
xor
jne
xchg
into
stos
repnz
sub
loope
mov
and
sbb
and
in
pop
jo
adc
ret
push
ss
ret
pop
dec
or
shrb
jp
add
loop
js
jg
aas
ror
lret
mov
ljmp
xorl
lods
adcl
outsl
adc
sub
pop
sbb
ret
stc
jle
jmp
icebp
push
lret
aaa
cmpsb
jmp
es
pop
stc
shl
das
fsts
test
mov
or
mov
ss
pop
mov
lahf
outsl
push
push
jge
or
dec
adc
mov
mov
test
sbb
inc
loop
jnp
jb
push
sub
push
fisttpll
in
hlt
push
pop
sar
push
xor
test
mov
mov
movsl
or
mov
or
gs
sbb
adc
mov
push
adc
mull
jns
add
jmp
scas
xor
cmpsb
lods
rorl
mov
sbb
je
or
add
subb
jecxz
aaa
sbbl
test
mov
mov
lds
aas
inc
jo
jmp
aas
sbb
xorl
and
and
mov
mov
test
add
push
es
loop
lahf
aad
mov
fldl
out
sbb
lods
cmp
test
in
insb
mov
and
subb
aam
inc
loope
adc
aam
inc
test
insb
and
ficomps
ss
cld
mov
imul
lods
movsb
jecxz
pop
and
sub
stos
inc
ja
stos
cmc
sub
mov
cmp
into
pop
sbb
fucomip
mov
and
push
inc
sbbl
pop
ljmp
movsb
repz
and
xor
mov
mov
je
daa
stc
add
sarb
mov
stc
xchg
cmpsl
jmp
sbb
mov
jnp
jl
and
push
test
sbb
sub
ljmp
pop
push
jo
xchg
in
cmpsb
lods
idivb
push
xchg
ficomps
popa
mov
or
orb
push
cltd
sbb
mov
cwtl
fldcw
xor
int
sbb
cmc
cmc
lds
fs
dec
ljmp
shll
adcl
rclb
ds
popf
mov
sub
rorl
loopne
sub
ss
mov
hlt
in
fbld
imull
adc
shlw
gs
inc
push
mov
jbe
cmp
lock
push
and
mov
xchg
and
mov
jns
or
pusha
aad
mov
xchg
pop
xchg
repz
rcl
fiaddl
add
scas
out
dec
cmp
mov
int
cmp
add
mov
les
inc
shll
shlb
shr
daa
insl
rsqrtps
cmp
mov
sub
sub
in
ss
adc
out
shll
nop
pop
rcrb
jge
dec
cld
scas
sbb
mov
cmp
jg
mov
xor
aaa
ficompl
or
es
pop
cmp
push
mov
adc
rcrb
jae
lods
fcomps
adc
dec
add
jae
les
push
push
jecxz
ja
out
sti
loopne
test
mov
pop
je
ret
loopne
push
rcrb
pop
xor
xlat
andb
insl
out
stos
lods
xorl
push
xor
nop
xchg
mov
push
cmpb
sahf
clc
addl
xor
push
cwtl
mov
fwait
jp
psubq
mov
mov
movsl
js
in
jae
add
cmp
sahf
adc
mov
jge
ret
mov
test
cmp
mov
fwait
add
push
pop
sbb
loopne
push
pusha
ret
xorb
lds
jge
mov
mov
fs
lret
fs
fbstp
push
xchg
call
test
lea
inc
mov
les
push
adc
mov
mov
xor
cli
lods
mov
stos
xlat
imul
fisttpl
je
xor
push
idivb
and
daa
xchg
fidivrl
mov
xor
lds
dec
xor
sbb
push
pop
add
pop
ss
sti
jb
pop
outsl
push
sahf
push
popa
jecxz
add
or
push
pop
outsl
mov
jnp
jbe
scas
lods
xchg
jb
arpl
sbb
jnp
fwait
cmc
movb
repnz
pop
adc
fildll
lcall
jp
stos
inc
insb
outsb
ja
lcall
sbb
cmp
adc
dec
xor
mov
adc
push
mov
test
xchg
imul
imul
and
fistpl
xchg
fnstsw
icebp
cmpsl
mov
xor
mov
mov
mov
adc
pushf
mov
adc
popa
lcall
and
ret
dec
ljmp
int
pop
test
cmp
daa
push
mov
dec
adc
jbe
dec
inc
mov
add
pop
ret
mov
cmovnp
repnz
or
aad
jnp
xor
mov
push
push
insl
sahf
inc
jmp
xchg
inc
mov
fidivrs
add
fsubrs
or
into
aas
icebp
mov
sbb
mov
mov
cmp
push
loopne
sub
pop
aaa
push
sbb
mov
in
in
adc
jg
inc
rcr
in
jl
push
jp
add
xor
in
mov
jl
cwtl
rcrb
xchg
cwtl
mov
adc
jnp
addr16
negb
and
adc
xor
sbb
mov
pop
stos
scas
les
loopne
inc
cld
aas
cli
mov
scas
fnstenv
inc
cmp
pop
sbb
push
and
call
and
push
jo
jno
lret
push
push
push
lock
ficomps
cmp
out
lock
or
xchg
rcrb
cmp
xorl
testb
in
add
pop
inc
mov
scas
sub
lret
xor
outsb
xchg
jg
sbb
lods
std
cmpl
inc
push
xlat
mov
xchg
mov
jno
mov
or
out
dec
or
inc
lcall
mov
in
mov
sbb
sub
test
cmpsl
aad
mov
mov
or
jecxz
aaa
sbb
jp
mul
jns
cltd
rol
movsl
mov
fs
repz
shl
adc
aaa
in
lea
and
cmp
lahf
pop
movsl
imul
lock
lret
je
testl
das
pusha
adc
pushf
orps
jbe
cld
dec
add
sub
fisttps
jp
sahf
inc
xor
nop
lret
xor
in
inc
sbb
xor
mov
testl
mov
out
push
inc
rol
mov
dec
add
leave
test
sbb
fs
mov
or
imul
in
test
test
xor
sbb
sub
push
or
adc
lods
dec
mov
sbb
xor
leave
adc
xchg
mov
dec
jno
mov
mov
dec
pop
repz
mov
cmpl
pop
or
cmp
sbb
push
iret
xlat
pop
sbb
xchg
cltd
dec
sti
in
sbb
enter
xchg
dec
test
jecxz
pusha
repz
sbb
lret
dec
mov
repnz
js
inc
xor
insb
xchg
pop
int3
sub
out
sarb
adc
fmull
in
mov
out
xchg
sub
iret
shrl
mov
cmp
sahf
push
xchg
inc
and
loope
mov
push
mov
in
mov
push
daa
pop
sti
push
repz
inc
inc
jmp
lods
xlat
out
sbb
inc
jl
arpl
mov
das
xchg
and
sub
imul
xchg
pop
mov
add
outsb
xchg
gs
insl
std
pop
cmc
sub
out
and
clc
gs
pop
mov
xchg
aad
xor
imul
push
sub
test
sbb
or
mov
fidivs
repz
ret
stos
push
pushf
loopne
jb
inc
out
insl
ss
inc
inc
shr
call
ret
hlt
sub
push
lcall
sub
xor
movsl
les
test
dec
and
dec
rcr
jb
sub
mov
int
sarb
add
push
xor
xchg
aam
ljmp
add
jns
cmc
cmp
les
pop
and
fistpll
in
repz
shrl
xor
shr
mov
stc
test
in
sub
test
and
jg
and
jmp
mov
mov
push
rorl
pop
cld
fs
out
pushf
cmpl
ret
das
fadd
xchg
xchg
insb
cltd
push
ss
jnp
test
xor
pop
xor
push
xchg
stc
or
push
xor
rclb
cltd
mov
test
push
popf
and
sub
fistpl
pop
and
ja
out
shrb
adc
add
mov
push
repnz
shlb
ss
int
inc
dec
pop
add
ljmp
jae
insl
ret
xchg
call
cmpsb
cld
jg
dec
jmp
pop
pop
mov
mov
sub
cmp
test
in
sub
loop
bound
add
mov
ss
jo
sub
daa
xchg
std
cld
and
aam
leave
cmp
shll
pop
mov
add
push
mov
inc
sbb
pop
xchg
mov
lret
ret
outsl
ss
pop
jb
adc
mov
clc
mov
mov
mov
mov
push
ss
xchg
jg
imul
sub
test
sub
sbb
push
test
xchg
cltd
sahf
cld
pop
jle
iret
fdivrs
and
fstpl
mov
push
dec
xor
push
xor
in
add
scas
xor
rcll
lcall
shrl
push
mov
cmc
pop
arpl
ret
mov
clc
outsb
jne
push
fwait
pop
loop
into
xor
cmp
dec
jb
mov
in
and
mov
pop
cmpsb
ret
das
dec
and
gs
int
lret
std
call
addr16
mov
testl
inc
or
inc
fsubrl
fadd
test
cld
enter
dec
add
lock
add
cltd
ja
mov
pop
or
sbb
mov
pop
mov
xor
adc
xor
enter
cmpl
stc
out
pop
pop
imul
or
les
shl
lret
push
test
and
jno
pop
subb
imul
xchg
lret
sbb
shrb
mov
xor
repnz
js,pn
mov
or
pop
and
loope
or
test
repnz
fisubrl
jnp
out
lods
jle
std
sbb
shll
sub
xor
or
ds
sub
popa
mov
ss
jne
mov
lea
inc
cmc
int3
mov
les
xchg
gs
inc
jp
or
xchg
loopne
lea
and
sbb
push
inc
out
out
jno
jbe
push
fs
pop
loop
push
dec
mov
iret
push
fadds
xor
aaa
jg
jbe
or
loop
mov
sbbl
pushf
andb
dec
pop
dec
mov
sub
pop
push
push
cmp
mov
push
pop
inc
js
pop
inc
jle
les
xor
std
dec
imul
popa
sbb
daa
sub
in
sbb
cld
pop
pop
pusha
lds
mov
inc
inc
cmpsl
mov
sub
cmp
ss
dec
sbb
pop
in
dec
xor
lahf
push
insb
mov
test
xor
js
mov
stc
call
imul
push
or
lahf
pop
js
rorl
or
stos
adcb
lods
int3
sti
push
xor
jne
ja
idivl
dec
jae
fwait
lcall
pslld
stc
dec
es
stos
outsl
pop
push
jo
loop
and
mov
xchg
lock
fnstcw
jge
inc
lret
movb
mov
mov
fmull
arpl
and
or
jl
insb
xchg
mov
or
inc
mov
jae
rcrb
jmp
sbb
jl
sub
les
sti
xor
adc
cmpsl
test
push
imul
nop
in
pop
and
ja
fnstcw
push
stc
jg
stos
fiaddl
cmp
pcmpeqd
lahf
testb
mov
arpl
loope
lahf
mov
lret
movsb
loop
repnz
mov
xchg
sbb
mov
mov
jno
push
fstl
pop
xchg
sbb
fldcw
clc
in
scas
cmp
test
aad
ja
cmp
jne
notl
inc
inc
scas
jno
jb
cmpsl
insb
sub
cmp
adc
inc
sub
ret
or
sbb
inc
push
pop
js
adc
dec
pop
jb
cmp
insb
ret
pop
inc
rcr
das
mov
std
pop
scas
popf
int
out
xor
mov
jecxz
xor
mov
adc
nop
scas
cld
ds
sbb
fnstsw
ds
inc
mov
in
cmp
inc
loopne
mov
add
or
sub
imul
inc
jbe
push
mov
daa
stos
sbb
pop
jp
inc
push
sub
adc
push
out
pop
jae
gs
in
mov
ja
mov
xor
adcb
dec
addr16
call
adc
int3
pop
sub
mov
adc
mov
xor
and
inc
popa
popa
bound
ja
pop
mov
pusha
shl
add
imul
iret
dec
bound
pusha
adc
je
ss
dec
out
pop
mov
mov
inc
ds
and
movsb
dec
add
ljmp
sbb
sub
negb
ljmp
adc
scas
lock
jmp
mov
xlat
cmpb
mov
jae
lods
incb
sbb
into
js
out
or
aam
add
in
repz
xchg
add
sbb
mov
pop
ja
insl
pop
sbb
rclb
popa
push
enter
mov
lock
shrl
outsb
outsb
add
rorl
ds
xorl
loopne
movsb
or
mov
cli
mov
dec
sbb
icebp
push
ja
xor
mov
outsb
stos
xchg
loopne
iret
mov
xchg
jecxz
jns
cltd
mov
add
lret
call
movsl
sub
add
cs
adc
cmpb
and
add
jb
jmp
push
bswap
xchg
dec
mov
sbb
ds
into
lds
outsb
mov
dec
xor
shl
daa
je
aaa
imul
div
lret
mov
sub
or
imul
rolb
mov
push
jnp
add
push
aas
loopne
outsb
dec
inc
daa
pop
jnp
push
push
or
jmp
push
and
or
lock
mov
jg
pop
repnz
push
add
pusha
push
jecxz
lret
xor
add
push
sub
mov
sarl
and
scas
mov
adc
mov
sbb
lcall
fnstcw
call
cmpl
movsl
add
cwtl
xlat
push
loopne
xor
inc
sar
mov
int
push
push
cmpsl
or
push
pop
inc
repnz
lret
mov
push
scas
jmp
push
popf
orb
push
cmpsl
jge
out
fbld
jge
test
cld
sbb
lds
outsb
scas
fiadds
dec
aad
int
xor
fnstcw
cmp
push
or
das
pop
inc
addr16
mov
mov
or
jmp
pop
inc
mov
mov
aaa
mov
aaa
mov
adc
or
in
xbegin
xor
cs
jo
imul
loopne
push
sub
aam
in
iret
cs
in
movsl
or
lods
adc
push
dec
push
jle
cld
rorb
xor
sete
rol
std
sub
leave
aad
inc
xchg
fsubrs
sti
pop
add
ja
lock
cmp
das
mov
leave
pop
sub
dec
adcb
sahf
inc
cltd
lock
les
sti
lahf
lcall
pop
mov
in
ret
xor
into
inc
mov
pop
push
add
adc
adc
aaa
xchg
jb
out
test
push
xchg
test
sub
sub
imul
adc
push
adc
push
shll
adc
push
inc
cli
imul
xlat
xchg
loop
inc
jp
xor
popa
cmpb
fsts
cld
adc
hlt
dec
daa
sbb
aam
sub
rcrl
sub
adc
add
mov
pop
mov
dec
dec
push
ror
or
push
xorl
addl
jle
aas
mov
inc
mov
aad
js
sub
dec
fmuls
jne
sub
lret
inc
adc
cmp
push
push
mov
hlt
data16
adc
test
negb
sbb
movsb
sub
jae
cli
data16
decb
cmp
in
cmpsl
pop
mov
test
insb
inc
push
sbb
pop
xor
add
sbb
xchg
mov
data16
xor
jmp
in
lcall
dec
test
aaa
adc
daa
mov
adc
pop
push
test
dec
jp
jns
movsl
or
and
lock
push
jmp
pop
jbe
inc
movsb
cwtl
lds
imul
gs
jge
fildl
cld
out
push
jno
adc
pop
ja
out
pop
inc
pushf
xchg
shlb
inc
add
push
aam
mov
das
or
adc
and
adc
jp
adc
cmpl
ja
mov
cli
and
aam
and
sbb
hlt
push
mov
popf
cltd
jbe
in
test
aaa
outsb
lea
lret
nop
xchg
aad
lea
pop
add
and
sub
cmp
fwait
mov
xlat
pop
mov
adc
clc
mov
xchg
or
lcall
mull
dec
int3
lods
std
inc
fsubs
dec
sarb
pushf
cmp
jmp
in
cld
lock
mov
pop
xchg
scas
aam
mov
mov
xor
jmp
mov
insb
stos
xchg
cmc
outsl
adc
inc
fdivp
xor
push
pop
push
cmp
imul
out
jo
dec
frstor
fildl
xor
dec
dec
or
js
push
and
push
mov
xchg
cs
dec
inc
sub
sbb
mov
add
jno
xchg
add
loope
or
inc
pushf
repz
push
xor
pop
dec
push
jge
loope
les
leave
out
cmp
cli
cmp
loop
les
ret
xchg
mov
cmp
hlt
movsl
icebp
or
cmpsl
out
fs
sub
call
add
subb
incb
out
mov
not
loop
shl
xchg
add
jo
ljmp
mov
lock
out
faddp
xchg
or
movb
inc
loop
mov
or
sbb
aam
jp
inc
lds
int3
sub
fistl
sub
pop
aad
cmpsb
dec
mov
push
scas
xor
loop
add
movsb
mov
or
loopne
js
sarb
pop
pop
adc
sar
and
pop
cmp
inc
mov
inc
pop
pop
sbb
xor
pop
mov
mov
sub
fcmovnb
mov
add
mov
mov
js
pop
jmp
aas
and
scas
out
movsl
js
pop
xor
pop
and
in
cmp
dec
sub
mov
fsubrs
rorb
fdivrp
lret
add
mov
adc
test
int3
lods
sbbb
mov
notl
das
jl
sbb
adc
adc
lea
sbb
call
push
mov
cli
cmc
cmp
icebp
movsb
sbb
xchg
adc
ljmp
xchg
cmpsl
pop
ret
clc
mov
nop
adc
fidivl
pop
frstor
jmp
add
pop
insl
push
loope
adc
dec
aaa
cli
loop
inc
jge
jge
xchg
mov
add
adc
adc
sbb
pop
pop
cmp
lds
jae
cld
adc
pusha
arpl
mov
sbb
cmp
enter
out
pop
test
sarb
in
popf
test
and
sbb
pusha
scas
scas
cmp
jp
aad
test
mov
push
ret
in
add
mov
mov
call
in
push
jg
cmp
mov
inc
pop
fisttps
xchg
loop
addr16
sahf
xor
mov
add
jecxz
pop
jnp
sti
shlb
in
jb
mov
faddl
repz
rcrl
add
push
xchg
push
cld
fwait
xchg
pop
pop
mov
ret
insl
int
repz
dec
cmpsb
xchg
loope
pop
jecxz
orl
int
fmull
mov
mov
xlat
xor
sub
ja
test
adc
pop
shl
stc
js
sbb
sub
jns
jo
mov
mov
incb
and
pop
dec
lea
dec
and
sbb
pop
daa
mov
sbb
mov
cmp
je
iret
add
dec
nop
mov
scas
pop
addr16
push
daa
dec
aaa
adc
jp
push
das
push
add
add
out
aaa
mov
lds
loop
mov
or
ficompl
sahf
adc
mov
lock
jnp
imul
loopne
bound
jo
or
cmp
push
data16
mov
hlt
pop
iret
mov
inc
push
mov
fcoml
insl
test
jle
clc
push
mov
rorb
push
jmp
dec
pop
int3
mov
addr16
push
mov
add
lahf
pop
xorb
mov
jno
jecxz
repz
andl
sub
jecxz
pop
mov
scas
in
mov
inc
pop
dec
clc
jl
jp
mov
call
sbbl
ds
push
arpl
repz
mov
or
sbb
sbb
shl
jo
stos
call
in
test
inc
jno
int
hlt
jp
fs
mov
loope
lret
inc
daa
push
idivb
dec
test
cwtl
xchg
xor
bnd
fwait
mov
pop
addr16
arpl
orl
add
or
jne
mov
or
push
das
repz
jns
add
pop
scas
and
xor
xchg
insl
int
pushf
jp
lods
testb
movlhps
stos
fldcw
sub
and
shrl
das
dec
shll
jge
pop
in
ljmp
orl
mov
addr16
mov
jbe
inc
inc
rolb
pop
jae
xor
mov
data16
cmpl
pop
push
daa
cmpl
test
push
sbb
popa
sub
dec
arpl
cmpsl
xchg
pop
cmp
inc
fidivrl
jmp
test
xchg
add
cs
aad
into
add
xor
int
xor
inc
dec
lret
scas
cmpl
jb
sti
adc
cmp
inc
mov
pop
loopne
rcll
jbe
mov
xor
scas
adc
push
mov
out
iret
inc
inc
enter
or
mov
xor
mov
or
or
pop
mov
mov
arpl
imul
or
ds
fsubl
xor
jp
mov
xor
mov
jns
stos
lcall
pop
pushf
xlat
mov
jb
cmpsl
xchg
mov
negl
cli
push
jne
inc
into
out
push
add
push
and
jge
mov
lret
insl
cli
test
out
ret
sarl
push
push
xchg
addb
stos
xchg
mov
cmp
xor
out
mov
mov
jmp
cmp
xchg
inc
dec
sahf
mov
cmc
out
leave
fwait
loop
cli
test
jno
pop
push
jp
mov
mov
xor
cmp
out
push
mov
shl
nop
jbe
fsts
dec
lea
mov
orb
in
pop
cmp
nop
jae
push
mov
pushf
mov
mov
daa
mov
inc
es
inc
jb
sbb
insl
out
dec
mov
arpl
sbb
jecxz
cmpb
ds
push
mov
push
sti
jne
clc
frstor
cmp
push
ja
mov
in
dec
xchg
scas
and
ret
pop
pop
mov
aam
loopne
xor
test
push
sbb
dec
mov
rcrb
adc
cmp
inc
cmp
in
mov
pop
scas
xchg
lret
insb
add
adc
adc
mov
aam
loope
fnstenv
xor
int3
add
iret
mov
pop
or
add
stc
adc
fprem
adc
mov
xchg
xchg
cwtl
sub
mov
lods
loopne
fnstenv
je
out
sbb
lds
adc
xchg
jne
xor
addb
sub
jnp
mov
icebp
mov
adc
pop
popa
into
aas
adc
popf
fwait
orl
sahf
lods
fwait
lods
sub
xor
js
mov
ljmp
fildl
pop
pop
pusha
mov
lea
js
loop
push
mov
sahf
mov
xor
sub
xchg
pop
push
or
mov
not
lds
cmp
or
sub
aam
mull
mov
ret
inc
clc
mov
pop
rcll
cmc
imul
mov
pop
mov
xchg
mov
sub
xchg
dec
add
lret
pop
lods
aas
ss
sahf
test
sbb
test
sbb
and
addr16
lcall
cmp
inc
in
stc
dec
fildl
iret
cli
or
sbb
mov
pop
inc
push
icebp
and
lock
lret
cs
pop
cmp
in
ficomps
jns
sub
fstpl
test
or
test
loopne
sub
int3
push
out
cmp
pop
pop
pop
xor
push
into
or
fdivrl
fcomi
mov
push
sub
add
insb
add
aad
xchg
jecxz
cmpsl
lahf
test
jge
cmp
or
adc
mov
inc
mov
and
or
repnz
sub
fisubrs
push
imul
cltd
and
sar
push
sysexit
popf
pop
jnp
lock
push
sub
inc
inc
inc
push
icebp
ljmp
jo
fstpl
mov
ret
stc
lock
call
aam
jbe
cmp
out
sub
pop
int3
dec
jecxz
cli
lret
sub
mov
adc
jnp
sub
int
paddusb
jae
jle
mov
xchg
mov
aas
jl
test
jae
clc
or
inc
xacquire
pop
mov
sahf
jns
filds
inc
mov
in
pop
fs
cmp
dec
in
in
or
adc
mov
test
leave
or
fs
mov
push
jecxz
lds
stos
out
mov
sbb
in
repnz
push
mov
imul
mov
cmp
nop
or
add
jb
xor
inc
int
or
sbb
dec
enter
jns
incl
push
sbb
mov
sub
leave
push
sbb
jo
popl
cmc
sub
neg
inc
in
lret
or
arpl
and
push
clc
dec
nop
cmc
mov
aaa
fnop
xchg
mov
jmp
xor
pop
outsb
shl
adc
inc
imul
jg
cmp
mov
rcll
or
pop
cwtl
subl
test
dec
fs
lods
addr16
mov
pop
mov
ffreep
das
jle
incb
cmpsl
lret
shr
xor
int3
or
and
sub
mov
outsb
mov
dec
xchg
adc
add
cmp
cmp
or
fsubl
pushf
cwtl
mov
in
out
cmp
jl
sub
push
pop
insl
addr16
gs
xchg
mul
mov
adc
fsubrs
add
mov
xor
adc
sbb
int
mov
pop
xor
out
lahf
into
jge
mov
adc
iret
inc
test
out
mov
xchg
lds
out
lods
push
dec
pop
xlat
mov
adc
sub
xchg
dec
sub
sbb
jmp
xchg
add
fisttpl
xchg
adc
jl
lcall
push
mov
lods
cmp
add
sub
daa
sbb
jo
loopne
mov
jae
jne
mov
jne
jecxz
into
dec
stos
std
mov
dec
clc
pop
pop
popa
and
mov
jnp
jnp
xchg
sbb
ds
addr16
in
jns
mov
or
and
mov
inc
xor
mov
jge
cmp
dec
stos
mov
lret
push
movsl
mov
mov
inc
mov
loop
inc
popa
lods
or
repnz
into
outsl
jg
aad
aam
adc
dec
mov
hlt
xchg
js
cmpsl
jae
iret
add
or
loopne
fs
xor
ljmp
pop
push
lret
pop
int
jne
rorl
mul
aaa
or
arpl
call
jecxz
xchg
jl
sub
int
xchg
mov
jl
divps
fdivs
jl
jnp
cltd
xchg
cltd
dec
pusha
mov
lods
sub
inc
mov
or
mov
inc
gs
mov
andb
mov
dec
into
mov
push
mov
dec
movsl
cmpl
pop
into
pop
mov
xchg
rcrb
inc
hlt
mov
les
mov
jno
je
stc
mov
orl
cmp
ficompl
pop
es
push
jg
pop
jo
fucomip
test
dec
jg
dec
pop
xchg
ds
pusha
jb
and
aad
add
cmp
addb
mov
mov
mov
ficomps
push
lahf
arpl
subl
movsl
dec
xchg
shlb
sub
pop
orl
leave
imul
adc
out
dec
jle
or
mov
adc
pop
aam
imul
stos
jno
jns
jo
cltd
pop
mov
nop
sub
dec
ljmp
sub
test
gs
sbb
mov
aaa
sub
out
fisttpl
into
sahf
jno
ds
jg
sbb
xchg
fimuls
loope
inc
inc
test
mov
pop
fcmove
repz
pop
lea
sbb
cmp
nop
dec
inc
fwait
pop
ja
mov
les
call
cmp
mov
ret
sub
or
inc
lods
push
pop
enter
or
push
es
jns
negb
fiadds
shlb
sbb
pop
outsl
pop
aas
sbbl
ret
js
adc
pop
sbb
btc
pop
inc
add
dec
addl
mov
or
dec
movsl
adc
loop
dec
out
les
shl
and
inc
in
lea
dec
stc
iret
jle
push
sbb
outsb
and
stos
outsl
push
jmp
mov
scas
jmp
inc
out
stos
aas
mov
pop
fldenv
and
jne
adc
jp
xlat
lods
push
or
cmpsl
mov
lcall
xor
jl
in
cmp
mov
mov
mov
pop
jbe
mov
add
dec
cmp
xor
test
out
outsb
mov
cmp
or
int
xchg
adc
jge
adc
out
mov
out
loope
xchg
push
cs
cmp
push
xchg
add
jnp
add
stc
out
mov
adc
xor
sub
pop
in
lahf
inc
sbb
scas
paddsw
out
das
jmp
sbb
cmp
and
pop
and
cmp
scas
pop
loop
stos
push
adc
loopne
dec
aad
fs
sub
dec
inc
cmpsb
xchg
loope
out
mov
jle
mov
out
sub
sbb
jge
jns
or
adc
clc
lea
dec
cmp
dec
lods
jecxz
cwtl
inc
gs
pop
dec
rorl
xor
mov
cmpsb
fcoml
cmp
add
sub
cmpb
adc
ja
jne
hlt
addr16
aam
fs
xchg
add
adc
mov
int
ja
and
pushf
in
out
scas
mov
aad
lds
pop
aas
cmp
pop
test
bound
pop
or
xlat
xor
add
int
jg
lds
mov
lds
call
or
sbb
fldenv
mov
sbb
cmpsl
jp
sub
inc
push
div
mov
cmpsb
scas
popf
and
lods
sbb
cmp
jo
lods
scas
aam
sbb
jne
push
xchg
lahf
hlt
push
jae
push
and
sub
sbb
pop
pop
bnd
pusha
inc
icebp
cmp
shl
jp
pusha
mov
pop
ss
gs
add
xor
mov
out
jnp
fstpl
cmp
pop
add
ja
mov
mov
jb
mov
stos
cld
mov
shrb
leave
mov
out
cmp
ret
inc
cmp
aaa
mov
sbb
add
xor
movsb
jb
rcll
jmp
stos
mov
aas
lahf
sbb
lahf
in
das
fcom
int
xlat
decb
fdivl
lcall
int
adc
test
sbb
pop
out
outsb
cmp
jp
mov
out
std
cmp
hlt
jecxz
aad
jo
dec
and
push
add
add
jns
jl
inc
push
and
dec
out
pop
pop
jo
mov
xchg
or
sbb
dec
cmp
pop
jg
pusha
nopl
sbb
and
and
push
mov
imul
push
jp
cmp
mov
in
fildll
into
pop
or
push
add
in
inc
mov
or
fcmovnbe
fstl
mov
xlat
rorb
std
xchg
aad
inc
iret
mov
mov
xchg
push
ljmp
and
xor
ficoml
inc
push
dec
dec
inc
out
cmp
cmp
call
out
clc
pop
fdivrl
aam
mov
inc
icebp
sar
sti
and
mov
ret
loop
xor
add
int
ret
sbb
mov
xor
mov
mov
push
int3
scas
fadds
sub
jo
push
dec
scas
add
cmp
xchg
mov
std
add
sub
mov
pusha
sub
dec
dec
cmp
mov
dec
dec
add
push
xor
jg
lea
push
jle
test
push
pop
xchg
xlat
ja
xor
push
mov
mov
cli
jae
test
imul
cmp
sbb
xchg
inc
inc
flds
fdivrl
sub
cmc
and
lds
sbb
xor
xchg
dec
jns
fists
cs
cs
mov
decl
cmp
mov
mov
xchg
mov
or
pop
or
jbe
inc
jnp
pop
repz
xchg
cmpsl
inc
push
jnp
or
xchg
hlt
sbb
das
loope
cmp
mov
into
mov
xlat
jmp
and
cmc
xor
sub
ds
mov
and
not
mov
or
xlat
popf
xrstor
and
and
popf
inc
mov
fdivrl
sub
xchg
cmp
jle
sub
lds
xor
mov
repnz
cmp
popf
outsl
or
inc
ss
lods
sub
sub
shrl
adc
roll
pop
cmpsl
xchg
fldcw
dec
mov
inc
test
lret
add
jl
addr16
shll
mov
sbb
mov
subl
ret
cltd
jmp
leave
adc
ret
adc
or
gs
or
pop
cwtl
out
imul
mov
mov
dec
xor
dec
aaa
ja
enter
mov
xchg
inc
mov
dec
idivb
mov
enter
add
sub
cmp
mov
int
in
jg
jb
jbe
and
clc
outsl
add
sbb
cld
insl
add
mov
push
ror
into
inc
mov
xor
or
mov
rcr
jo
cwtl
sbb
jge
loopne
cmp
inc
sahf
pop
dec
jne
pop
popa
cmc
adc
test
push
pop
mov
sti
cli
mov
aas
mov
pop
cmc
lods
cmp
lea
pop
scas
mov
loope
dec
loop
mov
adc
xlat
push
and
add
dec
and
xorb
jne
mov
mov
fwait
jno
movsb
dec
cmp
push
or
cwtl
mov
ljmp
cmp
pop
ss
stos
ja
sbb
shrb
fs
shrl
ret
sub
out
sub
fsubl
xchg
mov
loope
dec
pop
push
lods
dec
enter
inc
mov
loopne
test
pop
mov
ja
xor
push
outsb
or
cmp
imul
sbb
into
stos
lret
lea
popa
insl
enter
and
cmp
add
das
in
mov
and
jae
std
sahf
scas
movsl
jge
int
cmp
sti
sub
and
aad
xor
push
pop
and
jl
mov
cld
mov
dec
adc
aam
sbb
jp
jbe
or
and
enter
cmp
mov
fdiv
pop
bound
push
test
inc
add
fdivs
xor
xchg
js
scas
push
pop
shll
mov
fsubs
cmp
insl
movsb
sti
insb
sahf
or
sub
dec
std
mov
arpl
and
sub
iret
inc
into
aad
clc
adc
cmp
xchg
movsb
sub
hlt
cmp
xor
xchg
fs
xchg
es
cs
fldl
xchg
dec
test
fs
push
out
nop
push
cwtl
mov
xor
pusha
pop
xchg
jecxz
pop
sbb
xchg
lea
push
dec
inc
addr16
jno
leave
lcall
nop
mov
insl
or
cltd
fwait
cli
xor
add
and
push
or
jecxz
inc
loopne
addr16
stc
into
daa
jp
add
les
in
loopne
cs
das
ficompl
inc
arpl
lahf
cmp
ss
mov
out
les
mov
fiaddl
dec
or
cli
xchg
push
xchg
or
ret
add
test
mov
aam
ss
push
or
mov
jns
mov
or
bts
xor
mov
out
add
call
cmp
dec
imul
mov
xor
adc
xchg
mov
xchg
dec
cs
nop
jl
xor
inc
loop
loopne
and
jno
inc
ja
rcll
xchg
stc
out
les
fwait
jmp
xchg
test
rcll
jnp
mov
pop
push
pop
push
dec
jecxz
mov
xchg
shrb
dec
mov
sbb
xor
xchg
rcll
ret
pop
in
mov
fstpt
cld
jl
inc
fldcw
repnz
mov
xchg
fcoml
lret
jg
pop
call
cmpl
subl
add
ja
mov
sub
call
aad
repz
insl
ds
movsb
jae
std
imul
outsb
and
leave
cmp
cld
addr16
lea
ljmp
pop
or
cs
push
sbb
jne
fsubrl
push
sub
and
xor
mov
in
xchg
ljmp
dec
pop
pushf
test
xchg
outsl
add
cmpsb
push
cmp
lahf
stos
jns
int3
repnz
bound
push
lcall
cmp
mov
fidivrs
mov
addr16
rcll
icebp
outsl
shrl
xor
sub
test
adcb
xor
sbb
adc
call
and
cmp
push
frstor
xchg
out
cmp
fucomip
sbb
push
clc
push
dec
jb
mov
lds
xor
aaa
sarl
scas
outsl
pushf
inc
push
sub
mov
inc
xor
adc
jb
data16
inc
adc
cmp
xor
xor
idivb
dec
ret
inc
xchg
cmp
sti
lea
lcall
lds
add
in
cmp
inc
scas
xor
mov
es
test
inc
test
lret
frstor
mov
dec
mov
gs
pop
jle
test
cmc
pop
ficoms
sbb
push
mov
mov
mov
xor
adc
inc
leave
xchg
cmc
mov
jns
xchg
xchg
xchg
xchg
imul
push
in
cwtl
es
out
cmp
or
out
and
push
push
dec
xchg
loopne
popf
and
mov
daa
xchg
dec
in
mov
rorl
scas
mov
aaa
cmp
xchg
imul
sbb
stos
rcrl
pop
sub
adc
rclb
mov
dec
int
jb
lods
sbb
pop
jne
xor
dec
sbb
inc
fidivrl
cmp
push
push
jmp
cmp
add
outsl
and
popf
jecxz
sahf
push
mov
inc
lods
mov
xor
xchg
ret
cmpb
aas
cld
cli
and
pop
dec
sbb
jo
rorl
xor
jecxz
mov
rolb
clc
mov
mov
int3
sbb
jecxz
xor
push
inc
adc
pop
imulb
cmp
je
loope
je
mov
std
fcmovnu
adc
arpl
dec
das
pop
sub
int
cmpsb
mov
lret
jb
push
ss
xchg
push
xor
or
add
imul
fsubrp
xchg
cmp
mov
lock
fidivrl
sbb
enter
outsl
decl
sub
mov
and
add
lea
mov
add
loop
movsl
std
push
aam
or
mov
mov
int3
lods
aad
imul
mov
in
insb
movsb
fcompl
rorb
adc
es
mov
xchg
lea
and
jne
jecxz
test
jecxz
mov
xor
mov
mov
pop
or
pusha
and
repnz
mov
adc
fldl
mov
imul
lahf
ja
push
arpl
sahf
hlt
sti
in
inc
test
mov
popa
insl
sahf
jecxz
div
push
push
xchg
cmp
adc
adc
or
or
icebp
xor
mov
and
pop
imul
and
ss
mov
lods
ss
fnstsw
popf
lcall
ja
out
mov
xchg
mov
cmp
cmpsl
add
inc
add
adc
mov
lock
loope
add
hlt
push
sbb
sbb
xor
inc
shrb
push
sub
inc
push
mov
sbb
pop
sub
rcr
aad
xorb
jne
dec
iret
add
lock
pop
loope
and
jb
sbb
lret
shlb
mov
lcall
xlat
sub
mov
mov
sti
jnp
or
popf
add
lock
fiaddl
jo
push
dec
adc
cmp
sbb
repnz
jmp
push
jl
repnz
inc
test
push
cmp
pop
push
jge
push
leave
outsl
jae
les
jl
ss
sub
in
jbe
shlb
mov
pop
fsubrs
cmpsl
leave
incl
mov
xchg
pop
push
out
repz
adc
or
mov
gs
shlb
and
out
cmc
mov
mov
sahf
insb
mov
and
mov
sbb
xlat
stc
pushf
es
fwait
push
test
xor
push
mov
pop
scas
mov
xor
mov
xor
adc
cs
outsb
lcall
push
mov
fisttpll
das
iret
pop
jmp
test
int3
fdivs
je
into
xchg
cmp
leave
int3
sarb
mov
mov
out
cmp
fs
lret
mov
pop
xchg
mov
int3
mov
das
lret
mov
xlat
sbb
mov
out
xchg
loop
add
mov
call
enter
add
scas
sub
inc
jecxz
sub
cli
cli
js
fdivrs
mov
sbb
xchg
aad
or
or
lcall
out
in
push
pop
imul
sbb
add
pusha
fsubs
lods
pop
test
cmp
addr16
movsl
dec
fistpll
int3
dec
fnstcw
loop
dec
out
add
insb
ret
mulps
scas
sbb
dec
jbe
lahf
cmp
jne
dec
jnp
push
mov
clc
lods
movsb
outsl
push
clc
xchg
xor
repz
jmp
sti
pushf
pop
xor
mov
or
xor
jmp
lods
mov
ret
dec
aaa
dec
xor
shll
ja
sbb
inc
cmpsb
popa
jp
cmc
add
lahf
dec
xorl
outsl
and
cmpsb
ret
subb
loopne
or
mov
enter
lods
xchg
subb
push
and
pop
outsl
mov
xor
cltd
dec
sbb
jae
lret
dec
icebp
lret
mov
lock
repnz
xor
pop
mov
cmp
stos
jmp
add
lret
jns
jge
out
out
pushf
test
inc
je
imul
rclb
movsl
pushf
push
or
jae
fisubrs
xchg
les
outsl
and
adc
int3
xchg
mov
pop
cltd
mov
mov
outsl
and
adc
cmp
icebp
arpl
jle
mov
xchg
mov
xchg
jbe
add
outsl
dec
mov
int
mov
pop
push
std
dec
dec
push
cmc
jle
mov
ret
sti
inc
add
std
jmp
in
movsb
and
es
je
fdivs
sarb
jle
ret
mov
add
adc
scas
sbb
dec
je
out
xchg
mov
xchg
mov
or
push
add
cld
sub
jae
jbe
adc
out
testl
mov
inc
xchg
test
xchg
sub
std
sti
jle,pn
adc
mov
adc
push
hlt
fsubr
mov
or
ret
cs
fdivrl
repz
jg
sub
xchg
sbb
loopne
push
xor
icebp
sub
shlb
and
sub
mov
out
out
pop
lea
fildl
cli
push
push
addr16
loop
xchg
and
sub
pop
xchg
inc
pushf
out
pop
and
lahf
mov
inc
jle
adc
jle
pop
pop
add
cmp
push
mov
cmp
outsb
fs
mov
fs
das
mov
xchg
rcrb
rol
insb
mov
out
imul
adc
inc
rcl
cmc
dec
mov
cmp
cmp
out
or
inc
leave
arpl
fdivl
pushf
mov
xor
adc
outsl
hlt
mov
fsubrs
pop
insl
out
rcrb
push
stc
scas
fsubrl
mov
cwtl
xor
sarb
xor
xchg
popf
ds
imul
jns
jo
push
ss
sub
loope,pt
cli
inc
mov
pop
clc
test
jne
imul
out
fldcw
cmpsb
lret
popa
cmp
cmpb
les
mov
add
or
ds
mov
cld
dec
jl
push
and
mov
fwait
or
push
or
xchg
add
sar
dec
sub
imul
cmpsl
shrb
inc
jbe
add
mov
jb
std
add
incb
or
lret
push
lahf
jb
pop
xlat
cltd
icebp
dec
sbb
subl
cmp
mov
or
mov
sbb
cmp
mov
rclb
ficompl
mov
jb
sub
loop
movsb
call
dec
pop
dec
pushf
xor
adc
and
adcl
pushf
and
jle
xlat
sbb
loope
idivb
or
mov
lahf
cwtl
dec
outsl
repnz
hlt
fstpt
ss
adc
xor
mov
or
adc
arpl
pop
dec
mov
adc
je
fs
aas
imul
ljmp
aam
fisubs
sbb
call
add
inc
clc
push
sub
fcoms
mov
arpl
cmp
insb
cmpsl
or
idiv
mov
repnz
push
sbb
sub
js
mov
fstps
repz
inc
rcll
test
loope
out
test
cli
jl
fucomi
and
jno
iret
inc
iret
pusha
clc
sub
sub
pop
stc
jmp
cmp
js
adc
xor
je
add
enter
call
xchg
daa
mov
mov
pop
ljmp
or
into
push
dec
popf
mov
pop
dec
nop
fnstenv
push
xor
mov
icebp
data16
dec
jbe
std
adc
adc
mov
add
pop
push
xor
cmp
leave
jecxz
clc
jb
push
sub
popf
cli
xchg
jae
insb
sbb
mulb
pop
lahf
pop
add
cltd
push
cmp
out
and
xchg
xchg
mov
inc
and
xor
adc
mov
out
scas
sbb
addr16
mov
clc
repz
repnz
and
jne
lock
jb
inc
cmp
mov
xchg
add
xchg
daa
add
data16
scas
test
pop
inc
stc
push
mov
mov
adc
int
popf
xor
pop
fiaddl
xor
in
cmp
mov
inc
lods
icebp
and
push
outsb
rclb
lret
inc
pop
nop
cmp
pop
or
mov
xor
lret
lods
incl
add
mov
and
xor
jae
loopne
and
hlt
or
push
call
aad
dec
dec
mov
cwtl
test
cmpsb
ljmp
inc
jae
lods
push
jno,pt
push
jns
mov
push
jnp
aas
fs
jb
pop
adc
add
stc
aaa
scas
or
or
cmp
subb
test
adc
xchg
push
xchg
jp
or
push
fadds
cmp
cmpsb
rcrb
jb
jle
mulb
jns
pop
mov
icebp
jnp
pop
pop
mov
test
inc
sub
popf
xchg
rorb
inc
in
inc
dec
add
loop
and
cmpl
inc
aad
ror
dec
out
idivl
push
outsb
pop
jne
setle
sub
adc
int3
dec
test
out
iret
add
popf
adc
mov
add
push
mov
andl
add
int3
add
jnp
xchg
ret
adc
add
aad
mov
cmpsw
xchg
fdivs
mov
push
mov
mov
inc
cwtl
sbb
cwtl
call
sub
sbb
add
sub
sub
stos
js
sahf
sti
cmp
ja
mov
pop
mov
fidivs
xchg
adc
mov
push
popf
dec
fld
ds
adc
jge
loopne
out
and
jae
jmp
jmp
cld
sbb
inc
xchg
cwtl
xchg
or
rorl
and
loope
jecxz
lret
inc
push
and
jno
cmpsw
mov
addr16
xor
aad
mov
cmpb
and
jae
xchg
inc
dec
mov
sbb
xchg
cmp
test
xchg
je
in
mov
push
or
fimuls
or
xchg
jge
imul
push
pop
fcmovbe
sbb
gs
dec
test
and
push
xorb
dec
dec
push
test
push
inc
loope
popw
subl
fsubl
mov
hlt
xchg
cltd
shlb
clc
popa
popa
lea
pushf
add
inc
cmp
or
add
es
fwait
sbb
xor
jge
lahf
cmpsl
lds
inc
jae
and
test
xor
pop
xor
sub
lcall
sub
or
jmp
es
stos
xchg
test
test
imul
mov
outsl
leave
or
cmpsb
loop
repnz
daa
lret
xorl
add
sub
mov
lea
pop
gs
lcall
sarb
faddl
sub
pushf
repz
xor
cmpsl
jle
aas
arpl
cmpsl
outsb
pop
scas
notl
lock
mov
jne
mov
rolb
jne
sub
dec
aam
stos
jmp
subl
test
rorl
cld
mov
imull
xchg
out
nop
scas
adc
test
cmpsl
movsb
lret
popf
jno
mov
andl
cmp
out
push
dec
jmp
jge
and
sub
add
data16
out
mov
les
sti
push
cs
pop
push
or
ja
push
pop
pop
jbe
jg
shlb
loop
dec
mov
xchg
shl
jbe
xor
cltd
pop
xor
jns
inc
cld
add
mov
arpl
cltd
add
inc
and
inc
cmp
cmp
push
cmpsl
inc
shl
jne
push
mov
int3
jnp
ljmp
fdivrl
dec
push
cmp
fsts
jb
sbb
jmp
sub
push
mov
mov
jb
pop
sarb
sub
aam
jmp
mov
sub
jl
loop,pt
fldcw
iret
jb
lcall
lret
and
inc
loop
pusha
cld
sarl
add
pop
into
aad
sub
push
sub
pop
aam
sub
bnd
or
scas
fisttpll
dec
cli
mov
imul
cmp
mov
test
xchg
jge
sti
and
sub
scas
out
sub
stos
mov
push
pop
jecxz
push
pop
mov
jmp
leave
fsubs
jmp
push
sub
push
dec
jl
scas
out
push
jge
leave
inc
adc
mov
and
dec
das
inc
mov
sub
pop
fbstp
es
pushf
sbb
fsubs
cmc
ret
add
fs
inc
loopne
cmp
cmp
in
add
mov
out
jg
jns
test
sbb
cmp
and
mov
cmp
xlat
mov
inc
mov
shll
aas
insl
out
cmp
mov
iret
xlat
jmp
cmp
inc
push
lods
push
sti
mov
ret
push
jo
test
test
pop
dec
cli
mov
ljmp
in
push
stc
mov
xchg
daa
scas
icebp
mov
push
pop
xorl
and
cmp
pop
pop
das
adc
sub
movsb
mov
pushf
dec
adc
push
xor
pop
adc
xor
aaa
mov
incl
and
jnp
xchg
fildll
push
pushf
lods
bound
stc
xor
addr16
subb
inc
int3
sbb
jp
scas
xor
lahf
imul
repnz
scas
pop
xor
xor
cli
cli
js
in
mov
movb
pop
mov
sbb
mov
repz
lret
mov
in
enter
cmpl
ret
and
mov
xchg
xor
test
out
test
adc
ljmp
push
mov
test
xchg
les
push
addr16
jmp
xchg
mov
das
mull
or
and
ret
push
outsl
dec
out
enter
pop
mov
jmp
inc
int
mov
dec
push
mov
hlt
mov
cmpsl
sub
push
mov
stc
or
mov
cmpsb
cld
push
or
jb
notl
pop
mov
mov
jb
or
aad
in
jle
xor
mov
lock
push
into
sbb
stc
inc
push
rorl
mov
adc
adc
mov
mov
mov
mov
mov
jecxz
out
shl
out
or
andb
mov
lahf
mul
mov
xor
mov
pusha
aad
cwtl
adc
int
push
and
jno
jmp
mov
aad
sbb
js
cld
mov
bswap
adc
mov
jmp
cmpl
bound
mov
sahf
addr16
clc
jmp
ret
je
popa
lea
xchg
insl
inc
enter
negl
push
cmp
or
push
insl
mov
ret
jns
lds
les
mov
adc
xchg
xor
and
in
cmp
clc
pop
cmp
adc
xor
add
stos
lds
das
icebp
idiv
or
sti
daa
push
inc
dec
rclb
fidivl
lret
cmp
push
out
repnz
mov
push
aad
sub
incl
dec
andl
loope
iret
push
inc
fisubrl
lods
jno
outsb
lahf
xor
pop
pushf
or
jle
jae
sub
inc
or
mov
sahf
add
roll
sbb
xor
adc
enter
imul
clc
sub
clc
xor
jl
sub
es
push
mulb
xlat
cmpsl
js
mov
dec
cmp
or
lock
mov
inc
mov
out
mov
ss
rolb
jp
pop
lea
jp
movsl
adc
cmp
mov
or
mov
fcoms
push
add
pop
cmp
adc
and
pop
cmpl
scas
mov
push
nop
and
mov
ficoms
jno
mov
scas
mov
sbb
push
inc
sahf
and
jne
push
mov
ret
clc
jle
adc
dec
addr16
insb
mov
add
addr16
or
rolb
sbb
jge
loopne
pop
test
mov
int3
jns
mov
mov
andl
orl
or
xchg
out
xor
aaa
cmp
add
inc
mov
and
push
fildll
out
mov
cmp
jg
addr16
in
dec
scas
inc
dec
rcl
mov
and
sub
sub
mov
push
hlt
jge
xchg
and
out
les
sti
xor
ds
cmp
jle
sub
jns
out
mov
mov
clc
pop
dec
add
xchg
in
ds
push
daa
data16
adc
cld
mov
sub
rcrl
repnz
cmp
mov
arpl
push
ficomps
cmp
dec
movsb
int3
mov
lcall
insl
or
mov
mov
lods
fiaddl
xchg
adc
loop
flds
jb
sub
push
adc
inc
adcb
out
int3
xor
inc
push
orl
lea
jnp
mov
dec
push
pop
xor
adc
nop
mov
cmpsl
movb
jmp
mov
bound
sbb
xchg
test
daa
pushf
cli
jmp
test
repnz
jnp
jae
jg
lea
inc
ret
popf
cmp
jp
lcall
call
push
and
insl
loop
dec
push
lahf
push
addr16
adc
into
inc
sahf
mulb
xor
aaa
dec
fsubrl
in
or
pop
rep
inc
addl
add
repnz
inc
push
filds
jae
push
adc
leave
or
xchg
out
rolb
add
and
xchg
fldt
xor
xor
cmpsb
push
sbb
dec
add
lods
jb
leave
in
sbb
or
pop
sbb
std
shll
xchg
lret
jmp
stos
pop
fisttpl
dec
int
push
and
out
outsb
mov
cmc
push
inc
xor
jecxz
fs
mov
jne
pop
xchg
out
test
xor
loopne
mov
and
xchg
test
lods
cltd
stos
in
lds
sbb
std
movsl
mov
loop
and
mov
aam
test
pop
adc
icebp
lods
xacquire
push
rolb
adc
xchg
addb
fstps
sub
lcall
fldt
in
mov
xor
fwait
adc
and
mov
iret
loopne
or
add
test
push
push
ffreep
or
mov
jmp
inc
imul
mov
je
stos
push
cmp
cmc
add
popf
shll
mov
out
mov
adc
repnz
das
inc
pop
xor
roll
lods
popa
out
pop
lods
or
jnp
and
adc
mov
xchg
pusha
add
cli
aas
or
sbb
sub
fcmovbe
pop
orl
out
pop
dec
movsl
xor
push
mov
mov
int3
jo
es
push
sbb
pop
stos
stc
aaa
pop
xchg
nop
popa
jecxz
add
into
shrb
dec
shrb
mov
sub
lods
mov
jle
repz
push
fcmovnbe
xor
mov
push
xor
ficompl
les
jo
or
fmuls
cmp
clc
push
in
out
outsb
mov
push
inc
adc
xor
popf
mov
lods
mov
idivb
jne
shlb
dec
or
dec
fdivr
ret
mov
dec
nop
mov
daa
cwtl
cli
fiaddl
mov
add
cmc
jnp
mov
mov
adc
in
ficomps
dec
scas
mov
loop
sub
xlat
inc
shlb
ret
pop
lcall
je
inc
int3
outsl
inc
dec
and
xlat
data16
cs
testb
pop
fistps
arpl
js
mov
in
loop
mov
out
outsb
popa
dec
dec
mov
sbb
loop
jmp
cmp
jns
or
inc
cli
fimull
cld
imul
pop
je
push
sub
push
cli
ljmp
enter
call
ja
addr16
mull
jne
lret
pop
movsl
mov
xor
and
sub
dec
and
inc
xchg
dec
mov
ljmp
je
sub
or
in
out
das
jae
test
mov
je
out
aaa
pop
push
cld
mov
or
jns
subb
pop
scas
lock
pop
outsb
data16
push
and
inc
inc
in
mov
mov
lret
imul
pusha
dec
in
jle
push
loopne
in
stos
sbb
inc
out
jbe
loopne
xor
push
or
pop
fwait
cli
push
mov
mov
cmc
inc
neg
rcll
sbb
cli
popf
xchg
data16
cwtl
jbe
jle
pop
dec
sahf
fwait
test
lds
lcall
lods
dec
inc
imul
dec
stos
inc
push
xlat
test
sbb
rcrl
xor
popa
adc
ret
dec
fs
imull
sahf
in
fs
or
xchg
pop
enter
dec
movsb
call
add
test
add
sub
add
or
sub
sub
pop
stc
sbb
push
jecxz
xor
arpl
int3
mov
ja
lret
cmpsl
cli
inc
lods
sub
sbb
popa
iret
and
hlt
inc
sub
sarb
push
test
lret
dec
mov
ret
mov
fsubrl
mov
rcrb
push
inc
jmp
mov
sahf
pop
jbe
loop
sbb
jecxz
sbb
xor
sbbl
fld
inc
test
push
out
pop
repnz
dec
jg
mov
lods
pop
pop
and
xor
mov
sub
xchg
sub
cmp
mov
rdmsr
and
test
popa
sbb
jns
sub
sub
test
push
bswap
inc
loopne
xor
sbb
loop
mov
sub
inc
lret
add
aad
jge
loop
je
push
shll
mov
sub
xchg
mov
insl
mov
aaa
jno
sub
ja
inc
enter
int
cs
add
shl
ljmp
or
and
outsb
aam
lea
insl
xor
mov
push
mov
adc
inc
push
adc
test
hlt
mov
jle
jbe
repnz
shll
push
cld
add
push
sbb
addb
add
xchg
dec
jo
fnsave
jbe
sbb
jmp
and
in
ja
xor
jnp
adc
mov
test
fisubl
rcll
pushl
mov
pop
scas
cld
mov
inc
xchg
shll
into
xchg
jnp
fimuls
pop
fwait
test
jns
mov
mov
dec
inc
adc
mov
cmp
pop
inc
rolb
xchg
inc
int3
inc
mov
sti
sbb
cwtl
jae
xor
inc
pop
out
inc
mov
add
fdivr
rcrl
jns
sbb
cmp
and
andb
pop
fiaddl
test
cli
sub
fsubl
fs
inc
pminub
rcl
loope
push
les
xor
mulb
aad
xor
cli
push
sbb
in
xchg
test
pop
aam
cmp
leave
lahf
iret
add
inc
cs
lcall
sub
xor
mov
es
mov
call
mov
loopne
add
pop
add
xchg
pop
repnz
loope
adc
push
bound
or
xor
cmpl
jp
xlat
sub
pop
push
int
sbb
sbb
push
dec
je
jmp
lcall
inc
stos
and
aas
cs
ficoms
lret
repz
ds
pop
clc
xor
fcos
test
insb
faddp
mov
add
hlt
mov
inc
in
and
mov
adc
cltd
inc
fiadds
lahf
aaa
in
push
cltd
xor
test
addb
out
arpl
call
mov
mov
orb
pusha
push
and
pop
mov
shl
jnp
mov
push
jae
cmpsb
addr16
xchg
je
test
xchg
mov
push
inc
pop
cltd
cltd
jg
cmp
test
repnz
ds
mov
fldpi
and
mov
or
jecxz
jnp
shlb
arpl
orb
mov
cs
mov
xor
xchg
or
mov
pop
fiadds
popf
and
pop
lods
fcomip
push
icebp
out
out
mov
stos
sbb
lods
addl
pop
scas
mov
jmp
adc
imul
int
mov
jl
andl
in
fidivl
cmp
pusha
fidivl
addr16
popf
cmp
test
rcl
ljmp
lock
inc
jge
lods
lea
imul
in
sbb
mov
adc
in
xor
or
adc
dec
mov
test
sti
add
repnz
pop
and
fists
xchg
cld
add
jg
jle
fwait
mov
ljmp
in
fnstcw
xchg
in
jo
iret
lds
sbb
push
or
icebp
pop
push
dec
ljmp
cmp
xchg
pop
and
or
mov
jae
dec
imul
mov
mov
rorb
dec
xchg
push
xchg
xchg
jb
sbb
enter
dec
add
lea
ss
gs
adc
cmp
sub
dec
mov
xlat
mov
dec
adc
inc
adc
ss
test
cmc
sti
jae
lret
pusha
ret
test
mov
movsl
stos
cmp
dec
pop
mov
xor
xchg
sarb
ret
aas
mov
or
jno
adc
adc
cmp
cmp
xchg
decl
xchg
fadds
push
and
lods
mov
roll
adc
lock
shll
mov
bound
inc
jecxz
cmp
ficoml
cld
jns
bound
push
pushf
jno
mov
push
icebp
cmp
nop
cmp
mov
add
mov
cmp
push
or
adc
xchg
mov
sub
orb
ss
adc
pop
movsl
out
je
pop
bound
push
jb
insb
xor
and
mov
cmp
imul
ja
jb
mov
iret
mov
push
int
ret
jmp
aas
test
pop
lahf
fsubs
xchg
int3
push
xor
cmp
mov
jbe
sbb
insl
fidivrs
sahf
orl
inc
pop
jae
sbbb
imul
mov
xor
sub
jb
pop
imull
scas
xchg
pop
cmp
nop
sahf
stos
jae
int
clc
jns
aas
adc
push
sub
in
pushl
sub
frstor
pop
inc
and
ror
fiadds
fwait
or
outsl
outsb
je
sub
out
xor
repnz
std
pop
push
scas
or
movsb
fnstenv
add
jbe
pop
rorl
mov
jecxz
call
cmp
mov
sarb
mov
out
jl
insl
gs
sbbl
jmp
inc
enter
push
and
in
hlt
mov
add
movsl
add
icebp
xchg
cmp
pop
jns
ficompl
sarl
jecxz
flds
pusha
sub
movl
inc
jbe
clc
add
cmp
and
add
inc
mov
cmp
pop
popa
mov
ja
xor
sub
cmpsl
insb
and
ret
sub
sub
push
lcall
dec
scas
movsb
add
sub
movsb
iret
movsb
call
dec
gs
jg
call
cmp
arpl
int3
popa
fdivr
sar
jae
gs
test
jae
cltd
jg
mov
std
push
cmpb
idivl
adc
jns
inc
cmp
int
jnp
addr16
rclb
push
out
jo
mov
sub
ja
jge
inc
lahf
pop
mov
cs
dec
jmp
push
add
mov
rorb
push
mov
imulb
js
lret
sub
pop
sub
and
sub
mov
mov
hlt
jge
push
ret
fs
mov
pushf
adc
adc
addr16
push
inc
sbb
and
sub
dec
add
movsb
lds
xchg
pop
cwtl
xchg
lret
out
test
xchg
ds
ret
xchg
push
jle
rcll
mov
cltd
in
clc
pop
mov
inc
jbe
mov
cmp
ret
pop
mov
lods
insl
cmp
adc
fnsave
iret
adc
push
xor
inc
in
stos
test
adc
int3
ret
jp
pop
xor
outsb
mov
and
push
js
div
out
popa
dec
xchg
xchg
stc
cltd
outsb
call
pop
jg
gs
mov
outsb
in
push
shlb
mov
push
dec
mov
jo
sahf
loop
mov
xchg
mov
cmpsb
dec
add
loop
cmp
dec
nop
xchg
cmp
jae
cmp
aam
inc
fbstp
test
jg
jecxz
jg
xor
dec
stos
xchg
inc
inc
dec
cs
xchg
adc
jg
dec
pop
pop
idiv
add
loopne
pop
mov
idiv
lret
ja
add
sarb
xor
lcall
sarl
test
cmpsl
inc
jbe
pop
mov
js
mov
mov
stos
push
cmp
mov
notl
pop
sbb
pop
mov
clc
imul
mov
or
repnz
xchg
fmull
adc
lcall
stos
add
jl
call
mulb
push
adc
push
ret
mov
cmp
leave
and
mov
stos
and
push
popa
xchg
jne
in
jl
add
pop
gs
sbb
fldcw
xchg
rorl
aad
scas
jbe
xor
andb
int3
je
les
push
sbb
cmp
pop
fwait
pop
rclb
iret
mov
dec
ds
in
add
push
and
adc
mov
push
pushf
repnz
lds
or
sbb
mov
popa
popa
mov
add
cmp
mov
jge
into
push
lods
cwtl
scas
push
pop
add
xchg
ljmp
dec
jmp
enter
mov
daa
push
repz
outsl
pop
cwtl
or
in
pop
xchg
mov
arpl
movsb
push
add
roll
mov
stos
in
mov
push
xchg
mov
sub
mov
xchg
pop
mov
adc
and
push
add
imul
xchg
out
mov
cmpsb
call
js
xor
in
jnp
stos
jnp
repz
out
lret
fwait
mov
sub
icebp
push
and
fistpl
mov
es
cmp
dec
sbb
testl
dec
or
mov
jb
insl
and
sarl
push
test
inc
mov
ds
loope
push
xchg
call
int
ja
inc
rorl
gs
je
das
lock
test
push
sbb
nop
sar
xor
hlt
add
ficoms
push
mov
sub
jno
sahf
add
xchg
xchg
mov
sub
mov
push
pushf
pop
and
mov
xchg
rol
shrl
or
mull
sub
std
mov
testl
insl
repnz
les
xchg
jnp
ja
fdivl
mov
adc
mov
out
mov
mov
cmp
ss
and
push
adc
cmp
into
adc
in
les
test
mov
enter
stos
aam
pop
xchg
pop
test
and
jmp
pop
mov
mov
loop
cmp
xchg
call
mov
adc
cmp
in
cwtl
hlt
cmp
pop
iret
mov
shll
and
rorl
adc
cmp
repz
xchg
mov
popl
or
outsb
cmp
mov
idivl
pop
das
inc
das
lods
test
mov
lds
rorl
rcpps
cld
jno
cld
pop
lret
inc
jge
mov
dec
cmp
jge
mov
jge
repnz
lret
dec
dec
cmpsl
dec
mov
rclb
mov
or
xchg
sub
lret
lock
jbe
push
push
lret
add
ljmp
js
xorb
fisubrs
jmp
jle
or
cltd
and
and
mov
mov
sub
lock
push
xchg
mov
xchg
or
outsb
add
adc
lret
jp
jo
pop
cli
sub
pop
sti
and
xchg
mov
pop
dec
dec
addr16
mov
popa
cmp
iret
mov
nop
mov
push
sbb
repz
daa
das
jl
js
cmpsl
jge
cmpsb
and
mov
xchg
sub
inc
push
mov
lods
jp
pusha
and
mov
jno
repz
mov
gs
inc
add
sub
and
cli
fsubr
jmp
inc
xchg
inc
lods
and
cltd
lahf
sbb
aaa
rorb
xchg
sbb
push
int3
into
jno
xchg
lock
clc
sbb
jb
dec
jnp
lods
js
xchg
ja
push
outsl
sbb
push
push
dec
nop
cmp
sbb
push
data16
mov
xor
or
leave
imul
mov
sbb
outsl
pop
add
fldenv
rcl
daa
mov
adc
in
pusha
mov
mov
fisttps
sub
ds
repnz
outsl
mov
sub
dec
push
sbb
pushf
rcrb
xchg
sub
jp
inc
inc
or
cmc
mov
mov
xchg
xor
mov
scas
lods
jecxz
orl
shl
mul
sbb
out
jl
push
dec
mov
pop
xor
sbb
out
push
mov
in
iret
push
fisttpl
rcll
or
sub
cmp
lods
mov
or
mov
and
inc
or
adc
xchg
mov
mov
popa
mov
mov
cmp
or
lret
jb
sti
mov
inc
lret
xor
hlt
xor
mov
imul
daa
sar
test
dec
inc
lea
lea
ret
sti
inc
sahf
jge
sub
xchg
repz
add
sbb
movsl
lahf
test
sub
sbb
adc
mov
push
fwait
std
dec
stos
sub
mov
inc
push
sbb
pop
push
or
dec
in
shrb
stos
lea
xor
sbb
sti
loope
xchg
leave
mov
les
jmp
inc
or
sbb
adc
cmp
fcoml
jns
mov
clc
and
mov
and
popf
cmp
jecxz
push
xor
xchg
or
jmp
lock
push
loopne
es
imul
aas
das
sbb
pushf
xchg
mov
and
or
mov
in
rorb
dec
adc
out
sbb
andl
subl
loope
sti
in
jecxz
les
jge
mov
mov
xchg
out
dec
fwait
pop
jle
pop
aaa
sbb
sti
fmulp
test
xor
mov
cmpsl
xor
pop
jno
jl
je
es
lahf
out
andb
data16
outsl
je
mov
das
add
pop
push
cmpsl
loopne
sbb
dec
sahf
inc
andb
xchg
jnp
call
enter
daa
hlt
mov
xchg
jbe
or
inc
lcall
andl
aas
push
rep
dec
fisubrl
push
mov
cmc
pop
ja
or
inc
xchg
sub
into
mov
leave
dec
jae
hlt
repnz
sbbb
insb
add
lret
lds
cmpsb
addr16
pop
jecxz
imul
add
xchg
sbbl
push
popl
lds
jbe
out
xchg
or
jne
test
adc
sbb
lcall
xchg
mov
sbb
add
pop
mov
jno
and
out
xchg
and
sbb
test
cwtl
add
into
test
add
stos
shll
mov
imul
lds
lahf
add
scas
xlat
ret
pushf
lods
or
mov
mov
pop
sub
gs
enter
sub
ret
push
movsb
xor
cmp
xchg
adc
cmp
lea
jno
out
aas
fsubrp
inc
call
ret
test
imul
mov
fnstenv
xchg
inc
ret
dec
int
int
jns
inc
jb
enter
mov
lea
pushf
into
stc
lret
mov
jg
shlb
pop
cmpsb
stc
mov
push
mov
mov
shrl
cmp
insl
pop
iret
shll
lahf
aad
xlat
mov
pop
stos
dec
cmp
xor
ljmp
inc
and
pop
ljmp
out
inc
and
jno
pop
push
punpckldq
or
xchg
psubb
jno
mov
mov
loope
js
mov
test
xor
inc
test
pop
push
adc
mov
adc
aam
les
and
pop
andl
jmp
jnp
cs
loopne
xor
sbb
aad
addr16
call
fcoml
imul
aas
pop
fwait
sbb
daa
cs
sub
into
xor
inc
les
mov
dec
fldt
outsb
mov
sub
cmp
xchg
pop
pop
xchg
jl
stos
jecxz
push
fldl
or
shlb
inc
std
xchg
leave
leave
loop
cmpsb
fildll
outsl
jo
adc
mov
scas
clc
iret
mov
call
rolb
mov
mov
je
repz
mov
mov
nop
jno
mov
fs
and
cld
rcll
xchg
cs
out
notl
xchg
dec
and
insl
cmpsl
iret
lcall
pop
and
sub
pop
dec
test
cmp
int
cmovno
cmp
mov
int3
mov
xchg
xor
xchg
inc
out
or
xchg
ljmp
scas
call
and
arpl
pop
loope
mov
movsb
cwtl
iret
dec
arpl
pmovmskb
fs
loop
in
pop
inc
les
or
cld
scas
stos
add
pop
out
push
push
add
pop
test
or
in
push
out
xor
dec
xor
cmpb
sub
xor
xchg
shl
dec
or
push
pop
mov
lahf
push
pop
loop
sub
dec
mov
xor
jno
inc
push
sbb
pop
std
shl
push
mov
test
cmp
mov
or
inc
add
adc
leave
and
lret
cwtl
dec
shl
or
icebp
cmp
cmp
mov
sbb
push
sub
das
push
push
mov
push
pop
sub
or
pusha
sub
jmp
inc
sbb
cld
fucom
test
xchg
lret
mov
add
jnp
push
js
ret
js
xchg
gs
pushf
ljmp
add
add
or
push
sahf
lret
jmp
mov
mov
aad
push
adc
lret
ja
xchg
cs
cmc
cmc
ret
outsl
sub
or
in
ret
add
pshufw
call
add
dec
mov
dec
jl
mov
mov
mov
push
lock
int
push
dec
push
mov
pop
sub
adc
sub
push
cli
sbb
mov
push
daa
push
adc
mov
rorb
mov
paddusw
cbtw
popa
pop
jmp
rcrb
push
mov
scas
pop
pop
cmp
out
cmpsb
xchg
ror
pop
pop
loop
and
test
out
push
sti
ljmp
push
pop
repnz
cmp
loope
dec
leave
add
dec
inc
mov
lahf
jp
pusha
fimull
ljmpw
sahf
leave
stc
icebp
add
lds
fsubrs
mov
fimuls
or
or
xor
jnp
fidivrs
mov
std
popa
test
dec
mov
test
xchg
sbb
jecxz
enter
push
inc
fcomps
filds
arpl
ja
inc
sub
outsb
pop
mov
cmpsb
jmp
add
sbb
jo
sbb
in
popf
test
mov
xor
jno
sbb
and
add
out
cmp
fdivp
jmp
jb
dec
or
mov
or
sbbb
and
xlat
pusha
cltd
mov
push
je
psubd
mov
xor
sbb
adc
dec
in
dec
sahf
push
jl
ljmp
and
xchg
data16
mov
addr16
or
jge
movsb
dec
mov
in
in
movsl
in
mov
jmp
jae
je
imul
jmp
mov
pop
pushf
rclb
dec
popa
fnsave
aad
push
and
nop
mov
les
mov
int3
inc
xor
bsf
sbb
cmpsl
popf
addr16
mov
fucom
cltd
out
fdivrl
push
lods
fdivrp
ja
decb
int3
sti
pop
xor
adc
sbb
xor
cs
cmp
jmp
xchg
rol
jns
xchg
loope
fdivs
cmc
lods
push
mov
in
push
sbb
and
adc
mov
nop
pop
xchg
aas
mov
push
or
sahf
and
inc
test
jno
insl
xchg
pop
es
adc
pusha
mov
into
inc
aad
jnp
gs
pop
mov
push
pop
sti
shrb
pop
mov
xor
cmp
leave
jecxz
dec
pop
push
popf
lods
adcl
mov
pop
pop
lods
out
mov
arpl
add
mov
mov
test
or
mov
shrl
add
cmpsl
faddl
aad
mov
push
std
fwait
push
ss
fcmovnbe
inc
aad
leave
fisubs
cmp
int3
adc
in
loop
pop
and
daa
adc
mov
leave
lret
sbb
mov
add
enter
or
out
or
pop
scas
xor
xorl
cmp
pop
mov
ja
adc
inc
fs
std
test
lods
mov
fstl
stc
xchg
setbe
xchg
push
mov
mov
push
es
es
frstor
jns
test
sbb
or
cmp
inc
shl
adc
js
loope
xchg
pop
push
push
lock
cmpl
inc
or
and
repz
push
and
dec
cmp
push
loopne
iret
into
jns
ljmp
xor
dec
jbe
rol
std
nop
arpl
xor
mov
push
fdivl
pusha
repz
or
sbb
rol
pushf
dec
adc
push
imul
gs
popa
xchg
jg
mov
adc
inc
in
jno
xchg
push
movsl
xor
icebp
push
xchg
cmp
sub
sti
out
pushf
push
insl
popa
aam
mov
cs
jae
inc
cwtl
pop
aad
in
fimull
xchg
loopne
inc
sarl
jae
insb
cld
arpl
dec
int3
sub
imulb
xor
mov
jmp
jl
push
mov
lret
mov
and
and
inc
insb
mov
lods
inc
data16
or
repz
imull
testb
jnp
shr
jno
daa
in
push
sbb
sbb
jno
dec
test
cmp
sbb
jno
xchg
pop
jno
rcrb
jg
push
xor
enter
iret
xchg
mov
icebp
int3
loope
pop
insb
add
test
stc
call
pop
lret
pop
daa
ret
test
outsl
inc
out
or
push
fdivs
test
sbb
xchg
cmp
and
lds
aam
lret
insl
push
ljmp
sub
adc
ficomps
xchg
lea
jno
fcmovb
mov
lds
mov
idivb
sub
cvtps2pd
out
lahf
xchg
in
jl
push
add
or
dec
adc
cltd
insb
clc
and
mov
cmp
or
shrb
mov
rcr
push
movsb
fwait
rclb
mov
xchg
mov
push
movsb
mov
pop
mov
cmp
insb
adc
xchg
sub
xchg
adc
jbe
addl
out
pushl
vmovq
rcll
test
sar
incl
push
loop
nop
lret
clc
sbb
sbb
popa
testb
fidivrl
add
scas
pop
fistl
mov
adc
push
pop
daa
shrb
div
jae
xor
inc
aad
mov
xor
in
inc
xor
sahf
scas
dec
cwtl
inc
inc
add
insb
mov
cmp
dec
mov
jle
mov
outsl
aaa
cmp
jmp
in
jae
or
mov
inc
aam
mov
jge
pop
imul
push
jmp
daa
jo
inc
in
andb
not
and
movsl
scas
xchg
adcl
daa
mov
jp
fsubrs
xchg
popa
pop
fdiv
lods
lods
out
adc
pop
pop
xchg
push
outsb
mov
mov
mov
scas
xor
mov
insl
test
ss
and
cs
add
push
rcr
mov
aaa
sbb
jmp
movsl
add
stos
jmp
daa
xchg
lods
jnp
jg
sub
stos
arpl
xor
adc
jecxz
in
cmc
add
adc
push
fs
rclb
pop
shl
inc
jp
xchg
fisubrl
std
in
jmp
fwait
xlat
es
dec
imul
inc
xchg
push
jnp
notl
gs
pop
mov
imul
mov
cmp
aaa
rorb
ret
mov
and
adc
outsl
pop
ret
cmp
push
mov
ds
divb
mov
ja
les
or
ss
or
and
inc
sub
jne
sbb
dec
movsb
inc
in
stos
pop
inc
push
cmc
mov
add
cwtl
cmp
mov
sub
std
mov
and
cwtl
int3
inc
or
xchg
push
jne
and
xchg
jno
mov
adc
repnz
push
shr
push
cmp
cmp
fdivs
adc
aad
leave
aaa
and
cmp
addr16
hlt
or
sub
or
sub
push
pop
out
popf
pop
push
std
pop
out
jmp
push
mov
in
xchg
cmp
pop
scas
pop
pushf
ja
lahf
push
mov
aaa
or
xor
lea
ret
js
mov
and
inc
shlb
pop
inc
push
and
bound
shrw
ljmp
js
cmp
mov
pop
pop
nop
cmp
out
and
ss
sahf
dec
pop
loopne
xchg
pop
push
push
daa
or
dec
mov
cltd
repz
jns
cli
sub
scas
fidivrs
pop
pop
inc
pop
loop
push
lds
pop
sar
jp
cmc
dec
sbb
pop
and
and
cltd
dec
imul
aaa
push
or
ret
in
test
xchg
jne
fcmovb
xor
mull
data16
leave
xchg
adc
push
enterw
arpl
jbe
pusha
lahf
ficoms
fucomip
pop
mov
pop
jns
jp
xor
inc
xor
popa
sub
sbb
bound
scas
sub
cmp
adc
arpl
cmp
add
dec
cmpsb
leave
arpl
sbb
bound
aas
sbb
or
mov
push
push
mov
mov
in
repz
and
xor
inc
jbe
cmp
cmpsl
pop
jecxz
inc
mov
or
enter
cmpsb
fdivr
sub
push
out
pop
sti
push
jno
mov
inc
mov
mov
sub
out
xor
popf
gs
dec
cmp
cwtl
cmp
stos
lods
sub
orb
cmpsb
scas
repnz
or
dec
cmp
out
mov
pop
div
scas
lahf
es
int
call
aad
xor
push
cmc
iret
clc
sbb
aam
outsb
push
movsl
mov
adc
mov
jge
dec
fldt
xor
jbe
fldcw
iret
fldenv
pushl
cmc
cmp
das
int
cmp
add
pop
sahf
pop
fildll
ja
sub
mov
add
xor
fcom
and
sub
cmpsl
bound
add
jmp
sub
call
or
xchg
out
or
pushf
scas
aas
or
push
daa
add
sub
fdivrs
fbstp
lea
icebp
pusha
jae
ljmp
test
push
adc
pop
mov
loop
mov
push
mov
push
xor
and
pusha
cli
inc
jl
rcll
jge
or
bound
in
aam
xchg
or
or
adc
mov
ljmp
or
enter
sbb
lds
frstor
add
push
cmp
or
movsl
or
mov
pop
leave
pusha
add
inc
xor
sub
add
lret
mov
inc
fsts
push
cltd
aam
lcall
lods
xlat
mov
mov
mov
jo
dec
jl
cld
hlt
push
adc
out
xchg
popa
mov
sub
daa
aad
xchg
cmp
xchg
dec
sub
cmp
add
sbb
push
push
push
lret
xchg
testl
mov
push
inc
xor
popa
nop
cmpsb
lods
addr16
mov
outsl
xchg
ficompl
pushf
es
fisttps
adc
stos
pop
xchg
jbe
mov
cmp
sbb
clc
fdivs
inc
sbb
push
inc
mov
xchg
mov
bound
push
nop
movsb
adc
pop
orl
mov
pop
or
push
mov
ret
aaa
mov
out
jb
xchg
scas
jnp
int
in
int
dec
xor
push
dec
cmpsl
mov
jecxz
xlat
outsl
cmp
mov
notb
cld
test
cs
mov
mov
mov
xlat
and
push
popf
mov
jns
js
cmpsb
inc
cs
push
add
sub
data16
add
adc
into
je
or
xlat
and
cwtl
idiv
int
and
ljmp
into
push
leave
les
inc
lds
xabort
punpcklwd
test
dec
add
fidivs
addb
mov
jne
sbb
test
jl
in
mov
nop
add
inc
and
mull
push
adc
fidivrs
in
and
pop
shlb
adc
ret
mov
sahf
lret
nop
sub
push
js
pop
push
jmp
das
mov
and
sub
daa
xchg
mov
loope
mov
rcll
cmc
inc
or
xchg
fs
in
jl
pop
jno
ret
or
cltd
ss
push
mov
or
pusha
mov
lret
dec
int
mov
cwtl
push
xchg
scas
aas
jg
dec
adc
jmp
mov
aad
fstpl
mov
mov
push
lock
xchg
pop
pop
pop
inc
fwait
push
cld
sub
shr
testb
jno
mov
fldz
mul
inc
cmc
fldt
mov
test
mov
clc
aam
jg
mov
mov
xchg
jns
inc
fisttpl
hlt
jg
out
or
movsl
jge
push
mov
mov
int
jecxz
gs
inc
sbb
lods
pop
cmpsl
mov
emms
insl
mov
div
decb
xchg
adc
mov
outsl
mov
or
cmc
mov
stc
and
repz
jmp
pop
in
sbb
ljmp
mov
sub
pop
or
dec
jo
out
and
rcl
mov
js
test
ficoml
fists
mov
mov
test
cmp
cmp
movq
or
sub
mov
bound
and
jae
pop
cwtl
into
mov
add
cli
add
rcr
cmp
in
jne
adc
popa
jo
mov
inc
lret
adcb
push
fistpl
lcall
pushf
into
mov
cmovb
dec
lret
mov
loopne
int
xchg
dec
std
or
jo
jp
scas
imul
rcrb
test
jno
push
mov
shrb
mov
xor
xor
rcrl
movsb
mov
xchg
pusha
in
pop
dec
stos
loop
enter
scas
jb
stc
inc
insl
fisubl
sbb
sbbb
dec
aas
push
mov
xchg
dec
into
dec
or
fistps
xchg
shrl
mov
cmpb
cmp
out
std
xor
in
cwtl
xchg
mov
mov
andl
aaa
mov
iret
push
or
cmpl
pop
mov
push
loopne
in
add
jno
dec
rorl
sbb
out
jno
cmc
and
sahf
repz
cld
aam
repz
lea
mov
testb
dec
in
stos
sub
mov
ss
dec
es
repz
mov
dec
inc
cmp
dec
mov
and
inc
aas
adc
loop
movsl
aam
xchg
mov
lods
pop
cltd
inc
or
xor
push
xchg
out
push
mov
xchg
enter
pop
cmc
lods
or
loopne
sbb
aaa
clc
and
popf
stos
int3
xor
std
nop
je
push
jp
mov
call
jns
sub
shl
add
test
or
mov
mov
or
xchg
xchg
push
add
pop
jo
mov
sub
std
cld
xchg
pop
xchg
dec
scas
xor
jno
sbb
int
xor
lcall
add
cmp
mov
aam
shrl
jmp
mov
jg
mov
cmpl
xor
jle
adc
push
pop
mov
push
adc
das
or
xchg
xor
pusha
js
pop
sub
imul
inc
or
daa
inc
cmp
xchg
fs
fldz
jmp
jecxz
js
xchg
add
cmp
push
mov
xor
dec
or
ljmp
sbb
mov
add
pop
gs
call
or
mov
int3
xchg
enter
mov
mov
test
jecxz
in
enter
xchg
cwtl
repnz
mov
arpl
add
pushf
cmp
imul
jbe
cmp
sub
adcb
cmovae
rclb
out
dec
xchg
lods
adc
jp
add
lea
dec
xor
push
ret
shll
aas
jo
push
adc
pop
fistps
aaa
aaa
adc
test
xchg
ss
test
popa
xchg
adc
outsl
mov
cli
dec
jmp
dec
and
ss
lods
pop
leave
pop
punpcklbw
sbb
xor
jbe
dec
clc
inc
testl
or
ror
sbb
sbb
inc
sub
out
dec
push
push
xchg
ret
pop
aas
pop
outsb
sbb
repnz
outsb
dec
sti
leave
inc
call
jge
push
imul
data16
pop
mov
aad
pop
cmpsl
mov
push
fsubs
insl
add
testb
xchg
popf
lods
mov
or
xchg
stc
out
aad
xchg
outsb
aam
adc
lcall
pushf
and
jno
dec
fwait
repnz
jbe
fisttpl
mov
pop
mov
sti
clc
inc
std
mov
lods
pop
dec
insl
rcll
mov
insl
daa
notl
inc
adcl
cmp
jle
cmpb
sub
and
test
not
mov
in
test
cli
pop
pop
das
incl
insb
fdivp
mov
sbb
fisttps
aad
fwait
sub
cmp
out
mov
xor
dec
mov
sub
stc
xchg
jle
dec
rorl
push
mov
xlat
sbb
dec
not
scas
addr16
mov
mov
push
xchg
int3
or
mov
stc
mov
xchg
outsl
push
push
cli
ss
mov
adc
movl
lods
movsb
fwait
cli
cmp
les
or
adc
cmc
and
sahf
mov
push
lcall
and
insb
or
dec
xor
jl
mov
push
or
daa
hlt
lahf
int
and
in
scas
jge
mov
adc
mov
xchg
clc
inc
add
inc
fcmovnbe
and
mov
inc
pop
inc
das
in
add
add
leave
xor
out
addl
loopne
add
fidivl
fwait
dec
lods
lock
bound
xchg
mov
fisttpll
nop
fxam
push
or
inc
and
lret
cmpsl
sub
xchg
lds
xor
ja
jecxz
or
enter
mov
fs
je
push
call
test
aaa
mov
pushf
arpl
or
inc
jle
popa
out
leave
or
adc
into
mov
dec
aas
push
jge
add
out
sub
add
push
adc
mov
stc
je
fldl
sub
inc
sub
jne
xor
aaa
pusha
jl
test
sbb
inc
cmp
mov
clc
mov
xor
or
jge
xchg
jne
dec
in
and
ja
and
push
or
add
xchg
push
fs
ljmp
out
adc
repnz
pop
pop
jl
in
ss
inc
cmp
push
gs
enter
push
nop
mov
cmp
pop
jg
xor
xor
xor
dec
mov
mov
aam
and
sbb
mov
sub
lahf
ljmp
cmpsl
dec
add
mov
xchg
cltd
mov
push
nop
inc
mov
dec
xchg
loop
ljmp
mov
shr
jmp
push
dec
test
mov
insb
push
xchg
mov
mov
xor
adc
add
into
loope
lea
inc
cld
add
cmp
or
fcom
das
clc
repz
sarl
sub
sub
mov
mov
sbb
out
lock
in
ss
ja
jae
cmp
je
out
sbb
xchg
sbb
cmp
cmp
fldt
test
mov
dec
out
sub
dec
test
cltd
pop
mov
sub
xchg
push
lods
sti
lock
jp
out
xor
cwtl
mov
xchg
fwait
push
ffree
adc
loop
out
mov
sbb
icebp
mov
fsubl
icebp
mov
mov
shrl
xchg
arpl
lcall
xor
je
fnstenv
pop
xchg
aad
xchg
js
pop
cli
and
xor
inc
lret
pop
cmp
cltd
nop
int3
test
hlt
ljmp
mov
out
pop
mov
mov
out
fsubl
in
mov
lcall
enter
stos
fwait
addb
mov
fsubr
ljmp
cmp
cmp
or
xchg
pusha
and
daa
or
std
scas
mov
jmp
cwtl
in
xchg
mov
outsb
pusha
shl
mov
dec
cmp
and
xor
popf
out
cld
sub
int3
loop
in
sar
jno
pop
cmovno
shld
js
xchg
sbb
shlb
outsb
dec
and
test
je
and
sub
ret
pop
out
aam
popf
xor
mov
push
popa
lcall
jecxz
packuswb
add
jge
mov
pusha
les
lret
out
jbe
stos
cmp
mov
xor
pop
out
scas
pop
cmp
mov
cmp
adc
shrb
test
popf
sahf
or
das
xchg
push
mov
xor
jecxz
lods
nop
pushf
inc
mov
test
inc
loope
inc
je
pop
sbb
inc
mov
in
jmp
mov
lods
outsb
clc
mov
arpl
dec
test
ficoms
arpl
scas
outsl
pop
adc
aad
sbb
ret
ficoms
add
sub
mov
stc
sbb
dec
push
jne
pop
iret
sbb
dec
adc
cltd
stos
mov
jb
insl
mov
mov
js
sub
cwtl
pop
cli
mov
mov
cld
mov
jge
shl
pushf
mov
lret
into
lods
scas
add
pop
hlt
and
inc
mov
cmp
jmp
cld
sub
ret
dec
ds
mov
sub
cmp
mov
mov
scas
add
dec
insl
sbbb
push
or
sahf
dec
std
push
cmpsl
mov
scas
scas
mov
aad
sub
mov
sbb
fadd
mov
pushl
add
or
inc
into
dec
add
xchg
in
out
test
cmpsb
mov
int
adc
mov
mov
mov
inc
cli
add
jecxz
pop
out
mov
inc
inc
addr16
jae
daa
rcrb
ret
inc
in
lock
mov
fsubrl
jmp
inc
nop
jne
xchg
adc
push
pushf
scas
jl
aam
in
cmp
sti
aad
mov
cmp
cmpsl
sub
xor
cmp
sub
or
out
int3
movsl
adc
or
mov
sub
icebp
mov
rorb
dec
mov
or
inc
lods
add
inc
test
rolb
mov
jg
mov
cmp
stos
mov
and
mov
pushf
fstl
jb
mov
stos
sub
in
rcr
mov
jmp
xor
dec
sahf
push
adc
negl
inc
pusha
pop
jl
adcb
cmpsl
faddl
int
dec
sarl
mov
mov
sbb
aam
adc
add
out
jae
xchg
outsl
pusha
lds
mov
pop
jg
push
or
add
adc
push
and
and
mov
mov
cmpsl
push
dec
bound
mov
lgs
add
mov
and
lcall
pop
sbb
mov
imul
sub
ret
dec
popf
push
xchg
int3
xchg
or
xor
mov
insb
xlat
adc
xchg
or
pop
mov
into
ret
or
pop
adc
pushf
xor
add
xor
inc
test
pop
cltd
mov
sbb
inc
mov
add
iret
dec
iret
dec
mov
sbb
push
imul
mov
mov
dec
xchg
int3
icebp
js
lret
cmpsl
mov
inc
test
clc
fimull
fistpl
and
mov
test
movsb
jecxz
add
xor
aas
mov
adc
std
pop
imul
sbb
cmp
aam
xor
push
dec
sbb
or
aas
stos
pop
lcall
sbb
das
pop
xor
mov
test
jmp
clc
mov
add
ret
popf
hlt
stos
loope
es
mov
clc
ficompl
add
out
cmp
push
out
or
xchg
and
mov
sbb
cld
imul
mov
hlt
fstpl
or
call
sub
ret
stos
and
mov
inc
imul
sub
out
ds
jge
xchg
fiaddl
fidivl
inc
jg
and
popf
mov
out
push
dec
insb
mov
aas
inc
add
jne
std
jns
hlt
rol
inc
mov
std
add
hlt
sahf
arpl
jmp
pushl
addr16
or
loope
xor
icebp
cmp
mov
int3
inc
pop
xor
mov
nop
sahf
mov
xchg
rclb
jo
aaa
shlb
fadds
xlat
jecxz
pushf
pop
mov
mov
add
dec
jle
lods
imul
jo
sub
cmc
xor
pushl
fs
shlb
jmp
cmp
mov
fistps
jbe
jle
pop
inc
dec
test
push
or
outsl
push
dec
shrl
dec
dec
or
adc
imul
push
shrl
pop
dec
xor
xor
mov
xchg
cli
out
xor
mov
sub
call
jo
data16
add
mov
imul
xchg
fwait
cmp
and
jmp
or
xchg
dec
nop
dec
pop
pop
pop
daa
outsl
les
std
aad
sbb
icebp
sbb
jl
scas
inc
push
in
lret
repnz
lcall
cmpsl
lods
test
fistpll
stc
xor
push
lea
mov
pop
jl
repz
jmp
xor
pop
mov
fldcw
mov
movsb
push
inc
pop
insl
mov
pop
fbld
popa
bound
xchg
mov
jbe
sbb
insb
xchg
mov
and
in
sub
cmpsl
pop
fistl
bound
sti
lahf
ljmp
mov
fs
xchg
nop
or
jecxz
je
or
xor
adc
addl
mov
hlt
cld
stc
imul
ljmp
push
stos
and
jge
xlat
ds
dec
xchg
aas
cmp
inc
pop
out
jmp
mov
or
mov
cmp
or
push
clc
insb
pop
or
shr
lea
in
ud2
push
mov
test
sub
enter
or
pop
mov
and
std
mov
cmpsl
lahf
int
je
pop
mov
jmp
int3
pop
lods
shl
push
cmp
xchg
dec
arpl
lret
lods
jle
cmp
dec
test
cwtl
leave
iret
popa
adc
push
mov
pop
and
dec
xor
dec
and
repz
cs
movsl
lea
rorb
ret
cmpsb
and
insl
and
cmp
jmp
dec
decl
ror
daa
loope
pusha
xchg
les
push
test
ja
out
inc
mov
leave
sub
movsl
fsubs
add
mov
fcoml
es
mov
icebp
out
mov
lahf
jmp
les
adc
xor
xchg
sub
jge
inc
gs
xchg
je
dec
xor
add
jp
sahf
xchg
insb
xchg
or
xor
mov
ljmp
xchg
cmp
add
imul
sub
popa
das
or
cmp
test
push
pop
insl
int
push
in
pop
out
daa
fstpt
jmp
cmp
insl
mov
dec
pop
mov
inc
or
pop
ret
pop
js
test
loopne
and
ja
pop
bound
jno
sahf
jmp
out
cmp
movsl
xorl
test
xchg
sbb
daa
cmp
sub
sbb
stc
popf
jl
insl
and
inc
jb
sub
call
and
xchg
sar
add
std
mov
jns
dec
mov
pop
inc
and
pop
mov
mov
and
push
mov
jo
dec
xor
xchg
jns
int3
dec
lods
adc
sbb
out
arpl
pop
adc
pop
push
mov
mov
dec
jne
sbb
aaa
sub
scas
clc
and
sbb
enter
jge
add
loop
lds
adc
and
dec
in
adc
lahf
mov
push
and
xchg
nop
into
das
add
add
add
cld
mov
in
mov
dec
adc
icebp
fstpt
push
xchg
lret
jmp
jnp
sbb
xchg
push
mov
into
xchg
mov
aas
fdivp
and
aad
add
or
leave
push
js
aam
xorl
sbb
cmp
mov
jno
movsb
mov
test
adc
repz
lea
push
pop
insb
loopne
lods
push
jo
add
mov
xabort
mov
jge
mov
mov
mov
cs
imul
xor
push
ret
and
xor
mov
sub
cmp
sbb
jbe
cwtl
ja
pop
mov
leave
loope
jno
shlb
sub
leave
push
sbb
test
cmc
mov
mov
xchg
sub
sub
dec
stc
scas
or
fwait
xchg
inc
add
jp
mov
pusha
out
cmpsb
aas
sbb
jo
sub
push
jae
jo
cmp
cmc
mov
inc
fcompl
inc
shll
inc
enter
je
lds
movsl
cmp
jb
pusha
push
jle
jb
adc
data16
aas
rcrl
jle
insb
aam
loopne
and
repnz
jno
lods
insb
pop
not
push
int3
xchg
adc
pslld
sti
sahf
sbb
test
imul
and
jmp
or
arpl
stos
jno
jle
lcall
fisttpl
mov
mov
repz
mov
mov
sbb
push
out
clc
sahf
jnp
fstps
lock
insb
sbb
add
outsb
push
sbb
mov
jno
or
sbb
pushf
dec
nop
fwait
lcall
pop
inc
and
imulb
sti
or
jae
outsl
mov
lds
jle
mov
fdivs
das
dec
dec
movsb
popf
cli
movsl
test
lahf
xchg
xorl
xor
notb
mov
mov
xchg
or
push
jmp
pop
dec
sub
shrl
in
jno
movsl
or
add
fldl
addl
arpl
icebp
pop
push
scas
or
ret
mov
repz
lods
ret
inc
out
adc
adc
push
push
movsb
sub
cmp
mov
sbb
iret
fwait
sti
xor
xchg
jnp
and
je
cmp
popa
and
fildll
lcall
dec
mov
imul
hlt
cltd
push
add
cmp
pop
sbb
ret
add
imulb
pusha
dec
in
push
jmp
int
mov
outsb
ss
sbb
enter
bound
ret
mov
clc
movb
sbb
mov
inc
inc
notl
push
fcmovne
xchg
stc
popa
daa
sahf
fucomi
push
stos
jbe
hlt
adc
cs
out
push
pop
dec
scas
mov
sti
mov
jae
jmp
out
pop
mov
or
fwait
nop
ror
fbstp
lahf
insl
push
stos
stos
aam
mov
lret
add
loop
mov
sub
loope
add
fmuls
jbe
add
stc
sub
dec
xor
loope
test
xor
ds
mov
mov
aad
es
mov
jle
add
mov
sbbb
sti
xchg
xchg
jl
jae
cmpsl
outsl
negl
insl
xor
cmc
out
xlat
xchg
inc
lea
push
int3
pop
fdivrs
or
cmp
push
pop
bound
mov
adcl
nop
pop
cli
push
sbb
std
loope
cmc
adc
mov
push
imul
or
inc
xchg
jb,pt
test
faddp
cmp
dec
add
clc
fsubrl
mov
cltd
or
xchg
inc
dec
mov
xor
movsl
shrl
adc
push
xchg
and
repnz
in
jbe
je
mov
scas
and
inc
stos
pop
inc
ficompl
dec
push
pop
inc
sub
jmp
add
in
pop
repz
call
and
mov
pop
push
push
add
dec
xor
add
ds
dec
mov
push
pusha
jno
xchg
loope
dec
sbb
std
push
pop
pop
add
cmp
fistpll
sub
or
in
add
out
or
addr16
mov
sbb
outsl
cmp
cmpl
mov
sarb
repz
push
adc
push
aas
mov
xor
pop
xchg
jne
insb
stc
fnsave
adc
push
and
aam
cli
dec
pop
ss
nop
loopne
mov
stos
jecxz
ret
mov
inc
inc
pusha
dec
push
ret
test
push
sbb
or
cmpsb
push
mov
pop
add
mov
fstl
xor
clc
test
mov
shr
xchg
mov
int3
or
call
xor
mov
nop
fsubl
cmpsl
std
fistpll
jo
xchg
mov
roll
fimuls
in
push
inc
push
adc
in
mov
xor
pop
test
cwtl
push
push
mov
mov
pushfw
fildll
pop
js
pusha
out
divl
sub
scas
push
hlt
hlt
mov
dec
xchg
xchg
adc
cmpsl
inc
mov
sbb
mov
or
jecxz,pn
bound
or
push
dec
push
lret
cmc
testb
outsl
mov
mov
dec
movsb
or
in
dec
mov
mov
ljmp
and
test
insl
fsubs
iret
push
mov
stos
arpl
out
push
and
test
and
rcll
push
ljmp
mov
ja
xor
jns
xchg
cltd
bound
insb
lods
or
lods
sarb
pop
es
nop
pop
decb
cld
icebp
enter
sti
cmp
or
mov
adc
clc
test
mov
rolb
aas
sbb
out
adc
adc
out
mov
stos
sub
insb
xor
in
fdivp
hlt
inc
test
mov
mov
negl
fsts
aas
sbb
test
repnz
dec
pushf
xchg
adc
ret
jne
pushf
or
movsl
xchg
js
adc
lods
int3
je
push
xor
dec
xchg
cmp
xchg
fs
adc
cmp
mov
lcall
dec
fnsave
arpl
stos
aaa
or
imul
aad
iret
mov
shrb
xchg
out
add
shll
sub
test
mov
mov
jmp
or
out
xor
xorb
push
xchg
inc
repnz
ja
outsl
dec
dec
std
sbb
cld
mov
mov
je
cmp
jns
iret
sub
loop
call
mov
mov
jo
pushf
test
push
jb
jno
add
xchg
push
mov
push
and
sub
shlb
lcall
into
mov
sbb
adc
jp
ljmp
sti
adc
inc
fistpll
adc
fidivrs
sets
inc
aaa
jmp
dec
in
sub
mov
mov
push
aas
sbb
rclb
or
out
pusha
cld
cmp
stos
movsl
cmc
sub
xor
stos
lret
lea
adc
push
cmp
movl
adc
inc
add
sbb
inc
dec
in
cmp
xchg
mov
jnp,pt
inc
data16
dec
cmp
or
imul
jmp
add
mov
das
es
data16
repnz
sbb
mov
decb
popf
into
xlat
inc
repnz
dec
add
sub
lock
push
outsl
stos
dec
xchg
rclb
cmp
xchg
xor
sub
loop
pop
or
fildll
dec
push
in
testb
push
je
pop
shlb
add
pusha
and
pushf
sbb
in
scas
jl
int
lods
out
lods
mov
ror
out
push
outsl
pop
and
call
adc
loope
pushf
test
push
outsl
sti
stos
cmpsl
lahf
cmp
call
sub
in
mov
xchg
dec
loop
and
mov
mov
mov
xchg
sub
hlt
cmpps
sub
push
sub
or
sub
dec
pop
push
sbb
ss
cmp
pop
sub
add
stc
xchg
loop
jge
and
in
xchg
mov
or
rorb
xchg
adc
jb
adc
out
jecxz
or
stc
fwait
in
mov
std
mov
mov
pop
mov
pop
jbe
inc
xor
adc
sub
xchg
sub
mov
push
je
pusha
dec
cli
cli
shll
xchg
inc
movsb
cmp
or
pop
icebp
nop
xor
inc
loopne
lds
inc
dec
test
ficompl
adc
inc
adc
cmp
dec
inc
loop
or
stc
cs
fsubrs
xor
push
mov
fstps
cmp
pushf
and
add
rcl
sub
daa
stos
inc
test
sbb
loope
movsb
or
cs
out
scas
idivl
in
adc
sbb
xchg
jbe
xor
xchg
mov
scas
xlat
sarl
lds
ss
in
nop
dec
enter
push
icebp
sti
out
xor
rcrb
add
mov
enter
push
nop
adc
or
bnd
pusha
les
aas
fidivl
paddd
or
inc
fisttpll
and
dec
mov
xorl
add
or
sbb
in
lea
stos
sbb
sbb
pop
cld
xlat
sbb
int
rclb
jb
mov
inc
xchg
sub
mov
or
dec
inc
lcall
xchg
lock
stc
cmp
ljmp
jb
out
add
rcrb
add
hlt
test
call
fwait
fs
arpl
pop
divb
mov
jbe
dec
bound
or
icebp
ja
call
pop
inc
daa
jne
imul
pop
cwtl
movsb
jo
inc
adc
lahf
loope
loopew
xchg
hlt
sarb
adc
incl
sbb
mov
repnz
bound
mov
inc
cmc
aad
lahf
les
xchg
cvtpi2ps
or
jmp
iret
dec
aas
xlat
pop
cwtl
adc
mov
jl
movsb
jae,pt
test
xor
push
or
sbb
leave
movsl
filds
lret
cwtl
in
enter
leave
mov
ja
sbb
inc
add
dec
cmpsb
sub
lock
and
lcall
and
pop
push
mov
mov
mov
pop
inc
jp
ret
in
repnz
push
dec
rcrb
repnz
lock
dec
xor
adc
inc
sub
cwtl
lret
sub
inc
enter
dec
scas
push
cmc
dec
mov
nop
jno
adc
fwait
dec
fidivs
adc
add
std
sbb
add
dec
dec
cmp
dec
int
aas
popf
insb
cmpsb
fisubs
add
jbe
xorl
lods
stc
mov
inc
jns
call
pop
sub
dec
dec
pushf
or
cmp
add
inc
jb
jnp
nop
cs
addr16
inc
rorl
test
out
inc
push
insb
xor
adc
dec
imul
pop
idivb
jb
ret
mov
lret
push
adcb
mov
jp
cmpsl
pusha
jg
das
mov
sahf
je
lods
mov
stos
add
out
jp
pop
popf
xor
ja
call
scas
ret
mov
js
adc
and
test
cmp
stc
mov
scas
mov
fsub
mov
gs
rclb
jb
jecxz
les
std
shll
jge
insb
sub
aaa
cs
cmp
mov
repz
sahf
movsl
mov
ret
stos
xor
shlb
sbb
sub
bound
cmp
pop
push
ret
frstor
and
pop
inc
mov
loope
xchg
mov
mov
cs
inc
push
lcall
mov
in
cmp
bound
mov
notl
loopne
jle
mov
int3
cwtl
jecxz
pop
cmp
ds
outsb
jb
es
pop
addr16
sub
xor
pop
loop
pop
test
fnsave
sti
cld
repz
ds
scas
popa
iret
push
movsl
subl
aaa
out
mov
cmp
inc
lock
aad
sub
cmp
flds
adc
push
lret
xchg
pop
mov
or
ss
andl
xchg
sub
dec
test
push
pop
fcmovnb
mov
mov
lds
xchg
push
aam
lahf
and
fs
imul
jbe
inc
hlt
stos
adc
push
lahf
and
stc
push
icebp
subl
ljmp
inc
sbb
cmpsb
or
outsl
fdivrl
inc
jg
inc
mov
push
out
mov
dec
aaa
in
xor
cmc
js
cwtl
mov
add
xchg
xor
int
mov
lcall
jnp
push
in
adc
and
loope
scas
loop
daa
test
in
push
inc
mov
sub
adc
sbb
mov
add
jp
dec
pop
push
add
cmpb
and
dec
push
mov
sub
repz
in
test
movb
jns
push
lret
fwait
mov
add
and
and
icebp
insb
scas
fsin
adc
mov
pushf
mov
movsl
sti
mulb
jecxz,pt
dec
fsubr
push
ja
mov
push
dec
into
dec
fistpl
je
clc
dec
xlat
xor
outsl
mov
in
aas
and
cmp
lock
mov
sti
inc
sbb
loopne
mov
gs
sub
cltd
cmpsb
mov
push
jae
pushf
fs
mov
mov
jl
dec
daa
and
cmpsb
negb
pop
sbb
jmp
xchg
mov
cli
lods
inc
repz
aaa
sbb
jae
lcall
xor
sarb
stc
or
sub
sahf
inc
icebp
pop
add
mov
lds
push
or
adc
jecxz
fstpl
xchg
xchg
mov
sbb
sub
pop
lods
fstl
mov
into
fwait
stc
int3
loope
data16
xchg
call
lahf
and
xor
pusha
aam
mov
xor
add
cld
mov
inc
mov
jecxz
push
jne
pop
test
push
push
lods
mov
lahf
jge
add
daa
rorl
xchg
scas
shrl
andb
adc
addr16
stc
ror
and
inc
add
or
inc
jle
inc
cmp
mov
mov
rcrl
aam
and
mov
mov
jb
test
roll
shl
out
sbb
mov
push
mov
cs
loope
pop
es
incl
sub
test
inc
out
push
xor
loope
xchg
insl
and
push
dec
inc
jb
or
dec
cwtl
sub
out
pop
add
pop
ficomps
mov
adc
fwait
jle
xchg
rcrb
dec
jae
shll
subl
les
ret
sbb
inc
mov
inc
mov
push
lret
into
and
xchg
cs
dec
xchg
push
mov
inc
sbb
adc
jecxz
inc
aas
cmp
xchg
fwait
xor
add
add
cwtl
sub
loop
and
adc
lods
in
mov
sub
jae
jp
mov
push
fiadds
and
dec
int
gs
stc
negl
aaa
xchg
ficoms
xor
or
test
shrl
das
rorl
push
repnz
int3
dec
fists
movsb
lea
jb
cmp
and
cmpl
inc
push
add
ret
ds
mov
arpl
stos
cmp
adc
jns,pt
mov
cmpsl
adc
xchg
rcll
mov
xor
mov
jg
pop
call
push
jo
aaa
aas
cpuid
das
and
jge
pop
sub
hlt
notb
dec
ret
and
lahf
add
addr16
gs
sub
lret
fs
hlt
mov
xor
inc
shll
or
xchg
push
pcmpgtb
push
out
nop
xlat
bound
mov
cmp
inc
jge
dec
mov
orb
lds
sarb
push
pushf
and
or
cmp
push
adc
adc
fists
fimuls
fldl
les
jne
cli
cltd
or
aam
inc
pop
cmc
rcll
xchg
jnp
bound
or
adc
scas
add
dec
push
hlt
sbb
ret
fsubs
adc
jmp
adc
cwtl
push
adcb
jl
mov
roll
cmpsb
sbb
movsl
push
and
into
xchg
xchg
cld
sar
cmp
mov
cmp
sarl
mov
xchg
data16
movsl
mov
loop
aaa
cmpsl
sbb
jb
mov
jne
fabs
adc
sbb
sbb
aas
mov
cltd
gs
sub
shlb
xlat
scas
mov
inc
pop
andl
xor
cmp
jmp
out
push
pop
fst
shl
mov
adc
or
in
ret
push
movsb
sbb
dec
sti
fildl
enter
jl
dec
sbb
sub
xor
cmp
popf
cmp
dec
fisttpll
sub
xor
mov
shll
dec
ret
lods
cs
push
das
and
fsubl
mov
adc
cmc
fldcw
pop
cli
xchg
imul
outsb
dec
popf
mov
pop
sbb
movsl
xchg
push
dec
mov
test
nop
fwait
mov
dec
dec
mov
int
loop
rcrl
out
loope
mov
shll
cmpsb
jne
mov
xchg
cmp
or
lret
inc
and
out
mov
mov
lea
mov
pop
add
sub
out
jbe
push
test
lahf
pop
add
and
movsb
fdivl
adc
or
dec
outsb
mov
jle
ret
das
or
cmp
xchg
xchg
pop
jp
pop
lahf
push
mov
cld
and
add
mov
out
mov
js
xor
mov
addr16
out
popf
cmp
inc
inc
inc
and
and
and
mov
xchg
mov
mov
cld
fstl
aam
add
and
add
popf
int
mov
push
sti
jle
or
jno
sub
push
jmp
mov
ret
dec
test
divb
aas
push
enter
adc
and
imul
cld
add
in
push
inc
mov
cmp
sbb
sarl
add
mov
and
maskmovq
je
out
jle
loopne
jbe
and
adc
sbb
pop
mov
pop
xchg
aaa
ret
pop
je
ret
xchg
pop
add
int3
jl
cld
push
pmaxsw
lret
xchg
fdivrs
push
sbb
inc
in
sub
xchg
out
addl
push
cmp
cmp
mov
frstor
cmp
into
and
stos
adc
das
push
shlb
push
ljmp
xor
cmp
and
jno
cmp
test
aam
fs
xchg
cmp
inc
add
jecxz
mov
and
jbe
aas
or
sbb
pop
je
es
out
sbb
fsubrl
mov
mov
out
push
shrd
stos
lock
pop
fistpl
xor
movsb
xchg
orb
adc
and
int
xchg
test
movsb
in
inc
cmp
or
mov
out
lods
dec
outsb
stc
pop
out
inc
mov
shrb
cmp
mov
or
mov
stc
jecxz
dec
addr16
idivl
les
sub
add
adcb
imul
inc
inc
push
xor
xor
mov
fs
mov
repnz
cltd
fdivl
push
pop
add
addb
negb
sub
jle
dec
mov
xchg
addl
outsb
dec
add
xlat
int3
add
shll
lock
mov
push
inc
mov
sahf
and
cld
adc
iret
xor
sub
mov
daa
leave
enter
pop
insb
stc
fadds
stc
mov
add
sbb
stos
mov
lahf
pop
sti
xchg
mov
in
sbb
scas
pop
jmp
cmp
pop
inc
call
jae
cld
insb
out
hlt
inc
into
cmc
outsw
inc
add
push
mov
fisubrl
out
adc
das
push
mov
gs
pop
ds
mov
fcomps
imul
idiv
mov
in
nop
pop
lods
mov
mov
xor
lcall
sbb
imul
sbb
dec
loop
mov
stos
push
xor
xor
sub
repz
xor
dec
push
and
adc
icebp
fimuls
enter
xor
push
push
xchg
mov
dec
push
dec
xor
sub
push
xor
test
cmp
cmp
bound
mov
or
mov
push
cmc
xor
or
pop
cmpsl
in
fwait
adc
xchg
mov
or
sub
pop
hlt
orb
mov
out
lret
inc
sub
push
mov
pop
mov
mov
into
push
push
pop
xchg
jle
and
push
push
xchg
push
shl
jl
xlat
cmp
mov
mov
sti
add
push
stos
ljmp
movsb
out
xorl
es
je
pop
je
cmpl
add
int3
inc
inc
xchg
dec
sti
stos
mov
and
rcl
xor
pop
mov
mov
mov
test
push
addb
les
mov
inc
push
loope
sub
aam
divb
mov
xlat
movl
dec
lods
icebp
es
jecxz
xchg
addr16
pop
icebp
add
popa
fidivrs
push
mov
push
loop
dec
gs
mov
dec
clc
add
in
in
into
rcr
jmp
imul
mov
aas
out
cli
addl
cmpsb
jge
sub
add
push
inc
mov
adc
jmp
sub
sub
xor
test
mov
xchg
push
nop
test
mov
movsl
sbb
or
and
pusha
push
jno
das
lahf
das
in
std
pusha
jle
add
mov
aaa
pop
mov
ret
mov
cmp
jo
orl
xchg
cmc
fnsave
adc
mov
loope
lods
nop
mov
ficoms
adc
fstpl
stc
dec
mov
insl
mov
mov
sahf
pop
pop
cmpl
ret
add
out
add
out
lcall
xchg
sahf
xchg
xchg
js
xor
jl
scas
push
mov
pushf
push
jecxz
xchg
fsin
cs
jge
shrl
pop
push
xor
dec
test
inc
outsl
adc
je
aam
int
lret
mov
pushf
icebp
xor
das
test
fldenv
popa
push
nop
push
lock
or
scas
or
push
inc
in
adc
lods
and
cs
xchg
dec
inc
inc
rcll
xchg
inc
lods
cwtl
mov
outsl
mov
fcmovnb
enter
or
repnz
scas
lret
popa
lds
add
mov
insb
gs
out
jb
popa
enter
out
addl
xchg
in
jns
sahf
lds
and
or
shll
cltd
in
out
je
dec
dec
xor
vunpcklps
in
orb
mov
mov
sbb
and
jnp
subb
mov
xor
jle
sbb
mov
fwait
cmp
jne
or
push
test
adc
cmp
bound
xor
test
test
jle
jmp
lds
jl
dec
add
cwtl
les
xchg
jne
aam
pop
or
arpl
sub
pop
push
sub
movsb
stos
and
jp
jmp
rol
ret
sub
clc
sub
negb
imul
std
jbe
sub
gs
mov
sbb
jg
mov
push
lret
call
test
dec
add
or
fdivr
leave
stc
shrb
insb
popf
cmp
data16
mov
mov
gs
pop
sbb
leave
add
jge
dec
sti
push
dec
mov
cmpsl
rcr
lods
fcompl
push
faddl
xchg
les
aas
push
mov
clc
std
push
je
mov
jae
mov
popa
fs
xlat
mov
mov
adc
loope
mov
rcrl
dec
lret
sub
in
pop
and
popa
pop
repnz
mov
sbb
loope
mov
popa
lahf
and
sub
testb
sahf
fsubs
int
mov
dec
nop
fisttpll
pop
cmpsl
pop
imull
mov
inc
pop
lods
pusha
cmp
dec
sbb
pop
cli
sub
cltd
jne
call
sub
cmpsl
cwtl
popf
fdivrs
inc
push
negl
mov
popf
dec
fistpll
hlt
cld
into
adc
cmp
mov
jg,pt
mov
out
sahf
lods
and
inc
pop
out
test
mov
pop
adc
shl
inc
sbb
lret
jge
dec
pop
and
into
mov
dec
iret
inc
mov
ret
or
in
negb
add
sub
imulb
sarl
fisubl
sahf
ds
mov
mov
or
add
mov
push
lock
movl
call
pop
ret
clc
iret
lea
jle
lahf
imul
or
jno
and
repz
dec
mov
push
test
mov
stc
std
pushf
or
sar
lods
mov
aad
call
or
jecxz
mov
mov
and
mov
movsb
das
repz
loop
rcrl
out
sbbl
movb
pop
fdivs
mov
ja
push
pop
inc
pop
pop
lahf
imul
fildl
in
test
sbb
lea
dec
ja
pusha
ljmp
jl
stc
in
jo
xchg
mov
inc
add
subl
out
cwtl
jecxz
push
stos
or
out
cld
dec
pop
mov
pushf
andb
lock
or
or
mov
inc
pop
or
rcll
test
das
out
push
adc
gs
dec
cmpsl
adc
inc
das
cmp
popa
js
cs
test
xchg
cmp
pop
inc
cmpsl
repnz
and
pop
mov
jno
pop
and
jns
scas
pusha
imul
cmp
iret
pop
add
arpl
jno
mov
adc
dec
adcl
inc
ret
jnp
repnz
jecxz
test
lea
mov
addr16
or
mov
mov
jmp
int
andl
lret
and
aaa
jb
pop
rep
push
or
repnz
mov
mov
xlat
xchg
mov
and
incl
mov
xchg
sub
mov
push
mov
xor
in
adc
dec
popf
sub
and
ret
loope
pop
sub
pop
ljmp
xor
xchg
mov
stc
add
movsb
sub
je
mov
cmp
adc
inc
outsb
or
cli
cs
mov
aaa
push
and
or
rorb
mov
in
cmp
ror
insb
jg
test
pop
jb
filds
mov
gs
adc
int3
outsl
push
loope
cli
adc
push
inc
jnp
jge
js
test
std
jg
mov
bndldx
adc
adc
xchg
incb
mov
dec
xchg
scas
xor
out
je
sub
fdivr
jl
outsl
movb
adc
sub
sbb
push
into
adc
pop
mov
jle
pop
inc
sbb
pop
dec
sub
test
mov
divl
lods
push
js
cmpsb
xchg
fsubs
cmp
call
push
dec
in
popf
bound
orl
test
xorb
pop
out
mov
int
mov
xor
push
or
inc
cmpb
fs
mov
add
xlat
cli
mov
dec
pushf
fbstp
adc
jg
mov
lods
outsb
js
mov
pushf
xor
xor
loope
push
imul
jae
or
adc
jo
test
inc
mov
lock
xchg
ljmp
mov
div
shll
jno
nop
fbstp
pushf
into
pop
dec
shlb
test
jns
push
and
and
ds
lret
js
std
call
insb
pusha
mov
mov
xchg
mov
das
or
cmpsb
aad
iret
int
lea
sti
hlt
out
stos
or
mov
xor
push
icebp
or
sbb
call
mov
aam
and
mov
push
pusha
xchg
je
js
add
movl
xor
sti
test
sbb
jnp
push
nop
lds
outsb
mov
stos
iret
mov
and
xchg
add
lods
xchg
outsb
sub
hlt
dec
rcll
into
sbb
push
mov
icebp
mov
std
mov
xchg
lods
imul
add
and
psubusw
sub
mov
icebp
daa
or
mov
add
jnp
mov
mov
push
pop
sbb
push
pushf
and
mov
popf
pop
xlat
mov
inc
pop
fnstcw
mov
out
es
push
arpl
nop
inc
setle
push
and
pop
in
divb
cmp
insb
lds
inc
sahf
out
pop
xchg
sarb
inc
shl
pop
lahf
add
pop
ret
cmc
fadd
lcall
or
pop
icebp
mov
out
dec
shl
adc
push
dec
cmc
aam
gs
in
das
push
mov
jle
pop
sbb
mov
insl
std
mov
push
sarb
popf
add
and
inc
inc
popf
shlb
ljmp
add
in
sbb
imul
bound
nop
lcall
xchg
int3
sbb
cmp
aam
jl
mov
xor
shll
imul
fwait
mov
in
xor
lcall
aaa
jge
pusha
jmp
cmp
sar
call
leave
inc
aam
mov
adc
mov
dec
and
insb
addr16
mov
inc
push
mov
rcl
adc
movsl
mov
pop
mov
rolb
sub
pop
push
not
push
outsb
dec
sbb
xchg
lret
repz
sbb
push
lahf
call
mov
test
fdivs
sbb
stos
cs
push
imul
or
mov
repnz
add
sbb
cmc
mov
lahf
in
xchg
out
mov
test
pop
inc
push
rolb
cmp
mov
jno
cmp
push
int
cmpsb
xor
mov
mov
inc
enter
sbb
movsb
or
push
xchg
aad
loope
and
in
in
das
shlb
loopne
sarl
or
xchg
std
mov
or
fisubl
push
jge
dec
popf
dec
dec
bound
icebp
and
outsl
arpl
pop
mov
adcl
fs
add
inc
je
out
rorl
push
jmp
xchg
xchg
sbb
add
fsubrl
xor
push
stos
mov
mov
in
ljmp
sub
xor
gs
clc
cld
mov
repnz
out
xchg
jl
push
cmp
sbb
mov
mov
add
mov
and
dec
out
pushf
call
jl
push
jmp
cmp
wbinvd
jae
push
ds
stos
cld
xchg
xor
and
jns
mov
pusha
ljmp
add
push
mov
cli
xor
cmp
mov
mov
or
inc
sbb
and
fs
sub
ja
dec
rcrl
leave
mov
jl
outsb
imul
idiv
add
mov
dec
mov
leave
loope
test
leave
je
xchg
clc
xchg
sti
les
adc
stos
dec
mov
or
dec
inc
mov
jo
push
push
std
sbb
incl
mov
test
stos
les
xchg
mov
int3
push
addr16
sub
enter
push
addr16
jle
das
xor
pop
mov
sahf
aas
insb
sar
loope
add
cmc
mov
sahf
sbb
gs
mov
repnz
push
adc
inc
ja
das
cmpsb
outsb
inc
dec
fsts
xor
inc
add
and
arpl
aam
iret
mov
push
orb
mov
add
je
shl
and
dec
add
cmp
push
mov
pop
push
daa
sarl
inc
or
pushf
sbb
inc
dec
xor
jge
mov
ds
push
push
shr
stos
jle
call
jmp
jno
jge
inc
or
aas
lea
xchg
out
ret
cmpsl
bound
ljmp
jnp
sub
pop
lds
pop
movsl
inc
loopne
push
xor
adc
js
mov
push
imul
mov
jecxz
cmp
fnstcw
xor
cmp
sbb
repnz
mov
cmpsb
clc
jecxz
xchg
inc
icebp
pop
push
outsb
push
sub
aaa
mov
aaa
mov
mov
hlt
repz
push
lret
int
scas
outsl
cmpsl
test
fildl
test
xchg
test
inc
add
mov
arpl
dec
xchg
sub
test
pop
sbb
add
cmp
int3
xchg
push
fdivl
adc
sahf
jae
inc
sti
sub
pop
loope
fs
add
pop
and
mov
sub
inc
iret
mov
cmp
jmp
idivb
jo
xor
mov
std
insb
mov
push
cmpsl
adcb
movsb
pop
sbb
sub
stos
xchg
outsb
push
sbb
push
pop
cmpsb
popa
push
test
dec
test
pop
mov
and
dec
data16
ljmp
push
jl
cs
jns
xchg
xor
cmp
pop
into
aaa
cmpsl
mov
pop
fs
mov
mov
stos
or
inc
push
fldl
mov
ret
or
mov
pop
ds
jmp
adc
js
inc
xor
mov
or
mov
jg
cmpsl
sbb
in
jle
test
scas
das
aad
cltd
loop
mov
std
ja
loope
cmpsb
sub
jno
push
ret
push
into
sub
fdivrs
dec
xchg
mov
or
xchg
fs
push
pusha
test
and
adc
shl
jnp
cmpsl
adc
sub
aaa
es
adc
sub
jp
test
ds
shlb
scas
aaa
sbb
adc
cmpsl
mov
or
or
sti
idivb
lcall
fidivrl
add
adc
insl
dec
inc
sub
adc
sbb
js
mov
lock
rcll
push
cmp
imul
inc
sbb
sahf
ja
lret
mov
add
rol
cmp
mov
fcmovb
out
jne
andb
adc
lds
lods
daa
fidivs
sub
pop
mov
jmp
jae
mov
cltd
call
into
loop
jno
out
push
into
lds
jmp
out
push
stos
add
loope
push
and
jo
ds
les
cwtl
sbb
jb
sbb
cmp
hlt
mov
mov
les
jmp
cmpsb
movsb
sbb
push
out
repz
out
sahf
out
dec
cmp
fdivrl
pop
call
stos
pop
scas
iret
pop
fldt
pop
fistl
or
cmc
in
mov
aam
pop
int3
add
push
shlb
in
xor
int3
sbb
pop
or
mov
sbbb
mulb
push
mov
xchg
jg
sub
test
in
js
mov
mov
jne
repnz
pop
int3
add
das
cmc
lret
pushf
inc
push
jo
clc
fxch
out
jnp
sar
daa
dec
dec
or
cmc
jecxz
push
std
mov
push
pop
int
in
int
xorb
sub
addr16
lods
aad
test
mov
pop
and
jbe
imul
adc
xor
jnp
sub
inc
add
mov
mov
mov
jae
jbe
cmp
loopne
js
xor
ror
dec
mov
fs
and
xor
subb
mov
popf
cmp
xchg
adc
ret
lods
nop
mov
mov
and
mov
std
push
pop
pabsb
mov
gs
pop
fcmovbe
xchg
push
pop
je
enter
decb
ds
or
cmp
cmp
mov
ror
mov
jl
lahf
push
addb
jecxz
and
cs
jbe
mov
pop
repz
pop
fcoml
xchg
popl
repz
out
xchg
sti
adc
adc
pop
mov
stos
jle
mov
adc
fdivrs
jp
inc
insl
pop
fildl
jnp
jp
idivl
cli
push
aam
xchg
test
sub
mov
push
divl
scas
aaa
ljmp
dec
add
cmpb
mov
dec
inc
push
lods
push
jnp
stos
sub
cmp
sar
mov
sbb
ljmp
mov
fdivrl
jl
jno
adc
leave
idivb
test
pop
std
mov
inc
push
or
sub
xchg
xor
cmp
sahf
xchg
push
adc
dec
xor
inc
sbb
ret
int
sub
shll
jmp
pop
push
fdivr
lcall
movsl
insb
pop
dec
push
dec
jmp
jmp
leave
outsl
xchg
xor
pop
icebp
and
ss
mov
aaa
lret
scas
mov
xor
xor
ja
and
inc
mov
icebp
push
sub
in
flds
add
pop
js
jl
mov
dec
and
subl
or
and
mov
lahf
test
xorl
inc
jbe
rcr
popf
inc
ds
push
data16
adc
jl
mov
adcl
insb
mov
sbb
arpl
adc
push
in
dec
cmpsl
mov
jg
mov
je
inc
movsl
xor
xchg
fnstcw
mov
aad
test
jae
jns
mov
loop
fs
mov
ret
test
mov
jge
lret
addr16
divb
mov
sbb
xor
push
lahf
xchg
pop
push
mov
in
ss
mov
push
xchg
mov
insl
ljmp
into
stos
lcall
bound
repnz
or
sbb
push
in
add
mov
fiaddl
and
xchg
push
cmpsb
pop
das
inc
test
fsts
pop
test
mov
cmpsb
dec
int3
imul
and
es
pop
mov
les
sahf
es
cmp
scas
xor
xor
test
jg
test
mov
loopne
in
xlat
dec
sbb
bound
xor
shrb
and
mov
fmull
xchg
or
mov
adc
dec
pop
xchg
mov
ja
fstps
cmp
mov
clc
shrl
iret
mov
movsl
out
test
jecxz
jae
adc
jg
pusha
pop
ficoms
push
push
shll
nop
movl
pop
mov
dec
fcmovnb
sub
fstpl
fwait
imulb
aaa
push
cmp
jae
movsb
sbb
sbb
cwtl
add
out
inc
xlat
lock
dec
pop
clc
mov
mov
neg
pop
inc
dec
sub
mov
add
popf
push
jg
adc
and
dec
cld
and
dec
fs
sbb
or
aas
push
js
and
adcb
jnp
add
push
cs
stc
and
mov
lret
add
xchg
jg
sahf
mov
aas
clc
mov
push
mov
fmul
mov
shll
push
dec
out
mov
mov
dec
movsb
inc
sbb
outsb
out
push
mov
lret
out
stc
cmp
mov
shrl
ss
loope
and
dec
sbb
mulb
mov
jmp
push
jne
push
imul
jne
adc
xorl
jns
jno
repnz
scas
clc
sub
bound
mov
repz
sbb
out
lret
add
lret
call
mov
sub
pop
sbb
push
out
pop
movsl
call
sti
fbstp
loopne
fwait
jns
int3
inc
ja
and
insb
xchg
mov
orb
jecxz
aam
aaa
rcrl
shr
test
insl
int3
out
mov
dec
shr
pop
xor
cli
lea
push
sub
dec
inc
outsl
jns
dec
scas
mov
aam
mov
cmp
inc
ret
dec
pop
test
adc
insl
add
daa
push
lahf
cltd
mov
outsl
rorl
sub
mov
xchg
out
pop
rolb
std
outsb
cwtl
cwtl
jne
xor
or
push
int3
dec
dec
push
xchg
and
jmp
push
xor
in
xchg
push
add
test
or
lcall
sbb
mov
pop
mov
or
dec
and
insb
sub
inc
aad
sbb
mov
hlt
xor
outsb
pop
jbe
push
mov
je
jne
gs
shll
and
jl
jmp
xchg
movsl
sar
pusha
sbb
jmp
icebp
jecxz
xorl
xchg
dec
pop
push
push
ffreep
or
adc
lahf
mov
je
add
into
add
xchg
fdivl
mov
pushl
adcb
xchg
lds
xchg
pop
fmul
int
pop
ds
iret
test
mov
out
pop
in
decb
mov
call
je
mov
hlt
fbstp
lock
fldt
mov
rorb
adc
mov
test
aaa
iret
je
jo
push
shl
xor
stc
and
in
movsl
cwtl
pop
repz
xor
mov
inc
cli
pop
lock
mov
stc
hlt
mov
fwait
mov
or
dec
psllw
fidivrl
mov
int
or
dec
das
cmp
jmp
cld
push
movsl
enter
out
ljmp
popf
cmp
jb
xorl
insl
sbb
push
neg
out
cmp
mov
cli
frstor
arpl
lods
imul
lock
dec
mov
add
imul
jl
pop
ror
sbb
inc
jp
cmp
xorl
cmpsb
xor
xor
mov
fisubrs
xchg
fs
shrl
cmpsl
cmp
int
test
xchg
aad
mov
in
sbb
arpl
ficomps
dec
fimull
sbb
dec
pop
xchg
cmp
and
mov
sub
mov
xchg
roll
jge
jns
cmpsl
int
jg
mov
lcall
insl
pop
jb
out
sbb
ds
nop
mov
or
push
clc
mov
sub
jecxz
aaa
inc
xchg
dec
lret
cmp
push
fcompl
sahf
addr16
and
iret
iret
mov
insb
jp
jnp
adcb
les
or
add
iret
mov
xchg
jl
popf
cmp
jp
dec
sub
mov
cmpsb
stos
mov
mov
pop
jo
rclb
lea
fchs
daa
movsb
lods
mov
lods
xor
out
push
cmpb
add
popf
out
fadds
hlt
rorb
lods
mov
xlat
popf
mov
js
lret
insl
add
dec
or
ss
fsts
lret
mov
add
insl
outsb
pop
out
adc
push
mov
xchg
in
jl
shlb
test
cmp
test
jne
loop
stos
push
cmovo
xor
cmp
mov
jo
jmp
pushf
mov
mov
push
jmp
and
loopne
stos
dec
insl
sbb
inc
push
xor
cltd
pop
scas
sar
imul
dec
mov
and
es
aad
and
fidivrs
sub
iret
outsl
mov
shrl
or
adc
inc
pop
cmp
add
sbb
push
cltd
or
das
movsb
das
es
in
lret
mov
xor
roll
mov
mov
mov
ss
cmp
mov
std
mov
loopne
je
xchg
pop
inc
into
sbbl
jne,pt
lock
out
lea
cmp
push
into
xchg
lods
incl
inc
sbb
scas
insb
sbbb
stos
stos
das
push
ficompl
adc
lret
outsl
je
and
faddl
xchg
pushf
sbb
imul
push
js
mov
mov
mov
rcr
enter
sub
sarb
bound
jge
or
pushf
push
jp,pt
fsts
inc
sub
add
inc
imul
int3
sbb
pop
mov
fcomp
clc
sarb
sub
push
insl
js
fwait
or
cli
outsl
cs
mov
enter
sbb
xchg
lahf
lds
add
movb
mov
ret
xchg
fs
cld
repz
pop
push
sub
mov
pop
or
pushf
out
in
pop
sete
dec
push
push
cmc
call
or
and
jecxz
inc
mov
add
adc
sti
aas
fisttpll
push
shll
and
imul
daa
subl
les
mov
or
les
pop
sbb
mov
loope
jns
and
test
jl
jp
repz
sub
iret
sbb
cs
stos
and
add
push
mov
or
and
cmpsl
dec
movsl
es
jge
pop
arpl
repz
ds
test
test
mov
mov
insb
push
adc
std
pop
jo,pn
jno
push
push
ficomps
xchg
mov
dec
imul
cmp
push
int
dec
mov
clc
nop
and
int
loop
pop
les
xor
jbe
cli
inc
pop
jbe
cmc
hlt
sub
popl
in
adcb
pop
mov
inc
sbb
inc
fs
stc
sarb
movsl
mov
ret
push
jns
insb
sbb
inc
mov
adc
mov
sbb
ss
scas
call
pop
xchg
push
int
int3
sub
add
stc
ds
dec
int
cli
push
pop
shlb
and
adc
adc
fdiv
and
lock
movswl
push
xchg
shll
xchg
stos
stos
sahf
and
sti
movsl
or
aam
cltd
xchg
jmp
inc
pop
lock
and
or
add
jp
cmp
jmp
push
scas
push
mov
pop
dec
push
xchg
mov
bndstx
jnp
cmp
dec
fisttpl
lcall
dec
fdivrl
jae
aad
jb
shlb
cmp
dec
ss
repnz
cmc
jg
call
jb
mov
mov
adc
mov
aas
mov
movsl
cs
mov
leave
sbb
cwtl
out
shl
jg
in
mov
pop
les
fildl
inc
add
sbb
jne
jns
rcrl
sbb
addb
push
outsl
fs
mov
enter
and
cmpb
add
inc
or
dec
repnz
loopne
pusha
lods
cmp
mov
jbe
adc
pop
cmpsl
mov
rcrb
fmul
jmp
add
outsb
dec
xchg
dec
idivb
mov
rclb
cmp
mov
rorb
pusha
push
mov
push
out
push
xlat
xchg
mov
shl
mov
dec
dec
sub
in
pop
sub
push
stos
shrb
push
loopne
add
stos
lds
xor
mov
outsb
scas
or
daa
lods
es
or
xor
rcrl
fbld
push
push
pushl
aad
inc
les
mov
mov
rcll
in
cld
cmp
mov
rcll
sbb
shlb
fbstp
cmp
mov
push
pop
or
in
out
xor
pop
inc
push
sbb
sub
loop
movsl
shrl
dec
cmp
jle
xor
adc
add
xchg
or
adc
sbb
daa
adc
mov
cwtl
cltd
mov
adc
cmp
lret
fidivrs
dec
jg
xlat
sbb
and
das
add
inc
dec
push
mov
sub
nop
dec
inc
repz
adc
xchg
loope
xchg
lds
lods
roll
adc
mov
xor
jno
mov
jne
mov
js
mov
mov
jno
movsb
daa
sbb
test
lods
xchg
les
clc
leave
cmp
mov
add
fadd
dec
pop
mov
cmp
add
enter
sub
fs
cmpl
and
mov
cmp
sbb
dec
out
mov
dec
push
xchg
add
js
jbe
in
mov
ja
jmp
mov
popf
out
dec
lock
dec
sub
mov
scas
notl
add
sbb
es
aad
mov
cmp
cmp
int
rorb
cmc
jle
gs
into
xor
inc
cmp
jecxz
cmpsb
movsl
cltd
xchg
mov
cmp
push
push
xchg
pop
mov
or
inc
clc
dec
aad
stos
dec
inc
add
cmp
push
or
sbb
or
jbe
les
push
cwtl
jge
pop
dec
inc
pop
mov
fucomip
pop
adc
mov
pop
cmp
jp
scas
lahf
push
imul
pop
loop
sbb
sbbl
push
mov
pop
inc
bound
or
jo
inc
ret
jnp
adc
shrb
mov
es
sbb
imul
push
fcomip
cwtl
call
in
punpcklbw
jmp
test
mov
inc
fmuls
jb
idivb
sub
stos
arpl
insl
mov
mov
push
jle
orb
icebp
adc
cmpl
and
shlb
inc
stos
xor
adc
push
int3
ret
scas
in
scas
sarb
roll
dec
in
inc
dec
jns
leave
pop
inc
stos
jnp
pop
add
aam
outsl
insb
insb
test
popa
fisubl
stos
test
mov
adc
ret
arpl
pushf
push
push
dec
mov
mov
adc
inc
repz
enter
add
popa
insl
ss
xorl
xor
cmp
inc
sbb
xlat
cmpsb
mov
movsb
inc
pop
daa
sbb
shlb
cmp
arpl
sbb
push
add
mov
xor
nop
jno
inc
in
fists
stos
imul
pop
nop
sub
xchg
cmp
push
mov
lcall
xorb
jp
inc
sub
aad
arpl
sub
jns
inc
cmp
ljmp
in
pop
and
inc
inc
repnz
mov
loop
push
aam
aad
sbb
cli
mov
jg
xor
jge
cmpsl
lcall
ljmp
jno
cli
in
cli
fwait
mov
push
mov
jp
mov
xchg
sub
pop
dec
pop
adc
mov
dec
rcl
dec
xor
or
lret
out
cli
popa
int
sub
jecxz
xor
std
jecxz
pop
inc
sbb
lock
pop
sub
insb
sarl
sub
lret
dec
outsl
fidivrl
pop
mov
cmp
push
ud0
inc
fsubrs
xchg
inc
mov
jge
leave
mov
push
add
sbb
lcall
ret
or
fiaddl
jbe
mov
xlat
xchg
loopne
cmp
sub
jno
enter
lds
or
sahf
cli
sahf
rcrl
add
cmp
mov
sbb
js
mov
ss
dec
subb
aaa
call
das
or
or
ficoml
gs
sbb
in
mov
sbbl
xor
add
cmpsl
and
sbb
pop
arpl
fnstsw
mov
inc
mov
inc
and
push
mov
test
mov
fidivl
insl
lods
dec
jmp
jmp
movsb
push
sub
jmp
imul
sbb
or
add
xor
push
push
cld
pop
mov
cmp
push
jecxz
imul
jg
test
and
aas
cltd
sbb
in
ss
cld
fdivs
pop
rclb
add
mov
mov
pop
cmp
cmp
xchg
cmp
movsb
add
stc
stos
xlat
lods
outsb
cmc
das
loopne
std
nop
dec
sub
pop
inc
push
sbb
mov
cmpsl
addr16
sub
mov
add
std
pushf
rcrb
add
jl
leave
push
sbb
cmp
das
or
stos
ret
jg
fdivrs
mov
pop
call
lods
pop
leave
lods
or
xor
fcompl
mov
sub
mov
fstp
push
in
adc
sti
pop
movsb
mov
shlb
lcall
je
jns
inc
cld
lcall
and
lcall
int3
push
out
in
lods
sahf
cmp
and
clc
aam
int
xchg
xlat
or
mov
pop
sarb
cmpsb
test
fcmovb
cli
inc
stc
xor
adc
add
outsl
xor
shr
mov
lcall
js
lods
mov
out
addr16
rcpps
nop
xchg
jbe
mov
cmc
mov
and
aaa
clc
jb
pop
sar
xchg
ss
inc
adcl
dec
jo
pop
xorl
sub
inc
and
std
outsb
cs
pop
out
clc
out
pop
dec
lock
shlb
mov
push
mov
mov
clc
out
insb
adc
fidivl
leave
fcoms
dec
pop
cs
jnp
adc
ss
je
ss
xchg
pop
xchg
add
jmp
orl
and
cltd
ja
jnp
repz
pop
out
ja
push
pushf
stos
adc
pop
and
je
int
outsb
shlb
mov
lret
dec
fcoms
sbb
int3
and
or
stos
mov
sbb
mov
fwait
jg
repz
out
movsb
fmuls
cmpsl
mov
out
jns
ljmp
call
xchg
fucomip
push
call
pop
fldt
xchg
cmp
cmc
pop
sub
into
dec
lahf
shll
push
std
je
pusha
inc
push
int
add
dec
xor
imul
rcrl
imul
pop
fimull
lock
iret
int3
inc
int
adc
int
push
xchg
out
inc
mov
or
sub
push
adc
notb
lret
test
in
sub
es
inc
pop
les
int
jo
push
mov
push
xor
jb
or
xor
orl
shlb
dec
cmp
outsb
jae
sbb
or
add
cmp
pusha
dec
inc
xlat
mov
sub
mov
mov
inc
mov
fiaddl
out
cmp
mov
hlt
jl
or
pushf
adc
pop
paddb
mov
fadds
fstpl
and
hlt
pushf
mov
ja
shl
orb
sub
in
add
mov
out
xor
movsl
aam
jns
mov
or
dec
repz
sbb
mov
popl
mov
inc
flds
cmpsb
je
js
mov
lods
add
sbb
movsl
mov
mov
mov
out
jmp
adcl
stos
in
divb
inc
sub
jmp
in
test
insb
daa
mov
shll
jno
jae
mov
test
mov
inc
test
loopne
mov
int3
xor
cmp
stos
jo
adc
mov
rcrl
mov
mov
xor
sbbl
cwtl
adc
aad
lcall
cmc
mov
push
insb
lods
je
xor
push
pushf
iret
mov
add
cmpsb
aaa
adc
testl
or
push
cs
xlat
xchg
shlb
cmp
aad
scas
and
sbb
dec
mov
fcoms
insb
orb
cmp
das
sbb
push
jns
inc
in
imul
jno
pushf
add
fsubs
cmpb
mov
dec
pop
test
push
jbe
inc
cmp
add
or
es
cmc
addr16
cmovl
mov
fwait
cmp
push
insb
sti
cmp
fsts
imul
ss
inc
mov
xor
inc
lret
mov
and
xlat
jl,pt
out
mov
ljmp
pop
pop
dec
add
imul
push
imul
rcll
cmp
adc
scas
daa
sub
rorb
mov
and
sbb
aam
js
cmp
push
test
jmp
or
fisubrs
in
pop
leave
jmp
push
pop
adc
or
inc
test
insb
adc
mov
test
xchg
gs
insl
xrelease
and
rcr
cld
mov
jl
push
out
mov
mov
icebp
fsubs
mov
cli
aas
mov
scas
mov
nop
fcomi
nop
rclb
lahf
aaa
dec
loop
and
pusha
loop
sarl
cltd
pop
loope
and
ds
shrb
in
sub
xchg
rcr
push
sti
pusha
fnstsw
xchg
hlt
les
or
jmp
inc
popf
xchg
je
and
add
inc
call
into
pop
es
pop
push
xor
inc
jbe
xchg
stos
adc
daa
loop
outsl
add
dec
cmp
jmp
inc
mov
push
mov
sarb
shl
aam
fisubrl
dec
jnp
and
jns
jl
test
nop
push
xchg
jb
sbb
pop
bound
cwtl
pop
mov
jne
add
icebp
sti
pushl
pop
popf
jp
push
es
dec
in
sbb
jnp
mov
aaa
xchg
dec
aaa
enter
outsb
inc
mov
dec
sub
adc
add
fdiv
mov
jbe
xor
out
movsl
lcall
or
mov
xchg
dec
sub
adc
jb
sbb
mov
add
mov
xlat
push
out
test
int
add
mov
sbb
jl
div
notl
xchg
adc
and
lret
add
loopne
lods
sbb
pushf
xor
xor
rcl
je
andl
mov
cmpsl
push
mov
push
pop
addb
add
inc
fwait
add
mov
loope
sbbb
jmp
cld
and
in
fiaddl
dec
fs
pop
pop
adc
ficomps
xchg
cwtl
dec
call
push
int3
inc
cltd
div
movsl
push
aad
sub
movl
xchg
xchg
add
sub
sti
daa
test
mov
icebp
cmp
or
and
enter
sub
ds
movsl
repnz
rcrb
lds
xor
pop
iret
xchg
in
inc
sbbb
arpl
inc
push
in
cmp
shl
lret
lahf
xor
nop
outsb
push
push
jl
cmp
sti
mov
mov
test
dec
arpl
xlat
cwtl
mov
aam
or
iret
sbb
outsl
nop
ljmp
rorb
jb
out
ja
add
add
out
mov
jmp
xlat
ret
jge
xchg
xor
in
imul
cwtl
mov
add
jp
loop
pop
cmpsb
cmc
mov
insb
sbbb
mov
push
push
fisttpl
jl
pop
mov
js
xchg
stos
fsubs
in
mov
mov
in
fstl
les
arpl
jp
sub
es
xchg
fimull
cs
pop
stos
hlt
iret
lock
sbb
aad
loopne
or
sbb
lds
add
lahf
cmc
lods
xorb
imul
jno
mov
sbb
pop
cmc
xchg
ds
roll
inc
sbb
sub
rclb
sbb
push
and
mov
repnz
aaa
mov
adc
sbb
and
inc
cli
mov
mov
pop
push
inc
icebp
mov
ror
cmp
adcb
pop
js
mov
jne
dec
mov
xchg
cmc
js
sub
jmp
loop
jp
es
loopne
repz
in
fs
hlt
mov
fprem
cli
outsb
pushf
mov
mov
or
xchg
add
mov
jne
mov
sub
push
jge
lods
push
mov
pop
ljmp
ds
ljmp
mov
and
mov
popl
in
cmp
cli
mov
sbb
lcall
sbb
jno
bound
faddl
sbb
testb
mov
pop
or
cmp
lret
pusha
dec
lcall
xchg
outsb
cwtl
push
or
mov
jge
push
or
push
out
sahf
mov
xor
test
rorb
inc
cmp
sahf
lahf
sub
and
add
adcb
ret
into
dec
cwtl
cmc
stos
movsl
mov
push
mov
cmc
scas
sub
pusha
jns
aad
mov
jmp
mov
adc
iret
push
js
cmc
test
push
adc
inc
jb
stc
data16
sbb
mov
jle
adc
aam
mov
imul
aaa
xchg
dec
mov
pop
test
sub
push
lahf
cmp
popf
fwait
cmpb
fnstenv
and
fst
icebp
mov
dec
cli
sti
inc
mov
loopne
imul
shlb
in
out
arpl
push
mov
js
lods
js
jg
inc
mov
fsubrl
xchg
cmpl
pop
mov
data16
dec
add
movsl
lret
xchg
sahf
adc
sarb
out
jae
popa
mov
dec
test
cli
idivl
mov
test
jbe
push
push
add
jmp
cmp
aad
inc
lcall
add
or
cwtl
lea
jo
adc
lods
push
subl
mov
cmp
pop
insl
xchg
jecxz
movsl
jns
adc
mov
rcrl
sbb
call
push
dec
sti
sub
je
xor
mov
fimull
jmp
xchg
stos
cld
fnstenv
lret
inc
jns
sbb
fs
shll
scas
xchg
fs
inc
sbb
jmp
sub
mov
stos
jno
ds
leave
rcr
stc
enter
fidivl
jp
out
out
lret
inc
sti
outsb
or
addr16
cmc
adc
aas
lcall
mov
add
mov
mov
xchg
or
sub
out
or
mov
clc
push
fwait
jnp
scas
or
inc
mov
jecxz
shll
pop
hlt
push
into
stos
ds
adc
jl
mov
push
je
cmp
inc
test
add
stc
sub
fstpt
in
mov
pop
and
lret
mov
cwtl
sbb
xchg
stc
test
and
mov
mov
test
jle
fwait
lret
cmpsl
or
xchg
incb
cs
cmp
out
arpl
iret
add
inc
pop
xchg
push
adc
push
mov
ds
inc
sub
repz
ljmp
dec
jbe
cs
pop
sub
mov
fcoms
inc
cmp
imul
mov
fs
and
les
repnz
cltd
lods
out
pusha
dec
nop
push
push
es
cmpsl
mov
or
fmul
frstor
cmpsb
and
imul
mov
sar
cli
jno
pop
out
in
sbb
or
adc
sbb
pop
iret
ja
xchg
mov
mov
pop
ret
enter
enter
and
fcomps
aas
je
xchg
ds
stos
add
jne
adc
popa
loop
dec
mov
insl
pop
inc
mov
fbstp
imulb
jmp
mov
mov
test
mov
xchg
jne
or
pusha
fmull
shll
xchg
jb
mov
inc
push
test
mov
cmovle
lcall
in
repz
iret
mov
cmp
jo
popa
movsl
popf
push
pop
cs
push
or
test
in
and
add
jo
sub
aas
pop
inc
call
push
vmread
cltd
and
add
loope
test
lds
mov
cwtl
pop
mov
jo
stos
in
into
sub
push
mov
jno
dec
decl
clc
mov
sub
xor
test
js
xor
shrb
dec
sub
mov
adcl
aad
arpl
daa
xor
cltd
mov
xchg
insb
out
adc
adc
sti
es
and
xchg
daa
mov
sub
cwtl
inc
push
sub
es
pop
pushf
and
mov
sub
mov
cmc
xor
ret
cmp
and
addr16
cwtl
pop
or
cltd
aas
and
adc
push
cmpsb
sbb
aam
and
jge
inc
jmp
sub
jb
cmp
sub
inc
outsb
push
filds
cld
xor
lods
sbb
xor
lods
sub
std
lock
push
jns
xorb
loopne
and
dec
xor
dec
or
dec
xchg
sbb
jnp
in
aaa
loope
leave
jp
fildl
mov
jmp
and
xor
jno
cwtl
int3
xchg
daa
arpl
imul
push
xchg
dec
push
xchg
aad
hlt
xor
xor
movsb
ljmp
xor
dec
pop
or
loope
adc
fadds
xor
inc
add
lcall
pop
inc
les
and
jmp
mov
mov
out
nop
cwtl
mov
call
cmp
lods
int
mov
cwtl
xchg
andl
mov
push
dec
xchg
in
or
mov
inc
je
jnp
lock
pop
jo
push
sub
cwtl
push
inc
lcall
dec
mov
insl
sub
dec
orl
dec
dec
insl
div
cli
cmp
int3
fidivs
pop
adc
shl
inc
sti
jbe
push
adc
push
scas
push
sbb
lea
sbb
adcb
mov
fidivs
pushf
addr16
jp
adcl
xor
mov
mov
mov
test
ljmp
push
call
inc
xchg
stos
cmp
push
enter
xor
or
pop
and
int3
pop
push
fmuls
scas
adc
stos
mov
ret
lods
lahf
xor
and
cmp
arpl
ret
mov
or
cld
imulb
negb
or
rorb
xchg
adc
arpl
pop
jle
mov
inc
xor
push
jmp
sarl
or
cmp
jne
mov
jg
cmp
xor
push
movsl
aaa
mov
mov
inc
mov
sub
enter
aam
push
fidivrs
ss
sbb
inc
decb
and
pop
push
inc
sarl
ljmp
mov
data16
mov
call
adc
hlt
sbb
inc
mov
ljmp
enter
sub
pop
sub
je
sbb
enter
mov
xor
pop
or
xor
or
push
daa
cmp
cmpsl
mov
icebp
dec
mulb
sbb
movsb
cmp
inc
lock
jle
lds
aad
pusha
mov
cmp
pop
outsb
idivl
and
fsubp
ds
jmp
and
adc
ret
or
iret
mov
pusha
les
jne
jmp
stos
jae
or
fsub
push
sbb
in
daa
adc
adc
outsl
test
pop
fistpll
dec
jnp
fsubl
jno
mov
inc
scas
sub
in
and
xchg
test
sub
imul
or
or
mov
movsl
adc
sbb
adc
aaa
popfw
mov
push
dec
orl
and
mov
fdivl
adc
push
xchg
into
fstp
dec
pop
inc
and
jecxz
sarb
adc
testb
addr16
test
imul
aas
jno
sub
dec
ret
pop
ja
sbb
popf
pop
cs
and
into
fwait
mov
dec
dec
jle
inc
adc
sbb
mov
sbb
maskmovq
idivl
int3
add
fcmovnb
call
add
adc
dec
ds
jae
jle
and
jmp
pop
pop
scas
out
push
fdivl
ret
and
xor
mov
adc
out
faddl
pop
repz
pusha
add
add
repz
jl
cmpsl
popa
dec
adc
inc
add
xor
ja
popa
dec
lock
xchg
dec
arpl
ss
and
daa
loop
popa
ja
lsl
mov
xchg
add
fwait
cmp
jne
ljmp
mov
xchg
rcl
hlt
add
ja
ret
adc
dec
add
push
aad
stc
adc
repz
jge
jmp
mov
lock
popf
xor
sbb
das
jl
xchg
mov
loope
mov
sahf
mov
lods
pop
push
fs
inc
or
sub
adc
out
imul
pop
pop
and
mov
jnp
cmp
push
sub
int3
cwtl
sbb
in
imul
ja
insl
adc
subl
cwtl
and
jg
mov
cmp
lods
cmpsl
cmp
lret
nop
mov
jb
mov
movsb
mov
xchg
cmp
mov
cmpsl
adc
ds
fbld
mov
lods
xchg
loop
subl
or
mov
js
push
jbe
jge
push
nop
lret
cmp
push
push
jno
js
xor
cmp
ja
push
loope
jbe
aas
push
hlt
dec
pop
int
cmp
cmp
out
push
jg
ret
addr16
jl
pop
das
test
insb
add
fucom
push
inc
pop
jge
jns
rcrb
sbb
add
cmp
out
jle
pop
push
adc
rol
mov
xor
aaa
roll
and
add
out
dec
dec
lods
jp
stos
mov
test
mov
dec
mov
icebp
mov
aad
in
repnz
mov
push
stc
movsl
mov
or
data16
adc
and
fwait
and
push
gs
sub
xchg
xchg
rol
in
fisubrl
pop
dec
cmp
add
movsl
iret
mov
xlat
orb
data16
hlt
fstpl
dec
bound
fmuls
mov
pop
icebp
js
imul
sahf
lahf
int
dec
rolb
es
nop
mov
in
xchg
cwtl
lods
pop
push
and
mov
int
dec
sub
mov
popa
mov
cmp
push
cmp
mov
mov
mov
movsb
cmpsb
ficoms
xchg
and
inc
mov
das
add
es
dec
bound
jno
movsl
arpl
jp
cmpsb
add
jmp
dec
sub
jmp
clc
jnp
mov
aas
fnstcw
fnstcw
test
sbb
push
cmc
out
out
jb
add
jg
inc
sbb
jae
mov
push
or
jno
jle
xchg
into
ret
hlt
shrl
pop
inc
sbb
fisttpl
in
mov
dec
xchg
xchg
xchg
or
xchg
fwait
les
das
push
and
adc
and
cmp
fs
icebp
data16
aaa
inc
cwtl
xchg
sbb
sti
repz
add
pop
fstp
pop
inc
jg
nop
pop
stos
xorl
leave
mov
cmpsb
add
or
and
or
xchg
xchg
adc
stos
mov
adc
addr16
test
mov
mov
and
cmc
xchg
lock
test
repnz
std
test
fistpll
in
adc
cmp
orb
cmpsl
les
out
mov
pushf
sarb
jo
adc
add
add
mov
stos
out
cmc
xchg
mov
sarl
in
push
mov
je
cs
pop
out
bswap
sub
inc
xchg
out
imulb
out
mov
push
push
push
test
inc
xchg
data16
and
xor
dec
mov
or
cld
jno
pusha
ret
sti
ljmp
add
adcl
add
es
or
lods
sbb
sbb
gs
cmp
cmp
movsb
mov
add
cmp
pop
aas
mov
cmpsb
push
adc
testb
sbb
in
adc
das
sub
ss
int3
movsl
or
ss
or
push
xchg
orb
rcr
cmp
add
cs
add
dec
jmp
pop
sbb
ds
scas
pop
mov
dec
loope
jae
popf
and
dec
mov
out
in
js
cmp
xchg
lock
mov
xor
mov
mov
mov
jg
and
mov
push
mov
mov
adc
loop
clc
cmpsl
xchg
pop
test
pop
in
push
jnp
push
test
dec
scas
adc
movsl
ljmp
mov
sbb
rclb
jae
aam
mov
mov
into
sti
cmp
pusha
insb
sbb
out
pop
dec
xchg
add
je
ss
sub
sub
outsb
mov
mov
xchg
inc
inc
ret
in
test
mov
pop
mov
lods
dec
mov
iret
incb
or
pop
aam
mov
push
and
enter
lea
cmp
mov
xor
jp
xor
jecxz
mov
sbb
jae
enter
gs
bound
jne
aaa
outsl
mov
mov
xor
movsb
fisubs
push
xchg
ja
add
lods
xor
pop
push
cmp
bound
cmp
pop
or
outsl
xchg
pop
inc
xor
in
xchg
xorb
loop
rcl
stc
or
ret
dec
xor
adc
mov
nop
jecxz
je
gs
das
fidivrl
movl
std
push
pop
imul
outsb
jbe
pop
push
push
inc
inc
push
jmp
jecxz
dec
into
mov
out
in
mov
mov
dec
or
fldenv
adc
inc
push
call
ret
popa
pop
sbb
repnz
pop
fwait
mov
mov
leave
pop
push
lods
sti
dec
adc
and
in
xchg
xor
lock
lret
adc
mov
mov
or
xor
or
das
mov
or
add
lods
loope
push
in
in
cmp
adc
dec
inc
mov
pushf
cmc
or
jp
aam
sub
jp
test
add
push
ds
adc
leave
push
inc
xor
test
xchg
mov
lret
imul
test
incl
lcall
dec
ror
inc
pop
ds
shl
test
dec
push
scas
aad
aam
jne
js
sub
cmp
jnp
stc
xchg
inc
jl
or
mov
add
jo
fwait
aaa
mov
dec
and
pop
stos
inc
in
out
clc
lahf
add
ja
lea
test
repz
push
xchg
add
jmp
testl
test
pusha
sbb
je
dec
scas
jle
push
mov
jnp
stos
in
jle
bnd
insl
inc
pop
xor
test
jns
inc
mov
push
loopne
mov
or
out
daa
imul
roll
dec
sbb
fsubs
push
add
mov
dec
push
xchg
in
dec
cld
push
aaa
jl
push
call
cmp
fdivl
div
sahf
addr16
fs
mov
inc
push
pop
js
push
daa
mov
dec
in
jae
aaa
sbb
fmull
or
cmpl
cmpsb
call
inc
and
sbb
out
sbb
aaa
jb
sub
push
inc
enter
call
or
stos
movsl
mov
popf
jle
inc
inc
jg
cmc
sbb
cmp
enter
scas
mov
and
xor
xchg
and
pop
rcll
mov
mov
sbb
adc
cmpsb
data16
cmovp
out
push
imul
mov
add
push
mov
cmp
rcl
xchg
or
cli
sbb
add
lods
xchg
insl
nop
dec
aas
test
xchg
cmpsb
lret
sahf
mov
cmpsl
sbb
push
and
xchg
inc
movl
cmpsb
sbb
rcll
fistl
adcb
dec
xor
sub
sahf
mov
pop
dec
cmp
out
iret
lods
scas
cmpsl
fnstcw
adc
xlat
lds
dec
mov
dec
xlat
sbb
push
rcr
adc
int
or
dec
jge
bnd
outsb
rolb
cwtl
xchg
rolb
dec
clc
clc
fsts
jno
repz
mov
jne
mov
push
jb
xor
add
pop
hlt
ret
inc
daa
orl
cli
bswap
out
fwait
cmp
jns
repnz
add
nop
lock
stos
js
ss
mov
inc
gs
mov
sub
outsb
mov
mov
ret
test
push
mov
popf
jo
jae
in
ficompl
scas
fisubrl
dec
lds
rorb
loopne
testl
lods
mov
in
mov
ss
je
mov
adcl
push
out
mov
cld
cmp
dec
jo
cld
lea
mov
xor
lret
sub
sarb
push
cmp
inc
repz
pop
sbb
hlt
sbb
mov
jno
es
jecxz
fisubrs
xchg
add
pushf
enter
popa
push
icebp
xchg
xor
sub
and
scas
out
imul
xor
xor
aaa
fistl
pop
xchg
pop
mov
loope
ret
xor
addr16
jnp
arpl
ds
movb
xchg
fcompl
mov
xlat
jmp
enter
sbb
sti
iret
pop
cmp
lret
or
nop
test
cmpsb
xchg
pop
sar
jp
sbb
inc
jbe
ficomps
mov
jo
cmp
inc
movsb
aaa
fldl
mov
mov
pop
cmp
ja
leave
fdivrl
or
push
out
xchg
pop
jo
or
int
dec
xor
mov
add
out
cmp
mov
and
lret
cmp
cmp
fcmovu
ret
mov
lahf
cmp
add
data16
and
nop
mov
pop
stos
sub
push
xchg
push
mov
cmpsb
inc
testb
shll
hlt
in
pop
lds
mov
fcomps
loopne
fwait
pop
sbb
jo
adc
fwait
push
mov
stos
enter
add
in
cmpsl
push
js
imul
enter
out
mov
loop
ret
jne
test
mov
mov
xchg
loop
dec
or
lcall
pop
jecxz
daa
aam
mov
dec
sarl
pop
add
leave
and
mov
mov
std
and
stos
dec
fnsave
stos
push
cmp
scas
ret
mov
push
cmp
hlt
pop
ja
rcl
dec
jne
repnz
fdivrl
bound
sub
add
inc
sbb
or
insl
fsubrs
inc
sub
or
popl
xor
adc
sub
jb
loop
inc
ja
dec
mov
in
out
push
andb
in
mov
jecxz
inc
mov
dec
insl
bound
mov
push
cmpsl
sbb
pop
bound
mov
out
dec
dec
cltd
jg
mov
add
fadds
push
icebp
cmpsl
xor
mov
push
test
lods
fld1
lahf
add
mov
adc
or
dec
outsl
aad
jl
mov
es
call
int3
stc
repnz
mov
movsb
aas
sbb
push
and
scas
inc
js
xchg
push
ljmp
cmp
mov
daa
data16
in
sub
jmp
xchg
mov
lcall
mov
fistpll
adc
shrb
aad
pop
test
mov
sbb
shlb
rcrl
add
lret
sbb
cmp
fcoml
sub
mov
outsb
sub
add
sahf
mov
cmpsb
push
xchg
push
dec
inc
mov
mov
ljmp
xchg
subl
cltd
std
inc
cld
mov
decb
int3
dec
ret
add
insl
and
imul
test
fmuls
pop
lcall
inc
or
jo
xor
arpl
pushf
cwtl
scas
jecxz
ss
xchg
sarl
push
cmp
shlb
test
rcrb
out
sub
sbb
or
pop
mov
mov
fsubs
dec
xchg
pop
add
pop
cmpb
adc
jle
and
sub
inc
xor
cli
or
fwait
inc
dec
into
xor
shlb
insl
sub
push
mov
mov
inc
mov
xor
push
xchg
mov
cmp
loop
xchg
lahf
mov
mov
add
mov
mov
sub
push
sti
lds
pop
pusha
loop
mov
pop
xlat
jle
adc
xchg
repz
rcll
jnp
fwait
lahf
inc
js
pop
cmc
mov
mov
jle
cmc
lock
ss
pop
pop
or
sub
out
sahf
xlat
mov
rolb
stos
lret
into
xchg
sub
cmp
push
mov
loopne
cmp
adc
xor
outsl
mov
pop
dec
sbb
adc
movsl
ljmp
shrl
sub
leave
pop
lahf
cwtl
lret
movl
addr16
push
sbb
sahf
jmp
mov
fcoms
adc
pushf
cmc
push
or
cmpsl
adc
push
mov
cmp
pop
test
ja
fstp
movsl
mov
mov
mov
fstl
imul
cmp
mov
or
sbb
inc
testb
pop
mov
and
in
sahf
popa
xor
dec
and
mov
mov
dec
daa
jl
and
in
sub
imul
mov
int
dec
rclb
xchg
sub
cmpsl
pop
jno
add
cld
mov
xchg
repz
adc
push
sub
out
sbb
dec
insb
pop
add
fwait
push
push
adc
jnp
xor
das
popf
pop
jl
mov
pop
and
sahf
and
pop
cmp
and
jo
cmpsl
adc
enter
xchg
mov
push
push
lds
imul
jnp
cmp
inc
pushf
test
mov
pop
dec
enter
in
dec
lahf
int3
xchg
lods
imul
inc
adc
int3
into
cmp
lea
push
neg
dec
push
sbb
pusha
dec
repnz
rorb
jns
addl
repz
xchg
add
cmpsl
pop
ljmp
inc
xchg
fistpl
cmp
pop
push
ja
imul
cmpsb
xchg
std
int
pop
cmp
jp
jnp
mov
cwtl
fcomps
mov
pop
gs
js
sti
popa
inc
and
daa
and
scas
movsl
ret
xchg
add
jae
or
mov
mov
xchg
pop
int3
lahf
add
and
push
bound
sbb
add
jnp
push
lods
lret
add
sbb
call
cwtl
pop
xchg
mov
nop
push
jb
jo
sbb
sbb
mov
adc
cmp
sbb
adc
repnz
sub
cli
push
mov
fdivrl
sahf
jae
pushl
dec
imul
int
out
adc
cmp
orb
sub
fmulp
sbb
scas
mov
cmp
mov
or
mov
lea
push
add
mov
addb
xchg
cltd
push
repnz
call
arpl
int3
push
mov
dec
sahf
jb
jnp
aaa
jge
and
inc
movsb
mov
int
pop
and
ret
js
or
dec
sub
xchg
loopne
aaa
adc
push
and
jb
xlat
mov
subl
inc
fwait
out
test
xor
jl
pop
xchg
sub
repz
sbbb
dec
xlat
imul
xchg
mov
push
mov
aam
mov
xor
or
fisubl
inc
pop
rol
push
ja
sbb
jae
mov
push
daa
movsl
jns
test
or
loop
icebp
frstor
jno
jge
sub
dec
cmc
sbb
inc
add
mov
rorl
mov
mov
xchg
jp
inc
addr16
mov
shll
cld
mov
testl
and
cs
inc
xchg
std
mov
pusha
in
int3
aam
fwait
cld
lret
cmp
loopne
imul
in
xchg
add
add
cwtl
mov
ds
and
inc
cmpl
ret
arpl
test
and
dec
int
stos
dec
fiadds
add
loope
or
testb
jnp
scas
aas
out
pusha
pop
cltd
pop
jbe
gs
push
lea
and
push
adc
xchg
out
test
out
es
outsb
fwait
pop
xor
bnd
ljmp
ficoms
call
pop
mov
xor
pop
or
ret
mov
pop
clc
sub
test
adc
dec
jp
lock
mov
xchg
dec
sub
popf
mov
leave
data16
les
and
xchg
pop
iret
mov
jle
fiaddl
sbb
mov
ja
fldenv
test
popa
icebp
cmp
or
fwait
into
and
and
mov
add
sub
mov
test
push
push
push
sbb
pop
pop
and
sbb
sub
push
push
dec
ret
mov
pop
pop
cmpsl
ljmp
scas
int3
push
fbstp
xor
cltd
sub
int3
ljmp
dec
ret
popf
push
xchg
dec
push
outsl
xchg
pop
xor
and
inc
push
xchg
inc
or
fs
cwtl
mov
lods
sti
imull
push
mov
insl
js
mov
stc
mov
dec
pop
and
jnp
push
cmp
sbbb
push
mov
add
jl
out
fisubrl
stos
adcb
loope
inc
ds
dec
insb
xchg
bound
in
lahf
and
repnz
mov
add
pop
xor
jecxz
cmpsl
jp
cs
mov
mov
into
jle
jl
jbe
inc
testl
lret
imul
std
ret
adcb
dec
mov
mov
pop
loop
dec
jae
lds
lea
inc
scas
sbb
pop
mov
lahf
xor
dec
mov
inc
ss
cmp
sub
orl
sub
inc
ret
adc
jl
xchg
inc
out
cmp
mov
mov
mov
mov
dec
hlt
pop
sub
ficompl
sub
mov
pushf
imul
mov
cmpsb
push
mov
hlt
jmp
insl
nop
stos
mov
jl
pop
scas
test
icebp
shll
jnp
stos
cmc
sbb
xchg
mov
jns
ja
inc
iret
xor
sahf
sub
popa
lods
mov
leave
mov
mov
ret
std
outsl
jno
aad
int3
iret
and
adc
xor
push
xchg
loop
pusha
aas
neg
xchg
mov
stc
add
daa
jl,pn
cmpsl
push
push
dec
push
shlb
faddp
outsl
cmp
inc
push
mov
fimull
stc
sbbb
inc
rcr
xchg
das
inc
test
jnp
dec
gs
ljmp
sbb
cmpsb
mov
or
pusha
iret
lret
push
aaa
add
xchg
lret
lods
inc
jg
out
mov
ficoml
ret
lods
fs
andl
rcrl
popf
lds
stos
inc
repz
push
hlt
aam
jo
movsb
das
sbb
orl
in
lret
sar
adc
fidivs
lret
gs
push
inc
cmp
gs
pop
test
mov
mov
or
inc
adc
sti
and
xchg
mov
sub
lods
mov
mov
pop
std
and
outsl
mov
mov
mov
outsl
or
add
mov
out
push
repz
xor
jnp
sarl
dec
inc
xor
xchg
pop
iret
je
loope
shlb
xchg
adcb
mov
and
jmp
xor
les
pop
cmpsb
popa
test
ret
xchg
and
enter
or
mov
test
pop
push
inc
cltd
or
add
test
cmpsb
cmp
pusha
outsl
dec
mov
push
dec
inc
sub
fnstcw
push
push
mov
mov
add
xchg
lods
lea
cmp
arpl
jg
adc
xchg
js
pop
pop
dec
or
xchg
int
sub
icebp
mov
and
add
mov
jmp
adc
in
mov
pusha
fildll
sbb
xchg
pop
inc
ss
mov
ja
bound
inc
into
insb
insl
jp
test
test
test
mov
cmp
pop
add
adc
aam
and
mov
test
insl
xchg
and
fstp
call
out
test
xchg
add
pop
mov
jb
ret
cs
jl
pop
mov
push
addb
jno
cld
test
add
dec
adc
sarl
aad
rol
in
mov
les
inc
fs
sbb
jns
scas
cmpsl
popf
cmp
cld
icebp
adc
jg
mov
test
mov
ja
mov
andb
test
and
mov
sbb
and
sbb
out
lcall
in
subb
push
stos
mov
jns
fcomip
decl
fmulp
fs
out
pop
mov
or
je
aas
dec
push
push
out
sbb
inc
das
and
pop
inc
or
push
arpl
and
clc
in
pop
jno
cwtl
fxtract
movl
mov
inc
jl
push
stc
or
inc
frstor
mov
pop
jp
jl
js
dec
pop
xchg
jbe
pop
test
int
shl
sahf
jne
addr16
push
cs
pushf
int
ficoml
mov
sub
fdivrl
pop
lock
jl
sub
or
add
push
push
inc
das
repnz
cmc
mov
cli
jb
inc
push
mov
pop
fucomip
insl
mov
add
inc
andb
test
jnp
mov
es
mov
and
lea
jmp
sbb
dec
jg
pushf
mov
cmp
je
bound
cltd
mov
and
out
add
lods
push
and
sbb
rcl
pop
jg
mulb
aad
movsl
pmaxsw
es
add
into
or
pop
adc
movsb
sahf
mov
xchg
repz
add
mov
dec
les
arpl
xor
mov
add
dec
jecxz
mov
popa
cmp
push
fdivr
repz
add
dec
jmp
ljmp
mov
pop
sbb
mov
lods
pop
xchg
insl
jo
xor
jl
in
xor
sbb
xchg
pop
fimull
jp
ds
push
ret
stos
mov
push
inc
repz
std
mov
jle
test
in
lret
pop
call
jne
lds
adc
jne
and
or
or
mov
imul
add
jmp
lock
lret
fiaddl
cmp
pusha
repnz
xchg
cwtl
xor
push
dec
xchg
mov
sub
jnp
add
pop
push
aas
lds
mov
pop
or
push
dec
mov
mov
mov
fwait
cs
es
mov
fsubrs
out
icebp
or
bound
inc
and
into
inc
cmpsl
in
das
fcmovbe
adc
dec
pop
rolb
push
inc
mov
movsb
pop
dec
jns
ret
mov
dec
adc
or
gs
mov
cwtl
pop
and
or
stos
int3
xchg
sbb
stos
rorl
in
mov
cs
sahf
adc
insl
or
xor
mov
in
mov
or
pop
out
clc
and
or
aas
dec
repnz
popa
and
rcrl
loop
stos
jne
xor
cwtl
cmc
in
push
sbbb
icebp
ret
dec
push
les
aaa
ds
push
mov
mov
cld
xchg
mov
cmp
jno
cmp
mov
xchg
test
aaa
popf
imul
jmp
cld
adc
push
mov
fstl
xchg
mov
fwait
inc
and
insb
cmp
shrl
daa
push
inc
push
mov
mov
cmp
mov
fs
out
xchg
and
mov
loope
sarb
push
inc
out
test
in
xchg
push
xor
pop
sub
mov
les
dec
mov
dec
stos
xchg
mov
mov
xchg
sbb
out
dec
lds
imulb
pop
sbb
cmp
pop
repnz
push
mov
int
pusha
xlat
inc
or
inc
sub
ljmp
mov
pop
lret
in
or
jb
mov
mov
lods
movsb
outsl
rol
or
jmp
aaa
adcb
adc
jo
fadd
pop
fistl
push
lods
sub
mov
push
add
aaa
fbstp
cli
sub
test
xchg
xlat
inc
ret
jp
mov
sti
mov
testl
enter
fwait
pushf
repnz
adc
movsb
jle
ja
mov
icebp
mov
cs
push
repnz
adc
xchg
adc
push
xchg
adc
inc
lock
cmp
push
loope
pop
enter
pushf
pusha
sub
or
fmul
shll
and
adc
fsubs
sti
ljmp
inc
insb
xchg
jnp
pop
test
sbbl
push
std
sarl
shll
ror
sbb
leave
xchg
addr16
out
outsb
lcall
pop
mov
cld
mov
out
dec
add
jb
imul
lahf
or
push
pop
sbb
xorb
cld
out
mov
addr16
incl
popa
cmp
xor
subl
cmpsl
push
jle,pt
pusha
aaa
int
cmpsb
mov
in
popa
daa
mov
lds
gs
aas
xchg
and
lea
lds
xchg
fidivrl
test
popa
and
frstor
scas
xchg
nop
sahf
fldl
or
leave
mov
mov
lret
mov
ret
add
mov
enter
adc
xchg
movsl
rcrl
adc
jle
and
int3
div
adc
test
mov
ds
test
leave
pushf
push
pop
xor
xor
dec
jb
std
fstl
sub
inc
and
xchg
xchg
mov
sub
lods
fdivl
jp
dec
mov
or
stos
ds
inc
test
jne
add
cmp
mov
push
imul
and
pusha
jns
leave
push
adc
js
dec
pop
popf
add
xchg
imul
ficompl
shll
cld
xor
xchg
sub
popa
jge
adc
push
mov
inc
push
rcl
sbb
test
xor
mov
in
xlat
cs
pop
mov
iret
push
xor
dec
testb
cltd
adc
cmpsl
ret
adc
test
jb
jns
add
popa
push
fimuls
stos
lcall
cwtl
cmc
pop
mov
pop
andl
push
lret
fnsave
mov
mov
mov
cmpsl
stos
cmp
mov
mov
fadds
in
mov
arpl
xchg
pop
xchg
lock
and
xchg
cmp
je
mov
je
out
jne
add
xchg
mov
das
xchg
mov
mov
inc
adc
fisttps
fldcw
sub
gs
sahf
jecxz
mov
cmp
pop
addr16
mov
cmp
xchg
cli
enter
mov
add
xchg
xor
push
xchg
fisttps
scas
mov
out
insl
xor
cmp
lods
cmp
mov
addr16
sbb
in
xlat
insl
mov
mov
rcr
xchg
sbb
inc
icebp
lret
push
jl
jecxz
mov
repz
ds
pop
pop
or
ja
dec
scas
inc
stc
cld
or
xchg
mov
fs
jno
cmp
pop
mov
fs
sbb
arpl
sbb
fimull
stos
inc
lcall
jb
or
lea
in
mov
pushf
mov
pop
xchg
int3
and
mov
repnz
pop
mov
call
xchg
test
iret
sahf
out
pop
test
xlat
jns
jmp
adc
loop
int3
or
in
test
sbb
pop
adc
pop
cld
jo
int3
pop
mov
sub
and
test
lahf
mov
shll
int3
rol
enter
aaa
ljmpw
xchg
dec
xor
js
aam
fxch
or
lahf
mov
out
push
xor
lods
pop
aas
xor
cwtl
in
mov
xor
cmc
loopne
fcmovne
popa
xor
les
subb
jno
xchg
popf
mov
ds
in
repz
inc
and
scas
iret
lahf
jge
mov
mov
movsl
pushf
xchg
mov
gs
filds
pop
pop
or
sbbl
cmp
dec
leave
dec
pop
xor
jbe
stos
push
add
pop
mov
sub
xchg
mov
mov
add
cld
ja
pushf
cmpsb
jecxz
mov
stos
mov
out
into
xchg
or
lods
sub
add
loope
mov
push
test
xchg
aas
stc
mov
les
add
test
pop
ds
add
mov
rcr
fdivrs
sbb
add
dec
mov
or
mov
pop
sub
or
or
pop
or
mov
and
imul
mov
inc
jge
sub
loop
movsb
sbb
pop
push
test
mov
mov
xorl
and
xchg
cmpsb
push
jp
inc
leave
ss
xchg
sub
xor
fmuls
and
pop
int3
mov
int
loop
lret
insb
dec
fbstp
cli
movsb
cmp
sub
cmpsl
ret
bound
or
rcl
lods
adc
cmpsl
jge
int
or
loope
clc
pop
push
inc
xchg
int
mov
mov
push
add
sahf
int3
pushf
aas
fdiv
mov
xchg
and
aas
pop
cmp
xor
ljmp
nop
rol
in
adcl
cmc
popf
imul
fwait
loopne
ja
aaa
mov
negl
mov
scas
test
ficompl
and
or
push
and
js
add
pop
je
sti
sbb
shrl
push
push
icebp
nop
in
shlb
cmc
sbb
jbe
outsl
add
pop
nop
mov
frstor
clc
cs
mov
rep
push
xchg
fidivs
push
stc
sbb
scas
fmulp
add
xlat
imul
push
push
mov
std
adc
icebp
fidivrs
or
push
outsl
and
loop
sub
dec
sub
insb
int3
add
cltd
fwait
add
add
clc
je
lcall
or
jno
stc
cld
push
in
iret
or
dec
cmc
test
cmp
lcall
mov
fwait
enter
outsb
mov
pop
cmpsl
aam
fimull
xchg
sbb
ss
mov
jp
inc
imul
out
cmpsl
cmp
sti
push
adc
popa
or
sub
push
xchg
dec
push
push
in
and
xor
clc
mov
inc
xchg
inc
xor
cs
sbb
add
movsl
das
or
add
bound
icebp
xchg
jg
xor
cmpsl
mov
mov
pop
mov
or
mov
jecxz
nop
adc
mov
inc
mov
dec
add
mov
imul
inc
xchg
ja
stc
mov
test
cmc
push
add
push
shlb
in
mov
jns
and
jle
cmp
jno
popl
jo
int3
inc
inc
cs
pop
jb
cmp
dec
mov
push
or
inc
sti
jecxz
call
and
rorb
out
hlt
push
dec
jmp
sysexit
movsb
sbbl
or
sbb
xchg
and
mov
sbb
push
aaa
mov
jne
out
lcall
sub
and
jecxz
push
xor
aaa
cmpsl
xor
inc
fldenv
shl
dec
sbb
cmc
sahf
cltd
lds
int3
fcoms
ret
dec
jnp
loop
mov
pop
dec
mov
cmpsl
adc
push
inc
push
lock
xchg
aad
stos
add
push
or
ret
mov
dec
mov
xor
lret
loop
mov
daa
xchg
jns
and
sub
fcomi
loope
imul
fsubrs
jo
dec
cmp
scas
inc
and
push
in
leave
xor
and
push
push
les
shrb
adc
divl
movsl
xor
push
cld
push
jg
jo
ret
dec
aam
adc
adc
and
dec
adcl
sub
pop
mov
popa
mov
imul
and
ds
dec
popa
lea
fdivl
and
fdiv
imul
mov
pop
or
jno
pop
cmpsl
xor
cld
xor
or
and
jmp
nop
out
in
and
lcall
mov
scas
das
nop
shll
xchg
stos
xlat
ljmpw
and
inc
push
lcall
push
out
cmp
cwtl
sub
hlt
hlt
push
insb
jo
movsb
jecxz
roll
notl
popa
jge
iret
jne
jp
pop
js
pop
sub
xchg
mov
mov
cli
or
xchg
jae
clc
out
xchg
mov
pop
or
jne
pop
rclb
loop
xor
arpl
pop
mov
push
inc
stos
sbb
jo
mov
mov
dec
ja
sbb
pop
inc
jbe
xor
mov
xchg
inc
or
xorb
mov
bound
pop
jnp
imul
jecxz
push
imul
xchg
rclb
faddl
add
arpl
inc
pop
inc
jp
fiaddl
or
sbb
ss
sbb
pop
adc
sarl
dec
lods
out
rolb
stos
das
pop
add
adcl
dec
shlb
xchg
outsb
es
adc
cvttps2pi
movsl
nop
adc
dec
fcoml
into
mov
shrl
mov
xor
imul
push
mov
add
popf
insb
and
xchg
sbb
cmp
movsl
cld
dec
or
inc
pop
xchg
movsb
in
and
xchg
sbb
imul
lcall
dec
xchg
and
mov
cld
rorb
dec
test
repnz
or
lret
pop
mov
mov
pop
scas
mov
aad
mov
push
leave
or
aam
add
negl
lcall
test
jg
mov
adc
add
xchg
pushf
mov
lods
in
xchg
adc
mov
lods
jne
bound
mov
sub
xchg
negb
mov
outsl
pop
outsb
mov
dec
aaa
out
xor
mov
or
dec
xchg
out
jp
out
packssdw
adc
outsb
insl
aad
jle
fwait
jb
xor
imul
mov
push
ljmp
dec
fiadds
inc
dec
xor
fs
iret
adc
jo
mov
subl
shlb
push
out
push
pop
inc
mov
jns
shl
jne
cmp
aam
sbb
push
and
xchg
cmp
daa
movsb
call
mov
mov
sub
add
mov
dec
cmovl
cmp
lret
hlt
ficompl
nop
xor
jbe
sahf
cli
push
test
xor
loop
inc
fiadds
jle
scas
jbe
jg
lds
xchg
fucomi
cmp
pop
aam
test
pop
or
add
outsb
mov
popf
inc
aam
cmp
dec
push
sbb
or
xchg
fcmove
lcall
data16
pop
mov
shr
add
shlb
xor
cmp
xor
jnp
decb
add
or
cmp
inc
add
push
xchg
mov
xchg
pop
imul
push
mov
sub
mov
cmpsb
icebp
jb
xor
daa
hlt
jnp
out
jg
aas
pusha
dec
mov
test
xchg
mov
jbe
cmp
out
lahf
enter
jmp
mov
mov
inc
push
adc
jne
sub
nop
push
fcomp
popa
jbe
add
and
stos
dec
inc
or
pop
and
ret
pop
ljmp
lds
fwait
cs
loope
mov
cltd
mov
pop
sbb
in
xor
test
xchg
mov
mov
cmp
out
test
pop
add
test
orb
ja
mov
xchg
inc
ror
lret
pop
xor
std
scas
imul
inc
mov
add
mov
addl
out
xchg
aad
cli
sti
push
in
stos
pushf
adc
scas
out
rolb
mov
add
pop
jae
mov
jge
loopne
dec
pop
mull
stos
inc
sub
sti
mov
dec
mov
inc
xor
ds
icebp
cmpsl
movsl
scas
movsb
and
mov
lea
dec
fs
sbb
sub
cli
stc
or
sbb
jl
outsl
decb
mov
inc
xchg
dec
cmp
dec
call
enter
sub
and
mov
mov
fdivl
icebp
inc
insb
dec
ret
mov
aas
mov
outsl
insb
xor
inc
lcall
movsl
cmc
jge
lds
push
inc
jno
out
mov
sub
mov
scas
iret
cmc
mov
and
cmp
or
sub
xlat
xchg
insb
mov
in
mov
mov
xchg
fisttpl
jnp
mov
lret
pop
mov
push
sarb
sub
dec
rcrb
cmpsl
lea
and
outsl
mov
or
sahf
js
or
jbe
out
loopne
xor
and
ljmp
pop
pushl
call
fbstp
mov
leave
pop
sub
sub
clc
mov
and
mov
lods
icebp
push
pop
jns
test
jle
mov
pop
mov
orl
or
fsubrs
or
mov
repnz
imul
xor
xchg
mov
lock
mov
pop
xor
push
cmp
shlb
aam
sub
cmp
loop
shr
mov
mov
xchg
lods
jae
inc
and
es
sbb
sbb
mov
and
div
pop
mov
ss
movb
xchg
push
or
add
xchg
sbb
xchg
daa
pusha
xchg
cmpsl
xchg
mov
cmp
xor
inc
imul
push
iret
ds
mov
cmc
int3
xchg
push
cs
mov
mov
fwait
ret
lret
js
jge
jp
cmpsl
nop
and
dec
js
mov
test
cltd
add
cmp
jle
lods
rcrl
sub
stos
pushf
arpl
in
je
or
push
icebp
addb
pop
and
aam
push
xor
sub
iret
mov
cltd
fldl
js
into
push
inc
push
adc
fwait
cmp
push
push
cmp
in
loopne
outsb
lret
sub
fimuls
cltd
sbb
fsubr
mov
nop
lea
lret
inc
mov
jg
imul
add
outsb
hlt
stos
push
sub
aaa
sbb
out
push
inc
cmp
mov
cltd
sub
sub
movsl
jae,pn
or
cmp
mov
mov
in
mov
xchg
scas
cmp
sar
lods
int3
adc
xchg
push
xchg
notl
xor
xchg
fldl
test
lods
test
repnz
xor
in
sarb
loopne
sti
popa
cmp
fldenv
dec
sub
mov
mov
inc
and
out
cmp
icebp
icebp
jne
xor
mov
mov
sub
loop,pn
clc
push
jecxz
jns
fwait
popa
sub
xlat
movsl
movsl
sbb
and
add
inc
int
clc
push
adc
sbb
sub
xor
adc
and
adc
popa
dec
test
cwtl
or
mov
xor
xor
adc
aas
outsl
inc
dec
fistpll
scas
nop
mov
pop
popf
pop
inc
adc
jns
test
pop
daa
and
dec
cmp
clc
pop
push
adc
jle
lock
insl
in
or
sub
leave
lcall
fs
xor
dec
xlat
sahf
pushf
and
mov
mov
in
ror
and
insb
shl
scas
add
movsb
movsl
jno
fistpl
cmc
and
rorl
or
stos
inc
ret
mov
loope
pop
andl
hlt
push
mov
test
push
mov
mov
push
mov
dec
dec
inc
sub
enter
stos
push
pop
push
push
mov
mov
sahf
ljmp
mov
adc
dec
xorb
popf
pop
mov
mov
push
stc
xchg
adc
and
shr
and
out
call
xor
or
loop
idivl
mov
mov
pop
addr16
add
sbb
in
pushf
push
ret
mov
sub
orb
into
dec
lods
sbb
addr16
jmp
adc
xchg
mov
push
jle
jae
lret
sti
stos
dec
rorb
mov
add
mov
aaa
repnz
ja
cmc
pop
bound
das
call
in
in
test
jp
fs
push
daa
and
out
dec
or
fisubrs
dec
push
xor
sub
inc
je
and
and
repnz
fdivr
cmc
in
clc
imul
cli
pop
inc
or
pop
sub
popa
sbb
icebp
mov
std
mov
cmpsl
mov
in
xor
arpl
in
mov
ja
xor
test
jge
add
je
js
xor
out
mov
dec
mov
and
aam
mov
push
icebp
fwait
cmp
sbbl
gs
xchg
cmp
hlt
xchg
sub
jle
in
pop
cltd
loop
dec
call
jns
pusha
fists
aas
lds
ljmp
xor
rorb
or
fldcw
aam
inc
jae
insb
xor
daa
fucomip
test
jg
mov
sbb
movsb
mov
xlat
push
scas
popf
iret
int
adc
in
dec
test
lea
fs
bound
and
outsl
leave
iret
pop
popa
and
adc
in
and
pop
int3
sub
fwait
jp
out
test
out
dec
add
mov
fs
ret
ret
jb
jmp
inc
xchg
insl
sub
lcall
mov
inc
fsubr
xor
xor
add
in
lock
pop
jp
and
in
out
push
call
mov
sbb
popa
lcall
pop
insb
jl
insl
orl
mov
push
inc
clc
call
inc
cmp
inc
mov
in
aaa
adc
shll
or
bound
fsubs
jge
pushf
or
cli
xor
add
push
imul
fsubs
mov
das
int
add
mov
loopne
add
xor
fimuls
sub
fcmovb
push
gs
adc
jb
xchg
sbb
dec
push
int3
iret
adc
rolb
push
inc
into
ret
sbb
inc
mov
roll
mov
sbb
call
xor
adc
scas
and
and
cmp
sbb
pop
add
mov
xor
popf
lret
xor
and
stos
xchg
pusha
xchg
nop
xor
mov
add
lds
dec
mov
cmp
cwtl
and
or
sbb
mov
aaa
mov
jbe
int3
lret
mov
aaa
push
out
out
jno
mov
lods
lret
int3
repnz
mov
shll
stc
in
pop
push
sub
pop
mov
iret
sub
dec
je
lods
aaa
pusha
mov
fisubl
fsubr
outsl
movsl
inc
jg
std
in
mov
fnstcw
sbb
lret
inc
jb
jg
jb
stos
loop
inc
dec
aad
lcall
into
push
jns
mov
imul
xor
jno
adc
int3
dec
nop
mov
xorb
mov
mul
nop
out
pop
mov
test
pop
dec
test
jne
adc
frstor
stos
xor
inc
into
or
fucomip
dec
jmp
arpl
jle
fwait
mov
mov
fdivl
outsb
jb
leave
fsubrl
subb
dec
cltd
int3
sbb
inc
div
fisttpl
in
orb
clc
frstor
outsl
lods
hlt
pop
enter
adc
dec
pop
xchg
mov
decl
data16
in
int3
fsubrs
js
lcall
dec
mov
insb
add
rcll
repnz
lret
inc
pop
sub
and
in
pop
cmp
xchg
sub
out
and
add
push
jmp
and
adc
add
inc
in
dec
call
arpl
mov
mov
in
or
pop
aaa
push
mov
jbe
jg
cmp
rsqrtps
int
pusha
rolb
out
stc
aam
adc
inc
in
ljmp
sub
push
repz
jg
pop
push
or
jecxz
sub
mov
push
aam
test
shl
cld
dec
pop
movsb
imul
sbb
cmc
mov
out
adc
pop
sbb
cwtl
push
incl
xchg
pop
xor
add
ret
loop
loopne
jno
sub
outsb
pop
mov
dec
cmpsb
push
decb
mov
adc
leave
pop
call
xchg
mov
jo
inc
aaa
cwtl
xchg
cs
inc
ja
mov
sbb
jns
out
xor
jo
or
mov
test
addl
pop
ret
mov
in
jne
dec
jnp
in
xor
xor
outsb
aam
gs
sub
inc
lods
ss
pop
adc
ret
sarl
cmp
repz
dec
mov
pop
int
add
mov
jbe
pop
enter
lcall
adc
sahf
pop
in
and
in
ds
fidivl
xor
mov
fdivrl
push
pop
lods
cld
ret
cwtl
pop
mov
adc
in
inc
lahf
or
cmp
pop
or
mov
xlat
ljmp
hlt
test
mov
cmpsl
mov
hlt
xchg
fidivrs
push
aad
clc
add
cltd
sahf
push
les
int
fldl
les
adc
movsl
and
xor
push
mov
fdivrs
fnstsw
dec
dec
jl
jo
and
add
cmp
sahf
push
hlt
jne
inc
sahf
les
xor
imul
jmp
mov
rcll
out
push
aam
inc
pop
das
sub
sbb
ljmp
std
ffree
imul
mov
mov
sbb
pop
mov
xchg
dec
popf
inc
sarl
cwtl
mov
pop
xchg
and
aam
sbbb
das
cmpsl
lcall
adc
jl
add
cmp
adc
push
scas
ds
jge
out
xchg
callw
mov
push
or
dec
xchg
and
push
inc
mov
pop
loop
insb
shr
out
negb
fwait
icebp
and
inc
jns
add
insb
sub
adc
pop
stc
mov
aam
popf
adc
push
pop
outsb
repnz
fdiv
scas
jo
xchg
dec
imul
pop
mov
push
lcall
mov
xor
loop
adc
lds
mov
inc
nop
clc
jg
cmp
lock
xor
and
out
mov
fcomi
rcrl
sub
xor
adcb
push
push
shr
ret
movsl
inc
add
push
dec
sub
scas
cmpb
decl
inc
sub
jecxz
icebp
pinsrw
aaa
mov
push
xchg
mov
add
stos
add
jns
iret
inc
inc
jo
test
sub
shlb
add
lcall
psubq
pop
dec
cmp
pusha
lret
arpl
das
jle
mov
movsl
pop
xchg
addb
pop
mov
mov
sub
hlt
movsb
dec
sbb
dec
inc
sbb
paddb
xchg
xchg
mov
push
js
movsb
lds
inc
int3
and
sub
jmp
pop
out
out
int3
cmp
adc
lahf
lahf
push
inc
aas
aas
mov
lea
movsb
or
popa
iret
xor
cltd
push
inc
mov
cmpb
mov
add
and
lret
or
push
jbe
icebp
cmp
xchg
test
lret
popa
xor
outsb
pop
scas
pop
ljmp
out
movsl
dec
testl
sbb
movsl
sub
cwtl
adc
add
and
mov
jg
fs
addl
fsubr
push
js
mov
insb
mov
jne
mov
aad
popf
jmp
nop
jp
inc
addr16
mov
sti
sub
inc
or
cmp
jb
xchg
adc
es
call
fimuls
pushf
data16
mov
adc
fldenv
enter
dec
lock
arpl
in
or
push
aaa
mov
push
mov
in
es
xchg
jl
add
fisubs
lret
jbe
popa
in
pop
sub
int3
sarb
jns
negl
sarl
mov
enter
and
cmp
imul
cmp
xchg
jmp
jnp
cmp
xchg
sti
js
into
divl
or
fsubr
mov
popa
fs
or
sbb
push
sub
lods
xchg
out
jno
mov
push
hlt
ret
and
pop
fs
aaa
sbb
cld
cli
test
testl
push
call
cmp
pop
movl
ljmp
and
imul
push
mov
cmp
fisubrl
xor
sub
mov
popf
adc
jo
fmuls
ficompl
sbb
movsl
loopne
cmpxchg8b
lods
push
push
xchg
loope
push
mov
data16
cmp
imul
test
neg
and
jne
out
movsl
inc
cltd
mov
sub
out
and
ljmp
mov
adc
stos
movsb
mov
rcl
data16
lcall
mov
mov
push
mov
sbb
icebp
xchg
rcll
mov
popf
sub
rcr
lods
pop
test
jo
sbb
icebp
dec
out
lock
testb
xchg
in
in
mov
aas
test
and
push
and
imul
pusha
out
fcoml
int
popa
enter
sub
into
adc
mov
dec
jmp
call
xor
cmp
ss
xor
adc
leave
sbb
pop
mov
ds
xchg
xor
cltd
mov
jb
repnz
lock
arpl
sub
test
mov
adc
jns
imul
and
aas
in
roll
and
push
mov
sbb
dec
pop
imul
push
dec
and
jnp
jns
pop
fs
inc
icebp
xor
fwait
subb
rcrb
repz
out
adc
or
jae
loope
and
adc
test
loope
ret
enter
std
out
lds
dec
sbb
sbb
push
mov
xor
fimull
jle
sbb
pop
andb
sahf
sahf
hlt
subl
or
lock
es
jo
inc
inc
ret
mov
out
pop
inc
mov
xchg
push
popw
xchg
and
mov
loope
mov
mov
xor
pop
cmpsl
pop
xchg
movsb
icebp
movsb
inc
jne
xchg
out
int3
js
jns
dec
call
shll
aas
sub
xchg
adc
imul
inc
ljmp
inc
mov
test
jb
clc
mov
flds
jg
loop
add
sub
xchg
popf
sbbb
and
dec
mov
push
push
ret
stc
xchg
test
les
les
xor
ds
aaa
xchg
sub
movsb
ret
fbstp
loopne
mov
xchg
push
and
je
push
jno
scas
out
fsubr
shll
mov
inc
lret
add
sbb
inc
xcrypt-ofb
cmpsl
push
sub
scas
pop
repz
mov
out
stc
jnp
movsl
mov
subl
dec
or
insb
sub
push
push
popf
mov
pop
mov
dec
jmp
fidivrs
mov
adc
mov
jecxz
fisttpll
imul
xchg
stos
in
test
int3
xor
loope
cmpsb
inc
popf
pop
cmp
push
jne
out
push
sub
cmp
cmp
adc
jnp
push
pushf
adc
sbb
out
sbb
pusha
in
hlt
popa
pushf
adc
sbb
mov
testl
dec
xchg
push
enter
sahf
stos
inc
enter
cmp
jbe
inc
or
bound
jp
or
orb
mov
outsb
sti
mov
stos
xchg
jno
inc
fldenv
lock
add
js
jmp
cmp
xchg
je
aaa
cld
loope
jns
mov
or
push
mov
dec
aas
fisttps
pop
arpl
imul
fiaddl
sbbb
gs
sbb
sbb
cmp
xchg
mov
test
mov
in
pop
ljmp
insl
push
pop
inc
scas
lret
xchg
out
pop
cmp
arpl
testl
cwtl
mov
imul
divb
mov
and
and
daa
lahf
test
xchg
sbb
aaa
push
adc
lret
aaa
test
jae
bound
inc
mov
push
lret
stos
hlt
adc
orl
pop
or
ret
xor
loope
in
push
mov
sbb
popa
xlat
pop
inc
lret
mov
jl
in
cmpsb
jns
xor
inc
dec
lods
or
in
add
mov
adc
rep
jmp
jmp
xchg
leave
xchg
jmp
xchg
pop
jl
lock
mov
bound
cmp
and
cld
outsb
and
fwait
cmp
xor
loopne
dec
stc
lret
daa
ljmp
pusha
push
stc
sbb
out
jae
movsb
dec
lcall
movsb
es
push
push
insl
icebp
enter
scas
mov
imul
fiaddl
test
sahf
in
fisttpl
in
js
xor
out
pop
push
push
movsl
sub
xor
call
cmp
push
sub
test
into
notl
or
xor
xor
jns
sahf
js
adc
xchg
mov
push
sbb
dec
out
xor
jle
frstor
sbb
movsl
cmp
pop
sub
loope
fnstsw
and
clc
push
mov
adc
add
jns
jbe
lret
int
fcompl
scas
xchg
nop
jns
jle
arpl
aaa
inc
mov
mov
ret
mov
aas
dec
cmp
sbb
push
pop
in
mov
test
lods
scas
aad
sahf
inc
sarb
mov
cmc
jb
test
push
bound
pop
mov
ficompl
xchg
xchg
in
stos
aas
push
std
imul
call
lcall
lret
inc
push
cmc
adc
mov
cmpsb
rcll
pop
dec
adc
jmp
mov
jne
adc
ljmp
lods
push
lods
sub
call
sti
pop
mov
das
cwtl
test
lock
cwtl
add
aaa
rcr
adc
xchg
outsb
cli
add
pop
in
or
or
cmpsl
add
cmpsl
push
loopne
test
das
sub
mov
sahf
prefetchw
test
xor
xchg
sub
test
stos
jle
cvttps2pi
adc
lret
and
insl
in
xchg
roll
mov
push
and
call
xor
mov
or
icebp
and
sub
loop
mov
daa
jo
std
inc
jmp
xchg
les
iret
leave
push
rcrl
in
sbb
and
push
xchg
push
stos
in
cmp
add
mov
and
mov
push
jae
cmpsb
pop
and
movsb
xchg
test
popl
sbb
add
lret
rclb
sbb
pop
push
scas
cmovnp
inc
insl
adc
sbb
adc
xchg
push
jl
add
adc
je
js
rcl
xor
push
or
fdivs
pop
int
xchg
ljmp
es
data16
cmp
mov
adc
int
mov
mov
out
adc
xchg
scas
mov
push
out
ss
xchg
popf
fists
lret
sbb
lret
and
adc
psllq
sbb
mov
repz
pushf
lods
jns
orl
jl
xor
loopne
dec
sbb
jp
sub
stos
pop
cli
inc
mov
ficoms
or
out
xchg
icebp
data16
stos
push
test
fbstp
mov
add
xchg
or
dec
daa
mov
mov
and
dec
mov
sbb
ja
mov
push
lods
sbb
xchg
pop
sub
into
gs
ret
mov
out
stos
arpl
mov
mov
add
push
into
sbb
in
xor
outsl
fmull
and
push
jo
hlt
imul
and
cmp
sub
test
testb
rcl
dec
push
dec
cmc
stc
lahf
push
jno
inc
test
xchg
cltd
xor
hlt
cmc
pop
mov
lock
daa
data16
and
mov
in
add
push
sti
or
mov
mov
fld
sbb
xor
xchg
push
in
mov
lods
inc
inc
outsb
lcall
insb
fistl
jbe
xchg
outsl
in
jo
loope
pop
cs
gs
cmp
into
insl
in
int3
dec
xchg
inc
pop
dec
shlb
aaa
sub
scas
leave
rcll
sub
ds
hlt
push
or
int
je
das
pop
out
dec
sub
test
mov
sbb
ret
sub
adc
add
xchg
inc
movsb
mov
xor
xor
dec
mov
icebp
pop
push
mov
add
fimull
jb
pop
setge
pop
pop
pop
mov
sahf
xor
js
inc
jnp
adc
add
insl
inc
xchg
pop
pop
or
cld
cs
push
inc
hlt
sbb
mov
jle
shl
sub
test
out
mov
repz
mov
out
insb
mov
or
push
xor
das
fmul
dec
fdivrs
sbb
sahf
mov
cmp
mov
cld
hlt
negb
lock
pop
dec
adc
in
add
dec
and
push
iret
sahf
jnp
and
mov
popf
xchg
call
dec
pop
loop
xchg
mov
outsb
pop
pop
push
xor
mov
lock
adc
pop
cmp
xor
sbb
sahf
out
lds
mov
xchg
aam
movsl
add
andb
sti
mov
mov
cmpsb
dec
lcall
and
dec
xor
adc
ds
inc
test
sbb
mov
jmp
or
cmc
je
fnstsw
int3
notl
sbb
push
xor
mov
ja
mov
mov
jne
nop
andb
test
roll
pushf
sbb
adc
sub
in
lods
loopne
inc
mov
adc
mov
mov
fimull
xor
sti
push
mov
bnd
call
je
xor
mov
sahf
mov
mov
cwtl
ljmp
mov
lods
add
shlb
dec
sbb
fs
outsb
xchg
pop
jne
mov
sti
lahf
pop
pop
cmp
add
add
je
icebp
fnstsw
in
fcomps
pop
aam
jae
jo
daa
ss
pop
dec
xchg
mov
mov
or
fwait
adc
nop
push
shlb
adc
xor
loopne
cmp
jb
into
pop
stos
xlat
test
xchg
sub
xchg
dec
jnp
dec
sbb
cmc
cmpsb
sub
jl
js
lahf
sahf
pop
rcll
in
int
test
fstpl
test
negb
mov
fildl
cld
add
cmp
inc
imul
gs
jg
push
cmp
jl
ss
ds
test
mov
push
les
es
outsb
pop
out
lret
loope
mov
pushf
adc
mov
push
pop
dec
pop
inc
in
ljmp
fnsave
mov
pop
js
pop
loope
mov
adc
jle
stc
mov
dec
mov
jg
iret
ja
push
cmp
mov
dec
loope
insl
xchg
cwtl
sub
arpl
shrb
popl
adc
movsb
sub
movl
pushf
ret
pop
pop
cmc
lcall
mov
je
cld
jo
les
lock
xchg
xchg
or
jb
stc
dec
imul
aad
bswap
shr
jno
test
mov
cltd
fbld
scas
pop
sti
and
xor
jbe
lret
popa
push
call
or
hlt
out
cmp
pop
arpl
in
test
pusha
dec
push
nop
dec
mov
cwtl
push
mov
and
rorl
fidivrs
je
aas
push
enter
lea
inc
testb
adc
pop
std
xor
push
mov
inc
clc
jg
out
mov
jbe
jmp
mov
jmp
out
mov
cli
cld
cmp
mov
inc
jne
hlt
jbe
inc
sti
jne
mov
push
cmc
mov
adc
xchg
inc
jp
jle
push
in
dec
stos
fs
xor
pop
add
pop
sub
xchg
dec
push
jnp
nop
mov
inc
xor
add
js
cli
sbb
inc
cmp
pusha
mov
scas
cmp
add
scas
sbb
jne
sbb
cmpl
sub
lods
pop
push
jcxz
push
in
fs
stos
and
nop
mov
aad
std
or
hlt
push
cmp
push
xor
add
in
cmpsb
sbb
adc
cmpsl
mov
stc
cltd
jmp
lock
inc
icebp
xchg
mov
xor
push
sarl
rcll
sbb
sti
in
int
lock
adc
jl
sbbl
ss
das
lcall
adcb
outsb
sarb
sub
out
lods
into
sbb
pop
addr16
outsl
fxch
jl
pop
push
jp
lock
sbb
push
adc
cmpsb
xchg
push
or
into
jne
xor
push
pop
ret
rcrb
adc
ljmp
and
jb
outsl
push
sahf
outsb
jne
outsb
jno
jnp
call
cs
insl
or
jge
jle
or
jge
dec
aam
int3
inc
xchg
push
sub
xchg
mov
xor
or
jmp
hlt
aas
xchg
or
ret
cs
push
jnp
sub
ja
test
xor
push
imul
mov
inc
inc
jmp
add
pushf
dec
pushf
je
cmp
xor
xor
jmp
das
test
pop
notl
and
pop
cwtl
test
rcrl
jg
inc
test
jno
adc
pop
sbb
push
fbld
std
repz
test
sbb
std
cltd
arpl
xchg
scas
add
arpl
dec
fwait
mov
sbb
orl
fwait
mov
repnz
imul
xor
pushf
pmaxub
sbb
or
inc
pusha
sbbl
mov
imul
cmpsl
jl
sub
cmpsb
or
push
bound
pop
bound
out
sbb
mov
scas
insl
push
or
push
mov
in
mov
mov
sbb
mov
cmp
mov
adc
mov
lea
fsubrs
ljmp
in
or
lds
or
test
mov
out
sub
or
cmp
mov
enter
xchg
arpl
dec
in
xchg
fs
dec
sbb
xchg
mov
rclb
xchg
loopne
mov
out
add
sub
frstor
adc
test
popa
cmpsl
pop
xchg
sub
out
nop
cli
dec
push
inc
imul
or
cmpsl
outsl
dec
mov
popa
test
into
fdivl
dec
xchg
sub
lock
outsb
push
and
mov
mov
ljmp
divl
cmp
sub
fisubl
mov
cli
sbbl
incl
xor
and
and
mov
push
cmpsb
ret
loop
mov
nop
and
scas
or
loope
movsl
adc
xchg
jne
outsb
jno
cltd
push
mov
cwtl
lock
and
jge
adc
jp
add
push
xchg
jb
inc
jnp
insb
lsl
jle
push
mov
mov
sahf
pushf
test
mov
test
int3
imul
add
pop
pop
das
lahf
mov
sub
inc
stos
and
dec
inc
dec
pop
push
mov
addb
jle
pop
push
pop
add
lea
sbb
insb
sub
test
int3
xchg
int3
pop
pop
lds
adc
mov
cmpsb
sub
push
shll
hlt
push
lock
xchg
push
lret
mov
add
clc
movb
add
out
mov
divl
pusha
arpl
add
jmp
ss
or
sub
shll
add
mov
sub
daa
dec
add
dec
mov
aas
jp
jbe
sbb
xchg
cmpsb
mov
pop
xchg
xchg
ret
test
iret
sbb
hlt
lahf
loop
mov
lods
ss
cmp
in
je
sub
scas
xor
jl
jo
js
in
outsb
movsb
or
popf
adc
xchg
cmp
sti
enter
xchg
fs
test
pop
xlat
das
dec
mov
cli
cmp
fstpt
inc
repz
push
dec
mov
scas
test
xor
or
jo
pop
lods
cs
push
dec
shll
das
fistpl
outsb
in
mov
je
repnz
dec
pop
test
fisubrs
rcrw
outsb
xchg
adc
jecxz
faddl
dec
gs
dec
and
icebp
fisubrs
into
or
imul
xchg
cmp
cli
notb
xchg
jecxz
loope
or
cwtl
cmp
xchg
outsl
xor
pushf
inc
jl
cmpsl
fildl
mov
imul
ja
pop
mov
push
je
jae
mov
popf
lea
ljmp
popa
xor
hlt
shlb
add
dec
fimull
roll
into
jg
dec
sti
xchg
inc
test
ja
pop
xor
sbb
pop
fiaddl
add
fimuls
push
arpl
js
jo
push
cld
jp
push
xchg
cltd
stos
xchg
push
pop
hlt
sti
addr16
and
xchg
mov
aad
nop
jae
lcall
sub
dec
mov
stos
in
cmpsb
out
insb
clc
dec
imul
adc
sbb
mov
test
mov
insb
sub
ret
cmp
in
loope
mov
icebp
inc
js
scas
int
xchg
jb
ds
pop
push
lcall
or
jp
jle
cmc
push
repnz
xor
jns
gs
mov
xchg
jo
in
pop
cmpsl
popf
cld
push
pop
lcall
mov
dec
std
pusha
jle
movsl
mov
icebp
bound
and
insl
je
stos
into
xchg
aas
mov
icebp
xchg
adc
sub
leave
mov
jl
daa
prefetch
iret
cwtl
xchg
jo
inc
push
pop
je
jecxz
popf
arpl
cmp
mov
lcall
push
cld
cmpsb
sbb
push
pushf
cli
mov
faddl
call
dec
daa
movsl
in
int3
popl
pop
inc
sub
xor
xchg
test
push
fucomip
cwtl
jbe
cmc
mov
int3
inc
push
xchg
mov
leave
sub
mov
pop
or
push
dec
lods
jle
add
sub
incl
scas
xor
push
mov
out
pop
mov
mov
aas
xor
out
nop
test
pop
add
pop
xchg
pop
and
cmpsl
movhlps
bnd
pop
adc
jnp
fsubr
ficomps
and
out
xchg
ss
leave
inc
aaa
psrlw
int
dec
cmp
stc
fimuls
jge
test
fisttpl
pop
dec
sub
cmp
jge
dec
shll
push
mov
ret
jecxz
out
popf
or
movsl
andl
dec
test
in
xchg
sbb
xorb
jbe
inc
pop
mov
mov
mov
mov
jns
cmp
inc
leave
dec
jmp
in
test
std
iret
in
cmpsb
lcall
add
add
insl
xorl
sbb
or
and
int
lahf
inc
repz
mov
push
clc
lods
icebp
or
fildll
stc
enter
pop
cmp
pop
rorb
arpl
add
mov
lods
pop
xchg
xor
xchg
lock
orb
sub
push
dec
xchg
cmp
aam
xor
lret
cmp
in
cmp
add
or
in
cld
inc
xchg
push
inc
push
and
hlt
push
hlt
sbb
stos
aas
dec
sti
nop
ret
jg
and
jno
mov
outsb
test
add
fcmovb
sarb
or
inc
aad
mov
addr16
fisttps
js
test
mov
cmp
jge
repz
sub
dec
mov
push
sbb
mov
pop
xor
push
mov
mov
ss
inc
ss
mov
xor
mov
out
inc
lock
xlat
dec
mov
sub
aas
popf
mov
loop
mov
je
lcall
ret
push
int
popa
mov
sub
inc
mov
adc
pop
out
flds
ret
ret
in
mov
mov
cmp
testl
pop
inc
cs
fwait
lahf
sub
push
fwait
jns
and
clc
pop
jg
aam
bound
or
sbb
cmp
and
int
mov
sbb
out
jecxz
cmpsb
imul
mov
dec
les
push
or
push
ss
popf
mov
mov
sti
pop
add
sub
gs
pop
pop
mov
mov
rcrb
popa
imul
out
lds
mov
xchg
lret
scas
xor
sub
dec
jae
rorb
aas
addb
fcmovne
movsl
shrb
fcomi
repz
int3
repz
fisubrs
or
shll
dec
or
jae
dec
pop
adc
test
pop
xchg
pusha
dec
movsl
jge
sub
inc
mov
jl
mov
stos
mov
ror
lret
pop
mulb
xor
ds
mov
inc
adc
xchg
cltd
xchg
pop
insb
neg
adc
jno
or
lcall
xchg
das
sub
jbe
das
inc
mov
pop
mov
push
mov
inc
xchg
call
push
fbstp
cli
xchg
add
mov
xchg
sub
lahf
bnd
test
iret
adc
js
outsl
mov
popa
es
inc
stc
add
in
jmp
xor
aaa
popf
lock
xchg
xchg
aaa
mov
push
mov
jl
movsb
xchg
addb
pmaddwd
and
stos
mov
jne
cltd
xchg
mov
push
gs
fcmovbe
rcrb
cmp
mov
inc
movsl
lret
cmp
out
push
lock
enter
or
push
out
mov
push
sti
xor
push
mov
push
std
xchg
cmp
sub
xor
pop
mov
or
jle
ret
mov
leave
pop
add
or
inc
mov
es
push
xor
mull
hlt
sbb
insb
pop
pop
mov
insl
xchg
inc
dec
inc
in
ja
push
ljmp
xor
inc
cmp
cltd
pop
jmp
adc
sub
mov
or
scas
sub
ss
pusha
mov
out
mov
or
orl
insl
adc
leave
sti
xchg
enter
mov
cmp
and
xchg
and
xchg
test
imul
cmp
aaa
dec
mov
adc
test
pop
out
push
or
mul
mov
sti
pusha
je
pushf
adc
adc
aaa
test
xchg
jno
mov
push
push
sarb
xchg
jle
pop
xor
outsl
push
mov
pop
addl
inc
mov
add
sahf
fsts
in
add
mov
lods
stos
hlt
or
ret
pop
mov
pop
fbstp
sar
inc
cld
enter
enter
adc
cmp
out
sub
jnp
fidivl
mov
in
cltd
inc
xor
lock
xor
dec
jbe
inc
mov
aaa
mov
lahf
inc
or
pop
add
int
fwait
popa
shrl
stos
mov
or
xchg
push
test
inc
jb
fimull
dec
iret
mov
add
fs
inc
inc
inc
cwtl
fstps
mov
cmp
xor
add
jns
jnp
or
mov
jge
insb
lea
movsl
lret
repnz
arpl
roll
mov
dec
jge
xor
pusha
sbb
adc
shl
js
in
rcl
ds
bound
dec
xchg
dec
rcl
and
int3
std
icebp
cmc
mov
gs
add
mov
leave
jbe
test
mov
xor
arpl
mov
popa
push
movsl
mov
push
lods
mov
mov
cmpsb
adc
ret
adc
in
sbbb
add
or
adc
push
push
dec
pop
xchg
scas
cltd
cmp
aam
ja
aam
inc
lea
pop
push
ljmp
popf
leave
push
jg
add
pop
fcompl
cmp
mov
fptan
subb
aad
push
cmpsl
mov
test
shrl
por
cmpsb
test
imulb
lock
hlt
and
mov
stc
mov
outsl
xlat
fists
jnp
sbb
sbb
insb
test
pusha
cli
ljmp
jne
icebp
cmp
xlat
sbb
or
xchg
mov
sbbl
jbe
inc
imul
jnp
adc
inc
insl
add
xchg
mov
sub
cmc
sarl
insb
cld
stos
fs
xchg
aad
dec
push
lock
pop
addb
aaa
nop
insl
mov
mov
inc
je
xor
cmpsl
xor
lods
jl
mov
inc
or
js
bound
push
mov
push
pushf
and
mov
xchg
xlat
ret
xchg
and
ds
xchg
mov
jmp
fcoml
dec
lahf
jp
ret
pop
ror
test
xor
pushf
sbb
loop
dec
sub
fwait
movsl
fisubs
xchg
imul
or
stc
inc
sub
xchg
outsl
and
add
das
push
adc
fistpll
jle
jl
mov
add
mov
adc
roll
ret
mov
out
test
mov
xchg
ss
mov
dec
xchg
mov
mov
adc
fists
clc
cmp
paddsw
cmp
xchg
fdivr
ljmp
jp
fs
pop
testb
jne
cwtl
xor
inc
dec
sub
insl
stos
aaa
cmp
in
mov
push
jns
fnstsw
je
adc
out
popl
shrb
dec
inc
sub
gs
jae
test
push
xchg
or
shll
push
loope
sbb
adc
ret
or
xchg
jno
add
jo
pop
jns
outsl
das
push
out
sub
jb
rcrl
lds
dec
sbb
pop
dec
rcll
dec
out
or
and
fxch
jp
pop
cmc
push
popa
fistpll
inc
or
test
push
icebp
jae
pop
or
and
and
jns
stos
pushf
int
push
imul
xchg
rolb
out
sbb
inc
mov
push
sub
movsb
mov
nop
testb
cmp
in
inc
fwait
arpl
fsubs
arpl
cs
dec
push
imul
loope
mov
sub
jg
inc
xor
and
push
dec
cmp
pop
jae
mov
pusha
pop
jmp
arpl
cli
lock
jl
cmp
or
insb
pop
imul
mov
cmp
std
fstpt
push
pusha
hlt
addr16
addr16
enter
pop
mov
cmc
test
push
cmp
call
lret
adc
fcmove
popa
cmp
pop
lret
pop
hlt
and
mov
mov
fsts
sbb
hlt
sub
adc
out
cmp
lock
sbb
jae
jle
push
sbb
mov
inc
cmp
int
sub
aas
mov
push
jle
push
stos
ss
loop
ja
fistps
jmp
or
cmpsb
xchg
inc
gs
jle
inc
in
or
mov
decl
fisttpll
mov
jmp
repz
lcall
ret
in
out
adc
js
push
jl
adc
mov
aad
ds
sbb
cli
call
call
enter
mov
hlt
pop
iret
inc
mov
dec
rorb
or
repz
rclb
sub
jle
sub
xchg
roll
out
aad
push
push
fsub
leave
psubsb
pop
push
dec
insl
mov
cmp
xor
clc
fistl
loope
dec
pop
lret
sbb
scas
ja
es
inc
pop
ret
push
mov
dec
mov
pop
leave
adc
imul
xchg
addb
xchg
pop
jb
test
push
add
out
in
inc
xor
psllq
scas
inc
cmc
inc
xor
mov
es
push
xchg
stos
mov
sahf
mov
xchg
mov
movsl
xor
mov
cwtl
mov
pop
cli
lods
dec
out
in
cltd
jg
pop
sub
lock
pop
repnz
sbb
mov
lea
pop
push
pushl
dec
scas
push
jmp
lret
ficomps
jb
and
push
pop
inc
mov
adc
mov
in
stos
jmp
push
jno
das
andb
push
divl
shrb
mov
in
adc
mov
jnp
fcmovnbe
push
push
sub
adc
inc
mov
jbe
cs
pop
ffree
cmp
cmpsl
movsb
add
gs
pop
ljmp
push
shl
enter
dec
pop
lcall
or
cld
cmp
enter
jns
and
lcall
jmp
pusha
push
inc
pushf
xchg
loop,pt
loop
jmp
pop
sub
mov
adc
cmpsb
jge
aam
push
mov
faddp
jle
mov
icebp
out
inc
outsb
xchg
cmc
inc
outsb
dec
push
xor
or
cltd
leave
xchg
jno
or
scas
lahf
xlat
pop
or
mov
int
lret
stos
bnd
push
fstpl
xchg
xor
push
push
mov
cmp
data16
dec
mov
mov
mov
imul
fdivl
cld
cmp
inc
pop
sub
clc
fsub
jl
adc
mov
sub
inc
xor
lds
lret
ret
stos
out
popa
shlb
in
dec
xchg
dec
sub
mov
aad
cltd
cli
ret
scas
decl
loop
fidivl
xchg
lahf
adc
in
outsl
push
rcrb
inc
sbb
mov
adc
push
ret
mov
push
push
aas
aas
repnz
mov
and
not
fnstsw
jp
xor
and
mov
inc
fwait
jmp
addl
imul
mov
jmp
repnz
jle
pop
sbb
aad
xor
aaa
nop
mov
shll
outsl
hlt
xor
insl
mov
xchg
std
xchg
cmc
lock
test
mov
repz
fcoms
xor
dec
inc
aad
or
gs
fldl
mov
cltd
push
dec
add
adc
xchg
jecxz
mov
dec
sub
je,pn
sbb
lret
xchg
mov
jo
fisttpll
pop
sbb
lock
sub
sub
xor
scas
addb
jo
xchg
lcall
push
loop
xchg
inc
jae
aad
fstl
xchg
fildll
scas
jmp
rcrb
cmp
in
add
jns
insb
mov
lods
or
mov
inc
push
pop
adc
jne
sub
loop
jne
adc
cmp
or
daa
adc
sti
sbb
lods
sbb
in
sbb
dec
dec
ds
mov
inc
hlt
notb
inc
pop
lods
add
mov
icebp
pop
xor
test
sbb
xchg
sub
in
lods
rorl
mov
bound
inc
aaa
xlat
xor
dec
aam
lahf
test
jecxz
sahf
scas
pop
and
pop
setle
mov
and
ss
inc
pop
sbb
in
xlat
jg
xor
push
xor
popf
push
add
aad
in
repnz
adc
dec
jae
cmp
jp
fwait
push
or
dec
xchg
fldcw
pop
xchg
fstl
loopne
rorl
xorl
push
jg
nop
lret
push
push
inc
adc
add
and
imul
lret
mov
ret
and
out
pop
lret
inc
subb
lcall
dec
or
pushf
insb
pop
pusha
out
inc
je
or
inc
lods
sub
dec
lods
dec
pop
rolb
jle
xor
mov
in
mov
add
cmp
popa
adc
out
stos
push
fidivs
nop
push
xor
es
stos
mov
int
loopne
pop
xor
adcb
inc
out
out
ficoms
leave
adc
sub
mov
std
loop
and
loope
addr16
clc
cld
jne
ret
cmp
xor
sarb
cwtl
mov
xor
ret
es
in
xchg
jmp
jbe
out
mov
lods
pop
out
jle
mov
lods
sbb
icebp
mov
insb
fnstsw
add
das
xlat
lds
jmp
outsb
fs
xchg
pop
push
push
or
test
cmp
or
es
scas
jbe
cmp
lcall
adc
sbb
mov
pusha
aaa
aas
fwait
rcrb
jp
mov
out
mov
roll
push
test
or
test
dec
xor
cmp
cmp
aaa
lahf
jge
cmp
iret
mov
out
loope
loop
jmp
popf
fdivs
xor
call
pusha
mov
lret
lcall
pushl
daa
push
aas
mov
push
movsb
pop
or
push
call
push
xchg
cmc
clc
push
repz
repz
xchg
jno
orb
scas
outsl
int3
lret
repz
push
cmp
rcrb
xlat
dec
fiaddl
mov
imul
lds
push
and
lea
scas
cmp
lret
xchg
stos
fstpl
scas
arpl
adc
test
outsb
divl
imul
sub
cmp
shrb
cmp
es
jb
and
mov
jle
xchg
push
xor
sti
xchg
dec
out
push
into
lcall
cld
js
mov
shrl
xchg
insb
sub
mul
fiaddl
movsb
sbb
mov
fstpl
jmp
ja
mov
shll
out
std
adc
rclb
enter
xchg
nop
iret
dec
mov
or
mull
imul
mov
add
aad
mov
stc
mov
jecxz
add
fdivs
adc
aas
jmpw
pop
mov
notb
and
loope
iret
ds
mov
in
pop
jmp
inc
lock
cmc
fcoml
imul
add
push
cmp
mull
push
shll
imul
hlt
mov
xor
leave
mov
scas
in
and
sarl
call
mov
push
in
cmp
push
jnp
xchg
daa
push
je
cmpsl
mov
ret
inc
hlt
and
loop
cltd
push
stos
sub
sub
xor
inc
adc
push
dec
xlat
rorb
roll
mov
gs
mov
mov
movsb
push
sahf
pop
pop
push
orl
xchg
adc
and
adcl
xchg
mov
iret
xlat
fildl
mov
dec
mov
pop
lahf
mov
inc
xchg
xor
and
sbb
cli
aas
cmpsb
pushf
and
jae
mov
ljmp
rclb
andl
aam
ljmp
inc
jge
cmpsb
xlat
cmp
cmp
imul
repz
test
ret
dec
gs
stc
out
and
repnz
xchg
pop
sahf
mov
not
fldcw
jmp
scas
mov
xchg
push
push
fldenv
xor
rorl
mov
in
stos
jl
test
daa
or
ficoms
inc
lea
pop
shlb
arpl
in
or
mov
adc
dec
into
push
mov
gs
push
mov
inc
int
inc
xchg
mov
mov
stc
push
je
xor
cmp
sub
xchg
out
sbb
dec
scas
lcall
es
or
cwtl
dec
out
std
xchg
cmp
pop
sbb
xlat
xor
dec
xchg
aam
mov
fsubrl
pop
mov
add
enter
or
xacquire
push
ja
loopne
leave
sbb
cltd
daa
adc
mov
aaa
fbstp
icebp
das
pop
inc
dec
pop
aas
mov
push
or
es
pusha
sti
inc
fs
repnz
scas
shll
fnstcw
add
push
rcrb
push
mov
leave
jnp
jl
adc
mov
inc
les
add
sbb
outsl
xchg
adc
and
mov
outsb
stc
mov
scas
and
jmp
adc
in
pop
push
mov
mov
into
test
mov
sbbb
xor
enter
out
push
mov
pop
xlat
inc
jg
sbb
mov
fildl
and
outsl
ss
lahf
fisubrs
mov
and
sub
test
es
mov
and
mov
fwait
pop
cmpl
out
negb
jno
push
inc
and
jbe
into
mov
js
ja
dec
xor
push
sub
adc
leavew
jbe
ja
mov
or
fistl
cmc
xlat
repz
movl
xchg
sub
xchg
lcall
pop
pushf
pusha
insb
mov
mov
cld
repz
xchg
xchg
imul
stc
pop
jl
nop
imul
into
jb
ds
aaa
cld
cmc
enter
jb
scas
das
fidivrl
mov
jl
movsb
clc
or
cs
rcrl
pop
mov
int
push
aam
push
mov
add
int3
shlb
int3
fmuls
adc
or
pushf
dec
cmp
ficoms
push
adc
mov
mov
adc
rclb
scas
mov
mov
movsb
mov
mov
cmp
scas
push
push
mov
outsl
and
inc
scas
xor
aas
inc
stos
mov
pop
inc
xchg
and
data16
add
jecxz
jnp
xchg
lods
sahf
dec
leave
in
into
out
add
jb
add
adc
push
mov
enter
pop
add
xor
sub
jmp
cli
or
xchg
or
push
mov
outsl
call
or
inc
sbb
mov
dec
leave
call
dec
outsb
je
xchg
pop
inc
nop
icebp
sbb
push
xchg
pop
push
testb
push
mov
jge
out
pop
sub
cmp
int3
sti
icebp
lahf
ja
aad
fcoms
in
das
inc
push
sahf
jecxz
sahf
lahf
out
mov
pop
sbb
cs
gs
push
mov
lock
movsb
test
pop
movsb
sti
mov
fwait
enter
sarb
stc
or
or
xor
pop
pushf
sub
popa
and
xchg
lcall
xor
sbb
stos
jg
mov
fwait
loope
or
cmp
loope
mov
stc
cmp
jg
and
dec
out
jb
je,pn
cmp
mov
push
bound
jle
dec
sti
lret
adc
shrl
sbb
out
lea
ljmp
sysexit
cmp
shlb
dec
xor
xchg
jns
lds
mov
mov
adc
mov
mov
clc
dec
inc
jo
daa
fadd
adc
cld
jae
sbbl
rcll
js
sub
icebp
daa
mov
pop
subps
lock
daa
mov
insb
mov
fwait
jbe
lods
lea
mov
push
stos
out
jmp
inc
out
dec
shl
cwtl
cs
cmp
sti
or
pusha
cli
sbb
sahf
xchg
mov
and
xchg
and
mov
push
fcom
jp
dec
xor
push
movsb
mov
mov
arpl
dec
insl
jmp
enter
and
jne
int
or
stos
mov
cmp
sbb
fldt
movsb
cmp
add
push
sub
mov
roll
mov
ljmp
leave
mov
fidivrs
sub
push
mov
pop
aaa
lods
stc
add
add
pop
test
add
xchg
rorl
in
lcall
xchg
add
dec
sub
jno
xorl
adc
mov
xchg
add
push
push
fnstenv
or
mov
cmp
in
sub
mov
ss
stos
add
fisubrl
add
push
or
and
pop
gs
or
into
pop
in
cltd
mov
mov
inc
cmpsb
adc
movsl
cs
fidivs
mov
fisttps
pop
sub
xchg
stos
aaa
xchg
mov
dec
loopne
adc
movsb
dec
push
fisubs
sbb
dec
or
adc
add
scas
popa
mov
iret
push
cli
xor
mov
adc
pushf
jmp
push
jp
push
cli
jns
sub
dec
mov
mov
lret
lock
dec
dec
ljmp
fnstenv
cltd
data16
xchg
lods
mov
ds
cmp
out
dec
dec
pop
sub
cli
popf
repnz
repnz
lds
sbb
jb
outsb
dec
add
cmp
lahf
or
movsl
mov
jle
imul
mov
dec
mov
pop
int
arpl
pop
add
cmp
std
push
aaa
xor
mov
inc
cmc
aam
mov
and
pop
adc
xchg
xorb
pop
imul
sbb
fwait
xor
stos
das
dec
bound
test
aaa
mov
mov
lret
inc
mov
xchg
gs
and
aas
repnz
idivl
xor
fmull
test
inc
cmp
sub
hlt
push
xor
xchg
loope
xchg
loope
dec
cmp
jns
loop
mov
pop
les
pop
xchg
push
jne
test
and
fmulp
icebp
or
sahf
hlt
cld
push
adc
jmp
jmp
cmp
es
fs
fisubrl
add
dec
xor
mov
imul
jle
push
pop
mov
xchg
scas
pinsrw
js
fistpl
cmpsl
xor
sub
dec
inc
xchg
xor
pop
sub
iret
xchg
jl
outsb
jnp
xchg
pop
pop
sbb
sahf
js
aad
repnz
nop
cmc
and
daa
into
mov
xchg
jns
ja
adc
scas
fisubrl
iret
aas
cmc
mov
sti
xchg
pop
fstps
iret
out
xchg
pop
cmpb
add
filds
movsl
lcall
mov
cli
in
or
xorl
push
cmpsl
cltd
xchg
ljmp
mov
xor
cmpsb
lods
and
sub
in
lcall
rcl
in
inc
or
mov
and
xor
out
pop
add
repz
mov
icebp
adc
loopne
dec
ror
add
mov
fistpll
pop
push
shll
jge
aaa
rcr
div
gs
push
xor
lahf
jne
pop
mov
mov
iret
mov
jp
and
ds
fidivrl
ficoml
mov
cmp
les
fisttpll
adc
setns
sub
fcomps
in
push
add
out
sarb
or
clc
je
push
cli
xorb
or
push
mov
lea
negb
fs
adc
out
int
pop
xchg
or
xchg
loopne
prefetch
dec
addl
xor
int3
cmc
test
call
inc
dec
xchg
sbb
dec
je
insl
into
loop
xor
shrl
pop
pop
dec
sub
lock
repnz
push
push
cmp
rcl
push
push
xchg
or
inc
fsts
cmc
pop
jl
mov
dec
jg
in
out
popf
cmp
push
push
pop
mov
add
cmp
jmp
adc
dec
lret
mov
xchg
sbb
outsl
push
jecxz
sub
mov
insl
or
data16
in
inc
xchg
fwait
enter
int3
mov
es
fistps
stc
stos
mov
jp
mov
and
shl
mov
mulb
test
frstor
and
in
push
aaa
into
cmp
adc
ss
in
fldcw
jg
or
jnp
inc
cmpsl
xor
xchg
sbb
add
fimull
xchg
add
or
pop
sbb
inc
sbb
out
out
inc
shrb
outsb
cmp
loopne
xchg
jl
movsl
xchg
outsl
mov
aaa
cmp
shl
out
mov
divb
stos
repz
mov
lods
mov
in
mov
cs
add
fimull
mov
test
push
into
sbbb
loop
push
inc
mov
imul
xchg
xchg
cmp
ds
dec
insb
push
lahf
and
cmp
cmc
outsb
adc
mov
out
jno
pop
cli
xchg
add
or
inc
test
aad
icebp
in
xor
gs
std
fdiv
daa
inc
jge
mov
xlat
fsubp
out
negl
out
push
xchg
dec
dec
or
add
sar
loop
sti
dec
push
cld
and
jbe
imul
add
lods
xor
subb
cmpsl
add
mov
aad
inc
movsl
push
outsl
push
cwtl
dec
jl
xchg
test
mov
jbe
out
leave
or
lds
ja
mov
in
call
rcll
mov
mov
rcr
pop
mov
test
fnstsw
sbb
pop
aaa
mov
push
out
insb
cmp
addr16
mov
dec
dec
inc
sbb
xchg
push
loopne
shll
aam
pushf
das
inc
or
xchg
je
xchg
xchg
mov
dec
addr16
adc
repnz
or
pop
or
dec
jae
inc
aas
xchg
jne
add
dec
cmpsb
inc
rorl
stc
loope
push
or
mov
mov
mov
adcl
mov
pusha
cmp
stos
add
lret
xchg
sbb
jne
adc
test
andl
psubw
mov
sbb
mov
sub
inc
push
push
xor
lea
leave
mov
jo
div
fcoms
dec
pop
arpl
cmp
imul
js
clc
in
in
adc
mov
push
clc
dec
jge
push
sub
or
pop
mov
cmpsb
inc
adc
loopne
sbb
mov
push
jle
gs
push
popf
out
stos
dec
push
jmp
sub
test
xchg
xor
hlt
je
xchg
sbb
mov
xor
imul
jo
inc
pop
push
popf
mov
rcrl
cmpsb
cld
dec
fcmovb
jecxz
dec
sub
push
pop
mov
jg
fdivrl
in
and
inc
ret
pop
push
inc
inc
lock
xlat
sbb
inc
roll
sub
repz
outsb
cmp
sub
mov
ljmp
sar
jo
js
sti
sub
push
repnz
and
cld
mov
xrelease
ds
or
addb
fistpll
pop
andb
bound
sub
or
fldt
cmpsl
pop
or
bound
inc
sbb
jge
or
sbbl
popa
xor
push
pop
or
xchg
pop
mov
xchg
inc
inc
lock
aas
jns
or
je
cmp
push
cwtl
dec
adc
std
jmp
out
lods
aad
mov
and
pop
sub
mov
test
mov
mov
call
arpl
jmp
mov
mov
cld
fsubp
or
aad
ret
or
jge
scas
jae
aaa
sub
mov
add
daa
ret
clc
stos
in
jle
cli
or
cmc
or
not
sub
in
loope
jg
xor
in
push
adc
or
repz
mov
inc
clc
jo
hlt
int3
sbb
and
cli
and
pop
and
fisubrl
jbe
sbb
lret
hlt
adcl
shl
shlb
dec
je
cli
in
dec
mov
test
adc
dec
mov
cmpsb
in
xor
popf
lods
mov
ds
xchg
idivb
loopne
mov
or
add
mov
mov
subb
jne
mov
xchg
emms
lret
icebp
pop
add
es
iret
mov
or
jmp
jo
or
mov
mov
dec
cmp
pushf
mov
sti
pop
or
popf
in
xor
or
cltd
andb
or
or
mov
test
jecxz
cmp
lret
gs
dec
enter
lcall
dec
pop
mov
push
jg
lret
dec
dec
test
pop
aam
adc
dec
xchg
push
decl
gs
lods
dec
aaa
adc
int
xchg
addr16
mov
lock
std
pop
in
mov
in
push
xlat
test
cmc
data16
sbbb
gs
pause
sbb
inc
stos
iret
sub
push
daa
insb
or
xchg
fists
inc
or
in
jp
xor
stos
xchg
xchg
out
subl
and
or
xchg
insb
xchg
pop
xor
inc
lods
and
sbb
loopne
mov
sbb
cmp
xchg
sbb
lahf
cli
dec
or
test
cmc
add
mov
aam
fldcw
push
mov
add
push
out
aas
pop
aad
leave
and
adc
jno
andb
and
mov
xchg
and
or
lret
aaa
cwtl
cmc
adc
xor
add
mov
mov
cmp
and
pusha
push
push
jg
fadds
add
mov
xor
adc
aas
or
xchg
cmp
jnp
pop
adc
mov
gs
out
pop
fbld
jae
mov
ja
lcall
jg
out
repz
imul
adc
push
ds
adc
ficoms
mov
scas
lret
into
or
mov
pusha
adc
or
pop
stos
lahf
into
pop
je
adc
rorl
daa
leave
imulb
test
inc
push
lret
insl
jmp
jo
add
mov
push
add
arpl
mov
mov
je
and
out
mov
xor
or
frstor
rcll
sub
or
add
jmp
outsl
jl
jl
inc
xor
imul
cmp
and
insb
in
out
or
pop
ror
jne
andb
negb
repnz
pop
mov
stos
push
sbb
ret
std
dec
inc
jecxz
mov
mov
xor
sbb
nop
push
adc
sahf
sbb
cltd
sub
insb
clc
mov
movl
cltd
out
bound
jle
dec
stos
mov
jg
pusha
sbb
add
inc
push
pop
xor
imul
orl
inc
or
call
lds
pop
jnp
pop
add
jmp
pop
xchg
jp
xchg
stc
xor
cltd
ds
insl
stc
loopne
jb
cmp
jbe
cmp
imul
sub
lret
divb
lret
xchg
pop
cmc
cmc
push
sub
xor
movsb
add
add
popa
stos
cmp
out
mov
in
fwait
dec
pop
sahf
pop
inc
mov
imul
dec
sti
mov
mov
or
sbb
std
mov
xchg
ss
testl
addl
or
clc
in
dec
adc
fcompl
inc
je
cltd
dec
fdivs
sti
mov
push
sub
sub
inc
lcall
xchg
push
pop
inc
aad
sbbl
nop
in
jg
out
aam
lret
xor
mov
les
nop
fidivrs
xor
jb
mov
cmp
dec
aaa
mov
jb
mov
stc
sarb
cmp
add
or
push
pop
cmp
cld
std
xchg
fimuls
mov
aam
repz
push
sub
subl
je
inc
mul
aam
cmp
sahf
pop
cmp
and
les
lahf
call
push
xchg
xor
sub
jmp
fnstsw
mov
jmp
dec
rolb
xchg
imul
test
insb
jnp
lret
stos
push
jge
sbb
sub
jecxz
push
imul
mov
je
push
push
adc
ds
inc
inc
shll
pop
in
mov
mov
mov
sbb
inc
lea
mov
pop
lods
jno
add
inc
fsub
jl
mov
or
cmp
fadds
xchg
jmp
pop
pop
in
inc
inc
ret
mov
lret
jnp
sahf
scas
out
and
mov
or
and
lods
jnp
xor
xchg
in
dec
rclb
bound
in
aas
xor
pushf
in
mov
xchg
inc
add
or
jmp
inc
insl
sbb
jmp
fwait
div
insl
mov
and
mov
aad
add
addr16
xchg
fstpl
stos
idivb
sub
mov
adc
dec
cmpsl
lods
jp
xchg
jecxz
dec
sti
jbe
call
jle
hlt
stos
xor
test
xor
mov
in
dec
pop
lods
scas
push
xchg
cmc
sahf
mov
stc
jns
popf
out
test
add
mov
out
mov
or
sub
popf
pop
sub
insl
ret
dec
orl
jp
pop
insb
jnp
jp
cmp
lret
leave
mov
mov
rclb
xor
stc
cmpsb
mov
pop
stos
lods
daa
add
pop
fiaddl
mov
jb
test
dec
ret
in
lcall
sub
loopne
push
loopne
sub
not
dec
out
shll
call
sbbl
sub
dec
fsubs
or
xorl
pop
dec
int
cmp
ret
jno
jmp
ret
or
call
pop
pop
cli
ja
ss
xlat
mov
mov
pop
hlt
sub
xchg
fists
popf
push
xchg
imul
add
in
mov
xor
out
das
ss
jl
push
stc
inc
pop
imul
push
movd
gs
std
shll
outsb
push
push
mov
pop
bound
ret
stos
cmp
movsb
jno
stc
and
sbb
pop
pop
test
push
lret
cmp
cwtl
dec
dec
lods
cmc
adc
jmp
sbb
sub
lock
pop
in
adc
inc
sub
push
mov
adc
sub
imul
xor
fbstp
test
xor
and
lahf
cmp
das
movsl
movsb
jo
cld
jecxz
fstpl
or
nop
or
jb
arpl
or
push
mov
mov
cmp
fs
clc
sar
add
cld
xor
iret
push
outsb
mov
mov
xchg
add
in
push
dec
sub
movsl
sub
js
test
aas
test
mov
sub
inc
push
popf
sahf
cltd
xchg
cld
mov
stos
jns
stos
sbb
xchg
imul
push
xchg
pop
fcompl
xchg
or
mov
imul
movsl
adc
jmp
add
sub
mov
adc
xchg
fwait
xor
add
and
xchg
inc
cmp
lods
daa
pushf
in
mov
std
cmpsb
sub
je
pusha
sub
xchg
in
sbb
add
ljmp
ss
xchg
sbb
hlt
fidivrs
sbb
dec
dec
cs
and
xlat
jne
das
sahf
cwtl
pop
mov
outsl
xor
test
adc
xor
loope
cmp
dec
int3
mov
jg
cmpsl
leave
jge
mov
pop
inc
mov
cmp
mov
in
mov
cltd
cmp
jns
stc
xchg
xchg
pop
adc
add
popa
xchg
les
int
ja
inc
adc
pop
cli
pop
lcall
jl
push
aas
mov
mov
push
pop
sub
pop
ja
mov
pop
push
cmp
pop
sbb
xchg
popf
cmp
cwtl
cmpsb
push
sub
mov
mov
mov
sbb
mov
in
push
cltd
jb
or
std
loopne
lahf
cmp
inc
or
push
loope
push
call
sbb
mov
push
push
inc
bound
jge
adc
mov
rcl
repnz
iret
sti
push
lock
arpl
dec
inc
mov
adc
notb
dec
and
icebp
cmp
cmp
fadds
adc
xor
cmp
loop
test
sub
xchg
mov
add
adc
and
lcall
fstl
push
in
pop
shlb
adc
dec
dec
inc
outsb
xchg
sbbb
and
outsl
fmull
mov
out
movsl
cmc
popa
mov
std
out
xchg
add
mov
jae
lret
bound
mov
push
test
loope
xchg
stos
xchg
arpl
inc
divl
jl
pop
sub
dec
pop
hlt
daa
xchg
dec
pop
xchg
dec
scas
pop
sub
adc
nop
push
inc
iret
push
enter
xor
pop
inc
add
inc
jmp
imul
xor
out
or
xlat
mov
insb
xor
mov
push
icebp
xchg
outsb
aam
aam
enter
add
imul
ja
cld
mov
scas
adc
mov
fs
roll
jle
lds
inc
out
in
inc
mov
in
out
cmc
mov
xchg
rcll
pop
test
mov
int3
mov
inc
outsl
push
scas
push
insb
in
mov
sbb
data16
lds
scas
imul
data16
roll
xchg
push
in
mov
adc
cltd
je
pop
pusha
sbb
iret
cmp
push
jge
mov
hlt
scas
adc
dec
in
mov
mov
mov
add
mov
jno
inc
push
add
or
jg
xor
pop
xor
mov
mov
mov
xchg
mov
popf
xchg
pop
inc
and
push
xchg
push
enter
outsl
adc
xlat
pop
lods
cltd
mov
ret
jnp
and
xchg
aas
lret
imul
jae
insb
lea
sub
adc
inc
xchg
out
xor
mov
or
sbb
inc
loopne
inc
cmpsl
loop
inc
inc
push
add
jnp
add
jecxz
in
jg
in
sti
imul
aam
jge
push
cmc
xchg
mov
jo
jmp
movsl
mov
xor
mov
std
mov
cld
xchg
or
pushl
inc
jmp
hlt
jns
jmp
sub
aad
fcompl
cmp
lret
out
lret
push
inc
cmp
cmp
or
rorb
out
adc
jno
sub
sbb
cli
pop
push
mov
call
mov
adc
jle
data16
mov
add
fldt
xor
test
sbb
stos
test
pop
push
jns
leave
mov
leave
scas
inc
jbe
pop
imul
and
mov
enter
pop
dec
in
sbb
xor
ret
pushl
sbb
mov
cltd
rcrl
mov
test
shll
mov
dec
popf
int3
xchg
out
popf
lea
xchg
dec
add
add
push
flds
jg
test
inc
or
imulb
sbb
aas
cld
lcall
rcl
repz
dec
mov
pop
loope
inc
sub
xchg
ljmp
movsl
jb
xor
adc
dec
ret
out
adc
or
cmp
push
or
push
in
mov
cmp
ljmp
imul
out
cs
int
out
cmp
repnz
sub
xchg
mov
enter
adc
and
movsl
addr16
or
xor
data16
pop
lret
js
popf
clc
jno
lds
mov
mov
mov
jl
rcll
mov
cmp
push
mov
jno
roll
mov
gs
inc
arpl
data16
ja
and
jle
arpl
jnp
xchg
push
lcall
xor
pop
or
jns
xor
push
cs
cmp
or
cltd
cmp
lds
mov
movsb
adc
leave
adc
mov
inc
data16
xor
xor
add
stos
push
fsubl
icebp
aam
xor
xor
scas
mov
and
jle
add
mov
push
fnstsw
dec
mov
xchg
loopne
jecxz
pop
movsl
add
ret
lea
fistl
fs
fldcw
stos
addr16
jecxz
inc
cmpsb
dec
add
fwait
xor
push
jns
ja
mov
xor
cwtl
dec
daa
imul
in
test
lds
xchg
insl
push
aaa
pop
sbb
mov
cmc
scas
jmp
cmpsb
inc
repz
lcall
out
jnp
mov
jno
pop
or
stos
test
adc
jae
je
shrb
fidivs
cmc
dec
adc
hlt
jb
xchg
sub
iret
inc
es
xor
sbb
or
cli
divl
adc
and
inc
or
or
in
sti
jae
inc
dec
adc
sub
repz
and
lods
lcall
dec
mov
movsb
lcall
cmp
std
mov
sbb
add
jae
xchg
outsb
sub
xchg
sbb
inc
xor
sub
push
pop
push
fs
lods
dec
xchg
mov
cmp
xor
inc
ficomps
out
cwtl
pop
arpl
inc
add
imul
push
pop
iret
xchg
out
jg
mov
fdivrp
dec
mov
cmpb
xor
add
dec
mov
repz
add
xor
sbb
pop
insl
add
lock
xor
adc
lea
jg
std
imull
jecxz
mov
xor
rcrb
sub
lea
xchg
jne
xor
sub
icebp
jnp
or
lds
push
loopne
or
cmpsb
mov
push
fstl
mov
cmp
andb
dec
xor
dec
les
dec
jb
les
lods
cli
or
pop
xchg
fcoml
jecxz
sarb
fdivrs
add
push
mov
cli
pop
pop
ficomps
fidivrs
sbb
ss
and
mov
sahf
and
jl
je
jecxz
pop
cltd
bound
push
or
in
jo
pop
dec
imul
or
fsts
mov
incb
mov
jnp
jb
dec
xchg
cmp
leave
out
sbb
push
jbe
lock
xchg
inc
cmp
dec
sti
pop
iret
pop
stc
mov
in
sub
push
imul
jb
int
ljmp
ficomps
outsb
test
adc
dec
out
adc
mov
pusha
mov
jae
int3
loopne
mov
pusha
sub
rcrb
je
sahf
into
mov
push
scas
xchg
test
mov
out
clc
ret
xchg
xchg
je
aam
lret
jns
sub
loope
and
int
shl
ret
xchg
xlat
inc
sub
cmpsl
shrl
aaa
pop
xor
push
ds
xchg
es
div
fistps
mov
ds
scas
insl
mov
xchg
es
add
sub
cmp
pop
sbb
or
dec
dec
fcoms
nop
inc
ja
cmpsb
cmp
dec
jno
dec
aad
xchg
outsb
pop
dec
loopne
push
lcall
mov
jb
sbb
adc
clc
and
test
ja,pt
aam
cs
sbbb
mov
lahf
test
cmp
inc
scas
test
repz
mov
scas
in
push
adc
pop
jne
xor
jnp
adc
outsl
and
xor
adc
mov
adc
btc
mov
les
std
lods
mov
adc
test
mov
mov
rorl
mov
hlt
leave
mov
ljmp
adc
add
fsubr
inc
lcall
icebp
pushf
fsubp
push
jge,pn
pusha
sub
rorb
mov
lds
ret
jo
and
insl
insl
cmp
gs
hlt
outsl
xor
sub
push
dec
xor
push
adc
aad
arpl
mov
push
push
outsl
cli
push
sub
sub
incl
xor
jae
decb
mov
arpl
in
scas
add
aas
addr16
sub
xchg
stos
sbb
je
js
dec
jecxz
test
int3
mov
dec
shll
cmp
shrl
cmp
fwait
dec
sbbb
mov
int
add
push
aas
push
add
push
lods
push
jp
or
jl
cmpsb
jl
fidivl
adc
jno
jmp
dec
mov
mov
sub
mov
ret
in
push
sbb
push
lea
out
sub
jo
sub
pusha
sbb
jne
and
aad
enter
adc
cmp
call
arpl
data16
jne
aas
jle
shrb
push
inc
xor
rorb
das
push
or
fcomip
and
mov
and
mov
sub
out
bound
inc
pop
cmp
jmp
cmp
mov
jecxz
loopne
insl
xchg
dec
xchg
push
dec
sub
iret
inc
xchg
jns
or
lods
add
repnz
pop
fcmovbe
mov
push
pop
sti
mov
mov
push
divb
fidivs
mov
jp
decl
in
jge
adc
inc
inc
in
je
movsb
jge
pop
test
ss
push
adc
pushl
push
in
adc
jmp
in
or
xor
jnp
sbb
mov
stos
push
js
and
js
pop
push
dec
adc
mov
repnz
shl
jns
pop
test
lds
test
dec
push
icebp
pop
fsts
mov
scas
push
cmpsb
ret
adc
dec
and
pop
les
sub
aas
mov
ds
cmp
pusha
mov
pop
fists
xor
arpl
out
mov
pop
out
js
cmp
mov
sub
aam
out
pop
es
cmp
mov
adc
push
test
xor
and
sti
insl
push
mov
mov
stos
push
repz
mov
test
daa
push
fs
mov
sub
cmp
repnz
inc
into
push
mov
enter
rcrl
cmp
aam
mov
pop
cmp
mov
shrl
cmp
mov
xchg
mov
jbe
and
lahf
icebp
mulb
imulb
jns
fildll
sbb
mov
cmc
lahf
sbb
cmc
jg
pop
mov
das
insl
scas
sub
xchg
and
mov
iret
xchg
adc
mov
repz
out
repz
hlt
sbb
fcomps
jb
int3
ret
mov
lock
mov
add
mov
pushf
mov
cmp
add
inc
stos
jo
and
adc
dec
jecxz
int
shrl
xor
fistpll
loop
test
cli
jp
push
inc
dec
scas
stc
add
cli
cwtl
lock
in
push
mov
jne
aad
xor
int
pop
clc
cs
roll
or
lock
mov
jge
add
adc
cmp
sub
add
or
cli
es
scas
sub
add
lods
xchg
clc
and
xor
jmp
or
jp
add
xor
ret
call
dec
test
pop
jno
cmp
sub
ret
inc
or
adc
repnz
dec
push
xor
push
shr
cmp
in
or
mov
testb
imul
sbb
cmp
fisttps
cmpsb
cs
cs
in
fwait
push
test
andb
mov
movsb
jl
cmp
inc
adc
loop
or
push
fcomps
mov
cli
popa
jno
jg
sbb
repnz
stc
or
push
pop
stc
jb
inc
add
mov
sub
dec
jge
jb
inc
and
inc
jp
dec
adc
push
and
push
cld
pop
loopne
mov
and
and
lret
sahf
shll
fidivrs
mov
je
xor
push
mov
adc
cmp
pop
sti
mov
push
mov
iret
push
lret
push
sub
je
test
cltd
sub
fdivs
jg
and
outsb
push
and
jns
jno
mov
cmp
repnz
sbb
test
popa
bswap
pop
xor
lods
daa
xchg
xor
and
sbb
idiv
in
insl
mov
dec
fwait
sarl
adcl
imul
fdivl
aas
cmp
and
rorl
aaa
ds
in
push
dec
loop
and
jne
ret
and
in
stc
pushf
push
jb
pop
arpl
mov
jno
sub
repnz
dec
dec
andb
push
xor
sbb
cmp
mov
hlt
bound
mov
gs
cmp
jle
sar
cwtl
loope
or
push
iret
xchg
inc
aas
fnstenv
cmp
into
pop
jp
data16
sbb
jp
sti
mov
sarl
wrmsr
rolb
das
shl
fs
or
into
shl
jg
xorl
inc
pop
dec
cmp
fwait
cmp
xchg
jns
mov
sbb
lods
inc
jl
pop
rcr
pop
ret
lock
aas
jp
adc
dec
push
pop
jb
fnstcw
push
push
xchg
inc
addl
push
cmp
jge
fildl
inc
cmpsb
jle
fs
popf
mov
inc
jmp
xchg
sbb
in
mov
xchg
mov
aaa
sti
cli
cmp
inc
pop
and
mov
clc
add
xor
dec
in
xor
mov
je
loopne
jns
out
lahf
inc
xchg
js
mov
mov
push
inc
mov
int3
lock
out
fisubrs
pop
out
test
and
popf
push
out
fadd
mov
lds
push
xchg
lock
pmulhuw
fistps
sbb
fstpl
adc
sub
inc
cmp
scas
negl
sbb
addr16
adc
push
cmpsl
cmp
fsub
push
mov
repnz
iret
aaa
sub
jp
cmp
mov
test
jecxz
aad
add
adc
cmc
dec
pop
xlat
fists
cmpsl
mov
mov
ljmp
movsb
and
jl
leave
push
shr
hlt
and
jbe
push
cmp
outsb
nop
je
push
out
pop
fnstenv
xchg
adcb
inc
test
scas
xchg
insb
rclb
mov
loopne
xor
insl
clc
or
xor
pop
mov
jo
xor
test
repnz
das
js
aam
f2xm1
fsub
sub
xor
les
pop
sub
xchg
lahf
ss
push
addr16
js
loopne
rol
jo
imul
mov
fwait
popa
inc
je
and
cmpsb
push
inc
cwtl
sbbb
mov
arpl
mov
inc
call
outsl
xchg
insl
test
fsubl
lret
pop
push
mov
rol
ja
jle
xor
cmp
sub
push
push
dec
adc
outsb
xor
adc
or
loop
cmp
dec
jp
xchg
sub
scas
mov
pushf
pop
xlat
test
inc
aad
pop
ficoms
les
sti
and
scas
adc
lcall
stos
popa
loopne
sub
hlt
sub
jmp
gs
push
pop
stos
and
jo
pop
mov
scas
push
aas
sub
sbb
jae
add
sbb
insb
inc
cmp
lock
sub
sbb
mov
xor
or
jnp
dec
sub
cmp
mov
jns
pop
sbb
or
mov
dec
push
fmuls
out
jmp
es
push
push
jmp
lea
repz
imul
cld
test
ss
sbb
add
xlat
lret
pop
jg
or
shll
int3
scas
jle
arpl
mov
mov
pcmpeqw
data16
scas
in
pop
imul
lods
sti
loopne
cmp
mov
pop
adc
sti
inc
cmp
push
lret
icebp
in
in
outsl
loope
mov
mov
idivl
pop
jecxz
idivb
es
adc
cmp
ret
loope
ret
xchg
jns
adc
int3
ljmp
cwtl
mov
loop,pt
jl
inc
or
sub
xchg
mov
jle
fisubrs
push
shl
jmp
bound
cmp
nop
pop
testb
dec
mov
push
les
push
or
mov
add
inc
movsl
rcrb
insl
out
fiadds
jmp
cmpsl
cmpsl
pushf
fwait
jbe
push
dec
into
lahf
sub
shll
iret
aas
and
out
sti
sbb
into
mov
cmp
sbb
add
xchg
jl
cmp
jnp
sahf
sub
mov
cmp
ds
filds
repz
out
dec
pop
movsb
mulb
es
loope
cmp
cmp
cwtl
fldt
std
sbb
cmp
pop
sub
mov
icebp
mov
add
jmp
rep
sahf
xor
jne
movsl
aaa
pop
pushf
sub
cmp
mov
xor
test
dec
cmc
push
push
sti
jae
gs
fstl
outsl
aad
mov
js
jb
cmp
sub
and
jmp
xchg
rorb
lods
push
adc
adc
mov
sbb
orb
std
int
pop
rcrb
and
xchg
fwait
jne
cmpsl
lahf
push
jl
or
mov
inc
and
push
loopne
xchg
inc
adc
sahf
out
scas
jp
or
jl
fisubs
rcr
pusha
int3
out
jno
push
cmp
into
mov
sbb
leave
mov
sub
ficompl
andl
or
inc
stos
insl
out
cmp
xor
sub
pop
lret
add
mov
push
mov
jg
mov
pop
sub
outsl
cmp
sub
add
ljmp
addl
test
and
fcomp
add
or
or
cmp
pop
test
adc
and
out
cmp
arpl
or
sbb
rol
ret
out
sub
movsl
mov
dec
pop
mov
xchg
xchg
pop
fsubl
movsb
icebp
mov
nop
push
inc
or
inc
negl
daa
xchg
insl
inc
mulb
xchg
mov
pop
push
js
movsl
mov
jg
stos
jne
int3
lods
push
xor
mov
mov
out
cltd
stos
sbb
daa
or
pusha
lahf
pushf
fxch
aaa
test
inc
lods
mov
mov
es
xor
aad
fnstenv
mov
hlt
fidivrs
push
push
ljmp
xor
shl
loopne
outsl
mov
iret
push
xchg
mov
stos
dec
xor
push
cmp
jl
les
hlt
xchg
pusha
test
lahf
add
jp
divb
in
adc
stos
jae
xor
lahf
sub
push
xchg
out
xor
sbb
shlb
std
sbb
and
xchg
jbe
cmp
sbb
ss
movsb
out
aas
lret
add
sub
pop
dec
inc
out
sub
popa
popa
xchg
xor
sarl
pop
ja
lods
arpl
test
les
scas
jne
lods
lret
mov
ljmp
mov
add
sub
outsl
cmp
cs
leave
outsb
and
loope
cmp
cmpsl
inc
sarl
fistl
ljmp
scas
jp
xchg
xchg
or
orl
or
mov
pop
out
mov
dec
dec
rcr
nop
je
js
adc
frstor
mulb
jo
addl
cs
and
ljmp
je
mov
fs
orb
flds
shrb
ret
fimull
adc
mov
or
inc
lock
rcl
iret
add
mov
test
inc
adc
fcmovu
inc
sub
lcall
inc
xchg
xchg
or
xor
insl
dec
repnz
lods
xchg
xor
movsb
ljmp
aad
sbb
push
pop
pop
fsubs
dec
ret
mov
jne
xchg
test
xlat
addr16
mov
pop
dec
dec
add
std
cmp
jne
inc
scas
scas
mov
enter
jo
out
andb
decb
imul
adc
repz
jmp
outsb
push
in
push
rcll
or
scas
iret
aaa
fwait
aas
xor
jp
div
fldenv
jne
pushl
inc
rcr
sbb
dec
in
jb
pop
dec
xor
rorb
lea
cmp
pop
in
jno
add
cld
dec
je
in
sti
pop
shrb
es
test
jo
movsl
jo
mov
in
mov
insl
pop
xchg
adc
dec
cld
sarl
fcomps
push
dec
xlat
sbb
mov
aad
sbb
push
lds
scas
push
sub
cld
cmp
pop
pushf
test
add
leave
mov
jl
cmp
adc
adc
mov
std
dec
pushf
xor
enter
and
mov
jae
add
fnstsw
add
mov
sbb
js
lea
jns,pt
xchg
or
fmull
cmc
lods
mov
scas
mov
cmp
add
aas
or
xchg
or
jne
mov
and
adc
jle
incb
in
push
sub
addb
popa
lds
cld
mov
ds
mov
mov
mov
dec
push
std
fsts
hlt
mov
jbe
mov
iret
xchg
int
scas
gs
imul
fidivrs
cs
lock
jns
mov
popf
dec
sub
outsl
nop
out
loopne
or
mov
imul
stos
fcompl
jl
jmp
sub
ret
lods
sbb
sub
add
leave
mov
mov
scas
cmp
and
or
xchg
xor
pop
jecxz
push
add
adc
pop
xchg
inc
jne
inc
xchg
cmp
jmp
mov
cmc
ja
mov
add
add
and
sti
xor
mov
or
pop
pop
xor
rcrl
scas
add
inc
popa
pop
les
cld
adc
lret
iret
mov
ss
mov
cmp
jl
mov
adc
orb
lds
push
lea
pop
cli
pop
lods
stos
fs
jg
lea
movsl
cli
in
mov
dec
icebp
dec
mov
mov
mov
jnp
cmp
push
cltd
loop
pop
iret
stc
mov
lret
jb
ljmp
pushf
ret
mull
xchg
aas
aam
and
das
subb
push
lret
xchg
lahf
and
mov
push
pushf
mov
out
loopne
inc
lock
gs
sti
sbb
sbbb
inc
sahf
test
insl
mov
and
or
test
dec
and
mov
xchg
daa
sub
jno
mov
or
js
and
xchg
clc
stc
push
fisubl
ljmp
imulb
loope
aad
mov
icebp
jle
sarl
add
bnd
xchg
ret
push
lea
jg
xor
aad
addr16
push
icebp
or
mov
jns
data16
std
adcl
dec
cs
aad
aas
loope
test
sbb
pop
push
out
or
gs
outsl
cmpsl
push
lret
jg
test
cltd
inc
or
dec
sub
enter
and
iret
push
xorb
test
aad
lock
or
loopne
shlb
out
cmpb
push
fldl
mov
call
out
je
mov
fistl
sub
mov
pop
mov
xchg
push
mov
jo
pop
lds
mov
popf
div
and
sub
mov
aaa
clc
stos
pop
scas
push
jae
ds
pop
sub
js
arpl
or
add
pop
inc
jno
out
inc
add
fdivp
push
or
aam
lds
lcall
pop
jge
mov
hlt
lea
sub
jae
int
aad
push
fstps
dec
ds
mov
cmc
out
or
adc
outsl
xor
inc
push
addr16
sub
rol
test
call
faddl
jge
jne
je
in
dec
xor
pop
rcrl
cli
cmpsl
push
sbb
in
pusha
stc
jno
cmp
and
sub
dec
dec
mov
jae
inc
out
pop
xlat
lock
and
js
insl
lea
mov
pop
movsb
mov
stos
xchg
lods
push
ljmp
imul
test
lret
adc
fidivrl
mov
sbb
inc
pop
jmp
fsts
popa
les
insb
xchg
mov
add
add
mov
mov
loope
xchg
loope
mov
cld
adc
cmpsb
popa
aam
adc
cmp
add
ss
and
inc
adcl
les
fstpt
fdivrs
inc
les
loop
fucomp
aaa
sub
mov
gs
push
shlb
insl
mov
adc
push
or
test
cmpsl
sub
and
pop
lret
xchg
ficoms
xchg
cld
mov
pop
and
rep
jbe
lods
outsb
xor
lret
xor
and
pop
ret
sbb
fsubrl
outsb
dec
mov
and
loop
add
repnz
loopne
insl
in
mov
loope
dec
adc
mov
jmp
pop
jns
mov
out
outsl
adc
dec
call
sbb
mov
enter
jg
fsts
xchg
test
sbb
cmpb
sbb
mov
jmp
cmpsl
or
ja
subb
or
repnz
ret
out
xchg
cmpsb
xor
mov
cmc
add
stc
jnp
pop
aas
mov
pop
add
sub
sub
push
add
mov
iret
rclb
adc
push
cs
xlat
or
lret
mov
pop
push
sub
lods
cmp
fwait
shll
xor
jmp
jae
mov
cs
imull
test
cmp
cli
mov
or
sub
jl
cwtl
popf
jg
push
in
lods
clc
mov
push
repz
icebp
in
addps
mov
cmc
in
aaa
lods
aad
rcr
aaa
sbb
ljmp
in
dec
jg
cli
mov
or
scas
stos
jecxz
fmuls
sbb
xor
or
int
mov
mov
sahf
fcmovnu
sbb
out
mov
ds
and
and
sub
add
push
and
dec
fistl
jg
mov
inc
sti
jmp
mov
xchg
lcall
mov
jg
cwtl
nop
xor
xlat
fnstcw
std
cmp
out
mov
dec
sub
jbe
out
cmp
cmc
mov
cwtl
xor
push
lea
pop
cmc
push
outsb
pop
insb
inc
cld
out
cmc
popf
or
movsb
adc
xchg
subb
mov
and
inc
sbb
cmp
loopne
js
ret
cmpsl
sbb
movsb
out
fdivl
push
xor
mov
stos
bound
int3
and
xchg
or
aaa
push
popa
test
dec
mov
fs
ja
xchg
lahf
mov
mov
add
es
cmp
mov
stos
xchg
incl
pop
rolb
sub
in
dec
fsubl
cmp
hlt
test
or
cmp
dec
inc
les
roll
test
je
lret
push
cltd
inc
aam
int3
pop
dec
data16
das
and
shlb
clc
cmpsb
dec
lock
shrb
dec
rclb
cltd
dec
or
sub
xchg
pop
inc
dec
adc
fcomp
fidivrl
call
rcrb
push
movsb
adc
scas
pop
mov
jmp
push
outsl
pop
bound
out
ret
stos
iret
cltd
int3
out
out
vmwrite
pop
fcompl
fidivrl
pop
jae
mov
mov
in
je
adc
andl
xor
in
cltd
mov
push
sub
jbe
bound
fbld
hlt
xor
test
mov
cld
inc
xor
pop
fidivl
lahf
jae
dec
pop
mov
jle
leave
ss
call
xlat
sbb
add
add
test
sbb
push
sbb
nop
andl
dec
push
xchg
movlps
adc
cltd
in
jns
sub
xor
or
jle
lcall
mov
jo
sub
stos
fnsave
mov
add
cli
ret
sub
pop
mov
lea
lds
mov
sbb
cmp
enter
test
pop
orb
xlat
mov
dec
pop
mov
push
pop
test
movsb
shl
mov
cmp
xchg
xchg
push
inc
cmp
cmpsl
cmpsl
mov
push
mov
in
mov
jns
and
call
out
push
fisubrl
xor
ret
mov
mov
add
ror
jg
scas
inc
nop
jno
mov
test
psubd
pop
jecxz
test
pxor
daa
inc
not
fdivrl
gs
jne
jp
add
xor
and
adc
sahf
cld
dec
sub
xor
cmpsb
push
cmp
xchg
dec
lret
stos
enter
lea
xor
sahf
cwtl
add
xchg
lods
push
les
push
movsl
scas
cwtl
clc
and
jmp
mov
scas
mov
xchg
shrb
push
imul
or
jge
mov
testl
mov
test
pop
into
test
clts
cli
xchg
jmp
jle
fstl
inc
lcall
imul
outsl
mov
je
and
in
xchg
incb
fidivs
push
xchg
jae
sbb
nop
js
cmpsb
das
mov
daa
inc
dec
sub
inc
dec
and
jg
cmc
shlb
adc
jne
or
push
lea
inc
arpl
push
mov
mov
fwait
fs
cmpb
mov
jp
push
std
adc
fsubr
fisubrs
jbe
fldl
cwtl
lock
es
jns
pusha
sub
sub
dec
cmpsl
cmpsl
dec
push
sbb
out
add
jle
pop
push
or
push
xchg
or
xlat
pop
cmp
aas
pushf
cmp
fwait
or
scas
popa
sbbl
lock
inc
push
mov
push
movsl
stos
sub
push
jne
faddl
jmp
insl
pushfw
mov
addr16
jle
mov
mov
aam
mov
or
iret
inc
xchg
or
pop
out
bound
and
loope
push
cmp
rcl
loopne
shll
cmp
ret
insb
xor
inc
fwait
jnp
add
push
cmp
in
out
cmp
jae
ficomps
jge
scas
dec
jecxz
xchg
dec
and
cltd
sbb
fidivrs
cli
out
jle
loopne
cmc
ud2
pop
clc
icebp
push
and
out
lret
fwait
mov
iret
lcall
push
add
xor
imul
and
lret
mov
loopne
mov
cwtl
fcmove
mov
cwtl
mov
ret
mov
push
fwait
adc
sub
mov
loop
jg
lret
stc
aad
mov
pusha
out
loopne
insl
mov
ficoms
in
adc
dec
pop
imul
inc
lds
adc
ds
or
ret
mov
push
ds
sbb
xchg
inc
adc
ja
add
push
add
inc
add
jno
pop
shrl
and
aaa
bound
inc
xor
sbb
nop
leave
clc
imull
leave
sub
and
fwait
cmc
pop
das
sbb
xor
mov
sbb
mov
mov
mov
in
out
sub
push
ja
call
dec
pop
add
xchg
jp
adc
pop
shrb
loop
lods
adc
cmp
xlat
cmp
hlt
rcll
out
and
in
cmp
bound
jae
fs
mov
and
xchg
int
mov
test
xchg
push
test
cmp
jp
jne
and
outsl
add
lock
incl
lds
les
cli
add
addl
cmp
movsb
add
cmp
inc
push
mov
cmp
jb
dec
push
cltd
cltd
out
inc
rolb
mov
idivb
loop
test
clc
loope
js
insl
sbb
xorl
lcall
mov
fwait
mov
movsb
popa
pop
cmp
cmp
or
ss
mov
mov
jp
movsl
jp
push
or
push
js
inc
pop
push
sti
call
rcr
jecxz
cmpsb
pop
sbb
stos
es
mov
test
push
adc
out
outsl
dec
scas
ja
pop
scas
jl
add
jns
loop
cmp
movsl
movl
xchg
in
sti
pop
inc
xchg
jp
fnstcw
aas
xor
mov
push
cmpsl
nop
loop
push
push
add
mov
add
push
lahf
sub
mov
mov
in
jle
daa
xchg
push
imul
push
aam
inc
pop
lret
sub
dec
inc
rorb
pop
nop
cmpsl
rcrb
fistl
adc
in
scas
adc
push
cmp
call
xchg
mov
out
lea
dec
jl
xchg
mov
cmp
lahf
inc
inc
daa
sbb
or
jbe
push
mov
je
xchg
shrl
cmpsl
mov
out
mov
mov
lret
inc
dec
cmpsl
mov
cmp
cmpl
push
and
nop
popa
lahf
call
mov
out
jge
daa
pop
mov
pop
and
xchg
push
mov
or
dec
sar
mov
inc
cwtl
add
popf
cmc
out
into
xor
pushf
dec
jmp
in
xchg
push
and
int
das
mov
xlat
and
add
mov
cli
or
inc
loop
inc
roll
imul
mov
sbb
mov
push
xor
js
push
adc
push
in
pop
loop
sbb
inc
out
mov
adc
add
and
int
and
sbb
sahf
dec
js
pushf
cwtl
nop
lds
int
push
ljmp
js
mov
pop
lcall
dec
leave
or
mov
sub
in
mov
push
pop
in
lret
dec
outsl
dec
add
negb
outsl
out
adc
push
popf
mov
fiaddl
sbb
je
lods
and
jns
xchg
mov
xchg
dec
in
into
leave
xor
cmp
pusha
jl
out
adc
ja
adc
fisubrl
and
in
daa
fiadds
push
arpl
xchg
fmul
int3
pop
lods
aas
call
fsts
shrb
mov
mov
loope
pop
nop
push
mov
jecxz
sbb
cmp
dec
xlat
ljmp
aas
dec
mov
sub
jo
iret
pop
imul
jmp
test
std
pop
pop
mov
je
inc
xor
push
mov
out
pop
call
cmp
bound
lds
popa
aaa
push
inc
aas
push
lods
fdivrl
repz
js
jl
jmp
jecxz
ds
add
pop
sbb
ror
cmpsb
push
mov
and
push
lret
or
jl
subb
outsl
ljmp
shr
or
pusha
pop
xor
pop
xchg
push
push
dec
into
push
xchg
cmpsl
mov
repz
jae
mov
xor
lods
pushw
cltd
mov
je
lahf
cmp
in
data16
std
xchg
enter
xlat
mov
js
movsb
lds
fidivrs
cmp
mov
in
mov
pushf
add
and
outsb
hlt
jmp
sub
or
adc
xchg
xchg
inc
add
xchg
fwait
ret
sahf
js
andb
add
roll
xor
push
sub
add
outsl
adc
adc
xchg
xor
adc
adc
das
hlt
xchg
add
hlt
mov
xor
movsb
mov
stos
jmp
fidivrs
pop
add
test
xor
jge
ror
fcoml
lret
movsb
ret
xchg
out
lods
ss
sub
scas
popa
rolb
ret
cli
lret
dec
arpl
loop
clc
dec
popf
cli
dec
push
pop
test
or
in
push
push
loope
and
rcrl
int3
xchg
jbe
or
ror
dec
fisubrs
imul
in
mov
sub
js
test
add
mov
ret
scas
loop
push
mov
aas
pop
mov
jae
test
mov
in
pop
adc
mov
cwtl
movsl
mov
aas
call
add
daa
lcall
test
and
adc
adc
cmp
idivb
sbbl
xor
or
sbb
mov
outsl
push
hlt
pushf
rcl
push
lds
xchg
dec
and
mov
andb
mov
cltd
mov
maskmovq
imull
dec
cmp
mov
ret
sub
add
repnz
xor
inc
jae
mov
inc
push
xor
and
xchg
adc
mov
shrd
test
inc
xchg
cltd
enter
jmp
adc
in
out
cld
and
xchg
stos
inc
sub
xchg
jno
dec
shrb
adc
xor
pushf
or
mov
test
mov
xor
out
sub
fs
mov
pop
cmp
orb
or
mov
and
rcll
cmc
loop
popa
enter
lret
xchg
add
ret
test
outsb
add
mov
stos
xor
ror
mov
inc
test
mov
push
jo
mov
push
movsb
fwait
mov
call
fildl
shlb
or
mov
cli
fsubrl
dec
adcb
outsl
mov
cld
addr16
xor
ficompl
xor
sbb
test
pop
and
jg
fists
xor
push
jnp
xchg
pop
movsb
mul
dec
dec
shll
mov
fistpll
sbb
cmp
gs
xor
push
jnp
bound
push
or
mov
dec
es
rcl
shrl
rclb
mov
movsl
mov
mov
mov
orb
stos
pop
and
jecxz
or
sub
ret
jl
inc
inc
or
shll
mov
xchg
adc
pop
cmp
add
add
popa
pop
add
and
imul
jns
lea
fwait
sbb
js
cmp
loopne
pop
pop
jnp
mov
aas
lret
out
shl
jbe
ljmp
pushl
icebp
pushl
jnp
cmp
push
jp
icebp
jnp
aad
push
xor
rcl
or
xor
out
into
and
or
int3
rcll
mov
lahf
fldl
testb
jbe
data16
mov
cmpsb
sub
sub
dec
cmp
jne
add
ds
or
inc
jle
mov
and
test
repnz
jae
cltd
add
inc
sbb
ficoms
fcomps
jbe
xchg
mov
lret
sbb
xor
mov
sbbl
jae
mov
mov
fucomip
pop
ret
adc
ret
sbb
sbb
inc
movsb
adc
sub
xchg
cmp
adc
icebp
jmp
mov
jp
sbb
push
loopne
ljmp
jge
pop
mov
add
loopne
hlt
shrl
test
fmul
sub
inc
incb
into
xchg
lea
data16
and
sub
dec
push
aam
sahf
and
mov
fs
mov
push
addr16
pop
in
xor
and
sub
push
pop
mov
pop
mov
and
lahf
fwait
jns
sbb
cmp
inc
jnp
jne
sub
popa
mov
lea
aam
decl
ret
sbb
dec
jns
mov
ds
jmp
dec
cmp
sti
pop
or
or
mov
ds
mov
stc
xor
addr16
test
addr16
sub
idivb
mov
pop
imul
push
pop
xorl
xchg
insb
adc
andb
adc
les
mov
pop
push
clc
movsl
aad
push
scas
jns
subl
add
ror
out
push
popf
movl
jae
jae
inc
jb
or
mov
cmc
jl
pop
insl
dec
dec
sub
dec
bound
bound
and
xor
pop
outsb
pop
fisttpll
in
xor
or
inc
sub
mov
ljmp
xchg
inc
add
into
cmp
cmp
jns
jne
fadds
lcall
mov
mull
fsub
mov
jbe
add
sbb
xor
mov
adc
fmull
ss
data16
jle
fsubrs
repnz
cmc
test
pop
roll
jne
in
lret
test
mov
iret
call
pushf
rcrb
dec
mov
inc
mov
inc
and
rcrb
fistpll
pop
into
jge
fisubs
lock
rolb
cwtl
shll
je
divl
inc
imul
shlb
adc
mov
pop
mov
imul
inc
roll
rcrl
out
dec
jmp
push
inc
jl
xor
in
scas
stos
rorl
and
pop
out
mov
inc
xchg
loope
seto
ljmp
lods
mov
outsl
xchg
pushf
inc
testb
pushl
daa
fdivp
mov
mov
cmp
leave
aam
push
sub
pop
dec
bound
clc
inc
sub
cmp
mov
clc
xor
aaa
jle
cmp
test
push
addl
inc
cmp
insb
in
jnp
and
push
or
shrl
ret
and
rcl
imul
lcall
insl
push
stos
mov
popf
cwtl
in
and
sar
sub
movsb
push
clc
pop
mov
push
repz
test
imul
dec
iret
cmp
rcrb
lret
out
in
mov
imul
ds
mov
int
negl
adcl
rol
fdivr
into
shrl
xchg
and
mov
sahf
push
ljmp
test
aas
test
aad
fucomi
mov
fidivs
xlat
add
pop
fbld
sarb
push
xchg
mov
fstpl
insb
pop
enter
f2xm1
movsb
imul
sub
mov
adc
lds
movsl
pusha
repz
std
cmp
push
mov
jns
ljmp
pop
adc
xchg
outsb
fwait
xor
cwtl
mov
add
filds
lret
mov
adc
loope
push
lret
adc
and
xor
mov
pop
cli
out
sti
ljmp
fwait
aaa
repz
lret
xchg
mov
cmpsl
pop
pushl
push
into
mov
or
jge
sahf
cmp
stos
mov
cld
rcr
mov
mov
sub
xchg
mov
pop
scas
xchg
mov
repz
dec
not
push
pop
idiv
sbb
in
int3
stos
xchg
jg
movsl
push
jecxz
hlt
inc
mul
dec
push
mov
or
arpl
jmp
out
outsl
xchg
cmc
ret
sbb
cmp
xchg
hlt
mov
jae
jl
jno
sarb
aas
cmpsb
and
xor
add
mov
add
popf
jnp
cmpsl
adc
jbe
lcall
xchg
dec
fs
das
pop
cld
inc
call
aaa
nop
scas
mov
aas
sub
mov
enter
ss
jg
dec
sub
and
lret
std
adc
roll
jbe
pop
xchg
mov
and
push
fiaddl
aaa
nop
notl
jae
xchg
push
pop
add
push
popf
test
je
cmp
jno
sub
lock
inc
lods
arpl
setne
ss
ret
pop
mov
push
dec
bound
dec
xorb
or
cwtl
add
mov
mov
stos
adc
daa
mov
out
sub
jge
pop
addr16
push
aam
cmp
cmp
xor
sub
inc
aad
and
pusha
andl
jl
rol
push
inc
hlt
cmp
jno
cld
lds
adc
pop
bound
sub
or
push
push
sub
adc
and
push
mov
jl
leave
push
mov
push
adc
cmpsb
jns
aad
pop
imul
js
lahf
or
pop
lods
jno
xchg
hlt
xor
jl
cli
add
data16
xchg
loop
iret
xor
add
dec
jne
dec
inc
arpl
xchg
push
mov
sbb
insb
cmp
rolb
pusha
dec
in
nop
mov
cli
insb
dec
pop
out
loope
shl
jae
aas
xlat
adcb
mov
sbb
add
or
xor
or
aaa
loop
mov
mov
out
mov
js
lea
or
ljmp
fcmovnu
xor
add
lahf
fsub
ss
lods
shr
cmpb
insb
daa
test
push
push
mov
fnstsw
in
jne
mov
xchg
push
or
cmp
push
pop
xor
mov
icebp
push
jo
and
lods
jnp
adc
sub
out
in
insb
xor
xor
fs
loop
sarb
push
add
in
nop
das
ss
popa
lea
lret
xchg
mov
xlat
out
out
mov
jns
pop
std
notb
imul
imul
push
mov
add
and
jle
push
adcb
pop
lcall
icebp
sub
lock
ret
repz
mov
cmp
sub
scas
out
or
lea
cltd
sub
imul
mov
jns
adc
in
aas
xchg
pop
add
and
pop
out
pop
out
outsb
sub
pusha
inc
testl
dec
test
lea
hlt
cmp
or
cmpsw
adc
fwait
std
fistps
add
pop
xchg
lret
rorb
and
sahf
cmp
and
jbe
xchg
negb
dec
les
pop
iret
sbb
daa
das
xchg
mov
xorb
pop
mov
lahf
icebp
jle
negb
dec
inc
mov
mov
fmul
das
jb
xlat
mov
in
cmp
daa
and
inc
aam
sub
or
idivb
xor
mov
xchg
ss
mov
repz
dec
outsl
loop
jl
out
loope
xor
test
cltd
adc
and
and
sahf
lcall
and
ja
movsl
imul
insl
call
mov
cmp
movsb
je
pop
xor
in
lock
rcl
mov
jmp
fldl
iret
ss
into
call
sti
cmc
sbb
ror
adcb
mov
mov
xor
push
add
mov
jns
repnz
xchg
fdivs
pop
into
ja
sbb
js
adc
mov
mov
test
pop
pop
jl
adc
icebp
cmp
lea
and
pop
inc
xchg
test
jb
out
shll
lock
jae
pop
dec
jns
ja
outsl
out
pop
add
ss
cmp
ss
cmp
cmc
xchg
mov
mov
orb
mov
sbb
lods
subb
cli
roll
lcall
lods
mov
pop
add
mov
sbb
out
popf
mov
movsb
out
mov
mov
mov
mov
push
sub
aad
push
fnstsw
xchg
jge
jmp
iret
pop
stos
inc
icebp
in
test
pop
push
mov
rorb
mov
xor
cmc
les
xlat
add
je
not
aam
dec
cli
mov
or
or
mov
mov
movsl
int3
push
inc
mov
adc
jbe
movsb
mov
sbbl
pop
jnp
out
mov
or
leave
pop
cmp
xor
sub
lods
xchg
sub
mov
outsb
sbb
leave
mov
ret
jbe
jmp
sbb
popf
xor
jecxz
add
ljmp
mov
nop
sbb
jmp
flds
iret
popf
addr16
or
mov
iret
sub
scas
mov
ret
mov
ret
sub
jnp
jg
xchg
lock
out
jle
mov
ss
adc
xchg
and
mov
das
ljmp
pop
adc
pop
xchg
movsl
inc
jo
les
lahf
inc
pop
scas
jnp
movsl
dec
mov
dec
mov
sub
mov
stc
dec
inc
xor
cmpb
xor
xor
out
pop
push
push
mov
pop
movsb
xor
jnp
dec
sub
orl
jns
insb
mov
test
push
pop
add
aam
mov
mov
out
out
ret
into
hlt
in
incl
mov
and
sub
dec
sub
out
mov
cmp
mov
stos
dec
adc
and
insb
aas
push
and
cwtl
in
jecxz
dec
mov
cmp
sub
fucomp
and
cli
dec
pop
dec
jo
shrb
popf
test
mov
jecxz
ftst
xchg
jae
sti
mov
fs
fsubr
into
add
xchg
call
aad
push
int3
out
push
nop
xor
sub
ljmp
repnz
aas
inc
fmull
icebp
sbb
pop
cmp
cmc
lahf
outsb
add
push
mov
mov
cs
fdivr
popf
mov
xchg
xchg
fistps
adc
jne
xchg
ja
loopne
aad
sub
hlt
mov
jnp
aas
repz
mov
lods
fstpt
lea
ds
mov
mov
mov
bound
outsl
shl
cmp
fs
xor
mov
or
aam
lds
pop
pop
jecxz
test
xchg
xchg
xor
mov
sti
scas
das
sti
jge
pop
mov
fisubs
push
cmp
ss
mov
inc
pop
int3
loop
fisubs
js
add
pop
int3
popf
aas
movsb
xlat
bnd
in
mov
shll
inc
cmpb
sbbb
jmp
filds
fstpt
neg
cs
xchg
mov
sbb
insb
and
aaa
sbb
insl
push
sbb
adc
cmp
and
bound
xor
xor
cwtl
data16
je
mov
inc
push
test
add
mov
rcrl
in
xorl
pop
jbe
scas
out
enter
imull
pop
jne
or
lods
loopne
jb
loop
sbb
pop
test
outsb
and
shrl
push
inc
call
insb
dec
mov
pushf
scas
inc
jl
dec
dec
inc
stos
clc
or
pop
addb
xor
imul
cltd
stos
lock
xchg
cmp
loop
add
jecxz
xor
fstpl
sahf
lahf
mov
lcall
test
test
mov
sbb
ficoms
or
dec
adc
jge
aas
pop
inc
addl
rorb
sub
or
shlb
or
movsl
aam
inc
cwtl
and
sub
fsubs
rcl
adc
ret
inc
mov
dec
mulb
jg
push
pushf
ss
sub
dec
std
mov
sub
mov
fstpl
xor
adc
xor
xor
leave
aad
outsl
adc
addr16
cs
pop
ss
cmc
shr
jb
repz
mov
inc
jne
cli
mov
jg
and
subb
fwait
inc
sbb
xchg
sub
add
ja
cmp
adc
pushf
cwtl
sub
dec
fcompl
scas
and
loop
sbb
jns
jg
addb
push
pop
mov
in
add
ret
cmp
sub
and
mov
or
cli
scas
ret
lea
mov
outsl
test
mov
cmp
roll
pop
movsl
cmp
movsl
add
or
imul
ret
es
rcr
and
mov
xchg
mov
dec
fdivl
hlt
mov
and
dec
pop
inc
cmp
xor
inc
int
cmp
adc
mov
repz
leave
sbb
sub
popf
bound
pop
bound
push
xor
cmove
mov
mov
mov
loopne
mov
mov
or
push
inc
adc
dec
ss
fistl
sub
test
mov
xor
aad
dec
fcmove
in
jle
adc
out
adc
xor
push
mov
jns
inc
cmp
in
xchg
and
mov
fidivl
adc
movsb
int3
mov
mov
imul
lds
jl
imul
dec
sub
mov
cmp
sub
sbb
shrl
dec
push
mov
and
fsubrl
sub
xchg
xor
jno
lret
cmp
aam
stos
scas
insl
enter
aas
push
jg
pop
fnstenv
lods
mov
push
test
dec
es
decl
adc
sti
cmc
push
push
sbb
iret
hlt
fcompl
adc
fisubrl
outsb
imul
pop
jbe
jnp
sbb
imull
hlt
fdivl
pop
or
pop
outsb
jno
popf
fstl
xor
ds
enter
ds
cltd
imul
fcompl
jo
mov
jmp
xchg
add
es
xor
push
cmpsb
sub
gs
xlat
inc
adc
adcb
hlt
stos
jp
jmp
sti
push
mov
jge
mov
int3
mov
adc
sub
lahf
mov
bound
sub
inc
and
out
jbe
and
mov
mov
inc
pop
add
and
hlt
mov
nop
lea
mov
xor
xchg
mov
add
pushf
shlb
adc
arpl
sub
pop
and
mov
pushf
and
sub
xchg
call
mov
in
pop
outsl
les
mov
js
loop
xor
in
es
imul
mov
cmc
xchg
notl
push
aas
cmp
dec
jle
lahf
sbb
sbb
mov
jl
in
fs
cmp
pop
les
not
push
pop
call
into
or
or
inc
sub
push
xor
pop
popa
add
loope
fidivl
mov
push
syscall
bound
es
mov
jg
add
lret
mov
adc
pop
sbb
push
mov
stc
in
ds
and
call
sahf
inc
mov
inc
add
mov
cld
mov
add
push
pop
xchg
sbb
push
xor
jl
aas
cmp
push
pop
mov
fsts
jne
sarb
fisubl
push
sti
mov
aaa
lret
jl
fcomps
insb
cmp
pop
fs
lcall
cmp
push
jle
push
pushf
out
ja
lahf
repz
test
je
hlt
lret
aas
repz
xor
notl
in
cli
inc
dec
lcall
mov
mov
pop
sub
mov
pop
push
out
sub
or
test
or
jb
dec
enter
pop
xchg
neg
fcmovnbe
iret
pop
lock
xor
shlb
enter
ss
xor
xchg
pop
add
adc
int
lcall
xor
sbb
inc
in
pop
aam
mov
mov
rcrb
sbb
jge
mov
mov
sahf
sub
das
lcall
sub
scas
stos
inc
icebp
inc
mov
push
shl
mov
inc
pop
sub
movsl
push
repnz
inc
add
into
and
cmp
push
mov
jb
add
mov
inc
stc
scas
or
xlat
pop
invd
push
bound
les
inc
out
scas
mov
push
je
mov
inc
lahf
add
mov
xchg
pop
sub
add
je
daa
inc
aad
mov
out
or
mov
sbb
cmpsl
fs
inc
aaa
cwtl
mov
dec
and
jp
cmp
xor
jb
mov
xor
loop
adcb
adc
and
ljmp
mov
js
and
cmc
xchg
jmp
push
mov
ss
sub
fcomps
or
lods
jae
ret
stc
repz
add
xchg
sbb
push
loopne
jbe
negb
icebp
pop
cmp
das
mov
fnstenv
setb
mov
sub
cmp
clc
fistpl
ds
or
je
dec
push
test
or
cmp
jo
mov
push
sbb
movsb
leave
mov
jo
lea
je
repz
sbbb
ret
dec
mov
push
das
xchg
fs
push
aam
aas
shlb
add
stc
pop
movsb
xor
rcrb
lret
sbb
lcall
mov
xchg
lahf
idivl
subl
mov
sahf
push
pop
shrw
push
movsb
xor
adc
outsl
pop
pop
insl
aas
jle
fnstsw
mov
inc
call
out
jg
mov
fs
test
xor
or
aad
notb
les
mov
push
lods
inc
sbb
sti
out
mov
mov
lods
in
jecxz
pop
test
mov
ret
push
les
and
pop
imul
jnp
push
xor
push
aad
mov
inc
in
pop
outsl
mov
test
int3
out
lock
and
add
xchg
inc
fcomps
cmpsb
mov
das
scas
lret
fcmovnb
mov
add
out
cltd
push
es
scas
pop
fs
addr16
jo
xlat
pop
jbe
xlat
push
ss
out
enter
inc
stc
flds
outsl
rcll
xchg
sbb
add
das
icebp
popf
pop
mov
push
xor
xchg
cmp
js
adc
dec
js
daa
inc
es
call
outsb
imul
aam
in
test
or
das
mov
xchg
call
jno
fmuls
xor
sbbb
rol
fnstcw
add
lret
cld
ljmp
xlat
stos
adc
push
mov
adc
aad
in
in
ret
lcall
mov
std
jbe
xor
jb
aam
inc
lcall
movsl
push
scas
adc
jae
imul
xor
cmpl
or
inc
mov
pop
daa
addr16
xchg
andb
and
jmp
sub
adc
jecxz
cmp
jl
pushf
sub
jle
and
clc
mov
jbe
ret
loop
add
mov
xor
cwtl
es
or
lret
repz
mov
xor
push
and
negb
and
and
shr
js
xor
cmp
xor
scas
jecxz
or
fistps
icebp
je
ret
mov
mov
out
jg
popf
jns
push
xor
imul
imul
mov
daa
mov
dec
js
and
stc
jle
cmp
out
mov
lea
add
shlb
fs
pop
dec
nop
jmp
cmpsb
les
in
xchg
xchg
adc
in
test
dec
mov
pop
adc
sahf
add
xchg
push
fs
sub
push
push
loope
mov
and
inc
xor
dec
fcompl
sub
adc
repz
dec
inc
push
loop
or
aaa
mov
push
mov
fsubl
xchg
outsl
pop
mov
push
cli
push
pop
inc
rol
lods
sahf
ret
stc
dec
scas
pop
or
lock
pop
cs
lret
mov
cmp
sbb
pop
clc
shrl
lds
inc
mov
sub
out
cmp
or
loopne
int3
mov
decb
movsl
sahf
pushf
dec
roll
decb
mov
lods
jecxz
jge
icebp
mov
mov
push
arpl
sub
add
xor
sub
push
sbbb
pop
mov
dec
push
cmp
filds
add
pop
cmc
push
xchg
leave
enter
sub
dec
xchg
and
and
or
sbb
or
test
sbb
ja
popa
push
mov
dec
xor
pop
dec
pushf
lea
lret
sub
fnstcw
pop
int3
dec
vshufps
or
xor
and
ret
stos
hlt
jg
test
sahf
cmpsl
xor
sub
mov
das
mov
push
pop
pop
add
pop
in
lret
adc
cmp
aad
sub
inc
mov
popa
dec
pop
sbb
loope
inc
pop
out
shll
mov
push
dec
sbb
sbb
test
cmp
inc
pusha
arpl
or
adc
insl
mov
aad
scas
adc
inc
inc
mov
mov
add
xchg
pop
jmp
repz
ret
scas
add
xor
jmp
and
fwait
mul
add
test
mov
out
es
dec
mov
ds
popf
ss
repz
lret
and
js
adc
cmpsb
rclb
movsb
pusha
sub
imul
jmp
dec
jl
sbb
in
call
out
sbb
int
je
aaa
enter
push
iret
scas
pushf
stos
cmp
jns
and
or
pcmpeqd
dec
cmp
ss
fadd
scas
mov
test
es
sti
pop
data16
out
fldt
addr16
lret
pop
mov
lods
stos
std
cmpsl
sahf
cwtl
xchg
xchg
mov
sbb
push
ljmp
xor
cmp
call
stos
or
sbb
pop
ret
aaa
loop
push
mov
add
scas
inc
inc
mov
adc
sbb
adc
sub
cli
inc
cli
aaa
mov
sti
inc
jno
xor
cmp
xor
adc
xchg
idiv
and
lcall
vmovupd
in
cmp
lret
jae
std
or
jge
pop
repnz
inc
sbb
add
test
jg
loopne
pop
mov
cmc
xlat
mov
jle
das
jae
add
pop
ss
inc
xor
jmp
push
xor
icebp
push
push
add
adc
daa
add
in
rorl
movsl
jno
cmp
jno
cmp
mull
pop
call
push
mov
push
push
and
push
mov
jne
and
inc
in
ljmp
setg
int3
jg
lahf
push
lret
push
lahf
inc
and
mov
inc
dec
fisttps
das
mov
in
mov
pop
sbb
add
push
mov
data16
inc
insb
sarb
iret
enter
and
les
mov
xor
je
sbb
sub
int3
les
lock
sbb
test
loopne
mov
imul
mov
cmp
push
push
ss
inc
xor
jmp
xchg
sbb
xor
lods
or
repz
xor
adc
rorl
aaa
incb
jne
ficoml
scas
out
out
adc
mov
push
int
fcompl
out
inc
xchg
pop
pop
cltd
mov
xchg
xor
jae
adc
add
push
orb
mov
cwtl
popa
xor
ret
es
std
aam
gs
repnz
mov
jae
aam
push
pop
and
fildl
cmp
jle
and
mulb
inc
push
xchg
in
xchg
push
inc
mov
pop
fisttpl
jmp
adc
lods
xlat
pop
std
int
test
mov
and
cmp
or
adc
out
lock
fldcw
es
inc
jnp
mov
sub
rolb
fildl
cmp
push
dec
push
add
jle
jne
xor
pop
sub
push
cmp
insl
popa
jbe
mov
dec
mov
mov
fstpt
inc
add
push
mov
sbb
les
pop
movb
pop
lods
js
mov
clc
test
pushf
sbb
js
dec
popa
int
dec
sbb
push
int
push
lods
fs
popf
push
push
fists
xchg
loop
cmpsl
loopne
cmp
jne
shl
test
jl
sahf
js
mov
adc
gs
lods
leave
enter
or
lret
or
lock
jmp
pop
call
ljmp
xchg
ja
leave
sahf
xchg
inc
xchg
jmp
add
push
ja
int3
xchg
cmp
data16
imul
or
into
inc
out
or
das
aas
xchg
and
inc
mov
in
sti
clc
lret
xchg
sti
fsubp
push
stos
or
cmc
push
and
movl
pop
push
jmp
loop
shlb
div
shr
pop
js
pop
out
or
lock
sub
xor
pop
push
fnstsw
out
rorb
lcall
and
std
pusha
fistpll
dec
lcall
nop
mov
fistps
movsl
push
leave
ret
rcrb
stos
daa
cmp
xor
adc
ja
xor
add
mov
sbb
adc
and
mov
add
sub
hlt
lds
jb
push
lock
push
add
cltd
add
fs
cli
call
xchg
fadds
dec
pop
or
dec
mov
insl
mov
cld
sub
ret
xchg
sbb
lock
cmpsb
dec
nop
cmpb
movb
xchg
lock
bswap
test
lds
mov
rcr
xchg
lock
cmpsl
in
ret
shr
cltd
pop
mov
mov
clc
hlt
das
jmp
lods
sbb
adc
test
aad
adc
popf
jmp
pop
sbb
push
fisubrl
test
xor
dec
dec
addb
sub
enter
xor
jp
daa
ret
cmp
cltd
add
insb
cld
test
sbb
sub
mov
je
out
jne
push
pop
repnz
insb
das
mov
mov
dec
xchg
fisubl
cmp
orl
xchg
shll
cmp
push
sbb
sbb
add
pop
sarb
jbe
dec
xlat
in
clc
sub
sub
push
loop
cltd
test
adc
adc
pop
inc
int
pop
lcall
adc
rol
fnstenv
pop
dec
or
cmp
ret
xchg
xlat
push
test
leave
adc
mov
mov
orb
mov
dec
mov
dec
lea
pop
hlt
cwtl
inc
mov
or
std
mov
inc
scas
xchg
roll
push
jns
xchg
sbb
sbb
cmp
orb
jp
cmp
mov
mov
sub
cmpsb
inc
lds
rcll
dec
xchg
fnstsw
jno
and
jne
mov
loop
ftst
and
ret
and
xor
mov
andb
les
sub
movsl
adc
sti
lods
mov
pop
ret
scas
cmp
add
cmc
hlt
mov
insl
aad
jne
or
test
lds
enter
sub
push
sahf
pop
test
jbe
push
mov
inc
rorl
push
ja
sbb
jecxz
lds
rol
xchg
inc
cld
lock
sbb
jge
out
and
inc
dec
sti
das
shll
or
and
inc
cli
mov
adc
dec
addr16
mov
add
sub
dec
into
out
or
add
mov
xchg
stos
push
mov
rorb
outsb
or
loope
fwait
adc
dec
mov
popl
stc
rorb
cmp
push
std
or
pop
fcmove
hlt
loopne
icebp
outsb
lods
xor
mov
cmp
push
mov
mov
inc
outsl
in
mov
adcl
cmc
sub
rcl
fmull
sbb
cld
cmp
ss
sub
loop
lret
dec
pop
movsl
cmp
dec
jbe
push
ret
cltd
rcll
inc
ja
mov
mov
jle
dec
jns
rorb
or
cld
or
sub
xlat
pop
push
cmpsl
jne
xor
or
or
aad
inc
lret
ja
call
sbb
ds
out
push
stos
push
imul
pop
pushf
ljmp
mov
cmpsb
test
push
adc
dec
xor
dec
xchg
das
xchg
push
cmpsl
testb
jbe
dec
addr16
jge
sti
test
fnstcw
or
out
add
pop
ss
into
mov
pop
mov
fmuls
and
pop
jmp
fmuls
lret
div
jmp
test
bound
pop
cmp
pop
dec
ljmp
xchg
lods
addr16
aad
add
xchg
stos
lds
xlat
push
jbe
js
faddl
push
xor
xchg
adc
fsts
mov
sub
push
aam
loopne
jle
jns
inc
pop
repnz
outsl
push
mov
fstpl
push
jno
or
dec
mov
xchg
gs
imul
sbb
inc
dec
daa
push
sbb
mov
mov
jae
scas
pop
daa
xor
xchg
pop
jne
dec
jb
imul
aas
adc
std
adc
mov
in
ds
iret
testl
std
mov
add
dec
mov
in
cmp
and
data16
and
mov
daa
mov
repz
arpl
mov
out
out
call
push
mov
push
sbb
xchg
dec
das
add
jmp
pop
out
shll
test
mov
jge
xor
mov
jmp
clc
js
xchg
mov
dec
in
mov
or
or
inc
xor
lods
cmp
in
repz
daa
mov
sub
jge
js
mov
in
jle
pop
sahf
lea
or
push
xchg
je
cmp
cli
xor
sar
loop
mov
xchg
cmp
mov
sub
jne
insl
dec
add
fistl
ret
ss
xchg
sub
icebp
mov
mov
push
or
push
sbb
adc
sbb
mov
jo
pop
outsb
lahf
xchg
std
push
jge
sub
mov
jecxz
or
adcl
mov
jne
cwtl
cmp
lods
and
sti
icebp
dec
rcl
iret
xchg
push
cwtl
jns
divb
into
stos
and
push
sbb
repnz
push
aad
rorl
sbb
rcll
push
mov
mov
lds
xor
fadd
mov
repnz
pop
and
dec
mov
test
jb
bnd
dec
mov
cmp
fmull
inc
fmuls
sbb
fmul
loop
shll
jnp
jo
mov
daa
cs
pop
mov
sbb
xchg
fistpl
cmp
lret
pop
xlat
jge
ret
or
jae
lret
je
cs
fwait
test
jae
jle
lock
push
xchg
repz
movsb
std
insl
fsubrs
pop
notb
cli
cmp
mov
mov
inc
jne
adc
and
aas
adc
mov
cmp
scas
fs
out
xchg
stos
fstl
push
mov
add
pop
push
mov
insb
mov
fisubrl
add
xor
and
lea
pop
xchg
cmp
pop
xchg
pop
dec
mov
stos
add
jge
cld
andl
sbb
mov
movsl
clc
push
pusha
sbb
and
pop
mov
in
sahf
mov
lds
cltd
out
xchg
or
cmp
inc
push
cmp
xchg
out
adc
in
clc
push
xor
mov
mov
fsubrp
call
xor
aam
mov
inc
cmp
adc
cs
xchg
cld
mov
mov
pop
dec
and
pop
cmp
test
shll
mov
out
mov
test
mov
sbb
and
adc
xchg
mov
in
xor
fsubrl
xchg
cltd
add
xchg
jmp
push
mov
sbb
jb
or
mov
loop
nop
xor
or
and
push
arpl
add
xor
xchg
mov
fnsave
dec
jns
pop
aam
icebp
xor
dec
outsb
inc
out
mov
mov
mov
xor
lea
xrelease
pop
in
pop
cmc
mov
flds
or
mov
shl
stos
inc
jl
arpl
mov
jmp
daa
inc
fs
inc
xchg
out
push
dec
dec
xor
xor
ja
test
jo
mov
movsl
scas
push
dec
mov
mov
lret
idiv
push
jmp
fdivl
imul
lock
repz
cmpsl
sub
int3
lret
stc
jle
and
mov
pop
mov
mov
out
jno
pop
shlb
cmp
mov
out
repnz
int
shlb
push
test
add
icebp
cmp
cmp
sahf
xor
add
lcall
jno
pop
daa
scas
xchg
xchg
adcb
or
mov
or
lcall
loop
sbb
insl
popa
shlb
test
or
mov
daa
mov
popa
push
jmp
lcall
mov
push
int
fcomps
push
data16
mov
frstor
mov
xchg
pushf
out
sbb
push
sbb
mov
sbb
les
clc
cltd
outsb
push
jns
or
out
sti
jmp
dec
fcmovnu
pop
and
mov
and
pop
and
popf
inc
push
sub
dec
sub
test
inc
orb
inc
shll
call
adc
push
stos
dec
cld
mov
repz
xchg
fdivrl
mov
outsl
push
lock
icebp
outsl
xchg
sahf
fidivrs
fildl
mov
xchg
jae
cmp
loop
cmp
lret
push
adc
xor
in
jg
pop
arpl
cmc
mov
sbb
dec
push
add
daa
fs
mov
popa
and
mov
jo
jecxz
nop
cmp
imul
scas
out
aad
add
and
add
shl
adc
outsl
xor
and
call
cmp
inc
es
jbe
jnp
aaa
or
dec
or
lret
jno
mul
cmpsb
sub
pop
mov
insl
mov
pop
imul
pop
mov
in
pop
lcall
and
cmp
and
scas
jns
outsl
mov
push
cmp
es
xor
sbb
mov
or
arpl
jge
xchg
cltd
gs
cmpsb
icebp
loop,pt
sub
scas
pushf
imul
cmp
push
scas
popf
mov
or
pop
sbb
mov
or
rcrb
movsl
sbb
inc
mov
shlb
mov
pushf
mov
adc
popa
clc
mov
mov
outsl
sbb
imull
imul
or
ss
jno
mov
popf
scas
outsb
cmpb
pop
popa
sbb
jns
lahf
xor
or
call
stos
adc
xchg
fisttpll
idivb
xor
pop
out
int
add
iret
xor
jno
lds
pop
dec
xchg
inc
sub
in
lret
cmp
fimull
xor
cs
xchg
fistpl
mov
cmc
mov
jno
adcb
mov
insb
sahf
popa
lcall
mov
xor
jnp
aad
es
out
jno
add
insb
int3
jmp
push
lock
jg
dec
iret
out
fldl
mov
nop
xor
xchg
mov
mov
mov
fldenv
mov
ret
cmp
shll
dec
dec
sbb
jge
out
das
xchg
push
sbb
pop
mov
mov
repz
and
pop
adcl
fldenv
dec
movsb
add
lcall
cli
insl
cmp
in
cmp
cmpsl
fbld
and
fwait
pop
sbb
sub
sub
xlat
cmp
testl
pop
scas
sbb
fsubl
jl
cmpsb
cmp
xchg
outsb
movsl
xlat
inc
mov
xor
and
xchg
or
lds
je
dec
ret
out
movsl
stc
pop
icebp
add
test
or
push
jno
mov
push
and
test
dec
sbb
adc
jmp
cmp
je
jecxz
pop
mov
mov
pop
scas
and
push
call
cli
dec
test
push
push
mov
jbe
loopne
loope
adc
js
mov
addr16
mov
leave
push
sub
hlt
inc
cmp
pushf
mov
lock
outsl
lock
les
jbe
push
lret
adc
daa
jno
jno
pop
push
leave
xchg
je
in
mov
test
je,pt
sbb
jle
cmp
out
outsl
xchg
punpcklwd
mov
fcoml
inc
push
out
push
cmp
test
mov
and
out
sahf
fucomp
mov
add
mov
mov
xor
inc
in
xor
sub
shlb
lret
and
pop
rcr
xchg
sbb
dec
jp
mov
push
mov
push
dec
xchg
and
loopne
movsl
jmp
mov
sbbb
ja
sub
mov
and
es
das
fs
popf
push
jecxz
pop
inc
dec
push
sbb
mov
xor
pop
stc
aas
jg
lds
mov
push
mov
rcll
or
icebp
lret
and
jnp
push
movb
sbb
rcr
arpl
jns
mov
insl
mov
sbb
cmp
jp
jae
mov
daa
mov
andb
sbb
loop
mov
xor
cmp
jge
ret
mov
xchg
push
inc
sub
sbb
jb
sbb
dec
dec
mov
inc
and
test
aam
or
lret
icebp
jnp
test
jmp
adc
add
test
xchg
cmp
mov
xchg
lds
adcb
movsb
mov
std
arpl
pop
mov
push
xchg
lret
sub
cmpsl
mov
dec
jg
insl
jg
or
js
jnp
cli
pop
mov
jg
lcall
stc
lret
shll
fs
cmp
push
inc
mov
mov
push
and
sbb
jl
cwtl
push
lcall
xor
add
dec
xchg
movsb
outsb
test
shl
mov
out
sbb
stos
outsl
or
push
mov
incb
xor
icebp
daa
clc
inc
imul
arpl
hlt
push
jecxz
mov
jno
push
add
dec
cwtl
sub
push
push
das
adc
sahf
shll
rclb
int
pop
add
mov
out
xor
mov
fnstenv
pop
xor
aad
shr
push
out
jmp
subb
je
fstpt
addb
fsubrs
enter
out
rcr
mov
ss
cmc
jne
movsl
movsb
or
mov
dec
ret
ret
sbb
lahf
push
das
pop
sbb
inc
lahf
jnp
leave
pusha
icebp
cmp
xorb
mov
lods
or
mov
roll
clc
push
jmp
aaa
sub
and
loopne
sbb
adc
int3
mov
jg
add
xlat
mov
xlat
in
pop
mov
adc
and
push
aas
mov
aam
icebp
dec
sbb
test
out
test
dec
jle
test
xorl
in
insb
ljmp
aaa
mov
xchg
dec
mov
test
xchg
test
in
js
push
jne
test
add
adc
lahf
jg
cmp
lods
dec
push
rcrb
xchg
pop
aam
shll
or
sbb
xor
adc
add
fistpl
mov
test
inc
xorb
mov
pushf
cmp
or
jb
fstl
mov
pop
aas
cmp
adc
mov
test
sub
sbbb
fnsave
mov
ret
cli
out
scas
es
insb
jl
and
ret
test
popf
test
sti
sub
mov
rclb
mov
lret
mov
movsb
pop
mov
mov
clc
sub
xor
pop
fucomp
clc
jnp
inc
shl
aam
ret
jne
aam
xchg
mov
mov
inc
adc
add
lcall
mull
rorb
lock
aas
inc
dec
dec
mov
stc
fldcw
push
imul
or
je
cmpsl
inc
fbld
mov
out
aas
mov
dec
add
scas
ljmp
lock
orl
xor
outsb
pop
mov
and
sub
and
xor
jns
mov
sarb
stc
out
pop
aas
xor
pop
push
lods
xor
push
xchg
je
and
sub
xchg
sbb
out
pushw
or
mov
fldt
push
push
xor
fxch
sahf
mov
dec
ljmp
adc
es
xor
repz
sbb
xchg
sub
clc
aaa
jge
xor
cli
adc
pop
not
jno
adc
pop
inc
test
mov
in
inc
dec
loopne
leave
fildll
cwtl
std
push
pop
xlat
repnz
jmp
jns
adc
xchg
pop
loop
clc
pop
nop
adc
scas
fcoml
sbb
lock
ds
jno
mov
mov
shrb
mov
sbbl
into
dec
push
imul
sbb
pop
loopne
mov
ja
cwtl
repnz
jecxz
in
out
imul
mov
leave
push
popf
addr16
jmp
or
adc
sti
sub
sbb
pop
testb
add
jp
cmp
adc
adc
leave
pusha
dec
not
lods
das
dec
pop
out
xchg
call
test
pop
cmpsl
pop
inc
pop
mov
gs
xor
xchg
lahf
fsubrl
sub
pop
jo
out
mov
pop
dec
cs
das
mov
adc
dec
adc
aas
mov
jg
iret
outsb
sub
sbb
xchg
repnz
fists
adc
popf
adc
dec
inc
jecxz
push
adc
sbb
add
pop
sub
cli
inc
fisttpll
and
cmpb
mov
push
jecxz
cmp
add
ret
jg
imul
pop
fisubl
in
or
sub
fdivl
pop
pop
sbb
lea
mov
repnz
xchg
ret
dec
dec
and
dec
dec
hlt
popf
lods
insb
adc
xor
xchg
dec
xor
lcall
jae
ret
and
jge
jg
xchg
jb
pop
mov
cmp
stc
xor
jp
add
mov
cltd
test
dec
pop
xor
fprem
cs
push
and
cmp
mov
push
lret
daa
mov
adc
mov
xchg
js
xor
mov
mov
sbb
push
mov
lret
push
sbb
adc
jno
xor
loopne
and
in
push
test
sbb
mov
xchg
loop
add
sbb
inc
or
sarl
mov
xor
xchg
xor
repnz
adc
rorb
xor
enter
xchg
cmp
jno
cmp
cmp
jle
out
in
lods
test
sbb
push
and
stc
rclb
add
xchg
pop
cmp
pop
sub
xor
cmp
outsl
jp
xchg
or
std
jmp
jg
sub
out
fstpt
push
mov
mov
movsl
mov
mov
jne
mov
loope
sti
add
outsb
add
add
push
cmp
in
sbb
push
dec
cmp
data16
adc
iret
pop
push
push
leave
or
pop
cli
xor
pusha
fadds
test
arpl
sti
rcll
loop
jl
pop
dec
mov
shll
scas
sub
cltd
sbb
out
clc
fidivrs
jmp
or
fs
lahf
js
add
add
sbb
test
shrl
sbb
int
out
xor
mov
pop
xorl
out
dec
testl
jmp
repnz
rclb
das
cmp
imul
xchg
jmp
fcomps
push
int3
pop
sbb
sub
and
cwtl
xchg
pop
rcrl
mov
insb
daa
push
pop
pop
jmp
xchg
popf
adc
stos
dec
or
add
dec
lea
pop
mov
test
and
aaa
mov
and
lods
mov
ss
push
sbb
xchg
add
in
dec
fstps
js
fs
dec
dec
xchg
ds
decl
int
xchg
adcl
jo
int3
pushf
movsb
or
jge
add
and
jmp
add
push
sahf
mov
sub
jbe
gs
movsl
push
rcrl
cwtl
xchg
fldcw
jg
mov
and
pop
jns
test
xchg
fsts
imul
frstor
test
mov
inc
enter
cmp
dec
clc
or
test
je
loope
and
insb
and
cmp
imul
mov
push
test
shll
loope
adc
rcr
add
in
jmp
sub
imul
ret
out
add
jno
out
lret
js
xchg
ja
insl
das
ja
mov
bound
insl
fcmovbe
xor
jecxz
mov
sti
outsb
push
xchg
jbe
test
sbb
jne
shll
mov
push
iret
iret
jb
jno
test
xchg
outsb
scas
ds
mov
and
aas
ret
js
andb
inc
test
push
jg
pop
cwtl
cmp
cmp
popf
jne
outsl
mov
pop
add
push
cmpsb
shll
and
stc
or
mov
inc
inc
dec
mov
int3
adc
sbb
test
cmc
aad
test
or
xor
das
mov
inc
sbb
xchg
dec
aam
jle
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
cmc
adc
cmp
mull
adcl
xchg
xchg
jns
mov
icebp
pop
adc
push
hlt
jmp
dec
mov
sub
loope
out
stos
popa
mov
test
jae
bound
fistpl
cli
dec
rorl
push
jne
sbb
jns
sbb
ror
or
sahf
mov
cmp
add
mov
mov
pop
loop
ja
or
lods
movsl
jne
dec
sub
fisubrl
xor
pop
cmp
inc
dec
arpl
in
adcb
push
lahf
xchg
sub
fmuls
mov
pop
and
xor
sbbw
in
mov
shrl
pop
sub
ds
jmp
popf
push
mov
dec
int
aaa
lods
mov
pushf
xchg
negb
and
or
popa
push
iret
arpl
not
jne
mov
sahf
push
setns
hlt
and
add
mov
int3
inc
addl
adc
mov
cmp
stos
jbe
movsb
add
outsb
cmp
cmp
pop
xchg
or
and
push
or
xchg
pop
dec
xor
decl
inc
int
fildll
mov
xor
das
imul
popa
in
insb
pop
mov
push
sub
xchg
add
lret
mov
fbstp
jmp
out
es
xchg
cmp
jecxz
adc
fidivl
sahf
aam
test
xor
aaa
cwtl
std
pop
fidivrl
push
lds
cmp
push
add
lock
ret
fidivl
xorb
inc
add
cld
and
dec
sub
dec
das
outsl
add
outsl
fidivl
leave
mov
nop
mov
rcl
adc
js
adc
mov
cli
sti
xchg
pop
pop
inc
aaa
out
repz
movhps
dec
and
push
mov
or
cld
cmp
aas
cmp
sub
das
sti
mov
xchg
push
pop
std
in
into
and
cli
popa
sbb
xchg
mov
or
pop
jg
dec
inc
adc
out
rolb
adc
cmp
sbb
fistps
cmp
lret
out
mov
push
xchg
and
mov
stos
pop
pop
insb
sahf
and
mov
mov
scas
push
mov
fisubrl
mov
sbb
mov
sub
adc
xchg
int
and
sarb
dec
add
movsl
imulb
pushf
mov
loope
sub
loop
dec
mov
jo
push
ss
xor
add
pop
mov
jbe
adc
les
push
pop
das
inc
sbb
dec
daa
pop
gs
sub
popf
mov
repnz
dec
dec
mov
mov
push
xor
push
adc
notb
in
dec
inc
sub
lcall
sub
mov
xlat
enter
out
add
mov
jp
and
sbb
ljmp
inc
push
cmp
and
sti
popf
lods
dec
aam
loop,pn
xchg
xor
cmc
cmp
dec
int
sbbl
cmc
dec
movl
jecxz
pop
lea
insl
push
xchg
adc
dec
dec
and
bound
outsb
jge
mov
int3
in
add
jb
adc
insl
adcl
lods
repz
fmulp
outsb
popf
movsl
adc
jmp
movsb
jge
fwait
int
cltd
popa
cld
loope
cmpsb
xor
inc
xor
sub
hlt
add
xchg
mov
out
popa
aad
sahf
xor
xor
xor
add
or
cmp
jl
sbb
in
jns
es
lret
mov
or
test
pop
cmc
imulb
push
hlt
sbb
pop
mov
xchg
sbb
jge
stos
out
jp
ret
and
lods
xchg
push
mov
xor
enter
enter
ja
iret
xchg
dec
imul
cmpsb
push
loopne
mov
lret
popf
outsl
inc
out
in
ss
ja
shll
dec
gs
gs
repnz
mov
xor
mov
addl
pop
push
mov
imul
mov
lods
arpl
jmp
pop
mov
mov
pushf
adc
jb
outsl
pop
cli
sti
pop
shll
jne
rcll
ss
mov
add
and
stos
jecxz
xchg
ljmp
movsb
es
out
push
or
imul
mov
flds
mov
or
jno
aaa
sbb
insb
in
lds
xor
jmp
and
sar
fstpt
dec
xchg
lret
adc
and
sub
mov
sbb
jnp
inc
mov
lods
test
sub
mov
dec
adc
cld
mov
loope
add
sbb
test
cmp
jae
jg
xlat
call
ds
inc
and
in
pop
xacquire
xchg
add
push
inc
xchg
popf
jae
loopne
push
ss
cld
add
pop
je
orb
and
aas
fstl
cmp
out
cmp
pop
test
mov
xor
fcomps
mov
lods
mov
jae
rclb
jecxz
bound
push
mov
push
and
insb
jge
mov
arpl
adc
pop
mov
fdivrl
fwait
mov
sub
or
lods
pop
movsb
pop
push
sub
fs
popa
mov
mov
and
insb
dec
mov
outsl
lea
std
rol
or
repnz
jb
push
cmp
sbb
enter
push
imul
or
jecxz
xor
imul
movsl
in
jg
cmp
mov
and
cmpsl
in
lods
sbb
pusha
loopne
dec
push
arpl
in
js
pop
in
stos
jle
push
or
arpl
femms
lret
dec
mov
leave
test
push
mov
jle
xor
xor
loope
adc
mov
pop
cltd
inc
dec
jp
fbld
pop
xlat
push
pop
nop
mov
lret
jb
ja
jecxz
jns
xor
jle
adc
loope
iret
jmp
jae
xchg
push
mov
pop
bound
mov
or
mov
push
scas
sub
or
dec
jbe
xchg
aam
cmp
pop
std
cltd
add
into
jnp
inc
pop
fdivrl
xchg
add
xor
dec
mov
cmpsl
pop
sbb
mov
fcoml
xlat
fmull
orl
xor
test
mov
ds
testl
js
mov
test
ficoms
inc
add
adc
mov
sar
stos
aaa
mov
pop
mov
rcll
aas
test
mov
out
orl
jle
mov
stos
inc
stc
mov
adc
mov
sbb
iret
test
pusha
sbb
out
fildll
in
sahf
lret
inc
mov
outsl
ret
adc
mov
pop
push
pop
cmp
stc
fxtract
mov
iret
scas
pop
bndstx
lods
xchg
jno
and
out
rcll
jb
push
cmp
xchg
stos
push
aas
jno
rcrb
loopne
outsb
mov
loope
dec
push
outsl
mov
and
xchg
xchg
into
std
dec
jne
cmp
lcall
jmp
out
push
inc
mov
lods
sbbb
nop
fsubs
in
int
push
inc
cmp
aam
jle
out
test
dec
shrl
inc
pop
add
mov
inc
dec
or
add
sub
iret
push
pop
lahf
es
fucomp
cld
lods
fnstenv
xor
das
and
jmp
xor
cmp
pop
inc
inc
std
out
pop
imul
dec
js
ret
je
test
cmp
enter
xorl
ja
xor
sub
xchg
jo
push
pop
sti
adc
jmp
adc
loopne
sub
mov
mov
lahf
arpl
push
mov
ja
and
cmp
loope
ljmp
sub
inc
sbb
test
mov
and
xchg
insb
insb
push
pop
xchg
repz
sarl
and
fwait
ret
loop
sub
popa
sarb
cmp
imul
sub
and
pop
test
xor
imul
and
sti
out
sarl
sbb
pop
push
lcall
ret
addr16
jmp
ret
jl
sbb
mov
dec
popf
js
jmp
scas
popa
adc
mov
fs
mov
or
mov
or
jnp
pop
xor
mov
pop
rorb
or
incb
dec
xchg
lock
repnz
push
mov
subb
push
pop
orb
movsb
popf
dec
js
mov
pop
fsubrs
sub
add
dec
psllw
stos
lahf
xchg
pop
inc
xchg
jbe
cltd
in
mov
data16
mov
xor
ljmp
pop
jbe
es
call
aaa
cmp
int3
sti
js
es
inc
mov
xor
in
sbb
sub
sbb
cmp
inc
push
ret
scas
notb
loop
int
and
jl
add
int
sbb
pop
dec
aaa
pop
call
aas
mov
and
ds
call
aam
stos
push
push
xchg
adc
and
jnp
hlt
mov
xor
out
xchg
jne
lods
lahf
lahf
fsubs
jne
lahf
mov
adc
cli
push
stos
notl
mov
push
repz
daa
das
add
ds
outsl
test
xchg
bound
addb
xor
push
inc
fs
out
or
andb
arpl
sub
xchg
cltd
ljmp
and
pop
inc
pop
jne
push
stos
pop
dec
xchg
hlt
popl
dec
xchg
mov
notl
sbb
out
push
aaa
xchg
fimull
bound
jo
mov
xor
sti
mov
cli
dec
lret
and
sti
adc
add
sahf
in
push
mov
pusha
or
out
aas
loope,pt
mov
xchg
call
and
xor
inc
and
fadds
stc
aam
icebp
icebp
mov
frstor
mov
or
mov
pop
ja
fstl
jle
pop
jne
xchg
push
icebp
inc
adc
or
mov
scas
xor
data16
mov
ret
loopne
pop
mov
call
sbb
nop
rclb
sbb
mov
add
mov
pop
adc
je
adc
cmp
les
mov
xchg
dec
dec
inc
inc
dec
pop
in
xlat
out
shll
mov
xor
je
xor
lock
pop
cmp
aaa
sti
stos
icebp
mov
pop
in
push
nop
and
and
xchg
rclb
mov
leave
lea
mov
out
sar
or
xlat
cmp
fcmovbe
push
push
divl
cmpsb
cmp
imul
push
add
cmp
rcrb
inc
and
xchg
push
loopne,pt
pop
repnz
xor
das
cwtl
sarl
jo
js
inc
xor
xchg
adc
in
push
test
mov
js
jg
mov
es
cli
leave
push
bndstx
push
adc
sbb
jno
out
mov
adc
mov
imul
mov
mov
pusha
push
dec
loop
jl
in
inc
sti
fidivl
out
pop
insl
scas
addr16
dec
out
sbb
cmpsb
jnp
leave
jo
fdivs
pop
jmp
jmp
inc
or
mov
mov
das
pop
scas
inc
pop
push
aam
pop
dec
and
aad
xlat
push
cld
lret
es
fidivrl
add
or
je
iret
add
jb
adc
or
sub
shll
and
inc
jmp
fcmovnb
xlat
push
fdivl
mov
and
cmp
fcmovu
inc
mov
sti
or
jno
daa
rclb
jno
push
mov
scas
das
dec
into
push
jnp
pop
rol
aaa
inc
lret
popf
xchg
and
sbb
mov
inc
lahf
pop
and
jmp
inc
aaa
push
cli
adc
jno
mov
jae
cmpsl
cmp
mov
imul
push
jp
jl
icebp
mov
icebp
fwait
xchg
push
dec
es
add
sbb
fsubs
rcl
pop
aad
jl
cmc
add
add
add
add
inc
xchg
cmp
adcb
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
mov
xchg
mov
