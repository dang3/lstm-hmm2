push
mov
mov
push
mov
xor
sub
mov
test
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
call
mov
push
pushl
call
mov
push
push
call
push
call
mov
mov
mov
movl
jmp
mov
xor
push
pop
div
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
mov
push
pushl
push
call
add
cmp
je
mov
mov
shl
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
shr
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
pushl
call
push
push
push
push
push
push
call
pushl
pushl
pushl
call
push
call
pushl
call
push
push
call
pop
pop
push
call
push
push
call
push
call
push
call
pop
pop
leave
ret
int3
xchg
inc
popa
cli
add
inc
hlt
jmp
xchg
adc
inc
loopne
test
mov
in
sbb
mov
and
cmpb
jns
lock
ret
cmp
faddl
mov
dec
fneni(8087
stos
cmp
jecxz
adc
and
pop
inc
ret
sarb
jg
mov
or
xor
xor
sti
jnp
xor
mov
aam
cld
xor
je
mov
dec
fdivs
sub
push
filds
dec
pop
sahf
jmp
fmull
cwtl
adc
pop
mov
sub
jns
mov
int3
push
sbb
push
aas
mov
jne
add
add
xor
stos
xor
jbe
cmp
andb
push
dec
fsts
leave
push
aaa
mov
pusha
repnz
call
orb
sub
inc
lret
xlat
in
mov
pop
aad
push
lcall
enter
and
hlt
adc
stos
aas
xor
fs
xor
fwait
jae
and
xchg
ds
sbb
or
jmp
and
mov
in
repz
out
pop
loop
aas
add
leave
aas
pop
jle
das
jbe
imul
xchg
lea
sbb
lcall
jno
ficompl
movsl
pop
cmp
adc
xchg
aas
stc
nop
leave
push
push
test
aam
push
scas
jnp
jno
jne
sub
xor
jmp
xlat
in
scas
xchg
stos
fst
ljmp
jl
dec
dec
pop
and
cmp
jnp
mov
pop
xchg
pop
xchg
xorb
in
lds
pop
faddp
fucomip
or
dec
jle
or
push
dec
or
dec
or
popf
adc
jp
or
dec
lret
push
jp
xchg
clc
jg
add
in
mov
push
sbb
ljmp
pop
sahf
add
pop
pop
cmp
xchg
dec
cs
call
mov
fdivrl
lret
fimuls
mov
adc
stos
mov
jae
sub
and
inc
push
push
jnp
idiv
call
jecxz
pop
inc
scas
rclb
adc
int3
out
shlb
and
add
into
mov
mov
dec
sarl
jp
xchg
hlt
loope
add
mov
mov
jb
xchg
adc
rorl
jo
sub
mov
lods
popa
push
out
sbb
cltd
pop
je
pop
arpl
ja
xchg
shr
in
pop
inc
push
mov
xor
or
push
scas
repnz
fnstcw
mulps
jo
or
push
jmp
pop
shlb
mov
fwait
pop
mov
imul
cmp
xchg
inc
insb
rorl
mov
jg
sarl
int3
jl
mov
adc
mov
xor
jg
loope
cmp
fwait
out
push
fstps
dec
fnstsw
mov
ret
pop
push
mov
push
mov
add
sub
out
mov
jg
data16
adcl
add
test
movsl
ljmp
fistl
sbb
jne
cli
pop
push
or
in
jp
das
jne
sub
mov
insb
popf
sub
pop
iret
lods
stc
je
cld
inc
jne
outsb
inc
sbb
fsubl
pop
repnz
stos
inc
adc
jp
lods
ja
fists
mov
in
mov
sub
xchg
xor
sbb
xchg
inc
sbb
mov
mov
and
push
pop
aas
xchg
sbb
mov
ds
jbe
cli
add
pop
jns
xchg
aas
and
pop
pushf
out
pop
jne
test
movsl
lods
lret
aam
cmp
lds
add
pop
sbb
leave
or
repz
es
icebp
and
mov
in
leave
and
lods
xchg
lret
dec
clc
je
lods
pop
ja
fadd
aas
fs
cmpl
lock
mov
cmpsb
mov
aam
jns
sbb
pop
fs
cltd
pop
jge
jne
inc
call
jno
filds
sbb
aad
ljmp
push
xor
xor
js
cmp
fsubrl
dec
repz
cmpsb
jbe
outsb
aas
xor
outsb
int3
lock
outsl
mov
test
xor
movsb
stos
imul
cs
std
push
hlt
mov
pushf
dec
mov
and
lret
movsb
clc
out
inc
or
cmpb
out
sub
mov
jbe
xchg
lret
cmp
test
xchg
xor
xchg
adc
push
lock
loopne
jnp
fnstcw
jno
dec
or
jo
add
movsb
lret
jp
leave
xor
in
dec
adc
data16
out
inc
mov
pop
jg
pop
lea
scas
repz
aaa
cmpsl
fidivrl
cwtl
ja
shll
mov
or
fsubl
call
int
fs
sbb
test
inc
push
and
cs
mov
push
addr16
xor
jge
adcb
addr16
cwtl
test
in
ljmp
ljmp
cmp
sbbl
or
lret
add
add
loope
nop
and
mov
int
adc
mov
cmp
mov
inc
test
or
test
mov
fs
push
loope
inc
cmpsb
arpl
in
sbb
out
or
or
psubusb
xor
insl
add
xchg
dec
dec
push
insl
jg
lahf
leave
popf
cmp
popf
outsb
out
jae
sub
inc
fldt
jae
xchg
jne
dec
inc
inc
cwtl
mov
pop
dec
or
fldcw
imul
fs
dec
gs
xorl
js
mov
xor
inc
out
push
aas
jne
lahf
and
iret
stc
ja
push
xor
mov
aaa
imul
xor
push
jmp
js
pushf
mov
lcall
fs
cs
adc
dec
mov
sbb
pop
out
lock
sub
add
aam
push
xchg
jmp
outsl
loopne
cltd
jmp
pop
lahf
lods
cmp
or
cwtl
scas
jge
xchg
mov
and
cmp
dec
push
into
xlat
jb
dec
fstl
pop
cwtl
lods
mov
pop
cmp
in
dec
push
fstpl
pushf
sub
pushf
mov
pop
rcrl
call
xor
mov
lock
fwait
xchg
mov
xchg
daa
fsts
mov
sub
jl
xchg
jp
and
ja
scas
push
cmp
pop
rcrb
xchg
cltd
js
push
xor
leave
xchg
movsl
pop
fsubr
outsb
pop
adc
or
mov
mov
push
cmp
xchg
jge
lods
call
pop
jnp
and
add
jae
xor
outsb
mov
jecxz
mov
mov
xor
int3
dec
insl
push
scas
xor
lahf
into
loop
push
sbb
es
repz
sub
sahf
lods
fcmovb
pop
cmc
sub
test
dec
fidivrs
insb
call
mov
out
inc
adc
loope
insb
insl
push
bound
scas
mov
adc
aad
xchg
jns
xchg
cli
fnstcw
pop
dec
cmp
sarl
adc
sub
lods
test
xlat
mov
inc
and
enter
cmp
pushf
rcrl
push
cld
jbe
xchg
pop
aaa
shlb
adc
cmp
xchg
rclb
pop
pop
add
inc
outsb
sbb
cmc
sti
cmp
in
inc
mov
das
sub
repnz
inc
out
mov
imul
mov
add
push
jno
sti
rcl
xor
xchg
rcrb
js
pop
std
or
fs
sub
sub
out
das
mov
xchg
mov
gs
cmp
mov
clc
cwtl
jle
push
stos
fsts
int
insb
in
fisttps
inc
daa
add
pop
jno
mov
subb
fwait
pop
das
and
push
cmpsb
stc
out
sub
dec
cmpsb
and
adc
cmp
nop
addl
stc
int3
cmc
int3
or
mov
jne
xchg
cmp
lock
lods
mov
xchg
mov
test
mov
pop
pop
push
bound
mov
lahf
divb
aam
pop
dec
dec
jmp
push
xchg
push
loop
pop
and
jne
jns
gs
and
sbb
xchg
ss
sub
mov
sbb
adc
les
lcall
xor
adc
push
lcall
inc
xchg
lahf
push
xchg
enter
cld
out
mov
dec
loopne
shrb
popa
sub
insb
mov
mulb
repnz
and
cmp
inc
clc
jl
test
mov
push
mov
popf
mov
inc
lahf
test
inc
fcmovnu
sbb
xchg
inc
stos
lea
fs
pop
cmpl
enter
cld
sub
add
sbb
xor
push
jp
enter
push
ljmp
inc
out
pop
jno
mov
lods
stos
jne
sbb
lock
cmp
aas
ss
aad
jbe
sti
jecxz
aas
loopne
jbe
xor
call
insb
repnz
incl
stos
imul
push
xchg
dec
pop
aad
test
incl
cmc
pop
inc
pusha
clc
movsb
subb
lea
mov
lea
mov
into
cmp
mov
and
fmuls
adc
adc
sbb
test
insb
adc
pushf
xor
dec
xor
adcl
je
push
mov
sub
bound
push
pop
addr16
inc
mov
mov
ljmp
lock
jno
push
mov
jle
das
fsubrs
add
push
sbb
adc
mov
clc
or
xchg
mov
sub
popf
hlt
sbb
and
test
mov
cwtl
std
xlat
adcb
popf
push
icebp
and
out
adc
cltd
xor
add
xchg
sar
repz
stos
aam
ss
xchg
mov
sub
inc
fs
add
jns
outsb
leave
ret
cmp
add
ret
jg
or
pop
fs
stc
xchg
fsubrs
das
mov
xor
cmp
cmp
test
or
push
sahf
mov
mov
mov
loope
xchg
insb
adcl
inc
mov
movsb
icebp
push
idivl
icebp
icebp
mov
mov
adc
sub
mov
in
lods
pop
xchg
sub
sub
and
mov
stc
dec
jmp
out
adc
xorl
mov
lock
dec
shrl
ret
pop
sbb
push
inc
insl
xor
add
inc
mov
aaa
and
add
dec
addr16
mov
adc
xchg
stc
sub
jp
push
ret
pop
mov
sbb
mov
and
in
add
mov
out
lds
mov
aas
push
dec
rcrl
adc
out
cmp
stc
outsb
out
push
cmp
sub
pop
dec
pop
gs
nop
xchg
loope
mov
push
mov
ljmp
cmovno
gs
push
mov
in
xor
inc
push
fsts
pop
sbb
sub
hlt
mov
xor
xor
xor
pusha
imul
enter
lahf
mov
aam
addr16
push
in
jns
xchg
jmp
movsl
pop
xchg
mov
add
arpl
xor
pop
pop
jge
xor
adc
rcrb
jg
push
push
pop
aam
pop
pop
or
sti
inc
sti
jecxz
or
push
cmp
xlat
shll
cmp
xor
scas
pop
push
rcrl
daa
mov
cwtl
pop
sti
adc
loope
inc
sub
add
loopne
jno
stos
loop
pop
ljmp
lock
popf
jg
out
ja
sub
lret
xchg
mov
inc
loop
inc
jecxz
push
pop
dec
mov
and
or
testb
pushf
ss
test
cmp
rolb
pop
aaa
lret
outsb
adc
sti
lret
iret
cltd
pop
ret
ret
mov
adc
dec
inc
loopne
xchg
or
insb
mov
js
xchg
adc
ret
fcomps
ss
ds
arpl
out
push
loope
push
jb
cmpsb
popa
scas
ret
imul
mov
pop
push
sub
movsb
mov
pusha
js
lret
pop
inc
push
cwtl
cltd
sbb
fwait
push
mov
cmc
and
xor
cmp
into
outsl
lcall
adc
inc
out
scas
in
push
jne
dec
push
out
pop
cli
imul
mov
cmp
movsl
xchg
xor
adc
push
movsb
fistpll
scas
fcmove
fstpt
aad
dec
dec
in
mov
out
add
lahf
mov
mov
leave
sbb
sub
pop
jo
mov
jae
add
outsb
mov
xchg
pop
pop
pop
push
js
mov
mov
mov
cmp
fwait
jle
aad
jecxz
dec
sub
mov
sbbb
xor
fstpt
movsl
add
xchg
pushf
or
inc
jecxz
out
addb
and
xorl
cmc
add
xor
jns
sbbl
insb
out
xchg
mov
add
push
mov
or
pop
xchg
cmc
sub
enter
push
xor
xor
push
repnz
out
out
pusha
push
fstp
enter
popf
add
stos
js
pop
inc
rcrl
sbb
push
out
dec
lret
lahf
jmp
and
cmp
mov
nop
call
js
cmp
mov
add
movsl
jne
dec
nop
mov
inc
jmp
dec
sub
mov
nop
inc
jno
push
aad
js
dec
mov
shll
arpl
inc
dec
push
or
dec
out
dec
mov
add
cmp
inc
jge
mov
pop
pusha
in
sbb
fwait
sarl
inc
shll
cwtl
sub
dec
stc
add
shr
scas
fbld
rclb
pop
xchg
divb
int3
sub
fnstsw
jp
in
fldt
int
dec
add
inc
rolb
dec
lea
jb
out
fmuls
mov
cmp
push
hlt
in
push
inc
out
imul
mov
icebp
mov
repz
dec
sub
sbb
mov
cwtl
shlb
pop
aas
movsl
cs
in
mov
ljmp
loopne
or
in
outsb
pop
aad
je
ds
test
test
stos
sub
hlt
jb
add
mov
xchg
cmpb
int
ja
ja
jmp
dec
xchg
sub
ret
dec
out
mov
push
inc
out
into
int3
pop
loope
push
xchg
test
lock
sub
daa
push
mov
push
mov
sub
insl
movsl
dec
sbb
testb
add
cmpsl
jno
pop
mov
mov
jle
ja
sub
or
iret
sub
cmpsl
divl
sub
aad
pop
cmpsb
je
and
rorl
ret
mov
xchg
mov
cld
push
out
adc
sub
mov
mov
adc
mov
rorb
shrl
loopne
inc
out
mov
jg
ret
movsl
fs
xor
adc
push
test
call
xlat
mov
loop
mov
or
ja
mov
jmp
push
ficoms
pop
movsl
enter
enter
daa
rolb
adc
push
xchg
cmpsl
ret
push
mov
rolb
adc
cmpsb
mov
or
add
pop
stos
notl
xchg
adc
pop
sub
xchg
je
clc
inc
inc
pusha
xlat
jae
rcr
or
mov
int
cmp
push
sub
repz
push
fcoml
ja
and
xlat
cmp
adc
loopne
and
add
jmp
cmp
fcom
mov
mov
pop
adc
or
cmp
inc
cmp
dec
stos
sbb
sub
fmull
adc
fs
fcoml
in
sub
jg
insb
mov
pop
push
mov
std
adcl
sub
add
add
cmpsb
jno
mov
adc
add
jns
cmp
pop
lret
sbb
testb
outsb
and
adc
mov
mov
xchg
and
or
pop
and
xchg
xchg
xchg
jecxz
cmp
sahf
jbe
push
inc
adc
rclb
cmp
lretw
push
outsb
shlb
pushf
movsb
and
dec
push
sti
lret
xor
cmc
inc
lret
xor
lock
mov
xor
or
dec
add
adc
addr16
inc
dec
sub
jnp
inc
mov
call
xchg
cmp
xor
adc
pop
mov
bound
jl
shll
push
push
dec
iret
test
mov
pop
lret
add
adc
aaa
sbb
dec
stos
xor
pop
sub
subb
popa
add
loop
cmpl
push
das
es
out
pop
mov
mov
in
cwtl
sub
or
push
popf
outsl
movsl
mov
and
shlb
and
xor
into
sbb
dec
sti
pop
icebp
jl
jg
or
cmpsb
leave
popf
push
and
cld
adc
cmpsl
popf
mov
insb
dec
loopne
xor
in
jns
outsb
cmp
xchg
jp
or
jb
lea
popa
test
pop
push
cmp
sbbl
sub
dec
cmpsb
cmp
add
push
sub
hlt
push
sub
adc
jo
jp
inc
loope
stc
xchg
scas
adc
popf
pop
mov
jae
push
xor
int3
lods
nop
pop
adc
push
push
xor
test
add
inc
cmpsb
xor
cli
pop
aas
out
mov
cmc
sub
pop
shlb
in
fisttpll
lods
sbb
xchg
outsb
inc
push
push
or
stos
jnp
cmp
sbb
xchg
add
xor
add
enter
addr16
lds
into
pop
mov
stos
xchg
rol
jne
popf
shlb
pop
sbb
add
xor
std
add
popa
sbb
pop
int3
xchg
int3
aaa
lret
out
test
adc
xor
xchg
aam
sub
jnp
xor
rclb
xchg
gs
mov
popa
xor
movsb
pop
sarl
inc
out
cmpsl
lods
jl
xchg
sbb
pop
clc
nop
les
push
out
sub
data16
push
mov
std
jle
lret
repz
dec
dec
xchg
nop
lock
mov
mov
cmp
jle
or
push
in
inc
testb
inc
add
and
cmp
fisttpll
push
mov
inc
add
add
stos
xor
lret
xchg
pop
daa
cli
ficoml
movsl
mov
jbe
xor
sbb
pusha
and
js
iret
or
mov
ss
sarl
aam
jmp
pop
lock
and
scas
mov
add
jl
pop
pop
jnp
stc
xchg
test
lock
cli
push
movsl
in
sbb
jo
pushf
mov
push
fmuls
mov
outsb
and
outsb
push
ret
ds
fs
fisubrs
sub
add
rep
div
sahf
dec
scas
xchg
cmp
fcoms
push
cld
cwtl
in
inc
leave
jnp
push
mov
adc
adc
les
fwait
leave
sarl
out
mov
cmp
mov
mov
cmp
gs
jns
stos
jo
icebp
sub
push
xor
jg
pop
jbe
inc
or
dec
sub
lods
or
scas
ja
sub
lods
dec
xor
lea
adc
cmp
orb
push
fs
adc
dec
ja
mov
sub
lods
xor
mov
mov
add
mov
cmpsb
mov
addb
and
push
imul
xor
shll
ja
out
jae
adc
dec
mov
lret
in
pop
jnp
sahf
or
sub
hlt
xchg
adc
push
xchg
pop
shr
imulb
popf
cmp
xchg
and
mov
dec
sub
push
xchg
mov
mov
ljmp
pop
std
push
add
out
inc
sub
pop
in
mov
fldln2
xor
xor
dec
jmp
sub
fldenv
sbb
mov
push
sub
jge
into
jno
xor
mov
adc
jmp
fdivs
pushf
dec
xlat
rolb
movsb
les
dec
mov
adc
fimuls
push
add
jl
shr
gs
enter
aam
lea
sub
aaa
cmp
test
mov
shrb
loopne
mov
xor
cmp
fs
push
orps
sub
sbb
mov
xor
adc
lea
mov
insb
mov
int3
scas
idivb
sub
and
and
adc
fcomps
ss
push
jp
add
or
test
iret
shll
pop
adc
in
test
add
fidivl
rolb
outsb
pop
daa
mov
decb
in
xor
notb
flds
lret
push
mov
push
gs
and
sbb
into
xor
cmp
in
xchg
pop
dec
sub
loopne
fstps
movsl
icebp
fstpl
push
outsl
popa
mov
cmp
xchg
mov
hlt
bound
add
fdivr
je
ret
ja
or
sbbl
sub
push
bound
cltd
dec
aas
mov
xor
jge
sahf
clc
aas
movsl
repz
mov
xchg
fldenv
add
shl
adc
pop
jns
shlb
dec
inc
lea
push
xor
call
jg
scas
dec
jo
sbb
lahf
mov
pop
imul
sub
mov
scas
or
jne
dec
stos
mov
gs
hlt
shrb
icebp
rcll
xor
lcall
mov
jmp
fistl
lret
adc
fldpi
cwtl
mov
mov
cli
dec
arpl
xchg
or
cmp
add
ret
inc
lret
jnp
sub
in
pusha
dec
push
repz
jmp
incb
xchg
inc
lds
jns
mov
jo
jp
push
mov
std
mov
xor
mov
mov
push
push
sbb
clc
jae
insl
popf
pop
cmp
ja
cmpl
xchg
dec
repz
cmc
mov
mov
in
jnp
inc
arpl
pushf
push
and
sub
bound
jns
jae
and
jb
and
out
in
ret
imul
add
xorb
or
pop
dec
xor
xchg
cli
fbstp
cld
push
je
sub
aaa
ljmp
xchg
test
into
mov
sbb
add
mov
in
mov
push
dec
mov
xchg
mov
sbb
fidivs
mov
jne
and
call
test
sub
adc
lock
popf
test
insb
push
pop
pushf
pop
mov
mov
jmp
mov
or
shlb
icebp
and
jp
inc
xchg
pop
test
sub
pop
lods
les
les
rcrb
mov
imul
mov
repz
mov
inc
add
dec
xor
mov
testb
jo
sub
or
pop
add
xlat
cmc
add
outsb
add
xchg
repnz
push
pop
ficompl
and
push
insb
data16
ficoml
sbb
or
push
push
jge
cmp
hlt
or
mov
je
xor
out
lea
push
cld
add
add
xor
out
jno
movsb
in
scas
pushf
stc
add
add
dec
push
cld
jp
mov
adc
add
adc
cmp
lcall
xor
data16
xchg
aaa
jmp
sbb
iret
insl
aas
pop
stos
test
sub
testb
mov
fucom
je
addr16
inc
es
sub
outsl
xor
xor
pop
ds
mov
dec
mov
dec
fildll
and
dec
and
cltd
jb
lret
cmp
cmp
push
je
pop
jns
mov
push
sti
fbld
rcrl
pop
jb
jbe
sub
out
aam
dec
test
mov
test
mov
mov
mov
mov
cmp
negb
leave
mov
mov
dec
add
rcll
ss
mov
cmp
add
jle
shrl
xor
fucom
add
movb
mov
adc
mov
pusha
popa
sbb
iret
add
dec
imul
stos
push
ja
clc
test
fimull
in
roll
outsb
lret
outsb
cmp
pop
fbstp
test
lret
cmpsb
pusha
and
popf
fstpt
repnz
cmp
les
and
sahf
mov
adc
enter
out
inc
lret
filds
xchg
push
jbe
shll
insl
or
mov
cmp
dec
scas
stos
mov
xor
icebp
sbb
cmp
pop
dec
clc
cltd
je
xchg
sbb
pop
xor
mov
ds
and
xchg
dec
dec
xorb
pop
mov
xchg
xchg
lret
pusha
mov
jns
jne
mov
sbb
sbb
mov
jg
adc
or
mov
cs
mov
xor
stos
xor
or
jae
xor
xchg
hlt
jo
inc
jmp
jmp
cltd
jle
sarb
or
lahf
test
xchg
add
inc
sbb
psubd
out
pop
fsts
ret
aam
loop
mov
xchg
sbb
cld
leave
jmp
pop
mov
jae
adc
dec
cs
or
jo
sub
adc
xchg
fsubrl
pusha
cmp
cmp
add
xor
push
imul
pop
pop
int3
cmc
lret
jae
xchg
test
ljmp
leave
sub
out
popa
cmc
data16
in
sbb
or
or
ret
pop
shll
arpl
push
stc
add
xchg
pop
sbb
mov
or
ret
xchg
movsb
mov
mov
loopne
sbb
stos
enter
dec
cmp
sub
mov
adc
jmp
enter
inc
sub
cmp
pop
shl
adc
sub
rolb
sbb
loop
pusha
fmuls
mov
int3
das
pop
fisubl
mov
addr16
sub
imul
out
sub
mov
jbe
rolb
dec
arpl
pop
push
pop
and
dec
xchg
aam
dec
frndint
or
xor
add
adc
ret
jmp
cmp
add
xchg
adc
in
mov
movsb
popa
cmc
cmp
loop
xchg
add
push
mov
std
scas
or
sub
lahf
data16
push
orb
fs
mov
test
or
xchg
icebp
pop
and
dec
aad
hlt
jmp
or
and
ljmp
out
adc
xor
cmp
mov
adc
scas
fisubrl
dec
dec
popf
cmp
mov
ret
test
insl
int3
xchg
xor
sub
and
call
dec
cmp
add
dec
imul
xchg
movsb
ja
mov
mov
jne
in
jle
add
outsl
mov
adc
dec
dec
push
lcall
ret
inc
add
stos
pop
cmp
pushf
shrl
daa
sub
pop
cs
in
rolb
dec
stc
sahf
add
sub
leave
pop
fisubrs
outsb
add
cltd
fucom
inc
in
out
andb
push
fld
sub
sbb
mov
arpl
or
inc
jno
out
std
dec
mov
cmp
popf
fadd
das
in
or
iret
adc
jb
lret
add
hlt
flds
je
add
mov
popf
ds
inc
mov
or
call
ljmp
add
lret
movsl
ja
loope
add
arpl
cwtl
lcall
in
lds
xchg
mov
push
jl,pt
mov
loope
xchg
and
and
push
mov
sub
xchg
or
in
push
aaa
jns
dec
lea
xchg
mov
jl
movsb
jns
test
imul
xlat
fidivl
mov
aas
sbb
push
xchg
mov
sbbb
xor
mov
push
movsl
cs
outsl
in
mov
sbb
or
lods
push
fucomip
or
adc
movsl
sarb
sbbb
jbe
cs
call
movsl
sbb
mov
jne
sbb
mov
pop
fldcw
jmp
insl
mov
int
idivb
pushf
xchg
add
mov
cmp
inc
adc
roll
cld
pop
lret
sarb
clc
popf
adc
mov
sbb
cmc
sbb
fisubrl
jbe
pop
scas
adc
testl
jge
cmp
mov
test
dec
add
aam
push
xchg
fnsave
cmp
xchg
cmp
xlat
mov
sbb
sub
jle
fsubrs
add
clc
xchg
fisttpl
cli
daa
adc
mov
out
xchg
jle
cmpsl
jne
ret
jl
iret
dec
test
xchg
nop
insl
inc
cmp
adc
jbe
mov
fdivrs
movsl
dec
stc
xor
mov
notb
mov
adc
addr16
or
push
push
mov
movsl
nop
sub
in
icebp
jnp
push
rcrl
fdivl
enter
in
inc
sub
pop
inc
push
add
and
cmpsl
cmp
lret
xor
sbb
pushf
sub
jp
mov
daa
pop
xchg
shll
add
sbb
xor
cmp
les
jmp
mov
and
cltd
add
sub
pop
stos
xchg
imul
mov
stc
xor
in
stc
sbb
sahf
or
call
lock
lds
dec
fidivrl
cli
cmpl
sbb
xor
notb
push
fmuls
or
inc
jle
fldl
addb
xchg
xor
sbb
sbb
mov
into
cmpsl
cli
outsb
xor
inc
les
xchg
cld
mov
push
daa
xor
jae
adc
mov
add
inc
add
or
pop
fistps
aas
mov
loope
dec
mov
push
pop
fdivrl
jecxz
enter
push
in
mov
xchg
pop
xor
jno
xor
mov
xchg
lock
cwtl
cmp
mov
mov
bound
out
jg
lahf
popf
push
stos
mov
jl
roll
mov
mov
xor
xchg
pop
xor
cmc
lahf
lods
dec
das
sub
add
or
scas
cmp
test
inc
notb
pop
ss
xchg
incb
aad
mov
cmp
adc
push
add
repnz
test
les
je
and
sbb
pop
mov
mov
lods
jl
or
je
inc
repnz
xorl
xor
iret
testb
or
icebp
mov
fs
pop
ja
xor
ss
xchg
enter
and
jns
mov
mov
rcrb
sub
mov
push
mov
pop
repnz
pop
cmp
mov
push
push
movsb
or
xchg
clc
ljmp
cmp
cmp
movsb
jmp
push
mov
pop
inc
mov
push
popf
or
mov
push
lret
rorl
and
imul
and
mov
push
pop
aaa
adc
popa
dec
test
push
rolb
pop
sub
jmp
lods
test
pop
call
mov
sahf
filds
add
mov
das
popa
neg
jns
js
mov
inc
mov
cmpsl
mov
mov
push
xor
mov
jge
pushf
xchg
xchg
pop
andb
gs
stos
adc
sub
clc
and
or
ljmp
sub
sub
loop
mov
ja
fisttps
add
jb
testb
lds
addl
xor
pop
sbb
icebp
fwait
push
and
cmp
cmpsb
ja
cmp
mov
jnp
ljmp
xor
das
pop
add
ret
dec
and
pushf
adc
jg
or
and
gs
push
fisttpll
dec
std
pop
fldcw
aam
jmp
ret
push
dec
out
mov
setge
pop
mov
mov
xor
jnp
pusha
in
xchg
pop
mov
push
jle
inc
push
fidivl
cmp
cmp
sbbb
cmc
inc
shrl
icebp
nop
and
add
inc
lea
mov
pop
ror
outsl
jb
cmp
mov
imul
sbb
or
call
cmp
adc
xchg
insb
data16
jno
inc
addl
xchg
lock
pop
pop
xor
adc
inc
mov
insb
xchg
clc
mov
cld
push
shll
xchg
xchg
adc
addr16
cwtl
das
and
adc
rorb
dec
or
std
insl
scas
and
and
test
in
outsl
jmp
cmp
idivb
jl
enter
cltd
shr
mov
add
lods
xorb
mov
movsb
xor
out
push
or
call
arpl
test
js
lahf
mov
jb
in
cltd
adc
cmp
sahf
outsb
out
mov
loop
ds
ror
inc
or
mov
sahf
dec
xchg
imul
into
mov
push
add
jp
or
ds
sbb
pop
push
add
jp
loop
icebp
and
xor
cmpsb
or
dec
sbb
push
xlat
lock
sbb
imul
subl
lahf
leave
lds
cld
shll
aaa
mov
pop
or
outsl
push
mov
cmpb
mov
cmp
int
inc
orb
aas
test
cmc
push
mov
out
pop
mov
inc
lret
mov
jns
push
into
imull
aam
sbb
and
in
sarb
dec
cmpsl
pop
mov
les
addb
call
cwtl
push
shlb
xchg
dec
push
add
sbb
and
or
and
jns
adcb
ret
dec
je
inc
and
popf
add
dec
pop
ret
enter
ds
push
scas
rol
cld
or
xchg
inc
aam
or
jle
fcmove
outsb
inc
cwtl
push
ficomps
xor
pusha
ja
and
fsubrl
and
into
jecxz
out
mov
add
push
jne
insl
mov
xor
adc
test
in
movsb
ds
push
fdivr
shll
or
popf
xor
push
inc
outsb
add
and
mov
xor
int3
call
lret
sahf
jge
into
outsb
xchg
ret
in
lcall
and
enter
sbbb
xchg
jle
insl
inc
sub
and
adc
test
sbb
inc
sbb
dec
fbld
push
cmpsl
mov
jne
cli
jns
inc
jmp
sbb
jle
push
gs
outsb
xchg
ror
and
imull
jne
pushf
adc
mov
adc
adc
jb
icebp
movsb
mov
add
xchg
ret
clc
fucom
xor
ss
pop
js
movb
in
mov
or
inc
dec
pop
add
mov
jg
popa
cmpsl
adc
or
or
xchg
subb
shrl
adc
sub
lret
sbb
test
cmp
xchg
out
test
gs
or
es
pop
cmpsb
mulb
pop
mov
scas
test
fisubrl
fdiv
add
ret
clc
xchg
push
mov
int3
insl
call
stos
mov
mov
adc
imul
cmp
neg
adc
xchg
xchg
sahf
cltd
xorl
xor
push
fsubrl
lds
cmpsl
and
stos
adc
rcr
dec
icebp
mov
dec
sbb
ret
xchg
test
mov
in
nop
lods
pop
xchg
shll
or
push
out
or
pop
cmp
add
push
out
cmp
jbe
icebp
inc
xor
sbb
int
xor
das
imul
cmp
and
call
clc
test
in
fildll
sub
pushf
roll
fs
mov
mov
dec
lret
push
imul
test
pandn
int
push
sbb
inc
lret
out
inc
cmp
mov
clc
aam
sub
fimull
fidivrl
dec
jnp
enter
inc
dec
add
loopne
pop
in
inc
mov
fcomi
jmp
lahf
and
add
je
and
mov
push
inc
jne
xchg
repz
clc
mov
pop
push
dec
mov
push
inc
clc
dec
jge
adc
sub
and
adc
punpckhwd
js
pop
sbb
pop
insb
add
cmp
sbb
adc
movsb
loop
sbb
bound
pop
stos
xor
sub
addl
mov
hlt
add
cmp
addr16
add
mov
imul
outsl
jp
fcomps
sti
inc
inc
inc
and
inc
mov
imul
or
inc
push
jne
mov
movsb
sbb
xchg
sti
outsb
sub
sub
outsl
clc
insb
sub
dec
divb
test
cmpsl
jge
pop
lds
std
push
push
stos
cmp
inc
add
lret
shl
push
add
test
je
add
testb
aaa
push
fmuls
and
mov
cltd
in
in
mov
mov
push
sbb
jl
dec
scas
dec
jl
and
mov
test
mov
scas
lret
push
xor
repnz
pop
adc
stos
inc
pushf
dec
testl
pop
adc
out
cmp
ljmp
daa
rcl
lea
mov
pop
pop
inc
lods
fistps
cld
jae
add
pusha
fwait
addr16
ds
sub
sub
aam
push
lahf
push
fucomi
or
mov
cmp
fdivl
cmp
sahf
or
jge
rorb
aam
in
push
iret
dec
gs
js
aam
inc
mov
cltd
std
xor
jmp
loop
outsl
push
jg
js
andb
repnz
jae
cwtl
push
push
shll
enter
push
mov
imul
mov
iret
pop
jb
mov
xchg
xorps
aaa
sub
lret
rcll
push
inc
jge
fwait
pop
into
and
jp
mov
roll
dec
arpl
lcall
push
nop
fcomp
daa
cmp
mov
inc
fstl
xor
lock
push
xor
xorb
imul
test
xor
adc
lods
push
jno
movsb
repnz
mov
jb
xor
cld
lcall
jb
stc
test
xor
mov
out
add
or
stos
pop
ja
add
loopnew
jbe
out
adc
insb
insb
fdivrs
push
mov
mov
inc
in
sbb
popf
aad
ds
in
jecxz
mov
mov
cmp
cmp
lret
mov
mov
mov
mov
add
aad
xor
imul
mov
xchg
dec
pushf
nop
std
sub
ja
iret
icebp
fidivrs
mov
xchg
aaa
xchg
mov
mov
and
add
test
pop
loop
in
movsb
lock
int3
insb
pop
hlt
test
outsl
jmp
jne
push
lahf
pusha
pop
inc
mov
jne
or
sahf
out
rclb
mov
aad
and
mov
bound
arpl
mov
scas
add
negl
xorl
dec
nop
dec
cmp
fldenv
jge
leave
pop
cld
outsb
or
jae
sbb
imul
push
aaa
push
push
jne
mov
push
push
jp
outsl
call
pop
pop
inc
fstl
xor
xchg
lahf
outsl
mov
mov
inc
lock
xchg
mov
imul
mov
add
mov
cmpsl
arpl
sti
es
adc
flds
jae
jmp
pop
cmp
dec
lret
mulb
into
stos
inc
xchg
fs
out
aas
loopne
in
mov
js
jmp
mov
andl
mov
leave
jns
mov
cmp
or
jo
ret
addr16
xor
call
or
jecxz
lds
pusha
add
mov
mov
shld
cmp
or
sbb
addr16
stc
pop
movsb
dec
adc
pop
xor
mulb
fldl
and
pop
or
add
cmp
jl
adc
fidivl
divb
pop
jp
mov
out
shl
push
cli
lret
les
dec
lods
pusha
frstor
nop
repz
xor
cltd
mov
mov
lds
fadds
int3
mov
incl
jb
sti
rclb
movsb
sub
pusha
mov
stos
aas
cmpsb
test
pcmpeqw
shll
or
pop
lock
and
jb
add
adc
add
push
cld
jmp
test
loope
cmp
pusha
pop
aaa
aas
cli
movsl
inc
push
pop
fisubrl
sti
add
jmp
lret
icebp
pop
dec
adc
dec
out
pop
mov
or
mov
xor
xchg
jp
or
or
loop
fistps
push
xchg
pusha
add
lds
cld
orb
lea
in
inc
es
and
xor
arpl
not
loopne
xchg
daa
pop
sti
push
cmp
jg
hlt
mov
or
test
sti
out
dec
mov
pop
out
loopne
jp
aam
mov
or
dec
lea
cmpb
or
cmp
push
out
nop
mov
inc
repnz
hlt
push
mov
xlat
cwtl
fwait
mov
xchg
xchg
add
lds
cld
sti
push
and
pop
scas
mov
jecxz
fstpl
and
lcall
addr16
lcall
rcll
jmp
push
pop
dec
cmpsb
fs
dec
jp
xor
mov
inc
xchg
push
lock
popl
pop
cwtl
sbb
enter
test
push
in
cli
and
adc
xor
pop
lea
pop
test
sahf
loop
jl
fdivs
sub
pop
or
pop
xchg
sub
mov
or
xchg
pop
and
lret
jns
xchg
sbb
mov
stos
add
loop
mov
insb
fxtract
je
dec
cmp
mov
rcrl
jle
int
jne
dec
push
fnstenv
clc
jle
inc
inc
cltd
xor
sti
aad
lods
adc
sub
popa
cli
punpckldq
push
mov
sbb
lret
pop
rclb
jns
jle
mov
add
lret
clc
sbb
inc
hlt
stos
dec
fisubl
pop
ret
adc
cli
sbb
xor
cmp
sub
mov
inc
sahf
jecxz
call
cmp
inc
cltd
aaa
adc
pushf
lods
daa
imul
nop
mov
mov
mov
out
mov
das
lods
jae
add
push
add
xchg
add
mov
cwtl
lods
cld
inc
stos
aaa
leave
outsb
addb
test
and
mov
pushf
and
mov
lock
xor
arpl
bound
dec
scas
xchg
arpl
mov
test
push
cltd
cmp
clc
mov
sbb
jmp
mov
sbb
gs
jae
clts
pop
scas
or
push
iret
filds
jp
sbb
cmp
xor
add
test
jb
push
pop
idivl
rcrb
imull
or
mov
test
push
pop
sub
jno
daa
xor
and
pop
xchg
pop
ret
jne
cltd
or
test
or
lret
jl
ror
xchg
sbb
mov
add
xchg
mov
pop
pusha
mov
enter
loopne
mov
dec
ds
xor
cmpb
inc
pusha
aaa
push
fldl
leave
roll
xor
lret
jns
repnz
pop
dec
rcll
cli
repz
adc
mov
stc
movsbl
fcmovnb
cmpsb
push
aaa
push
push
rclb
pop
and
pop
adc
sbb
jl
popa
stos
jp
aaa
dec
imul
hlt
subb
test
cs
rcrl
adc
jmp
push
adc
fcomip
push
mov
push
or
lfs
jl
lcall
call
sub
sub
sbb
lock
dec
mov
ret
mov
call
shrb
shrb
rcr
mov
sbb
ret
dec
pusha
fcmovb
pop
mov
jo
mov
xchg
xchg
aas
mov
popl
es
int3
pop
mov
scas
pop
adc
pop
fisttps
sub
sub
rorl
cmpsb
scas
cmp
pop
cltd
and
inc
int3
mov
cmp
adc
fwait
mov
in
notl
push
aam
mov
fistpl
clc
sbb
cmpsb
xchg
mov
cltd
xorl
mov
pushf
push
lret
pop
shlb
mov
and
addr16
jl
stc
daa
sbb
idivl
and
jmp
xor
xchg
out
nop
movsl
fisttps
sarb
mov
push
les
add
push
pop
je
in
inc
cmpsb
rcrb
xlat
or
and
out
jne
ljmp
mov
pushf
cwtl
inc
inc
xor
mov
or
repz
sub
sahf
adc
add
enter
jne
xchg
mov
mov
fs
sbb
mov
in
xor
xor
aaa
cli
mov
popa
jb
out
stc
call
mov
dec
cmpsb
push
mov
push
dec
enter
clc
pop
stc
xor
jge
and
cmpsl
int
test
orl
bound
sbb
push
shll
rcrl
mov
stos
sbb
decb
adc
push
pusha
ljmp
or
repz
and
sub
stos
mov
dec
add
mov
out
xchg
int
xor
out
jg
js
cltd
or
addr16
stc
jbe
mov
fbld
hlt
xchg
outsl
je
xchg
push
scas
sbb
fidivrs
sbb
aas
pushfw
push
repz
inc
rcrb
test
lods
push
loope
std
daa
stos
sarb
add
ljmp
pop
popa
push
test
push
pop
into
movsb
das
push
sbb
sub
mov
or
mov
imul
cmp
jne
inc
push
pop
or
push
inc
inc
add
je
inc
lret
xchg
cmp
movsl
es
lods
xchg
lods
cli
fs
push
mov
rolb
test
icebp
cli
fnstcw
push
mov
dec
in
das
cmp
lret
je
cld
cli
stos
adc
movsl
out
bnd
or
pop
ret
dec
ds
jnp
shll
mov
sbb
dec
ret
dec
jno
out
add
pop
xor
mov
sbb
add
movsb
imul
adc
mov
xchg
fisubrs
jmp
push
scas
in
call
adc
sub
jns
stos
insb
and
xor
repnz
js
inc
push
fimull
cmp
stos
leave
ficoml
dec
sbb
add
or
loope
aam
pop
pop
imul
add
jno
xor
test
out
mov
popa
shrb
xor
xor
bound
mov
sbb
push
xchg
fiaddl
mov
xlat
gs
xor
mov
pop
aas
dec
push
addr16
jb
pop
int
push
shl
ret
mov
mov
add
jno
jp
xor
aaa
scas
inc
inc
cld
pop
cmp
add
je
insb
test
jecxz
pop
mov
pop
adc
push
in
xorl
aas
xlat
out
je
sbb
lds
or
sub
mov
inc
adc
cltd
leave
push
push
add
sbbb
mov
push
push
outsb
inc
pop
faddl
leave
mov
es
cmp
jge
repz
idiv
arpl
les
clc
js
push
pushf
jge
mov
stos
mov
fmull
popf
cld
jg
pop
lds
ret
and
lock
clc
daa
jecxz
or
lock
jle
arpl
les
xchg
push
mov
dec
mov
stc
pushf
outsl
inc
lret
mov
clc
rcll
or
roll
push
push
jbe
push
mov
sarl
mov
dec
inc
and
inc
cltd
test
cmp
clc
sarb
xchg
ss
cmc
push
iret
pop
dec
pop
jo
push
loope
popa
call
shrl
loopne
add
adc
ret
pusha
adc
add
test
shrb
add
push
sbb
out
call
mov
jns
test
dec
aaa
lods
sub
aaa
in
push
xchg
mov
mov
in
sti
pop
and
test
and
add
cli
dec
jl
mov
adc
flds
rol
cwtl
sub
cmc
out
fwait
inc
sbb
outsb
mov
test
xor
push
js
xchg
push
aad
iret
mov
inc
mov
jl
cmp
xor
and
pop
pushf
loope
fldt
jb
and
aas
mov
testl
shlb
adc
xlat
cs
jl
mov
inc
sahf
movsb
jge
mov
jns
jmp
repnz
gs
sti
push
gs
cmc
xchg
das
mov
or
pop
xor
gs
ja
cmp
cmpsl
inc
mov
inc
stos
pop
cltd
adc
xchg
fistpll
loope
mov
outsb
roll
and
push
lret
test
jg
cmp
divl
pusha
call
push
or
sbb
movsb
inc
push
xor
into
les
pop
push
cmp
icebp
test
aaa
mov
in
xlat
cmp
enter
in
lds
push
sti
shrb
cmc
fbld
mov
xor
or
inc
test
pop
xchg
push
mov
scas
clc
outsl
xchg
les
cmc
push
das
dec
ret
notl
jl
add
rcrb
mov
out
dec
and
sbb
fs
or
xchg
in
xor
sub
and
stos
ret
adc
aas
sub
pop
scas
fistps
scas
adc
add
stos
cmp
ret
shll
loop
es
ret
shrl
pop
repnz
adc
xchg
and
in
push
mov
scas
iret
mov
fiadds
pushf
or
and
loopne
mull
imull
lds
jb
push
mov
hlt
cmpsb
rol
ljmp
adcl
fdivl
loop
fs
adc
mov
movsl
jmp
add
leave
sbb
scas
outsl
testb
dec
pop
pop
xlat
aas
inc
sbb
lahf
aam
or
push
ss
mov
subl
sub
xor
ss
rcrl
mov
pop
pushl
sub
repnz
loop
je
mov
in
sub
stos
xor
push
mov
je
pop
iret
test
jo
inc
xchg
insl
fistpl
cmp
lret
mov
clc
cmp
sub
push
dec
addr16
jnp
out
xchg
into
pop
gs
push
push
mov
fdivrl
inc
pop
lcall
pop
cmp
cmp
rolb
call
add
mov
insb
mov
mov
push
add
out
sarb
into
decb
pop
jge
lock
xor
sub
je
popf
arpl
and
out
push
or
cmc
sbb
xchg
add
psubb
push
outsb
fcom
mov
mov
sub
or
jmp
dec
sub
push
mov
mov
data16
push
push
nop
inc
dec
xchg
in
cli
jb
cmp
mov
imul
inc
xor
jb
and
and
pop
mov
aaa
popa
sar
cli
js
rcrl
lods
xor
rcrb
pop
dec
mov
jmp
dec
ljmp
outsb
pop
and
stos
push
pop
jae
push
jmp
addb
frstor
adc
xlat
cmp
mov
inc
les
sahf
fs
nop
leave
mov
mov
inc
testl
mov
ss
adc
jl
xchg
jmp
push
fwait
insb
mov
jb
insl
cmp
push
test
xor
or
fisttpll
cmp
int
add
dec
sbb
test
cmp
fs
pop
sbb
dec
mov
xchg
mov
sti
cvtps2pd
cmp
push
and
push
add
dec
sbb
popf
fistps
int3
std
adc
mov
mov
xor
leave
cmpsl
inc
mov
add
dec
pop
push
and
cwtl
mov
mov
sbb
jo
es
leave
jne
lods
lahf
cmp
cld
pop
popf
leave
xchg
adc
mov
repnz
mov
jns
jle
jae
into
sub
xor
sbb
fldcw
movsl
mov
subb
xchg
movsl
repz
add
cmp
pusha
push
sarl
mov
pusha
mov
jmp
loope
jl
inc
push
dec
loop
repz
sbb
jp
sbb
and
xchg
stos
mov
data16
sub
pop
push
and
ljmp
xor
stc
lock
jle
aam
mov
popf
pop
pusha
outsb
fmull
fildll
xchg
push
sbb
imul
xor
inc
or
je
mov
sti
xchg
rclb
xchg
jnp
mov
dec
jl
mov
arpl
repnz
scas
or
push
test
sbb
rolb
lret
ret
imul
mov
ljmp
test
pushf
lea
in
sub
push
mov
popf
out
cli
add
dec
rcl
sub
imulb
fldcw
bound
cmpsl
ficoms
mov
hlt
mov
xchg
aaa
cmp
stos
xchg
jbe
leave
mov
clc
dec
pop
mov
cmpsl
cmpsb
cwtl
or
lcall
lods
imul
fcom
push
xor
mov
and
dec
mov
je
daa
pop
cmc
add
and
sub
arpl
fsubs
xchg
inc
push
inc
mov
int3
js
dec
lret
xchg
cmpl
aad
add
pop
push
lret
cltd
jns
push
add
aas
xor
pop
add
mov
ficoms
xor
push
sahf
jno
add
jmp
jae
pop
mov
mov
cmp
shlb
pusha
pop
push
movsl
add
std
hlt
pusha
push
out
dec
loopne
fs
aas
pop
in
frstor
call
and
stos
jne
jecxz
insb
inc
xchg
xor
lahf
xchg
push
dec
hlt
je
inc
scas
lds
pop
shrb
lods
push
cld
inc
push
jecxz
movl
or
dec
enter
xchg
xchg
xchg
pop
xchg
je
movb
mov
fcoms
sub
mov
push
cmp
movsl
aad
inc
in
loop
sbb
jnp
hlt
push
dec
pushf
scas
mov
in
data16
cli
cmp
jno
inc
lea
sbb
xlat
pmulhuw
mov
outsb
movsl
addl
stos
lret
lods
popf
sbb
dec
out
xor
push
adc
cmp
mov
lock
repz
js
cld
pop
sahf
xchg
sti
push
and
mov
dec
push
xchg
fs
sub
sbb
std
lods
mov
sti
push
into
sbbb
fmull
add
dec
xchg
or
inc
cmp
jp
lahf
mov
mov
adc
repz
lret
pop
stos
mov
sbb
in
loope
or
cmpsl
pop
sbb
mov
pop
pop
or
sbb
mov
rsm
jp
jae
jp
dec
mov
mov
lods
and
orb
jo
rolb
or
pop
xor
sub
inc
xor
xchg
js
sub
test
lcall
out
and
push
xchg
sbb
lahf
xor
mov
cli
ret
push
xlat
adc
movsl
stos
pop
adc
mov
mov
mov
rcll
sbb
xor
lcall
xchg
dec
bound
jnp
xchg
adcl
mov
popf
in
cmp
icebp
data16
xchg
xchg
sub
dec
or
jmp
push
sub
imul
sub
add
or
push
daa
lret
aas
push
adc
add
and
idivl
enter
inc
test
mov
cld
cmc
pop
fsubl
cmp
popf
or
inc
add
cmpsb
scas
and
pop
nop
movsl
fldenv
xchg
nop
inc
pop
jmp
shlb
jno
mov
in
add
fisubrs
dec
cmp
xchg
push
mov
fmull
icebp
rorl
mov
pop
fcom
clc
fnstcw
jb
dec
shl
add
test
iret
push
stos
xlat
stc
adc
jns
cmp
mov
jo
jo
cmp
in
push
stos
pop
mov
push
test
adc
lret
sbb
ret
jle
mov
int
or
jmp
mov
lahf
dec
xchg
pop
outsl
jnp
ds
xor
push
sahf
aad
mov
pop
pop
add
cli
cld
xchg
or
mov
adc
pop
or
adc
pop
mov
lret
popf
or
rclb
add
push
xlat
dec
sub
dec
out
cmpsl
push
push
mov
les
mov
imul
mov
hlt
jbe
movsb
sbb
pop
add
das
fwait
add
pop
in
inc
inc
push
xchg
jnp
sbb
cmpb
fldl
bound
aam
imul
stos
jl
push
or
mov
ffree
mov
sub
adc
shrb
bound
xchg
leave
mov
and
lock
push
add
jnp
adc
fistps
push
movb
push
xor
add
fcmovnu
sub
daa
adc
lods
es
shr
ss
mov
xor
subb
shl
cmpsb
insl
mov
jecxz
xor
bound
test
ljmp
jle
dec
jmp
adc
les
dec
addr16
cld
js
dec
incb
dec
je
adcl
push
hlt
ds
sub
sbb
es
push
shlb
imul
pushf
mov
in
sub
int
mov
pop
xor
ret
inc
or
pop
mov
push
imul
or
movsb
daa
out
or
lods
pop
push
or
dec
jne
cmpsl
lds
xor
push
int3
call
adc
aas
pop
outsb
adc
mov
test
xchg
loope
gs
sbb
sub
pop
xchg
dec
xor
nop
jnp
mov
and
xor
lods
mov
mov
adcb
xorl
repz
jnp
mov
sbb
test
jle
sahf
mov
jge
mov
les
push
xor
sbb
jo
pop
xchg
mov
xchg
cld
fisttpl
leave
shr
aad
lret
jmp
xor
inc
aad
insb
jne
pusha
lods
sub
orps
out
or
sub
mov
xor
xlat
xchg
jge
dec
add
aam
pop
xchg
loop
test
mov
pusha
cmc
shll
mov
int3
insl
xchg
out
add
outsw
insl
pushf
pop
jne
jge
out
rorb
xchg
and
mov
imul
and
dec
pop
fdivrl
xchg
fsubrs
jbe
in
pop
pop
adc
mov
mov
cmp
shrl
dec
push
into
movsl
xchg
pop
movsb
xchg
pop
mov
sbb
cmp
xchg
insb
or
in
cwtl
add
or
mov
inc
or
sbb
sahf
xchg
jb,pt
jecxz
test
sub
xor
or
movsl
xchg
cltd
jp
hlt
xlat
imul
pop
xchg
push
int
call
sub
cmp
rorb
xchg
mov
xchg
push
pop
jbe
jp
add
ficoms
pop
outsl
repz
negl
and
mov
cmc
jae
fnstenv
sbb
mov
stos
and
es
xor
push
enter
shrl
inc
stos
inc
jg
divl
stos
loop
rcrb
xlat
inc
dec
dec
in
dec
pop
jp
out
jne
ficomps
dec
outsl
dec
mov
rcr
mov
addb
inc
shlb
fbstp
test
add
jge
lahf
xor
loope
movsb
cmp
or
sbb
push
movb
outsb
jns
inc
cmpsl
loop
and
outsl
mov
pop
cmp
cld
xchg
cwtl
dec
std
jns
cmp
cmp
enter
mov
sbb
lret
sbb
jbe
jl
pop
stc
sub
or
fwait
jge
jge
mov
jg
sbb
filds
mov
repz
aas
das
enter
mov
fldenv
fnstsw
in
cmp
aad
std
out
jmp
inc
in
inc
pop
lock
jecxz
outsb
add
mov
stos
or
mov
mov
xchg
movsl
mov
jbe
or
xlat
and
pop
mov
inc
sbb
sarb
push
sbb
in
movsb
or
or
mov
jecxz
sub
xlat
pop
lret
push
and
push
sbb
mov
lods
add
pop
nop
push
pop
pop
pusha
mov
movsbl
jmp
xchg
mov
inc
loope
mov
sbb
xchg
lods
dec
repnz
sub
adc
out
gs
outsb
or
xor
or
out
pop
test
lret
ret
testb
mov
mov
and
gs
popa
test
imul
sbb
dec
xor
jbe
push
pop
sub
mov
sbb
cmpsb
xchg
jbe
lods
popa
rolb
test
xchg
or
pop
dec
shrb
popf
xor
push
popa
pusha
movsb
aad
sarb
xor
mov
pop
inc
jns
lret
ja
iret
and
cmp
push
iret
nop
popa
push
loope
les
int
jne
push
adc
incb
inc
enter
roll
daa
mov
repz
inc
jns
rorb
sti
pop
inc
mov
adcb
icebp
adc
test
cltd
out
adc
sbb
xchg
dec
push
mov
negl
test
ds
in
xchg
shrb
aas
sbb
mov
add
rcl
fsubrp
scas
sti
adc
je
mov
xchg
jle
inc
mov
stc
add
mov
iret
jl
adc
mov
pop
add
push
add
mov
cmc
aam
cmp
cs
imul
cwtl
mov
xchg
fnstcw
xchg
mov
pop
or
xor
imul
mov
fstpt
mov
movl
test
or
je
out
neg
dec
add
xchg
aam
pop
inc
xor
pop
add
jb
jno
mov
test
ror
daa
orl
dec
push
push
dec
pop
test
into
test
ja
add
add
icebp
cmp
orb
add
loop
sub
xor
mov
addb
nop
cmpb
lea
pop
jge
cmc
test
fdivrs
mov
mov
lods
sar
pop
inc
mov
mov
inc
xchg
adc
sub
mov
xchg
sbb
notb
stc
mov
stos
push
and
adc
mov
not
sub
lahf
adc
fs
enter
push
add
cmp
outsb
clc
xor
cmp
into
jnp
fs
fadds
xchg
mov
jl
test
mov
push
pop
les
test
jbe
mov
into
leave
lcall
les
leave
shld
mov
pop
or
pop
popa
mov
lret
fiaddl
frstor
and
inc
mov
in
push
es
mov
push
sahf
dec
and
test
mov
sub
adc
sbb
xor
cwtl
sti
ljmp
xlat
mov
rcl
outsb
fstpl
push
pop
lods
arpl
sub
mov
mov
mov
fisubl
mov
out
push
or
imul
outsb
dec
sub
mov
mov
mov
jg
mov
and
dec
jne
or
out
cmpl
jp
add
jecxz
pop
push
cltd
push
jp
cmpsb
mov
inc
add
std
mov
jnp
push
movsb
ret
inc
ds
add
out
mov
or
xor
and
negl
mov
inc
bound
lcallw
mov
test
pop
js
xor
xchg
iret
rorl
jecxz
stc
jbe
ret
add
aam
adc
jae
cmp
pop
inc
insb
in
dec
mov
pop
fxch
aas
aad
sti
dec
subl
out
pop
imul
or
ficoms
pop
scas
fs
dec
adc
pop
gs
and
sub
sub
or
push
jp
ds
jne
rorb
bound
negl
pop
push
push
mov
mov
xor
enter
sbb
in
in
aas
inc
inc
movsb
mov
fdivs
push
repnz
adc
add
rol
shlb
xor
lret
fbld
mov
sarb
or
or
int3
ficompl
or
and
xor
notl
jae
fbld
mov
cmpsb
daa
push
int3
jbe
add
push
ss
pushl
push
jnp
jno
rcrb
sub
lcall
cmp
pop
fsts
push
pop
imul
and
mov
add
fs
nop
xchg
jg
inc
dec
dec
inc
fsubrs
out
mov
add
lcall
push
pop
fldcw
mov
or
lcall
cmp
jne
adc
fidivrs
popf
int
push
lea
jl
popa
and
xor
loop
inc
ljmp
mov
lea
incl
lea
fidivrl
notb
add
and
xchg
imul
mov
jmp
push
cmpsl
js
inc
sbb
mov
cmp
add
push
mov
xor
testl
inc
in
adc
jmp
clc
sti
xchg
dec
not
jne
jecxz
stos
inc
mov
or
mov
fstpl
dec
jmp
notb
call
pop
repz
lret
lock
mov
jg
test
pop
outsl
mov
loop
nop
mov
xor
cmpsl
adc
or
mov
outsb
stos
xchg
aas
out
or
jbe
popf
movsb
cltd
scas
arpl
nop
lcall
lock
push
cli
push
andb
or
jnp
mov
or
leave
push
sub
sbb
jns
mov
and
int3
pop
imul
and
xchg
iret
insb
jmp
int
pop
aas
pop
jbe
mov
test
push
add
cwtl
add
mov
push
xchg
sti
pop
xlat
rolb
push
pop
es
mov
or
ret
std
mov
in
add
cltd
sbb
or
cmc
dec
dec
mov
inc
push
dec
cld
mov
rdpmc
push
repnz
loop
xor
mov
mov
cmp
xchg
jnp
push
mov
push
mov
sbbb
clc
pop
adc
mov
into
pop
pop
sahf
jnp
add
mov
fildll
daa
pop
xor
fdivrp
loop
fst
pop
mov
jge
aad
xchg
fisttpll
loope
ror
mov
pop
and
fldenv
pop
hlt
inc
shlb
imulb
ja
mov
and
inc
pusha
mov
mov
sbb
cmp
scas
das
sub
movsb
clc
mov
pop
cmpsb
shl
je
testb
fstpl
adc
pusha
jecxz
out
dec
cwtl
jns
mov
mov
lea
sub
and
je
test
jmp
xlat
cmp
hlt
fdivrl
test
add
push
adc
decl
sbb
sbb
push
mulb
mov
out
cld
cmpl
and
fcomip
push
hlt
nop
clc
inc
xchg
xchg
mov
inc
mov
xchg
pop
sbbl
xorb
dec
std
fsubrs
add
leave
mov
xor
in
and
mov
xor
xchg
outsb
dec
scas
inc
nop
push
insl
and
jge
dec
mov
jnp
es
fdivrs
les
xchg
xor
mov
jbe
xor
aas
sbb
push
mov
cmp
inc
or
ss
adc
aam
sub
dec
jbe
fstps
fwait
jp
push
mov
pop
adc
in
movsb
jl
fidivs
subb
sbb
adc
es
jmp
xchg
stos
aad
jb
mov
push
lret
imul
xchg
pop
xchg
jnp
push
jecxz
dec
sarb
push
xchg
std
ds
pusha
iret
sbb
ret
xchg
and
push
and
daa
mov
jp
adc
fdivs
and
lods
sbb
pop
jo
xor
dec
push
fnstcw
iret
sarl
test
mov
mov
xor
popf
nop
cmp
hlt
xchg
mov
push
push
pop
adc
or
aam
jnp
adc
jb
int3
nop
inc
adc
sub
dec
into
int3
imul
and
jl
addr16
inc
mov
sub
xchg
xor
jo
fcomp
int
mov
cmp
mov
enter
pushf
daa
xor
test
cs
mov
movsl
sub
xchg
xlat
popa
xchg
sub
push
mov
imul
mov
scas
push
push
mov
mov
mov
cwtl
es
lcall
mov
and
dec
push
pusha
or
lret
sbb
mov
out
rclb
out
nop
cmp
sub
scas
test
sbb
shl
push
dec
out
mov
adc
ret
mov
add
mov
cmpsl
cwtl
iret
bound
adc
cli
pop
jnp
xchg
sub
dec
insb
jmp
sub
lds
shll
in
mov
out
ljmp
stc
mov
jnp
and
xchg
loop
adc
inc
xchg
xchg
jmp
dec
pusha
push
sarb
jmp
je
and
adc
jne
xor
stos
sbb
dec
gs
test
xchg
push
insl
outsb
loope
sti
pop
fucomip
jae
js
clc
insb
pop
pop
pop
lds
clc
pop
rorl
js
ss
cmp
push
mov
xor
aad
dec
jg
dec
icebp
mov
scas
dec
inc
mov
jecxz
cld
int3
dec
mov
cmc
mov
xchg
test
sbb
push
insl
and
repnz
push
test
xor
pop
cmpsb
ja
sub
test
sahf
and
loopne
pop
loop
cs
jb
xor
add
mov
data16
scas
jno
pushf
fildll
out
jmp
lods
outsb
js
mov
cltd
cltd
adc
mov
lea
setbe
push
ss
std
or
lods
push
imul
loopne
push
jne
call
lea
mov
arpl
into
mov
fisttps
enter
pop
jo
out
push
loopne
aas
push
rcr
pop
and
push
sahf
imul
cmpsb
pop
insb
mov
lret
iret
and
inc
in
push
dec
leave
or
mov
in
mov
shrl
repz
dec
es
es
cmpb
leave
inc
int
js
lods
sub
adcb
in
add
sbbb
jae
jae
pop
in
jnp
aaa
push
dec
jo
cltd
jg
push
pop
push
xchg
in
out
fisttpll
in
fmuls
lods
push
mov
int3
inc
push
jle
shlb
das
and
adc
ja
idivb
xor
addb
popl
push
jns
dec
xchg
lcall
cltd
inc
lret
dec
aad
mov
mov
sti
out
dec
adc
daa
jle
nop
or
into
jbe
fildll
nop
aad
jmp
mov
rcrb
ja
adc
out
out
mov
cmp
scas
insl
dec
inc
cs
nop
popa
lock
jnp
arpl
adcb
in
in
pop
pop
add
or
jno
mov
xchg
sbb
frstor
ds
int
inc
adc
iret
in
dec
adc
movsb
add
jne
enter
mov
xor
scas
lcall
inc
iret
inc
scas
xchg
sub
push
dec
outsl
lret
pop
outsl
notb
and
cli
mov
dec
add
xchg
mov
ret
or
int3
xchg
pop
mov
dec
jmp
jb
push
lcall
leave
daa
pop
je
pop
jmp
mov
adc
push
jb
cwtl
out
mov
out
push
sub
rcrb
pop
cld
idivb
aad
in
lret
insl
or
or
add
dec
gs
rclb
jmp
push
orl
sub
in
fcomip
test
outsb
sarb
clc
fwait
imulb
mov
shr
jmp
xchg
popa
cli
adc
ret
repz
int
push
push
gs
pusha
inc
shl
in
inc
andb
fsts
sbb
sbb
lock
mov
outsb
mov
lods
mov
insl
add
mov
idivb
aaa
jns
aam
jo
add
jbe
pop
jbe
dec
sub
xor
test
xchg
xchg
nop
sub
add
mov
lods
cmpb
mov
mov
and
je
inc
inc
mov
mov
xor
in
cmp
jmp
mov
cmp
std
mov
xor
xchg
xor
push
pop
add
dec
test
pushf
mov
jl
lcall
sub
mov
es
mov
xchg
jbe
dec
add
mov
clc
loope
mov
adc
loope
dec
subb
xor
pop
add
popa
rorb
mov
arpl
and
sti
popf
lods
mov
outsl
repz
dec
movsl
nop
or
divl
leave
test
push
mul
mov
sub
dec
jmp
xor
inc
xchg
repnz
jbe
insb
xor
gs
mov
and
lods
pop
jmp
inc
sub
cwtl
pop
cmp
idivl
mov
cmp
pop
mov
in
and
out
sar
push
mov
pop
xor
ret
ret
xchg
insl
cmp
int3
sbb
imul
dec
xor
add
mov
xor
add
mov
dec
cli
aaa
fnstenv
repnz
and
jns
adc
jmp
in
mov
mov
inc
loope
pop
dec
repz
fisubs
dec
dec
idivb
loope
cld
addr16
add
adc
sahf
insl
pop
inc
xchg
push
jb
or
stos
movsb
or
push
inc
mov
mov
divb
lea
mov
sub
scas
or
mov
jge
or
jecxz
in
jge
js
dec
xor
dec
mov
mov
xchg
mov
push
repnz
pop
sbb
imull
jns
and
pop
add
mov
inc
inc
in
testw
xor
movsl
add
cmp
push
xchg
mov
adc
mov
mov
pop
and
xchg
mov
sbb
dec
cmp
push
lods
adc
lods
jno
sbb
sbbl
pop
stos
add
fmul
mov
and
add
cld
out
add
xor
test
cltd
test
cmp
jno
ja
les
cmpsb
sub
or
xchg
inc
and
push
push
or
stc
cmp
xor
in
and
cmp
and
andl
dec
roll
arpl
mov
fistpl
mov
add
inc
repnz
and
mov
mov
push
mov
sti
cmp
xchg
aam
int
cmp
mov
jmp
adc
mov
cmpsl
scas
insl
add
out
lea
mov
dec
std
sahf
not
inc
cli
gs
fsubrp
in
jge
imulb
aas
aas
int3
aam
sti
mov
adc
adc
inc
fnstcw
std
push
adc
mov
outsl
popa
mov
push
sti
add
jecxz
mov
lcall
stc
ret
mov
lods
mov
jl
mov
shlb
sbb
mov
xor
bound
push
xchg
ja
rcll
jl
sub
mov
inc
aas
sub
das
out
mov
sti
inc
fimuls
iret
data16
pop
xlat
cmc
nop
or
aad
je
xor
and
stos
aad
aaa
dec
aam
pop
cmp
inc
into
popa
gs
pop
dec
add
orl
pushf
mov
pop
jno
scas
test
mov
out
inc
cmp
test
sbb
aas
adc
pop
jns
mov
or
in
jp
cmp
xor
lea
mov
call
jp
ljmp
and
inc
add
outsl
int
stos
sbb
movsl
in
pushf
addr16
repz
sbb
clc
cmp
push
and
gs
incl
mov
sbb
lcall
xor
mov
fsubs
pop
in
jns
pop
add
push
mov
push
iret
inc
popa
xlat
cmp
push
xchg
lods
lds
sbb
out
pop
add
lret
gs
sub
ror
pop
pop
mov
xor
std
cmc
in
add
or
fstpl
pop
jmp
sbb
fwait
mov
xor
or
mov
mov
or
push
mov
xchg
std
mov
cld
push
mov
rcll
jbe
cmc
add
clc
lret
or
cmp
xlat
cmpb
and
dec
outsb
stos
pop
cltd
add
fstl
mov
and
mov
cmp
or
jns
jno
stos
pop
clc
cmp
repnz
lods
sub
pop
clc
mov
or
cmp
ret
xchg
cmpl
and
and
dec
or
sbb
incl
push
and
push
idivb
movsl
nop
test
adc
xchg
lods
inc
pop
jbe
testl
aad
or
jp,pt
sbb
mov
test
insb
xchg
dec
filds
mov
xor
js
push
imulb
jg
inc
stos
xchg
mov
aaa
icebp
push
or
xchg
sarl
into
jp
mov
xchg
add
scas
fs
add
adc
jnp
jmp
jo
shrl
mov
sbb
or
sbb
roll
add
outsb
dec
sub
push
lea
mov
xor
sub
lret
sub
xchg
aaa
movsb
lcall
test
psubusb
sub
cltd
cmp
loopne
dec
loop
in
stc
mov
xchg
jle
jns
in
imul
mov
sub
inc
fisubrl
jo
enter
popa
mov
inc
adc
bound
int3
std
xor
adcl
lret
cmc
inc
fistpl
mov
fwait
std
add
jno
js,pt
jg
and
decb
pop
ret
mov
imul
cmp
sar
and
push
clc
popl
jg
and
in
shl
cmp
daa
scas
hlt
test
test
xchg
call
in
mov
pop
push
nop
dec
hlt
xchg
mov
xchg
sbb
sub
fs
mov
lcall
leave
mov
mov
add
jns
jge,pt
shll
dec
insb
mov
sub
pop
pop
sahf
ja
ffreep
cwtl
fnsave
fstl
push
rcrb
incb
and
data16
dec
cltd
fiaddl
sub
out
stos
les
sub
xor
push
xchg
pop
adc
mov
scas
xchg
test
movb
add
jae
stos
scas
mov
adc
andb
lods
mov
xor
stc
in
repz
pusha
add
inc
into
add
and
stc
call
ja
testb
jg
notl
or
pop
in
shrl
and
mov
push
js
dec
int
cmp
shll
push
sbb
out
jge
mov
stos
stos
cmp
cld
add
xchg
into
int
test
and
shrb
lds
lahf
or
into
mov
sbb
sub
xor
in
pop
and
cs
cli
jne
mov
cmp
je
gs
dec
ljmp
cmpsl
or
push
push
sub
and
mov
int3
pop
push
ljmp
cwtl
fs
fisttps
test
ds
movl
clc
inc
mov
sbb
xchg
xchg
sbb
fisubrl
out
js
xchg
bound
lret
cmp
push
in
in
add
loop
mov
cmp
cmc
loope
in
call
jle
addl
sbb
pop
inc
xchg
outsl
stos
leave
cmp
lds
dec
mov
sti
loop
adc
arpl
push
test
stc
movsb
sub
movsl
testl
out
jbe
testb
nop
sub
sub
sbb
xchg
inc
and
sub
xor
inc
fsubrl
push
jbe
add
jl
mov
lret
dec
addl
xchg
inc
clc
inc
mov
int3
or
testl
xorb
adc
cmp
mov
iret
pop
lea
jae
cli
ljmp
test
enter
test
mov
enter
xlat
aad
fldenv
push
inc
orb
xorb
mov
cli
bound
jbe
cmp
push
push
insb
cmc
and
arpl
cwtl
push
fdivrl
xchg
iret
and
ret
add
idivl
movsl
xchg
mov
loope
push
inc
fcomps
ret
add
sbb
pop
test
out
lret
inc
pop
movsb
mov
test
gs
fstp
pop
push
sub
pop
jecxz
outsl
lea
stos
sub
adc
mov
inc
mov
cli
sbbl
rorl
fs
push
push
xchg
out
insl
and
pop
out
insb
sbb
push
or
sbb
jmp
mov
mov
rorl
repz
cmpsb
iret
cmp
stos
outsb
mov
sub
ret
mov
call
aam
dec
dec
cli
mov
outsb
out
inc
pop
jmp
xchg
sbb
leave
inc
inc
cld
sbb
mov
out
mov
out
xor
pop
jmp
fstpt
adc
xchg
inc
add
sbb
fstpl
hlt
pop
enter
add
mov
fmuls
or
cmc
test
mov
out
popf
fs
mov
cmpsb
sarl
cmp
adc
xlat
pop
pop
call
fisubrl
add
inc
mov
pop
data16
push
push
cmp
and
add
adc
add
rolb
cmp
data16
cmp
scas
and
shrb
cmpsl
push
push
pusha
stos
dec
xchg
decl
loope
je
nop
jl
popf
popa
and
fdivrs
jo
in
fwait
pop
push
xchg
mov
pop
jb
jns
imul
push
sub
mov
clc
xchg
jge
mov
dec
cld
xchg
mov
stos
insl
leave
dec
in
test
cmp
sbb
mov
push
insl
cmpsl
and
addb
pop
push
cmpb
mull
in
push
inc
jecxz
and
jne
test
cmp
adc
and
or
or
movsb
push
add
add
dec
and
lock
and
cmpsb
inc
mov
pop
aam
mov
xor
push
cmpsb
add
jmp
or
mov
pop
xlat
xor
or
cmp
out
imul
icebp
add
pop
mov
and
xchg
jmp
sbb
fs
sti
cmp
sub
cmp
pop
rolb
mov
mov
lret
jbe
or
movsb
in
movsb
std
repnz
arpl
adc
movsl
pop
das
jnp
pop
lods
imul
lock
shlb
push
lods
push
repnz
or
xchg
push
mov
mov
jle
shlb
shlb
cmp
cmc
push
int
fxch
adc
or
sti
jne
add
add
mov
jmp
into
fdivr
or
pop
or
ror
gs
mov
cltd
or
cwtl
xor
int3
pop
cld
insb
testl
cli
mov
pop
sbb
push
movsl
int3
rol
repz
clc
adc
jae
mov
cmpsl
xor
push
iret
xchg
xchg
jg
into
inc
nop
sahf
leave
mov
push
incl
mov
out
mov
lret
sub
push
pop
pop
fs
pushf
sbb
mov
fucomp
mov
stos
cmp
shlb
inc
and
mov
scas
cltd
xchg
outsl
add
ds
xchg
cs
clc
sub
test
fstpl
pop
sbbl
push
and
mov
xor
pop
daa
insb
sub
push
mov
sbb
xor
imul
push
push
sub
mov
mov
cwtl
cmp
jl
shr
rol
fwait
sub
bound
jmp
imul
push
dec
jne
lahf
adc
lahf
rcrb
iret
aam
out
dec
dec
adc
aas
mov
scas
cmp
cs
add
mov
xchg
repnz
sbb
iret
outsb
daa
daa
out
jge
loopne
push
xor
popf
popf
div
sahf
xchg
cmc
jae
xchg
sbb
mov
mov
xor
stos
sub
mov
xor
push
inc
aas
and
jb
call
lret
xchg
dec
fwait
cmc
in
inc
idivb
fistps
cmpsl
xchg
lret
aam
jne
sbb
in
dec
pushf
lods
fidivrl
adc
imul
iret
push
fists
in
test
pop
test
pop
jp
out
push
dec
mov
lock
sbb
repnz
mov
ret
int3
dec
js
test
stc
xor
mov
cmp
icebp
adc
out
pusha
sub
mov
fmuls
push
lods
mov
in
mov
dec
mov
call
mov
int3
aam
jecxz
sub
dec
xchg
xchg
cwtl
fstl
push
or
dec
xchg
in
jmp
cli
xchg
pop
inc
mov
xchg
mov
pusha
lret
int
mov
in
out
outsb
and
stc
sub
push
lret
clc
in
sub
push
or
adc
mov
js
adc
scas
int
in
es
int
sub
movsb
fsubrs
pop
pop
outsl
lods
jecxz
in
jno
xchg
dec
fisubrl
mov
sub
fsubl
int
pop
sti
jnp
loopne
pop
cmpsl
fcoml
mov
in
test
mov
mov
cmp
in
pushf
testb
iret
bound
cmp
ds
add
mov
mov
or
hlt
sti
out
sarb
mov
inc
dec
pusha
movl
mov
iret
jns
aas
fwait
or
sbb
jns
sub
ja
ja
mov
mov
xchg
adc
jg
fwait
cmp
lcall
mov
imull
rcrl
into
sub
xchg
repnz
out
xor
lcall
test
push
cli
cmp
inc
les
pop
pusha
xor
sti
pop
shl
mov
inc
sbb
ljmp
push
pop
addb
gs
inc
xor
sub
pop
adc
mov
mov
repnz
es
std
shlb
jno
lahf
out
mov
inc
sarb
movsl
lahf
pop
mov
jnp
lods
int
popa
rorl
inc
cmp
dec
xchg
and
fdivr
scas
pusha
sbb
aam
xorl
jp
les
cmp
rolb
sub
into
xor
and
jae
push
rorl
fs
or
xor
sahf
bnd
aas
jns
xor
hlt
pop
xchg
outsb
push
mov
push
sbb
scas
fisubs
sub
insb
adc
lret
lea
inc
loop
lods
mov
jno
cmp
lods
push
cmp
sbb
cld
in
cmpsb
int
adc
dec
mov
scas
aaa
xor
jle
jnp
pusha
lds
mov
into
pop
lock
leave
cmp
pop
mov
movsb
daa
sbb
mov
sub
into
scas
sahf
dec
mov
dec
pop
out
xchg
ds
out
aad
adc
test
or
and
icebp
lahf
mov
pop
ficomps
fdivrl
jg
and
mov
xor
bound
out
push
leave
inc
cltd
dec
add
sub
pop
arpl
pop
mov
jns
insb
xor
in
repnz
cmp
into
dec
mov
pop
ret
mov
fldenv
sub
pop
sub
cs
js
ljmp
cmp
xchg
dec
popa
test
push
scas
push
popa
and
sbb
fsubrs
and
mov
mov
pop
sub
mov
push
fnsave
popa
stos
jecxz
dec
mov
loop
fildll
adc
mov
int
mov
xor
mov
nop
cmp
ret
or
mov
in
test
xor
in
pop
aam
fisttps
sbbl
int3
lret
push
enter
neg
inc
test
inc
jno
push
cmp
xchg
mov
shll
jmp
mov
xchg
cmc
xchg
inc
cltd
sbb
pop
cmpsl
les
divb
shll
ror
pop
int3
inc
mov
icebp
in
mov
dec
cltd
push
lock
cmp
inc
popa
cmp
popa
addl
push
adc
shrb
jno
push
sub
xor
inc
ret
push
push
push
in
inc
dec
pop
dec
inc
inc
adc
mov
cmp
cltd
lret
fs
fcmovnb
mov
cmp
repnz
mov
icebp
test
icebp
push
adc
hlt
movsl
fs
jae
inc
jecxz
or
xchg
aam
fildl
aad
incb
or
scas
rol
xchg
jnp
cli
lcall
int3
sub
test
addl
roll
sahf
fldcw
cmp
std
stos
out
popa
sub
mov
cmp
adc
mov
fxch
add
pop
sbb
adc
fldcw
ja
jle
pop
inc
and
rorl
pop
pop
pop
sarb
cli
sub
arpl
mov
mov
int
inc
test
js
sub
xchg
mov
ljmp
jns
dec
int
iret
xchg
loope
and
or
jl
lods
mov
sub
cmp
pop
and
lahf
int3
stos
push
xor
rorb
xchg
adc
int3
loop
test
jecxz
inc
cmc
enter
dec
sahf
out
aad
shlb
inc
sub
lret
mov
sub
inc
jae
sarb
dec
push
or
xchg
in
jmp
test
testl
jbe
popf
inc
and
inc
rorl
push
ds
xchg
repz
xchg
xor
jnp
inc
xor
mov
xchg
add
lock
push
stos
rcrb
push
aam
add
pop
adc
push
repz
cmpsb
adc
sbb
test
lock
jnp
adc
sub
pusha
cmp
movsl
or
repz
lods
ret
pop
lods
xchg
fimull
fs
jg
sti
test
lahf
arpl
jecxz
js
inc
dec
sbb
push
daa
pop
sbb
aas
je
mov
xchg
aam
push
or
cmp
inc
lods
jmp
addr16
inc
adc
jge
xchg
jbe
push
mov
stc
cmc
in
adc
pop
jge
imul
jnp
dec
pop
repz
in
in
dec
out
adc
dec
fsts
jns
xor
inc
sti
movl
mov
mov
sbb
ss
add
jno
aas
or
ja
fstl
sbb
cmp
ret
je
and
sub
inc
out
out
das
push
imul
xor
adc
mov
mov
test
insl
dec
mov
mov
pop
stos
xchg
fisubrs
cmp
loop
roll
test
jae
push
mov
sbb
or
movsb
scas
xchg
lods
add
fidivrl
jb
xor
push
mov
mov
pop
test
xor
scas
dec
lods
lret
jmp
or
lcall
mov
sub
pop
or
mov
cmp
mov
mov
dec
sub
into
ret
add
daa
adcb
pop
jmp
pop
call
in
mov
cltd
dec
push
jecxz
pushf
out
aas
mov
mov
inc
in
mov
in
gs
inc
sbb
ljmp
push
cmp
pop
jl
outsb
push
scas
dec
push
lcall
dec
bound
sub
leave
jge
push
jnp
jb
lret
ss
lods
jle
jmp
les
push
test
ret
iret
adc
and
push
xchg
add
pusha
or
sub
loope
test
and
mov
test
push
and
in
xor
outsl
mov
jae
pop
cmp
inc
daa
imul
mov
jae
mov
jle
in
cld
sti
mov
and
scas
cmpsl
outsb
and
shr
push
xor
push
ljmp
adc
hlt
push
lahf
lods
in
mov
push
mov
and
lret
hlt
push
xchg
mov
and
mov
movsb
jb
xchg
test
enter
loopne
xchg
or
xchg
movsl
xor
cmc
push
and
shl
ss
cmp
bound
repz
int3
pusha
inc
das
push
and
loope
aas
leave
movsl
cmc
push
stos
adc
pop
jnp
loop
or
cmp
sbb
mov
outsb
push
je
jmp
pusha
sub
dec
ret
pop
or
nop
in
cld
jns
mov
data16
imul
clc
mov
orl
cmp
push
dec
sti
dec
adc
mov
popa
mov
dec
push
push
into
mov
shrb
int3
jp
cmp
js
lock
adc
in
mov
mov
add
jo
jp
cmp
shll
loopne
dec
cmp
adc
fistpl
jl
xor
adc
pop
lods
jbe
ret
lods
xlat
movsl
pop
sarb
decl
ja
shll
sbb
lea
inc
cwtl
dec
imul
popa
sbb
js
hlt
js
fucomi
adc
inc
ret
lods
stos
inc
xchg
shlb
out
hlt
ss
lret
add
cmp
or
std
mov
mov
adc
pop
les
jle
inc
in
pushf
cwtl
jmp
stos
push
xor
aad
lds
fildll
dec
int
mov
and
sbb
in
test
sbb
mov
lock
stos
jge
je
mov
ja,pt
xor
mov
fstpt
add
jne
out
dec
shlb
loope
adc
into
mov
mov
sub
cmpsl
sub
push
jne
mulb
mov
lea
cwtl
push
mov
subl
ja
xchg
in
mov
lods
ljmp
inc
test
push
int3
enter
xchg
clc
mov
ss
jle
inc
or
mov
les
vpshaw
jbe
iret
jge
mov
dec
mov
lods
rolb
aad
test
int
or
inc
lahf
pop
popa
pinsrw
push
pop
and
pop
addr16
cmp
push
mov
xchg
sbb
loop
cmp
je
ficompl
fistpl
outsl
mov
dec
add
add
aaa
mov
scas
scas
stos
dec
imul
fiaddl
mov
jmp
and
push
or
gs
ljmp
ret
vpunpckhbw
cmpb
add
sub
lcall
or
jecxz
mov
scas
fistps
jb
jl
mov
mov
mov
fldt
dec
sbb
inc
movl
pop
into
daa
stc
lock
xor
test
xchg
xchg
bound
xchg
rclb
dec
push
sahf
push
cmp
insb
test
xchg
jno
lret
mov
dec
jl
ret
subb
out
xlat
mov
lret
ljmp
sbb
bound
jecxz
lds
rorb
cmp
xor
daa
hlt
lock
cmpl
sbb
xchg
cmp
pop
icebp
test
mov
mov
push
stos
lds
addb
movsl
les
sahf
gs
shrl
jp
dec
sub
push
sub
inc
outsb
mov
and
std
cmp
lods
stos
and
enter
xor
jg
fcmovb
ds
xlat
orb
pop
inc
cld
jge
jb
or
nop
fisttps
int
sbbb
daa
xchg
mov
aad
dec
mov
int
sub
and
xor
jbe
sbb
xchg
inc
jg
out
xchg
orb
cmp
lret
aas
leave
jp
test
and
push
and
ret
lea
xor
cs
aad
loopne
mov
jno
jp
xchg
dec
jl
fsubrp
stos
cmp
cmovge
sti
mov
movsl
popa
addr16
in
mov
fldenv
sbb
push
cmp
je
jg
popa
pop
pop
jl
jecxz
inc
add
mov
and
pop
pop
add
push
addr16
mov
bound
inc
xchg
ljmp
cld
or
jae
jmp
xor
mov
int3
les
mov
xchg
mov
xor
xchg
dec
scas
mov
dec
dec
cmc
and
mov
jae
jmp
lock
and
iret
pop
shrb
pusha
andl
or
stos
cli
lahf
popf
push
push
jecxz
dec
rcrb
cmc
out
in
pop
jnp
sarb
out
fstp
mov
aas
cs
aaa
mov
lods
inc
loopne
call
push
aam
add
mov
cmpsb
ret
adcl
xchg
int3
test
js
ficoml
mov
repnz
push
fbstp
stos
cmp
jmp
and
push
daa
shll
pop
mov
dec
iret
stos
jae
cmpsl
xor
sti
fadds
cmp
outsb
inc
loopne
sahf
lock
xchg
loop
inc
add
inc
ljmp
repnz
dec
mov
loope
call
cmp
mov
dec
lahf
rorl
into
pop
dec
cwtl
in
xorb
jns
sbb
in
stos
pop
inc
add
jns
mov
mov
insb
icebp
lret
std
stos
mov
dec
xor
jno
ja
adc
sti
cli
cmp
insl
and
out
ja
push
sub
add
push
jo
repnz
pop
xchg
xor
pop
fwait
jge
decl
mov
inc
fidivl
scas
movsb
dec
or
pop
ljmp
test
icebp
or
jns
aam
popa
inc
push
and
fcomi
testl
dec
push
fdivp
mov
leave
jle
iret
mov
int
dec
rcll
outsl
jp
adc
insl
mov
arpl
sub
into
jp
cld
push
cmp
cmpsb
jno
and
and
out
add
enter
cmp
lcall
cmp
stos
jno
loop
nop
mov
ret
addr16
loopne
mov
js
adc
cmpb
stos
add
pop
cmpsl
push
xchg
jmp
sbb
mov
jp
push
icebp
xchg
jge
mov
add
cmp
fs
push
ss
nop
bound
cld
or
sahf
aaa
cmp
call
xor
addr16
scas
stc
out
pop
jg
mov
pop
or
add
test
mov
mov
fsub
bound
fidivl
cmc
lods
sub
cld
mov
mov
sbb
jbe
pop
pop
imul
int
sub
and
mov
rclb
aaa
nop
cli
push
fdivs
das
roll
and
ret
pop
daa
sbb
add
scas
cmp
aaa
and
bound
int
dec
fistpll
rorl
aaa
leave
fwait
scas
xor
or
xlat
bound
stos
jae
or
or
cli
and
xor
dec
ret
mov
mov
bound
mov
push
sbb
aaa
mov
popa
inc
lds
sbb
pop
pextrw
adc
push
imul
out
idivl
or
aaa
imul
ret
adc
out
aam
mov
jne
push
cmp
nop
mov
adc
jae
ret
iret
mov
enter
cltd
stos
or
pop
xchg
loop
push
fcmovb
scas
xchg
cmp
jp
rclb
orl
lea
and
int
adc
mov
xchg
fs
mov
jp
sub
inc
adc
sub
push
in
loopne
sub
sti
push
push
hlt
jl
inc
sub
lahf
gs
out
lea
mov
jle
dec
cmpsl
vsubps
jne
push
mov
or
lds
in
fs
xchg
je
addl
and
lahf
and
int
adc
push
push
push
loopne
mov
fisubs
mov
push
out
ret
mov
sbb
mov
mov
fwait
mov
xor
adc
pop
jno
aaa
leave
das
daa
inc
lret
cmp
sahf
arpl
jmp
adc
push
sbb
std
aas
loopne
push
rorb
jmp
add
mov
out
jns
or
push
jnp
movsb
divb
add
inc
stc
lea
add
into
sub
jne
jmp
lods
lods
imul
xchg
add
pop
lods
lcall
jl
ljmp
aad
adc
jo
push
flds
shll
aas
push
mov
xchg
cmp
pop
push
add
int
mov
pop
andb
mov
jle
repnz
sbb
dec
xchg
add
sub
adc
xchg
dec
adc
push
pop
cmc
clc
dec
or
xchg
cmpsb
call
sub
daa
push
stos
mov
outsb
cli
jp
mov
stc
mov
cmp
xor
out
cmc
inc
aad
jp
mov
decl
icebp
cltd
in
inc
jno
mov
and
les
or
leave
enter
add
mov
jae
mov
sysexit
push
jae
aaa
lods
mov
shlb
and
scas
lea
cmpsl
jp
pop
add
mov
sub
jb
push
jmp
push
stos
repz
dec
pop
mov
dec
sub
mov
adc
test
dec
orl
lods
jle
adc
aaa
push
xchg
shlb
inc
fiadds
lret
adc
add
in
mov
loop
int3
xchg
xchg
mov
fstps
call
ds
movsb
xchg
add
add
xchg
lret
stc
xchg
scas
sub
out
dec
aaa
fdivrs
lcall
add
lcall
shll
dec
inc
mov
or
mov
scas
repz
repnz
aas
mov
and
pop
movl
mov
jmp
stc
cmc
stos
cltd
inc
test
add
add
push
lods
out
in
cmp
loopne
popf
xlat
arpl
mov
push
xchg
dec
push
fcoml
push
loopne
dec
adc
mov
jge
jne
icebp
inc
cli
mov
pop
lahf
mov
and
pusha
adc
out
hlt
sti
jno
ljmp
orl
popa
inc
inc
xorb
sbb
adc
and
mov
js
jnp
mov
jb
push
adc
adc
mov
xchg
cltd
xchg
in
pop
sub
lods
sbb
dec
fiaddl
stos
dec
lret
and
imul
ss
push
mov
jbe
xchg
xor
rcl
pop
mov
mov
addb
out
mov
fwait
lods
jmp
dec
out
fildll
out
inc
xchg
ret
testb
sub
iret
sbb
dec
jg
imul
pop
mov
xor
sub
lods
mov
enter
seto
mov
push
pop
and
and
push
jae
roll
fisttpll
push
or
test
xchg
mov
pushf
imul
push
jecxz
stos
test
or
adc
jns
andb
push
test
popf
pushf
xchg
add
mov
fimull
dec
xchg
mov
inc
or
sbb
mov
xor
mov
je
mov
inc
jle
jge
pop
scas
sub
push
es
jns
sahf
aaa
fidivrl
stc
sbb
fwait
cli
fnstsw
xchg
jno
push
ret
and
fs
cltd
or
and
xor
insl
and
add
mov
sbb
dec
insl
jns
out
movsl
das
gs
add
hlt
mov
jecxz
mov
shll
sub
fdivrl
testl
sub
jb
inc
push
jno
dec
cmp
jne
sub
lods
in
cmp
pop
test
mov
add
sub
insb
or
frstor
bound
sbb
ficoms
shlb
lret
mov
subb
aam
aad
xor
adcl
or
mov
sbb
arpl
fsubl
push
mov
or
push
jo
mov
adc
loopne
jl
mov
bound
scas
les
int
xorl
adc
movsb
aam
xor
sub
jmp
cmc
or
test
ljmp
rcrl
clc
inc
bound
push
lock
mov
dec
jae
jp,pn
fildl
pop
mov
mov
fs
js
pop
mov
mov
data16
add
and
push
sub
sub
outsl
inc
inc
aad
push
mov
xor
xor
pop
aaa
inc
xlat
mov
outsl
pop
mov
sbb
mov
sub
and
add
cmc
das
add
xor
xor
or
xchg
rorl
movsl
jb
je
mov
cmpsl
in
imul
test
xor
sub
in
mov
and
and
loopne
or
pop
and
int
jl
leave
cmp
jae
sahf
jno
inc
lods
mov
add
std
jne
fimull
fsts
xor
in
jmp
lahf
pop
xor
fwait
imul
in
sub
in
adc
std
pop
jbe
push
or
pop
mov
dec
or
and
stos
xchg
subl
or
xchg
mov
inc
addr16
xor
xchg
sub
mov
les
mov
xlat
push
out
push
pop
mov
adc
mov
mov
lret
sub
and
cmp
pop
daa
adcb
stos
pop
movsl
nop
mov
movsl
enter
addb
xchg
pop
add
lret
ss
fstp
test
jns
enter
cli
adc
mov
test
cli
mov
push
mov
sub
cmpsb
push
mov
pop
fcomi
dec
iret
mov
inc
add
dec
push
dec
add
push
pop
insl
pop
pop
movsl
lds
or
out
and
lods
cld
pop
lods
mov
cmp
fdivl
dec
stos
inc
push
dec
sub
in
jae
std
xchg
fisubrs
dec
pop
jp
fsts
sub
dec
dec
xchg
rcll
adc
inc
adc
mov
shrl
insl
and
or
mov
cmp
outsb
decl
jne
fs
popf
dec
pop
sub
cmpsl
fstpl
das
lods
repz
jmp
cmp
jge
pop
sub
ljmp
dec
or
pop
jno
sub
ja
adc
adc
pop
je
pop
imul
mov
jecxz
subb
lea
push
andl
dec
stos
iret
js
push
adc
add
into
shll
sahf
lsl
in
aad
repz
into
jb
in
ret
lret
outsb
adc
adc
adc
int3
sbb
std
xor
push
or
imul
inc
or
fisubl
and
add
nop
sbb
jnp
adc
das
xlat
jbe
aaa
bound
div
je
add
ja
sbb
mov
mov
dec
cld
roll
cmp
test
fildll
int
aaa
xchg
icebp
dec
xchg
aam
je
xor
sub
imul
sbb
shlb
in
sub
cmp
nop
sub
hlt
pop
mov
ds
and
jl
popf
adc
mov
ret
test
jmp
add
and
repnz
jbe
pop
cmp
std
pop
das
cs
jae
or
out
int3
add
add
lret
out
scas
or
psubd
nop
rcrb
and
push
mov
loopne
aam
push
and
in
inc
movsl
int
repnz
xchg
loope
jb
push
dec
pop
xchg
sbb
add
mov
insl
je
lds
mov
loope
dec
call
mov
movsl
jp
cmpsl
mov
call
sub
fadd
cli
std
inc
dec
lods
rcrb
mov
dec
int3
jae
shr
icebp
pop
push
lcall
bound
push
je
mov
shlb
and
enter
pop
pusha
stos
push
mov
sub
mov
fcompl
cwtl
jno
cmpsb
xchg
cs
jmp
xchg
lea
mov
xchg
sbb
pop
sbb
mov
mulb
jge
sbb
cmpsb
std
bound
pop
shrl
lcall
cmp
sbb
or
loope
lods
mov
insb
loop
popa
cmp
sub
rclb
inc
ret
hlt
xchg
mov
scas
insl
push
xchg
jge
inc
inc
mov
repnz
inc
dec
jnp
sarl
loop
pop
or
adc
pop
les
mulb
and
mov
das
mov
dec
xorb
movsl
or
popf
cmp
xchg
mov
cmp
pop
pop
test
pop
gs
mov
mov
cmp
insb
aam
adc
sbb
sti
adc
loope
and
gs
outsl
insl
push
pusha
inc
sub
pop
sub
xchg
add
movsl
stc
push
xchg
xchg
push
jno
daa
mov
dec
bound
mov
push
add
lea
lahf
xchg
sbb
lods
add
sahf
mov
lret
dec
in
mov
lods
clc
sub
fsubrl
push
adc
mov
pop
or
insl
sub
cmpb
push
cmp
sahf
ret
jno
adc
jle
dec
inc
jecxz
mov
rcll
sbb
aam
aam
cld
lcall
inc
adc
sub
mov
js
push
push
sub
jle
dec
sti
push
jl
int3
imul
and
xor
pop
dec
push
hlt
add
mov
pop
pop
std
push
mov
out
frstor
lods
xor
loop
test
xchg
and
xor
lock
sub
mov
cmp
cmp
insb
cwtl
sub
hlt
jno
xor
mov
jae
iret
insl
sbb
hlt
sub
jecxz
inc
mov
jb
cs
pop
stc
jbe
subb
mov
out
shl
nop
loope
sub
testb
and
outsl
push
ficomps
dec
add
and
jecxz
outsb
orl
rcrb
pop
jae
jns
sub
sbb
mov
pop
add
sbb
adc
xchg
mov
mov
rcrb
test
mov
iret
stos
xor
lods
pushf
add
add
ret
sahf
dec
pop
out
xchg
mov
jae
sbb
mov
lahf
outsb
push
inc
inc
dec
mov
fimuls
cwtl
dec
daa
cmp
dec
xchg
sbb
dec
inc
cmpsl
lods
jbe
icebp
dec
aaa
sub
fs
jecxz
repnz
mov
aaa
roll
filds
cmc
jl
add
inc
test
pop
stos
jae
ja
push
lret
and
mov
mull
fwait
outsb
push
mov
or
xor
push
sbb
ja
test
aas
push
and
daa
push
xchg
enter
push
mov
xchg
add
add
nopl
fisubrs
clc
ja
arpl
or
mov
xor
inc
test
pop
pusha
and
sbb
test
pop
lock
cmp
or
push
inc
mov
int3
dec
dec
adc
mov
in
filds
fs
fldcw
push
fisttpll
bound
inc
not
mov
cmp
cmp
ss
mov
int
fwait
or
idivl
or
mov
xor
fildll
ss
popa
push
pop
jle
shrl
lret
mov
lcall
or
lcall
add
test
repnz
notb
movsb
mov
dec
movsl
push
cmc
pop
cli
mov
sbb
hlt
sub
mov
dec
notb
aas
pop
fsubrs
pop
std
bound
mov
clc
ds
push
je
nop
push
les
cmp
imul
insl
aaa
jbe
fwait
add
lods
add
int
adc
decl
das
xor
addb
pop
xor
out
arpl
hlt
es
rorb
push
in
ljmp
loope
push
pop
adc
mov
push
outsl
mov
lcall
jne
and
lods
inc
dec
pop
shll
call
cmp
int3
addr16
mov
faddl
lcall
add
cld
jp
out
dec
punpckhdq
pop
mov
pop
xor
xor
pop
ficoms
data16
push
dec
xchg
sbb
or
insl
mov
fdiv
and
stc
cld
pop
cmpsb
inc
or
pop
sbb
push
iret
jp
nop
cmp
jp
rclb
rcl
icebp
rcr
shrb
shrb
fs
popa
insb
aaa
cmp
sub
push
mov
lret
push
jno
shlb
inc
into
ret
test
nop
xor
lret
stos
jp
aas
int
lret
mov
mov
xchg
adc
ja
rolb
movsb
add
and
in
sub
jns
and
ficoms
mov
cltd
sarb
popf
lods
pop
outsb
lahf
out
lahf
rolb
jae
jmp
aam
pop
sbb
fs
sbb
jl
mov
shlb
or
gs
lret
jbe
add
push
lahf
insb
xor
sarl
loop
test
out
mov
or
or
inc
vmwrite
jne
ret
pop
xor
dec
nop
addr16
movsb
xchg
in
push
add
rcrb
push
push
and
lret
sbb
inc
mov
enter
push
insl
pop
inc
adc
popa
rol
in
fs
mov
jge
or
popa
dec
in
xchg
je
or
add
push
fwait
pop
mov
pop
cmp
inc
lret
xor
adc
lock
mov
scas
adc
cmpl
out
movsl
out
cmpsl
insl
push
push
mov
psllq
xchg
cmp
jg
imul
in
stc
lcall
xchg
test
mov
test
push
pop
bound
enter
mov
icebp
pop
in
orl
mov
mov
jmp
js
cmp
sbb
in
cmp
cmp
decl
sbb
add
pop
sbb
inc
lods
mov
insl
outsb
test
push
xchg
or
ficoml
or
in
nop
insb
sub
sub
sbb
je
adc
push
sbb
jge
xchg
xor
scas
jo
jge
mull
or
in
push
pop
push
loop
and
outsb
sub
stos
cli
gs
hlt
mov
or
jno
cli
push
jp
jmp
jns
jecxz
mov
je
push
add
push
sub
lcall
xor
jb
insb
fld1
lock
and
ljmp
jecxz
ss
out
int3
loop
pusha
pop
mov
cli
roll
addr16
test
movsl
mov
sub
mov
stc
mov
sbb
dec
mov
cmp
ret
mov
popa
xchg
sti
repz
enter
xor
jbe
push
cli
dec
out
lret
enter
enter
aas
adc
das
xchg
xchg
subb
dec
movsl
stos
push
sub
xchg
and
dec
dec
aaa
std
jmp
movl
jle
lret
loopne
jp
adc
dec
inc
aam
icebp
sub
push
ss
cld
les
mov
repnz
test
movsl
or
js
sub
pop
push
lret
ds
repz
movsb
mov
flds
xlat
mov
or
push
adc
loopne
pop
jmp
outsl
inc
dec
popf
xchg
mov
cmp
push
sbb
pop
adc
or
subb
xor
cmc
xchg
data16
movsl
mov
and
aaa
pop
pop
outsb
add
pop
push
jle
bound
cmpsl
fld
or
gs
cmp
arpl
lret
cmp
nop
add
push
jecxz
test
in
loope
fnsave
jmp
inc
pop
lret
ja
add
jb
and
iret
mov
mov
jg
mov
push
xchg
fidivrl
or
popa
aam
ds
inc
add
out
cmp
fnclex
mov
enter
and
sub
jbe
std
cmp
xchg
leave
subl
fwait
and
sub
in
call
sub
dec
xor
fnstsw
fidivrs
xor
int3
pop
shr
sahf
cmpsb
sbb
std
es
xor
cli
jge
add
fs
icebp
sti
pop
in
nop
jo
ljmp
adc
sub
lods
fildl
ds
mov
sahf
add
mov
mov
gs
cltd
jno
adc
pop
mov
roll
add
mov
pop
dec
pop
xor
cmp
xlat
dec
mov
daa
mov
mov
inc
repz
lods
movsl
ret
repz
mov
or
add
pop
js
sbb
or
outsl
dec
xlat
inc
in
adc
je
mov
jb
add
xchg
lock
out
push
movsl
test
cmp
xlat
add
add
out
push
jg
cli
jl
in
push
mov
into
or
and
pop
js
aad
and
jo
je
mov
jne
xor
lods
dec
inc
dec
adc
clc
icebp
mov
out
mov
add
loopne
mov
hlt
xchg
out
jbe
lret
jnp
in
inc
lock
and
aam
aad
cltd
pusha
enter
ds
jae
jo
aas
xlat
rorl
sarb
inc
push
hlt
test
repnz
aad
dec
or
push
fcmovne
xor
lea
int
mov
cltd
iret
sti
test
xchg
stc
xchg
xchg
mov
loope
mov
into
sub
fsubrs
jmp
js
mov
sbb
inc
jl
rcl
mov
dec
pop
mov
sahf
lcall
popf
addb
das
mov
mov
or
nop/reserved
stc
scas
adc
outsl
out
loope
jp
jnp
dec
ljmp
or
enter
cmc
cmpsb
xlat
jne
out
jp
sahf
inc
roll
dec
stc
popf
mov
add
mov
sub
sbb
test
dec
dec
xor
test
sbb
fcompl
pop
add
arpl
lods
push
push
cmp
jl
int3
loopne
sarl
sbb
add
inc
aaa
lods
inc
ficomps
mov
pushf
mov
nop
adc
xchg
notl
fst
cmpsl
jg
stc
or
in
sub
pop
scas
xchg
dec
mov
adc
dec
add
inc
mov
mov
sbb
push
jmp
jb
out
in
jge
mov
inc
mov
hlt
fsubrs
scas
mov
cmp
xchg
sahf
jb
into
aas
call
dec
push
lahf
inc
xor
xchg
es
push
fmull
pusha
in
inc
in
push
or
pop
or
pop
fmull
or
push
pop
jmp
loopne
fmuls
push
pop
add
scas
pop
clc
pusha
dec
dec
pop
data16
xor
or
inc
or
cltd
std
aas
add
out
sbb
xlat
add
data16
lock
in
xchg
adc
cmp
push
ret
jnp
push
jecxz
rorl
cmp
lret
out
cmp
out
and
pop
push
mov
xchg
les
das
mov
repnz
inc
adc
dec
ljmp
les
adc
call
xchg
outsl
adc
push
mov
rclb
cmp
jne
push
cmp
and
insb
out
pop
mov
inc
push
insl
popf
test
or
adc
adc
push
insl
imul
sarl
out
fcomps
jno
iret
popf
jge
pushw
push
or
xchg
not
mov
dec
stos
arpl
imul
aam
hlt
aam
xor
insl
faddp
xchg
scas
mov
ja
imul
lods
jge
xor
jg
movsb
leave
mov
sbbl
imul
lea
jl
rcl
leave
jo
inc
mov
inc
adc
test
or
mov
shrb
mov
adc
mov
adc
pop
mov
xchg
adc
iret
into
adc
jb
ss
popf
jecxz
or
int
mov
adc
dec
imul
into
cli
lret
add
mov
mov
loop
inc
mov
push
test
and
sub
cmc
push
ret
fisttpl
stos
sahf
jns
iret
add
push
lock
out
xorb
add
fwait
sbb
mov
sbb
ja
cmp
and
pop
out
gs
faddl
roll
xorb
xor
dec
push
je
loope
mov
adc
addl
mov
push
and
stc
movsl
xor
je
sbb
lds
aaa
xor
cmp
push
scas
loopne
add
insl
repz
leave
repz
lahf
jmp
and
mov
out
sbb
sub
xchg
insl
dec
sahf
cmp
xor
mov
cmpl
fmull
push
lea
popa
jge
addr16
repnz
jecxz
cltd
lret
lea
in
xor
test
jmp
scas
movsb
push
add
push
clc
xorb
insb
test
or
cmpsl
movsb
sti
or
pop
mov
xlat
aas
jo
lret
pop
in
push
fsubl
mov
movsl
cmp
out
loopne
xor
in
stos
cmp
stos
inc
repnz
ljmp
ret
es
ljmp
test
dec
out
mov
cmpsb
hlt
out
in
stc
jmp
fwait
mov
and
out
add
and
lock
inc
aam
cmp
lcall
pop
sub
int3
mov
stc
mov
dec
pop
dec
adc
ja
push
cltd
jle
int3
decw
xchg
ret
je
adc
mov
cmp
push
push
leave
lds
scas
cmpsl
dec
enter
loopne
es
or
push
lods
cwtl
cmp
loopne
lods
push
mov
decl
stc
add
jnp
cmp
dec
or
add
xor
imul
imul
sub
mov
or
mov
gs
fwait
aam
imul
fsubs
movsb
and
inc
push
jp
sub
or
sbb
sahf
xor
sbb
ljmp
pushf
loope
aas
test
push
cmc
stc
fwait
jb
inc
out
ret
lcall
aad
push
inc
leave
cmp
inc
sbb
inc
mov
cmp
jg
inc
movsl
sar
daa
popa
adcb
mov
out
adc
mov
testb
mov
inc
xchg
andb
push
lret
inc
adc
loop
jbe
dec
lret
xor
adcl
mov
aas
cltd
push
shrd
pop
rorl
xchg
cmpb
cmp
fnstenv
out
and
inc
ret
cmpsb
out
cmpsl
inc
ret
or
and
add
mov
mov
jb
mov
lret
dec
xor
or
xor
jecxz
sub
loop
lcall
jno
cmp
in
adc
adc
cld
push
inc
imul
movsl
ret
lahf
sub
jae
push
bound
test
xchg
cli
xchg
dec
mov
pop
hlt
add
test
je
mov
lcall
cmp
out
mov
rclb
cmp
push
cmpsb
in
pop
pop
stos
in
dec
in
sub
mov
cmpsb
xor
loope
cmp
mov
aas
xor
pop
data16
add
dec
mov
mov
and
mov
mov
stc
lds
and
sarb
or
std
push
inc
pop
and
ljmp
repnz
loopne
xor
stc
xchg
jo
cmpsb
pushf
lds
jae
sub
aad
inc
imul
lea
or
jns,pn
mov
mov
mov
outsb
pop
jecxz
js
mov
lods
xchg
inc
scas
mov
inc
lods
pop
push
pushf
ss
test
divb
aas
fs
aad
insb
mov
mov
fnstenv
mov
and
inc
mov
rclb
lret
out
xor
nop
outsb
sub
xchg
out
adc
dec
and
sbb
add
popf
adc
push
notl
lds
stos
loope
icebp
in
push
test
sbb
rcl
mov
mov
push
sti
pop
jecxz
xchg
loope
cmp
xor
hlt
inc
cmp
stc
sbb
push
arpl
ret
adc
loopne
insb
mov
jno
aad
out
lret
ss
pop
js
jl
and
xlat
mov
sub
xor
add
sub
sahf
lds
mov
xchg
sbb
pop
and
xchg
sub
cmp
std
popa
loop
adc
movsl
push
push
lock
test
dec
adc
andl
test
mov
outsb
dec
add
mov
lds
sar
sub
push
loop
ja
rolb
add
sbb
xchg
mov
or
rorl
jmp
rcr
insl
mov
cmp
in
and
jp
push
cmp
push
adc
test
aam
and
mov
mov
das
mov
inc
pusha
jne
xchg
cmp
xchg
mov
jae
sbb
imul
sti
insb
inc
sbb
test
ret
push
loop
sahf
iret
call
sarl
push
fdivrs
pop
pop
jg
aas
push
iret
adc
hlt
or
adc
shll
movl
mov
bound
repnz
mov
bound
dec
nop
movsl
adc
jp
mov
mov
xor
addl
jmp
nop
sbb
fwait
xor
jecxz
cmp
rorl
aaa
xchg
inc
and
lock
mov
xchg
push
and
in
push
mov
dec
call
clc
add
adc
add
add
or
lcall
fnstcw
mov
addr16
push
inc
add
mov
icebp
inc
lock
xchg
xlat
and
insl
jp
mov
sbb
inc
mov
and
mov
sbb
test
dec
addr16
enter
stos
imul
sbb
ja
pusha
mov
jbe
xchg
push
mov
pop
push
bound
sub
cmpsb
mov
in
adc
or
jb
jns
addr16
jno
inc
jnp
inc
pop
sbb
jbe
call
stos
aad
fldt
sbb
outsb
mov
mov
jmp
ljmp
aas
dec
or
sahf
jns
pop
cld
jecxz
sbb
jp
std
fisubs
mov
imul
mov
xor
inc
push
in
jge
dec
fstpl
mov
pop
cmp
inc
jae
minps
xchg
shlb
fwait
lea
iret
mov
push
dec
stc
mov
or
insl
in
sub
inc
icebp
loopne
fldcw
loopne
ret
clc
jl,pt
lea
mov
stos
insb
pop
cmpb
loop
or
jg
push
or
dec
daa
sbb
mov
dec
aad
and
pop
sub
aaa
jecxz
scas
icebp
push
jmp
sbb
gs
mov
imull
clc
adc
adc
insl
sub
aam
in
mov
sbb
pop
imul
scas
rorl
cltd
scas
cwtl
cwtl
sahf
and
outsl
xchg
cs
fistpl
push
lock
cmp
cmc
mov
cmpsl
jns
xchg
mov
lea
dec
lahf
jno
mov
out
inc
stos
and
lods
mov
mov
sub
je
daa
xchg
sbb
jecxz
adc
cmp
cmpsb
mov
push
add
sub
inc
add
ja
icebp
and
lods
daa
xchg
cmp
das
mov
or
leave
mov
mov
xor
mov
jecxz
sbb
mov
mov
loop
daa
cmpsb
pop
or
outsb
xchg
xchg
lods
dec
mov
pop
ja
daa
out
jle
mov
inc
sub
sub
in
test
mov
pop
pop
pop
sub
and
mov
cmp
imul
imulb
int
sub
cmp
inc
sbb
adc
loop
sbbl
adc
add
sub
adc
xchg
mov
dec
xchg
and
adc
or
inc
int3
or
out
test
stos
xchg
push
js
jp
cli
inc
and
sub
cld
jge
enter
loopne
xchg
jno
pushf
test
outsb
xchg
mov
mov
addr16
ljmp
in
push
mov
sub
stos
mov
cmp
andb
xchg
iret
fsubp
pop
dec
inc
sbb
dec
pop
adc
jle
push
fisubl
sub
repz
and
jbe
mov
xchg
mov
in
inc
add
adc
jmp
scas
or
cmp
add
testl
leave
adc
movsl
sbb
daa
orb
sub
bound
mov
in
jle
jl
outsb
lods
add
and
mov
loopne
adc
adc
fadd
outsl
call
xchg
mov
popf
xor
sbb
mov
xor
jge
dec
es
daa
and
cli
lods
jb
dec
jl
test
fisttps
iret
pushf
push
shr
cmp
fwait
cmpsl
push
je
fneni(8087
and
cmp
inc
test
out
cmovnp
mov
ret
arpl
dec
repz
fwait
movsb
dec
js
adc
ficomps
mov
xlat
pop
pop
shl
popa
push
xor
push
test
sti
dec
leave
pop
pop
xchg
sub
iret
shl
mov
fdivp
fisttpll
mov
loop
and
mov
pop
loope
and
push
sbb
les
icebp
fcoms
pop
mov
dec
jecxz
out
insl
jmp
inc
jno
jb
popa
lock
push
mov
int
ljmp
inc
mov
enter
out
xor
mov
sub
xchg
add
and
lcall
and
rclb
mov
pop
fucomp
jbe
fwait
mov
test
dec
push
addr16
jb
fnstsw
mov
lahf
mov
lods
leave
mov
fiaddl
lods
dec
push
nop
lret
pusha
add
add
sub
inc
jle
mov
mov
jle
push
jle
push
add
add
push
sub
adc
or
inc
adc
cmp
sbb
decl
lods
or
sub
mov
adc
call
ret
in
xchg
mov
fs
adc
add
or
push
sub
jg
inc
and
or
add
enter
testl
adc
cmp
es
or
movsl
and
imul
sbb
lds
mov
or
stos
shll
pop
rorb
out
arpl
pop
mov
aas
push
lret
repz
jge
test
clc
xor
cmp
inc
sub
dec
or
mov
imul
jne
adc
xchg
insb
inc
pop
mov
xchg
insl
cwtl
mov
out
add
pusha
loopne
outsl
ret
jecxz
jp
and
inc
iret
sbb
and
sahf
push
xlat
stc
and
mov
hlt
lcall
pop
push
out
stos
es
out
lock
mov
shrl
mov
ret
aaa
add
out
or
in
sub
loopne
xor
lds
adc
movsl
shlb
push
incl
or
or
mov
cwtl
sbb
pushl
jbe,pn
xor
addr16
sbb
std
xchg
push
aaa
ret
adc
fnstsw
gs
mov
leave
xchg
stc
jmp
in
pop
sahf
cli
xchg
add
jae
inc
jns
fadds
in
mov
mov
jmp
push
flds
mov
int3
xchg
jl
push
adc
mov
and
sahf
xchg
mov
xor
imul
sahf
xorl
jae
xor
or
shrb
ret
xor
xor
fisttpll
je
stc
in
mov
nop
ljmp
stc
bound
jns
sub
xchg
mov
cmp
rolb
in
call
mov
mov
inc
mov
sub
and
push
int3
sti
fsubl
mov
movsl
repz
bound
mov
shlb
xchg
iret
dec
dec
lods
add
xchg
pop
outsb
cmc
xor
lea
jge
mov
pcmpeqd
mov
rorl
dec
scas
pop
push
fldenv
sub
stc
and
pavgw
mov
jmp
xchg
xlat
in
xchg
push
orb
or
daa
jle
cmpb
popf
movsb
clc
iret
xor
outsb
inc
jp
sbb
ljmp
into
jg
lret
mov
add
imull
fsubrs
inc
xchg
jbe
sbb
in
test
lods
xchg
std
jg
cmpsl
test
xchg
inc
dec
lods
push
pusha
sub
adcl
lcall
cmp
push
mov
mov
outsl
add
ret
or
push
in
out
mov
dec
loopne
loop
out
in
push
xchg
loop
xchg
mov
int
out
into
inc
in
mov
xchg
fnsave
dec
pusha
xchg
scas
jne
xor
xor
add
inc
or
test
dec
sbb
jo
jo
int
mov
and
and
inc
dec
sub
pop
je
xchg
mov
jmp
lods
jbe
adc
jge
out
leave
lahf
mov
fwait
pop
mov
arpl
mov
mov
pop
push
enter
push
int
xchg
ja
pop
pop
mov
lret
ljmp
or
aaa
lret
jno
or
or
xlat
repnz
int3
xchg
clc
adc
orb
dec
pop
jg
fidivs
jae
push
int3
jns
jl
xor
xor
cmp
jo
jne
xchg
bound
mov
mov
jp
xor
sar
inc
cmp
push
lock
scas
mov
add
mov
popa
rcll
test
add
cmp
lret
test
cmp
adc
sub
andl
push
sar
imul
fdivp
pop
xor
loope
push
dec
cwtl
sbb
sbb
pop
push
add
add
stc
jbe
and
pusha
dec
les
into
aad
lret
ficoml
cmpsl
enter
roll
dec
clc
and
or
pop
stc
cmc
addr16
sbb
mov
sub
mov
jp
mov
in
jmp
and
push
pop
push
and
sbb
popf
leave
pop
sbb
mov
enter
fs
sub
xor
xor
push
in
mov
push
ja
cmp
ds
dec
and
mov
je
add
aad
add
inc
in
jno
cmpb
cltd
sub
mov
and
sub
sbb
xorl
sahf
and
out
idivb
cmpsb
push
out
mov
pop
add
add
shl
cwtl
pop
test
pop
cmp
xor
or
push
jle
xor
push
cmp
les
xor
inc
push
mov
mov
push
cli
dec
inc
push
scas
sbb
or
mov
push
in
es
out
out
cmp
ja
enter
sub
inc
add
jmp
rcr
decl
daa
mov
mov
pop
popa
dec
add
push
outsb
test
mov
dec
fists
inc
xchg
das
jl
pop
and
xor
inc
xchg
xlat
xlat
ret
xlat
sbb
sbb
fsubl
pop
sbbl
cmpsl
popf
xor
jge
and
cmpsb
jg
pop
lds
enter
jbe
lods
lods
jmp
xchg
repz
sub
jecxz
inc
and
pop
mov
add
js
mov
push
fwait
cmp
xchg
push
mov
jg
mov
sbb
decl
psubusb
shr
pop
mov
xchg
cmp
and
inc
pop
cmp
nop
mov
xor
jecxz
test
stos
jle
sub
push
sbb
add
ja
fimuls
add
pop
jmp
scas
notl
loop
leave
add
pusha
lods
pop
sbb
jo
push
std
adc
stos
inc
xor
push
mov
lds
push
xor
adc
sbb
xchg
fs
cli
adc
lock
push
mov
gs
test
push
sbb
jp
jp
imul
bound
insl
adc
test
xor
ja
addr16
aad
ret
jne
enter
push
mov
xor
inc
adc
jge
cld
fistl
jnp
stos
enter
inc
mov
xchg
movsb
lods
outsb
pop
xor
cmp
stos
pop
mov
pop
inc
loope
cmc
loope
push
lds
mov
stc
in
ror
call
add
xorb
pusha
jns
adc
cmc
dec
xchg
lcall
bound
or
lods
lcall
pop
mov
xchg
clc
cmc
lock
clc
fucom
mov
xchg
and
nop
lahf
sarb
fdivl
xchg
shll
sub
ja
imul
fwait
and
jb
mov
dec
mov
rcrb
cmpsl
sub
cli
out
insl
xor
sbb
aas
lds
sub
jg
arpl
jbe
popa
cltd
insl
mov
out
popf
jnp
mov
dec
fldenv
xchg
cli
sub
pop
sbb
pusha
sbb
iret
xchg
int
xor
and
jb
test
jle
ret
aad
inc
inc
stos
jl
dec
push
orb
and
icebp
mov
xchg
mov
cmc
or
adc
add
les
clc
jecxz
xchg
je
dec
in
push
jmp
push
adcb
lcall
jecxz
pop
scas
jae
jmp
sar
stos
mov
test
scas
ss
push
outsl
cmpsb
sbb
xbegin
fcomi
cmp
inc
fisttpl
mov
push
mov
sub
jge
pavgw
aam
dec
pop
xchg
and
cli
cmpsl
jno
in
in
lock
fidivl
pop
adc
stos
stc
divl
and
jnp
std
cmc
mov
je
mov
rorl
xor
mov
fdivrl
and
popa
sub
pop
pop
mov
xor
add
aas
jns
push
dec
and
mov
xor
movsl
jge
jo
jb
fiaddl
aas
mov
mov
sbb
sbb
push
sbb
dec
test
daa
mov
jmp
iret
pusha
pop
scas
gs
scas
dec
push
sbb
dec
and
xor
cmp
into
das
loop
sarb
outsl
or
xchg
aas
lea
lretw
test
in
mov
mov
inc
jge
adc
sub
cltd
test
out
fwait
push
inc
add
bound
inc
je
lock
dec
jbe
sub
mov
or
mov
jp
adc
js
jne
or
das
jg
stc
das
xchg
xchg
pop
scas
mov
ss
pushf
cmpsb
mov
and
lahf
jmp
imull
icebp
cmp
mov
xchg
push
out
xchg
aad
sub
jb
inc
bound
cmp
mov
scas
imul
rcll
pop
rcll
out
push
xchg
mov
out
fisubrl
xor
and
xchg
xor
dec
mov
movd
cmp
xchg
icebp
inc
ret
pop
dec
rep
mov
pop
es
popa
iret
or
cli
test
mov
xor
cmpsl
inc
sti
shll
cmpsl
fldt
js
mov
scas
cld
push
dec
pushf
lahf
xor
insb
inc
cmp
inc
push
iret
sub
push
pushf
shlb
inc
mov
jl
stc
or
movsb
insb
int
movsb
lock
cmp
in
mov
sub
hlt
add
push
lock
repz
test
mov
dec
and
pusha
cltd
iret
stc
jo
sub
add
and
cs
test
xchg
mov
mov
push
jg
mov
push
mov
subl
andb
mov
xchg
mov
adc
xchg
push
js
jmp
pop
jns
jp
xor
cmp
xchg
jmp
xchg
leave
gs
sahf
cmp
mov
lahf
js
sub
mov
popf
xor
sbb
mov
loope
push
aaa
xor
jp
outsl
push
and
aad
cli
mov
stc
pusha
push
cmpsb
sbbl
or
pop
inc
fstps
jp
push
inc
loopne
and
cmp
push
pop
sbb
test
add
lret
xlat
cmpsl
and
pop
ret
call
pop
fcomps
fsubr
mov
and
jnp
jl
js
inc
xchg
rorl
add
daa
sbb
ljmp
lods
call
mov
rcr
ljmp
or
fiadds
sbbl
lods
frstor
sub
sbb
out
xor
adc
lods
bound
inc
pop
cli
inc
int
jle
jg
popf
push
ljmp
sbb
rcrl
cmp
mov
mov
cmp
xorb
lock
test
add
pop
fs
cld
gs
pop
negb
xchg
sub
mov
popa
cmp
popl
cmpsl
or
mov
lret
inc
jecxz
sbbb
pusha
sahf
sarl
pop
mov
push
lret
or
pushf
adc
loopne
or
rcrl
cmp
lcall
leave
lock
pop
scas
lcall
cli
xchg
sahf
stos
iret
mov
adc
xor
daa
pop
xchg
mov
push
mov
pop
or
cli
pop
fsubl
lcall
sub
rol
shlb
xor
mov
inc
in
lret
shll
sub
popa
and
mov
push
cmp
iret
dec
pusha
push
sbb
add
xchg
mov
aad
repnz
mov
mov
push
or
jecxz
lods
rorb
jle
clc
je
lock
add
movl
push
iret
jb
xor
mov
adc
mov
pushf
xor
adc
das
mov
push
cmp
cltd
adc
hlt
mov
or
aaa
cmp
fldt
sub
xor
or
daa
aaa
fidivrs
jb
test
inc
xlat
pushf
add
ljmp
movsb
mov
xor
pop
push
pop
cmp
mov
fsubs
stos
push
pusha
leave
cmp
pop
adc
mov
clc
xorb
sub
push
rcll
stos
dec
and
jne
pop
jae
xor
iret
imul
add
fiaddl
enter
loop
test
mov
jnp
cmc
test
pusha
popf
push
jae
xor
mulb
fimull
lcall
dec
fnstsw
and
repnz
call
xchg
lea
out
in
sbb
push
nop
pop
cmp
es
cltd
bound
lea
jecxz
out
ret
mov
fildl
lcall
mov
sub
pop
ret
mov
iret
xchg
inc
jne
adcb
rcl
sub
in
test
stos
add
call
popf
mov
ja
and
or
pop
pop
jg
loopne
jge
addl
sub
adc
scas
mov
rcl
pop
adc
xchg
leave
pop
fwait
cmc
add
pop
inc
pop
mov
jo
push
cld
push
sub
push
and
scas
repz
je
rorb
xchg
arpl
mov
xlat
or
xor
jnp
mov
popa
stc
cmpsb
pop
cmp
dec
xor
pushf
or
and
adc
das
ficoms
pop
movsl
leave
inc
cmpsl
pop
scas
pop
out
sub
aas
jmp
call
scas
cmc
sbb
sub
hlt
dec
mov
inc
inc
out
sub
add
mov
sub
lcall
jl
jl
jle
and
push
cmp
cmp
xchg
push
pop
pop
pop
fisttpl
sahf
dec
popa
sub
scas
fcmovnu
test
jns
in
sbb
and
lahf
insb
pop
push
or
shl
fldcw
roll
mov
cld
mov
add
rcll
sbb
xor
in
fidivrs
sbb
jp
add
call
lcall
bound
inc
pop
jbe
addr16
aam
push
cld
addl
outsl
add
fstps
mov
mov
int3
mov
sarl
or
inc
fisttpll
push
orb
test
stos
mov
inc
loope
out
outsb
in
insb
mov
and
aam
pop
loopne
sbb
lea
pusha
jno
mov
xor
cmpsb
imull
out
cmc
aad
sbb
adc
mov
jmp
mov
pop
sbb
cmpb
rcl
mov
or
sti
ror
mov
imul
mov
add
scas
fnsave
push
in
outsb
pop
sti
xchg
mov
ljmp
pmulhuw
xor
pushf
add
pushf
xor
pop
nop
popf
rclb
push
and
mov
and
call
or
test
mov
add
ror
xor
ja
jecxz
jmp
insb
xor
cmc
clc
push
mov
cld
lock
mov
or
into
shlb
lret
xchg
out
and
sbb
js
ds
das
pop
add
adc
stos
in
ds
fnstcw
stc
adc
jo
insb
jle
jnp
adcl
int3
mov
dec
fucom
pop
mov
jge
xor
pop
loop
shll
pop
je
nop
mov
outsb
xchg
movsb
loopne
xchg
pop
inc
scas
sbb
clc
fcomi
pop
xor
rorl
in
je
sti
xor
cltd
sbb
xorl
push
cwtl
popf
jbe
mov
test
enter
dec
movsl
mov
mov
sbb
aad
test
mov
xchg
xor
call
sti
cld
pop
xchg
push
xchg
scas
add
pushf
enter
insl
push
ja
inc
les
popa
aad
jb
mov
sub
leave
aas
mov
ror
call
pop
push
cmpb
mov
mov
mov
test
movd
movsl
xchg
inc
mov
inc
into
shl
mov
mov
or
mov
adc
add
cmp
sbb
mov
cmp
xchg
adc
cld
enter
push
idivl
in
clc
movsl
push
mov
jno
jo
add
sti
xchg
mov
sub
jne
loop
mov
lcall
lahf
push
jge
mov
ss
xchg
sbb
cmpsb
int
andl
int
int
movsl
rorl
js
push
and
daa
sub
int
push
push
leave
cld
movb
ret
or
sbb
dec
push
mov
shrl
jo
fcmovnu
mov
ds
push
sub
pop
mov
es
aaa
xor
ljmp
test
fiadds
cmp
imul
pop
mov
fcmovnb
and
xor
push
rcll
cwtl
pop
jns
in
mov
movsl
and
mov
or
inc
mov
mov
cwtl
mov
test
hlt
nop
jbe
add
lods
ret
sbb
pop
mov
jg
ss
sbb
or
test
xchg
adc
jb
sbb
xor
mov
adc
or
clc
dec
sub
mov
arpl
in
movsl
add
add
cmpsl
lods
negl
inc
mov
repz
shlb
lods
into
out
pushf
fdivl
bound
daa
adc
fstps
fnsave
add
aad
or
cli
push
cmp
xchg
dec
push
cmp
mov
mov
inc
push
into
dec
lods
in
dec
repnz
cmp
jl
imul
repz
xorb
rorb
imul
adc
call
push
push
mov
out
ret
mov
and
ret
fwait
jecxz
push
adc
lods
jns
sti
loop
mul
inc
mov
lds
cs
mov
mov
aaa
aaa
or
cld
cmc
mov
mov
push
sbb
jno
sub
gs
aad
pop
mov
lds
and
pop
lret
dec
jecxz
ss
pop
repnz
xchg
push
aad
imul
loopne
test
data16
push
pop
lods
out
jb
xchg
or
and
loopne
mov
int3
cmp
shrl
dec
fcomps
arpl
push
mov
sbb
repnz
scas
lods
aaa
xlat
push
daa
add
mov
scas
cmp
sub
push
lds
adc
sbb
loope
fcomps
jnp
push
xor
xor
sub
lock
rcll
mov
push
mov
adc
shll
pop
add
ljmp
mov
inc
mov
cltd
fcoml
enter
or
pop
cli
inc
out
iret
out
shr
mov
dec
xchg
out
mov
jmp
ljmp
inc
scas
lret
sahf
sub
xlat
lods
sbb
gs
dec
mov
pop
mov
addr16
and
sub
testb
fildl
ret
insl
push
adc
sti
inc
stc
adc
mov
cmp
imul
aas
js
fcompl
push
xchg
cwtl
mov
daa
jg
movb
loop
mov
cltd
jnp
mov
arpl
push
in
cmpsb
in
or
mov
dec
xchg
xchg
xchg
cmp
sbb
jae
xchg
insb
xor
sbb
xchg
pusha
test
jns
sub
lea
int3
xor
adc
cs
scas
pop
movsl
mov
enter
mov
jo
movl
popf
std
loope
sub
test
outsl
addl
jecxz
dec
sub
sbb
sub
push
in
sub
lds
stos
fdivr
mov
std
gs
dec
std
xorb
rcl
inc
rolb
hlt
aaa
fildll
in
ss
push
stos
jecxz
mov
lahf
ja
pop
xor
or
push
pop
mov
xchg
outsb
cmc
in
shll
mov
lea
sbb
pushf
xor
lcall
or
push
adc
nop
arpl
or
cmpsb
and
dec
mov
fldl
jmp
test
movsl
hlt
inc
dec
or
arpl
pop
inc
stc
out
leave
cs
jae
inc
sub
sahf
push
imul
je
ficomps
push
fstpl
stc
rol
or
push
and
das
xor
inc
leave
arpl
dec
or
pop
clc
pop
push
adc
test
mov
xchg
mov
mov
movsl
or
out
adc
orl
cs
sub
idiv
cmp
je
out
mov
jbe
stos
xchg
inc
nop
push
addr16
inc
ficompl
push
adc
dec
ljmp
dec
inc
pop
dec
je
inc
push
push
js
and
mov
sbb
pushf
adc
bound
negl
sub
subb
dec
sub
jle
xchg
out
mov
mov
ffreep
cmp
xor
add
fcmovnbe
push
adc
cmpsl
xchg
cs
dec
mov
xchg
ds
cmpsb
jl
loopne
jg
push
int
xchg
pop
mov
dec
mov
dec
incb
jmp
xor
fwait
jl
repz
cmp
cmp
test
sahf
inc
aam
lret
jmp
push
fs
mov
repnz
mov
lea
hlt
cli
out
mov
into
lcall
lea
repnz
sub
pop
push
mov
adc
popf
js
jb
push
xchg
es
and
push
push
inc
cmp
fistps
jle
gs
fbstp
mov
sbb
inc
int3
push
daa
inc
pop
adc
sti
aad
popa
mov
xchg
arpl
jmp
das
loop
movsb
lret
cmc
and
or
push
mov
xlat
and
cmp
sbb
xchg
jmp
dec
pop
adcl
icebp
push
cmp
dec
scas
push
pop
dec
loop
ljmp
test
add
or
lcall
push
or
mov
cmc
pop
in
fs
pop
aaa
xor
in
sub
jbe
scas
xchg
jle
or
arpl
dec
or
jo
out
in
dec
jp
mov
lret
inc
dec
cmp
imul
sub
fistl
icebp
mov
or
std
add
and
add
sub
sub
leave
sub
add
lods
insb
jb
addr16
arpl
rorb
lret
pushf
xchg
inc
xor
xor
lret
lock
cld
insl
imul
adc
xor
add
xchg
daa
sbb
add
mov
jbe
pop
cmp
pop
sub
fildll
push
and
repnz
stc
sub
mov
pushf
adc
decl
imul
testl
shll
addr16
pop
cld
ds
rcrl
mov
jns
dec
aaa
pop
lahf
cltd
dec
das
pop
mov
ss
adc
xor
mov
dec
xor
lock
mov
adcb
out
and
inc
push
mov
pop
push
fmull
or
rclb
bound
call
scas
lahf
nop
xor
lcall
pop
push
imul
clc
in
sbb
fsubrp
enter
int
js
pop
sub
mov
cmp
mov
add
inc
or
sub
sbb
dec
or
sahf
cmp
inc
push
data16
cmp
mov
inc
ds
xor
out
sub
add
add
jge
test
pop
je
std
loope
stos
and
pop
add
mov
jmp
repnz
lock
pop
dec
jno
out
int
jns
cmpsl
mov
xchg
movsb
dec
add
rclb
out
xchg
ljmp
dec
mov
test
cwtl
das
jbe
push
sbb
mov
cmp
jo
addr16
outsl
aas
mov
pop
add
pop
fs
scas
cmpsb
rcrb
adcb
pop
xchg
shll
push
hlt
and
ret
adc
outsb
or
out
mov
sub
jg
xchg
sti
dec
out
adc
lds
ficoml
xor
adc
pop
mov
ss
xchg
mov
imul
negl
fldt
mov
in
or
in
sahf
push
lea
movsl
sub
mov
outsl
jp
xor
mov
dec
add
test
inc
out
xchg
inc
mov
mov
mov
leave
lret
scas
lea
stc
shr
cmp
ds
fistpll
shlb
dec
out
and
and
jmp
adc
mov
fwait
das
adc
sar
pop
aaa
je
mov
fsubr
pop
push
or
inc
arpl
xchg
xchg
adc
jb
js
mov
fnstsw
loop
add
sbb
pushf
cmp
fiadds
cmp
cmp
jno
and
cmp
fmulp
xor
out
cmc
cmp
lcall
mov
inc
test
test
mov
orl
daa
push
shrb
push
cmpl
xor
inc
aas
xor
lock
cmp
xor
mov
jg
das
cli
sub
mov
stc
sahf
lods
dec
push
frstor
das
pushf
xchg
repz
cmp
push
jp
lret
aam
sub
nop
push
pop
fwait
insl
aam
xchg
mov
dec
push
out
push
imul
jge
call
mov
jne
mov
cmpsb
xchg
aaa
xchg
adc
mov
mov
nop
fstpl
out
cwtl
xor
inc
ljmp
xor
hlt
mov
mov
adc
shll
lods
insb
cs
aas
int
mov
addl
push
jb
sbb
in
int
js
xlat
mov
push
or
call
or
xor
fdivl
add
cmp
jg
pop
sbb
scas
mov
fstpl
add
push
pop
daa
into
adc
sub
pop
cli
pop
in
adc
jg
jl
xchg
mov
sub
dec
adcb
pusha
jb
sub
and
loope
pusha
sub
and
xchg
inc
xor
adc
imul
test
xchg
and
adc
push
cld
movsl
jb
enter
push
dec
loopne
mov
cmp
add
mov
repz
mov
fstps
or
stc
test
movsb
mov
fucomip
or
call
iret
xor
push
fucomp
movsbl
cltd
stos
in
adc
mov
popf
cltd
mov
mov
imul
push
pop
addr16
adc
jl
sbb
rep
in
lahf
jbe
clc
jnp
xor
pop
pusha
loope
ds
xchg
out
nop
adc
xchg
adc
popf
inc
jne
add
mov
cmp
xchg
dec
mov
cmp
cmp
fisubl
adc
mov
decb
jle
les
pop
or
xor
jg
xchg
pop
and
popf
push
adc
in
iret
push
jge
shrb
lods
es
les
jns
fiadds
inc
js
mov
ljmp
cmpsb
aaa
daa
sub
push
outsb
xchg
aas
xor
clc
dec
psubsb
outsb
cwtl
insl
jp
and
jg
inc
rcrb
loope
xor
lods
xor
mov
ficompl
adc
mov
orl
test
in
add
rcll
sub
and
cmpsb
sar
xor
inc
outsb
in
data16
cmpsl
add
lret
cmp
movsb
add
push
inc
mov
dec
mov
in
sub
cmp
adc
cmpsb
mov
mov
xchg
jecxz
xor
mov
xor
mov
cmpsb
cltd
dec
dec
sub
mov
mov
rcl
pop
and
push
dec
in
lock
mov
aas
repnz
push
sbb
in
fildl
into
movsl
icebp
lahf
xor
mov
lcall
dec
sub
or
sub
popf
add
imul
sbb
inc
xor
imul
mov
lret
cmpl
in
pop
add
imul
nop
jae
push
mov
ljmp
std
stc
lds
xor
and
addr16
iret
loop
in
lds
add
mov
cmp
xor
pop
jns
cmp
loope
loopne
cwtl
les
mov
iret
push
sub
std
mov
xchg
sub
movsl
jns
cmp
push
sub
add
cmc
adc
sub
ja
add
mov
mov
xor
cmp
dec
std
repnz
popf
sbb
cmpsb
rcr
shlb
loop
cwtl
test
inc
in
cmp
int
mov
pop
cmp
jbe
mov
mov
ds
dec
mov
add
xorb
mov
out
mov
lret
pop
dec
adc
ficomps
inc
mov
dec
jmp
sbb
xor
mov
pushf
add
gs
popa
mov
sub
lahf
mov
movsb
gs
mov
test
mov
sbb
sub
cmc
adc
jle
add
push
pop
xor
je
pop
rcl
mov
pop
int
shlb
aad
jno
xor
xchg
fcomp
mov
push
scas
shlb
daa
xlat
xchg
test
sbb
int
shll
push
add
pop
inc
rcrl
xchg
or
xlat
xor
stos
jo
and
ljmp
mov
jl
xorl
mov
pop
pop
xor
cmp
pusha
outsl
std
adc
loop
fidivrl
jae
xchg
mov
adc
fisubs
cmp
int3
mov
pushf
xchg
fs
push
jae
adc
lret
scas
inc
xchg
inc
push
sbb
stc
push
jge
data16
repnz
mov
gs
push
sbb
inc
rcrl
add
imul
dec
fwait
pop
jl
fisttps
addr16
dec
and
jbe
stos
mov
into
push
mov
rcll
add
in
add
dec
cwtl
mov
mov
repz
scas
mov
ja
fidivrl
mov
pop
icebp
mov
andl
out
fsubrl
jl
cmp
and
inc
xor
push
and
ficoms
int
xor
adc
rcr
out
ret
and
nop
sarb
in
push
ficompl
daa
pop
inc
adc
adc
dec
daa
or
nopl
imul
sar
pop
push
cmp
popa
mov
shll
andl
mov
push
and
cmpl
mov
les
movsb
mov
fs
fldt
je
clc
stos
loopne
ja
mov
outsb
pop
rep
shll
cli
jae
or
decb
dec
pop
rcrl
lret
mov
jbe
cmp
fwait
dec
and
in
jbe
or
dec
push
add
add
pop
xor
test
ja
push
jnp
xchg
outsb
mov
je
xchg
out
lcall
loope
test
lcallw
mov
mov
add
inc
adc
repz
push
dec
sub
scas
mov
jbe
push
popa
mov
ss
int
jo
pop
xchg
std
pop
adcb
in
dec
push
mov
xchg
cmp
aas
shll
fnstenv
push
test
push
push
adc
pusha
les
dec
lret
flds
cmpsl
push
xor
add
out
add
shll
pusha
push
cmp
pop
inc
xchg
sub
fnop
jp
cmp
add
cmp
jge
testl
jns
pop
and
in
push
and
test
add
add
dec
int
inc
inc
pop
gs
sub
xchg
cs
sbb
fistl
dec
ljmp
test
push
gs
repz
das
rclb
movsl
inc
fldt
pop
lcall
sbb
push
jp
inc
mov
repnz
fdivrs
jmp
mov
aas
stos
lret
fisttpl
loope
movsl
repz
mov
jl
gs
jge
sub
pop
sti
mov
shlb
faddp
lahf
jno
test
cmp
xchg
fwait
in
mov
testb
loopne
leave
jle
repz
mov
xchg
mov
daa
js
jmp
push
xor
sub
loop
pop
scas
ljmp
mov
push
adc
out
xchg
fdiv
loope
xor
mov
rcl
repnz
mov
mov
xor
fmull
sbb
sbb
inc
lret
cmp
sbb
loopne
mov
or
mov
adc
lock
outsb
add
mov
xor
lds
push
mov
dec
inc
ja
or
std
popl
clc
fnstsw
jmp
imul
decb
fsubr
out
test
xchg
enter
cmp
clc
into
mov
dec
inc
mov
fdivrs
sti
cmp
rcl
add
ss
mov
fisttpll
mov
and
cmp
xchg
pop
sbb
lret
fisubrs
xor
test
call
test
sbb
nop
call
add
call
adc
shll
push
or
lock
xchg
pop
or
push
mov
test
or
dec
cli
sbb
jmp
repz
jl
sbb
or
imul
in
mov
lods
adc
cld
push
mov
scas
pop
xor
add
enter
outsb
and
jg
mov
iret
es
add
push
ja
into
xor
xlat
mov
mov
repnz
push
jnp
adc
inc
pusha
adc
and
xor
shlb
dec
xchg
lock
mov
cltd
adc
push
or
inc
ja
mov
sub
test
into
cld
mov
jo
lahf
daa
out
pop
mull
cli
push
or
test
and
and
mov
pop
jno
lahf
or
stos
sbb
scas
cs
and
add
iret
mov
pop
ret
cmpsb
or
add
jge
ds
loop
cltd
test
pushf
xor
enter
in
fisubs
dec
cld
add
cmpsb
loop
bswap
addr16
or
inc
jmp
xchg
mov
sbb
loopne
adc
cmp
outsb
push
push
adc
sar
stc
fistpl
jp
lock
dec
fisubs
lds
in
je
mov
fmuls
cmp
adc
mov
xchg
push
addr16
sti
dec
push
mov
sbb
mov
daa
mov
subb
mov
hlt
scas
lock
aas
decl
inc
sub
int
cld
cmpsb
jo
add
jno
push
jle
loop
jnp
cmp
pop
std
outsl
cld
mov
fdivrs
rolb
adc
lds
inc
movsb
aas
jns
scas
jle
sub
aam
mov
in
xor
mov
xchg
jb
mov
jnp
pop
sbb
int
add
stc
mov
call
mov
loopne
push
dec
adc
cwtl
pop
jnp
pop
out
nop
add
pop
xchg
stos
movsb
cmp
dec
dec
loope
jb
and
adc
mov
js
in
iret
lods
stos
icebp
cs
inc
addl
push
aas
mov
repnz
int
mov
imul
xor
lea
dec
or
jb
sbb
imul
sbb
jg
xchg
sbb
or
lcall
shrl
rcr
in
push
pop
adc
js
inc
push
push
ret
pushf
jle
into
shll
aaa
movsl
mov
cmp
sbb
inc
fstpl
adc
xor
pop
mov
in
jno
mov
das
test
loop
adc
or
xchg
ds
mov
pop
testl
mov
mov
inc
push
lahf
lds
int3
test
add
push
ret
data16
scas
imul
jns
scas
and
inc
pop
inc
xor
lcall
js
test
mov
jae
pop
mov
jp
or
pop
add
data16
xchg
movsb
adc
dec
test
and
loopne
mov
dec
push
add
pop
fidivs
ret
or
or
pushf
les
js
push
sbb
mov
sarb
dec
xchg
xchg
es
dec
fisttpll
fisubrs
mov
imul
adc
test
lods
lcall
jmp
ror
daa
pop
iret
adcb
leave
out
dec
inc
pop
gs
int
push
xchg
jno
push
mov
outsb
sbb
inc
mov
mov
ja
inc
pop
enter
and
xor
jp
addr16
push
out
xor
in
ret
stos
jae
pop
out
sbb
adc
leave
sbb
mov
pop
pop
pop
mov
mov
mov
aad
mov
movsb
dec
ljmp
pushw
mov
scas
lods
dec
fwait
jg
sarb
sub
add
mov
sarb
ret
lret
int3
lea
shll
mov
in
or
pusha
sbb
add
mov
pop
cmp
push
jo
out
imul
xchg
fsts
fneni(8087
loop
add
outsb
sbb
cmp
push
adc
inc
iret
icebp
fucomp
mov
mov
or
stc
ljmp
imul
add
call
pushf
and
incb
stos
inc
push
data16
add
xchg
subb
bnd
and
enter
xchg
repnz
mov
out
push
sbb
ret
pop
pusha
jecxz
es
push
sahf
sub
es
inc
pop
mov
insb
lods
inc
dec
mov
xor
movsl
xchg
adcl
loop
stos
outsb
fsubrs
xor
add
orl
sub
loopne
dec
movsb
lea
icebp
leave
inc
inc
jae
call
adc
xor
popa
stos
fldenv
data16
xor
int
sub
popa
xor
fs
mov
mov
pop
push
cmc
les
int3
lods
jne
adc
dec
pop
xchg
push
cmp
push
scas
and
ds
and
loop
popf
xor
push
pop
out
mov
ja
mov
addr16
mov
imul
and
jg
adcb
inc
mov
shr
push
dec
ret
adc
loope
pop
cmp
pop
sbb
push
stc
loop
lret
popa
adc
or
cltd
nop
inc
add
push
jecxz
nop
adc
icebp
mov
push
xchg
mov
pop
roll
push
in
push
jne
jns
es
pop
push
or
stc
xor
mov
add
ss
pop
jl
movsl
push
inc
xor
adcl
mov
xchg
lahf
mov
jg
outsb
cmp
das
cwtl
mov
xor
int3
loopne
xlat
stos
inc
stos
adc
js
lahf
push
mov
mov
lea
jp
inc
and
jp
ret
mov
inc
mov
pop
inc
into
in
shll
lret
dec
lds
xor
pop
sbb
loop
and
and
mov
pop
mov
jp
and
fisubrl
push
in
mov
cmpsl
or
pop
mov
iret
mov
lods
repz
mov
testl
adc
jg
dec
pop
test
cmp
pop
lahf
pop
jge
cmp
ret
adc
inc
nop
sahf
orb
mov
mov
aam
adc
sarl
lret
push
stc
mov
adc
les
scas
adc
sti
dec
xchg
test
jns
dec
aaa
mov
sbb
mov
insb
xor
je
loopne
test
test
jmp
pop
sub
ljmp
jge
orl
dec
add
bound
cli
xchg
pop
sub
mov
imul
cmpsl
clc
push
mov
xchg
jae
cmc
decl
inc
dec
je,pn
xchg
in
mov
mov
call
xlat
ja
mov
lea
sub
lds
and
icebp
aas
inc
aad
add
outsl
std
shlb
pusha
sub
xor
sbb
xor
fistps
das
fs
rclb
je
xchg
iret
out
test
dec
scas
jmp
sub
shrb
jle
jp
enter
lahf
fisttps
sahf
xlat
push
xchg
push
les
enter
fsubrs
pop
xchg
lods
and
jns
dec
add
sub
cmp
out
cltd
mov
je
bound
jnp
dec
xor
xchg
gs
or
pop
and
fucomp
xchg
sbb
adc
push
mov
jge
insl
cmp
push
scas
add
fnstcw
mov
push
out
in
inc
jns
sti
adc
mov
sarb
in
cmp
push
xchg
cmp
sbb
push
pop
add
mov
mov
sub
or
scas
in
xlat
fcomi
cld
fbstp
inc
mov
in
sub
mov
pop
sbb
cs
mov
cmpsb
xor
fprem
mov
aam
cwtl
imul
xchg
int3
test
push
cld
inc
mov
es
xchg
in
mov
and
decb
push
pop
sub
dec
outsl
ja
and
add
cmpsl
cmp
loope
lods
push
cli
loopne
pop
mov
adc
or
lods
jae
mov
sahf
out
jle
in
out
jbe
cmp
push
addr16
mov
insl
or
adcb
loop
in
mov
movsb
mov
mov
shll
jg
scas
cmp
and
adc
daa
sbbl
fidivrs
cld
cltd
or
addb
cmovne
sub
mov
pop
jp
xchg
fwait
pop
ret
fsts
sbb
cltd
adc
pop
dec
jne
jmp
ljmp
jmp
popa
and
clc
in
cmpsl
addl
rcll
pop
test
fwait
jmp
scas
jp
test
push
mov
pop
sub
pop
sbb
pop
arpl
add
fldt
movsb
mov
mov
loopne
fwait
nop
test
or
sbb
adc
ljmp
ss
daa
adc
and
add
pop
mov
insl
xlat
inc
mov
push
iret
add
pop
and
cli
adc
lds
mov
mov
shll
sti
pop
imul
xchg
insb
xchg
call
into
or
add
cmc
test
xor
stos
mov
lods
push
push
sub
movsl
sub
ret
repnz
pop
out
inc
data16
dec
scas
pcmpgtd
lds
hlt
in
and
push
dec
cmc
insb
push
xchg
iret
mov
sbb
jge
inc
xlat
xor
sub
push
xor
push
fnstenv
fildl
loopne
stos
daa
dec
push
mov
cmp
arpl
les
jecxz
pop
mov
int
mov
or
cli
dec
jbe
je
outsl
xor
or
mov
dec
or
fildll
js
jl
push
pop
icebp
sbb
cmpsl
fs
pop
scas
sub
inc
jnp
inc
jnp
dec
into
or
in
push
mov
out
mov
jle
mov
stos
sub
in
imul
or
add
lods
lock
xor
fldl
mov
test
cmp
xchg
push
repnz
test
jo
dec
sub
adc
add
mov
push
mov
outsl
adc
popf
outsb
cmp
or
outsb
test
pmaddwd
pop
mov
pop
mov
and
inc
pop
mov
push
ljmp
fwait
jae
inc
data16
sbb
mov
ffree
mov
cs
mov
push
repz
gs
dec
add
xchg
sbb
xrelease
sub
je
sbb
mov
stos
push
and
dec
cld
fstpt
arpl
data16
inc
cmc
push
cld
fcompl
xor
mov
cmp
fcmovbe
jp
xor
addr16
js
aas
xchg
dec
push
ror
sub
stos
fistpl
jl
sub
pop
movb
push
icebp
sti
lret
scas
loopne
dec
mov
pushf
imul
pushf
jbe
xorb
mov
lahf
lcall
popa
jae
sub
rcll
ss
arpl
mov
adc
iret
pxor
xorb
jg
leave
jo
lds
sub
sub
mov
mov
xchg
jmp
mov
lcall
dec
lahf
movsb
cld
out
dec
daa
sub
add
sub
dec
mov
orb
dec
out
push
enter
aad
roll
or
push
mov
dec
sbb
jno
jg
mov
scas
test
inc
xlat
out
insl
push
cmpsl
cmp
mov
mov
cmc
test
add
fsts
lret
aas
arpl
push
scas
xchg
incb
adc
bound
hlt
shlb
mul
cmp
or
sub
mov
mov
test
pop
sub
or
imul
mov
ljmp
push
orl
sub
mov
je
pusha
jmp
cwtl
frstor
jl
fsubrl
pop
loop
lcall
int
lret
jae
rcll
xchg
test
xchg
data16
int
and
imul
pop
iret
mov
push
out
in
sbb
movsl
xchg
jne
test
adc
cmc
jb
jle
mov
cmpsb
aaa
popa
loope
cld
test
test
inc
ja
adc
imul
nop
lret
jo
test
insb
jmp
shll
lock
fdivs
mov
sub
rclb
pusha
sbb
xchg
xchg
enter
inc
sahf
dec
jl
ret
int
jne
cli
dec
dec
popf
js
and
and
loopne
cld
arpl
mov
or
cwtl
js
lahf
and
dec
scas
mov
adc
in
leave
ljmp
adc
xchg
in
jns
out
add
xor
orl
mov
test
adc
xorb
les
sbb
scas
aam
and
inc
and
loope
mov
jl
iret
popa
inc
xchg
orb
xor
or
faddl
ret
xchg
fs
push
sbb
mov
adc
sbb
push
jmp
jmp
les
sub
out
xchg
jle
insl
adc
sbb
mov
ret
sbb
add
adc
mov
adcb
adc
cmp
add
mov
mov
outsl
cmp
fstpt
mov
and
mov
popl
jecxz
add
in
cmp
dec
sub
adc
add
dec
push
cs
int3
nop
stos
or
mov
es
jp
lods
jl
mov
jle
stos
cmp
je
or
mov
pop
or
mov
insl
cmp
movsl
repnz
xor
hlt
push
sbb
mov
pushf
dec
lahf
push
push
mov
rcll
sub
add
and
es
aam
jl
iret
jne
cmp
pop
pop
paddsb
push
popa
icebp
jnp
mov
and
mov
push
adc
test
add
inc
in
adc
push
mov
xor
in
add
imul
push
xchg
mov
mov
lea
dec
out
lock
addb
icebp
dec
or
sbb
fstps
inc
adcl
movsl
or
jle
or
adc
or
mov
mov
sub
ljmp
mov
push
cmc
lret
jae
mov
ss
movsb
bound
jo
push
test
fisubs
push
lret
cmpsb
dec
insl
mov
clc
adc
jnp
negb
leave
xorb
or
adc
pop
or
aas
call
push
iret
cmc
add
mov
jp
adc
fdivp
insb
aaa
pusha
jle
in
es
icebp
or
int
popa
inc
dec
stos
negl
in
bound
idivl
test
sahf
cmp
xlat
js
fsubrs
xor
bound
pop
aaa
iret
ret
loop
imulb
jle
lock
jne
dec
repz
push
aad
jle
inc
push
mov
shlb
mov
jnp
jle
mov
incb
dec
fistps
push
mov
cmp
inc
loop
cmc
repnz
cmp
xchg
xchg
icebp
popa
mov
mov
div
cwtl
nop
push
pop
cmp
lea
sub
and
outsl
loope
jge
aaa
js
and
psubb
xchg
inc
jl
popa
jae
lods
sub
dec
ss
jmp
pop
das
mov
in
js
shrb
cmpsb
xlat
push
jno
adc
dec
iret
cmp
and
sub
or
andl
bound
test
andl
enter
mov
and
dec
xchg
mov
ret
in
repz
lret
addl
cmpsb
stos
loopne
movsb
sti
out
mov
shlb
aam
das
outsl
inc
lock
adc
add
pop
xchg
call
cltd
xlat
inc
xchg
movsb
insl
add
sbb
lret
xor
pop
dec
movsl
aam
aaa
xor
dec
out
scas
mov
cmp
dec
cmp
cmp
hlt
sahf
mov
out
loopne
fucomip
nop
inc
repz
fsubrs
addb
lods
lahf
shl
push
arpl
inc
mov
iret
adc
lds
pop
cli
jg
or
fcomi
in
cli
xchg
push
ds
enter
push
mov
orl
fsubp
mov
int3
inc
jge
in
je
dec
ficoms
inc
pop
cmp
mov
jae
icebp
enter
mov
icebp
dec
cli
test
mov
enter
subb
mov
inc
pop
repnz
pop
sbb
xchg
subl
xchg
xchg
dec
xchg
xor
xor
sarb
in
adc
xchg
int
jb
cmpsl
test
pushw
or
es
and
sub
ret
xchg
adc
lds
jmp
les
xor
je
imul
or
sub
inc
dec
faddl
xor
loopne
in
loopne
mov
or
or
mov
mov
add
or
dec
out
pop
rclb
xor
lret
mov
sbb
mov
push
les
push
bound
sbbb
rcll
dec
jmp
mov
mov
fstl
and
inc
gs
mov
fcoml
loop
fdivl
jne
cmp
xchg
sbb
xchg
xlat
xchg
inc
dec
inc
cmpsb
or
cmpsl
repz
scas
jecxz
xor
mov
pop
es
jecxz
ret
arpl
fldl
fstps
pop
fcomi
inc
mov
pushf
pop
mov
sbb
xchg
movsb
push
pushf
jb
add
fwait
mov
xchg
int3
aad
jbe
xor
ror
jo
mov
mov
mov
push
xchg
movsb
sbb
xor
sti
sub
stc
jno
fbld
scas
sti
loope
pop
or
adc
shr
and
iret
jmp
iret
mov
inc
inc
or
lods
inc
mov
xor
incl
mov
sbb
rclb
out
push
jmp
sahf
lock
insb
lcall
mov
popa
leave
xchg
daa
inc
dec
jbe
fwait
and
cltd
xchg
shr
insb
add
xor
rcl
addb
mov
stos
sti
mov
sbb
fs
scas
loope
decl
jmp
icebp
mov
into
int
mov
mov
dec
mov
dec
aaa
into
ret
shrb
adc
mov
or
inc
pop
cli
int
rorl
or
mov
dec
imul
lods
mov
leave
and
inc
mov
cli
mov
xchg
and
or
cli
add
xchg
mov
sbb
pop
loopne
loop
mov
adc
adc
lahf
jl
push
cmpsl
mov
shll
add
jl
mov
cli
ljmp
icebp
or
test
int3
xor
addr16
jae
loop
loop
dec
mov
sti
jge
movsl
pop
xor
mov
inc
mov
out
jmp
pop
and
adc
xchg
push
sbb
sbb
dec
mov
leave
aam
mov
shrl
mov
outsb
ret
lods
dec
mov
movsb
aad
push
dec
lods
nop
nop
jg
ffree
daa
fidivl
mov
imull
dec
sub
test
andb
dec
test
jo
cmp
jmp
xchg
adc
ljmp
cmpsb
ret
lcall
xchg
aaa
xor
jae
lret
push
mov
jne
mov
dec
pop
mov
sbb
xchg
lret
xor
rcr
cld
loopne
inc
jl
pop
xor
add
dec
mov
sbbl
sub
std
or
xchg
mov
in
cmp
mov
movsb
lods
pusha
loop
fdiv
xchg
push
pop
daa
jg
testl
add
and
mov
fcmove
or
xor
pcmpgtw
mov
in
push
inc
stos
pusha
sub
jmp
push
mov
cmpsl
in
lret
add
jne
jo
jmp
movsb
sub
je
sbb
pop
jge
jno
lcall
sub
pop
inc
mov
jle
arpl
push
mov
arpl
popf
sbb
mov
mov
lcall
and
jb
rep
sbb
jb
sbb
push
mov
cmp
jmp
pop
mov
push
xor
add
and
sub
and
inc
fdivrl
mov
or
rol
or
inc
call
push
cmp
sbb
mov
rcrb
lahf
or
lods
xchg
hlt
aaa
addr16
push
inc
mov
rolb
insl
push
subb
add
lcall
loopne
cmp
push
mov
mov
sbb
leave
test
imul
test
and
pop
notb
mov
dec
xor
js
cmp
shll
aaa
fmull
mov
add
popf
pop
addr16
add
add
sub
mov
imul
cld
jo
shl
push
push
jl
pop
aas
adc
and
je
mov
lock
mov
inc
inc
xor
or
mov
je
rorl
dec
arpl
mov
pop
sub
sbb
cmp
adc
shl
icebp
push
jne
adc
neg
fs
sar
jno
notl
fcmovnu
mov
jno
mov
inc
cmpsl
inc
mov
pop
add
stc
mov
cwtl
add
cmp
xchg
mov
ret
das
sahf
push
rclb
pop
std
and
outsb
out
pop
movsb
adc
or
iret
lahf
mov
int
cmpsb
in
lods
cmp
stos
cmp
jns
or
pop
xor
push
popa
sub
jno
push
jns
cli
push
mov
lods
js
pushf
sbb
cld
mov
dec
pop
lods
iret
fs
mov
clc
mov
jns
cmpsl
adc
cltd
mov
and
out
iret
enter
inc
mov
mov
cmp
mov
cli
mov
pop
vpshufd
inc
test
sub
cltd
lods
mov
pop
sbb
push
inc
xchg
sbb
push
scas
jp
dec
popa
xorb
push
xchg
daa
into
divb
in
shlb
aas
cltd
mov
and
bound
sti
in
subl
mov
subl
mov
mov
shlb
push
cmp
mov
call
xlat
xor
xor
mov
out
xchg
mov
jmp
nop
lret
fsubs
cmp
xor
cwtl
pop
or
ret
xlat
fistpll
pop
lret
lock
icebp
fincstp
sub
adc
cmpsl
cmp
out
mov
ret
push
lods
sub
xchg
out
jo
or
mov
dec
and
sbb
xchg
in
enter
loope
std
push
mov
jg
dec
cmp
andl
popf
mov
es
fadds
push
shlb
inc
add
mov
xchg
pop
negb
mov
lds
inc
icebp
out
ret
sahf
or
sti
jno
addr16
call
fisttpll
mov
out
sbb
and
xchg
stos
add
leave
aaa
mov
divb
ja
sub
cmp
mov
inc
mov
sar
mov
enter
sbb
bound
loop
mov
inc
xchg
dec
or
arpl
jp
das
popf
or
dec
rcl
fst
test
lret
mov
loopne
mov
ret
mov
popf
or
pop
or
test
xor
jmp
pop
adc
dec
sub
jmp
pop
repnz
xchg
add
inc
lcall
adc
adc
cmp
inc
pop
inc
icebp
push
lcall
pop
out
mov
leave
cwtl
and
outsb
or
push
faddl
dec
call
cmp
inc
fs
cmp
adc
scas
sub
add
in
dec
pop
mov
mov
mov
push
cmp
inc
outsb
imul
pop
dec
flds
lock
inc
std
testl
and
lock
or
daa
fstl
adc
sti
movsl
out
les
pop
adc
sbb
mov
lcall
jne
push
hlt
xor
test
xor
daa
loopne
or
jnp
push
pop
xchg
push
inc
fadd
sbb
pop
imul
addr16
pusha
call
in
dec
xchg
fcoms
cmp
xchg
xchg
pop
call
sbb
les
mov
mov
xor
jns
sub
cmc
fisubs
fstpt
pop
repnz
jp
frstor
stc
sbb
pop
push
push
or
add
int3
fstpl
icebp
sbb
je
xchg
jne
ljmp
cli
sub
mov
add
pop
sar
cmc
aam
cmc
stos
xor
sbb
or
pop
pushf
call
mov
roll
inc
jge
testb
js
loopne
cmp
cmp
mov
jnp
loopne
insl
jns
dec
cld
test
loopne
xor
inc
imul
lret
roll
dec
pusha
cmp
push
mov
xchg
jle
sbb
ljmp
and
inc
pushf
and
jno
in
enter
xor
push
xchg
cmpsl
fmull
or
aam
dec
jns
xor
adc
test
pusha
fsubrl
rcr
and
leave
sbb
and
dec
mov
jo
jno
test
std
divb
jecxz
shlb
cld
push
outsl
int3
out
fists
xchg
push
les
sub
push
sbb
icebp
lds
clc
jnp
push
scas
jae
mov
lods
mov
pop
inc
dec
add
inc
mov
pop
shlb
gs
sbb
aas
pop
pop
and
push
jns
lret
pop
xlat
addr16
jmp
addr16
out
xchg
jae
inc
or
mov
xchg
pop
mov
stos
sbb
mov
sti
mov
jbe
mov
mov
insb
sbb
xor
jnp
pushf
inc
clc
test
inc
in
sti
repnz
push
xchg
mov
mov
out
leave
dec
inc
rcll
rolb
mov
push
and
scas
insb
lea
mov
dec
or
aad
mov
jp
mov
loope
js
das
cli
mov
jno
mov
lret
push
jg
adc
notl
cmp
cs
sbb
sub
push
jle
adc
cmp
or
stos
pop
int3
xchg
call
out
sub
xlat
add
cmp
test
leave
inc
push
push
jmp
cmc
aaa
int3
mov
mov
mov
movsb
out
dec
push
sbb
mov
cmpsl
rcll
cld
inc
rcr
test
pushfw
mov
mov
pusha
xlat
divl
cld
fs
pop
or
adc
es
cltd
xor
inc
push
sub
stc
xor
xor
xor
xor
out
push
scas
sub
pop
xchg
in
lods
int3
jne
mov
inc
test
cmp
inc
clc
push
push
mov
or
es
fldcw
pop
fwait
cmpl
sarl
pushf
mov
push
out
and
or
push
xor
jo
lret
xchg
out
dec
lods
jns
inc
pop
cmp
jmp
dec
das
gs
mov
xchg
xchg
in
lcall
out
adc
push
pop
dec
je
in
push
xor
lods
in
dec
and
popf
out
ds
fcomi
jns
aam
mov
cmp
add
jg
mov
lods
cmp
inc
push
adc
mov
fmull
je
mov
xchg
lods
push
cmpsb
pop
cmp
fiadds
push
and
popa
rcll
jo
mov
int3
movsb
ljmp
rorb
and
cld
hlt
pop
shll
scas
cwtl
ljmp
ret
movsl
test
cmp
push
scas
mov
mov
xchg
dec
ljmp
jle
fmuls
call
inc
repz
inc
inc
pop
inc
aaa
mov
mov
mov
and
outsl
ds
adc
adc
jne
push
out
add
mov
enter
es
das
inc
mov
dec
aas
fsubrp
fimuls
dec
fxch
pop
test
mov
ret
outsb
inc
into
adc
pop
and
testl
jle
das
sub
mov
in
pop
aas
pop
out
adc
mov
arpl
fs
add
push
mov
adc
push
aaa
and
hlt
je
lcall
sub
loopne
out
mov
lahf
sbb
push
mov
or
icebp
jl
jl
and
pop
mov
sub
repz
mov
loopne
in
andl
push
mov
ret
imul
stos
shll
mov
adc
fists
mov
fnstsw
pop
in
mov
mov
xchg
in
jo
icebp
jb
xor
sub
in
cld
mov
mov
add
xchg
ret
and
sbb
jb
and
push
or
adc
adcb
mov
mov
inc
popl
roll
xor
mov
inc
sub
jns
loope
cmpsb
popf
in
psadbw
jo
mov
cs
clc
mov
sahf
cltd
dec
loop
xchg
cmp
mov
in
jo
ja
lret
scas
cmp
adc
dec
inc
pop
cmp
sbb
rcr
xorb
xor
loopne
fcoml
fistl
cmpl
xchg
mov
out
stos
fwait
cmp
or
sbb
pop
mov
movsl
xchg
jecxz
test
cmp
daa
adc
sbb
arpl
test
sbb
scas
xchg
push
popa
xchg
xor
xchg
gs
repz
dec
nop
jge
xor
pop
cld
icebp
sub
or
sbb
xor
mov
dec
lea
add
dec
cmp
loope
in
xor
ror
mov
daa
push
mov
jg
shl
push
xchg
fildll
clc
cli
inc
push
iret
sbb
orb
into
and
mov
js
shl
repnz
jns
or
inc
lods
ja
xchg
pop
test
call
mov
mov
cmpsl
dec
add
jp
push
cld
or
sbb
mov
aad
cld
fs
in
loopne
sbb
pop
inc
add
and
inc
fnstenv
push
cmp
test
es
cmpsb
mov
ja
fistps
push
inc
sbb
sub
push
test
jp
dec
scas
and
dec
xchg
sbb
rcll
iret
mov
cmp
les
xor
pop
mov
mov
jp
jo
nop
mov
inc
ffree
mov
add
cmp
outsb
dec
cwtl
aam
xchg
iret
mov
mov
xor
fcoms
add
in
and
jge
jmp
repz
popa
bound
daa
shl
xchg
push
pop
jae
xchg
or
push
rorl
shlb
outsb
cmp
ds
cmp
icebp
and
mov
nop
xchg
and
dec
imulb
loopne
or
movsb
jbe
repnz
cmpl
push
mov
jle
es
mov
sti
pop
test
xor
xor
push
inc
adc
sub
mov
das
and
ficoms
jno
jl
sub
out
inc
mov
in
iret
mov
xor
mov
mov
ffree
cmp
shlb
in
cmp
push
jmp
jl
nop
repz
mov
jne
lds
out
sbb
xchg
sbb
push
mov
sbb
push
jo
pop
xor
and
mov
pop
movsl
imul
in
mov
test
ja
and
pop
nop
ja
mov
and
xor
jbe
imull
imul
add
addr16
mov
xorl
or
adc
push
push
jge
ss
or
pop
stos
cmp
fcoms
aam
jecxz
jne
lods
inc
in
aad
jge
les
ljmp
and
lods
arpl
push
cmpsb
gs
xchg
es
dec
push
movsb
pop
push
test
popf
add
mov
out
pop
hlt
inc
cld
fisubs
test
push
add
in
mov
cmp
inc
ljmp
sub
fnstsw
mov
inc
stos
test
mov
imul
aam
push
adc
xchg
pop
bound
adc
loopne
cmpl
ja
add
addr16
negb
mov
xchg
in
popf
mov
loope
or
addr16
cmpsb
movsb
mov
and
xor
mov
icebp
aaa
addr16
mov
mov
imulb
xchg
ret
jg
aam
lods
arpl
lea
cmp
jbe
push
or
and
pushf
ffree
std
insl
scas
std
outsl
lock
imul
in
xchg
adc
fucomp
sti
adc
sbb
jge
lock
sbb
incb
iret
mov
dec
xchg
out
mov
fiadds
sbb
clc
ret
add
cmc
jg
mov
push
jmp
inc
gs
lret
outsb
nop
loop
lret
sbb
mov
push
jmp
sbb
shl
scas
js
repz
add
jno
cmpsl
mov
sti
sbb
cltd
imul
sbbb
jge
data16
push
adc
fisttpll
insl
idivl
int
cmpsb
dec
pop
sub
fistpll
mov
insb
in
ljmp
inc
mov
mov
inc
or
jmp
loope
cs
insb
push
rep
xchg
popf
incb
mov
rolb
push
and
mov
and
frndint
loopne
clc
call
out
mov
movb
inc
in
imul
mov
das
frstor
xchg
mov
cmpsb
mov
pop
or
bound
and
xor
mov
sub
ja
mov
push
xchg
push
xlat
lret
fwait
dec
mov
mov
jno
inc
jmp
andl
inc
rcrb
adc
imul
mov
bound
iret
movsb
out
inc
notb
ret
push
sti
cmp
mov
aaa
imul
add
add
bound
dec
or
es
mov
call
aaa
jle
or
lods
repz
lock
lds
dec
cmp
fbld
lahf
lcall
and
test
pop
ret
inc
fcoml
and
test
std
mov
sarb
inc
nop
fisubl
movd
repz
xor
fldl
insb
jbe
or
pop
mov
mov
outsb
or
inc
orb
adc
adc
fcomps
xchg
mov
lods
loope
jle
js
dec
lcall
test
outsl
add
lods
sti
loop
dec
adc
sahf
push
jne
mov
inc
outsl
jge
clc
lcall
fdivs
add
xchg
xchg
call
je
popl
scas
cwtl
aam
or
adc
jmp
mov
sbb
in
cltd
dec
adc
push
add
mov
sbb
leave
dec
sarl
movb
dec
iret
test
ret
cld
ret
cmp
and
test
gs
lds
popf
out
dec
push
mov
or
ret
jecxz
das
xchg
es
and
dec
xor
adc
push
jmp
adc
mov
fadds
dec
fidivrs
sti
aam
out
xchg
xchg
and
mov
int
mov
inc
ret
or
hlt
mov
popa
pusha
mov
xor
ficomps
mov
lret
rorb
sub
jno
test
cmp
lods
pop
or
xchg
sub
mov
mov
push
test
pop
dec
out
jle
lcall
push
sbb
pop
mov
js
lret
outsb
xchg
and
sbb
push
mov
lcall
add
mov
mov
outsb
jle
add
rolb
addr16
bound
pusha
into
mov
pop
incb
pop
or
jns
les
cmp
js
dec
in
mov
dec
imul
pusha
add
push
mov
pop
scas
subl
jecxz
push
jns
rcl
outsl
or
add
push
push
imul
pusha
in
cmpsb
jnp
jecxz
call
fucom
decb
xchg
and
adc
xor
scas
mov
cmp
cmp
dec
scas
sbb
stc
shl
or
xor
mov
mov
movsl
jmp
add
rcrb
jae
fst
cld
repnz
add
nop
adc
gs
outsl
movb
push
dec
in
out
push
sbb
mov
pushw
jb
cmp
jno
daa
cltd
aaa
arpl
fnstsw
xor
sbb
fstpl
xor
push
push
sbb
sub
lret
adc
jae
orl
lods
sbb
mov
mov
loope
pop
leave
in
sbb
pop
sbb
mov
dec
jns
jns
test
cltd
xor
add
ds
or
jno
cs
add
push
push
mov
xor
mov
inc
dec
sub
out
sub
jns
xor
sbb
jmp
pop
insl
add
jnp
pushl
aad
scas
rcr
xchg
out
fisubrs
outsb
loope
inc
mov
xchg
cmc
ret
fildl
in
push
iret
fistps
bound
push
dec
daa
xchg
fisubrs
push
adc
adc
ss
sbb
lds
aaa
add
dec
popa
cmp
mov
push
sub
aaa
in
imul
or
xchg
aas
movsb
xchg
dec
daa
sbb
mov
mov
and
inc
dec
movsb
push
sbb
push
pushf
js
push
jns
pop
dec
xchg
sub
into
xor
cltd
adcl
test
xchg
adc
inc
outsl
pop
out
test
in
test
andb
xchg
inc
cmp
push
xor
fisubrl
pop
xor
subb
sbb
bound
mov
call
push
pop
mov
inc
cs
cld
inc
push
sahf
and
movsl
sbb
cld
mov
cmpsb
icebp
mov
mov
lahf
dec
lock
fs
es
push
jno
push
ret
and
test
hlt
mov
fstl
xor
incb
adcl
mov
and
inc
insl
adc
and
fs
xchg
ja
stos
nop
dec
sub
scas
out
mov
outsl
xor
jmp
sbb
into
jl
clc
xor
xor
push
jb
mov
xor
mov
rcrl
adc
pop
into
loope
dec
arpl
inc
daa
roll
or
movsl
lahf
data16
jne
push
test
push
mov
xchg
xor
adc
xlat
add
pop
popf
or
mov
orl
lds
gs
clc
cmpb
and
repz
test
pop
jmp
push
mov
sub
mov
mov
ret
mov
push
jne
icebp
pushf
jp
add
pcmpgtb
adc
lret
or
into
push
add
sub
call
sub
mov
add
mov
pop
leave
cmp
push
cmc
test
jmp
push
divl
repnz
jo
mov
jmp
stos
inc
jecxz
pop
mov
mov
in
test
in
enter
xchg
das
mov
cli
nop
out
and
mov
pop
leave
jl
xchg
or
dec
in
js
jle
sbb
push
lahf
push
loopne
fs
mov
pop
sbb
ja
cmp
inc
sbb
pushf
int
mov
mov
cmpsl
into
add
xchg
mov
inc
out
imull
nop
ret
or
push
arpl
inc
xchg
gs
test
mov
pop
repnz
xor
xor
arpl
inc
xor
cmpsb
and
jg
sti
int
ss
aaa
pop
dec
out
and
push
hlt
lret
ret
mov
movsl
fiaddl
enter
scas
int
outsl
es
sbb
and
stos
outsl
loopne
mov
cmp
mov
lcall
icebp
je
and
adc
sbb
add
mov
add
mov
test
pop
orl
lods
xchg
leave
mov
or
mov
xchg
xchg
add
and
stc
mov
icebp
inc
into
divl
pop
lcall
leave
lods
aad
push
in
pop
add
sbb
std
add
dec
test
inc
out
movsb
adc
inc
mov
xor
mov
inc
ret
repz
mov
push
ljmp
shlb
add
and
imul
popf
imul
adc
xor
sub
dec
inc
mov
jne
mov
mov
fisttpll
pop
mov
and
add
mov
jecxz
push
cmc
daa
lods
mov
jnp
mov
cmc
or
aaa
mov
aaa
add
mov
and
push
fs
mov
mov
leave
test
add
add
js
fs
out
mov
adc
add
fucomp
lret
inc
aam
int3
or
bswap
push
loopne
insl
sbb
call
and
sti
sub
sub
repz
cmpsb
das
stos
insl
out
mov
rcll
bound
push
fidivl
push
sbb
xor
xchg
add
lret
cmp
addr16
jae
sbb
les
pop
pushf
jge
outsb
add
xor
pop
xchg
push
in
ja
mov
pop
test
or
xchg
jmp
mov
repz
out
clc
fiaddl
rolb
shlb
dec
lahf
pop
adc
loopne
xchg
lahf
sbb
nop
xchg
cmp
fiaddl
push
out
stc
ficomps
pop
jno
jecxz
pop
repz
inc
test
nop
or
push
xchg
inc
cmc
roll
je
cmp
xchg
cmpsl
icebp
and
aas
or
stc
push
push
insb
es
int3
mov
dec
xorb
mov
cli
cmp
cmpb
ds
push
push
lret
pushf
mov
aad
in
mov
add
xchg
push
aaa
and
lcall
mov
mov
sub
xchg
pop
ja
jecxz
cmc
mov
addr16
cmp
cltd
mov
cmpsl
cltd
gs
int
xor
stos
popa
ror
cmpsl
fsub
jp
sub
jb
popf
jmp
or
loope
test
jmp
adc
xlat
addr16
jecxz
dec
repz
insb
popf
mov
xchg
mov
jne
mov
stos
mov
outsb
fcoms
add
and
popa
stos
mov
sub
clc
jo
and
and
cmp
ret
jae
fildll
mov
testb
pop
xchg
addr16
in
adc
popf
dec
xor
mov
jl
and
pop
fmul
mov
jae
int3
sahf
or
gs
rorb
scas
fnsave
push
icebp
xchg
adc
fcmovnu
jbe
decb
lret
decb
aas
ret
inc
sbb
cmp
in
arpl
fs
xor
cmp
pop
jmp
mov
jg
ljmp
mov
leave
cmp
mov
and
lret
add
xchg
in
pop
sbb
jp
jne
push
mov
es
pop
adc
jae
sti
lcall
inc
aam
xlat
lahf
cmp
mov
inc
pop
fs
dec
inc
mov
dec
pushf
aam
outsl
out
push
popa
test
outsb
jle
sub
cmp
adc
xchg
es
mov
clc
jo
and
add
adc
stc
lods
lock
insb
sub
div
sub
add
mov
cmpb
cmp
cmp
inc
cs
lods
cmc
sbb
sbb
in
pop
jnp
jecxz
shrb
pop
icebp
mov
fstps
pop
loope
jnp
or
cmpsb
dec
fstps
mov
push
inc
cwtl
lcall
mov
add
pop
sbb
aad
js
adc
xlat
xor
stos
xchg
inc
add
int
xchg
enter
les
push
add
cmp
gs
cmc
xchg
cmpsl
sbb
xor
push
in
daa
outsl
nop
ds
jl
outsl
jb
pop
ja
pop
sbb
outsl
cmp
push
push
lock
jl
lds
adcb
cmp
iret
loop
jb
ror
loop
gs
scas
lock
xlat
fmull
mov
test
push
mov
call
mov
cwtl
add
fwait
lock
inc
cmc
fistps
lret
jg
pop
and
xchg
icebp
out
add
inc
shll
sbb
dec
arpl
inc
inc
push
push
scas
dec
cmpsb
ror
mov
cmc
mov
mov
xchg
pop
and
jo
in
mov
sub
les
mov
ljmp
lret
sub
sub
jl
sub
les
pop
add
push
xchg
jp
xor
xor
mov
mov
jnp
in
das
loopne
sbb
add
les
mov
test
cmp
sbbb
pop
stc
sti
mov
mov
jge
aas
fbld
repnz
ds
lcall
add
cmpsb
inc
cmpsl
and
out
xchg
adc
shrl
sub
pop
insl
push
repz
clc
add
cmpsb
negb
jno
or
mov
inc
mov
cmp
in
repz
lret
xor
sbb
inc
mov
push
call
hlt
aaa
in
sbb
push
xchg
pop
and
lcall
or
and
dec
xchg
adc
inc
adc
mov
rolb
mov
in
stc
add
xor
inc
and
lock
out
pop
shll
repz
mul
mov
pusha
into
add
nop
shlb
adc
cld
jmp
test
cs
pop
movsl
mov
jns
sub
jecxz
lcall
fdiv
data16
adc
call
idivl
cmp
fs
orl
out
aam
xchg
push
inc
movsl
dec
sbb
and
push
in
and
fistpl
xchg
lea
subb
add
imul
mov
dec
mov
xor
inc
lock
xor
sub
add
push
and
mov
lods
loope
aad
and
stos
cmpsb
mov
lret
mov
jb
cltd
lcall
mov
movsl
bound
cmp
sbb
insl
inc
arpl
pop
in
arpl
jnp
sarl
jge
aaa
mov
and
popf
sbb
scas
into
mov
fiaddl
cwtl
dec
scas
cmpsb
dec
and
insb
adc
xchg
leave
in
xor
daa
mov
mov
mov
sbb
popf
push
ja
and
add
aam
daa
xor
cmpsb
jp
out
inc
sti
clc
fdivs
jo
push
mov
xchg
jg
inc
sub
js
testl
lcall
sbb
xchg
jge
mov
xchg
jbe
ja
push
mov
mov
cmc
movsb
push
mov
movsb
pop
ss
fnop
frstor
push
sbb
int3
sbbb
repnz
fsub
xchg
add
jo
je
sub
js
and
mov
sub
insl
repnz
sbb
mov
popf
test
je
and
sarb
roll
adc
test
fldenv
mov
mov
and
fmull
pushf
rolb
sbb
cli
inc
xor
push
xor
xor
push
xor
or
rorb
clc
adc
xchg
pop
xor
mov
into
pop
dec
shll
or
outsb
addl
cli
sbb
or
add
ss
mov
inc
lea
jne
push
repnz
pop
xor
inc
sbb
mov
outsl
rorb
sbb
push
cld
add
adc
iret
xor
mov
test
fwait
push
xchg
pop
rcrb
and
add
ret
xor
inc
or
aas
orb
xchg
cwtl
xor
or
push
adc
xor
lock
mov
scas
stos
push
loope
jmp
jl
insb
cmp
mov
push
jbe
xor
push
fcomip
addr16
fsubrs
arpl
pop
xchg
inc
and
jmp
popf
inc
lods
fildl
mov
addr16
aad
xlat
jnp
repz
imul
mov
out
xchg
sbb
and
jns
cmp
and
out
push
push
pop
lods
add
js
data16
sti
push
jge
sub
test
mov
adc
inc
cmpsl
pop
outsb
es
shll
mov
add
dec
ret
add
or
pushf
xchg
fmuls
ds
cmp
and
mov
sbb
xchg
test
shlb
jp
mov
rclb
jno
shlb
mov
imul
push
sub
xchg
cmc
arpl
testl
int3
cmpl
sbb
out
xlat
xchg
jecxz
jmp
clc
rorl
inc
test
data16
movsl
dec
fistl
xchg
lds
ret
pop
sbb
jo
sub
iret
mov
mov
aas
imul
arpl
mov
cmp
and
jge
aas
jo
and
and
push
pop
push
imul
testb
shr
or
pushf
xor
shll
mov
cmp
clc
xchg
and
enter
sbb
outsb
aad
push
add
movsb
icebp
add
jecxz
mov
cmp
sub
cmpsl
push
mov
mov
mov
test
popf
rcrb
fs
insl
mov
xor
ljmp
call
inc
decl
std
repz
jp
pushf
adcb
adc
dec
push
fdivl
mov
lods
scas
mov
jne
insl
cmp
sub
mov
cltd
fwait
push
fdivr
scas
out
les
enter
test
add
add
and
xchg
test
add
ss
fidivs
es
enter
xor
adc
loope,pt
cmp
mov
lret
jno
jmp
mov
xor
jne
lods
leave
clc
sbb
adc
scas
dec
sbb
imul
in
cmpsb
xchg
aam
outsb
ss
std
out
ficoms
jge
in
aaa
pop
test
loopne
inc
xor
ret
mov
sub
fisttpll
int
aad
push
adc
push
icebp
add
aas
mov
inc
test
stos
xor
js
jecxz
jns
int3
mov
arpl
mov
xlat
or
mov
je
js
rcrb
cmp
stos
push
or
es
jg
into
mov
jmp
xchg
jge
cli
test
pop
lret
les
jb
cmovg
mov
or
aad
adcl
cli
clc
xchg
xchg
in
cmp
ja
ret
mov
xchg
cmp
and
sti
sahf
xor
popf
pop
popf
xchg
flds
sub
xchg
mov
jmp
cmpsl
push
sbb
inc
rorb
fstpl
xchg
movsb
pop
lock
fs
mov
out
lods
lds
fbstp
mov
shr
jbe
stos
push
cmpsl
or
gs
add
inc
and
repz
sub
inc
popf
out
jl
mov
ret
in
sbb
mov
mov
jb
pop
or
decl
ret
adcl
dec
dec
push
xchg
mov
outsb
dec
push
iret
adc
shrb
fcomip
xorb
and
and
add
popa
cmp
je
imul
or
mov
mov
dec
sub
adc
ja
push
sub
sbb
xchg
pop
dec
adc
je
daa
cmp
or
adc
sub
cwtl
jp
xorl
xlat
clc
ja
inc
stos
rcll
sub
ljmp
in
lret
dec
hlt
jl
dec
out
pxor
test
int3
mull
mov
test
xchg
rcr
test
imul
mov
shll
cmc
cmp
xor
pop
cmc
mov
rcrb
inc
cmp
out
jne
in
cli
xor
mov
xchg
daa
jb
dec
into
xchg
lds
loopne
push
pop
add
or
xlat
in
or
decl
sbb
js
and
in
clc
das
sbb
leave
xor
fiadds
cmp
xor
repnz
mov
push
loop
add
dec
adc
iret
int
mov
fdivrs
mov
xor
pop
dec
pop
das
cmp
cmp
jb
fistpll
mov
add
cli
adc
jae
pop
pusha
jae
cmpsl
sbb
dec
decb
xchg
jbe
lods
sub
xorb
imul
in
add
out
and
hlt
inc
xor
rcl
mov
scas
sbbl
out
jae
add
add
push
sbb
cmp
jecxz
adc
jmp
add
push
mov
loopne
pop
lahf
or
mov
pop
push
lcall
pop
scas
fimuls
daa
and
icebp
push
dec
mov
out
xlat
add
in
fs
imul
fdivr
xor
adc
jbe
mov
mov
icebp
in
jl
aaa
mov
mov
rcrb
inc
mov
sub
fs
sub
jge
pop
jno
leave
call
sbbl
fs
push
mov
sub
jle
mov
xor
cmpb
mov
lods
cld
fucomi
loopne
mov
sbb
es
insl
dec
pop
push
xor
and
pop
cmc
dec
inc
cmpsl
cltd
xor
call
lret
jo
inc
add
punpckhwd
push
mov
adc
int
scas
xchg
xchg
xor
adc
push
loop
inc
ss
dec
mov
mov
push
pop
pop
data16
sub
or
jp
push
stos
xor
inc
dec
mov
or
enter
stos
push
or
ds
xor
push
daa
add
cmp
mov
cmp
push
iret
mov
ja
ret
pushf
mov
add
xchg
push
mov
mov
add
sub
rorl
pop
or
push
lret
dec
push
ficompl
and
orb
or
pop
xchg
jecxz
jne
cmpsl
push
shlb
mov
int3
std
nop
subb
add
cmp
dec
cmpsb
fwait
repz
fidivrl
mov
pop
mov
mov
bound
jg
lahf
adc
jle
stos
fnstsw
std
sub
ss
loopne
sbb
jnp
pusha
scas
or
mov
sbb
push
or
or
mov
test
sbb
pop
add
push
lds
jmp
sbb
outsl
mov
into
inc
pop
jne
ja
push
lcall
adc
rcr
dec
add
and
or
cld
xor
mov
sbb
inc
mov
jge
mov
hlt
outsl
subl
sahf
cs
loop
mov
daa
insl
out
stos
rcr
or
sub
popf
outsl
aad
aaa
dec
aaa
fistpl
jns
mov
adc
mov
and
loop
test
hlt
in
test
test
mov
pop
jecxz
add
mov
jo
mov
jne
dec
aaa
xor
dec
in
lret
inc
or
inc
xor
inc
add
test
mov
sbb
mov
dec
ficoml
or
or
outsb
fcom
icebp
lret
icebp
pop
ljmp
pop
mov
sbb
push
cmp
sub
sub
sub
mov
jo
mov
aam
popf
repz
jmp
add
lret
ret
sbb
shlb
int
or
or
mov
xchg
or
lods
adc
mov
imul
sbb
popf
push
roll
and
ds
faddl
into
or
mov
or
and
add
jbe
xchg
jne
cmp
aaa
mov
push
cli
cmp
xor
pop
xor
pop
xchg
jae
inc
sbb
sub
lcall
fwait
mov
and
shl
lods
xor
and
outsl
int3
cli
call
lret
repz
call
cltd
xor
in
scas
xchg
insb
jns
imul
loop
or
das
jnp
filds
ret
sbbl
ljmp
fcom
push
enter
push
add
outsl
jp
push
stc
lret
addr16
pusha
xchg
pop
dec
push
adc
cmp
inc
dec
test
imul
mov
ja
gs
ret
or
adc
sbb
pop
data16
out
jge
fwait
and
and
mov
or
pusha
loope
xor
rcll
add
fisttpll
in
gs
sbb
hlt
into
xor
sbb
xor
arpl
inc
inc
movsl
sub
jo
or
xchg
and
fwait
mov
test
fisubrs
push
into
mov
dec
outsl
mov
cmp
jae
nop
xor
or
sub
cmpsb
pop
mov
nop
adc
pop
xor
and
pop
mov
les
nop
sbb
jne
cmp
xchg
inc
fadds
outsl
inc
pop
aas
pop
mov
push
add
adc
out
push
mov
inc
popa
repz
incb
sbb
scas
in
sbb
or
in
sub
insb
sub
out
push
leave
dec
fldenv
mov
cld
leave
cmp
das
jg
roll
shl
sahf
jne
push
arpl
test
adc
not
pop
lea
shr
mov
pop
xor
gs
push
clc
popf
mov
pusha
sti
cld
push
iret
shrb
lcall
jg
mov
test
add
mov
fimuls
pusha
jmp
lods
outsl
iret
rcrb
sub
cmp
stos
nop
push
lret
mov
lea
push
and
sarb
sub
dec
out
pop
jge
sub
dec
jp
pop
xchg
movb
sub
test
loope
jg
mov
popa
jp
xor
mov
mov
fsubrs
push
es
push
pop
fidivs
cmp
stc
sbb
or
pop
inc
inc
mov
popa
lret
sbb
inc
gs
movsl
pop
out
pop
shlb
mov
clc
mov
pop
mov
and
or
bound
adc
dec
js
fcoms
cltd
ljmp
pop
mov
jns,pn
cs
sub
pop
jb
test
nopl
push
add
mov
inc
mov
popf
lret
cli
pop
pop
int3
std
ds
or
das
js
mov
stc
lds
xchg
and
cmp
mov
push
push
int
sub
pop
push
out
mov
adc
inc
jb
and
pop
jmp
imul
movsl
xchg
mov
fisubrs
call
xor
imul
jg
push
aam
out
out
push
jp
lods
dec
int3
xlat
aas
mov
xor
xchg
push
xor
pop
stc
mov
test
lods
add
loop
xor
inc
icebp
movhps
xchg
and
push
xor
and
mov
aam
mov
dec
lret
out
cld
pop
sbb
mov
pop
mov
setns
push
mov
mov
jle
lcall
fnsave
xor
pop
xor
xchg
pushf
jmp
xorl
mov
rclb
mov
cwtl
pop
mov
shlb
ljmp
repnz
fucomp
cmpsb
xor
push
mov
lcall
aam
fcmovnu
push
jmp
mov
sub
rorl
pop
adc
sbb
repz
int3
lds
adc
test
stos
fwait
setge
pop
loopne
add
call
push
ss
add
in
sub
scas
ss
aaa
sbb
cwtl
adc
lea
add
mov
push
lods
pop
imul
xor
sbb
std
mov
ret
push
cltd
and
movsb
in
jecxz
fdivr
and
lcall
xlat
mov
mov
mov
pop
mov
inc
lods
push
pop
or
ffreep
dec
xor
mov
out
js
mul
xchg
push
aas
xchg
ss
pop
lea
movsl
fldcw
lods
test
mov
cwtl
fbstp
int
sbb
pushl
mov
xchg
data16
jp
fildl
or
push
call
rol
dec
adc
add
out
int
sbb
aad
loopne
cli
jne
xor
mov
cmp
push
sbb
fcmovb
stos
rorb
push
mov
push
dec
or
xor
or
jne
into
pop
das
hlt
pop
jae
data16
jo
test
icebp
push
sbb
test
sub
push
jns
mov
lahf
and
xchg
popa
scas
popf
test
test
popf
push
or
xchg
dec
dec
enter
adc
or
mov
insb
jecxz
int
aam
addl
xor
scas
movaps
into
push
fwait
lds
cmpsb
or
lea
and
mov
imul
push
leave
xor
ficoml
fidivrl
sarb
dec
in
mov
mov
test
cmp
jb
fldenv
and
xor
jg
xor
xchg
xor
imul
mov
daa
loope
sbb
push
stos
cmp
into
jle
fimull
push
leave
sar
scas
or
pop
sti
call
sarb
js
dec
data16
jbe
gs
inc
call
xchg
pop
cs
push
clc
or
push
sub
mov
outsb
add
dec
add
inc
sbb
pop
ficoms
and
loope
or
int
xchg
daa
bound
sbb
mov
scas
cwtl
sahf
mov
mov
aam
push
in
scas
adc
xchg
pushf
pop
icebp
mov
movsl
sbbl
lods
sbbb
xor
imul
je
dec
in
repnz
hlt
push
sbb
add
push
sbb
test
int
xchg
mov
and
insb
and
cmp
scas
adc
out
mov
stc
dec
jp
movsl
inc
jl
sub
xor
xchg
add
or
leave
mov
xor
push
ds
data16
inc
fcom
mov
pusha
imul
xor
mov
add
std
mov
rcr
repz
inc
jmp
aas
lods
xchg
stos
jg
mov
push
outsl
fisubs
adc
ficompl
rol
dec
mov
push
add
pop
cmpsl
shrb
repnz
lods
lods
inc
jmp
andl
xchg
and
imul
add
add
push
push
jns
fnstsw
outsb
stos
add
in
outsb
push
das
dec
loop
jb
jl
addr16
cltd
cli
dec
ljmp
jae
out
ret
sub
ret
mov
pop
mov
daa
pusha
cmpsb
push
jg
ror
pop
dec
inc
jbe
jbe
paddsw
cltd
iret
mov
sahf
lods
inc
int
sahf
inc
xchg
cmpsw
rclb
lock
das
hlt
negb
xchg
sub
gs
lret
iret
push
xchg
jge
jecxz
das
push
setge
orl
pop
inc
ret
repnz
mov
data16
pop
daa
mov
xchg
jmp
dec
les
ss
imul
rorl
jp
jno
jg
push
lahf
repnz
dec
fistpll
cld
fs
jp
mov
ss
pop
stos
jle
xchg
xchg
fisubs
pop
cmpsb
imul
cmp
dec
sahf
int3
std
mov
orb
dec
jae
gs
or
and
push
insl
xchg
daa
gs
movsl
sub
pop
inc
movsb
cltd
push
xor
inc
daa
andl
xor
sub
lds
popf
xor
or
aad
pop
and
mov
sbb
inc
jl
mov
mov
add
je
push
xor
pop
add
jecxz
mov
test
jae
int3
mov
gs
movsb
out
arpl
test
stos
xchg
aam
xchg
lret
inc
test
pop
or
xor
stos
in
sbbl
addl
inc
in
and
int3
push
outsb
popa
adc
mov
or
add
pop
xchg
mov
cmpsb
test
push
mov
mov
cmp
into
jmp
out
das
mov
mov
adc
pushf
push
minps
fsts
and
mov
cs
inc
nop
pushf
jg
sti
dec
push
sub
mov
insl
imul
push
mov
mov
mov
dec
bound
xor
cmp
cmp
sbb
loop
stc
mov
xchg
int
xor
jecxz
lret
jb
cmp
jl
negl
jbe
jo
outsb
fadd
mov
xchg
mov
xor
in
jge
shl
lock
push
fnsave
test
test
xor
mov
jo
sbbl
xchg
pusha
mov
jbe
sub
inc
repnz
lahf
xor
fdivrs
xchg
test
cli
push
adc
pop
jle
push
idivb
sub
jecxz
xor
push
inc
aas
push
inc
int
shll
adc
fnstcw
in
inc
mov
cmpsb
cli
push
rol
ror
cltd
mov
or
je
push
outsb
mov
push
pop
or
mov
aad
inc
repz
mov
sbb
inc
test
xor
sbb
shll
push
xchg
mov
sbb
pop
lcall
xor
adc
cld
stc
cmp
mov
push
add
mov
shr
pusha
mov
enter
mov
adc
aam
into
cmp
jmp
jl
or
mov
stos
jns
or
xchg
lcall
jmp
or
jge
nop
push
adc
add
xor
push
inc
cmp
loop
push
inc
add
scas
testl
ret
pop
jp
adc
xchg
add
dec
jnp
loope
in
xor
sti
and
adc
fwait
int3
hlt
jbe
sbb
nop
jge
ljmp
xor
cmpsb
and
sti
jae
pop
pop
pop
scas
icebp
jo
adc
lds
repz
cltd
sub
push
mov
push
xor
lock
sbb
shl
js
jne
jmp
dec
sbb
inc
jmp
in
je
testb
push
dec
mov
push
fcompl
dec
push
mov
mov
mov
fnstenv
je
add
push
popf
mov
mov
cmpsl
dec
xchg
cmc
iret
jmp
pop
jmp
icebp
push
mov
mov
pop
cmpsb
pop
sarb
cmc
lds
jecxz
popf
stos
cmp
fistl
repz
fcoms
pop
mov
xor
inc
rcrb
ss
xor
lods
pop
popa
imul
dec
pop
adc
test
lods
adc
xchg
in
jle
movsl
lcall
push
sub
and
jge
jno
jne
jbe
imul
popa
bound
xor
inc
mov
jmp
mov
js
jae
cmp
sub
negl
pop
cmp
out
cltd
and
inc
aaa
dec
int
add
inc
and
je
cmp
sarb
call
push
ss
push
adc
pop
push
pop
clc
call
pusha
pop
mov
cmp
in
inc
dec
sbb
push
jmp
xor
ljmp
outsb
xor
mov
roll
adc
jecxz
jecxz
stos
lahf
fiadds
movsl
push
mov
sub
pop
jns,pn
mov
mov
pop
pop
add
mov
push
xchg
mov
mov
aad
push
loope
mov
adc
inc
insb
pop
js
jl
ja
push
lcall
pop
pop
add
xchg
inc
ja
insl
mov
jbe
adc
mov
xchg
negl
imul
inc
or
push
push
lret
call
into
xor
repnz
pop
mov
repz
aam
inc
fcmovu
nop
sbb
cmpsl
push
xchg
mov
jg
sahf
scas
and
repnz
lret
iret
movsl
jns
fidivl
push
sbb
xchg
sbb
lahf
imul
cmp
fwait
pop
sub
sbb
push
add
addb
ret
loopne
jae
jmp
jge
sub
pop
aaa
mov
xchg
add
xor
dec
nop
jo
sti
push
mov
mov
das
inc
mov
inc
lods
jg
lahf
scas
iret
xchg
push
call
add
push
sbb
cwtl
bnd
imul
cli
mov
rorb
popf
movsb
daa
rcl
or
popf
stos
and
pop
sub
in
test
jne
es
jmp
stos
cmpsb
mov
cs
int
insl
or
pop
clc
rol
mov
call
adc
addl
das
loope
push
sbb
dec
inc
mov
xor
movsb
pusha
mov
aad
or
sub
int
pusha
mov
sub
mov
into
inc
scas
lcall
or
pop
les
jno
xchg
mov
pop
nop
inc
lods
push
mov
lea
lea
adc
mov
lahf
hlt
xchg
in
mov
pop
mov
sub
repnz
and
ficoms
adc
stc
pop
pop
in
push
and
in
ljmp
int
push
and
push
mov
adc
sar
gs
push
mov
imul
pop
test
sub
clc
iret
cmc
pop
pop
push
jmp
mov
jge
jge
pop
repz
or
xchg
leave
mov
sbb
scas
fs
xchg
mov
out
dec
cmc
and
jl
test
scas
push
jg
sub
or
mov
inc
adc
push
push
repnz
insb
jmp
and
out
fnsave
fcoms
jmp
cmpsb
push
icebp
stc
popf
add
loope
loope
sbb
repnz
call
loopne
out
mov
inc
xchg
fildll
cmp
mov
bound
mov
imul
push
repnz
sub
inc
jl
pop
movsl
stc
cmc
xlat
inc
mov
push
or
cmp
enter
lret
fists
mov
lcall
imul
inc
mov
lret
dec
daa
dec
sub
imul
lods
std
xlat
cld
dec
repnz
inc
fists
pushf
jle
jmp
pop
adc
aaa
movsl
add
jmp
sbb
push
insb
lahf
mov
mov
insb
es
xorl
popa
leave
stc
xor
cmp
mov
xchg
push
rcl
les
inc
into
cmp
mov
or
inc
or
les
xor
lods
cmp
or
mov
push
push
jae
push
test
pop
aam
dec
imul
mov
jle
mov
shlb
dec
in
pop
les
dec
mov
xorl
mov
leave
fmul
or
jb
or
jno
aam
push
ret
inc
or
popa
sub
mov
lods
orl
mov
xor
insl
out
aas
out
jecxz
fadds
xchg
stos
jge
int
push
loope
jl
rol
mov
ret
fildll
push
std
jmp
in
movsb
fs
insb
aaa
jecxz
and
mov
push
jo
xchg
or
jmp
mov
xchg
inc
jae
stc
push
jge
jb
sub
adc
leave
xchg
outsb
popf
ror
loop
push
aas
jp
sub
push
fnsave
inc
cmp
push
and
pop
xchg
pop
mov
ret
inc
aam
iret
push
cmp
and
loope
outsb
movb
push
fdiv
aad
pop
movsb
xchg
popf
xchg
sbb
mov
sahf
and
dec
jbe
ss
out
xchg
lock
shrl
ret
inc
scas
ljmp
fsts
mov
stc
pop
out
rorb
es
adc
movsl
jnp
xchg
addb
test
leave
jle
and
dec
loop
sub
xchg
es
ret
jne
pop
aad
pavgw
mov
and
in
inc
stc
push
sub
shll
clc
xchg
insl
mov
jmp
pop
call
imulb
mov
mov
push
or
fcomps
add
adcl
out
adc
pushf
and
xchg
and
in
cmp
ret
xchg
add
js
sahf
jo
stc
pop
test
xor
into
icebp
je
or
dec
loopne
xchg
ja
dec
jbe
out
loopne
pop
outsb
lods
mov
mov
xchg
divb
imul
scas
inc
movsl
jl
push
or
rorl
pop
jne
sub
cwtl
cmpsb
add
int
movsl
xor
fistps
adc
jl
loope
jb
pop
and
cmp
daa
imul
push
mov
add
imul
std
cmpl
outsl
mov
inc
add
pop
push
inc
mov
je
mov
cmpsb
push
and
inc
data16
jecxz
xor
sti
pushf
cmp
adc
jbe
cmpsb
add
psraw
pushf
cmp
cli
inc
jno
pop
shlb
and
sub
jle
push
mov
lods
cld
mov
sbb
xchg
nop
lods
mov
push
loopne
and
cmpsl
xchg
add
pop
loope
mov
fsubrl
jmp
mov
mov
lea
lahf
cmpsl
mov
cmp
xchg
mov
xchg
rolb
xor
cmp
sbb
dec
int3
cmpsl
adc
lods
xchg
fnstcw
xchg
insb
xchg
inc
and
repz
sbb
sbb
mov
pusha
shll
scas
xor
movsl
inc
inc
or
inc
insb
lods
inc
pop
pop
cmp
add
mov
out
pop
sbb
stc
inc
cmpl
testl
andb
ret
fdivrl
dec
fdivp
xchg
push
cwtl
jmp
je
dec
add
mov
ss
inc
push
out
outsb
push
lret
dec
shrl
and
mov
dec
fdivrs
xor
test
cmp
cmp
out
or
dec
sbb
inc
sbb
sti
push
test
mov
pop
mov
push
inc
repz
aam
mov
and
or
cmp
and
leave
adc
shll
dec
pusha
sbb
lods
ret
mov
lock
xchg
xchg
adc
lods
lds
xor
cmp
mov
mov
lcall
jnp
jle
rcr
ljmp
mov
je
jae
int3
sbb
movsb
xchg
not
mov
cli
dec
in
jo
cltd
jmp
or
movsb
stos
jle
mov
imul
xor
je
jns
and
and
and
push
aad
iret
add
inc
aas
scas
jnp
mov
movsb
inc
call
stos
add
frstor
dec
mov
sbb
sub
jg
lahf
pop
mov
outsl
fstpl
lret
pop
add
push
push
add
loopne
push
or
arpl
ret
insl
push
aaa
es
sub
clc
pop
and
sub
xor
pop
inc
subl
mov
data16
adc
js
dec
das
scas
push
push
dec
mov
mov
lods
ja
mov
insb
fiaddl
cmpsb
aas
lods
mov
xchg
and
imul
pop
imul
repnz
loop
test
lcall
ret
xor
mov
cwtl
and
adc
jmp
push
fistps
mov
loop
in
aaa
das
pusha
sahf
fisubrl
cmc
dec
cmp
mov
jle
pop
loope
fdivrs
jl
mov
xor
mov
sbb
pop
jne
jecxz
pop
orb
dec
push
mov
adc
shrb
sub
sbb
pop
mov
dec
push
pop
push
inc
and
or
into
out
inc
xchg
insb
lock
xchg
xchg
lcall
lea
movsl
rcrl
push
jle
push
or
insl
mov
inc
mov
jge
xchg
mov
push
std
test
popa
outsb
cmp
add
add
rolb
test
jge
jno
jo
movsl
jbe
xchg
pop
mov
xchg
push
xorl
xchg
mov
sbb
hlt
add
rcr
ljmp
push
stos
mov
jle
std
xchg
loopne
imul
push
dec
or
fnstcw
sub
and
mov
pushf
shrl
das
push
mov
adc
ss
leave
dec
bound
cltd
rcl
cmp
mov
xchg
sub
dec
mov
and
xchg
cltd
adc
adc
push
mov
jge
pop
push
test
incl
lahf
xor
or
inc
xchg
add
repnz
xor
dec
sub
push
mov
testl
or
or
inc
and
jge
pop
cli
dec
add
add
sahf
push
repz
movsb
out
pop
jecxz
and
mov
imul
jo
xor
add
sbb
jle
cld
cmp
fnstsw
lahf
inc
push
inc
or
inc
fadd
cmp
test
xchg
inc
imul
or
mov
push
pop
pop
cli
mov
fwait
lret
mov
fcompl
and
jle
jge
jnp
push
cmc
lock
jbe
out
flds
lock
ror
hlt
dec
sti
or
fsub
sbb
inc
pop
xchg
jmp
insl
xorl
and
arpl
lahf
into
rolb
cmp
jmp
in
push
mov
inc
addr16
pop
sub
pop
cmpsl
rcrl
movsb
rorb
xchg
xchg
data16
cmp
cmc
cld
xchg
inc
xor
dec
cli
mov
outsb
sahf
call
enter
ss
sahf
xchg
cmp
pop
xchg
int
lcall
mov
pop
fsubl
pop
pop
jnp
xchg
adc
scas
andb
xor
mov
sub
jno
lea
call
add
cli
inc
xor
cwtl
lds
iret
inc
jne
mov
push
cwtl
imul
cmp
inc
adc
scas
cmp
std
dec
iret
or
xor
call
push
xor
inc
jle
and
cs
in
push
dec
mov
es
sahf
popa
push
and
fsub
push
xchg
ret
pop
pop
testl
ja
lcall
iret
jno
rolb
lods
ss
lods
aad
rcrb
jle
stos
ffreep
fimull
adc
fs
jl
cltd
insb
lea
jge
scas
pop
nop
add
fsubrs
fisubrl
push
fsubrs
mov
mov
cld
sbb
stos
imul
dec
jnp
std
icebp
jne
dec
adc
jl
gs
xor
or
sbb
push
mov
out
xchg
push
jge
lock
imul
movsb
out
adc
jmp
push
mov
jb
xorl
mov
shl
add
mov
cmp
test
inc
icebp
rolb
inc
jl
in
or
xor
or
les
fidivrl
mov
cltd
jbe,pt
and
lcall
addl
in
loopne
push
lods
lcall
in
ljmp
mov
cwtl
mov
pop
std
stos
cmpsl
push
sbb
push
xor
in
mov
fs
arpl
jnp
cwtl
dec
pop
cmp
add
test
jmp
das
shl
fs
or
xor
push
cmpsl
out
jb
fidivrs
mov
dec
ss
inc
rol
mov
mov
sbb
int3
lcall
pop
pop
mov
adc
loopne
adc
mov
imul
pop
adc
xor
pop
sub
aas
add
mov
push
mov
imul
dec
sub
push
adc
out
imul
sub
xchg
aad
or
sahf
pop
jmp
push
and
inc
or
inc
sbb
lods
mov
xlat
lods
or
jl
loopne
insb
lcall
loopne
mov
dec
mov
jle
cwtl
add
sub
repnz
iret
subb
or
clc
into
inc
int
push
pop
insb
sbbl
iret
inc
pop
cmp
insl
jecxz,pn
and
ret
inc
cmp
push
imul
scas
pusha
mov
out
lret
xor
loopne
imul
xlat
pop
fisubs
lock
stos
push
les
jns
or
int3
sub
push
lock
call
xchg
ficompl
or
aam
test
dec
xchg
inc
mov
repnz
pushf
leave
out
adc
mov
addr16
icebp
mov
add
test
push
lods
adc
adc
mov
or
push
pop
dec
imul
mov
icebp
sbb
xlat
shlb
ja
jb
ljmp
pop
stc
xchg
jle
push
pop
adc
jnp
into
shl
push
push
cmp
cmp
cli
pop
es
cmp
xor
mov
subb
sub
adc
pop
jnp
hlt
mov
jnp
xor
push
pop
aas
fcomp
push
mov
add
bound
les
xor
and
mov
mov
add
sub
add
ret
jo
iret
sbb
lods
xor
push
xchg
jb,pn
mov
jecxz
lock
jge
inc
inc
push
cmp
dec
jl
loope
movsl
xstore-rng
cmpsl
inc
jno
jne
mov
in
dec
int
xor
lret
inc
mov
sub
stos
cmp
enter
mul
das
jns
jb
int
dec
mov
dec
iret
mov
add
aam
or
data16
sbb
pop
lret
mov
fs
dec
lea
loopne
add
pop
jae
test
jae
sbb
outsb
adc
xchg
in
out
adc
bnd
ret
incb
rorb
popf
add
cmp
shl
scas
fistpll
jmp
or
scas
testb
lods
stos
arpl
jno
scas
inc
mov
dec
and
add
xchg
pop
ficoms
ret
push
inc
cmp
icebp
pop
jmp
arpl
movsl
push
push
adc
push
popf
icebp
xchg
mov
stc
rorb
jnp
push
mov
xor
jmp
cmpsb
xchg
pop
fcmovnbe
addl
dec
mov
testl
jp
cmp
mov
push
pop
mov
roll
js
fs
lret
add
or
or
clc
mov
orl
pop
shlb
je
in
pushf
mov
ja
jle
xchg
xlat
rclb
lret
mov
xor
dec
and
rcll
ljmp
out
sub
stc
jg
xor
cmc
inc
dec
mov
in
lock
fisubl
addl
xchg
and
sarl
pop
mov
int3
inc
pushf
imul
add
data16
je
ja,pt
fs
xchg
xchg
pop
add
mov
xor
push
roll
ret
push
xchg
pop
sbb
xor
pushf
inc
or
cmp
fnsave
dec
out
lock
mov
and
jl
and
jmp
sub
test
adc
in
mov
popf
fwait
shlb
xchg
int3
sti
xor
shrl
mov
aad
sbb
xchg
inc
shll
lahf
mul
das
andl
stos
ret
jne
out
orb
in
fistps
cwtl
les
stos
mov
jo
ljmp
add
add
leave
ss
sarl
outsl
sbb
fdivrl
andl
or
enter
adc
ljmp
mov
push
mov
jae
adc
mov
imul
jae
cltd
adc
cli
ret
pop
icebp
aas
add
fcoms
dec
incl
fwait
jno
add
pop
fs
mov
xchg
push
int3
push
add
out
mov
add
cmp
insl
ja
xchg
stc
xchg
cltd
fisubs
inc
rorb
cmpsb
fdiv
pop
jge
jno
push
call
dec
sub
ljmp
add
cmc
mov
sbb
iret
in
push
pushl
cmp
xor
paddw
adc
je
mov
push
cs
push
orl
mov
outsb
sbb
lds
pop
cld
ja
fs
leave
sub
out
cwtl
stos
inc
mov
mov
adc
nop
mov
mov
sub
mov
or
lock
mov
mov
leave
xchg
shlb
scas
clc
push
xchg
dec
xor
hlt
push
jge
pop
lcall
popf
mov
pop
flds
jle
xchg
mov
in
adc
lods
incb
shrl
cmp
inc
les
cld
jb
stos
int3
call
fdivrs
mov
xchg
repnz
inc
aad
pop
insb
outsl
fucomi
push
jno
orb
xchg
and
cmp
push
lret
inc
xchg
add
mov
add
xchg
scas
or
mov
ret
jge
lret
es
xlat
adc
test
lcall
cmp
adc
out
mov
sarl
mov
mov
push
jno
nop
jmp
enter
stc
inc
xchg
mov
mov
repnz
push
js
loope
mov
fldcw
jg
add
add
arpl
popa
fists
std
repnz
pop
aad
mov
lret
mov
or
addr16
pop
sbb
cld
fwait
lahf
add
inc
xchg
dec
xchg
sbb
and
or
pop
pop
cmp
out
inc
push
loop
cli
scas
lcall
push
stc
js
fimuls
arpl
fs
xor
cmp
sub
xchg
mov
rcl
pop
mov
or
xlat
stc
rcrl
mov
cmc
mov
insl
cmp
inc
mov
popa
cltd
dec
sub
sub
mov
mov
push
jecxz
ret
pop
roll
push
mov
sarb
pop
lea
popf
roll
jae
sub
ss
inc
ja
iret
add
lahf
xchg
lea
scas
dec
cmp
sub
mov
mov
sbb
push
dec
mov
jnp
push
icebp
jecxz
xchg
sbb
cmp
lds
inc
push
xchg
shrb
cltd
dec
lcall
jns
mov
std
or
and
cmpsl
ret
adc
sahf
int
jge
gs
or
inc
addb
xchg
int
xchg
jbe
sbb
dec
mov
jle
sti
fistps
jae,pt
pop
and
push
xor
aas
mov
jo
enter
mov
mov
dec
fistpl
lret
xchg
sbb
dec
jno
loopne
dec
sub
and
xchg
push
jge
or
pop
and
jp
sub
fistl
jae
dec
mov
loope
mov
mov
jae
pushf
xor
xchg
cmpsb
insb
ret
enter
push
sub
inc
mov
mov
inc
xchg
loop
rorl
mov
filds
pop
mov
jo
xor
or
mov
ficompl
xor
mov
dec
fldcw
loope
inc
jne
popf
mov
nop
jb
pop
repz
std
xchg
pop
stc
jbe
jmp
fstpt
int
sub
xchg
negl
xchg
mov
or
stos
and
ss
ret
jmp
xor
cmp
mov
andb
das
lods
rclb
mov
test
pop
cmpsb
dec
lods
xor
aad
std
and
jbe
mov
fincstp
je
or
aaa
lds
mov
mov
pop
pop
xchg
arpl
jge
fldenv
sahf
shl
and
xchg
int3
push
int3
in
movsb
push
xchg
movsb
push
and
push
dec
and
addr16
jge
mov
xor
mov
push
pop
jl
addr16
cmpsb
call
loope
sub
add
cltd
cmpsl
jge
lret
push
das
shl
xor
ret
outsb
sbb
mov
subl
icebp
pop
lods
jecxz
mov
daa
push
mov
mov
pushf
pusha
sbb
test
subl
sub
iret
popf
aam
and
mov
or
cwtl
mov
pusha
adc
lret
adc
fiaddl
mov
lcall
push
dec
xlat
sub
lock
sbbb
cmp
dec
push
nop
xchg
fimull
mov
dec
xor
inc
push
sbb
inc
call
ds
decl
loop
sbb
sbb
std
jo
loopne
inc
fsubrs
and
jmp
cmp
inc
scas
in
jne
test
leave
jge
inc
mov
nop
jnp
push
and
xor
or
je
fstp
pop
pop
aam
inc
fbstp
sbb
addb
push
cmp
dec
rorl
inc
fsubl
cmp
rorl
dec
mov
fsub
int3
inc
testb
sub
fincstp
mov
fnstsw
imul
or
pop
lds
test
bound
mov
cs
cmp
cli
test
xchg
cmc
in
and
stos
pop
cli
lcall
sub
push
mov
pop
jge
repnz
lret
adc
cmp
ss
popf
vpsllw
add
cmp
inc
inc
std
pusha
stos
fsub
mov
mov
mov
xchg
and
fmul
cmp
and
inc
shrl
jg
inc
cwtl
insl
cmpsl
popa
jnp
out
insb
shlb
lcall
sub
idivb
test
dec
daa
cmp
sub
fcomi
jge
mov
out
stos
push
imul
call
dec
mov
mov
clc
push
pop
xchg
lea
cmp
pushf
jmp
jg
mov
outsl
cmpl
dec
or
hlt
ljmp
xchg
push
rcrl
inc
cli
leave
pop
jg
mov
mov
in
inc
sub
loope
adcb
dec
popa
xchg
daa
test
mov
or
lcall
inc
inc
cmpb
xlat
or
dec
sub
dec
jmp
scas
rclb
pop
lcall
out
sbb
push
lock
xchg
xchg
divl
std
dec
sub
icebp
mov
fiaddl
push
mov
repz
jmp
test
dec
fwait
arpl
ds
push
push
loop
adc
loopne
hlt
out
pop
mov
das
jp
cli
cwtl
in
push
bound
loopne
pop
xchg
xchg
aaa
mov
test
cmp
fwait
popa
pop
xor
jb
ret
push
pop
test
stos
sub
dec
lfs
out
test
adc
push
bound
push
je
mov
xchg
dec
mov
lret
and
movsb
jne
add
cmpsl
adc
pop
scas
add
and
inc
mov
xor
or
xchg
shrl
rorb
pop
dec
cmovae
dec
pop
xor
dec
insb
mov
aad
pop
imul
fsts
in
arpl
adc
or
lahf
xor
pop
mov
push
fidivrl
dec
pop
mov
inc
jle
and
pop
add
adc
inc
popa
jg
sbb
xchg
fld
jg
mov
dec
shrb
in
add
mov
cmp
or
cmp
mov
mov
push
pop
jmp
mov
out
xor
fnsave
in
iretw
xchg
cmc
fdivr
enter
sub
int
cli
test
pusha
aam
cld
dec
push
fsubrl
push
inc
nop
mov
sub
sbb
jae
fbstp
dec
pop
and
pop
dec
inc
fisubl
enter
pop
fs
imul
call
dec
movsl
outsl
or
pop
repnz
loop
pop
fcomps
jg
shlb
popa
ds
mov
repz
icebp
xchg
adc
mov
out
js
pusha
sbbb
add
lods
push
jecxz
test
ja
add
xchg
jno
adc
add
jp
cmp
mov
inc
mov
cli
daa
and
cltd
push
js
mov
pop
sbb
cmp
or
shrb
xchg
in
xchg
pop
aas
and
out
or
lods
push
sbb
cmpsl
sub
loope
cmc
jge
call
mov
mov
xchg
mov
repz
xor
inc
out
dec
insb
mov
loope
sarb
fwait
push
jnp
fsubl
out
scas
ss
dec
mov
add
lods
mov
shlb
jp
fdivrl
mov
faddl
adc
fs
adc
mov
mov
or
lahf
adc
push
push
adc
add
divl
lods
cmp
jmp
xchg
loopne
mov
movsb
lret
mov
xchg
xchg
in
pop
lcall
or
or
push
inc
push
ss
sbb
pop
sbb
addr16
adc
nop
dec
leave
jae
xchg
fistpl
repnz
mov
dec
ds
cld
add
icebp
cmpsb
js
insb
int
stc
push
arpl
xorb
and
das
pop
ds
enter
and
ss
jge
daa
fstpt
or
sub
pop
movsb
lret
aaa
lret
xor
orb
into
xor
sub
push
or
jp
xor
mov
adc
rcr
cmp
xor
mov
aam
std
jmp
loopne
fdivp
aas
jbe
or
rcl
stos
in
nop
sahf
stos
jno
clc
es
cmp
mov
cld
add
push
lea
xor
inc
jge
cmp
push
mov
aam
testl
cmpsl
lret
add
rclb
xor
dec
loope
push
in
mov
sbb
sti
testb
sarb
in
lahf
mov
mov
clc
xor
cmpsl
roll
fwait
popa
fisubs
mov
mov
je
inc
mov
mov
repz
sarb
pop
mov
scas
cmp
int3
cmpsb
xchg
jae
pop
jo
sub
push
xchg
mov
mov
lds
sarb
mov
mov
fs
and
and
dec
or
rclb
cwtl
adc
jno
sbb
mov
into
cli
pop
and
jmp
addb
jmp
iret
inc
imul
and
dec
inc
insl
mov
test
push
into
or
jno
in
or
cmp
daa
mov
jge
cmp
adc
cld
mov
or
and
inc
outsl
mov
push
cmpb
jno
loopne
sub
mov
fstpt
je
ds
jnp
lret
xor
push
and
rcrb
push
mov
mov
mov
in
cmpl
xchg
mov
lds
out
shll
sbb
aam
inc
jbe
mov
mov
xchg
pop
fisubl
dec
aam
cmp
or
adc
test
cmp
xor
gs
cld
mov
xor
pushf
and
loopne
fidivl
rolb
adc
xchg
inc
dec
cmpsb
add
pop
scas
mov
mov
lds
cld
insb
lock
adc
pop
mov
xor
push
xor
pop
jae
cmpsl
dec
mov
xchg
mov
xor
dec
jb
inc
test
jne
xchg
mov
aaa
nop
insl
int
in
in
adc
sahf
push
hlt
in
dec
mov
pop
ret
neg
daa
cmp
aad
fs
fisubrl
sbb
jp
inc
sub
mov
stos
cli
ja
inc
push
push
test
iret
or
jecxz
cld
aam
mov
add
test
and
lods
add
mov
sub
or
iret
or
mov
inc
dec
pop
or
cmp
in
mov
sahf
or
cmp
mov
loop
mov
fstpl
loopne
jg
push
sub
fwait
pop
inc
mov
push
mov
jns
mov
cmp
inc
aad
std
pop
sub
pop
cmp
inc
xrelease
add
mov
mov
pop
mov
mov
mov
push
std
or
cltd
cmpsl
outsb
mov
xor
push
add
adc
popa
xchg
stos
cli
mov
repz
xchg
out
into
fimull
movsl
fcmovne
fldcw
mov
jae
dec
popa
dec
bound
out
mov
iret
adc
test
xor
mov
xchg
pop
test
pop
inc
xchg
jbe
daa
pushf
je
imul
adc
dec
iret
lcall
pop
pop
lret
or
pushf
add
mov
fcoml
xchg
pop
mov
inc
push
dec
mov
pop
in
xor
ja
ret
insl
fs
scas
dec
insb
cmp
fs
or
imul
xor
jecxz
adc
inc
test
shr
dec
xchg
rcll
xchg
pop
adc
test
xor
into
loopne
imul
push
sbb
push
sti
inc
sub
sbb
in
xchg
mov
xor
les
cmp
adc
fildl
adcl
and
jmp
ss
mov
iret
sahf
or
push
test
rorl
mov
xor
lret
leave
pop
cmp
pop
inc
jp
mov
push
ret
sbb
push
lods
and
stc
inc
mov
mov
push
test
xor
jle
add
cmpsb
and
js
outsb
xchg
jno
inc
or
push
nop
adc
aaa
push
inc
push
ja
cld
lock
addr16
pop
and
lods
push
shll
adc
out
adcb
xchg
clc
into
inc
ljmp
scas
cltd
dec
push
cmp
sbb
std
mov
jns
out
mov
adc
imul
sbb
movsb
pop
popa
cmpsb
xor
and
mov
insb
outsb
pop
aas
stc
aaa
adc
std
mov
enter
cmpsb
pop
test
jbe
aas
inc
cmp
out
adc
xor
mov
mov
out
fucom
mov
jmp
gs
ret
lret
stos
mov
lahf
cmp
pop
push
in
sub
jmp
popf
je
iret
imull
insl
movsb
faddl
adc
jmp
xchg
fildll
sub
jns
adcl
movsb
and
scas
loop
mov
cwtl
mov
add
xor
mov
push
pop
mov
jmp
sarb
movsl
xchg
xlat
dec
add
lahf
mov
xor
mov
cld
movb
lret
and
insb
popf
subps
xor
mov
out
js
adc
les
or
loop
mov
xor
and
sti
scas
orl
mov
std
mov
insb
push
data16
mov
int
push
pop
and
les
sub
cwtl
jbe
sub
rcrb
pop
fs
mov
mov
popf
cmp
std
movb
loopne
in
inc
int
sub
sub
xchg
dec
xor
dec
xor
movsl
dec
mov
sbb
sub
push
mov
mov
xor
xchg
add
or
mov
pop
mov
jmp
xchg
push
jno
adc
cltd
mov
shll
fwait
xlat
insl
test
sub
andl
js
scas
xchg
int3
mov
or
in
and
mov
dec
cmp
pop
inc
xor
in
or
sti
int
add
stos
and
fwait
movsl
mov
push
and
insl
scas
fcmovnbe
push
aad
je
pop
pop
in
dec
gs
jns
sub
adc
xlat
int
lea
lods
xchg
out
stc
cmc
test
push
xor
mov
ljmp
inc
arpl
push
or
xor
cltd
push
mov
push
cmc
inc
subl
fwait
adcl
icebp
xchg
sub
cmpl
movsb
mov
push
das
dec
cltd
inc
and
fcompl
js
js
scas
mov
pop
jno
rcrl
push
scas
ss
iret
clc
sub
ss
mov
cltd
es
sbb
into
daa
or
jne
and
jno
shlb
lds
cmc
jnp
mov
xchg
lcall
daa
mov
adcb
shll
js
adc
cs
in
jmp
nop
or
adc
mov
adc
pop
std
xor
add
scas
nop
inc
ud2
cwtl
or
out
hlt
xchg
pop
clc
push
das
out
jae
push
mov
sbb
sub
nop
inc
rcr
rcrb
lahf
loop
jge
in
lcall
mov
mov
arpl
jp
lods
add
loopne
mov
in
cmp
add
jmp
lds
dec
int
sub
pop
ficoms
inc
adc
or
movsl
ret
and
inc
add
push
daa
sub
fmull
add
ret
repnz
xsavec
xchg
ficoml
jg
add
icebp
cs
mov
add
cld
bsf
vpsubb
stos
adc
bound
lea
pop
pop
out
inc
pop
loop
scas
loope
push
and
mov
cmp
cmp
cmp
arpl
pop
data16
jo
bound
pop
xchg
aas
sbb
mov
cli
mov
add
das
mov
push
pop
cmp
sub
cmc
xchg
scas
int
fmul
cmp
mov
cmp
leave
call
inc
adc
push
fldt
icebp
jl
add
int
clc
loopne
and
out
addr16
pop
pusha
gs
jnp
std
nop
sbb
adc
mov
movsl
sbb
shld
dec
push
data16
scas
jb
lcall
dec
cs
dec
lea
and
imul
mov
cld
add
imul
xor
mov
and
notl
and
aad
cmp
js
mov
stos
xlat
mov
icebp
inc
pushf
ret
mov
inc
mov
leave
push
mov
xchg
mov
pop
jno
and
mov
cmp
fs
sub
push
inc
inc
lret
cmovg
lahf
mov
stos
ds
loop
sbb
mov
mov
dec
sahf
xlat
mov
cmc
mov
nop
xchg
push
icebp
aam
xchg
shlb
int
cli
lea
dec
pop
out
push
std
enter
stc
pop
sbb
inc
not
aas
nop
push
or
sbb
not
mov
pop
xor
in
std
loop
push
inc
fmul
dec
dec
xchg
cs
lock
fisubl
mov
scas
repz
xchg
pop
dec
orb
adc
out
mov
imul
mov
mov
push
std
mov
out
adc
call
mov
fstl
xor
cli
xor
adc
pop
push
test
adc
mov
scas
popa
insb
or
jbe
arpl
inc
push
jo
jb
cld
adcb
pop
xchg
shlb
repnz
mov
xorl
es
in
or
daa
or
imul
movsl
push
or
and
ss
push
xchg
xorl
inc
sbb
lds
popf
mov
sub
xchg
fwait
mov
into
dec
mov
outsb
inc
xor
arpl
sub
pop
sti
xor
cmp
mov
xor
pushf
adc
cld
mov
cmp
sbb
cmp
jle
jge
cmp
dec
stc
or
icebp
cmpsl
fcmovne
mov
std
lahf
mov
cltd
mov
sahf
sti
test
scas
imul
mov
into
aas
fdivrl
mov
sti
mov
cmp
mov
mov
test
inc
movb
clc
add
cli
add
inc
cmpsb
jecxz
out
inc
xchg
jmp
cmp
loop
pop
inc
pop
sbb
aas
js
lock
ss
js
notl
pop
stos
addr16
aas
ret
sub
fwait
loop
hlt
or
enter
fildl
push
xchg
push
sub
fsubrl
adc
pop
mov
xor
jne
jbe
loop
mov
lock
pop
or
aam
mov
das
fwait
pop
or
sbb
imul
or
or
sub
add
call
daa
cld
push
jmp
inc
stos
loop
lret
add
pop
xchg
sub
ret
pop
sbb
or
sub
inc
lock
mov
das
lods
cmp
sti
ret
pop
mov
shrl
jns
addl
pop
adc
pop
cmp
das
outsl
out
mov
aam
sub
cmpsb
adcl
dec
sti
xchg
adc
leave
inc
arpl
mov
sub
push
inc
arpl
flds
xchg
jb
push
or
repnz
sahf
jge
pop
mov
cmp
nop
push
rclb
adc
jne
cltd
pop
nop
mov
out
push
mov
popa
jae
mov
jno
adc
cmpsl
movl
cmp
pop
mov
test
push
push
mov
mov
inc
push
repnz
push
inc
xor
ret
int
or
in
jbe
and
jle,pn
jmp
dec
pop
and
mov
jp
cmc
cmc
push
lods
jmp
ss
cmc
sahf
jmp
shlb
jp
fisubrs
inc
pop
mov
inc
sbb
movzwl
adc
pop
mov
pop
mov
pop
mov
xchg
lahf
xor
sub
xchg
je
mov
and
inc
aaa
sub
cmpsl
icebp
mov
daa
mov
stc
aaa
or
outsl
push
dec
jne
enter
daa
push
icebp
jbe
mov
loopne
loope
fcomip
mov
mov
cmp
std
adc
push
mov
push
icebp
fcomi
cmpb
inc
sbb
xchg
out
shr
push
inc
es
adc
xor
movsl
mov
incl
dec
cld
inc
aam
bound
jns
fwait
sbb
jge
cmc
push
jle
mov
cmp
cmpsb
mov
and
mov
ja
test
movsb
cmp
sbb
xor
ss
test
adc
fildl
or
adc
or
pop
popf
and
push
adc
pop
or
ficomps
ljmp
or
lds
xchg
in
cltd
push
mov
and
or
or
shlb
insb
add
in
mov
ljmp
sarl
jbe
mov
lds
rcll
ds
sbb
out
and
test
push
mov
popa
cmp
cltd
cmp
lods
xor
xor
ret
sbb
dec
movsb
or
fcomp
pop
bound
push
dec
shl
jecxz
int3
and
mov
push
aas
pop
mov
mov
xor
cmpsb
ds
test
push
inc
xchg
jbe
ficoms
jge
lcall
dec
mov
sbbb
daa
cmpsb
sub
jno
lods
leave
xchg
jle
jnp
js
push
jo
insb
stc
lcall
test
imul
es
jmp
mov
cltd
pop
adc
aas
sbb
push
shlb
das
sti
lcall
and
sub
sbb
icebp
stos
cmp
loop
out
inc
jmp
add
mov
das
cmpsl
pop
pop
gs
mov
aam
pusha
and
mov
cmp
mov
mov
sub
fistps
es
xchg
jo
adc
les
push
xchg
add
mov
push
push
and
sbb
mov
stos
mov
jnp
pop
repnz
push
add
mov
out
fwait
repnz
nop
lret
int
repnz
fisttps
adc
cs
xlat
insb
xchg
inc
mov
mov
inc
xchg
outsb
cmpl
push
dec
push
add
push
insl
loope
sbb
jne
cli
aaa
mov
mov
in
popf
rolb
mov
les
sbb
lret
stos
mov
mov
add
cmp
and
mov
ret
inc
jb
incl
sbb
xorl
jae
in
sbb
imul
loope
shrl
push
das
cmp
or
insl
imul
inc
sbb
jmp
loope
dec
int
sub
out
sub
mov
xor
mov
into
lods
sbb
cmp
sbb
cld
push
jp
inc
mov
add
aam
imul
into
push
outsb
push
sti
fninit
sbb
loop
xor
cwtl
jmp
imul
imul
xchg
stos
push
ret
mov
adc
lock
sbb
mov
jle
lock
inc
aad
repnz
jnp
pop
jg
aad
out
daa
mov
xchg
out
repnz
push
mov
pushf
jl
jp
add
outsl
add
bnd
outsl
push
aad
mov
fisubl
jge,pn
loopne
enter
mov
lret
push
loopne
cltd
pusha
xchg
shl
sub
jno
mov
stos
xchg
mov
inc
jmp
in
mov
mov
xor
add
test
jl
sub
cmpsl
and
and
lock
lcall
mov
fnsave
dec
sub
test
loop
addr16
stos
leave
stos
sahf
push
lods
ljmp
sbb
mov
or
or
add
mov
addr16
into
in
repz
sbb
jbe
in
daa
jnp
mov
push
shl
shrl
push
orb
inc
add
mov
inc
sbb
or
pop
sub
cmp
push
fildl
mov
enter
push
shlb
aad
in
xchg
xlat
std
ret
ss
mov
gs
mov
dec
insl
mov
sbb
incl
xchg
fnstcw
mov
out
mov
rorb
add
cmp
sub
leave
mov
mov
push
call
dec
dec
lds
sbb
int
aas
push
data16
icebp
or
sti
dec
ret
mov
mov
fs
mov
xor
pop
nop
mov
mov
xchg
lock
or
decb
xor
rcrl
mov
pop
adc
fwait
adc
inc
loopne
add
mov
ss
popa
lret
cmp
cmpsl
dec
sub
push
insb
dec
dec
lcall
das
in
movsl
and
push
cmova
sbb
jl
push
jmp
and
and
adc
adc
sahf
push
imul
jp
dec
in
ret
loop
pop
push
test
xor
leave
fmulp
xor
ds
loopne
jmp
aam
gs
rclb
dec
xlat
lret
aam
push
xchg
int3
dec
in
sub
jle
jo
pminsw
xlat
or
add
xchg
shlb
loopne
loope
mov
pushf
push
xor
bound
mov
pop
pop
pop
pop
iret
pop
aaa
stos
shrb
lcall
push
mov
insl
fnsave
add
pop
dec
mov
aad
in
in
dec
popa
or
jnp
in
mov
mov
jno
sbb
repz
out
mov
fisttpll
shlb
add
mov
cld
mov
ds
lds
ret
xlat
cmpsl
dec
pop
cltd
sub
jno
add
cmp
arpl
inc
sbb
into
mov
mov
mov
scas
stos
fcompl
loope
dec
push
adc
sbb
or
fcoml
ds
mov
mov
add
enter
sbb
or
loopne
int3
inc
and
jl
pusha
mov
fadds
cmp
dec
mov
dec
ret
jp
filds
inc
push
outsb
outsb
pop
push
ljmp
loope
mov
sbb
outsb
mov
rol
xchg
addr16
jne
jp
push
pop
test
movsl
aas
andl
push
cmp
idiv
adc
pop
or
mov
cwtl
mov
xchg
out
loope
pop
data16
mov
dec
popf
aam
inc
xchg
lcall
lret
mov
mov
jl
sbb
push
and
imul
mov
lcall
pop
jnp
in
outsb
out
xlat
cltd
cmp
push
mov
cmp
ljmp
push
jle
movsb
push
ffree
mov
out
sbbl
inc
cmp
jne
mov
adc
cmpsb
push
adc
in
or
fidivl
dec
xchg
jp
add
sub
out
sbbl
ss
mov
cmp
inc
int
and
cmpsl
int
fnstcw
movsl
xlat
adc
mov
push
xchg
fadds
test
cmpsb
inc
fdivrl
out
dec
lret
add
pop
mov
jg
adcl
adc
jae
cmp
mov
dec
ficomps
mov
or
addl
push
sub
pop
sub
adc
pop
push
push
xchg
ja
js
ss
cld
lret
fcoml
adc
out
ficoml
and
fstpl
movsb
outsl
test
int
std
xchg
loope
push
rcll
rolb
adc
adc
lds
xchg
test
jne
outsl
insl
push
daa
mov
push
add
imul
nop
push
pop
and
aaa
adc
hlt
mov
lret
popf
mov
inc
test
sti
cltd
call
je
ljmp
sbb
idivl
mov
scas
imul
and
or
xlat
mov
jg
cmpsl
lcall
mov
xor
and
insl
xchg
xchg
jne
push
ljmp
repnz
xor
cs
dec
hlt
icebp
aad
addb
lds
xor
lock
sub
lcall
add
mov
xor
push
movsl
dec
dec
mov
jmp
fnsave
adc
dec
pusha
push
es
cwtl
fiaddl
inc
jl
dec
lret
pop
pop
cwtl
in
bnd
cld
jns
mov
xor
loope
icebp
int
bound
mov
aad
sub
fidivl
xchg
xchg
mov
in
jmp
lret
movsb
pop
jno
aam
add
mov
cmp
jmp
sub
cmp
sbb
xchg
fcom
xlat
xchg
cld
out
inc
imul
xor
aad
fcmovnb
mov
adc
mov
jle
movsl
pop
xchg
aas
hlt
push
aad
mov
pop
cmp
dec
push
sbb
add
push
leave
sub
ja
cmp
lea
js
in
push
add
and
inc
push
icebp
push
scas
aad
sbb
adc
fbstp
mov
mov
clc
push
inc
or
hlt
dec
sbb
jmp
into
lds
jmp
lods
movsl
jns
scas
jno
dec
pop
popa
push
xor
arpl
outsl
dec
cmp
leave
xchg
jmp
mov
jns
jge
and
dec
gs
sti
push
fsubp
arpl
push
inc
jle
fstpl
push
dec
xor
lea
and
test
icebp
fcoms
dec
push
sbb
sub
mov
adc
mov
lcall
pop
adc
mov
jno
sub
add
ja
test
dec
pop
pop
loopne
xor
fs
or
mov
jne
lret
lds
push
cmp
cmp
js
push
mov
fmul
popa
mov
popf
inc
and
negl
sbb
les
mov
adc
adc
push
jmp
and
cmp
aas
scas
sbb
jns
aad
rcll
pop
mov
loop
jno
pusha
inc
or
or
ljmp
dec
xchg
repz
call
aaa
popa
decb
jmp
jb
adc
adc
cmp
push
call
add
pop
jp
jae
adc
jb
push
pop
mov
mov
in
pop
xor
or
push
das
mov
jns
jg
pushf
add
inc
hlt
inc
gs
mov
jecxz
lock
push
pop
adc
add
rcrb
mov
xor
mov
add
stos
cltd
negl
or
out
adc
call
fldenv
test
pop
pop
and
icebp
sahf
jbe
in
pushf
pop
mov
dec
mov
push
movsb
pusha
cmp
outsl
pop
icebp
or
xlat
lock
int
shl
lds
negb
mov
inc
adc
mov
xchg
insb
cmp
and
xorl
pop
xchg
xchg
inc
int3
mov
pop
jecxz
es
jecxz
neg
push
inc
out
push
mov
pusha
cli
xor
clc
xchg
adc
xorl
add
inc
les
add
cmp
jae
mov
insl
mov
sub
cmp
outsb
repnz
xchg
fs
in
and
cwtl
push
fsub
inc
rcl
adc
out
xor
dec
data16
dec
mov
add
push
popf
sub
sbb
stos
fs
inc
filds
adc
cmp
clc
into
pop
push
add
repnz
cld
test
xor
lea
dec
shrb
jo
jl
ret
andl
loope
adc
push
dec
nop
jns
cld
mov
and
and
lods
outsl
cmpsb
dec
lret
dec
inc
cltd
lea
mov
test
roll
adc
push
adc
pop
jae
scas
gs
mov
mov
inc
fs
fsubr
dec
adc
xchg
stc
push
inc
daa
into
aas
repnz
mov
cs
test
rolb
subl
divps
push
mov
shll
into
xor
cmp
mov
xchg
cmp
jns
mov
sti
aad
add
push
and
jb
pop
testb
lock
mov
cs
pushf
push
pop
or
push
adc
in
loop
ret
sbb
mov
lret
mov
repz
sahf
das
push
push
mov
insl
arpl
inc
flds
mov
mov
rorb
in
mov
pop
jecxz
and
out
mov
push
or
js
loope
les
insb
and
loopne
xchg
subl
into
rolb
fldt
ret
scas
or
leave
dec
dec
sbb
sub
and
adc
pop
adc
pop
mov
inc
setbe
cmpsb
sub
xchg
xor
into
fisubrl
pop
gs
xchg
sbb
pusha
out
test
xor
scas
cmp
sub
das
push
dec
xchg
push
insl
jbe
das
pushl
mov
into
shl
mov
aam
fwait
dec
inc
add
mov
jae
xor
push
inc
push
adc
lds
lret
or
in
xor
dec
pop
mov
or
pop
lret
lret
jp
xchg
test
leave
shlb
and
jp
jns
jmp
mov
adc
lret
sub
and
out
pop
es
cmp
sub
jno
or
dec
pusha
mov
push
inc
rorb
sahf
push
scas
pusha
inc
adcl
je
aam
popf
inc
push
push
imul
jb
popa
das
and
test
mov
sbb
xlat
into
jmp
cwtl
movsb
gs
nop
mov
addr16
int
and
sub
cmp
mov
and
out
stc
movsb
cmp
ljmp
cmp
inc
lcall
mov
lods
push
shl
jne
jmp
pushf
jp
xlat
push
or
gs
push
paddd
out
aaa
int
pop
push
subb
and
insl
fisttps
sbb
sarl
jle
pop
in
out
or
out
sub
out
inc
mov
iret
inc
icebp
jge
iret
mov
mov
push
fwait
mov
inc
dec
movsb
push
lret
push
jnp
cmpl
xchg
jp
lea
jbe
inc
jecxz
outsl
test
pop
inc
sahf
aad
sub
rorb
test
or
addb
sbb
sbb
aaa
lcall
lock
xor
xor
add
or
pop
lods
das
lea
movsb
roll
sub
outsb
adc
or
inc
inc
mov
push
lret
or
ret
jge
cwtl
movsl
pop
pop
clc
lods
sbb
and
insl
cli
mov
sub
pop
fwait
inc
cmp
scas
cmp
adc
jo
push
out
movsl
pop
pop
push
mov
or
out
jg
mov
xor
mov
testb
roll
in
xchg
jg
push
sub
negl
pop
and
fsubl
mov
and
jb
aaa
hlt
xor
mov
mov
push
pop
lret
mov
xchg
test
in
fs
int3
mov
call
data16
jno
mov
push
add
cmp
dec
pushf
add
repz
gs
int
pusha
ret
jne
add
shll
xor
ljmp
cmpsl
xchg
shlb
insb
clc
jmp
movsb
adc
jge
test
push
adcl
inc
mov
scas
sbb
fldcw
sbb
or
outsl
xchg
cmpsl
jnp
xchg
sbb
test
lea
xchg
inc
mov
push
xchg
btr
mov
xor
dec
cmp
push
push
or
fmuls
ret
push
in
jb
and
dec
lret
dec
cmp
shl
aam
and
sbb
ret
div
bnd
test
and
out
enter
inc
cmp
and
mov
cmp
pusha
xlat
inc
and
into
sbb
stos
add
jg
and
popl
pop
fs
lret
xchg
inc
jecxz
push
sub
jle
pop
arpl
cmp
sub
iret
pusha
out
lret
addb
push
mov
dec
sbb
cltd
addl
inc
in
pop
and
jbe
xchg
fs
aas
pushf
xor
adc
jle
stos
xor
int3
mov
ret
sbb
lea
imul
loop
fildl
in
nop
loop
mov
push
pop
xchg
push
stc
arpl
shll
push
xor
in
push
cmpsl
jecxz
jmp
push
nop
test
imul
adc
out
or
iret
lods
cli
mov
daa
mov
jns
std
jns
mov
or
lret
loop
ss
xchg
mov
out
jl
pop
fs
test
dec
bound
push
cmp
adc
movsb
cld
mov
dec
mov
iret
jae
insb
pop
insb
pop
loopne
inc
lret
add
mov
sbb
inc
outsl
add
test
aas
push
xchg
incl
mov
cmp
sub
repz
pop
cmpb
dec
push
and
test
jl
mov
fiaddl
cwtl
ss
push
data16
sbb
enter
ss
pop
inc
add
ss
jge
jg
repnz
cmp
sub
and
out
popf
rcll
add
and
test
jne
xor
call
xor
mov
and
int3
xor
jae
adc
push
mov
movsl
adc
sub
mov
out
cmp
mov
cwtl
pop
sbb
out
push
out
js
pop
pop
push
add
roll
mov
dec
sbb
and
arpl
mov
aam
repz
mov
int
fnsave
xor
icebp
xor
mov
xor
pop
and
xchg
mov
shrb
loopne
out
push
pop
loop
in
cwtl
or
pop
fwait
hlt
insl
lods
cmp
push
lret
cmp
xchg
test
insl
in
in
cmp
xchg
mov
rcll
popf
inc
dec
and
dec
imulb
mov
push
cmp
rcrb
rolb
jl
jne
testb
inc
xchg
gs
dec
or
sub
cld
adc
pop
call
xchg
imul
dec
push
inc
andb
rcrl
mov
ljmp
bound
xchg
xor
rcrl
inc
sub
lahf
dec
cmp
std
test
sbb
out
mov
aad
int
mov
div
jnp
outsl
dec
out
fsubrp
pop
dec
jne
sbb
jecxz
xor
jl
movsl
push
sbb
mov
in
sarb
mov
fidivrl
fcmovne
bound
lods
mov
leave
jle
fwait
dec
test
sbb
mov
std
xor
lock
sti
stc
daa
lcall
pusha
adc
mov
rcrb
repz
stc
jl
scas
js
iret
popa
repz
mov
xor
add
pop
sbb
dec
adc
push
and
pop
mov
jecxz
sub
imul
test
test
imul
lcall
jg
fisubrs
mov
test
jecxz
test
cwtl
inc
sbb
sarl
add
fsubl
ds
jle
shlb
lret
adc
cltd
cmp
mov
pop
test
add
lds
push
enter
pop
popf
xor
and
test
mov
xchg
dec
mov
cmp
add
imulb
insl
cmp
lock
jb
into
mov
les
xchg
push
fs
test
cmpl
clc
and
or
mov
into
mov
iret
add
test
pop
and
xchg
push
ljmp
xor
sub
cmp
incb
push
in
cmpb
sbb
clc
pop
jnp
fwait
push
sbb
gs
xor
ficompl
fbstp
push
in
pushw
lea
in
outsl
ljmp
push
cli
nop
and
sbb
dec
xor
std
or
mov
nop
lcall
sti
dec
cli
jae
stos
adc
sbb
mov
or
or
jmp
roll
pop
pop
popa
ljmp
jnp
ss
xchg
mov
lock
sbb
push
xchg
sarb
inc
mov
in
aad
and
and
push
daa
or
jecxz
mov
add
pop
lcall
es
xor
add
jle
push
cmovno
aam
loope
das
and
repnz
aam
rolb
popa
fsubrp
mov
pop
lret
mov
enter
pop
imul
adc
xor
xlat
add
adc
push
jns
jp
mov
mov
pop
xchg
push
add
mov
push
out
fwait
sub
pop
dec
xor
xor
fistps
jno
sarb
jne
out
dec
ja
add
jne
aam
imul
add
jp
dec
jp
add
pop
sub
mov
or
sbb
sahf
jns
stos
into
jmp
xchg
sbb
sbb
into
cmp
xor
push
lds
aad
or
lds
push
outsb
out
jl
inc
fsubl
insl
and
loope
push
ljmp
and
inc
or
mov
orb
cld
xlat
imul
push
mov
not
xor
xchg
cltd
outsb
dec
jbe
fcoml
js
jle
mov
add
out
push
dec
ss
jle
xchg
mov
mov
cli
arpl
mov
jne
pop
cmp
movsb
inc
gs
stos
jge
jecxz
and
test
pusha
dec
fildll
cmp
test
xor
cltd
mov
enter
rolb
adc
and
insl
adc
das
xor
push
cmpsl
lcall
adc
call
adc
stc
cmp
push
pop
jge
mov
fs
add
pop
fisubs
cmp
adc
lea
fbstp
leave
loopne
dec
in
mov
dec
sarl
in
add
mov
jge
lcall
dec
repz
arpl
push
inc
fisubrs
cmpsl
add
imul
or
push
and
xlat
decl
mov
sub
aaa
mov
push
cmp
insb
push
imul
jo
cmp
gs
push
xlat
cmp
sub
pop
enter
sti
outsl
in
push
adc
cltd
adcb
xchg
shll
mov
jmp
mov
dec
dec
or
test
cltd
daa
lock
fwait
std
pop
stos
insb
mov
jnp
sbb
out
and
ds
test
mov
leave
pop
push
pushf
lahf
sti
test
mov
inc
cmpsb
sbb
pop
fdivrl
loop
leave
loope
aaa
mov
sub
push
cmp
mov
notb
rorb
lret
mov
and
fdivrl
jle
sbb
insb
test
cmpsl
aam
inc
ds
test
or
sbb
push
lret
dec
adc
daa
fdivl
inc
andb
testl
xor
js
fidivrs
imul
push
ficoms
jno
add
mov
lcall
pop
adc
jg
jnp
add
and
stos
mov
lret
pop
dec
sbb
call
test
ror
popa
sti
int
push
clc
pop
jge
in
cmp
mov
fstpt
mov
insb
icebp
int3
xchg
jnp
cs
ljmp
fbld
xchg
push
dec
lcall
mov
test
cmpl
xchg
jns
or
add
test
out
insl
cmpsb
shrb
or
inc
adc
adc
daa
ret
xchg
and
push
pop
js
jb
addl
cwtl
pushf
xchg
subb
xor
jnp
js
sub
out
arpl
movsb
outsb
cmpsb
xchg
hlt
cmp
mov
cltd
insl
pop
movsl
jno
imul
and
ja
pop
jns
xlat
or
inc
mulb
pop
cltd
mov
arpl
ror
jns
into
mov
in
jle
daa
dec
out
dec
dec
loope
add
xor
in
mov
andb
push
mov
cld
and
mov
ret
scas
call
ret
mov
aad
mov
jb
out
ret
inc
pop
outsb
std
sti
ja
loop
mov
js
jp
xchg
movsl
fs
mov
or
int3
cmpb
clc
inc
cld
and
cltd
cmp
arpl
mov
sbb
or
loopne
add
adc
pushf
incl
and
mov
call
push
test
cmpsl
add
mov
popf
jnp
outsl
sub
insl
lret
inc
push
insl
ret
inc
adc
and
hlt
mov
shll
icebp
test
xorl
push
push
pop
cltd
jbe
inc
or
insl
arpl
arpl
mov
jo
in
pop
sbb
jo
xor
push
test
cmp
in
lcall
sub
dec
add
int
aad
repz
add
sub
sbb
mov
cmp
mov
inc
xchg
jno
sahf
jg
xchg
not
lea
flds
pop
inc
sub
cmpsb
stos
dec
sub
dec
fistpll
mov
pop
addb
mov
cwtl
cmp
pop
dec
cld
sbb
data16
xlat
sbb
movl
loopne
push
daa
jo
mov
bound
pop
sbb
bound
bound
mov
ljmp
inc
out
sti
rolb
fdivrs
in
xchg
mov
jecxz
inc
mov
decl
adc
mov
xor
and
jb
mov
inc
stc
push
and
push
test
or
sbb
or
repnz
cwtl
or
jge
inc
sti
pop
je
inc
icebp
test
cli
dec
pop
incl
test
dec
jae
xor
xor
push
or
inc
xchg
hlt
xor
call
dec
pop
cmpsl
iret
jo
mov
push
pop
xor
mov
pop
in
cltd
mov
and
fdivl
ret
push
mov
flds
sbb
sahf
fiaddl
adc
pop
cmp
cmp
fistps
dec
mov
daa
mov
cmp
out
xchg
sti
les
pusha
xchg
jns
faddl
sar
cmp
enter
adc
rolb
dec
push
dec
and
lods
iret
mov
xchg
xchg
jbe
dec
push
pop
sub
repz
jae
testb
add
dec
sbb
test
mov
fdivrs
and
mov
push
inc
imul
and
mov
xchg
cltd
lret
xchg
pop
mov
xlat
je
shrl
mov
sbb
mov
xchg
or
xor
fdivrs
pushf
xchg
jb
cs
cmp
in
xlat
out
xor
push
loopne
int3
sub
out
idivl
lret
fistl
jle
xorl
ds
addb
pop
push
push
pop
sti
popa
jmp
pop
mov
dec
loope
mov
repnz
pushf
and
and
lahf
sub
out
popa
lcall
sbb
mov
test
pop
std
jp
sub
sbb
fsts
pushf
xor
leave
mov
cmp
jo
adc
scas
movhps
cli
or
or
and
push
inc
sbb
push
in
inc
fwait
sub
fs
fsts
mov
adcb
pop
mov
sbb
pop
addl
lods
inc
dec
xlat
and
ljmp
lea
push
movsb
mov
xor
nop
fsubrl
mov
xor
sbb
dec
xor
mov
test
aas
pop
adc
xor
lea
mov
ja
test
mov
aad
iret
xchg
push
mov
mov
in
rorb
inc
ror
aaa
adc
or
out
xlat
inc
loop
jg
jmp
sub
fmull
sbb
push
or
ret
push
call
xor
mov
mov
nop
stc
in
movsl
xor
stc
cltd
sbb
stc
ret
int3
sub
jne
shll
jp
mov
adc
dec
pusha
jl
adc
imul
pop
fwait
bound
insl
in
and
in
js
shr
fwait
repz
xor
sbb
out
and
adc
dec
aam
push
cmp
dec
ds
insl
je
sysenter
dec
lcall
lea
negb
fdivl
and
lds
sbb
ret
call
shll
jno
xor
mov
cmp
cmc
fs
xor
dec
xor
lret
lods
mov
inc
dec
sbbb
cs
xchg
mov
iret
xchg
xchg
stc
gs
cmp
add
push
into
pop
sbb
dec
adc
lods
xchg
cld
dec
inc
pop
add
and
loope
xlat
mov
cmp
dec
and
cmc
add
js
and
pop
iret
sbb
lock
cli
push
out
outsl
rorb
mov
inc
jae
sub
dec
imul
ret
inc
dec
dec
stc
out
pop
cmpsl
popa
and
mov
ds
je
push
mov
jo
ret
lahf
push
inc
or
xchg
enter
or
or
adc
add
or
std
addb
loopne
inc
inc
and
inc
sbb
push
cmpsb
xor
hlt
orb
ss
mov
pop
out
fcomi
xor
shrb
jge
or
lret
inc
loopne
lods
push
icebp
pop
ljmp
js
sub
loopne
mov
sti
jb
xor
repnz
inc
pop
push
cmp
add
popa
push
lods
inc
or
rcr
sub
jns
xchg
inc
mov
adc
dec
mov
mov
xchg
add
cmpsl
jno
int
pop
mov
inc
xchg
popa
imul
mov
xchg
mov
faddp
das
xchg
jb
cmp
jl
scas
imul
add
inc
stos
les
rolb
dec
sub
mov
mov
pop
cmpsl
decl
pop
mov
cltd
icebp
ficompl
daa
xor
sbb
out
inc
dec
pusha
fdivr
sub
or
pop
orl
clc
push
jecxz
add
and
or
adc
cmp
sub
imul
aam
lea
cmp
std
dec
test
xor
inc
jecxz
jmp
inc
lea
xor
out
out
push
push
test
cmc
insl
mov
bnd
mov
xchg
cmp
adc
jecxz
mov
rclb
aad
sti
pop
pop
call
or
add
sbb
xchg
pop
fnstsw
jo
out
andl
pusha
adc
popa
inc
lahf
loope
imul
mov
xor
add
movsb
dec
push
out
scas
popf
je
in
jle
dec
sbb
test
lods
mov
sbb
iret
pop
jnp
jl
movb
mov
movsl
xor
scas
push
data16
mull
sub
push
or
rol
inc
out
fcomip
popa
aaa
js
ret
shlb
jmp
push
test
jbe
andnps
out
es
and
mov
push
jle
push
sub
xchg
lahf
xor
xchg
les
lods
call
add
inc
push
jae
es
nop
xor
jns
xor
xlat
fs
lds
xchg
loop
call
push
pop
mov
push
xchg
loope
inc
add
cld
ret
int3
enter
loope
cmp
rcll
insl
fsubrl
mov
out
pop
jmp
xor
repz
mov
scas
sbb
xchg
cmp
stos
lods
xchg
adc
mov
mov
sbb
pop
mov
and
lahf
aas
cmp
xor
fistpll
aad
cmp
mov
aaa
in
dec
mov
cmp
call
push
cmp
push
sub
push
and
mov
ja
je
inc
xchg
lar
adc
mov
sub
push
pop
test
ja
dec
mov
and
mov
pop
mov
mov
push
push
into
fwait
insb
out
push
push
scas
shlb
xor
bound
mov
jno
bound
jo
ja
lahf
inc
sbbb
int
les
ja
loopne
jge
imul
iret
xchg
fwait
dec
call
pop
mov
cli
fcmovne
fldl2e
inc
sub
sbb
pop
idivb
xchg
xor
test
sbb
mov
adcb
xor
dec
xchg
push
push
sbb
icebp
jnp
mov
out
jl
shlb
push
jb
pop
mov
ja
jo
xor
xchg
xchg
iretw
fsub
repnz
push
shl
mulb
lods
and
imul
mov
notl
aam
call
int3
ds
jo
or
mov
pop
cmpsl
int3
mov
repnz
pop
lods
pop
sbb
push
push
lods
and
mov
mov
int
sbb
imul
test
fldl
rcl
cmp
insb
fistps
rcll
outsb
call
mov
and
sub
jecxz
inc
mov
sub
fldenv
xchg
loop
cmp
xchg
adc
add
mov
jne
out
inc
icebp
jnp
mov
mov
das
cmpsb
addb
sub
push
add
fxam
or
add
arpl
enter
or
inc
pushf
call
out
jae
pusha
aas
arpl
insl
push
jl
adc
outsl
imul
stc
cli
sub
imul
fists
xor
inc
nop
lods
and
test
lods
out
je
leave
xchg
dec
cmc
jo
ss
dec
out
enter
sbb
fiadds
cmp
sbb
jno
inc
mov
jge
sub
jo
das
mov
pushf
lods
fdivr
fisubl
int
push
lret
dec
xor
push
push
inc
jb
aaa
and
jo
sti
or
xor
jbe
imul
sub
cmpsb
stc
lods
sub
xor
test
aas
inc
sbb
pop
fwait
enter
int3
push
or
sbb
movsl
dec
mov
sbbl
and
cmc
aas
adc
dec
outsb
loop
xor
call
shrl
into
inc
xchg
or
imul
xor
push
mov
pop
xacquire
and
gs
jg
mov
shlb
push
and
mov
adc
andb
repz
out
pop
mov
loope
cmp
mull
into
xchg
jno
mov
and
sahf
adc
or
add
adc
mov
pop
loop
dec
mov
adc
add
stos
add
add
sub
int3
or
sahf
sarl
into
data16
test
push
pop
or
mov
sub
mov
adc
pusha
cmpsl
ljmp
push
in
xchg
je
loop
fwait
and
sub
imul
pop
inc
sti
add
adc
call
jmp
aad
jnp
fs
out
clc
mov
in
xor
xor
lret
jge
push
or
jnp
insl
xor
out
xchg
sub
test
or
sub
sub
lahf
std
xchg
sbb
mov
sub
cmp
cs
or
mov
mov
int3
or
pop
leave
xor
cs
xchg
fisttpll
jmp
jge
ret
xor
xor
or
xchg
jmp
icebp
fldt
mov
jns
mov
cmpl
and
mov
test
scas
inc
fwait
shrb
pop
dec
mov
fadds
pushf
xor
ret
pop
lea
cmpsb
cwtl
add
into
dec
cmp
mov
fwait
call
outsb
and
loopne
xor
stc
push
lds
imul
sub
stos
inc
int3
pop
aam
cmp
xor
iret
adc
sbb
or
cmp
mov
jp
sbb
mov
pusha
xchg
outsl
imul
seta
arpl
xchg
mov
inc
mov
out
rcrl
daa
dec
clflush
xor
mov
jo
jp
xchg
xor
ja
xchg
and
fsts
scas
das
lahf
adc
cmp
sbb
test
les
sbb
mov
dec
xchg
jmp
sahf
jg
hlt
pop
and
fs
insb
adc
sub
aaa
jl
push
in
out
inc
jo
clc
push
jnp
sbb
mov
cmp
push
loope
negb
movsl
push
inc
bound
pop
xchg
jg
dec
lea
test
cltd
cmp
rcr
fs
mov
inc
sahf
or
jne
jle
or
cmp
jle
das
push
or
mov
inc
notb
xor
cld
mov
pop
cs
popa
mov
shll
jg
pop
sbb
push
dec
inc
lods
xor
out
or
cltd
je
stos
loope
pusha
aas
mov
and
jg
iret
pusha
dec
xchg
sub
fxam
pop
movl
mov
push
push
inc
xor
enter
sbb
adc
add
enter
jno
or
adc
sahf
int
lods
pop
cmpsb
loope
mov
push
push
movsl
sub
ret
adc
ret
mov
dec
push
and
xor
cmp
lods
pop
dec
aaa
sub
les
push
loopne
lret
repnz
shlb
adc
scas
inc
mov
jecxz
aaa
sub
pop
cld
loop
fimuls
stos
arpl
stc
or
inc
scas
add
push
pop
push
fmull
mov
or
pop
hlt
mov
xchg
fwait
cmp
mov
mov
outsb
lret
aad
mov
call
and
inc
xchg
or
inc
or
sub
xor
add
out
imul
add
loopne
ret
fistps
cvtps2pd
inc
mov
mov
add
cltd
pop
mov
xchg
cmp
mov
push
mulb
shl
sbb
adc
cli
sti
push
sbb
iret
test
push
ljmp
dec
in
sbb
push
fcos
jbe
clc
cli
fsubr
cmpsl
js
fdiv
mov
sarl
cwtl
dec
imul
add
lret
and
jg
add
cmp
jecxz
movb
sahf
ds
xchg
fs
jne
sti
inc
push
jne
cld
adc
addl
xlat
mov
mov
xor
loope
mov
movsb
dec
pop
lcall
mov
js
mov
iret
sbb
pop
inc
add
aaa
outsb
in
popf
jno
xor
pop
inc
mov
mov
jbe
out
pop
xchg
pop
dec
push
cmp
outsb
inc
and
mov
leave
imul
mov
pop
arpl
pop
subps
jb
mov
das
adc
fimull
xchg
fldl
push
movsl
cmp
pop
out
stos
fimuls
inc
rcrl
mov
pop
jb
int
pop
clc
jg
imul
fisttps
push
mov
int
fwait
es
jmp
sub
adc
cmp
jae
sti
inc
pop
scas
mov
dec
xor
in
hlt
adc
mov
mov
ror
sub
xor
cmp
repz
fisubrs
loope
jnp
xchg
fnstsw
sub
repz
mulb
and
ficompl
add
fisubl
cmc
outsb
jmp
ficomps
fldenv
cltd
fcoms
xchg
scas
and
in
aaa
testb
pop
mov
mul
mov
cmp
add
xchg
iret
mov
or
mov
repnz
int
jne
jae
sub
lcall
dec
pop
cwtl
mov
mov
std
in
stos
lds
test
in
add
cwtl
dec
add
sub
add
sbb
push
imul
aas
cmp
sbb
roll
inc
jge
mov
and
lahf
xchg
adc
sbb
mov
es
or
jle
sysenter
arpl
je
imul
add
mov
xchg
inc
std
lahf
lock
mov
lret
pushf
aam
push
pusha
inc
add
fs
cmpsb
or
mov
jecxz
jbe
js
popf
jne
or
pushf
outsb
cmpsb
jle
sahf
xlat
xchg
inc
mov
ljmp
xor
stc
outsl
fimuls
dec
fucompp
movsl
in
push
test
jne
adc
shrb
cmp
jbe
int3
add
dec
nop
lret
and
mov
lea
inc
mov
jmp
add
add
hlt
push
popa
jecxz
in
repz
nop
inc
int
dec
fsubl
popf
clc
push
mov
mov
hlt
jnp
jmp
add
call
incb
call
adc
sub
sub
sbb
loop
callw
push
fcmovb
pop
cmpsl
jbe
add
ds
shrb
testl
adc
xchg
push
push
scas
fwait
xor
sub
lods
xchg
lods
inc
pop
mov
pop
dec
je
fsub
in
mov
dec
pop
jmp
pop
jnp
xchg
dec
enter
inc
in
out
js
jmp
cmpsl
dec
lock
and
ss
aad
xor
loope
pop
jo
inc
roll
addl
fiaddl
sub
frstor
shrb
mov
xor
inc
bound
lret
fsubrp
dec
out
out
or
add
push
pusha
into
arpl
dec
sub
mov
stos
push
leave
loop
loopne
repz
loop
cmc
lret
push
xor
mull
inc
sbb
sub
jle
loop
push
xchg
leave
inc
inc
repnz
push
and
hlt
stos
mov
xchg
sbb
popf
out
std
dec
repnz
cmp
mov
fwait
test
daa
pop
inc
fdivrl
adc
push
cmpsb
inc
mov
out
cmp
cmp
lret
call
sub
dec
cmp
in
dec
inc
les
lret
fmuls
sbb
jp
and
lds
fstpl
imul
loopne
mov
mov
and
es
adc
in
add
jno
inc
inc
mov
lods
test
or
dec
insb
cmp
fwait
fwait
fs
push
xor
pushf
jp
pop
insl
and
add
push
loop
je
push
bound
inc
ss
mov
loopne
out
repz
pusha
mov
sbb
mov
cmp
rolb
add
mov
or
bound
adc
out
aaa
mov
or
sub
sub
xchg
inc
test
mov
push
push
shlb
push
xchg
sub
popa
lahf
jmp
jno
les
aaa
inc
sub
das
es
in
movsb
mov
push
aas
sbb
dec
std
cmp
cwtl
inc
or
stos
bound
mov
movaps
cmp
xchg
cmpsb
cmp
or
and
or
mov
movsl
adc
add
lock
mov
mov
adc
imul
inc
popa
jle
idivb
dec
inc
out
stc
dec
fiadds
ss
std
dec
sub
shr
and
cmc
jge
jo
into
je
and
pop
mov
mov
std
movsb
call
pop
mov
in
add
sbb
movsb
mov
mov
in
push
les
test
sub
ret
ljmp
in
cmp
dec
inc
rorb
xor
cwtl
pushw
rcl
add
daa
push
cmpsb
pushf
and
push
out
clc
repnz
mov
xor
insl
rcll
sahf
frndint
insl
sbb
dec
dec
cmp
mov
mov
dec
repnz
jno
and
add
pop
loopne
sub
jle
push
xor
or
shll
inc
add
cmp
sti
nop
ss
stc
inc
mov
and
xor
jle
inc
stos
lods
in
push
rcrl
dec
mov
jne
xchg
aas
lcall
pop
and
cld
aad
imul
sbb
lret
loopne
pop
pop
jle
xor
lahf
mov
dec
std
and
or
xchg
and
sti
and
xor
jp
mov
sbb
mov
xchg
sahf
mov
das
add
ljmp
mov
je
push
outsl
adc
pushf
jl
jae
lret
aas
shl
xlat
dec
add
scas
cmp
xchg
mov
pop
lret
cwtl
push
mov
mov
add
push
pop
or
or
adc
cmpsb
xor
testb
test
push
nop
out
add
aaa
push
xchg
lods
cmpsb
jmp
pop
pusha
fadds
cmp
mov
xor
xor
pop
je
fwait
popa
mov
out
mov
out
mov
das
cmpsb
mov
lret
in
cmp
cs
mov
orl
and
inc
sti
cmpb
fnstsw
push
push
addb
or
dec
add
lahf
arpl
sti
sahf
mov
gs
mov
insb
or
ret
mov
mov
les
outsb
push
sub
jbe
xchg
push
sbb
pop
jne
add
dec
pop
aam
jl
aaa
inc
fists
fcmovu
dec
aaa
jns
add
mov
mov
shlb
out
sub
push
jb
dec
push
cmp
mov
lds
cmpl
inc
xchg
or
das
int3
pushf
aad
or
mov
js
push
test
xchg
iret
sub
add
in
shll
xchg
js
adc
sbb
and
cmc
scas
lcall
push
pop
shl
jb
or
add
aad
push
pop
jno
lret
xchg
push
arpl
push
and
pop
les
mov
dec
inc
std
bound
ret
cmp
outsl
ds
shll
test
fldenv
xchg
inc
iret
push
dec
jge
pop
pop
jle
cltd
add
adc
or
mov
loop
sub
dec
sbb
insl
xor
sbb
cmp
jnp
or
stos
push
jg
add
xchg
icebp
rclb
jmp
fwait
mov
add
mov
cmp
sub
pop
pop
dec
adc
xchg
stc
add
add
stos
xchg
sbb
rclb
jmp
jnp
les
popa
setb
std
dec
repz
xor
fcomps
lods
popa
jg
lods
xor
push
or
xchg
cmp
loopne
ret
data16
dec
enter
cwtl
or
rcl
icebp
iret
mov
sbb
mov
sti
sub
je
and
xor
aaa
cmpsb
sbb
push
push
xor
xor
push
push
push
repnz
test
cmp
leave
fwait
aad
push
je
test
sub
add
shlb
aaa
add
fbld
pop
mov
subl
adc
mov
jbe
inc
mov
lods
insl
aaa
stos
insb
mov
xor
jns
jp
arpl
pop
sbb
in
hlt
and
push
out
pop
xor
add
and
scas
and
push
out
and
jns
lahf
cmp
shlb
daa
adc
fcoms
hlt
adc
inc
cmc
jbe
sarb
adc
and
xor
call
xlat
sarl
js
push
mov
cmpsl
pop
push
pop
push
mov
sbb
shlb
shll
mov
dec
call
addr16
in
nop
push
jns
sub
in
mov
lret
pop
ret
ss
mov
mov
test
xor
insb
mov
mov
push
lods
add
nop
xchg
stc
cmp
aad
add
jmp
or
fimuls
sub
add
out
inc
push
sbbb
je
fnstenv
das
inc
xchg
jne
es
sbb
ss
inc
sbb
aam
pop
inc
fldcw
icebp
push
pushf
add
xor
sbb
jb
test
mov
add
xchg
mov
sbb
nop
cmp
mov
cmpsb
loopne
popa
sbb
out
es
je
fwait
loop
adc
movsl
iret
jns
in
fdivrl
insb
jbe
push
add
xor
sbbb
imul
cmpsl
xchg
std
sub
ja
ljmp
cmp
mov
stc
sar
call
lcall
ret
mov
jge
or
lock
loop
push
fdivrl
aad
xchg
and
fsubl
movsl
adc
or
repnz
dec
je
mov
cmc
and
mov
imulb
xchg
sub
rcrl
ss
sbb
iret
mov
mov
shrb
hlt
pop
sbb
xchg
cmp
xor
inc
repnz
push
add
add
mov
es
adc
xor
movsb
or
mov
dec
xor
ret
ss
cmc
fs
inc
dec
and
sub
ss
cmpsl
loope
push
jmp
sahf
mov
data16
rclb
sbb
add
xchg
ds
in
fmuls
in
sub
movsl
or
jecxz
xor
cs
sti
xorb
js
sbb
lods
loopne
lock
xchg
hlt
pusha
stos
lods
arpl
sub
cwtl
sbb
or
add
cmp
sbb
pop
out
add
aam
fwait
pop
sub
sub
lods
fwait
sub
out
add
pop
daa
int
pushf
push
loope
lcall
pop
pop
pop
ret
sub
int3
hlt
push
fidivs
mov
pop
cmp
xor
das
mov
xor
addr16
fmulp
cmp
enter
jo
and
xor
stc
scas
sbb
cmp
mov
sbb
dec
xchg
add
fld
out
sarl
xchg
repnz
ret
outsl
scas
mov
and
adc
inc
imul
mov
clc
mov
leave
jbe
cld
push
jns
adc
aad
push
aas
xchg
mov
movsl
cmc
xchg
add
ljmp
pop
sub
shl
fnstenv
and
sbb
stos
pop
adc
sbb
xor
out
push
adc
pop
adc
pop
cmc
mov
adc
push
lods
cmc
push
les
dec
test
mov
outsb
mov
fcmovbe
xor
add
insl
ljmp
push
arpl
push
push
les
sub
lcall
imul
or
pop
pop
inc
aam
outsb
pop
fstps
or
cwtl
sub
test
and
mov
bound
movhlps
xchg
hlt
js
sub
popf
sbb
pop
inc
ss
mov
lock
pop
push
aaa
cmc
pop
scas
jb
sbb
inc
loope
or
mov
jae
sar
inc
cmpsb
imulb
stc
push
dec
scas
sub
ljmp
push
jns
decb
rcll
insl
push
mov
xchg
pushf
dec
cwtl
sub
and
dec
mull
sti
inc
dec
push
dec
xor
mov
jnp
mov
mov
lds
mov
loope
data16
sub
mov
ret
xlat
jns
sbb
ret
insb
in
xchg
cmpb
dec
jmp
ret
mov
mov
daa
in
sbb
shlb
subb
jl
jle
mov
int
pusha
or
lcall
pop
or
mov
mov
push
mov
and
sarl
mov
fsubr
cli
fwait
mov
jecxz
or
cmpsb
imul
addr16
jl
popa
pop
jge
minps
mov
and
cld
pop
fldt
mov
jb
mov
push
cs
lds
fsubrs
popf
inc
mov
sbb
xor
pop
icebp
sbb
rcl
xchg
in
adc
loope
adc
stos
sub
xchg
pop
dec
shll
jo
enter
pop
push
in
pop
push
add
lods
pop
ficoml
add
movsb
stc
xor
jp
sub
ss
push
adc
in
pop
and
sub
fsubs
mov
mov
scas
mov
push
jo
test
or
out
dec
pop
mov
in
fs
jge
loop
cmc
aam
das
pop
shlb
call
sbb
add
inc
int3
or
sbb
fsubl
jbe
pop
or
xchg
sbb
inc
or
or
dec
lahf
ss
repz
ret
in
fst
add
daa
ss
xchg
fidivrl
mov
adc
mov
loope
xor
sbb
outsl
aam
push
lods
cld
push
jle
lahf
push
fucomip
lret
jne
out
jle
outsb
cmp
enter
sub
sub
cltd
sbb
in
lock
data16
lret
xchg
mov
jno
pop
jecxz
imull
jno
cwtl
in
add
fwait
mov
or
call
aas
sub
rcr
jge
test
inc
arpl
push
mov
pop
push
mov
imul
sub
mov
loope
test
lods
das
xor
aaa
sub
cmp
fdivl
pop
inc
mov
dec
scas
test
jne
outsb
dec
lock
aas
jb
das
mov
cmp
or
gs
aad
mov
mov
leave
repnz
add
xor
cmp
call
mov
es
jnp
mov
xchg
jmp
mov
scas
xchg
jge
sbbl
and
and
pop
bound
add
mov
subb
mov
cs
adc
or
sub
adc
ljmp
push
xchg
aaa
fldl
cmpsb
ret
cmp
jno
in
pop
mov
sbb
or
pop
inc
adc
loopne
cmp
pushf
aad
xlat
nop
rcrb
cmp
dec
movl
fdivl
stos
and
ds
xor
fsubl
xchg
enter
in
pusha
arpl
lret
and
ja
mov
loop
dec
sbb
pop
jl
pop
and
cmp
cmc
movsb
xchg
idivb
ret
mov
mov
cwtl
jb
lds
lock
xchg
pop
pop
inc
sbb
outsl
dec
cmp
js
push
jg
mov
push
sbb
or
or
add
push
mov
push
cmp
xchg
sbb
sub
mov
inc
push
mov
pop
flds
stos
fwait
testb
mov
gs
pop
mov
adc
sub
sbb
mov
adc
mov
hlt
adc
ds
stc
ss
into
push
sbb
push
cli
out
mov
sub
mov
and
jge
rorl
mov
test
mov
ljmp
or
mov
push
add
mov
cmpsb
sbb
bound
fwait
into
jge
or
add
fst
mov
fisubrl
repnz
mov
dec
mov
js
lock
out
xchg
mov
cmc
mov
mov
loopne
push
outsb
frstor
loop
not
outsb
into
out
int3
out
outsb
cmpsb
lahf
xchg
je
add
jbe
sbb
sub
inc
xchg
std
es
pushf
push
xor
push
sbb
sahf
pop
xchg
add
jo
nop
cld
mov
lds
cmp
insl
loopne
inc
fists
push
scas
adc
adc
sub
js
add
sarb
inc
mov
or
lock
cmp
or
adc
add
outsl
push
push
lods
jae
sub
jg
push
mov
std
out
push
push
xor
lock
bnd
xor
fsubrl
push
scas
faddl
cmp
ret
sbb
dec
jno
rcll
mov
imull
jae
and
push
out
cltd
xor
inc
data16
fldenv
mov
out
add
ss
ja
jb
shll
out
std
sub
leave
nop
test
mov
aad
sbb
int
fidivrs
rcpps
mov
mov
dec
cmp
mov
ret
push
in
leave
dec
mov
in
out
bound
pop
cmp
push
int3
and
sub
test
ud1
call
cmp
iret
push
scas
stc
outsb
jge
int
testl
lds
cmpsl
adc
loop
and
dec
gs
or
outsb
je
dec
pop
ja
add
jecxz
jnp
jle
stos
push
cs
outsl
hlt
pop
insb
sbb
bound
mov
mov
mov
shrb
xor
fnsave
adc
and
dec
pop
sub
les
in
ret
data16
rolb
xchg
push
test
sbb
sbb
inc
loopne
shl
ljmp
sub
iret
outsb
inc
bound
fdiv
iret
push
insl
pop
sub
xor
jmp
out
std
cmpsb
cs
pop
dec
mov
fnsave
fstps
cmp
aad
pop
sub
aam
mov
dec
and
lods
loopne
imul
shll
mov
xor
dec
adc
mov
pop
js
fstps
dec
inc
or
shll
sbb
or
out
cmp
pop
ret
sub
dec
lret
or
xchg
sub
dec
pop
pop
out
fists
ja
cmp
jmp
mov
jo
dec
add
mov
sbb
xor
mov
xor
push
in
dec
cltd
sbb
in
test
inc
mov
subb
add
jg
rep
cmc
aam
popf
int3
hlt
aaa
lock
js
push
xchg
pop
je
mov
push
mov
xor
cmp
clc
cmpsl
mov
xor
dec
push
xchg
and
jo
pop
xorb
push
adc
sub
inc
ss
ret
sar
loop
push
add
arpl
ljmp
mov
xor
inc
jns
inc
imul
dec
fwait
into
popf
mov
sub
push
pop
sbb
scas
int3
jns
mov
sbb
sbb
or
ret
push
loope
jl
outsl
inc
test
mov
dec
push
in
testb
and
sti
dec
decb
ss
mov
or
mov
testl
sbb
mov
stos
popf
inc
mov
nop
xchg
hlt
push
sub
fstpl
push
sub
aad
xor
idivb
adc
push
sbbb
xchg
scas
add
call
jecxz
and
adc
insl
orl
out
or
sub
xor
stos
stos
sar
pop
dec
stos
push
pop
cmp
add
mov
and
int3
dec
frndint
pusha
fucom
inc
fwait
and
mov
loope
lea
or
inc
aaa
loope
cmp
mov
leave
inc
mov
lods
fsub
lods
add
and
xor
imul
xchg
mov
cmp
call
incl
fld
movb
add
xchg
mov
iret
adc
or
mov
xor
fs
pop
popl
inc
loopne
imul
outsb
jne
mov
je
subl
popa
xor
xor
add
loopne
fbld
xchg
rcr
mov
inc
inc
mov
test
cmpsb
dec
sbb
je
call
dec
sub
pusha
leave
or
shrl
rorl
adc
test
cmc
sbb
inc
cwtl
ja
jbe
pop
sbb
add
pop
lds
and
push
jnp
add
dec
test
rcrl
inc
adc
push
xchg
mov
push
lret
cmp
outsl
sbb
jns
shl
mov
sbb
pop
ret
xchg
lret
sbb
aad
insl
out
shlb
sub
jge
sbb
fs
test
mov
mov
cmpl
and
ficompl
cmpsb
dec
mov
add
mov
enter
fimuls
add
adc
xchg
pop
dec
jae
xchg
bound
xchg
xchg
int3
sub
push
fistpl
mov
mov
es
fcmove
xchg
hlt
dec
nop
and
in
jae
jns
stos
mov
into
loopne
pop
pop
out
adc
jno
out
out
into
xchg
and
es
mov
inc
imul
stc
icebp
clc
mov
push
pop
ja
jp
out
adcb
icebp
jne
enter
aas
push
mov
push
push
inc
fscale
push
inc
xor
das
pusha
mov
jns
roll
in
adc
aaa
out
jno
fistpll
ficoms
icebp
add
dec
call
mov
ljmp
bound
shrl
fsubl
repnz
sub
mov
sub
add
lds
cmp
inc
add
push
and
cmp
jnp
out
xchg
daa
lcall
out
pop
xor
out
xor
mov
or
adc
push
add
xchg
popa
popl
adc
xor
dec
leave
std
popf
mov
addr16
pop
divb
and
rcll
movsb
jge
out
mov
push
xchg
push
les
add
pop
popa
sub
xchg
push
cmc
clc
ss
add
ret
lea
notl
int3
or
mov
std
into
pop
push
je
enter
pop
jno
mov
std
test
push
mov
dec
out
jmp
imul
lahf
xchg
inc
ficompl
dec
in
mov
dec
mov
cld
xor
lods
lock
pop
inc
ja
cmpsl
dec
xchg
mov
in
cmc
je
sbb
out
icebp
push
movsl
mov
mov
add
cmp
mov
xchg
daa
cmp
xor
jae
cmpsb
mov
jl
cmp
mov
shl
add
dec
or
js
jp
inc
movsl
cld
add
inc
fdivrl
jne
bnd
xchg
sahf
test
popf
mov
scas
outsb
icebp
push
mov
inc
adc
pop
movsl
aas
popf
xor
out
mov
sbb
xchg
outsb
jecxz
pop
ret
stos
push
test
sub
fs
push
sub
lds
jg
inc
out
sarl
mov
sbb
fistl
adcl
pop
mov
dec
fisttpll
popf
inc
scas
mov
jae
cmc
or
pop
shl
add
jne
sub
in
pushf
cmpb
or
out
das
les
out
mov
dec
rclb
add
out
nop
sub
icebp
jns
insl
insl
loope
cmpsb
stc
xchg
sti
pop
in
flds
push
add
cmp
lods
int
lock
and
sub
mov
mov
faddp
sahf
enter
sbb
lahf
subl
fs
adc
movsb
jno
or
mov
mov
rep
and
inc
mov
call
cmp
mov
test
jbe
and
outsl
xchg
in
aaa
cmp
mov
movsl
insl
mov
mov
push
popa
jmp
cmc
lret
fsubs
pop
aas
sarl
mov
mov
dec
daa
pop
xor
jo
in
mov
add
push
les
jecxz
sbb
add
loope
repz
xlat
repnz
push
pop
shrl
aaa
adc
adc
adc
iret
into
popf
imul
ror
cmpsb
mov
push
push
xor
andb
mov
add
jmp
in
sti
fucomi
xlat
dec
fwait
clc
jnp
sbb
pop
jo
cmc
icebp
cli
sbb
rcll
push
dec
jae
and
aam
mov
dec
xor
js
mov
sar
fs
cmpsl
adc
mov
hlt
jne
mov
in
pop
repz
lea
stc
jb
daa
hlt
xor
cmp
sbb
lock
adc
div
push
mov
out
adc
or
sbb
mul
in
leave
pop
fistps
and
lods
jb
addr16
lahf
dec
out
ja
adc
dec
rcrb
and
push
inc
sub
stos
addr16
mov
adc
sbb
stos
lcall
stos
or
outsl
add
push
or
in
iret
mov
or
sbb
fwait
mov
mov
loope
or
stos
push
or
icebp
dec
pop
fs
xchg
dec
stos
shlb
jmp
sahf
cli
and
jb
xchg
aam
dec
dec
sub
mov
adcl
mov
push
xchg
xchg
scas
lea
ds
mov
das
add
jne
push
fwait
mov
and
sub
sbbl
jle
test
sti
pop
js
stc
stos
lahf
xor
ds
aad
mov
popa
out
mov
cmpsb
sbb
inc
inc
lea
scas
add
mov
xchg
bound
iret
jae
mov
adc
shr
out
cli
mov
push
dec
adc
in
mov
lea
inc
xchg
je
adc
lds
subl
mov
and
sub
cld
rcrb
nop
pusha
mov
mov
fstpl
or
aam
xor
push
out
cmp
inc
mov
stos
cmp
pop
cltd
dec
mov
cmpb
cwtl
faddl
imul
add
mov
mov
fcompl
imul
sbbl
roll
into
xchg
stc
jl
loopne
outsl
out
inc
sbb
pop
shl
sub
push
negb
enter
cmp
and
fstpl
cmp
mov
cmpb
and
aam
xchg
subl
xlat
daa
lock
and
test
int3
push
sub
cli
push
outsl
adc
xchg
or
loop
jmp
cmp
cs
rol
int
push
iret
xchg
arpl
push
mov
and
das
enter
add
dec
orl
sbb
cli
outsl
call
pushl
jecxz
andl
test
cmp
sub
xor
lcall
pop
cmp
mov
sbb
call
je
hlt
add
sub
mov
xchg
xor
sub
dec
sbb
or
rorb
pop
and
pop
cli
cmpsl
push
int3
movsb
cwtl
jae
pusha
cmp
cwtl
dec
jl
jg
and
xor
js
rcl
mov
xor
and
imul
call
daa
sub
pop
mov
ret
stos
out
jne
add
or
push
scas
mov
mov
fistpl
jmp
lods
adc
sub
or
imul
sahf
out
dec
dec
xor
mov
lcall
ret
add
push
xor
jg
stos
cmp
xchg
aad
inc
sub
pop
jmp
and
fisttpl
imul
lcall
inc
in
negl
jne
dec
push
mov
pop
lods
and
mov
pop
add
ljmp
mov
cmp
cmc
out
push
xchg
xchg
repnz
out
adc
lds
out
push
je
dec
pop
cmp
dec
das
scas
test
push
mov
pop
mov
lret
ja
sub
jo
int
pop
pop
adc
sahf
add
mull
ret
cmp
adcl
jno
jecxz
andb
fnstcw
loope
push
push
dec
lret
sbbb
xor
test
call
mov
mov
test
repnz
lret
les
sbb
out
test
daa
leave
int3
cmp
or
push
addr16
sbb
adc
in
and
push
sbb
inc
adc
std
xor
idivl
scas
test
psraw
inc
in
dec
outsl
xchg
add
insb
test
lds
dec
sub
jp
shrb
jle
lods
mov
or
dec
jmp
jne
call
jmp
or
ret
std
xchg
int
mov
push
cmpsl
ficomps
std
fsub
mov
dec
sub
push
ret
push
push
movl
dec
mov
mov
cld
icebp
inc
imul
dec
cltd
lods
pop
push
sub
xor
mov
loopne
dec
inc
fcompl
pop
pop
enter
call
clc
je
pop
sarl
stc
out
adc
add
push
insl
xchg
dec
inc
std
gs
push
sbb
nop
nop
dec
imul
pop
cmp
mov
icebp
or
adc
cmp
fisubl
push
iret
scas
push
sbb
sbb
push
mov
int
lcall
js
mov
rorl
fcom
mov
jmp
mov
ret
inc
ds
push
hlt
push
jae
mov
or
mov
jae
xor
pop
mov
push
decl
pop
sbb
cmpsb
je
xor
xchg
shlb
fistpl
push
or
ss
popf
jmp
adc
pop
mov
rolb
mov
mov
mov
subb
push
adc
fwait
jg
mov
pusha
call
xor
sbb
fwait
jbe
ret
sbb
es
push
fiadds
add
and
pop
shl
sbb
out
fistpll
in
fwait
add
or
sbb
sub
shrb
mov
push
out
fists
arpl
into
out
js
dec
lods
adc
xor
push
lret
movsb
pop
ljmp
xor
adc
sub
sub
sahf
push
push
cmpsb
fisttpll
lea
jg
adc
aam
dec
clc
pop
cmp
sbb
cwtl
cmp
inc
cmpsb
rcrl
shlb
and
mov
mov
cmpsl
inc
ret
movsb
cwtl
mov
insb
add
cmp
popf
and
add
mov
jno
cltd
stc
loopne
pop
inc
lods
call
pop
cmp
add
mulb
ss
popf
jne
lcall
je
cmp
mov
fsubr
int3
and
xchg
and
mov
sub
mov
imulb
pop
fstl
sub
or
subl
push
addb
mov
mov
push
xchg
fisttpll
mov
fcomip
inc
stos
adc
sbb
xor
jge
js
int
popl
push
push
xchg
out
fcmovnbe
xchg
in
cmp
cmc
xchg
add
aad
sub
push
xor
fcmovnbe
add
sbb
mov
cmp
push
cltd
gs
rclb
and
or
scas
pop
cmp
sub
ss
orb
jecxz
adc
cs
repz
push
in
jl
in
jge
test
cmp
notb
adc
mov
mov
ljmp
sti
lods
stc
jecxz
shr
lock
mov
pop
push
add
xor
or
mov
mov
into
into
jno
loope
lods
mov
xchg
movsb
xor
sbb
call
cmp
or
xchg
xlat
roll
xchg
and
clc
mov
insb
adc
ss
rcll
into
ret
jae
ja
xchg
push
pop
arpl
roll
push
in
cwtl
es
je
jnp
jl
repnz
loop
out
xchg
pop
imul
xlat
mov
mov
inc
cmc
mov
imul
jecxz
push
adc
fwait
cs
aas
movsl
xchg
idiv
pop
adc
inc
rclb
ljmp
push
icebp
mov
xor
jno
cs
gs
call
fs
lcall
lret
or
mov
ljmp
decl
inc
testl
fisubl
loop
nop
lods
inc
sbb
dec
adc
inc
sub
repnz
enter
or
and
shrb
jno
aad
call
xchg
es
popl
out
jmp
jno
push
in
daa
lret
mov
stc
add
jle
into
dec
add
lahf
sub
pushf
xor
movsl
pop
adc
pop
lret
scas
jbe
repnz
andl
inc
mov
lret
inc
pop
sbb
test
fdivp
mov
jle
dec
push
pop
sbb
sbb
fisubrs
imul
ljmp
loope
push
adcl
int3
adc
xchg
xchg
push
mov
addb
movb
jne
push
scas
in
bnd
fisttpll
add
xor
pop
mov
fistl
inc
cli
pushf
cwtl
insb
inc
xchg
pop
iret
pop
mov
xchg
inc
dec
add
je
push
negb
jge
push
rolb
fldcw
add
incb
push
jp
jmp
push
fisttps
inc
mov
lcall
or
mov
and
mov
ljmp
and
pop
push
mov
lock
fistl
daa
inc
or
jnp
adc
jbe
dec
lods
pop
loope
ds
fmull
out
fdivr
cltd
ds
pop
dec
push
xor
sbb
mov
cmc
cmpsb
jo
xchg
mov
jb
push
xor
pop
or
add
add
cld
outsb
mov
repnz
scas
push
insl
fs
mov
add
dec
insl
jb
and
js
and
jnp
or
loopne
sbb
mov
mov
push
out
push
inc
dec
push
push
out
je
test
iret
mov
cli
mov
ficompl
lcall
xor
add
rclb
cltd
cwtl
and
fstp
pop
adcb
out
rcrb
push
xor
shll
movsb
mov
inc
mov
inc
cmc
cld
repnz
scas
dec
pop
in
out
popa
dec
cmc
fsubs
mov
mov
ficoml
push
loope
sbb
in
mov
fldpi
sub
add
lods
xchg
add
test
or
outsb
mov
out
mov
xor
inc
lock
lret
dec
mov
mov
cmp
cmc
out
dec
xchg
mulb
inc
sub
hlt
js
jg
mov
fcom
frstor
xchg
insb
mov
test
rcrl
push
xor
imul
ret
or
je
xchg
pop
in
jns
mov
adc
lea
mov
incb
xchg
pop
dec
xlat
insb
lahf
xchg
cltd
mov
test
xchg
jp
cwtl
ljmp
roll
in
add
lods
setns
cmp
clc
leave
leave
cs
inc
out
cmpsb
sahf
in
or
pop
xchg
pop
mov
mov
jbe
imul
popa
or
add
aas
xor
ds
jp
cmpsl
lcall
outsl
or
push
ja
or
mov
mov
subl
lds
cs
loopne
push
lea
cmpsl
test
jle
jbe
cmp
stos
sbb
out
add
and
lods
sti
popa
pop
or
cmpsb
out
jle
sbb
out
test
xchg
xchg
xor
inc
xlat
push
into
aas
xor
sub
insl
mov
jns
lods
jle
xchg
out
out
out
push
lods
rcl
xchg
lcall
push
sub
mov
icebp
lret
push
jae
lahf
stos
lods
jecxz
insl
testl
dec
cli
shll
sbb
push
jb
cmpb
fisttpl
add
mov
bound
or
inc
es
xor
mov
test
cld
inc
ljmp
loop
clc
test
scas
push
xor
inc
push
push
call
pop
in
orl
sti
int
cmpsb
roll
ror
mov
mov
int
rcr
stos
mov
mov
pop
push
out
imul
mov
in
enter
xlat
push
or
stos
lahf
lahf
xor
pop
inc
fnstsw
sahf
mov
movsl
inc
faddl
pusha
dec
or
lods
movb
xchg
sar
pop
cs
nop
or
clc
and
pop
cltd
push
dec
mov
in
xor
stc
or
dec
out
mov
mov
add
loope
fistps
pop
jge
int3
shr
aad
cmp
stos
lods
or
into
cltd
arpl
jl
mov
into
push
add
mov
data16
sti
daa
divl
and
mov
ss
lret
orb
dec
lcall
mov
data16
lahf
mov
fs
pop
jmp
iret
adc
in
add
cmp
pop
inc
aas
cmp
or
jb
sti
in
sbb
jmp
push
stos
mov
pushf
mov
sbb
jbe
and
sarl
rolb
std
or
out
ret
cmp
popa
adc
jbe
rorl
dec
or
cwtl
pop
lcall
sbb
pop
cltd
cmpsb
add
add
dec
mov
sbb
pop
nop
xor
filds
xor
or
adc
xchg
outsl
movsb
pop
jbe
mov
in
icebp
enter
xor
xor
adc
pop
xchg
lods
lods
xchg
pop
clc
dec
lret
cld
add
mov
aam
sub
mov
je
or
jmp
and
mov
repnz
outsb
out
inc
lock
enter
push
hlt
insb
hlt
xorl
jg,pn
mov
pop
pop
xor
in
std
lcall
sbb
cmp
es
test
das
ficomps
je
sarb
cmpsb
mov
jnp
rclb
ret
clc
in
xchg
or
inc
push
outsb
repnz
aam
cli
push
loop
sub
pop
stos
push
int
testl
mov
dec
cmp
sub
and
cs
adc
testb
imul
lret
pop
xchg
dec
dec
mov
inc
adcl
add
sbb
jnp
sbb
xor
shlb
sub
test
hlt
jl
push
add
aaa
and
push
into
cmp
addl
in
mov
into
stc
pop
into
aam
sarb
rcll
push
imul
lret
jp
cmp
jp
adc
xchg
fstpt
mov
aam
ret
mov
inc
data16
ja
dec
dec
inc
rolb
mov
cmp
nop
mov
enter
jmp
pop
xor
call
out
hlt
in
dec
int3
in
cli
push
pop
cmp
jge
inc
push
test
mov
xchg
repz
inc
in
mov
shll
pusha
xor
pusha
jmp
aas
mov
cmp
clc
out
and
inc
sbb
ja
clc
lds
xchg
fisttps
call
lock
cmp
and
xchg
shl
and
mov
enter
push
push
lahf
loopne
or
imul
jp
mov
sarl
inc
lcall
cmpsb
shr
testl
add
pop
in
xor
jg
push
int3
xor
push
fld
cmp
mov
jp
mov
ja
adc
xchg
fbld
js
pushf
cmpb
dec
stc
nop
sarl
mov
out
jmp
rcll
das
jmp
loope
or
fildll
mov
aam
out
pop
and
inc
ljmp
add
xchg
xlat
adc
lahf
jge
xor
lds
cmpl
inc
je
in
out
and
xchg
pop
jnp
jg
xlat
sub
rolb
pusha
adc
cmp
sbb
adc
out
ljmp
dec
adc
sbb
insl
sbbl
jecxz
std
sub
test
mov
gs
ja
sbb
xchg
or
mov
jns
movsl
pop
and
jle
jne
ror
and
xlat
and
push
add
fcmovnu
lldt
sub
sbb
daa
insl
adc
adc
hlt
xor
xchg
adc
test
sahf
add
adc
or
enter
aad
test
dec
adc
push
sahf
xor
jp
adc
jl
jg
jle
imul
popf
add
inc
aad
mov
cli
ds
ljmp
jnp
clc
push
push
arpl
inc
jl
ss
in
and
fdivrs
push
into
mov
jmp
mov
testl
fcomps
gs
in
jle
and
push
xor
sarl
fbstp
hlt
pop
movsb
movsb
std
inc
mov
loop
pusha
dec
pop
mov
jl
adc
les
mov
jp
lret
cltd
xor
sbb
mov
xchg
dec
sub
mov
call
ret
cmpsb
xchg
and
xchg
push
nop
jge
loopne
lcall
sub
cmp
arpl
or
mov
cmp
rcr
gs
aam
insb
or
pop
into
js
cmp
call
out
or
cmp
xchg
cltd
fucomp
dec
add
aam
insl
push
les
cmpsl
pop
dec
insb
mov
adc
or
adc
sbb
mov
sub
rcl
and
mov
nop
sahf
xchg
push
stc
insl
pop
and
aam
inc
dec
sub
out
sbb
fsubl
ret
dec
mov
or
addr16
pop
repz
pop
or
je
mov
repnz
push
mov
imul
mov
shlb
pop
xor
arpl
push
aaa
xor
test
daa
lcall
cld
xor
enter
mov
fistl
shll
jne
and
push
jmp
pop
mov
daa
test
gs
sbb
and
sub
add
jbe
pop
imull
in
outsl
daa
add
lods
and
jecxz
and
pop
iret
std
aad
dec
fbstp
test
cli
inc
clc
pop
daa
lock
pop
sub
icebp
add
sub
in
jle
outsl
cwtl
jl
dec
fstl
and
or
sub
xor
push
cmp
rcl
insl
fistl
call
mov
cmp
sub
out
ret
iret
xchg
pop
clc
mov
rorl
mov
stos
jp
loop
sub
mov
lcall
jae
pop
cmp
pop
jns
lods
xor
push
inc
mov
cltd
fcomi
jno
cmp
xor
pop
ss
arpl
leave
push
sbb
andb
xor
in
push
out
xor
mov
inc
inc
int
cmp
jle
pop
mov
cmp
hlt
test
jg
rcll
loop
cltd
adc
aaa
pop
ffreep
insl
roll
dec
mov
cmp
push
xor
or
lret
mov
pop
xchg
mov
dec
repnz
mov
mov
dec
fiadds
jno
bts
call
mov
daa
decl
jl
fidivrl
cmc
push
lods
and
out
adc
ds
shl
fidivl
rcr
push
or
xchg
movsl
add
pop
test
jae
sub
dec
out
and
and
aad
cmp
int
cmpsb
jnp
push
jle
inc
jbe
popf
insb
and
and
in
pusha
subb
mov
mov
test
push
cli
mov
mov
int
imul
das
push
mov
arpl
xor
jbe
lahf
pushf
push
gs
mov
jne
cmpsb
cmc
cli
mov
sbb
pop
stos
or
xor
bound
lcall
in
repz
inc
div
fcomi
in
mov
fs
cmp
scas
adc
outsl
cs
call
movsb
mov
cld
or
and
daa
add
test
cltd
xor
popf
scas
xorb
out
xor
adc
imul
pushf
xor
out
lock
mov
stos
fcompl
mov
out
ficompl
aam
out
test
test
cmpsb
repz
pop
ret
in
cmc
cmpsb
push
sbb
pushf
push
lcall
fdivrs
dec
adc
pop
call
in
add
call
cltd
cmp
cmp
jae
dec
outsb
flds
cltd
jno
or
and
dec
push
push
stc
or
add
cmc
cmp
push
popf
out
xor
cltd
out
xor
inc
cld
ffreep
push
dec
add
fldl
and
movsl
add
fisttpl
or
lds
sub
rorl
mov
mull
into
lret
repz
sbb
repnz
and
or
inc
push
shlb
jecxz
cmc
cwtl
jne
dec
outsl
dec
into
sub
jmp
ljmp
push
int
jne
nop
jo
adc
scas
jecxz
data16
enter
faddl
stc
fidivs
test
mov
lods
mov
and
stos
dec
jns
jl
dec
mov
aaa
outsb
sti
aad
arpl
sub
jmp
lcall
lods
scas
sbb
ret
sub
imul
add
in
call
dec
mov
aas
adc
fwait
or
add
bound
adc
gs
cld
imul
mov
sub
jbe
lret
outsb
mov
loop
inc
mov
dec
in
ja
lret
jbe
in
out
into
mov
push
jns
loopne
jg
loope
inc
fnstenv
push
add
scas
sbb
lock
dec
je
insb
fwait
push
mov
testl
inc
fisubrl
adc
iret
imul
adc
mov
lcall
dec
xchg
insb
out
add
dec
inc
add
push
inc
add
loopne
dec
pop
inc
fimuls
test
and
test
push
leave
push
pop
imul
jne
leave
mov
pop
mov
add
jns
cmpsb
out
mov
test
iret
inc
jmp
arpl
sahf
mov
loop
adc
js
lds
fisubs
inc
loope
or
pop
xchg
std
jge
add
test
les
or
mov
mov
or
pop
int
jmp
add
dec
or
jle
movsb
add
js
adc
out
add
push
pop
jae
jmp
daa
fistps
lahf
addr16
popf
fcomi
xchg
mov
shl
in
jmp
cmpsl
add
or
xor
outsb
dec
bound
sub
es
arpl
pop
testl
aas
insl
dec
mov
jl
mov
jge
mov
fnstenv
lahf
cmp
popf
rcrb
out
fdivr
inc
inc
dec
push
outsl
mov
jge
out
mov
mov
sti
xchg
pop
loope
push
test
or
insb
xchg
in
lahf
pop
aam
push
incl
jo
in
sub
jg
xor
imul
or
add
sbb
adc
push
repnz
xchg
imul
in
loopne
and
xor
imul
adc
insb
data16
and
inc
cmc
cmpl
adc
fdivrs
jl
mov
inc
es
into
inc
mov
and
sub
mov
mov
leave
loop
pop
fcmovnb
push
sub
dec
shlb
sub
movsl
out
push
mov
shll
cmpb
hlt
xorb
add
outsb
xchg
pop
pop
fwait
mov
in
push
xor
sub
cwtl
std
adc
adc
add
cmp
pop
scas
mov
cmpsb
mov
push
fsts
sbb
test
or
fdivs
jns
cld
or
pop
cmp
in
fisttpll
add
sbb
pusha
mov
subb
cmc
das
in
cmp
pusha
shl
sub
out
cld
lret
mov
mov
sub
push
scas
sarl
cli
sub
inc
fadd
gs
mov
fwait
int3
leave
gs
adc
rorb
pushf
pop
mov
aad
jne
fldcw
pop
ja
or
xor
or
popa
leave
lea
sub
leave
mov
repz
sbb
inc
adc
and
lahf
dec
adc
enter
mov
pusha
insb
shlb
and
movb
jno
hlt
jp
test
enter
es
jg
sbb
lods
popf
xchg
or
or
adc
iret
ja
aam
imul
pop
das
mulb
add
stc
js
movl
int3
xchg
loop
mov
mov
and
dec
test
cmc
push
data16
arpl
loop
jg
jmp
aam
xchg
xlat
xchg
mov
jmp
mov
popa
js
adc
jle
or
and
jae
fcmovbe
inc
sbb
mov
imul
add
mov
out
add
lea
mov
jne
jb
cld
mov
xchg
sbb
mov
lahf
inc
push
xchg
bound
sub
iret
test
mov
jge
mov
pushf
jle
aaa
cmp
cmc
decb
repz
mov
cs
mov
jg
sub
sbb
or
mov
stos
nop
mov
lcall
dec
nop
lcall
add
jno
nop
inc
es
jae
mov
call
mov
scas
inc
test
push
roll
adc
repnz
arpl
enter
xchg
int
fstpl
pop
inc
mov
sub
xchg
ja
cmpl
insb
mov
ja
icebp
sub
dec
adc
fwait
jnp
inc
in
push
push
mov
xchg
aad
lea
cs
and
divl
add
fcmove
les
ret
xor
adc
icebp
popf
movsb
xor
adc
addr16
sahf
in
adc
das
mov
jne
inc
xlat
push
out
lock
data16
sub
in
dec
out
or
call
adc
sub
adc
xor
cmc
mov
sbb
mov
cltd
das
push
xor
pop
movsb
popf
jmp
jge
sbb
push
xor
xor
mov
sub
xorl
mov
and
notl
lods
ret
mov
jb
mov
fidivrl
jb
insl
movsl
rorl
and
loop
aas
mov
xor
lods
adc
cmp
jmp
loopne
mov
sbb
xchg
dec
sbb
lds
dec
mov
and
sbb
cmp
std
lret
sub
stc
push
js
in
into
mov
scas
cld
add
popl
sar
sub
jge
iret
subl
jne
cmpsb
ja
insl
out
sub
ja
mov
popa
xchg
loop
inc
mov
and
fdivs
aad
lds
add
aas
push
aad
lret
test
aas
pop
or
jb
sbb
bound
push
pop
roll
mov
inc
jne
mov
imul
jmp
xor
lret
inc
push
repnz
test
pop
push
stc
bound
out
xor
test
cmp
jno
xchg
dec
xchg
popa
les
mov
xlat
pop
in
jecxz
jl
add
lods
push
and
movsl
leave
inc
xor
ja
rclb
add
inc
stos
and
addl
adcb
adc
xor
lods
cmp
lcall
xor
jecxz
fildll
cmpsb
je
int3
jnp
dec
xor
mov
stc
sbb
jae
stos
and
dec
cmp
cmp
icebp
lret
shl
movsl
mov
mov
iret
xchg
movsb
fnstenv
sub
cmp
sub
lods
idivl
pop
push
into
push
je
jle
pop
ret
pop
negb
ret
ror
fldcw
pop
rcll
push
int
and
inc
push
add
aad
and
rclb
in
add
mov
xchg
and
or
xchg
sti
scas
out
xchg
jmp
repnz
cmovae
test
xadd
lret
add
add
out
push
fcoml
push
jb
mov
jns
sbb
lods
jmp
lret
loop
sub
xlat
call
in
incl
sbb
inc
mov
aaa
int3
into
dec
mov
xor
int3
xchg
inc
ss
roll
sbb
hlt
mov
aad
in
jl
cmpsb
mov
lods
shlb
dec
test
fldenv
xor
adc
mov
sub
dec
mov
imul
les
insl
stos
and
int
test
cmpsl
xor
cmpsl
movsl
and
repz
xchg
insb
inc
jecxz
add
xor
rorl
dec
and
aas
jp
mov
pushf
adcl
mov
pop
cs
fistpl
sub
push
xchg
or
out
inc
lea
and
std
mov
shlb
cltd
xor
xchg
cmpsl
mov
push
mov
xchg
shlb
sub
aad
insb
pusha
xor
arpl
pop
or
mov
loope
out
cmc
xor
lcall
push
xchg
mov
and
pop
aaa
and
rcrl
mov
cltd
test
xchg
mov
lods
cmp
bound
mov
dec
cmp
fwait
repz
mov
cmp
je
pop
rclb
jbe
mov
out
idivb
mov
movsb
jnp
mov
test
lret
jmp
insb
into
in
aam
arpl
mov
je
shlb
lock
icebp
in
cmp
push
fs
cmp
testl
ror
xchg
inc
int
xor
cs
js
and
adc
cmpsl
insl
test
fldt
fists
xor
xchg
scas
out
xchg
or
ljmp
sarl
movsl
mov
xor
sahf
sbb
xorl
inc
les
inc
outsl
pusha
mov
cmp
mov
out
adcl
sub
push
lods
jecxz
inc
xchg
push
add
cmp
sub
ljmp
xor
int3
push
outsl
cld
sarb
mov
cs
and
addb
mov
pop
jecxz
pop
insb
xchg
add
shlb
scas
out
add
es
int3
xor
lret
ret
in
mov
add
or
pop
loopne
int3
sbb
popf
dec
and
out
sub
add
inc
pushf
or
das
aaa
jge
subb
sbb
xchg
mov
shrb
es
adc
aad
xor
rorb
roll
add
imul
push
mov
dec
mov
fcompl
fnstenv
insb
mov
jno
jae
jb
jmp
in
dec
ss
lret
adcb
rorl
stc
jmp
push
test
jg
cltd
fists
shlb
pop
sbb
ret
adc
out
add
add
insl
and
lock
inc
jmp
push
lods
pop
pop
pop
or
inc
clc
mov
dec
and
mov
ds
outsl
lods
pusha
sbb
mov
jne
aas
movsb
push
lods
dec
adc
xchg
inc
sub
push
imul
int3
cmp
push
push
add
jge
sub
rcrl
shlb
pop
jns
stos
xchg
mov
je
fnstsw
sbb
or
jo
push
inc
mov
mov
dec
insb
mov
inc
scas
lds
fmull
rolb
adcb
sbb
punpckldq
repz
add
movsl
in
test
push
mov
inc
and
pop
fmull
ficomps
dec
stos
dec
pop
or
sbb
pushf
sbb
adc
mov
lea
xchg
lock
insl
bound
inc
mov
dec
and
daa
aad
ret
shrl
int
dec
loope
subl
and
imul
movsl
jne
insl
sub
test
ja
data16
sub
test
sbb
nop
jnp
and
out
xor
mov
pop
dec
aaa
sti
cmpsl
aam
mov
or
mov
mov
adcb
push
movsl
sbb
mov
ss
inc
in
xor
xorb
int
mov
js
out
jo
cs
icebp
cmpb
jge
js
frstor
lahf
or
movsl
popa
mov
sub
mov
es
push
subl
and
fmuls
dec
cmp
push
lret
push
fidivs
adc
or
mov
mov
ja
data16
aam
stos
mov
push
cmp
adc
inc
and
xchg
rcrl
sub
jmp
ret
in
add
push
stc
lods
jl
push
aaa
sahf
jo
jbe
stos
cmp
mov
or
fsubs
mov
test
bnd
fwait
cmpsl
jle
dec
leave
mov
and
xchg
pop
mov
ds
sbb
cmp
mov
sub
in
pop
cwtl
sarb
add
ss
jl
pop
iret
aam
jo
xchg
inc
ljmp
add
daa
add
sbb
mov
lea
inc
sub
sub
cmp
and
cmp
fidivs
pop
or
xlat
mov
or
icebp
push
iret
sti
mov
faddl
mov
push
cs
popa
mov
xchg
or
fdivrl
sti
data16
scas
aad
dec
push
push
lea
or
xlat
lea
jns
mov
mov
jbe
rclb
push
add
cld
xchg
sub
out
cmp
lds
in
sbb
aas
and
lods
sbb
sub
mov
sub
les
sub
and
cld
add
call
ds
pop
jle
fbstp
push
inc
pop
in
push
lahf
jno
jne
in
push
xchg
jecxz
and
jne
mov
cwtl
and
or
pop
pop
lds
popa
sub
xchg
scas
xchg
mov
adc
pop
mov
pop
sub
jmp
lea
into
jl
in
xchg
dec
push
mov
pop
rorb
in
imull
out
lret
shrl
lods
cmp
cli
scas
cmp
lcall
pop
jns
sti
mov
fsubr
mov
push
fs
loopne
push
jg
mov
inc
mov
jp
insl
test
push
aas
cs
sub
jle
or
sti
dec
daa
lods
flds
pop
or
cli
out
mov
and
loope
int3
sub
dec
cld
pop
push
loop
rol
enter
imul
stc
cmp
mov
aaa
idivl
ja
mov
lods
push
xchg
sub
inc
outsl
scas
mov
inc
or
xor
js
and
push
and
cmp
loop
addl
and
and
lret
xchg
mov
sar
xor
add
inc
subl
stos
pop
xchg
test
jge
dec
lahf
jle
stos
sub
inc
push
movsb
push
lds
scas
outsb
push
inc
sub
adc
imul
sbb
ja
test
cli
inc
jbe
push
test
sahf
cld
adc
aam
es
shll
adc
pop
fisubs
sub
pop
or
int3
cmpsl
push
adc
out
test
xchg
xchg
cmp
addb
sub
aad
mov
xchg
push
xchg
sti
rcrl
scas
dec
rol
ret
cmp
mov
inc
test
xchg
popa
and
inc
popa
nop
cwtl
jmp
pop
cltd
fisttps
jl
inc
test
in
xchg
rolb
jp
sub
or
shl
loopne
ret
inc
inc
shll
adc
mov
xchg
jl
lock
scas
mov
cmp
push
jae
push
dec
hlt
out
ret
xchg
hlt
scas
mov
push
xor
or
jae
aam
mov
imul
dec
xor
js
sbb
push
and
inc
inc
fdivrs
or
add
imul
flds
dec
mov
rorl
call
stc
adc
sbb
sbb
lea
shl
fidivrs
aaa
out
mov
or
lock
sbb
cmp
lcall
cli
mov
test
popa
stc
push
mov
out
ljmp
pushf
mov
inc
and
push
pusha
and
and
test
jne
sarb
xlat
and
sub
movsl
cld
fs
sbb
daa
jne
stc
inc
in
fistps
ljmp
pusha
lcall
lods
cmpsb
out
sub
enter
pinsrw
xchg
push
in
repnz
sbb
fdivrl
add
mov
movb
movsl
adcb
das
pop
or
test
mulb
mov
mov
jne
shll
seta
testb
mov
adc
mov
jg
test
je
push
stos
pop
jne
mov
cmp
sti
lcall
fnstcw
cli
cli
cli
cmp
or
mov
add
xchg
stos
xchg
sub
arpl
lret
mov
mov
sub
popa
xchg
fsubl
sbb
adc
mov
in
sub
lret
and
and
jnp
fidivrl
push
sub
test
divb
mov
fsubp
cmp
xor
sbb
pop
add
repz
in
cmpb
int
jle
mov
push
xchg
and
push
sbb
aas
pop
jb
and
sub
ret
jl
lock
cld
pushf
outsl
or
and
cmpsb
enter
pusha
rorb
dec
mov
fsts
push
arpl
lods
std
mov
inc
cli
popf
inc
fimull
mov
dec
call
aas
xchg
push
js
daa
imull
fsubp
adc
rcrb
pusha
test
ret
mov
sub
sub
cmp
push
mov
sbb
jnp
dec
clc
push
add
sub
in
add
imul
dec
je
ja
notl
dec
int3
test
mov
push
xchg
stos
push
pop
out
xor
cmp
jo
push
scas
mov
into
bound
test
jle
jmp
mul
push
fildll
sahf
pushf
cmc
scas
mov
ret
fs
dec
cmpsb
out
rcrl
xlat
leave
xchg
mov
je
stos
stos
hlt
fcmovu
mov
mov
sbbb
cmp
js
jmp
mov
adc
outsb
cmc
or
js
mov
push
ror
or
cld
jo
jns
leave
jnp
arpl
mov
mov
jecxz
pop
cmc
sti
or
test
xchg
cmpl
mov
scas
fmuls
dec
adc
xchg
pop
mov
pop
xor
orb
xchg
js
lds
or
cli
out
insb
stc
cmp
imul
jnp
lock
push
pushf
notl
out
fwait
push
jne
lods
ljmp
or
inc
stc
mov
add
pop
sti
xchg
pop
sub
test
mov
jmp
pop
or
leave
inc
add
sti
and
popa
cmp
jge
cmp
loop
sbb
xor
adc
je
ret
pop
mov
cmp
hlt
inc
adcl
pop
xor
aaa
mov
mov
loop
std
fxch
and
mov
xchg
or
inc
pusha
push
xchg
pop
mov
jmp
bound
mov
mov
pop
int
push
dec
sub
imul
cmp
mov
setne
sti
rcrb
gs
out
int
mov
ret
mov
pop
sub
imul
enter
xchg
xchg
mov
test
daa
das
filds
jmp
ret
inc
push
dec
or
loope
dec
stos
xchg
testl
jecxz
outsb
inc
cmp
inc
out
aam
addl
push
fs
jg
mov
cmp
sbb
xchg
das
jecxz
add
dec
cs
mov
xor
cs
xchg
adc
inc
or
test
jbe
out
and
inc
insb
mov
jmp
das
mov
test
sub
in
scas
mov
push
je
and
imul
add
cmpsl
pop
sub
iret
sub
aaa
jb
in
dec
mov
adc
int
aam
movsb
shlb
push
out
repnz
mov
mov
mov
into
lret
inc
mov
dec
call
adcb
ja
lcall
push
jl
jp
jge
int3
imul
pop
adc
mov
cs
pop
in
cmp
cli
das
dec
add
mov
xor
mov
call
jmp
inc
mov
je
pop
xor
xchg
inc
fcoml
mov
sarl
sbb
lea
jl
and
jbe
insb
ret
out
decl
dec
jg
shll
test
cmp
shll
std
push
mov
divl
jmp
adc
sbb
mov
stos
int
jg
rol
into
pop
xor
push
std
jb
leave
adc
sub
xchg
jmp
pop
xchg
das
loopne
push
xlat
pushf
outsb
inc
mov
sti
inc
arpl
pop
mov
inc
jbe
stc
dec
lret
js
into
mov
jno
pop
hlt
fs
fadds
stos
add
lcall
push
fwait
outsb
cmove
add
movsb
movaps
push
stos
enter
mov
and
popa
cmpl
data16
jl
enter
sub
popa
push
pop
das
xor
xor
cmp
int
push
sub
fwait
out
sarb
aas
pop
mov
fst
and
ljmp
nop
or
adc
int
dec
ljmp
cli
xchg
int3
push
nop
fwait
in
mov
aam
adc
xchg
jp
das
es
or
mov
outsl
addr16
add
iret
push
lods
divb
hlt
cld
xchg
mov
add
mov
gs
dec
popa
fwait
idivl
mov
cmp
imul
popa
adc
mov
and
iret
inc
movsl
push
inc
loopne,pt
test
jae
mov
cltd
imul
push
std
lret
push
aaa
inc
sub
fisubl
fidivrl
ljmp
push
in
pusha
jo
repz
addr16
call
outsl
push
sub
pop
lods
push
jo
in
bound
pop
mov
insb
mov
hlt
jb
pop
inc
inc
mov
sbb
push
pop
mov
mov
jae
sub
lret
es
jmp
add
sarl
jnp
outsl
push
push
notl
jo
push
das
outsl
fwait
sub
sbb
inc
cmp
pop
lods
scas
inc
popf
push
xchg
jnp
idivl
andb
pop
jecxz
in
sub
push
loop
enter
lret
sub
popa
fcmove
jbe
movl
or
adc
aad
push
out
faddl
mov
ljmp
scas
jne
jno
cvtpi2ps
sub
jnp
dec
rcr
sbb
push
insl
xchg
bnd
xchg
aam
mov
push
pop
jle
ficoml
int3
mov
adc
mulb
shll
add
out
inc
fimull
incb
pop
outsb
movsb
pushf
jbe
xchg
or
in
pushf
jmp
fisubrs
push
inc
cld
dec
jnp
pop
idivb
sbb
add
ss
xchg
sbb
inc
jge
xchg
jns
push
mov
test
scas
and
out
adc
popf
jle
lcall
jb
adc
scas
mov
into
pusha
mov
cli
cmpsl
cli
jmp
in
aam
pushf
mov
cs
div
repz
nop
mov
js
inc
and
rorl
addb
adc
cmpsl
xchg
lods
and
clc
bound
insb
fcompl
aam
add
sbb
les
shr
sub
sti
pushl
lcall
loope
bound
xlat
aas
stos
add
push
pop
out
xor
jae
adc
add
test
push
sbb
mov
xchg
jecxz
loopne
adc
xchg
outsb
jp,pt
jg
inc
jl
xor
call
sub
call
repnz
testb
pop
mov
jo
lea
sbb
cmp
inc
or
add
orb
mov
aam
mov
add
shll
lods
dec
nop
xor
call
mov
movsb
fcoms
xor
jl
push
mov
push
js
ficoms
jne
or
sbb
push
jmp
jae
mov
movsb
addl
mov
push
dec
inc
add
cmpsb
jmp
repnz
ret
test
xlat
push
and
cmp
lahf
fcompl
decl
inc
mov
sahf
sbb
mov
inc
fs
inc
icebp
inc
decb
adc
sbb
cmp
mov
and
cmpl
push
mov
cmp
adc
ffree
pop
inc
ss
add
push
insb
rorb
add
pop
decb
sbb
mov
xor
and
movsb
insl
std
pop
pop
jge
in
movsb
ret
xchg
ljmp
pop
das
scas
cld
pop
aam
popa
xlat
sub
test
add
adc
jl
int3
mov
out
inc
mov
cwtl
loop
movsl
fiaddl
movsl
loope
dec
dec
pop
push
lret
adc
cmp
shlb
sarl
or
popa
loope
push
xor
jle
cs
push
repnz
fstl
lds
pop
or
xchg
and
out
lahf
lahf
icebp
les
inc
xchg
jl
push
popf
inc
xchg
push
not
push
add
cmp
add
add
or
sbb
jmp
cli
cmp
xlat
mov
xchg
stos
fs
lock
jno
mov
add
daa
or
ret
nop
sbb
outsb
loopne
mov
mov
push
fs
jns
loop
mov
xor
arpl
pop
mov
cmp
add
nop
mov
fadds
cli
cmp
enter
mov
je
lock
ret
pop
les
mov
add
jb
sbb
and
ds
hlt
push
xor
jle
mov
push
inc
es
jle
repnz
jae
leave
adc
gs
jns
sub
mov
push
jbe
push
in
stos
dec
sbb
xor
jg
aas
or
push
push
add
pop
mov
stos
enter
mov
shrb
fs
subb
pop
ss
push
push
cmp
enter
jo
xor
imul
and
adc
mov
pop
mov
scas
push
xchg
bsr
xchg
add
and
add
les
je
mov
fwait
mov
pop
addl
pop
cld
jp
and
cmpsb
ret
pop
adc
loop
sub
jno
push
mov
lock
jl
outsl
mov
mov
dec
jle
dec
jp
adc
sbb
sub
outsl
cmc
mov
std
data16
sbb
pop
mov
mov
jns
sbb
ret
jg
shrl
add
loopne
ret
mov
mov
jno
dec
cmp
mov
clc
sbb
stos
push
pop
push
lods
mov
vmread
pop
fidivl
es
and
mov
ret
cmpsb
mov
mov
cmc
aaa
sbb
lds
leave
sub
cmpsb
xchg
push
lret
std
cmp
popf
xchg
sub
lods
das
cmp
scas
mov
pushf
mov
inc
inc
push
aam
repz
into
insb
and
jge
jge
aas
pop
pop
sub
and
pop
mov
mov
and
mov
or
lcall
or
movzwl
jne
pop
sbb
adc
mov
int3
dec
das
jne
add
sbb
and
xchg
sub
icebp
and
sbb
xlat
mov
xchg
or
dec
outsb
inc
xchg
in
adc
sub
sbb
std
mov
out
cmpl
idivb
or
jne
aad
dec
cwtl
aam
mov
daa
arpl
pop
fs
call
popf
mov
loopne
pop
int
or
loop
cltd
cmpsb
aas
in
lret
and
mov
mov
int
dec
out
insl
ret
mov
add
add
mov
lock
jle
test
sahf
sysenter
jbe
mov
cmp
mov
xchg
pushf
ja
or
stos
aaa
imul
lock
pop
push
push
mov
sub
dec
push
xor
add
push
dec
mov
dec
jecxz
mov
cltd
test
lods
xchg
lret
xor
outsl
and
loope
js
jns
xor
adc
cli
lods
xchg
enter
or
pop
inc
push
aam
sub
cld
sbb
int3
aad
insb
repnz
jmp
fcomip
lret
sarl
nop
cmpb
outsb
jne
imul
inc
sbb
pop
cmp
mov
lea
mov
lock
push
cwtl
cmp
scas
imul
inc
dec
xchg
daa
xchg
cmpl
loope
and
sbb
jbe
jne
and
lahf
decl
dec
xor
push
push
adcb
jl
rcrb
sar
int3
fs
cld
cmp
mov
jnp
lods
pop
or
or
push
mov
add
inc
cltd
mov
cmpsb
mov
in
mov
dec
lret
mov
cmp
push
hlt
jle
sub
insb
leave
fst
lods
fnstenv
sti
fdivrp
mov
jo
sub
or
jae
mov
fmull
pop
inc
push
and
lods
or
pop
lods
dec
adc
mov
icebp
push
loope
sbb
cwtl
lea
cmc
mov
movsl
cld
jmp
and
fstpl
adc
or
cmpsb
loop
enter
aas
xor
sbb
ds
pop
sarb
and
enter
sub
ljmp
jge
stos
popa
sub
jno
mov
gs
inc
pop
mov
pop
stos
cmp
xor
dec
inc
lods
ret
dec
pop
inc
push
adc
cmp
jo
fldenv
xor
mov
adc
xlat
fldcw
icebp
push
pushl
or
and
push
xchg
add
gs
stc
sub
lods
inc
in
stos
add
mov
ficoms
int3
incl
xlat
jge
movsb
enter
xor
fs
xchg
mov
or
pop
jp
andl
push
push
jnp
into
pop
xchg
mov
and
nop
lds
subb
add
push
inc
repnz
add
nop
xchg
mov
add
xor
dec
cli
dec
xchg
sti
xchg
xchg
sub
pop
xchg
lcall
or
fildl
mov
xchg
scas
js
popa
xchg
inc
dec
call
push
dec
lcall
inc
push
xor
movsb
gs
cmpsl
inc
add
pop
jmp
popf
es
je
mov
shll
aas
in
hlt
ljmp
and
pop
pop
mov
fldcw
inc
inc
jge
pop
xchg
mov
sub
dec
inc
shlb
out
ja
hlt
sbb
js
repz
test
test
mov
xchg
rclb
jp
mov
nop
ljmp
sub
aam
arpl
jmp
push
or
pop
mov
subb
cltd
fimuls
daa
and
or
cmpsb
adc
sahf
lock
cli
add
add
mov
or
mov
jnp
and
aad
jae
pop
sbb
das
js
xchg
jns
push
in
mov
jne
inc
iret
push
sbb
std
push
lret
shl
or
fmul
xchg
push
pop
aas
je
pusha
jmp
xchg
jp
ret
and
mov
mov
jp
mov
push
or
or
jg
subb
xor
inc
into
lock
cmpl
xor
test
call
stos
xor
pop
or
inc
nop
sub
push
cmp
and
and
sbb
fs
lret
in
pop
jb
sub
ds
sub
sahf
jge
dec
add
xchg
add
jmp
xchg
outsl
push
pop
arpl
sub
mov
pop
pop
jno
mov
mov
repz
cmp
daa
mov
inc
inc
mov
test
lret
je
push
addr16
jnp
mov
dec
or
xor
idivb
inc
sarl
push
cmp
or
mov
lea
leave
in
add
rcll
mov
rorb
cmp
xor
call
mov
pop
repz
insb
stos
int3
jge
pop
addr16
push
out
jne
lds
ret
aad
and
jecxz
das
stos
popa
cmp
into
subb
rorl
pusha
cmp
std
pop
lret
std
cmc
pop
cmc
jmp
adc
sti
push
js
jae
cld
es
dec
lock
pop
loop
cmp
cmp
and
movsb
cmp
shrb
sub
push
pop
sbb
mov
xor
insb
mov
aaa
js
dec
inc
aam
cli
iret
leave
push
sub
aad
cltd
lds
fildll
stos
push
push
pop
mov
gs
js
out
sbb
sbb
or
jno
mov
stos
add
inc
push
add
fwait
add
pop
int
rcll
insb
xchg
inc
imul
xor
imul
jno
mov
xlat
int3
xchg
xor
dec
lret
rcrb
pop
aad
dec
add
shl
inc
mov
ljmp
and
mov
loope
pop
push
stos
sarb
cmpsl
adc
or
pushf
fs
mov
jge
sub
push
push
or
mov
iret
mov
leave
pop
in
sub
pop
add
decb
stos
ss
mov
neg
cmp
cmp
or
cli
loope
fistps
xchg
jp
adc
lods
shrb
jmp
mov
sahf
lods
test
pop
sbb
cmp
call
daa
pop
dec
push
mov
cmpsb
popf
sbb
cmp
lods
sub
in
and
xchg
out
adc
inc
xchg
fwait
sub
mov
fistps
lock
rorl
jns
push
aam
mov
add
or
inc
inc
mov
repz
xchg
jmp
adc
mov
dec
sub
xor
nop
jge
xchg
daa
jae
mov
adc
cmp
push
cmp
out
mov
mov
and
lock
or
insb
cmp
cmp
pop
sbb
inc
xor
cmp
mov
jbe
and
sbb
add
jno
inc
add
mov
xchg
inc
stos
adc
xor
inc
mov
mov
test
test
and
pop
sbb
nop
fwait
adc
pusha
clc
cmpsl
sbb
xchg
leave
and
sbb
xlat
sbb
xor
add
fiadds
les
cwtl
mov
out
mov
fidivl
jns
pop
sti
xchg
xor
adc
jp
or
aaa
inc
inc
popa
adc
mov
clc
and
fmuls
xor
mov
je
ljmp
and
sub
out
or
and
push
cld
and
xchg
xchg
test
xor
cmp
mov
xor
and
inc
adc
das
sbbl
imul
rclb
add
repz
cli
outsl
xchg
scas
loop
jo
outsb
mov
xchg
dec
cli
cld
arpl
mov
repz
popf
push
add
icebp
pop
fadds
xor
add
xchg
es
loop
leave
adcb
fisttps
mov
movsl
push
lret
add
in
pushl
push
loop
or
sbb
jae
out
inc
orb
rcll
leave
mov
clc
lcall
cwtl
testb
or
je
cltd
push
push
imul
cmpsb
daa
rcll
push
pop
lea
inc
xor
lahf
cmp
in
aas
cltd
jl
adc
pop
jp
into
ljmp
mov
mov
pop
mov
jecxz
push
les
popa
add
and
xchg
adc
aaa
mov
xchg
daa
std
lods
jl
test
hlt
repnz
jle
jb
test
push
mov
mov
xorl
sbb
push
ss
mov
push
lret
test
in
enter
xor
mov
test
fs
jl
ret
push
add
ret
mov
add
xchg
jg
add
jge
mov
pop
in
or
xor
push
into
popl
sbb
cmp
incb
fstpt
call
je
inc
rcrb
mov
es
out
jns
test
pop
data16
les
popa
pop
lret
and
jbe
dec
inc
test
addr16
addr16
les
pop
wrmsr
push
fwait
and
dec
mov
call
cli
xchg
mov
push
test
mov
mov
jns
sahf
data16
adc
aas
insl
in
xor
mov
les
mov
pushf
movsl
mov
movsl
cld
aam
into
and
sti
imul
lret
fiadds
pop
lea
jne
popa
jmp
jbe
fildl
mov
loope
lret
cmp
pop
repz
mov
dec
push
sbb
jmp
inc
sub
pushf
fstpt
mov
xor
xchg
imul
dec
push
and
jecxz
xchg
divl
hlt
fcoml
loope
mov
dec
xchg
xor
mov
fidivrl
ret
add
mov
sbb
faddl
popa
dec
test
call
dec
cltd
xor
out
call
xor
xor
mov
ljmp
mov
dec
push
dec
mov
jns
aad
xchg
aam
add
das
pushf
and
sbb
daa
fs
out
jno
adc
hlt
cs
popf
mov
scas
inc
pop
stc
fwait
bound
xorb
pop
std
in
inc
xlat
xchg
inc
dec
stc
scas
lods
movsb
jns
dec
popa
mov
cwtl
mov
xchg
incl
adc
shll
daa
xlat
cli
sub
pop
fwait
scas
hlt
loopne
xchg
sub
and
and
cli
aad
imul
testl
roll
mov
sarb
cmp
shlb
repnz
clc
xchg
dec
add
cmpsb
outsl
sbbb
inc
mov
cs
inc
xchg
jl
daa
cmc
mov
adc
mov
and
sahf
stc
dec
sti
ret
orb
sbb
shl
test
mov
aas
or
adc
inc
stos
dec
outsl
aas
shrb
adc
in
push
or
adc
js
jns
jne
ja
push
dec
loopne
inc
dec
iret
push
pop
mov
jmp
add
pop
xor
xor
inc
pop
leave
xchg
repnz
fsubl
inc
fbld
rcrl
in
fsubr
mov
cmc
mov
mov
push
dec
xchg
or
lds
cld
mov
sbb
mov
lcallw
pusha
adc
ljmp
aad
int3
add
je
jecxz
pop
pop
fildll
insb
pop
adc
dec
and
mov
xchg
cmp
fwait
in
test
pop
xor
sarl
jo
pop
test
dec
ror
jl
mov
push
inc
pop
mov
fmull
cmp
rcrb
lcall
mulb
idivl
mulb
js
and
sbb
mov
cmpl
mov
or
dec
inc
orl
sbb
leave
pop
ret
negb
orl
das
shlb
ss
aad
je
and
les
pusha
addb
ret
rorb
rolb
lods
test
jnp
jnp
or
pop
ret
sub
pop
aaa
push
mov
pop
xchg
xor
add
mov
and
push
fs
sbb
pop
pop
loopne
jmp
adc
test
dec
push
imul
pushf
js
into
xorl
and
add
and
vmovsd
cmpsb
xor
sbb
lods
inc
sti
lahf
roll
add
cmc
mov
aaa
and
fimull
test
ljmp
cmp
fisubrs
in
movsb
cli
cmp
icebp
sub
adc
jnp
shrl
adc
adc
mul
mov
inc
ret
dec
iret
push
fisubrl
lods
push
pop
mov
test
ds
movsb
stos
flds
arpl
mov
mov
push
add
or
mov
out
push
leave
out
push
sbb
pop
inc
mov
pop
pop
adc
cwtl
dec
daa
jecxz
test
lahf
jne,pt
sbbl
cmp
ret
flds
aad
ret
gs
xchg
add
inc
mov
ret
push
mov
test
ror
jae
mov
divb
in
adc
icebp
jp
dec
int
dec
ds
push
xor
test
cmpsb
in
xor
xchg
push
push
add
add
jge
cmp
mov
ret
dec
mov
test
push
inc
adc
cs
lods
pop
stc
fstl
dec
xor
dec
sbb
push
mov
xchg
inc
int
cmp
or
std
aaa
pop
movsb
outsl
call
add
adc
mov
fisttpll
xor
popf
aaa
inc
insb
mov
jno
ja
inc
push
adc
push
test
in
mov
xor
push
dec
lea
addl
or
popf
pushl
xchg
aaa
or
aas
incb
add
and
jae
pop
jmp
pop
mov
mov
adc
enter
push
dec
add
movsl
int
aas
jo
sbb
cmpl
int3
test
sarl
enter
push
xchg
xor
sbb
mov
inc
lods
pop
aad
inc
ffree
push
andw
neg
les
fiaddl
out
repz
add
gs
cltd
mov
pop
movl
pop
cmpsl
push
or
in
sarb
stos
pop
mov
movsb
pop
jge
test
dec
sub
mov
repnz
stos
and
movsl
lods
mov
lods
inc
add
and
mov
sbb
hlt
adc
mov
das
mov
sbb
or
lret
add
pop
aas
daa
in
push
adc
add
dec
in
aaa
bound
adc
fimuls
mov
sub
or
push
add
out
stos
xor
nop
inc
push
push
and
xor
and
inc
das
jmp
pop
pop
ja
insl
addr16
in
mov
add
in
adc
xor
dec
dec
fcoml
iret
stos
test
jl
sbb
adc
std
adc
or
or
xor
pop
ret
lds
pop
cltd
fbstp
dec
and
push
add
push
cmc
in
xor
popf
fldt
cmp
or
in
cmp
sarl
fdivrs
jp
sbb
sub
push
std
iret
jl
addb
lock
cld
repz
push
out
mov
fwait
cltd
inc
in
push
iret
movsl
or
jp
and
xchg
jmp
sbb
insb
inc
xchg
inc
in
xor
pop
sarb
popa
adc
mov
jne
pop
mov
sub
lahf
pop
or
dec
in
pop
add
clc
mov
mov
mov
imul
stos
fs
xor
dec
orb
push
mov
ss
mov
xchg
pusha
sbb
mov
insb
sbb
pop
adc
push
int3
mov
int3
pop
pop
pop
out
sarb
sub
ret
int
sahf
add
js
lea
pusha
push
aas
mov
pop
icebp
push
call
pop
cmp
jp
mov
inc
scas
jp
js
jns
fstpl
mov
loopne
insl
fbld
pop
gs
adcb
push
mov
shll
sub
and
cmp
mov
in
int3
jg
ret
shl
dec
push
icebp
and
lods
ds
insl
xor
xchg
repz
xchg
lods
sub
ret
pushf
push
inc
jl
xchg
inc
pop
lods
and
addb
loopne
mov
pop
sub
add
pop
imul
outsl
xchg
sub
sbb
sub
dec
mov
cld
and
cli
pop
add
dec
daa
ds
loope
xchg
mov
fdivrs
push
sub
into
cmp
and
jp
adc
imul
scas
lds
push
cmp
xor
aaa
cmp
out
pop
mov
dec
es
loopne
mov
ss
xchg
sub
push
xor
mov
repz
cltd
loop
jne
iret
jbe
stc
cmc
mov
mov
push
push
ds
js
push
lods
sbb
push
stc
jg
mov
xorl
mov
ljmp
push
mov
push
enter
repz
imul
imul
aad
mov
adc
xchg
cs
test
outsb
mov
jg
sbb
leave
popf
fimull
pop
fsubr
imul
imul
pop
and
mov
lret
outsb
lds
shlb
xchg
inc
sub
shrl
xor
adc
pushf
lret
clc
push
sub
enter
cmp
lahf
lods
pop
xor
pop
push
pop
leave
fimuls
test
aad
lret
mov
and
cmpsb
jns
ficomps
paddq
sub
popf
xchg
jmp
jne
sbb
xor
jle
mov
push
movsb
push
dec
fdivrs
pop
scas
imul
xchg
popa
jae
or
add
repz
xor
popa
jno
mov
xchg
cmp
add
xchg
fistpl
or
and
fcompl
mov
out
and
les
hlt
nop
xor
pop
lahf
pop
fneni(8087
adc
lods
in
jnp
jb
push
lahf
push
jbe
push
adc
pop
xor
ror
xor
jb
in
repz
pop
outsl
dec
adc
xor
xchg
aas
dec
push
adc
rcll
dec
pop
iret
scas
cmpsb
sub
pop
cmp
scas
test
xchg
jo
out
loope
cs
addb
xchg
push
jp
das
cmp
push
add
stc
in
lret
mov
jb
add
nop
pop
adc
jecxz
or
xchg
aam
xor
call
and
iret
sbb
loop
xchg
or
xchg
sarb
jmp
rolb
lock
outsb
xor
push
lods
mov
mov
test
sbb
adc
push
add
loope
inc
pop
xor
fdivrs
xchg
das
fdivp
sbb
div
imul
sbb
inc
add
das
push
jle
mov
mov
fs
mov
in
add
sub
adc
xchg
pop
in
push
mov
pop
rcr
jg
and
incb
repz
loopne
cli
gs
fldenv
mov
add
int
push
ror
shr
in
adc
push
or
sbb
cmp
or
repz
clc
dec
or
arpl
jno
in
dec
inc
sbb
mov
jno
mov
cmp
pop
mov
int
push
sub
xor
xchg
lahf
pop
outsb
dec
cmp
enter
out
sbbl
fcmovbe
pusha
dec
xchg
jp
les
cmp
cli
mov
mov
aas
arpl
shll
orl
and
sbb
sbb
in
lcall
fwait
cmpsb
mov
dec
sarl
pop
adc
imulb
loopne
xlat
lock
insl
insl
cmp
lea
lret
scas
dec
pop
pusha
inc
cld
int3
je
testl
cmp
push
popa
ss
aad
leave
sub
sahf
out
out
xchg
cmp
xor
stos
add
out
jnp
stos
xchg
sub
rolb
mov
aad
rcrb
scas
xor
xlat
adc
xor
into
addb
bound
test
lods
xchg
mov
mov
fisttps
lret
xor
in
dec
mov
sub
loopne
test
or
ja
mov
add
sbb
mov
scas
push
test
andl
daa
lahf
mov
fstpl
ret
mov
sub
insb
xor
jo
sbb
mov
jb
mov
push
aas
int
pop
fisubl
mov
mov
cmp
xchg
sub
sub
cmp
mov
aam
or
or
popa
mov
ficomps
push
clc
sbb
pop
out
cmovg
mov
sub
mov
mov
or
sub
cmp
push
add
push
cmp
ficompl
cmp
pushf
xchg
jo
loope
pop
je
or
mov
int3
lret
lds
stos
add
mov
xchg
cmp
loop
pop
pop
lds
pop
xor
xchg
jnp
fstpt
dec
push
and
bound
mov
mov
jg
xchg
stos
add
push
push
or
out
sub
test
outsl
rcrl
push
jecxz
mov
movsb
cmp
mov
rorl
jmp
ss
mov
and
push
jae
mov
lret
in
pop
xor
test
jae
stc
in
into
imul
cltd
push
push
dec
xor
pop
add
push
jg
mov
iret
dec
fldcw
jae
xchg
test
test
fldenv
insl
sbbl
pop
add
jp
jmp
jge
jae
add
ljmp
xlat
jbe
xchg
and
addr16
mov
mov
adc
jp
imul
mov
ljmp
mov
mov
add
das
loope
out
push
mov
sub
mov
aad
mov
rorb
sub
mov
adc
xchg
adc
xchg
iret
mov
pushf
inc
mov
mov
jecxz
xchg
lret
iret
sub
sbb
xchg
mov
push
fwait
bound
adc
fwait
mov
bound
xchg
in
jns
jne
cmp
sub
stos
pop
scas
outsb
pop
add
mov
bound
ret
ds
lea
fwait
and
jecxz
mov
mov
insb
ucomiss
jns
jecxz
mov
pop
test
dec
das
jns
arpl
out
lcall
out
jno
and
cli
das
int
mov
and
shll
gs
pushf
iret
xchg
lret
adc
icebp
cmp
fwait
aaa
jae
add
out
xor
fdiv
cmp
and
shlb
inc
xlat
insl
cld
sahf
jae
mov
into
cwtl
mov
aaa
outsl
lock
add
xchg
sahf
fbstp
ljmp
xor
std
sbb
sbb
les
push
lret
cmp
or
cli
roll
xor
adc
or
sub
loopne
adc
sti
popa
fildl
shlb
in
stos
test
lcall
imul
sub
dec
push
lea
inc
jge
ja
jmp
and
xor
pop
mov
in
lock
mov
add
push
or
scas
negb
mov
adc
jp
int
dec
aaa
sbb
inc
xor
push
clc
dec
sub
inc
js
mov
or
gs
sbb
mov
imul
idivb
out
bound
cli
adc
add
sub
ss
test
jl
or
mov
in
push
dec
test
cmpsl
fidivrs
out
ret
test
and
or
stos
es
stos
arpl
xchg
lods
imul
jae
xor
mov
hlt
xchg
sahf
mov
xchg
dec
les
insb
imul
pusha
jae
mov
push
icebp
in
xor
out
sbb
mov
jbe
sub
push
fnop
je
lea
push
stc
mov
loop
or
lock
xchg
scas
cltd
dec
mov
jle
je
and
ret
jne
sub
stos
fcompl
les
inc
dec
mov
and
popf
sub
adc
cmp
out
or
xor
loopne
loopne
xor
repnz
leave
mov
lcall
add
mov
flds
mov
bound
xor
push
lds
push
xchg
lods
mov
jle
inc
out
adc
fwait
loopne
mov
mov
outsl
mov
clc
lcall
dec
cs
sahf
insl
cmp
bound
inc
sbb
inc
mov
sbb
xor
insb
add
repz
lret
mov
jmp
outsl
movsb
add
and
xchg
fstpl
int
xor
sti
dec
insl
pusha
xchg
into
jns
jnp,pt
js
mov
enter
ja
adc
jp
cmc
mov
orb
sub
jno
fistpl
je
outsb
hlt
push
inc
mov
jns
rorl
in
lods
fbld
cmp
ret
lahf
xor
mov
bound
mov
add
shl
push
sbbl
push
xchg
jnp
push
jg
rcrb
repnz
pop
loope
imul
loop
ljmp
push
repnz
cmp
lods
dec
outsb
dec
cltd
jg
adc
cwtl
adc
push
ret
xor
push
dec
cmp
ljmp
roll
shrl
sub
push
pusha
mov
jp
into
rcrl
and
loop
mov
psrld
pop
pop
ror
jae
xchg
jb
lods
aam
jne
imul
jns
xor
mov
repnz
cli
shlb
xchg
pusha
jge
int
mov
call
cmp
lock
add
sbb
or
cs
in
sbb
sahf
lods
mov
lods
sbb
dec
cmc
mov
cmp
notb
stc
mov
xorl
sbb
aad
out
repz
and
adc
jb
xchg
lods
mov
mov
pusha
dec
ret
mov
pusha
mov
cwtl
lds
fisttpll
ljmp
xchg
cmpsl
cmpsl
dec
int3
cmc
inc
aaa
ja
xor
js
inc
cld
out
or
and
cld
inc
pop
aaa
pop
mov
and
bound
not
jne
mov
inc
or
ret
mov
push
aad
cs
push
sbb
mov
scas
add
fidivl
jno
mov
push
fcmovne
xorl
mov
xchg
imul
lcall
push
out
mov
out
dec
std
out
lcall
sub
mov
mov
push
cmp
add
sbb
mov
or
inc
mov
jge
mov
inc
scas
jl
fsubr
stc
cmp
mov
pop
inc
mov
sub
fs
mov
test
lea
inc
pushf
rcrl
cmpsb
or
jg
xchg
pop
mov
out
aam
scas
sbb
inc
push
mov
addb
jp
icebp
in
jle
sbb
mov
cmp
popf
add
mov
mov
xchg
iret
cmc
mov
pop
repz
lods
psubusw
test
xchg
xor
xchg
xlat
cltd
mov
cltd
push
inc
lahf
dec
mov
mov
push
fsubrs
mov
cmp
rolb
daa
je
add
xchg
xchg
bnd
shl
mov
insb
cmpl
nop
lock
sub
add
aad
aaa
inc
call
into
push
jbe
icebp
test
add
push
daa
std
out
cmpsb
or
data16
jg
jp
fsubs
xor
xor
in
testb
loope
xlat
cld
xor
gs
inc
fwait
loop
fistl
dec
mov
jb
mov
lahf
in
pop
xchg
cmpsb
loopne
arpl
popf
sub
mov
sbb
adc
sbb
arpl
mov
fwait
sti
rcll
scas
jmp
lcall
and
enter
fnstenv
mov
push
sub
aaa
les
outsl
add
iret
rolb
pop
lock
fildll
mov
loop
jg
mov
fldl
inc
mov
lret
jp
mov
inc
call
jne
push
fnsave
or
adc
mov
lahf
xchg
push
push
daa
add
dec
push
pop
inc
mov
xor
shll
jnp
ljmp
pop
push
pop
mov
add
mov
shll
pop
mov
jecxz
pop
jmp
into
dec
xor
scas
aam
outsl
cmp
cmp
mov
movsb
aad
sahf
fstpl
xchg
mov
popf
cmp
js
es
cli
xor
mov
xchg
nop
pop
loopne
int
sarb
push
push
aas
mov
aas
mov
mov
xorl
push
lahf
popf
out
mov
imul
repz
ljmp
js
out
shrb
dec
push
mov
fcmove
dec
test
ljmp
pop
jno
push
mov
push
test
jl
cmp
ret
mov
push
and
inc
int3
ss
stos
inc
test
mov
xchg
in
add
test
mov
mov
add
fdivrp
stos
pop
dec
cmp
and
add
mov
fstpt
ljmp
push
fcmovb
hlt
jge
jmp
or
and
pop
and
stos
mov
ss
lahf
scas
fptan
mov
ds
push
in
xor
lahf
sub
jp
mov
jle
dec
loop
fldl
nop
cld
sbbb
into
int3
outsl
jno
fmul
outsl
cwtl
shrl
xor
inc
and
mov
pusha
testl
mov
loope
jns
push
mov
inc
scas
jno
jo
dec
jl
nop
clc
sub
adc
mov
inc
les
xor
and
sahf
adc
cmp
rolb
mov
unpckhps
lret
xchg
fidivl
movsb
adc
das
mov
jnp
dec
xlat
xor
imul
push
rorb
std
shl
mov
or
out
xchg
inc
jns
pop
xor
insb
aas
or
out
and
out
mov
test
adc
xor
adc
fcmovb
nop
mov
push
xchg
push
mov
pop
dec
xor
fidivrl
aad
mov
cli
jo
lods
cmpl
mov
sub
push
add
and
sub
inc
repnz
xchg
rcl
lods
inc
add
jmp
and
xchg
adc
shlb
or
jle
dec
mov
jbe
scas
andb
mov
insb
insb
inc
dec
clc
sub
xor
push
jnp
jecxz
xchg
lods
dec
imul
pop
test
or
push
invd
xor
hlt
mov
jne
dec
fs
inc
and
int
mov
pop
xlat
lcall
jl
mov
lcall
mov
mov
inc
jmp
pop
into
mov
mov
sti
dec
or
adc
inc
repnz
or
xor
addr16
push
dec
cmp
xchg
in
or
and
jae
iret
xor
pop
fs
into
add
xor
outsl
rolb
mov
adc
test
fldcw
repnz
shll
xor
push
aad
fmull
sahf
enter
filds
out
sub
xor
jnp
add
cmp
xor
cltd
std
mov
cmpsb
inc
imul
out
mov
pop
adc
leave
or
add
fisubrs
adc
lcall
imul
jns
mov
mov
dec
jno
mov
or
into
jmp
pop
pop
inc
pop
lods
jmp
test
call
movsb
mov
pop
jecxz
mov
aas
pop
into
mulb
sbb
ss
inc
in
cmp
gs
fcomi
dec
pop
sbb
mov
rclb
cmpsb
aad
sbb
pushf
or
or
aam
in
in
mov
add
orb
outsb
sbb
adc
add
jnp
fadd
adc
xor
pop
fimull
sub
out
xor
sub
jl
call
add
mov
xor
and
jnp
das
mov
mov
test
cmp
sbb
test
incb
or
ret
sub
inc
jp
in
add
and
test
or
mov
sbb
rorb
xchg
push
sbb
repnz
outsb
repz
popa
ret
cmp
enter
push
add
aas
js
shll
push
push
inc
mov
roll
xchg
xor
sbb
aam
cli
jecxz
pop
cmp
or
mov
push
les
jne
cwtl
mov
jbe
jl
clc
sbb
jmp
lods
add
mov
xor
cmp
jg
scas
mov
mov
testl
lret
test
fs
shl
push
loope
pop
sbbb
sahf
imul
mov
mov
mov
sbb
mov
adc
aad
fisubrl
xor
call
cmp
test
push
lcall
sarb
push
add
das
mov
push
jb
mov
xchg
addr16
sub
add
add
add
jmp
mov
repnz
in
sbb
adc
pop
mov
jg
fnsave
std
repnz
ja
lods
mov
enter
rcrl
cmp
into
jo
push
mov
mov
jnp
ret
cs
cmp
inc
cmp
pop
lcall
cli
sbb
sub
mov
and
xchg
mov
push
ficompl
int3
push
and
sbb
xchg
cwtl
jle
push
dec
and
xchg
jbe
xchg
mov
stc
and
das
sub
mov
jg
lds
ret
pushf
faddl
push
in
lea
call
adc
lret
or
rcrb
or
dec
mov
rcll
push
aam
ss
mov
xchg
dec
movsl
ret
pop
xchg
xchg
in
out
lds
add
jp
pop
hlt
pop
ds
popa
les
dec
ja
xchg
jle
xchg
dec
push
fs
inc
adc
pop
add
fisttpl
sub
test
or
cmc
mov
and
adc
mov
or
leave
add
mov
mov
mov
dec
decl
jge
popa
jae
fwait
das
in
xchg
pop
repz
push
cmp
imul
xchg
inc
sar
fidivrl
jb
and
xchg
dec
repz
aad
inc
dec
or
jle
neg
std
adc
sbb
movsb
fwait
js
mov
aas
xor
std
fcomps
aas
pop
fstpl
or
jmp
orl
adc
imul
out
dec
ret
jle
pop
pop
add
push
std
leave
xchg
mov
pop
push
add
loope
adc
mov
mov
mov
les
data16
ret
jae
imul
movsl
repnz
push
jns
subl
dec
js
push
iret
and
pop
push
dec
jl
jmp
call
xchg
aaa
lret
scas
and
loope
cmp
or
testl
lret
adc
jb
jl
movsl
test
cmp
pop
mov
cs
cmp
insb
push
dec
sub
xchg
andb
negb
mov
aaa
arpl
imul
fwait
mov
xchg
ret
mov
ret
ljmp
mov
xchg
ja
popa
xor
popa
and
scas
cmpsl
iret
outsl
cmp
pop
mov
adc
xchg
lahf
sbb
sbb
xor
add
adc
dec
shll
mov
add
int
imul
das
mov
sbb
push
insl
mov
lcall
popa
mov
shl
clc
fadd
add
jp
add
dec
das
scas
jle
cmpsb
mov
loopne
das
ja
mov
imul
xor
ja
sbb
mov
cmpsb
nop
inc
xchg
loopne
fmull
cmp
mov
in
pop
mov
xchg
push
cmp
jge
aam
jns
xor
int
add
sub
and
jnp
sub
gs
mov
adc
daa
cmp
sub
outsl
xchg
in
sbb
rclb
enter
int
mov
ret
jle
mov
cmpsl
pop
sub
lods
enter
mov
lock
or
sbb
cmpsl
daa
or
inc
push
int3
xchg
or
cli
mov
insl
mov
jg
mov
lret
dec
pop
push
dec
out
push
rcl
fwait
lea
shlb
movsl
inc
cmp
adc
sub
jge
insl
mov
jp
xchg
mov
repnz
xorl
scas
xchg
fistpl
std
js
movsl
mov
mov
repnz
sti
sbb
sbb
outsb
rclb
loopne
or
jmp
mov
push
ja
fidivs
cld
cmpsl
sbb
jnp
lahf
ret
add
lea
mov
cli
fwait
ret
je
out
pop
out
arpl
lock
movsl
dec
push
into
xor
cmc
insl
dec
push
popa
arpl
aam
out
shlb
cmp
xchg
cmc
push
insb
jns
pop
cmpsl
pop
xchg
out
stos
test
int
jecxz
or
jg
lods
xchg
pop
and
call
sub
mov
jae
add
mov
mov
jno
movl
push
push
in
xor
xchg
cmc
cmc
jnp
xlat
incl
stc
fisttpl
addr16
arpl
inc
xor
out
scas
mov
xchg
jle
inc
dec
mov
inc
insl
mov
mov
mov
sti
cmp
pop
int
js
std
sbb
mov
adc
jb
outsb
hlt
jl
jb
fisttpll
mov
movsl
jecxz
jbe
jno
cmp
mov
push
imul
cmpsb
neg
pop
push
mov
cmp
int3
popa
rol
push
aaa
cmpl
bound
or
or
and
xchg
scas
jmp
or
xchg
jns
outsb
mov
cmp
xor
stos
sahf
adcb
or
cmp
and
jne
dec
mov
loopne
cmpsl
rclb
je
cmp
aaa
xor
enter
inc
mov
mov
pop
mov
xchg
cmp
sub
dec
xor
or
sub
dec
push
fimull
aad
in
fcomip
sbb
scas
cmp
ret
pop
pop
xchg
cmc
adc
fwait
ds
and
fsubrl
cmpsb
andl
xchg
sbb
enter
pop
or
mov
mov
and
imul
ljmp
mov
dec
mov
lds
sti
or
mov
cmpsb
das
sbb
pop
jb
sub
sub
das
push
repnz
push
dec
hlt
push
pop
pop
idiv
or
jne
out
pop
cmp
add
in
mov
jbe
add
push
aaa
fisttps
out
cmp
daa
test
test
or
sbb
mov
popf
adc
or
dec
mov
lea
fcomp
mov
lds
mov
jp
cmp
sub
pop
std
cmpsb
aam
fldcw
mov
rorl
imul
test
jmp
outsb
sarb
stos
jle
mov
push
jne
lock
sbb
or
pop
into
mov
mov
jo
xchg
popf
sbb
jno
and
incb
and
cmp
mov
adc
xlat
jne
int3
cwtl
es
sbb
lock
je
fisttpl
mov
dec
icebp
and
leave
out
gs
or
mov
lret
dec
test
mov
lock
inc
stos
nop
xchg
pop
or
into
sarb
and
jge
pop
mov
clc
push
xchg
leave
fwait
in
test
jecxz
popf
xchg
outsb
imul
mov
and
sbb
insl
cli
jl
and
adc
sbb
mov
mov
mov
inc
dec
adc
mov
in
and
xor
shll
cltd
lods
xchg
lock
push
xchg
mov
add
cld
frndint
insb
in
orb
xor
insl
xchg
add
xor
aam
cmp
jno
cmp
shll
faddl
pop
aaa
sbb
xor
mov
test
int3
movsl
inc
push
inc
sub
icebp
cs
in
add
ret
dec
jmp
shll
setbe
mov
xchg
xchg
ss
inc
sbb
mov
push
pop
jnp
shrl
in
mov
aam
stos
push
or
sarb
dec
faddl
inc
or
ljmp
popf
fcoms
mov
js
and
subl
ljmp
mov
mov
mov
mov
aam
sbb
fnstenv
je
sbb
fisubs
add
ljmp
popa
imul
mov
add
ljmp
and
dec
jecxz
aad
dec
test
and
cwtl
dec
push
cmpl
inc
xchg
cs
mov
or
int
push
dec
leave
jne
cmc
sarb
out
fs
and
cmp
xchg
mov
xchg
xchg
mov
push
popa
xor
and
add
scas
int
cmc
fwait
arpl
scas
stos
clc
mov
icebp
cwtl
mov
mov
mov
cmpsl
in
jno
shlb
lock
inc
rolb
stc
test
or
jle
ficoms
cld
hlt
and
mov
pop
cmp
dec
lods
in
jg
and
xchg
adc
clc
ss
ds
cmp
xchg
fsts
adc
mov
data16
dec
lock
fbstp
fimull
or
lock
jb
mov
pop
dec
pop
and
fs
movsb
xlat
outsb
fldt
out
add
mov
popf
aad
test
lret
mov
pop
in
sub
sti
rcrb
daa
addr16
cmpsl
adc
jo
stos
popf
iret
mov
clc
mov
push
loop
sbb
inc
popa
pop
rol
mov
movsb
enter
mov
in
ret
lock
jmp
jl
sbb
mov
and
addr16
push
xchg
clc
xor
imul
nop
cmpsl
mov
xor
inc
fdivl
fldcw
lret
ja
cmpsb
pushf
and
icebp
in
imul
cmpsl
into
nop
es
outsl
inc
int3
mov
adc
jmp
push
sbb
cmc
test
xorb
push
mov
int3
cmp
pop
push
out
cwtl
shrb
jnp
fsubrs
sbb
mov
dec
daa
add
adc
pop
xchg
aam
push
outsl
imul
cmpsb
bound
and
es
lret
pop
cmp
addr16
loopne
xor
mov
sahf
sub
mov
js
push
cmp
mov
adc
dec
xchg
lret
pop
scas
cmp
out
out
out
test
xchg
and
ficomps
jecxz
push
test
dec
ljmp
push
cmpl
xchg
enter
mov
repnz
mov
out
loopne
xlat
jns
lds
or
jae
gs
add
clc
ret
jne
adc
cmp
jg
mov
cwtl
sti
loop
int
es
inc
jg
or
xor
fs
imul
jne
mov
and
mov
xor
mov
outsb
aad
push
push
aas
es
pop
dec
push
and
in
insl
dec
out
out
loopne
xor
adc
adc
rorb
sub
or
hlt
jg
negl
out
sbb
stc
xor
popf
sbb
fildl
aam
scas
or
mov
jnp
rolb
push
in
add
stc
cmc
mov
lret
int3
pop
sbb
mov
inc
or
xlat
scas
add
shll
push
adc
dec
adcb
jns
sub
mov
shll
lds
push
daa
sbb
cs
or
dec
jno
je
iret
xor
sbb
in
test
iret
sub
jne
push
leave
js
insb
loopne
outsb
aam
sbb
sbb
outsl
push
nop
lahf
mov
lods
decb
ja
out
cmp
lret
add
and
sbb
push
mov
test
jne
fdivrl
sub
inc
cmp
dec
ss
outsl
push
or
je
test
repnz
adc
pusha
xor
sbb
ljmp
cmp
je
imul
aas
in
cmpsl
or
shll
cwtl
add
mov
jbe
mov
add
loopne
push
or
inc
jmp
and
jge
aad
pop
pusha
adc
filds
in
cmc
stos
xlat
xchg
xor
push
ret
int
add
adc
lea
xchg
jge
ds
mov
in
jg
push
out
or
mov
outsl
push
push
mov
and
cmpsl
push
xlat
add
leave
mov
xchg
add
dec
sahf
cmp
sbb
sbb
push
and
cmc
dec
ficoml
or
scas
ds
xor
arpl
add
xchg
lret
leave
rcrb
xlat
or
inc
cwtl
es
jno
sub
out
sub
and
sbb
pusha
ret
into
push
cld
adc
xor
adc
in
mov
pop
iret
jg
stos
stos
push
movsl
xchg
loope
push
and
fldcw
mov
mov
int3
ret
daa
jae
jmp
add
push
sub
ficompl
scas
sub
jg
add
sbb
fcoml
loope
add
cltd
outsb
mov
inc
idivl
sti
jbe
pop
movsb
push
sub
inc
sbb
lahf
push
movaps
fisubl
negb
nop
mov
aad
sbb
mov
icebp
outsb
pop
xchg
ljmp
je
add
inc
dec
mov
arpl
loope
sbb
cmpb
mov
scas
insl
sbb
cs
sbb
mov
mov
into
push
iret
xor
sbb
xor
fidivrl
cmp
push
loope
xchg
popa
sbb
sarl
xor
and
or
sbb
jnp
pushl
into
jle
adc
pop
in
in
mov
and
imul
ss
mov
mov
push
and
jnp
subl
js
mov
add
inc
fstpt
test
test
add
mov
ret
ret
fdivl
popf
xor
add
cwtl
cltd
neg
cli
sub
push
mov
mov
jl
inc
gs
push
clc
out
pop
mov
pop
adc
or
jp
rcl
shlb
popa
jge
mov
add
leave
push
mov
pop
hlt
pop
popa
add
test
pusha
pop
fdivrs
cmpsl
dec
enter
xor
test
lret
push
inc
dec
lea
fwait
lds
jae
fmuls
into
mov
addr16
mov
mov
or
fadds
pop
sbb
or
jge
stc
push
adc
leave
cltd
add
xor
fists
xchg
lahf
ja
pushf
loopne
or
mov
inc
push
ljmp
scas
stos
cmp
sbb
jg
lods
scas
push
sbb
jecxz
sti
pusha
icebp
cmp
in
inc
sub
loopne
das
mov
push
enter
pop
adc
int
mov
dec
dec
fbld
push
mov
pop
ret
mov
and
cmp
mov
inc
pusha
mov
cmp
adc
stc
cmpsl
xchg
push
test
call
leave
push
call
sub
dec
or
outsl
inc
jbe
inc
adc
addr16
push
pusha
mov
jns
data16
sti
pop
das
jmp
pushf
adc
inc
jbe
inc
daa
fisubrl
push
or
shll
add
mov
jp
mov
fs
xlat
rcl
dec
cmpsb
icebp
imul
cmp
lock
xchg
mov
xchg
scas
sarb
sbbb
enter
and
adc
subl
pop
lods
stos
and
sub
in
pushf
aad
jg
mov
jns
int3
in
lock
cs
test
cmpsl
xchg
pop
shrl
mov
add
outsb
xchg
or
popl
inc
dec
mov
xor
mov
insb
ds
jp
into
xchg
repz
pop
fnstsw
inc
aas
pop
mov
imul
or
out
xor
mov
xor
pop
das
int
imul
cmpsl
movsl
adc
bound
gs
inc
ljmp
scas
js
stos
imul
sahf
inc
sbb
jecxz
inc
stc
movsl
into
xchg
push
sahf
dec
xchg
daa
jno
std
and
inc
pop
test
push
mov
movzbl
mov
push
mov
pop
xlat
lret
shlb
add
icebp
add
jbe
fistpl
mov
adc
inc
mov
pop
jb
mov
nop
xor
int
jno
pushf
jae
dec
inc
insb
iret
pusha
cmp
mov
orb
xchg
cli
cli
add
or
ljmp
jns
sub
sub
sub
mov
or
mov
and
jbe
jae
test
enter
lds
push
xlat
js
inc
ljmpw
pop
call
mov
aaa
dec
dec
mov
pop
fwait
inc
test
push
pop
jg
ret
mov
mov
sub
sbb
and
enter
pusha
pop
xor
sahf
xchg
shl
movsb
inc
mov
adc
mov
rcrl
pop
pushf
push
mov
pop
test
inc
psrad
mov
sbb
stc
pop
ja
inc
mov
clc
push
or
adc
divb
div
cs
jg
dec
fisubl
jp
mov
sub
sti
movsb
inc
inc
lahf
adc
je
repnz
int
arpl
pop
dec
out
jl
xchg
cmp
sbb
mov
rcl
rclb
push
in
mov
adc
and
sbb
ss
mov
xchg
ljmp
jne
xchg
add
int
pop
and
test
lcall
jae
arpl
fldenv
ret
jne
in
pop
cmp
clc
xlat
cmp
icebp
arpl
insl
push
mov
or
push
arpl
push
and
test
loopne
jbe
push
xor
jmp
jne
bound
fs
loope
outsb
and
jl
divb
stc
jp
mov
and
adc
ret
in
lret
xchg
push
xchg
push
ret
mov
rorl
bsf
cmc
enter
int
test
lcall
outsb
cs
push
jnp
neg
out
sbb
ja
push
mov
inc
es
cli
jbe
adc
int3
addr16
inc
negl
in
mov
mov
mov
mov
xor
stc
pop
mov
pop
filds
pop
cwtl
push
push
lahf
int
dec
imul
aam
sbb
fs
testb
out
pop
pop
dec
adc
jne
div
mov
sbb
xlat
shlb
or
sub
insb
push
mov
aaa
sub
out
add
in
scas
clc
mov
fcmovu
out
sub
pop
and
cmp
jecxz
jb
subl
stos
rdmsr
push
sbb
lods
adc
imul
data16
pop
test
fadds
inc
movq
jmp
stos
push
rcr
leave
push
adc
and
int
call
pop
sbb
jne
mov
outsb
fcompl
hlt
mov
cmp
stos
sbb
loope
out
cld
xchg
ja
subb
leave
sbbb
mov
jg
repz
fbld
and
dec
or
xor
inc
stc
fdivr
ss
das
fldt
jl
push
movsb
call
pop
jno
inc
jae
sbb
test
jg
shll
cmp
jae
jg
dec
int
adc
movsb
sub
lahf
mov
sub
outsl
inc
mov
imul
xchg
fs
pop
js
lods
or
and
adc
pushf
aas
daa
or
jns
push
stos
xchg
mov
inc
xorl
insb
xchg
pop
repnz
data16
xlat
inc
push
pushf
insb
mov
push
cmpsb
and
test
ror
pop
stos
add
cmc
ror
cmc
mov
pop
ffree
insl
sub
xlat
fs
cmp
aas
roll
or
gs
test
sub
andb
push
clc
inc
or
pop
dec
xchg
loope
notl
les
movsb
xor
sub
and
xchg
and
or
stc
je
xor
pusha
mov
mov
jne
dec
out
push
mov
xorb
mov
mov
test
sti
cmp
cmp
push
push
aad
int
mov
test
shll
pop
stos
sub
and
loopne
lods
cli
jge
shll
cmp
test
out
jo
jne
loop
rolb
adc
xor
in
xchg
mov
sti
mov
add
fisttpl
divb
adc
and
es
js
jle
pop
lahf
xchg
das
add
int3
jl
shr
jne
fistpl
xchg
cli
iret
test
add
shl
lahf
cmp
shlb
mov
shr
imul
lds
stos
lcall
roll
sahf
push
and
push
sbb
adc
adc
cmp
in
pop
pop
add
xchg
xchg
neg
adc
adc
mov
in
cmp
jae
xchg
enter
fwait
mov
loopne
dec
sbb
popa
jmp
sub
jo
and
push
pop
fidivrs
lds
mov
cmp
lret
js
test
test
call
scas
mov
cmp
mov
insb
and
mov
popl
cwtl
cmp
js
data16
cltd
int3
sbb
sbb
test
mov
aam
pusha
mov
insl
cmpsl
or
je
pop
cwtl
cmp
mov
pop
sbb
movsl
iret
jb
mov
xchg
push
push
fbstp
jge
mov
outsb
xchg
adc
or
cmp
into
loope
jne
mov
mov
mov
gs
and
jbe
test
cmp
sub
enter
sub
fs
mov
push
data16
or
xchg
in
sahf
iret
mov
push
and
push
cwtl
dec
jbe
xchg
lods
cmpsl
je
mov
push
jmp
addl
or
mov
dec
adc
sub
mov
test
aam
fimuls
inc
sbb
mov
xor
push
pop
cld
lcall
adcb
jge
jle
loop
push
arpl
or
jmp
mov
xor
in
add
xchg
push
or
jb
or
fistps
shlb
and
add
xor
fs
out
inc
cmpsl
mov
add
test
push
xlat
xchg
jge
xchg
mov
xor
and
pusha
seta
outsl
out
pop
pop
rcl
cmp
mov
jno
xor
dec
sbb
stos
nop
es
leave
cmp
sbb
rcrl
clc
mov
flds
mov
repnz
shlb
leave
cmpsl
dec
insl
mov
push
scas
out
std
pop
sub
xchg
ror
bound
jno
clc
lds
jge
sbb
out
sti
xchg
sub
ss
ljmp
std
faddl
test
fisttps
xchg
push
outsl
aam
adc
les
stos
mov
lahf
fwait
sub
push
arpl
ljmp
idivl
add
sti
lock
jbe
jno
mov
or
mov
mov
stc
test
cltd
or
xchg
mov
inc
sub
addr16
pop
lds
arpl
push
mov
out
mov
adc
jb
es
repz
loopne
cmp
pushf
pop
or
inc
inc
aas
push
mov
inc
loop
repnz
les
pop
fstpt
out
sti
popf
lods
pusha
pop
and
cmp
fisttpll
push
inc
sbb
mov
sbb
aas
adc
std
sub
cmpsb
pop
xchg
or
lahf
cwtl
js
in
bswap
or
jo
adc
add
fs
mov
out
js
ss
in
into
sub
lds
adc
sahf
xlat
and
jmp
and
sahf
jns
aas
sbb
push
dec
std
sahf
ja
sahf
xchg
sub
dec
data16
xchg
mov
xchg
jl
sbb
roll
xchg
in
inc
mov
or
push
das
mov
mov
push
and
dec
inc
mov
in
xor
pop
out
sbb
cmp
popa
mov
int3
std
das
dec
imul
mov
jg
les
arpl
xchg
dec
fcompl
nop
pushf
and
jb
dec
adc
jno
rcr
sbb
sub
push
test
and
xor
xlat
insb
pop
mov
sarb
pop
mov
adc
addr16
enter
mov
xchg
sbb
dec
sahf
fucomip
cmp
negl
xchg
push
xor
mov
bound
xor
sub
or
inc
cltd
sbb
pop
aad
ret
loop
mov
test
mov
and
push
cmc
rcll
inc
and
nop
roll
add
inc
daa
popf
xchg
lcall
lock
push
icebp
or
insl
sub
xchg
orl
cmp
addr16
xor
mov
and
in
mov
fstl
imul
aad
daa
stos
inc
inc
push
sbb
pusha
sbbb
repnz
stc
insb
xor
or
addr16
mov
scas
ss
rclb
fdivrp
pop
int3
sub
sub
mov
fidivs
insl
pop
lret
or
mov
dec
daa
push
aam
test
repnz
pop
adc
or
jge
mov
das
xor
adc
lret
orl
ret
mov
das
movsb
mov
jle
leave
mov
xchg
and
jae
cmpsl
push
xchg
mov
call
test
out
mov
or
jb,pn
or
fcom
cmc
fisttpll
lret
icebp
dec
cmp
sub
movsl
punpcklbw
mov
mov
ror
int
test
jb
sub
mov
mov
xchg
jle
push
push
gs
movsb
or
mov
inc
aas
js
xor
fistl
xchg
pop
and
adc
sbb
mov
ret
and
sbb
cmpsl
cld
sub
cmp
imul
aas
mov
data16
mov
daa
xchg
push
addr16
xchg
addl
or
mov
or
inc
jbe
xchg
insl
inc
xor
push
popa
lods
popf
pop
pop
xor
cwtl
push
or
lods
enter
xorb
cltd
inc
push
pop
and
insl
inc
sub
ret
in
aam
loop
mov
repz
imul
xchg
xor
sti
mov
dec
imul
out
pop
lahf
mov
push
jbe
inc
jb
mov
mov
stc
jp,pt
fstpt
xchg
insl
jge
inc
out
sbb
cmp
or
inc
or
ret
mov
adc
popf
xor
mov
cwtl
cmpl
cmpsb
adc
add
call
mov
pop
jmp
mov
sbb
and
insb
mov
roll
adc
sar
jmp
add
dec
call
add
ret
in
arpl
insb
and
add
scas
shll
add
mov
push
rolb
sbb
gs
xchg
in
test
in
sbb
imul
push
mov
add
ret
lahf
dec
insl
cmp
pop
inc
xchg
dec
adc
popa
out
mov
arpl
xor
inc
jle
adc
out
sub
add
xchg
fisubs
clc
scas
sahf
arpl
xor
xchg
mov
ficoml
adc
xchg
mov
jbe
in
pop
jnp
addr16
pop
push
ljmp
lcall
push
inc
fs
mov
pusha
mov
subb
shll
inc
mov
test
stos
fucomi
out
add
mov
loop
lea
push
cmp
lea
mov
mov
and
push
mov
lods
das
cld
mov
fstpt
out
jbe
iret
mov
cld
rcrl
sub
mov
js
shrl
jns
jecxz
notl
pop
movsb
je
aaa
rol
rolb
push
scas
std
dec
mov
dec
cmpb
lods
jg
xchg
cmpsb
lahf
xlat
jmp
pop
jae
jo
dec
adc
fsubl
adc
inc
add
in
push
loopne
add
rorb
and
adc
jp
adcl
and
mov
pop
adc
jge
mov
xlat
mov
pop
jl
scas
negb
cmp
push
cmp
adc
in
in
jnp
mov
pop
bound
test
or
jae
inc
icebp
mov
mov
arpl
push
sbb
jnp
jge
sub
add
jne
jp
pop
xor
pop
mov
call
cmpsb
or
inc
lods
and
gs
loop
mov
jmp
push
jmp
push
dec
sub
adc
pop
ret
scas
arpl
mov
fnstsw
adc
push
outsb
inc
loope
mov
dec
ja
jp
lods
dec
sub
shll
cmp
roll
or
jmp
sbb
cmpsl
push
jp
sti
fdivrl
inc
xor
repz
sbb
lods
adc
jns
xor
arpl
ret
or
inc
cmp
mov
mov
orl
stos
adc
fbstp
subb
mov
and
in
imul
dec
pop
push
and
or
dec
int
sbb
sbb
ret
and
cli
and
loopne
sbb
mov
xchg
xor
sbb
mov
sbb
pusha
fbld
xor
jbe
mov
movsb
xor
lods
icebp
in
shrd
lods
in
lods
ja
add
push
sub
pop
out
add
lds
jae
inc
arpl
sbb
es
xchg
jle
sbb
in
add
shll
dec
rolb
call
repz
push
xor
fcmovbe
cwtl
inc
pop
lahf
pop
les
xor
push
out
adc
ret
cmp
mov
mov
mov
stos
lret
fildll
mov
cwtl
lahf
test
add
push
cmp
scas
xchg
fildl
push
inc
test
xor
xchg
dec
xchg
inc
enter
jp
add
lret
mov
in
mov
and
pop
sub
push
out
cmp
scas
mov
iret
and
fwait
xor
fucomp
shlb
pop
jae
scas
iret
jno
into
push
fwait
inc
mov
or
mov
mov
idiv
and
push
inc
push
lods
jecxz
ljmp
jmp
mov
arpl
mov
lods
inc
or
imul
subb
loopne
and
xor
sub
push
mov
add
xchg
in
mov
mov
incb
dec
outsl
pop
inc
pop
repz
insl
sahf
lock
rcrl
ret
clc
xchg
pop
dec
int3
jns
test
cmpsl
dec
mov
nop
arpl
lahf
jo
inc
sbb
mov
dec
add
loope
imul
test
sbb
add
cmc
or
and
cmpsb
add
pop
or
fisubl
aas
ret
xchg
mov
test
inc
flds
push
roll
add
mov
es
jmp
fidivs
fwait
mov
jmp
dec
adc
daa
daa
add
and
and
in
mov
inc
std
sbb
adc
inc
inc
and
aas
int
loopne
and
push
movsl
cmpsl
jmp
mov
loope
out
std
sti
sbb
shrl
pop
cltd
popf
xor
repz
xor
adc
mov
push
lods
or
add
fadd
mov
shll
outsb
jbe
jp
pushf
cmp
mov
jmp
or
mov
fdivrs
push
cmp
mov
je
cmp
cwtl
inc
inc
cld
dec
psadbw
xchg
jae
divl
sbb
inc
mov
xor
xchg
xchg
or
sub
mov
ret
dec
and
std
imul
mov
add
loope
jp
pusha
lods
sti
sub
cwtl
xor
dec
pop
movsl
push
repz
xchg
lock
sbb
lods
mov
cmp
into
sub
repz
loope
mov
jle
jp
incl
cmp
fwait
lods
jnp
mov
add
pusha
lock
jne
mov
sbb
and
adc
das
stos
sbb
push
ss
lock
fmull
push
push
jge
sub
sbb
mov
xchg
imul
sub
xor
cmp
xchg
mov
insb
mov
jne
jne
xor
sar
hlt
negl
aaa
lods
or
inc
jle
in
leave
icebp
or
cld
pop
push
mov
mov
sub
div
jecxz
outsl
fwait
hlt
push
lcall
push
and
inc
bound
stc
pop
adc
cmp
jne
jb
ss
adc
out
stos
sbb
and
add
mov
and
mov
ljmp
aas
xchg
and
cwtl
sbb
jmp
dec
or
add
int3
in
mov
jge
fmuls
xor
inc
jl
in
add
cli
cmc
movsl
cmpsl
jbe
pop
push
xchg
clc
add
movnti
mov
divl
mov
cli
scas
inc
and
cmp
xor
shlb
mov
adc
fisttps
mov
insl
sub
push
movsl
pop
xchg
mov
mov
push
push
push
cmc
lods
push
sub
outsb
push
iret
xor
xor
es
out
or
and
mov
or
mov
xchg
ljmp
loop
bnd
std
sbb
sub
and
push
mov
inc
mov
loop
add
or
std
or
adc
xchg
mov
into
insb
call
stc
mov
scas
xchg
cwtl
or
aaa
push
adc
loopne
mov
js
or
arpl
out
inc
sbb
adc
imul
negb
pushl
lret
or
cltd
mov
or
push
ret
pop
repz
sti
pusha
jnp
or
popf
adc
js
divb
mov
fadds
adc
push
ficoml
inc
push
in
gs
xchg
rorl
jecxz
stos
arpl
pop
mov
inc
pop
sahf
insb
mov
jns
mov
repnz
and
dec
push
ror
icebp
adc
add
sahf
push
xchg
jg
adc
ljmp
adcl
movsl
mov
cmp
cltd
in
add
cmp
xchg
xchg
inc
cmp
and
or
lret
xchg
outsb
mov
pusha
inc
in
pop
shrl
outsl
adc
ja
cmp
mov
adc
push
mov
popa
pop
popf
lret
pop
and
shlb
xchg
ja
loope
in
mov
cmp
mov
jg
sbb
popa
ss
cmpsb
fld
adc
rcr
jge
mov
hlt
add
dec
cmp
mov
faddl
dec
lods
shll
xchg
dec
or
cmpsl
inc
push
movsb
loop
dec
cmp
push
xchg
xchg
in
int3
pop
or
dec
mov
jne
sub
mov
mov
loope
lods
push
lds
cltd
dec
shrb
decl
cmpsl
mov
stos
rorl
mov
add
lods
mov
ret
sbb
lea
jns
cmpsb
cmp
stos
ljmp
mov
cmp
cmp
movsb
bound
nop
mov
gs
push
fsubrl
into
mov
enter
or
pop
sub
dec
mov
cmc
push
mov
sub
jo
pop
mov
and
add
jno
xor
xlat
rorl
test
inc
push
mov
loopne
mov
inc
mov
dec
inc
push
pop
mov
call
or
push
xchg
lret
push
fdivs
out
iret
fs
or
lods
lods
dec
xor
xlat
add
lea
fsubr
sahf
ljmp
popa
mov
jae
push
loopne
fbstp
arpl
out
das
mov
sbb
mov
ljmp
jmp
add
mov
cld
je
inc
lcall
mov
pop
js
fs
mov
loope
adc
lret
jge
mov
push
mov
in
mov
fisttps
lret
push
loop
pop
sbb
xchg
out
adc
ret
xor
cmp
addr16
jp
inc
or
out
and
cwtl
jl
mov
cmp
push
jae
adc
fstl
push
int
xchg
mov
xor
leave
mov
daa
adc
pop
pop
cmc
sub
rcr
pop
cs
bound
and
scas
shrb
les
xchg
clc
mov
cltd
add
jg
ret
mov
mov
inc
cmp
sub
and
dec
push
dec
mov
add
push
add
push
cmpsl
push
stos
stc
and
xchg
mov
je
sub
jmp
test
mov
pushf
das
repz
xchg
and
insb
and
mov
or
lret
fwait
xor
popf
std
push
ljmp
imul
loop
xor
adc
cmpsb
out
dec
xchg
inc
push
pop
aaa
xchg
sbb
pop
std
sub
jns
and
loopew
das
sar
out
cmp
push
test
add
or
mov
xchg
ds
pusha
or
mov
mov
mov
mov
ret
lahf
fs
mov
sub
dec
mov
cmp
cmp
jp
mov
or
mov
cmovae
mov
or
adc
lock
xor
cmpsl
mov
inc
sbb
ret
js
xor
outsl
imul
mov
lret
daa
pop
lods
xor
test
pop
sbb
jae
fucomip
xlat
lret
cmpsb
xchg
jmp
jne
mov
aaa
scas
nop
or
lock
push
push
mov
negb
inc
insb
adc
mov
mov
rclb
adc
sub
lret
icebp
mov
push
sbb
jmp
mov
mov
adc
jae
xor
std
lcall
sbb
xor
jno
push
shll
mov
enter
jbe
or
test
ljmp
xchg
lods
shrb
fwait
sub
push
pop
xor
ret
jp
add
movsb
push
int3
mov
fists
push
mov
std
loopne
xrelease
mov
push
imul
scas
add
aam
jae
test
mov
dec
pop
pusha
das
jae
cld
sub
cs
add
adc
xchg
ret
ljmp
jo
std
mov
xlat
test
hlt
xchg
cli
or
popf
adc
addb
nop
inc
adc
cmp
in
cmp
loopne
out
mov
out
or
popa
mov
es
shlb
xchg
cmc
xchg
imul
mov
inc
inc
or
xchg
pop
dec
mov
imul
xor
dec
sub
test
js
xchg
fwait
mov
push
and
push
shr
add
xchg
in
xchg
pop
sbb
mov
add
sahf
adc
pop
outsb
inc
movsl
ficoml
lock
addl
or
fsubl
arpl
insl
pop
test
lahf
lods
cmp
imul
int3
stc
loope
icebp
fldt
stos
call
out
pusha
fstpl
adcl
lahf
xchg
inc
and
inc
in
pop
dec
xor
mov
lcall
adc
icebp
jmp
scas
pop
sbb
xchg
xor
jecxz
jbe
fwait
inc
orl
adc
cmpsb
dec
push
adc
std
push
iret
das
rcl
test
andl
jbe
aad
data16
push
js
fildl
rcrl
push
mov
cmp
loop
shl
jmp
sub
test
push
jne
jbe
push
xchg
and
pop
decl
push
je
decb
inc
cs
mov
fnstsw
stc
loopne
repz
dec
movsl
dec
mov
lds
call
mov
xor
mov
idivl
sub
shrl
xlat
cmovl
les
xchg
push
mov
xor
loop
fmul
pop
stc
inc
rorb
adc
cld
rcl
rolb
into
add
jmp
and
push
pushf
in
xchg
mov
ljmp
test
pusha
je
add
pop
repz
sbb
inc
insb
inc
dec
andb
or
clc
xchg
inc
jae
les
jo
fs
xchg
push
mov
adc
xchg
ret
cmpsb
cmpsb
dec
or
out
loop
add
es
mov
and
cltd
scas
jp
in
outsl
fdivrp
adc
fwait
or
jg
ja
sub
pop
idivl
add
mov
aad
pop
mov
pop
jge
mov
sbb
sar
add
cwtl
inc
lcall
cmp
fxch
test
pop
std
out
ja
mov
push
sbb
xor
decb
sahf
push
mov
jo
mov
testb
adc
jne
lret
rcrb
push
push
or
ret
add
pushf
adc
push
fcoml
jl
push
or
lret
mov
aad
push
push
push
xchg
sti
xchg
sub
sti
fdivr
aas
idivl
shrl
adcl
adc
in
sub
and
shr
mov
dec
adc
mov
and
push
lahf
and
jmp
aas
mov
mov
imul
cmpsb
pop
sub
or
adc
in
push
jle
dec
adc
inc
mov
ljmp
out
test
pop
sub
dec
inc
inc
mov
inc
cmp
pop
xor
cld
push
stos
jnp
ss
popf
mov
inc
flds
adc
pusha
insl
pop
dec
iret
add
es
sub
mov
call
add
sbb
shl
leave
aaa
pop
push
bound
cld
cmp
notl
cmp
inc
cld
or
and
popf
mov
and
mov
mov
cmp
sahf
adcb
xchg
jle
rolb
mov
movsl
fnsave
cli
ret
and
add
or
mov
dec
push
xor
les
and
jp
popa
js
mov
mov
pop
adc
ret
sbb
jp
out
or
add
xchg
push
mov
shrb
pop
dec
cmp
sub
repnz
mov
xchg
sbb
lahf
pop
cmp
aas
pushf
xlat
into
in
out
push
mov
push
adc
cmpsb
jecxz
sti
inc
scas
into
lcall
dec
push
pop
pop
cwtl
ret
inc
rcrb
sbb
xchg
add
dec
add
in
test
dec
jo
in
cmp
pushl
mov
pushf
push
int
dec
pop
incb
push
jnp
rcr
popf
or
xor
adc
pop
mov
jnp
ja
rorb
je
mov
aas
data16
movsb
sbb
stc
fs
dec
adc
cmp
inc
clc
jecxz
ficoms
cmp
sbb
mov
int3
jne
bound
lret
sub
stc
rcll
jo
mov
test
pop
lahf
js
xchg
sbb
jo
mov
loopne
mov
jl
fwait
lcall
jb
and
aad
out
out
mov
adc
std
shl
fwait
daa
mov
jmp
cmp
in
in
into
call
adc
cmp
xchg
lret
jmp
sbb
stc
or
pop
sti
sbb
addr16
push
fisubs
xor
movsb
fisttps
cli
pusha
sub
mov
mov
xchg
clc
mov
add
fisttpl
pop
push
mov
push
pushf
lods
add
das
jmp
or
sub
addr16
add
scas
insl
call
jg
pop
dec
nop
mov
mov
fwait
jecxz
push
call
xlat
mov
cmpsl
int
rorb
mov
mov
pushl
xor
jge
insb
scas
imul
lahf
js
btr
lods
add
cwtl
shrb
negl
mov
cmp
std
mov
sub
movsb
push
nop
scas
insl
sarb
in
repz
imul
hlt
cmp
xor
imul
inc
mov
outsb
pop
mov
in
jae
lret
mov
sbb
sbb
dec
insb
imul
imul
pop
jo
pop
leave
xchg
push
inc
push
xlat
bound
pop
push
add
dec
inc
push
jl
mov
jg
cmc
mov
inc
mov
adcb
ljmp
shll
jg
pop
inc
xor
insl
cmp
loop
mov
push
ret
sub
lock
in
ficoml
xchg
mov
and
or
push
mov
fs
and
idivl
and
outsl
add
push
mov
or
shlb
mov
mov
xor
stos
repnz
sbb
nop
cmc
sahf
xor
jno
xorl
mov
pop
and
xorb
fwait
mov
adc
add
sbb
fbld
and
enter
movsl
pusha
mov
leave
out
popa
imul
into
test
hlt
jmp
pop
cmp
xchg
out
sub
fucomp
xor
scas
xchg
push
imul
inc
cmp
test
mov
xchg
das
inc
lcall
mov
mov
push
or
ror
jl
cmp
mov
fwait
pop
jbe
cmp
ja
mov
iret
jp
or
mov
or
xchg
push
lcall
pop
pop
mov
mov
loopne
cmp
xchg
test
sbb
and
rcll
ja
push
int
mov
aam
xor
clc
add
sbb
sub
jns
in
mov
dec
outsl
mov
mov
stos
or
mov
push
mov
and
and
fcoml
xor
mov
fwait
bnd
iret
not
pop
or
push
push
rcrl
int3
es
adcb
ficoms
out
aaa
fucom
jmp
jnp
out
and
lea
cltd
mov
xor
das
movsb
lcall
loope
cwtl
ret
cmp
xchg
push
push
inc
imulb
adc
fs
mov
test
in
test
add
leave
adc
push
stos
add
xchg
mov
icebp
or
arpl
mov
test
jns
cltd
lea
and
test
pop
je
sbb
xor
outsb
cmpsl
mov
clc
pop
inc
push
out
mulb
xor
in
sbb
mov
pop
stos
inc
sbb
mov
and
sub
dec
mov
js
or
loopne
mov
pusha
jmp
sub
pop
jae
int3
in
mov
cmp
mov
hlt
dec
mov
fnstenv
std
dec
test
inc
or
decb
scas
xchg
in
add
add
movsb
cli
mov
jg
mov
cltd
nop
lds
mov
jp
sahf
fbld
mov
ror
lret
jne
fisttps
jo
push
stos
loopne
lds
pop
xchg
notl
clc
pusha
jb
inc
mov
mov
mov
sarb
push
rorl
inc
test
or
add
adc
ja
dec
jno
pop
shrb
xorl
cwtl
xchg
xor
sbb
movsl
xor
mov
and
or
mov
ret
inc
mov
cmp
xchg
and
xor
dec
push
jb
divb
icebp
xchg
cmpsl
add
shll
hlt
je
lea
ret
pop
pop
loopne
xor
and
int3
aaa
call
sub
sbb
sub
aaa
dec
insb
or
fisttpl
call
adc
pop
gs
pop
push
mov
add
mov
xchg
fldl
or
repz
sub
lcall
push
push
and
and
xchg
scas
sbb
outsl
shll
insb
leave
rolb
jg
fsubs
mov
mov
je
sub
mov
pop
sti
and
xchg
imul
sbb
stos
aaa
jb
lods
sub
inc
fs
push
inc
outsb
rorl
clc
pop
push
dec
loope
adc
push
lret
insl
jns
xchg
adc
mov
dec
xchg
adc
sub
aam
mov
xchg
sub
rorl
out
pop
cli
jns
cmp
and
adc
imul
aad
mov
cli
out
add
rolb
mov
sub
subl
xor
mov
in
add
dec
and
js
daa
mov
mov
inc
mov
sti
mov
loop
xchg
sub
addr16
shlb
scas
jecxz
js
loopne
scas
dec
mov
jne
test
fnstsw
aaa
add
fimuls
inc
setle
test
dec
pushf
test
xor
jae
push
pop
leave
lods
insb
lcall
repnz
push
xor
adc
icebp
mov
je
iret
cmpsb
ljmp
arpl
cmp
loope
ja
jp
nop
jne
xlat
out
insb
add
insl
test
xlat
sub
enter
scas
lods
movsb
pop
pop
aas
pop
aad
mov
jle
rcr
mov
insl
test
leave
ficoms
in
test
pop
mov
in
aas
ret
aad
mov
insl
in
fwait
sbbl
push
mov
clc
mov
in
pop
fmul
rcrl
push
rcl
lds
sahf
dec
inc
cmpsb
push
dec
cmc
xchg
mov
shll
je
addr16
ret
fidivl
ret
cmpsb
dec
push
sbb
pop
cmpsl
jecxz
mov
push
insl
aam
xchg
in
popf
push
add
jns
cs
pop
scas
inc
dec
lock
jno
inc
loope
dec
lcall
xlat
int3
out
inc
sub
push
push
push
test
mov
dec
dec
cli
jge
outsb
jg
jae
push
sub
mov
dec
dec
mov
dec
icebp
push
clc
idivb
adc
repz
stc
sbb
and
in
jg
mov
pop
sbb
sub
dec
pop
push
sbb
jbe
data16
xor
cltd
aad
pop
leave
cmp
dec
dec
cmp
jp
sbb
pop
inc
imul
mov
pusha
lret
test
or
mov
xorl
and
inc
movsb
out
xchg
aas
pop
dec
mov
xchg
jl
and
push
dec
dec
mov
lods
arpl
push
sbb
jmp
shll
imul
cmpsb
cld
add
mov
fdivrs
bound
inc
in
mov
cmp
mov
int
mov
into
sbb
fcoml
mov
push
mov
lods
rcrb
clc
ds
sbb
call
push
sahf
lahf
dec
jmp
mov
sub
repnz
and
jno
xor
fisttps
add
sar
sarl
sbbl
fcmovne
add
push
std
test
inc
xor
mov
sbb
xchg
cltd
fsub
fadd
xor
jecxz
fidivs
sub
jno
cltd
cld
aad
pop
sub
ja
adc
mov
dec
aad
mov
sbb
jp
ret
iret
ret
or
xchg
sub
mov
fldt
push
btr
mov
inc
in
xchg
adc
add
xchg
xor
popf
jp
pop
mov
xor
push
sbb
data16
rcr
jmp
mov
arpl
jecxz
nop
div
faddl
and
xchg
repz
adc
or
mov
sub
aas
subl
mov
jno
sub
and
xor
mov
jno
test
xor
jne
or
mov
mov
push
outsl
mov
cli
mov
inc
sti
in
sub
mov
push
in
pushl
repz
adc
sbb
fmull
cmp
or
sarb
inc
sub
lcall
fs
mov
mov
jl
sub
lcall
mov
dec
stos
xchg
xor
and
mov
mov
jnp
sti
cs
add
push
mov
call
add
in
adc
pop
inc
loopne
imul
jl
xchg
inc
sbb
rolb
mov
les
fbstp
mov
dec
mov
jmp
or
cmpsl
pop
jecxz
push
and
or
ficoml
jns
xchg
jne
xor
lods
hlt
lcall
xor
cmp
adc
mov
aam
sti
and
mov
adc
push
cmp
ljmp
push
loope
mov
cld
push
andb
mov
dec
vpsubsw
mov
out
sub
ret
call
aam
inc
in
pusha
or
je
and
pop
add
inc
adcl
pop
jecxz
mov
negl
mov
inc
sub
mov
fmuls
mov
dec
mov
inc
es
xchg
adc
pop
sub
lahf
pusha
addr16
out
mov
mov
cmp
sbb
xor
js
imul
sti
sbb
xor
jmp
fs
test
cmpl
pop
lods
mov
xor
lods
adc
popa
ret
xor
loopne
pop
pop
fidivl
xchg
sub
mov
iret
mov
sub
stc
push
hlt
mov
mov
aas
xchg
inc
out
sub
testl
sbb
pusha
cmp
test
insl
or
lods
push
or
nop
shrb
xchg
push
cmp
sbb
push
inc
imul
aas
and
sbb
mov
jmp
mov
daa
adc
mov
fadd
clc
xchg
dec
mov
in
cmp
xor
mov
movb
push
adc
push
stos
dec
les
pmulhuw
pop
push
jecxz
jle
in
add
daa
int
fildl
les
dec
mov
sub
ret
sub
pop
sub
mov
xlat
test
in
pusha
test
mov
jb
push
and
adc
insb
orb
repnz
ds
flds
fmulp
ret
and
ret
fcoms
add
jno
mov
cli
rcll
scas
mov
push
cmp
cmp
cmp
xor
jb
adc
lcall
lsl
or
add
into
call
divl
xchg
test
cmpsb
sahf
mov
in
paddsw
push
xchg
jne
inc
stos
in
sbb
add
sbb
mov
mov
into
and
ret
add
mov
gs
cwtl
dec
lea
adc
enter
sub
sub
cld
insl
dec
addr16
popf
mov
xor
pop
jle
cmp
inc
icebp
stc
outsl
out
les
in
xlat
repnz
test
push
jae
aad
mov
cmp
dec
xchg
nop
sbb
adc
sarb
addr16
fwait
or
scas
maskmovq
divl
ja
jae
jae
add
add
cmp
nop
dec
inc
nop
mov
jbe
clc
lods
mov
scas
mov
lods
and
ret
std
mov
mov
pop
inc
nop
test
pop
movsl
addl
cmp
dec
sbb
in
push
and
outsl
inc
sbb
mov
in
rolb
imul
sub
and
or
outsl
faddl
jecxz
push
stc
sbb
bound
jns
push
sar
test
xchg
pusha
fiaddl
sub
mov
mov
push
out
dec
out
lcall
pop
subb
or
or
fidivl
hlt
dec
call
dec
idivl
test
fdivrp
add
jp
mov
pop
cli
xchg
jmp
lret
and
addr16
mov
mov
lds
loope
adc
ljmp
lods
and
pop
mov
pop
loop
xchg
aad
nop
xchg
mov
sub
jne
shll
push
and
mov
jp
jle
enter
pop
insb
lea
xchg
imul
test
sbb
mov
adc
sbb
jp
dec
sub
dec
push
sbb
loope
add
xchg
dec
lret
or
lds
scas
pop
and
jns
scas
mov
xor
and
mov
sbb
cmp
push
lcall
out
mov
push
jo
and
test
sbb
lcall
jl
insl
enter
pop
aad
jl
mov
sarb
push
jno
sub
mov
add
xor
int
xchg
rolb
jnp
mov
push
mov
fs
lock
call
jg
data16
loop
adc
jb
aad
xchg
sub
aas
cld
sbb
and
std
pop
stc
popa
cmpsb
mov
dec
pusha
loopne
out
xchg
loope
inc
jecxz
jo
popa
leave
popf
xor
aaa
sub
cmpsl
ret
addl
jo
mov
pop
pop
cmp
push
out
xor
adc
dec
add
mov
das
pushf
int3
movsb
js
lods
inc
sbb
mov
adc
add
push
mov
jg
aaa
fisubl
stos
fsubp
pop
cmp
ja
xchg
and
dec
xlat
pop
xchg
movsl
dec
mov
inc
es
pop
xchg
test
push
es
les
movsl
pop
inc
xchg
jp
repnz
mov
jg
fwait
inc
adc
aad
inc
dec
or
jns
mov
jnp
jnp
adc
xchg
pop
js
enter
mov
daa
add
mov
dec
or
daa
fisubrs
mov
out
lea
into
xor
mov
lahf
adcl
cmp
and
loopne
mov
mov
xor
mov
orl
popf
jne
xor
cmp
mov
cmp
sbb
inc
rdtsc
fcomi
mov
outsl
cli
jns
punpcklbw
test
les
push
leave
inc
sbb
jae
sbb
addl
in
jmp
mov
test
call
mov
negb
xor
jecxz
or
lcall
inc
test
sub
mov
sti
jae
xlat
aaa
xor
js
cmpsb
sbb
xor
mov
xchg
popf
shll
test
ss
mov
bound
add
jecxz
pop
or
xchg
movsl
out
lret
scas
scas
mov
push
cmp
imul
mov
mov
fadd
jnp
cmp
and
rcll
push
push
into
leave
sarl
andb
fcomp
add
mov
cmp
dec
xchg
push
adc
mov
adc
ficoms
sbb
xchg
in
icebp
pop
loop
fsubs
lods
mov
mov
pop
jo
sub
into
pop
mov
arpl
shll
movsb
and
into
ljmp
xor
scas
adc
cwtl
imul
test
repnz
rcl
pop
add
and
jl
and
mov
mov
repnz
test
stc
daa
jg
mov
lret
dec
ja
push
pop
pushf
das
dec
fwait
les
add
cmp
outsl
in
mov
xchg
outsl
cltd
inc
add
repz
rclb
shlb
mov
xchg
adc
inc
out
xchg
sub
xchg
mov
sub
scas
pushf
mov
and
mov
iret
cmp
sub
cmp
mov
adc
cmpsb
lods
and
incl
dec
ss
inc
xor
jae
jg
outsb
movsl
arpl
pop
mov
pusha
pop
test
cmc
movsl
cmp
mov
ja
in
mov
fistps
sub
sbb
push
dec
xchg
inc
ret
out
xchg
out
fs
mov
dec
sub
adc
mov
sub
orl
stos
mov
push
and
dec
add
sub
xorb
adc
push
adc
aas
mov
sub
cltd
pushf
and
insb
dec
cld
lock
std
push
mov
cmp
jmp
subb
xchg
bound
cs
cli
je
mov
shrl
mov
shr
out
pop
outsb
pop
pop
stos
bound
mov
aam
inc
cmp
pop
in
mov
or
cli
jne
sub
xchg
cmp
jb
shrb
out
lahf
ljmp
mov
mov
push
adc
mov
rcl
loopne
imul
loop
jo
push
es
or
out
in
arpl
fldt
fdivl
xchg
inc
outsb
sbb
inc
ffree
out
sbb
imull
jo
int3
mov
bound
lock
iret
xor
mov
shlb
pop
scas
push
or
and
dec
fnsave
mov
pop
mov
sarl
mov
ret
out
loopne
adc
mov
adc
jp
sbb
cmp
ret
loopne
inc
stos
mov
cmp
sbb
mov
repnz
out
pop
lock
xor
and
xchg
add
inc
bound
add
out
aas
sub
xor
jns
data16
addr16
mov
fs
lcall
movsb
insb
add
pop
add
cmp
mov
add
cmp
stos
xchg
pusha
and
in
rolb
add
pop
adc
mov
scas
add
jns
push
or
subl
insl
and
jmp
inc
subl
jle
sub
push
mov
xor
inc
cld
push
jbe
into
lcall
shrl
jp
sbb
lock
or
sbb
call
jmp
fildll
dec
lds
cmpsb
mov
sub
dec
lock
cmp
jecxz
movb
cmpsl
addr16
idivl
cli
testl
ss
and
mulb
jg
and
or
pushf
movsl
dec
dec
out
xchg
jmp
aad
mov
fwait
and
mov
daa
dec
in
ror
data16
cmpsb
dec
mov
icebp
cli
jmp
test
xor
sarl
cmp
aam
cmp
push
dec
pop
loope
pop
cmp
es
lods
xchg
inc
mov
inc
enter
pop
add
dec
pusha
push
push
add
ja
xchg
clc
xor
dec
and
lds
cmp
dec
dec
cmpsb
inc
push
mov
out
sbb
icebp
data16
into
mov
adc
inc
iret
icebp
notb
jno
subb
hlt
pop
lcall
sar
ja
pop
push
xchg
push
pop
cmpsb
lcall
mov
sub
mov
cmp
je
cltd
pushf
addr16
movaps
adc
std
push
fidivs
sarb
or
imul
xor
mov
sub
add
push
xor
sbb
mov
add
jmp
pop
ror
arpl
or
mov
pop
sbb
inc
aam
in
call
hlt
and
dec
push
stos
mov
lret
xor
lcall
faddl
xor
movsb
arpl
hlt
inc
pop
jno
lret
imul
push
sbb
lods
sti
mov
xchg
mov
cltd
dec
cmpsb
add
mov
enter
xchg
sbb
fs
testb
inc
andb
outsb
lret
mov
xor
add
imul
clc
jo
out
clc
and
je
ds
jge
addr16
push
adc
cmpsl
cmp
lret
mov
stos
push
adc
iret
push
jl
and
das
add
mov
pop
or
call
jge
push
int3
xchg
mov
jl
imul
repz
stos
and
mov
pop
ret
in
stos
roll
sub
fldt
push
add
cmp
dec
mov
inc
adc
dec
sbb
xor
push
in
pushf
mov
ficoms
dec
cmp
xorb
or
inc
xor
push
clc
xorl
aaa
push
jae
sub
sub
lcall
dec
sti
jmp
aad
clc
mov
mov
arpl
xor
movl
dec
mov
jnp
jne
jns
repz
in
jge
inc
jno
in
loop
fbstp
cmc
adc
and
mov
xchg
jmp
mov
jbe
aad
iret
scas
inc
stos
dec
mov
jns
xchg
sub
jo
adc
cmc
jns
jb
jo
popf
aaa
mov
in
jnp
jge
push
pop
sbb
sub
or
lods
mov
inc
xor
ljmp
jmp
call
cmp
push
cmpb
push
mov
sahf
and
cs
sub
jne
mov
lods
xor
popa
int
push
xor
mov
out
fnstsw
jmp
mov
inc
scas
rcrb
jge
xchg
fsubl
out
jno
mov
pop
daa
mov
je
test
int3
stos
jb
xchg
iret
movsl
addr16
shrb
outsb
jns
and
xchg
jns
mov
sub
add
rclb
popa
fwait
add
inc
adc
mov
out
adc
cwtl
test
test
fistpll
mov
cli
fnstsw
dec
xor
into
cmpsb
test
pop
jp
pop
test
push
sbb
inc
push
mov
addr16
add
mov
cmpsl
and
call
jo
push
iret
fstpt
notb
dec
gs
adc
adc
and
add
and
ret
lret
aad
and
je
sbb
movsl
xchg
shl
scas
cld
and
mov
test
jle
cmp
dec
clc
lret
cld
into
outsl
add
lret
hlt
mov
test
mov
mov
mov
in
out
sbb
subl
sub
adc
cmp
int
into
lock
mov
pop
arpl
and
xchg
testl
add
ja
jmp
or
add
cli
aam
xor
push
mov
stc
mov
xor
cmp
rol
inc
imulb
outsw
cmc
xchg
cmp
xchg
test
xchg
inc
push
xor
test
outsb
mov
lahf
ljmp
sub
push
mov
mov
xor
xchg
cmp
stc
sbb
jns
add
scas
push
jo
xrelease
cmp
outsl
sub
cltd
xchg
xchg
stos
mov
or
enter
jg
stos
jge
mov
aaa
adc
les
xchg
call
dec
hlt
push
push
in
clc
testl
int3
enter
lret
ret
movsl
cld
inc
or
mov
ret
aad
jge
mov
sbb
jge
out
sbb
ds
pop
push
push
inc
pusha
neg
shlb
xlat
sbb
out
fcoml
mov
push
cmp
pop
push
imull
push
cld
int3
mov
jae
lods
js
mov
outsl
leave
mov
jp
scas
ss
fldt
push
add
icebp
push
push
iret
test
aam
lods
dec
sbb
cmpsl
popf
mov
sub
leave
xlat
insl
std
cltd
lods
push
vpminsw
popa
push
or
jge
push
jmp
les
mov
movl
pop
sbb
in
or
fstps
loop
xchg
or
das
jl
mov
hlt
sub
or
add
xor
push
test
jne
bound
inc
or
add
push
sub
ss
mov
clc
test
and
xor
mov
out
insl
sbb
inc
fs
inc
cli
pop
mov
outsl
pop
sub
movsb
test
int
shlb
testl
repnz
pop
push
pmulhuw
test
test
das
mov
in
sti
push
cmp
ljmp
and
pop
cltd
mov
add
popl
xor
mov
test
cmp
sahf
xor
stos
and
sbb
cmp
dec
insl
mov
je
xlat
mov
and
call
mov
loop
jne
sub
push
jp
rcl
push
shl
mov
int
pop
inc
pop
js
addl
int
repz
mov
pop
push
lcall
xchg
testl
sbb
xchg
out
mov
ficoml
add
jecxz
shll
shrb
jo
or
popf
sar
cmp
les
and
mov
xor
iret
add
or
mov
cli
mov
aas
mov
scas
inc
xor
jns
push
ret
add
popf
or
lcall
cmp
enter
pop
push
into
rcll
das
cmp
push
into
and
sbb
lret
or
test
rolb
push
je
popf
loop
mov
imul
orb
sahf
push
out
inc
test
daa
in
sarb
lret
pop
pop
sub
ds
mov
repz
in
jg
orb
outsb
xchg
sbb
ds
mov
jecxz
and
in
pop
xor
loopne
out
or
cltd
push
in
pop
out
xor
push
fnsave
cld
dec
popf
cmp
ljmp
dec
pop
mov
sar
hlt
aaa
shll
cltd
leave
outsl
xchg
out
ss
sub
xchg
lahf
xor
jnp
jnp
pop
pop
and
inc
mov
negb
out
mov
cmc
stos
add
xchg
add
mov
jae
insb
in
cld
inc
fs
add
or
inc
call
cmp
pusha
adc
dec
and
cmc
jge
rclb
push
jbe
cmc
ja
ficompl
or
xor
pop
loope
jg
mov
aaa
cmp
das
fimuls
xchg
sub
mov
dec
mov
sbb
add
je
packssdw
jb
pop
mov
push
out
call
test
inc
clc
push
dec
jl
xor
add
sub
nop
cmp
ja
cmc
pop
jecxz
mulb
aas
pop
addb
int3
sub
sti
imul
aaa
and
xor
and
cmpsb
stc
fsubs
mov
push
or
push
adc
mov
mov
loopne
pop
or
inc
out
inc
das
adc
push
and
mov
mov
daa
cmp
lret
mov
cwtl
jecxz
cmp
xchg
and
imul
movsl
sti
cmpsl
cmp
mov
push
jbe
pop
rcrl
stos
pop
jb
inc
xor
cld
dec
adc
sub
jns
xchg
mov
pusha
movl
jo
mov
lahf
mov
leave
mov
sub
xchg
or
pop
stos
fisttpl
mov
sbb
cmp
xchg
sub
es
dec
add
lahf
test
inc
xor
leave
pusha
or
call
rcrl
and
pop
js
test
popa
sub
and
nop
outsb
bnd
repz
jbe
pop
mov
xchg
pushf
cmpsl
sub
std
roll
jb
das
adc
xlat
loopne
iret
add
mov
lds
push
subl
lds
lock
mov
outsb
inc
cmp
ja
fs
dec
aas
loop
orl
rolb
leave
adc
lcall
and
mov
arpl
xchg
rorl
inc
adc
aaa
mov
adc
clc
mov
aas
xchg
mov
cld
xchg
jne
lret
gs
cmp
pop
sub
add
je
loop
in
adc
push
or
aam
jl
add
sub
pop
shl
fcoms
fcompl
cltd
jmp
out
adc
pop
sub
and
je
movsl
daa
mov
out
stc
push
cmovo
mov
xor
xor
xorb
pop
gs
out
lcall
jle
cmp
das
loopne
divb
push
lock
cmp
mov
sbb
dec
fcoms
pusha
pop
repnz
insl
inc
or
and
loopne
add
sub
push
mov
imul
jo
inc
sbb
adc
or
rolb
popa
or
adc
pop
push
popf
push
jmp
pop
xor
push
mov
fidivrl
out
mov
mov
pmaddwd
push
cmp
outsb
mov
inc
or
cmp
mov
sbb
adc
lods
xchg
fisttpll
mov
jge
xchg
outsl
and
pusha
into
add
and
mov
adc
and
cmp
pop
insl
adc
cmpsb
cmc
jne
jmp
outsb
imul
out
lea
push
mulb
sbb
push
lods
lahf
les
incb
imul
mov
cltd
mov
in
xchg
cmpsb
adc
push
push
push
pop
jne
bound
das
js
dec
imul
mov
fmul
mov
lods
retw
aaa
cmp
push
das
out
popa
mov
pusha
pop
xor
sahf
enter
mov
rcll
scas
dec
stos
lds
push
std
aas
sub
sbb
jo
lahf
pop
xor
push
iret
ja
xor
test
sahf
dec
adc
loope
mov
sbb
jg
xor
push
movsl
sahf
sub
push
cld
sahf
or
xor
lock
push
insl
pusha
pop
pop
lahf
dec
ret
jne
jno
cmp
and
sub
fst
push
out
ret
scas
faddp
adc
repz
xor
add
loope
subl
lock
stos
daa
xor
aam
jp
repz
jge
add
hlt
cmp
dec
dec
mov
sahf
lcall
pop
xor
in
ljmp
bound
dec
mov
sti
pushf
add
mov
push
inc
pop
int
mov
mov
pop
leave
ret
int3
ret
xor
in
aas
pusha
idivb
xlat
jp
dec
dec
push
ret
inc
gs
out
scas
rcrl
mov
movsb
ret
push
dec
rcll
jnp
inc
lret
fsubrp
add
mov
jb
popa
inc
jb
jne
out
cmp
xchg
out
popa
into
sbb
pop
mov
das
das
and
push
mov
jle
imul
ss
pop
sub
and
cmp
lds
and
adc
ds
xchg
push
data16
into
sub
in
sub
cmpsl
test
xor
aam
inc
push
push
roll
lds
test
sbb
aas
and
jb
jl
inc
xor
or
pop
sub
sub
inc
jns
cltd
rcr
mov
add
xor
push
push
cmpl
mov
fadd
pop
pop
xchg
or
shlb
cmp
xchg
fstpt
adc
inc
push
mov
adc
lcall
cwtl
add
scas
jno
shl
jne
addr16
xchg
mov
mov
aaa
ret
sbb
icebp
in
push
push
aam
aam
push
dec
lods
aad
repz
inc
insl
dec
fdiv
and
mov
test
dec
arpl
sbbl
subl
bound
add
outsl
push
lea
or
push
pop
bound
in
xlat
push
mov
lcall
lret
test
in
cmp
jne
out
std
sub
rorb
or
push
push
std
xchg
mov
sub
addr16
or
ret
jno
subb
or
add
std
fstpl
xor
cmp
and
mov
pop
jmp
popf
ret
push
in
nop
hlt
mov
fidivrl
clc
xor
adc
push
rcll
test
jb
popf
imul
cmpsl
add
outsl
sbb
xchg
das
shlb
iret
sub
xor
shr
in
adc
xchg
or
jecxz
out
dec
out
mov
cmp
mov
sub
pusha
cmp
ret
cli
dec
inc
outsb
shrb
testb
outsb
inc
xor
fs
sub
mov
stos
aam
lcall
mov
lret
jmp
inc
pop
aas
pop
xor
mov
neg
pushf
and
xchg
ds
test
aaa
mov
push
and
sbbb
fiadds
push
and
mov
nop
test
lds
cmpsb
movsl
inc
shl
test
ljmp
shrl
enter
lret
es
jmp
stos
in
adc
push
dec
and
xchg
in
imul
fucom
loope
sbb
call
jae
sub
data16
dec
fs
sbb
add
add
xchg
jge
pushf
adc
mov
cltd
adc
push
pushf
scas
add
hlt
cmpsl
dec
scas
fsubrl
inc
loop
imul
imul
mov
pop
sub
es
inc
inc
sub
insb
call
inc
aaa
repnz
adc
inc
pop
xchg
add
push
clc
xor
cld
sub
pop
fistps
pop
divb
fdivrl
ret
jge
xchg
push
jg
cmp
insb
cwtl
lcall
repz
sti
insb
jae
mov
adc
and
pop
fldenv
push
rcrb
push
or
call
enter
dec
xchg
mov
add
mov
pop
pop
cmp
or
mov
fiadds
mov
call
sarl
sub
in
xchg
pop
xor
and
xor
inc
dec
jmp
mov
mov
inc
mov
add
stos
pushf
daa
lea
addr16
std
xor
addr16
leave
xor
std
pop
setne
cli
mov
add
test
fwait
ret
xlat
rcrb
adc
sub
imul
mov
data16
push
arpl
inc
out
daa
jge
aam
mov
push
ret
int3
subl
and
loope
jp
sub
inc
sub
or
mov
test
adc
lret
cmp
rorb
push
adc
leave
notb
popa
test
xor
fs
ret
add
jg
add
push
jne
nop
xchg
inc
mov
dec
or
cmp
xor
test
cmc
push
std
dec
xor
mov
out
jg
xchg
push
cmp
cld
scas
lea
out
nop
push
rcrb
fimuls
sub
push
fs
lea
das
into
gs
add
or
and
and
rol
ss
dec
add
cmp
clc
mov
push
pop
pop
stc
and
jb
adc
sub
inc
pop
int
pop
mov
push
cltd
lahf
dec
xchg
and
daa
insl
sarb
xor
adc
sub
popa
inc
lods
loopne
popa
sti
push
addl
push
dec
stos
mov
sar
push
popf
or
sbb
push
sbb
cli
pop
sub
add
fsubs
insb
data16
je
clc
into
scas
cmp
lret
pop
xchg
sbb
or
in
shrb
outsl
dec
jno
sarb
lods
push
mov
mov
fidivl
fadd
push
jg
or
pop
push
ret
lret
cmp
mov
nop
mov
mov
fwait
loope
sub
loop
pop
xchg
add
cmp
dec
repnz
pop
sub
cmp
jge
fs
push
addl
dec
lds
cmp
pop
add
cmp
dec
jg
stos
adc
push
sbb
pop
nop
inc
mov
sub
xor
loope
jg
mov
push
fs
dec
mov
imul
mov
xor
into
cld
aam
mov
push
xchg
push
stos
es
jno
mov
add
dec
and
cmp
lods
mov
fwait
stos
fisttpl
xor
inc
cmp
inc
pushf
cmp
adc
out
shlb
or
aad
push
mov
clc
push
sbb
pop
inc
adc
lock
push
fdivrl
mov
mov
adc
mov
push
dec
sbb
sub
das
andb
fadds
into
jge
add
sahf
xor
lds
int3
inc
hlt
call
shl
das
mov
shll
mov
mov
fs
adcb
cld
jl
mov
sub
cmc
adc
es
hlt
ret
outsl
adc
test
test
or
js
push
sub
inc
les
dec
pop
sbb
mov
in
sbb
movsb
cmp
mov
add
cmpsb
into
test
push
shll
push
js
xor
or
scas
push
cwtl
pop
adc
inc
sahf
mov
cmp
adcl
into
push
sahf
mov
lods
mull
cmp
sbb
mov
cwtl
fnstsw
out
mov
pop
shll
mull
gs
xor
shlb
arpl
push
add
js
icebp
jnp
xor
or
lret
int3
out
push
sub
lods
pop
icebp
cmp
sbbl
or
mov
mov
out
add
xchg
loop
and
cmove
dec
inc
xchg
push
pop
dec
addr16
sub
xor
icebp
mov
pop
push
cwtl
jmp
and
mov
std
lcall
adc
cmc
mov
pop
cmpsl
inc
mov
sub
jno
add
push
push
iret
adc
and
adc
mov
out
cmp
aad
divl
into
aad
loopne
cmp
mov
mov
les
push
fiadds
cmc
icebp
pusha
mov
push
imul
mov
and
mov
xchg
xchg
cltd
mov
aam
lret
xor
cmp
push
xchg
inc
adc
iret
enter
add
popf
testb
and
adc
xlat
out
fcoms
movsb
shlb
rol
mov
pusha
push
dec
int
sub
mov
mov
stos
push
jne
fs
imul
xor
sub
in
dec
enter
loop
sbb
popa
lods
bound
rcrb
xchg
mov
lret
dec
in
out
ror
mov
scas
pop
sbb
xor
insb
push
push
in
cmc
dec
pushf
sbb
cmp
out
fwait
stos
into
sub
pop
dec
in
jno
mov
aaa
iret
xorb
aam
movsl
or
jae
or
or
dec
loop
roll
cmp
rcll
mov
push
or
loope
mov
add
cld
dec
out
mov
sub
popf
push
xor
insb
aas
or
cmp
insl
lcall
sub
xor
cs
in
stos
adc
sub
fiaddl
fistpll
inc
jge
dec
clc
dec
jmp
dec
adc
sbb
fmuls
ja
push
movb
or
push
add
leave
imul
pop
pop
dec
popf
jp
xchg
out
add
lcall
dec
in
inc
mov
int3
mov
testb
icebp
test
cli
outsl
fisttpl
dec
cmp
or
cwtl
pop
pop
xor
mov
rep
mov
and
cmp
jnp
or
insl
xchg
cwtl
xor
push
rol
cmp
mov
or
scas
xchg
inc
nop
jle
add
int3
mov
push
push
and
cmp
mov
mov
jp
xor
in
adc
xor
adc
stos
pop
dec
jne
adc
fimuls
loope
enter
out
add
rcrb
mov
mov
mov
in
sti
xor
mov
in
fidivs
pusha
adc
push
test
or
fnsave
stos
mov
or
adc
cmp
fwait
cmp
dec
cmp
and
add
es
pop
imul
dec
ds
jge
push
jno
and
jns
mov
cmp
adc
xor
dec
xchg
test
cmp
sbb
sahf
std
or
mov
xlat
fsts
lock
daa
xchg
mov
cwtl
pusha
xchg
sub
dec
in
stc
test
leave
imul
or
fadds
out
int3
jbe
icebp
jo
je
imulb
dec
enter
in
xchg
jo
in
sbb
push
xchg
daa
mov
mov
jnp
sub
mov
ss
mov
outsb
xchg
fldt
fisubl
dec
fucomi
dec
in
dec
in
stos
add
cltd
cmp
mov
stc
jne
or
push
mov
mov
shll
test
into
scas
orb
and
scas
mov
test
dec
jae
arpl
mov
xchg
sub
sub
outsb
jno
sarb
mov
in
push
pusha
sarl
inc
cltd
lods
faddl
xchg
cvttps2pi
jecxz
inc
mov
pop
adc
sbb
ss
outsl
je
mov
mov
sbb
mov
sub
movsb
repz
nop
sbbb
or
shll
ss
pop
xor
rcr
and
adc
lods
cwtl
pop
and
les
lock
clc
aas
sbb
adc
outsb
mov
cmp
dec
inc
aad
aas
xor
mov
test
cltd
push
dec
mov
test
inc
mov
jecxz
stos
sub
lret
ja,pt
fisubs
mov
imul
das
aas
sbb
push
je
jno
inc
pop
sti
mov
cmp
stos
push
mov
jnp
or
movsb
cli
lcall
fwait
cmp
mov
ficoms
movsb
xchg
mov
sbb
rclb
mov
jle
inc
mov
test
lods
pop
mov
scas
cmp
addb
fwait
mov
inc
imull
out
cwtl
push
mov
arpl
pop
lahf
mov
jb
cs
mov
in
pop
jne
xchg
ds
dec
sbb
movsb
push
stos
cmp
or
les
addl
fisubrl
cwtl
es
pop
sub
or
push
jae
lret
pop
xlat
xor
cmc
popf
inc
cmp
mov
test
je
in
neg
dec
jle
ss
and
cmpsl
mov
aaa
adcl
xchg
scas
test
fstpt
or
jp
bound
sarl
mov
std
and
dec
je
jb
repz
gs
pop
dec
cmp
mov
cmpsl
pop
lock
pusha
push
or
imul
ret
out
add
das
pop
xchg
sti
pop
andb
subl
std
fmuls
cwtl
push
leave
cwtl
push
outsb
outsl
pmullw
jns
stc
enter
fsubrs
outsl
jmp
cmpl
push
incb
bnd
mov
mov
ret
nop
das
dec
int3
outsl
js
mov
jnp
sub
add
or
adc
arpl
aad
jmp
jp
xor
out
inc
pop
ret
push
push
jnp
pop
fsub
xchg
hlt
push
jge
mov
fldenv
pop
aas
or
lods
orl
aad
mov
mov
sbb
test
out
mov
sbb
inc
inc
mov
repz
getsec
ds
and
cld
pop
cmp
mov
pop
movsb
test
xchg
insl
jecxz
in
popf
cmpsb
push
adc
cmp
aas
dec
in
xchg
int
adc
xor
mov
or
inc
lds
bound
jb
cmp
cmpsb
push
pop
out
push
xchg
dec
fs
pop
hlt
mov
test
je
lock
outsb
add
daa
mov
imul
sar
enter
sbb
int3
daa
lret
fisubrs
jecxz
jl
in
fistpll
jae
push
push
jecxz
xchg
lods
aaa
jmp
dec
push
pushf
adc
movsl
or
inc
sbb
adc
dec
je
lods
push
mov
mov
mov
cmpsl
je
mov
sbb
mov
cmpsb
std
jle
in
aas
out
fs
dec
pop
xor
rorb
fabs
inc
sti
jo
sub
ss
leave
xchg
sub
inc
adc
loop
incl
sbb
cmp
roll
pop
xor
orl
mov
testb
add
icebp
add
sbb
push
push
mov
pop
ja
push
sbb
mov
data16
mov
fcmovnb
out
adc
or
repz
arpl
and
loop
adc
lock
insl
das
dec
cmp
cs
push
faddl
cmpsb
mov
jno,pn
inc
fcomps
out
xor
repz
mov
mov
add
add
xor
pop
mov
fimuls
enter
bound
xchg
cld
popa
inc
adc
scas
or
pushl
insb
cld
inc
sahf
push
rcrl
lahf
in
out
aam
mov
pusha
lods
ret
jnp
sbbb
out
fistpl
push
std
mov
out
pusha
and
movl
ret
arpl
dec
adc
or
mov
push
jmp
stc
je
xchg
fdivrl
adc
xchg
int
mov
mov
imul
rcll
pop
stos
mov
jae
ljmp
rolb
push
jne
out
pop
xchg
out
subb
loopne
cmp
pop
sub
out
stos
mov
dec
aaa
sub
rcll
push
ret
push
pop
test
call
aam
rorb
out
pop
sub
daa
mov
push
xor
movsb
inc
sahf
popa
or
repnz
mov
or
sbb
jne
add
cltd
bound
popf
repnz
push
xlat
pop
xchg
xor
mov
jne
xlat
mov
repz
xlat
iret
int3
sti
mov
mov
in
rcl
int3
add
ja
inc
mov
sbb
and
pop
mov
enter
add
adc
int
fnstsw
enter
js
fwait
mov
sbb
mull
mov
std
shrl
inc
push
mov
jbe
nop
ss
fadd
pop
fisttpl
aad
in
aas
dec
cwtl
mov
insl
lret
dec
mov
jge
imul
jg
sbb
adc
cmp
fimull
mov
mul
jl
mov
popf
pop
mov
ret
int3
xor
out
int3
aaa
pop
sub
pop
mov
pop
jae
pop
mov
fs
jns
pusha
xchg
sub
cmpsl
xor
clc
sar
dec
mov
jg
add
lea
mov
xor
xor
cli
wrmsr
mov
fildl
insl
sub
add
push
fbstp
add
xchg
adc
lods
ret
lcall
aaa
mov
or
mov
xchg
rolb
aam
or
mov
xor
movsl
inc
and
push
lret
xlat
mov
xchg
cmpl
xchg
xchg
test
cmp
cld
cmp
push
cmc
mov
mov
and
jle
cmp
movsb
push
push
mov
adc
inc
jecxz
xor
adc
add
cmp
daa
dec
sbb
sbb
dec
add
jge
jge
dec
out
or
es
cmpsl
xor
fs
jb
es
dec
ljmp
xor
loop
cld
push
je
pop
outsl
mov
enter
and
das
mov
mov
loop
outsb
fdiv
aam
in
mov
mov
loop
lods
xchg
cmp
sti
xor
fldcw
add
pop
cmp
cmpsl
sbb
aad
dec
jb
ljmp
xor
lret
dec
mov
and
xchg
mov
push
lcall
int
mov
call
pop
out
mov
mov
jle
adc
xor
mov
movb
movsl
push
cmp
xchg
adc
push
je
mov
cs
ret
cmp
in
cwtl
mov
mov
xor
pop
cmp
sbb
and
xor
add
test
or
inc
stc
cmp
in
rolb
icebp
cld
pop
call
add
hlt
fimull
dec
icebp
clc
cs
cltd
mov
or
mov
jne
insl
ljmp
push
lods
sbb
cmc
inc
sbb
inc
enter
stos
lock
and
repz
ljmp
mov
jbe
lcall
sbb
cwtl
fiaddl
lods
leave
in
cmp
ss
mov
jge
inc
xchg
cmp
in
scas
addr16
call
rcl
xchg
mov
cli
and
mov
bound
inc
clc
sti
adc
cmp
and
das
push
sbb
push
inc
into
xchg
sub
xchg
cli
shll
sub
sbb
xor
insb
pop
mov
hlt
fisubs
pop
movsl
call
pusha
or
adcl
mov
aam
cmp
sti
pop
sbb
ljmp
rorl
sbb
and
mov
test
add
test
sub
stos
mov
addr16
xor
cs
or
push
test
rcll
push
cmp
sub
stc
into
sahf
pop
ret
jmp
sti
and
lea
pop
pushf
mov
leave
xor
lods
rcrl
dec
repnz
inc
inc
push
jmp
cmp
mov
lods
stos
call
or
inc
xlat
mov
outsl
popf
aad
dec
mov
pushf
cli
or
xchg
cld
loop
in
and
pop
jge
xchg
pop
popa
aam
aam
xchg
test
push
scas
sub
idivl
sbb
push
inc
adc
std
lret
lock
and
push
jo
xchg
sbb
repnz
mov
mov
mov
xor
ret
in
push
ret
pusha
lcall
and
int3
jns
mov
sub
mov
insl
dec
in
inc
sar
mov
pop
cs
mov
lret
stos
movsb
adc
insl
xchg
mov
aas
popa
mov
jae
mov
dec
pop
ljmp
pop
cmp
sub
push
mov
push
into
jnp
into
pop
sbb
add
aad
or
cmp
xchg
vpsubusb
mov
out
scas
fstpt
and
push
ds
loopne
inc
scas
mov
stos
inc
mov
rorb
movsb
fldt
dec
std
fistl
js
cmp
add
mov
jnp
rorb
lret
fistps
push
xchg
sub
mov
mov
adc
push
sarl
mov
sub
andl
loopne
xor
xor
pushf
xor
push
les
fdivrs
dec
push
out
decl
mov
inc
add
inc
sub
pop
pop
pop
out
push
cmpsl
pop
das
sbb
sbb
jge
add
jmp
shrb
jns
idivb
fwait
xchg
clc
jle
pusha
jle
gs
popf
imul
loop
andb
inc
in
mov
popa
mov
jmp
sub
xchg
out
loopne
pop
dec
xor
nop
sarb
les
xchg
xor
xchg
lcall
add
in
mov
outsb
mov
jge
imul
dec
nop
out
xor
mov
in
jp
pushf
adc
int
negl
push
int3
arpl
nop
lcall
aad
jmp
jno
daa
lcall
jo
or
inc
addb
mov
das
pop
xor
mov
xchg
mov
pusha
jmp
notrack
add
popa
or
xchg
clc
jbe
popa
sub
scas
lret
xlat
ficomps
test
sbb
arpl
outsl
outsl
gs
stos
or
push
xor
gs
mov
xchg
imul
sub
cmp
shl
push
arpl
testb
cli
adc
jmp
shl
jp
or
ja
push
xor
test
mov
roll
dec
sub
enter
mov
sahf
push
and
or
jns
rcll
cmp
add
jne
outsl
cltd
lahf
adc
mulb
jb
dec
outsl
mov
xlat
mov
cmpsb
lea
cmpsl
mov
dec
pop
aas
shr
insl
in
test
in
mov
jae
dec
daa
nop
fdivrs
mov
mov
dec
jbe
in
adc
jp
push
mov
call
add
inc
add
fists
cmp
cmc
enter
jb
popf
pop
nop
push
jbe
es
push
add
add
xlat
jmp
and
xchg
cmp
inc
stc
shrb
mov
shrb
test
rcll
cmp
out
pushf
mov
test
push
mov
sub
jmp
int3
aad
lret
dec
pop
loop
xchg
add
out
xchg
fidivl
fbld
dec
cmpsl
clc
dec
sub
sub
pushf
jae
or
lock
push
lods
paddsw
into
pop
cld
lahf
jge
lea
clc
in
ficoms
stc
or
push
xchg
das
imul
mov
jp
lret
mov
rcl
mov
cmp
xor
lea
inc
clc
inc
push
cli
setae
add
adc
fs
xlat
adc
cmp
stos
push
mov
lock
and
scas
inc
cmp
test
mov
mov
mov
cmpb
fstpl
dec
fwait
or
inc
cmp
sarb
adc
in
mov
lock
icebp
xor
cmp
or
lcall
cmp
mov
and
fcoml
sub
aas
and
jbe
jmp
jns
fcomps
xchg
enter
dec
stc
add
scas
adc
lock
sti
sti
filds
daa
and
mov
cmp
xchg
mov
roll
xchg
add
scas
mov
loopne
aaa
ficompl
cmp
or
rolb
sbb
xchg
jb
addb
icebp
push
add
adc
mov
and
js
fsub
push
push
cmpsb
xchg
mov
mov
inc
cs
data16
adc
fs
xchg
mov
repz
xchg
push
lret
mulb
dec
in
test
not
iret
sbb
repz
cmpsl
mov
dec
and
xchg
fisubrl
imul
ja
cmpsb
in
stos
cmp
mov
sti
ljmp
ja
mov
shlb
loopne
in
mov
fs
nop
adc
pop
cli
jl
jb
test
and
shlb
mov
test
ficomps
sub
push
mov
int
pop
insl
cmc
fsubs
sub
jmp
push
push
setb
xor
and
cltd
mov
leave
loope
les
mov
mov
cmpsl
pop
in
cmp
or
roll
sbb
roll
pop
rcrb
test
xchg
jge
popf
out
cli
mov
fdivrp
xor
bound
and
insb
mov
cld
cli
mov
in
jl
jbe
icebp
dec
sbb
lods
lea
inc
and
cli
xor
cli
insb
dec
scas
lcall
mov
ja
push
mov
mov
jbe
cmp
lret
jle
incl
sub
imul
jmp
add
fcomps
push
lret
sbb
sub
pop
lahf
xor
fdivrs
hlt
mov
lcall
in
mov
pop
enter
add
pusha
test
cmpsl
xor
add
cwtl
push
js
loope
push
pop
into
dec
int
iret
imul
mov
lea
icebp
je
push
adc
jno
push
inc
mov
jecxz
sub
xor
sti
adc
nop
aam
lds
test
pushf
push
and
xor
bound
jae
jmp
push
mov
stos
mov
pusha
in
fstpt
ret
push
lahf
movsb
out
push
mov
and
or
or
push
mov
test
shll
sub
cmp
adc
std
cld
mov
ss
mov
aam
in
add
mov
rcrl
and
jge
cmp
lret
jbe
adc
xchg
int
pcmpeqw
dec
jmp
mov
bound
xchg
push
repz
mov
ss
das
repz
mov
loop
mov
pop
cwtl
inc
ss
loope
push
pop
pop
push
or
andl
push
cmpsl
icebp
fistpl
push
jne
je
mov
cmp
shr
dec
push
out
mov
pop
mov
mov
aas
xor
movsl
aas
imul
jecxz
adc
adc
mov
mov
push
mov
in
sbb
sub
mov
in
mov
mov
rorb
daa
in
pop
sbb
stos
add
pop
hlt
and
xchg
sbb
pop
jmp
imul
stc
pop
push
stos
mov
push
adc
lea
pusha
lahf
mov
push
inc
adc
aaa
lahf
inc
aas
out
sub
pushf
jl
cwtl
mov
ret
fwait
jb
jmp
mov
pop
mov
and
pop
fdivl
arpl
popf
fcoms
out
inc
std
pop
mov
nop
in
and
cwtl
sub
cmpsl
jbe
cmpsb
xor
pop
mov
jbe
dec
mov
mov
xor
xchg
mov
add
lret
jmp
or
jecxz
shll
jne
sub
popa
pop
ret
ljmp
in
adc
jo
pop
fwait
loop
cwtl
xchg
xchg
inc
cli
push
in
arpl
test
stos
mov
dec
inc
scas
mov
adc
mov
in
js
lahf
mov
idivb
pop
add
iret
adc
fnstenv
loopne
mov
mov
sub
jo
movsl
inc
pop
sub
enter
xchg
fstl
cmp
imul
lahf
pop
aad
and
push
pop
push
mov
adc
mov
cmpsb
cmp
mov
dec
in
scas
and
mov
mov
int3
popf
add
cli
jge
mov
jbe
out
jnp
or
inc
mov
sbb
sbbl
mov
mov
test
cmc
cld
out
andl
movsl
ror
into
sub
or
push
imulb
stos
movsl
das
test
mov
loopne
add
addb
jmp
or
inc
imul
fisubrs
fisubrl
out
lock
hlt
addr16
aaa
aas
jno
mov
test
xchg
xchg
or
adc
mov
loope
pushf
cmp
or
add
adc
shlb
push
lods
int3
xchg
into
js
js
incl
mov
ja
xchg
insb
cld
aad
and
mov
aam
repz
xchg
pusha
pop
xchg
mov
push
ljmp
jp
and
sbb
mov
je
mov
ret
bound
jecxz
mov
push
cltd
sbb
mov
jl
jo
jo
sbb
vmwrite
push
xor
xchg
int
shl
je
xor
sub
outsb
dec
insl
sub
pop
insb
fistl
mov
pop
in
mov
pop
neg
mov
pop
inc
in
mov
inc
fadd
test
movl
lahf
jge
movsl
dec
icebp
dec
addl
mov
adc
or
fwait
push
cmp
jae
in
dec
rorb
jae
sti
ljmp
into
xor
mov
mov
cld
or
es
mov
movsl
les
cmpsl
mov
imul
xor
ror
fistl
mov
adc
out
mov
lock
or
push
pop
shl
inc
loopne
outsl
mov
jle
and
pop
jns
test
loop
fadd
cmp
fisttpl
or
mov
cmp
cmp
jb
adc
icebp
mov
gs
mov
mov
xor
xor
xchg
insl
mov
ljmp
fiadds
stc
test
or
mov
lahf
cmp
inc
clc
ss
fs
mov
outsl
aad
cmpsl
jae
fiadds
ja
push
outsb
es
repnz
xchg
sarl
cs
push
sbb
inc
sbb
lret
inc
add
inc
cmp
lret
mov
mov
push
in
shll
incb
ljmp
sbb
mov
fldcw
bound
idiv
push
mov
sbb
roll
inc
iret
bnd
or
shll
jb
fstpl
inc
sub
hlt
mov
dec
and
rorl
inc
insb
pop
in
mov
cld
inc
mov
pop
mov
dec
cs
pop
scas
lcall
pushf
test
cmp
cmpw
or
js
lds
imul
adcl
adcb
test
add
ss
and
jne
ljmp
pop
popa
arpl
sub
mov
cli
bnd
call
jne
inc
and
push
jnp
mov
dec
ss
lahf
ss
xlat
arpl
mov
jb
incb
insl
scas
xor
mov
repnz
lahf
jmp
push
add
xchg
pop
push
push
mov
add
gs
ret
arpl
push
scas
mov
or
inc
fstl
popf
andb
xchg
ljmp
repz
jecxz
xchg
pop
mov
xlat
cmpsb
push
push
or
fs
je
jbe
out
jmp
sbb
in
xor
dec
bound
scas
inc
xchg
lcall
push
push
sbb
sbb
xor
fsubrl
repnz
lods
pop
push
xor
fistpl
or
std
mov
cmp
mov
in
pop
dec
pop
outsl
cmp
inc
jmp
xchg
daa
shl
mov
adc
or
test
and
mov
mov
xchg
nop
bound
or
cmp
int
xlat
pusha
dec
sub
call
or
dec
and
popf
cmp
orl
outsb
cltd
popf
push
mov
adc
cltd
pop
jg
sahf
mov
faddl
pop
notb
addl
hlt
mov
fdivrs
or
push
push
jnp
xchg
pop
mov
xchg
or
lcall
movsb
cmp
out
add
imul
mov
lret
cli
insb
mov
pcmpgtb
repz
in
jae
aaa
int3
jle
insb
and
test
andb
sub
cmpsl
sbb
sub
mov
sbb
mov
popf
mov
shll
stos
imulb
and
sbb
add
sahf
pop
pop
out
into
adcb
dec
sbb
and
sub
loope
fisubrl
sbb
xchg
dec
leave
cmp
movsb
sub
out
mov
popa
aad
sbb
mov
sahf
mov
or
fistl
filds
jp
or
adc
inc
adc
cmp
mov
mov
sub
push
jmp
add
and
and
add
and
repz
sub
pop
mov
aas
sub
out
or
dec
lret
add
cmp
adcb
leave
mov
sti
cmp
mov
scas
sub
mov
loope
and
mov
enter
pop
jo
ljmp
mov
es
pusha
xchg
in
clc
fstl
fsubr
das
sti
inc
jns
test
cs
push
add
sbb
mov
mov
jnp
data16
jle
cmp
imul
sbb
test
pop
addr16
push
mov
rcll
sbb
rcll
sbb
gs
or
sub
mov
cmp
and
sti
fistpl
lret
arpl
xchg
cmp
cld
jl
mov
and
aaa
pop
fstpt
es
in
and
sub
fldl
push
rorl
int3
pop
insb
fldt
ret
jle
fs
scas
je
jcxz
and
push
stc
dec
js
xor
cmpsb
fwait
jp
outsl
out
adcl
cmpsl
cmp
sbb
pusha
jmp
imul
mov
xchg
push
add
fimull
aam
sub
insl
pop
mov
sbb
dec
add
es
pop
bound
and
mov
push
xchg
nop
xchg
out
sbb
fidivrs
adc
aam
adc
out
jecxz
mov
inc
push
sti
xchg
jne
pop
ret
xor
sti
xchg
pusha
push
das
inc
and
jp
mov
adc
cli
xor
sbb
insl
gs
sub
test
in
mov
push
cld
xchg
mov
add
js
cmp
sbb
sbb
lock
sub
xor
lea
stos
dec
and
push
inc
imulb
xor
pop
pusha
or
call
mov
je
cld
subb
jno
jecxz
xor
loopw
adcl
jnp
jb
xchg
or
imul
out
adc
jmp
test
fisubrl
lret
xchg
icebp
inc
jne
lods
out
add
test
mov
imul
push
rorl
mov
dec
pop
cmc
sub
pop
int3
pop
mov
shlb
jae
bound
jne
pop
adc
fcomi
or
jnp
xchg
and
mov
jmp
test
stc
daa
and
test
jns
sarb
xor
in
clc
push
cmp
sub
psubusw
mov
int3
popa
xchg
outsl
jo
pop
stos
add
std
ja
sahf
xchg
mov
mov
jb
pop
or
jns
inc
jp
cmp
imul
mov
cmp
or
shrl
fbstp
enter
pop
les
sub
pop
mov
dec
jo
pop
lea
dec
jmp
js
adc
popa
out
mov
mov
test
fprem
cmpsl
dec
xor
out
stc
lods
int3
inc
popa
cmpsb
inc
mov
push
jmp
int
sbb
mov
pop
dec
pop
push
add
add
fadds
aam
sbb
xchg
outsl
jmp
dec
jp
mov
inc
in
dec
xor
orb
and
daa
stos
inc
xchg
in
or
clc
jnp
fnstenv
xlat
xor
jp
sar
xlat
and
loope
cmp
cmp
mov
cwtl
lods
ficompl
roll
stos
and
jecxz
mov
pop
inc
out
push
into
mov
push
mov
sub
and
in
inc
jp
daa
sbb
sbb
and
lcall
leave
xor
mov
jnp
lahf
inc
sub
jle
out
mov
ds
into
movsb
add
pop
mov
mov
bnd
mov
dec
sbb
or
in
sub
pop
push
add
ljmp
mov
and
mov
fstps
out
pop
in
loop
sub
or
pop
out
push
push
pop
int3
sahf
outsl
in
hlt
sysexit
jnp
adc
test
ljmp
mov
adc
dec
mov
mov
mov
dec
cwtl
cmc
push
test
es
loopne
push
inc
imul
enter
daa
pop
cmp
repnz
jae
and
stos
mov
push
and
je
call
mov
push
arpl
std
dec
pop
adc
ss
mov
jecxz
aas
fisubl
stc
xor
data16
xlat
adc
mov
jmp
mov
enter
test
sbb
sti
mov
sbb
jb
outsl
jge
in
or
lcall
sti
ret
mov
mov
or
push
jo
or
and
aam
sub
inc
sbb
test
inc
mov
xlat
cld
mov
fildll
int
push
xchg
cmp
dec
xchg
jl
jnp
arpl
and
lock
adc
stos
call
inc
out
les
mov
scas
sti
les
aam
rcll
dec
mov
adc
push
popf
mov
bts
adc
xor
jp
mov
cltd
and
adc
cwtl
push
fildll
cmp
adc
push
popf
xchg
adc
ss
mov
imul
insl
ja
push
add
inc
vpaddsw
sahf
or
mov
push
ret
jl
test
ficoml
jb
mov
xor
in
inc
jmp
push
pop
dec
push
aas
add
imul
ss
pop
mov
mov
pop
fdivs
mov
and
in
jmp
pop
imul
xor
adc
pop
fmulp
outsl
cmp
adc
cmp
loopne
loopne
pop
cmp
add
cmp
iret
inc
out
mov
push
roll
jge
sub
cltd
adc
es
dec
ret
or
sbb
outsb
push
ret
lret
jg
xor
xor
imul
loop
call
es
or
sbb
incl
mov
xorb
push
add
sub
mov
jo
les
add
shll
xor
push
out
adc
out
dec
sub
sti
xor
fyl2xp1
imul
jno
sub
sub
or
scas
sub
arpl
sub
push
jg
arpl
pop
testb
fdivrl
add
arpl
aaa
cmp
int
cld
fwait
cltd
paddusw
mov
subl
mov
incl
mov
push
int3
lahf
inc
cmc
add
es
xchg
push
xchg
xor
jmp
cltd
rcrl
mov
sarl
xchg
mov
out
cltd
andb
out
pop
mov
add
rcll
lods
out
xor
int
mov
sbb
mov
and
js
sub
dec
icebp
mov
pushf
out
inc
bound
dec
fyl2x
cmpsl
add
xlat
mov
inc
lods
mov
cmp
test
lret
cld
inc
push
je
xchg
sbb
dec
mov
and
sub
jbe
insl
ljmp
icebp
xchg
or
popw
pop
mov
repz
out
popa
rcll
mov
mov
inc
movsl
and
push
lahf
pop
dec
addb
das
insl
jb
jmp
leave
stc
adc
test
push
int
into
pushf
sub
fucom
add
or
sub
cwtl
xchg
leave
and
stos
enter
xchg
xor
cmp
and
cltd
loope
dec
push
out
ss
push
sub
sub
adc
popf
repz
insb
popf
push
push
popa
inc
pop
sbb
adcb
shlb
movsb
push
outsb
pushf
adc
mov
nopl
or
sbb
dec
inc
subl
lahf
pop
dec
pusha
loope
ja
popa
scas
sub
jecxz
lahf
addr16
xchg
pushf
or
lcall
jb
lods
and
fnstsw
and
dec
and
or
inc
inc
insb
cmp
ret
insb
into
sbbb
add
sarb
push
cmp
add
out
cmp
xor
xor
bound
inc
fisttpll
stos
fisttpl
leave
adc
pushf
jg
dec
out
or
clc
push
inc
xchg
stos
lods
mov
sbb
es
mov
sbb
hlt
sbb
shlb
testb
outsl
dec
enter
push
mov
cld
dec
fs
cs
pop
je
xchg
xor
fs
sbb
mov
xor
cmpsb
inc
xchg
notl
ljmp
push
jnp
add
pusha
xchg
mov
adc
push
pop
mov
mov
or
sbb
cwtl
stc
sub
mov
cltd
xchg
jp
popl
lcall
stc
lds
shl
into
push
sbb
jge
jno
mov
popa
aam
pop
mov
jecxz
aam
push
xchg
sbbb
sub
lret
imul
insl
inc
push
loop
xor
rcl
scas
dec
mov
out
lock
test
mov
cmp
rcl
sahf
aam
fdivs
daa
ds
mov
lds
jno
popa
cmp
add
or
jle
hlt
lea
xchg
nop
lea
sbb
arpl
jmp
test
push
and
into
test
jg
dec
cmc
inc
inc
out
imul
daa
stc
push
leave
jb,pt
test
jne
fldt
jo
outsb
adc
dec
push
pop
lock
sbb
xchg
push
jp
stos
arpl
xchg
lock
outsb
xor
inc
mov
pop
out
movsb
das
popa
fcomp
js
mov
jmp
mov
lahf
sarl
cmp
movsb
imul
push
je
or
sbb
enter
jle
jbe
outsb
push
mov
push
ljmp
pop
pop
fs
mov
popa
fnsave
ret
daa
mov
and
push
add
jmp
and
jmp
mov
cwtl
adc
lahf
xor
test
idivb
in
or
lds
cmp
scas
lret
je
mov
rorb
push
sbb
loope
movsl
mov
jns
jp
jmp
or
pop
xor
mov
inc
push
mov
and
mov
cwtl
aaa
inc
add
cltd
adc
lock
adc
movsb
mov
fsubr
cmp
stos
push
in
mov
in
div
push
shr
mov
mov
jo
movzwl
add
mov
adc
out
push
mov
inc
push
in
xchg
bound
adc
inc
add
jo
mov
cmp
lahf
and
scas
sub
dec
pop
mulb
lods
and
lahf
fidivrs
das
jmp
lea
add
pop
aas
cmp
gs
cld
loop
xchg
jge
and
jo
dec
fnsave
add
jl
fldl
ret
inc
pusha
shlb
std
sub
mov
cs
dec
pop
sub
dec
pop
cmp
int3
mov
arpl
test
mov
ret
cmc
xor
out
icebp
pusha
lock
sbb
and
jle
scas
hlt
fcompl
stos
dec
mov
ror
push
mov
test
xchg
loopne
fwait
xchg
cli
xor
mov
xchg
jg
ret
rolb
pop
pusha
popf
testb
stos
cwtl
lret
dec
inc
jb
ret
dec
shll
iret
movsl
in
mov
xchg
pop
aam
test
pop
je
and
cmpsb
jb
sahf
jmp
dec
cmp
adc
sbb
lods
xchg
test
jbe
push
dec
mov
rcr
mov
push
lret
jns
cmp
push
sbb
repz
mov
jmp
mov
xchg
lock
lods
pop
in
aad
cmc
bound
loopne
xchg
cmpsb
scas
sbb
jnp
in
dec
loope
jecxz
cmp
lock
xchg
add
and
or
sahf
dec
in
loop
xchg
push
dec
subl
lret
or
in
gs
out
into
and
aam
xor
insb
test
jne
mov
push
jmp
fcmovnu
mov
cld
fdivr
sbb
pop
push
jb
inc
add
daa
jnp
je
in
push
rcrb
pusha
lahf
daa
mov
xchg
pop
xchg
add
add
cltd
lret
arpl
pop
cmp
rclb
xor
lea
int3
lods
rorl
lcall
pop
ja
int3
lock
jle
fisubrs
cmpsb
fdivs
fwait
dec
dec
pop
stc
and
gs
lods
out
mov
test
pushf
and
cld
shrl
or
lret
mov
ret
cltd
shl
dec
lds
sahf
iret
mov
loope
inc
push
add
xor
sub
outsb
cmp
mov
stos
out
jecxz
dec
out
add
or
lea
outsb
add
xorb
shlb
movsb
add
leave
std
jo
pop
sub
sbb
push
jns
sub
cmp
mov
call
idivl
push
cmc
das
cmp
cmp
xor
mov
lea
fnstenv
repz
out
stc
stos
dec
ja
in
imul
and
inc
cmp
int3
mov
out
notb
ja
adc
outsb
xor
lea
push
dec
xor
and
sbb
fdivl
fisttpll
sub
pop
lret
mov
xor
sbb
call
dec
loop
add
mov
adc
mov
or
mov
movsb
cltd
inc
shll
adc
jns
movsb
or
inc
xlat
lahf
popf
adc
xchg
push
push
leave
scas
xchg
lcall
cltd
lods
mov
mov
sbb
imul
pop
adc
inc
movsl
or
jb
mov
adc
or
out
sbb
sbb
out
or
and
lea
mov
clc
cld
iret
mov
adc
mov
loope
push
pop
mov
jno
mov
or
inc
idivl
adc
push
mov
pcmpeqb
add
fidivrl
shl
dec
add
dec
jle
push
and
lods
les
sub
sbbb
adc
inc
cmp
xor
jbe
shll
cs
xchg
aaa
inc
pop
adc
std
dec
pop
rorb
xchg
sbb
mov
jae
ds
in
cmp
add
add
repnz
push
and
mov
es
hlt
rorb
mov
lcall
loopne
inc
xchg
es
mov
cli
ret
ret
cli
add
pop
fimuls
rorl
cs
or
inc
mov
jnp
dec
sub
inc
aas
clc
cltd
lea
sbb
leave
xchg
jno
xchg
imul
sub
xchg
add
mov
out
dec
mov
or
call
mov
mov
divl
jg
shr
pop
movsb
jnp
pusha
arpl
pushl
movsl
daa
mov
imulb
out
and
mov
stc
push
cmp
pop
push
frstor
scas
out
repz
cmpsl
call
popa
or
mov
cmp
push
push
test
addr16
sarl
jne
and
fchs
jmp
xor
sub
out
xchg
cmp
fwait
and
mov
mov
cmp
jns
or
iret
stos
mov
and
cmp
sub
arpl
inc
mov
push
insl
test
mov
sbb
dec
xor
rcll
mov
lret
std
je
jg
mov
mov
fstps
pop
mov
fwait
cmp
stos
lret
aas
outsb
mov
push
inc
sbb
pop
xchg
mov
xchg
and
shl
lods
insb
pop
fimull
negl
adc
mov
pop
lds
mov
lods
loopne
jg
clc
adc
aas
divl
ret
add
iret
fists
fnstenv
sub
jae
jge
ret
hlt
xchg
mov
mov
movsb
add
les
cmp
popa
and
adc
cmpsb
dec
sbb
push
pop
push
pop
mov
mov
scas
mov
fstpt
leave
cmc
call
insl
pop
and
ror
stc
adc
jp
push
mov
ret
std
testl
push
mov
adc
shrb
xor
push
int3
ja
push
nop
mov
repz
loop
mov
dec
mov
adc
push
mov
jle
cli
lock
and
test
xchg
xor
lods
or
mov
push
xchg
addr16
jbe
adc
push
cmc
fsubs
push
es
lret
insl
cmp
test
mov
cmp
push
and
mov
iret
push
daa
or
ds
vpshuflw
movsb
insl
mov
ljmp
inc
add
push
add
jbe
xchg
dec
adc
pop
inc
jmp
dec
xor
notb
dec
test
xor
push
mov
fildll
outsl
add
jg
dec
ja
insb
fmuls
pop
add
ss
add
lods
repz
cmp
inc
xor
ror
ffree
icebp
xchg
cmp
jmp
and
outsl
shlb
xor
shll
ljmp
into
xchg
dec
rorl
inc
push
lods
sahf
fadd
pop
mov
cld
xor
hlt
mov
and
hlt
aas
fisttpll
xchg
pop
pop
pop
cmp
pop
popl
cltd
jecxz
ds
outsb
orl
add
sub
cmp
lret
adc
pushf
xor
mov
pop
sbb
lds
es
and
mull
out
lock
mov
dec
push
mov
sbb
xchg
push
popf
or
insb
rcrb
pop
inc
adc
std
xchg
sti
in
js
cmc
mov
rcrb
pop
cmpb
cmpb
int
jl
xor
cmp
ds
push
push
iret
out
mov
pop
mov
pop
xchg
lea
imul
jns
shrl
push
or
pcmpeqw
cld
sub
js
fcmovb
adc
rorb
mov
fs
je
xor
xchg
mov
je
fsubrl
jno
sub
or
fs
push
jae
lahf
push
dec
inc
lcall
xor
outsb
push
adc
arpl
and
scas
popf
test
pop
push
shrl
insl
es
pop
cwtl
insl
inc
xlat
or
pop
and
subb
jnp
les
sbb
push
mov
test
test
fs
cmp
or
jle
fs
push
mov
inc
rorl
fstps
out
push
fisubs
push
push
inc
and
test
test
or
scas
cmp
xorb
stos
int3
inc
sub
or
rorl
inc
push
xchg
mov
adcb
ret
adc
dec
cld
push
mov
jmp
int3
pop
xchg
pop
sbb
push
ret
imul
aam
mov
add
rcrl
pop
dec
push
sahf
pop
or
call
add
stos
pop
stos
rcll
pushf
repnz
and
sahf
push
mov
lock
sbb
pop
fs
push
sub
ljmp
fiaddl
inc
mov
and
cwtl
cmp
jl
inc
and
adc
loope
into
sarb
aad
jmp
pop
imul
dec
pop
mov
sti
push
sbbb
je
xchg
push
push
rcrl
adc
lods
mov
mov
loopne
inc
jle
lahf
inc
push
aam
enter
in
adc
jae
and
jo
xchg
lock
push
pshufw
mov
dec
fdivrp
sbb
dec
push
lock
mov
incb
iret
sahf
jecxz
inc
lret
push
mov
int
pop
sub
loope
roll
pop
cmpsl
aam
jge
cli
fldcw
lock
cmp
shrd
xor
and
idivl
cmpsl
loope
daa
cmp
sbb
dec
jo
mov
ret
into
dec
cmp
mov
xchg
or
inc
dec
mov
fcomps
test
inc
insb
and
ficomps
mov
xchg
cmp
loope
push
test
pop
lahf
out
stos
xchg
mov
out
mov
fsubrs
mov
in
and
pop
aam
mov
mov
ret
aas
dec
sbb
in
sub
outsl
pop
clc
fidivrl
mov
and
jbe
sub
pop
mov
cwtl
dec
mov
inc
jns
pop
or
pop
push
pop
mov
cld
iret
dec
ljmp
test
fiaddl
test
ret
push
add
pop
mov
jmp
xor
sbb
rcrb
lods
mov
sbb
xchg
iret
jle
jo
cmp
or
fldcw
gs
out
xor
fs
push
shlb
jl
and
mov
xchg
lock
pop
aad
dec
pusha
lret
or
push
push
xor
dec
insb
xchg
lcall
nop
rcll
mov
push
or
xchg
pop
pop
push
push
and
jnp
add
pop
push
push
test
inc
movsb
sub
jo
add
lods
and
xchg
test
jmp
inc
lret
jp
jae
jo
icebp
mov
dec
xor
sbb
pop
inc
add
push
insb
mov
inc
mov
subl
or
in
nop
cltd
inc
jno
icebp
mov
and
ret
jmp
icebp
test
adc
es
jnp
icebp
mov
pop
mov
jns
aas
jne
repnz
dec
fdivp
or
jge
pop
movsl
adc
jno
sbb
pxor
out
mov
push
mov
out
in
jge
outsb
mov
js
mov
mov
or
stc
push
cmp
enter
adc
sub
dec
mov
pop
aad
adc
clc
loopne
push
sti
add
loopne
fsubs
imul
ss
inc
fldln2
movsl
mov
jecxz
adc
mov
les
sub
xchg
lahf
adc
lret
cmp
das
call
aad
push
jbe
pop
dec
stc
push
aam
pop
inc
pop
mov
jecxz
cmp
or
aam
cmc
leave
sub
xchg
push
sbb
outsb
xor
sbbb
insl
es
aad
mov
add
mov
mov
mov
jne
xor
lahf
scas
jl
inc
dec
aad
mov
insb
outsl
std
mov
jo
bnd
jbe
scas
aaa
ret
adc
loope
or
cmp
mov
fwait
mov
fs
pop
sbb
idivb
test
xor
fdivrp
es
adc
mov
clc
idivl
sbb
cwtl
dec
test
inc
xchg
int
adc
aad
jae
inc
inc
in
cmp
push
mov
fisubrs
mov
outsb
xchg
cmp
setge
fstps
scas
xor
pushf
fnsave
ja
sti
outsl
mov
sti
jge
fsubrs
filds
shrl
jo
lods
and
inc
mov
dec
lahf
mull
inc
mov
test
sbb
inc
dec
imul
les
sbb
hlt
ficompl
inc
loop
loope
xchg
cmp
clc
add
test
sbb
ficoml
push
mov
insl
orl
xor
add
test
adc
sbb
jb
xor
jp
out
xchg
mov
in
fiadds
and
ret
mov
fisubl
es
push
mov
lds
mov
movsb
call
pop
aas
mov
mov
push
out
cmp
jns
sbb
jbe
rep
scas
sbb
xor
lds
cmovp
int3
clc
scas
les
xor
loopne
insl
jb
and
xlat
fbld
incl
and
push
push
fistpll
dec
sbb
and
in
cld
ss
ret
inc
dec
xor
mov
mov
xor
push
mov
mov
daa
ljmp
decl
xor
push
dec
int
stos
inc
cmp
xor
shlb
movsb
in
lret
mov
dec
dec
mov
mov
dec
jecxz
cmc
sbb
imul
mov
enter
icebp
jne
dec
cmpsb
push
dec
mov
sbb
rolb
and
dec
addr16
test
aaa
movsb
jno
mov
aaa
push
vmovmskpd
and
sbb
xor
add
add
outsl
cmpsb
xchg
xchg
subl
mov
fldcw
dec
adc
out
shlb
movsb
xor
jns
out
push
dec
push
mov
hlt
dec
lret
xchg
fistpll
mov
or
in
stos
jns
or
inc
lods
mov
inc
int
popf
inc
rclb
cmp
subl
icebp
test
push
inc
pop
cmpsl
popf
dec
push
mov
sbb
jo
repz
sbb
pop
xchg
sbb
dec
cltd
ret
leave
or
clc
int
out
inc
imul
add
sbb
pop
bound
testl
pusha
pop
add
imul
pusha
sub
in
and
test
adc
hlt
out
xchg
dec
push
and
cwtl
mov
pop
bound
xchg
lea
add
jl
fld
xchg
test
push
add
sub
jp
outsb
orl
arpl
enter
sahf
aad
in
stos
jb
inc
mov
stc
lods
mov
mov
inc
mov
test
xor
aaa
cmp
xor
cmpsb
jne
test
dec
in
inc
insl
pusha
mov
lea
enter
push
lods
push
mov
in
je
pop
arpl
lahf
mov
cmp
adc
xchg
jo
daa
xor
clc
xchg
cmpsl
cltd
xlat
cmp
sub
fsubrs
jbe
cli
clc
jne
push
sbb
pop
or
repnz
sub
inc
add
scas
cmp
les
push
imulb
add
add
jp
or
les
rcl
push
mov
mulb
lcall
push
es
sbb
imul
cmp
enter
add
jbe
and
scas
sub
jle
inc
mov
sbb
call
mov
test
mov
out
xchg
jbe
mov
scas
mov
js
popa
sub
gs
loopne
ds
adc
jo
xchg
push
gs
or
scas
push
sbb
mov
add
rorb
mov
pop
aam
push
inc
cmpsb
adc
jecxz
mov
loop
pop
dec
or
or
sbb
movb
xchg
outsb
xchg
stos
cmc
lea
dec
lahf
scas
dec
test
cmp
xchg
push
mov
xchg
xchg
notb
xorb
fsubrl
pop
fnstcw
lret
or
lahf
leave
ja
cmp
push
fsubrp
rcl
fwait
sbb
addl
jo
jne
cmp
push
cmpsb
sbb
push
shlb
inc
xchg
shlb
pop
pop
es
push
es
cmpsl
dec
adc
xor
adc
or
push
mov
int
pop
arpl
fldenv
leave
movsl
data16
mov
mov
push
out
movsl
lahf
in
cwtl
push
inc
mov
je
out
pop
scas
pop
add
cmp
pop
outsb
fs
push
aam
inc
lcall
sbb
lock
add
clc
cmp
movsb
adc
add
lcall
cwtl
pop
xor
out
jne
jl
nop
mov
or
add
cmc
sbbb
pop
mov
sbb
mov
les
xchg
xchg
sbb
jb
push
mov
enter
or
dec
loopne
and
test
call
xchg
mov
inc
sbb
xchg
ljmp
mov
push
sub
aas
scas
jne
into
leave
test
scas
sbb
imul
mov
pop
fldenv
mov
div
mov
pop
cmp
popf
fidivrs
push
hlt
sbb
cmpsl
inc
daa
cld
mov
inc
xor
insb
mov
xor
cmp
and
orl
imul
inc
xchg
clc
lcall
inc
ret
adc
mov
and
xchg
mov
mov
cmp
rolb
mov
loope
and
cmp
mov
lcall
sub
xor
pop
adc
inc
mov
push
fldcw
push
adc
xor
and
das
fisttps
das
stc
in
lock
sbb
scas
inc
movsl
and
inc
test
xchg
repnz
clc
lea
les
das
sub
in
push
lcall
cmc
jbe
roll
es
push
inc
dec
ret
lock
and
fistpl
int3
add
xor
push
mov
cmc
movsb
inc
aaa
jne
add
ljmp
idivb
add
pop
mov
adc
jg
jecxz
cmpsl
mov
int3
mov
adc
fwait
sbb
sub
mov
outsl
push
cli
mov
pop
pop
loop
imul
out
cmp
stos
add
rclb
pushf
les
shlb
pushl
mov
fisttps
xor
inc
mov
sub
mov
fsubrs
aad
aas
lods
and
mov
cmc
cli
cmpsl
shlb
dec
adcl
sub
sbb
and
fnstcw
inc
mov
data16
mov
dec
inc
stos
jmp
push
das
jae
lcall
insl
add
cwtl
icebp
scas
or
pop
das
lret
arpl
aam
lock
jecxz
mov
dec
pop
sahf
ss
repnz
lcall
xor
dec
loope
aad
cmpb
push
in
dec
mov
dec
fmuls
push
mov
add
adc
push
add
mov
and
arpl
sarb
nop
mov
ss
cmp
mov
mov
lret
dec
pop
lcall
fwait
jns
lds
test
dec
out
rorl
dec
dec
and
ljmp
cmp
dec
sub
jno
arpl
into
scas
add
jle
push
stos
mov
xor
filds
mov
aam
icebp
iret
mov
out
test
ret
inc
iret
movsb
gs
insl
popf
mov
dec
ret
sti
insb
pop
ds
lds
pop
out
das
push
test
lldt
xorb
addr16
les
shrl
ja
jbe
pop
jle
push
sub
cmp
rorb
pop
add
adc
cld
mov
sub
cmp
add
fwait
sbb
push
iret
loop
pushf
xchg
xor
rcr
pop
jg
sbb
lret
pop
push
out
mov
sahf
fcoml
xchg
xchg
and
jp
cli
pop
jno
mov
inc
xchg
insl
fstpl
cld
push
mov
cmpl
rcrl
or
inc
sbb
shlb
mov
push
mov
loopne
sub
mov
decb
int3
loopne
enter
mov
cmp
insl
push
in
mov
hlt
ret
out
rcr
cli
insb
or
inc
push
pop
negb
push
out
out
pop
inc
mov
mov
add
adc
lds
std
jp
xor
cmpsb
loope
adc
js
cmp
lods
mov
aad
add
aam
arpl
jae
pop
lods
push
fcomps
xlat
push
jmp
lea
jp
adc
test
test
add
push
sbb
and
push
loope
jns
js
fisubrl
arpl
push
sti
and
mov
pop
pop
or
out
gs
insl
cltd
mov
jno
adc
push
jae
fcomps
cmp
int3
pop
xchg
ds
dec
add
int3
or
fucomip
sarb
out
xchg
xchg
xor
mov
rolb
mov
call
sub
loop
xchg
in
adc
inc
or
xchg
ret
push
insl
mov
inc
adc
inc
test
push
dec
push
pop
stc
xchg
mov
push
adc
mov
fs
mov
dec
dec
xchg
or
dec
pop
ljmp
inc
xor
loopne
ljmp
mov
fnstcw
insl
push
sbb
sub
cmp
mov
pop
in
inc
cmpb
es
xchg
sub
cwtl
fdivs
fildl
addr16
test
mov
mov
aas
push
push
cmp
lahf
jmp
jecxz
mov
mov
push
adc
cmpsl
pop
outsl
in
add
xchg
lret
mov
jb
test
jb
mov
add
jl
pop
xchg
push
inc
rolb
mov
mul
lods
aaa
les
cmp
or
enter
push
loop
mov
and
or
inc
mov
stos
adc
mov
xor
sbb
push
dec
imul
clc
int
aas
pop
push
rorl
popaw
and
push
mov
movsl
or
movsl
mov
shl
xchg
xor
pop
fistl
rcrl
sahf
push
add
cmp
hlt
testb
sbb
sarb
out
xchg
add
xor
int3
pop
xlat
jns
mov
cmp
sbb
xchg
cmpsl
push
popf
xchg
jbe
dec
cmpb
mov
cmc
mov
xchg
add
inc
or
mov
mov
mov
push
repnz
sbb
notl
lods
inc
popa
lret
pop
shll
pop
shrb
sbb
pop
cmpsb
daa
cli
jge
dec
test
in
pop
out
cmpsl
cli
jbe,pt
inc
adc
mov
in
and
les
mov
sbb
popa
mov
adc
mov
insl
xor
enter
mov
and
dec
fwait
sub
push
dec
adc
test
lods
sub
jns
sbb
popw
lret
lahf
not
std
inc
pop
and
dec
aaa
movsb
adc
push
adc
or
push
mov
pop
xchg
mov
mov
push
imul
push
jle
incb
adc
jl
push
and
mov
out
ja
loope
insl
fisttpl
fwait
stc
or
sbb
push
lret
push
mov
add
and
dec
inc
add
xchg
sbb
or
cmp
add
jno
sbb
sbbb
sub
addb
xlat
and
dec
inc
dec
push
dec
pop
mov
int
fcom
sarb
and
or
jge
mov
pop
popf
pop
dec
jmp
and
or
cwtl
mov
enter
rolb
aas
fs
movb
cltd
movsb
inc
sub
in
aam
loopne
add
jge
mov
fcompp
dec
out
test
push
popa
test
ret
mov
jbe
je
out
push
das
add
adc
mov
subl
adc
sub
fistl
jecxz
data16
call
dec
ret
xor
bound
out
or
insb
mov
movsb
cmc
xchg
outsl
cmp
add
jle
repz
or
push
cmp
cwtl
mov
push
clc
mov
lods
pop
push
dec
sbb
es
mov
sub
mov
stos
fiaddl
or
lcall
sbb
mulb
adc
cltd
hlt
pop
push
addl
movsb
dec
xor
inc
test
shrb
mov
or
mov
jecxz
fadds
sbb
bnd
out
out
cmpb
adc
or
aas
cmp
in
push
in
iret
jl
ljmp
aas
insb
pop
inc
orb
sbb
xchg
mov
jecxz
push
sbb
fwait
das
add
test
int
xchg
test
das
adc
mov
pop
cmp
mov
cwtl
cmc
lret
mov
jecxz
mov
lcall
sbb
xchg
and
aaa
orl
insb
out
jns
push
std
rorb
flds
lods
cmpsl
out
mov
outsb
addr16
cld
cs
fwait
stos
ret
add
cmpsl
xchg
inc
lods
adc
cs
repnz
stc
mov
mov
mov
push
and
sub
mul
jo
mov
into
lret
inc
aad
fimuls
pop
rcrb
pop
xchg
and
dec
cmp
out
and
shlb
push
cld
mov
push
ja
xchg
mov
insb
mov
movsb
dec
sbb
sub
aaa
std
pop
dec
mov
js
xchg
iret
rclb
jle
mov
call
dec
lock
js
jo
mov
pop
xchg
test
mov
das
jg
in
pop
push
inc
lea
fucom
rcrl
dec
adc
movsl
lahf
mov
out
neg
aaa
jne
push
push
int3
xchg
dec
inc
add
jmp
jo
movsb
jnp
arpl
std
ficompl
pop
pop
ret
adc
bound
xor
adc
int
adc
xor
mov
je
cld
xchg
xchg
or
push
jne
movsb
or
cltd
inc
mov
dec
mov
xchg
pop
std
cmp
cmc
lods
dec
jl
sub
adcb
stos
and
sub
inc
xor
xor
xchg
in
and
fwait
shrl
mov
pop
mov
pusha
inc
sub
cmp
imull
adc
enter
arpl
ret
insb
aam
push
mov
stos
mov
lods
and
pop
insl
inc
fsubl
outsl
pop
lret
hlt
pop
xchg
sbb
outsb
xchg
dec
shll
pop
in
stos
dec
jmp
mov
lds
scas
pop
sub
sub
sarl
lahf
mov
imul
test
sub
inc
movl
or
push
mov
mov
mov
mov
push
cld
adc
std
mov
xorb
inc
cld
sub
pop
aaa
mov
sbb
lret
sbb
mov
mov
lods
daa
jge
aas
popa
lods
and
jns
dec
jns
pop
xor
jb
out
loopne
daa
mov
sub
lock
sbb
inc
cmpsb
popa
cmp
ret
movsb
add
jnp
in
push
test
stc
sbb
jo
mov
dec
or
inc
and
and
push
push
jle
testl
dec
loop
nop
jge
sub
mov
ljmp
and
testl
or
int
ds
sbb
insl
dec
push
sub
in
mov
testl
inc
aas
pop
sbb
fmuls
dec
cltd
daa
push
aas
adc
pop
pop
popf
mov
sbb
dec
lods
shlb
and
xor
dec
adc
or
lods
push
loope
sbb
scas
mov
maxsd
imul
int3
mov
or
sbb
je
or
push
push
mov
idiv
xchg
sbb
out
loop
add
in
sub
enter
cs
mov
ss
jae
mov
fxch
je
mov
xor
cmp
dec
rclb
inc
scas
mov
adc
dec
les
out
hlt
jl
mov
sub
adc
hlt
in
jno
out
mov
xor
adc
add
in
int
in
loope
and
push
xchg
push
push
push
int3
xchg
xchg
fnstenv
pop
ja
add
jmp
pop
mov
mov
pop
inc
inc
mov
shr
fmuls
pusha
push
push
or
sarb
ss
sub
pop
push
stos
fstps
add
ljmpw
sub
and
mov
mov
jmp
negb
dec
pusha
or
xchg
and
pusha
movhps
jecxz
adc
jno
or
imul
faddl
shll
in
jecxz
ds
mov
or
xor
mov
adc
stos
cmp
nop
stos
mov
in
test
or
xchg
cmc
sbb
jbe
std
inc
hlt
mov
inc
xor
leave
push
jnp
push
pop
inc
jge
subb
mov
icebp
sub
sti
push
pop
leave
fadd
popf
in
mov
mov
lods
out
xor
xchg
xchg
sahf
and
inc
sub
pop
lea
out
shr
pop
add
xchg
xchg
dec
fdivrl
insl
mov
in
jo
out
pop
push
stos
lcall
adc
jne
out
mov
repnz
cmp
js
jb
outsl
movl
rolb
lods
jecxz
cltd
jle
loope
mov
gs
daa
mov
mov
mov
lret
push
jae
adc
xchg
ret
enter
aaa
cmp
cmp
push
leave
xchg
in
pop
jle
fst
sbb
sub
shlb
addr16
mov
jno
inc
fimull
jb
int3
movsl
push
xor
shlb
je
scas
int3
jb
sbb
xchg
out
negb
cmc
fstpt
mov
loope
xlat
and
popl
and
stos
icebp
cmpsl
hlt
ss
rclb
insl
push
std
xorl
add
sbb
int
mov
aaa
icebp
fcmove
pop
fstpl
lock
and
pop
fs
sbb
out
adc
lcall
push
sahf
cmpb
adc
negl
in
cmpsb
inc
neg
cmp
xchg
jno
sti
or
add
jecxz
cmp
mov
push
mov
aad
xor
je
inc
push
std
push
mov
loopne
push
mov
mov
sub
dec
and
leave
adc
movb
jmp
shrl
int3
sbb
fistl
dec
jnp
jmp
adc
pop
daa
fs
mov
stos
cli
mov
sbb
dec
lret
rcr
scas
xchg
lods
scas
mov
call
add
ficompl
test
mov
and
xchg
add
mov
js
add
adc
mov
xchg
lcall
inc
inc
xchg
and
ret
mov
aas
cmp
inc
out
pop
mov
jbe
mov
mov
cmpl
icebp
cmp
stos
pop
jecxz
sub
lods
rorb
and
add
or
das
jecxz
jg
shr
xchg
js
int
jp
imull
repz
sub
lds
ret
gs
ss
adc
repnz
test
cmp
in
jns
push
imul
adc
in
mov
cs
push
pusha
jae
and
xchg
or
cltd
ss
daa
jae
in
mov
sbb
sti
icebp
mov
dec
cltd
mov
mov
pop
testl
pop
out
imul
xchg
lds
mov
shll
push
push
pushf
nop
cmpsb
inc
or
xor
pop
mov
or
stos
sbb
nop
ret
push
xchg
pushf
movsl
mov
orl
dec
daa
xchg
fimull
scas
mov
into
push
jge
mov
push
xchg
inc
xor
popf
cwtl
imulb
ret
pop
xchg
into
jl
inc
repnz
push
flds
or
xor
xor
xlat
rcrl
cmp
sub
in
repnz
pop
and
jo
je
fisubl
sti
push
test
imul
push
pop
pop
aas
in
inc
std
insb
dec
leave
xor
lea
push
push
lock
dec
fsubs
test
xchg
mov
xchg
pop
jbe
lods
mov
aas
lods
mov
out
pop
cmp
ljmp
xchg
loopne
inc
pop
test
loop
scas
jae
int
ja
aas
js
and
push
outsl
mov
pop
mov
dec
add
dec
in
insl
mov
rcl
addr16
rorl
jno
idivl
jae
fimuls
fidivl
and
sahf
fwait
mov
lcall
jnp
sub
cmc
js
pcmpgtd
pop
add
push
in
add
dec
xor
pop
xchg
xor
push
pop
das
jnp
mov
mov
mov
add
push
sub
xchg
adc
jnp
ficoms
and
pop
negb
push
mov
add
mov
ret
jle
push
pushf
pop
paddd
adc
jno
imul
inc
mov
adc
icebp
pushf
mov
mov
rclb
xor
dec
xor
and
mov
mov
add
in
cmc
repz
jecxz
push
mov
or
lods
mov
aad
push
add
fnstsw
jns
in
rcrl
frstor
pop
pop
or
cmp
ret
xor
fcmovbe
cld
fs
sbb
mov
pop
mov
ret
pop
sub
sbb
xchg
mov
ret
mov
inc
lret
subl
insl
aam
or
sub
mov
mov
inc
push
xor
push
arpl
std
pop
dec
int
jne
leave
add
inc
dec
mov
dec
and
ror
lods
ljmp
inc
jns
xchg
and
dec
add
xchg
xchg
push
mov
mov
adc
rcll
lret
mov
ret
dec
mov
insb
cmp
xlat
push
mov
jg
adc
cld
sub
mov
ljmp
jp
and
push
lea
push
push
jo
cmp
cmp
insb
dec
mov
cltd
out
add
in
out
stos
lods
xlat
sbb
fs
inc
push
dec
fwait
jmpw
mov
or
dec
gs
sub
mov
add
inc
and
scas
lods
repnz
out
repz
lret
xchg
push
fmulp
fdivrp
into
jl
jge
loop
lret
sarb
push
es
sti
or
jl
lea
pop
lret
popf
les
jmp
cmp
xor
divb
lret
inc
icebp
jno
inc
xchg
outsb
cli
cltd
pushf
or
or
into
loopne
andl
inc
adc
jbe
push
cld
aad
mov
addr16
jne
cwtl
pop
mov
scas
push
fsts
xlat
or
pop
les
test
xor
mov
mov
cmp
mov
int3
mov
adc
cmp
cmp
mov
imul
push
call
aaa
sbb
cltd
push
pop
dec
mov
movsl
mov
pop
test
rclb
lret
mov
ss
andb
push
adc
mov
in
cmc
mov
ja
or
mov
push
push
test
pop
sub
and
popa
or
sbb
push
loope
loope
sub
sub
adc
adc
paddd
cmpsb
inc
sbb
popa
fldl
inc
ret
sub
push
fnsave
sbbb
push
xchg
inc
mov
decb
cltd
ds
jp
movsb
incb
cltd
mov
or
out
mov
fsts
es
or
cmp
js
mov
sahf
dec
mov
loop
and
cs
mov
mov
fcompl
xor
sub
into
cmpsl
or
jo
test
sar
mov
pop
stos
push
mov
loop
mov
ljmp
inc
xor
jmp
mov
jge
out
je
or
das
dec
into
fs
cld
outsl
xor
scas
in
es
mov
loopne
loopne
push
mov
push
xchg
jle
cmpsl
push
lcall
decl
les
gs
pop
pop
in
cmp
sbb
ss
fistpl
xor
js
xchg
push
insb
test
outsl
test
and
sbb
fistps
push
jo
jge
faddl
xor
adc
and
and
or
lret
and
dec
or
mov
test
mov
movsb
jo
int3
clc
sub
and
inc
fs
std
test
dec
aad
inc
mov
in
mov
adc
jp
mov
scas
into
inc
or
pop
adc
adc
cmp
push
xor
inc
lods
fwait
sbb
cs
stos
mov
loop
cmpsb
loope
fadd
cmc
das
xor
pop
push
sbb
jo
add
scas
pop
ss
fdivs
orl
sub
idivl
lods
icebp
and
sub
std
out
jp
mov
into
xlat
addr16
add
ja
popf
mov
stos
insl
xor
mov
jb
xor
xor
jmp
sub
je,pn
shrb
shlb
sarb
xchg
jle
xchg
mov
test
and
dec
cmpsb
dec
and
outsb
sbb
fs
mov
insl
pop
iret
cmp
jecxz
icebp
inc
in
sbb
mov
inc
adc
mov
cli
in
test
push
sbb
mov
xor
pop
andl
push
mov
lret
inc
aas
jg
pop
cld
mov
rcrb
es
mov
test
push
sbb
mov
inc
pop
int3
jne
inc
dec
fwait
pop
or
test
aas
cmp
fwait
testl
sbb
ss
mov
test
je
lea
popl
bound
out
out
insl
imul
mov
icebp
push
in
lock
in
adc
push
adcb
data16
push
xchg
out
inc
nop
in
sub
in
jmp
idiv
xor
push
fmul
cmp
mov
xor
shr
bound
ljmp
inc
pop
xor
mov
mov
cmp
les
pop
push
xchg
pop
mov
scas
inc
adc
pop
push
shl
xchg
push
mov
pop
fwait
clc
xor
xlat
mov
fdivs
rcr
and
dec
inc
and
fiaddl
loop
jae
lods
or
call
jl
or
fadd
adc
xorb
lods
sub
sub
sbb
add
push
cmp
fwait
data16
pop
cmp
mov
push
insb
xor
adc
jae
lods
les
ja
sbb
inc
xor
add
pop
jae
shll
cltd
ja
jnp
nop
push
push
or
adc
jmp
lods
pop
test
scas
jne
out
add
push
lock
dec
sbb
adc
leave
jae
push
push
push
ret
imul
jnp
or
jns
mov
ds
ret
dec
dec
test
push
and
adc
xor
pop
iret
jmp
mov
mov
loop
push
nop
pushf
dec
add
cmp
dec
jge
dec
aas
xchg
std
mov
cmc
imul
push
mov
sbb
test
es
dec
int3
jbe
adc
cmpb
pop
out
lret
dec
mov
xchg
cmp
inc
mov
jnp
mov
in
jo
xor
push
dec
inc
pop
das
xor
not
dec
pop
push
jecxz
add
sub
movsl
mov
loopew
data16
xorb
add
lret
nop
dec
call
cmpsl
sahf
incl
in
or
mov
mov
xchg
dec
mov
push
xchg
mov
dec
nop
popf
cmpsb
xchg
inc
push
test
stc
cli
in
jne
jae
adc
outsl
imul
and
repz
adc
out
ret
sub
cld
push
addr16
pop
ret
jne
jbe
jo
add
sbb
lds
push
js
sbb
fidivs
push
or
idivl
jo
cmpsl
jge
push
and
repnz
push
jb
mov
addl
push
sub
je
jnp
aam
push
loope
dec
pop
pop
pushf
cmp
daa
dec
int3
fcoms
mov
and
mov
sbb
popf
lcall
dec
insb
ljmp
sbb
in
arpl
in
hlt
or
pop
xorb
cs
subb
jae
movsb
movsl
jne
repnz
xchg
pop
dec
movsb
notl
add
jge
into
jbe
mov
lods
xchg
inc
jno
cltd
or
jge
int3
gs
pop
cld
ficomps
nop
or
cmpsb
outsb
repz
out
mov
jo
push
enter
mov
xchg
inc
sbb
mov
xchg
movsb
inc
ret
jb
push
and
xchg
xchg
outsl
inc
jp
xor
pop
xor
ffreep
push
out
ljmp
adc
mov
nop
pop
inc
mov
xchg
out
and
dec
mov
push
call
call
shl
int3
ss
pusha
sbb
inc
cmp
popf
pusha
sbb
in
mov
mov
and
fcmovnbe
sub
pop
jle
mov
sbb
leave
xchg
push
mov
sub
cmpsb
fwait
test
jnp
sub
stos
sub
mov
push
jmp
test
pop
ficoms
fidivrl
lods
popa
push
inc
jle
sti
push
push
mov
cld
pop
rep
mov
push
sub
shl
jecxz
push
xor
es
or
scas
and
or
adc
std
dec
pop
cmpsb
cmp
dec
insb
push
inc
testb
xchg
out
in
pop
jae
dec
outsb
cld
test
ljmp
adc
mov
mov
mov
negb
jmp
aas
out
or
inc
and
xor
xchg
jno
push
addr16
in
outsb
push
int
pop
mulb
sub
jecxz
std
adc
inc
mov
roll
aad
push
and
ret
mov
xchg
xchg
adc
mov
loope
ror
and
adc
jp
xor
stc
mov
orl
lret
push
daa
ja
gs
or
jg
fwait
xchg
cmp
sahf
std
jecxz
sahf
daa
mov
enter
jbe
mov
add
cwtl
leave
loop
arpl
cmp
rorb
fsubp
sahf
adc
sti
xchg
mov
insb
xchg
sbb
mov
test
popa
pop
stc
mov
pop
out
bnd
lret
outsb
cli
mov
adc
icebp
ret
lahf
or
pushf
adc
popa
inc
or
and
mov
jns
repnz
scas
cmc
lds
loope
setnp
mov
sbb
adc
in
lret
xor
xchg
sahf
cmp
push
inc
dec
addr16
sbb
sti
sub
lahf
out
cmp
das
xchg
int
arpl
add
ret
mov
push
pop
fsts
in
mov
push
inc
lcall
sub
push
shll
sub
cmp
mov
cmpsl
and
pop
test
xchg
std
das
mov
adc
sub
test
aad
xor
pop
cmpsl
xchg
jb
ljmp
ja
stos
lret
hlt
icebp
adc
pushf
xchg
or
mov
push
jmp
sbb
loopne
mov
in
mov
jecxz
cmp
or
in
xchg
sub
mov
dec
jns
sub
dec
out
lock
dec
mov
mov
xor
mov
xchg
and
mov
nop
pop
imul
cmp
fsubrl
mov
jbe
and
and
in
es
fisubrl
dec
iret
mov
cli
adc
mov
cmc
outsb
js
add
loop
mov
das
adc
out
sti
int3
xchg
xchg
lret
mov
stos
cmp
loopne
repz
jno
aam
mov
push
cmp
shll
xchg
insb
dec
xchg
lret
lret
xor
scas
pop
sbb
sub
int3
dec
xor
cmp
xchg
sbb
push
clc
adc
push
test
and
bound
add
xchg
sbb
gs
cmpsl
cmp
push
cld
fsubr
mov
and
sbb
je
pop
stos
dec
xorb
pop
shll
ficoms
ss
je
ja
popa
xor
adc
mov
test
add
jo
dec
mov
outsb
add
or
cltd
jo
jge
js
pop
inc
popf
sbb
sti
clc
insl
and
sbb
push
dec
inc
sbb
jne
push
movsb
sbb
mov
ljmp
es
andl
lock
shrl
xchg
pop
sub
xor
mov
lahf
jno
push
fstps
shrd
aam
sarb
and
pushf
mov
jle
pop
mov
pop
xlat
or
cmp
jle,pt
into
sbb
ret
dec
roll
mov
push
xlat
add
dec
jp
lea
sbb
aaa
scas
clc
xor
mov
push
cmp
mov
cmp
add
push
fisubs
and
or
ljmp
iret
dec
and
pop
adc
jg
pmaxub
gs
mov
dec
inc
icebp
adc
push
stos
inc
pushf
and
mov
mov
in
pop
sbb
xor
adc
cmpsb
fsubrl
jnp
adc
adc
icebp
push
mov
lahf
divl
ffree
cmpsl
jge
shrb
push
jp
inc
cmovp
pop
in
push
mov
pushf
repnz
mov
push
or
stos
test
insl
push
fidivs
or
lds
pop
out
loopne
sbb
jnp
jnp
sbb
jg
mov
sub
sbb
movmskps
xor
mov
je
leave
inc
insb
lcall
in
test
jo
xor
ljmp
inc
adc
fiadds
das
sarl
lock
repz
add
ss
inc
sbb
jae
lret
stc
pushf
mov
pop
xchg
xor
mov
jmp
in
xchg
imul
sub
fadds
xchg
sub
or
ss
xchg
dec
in
push
int
out
lods
ja
mov
or
ljmp
cmc
mov
nop
aaa
sub
or
popf
repz
sbb
mov
ficoms
ss
aam
push
mov
mov
push
ja
in
cltd
pop
bound
mov
mov
and
jg
insl
cmp
ljmp
push
push
enter
insb
movsb
mov
imul
lods
sbb
jne
and
push
inc
fdiv
cmp
mov
add
fidivrs
cmp
lcall
mov
dec
xor
in
jmp
or
inc
and
jo
mov
or
mov
xchg
xchg
aad
cmp
pop
cmc
fstl
pushf
mov
inc
pop
not
or
scas
pop
inc
push
outsl
insb
mov
stc
sahf
jl
into
movsb
mov
aas
aaa
and
and
xchg
icebp
dec
mov
sbb
xchg
leave
outsl
push
in
loope
fdivrl
xor
les
stc
mov
cmp
sbbb
add
xchg
stos
inc
test
inc
sbb
into
and
jo
xor
sbb
imull
mov
test
lea
sahf
adc
push
mov
fdivrs
iret
nop
adc
push
repnz
test
xlat
cmc
jns
icebp
push
in
rclb
dec
stc
mov
jo
mov
test
cli
rolb
inc
mov
sub
sub
jp
cmp
jne
pop
cmp
mov
jbe
mov
mov
cmp
jbe
xor
mov
test
pop
fbstp
orl
test
lahf
leave
mov
in
popf
cwtl
pop
jle
lds
loopne
or
imul
or
cmpb
repz
fisttps
dec
clc
aad
push
push
arpl
hlt
or
aaa
dec
hlt
in
pop
mov
jge
dec
dec
lods
pushf
xor
lods
dec
ret
push
push
stos
test
mov
fucomp
ljmp
outsl
rorl
lret
jo
repnz
ja
pop
add
xchg
sbb
push
je
sub
push
cmp
movsb
cli
mov
rcrl
xchg
xchg
jno
cmp
rcrb
xchg
and
and
push
dec
enter
sbb
xchg
sbb
ret
push
scas
fdivl
out
ds
mov
in
repnz
cmp
add
pop
push
mov
pop
and
leave
push
inc
test
loopne
cmp
outsb
scas
sahf
cmp
imul
jo
arpl
lock
adc
pop
pop
add
lods
sahf
rdpmc
inc
clc
jb,pn
or
push
sbbb
insl
fsubrs
pop
push
call
mov
cmp
bound
mov
sbb
mov
div
hlt
cltd
adc
push
fcomip
mov
sbb
jp
xchg
std
jmp
push
push
lods
mov
or
movsl
mov
dec
xor
pop
xlat
xchg
add
xorl
sub
cld
popf
test
sahf
sbb
pop
jmp
loop
adc
jb
enter
lds
lret
nop
cmp
scas
rorl
jmp
push
mov
sub
push
adc
shlb
push
jae
daa
xchg
enter
inc
inc
in
or
pop
cwtl
mov
mov
add
and
cmp
rcrb
mov
aas
sbb
subl
rclb
add
or
ret
scas
out
pop
xor
mov
mov
pop
imul
out
aam
rcll
mov
push
call
lahf
repz
xchg
xchg
push
mov
int
pop
rolb
mov
mov
jb
pop
and
movhps
mov
fists
pop
and
popa
push
push
aaa
cmp
ds
fldpi
adc
dec
cmp
mov
icebp
push
mov
in
fucom
ljmp
mov
sbb
pusha
shl
and
fwait
mov
cmp
loopne
mov
filds
cli
ja
fdivrs
jne
shll
xor
jb
lds
ss
pop
dec
jns
out
or
xchg
icebp
sti
pop
int
jbe
sub
dec
cmp
jnp
ret
push
cmp
mov
xor
push
adc
sub
xchg
dec
pop
cltd
dec
add
data16
call
lods
cmpxchg
popa
jl
notb
repnz
inc
enter
rcrb
add
sbb
jmp
aas
mov
cwtl
dec
or
mov
clc
push
clc
jmp
out
and
aaa
xor
cs
je
mov
pop
cmp
pop
lods
fisubl
cli
popa
push
stos
jmp
cmpsb
mov
pop
or
adc
and
adc
arpl
inc
ljmp
push
ljmp
jmp
inc
loop
cmpsb
clc
mov
loope
test
sbb
and
pop
aad
sbb
mov
adc
outsl
subl
data16
mov
jnp
adc
jl
addr16
repnz
mov
sub
test
outsb
in
inc
mov
bound
je
cmp
into
mov
push
or
jns
out
clc
cwtl
add
xchg
sub
pop
test
es
xchg
add
or
into
mov
cmp
inc
mov
add
mov
aad
notl
jmp
xor
js
and
adc
stos
push
dec
add
push
insb
ret
aaa
dec
jecxz
cmp
push
mov
lock
lcall
xchg
push
sbb
dec
cmp
sub
lret
add
imul
xchg
fdivp
cmc
jp
es
pop
out
jge
jns
enter
in
add
xchg
scas
scas
add
enter
xchg
loopne
and
mov
imul
out
fmul
call
jno
push
dec
call
mov
dec
loope
xor
js
mov
sub
mov
ja
pop
cltd
jg
iret
sbb
xorl
xchg
fxch
push
cmp
cwtl
add
jnp
icebp
push
xchg
sbb
test
ja
scas
push
es
mov
and
fldt
in
xor
mov
jo
fdivp
jo
lcall
jmp
ret
cltd
daa
std
hlt
aas
pop
mov
pop
lret
lock
adc
jno
lods
xchg
mov
das
and
mov
sub
aaa
popl
in
and
dec
jb
push
mov
iret
cmp
aad
inc
in
dec
fldcw
jecxz
adc
adc
ret
testl
mov
int3
push
rorb
sub
mov
incl
xchg
sub
cltd
xchg
sub
dec
je
out
xchg
and
push
lret
in
adc
inc
pcmpgtd
sti
pop
clc
pop
fistpll
test
mov
xchg
jge
mov
bound
rorl
cmpsl
adcb
jge
jmp
call
scas
mov
inc
jbe
push
scas
push
push
fdivr
outsl
lea
subb
sbb
push
arpl
fs
popa
adc
mov
adc
ljmp
lret
popa
cmp
jge
cmpsb
arpl
push
inc
or
jg
popf
aad
push
mov
imul
out
aas
iret
and
mov
and
test
ljmp
popa
push
sar
or
jl
mov
mov
mov
jno
cld
jl
out
pop
out
xor
sbb
jns
xchg
cmp
nop
loope
adc
es
mov
int3
in
out
dec
mov
add
repnz
insl
mov
xchg
push
adc
xorl
sbb
and
cmp
int
jmp
cmp
imul
inc
xor
mov
pushf
imul
cwtl
dec
push
pusha
mov
in
in
sbb
inc
inc
adc
dec
sub
pop
xchg
test
aam
pop
call
jo
adc
or
pop
pushf
int3
mov
or
and
fs
lret
call
andb
cld
fistl
push
push
push
sub
cmp
cmp
in
add
enter
sub
xchg
sub
sti
sub
cmp
call
cli
sbb
pusha
xchg
call
push
or
loope
cmp
orb
test
aad
inc
ret
mov
cmpsl
mov
pop
cmp
rcr
ret
shll
pop
push
enter
adc
rcrb
sarl
mov
lock
arpl
test
leave
lcall
mov
in
mov
ss
or
ds
push
adc
sub
mov
inc
dec
push
inc
mov
adc
out
iret
popf
or
push
push
add
mov
push
add
jl
out
adc
push
ret
test
psubusb
aaa
push
pop
imull
js
fdivl
pop
mov
adc
sbb
sti
rcl
sbb
cmp
ret
adc
xor
testb
dec
pop
clts
je
insl
or
add
xor
filds
popa
sbb
icebp
hlt
pop
mov
lds
pusha
std
xchg
cmpsl
xor
push
inc
inc
push
or
pop
test
loope
sbb
pusha
and
ret
and
test
push
mov
into
cmp
xor
pop
xchg
lock
lds
ss
rolb
dec
cmpsb
cmpsb
push
frstor
sub
in
frstor
cli
fcmove
pop
mov
adc
jle
mov
negb
mov
stos
aad
pop
adc
push
dec
push
xor
fldcw
pop
pop
push
outsl
andl
arpl
clc
jge
gs
scas
dec
xchg
jns
push
out
pop
pushl
test
das
xchg
add
lods
pop
dec
xchg
cltd
xor
adc
xchg
outsb
out
lret
cwtl
xchg
dec
in
mov
icebp
cmp
movsl
sbb
pop
mov
ds
mov
xlat
mov
inc
sub
call
inc
mov
movsb
ret
popf
sahf
testl
add
jl
cmp
xor
sti
and
gs
xchg
adc
add
sub
fsubrl
gs
mov
xchg
xchg
or
pushf
int3
push
fisttpl
fincstp
scas
icebp
fdivl
jne
repnz
out
scas
pop
rorb
loopne
xor
push
notl
push
mulb
lahf
xchg
adc
add
aaa
pop
out
loop
data16
cli
cmp
enter
add
lods
mov
xchg
cmc
outsb
lret
sub
inc
sti
pop
aas
lds
xchg
cmp
mov
adc
ljmp
add
insl
gs
repz
out
out
pop
insb
sub
mov
loop
loope
cmp
inc
ret
mov
lret
inc
scas
add
pop
shll
call
pop
dec
xchg
mov
shrb
add
aas
sbb
push
cltd
inc
mov
rolb
sbb
push
mov
cltd
ja
xchg
mov
jl
popa
ja
push
sub
or
jle
mov
cmp
cld
pop
xor
pop
jbe
dec
enter
pop
mov
cmp
iret
inc
and
cmpsl
in
inc
mov
mov
enter
inc
pop
mov
sub
push
and
jmp
test
xor
dec
loop
mov
imul
subl
dec
outsl
out
out
push
dec
ss
jle
jecxz
cmp
mov
xchg
roll
add
stos
je
xchg
cmp
sub
fidivl
out
mov
pusha
push
arpl
cltd
jge
scas
lcall
or
cld
dec
in
in
outsb
int
in
gs
xchg
xor
movsb
shlb
add
movsb
cmp
jae
jnp
add
cmp
dec
pop
lds
shlb
imul
mov
shll
ja
cmpsb
pop
xchg
les
jne
sub
dec
bound
jae
movsl
dec
xchg
push
lea
shlb
xchg
test
js
fs
icebp
call
std
call
hlt
and
and
in
dec
rcr
pushf
mov
loope
sarb
mov
pop
aam
stc
and
nop
xor
sti
pushf
pushf
pop
xor
push
or
mov
js
and
cmp
insb
mov
popa
or
arpl
inc
pusha
repz
sbb
and
push
push
rclb
imul
jns
rcl
repz
jae
pusha
adc
push
inc
scas
jg
or
cmp
inc
mov
fbstp
xchg
cmpsl
or
inc
pop
leave
mov
or
scas
faddl
mov
aaa
je
push
cmp
cmp
ja
das
je
push
lock
xlat
movb
dec
jbe
inc
scas
add
jmp
pop
mov
incb
mov
loopne
dec
xchg
filds
or
jae,pn
in
push
sub
mov
flds
sbb
ja
mov
shll
inc
dec
add
add
xor
icebp
daa
jmp
daa
mov
push
add
pop
push
jp
xlat
iret
fs
cmp
js
and
and
cmp
xchg
movsb
repz
and
cmp
sbb
scas
mov
jp
fisubrl
shrl
inc
fdivl
aaa
lahf
adc
in
jge
sub
stc
in
add
push
xor
push
leave
sti
sub
std
js
xorl
lcall
inc
and
push
lock
das
dec
int3
and
mov
add
cmp
inc
sbb
fwait
xlat
jns
inc
std
lret
mov
pusha
jae
push
push
jnp
aam
nop
in
lret
jo
hlt
cmp
push
xchg
xor
push
lret
xchg
popf
sysret
lock
sub
inc
sbb
inc
in
and
sbbb
out
aas
movsb
repz
adc
xor
popa
add
pop
jb
xor
cmp
jno
das
cmp
das
bt
iret
aas
push
mov
dec
shrl
sub
xlat
imul
cwtl
add
shlb
sub
std
lret
in
clc
inc
sbb
cmpsb
addr16
jmp
mov
in
lcall
cmp
pop
cltd
pop
test
mov
pop
adc
std
stos
push
xchg
cmp
test
mov
mov
mov
cli
lods
mov
fwait
les
roll
sbb
test
add
mov
sub
adc
and
jns
push
xchg
xor
dec
or
ret
jge
mov
dec
cmp
jle
lcall
pop
outsl
add
leave
dec
mov
ret
push
hlt
cmp
fs
into
cmpsb
cmp
and
pop
bound
lret
xchg
dec
jno
mov
jmp
dec
jecxz
insb
ret
pop
jne
adc
adcl
push
punpckhbw
addr16
mov
shlb
adcb
xchg
mov
mov
fnstenv
add
movsb
enter
insl
and
gs
scas
fdivrl
jl
push
pop
iret
dec
cmpsl
leave
lods
adc
and
xor
std
mov
fisttpl
aas
dec
mov
std
push
push
aam
mov
jecxz
sbb
and
cld
call
daa
xchg
and
push
jbe
dec
jle
out
sbb
xchg
push
daa
jne
stos
fisttpl
outsb
out
popf
in
inc
fldln2
repnz
popa
inc
xchg
in
and
push
mov
push
call
fistps
negb
sbb
inc
cmpsl
mov
int3
push
jp
pop
aaa
xor
call
and
aam
push
out
push
shlb
mov
mov
adc
mov
addr16
popf
cltd
add
loope
imul
add
cmp
frstor
incl
fadd
ds
test
inc
jge
jle
or
fstp
mov
scas
cmpsb
push
sar
cmp
lods
sbb
push
out
adc
orb
add
in
popf
mov
lcall
add
stc
out
mov
push
pop
jb
and
hlt
into
add
outsl
fwait
cmp
pshufw
addl
mov
sahf
je
fdivs
add
and
sbb
pop
push
pop
data16
std
jbe
leave
dec
cmc
push
adc
push
mov
inc
stos
push
adc
ret
outsl
xor
pop
add
fsubp
pop
pop
lods
dec
or
addr16
mov
cltd
gs
ds
xor
movzbl
mov
mov
out
stos
ja
sbb
scas
push
frstor
adc
mov
sub
jle
mov
imul
stc
cmp
rcrl
je
sub
pushf
push
fdivrs
pop
adc
movsb
adc
xor
cmpb
shufps
into
ljmp
fldt
jge
mov
jns
jg
inc
scas
lods
add
add
sub
rorb
lcall
movsl
test
and
mov
test
mov
test
addr16
pop
pop
cwtl
ficoml
and
mov
xchg
addr16
inc
xchg
fidivrl
cmp
gs
cmp
femms
xchg
lods
aad
jns
neg
imul
mov
mov
cltd
jbe
mov
and
ret
pop
xchg
hlt
lret
fsubrl
stos
pop
push
push
enter
xchg
mov
mov
mov
insl
add
push
aas
cmp
push
lahf
jae
xor
sbb
lods
xchg
push
mov
mov
mov
jmp
nop
std
ret
jmp
aad
outsb
push
div
out
shl
out
push
push
mov
xchg
in
add
and
xchg
test
jmp
sti
stc
cmp
push
stc
movsl
mov
mov
xchg
xchg
lcall
sub
pushf
adc
or
and
bound
or
pusha
mov
dec
jmp
fdivrl
xchg
mov
popf
or
xor
test
mov
sahf
imul
mov
cmp
ret
adc
sti
int
cmpsl
loop
sti
shlb
pop
sti
bound
mov
mov
adc
xchg
add
lock
int
xchg
xlat
pusha
push
fcom
pop
ja
out
rolb
in
pop
adc
cmp
xor
adc
in
or
or
inc
xchg
cmp
int3
cmpsb
fsts
lods
test
cwtl
in
rolb
xor
loop
jp
movsl
pop
out
pop
jb
pop
int
xor
int
mov
test
test
mov
xchg
or
imul
jle
shll
es
call
movsl
xchg
test
jmp
adc
xor
nop
mov
xchg
or
mov
test
mov
adc
or
cmp
xchg
das
mov
fs
pusha
xchg
cmc
fwait
mov
sub
f2xm1
into
sahf
int
adc
xchg
fwait
mov
push
lret
or
rcll
out
shrl
fists
xchg
and
push
ja
xor
ret
xor
pop
push
sbb
test
lahf
adc
inc
icebp
dec
push
push
mov
call
and
scas
push
test
scas
mov
jns
mov
mov
mov
mov
stc
lea
adc
call
popf
dec
pop
lods
pop
push
fisubs
or
out
mov
ss
jl
jnp
add
inc
xchg
scas
in
and
out
xor
es
push
sbb
fnstcw
push
inc
mov
lea
call
ffree
jns
xchg
loopne
insl
push
inc
mov
xchg
loopne
movzbl
xorb
inc
pop
imul
dec
sbb
ret
sub
mov
aaa
push
mov
mov
lock
mov
mov
es
xor
popf
sbb
hlt
sbb
sbb
xor
add
add
xchg
mov
mov
insb
mov
cmp
xchg
or
cld
rorl
addr16
add
test
stos
jae
xor
outsl
xchg
fwait
int
insb
sub
cmp
push
push
xchg
push
inc
push
xorb
push
repnz
jnp
add
scas
nop
lea
xor
aam
adc
das
adc
inc
movsl
roll
outsl
xor
lds
jge
outsb
clc
test
inc
inc
mov
and
bound
mov
mov
cmp
and
push
inc
enter
adc
call
push
mov
push
insb
outsb
pop
xchg
in
dec
out
push
out
or
cltd
mov
enter
push
push
xchg
xor
adc
add
sub
mov
jle
adc
sub
push
ret
ret
mov
add
xchg
pop
cmp
pushf
inc
push
jge
adc
sub
dec
mov
fbld
mov
cwtl
repnz
daa
insb
call
mov
jle,pn
mov
sub
les
lret
jmp
in
lret
mov
adc
rcll
lahf
in
insl
and
lret
mov
mov
lret
lcall
in
push
fdiv
aas
xor
ret
ss
das
push
mov
jae
push
repz
push
icebp
sbb
xchg
idivl
aaa
into
fmuls
or
scas
je
cmp
add
mov
das
adc
or
mov
scas
add
mov
xchg
jg
sub
rcrb
cmp
xor
inc
xor
inc
repnz
mov
and
inc
or
ror
addr16
sbbb
lahf
rcl
mov
test
mov
mov
test
loope
mov
loop
dec
std
repz
jbe
sbb
inc
mov
or
cmp
roll
fidivrs
pop
or
inc
andl
sub
out
jmp
fists
bound
outsb
test
idivb
in
por
sub
xor
push
push
and
inc
xchg
mov
sbb
notb
xchg
jns
pop
xor
push
inc
pop
ret
rorl
mov
jb
jle
testb
mov
scas
sbb
jb
sub
sub
mov
jbe
mov
inc
adc
fwait
fs
add
into
mov
xor
fmul
cli
sub
mov
or
inc
aas
dec
loop
fs
movsl
nop
lds
loope
xor
xchg
aas
mov
idivl
int
fwait
mov
ret
test
popf
aad
sbb
sbb
test
fstp
pop
cmpsl
jg
fwait
push
push
dec
xor
lret
and
push
lret
sbb
mov
ss
push
lahf
sbb
jge
cmc
jp
inc
outsl
subb
or
mov
xchg
ficoml
js
xchg
and
or
shll
jb
lods
pop
push
in
cwtl
inc
int3
std
cmp
icebp
pop
push
mov
ja
jae
call
hlt
dec
jno
mov
cli
sbb
ret
push
push
push
pop
test
int
aaa
cmp
jae
lcall
inc
insb
mov
addr16
cmpsb
mov
outsb
sbb
movsb
mov
xor
mov
ds
sbb
imul
lods
mov
repnz
aaa
imul
mov
cwtl
fs
and
icebp
mov
and
movsb
mov
les
push
xor
mov
inc
sbb
xor
xchg
repz
cmp
mov
pop
mov
jnp
sti
inc
imul
inc
fisubs
mov
lcall
sub
inc
pop
and
mov
and
call
inc
mov
dec
fld
dec
xor
and
mov
push
add
dec
xor
ss
and
mov
in
shlb
mov
and
sub
ljmp
dec
pop
out
inc
jle
imul
push
dec
aam
test
sbb
fsubr
cli
add
insb
cmp
cmp
sub
arpl
bound
cmp
pop
in
int
mov
outsb
dec
xor
fwait
pop
mov
sahf
mov
sbbl
jmp
jno
lret
jb
dec
dec
test
icebp
mov
imul
shl
aam
dec
test
jp
and
aad
and
rclb
mov
ss
mov
jl
repnz
aam
lcall
ret
sbb
mov
scas
jecxz
push
mov
mov
pop
pop
pop
inc
xchg
fsqrt
iret
popf
cmc
int3
adc
je
cli
aaa
call
jno
and
ret
fs
gs
or
jle
dec
sarb
sbb
popa
xchg
aas
stc
sub
in
cmpsb
mov
pop
out
fmull
jle
cmpl
xor
dec
push
xchg
push
fcmovne
ljmp
jge
inc
push
es
adc
xor
std
add
xor
xor
mov
pop
in
shll
sub
mov
imul
add
test
mov
or
loopne
xor
addr16
iret
roll
ds
lods
adc
adc
les
inc
jb
call
aad
stc
mov
test
sbb
jns
out
outsl
or
shll
jmp
test
sub
repnz
call
push
or
push
and
mov
xchg
and
imul
arpl
fiaddl
icebp
and
repz
sti
xor
addr16
imul
vmptrld
outsb
andl
mov
hlt
fwait
and
push
test
jmp
je
popa
test
inc
outsb
movsb
leave
mov
shll
test
add
jmp
out
xchg
pop
fcoml
add
ret
insl
sub
pop
les
outsb
mov
mov
pop
out
in
test
adc
pop
loope
add
sub
sbb
xchg
or
mov
ljmp
adc
dec
rclb
jmp
in
pop
cltd
ret
es
sub
pop
lock
xchg
xchg
cmpsl
mov
cld
xchg
aas
push
insb
inc
cmp
in
mov
dec
pop
xlat
out
xchg
push
mov
data16
cld
nop
insl
cmp
dec
shl
sti
mov
dec
jae
xchg
jg
push
jb
cmp
fcompl
pop
jb
cmpb
inc
aad
orb
jne
cmp
mov
or
cmp
add
ljmp
add
jns
mov
movsb
mov
mov
jge
jb
mov
cld
ja,pn
push
mov
test
rcl
std
sub
insb
xchg
js
outsl
inc
jbe
xor
cmp
add
jne
push
adc
xchg
stos
popf
push
fcompl
sub
cmp
jne
sub
and
sbb
adc
cld
mov
adc
xor
clc
or
mov
or
imul
lods
push
add
push
or
add
imul
ret
lahf
stos
push
push
lods
pop
sbb
mov
mov
aam
ljmp
sub
sbb
dec
jnp
push
mov
cwtl
dec
and
pop
iret
aaa
sub
insl
mov
cmp
or
lods
sub
inc
dec
inc
ss
inc
mov
mov
jb
std
sti
scas
adc
sub
movsl
add
daa
push
jl
cmp
cmp
jg
filds
sub
mov
xor
aam
mov
add
ss
test
cltd
adc
cmp
inc
push
mov
jno
xchg
xor
fmuls
dec
push
pushl
jae
pop
sahf
out
sub
movsl
daa
xchg
lods
fsubr
add
fldcw
imul
xlat
xor
inc
ja
movsb
and
subl
adc
leave
cs
out
push
jae
or
lods
cld
lods
push
loop
or
cmp
xchg
in
mov
sbb
cwtl
cmp
loope
in
xor
iret
test
out
hlt
mov
xchg
add
fsubl
test
xor
out
stos
jae
sub
mov
fisttpll
mov
xlat
jo
push
addr16
clc
sbb
loop
pop
out
xchg
jo
test
repnz
xchg
mov
adc
push
add
mov
jp
add
pop
dec
mov
xor
dec
stc
cmp
shll
nop
jl
loop
sbb
sbb
lahf
jl
jo
cwtl
stos
fcoms
cmp
dec
mov
imul
in
inc
jnp
cmp
test
int3
js
push
movsl
sar
ds
xlat
sbb
cli
outsb
ljmp
cmp
shrb
lods
or
lret
mov
add
aaa
sub
jb
pop
dec
scas
pop
gs
aaa
xchg
pop
push
push
aaa
insl
sti
loopne
add
mov
iret
xor
xchg
pop
dec
xchg
jnp
dec
push
adc
scas
repz
sbb
shl
jnp
fsubrl
fistpl
decl
out
loopne
shlb
cmp
iret
ss
idiv
out
stc
inc
in
loopne
xchg
pusha
cmpl
cld
decb
inc
xor
jl
lock
sahf
outsb
cli
cmc
adc
pop
mov
es
mov
xor
mov
ljmpw
idivl
scas
enter
icebp
and
mov
dec
sbb
push
rorb
andl
cmp
mov
mov
pop
sbb
dec
repnz
outsl
push
and
add
push
orb
dec
dec
pop
enter
xor
push
pop
jbe
call
cli
rorb
jno
push
popl
hlt
push
xchg
inc
clc
jb
pop
jno
cld
sub
and
scas
in
mov
cmp
pop
push
dec
test
sub
adc
jb
and
lock
sbb
lock
loop
mov
ljmp
jecxz
jne
mov
adc
dec
cmp
xchg
les
cmp
or
mov
sbb
xlat
fs
popf
sbb
hlt
jl
inc
adc
loop
jne
scas
cmp
pop
cli
xchg
adc
jae
adcl
sub
jp
leave
cmp
ret
sbb
cmp
movsb
jae
add
les
cmp
scas
pop
movsl
cwtl
sub
jp
push
xlat
or
das
push
aaa
fistpl
inc
aaa
movsl
mov
mov
push
sarb
decl
pushf
fwait
sbb
idiv
lock
jge
push
fisubs
neg
dec
fisubrs
xchg
push
xchg
pop
mov
pop
lret
mov
jb
setle
adc
movsl
jns
fs
int3
xor
pop
push
xlat
mov
hlt
lret
sahf
push
jp
bswap
sahf
dec
jo
stos
mov
pop
fld
sub
sub
xchg
or
pop
dec
lahf
mov
adc
pop
add
test
lods
cmp
jge
push
mov
sub
sbb
adc
sub
mov
lret
clc
jp
outsb
sub
pop
pop
or
hlt
ffree
sbb
jbe
stc
pop
stos
mov
adc
xchg
xchg
push
mov
mov
leave
lods
lret
cmp
and
lock
fcomps
dec
xchg
push
dec
sbb
mov
scas
inc
loope
or
std
into
xchg
jmp
push
in
in
das
cmp
push
push
and
daa
sbb
stos
int3
insb
or
mov
insb
in
hlt
data16
mov
xor
mov
add
xor
xchg
jmp
out
add
rorb
xor
xchg
clc
xlat
lcall
sbb
adc
dec
int
sbbb
xchg
into
cmp
insl
xchg
pop
dec
jg
lods
cmp
and
imul
fmuls
pop
inc
inc
mov
pop
sub
sub
popa
mov
aaa
sbb
dec
fnstcw
aad
jmp
fcompl
rcrb
sbb
hlt
sti
push
mov
mov
push
jns
or
ja
jne
into
jmp
jnp
and
ljmp
lret
insb
sub
cmpsl
mov
fistpl
mov
add
add
data16
and
imul
call
pop
and
pushf
mov
test
cmp
sub
push
nop
and
dec
lcall
aas
push
dec
mov
pusha
push
sub
mov
test
inc
cltd
jno
and
inc
xchg
ret
sub
nop
fsubs
dec
pop
loop
loop
lahf
arpl
inc
sbb
sbb
sti
dec
adc
cmp
insb
in
push
std
pop
int
cmp
lcall
in
pusha
les
mov
aad
and
and
adc
ljmp
fidivrs
fcomip
xchg
pop
ret
and
jmp
jne
lods
sbb
cli
popl
stos
xchg
xor
push
les
xchg
lret
imul
mov
fnsave
and
shlb
mul
inc
sbb
mov
xchg
loopne
cmp
inc
inc
pop
or
inc
adc
xor
aam
mov
popf
mov
shl
loop
mov
pusha
mov
dec
push
cli
mov
cmp
repz
xchg
shr
mov
and
mov
mov
jg
mov
stc
das
and
push
xor
fs
pop
jmp
ja
jno
lea
test
out
outsl
mov
out
push
pop
jne
mov
mov
xor
loop
push
push
inc
gs
daa
int
out
popf
lahf
in
xchg
fldl
mov
int3
xchg
int3
fwait
xchg
out
jecxz
icebp
sbb
xor
inc
fdivrl
sub
dec
mov
sbb
jp
mov
xchg
xorb
push
xor
cmc
jae
insl
pop
xchg
cmp
mov
mov
cwtl
sbb
mov
aaa
pop
mov
push
aam
in
xor
filds
lods
ljmp
pusha
je
pop
cwtl
inc
bound
pop
and
call
and
fildl
pop
xlat
mov
push
jge
dec
mov
out
cmp
jnp
and
sti
lods
push
mov
inc
rorb
adc
icebp
cmc
xchg
jl
inc
xchg
mov
or
mov
add
or
xchg
jmp
mov
in
mov
jmp
cmpsl
mov
movsl
shll
cli
or
das
fnsave
push
mov
repnz
cli
iret
add
push
les
xchg
aam
not
cli
cmp
out
test
movsl
jmp
push
pop
cs
insb
es
mov
stc
sub
xchg
mov
sub
std
pusha
clc
sub
scas
mov
bound
stos
fbstp
pop
jae
pop
adc
add
lea
adc
dec
xchg
cwtl
sub
lods
sbb
insl
lea
lea
ret
dec
cmc
lods
mov
js
cs
ljmp
push
mov
dec
sbb
xchg
call
dec
sahf
lds
insb
jecxz
pop
in
fcmovnb
ja
add
mov
cmpsl
outsl
or
xor
out
cmp
jb
outsb
out
lock
rcrb
push
jo
pushf
jo
cmp
fstp
dec
xchg
sub
xor
inc
inc
cmp
daa
loop
mov
scas
cmp
jmp
xor
cmpsb
add
or
lret
lcall
out
imul
mov
mov
fbstp
icebp
jmp
stos
arpl
add
roll
push
or
les
addb
movsb
xchg
inc
aas
fucomi
int
lods
add
fldenv
add
mov
cmp
lock
iret
jns
lods
push
xchg
push
adc
insl
clc
pop
add
jle
aas
xor
fdivl
or
xor
mov
dec
fists
xor
xchg
aas
push
int
cli
jnp
adc
jge
sub
loop
lahf
loop
cmpsl
or
adc
es
cltd
shrb
cmp
int
addb
lods
and
lcall
mov
decl
fidivl
loop
fsubl
sti
leave
stc
mov
mov
cmpsl
and
arpl
adc
movsb
inc
dec
ja
add
add
imul
inc
xchg
fcomps
pop
movsl
cmp
push
sbb
fidivrs
in
lcall
divb
scas
lea
sbb
and
test
fcoms
mov
fdivs
push
aaa
dec
lcall
outsb
into
xchg
mov
sbb
daa
jbe
fs
in
out
xor
sbb
dec
rol
mov
mov
adc
outsb
sahf
sbb
ret
mov
nop
add
sti
popf
aas
cmpsb
push
aas
sub
das
pop
mov
sbb
int3
mov
popa
or
hlt
add
fdivs
test
repnz
jecxz
insl
mov
push
and
into
xchg
inc
mov
mov
scas
dec
aad
scas
mov
dec
cwtl
and
xor
xchg
leave
ds
mov
push
xchg
dec
pop
dec
mov
retw
notl
mov
mov
in
mov
rorb
push
sbb
xor
sti
lods
add
mov
and
jmp
fldl
outsl
lds
arpl
jmp
aad
xchg
dec
add
addr16
in
or
daa
xchg
mov
mov
out
and
xor
push
jo
cld
rcrl
sub
ds
clc
pop
cmp
je
call
addr16
fucomp
or
jp
jge
cmp
pop
in
popf
int
sub
popf
fidivl
jge
into
fistpl
push
mov
push
jno
push
sbb
mov
test
push
cs
fwait
cmp
inc
aad
push
enter
out
fsin
push
push
cld
pop
mov
and
sub
popa
sbb
shlb
movb
sub
in
sub
xor
je
xchg
jne
inc
lret
push
jmp
mov
test
add
out
imul
loop
push
mov
lcall
loop
cltd
inc
mov
sub
mov
and
cmp
push
add
popa
mov
jecxz
pop
rcrl
pop
fs
arpl
or
mov
arpl
jnp
fdiv
lret
mov
and
add
arpl
xor
add
lea
stos
jge
test
inc
mov
xor
js
mov
out
fwait
cmp
pop
push
dec
jle
jno
sbb
fistl
out
fldcw
dec
outsl
push
xor
in
mov
dec
jb
push
jne
jecxz
sub
xchg
cmp
and
add
scas
nop
mulb
cmp
repz
and
jp
xor
pop
lahf
enter
int
lock
dec
sub
sbb
dec
pop
icebp
popa
aad
test
andb
mov
pop
xor
outsl
cmp
stc
ds
mov
push
xchg
repz
xchg
repz
rcr
mov
mov
cltd
jno
inc
lahf
out
iret
sbb
adc
sbb
dec
out
inc
aad
sbb
int3
adc
arpl
lret
jb
shrl
or
lcall
sbb
mov
test
jo
mulb
sub
push
ret
out
pop
stos
insb
xchg
cmp
andb
push
xchg
and
test
jl
faddl
push
imul
inc
xlat
push
inc
out
std
cs
mov
pop
popa
xor
out
ficomps
lods
mov
icebp
push
fidivrl
xchg
pusha
out
cli
cmp
mov
xchg
mov
cld
add
imul
pop
aad
movsl
shr
sbb
fs
filds
lret
cmp
inc
test
repnz
aaa
adc
cmp
ljmp
hlt
or
inc
sub
xor
xchg
sub
mov
aam
andl
into
sbb
cmp
jno
ja
nop
fmull
sub
shll
jns
cmp
call
cmp
fdivl
dec
aas
or
mov
push
push
cmp
shll
fs
dec
movb
xchg
scas
xor
popf
mov
imul
cmp
lock
jecxz
or
push
and
pushf
lea
mov
shrb
sbb
lods
rcll
jne
pop
sbbl
add
push
pop
lcall
pop
in
rcl
mov
cmc
ss
outsl
pop
stc
out
dec
std
fdivrs
mov
fwait
rol
push
out
in
xorb
fwait
inc
fisttps
mov
jnp
fstp
dec
ret
repnz
rorl
outsl
sub
dec
insl
leave
popf
insb
cmc
and
iret
cmpb
push
mov
or
outsl
out
rcr
into
fcompl
push
xchg
fcoms
gs
inc
js
bnd
dec
add
push
adc
cmp
cld
and
dec
sbb
cmp
cs
andl
adc
and
lret
add
cli
dec
pop
call
jo,pn
inc
mov
ss
lds
lahf
xchg
mov
adc
and
ds
sub
xchg
sub
mov
lock
cli
fbstp
xchg
xchg
scas
sar
aad
push
jo
insl
aaa
in
add
sbb
add
nop
xlat
lods
push
ljmp
repnz
push
mov
pop
fstp
add
cmp
mov
cli
bound
xor
inc
add
inc
lret
out
jo
cmp
mov
cltd
inc
mov
cmp
inc
jae
ret
shr
sbb
adc
jp
scas
int3
popl
gs
std
cmc
cmp
and
jge
scas
push
cmp
mov
or
xchg
sarl
xor
rorl
lods
scas
dec
jg
rorl
or
add
dec
inc
xchg
cmpsb
dec
outsl
adc
xor
std
jmp
xor
cmp
push
cltd
jns
dec
loopne
aaa
lret
divb
cltd
fmuls
icebp
push
mov
ljmp
shlb
pop
fstpl
movsb
es
dec
mov
and
or
dec
rcll
lock
movl
sbb
outsb
roll
ficompl
mov
push
stc
inc
clc
hlt
xchg
andl
or
xchg
ret
cmp
xchg
xchg
cmpsl
xor
pop
mov
inc
sub
mov
je
mov
ds
iret
xor
cmp
shlb
xorl
fiadds
insl
scas
aad
out
add
pop
push
xchg
repnz
mov
nop
jg
dec
xchg
fs
test
lea
pop
sarb
push
pusha
cmp
rolb
pop
xor
push
negb
jns
loopne
sbb
adc
mov
jae
and
jl
push
mov
mov
xchg
popf
sub
insl
int
imul
mov
in
lods
fwait
add
xor
mov
out
add
pop
sar
adc
pop
and
imull
in
push
dec
inc
gs
incl
mov
mov
mov
popf
mul
dec
mov
xlat
lcall
dec
addr16
inc
push
scas
das
fcmovbe
jmp
pop
jp
popf
lds
insl
cli
or
cmp
jge
push
enter
sahf
mov
daa
add
mov
pop
into
add
or
repnz
shrb
orb
mov
and
mov
xchg
test
in
movsb
cmp
arpl
or
inc
adc
imul
mov
arpl
rcll
mov
xchg
jg
jmp
adc
fwait
inc
push
jmp
inc
insl
or
jecxz
cwtl
leave
imul
push
mov
rclb
test
lods
outsl
pushf
int
and
xchg
pushf
push
rcrb
sahf
jns
pop
sub
idiv
inc
faddp
out
loop
fistps
mov
pop
clc
ja
in
lret
sbb
loop
mov
and
pop
dec
mov
mov
xor
in
jnp
mov
inc
add
das
mov
fstpl
fstl
in
jl
in
xchg
and
inc
sarl
cwtl
and
inc
mov
pop
outsb
frndint
inc
setl
lret
mov
jp
mov
or
js
lahf
and
ss
mov
xor
test
jns
dec
push
mov
sub
loope
sub
sub
jmp
add
mov
cmp
inc
pop
cmp
scas
push
cmp
gs
fdivr
shlb
cmp
adc
pop
in
jbe
lahf
idivl
mov
xor
imul
adc
pop
xor
xchg
adc
and
mov
jbe
dec
pop
loope
cmp
inc
xor
push
or
add
cmp
icebp
ds
dec
arpl
aas
das
clc
out
jecxz
xor
mov
mov
add
arpl
insb
es
or
sahf
les
jno
mov
push
divb
inc
lods
dec
xchg
pop
push
cmpsb
pop
dec
mov
sarb
aas
sub
push
push
mov
sbb
cmp
jl
test
pop
jecxz
outsb
sahf
cmpsb
xchg
dec
fisubrl
nop
cltd
ret
enter
aas
addr16
test
mov
pop
outsb
lods
push
mov
fsubr
mov
or
or
repz
lret
push
jge
sbb
imul
lds
or
jmp
sub
cmp
mov
add
leave
test
cmpsb
rcl
loopne
mov
mov
jb
mov
cli
stc
orb
and
into
jns
test
into
daa
add
jmp
fs
iret
adc
push
cmpsb
repnz
xor
pop
mov
sti
mov
andb
daa
rcrb
notb
cmp
pop
xor
xor
xchg
nop
adc
imul
mov
scas
sub
in
popa
loop
xlat
jp
notb
add
or
dec
or
rcrl
adc
lock
mov
add
aam
dec
adc
sbb
xor
imul
xchg
xchg
add
jle
clc
jg
pop
pushl
repnz
cmp
loopne
jb
movsl
stc
mov
dec
dec
sub
fsubrs
shrl
scas
mov
cmc
jg
in
fs
add
push
xchg
loopne
lea
dec
mov
leave
adc
sub
cmp
add
pop
jns
into
cmc
nop
push
adc
xchg
sbb
sub
lret
stos
inc
clc
sbb
jmp
mov
push
pop
dec
push
je
out
cmp
mov
add
test
and
div
sbb
pop
push
mov
and
adc
popf
rcrl
out
jle
xchg
add
inc
mov
push
cmp
lahf
xchg
jb
jl
mov
cmpsb
xchg
cmpsl
cmp
inc
sbb
adc
mov
push
mov
stos
dec
ljmp
ret
jp
rorl
inc
jmp
cs
mov
and
loop
pop
imul
movsb
mov
iret
sahf
jno
and
sti
pop
rol
adc
into
idiv
pop
cmpsl
mov
inc
jae
stos
cld
aad
fwait
adc
push
divb
paddq
push
sbb
sub
hlt
mov
adc
xchg
or
mov
xor
repz
add
xchg
mov
repnz
icebp
mov
inc
ret
inc
cwtl
daa
jp
ja
mov
fists
cmp
outsb
pop
xchg
push
xchg
adc
outsb
ss
xor
jb
das
ficomps
flds
testl
mov
andb
in
ja
out
pop
mov
into
push
fwait
jg
push
int
jle
fldl
cmp
hlt
jmp
pop
popf
pop
incl
mov
ljmp
pusha
leave
mov
pop
jge
cwtl
xchg
daa
inc
jle
outsl
notl
clc
sbb
popf
sbb
dec
cmpb
sahf
sbb
aas
fldt
adc
cwtl
sub
dec
aad
dec
jbe
push
test
mov
leave
cld
jns
mov
mov
lret
or
jo
sub
sbb
mov
xor
mov
cmp
hlt
das
xor
in
adc
inc
jecxz
incb
gs
xchg
inc
mov
into
mov
mov
into
jp
mov
push
dec
bound
cmpsl
fisubs
outsl
leave
movlps
cmc
jle
subb
mov
and
sbb
cmpsb
outsl
cld
mov
shr
hlt
lcall
push
and
sub
int3
shl
xor
scas
fdivrs
sbb
aam
in
and
xchg
cmp
push
das
sbb
std
xor
or
fsubr
lahf
ljmp
dec
sti
sbb
xor
mov
addr16
dec
and
xor
push
push
jbe
pop
mov
mov
mov
inc
xchg
fists
mov
pop
jb
loope
loopne
inc
dec
or
and
mov
aam
mov
or
push
inc
push
aas
insb
fdivrp
mov
sub
in
sbb
shll
sbb
xor
les
and
out
arpl
div
push
popa
xchg
pop
test
dec
out
mov
sub
pusha
lods
add
mov
test
iret
icebp
ljmp
aas
mov
mov
xor
aas
cmp
dec
xor
pop
psubq
imul
push
clc
add
mov
and
cmp
sub
pop
mov
out
ds
and
inc
rclb
insb
mov
sub
pop
sbbb
push
push
test
sub
cwtl
push
fs
jbe
cli
les
loope
aad
sbb
repnz
scas
test
js
cwtl
xchg
sub
or
or
xlat
cmpb
enter
in
dec
sahf
shlb
dec
js
adc
jo
jmp
jno
fcomi
es
inc
push
stos
mov
jnp
cs
and
sub
lods
jae
add
sub
jbe
xchg
and
mov
repz
sbb
mov
and
mov
adc
push
inc
pop
lcall
cmpsl
jmp
std
jnp
mov
out
subl
mov
xor
cmp
pushf
stos
jecxz
mov
pushf
inc
lock
sbb
mov
xchg
int
add
rolb
mov
jmp
add
dec
pop
push
mov
or
mov
lcall
jae
rcrb
jg
adc
xor
fdivrl
ljmp
push
mov
int3
cmp
rclb
mov
inc
dec
jno
mov
sub
divl
cmp
xchg
xchg
daa
sub
nop
fstpt
imul
xchg
cmp
cmp
lock
push
mov
repnz
cmp
faddl
mov
or
and
xor
fildl
movsb
cltd
shll
sbb
or
pop
dec
stos
cmp
dec
push
push
push
adc
jno
cmp
jecxz
aad
cwtl
cmp
shrb
jbe
sub
bound
sub
cwtl
cmp
mov
xchg
icebp
mov
imul
shrl
sbb
cmp
inc
pop
fwait
inc
testb
add
cwtl
push
mov
mov
lret
mov
fistps
out
or
std
pusha
mov
pop
fstl
inc
std
sbb
xorb
dec
mov
xchg
ret
xlat
xor
inc
pop
adc
or
cs
repnz
mov
jb
dec
movl
mov
stos
add
sbb
loopne
sbb
push
jmp
adc
dec
mov
dec
gs
sub
mov
cmp
jbe
out
scas
push
sbb
mov
cmp
std
mov
mov
in
mov
and
jge
clc
cld
insl
hlt
int3
push
jle
pop
out
push
mov
dec
mov
cmp
stos
xchg
and
outsb
xchg
sub
add
push
xor
adc
mov
sbb
pop
or
cs
fcomps
in
out
add
cmp
xor
mov
ficoml
mov
and
push
add
mov
insl
fimuls
mov
cltd
lahf
adcl
lcall
push
jns
cs
cmpb
test
mov
lods
jno
mov
sbb
jecxz
into
pop
xor
test
lret
push
jecxz
push
loopne
xchg
rcr
mov
hlt
jb
adc
or
fsubl
cld
push
xchg
andb
mov
push
imul
pop
cli
xchg
inc
jp
cmpsb
inc
jge
sub
cli
je
cli
lea
aam
lea
pop
insl
mov
mov
insl
dec
mov
adc
sbbl
je
sub
aas
push
xchg
cs
xchg
jl
mov
mov
jb
cli
les
in
into
iret
pop
sahf
dec
adc
fwait
adc
sbbb
lret
inc
lahf
sbb
xorb
rcrb
push
dec
pop
mov
pop
in
inc
mov
cmp
cli
mov
mov
sbb
insb
mov
mov
imul
rorl
jo
popf
or
dec
sub
mov
xor
and
sub
add
mov
iret
push
repz
push
inc
nop
popa
sbb
arpl
shrb
loopne
into
leave
dec
stos
xchg
adc
cmp
out
sarb
or
push
sbb
fiaddl
je
adc
and
cmpsl
bswap
jo
sub
or
xlat
sbb
adc
dec
cmc
jnp
push
ss
aaa
cmc
inc
push
jp
out
mov
fistps
push
pusha
aam
stos
mov
fdivrs
std
xor
mov
or
aas
loope
lahf
or
ss
cmp
mov
mov
mov
cmp
xor
cltd
xchg
pop
out
pop
test
add
jb
stos
cmp
cwtl
jecxz
in
movsb
fcoms
jp
shlb
cmp
hlt
js
fs
rcl
leave
sahf
push
outsl
sub
pop
aad
mov
dec
jns
pop
adc
mov
call
sbb
add
in
xor
sub
test
mov
das
mov
pop
in
mov
and
add
fsts
gs
shl
xor
mov
das
imulb
push
xchg
add
sbb
add
les
test
sarl
fmul
sub
push
shlb
sub
loopne
cwtl
out
push
flds
pop
lret
flds
xchg
mov
push
pop
icebp
push
gs
mov
lods
xor
xchg
cwtl
lret
jns
push
push
insl
inc
outsb
and
mov
xor
dec
xorl
sub
pop
sbb
push
pusha
ljmp
jns
outsl
jl
ljmp
cld
adc
and
mov
leave
sub
test
test
inc
stos
mov
mov
mov
xor
int
sbb
pop
dec
cltd
rorb
mov
cmp
out
test
mov
dec
and
ret
xor
lcall
or
js
call
int
das
mov
adc
sub
insl
out
mov
mov
push
sub
jg
jmp
push
inc
out
cmp
stc
dec
ret
mov
gs
outsl
sbb
shlb
les
daa
arpl
insl
arpl
push
mov
or
cmp
cmc
and
jecxz
jno
jmp
mov
adc
shll
add
mov
xchg
push
xorl
insl
mov
and
rorl
nop
push
push
or
xchg
push
mov
sbb
cmp
gs
decl
mov
movsb
jbe
sub
xchg
outsb
jae
add
push
mov
jmp
daa
das
hlt
stos
push
sbb
out
lock
sbb
pop
inc
and
movb
pop
push
mov
jge
dec
mov
stos
movsb
inc
fsubl
iret
or
inc
mov
mov
pop
xchg
adc
sub
ret
push
fninit
cmp
jp
int
rorb
mov
push
fists
adc
rorl
cltd
add
mov
mov
sahf
cmc
cmp
popf
fmul
mov
jo
repnz
xor
fwait
adc
pop
subl
sub
mov
mov
cmp
stos
std
push
pcmpeqw
or
push
jo
orb
and
xchg
add
push
pop
icebp
and
push
xor
fsubrs
pop
pusha
fwait
xchg
mov
lods
es
shlb
hlt
sbb
cmp
jle
aas
jnp
add
sub
sub
mov
je
pop
ret
lea
scas
fisttpll
push
cmp
cli
dec
push
cmp
imul
mov
jge
arpl
add
push
xor
loope
std
dec
lahf
iret
sub
add
imul
fildl
mov
mov
adc
jp
or
mov
sti
inc
sbb
clc
mov
fidivrs
shrl
sahf
mov
cmp
loope
sarl
enter
or
lods
xchg
push
inc
or
and
inc
mov
push
lret
aas
cmpl
negl
ds
mov
xchg
inc
sahf
mov
cmp
pop
sub
inc
mov
addr16
test
jb
aad
jae
loop
cmpsb
jle
pop
dec
dec
hlt
cmc
arpl
adc
repz
test
addr16
or
cmp
lahf
sbb
dec
mov
fdivs
lock
nop
or
mov
lock
and
pop
push
mov
inc
inc
orb
add
dec
jbe
cwtl
xor
xchg
hlt
lret
stc
or
xor
ret
sbb
and
sti
dec
inc
mov
orb
nop
cltd
into
adc
pop
cwtl
clc
icebp
cmp
loopne
lret
test
scas
pop
clc
fisubl
mov
imul
inc
adc
push
mov
outsb
xchg
add
mov
je
adc
mov
call
inc
cltd
add
arpl
sub
dec
pop
lods
and
mov
adc
movsl
pop
cli
pop
mov
pop
mov
pop
lods
jmp
mov
lcall
insl
add
sbb
adc
jmp
mov
lret
inc
js
mov
dec
rcll
xlat
xor
jg
adc
or
jbe
mov
xchg
clc
push
sbb
lahf
adc
lret
sbb
cmp
cli
pop
pop
cmp
xchg
int
outsb
jo
mov
add
std
daa
adc
xchg
pop
pop
inc
enter
es
mov
cmp
ror
outsb
and
outsl
out
xchg
or
push
imul
jo
insl
add
add
in
inc
mov
mov
inc
add
push
add
pop
sub
lret
inc
fldcw
mov
cmc
cmp
lods
mov
jbe
aas
sbb
and
sbb
nop
xor
cld
xchg
cmp
push
jnp
repnz
push
leave
fucomip
and
cmp
inc
lds
das
test
in
pushf
out
out
sahf
loopne
fsub
mov
cld
or
insl
test
and
mov
cmp
rcrl
xor
out
scas
pop
add
les
sbb
js
insb
movsl
dec
push
data16
push
fmull
mov
mov
fnsetpm(287
outsb
cmp
push
loopne
call
xchg
scas
mov
fsub
dec
cmp
jg
or
mov
sbb
xor
mov
test
test
add
insb
and
in
xlat
lret
ss
jmp
fisttps
sub
incl
cltd
xor
sar
les
inc
mov
push
inc
xor
popa
repnz
in
push
testb
in
push
pop
jb
mov
fdivl
pop
insl
push
or
or
jns
dec
outsb
jb
nop
pop
mov
cmp
outsb
xlat
mov
les
inc
cwtl
adc
ret
xor
clc
imul
pop
repz
mov
pop
repz
and
cli
xor
xchg
jno
or
sbb
mov
gs
int3
popf
cli
mov
out
xchg
add
mov
inc
cwtl
mov
adc
rorb
inc
add
mov
push
pop
or
mov
aaa
cmp
adc
and
cmpsl
inc
dec
dec
icebp
es
sub
inc
jp
adc
pop
jns
push
dec
clc
mov
pop
inc
dec
xor
pop
in
addr16
fisttpl
cmc
popa
adc
xor
or
push
lret
ret
pop
mov
jb
xor
cmp
adc
dec
xlat
pop
fisttpl
lds
jo
dec
fidivrs
push
ja
mov
cli
xchg
push
or
mov
call
add
cmp
adc
addr16
jo
sub
inc
push
mov
add
pop
and
jmp
cltd
push
inc
mov
lea
lret
js
into
xchg
rcrb
fwait
dec
xchg
xchg
je
addr16
fdivrs
mov
out
and
aaa
inc
mov
cmp
outsb
mov
lea
dec
xor
outsb
pop
jmp
test
mov
dec
sub
or
subl
das
aas
popa
sub
sub
jg
imul
out
jl
and
sahf
sbb
push
jle
mov
jmp
pushf
mov
dec
mov
jl
jbe
and
inc
lods
outsb
mov
ret
push
mov
outsb
test
in
mov
cmp
and
call
xchg
add
xchg
and
mov
jecxz
sbb
adc
mov
mov
jb
jbe
inc
sahf
pop
cwtl
jno
call
push
fbstp
call
push
fsubrl
sbb
or
pop
mov
pop
lods
in
inc
push
mov
fldenv
sub
loopne
inc
xor
divl
xchg
cmp
rcll
and
lahf
jne
icebp
daa
test
adc
stos
je
jge
sbb
rcr
pop
idivl
out
mulb
fidivl
out
call
mov
in
push
leave
repnz
cmp
mov
dec
inc
push
xchg
xlat
stos
sub
xchg
stc
sbb
lods
xor
cli
mov
out
inc
add
dec
pop
loop
xchg
mov
ljmp
gs
fldl2t
mov
cmp
popf
mov
pop
sbb
jnp
ds
rorl
ret
aas
lcall
and
or
movsb
push
sti
push
test
inc
insb
rclb
outsl
insl
leave
into
loope
int3
test
sub
idiv
mov
inc
in
pop
insl
mov
int3
push
je
push
outsb
stos
mov
xorb
orb
test
in
insl
pop
push
lret
jl
std
stos
and
in
inc
pop
in
shrb
orb
mov
cmp
leave
add
mov
sti
bound
add
cmpsb
test
jmp
lret
test
loop
pushf
popf
sti
test
inc
xlat
leave
and
xchg
adc
sub
adc
pop
lcall
xor
push
pop
push
mov
in
jnp
hlt
jnp
cmpsl
jp
flds
faddl
mov
pop
ds
adc
insb
mov
jg
jp
xchg
add
leave
inc
fcmovu
push
jbe
jnp
jmp
lret
mov
push
cmp
leave
std
pop
das
mov
add
call
sti
xlat
lods
mov
ret
ja
or
outsl
dec
ss
mov
add
ds
pushf
mov
js
aas
lea
scas
lods
and
add
push
mov
popf
lahf
sbb
or
push
mov
sbb
je
jg
push
xor
mov
fwait
dec
cs
sarb
cwtl
sbb
movsb
cmc
dec
fs
mov
jecxz
push
push
pop
mov
dec
fstl
lahf
cmpsb
push
lods
rorl
adc
adc
jl
xchg
jecxz
push
sbb
aad
sub
rolb
fsubl
add
andl
ds
xchg
fbstp
cmp
cmpsl
jge
cmc
popf
push
cmpsb
fidivs
adc
sbb
adc
ret
adc
mov
jnp
xchg
inc
jle
lods
xchg
xor
or
or
mov
jbe
mov
pop
lock
and
push
adc
rcr
pop
mov
pusha
push
dec
push
loope
das
inc
aam
fnstsw
int3
or
sahf
mov
loop
jnp
inc
test
fcoms
xor
mov
sahf
out
out
mov
mov
mov
ss
rorb
movsb
xor
mov
and
cli
cli
sub
fldenv
out
js
xlat
lcall
fsubs
ds
mov
dec
xchg
pushf
dec
jg
dec
mov
int3
int
fs
adcl
mov
sbb
push
jbe
mov
shrl
xchg
pop
popf
jno
or
daa
test
mov
mov
data16
sbb
add
mov
int3
out
sub
lahf
adcl
push
stc
add
and
lcall
xchg
jb
mov
rcrl
inc
hlt
add
adc
ja
in
jnp
sub
cwtl
into
leave
rol
xchg
xchg
icebp
sbb
insb
adc
xor
mov
inc
aad
add
push
cmp
jns
aaa
dec
or
dec
negb
adc
adc
jmp
jb
ficomps
and
sbb
mov
pusha
pop
jne
ljmp
jne
dec
out
mov
push
mov
push
scas
ret
pop
fwait
dec
daa
jmp
movl
or
daa
jecxz
mov
cltd
mov
enter
gs
in
push
bound
loope
mov
sahf
gs
mov
mov
jnp
mov
es
pop
jb
mov
dec
js
and
mov
pushl
bound
mov
pop
dec
fnstenv
in
test
aas
out
dec
ds
arpl
scas
jmp
push
mov
inc
stos
stos
out
out
outsb
xchg
enter
sub
lea
je
jcxz
adc
in
loopne
sub
xor
xchg
add
pop
push
add
push
xlat
imul
nop
jmp
mov
or
inc
inc
out
cltd
mov
jl
jae
cmp
jmp
cltd
movsl
aas
jge
and
xchg
mov
xor
out
pop
jnp
pop
cmpsl
sbb
adc
or
lock
jle
fsubrs
cwtl
idiv
jle
cltd
data16
fnsave
xchg
sub
leave
add
rcl
push
push
or
mov
add
cmp
push
outsl
dec
bound
sub
jo
repnz
bound
add
loope
gs
arpl
insb
jmp
mov
push
adc
aam
jb
push
dec
sub
js
push
add
xchg
lea
in
nop
fnstcw
rclb
ret
mov
bound
stos
cmp
loopne
jns
mov
mov
outsb
pop
add
decl
cmp
imul
xorl
and
fisubrs
arpl
aas
sti
int
and
mov
jl
sbb
cmp
fstl
fcoml
sti
add
xchg
jmp
insb
movsl
lods
push
mov
push
mov
jmp
push
ja
mov
jae
lds
jns
ds
ja
lret
mov
lods
lret
mov
pop
inc
add
sbb
push
fistl
gs
lcall
mov
pop
xchg
jp
ret
adc
ja
or
push
push
insb
xor
in
or
xchg
mov
adc
aas
addr16
enter
popa
aas
pop
push
popf
js
fsubrp
fwait
cmp
shlb
popf
sbb
stos
dec
jmp
andb
not
adc
xchg
adc
jno
data16
aaa
jl
daa
fildl
jl
repnz
les
mov
pop
aad
xchg
loope
mov
out
pop
jp
push
ds
push
es
js
or
bound
and
int3
les
imul
aas
mov
dec
xchg
ljmp
pop
jle
fstpt
xor
mov
andb
ss
sub
push
pop
push
dec
sub
jmp
sub
jae
aam
cmp
push
call
push
insl
mov
pop
push
int3
mov
insl
inc
loop
cmp
cmpl
sbb
cmpsl
xchg
out
sbb
push
pop
xchg
pop
outsb
stos
out
inc
test
jns
fbld
jecxz
xlat
inc
mov
divb
pop
sti
repnz
jns
out
cwtl
inc
mov
lods
xlat
xchg
cmp
xor
inc
je
popa
add
pop
push
pusha
mov
xchg
aaa
insb
xchg
xor
dec
std
cmp
push
pop
xor
arpl
call
movsb
scas
dec
dec
pcmpeqb
pusha
aad
adc
inc
movsl
test
loopne
xlat
ror
mov
mov
cmp
shrb
jae
rclb
xchg
xchg
fs
into
js
cmp
popf
dec
in
fcmovne
pushl
add
cmpsl
cmpsb
mov
scas
mov
ficompl
gs
sahf
adc
les
xor
mov
dec
dec
leave
xor
lcall
clc
push
add
popf
das
xchg
ficoms
cwtl
fimull
fidivs
mov
shr
mov
mov
fwait
mov
sub
sbb
jecxz
aad
enter
pop
fdivl
jns
mov
xchg
gs
cmp
or
test
inc
dec
push
xor
jbe
out
and
or
xor
pop
sahf
add
addr16
xor
fisttpll
mov
xchg
mov
cmp
in
and
fisttps
lods
lcall
notb
pop
dec
inc
nop
fistpll
aam
xchg
pop
fisubl
repz
sub
push
rorb
lret
or
pusha
sbb
pop
cmp
lea
or
mov
repnz
mov
mov
pop
jmp
test
decl
pop
adc
loop
loop
in
xor
clc
add
mov
lds
imul
mov
or
push
dec
sub
out
ret
mov
addr16
outsl
dec
xchg
dec
inc
ss
and
push
add
jae
out
pusha
imul
bnd
sub
jecxz
jmp
cmp
lods
insl
jle
mov
mov
pop
sbb
inc
mov
jns
push
fistl
setle
shll
lods
inc
pop
xchg
in
popl
and
mov
rorl
pop
inc
xchg
popf
imul
or
mov
andb
xor
jne
icebp
mov
sbb
add
les
inc
in
ljmp
add
pushf
ret
pop
in
addr16
loope
mov
mov
les
sub
andl
addb
fimull
inc
mulb
cmpsb
icebp
cmc
mov
mov
je
push
push
cmpsb
dec
nop
sti
mov
and
mov
jo
jmp
push
loopne
test
sbb
cmpsl
icebp
jge
in
outsb
pusha
push
pop
je
fwait
hlt
fs
ljmp
and
push
shll
insl
pop
jb
pop
xor
jl
cmp
dec
es
aaa
pop
adc
or
sbb
sbb
in
sub
mov
add
push
gs
or
add
mov
add
xchg
sti
je
mov
fisttpll
test
js
xor
outsl
cmp
inc
aaa
dec
insb
and
jnp
cmpb
mov
negb
pop
and
mov
clc
lea
inc
jle
add
dec
adc
jns
icebp
lcall
pop
push
jo
jmp
jl
pop
enter
cmpsb
fcoml
lret
divl
mov
loope
xorl
jp
cld
jp
mov
ror
mov
or
ficomps
stos
sbb
popa
loope
jo
inc
fidivs
jae
pop
push
xchg
cmp
test
pop
in
fcom
stc
pop
adc
aas
xor
sbb
dec
sub
jecxz
mov
push
inc
push
cmp
jle
sbb
std
fiaddl
dec
std
inc
std
int3
pop
mov
arpl
fdivs
xchg
mov
pusha
pusha
pop
das
inc
and
jo
inc
shll
sti
add
nop
pusha
dec
push
or
add
jnp
push
iret
cld
pop
clc
stc
push
mov
mov
jae
xor
insb
pop
or
adc
testl
out
loopne,pn
sbb
lock
ret
mov
roll
mov
stos
jne
inc
jne
in
xchg
das
enter
xlat
es
jne
stc
pop
and
add
addl
mov
xchg
mov
aad
ss
jp
rcll
fsubs
mov
mov
je
jno
pop
out
sbb
scas
add
mov
adc
inc
iret
push
push
shll
xor
movsl
hlt
shll
int3
imul
in
or
stos
adc
popf
jb
cmpsb
inc
imulb
clc
pop
add
and
xchg
lcall
test
std
push
xchg
std
adc
into
jnp
inc
aad
out
in
addr16
fimull
dec
out
push
out
lret
fwait
dec
add
shrb
xor
fstl
loopne
idivl
cmpsl
data16
cmpl
xchg
pop
push
inc
xchg
sbb
insl
sti
push
cmp
mov
pop
cmp
out
imul
mov
xchg
xchg
stos
sub
pushf
add
or
hlt
pop
inc
cld
aad
or
popf
dec
in
test
fmull
mov
xchg
pop
sub
mov
sbb
dec
xor
icebp
xchg
mov
cmp
push
ficoml
mov
js
mov
and
push
rclb
push
mov
push
aam
sub
inc
and
shlb
mov
rcr
imul
nop
idiv
lahf
inc
in
mov
mov
mov
pop
add
mov
mov
adc
xor
mov
lods
or
xlat
cld
adc
cltd
das
sti
test
xor
pop
inc
jl
push
add
sbb
cmc
and
lret
orb
pop
pop
fnstsw
pop
ficoms
hlt
mov
dec
cwtl
sahf
test
cli
adc
popa
jno
lock
lods
bt
mov
sub
mov
inc
adc
add
add
xor
dec
mov
pop
lock
xchg
push
into
inc
mov
std
je
push
dec
add
pusha
loopne
clc
popf
pop
lret
out
xor
mov
push
js
imul
or
into
jge
repz
mov
and
test
clc
mov
repz
xor
inc
in
out
cmp
mov
push
push
into
adc
push
aas
pusha
std
out
mov
test
ljmp
je
pop
jo
pop
pop
das
or
insl
adc
sti
adc
mov
sbb
lret
std
push
loop
test
cmc
jae
dec
sti
sub
cwtl
loopne
xor
dec
fistpl
shll
mov
and
es
in
mov
fsubp
dec
dec
sub
fnop
push
mov
insl
fadd
push
movsl
xor
mov
rcrb
fcompl
rorl
addb
cmc
mov
jae
push
loope
sahf
pop
push
or
test
loopne
push
cmc
jmp
jge
mov
lret
mov
dec
mov
es
cmp
push
fists
sbb
lods
stc
imul
adcb
jmp
call
mov
jge
in
hlt
mov
add
dec
ret
mov
xor
mov
jb
test
jo
jne
cwtl
mov
xor
movsl
imul
mov
and
cmpsl
cmpsb
mov
aas
popl
push
mov
xchg
jmp
shlb
cmp
in
lcall
and
mov
mov
dec
leave
or
cltd
push
mov
jno
or
shrb
jge
in
mov
aam
xchg
pop
or
pop
inc
jmp
push
popf
adc
or
rcll
data16
cwtl
aaa
pop
sbb
push
push
int
imul
dec
cmpsb
dec
dec
xchg
out
push
jge
iret
int
es
or
mov
sbb
jmp
push
bound
cmp
and
imul
jnp
sbb
jne
jp
add
sbb
loop
adc
pusha
insb
pop
add
jge
add
enter
cmpb
fnstsw
jmp
lahf
add
and
xchg
cmpb
js
push
pop
push
cmp
into
push
pushf
mov
in
push
sbb
and
stos
cmp
lock
adc
idiv
int
cmp
je
test
pop
or
lock
and
hlt
das
loopne
xchg
movsb
inc
in
mov
sub
addr16
push
inc
xor
dec
mov
sub
out
push
jno
fwait
pusha
cmpsb
aaa
or
dec
shll
fcomps
ss
ss
scas
in
aas
stos
or
in
sub
out
inc
cmp
and
cmpsl
cmpsl
pushf
loop
push
leave
jno
mov
imul
out
sub
mov
jg
sahf
or
int3
out
aad
stos
call
cmp
sub
in
xchg
pop
hlt
xchg
pop
mov
xchg
pusha
pop
imul
dec
loope,pn
inc
pop
lods
dec
ret
push
sbb
jle
je
sahf
cld
cs
test
jmp
nop
scas
leave
sti
pusha
cmp
je
jns
mov
sahf
sbb
pop
je
push
iret
dec
out
and
mov
jae
bound
in
pop
jmp
lea
sub
lea
cmp
mov
adc
std
xor
xchg
inc
and
mov
fistps
insb
pop
in
fsubr
clc
cmp
mov
and
ja
fs
xor
popa
adc
arpl
push
es
fnsave
lea
inc
adc
dec
enter
pop
adc
and
push
ss
add
mov
mov
fstl
push
push
pop
mov
mov
mov
lock
xchg
mov
jp
pop
sub
jno
add
inc
or
stos
xor
popa
stc
std
inc
test
and
sbb
adc
addr16
mov
sub
mov
loop
stos
push
pop
xchg
jl
push
jg
rorb
outsb
cmp
xchg
dec
push
shlb
lods
dec
sahf
aam
xor
fnstcw
dec
inc
scas
push
mov
adc
faddl
xor
inc
leave
cmp
mov
jae
sub
ror
push
leave
jbe
xor
fstl
cmp
push
and
cmpl
les
xchg
xchg
push
sub
inc
sub
mov
xchg
lea
inc
mov
das
cmpb
mov
mov
cmpsl
les
popa
sbb
aad
lock
and
orl
xlat
sub
push
ljmp
mov
or
mov
das
imul
pop
lods
les
sbb
cmpsw
xchg
xchg
ds
mov
or
lds
inc
inc
or
call
and
add
ja
pop
iret
out
repz
divb
pop
inc
or
rol
mov
jb
pop
popl
push
es
add
mov
inc
push
dec
mov
movb
pushl
xchg
jns
dec
imull
sub
dec
repz
xchg
mov
nop
cmc
pop
add
icebp
imul
aad
stos
pushf
rorl
div
mov
xor
popf
sub
xchg
lret
xor
or
stc
ret
test
lock
icebp
xor
or
sub
sub
loopne
sahf
sbb
cs
scas
dec
mov
ret
pop
xchg
mov
push
and
out
jmp
das
lods
adc
out
rcll
ljmp
adc
lret
in
test
ds
adcl
sub
cmp
add
and
jle
es
lahf
stos
add
xchg
sarb
add
jnp
outsl
lcall
leave
pop
mov
sub
jle
mov
jne
sub
adc
dec
inc
mov
dec
insl
inc
in
ss
inc
test
verr
mov
inc
mov
out
mov
xchg
stos
int
in
push
sub
add
xor
into
pop
jbe
adc
add
js
mov
inc
and
mov
push
cmpsl
es
rcl
in
inc
and
pop
fsts
sub
stc
jecxz
xchg
sbbl
gs
inc
das
jbe
repnz
add
or
add
in
sbb
test
and
add
push
mov
and
test
mov
lds
fs
aad
jle
imul
in
mov
sbb
and
inc
adc
ljmp
inc
xchg
mov
dec
xlat
push
mov
and
adc
outsl
jnp
sbb
std
xor
mov
pop
repz
dec
arpl
sub
jns
xchg
xchg
shlb
aaa
jmp
push
sbb
adc
daa
push
pop
mov
fimull
imul
jl
aas
pop
lcall
jb
shrl
xchg
or
and
nop
or
jle
sbb
int3
jge
cmp
hlt
mov
jne
addr16
shlb
lods
dec
into
ficomps
adc
fxch
mulb
cmp
dec
cmp
inc
stos
dec
adc
outsb
in
push
loopne
adc
and
outsb
pop
stos
pop
sub
mov
sbbb
jne
imul
lods
out
and
cs
popa
lock
dec
jmp
fisttpl
xchg
or
lds
dec
cmp
sbb
stos
mov
pushf
test
aam
dec
mov
or
inc
xor
insb
cmp
jp
mov
pop
add
mov
adcb
mov
call
dec
push
mov
cli
lret
cli
clc
mov
xchg
jnp
jl
out
jle
decb
inc
jmp
mov
inc
insl
xor
lcall
shlb
xor
xor
shrl
rcl
popa
mov
movsl
in
sbb
cmp
dec
dec
mov
leave
scas
lret
cmc
sbb
outsl
cmp
sub
ja
data16
loop
in
loop
sbb
data16
iret
and
andb
pop
fisubrs
inc
sbb
shrl
icebp
leave
or
push
outsl
sahf
or
xor
loopne
push
enter
cmpsl
inc
push
xorb
and
push
idivl
lret
pop
lahf
xchg
push
xchg
ret
adc
fcomps
and
pop
fildl
push
xchg
or
jmp
xor
jecxz
jae
sbb
cs
test
sub
shr
shlb
adc
xchg
add
outsl
aaa
loope
xchg
mov
inc
data16
mov
call
out
movsl
cmp
pop
sti
push
mov
fcmove
out
fldl
in
jo
push
adc
adc
push
pop
inc
addr16
mov
inc
or
inc
mov
popf
popa
xor
cld
mov
hlt
cmp
and
jp
es
cwtl
jnp
ret
mov
adc
fidivrl
pushf
out
sbb
push
notb
insl
iret
add
mov
jns
das
int3
jae
sub
adc
loop
lea
jmp
pushw
scas
mov
push
lret
loope
aam
das
push
insl
mov
or
jecxz
pop
into
scas
inc
ret
and
add
dec
jo
pop
lds
jge
in
insb
into
bound
stos
push
jne
sub
jge
das
mov
js
mov
mov
scas
jno
sbb
cmp
pop
mov
xor
xor
mov
pop
bound
pop
sbb
push
sbb
mulb
xchg
mov
arpl
sbb
mov
mov
add
jb
cmc
cmp
enter
aaa
add
lcall
xchg
lea
repnz
loop
mov
pop
add
popa
mov
xor
mov
sbb
mov
loop
popf
es
pop
xor
jne
in
fs
leave
adc
lods
je
mov
mov
in
mov
pop
jo
sbb
jb
mov
pop
or
aad
xchg
jnp
cmp
jae
loop
insl
mov
push
xchg
and
addr16
and
leave
aas
ja
pusha
pop
incl
pop
mov
in
xchg
dec
scas
outsb
push
push
pushl
bound
les
rorl
sbb
mov
pop
dec
inc
mov
repz
push
mov
xchg
daa
shll
pop
rorl
int3
mov
sbb
je
cltd
sbb
mov
jle
stos
and
sbb
popf
out
int
loopne
inc
cs
repz
mov
iret
add
out
cmp
mov
imul
mov
adc
mov
jge
ret
sbb
add
mov
lea
lcall
jecxz
cmc
dec
xchg
add
leave
dec
out
mov
cmp
call
inc
xchg
jne
nop
int
lahf
mov
mov
xchg
jbe
push
jbe
adc
adc
xor
push
cmpl
push
and
mov
or
test
stos
cs
test
cmp
int3
test
addr16
popl
repz
fwait
imul
cld
jno
jne
mov
out
add
and
std
jp
fadd
sub
mov
mov
shrb
xor
xor
cmpsb
inc
mov
rcll
ret
push
ret
adc
fwait
mov
push
push
add
popa
dec
daa
call
subb
into
cmp
add
cltd
ljmp
lret
sarb
out
mov
jns
inc
imul
sub
jge
inc
aad
lcall
testl
and
cmp
jno
xchg
mov
cmpsl
out
je
adc
cmp
add
xchg
loopne
cmp
fcmovu
and
les
ret
fxch
adc
lret
inc
addl
jne
add
cmp
xor
scas
jg
lods
arpl
xchg
cmp
lahf
int
xchg
inc
movsb
popa
sub
sbb
test
add
outsb
fs
cmp
in
in
fs
pop
nop
pop
pushf
cmp
xchg
inc
daa
cmp
jg
lret
cwtl
fnstcw
cmp
stos
push
sub
mov
adc
adc
sub
out
je
pop
add
and
and
or
ss
aad
push
mov
aam
sub
shrb
rol
mov
lds
cmc
push
push
cmpsb
dec
int
out
les
sub
mov
jg
test
popf
cwtl
jge
es
fiaddl
es
lods
pop
cltd
ja
push
lods
jo
fwait
out
inc
sub
fisubrl
loopne
mov
mov
jae
lahf
loopne
mov
pop
daa
popa
pop
testl
shrb
xchg
outsl
mov
cmc
aaa
lret
push
jno
in
clc
insl
movsb
push
xor
fstps
mov
ja
mov
call
sbb
inc
jmp
out
leave
aas
sbb
jns
xorb
fdivs
cmp
les
push
jnp
loop
jmp
xchg
jg
xlat
inc
mov
adc
mov
loop
jge
mov
icebp
sub
cmp
add
mov
adc
mov
lret
push
addr16
mov
ja
aas
xor
add
add
fdiv
push
stos
push
pop
shlb
cld
mov
sarl
mov
notl
mov
xchg
out
jp
fmull
pop
fcompl
lds
inc
mov
push
fisttps
dec
fisubrs
mov
mov
xor
je
shrl
jne
jmp
sub
lods
ljmp
xlat
pop
call
pop
sub
dec
pop
out
iret
jnp
outsl
das
ret
add
call
dec
jno
sub
loop
adc
and
jl
jns
add
mov
rorl
scas
pop
pop
popf
fs
xchg
cwtl
in
add
mov
popf
js
fldt
xor
cmp
dec
and
hlt
push
inc
jb
dec
xchg
lea
icebp
cmpsb
push
popa
loope
ret
mov
sbb
es
ja
sub
sti
rcrb
xchg
out
pop
sbbl
adc
push
mov
in
xchg
fiaddl
mov
and
dec
pop
or
hlt
ss
mov
das
jbe
adc
inc
arpl
pop
pushf
xchg
cltd
test
or
fdivr
lea
cltd
iret
mov
into
loopne
push
lods
inc
add
outsb
int3
or
leave
or
push
push
test
cmp
mov
fsts
sub
and
mov
pop
test
test
sbb
pop
inc
xchg
push
push
sub
mov
out
or
add
push
es
and
xchg
and
fwait
jl
dec
xchg
adc
popl
push
ret
mov
int
decb
aam
xor
mov
loopne
pop
inc
or
xlat
into
xchg
rcrl
leave
xchg
lret
push
ljmp
into
dec
lea
je
push
idivl
in
mov
mov
and
leave
dec
clc
out
dec
mov
push
gs
loope
cmpsl
lcall
bound
inc
fsubl
inc
arpl
pop
cmp
mov
inc
mov
sbb
xchg
imul
mov
es
cmpsl
leave
adc
jge
or
negb
stc
jb
jecxz
and
aas
repz
and
sbb
aam
mov
outsl
imul
push
mov
and
jb
mov
lea
jg
jb
xchg
lret
pop
inc
das
or
jmp
dec
test
push
xor
iret
std
jmp
in
shll
cmpsb
addr16
sti
test
out
push
jo
inc
add
mov
jne
pcmpeqb
add
test
int
jbe
aam
mov
sub
add
andb
dec
out
pop
and
add
lods
mov
xchg
stos
jmp
mov
pop
jmp
inc
insb
mov
xlat
mov
outsb
mov
inc
fldenv
mov
jl
out
fcomps
xor
sub
inc
repnz
adc
repnz
daa
jle
popl
lret
ljmp
pop
xor
mov
ret
sbb
push
les
in
outsb
adc
jmp
push
sub
push
xchg
push
jno
and
das
adc
adc
push
and
jbe
pop
sbb
mov
shll
es
add
stos
sbb
rcrl
scas
je
fwait
cmp
xor
mov
sti
mov
adc
leave
sub
or
jge
add
lahf
cmpsl
out
lret
sbb
push
call
fisttpl
add
add
cmpsl
sbb
int
in
jmp
add
sti
jnp
pop
repz
test
pop
push
imul
ja
or
pop
mov
clc
cmp
stc
jecxz
mov
fsubs
aam
lods
insb
xchg
pop
nop
addr16
ds
xorl
fwait
nop
insb
xchg
loopne
inc
and
jecxz
jns
adc
cwtl
and
pop
jno
push
loope
inc
cli
pop
lret
dec
push
cmp
dec
sbb
aam
cmpsb
jg
out
pshufw
push
xor
inc
ss
ja
movsb
or
dec
shl
cmp
or
mov
or
arpl
out
outsb
dec
sbb
lea
shrb
push
pop
push
test
cmpsl
jle
push
popa
and
mov
aas
push
mov
jnp
scas
sarl
jbe
inc
mov
cmp
data16
call
cmc
mov
movsb
mov
pop
sbb
pop
lcall
aaa
cmovb
inc
and
dec
push
lods
cmp
cmp
adc
stos
jp
repnz
mov
aam
sbb
stos
xchg
or
dec
adc
jnp
push
fs
dec
mov
pop
inc
jg
mov
cltd
xor
pop
jle
cmpsb
sbb
add
mov
pop
fstl
lahf
and
and
std
dec
outsl
mov
ljmp
jnp
push
sub
int
mov
test
cmp
mov
mov
jecxz
xchg
int3
popf
xchg
fdivrl
movsb
and
mov
cmpsl
call
ret
hlt
pop
pop
inc
mov
xchg
loope
out
push
ss
fsubrs
push
ret
sub
jle
mov
dec
xchg
adc
add
sub
pop
inc
lahf
lock
jb
adc
jmp
fstl
popa
sub
push
xlat
dec
out
or
add
xchg
negb
xchg
inc
push
cmp
es
push
ja
mov
sahf
cmp
pop
mov
adc
mov
jo
push
test
fistpll
iret
dec
sahf
lahf
jecxz
and
aas
notb
push
imul
sbb
int
pop
clc
idiv
icebp
sahf
or
pushf
lret
xchg
ljmp
xor
mov
dec
addr16
cwtl
test
lock
lretw
aam
or
and
in
xor
in
xor
test
xchg
cltd
and
mov
mov
out
xor
subb
punpckldq
cld
movsl
icebp
dec
imul
cli
insl
bound
cmc
movsb
sub
pop
test
lods
add
push
sbb
test
mov
mov
xor
pop
jg
sub
adc
jp
add
xchg
jmp
out
imul
adc
cmpsb
push
mov
test
inc
movsl
add
testl
sbb
dec
inc
dec
faddp
into
shl
add
or
lahf
pop
call
push
pop
push
pop
mov
lods
cmc
out
add
mov
out
cwtl
adc
imul
xor
mov
sahf
mov
stc
xchg
cmp
jge
mov
lock
inc
pop
mov
ret
test
gs
or
cld
in
pushf
aam
in
inc
inc
repnz
cmp
iret
enter
jae
mov
xchg
xchg
lods
dec
loop
ljmp
sub
inc
mov
pop
arpl
jecxz
icebp
ljmp
cs
pop
xor
mov
insb
or
add
dec
jmp
xchg
aad
cmp
jle
and
mov
shll
inc
lock
mov
jbe
js
push
test
aad
cmc
or
mov
adc
pop
imul
ja
jb
dec
push
pop
add
jle
enter
out
stc
fwait
aad
std
mov
lcall
lahf
in
pop
scas
addr16
loopne
scas
cmpsl
ret
xchg
inc
push
scas
mov
cli
mov
test
xchg
mov
pushf
mov
es
jmp
loop
and
je
inc
sub
jmp
aam
pop
jbe
je
push
adc
cmpsl
or
stc
fwait
out
leave
iret
fs
cmpsb
mov
cmp
sbbl
movsl
cmpsb
add
sbb
out
lcall
mov
jo
mov
and
int
fldcw
les
inc
popa
jle
inc
loope
fwait
loop
jae
test
out
cld
mov
lret
adc
lret
inc
lods
xchg
or
cmpsl
push
cmpsl
mov
jg
pop
sub
outsb
int3
adcl
arpl
xchg
sbb
mov
xor
xchg
es
dec
mov
jmp
pop
or
xchg
ds
insb
push
shrl
adc
imul
xor
pop
and
aam
push
fstps
lret
fstpt
push
pop
repnz
sbb
cwtl
ljmp
sbb
int3
vdivsd
insl
mov
dec
stc
lcall
aad
push
jne
cmp
pusha
test
sahf
or
mov
enter
cmp
addl
xchg
cmp
aaa
jmp
mov
and
adc
xlat
xchg
xlat
xchg
scas
adc
mov
sub
repnz
ss
lock
dec
out
stos
je
or
movsb
lds
andl
out
inc
pop
je
ja
sub
shll
fiaddl
add
imul
xchg
xlat
push
jge
sub
or
pop
mov
in
test
pop
pop
add
push
mov
mov
jnp
adc
leave
cmp
xor
cmp
aam
cs
loope
cmpl
xchg
jmp
lds
mov
sbb
xor
aaa
jmp
sub
cmpsb
add
iret
fidivrl
ds
sarl
sub
aad
ds
into
cli
mov
decl
xchg
adc
add
mov
and
out
cmovbe
pop
clc
mov
push
cmp
jp
xor
mov
jns
ficompl
loopne
lret
test
faddp
adc
add
hlt
adc
mov
push
or
xchg
rcll
inc
cmp
rcrb
jb
in
mov
inc
cld
enter
negb
add
push
out
scas
sub
add
cltd
mov
cs
xchg
fcmovnb
pop
or
cli
pop
add
lea
fldcw
fisttpl
fs
sti
cwtl
shr
and
jg
cmpsl
or
adc
push
popf
mov
push
push
into
dec
adc
jmp
cmp
ror
dec
mov
dec
adc
inc
into
fdivr
pusha
mov
inc
cmpsb
pop
clc
sbb
adc
mov
mov
push
sti
inc
out
adc
pop
xor
mull
rcr
mov
in
mov
cmpsb
mov
pop
sti
sub
xchg
stos
or
jge
push
insb
std
in
xchg
idivb
xchg
ret
xlat
xlat
movsl
movsl
sti
sub
sbb
add
mov
mov
jo
sbb
jae
dec
jmp
dec
gs
jle
xchg
int3
popa
fmuls
cwtl
sub
outsb
pop
push
dec
xchg
shl
pop
aaa
and
or
ret
and
dec
icebp
adc
adc
jae
in
inc
inc
scas
sbb
xchg
in
and
aas
cmpl
inc
sub
mov
decl
sub
jmp
jb
data16
cwtl
sarb
int
popa
hlt
xor
xchg
ljmp
add
xchg
fists
pop
mov
dec
xlat
push
mov
out
dec
add
icebp
add
pusha
cmp
repz
mov
repnz
inc
clc
pop
or
mov
push
rcll
lods
hlt
xchg
leave
out
es
addr16
fistpl
sub
sbb
or
pushl
and
sbb
pop
iret
sbb
push
add
movsl
mov
sub
and
dec
jb
rcrl
xchg
nop
pavgw
push
pop
popf
lret
cmc
testl
loopne
adc
aaa
das
dec
fstp
add
mov
mov
int3
sti
loop
xor
sbb
sub
lahf
cmpsb
xlat
ficoml
mov
inc
mov
xor
jecxz
push
inc
adc
xor
ss
mov
cmc
jmp
insb
aam
insb
dec
insb
mov
adc
dec
fwait
inc
cmpsb
popa
and
add
pop
jp
lock
mov
stos
cmp
inc
mov
sbb
cmpl
bnd
popa
add
pop
fidivl
xor
and
or
pop
ja
movsb
push
adc
push
daa
outsb
fxch
mov
pop
inc
xor
fisubs
stc
xor
dec
jns
cmc
push
pop
jbe
aas
in
xchg
xor
les
leave
lahf
fsubl
push
popf
jle
clc
ficoms
outsl
mov
daa
mov
daa
mov
int3
cmpl
mov
dec
mov
or
mov
ja
movsb
cmp
insb
je
pop
or
adc
add
jl
and
loopne
jbe
fwait
daa
clc
fadds
ret
pop
pushfw
adc
sub
into
cmp
pushf
fcmovnbe
mov
pop
fdivrl
test
ljmp
icebp
movsl
inc
mov
mov
add
rorl
ljmp
je
cmp
mov
jmp
mov
out
adcl
jae
mov
mov
ja
imul
xor
sbb
jb
aas
scas
adc
adc
bound
std
mov
outsl
pop
push
imul
into
push
sti
insb
jb
stc
fnstcw
std
xchg
sbb
and
int
inc
movsb
cmp
je
and
jae
lods
bound
xchg
add
in
daa
cmp
sbb
repnz
pop
popf
js
push
and
xor
xchg
or
scas
jl
mov
mov
mov
test
rcll
push
dec
out
dec
mov
or
cmp
outsl
das
add
rorl
sbb
inc
cmp
inc
scas
pop
shl
clc
pop
cmp
js
inc
in
loope
xchg
xchg
jns
jnp
repz
idiv
sub
out
mov
mov
pop
xor
test
int
mov
loope
in
mov
cmp
negb
fnstcw
stc
cs
mov
shl
hlt
jmp
ljmp
orb
cli
inc
movsb
pop
out
add
push
push
xchg
daa
push
popa
xchg
inc
mov
lds
jb
adc
lock
xor
cmp
pop
and
sbb
add
xlat
aad
jae
cmpsl
dec
movsb
test
ret
mov
movsb
lods
and
cmpsb
adc
push
sub
lds
sub
jo
aaa
sahf
or
jns
addr16
stos
lcall
cmp
mov
movsl
ds
fwait
mov
sar
jno
clc
aas
add
adc
mov
les
lret
mov
rorl
ss
aaa
dec
add
lods
shlb
bound
in
cltd
mov
add
out
cli
inc
mov
out
int
xor
mov
aas
pop
pop
mov
mov
lret
incl
daa
xor
jg
in
dec
jo
and
push
inc
repnz
jmp
lods
xchg
test
jle
dec
adc
mov
inc
or
push
lods
mov
push
outsb
inc
lods
nop
jle
lds
das
jecxz
daa
paddusw
jo
cld
push
cmc
sahf
and
repz
das
cmp
push
test
and
mov
cwtl
subb
stos
and
into
inc
jecxz
or
or
mov
data16
pop
or
or
mov
imul
lods
and
jmp
out
mov
adc
lea
xor
jmp
sti
rolb
cltd
in
bound
xchg
sub
stc
fcompl
and
xlat
dec
lock
push
cmpsb
add
mov
dec
xorb
jle
or
std
dec
mov
mov
xchg
push
push
sub
jns
xor
and
or
mov
push
adc
and
adc
loop
mov
int3
in
test
icebp
popa
or
ret
rcrb
fsts
and
rolb
pop
xor
std
aad
fiadds
inc
sti
inc
jmp
inc
scas
adc
lods
dec
sbb
shlb
or
cmp
pusha
pusha
mov
repz
cwtl
cs
dec
inc
pop
ja
jmp
sbbb
icebp
and
cli
inc
push
cmp
mov
into
cmc
cmc
dec
scas
mov
mov
hlt
aad
sarl
stc
dec
insl
pop
ficoml
es
xchg
and
arpl
lods
push
jnp
iret
mov
cmp
divb
sub
dec
push
movsl
sub
out
jae
mov
pop
xchg
clc
ret
lret
xor
js
pop
lret
adc
push
sbb
jns
cmp
add
lcall
lcall
mov
in
lods
and
int3
jmp
dec
mov
and
outsl
mov
std
dec
add
push
cmpsb
arpl
sub
adcl
mov
mov
mov
push
cmp
cmpl
xchg
loop
hlt
mov
pop
cmp
psubb
or
add
cmc
sbb
dec
pop
sbb
test
addl
lret
or
out
loope
push
pushf
divl
cld
inc
loopne
outsb
cmp
ret
mov
inc
inc
jmp
adc
clc
shl
push
fiaddl
sahf
xor
adc
call
shll
adc
mov
and
pop
and
xlat
and
nop
iret
jno
jne
out
jo
mov
pop
sbb
cmp
sbb
xchg
iret
aaa
add
mov
rclb
leave
pop
adc
xchg
hlt
mov
adcl
cmc
or
dec
int3
xchg
fimuls
iret
fs
xchg
or
adc
sti
push
lahf
mov
imull
lret
cwtl
nop
mov
outsb
lret
push
roll
adc
daa
xchg
cmc
insb
mov
adc
xchg
inc
pop
cmpsb
mov
jp
testl
insl
dec
hlt
ds
aaa
push
xchg
aas
cmpsb
inc
je
pop
dec
push
insl
fisubs
xchg
sbbl
popf
fwait
stos
rcrb
jns
lret
stc
test
cmpsb
int3
lds
daa
movsl
outsl
jb
aaa
loopne
jg
ja
cmp
push
test
lcall
jl
fwait
jns
mov
std
add
scas
push
mov
dec
or
out
out
lret
cmp
fsin
cmp
sub
neg
test
xchg
pop
xchg
push
icebp
rcrl
clc
mov
push
pop
in
pop
in
adc
jb
adc
loopne
sbb
and
or
fmull
lods
or
cmpsl
inc
in
push
fs
aas
fsubr
add
ja
mov
out
scas
inc
dec
fs
inc
dec
dec
add
es
mov
jge
les
push
sbb
loop
sub
in
mov
or
fldenv
insb
js
imul
adc
data16
aad
stos
or
sub
pop
daa
loop
push
mov
push
int3
cmp
fstps
inc
and
add
test
adc
mov
mov
repnz
mov
add
pop
add
pop
sbb
add
xchg
mov
and
and
jge
mov
dec
sbb
enter
cmp
pushf
loope
xor
fisttps
lret
jl
into
or
fdiv
in
xchg
push
int
movsb
push
aad
jg
and
stc
aad
mov
mov
imul
xchg
lods
inc
arpl
mov
fwait
aas
loop
add
sbb
out
dec
shlb
iret
mov
ds
adc
insl
adc
and
and
idiv
inc
push
fsub
push
stos
xchg
fstps
xor
and
jb
mov
in
cmpsb
mov
loope
fstps
cmp
loop
cwtl
push
scas
test
cmp
sub
int3
mov
sbb
cmp
jecxz
les
push
insb
stos
lds
xchg
andb
orb
jnp
mov
sbb
xor
iret
xor
push
xchg
mov
mov
dec
jp
ja
sub
jno
push
mov
or
mov
lods
cmpb
and
dec
or
push
mov
test
negb
orl
mov
sbb
push
imul
dec
mov
call
pop
sub
cwtl
mov
cmp
cmp
test
sbb
loop
cmpl
sbb
shl
pop
add
jno
jo
sbb
lahf
jb
test
adc
or
lret
mov
negb
xor
subb
jbe
push
arpl
mov
jecxz
pop
inc
mov
outsl
add
or
shll
adc
and
push
loope
pop
aaa
adc
lret
sub
decl
test
jbe
mov
mul
and
cmp
jg
stos
hlt
aam
adc
mov
mov
ret
addr16
add
xchg
rolb
or
fs
xor
mov
mov
cmp
pop
test
jne
into
out
nop
pop
push
in
out
in
dec
aaa
pop
lcall
pop
jnp
mov
cmp
mov
orl
dec
mov
pop
mov
test
mov
pop
sub
inc
fcmovnb
pop
scas
xchg
mov
pop
in
push
mov
ja
mov
dec
js
jecxz
pop
or
lcall
mov
or
ficompl
push
add
aad
mov
pop
mov
mov
and
pop
lret
and
scas
sub
sbb
push
mov
insb
dec
mov
vmovdqu
and
pop
sub
das
int
popf
add
mov
mov
dec
ficoms
add
mov
test
gs
jmp
fidivl
push
xor
lret
add
shll
or
fmulp
add
popa
loope
lahf
mov
xor
pop
or
lret
xchg
mov
ja
addr16
insl
and
mov
lahf
sti
fdivrl
jo
int3
xlat
mov
mov
lods
sahf
cmp
into
xchg
mov
je
cmp
dec
popa
cmp
hlt
repnz
nop
in
and
sahf
subl
push
fwait
in
mov
in
adc
stos
inc
std
cmp
jecxz
mov
imul
mov
out
jp
sub
rclb
or
xchg
inc
faddl
jb
ljmp
adc
ljmp
xchg
lds
inc
jno
cmp
jo
xchg
mov
icebp
cmp
mov
fs
je
fwait
and
pop
into
mov
adc
xor
insb
mov
out
ljmp
inc
pop
pop
dec
test
and
push
popf
mov
push
iret
xchg
add
addr16
xor
push
cld
fcoms
mov
in
stos
pop
xchg
mov
les
orb
das
sarl
daa
out
popa
les
mov
popa
outsl
mov
outsb
fs
gs
mov
shr
ret
shrb
mov
add
fsubrl
mov
lock
cli
sbb
add
mov
push
mov
push
je
cmp
stc
add
xor
pop
lock
jp
sbb
fwait
adc
mov
call
negl
xlat
enter
or
xchg
fsts
lcall
mov
pop
call
and
repnz
sbb
aas
inc
scas
stos
xor
pusha
xchg
jns
ja
fs
sbb
mov
cld
jmp
push
imul
addr16
inc
rcrl
xchg
insl
sub
cmp
mov
xchg
lret
sub
pushf
pusha
cmpsb
mov
pop
xchg
pop
jmp
test
push
pop
rcr
je
inc
lds
bound
test
rcl
add
xchg
dec
mov
jb
test
xchg
mov
xchg
lret
dec
popf
mov
shll
push
insb
add
mov
pop
push
or
imul
xor
rcrl
lret
roll
push
mov
mov
hlt
fadds
pop
cmp
xchg
jecxz
xor
cmp
cmp
xor
jns
inc
out
into
dec
ret
sarl
or
jno
test
loop
add
mov
jg
push
aam
idivb
inc
pop
ds
jl
data16
imul
and
xor
adc
lea
lret
adc
fistpll
hlt
jp
out
jg
lods
cmp
mov
mov
sbb
push
cmp
jne
xlat
jg
pushf
push
cmp
or
not
shrl
xor
and
pop
xchg
mov
mov
jl
add
nop
pusha
jbe
stos
mov
addr16
test
push
shll
and
int
shll
in
jns
das
mov
sub
mov
std
push
sbb
js
adc
bound
and
add
hlt
cld
jns
push
lods
sub
out
shrl
and
mov
push
lahf
mov
cmp
xor
mov
xorl
jns
lods
test
dec
pop
mov
mov
sbb
in
lods
outsb
sarb
insb
call
pop
mov
push
xchg
fmulp
cld
ret
fadd
and
fsubrl
in
sbb
fnstsw
pop
fcmovb
adc
lret
outsb
add
inc
xchg
inc
adc
xchg
repz
sahf
insl
data16
push
sahf
sahf
int
popa
jno
shll
inc
icebp
mov
arpl
cmp
leave
inc
jge
lret
inc
add
and
jmp
into
mov
ja
das
lock
sbb
ss
lods
jg
fcmovnbe
dec
call
cmp
inc
push
aad
dec
pop
push
xchg
dec
dec
test
es
dec
sub
pop
inc
mov
mov
sub
cmpl
jp
jmp
aas
sbb
fs
fwait
daa
mov
in
orl
sti
ret
hlt
fbld
push
loope
adc
sub
or
push
outsl
cwtl
rcrl
mov
mov
mov
xchg
lahf
sub
std
add
mov
jbe
enter
cmp
mov
jp
std
daa
or
xchg
cli
cmpsb
xchg
imul
insb
adc
mov
sar
icebp
xor
test
lods
or
scas
movsl
and
icebp
jl
cmp
sub
inc
addr16
push
push
or
clc
push
lock
pop
lods
pop
stos
in
es
ss
inc
or
js
mov
testl
or
jo
dec
mov
and
jmp
cwtl
test
dec
push
adc
shrl
mov
enter
jmp
or
rclb
sar
mov
repnz
into
mov
pop
cmp
xchg
lret
and
cld
or
mov
cmp
xor
sub
or
cs
cmc
xor
xchg
loope
jmp
cwtl
mov
or
arpl
addr16
gs
cmp
lret
stos
jp
insb
dec
xchg
aaa
cmp
jl
cmp
cmpsl
dec
in
hlt
das
enter
xchg
out
dec
lea
mov
lcall
xchg
push
sahf
xor
test
add
out
push
inc
outsl
pop
repnz
fdivp
add
sub
dec
ret
jae
jle
cmp
inc
fcmovne
sahf
mov
test
pop
pop
mov
test
push
cmpsl
fs
push
ss
add
fistpll
rcl
mov
or
lea
adc
lret
repz
xor
movsb
enter
popf
dec
or
push
jns
mov
in
stos
shl
insl
pop
dec
rol
pop
das
leave
cmp
jae
out
imul
push
adc
mov
lock
lret
mov
xor
or
popf
mov
cmpsl
sub
hlt
cmpl
aad
add
xchg
mov
test
movb
push
call
insb
jg
das
mov
mov
das
xchg
daa
pop
jge
lret
aas
mov
out
pop
sbb
mov
cmp
sbb
shlb
mov
sub
push
add
fiaddl
push
mov
and
ret
xchg
inc
rcr
sub
sahf
aas
addr16
iret
popf
out
pushw
rcll
mov
inc
inc
pop
test
in
dec
stc
cli
nop
push
lock
popf
rorb
mov
jne
cmovne
cmp
push
fimuls
sbb
shll
lret
leave
jecxz
sbb
in
sbb
mov
sbb
xchg
jne
push
mov
mov
mov
fcmovnu
mov
xor
jle
addb
mov
adc
aaa
cs
test
and
test
xchg
dec
lods
popf
mov
sbb
ret
mov
lcall
out
stos
add
insb
mov
adc
and
lods
fucomi
fimuls
imulb
xstore-rng
cmpsl
inc
movsl
push
out
mov
scas
int
dec
ret
fistl
or
xor
sub
push
ljmp
mov
push
mov
jl
aas
rcl
jae
pop
mov
xchg
jns
sub
out
sbb
data16
je
jg
jg
mov
aaa
loope
loopne
mov
pop
fstpt
idivl
or
out
inc
cs
outsl
add
fwait
repnz
mov
lock
pop
inc
popf
in
mov
daa
icebp
jno
jb
adc
gs
dec
cs
or
cmp
inc
pop
inc
sbb
push
cmp
test
mov
xchg
push
loope
aam
pushf
stos
or
pop
xor
lods
jmp
push
cmp
inc
popa
xchg
mov
pop
jne
jne
int
or
ret
and
jae
loop
fidivrl
push
dec
ret
and
mov
or
pushf
lock
aad
mov
dec
push
out
sub
gs
bound
mov
xor
adc
dec
mov
shrl
fwait
and
int
movsl
push
xchg
nop
push
fcoml
push
xchg
push
rcrl
ret
das
loopne
dec
dec
jle
fsts
sub
jle
mov
mov
mov
mov
mov
push
fwait
jle
push
ret
fsubl
pop
or
dec
icebp
repnz
xor
cld
in
loop
std
fists
inc
int
frndint
lods
or
sub
cmp
inc
mov
adc
and
test
inc
movb
mov
incb
outsl
xlat
cmp
sbb
xchg
out
inc
jmp
and
and
dec
inc
mov
jo
pop
cltd
sub
fadd
cmpsl
cli
xchg
inc
sbb
repnz
int3
and
xor
adcl
sub
jb
add
gs
dec
or
mov
push
push
or
ret
shl
stc
leave
jae
loopne
loopne
push
sub
and
adc
lret
and
pop
outsb
jle
ss
jmp
movsl
inc
daa
jo
daa
aaa
addr16
lods
jb
adc
push
xor
adc
mov
ss
dec
pop
nop
fcoml
repnz
mov
sbb
imul
cmp
xchg
jmp
shlb
mov
xor
cmpsb
movsb
mov
ret
pop
cmpsb
add
scas
testb
fistpl
jp
adc
mov
mov
add
add
and
add
cmpsl
xlat
mov
ret
fcomi
mov
add
jle
pop
movsl
fsubs
pop
push
mov
lret
mov
cmp
cmp
pop
fsts
das
lods
mov
jg
xchg
cmp
mov
daa
inc
stc
mov
pop
divb
popl
shrb
jne
sub
rorb
sub
fsubrl
and
jp
and
cmp
push
gs
movsb
mov
ret
mov
sti
pop
push
stos
shl
or
fcoms
xor
nop
call
addl
and
cmpsl
subb
pop
fwait
mov
repz
xor
xor
in
test
repnz
iret
outsl
dec
je
mov
pop
pop
test
enter
or
jecxz
sub
push
mov
arpl
mov
in
repnz
fidivrs
and
xor
sbb
ljmp
adc
sub
sti
ret
cmp
in
xchg
lcall
repz
push
loop
jns
cmp
fimuls
mov
lock
cwtl
xchg
lods
sbb
sbb
ds
inc
lret
cmpsb
mov
aad
pushf
bswap
insl
sub
pusha
jbe
sbbl
fsubl
xorl
in
stos
sub
mov
jae
adc
mov
xchg
sub
stos
andl
jbe
add
adcl
jne
ret
lea
cmpb
xor
adc
scas
es
mov
fldl
lret
bound
sub
cmp
mov
cs
sub
xchg
mov
imul
adc
xchg
aas
push
clc
dec
sub
and
push
push
push
subl
mov
adc
add
inc
and
sub
clc
pop
jnp
bound
pop
rclb
mov
jl
jg
inc
out
clc
ds
jp
pop
cmpsb
xchg
imul
or
in
mov
push
ret
adc
mov
loop
jmp
pusha
or
sarb
mov
lds
add
cmp
movsb
fwait
cmpsl
add
aaa
xor
jle
or
fwait
mov
in
shll
insb
and
add
xchg
ficoms
gs
inc
mov
out
adc
es
scas
inc
lret
push
mov
in
popf
push
add
in
jae
sub
fcompl
insb
mov
adc
pop
push
stos
fisttpll
outsl
lahf
cmp
aam
push
mov
sbb
sbb
imul
lds
ja
sbb
loop
jmp
nop
jl
addr16
pop
arpl
es
nop
inc
xor
push
push
add
test
mov
inc
cld
sub
pop
xchg
loop
xchg
lods
repz
jno
mov
je
movsb
pushf
ret
loope
push
mov
sahf
jne
cmp
jle
pop
xchg
mov
test
stos
or
pop
rcll
pop
pop
pusha
dec
add
cmp
dec
push
xchg
lea
add
in
in
dec
pop
test
and
inc
dec
fnstenv
or
xchg
in
or
dec
das
push
lret
addr16
loop
inc
adc
sbb
dec
push
les
add
mov
pushf
stc
jne
loope
gs
cmp
jb
hlt
dec
aad
jb
and
pop
or
sub
dec
jmp
push
ret
daa
mov
push
pusha
mov
mov
add
xchg
rorb
dec
mov
sti
push
lahf
pop
lea
ficoml
in
pop
mov
mov
xchg
dec
mov
dec
inc
gs
sub
lcall
mov
mov
and
stos
lcall
push
lahf
push
outsb
xor
adc
ret
pop
mov
xchg
mov
xchg
faddp
out
jmp
loop
imul
rolb
es
sbb
jl
add
and
ret
pop
lods
test
xor
pop
aas
mov
cmc
cmc
leave
push
repz
addb
aam
cmp
sbb
fisubrs
push
ljmp
cmp
sbb
sub
jle
lods
dec
sbb
jecxz
jo
xor
sbb
add
lods
mov
popl
and
nop
movsl
xor
sub
and
test
test
shrb
out
mov
daa
mov
jb
lods
fs
sub
jp
mov
aaa
sbb
shll
push
jb
push
xchg
es
jg
loope
mov
add
push
scas
sahf
roll
repnz
es
jnp
rolb
lret
and
lret
add
inc
add
in
mov
pop
xlat
into
out
cld
in
addr16
loope
cmpsl
lock
mov
imul
and
xor
dec
push
xchg
jl
jne
loope
popa
subl
jo
cwtl
mov
dec
xchg
cwtl
dec
mov
cld
fdivrs
fiaddl
les
in
cmpsb
lret
mov
sti
mov
dec
adc
test
push
cmp
jecxz
adc
outsl
dec
nop
sub
cs
push
adc
add
hlt
mov
inc
jmp
test
jno
or
je
mov
mov
popf
dec
cmp
mov
int
and
jb
aad
mov
es
jb
add
xchg
sub
push
mov
popf
cs
mov
pop
jno
mov
scas
mov
bound
test
and
and
xor
mov
dec
inc
add
dec
xchg
pop
ds
cmp
or
jmp
mov
fwait
imul
mov
xor
mov
ljmp
scas
mov
cwtl
push
inc
jg
bound
lock
bts
inc
xor
pusha
push
adc
ljmp
scas
mov
add
inc
add
lock
mov
pop
push
addr16
rcl
xchg
adc
mov
rcrb
fcompl
ja
in
lea
xchg
cmc
adc
mov
or
pop
mov
fwait
mov
aad
add
adc
xchg
loope
scas
icebp
pop
loopne
movsb
sub
mov
mov
ret
lods
dec
stos
fildl
cmp
mov
fcompl
xor
xor
cmp
pop
sarb
sbb
mov
xorb
sub
pop
jp
outsb
mov
stos
sbb
es
mov
lods
add
dec
shld
inc
adc
or
add
rclb
push
scas
or
jbe
lret
loopne
ljmp
mov
jb
sti
call
out
push
lods
adc
jnp
loop
cmp
outsb
imul
sbb
lods
ja
lods
ljmp
dec
xor
jbe
insl
sti
fwait
shlb
xchg
jecxz
push
push
lret
lods
rolb
jmp
mov
insb
or
rorb
pop
adc
sub
jp
fwait
repz
test
pop
mov
jnp
sarl
inc
xlat
stos
pop
iret
push
or
adc
outsl
cli
push
push
xor
sahf
and
adc
jle
out
mov
mov
fsts
jl
mov
cltd
gs
repz
stc
rorb
mov
jmp
sub
inc
and
push
dec
mov
enter
gs
push
fnsave
pop
inc
int
mov
xlat
add
das
mov
cmp
add
lret
js
jmp
push
repz
push
cltd
movsl
call
aaa
add
xchg
std
data16
push
in
inc
mov
adc
pop
fdiv
movsb
data16
mov
cmp
rcrb
std
repnz
xor
mov
push
jne
pusha
add
add
jno
xor
repz
ljmp
push
cld
shll
sbb
shl
gs
rcll
mov
mov
pop
xor
mov
aam
xchg
mov
mov
inc
into
xor
pushf
mov
and
sub
add
or
dec
lea
xchg
fstpt
jmp
mov
push
mov
inc
stos
push
lahf
and
fwait
jp
adc
cmp
xchg
repz
push
adc
imul
jge
fbld
nop
mov
sbb
mov
sbb
sbb
inc
data16
sti
mov
or
loope
clc
cmc
pop
cmpsl
cli
inc
xlat
mov
xchg
mov
ljmp
popf
mov
dec
jge
in
dec
dec
lret
xor
repnz
mov
leave
sub
das
inc
lahf
xorl
in
xchg
in
pop
mov
xor
mov
out
mov
out
and
dec
test
sub
push
andb
sub
push
mov
push
cmc
lret
rcll
adc
lcall
cmp
inc
sbb
andl
inc
jo
insb
xchg
xor
add
and
pusha
aaa
jl
js
mov
pop
lods
dec
data16
inc
and
cltd
pushf
add
lock
jno
pushf
sbb
scas
dec
or
cli
les
out
sahf
popf
xor
popf
push
inc
addr16
add
cld
fwait
inc
popf
or
xchg
jmp
or
into
fwait
in
add
push
and
mov
jae
mov
fs
sbb
int3
call
cmp
add
mov
push
jbe
arpl
pop
sti
das
xor
mov
lea
pcmpeqw
push
iret
jo
cmpsb
es
clc
adc
aas
addl
lret
sub
dec
test
cltd
hlt
ljmp
cmp
ror
jns
sti
icebp
dec
out
pushf
call
mov
adc
jg
popf
cmpsl
hlt
adc
or
rolb
out
jne
clc
ror
cwtl
fimuls
xlat
xchg
xchg
je
les
psrad
mov
mov
repz
cmp
jns
out
mov
adc
sahf
adc
xor
or
fisubrl
xchg
mov
ss
sub
pop
pop
dec
imul
test
stc
lret
xchg
cltd
xchg
aam
dec
push
imul
pop
xchg
inc
add
leave
mov
add
mov
ja
mov
xchg
xchg
dec
ret
nop
add
xor
mov
rclb
dec
sbb
lcall
adc
lock
ja
mov
imul
cmc
jns
dec
lds
sti
outsb
ds
sbb
dec
movsl
xor
jmp
stc
popf
ja
mov
pusha
mov
lcall
and
add
dec
ja
js
testb
movsb
or
jmp
push
imul
xor
fdivrp
xlat
adc
mov
or
popf
pop
sbb
fildl
mov
div
mov
cmp
pusha
push
adc
repnz
ljmp
dec
pop
add
int3
icebp
mov
mov
adc
mov
add
fadds
loopne
pop
dec
jb
xchg
and
ljmp
sahf
mov
repz
loopne
lret
pusha
adc
push
and
gs
mov
ret
and
mov
add
repnz
test
jge
add
jmp
mov
xor
pop
ds
mov
outsb
push
mov
sti
jecxz
ja
sub
xchg
rcrb
dec
xor
iret
roll
fiaddl
inc
mov
lock
adc
imul
jne
lret
xor
and
cmp
jg
rcrl
dec
pop
adc
sbb
inc
or
cmc
mov
mov
clc
xchg
insl
nop
repz
xchg
cmc
add
gs
icebp
push
sbb
push
shl
sub
jbe
lcall
jns
in
jg
jo
fidivl
pop
movsb
add
inc
in
add
fldcw
and
out
testl
lea
jle
cmpsb
scas
out
cwtl
add
and
inc
push
cmp
cwtl
xchg
mov
outsb
xchg
xor
outsb
xor
push
adc
or
or
pop
sbb
jle
xchg
or
push
cmc
dec
push
lock
push
dec
pushf
filds
sbb
loope
stos
push
push
xchg
inc
enter
mov
push
pop
lods
push
mov
add
xor
rclb
scas
xchg
insb
xor
addr16
in
jo
jl
mov
adc
rorb
roll
inc
sarb
aaa
adc
daa
mov
sub
hlt
push
xlat
lock
fisubs
stos
jecxz
sub
or
jo
mov
in
loopne
fnstsw
shlb
lods
imul
push
sbb
in
or
scas
xor
lret
cs
insl
jmp
out
inc
pushf
pop
insb
adc
xchg
js
movsl
add
sub
shl
movsl
cli
in
cmp
divb
aas
add
and
cmp
repz
int
sbb
scas
add
aas
sbb
or
lods
aad
pop
xor
fs
test
cltd
pop
jp
cmp
cmp
add
adc
sub
add
clc
call
fcmovbe
dec
push
pop
cmp
aam
mov
jno
sub
lea
roll
aas
cmp
dec
pop
insb
stc
ret
fbstp
mov
test
stos
cltd
sub
jns
in
mov
push
inc
mov
push
cwtl
inc
inc
add
movsl
out
cmp
cmp
pop
mov
fstps
push
push
mov
xchg
cmp
push
lods
sbb
shrb
jnp
mov
xor
icebp
inc
aas
mov
and
push
push
mov
adc
arpl
dec
insl
lds
mov
ret
pop
mov
js
push
dec
ss
or
xor
xchg
adc
ud1
sbb
adc
outsb
xchg
xor
sahf
cmpsb
leave
or
lock
pop
xor
out
gs
and
sbb
and
nop
rcll
inc
aad
gs
xor
lock
jns
in
push
dec
orb
cmp
cmp
clc
jnp
lods
leave
sbb
mov
adc
scas
nop
or
xchg
cmp
or
adc
data16
mov
and
add
dec
enter
leave
xchg
aad
dec
loopne
mov
push
and
xor
sbb
je
and
cltd
icebp
repz
or
xchg
test
loop
push
gs
inc
faddp
mov
ja
jl
mov
add
int3
xor
pop
pop
not
in
aas
test
pop
ret
cmp
cmpsb
sub
hlt
sub
insl
xlat
sbb
dec
movsb
sahf
lods
int
mov
jb
fwait
jmp
fcmovnu
out
mov
dec
ret
or
mov
test
in
ja
insl
lea
pushf
sahf
sti
push
mov
inc
ffreep
xor
mov
inc
push
js
pop
dec
mov
sbb
scas
fidivrs
jge
les
test
cs
cmp
out
aaa
jmp
and
dec
jns
lods
out
push
iretw
lds
push
clc
jp
lcall
push
in
sbb
mov
sub
imul
push
xor
and
test
test
cwtl
loope
arpl
ljmp
mov
xchg
jecxz
cwtl
ret
cli
cmp
aas
sbb
push
push
jl
xchg
jb
int3
push
rclb
cmp
inc
mov
pushf
sub
or
or
sarl
and
je
dec
repz
loope
popf
adc
xchg
fs
mov
cwtl
inc
mov
xlat
xchg
push
rcrl
mov
pushf
movsl
test
pop
imul
test
mov
and
sbb
out
cltd
pop
scas
hlt
mov
cmp
ljmp
add
jle
push
and
imul
addr16
dec
push
mov
mov
jg
push
insb
mov
scas
je
mov
mov
int3
and
adc
dec
push
sub
jns
dec
loopne
lahf
stos
outsl
pop
or
pop
test
mov
mov
enter
adcb
mov
sti
fsubrs
dec
sub
stc
inc
mov
movsb
or
cli
ret
jne
imul
mov
jp
dec
sahf
adc
jbe,pt
repz
sbb
jns
out
imul
in
jae
lcall
divl
nop
add
nop
divl
push
mov
push
pop
jbe
and
pop
mov
mov
stc
out
repnz
js
sub
stc
testb
imul
movzbl
dec
jge
cmpl
mov
inc
rorl
and
outsl
fs
mov
xchg
inc
jl
fcoml
dec
mov
repz
add
mov
xchg
loopne
or
hlt
mov
popf
jne
rorb
mov
loopne
pop
cmp
popa
fldt
out
imul
cmp
sub
gs
mov
jb
sti
xor
shr
nop
addr16
adc
mov
sbb
sub
mov
push
shll
cmp
cmpsl
fdivp
test
push
jmp
mov
jo
hlt
outsl
arpl
xchg
pop
hlt
add
cmp
orb
int
into
notrack
rclb
inc
mov
and
addl
loop
jmp
int
pop
out
js
mull
pop
push
sbb
and
jg
insb
mov
adc
sarb
ficoms
mov
dec
inc
fsubr
mov
inc
jp
stos
inc
dec
out
jmp
es
mov
das
pop
push
stos
cmp
rcl
fistps
les
jle
aad
jmp
gs
out
jg
data16
insb
stos
sbb
ret
hlt
lahf
sbb
ret
fdivl
mov
adcl
sub
jo
dec
dec
je
shlb
test
movsb
imul
jnp
scas
adc
cmpl
imul
lahf
ja
jmp
cmp
mov
outsl
fnclex
out
and
repnz
iret
jp
fidivl
xchg
push
xor
repz
pusha
xor
and
mov
test
fwait
test
pop
bound
cmp
xlat
jnp
pop
jne
mov
fwait
inc
ss
jmp
xlat
inc
and
jle
jns
adc
or
mov
jb
enter
pop
sub
cmp
sti
int3
daa
pop
add
arpl
adc
lock
pop
insb
add
ss
push
sbb
xchg
adc
jg
stos
in
add
inc
lds
pop
pop
pop
shlb
pop
dec
xor
mov
hlt
shl
add
xor
into
mov
adc
pop
cmp
mov
movsb
in
div
cli
ret
shll
movsl
dec
adc
and
cltd
mov
ret
jae
insb
repz
adc
faddl
iret
out
inc
adc
subl
inc
pop
sbb
insb
jbe
sub
test
cmp
mov
inc
pop
cld
ljmp
and
in
push
pop
pop
push
test
cmpsb
jno
inc
lcall
insl
loope
mov
and
xchg
inc
dec
stos
xchg
mov
xchg
out
repz
push
divl
stc
jmp
adc
sub
fistl
sbb
add
loopne
cmp
and
adc
repz
roll
lods
daa
mov
push
xor
movsb
imul
xchg
dec
dec
mov
bound
cmp
scas
inc
adc
addr16
mov
jmp
xchg
rorl
xchg
dec
sub
cmp
ficoml
pop
lods
push
sub
adc
aaa
jl
xor
lods
adc
fistpll
adc
push
test
aas
pop
jmp
loope
loop
xchg
outsl
jge
mov
sahf
xor
in
movsl
mov
sbb
sbb
inc
mov
inc
aaa
aad
jnp
push
in
and
inc
and
dec
mov
push
xchg
dec
test
jmp
lock
insl
xor
outsb
sbb
rcll
jge
adc
adc
inc
sarl
scas
dec
xor
mov
lds
dec
push
nop
push
mov
or
mov
jmp
and
pushf
cmp
stos
jo
inc
leave
iret
pusha
mov
mov
jbe
dec
xorl
or
ret
xor
and
or
fidivs
rcll
add
jge
jge
fists
mov
jne
add
imul
dec
pop
or
sti
insl
inc
jno
mov
inc
and
inc
loope
pop
test
mov
mov
or
mov
cmc
loope,pt
pushf
shrl
sbb
jno
icebp
push
pop
std
push
loope
add
pop
inc
mov
outsb
mov
gs
jmp
icebp
mov
push
daa
orl
add
rcl
jecxz
xor
jmp
sti
pop
lds
lock
call
loopne
loope
push
cli
mov
mov
add
push
xor
ficompl
aaa
mov
add
mov
jle
in
stc
push
lods
fs
out
stos
imul
insl
js
jno
cmp
in
fwait
jns
inc
mov
adc
add
jbe
jne
push
mov
aas
push
cmpsb
pop
push
sbb
loope
int3
int
inc
add
mov
cmp
rcrb
mov
je
mull
mov
xchg
das
inc
mov
in
hlt
cs
out
data16
inc
out
push
ficoms
call
sub
mov
and
imul
out
scas
cmp
icebp
jge
popf
sarl
bound
lds
dec
push
notl
js
out
cmp
push
dec
inc
outsl
dec
dec
les
mov
jae
push
xchg
push
movsb
clc
mov
jge
aas
leave
dec
jb
fcmovb
and
sub
mov
aas
data16
xchg
ret
addr16
adc
push
dec
cmp
es
sarb
shll
adc
mov
inc
pop
push
jb
fs
push
inc
movsl
iret
js
xchg
inc
aam
mov
push
xor
mov
pop
jge
in
adc
pop
inc
dec
add
or
adc
xchg
jne
push
add
push
mov
dec
inc
ds
sahf
data16
cli
push
aas
adc
lods
je
adc
and
call
inc
lcall
cmovb
pop
pop
popf
addr16
add
mov
shlb
lods
ja
rcrb
std
pop
sub
pop
jo
xchg
pop
jl
inc
inc
rcr
xlat
inc
adc
mov
and
sbb
cmpsb
lods
int
fbstp
loop
mov
xor
and
inc
dec
andb
adc
out
daa
lods
mov
fmuls
fsubs
cmp
and
mov
ror
pop
test
cs
stc
popf
mov
mov
out
jge
imul
jbe
es
mov
iret
fsts
stos
lods
and
jno
dec
mov
xor
insl
or
or
inc
int
adc
movsl
shlb
sub
pop
sub
imul
jae
outsl
xchg
and
sub
mov
dec
repz
sub
adc
and
adc
fldt
mov
push
adc
push
xchg
sahf
jl
ss
lcall
sbb
icebp
gs
gs
push
cwtl
and
sarb
lds
aaa
pop
mov
fimull
out
mov
fs
sbb
xchg
shrb
and
lea
outsb
iret
cmp
repnz
popf
nop
push
test
xchg
dec
jp
and
mov
jne
dec
es
in
or
jns
mov
andb
leave
pop
push
loopne
push
leave
xchg
adcb
sub
xchg
sti
mov
arpl
loope
sub
pop
xchg
hlt
and
mov
sahf
or
pushf
dec
addb
or
mov
jns
inc
pop
mov
enter
sub
or
lea
lock
jno
xchg
xor
sti
gs
xor
push
jb
pop
stos
cmp
ror
cmpsl
rol
xor
fistl
xlat
imull
mov
jb
arpl
xchg
and
orl
fadds
fildl
inc
clc
push
stos
adc
mov
aaa
cmp
xchg
jae
inc
inc
push
shrb
adc
popa
sbb
repz
add
mov
mov
fstpl
fisubl
shll
enter
dec
adc
jecxz
push
out
add
sbbl
push
ret
inc
leave
scas
pop
inc
in
cld
aad
dec
mov
and
fidivrl
xchg
jg
push
mov
in
mov
popf
jno
or
shll
sahf
test
inc
hlt
or
out
mull
or
xchg
jno
xchg
sbb
dec
jmp
push
mov
loope
pop
dec
mov
aad
xchg
mov
int
outsl
sbb
dec
pop
pusha
out
jo
pop
sbb
sbb
daa
out
cs
inc
push
adc
fsts
xor
daa
jbe
dec
std
add
into
inc
rcll
or
and
xchg
stc
mov
scas
and
int3
repnz
rcll
jp
jmp
fdivs
jnp
test
lea
inc
ds
xor
std
lock
sbb
xor
enter
js
test
xor
pop
sahf
xchg
dec
lret
jno
mov
mov
xchg
loop
or
pop
adc
pop
or
pop
enter
subl
jne
mov
and
lds
jg
popa
adc
mov
inc
jle
xchg
mov
stos
cs
cld
sarb
cld
aad
sbb
mov
pop
add
inc
cmp
into
cmc
fstps
mov
jle
and
or
clc
jle
fldl
adc
sbb
pop
imul
pop
dec
int
sbb
xor
xlat
js
pop
mov
cmc
sahf
int3
sahf
mov
mov
adc
jp
add
push
add
ds
int
movsb
inc
push
pop
mov
repnz
jmp
sub
mov
mov
push
inc
mov
inc
rcll
and
push
jns
imul
lods
out
aaa
and
ja
js
hlt
fdiv
or
adc
adc
cmc
arpl
mov
aam
pop
lea
and
std
push
out
js
jmp
icebp
push
shll
fcoms
incb
outsb
lds
adc
xlat
ja
push
pop
popa
fstps
lcall
shll
loop
int3
sar
sti
lahf
add
and
push
cmp
call
iret
cs
adc
push
mov
push
mov
xchg
sub
int3
xor
imul
dec
xchg
testl
cmc
nop
dec
push
lods
mov
loopne
lcall
push
aam
sub
jnp
xor
and
adc
pushf
cmp
call
mov
pusha
jnp
test
adcb
mov
fstpl
mov
rorb
scas
cmp
fbld
sub
sub
ja
sbb
mov
mov
mov
mov
movsb
and
jne
ljmp
or
lods
dec
pop
push
shrl
or
nop
es
mov
inc
lods
jno
outsb
cmpb
cld
mov
fldt
insl
dec
mov
addr16
lret
sub
repnz
mov
arpl
jae
loope
sub
xchg
add
mov
push
cmpsb
dec
adc
inc
jmp
dec
pop
addr16
icebp
dec
jp
jb
mov
pop
cs
cmc
mov
roll
sub
scas
and
xchg
int
repnz
mov
les
scas
loop
xchg
dec
sub
imull
mov
mov
add
dec
sbb
push
sbbb
and
arpl
mov
and
cmc
add
xchg
mov
mov
out
sbb
aam
frstor
and
ds
lahf
lcall
jb
mov
mov
adc
lahf
cli
sub
xor
fwait
inc
cmp
ja
xchg
pop
xor
sbb
sahf
bnd
sub
jecxz
sbbb
adc
fmull
insl
bound
sbb
pop
xchg
test
cmpsl
icebp
lods
dec
enter
lahf
neg
push
xchg
xchg
sub
scas
pop
stos
int
js
rclb
daa
loop
pop
push
pushf
scas
shl
loop
xchg
scas
cwtl
xchg
push
fisttpl
xchg
dec
hlt
stc
ds
nop
in
adc
inc
out
pop
jnp
lods
fsubl
jmp
cmc
and
in
mulb
jo
les
lock
or
fwait
jl
xchg
cmp
pop
fldl
insb
jns
movsl
loope
arpl
inc
mov
and
fcmovne
es
inc
stos
cmp
mov
xchg
xor
push
lahf
dec
dec
wrmsr
adc
aad
dec
shll
loopne
rep
mov
or
ss
dec
bound
mov
jle
pop
jo
js
sub
aas
fwait
dec
push
sbb
xor
arpl
cmp
mov
or
push
sub
mov
pop
out
mov
or
es
sub
xor
addr16
ljmp
xchg
cmpsl
add
inc
add
xor
scas
lds
flds
push
jle
daa
adc
push
mov
lea
sbb
in
xchg
mov
cltd
jmp
sbb
cltd
add
jp
xchg
test
mov
lds
stos
imul
add
outsb
arpl
sbb
es
nop
stos
sub
mov
mov
cwtl
lds
std
mov
push
sbb
sti
or
sub
push
and
sarb
loope
xor
mov
aas
insl
outsb
mov
mov
int3
cmp
push
add
sub
cltd
lcall
nop
scas
call
push
xchg
or
or
adc
cmpl
xchg
mov
enter
dec
dec
repz
loope
mov
stos
or
jnp
mov
loope
inc
jo
fidivs
xor
nop
or
dec
sbb
test
gs
jg
fwait
xor
movsl
pop
and
fs
sub
dec
inc
lds
pusha
jecxz
mov
jae
cld
xor
insl
jmp
stos
loop
sar
ffree
push
or
xchg
dec
int
mov
pop
push
cmp
fstl
sbb
in
rorb
ret
inc
sub
pop
cmpxchg
loop
dec
jnp
jbe
call
cld
add
gs
fs
shrb
lret
mov
push
aad
test
imul
fildl
fidivrl
mov
push
movaps
add
adc
sbb
fs
sbb
adc
das
jo
push
repz
outsl
pushf
loope
incb
mov
mov
adc
add
iret
and
js
inc
sbb
stos
push
or
call
mov
ret
xor
pop
and
shr
inc
xor
inc
jb
int
or
dec
dec
mov
adc
nop
mov
pop
push
fdivrl
test
and
lret
adc
ds
push
mov
divl
cwtl
push
or
out
loope
clc
in
ds
mov
inc
adc
out
jecxz
mov
lcall
mull
fnstsw
scas
leave
std
xchg
fsubrs
cld
adc
push
nop
insl
mov
int
pusha
mov
or
mov
add
xchg
sub
sbb
ror
push
sahf
fucom
repnz
mov
push
or
cmp
test
pop
out
or
or
sbb
imul
pop
popa
mov
cwtl
mov
push
mov
fwait
pop
ja
adc
add
sti
xlat
jl
sbb
mov
leave
pop
mov
adc
div
sbb
inc
and
cmp
pop
ret
outsb
addr16
aam
cmp
hlt
shll
pushf
test
add
fildl
mov
cmc
pop
xor
mov
lds
push
test
xchg
sub
dec
rol
pop
arpl
xchg
andl
sub
call
fidivl
add
cmpsb
and
pop
sbb
jmp
adc
negb
lods
xchg
jb
mov
and
aam
jle
or
loope
fwait
jnp
int3
ds
addr16
push
fdivrl
ret
pop
mov
push
int
mov
mov
dec
sti
mov
hlt
add
js
mov
inc
inc
lods
leave
xchg
sahf
inc
in
and
and
leave
pop
mov
aaa
incl
xor
cwtl
rcr
or
daa
pop
sub
mov
out
cmp
cmp
xlat
idivl
cli
mov
push
inc
mov
inc
cli
mov
pop
sbb
sub
loop
fsubs
xchg
push
mov
cld
or
push
gs
sbb
dec
ret
jb
js
pop
ja
jne
ja
and
ret
aam
jae
xchg
iret
sbb
sti
and
jle
insb
movsl
mov
lds
mov
mov
fwait
add
xor
or
cmp
inc
dec
push
pop
pop
aaa
mov
mov
lods
jl
mov
adc
cmpsb
jle
adcl
fld
adc
jnp
xchg
xchg
stos
xor
mov
sbb
stos
popa
pop
ret
adc
mov
cmpsb
jae
scas
inc
bound
outsb
add
cmpsl
imul
insb
sub
sub
xor
xor
lahf
je
repnz
out
jbe
sub
mov
sub
icebp
bound
xchg
daa
mov
mov
jb
pop
and
out
or
mov
std
push
sub
and
es
sbb
pop
in
push
mov
xor
xor
test
push
loope
mov
and
xor
in
nop
pusha
hlt
add
adc
xchg
cwtl
mov
stc
mov
jge
aaa
adc
pop
jo
xor
and
xor
push
or
sti
mov
pop
popf
jge
stc
enter
mov
ljmp
fwait
clc
jns
cmp
sbb
or
xorb
in
cmp
ljmp
popl
int
jmp
ret
mov
clc
xorl
push
mov
cltd
add
sub
pop
gs
cmp
inc
xchg
and
mov
int
lret
cmp
cmp
ja
xor
stos
loopne
loop
fucom
test
xchg
idivb
inc
loop
push
out
in
pop
push
adc
fldenv
enter
and
pop
loopne
in
mov
incl
aad
stos
in
cmp
jo
enter
jo
cmp
inc
xlat
nop
push
fnstenv
popf
hlt
cwtl
mov
das
stos
imul
rcpps
dec
loope
dec
xorl
push
add
dec
push
lcall
mov
dec
cmpsl
adc
in
xchg
cmpl
or
jo
jbe
test
in
push
xor
xor
xorl
dec
sti
jle
sub
fcmovu
pop
xor
cmp
insl
mov
sbb
aaa
and
mov
xchg
push
and
out
mov
or
jns
popf
rcrb
mov
jecxz
out
cwtl
dec
xor
aam
mov
push
nop
dec
mov
loope
mov
cs
xchg
jle
xchg
fisttps
popa
in
neg
fcoml
mov
sbbl
movzbl
stos
enter
shlb
stos
push
sbb
sarl
xchg
jg
adc
xchg
je
mov
jbe
insl
aad
pop
cmp
andl
or
arpl
xor
mov
jbe
out
loop
jb
adc
int3
mov
mov
leave
mov
das
xchg
ficomps
ss
xchg
scas
xchg
sbb
std
add
stos
lea
push
and
outsb
lahf
data16
jbe
mov
push
jbe
loop
add
mov
sbb
dec
or
sub
gs
ja
push
dec
nop
fstl
jb
call
cmp
push
cwtl
icebp
mov
push
adc
dec
cltd
int
iret
cmp
xor
rolb
loopne
mov
xor
mov
push
cltd
into
fldenv
mov
xchg
lret
pop
into
loope
add
xor
inc
inc
flds
xor
push
and
mov
inc
das
pushf
adcl
adc
sbb
ljmp
sbb
xchg
outsl
dec
mov
cmp
inc
add
clc
mov
int
ficomps
jo
aad
orl
jle
aad
stos
pop
jecxz
or
out
jns
scas
or
pop
pushf
mov
jbe
sub
add
cwtl
stos
mov
nop
sbb
dec
and
push
test
mov
loop
scas
std
lds
inc
imul
cltd
push
scas
cmpsb
xor
icebp
dec
sar
stos
inc
idivl
push
xchg
cmp
in
test
adc
addr16
cmp
jge
stos
roll
aad
repz
and
aas
xor
pop
ss
mov
lret
je
outsl
scas
dec
imul
call
inc
jge
je
mov
pop
sub
pop
xor
fsubs
mov
cmc
or
sub
fldt
jmp
fcmovu
sbbb
sub
mov
enter
mov
loop
out
xchg
push
inc
push
mov
jg
gs
sub
lahf
enter
cmp
movsl
pushf
test
sahf
imul
div
lock
fs
les
mov
jmp
shlb
pop
pop
std
sbb
fs
jle
push
push
sbb
sub
inc
inc
xchg
out
fsubs
outsb
mov
adc
pop
xchg
jbe
push
aaa
fsts
sarl
jl
jae
pop
dec
rorb
int
subb
gs
aad
punpckhbw
push
sti
or
push
in
fisttps
mov
and
mov
out
push
ds
xor
ficompl
push
pop
les
push
jbe
jecxz
dec
shlb
mov
adc
test
popa
out
jmp
jmp
ret
nop
cwtl
out
mul
pop
add
mov
shlb
sub
iret
call
mov
jae
mov
sub
sti
sub
lcall
scas
fdivs
pop
movsl
outsb
call
cli
movsb
cmpsb
inc
fnsave
int
push
arpl
leave
cmp
data16
dec
sti
outsb
test
adc
and
out
sub
aad
mov
sbb
lret
dec
push
outsb
sbb
mov
imul
pop
mov
je
dec
enter
mov
stos
adc
xchg
mov
push
pushf
ret
test
aam
sbb
aas
lea
push
sub
xor
pop
sub
mov
movsl
pop
xchg
jno
xor
int3
gs
push
insl
add
xor
mov
dec
sbb
or
xorl
faddp
in
mov
push
repz
dec
sub
cs
js
insb
pop
pop
pusha
inc
leave
call
test
dec
xlat
pop
in
lret
xchg
xchg
inc
scas
sub
mov
incb
stc
cltd
jge
and
and
mov
add
gs
push
add
pop
dec
mov
or
mov
aam
arpl
cmp
xchg
push
push
test
adc
shlb
or
add
mov
sbb
xor
addr16
sarb
cmp
shll
jno
adc
sub
pop
xor
daa
mov
jmp
ror
lock
ret
cs
cmp
lret
movsl
movsb
sbb
mov
push
or
or
scas
popa
add
mov
xchg
repz
mov
adc
xchg
xor
push
scas
xchg
inc
and
fs
das
push
xor
subb
xchg
int3
aam
or
arpl
fildll
out
cmpsb
jnp
mov
and
dec
loopne
addl
das
mov
jge
inc
mov
cwtl
pop
stc
stc
push
dec
sub
jae
shll
xor
fbstp
and
mov
ret
popf
mov
sub
adc
movb
aam
jl
and
shll
repnz
push
lds
outsl
arpl
inc
jecxz
cwtl
mov
imul
mov
jnp
add
push
sub
adc
lret
std
repnz
mov
push
fwait
adc
mov
push
mov
sahf
mov
mov
mov
dec
mov
or
xor
and
xor
ja
xchg
mov
loopne
adc
test
movsb
cli
mov
mov
pop
lea
inc
arpl
mov
ficoms
xchg
fsubrs
xchg
push
push
aas
ds
repz
ds
lods
jl
popa
in
xorl
loopne
test
cld
mov
dec
jae
adc
shlb
movsb
scas
scas
mov
mov
add
and
popf
mov
xor
pop
iret
cli
aas
mov
dec
stos
dec
test
pop
adc
push
fstpt
rcr
ljmp
arpl
in
xchg
inc
sub
rcl
pop
xchg
dec
out
repz
fdivrl
stc
add
xor
and
mov
aad
push
cmp
pop
add
orl
out
mov
leave
inc
add
pop
in
sbb
jnp
pusha
test
jecxz
fiaddl
bound
stos
loope
cld
push
insl
repnz
dec
push
sbb
xor
test
mov
loope
mov
fiaddl
ljmp
push
xor
rol
push
or
clc
iret
out
push
ss
inc
fwait
xor
into
mov
loopne
mov
lahf
scas
bound
and
lcall
mov
outsl
mov
adcb
lods
xchg
and
pop
mov
jmp
sub
mov
jae
rcrl
dec
js
dec
push
ljmp
shl
jl
cmp
shlb
sahf
test
xor
scas
cltd
jno
data16
xchg
stos
push
loopne
mov
jle
push
fnstenv
stc
lret
adc
add
xchg
mov
nop
imul
jo
pop
jge
pop
in
out
xlat
imul
js
inc
movsb
int
imul
int
fisubrs
sub
push
ds
xchg
mov
push
push
and
push
loopne
mov
push
insl
je
xchg
mov
push
fdivs
or
add
mov
and
rorl
push
mov
and
popa
lods
push
scas
fisttps
lds
mov
dec
cmc
clc
inc
lcall
add
jae
fisttpl
inc
push
adcb
cld
outsl
ss
pop
push
clc
dec
movsb
das
cmpsl
enter
sbb
adc
sbb
arpl
push
fistpll
cmc
addb
and
ds
into
fnstsw
inc
mov
fsubrs
pop
sub
into
jbe
decb
scas
imulb
movsl
std
popa
pushf
mov
jp
mov
add
sbb
jp
jno
int3
push
cmp
xor
adc
lock
xchg
cwtl
rorl
aam
jne
aam
popa
lahf
inc
cs
xchg
fcmovnb
imul
imul
fadds
test
or
push
test
inc
fwait
lods
dec
jne
inc
dec
xlat
int
loop
inc
les
xchg
pop
cmp
mov
push
addl
fbstp
jmp
fstpt
lahf
inc
nop
mov
insb
mov
test
mov
sub
je
pop
sub
loopne
lret
aam
aad
xchg
jmp
imulb
sub
mov
fldcw
add
loopne
xor
clc
andb
push
xor
mov
add
loope
or
imul
cs
sbb
xchg
movsb
push
repz
fimuls
push
xchg
jle
out
push
in
xchg
dec
cwtl
nop
stos
shll
inc
sub
fs
shll
mov
jb
mov
fcomps
repz
jge
pop
xor
dec
ret
add
repz
pop
int
sbb
add
dec
pusha
stos
or
stc
or
add
imul
push
sub
add
sti
cltd
jmp
iret
xor
data16
rolb
mov
popa
es
shll
roll
ret
xor
mov
loopne
fnstcw
cltd
add
iret
rorb
sahf
scas
lods
sub
je
imul
sahf
pop
jl
pop
sub
andl
ffreep
popa
sbb
into
sbb
cli
stc
es
gs
data16
std
push
pop
test
push
jle
je
fsubl
cmp
xchg
nop
mov
in
mov
cwtl
lea
lcall
mov
adc
and
dec
cli
or
jno
push
icebp
pop
pop
pop
test
pop
cmpsl
aas
xchg
pop
mov
rcrb
in
add
les
hlt
jmp
or
popa
mov
add
inc
outsb
adc
adc
sbb
add
gs
mov
int
dec
or
xlat
mov
xor
mov
xchg
repnz
rcrb
fistpll
mov
cwtl
loop
cltd
inc
and
sti
add
pushf
je
das
mov
mov
rorl
out
cli
addr16
aad
orl
fbstp
push
scas
imul
mov
push
fistpl
popa
pop
push
test
xchg
je
scas
testb
fnstcw
adc
fscale
fiadds
xchg
cld
push
jnp
mov
xchg
mov
enter
aam
pop
ret
xor
scas
inc
and
cmc
sahf
pop
mov
xchg
jp
scas
xchg
gs
dec
cltd
mov
idiv
dec
and
subl
lret
add
mov
sub
pop
pushf
xor
aas
mov
aam
push
stos
cld
add
leave
add
mov
shll
push
movsl
ss
out
cmp
jecxz
or
sbb
fwait
sbb
ficoms
mov
jp
inc
jecxz
enter
fdiv
cmc
call
outsb
stos
sti
xor
mov
fisttpll
pushf
jb
mov
add
jne
or
test
and
push
mov
rcrb
xchg
nop
xchg
dec
fs
movsl
addb
mov
xor
cmp
mov
dec
std
popf
repz
jns
mov
or
imul
cmp
in
bnd
fcoml
ss
mov
mov
mov
call
dec
xlat
pop
or
es
adc
push
mov
jae
xchg
es
and
xchg
mov
mov
dec
repz
cmp
mov
mov
xor
pop
testb
or
iret
adc
fs
add
xor
mov
stos
lods
sub
mov
movsb
adc
mov
jl
fst
or
sbb
mov
or
xchg
test
mov
pop
or
jmp
cmc
mov
ret
outsb
inc
cld
enter
jne
cmp
popa
loop
incl
dec
sbb
sbb
aas
loope
xor
inc
jg
fistps
in
out
addr16
cmp
lods
inc
pop
or
lods
ss
jmp
aaa
jno
xchg
inc
stos
sbbl
xchg
dec
mov
or
jb
int
repnz
hlt
pop
pop
sbb
movsb
fs
xchg
sub
fisttps
or
std
and
int
jmp
sub
xchg
xor
rolb
decb
loop
fiadds
jmp
shll
cmp
xor
and
pop
xchg
xor
subl
icebp
push
inc
cmp
pop
popa
mov
inc
pop
dec
and
leave
sbb
jbe
or
add
push
or
add
mov
and
jo
fcmovu
aam
xchg
jge
jge
test
iret
stos
testl
mov
jmp
bound
pushf
push
movsb
loop
loope
out
jne
es
ret
inc
cs
scas
add
sbb
xor
out
mov
push
push
adc
pop
jns
or
jl
xchg
popa
cmp
mov
push
add
jmp
pop
inc
sti
das
insl
mov
outsb
sub
jae
fadd
sti
imul
addr16
sbb
xchg
imul
je
inc
sbb
in
push
ja
jp
lock
aas
pop
test
or
jbe
adcl
push
aas
das
in
mov
mov
fs
inc
ret
xchg
cmpl
sub
dec
xor
xor
in
add
rorb
xor
inc
std
roll
scas
clc
daa
out
mov
dec
lea
or
mov
mov
dec
jbe
test
cmp
in
adc
push
pop
ss
stos
pop
ficoms
jo
dec
and
cmp
gs
out
xchg
adc
stc
xchg
mov
pop
lret
lea
fiadds
lea
mov
mov
repnz
or
mov
js
cmpsb
pop
mov
sbb
shrl
test
push
hlt
mov
sbb
dec
bound
and
mull
push
jmp
mov
dec
xor
xchg
aas
repnz
test
sub
sub
jae
iret
dec
adc
aad
fldcw
mov
rclb
dec
shl
gs
xor
cs
test
test
mov
aas
mov
add
add
xchg
cmp
lock
ja
or
mov
pushf
inc
icebp
pop
cmp
mov
or
jb
mov
adc
je
xchg
add
mov
dec
fst
je
ja
jp
pop
sbb
push
add
mov
mov
or
mov
leave
mov
cld
pop
or
sahf
paddb
iret
pop
xor
mov
jmp
cmp
ja
add
jne
dec
test
sti
daa
dec
fcomip
dec
imul
or
repz
popaw
xchg
jle
cwtl
mov
fs
jno
shrl
arpl
outsb
add
jne
jle
add
js
pop
cmp
addr16
lret
push
into
xor
or
fwait
ror
cli
cmp
scas
negb
mov
jmp
dec
jne
into
ljmp
jne
and
jae
loop
jle
shl
in
mov
push
test
pop
mov
out
cli
mov
xchg
mov
in
sahf
ja
jge
dec
xchg
adc
push
push
pop
mov
lret
out
mov
jno
in
mov
dec
daa
sub
stc
lock
jae
ss
std
jle
ds
push
cmc
test
stos
mov
jmp
push
repz
xor
shlb
push
ljmp
sub
mov
cmp
fdivp
sbbl
adc
pop
imul
inc
jnp
xchg
in
sti
rsqrtps
cs
sbb
out
pusha
js
push
in
mov
out
inc
jge
mov
add
cmp
lds
mov
test
jnp
pop
popl
sahf
inc
adc
sub
and
cmp
push
add
jl
mov
xchg
and
or
mov
aaa
inc
adc
mov
or
mov
insl
das
and
push
scas
insl
cltd
test
inc
es
in
mov
sub
cmp
lret
jne
imul
scas
shlb
adc
scas
mov
sub
scas
mov
push
xor
pop
push
fwait
mov
je
popa
mov
inc
into
in
push
repnz
cs
stos
pop
mov
mov
jo
pushf
das
lret
add
sbb
jp
xor
scas
pop
pop
jl
mov
dec
sbb
loope
cmp
mov
ljmp
fisubl
stos
add
movsb
jns
scas
aaa
ss
inc
cwtl
imul
sahf
push
lods
mov
ret
xchg
loope
jmp
lds
pop
testb
jb
gs
mov
fcmove
pop
add
das
sub
incl
pop
jl
sub
fiadds
xchg
mov
syscall
sbb
fadd
jg
ds
cmpsl
or
or
cmp
sbb
pop
jae
cmpsl
push
mov
adc
mov
out
jns
jle
xor
sbb
call
sbb
push
mov
roll
mov
inc
cli
jp
mov
or
push
lds
sbb
insb
ret
das
mov
insl
int3
mov
adc
add
dec
pop
loope
mov
in
inc
inc
aas
push
mov
shll
mov
sbb
in
shrb
xlat
or
lock
sbb
fnsave
xchg
lahf
ljmp
mov
loop
arpl
mov
dec
lods
mov
push
das
sti
adc
dec
add
movsl
xchg
addr16
shl
jns
pop
cmp
sbb
addr16
jne
push
sbb
sub
mov
add
xor
cmp
leave
loop
subb
mov
fidivrl
xchg
neg
sar
cmc
dec
add
or
cmp
pop
nop
addr16
scas
fistpll
pop
iret
pop
int3
jno
and
adc
es
xchg
cmpsb
repz
pusha
jecxz
jb
sbb
mov
scas
cmpsl
add
mov
xlat
xchg
adc
pop
jns
lock
sbb
mov
fcomp
mov
scas
and
mov
insb
push
push
pop
fsubp
pop
idivl
push
xlat
xor
push
cmp
sahf
dec
arpl
leave
mov
and
stc
inc
scas
mov
adc
pushf
adc
pop
or
push
in
pop
cmp
rorb
outsl
mov
enter
jns
iret
in
xchg
xlat
cltd
addb
xorb
mov
dec
movsl
dec
popf
xlat
inc
mov
or
mov
out
or
aad
jne
or
mov
les
jne
dec
rorb
cmp
shr
pop
mov
jecxz
int
test
cmp
and
sbb
into
xor
nop
xchg
repz
sarb
filds
jo
cmp
das
repz
sbb
xchg
das
movsb
mov
lods
and
cli
mov
inc
ss
jne
pushf
add
sub
mov
pop
jge
out
push
fwait
push
std
jnp
lock
scas
les
out
xor
jnp
dec
pop
mov
je
cmp
insb
imul
pop
in
int3
fwait
ja
add
push
cmp
add
push
insb
outsb
cmpsl
and
cmp
shll
jmp
add
jae
mov
push
mov
clc
in
aas
aad
mov
adc
cmp
addl
dec
and
imul
incl
jnp
je
or
negl
push
call
sub
popa
imul
mov
mov
mov
jnp
adc
cmp
xor
adc
sbb
cmp
jns
data16
mov
lods
addb
inc
scas
ljmp
orb
xor
sbb
sbb
insb
cltd
fldcw
mov
out
fs
out
adc
cld
nop
test
loop
das
jp
mov
sbb
out
lods
adc
xchg
add
hlt
cmp
dec
movsb
fstl
outsl
sub
cmp
dec
fcompl
adc
jp
sub
push
mov
xchg
rcrl
xchg
sbb
cvtps2pi
loope
inc
xlat
sbb
fcomi
push
jp
pushf
dec
rcl
inc
fisttpll
imul
movsl
push
out
inc
leave
outsb
enter
sub
cmpsl
xor
rorl
inc
add
mov
sub
push
sbb
icebp
xchg
addl
jge
sub
test
xchg
ljmp
lock
test
jae
data16
pop
xchg
xchg
pop
dec
lahf
fidivrl
sub
outsb
mov
iret
mov
pop
shll
flds
rolb
cs
mov
gs
std
or
dec
movsb
adc
sbb
in
mov
scas
dec
das
or
cmc
xor
add
mov
movsl
adc
or
mov
iret
in
inc
sub
subl
pop
xor
cltd
dec
pop
lock
les
jae
and
insb
adc
sbbl
cmp
les
pushf
mov
call
cmpsl
mov
lock
fsubrl
fistps
xchg
cld
int
mov
ret
mov
mov
movsb
pop
pusha
add
pop
sub
popf
aam
lret
ljmp
xor
in
out
fs
mov
scas
or
mov
daa
in
jae
aam
outsl
sbb
inc
cltd
icebp
pop
adc
mov
cmp
xchg
add
les
fnstsw
inc
dec
fisubs
xchg
pop
or
adc
push
cmp
aad
push
aas
pop
sahf
xchg
mov
push
add
in
pusha
imul
xlat
xor
push
mov
cmc
leave
repz
je
push
fadds
icebp
aas
xchg
sbb
faddl
sahf
mov
and
ja
leave
or
nop
pop
roll
popa
addl
js
inc
fnsave
mov
mov
sbb
into
mov
sbbl
inc
mov
movsl
std
jge
in
mov
dec
js
sub
adc
nop
mov
sar
jl
shlb
fsubr
mov
insb
stos
jno
out
std
movsl
cltd
dec
mov
mov
inc
xor
mov
cmp
inc
sub
adc
popa
add
stos
mov
leave
fiaddl
push
inc
pop
cs
decb
xchg
inc
das
mov
cltd
mov
loope
mov
rcrl
sbb
jg
mov
bound
cmpsl
sub
ret
adc
jecxz
loope
scas
dec
and
inc
stos
push
fnstcw
fldcw
lods
ss
fwait
dec
or
push
xchg
xor
fwait
mov
add
mov
jae
pop
jl
mov
sub
mov
push
adc
sub
inc
call
lcall
push
out
out
out
jmp
adc
jns
cmp
in
xchg
shrb
test
arpl
fisubs
negb
pop
movl
add
lret
rcrl
mov
jnp
aas
std
sbb
xchg
mov
mov
inc
sub
adcl
xchg
ljmp
cmp
or
dec
in
or
jg
popf
aad
xor
inc
test
lock
hlt
jp
jnp
add
out
adc
js
mov
mov
inc
sbb
in
addr16
push
scas
out
loopne
sub
ds
outsl
cld
cltd
ja
aaa
xchg
xchg
sub
mov
mov
jmp
aas
pop
pop
jno
lods
xchg
dec
and
in
sub
jo
rolb
push
jne
iret
lods
sub
hlt
js
xlat
enter
adc
sbb
icebp
lret
or
pop
xor
pop
hlt
sub
int
shl
psllq
sti
mov
fldenv
notb
aas
jecxz
and
and
sbb
add
test
cmp
pop
mov
add
fwait
scas
shlb
lods
inc
xchg
push
mov
lahf
popf
aam
mov
xor
aas
dec
mov
and
pop
mov
pop
push
add
add
insl
adc
mov
mov
push
imul
cs
push
adc
cmp
and
into
imul
sar
dec
sbb
outsb
outsl
jle
aaa
jge
loopne
dec
test
push
mov
out
push
ljmp
test
stos
pop
sbb
mov
sub
test
xor
cli
or
test
in
adc
into
lea
mov
insl
call
mov
push
jg
sbb
sbb
push
pop
xor
stos
add
mov
ret
out
and
out
jle
ret
hlt
sarb
bound
stos
jae
and
sub
test
test
mov
fwait
adc
dec
int
pop
mov
mov
add
jbe
add
cltd
cs
in
jl
in
ret
adc
sbb
pop
or
int3
mov
cmp
pop
mov
dec
repz
sub
aam
int
adc
adc
in
mov
sti
and
xchg
in
xchg
jl
fsubrs
mov
xchg
add
mov
mov
push
paddw
push
push
in
sbbb
push
lds
mov
lock
or
xchg
push
jge
mov
xchg
loope
jmp
stc
cmp
idivb
mov
and
sub
inc
jns
lods
testb
mov
aad
lods
xchg
in
fcompl
incl
pop
sarl
xchg
mov
xlat
in
mull
dec
popa
sub
mov
xchg
jnp
mov
xor
xorl
int
sbb
mov
int3
xor
sbb
dec
aaa
loope
pop
ss
cmp
loope
pop
ljmp
repnz
adc
pop
mov
in
ja
icebp
mov
jge
cmp
mov
or
pop
movsl
mov
push
hlt
scas
mov
dec
dec
mov
fldenv
pop
jle
sub
cs
jmp
sub
rorl
leave
jle
pop
xchg
movsb
sub
jle
cmpsl
sbb
mov
imul
pop
shl
das
int3
je
loope
shlb
js
fucomi
inc
mov
jb
xchg
add
popf
jl
fsubr
popa
ret
adc
pavgb
aam
xor
sahf
pop
jp
imul
pushf
out
mov
push
xor
pop
arpl
mov
shr
hlt
adc
pop
cltd
push
aas
pop
pop
loop
rorb
cwtl
mov
jl
pop
xor
enter
das
mov
xchg
fwait
jle
pop
mov
mov
pop
fnstsw
xchg
or
xchg
imul
mov
xor
out
popf
clc
mov
cmpsb
cmp
bound
repz
fucom
lcall
cltd
aad
popf
popf
pop
imul
mov
adc
paddq
adc
repnz
inc
mov
sbb
icebp
iret
xor
pop
lods
xor
cld
es
pushf
inc
not
adc
fdiv
nop
iret
mov
add
insb
mov
ds
xchg
adc
jns
lahf
sbb
mov
mov
inc
sub
mov
divl
mov
dec
fldenv
mov
and
les
xchg
and
mov
popa
es
push
inc
and
inc
add
neg
xor
pop
sti
cmpl
sbb
clc
inc
or
pop
das
enter
sbb
and
out
cmp
adc
lds
in
nopl
bound
mov
add
mov
rcrl
fists
in
mov
push
pop
sub
dec
icebp
push
popa
cltd
pusha
add
push
call
icebp
or
adc
sub
mov
fld
pop
lahf
int3
xchg
lds
xlat
enter
mov
push
jl
sarl
mov
scas
aas
ja
push
adc
in
mov
mov
outsb
loope
pop
mov
push
push
xchg
mov
inc
ret
lods
bnd
roll
dec
push
push
mov
jp
xor
sub
lcall
jbe
cmpsb
mov
popl
sbbb
ret
ja
inc
adc
xchg
lcall
dec
loopne
subl
fsts
jle
scas
lgs
into
aad
pop
inc
sub
mull
xchg
pop
add
icebp
mov
icebp
pop
jmp
inc
mov
cli
pushf
in
scas
loope
mov
push
sub
mov
or
insl
dec
ljmp
cmp
stc
and
repnz
in
cmc
mov
push
int3
mov
cmp
adc
data16
jmp
push
inc
ds
push
les
call
mov
fwait
add
jae
aas
jne
mov
xchg
mov
adc
cli
ficoms
sbb
lods
pop
out
out
gs
sarb
jne
xchg
cmc
pop
adc
in
cmpsb
push
and
jle
xor
out
sbb
lods
aad
cld
pop
aaa
xchg
xor
pop
adc
stos
sahf
iret
sbbl
test
sub
out
ret
xchg
dec
add
outsl
push
pusha
and
pop
add
inc
and
fwait
dec
decb
lock
idiv
adc
scas
pusha
ror
inc
es
mov
adc
push
push
nop
pop
pop
mov
mov
gs
jbe
in
dec
jo
push
dec
push
mov
cmp
negb
xchg
popa
aaa
dec
dec
dec
imul
jl
shl
fistl
or
rolb
enter
xor
sub
scas
test
loop
rcl
jle
inc
mov
sbb
add
in
dec
or
je
pop
sbb
add
and
out
push
mov
xchg
add
push
mov
dec
dec
lods
aad
adc
jae
hlt
mov
push
xor
or
sti
cltd
ss
cmpsb
adc
xor
and
push
stc
outsl
cmc
inc
je
orb
dec
inc
dec
mov
cltd
dec
stos
sarl
sub
cmp
int
cmp
pop
outsl
fwait
xor
test
pop
and
xor
js
push
pop
shll
cmpsl
and
xor
icebp
adc
je
mov
js
or
mov
ljmp
and
dec
pop
bound
mov
idivl
pop
rcr
stos
pop
inc
push
shll
or
lods
sbb
dec
mov
sahf
in
sbb
les
jns
inc
rcll
in
ds
mov
loope
push
mov
lock
xor
sbb
movsb
aas
sbb
scas
pusha
xor
xor
jmp
and
pop
sub
ret
clc
stos
ljmp
mov
push
sbb
adc
dec
mov
rcll
mov
sbb
pop
adc
sbb
call
sbb
push
ljmp
mov
pop
mov
inc
insl
inc
fwait
sbbb
pop
or
mov
call
rcll
scas
out
xor
mov
jo
call
jb
sub
adc
cmp
dec
std
loope
lret
cmpsb
adc
mov
call
shrb
mov
std
cmc
xlat
stc
popf
loopne
xlat
lret
mov
in
xchg
xlat
scas
fildll
push
push
inc
lcall
cmp
aad
and
fmuls
xchg
jg
lods
cmp
test
dec
sbb
insl
nop
inc
mov
fdivrs
inc
sarl
cmp
jecxz
jge
repnz
jno
cmp
sub
fdivs
inc
push
cmp
fs
mov
push
xor
sub
adc
push
insb
dec
add
pop
je
mov
mov
cwtl
or
cmp
lahf
sti
outsb
adc
mov
jmp
nop
test
pop
sti
out
pop
and
scas
push
sub
jl
adc
add
pop
dec
ret
cmp
mov
sbb
or
xor
and
sub
jge
mov
fimull
movsb
pop
movsb
xchg
inc
pop
cmp
lret
push
xchg
roll
imul
add
sub
cmp
sub
push
pop
jle
sbb
mov
mov
inc
add
dec
lea
xchg
add
ret
or
insl
mov
test
inc
cmc
xor
pop
xorb
test
dec
mov
stc
jmp
pop
popf
add
mov
flds
or
imul
lcall
movb
adc
jmp
test
push
mov
sti
xor
aaa
iret
inc
mov
jns
imul
addr16
dec
push
add
fcmovb
shlb
push
jp
pop
loopne
or
movsl
lret
sbb
push
and
pushf
loope
decb
mov
mov
fs
xchg
jmp
dec
fldt
xchg
fs
or
fwait
es
loop
and
sbb
cmpsl
in
int
mov
aas
pop
lcall
inc
movsb
add
fcoml
sub
sbbl
icebp
in
outsl
sbb
add
adc
imulb
je
cmpsl
out
into
sub
in
push
ss
push
adc
xchg
mov
in
or
lcall
push
sub
add
pop
frstor
adc
adc
xor
cmp
cmp
test
mov
clc
cmp
insb
fwait
cmp
mov
lahf
aam
xor
jns
repnz
mov
cmp
mov
xchg
ja
mov
in
movsl
mov
cltd
xchg
aas
mov
sub
fmulp
sbb
dec
cmc
xorl
ret
xchg
mov
cmp
jl
push
xchg
jae
fwait
push
les
jge
jl
add
lds
pop
cltd
or
add
sub
xor
idivb
mov
push
aad
mov
xor
jne
popa
sub
icebp
cmp
mov
lods
sbb
xor
push
mov
push
out
incl
jle
or
clc
out
dec
cltd
in
das
and
repz
in
lods
inc
fmuls
ljmp
ror
dec
cmp
add
push
in
xor
jecxz
cmp
arpl
push
pop
gs
sbb
jmp
pop
add
rep
stos
mov
es
xchg
push
nop
shll
enter
inc
push
lock
adc
addr16
lods
inc
add
dec
mov
add
jl
mov
ret
popa
mov
and
inc
sbb
xor
stc
push
stc
data16
bound
mov
ds
sbb
jbe
mov
inc
add
iret
push
loopne
push
cmovge
xchg
adc
mov
pop
sbb
fisubrl
push
mov
dec
div
pop
xor
mov
adc
xchg
xor
push
pop
frstor
packuswb
xlat
inc
negb
movsb
popa
in
aas
push
sbb
sahf
addr16
lret
stos
push
imul
mov
mov
bound
cli
add
xor
push
xor
shlb
insb
mov
sub
xchg
jl
xchg
sub
mov
push
outsl
push
in
dec
xor
and
ja
fadd
cmp
pop
jmp
fimull
int
inc
stos
lea
xor
mov
popa
je
mov
insb
sbb
popa
or
and
repnz
hlt
lret
pinsrw
aam
movsb
leave
js
dec
sti
sub
pop
add
cld
fdivrs
cmp
xchg
mov
jg
pop
sbb
cmpb
jo
mov
add
test
out
and
mov
aas
pop
push
pop
enter
sub
jo
outsl
ss
movsb
lods
dec
lea
loop
ja
or
jmp
mov
jmp
mov
test
or
nop
mov
fcmovne
push
push
mov
mov
cmpsl
xor
cmpsb
ret
push
outsl
push
pop
rcrl
cmp
mov
mov
sar
adc
movsl
cli
sbb
jge
sub
mov
aas
sub
push
xchg
inc
inc
jge
mov
jne
pop
push
dec
jge
in
cmp
xchg
mov
mov
xchg
cli
xchg
mov
push
inc
or
cmp
pop
fstl
push
sub
add
xor
sahf
stc
jb
and
imul
nop
add
dec
mov
fstl
mov
or
pop
jo
testl
adc
nop
arpl
push
insl
sti
dec
sbb
ja
in
adc
enter
notb
sub
out
inc
cmp
pop
fcomps
inc
insl
popa
fisttpll
fsubl
jbe
and
mov
jp
xor
cmpsl
fdivl
rorb
rcl
xchg
or
out
adc
inc
cmpsl
mov
sub
pop
inc
or
and
mov
cmp
stos
test
insb
dec
xchg
sbb
mov
add
pushf
fstpl
int
sub
mov
lret
decl
pushf
cmp
mov
xchg
stc
adc
cmp
rcrb
mov
sbb
mov
pop
into
adc
sub
add
dec
decl
popf
add
cmp
dec
xchg
daa
pushf
imul
mov
dec
push
in
mov
clc
add
insb
mov
fnsave
pop
mov
xchg
inc
in
popf
lret
aad
test
and
cmp
pop
jp
jge
xor
add
sti
push
push
das
movsb
push
or
mov
adc
js
jmp
mov
imul
mov
pushf
aam
cli
addr16
pop
push
and
inc
pop
mov
mov
xchg
sbb
mov
dec
scas
dec
xor
les
jmp
push
nop
xchg
pop
ds
adc
rcrl
jge
lahf
adc
or
popa
sarb
jno
jl
dec
aaa
cmp
int3
sub
push
popl
rol
lods
add
or
mov
loopne
imul
fld
mov
pushf
test
lods
popf
push
sbb
test
int
call
adc
dec
filds
fwait
and
xor
movsl
ljmp
outsb
xchg
sbb
jns
addb
pop
dec
dec
xor
sub
rcrl
gs
pop
push
lock
test
and
push
outsb
sbb
hlt
aas
mov
out
dec
or
enter
dec
faddl
stos
into
jbe
mov
pop
cmp
test
inc
into
mov
dec
das
aaa
cmp
ja
push
aas
out
ds
push
popf
mov
xchg
sbb
cld
cmp
addl
mov
shll
ja
ss
movsb
mov
lret
jmp
mov
aaa
insl
push
mov
out
adc
loope
scas
jecxz
xchg
faddl
cmpsb
popf
ljmp
loopne
lea
mov
sbb
jo
sbb
mov
shlb
jle
fwait
mov
dec
arpl
icebp
mov
xchg
pop
ret
mov
jle
stc
call
add
aad
sbb
xchg
pop
shll
sbb
leave
fmul
nop
loope
pop
push
out
adc
lret
nop
sbb
ja
push
in
in
popf
aas
and
js
sbb
dec
sbb
cmp
cmp
jne
addb
xor
lods
mov
mov
iret
and
loopne
xlat
das
insl
insl
daa
jbe
stos
call
xchg
outsl
inc
mov
sub
xlat
xchg
push
xchg
mov
push
xorl
pop
test
mov
xor
adc
imul
cmpsl
mov
pop
xchg
or
ds
push
adc
mov
push
or
mov
pushf
mov
inc
loopne
ret
int
insb
les
cld
mov
dec
mov
pop
fidivl
stos
inc
jno
repz
sub
or
xchg
mov
dec
mov
add
fsubrl
and
sbb
inc
out
out
dec
mov
sub
mov
mov
cmc
jmp
fsubl
sbb
push
stc
sub
sbb
rcrl
rcll
mov
fwait
jl
test
or
cmp
add
and
lock
and
pop
rorl
std
pusha
push
lock
in
ljmp
lds
lock
adc
das
and
adc
inc
test
aad
std
mov
adc
inc
add
jb
dec
sbb
roll
sub
pushf
insl
or
lret
outsl
inc
inc
mov
inc
sub
cmp
sbb
or
dec
adc
mov
jle
push
lahf
aaa
jns
icebp
dec
rorl
icebp
sub
mov
mov
mov
jp
fcmovu
mov
mov
mov
icebp
shrb
jne
inc
push
std
pop
add
jl
or
imul
dec
mov
shr
fdivl
mov
add
fisubrl
pop
ljmp
mov
or
jbe
dec
movntq
out
add
leave
or
insb
fildl
mov
test
cmpsb
pop
andl
or
cwtl
xor
mov
cmc
push
mov
sti
lcall
cmp
mov
dec
fcoms
jno
jmp
lods
clc
mov
pusha
rolb
push
int
xchg
jne
sbb
loope
sbb
sub
jne
mov
mov
or
push
lret
pop
mov
xchg
je
outsl
cmp
push
cmp
test
movsl
pop
add
popa
ficoms
xchg
js
mov
sub
jg
push
std
call
int3
das
add
mov
test
and
jg
mov
push
mov
call
mov
mov
cltd
cmp
in
stos
push
mov
adc
and
xorl
bnd
mov
jge
movsl
mov
inc
jns
adc
pop
inc
sbb
jae
dec
jne
xchg
loopne
jne
scas
rol
aam
lock
mov
and
clc
inc
icebp
pop
movsl
mov
dec
adc
or
inc
mov
pop
mov
inc
les
int
or
mov
lods
hlt
add
orl
mov
jnp
jge
int3
out
mov
cmp
ret
scas
pop
stc
aaa
ret
loop
dec
popf
adc
rcl
add
and
in
cld
mov
scas
lds
ja
add
sbb
loop
mov
mov
adc
adc
decl
je
dec
cli
lea
xor
xor
mov
jnp
mov
sbb
out
pop
fiaddl
cmpsl
and
push
dec
xchg
into
leave
add
lea
and
and
and
xchg
jo
jecxz
popa
adcl
fmuls
jo
lcall
fiaddl
xlat
or
les
xor
pop
xorb
push
pop
add
push
les
scas
pop
pop
cmp
xchg
pop
xchg
fisubl
ljmp
loop
dec
nop
lock
adc
sub
ret
lret
iret
pop
rol
mov
popf
or
pop
jne
mov
stos
dec
fbstp
testl
lcall
lods
je
aas
mov
cmpsl
mov
stc
ss
mov
subb
fcomi
cltd
dec
mov
jle
insl
add
jnp
rol
repnz
cwtl
mov
in
cmc
xchg
cmp
pop
aaa
jecxz
popf
cmpsb
out
and
jmp
jle
pop
xor
mov
movsl
sahf
repnz
cs
scas
pop
inc
cmp
in
pop
push
dec
sbb
mov
pop
outsl
push
and
sub
out
xor
lret
adc
fcompl
push
inc
into
ljmp
fwait
dec
popf
dec
das
ja
jecxz
jnp
dec
and
pop
xor
outsl
xchg
mov
xor
ds
jbe
loop
xor
xchg
mov
repz
pop
icebp
pusha
pop
sbb
mov
lahf
int
push
testl
pop
les
pop
push
int
jne
inc
loope
cmp
lea
inc
pop
adc
mov
test
fimull
int3
sub
mov
lahf
xor
mulb
nop
add
mov
addr16
sbb
mov
cmp
out
loope
pushf
sub
sbb
inc
int
stos
dec
or
dec
sub
inc
mov
in
mov
adc
pop
test
adc
and
cwtl
mov
ja
inc
movsb
mul
popf
add
push
shrl
sbb
xor
stos
rcll
lcall
jmp
pop
in
sbb
or
aas
pop
gs
rorb
outsl
push
div
les
aad
pop
xchg
jbe
shll
xor
repz
pop
sti
fcmovne
mov
add
dec
lret
and
jmp
lahf
jle
out
jge
push
clc
jne
movsl
dec
cmp
lret
or
jae
push
loop
aad
fidivrs
test
xchg
cs
sbb
in
push
out
shlb
inc
fucomi
iret
push
add
jge
jecxz
fwait
sahf
test
xor
loope
pop
lock
and
aaa
mov
mov
iret
repnz
mov
pop
arpl
fadds
js
dec
sub
inc
sub
push
data16
roll
jp
mov
or
loopne
int3
ss
add
jg
mov
dec
scas
jae
hlt
push
frstor
xlat
scas
xor
mov
sbb
shrl
jno
and
iret
push
lock
push
xchg
xor
add
mov
dec
mov
shrl
out
and
add
xchg
and
push
mov
adc
cmp
out
fcomps
add
fucom
sub
fadds
or
adc
mov
or
adc
xchg
js
int
popf
cmp
shl
push
mov
mov
ds
loopne
jecxz
js
iret
inc
ljmp
mov
lahf
out
popf
pop
mov
pop
mov
out
mov
inc
mov
js
aam
xor
imul
xchg
xchg
xchg
xchg
mov
inc
rolb
adc
pop
into
dec
mov
clc
bound
ds
jecxz
dec
xor
inc
push
mov
lock
jae
cmpb
in
mov
addb
lock
lea
pop
cmp
mov
ds
jno
pop
jge
dec
je
mov
jb
xchg
push
sbb
dec
cmp
dec
mov
int
mov
adc
mov
out
lods
imul
mov
sarb
mov
sarl
iret
shr
cld
icebp
mov
testl
gs
jle
xchg
push
jo
cmc
movsb
insb
pop
mov
add
push
ret
repz
aad
sti
test
scas
cs
xchg
aad
inc
mov
scas
pop
imul
xchg
outsl
loope
mov
push
insl
push
je
es
jl
jmp
pop
xlat
or
mov
jge
int
rolb
les
mov
in
jno
lock
xchg
sub
jle
fldcw
add
mov
pop
jo
xchg
aad
cmp
inc
outsb
inc
sub
les
jno
aas
push
inc
jbe
cmpb
and
sub
fstpt
cli
xor
fiadds
and
mov
inc
cli
jns,pt
fistpl
xor
push
in
repnz
mov
cmc
cmc
mov
outsb
stos
push
repnz
pop
cmp
dec
in
push
loopne
fistpll
cld
roll
sahf
add
ficomps
outsb
mov
cmpsb
enter
mov
leave
mov
pop
sbb
mov
mov
jbe
and
sbb
js
jb
jo
sbb
pusha
sbb
jb
mov
lea
add
mov
lahf
inc
xchg
jl
xor
in
and
sahf
enter
jmp
inc
insb
jle
ret
out
stos
inc
mov
mov
int
lods
xchg
mov
out
jp
cmpsl
inc
iret
adc
sub
out
pop
sub
or
fwait
pop
lret
mov
ljmp
and
fldl
add
cmp
imul
lds
xchg
add
testb
sub
adc
add
jmp
addr16
popf
pop
mov
cmp
clc
mov
push
dec
and
xorl
movsl
xor
nop
dec
xchg
rcrb
and
cli
xlat
movsb
inc
lcall
leave
test
mov
mov
jmp
mov
push
xor
fisttps
lock
mov
pop
xchg
lahf
call
fistpll
push
mov
mov
pop
inc
ljmp
push
mov
push
xchg
jns
mov
or
adc
lods
dec
test
push
xchg
ja
in
sbb
mov
push
jnp
dec
mov
shll
push
loop
cmc
sbb
decb
inc
cmp
push
pusha
fdivrl
mov
mov
lock
push
or
mov
mov
jg
mov
pop
lods
cmp
mov
sbb
addr16
insw
aas
adc
sbb
lock
stos
pop
cmp
or
lds
or
lds
fs
bound
daa
mov
jge
dec
xlat
lahf
mov
lock
sahf
iret
mov
mov
in
jmp
and
jg
lock
fwait
in
and
out
hlt
pop
in
add
outsb
ret
lea
lahf
push
mov
push
jb
daa
pop
sbbl
sti
hlt
pop
je
inc
mov
icebp
and
mov
xchg
jmp
mov
jecxz
enter
pop
sahf
pop
rorl
dec
jb
xor
lcall
lahf
leave
cmp
xchg
push
sub
jne
ret
adcb
enter
pop
lret
sbb
mov
jmp
push
inc
xor
in
jle
xchg
lds
mov
loop
rcr
aaa
xchg
inc
ds
es
loopne
xor
int
imul
add
pushf
jno
push
fldln2
sub
les
sub
andb
std
mov
dec
mov
fs
add
test
cmc
mov
mov
addr16
mov
sub
imul
and
sarl
in
xchg
sbb
mov
mov
mov
pop
lods
xor
les
fsubr
dec
cmpsl
fadd
cli
and
das
xchg
daa
leave
inc
mov
repnz
mov
dec
scas
nop
jg
adc
out
out
cmc
xchg
xor
iret
mov
or
mov
in
cld
jbe
loopne
mov
leave
mov
pop
jg
push
repz
sub
ds
fwait
rcr
out
and
push
and
call
fcompl
fwait
cmp
mov
mov
sbb
sub
jmp
rclb
js
push
cmp
int
lods
loope
xchg
into
repz
and
xchg
subl
rorb
int
or
sub
or
jmp
shlb
mov
hlt
mov
das
dec
push
scas
out
cli
mov
mov
movsb
fisttps
pop
and
cmp
test
cmp
cmp
adc
test
rorl
pop
stos
fnsave
leave
sbb
cld
mov
das
cltd
test
sahf
mov
xchg
or
shll
adcb
test
mov
roll
sbb
inc
fdivp
mov
jo
std
dec
mov
sbb
cld
js
cmp
insb
and
push
push
sbb
jno
sub
loop
xchg
insb
jo
das
push
push
sub
lret
mov
lret
add
out
or
fstpl
cld
xlat
subl
push
inc
movsl
into
xchg
add
mov
lea
or
int
jg
sti
xchg
xor
inc
add
lcall
push
dec
inc
bndldx
jns
pusha
imul
das
pop
nop
mov
push
ja
aas
push
addb
mov
mov
repz
aaa
hlt
jl
rep
lock
mov
or
mov
sti
pop
add
pop
mov
or
rcll
jl
jns
mov
push
sbb
and
das
cmp
into
push
cmp
das
out
loop
push
mov
inc
imul
aad
mov
into
out
push
add
pop
lret
or
dec
std
daa
add
adc
jl
mov
add
cli
push
popf
scas
mov
test
cmpb
xchg
add
in
add
and
shl
xor
shlb
cmp
sahf
pushf
ja
mov
fwait
mov
rcr
sbb
out
jne
and
fs
test
sub
push
sbb
push
rcll
jbe
sub
jbe
mov
stc
sub
sub
mov
in
fwait
dec
stos
mov
pop
sub
push
mov
xorl
mov
sbb
test
or
int
or
sqrtps
xchg
adc
outsb
in
ss
negw
bound
xchg
add
jl
mov
xchg
push
cld
mov
cmpsb
movsb
addr16
mov
test
mov
xchg
or
cli
les
sub
or
add
mov
and
lcall
fs
shrl
add
int
cmpsb
dec
pop
int3
jbe
outsb
jecxz
inc
sbb
stc
in
cltd
push
scas
xchg
inc
add
and
scas
xorb
mov
cmp
jp
mov
add
jge
arpl
cltd
daa
xchg
sti
cli
jecxz
repnz
sbb
xchg
pushl
xor
add
dec
jle
jmp
add
fcomps
bound
fimuls
mov
cmpsb
inc
mov
cltd
das
sbb
loop
arpl
push
sub
je
mul
jae
jno
xlat
inc
out
push
jbe
cmpsb
push
fists
mov
sub
addr16
pop
lcall
jg
sti
xor
aam
sub
repz
jo
xorb
loope
ss
mov
xor
clc
mov
mov
lock
pop
add
push
ret
pusha
pop
dec
push
sub
mov
filds
mov
sti
mov
add
adc
add
or
jnp
addb
push
fwait
mov
test
popf
add
jmp
xchg
pop
xchg
repnz
fwait
or
ss
inc
and
jns
push
mov
add
lahf
cli
je
test
cli
xlat
out
cli
xchg
xchg
jns
sub
fwait
add
cmp
and
cmc
scas
fwait
aam
push
test
xchg
mov
xor
xchg
cmpl
cmp
xor
shlb
dec
push
daa
sub
xchg
mul
mov
jge
sub
jl
cmp
pusha
ljmp
push
dec
mov
dec
mov
jge
out
ret
sub
int3
push
out
scas
fs
pop
out
xchg
nop
pop
push
jbe
ret
iret
push
mov
mov
lea
out
push
fisubrl
adc
mov
adcb
mov
ret
sub
cltd
cmp
mov
jecxz
or
fmull
sbb
add
xlat
mov
int3
mov
push
out
scas
inc
cld
add
cmc
push
push
pop
push
dec
fld
push
mov
popa
lock
push
int3
mov
dec
fimuls
sbb
push
cmp
and
xchg
sub
test
sub
lret
inc
jge
sub
lahf
sbb
push
push
xchg
sub
fiadds
lods
ljmp
call
mov
idivb
mov
jae
jne
cmc
hlt
pusha
fcoml
pusha
outsb
jmp
mov
inc
or
jo
xchg
mov
xor
push
into
pop
out
ficoml
dec
ret
fwait
pop
lea
and
ljmp
shrl
push
rcrl
add
imul
fwait
or
out
pop
in
enter
pop
ds
out
fs
mov
mov
rcpps
mov
xor
std
pop
outsb
data16
mov
dec
shlb
dec
inc
or
nop
xor
xchg
cmpl
dec
push
or
lods
cltd
jne
push
sbb
adc
pop
pop
rorl
inc
in
out
popa
xor
fucomip
lret
sub
mov
inc
xchg
rolw
stos
sti
stc
jb
lock
rcl
mov
cs
adc
lret
add
push
ds
pop
cmp
or
lret
jne
iret
call
popf
fnstenv
jge
jnp
mov
data16
lods
ljmp
int
jnp
xchg
xchg
xor
addr16
push
dec
dec
pop
mov
xor
leave
adcb
xor
out
sbb
fnstcw
js
in
lods
mov
adc
inc
insb
push
shrl
cld
mov
jmp
int
sub
push
pop
fdivrs
and
cwtl
xchg
jnp
mov
or
popf
lret
fistl
leave
and
adc
ret
push
lret
xchg
dec
scas
sbb
cmpsl
sub
pop
gs
iret
aaa
mov
fbstp
jecxz
shrb
pop
hlt
call
xor
xor
das
jecxz
add
cli
loopne
push
push
xchg
xor
sti
pop
sub
shr
lret
push
rorl
cmp
test
mov
stc
dec
push
adc
call
gs
dec
push
jle
cwtl
outsl
or
inc
xchg
aas
addl
pop
ds
lods
push
cltd
ss
adc
pop
cwtl
pop
ds
fistpll
pusha
out
sub
dec
mov
cmc
sbb
outsb
jmp
sub
loope
or
repnz
mov
and
movl
add
enter
mov
xor
outsl
and
daa
pop
cmp
cmovnp
add
xchg
add
mov
cmp
push
loopne
sbb
sub
xor
inc
fdivr
inc
push
sub
test
cli
lods
inc
outsl
adc
mov
xlat
fwait
imul
sub
pop
shll
dec
inc
xor
lds
mov
stos
mov
cmp
loope
dec
push
lds
pop
xchg
notl
push
cmp
push
mov
or
or
movsb
adc
daa
cmc
dec
mov
aas
popa
filds
or
loopne
push
aas
dec
inc
sub
aam
adcl
mov
mov
and
aad
cmp
enter
fbstp
cmp
orl
push
and
jno
pop
pop
push
inc
std
mov
loope
push
pop
xor
das
rorl
pop
pop
add
push
std
dec
scas
scas
inc
out
test
adcl
inc
xchg
orb
and
fbld
repnz
les
inc
sub
add
sub
leave
sub
jnp
insl
mov
inc
js
sub
mov
add
mov
pushf
mov
vpunpckldq
dec
shl
out
xchg
cmc
jb
cld
xchg
imul
mov
dec
seto
or
mov
stc
lock
xlat
sbbl
ret
and
and
mov
scas
jb
cmp
push
stos
jb
xchg
xchg
add
mov
sbb
divb
nop
bound
hlt
addr16
inc
insb
mov
sbb
test
xor
mov
pop
dec
mov
imul
loope
mov
mov
mov
push
bound
shll
lret
mov
in
out
stc
inc
rorl
cmpsb
sbbl
stc
sbb
test
mov
adc
shll
lret
int3
pushf
push
les
scas
jae
and
xor
in
mov
pop
sar
jns
mov
mov
and
pop
ss
shr
dec
lods
jae
test
sub
icebp
mov
test
repnz
lods
lds
insb
mov
adc
test
out
xor
pop
popf
push
jmp
push
and
push
je
inc
rep
adc
jge
xchg
arpl
and
in
pop
subb
iret
lea
xor
mov
cmp
dec
and
add
lret
loopne
sbb
sbb
inc
jle
jnp
push
mov
xlat
xlat
lea
rolb
cmp
push
mov
fisubs
std
xchg
xor
mov
adc
jge
pop
xor
xchg
or
subb
mov
test
cs
outsb
mov
bound
adcb
mov
movsb
shlb
js
lahf
clc
mov
int3
mov
mov
lcall
hlt
shlb
out
cld
push
mov
in
sub
mov
and
push
ret
adc
xor
push
mov
adc
push
push
dec
xor
jl
mov
fiaddl
mov
dec
sub
dec
int
xchg
mov
xchg
lcall
xchg
ljmp
mov
cltd
xchg
inc
dec
movsl
mov
aam
xchg
xchg
sbb
mov
pop
imul
lahf
cmp
pop
mov
inc
adc
fisubl
test
test
stos
xchg
xor
movsb
add
lea
add
in
inc
cmp
push
mov
jae
mov
ret
add
subb
adc
dec
jae
int3
out
mov
pop
xchg
sbb
jns
xor
mov
loope
cmc
push
add
call
je
gs
or
mov
push
push
insb
sub
pop
xor
in
pop
jl
inc
data16
or
mov
bound
dec
and
ret
out
ds
cmp
rcl
or
lea
int3
xchg
fsubs
stos
xchg
and
mov
es
cmpsb
cmp
xor
stos
scas
insb
in
stos
mov
xor
mov
add
add
cmp
fadds
cmpb
fistl
cli
daa
out
int
test
cmp
sub
mov
sti
das
aaa
add
cmp
sbb
ja
popf
lock
mov
jnp
clc
sbb
shll
sub
lods
cwtl
xchg
cmp
xchg
clc
mov
xchg
jle
mov
add
mov
fsubrs
adc
inc
mov
mov
cmp
inc
daa
sub
xchg
clc
push
addr16
ret
xchg
lret
mov
xor
push
lret
popf
fimuls
imul
and
out
jbe
lods
or
pop
inc
jns
enter
mov
mov
jg
push
repz
in
mov
int3
mov
aas
mov
jle
xchg
mov
and
lods
inc
lcall
pop
fwait
pop
cli
pop
cld
mov
stc
mov
fwait
addr16
stos
jle
clc
cmp
adc
xor
push
vfmaddsubpd
inc
loop
xchg
adc
bound
xor
jbe
lret
loope
fisubl
cmp
test
bound
call
sub
adc
mov
les
push
sar
jns
mov
test
mov
loop
cmpsl
xchg
push
lods
out
rorb
ja
hlt
push
pop
mov
inc
sbb
in
xchg
push
lea
and
sub
pop
and
das
test
dec
into
js
mov
push
dec
dec
xchg
inc
stc
or
xor
mov
sub
fnsave
mov
pushf
dec
sub
mov
dec
jbe
mov
sbb
xlat
xchg
lds
loopne
fnstsw
xchg
adc
lahf
in
aam
mov
mov
pop
add
xchg
mov
fdivrs
sub
mov
imul
and
pop
outsl
shl
aad
loop
pop
jne
mov
loop
cmpsb
push
pop
sub
adc
lret
mov
mov
in
loop,pn
jne
add
push
mov
dec
scas
jb
mov
lods
fnstcw
sahf
cmp
pop
ret
cmc
jae
imul
gs
sbb
xchg
mov
shrb
and
dec
cmp
mov
popf
incl
xor
lea
push
lret
mov
out
pop
adc
and
mov
arpl
sbb
and
cwtl
or
push
jnp
dec
cmp
and
dec
fidivs
mov
test
leave
pusha
jmp
push
mov
out
repz
popf
mov
cwtl
xor
add
push
mov
or
ret
sti
cltd
int
popa
and
cmc
cmpsb
int3
outsl
sbb
mov
test
jns
sbb
sti
arpl
insl
dec
jmp
inc
iret
insl
les
jo
dec
insl
rcrb
xchg
xor
mov
mov
lret
adc
pop
shll
pop
insl
dec
cwtl
push
negb
mov
stc
ret
sbb
sub
and
push
imul
push
xor
subb
cwtl
cld
insb
mov
data16
test
push
movsb
xor
or
jecxz
aad
repz
aam
add
lret
mov
inc
pop
and
test
mov
lea
xor
dec
xchg
xor
adc
into
cs
push
jmp
or
push
xor
insl
jmp
mov
and
loop
inc
sahf
inc
xchg
jne
imul
cld
lea
test
jns
mov
push
push
rep
mov
add
sub
call
sub
dec
adc
sahf
xchg
test
inc
ret
jbe
out
and
imul
stc
pop
cmc
test
pop
push
or
jg
mov
cwtl
pop
in
adc
ror
jae
movsl
or
movsl
mov
mov
imul
loopne
jbe
pop
pushf
ja
add
bound
dec
movsl
ror
fucomp
xchg
cmc
xchg
push
jp
lods
xchg
cwtl
push
je
pop
rcl
loopne
jp
xor
nop
mov
in
fdiv
in
int3
inc
outsl
cvtps2pd
shll
jo
inc
dec
fdivrs
pusha
jl
add
std
jnp
out
ret
jo
add
cmp
add
or
int3
mov
repz
jmp
shl
outsb
sub
mov
adc
mov
inc
push
rol
mov
shll
fcoms
push
rolb
std
xchg
push
inc
xchg
subb
test
jg
jbe
sbb
cmp
mov
jns
insl
xchg
out
xchg
mov
out
dec
mov
jne
xor
adc
sbb
push
loopne
cmc
loop
mov
sbb
sub
jecxz
mov
push
push
jecxz
mov
ljmp
push
mov
push
inc
movhps
push
xchg
bound
data16
mov
mov
cli
xchg
sahf
push
add
aas
pop
mov
aad
movsb
mov
ds
dec
xor
fnstenv
call
lea
fsubrp
mov
cld
imul
jmp
adc
sub
sub
pusha
cltd
dec
xchg
hlt
inc
add
adc
mov
push
add
fs
and
sahf
sbb
push
sbb
mov
mov
iret
movsl
stos
dec
push
imul
ja
mov
mov
pop
sahf
adc
adc
xchg
or
leave
rcrb
int3
xchg
dec
cwtl
or
push
fistl
inc
lock
lea
cmpsb
pop
push
adc
lods
shll
repnz
int3
adc
and
adc
xlat
pushf
push
rclb
or
jge
pop
pusha
cmp
dec
and
addr16
xchg
outsl
pop
test
pusha
loop
cwtl
in
shll
pusha
xor
sbb
push
push
inc
push
test
testb
rorb
mov
lds
lods
aad
mov
mov
mov
add
dec
push
in
loopne
mov
mov
arpl
jp
bound
clc
shll
rcll
fmull
and
out
test
jns
lret
pop
xchg
and
movsb
mov
jg
add
mov
sbb
mov
arpl
cli
mov
adc
movsl
pusha
popa
leave
insb
push
aam
out
or
addl
dec
pop
lret
mov
testb
clc
idivl
mov
cld
or
cmp
lret
popf
inc
mov
jns
dec
cmpsb
sub
pop
mov
and
xchg
aas
pop
test
pop
push
and
aad
mov
xchg
mov
les
dec
test
std
mov
push
jne
mov
jae
mov
fsubs
xchg
les
aam
push
test
or
jp
jecxz
and
pop
xchg
xor
scas
xor
imul
adc
fimuls
sbb
lcall
mov
iret
outsb
mov
nop
lret
sub
popa
jg
hlt
or
scas
inc
rcrb
movsb
stos
adc
pushf
xchg
cmpsb
add
in
into
xchg
jmp
test
mov
das
int3
jmp
repnz
in
and
mov
pop
das
xchg
fldl2e
fmull
push
iret
dec
cmpsb
inc
lret
aas
rolb
loopne
jmp
in
mov
jecxz
mov
cli
aam
stc
mov
in
lea
loope
add
cmp
cmp
sbb
sbb
jbe
in
mov
pop
ffree
mov
mov
xlat
insl
or
pop
xchg
outsl
xlat
jnp
inc
xchg
dec
xchg
lock
jp
sub
mov
cltd
mov
and
xor
mov
clc
loope
sub
pop
push
sbb
and
sti
xor
adc
das
adc
jg
xor
dec
dec
adc
fcoml
lret
sub
sub
nop
out
adc
hlt
lods
shr
cli
lahf
cmp
popa
mov
pop
cmp
addl
andb
sub
inc
pop
xchg
out
adc
jle
sbb
je
xchg
insl
mov
jl
ret
sub
movsb
sub
adc
push
push
leave
jne
inc
cld
mov
mov
in
push
xor
repz
rcll
out
das
repz
je
out
xchg
jp
roll
test
fadds
xor
jmp
dec
sub
out
add
or
or
mov
push
lret
insl
ret
scas
mov
mov
lock
imul
mov
xchg
push
mov
adc
push
inc
sub
dec
add
inc
inc
or
fs
cmpl
ret
loopne
rol
sbb
mov
xor
outsb
popa
clc
inc
adcb
xchg
jmp
jmp
jo
inc
jmp
nop
popf
out
pusha
inc
xchg
dec
jb
and
pop
mov
es
or
adc
lock
add
jnp
inc
cmp
mov
pop
push
movsl
inc
aaa
xchg
stc
xlat
imul
test
stc
lds
jnp
insb
push
pop
fisubrl
jecxz
jns
ds
and
neg
jo
sub
nop
lea
out
xor
mov
movsb
popa
cltd
es
test
mov
int3
mov
mov
inc
adc
inc
xor
jg
andb
out
loopne
push
xor
lcall
insl
gs
lds
mov
in
cmp
dec
inc
xlat
cmc
in
add
sbb
sub
pop
imul
mov
fdivrl
mov
ja
or
adc
pop
dec
mov
mov
aas
and
ljmp
mov
into
sbb
xchg
sub
lret
negl
clc
loop
stos
cmp
fdivl
adc
imul
sbb
push
lods
scas
dec
aaa
inc
movsb
shr
inc
mov
rorl
mov
xchg
aam
mov
xor
mov
push
cmp
jae
fs
and
or
pushf
add
out
mov
push
int
pop
cld
add
dec
test
sub
jns
scas
imul
xchg
lahf
lea
cwtl
out
imul
lock
scas
mulb
addr16
shl
push
add
xor
daa
leave
and
pop
pop
dec
adc
add
and
and
arpl
push
sub
movb
repz
sub
aam
adc
mov
popf
cmp
test
push
or
rorl
data16
adc
leave
imul
adc
ljmp
sub
jge
xor
cltd
scas
leave
adc
mov
xchg
clc
xor
mov
scas
insl
push
xchg
xor
ffreep
int3
dec
add
mov
xchg
hlt
pop
xor
add
shlb
fldcw
push
cli
fs
xchg
inc
xchg
shrb
pop
pushf
cwtl
and
push
push
insl
int3
adc
movsb
add
adc
into
mov
bound
inc
push
lods
mov
jmp
mov
rcl
je
dec
add
fwait
jbe
add
push
mov
dec
repnz
add
jecxz
std
loope
xchg
add
icebp
cwtl
lret
pop
pop
jnp
mov
cmpsb
xor
fcoms
ss
lret
adc
inc
call
call
loopne
pushf
xor
hlt
inc
pop
xlat
sbb
or
adc
das
shll
xor
dec
or
jae,pn
mov
in
shrl
in
mov
stos
xor
push
das
add
pop
adc
adc
xchg
mov
int
repz
shlb
mov
in
mov
mov
std
mov
push
ljmp
push
out
ficoms
dec
test
das
ss
push
or
mov
dec
cmp
arpl
jmp
enter
fwait
in
lock
mov
adcl
aad
rcrl
aas
movsl
push
lret
or
xor
jnp
pop
rolb
push
or
popa
or
jae
inc
or
xor
cmp
movsl
test
mov
xchg
repnz
mov
subl
mov
pop
inc
fldt
or
popa
xchg
mov
outsl
push
out
dec
test
cmp
pop
sub
push
cltd
daa
push
push
es
jb
enter
je
cli
lret
repnz
dec
pop
xor
inc
fs
push
adcl
enter
inc
int
dec
sbb
mov
test
adc
lret
sub
mov
cltd
xor
fsubrs
into
ret
push
mov
js
inc
out
jo
pop
popf
std
enter
es
negl
lahf
sub
clc
xor
mov
and
cwtl
add
call
loop
or
jns
dec
cld
or
mov
je
mov
jno
mov
mov
sub
addr16
iret
adc
lahf
sub
or
pop
sbb
out
movsb
mov
js
or
hlt
mov
dec
je
sar
xlat
pop
ja
mov
push
mov
mov
xor
push
jecxz
rol
mov
fidivrs
mov
dec
jns
adc
jbe
push
les
icebp
xor
jmp
pop
testl
rcll
imul
jle
cmp
push
mov
hlt
movsl
jo
lods
hlt
push
dec
ljmp
sbb
mov
dec
out
scas
xchg
mov
and
inc
inc
ss
jbe
mov
les
jle
cmp
cli
dec
insl
adc
int3
call
popl
sbb
lcall
jb
fs
jo
jecxz
sbb
lock
fldenv
adc
xchg
and
rcll
scas
sub
mov
or
out
lods
stos
ret
dec
nop
mov
and
popf
mov
adc
lock
dec
cmp
sbb
subb
push
ret
fcomip
inc
sub
sbb
fisubl
out
ss
aaa
dec
arpl
iret
pop
and
rol
in
lcall
cltd
sbb
push
aaa
adc
in
mov
cmpb
xor
fidivl
test
aam
pop
mov
arpl
sub
push
inc
fistpll
xor
sahf
andb
lds
add
cs
mov
mov
inc
push
mov
push
fdivs
jne
fwait
xchg
pop
add
or
mov
jge
mov
ljmp
clc
orl
inc
loop
hlt
dec
xor
adcl
dec
je
adc
pop
mov
testb
push
pushf
add
adc
and
sbb
add
xchg
pop
pop
ss
pop
add
jb
cmp
xor
repnz
lret
and
sub
pop
repz
inc
loope
aad
ds
xchg
add
test
inc
popf
test
sbbl
test
push
and
jb
dec
sbb
neg
dec
lock
and
jecxz
cmp
jl
jae
push
xor
pop
inc
cwtl
xor
dec
xchg
insl
fpatan
mov
sub
jecxz
insl
add
pop
pop
sbb
or
pop
cmp
lcall
pop
pop
packuswb
pop
jle
inc
cmp
mov
xchg
aam
push
xlat
sub
add
out
sbbb
dec
mov
mov
xor
out
dec
lds
scas
xchg
fld
shll
scas
sbb
pop
leave
das
jno
pop
pop
jb
rolb
pop
outsb
bound
or
fwait
cmp
mov
mov
ljmp
test
lahf
cli
imul
lock
not
mov
push
sub
sub
jl
test
lret
push
dec
stos
mov
repnz
ljmp
and
imul
push
lods
adc
fwait
outsb
jecxz
out
popf
inc
aad
mulb
test
shrb
push
int
xchg
xchg
xor
sub
out
pop
dec
add
repz
popa
lret
sti
dec
pop
fs
push
mov
and
popf
loop
jle
adc
lods
lret
out
test
aam
jp
jge
xchg
test
movsb
incb
enter
push
pop
lods
add
pop
cmp
xchg
jmp
popl
fidivs
xchg
sub
xchg
sbb
xor
pop
fsubs
sub
dec
push
insb
mov
aaa
dec
dec
hlt
cmpsl
int
pavgb
inc
aaa
sbbb
popf
jns
or
xchg
inc
xchg
stos
outsb
sti
push
data16
jo
xchg
fildll
sbb
enter
mov
xor
cmp
add
cmp
dec
and
adc
in
jns
fs
cmp
movsl
aaa
jge
pusha
lods
cmp
enter
icebp
adc
clc
dec
stc
mov
loopne
aam
enter
add
out
icebp
xchg
bound
and
xchg
push
push
into
push
add
mov
xor
xchg
ja
and
clc
testl
daa
aam
outsl
cmp
pop
imul
call
push
jo
add
mov
jno
sub
dec
pop
cmc
add
lods
xchg
cmp
or
mov
cmpsb
rorl
outsl
inc
jmp
lcall
and
fs
aaa
loop
out
fistpl
add
mov
add
sbb
in
ljmp
test
imul
push
bound
xor
cmpsb
ja
mov
jmp
outsl
pop
in
mov
xchg
imul
lret
push
loope
cwtl
xlat
outsb
mov
sub
or
loop
and
orl
jp
arpl
xchg
call
and
lret
fwait
icebp
dec
mov
or
sbb
adc
clc
call
cli
inc
js,pn
push
lods
lcall
and
xorb
dec
push
jae
es
xlat
xchg
add
push
adc
and
pop
aas
push
sub
int3
xchg
call
jecxz
in
popa
nop
scas
mov
or
lods
cmp
enter
xor
out
inc
and
scas
add
xor
mov
imul
jmp
test
adc
aam
ds
sub
xorl
push
out
mov
shlb
adc
push
and
mov
pop
insb
mov
xorl
sub
inc
mov
cmpsb
insb
lcall
mov
dec
pop
adc
sbb
rcl
push
test
inc
add
test
mov
xchg
bound
out
ljmp
inc
jnp
lock
cmc
push
iret
cmpsl
inc
add
push
in
jnp
and
mov
loop
outsl
pushf
cmc
ss
jg
stc
andl
push
dec
push
and
jae
mov
jle
cmpsb
lahf
ret
in
movsl
lds
popa
stos
ffreep
push
push
aam
aam
cwtl
cmp
push
cs
pop
orl
sti
mov
les
sbb
mov
pop
add
dec
sub
lds
jg
xchg
cmc
xor
frstor
mov
fwait
and
push
aaa
jmp
lods
insb
pop
les
xchg
inc
inc
xor
dec
ret
or
out
inc
fsubrs
movsb
ljmp
insb
pop
add
push
xor
popa
sahf
adcl
addr16
jg
inc
fs
mov
and
in
mov
inc
add
inc
popfw
push
cmp
leave
xorb
push
movsl
ret
sub
or
dec
jbe
sbb
and
dec
jmp
dec
dec
cltd
xor
sar
ficomps
sbb
fsubrs
dec
lods
jnp
cltd
lods
or
lahf
repz
repnz
cmp
aaa
ret
mov
in
push
ja
sbb
push
cltd
nop
shrl
rorl
jmp
insb
out
popa
pop
cld
cmpsb
not
cmp
or
adc
leave
sahf
sub
add
aad
and
inc
out
or
sbb
mov
outsl
xchg
insb
aas
cld
add
xor
ret
push
mov
sub
mov
lret
adc
leave
mov
fldcw
jecxz
repz
jo
stc
lahf
xchg
loop
adc
add
add
push
add
pop
and
loop
jl
ret
outsb
adc
push
test
ret
and
loopne
xchg
lods
je
inc
sub
jg
dec
jb
sub
and
stos
xchg
pop
repz
fwait
mov
or
mov
sbb
pop
mov
pop
push
fidivrs
es
xlat
mov
ljmp
ss
jecxz
in
sub
sbb
pop
test
inc
dec
fs
sbb
fisubl
outsb
and
sbb
pop
mov
sub
cli
cmp
nop
mov
pop
aad
aas
cmc
add
dec
pop
ss
jl
add
movsl
shll
and
inc
cli
outsb
mov
or
jle
mov
imulb
cmp
push
int
cmp
fisubrl
mov
dec
add
and
mov
cwtl
das
call
adcl
pop
jno
das
rclb
subb
cld
jne
mov
fsubrl
in
jmp
inc
sahf
mov
xlat
push
push
lret
aad
popa
pop
xor
push
lock
cmpsb
dec
enter
dec
imul
add
rorb
mov
push
push
and
xchg
out
or
mov
sbb
shl
mov
xchg
mov
dec
lret
dec
or
pop
jb
test
mov
negb
stos
gs
pop
xchg
sub
fwait
and
xor
xor
mull
fwait
add
and
iret
stos
pop
iret
adc
add
push
mov
stos
inc
es
push
xchg
aam
sti
pop
sub
ljmp
ss
test
mov
orb
test
icebp
les
sahf
data16
mov
in
aam
pushl
loopne
add
loop
rcrb
dec
pop
cmp
sub
pop
jns
inc
xchg
js
int
sbb
cmc
inc
shrl
icebp
sbb
xor
push
test
es
movsb
xor
leave
in
lock
test
cmp
fs
ljmp
jl
inc
mov
pop
js
jbe
call
mov
frstor
push
in
std
leave
stc
in
pop
es
fsubrl
mov
sub
xor
aad
inc
arpl
sbb
adcl
mov
pop
cs
negb
cmp
test
orb
rolb
mov
ljmp
lods
mov
jne
mov
or
idivb
cmc
movb
cmpsb
rorb
movsb
mov
push
add
lret
ja
xchg
dec
jge
outsl
add
ja
cmp
jecxz
xor
test
sbb
icebp
cmp
inc
or
pop
mov
xor
in
dec
xor
insb
pop
mov
jecxz
in
shll
sub
xor
stc
dec
pushf
loop
mov
inc
fidivrl
lea
call
pop
add
iret
fsubrl
push
cmp
xchg
mov
sub
xlat
cmpsb
mov
push
or
sbb
stos
add
fstpt
pop
add
mov
push
in
cld
repz
lods
js
ja
push
mov
mov
stos
cmp
jne
mov
jo
mov
cmc
jb
movsb
cmp
push
andb
sub
fidivrl
dec
outsl
dec
and
outsb
das
fistps
mov
lahf
fiaddl
mov
daa
adc
stos
ss
xchg
bound
std
sbb
xor
mov
sbb
les
je
jp
fs
and
sbb
aaa
stos
mov
jno
xchg
xor
sti
shl
sbb
ja
jbe
add
nop
jo
insl
repnz
shl
push
sbb
jno
adc
mov
das
or
fdivrl
icebp
adc
cmp
jge
es
sbb
jno
add
std
adc
popa
jl
popa
jge
cmpsl
rep
xor
jl
push
ret
mov
repz
jo
movl
or
icebp
push
stc
or
int3
dec
jmp
push
sbb
icebp
stos
imul
push
adc
add
dec
fwait
mov
lds
enter
mov
loope
jp
test
sub
pop
lds
and
fiadds
rorb
sti
jno
inc
arpl
gs
adc
stos
testb
xchg
xchg
pop
lds
pushf
mov
jbe
mov
add
mov
imul
mov
push
or
and
movsl
push
xchg
push
jmp
add
jne
icebp
pop
dec
pop
enter
mov
fsubrs
hlt
mov
add
call
lahf
sub
cmp
and
bound
ds
fisttps
std
dec
aad
push
adc
mov
mov
mov
adcb
jmp
sub
jl
inc
nop
imul
jno
jp
xchg
scas
lret
add
push
adc
orl
sbb
into
loope
mov
hlt
sub
add
cmpsl
ret
inc
and
fcmovb
mov
fists
sti
dec
pop
sub
dec
push
xor
pusha
shlb
data16
cmc
adc
lods
sub
jmp
xchg
popf
popf
or
mov
sbb
xor
cld
and
jle
xchg
xchg
jno
int3
mov
fisttpl
push
test
lret
leave
pop
shrb
push
sub
push
in
adc
movsb
ds
cmp
fwait
in
faddl
add
rol
jge
inc
in
or
clc
jb
xor
cmp
sub
mov
jbe
call
sub
or
or
jmp
push
leave
nop
insb
aam
cmpsl
mov
outsb
insl
pusha
sub
xor
jns
jo
repz
shlb
xchg
mov
sarl
push
insb
loopne
into
or
push
loop
pop
xor
orb
sti
lret
lret
xchg
fists
les
sbb
jecxz
pop
sub
imul
xor
xor
mov
push
andb
and
jbe
xor
xchg
out
ficomps
test
mov
push
mov
repnz
mov
and
rcll
test
cmpsb
add
test
outsb
lret
mov
ja
notl
cs
fcoms
jmp
push
and
cmp
call
ds
mov
popa
jnp
push
lret
xchg
xchg
pop
xchg
pop
push
into
and
or
mov
outsb
pop
shll
cld
adc
pop
push
sub
int3
clc
hlt
dec
fwait
aam
cmp
js
or
enter
adc
add
testb
mov
ret
pop
sub
cmp
fs
jg
push
aaa
xchg
push
out
adc
insb
aaa
xchg
sbb
xor
insb
and
mov
xor
pusha
jo
aaa
dec
dec
shrl
adc
mov
loop
adc
std
push
dec
and
ss
lret
dec
imull
xor
ss
test
xchg
xchg
push
pop
sarl
cmp
int
call
leave
inc
fistps
jne
aam
fstpl
in
imul
push
sbb
push
cmp
stos
jmp
mov
inc
cmp
inc
add
push
xlat
pop
insb
jns
push
das
mov
inc
mov
repz
aad
adc
dec
mov
cwtl
xchg
orb
jmp
jne
mov
repnz
loop
push
jmp
iret
adc
mov
mov
or
xchg
bound
xor
xchg
rep
insl
rolb
adc
js
imul
incl
nop
adc
xor
dec
stos
ja
sbb
ss
mov
in
push
mov
jne
push
hlt
or
lock
outsb
jmp
pop
rcrb
push
jmp
mov
adc
cld
insb
das
lret
enter
test
lods
push
lret
es
mov
add
stos
sub
sub
daa
xchg
cmp
test
imul
mov
rcrl
mov
ja
or
shll
ss
decb
and
leave
cmp
xor
addr16
mov
and
jmp
or
dec
cltd
sbb
or
sbbl
xchg
dec
mov
dec
mov
push
mov
cwtl
adc
adc
int
jmp
xchg
fadds
dec
lods
gs
stc
xchg
xor
mov
cmp
pop
add
sbb
sbb
push
push
data16
or
or
mov
lahf
inc
xor
fs
sbb
gs
mov
nop
lahf
into
lods
les
dec
test
sub
fmull
test
xchg
add
cmp
inc
repnz
or
imul
into
popa
test
cmp
in
xchg
insb
cmp
or
stos
sub
mov
out
jmp
mov
into
sub
icebp
mov
push
pushf
fdivrs
add
sub
xor
outsb
cmp
imulb
push
push
subb
pop
mov
jle
add
or
ds
enter
sbbb
dec
imul
imul
or
mov
in
dec
push
stos
rcr
aas
sbb
pushl
push
scas
repz
dec
fldt
in
fwait
nop
pushl
mov
gs
mov
push
ss
dec
cltd
cmp
push
xchg
sbb
xchg
sbbb
cmp
or
xor
in
pop
add
outsb
ljmp
iret
jl
pop
cli
jmp
mov
xchg
push
cld
inc
push
jmp
mov
lcall
fldcw
test
movsb
mov
pop
pop
xor
xor
push
sbb
fcompl
pop
dec
ss
jae
lods
sti
sub
pop
push
add
scas
xchg
lods
jge
jno
dec
fbstp
mov
xor
es
punpckhbw
popf
sub
add
xor
xor
int
inc
pop
pop
sbb
dec
cmp
lcall
in
mov
mov
sub
cltd
lcall
fcmovb
cmc
xor
icebp
imul
pop
clc
mov
aam
inc
adc
arpl
push
xchg
out
dec
jno
lret
jg
mov
add
cmpsb
out
xchg
dec
add
mov
push
xchg
cmp
mov
iret
rcr
popf
cmp
xlat
jne
push
lahf
jl
loopne
and
cmp
ss
popf
je
mov
mov
jg
jecxz
pop
inc
aad
push
fldt
and
pop
arpl
sti
jb
dec
cmpsb
sub
fldl
aaa
mov
mov
scas
add
stos
cmpsl
outsb
sbb
mull
idivb
jae
xchg
or
out
push
push
mov
mov
xor
imul
jne
mov
repnz
stos
fstpl
push
xor
push
addr16
sahf
pop
pusha
mov
sbb
mov
mov
pusha
add
jl
xchg
dec
sub
pop
mov
cld
xor
fsubrl
setbe
lahf
or
jle
movsb
cld
js
mov
sbb
std
mov
push
sub
push
fidivrl
sub
movb
mov
xchg
jo
pop
insl
jg
sub
decb
lcall
jmp
xchg
hlt
fiaddl
and
xor
inc
addl
jbe
mov
stos
lahf
js
ret
xchg
add
lock
pop
pop
sbb
cmpb
rcrb
das
das
ficoms
sar
mov
in
out
aas
or
dec
push
pop
sahf
flds
mov
mov
les
push
xor
jne
xchg
mov
fnstcw
test
xor
mov
repz
pop
sub
inc
mov
mov
mov
jne
xor
pop
inc
cs
shll
push
cli
sbb
xchg
arpl
sarl
jle
lahf
xchg
imul
xchg
jnp
push
and
or
lds
in
mov
adc
jmp
int
mov
mov
pop
loope
jns
into
dec
and
fimull
mov
cmp
inc
adc
loopne
push
icebp
add
adc
lret
mov
add
push
js
roll
aad
in
pop
xor
and
jo
je
fldt
test
imul
pusha
lods
int
jmp
jne
repnz
xchg
bound
xchg
sbb
and
add
or
outsb
add
xor
jbe
dec
inc
stos
outsb
and
jmp
stos
xor
cwtl
cmp
rcll
jl
xor
popa
and
repz
inc
jae
hlt
test
stos
push
mov
fs
xchg
scas
mov
sarb
call
xor
add
push
ret
ret
mov
scas
sbb
jge
jo
mov
stos
shrb
popa
lret
lea
je
push
sub
repz
call
dec
and
out
dec
loop
leave
in
loop
inc
aam
icebp
dec
into
test
lret
loope
mov
mov
mov
mov
clc
jns
cld
push
jge
mov
and
sub
scas
mov
out
push
inc
ret
xor
sarb
pop
data16
mov
rclb
mov
cld
pop
sub
adc
jg
std
push
sti
jns
lock
insb
pop
push
fisttps
ja
fcoml
data16
rorb
xchg
dec
xchg
jg
into
test
test
andl
push
shrb
cli
cmp
aaa
mov
inc
fsubs
mov
popa
ret
or
outsl
test
fldt
enter
sti
sbb
push
mov
push
gs
mov
outsl
in
mov
push
or
ja
es
clc
imul
dec
xchg
test
sarb
dec
pop
pop
fldcw
add
add
ds
int3
cmpsb
dec
mov
repz
out
push
lahf
adc
int
fstps
subl
mov
add
xchg
jae
xor
mov
adc
or
sbb
push
jae
pop
mov
sbb
andb
add
sbb
mov
out
add
jnp
aaa
pop
and
aas
xchg
add
je
sbb
adc
inc
bound
pop
inc
mov
mov
loop
shrl
xlat
xchg
inc
xchg
orl
push
test
enter
insl
mov
push
sbb
xchg
rcrb
ret
js
mov
add
loopne
bound
mov
xor
adc
test
cmp
int
aaa
push
inc
jno
gs
rdmsr
call
xchg
cmp
xchg
fdivrl
ljmp
push
movsb
jbe
dec
mov
cmp
lods
lret
rorl
dec
fstpt
ds
pusha
std
sbb
pop
cmp
test
add
mov
std
popf
inc
push
hlt
test
das
das
mov
pop
push
adc
subl
jo
in
mov
incl
scas
fistl
loope
jo
in
jne
mov
out
dec
negl
dec
push
jge
imul
pop
sbb
xchg
lret
jp
mov
sbb
mov
push
je
inc
jl
or
jl
jne
sbb
push
xor
dec
pusha
pop
jmp
mov
insl
push
pop
fldenv
in
pop
stc
mov
mov
and
cmp
mov
cmp
inc
out
test
mov
xor
add
add
lahf
outsb
addb
cmpsl
test
jl
mov
or
sbb
pusha
out
fs
sbb
ds
out
test
mov
jbe
in
stos
xlat
loop
or
dec
push
nop
mov
inc
push
sub
pushl
rorb
dec
mov
es
insl
xchg
addl
pop
pop
or
sti
stos
jbe
mov
inc
rorl
stc
stos
dec
ljmp
lea
or
stos
xchg
dec
cmpsb
daa
pusha
add
sbb
test
aad
sub
mov
push
and
cmp
data16
sub
push
dec
ret
mov
mov
mov
mov
gs
mov
lock
xchg
fisttps
or
in
xchg
sbb
mov
stos
repnz
mov
push
jle
je
shld
jl
mov
mov
stos
fucomp
pusha
iret
adc
pop
stos
mov
fwait
bound
std
mov
dec
cmp
lret
or
lret
xrelease
repz
inc
pop
adc
sbb
roll
xlat
repnz
xchg
cs
pop
lcall
mov
fimuls
scas
pop
clc
pop
mov
push
aam
pushf
jmp
inc
sarb
out
mov
and
push
nop
daa
and
xor
push
dec
push
jecxz
xchg
mov
sub
into
adc
cmp
xchg
imul
inc
fdivrl
dec
cs
fistps
push
imul
pop
and
outsb
cs
push
flds
icebp
add
push
jge
lahf
arpl
outsb
push
cmp
sbb
stos
in
xchg
addl
rcrl
cs
xor
sub
xchg
adc
pop
xchg
nop
xchg
stc
fldt
mov
movsb
ret
or
inc
aaa
dec
add
xor
push
push
dec
or
std
dec
sbb
jl
xchg
es
ficoml
scas
adc
lcall
cwtl
sahf
loope
in
or
int3
stos
or
mov
sbb
outsl
mov
add
mov
mov
jp
or
cmpsb
rorb
cmp
pusha
ljmp
sbb
sbb
ja,pt
lock
loope
mov
lret
cltd
popf
test
int
add
rolb
pushf
bound
sub
cmpsb
pop
push
ficoms
sub
movsb
insl
jo
push
out
sub
cmpsb
test
fs
push
or
jl
dec
cltd
inc
dec
in
add
jno
pop
mov
and
cmc
in
in
push
xchg
mov
pop
cmpl
scas
xchg
mov
mov
out
pop
mov
lcall
push
arpl
mov
repz
sub
jp
xchg
xor
dec
in
push
jnp
add
rcrb
aaa
xlat
sbb
call
aas
roll
sar
fldt
arpl
inc
cld
or
ret
pop
jl
loope
and
push
lods
fiaddl
mov
pop
inc
xchg
scas
jo
mov
or
sbb
insl
arpl
loop
mov
sbb
jecxz
dec
add
xor
pusha
xorl
jg
push
movntps
jae
inc
push
dec
push
adc
push
dec
imul
cmp
ret
outsb
jb
and
lcall
aas
pop
mov
add
push
jns
sbb
sbb
shll
lock
jbe
mov
push
mov
lods
mov
sub
and
out
and
xchg
cmp
mov
ret
pusha
mov
jecxz
jae
inc
jb
or
jne
ljmp
jg
mov
stos
leave
cwtl
or
ljmp
das
je
sahf
mov
lods
xchg
loope
push
sbb
fidivl
mov
and
sub
out
adc
xor
xchg
outsb
xchg
mov
or
mov
lahf
push
aam
outsl
xor
push
xchg
add
addb
or
mov
das
imul
data16
jmp
dec
mov
cmp
insb
sahf
jno
notb
insl
mulb
jnp
imull
jp
dec
mov
out
push
xchg
sub
ljmp
lods
and
mov
je
jo
and
test
pop
push
insb
xchg
push
push
divl
sbbb
ret
lcall
hlt
mov
dec
inc
out
pop
outsb
jmp
mov
add
add
push
rolb
push
adcl
js
mov
xlat
jmp
jmp
and
outsl
inc
xlat
lret
daa
mov
pop
adc
dec
gs
popa
repnz
xchg
xor
jmp
add
or
add
insl
aad
mov
mov
mov
sbb
in
mov
inc
js
adc
sub
outsl
or
mov
pop
popa
xor
int3
xlat
jnp
sub
adc
dec
or
lcall
movsb
and
in
mov
ds
cmpsl
or
push
adc
int
pop
dec
mov
dec
sbb
int3
leave
mov
lcall
xchg
idivb
sbb
xor
adc
movsb
andl
add
lahf
cmc
ljmp
inc
dec
in
rcll
into
fs
jo
sbb
iret
pop
mov
addr16
push
mov
pop
push
push
test
lods
mov
add
mov
fs
adc
lea
and
inc
jne
push
xchg
cmp
sub
jecxz
ror
lret
outsb
mov
loopne
ds
mov
int3
pop
shlb
addl
enter
gs
out
add
mov
fistpl
fldenv
aaa
push
dec
jno
dec
jne
shrl
lds
rcrb
jne
daa
test
movsb
jp
call
xchg
inc
jbe
daa
jb
out
sar
sub
out
stos
add
push
push
adc
lahf
ljmp
and
scas
xor
push
icebp
fbstp
roll
test
pop
incb
xlat
leave
jle
mov
push
hlt
movsb
sbb
adc
movsb
mov
movsb
data16
mov
outsl
cmpsb
push
mov
outsl
pop
jp
lret
push
in
fcomi
jnp
push
mov
int
cmp
xor
lret
add
pop
push
dec
pop
in
push
stos
cmp
mov
fidivrs
das
movsl
pop
mov
loope
and
mov
xor
icebp
enter
pushf
ljmp
pop
test
inc
aaa
inc
sbb
icebp
cwtl
mov
xchg
mov
sbb
cld
cmc
mov
ljmp
movsb
sub
movsl
dec
out
cwtl
adc
ja
mov
jo
mov
outsb
jae
fwait
dec
imulb
adcl
push
cmpsb
jns
and
adc
push
xlat
pop
js
mov
jo
scas
mov
sub
jl
adc
call
push
mov
mov
push
repz
lcall
mov
cmpsb
mov
xor
icebp
cwtl
push
je
stos
pop
cmp
and
add
mul
sub
movsl
push
divb
cmc
testb
dec
dec
rorb
pop
outsl
cltd
loope
sub
subl
inc
push
cwtl
push
scas
gs
sti
push
cmp
xchg
pop
popa
adc
lea
outsb
cmpsl
cmpsb
imul
dec
jg
push
mov
pushf
adc
call
push
add
imul
fdivl
push
outsb
cmp
ja
mov
pop
xor
fisubl
jge
js
fimull
pusha
add
push
push
fmulp
cmp
and
out
iret
cmp
inc
icebp
mov
add
xchg
sbb
lret
int3
sbb
and
fsubrl
add
add
sub
mov
adc
das
pop
outsb
ja
inc
stc
clc
outsl
inc
cmp
mov
fwait
jo
push
leave
and
or
ds
call
lahf
adc
test
test
xlat
dec
pushf
pop
or
push
add
orl
cmp
jge
mov
stos
mov
add
push
and
dec
push
or
dec
add
insl
xor
mov
pusha
popa
out
mov
sbb
ret
leave
orl
add
pop
lahf
cmpl
dec
mov
les
in
jmp
xchg
movb
loope
leave
mov
outsl
aaa
out
fldt
pop
adcl
xchg
outsl
inc
add
cltd
jp
push
addr16
adc
ljmp
jl
or
xchg
add
sbb
xchg
mov
movsl
fnstenv
dec
push
insl
adc
int
rcrb
lods
fldl
hlt
sti
leave
outsb
imul
pop
mov
aad
in
das
push
repnz
cli
out
or
rcr
push
negl
sbb
and
mov
or
push
ficompl
push
cmovge
mov
repz
and
mov
not
pop
out
out
jae
add
nop
xchg
pop
cmp
dec
aam
ljmp
je
adc
ret
lods
jmp
mov
fwait
adc
mov
add
into
std
js
stc
sbb
push
mov
sub
xchg
loope
mov
cmpsl
cs
sbb
aas
negb
mov
adc
int3
fadd
cmp
adc
scas
movsl
xchg
mov
push
stos
jmp
mov
hlt
pushf
enter
sbb
les
sarb
push
mov
movsb
adc
mov
xchg
repz
pop
std
cmp
inc
mov
push
or
cmc
or
mov
addb
pusha
cli
lea
dec
jno
pop
sub
hlt
ds
ds
into
pop
lahf
adc
test
xchg
dec
mov
pop
leave
pop
lods
and
xor
xchg
pusha
ljmp
call
out
arpl
sub
in
pop
or
js
in
lea
inc
inc
das
push
dec
dec
call
repz
push
out
or
adc
mov
push
mull
out
push
push
js
sub
repz
xchg
mov
push
jl
popf
fwait
jae
adc
xchg
or
cmp
test
dec
inc
push
dec
mov
jp
fiaddl
cli
movsb
push
add
xrelease
aas
pop
jne
lcall
fnstenv
lea
pushf
and
xor
mov
jl
dec
mov
jge
or
cmpsb
jne
leave
xor
mov
cmp
cmp
orb
pusha
pop
fsubs
je
pop
fmull
lods
int3
inc
cwtl
and
je
mov
add
mov
stos
pop
cmp
jecxz
fs
hlt
outsl
sub
xchg
aas
int3
push
xchg
call
dec
lods
jp
pop
mov
pop
jbe
aas
out
arpl
cmp
dec
xlat
pcmpeqd
or
btcl
imul
rcrb
mov
push
ret
fcmovnu
call
cmp
jmp
aas
imul
jbe
pop
divb
addr16
lods
mov
push
fildl
jnp
cmp
popf
dec
push
mov
imul
stos
inc
mul
mov
cmp
or
jnp
ret
in
aas
adc
dec
cltd
cmp
pop
fstpt
xorl
mov
movsl
es
or
xor
push
mov
jb
dec
popa
lds
and
insb
push
xchg
xor
dec
xchg
push
cmp
push
pop
push
mov
test
test
es
lret
fidivrl
mov
mov
xor
jle
hlt
add
cltd
inc
pop
lret
inc
outsl
int
jmp
andl
mov
mov
sub
aam
out
ss
xchg
jle
cmc
mov
dec
fidivrs
dec
icebp
push
xchg
rcrb
or
aaa
sub
std
dec
pop
ljmp
jbe
sbb
mov
dec
pop
shrb
cmp
je
xchg
dec
fptan
cli
pop
insb
cmp
pop
adc
xchg
pop
pop
xchg
cmp
add
mov
scas
adc
arpl
cmp
inc
inc
ljmp
ljmp
arpl
fs
dec
cmp
adc
push
stc
cli
pop
cmovs
les
bnd
xor
mov
and
movsl
jecxz
les
pusha
pop
pusha
mov
add
xchg
jge
mov
outsl
mov
lods
or
insl
mov
stos
jg
inc
gs
mov
popa
pop
mov
xorb
sub
aas
es
in
xchg
jmp
loope
data16
sbb
cwtl
pop
repnz
sub
jnp
test
mov
pop
inc
subl
shlb
and
jg
leave
ja
in
aaa
jbe
xor
clc
hlt
mov
out
or
jg
jae
add
adc
pop
mov
xchg
mov
data16
cmp
mov
sbb
data16
push
jecxz
nop
sahf
pop
jo
or
imul
repz
jns
icebp
jp
mov
stos
popa
xor
jbe
adc
frstor
loop
fnstcw
popf
outsb
ret
or
cmpsb
std
inc
mov
inc
in
fnsave
mov
sbbb
sub
xchg
std
out
nop
mov
in
xchg
addr16
sub
cs
out
add
pop
xor
cmp
sbb
dec
inc
out
aad
cltd
jg
cmp
fistpl
add
jo
adc
in
faddl
mov
dec
jp
jle
mov
test
mov
dec
jo
cmp
outsl
mov
lret
scas
jmp
aas
or
sar
and
pop
and
div
repz
fisubrs
or
testb
outsb
loop
pop
enter
dec
ljmp
jle
js
lods
rorl
out
or
call
aad
cltd
test
je
js
adc
arpl
dec
inc
sbb
in
jmp
cmc
cld
inc
push
xor
xor
xor
and
lret
es
cwtl
mov
adc
inc
push
add
das
jb
cmp
pusha
add
xchg
mov
call
xchg
test
idivl
inc
test
test
cmp
cmp
inc
cmp
adc
cmc
or
inc
pop
movsl
mov
movsb
pop
pop
pop
mov
mov
mov
fnsetpm(287
nop
insl
mov
enter
andl
add
scas
or
add
push
cmp
scas
out
adc
aad
imul
fpatan
shll
and
dec
loopne
lcall
mov
addb
popf
jecxz
aas
out
cli
add
adc
mov
bound
jne
call
mov
push
out
and
mov
and
and
xor
je
idivl
push
fwait
or
mov
xor
pop
jnp
pop
mov
and
pop
jecxz
lea
xor
jbe
mov
sbb
inc
pop
add
mov
sbb
mov
idivb
add
cmc
mov
adc
cld
push
jns
adc
arpl
stc
out
lret
fs
xor
xor
xchg
shrl
cmpsb
push
out
fwait
aaa
dec
push
add
lods
mov
inc
arpl
xor
adc
mov
adcl
jg
or
push
jl
jae
adcb
mov
popf
adc
jo
cmp
jo
in
inc
pop
mov
jmp
and
jbe
xchg
enter
in
addb
add
jne
cmp
jmp
cltd
mov
call
mov
rcll
or
aaa
fsub
jge
pusha
sti
idivb
xor
sub
or
add
pop
sbb
pop
fsubs
dec
loop
jg
xchg
and
popf
mov
sub
inc
add
and
and
sbb
hlt
or
dec
sub
or
push
push
lea
mov
addr16
or
xorl
loop
cltd
popf
inc
lahf
out
push
orl
pop
inc
adc
xchg
push
mov
cli
call
dec
and
or
lods
push
insb
mov
int3
outsl
add
jecxz
mov
mov
mov
inc
sbb
and
jo
rclb
inc
push
in
in
fsubrs
or
add
cwtl
mov
in
out
add
mov
jbe
sub
xor
cltd
add
ss
lcall
sbb
inc
outsl
sbb
test
pop
and
test
aad
dec
add
jo
leave
xor
sbb
pop
mov
or
xchg
inc
leave
add
cld
push
mov
test
int
and
jns
lea
loop
lds
jge
and
mov
pop
mov
das
sarl
mov
sbb
test
sbbb
pusha
sbb
pop
push
out
fwait
mov
xlat
ret
js
cmp
jl
and
or
sbb
nop
pop
hlt
push
adc
xor
aaa
push
in
repnz
dec
scas
inc
fwait
inc
lahf
rol
adc
push
enter
scas
xchg
cltd
jmp
or
test
rolb
sti
xchg
rorl
insb
aaa
jmp
adc
add
dec
adc
pop
bnd
loop
jp
leave
loop
xlat
adc
insl
pop
jl
and
push
fldcw
in
shlb
loopne,pn
sbb
cmp
push
bound
dec
xchg
sub
push
inc
jp
out
sarl
sub
mov
setb
aam
push
jecxz
out
push
sarl
testb
movl
inc
pop
xchg
aas
jae
cmp
mov
outsl
mov
pop
pop
cmp
inc
push
lret
lahf
push
push
outsb
test
jo
push
fs
cmpsb
adc
sbbl
outsl
lock
sub
mov
lods
rclb
inc
mov
mov
inc
mov
mov
adc
aad
cmp
cli
sbb
push
imull
jnp
jecxz
sub
test
cld
fs
in
mov
mov
jo
hlt
or
cmpsb
daa
imul
xor
sub
mov
and
jno
jg
dec
dec
and
stos
or
xor
adc
outsb
out
push
cmpsb
pop
dec
es
xchg
loopne
cs
jns
sbb
cmpl
iret
stc
loop
popf
add
xor
rol
in
xchg
jo
pusha
sbb
push
dec
add
aad
dec
testl
pop
sub
outsl
ja
movsl
movsb
mov
sahf
lcall
inc
add
test
cli
psubd
xchg
push
add
add
jb
ret
sbb
inc
push
or
popf
and
inc
test
aam
ljmp
xchg
mov
ret
push
in
js
jp
mov
xor
push
jmp
das
in
xchg
push
icebp
lret
sub
mov
lcall
decb
inc
aam
xchg
dec
shrl
outsl
subb
int3
xchg
sub
inc
xchg
popa
or
add
insb
sub
adc
sti
imul
hlt
fucomp
pop
push
push
adc
cmpsl
sbbl
dec
test
nop
mov
lret
pop
cmc
xchg
stc
mov
int3
push
pop
test
sbb
sar
int
test
pop
cmp
jb
test
pop
push
fldcw
mov
sbb
divb
cli
jl
orb
lcall
outsl
adc
cmp
push
std
out
or
mov
rol
icebp
addl
aaa
scas
flds
add
mov
shlb
add
sbb
and
jle
add
xchg
mov
outsb
lea
sti
sub
or
sub
inc
pop
push
daa
push
loope
ljmp
pop
inc
sub
loope
pop
andb
roll
xchg
pop
pop
mov
test
cmp
push
fisubrl
jbe
jp
mov
adcb
push
mov
fnstcw
inc
cmpsb
ds
cmp
mov
dec
sub
add
insl
bound
jno
ljmp
cmp
aaa
jne
pop
sbbl
cli
neg
jmp
clc
mov
std
sub
scas
push
hlt
push
add
arpl
outsl
out
in
stos
loope
jl
sub
jle
shrb
mov
cld
out
mov
or
jb
pop
jp
push
push
lds
sub
xchg
insb
mov
and
inc
add
lods
cmp
outsb
mov
bound
pop
data16
adc
rorb
aam
scas
lcall
add
cli
cmp
mov
add
fcmovnu
cmpsb
push
add
jp
ds
mov
jmp
insl
mov
dec
outsb
cmp
add
sub
xchg
in
xchg
xchg
jns
mov
cmc
inc
jne
js
jnp
cmpsl
test
mov
mov
inc
jb
call
das
pop
push
pusha
pop
out
add
sbb
icebp
xchg
sub
mov
int3
xchg
xor
insb
sbb
xchg
lods
daa
xlat
adc
popa
and
xchg
jnp
stos
scas
in
lret
mov
pusha
enter
icebp
jl
les
and
stos
loop
movsl
sub
pop
ljmp
pop
pop
jle
pop
or
pushf
lods
adc
mov
js
out
jb
inc
cwtl
in
mov
ljmp
xor
insl
repz
jns
jmp
bound
push
pusha
les
shr
and
mov
pusha
nop
test
icebp
fdivrs
jne
outsb
cmp
cltd
aam
mov
ds
loopne
xchg
pop
jmp
jne
mov
mov
cmpsb
lret
dec
cmp
pop
mov
movsb
fdivrs
fstp
into
popa
xor
dec
sbb
cmp
lret
push
sahf
inc
repz
xor
es
cmp
sbb
jp
sub
mov
sbbb
mov
sbbb
arpl
shl
jp
mov
inc
xor
jg
push
xchg
sub
ljmp
mov
xlat
daa
test
mov
shlb
push
addr16
inc
loope
pop
test
and
sbb
mov
jbe
push
outsb
xchg
inc
dec
mov
add
push
inc
loope
or
pop
fcoml
ds
lret
daa
dec
add
sub
xchg
pop
lock
push
xchg
cs
arpl
sbb
xorb
adc
adc
mov
cmpsb
call
fiaddl
filds
fisubs
repnz
rcrb
sbb
cltd
jnp
int
xchg
icebp
fs
daa
xor
lea
jo
push
cld
repz
scas
xlat
xchg
add
inc
scas
repz
stos
push
stos
out
js
xor
lock
outsl
jno
push
xor
iret
jae
lock
push
jo
push
mov
fdiv
jb
push
and
fnsave
in
sbb
pop
cmpsl
xchg
and
sahf
pushf
fimull
pop
daa
jg
rorb
mov
mov
cmp
and
or
sub
push
cmpsl
jo
cmp
insb
mov
push
roll
repz
xor
mov
frstor
or
cwtl
iret
into
jns
inc
cwtl
pop
dec
push
inc
lea
jb
sbb
adc
dec
or
iret
pop
jo
pop
inc
js
xor
data16
or
imul
mov
fildll
mov
cld
lea
lods
xadd
lcall
pusha
loop
fists
or
stc
adc
daa
mov
fs
int3
iret
aad
es
push
inc
add
aam
cmp
cmp
into
out
xor
jno
inc
popf
fildl
fsub
mov
fneni(8087
push
adc
or
mov
add
jg
aas
inc
pop
jo
sahf
push
adc
adc
pop
outsl
dec
dec
xchg
dec
mov
jb
mov
and
mov
pop
xchg
lea
clc
insb
inc
jg
pop
or
daa
push
xchg
sbb
mov
ds
dec
or
inc
rcrb
add
inc
repz
fiaddl
ret
add
popf
push
push
test
arpl
mov
pop
sub
cmp
loopne
mov
pop
add
lahf
test
sub
mov
outsb
mov
pop
jns
pop
push
push
sbb
int3
mov
mov
pmulhw
pop
mov
jl
mov
and
mov
jae
sbb
rorl
mov
push
rcl
pusha
cmp
jo
pusha
add
fdivrs
xor
lahf
cmp
std
dec
pop
and
aas
pop
ret
ljmp
push
cmp
push
call
push
fs
sub
pop
addb
jle
lods
je
sub
mov
imul
jno
mov
fisttpll
iret
nop
or
movsl
std
in
xor
imul
cmpsb
pop
jge
les
push
jb
daa
dec
les
cmp
inc
inc
mov
loope
insl
mov
xchg
xchg
and
dec
jb
xor
push
mov
mov
dec
inc
dec
test
aaa
fbstp
inc
xchg
subl
cmpsb
test
roll
jp
or
jecxz
xchg
add
xor
sbb
test
jge
nop
hlt
stc
push
mov
xor
dec
addr16
stc
dec
cwtl
push
cltd
pop
add
sbb
xchg
jmp
push
dec
mov
inc
and
fcmove
pop
push
es
lock
filds
push
insl
loop
mov
jne
ss
in
lret
sub
push
push
fcmovne
aam
imul
cmp
mov
shrl
dec
mov
cltd
inc
xor
mov
dec
adc
pusha
inc
shll
repnz
pop
and
push
xchg
cmp
xchg
mov
mov
lds
mov
lcall
cmc
jbe
jmp
sbb
push
popa
add
push
push
sbb
mov
movsl
jns
jmp
in
insb
dec
das
aas
test
addr16
mov
cmpb
popf
lahf
jmp
push
sbb
and
out
ljmp
add
lods
hlt
xlat
xor
push
orl
sub
imul
push
xchg
movsl
insb
add
lret
jo
dec
cmp
inc
cmp
mov
sub
loop
xchg
xorb
mov
adc
lods
push
outsl
jnp
xchg
and
iret
das
outsl
sub
lret
sbb
dec
jb
push
jno
iret
lock
add
dec
in
mov
dec
jg
fldenv
inc
cmpsb
outsb
add
pop
or
dec
jbe
int
loopne
pop
stc
in
mov
push
subb
add
mov
pop
int
jb
or
lcall
pusha
shl
pop
dec
push
lds
mov
adc
xor
sahf
lock
into
movsl
jmp
cmp
je
and
or
mov
mov
fmull
negl
xlat
clc
insb
lods
pop
stos
scas
clc
shll
jo
push
cmpsl
test
mov
jae
setg
insl
jns
pop
and
addr16
pop
push
mov
add
iret
lea
jmp
push
cmp
mov
enter
cmp
sub
xchg
mov
inc
push
adc
imul
insl
sbbb
cmp
in
add
xor
jle
je
arpl
popl
cmp
dec
aad
adc
inc
ret
int3
mov
cmp
mov
adc
sub
sub
inc
push
cmpsl
ficomps
sbb
xor
cmp
fs
daa
loop
inc
fcmovb
mov
dec
rcrl
jo
test
mov
cmp
cmp
mov
push
sbb
stos
pop
outsb
call
push
gs
andnps
test
nop
sub
xchg
xor
shlb
rcl
bound
imul
stc
mov
subps
mov
inc
inc
xchg
adc
cmp
stc
lods
dec
call
inc
and
mov
in
loopne
xchg
test
rclb
popf
scas
jg
or
lahf
outsl
aam
js
andl
mov
mov
roll
stc
out
in
incb
mov
dec
sahf
repnz
cmpsb
add
gs
addl
mov
ss
fs
sub
xor
repnz
cmp
add
mov
out
mov
je
rcrb
jp
into
jo
xor
xchg
hlt
jae
enter
test
adc
xor
shll
fldl
lods
imul
lret
popf
add
into
outsl
dec
lods
sahf
cmp
and
mov
dec
or
sarb
push
mov
pusha
pop
in
inc
mov
cmp
lods
cmp
jle,pn
sbb
lock
fnstcw
push
cmp
testl
sbb
mov
jle
and
ja
leave
shl
cmp
out
loope
adc
sbb
xchg
xchg
fwait
std
inc
xor
mov
inc
or
pop
gs
in
mov
and
inc
jge
scas
ret
and
subb
pop
and
mov
xchg
pusha
outsl
loop
push
popa
or
jle
scas
push
and
inc
jl
fisubrl
lds
xor
fidivl
and
fimull
mov
cmpb
mov
cmpsb
call
push
dec
ret
pop
adc
pop
shr
jno
cmpsl
xchg
xor
aam
push
xchg
add
jmp
pop
cmp
stc
leave
pop
mov
test
dec
rorl
loopne
jecxz
push
movsb
sbb
fdivl
push
or
sub
xor
sbbl
inc
js
in
cmp
decb
xchg
add
and
add
scas
loopne
cld
cmp
mov
mov
rcrb
add
cmp
repnz
mov
sahf
xchg
lods
repnz
fcmovb
adc
testl
int3
dec
dec
out
repz
in
in
cmp
pop
fdivrl
ret
ds
into
dec
in
aaa
lea
bnd
fidivrs
add
ret
mov
aas
shr
fdivs
mov
test
fnstcw
jae
mov
daa
rcl
pop
fistps
and
popa
jo
mov
lahf
or
jg
dec
jnp
mov
outsb
aam
sbb
adc
jnp
xlat
xchg
cmp
pop
sbb
test
and
xor
adc
add
dec
aaa
push
rorb
inc
jge
add
and
sub
mov
ret
adc
adc
jo
cmp
inc
jns
push
xor
loope
and
sbbl
cmp
jb
cmpb
outsb
and
push
jge
mov
imul
sbb
mov
aam
fldl
loopne
xor
push
dec
inc
jnp
and
sub
xor
int3
jecxz
jmp
xchg
clc
fdivs
pop
call
push
jno
leave
mov
lods
xchg
shlb
rcrb
or
push
jae
in
inc
xor
and
mov
int
and
popa
sbb
mov
out
jae
jne
jnp
repz
bound
mov
inc
adc
push
sarb
push
sub
lcall
in
inc
add
xchg
test
jns
fldcw
inc
push
dec
lcall
pop
and
push
in
cmp
imulb
sub
les
sub
repnz
sub
imul
xchg
mov
lret
pop
lret
sub
and
pop
pop
insl
pop
jp
popa
push
pushf
jnp
repnz
xchg
dec
dec
jecxz
and
fwait
or
mov
movsl
rcrb
dec
pop
push
cli
bound
pop
repnz
je
mov
add
xchg
popf
cs
rol
enter
aas
sahf
pop
aad
stc
int3
imul
int3
mov
outsl
sub
test
xor
sub
sarb
mov
cmp
add
into
mov
mov
ljmp
bound
stos
rol
pop
repnz
cmp
jne
push
into
ljmp
pop
or
lds
addl
pop
sub
mov
aad
pop
pop
sbb
xlat
mov
sbb
jne
dec
lods
lcall
jge
imul
idivl
mov
arpl
add
std
orl
cmp
lahf
inc
popf
pop
add
bnd
pop
sbb
mov
fmull
jle
ret
mov
cmpsb
aad
popa
and
pop
repnz
pop
sti
sbb
rolb
push
inc
push
mov
or
dec
cmc
sbb
rorb
es
in
mov
adc
insl
insl
mov
dec
xor
push
add
xlat
push
or
nop
sar
stc
and
mov
and
shll
sbb
add
cmp
jle
jne
rcll
mov
into
mov
por
cmp
mov
enter
mov
adcl
pusha
mov
push
xchg
mov
dec
std
adc
in
and
jns
and
jp
xor
add
lods
outsl
popa
or
fldcw
push
mov
xchg
ret
push
mov
fildl
push
scas
mov
test
add
roll
jl
add
sub
jbe
rolb
loope
pop
sbb
std
jbe
rcrl
mov
and
and
loopne
and
xchg
pop
pusha
xchg
xchg
xor
test
inc
and
out
iret
icebp
push
inc
jnp
addb
insb
jo
sbb
addb
sbb
add
addr16
out
movsl
pop
cwtl
xchg
loop
insl
int
add
inc
fimull
test
add
jmp
lods
and
popf
sub
fldt
jle
ljmp
push
push
jno
inc
in
xchg
inc
rcrl
jb
scas
or
or
mov
add
pop
jl
div
and
sbb
mov
and
out
adc
adc
and
sub
sti
les
cs
push
mov
dec
mov
push
mov
push
mov
lock
xor
scas
mov
jno
jmp
pop
mov
jo
push
add
jecxz
jbe
lea
mov
cwtl
sub
cld
icebp
aad
loop
jnp
mov
jle
aam
push
or
jle
xchg
filds
add
in
pop
call
cwtl
loopne
or
jae
sti
adc
pop
cs
mov
fwait
mov
cmp
lret
jle
cmp
and
inc
or
and
adc
pop
lods
push
mov
out
les
sbb
push
adc
add
xchg
popa
sbb
in
and
mov
mov
inc
stos
pushf
jae
rolb
test
scas
pop
jo
push
and
test
insb
add
lock
rcrb
jae
mov
pop
test
mov
and
imul
and
xor
loope
jmp
leave
ja
scas
push
idivb
fwait
push
fstps
push
inc
cmp
mov
pushf
and
xchg
pop
rclb
loop
and
pop
je
pop
es
add
mov
movsl
sub
push
stc
sub
out
and
scas
lock
repnz
stos
adc
add
push
sbb
and
pop
stos
movsb
lret
out
in
push
sbb
lods
xor
pop
mov
push
inc
push
mov
or
pop
mov
clts
and
mov
push
stc
je
rolb
cmpsb
pop
sub
bound
cltd
fwait
leave
iret
sbb
mov
push
movsb
outsl
int3
aas
lret
fldt
cwtl
sub
cmpsb
sbb
fbld
and
sub
and
iret
mov
jp
dec
mov
aas
cmp
sti
dec
cmpsl
sbbl
in
mov
and
stc
lahf
adc
int
adc
shll
mov
test
mov
sbb
addr16
es
add
fwait
ss
dec
bnd
push
iret
add
shll
and
mov
add
xchg
stos
out
sti
mov
into
sub
popa
cmp
inc
mov
mov
js
jmp
cwtl
call
imul
pop
cs
scas
out
add
xchg
mov
bound
push
xchg
repnz
out
std
fldcw
mov
in
pop
and
ss
jo
arpl
sahf
out
outsb
pop
mov
mov
pop
lahf
lcall
xor
imull
and
lea
jbe
dec
jae
mov
pop
ds
mov
xor
jbe
sub
test
popl
loop
lahf
pushf
ret
xorb
popa
icebp
pop
int3
lcall
scas
jl
fcmove
inc
jle
xor
xchg
sti
cld
lret
cmp
lret
cmc
pop
or
push
and
in
push
pop
xor
insl
and
out
xor
fldcw
lock
add
push
jmp
push
out
lds
mov
or
cmp
jb
cli
push
ja
or
push
insb
mov
iret
and
push
arpl
shrl
cmp
jo
out
pop
jbe
jg
xchg
incl
pushf
loop
or
jo
pop
movsb
cmpsl
movsb
inc
add
test
aad
fdivrl
pusha
movsb
pop
ret
adc
push
and
push
lahf
push
insl
test
dec
cs
adc
adc
jnp
not
loopne
sbb
push
add
test
inc
xor
out
das
aaa
call
lods
add
repz
jnp
cmp
or
dec
sub
cmp
lds
int
inc
repnz
popf
cwtl
lods
dec
cmp
cld
push
push
int3
inc
cmpl
sbb
mov
xor
push
mov
jle,pn
aas
mov
adc
and
add
orb
xor
ja
and
and
nopl
sub
sar
push
inc
filds
ss
mov
mov
pop
pop
test
ss
mov
movsl
jmp
inc
adcb
frstor
in
imul
stos
adc
push
leave
add
sub
jne
or
xchg
popa
es
out
cli
inc
in
loop
mov
cwtl
call
and
movsb
sub
pop
loop
aam
or
outsl
cmc
jbe
movsb
dec
decl
or
cld
out
push
dec
cli
xor
cmp
pop
data16
loope
sahf
xor
es
jnp
xchg
pop
neg
out
xor
mov
cmp
jmp
out
mov
adc
andl
mov
into
ja
push
cmc
std
cmp
cwtl
inc
push
inc
add
pop
mov
mov
gs
sub
adc
jne
sub
loope
mov
das
loopne
out
cwtl
and
xchg
int3
cmp
int3
mov
cs
es
pop
sub
or
inc
out
cltd
imul
mov
fwait
loop
adc
and
outsb
out
loope
sbb
jp
jnp
jg
lret
in
push
xlat
pop
cmp
es
scas
mov
int
push
lahf
xor
mov
pop
jno
in
jae
hlt
dec
adc
out
jp
and
xor
rolb
aas
addr16
inc
fcmove
test
movsb
popa
clc
fs
xchg
inc
mov
xchg
test
pop
addl
mov
add
shlb
dec
test
cmpsl
mov
idiv
pushf
sub
mov
int3
idivl
ljmp
or
fs
test
fstl
pop
push
outsb
cmc
sbb
cmp
bound
bound
enter
pop
dec
or
push
enter
lcall
stos
stos
jg
mov
xchg
lods
out
xchg
fcmovnb
dec
inc
lret
es
std
mov
push
out
push
mov
aaa
aad
pop
mov
popf
fisttpl
popl
lret
stc
jns
mov
xor
mov
adc
inc
subb
jnp
mov
ret
mov
ret
mov
pop
rcrb
scas
jbe
addr16
out
mov
call
in
movsb
push
push
push
mov
sahf
xor
jbe
cmp
push
mov
push
ds
mov
enter
mov
icebp
mov
pop
setns
sbb
test
jbe
int3
xor
ja
and
jecxz
and
mov
adc
rcrb
cmp
sbb
leave
popf
movsb
xchg
mov
shrl
clc
add
sub
out
jecxz,pn
and
ret
add
test
pop
cwtl
or
arpl
pushf
call
cmp
xchg
push
or
sbb
jns
test
cmpsb
jnp
xor
aas
cmp
dec
xchg
fimuls
and
iret
jp
dec
test
xor
jmp
push
rol
ljmp
dec
sbb
dec
pop
rclb
out
dec
and
jge
fistl
enter
xchg
ret
insl
ljmp
adc
xorb
push
and
add
add
push
add
leave
lcall
out
aaa
sbb
jno
xor
xor
pop
mov
shl
sub
cmp
or
mov
loopne
xchg
push
xchg
and
scas
jp
sub
repz
sub
dec
shl
ret
insl
mov
enter
loope
xorb
push
popf
mov
loope
pop
stc
jecxz
pusha
jne
jge
jg
jg
xor
in
add
es
push
inc
ds
outsl
mov
rcll
shrb
int3
mov
lret
pusha
push
mov
adc
popf
sbb
pop
test
sbb
movsl
mov
pop
lcall
or
aam
push
mov
jle
fwait
lock
movsb
or
xor
in
sbb
pop
dec
sbb
add
sbb
test
cld
adc
or
xor
adc
lcall
lcall
sub
and
jo
and
pop
mov
or
jo
or
mov
je
add
pop
push
sti
jecxz
xchg
ror
scas
pop
stos
push
inc
gs
lods
fmull
xchg
sbb
inc
or
int
xlat
xor
mov
rcr
mov
addr16
pop
or
jnp
scas
repz
movsb
adc
dec
je
out
mull
mov
orb
rcll
hlt
je
cld
and
mov
fst
shlb
movsl
inc
jae
lea
mov
push
dec
fnstsw
ja
in
bound
gs
sbbl
jge
jnp
and
and
or
lods
popa
add
and
inc
jo
test
xor
iret
sub
lret
or
in
test
jmp
mov
push
sub
adc
imul
movsb
push
subl
and
loop
lcall
stos
in
arpl
sbb
fwait
mov
jecxz
lds
add
sahf
and
mov
push
out
into
rcrl
in
push
sub
push
movsb
clts
inc
dec
mov
or
in
xchg
je
sub
xchg
subl
fdivs
sub
sbb
cmp
and
jae
movsl
ss
inc
outsl
out
add
push
jmp
mov
mov
jns
pop
add
inc
movsb
mull
dec
subb
xchg
ljmp
adc
int
sub
mov
out
inc
fisubrs
add
xchg
sbb
cli
inc
dec
in
pop
fwait
inc
xor
les
sub
imul
sub
dec
mov
insb
sub
ja
push
cmpsl
or
or
jmp
cmp
mov
test
imul
data16
lods
cmp
push
xor
in
mov
call
jle
dec
mov
and
sub
push
add
jns
mov
call
es
dec
ret
mov
mov
pusha
push
add
inc
stos
jecxz
jle
and
test
cmpsb
pop
jecxz
popf
mov
add
xor
rcll
dec
and
pusha
repnz
movb
sbb
mov
fdivl
inc
adc
ret
stos
and
pop
push
pusha
xchg
rorb
cmp
aaa
ljmp
mov
lods
ss
jbe
into
ret
push
icebp
addl
xchg
andl
mov
pop
and
push
dec
and
sub
es
inc
leave
aas
popa
or
sti
stos
inc
sbb
das
cld
dec
gs
adc
and
jl
sbb
mov
and
fcomp
mull
push
xor
xor
scas
pusha
jnp
fcomps
popa
scas
mov
fwait
push
sti
dec
mov
mov
bound
or
jle
adcb
fisubl
add
lret
add
sub
mov
jge
lock
pop
test
cld
dec
out
dec
loope
or
mov
cmp
mov
pop
lods
loop
inc
and
stos
fcomps
shrb
es
sbb
adc
mov
dec
es
out
dec
sbb
repz
adc
and
out
ds
sbb
idivb
frstor
imul
adc
pop
lods
ret
sarl
jno
inc
cld
mov
push
cmc
mov
std
adc
cmpsb
inc
mov
stos
adc
ja
mov
ja
imul
dec
mov
clc
lea
jns
add
in
pop
pop
nop
fdivrs
xorl
outsb
insb
fidivrs
leave
insl
popa
cwtl
and
int
shrl
aam
mov
xor
repz
movsl
or
mov
push
pop
sub
out
inc
xchg
stc
cwtl
xor
ja
dec
xor
or
jnp
or
bound
loope
xchg
scas
cmp
arpl
inc
repz
pop
lret
cmp
push
arpl
and
cltd
inc
aam
cmpsb
cmp
fwait
xor
cltd
add
test
sbb
xlat
dec
fimull
add
fwait
cmpsb
into
ret
mov
and
ret
stc
jae
fucom
stc
push
jmp
pop
and
xchg
adc
das
adc
movsb
fcomps
push
out
pop
jns
popf
mov
pushf
xor
xchg
pop
leave
push
mov
lahf
inc
sbb
cmp
mov
fstpl
add
sub
std
jge
fwait
hlt
adc
orl
pop
insb
rclb
mov
push
mov
adc
insl
fbstp
jns
or
scas
mov
push
fwait
test
mov
fwait
inc
mov
out
aaa
add
lds
jmp
mov
xchg
mov
sub
orb
test
test
pop
xchg
xor
push
mov
inc
push
xchg
mov
fwait
js
adc
ret
cmp
mov
test
jo
and
ja
cwtl
std
jae
stos
insl
or
lods
outsl
adc
ljmp
lock
rcrl
lahf
jg
pop
int3
das
mov
repnz
clc
repnz
stos
pop
je
xor
cmp
push
mov
mov
inc
iret
mov
test
das
inc
lahf
test
mov
js
xchg
andb
sub
movsl
addr16
subb
mov
cmp
cltd
dec
jp
test
jns
push
int
adc
rorl
aad
pop
ja
mov
sbb
into
mov
aas
lret
pop
sbb
pop
mov
or
mov
es
pushl
imull
clc
mov
dec
pop
xor
mov
mov
ss
mov
inc
and
dec
mov
popf
mov
push
imul
fisttps
pop
mov
fst
stos
jle
ss
stc
or
lcall
test
jns
jp
mov
cltd
ds
call
push
cmpsl
ud0
cmp
push
dec
mov
mov
dec
push
mov
lea
fldl
dec
mov
outsl
push
fcoms
push
sub
sbb
mov
mov
test
adc
icebp
stc
mov
fucomip
pop
push
mov
mov
clc
sub
sub
in
jo
es
push
addb
sbb
orl
inc
pushf
pop
push
aam
in
adc
ret
cmp
xor
or
daa
adc
jb
push
dec
mov
adc
adc
adc
loopne
sub
std
pusha
pop
dec
pop
mov
push
lea
mov
and
adc
xchg
sbb
mov
xor
enter
sbb
sbb
pop
and
adc
xchg
popf
loopne
shrl
mov
xchg
adc
cmp
mov
dec
movsl
dec
loopne
rol
into
cmpsb
dec
add
outsl
mov
int3
jl
stos
nop
sbb
pushf
pop
lret
nop
icebp
gs
inc
xor
icebp
jl
out
adc
mov
push
lea
in
push
imul
loop
stc
xrelease
inc
int
xchg
xor
xor
adc
dec
je
jnp
call
incl
fwait
or
sub
jb
mov
shr
int
xor
cld
hlt
movsl
mov
ja
adc
push
daa
inc
xor
jmp
pop
and
xchg
and
pop
cs
xchg
jns
imul
xor
jg
notl
sub
sub
xor
and
push
mov
inc
adc
into
and
stos
cli
dec
xchg
adc
push
add
addr16
aaa
and
pusha
insb
mov
mov
jnp
push
les
and
lock
loope
push
leave
in
lods
dec
insb
inc
out
clc
or
xor
mov
xchg
xor
push
aaa
into
jns
xor
xchg
push
repz
movsb
push
mov
fwait
lea
mov
xor
ja
push
fldcw
sub
mov
xchg
pop
push
imul
xor
or
pop
test
sub
mov
xchg
jae
fistps
lahf
inc
dec
outsb
cltd
popf
mov
push
mov
push
inc
cmpsb
mov
pop
cmp
cmp
fstps
pop
lahf
cs
and
call
ret
lcall
mov
js
mov
test
lods
popa
push
inc
or
and
outsb
cmp
imul
xchg
shl
mov
xorb
test
jecxz
xor
push
pop
mov
cltd
or
lret
fs
loop
jl
repnz
xchg
mov
stc
add
pop
iret
sti
lds
outsb
pusha
test
push
pop
imul
ret
ljmp
mov
dec
jno
into
xor
ficoms
popf
in
loop
mov
add
in
cmpsl
push
cld
sub
cmp
test
and
cwtl
cltd
cwtl
dec
shlb
data16
and
scas
push
int3
ljmp
add
adc
lahf
push
sahf
xor
sbb
and
call
jecxz
or
cld
les
jmp
adc
inc
pop
xor
lahf
add
pop
stos
popf
and
outsl
mov
mov
mov
rorb
fnstenv
lock
dec
je
je
jb
aas
sbb
js
inc
jnp
push
mov
dec
pop
int3
or
mov
data16
outsb
inc
fs
cmp
pop
push
jp
movhps
add
pop
arpl
jo
mov
je
xorl
mov
andl
cmp
lcall
popf
xchg
push
pop
aaa
xchg
aaa
jmp
sbb
jge
fisubrl
fstp
dec
add
test
pop
xchg
pop
xchg
push
adc
scas
jno
inc
xor
imull
pop
and
clc
jge
fwait
add
outsb
out
rorl
cs
jns
arpl
out
stos
push
movsb
test
loop
mov
loope
cs
mov
gs
test
pop
or
sbb
pminub
repz
add
test
mov
shl
push
push
scas
lds
dec
call
int
cmpsb
jl
int
fisttps
sub
cltd
test
xor
cmp
mov
out
or
push
scas
mov
mov
adc
fxch
pop
sahf
cmove
mov
cmp
divl
mov
or
popa
in
jmp
popl
les
dec
dec
aam
imul
lret
loopne
jmp
mov
outsl
sarb
dec
lcall
inc
stos
insb
out
adc
add
mov
loope
loopne
fsin
pop
mov
or
xor
inc
push
scas
imul
out
ljmp
popf
xchg
mov
or
mov
leave
repnz
movsl
mov
outsl
add
sub
mov
or
jns
jmp
cwtl
insl
sub
pop
rcll
push
dec
pop
xor
dec
jb
sar
inc
sti
push
mov
cmp
push
popa
xor
and
push
fcompl
rcrl
jmp
ljmp
jne
push
stos
fwait
std
dec
mov
testb
lret
cmpsb
js
dec
xchg
and
push
cmp
aad
mov
pusha
loop
fnstenv
insl
mov
jl
inc
adc
sti
daa
jmp
clc
jae
filds
rcl
jno
cmpsl
popa
cs
cld
push
mov
mov
jmp
xchg
mov
cmpsl
cmpb
or
adc
mov
iret
sbb
xor
in
add
outsb
cld
xchg
jp
movsl
cmpsl
rolb
push
mov
jge
je
rcll
pop
xor
inc
ljmp
or
icebp
xchg
mov
add
jmp
mov
jecxz
xchg
push
adc
push
test
sub
jne
out
xor
scas
push
push
push
push
jo
in
fdivr
or
xchg
sbb
push
into
add
shll
mov
push
mov
push
and
mov
fldenv
imul
test
cli
mov
xchg
pop
xchg
enter
push
imull
xchg
jae
lock
sahf
adc
mov
mov
sbb
call
add
sub
adc
lock
cmp
and
cwtl
shlb
sti
fstpt
pop
sub
mov
fcomps
pop
fs
lahf
cs
or
movsb
mov
dec
and
jecxz
mov
adc
jmp
add
dec
icebp
push
mov
mov
pushf
ja
pop
push
mov
pop
lcall
inc
xchg
xor
adc
lcall
cmpsl
jle
sbb
add
std
xor
fwait
pop
mov
dec
mov
mov
jmp
cld
mov
mov
fwait
shll
rcll
and
sahf
xchg
dec
cmc
adc
ficomps
sbb
mov
and
mov
lods
test
sub
daa
adc
mov
push
out
cmp
lods
mov
mov
cmp
fiaddl
or
hlt
inc
dec
ja
rolb
addr16
test
add
icebp
or
andb
cld
orl
dec
fcomps
fmul
iret
rcrb
cmpsb
bound
cmc
fistl
lret
mov
mov
dec
loopne
rcll
xor
dec
das
sahf
fnstcw
repnz
fcompl
mov
or
mov
and
cld
jns
stc
shrb
jne
pop
push
icebp
fnsave
mov
daa
mov
insb
sarb
jne
out
cmp
icebp
push
daa
enter
mov
dec
clc
lock
or
or
aaa
mov
add
pop
shll
dec
subl
push
push
push
pop
jne
stos
ds
cmpxchg
lods
pop
aad
dec
push
ljmp
add
leave
pop
add
pop
mov
mov
jmp
movsl
pusha
jbe
mov
fsubrs
xchg
lret
mov
std
or
push
ret
cmp
loop
sub
insl
loop
xchg
mov
and
jmp
mov
push
dec
outsb
push
add
sbb
or
jne
aas
push
xorps
div
cltd
pop
pop
repz
lret
hlt
stc
ds
sti
cmp
ret
pushf
add
mov
rol
sbb
cmp
sti
pushf
vpsadbw
sub
mov
aad
out
cs
xchg
bound
es
mov
inc
in
fdivs
xchg
xchg
mov
cli
clc
pop
and
add
push
pushf
xor
decb
adc
mov
mov
fmuls
mov
cmp
popa
in
pop
adc
es
jnp
sbb
sbb
sub
mov
test
mov
mov
xchg
out
mov
shlb
pop
mov
cmp
mov
je
push
mov
pop
sti
mov
push
or
in
mov
jns
clc
or
into
loopne
inc
test
fdivr
mov
lea
dec
out
inc
xor
cwtl
xchg
loopne
arpl
jmp
mov
movsb
nop
shrl
jmp
les
out
or
fcom
and
mov
cwtl
lea
fldcw
pop
repnz
out
cs
scas
ja
xchg
ror
lahf
sbb
lods
lcall
ss
push
in
pop
mov
shr
xlat
cwtl
or
ret
into
decl
fsts
leave
xor
test
xchg
adc
xor
lahf
dec
xchg
das
les
out
into
mov
popf
pusha
inc
inc
push
jne
fistl
clc
or
fwait
cli
mov
ficoml
add
add
adc
movl
flds
jp
xchg
pop
lahf
test
mov
or
cmp
adc
sub
xor
jge
mov
int3
adc
les
out
lret
jge
push
enter
cmp
xor
notl
push
js
popa
mov
idivl
addr16
fisttpl
pop
jge
adc
aad
xchg
push
push
testl
int3
mov
arpl
inc
push
insb
mov
add
fldenv
mov
adc
jnp
and
lock
jae
pop
dec
filds
mov
sbb
fwait
sub
loopne
aam
cltd
inc
mov
mov
aaa
leave
out
sbb
out
cmp
inc
daa
scas
sbb
and
lds
std
cld
cmp
cmp
hlt
test
jecxz
cmc
xor
stc
test
imul
sbb
sarl
mov
mov
xchg
ret
add
ljmp
dec
mov
aam
fwait
push
cmp
lods
pop
xchg
int3
int
dec
sbb
lahf
shll
dec
inc
popf
push
cmpsb
pop
mov
inc
movsb
adc
xchg
push
xor
cmp
sbb
jmp
or
js
in
sahf
sub
sub
adc
inc
loopne
insl
dec
mov
jg
fadd
lock
mov
mov
iret
mov
mov
cmp
fcoms
mov
loopne
add
std
hlt
add
js
adc
jno
iret
mov
jns
cwtl
and
shrl
int3
xchg
ljmp
aas
cmpsl
mov
push
flds
popa
add
adc
cmc
jnp
jl
icebp
ret
shrl
int3
repz
cmpsb
push
xchg
mov
push
pop
mov
pop
lods
jb
jbe
call
push
scas
dec
pop
pop
cwtl
jl
orb
popf
roll
jbe
and
scas
cltd
adc
cmp
xor
mov
xor
sahf
lahf
cltd
cli
xchg
sub
js
sahf
int
icebp
inc
pop
push
cmp
aam
rolb
fimull
or
jnp
repnz
jmp
or
or
mov
loope
sub
fucomip
outsb
gs
mov
xchg
push
jl
pop
sbb
mov
dec
dec
fwait
aas
inc
and
insl
xorl
shll
in
add
mov
pop
mov
xchg
sbb
in
xor
std
mov
push
jg
cmpsb
mov
mov
jp
nop
dec
xchg
jp
xor
jge
or
sbb
xchg
icebp
arpl
imull
insl
mov
in
jmp
push
loope
jmp
sub
int
add
inc
jp,pt
jmp
lea
pop
push
xchg
mov
add
mov
std
inc
jl
cli
and
jmp
out
and
test
and
inc
sahf
or
xor
enter
xor
mov
sub
mov
loopne
jb
addl
adc
cltd
fldl
cmp
shlb
in
xor
aad
push
add
test
push
and
iret
sub
and
sbb
loop
push
dec
jno
pushl
js
repz
je
imul
and
lahf
andb
mov
mov
call
and
fnstcw
enter
cvttps2pi
pop
stc
sub
stc
add
adc
cmp
dec
jo
mov
outsb
and
mov
xchg
icebp
shrl
mov
add
mov
mov
sbb
outsb
mov
cld
mov
sub
in
pop
fcompl
nop
mov
and
adc
shr
lods
into
push
outsb
mov
cmp
mov
sahf
sbb
imul
push
adcl
adc
push
sbb
in
dec
fwait
mov
ljmp
insl
xor
adc
jb
mov
mov
mov
pusha
mov
out
pusha
sbbl
mov
bound
add
int
int
lcall
test
in
sbbl
add
jo
add
orb
add
aas
jmp
xor
inc
mov
pop
addr16
mov
test
inc
mov
sub
xchg
add
xorps
mov
add
or
jae
ror
pop
mov
xor
mov
bound
add
adc
outsb
xor
mov
imul
lcall
insl
js
mov
xchg
sbb
stos
mov
add
aaa
arpl
aaa
lock
xor
pop
cmp
outsl
popa
xchg
jle
cmp
lret
cmp
or
push
xor
dec
xchg
jge
scas
xor
iret
aas
jge
xchg
in
std
push
xor
mov
mov
mov
push
fisubrl
pop
lods
inc
mov
xchg
sbb
insb
ss
mov
xchg
stc
and
cwtl
xlat
jmp
pop
std
rcrb
fwait
lods
imul
out
test
xor
sub
jae
inc
mov
sub
push
sbb
push
ljmp
loope
sti
sub
inc
push
fisubs
iret
xchg
leave
xor
imul
pop
jge
xchg
sub
int
stc
in
lret
test
das
stos
xchg
push
sbb
gs
gs
jecxz
scas
mov
jle
xchg
mov
cmc
sbb
mov
cltd
cmpl
jle
aaa
push
lds
notl
js
rolb
int3
jne
stc
cmp
sub
jg
ds
scas
les
addr16
jae
popf
repz
lods
add
fsubrl
ret
sub
ss
and
les
add
or
adc
sbb
pop
or
jb
repnz
xchg
jb
push
insb
ds
pop
js
xchg
lock
push
stos
jecxz
call
in
lret
lods
das
xor
or
cmc
jno
stos
cli
jns
das
pop
lcall
jge
aad
push
je
test
ret
roll
add
or
jl
sub
clc
dec
xlat
js
loope
xchg
and
jns
cmp
or
movsb
fucomp
movsl
xor
lock
stos
xor
addl
out
rolb
lahf
orl
mov
push
adc
mov
out
xlat
push
add
xor
inc
lods
stc
mov
xor
jl
push
push
push
insb
sar
lods
sub
xchg
pop
into
mov
push
mov
gs
cmpl
cmp
ljmp
mov
mov
fisubs
lret
test
aaa
pop
mov
inc
adc
arpl
cli
add
mov
sub
sbb
add
push
sbb
out
dec
inc
jno
ret
and
xorb
in
repnz
sub
sub
cmpsl
mov
add
xchg
xchg
sub
push
faddl
gs
popf
push
pop
jge
add
dec
mov
dec
push
and
shll
push
fwait
pop
je
sub
jle
inc
outsl
es
or
pushf
mov
push
ror
movl
and
scas
sub
rclb
xor
jns
lock
xchg
int
sti
pop
into
lods
sbb
xor
push
dec
ficomps
mov
mov
add
stos
inc
icebp
xchg
or
push
cmp
xchg
clc
jle
xlat
std
je
sbb
xor
mov
test
lahf
xchg
xchg
push
sbb
mov
outsb
sbb
add
and
stos
sbb
repz
lret
in
xchg
xlat
scas
test
das
sub
out
push
jno
call
push
xchg
fs
es
adc
fdivrp
mov
lcall
mov
or
cmp
into
loop
sahf
insl
cmp
pushl
xor
sbb
iret
push
sti
pop
xchg
mov
pop
outsb
dec
dec
shll
scas
and
in
xor
cmp
add
mov
pop
insl
and
lods
fwait
int3
add
lock
dec
lcall
mov
inc
push
mov
mov
cs
pop
pushf
mov
cmp
jns
mov
ret
je
sbb
or
ds
jb
clc
lahf
stos
cmp
add
mov
inc
test
sbb
sbbl
dec
fadd
cmpsl
movsb
fld
es
mov
into
adc
push
scas
mov
xor
xchg
push
repz
data16
and
dec
pushf
sub
mov
ss
lret
jno
cmpl
mov
dec
out
insb
imul
out
xchg
insb
idiv
gs
mul
add
sahf
add
lret
test
push
inc
jns
dec
test
ret
jne
sbb
jmp
test
scas
lcall
shll
and
sbb
inc
in
out
nop
and
dec
sbb
xor
xchg
xchg
sbb
mov
inc
jmp
pop
push
xor
jle
movsb
dec
rcll
sbb
test
lds
movsb
or
clc
add
inc
sub
loope
out
and
mov
and
sub
adc
add
mov
lret
xchg
out
nop
into
in
jl
subb
xor
xor
dec
push
push
mov
jecxz
int
enter
mov
lret
and
jbe
sub
push
sbb
lea
in
mov
outsl
push
mov
mov
pop
jbe
lret
out
adcb
cld
pop
iret
pusha
xchg
fs
dec
push
jb
loopne
outsb
push
adc
xchg
jae
sarb
stos
cmp
push
push
sbb
sahf
divb
jo
inc
dec
mov
xor
repnz
add
adc
jmp
in
sbb
subb
mov
adc
insl
mov
inc
cli
enter
bound
pushf
mov
stos
jno
lcall
sahf
add
jne
clc
test
inc
dec
push
lahf
pop
je
cmp
inc
mov
pop
das
cmp
lds
lahf
push
jmp
push
push
cwtl
aam
adc
popf
sbb
and
xlat
or
leave
stc
jg
sub
cmc
cld
setle
jl
lret
cmp
aad
sbb
dec
dec
mov
fs
lret
scas
pop
mov
mov
push
lods
daa
fistps
mov
push
cmpsl
or
cmpsb
mov
sbb
xor
and
stc
aas
leave
mov
jbe
mov
out
pop
rorb
xorb
or
or
dec
mov
add
jae
or
push
lds
jp
cmp
push
jns
in
adc
nop
mov
push
mov
aas
and
fs
adc
bound
fucomp
leave
jle
addr16
loope
and
xchg
pop
aad
outsl
lea
dec
jmp
mov
cmp
ds
arpl
ret
ficoms
cmp
mov
out
shrl
out
pusha
or
rorl
sbb
fdivrs
xor
xchg
call
xchg
mov
es
cltd
test
je
sub
cmpsb
dec
push
mov
std
in
hlt
push
test
cmp
icebp
subl
add
mov
ljmp
and
inc
or
xor
das
add
hlt
repnz
xchg
fldt
dec
popa
movsb
lock
pop
das
jp
xchg
cwtl
sub
aad
arpl
push
or
fstpt
fstpl
sub
xchg
mov
mov
push
or
pushf
xchg
std
cmp
insb
cmp
xchg
dec
xchg
add
enter
push
jno
mov
mov
mov
inc
jmp
mov
xchg
mov
xor
sub
les
sbb
and
xchg
orb
add
push
dec
das
push
movl
fldenv
mov
sbb
mov
push
sets
in
fchs
ret
rolb
rolb
push
pop
test
dec
out
cmpsb
xchg
ljmp
mov
jbe
or
dec
fisubs
icebp
call
call
lods
mov
outsl
jge
jg
dec
loop
pop
dec
stc
xchg
mov
xlat
add
pop
mov
mov
es
push
pop
and
jg
hlt
fldenv
loope
mov
mov
test
xchg
ja
aaa
shll
sbb
pop
push
sub
clc
pop
cmpsb
fwait
fwait
insb
adc
pop
aas
and
jl
pop
add
sub
int3
and
ret
or
push
sbb
loope
xor
sub
push
dec
in
mov
jg
test
sbb
pop
dec
dec
loope
insb
cmp
pop
mov
subl
out
pop
or
dec
pop
fisttps
push
dec
pop
sub
cmc
in
icebp
pop
xchg
xchg
inc
mov
mov
insb
pop
clc
inc
shlb
push
rorl
mov
cmp
jb
adc
cld
dec
sub
mov
cld
sub
mov
test
xor
call
int
and
gs
xchg
in
or
xor
ss
lcall
out
mov
divb
add
or
adc
jl
out
cmp
or
addr16
push
add
push
dec
dec
push
outsb
jnp
push
mov
and
push
aaa
add
lret
hlt
pop
mov
pop
decb
push
sbb
cmp
not
sbb
jecxz
aam
stos
test
add
iret
sub
loop
adc
sub
dec
shll
sub
mov
push
dec
inc
inc
cmp
sbb
in
or
nop
bound
movsl
add
es
pusha
and
inc
pop
jecxz
xlat
ds
cmp
nop
fwait
sub
dec
popa
aaa
and
nop
add
lcall
fwait
cmpsl
sbb
addl
push
lods
xchg
jnp
dec
adc
fdivr
or
outsb
sub
sub
mov
mov
rorb
sbb
push
into
pop
xchg
fs
test
dec
test
sbb
lret
sbb
fstps
adc
xchg
xchg
fimuls
xor
popl
pop
outsb
inc
mov
out
or
mov
mov
jbe
jnp
scas
call
mov
addr16
filds
push
in
in
sar
out
repz
inc
push
sbb
aam
loopne
cld
sti
cmp
xor
rcl
or
cmpsb
mov
testl
shlb
lods
dec
cmp
pop
pop
cmc
popa
fistpl
lds
add
or
jb
xchg
cs
in
fimuls
mov
movsl
pop
dec
and
lret
cmpsl
cld
stc
cwtl
loop
or
scas
lcall
add
inc
adc
fcmovu
pop
rcrb
int3
cmpsb
fcmovu
cli
mov
push
add
add
or
jmp
xchg
mov
insb
iret
jne
cmp
movsb
rolb
sbb
sub
jnp
insl
adc
push
cmpsb
mov
push
lcall
pop
fwait
mov
mov
pusha
push
test
int3
sbb
jnp
xor
int
test
mov
inc
and
fmulp
push
lret
mov
add
or
pop
decb
xchg
iret
mov
leave
jo
inc
mov
lods
pushf
lret
aas
xor
andl
fbld
dec
or
mov
dec
xchg
rol
inc
pop
arpl
push
cmp
mov
adc
cmpb
enter
js
dec
or
rcrl
mov
mov
pop
sti
call
fisttpll
sub
add
insl
jl
push
jnp,pn
or
mov
test
cmp
lret
xchg
insb
mov
push
xchg
sbb
and
roll
in
bound
push
out
rorb
inc
lock
loope
pop
mov
inc
xor
jne
sub
add
or
mov
shll
pop
or
pop
push
ja
or
jae
pop
dec
cmpl
int3
push
xlat
jecxz
mov
pop
in
inc
loopne
mov
enter
mov
loop
pop
mov
loope
cmpsb
jl
jmp
add
cwtl
xchg
mov
fcomps
and
bound
jl
jbe
inc
out
and
mov
lods
pop
dec
jg
scas
ret
leave
jmp
xor
mov
stc
xor
inc
adc
inc
cmp
stos
mov
sub
mov
push
mov
outsb
dec
or
push
fiadds
mov
jmp
pop
cmp
insb
mov
xchg
inc
mov
mov
fiaddl
mov
out
arpl
cwtl
cwtl
mov
into
jl
cld
outsb
or
shll
push
or
rcll
ret
mov
jmp
mov
inc
add
mov
cltd
xlat
inc
repz
xchg
sbbl
int3
jmp
test
pop
jb
or
rcrb
in
jecxz
faddl
lds
arpl
pop
and
cltd
cmc
movsl
hlt
sub
cmpl
mov
fucomi
mov
loopne
out
cmp
jns
add
iret
pop
xchg
ljmp
push
outsb
inc
addb
outsb
mov
push
or
mov
jnp
inc
sti
xlat
ret
imul
mov
pop
cmp
pushf
les
out
mov
faddl
adc
or
fsts
ljmp
mov
xchg
add
int3
and
or
xorl
adc
adc
or
xchg
mov
add
cmp
lock
in
imul
jne
int3
cmpsb
sub
inc
mov
out
insl
cs
and
hlt
lcall
pusha
movsb
cmp
loopne
xor
mov
mov
jnp
dec
bound
arpl
push
pop
mov
sbb
inc
movsl
les
cmp
popa
ds
imul
cmp
sub
dec
push
cmpsl
fiadds
imul
ljmp
dec
inc
push
mov
cltd
lods
sbb
pop
adcb
rclb
add
repz
cmp
ljmp
je
bound
xchg
cmp
lcall
rclb
jg
xchg
xchg
loope
xor
sahf
pop
jge
scas
xchg
mov
mov
lock
xchg
push
mov
scas
in
js
add
mov
icebp
or
fbstp
adc
xchg
fcoml
lahf
xchg
adc
mov
pop
cmpsb
outsb
add
xchg
outsb
fdiv
shrl
test
mov
int3
out
inc
adc
dec
xor
push
inc
add
dec
and
lods
mov
pop
mov
push
jg
stc
jecxz
lock
out
push
or
lret
jne
push
bound
lahf
mov
cmp
pop
cmp
sti
iret
and
lods
lds
mov
mov
cmp
xchg
fs
mov
test
adc
arpl
lock
fidivl
mov
xor
push
xor
fadd
sub
insl
sti
leave
cltd
dec
jmp
ljmp
xor
adc
jecxz
cmp
adc
xchg
pop
pop
fwait
push
sbb
fimuls
cwtl
mov
in
pop
cmpsb
mov
push
mov
mov
mov
or
xchg
stos
int3
jno
mov
rcrb
nop
inc
fwait
imul
ss
xor
sbb
orl
in
test
xchg
mov
cmpsl
hlt
aam
mov
cmc
xor
add
cmp
dec
cmp
icebp
jl
inc
sbb
push
mov
pop
mov
call
xchg
fwait
mov
cmc
cmpsb
sub
movsb
inc
daa
inc
test
and
cmpsl
sub
fisubl
xor
inc
lahf
fstps
loop
into
mov
sbb
jg
insb
pop
push
lods
aad
outsl
inc
mov
rcr
loop
rcrl
mov
pop
xchg
mov
or
call
aad
pop
iret
sbb
popf
adc
xchg
sbb
push
mov
xor
sub
repz
push
cmpsl
push
les
rclb
lret
pop
enter
pop
xchg
out
jno
mov
mov
fidivrs
inc
mov
lret
jno
movsl
cli
and
dec
mov
leave
mov
jno
lcall
fwait
jbe
pop
fucomp
cmp
enter
in
xchg
jl
adc
les
xor
xor
inc
daa
jecxz
mov
mov
mov
xchg
in
cmp
mov
dec
xlat
mov
popa
cltd
xor
int3
sbb
mov
mov
cli
jnp
sbb
test
push
jl
lods
mov
jle
incb
xchg
push
pop
testb
push
fbstp
xor
lahf
ljmp
mov
cmc
jecxz
and
mov
ds
pop
push
lock
stos
fs
inc
aam
cmc
cmp
cmp
movsl
hlt
dec
outsl
inc
cmp
mov
pop
setl
xchg
imul
pop
sub
nop
jae
xchg
dec
inc
mov
pushf
mov
adc
or
lcall
insb
jl
std
clc
and
xchg
mov
jne
sub
insl
loopne,pn
imul
add
std
aas
jns
push
mov
loope
cmp
mov
in
jl
and
sbb
psllq
push
sbb
dec
fists
into
pop
sub
out
mov
sub
inc
mov
aam
subb
mov
lcall
sub
add
repnz
out
push
sbb
movsb
dec
lahf
lock
inc
fsts
fidivrl
add
ret
mov
sbb
fwait
sti
sub
aam
pop
enter
jns
adc
movsb
cmpsb
push
jmp
fisubrs
and
adc
jle,pt
jnp
cmp
mov
addr16
dec
dec
push
popf
pop
das
insb
xor
dec
js
mov
sub
call
mov
mov
test
xlat
popf
add
dec
xchg
mov
cld
iret
jnp
cmp
stos
cs
inc
cwtl
push
mov
outsb
ret
test
mov
dec
xor
mov
icebp
ret
fsubrs
sbb
mov
fstps
sbb
ds
mov
rcrl
pop
add
adc
sub
sub
cmp
rcll
nop
std
jo
add
jle
fs
cmp
insl
cmpsl
mov
pusha
cmpsl
or
je
pop
bound
int
dec
mov
mov
orb
pop
fdivs
inc
dec
shl
xor
cmpsb
out
pop
sbb
loopne
test
shr
lds
cli
push
popa
repz
ljmp
int3
aad
cmpsl
mov
pop
cmp
push
mov
lea
push
push
mov
test
xor
cmp
add
mov
sub
hlt
in
push
mov
leave
cmp
inc
sarl
pop
cmp
into
movsb
inc
daa
ret
adc
xchg
adc
lahf
bound
xchg
shl
stos
jb
inc
pop
push
jb
pusha
pop
add
ljmp
mov
rcrb
adc
shll
xchg
in
pop
fbld
enter
loopne
dec
adc
fistl
cmpb
mov
jae
inc
push
xchg
out
ss
mov
cmp
xchg
inc
das
cmc
icebp
sub
loopne
test
mov
pop
lods
adc
in
and
ret
lock
mov
dec
mov
inc
and
pop
imul
fildl
adc
mov
xchg
add
pop
in
push
insb
inc
js
jecxz
inc
or
mov
mov
push
scas
add
lods
popf
adc
rcl
xor
push
pop
mov
loopne
rorl
outsl
shrl
mov
popf
push
inc
sbb
pop
pop
cli
rcrb
mov
xchg
addb
jle
mov
jp
fcoms
xor
cmp
mov
push
cmp
out
scas
cli
pushf
hlt
scas
push
jge
lods
in
mov
dec
ret
stos
andl
jp
jae
jbe
xchg
ret
mov
mov
sub
or
scas
add
hlt
lea
dec
iret
stc
dec
pop
cmp
xor
adc
mov
jmp
test
mov
clc
dec
enter
adc
repnz
out
lret
push
pop
push
push
in
pusha
pop
fsubs
sub
xchg
in
xchg
xchg
les
pop
sub
aad
out
loopne
fsubl
out
mov
jp
aam
mov
push
sti
sub
movsb
jge
xchg
mov
pusha
mov
pop
mov
ret
fwait
ja
dec
mov
js
lret
mov
enter
cmp
imul
adc
adc
arpl
mov
xchg
dec
xor
push
xor
inc
sbb
dec
xor
ss
push
stc
push
mov
rclb
sub
nop
mov
fwait
cs
jl
out
add
push
and
mov
in
or
icebp
cli
out
inc
and
xchg
add
cmp
xlat
enter
fs
shl
test
mov
das
add
push
add
push
mov
js
xchg
aas
outsb
push
or
jmp
mov
jo
jns
mov
push
rcll
push
jle
mov
dec
out
push
pop
xchg
outsl
fisttpl
fwait
mov
xorl
mov
add
add
mov
adc
jbe
dec
cmp
insl
lahf
inc
jb
mov
add
insb
jecxz
inc
mov
cmp
cmpb
shlb
imul
and
fnstenv
rorl
enter
jle
sub
test
dec
je
jbe
fstpl
dec
aad
into
jecxz
je
jg
add
push
mov
push
push
test
lret
ficoml
testb
add
jne
outsb
arpl
inc
xor
push
decb
mov
ss
imul
test
inc
aam
mov
sub
lods
cmpsb
jmp
mov
inc
dec
cmp
xorb
pop
jge
inc
and
ljmp
adc
dec
cwtl
pop
xor
std
mov
jge
pop
push
xchg
sbb
xor
lcall
cs
cmp
rcrb
into
out
inc
xchg
outsl
ds
pop
push
xchg
sub
in
lock
xor
js
getsec
xchg
adc
or
xor
pop
add
mov
aaa
push
pop
pop
pop
ds
fsubs
jno
jno
enter
aaa
jle
mov
pop
add
adcw
or
data16
add
or
lret
xor
test
inc
mov
or
push
jb
mov
jge
push
cmc
adcl
xchg
sub
daa
add
je
sub
lods
pop
pop
divl
shrb
loope
mov
ds
jmp
cmp
add
pop
jne
sub
mov
icebp
shll
jns
mov
inc
adc
inc
ljmp
mov
pop
sbb
sbb
add
adc
mov
inc
out
ret
xor
gs
shlb
lock
add
dec
add
jae
or
aaa
pushf
mov
xchg
aam
adc
adc
jno
ficoms
push
mov
xchg
xor
pmaxub
movsb
ret
jno
loopne
stos
mov
lds
sbb
stc
nop
xchg
jp
jmp
mov
jno
and
out
mov
adcb
inc
mov
xchg
ret
push
std
adc
mov
pop
pop
lret
mov
jle
arpl
sbb
dec
xchg
lods
js
or
inc
cmpsl
dec
aad
in
pop
sbb
imul
in
outsl
and
loopne
test
in
push
and
cmp
fs
ss
clc
cmc
mov
lods
jns
frstor
roll
loopne
adc
js
outsl
push
repz
loop
adc
insb
nop
sbb
fdivl
lds
jecxz
mov
lret
and
insb
jne
xchg
mov
imul
xorl
fstpt
je
movsb
add
movsl
cmp
out
mov
xchg
rcrb
inc
dec
cmp
and
push
xchg
lock
push
inc
ja
mov
ja
pop
mov
or
fs
cmp
dec
or
jb
pop
imul
popa
xor
xchg
cli
std
sbb
or
rcl
hlt
aad
or
or
shll
jno
cmc
adc
cli
add
inc
lods
push
roll
mov
pushf
mov
mov
cli
lods
jp
jb
pop
mov
pop
dec
push
push
lds
mov
in
xor
rclb
in
sbb
jl
jns
xchg
cwtl
mov
ficoms
xor
and
mov
call
cmp
ljmp
or
and
mov
add
outsl
inc
gs
inc
sbb
push
rcrl
cltd
dec
pop
fcoml
inc
jp
lds
aas
test
push
mov
ror
out
int3
push
adc
and
mov
jp
mov
lcall
mov
inc
in
popf
stos
inc
ds
sub
push
mov
sub
adc
pop
lret
sbb
insl
add
pop
andl
cltd
fwait
sbb
inc
repnz
cmp
add
call
fdivp
or
xor
out
mov
out
dec
inc
pop
pop
mov
clc
mov
jnp
inc
sub
iret
adc
push
lea
lea
das
icebp
adcl
cmp
fidivl
orl
mov
je
in
jne
fisubrs
mov
lea
xor
and
fs
insl
lret
aad
lds
lds
add
sub
xor
push
outsb
push
cmp
mov
icebp
mov
pop
test
lcall
dec
sbb
cltd
xchg
xchg
outsb
inc
adc
cwtl
imul
mov
cld
repnz
dec
lock
jne
ret
pusha
test
jns
cmpsb
aaa
inc
add
jo
dec
pop
sub
loope
fcomps
xor
sbb
adc
add
xor
call
or
jns
cltd
inc
or
cmp
add
xchg
adc
lods
sarb
push
in
or
and
dec
jmp
mov
push
and
add
dec
mov
je
pushf
addb
jmp
dec
movsb
das
repz
std
adc
test
dec
lret
mov
push
cwtl
adc
repnz
jl
popf
dec
out
jbe
sti
adc
add
mov
push
call
mov
aas
and
mov
incb
loop
mov
inc
xchg
test
arpl
add
pop
int3
clc
mov
dec
mov
adc
ja
xor
mov
out
mov
add
push
arpl
sub
cmpsb
aas
adc
xchg
cmp
int
aaa
mov
xchg
sti
mov
out
les
fcom
adc
iret
xchg
loopne
jae
sub
jle
imul
scas
sti
add
pop
adc
pop
push
ja
sub
out
dec
daa
data16
push
imul
jmp
mov
fstpt
add
xchg
dec
mov
xchg
gs
mov
sahf
ja
mov
cmp
fstpl
push
dec
out
add
aaa
inc
mov
shlb
lret
jge
adc
mov
pop
shrl
lods
mov
cmc
lea
jae
inc
cmp
xchg
xor
sbb
repz
fdivs
loope
sbb
dec
xor
je
jns
cltd
pop
jg
push
sub
sub
cmc
inc
dec
push
stos
mov
inc
mov
push
incb
pop
sub
jecxz
outsb
jecxz
lahf
mov
cmpsb
cwtl
jmp
or
push
mov
mov
testl
mov
loopne
xchg
push
loop
in
icebp
imul
add
push
stos
ljmp
js
sbb
icebp
fnstenv
mov
insb
sub
cmp
sbb
add
clc
gs
mov
and
xchg
popf
out
cli
mov
lea
mov
xchg
push
call
ret
mov
push
push
test
rol
mov
pop
cmp
cmp
jno
mov
and
icebp
add
and
jmp
jae
mov
addr16
fs
cli
cmc
sbb
cmpsb
add
insb
xchg
pop
sbb
mov
nop
sti
add
std
xchg
inc
out
shr
inc
or
mov
sub
mov
addr16
pop
test
inc
ret
stc
incb
clc
dec
in
dec
std
test
stos
mov
ja
movsl
popf
cld
cmpsl
xchg
mov
fcmovnu
inc
and
out
shll
fistpl
mov
jae
xchg
roll
pop
out
fwait
push
mov
push
xor
mov
mov
clc
cmp
testb
sub
aad
cmp
dec
out
xchg
outsl
mov
jg
pop
fistpll
adc
fucomp
fildll
mov
add
mov
fmuls
add
cmp
inc
aad
fstps
xchg
adc
outsb
xor
mov
pop
fmuls
cltd
mov
add
pop
test
sbb
jb
dec
or
cmp
lret
js
loope
sub
jp
cmpsl
mov
xchg
sub
jns
adc
daa
movb
push
pushf
pop
inc
loope
stos
inc
sub
or
mov
sarl
or
lock
and
adcb
stos
imulb
or
pop
jge
xor
mov
cmpl
inc
mov
xor
clc
push
daa
mov
std
int
stc
sarb
popa
or
cmp
fistpl
mov
lods
jmp
lods
mov
and
arpl
push
mov
icebp
stos
fcoms
xor
cli
mov
sub
insb
jg
cmp
leave
adc
out
cmp
cmpsl
mov
into
cmpsl
mov
clc
cmp
sub
jo
xchg
and
jle
lret
dec
adc
inc
ficoml
fistpl
and
cmpsb
call
mov
push
cmp
outsb
mov
clc
add
sub
pop
subl
mov
cwtl
adc
adc
cmpsb
push
push
lahf
pop
outsb
insb
ljmp
pop
mov
dec
popf
sahf
nop
sub
xchg
sbbl
cmpl
xchg
insb
sbb
fisttpl
jle
jo
movsl
ss
lea
int3
fsubs
adc
push
shrb
mov
sbb
pushf
inc
sub
icebp
push
mov
inc
xlat
aas
mov
mov
cmc
fisubrs
fidivrl
iret
vphsubdq
imul
and
jmp
fisubrs
ret
push
sbb
mov
lret
pop
enter
push
out
testb
jno
push
push
dec
or
bound
jbe
push
ds
inc
lock
cmc
incl
mov
cwtl
inc
jle
jb
mov
call
mov
fildll
jo
scas
inc
adc
add
jge
xchg
or
lods
mov
pop
push
pop
inc
lahf
xlat
or
movsb
cmp
pop
jle
ss
cltd
lods
mov
mov
outsb
push
in
imul
and
xchg
cmp
daa
je
xchg
mov
fldz
push
jae
inc
sub
jb
mov
add
popf
test
les
outsl
adc
and
daa
dec
jle
fmuls
mov
pusha
adc
repnz
ret
push
mov
outsl
test
or
hlt
cs
jno
sub
jl
mov
stos
adc
js
lret
scas
nop
in
iret
xor
in
fucomp
xorb
bound
push
scas
or
cwtl
lahf
cmpb
ja
loopne
xlat
pop
jns
ret
adc
mov
jo
push
repnz
sub
adc
pop
test
lahf
and
outsb
xor
xor
push
aad
cmpxchg
int3
add
leave
sub
ret
fwait
add
gs
scas
pop
pop
and
mov
push
adc
and
stos
popa
into
jp
cmp
cmp
test
xchg
ficomps
jp
xor
in
scas
gs
movsb
sahf
rcrb
popa
nop
sub
xchg
fwait
push
cld
push
push
cmp
addb
or
cmp
lcall
cmp
data16
push
and
popa
jbe
out
dec
movsb
in
cmp
mov
sbb
cld
outsl
fstpt
loop
les
mov
imul
fbstp
and
mov
dec
and
and
insl
and
in
add
mov
xor
jl
call
es
add
sbb
dec
lea
je
das
mov
inc
dec
subb
es
nop
push
push
add
lret
mov
fwait
pop
push
loope
mov
mov
jp
movsl
inc
sahf
push
xorb
imul
loop
aas
cmc
push
xor
mov
inc
xchg
sarb
leave
aaa
mov
mov
mov
sub
xor
into
pop
pop
rorb
mov
shrl
movsl
dec
jle
scas
inc
dec
cmpsb
xchg
jne
cmp
fwait
arpl
push
pextrw
cmp
push
andb
test
pop
mov
andl
add
mov
cltd
mov
or
jp
pop
scas
pusha
pop
mov
repnz
xchg
mov
cmpsb
out
mov
mov
pusha
and
pop
icebp
addr16
rsm
test
rclb
loop
inc
jne
ds
inc
fcompl
inc
xchg
cmpsl
xchg
push
loopne
sarb
in
int3
xchg
call
lret
mov
inc
cmpsb
loope
or
std
xchg
or
fdivl
aaa
jle
pop
inc
js
inc
les
insl
xor
mov
and
scas
pop
pop
dec
mov
aas
or
adc
jno
push
inc
push
test
pop
sub
mov
sbb
scas
lcall
cmp
pop
xchg
pop
and
jo
imulb
leave
push
cmpsl
mov
int3
push
jcxz
inc
or
out
jb
sub
mov
xor
xor
adc
insb
inc
lcall
outsb
mov
mov
sub
out
lock
add
push
lahf
xor
dec
call
aad
je
lret
push
pushf
push
pop
pop
or
mov
xor
jae
dec
adc
dec
js
int3
push
dec
dec
xchg
or
outsb
lds
ret
dec
add
mov
inc
sbb
dec
mov
dec
mov
gs
aam
or
shrb
jp
int
fstpt
add
lds
mov
xlat
inc
or
mov
jne
into
or
cmpsl
mov
fdivrp
push
sub
xor
mov
sub
cmp
adc
cltd
and
xor
push
lods
and
inc
jnp
pop
xorl
andl
bound
adc
add
out
dec
pop
dec
movsl
add
mov
movl
lods
add
punpcklbw
mov
sub
shll
mov
sub
or
cmp
int
aaa
xor
aam
shrb
add
push
jecxz
in
cmp
jae
add
mov
rolb
pop
imul
std
or
or
or
and
lahf
adc
add
mov
arpl
stos
loope
stos
mov
dec
sbb
stos
cmp
leave
lcall
frstor
jmp
push
test
xlat
xchg
dec
and
add
loopne
cmp
sbb
cmc
sub
cmpsb
ret
add
lcall
popf
pop
mov
and
or
mov
dec
pop
cmp
ret
sub
sub
stos
iret
dec
mov
ss
push
mov
adc
cmp
and
daa
push
adc
sbb
push
out
das
sbb
aas
shll
cs
push
add
xchg
and
jle
rcr
icebp
lcall
pop
sub
xchg
aas
inc
outsb
loopne
or
fwait
test
lds
lea
xor
jge
xor
fistps
jbe
mov
fs
xor
je
xchg
dec
mov
sbb
das
shr
mov
sbbl
pop
scas
in
jl
add
sub
test
dec
mov
pusha
test
and
sahf
popa
mov
pop
hlt
mov
adc
in
mov
adc
imul
cmp
pop
mov
pop
inc
in
lahf
test
fimuls
or
ljmp
mov
push
std
push
mov
mov
and
dec
adc
xchg
ljmp
sub
inc
or
cli
movsb
inc
je
xor
rorl
adc
and
arpl
mov
mov
repnz
xorl
movsl
mov
xor
push
pop
sub
xchg
aaa
sub
pop
clc
loope
adc
loopne
aas
lea
push
add
xchg
mov
jge
add
inc
arpl
pop
jb
pushf
ret
arpl
stc
stos
or
lock
popf
lods
stos
pop
sbb
mov
cli
jo
fstpt
xchg
mov
xchg
mov
rcl
mov
cmpsl
jo
leave
mov
std
mov
jle
mov
or
cli
push
cmp
lock
mov
jg
xor
pop
inc
inc
pushf
xor
xorb
pop
push
leave
out
xchg
pushf
ror
lock
ja
je
cmpsl
xor
cmp
xchg
fmulp
divl
fs
inc
test
inc
je
push
pop
ja
clc
std
enter
ljmp
lods
out
add
xor
push
jno
pop
mov
int
jns
ret
jp
xchg
sbb
dec
adc
xchg
es
mov
out
add
inc
mov
out
sahf
lea
nop
sub
lret
xchg
adc
and
in
pop
nop
adc
sahf
xor
inc
xchg
adc
pop
movsb
or
dec
ds
into
inc
mov
fisubl
inc
mov
loop
mov
jb
xchg
popf
fwait
imul
negb
push
int
cmp
xchg
pop
cltd
pop
mov
or
cmpl
or
lahf
push
cmpsl
adc
xor
inc
or
cmp
fimuls
push
jbe
fsubl
push
leave
dec
in
sahf
jecxz
push
add
aaa
notl
rcl
inc
mov
lds
adc
sub
ficomps
lcall
pop
lahf
inc
fldl
pop
or
sbb
sub
out
dec
lahf
push
je
sub
xor
add
xor
cmpsb
lods
je
test
ljmp
loope
sub
imul
xchg
sbb
js
imul
scas
decl
or
ja
divl
in
imul
decl
mov
mov
cmpsb
in
mov
dec
add
jnp
ds
insl
lret
popa
push
sbb
mov
sub
ds
jns
cs
inc
and
inc
in
addl
in
adc
mov
push
inc
daa
inc
xchg
xchg
daa
dec
add
xor
xor
loop
test
push
pusha
int3
movsl
jnp
xchg
cmp
cmpsb
dec
in
mov
sub
jno
xchg
movsb
dec
icebp
jae
sbb
hlt
xor
inc
btr
xchg
jmp
hlt
inc
repnz
and
jb
push
iret
insb
in
nop
jne
mov
adc
add
div
or
lahf
jp
xor
scas
fildl
cmpsl
dec
and
pop
out
lea
or
push
mov
inc
xor
hlt
adc
into
repnz
mov
out
mov
test
xor
bound
add
cmp
pop
aad
adc
or
xchg
mov
test
imul
sbb
leave
es
loop
fistpl
scas
int
nop
hlt
repnz
inc
das
and
mov
jge
adcb
lret
aas
add
pusha
fdivr
mov
arpl
jno
jle
nop
ljmp
jb
cwtl
dec
dec
mov
pusha
mov
shl
mov
aad
not
xor
mov
std
ret
pop
ret
lock
pop
imul
mov
sub
cmpb
mov
out
sub
adc
orl
add
xchg
push
mov
js
cmpsl
dec
sahf
repnz
movsl
orl
outsl
sub
dec
add
loope
pop
sub
jp
inc
rol
fwait
rclb
je
dec
bound
mov
cld
call
or
inc
inc
mov
ja
mov
push
sub
test
xchg
xor
xor
nop
lahf
sub
xor
push
jnp
inc
jmp
mov
cmp
mov
repnz
scas
push
out
and
dec
push
adc
loop
sub
jbe
cmp
pusha
adc
sbb
adc
xor
pop
inc
mov
je
mov
mov
cmc
cmp
push
inc
push
inc
mov
adc
out
hlt
cmpsb
movsl
ljmp
popa
das
pop
call
sbb
lods
pushf
icebp
cmp
shl
push
xlat
mov
add
int3
fcmovnbe
xchg
xor
sub
xchg
jb
xchg
jbe
mov
pop
add
shrl
cmp
in
addr16
or
mov
in
mov
scas
aad
in
int
xchg
jns
inc
mov
mov
sbb
cmp
cmpsl
pop
scas
pusha
mov
pop
sbb
cmc
and
sub
divl
mov
pop
pop
mov
mov
lods
jmp
dec
clc
clc
sub
xor
push
aad
cmp
leave
stos
mov
mov
sbb
add
xorl
mov
shlb
lcall
and
scas
dec
add
adc
xor
imul
cmpsb
adcb
roll
mov
mov
cmc
push
fnstenv
jmp
sbb
push
jae
pop
xchg
lods
sbb
sbb
xchg
inc
repz
xor
cmp
pop
mov
cld
mov
pop
fistpl
leave
and
add
inc
data16
movl
out
pop
outsl
xchg
or
pop
push
mov
mov
and
mov
orb
mov
scas
cmc
loopne
push
incb
sub
dec
gs
dec
fmuls
jecxz
adc
and
push
ficoml
inc
fisubs
push
negl
outsb
cld
lods
pop
pop
lret
jb
xor
cmp
mov
xchg
dec
or
arpl
mov
mov
sbb
adc
mov
push
mov
in
lahf
and
and
lock
iret
adc
cmp
inc
insl
jb
mov
xor
in
sahf
leave
out
out
xchg
out
lahf
test
sub
mov
aas
test
xchg
mov
push
cwtl
sbb
xchg
or
sub
fisubrl
jne
out
fiadds
mov
jbe
mov
shrl
cltd
xor
xor
idivb
inc
loop
or
into
jmp
loopne
aaa
pop
icebp
mov
xor
mov
push
inc
in
and
pop
cli
xchg
inc
sbb
mov
aad
aad
aad
xchg
int
jb
cmc
xor
sbb
fwait
sti
add
arpl
out
fiaddl
test
out
sti
dec
sarb
pop
fisttps
loopne
fisttpll
loopne
mov
jno
or
imul
cmp
ja,pn
sbb
and
in
cwtl
loope
cli
mov
cs
stos
xchg
add
out
dec
xor
popl
shll
push
push
sub
mov
int
aaa
add
es
imul
sub
gs
sbb
dec
cs
repz
mov
lahf
addb
cmp
mov
aas
push
jg
and
pop
push
outsb
and
fwait
mov
movsb
mov
in
ret
mov
xor
pop
je
mov
pop
cld
in
jge
mov
pop
outsb
mov
out
aaa
mov
fistpll
clc
inc
cmp
fwait
or
js
loope
sbb
xor
sub
dec
push
xchg
test
cltd
je
bound
or
cmc
in
cmp
dec
adc
movsl
sub
cld
add
sahf
movsl
adc
je
daa
gs
inc
test
mov
sbb
movsb
inc
cli
clc
sarb
into
stc
push
dec
dec
es
xor
adc
inc
pusha
or
and
xchg
pop
filds
xor
test
xor
add
jecxz
pop
mov
add
in
out
cmp
aad
pop
push
inc
dec
and
add
faddl
fildl
and
fwait
mov
repz
jbe
dec
aas
mov
dec
cmp
xor
sbb
scas
mov
adc
jp
orb
push
mov
jns
imul
xor
cmp
shl
sti
bound
lret
adc
push
mov
add
add
outsb
movsl
test
hlt
lock
dec
leave
popf
loop
mov
scas
cmpb
push
outsb
sbb
pop
push
inc
fwait
or
lcall
sbb
idiv
xor
xchg
es
loope
xorl
iret
stc
stc
pop
push
and
jae
cmpl
lahf
cmpsb
shrl
push
sbb
or
inc
fadd
fcmovnu
sbb
in
mov
les
js
sbb
push
dec
les
outsb
bound
out
stos
dec
out
and
mov
movsb
mov
aam
mov
repnz
sbb
xor
pop
add
mov
or
pop
enter
test
add
dec
jle
dec
nop
xor
jns
stos
lea
push
out
pop
loopne
mov
es
pusha
ds
adc
inc
or
cmpsb
lahf
inc
movsb
std
push
fwait
mov
jo
inc
aaa
dec
lcall
movb
out
sub
push
insl
test
gs
cmp
mov
jo
sbb
lahf
add
out
loope
loopne
sub
in
repz
icebp
xchg
pop
xor
das
mov
pop
pop
pop
ret
mov
outsl
or
gs
sbb
push
jne
pop
and
push
in
hlt
outsb
mov
xor
push
pop
or
hlt
sbb
inc
and
xor
mov
cmp
call
and
test
orb
ss
pop
addl
dec
scas
call
lods
mov
mov
rorl
and
push
je
mov
inc
inc
mov
inc
gs
aad
xor
clc
dec
xor
adc
loope
sarb
aas
and
mov
je
popf
ret
xorl
aas
or
mov
xorb
sub
pop
or
jns
fsubrs
ret
xor
xchg
jecxz
and
pop
jnp
xor
pop
or
sahf
add
mov
xlat
mov
add
push
sbb
dec
in
movsl
add
mov
aaa
fisubs
push
adc
iret
add
dec
jp
sub
sbb
and
bound
sbb
and
jno
orb
add
xchg
arpl
fidivrl
xchg
jecxz
aad
repz
icebp
push
jle
pop
movsl
mov
out
adc
dec
adc
data16
fldl2t
adc
sbb
xlat
inc
fsubr
fcmovnu
add
add
ljmp
xor
cmpsb
shrl
cli
aad
add
into
xlat
lods
cmpsl
xor
mov
jae
mov
pushl
dec
fcomp
js
ret
sbb
inc
fisubrl
sub
inc
mov
mov
rcll
ret
subl
push
adc
adc
cmp
mov
fstps
lcall
mov
ret
lret
outsl
lods
inc
lret
repnz
inc
push
xchg
nop
loope
lock
xchg
stc
enter
cwtl
lods
dec
pop
fs
cmp
xchg
rcrl
xor
std
sbb
insb
xchg
enter
mov
ret
in
sar
aas
cmp
les
shrl
and
mov
xor
adc
adc
sbb
cmp
push
pop
cmp
je
push
fsubr
fadds
aad
mov
pop
out
xor
dec
xchg
in
cmp
sbb
arpl
or
fistpl
adc
or
popf
gs
sti
sti
jl
idivb
mov
adc
jnp
inc
mov
add
sub
inc
sub
add
pop
in
out
out
adc
push
or
or
pop
ja
inc
in
add
movsl
in
push
jmp
adc
inc
lret
xchg
out
jmp
and
push
fldcw
nop
push
pop
cli
imulb
push
jne
scas
mov
je
jns
xor
cmp
jo
std
xor
or
adc
jmp
cwtl
push
mov
jle
cmp
xchg
mov
push
mov
in
mov
push
std
xchg
nop
out
add
push
movsl
rcr
inc
inc
aaa
dec
jmp
test
pop
adc
stos
in
repz
stos
fwait
in
adc
inc
inc
js
fadds
insl
std
daa
scas
aas
mov
dec
jmp
mov
nop
mov
rorb
testb
cmp
add
stos
inc
cmp
icebp
dec
pop
lock
xor
fwait
push
and
xor
and
cltd
test
add
pop
mov
sub
fwait
adc
dec
out
add
iret
filds
dec
test
push
in
xlat
sbb
dec
cmpsl
jmp
mov
out
pushf
cmp
fistpll
mov
push
movsl
pusha
rcll
daa
dec
cmp
pushf
pop
lds
sbb
jb
lret
fldpi
or
inc
movsl
mov
in
cs
dec
xor
xchg
xchg
iret
sub
addr16
addr16
dec
sub
mov
cmpsb
sti
jp
int
clc
adc
push
fstpl
clc
or
pop
int3
jae
mov
mov
hlt
andb
repnz
add
adc
fisttpl
inc
das
push
cwtl
mov
sbb
fs
push
dec
iret
int
xor
or
jecxz
cmpsl
pop
mov
inc
fwait
xor
pop
fimull
xchg
fmul
xchg
addr16
dec
dec
call
xchg
ret
notl
out
xlat
pop
push
or
nop
pop
pop
xchg
cwtl
std
mov
mov
data16
gs
das
mov
jp
ret
xchg
jmp
push
arpl
bound
xchg
push
pop
push
adc
mov
lods
push
scas
mov
enter
add
bnd
or
popa
sahf
and
popf
mull
jb
imul
or
pop
icebp
jmp
sub
mov
shrb
jge
sbb
testl
pusha
fidivrs
push
loop
add
fmull
mov
and
pop
outsl
mov
into
hlt
sbb
push
sbb
daa
jo
or
push
push
in
ret
imul
and
aas
mov
lods
mov
cltd
xchg
cmpsl
sub
jno
cli
jp
ret
stos
or
push
pop
js
adcl
mov
adc
push
addr16
into
mov
int3
aas
cmpsb
mov
inc
roll
lret
pop
in
aas
outsl
in
nop
xchg
in
sarb
jns
lods
daa
mov
js
add
xor
sub
movsl
inc
aaa
adc
test
icebp
add
clc
fbstp
fucom
cmovno
or
aam
jbe
adc
jp
stos
mov
jecxz
es
cs
out
push
jae
call
push
in
imull
mov
dec
sbb
or
adc
or
lahf
aas
ja
lods
jg
jae
fisubs
sub
add
mov
sahf
pop
jo
mov
dec
inc
hlt
add
fwait
push
xchg
or
fsubs
sbb
nop
adc
movsb
push
add
repz
rcr
jmp
jno
stc
fnsave
frstor
pushf
divl
xchg
stc
fistl
imul
inc
repz
cmp
pop
mov
or
cmp
fcomps
cltd
dec
repnz
mov
mov
add
in
call
stc
fcoms
icebp
xor
lds
leave
push
sbb
lea
push
or
add
adc
mov
add
ret
fbld
lds
movsb
or
pop
inc
jl
jb
je
or
mov
ret
lods
jno
lock
xchg
pop
lods
push
xchg
mov
addr16
ret
jbe
or
fwait
cld
mov
pop
push
clc
ret
inc
pop
pushf
sahf
pop
cmp
mov
mov
and
lret
inc
mov
insl
fcompl
int
rolb
mov
stos
mov
jo
pop
out
shlb
adc
int3
dec
daa
fisubl
jge
aas
orl
pop
xchg
out
lods
sbb
je
pop
xchg
aas
sub
xchg
lods
cli
push
rcr
sub
daa
add
xchg
ljmp
cmp
add
fwait
cmp
outsb
test
mov
arpl
adc
and
pop
sub
test
add
jae
inc
mov
test
mov
add
pslld
xor
sbb
sbbl
lret
xchg
mov
mov
je
iret
push
and
in
xchg
or
xchg
test
jle
nop
insb
repz
pop
dec
push
sahf
mov
mov
push
jle
stos
mov
fwait
in
push
cmp
adc
cmp
cmpsl
cmp
push
sbb
scas
inc
out
mov
ljmp
es
sbb
mov
out
xchg
in
ret
outsl
push
pop
aaa
sbb
loope
xor
push
jns
dec
negl
push
cld
mov
push
pop
push
filds
les
icebp
sub
inc
mov
dec
andb
clc
mov
push
xchg
clc
rcl
popf
mov
xchg
andb
and
ret
push
sbbl
int
aas
addr16
and
scas
es
xchg
fstps
in
push
jmp
adc
sbb
cmp
push
mov
pop
mov
bound
aam
mov
fildl
mov
jmp
dec
dec
adc
and
movsb
push
jb
call
xor
notb
push
push
push
pop
adc
mov
push
sbb
lock
dec
sbb
push
cmp
jno
imul
fsubs
sahf
jle
pushf
lock
dec
es
mov
dec
pop
add
sbb
jg
inc
push
icebp
aad
pusha
mov
mov
mov
sub
sbb
push
xorl
cli
push
or
shr
jecxz
inc
or
je
xchg
add
mov
jae
lea
aaa
dec
leave
mov
cmp
pusha
into
or
sub
mov
mov
divb
inc
pop
mov
dec
loopne
ret
sbb
jbe
arpl
xchg
les
xor
in
call
lods
inc
add
mov
jae
test
jae
push
data16
xchg
or
sub
xchg
push
flds
inc
shrb
pushf
decb
inc
shlb
add
test
ret
pop
loope
nop
add
insl
mov
xchg
aaa
cmp
stc
cmc
roll
cs
mov
push
shlb
jb
or
pop
dec
cmp
andb
add
jmp
mov
inc
sub
inc
dec
dec
xchg
mov
and
fwait
mov
mov
mov
and
xchg
xchg
and
add
call
fdivrl
mov
add
jae
xchg
xor
mov
testl
lea
scas
sub
xchg
int
mov
test
push
xchg
iret
xlat
out
mov
imul
sbb
inc
mov
roll
and
push
mov
mov
insb
add
and
dec
sub
pop
in
shlb
icebp
movsl
mov
hlt
jmp
jmp
push
mov
stos
aad
or
mov
dec
int
repnz
xor
cmp
jmp
cmc
mov
stc
addl
fs
mov
and
mov
jne
pop
pop
jns
ret
jle
loopne
out
xor
clc
ljmp
into
gs
mov
fcmove
xor
popa
pop
repnz
push
ljmp
int
test
dec
fidivrl
fcomp
and
jns
pusha
sbb
mov
xor
arpl
push
into
lea
jge
jg
adc
pop
je
shl
xchg
aam
jecxz
les
clc
rorb
popf
adc
xor
mov
stc
push
pop
cmp
jge
add
leave
jnp
cmp
cli
fdivr
mov
hlt
stos
inc
mov
cmp
adc
clc
ret
cmp
es
paddq
je
fdivl
mov
je
sbb
test
out
imulb
push
push
pop
cmp
push
je
mov
sub
inc
or
add
imul
and
xchg
pop
mov
dec
push
cmp
or
jmp
adc
push
dec
fistpll
sbb
outsb
and
mov
test
es
addr16
adc
add
add
jns
mov
fnstcw
test
stos
inc
lret
cmp
adc
xor
mov
loop
cmp
mov
push
ss
mov
add
mov
test
jne
sti
inc
jnp
push
mov
cmpsl
cld
cmc
and
in
fs
or
pop
push
mov
xor
lcall
out
cmp
ret
jl
lret
adc
jge
and
cmp
jle
scas
cmpsl
fcoml
stos
int3
pop
mov
jns
mov
sub
push
push
test
add
testb
stos
sub
test
mov
aad
rcrl
pop
hlt
shrl
jnp
sbb
in
sbb
je
mov
xchg
icebp
jns
fisubrl
ljmp
bound
push
cltd
test
pop
aas
test
sbb
lods
mov
xor
jp
movsb
daa
in
leave
out
xor
inc
pop
js
sarb
and
cmpsl
jge
aas
pushf
dec
loope
int
inc
pop
js
jecxz
sub
in
sbb
cld
aad
xor
pop
or
insb
jl
sti
fldl
es
add
outsb
inc
fwait
insb
iret
mov
sub
push
fidivs
ljmp
mov
and
je
cmpsl
mov
xor
push
xchg
dec
xor
and
in
pop
in
xchg
xor
mov
sbb
pop
push
into
fcomps
mov
iret
mov
shrb
xchg
out
sub
es
js
and
mov
adc
pop
or
push
ja
cmp
add
mov
mov
or
insl
xchg
xchg
jecxz
push
pop
fistpl
jp
mov
pop
popa
mov
arpl
aas
add
clc
mov
push
jne
and
sub
sbb
push
xchg
mov
cmpsl
or
adc
jbe
outsb
push
mov
push
jge
inc
in
es
push
adc
mov
fnstenv
mov
call
jge
enter
loope
movl
adc
pop
fadds
aaa
sub
push
gs
pandn
lret
dec
jns
fwait
push
cmp
jne
dec
imul
mov
add
in
inc
iret
sub
add
push
out
pop
inc
push
sti
xor
andb
and
pushf
nop
pop
pop
sub
mov
xchg
adc
insl
push
testl
pop
imul
lds
inc
call
bound
push
jle
and
xchg
sbb
jg
into
lds
cld
into
arpl
jae
pop
ds
in
push
rcll
call
inc
lods
cmc
xor
xor
jb
sbb
mov
cmpsb
divb
jle
arpl
test
subb
out
loop
scas
imul
push
or
aaa
adc
bswap
push
sub
leave
pop
sbb
xor
in
mov
in
add
inc
or
inc
iret
push
frstor
lahf
rcll
lock
aas
ret
enter
add
movsb
repnz
mov
push
shlb
daa
push
sar
cli
xchg
dec
mov
mov
xchg
push
cmpsl
cmpsb
mov
mov
notb
cmp
add
push
movl
jp
push
add
add
jb
test
out
push
test
and
mov
out
sbb
loopne
out
dec
mov
mov
cltd
jb
lock
repz
iret
sbb
nop
dec
sub
cli
or
outsl
fidivrs
mov
aas
fnstcw
mov
mov
sti
adc
inc
xchg
add
ss
cwtl
call
mov
das
adc
xlat
outsl
jbe
aas
xor
out
aad
pushf
scas
sbb
push
xchg
fs
ss
push
mov
jo
lods
in
stos
mov
inc
inc
js
andl
push
jbe
aam
loopne
cld
cmp
cmpb
adc
push
mov
jp
dec
lea
jno
and
inc
imul
test
lret
inc
adc
rclb
xchg
cs
jns
aam
and
jge
xor
pop
pop
stos
or
leave
push
push
dec
cltd
jnp
sub
add
jl
icebp
sub
pop
lods
bound
sahf
enter
sbb
sbb
stos
call
movl
mov
je
cmpl
jmp
ficoml
scas
adc
push
sub
fs
fwait
xor
imul
es
imul
popa
pop
popf
pop
add
and
add
pop
imull
in
fdecstp
lds
jae
or
and
sub
insb
pop
pop
arpl
scas
in
xchg
inc
fidivl
add
jp,pt
mov
or
jo
std
iret
adc
mov
mov
out
pop
popf
arpl
and
sub
aaa
repnz
popf
pop
icebp
daa
xchg
int3
push
fidivs
into
roll
xorb
jmp
xchg
xchg
fiadds
cmp
xor
outsl
xchg
lret
and
mov
xor
dec
jo
iret
scas
pusha
sub
leave
test
ss
sub
std
jns
sbbl
lock
jae
sub
mov
out
and
pop
inc
hlt
movsl
jge
mov
mov
sub
dec
cmp
xorb
lds
movsl
mov
mov
adc
push
in
sub
mov
add
cmp
out
push
jns
sub
ds
rol
imul
scas
hlt
movsb
mov
sbb
sti
sbb
scas
xorl
add
pusha
lods
mov
pop
in
inc
xor
enter
bound
ja
out
mull
pop
xchg
rorb
pop
jno
aas
pop
sarl
and
aas
lret
jno
jno
cltd
cli
in
mov
mov
xchg
push
mov
jg
pop
jne
push
in
dec
in
sar
mov
pop
add
mov
scas
stos
or
add
sub
test
mov
ja
repz
fstpt
add
lret
mov
mov
xor
xchg
jecxz
out
push
repnz
mov
add
gs
outsb
loope
inc
adc
push
aam
add
into
out
sbb
or
test
push
shrb
stos
vminpd
lods
icebp
dec
fimuls
jle
push
mov
sbb
xchg
arpl
xchg
xchg
mov
pop
std
mov
vpcmpgtb
ret
je
int3
out
out
cwtl
or
bound
lahf
sar
adc
mov
movsl
popa
inc
mov
clc
movsb
adc
pop
aaa
inc
mov
loopne
cmp
mov
fildll
jno
jecxz
adc
mov
dec
mov
pop
inc
push
jno
cs
cwtl
mov
dec
mov
jecxz
lret
cmpsl
subb
shlb
fcomip
sbb
imul
andl
notl
data16
repz
sbb
cmp
xchg
mov
test
stc
inc
addr16
inc
mov
xor
sub
scas
push
les
or
sub
scas
xchg
out
push
cmp
jge
pusha
xchg
adc
jns
jecxz
mov
ret
cwtl
inc
addl
sbb
popf
imul
daa
jg
cld
popa
mov
scas
ss
xchg
jge
sub
mov
dec
imul
push
mov
jae
xchg
jne
xchg
out
jecxz
mov
ds
fistl
out
xchg
jae
cli
movsl
sub
pop
inc
and
sub
add
fists
pop
nop
pop
xchg
lahf
test
and
cmp
orb
pop
mov
and
or
lods
subl
cmp
imul
out
jno
mov
cld
adc
jl
add
jb
dec
pop
mov
dec
sub
mov
mov
cmp
imul
adcl
jno
xor
iret
mov
jmp
out
or
jle
xchg
sbb
stos
inc
out
jbe
pop
movsb
mov
insl
dec
mov
jbe
pop
je
ja
xor
xlat
mov
movsl
cmpsb
inc
pop
xor
lret
int
sbb
cld
scas
mulb
dec
dec
test
xchg
jnp
push
sbb
clc
int
push
loop
pop
popf
jo
test
or
sbb
cmp
out
and
loop
push
in
outsb
sbb
xchg
sti
and
test
mov
call
in
push
mov
mov
movsl
arpl
dec
daa
pusha
mov
aam
jae
adc
lcall
bound
add
mov
sub
adc
icebp
lret
je
sub
sbb
mov
mov
lods
push
sbbl
adc
lds
lret
mov
and
js
ficoml
jae
push
das
adc
jle
in
push
aam
mov
mov
nop
cmp
cwtl
cli
inc
mov
scas
mov
incl
ret
xchg
mov
jo
iret
push
mov
rcll
mov
jb
add
mov
in
adc
test
outsb
repz
rcrl
mov
popl
xlat
aam
daa
mov
jg
lds
xor
inc
xchg
push
dec
icebp
inc
decb
in
lods
mov
rorl
jl
loopne
mov
and
pop
and
aam
in
and
imul
ja
sbb
in
or
insl
movb
jnp
pop
adc
and
adc
pop
jae
cmp
xor
mov
xor
jne
cmp
in
fistpl
iret
xchg
and
cmp
mov
push
sub
shlb
lods
fadds
push
inc
and
sub
stos
xchg
insl
ret
xchg
inc
popf
in
cmp
or
push
pop
out
cltd
jmp
adc
rcrb
out
stos
movsb
dec
loope
mov
mov
mov
orl
jne
sbb
dec
mov
xchg
push
inc
inc
or
clc
lods
into
imul
std
push
test
ret
xlat
std
push
fiaddl
push
fists
rep
cltd
insb
cmc
sub
add
mov
in
cmp
lds
mov
mov
sbb
jb
inc
push
jns
fimull
jmp
cmp
cmc
xor
mov
or
mov
add
insb
xor
sub
imul
pop
push
loopne
int3
loopne
loope
sti
lcall
loop
ret
add
dec
pop
fists
cmp
int3
test
mov
push
imul
mov
or
sbb
and
ljmp
push
popa
sti
daa
add
pop
xchg
addr16
jae
xlat
push
imulb
enter
lea
add
sbb
mov
and
xchg
add
pop
add
je
filds
scas
mov
push
jbe
xchg
jge
xor
out
stos
push
pop
aas
mov
orl
loop
cmp
or
insl
mov
out
out
fs
insl
or
xlat
out
push
and
ds
sti
mov
mov
outsl
cld
sbb
cmp
popa
adc
lret
sbb
push
push
xor
push
sub
push
xchg
xor
cmp
addl
mov
mov
pop
int3
pop
decl
mov
cmpb
cmp
and
fs
push
cmp
jge
repnz
xchg
in
in
jae
pushf
xor
pusha
add
cli
adc
jmp
fcmovnbe
cmpl
lret
incl
pusha
jle
mov
ja
fwait
movsl
mov
xor
xchg
daa
sub
push
out
push
ds
or
xchg
cmp
cmp
cmp
mulb
in
scas
mov
sbb
and
sbb
ljmp
push
mov
es
out
jge
insb
cmp
jbe
lea
add
ja
push
fistpll
fadd
add
jno
imul
add
inc
ret
out
xor
rorl
xchg
push
in
nop
xchg
clc
or
jnp
pop
push
and
inc
insb
lods
cs
cmc
pop
push
add
sub
xor
push
or
xchg
mov
testl
lea
inc
inc
test
sbb
pop
idivb
mov
insb
in
shrl
popf
dec
in
mov
adc
jns
pop
inc
xchg
xchg
or
andb
adc
xor
stos
lock
xor
add
mov
sbb
cmp
mov
adc
push
jno
fcompl
adc
jge
enter
repz
mov
add
int
dec
cmp
add
into
push
xor
cltd
push
scas
cmp
push
jbe
cmc
dec
inc
jmp
sub
and
lea
stc
dec
into
dec
jmp
mov
xorb
out
mov
fsubs
sub
add
arpl
outsl
and
jge
lods
rclb
les
stc
mov
in
pop
loopne
sub
ja
rcr
popa
cli
sbb
adc
mov
jnp
mov
pop
adc
mov
nop
mov
sbb
icebp
aaa
paddusb
scas
pop
dec
insl
and
popa
fildll
inc
loope
leave
mov
mov
and
jb
push
and
dec
xor
adc
adc
lods
mulb
inc
out
ret
sub
add
int3
out
add
data16
icebp
xor
nop
enter
jge
jne
cmp
dec
imul
inc
mov
xchg
mov
xchg
dec
or
jno
jae
loopne
leave
or
and
loope
in
lods
adcb
xor
in
cmp
jns
xchg
call
xchg
dec
fiaddl
insb
pop
lods
jmp
adc
dec
out
mov
add
frstor
cmp
inc
icebp
addl
mov
cwtl
out
or
xor
push
inc
das
push
xchg
sub
insl
push
xor
das
insl
jno
xchg
cmp
and
std
mov
or
std
mov
pop
dec
lea
push
lret
roll
clc
mov
mov
pop
cltd
subl
xchg
sub
jnp
jno
scas
addr16
nop
mov
fbstp
lret
push
into
inc
cmp
mov
push
icebp
inc
test
xchg
fbld
repz
sub
out
imul
leave
mov
add
cmpl
fcos
jl
mov
cmp
mov
jg
stos
or
fs
pop
int
jns
push
out
xor
lods
test
sti
arpl
sub
or
inc
outsb
pop
or
orl
push
leave
sbb
test
je
jo
dec
pop
outsl
cmpsl
xchg
xor
imul
sbb
ret
xchg
pop
jb
mov
shrb
push
bound
inc
in
pop
push
aam
int
xchg
sbb
xchg
popa
in
test
leave
sarb
decl
xchg
push
mov
pop
xor
loop
sbb
jns
pop
sub
jnp
xchg
jne
jg
fisubrl
dec
cli
push
jl
shlb
fcompl
cmpsl
into
les
sti
out
insl
aad
scas
pop
add
stos
lds
add
push
xchg
add
xlat
in
mov
inc
dec
cmp
lahf
jge
arpl
addr16
push
mov
negb
movsb
je
popf
pushf
lock
insb
push
adc
dec
cmp
aaa
negb
push
add
cli
int3
dec
xlat
movsl
pop
add
cmp
fs
pop
lcall
int3
andnps
movups
cmpsb
cmp
leave
es
pop
daa
shll
xchg
jo
jo
mov
dec
pop
pop
test
dec
add
mov
pushf
lret
sbb
in
mov
pop
cmp
pop
and
pop
mov
out
hlt
or
mov
adc
and
mov
lahf
stc
insb
jecxz
pusha
jo
out
pextrw
xchg
mov
push
call
stos
insb
test
subb
or
jl
fcomip
sub
xor
pop
sbb
cmp
fists
fmul
lock
cld
inc
add
xchg
stos
jg
sbb
mov
ret
cmpsb
std
mov
imul
or
adc
sbb
out
or
adc
xchg
rcr
test
mov
notl
push
push
cmc
scas
cmpsb
xorps
mov
mov
sbb
int3
mov
lret
jae
dec
dec
cltd
push
data16
js
or
cmp
xlat
cwtl
mov
jecxz
iret
jb
aad
inc
notl
mov
or
cmp
daa
das
out
popa
or
inc
fsubr
dec
ss
cli
rorb
pusha
xor
mov
jo
inc
scas
dec
jnp
minps
jb
sbb
sub
jp
gs
int3
cmpsl
sarl
and
mov
jmp
cmp
pop
insb
xchg
icebp
loopne
xchg
pop
sbb
inc
shll
pop
jnp
lcall
ret
xlat
test
mov
or
sub
add
dec
in
ja
cwtl
mov
fidivl
adc
xchg
adc
jmp
push
aaa
stos
mov
scas
push
mov
push
jle
and
xchg
pop
push
lret
mov
pop
call
push
inc
mov
loope
add
in
in
xor
je
daa
adc
stos
pop
movsl
push
stc
sub
dec
jl
hlt
xor
and
mov
hlt
sub
mov
jae
push
push
movsb
mov
aas
mov
jmp
sub
and
or
in
cld
cs
inc
xchg
or
outsb
test
sbb
fwait
xchg
cld
xor
sub
and
jp
call
pop
ss
roll
icebp
pavgb
sub
fs
sbb
in
xor
cmp
pop
mov
int
jmp
dec
dec
mov
jp
popf
cmp
inc
stos
adc
inc
scas
movl
cld
daa
jno
mov
and
gs
test
shll
cmp
aad
shll
iret
jo
xor
cmp
sbb
xchg
mov
cmp
push
lods
enter
stos
xor
hlt
cmpb
imul
cmpsb
dec
cmpb
xor
push
clc
call
cmp
mov
insb
jg
mov
pop
add
js
je
ficoml
xchg
mov
dec
adc
mov
and
movsl
push
js
cmp
mov
movsb
mov
pop
mov
out
lock
ljmp
adc
pop
clc
fsubr
mov
addb
push
dec
cmp
mov
xchg
ror
pop
sbb
mov
repz
xor
pusha
add
mov
call
fdivr
cwtl
sbb
dec
out
mov
xchg
cmp
jle
adc
rcr
cli
lret
pop
dec
lret
daa
add
cltd
loopne
sub
fisttpll
jl
fbld
lcall
pop
shr
fsubrs
cld
fwait
js
int
or
jecxz
xchg
dec
stos
stos
testb
call
daa
addr16
movsl
sbb
stos
jo
outsl
xchg
inc
or
jl
fistps
outsb
pop
ret
lea
fs
sub
push
mov
dec
sub
dec
xchg
les
sub
and
xchg
cmpsl
arpl
dec
and
pop
sub
jns
bswap
dec
sbb
insl
xor
adc
cmp
xor
fimull
movsl
dec
mov
mov
jmp
push
cld
inc
test
push
sub
cld
roll
cmp
dec
inc
cwtl
repnz
enter
pop
std
jl
test
push
call
sbb
aam
xchg
dec
pop
jns
mov
dec
mov
push
cs
and
sub
push
dec
stos
lea
daa
lods
jbe
aaa
sub
push
sbb
lock
pusha
lock
test
add
lock
mov
push
pop
aam
push
lods
sahf
outsl
mov
xor
inc
mov
icebp
xchg
lea
test
popf
daa
add
arpl
push
out
cmp
mov
push
mov
dec
xor
jo
iret
fistpll
dec
pusha
mov
test
adc
mov
idivl
dec
aam
dec
or
loop
cli
push
pushl
lret
sbb
add
inc
out
outsl
cmp
fsts
mov
lea
xchg
adc
sub
jecxz
sbb
add
mov
dec
mov
mov
sbb
xor
das
int3
inc
fwait
push
or
jge
std
inc
push
ret
dec
fs
dec
and
sub
call
lcall
jle
outsl
imul
fisubrl
xchg
clc
or
shrl
inc
das
jmp
xor
mov
adc
cmp
shlb
popa
sub
jecxz
push
dec
push
inc
sub
sarl
pop
sbb
mov
add
popf
cmp
std
jmp
mov
out
call
dec
sub
ljmp
xor
sub
or
adc
test
pop
in
cmc
aaa
incl
pop
mov
adc
lods
lods
mov
dec
push
lret
mov
pop
push
icebp
cmpb
mov
add
cmpsb
mov
stc
pop
je
out
cmc
fidivl
sub
mov
out
fildl
and
imul
cmp
mov
lea
je
xor
cmp
inc
sbb
test
sbb
outsb
add
lahf
xor
or
push
jnp
and
pop
arpl
cmc
mov
out
adc
lcall
out
add
daa
subb
cs
mov
inc
inc
cmp
xor
movsb
out
cmp
std
lahf
aaa
and
into
outsl
movb
xchg
dec
sbbl
ss
xchg
clc
or
mov
xor
sub
and
xchg
and
jge
pop
jg
add
cmp
adc
jne
pusha
mov
push
lods
jmp
ljmp
or
pop
je
sub
aaa
sub
sbbb
in
or
mov
insb
jg
mov
cmc
push
movsb
xorb
mov
fsub
imul
push
aas
xchg
push
std
xchg
push
ret
adc
mov
fwait
inc
push
cmp
inc
cwtl
clc
into
testb
insl
mov
mov
scas
mov
adc
xor
push
dec
rorl
push
sbb
dec
jl
nop
ja
sub
inc
xor
stos
out
es
lods
dec
sub
push
mov
cmp
push
mov
fdivl
loop
cmp
or
xor
pop
xchg
pop
bound
loop
rcrl
push
mov
inc
aas
push
fists
sti
add
push
std
mov
movl
incb
mov
lds
push
dec
das
push
fwait
mov
xchg
cmp
and
mov
xor
mov
dec
sbb
add
or
adc
add
fwait
ja
cmp
cld
and
in
pop
push
lds
stos
mov
sbb
lcall
mov
and
fsubs
inc
movsl
out
ja
ficoml
out
stos
das
add
cmp
andb
pop
xchg
cmpsb
lret
scas
in
pop
stos
fdivrp
xlat
insl
dec
ljmp
dec
cmp
int
fistps
call
push
jge
mov
adc
insl
jne
lret
lock
dec
arpl
adc
lret
mov
or
fmuls
ljmp
shr
lret
ss
cmp
and
addb
inc
dec
jo
push
popf
or
mov
mov
xchg
lods
pop
xchg
and
repz
cmpsl
jecxz
js
mov
jp
stos
ss
and
inc
lock
cmp
ret
push
mov
clc
les
cmp
mov
mov
push
push
roll
xchg
ss
nop
mov
repz
xchg
test
test
outsl
popa
leave
addr16
loopne
sbbl
add
lret
push
test
imul
loopne
inc
pushf
outsb
cmp
adc
fldz
sbb
lds
xor
xorb
or
or
shll
cmp
fstps
outsb
mov
mov
rcl
test
cmpsb
push
leave
ja
mov
test
lds
int
mov
fwait
push
test
ds
int
das
cmc
mov
cs
lock
cltd
clc
shlb
push
test
add
pop
and
sub
jp
mov
dec
call
xor
repnz
shll
mov
cmp
ja
shll
add
sub
ret
mov
add
mov
add
hlt
pop
xchg
out
mov
divb
cwtl
int
stos
movsl
cli
sub
sub
jae
inc
push
push
mov
push
hlt
mov
xchg
xor
negb
gs
out
and
mov
inc
mov
mov
pop
or
pop
push
iret
push
icebp
mov
xchg
xor
dec
rol
adc
or
std
lret
hlt
iret
stos
inc
cwtl
push
or
lds
loop
jmp
enter
mov
enter
inc
fldt
pop
or
cmp
and
pop
cmp
jmp
mov
dec
xor
lods
fnstsw
pop
jecxz
movsl
mov
aaa
mov
hlt
jl
mov
lahf
jle
loope
les
push
idivl
adc
mov
out
les
sub
cmp
popa
mov
cmpl
mov
lret
pop
ret
adc
mov
je
andl
mull
push
push
mov
fdivl
push
adc
js
xchg
push
pop
aas
or
inc
es
xchg
cs
mov
test
in
inc
jp
ds
iret
negb
sbb
jb
jno
test
popf
ljmp
shrb
sbb
popa
sbb
jb
jbe
icebp
and
cmp
lock
bound
insb
add
data16
outsb
and
push
push
lret
lcall
jb
xchg
pop
lock
xchg
push
scas
das
in
fcomip
mov
andl
and
mov
inc
movsl
or
dec
pop
sbb
xor
lea
inc
sub
add
mov
mov
cwtd
jl
test
loop
scas
sub
iret
cmp
jno
fwait
add
sti
inc
jl
rcrb
dec
loop
fdivr
jns
and
jae
push
cmp
sub
arpl
fstpl
jg
loop
or
push
daa
es
mov
pop
inc
mov
xchg
cmp
pop
rorl
pusha
loopne
pusha
adc
sahf
mov
and
xchg
ret
lret
jl
lods
add
lds
and
call
cmpsl
lret
pop
subl
out
add
or
fcoms
nop
dec
push
jecxz
mov
lea
mov
or
sub
mov
mov
aad
rcr
fwait
into
sbb
adc
lahf
aaa
push
push
push
mov
jnp
xchg
je
adc
paddsb
sub
scas
outsb
ss
pop
iret
xchg
int
sub
std
rclb
xor
mov
ror
out
ja
cmp
pop
xlat
insl
imul
inc
mov
fwait
mov
das
sbb
lret
loop
or
movsb
jp
push
movsb
out
push
aad
and
out
out
call
cli
mov
xchg
mov
or
jbe
test
jbe
cltd
hlt
cmp
andl
clc
adc
push
and
and
sahf
or
xor
repnz
repnz
test
cs
xchg
std
inc
cs
push
cmp
stc
adc
das
icebp
inc
in
loop
movsl
fistpll
mov
out
test
in
out
mov
mov
or
and
inc
ret
subb
imul
sbb
imul
ja
test
pop
movsb
cmpsl
andl
ss
xchg
scas
sub
sub
xor
jb
cmpsb
mov
pop
lods
add
mov
mov
push
lahf
and
xchg
out
ret
xor
imul
mov
adc
pushl
pop
adc
xlat
sarb
cmp
mov
xlat
push
and
jno
pop
xchg
lret
lds
mov
jae
inc
mov
cmp
push
xor
pop
add
pop
loopne
test
push
imull
dec
inc
push
out
and
inc
loop
pop
mov
mov
dec
pop
jns
inc
mov
xchg
mov
mov
xchg
mov
sub
arpl
dec
icebp
repnz
cmp
ret
inc
jmp
xor
xchg
push
jp
adc
scas
int3
pop
scas
ret
jge
dec
movsb
clc
add
orb
lahf
rolb
repz
icebp
sub
mov
cmp
mov
cmp
pop
pop
leave
dec
ret
xor
sub
push
sbb
stos
negl
sbb
maxps
xchg
xor
aas
or
xorl
sbbl
popa
int3
jns
jmp
sarb
cli
in
and
arpl
loope
shll
and
test
sub
movsl
add
out
pop
sub
ret
jo
outsl
xchg
imul
sarb
cli
nop
pop
gs
push
adc
mov
push
inc
jmp
sub
call
fsubl
movsl
mov
inc
xchg
inc
scas
and
and
cmp
sahf
aad
mov
push
js
inc
shl
jb
arpl
shll
xchg
movb
fisubs
jmp
xchg
jmp
movsl
pop
xor
stos
out
push
je
sbb
fistl
sbb
cmc
sbb
push
repnz
pusha
ja
jp
ret
std
fdiv
call
lods
loopne
lret
mov
mov
andl
sub
repnz
lcall
pop
mov
sti
lds
pushf
lods
add
cmp
mov
out
pop
pop
and
nop
gs
shrb
xchg
xchg
imul
pop
bound
xor
shlb
insl
inc
scas
pop
and
pop
cmp
mov
pop
cmp
fsubl
es
jmp
lret
push
push
fmulp
and
xor
dec
and
in
mov
or
sub
or
mov
js
jp
cmp
jle
mov
mov
icebp
add
outsb
sbb
cmp
xchg
lods
pop
or
dec
cmp
dec
pop
out
sbb
cs
lcall
and
dec
lcall
cmp
adc
fistpll
mov
mov
dec
and
fstpl
push
sti
sahf
in
cmpsl
cmpb
stc
adc
lret
icebp
out
mov
movsl
movsb
mov
les
xlat
notb
popa
dec
jne
mov
imull
mov
or
jno
cltd
sub
jecxz
cmc
sub
jae
imul
push
adc
pop
scas
pop
pusha
in
cmp
push
pop
xchg
lods
pop
enter
xlat
sti
out
dec
xchg
and
or
push
xor
mov
cmp
bound
pop
push
imul
xor
xchg
pop
xchg
lret
test
xor
sbb
jg
insb
insl
pop
insl
inc
push
adc
dec
je
adc
lcall
xor
fisubrs
mov
xchg
cs
notb
jae
mov
pop
cmova
stc
mov
sub
icebp
fildll
cwtl
mov
aam
adc
mov
jns
xchg
ds
testl
dec
jno
fidivrs
or
xchg
cmp
aas
fldlg2
jle
popa
jl
push
push
lds
mov
mov
adc
or
add
stc
roll
pop
mov
fistpl
ret
scas
inc
xor
xor
imul
xor
lret
inc
pop
icebp
jle
cmp
adc
ret
mov
lock
jns
outsb
jl
sbb
cld
xor
hlt
cmp
sbb
push
mov
xor
stos
dec
inc
dec
add
adc
or
call
imul
in
pop
or
cmp
cmp
dec
andl
push
or
dec
scas
mov
inc
ja
sbb
neg
iret
imul
adc
cmp
jl
push
imul
fwait
adc
pop
in
lret
fstl
sub
aas
loope
cli
leave
pop
mov
jg
jb
dec
leave
testb
hlt
adc
jns
sub
lods
push
ss
inc
inc
jmp
mov
mov
leave
sub
mov
negl
icebp
mov
cltd
mov
or
jl
stc
ret
in
inc
or
out
add
ja
mov
adc
mov
cmc
xchg
sahf
unpcklps
in
ljmp
bswap
test
mov
cmp
mov
jns
adc
bound
fmulp
dec
jecxz
pop
sub
test
shll
mov
add
idivb
mov
jb
push
daa
aad
in
inc
mov
mov
dec
cs
test
xor
lds
hlt
loope
mov
xor
scas
xor
jo
mov
push
stc
cmp
jl
pusha
fmul
add
mov
loope
cmpsb
leave
push
aaa
inc
lods
and
jle
loop
call
mov
or
push
cltd
push
xchg
xlat
sbb
mov
push
or
aad
aad
or
test
test
adc
adc
test
icebp
inc
and
cmc
jns
mov
or
pop
adc
dec
pop
ret
sbb
mov
pop
push
jecxz
xor
fimull
iret
les
icebp
pop
inc
pop
int3
aaa
jno
sub
dec
dec
mov
inc
rcl
mov
mov
sub
js
test
les
jns
jp
cs
out
sarb
int3
arpl
add
sub
das
lret
shrb
jecxz
jp
add
sub
mov
jb
and
hlt
mov
cwtl
mov
or
sbb
cmp
and
xchg
pop
dec
fdivr
mov
or
xchg
mov
rcr
sub
stos
int
scas
pop
cs
fsubrl
mov
loope
jl
mov
shrl
add
sti
cmc
mov
and
or
inc
test
sub
jmp
lea
push
dec
ficoml
fildll
xor
je
out
lahf
cmp
jle
mov
jno
cmp
in
adc
aas
mov
xchg
dec
fwait
imul
es
testl
rol
xor
stos
das
mov
stc
bound
test
and
outsl
das
add
inc
outsl
cmp
int
fistpl
push
fldpi
push
mov
pushf
movsb
sarl
out
sub
imul
adc
xor
cmp
test
pushf
ret
push
dec
and
xor
enter
mov
mov
mov
and
das
cmp
jae
mov
insb
repz
ret
add
shlb
inc
mov
xchg
scas
test
es
pop
adc
mov
mov
inc
mov
lret
out
or
mov
aaa
inc
add
mov
outsb
cld
cli
shll
mov
adc
sbb
popa
outsl
movsl
xor
inc
loop
sbb
aad
into
push
jmp
pusha
out
xor
xor
mov
jle
mov
inc
gs
lea
adc
mov
inc
dec
jp
idivl
mov
es
in
mov
gs
xchg
int3
mov
lea
mov
xchg
fs
mov
lea
and
inc
lea
xchg
gs
cs
sub
mov
cmp
outsb
std
pop
ret
fnsave
gs
add
or
sub
add
push
arpl
cwtl
in
jp
js
jge
xor
andb
adc
out
out
fdivrs
lock
lods
jb
dec
sub
std
je
scas
jbe
xor
loop
aad
lahf
and
inc
inc
test
lcall
push
cmpl
xchg
pushf
lock
cmp
test
xchg
cmpsb
xchg
data16
lods
xor
orl
movsl
test
sbb
aad
mov
cmp
adc
int3
aaa
std
dec
cmc
idivl
outsl
leave
push
jns
jmp
pop
cmp
call
out
jo
and
shrl
data16
das
add
xor
repnz
pop
pop
not
imul
in
lcall
xor
scas
jb
adc
cmp
cltd
dec
loope
in
adc
js
in
ret
cld
push
scas
in
xchg
sbb
enter
lret
lods
arpl
lods
sbb
push
arpl
int
cmpsb
mov
and
jo
scas
sti
pop
add
xor
jnp
repz
xchg
jmp
pop
or
ret
adc
bound
adc
cmp
jns
adc
nop
ljmp
fcomps
cld
aam
ja
mov
call
cltd
sub
xchg
mov
cmp
add
in
nop
fucom
shrl
imul
cs
test
test
mov
int
jbe
or
test
add
adc
in
and
std
push
cmp
mov
pop
lcall
xor
daa
dec
pushf
andb
jecxz
in
sahf
add
jl
or
jmp
push
mov
add
ret
jge
xchg
lock
jnp
repnz
cmpsb
leave
xchg
mov
adcb
jnp
orb
xchg
push
int3
mov
xchg
out
movsl
xchg
push
pop
jno
push
xchg
and
out
iret
cmp
cli
stc
inc
fnstcw
fidivs
mov
push
mov
out
call
shll
and
insb
call
mov
pop
shrb
sbb
inc
cmp
lea
and
std
inc
jmp
sub
pusha
push
cli
fdiv
loopne
sub
dec
add
nop
out
mov
sbb
dec
cli
mov
dec
loopne
mov
mov
xlat
and
ljmp
and
add
xchg
shlb
xor
std
cmp
pop
mov
cli
int3
vmwrite
sbb
mov
add
adc
xlat
pop
les
and
nop
or
add
imul
push
fiaddl
and
pusha
and
cmp
pusha
mov
push
push
or
popf
dec
pusha
sbb
sub
mov
pop
push
xchg
lret
insb
lahf
push
sub
xchg
pop
inc
and
outsb
shrb
xchg
sarb
jb
push
push
js
cmp
sbb
cs
enter
dec
dec
cmpsl
jp
sbb
push
dec
js
cmp
daa
inc
imul
mov
mov
jns
or
dec
pop
xchg
scas
mov
cwtl
adc
lods
xor
cmp
ret
insl
andb
jnp
jns
test
inc
xchg
mov
jae
repnz
out
dec
imul
cmp
xor
mov
insb
out
xor
xchg
in
xorl
xor
dec
lret
lds
xlat
jae
cmp
jecxz
adc
iret
dec
fwait
pop
pop
lret
sbb
or
int
mov
insl
hlt
testb
add
cli
add
jae
jne
or
mov
and
andb
clc
idivl
xor
push
add
imul
cmp
divb
push
xlat
loopne
dec
pop
into
aaa
xor
ljmp
pop
call
idivb
jge
mov
test
jmp
add
loopne
sub
add
call
insb
icebp
fisubs
fistpl
scas
xor
fs
jbe
dec
addr16
jno
mov
xor
fwait
clc
sub
in
js
cmp
mov
jo,pn
lret
mov
scas
divl
add
stos
and
movsl
stos
stos
call
ret
push
xchg
out
out
and
mov
adc
jae
xchg
cmp
es
shll
cmp
negb
cmp
mov
loopne
roll
lcall
sub
mov
outsb
mov
jle
idivl
fists
sbb
or
xchg
cmp
cmp
sub
mov
mov
js
rep
add
add
sbb
mov
push
out
pop
loop
push
or
jne
call
popf
sub
and
pop
add
das
leave
outsl
push
into
int
test
mov
insl
and
cmp
push
iret
pop
rcl
bound
jmp
in
jg
insb
rsqrtps
adc
dec
jbe
push
and
sbb
add
ss
push
lock
leave
mov
pop
pop
inc
mov
dec
insl
imul
push
mov
cli
out
icebp
or
inc
push
lcall
inc
inc
sub
or
lret
xor
into
mov
repz
sub
out
mov
loope
aaa
stc
lret
dec
rcrb
xor
cmpsl
mov
jne
pop
pop
and
test
mov
lea
jnp
out
out
das
and
mov
add
mov
adc
sub
xor
dec
xchg
out
push
lock
lds
xchg
mov
cmp
and
in
adc
mov
ds
sub
testl
dec
dec
repnz
stos
divb
cwtl
jbe
cltd
inc
fs
popa
mov
add
loope
xor
lret
outsb
cmp
repnz
mov
jg
push
xor
push
repnz
jl
sbb
or
inc
jle
daa
dec
jno
fwait
inc
ret
mov
ja
out
mov
pushf
xor
push
inc
fstpt
dec
in
inc
mov
mov
jno
cmp
sbb
fsubl
fstl
in
popf
cmp
sti
shl
and
cmp
jo
cmpsl
rsqrtps
cmp
lock
mov
ror
add
pop
jle
jne
adc
xchg
mov
cmpsl
jl
test
mov
jnp
xchg
pop
test
xchg
mov
jae
push
leave
adc
push
arpl
jecxz
lods
cmpsl
fisttpl
lods
push
in
mov
clc
mov
or
mov
xchg
pop
mov
fnstsw
xchg
adc
out
rcl
adc
mov
pop
dec
rcrb
jg
mov
inc
and
rcll
adc
nop
movsb
jp
adcl
in
jl
imul
subb
push
stc
mov
mov
std
or
pop
stos
aam
or
imul
out
ret
sbb
xor
or
rcrl
mov
notb
add
jecxz
cmpsb
sbb
jecxz
cltd
ss
and
mov
and
jmp
shrl
jmp
xlat
shll
add
arpl
jl
add
sbb
adc
push
inc
inc
mov
enter
out
pop
hlt
bound
add
mov
mov
int3
mov
ss
mov
insl
repnz
ljmp
mov
mov
fsubrp
jae
inc
and
pusha
ret
jge
fdivrl
call
ret
mov
scas
js
pop
add
stos
lods
jns
xor
inc
mov
sbb
in
shrl
dec
sub
dec
loop
cmp
clc
mov
sbb
sbb
cltd
rolb
dec
lea
adc
daa
jno
or
cld
lahf
add
fucomip
call
jo
shrl
lea
cmp
out
sub
xchg
shrl
aaa
jns
loopne
cs
stc
push
jg
xor
lock
cmp
loopne
and
decl
pop
icebp
leave
inc
in
mov
adc
xor
mov
mov
jns
shl
cmp
lods
jo
pop
mov
push
mov
loop
rcll
bound
push
rcrb
dec
xor
inc
add
inc
out
jecxz
testl
fdivrs
popa
xor
mov
lcall
sbb
mov
jnp
dec
and
jno
jne
js
xor
xchg
inc
adcl
sbb
mov
push
or
lret
fiaddl
sbb
jnp
outsl
mov
sub
mov
cmp
sub
pop
dec
add
repz
sub
push
arpl
psubd
and
popa
lahf
jo
jne
xor
sub
jae
lods
filds
bound
ljmp
inc
lock
inc
std
ret
inc
ss
cmp
and
adc
cmpsl
stos
push
xchg
sub
movsl
in
lock
xlat
sub
call
add
push
and
adc
xor
jl
xchg
and
ljmp
push
hlt
das
jnp
mov
pop
adc
mov
fucom
mov
stc
mov
mov
dec
mov
insl
cmc
ud2
add
mov
sub
adc
sub
and
loope
mov
xchg
jae
and
cmpsb
or
clc
fdivrs
ss
jl
dec
sub
sbb
mov
lret
cmpsb
loope
mov
dec
or
addb
fcomi
mov
imul
setge
idivb
jl
push
push
testl
mov
fcmovbe
jbe
mov
out
js
lret
movsb
and
sahf
and
bound
jno
xor
ficoms
cmp
and
movsb
sub
pop
xchg
scas
jecxz
mov
jnp
pop
jmp
or
pop
fcmovnbe
pushf
sbb
gs
es
cld
add
insl
cmc
stos
fldl
shll
inc
cwtl
xor
mov
and
arpl
and
mov
pop
jne
mov
loope
jg
mov
lret
sbb
xchg
dec
jno
movsb
loop
scas
pop
xlat
and
cmp
ds
into
stos
cmp
js
repnz
jnp
inc
add
sbb
or
stc
sub
pusha
cmc
clc
jge
insb
sbb
shll
loopne
push
mov
test
add
pop
jo
cld
out
mov
sub
sahf
lcall
les
cmpsl
lcall
mov
or
mov
sbb
pop
mov
or
pop
xor
mov
int
js
jmp
inc
das
push
xor
je
cmc
andl
test
imul
jmp
inc
fcomi
xchg
loope
or
mov
and
jo
or
scas
mulb
fistpl
jne
dec
mov
inc
es
addr16
cmp
dec
cmpl
add
push
idivl
daa
mov
icebp
in
cwtl
cmc
outsl
inc
popf
int
dec
rorl
testb
sbb
inc
fisttps
mov
fstl
ret
ret
aad
andl
and
mov
test
sbb
push
stc
arpl
cmp
insb
ja
outsb
xchg
scas
movsl
ljmp
push
ljmp
pop
jmp
loope
clc
pop
push
dec
repnz
test
sub
xchg
pavgw
inc
xchg
jo
and
iret
xchg
push
xor
pusha
and
lods
jae
loop
in
aam
mov
and
cwtl
test
xor
and
xor
fwait
inc
dec
adc
or
mov
aam
cli
test
adc
sub
push
jo
sbb
or
dec
push
cwtl
or
arpl
aad
jl
popf
es
dec
sti
cmp
mov
movsl
sar
xchg
push
nop
sub
sub
cmp
push
push
jnp
and
inc
pop
pop
mov
pop
mov
pop
pop
push
xor
adc
out
shl
push
and
add
mov
pop
call
and
out
js
inc
sbb
add
test
out
pop
stos
std
outsb
imul
inc
or
sahf
mov
jecxz
ret
fistpll
outsl
cmpsb
outsb
out
rolb
adc
and
pop
dec
xor
jp
mov
xorb
inc
fs
test
pop
cmovnp
in
or
bound
and
or
test
imul
mov
and
mov
mov
idiv
out
mov
shll
lret
lahf
mov
dec
mov
jno
push
mov
pop
xlat
jg
cmc
test
xchg
rolb
daa
hlt
lds
push
popf
rorl
mov
add
lock
js
iret
jb
in
jl
aaa
mov
int
mov
push
fdivl
or
insb
xchg
mov
jns
incb
xchg
xor
out
ss
dec
adc
push
outsb
sub
insl
test
cmp
shrl
rcl
xchg
dec
das
inc
js
mov
jnp
push
and
xchg
pop
sbb
xor
insb
out
cmpsb
xchg
test
out
mov
adc
cmp
jns
insb
xor
xchg
ret
ljmp
ljmp
les
test
fistps
notb
lock
mov
or
ljmp
mov
ss
inc
pop
or
mov
jmp
cmp
lock
iret
sub
push
jns
pop
jecxz
movsl
pop
mov
test
pop
ret
test
std
ja
ja,pn
cmp
mov
sbb
je
dec
pushf
jbe
into
out
lahf
jno
mov
push
jmp
dec
stos
inc
data16
jnp
insl
mov
dec
adc
mov
sub
sub
lds
ss
jle
int
movsl
lret
test
jl
fwait
in
in
in
push
sbbl
mov
dec
push
lret
push
mov
incl
mov
loope
jle
inc
lods
loope
aaa
pusha
scas
in
dec
mov
shll
das
push
xchg
jp
add
hlt
test
mov
xlat
test
mov
dec
fidivl
dec
mov
popf
push
xor
jmp
mov
add
lahf
stos
xor
cmp
leave
icebp
or
ds
adc
and
mov
lret
dec
cld
push
xchg
arpl
xchg
cmp
inc
cmp
xor
xor
ret
xchg
mov
ficoms
mov
mov
pushf
mov
stos
jmp
jnp
mov
sahf
or
fldcw
fmul
scas
pusha
sbb
orb
mov
in
movl
cmp
mov
icebp
mov
ss
aam
das
sub
inc
mov
push
inc
lahf
je
shr
rcll
dec
xchg
gs
fs
adc
mov
imul
add
cwtl
pushl
and
enter
push
lahf
mov
sahf
sub
mov
xchg
fadds
dec
mov
jbe
stc
adc
cmpsb
push
xchg
dec
jne
inc
mov
sbb
sbb
sub
lds
lcall
push
pop
stos
pop
in
int
std
dec
stos
cmp
xlat
pop
dec
pushf
add
sub
rorb
and
stos
pop
nop
inc
pop
xchg
int3
pop
push
inc
sub
pop
incb
jle
lods
cld
pop
movsl
pop
sbb
push
jecxz
inc
cli
add
adc
fnstsw
out
popa
repnz
jbe
sub
cmpsb
mov
sbb
dec
nop
push
mov
je
fs
cmpsb
adc
lahf
rol
cltd
lcall
mov
scas
inc
push
test
pop
inc
out
pop
mov
xchg
mov
push
in
jmp
xchg
sub
test
adc
scas
xchg
push
fdivrs
jecxz
add
sahf
xchg
outsb
xor
cmp
mov
test
aas
sub
jecxz
aas
sahf
popf
xchg
mov
pop
inc
das
pop
sub
popa
pop
lea
and
mov
dec
xor
mov
xchg
cli
pop
jle
push
xchg
sbb
xlat
fdivr
scas
in
ret
enter
inc
ss
cmpsl
push
or
into
xor
popa
sbb
xor
and
sbb
sub
or
xchg
mov
out
pop
add
shrl
push
xchg
addr16
std
enter
aad
adc
insl
inc
xchg
adc
in
lds
ret
js
nopl
add
mov
push
fcompl
jp
out
jg
call
stos
adc
inc
pop
mov
pop
xchg
jne
cmp
add
arpl
cli
jge
push
and
xor
xor
aad
fucomip
inc
popf
jle
jg
les
add
out
and
mov
inc
dec
rcrl
int3
fimuls
push
and
mov
sub
xchg
jns
sarb
fnstenv
call
mov
cwtl
inc
pushf
fs
adc
shll
nop
jmp
ljmp
test
inc
aas
pop
shll
or
mov
in
add
idivl
mulb
xor
ret
idiv
jmp
movl
adc
cmp
and
ret
cmp
inc
out
int3
mov
pop
cwtl
fmuls
xchg
scas
pop
xchg
xchg
dec
xchg
jbe
rcll
push
imul
lret
scas
in
inc
ficoml
or
daa
es
xchg
xchg
sbb
sahf
push
xor
mov
adc
icebp
cmp
cwtl
xchg
shlb
sahf
mov
cmpsl
dec
out
and
popf
icebp
stc
xlat
xor
and
iret
push
mov
test
shl
pop
test
in
push
shrl
outsl
pop
sub
jne
cwtl
adc
je
les
aam
outsl
outsb
sti
push
fdivl
sahf
stos
in
push
ja
add
lods
inc
pop
addr16
sbb
adcl
clc
xchg
mov
fcomi
push
shll
int3
inc
jp
xchg
push
mov
mov
jmp
inc
repnz
lds
scas
xor
cmp
incb
pop
std
dec
xchg
arpl
lahf
sbb
nop
icebp
sbb
popf
stos
mov
add
jnp
je
mov
pop
xlat
loopne
lret
test
push
jno
mov
cmp
lods
test
mov
xor
icebp
mov
je
push
ret
lcall
insb
lea
sub
cmp
pop
pop
or
dec
fwait
add
xchg
repnz
xchg
mov
add
test
and
pushf
mov
mov
lock
xor
inc
loopne
out
xchg
cmp
lret
add
movsb
addl
mov
lret
xchg
sub
inc
jns
mov
arpl
xchg
mov
add
jo
sti
push
fiaddl
add
repz
out
xchg
mov
or
nop
in
icebp
and
out
mov
pop
enter
mov
adc
mov
mov
push
push
adc
sub
cld
dec
mov
adc
test
bound
icebp
add
sub
sub
sub
inc
mov
sahf
loopne
fldenv
mov
xor
adc
xor
dec
data16
test
outsl
cmc
jo
lret
ret
inc
dec
and
scas
mov
mov
sbb
das
jo
sahf
sbb
cmp
dec
sbb
frstor
xor
dec
icebp
out
pop
pushl
ret
mov
pop
jmp
and
sti
push
clc
xchg
fistpl
cmp
addb
loopne
lods
test
lods
mov
pop
push
jle
pop
stc
iret
ret
inc
push
ss
and
inc
outsl
or
add
xor
movsl
call
xor
faddl
dec
mov
sarl
push
ss
fs
push
xor
addr16
jge
je
or
mov
test
iret
test
pushf
les
mov
jns
icebp
dec
cmp
mov
dec
leave
xchg
mov
ret
dec
movsl
call
add
xorb
sbb
fs
cs
mov
jo
neg
push
mov
lret
testb
movsl
pop
mov
and
pop
cmp
ret
testb
test
scas
sub
sbb
fiaddl
pop
adc
add
cmp
mov
mov
xlat
pop
xchg
icebp
mov
hlt
punpcklbw
pop
mov
popf
mov
inc
adcl
lock
jmp
ja
in
jns
adc
push
pop
xor
mov
jns
inc
aas
mov
addr16
pop
std
enter
or
jmp
je
cmpsl
shlb
xchg
and
mov
cs
push
cmp
xchg
mov
cmpsb
push
mov
adc
ret
gs
aam
sub
inc
inc
imull
pop
mov
xor
ljmp
mov
ss
adc
or
cmp
mov
es
mov
cwtl
negl
dec
or
lahf
mov
dec
xchg
sub
or
out
pop
out
inc
dec
xchg
mov
insl
xchg
fisubrs
inc
scas
ss
in
push
popa
or
pushf
hlt
push
stos
push
insb
loope
pop
xor
out
rorb
hlt
mov
xchg
sub
ret
push
imul
shl
pop
out
pusha
push
sahf
mov
mov
mov
sbb
cmp
sub
xor
ljmp
repz
inc
inc
mov
sub
pop
mov
sarb
lods
shll
mov
imul
lds
addr16
cmp
test
lret
xchg
jle
lret
cmp
mov
sbb
fisttpll
ljmp
jns
pop
imul
out
mov
mov
xchg
mov
imul
and
movntq
mov
decl
jmp
add
inc
xchg
frstor
and
packsswb
push
sub
daa
cld
pop
adc
cli
push
jp
cmc
add
incb
xchg
inc
adc
cs
inc
outsl
push
dec
in
adc
lea
aad
outsl
mov
or
inc
jno
es
add
pop
mov
test
aad
sub
scas
insb
inc
int
xchg
movsb
rcll
mov
inc
push
scas
xchg
clc
rolb
aad
hlt
jnp
xor
mov
je
das
xor
daa
sbb
mov
fs
insl
out
add
cmpsl
push
add
adc
mov
iret
dec
push
lcall
jb
stos
lods
adc
sub
dec
cltd
cmpsl
cmc
in
xor
cs
negb
loope
adc
pusha
add
mov
outsl
test
scas
dec
out
loope
adc
mov
adc
js
into
pop
jne
mov
arpl
xchg
inc
in
add
and
xor
or
rcrl
loope
sbb
ret
fcmovnu
push
mov
jno
ljmp
ja
push
mov
out
jns
push
sbb
imul
dec
lds
mov
add
cmpsb
iret
pop
adc
mov
test
cmp
jecxz
movb
pop
int
adc
inc
rcr
sbb
cmp
pop
int
cld
shll
pop
in
push
jg
xchg
adc
inc
dec
inc
test
out
xchg
cmp
cmc
sbb
mov
xor
jp
incb
mov
xor
fnstsw
pop
pop
stc
sub
cmp
mov
fs
faddl
sub
lahf
repnz
xchg
js
fcoml
pushf
lods
je
fdivr
sub
mov
scas
sarb
sahf
or
jge
leave
shll
test
mov
add
cwtl
mov
jae
shlb
lcall
pushf
imul
data16
in
pop
or
out
jmp
int3
add
js
int3
jbe
jo
mov
add
repz
int
cwtl
movsb
jge
daa
and
jecxz
push
mov
inc
jle
jg
push
sti
je
sbb
lods
sub
or
mov
aad
sbb
push
fsubs
mov
mov
inc
movb
cld
sub
pushf
sub
int
leave
pop
xor
and
jb,pn
in
push
in
insb
rcl
mov
pop
mov
fisttpll
lcall
lahf
mov
ficomps
loope
xchg
push
or
sbb
ret
outsb
sbb
hlt
and
adc
je
je
icebp
ds
int3
pop
sbb
inc
and
test
mov
cld
add
outsl
or
pop
and
inc
adc
fnstenv
lret
or
das
xchg
cmpsl
sarl
xchg
push
arpl
sahf
sub
push
std
fimull
repnz
add
ljmp
push
movsl
jne
adc
call
sub
ss
add
push
or
jmp
xor
mov
test
loop
cmovp
mov
rclb
sbb
push
ljmp
ljmp
pop
push
xor
movsb
jae
cmc
sbb
or
lods
dec
dec
cmpsb
loop
add
pop
test
data16
outsb
fcmovb
orl
shl
test
js
mov
jg
fsubl
into
push
or
dec
pop
test
cmpsb
stc
cltd
shr
cs
pop
divb
add
pop
das
sahf
and
clc
lret
pop
cli
push
enter
pop
shlb
sub
and
cmp
sbbb
setge
sbb
ss
jae
or
adc
loopne
rorb
sub
jns
aas
sbb
jle
test
fstpl
addr16
adc
gs
xchg
insl
dec
fwait
ljmp
xchg
sbb
repnz
fstpt
ds
dec
aas
imul
ret
addr16
adc
fcomps
in
mov
xchg
movsb
add
popf
cmc
repz
repnz
movsb
or
pop
sbb
jbe
xor
pop
cmp
xor
push
or
jecxz
insl
flds
sbb
and
mov
dec
sbb
push
sarb
mov
inc
mov
or
push
mov
pop
je
in
add
fnsetpm(287
mov
mov
sub
sbb
repnz
xor
les
dec
xchg
sbb
xchg
fisubl
lds
incl
xor
add
into
push
push
movsl
sub
push
xor
jecxz
mov
add
insb
cltd
pop
jg
lcall
pop
xor
push
add
clc
sub
push
jmp
add
test
cmp
pop
fs
cltd
out
mov
stc
clc
xchg
cmp
dec
sbb
xchg
gs
or
sub
mov
jl
jb
rolb
cs
xchg
pop
aaa
int
pop
dec
xchg
pushf
and
inc
repz
or
add
adc
mov
jo
int
iret
cmp
cwtl
popf
add
js
pusha
mov
push
push
dec
nop
add
mov
add
ret
insb
repnz
push
inc
xor
push
adc
pop
mov
fsubs
push
notb
iret
pop
stc
xchg
pop
dec
ja
icebp
inc
test
enter
lds
pop
mov
nop
push
movsb
mov
mov
pop
jmp
notb
xchg
xchg
iret
and
jne
das
jg
and
test
push
adc
or
or
fdivrl
rol
dec
hlt
jecxz
aas
icebp
nop
jle
repz
in
rorb
cltd
push
lods
adc
lret
dec
insl
pushf
in
mov
push
movsl
fdivrl
ret
fistl
xlat
xchg
cmp
jmp
adc
jp
loop
fdivrp
push
lahf
cs
mov
mov
sub
push
aad
cmp
jmp
jle
mov
lock
sbb
roll
inc
pop
mov
sub
popf
shl
arpl
jge
test
pop
add
stc
mov
andb
fcom
pop
cmpb
ljmp
in
sarl
leave
test
cltd
mov
hlt
int
std
jae
inc
dec
push
rcr
jmp
pop
mov
mov
jmp
xchg
fcmove
nop
push
shl
adc
push
bound
ljmp
push
jle
xchg
lock
lods
or
jl
movsl
ja
sti
repz
mov
xor
aaa
cmp
cwtl
pop
push
adc
movsl
int3
fisttps
xchg
fdivrs
insl
lods
xchg
xchg
mov
pop
lods
stos
test
daa
lret
or
jmp
pop
inc
loope
push
inc
mov
arpl
sub
repz
mov
push
pop
fldenv
jp
lds
hlt
xchg
inc
clc
in
pop
mov
add
xchg
cmp
push
cmpsb
sahf
cs
inc
daa
cmp
fdivl
fmuls
mov
sahf
sbb
bound
cltd
pushf
sub
imul
popl
aam
std
push
fstpl
in
insl
test
jb
div
insl
cltd
aad
lods
dec
iret
xchg
outsb
cmp
jns
adc
hlt
mov
push
addr16
inc
loopne
inc
xor
jmp
mov
out
cmp
cmpsb
rorl
ljmp
jnp
negb
int3
jae
and
xchg
jl
std
xor
mov
movsl
test
loopne
outsl
sbb
pop
inc
and
mov
dec
sub
pop
rorl
out
lea
xchg
int
aas
inc
data16
scas
adc
out
shlb
xor
scas
mov
pop
push
cmp
sbb
xchg
add
dec
pop
pop
sub
mulb
dec
mov
jle
pushf
inc
bsf
pop
addr16
dec
push
mov
dec
dec
mov
stos
insl
scas
pop
jecxz
rcrl
mov
add
int3
out
js
je
cltd
add
cmc
add
icebp
inc
divl
out
xor
dec
xor
aad
inc
sbb
nop
rcl
in
insb
mov
adc
xchg
lea
lods
sub
pop
loope
sub
pop
pushl
repnz
xchg
js
mov
mov
mov
loope
out
dec
lock
sahf
lcall
mov
fmuls
pop
inc
dec
in
iret
xchg
sbb
cmp
imul
pop
iret
inc
jnp
les
lret
sbb
inc
jge
mov
jge
das
fcomi
sbb
pusha
jno
mov
adc
xor
dec
test
push
mov
lds
shrb
jle
scas
cmp
popl
add
push
sub
pop
dec
xor
int3
or
or
scas
mov
fadd
js
mov
ficomps
jle
adc
jo
mov
jmp
ljmp
sbb
stos
scas
push
test
adcb
pop
pop
mov
inc
mov
into
in
pusha
jb
xchg
xor
sub
and
mov
cmpsb
sub
shrl
lock
fisttpl
shll
lret
ja
mov
es
aaa
or
out
or
push
mov
outsl
inc
out
rolb
sub
push
dec
mov
jp
xchg
pop
clc
dec
pop
pop
dec
popf
dec
xchg
std
lods
std
dec
sub
aas
out
push
sbb
cmpsl
mov
xor
xor
mov
bound
out
dec
add
mov
imul
scas
mov
movsb
rdmsr
xchg
adc
ficompl
push
je
xor
inc
out
sub
add
enter
push
insl
jnp
and
cld
nop
outsb
arpl
mov
fsubl
inc
in
lods
inc
xor
sub
lret
pop
popa
push
mov
ja
outsb
bound
dec
nop
xchg
xchg
and
cmpsb
jmp
dec
cmpl
aam
sbb
dec
data16
test
adc
in
rorl
inc
inc
rcrb
and
jno
aaa
sbb
mov
mov
cli
fstpt
enter
jnp
aaa
mov
or
pop
addr16
inc
inc
iret
xchg
ret
ja
sub
iret
imul
popf
jp
fwait
lods
add
mov
mov
ret
arpl
sar
sub
nop
inc
push
xchg
pop
jmp
clc
mov
pop
aad
popw
test
mov
leave
test
pop
loop
into
inc
outsb
and
push
push
or
xor
int3
push
les
xor
pop
and
xchg
adc
push
flds
das
aad
fildl
jl
pusha
ds
add
in
aaa
js
ficompl
repnz
or
push
fcompl
js
sub
das
add
imul
lea
repz
mov
clc
pop
out
call
mov
pmuludq
ja
mov
push
mov
out
lds
add
push
sub
pop
fs
movsb
xchg
mov
call
insl
movl
push
cmp
and
leave
sub
lods
loope
std
jmp
fimull
int
sbb
dec
sbb
insb
mov
fisubs
jge
xor
shll
int3
shrb
inc
jmp
mov
jl
xor
shlb
cmpsb
xchg
or
aam
and
cmp
ficoms
ret
mov
daa
add
in
mov
in
push
fidivl
loope
hlt
xor
aad
and
and
arpl
xchg
ja
pop
push
pop
adc
pop
test
in
jl
aam
jl
sahf
lcall
xor
icebp
mov
fnsetpm(287
jno
jo
dec
inc
add
jo
mov
push
arpl
pop
inc
lret
jle
stos
and
imul
fdivrl
sbb
pop
pushl
sahf
addr16
jns
stos
add
repnz
lds
and
push
les
decl
fcompl
aas
pop
clc
movb
aas
push
jae
inc
inc
aaa
hlt
pop
push
lahf
fwait
adcb
repnz
jmp
shlb
popa
cli
ss
shll
fnstcw
xchg
xchg
mov
mov
test
lods
xchg
mov
decl
and
dec
mov
cmp
outsl
dec
movsl
ss
push
xor
xor
push
pop
dec
push
dec
gs
stos
test
cli
mov
rcrl
mov
sbbb
adc
push
call
call
xchg
jle
mov
push
rolb
dec
mov
int3
scas
test
sahf
push
lret
insl
cmp
xor
lahf
mov
adc
pushl
fimuls
push
dec
cmp
scas
cmp
inc
outsb
loop
ds
xor
fnstsw
enter
pop
push
rclb
push
jle
dec
jno
sub
and
pop
push
push
mov
push
cmp
mov
and
and
lods
xor
int
sbb
in
or
adc
mov
aam
xchg
cltd
sbb
jnp
fidivs
loop
xor
shl
rcll
xchg
push
jns
xor
xlat
outsb
or
cmpl
sti
jae
dec
cmp
cmp
adc
cltd
aam
xor
adc
pop
inc
popa
les
je
jb
add
pop
into
cmp
call
add
int3
and
in
outsl
outsb
and
pop
push
push
adc
pop
test
cmpsb
ljmp
dec
lret
push
xor
gs
sbb
or
pusha
inc
popf
jns
mov
add
xchg
mov
sbb
sub
xchg
test
enter
lcall
inc
aas
enter
out
mov
int3
aam
loope
lds
push
cli
loopne
std
fistpll
in
mov
inc
notl
mov
xchg
sbb
int3
rorl
push
js
scas
popf
aam
roll
cmc
lods
imul
cmp
jle
pop
dec
out
ret
pop
pusha
sub
xchg
inc
lea
minps
je
loope
pop
add
in
pusha
or
pop
mov
jg
cwtl
aam
and
fidivl
in
bound
mov
sub
inc
push
insb
frstpm(287
mov
cmp
clc
mov
fs
loope
and
cmc
inc
out
int
loope
mov
sub
xor
mov
ret
call
js
xor
cmp
int3
xchg
lret
cli
loope
jo
mov
cmpsb
sub
mov
ds
inc
imul
mov
les
sub
movsl
insl
sub
jns
int3
xchg
jno
pusha
sbb
shl
shlb
test
pop
cmp
mov
outsb
mov
sub
xchg
mov
imul
jge
mov
push
cmp
jecxz
dec
cli
pop
pop
sbb
xlat
push
iret
sbb
mov
mov
push
data16
cltd
or
mov
sbb
inc
popf
pop
xchg
subb
dec
or
arpl
jecxz
push
in
cltd
fwait
mov
es
mov
jg
add
sbb
repnz
pop
adc
push
out
xor
pushf
mov
and
shrb
add
mov
adc
inc
gs
xchg
icebp
js
push
cmc
dec
pop
rorl
scas
nop
xor
outsb
add
popa
lea
icebp
popf
add
cmp
lods
add
xlat
pop
add
add
sbb
lahf
stos
mov
xor
int3
test
fcmove
inc
lcall
aam
xchg
mov
cmp
cmp
mov
roll
xor
mov
and
rcrb
les
push
fstps
pop
sarb
mov
inc
std
iret
ret
mov
push
xchg
cmpsl
call
lret
mov
push
sub
pop
pusha
dec
dec
jle
mov
jp
mov
std
cmc
stos
iret
pop
icebp
mov
xorb
or
mull
loope
mov
and
sbb
push
jb
and
jo
push
xchg
scas
das
jb
rep
insb
subl
fcomps
push
jge
sti
mov
mov
cmp
inc
je
aas
lret
in
outsl
inc
dec
jmp
fimull
push
sbb
arpl
adc
or
cltd
js
pop
inc
jns
push
shrb
shll
or
xchg
cmp
stos
sub
jae
push
xchg
push
aas
gs
adc
rcrl
ljmp
leave
test
repz
popf
mov
daa
das
nop
std
lahf
push
xor
push
adc
test
shll
jg
mov
xor
and
stos
cltd
push
popf
cmp
das
push
add
xor
cs
lds
add
push
xchg
xchg
outsl
mov
add
enter
sbbb
out
add
cmp
adc
inc
push
cmp
cmp
movsb
mov
or
mov
dec
xor
movsl
aaa
test
stos
aaa
mov
repz
js
add
jbe
cmp
in
sub
pusha
in
push
rol
add
or
mov
add
in
clc
cmpsl
repz
fnstenv
cmp
fnsave
icebp
cli
fstl
outsl
sub
xor
dec
dec
rcr
cmp
jns
and
inc
push
pop
data16
xlat
cmpl
pop
shlb
or
mov
or
rclb
dec
mov
pop
shlb
jnp
popf
call
rcrb
flds
rcrb
lret
xor
xor
or
nop
lds
mov
pop
inc
divb
call
frstor
or
pushl
push
loop
dec
sahf
pushf
test
sarl
ja
jle
cmc
dec
iret
cmpsb
das
lock
inc
or
jb
lret
and
mov
jp
xchg
jbe
mov
fs
mov
in
out
in
jnp
dec
inc
adcl
into
mov
jae
mov
test
mov
sub
bound
pop
lock
loop
andl
lods
sub
jle
scas
xchg
push
out
es
fwait
or
xchg
jo
sbb
xor
sub
aam
inc
cs
pushf
icebp
arpl
cld
stc
mov
xor
aad
lds
push
and
mov
or
insb
sub
mov
es
pop
sbb
aad
imul
in
ss
addr16
loop
das
mov
mov
notl
add
in
pop
jecxz
xor
ficomps
mov
aaa
mov
xchg
adc
aam
cli
andb
and
xor
cmpsl
icebp
ds
xchg
pop
jg
inc
out
in
leave
mov
faddl
ljmp
mov
sbb
adc
and
faddl
dec
cmpxchg8b
leave
pusha
dec
cli
clc
ds
and
scas
push
aam
in
les
js
stc
fs
iret
mov
lahf
aad
inc
out
out
test
xchg
push
sbb
xor
sbbl
in
int
sbb
sbb
int
stos
jp
mov
insl
imull
xor
mov
mov
and
cs
mov
ljmp
clc
cmc
lds
adc
pop
dec
orb
push
push
popa
in
sbb
cmp
sub
xor
inc
into
out
loope
mov
mov
pop
loopne
or
push
dec
pop
pop
pop
xchg
xor
jno
dec
pop
xor
mov
mov
add
stos
jae
stos
call
sbb
jne
xchg
or
cmp
mov
push
jl
and
inc
jmp
push
fcomip
pop
popf
xlat
in
jmp
and
add
mov
dec
pushf
inc
es
adc
dec
cmp
and
test
ret
mov
add
in
mov
lret
jbe
sbb
pop
cmpsl
fstp
push
ljmp
movsb
mov
loopne
xlat
push
push
imul
push
int3
inc
in
cli
in
mov
mov
leave
test
into
lret
xchg
cmp
push
dec
sub
xor
fbld
push
jp
jle
pop
fwait
out
mov
je
icebp
xchg
adc
loopne
out
dec
out
xor
fsubs
dec
add
adc
jbe
and
fs
pop
add
test
orb
push
cmpsb
mov
mov
mov
aam
jbe
out
pop
mov
shll
sti
enter
xor
movhps
std
xor
lea
and
in
ret
jge
cmp
leave
mov
mov
lods
rol
jnp
and
push
out
aas
mov
cmp
sarb
fistl
cmp
xchg
xchg
add
sub
or
inc
daa
push
pop
mov
test
mov
lods
shrb
call
fs
or
jp
dec
cmpl
scas
lods
in
xchg
daa
pop
pop
cmp
jb
push
dec
pop
dec
imul
jge
aaa
xor
dec
mov
sub
add
mov
xor
cli
jne,pt
pop
sbb
ljmp
lret
sbb
cmp
xor
outsb
jns
int
sbb
clc
mov
push
mov
mov
inc
adc
xchg
repz
push
iret
mov
ja
jmp
cmp
stos
push
or
aaa
cmp
pop
stc
add
pop
std
insl
insl
xchg
pop
sbb
jge
sbb
inc
std
into
push
dec
mov
aad
push
xchg
push
lods
ror
xchg
lret
clc
push
out
lea
mov
cltd
mov
inc
js
add
out
in
seta
cltd
daa
lret
outsb
xchg
sbb
cld
divl
sbb
jmp
xchg
fs
pop
ljmp
and
sub
xchg
aaa
fsubrl
pop
daa
push
daa
loope
adc
add
adc
popf
xchg
int
scas
pop
ds
xor
je
add
fstl
lcall
jbe
mulb
xor
sbb
pop
mov
sahf
insb
xor
or
jne
jne
loope
test
imul
pop
insb
cmp
outsl
pop
dec
jne
xorl
sarw
cmp
add
ds
sbb
xchg
ret
mov
lock
stos
pop
pusha
into
cmpsl
or
pop
pop
cmp
cmp
cld
imul
and
sub
jle
mov
loopne
fnsave
lcall
in
push
mov
mov
pusha
add
sbb
fdivl
aad
rorb
out
pusha
push
pusha
arpl
dec
cmp
jp
add
dec
inc
jl
dec
pop
mov
rclb
jge
rorb
pop
sbb
daa
sub
es
mov
mov
std
ret
xor
gs
dec
js
fs
or
shll
adcl
add
loopne
subb
adc
repz
fs
add
push
push
inc
pop
lret
lahf
xor
sub
xor
cmc
and
xchg
and
cli
dec
addr16
dec
std
pop
inc
stc
imul
mov
dec
inc
jb
inc
xchg
lret
imul
pop
sahf
mov
jae
adc
out
dec
sar
jge
popl
dec
lock
mov
daa
add
loop
fimull
loope
js
inc
negb
adc
adc
push
in
mov
cmp
mov
sbb
stos
add
insl
out
lods
test
sub
mov
ja
push
and
mov
lods
fwait
xchg
push
add
loopne
lock
enter
cmpsb
loopne
cmpsb
aaa
ret
mov
aad
mov
and
ret
or
pop
cmpb
jnp
xlat
int3
test
mov
je
and
mov
loope
rcrl
test
lods
xchg
inc
roll
mov
ror
mov
xchg
xorl
or
inc
lock
inc
test
push
push
jbe
dec
xor
mov
sub
push
pop
sub
sbb
sub
mov
add
xchg
mov
xchg
xchg
inc
and
in
sub
sbb
outsb
xor
bnd
int3
ss
sbb
mov
mov
dec
pop
mov
push
pushf
in
mov
in
and
ldmxcsr
xchg
add
adc
insb
cmc
ss
mov
js
pop
push
mov
push
rorl
rcll
lret
stc
imul
jp
sbb
in
out
mov
dec
adc
js
bound
xor
pop
sub
xchg
xchg
cmp
je
lret
inc
and
xchg
xor
jne
push
fs
hlt
and
sbb
pushf
xor
push
mov
aam
mov
fidivl
sub
mov
dec
fdivrl
xor
cmp
fisubs
mov
xor
mov
jle
cld
jns
test
jne
fadds
push
mov
xchg
dec
mov
jnp
loopne
lods
inc
ja
xchg
das
dec
bswap
jb
pop
add
js
or
hlt
and
leave
jnp
dec
rcrb
aam
adc
xor
and
jecxz
into
icebp
pop
and
mov
inc
pop
and
test
add
sbb
xchg
fistps
cli
jae
sub
xchg
fiaddl
test
sub
sti
cld
clc
push
mov
loopne
bound
es
test
lahf
push
sbb
cmp
and
shrb
ficompl
sub
and
mov
les
iret
lret
xchg
rorl
push
jecxz
lods
mov
shlb
pop
or
lods
lock
pop
pop
call
xorb
pusha
test
in
rolb
xchg
jb
dec
xchg
stos
cld
test
jg
and
inc
cmp
cmpsb
mov
ds
cld
outsl
or
insl
ljmp
sbb
xchg
add
add
movb
xchg
test
testl
aaa
ss
dec
cltd
scas
mov
scas
pushl
dec
add
mov
aaa
imul
test
mov
and
ror
cwtl
sub
shl
insl
lods
leave
cmpb
mov
add
or
lock
mov
daa
dec
and
iret
push
int3
mov
iret
push
leave
std
loope
sbb
mulps
pop
mov
shrb
pusha
jo
xchg
inc
dec
jl
cmp
xchg
and
into
sub
inc
pusha
leave
cmc
dec
and
xchg
arpl
xlat
daa
imul
mov
mov
adc
test
adc
ljmp
jbe
xor
adc
xchg
sbb
loopne
mov
sub
push
cmpsl
fstpt
add
push
cmp
fsubrs
jp
and
or
push
mov
mov
mov
sbb
jno
mov
push
jg
jle
fstpt
mov
scas
sti
push
or
and
sub
lods
cmp
mov
stos
nop
movl
jns
pushf
sub
lahf
jmp
jnp
sbb
lcall
xor
add
push
fistpll
or
lock
jae
iret
mov
stos
push
mov
xchg
shl
test
pusha
adc
pop
rcll
pop
iret
fimull
mov
pop
cmp
daa
popa
fdivl
les
aaa
sub
call
cmc
dec
fcmovb
pop
call
call
xor
aam
or
pop
je
xchg
cltd
ret
jle
sbb
inc
repnz
aam
xor
rolw
jne
movb
xor
and
inc
xor
push
cmpsl
out
xor
call
call
pop
scas
cmpsl
cmp
icebp
xchg
enter
ljmp
rcl
jns
fistpl
pop
test
sbb
push
fistpll
aaa
inc
shrb
aaa
cmpsl
mov
mov
aam
and
push
adc
lcall
jmp
movsl
jmp
adc
push
and
in
inc
mov
enter
jbe
fsubr
pop
fs
mov
outsb
out
test
add
icebp
sub
cmp
xchg
into
inc
hlt
movsl
adc
aaa
fstl
sbb
jno
scas
jbe
and
jmp
inc
shl
add
stos
cmpsl
test
aam
jo
insl
dec
jo
lret
inc
das
scas
in
lods
sbb
mov
jo
lcall
sbb
leave
outsb
adc
rol
mov
das
iret
lahf
daa
lods
mov
maxps
jmp
mov
sub
in
jg
in
inc
jge
gs
cmpsb
lods
add
ficoms
mov
rclb
shrl
nop
jae
outsl
dec
fwait
jmp
xchg
call
push
loope
sahf
lahf
fdivrl
ja
pop
mov
aad
sub
push
lahf
rcll
mov
adc
push
push
pop
je
xchg
scas
xchg
mov
shl
jns
xchg
dec
icebp
push
mov
xchg
test
out
leave
inc
cltd
out
invd
in
push
lea
jecxz
call
pmaddwd
ljmp
lock
jp
and
dec
popa
ss
xchg
mov
push
out
dec
cmp
push
dec
loop
cmp
faddl
or
cmp
sub
push
adc
ficompl
push
into
inc
xchg
inc
dec
adc
mov
popf
xchg
hlt
add
xchg
sub
out
or
xor
xchg
sbb
jne
lock
mov
je
pop
or
pop
pop
subb
jge
xor
adc
loope
dec
push
fcompl
lret
push
cli
test
lret
sub
jl
dec
test
imul
mov
punpckhbw
call
mov
jne
lcall
pop
adc
ror
dec
dec
or
pop
sahf
call
test
push
mov
pop
outsl
inc
shll
iret
mov
mov
jmp
mov
fldenv
dec
leave
push
jmp
enter
aam
or
cwtl
jle
ds
aam
pusha
sbb
dec
es
stos
movsb
or
out
arpl
xorl
pushf
call
or
and
jmp
sub
and
adc
rol
fdivrs
fcmovu
aad
adc
sbb
orb
sti
jp
pushf
adc
stos
mov
jl
test
shlb
ds
test
sub
xchg
scas
insb
jg
into
lock
cmp
test
jg
pop
sub
push
and
idiv
lcall
in
xchg
sub
cs
or
mov
jge
adc
mov
in
jbe
inc
sbb
inc
hlt
xor
cmp
dec
pop
jns
sbb
aaa
jbe
in
outsl
cmpsl
inc
fs
shr
loope
xchg
xchg
xchg
nop
sbb
loopne
loope
pop
jmp
dec
es
dec
mov
ret
sub
inc
inc
cmc
mov
mov
movsb
jl
pop
mov
addr16
test
sub
mov
add
jbe
add
lock
xchg
cmp
lret
hlt
cmp
adcb
sahf
adc
fmul
imul
inc
adc
and
out
xor
cltd
in
jp
cli
dec
mov
xchg
add
loopne
pop
cmp
push
mov
add
sub
subl
scas
pop
lret
and
adc
mov
sub
push
cmc
rclb
mov
and
addr16
cld
jmp
sbb
jmp
repnz
add
das
add
pop
add
adcl
insl
les
movsb
push
pop
sub
mov
mov
mov
xor
sarb
cmpsl
scas
mov
sub
loopne
adc
or
jp
ficoml
das
adc
or
std
xor
xchg
mov
push
xchg
add
inc
mov
ds
popf
mov
daa
test
add
leave
jmp
push
stos
shlb
leave
insb
pop
sub
in
arpl
into
inc
aad
out
and
lcall
cmp
lea
popf
and
loop
jne
or
cmp
xchg
and
fistps
add
sti
loope
sub
xor
sbb
xchg
adc
sbb
add
push
sub
jp
push
into
cmpb
xchg
inc
xor
lock
stos
je
sbb
lods
sbb
mov
lret
add
in
adc
popf
insl
ds
push
push
add
cmp
jb
cld
jecxz
arpl
lods
je
lods
call
adc
dec
push
lods
repz
push
testb
lods
inc
dec
sbb
xlat
pop
xor
sub
xchg
rclb
mov
notl
inc
leave
jbe
pop
jp
inc
inc
fistl
cmp
add
lahf
and
and
inc
aam
xchg
mov
mov
lahf
jl
stos
sbbl
insl
jg
notl
cmp
sub
stc
pop
mov
fstpt
adc
int
add
roll
lods
cs
std
mov
mov
push
ss
cmpsl
jg
sub
jne
xor
pop
repnz
sbb
lock
xchg
shrl
mov
andl
loop
adc
mov
jb
jmp
cmp
cmpl
cmp
jecxz
xor
or
add
and
mov
shr
movsl
add
nop
test
jo
jno
js
mov
dec
cwtl
in
ss
lods
insb
arpl
cwtl
pop
jle
std
xchg
xchg
jns
mov
inc
stos
lea
test
daa
inc
add
pop
mov
rorb
sbb
jnp
in
movsb
mov
mov
mov
repz
pushl
in
jmp
mov
or
arpl
dec
data16
int
add
divl
fincstp
mov
orl
rcrb
push
and
cmpsl
arpl
sbbb
push
xor
dec
pop
call
adc
dec
loop
pop
sub
mov
add
jg
or
stos
inc
pusha
pop
ficoms
ret
outsl
jae
jp
bound
lret
adc
adc
mov
or
inc
test
cmc
daa
mov
mov
stc
pop
stos
mov
je
pop
sti
jno
mov
in
dec
xchg
pop
loopne
arpl
dec
adc
mov
sub
test
adc
fs
xchg
jp
cmpsb
mov
daa
movsl
popf
aaa
jecxz
and
push
mov
xchg
jae
cmp
divl
loop
adc
xchg
mov
stos
pop
loope
add
out
and
pop
add
jl
lods
pop
inc
std
xor
dec
mov
jecxz
push
mov
jg
pop
test
rcrl
pusha
stc
decb
pop
push
mov
ret
or
pop
inc
or
fsubp
fdivrl
xchg
dec
adc
add
mov
xlat
push
scas
push
jl
lahf
sbb
cmp
inc
mov
test
bound
mov
les
std
shll
dec
je
pop
popa
cli
xchg
sbb
std
imul
or
xor
nop
mov
adc
icebp
inc
leave
adc
mov
loope
roll
aaa
scas
mov
mov
adc
aad
xlat
cmp
dec
sbb
inc
popf
jge
sbb
mov
pop
jl
cwtl
cmp
cmp
push
in
iret
repnz
xchg
fnsave
or
mov
mov
das
adc
mov
popf
add
sub
lods
mov
push
mov
test
cwtl
xchg
repz
leave
fstpt
dec
popa
sarl
sbb
mov
flds
jg
mov
in
jle
out
data16
mov
inc
insl
jo
scas
decb
pop
mov
inc
xchg
xchg
insb
sub
test
adc
pusha
and
ds
shl
adc
loop
in
in
xor
jnp
xchg
xchg
incb
dec
mov
dec
loopne
movsl
mov
sbb
fldenv
jmp
loope
call
fs
movsl
fists
icebp
pop
dec
cld
cmpsb
nop
or
mov
jb
das
inc
jbe
mov
das
jl
mov
testl
inc
into
push
in
insl
lods
dec
sbb
fstl
imul
dec
adc
cmp
xchg
mov
xchg
cmpsb
popf
lea
test
sti
jb
addl
stc
xor
cmpsb
mov
mov
shll
fmulp
pushf
rolw
pop
popa
sarb
mov
repnz
jg
iret
lock
imul
ja
mov
xchg
test
jle
fisubrs
sub
bnd
lock
repnz
mov
pop
cs
xchg
jmp
cmp
stos
mov
add
in
mov
cwtl
aas
call
mov
push
mov
dec
faddp
clc
adc
xchg
cmc
int3
out
bound
hlt
mov
sbb
std
jg
mov
lret
out
inc
arpl
jp
ud0
or
cmpsb
shrb
sbb
sti
mov
leave
sbb
leave
mov
cmpsl
loope
xchg
mov
jo
sbb
mov
and
in
jb
push
fcoms
scas
jg
fisttpll
les
in
out
dec
fimuls
fldcw
or
sub
jb
xorl
xor
into
mov
outsb
adc
add
insl
inc
sbb
adcl
and
jmp
es
idivb
mov
hlt
xchg
aas
and
leave
mov
aad
bound
lret
pushf
xor
cmp
push
push
xchg
inc
xlat
icebp
jns
xor
cmc
cmp
clc
lret
push
adc
repz
push
adc
adc
sbb
sub
ja
aaa
lock
addb
pop
sbbb
add
inc
or
nop
pop
mov
lcall
test
push
lods
stos
add
push
mov
mov
sub
cli
xor
ret
pusha
jb
imul
jmp
mov
sahf
pop
inc
aaa
hlt
mov
cmc
add
jb,pn
push
add
lahf
mov
xchg
dec
stos
push
push
mov
fs
int
jmp
movl
test
popl
jae
sub
das
inc
addl
ret
das
or
aad
addr16
je
test
mov
adc
lahf
jne
mov
fucomp
dec
aaa
lock
xchg
lods
mov
mov
adc
mov
push
xorb
jnp
xor
lods
add
add
std
add
mov
int
mov
movsl
pusha
enter
push
jg
xchg
and
xor
adc
sete
ja
shlb
adc
sar
pushf
dec
ljmp
mov
call
pusha
in
sbbl
and
pop
out
clc
cmpb
xor
mov
sti
mov
ljmp
bound
imul
rcrl
add
in
test
jbe
xchg
mov
inc
sub
mov
ret
pop
dec
loop
pushf
pop
ds
or
lds
cmpb
or
bound
mov
mov
jg
sub
adc
insb
icebp
jge
in
xor
nop
and
test
int
loop
lods
and
jo
cmpsb
cld
stos
jno
xor
stos
sbb
pop
sbb
push
mov
mov
add
mov
jle
mov
xor
mov
xor
insl
jo
dec
bound
sub
mov
cmc
sub
xchg
sarl
push
shr
out
aad
aaa
outsl
mov
outsl
fldl
aas
adcl
lods
ljmp
sbb
test
aad
adc
clc
jmp
orb
sub
dec
dec
out
stos
sbb
xor
pop
push
out
psllq
test
xchg
loopne
mov
scas
lods
pop
and
ljmp
sbb
fs
outsl
fs
or
lahf
faddp
inc
add
mov
iret
shr
adc
push
mov
lret
daa
add
mov
aam
pop
imul
int3
neg
lahf
push
enter
fdivs
xchg
dec
pop
lods
outsb
and
loope
xorb
sti
iret
adc
stc
outsl
cli
jecxz
push
mov
sbb
lahf
jg
shl
jns
call
push
xor
add
movsb
jp
sbb
mov
dec
jo
imul
outsb
scas
pop
xlat
or
add
add
in
inc
push
xchg
pop
pop
int
and
jb
inc
push
lds
jae
sub
push
adc
pop
push
test
stos
leave
rol
dec
in
popf
mov
pop
adc
lret
movsl
inc
andb
jmp
adc
pop
test
into
imul
out
xor
pop
outsb
lcall
ds
idivb
out
lds
push
shl
test
xchg
xchg
fwait
jne
clc
insl
stos
cmpsb
scas
jne
mov
imul
or
out
imul
insb
mov
ror
mov
sub
rorl
insl
xchg
fstpt
jp
loope
lods
dec
cmp
dec
sub
fucomp
mov
pop
and
rorb
xor
out
jge
lahf
push
sub
fdivrs
fnsave
lea
jecxz
imul
xor
or
int
aad
lahf
or
jb
push
add
subl
push
mov
sub
mov
jo
push
adc
push
sub
jb
bnd
inc
mov
in
pop
mov
fisttpl
sbb
hlt
add
cmp
cmp
iret
push
rorb
in
fs
enter
push
movsl
and
sbb
outsb
jb
out
sub
jae
push
or
in
std
int
lret
scas
cli
xor
sbbb
fs
lcall
ss
loop
hlt
cltd
ja
push
cmpsl
out
pusha
repz
ficoms
dec
jl
jo
or
negl
pushf
xor
hlt
mov
cld
cmp
or
mov
popf
mov
bound
or
and
fmul
push
aad
test
mov
fsubl
push
mov
adc
inc
imul
inc
call
push
test
cld
into
add
mov
and
jo
pop
cli
push
lahf
jo
enter
push
imul
and
repnz
mov
mov
or
pop
mov
inc
fmull
xor
cmpsl
mov
inc
and
and
lods
mov
jne
cmpsl
mov
jg
loop
ss
imul
in
fnstenv
stos
inc
or
repz
mov
outsl
in
push
mov
add
jle
or
fildll
pop
jp
gs
loop
shrb
nop
sub
sarl
mov
cmc
lcall
mov
fstpt
lret
mov
stos
inc
sbb
std
jmp
in
cmp
mov
pop
or
into
inc
or
sbb
sub
mov
lods
incl
sbb
adc
sub
and
mov
mov
shrl
int
mov
imul
mov
jg
rolb
fstl
cli
cmp
jns
inc
aas
clc
mov
pop
pop
bound
mov
div
jbe
mov
cwtl
cmpsl
in
movsb
or
mov
in
in
and
dec
dec
imull
lds
dec
imul
pusha
das
sbb
xchg
cmpsb
stos
test
mov
xorb
pop
sbb
pop
lret
cli
cvtdq2ps
fdivs
out
mov
jns
push
dec
shlb
mov
adc
out
stc
dec
lret
adc
repz
pushl
dec
std
add
dec
mov
test
daa
push
dec
mov
out
ljmp
cmp
jne
enter
mov
inc
mov
stc
and
ret
inc
inc
mov
xchg
clc
dec
cltd
or
sub
cmpsl
ret
ret
xlat
imul
stc
fistl
sbb
push
and
dec
mov
dec
out
outsb
mov
push
or
xor
cmc
xchg
jne
mov
jl
jg
or
out
xchg
push
out
lahf
roll
ds
pop
xchg
dec
adc
ficomps
adc
nop
loope
sub
jnp
clc
scas
dec
or
sub
cltd
jp
dec
pop
dec
and
jbe
mov
xchg
jae
clc
jl
sti
aad
or
ljmp
repz
lret
sbb
mov
sbb
lds
sbb
sarl
lcall
mov
push
xchg
test
outsb
dec
cmpsl
mov
loopne
cwtl
imul
push
adc
jo
cmp
mov
mov
dec
cs
icebp
mov
movsb
clc
in
insl
lods
jp
test
test
mov
out
cmp
addr16
inc
nop
pop
sarl
in
xchg
sbb
pop
xchg
cmp
add
xchg
les
xor
cli
enter
mov
dec
xchg
push
rorb
jge
sbb
loopne
dec
dec
sbb
cmpb
jge
mov
fstpt
inc
mov
lcall
lods
dec
xor
shl
xchg
xchg
imul
pop
sbb
dec
mov
push
and
icebp
push
lcall
push
cmp
ds
jne
rorl
pusha
insl
cmpsl
sbb
sahf
jne
or
fnstenv
movl
adc
fsubrs
push
mov
jne
jae
es
dec
push
testl
sbb
sub
fistpl
sahf
jl
push
out
subb
mov
mov
icebp
bnd
addr16
and
aam
lret
inc
cld
add
xchg
incl
and
cmp
mov
lahf
push
fs
sti
dec
or
ljmp
aaa
cltd
dec
in
ret
xchg
jl
stc
fs
mov
shlb
lds
xlat
out
mov
aam
or
ret
jne
orb
or
adc
mov
jbe
repz
mov
and
xchg
mov
cmp
xor
lcall
loope
add
lcall
fs
cwtl
jle
shll
jmp
fsts
or
sub
mov
clc
roll
enter
iret
popf
sub
jp
or
push
sti
out
or
mov
dec
or
scas
mov
daa
lods
sarb
cmp
xchg
inc
loope
lock
test
mov
pop
fistpl
lret
pop
test
ds
mov
in
mov
lea
mov
or
rcl
inc
outsl
cmp
jp
sub
adc
repnz
cmp
popf
dec
test
movaps
or
sub
pop
int
mov
hlt
fwait
jp
outsb
adc
arpl
jmp
mov
icebp
outsl
xchg
out
jp
mov
pop
icebp
mov
or
push
dec
outsl
out
in
and
jl
add
inc
cmp
lret
xchg
mov
add
in
sbb
cli
sbb
adc
call
cmp
push
adc
mov
xor
push
lods
jmp
sbb
popf
outsb
shll
je
inc
fildll
aad
mov
sbb
and
xor
sbb
push
lea
stos
test
lods
sbb
or
notl
fcompl
gs
lods
pop
int
lahf
jmp
leave
mov
sahf
dec
es
push
add
sbb
js
stc
jno
cmpsl
adc
testb
mov
lock
inc
out
inc
out
adc
inc
add
lds
sub
fldlg2
sbb
mov
outsl
cs
movsb
mov
inc
xlat
adc
call
jle
adc
xor
lret
out
mov
aad
js
lock
js
sbb
or
mov
lret
mov
test
dec
cwtl
hlt
addr16
ds
inc
sbb
pop
pop
fisttps
loop
cmp
xlat
aam
xchg
js
mov
sti
sbb
stos
pop
cvtps2pi
aaa
mov
cmp
aad
addr16
hlt
push
cmpsb
nop
fcomp
jmp
mov
xchg
mov
jle
pusha
decb
mov
movntps
mov
pop
mov
and
lods
inc
mov
mov
lar
inc
in
fs
ds
jbe
repnz
pop
scas
in
ret
mov
test
flds
rcrb
scas
hlt
ret
add
lock
clc
jl
cmp
push
gs
rcrl
mov
mov
xlat
js
test
xchg
push
repz
and
sbb
add
mov
sbb
dec
pop
lahf
cwtl
loope
jns
sub
ret
dec
mov
and
stc
jbe
rcr
pusha
dec
and
adc
ljmp
mov
hlt
sub
xchg
std
xchg
lret
pop
cmp
pop
insl
cmpl
adc
fmull
mov
jle
lods
notl
mov
seto
ret
mov
int
jb
sbb
mov
xor
cli
jne
clc
popf
roll
imul
sub
enter
xchg
cmc
test
xchg
fwait
and
jo
loope
test
pop
inc
daa
push
xlat
in
xlat
mov
loop
jmp
cmpsb
pop
rcrl
inc
cmp
or
imulb
dec
mov
out
cld
dec
and
mov
ret
lods
out
adc
xchg
push
push
in
push
out
mov
and
cmc
shll
outsb
lahf
into
inc
mov
sub
je
loope
scas
pop
and
push
inc
gs
adc
jle
bound
xorl
loopne
cmp
add
pop
in
jnp
dec
jp
mov
ret
sti
std
popa
jg
popa
mov
sub
add
adc
fwait
jmp
adc
mov
mov
jmp
inc
pop
add
inc
mov
xor
xchg
pushf
clc
mov
xchg
mov
sbb
lock
mov
inc
sbb
aam
cmc
xchg
int3
pop
sub
dec
aas
dec
in
mov
sbb
cmpsl
push
shll
add
and
lcall
xchg
push
into
stc
push
ds
pop
int3
adc
out
add
jmp
mov
add
into
icebp
iret
jb
pop
add
in
jle
mov
mov
or
xchg
mov
imul
pop
sub
jno
sbb
in
xchg
loop
inc
adc
pop
adcb
aad
insl
sub
pop
jns
pop
sub
insl
sub
in
push
out
std
ja
clc
out
pop
pop
int3
leave
scas
stos
xlat
pop
adc
cmpsb
xchg
inc
mov
addr16
mov
into
mov
mov
dec
add
mov
jmp
pop
and
add
ja
sub
mov
xchg
test
sub
sbb
out
xor
popf
outsl
sbb
test
add
jp
jmp
and
xchg
or
cmp
xabort
pushf
out
scas
aad
and
mov
stos
ror
pop
test
dec
pushf
pop
mov
xchg
xor
loop
jbe
shr
out
xorl
sub
sar
je
in
push
jne
mov
adc
ret
roll
insl
ljmp
repnz
cld
in
outsl
push
aaa
iret
popl
adc
imul
mov
int3
push
rcll
fistl
fs
jbe
cwtl
inc
ljmp
push
sbb
dec
and
sarl
jb
bound
cmp
outsl
out
mov
sti
fstpl
xchg
dec
xchg
jle
out
int3
lea
sbb
scas
pop
testl
sub
pop
punpcklwd
popf
or
imul
mov
leave
out
mov
out
sbb
mov
lret
push
push
push
cmc
cmpsl
lea
add
icebp
xchg
jge
js
sti
fsubrs
jp
mov
scas
inc
mov
notb
jns
xor
cmp
ret
popa
mov
mov
vpcmpgtw
xchg
std
pop
inc
leave
or
loopne
push
fldt
jne
roll
inc
mov
mov
pop
insb
rorl
test
push
addl
or
je
aam
inc
and
xorl
sbb
lret
andl
fwait
mov
shrb
cmpsl
mov
subl
inc
pop
pop
sub
inc
popa
mov
addr16
or
ja
imul
dec
pop
iret
sbb
push
xchg
aam
test
cwtl
scas
stc
test
and
aad
stc
stc
pusha
pop
and
xchg
mov
sbb
mov
cmp
adc
xor
rclb
sbb
sbb
jg
mov
ss
daa
pop
jns
repz
mov
mov
mov
inc
mov
push
pop
das
mov
mov
xchg
sub
sub
fildll
test
jnp
into
pop
insl
mov
xor
repz
adc
push
mov
stos
add
sub
cmp
out
sub
adc
inc
mov
mov
push
cmp
sahf
popa
adc
push
daa
inc
or
ret
pop
mov
adc
push
lods
dec
std
push
push
into
push
leave
jnp
push
fldl
lea
mov
gs
push
outsl
hlt
lcall
stos
ljmp
imulb
pop
push
movsl
lret
jae
arpl
cmp
jb
xchg
test
out
pop
dec
cmp
xchg
pop
pop
stos
lods
stc
cmp
mov
loope
cmp
jb
pusha
push
xchg
test
add
cmpsb
int3
mov
sti
add
cwtl
fwait
daa
lret
out
outsl
xor
sahf
and
lret
test
pop
inc
mov
mov
ljmp
sbb
lsl
cmc
popa
aaa
je
add
or
fs
push
imul
je
fnsave
add
cmp
insb
sahf
mov
outsl
mov
fisttps
js
sbb
sub
ljmp
cld
inc
sub
es
test
push
rcrl
rolb
test
aas
adc
xchg
jmp
clc
mov
dec
leave
dec
and
insl
push
xor
test
sbb
pop
out
pop
xchg
cs
xor
test
and
xchg
jnp
pusha
cwtl
fs
mov
rclb
addb
outsl
lcall
movsl
inc
mov
jl
loopne
repz
sti
lods
jmp
sbb
or
cvtpi2ps
inc
push
lods
jnp
adc
mov
mov
mov
jecxz
test
xor
hlt
cmp
sub
push
dec
shlb
or
mov
cwtl
inc
les
popa
pushf
ja
and
idivb
icebp
stos
lock
sub
inc
jne
outsb
add
push
jg
dec
stos
pop
pop
pop
pop
or
fsubrl
loopne
fs
dec
stc
or
sti
and
pop
das
hlt
cmpl
popa
popf
pop
sarb
retw
outsl
ljmp
les
insb
nop
mov
mov
std
mov
mov
cmp
fnstcw
jle
test
pusha
mov
scas
add
dec
push
dec
mov
cwtl
and
out
adc
push
and
mov
add
jne
and
adc
int3
cmpsb
xchg
add
popf
sarb
pop
aam
xor
loope
data16
xor
jne
xorb
or
in
je
in
lods
leave
repz
jmp
mov
or
es
lds
inc
das
mov
decb
aad
inc
je
mov
adc
repnz
in
jb
cmpl
dec
mov
addl
sub
and
popl
cltd
adc
fistl
or
adc
cs
push
sub
mov
sti
sarl
daa
fs
in
or
pop
add
popf
xlat
cmc
add
jl
fistpll
pusha
inc
cmp
sbb
div
and
stos
mov
loope
movl
mov
aas
pop
movsb
push
negb
mov
test
mov
mov
xchg
cwtl
insb
sbb
jge
inc
cmp
or
xchg
cmp
imul
or
xchg
lret
push
pop
pop
roll
cltd
lock
xor
mov
je
adc
js
sbb
das
pop
and
cltd
sub
push
mov
js
daa
in
mov
fmuls
mov
xchg
adc
jbe
pop
fs
push
jle
xlat
mov
cs
loope
jl
jmp
jns
mov
sub
jg
jmp
fmulp
clc
pop
sub
cmpsb
push
imul
pop
cmp
dec
dec
ret
popa
adc
xchg
cmpsl
inc
mov
pop
or
adc
jecxz
mov
jp,pt
hlt
mov
xlat
jg
js
xorl
sbb
std
lods
fwait
orb
je
pop
jmp
dec
xor
fstl
mov
inc
test
push
inc
into
test
test
movsl
mov
add
jmp
ss
rclb
aad
dec
push
xchg
pop
rcl
mov
nop
faddl
inc
push
xchg
addr16
xchg
int
or
jno
mov
dec
ds
inc
mov
ds
in
imul
xchg
inc
ds
pop
xor
pop
insb
ret
lock
push
mov
cmp
movsb
xor
and
cmpsb
int
shll
gs
and
call
negl
fdivs
je
jl
push
dec
jo
hlt
mov
xor
mov
out
cmp
lods
cmp
and
adc
push
xor
cmp
and
push
dec
outsb
lods
lret
pop
and
and
cwtl
push
aaa
insb
sbb
or
pop
test
jo
sub
xchg
mov
jbe
gs
jp
jmp
dec
inc
cld
sub
inc
cld
mov
sbb
ja
xlat
lods
in
fidivl
rcrl
outsb
es
dec
pop
in
daa
jne
mov
jle
push
cmp
dec
mov
aad
xor
movsl
push
ljmp
inc
cld
popf
xchg
jb
nop
stc
mov
cmp
or
pop
sbb
sub
dec
push
pop
push
cmpsb
fistpll
out
icebp
pop
dec
aaa
mov
adc
push
push
dec
loopne
and
mov
sbbl
ret
pushf
push
icebp
jne
xlat
and
ljmp
and
popf
xchg
dec
jbe
pop
or
jne
xchg
mov
cld
fnstsw
fs
mov
cwtl
mov
xor
clc
aad
or
test
xor
enter
cmp
cmp
in
nop
mov
pop
out
bound
xor
sub
pop
mov
mov
dec
in
xorl
hlt
orps
pop
mov
jbe
ficompl
dec
fiaddl
mov
adc
add
xor
adc
test
adc
in
inc
jns
test
xor
sub
in
out
loop
lret
nop
stc
mov
dec
or
push
std
pop
mov
mov
cmp
cmp
pop
mov
xchg
jecxz
scas
in
add
dec
mov
movsl
inc
inc
xor
jmp
add
lods
sub
sub
js
inc
insl
fldcw
rcrl
int3
xor
dec
pop
ja
add
testb
jmp
mov
jae
pop
xor
adc
push
push
xor
push
ljmp
push
mov
xchg
pop
mov
dec
shl
adc
jmp
mov
stc
in
cmp
stos
sbb
clc
jp
test
and
adc
repz
loope
daa
adc
push
xorb
or
adc
pop
sbb
push
adc
and
and
js
iret
push
fdecstp
sbb
testb
inc
push
mov
dec
and
mov
mov
xchg
jb
cmp
mov
pop
push
mov
mov
fildl
lret
loope
testl
cmp
mov
pop
lods
or
add
lret
cmpsb
xchg
fildl
push
mov
push
adc
test
mov
mov
sbb
add
add
out
add
fs
mov
mov
sarb
repz
ret
cld
sti
inc
sbb
mov
pop
sub
cmc
sbb
jmp
in
mov
fsubrs
xor
xchg
stos
in
aad
inc
dec
sbb
jbe
bound
sbbl
xchg
pop
dec
leave
pop
lahf
pop
adc
ja
push
mov
pusha
push
and
inc
ss
test
lahf
lods
ja
in
mov
add
out
mov
divps
cld
add
popf
mov
or
xchg
and
in
or
ja
cmp
repnz
mov
fisubs
push
lret
inc
hlt
neg
cmp
into
pop
push
inc
adc
mov
test
mov
dec
and
xchg
or
aas
icebp
test
loope
icebp
sti
pop
cmp
lahf
nop
xor
push
add
jbe
or
das
enter
addr16
mov
rolb
dec
out
lods
or
jge
jge
pushf
xchg
jno
repz
shlb
ret
imul
dec
sub
mov
ret
fldt
pop
sbb
shrl
popl
xor
daa
inc
mov
das
jmp
je
push
xor
jl
gs
sub
jmp
adc
and
ret
out
jno
mov
insb
xor
dec
ja
cmp
push
in
das
add
jmp
sbb
mov
mov
clc
jae
mov
frstor
repnz
jp
mov
sti
adc
icebp
jl
in
test
adc
lret
cmp
addb
pusha
js
dec
rcrl
jg
enter
out
sub
jl
add
lret
or
stos
or
pop
lods
ror
aas
xchg
dec
enter
jp
out
adc
mov
fisubl
and
lea
stos
cs
mov
pinsrw
lock
pop
fidivrl
sarb
lahf
sub
pop
js
push
adc
loop
enter
popa
mov
pushf
leave
inc
rclb
push
pop
pop
cs
out
jg
add
mov
aad
cmp
xor
jns
mov
push
enter
add
clc
xchg
sub
inc
cltd
data16
sahf
jnp
arpl
subl
dec
cs
insb
jne
rcll
mov
fimull
jecxz
jecxz
aas
or
gs
adc
fstl
sbb
add
cmc
cmp
jbe
dec
arpl
sbbl
push
sbb
sub
push
out
cltd
dec
lahf
cs
bound
xlat
pop
test
cmp
cmc
sbb
mov
shll
push
jno
and
push
dec
xchg
jo
cld
loope
nop
std
pop
in
pop
hlt
jle
lahf
or
inc
clc
rol
lret
xchg
out
test
sbbl
mov
cld
and
xchg
pusha
leave
inc
xor
imul
scas
add
or
xlat
xchg
mov
mov
xchg
or
mov
xor
push
imul
add
dec
jne
shl
insl
jbe
cmp
aam
mov
push
out
add
pause
andl
mov
ret
das
cmp
pop
leave
in
lods
inc
add
mov
data16
adc
push
dec
sbb
jnp
stos
lahf
sub
insl
lods
jne
mov
rcrb
jns
add
push
sahf
repnz
stos
sti
enter
out
and
out
jbe
and
pop
arpl
repnz
add
loop
sub
clc
ja
push
sbb
xchg
scas
aaa
verr
cltd
mov
pushl
mov
addr16
out
jo
movzwl
adc
lods
pop
cmp
pop
mov
daa
add
orl
in
and
jmp
and
out
xchg
pop
repnz
leave
int3
loop
sbb
cwtl
mov
push
push
lret
xchg
out
sarl
movb
aaa
pushf
inc
mov
lea
sbb
add
jmp
mov
jnp
test
imul
jl
ret
jle
jne
mov
les
push
or
push
pop
outsl
std
movsb
mov
jp
das
outsb
mov
xchg
pop
push
in
dec
or
jae
mov
iret
fwait
mul
in
lods
push
ror
jae
adcl
adc
frstor
nop
push
push
arpl
xor
cmpsl
dec
fisttpl
mov
std
and
pushf
adc
aas
dec
ss
and
xchg
cmc
bound
dec
iret
jmp
push
xor
jae
sbb
xchg
nop
daa
push
leave
setae
test
int3
add
dec
sub
fdivl
mov
dec
test
push
test
insb
xor
add
stc
xor
push
adc
andb
pop
rolb
outsb
push
inc
jle
inc
mov
and
jnp
mov
adc
push
cmp
add
movups
imul
and
cmc
fwait
enter
or
pusha
add
dec
es
js
ret
inc
jo
andb
fistps
sub
ret
pop
addr16
aas
or
lods
sub
shll
sbb
or
popf
fidivrl
ret
ds
cld
jecxz
lea
dec
sti
and
adcl
aad
arpl
cwtl
mov
push
movsl
mov
xor
mov
add
scas
xchg
ja
aas
xchg
xchg
stos
and
push
and
xor
test
inc
add
pop
out
sti
push
mov
fwait
out
mov
adc
aam
ret
les
and
sub
repz
out
dec
rcrb
xchg
les
xchg
pop
les
stc
movsl
in
add
add
fwait
repnz
movsl
pusha
out
jle
pop
stc
and
nop
rcl
and
rcrb
adc
and
xor
in
and
psllw
int
push
icebp
add
in
jnp
pop
add
mov
mov
mov
pop
call
pop
xchg
pop
push
sub
mov
add
push
ja,pn
mov
pushf
mov
cmp
int
in
mov
lahf
ficoms
mov
mov
clc
out
fucomip
imul
mov
pop
out
nop
cli
cld
mov
mov
loope
or
sbb
dec
cmp
xchg
loopne
add
xchg
push
int3
jbe
lods
push
loopne
rcr
mov
das
mov
sub
xor
xchg
jb
ds
mov
in
mov
xchg
add
idiv
and
js
inc
xor
lahf
cmc
jns
jae
add
xchg
xchg
sub
jle
pop
icebp
xchg
gs
neg
jmp
pop
push
lea
adc
imul
movsb
xor
mov
mov
cmp
mov
fldl
aam
push
idiv
psubsb
in
idivb
jae
les
dec
pop
xlat
cmp
dec
or
dec
stc
jne
cli
icebp
push
pop
icebp
adc
and
enter
cmp
pop
mov
nop
fwait
stos
js
sub
jl
adc
or
inc
xor
bound
mov
or
xchg
imulb
xchg
pop
pop
pop
dec
ret
addl
cmpsb
pop
fcompl
outsl
fmuls
sub
or
in
sub
pop
mov
push
filds
hlt
sub
inc
enter
xor
pop
mov
xchg
sub
fildll
push
lock
push
adcl
xor
mov
mov
aam
adc
sarb
pop
inc
stos
adc
jge
inc
pop
adc
lock
int3
ja
lods
aaa
ljmp
test
adcb
data16
mov
push
das
paddusw
rcrb
shlb
mov
pop
enter
or
inc
std
je
fs
jmp
addl
adc
fwait
lahf
inc
sbb
repnz
mov
testb
icebp
insb
xor
jle
ret
loopne
dec
lret
cmp
notb
push
repz
cmp
sbb
outsb
enter
sar
inc
insl
sub
pop
data16
sub
das
and
sbb
daa
int
push
xor
adc
aas
adc
hlt
and
sbb
sub
rclb
insb
xor
mov
pop
enter
stos
cmpb
nop
jb
sub
push
xchg
ret
add
mov
cs
dec
mov
add
xor
fwait
pop
shll
xor
lock
mov
add
mov
adc
add
or
outsb
gs
adc
add
nop
es
xor
out
scas
sbb
aad
out
nop
xchg
and
testl
jp
stc
mov
leave
pop
stc
mov
mov
shr
addb
mov
push
xchg
mov
xchg
lods
cs
mov
xchg
inc
cld
cmp
jnp
pop
clc
dec
inc
mov
jge
add
test
xchg
outsl
push
mov
ds
in
gs
xchg
adc
movsl
inc
data16
mov
inc
push
lret
push
jns
mov
movsb
cmpsl
add
inc
repz
scas
fcompl
arpl
sub
aaa
je
pusha
pusha
or
push
ljmp
dec
pushf
fstps
xchg
test
cmp
mov
cwtl
mov
data16
sub
inc
add
xor
pushf
pop
mov
xchg
xchg
adc
shll
mov
lcall
outsb
bound
fwait
data16
movsl
out
loop
dec
push
inc
adc
dec
roll
ret
push
adc
pop
add
ret
ja,pt
jae
pop
popf
popf
or
nop
sub
mov
pop
rorl
outsl
arpl
xor
out
divl
xchg
out
cmp
mov
and
push
xchg
sbb
gs
xor
jne
xor
dec
push
cmpsb
mov
fwait
xchg
adc
hlt
rolb
daa
notl
in
and
imul
adc
xchg
mov
rcrl
and
inc
mov
in
push
popf
pusha
mov
pop
gs
notl
sbb
pop
sub
add
xchg
hlt
push
rcrb
dec
stos
add
sbb
insl
push
pop
add
mov
mov
mov
sbb
sbb
jns
dec
shrb
fisubrs
mov
cmp
inc
lcall
arpl
inc
lock
rorl
jne
sbb
inc
lock
lods
mov
shlb
aaa
inc
add
dec
pop
pop
imul
dec
mov
popa
xchg
fildl
movsb
cld
loop
enter
pop
lcall
cld
pop
adc
addr16
stos
pop
mov
sbb
mov
push
into
push
aaa
jne
push
test
dec
insl
inc
mov
incl
lods
ja
out
cmpsb
shlb
movsb
and
mov
lret
loope
pop
dec
xchg
or
mov
incb
xor
ljmp
add
aad
imul
aad
das
loope
dec
inc
mov
fs
and
rorb
mov
aas
dec
stos
dec
mov
pop
mov
lcall
xchg
mov
pusha
cmp
lcall
lret
push
mov
xchg
mov
pop
mov
pop
adcl
sub
add
in
sahf
jnp
cmpsl
jp
dec
nop
fsub
rcrb
lods
aam
adc
mov
sbb
xor
push
aaa
add
lds
inc
scas
push
jnp
cld
icebp
out
mov
ret
inc
cmp
ja
repnz
push
ret
rorl
and
and
shrl
pop
dec
add
out
lret
add
test
dec
push
dec
lods
int
mov
sbb
pop
inc
xchg
mov
das
cmp
lahf
out
imull
insb
enter
stos
pop
push
aam
jo
and
sub
cli
lock
out
mov
adc
and
test
cli
mov
les
cmp
dec
test
aas
cltd
gs
pushf
ret
jbe
xchg
movsb
loope
in
inc
mov
dec
adc
or
cmp
adc
jge
mov
fmul
rorb
mov
ljmp
add
sub
mov
stos
jnp
dec
cmpsl
cwtl
outsb
xor
pusha
sbb
gs
pop
and
push
jle
ret
xorl
xchg
xorl
fs
mov
pop
in
and
fiaddl
pop
rcrl
jl
lcall
cmpsb
fwait
pop
ljmp
movsb
mov
mov
out
aam
iret
mov
out
jbe
cmp
sub
fimuls
imul
mov
sbb
lcall
jecxz
xchg
js
inc
mov
movl
outsl
cltd
shll
sub
gs
mov
push
sbb
hlt
cltd
movsb
push
fcomi
and
gs
test
loopne
add
mov
test
loopne
inc
test
inc
mov
cmp
sub
pushf
xor
enter
xchg
adc
xor
add
xorl
xchg
repz
out
call
fisttpll
mov
in
in
push
cmpsb
stos
bswap
ja
xchg
pop
enter
scas
sbb
add
mov
add
mov
insb
fidivs
les
std
dec
add
xor
int3
adc
mov
add
pop
in
inc
divb
iret
mov
jg
xlat
dec
push
and
or
xlat
imul
cmpsb
xlat
mov
call
testb
mov
sahf
sub
pop
je
xor
mov
adc
or
mov
cld
roll
xor
call
mov
jecxz
nop
xchg
sbb
adc
ret
cmp
repz
imul
into
test
lret
ss
add
push
and
xor
fnstsw
pop
cmp
xor
xchg
dec
inc
or
out
sarb
outsl
movsb
ret
jge
je
mov
cmc
jl
sti
xor
sbb
inc
sahf
push
repz
sbb
dec
ljmp
add
dec
test
add
aad
jge
fisttpl
add
sbb
rorb
cld
sub
mov
xchg
pop
leave
or
rcrb
lods
pusha
mov
and
mov
das
or
paddb
aas
enter
xchg
push
jnp
dec
pop
and
push
fadds
inc
pop
les
imul
and
sub
nop
lret
test
sbb
add
nop
push
sub
cmp
ret
push
ds
repnz
mov
dec
cltd
dec
je
pop
leave
scas
add
cs
xchg
repz
fnsave
mov
pop
mov
das
je
ret
out
sub
repz
lahf
sahf
js
xor
fwait
push
dec
fldl
xchg
leave
xor
test
mov
jbe
xor
push
xchg
cmp
bound
push
addl
xor
cmp
adc
push
xor
jge
int3
pop
mul
adc
xor
inc
adc
or
iret
in
push
movsb
adc
fwait
sbb
imul
cmp
xlat
sbb
loope
test
and
arpl
aas
es
into
inc
add
pop
and
sub
lret
jp
xor
push
fsubrs
aas
mov
push
jns
ficomps
rol
cmp
add
dec
je
xchg
jbe
inc
pop
hlt
and
adc
push
int3
push
mov
insb
jle
cmp
pop
shlb
jmp
scas
push
lods
jne
xchg
mov
fidivs
xor
jmp
jno
dec
popf
aam
fwait
mov
daa
cmp
test
cmc
imul
pop
xor
jmp
pop
adc
scas
push
lods
mov
mov
gs
mov
add
sahf
mov
out
push
loopne
mov
inc
xchg
cld
adc
in
lahf
les
scas
pop
and
popf
jne
dec
iret
hlt
mov
call
push
fstps
mov
xchg
cli
int
ss
mov
lods
or
inc
loope
mov
cld
adc
ja
ds
mov
maskmovq
jg
push
jecxz
into
cmp
stos
aaa
dec
lds
add
sbb
arpl
sbb
lahf
fldt
je
cld
movsl
xor
dec
add
jnp
xchg
scas
push
mov
test
adc
fistps
imul
adc
leave
jp
sub
sbb
mov
xchg
xor
pop
xchg
add
push
clc
mov
cmc
pushf
xor
dec
xor
repz
jecxz
or
in
or
fs
pushf
xor
popa
sbb
adc
icebp
loopne
push
adc
ljmp
xchg
int3
xchg
add
dec
pop
shlb
add
dec
push
inc
push
test
ljmp
mov
push
pop
in
mov
mul
test
in
lea
sbb
movsb
mov
cmp
dec
sar
sub
jb
cmp
sbb
sbb
into
pop
addl
sub
outsb
jp
sbb
sbb
dec
je
cmp
mov
push
cmp
or
adc
or
divb
je
jnp
adc
test
and
scas
or
xchg
sbb
pop
out
stc
dec
jl
mov
sub
and
in
js
aas
and
les
adc
repnz
add
aam
push
sarb
mov
popf
out
mov
mov
pop
test
xor
pop
jo
mov
xchg
mov
ss
in
fiaddl
test
sub
mov
mov
mov
imul
jns
scas
inc
xchg
pop
rcll
hlt
pop
dec
mov
insl
in
lret
cmc
inc
mov
push
fsubrs
push
out
aam
dec
ja
or
add
icebp
dec
inc
cmp
movsl
out
sbb
jge
push
stos
lcall
mov
roll
jbe
push
jg
inc
enter
inc
idivl
ds
je
push
ljmp
adc
fldl
or
movsb
scas
or
mov
and
out
aam
pop
xor
gs
addr16
ret
shlb
fsubr
int3
xchg
and
inc
mov
xchg
aas
adc
std
sbb
dec
sub
icebp
mulb
or
outsl
dec
push
mov
arpl
cmpsl
adc
jp
mov
cli
pusha
inc
lock
adc
lea
pop
and
pop
inc
loopne
jecxz
mov
inc
movsl
popf
push
cmp
fcomp
jge
out
mov
push
mov
in
cmpsl
pop
push
jecxz
out
xchg
dec
sbb
dec
adc
fiaddl
adc
jp
iret
in
outsb
iret
fiaddl
ds
fiadds
push
das
or
lods
shl
fimull
loop
sbb
jns
shlb
loop
mov
fwait
adc
loopne
scas
movsl
daa
andl
ja
mov
repz
jp
xchg
sub
mov
push
push
mov
test
mull
rorb
xchg
cli
repz
pop
sub
les
jle
stc
cmp
mov
cmp
sarb
sub
std
pop
out
loopne
push
pop
scas
stc
test
and
out
cmp
mov
ret
pop
loopne
xlat
cmp
int
ss
loop
xor
loopne
add
sub
pop
push
lods
fs
sub
cli
aas
cmp
out
mov
fcmovu
filds
mov
xchg
mov
mov
mov
dec
jmp
hlt
push
scas
xor
fcoms
or
or
push
push
jno
and
aas
les
mov
sti
xor
sbb
repz
adc
movb
and
jae
fdivrl
ljmp
mov
lea
addr16
mov
fwait
push
daa
mov
lcall
sahf
test
dec
pop
cmp
sbb
sub
mov
sub
xchg
push
sti
jnp
mov
or
repnz
out
sub
addb
or
mov
out
dec
pop
jmp
mov
add
adc
adc
mov
adc
mov
sahf
jae
jp
ss
pop
xchg
mov
cmc
insb
push
sahf
stos
ss
movsl
add
dec
testb
bound
sahf
sahf
fs
and
aad
cmc
jecxz
xchg
andl
mov
adc
jmp
fsts
lods
jo
pop
cmp
scas
dec
sbb
scas
add
pop
ss
icebp
pop
icebp
ret
inc
sbb
jmp
jne
adc
fucomip
movb
xor
int
lret
jge
dec
rol
xor
push
add
and
xchg
imul
pushw
rol
lret
sub
adcb
rcrb
adc
gs
pop
lret
jl
dec
aaa
xchg
cld
pop
popf
fxch
add
outsl
jbe
mov
mov
js
push
inc
cs
xor
andb
xor
push
sahf
dec
lods
out
hlt
push
mov
xchg
dec
xor
out
lahf
hlt
dec
xlat
lcall
out
mov
xor
jp
cmp
fst
int3
loop
adc
pop
mov
xor
pusha
mov
push
and
sbb
add
dec
inc
hlt
jp
jg
sbb
mov
int3
adc
dec
sbbb
pop
sahf
jmp
out
scas
mov
lahf
js
mov
mov
add
push
xchg
cld
je
mov
sbb
push
mov
clc
or
mov
fcoms
mov
mov
test
cmpsl
lcall
mov
call
stos
movsb
mov
or
call
icebp
dec
imul
mov
sub
cmp
in
mov
jbe
add
mov
mov
je
and
ret
idivl
in
and
jo
ficoml
xor
data16
aaa
push
adc
inc
push
mov
lock
ret
and
push
mov
pop
xchg
and
pop
popf
sbb
sarl
inc
add
sub
jp
pop
inc
push
imul
daa
lds
scas
mov
cmpb
mov
jns
mov
xchg
or
sahf
imul
xchg
cmp
add
or
cmpsb
imul
pause
enter
subl
or
js
add
mov
in
repz
popa
and
dec
pop
push
rcll
scas
and
adc
mov
sahf
cmp
fldenv
sub
push
dec
mov
push
push
inc
mov
iret
jo
sbb
test
je
hlt
cmp
xchg
or
icebp
mov
subl
pop
mov
push
sbb
bound
pop
test
and
xchg
ret
lret
fcoms
pop
xor
jns
mov
fiadds
add
or
fildll
push
sbb
mov
ds
leave
push
jae
add
push
decl
add
pushf
loop
adc
cmp
mov
aam
push
dec
les
sti
mov
jmp
jb
sti
or
pop
cmp
lahf
mov
inc
lods
arpl
mov
loope
xor
dec
lds
xlat
xchg
pop
sbb
imul
rclb
pop
inc
xor
js
and
mov
sbb
jb
mov
js
rclb
in
addr16
mov
in
dec
lods
and
mov
mov
es
add
repnz
orl
imul
leave
ja
lea
repnz
inc
fists
inc
mov
lahf
xchg
mov
push
xchg
aam
stos
movsl
std
push
xor
lods
ljmp
outsl
addr16
xchg
out
pop
ret
xchg
test
mov
test
sbb
lret
mov
rcrb
and
inc
mov
mov
jb
inc
aam
shlb
adc
dec
adc
pop
jle
mov
and
and
cwtl
mov
push
or
inc
jle
add
rcr
add
mov
jne
and
or
cmp
mov
mov
imull
xchg
cmp
mov
mov
and
repz
mull
pop
dec
dec
hlt
ficoml
push
cmp
loope
cmp
sbb
das
in
ljmp
push
into
pushf
sbb
pop
mov
faddp
les
xchg
aaa
add
cwtl
inc
ja
lret
mov
mov
lret
cmp
mov
roll
push
int
inc
jbe
jg
push
ret
fbstp
mov
lods
mov
pusha
scas
ret
pop
xchg
dec
cli
mov
fldcw
push
repz
rorb
std
mov
dec
es
mov
xor
lock
dec
in
fisubrs
mov
pop
movsb
imul
test
and
pop
xor
fs
and
mov
fwait
cmc
xchg
inc
stos
sahf
cli
inc
gs
jne
sahf
push
bound
xor
push
pop
std
xchg
rorb
ret
fwait
mov
mov
sbb
pushf
mov
mov
nop
jecxz
mov
movsb
xchg
int
leave
fldt
sbb
sbb
idiv
xchg
loop
xchg
shlb
inc
bound
imul
pop
and
inc
pop
or
andl
lds
xor
fnstsw
jecxz
mov
aas
add
mov
dec
mov
xchg
dec
stos
sbb
sub
cmp
jg
xchg
jne
inc
xor
lret
pop
and
ljmp
jl
xchg
sbb
xor
in
mov
jecxz
dec
out
and
or
arpl
stc
mov
push
mov
or
sub
mov
sbb
sbb
scas
mov
aaa
stos
and
jo
mov
negl
lahf
or
xor
mov
test
fldt
scas
sub
adc
nop
andb
test
fbld
xchg
pop
inc
xchg
outsb
cmpsb
push
mov
in
out
mov
adc
lfs
enter
sub
jnp
je
pop
popf
cmc
mov
mov
aas
xchg
out
sbb
lret
in
xchg
scas
cld
into
jae
cmp
and
out
jmp
je
xor
mov
dec
cmp
dec
lds
mov
out
roll
pop
jle
jb
or
push
cmpsb
fcomip
pop
mov
mov
mov
fstl
test
jge
mov
jp
adc
pop
and
mov
add
sub
sbb
inc
shlb
push
ss
shll
push
pusha
xchg
lea
mov
xorl
sub
and
mov
xlat
pop
sub
mov
adc
mov
and
sbb
adc
add
mov
inc
inc
ret
or
enter
loope
push
sbb
sub
pop
loopne
ret
movaps
sub
aam
pop
sbb
fs
sbb
fildll
mov
or
aam
outsb
or
cmp
or
popf
fwait
daa
xor
mov
hlt
addb
sub
data16
push
sar
push
ret
inc
and
or
out
rorl
add
and
xor
pop
repnz
bound
xor
push
adc
shll
out
imul
cmpsb
aas
aaa
in
cmpb
pop
rcll
mov
int
pushf
js
fwait
xor
inc
inc
lret
call
fnstenv
push
bound
sbb
mov
cwtl
inc
jp
sbb
pop
push
aas
incb
pusha
stos
xchg
je
xchg
dec
pop
lret
lods
fadds
fwait
nop
pop
jne
push
push
out
ja
rcrb
pop
in
rcrb
nop
pop
dec
mov
pop
das
pop
fstpl
hlt
pop
xor
in
push
ljmp
adc
loopne
or
dec
add
fstl
inc
je
push
xor
jmp
cmp
or
xor
fisubrs
sbb
jl
stos
pop
rorb
pushf
cmp
pop
mov
stos
pusha
sarb
sbb
inc
mov
aas
in
shll
cli
mov
popf
mov
cwtl
lahf
roll
sbb
push
jne
push
popf
ja
sub
xchg
ret
xor
sub
jp
aaa
stos
gs
xchg
xor
pushf
adc
loopne
fdivr
jnp
push
fdivs
cmc
ja
testb
lret
addr16
outsl
fcomi
xchg
sub
jnp,pt
insb
frstor
jne
push
mov
fists
adc
push
mov
push
cld
push
ljmp
or
cmpsb
iret
mov
addr16
gs
aas
int3
sarl
rcrl
jno
movsb
mov
pop
lods
mov
push
inc
and
popa
lea
cmpsb
pop
push
xchg
jb
and
inc
add
xlat
sbb
xor
pop
popf
leave
adc
push
ds
cmp
or
add
pushl
jle
mov
add
movd
add
xchg
inc
mov
stc
stos
push
xchg
lds
xlat
sub
adc
lret
sahf
out
out
dec
add
aad
push
mov
pop
into
lret
sbb
rolb
incl
mov
insb
ficoml
inc
push
das
ljmp
dec
inc
iret
xchg
sti
jns
rcrb
fs
adc
cmp
dec
insb
sub
loopne
fstpt
sarl
mov
shl
and
jbe
mov
fisttpl
jle
xor
dec
jne
jo
fsubs
lahf
sarb
mov
std
push
push
fisttpl
test
mov
mov
push
xchg
aaa
inc
inc
in
mov
loope
cmp
sbb
scas
fcompl
gs
xor
xchg
jmp
jg
cli
mov
jno
push
inc
dec
insl
jg
scas
inc
pop
pop
fnstenv
push
jnp
ret
cltd
jl
sahf
add
dec
repnz
push
addr16
insl
ljmp
into
fisubl
xor
mov
push
je
sar
inc
or
push
repnz
mov
sbb
jge
add
cmpsl
pusha
jne
xchg
int
pusha
pop
fmull
push
or
inc
popa
lock
mov
inc
mov
out
sub
gs
int3
mov
mov
mov
stos
dec
dec
jge
stc
and
les
jo
dec
shr
out
test
out
and
test
pusha
push
sarb
pop
into
test
repz
or
fldt
mul
jae
and
cli
xchg
nop
dec
into
out
xchg
shl
aad
andb
adc
xchg
or
ss
cmp
aas
in
jnp
pop
inc
jmp
or
jbe
fisttps
subl
jnp
jb
jno
inc
sahf
bound
stc
notl
inc
scas
iret
xchg
jo
fs
int3
mov
xchg
mov
push
mov
ret
insb
hlt
icebp
lret
adc
xchg
cmp
loope
mov
test
mov
out
lahf
adc
outsl
enter
dec
iret
jmp
adc
lods
insb
inc
fldenv
or
push
ret
jo
pop
lock
ds
mov
mov
xchg
sahf
dec
out
add
fimuls
fcompl
addb
sti
mov
sahf
lds
ret
sub
pop
pop
out
sbb
dec
subl
fisttpll
icebp
dec
or
mov
stos
mov
lret
les
insb
dec
xchg
adc
dec
fidivrl
mov
jb
jmp
test
push
mov
orb
repnz
add
iret
popf
pop
inc
adc
stos
fnstcw
push
pop
sub
insb
scas
pop
pop
pop
and
and
loop
jbe
arpl
int
adc
ss
mov
sti
pop
sbb
rcr
scas
les
jecxz
sub
ret
pop
cli
adc
iret
pop
sahf
les
sub
stos
inc
xor
inc
dec
xlat
mov
mov
divl
jle
cs
pop
jnp
insb
mov
scas
paddsb
dec
sub
insb
or
scas
inc
mov
lret
xor
loope
jle
xor
rorl
pop
pop
xchg
lock
pusha
add
sbb
push
lods
push
xor
jge
pop
inc
loopne
mov
clc
mov
lahf
push
push
cltd
in
test
jp
add
pop
ss
and
pop
dec
daa
jbe
gs
ja
add
and
cmp
scas
mov
pop
leave
xchg
enter
cmp
gs
test
lods
cmc
stos
loop
xchg
movsl
inc
vcvtps2pd
cmp
jmp
mov
inc
js
in
cmpl
js
ja
mov
fbstp
mov
std
nop
clc
pop
xchg
dec
sub
int
dec
adc
cmp
lock
daa
or
mov
movsl
dec
int
ret
cmp
mov
repnz
imul
jg
sti
or
test
pop
add
out
daa
ss
sub
dec
movsl
pop
addr16
xor
inc
fldcw
mov
imul
test
jmp
pop
dec
stc
dec
sarl
notl
popf
xor
inc
cmp
popf
mov
leave
sti
mov
cmpsb
push
loop
rolb
push
cmpsb
pushf
scas
pop
and
pushf
add
lret
mull
ds
pop
jne
lcall
cmp
adc
lock
adc
cmp
jle
loopne
inc
mov
out
xlat
sbb
sbb
mov
dec
xchg
mov
xor
sbb
pushf
enter
mov
out
ret
std
add
xor
jne
inc
mov
jg
addr16
add
test
test
cwtl
fmulp
fldt
ja
sti
xchg
and
and
and
mov
int
and
mov
inc
mov
int
and
or
nop
jb
cli
leave
jmp
sti
js
outsb
xchg
sbb
add
push
inc
das
mov
sbb
insl
popf
stos
or
aaa
test
lcall
fstpt
sub
inc
xchg
fstpl
adc
int3
xchg
mov
push
push
xor
mov
mov
aaa
rcrl
xchg
jle
jbe
pop
cld
sbb
dec
hlt
daa
mov
daa
mov
and
cwtl
xchg
popf
mov
mov
pop
in
cmp
pop
rcr
sub
lahf
cwtl
aaa
mov
insl
jl
mov
mov
adc
aaa
fwait
xchg
add
data16
lret
adc
or
out
add
shrl
pop
pop
mov
cwtl
loop
pop
jnp
out
mov
lcall
dec
lret
outsb
ret
or
pop
jno
mov
addl
addr16
imul
mov
sbb
lock
fsubr
mov
int
pop
and
mov
cmp
mov
xchg
in
mov
rcll
dec
fwait
jne
aam
pop
loop
dec
mov
into
ds
and
mov
inc
or
sub
loope
mov
mov
ljmp
xor
stos
mov
cld
outsb
loopne
pop
in
xchg
sub
enter
out
inc
int3
cmp
cmp
dec
cld
xchg
shlb
movsb
movsl
in
and
xchg
jnp
sbb
xor
repz
bnd
mov
dec
inc
shlb
hlt
scas
mov
mov
ret
adc
jmp
xor
les
mov
sbb
cmc
loope
fcompl
or
in
arpl
xchg
mov
out
push
mov
sbb
out
xor
pop
push
push
cmpsb
fsubs
or
imul
sahf
inc
xor
mov
xchg
stos
xlat
pop
sahf
aad
pop
je
push
shll
or
sbb
ljmp
fisubrs
sbb
and
fiadds
movsl
in
xor
jb
xchg
add
or
leave
pop
pop
movsb
out
pusha
sub
das
xchg
mov
push
sbb
arpl
sahf
int
fisubrs
push
imul
fnstsw
push
lahf
adc
bound
in
pop
divl
cmp
in
cmp
adc
loope
lret
ja
sbb
outsl
sub
lds
fxch
aas
iret
in
loope
xchg
cs
jl
jecxz
push
pop
cmp
fdivl
jne
or
mov
or
stos
pop
out
push
cmp
push
push
inc
dec
sub
jns
dec
jns
xchg
ja
insl
shlb
in
lods
pusha
ret
jno
push
mov
out
mov
aaa
add
adc
lock
insl
mov
test
sub
jg
push
mov
and
push
lods
rcrb
mov
stc
data16
int
xchg
mov
scas
mov
lods
test
out
or
and
dec
mov
loopne
popf
xor
mov
pop
dec
fcoms
sbb
scas
je
sbb
cmpsl
jl
mov
xor
sbb
xchg
push
adc
push
jg
pop
repz
mov
xor
adc
push
incl
sbb
inc
push
mov
lahf
adc
data16
insl
xchg
mov
cmp
push
mov
loopne
dec
sub
movsl
mov
cmpsl
cli
ret
push
mov
cmp
dec
push
in
pop
sbb
adc
xchg
sub
pop
mov
push
add
cmp
inc
rcr
sub
insb
mov
loopne
sbb
jle
xchg
dec
out
jne
testb
les
out
pop
pop
xchg
push
mov
dec
mov
sub
sarl
and
xor
test
test
mov
dec
cmp
lods
not
dec
xchg
or
into
pusha
add
inc
loope
imul
mov
fwait
cmc
leave
shlb
rcrl
dec
jae
mov
scas
jne
test
rcll
pop
lret
mov
adc
cmp
enter
lods
push
pop
cmpsb
xor
mov
add
inc
jae
xor
mov
nop
mov
dec
imull
push
ffree
lcall
addr16
inc
arpl
dec
bound
repz
push
dec
push
mov
addr16
leave
inc
xor
js
and
popa
push
insl
push
xor
fnstsw
cmp
push
ret
sbb
aas
pusha
movb
xchg
xchg
push
push
xchg
pop
push
jbe
xchg
jp
mov
pop
dec
pause
daa
xor
lods
cmpsb
xchg
lds
out
subl
push
mov
mov
sbbl
ss
adc
outsb
mov
mov
pop
out
mov
or
inc
in
xlat
int
and
addr16
cmpsl
les
cmpl
jb
scas
add
sahf
stos
ds
sub
out
dec
les
xchg
fnstsw
imul
inc
es
gs
repnz
jecxz
sarb
sahf
fnstsw
mov
push
icebp
xor
mov
pushf
or
jp
add
fstpl
loopne
popa
es
jge
fimull
outsb
pop
out
mov
testb
ljmp
dec
lea
jge
mov
pxor
cmpl
mov
add
push
mov
push
inc
imul
inc
dec
lods
std
jmp
out
lock
xor
or
in
cmp
enter
and
lea
rcrb
aam
inc
or
push
push
pusha
clc
fsubrp
movsb
pop
bound
dec
jno
test
push
pop
jl
fidivs
std
jg
ficomps
jg
cmp
adc
jne
sarl
add
xchg
ficoms
stos
pop
jge
lret
pop
hlt
movsl
cmp
movsl
mov
fwait
leave
jo
sbb
cmpb
cmc
and
inc
jecxz
mov
mov
cs
jnp
mov
iret
and
out
pop
out
loopne
ds
and
xor
add
push
ljmp
xchg
js
stos
mov
aad
mov
jp
mov
sub
inc
shll
mov
adc
mov
mov
call
shll
aaa
lods
fcompl
icebp
hlt
xchg
ja
and
pop
mov
jl
cmp
test
sti
pop
dec
inc
and
xor
pop
add
aam
loopne
xchg
icebp
fisubl
sbb
idiv
pop
xor
push
iret
fildl
data16
test
clc
push
jecxz,pt
lea
cmp
xchg
mov
das
scas
ja
movsl
loop
mov
mov
jae
and
add
jmp
nop
mov
sbb
jns
mov
fwait
popf
std
lahf
jp
xorb
aas
out
add
jno
test
jge
lods
cmpsl
mov
lahf
mov
icebp
sub
lea
dec
mov
jne
test
pop
adcb
or
repz
int3
or
pop
jne
insb
inc
fisubl
outsl
fsubrs
adc
sub
scas
stc
loop
bound
mov
negb
jmp
loop
jae
icebp
mov
push
das
loopne
shl
cmp
pop
pop
repz
rcll
js
sti
aam
inc
std
jno
add
outsl
adc
xor
cmp
shlb
daa
subb
push
je
pusha
pop
jno
xor
mov
push
cmp
inc
jle
mov
js
gs
ja
in
scas
jno
push
pop
aad
iret
mulb
mov
movsb
sub
sub
outsl
test
push
pop
mov
ret
dec
inc
hlt
and
mov
lret
and
insl
push
lcall
scas
loopne
add
xor
cmp
popw
ja
pop
adc
pop
movsb
scas
cmp
sub
cmp
mov
rcr
je
sbb
mov
inc
addr16
xor
adc
xchg
leave
ds
sbb
cmp
jle
inc
mov
mov
neg
clc
scas
or
mov
loopne
or
add
sub
popf
cmpsl
xor
dec
mov
xchg
jb
cld
sbb
mov
iret
movsl
mov
mov
lcall
fadds
jbe
cmp
pop
sbb
fs
push
add
xor
jg
push
out
int
mov
lds
test
dec
push
addr16
cmp
cli
fcoml
mov
aad
pop
or
and
and
xor
sub
pop
xchg
flds
push
pusha
icebp
cli
mov
jl
sub
lahf
rorl
xchg
add
loop
cs
sub
mov
pusha
and
jl
push
xor
scas
stc
sub
and
push
inc
xchg
push
push
or
lock
dec
repz
cmovo
push
pusha
aam
into
stos
cmp
mov
and
mov
or
aas
inc
aaa
out
push
sbb
int
aaa
sub
negb
test
dec
push
and
lahf
pusha
and
mov
dec
data16
add
add
hlt
or
inc
jge
mov
jnp
popa
pusha
lock
stos
repz
adc
mov
arpl
aaa
ja
sub
loop
pop
ja
stos
xlat
jae
jg
jb
mov
push
rol
xchg
bound
or
sbb
shl
mov
push
lret
add
inc
mov
push
std
cmpsb
stos
movl
jle
jecxz
jae
sub
xor
dec
pop
push
add
xchg
inc
jg
pop
mov
insb
xchg
cwtl
out
jle
push
frstor
rolb
mov
jno
add
or
adc
mov
inc
mov
aad
pop
shr
push
pop
in
xor
ret
adc
inc
imul
mov
insl
leave
dec
cmp
pop
push
jg
cmpsl
ljmp
in
push
movsl
mov
pop
adc
xor
imul
test
test
ja
jmp
and
sub
push
jp
mov
mov
scas
je
lcall
inc
jecxz
lcall
push
stos
sbb
les
sbb
loop
pop
jg
xor
jg
lahf
pop
mov
dec
fbld
dec
call
jmp
xor
lock
cli
fidivrl
mov
mov
pusha
sub
popf
test
pop
mov
icebp
pop
dec
aam
es
aad
test
jecxz
repz
shrl
xor
xchg
cmp
mov
inc
test
pop
and
pop
jne
mov
dec
adc
or
mov
movsb
dec
push
mov
ret
pop
shll
xor
push
addr16
push
or
or
inc
fbstp
pop
cmp
rorb
mov
xchg
xchg
dec
mov
ficoms
jbe
mov
imul
pmullw
push
cmp
and
aas
aad
shrb
fistpl
sbb
inc
xor
adc
xchg
sbb
lahf
outsl
adc
mov
xor
and
jbe
in
aam
mov
or
mov
and
loope
gs
outsl
cmc
addl
gs
aam
enter
mov
pop
cmp
fcoms
je
div
pop
lds
es
ja
and
leave
pop
lock
mov
stc
jne
std
mov
lcall
pop
lods
scas
vminps
ret
in
add
add
adcb
cmc
dec
sub
dec
mov
rolb
wbinvd
lcall
mov
lods
scas
ss
inc
jl
cmc
insb
ficoms
int
insb
dec
movsl
jns
cwtl
jg
sbb
push
popa
clc
push
aam
jns
stc
ret
movl
xor
add
sbb
push
and
int
push
push
dec
pusha
fidivrl
adc
mov
aam
mov
cmp
jae
pop
fidivrs
das
std
sbb
out
sbb
mov
dec
clc
call
add
imul
orps
loop
aam
imul
idivb
sub
jecxz
int3
loopne
or
jl
mov
es
pop
loop
mov
bound
xor
pop
inc
or
in
jb
mov
inc
cs
adc
pusha
cmc
mov
xor
sbb
add
mov
movsl
sbb
in
icebp
cli
and
and
das
mov
icebp
and
push
push
xor
loopne
rorb
lret
cmpsl
jne
cld
aas
mov
xlat
in
adc
clc
dec
outsb
jmp
push
in
lcall
lock
lock
movsb
push
lcall
mov
push
mov
idivb
inc
fbld
inc
jae
sub
in
outsl
jns
pop
incb
aas
sbb
mov
and
xlat
and
adc
dec
and
test
or
jb
sub
notb
dec
fnstenv
shll
ret
aam
out
and
mov
sub
in
xor
popf
mov
cmp
fnstsw
dec
mov
push
roll
jno
in
test
sahf
mov
in
scas
push
sub
or
nop
es
leave
mov
lea
xchg
pop
xor
lock
aam
jo
push
addr16
and
pop
push
out
dec
lods
pop
inc
outsl
adc
adc
push
shlb
out
or
gs
fbstp
aam
aas
lahf
cmp
je
lret
movsl
pop
and
mov
int
push
test
mov
movsl
mov
dec
pop
fbstp
mov
pushf
pop
and
testl
mull
xchg
arpl
dec
clc
push
daa
negl
out
movsl
jmp
cli
jecxz
adc
and
fmull
lods
jbe
or
sbb
fdivr
stc
mov
inc
cmp
ljmp
lods
stos
cmp
dec
fadds
test
inc
push
std
test
jno
pop
jnp
add
inc
mov
dec
pop
inc
fcom
jae
dec
dec
movsl
mov
jno
pop
jae
cmp
faddl
std
lods
fcomp
pusha
or
int3
push
inc
lods
repnz
mov
daa
and
adc
xor
cmpsl
pop
lds
pusha
pushf
cmp
push
cmpsl
std
fcmovnbe
aad
ret
pop
ja
std
cli
lcall
mov
or
loop
in
test
mov
aaa
add
jns
sarl
pop
stos
int3
dec
scas
enter
repnz
xlat
jp
pushl
inc
test
mov
dec
adc
dec
out
fs
loope
das
push
jmp
jmp
aam
inc
fdivrl
cli
xor
mov
sarl
call
in
push
sub
mov
faddl
outsl
mov
sub
insl
and
dec
xor
sbbl
mov
je
imul
or
push
addr16
sbb
xchg
adc
lcall
mov
fistpll
add
mov
cmp
sbb
jmp
pop
pop
sbb
popa
xor
pop
adc
cld
int3
push
lock
lret
add
sbb
mov
push
push
aaa
mov
cmp
and
fisttpl
std
mul
lcall
test
aaa
mov
jb
jne
js
sub
les
test
pop
mov
xchg
das
hlt
dec
mov
mov
out
popf
ficompl
inc
leave
fwait
xchg
mov
pushf
call
loopne
cld
hlt
lods
push
sbb
mov
add
inc
inc
add
hlt
aas
and
mov
jnp
outsl
pop
jp
pop
lods
std
or
popa
mov
or
mov
add
xor
xchg
ja
add
sarl
ret
lcall
adc
in
sahf
insb
inc
mov
dec
cmpsb
jo
fbld
rolb
jnp
sbb
dec
aas
repz
jbe
into
cld
mulb
cmp
add
or
cwtl
add
ficoms
jecxz
test
ja
fisubrs
sbb
lahf
xor
cld
std
sub
push
cltd
sbb
push
push
mov
xor
add
imul
pop
push
add
out
mov
fimull
movsb
les
adc
pusha
adc
dec
push
cli
sbb
shlb
push
cmp
pop
xor
push
sarb
test
mov
imul
xor
jae
or
sbb
push
faddl
fstpt
scas
fadd
push
test
popa
divb
bound
cmp
sahf
test
dec
aas
cs
pop
into
cmpsb
shr
xchg
out
jp
inc
push
mov
jl
filds
mov
xor
mov
add
sub
scas
rorl
ret
mov
arpl
out
ret
push
mov
insb
xchg
pop
bound
inc
xchg
xor
dec
push
jg
mov
bound
shl
jmp
dec
jne
test
adc
add
out
pop
and
not
pop
adc
xor
int3
lds
fdivrp
ds
test
xchg
sub
xchg
sbb
aad
adcl
arpl
sbb
scas
sub
fdivr
jnp
cmpsb
adc
ds
jg
cmp
test
and
lahf
or
mov
idivb
cmpsl
cmpsb
jg
xor
jp
stos
addb
xchg
ret
scas
push
mov
sti
sub
daa
test
in
outsb
cmp
push
imul
sbb
pop
cmp
jne
mull
out
icebp
cs
outsl
aas
dec
test
mov
cmpsb
lcall
inc
fbstp
iret
jle
in
frstor
sub
inc
stc
mov
sub
shr
cmp
mov
data16
mov
fnstenv
cltd
mov
jae
lcall
dec
lods
shlb
inc
into
aad
cmp
in
dec
arpl
cmpsl
xor
add
cmc
test
and
in
rorb
inc
sbb
mov
push
push
out
insl
rclb
push
and
sub
sub
out
jb
mov
repnz
mov
and
mov
xor
test
lcall
ret
xchg
enter
cwtl
push
insb
outsl
outsl
push
test
mov
mov
popa
adc
xor
pop
shll
pop
mov
mov
mov
mov
lods
jg
push
cmp
ss
mov
popl
addr16
push
jg
and
or
stos
mov
lds
mov
push
or
push
pop
cmp
and
xlat
dec
mov
sub
dec
xor
jno
lods
popa
and
jns
test
out
xchg
inc
repz
das
es
jecxz
pop
repz
or
or
or
sbb
jl
add
cmp
clc
roll
cmp
adc
inc
out
cmp
mov
fsubp
or
inc
cmp
out
test
mov
movsb
pop
out
and
jae
mov
clc
mov
jmp
rorb
test
lds
icebp
and
shlb
mov
and
outsl
inc
ss
mov
xor
or
push
sbb
lahf
add
push
ss
pop
jl
lcall
lahf
mov
add
and
divl
into
or
in
fwait
xor
rcll
testl
push
jne
and
sbb
sub
xchg
mov
cmpsb
push
xlat
fdiv
lret
gs
ja
iret
pop
data16
mov
jmp
xchg
xor
xor
sub
inc
es
aas
cmp
mov
dec
mov
fistpl
cld
sub
aad
cmpsl
loop
insb
je
into
jnp
enter
pop
inc
mov
mov
aaa
mov
pop
dec
push
loopne
mov
adc
jbe
and
jne
fists
pop
cmp
into
jae
insb
call
aas
pop
repnz
jecxz
shrl
ss
popf
cwtl
xor
lret
sarl
andl
mov
ljmp
les
cmpsl
mov
xchg
mov
lret
mov
lea
mov
scas
test
xchg
xchg
pop
sub
adc
pop
in
xchg
ljmp
cwtl
and
pop
jae
fstl
int3
out
cmp
in
cltd
out
or
mov
bound
nop
inc
mov
stos
and
lret
iret
or
ja
mov
inc
dec
sti
push
fidivrl
lods
leave
mov
repnz
cmc
pop
xchg
xor
mov
xor
push
or
ds
xchg
mov
push
or
dec
inc
int
decl
cmp
testb
movsl
and
mov
mov
cli
ja
js
mov
pop
ljmp
sub
pop
pop
mov
and
jo
inc
inc
cltd
insb
and
xchg
sub
jecxz
pop
test
inc
push
and
ret
jb
mov
push
mov
lret
adc
ret
das
dec
sbb
mov
fnop
or
xor
dec
xor
xor
mov
stos
test
push
mov
xor
and
mov
int
into
sbb
mov
lods
inc
loop
lods
ret
mov
rorb
xor
adc
sbb
movsl
out
push
sbb
shr
dec
mov
fs
scas
sub
push
nop
dec
pop
dec
ret
aam
mov
xchg
sub
cs
push
and
aaa
cltd
jo
pop
jbe
cmp
lcall
add
out
push
fsubs
cmpsb
push
push
hlt
sbb
fwait
sub
xchg
push
cmp
mov
aaa
test
repz
pop
stos
mov
lock
pop
push
fildll
popf
inc
shlb
jae
outsb
cli
sub
mov
push
in
jbe
push
adc
ja
push
jmp
scas
pop
mov
imul
shrl
pop
sub
call
mov
mov
iret
stos
dec
movb
jp
inc
mov
lret
lea
icebp
mov
addr16
cmc
jae
pusha
int
aaa
scas
rcrb
fsts
xchg
iret
aaa
int
fcompl
dec
lcall
loop
xor
aad
lret
add
clc
shll
leave
jg
sbb
shll
dec
cltd
sbb
sub
leave
sbb
cmp
cmp
pop
test
pop
sbb
test
out
push
icebp
dec
call
push
xchg
jle
fisubrl
int
xchg
xchg
outsl
ja
jne
jne
mov
push
imul
cld
jnp
mov
leave
sbb
pop
data16
adc
scas
xchg
in
sti
in
push
jnp
xchg
adc
jmp
bswap
lcall
out
aad
int
sub
adc
inc
in
xchg
sub
adc
adc
mov
loop
push
xchg
xchg
adc
pushf
out
push
jecxz
push
xor
sbb
inc
jg
cmc
inc
out
pop
mov
xor
je
adc
insb
dec
lret
sbb
rcl
jmp
xchg
lock
ret
sub
mov
imul
xchg
in
js
repz
push
cs
push
add
loopne
cmp
dec
add
adc
jno
ss
arpl
enter
xchg
jae
sbbl
pop
xlat
lock
imul
psubsb
insb
mov
mov
dec
push
and
loopne
cmp
xor
lahf
imul
in
xlat
sub
shl
leave
cltd
or
jmp
adc
push
dec
sub
jbe
lret
push
mov
mov
loope
push
dec
std
shlb
sbb
push
popa
vpsubsb
ja
cltd
cmpl
jle
push
jns
fistpl
add
inc
adc
gs
mov
mov
negl
shlb
lcall
mov
ds
ss
aaa
popa
lods
in
jae
mov
in
xchg
push
out
sub
or
repnz
mov
ja
ficompl
out
push
sti
test
mov
neg
ret
fwait
or
jbe
xchg
test
insl
rolb
sub
add
adc
mov
push
xlat
push
mov
out
add
jecxz
and
orl
js
fildl
xor
neg
lahf
aaa
mov
mov
cltd
sbb
inc
cltd
inc
scas
dec
and
push
cmpsb
add
sbb
fxam
insl
in
scas
push
jnp
xchg
jo
cmc
xchg
scas
data16
lahf
lret
add
sub
daa
stos
ja
ret
jae
les
and
push
jecxz
pop
push
or
dec
cmp
outsb
data16
fistl
scas
and
pop
iret
push
out
gs
bound
lea
loope
aas
les
ficomps
push
adc
jno
mov
jb
adc
je
stos
je
push
jo
fs
push
aas
jl
xchg
jl
test
negb
pop
aaa
push
loope
lods
hlt
adc
repz
mov
mov
pop
jnp
push
out
sti
xchg
inc
lret
add
ret
xor
mov
mov
mov
xchg
negl
mov
xor
inc
and
dec
cwtl
movsl
scas
push
stos
fsub
lds
and
pop
lret
push
add
lahf
and
lds
sub
mov
cmpsb
int3
add
add
dec
shlb
cwtl
or
cmp
repnz
fnstcw
aad
rorb
repz
xchg
aad
imul
cmp
pushf
aas
cmp
pop
dec
int3
mov
mov
sbb
pushf
adc
clc
mov
rcrl
jae
and
sbb
sub
push
pop
imul
push
mov
cmp
lret
push
xchg
xor
pusha
in
push
into
outsb
sbb
cs
nop
dec
ret
enter
fldz
xor
imul
inc
jns
out
shll
inc
sub
test
int3
lock
out
push
stos
fsubl
cld
and
adc
pop
cmp
or
push
gs
ljmp
mov
insl
into
lahf
sahf
stos
aad
imul
mov
push
inc
mov
mov
roll
jbe
mov
pop
jge
add
xchg
test
pusha
push
in
repz
mov
cmp
adc
mov
gs
mov
and
call
cmp
and
outsl
pop
mov
addr16
push
push
pusha
mov
sub
mov
sahf
pop
or
cli
stos
jnp
cmp
dec
outsl
sub
cld
jns
scas
jp
or
enter
mov
jecxz
into
shlb
or
lcall
call
fdivp
mov
inc
mov
sbb
aas
mov
out
xor
repz
or
movsl
ja
sahf
dec
stos
and
lods
or
xchg
pusha
xor
fs
cltd
pop
pop
jne
dec
aam
stc
shl
popf
add
mov
jp
out
sub
movl
test
loope
clc
mov
sbb
mulb
pusha
xchg
inc
xor
sub
mov
lret
insb
rcrl
and
mov
in
push
bound
ja
rcll
cli
imul
js
dec
jns
fimuls
mov
add
push
fmuls
pushf
mov
pushl
xor
inc
adc
nop
inc
cli
test
popa
xchg
or
push
fidivl
push
inc
sbb
and
loope
data16
inc
sarb
xchg
dec
mov
repnz
adc
push
fbld
scas
inc
or
dec
push
adc
rcrl
test
adc
inc
out
sub
cmc
mov
stos
cmpsb
inc
xchg
repz
repz
adc
repz
and
mov
imul
sar
mov
adc
mov
push
mov
das
lds
fildl
je
or
xor
into
dec
add
fidivs
call
cltd
scas
fimull
xor
lock
in
add
jp
cmp
test
jecxz
mov
popf
and
stos
cwtl
pop
fadds
mov
in
jl
xchg
les
pop
xchg
sub
inc
jne
inc
inc
mov
les
cltd
mov
sbb
xchg
jnp
hlt
fildl
dec
dec
sub
xchg
lcall
ret
inc
or
dec
popa
push
jno
xchg
pop
scas
xor
adc
pop
in
fcomps
sti
pop
and
add
in
xchg
add
aam
rcrl
outsl
xor
nop
movsl
xchg
xor
cmp
mov
inc
mov
pushf
dec
or
dec
mov
dec
outsl
cmp
rcll
inc
cmp
pushl
insl
lret
pop
xlat
mov
rolb
lret
xchg
fistps
xor
aas
inc
movsl
mull
cmp
jnp
cmc
sub
mov
lahf
cmpsl
cld
xor
add
fwait
xor
aam
fmul
arpl
insb
popf
pop
cmpsb
ret
push
int
cltd
rcll
jns
cmpsl
lahf
out
popa
mov
das
or
sbb
jle
mov
scas
mov
xchg
or
mov
int3
cs
pop
sub
add
and
add
pushf
or
icebp
add
inc
add
clc
inc
jnp
mov
out
cmp
xor
rclb
xchg
xchg
jle
test
push
pop
std
fsubl
push
enter
insl
stos
sahf
shll
push
test
clc
testb
inc
aad
or
rolb
jo
pop
and
iret
dec
mov
repnz
test
xchg
jne
xor
lods
and
push
pushf
popa
cmc
test
rcrl
int3
sub
adc
aam
inc
inc
out
dec
lods
mov
scas
or
cltd
pusha
stos
mov
fsubl
bnd
lock
mov
outsl
fsubl
mov
fsubrs
leave
stos
iret
nop
xor
sub
jl
dec
xchg
fldcw
inc
add
pushf
inc
lahf
sub
add
mov
inc
jecxz
sbb
xor
mov
sbb
jmp
cmpsl
jne
jbe
fists
ficomps
lea
in
push
in
lock
cld
leave
movsb
cmp
mov
pushl
and
andl
mov
mov
rclb
push
cmpsl
cmp
xchg
xchg
jno
fisubl
mov
and
and
cmpsb
cmpsb
pop
xor
aam
xor
mov
sbb
adc
cwtl
repz
ds
mov
adc
jl
vunpcklps
cmp
xchg
cmp
push
scas
and
cmp
and
adc
in
not
movsl
adc
test
xchg
rcr
mov
out
lock
cmp
mov
or
mov
jbe
in
pop
fisubrl
movsl
ret
sbb
rol
test
mov
cmp
or
gs
cmpsb
out
and
popa
iret
scas
imul
dec
or
xor
sub
sub
fcompl
lcall
test
in
test
ss
mov
fwait
dec
xchg
leave
push
sub
xor
sbb
xor
mov
cmp
jmp
adc
jle
notb
inc
sub
stos
sahf
and
jne
jg
inc
adc
sbb
lods
scas
mov
outsb
aad
ret
es
call
mov
xchg
fcomps
stos
ret
pop
cwtl
and
outsl
cmpsl
mov
imul
xor
out
inc
push
or
sub
call
rcr
xor
incb
mov
cld
or
inc
data16
lea
clc
inc
imul
xor
push
inc
and
ret
and
rcrl
leave
xchg
cld
in
scas
das
inc
dec
jge
scas
mov
cmp
inc
push
add
popf
clc
or
mov
sub
repnz
xchg
notb
shrl
sbb
mov
or
loopne
das
je
mov
fs
jb
sub
mov
faddl
pop
insb
dec
cmp
data16
and
cmp
out
sub
inc
fisttps
cli
cmpb
inc
dec
shlb
imul
push
and
fst
jo
inc
das
inc
mov
movsl
insb
bound
aas
fs
and
insb
outsb
cmpb
xor
mulb
mov
rorb
aaa
dec
in
stos
mov
dec
or
cmp
bound
dec
jae
pop
push
xorb
inc
adc
incb
sarb
inc
dec
js
shll
and
insb
xor
in
std
mov
popf
mov
mov
imul
call
incl
shr
inc
add
adc
nop
inc
mov
imull
sub
adc
fmuls
mov
lods
icebp
fadds
or
lcall
push
pop
mov
pop
mov
jne
xchg
jbe
mov
sahf
jle
scas
ficoml
cmpsl
pop
data16
jne
sub
xchg
push
cmp
fstpt
call
push
dec
xor
inc
lods
loope
ljmp
in
or
in
lock
jmp
out
addl
push
cld
ret
or
lods
dec
pop
rcll
pushf
fistpll
mov
sbb
scas
mov
jle
fisubs
daa
sahf
stc
fs
sahf
xor
sub
arpl
sbb
push
lock
pop
lock
add
pop
test
call
imul
adc
andl
cltd
ror
mov
pop
push
inc
std
test
leave
push
xchg
xchg
je
ja
xchg
inc
test
jb
and
xor
and
cmp
lret
scas
incb
lods
loopne
ficoms
icebp
jb
or
test
cmc
dec
mov
test
test
sub
mov
xchg
sub
aaa
je
stos
xor
push
dec
push
gs
sbb
mov
mov
mov
inc
test
jno
jle
in
mov
pop
and
xchg
pusha
jb
cmp
aad
cld
fmulp
xchg
and
jg
adc
arpl
hlt
sti
mov
mov
mov
pop
stos
push
sub
pshufw
mov
xchg
or
and
bound
shll
sbb
lahf
jo
popf
push
fbld
and
inc
mov
xchg
arpl
mov
jge
mov
sub
inc
sbb
cmpsb
and
sarb
jecxz
test
inc
test
std
pop
xchg
loope
insb
mov
sti
test
fs
cld
fcompl
xchg
dec
sbb
mov
mov
std
xchg
pop
adc
das
jae
ret
xchg
mov
xchg
jl
sbb
in
insl
pop
sbb
outsb
adc
sbb
popf
mov
daa
sub
add
dec
sbb
mov
ds
in
mov
push
mov
adc
mov
xchg
jne
and
std
loopne
mov
xchg
into
jl
dec
out
dec
rcr
hlt
addb
inc
push
aam
mov
imul
js
mov
xor
std
or
outsl
cmp
ss
xchg
dec
test
es
push
pop
fcmovbe
xchg
icebp
std
out
xchg
jne
xchg
push
pushf
mov
int
xchg
roll
stc
adc
jmp
lret
pop
loope
lahf
sub
out
in
fimuls
lea
xchg
push
ljmp
shll
push
pop
or
jno
add
leave
cmpsl
add
mov
mov
cs
mov
and
xchg
push
jbe
push
testb
popf
xlat
addl
fisttpll
sub
mov
push
lcall
ss
into
mov
fcoms
movsb
lock
repz
dec
jae
add
cmpsb
cltd
adc
xchg
mov
mov
ljmp
pop
lods
jae
rorb
pop
ret
incl
aam
push
dec
dec
imul
sti
xchg
jno
jb
mov
lret
mov
cmpsb
mov
jmp
xor
andl
clc
mov
or
pop
mov
cld
cmc
or
lock
clc
in
ss
ret
mov
jg
xchg
mov
lock
jp
ljmp
fldl
pop
dec
mov
pop
pushf
out
push
pop
jle
push
loope
and
or
mov
inc
adc
add
dec
roll
jmp
das
aad
mov
fildl
and
push
cmp
out
data16
and
inc
jo
lret
lcall
andb
inc
aaa
jno
or
adc
jle
and
and
out
icebp
cmp
or
mov
inc
insb
lods
in
dec
outsb
dec
pop
or
xor
aam
out
ficomps
insl
lcall
jmp
pop
push
cmp
cmpsb
xor
gs
popf
dec
xchg
cmc
popa
fsub
stc
dec
mov
mov
movl
sub
or
shrl
dec
movsb
sbb
push
or
xchg
jg
pusha
mov
scas
mov
push
mov
fucomp
in
dec
xchg
je
pop
mov
orb
mov
and
pushl
pop
inc
mov
sbbb
jp
icebp
js
xchg
rcll
mov
mov
lahf
roll
inc
xor
push
ds
mov
aad
adc
pop
mov
je
add
or
add
and
aad
sti
aaa
adc
incl
and
xchg
ret
jns
jae
stc
or
frstor
mov
add
hlt
es
popa
xor
jp
push
and
fdivrs
pop
call
nop
andb
dec
adc
push
fbstp
pop
sbb
aad
push
imul
das
ret
mov
and
dec
pop
pop
addl
andl
clc
xchg
sbbb
mov
jne
in
jb
imul
shl
pop
aad
icebp
shr
xor
ds
mov
lods
daa
loope
dec
enter
mov
push
lret
cmc
xlat
into
pop
jne
popa
std
sarl
popf
loop
xlat
xlat
aad
cli
and
stc
enter
jo
inc
sahf
mov
imul
ret
test
in
stos
inc
ficomps
popa
adc
jae
scas
sub
repnz
push
push
mov
notb
mov
push
and
push
jg
insl
cli
push
sbb
sub
or
push
jmp
dec
ret
aam
inc
inc
aam
xor
push
in
out
xor
lock
sbb
adc
jns
in
hlt
cld
pushl
dec
repnz
dec
inc
or
and
pop
jo
and
pop
jg
int
cmpsl
clc
repnz
adc
push
xchg
loope
or
insb
sub
add
mov
fidivs
pop
cmpb
movsl
cmpsb
jno
xor
sub
imul
cmp
movsl
imul
add
xor
cmp
mov
xchg
xor
jne
aad
inc
lds
mov
lods
leave
mov
push
leave
fcmovne
push
xchg
sub
jmp
pop
ljmp
push
or
mov
xchg
mov
es
xchg
push
bound
lret
and
cmp
lcall
pop
and
or
sbb
jnp
clc
test
loopne
xchg
andb
jo
test
rorb
daa
je
stos
aas
pop
cmp
lret
dec
decl
sbb
out
cltd
call
xor
ret
out
xor
js
js
jo
sub
outsb
pop
sbb
pop
pop
inc
movsl
mov
loopne
scas
testb
xchg
inc
icebp
push
in
stos
pop
sbb
inc
sti
or
icebp
mov
loopne
aad
lods
int
repnz
lcall
and
and
enter
inc
leave
pop
push
cltd
xor
jle
cmpsb
call
fbld
addb
pop
push
sub
imul
mov
jecxz
or
scas
cmp
inc
xchg
cmp
cmp
in
pop
mov
adc
rcr
mov
push
sarl
das
and
and
xchg
jp
divb
and
ja
or
jnp
into
mov
aam
push
loop
out
mov
ret
pop
cs
ret
stos
mov
mulb
fcoms
add
data16
pop
mov
cld
lret
nop
mov
inc
jae
scas
xchg
ljmp
ret
dec
or
fisttps
ja
push
lcall
jle
sub
jbe
cmp
and
inc
adc
push
shr
cltd
je
mov
adc
inc
or
mov
mov
or
dec
push
scas
in
andl
out
dec
cs
xchg
rorl
pop
imul
push
xor
cmp
int
and
jge
xlat
mov
aaa
or
or
jne
divl
mov
enter
sub
and
add
or
sub
ds
sub
cli
sub
jnp
mov
pop
mov
pusha
dec
out
imul
clc
mov
cltd
add
repz
pop
adcl
loop
idivb
insb
add
out
pop
lock
cmc
pop
inc
aam
lds
sub
mov
loop
add
mov
pop
jecxz
popf
add
inc
and
fs
xor
adc
dec
lock
xor
mov
cld
sbbl
mov
mov
cmpsl
push
cld
ljmp
out
push
mov
repz
sbb
dec
add
test
aam
or
add
data16
ret
bound
lds
jo
pop
push
fwait
jns
mov
sbb
dec
pop
pop
add
out
icebp
jp
push
push
scas
divb
add
sbb
cli
xor
cmpsl
or
movb
push
lods
shrb
inc
push
lcall
mov
rorb
sbb
test
ficompl
into
leave
idiv
xchg
sub
dec
imul
test
nop
push
adc
in
push
ror
sbb
fisubrs
aaa
add
fdivrl
pop
loop
sbb
and
cmp
scas
repz
loope
and
or
int3
jecxz
push
aad
cltd
sbbb
or
mov
enter
xor
sbb
aad
idivb
stos
inc
lods
mov
cmpsl
in
sbb
sbb
movl
popa
out
or
cmp
and
sub
pop
pusha
lret
mov
insb
cs
xchg
pop
xor
sbb
inc
sub
mov
imul
pop
inc
sub
add
adc
push
mov
push
addb
cmc
je
fadds
add
pop
adc
fstpl
push
addb
mov
lds
je
gs
sub
les
in
push
pop
cld
fiadds
add
add
sti
lds
xor
cmp
mov
add
outsl
and
pop
jle
shrl
in
iret
dec
js
daa
std
sbb
jo
and
inc
ret
leave
sarb
jbe
add
adc
out
pop
push
leave
adc
clc
in
lahf
sbb
lods
or
shll
sar
push
out
xchg
and
imul
or
and
popa
out
test
xor
inc
adc
mov
or
mov
fidivs
sub
push
iret
setg
aaa
inc
idivl
inc
mov
sar
mov
cld
aaa
ret
adc
clc
xor
in
hlt
lret
mov
cs
push
push
or
sub
mov
jle
dec
sahf
rorl
jg
das
cmp
outsb
push
jl
pop
dec
notl
lods
inc
cmp
cmp
jns
cmpsb
cs
addb
arpl
arpl
push
push
xchg
lods
adc
dec
add
mov
inc
popf
scas
jg
testb
push
cltd
lcall
mov
leave
inc
aam
push
mov
dec
loopne
dec
sbb
orb
jge
int3
sub
lcall
sub
test
add
inc
fwait
mov
and
lcall
mov
inc
pop
push
mov
shr
repz
push
sahf
xrelease
mov
mov
cmp
and
lods
jae
cmp
inc
cwtl
shll
and
inc
add
shrl
out
dec
in
bound
inc
outsb
lret
jmp
cmp
lea
imul
xchg
push
mov
rorl
lock
add
leave
mov
lock
shlb
mov
adc
mov
xchg
and
sbb
mov
fs
pop
loope
inc
sbbl
mov
adc
adc
mov
dec
mov
jecxz
lds
lock
push
mov
test
fldl
clc
lods
xor
push
cs
lret
out
frstor
and
ss
xchg
in
add
cltd
lods
mov
inc
push
or
mov
dec
scas
mov
push
ficomps
rcrb
sbb
xchg
push
jne
jne
icebp
xchg
inc
lret
addr16
mov
sbb
adc
std
adc
fucompp
mov
adc
and
push
fisttpll
sub
dec
xchg
mov
adcb
mov
push
jns
jecxz
imul
sub
push
or
stos
jge
addr16
das
pusha
cld
xchg
dec
jbe
pushf
pushf
cwtl
or
sub
and
pusha
xchg
jne
movsb
rcll
push
jb
xchg
adc
idivl
mov
movsb
lods
stc
arpl
popa
mov
mov
xchg
stc
insl
movsb
xchg
jno
outsb
cmp
jp
mov
cmp
imul
cmpsb
xchg
add
fld
push
mov
dec
inc
add
into
jge
enter
add
fcoms
jle
adc
xchg
incl
dec
hlt
dec
adc
adc
jae
outsl
xchg
mov
sub
pop
push
or
cmp
xchg
jno
xchg
push
ret
inc
out
enter
mov
adc
xorl
cmp
sbb
movb
stc
adc
or
jns
data16
xchg
adc
cmp
ret
and
adc
jne
sti
lock
scas
add
pop
mov
lea
fs
orl
mov
add
pop
out
cltd
insl
jns
adc
cmc
scas
ljmp
xor
insl
xchg
scas
mov
stc
cmp
imull
insl
aaa
push
mov
movsl
jns
loope
and
dec
mov
popa
pop
add
es
lds
aam
pop
jl
mov
pop
dec
xchg
rcl
adc
add
leave
lea
mov
lods
aas
outsl
fiadds
xchg
and
in
cmp
sbb
add
pop
add
mov
xchg
arpl
mov
test
cmp
popa
lret
mov
aaa
inc
fs
cmp
sub
mov
sar
lea
dec
lahf
js
loope
sbb
cmc
push
scas
push
jmp
shll
incl
imul
pop
jle
xor
mov
mov
imul
nop
mov
jae
xor
es
aad
mov
inc
js
sti
cld
jmp
outsb
pop
and
xor
push
scas
pop
ret
aaa
jle
xor
ljmp
or
jbe
cld
add
add
arpl
scas
ljmp
sbb
lods
xchg
pusha
repnz
mov
pop
outsb
das
cs
mov
adc
mov
enter
test
lock
stos
jp
and
or
jae
xor
push
and
xchg
inc
xor
adc
js,pn
mov
inc
and
adc
mov
push
test
inc
xchg
fs
and
out
cs
adc
repnz
repz
fldt
stc
mov
mov
push
sbb
outsb
xchg
cmp
lods
nop
test
pop
stos
in
adc
add
pop
pushf
out
and
mov
xor
bound
fsubs
pop
shl
pop
out
xor
or
outsb
bound
xor
inc
sbb
cltd
je
into
jb
stos
scas
ret
jecxz
dec
icebp
mov
dec
and
add
adc
or
repnz
imul
pop
loopne
fisttps
push
int3
sub
and
testb
jb
fsubs
mov
decl
fsts
mov
repnz
cmp
insb
lods
jne
aas
mov
dec
sbbl
cmp
sub
data16
xchg
lret
std
inc
mov
adc
fmuls
nop
xchg
push
or
inc
jecxz
test
popl
sbb
sub
dec
out
mov
xor
dec
hlt
nop
bound
lods
cli
in
and
out
sub
sbb
fdivr
lret
cld
ds
movsl
aas
sub
addr16
stos
mov
or
pop
push
outsl
call
iret
orb
in
lock
leave
sbb
pop
or
lock
sbb
clc
testl
mov
mov
dec
mov
cmp
dec
adc
clc
add
les
push
std
negb
cmc
mov
sarb
sbb
int
sarb
idivl
or
xor
in
sub
shl
aas
sub
sbb
mov
xchg
jns
jno
mov
jmp
mov
mov
mov
mov
cld
inc
test
fwait
sbb
sbb
push
pop
rcrb
mov
pop
pop
adc
push
xchg
inc
xor
mov
push
push
nop
addr16
mov
xchg
jb
add
fs
sbb
in
leave
pop
or
addl
lret
dec
daa
xchg
jg
xadd
push
push
lahf
add
sub
pusha
out
call
movb
popf
sbb
inc
je
das
loop
xor
cmp
inc
nop
call
cld
jle
xor
stos
mov
sub
dec
and
sub
sub
rcrb
es
jae
inc
daa
dec
xchg
in
jns
dec
xor
mov
outsb
sub
out
int
int3
bnd
adcl
mov
fmul
mov
jns
xor
push
aas
test
leave
inc
lds
and
mov
mov
ja
cwtl
adc
push
jo
xchg
mov
sub
jle
xor
xchg
push
and
and
mov
mov
adc
mov
xor
jp
je
and
test
test
dec
mov
xchg
jae
mov
mov
outsb
fidivrl
fsts
lret
jecxz
insl
xor
pop
or
pop
cltd
cmpsl
ja
sti
ja
outsl
jecxz
stos
xlat
movsl
xchg
jmp
xor
cmp
subb
push
ret
je
mov
int3
ficompl
add
sub
pop
push
push
insl
lea
sub
push
dec
push
cwtl
jmp
rorl
loope
xchg
xor
ret
pop
lods
in
push
pop
pop
cmp
out
push
test
dec
xorl
gs
push
xchg
enter
aam
and
push
inc
and
stos
xor
daa
cmp
pop
pop
fprem1
sub
jl
fwait
in
mov
pusha
das
cmpsb
mov
test
sbb
div
mov
sub
test
sub
cwtl
push
iret
ficompl
or
sbb
sub
mov
in
shll
jbe
sub
aas
icebp
jb
xor
cmp
out
mov
pop
cmpsl
sahf
lcall
sbb
mov
inc
aas
mov
call
aad
pop
outsl
add
int
jle
or
lods
ret
or
leave
pop
sbb
fdivl
test
inc
loopne
dec
jge
loop
or
shrb
or
or
jmp
cmp
and
or
rol
addr16
mov
push
sbb
bound
sbb
addb
xor
outsb
push
scas
outsb
jge
sbb
adc
xor
fistl
push
sub
pusha
int
rol
imul
rcr
pop
cltd
mov
pusha
sub
mov
jns
mov
repz
add
shrl
shlb
sbb
clc
lcall
out
pusha
jl
add
repz
cmp
add
fisttpl
leave
xor
adc
cmp
dec
mov
cmp
adc
aad
scas
scas
fisubrl
cmpsl
stc
std
and
inc
roll
mov
into
and
xchg
aaa
cmp
jbe
add
dec
push
cmc
cmp
and
inc
lds
loope
lret
insl
push
mov
mov
aas
xchg
cli
xor
lret
out
mov
insl
jge
dec
mov
inc
push
pusha
or
mov
push
mov
ss
adc
lret
lods
sar
jmp
aaa
in
dec
push
cmpsl
xor
mov
pop
iret
add
jbe
add
cmp
xor
cld
xchg
imul
jns
test
adc
cmp
dec
iret
roll
negl
in
int3
mov
add
es
cld
mov
mov
push
push
and
jmp
enter
dec
daa
or
sub
cmp
dec
mov
push
outsl
jbe
dec
fldl
push
and
adc
xor
pushf
ja
in
test
les
sbb
sbb
push
inc
clc
loope
jle
cmp
add
and
scas
adc
push
mov
int3
sbb
dec
add
push
ljmp
mov
pop
push
pop
add
shlb
push
mov
cld
clc
xchg
js
fst
jge
push
into
je
jp
inc
jb
pop
loop
xchg
jae
xchg
shl
fisttps
icebp
outsb
xor
fcompl
pop
lret
cmp
or
adcb
pusha
and
jo
cmc
mov
lock
out
adc
leave
arpl
lods
je
sub
mov
outsb
shlb
add
cwtl
xor
cld
outsb
jno
mov
out
js
xchg
ret
shlb
call
das
cwtl
add
dec
testb
in
mov
push
scas
cltd
sbb
add
jb
mov
mov
and
xchg
xor
std
test
cwtl
inc
subl
pop
inc
push
mov
aas
sub
xchg
in
cmp
shlb
dec
jl
add
cmc
cwtl
test
int
xchg
push
clc
sahf
ds
xchg
ss
hlt
decl
scas
jmp
aaa
arpl
xor
xchg
mov
inc
sub
hlt
hlt
dec
scas
pop
sbb
dec
pop
scas
jns
js
cmp
clc
pusha
push
pop
in
js,pt
pop
jo
adc
pushf
inc
test
fwait
into
aam
xchg
rcrb
pop
xor
sub
jmp
inc
arpl
inc
arpl
mov
in
lods
in
inc
cmc
outsl
add
div
or
inc
ja
fsqrt
push
push
xlat
fsubs
push
xchg
mov
lock
pop
mov
cmpl
rcrl
fwait
int3
dec
loop
outsl
shlb
addb
test
test
dec
mov
iret
ss
xchg
xor
xor
mov
dec
std
rorl
add
std
inc
push
lds
mov
es
xor
stc
pop
repnz
cmp
xchg
xchg
ret
mov
mov
out
push
leave
popf
rorb
fcomip
scas
shr
aaa
cltd
xlat
repz
xchg
jo
daa
mov
addr16
cmp
stos
pop
dec
add
loop
sbb
mov
xchg
xchg
sub
cmp
or
jp
bound
mov
std
pop
stc
test
fisttpl
xchg
xchg
imul
mov
jmp
iret
mov
fnstsw
adc
sub
mov
xchg
and
pop
pop
test
mov
icebp
sbb
pop
sahf
mov
pushf
xor
xor
outsl
mov
mov
andl
sbb
jnp
ss
adc
inc
add
sbb
idivl
sbb
xchg
dec
lret
mov
insb
cmc
xchg
stos
std
and
or
jle
or
add
imul
xchg
mov
jge
jle
mov
pop
dec
mov
dec
jp
jl
stos
rorl
lret
or
cmp
lock
fdivl
ljmp
clc
mov
mov
inc
int
sar
mov
scas
enter
les
cmp
imul
lahf
in
cltd
outsb
cmp
or
mov
push
into
icebp
or
clc
fistpll
mov
inc
inc
ja
inc
mov
leave
xor
mov
es
push
sub
adc
es
cmp
pushf
mov
ds
xchg
mov
ror
dec
or
div
mov
shr
mov
jno
inc
inc
xor
ret
jge
add
loop
add
dec
call
or
push
inc
dec
movsl
sti
add
ss
sbb
out
into
int
jle
ret
clc
vdivps
xchg
and
mov
mov
int
mov
sub
pop
lods
jle
cmc
sub
jmp
ret
pushf
cmc
insl
inc
outsl
xor
or
out
jp
pop
stos
pop
mov
stos
pop
pop
mov
mov
mov
fcomps
mov
inc
inc
shll
shll
mov
adc
xor
or
xor
mov
jnp
cmp
fstpt
iret
jb
ja
and
sbb
lods
inc
fmul
push
scas
hlt
xchg
ss
sub
push
je
lret
sbb
push
roll
popa
popf
xor
cmpsl
sahf
mov
icebp
rorl
std
out
jmp
adc
loop
sbb
mov
mov
or
cli
sbb
aam
mov
fidivrl
lods
test
lcall
sub
popa
ret
lock
dec
and
ss
in
mov
scas
inc
jl
lret
rorl
stos
or
jg
leave
addl
fstps
cmp
push
push
filds
fldenv
ja
cmp
dec
and
inc
in
fldl
adc
jne
mov
div
es
fs
negl
xchg
jno
popf
lods
arpl
push
sub
lcall
cmpsb
insl
adc
or
aas
add
daa
add
lea
out
lock
imul
mov
ret
mov
push
adc
jge
mov
sbb
mov
ss
jge
pop
dec
xor
sbb
xor
ja
pop
add
out
pop
neg
adcb
sarl
int3
in
push
mov
push
mov
loope
jbe
dec
rcll
jb
fdivrl
push
iret
mov
adc
addb
dec
in
lea
or
icebp
aas
lcall
hlt
add
lret
sub
xchg
sub
mov
pop
add
adc
mov
sbb
enter
enter
mov
push
sbb
fisubrs
loope
mov
or
xor
push
sub
loope
into
xchg
sbb
out
and
out
ret
popa
lds
dec
dec
xor
adc
pop
fcompl
pop
rolb
push
adc
inc
notl
dec
pop
addb
int3
fisttpl
cmp
mov
popa
adc
imull
popa
movsl
mov
xchg
ja
aaa
imul
xchg
xchg
inc
add
scas
ret
mov
cld
pop
jae
cmpsb
inc
sbb
cmp
push
xchg
outsl
cmc
nop
cmp
out
mov
icebp
mov
call
cmpsl
fdivs
lcall
dec
cmp
xor
xchg
push
ds
mov
imul
aad
mov
outsb
divl
add
daa
ljmp
cmpsb
pusha
imul
mov
cmp
jb
mov
mov
add
inc
push
fidivrl
or
popf
out
lahf
cli
nop
fcoms
jns
sbbl
cmpxchg
or
sub
xchg
leave
mov
loopne
and
movsb
xor
loope
and
add
aad
js
ljmp
ret
dec
in
rcrb
int3
in
mov
test
push
fadds
lock
out
jne
test
inc
hlt
fildl
adc
clc
ljmp
insl
cltd
jne
xchg
pop
loope
popf
mov
cltd
xchg
dec
in
repz
insl
nop
xchg
decl
mov
leave
pop
mov
push
in
sbb
ficomps
jne
das
jbe
in
pop
loop
hlt
bound
sarl
mov
test
xor
push
sub
call
mov
dec
imul
mov
cwtl
cmp
rcrl
add
test
cld
scas
cmp
jl
cmp
and
pop
test
dec
ret
jecxz
mov
inc
dec
inc
mov
leave
sbb
in
sub
adc
mov
cmpsl
lret
jnp
mov
shll
xchg
xchg
cmp
and
sti
pop
push
jp
mov
sub
pushf
sti
outsl
xor
dec
call
sbb
cld
ret
test
shlb
add
push
mov
mov
aad
cmp
mov
inc
mov
fs
mov
sub
sbb
out
push
mov
scas
es
and
aad
jae
mov
addb
push
pop
mov
nop
and
outsl
std
ss
jae
inc
adc
or
lret
add
push
mov
xor
into
int3
cmp
sbb
scas
in
call
out
pop
push
push
aaa
les
jb
lret
sbb
or
int
xlat
lods
lcall
xchg
out
pop
jl
int
int3
loope
sub
nop
pushf
add
popa
pop
xor
or
jno
mov
add
repz
daa
jno
imul
decb
mov
push
enter
addl
xchg
push
cmp
xor
roll
or
cmp
out
mov
scas
and
lret
sbb
xchg
fisubrs
sbb
test
sub
je
daa
out
cmp
pusha
mov
daa
imul
test
xor
dec
movb
xlat
or
mov
push
mov
adc
fisubrl
xchg
and
adcb
mov
inc
js
movsb
dec
jns
push
dec
sarb
push
or
movsb
pushf
adc
inc
sub
dec
jmp
out
movsl
cmc
movsb
xchg
fildll
xchg
push
push
jmp
stos
mov
and
add
sti
mov
mov
inc
ljmp
mov
cmp
test
lcall
test
aas
xchg
mov
mov
fs
out
push
and
cmpsl
add
je
in
arpl
xor
fbstp
aad
mov
push
inc
mov
add
xchg
xorb
fiadds
daa
addr16
mov
addb
in
mov
pop
and
mov
lcall
les
dec
shr
or
and
fcom
cmp
or
mov
in
jecxz
or
sub
xlat
xchg
or
cmp
mov
imul
scas
inc
and
leave
dec
mov
shrl
pop
pop
dec
adc
pop
movsbl
popf
int
mov
mov
shll
add
push
or
mov
add
ljmp
xchg
dec
lods
sbbl
dec
hlt
ret
lret
test
jmp
sbb
aas
push
addr16
push
mov
sti
in
ljmp
adc
mov
stc
movsb
pop
movsl
fsubl
jg
es
into
out
adc
out
mov
sub
lahf
inc
shrb
test
aad
std
loopne
nop
enter
inc
imul
cmp
xor
fsubp
push
call
and
add
mov
lahf
add
sbb
push
sbb
testb
int3
xchg
push
cmp
pop
adcb
les
adc
outsl
jno
push
xor
or
fcomi
add
inc
mov
xor
push
pop
lods
push
mov
lahf
xor
sti
xchg
sti
jae
stc
sahf
mov
push
inc
jmp
xchg
mov
lret
cwtl
add
leave
sbb
imul
xchg
add
icebp
push
add
stc
or
lods
enter
lahf
negl
dec
js
pop
cs
imul
cmp
pop
test
in
pop
cmp
lret
cltd
cmp
enter
sbb
das
lret
add
arpl
out
cwtl
arpl
popf
add
in
fcompl
xchg
jnp,pn
lods
cmp
aad
in
or
sbb
jno
sar
ret
sbb
dec
adc
in
addb
jecxz
je
notl
add
ss
adc
inc
lret
inc
and
push
lahf
mov
jne
je
add
push
dec
mov
lcall
pop
popa
pop
jne
mov
mov
dec
jge
fisttpll
xchg
jbe
ffree
xchg
data16
mov
pop
add
aaa
mov
mov
xchg
sub
in
int3
dec
adc
inc
jnp
jg
subl
stos
shll
mov
cli
cmpsl
hlt
push
dec
fs
ret
jbe
imul
mov
mov
lret
mov
xor
mov
sbb
mov
lret
lret
gs
dec
andl
lock
insl
dec
xchg
jle
repz
add
into
outsl
push
call
adc
out
je
mov
mov
nop
pop
pushf
jne
mov
ja
mov
repz
subl
dec
cwtl
adc
hlt
inc
dec
gs
inc
ds
movsb
roll
mov
xchg
popf
pusha
pand
xlat
jb
mov
rorb
push
cmpsl
aaa
push
pop
dec
lock
js
inc
mov
and
sti
sbb
aas
in
cwtl
iret
jns
push
xor
sbbb
test
enter
cmp
mov
out
push
fs
dec
mov
rcrl
sbb
sbb
or
push
push
and
stc
jg
std
xchg
mov
shl
pop
push
xlat
je
sbb
mov
div
adc
cmpsb
cmp
out
iret
mov
xor
iret
push
xchg
loope
xchg
jbe
mulb
xor
mov
mov
hlt
fisttpll
clc
jle
loopne
mov
adc
imul
in
and
shrb
xchg
cltd
pop
jne
les
out
push
cmc
sbb
pop
push
ret
lock
jle
ja
or
outsl
push
xchg
pop
mov
adc
mov
jno
lcall
popa
out
rcll
clc
jno
decl
hlt
mulb
fmul
imul
call
cwtl
lahf
nop
xchg
xchg
push
leave
mov
fidivs
adc
sbb
cmp
stc
sbb
stos
mov
xor
ror
cltd
jge
pop
std
out
fstpl
push
stos
cmp
int3
ficomps
xor
inc
aad
cmpsl
xchg
mov
leave
jecxz
mov
js
in
dec
jmp
scas
mov
cmc
in
mov
push
cld
sub
lods
xchg
inc
dec
push
pop
mov
and
in
std
inc
dec
popf
adc
scas
iret
js
inc
sbb
jno
lods
xor
push
push
out
stc
scas
jle
mov
push
pop
popf
popf
mull
pushl
dec
cmp
rclb
scas
mov
js
dec
mov
addb
mov
cmp
movsb
fisubl
push
call
sarb
push
lods
enter
push
inc
decb
inc
jmp
jle
fnsetpm(287
stc
jmp
dec
jle
jmp
xchg
mov
cmp
fdivrl
push
fidivs
sbb
inc
mov
dec
iret
cli
and
or
adc
test
cmpsl
mov
cmp
xor
or
or
insb
sub
pop
int
sbb
movsb
popa
popa
cmpsl
fistps
xor
adc
in
jecxz
push
pop
mov
push
push
sbb
mov
sbb
ja
ss
cmp
cmp
mov
daa
mov
push
add
push
xor
out
xchg
pop
inc
ja
xor
mov
seta
jmp
cmp
mov
adcl
pop
popa
push
adc
ja
es
mov
movsl
xor
dec
pop
mov
sub
or
jne
jb
push
daa
inc
mov
jno
pop
pop
cli
xchg
in
clc
outsb
rcr
decb
and
push
pop
leave
xor
jbe
mov
mov
pop
mov
mov
lret
add
inc
call
inc
xchg
imul
fld
scas
xor
dec
ficoms
sbb
pop
out
push
and
pusha
jnp
push
stos
repnz
leave
jmp
test
cmc
aad
push
xchg
xchg
adc
sbbl
cmp
ds
js
xchg
pop
cmp
pop
sub
into
dec
and
lahf
stos
and
and
push
mov
stos
in
mov
loop
cltd
xor
mov
sbb
sbb
xchg
sbbb
mov
mov
imull
fmull
in
mov
cld
in
out
dec
add
in
outsb
sti
push
aas
pop
test
das
xor
sbb
jmp
rcrb
sub
test
mov
jae
insb
ds
inc
js
inc
repz
mov
lcall
subl
inc
xchg
or
xor
sbb
aad
jno
icebp
mov
push
cmp
mov
popa
and
mov
pop
pop
out
fsubr
in
inc
sub
sub
or
dec
xchg
lods
mov
cli
aas
adc
stos
mov
test
dec
pushf
mov
shrl
jnp
lret
cmp
jle
mov
gs
and
cmpsl
and
divl
clc
jne
movq
mov
pop
jg
adc
xchg
jno
adc
shr
shrl
mov
ss
stos
xlat
in
cmp
lret
enter
leave
push
mov
or
in
xor
and
mov
xor
mov
jo
ja
xor
adc
mov
test
addr16
inc
sub
inc
mov
add
mov
sbb
sbb
jae
lret
js
notl
adc
pop
imul
repnz
into
sarl
push
jns
push
movsl
daa
idiv
inc
daa
jl
sarb
sbb
sub
pop
xor
iret
dec
push
xorb
lret
lock
adc
pop
stos
sbb
mov
cmpsb
dec
aad
shr
int
lock
shr
mov
sahf
out
out
push
test
lods
dec
and
jne
imul
icebp
jae
lret
dec
cs
dec
jnp
enter
cmpsb
push
outsl
dec
add
stc
sbb
push
dec
adc
repz
add
ret
mov
clc
repnz
leave
outsl
dec
mov
jno
data16
insb
fisubrs
and
mov
push
out
mov
movsb
cwtl
fwait
dec
popa
mulb
jecxz
mov
jp
imul
stc
mov
subb
nop
in
pushf
xchg
jl
inc
pop
pushf
mov
outsb
sub
and
cmp
jecxz
loopne
xor
add
stos
push
jl
push
pop
ror
dec
addr16
js
js
xlat
aaa
mov
xchg
leave
jle
cs
int
stos
and
cmp
inc
mov
test
out
jae
dec
lock
add
lea
movsb
add
lock
ljmp
sub
clc
adc
add
pop
xor
jp
mov
push
sbb
xor
xchg
cld
das
fistps
gs
addr16
push
bound
aas
mov
out
dec
push
adc
jmp
xchg
fnstsw
sarl
enter
jmp
sub
ds
cld
sub
movsl
rol
mov
arpl
lds
mov
sbb
lahf
or
hlt
fcomps
xchg
popf
cmp
outsl
in
push
push
jg
addr16
lahf
test
dec
mov
popa
enter
jnp
inc
mov
ds
cmp
pusha
std
ds
je
ja
loopne
insl
add
repz
push
lods
mov
imul
push
clc
insl
jmp
push
or
pop
stos
cmpsb
sbb
cli
mov
and
and
subps
jbe
and
cld
pop
dec
add
mov
int
inc
cmp
in
scas
or
dec
xlat
push
mov
fs
stos
and
pop
fdivrl
jns
jmp
cmp
push
into
gs
ror
shll
iret
pop
gs
sti
mov
mov
jl
ficomps
mov
or
or
inc
xor
lret
ret
pop
arpl
push
aas
and
pop
push
ljmp
sub
pop
sub
pop
aad
int
les
jp
into
and
jmp
sbb
rcrb
ds
test
cmp
cltd
xor
lds
xor
push
addr16
mov
ljmp
mov
or
push
fs
call
shlb
mov
xor
notb
lds
movsb
xor
test
pop
mov
ss
cmc
ljmp
jae
ljmp
add
arpl
jne
sbb
loop
jb
aam
jecxz
jnp
stos
lock
gs
sbb
xchg
jo
popf
ja,pn
out
or
cli
aaa
dec
fisttpl
cmp
ret
aad
inc
jmp
test
bound
push
cwtl
adc
dec
mov
lea
mov
testl
push
mov
fdivrl
cld
aam
inc
dec
js
mov
push
or
adc
fmuls
out
sbb
inc
and
mov
and
mov
adcb
adc
lcall
mov
sti
xor
mov
div
mov
mov
adc
shrd
inc
outsl
and
cmp
add
and
mov
popa
jmp
jle
andb
into
and
push
pusha
cmp
sbbb
cltd
lcall
and
lcall
cli
mov
into
aam
popa
cmp
das
stc
enter
fxch
mov
xchg
mov
imul
rorl
pop
add
jbe
cmpb
push
jo
jno
adcb
dec
insl
dec
movsb
sub
adc
repz
or
inc
xchg
movsb
push
fnstenv
jns
nop
inc
divl
shrl
xchg
out
xchg
fstpt
mov
cltd
pop
out
xchg
jnp
cld
xchg
push
jg
loop
sub
in
sub
scas
dec
lret
daa
int3
inc
xchg
mov
jae
or
in
cmp
xchg
pop
mov
in
push
jecxz
or
imul
mov
inc
push
jbe
outsb
cmp
xor
jo
dec
mov
sbb
xor
xchg
cwtl
ljmp
rolb
pop
xor
mov
repnz
xchg
arpl
lret
jg
pop
pop
and
pop
insl
ss
jl
cli
lahf
dec
mov
jbe
std
mov
or
lret
lods
pop
jb
aam
push
leave
mov
mov
inc
repnz
pop
imul
mov
or
cs
jno
xor
fstpt
jo
sbb
pop
sti
jmp
xor
xor
mov
sbbb
leave
xchg
mov
sub
pop
paddusw
dec
arpl
ss
sbb
add
cmpb
cmp
mov
pop
or
cmp
scas
cli
ffree
jecxz
dec
adc
insl
or
mov
and
lcall
shl
add
mov
clc
lcall
cli
in
mov
call
pusha
mov
outsb
jl
stos
push
rcll
lods
dec
daa
addl
in
iret
pop
fs
test
lds
cli
sub
insl
stos
adc
rolb
jp
inc
int3
cmp
or
out
int
jge
xchg
aad
and
idiv
hlt
or
cmp
jnp
test
push
push
aad
stos
dec
dec
inc
dec
push
cmc
mov
stos
imul
jo
rcll
fdivrs
add
jl
fsubl
fidivl
add
mov
ds
sbb
pushl
cmpsl
test
add
lea
sbb
xor
cmpsl
ljmp
in
cli
cmpsb
adc
add
arpl
cmp
sbb
xchg
shrb
cltd
dec
lock
out
ljmp
dec
sub
test
pop
inc
and
jne
inc
add
pushf
inc
add
xchg
dec
and
dec
cmp
xchg
adc
mov
xor
lret
jecxz
mov
dec
and
inc
push
dec
dec
sub
and
fld
leave
into
mov
cmp
push
add
or
mov
push
jp,pt
arpl
imul
das
add
mull
fimull
sub
adc
add
icebp
repz
fistl
or
inc
xorl
xor
push
clc
outsb
sub
pop
movl
popa
int3
test
js
aad
movsl
repz
outsb
push
test
pop
clc
ret
lahf
push
mov
sti
or
or
xor
aam
bound
repz
adc
aas
jbe
jg
sar
xor
adc
imul
or
sbb
sbb
scas
cmp
sti
js
iret
push
push
mov
testb
out
xor
jb
bound
mov
pop
adc
ret
lret
xchg
pop
inc
mov
xor
cmp
mov
jp
xchg
add
test
aas
stc
push
mov
out
loope
ffree
cmpsl
cmp
sub
int
cli
inc
addb
pushl
mov
jo
adcb
inc
mov
ss
and
in
jns
int3
shrl
jo
les
arpl
xchg
jmp
pushf
out
stos
and
mov
fistl
push
add
mov
std
shrb
in
xor
jbe
adc
nop
pop
cmp
js
repz
mov
jno
cld
xor
pop
dec
out
sbb
addr16
aaa
jno
jl
dec
rolb
movsb
pop
add
mov
mov
adc
jge
xchg
or
jne
push
bound
shlb
ds
aas
ss
out
jns
sti
loope
stos
int3
or
mov
push
fmull
in
fxtract
xor
inc
fwait
mov
je
lock
mov
ljmp
xchg
inc
push
or
bound
mov
bound
cltd
jo
mov
mov
mov
jmp
pop
testl
mov
rcrl
out
mov
xchg
sbb
lock
fisttpl
repz
fdivrl
mov
cli
sub
mov
inc
call
push
mov
pop
cmp
cld
les
jp
pusha
push
mov
push
add
dec
hlt
jo
fiaddl
lods
lret
outsb
data16
js
cmpsb
fisttps
out
add
mov
sub
mov
in
lods
inc
pop
jns
fs
push
in
add
and
shlb
push
xchg
pop
les
jle
ret
inc
push
aad
fwait
sahf
pop
stos
adc
rcl
fs
cltd
incl
lcall
mov
inc
lods
loope
mov
mov
mov
xor
jno
or
mov
and
in
mov
ret
mov
jge
mov
dec
cmp
iret
cmp
cli
jl
repz
jns
std
xchg
push
movaps
cmp
inc
outsb
push
les
int3
rcr
jmp
push
int3
xchg
or
pop
and
push
and
push
ret
cmpl
out
xchg
fdivs
inc
pushl
cmp
inc
dec
je
out
cmp
cmpsl
adc
and
xchg
lret
push
add
and
jb
cmpsb
and
jnp
imul
sti
mov
mov
scas
jb
xchg
addr16
mov
les
xor
out
add
push
mov
dec
ljmp
addb
pop
scas
mov
out
hlt
xchg
scas
xor
icebp
mov
and
xchg
ljmp
repz
aam
xchg
and
push
mov
mov
jne
outsl
fiadds
push
adc
xchg
cmp
test
mov
addr16
iret
inc
pop
and
push
cs
jl
lods
orl
push
and
or
lea
pop
jbe
int
inc
inc
adc
push
shlb
mov
insb
or
lock
sbb
cmpsl
hlt
insl
arpl
enter
cltd
push
std
lods
sti
mov
push
loop
popl
negl
test
jmp
pop
sub
call
xor
mov
scas
xchg
test
vmovmskps
adc
addb
and
mov
push
repnz
sub
mov
xchg
xchg
outsb
pop
mov
dec
imul
cltd
not
push
inc
and
mov
fdivl
mov
sahf
sbb
adc
xor
jecxz
adc
in
pop
imul
mov
push
pop
cmp
dec
sub
ret
imul
or
add
dec
mov
imul
mov
dec
inc
mov
std
mov
or
orb
in
ret
push
in
or
fnsave
ffreep
push
mov
movl
dec
mov
pop
aad
ss
aaa
enter
nop
xor
mov
imul
test
int3
push
push
fs
cmp
sub
insb
aas
inc
scas
dec
leave
push
mov
pop
out
in
adcl
mov
mov
into
cld
xlat
inc
mov
adc
fnstcw
ja
sub
adc
mov
mov
or
jge,pn
or
pop
mov
push
test
sbb
call
inc
mov
orl
xor
call
push
ss
pop
mul
push
ss
and
ret
adc
push
scas
sbbb
or
or
out
lahf
js
or
inc
xchg
cli
sbb
rcrb
fsubrs
nop
sub
lcall
pusha
pop
movsl
inc
addr16
jle
les
bound
movsb
xchg
cltd
or
and
out
jg
mov
popfw
push
fldenv
mov
adc
loope
jecxz
add
jge
mov
repnz
data16
jl
pusha
std
inc
aad
xchg
push
sar
push
lahf
fistpll
push
mov
mov
in
nop
dec
fimull
repz
stos
inc
out
test
lahf
mov
mov
out
inc
jp
mov
pop
insl
pop
jmp
push
movsl
jns
add
cmp
mov
jecxz
push
fwait
mov
xchg
mov
inc
mov
jne
test
ss
fldl2t
je
insl
sub
cli
idiv
lds
jge
add
fwait
imul
rclb
aad
pop
mov
popf
xor
push
sarl
aaa
bswap
and
xchg
daa
sarl
aaa
daa
add
pop
mov
push
xor
or
dec
mov
jbe
sbb
xor
nop
outsb
pop
sbb
push
mov
inc
std
imul
cli
fsts
jmp
and
sub
xor
mov
push
cmp
aad
add
pop
test
out
call
out
aas
pop
lcall
push
andl
daa
lods
or
push
stos
mov
dec
dec
sahf
int
push
cmpb
xchg
lock
sarl
daa
cld
inc
mov
lahf
and
push
icebp
fstps
add
nop
jne
mulb
adc
mov
push
cltd
scas
aam
xchg
ja
or
inc
mov
ret
fists
enter
xchg
fisttpl
in
stos
push
int
stos
add
push
ss
lret
push
scas
push
repnz
aad
add
test
xchg
pop
daa
lea
mov
sahf
and
mov
push
cmpsb
inc
ds
mov
out
sub
xor
xchg
adc
imul
mov
fisttpl
cmp
incb
dec
shrb
ljmp
mov
es
insb
fimull
sbb
pop
or
push
sbb
dec
xchg
and
loopne
add
push
mov
outsl
xchg
add
pusha
inc
mov
mov
dec
les
mov
pop
sbb
loop
mov
pop
sti
mov
test
and
fnstenv
adc
outsb
cli
jge
scas
inc
sbb
scas
fdivs
aas
mov
mov
lcall
mov
push
add
rcr
sbb
adc
cmp
outsl
subb
mov
mov
stos
lahf
outsb
sbb
into
and
enter
and
mov
jle
pop
ljmp
fdivs
jmp
dec
pop
ss
fs
sbb
pop
sub
mov
mov
jae
mov
dec
push
jp
xchg
mov
loop
femms
and
jl
jbe
adc
push
aaa
ds
mov
in
and
enter
inc
mov
cmp
adc
mov
es
xor
and
xor
sbb
cmpsl
lock
insl
pop
pop
loopne
adc
sahf
cmp
xchg
js
out
jp
pop
push
and
mov
rclb
call
jg
pushl
hlt
mov
in
in
shrd
sbb
cmp
pop
shrb
aas
mov
outsl
xor
aad
stc
add
pop
jp
jns
push
out
push
scas
cs
jp
addr16
jg
pusha
xor
dec
inc
mov
shlb
cmp
adc
lret
popf
movsl
cmp
std
in
mov
pop
push
in
aaa
sub
dec
inc
sbb
jle
mov
jg
divb
jg
loop
jge
or
fucomip
fs
orl
jp
sbb
xchg
or
inc
adc
cltd
sbb
sarb
pusha
cmp
call
aad
jp
or
xchg
pushf
dec
pop
cmp
lret
mov
xchg
mov
mov
mov
push
jae
mov
rorl
pop
dec
in
jle
sub
rorl
stos
or
xor
and
mov
push
dec
sbb
push
mov
dec
adc
add
enter
cltd
pop
negb
push
loop
pop
lods
cmp
adc
xor
xchg
mov
fdivs
inc
push
ljmp
xchg
cli
jge
ja
aas
loope
outsl
shlb
add
aas
push
icebp
adc
mov
mov
cld
cmp
out
dec
xchg
inc
fcmovnu
nop
shlb
or
inc
roll
std
imul
jns
leave
sub
je
cmpsl
jae
push
in
adc
mov
add
adc
mov
ja
das
outsl
sub
and
dec
jp
into
push
xor
jecxz
mov
inc
ja
adc
repz
push
add
movsb
sbb
lret
lock
fwait
mov
mov
jb
sub
stos
in
mov
push
jmp
aas
cmp
cmp
sahf
enter
mov
lock
cmp
add
cs
mov
pop
sahf
adc
and
imul
sbb
sbbb
arpl
jae
outsl
rcr
push
sbb
mov
or
and
xor
mov
cmpsb
jp
fiaddl
fnsave
and
adc
push
mov
sbb
popf
out
test
mov
jp
out
cmp
mov
push
outsl
lret
cmp
cli
bound
adc
xchg
lahf
cmp
mov
push
add
adc
enter
mov
icebp
or
shlb
aas
lcall
sub
sbb
int
xchg
and
int3
jae
nop
xchg
pop
ss
adc
jb
xchg
xor
enter
fs
nop
loopne
int
sti
inc
out
shlb
mov
jbe
mov
nop
into
out
repz
jnp
jne
xor
das
scas
loope
add
sub
in
sbb
in
out
lahf
sbb
fs
lcall
fldcw
push
imul
sub
lds
or
xor
pusha
jo
pop
in
adc
fwait
mov
test
sub
test
repnz
popf
push
stc
cmp
jg
fwait
repz
mov
and
pop
les
daa
fcoms
lcall
xabort
pusha
iret
por
push
dec
mov
loopne
jb
mov
mov
in
insb
mov
jmp
mov
and
jne
les
sbb
xchg
cwtl
sub
popf
fistpl
mov
fisubrl
xor
not
pusha
pop
add
add
lds
or
push
push
inc
mov
jns
cmp
test
mov
pop
es
stc
cmp
or
cmc
idiv
add
add
mov
cmp
sbb
test
pusha
cmpsb
push
movsl
and
pusha
jge
ja
dec
sbb
cmpsb
push
cmp
and
add
xor
cmp
loope
imul
repz
xchg
adc
cmp
movsl
scas
or
mov
mov
mov
sub
sub
pop
inc
xor
mov
inc
xchg
and
inc
ret
jb
int
mov
or
mov
iret
cltd
mov
jno
fwait
adc
stc
push
and
xchg
jne
int3
cli
dec
jl
dec
jl
jp
loop
mov
pop
loop
pop
jbe
roll
push
mov
inc
mov
out
push
dec
push
xor
cwtl
nop
xchg
inc
mov
mov
jecxz
out
mov
int
orb
add
popa
or
inc
adc
lds
gs
xor
jmp
push
cltd
loop
call
dec
xchg
add
pop
sahf
jl
es
and
cmpsb
sub
push
jbe
aas
add
xor
sbb
lahf
sbb
aas
mov
or
sti
cmp
adcb
add
mov
dec
sarl
cmp
mov
flds
outsl
and
sbb
sbb
xor
test
fs
dec
or
call
loop
xchg
int3
out
sub
jnp
jmp
movsl
xchg
hlt
repnz
sbb
sarb
jle
test
subb
fwait
imul
dec
cmp
adc
jbe
xchg
pusha
xor
xchg
mov
inc
inc
ret
inc
test
mov
mov
shlb
aaa
hlt
les
das
jno
pop
pop
movsb
sti
fsub
xchg
std
call
clc
mov
mov
jb
or
lcall
call
out
addr16
ljmp
mov
dec
lcall
repnz
xor
out
xchg
push
xchg
or
bnd
or
mov
xor
jns
cmc
daa
sbb
dec
cmp
mov
or
dec
mov
jge
mov
sub
mov
shrb
pushf
sbb
sbb
pop
rcll
fdivrl
gs
mov
cmp
mov
jl
pop
sbb
repnz
jge
loop
or
mov
and
pop
or
insb
jp
sti
fstl
lock
inc
xorb
aad
data16
dec
or
ss
mov
jp
jp
mov
lods
cmp
orb
pop
js
jmp
out
mov
add
adc
xor
sbb
ljmp
jb
jns
dec
jle
jecxz
sub
fwait
cmpsl
ss
add
insb
bound
jne,pn
loopne
mov
int3
popf
xchg
arpl
push
shlb
sub
bound
xchg
fadds
jno
lock
dec
cmp
dec
cs
movsl
pop
add
push
sbb
sbb
dec
adc
sbb
xchg
sbb
inc
mov
ja
adcb
mov
or
push
and
jmp
fldenv
dec
stos
xor
pusha
mov
lods
mov
das
and
pop
arpl
inc
mov
out
jbe
repz
lock
and
loopne
scas
mov
dec
mov
movsl
clc
xor
iret
jne
scas
clc
test
test
out
int3
ficoms
and
imul
lea
movsb
scas
sbb
out
adc
nop
loopne
enter
push
mov
and
jle
jl
cs
jnp
mov
pop
adc
add
fcompl
mov
add
sbb
xchg
add
repz
xchg
xchg
outsb
ljmp
jnp
mov
push
out
sbb
daa
dec
js
repz
cmp
sub
push
out
pop
mov
fstps
lods
cmp
cld
jo
loopne
push
ror
jb
jnp
leave
xor
sbb
jne
stos
mov
mov
hlt
loopne
jp
inc
inc
pop
dec
repnz
jmp
pop
inc
andb
popa
subl
sbb
aas
push
pop
jo,pt
sbb
fcoms
and
out
sub
popa
cld
pop
rcl
sahf
or
pop
dec
repz
pop
xchg
call
jl
push
xor
jns
dec
xchg
jle
shrl
and
rcrb
and
lea
shll
pop
xlat
mov
in
mov
push
shll
adc
into
inc
jo
dec
push
shll
dec
in
sbb
int3
and
testl
mov
in
jle
neg
stc
inc
add
push
adc
jbe
push
inc
arpl
push
pop
fisttpll
insb
xor
cmp
mov
cmp
andl
stc
cmp
hlt
in
lods
mov
jae
shlb
xor
clc
dec
popa
lret
push
inc
in
mov
test
fcmovu
into
out
dec
mov
das
repz
shr
sub
cmp
addr16
push
sub
movsl
add
mov
call
jnp
test
nop
push
movsl
push
or
push
pop
and
arpl
mov
repz
cmovb
sbb
xchg
mov
je
lods
mov
pop
mov
ss
dec
cmp
insb
repnz
xchg
dec
dec
mov
ret
push
loopne
out
push
cld
cmp
lahf
mov
test
pop
fstpl
xchg
stos
dec
orl
ret
data16
stos
cmp
jo
es
mov
sub
sahf
fnstsw
dec
ret
mov
sbb
push
add
sub
push
outsb
lret
add
repnz
movsl
push
out
leave
adc
cmpsl
sbb
pop
jb
js
mov
ret
and
jmp
sub
insb
sbb
dec
mov
clc
cmc
fidivl
pop
loope
fwait
dec
xor
enter
lods
sub
outsl
mov
pop
lcall
push
imul
neg
mov
jp
in
push
mov
xchg
loopne
ret
inc
mov
push
clc
or
sub
movsb
mov
fimuls
xchg
enter
inc
orl
jge
inc
scas
push
popf
std
mov
inc
xchg
push
sbb
insb
aas
push
mov
shl
pop
rolb
sbb
cltd
hlt
dec
sbb
iret
sub
push
mov
or
and
and
popa
fbstp
mov
jmp
test
daa
shl
cld
sahf
and
mov
dec
inc
sub
dec
jg
inc
cltd
clc
xchg
cld
sbb
jo
add
les
sub
fnsave
shlb
pusha
cmpsl
dec
jmp
push
jnp
test
sahf
xchg
out
xchg
seta
shlb
lods
test
mov
inc
pop
jl
adc
jns
dec
jbe
outsb
popf
mov
adc
mov
out
fbld
repz
xchg
xchg
in
ja
xchg
hlt
imul
jle
jne
cmp
add
mov
push
lods
push
sub
mov
aam
sub
pop
scas
xchg
push
inc
mov
test
jae
std
aam
and
mov
inc
sbb
in
aam
mov
cmp
icebp
jp
nop
cli
jo
jle
in
mov
and
jge
pop
xor
or
jmp
pop
mov
imul
sub
inc
int3
push
sub
cld
aaa
cmp
jg
clc
mov
into
jae
stos
in
jno
pop
rorb
out
add
out
cltd
lret
out
jnp
inc
test
cmp
xor
xchg
div
ljmp
lret
pop
lods
xchg
lret
sti
out
sub
lahf
cmpl
add
cmp
test
mov
daa
push
inc
and
xchg
cmp
cmp
call
xchg
cmp
jecxz
push
add
xchg
adc
shlb
js
lods
test
sbbl
sub
push
iret
lock
xor
inc
in
int3
int3
pusha
push
pusha
cmpsb
das
mov
pop
adc
fnstcw
mov
nop
std
leave
bound
cmp
xor
sub
xchg
iret
mov
cmp
div
jnp
imulb
inc
fs
mov
push
jo
mulb
shl
popf
inc
pop
cli
sbb
stos
incb
test
sub
cmp
push
push
cmpsb
ds
inc
fs
jmp
test
adc
imul
lahf
rolb
loope
addb
addr16
or
loop
push
push
jo
mov
push
inc
cs
mov
inc
jg
jmp
xor
inc
dec
fsts
add
out
jnp
aas
mov
insb
sbb
inc
dec
jns
and
push
sub
push
or
stos
xchg
sarl
sbb
adc
cmp
rclb
insb
cmp
pop
dec
iret
cli
adc
scas
push
jns
mov
sbbb
dec
jl
ret
sti
dec
cltd
daa
mov
cltd
test
inc
mov
lahf
test
mov
out
outsl
jmp
cmp
push
bnd
lcall
out
jne,pn
jmp
stos
add
or
push
push
jmp
in
in
xchg
xchg
ljmp
repz
arpl
pop
cmp
sub
test
movb
daa
inc
pop
mov
mov
mov
mov
or
and
cmc
pop
add
jp
sbb
and
xor
push
add
mov
add
push
push
leave
add
sub
mov
pushf
sbb
stos
stc
out
pop
push
dec
push
mov
jp
ja
lods
pop
jno
sti
mov
sub
or
and
test
cmpsl
popl
leave
or
out
in
sbb
cmp
clc
outsb
mov
in
inc
mov
inc
mov
push
subl
xchg
cmp
push
mov
lods
gs
xchg
jo
mov
jg
cmp
outsb
mov
out
popf
sub
out
out
adc
mov
stc
dec
pop
push
mov
loop
into
jecxz
or
jns
jecxz
insb
loope
popa
mov
fistl
mov
ret
mov
or
int3
cmp
push
or
aas
sub
pop
mov
dec
add
pop
mov
cmpsb
repz
push
lahf
lcall
jg
int
in
xor
cmp
inc
push
add
fisubrs
xchg
jge
fcom
fmull
xor
dec
pop
sbb
pop
loopne
frndint
inc
adcl
decb
push
das
jne
outsb
push
test
hlt
sbb
push
test
sub
dec
cmc
mov
ret
xchg
jge
dec
cwtl
or
incl
pop
movsl
pushf
cmpsl
cmp
mov
ljmp
movsb
mov
aam
in
dec
jo
idivl
in
push
ficompl
push
daa
inc
out
sti
push
adc
inc
fnstcw
lds
cmp
inc
scas
mull
daa
xchg
ret
sub
in
data16
cmpsl
stos
xor
xchg
aad
nop
jg
or
shlb
ret
pop
push
inc
mov
xchg
icebp
dec
loope
push
sbb
mov
push
stos
pop
shll
mov
inc
aad
dec
xor
lahf
iret
push
mov
fildl
mov
add
in
insb
push
or
push
cmp
push
adc
call
dec
fcmovnb
lods
add
scas
js
lea
imul
pop
les
mov
sbb
in
cmpb
pop
push
fisttpl
sub
dec
sbb
xor
aad
cld
jns
sbb
out
sbb
out
mov
subb
sub
pop
mov
push
pusha
and
filds
and
test
sbb
add
jecxz
push
sti
mov
push
test
fs
push
ds
aad
shll
and
loopne
or
aaa
lret
mov
sub
aam
cmp
in
and
and
dec
movsb
dec
xchg
out
cwtl
cmp
imul
xlat
push
xchg
xlat
orl
sbb
sub
jp
push
mov
push
mov
mov
mov
daa
mov
lods
adc
out
push
pop
test
in
jge
ror
out
xchg
adc
xor
xlat
push
lods
and
lret
lcall
mov
insl
movsl
adc
outsl
pop
mov
sti
pop
sbb
outsl
jge
mov
scas
loop
xchg
pop
int
fimull
push
sbb
adcb
in
sbb
and
xchg
out
sahf
adc
pop
ficomps
mov
jmp
test
or
mov
in
fcomi
push
sbb
cmpsl
and
in
std
test
xor
inc
out
dec
mov
push
cld
sbb
or
sbb
sahf
cli
lahf
pop
ret
pop
mov
and
xor
lret
and
mov
fimull
enter
mov
adc
ficoms
mov
fst
and
int
adc
lds
pusha
and
lods
pop
sub
dec
cwtl
add
movsb
sub
and
dec
add
inc
inc
fmull
pop
into
in
push
lret
xchg
popf
in
inc
cltd
adc
cmp
mov
push
mov
addr16
andl
fmuls
cmc
hlt
call
mov
lret
fwait
sbb
lea
xchg
inc
icebp
cli
addr16
aaa
inc
dec
jnp
sahf
test
jle
scas
add
sti
add
in
mov
loope
push
movb
xchg
pop
push
nop
pop
test
aam
adc
pop
lea
call
je
xchg
jp
mov
ss
mov
bnd
cli
pop
xorl
sbb
mov
mov
ficoms
jnp
int3
data16
adc
lret
enter
das
cmp
lret
mov
scas
mov
popa
xor
das
push
add
dec
mov
mov
int3
addr16
leave
jb
int3
pop
adc
jl
push
pop
sbb
shll
push
push
fstps
cmp
cli
pop
or
and
and
imul
mov
mov
mov
sbb
mov
cmp
cmp
es
mov
aam
cmp
xor
mov
aam
mov
cmp
cmp
jmp
jmp
push
lret
clc
loope
adc
pop
rcrb
dec
rclb
jb
sarl
pop
or
data16
aas
std
mov
mov
jno,pt
fsubp
scas
outsl
sbb
subb
adc
push
xor
jecxz
aam
popa
in
xor
andb
adc
mov
imul
jne
addr16
push
gs
jmp
mov
or
in
pop
pop
inc
mov
sbb
mov
leave
jnp
rcll
stc
sub
xchg
add
sub
jp
stc
jno
test
sar
inc
push
scas
adc
push
mov
pop
popf
add
ja
rclb
shl
cmp
add
sbb
scas
aas
inc
lcall
push
push
pushf
aad
aad
enter
fwait
inc
daa
imul
enter
adc
mov
outsb
les
pop
sub
repnz
inc
dec
mov
mov
mov
in
shr
mov
dec
lcall
pop
mov
stos
stos
movsb
adc
xchg
fistps
sti
test
mov
les
mov
lea
dec
push
dec
insl
icebp
inc
in
roll
mov
loopne
cs
sti
mov
sbb
push
mov
mov
negb
jecxz
sub
push
iret
and
adc
mov
in
jecxz
popa
cmp
fwait
mov
jmp
jns
iret
into
adc
int
mov
es
xchg
xchg
push
add
pop
dec
adc
aas
aas
add
jb
dec
mov
cmc
std
or
add
popl
inc
add
adc
push
and
fadd
adc
in
fidivrs
push
into
scas
push
rclb
push
ret
mov
jmp
mov
mov
repz
movsl
add
lock
js
ljmp
in
insl
sarl
mov
psadbw
test
repz
cld
into
gs
cmpsb
mov
sub
test
cwtl
and
stos
and
mov
inc
xor
pop
fsubrl
or
push
and
ret
xchg
faddl
adc
stos
lea
pushf
jmp
mov
divl
lea
push
xor
dec
sbb
shl
dec
push
ret
je
pushf
push
jle
adc
or
ficomps
cmp
repz
popf
lods
jb
add
inc
mov
jg
leave
repnz
je
sub
mov
jmp
xor
call
adc
push
es
jb
mov
fdivrp
fsubs
roll
in
popa
sahf
add
fwait
stos
test
in
mov
pop
push
int3
insb
ja
outsb
mov
sub
lcall
push
adc
jg
jae
mov
add
andb
out
jl
sbb
jp
dec
icebp
fistpl
mov
enter
push
inc
push
inc
xchg
push
mov
hlt
fistps
sbbb
sbb
xor
push
into
or
in
xor
push
xor
inc
sbb
aam
adc
rorb
sub
mov
movsl
xor
rcr
or
test
mov
scas
jbe
jmp
xchg
popf
rorl
jmp
out
testl
and
test
add
pop
xchg
sub
aad
adc
mov
rclb
cmp
sarb
aam
ljmp
push
fdivrs
ljmp
test
push
sbb
das
xchg
push
or
jmp
dec
pop
insb
push
sub
push
testl
and
mov
dec
not
rcll
sub
in
jbe
pop
lret
movsl
rolb
loop
cmp
pop
jns
test
xor
sub
cmc
ficomps
mov
jl
jb
add
jp
dec
xchg
xor
mov
hlt
or
sbb
jg
das
mov
push
push
and
das
lds
pop
cmpsb
pop
inc
sub
shr
ss
lock
and
rorl
jae
sti
push
mov
jnp
mov
dec
add
pusha
mull
repz
pop
inc
les
push
add
icebp
or
lds
mov
call
push
dec
repz
push
inc
ljmp
dec
pop
pop
aas
fsubr
movsl
jno
test
outsb
loope
out
sbb
mov
push
out
lcall
sbb
loope
or
lahf
xchg
push
jecxz
dec
sbb
insl
jae
ja
sub
imul
shrl
xchg
pop
lods
add
lret
pop
sahf
int
out
nop
out
lods
cmpb
inc
nop
push
das
mov
mov
call
mov
push
outsb
rclb
mov
fwait
mov
pop
jg
add
dec
std
jne
loopne
sbb
movb
inc
adc
sbb
mov
add
out
fnstsw
dec
into
sub
enter
jo
xchg
ss
add
xchg
out
or
jle
push
into
mov
xchg
xchg
xor
sbb
stos
and
cmp
xlat
or
push
xor
jb
jl
adc
shr
push
mov
fucomp
mov
fdivr
ret
sti
add
enter
dec
fnstcw
jns
mov
std
pop
imul
mov
mov
dec
mov
xchg
scas
push
shl
ljmp
int3
cli
xlat
xchg
dec
scas
pushf
sbb
inc
pop
dec
icebp
mov
cmpsb
test
in
pop
xor
testl
mov
and
outsb
dec
arpl
cmp
pop
decl
mov
jo
sbb
scas
jp
xor
imul
pop
pop
imul
inc
out
mov
mov
xor
out
mov
ljmp
mov
xchg
out
jbe
adc
or
jmp
jle
aaa
or
sahf
mov
aaa
jb
adc
js
pop
sub
repz
cmpsb
fstpl
subb
xchg
jp
jne
jecxz
pop
pop
lds
lods
leave
mov
mov
xlat
fs
test
das
aaa
jns
fwait
adc
aas
repz
lret
bound
inc
fbld
mov
mov
repnz
dec
cld
ret
ret
and
movsb
mov
jmp
mov
imul
xor
sbb
push
test
movsb
in
fdivrs
cwtl
pop
int3
pop
xor
aaa
cmp
pop
push
push
subl
out
lds
pop
int
mov
sub
stos
ror
cmp
aaa
and
xor
xorb
icebp
push
in
lahf
cmpl
jo
xchg
sub
aaa
xchg
pop
pop
aas
cmp
aad
sahf
test
xor
outsb
inc
sbb
in
pop
orb
clc
mov
sbb
push
jmp
push
int3
and
ljmp
mov
add
leave
repnz
pop
or
fldt
sub
arpl
jp
repz
cli
jo
inc
aad
cmpsl
push
pop
inc
pop
and
add
pop
cmpsb
mov
push
mov
mull
cli
insl
xor
jbe
rorb
and
imull
sti
dec
jl
mov
fwait
pop
mov
fcmovnb
pop
out
jecxz
scas
lret
mov
pop
inc
or
rcrl
out
jns
jno
inc
ret
bound
pop
add
sub
into
cld
mov
mov
cmp
push
scas
sub
fisttpll
cmp
push
mov
outsl
mov
pop
dec
iret
mov
sub
and
cmpsb
ljmp
or
mov
xor
sahf
into
jl
pushf
loope
push
mov
nop
push
and
loope
lock
push
and
xlat
popa
les
pop
lea
pop
mov
cmp
inc
cld
push
repnz
xor
dec
sub
ret
pop
in
add
pop
into
and
fdivrl
popa
les
inc
xchg
out
adc
ret
add
jne
pop
mov
mov
push
mov
inc
mov
xchg
cmp
push
mov
lods
or
dec
xchg
int
sub
outsl
inc
pushf
and
loopne
add
mov
push
out
ss
push
fwait
decl
cmp
push
je
ret
cmpsl
flds
jg
repz
jns
imul
ret
sbb
cmp
xchg
sub
cmp
cmpsl
nop
sbb
push
jne
call
xchg
sub
cmp
cli
push
jne
lds
add
scas
dec
and
js
fsts
je
icebp
out
repnz
sub
inc
jnp
stos
xchg
cmpsb
pop
and
out
push
test
out
add
xlat
repz
sti
inc
test
pop
in
cmp
add
hlt
mov
adc
mov
repz
leave
lock
mov
leave
cli
mov
into
sbb
fidivl
sub
mov
xor
cmc
stos
mov
test
xor
jae
aam
push
addr16
sarb
lret
andl
test
clc
mov
mov
outsb
lret
lret
xchg
and
mov
fs
jle
les
dec
adc
or
fwait
inc
sub
repnz
jb
push
mov
popa
inc
xlat
cld
jo
outsl
mov
pop
and
push
sahf
sbb
sbb
jns
jb
sahf
imul
dec
jmp
jle
cwtl
fs
mov
xor
and
aas
inc
jnp
cli
ret
mov
fldl
pop
xor
shl
fmull
push
loopne
movsb
mov
inc
pop
jb
cmc
xor
xchg
fldt
xchg
xchg
jmp
ja
hlt
aaa
pop
sbbb
jge
sbb
adc
sub
imul
decl
mov
or
testb
mov
jp
fwait
add
mov
shll
push
or
mov
or
jo
or
loop
daa
add
stc
sub
inc
mov
jl
xor
pop
das
stc
inc
fistl
mov
les
mov
xchg
and
adc
pushf
stos
mov
and
jno
out
repnz
out
xor
xor
out
inc
repz
imul
stos
lcall
jno
xchg
adc
and
jmp
cmp
fs
xlat
fistpll
divl
popa
mov
or
into
imul
mov
dec
pushf
testl
push
jo
popf
pop
in
es
out
add
daa
pmaxsw
dec
aas
inc
dec
jl
inc
jne
incl
add
xchg
ja
mov
test
shrl
cmp
push
xor
push
shl
mov
sub
push
push
mov
pop
jns
inc
push
iret
xlat
cli
dec
cwtl
pusha
pop
ficoml
adc
cwtl
jp
push
out
mov
inc
and
xchg
jo
imul
cmp
pushf
aam
mov
and
jecxz
add
sub
movsb
jecxz
ljmp
mov
xchg
lds
call
call
repz
daa
xor
mov
insb
test
or
std
xor
mov
mov
aas
mov
jae
hlt
xchg
stc
xor
pop
sbb
sub
loopne
mov
or
mov
adc
push
lods
push
add
inc
xchg
enter
mov
jge
mov
test
imul
loop
push
mov
arpl
and
and
shll
inc
jbe
inc
cmp
push
adc
xchg
mov
push
xchg
fldl
loope
add
je
je
clc
or
test
push
int
adc
pop
pusha
cs
add
push
dec
insb
and
cs
push
mov
sbb
nop
jmp
lahf
xchg
cmp
cmp
adc
sub
data16
vhaddpd
xor
xchg
pop
outsb
push
mov
xchg
mov
and
pusha
decb
hlt
outsb
xchg
push
and
outsl
in
data16
shl
emms
jbe
jns
sbb
cmp
out
mov
dec
jbe
dec
cmp
jp
adc
jns
mov
icebp
xchg
loop
dec
outsb
testb
outsb
cwtl
and
sbb
or
js
cmp
sub
cmp
test
sbb
mov
pop
add
or
jecxz
jl
add
mov
or
sysenter
rep
and
fsubl
adc
xchg
mov
cwtl
mov
sub
xchg
or
pop
rcll
inc
daa
aad
xchg
sub
int
setl
dec
mov
lea
add
dec
fcomi
xlat
mov
xor
repnz
inc
or
dec
pop
jl
xor
test
out
or
jge
add
sub
bound
adc
je
jae
pop
ss
adc
dec
push
mov
jns
lcall
push
or
aad
movsl
int
in
mov
and
enter
jb
movsl
push
or
test
mov
mov
jae
int
mov
lods
inc
mov
in
jne
jp
sti
mov
mov
pushf
test
sarb
push
test
inc
rol
addl
enter
pop
cwtl
mov
inc
or
push
call
test
ss
or
fimuls
dec
stos
ljmp
mov
inc
mov
int3
jno
popf
cltd
aaa
test
jg
ret
cwtl
push
pop
and
ret
mov
push
test
bound
sti
adc
sub
rclb
mov
add
sbb
int3
and
subl
xchg
int3
pop
jl
movsl
std
pop
push
cld
shrb
sub
dec
nopl
dec
ds
decl
cmc
sbbl
or
or
sbb
les
mov
adc
and
ret
movsl
imul
dec
test
cmpsb
inc
shrb
mov
sub
out
sbb
jb
and
add
ficompl
loope
pushl
xor
push
stc
rcrl
daa
dec
addr16
mov
hlt
orb
cmp
and
scas
pop
xor
jae
test
lret
push
and
out
inc
enter
dec
add
imul
xchg
pop
xchg
cmp
jae
shll
lods
mov
es
leave
xlat
pushf
jns
or
xchg
sub
mov
popf
cltd
jl
pop
in
insl
or
mov
ror
push
addb
jbe
ret
cmp
loopne
test
pop
or
adc
sbb
pop
adc
pop
rolb
pop
adc
dec
shrb
fwait
stos
shrl
mov
into
cmpsb
lahf
clc
inc
jmp
insl
icebp
mov
adc
bound
adc
jge
negb
push
rcl
sbb
test
push
scas
push
jo
sbb
push
icebp
icebp
push
jbe
jmp
out
or
jecxz
js
shlb
int3
mov
mov
mov
addr16
dec
shr
sbb
out
mov
lea
cmp
mov
push
inc
lret
add
push
cmp
jecxz
ds
ss
popa
fstps
test
or
les
and
pop
cli
ss
sti
js
jne
and
ret
sub
mov
push
sbb
sub
mov
popf
mov
test
imul
jmp
add
dec
xchg
or
pop
add
xchg
cmp
or
mov
aam
xor
mov
cwtl
mov
inc
mov
loopne
faddl
pop
fs
xchg
sarl
fcmovu
aaa
js
dec
mov
mov
xor
push
insl
fstl
pop
jmp
and
jmp
daa
xchg
outsl
mov
cwtl
in
pop
mull
jg
mov
pop
and
mov
xor
fs
mov
lcall
jno
sahf
sub
arpl
cmp
fsubs
ljmp
xchg
mov
es
sti
rolb
call
sub
dec
sbb
sub
mov
dec
out
xor
jns
in
arpl
mov
mov
lock
jmp
xlat
insb
xchg
mov
sbb
test
popf
and
and
inc
loope
test
lds
sub
cmc
jmp
adc
insl
je
mov
enter
sbb
push
lock
sub
rcl
rcr
ret
xchg
mov
or
xchg
sub
movsl
and
sbb
jle
push
push
adc
sub
out
lcall
xor
pusha
xorl
mov
sub
shrb
sbb
loope
or
lods
lods
push
rorl
mov
jmp
inc
rolb
js
inc
aam
xor
jge
out
clc
loope
hlt
lcall
pop
ljmp
sti
push
jmp
sarl
push
jle
scas
int
out
add
lods
ret
int
lret
dec
in
dec
ret
sbb
push
sbb
adc
cltd
leave
mov
out
pop
jo
mov
bnd
or
pushf
sub
repz
lds
lcall
and
jle
mov
xchg
or
xorb
mov
lea
outsb
cld
lret
lret
iret
jmp
and
dec
push
mov
mov
roll
aam
js
mov
popf
lods
jecxz
ja
xor
lret
popa
test
inc
adc
xchg
aaa
xchg
push
lcall
dec
cld
sub
shr
dec
adc
pop
jmp
pop
or
into
and
in
cmp
hlt
cwtl
and
xor
rolb
nop
sub
mov
aas
push
push
add
mov
and
out
pop
rorl
mov
pop
pop
xor
pop
cmp
hlt
and
xor
mov
mov
aad
into
push
push
push
dec
mov
add
loop
dec
rcl
jge
fdivs
add
vmread
idivl
sub
xchg
lods
add
dec
cwtl
dec
add
or
cmp
pop
in
roll
sbb
sti
mov
loopne
cmp
std
lahf
lea
int
sub
inc
or
push
ret
cli
cmpsl
pop
mov
call
mov
and
test
enter
sahf
and
adc
ret
in
outsb
or
or
idivb
pop
cmp
in
rcrb
sub
sbb
adc
push
jl
pop
scas
and
adc
out
jne
xchg
sub
repnz
hlt
ret
imul
frstor
lods
mov
icebp
inc
aas
add
and
into
call
or
ja
sub
out
rcrl
inc
cld
xchg
loop
mov
push
mov
fsubr
adc
popa
enter
add
push
add
add
hlt
inc
dec
xor
iret
icebp
lret
mov
les
jge
and
pop
mov
inc
rcl
push
dec
dec
mov
int3
mov
fdivs
pop
push
cmpsl
idivb
pop
das
mov
test
push
lcall
movsb
aad
dec
incb
jp
xchg
stc
jle
push
jns
int
lea
lahf
ja
cmp
mov
xchg
jo
jns
push
mov
cmpsl
xchg
ljmp
xchg
jbe
bound
repnz
inc
or
jmp
xor
flds
jne
pop
std
int
and
or
mov
push
xor
mov
inc
mov
mov
push
fisttpll
mov
sub
out
sbb
loop
testb
mov
repz
sub
xchg
inc
mov
imul
push
inc
sub
push
adc
dec
pop
mov
in
test
pcmpgtw
mov
ja
dec
push
xchg
cltd
mov
int3
or
arpl
push
divl
sbb
mov
nop
inc
inc
lret
scas
idivb
mov
jmp
push
in
out
xchg
inc
pop
mov
imul
sub
aas
arpl
daa
jb
sub
mov
mov
and
loop
outsb
pop
dec
ror
push
mov
or
call
push
lock
mov
pop
leave
mov
sbb
inc
xor
test
shll
insl
fdivrl
cmp
gs
cmp
adcb
fsubl
pop
pushf
sub
xchg
cmpsb
xchg
sbb
jl
movsl
xor
push
repnz
shlb
inc
or
inc
xchg
cli
loop
sarb
xor
cwtl
mov
or
mov
fcomps
dec
mov
fstl
sahf
roll
sbb
sub
add
cmp
mov
jae
sbb
xchg
inc
les
xchg
les
fmulp
adc
adc
mov
mov
mov
dec
sbb
andb
scas
adcl
dec
push
fs
xor
push
push
jbe
aaa
jno
movsl
xchg
mov
hlt
pop
push
cwtl
inc
inc
andb
pop
mov
pop
inc
dec
xor
pop
dec
sub
scas
pop
insb
cwtl
jo
mov
dec
scas
fs
insb
mov
orl
push
movsb
xchg
pushf
outsb
cmp
in
cmc
fsubr
insb
mov
pop
add
arpl
xchg
jb
sti
movsb
sbb
nop
insb
lock
clc
ffreep
nop
addb
mov
repz
xchg
lds
lock
lds
or
test
lret
in
or
out
push
push
dec
add
mov
lret
popa
ljmp
adc
ret
shlb
fiadds
xchg
inc
rorb
jg
sbb
jge
pop
sub
and
xor
dec
int3
loopne
xchg
leave
outsl
push
fcoml
insb
rolb
call
inc
inc
mov
sti
popf
pop
in
addr16
inc
sahf
adc
loop
push
hlt
in
fisttpl
mov
add
mov
sub
addr16
or
xlat
cli
sub
outsb
mov
lsl
movsl
repnz
aaa
std
xor
adc
and
jl
inc
out
pop
mov
add
dec
inc
sub
sbb
ret
xchg
push
cmp
mov
mov
insb
nop
in
mov
js
mov
xor
adc
mov
popf
mov
aad
imul
scas
ljmp
cwtl
mov
test
sbb
mov
jae
lds
add
sti
aaa
xchg
cmc
jg
push
lahf
leave
icebp
jne
xchg
ds
jp
sti
aam
ret
inc
add
loope
sub
jp
fstps
sbb
add
push
aas
mov
mov
into
push
mov
cld
pop
addr16
dec
lcall
xor
sbb
ficoms
les
sub
movsb
mov
push
push
lods
jo
movsb
and
xchg
inc
iret
insb
nop
inc
xlat
push
jno
mov
jge
push
pusha
mov
pop
push
lahf
push
adc
lods
roll
loope
adc
iret
adcb
out
cmp
mov
xor
inc
cmp
sahf
and
dec
test
jbe
sti
add
cmp
daa
dec
repnz
jle
mov
jnp
cmp
xor
inc
xchg
and
ficoml
ljmp
cli
insl
mov
inc
mov
dec
aad
data16
push
push
xchg
div
jmp
fcmovu
pop
jle
pop
test
push
cmp
fwait
mov
das
xor
cmp
fwait
cli
imul
out
and
push
rcll
scas
xchg
or
insb
in
cmpsl
pop
imul
and
mov
xor
mov
loopne
sub
and
push
jecxz
add
dec
out
rol
mov
pop
lret
movsb
ret
xchg
xlat
call
or
imul
mov
sbbb
pop
mov
in
in
push
xor
adc
ja
add
imul
fs
mov
out
mov
and
cs
sbb
and
and
and
push
test
push
adc
pop
cwtl
imul
mov
rcrb
movl
xchg
and
int
js
sub
dec
popf
and
push
mov
mov
add
inc
in
push
cwtl
cld
gs
cmp
cmp
jp
sahf
jg
cwtl
sub
bsr
or
and
ljmp
sub
cmp
in
out
or
fnsave
inc
xchg
in
push
push
push
mov
imul
cmpsl
stos
adc
jbe
jno
push
test
subl
test
frndint
xchg
inc
and
lret
in
mov
int3
arpl
cli
sbb
push
mov
mov
jge
lods
aas
scas
ret
cs
cltd
sbb
lcall
push
push
out
jne
pushf
pop
mov
jle
sbb
test
jle
in
scas
fbld
icebp
fbstp
fs
loope
ficoml
xchg
cmc
cld
orl
test
decl
stos
fisttpll
enter
push
add
mov
je
scas
fwait
mov
outsb
shl
sarb
jae
jno
stos
pop
daa
jg
ret
mov
add
ret
cs
mov
push
mov
push
mov
loop
sub
stc
jo
jp
or
clc
mov
loopne
test
mov
xchg
mov
pop
push
push
mov
in
inc
push
pop
cmpl
inc
ret
loope
scas
nop
test
adc
aam
adc
dec
dec
test
pop
inc
adc
xchg
dec
xchg
mov
adc
cmp
push
inc
mov
mov
adc
inc
jbe
lcall
sbb
into
cmp
loop
add
stc
pop
xor
jae
in
popf
roll
inc
loop
sbb
push
cmp
xchg
xor
aad
dec
enter
pop
sub
sbb
je
ror
lock
sti
outsb
push
cmpsb
jbe
jge
xor
lds
cmp
cmp
movb
and
mov
cmp
lea
adc
push
inc
jp
testl
std
push
dec
jge
cmc
sbb
shll
add
fbld
xor
mov
rorl
sahf
xchg
xchg
pop
jmp
mov
mov
jno
jge
xchg
stc
ret
imull
ds
mov
mov
stos
push
xchg
mov
out
insb
add
jbe
pop
adc
add
pop
and
xor
enter
mov
pushf
xor
adc
xchg
dec
mov
mov
jae
repz
dec
and
or
inc
and
cmp
aas
or
leave
push
xchg
testb
add
sarl
in
lfs
mov
xchg
adc
lock
add
sbb
imul
cs
int3
movsl
mov
pop
inc
sub
ror
into
push
incl
out
cli
in
insb
sub
inc
xlat
leave
push
jle,pt
adcb
add
mov
lods
jmp
adc
or
loop
inc
jg
sub
xchg
push
out
inc
pop
mov
push
and
out
bound
push
and
pop
pop
ror
test
mov
dec
mov
mov
mov
dec
in
cmpsl
es
mov
fld
lds
stc
mov
mov
mov
fstpl
leave
ljmp
mov
add
sub
push
push
xchg
cmpl
ret
sub
jae
sbb
outsb
push
stos
dec
xchg
shll
movsl
popl
cmpsb
xor
xchg
pop
add
add
les
aad
fs
add
inc
lahf
mov
shrb
in
popa
add
push
call
jo
xor
int
and
fimuls
adc
das
mov
sub
push
dec
ja
mov
lock
pop
push
cmp
xchg
cli
add
and
stc
test
push
outsl
mov
add
mov
xchg
adc
mov
xlat
mov
sahf
stos
xor
xchg
cli
scas
fldt
sub
cmp
lret
sbb
popf
cmp
cmp
test
xor
fists
lcall
push
outsl
cld
sub
push
movsb
movsl
lods
dec
add
xchg
cmc
rcr
imul
in
mov
sbb
fisubrs
leave
sbb
xor
cmpsb
cmp
sbb
xchg
movsl
call
leave
insb
cmp
aad
adc
pop
psllw
fcomps
cmp
pop
hlt
scas
imul
jp
insl
in
movsb
enter
pop
movb
lods
and
lcall
shlb
cmp
jmp
dec
add
imull
xchg
cltd
cmp
out
ret
pop
inc
mov
add
lahf
fcomp
stc
mov
pop
stos
iret
vpshufhw
lret
cmp
inc
xor
arpl
data16
sti
push
and
cmp
cld
mov
in
lret
or
out
push
pop
repnz
clc
mov
outsl
lahf
dec
lret
lret
xchg
cmp
xchg
fs
pop
ss
and
mov
dec
sbb
out
mov
add
push
lea
cmc
mul
leave
mov
or
cmp
xor
stos
cmp
js
or
adc
dec
cmpl
xchg
sarb
out
pop
fsts
add
fwait
mov
out
or
push
cwtl
outsl
andl
pop
fwait
xlat
fcompl
cli
add
sub
xchg
sbb
mov
or
ja
in
jp
inc
sub
daa
push
fwait
ds
pusha
fs
test
sbb
mov
testb
stc
divl
or
int
and
mov
lods
in
popa
stc
fbld
and
mov
aam
ss
sbb
inc
test
sub
test
roll
xchg
addr16
pusha
fstpl
outsl
data16
xchg
jmp
aaa
mov
add
xchg
push
out
xlat
mov
fstpt
rorl
xchg
icebp
lret
xchg
loopne
xchg
mov
or
in
mov
jae
lock
jle
pop
repnz
sub
or
mov
repz
fnstenv
mov
les
cli
mov
dec
cmp
leave
popa
dec
int3
xor
adc
adc
mov
pusha
adc
insb
mov
aad
scas
out
cmpsb
push
icebp
pop
jl
int
popf
xchg
lret
rcrl
fildll
or
sub
inc
jb
mov
jmp
imul
movsb
sar
and
xchg
jno
bnd
pop
or
mov
dec
push
arpl
jp
out
adc
mov
push
add
ficoms
mov
pop
mov
pop
cmpsb
dec
jmp
pop
ljmp
cwtl
loope
jnp
stos
out
cli
sbb
xor
fildll
dec
push
fs
das
inc
add
popf
inc
int3
stos
push
das
cld
and
inc
lret
jp
jge
jne
fsts
out
inc
xchg
shrl
lcall
mov
lret
loopne
jge
pop
nop
mov
fildll
fnstsw
or
or
adc
je
mov
inc
push
lods
xchg
aas
popa
imul
pop
ja
ljmp
test
inc
mov
cmp
add
and
or
sub
mov
jmp
inc
hlt
jp
addb
xor
sub
mov
cmp
sbb
test
frstor
adc
mov
adc
ds
cmpsl
jns
cltd
fldl
dec
jp
fmull
inc
fdivrs
push
sub
test
xor
lods
inc
repz
sar
loope
xor
add
outsb
mov
cwtl
les
lods
scas
or
add
jp
nop
cmp
or
mov
int
mov
inc
sub
inc
dec
add
inc
popf
cmp
add
inc
push
add
dec
aaa
je
mov
lret
mov
mov
fbld
mov
pop
data16
ss
loop
xor
mov
add
ficoms
cmp
xchg
adc
mov
or
xchg
mov
jno
and
aas
push
flds
jmp
or
inc
push
dec
adc
dec
inc
adc
lcall
rcr
mov
idivb
add
nop
mov
nop
lret
mov
sbb
std
insb
jne
sbb
jge
or
mov
lahf
push
lret
call
mov
inc
mov
mov
sbb
adc
out
or
lock
test
idivb
cltd
adc
aad
inc
push
xor
gs
push
je
adc
xor
sub
test
pusha
mov
out
inc
stos
pop
push
cmpsl
dec
xchg
push
sub
push
jmp
sbb
out
outsl
pop
dec
jo
and
out
mov
xchg
sbb
pop
mov
outsb
jp
lret
gs
cmpsb
fcoml
and
ljmp
rcrl
and
lcall
sarl
cli
stc
cld
cld
sbb
cs
xor
mov
sub
push
jmp
jp
mov
aas
ja
xchg
out
xchg
scas
pop
jne
lea
inc
mov
fwait
inc
loope
bound
movb
shl
add
xorl
jbe
int
and
out
jnp
psllq
pop
xchg
cmp
mov
enter
or
out
jge
cli
test
lods
leave
cmp
jl
rcll
cmp
xchg
xchg
adc
adc
push
and
dec
ret
sbb
sub
sbb
fsubrs
hlt
aaa
pushf
insl
pushf
jmp
and
sbb
xchg
dec
mov
xchg
push
andb
or
jle
jns
and
je
cld
sub
stos
test
dec
or
test
pop
push
xchg
adc
sub
add
push
sar
push
int
jae
popf
pop
xchg
std
jns
pop
inc
sbb
leave
int3
repnz
mov
dec
hlt
fidivs
shll
mov
push
xor
push
loope
loop
cmp
or
and
lcall
mov
and
cmp
sub
cmp
mov
add
fwait
inc
adc
aam
sbb
lret
mov
adc
loope
popl
or
mov
cmp
cmp
add
push
call
jo
shlb
mov
cs
xor
insl
or
or
push
mov
scas
adc
and
pop
movsb
imul
call
add
add
inc
mov
or
sbb
adc
daa
insb
sbb
dec
movsb
pop
stc
aam
xchg
movsb
dec
and
xchg
sbb
popa
pop
pop
dec
sti
repnz
or
pop
sbb
mov
mov
push
jl
cli
jb
int
jae
dec
fwait
lret
inc
push
mov
add
ss
mov
sub
test
sbb
push
push
mov
xchg
mov
inc
mov
jmp
inc
insl
jne
popa
mov
pop
mov
addb
dec
mov
or
daa
enter
sub
inc
xor
jnp
insl
cmp
mov
fwait
imul
mov
das
push
sbb
xor
arpl
mov
cmp
movsb
bound
jge
lret
mov
icebp
push
push
es
jne
push
mov
scas
adc
stc
cmpsb
outsb
sbb
outsb
sub
push
cld
enter
xchg
add
data16
sti
xor
rcr
dec
or
cmp
andb
test
jae
mov
push
in
dec
jmp
add
lret
xchg
inc
insl
mov
add
push
pop
cmpsl
test
pop
les
cmp
cs
and
add
push
push
pop
ss
or
pop
mov
pop
xlat
sub
in
push
mov
sahf
jmp
xor
xlat
fstpl
mov
jns
dec
mov
inc
jp
jmp
sbb
enter
pop
dec
loope
add
idivb
sahf
repnz
fwait
scas
or
xor
push
test
pusha
dec
fldcw
push
outsl
sbbb
cltd
arpl
inc
mov
push
pop
xorb
lahf
pop
lcall
xchg
sub
mov
add
in
xchg
jecxz
mov
lock
push
in
inc
stos
lods
push
fidivl
or
sahf
je
fldl
lret
push
lret
sarb
ret
clc
sbb
dec
sub
fwait
jbe
iret
sub
outsb
into
lock
std
sbb
mov
pop
lahf
cs
mov
enter
dec
sub
pop
jecxz
xchg
push
dec
mov
sbb
ds
xchg
lret
adc
lods
xchg
jmp
in
sbb
cmpsb
mov
test
push
xchg
insb
test
hlt
mov
cmp
lret
pop
push
ds
cmc
repnz
push
sub
xchg
in
and
bound
pop
cmpb
push
test
jl
cltd
popa
push
add
mov
out
out
insb
or
popf
mull
mov
or
mov
inc
mov
lret
cmp
add
rol
xor
jns
cli
pop
cltd
outsb
mov
mov
scas
in
xchg
icebp
es
pop
and
test
shl
and
xor
push
xchg
pusha
push
lea
shll
push
push
sbb
std
pop
mov
repz
stos
xchg
and
or
jno
or
mov
stos
xor
aaa
push
js
ret
movsb
ftst
xor
and
test
push
pop
out
push
xor
movsb
in
cmp
movsl
mov
cmp
ds
push
lods
shl
xlat
mov
pop
in
aaa
mov
xchg
mov
jns
xchg
hlt
adc
jne
xor
push
dec
and
aas
test
out
jbe
fadd
cltd
ficompl
mov
leave
xor
adc
cwtl
adc
bnd
mov
mov
push
test
roll
cmp
add
cwtl
jns
pushf
loopne
popf
cmp
ret
mov
shrb
sbbl
lea
jmp
sub
mov
das
sub
pop
sahf
shrl
mov
xor
add
cltd
xchg
sbbl
xchg
cli
mov
jnp
and
hlt
pop
inc
adc
cmp
loop
or
add
pop
fmull
mov
mov
sbb
data16
loopne
rcr
inc
scas
scas
subl
adc
xor
outsl
clc
mov
movsb
cltd
outsb
dec
jg
je
xor
scas
xchg
cli
shl
pop
and
pop
dec
mov
cmp
or
popf
lock
dec
or
add
mov
mov
inc
cmp
fstpt
cli
xor
pop
sub
mov
idiv
pop
insl
and
test
pusha
mov
add
cli
pushf
xor
or
xor
pop
rolb
les
mov
test
test
cwtl
test
jmp
mov
mov
push
mov
mov
mov
sub
sub
lds
js
cmp
ret
mov
std
dec
xor
gs
mov
sbb
add
movsl
divb
fisubrl
pop
cmp
lea
xor
fiadds
sub
mov
xchg
pop
mov
add
iret
add
mov
xchg
out
sub
push
sbb
es
push
lea
jp
insb
mov
movsl
cmp
cmp
daa
push
movsl
push
outsb
sub
iret
sub
jmp
stc
mov
push
cmpb
jmp
rcrl
or
xorb
iret
mov
pusha
sbb
jnp
notb
push
aas
pushf
fsubl
inc
adc
mov
xchg
sub
sub
clc
mov
inc
sub
inc
fstpl
or
int
arpl
in
fstl
rclb
mull
xchg
addr16
cmpsb
loopne
gs
mov
insl
repnz
sub
daa
dec
aad
push
mov
or
movsl
fs
mov
fidivs
jb
and
push
push
orps
mov
in
ret
or
jns
push
arpl
popa
mov
xchg
test
dec
repz
mov
add
ss
cld
cmp
pop
mov
ds
cmp
leave
jmp
rorl
pop
fldlg2
push
jns
sbb
fimull
popf
mov
dec
lahf
jg
mov
mov
pop
push
cld
cmc
add
adc
add
xor
pusha
les
lret
xchg
jnp
xchg
mov
insb
push
adc
jbe
jecxz
fdivrl
xchg
xor
flds
sub
cmp
xchg
out
or
std
add
in
shll
xchg
xchg
cld
push
jge
inc
adc
mov
andl
std
test
push
ss
lcall
or
hlt
shll
adc
mul
mov
aad
or
test
jne
jl
xchg
mov
cmpsb
insb
bts
int3
pop
xchg
jo
mov
testb
fcomps
dec
mov
clc
push
test
pop
xlat
push
mov
cmp
out
inc
jg
movsl
fldcw
cmp
mov
movsb
mov
jb
adc
in
mov
cld
and
adc
mov
les
pop
ljmp
mov
scas
push
and
dec
inc
sub
fisubs
ja
ficoml
int
arpl
xor
hlt
sbb
int
fnstcw
aaa
add
sbb
xlat
sbb
jge
and
les
fwait
pop
sub
cmc
ret
mov
dec
out
lahf
outsb
out
popa
mov
add
out
pop
in
pop
mov
mov
adc
cmp
cmpsl
in
leave
mov
adc
loope
push
and
jae
sarb
pushf
repz
cmpsl
sub
nop
je
xchg
or
es
lret
in
lock
rcr
stc
cmp
mov
push
mov
mov
xchg
add
jmp
ljmp
cld
adc
clc
movsl
jge
pop
arpl
xor
rclb
lcall
adcl
mov
imul
fwait
test
push
fnstcw
and
ds
scas
into
lret
and
cmp
mov
push
lret
int3
cmp
push
ss
rolb
and
imul
rcr
jge
pop
mov
pop
pushf
lret
fdivl
js
xchg
push
repz
outsl
xchg
mov
push
in
dec
adc
mov
sub
jnp
mov
cmpsl
mov
and
cmp
and
mov
sub
cmpsl
adc
cmp
aaa
mov
daa
rcrb
add
inc
pop
fs
fildll
stc
mov
and
pop
imul
paddw
mov
adc
xor
lock
sbb
test
push
out
test
dec
pop
jb
push
stc
add
andb
jg
adc
push
repnz
sbb
sub
shrb
loopne
add
cmp
and
daa
scas
push
pop
pop
fwait
mov
xor
test
orl
lea
ja
cmp
out
or
sbb
mov
cmovge
mov
aad
stc
jne
inc
cmp
xor
adc
or
push
cld
cs
movsb
jae
dec
mov
fcompl
add
aam
jb
addr16
or
js
add
and
mov
mov
or
sbb
loope
movsb
sbb
popf
leave
adc
mov
add
pop
jecxz
movsl
fcoml
pop
idivl
adc
push
xor
adc
pop
add
xchg
stc
fnsave
pop
inc
push
fucomip
lock
pop
ficoms
push
push
jl
push
mov
xor
outsl
sbbl
pop
inc
idivb
jb
xchg
imul
cmp
cmp
pop
and
mov
and
push
sbb
cs
push
out
jo
xchg
and
pop
repnz
xor
int
dec
adc
shll
aas
call
repnz
pop
gs
in
mov
mov
mov
loopne
add
mov
pop
adc
mov
out
imul
and
mov
mov
and
mov
lods
cld
imul
push
mov
xor
or
movsb
loop
mov
inc
inc
and
cmp
aam
popa
jp
mov
mov
mov
insb
pushf
popf
cmc
sub
mov
test
cli
push
push
lret
fadds
add
sbb
cmp
lahf
js
jnp
fbstp
mov
loope
xchg
push
xchg
or
std
xchg
and
daa
leave
sub
popa
add
and
leave
dec
ja
mov
imul
imull
test
fptan
idivl
shrl
addr16
push
fwait
sub
add
scas
mov
aaa
rclb
insl
inc
lret
orl
add
xchg
sub
pop
adc
das
stos
mov
and
mov
scas
dec
and
addr16
or
das
fld
ret
mov
mov
imul
add
ss
out
push
lods
push
outsl
add
aaa
xchg
adc
mov
outsl
pop
sbb
mov
cs
xchg
in
nop
mov
and
pop
ja
mov
int
lea
xor
cmp
inc
mov
mov
dec
imul
sahf
sahf
add
inc
or
je
ficoml
push
das
mov
dec
imul
push
lahf
rorl
mov
hlt
sarl
ds
jne
test
nop
ds
imul
popf
xor
cwtl
inc
push
adc
in
mov
ja
das
xlat
or
pop
pop
cmp
fcomps
jo
lahf
les
stos
rorl
cmp
xchg
push
ret
or
popa
jmp
pop
inc
jle
shrb
fs
in
fs
adc
mov
int
mov
push
or
into
adc
leave
fiadds
dec
aam
mul
xor
adc
mov
cmp
ficoms
nop
push
lahf
add
sub
mov
adc
pop
inc
scas
in
xor
call
movsl
cmp
adc
push
outsb
dec
push
adc
mov
les
mov
or
ja
jo
cld
ja
sbb
neg
les
dec
jns
xor
cmp
test
mov
addr16
fsubs
push
or
adc
dec
push
mov
shlb
adc
add
adc
mov
bound
sub
mulb
in
push
cmpl
xchg
nop
adc
xchg
mov
sbbl
push
pop
sub
pop
mov
mov
lcall
call
and
ficomps
das
pop
add
xchg
mov
ja
sbb
and
jno
and
shrb
jle
xor
mov
pop
sahf
cmp
or
loopne
cli
or
mov
imul
dec
outsl
mull
dec
shl
out
pop
rol
in
sub
mov
add
jle
pop
iret
pop
add
aas
loopne
pop
jae
sbb
pop
jl
hlt
xor
out
jo
pop
out
adc
ljmp
xor
jae
ret
mov
sbb
inc
jg
in
test
fcompl
mov
outsb
mov
adc
jnp
dec
pop
or
mov
push
jbe
es
fdivl
xor
aaa
leave
dec
push
test
jmp
loope
hlt
and
in
xchg
movd
sub
test
repz
lods
push
and
sbb
sbb
lock
jb
adc
aas
mov
mov
jl
mov
mov
mov
loope
push
ja
mov
test
sarb
xor
xor
aas
mov
pop
mov
ljmp
in
ret
subb
shrl
mov
movsb
ljmp
in
inc
xor
std
shlb
pop
hlt
test
lods
out
jae
mov
dec
jno
dec
in
cltd
out
inc
out
add
mov
cltd
lret
mov
fildll
and
test
pop
mov
loopne
je
cwtl
outsb
movsb
ficoml
ss
and
icebp
push
xor
cltd
lds
dec
jmp
les
ja
xchg
and
stc
out
xor
mov
aad
and
loop
add
lahf
fldl
sbb
or
ret
fistps
aad
fwait
push
xor
jmp
push
jno
stos
xor
lret
lahf
ficoms
pop
pop
call
mov
sbb
int
pop
mov
xor
cld
popf
imul
dec
xchg
dec
xchg
dec
inc
and
inc
lods
cmpl
mov
push
fnstenv
arpl
loop
loopne
clc
lret
pushf
sbb
call
jle
test
imul
adc
ficompl
jg
cwtl
loopne
cmpsl
push
push
inc
lods
clc
push
je
adcb
inc
xchg
xor
cltd
pop
pop
cmp
cmp
popfw
jns
adc
sub
mov
xchg
loope
pop
lods
in
inc
or
rorl
mov
sbb
xor
call
jg
mov
aam
cmp
or
xchg
mov
popa
clc
push
mov
mov
jg
icebp
addr16
cmpsb
ja
or
notb
lea
mov
pop
adc
stos
or
rcrl
daa
bnd
std
bnd
mov
cmpsl
pusha
or
cwtl
rolb
stc
je
cmp
sbbb
pop
sub
lods
cmp
adc
pop
mov
xor
sub
sti
lret
out
mov
cmpxchg
aas
mov
cwtl
loop
aam
test
pop
cmp
sarl
push
push
mov
stos
sti
jbe
mov
fwait
jo
cmpsb
addr16
push
dec
xchg
sbb
movsl
lods
and
adc
mov
dec
sub
lret
cs
push
lods
sbb
fcmovnb
dec
daa
mov
ret
sbb
out
fsub
stos
dec
inc
in
xchg
mov
rcr
aas
pop
lahf
xorl
push
ljmp
inc
dec
pcmpeqd
mov
push
push
stc
mov
push
add
shll
notb
int3
fisubl
cmp
push
loope
dec
xor
fsts
inc
mov
sbb
mov
in
cwtl
mov
lea
sub
popf
inc
insb
inc
je
xchg
leave
lcall
push
daa
test
repz
aaa
int3
sub
jle
std
daa
cmp
mov
pushf
and
addr16
push
mov
jns
test
xchg
loop
lods
adc
adc
ss
inc
ds
cmp
lods
mov
hlt
stos
xor
ja
out
mov
mov
mov
fwait
mov
addl
pop
aam
std
mov
push
cs
idivb
mov
inc
inc
sbb
xchg
mov
pusha
loope
fisubrs
jecxz
jns
repz
shrd
add
xchg
imul
xor
scas
cltd
jl
inc
in
stc
and
pop
out
test
movsb
push
jae
lock
adc
add
jno
outsb
jp
add
add
dec
xchg
dec
jno
shlb
cmpsb
inc
rol
psllw
stos
fcoms
je
xlat
cwtl
popf
sub
add
sbbb
enter
jle
inc
insb
imul
and
dec
fistl
movsb
fidivl
insb
jp
pop
inc
ds
test
insb
mov
jmp
nop
inc
imul
aam
js
mov
stc
lods
gs
lea
movsl
push
jae
sti
insl
lret
cwtl
sub
or
dec
dec
push
sahf
mov
push
addl
test
mov
xor
aaa
jle
xlat
cmc
or
leave
dec
sbb
jmp
dec
rcll
pop
sbb
out
sar
mov
mov
cmp
scas
mov
pop
jae
ja
dec
fdivl
jle
dec
mov
jbe
sub
fisubs
iret
ret
mov
loop
jge
and
outsb
mov
sub
ficoml
push
add
xchg
shll
imul
scas
cld
jbe
imul
movsl
ss
sti
lahf
lea
add
faddp
sub
inc
add
hlt
fdivp
lahf
cltd
mov
in
mov
popf
jno
test
push
int3
mov
xchg
xchg
and
bound
push
hlt
adc
roll
js
sub
cmpsl
aam
sbb
or
inc
sbb
aas
ret
divb
or
ss
inc
adc
das
out
push
dec
ret
mov
xor
daa
lahf
lret
lock
ud2
enter
loopne
sbb
cmp
leave
fmull
mov
arpl
mov
outsl
mov
fwait
stc
mov
test
cmp
and
mov
imul
cli
jg
sbb
repz
dec
xor
pop
adc
xor
insl
mov
jle
add
xor
or
sub
aas
or
addr16
adc
int
jecxz
or
and
pop
mov
mov
mov
gs
std
jp
sub
jmp
lea
les
call
sahf
mov
sets
sbb
subb
fsubl
mov
call
fimull
test
mov
and
sub
cmp
out
xor
push
jnp
gs
push
cmp
and
sbb
in
inc
call
js
addr16
mov
dec
cli
and
adc
enter
or
notl
fsubrl
roll
xchg
cmp
mov
adc
test
pusha
jb
cld
mov
sbb
mov
sub
or
test
iret
mov
sub
je
cmp
cltd
cmp
loop
ret
jp
inc
out
jo
xor
cmp
js
push
xchg
pop
push
jl
adc
inc
filds
or
sub
pop
inc
in
andl
mov
push
test
rol
adc
xchg
ds
lcall
fwait
push
mov
mov
repz
jnp
pop
xchg
lcall
jnp
in
jne
xlat
xor
bound
inc
inc
rolb
jbe
xchg
repz
or
in
ret
pop
test
mov
cmpsl
mov
bswap
fistpll
lods
mov
shll
jno
icebp
pop
cmpsl
ss
and
addr16
pop
iret
push
imul
push
ss
and
mov
pop
shl
push
mov
icebp
ret
icebp
mov
mov
jbe
movsb
jp
stos
jne
jbe
loopne
xchg
and
rorb
rcrb
insl
and
mov
ds
sti
mov
popa
push
in
and
and
and
adc
pop
cmc
adc
aam
jmp
xorb
push
xorb
push
xor
or
aas
fidivrs
dec
inc
mov
mov
sbb
push
push
sbb
test
jne
pop
push
or
sahf
push
lea
les
pop
fnsave
push
push
fadds
movsl
mov
test
ret
scas
push
cmpsl
xchg
adc
xor
sti
iret
rcll
in
mov
ljmp
call
jns
insl
lds
inc
fucompp
pop
xchg
xor
loope
fisttpll
push
movsb
or
adc
adc
mov
mov
or
xchg
xchg
cmpsb
add
icebp
les
dec
in
outsl
lret
jge
xchg
lcall
mov
int
inc
mov
mov
and
call
sub
nop
mov
subl
and
sub
es
stos
imul
loopne
and
cmc
add
pushf
inc
add
pop
adc
xchg
push
pop
jmp
dec
adc
mov
dec
sub
xchg
movsb
pop
movsb
repnz
cmp
ret
push
lock
shll
inc
int3
mov
ds
cmp
mov
adc
mov
fs
push
add
ja
or
push
test
notb
pop
xor
fmull
sbb
add
mov
lret
testl
pop
mov
imul
pop
faddl
xchg
lods
jbe
xchg
mov
test
cmp
and
and
mov
jne
les
jecxz
dec
clc
xchg
or
jge
fs
or
arpl
lcall
push
js
es
adc
mov
iret
shrb
mov
fdiv
jb
sahf
adc
sub
pop
imul
inc
mov
or
mov
ficomps
aas
xor
es
cmp
in
popl
inc
shrl
mov
sbb
dec
mov
add
sub
xchg
xor
lcall
mov
dec
xor
repz
sbb
imul
popa
jmp
cmp
mov
in
sahf
or
ja
lahf
sbbb
sbb
xrelease
dec
add
aad
mov
xlat
fmuls
push
sti
push
mov
cmp
setle
int
ja
pop
out
fsubl
inc
test
pop
push
lods
jl
mov
sbb
mov
mov
pop
and
imul
push
mov
shlb
js
mov
flds
std
cmp
sbb
inc
and
loope
int3
cmp
jge
mov
loop
and
pop
popl
or
incl
shlb
ret
es
or
popa
mov
inc
sbb
mov
cmpsl
push
sbb
and
add
sub
dec
call
mov
push
mov
es
fcmovne
lret
sbb
das
jl
lds
pusha
xor
pop
stos
jmp
gs
int3
movsl
je
test
ljmp
mov
lahf
rdpmc
or
adc
sbb
jg
pop
roll
push
lahf
adc
add
pop
pop
mov
clc
cmpsl
xor
jno
jl
je
pop
add
fmuls
mov
imul
jg
test
pop
sub
cld
jg
pop
and
sbb
inc
sub
mov
jne
out
dec
jmp
sbb
cmpsl
jnp
mov
mov
dec
loope
push
mov
cmp
nop
cmp
or
jmp
das
mov
lcall
mov
push
xor
push
dec
imul
mov
hlt
xchg
mov
add
test
add
and
stos
add
lods
les
dec
mov
call
mov
xchg
pop
inc
rcrb
push
mov
xchg
jl
je
shrl
dec
adcl
andl
and
dec
sub
enter
adc
dec
icebp
sbb
dec
push
aas
decl
out
jo
sbb
popa
jge
test
sbb
test
push
scas
test
scas
add
xor
xchg
mov
insl
mov
popf
mov
pushf
sbb
insb
fcomps
sbb
dec
loopne
inc
int
jmp
mov
lods
push
inc
repz
mov
ret
loope
pop
popa
push
mov
subb
xchg
js
or
std
pop
loopne
out
mov
adc
data16
cli
push
int3
inc
les
psubusb
js
sti
push
adc
jl
dec
popa
daa
pop
rorl
dec
add
sbb
pop
and
sbb
repnz
push
into
shlb
sbb
shlb
jnp
mov
and
out
add
adc
push
lods
ret
test
sbb
adc
in
fimuls
aas
cs
enter
cmp
jecxz
leave
adc
addr16
gs
push
lret
test
cltd
adc
and
frstor
push
adc
push
in
lret
into
fs
xchg
push
sti
stc
lret
repz
psubw
ret
inc
jmp
mov
iret
pop
mov
push
xchg
and
inc
dec
test
mov
test
mov
xor
clc
or
cmp
xorl
adc
outsb
test
cmc
repnz
mov
dec
adc
jmp
es
inc
push
cmp
jno
mov
and
fistpll
add
dec
arpl
push
xor
mov
incb
inc
cmp
jnp
leave
mov
mov
pop
sub
fsubl
ss
xlat
testl
pop
xchg
aad
sbb
loopne
in
mov
popf
aam
mov
sub
jnp
and
dec
outsl
pop
cmp
das
sbb
sub
lock
fildll
dec
add
in
je
cmpl
repnz
and
cs
inc
aam
je
push
push
lods
mov
or
sbb
fstp
mov
ja
xor
insb
les
dec
es
insb
sbb
cmpsb
fsts
lahf
jp
inc
mov
fmuls
pop
inc
cltd
loopne
or
xor
ja
sti
adc
sti
xchg
pop
push
daa
adc
enter
jp
mov
mov
sbb
dec
jnp
sub
inc
mov
sahf
andb
cmp
dec
or
clc
sbb
mov
push
ret
push
jae
add
outsb
sub
cmpsl
mov
push
test
inc
in
xchg
and
dec
jns
dec
xchg
or
mov
cli
xor
push
push
and
inc
and
add
stc
lock
dec
sub
sahf
mov
xor
jmp
and
mov
xchg
pop
test
mov
ja
cmp
loopne
and
loop
fimull
lock
pop
scas
adc
hlt
push
pop
insb
aas
xor
cwtl
mov
in
in
jns
js
std
jle
out
in
dec
fsincos
cmp
adc
push
pusha
in
rcr
fbld
push
std
mov
test
sbb
loop
call
dec
scas
cmp
push
repnz
test
cmpsb
pop
mov
mov
repz
sbb
imul
sti
imul
fcomps
lds
push
xchg
sub
or
jno
and
lods
inc
mov
lds
xchg
das
loope
int3
jle
sub
xor
test
xor
imul
inc
ss
mov
rolb
cli
mov
cmp
push
js
push
popa
and
insb
sub
mov
fisubl
jmp
dec
and
pop
je
shll
outsl
sbb
popf
outsb
push
cmp
les
mov
dec
xchg
xchg
or
in
adc
push
cltd
inc
out
repnz
sbb
jns
jno
xlat
fs
sub
adc
dec
in
js
push
cltd
cmp
stc
and
push
imul
xor
pop
ret
clc
push
pop
sub
jp
push
aas
inc
push
test
pop
addr16
adc
cltd
jl
mov
test
icebp
nop
lods
or
jge
xor
xor
push
jle
jae
push
fs
andl
add
dec
aas
pop
lahf
xchg
aad
hlt
int3
mov
jbe
cltd
push
mov
inc
incb
cmp
addl
mov
fistl
cltd
push
ss
jo
ds
pop
mov
cmp
sahf
inc
pop
and
jmp
cmp
mov
test
jecxz
cmpb
sub
ljmp
fistpll
xor
mov
mov
jmp
sysexit
xor
mov
mov
lods
out
int
loope
ds
mov
roll
lret
or
aaa
in
shlb
xor
loop
sbb
fistpl
sarl
or
push
mov
shlb
lea
lcall
xlat
cmpsl
test
arpl
enter
adcl
inc
sub
push
xor
arpl
xchg
in
mov
jl
mov
aaa
inc
mov
adc
mov
xor
or
xorb
xchg
pop
adc
pop
insb
mov
push
jno
or
fildl
hlt
addr16
fildll
cltd
out
in
jle
outsl
or
add
sahf
inc
mov
pushl
mov
icebp
pop
call
xor
movsb
lea
negb
lea
outsb
push
mov
into
lret
stos
and
sti
js
lds
jp
xchg
fisubs
jne
shrl
and
add
lret
cmpl
jns
addr16
ja
ficoms
jmp
jno
gs
in
add
fcoml
jae
cmp
dec
ss
popa
ds
enter
scas
insl
xchg
andl
lret
ja
cmpsb
pop
or
aam
lds
lds
dec
outsb
daa
pop
scas
cs
sbb
movsl
ret
cld
jmp
repnz
pop
xor
dec
jnp
mov
fdiv
xor
repnz
movsl
cmp
divb
jno
pop
loop
push
mov
js
pop
mov
bound
and
sub
adc
pop
ja
xchg
rcll
mov
sub
mov
repz
nop
inc
sti
ss
out
out
mov
sbb
iret
cmc
sub
adc
aaa
pop
out
hlt
sub
jae
out
sbb
fnstcw
aam
and
add
mov
imul
gs
scas
gs
adc
scas
mov
sbb
rorl
xchg
xchg
or
xor
popa
loopne
push
test
xor
mov
push
adc
shr
sahf
in
rcrb
xchg
add
dec
inc
testl
jp
jmp
push
loopne
cwtl
sti
cmp
or
jle
mov
jno
jbe
dec
jbe
testl
fdivrl
insl
sarb
xchg
dec
pop
fsubp
push
shrl
pop
push
mov
mov
push
sbb
test
sahf
cmp
ss
lock
jbe
insb
or
repnz
adc
je
sbb
and
inc
push
lahf
loop
dec
popa
lret
push
push
stos
cmp
inc
leave
sbb
xchg
sbb
rclb
stos
adc
inc
call
lds
sarl
sbb
clc
pusha
mov
jno
mov
mov
add
dec
push
clc
cmp
loopne
aaa
ljmp
pop
mov
push
pop
insb
gs
push
testl
cmc
adcl
orl
or
xchg
lock
xor
imul
pushf
pop
jae
jecxz
and
int3
lahf
or
out
push
mov
cmp
xchg
push
push
roll
mov
and
lea
pop
mov
adc
and
xchg
sub
iret
jmp
and
insb
jo
pop
gs
add
or
sbb
xchg
loopne
imul
adc
dec
jnp
loop
pop
mov
stos
lahf
call
repz
cmp
in
mov
iret
hlt
loope
push
dec
mov
lret
adc
or
sbb
and
mov
dec
adc
insb
sbb
and
jmp
stos
sahf
add
stos
ret
leave
jb
daa
lret
fs
loop
scas
xchg
call
mov
and
adc
push
icebp
dec
loope
add
mov
in
aaa
or
mov
sti
mov
xchg
sbb
popa
lock
push
in
or
notl
ret
fldenv
sub
insl
adc
cmp
sub
jnp
adc
dec
adc
cmp
xor
push
xor
sarb
inc
sub
jle
xchg
test
in
push
push
sub
push
ret
or
mov
test
cmp
inc
xchg
mov
lock
fisubrs
rolb
sub
clc
das
jo
add
aas
mov
fwait
dec
sbb
push
aam
push
jl
push
lock
mov
popa
and
inc
push
cwtl
rcll
imul
xchg
push
cmp
pop
mov
inc
int3
test
nop
xchg
mov
push
add
and
xchg
pop
in
int3
stos
xor
dec
imul
adc
ds
push
xor
push
arpl
cmp
repz
gs
leave
push
jg
pop
pop
xor
imul
rolb
adc
pop
xchg
fidivl
insb
testb
cwtl
mov
and
sti
mov
pop
outsb
sbb
hlt
scas
or
sub
enter
push
scas
jns
add
xor
in
pop
repnz
push
xchg
jae
lret
pop
cmp
sbb
inc
jae
scas
sub
push
movnti
sub
mov
aas
ja
cmp
cmp
xor
pop
or
test
mov
xchg
cmpsl
test
rolb
cmp
xchg
mov
sbb
mov
jne
test
and
out
orl
inc
inc
xchg
sub
dec
les
rorl
dec
add
clc
xchg
mov
fsts
xor
push
sub
dec
lods
push
rolb
pop
and
push
adc
out
cmpsb
dec
popa
into
stos
or
xchg
les
pushl
jmp
mov
or
mov
cli
xor
add
into
aaa
stos
mov
mov
pushf
es
inc
enter
js
sbb
lods
xchg
push
mov
mov
cltd
mov
pop
add
jb
jle
jnp
xchg
loope
cwtl
mov
xchg
sbb
ficompl
cmp
sbb
shll
add
imul
aam
add
xlat
cmp
mov
mov
sub
mov
stc
pop
xchg
inc
pushf
in
fcompl
ffreep
mov
dec
mov
or
and
mov
cmpsb
jg
mov
iret
mov
xor
and
sub
jp
jmp
or
adcl
lcall
xchg
cmc
cmp
inc
jmp
and
mov
imul
adc
cmp
cmp
jp
add
pushl
insl
gs
xchg
outsl
lods
inc
das
ds
xchg
xchg
pop
dec
or
out
ss
or
jns
js
push
lock
xor
js
xorb
add
pushw
popf
dec
sub
mov
stos
mov
fisttps
push
mov
sbb
icebp
jo
movb
pop
cli
or
and
popa
pop
test
mov
sbb
or
aas
push
dec
pushf
and
repz
mov
fs
arpl
inc
aad
jl
les
loop
xor
pusha
cmpsl
ret
rorb
pusha
xchg
push
jl
pop
cli
adc
out
cmovae
pop
xor
sarl
add
loope
insb
shrb
fldl
ja
cwtl
repz
das
shl
lods
push
cmc
shll
cltd
cmp
fcomip
mov
sub
pop
movnti
js
xor
mov
adc
out
or
idivb
idiv
imul
sub
pop
mov
jae
les
in
repnz
gs
das
add
mov
out
pop
cmp
std
sub
pop
out
gs
jge
jecxz
call
add
xor
js
sbb
rorl
mov
lods
mov
jmp
add
xlat
aam
shrl
mov
xchg
test
mov
pop
orl
mov
xchg
outsl
and
or
xor
lods
imul
xchg
lcall
cld
repnz
dec
jecxz
aas
in
add
addr16
adc
mov
mov
jp
dec
pop
addr16
pop
gs
and
lcall
out
xor
cmpsl
push
inc
call
cmp
xor
push
mov
push
out
mov
loopne
sub
mov
sub
cmc
xorl
push
cwtl
mov
and
insl
push
cmpsl
das
jnp
daa
movsl
or
push
pop
hlt
and
mov
leave
cmpl
mov
push
or
pop
stos
inc
xchg
sub
repz
and
inc
pop
test
add
stc
mov
lret
call
pop
cmp
mov
cmc
fdivs
mov
arpl
movsl
ds
lahf
lret
repnz
enter
out
pop
das
adc
sbb
inc
xor
shrb
jg
popa
sbb
jnp
push
and
inc
fcom
lret
mov
cmp
movb
cmp
outsl
aam
jmp
inc
jp
jg
jb
dec
add
fistpl
stos
jl
mov
shl
ss
inc
pop
cmp
ret
mov
lcall
loope
mov
mov
pop
mov
repnz
mov
lret
push
add
insl
and
int
push
es
xchg
push
jge
std
loope
loopne
jo
fadds
dec
test
pop
ja
in
stos
pop
cld
imull
add
insl
stc
push
cmp
inc
mov
out
mov
iret
inc
movsb
cmp
adc
cli
mov
aam
stos
inc
xor
aad
scas
pop
add
xchg
push
cmp
sbb
pop
xchg
gs
loop
out
in
sahf
mov
and
mov
add
les
shll
repnz
jns
mov
mov
ljmp
add
int
xchg
bound
jp
fs
test
pop
and
lods
das
test
mov
movb
cmpsl
xchg
lahf
and
push
addr16
dec
lods
gs
sub
jg
inc
rorb
push
sub
xor
push
test
loope
or
push
movsl
lea
stc
push
xor
in
das
sbb
dec
test
mov
popf
dec
pop
inc
fsubp
xorb
in
jae
cmp
sub
add
fistps
sbb
mov
sbb
lret
sbb
sbb
out
nop
loopne
mov
rol
fidivl
mov
addb
mov
xchg
popf
pushf
cld
cmp
data16
pop
xchg
aas
addr16
lea
jl
lret
mov
ds
sbb
out
add
jns
sub
rcrl
jne
jb
sti
loop
cmp
pop
and
sub
cmp
aas
shll
dec
inc
mov
decb
sbb
adc
and
outsl
push
daa
mov
test
adc
jns
adc
repnz
sti
dec
stos
jo
aas
mov
ja
mov
rcrb
rcl
int3
arpl
push
adc
ss
jne
sbb
les
mov
cld
sub
lds
dec
xchg
xor
and
pop
test
xor
mov
pop
push
cltd
fwait
cmp
cmp
fwait
adcl
adc
mov
mov
pop
mov
nop
fdivs
testl
and
ja
push
scas
js
push
and
leave
xchg
inc
mov
into
imul
ss
jae
movsl
push
cwtl
sbb
sub
mov
cmp
jp
lds
sbb
add
and
cmp
addb
jbe
fadds
jbe
mov
movsb
incb
mov
and
cmp
jbe
ds
inc
sbb
xor
stc
hlt
xor
mov
test
mov
xlat
bound
xchg
adc
int
dec
insl
pop
sar
xchg
sbb
cmpsl
mov
insb
test
rcll
roll
add
pop
pop
mov
mov
dec
sub
movsbl
add
xchg
fiadds
cwtl
inc
cmp
lods
push
popa
inc
cltd
in
test
pop
pushf
in
fnstcw
inc
ficomps
imul
inc
xor
mov
mov
jns
pop
test
mov
nop
out
fiadds
mov
jne
xchg
stos
orb
insb
mov
ror
shll
inc
nop
inc
xchg
ljmp
sbbl
andl
addr16
fildl
or
mov
sub
enter
xor
pop
sub
pop
pop
xor
jbe
push
fwait
push
jl
xor
sub
jl
int
and
jbe
mov
cmpsl
outsl
cwtl
mov
fs
jnp
inc
and
ret
cld
jle
cmpsl
and
jae
out
cmpsl
lret
inc
jge
sbbb
inc
jp
sbb
loopne
pop
ds
data16
jge
fld
ret
xor
lds
push
and
pop
dec
jns
mov
pushf
adc
loop
adcb
shrl
jb
adc
movsl
fldt
jmp
imul
dec
cld
push
xchg
adc
cmp
aam
frstor
push
push
sbb
fs
out
jo
xor
and
cmp
inc
sbbb
enter
mov
pusha
out
mov
dec
mov
xchg
xor
notl
lret
aam
mov
mov
stos
fldl
fucomip
add
adc
clc
cs
sti
inc
scas
inc
add
cld
pop
scas
sarb
adc
pop
or
sbbb
xchg
lock
cmpsl
ret
mov
das
fisubrl
cli
mov
hlt
cmpsl
lea
cld
js
shl
or
dec
adc
cmpsl
jae
xchg
leave
enter
mov
add
adc
rcl
jecxz
sub
jl
sbb
enter
push
clc
cmc
loop
repnz
mov
inc
ficoms
or
data16
loope
fldt
les
inc
ljmp
jle
loopne
jle
mov
js
out
mov
cmp
mov
dec
sbb
inc
gs
insl
pop
int3
stos
mov
or
addl
and
mov
mov
add
pop
push
popa
into
das
stc
movsb
push
inc
mov
rorl
loop
fstps
push
or
xchg
test
push
rolb
jle
jecxz
mov
in
lret
js
jle
pusha
mov
add
leave
mov
repz
sub
xor
fildl
mov
push
and
mov
pop
cmp
stc
shl
sahf
es
mov
add
xchg
xchg
pushf
or
jmp
push
movsl
dec
pop
lea
cmpsl
imul
mov
push
nop
bound
stc
mov
push
jge
xor
js
push
jmp
push
js
and
and
push
sbb
cmpsl
in
aad
fisttps
xchg
add
icebp
jl
push
sub
xor
xor
jge
add
aas
add
addr16
jge
test
test
das
add
xchg
xchg
adc
out
out
xor
sbb
pop
cmp
pcmpeqd
mov
pusha
scas
pop
aas
mov
fldl
arpl
shll
adcl
divb
mov
sahf
pop
xor
mov
mov
mov
xchg
mov
les
adc
and
lahf
mov
pushf
xor
xor
mov
jne
adc
or
cmp
icebp
or
mov
push
and
adc
cmpsl
pop
mov
cmpsb
sub
xor
int3
cmpsl
dec
add
int3
lcall
and
shl
adc
insb
addr16
inc
push
call
int3
xchg
mov
sbb
jl
xchg
push
iret
jl
cli
mov
enter
xor
add
and
daa
xchg
dec
in
push
jb
xchg
sahf
arpl
cmp
es
pop
xchg
cltd
pop
test
negb
xchg
mov
cmpsl
push
sub
mov
addr16
push
fists
inc
add
inc
out
jnp
incl
addr16
mov
lahf
mov
insl
mov
sti
icebp
sbb
leave
cmp
inc
test
sbb
out
vmwrite
fbld
xchg
push
mov
sahf
jae
ljmp
lahf
icebp
lock
jb
sahf
sub
mov
and
xchg
out
test
or
dec
push
rolb
cmp
clc
arpl
pop
xchg
lods
cmp
pop
push
sbb
push
into
lods
arpl
or
ja
sub
movsb
cmp
xchg
aad
in
xchg
dec
mov
mov
push
inc
call
mov
add
push
int3
push
pushf
fcomp
out
adcl
inc
out
pop
lret
insl
int3
push
mov
aam
ret
mov
dec
mov
lods
pop
xchg
push
outsl
ss
cmp
mov
xor
pusha
je
fdivs
mov
cmpsl
lcall
fldt
mov
imul
push
xchg
cs
inc
outsl
jno
mov
xchg
inc
in
out
cmp
cli
or
jmp
push
xchg
add
sub
add
cmpsb
xor
int3
cli
and
cmp
in
dec
lcall
mov
les
fldpi
adc
dec
lods
in
or
and
xchg
rcl
repz
xchg
shl
jmp
xchg
or
rcrb
adc
and
gs
sahf
mov
dec
jb
jg
mov
jb
jl
or
xchg
int
push
test
inc
add
jno
jg
jl
push
mov
mov
lods
mov
mov
fisttpll
mov
push
xchg
pop
cmp
ret
rol
pop
mov
xor
bound
jle
mov
and
adc
xchg
mov
mov
mov
jl
aaa
mov
fisubrl
mov
xor
and
mov
push
sub
push
adc
mov
sbb
inc
mov
cmp
aam
add
out
fdivrs
jno
jno
loop
mov
sti
int3
mov
xor
and
stc
ret
imul
outsb
call
or
cmpsl
add
push
pop
aas
mov
pusha
pop
and
dec
fiadds
in
and
fadd
sbb
call
pop
and
push
es
lods
add
out
xor
jp
aas
add
xchg
push
call
stc
jle
and
xchg
push
in
cld
push
imul
outsb
out
mov
cmp
and
outsl
or
ficomps
push
fiadds
ja
inc
outsl
pop
pop
mov
add
lret
dec
test
shl
push
ljmp
pop
aas
leave
js
pop
cmpb
jmp
out
shlb
out
fnstsw
and
iret
add
gs
lcall
sbbb
jbe
xor
mov
mov
cld
test
xor
jge
fucomp
pop
dec
dec
imul
jg
dec
mov
xor
das
rclb
mov
push
sbbb
dec
lock
lret
popa
jl
cmp
fcmovu
mov
idivb
jbe
iret
aas
clc
jb
mov
add
fistl
ljmp
lods
nop
ffreep
pop
mov
fnstsw
pusha
imul
and
std
test
push
xor
xchg
and
arpl
jb
xchg
popa
mov
sti
cmp
iret
sti
xchg
js
jnp
test
push
adc
mov
jmp
aad
cmp
iret
es
add
mov
sbb
popa
je
test
push
jp
and
imul
cmp
and
or
pop
and
popa
rcl
mov
push
repz
adc
mov
adc
push
jmp
dec
insb
out
dec
push
jne
orb
shlb
test
or
cld
ret
dec
fs
cmp
in
daa
mov
dec
adc
int
pop
lea
mov
pop
push
mov
mov
inc
or
scas
mov
rclb
ret
lods
scas
aaa
jae
pop
sarb
cmpsb
lcall
div
pop
cmc
aas
jnp
jbe
in
adc
loopne
xor
cmp
push
pop
imul
sbb
push
das
cmc
mov
aam
jmp
inc
sub
or
or
jl
test
ljmp
mov
mov
jne
mov
sti
cmp
xlat
jmp
adc
shrl
xchg
xchg
in
mov
mov
cmp
adc
lods
imul
add
call
push
xchg
addr16
out
fstpl
in
movsb
add
sti
imul
pop
repz
or
cmp
jle
sahf
sbb
test
mov
je
pushf
divl
mov
subl
scas
lods
and
in
add
sbb
push
sbb
push
into
adc
fs
and
icebp
mov
xchg
adc
scas
inc
das
pusha
jne
sub
or
xchg
pop
adcl
jg
cmp
add
pushf
sbb
aaa
and
std
ds
push
out
in
or
push
cmp
cwtl
xor
ss
add
xchg
push
mov
pop
mov
jp
pushf
scas
cmp
mov
push
mov
sub
cmp
imul
dec
or
pop
stos
fsubl
push
insb
adc
aam
pusha
pop
sbb
ljmp
sub
lods
mov
pop
inc
shll
cmpsb
push
dec
das
subb
pushl
mov
out
sbb
lods
jl
inc
repz
loopne
cmc
mov
mov
test
mov
out
cmp
cmpsl
idivb
into
sub
add
mov
fucomip
ss
in
inc
add
pop
orb
insl
cmp
adc
push
xor
push
lret
test
mov
je
add
jmp
adc
inc
jg
arpl
test
push
fisttpl
jns
shrl
push
jle
leave
and
in
in
inc
js
jle
lock
iret
sub
or
xor
and
inc
mov
push
sub
add
mov
fidivrs
mov
std
sub
icebp
inc
scas
enter
cmp
aam
aad
jae
vcvtdq2pd
cs
jle
pop
pop
jbe
pop
fsubrs
and
and
fistpl
pop
push
sbb
sub
mov
stos
jle
pop
stos
push
and
pop
sub
jg
test
leave
mov
fs
outsl
insb
add
stos
rep
inc
pop
int
fucomp
jmp
shlb
xchg
mov
push
movsl
dec
loope
movsb
and
idivb
ja
and
jl
insl
mov
pop
sbb
sbb
cmp
jmp
in
dec
dec
add
lcall
xlat
push
jmp
and
jmp
xchg
or
daa
adc
adc
inc
pop
andb
mov
cmc
movsb
daa
sub
jle
jl
sbb
jl
xchg
movl
add
mov
add
inc
iret
xchg
test
pusha
inc
dec
cmp
add
inc
push
pusha
iret
mov
jnp
test
aas
cmc
rol
fnstenv
adc
xchg
sbb
insl
es
fsts
popf
rorb
jp
push
sbb
mov
icebp
sbb
or
in
movsb
jle
mov
jl
dec
rcrb
mov
addl
jo
out
imul
out
xchg
xor
mov
lea
lahf
pop
xchg
dec
dec
mov
sahf
mov
xchg
outsl
cmpsl
ljmp
fsubrl
add
mov
ds
shl
ffreep
pop
shll
push
jle
push
or
fucomip
push
lds
add
or
cmp
xchg
mov
test
add
lret
xchg
xchg
lods
mov
loope
pop
inc
push
mov
pop
inc
jge
fisubrl
in
scas
in
test
cmp
jb
xchg
int
mov
cmp
fld1
mov
in
jb
imul
jno
mov
std
jge
in
cmpsl
push
add
and
jns
sti
jno
je
and
xor
test
pop
sub
loope
mov
imul
mov
mull
pusha
pop
sub
dec
roll
aas
push
les
xor
inc
xchg
sbb
das
stos
xlat
fildl
aad
stc
fisubrl
mov
loope
sbb
inc
lock
jp
push
jo
mov
mov
lea
mov
mov
or
inc
push
jmp
push
jg
or
out
cmp
ret
sbb
lcall
enter
imul
inc
arpl
imul
fwait
mov
cli
push
test
mov
or
icebp
cmp
movsl
aam
call
cmp
fists
mov
sbb
pop
push
int
push
in
xchg
rcrb
mov
cld
andb
sti
ds
lods
test
ds
xchg
mov
in
mov
aam
cld
nop
fimuls
push
mov
ja
jle
mov
movsl
or
sub
xorl
int3
pop
dec
mov
push
mov
push
sub
cwtl
repnz
push
pop
idivb
in
dec
pop
out
mov
ja
in
outsl
mov
jle
cli
lods
lock
xor
scas
pop
push
rorb
jmp
cmpsl
loopne
lods
fimull
cmp
dec
sbb
dec
daa
lock
ret
in
jnp
adc
inc
or
ret
test
cmpsl
push
adc
and
ret
bound
aaa
scas
jo
addr16
mov
outsl
push
xchg
cmp
into
fildl
dec
popl
cli
movsl
add
xor
out
xchg
imul
cmp
adc
negb
sarl
xchg
or
ret
mov
fnstenv
cwtl
xchg
sub
cmp
sbb
xor
jecxz
cmp
and
movsl
xor
and
jecxz
push
test
popf
mov
call
xchg
sub
into
dec
fstpt
inc
inc
jae
subl
fiaddl
mov
ret
dec
cmp
lods
movb
dec
pusha
or
jmp
imul
mov
mov
movsb
lahf
dec
inc
push
sbb
out
mov
fsubrs
sbb
in
cmpsl
adc
outsb
fldenv
or
in
rclb
sbb
mov
push
mov
fs
dec
jae
mov
mov
fnstcw
add
out
repnz
push
and
push
inc
mov
inc
pop
aam
out
mov
pop
fdivr
call
and
mov
inc
pop
test
in
aam
fcomp
icebp
lahf
pop
adcb
adc
jmp
mov
aas
push
pop
push
mov
shrb
sarb
cwtl
data16
ret
dec
jl
xor
inc
ds
xchg
pop
mov
sub
pop
push
or
out
test
loope
xorl
imull
xchg
movsb
mov
or
xor
stc
push
test
inc
lahf
sbb
movsl
cmpsl
je
xchg
inc
or
dec
in
inc
roll
cmpsl
sahf
test
sbb
push
popa
push
cld
pop
bound
mov
mov
pop
mov
mov
test
jae
leave
out
cmp
mov
xor
mov
vcomisd
and
icebp
mov
jbe
iret
mov
call
es
imul
leave
arpl
call
test
stc
cmpsl
pop
popf
out
jge
push
push
sbb
shll
dec
mov
add
bound
xchg
loop
mov
pusha
jb
dec
fidivrl
test
push
adc
inc
and
xchg
sbb
fdivrs
das
outsw
loope
xchg
sbb
cmpsl
test
jnp
rclb
shlb
int3
out
add
cs
stc
and
sbb
sub
dec
int3
dec
jb
xor
jne
loope
je
mov
mov
cmp
ds
or
pusha
mov
sub
jg
pusha
aaa
stos
test
cld
mov
mov
push
shlb
adc
jle
out
jns
shrb
or
subb
sbb
cmpsl
push
out
pop
fcomp
lods
mov
roll
arpl
pop
push
xor
push
cs
dec
push
cmp
lahf
sbb
push
cs
stos
out
mov
outsl
hlt
jae
add
lds
mov
and
dec
out
mov
dec
aaa
add
pop
ja
ret
jl
rolb
in
lods
jp
adc
pop
sbb
add
lahf
xchg
movsl
loopne
cmp
cmp
aaa
add
movsb
push
mov
incl
jmp
mov
sbb
fs
xchg
rcr
push
cmc
push
mov
jle
push
std
int3
ds
fsubl
add
popa
cmpb
pop
and
dec
fildll
divb
push
jl
push
comiss
sbb
sbb
pop
jne
aad
into
xchg
push
mov
inc
sbb
cmp
pop
fmuls
xchg
mov
aas
movsb
scas
cmp
and
rcrb
pop
mov
int3
sub
insl
xchg
and
inc
movsb
insl
popf
shrb
add
or
loope
pop
gs
cmp
mov
pop
xchg
dec
in
add
adcb
mov
and
push
push
push
dec
sub
test
jnp
or
sbb
mov
fidivl
xchg
iret
xchg
int3
jl
jl
pop
mov
cmp
xchg
inc
pop
insb
adc
cs
mov
mov
sub
dec
dec
rcr
jnp
jmp
xchg
jne
stos
pop
push
jle
nop
or
mov
and
inc
stos
ds
fucom
xlat
pop
push
jae
filds
jmp
adc
push
inc
dec
xor
mov
add
movsl
aad
popa
mov
pop
and
or
cmp
or
pop
cmp
cltd
inc
test
fwait
dec
sarb
pop
out
rorb
mov
dec
push
out
mov
es
cltd
push
test
je
xchg
push
sub
idivb
mov
cmp
popf
mov
out
fimull
ret
rclb
cmp
fadd
jp
into
lock
xchg
jo
sbb
in
fstpl
movsb
and
in
xchg
pop
clc
cmp
xorl
mov
in
dec
xor
cmp
adc
in
xchg
lahf
jp
rcrl
mov
cmp
and
and
test
push
loope
xchg
movl
mov
or
iret
mov
in
sub
lock
inc
xor
xchg
loopne
pop
push
jp
push
dec
push
dec
and
pusha
sub
push
jb
vmwrite
sub
aam
sahf
xchg
mov
add
test
or
test
jnp
jo
push
lret
lea
jb
cmp
and
jne
add
fdivs
fistps
jae
cmp
xor
out
cwtl
std
push
in
add
les
mov
into
push
dec
jp
and
mov
aam
mov
sub
or
outsl
test
insb
stos
psubq
in
mov
inc
movsl
mov
mov
sbb
stos
push
rcrl
jge
xchg
stos
dec
stos
add
rcl
xlat
arpl
jp
sbb
dec
mov
repnz
nop
sub
push
lea
cmpl
mov
mov
or
stos
add
or
mov
jne
and
cmp
adc
rolb
aas
jae
xor
adc
insb
sti
push
fildll
bound
mov
mov
dec
xchg
pop
mov
and
pop
test
inc
ljmp
loop
js
pop
mov
and
insb
adc
sub
adc
jge
movsb
cltd
je
mov
add
jns
lahf
fildll
das
aaa
shll
dec
aad
dec
insb
imul
sbb
push
mov
and
loope
cwtl
jmp
jnp
pop
xor
dec
sub
mov
inc
or
jb
loopne
mov
test
mov
pop
fsubs
push
mov
xlat
aas
inc
add
stos
cmp
and
mov
daa
gs
lcall
and
mov
out
push
mov
cmp
arpl
xlat
clc
pextrw
pop
ja
ficoms
fstpl
test
or
cmp
xchg
pop
mov
push
inc
das
or
dec
cltd
mov
mov
dec
add
outsl
sahf
lock
mov
mov
ss
mov
sub
gs
pop
cs
add
fmull
jg
inc
in
fcoms
sahf
aaa
in
pop
call
adc
les
cltd
inc
sbb
or
inc
sub
mov
push
mov
pop
sarb
xor
lret
mov
sbb
and
push
dec
loopne
push
int3
jnp
div
cwtl
mov
hlt
stos
test
adc
sub
lret
cmp
int
pop
mov
or
adc
jle
repnz
sarl
xchg
loop
sbb
pop
daa
mov
cld
adc
mov
dec
jne
rclb
daa
idivl
cmp
xor
lret
hlt
xlat
lret
pop
jae
cmp
imul
push
movsb
lods
dec
push
mov
pop
push
loopne
addr16
or
xchg
cmp
cmp
aas
mov
mov
pusha
xchg
inc
cli
lods
fwait
adc
jae
aad
mov
out
faddp
das
xor
daa
add
popl
ds
dec
lahf
aam
stos
insb
cmpsl
ljmp
cld
dec
push
sbb
imul
xchg
sub
mov
xor
iret
push
xchg
mov
sahf
lock
inc
add
add
sub
push
repz
out
xchg
shld
ljmp
scas
adc
dec
mov
inc
adc
cmp
pop
mov
pop
inc
data16
addb
xchg
dec
cmp
adc
cwtl
scas
leave
rclb
dec
aaa
add
jg
adc
cwtl
sub
ss
cltd
inc
sub
push
dec
push
adc
ret
mov
jge
test
and
lds
push
outsl
adc
outsb
fwait
sbb
and
shl
hlt
cmp
mov
mov
dec
push
mov
inc
out
testl
or
pop
lods
dec
xor
cs
push
mov
mov
jno
xor
xchg
adc
popf
ret
jb
int
inc
mov
mov
nop
adc
cmc
test
pusha
xchg
xchg
or
std
ljmp
lret
jo
out
mov
loopne
repz
xchg
lcall
mov
movb
adcb
dec
sub
jnp
loope
dec
cmp
cltd
jecxz
dec
mov
das
dec
cwtl
imul
dec
aam
movsb
dec
jo
daa
stc
fstl
lcall
xchg
adc
pop
outsl
xlat
and
sbb
xor
fimuls
fimull
xlat
fs
push
mov
es
inc
ret
lret
nop
fdivs
mov
sub
lods
ja
and
sbb
xor
shlb
int3
outsl
mov
jbe
push
rcr
lods
jmp
lds
test
fsubs
and
mov
fcmovnbe
push
fisubs
cwtl
lock
mov
ret
dec
inc
es
scas
push
data16
mov
jle
inc
pop
mov
mov
loop
rcrb
jp
loopne
xlat
or
xor
mov
dec
xchg
mov
nop
sbb
cmp
nop
mov
ret
and
push
pop
ret
mov
dec
aad
ljmp
fbstp
shll
mov
xor
xchg
mov
push
cmc
repnz
jnp
popf
test
lea
pop
fwait
xor
jbe
cmpb
dec
outsb
pop
pop
out
dec
lcall
ffreep
pusha
sub
xor
clc
pop
cmp
fwait
cmp
adc
fwait
pop
fldenv
xor
cmc
lock
icebp
push
sub
push
push
xlat
fimuls
xor
decb
push
mov
sub
movsb
or
xor
js
jne
sarb
bswap
in
cs
adc
aaa
int
stc
inc
cmpsb
loop
jns
js
jne
daa
int3
lock
mov
add
xor
fs
xchg
cmp
cmp
jnp
add
lods
fcoml
test
out
inc
into
cli
and
cmpsb
loope
jge
hlt
jge
add
dec
int
jmp
mov
sahf
daa
add
inc
pushl
xchg
dec
cmpsl
pop
nop
push
mov
jnp
or
cmpsl
xor
outsb
mov
inc
hlt
test
cmpsb
jnp
dec
push
outsl
xor
dec
out
leave
sub
imul
cld
insb
push
sub
fwait
imul
xchg
mov
out
test
mov
xor
pop
clc
push
jbe
sub
inc
test
fcmovne
leave
popl
push
lods
mov
xchg
call
xchg
pop
mov
jnp
push
lea
out
inc
dec
add
cmovnp
aaa
push
jecxz
loope
sarl
dec
sbb
cwtl
jecxz
testb
mov
inc
popa
mov
lock
sub
cmpsb
jnp
and
scas
xchg
and
lcall
ret
mov
enter
or
inc
pop
xchg
sbb
icebp
les
xchg
sti
outsb
xor
xchg
pop
inc
jbe
in
aam
out
idivb
xchg
push
cld
fimull
sbb
mov
in
std
mov
fnstenv
icebp
pushf
mov
js
je
out
mov
jo
int
push
or
sbbl
test
xchg
mov
stos
push
fwait
jno
test
xor
es
pushf
jne
test
sub
dec
das
test
leave
mov
mov
pop
stc
push
decb
dec
sbb
mov
sub
addr16
leave
fucomp
mov
xchg
and
fs
in
sbb
lds
filds
mov
sahf
cmpsl
movsb
jo
aad
xchg
sub
repz
pop
add
and
fnsave
adc
std
and
dec
adc
add
xor
je
xchg
ret
push
test
cli
movsb
outsb
dec
fisubrl
xchg
outsl
stc
sbb
outsl
cli
push
and
push
inc
mov
sub
add
inc
mov
sbb
push
push
lcall
push
push
cmpsl
sti
inc
adc
test
push
je
dec
mull
lock
jbe
and
fmull
movb
xor
fldcw
mov
lret
stos
cmp
add
and
mov
jno
outsl
out
mov
mov
xchg
lcall
mov
xlat
jecxz
lock
inc
clc
fcomp
lahf
out
mov
gs
mov
mov
mov
jmp
dec
pop
mov
or
loope
outsb
sub
sbb
xchg
movsb
xchg
int3
ret
inc
lds
fcomip
inc
mov
sub
push
aaa
add
add
mov
cltd
cltd
gs
push
repz
mov
roll
jl
aas
out
imul
mov
repz
rcrl
mov
xor
mov
bound
rcrl
and
mov
insb
adc
pop
shr
xchg
incl
push
cmp
cs
push
js
mov
xchg
pop
or
mov
scas
out
lret
sbb
cmp
movsl
cmp
mov
divl
rolb
scas
ror
xor
and
ss
xor
aas
fstpt
adc
mov
or
add
mov
mov
jne
xchg
sub
mull
fwait
ret
lds
inc
xor
pop
test
cmp
clc
adc
mov
fisubrs
fcompl
aad
ret
cvtdq2ps
xor
mov
ret
fs
test
hlt
outsb
sbb
hlt
adc
iret
outsb
cld
cmp
jg
pop
ja
add
out
xchg
push
xchg
lret
cmpsb
stc
lock
xchg
aad
xchg
lds
loope
push
mov
lods
outsl
daa
pop
push
push
pop
loop
pusha
arpl
mov
pop
xchg
stos
in
data16
cmp
adc
addr16
sub
inc
movb
mov
fsts
addl
mov
adc
lahf
gs
add
push
nop
sbb
xchg
inc
mov
popf
xor
cwtl
push
aad
pop
inc
cmp
bound
in
mov
cli
aas
pop
jl
add
loopne
mov
push
jb
push
lahf
dec
jmp
std
add
dec
je
mov
pop
pop
pop
inc
out
std
ret
orb
call
lahf
ror
pop
push
add
cld
outsb
jge
sbb
ja
out
lret
xor
enter
les
test
adc
outsl
mov
scas
es
xchg
dec
repnz
fsubrp
ss
push
sbb
movsl
jns
sbb
ja
xor
dec
mov
sbb
popf
movsl
data16
enter
insl
lahf
cmp
lcall
ret
xchg
mov
and
or
ljmp
and
sti
adc
fsubr
mov
aam
repnz
ja
cmp
pop
loopne
aas
dec
movsb
push
sbb
je
push
or
mov
push
add
scas
adc
push
mov
adc
outsb
lods
inc
cmp
sti
ljmp
int3
mov
loop
adc
sbb
xchg
clc
sbb
insb
push
jle
adcl
pop
js
imul
or
xchg
daa
std
push
push
in
fisubrs
ss
cmc
add
add
inc
dec
cwtl
sub
mov
inc
fxch
test
shlb
arpl
jae
sub
ret
xlat
into
pop
stos
call
xchg
stc
jb
mov
and
xor
jmp
movsb
dec
mov
repnz
mov
xlat
inc
jo
jbe
daa
ja
lret
js
inc
xchg
jo
loop
xor
iret
popa
pop
push
rcll
int3
je,pt
loope
mov
mov
sub
mov
leave
hlt
cld
sub
mov
insl
imul
adc
adc
xchg
sahf
push
popf
pop
sbb
dec
jo
pop
xchg
lds
outsl
cmpsl
mov
jno
cmp
inc
push
and
mov
stos
jns
mov
pop
or
pop
jp
movsb
das
inc
adc
stos
add
scas
jbe
push
mov
mov
xor
les
cmpl
and
or
lods
cs
sbb
pushf
insl
cs
mov
push
push
pop
xchg
mov
mov
push
pusha
iret
shrl
lcall
xor
push
lret
aaa
jmp
or
and
inc
xlat
fs
loopne
outsl
ret
mul
out
pop
sub
or
sahf
jg
out
or
nop
dec
and
jle
sub
scas
insl
sar
lods
stc
push
inc
push
ret
gs
insl
sahf
adc
push
jbe
fisttps
xchg
push
dec
jp
mov
mov
xchg
mov
xchg
inc
lret
mov
sbb
xchg
xlat
xor
push
xchg
addl
or
cmpsl
bound
enter
shlb
mov
mul
xlat
adc
repnz
es
ds
pop
mov
roll
sbb
jle
xchg
cwtl
xchg
sub
lret
add
cmp
sbb
xor
popf
divb
push
cmp
loop
jg
sbb
movsl
jg
push
fwait
pop
adc
cli
pop
fsubl
loopne
pusha
sub
jl
xchg
stos
jl
maskmovq
jmp
cmpsb
and
pop
mov
je
int3
mov
mull
sub
ret
push
rorb
xor
xchg
xchg
fisubl
gs
subl
and
sbb
adc
adc
jbe
or
push
arpl
sbb
inc
pop
push
xlat
fisubs
repz
inc
xchg
push
xor
mov
mov
push
imul
push
aaa
rcl
popa
cmpsb
and
insl
jno
sub
mov
inc
cmpsl
or
push
imul
pop
jl
dec
adc
xchg
inc
or
inc
cmp
pop
and
out
mov
xchg
pop
add
scas
es
sbb
push
jno
push
subb
dec
mov
pop
and
sahf
mov
mov
mov
orl
into
add
mov
nop
xchg
scas
iret
sub
sahf
nop
scas
cld
jp
out
cmp
mov
xchg
cmp
adc
decl
mov
stos
mov
les
loopne
or
xor
inc
clc
aad
fs
lods
loop
sub
fistpl
pop
lock
mov
mov
push
mov
jp
mov
add
adc
jge
dec
xchg
dec
es
sbb
movsl
lret
lret
push
cld
insb
or
clc
inc
pusha
stos
xchg
mov
pop
jns
cli
mov
adc
rcrl
mov
add
jecxz
in
jae
pop
mov
lods
jnp
cmpl
mov
add
jge
jle
enter
mov
push
mov
aad
mov
rcll
js
xor
lret
bound
clc
js
outsl
sub
xchg
lock
int
in
sbb
add
push
cwtl
loop
imul
loope
push
jno
push
subl
bound
aaa
adc
jecxz
sahf
aam
or
es
sbb
mov
cmp
movsb
add
push
pop
push
xor
xor
mov
fwait
mov
adc
xchg
or
push
fiaddl
movsl
mov
xchg
lahf
das
xor
repnz
sbb
ds
sub
add
in
add
pusha
push
fdivrs
shrl
jle
test
or
test
call
xchg
inc
sub
dec
xor
inc
pushf
fiadds
xor
js
and
xchg
xor
out
cmpsl
add
and
or
pop
dec
outsl
popa
mov
out
dec
frstor
leave
sub
cwtl
jb
fimuls
jecxz
mov
jmp
int
push
cmp
mov
dec
lret
inc
fisttpll
out
sahf
xor
push
clc
and
xchg
popa
loopne
out
mov
scas
mov
push
adc
icebp
leave
sbbb
in
xchg
cmp
push
cmp
cli
lock
pop
xchg
xor
jp
clc
cs
repz
outsb
rcrb
rol
imul
lds
push
sbb
inc
mov
cltd
addb
cli
xchg
pop
lods
shlb
xor
push
pop
jp
xor
pop
jns
and
or
mov
cld
ret
mov
push
inc
lea
lds
clc
aas
jo
sbb
and
cmp
enter
mov
push
popa
popf
jle
xor
mov
jge
pushf
mov
icebp
je
loope
fsubl
lahf
leave
iret
addr16
pushf
out
sub
imul
hlt
fisubs
fs
lods
adc
shrb
add
in
test
mov
repz
scas
in
fildll
ja
mov
jns
outsl
cltd
int
xchg
lods
xchg
bound
dec
ja
fcomip
jno
test
cli
dec
add
adcl
xor
cld
scas
popf
xchg
mov
insb
loope
push
shlb
inc
push
jecxz
rcrb
push
mov
push
xchg
inc
stc
sub
call
cltd
pop
sbb
sub
inc
adcb
inc
in
fcoml
sub
xchg
mov
ja
rcll
loop
push
gs
aad
push
dec
into
mov
into
sti
lds
xor
jp
daa
ret
xchg
pop
lods
dec
pushf
mov
cmc
outsl
in
or
enter
jg
mov
arpl
int3
xchg
and
sub
fcomps
ret
cmp
jno
stos
ja
scas
sbb
shll
sbb
dec
fstpt
movsb
insl
push
and
ds
andb
cmpb
mov
mov
and
push
pushf
rorl
mov
sbb
xchg
mov
lods
lgs
inc
adc
in
xchg
inc
in
dec
pop
sbb
sahf
xchg
arpl
inc
xchg
push
fcoms
fbstp
aad
push
pop
adc
dec
scas
idiv
fcomps
sarl
loopne
adcl
mov
xor
and
out
mov
and
lea
or
xchg
cmp
pop
cmp
shr
js
inc
xor
push
jl
xchg
pusha
dec
in
jge
adc
test
ficoms
loop
loopne
rcr
add
adc
sbb
jb
fnstcw
frstor
loope
std
mov
in
jbe
fs
jg
adc
jmp
nop
push
push
hlt
repnz
movsl
scas
mov
mov
mov
insl
xor
ja
imul
call
repnz
lgs
adc
mov
into
dec
adc
repz
inc
insl
pop
lret
mov
xchg
jmp
int
lret
lds
add
sbb
inc
and
dec
jbe
dec
ret
shll
jmp
mov
push
add
call
decl
arpl
loop
outsl
and
bnd
mov
mov
aas
mov
xchg
sahf
jmp
ljmp
xchg
lcall
icebp
test
sub
dec
mov
test
xor
in
or
les
mov
popa
pop
les
out
je
mov
xchg
cmc
push
add
jecxz
ljmp
mov
mov
sub
mov
loop
jg
jl
push
movsl
add
imul
add
jle
inc
or
mov
pop
cwtl
inc
push
push
data16
pop
sbb
cmp
add
js
dec
jno
fnstsw
les
test
cs
xchg
pop
fistpl
in
jne
lods
out
out
les
mov
or
movsl
jle
pop
int3
or
ss
sub
pop
scas
int3
sbb
jmp
dec
adc
outsl
xchg
jbe
inc
iret
mov
iret
loope
push
inc
mov
loope
leave
fistl
xchg
mov
push
xor
mov
inc
inc
fadds
mov
inc
and
pushf
cwtl
inc
popl
inc
add
cmpsb
scas
test
lock
push
sbb
push
inc
xor
or
std
push
call
xor
xchg
and
shr
pop
iret
jnp
xlat
jbe
sub
shl
cmp
rcrl
outsb
sub
loope
shlb
jnp
push
insl
and
and
dec
ds
fildl
push
insb
sahf
mov
push
pushf
orl
mov
repnz
inc
imul
cld
pop
add
fldcw
mov
and
mov
ret
xor
movsl
xchg
xchg
jae
aam
mov
sbb
js
in
sub
push
popa
xor
jmp
dec
loopne
dec
pop
aaa
imul
test
pop
push
mov
out
daa
push
mov
mov
pop
enter
jns
jbe
cmp
mov
inc
es
orb
xchg
sub
pop
sti
cmovno
mov
jmp
arpl
adc
xor
loopne
div
push
iret
mov
cli
insb
lret
in
push
repz
dec
pop
adc
push
sub
in
cwtl
scas
pop
push
sub
push
cld
inc
scas
push
mov
test
mov
pusha
inc
pop
pushf
aam
mov
jbe
mov
xor
divl
mov
insl
pop
cmp
inc
or
inc
sub
in
adc
loopne
mov
fmull
pop
lahf
mov
or
mov
push
push
jb
out
cmpsb
sahf
mov
push
mov
mov
jne
test
xor
pop
mov
pop
pop
lret
inc
testl
lds
adc
add
std
xor
es
pop
sahf
in
stc
mov
dec
sub
ljmp
add
mov
and
daa
js
adc
mulb
push
les
outsb
outsl
fsubr
lea
bound
dec
mov
int
pop
jbe
lock
fs
lret
loopne
dec
xchg
ret
scas
jl
mov
dec
xor
stos
push
mov
pushl
outsl
jle
add
ljmp
dec
and
out
and
jnp
outsl
cltd
data16
sub
dec
and
mov
add
das
fldt
outsl
cld
sub
pop
in
lea
adc
lret
gs
inc
push
lock
in
sahf
push
repnz
je
loop
enter
dec
cld
in
addr16
out
push
dec
pop
push
jno
scas
sub
cmp
pusha
mov
gs
rcl
insb
ds
dec
pop
addr16
pop
sub
push
sub
pusha
xor
mov
xor
fwait
adc
imulb
roll
shl
cltd
jmp
imul
jle
or
xor
fcomps
pop
pop
test
rorb
pop
or
aam
cmpb
lods
sub
mov
pusha
sbbb
jo,pn
js
fadd
pop
add
imul
fcompl
dec
ret
push
stos
add
ljmp
push
hlt
dec
add
rcr
xor
cld
fwait
mov
mov
lods
dec
add
mov
sbb
cltd
ret
adc
sub
outsb
shr
scas
inc
dec
jbe
andl
ret
loope
lret
push
jnp
jmp
xchg
lahf
push
lret
mov
dec
fnstcw
jbe
add
sbb
dec
sub
stos
or
push
mov
testl
loopne
mov
test
jecxz
loop
es
test
cli
adc
lock
dec
mov
aam
cmc
imul
out
addl
ss
aad
clc
inc
in
inc
and
sti
add
packsswb
inc
mov
js
cwtl
arpl
aad
dec
repz
test
ja
xor
shlb
popa
loope
pop
cltd
fs
push
or
dec
fisubrl
test
test
sub
ljmp
push
stc
push
sbb
call
out
loop
outsb
adc
lods
ljmp
mov
cli
xor
jp
cmp
pop
repnz
std
push
add
or
jb
inc
pop
test
adc
flds
adc
ret
ljmp
jnp
popa
pop
jbe
xor
loopne
jmp
out
cmpsl
xchg
and
cmpsl
mov
pop
push
xchg
cltd
inc
add
frstor
pop
cmp
aas
xchg
jns
and
pop
mov
dec
push
es
push
js
or
test
mov
mov
mov
inc
adc
out
lods
pop
jne
popa
imul
push
mov
jbe
jns
div
xchg
ret
ficompl
push
arpl
fsubl
cmp
lods
adc
push
adc
fidivl
push
loop
mov
mov
pop
fnsave
or
ja,pt
xor
repz
test
lock
in
mov
pop
mov
xchg
push
mov
adc
push
loop
xchg
xchg
mov
sbb
jbe
jmp
iretw
jb
jns
push
pop
sti
mov
push
lret
mov
rorl
inc
in
out
xchg
call
insb
push
mov
ss
lret
mov
xor
ds
cmpsl
cmp
sub
cwtl
aaa
xchg
or
aas
cmp
jge
xor
daa
fwait
push
pushf
into
movsb
adcb
xlat
into
fisubs
ss
jge
jbe
test
jg
pushf
imul
cwtl
mov
ljmp
imul
add
jp
fcmovbe
push
repnz
or
mov
les
aam
mov
nop
loopne
test
sbb
jnp
ret
mov
inc
sub
fldt
or
mov
add
dec
inc
push
pop
jmp
cmpps
dec
mov
mov
mov
test
sti
pop
mov
rcll
dec
mov
inc
adc
jmp
sti
insl
mov
add
jp
cmpsl
insb
in
in
loopne
inc
sub
inc
test
mov
je
sbb
push
push
in
lods
orl
jno
in
aaa
in
lods
jno
inc
in
outsl
sbb
jbe
adc
mov
jp
mov
cmpsb
imul
aaa
push
das
mov
jno
xor
lea
int
gs
pop
xchg
xchg
sbb
aam
mov
orl
lcall
or
adc
push
pushl
lods
fwait
lcall
aad
lock
cmp
mov
into
ret
inc
rcr
mov
jl
adc
sub
pop
mov
xchg
push
sub
xor
out
shr
into
cmp
cmc
fistpll
push
mov
inc
pop
inc
xor
imul
and
adc
add
mov
adc
repz
jmp
test
sti
sarb
xchg
or
xchg
sub
mov
mov
jns
dec
in
repz
jecxz
mov
dec
std
ja
mov
sub
js
andb
jmp
fptan
cli
cmp
sub
notl
dec
popa
repz
insb
jle
jecxz
and
sub
adc
pop
jmp
xor
out
push
outsl
test
pushf
xchg
xor
add
js
loop
push
or
and
rclb
mov
jbe
jo
mov
xor
stos
cmp
jle
dec
stos
mov
cmp
inc
mov
xor
test
cmp
cmp
fwait
pop
push
sub
repnz
out
movsl
sub
mov
pop
aas
ss
lods
add
sbb
stc
push
cwtl
fisubs
fstps
ds
and
in
push
lret
or
in
icebp
lods
xor
xor
pusha
loop
mov
sti
adc
shll
xchg
mov
imul
pop
popa
mov
icebp
inc
jle
sahf
adc
leave
fcmovnb
ftst
dec
lahf
dec
negb
loop
cmp
inc
sub
push
push
sbb
cmp
mov
dec
mov
push
repz
cmp
xchg
stos
insb
loope
popa
shlb
std
addr16
mov
fadds
push
mov
and
push
push
sbb
lcall
sbbb
lea
leave
and
mov
push
loope
mov
fldenv
in
out
jno
jno
mov
push
outsb
or
insl
adc
xor
push
mov
loope
out
mov
loopne
xor
mov
inc
mov
pop
popa
xor
int3
xor
xor
push
jmp
inc
ja
icebp
xchg
repz
xchg
icebp
vpor
add
sub
fadds
mov
popa
mov
fcmovu
movsl
xchg
or
in
add
xor
dec
imul
sar
movsl
in
mov
mov
das
insb
aad
dec
sub
mov
movsl
rcrb
pop
mov
jae
loopne
lret
jmp
fidivrs
adc
adc
aas
lret
lahf
mov
into
imul
or
nop
dec
cmp
aaa
in
push
nop
pop
xor
add
pop
mov
out
mov
push
loope
adc
scas
fildll
arpl
mov
je
test
ret
loop
sub
cltd
int3
mov
jecxz
inc
out
insl
push
xchg
cld
shrl
dec
and
add
pop
imul
daa
loope
jo
jle
fs
mov
aam
push
dec
sub
pusha
pop
mov
push
or
xor
cmp
fwait
dec
fs
or
fldz
movsl
cmp
adc
lahf
mov
leave
mov
je
cli
lods
mov
mov
xchg
mov
jb
icebp
daa
repnz
call
lea
cwtl
xor
lods
ss
or
les
sub
or
xor
add
mov
out
mov
xchg
hlt
int3
clc
clc
enter
mov
in
rclb
pop
jo
dec
fwait
shl
jge
mov
in
call
les
mov
adc
push
jmp
pop
test
and
in
sbb
pop
mov
jg
jbe
sub
xor
aaa
out
cmc
sub
scas
insl
and
xor
mov
daa
lods
pop
push
outsb
lock
lahf
dec
push
push
and
das
bound
enter
push
sub
imul
lahf
sbb
mov
cmp
xchg
xchg
or
movl
jb
and
cmp
lea
out
rclb
ljmp
add
dec
cmpsl
insl
jmp
lret
in
sbb
push
lock
lods
shl
int3
pusha
add
pop
push
xlat
add
test
cld
xchg
sti
fwait
loop
cmpsl
es
inc
or
in
jecxz
mov
leave
jo
movsl
xchg
jb
iret
sbb
and
pusha
mov
test
mov
adc
lret
stos
dec
or
add
fwait
push
pop
cld
movsb
cld
add
subb
push
sbb
clc
ljmp
js
lcall
mov
popa
pop
lods
stos
neg
cmp
adc
mov
jp
mov
jae
push
lds
add
xchg
loope
sbb
cltd
pop
dec
and
es
outsl
cmpsb
ret
jbe
mov
jnp
sub
pop
and
and
shrb
pop
push
sbb
iret
mov
mov
out
sahf
out
xchg
bound
adc
addb
mov
xor
jns
mov
enter
es
sbb
jnp
xor
inc
mov
scas
push
push
pop
inc
fwait
lahf
fstpl
mov
push
inc
mov
mov
cmpsb
imul
jg
push
in
lea
movzwl
mov
mov
sbb
xchg
inc
fiadds
lahf
adc
adc
and
xor
mov
push
xchg
xchg
inc
inc
fdivl
in
in
jno
test
mov
mov
das
jmp
cmpsl
lock
jo
mov
fcomip
cmc
mov
dec
stc
push
adc
inc
cmpsb
inc
insl
movsl
xorl
nop
inc
push
aam
pusha
ljmp
adc
pop
mov
ret
add
repnz
pushf
mov
repnz
je
jae
mov
dec
dec
adc
mov
inc
gs
xchg
xor
push
add
sub
adc
push
divl
sbb
stos
xor
mov
cmp
or
push
push
sub
clc
adc
aam
pop
mov
lcall
sub
dec
cmp
cmp
das
push
dec
dec
mov
cltd
cltd
rcll
sbb
inc
roll
dec
mov
lea
ja
add
mov
xchg
mov
and
cli
sub
jl
aam
xor
ja
flds
iret
push
cmp
cs
divb
jg
lea
or
sbb
sbb
push
cli
movsb
outsl
fisubl
jo
lds
cmp
outsl
int3
adc
mov
data16
stc
inc
dec
pushf
inc
scas
mov
mov
xor
movsb
or
aas
xor
in
push
sbbl
push
mov
fdivs
xor
adc
jmp
mov
fidivl
sub
sbb
inc
xor
xor
or
adc
scas
jns
jbe
and
setp
mov
sub
adc
ret
push
ja
or
sub
lods
aam
sarb
js
test
insb
mov
jge
pop
dec
dec
sub
or
int
mov
pop
add
dec
mull
inc
jle
xchg
push
mov
and
adc
cmp
xorb
in
jmp
jl
enter
push
lahf
lret
xor
or
push
xor
imul
push
mov
lret
sub
dec
push
sbb
jle
call
loopne
cwtl
push
aas
bnd
push
mov
es
dec
sub
daa
add
dec
int
in
mov
push
aad
or
ljmp
dec
mov
daa
cwtl
inc
imul
outsb
je
fnsave
fsubrs
dec
dec
and
pop
push
jecxz
pmullw
outsl
sar
mov
dec
in
dec
push
jmp
les
rorb
lret
jns
sub
dec
and
lcall
out
push
fimull
cmpsl
or
jne
out
pop
lock
clc
aas
stc
cmp
xchg
mov
lods
scas
adc
and
mov
mov
mov
addr16
outsb
adcl
enter
inc
jl
dec
mov
cs
fcoms
sbb
test
lock
mov
loop
test
pop
insl
cli
jbe
mov
push
das
inc
aad
loop
sti
mov
mov
fwait
and
out
mov
cmp
or
jp
xchg
or
es
in
dec
jno
movsw
int3
mov
imul
or
or
stos
movsl
mov
jo
inc
fdivs
mov
icebp
adc
sbb
aad
xor
jo
fcompl
stos
sub
or
test
imul
jno
push
imul
dec
jnp
adcl
and
pop
into
xor
xor
movsb
push
imul
xchg
cwtl
pop
mov
call
push
mov
orl
icebp
add
xor
dec
push
and
sti
loopne
jmp
add
or
jp
dec
pop
ret
mov
mov
or
mov
stc
add
mov
xorl
push
jl
insl
sbb
fldenv
cmp
and
xchg
xchg
pop
dec
and
enter
adc
pushw
mov
int
dec
fdivs
xor
jno
xchg
in
mov
sub
das
pop
ret
je
push
add
aam
inc
push
mov
jb
inc
mov
push
aam
inc
add
mov
hlt
ljmp
push
sub
cs
jb
out
push
dec
xchg
jno
aam
mov
aam
dec
sub
mov
es
push
and
filds
xor
jnp
in
adc
imul
sbb
ror
xchg
jo
xchg
mov
aas
xor
stos
jl
insl
xor
or
cld
jo
jecxz
or
inc
ljmp
add
xlat
mov
jne
fucomip
dec
mov
push
adc
mov
fwait
jmp
xchg
xchg
cmpl
jp
adc
lds
mov
jbe
sahf
sub
and
call
add
imul
xor
mov
sbb
out
test
in
inc
in
decb
and
test
cmp
jbe
lret
mov
sbb
das
inc
mov
shl
adc
xor
jle
jo
jne
fmuls
jp
add
pop
fisubrl
sarl
dec
mov
or
insb
movsl
dec
nop
shrl
mov
sbb
test
push
pop
mov
into
movsl
in
inc
out
mov
sub
rolb
pop
pop
dec
jnp
push
push
mov
repz
add
cmp
cmpsl
lock
test
adc
sbb
mov
cld
ja
iret
imulb
adc
sahf
jae
lcall
int
cmpsl
rcll
jp
test
cmp
mov
arpl
cs
jo
fdivrs
loop
cmp
mov
sub
cmpsl
xor
aad
pop
cmp
add
fwait
out
dec
addl
dec
push
in
mov
outsb
stc
push
adc
push
push
xor
iret
adc
jne
roll
pop
stc
push
xor
inc
xor
scas
mov
or
ret
dec
cmpsb
xchg
jne
cmpsb
loopne
sub
popf
push
fwait
jmp
cmpl
dec
in
rolb
sarl
jne
movsl
or
pop
xor
lods
inc
sahf
fmulp
cs
pushf
pop
inc
rcrl
push
mov
lods
mov
aas
sub
sub
int
pop
and
sti
mov
faddl
xor
add
push
mov
in
or
fisubl
fdecstp
sar
mov
loop
jne
and
outsb
roll
add
and
push
addr16
dec
stos
adc
fcmovb
adc
pop
cmp
sub
mov
and
xor
adc
les
and
cmpsl
cmpsb
hlt
outsb
std
mov
hlt
ds
sbb
nop
jns
cmpb
cmp
push
outsb
ds
mov
dec
frstor
mov
out
add
call
and
movswl
xchg
bound
xchg
imul
cmc
push
fldcw
in
ja
cs
imul
aam
jp
out
sub
out
and
scas
dec
nop
jne
lcall
push
dec
pinsrw
insl
ss
add
outsl
movsl
movq
jno
cs
aam
mov
repz
cmp
cld
clc
hlt
mov
xchg
inc
jge
push
fsubs
mov
dec
out
fsub
decl
rcll
push
push
dec
mov
mov
test
rcll
out
lret
cmp
xor
cmp
sub
inc
mov
push
pop
jmp
push
jl
int3
les
xor
jge
or
adc
mov
pop
or
fisubrl
repz
and
push
add
lods
cmp
mov
pop
mov
test
add
outsl
test
xchg
xor
loope
jmp
xor
xchg
xlat
scas
pop
shlb
inc
fwait
movl
fimuls
mov
jno
in
adc
addr16
std
pop
xor
cmp
je
lds
inc
dec
inc
adc
jg
jae
ret
mov
push
movsl
sub
or
cwtl
int
lcall
out
cld
add
xor
iret
xchg
mov
inc
push
gs
sub
scas
in
cmpsb
dec
xchg
push
sbb
and
or
imul
xor
inc
pusha
data16
mov
jne
jge
mov
pop
fsts
inc
inc
fisubrs
pop
ret
dec
lods
mov
insb
xlat
xchg
fsubs
cmp
mov
out
mov
fmuls
or
hlt
jp
xchg
sti
fdivs
outsb
add
mov
mov
or
mov
mov
bound
push
jno
mov
fwait
xchg
ret
mov
loopne
mov
add
aas
xchg
pop
inc
lcall
jae
push
fisttpll
mov
or
adc
xchg
xchg
mov
jp
fwait
add
cmp
stos
adc
jl
xorl
jp
mov
mov
or
outsw
mov
lea
mov
or
mov
lea
push
or
dec
inc
test
push
mov
mov
loopne
and
pop
mov
popf
cld
mov
lret
lods
fwait
or
std
or
lahf
es
and
test
push
fwait
xor
scas
sub
lcall
je
sub
xchg
lcall
lods
lods
imul
sub
push
lds
test
inc
sbb
fists
imul
sub
dec
addr16
add
hlt
mov
aaa
cmp
fcmovnb
jne
rcll
pop
xlat
ret
test
mov
xchg
sbb
sub
jl
stos
cmpsb
sub
mov
mov
call
or
js
out
aas
sbb
mov
push
cmpsl
jl
loop
inc
lret
ss
sub
cmp
cmp
mov
pop
add
mov
scas
iret
rcrl
xlat
gs
cmpsl
mov
lahf
mov
sbb
sbb
push
cwtl
imul
mov
pusha
out
or
mov
ret
faddl
jno
mov
out
rcrl
cltd
in
scas
mulb
dec
mov
roll
cli
sti
das
adc
mov
dec
out
sub
push
sbb
enter
mov
dec
xor
leave
jmp
xlat
scas
rcll
in
add
jns
xor
aaa
into
mov
addl
sub
ret
pop
cld
push
mov
lahf
jne
call
jnp
cli
sbb
and
lods
notb
and
rorb
pop
pop
sbb
xchg
mov
mov
mov
test
jge
inc
jno
xchg
out
addr16
je
jl
shrl
inc
mov
xlat
sbb
pusha
jo
sub
popf
ret
insb
dec
hlt
xchg
js
cmc
mov
leave
push
out
sub
pop
std
mov
shr
sbb
fs
xor
mov
add
repnz
cwtl
jmp
das
fincstp
sbb
jmp
cmc
jo
outsl
cmp
outsb
outsb
adc
push
cmp
arpl
and
faddl
je
jg
iret
repz
sbb
stc
negl
sub
inc
or
push
ja
hlt
sbb
push
in
daa
or
arpl
add
popf
sub
lahf
icebp
out
xor
dec
or
fists
sbb
push
call
xchg
jb
xor
or
in
lret
xchg
inc
sti
lcall
adc
insb
mov
loopne
dec
int
dec
nop
rol
pop
inc
jmp
je
dec
jnp
icebp
stos
daa
movsb
mov
push
dec
sub
lds
popf
jg
pop
sub
out
cmp
outsl
dec
lcall
call
decb
test
pop
leave
rorl
mov
lahf
adc
cs
rcrl
roll
in
mov
jg
stos
push
into
repz
and
outsl
insb
jo
repnz
cmp
jae
adc
xor
in
mov
mov
sbb
in
sub
das
add
mov
push
or
and
adc
jmp
leave
sub
js
outsl
sub
leave
mov
ljmp
pop
stos
dec
clc
fst
fdivr
pop
lcall
jmp
dec
es
mov
fwait
mov
ret
jno
pop
out
loop
inc
cwtl
pop
xor
mov
ret
or
int
and
ljmp
add
lods
out
test
xchg
xlat
cli
int
mov
lea
imul
loope
xchg
fisubrs
push
jg
xchg
adc
jmp
nop
mov
loopne
lea
movsl
xor
test
jne
fists
mov
xchg
sahf
shl
xchg
and
push
sahf
scas
sub
cltd
iret
xchg
loope
repnz
ljmp
mov
shll
or
xor
pop
das
push
adc
mov
test
outsl
addl
in
scas
mov
jecxz
in
test
movsl
adc
pop
rclb
es
pusha
lds
jp
jl
loop
rclb
dec
cli
in
test
sbb
aam
xchg
and
or
sub
loopne
xor
test
mov
clc
cmp
je
fsubl
cltd
xchg
cmc
lcall
std
sahf
jnp
push
xor
sbb
xor
xor
pop
push
jns
fildll
fcoms
fdivl
ret
pop
out
xlat
inc
lcall
jl
jne
adc
in
inc
sbb
jecxz
lds
jb
lea
cltd
push
in
mov
push
push
jb
add
divps
xor
nop
das
roll
and
add
nop
or
js
cmp
push
ss
in
sarb
jle
hlt
ds
add
mov
movsl
mov
xor
repz
fistps
sub
mov
jb
jne
lock
sbb
push
divl
clc
pop
sahf
xor
popa
lret
jno
test
aam
adc
or
aad
pop
dec
sbb
sbb
fsubrl
push
xchg
xchg
xchg
jb
pop
mov
adc
add
lcall
xor
loope
cmp
and
dec
xor
inc
mov
decb
xor
in
push
jmp
xor
jbe
aam
push
mov
imul
jno
stc
mov
movsl
mov
pop
mov
inc
add
xchg
sbb
push
fdivrs
int3
pop
data16
stc
push
jecxz
loop
sbb
push
mov
cmp
std
movsl
mov
push
mov
iret
fidivs
loopne
test
pop
ds
mov
hlt
add
dec
jbe
push
je
push
insl
ret
mov
fsqrt
cmpsb
sub
shl
sarb
ss
je
jge
int
stc
sub
shlb
and
int
test
ret
jecxz
xlat
pop
and
dec
lock
cmpsb
lds
sbb
push
lds
cmp
cmpsl
sub
sub
out
mov
mov
dec
and
dec
popf
in
gs
adc
fidivrs
stos
adc
mov
add
push
in
xor
dec
mov
stos
aam
xor
scas
push
loope
cmpsb
lahf
lret
fistl
adcb
sbb
pop
cmp
xchg
jmp
pause
stc
inc
xchg
inc
cmp
sub
popa
rcrl
lret
imul
les
push
pmuludq
push
out
jae
lods
lcall
bound
adc
sti
ja
mov
inc
pop
push
in
cwtl
add
lods
or
jne
out
xor
and
es
iret
flds
aaa
insb
dec
lods
pushf
jns
dec
pop
push
lods
jmp
inc
or
add
lret
pop
or
or
adc
in
push
and
and
bound
gs
xor
cltd
mov
and
xor
fistpl
lcall
pop
fsincos
push
cmp
xlat
insl
mov
mov
dec
int3
out
les
pop
mul
sbb
leave
push
sbb
mov
add
xchg
ljmp
sub
das
inc
test
iret
push
stos
mov
fcmove
dec
inc
enter
rcrl
ret
push
sub
imul
and
lcall
cmp
pushf
movsb
dec
pop
mov
out
xor
mov
in
push
jg
pop
push
aam
and
mov
cmp
push
pop
lods
mov
es
dec
push
inc
shlb
scas
pop
cld
mov
cmpb
lock
jo
sub
dec
and
imul
aaa
pop
mov
roll
jne
pop
add
scas
mov
subl
pop
xor
mov
fists
push
push
aad
mov
lea
xchg
test
das
pop
dec
stc
stos
mov
sub
aas
sub
out
cwtl
je
pop
in
add
and
ret
push
add
icebp
adc
test
jo
mov
sti
sbb
cmp
repz
fbld
dec
out
xchg
xor
pop
test
mov
dec
scas
dec
lods
xor
inc
or
push
bnd
je
stos
in
in
ret
aaa
imul
das
iret
les
xor
mov
or
nop
pushf
and
shrb
cmp
lea
imull
popa
and
inc
cmp
scas
mov
insb
xchg
jecxz
inc
test
xchg
sub
int3
rcl
adc
adc
int3
call
cltd
push
jp
adc
cmpl
and
mov
addl
xlat
mov
or
mov
mov
popa
mov
dec
aas
jne
imul
sub
inc
je
ftst
add
hlt
mov
sbb
in
test
pop
pushf
or
jns
cwtl
inc
xor
les
and
movsl
hlt
insl
push
scas
adc
sub
cli
jecxz
sar
mov
jecxz
js
adc
sub
iret
add
pop
lahf
xchg
adc
mov
inc
jle
or
test
and
mov
aaa
decb
bound
movsl
pop
andl
xchg
cmpsl
pop
mov
xchg
mov
lock
xor
xchg
jecxz
add
mov
add
lds
aaa
ja
mov
and
fidivrl
push
dec
xchg
adc
es
fstl
cli
mov
pop
nop
loopne
bound
mov
sub
nop
cltd
shll
mov
jno
in
inc
rcr
outsl
inc
in
ret
push
adcb
ds
stos
add
jns
std
adc
dec
leave
lcall
ret
jbe
inc
loop
or
jne
pop
movsl
push
test
mov
adc
pop
addr16
mov
mov
pop
adc
adc
aad
push
or
lcall
add
pop
and
stc
sub
in
cmp
fcomip
push
daa
fstl
cmc
daa
mov
shlb
fs
pop
cld
popa
addr16
mov
mov
ss
jb
or
pushf
fwait
push
xchg
or
stos
lds
imul
jb
rorl
xor
iret
push
xchg
sbb
and
xor
stos
arpl
pop
ds
aaa
ret
add
ds
popf
xchg
pusha
adc
mov
nop
and
cmp
sahf
jecxz
add
or
cld
sbb
or
add
inc
iret
clc
and
mov
scas
rcll
repz
push
pop
cmp
rorb
cmp
aas
sahf
mov
outsl
dec
dec
add
scas
mov
sub
mov
or
testb
mov
inc
dec
mov
cmp
jne
cmp
mov
les
xchg
int3
insb
ss
jns
push
pushf
and
sub
leave
adc
add
xchg
cli
mov
aam
or
nop
btc
dec
imul
pop
es
mov
adc
pusha
mov
enter
int3
mov
jmp
iret
sbb
mov
mov
push
push
inc
adc
cmc
and
std
push
or
xchg
cmp
add
push
jmp
jmp
addr16
mov
add
push
xchg
inc
fsubl
aad
push
repz
sbbl
jno
push
cmp
jl
outsb
cwtl
cmp
push
xlat
cltd
cmp
das
pop
jmp
mov
push
ror
ss
xchg
lods
lds
lret
push
push
mov
test
sub
jp
xchg
rcrb
leave
fisubrl
shl
inc
inc
or
stc
add
push
mov
xor
loopne
adc
repz
test
jl
push
bound
fprem
sti
mov
fidivl
cmp
scas
jecxz
in
xchg
inc
xor
jp
fbstp
call
mov
add
imull
test
lret
mov
sbb
lea
out
jb
mov
stc
jp
in
sub
dec
loop
lret
mov
mov
cli
add
fmulp
and
cmc
int3
jmp
push
es
push
mov
dec
mov
push
rcll
sahf
jne
mov
cmpsl
out
inc
sti
pop
and
dec
xchg
rorl
jbe
and
mov
inc
ds
sbb
lret
sub
test
add
or
jne
mov
popf
fwait
sub
mov
inc
sbb
filds
insb
xchg
push
push
loopne
out
pop
xchg
fsts
inc
adc
iret
add
mov
mov
mov
test
lcall
pusha
xchg
or
fs
xlat
add
add
lods
dec
mov
pop
rcr
or
dec
mov
sub
mov
cmp
jns
cs
fdivs
icebp
push
sub
cmc
movsb
cmp
jmp
pop
mov
dec
stc
scas
cmpl
sub
jecxz
push
push
push
incl
cmp
call
xchg
cmpb
adc
jmp
je
lret
test
inc
and
and
int
jns
repnz
mov
dec
repz
cld
pop
mov
xor
sbb
int
into
shll
fwait
mov
inc
cmc
xchg
insb
mov
shl
lret
repz
fs
pop
fs
pop
fisubl
pop
jb
lea
cmp
hlt
sub
pushf
scas
xchg
cmp
and
out
jge
mov
xchg
xor
jb
cmpsb
mov
mov
push
and
mov
imul
cmc
mov
shl
subl
pop
sahf
mov
fsub
int3
cmp
mov
and
adc
xchg
lret
adc
inc
icebp
enter
int3
inc
ret
jg
setg
mov
mov
imul
cmp
sbb
push
xchg
out
jmp
jnp,pt
and
mov
xchg
imul
aad
xor
scas
lods
xchg
popa
hlt
mov
hlt
sahf
stc
test
test
mov
jns
pop
jp
xchg
sub
addr16
mov
daa
sub
add
sub
adc
push
mov
xchg
lock
lods
inc
cmp
cmp
sahf
mov
fcmove
mov
jne
xchg
push
lcall
std
lea
mov
jo
jge
repz
jge
sahf
test
inc
push
aad
mov
shr
push
mov
push
stos
lcall
imul
fucomp
rorb
push
mov
aas
fimuls
cmp
cli
out
dec
add
lcall
or
dec
xorb
cmpsl
hlt
popfw
mov
out
popf
data16
dec
out
inc
sbb
xor
pop
pushf
js
push
popf
movsb
bnd
and
inc
sbb
xor
movsb
dec
or
pop
pop
sub
mov
not
pop
stos
add
sbb
cmp
push
inc
cmp
lock
inc
dec
lock
test
xchg
adc
aad
jl
in
jns
inc
dec
mov
jg
enter
xor
mov
rcll
or
in
xchg
out
mov
or
gs
jae
dec
or
adc
jge
sbb
and
mov
push
push
sub
dec
bound
bound
lret
or
aam
inc
lret
testb
lret
stc
jmp
stos
aam
outsb
mov
out
popa
lahf
lea
mov
rcrb
mov
and
pop
or
lods
lods
aad
dec
or
in
mov
int3
jb
push
and
ficompl
sub
mov
sbb
into
test
test
imull
push
lock
fdivrl
das
imul
in
cmpsl
in
or
add
mov
add
outsb
sbb
pop
push
xchg
mov
js
lea
xor
push
pop
adc
add
dec
es
out
cltd
out
xchg
fst
and
idivb
jmp
js
stos
jle
cmp
xchg
inc
mov
lret
xor
test
inc
inc
dec
mov
popf
mov
mov
cltd
add
mov
inc
xor
test
cmp
int
divl
ljmp
mov
inc
mov
xchg
mov
nop
mov
addb
repnz
mov
ret
jp
cmp
cmp
outsl
lock
jo
dec
fidivl
lcall
pop
fistpl
jae
xchg
imul
fsub
fcoml
pop
cwtl
pop
add
mov
test
mov
dec
jle
push
add
sub
shrb
mov
orl
adc
out
fidivrs
inc
lahf
adc
inc
jbe
pop
mov
mov
push
pop
and
adcb
scas
notl
push
and
int3
cmc
jne
dec
inc
bound
sbb
in
sbb
clc
cmp
jb
sub
pop
mov
adc
mov
ror
jle
in
fbstp
iret
pop
fildll
fisttpl
std
cmp
mov
lret
cmp
inc
testl
adc
iret
les
scas
inc
dec
mov
addb
jae
jb
push
cmp
sub
push
inc
mov
adc
or
pop
mov
out
cmp
ja
or
into
das
or
stos
repz
jle
icebp
out
push
dec
push
cwtl
cmp
inc
xor
ficomps
sahf
jb
loope
arpl
out
jge
dec
out
fwait
popf
push
je
popf
add
call
lds
pop
fmuls
sub
and
ret
testl
xchg
nop
mov
mov
loopne
xchg
sub
adc
adc
fdivs
call
ja
push
add
and
xchg
mov
xor
push
dec
in
lret
mov
leave
test
nop
lock
mov
test
xchg
pop
aad
jl
cld
lcall
enter
jbe
inc
insb
cmp
das
dec
jmp
icebp
sti
jmp
pop
inc
mov
mov
inc
push
dec
icebp
lods
movsl
dec
dec
into
push
sub
cmp
dec
clc
add
lcall
fidivl
dec
and
pushf
xchg
in
cmpsb
pushf
cli
xor
sbb
js
dec
cltd
pop
xchg
and
xlat
dec
repnz
imul
lock
es
fldcw
lahf
pop
sbb
rcll
xor
add
pop
sti
mov
xchg
sub
ret
push
enter
xor
ret
jne
insl
clc
stos
xor
pop
dec
dec
pop
mov
xchg
std
loope
xor
add
fldln2
and
popl
out
es
cwtl
leave
jge
jns
xor
cwtl
jb
pop
scas
arpl
sub
insl
pop
loopne
in
lods
cmp
jmp
xor
sub
and
test
and
mov
mov
jnp
sub
incb
cmp
adc
adc
inc
add
mov
lds
clc
loop
jo
mov
adc
fmul
jae
sbb
and
es
pusha
cli
mov
or
roll
sub
hlt
xor
in
outsl
lret
dec
push
dec
cwtl
add
mov
jmp
sub
push
and
or
sysenter
rcr
cmp
add
or
call
fmull
adc
pop
fs
xchg
jne
ja
sbbb
aas
xor
cld
inc
addl
cmp
loope
mov
insb
and
xchg
push
inc
add
das
jl
cmp
fildll
xor
jo
push
mov
mov
add
mov
jmp
adc
inc
pop
outsl
andb
aas
test
or
push
or
mov
aam
test
lea
mov
push
add
push
and
mov
out
pusha
pop
mov
or
scas
or
jno
sub
movsb
aaa
pop
inc
pusha
pop
pop
inc
das
stc
mov
roll
xchg
mov
mov
jns
orl
notb
and
sub
cmc
sahf
repnz
sbb
inc
dec
and
dec
push
daa
out
xchg
test
call
sbb
cli
push
shlb
mov
cmp
jg
mov
add
out
icebp
fbstp
and
pushf
xchg
or
neg
sub
int3
das
jmp
cwtl
ljmp
adc
dec
test
orb
mov
and
mov
pop
pop
xchg
fimull
or
pop
mov
lcall
and
iret
jmp
push
mov
int
xchg
jg
lahf
addr16
outsb
ret
dec
xchg
pusha
adc
mov
sarl
testl
out
insl
cmp
in
jne
iret
fsub
fldenv
dec
ret
inc
add
jbe
dec
rcll
stos
adc
aad
xor
push
mov
xchg
cmp
lea
push
jb
sahf
or
or
pop
imulb
pusha
jmp
lret
lcall
sbbl
cmpsb
xor
outsb
xor
sub
mov
or
add
mov
mov
mov
push
mov
adc
sbb
pop
pop
loop
xor
call
test
jns
dec
mov
loopne
sub
movsb
xchg
scas
push
aam
add
fistpll
rcl
lret
xchg
test
aaa
aam
ret
ds
push
ret
xchg
add
cwtl
add
hlt
aaa
call
jae
daa
daa
inc
nop
cmp
clc
push
popa
ror
ror
xor
inc
out
int
mov
xor
cs
clc
push
and
xchg
ja
shlb
cmpsl
push
daa
out
push
fndisi(8087
je
mov
xor
sbb
popf
or
add
insl
ljmp
fldcw
cmp
jno
addr16
xorb
dec
pop
sbbb
test
bound
mul
daa
pop
das
push
rolb
bound
outsl
adc
and
icebp
pop
enter
xchg
mov
push
mov
stc
sti
push
jge
dec
pop
dec
push
fildll
xchg
xchg
nop
mov
stos
in
in
jns
sbb
cmp
lock
or
fcoms
inc
jnp
or
dec
jno
loopne
int3
fisttpl
push
push
jne
pop
adc
pop
aam
ljmp
movl
negb
push
jmp
push
ret
and
mov
cmp
pop
sbb
push
adc
cmp
in
or
cmpsl
xor
xchg
pop
jne
jmp
push
inc
cmp
loope
cmp
enter
nop
or
mov
inc
sbbl
sbb
fbld
int3
pop
push
roll
movsl
or
mov
shlb
iret
xchg
in
sub
out
sbb
mov
imul
push
into
test
add
or
aam
shll
xchg
inc
xchg
xor
mov
aas
test
cmp
push
testb
push
push
and
adc
pusha
dec
sti
popf
shl
outsl
mov
aad
shlb
xor
adc
data16
fcomi
in
mov
test
leave
scas
adc
pop
in
sub
lock
inc
cwtl
sub
inc
mov
in
jb
mov
in
mov
jns
cltd
mov
pop
push
cltd
xor
pop
in
sub
bound
pop
lock
lahf
in
jb
insb
enter
add
cmp
in
dec
in
mov
pop
mov
andl
out
outsb
mov
mov
int
xor
stos
cmpsb
jo
bnd
mov
sub
bound
mov
fsubl
adc
xor
mov
push
sti
das
mov
xor
or
pop
mov
shl
sub
inc
subl
jle
enter
pop
push
and
push
mov
imul
loop
or
test
mov
xor
mov
mov
imul
pop
xchg
out
sbb
or
out
rorl
cmp
jns
in
adc
mov
dec
fildl
bound
lcall
out
cwtl
dec
shlb
pop
mov
out
mov
mov
mov
pop
rorl
popf
out
push
inc
cmc
or
xchg
fidivs
outsl
cltd
cli
sub
add
adc
ds
mov
fmull
or
and
fidivl
xchg
sbb
sarb
das
dec
push
ret
pusha
cmp
jecxz
aam
sahf
mov
inc
add
fwait
mov
or
mov
lods
dec
lret
push
jne
cmp
leave
sub
lcall
rcl
mov
xorl
test
inc
push
mov
aas
sub
sub
sub
lret
popf
cmpsb
mov
inc
push
adc
inc
das
into
aas
lahf
out
pop
mov
in
daa
rcll
negb
push
sahf
mov
jb
out
cld
mov
add
adc
sbb
shrl
insb
shll
mov
push
pop
fsub
bound
jg
lcall
pop
lret
iret
dec
pop
jne
sub
or
xchg
ficomps
pushf
pusha
add
imul
in
inc
push
dec
sahf
cmpsb
test
fwait
jne
sbbl
inc
das
repnz
ss
lods
and
adc
in
stc
cltd
xor
dec
mov
pop
or
jno
add
in
xchg
jp
mov
jo
iret
sub
jecxz
or
inc
stos
mov
push
scas
inc
push
outsl
pusha
pop
in
call
out
mov
pop
add
jmp
insl
mov
pusha
adc
cmp
pop
test
ljmp
mov
xor
aad
stos
push
cmc
lret
stos
lock
xor
jno
jns
mov
dec
lods
pushf
dec
leave
imul
scas
jae
cmpsb
and
movsl
outsb
outsl
mov
clc
inc
mov
xlat
mov
movsb
jg
shld
jge
pop
adc
or
aad
loop
jg
dec
or
clc
mov
jae
js
jge
mul
cmp
andl
cmp
xchg
cmp
xor
xchg
xor
add
in
es
pop
call
jge
xchg
leave
xor
pushf
mov
fnsave
add
sti
dec
jecxz
sbb
mov
out
inc
rcll
stos
lret
push
lds
sbb
inc
push
fs
test
cmp
fistpll
xchg
jno
and
xchg
js
jo
out
mov
iret
cli
cwtl
mov
mov
mov
test
xchg
push
mov
pop
lcall
imul
mov
add
out
xchg
cmp
sub
fcmovbe
clc
mov
adc
sub
into
ljmp
jno
add
cmpsw
ss
clc
test
dec
ljmp
adc
imul
decb
pop
cmp
daa
cmc
je
sub
inc
and
xor
and
das
bound
push
data16
stos
pop
lods
push
add
les
and
imul
jbe
std
or
rolb
sub
push
xor
dec
data16
outsb
mov
stos
aam
push
bound
mov
fldl
push
outsl
mov
ja
mov
sub
sti
jmp
pop
popa
sub
jo
cmpsb
jns,pt
call
sbb
lods
out
adc
scas
repz
mov
aam
jmp
mov
test
xchg
xchg
dec
clc
adcl
and
pop
jp
fldt
sbb
push
aas
in
jo
sub
jo
pop
cmp
loope
pop
cmc
stos
aad
stos
xor
in
and
inc
sub
add
add
loop
adc
dec
cld
sub
insl
mov
loop
xchg
mov
movl
sub
add
add
or
cmp
inc
or
test
xchg
pop
pushf
mov
push
dec
gs
jge
pop
loope
cmp
mov
call
fwait
inc
xor
cmp
mov
pop
inc
rcll
cmp
mov
cwtl
lret
scas
fcompl
jns
adc
sub
test
dec
pop
out
inc
mov
jae
in
mov
mov
cmpsb
jl
adc
out
adc
or
int3
xchg
push
push
out
push
adc
mov
ret
jecxz
inc
sub
sub
repnz
push
jge
cmp
outsb
in
inc
bound
xor
pop
xchg
add
clc
mov
repz
shrb
push
xor
in
hlt
inc
xchg
jmp
out
decl
repz
leave
sbb
push
test
neg
and
loopne
aam
fimull
xor
addr16
js
insl
adcb
ficoms
dec
insl
pop
pop
aad
call
popa
xor
push
pop
dec
pop
adc
cwtl
inc
cs
push
jl
jp
dec
pop
push
jge
push
movsl
add
enter
scas
adc
cmc
stc
test
pop
or
mov
mov
data16
mov
or
cmpl
pop
and
mov
sbb
test
push
shr
cs
aam
iret
mov
sahf
out
jmp
and
fucom
pop
aas
in
addl
sub
or
int3
xor
inc
je
dec
pop
xchg
insb
pop
pop
xchg
pop
cmp
fwait
pop
test
add
lret
in
lock
sub
aaa
sub
cmpsl
mov
mov
fnsave
or
ss
mov
or
in
lret
mov
popa
xchg
call
dec
in
or
fildl
shrl
xchg
mov
sbb
rcll
cltd
dec
jge
mov
inc
mov
ret
movsb
test
test
pop
testl
jmp
jne
jmp
inc
out
fidivrl
fnstcw
mov
pop
es
fnstcw
leave
adc
imul
or
mov
mov
sbb
cli
push
data16
and
hlt
add
mov
iret
dec
fwait
in
mov
rcll
call
sahf
add
call
mov
dec
ss
adc
push
sub
xorl
insl
xor
test
arpl
fadds
fidivl
and
sbb
push
cmp
test
push
adc
adc
inc
les
loopw
push
sti
test
fcmovbe
lret
lret
testl
push
sub
dec
aaa
fistpl
out
push
aas
mov
pop
push
mov
ret
pop
mov
cwtl
ret
pop
popa
cmc
push
in
xchg
pop
or
int3
jo
cmc
inc
aad
pop
lret
inc
stos
mov
sbb
jl
sti
xchg
js
scas
xor
nop
cltd
xchg
inc
mov
add
adc
and
lahf
xchg
jns
sbb
test
mov
cmpsb
xor
test
jmp
xor
lea
fadd
test
xor
icebp
out
sub
mov
rcr
loop
cli
sbb
ret
aad
je
xchg
outsl
mov
outsl
ja
cmpsl
insb
pop
mov
lock
insl
dec
pop
adc
cld
pop
fdivrl
xchg
or
cmpsl
mov
or
cld
jecxz
mov
xor
dec
add
lret
lahf
outsb
pop
std
jg
repz
xchg
icebp
insb
mov
mov
rcll
ret
push
and
add
sub
shrb
jo
mov
pop
shll
repz
dec
xchg
jl
push
rorb
insl
xor
xchg
fistps
and
xchg
sbb
mul
jb
or
jle
push
sub
imul
or
fnstcw
push
mov
and
inc
push
in
cmpsb
clc
fwait
xchg
sub
push
mov
cld
and
stos
push
jp
or
ret
ret
ret
or
pop
mov
dec
iret
mov
cmp
ret
mov
fs
gs
loope
jmp
mov
cmpsb
mov
xorb
cmp
push
adc
jae
pop
and
xchg
jecxz
adc
jle
sub
jle
js
aas
sub
mov
outsb
cmp
lret
push
shlb
cmp
das
or
fsubl
xor
fwait
and
dec
pop
and
inc
adcl
pop
rcrl
xchg
jae
loop
push
leave
ftst
jl
push
fs
scas
fbld
cli
or
push
lock
push
movsl
dec
mov
adc
int
hlt
sub
loop
dec
insl
iret
sbb
test
push
jae
inc
arpl
lcall
mov
cs
xchg
shll
add
xchg
pop
lretw
and
std
out
sti
mov
popl
in
fbstp
fldl
cmpsb
out
daa
xorl
xor
sahf
stc
push
xlat
dec
and
int3
test
pusha
andps
cltd
cmp
out
les
pop
cmp
mov
push
push
jp
ficoms
das
mov
add
iret
loopne
xchg
sbb
les
add
jae
xor
dec
push
and
loopne
dec
cli
mov
jo
mov
add
popf
ds
pop
mov
imul
inc
push
mov
idivb
pop
xor
jg
rclb
and
mov
jns
incl
add
xlat
pusha
sbb
cmp
mov
mov
dec
or
test
test
pop
add
fistps
movsb
sbb
clc
and
sbb
xor
sub
pushf
push
sub
jmp
insb
jnp
or
clc
add
repz
dec
inc
adc
sub
jecxz
popf
inc
jmp
cmp
and
inc
lock
sbb
mov
sbb
xchg
rolb
sbb
cltd
pop
xor
ds
sbb
push
std
stc
rol
pop
dec
jecxz
add
cmp
mov
jbe
xlat
or
inc
push
lret
test
sub
add
xchg
lods
cmp
mov
out
fabs
fisubs
into
mov
out
and
jle
adc
mov
punpckhbw
subb
ret
aaa
cmp
pop
cmp
dec
imulb
iret
adc
or
loopne
mov
jnp
xchg
shrb
int
or
ret
rcr
or
mov
repnz
xchg
jmp
scas
lret
cld
insb
fdiv
sub
or
jae
pushf
mov
lret
cmpsl
lcall
pop
repz
repnz
or
add
push
pop
outsb
cmpsb
lret
out
fucomi
fnstsw
jmp
jo
filds
sub
push
adc
or
notl
jb
push
js
in
add
sbb
jp
cld
ljmp
pop
dec
mov
xchg
sbb
cmp
fistpl
xchg
test
adc
jg
mov
cmp
cmp
shl
les
adc
mov
out
aas
mov
xor
dec
xchg
ljmp
icebp
push
in
add
pop
sub
push
pop
cmp
cmp
ss
test
or
repnz
mov
and
hlt
push
cmp
arpl
icebp
or
lahf
pusha
inc
mov
xor
lods
cmpsl
push
mov
adc
lret
scas
dec
and
scas
adc
xchg
fidivl
stos
jo
and
lret
or
adc
repz
das
cltd
sbb
imulb
cmp
jne
outsb
cmp
jge
sbb
or
mov
adc
cltd
fnstcw
pop
xchg
sbb
xor
out
or
push
cmp
inc
lret
scas
cld
cli
xor
mov
pop
les
sti
adc
cmc
mov
adc
dec
mov
or
mov
sbb
push
add
addr16
jmp
push
aaa
and
lea
loopne
scas
sub
mov
cmpb
ficoms
sub
cmp
aaa
dec
lds
pop
push
sub
mov
arpl
jmp
push
pop
enter
adc
repnz
mov
movsb
xor
jns
hlt
xchg
repnz
loop
gs
and
mov
mov
and
jno
jle
jns
dec
xchg
dec
das
int
lret
or
dec
pop
nop
pop
mov
imul
jle
mov
fldenv
or
fldenv
push
idivl
shll
pop
and
lcall
std
f2xm1
icebp
fmuls
push
repnz
scas
mov
mov
mov
mov
dec
mov
dec
jp
out
lea
sbb
dec
testl
test
sbb
pop
mov
jnp
mov
adc
adc
sbb
add
dec
mov
dec
in
push
stc
dec
test
or
mov
fld
mov
je
popf
or
cmpb
sub
lds
sub
imul
outsb
popa
inc
mov
cwtl
lcall
mov
idiv
rorl
imul
movb
inc
int3
rolb
mov
ja
xorl
aam
lds
imull
mov
xchg
dec
js
inc
sbb
dec
add
data16
nop
sbb
cmp
in
jbe
lods
fstl
and
add
mov
xor
ljmp
mov
mov
lds
nop
push
filds
pop
scas
push
xchg
test
dec
cmp
jecxz
loopne
adc
or
lods
push
xchg
in
mov
test
aad
adc
inc
mov
je
mov
or
loop
cs
jecxz
js
cmp
xchg
test
insl
or
xchg
dec
cmp
pop
enter
jmp
nop
inc
push
in
adc
inc
mov
ljmp
int3
mov
cmpsl
push
push
and
imul
mov
mov
int
cmpsb
inc
or
iret
sbb
mov
adcl
dec
xorl
lret
addr16
fadd
cmp
push
call
xchg
mov
inc
push
sub
lcall
xor
mov
xchg
dec
lds
movsb
dec
out
dec
xor
xchg
xor
add
jb
in
shr
loope
or
daa
xor
mov
bound
dec
int3
lcall
sbb
sar
inc
inc
in
icebp
leave
push
data16
loopne
lret
pop
pop
divl
pusha
push
xor
aas
popf
test
stc
fdivrl
sbb
cmp
stos
arpl
fadds
int
dec
cltd
xchg
sub
fs
add
cwtl
test
cld
aad
add
mov
xchg
aam
call
scas
iret
jae
cwtl
or
sbb
push
mov
scas
test
pop
popa
and
in
js
cwtl
loop
out
mov
or
popa
push
vcvttps2dq
out
stc
cmc
xor
clc
inc
mov
dec
push
movsl
movsb
fistpll
es
jecxz
dec
push
hlt
mov
subl
inc
inc
jo
loope
jmp
test
and
mov
xchg
repnz
mov
inc
push
xor
or
testb
cmp
daa
aas
cltd
cs
lods
loop
loopne
test
loope
mov
mov
inc
or
addr16
jbe
mov
out
dec
iret
icebp
movsl
mov
mov
xchg
xchg
xor
test
cmp
inc
push
out
iret
sbb
dec
sbb
inc
outsl
cmp
sbb
jo
adc
cmpsb
ficompl
fisubrs
fs
daa
mov
dec
movsb
inc
out
shrl
stos
and
push
iret
icebp
jl
pop
orb
push
int
sub
pop
lds
scas
jg
dec
pop
into
jmp
mov
mov
cmp
sti
sti
es
movsb
sti
adc
out
std
movsl
xchg
aam
clc
into
mov
dec
mov
loopne
add
shrl
xchg
and
insl
fs
add
fisubrl
aas
mov
mov
and
jmp
adc
xor
subl
dec
or
xchg
fcmovnb
divb
imul
fldenv
fadds
fcmovnb
inc
lods
cli
aam
push
adc
outsb
and
jbe
jo
repz
and
test
or
inc
je
xor
mov
xchg
sarl
hlt
sbb
cltd
add
add
dec
jecxz
lods
sub
sbb
fbld
mov
ljmp
out
aaa
cs
imul
jo
nop
cltd
pop
fcomi
aas
and
xchg
cmp
cmpsl
dec
pop
push
dec
xor
movsb
pop
lahf
inc
adcl
andl
fisubl
in
cmp
repnz
or
cmpsl
mov
mov
mov
pop
test
dec
out
cmc
fistpll
pop
das
mov
adc
stos
shr
enter
jae
dec
std
and
sub
out
cltd
pusha
jmp
decb
int3
mov
cli
push
adc
dec
adcb
mov
cmpsb
lods
dec
jg
jg
rol
iret
rcll
lods
cltd
inc
push
push
out
inc
push
mov
clc
vmulss
mov
push
xor
pop
es
sub
pop
mov
push
add
dec
sarb
test
push
lock
aas
jno
cli
clc
or
sub
nop
mov
jbe
or
mov
inc
dec
insb
int
aas
daa
jns
lea
fwait
out
call
jg
cmp
mov
test
ds
add
pop
daa
lock
cmp
push
ljmp
xor
xor
out
fisttps
arpl
inc
dec
add
cmpsl
jb
lcall
pop
dec
pop
fidivl
pop
sub
cmp
stos
es
xchg
pop
xor
xchg
cmp
fildll
shll
mov
aad
push
sub
insl
add
cmc
ret
mov
xor
adc
push
push
inc
cld
imul
cmp
es
adc
lods
pop
xchg
inc
mov
xor
push
jae
mov
mov
adc
mov
mov
jnp
and
mov
or
cltd
mov
into
push
and
pop
popf
adcl
mov
clc
sbbb
xlat
mov
cmp
xchg
movsb
js
jns
stc
cmp
dec
pop
xchg
pop
mov
mov
fisttpll
psubusw
loop
out
leave
scas
shll
pop
dec
and
repnz
pop
out
xchg
add
aaa
pop
movsl
insl
mov
sbb
out
mov
cmp
js
fwait
je
inc
or
mov
insb
mov
sub
outsb
stos
lea
loop
mov
push
decb
push
lea
adc
inc
repnz
xor
dec
mov
xor
loope
divl
in
aaa
nop
imul
inc
jns
shll
ret
pop
xor
inc
and
rcrl
and
inc
jns
push
ljmp
es
mov
je
dec
mov
jmp
rcrl
daa
je
or
add
lcall
aad
shlb
test
push
fidivs
and
push
push
mov
aas
mov
push
ja
mov
lret
mov
ret
inc
xchg
dec
xor
lret
sub
test
push
fisttpl
mov
mov
dec
push
fnstcw
filds
cmp
movsl
cmp
stos
in
imul
inc
ds
data16
jno
sbb
imul
aas
push
imul
push
dec
mov
and
fst
enter
into
ret
mov
enter
sti
in
add
push
cltd
and
sub
dec
and
push
or
out
imul
mov
dec
and
mov
bound
pop
nop
test
jb
fildl
shlb
pop
int3
push
dec
hlt
addr16
out
mov
inc
hlt
sub
mov
jno
or
xor
push
lahf
movsb
mov
pop
xlat
sahf
xor
fcmovnb
and
mov
xchg
lret
adc
cmpb
adc
sysret
mov
ret
and
and
leave
dec
push
push
jo
fstpl
out
pop
push
out
out
insl
adc
push
lods
lret
mov
xchg
xchg
pop
fcos
jecxz
aaa
bound
mov
adc
lcall
lahf
test
dec
shrb
push
dec
loopne
xchg
and
loope
fsts
push
repz
stc
pusha
popf
push
sub
adc
pop
shl
sbb
test
repnz
push
enter
mov
stc
arpl
fbld
addr16
mov
adc
adc
jmp
pop
push
mov
xor
incb
mov
movb
push
lods
mov
pop
lds
pop
insb
imul
sbb
fdivl
add
adc
sbb
xchg
xchg
out
addr16
or
mov
adc
mov
add
inc
lea
mov
add
jge
xchg
fcomip
popf
pop
sub
leave
lods
test
adc
sarb
mov
mov
pop
sub
ds
cmp
add
pop
sub
push
mov
sbb
mov
and
outsl
xchg
mov
xor
out
mov
jns
pop
fwait
cltd
lods
dec
les
bound
and
add
add
data16
pop
jle
add
xchg
shlb
xchg
dec
inc
rolb
push
dec
add
stos
xor
lock
pop
fldenv
jne
addl
pop
fistps
pushf
rcrb
hlt
clc
mov
repnz
jbe
xchg
aam
push
mov
mov
push
mov
sub
test
ret
xchg
adc
lret
lds
fwait
push
sbb
cmp
roll
pop
mov
scas
inc
sbb
loop
sbb
xor
cmc
aaa
cmp
xor
testl
push
je
and
lcall
xor
cmp
adc
sti
cmp
stos
cmp
loope
sahf
int3
xchg
fdivrl
jns
arpl
test
sub
mov
xor
clc
mov
jge
sbb
lcall
fwait
jmp
das
xor
and
pop
sti
int3
cld
loopne
pop
inc
sub
inc
mov
or
xor
ror
jp
test
daa
sbb
mov
sbb
push
and
insb
mov
test
pushf
addr16
xor
push
mov
rcrl
or
xor
xchg
imul
stos
inc
mov
mov
shlb
lret
jmp
pop
adc
jns
in
mov
push
or
gs
mov
sbb
push
pop
sahf
pop
mov
jl
imul
and
std
je
push
out
sbb
and
jmp
sub
jns
ss
sbb
sbb
inc
adc
or
rcrl
sbb
loopne
ficomps
fldl
test
inc
rcrb
mov
fucomi
out
pop
sahf
sub
and
add
aad
pushf
cltd
ja
cld
cmp
mov
push
fstpl
out
mov
xor
add
sbb
pushf
adc
nop
mov
adc
stc
adc
loopne
dec
inc
mov
lods
scas
xchg
inc
jecxz
mov
and
and
adc
repnz
aas
sub
jbe
lret
mov
pop
bound
lahf
adc
dec
xchg
mov
popf
cmpsl
jns
mov
or
out
repz
and
lcall
xor
fs
mov
cmp
stos
clc
jne
push
cltd
lret
jg
cmpsb
test
lcall
aam
fsubrp
icebp
jg
fmul
xchg
push
jbe
adc
inc
sbb
test
in
push
pop
fidivs
sbb
loopne
xchg
inc
cli
xchg
cmp
icebp
mov
jnp
je
push
leave
sahf
and
jl
or
cld
xchg
fs
enter
dec
ret
lods
test
jno
add
jne
cmp
sbb
lea
incl
inc
ja
rcrb
pop
je
lahf
scas
sub
or
pop
dec
xor
int
or
push
aas
adc
xor
rclb
xor
inc
rol
push
loope
cmpsl
faddl
pop
and
mov
cwtl
mov
dec
or
dec
xor
imul
filds
stc
add
lret
mov
aaa
js
push
xchg
push
sarl
fdivs
test
and
aaa
je
push
jb
icebp
sbbl
xchg
aas
dec
sub
in
and
cwtl
dec
push
add
test
ds
rcl
jae
pop
pop
jb
imul
sbbb
mov
in
mov
bound
xor
jo
xchg
lret
and
decl
shlb
mov
aaa
mov
pop
fnstsw
movsl
dec
cld
bnd
popf
dec
fwait
sub
loope
mov
jne
push
pop
xor
ss
pop
sbb
mov
inc
repnz
idivb
icebp
sbb
shll
sub
jnp
add
xlat
fists
sub
pop
ds
adc
jnp
cltd
aad
rorb
in
mov
test
fsubrl
push
cmp
and
mov
les
bound
dec
or
or
mov
xchg
cmp
mov
adc
fisttpll
popa
push
insb
fs
mov
pop
lea
and
inc
jp
jbe
lock
jmp
add
mov
mov
push
imul
stc
mov
mov
push
sub
cli
cmp
inc
cmpsb
mov
pop
push
inc
and
jp
push
add
mov
pop
cmpsl
push
jnp
mov
xchg
aaa
hlt
incb
iret
and
cmp
mov
loopne
push
adc
or
xchg
and
jae
add
pop
jne
bound
es
enter
xchg
stos
popa
insb
ds
cmp
cmp
fdivrs
push
stos
gs
xchg
sbb
cltd
pop
mov
mov
cmpsl
fcomps
jo
mov
cs
mov
push
ficoms
push
mov
mov
in
addr16
push
mov
mov
aam
adc
pop
inc
aas
jle
stos
xlat
lods
push
inc
jmp
add
int3
mov
inc
stos
add
lds
pop
push
scas
jle
mov
popf
xchg
sbb
ja
out
ds
scas
std
cmpsl
mov
mov
mov
lods
cmpsb
and
sub
imul
cmp
movsb
lret
xchg
bound
sti
or
push
mov
cmp
or
push
dec
hlt
jae
lcall
jl
lret
adc
sub
mov
or
sub
xor
sbb
sbb
add
pop
cmp
out
imul
ret
test
popf
loopne
cwtl
mov
lret
adc
adc
xor
pushf
add
aas
mov
push
in
pusha
sbb
mov
push
fcom
test
insb
insb
lods
cmpsl
fstpt
nop
call
cmp
cld
pusha
or
mov
push
add
xor
cs
pop
aad
in
cld
inc
dec
mov
lock
lods
or
inc
jo
je
and
into
fnstcw
mov
xchg
bound
push
in
adcl
addb
adc
icebp
jns
test
pop
mov
jp
loope
scas
inc
push
and
int
mov
add
out
add
sub
lret
push
ja
push
mov
xor
dec
or
sbb
sbb
jecxz
mov
shll
movsl
dec
add
pop
mov
shlb
push
leave
test
and
test
shr
pop
push
addb
pop
outsb
addl
sbb
enter
mov
xchg
inc
out
push
inc
divl
jae
and
jns
shr
pop
mov
jne
xchg
inc
xchg
pushf
cli
lods
dec
aaa
sbbl
mov
jl
mulb
enter
cmp
fsubs
mov
jnp
es
jge
and
sbb
inc
mov
cmp
add
ret
pop
jmp
test
jg
push
xchg
fistpll
popl
mov
mov
cwtl
jmp
jmp
inc
shld
stos
sbb
lahf
push
push
imul
xor
cmp
jne
mov
cli
sub
test
dec
int3
in
mov
shrl
cmc
pop
dec
mov
bound
pop
in
lahf
mov
pop
jg
adc
or
push
gs
jg
je
aaa
out
outsl
xchg
out
adc
fildl
lret
push
lock
cmp
lahf
cs
push
and
outsl
cmc
ss
mov
sti
movsl
and
cmp
inc
and
repz
xor
sbb
add
xchg
ljmp
sahf
push
outsl
outsb
mov
push
sub
in
cmp
decl
mov
mov
jne
outsl
xchg
xor
rclb
arpl
cmp
sahf
sbb
out
outsl
scas
idivb
adc
loop
jmp
test
subb
mov
ficoms
xchg
mov
movsl
cmp
loop
push
cltd
test
movsb
nop
lcall
and
subb
rclb
pop
add
les
stos
lods
int
jmp
sti
fwait
inc
inc
iret
and
insl
ret
aaa
fdivs
pop
push
bound
add
ss
sub
jg
stos
mov
pop
add
in
dec
cmpsl
lcall
mov
in
xchg
outsb
rorl
jbe
data16
jb
mov
std
inc
add
aad
test
loop
pusha
out
divl
enter
xor
fisttpll
adc
push
cmp
adc
cld
cmp
imul
iret
faddp
mov
xor
mov
add
daa
pop
adc
scas
mov
xor
fs
and
popa
push
mov
out
lods
data16
inc
sbb
cmp
lods
iret
inc
out
loopne
or
sahf
movsb
dec
pop
inc
push
sbb
fwait
dec
push
sub
push
inc
mov
outsl
dec
out
mov
cmpsb
pop
sub
bound
push
mov
adc
imul
jge
clc
sub
int
sub
push
dec
jbe
addl
or
cmp
or
add
enter
shrl
cli
shlb
std
adc
not
add
push
insb
inc
mov
mov
repz
pushf
jl
shrl
jle
lret
ss
mov
addr16
sar
in
xchg
in
out
nop
or
mov
fidivl
lds
add
cltd
popf
push
fucomip
xchg
lret
andl
xor
shll
pushf
mov
js
jl
jns
popa
inc
loopne
jnp
adc
lods
mov
lea
notb
aas
fiaddl
jns
adc
push
sahf
out
mov
mov
popf
pop
outsl
ja
js
dec
lcall
scas
popf
mov
dec
dec
iret
sub
add
push
xor
dec
push
adc
xor
pop
mov
jmp
sub
push
jle
mov
adc
fldenv
in
pop
leave
mov
inc
mov
nop
push
inc
adc
adc
popl
and
xchg
or
mov
clc
mov
mov
arpl
cmpsb
jecxz
in
outsl
jp
pop
push
stc
pop
lods
aaa
xchg
sub
fwait
sbb
sbb
sub
add
inc
andl
psllw
into
inc
lock
or
dec
insb
dec
mov
orl
popl
xchg
push
nop
xor
sub
xchg
test
lds
lods
test
in
enter
or
jge
insl
dec
xor
ds
mov
stos
das
or
loop
fildll
scas
jp
cmpsl
aaa
repz
data16
mov
ss
xor
push
cmc
mov
leave
dec
xchg
enter
adc
mov
and
loopne
mov
inc
xor
xchg
adc
add
push
xchg
sub
outsb
in
cmp
and
mov
jg
dec
faddl
mov
dec
iret
jns
or
mov
lea
ja
xchg
das
xor
scas
xor
icebp
nop
add
cmp
scas
sbb
aas
cmc
sarl
sbb
cmp
fs
push
or
mov
inc
outsb
mov
push
imul
lcall
xor
push
xchg
int
outsl
mov
pop
jb
mov
and
lret
or
ret
push
movsb
lods
jo
push
mov
adc
cwtl
fs
sbb
push
aas
inc
loopne
jle
push
and
cmp
std
ret
in
inc
inc
fcmovu
jmp
push
or
daa
jnp
into
sub
jne
insb
cmp
test
lcall
pushf
jnp
mov
sbb
scas
mov
shlb
mov
mov
xchg
jmp
cmp
and
dec
jle
enter
and
jl
mov
and
mov
xor
je
jo
movsl
jle
js
es
loop
add
sub
in
nop
or
sub
cltd
les
rep
xchg
dec
loope
stc
sbb
push
ds
stos
andb
cwtl
nop
cmc
adc
push
popa
sbb
jg
mov
aas
lcall
and
cmp
dec
das
pop
in
mov
xlat
jle
jns
popa
and
stos
adc
pusha
mov
or
jle
insl
movsl
add
mov
repnz
daa
jno
mov
pop
dec
cld
xor
or
ret
push
lahf
ds
jecxz
bound
adc
fsub
je
add
imul
xchg
je
fldt
je
ficoml
repz
mov
and
cltd
sbb
shl
lock
inc
mov
lods
pusha
mov
hlt
add
add
jl
lahf
paddd
jg
inc
scas
movl
in
shll
xchg
mov
push
stos
repnz
sbb
push
std
iret
and
aaa
mov
or
sahf
imul
xor
cltd
out
icebp
daa
jnp
in
aad
in
or
es
mov
data16
cmp
jle,pt
fistl
dec
insb
pushf
movd
imul
sahf
cli
jl
push
mov
mov
inc
push
inc
ret
insl
lcall
pushf
pop
addb
pop
test
cmp
out
scas
aas
arpl
add
lds
pop
repnz
fstpl
cwtl
test
xor
mov
dec
pop
movsb
push
push
jno
mov
cmp
or
loopne
neg
pop
mov
mov
sbb
and
icebp
sub
dec
sbb
adc
nop
mov
ficomps
popa
mov
jg
push
sub
les
dec
dec
jne
js
das
loop
dec
push
push
cld
jg
sbb
clc
movsl
sbb
or
je
fsubrl
jcxz
xchg
and
push
push
aam
pop
repnz
cmp
aam
das
sarl
fistl
ljmp
sub
pushf
movsb
and
pop
add
sbb
sahf
cltd
movsl
mov
jmp
add
ret
inc
imul
test
pop
adcb
jb
lcall
pop
mov
loope
push
sbb
fimull
sbbb
out
addr16
repz
bswap
inc
icebp
pushf
jle
push
lcall
add
out
or
rclb
sub
dec
movsl
lds
fcoml
enter
test
xor
dec
stos
and
loop
push
jb
fnstenv
pop
loop
mov
js
lock
mov
jb
sub
fimull
jbe
shrl
pop
inc
int3
fs
or
scas
repz
pop
es
outsl
ds
mov
xchg
sbb
pop
add
out
cld
lea
test
and
adc
pop
mov
dec
call
jmp
mov
sbb
fadds
dec
xor
scas
xchg
cmp
or
cmp
lret
fsubl
icebp
sub
sbb
add
cmp
es
jbe
fstl
adc
scas
mov
or
jae
syscall
push
aas
inc
inc
pop
inc
pop
jl
mov
out
mov
js
pusha
fs
dec
jecxz
lcall
adc
add
adc
scas
cmp
xchg
dec
or
jo
movsb
sub
lods
add
sbb
lock
dec
lock
sbb
stos
add
outsl
adc
xchg
iret
sbb
lret
fldcw
jecxz
insl
ret
add
cs
add
xorl
loopne
xor
iret
pop
pusha
xor
je
icebp
test
jbe
cmp
or
cmc
add
add
and
pushf
pop
add
sub
and
aad
xor
xor
inc
ljmp
cmp
add
or
scas
push
lods
lea
fstpt
imul
inc
mov
loopne
mov
pop
test
cmp
and
and
sbb
mov
idivb
repz
fsubrs
xchg
dec
mov
out
fimull
outsl
push
inc
push
shrb
add
add
inc
xor
and
mov
lock
xchg
cmp
cmp
and
fisubrs
clc
shrb
fisttpll
mov
insl
jbe
mov
dec
pop
mov
aam
mov
movsb
push
pop
in
jne
arpl
jp
mov
hlt
fs
sahf
pop
ds
ja
push
jge
pop
xor
sub
inc
ljmp
dec
les
mov
mov
push
rorb
adc
clc
xchg
lret
jbe
cmp
fcoms
mov
xchg
stc
imul
adc
inc
cmp
cmpsb
lock
dec
cli
xchg
stc
rolb
jb
movsb
out
jo
rorb
cmp
mov
push
sub
mov
outsb
mov
aam
dec
cld
mov
push
clc
nop
dec
sbb
mov
mov
mov
pop
pusha
lret
add
xchg
ss
aas
lock
pop
xor
aaa
sbb
ljmp
fsub
add
mov
cmp
gs
add
popf
xchg
lret
inc
pop
cltd
in
push
xor
mov
lahf
orb
cwtl
mov
hlt
ret
shlb
cli
rorb
dec
jae
loope
mov
sbb
xchg
loopne
cmp
lock
imul
adc
xchg
ja
cmpsb
cs
dec
out
rclb
or
sbb
jp
aas
mov
cmp
dec
stos
sahf
jmp
jo
dec
rcl
jne
xor
not
aas
inc
arpl
inc
rclb
sti
rolb
add
insl
push
and
loopne
and
pop
dec
xchg
fbld
inc
jg
or
fmuls
push
xlat
mov
mov
dec
cmpsb
lret
mov
and
jmp
push
outsl
insb
pop
popf
popf
pusha
push
aad
xor
mov
pminub
test
mov
nop
pop
mov
out
jp
das
push
jle
mov
andl
lds
xchg
add
dec
xor
mov
cmp
xchg
scas
dec
inc
jnp
mov
bound
push
sbbb
xorl
leave
cwtl
xchg
adc
mov
stos
jl
cli
xchg
sbb
out
frstor
and
and
sti
mov
mov
into
je
cmp
data16
jmp
and
jns
cmpl
stc
js
hlt
mov
mov
lea
xchg
jp
int3
lods
sbb
pushf
pop
and
hlt
inc
loope
xchg
xchg
dec
outsl
leave
xorb
mov
add
mov
mov
loopne
adcl
leave
sbbb
movsb
push
and
aad
push
xor
outsl
js
sbb
jne
mov
mov
sti
inc
sub
xor
mov
into
arpl
or
outsb
inc
mov
dec
jmp
iret
push
cmp
pop
mov
or
dec
fwait
mov
mov
lea
cltd
enter
inc
jp
sbb
jne
mov
in
loop
xor
xchg
push
mov
xor
stos
fnstsw
add
imul
and
mul
push
jns
mov
mov
pop
inc
cltd
xor
movl
sbb
mov
test
fwait
lahf
and
cmp
mov
push
inc
pop
push
mov
bound
xchg
push
shll
call
cmpsb
push
scas
cmp
test
mov
add
out
xor
pop
cmpl
sub
jnp
or
sub
aam
sub
cmpsl
mov
mov
adc
test
xor
jno
repnz
jecxz
ret
int
int
and
xchg
repnz
add
add
lret
xor
lahf
fwait
mov
sub
add
sbbl
push
jo
mov
push
push
cli
dec
lcall
je
or
jmp
mov
out
cmp
mov
sqrtps
pop
pop
push
cmc
push
scas
pop
mov
in
fs
xor
pop
fs
pop
cmc
std
insl
mov
test
sbb
stc
adc
scas
sub
fidivrl
lods
ud2
sbb
shr
mov
stos
and
mov
call
insl
jbe
das
int3
mov
rolb
dec
cmp
movsb
neg
fsubs
les
aaa
aam
or
dec
mov
pop
mov
aas
jecxz
lret
movsb
and
test
cwtl
xor
sbb
mov
xchg
push
adc
cs
inc
das
fnstsw
push
jno
pusha
sti
std
and
lahf
xor
test
cmp
mov
cmp
jb
and
xchg
out
int3
cli
cmp
hlt
xchg
pop
insb
mov
cs
js
and
fs
jno
mov
lock
and
jmp
loop
push
out
lods
xchg
push
ljmp
cld
sbb
and
push
add
mov
fisttpl
lcall
insl
in
rcll
loopne
je
popf
push
sub
lcall
out
jmp
rcll
add
addr16
fadd
je
fstpt
stc
testb
jmp
stos
mov
push
push
popa
dec
dec
cmpsl
mov
popf
inc
sarb
sub
inc
jae
ror
adc
push
enter
push
inc
lds
out
iret
ja
std
adc
jb
pop
out
lods
adc
into
fwait
jp
mov
iret
jne
sti
repz
addr16
data16
or
ror
add
jae
js
inc
filds
lret
push
push
xchg
xor
dec
sahf
outsb
mov
jo
mov
mov
movsl
shrl
test
imulb
or
rcll
or
ficoms
out
adc
outsb
outsl
mov
mov
sbb
shr
jae
mov
adc
pop
pop
xor
pop
pop
ret
push
lock
int3
or
js
mov
mov
das
xchg
sub
or
loopne
mov
int3
push
jmp
shlb
lea
mov
inc
xor
test
xchg
stos
fisubrl
add
cmp
or
adc
scas
sbb
in
adc
out
das
bound
pusha
push
loop
mov
dec
dec
dec
mov
jno
mov
cmpsl
sub
out
push
mov
xlat
xchg
and
ficoms
test
sub
int3
lods
dec
pop
clc
adc
pop
mov
mov
xor
mov
or
xor
pop
popa
mov
xchg
mov
cmp
addr16
lea
idivl
dec
in
or
dec
insl
inc
inc
cwtl
je
pop
or
popf
leave
or
cli
xchg
insb
out
ret
cmp
lea
push
stos
jg
cwtl
or
jae
xchg
imull
push
mov
push
mov
mov
xlat
sbb
cs
or
es
sub
xor
movsb
add
repnz
test
popf
push
sub
cmpb
or
sub
jno
imul
test
std
jl
fbstp
repnz
lcall
lea
inc
pusha
jae
jo
xchg
mov
push
adc
mov
push
pusha
mov
mov
mov
les
jbe
test
lods
or
imul
outsl
sub
jb
movsl
enter
lret
push
xorb
outsl
cmp
inc
adc
xlat
dec
push
and
repnz
inc
pop
sbb
movl
adc
cmp
pop
iret
push
pop
sar
push
jl
out
jmp
popf
jle
jecxz
movsl
jno
clc
stos
roll
dec
icebp
fiaddl
sub
mov
inc
mov
cmpsl
push
cmp
mov
inc
push
xchg
addr16
lcall
sub
sub
outsb
add
cmp
insl
mov
mov
pop
push
call
mov
sbb
adc
jle
outsl
mov
xchg
jae
insl
add
gs
fwait
out
dec
fmull
stos
mov
cmp
sahf
pop
sub
inc
fdivl
cld
in
dec
fwait
jae
xchg
insb
repz
sahf
imul
cli
or
adc
leave
xchg
imull
popl
test
lods
lods
mov
jb
cmpsb
rcrb
dec
sub
aad
insb
push
mov
test
mov
mov
cmp
bound
je
adc
adc
jl
sahf
push
push
lcall
add
sub
icebp
fnstenv
ret
push
out
test
test
loopne
xlat
jo
addr16
cwtl
xchg
in
inc
or
test
es
push
jmp
mov
aas
aad
into
rorb
les
popa
and
lcall
ret
pop
sbb
out
dec
jle
cwtl
pop
dec
popa
or
cmp
lret
into
and
lret
adc
enter
cmpsb
xor
sub
sbbb
ret
add
pop
pop
jmp
fcmovne
popa
loop
out
fcoml
cmp
sahf
cmp
jnp
cmp
sti
nop
adc
mov
aad
jl
gs
clc
cmpsl
imul
mov
test
mov
loope
lret
dec
repnz
nop
vpconflictq
pop
cmpsb
es
popf
sub
jnp
stc
stos
lcall
pop
jnp
push
das
test
bound
out
sahf
addr16
lock
jne
xor
jg
loope
lret
push
cmp
push
cmovle
xchg
or
pop
mov
xchg
mov
mov
stc
daa
das
gs
push
adc
lret
adc
sarl
in
sbb
push
dec
jns
jno
pop
repnz
xor
ja
dec
inc
push
mov
jmp
push
inc
dec
mov
into
pop
and
pop
mov
push
xlat
or
mov
out
in
ds
enter
dec
inc
out
ret
mov
iret
daa
cltd
inc
aaa
push
mov
mov
in
fincstp
test
sbb
and
aad
push
je
sub
je
adc
addr16
hlt
mov
das
popf
ffreep
das
jl
out
in
les
or
cmpsb
xchg
mov
mov
call
cld
call
inc
xchg
pop
mov
push
dec
in
bound
push
mov
cmp
and
xor
sub
sub
add
dec
js
jne
mov
sub
mov
cmpsb
clc
mov
adc
pop
rcrl
xchg
and
and
loopne
sbb
mov
push
mov
inc
pop
adc
and
dec
mov
adc
lock
jecxz
lret
xor
push
pop
inc
in
jo
and
mov
jle
fwait
pop
adc
pop
nop
cmp
xchg
pop
and
jl
push
mov
lods
sbb
cmp
mov
clc
insb
push
loope
and
mov
bound
lock
and
rcll
sub
repz
inc
movsb
sub
and
sbbb
icebp
std
dec
sbb
adc
les
cmpl
xchg
js
lock
mov
push
shlb
movsl
fcos
ja
out
ss
shrl
cmp
push
movsl
in
mov
in
fistl
push
sahf
dec
rcrl
mov
mov
scas
popf
xchg
or
or
dec
push
sub
mov
into
mov
pop
fadds
repz
clc
adc
pop
lock
pop
adc
das
xchg
cmp
lods
bound
mov
int
mov
cmp
mov
scas
cmp
lds
jp
lret
mov
test
lcall
mov
pop
xlat
sbb
jae
inc
cmp
pop
stos
jmp
test
sub
xlat
mov
jle
cmp
dec
insl
lret
push
or
call
adc
and
ljmp
scas
push
add
outsl
shl
aas
xchg
sbb
je
arpl
stos
mov
ret
mov
jmp
insl
xchg
or
mov
xor
mov
xchg
xchg
jle
lret
dec
fimuls
jecxz
das
es
loope
out
cmc
repz
sub
lds
in
gs
or
in
repz
je
push
mov
pop
cmc
push
out
sbb
dec
and
aaa
cmp
popa
adcl
push
in
lods
or
adc
pmulhw
mov
adc
aas
sub
mov
out
jno
mov
jg
mov
data16
xor
icebp
enter
ret
out
psadbw
popf
pop
bound
stos
je
icebp
push
cmpsl
imul
lret
xor
and
jns
lret
and
sub
adc
mov
push
mov
test
xlat
fldenv
xor
push
out
xor
jnp
dec
pop
lods
in
sbb
inc
loopne
je
fnstenv
movsl
leave
mov
lods
pop
scas
sbb
decl
pop
sbb
fcoml
inc
int3
adc
xchg
cwtl
pop
xchg
test
sti
pop
stc
pop
mov
sbb
mov
mov
orb
ret
fwait
or
mov
movsbl
es
cs
je
push
add
lea
add
sub
cmp
or
daa
daa
jno
in
ss
aaa
das
add
lock
xorb
shll
xchg
xchg
setno
add
testb
imul
test
and
enter
jns
mov
cmp
mov
fucomip
sbb
mov
icebp
and
lods
pop
add
shll
pop
dec
filds
cli
sub
push
and
cmp
xchg
cwtl
mov
jle
push
jecxz
in
xchg
mov
mov
bound
push
add
jo
mov
push
xchg
adc
stc
pop
jg
mov
push
jo,pn
and
ret
rorw
clc
or
addr16
lcall
loope
pop
mov
pop
push
xchg
in
test
adc
pop
xchg
or
cld
cwtl
xor
or
adc
bound
push
std
loop
mov
add
dec
jp
outsb
fldenv
arpl
nop
stos
inc
rorl
sbb
test
cmp
xchg
adc
repnz
push
leave
lds
push
jge
inc
mov
orl
mov
push
pop
shl
dec
icebp
jo
int
jg
adc
jmp
fisttpl
nop
sahf
xor
mov
push
jp
dec
out
or
xchg
jno
lods
test
fisttps
icebp
and
jno
in
mov
in
mov
lock
stc
mov
mov
dec
sbb
test
sbb
fisttpl
or
push
pop
arpl
add
shl
dec
lea
xchg
daa
cli
pop
vpaddb
inc
ds
mov
sub
sbb
adc
fimuls
nop
scas
ss
push
fbstp
sub
fmull
mov
ret
cmpsb
xchg
mov
pushf
bound
jae
and
stc
hlt
lret
xchg
push
iret
in
pop
xor
outsb
mov
in
jg
mov
jecxz
mov
sbb
outsb
push
inc
int3
les
scas
into
sbb
loop
dec
cmp
jmp
jle
inc
push
jmp
xchg
add
jns
mov
mov
mov
in
std
ss
popf
add
mov
mov
sahf
jp
sbb
insl
mov
pop
add
adc
popa
loope
popf
mov
inc
pop
andl
mov
or
or
call
scas
xor
inc
add
loope
icebp
insb
jl
adc
or
pop
movsb
pop
or
js
mov
mov
pop
and
sahf
scas
into
push
cmpsb
sub
mov
in
pop
xchg
xchg
pop
or
mov
sti
push
pop
sbb
jae
jle
sub
dec
xchg
ljmp
mov
pop
mov
pop
add
lds
sub
xchg
loope
sbb
rcrb
es
jmp
lods
lock
enter
ljmp
cwtl
add
pop
rcrb
xchg
sahf
fisttpll
pop
xchg
push
push
in
or
cmp
pop
lret
xchg
fwait
mov
mov
adc
xchg
pushf
mov
jns
push
rorb
jno
rorl
xchg
inc
lret
nop
mov
ret
pop
imul
stc
out
jge
add
outsb
adc
inc
xchg
cmp
jne
push
shr
inc
sbb
leave
fldenv
or
add
add
mov
xor
or
pushf
mov
aaa
mov
pop
add
mov
adc
addl
outsb
and
cmp
or
mov
cwtl
leave
sbb
xor
or
int3
cmp
pop
test
fiadds
sti
inc
es
mov
cli
in
mov
inc
movsb
ljmp
lea
cmp
jo
ss
movsb
sbb
dec
cmpsl
ret
test
add
dec
pusha
ja
xor
inc
jg
lcall
rolb
xor
adc
in
sahf
inc
inc
lods
jnp
adc
rol
outsb
jp
pop
jbe
inc
jbe
adc
push
jecxz
fst
or
sbb
movsb
rcr
xor
mov
cs
add
sub
mov
inc
jno
sbb
dec
subb
or
push
cmp
pop
ficomps
sbb
inc
dec
mov
sub
repnz
hlt
sbb
outsb
mov
and
or
lods
push
icebp
or
inc
inc
cmpsb
inc
cmpsl
pop
insl
stc
movsb
cmp
sub
aas
stos
shl
xchg
and
dec
leave
ds
mov
mov
dec
fmul
inc
ss
imul
insl
add
test
pop
fsubr
inc
lea
popa
xor
xor
pop
aaa
das
pop
fidivrl
xor
jmp
ss
cmpb
and
mov
stos
test
negb
push
push
and
fbstp
sbb
leave
imul
pop
ds
popa
std
sbb
mov
mov
loope
and
testl
mov
mov
sbb
pop
imul
shll
push
icebp
faddl
inc
mov
jle
lcall
arpl
or
data16
loope
das
pop
add
pop
cmp
fwait
jae
es
into
sub
jecxz
cmc
xchg
cli
inc
and
repnz
cmp
ret
cmp
or
dec
inc
mov
xchg
xchg
jge
push
icebp
push
lret
addb
mov
out
hlt
inc
sbb
or
mov
xchg
fsub
loopne
cwtl
add
mov
inc
and
fcoml
xor
push
jge
subb
clc
cmc
fldcw
icebp
das
movsl
je
sub
jbe
adc
pop
fisubl
in
movsb
add
dec
cmp
das
xor
xchg
xor
sub
mov
inc
adc
mov
imul
add
mov
insl
and
push
mov
and
dec
add
ss
in
loop
push
hlt
and
and
cli
imul
lock
inc
push
xchg
cmpsl
shl
aad
std
fsubl
syscall
fadd
cmp
adc
repz
insb
inc
jge
movsb
sub
orb
mov
and
flds
add
jmp
mov
add
and
mov
inc
xchg
out
fbstp
push
xchg
aad
push
jb
cmp
movb
add
pop
jg
mov
adc
push
fistl
adcl
dec
xchg
and
inc
and
or
xor
ss
inc
jnp
movsb
pop
push
lds
icebp
fldl
mov
pusha
mov
adc
call
stc
add
sbb
popa
jnp
fdivrl
cmpsl
les
sahf
mov
lds
sbb
inc
or
repnz
xchg
mov
ficoml
sbb
cmpl
into
and
cmp
push
aas
push
sub
repz
xchg
mov
mov
inc
repz
mov
cwtl
jo
sbb
adc
leave
in
jmp
pop
cli
pop
or
scas
clc
aaa
lcall
xchg
lret
testb
out
fdiv
inc
xchg
mov
sbb
xor
push
pop
mov
or
jb
xor
iret
adc
imul
stos
pop
push
or
push
mov
test
push
aad
xor
pop
mov
cs
test
out
lcall
cmp
dec
inc
adc
or
fdivp
dec
stc
scas
jge
adc
cmpl
fdivl
cmpsl
add
push
popa
push
stos
fdivrl
jecxz
mov
xchg
das
xorl
mov
data16
pop
nop
lahf
test
inc
push
inc
in
fadds
jnp
andl
xorl
std
cmpsb
pop
mov
jecxz
push
adc
inc
popf
push
sub
inc
insb
push
add
jp
or
sub
ret
fcmove
in
insb
jle
imull
repz
aas
ss
sbb
dec
cmc
in
mov
rol
jl
pop
and
lcall
in
sbb
insb
testl
mov
sub
nop
adc
jne
andb
in
cmp
and
test
jp
xchg
imul
adc
push
outsl
mov
dec
arpl
xor
pop
sub
push
cmpsl
mov
sahf
cmpsl
int3
add
test
xchg
setnp
xchg
int
pop
or
jmp
add
lds
sub
clc
or
fmuls
xor
jbe
out
inc
pop
adcl
push
in
xor
mov
adc
push
add
lcall
sbb
movsl
inc
std
push
cmp
push
xchg
jge
sbb
mov
inc
js
adc
pop
xor
pop
xchg
sub
dec
add
outsb
push
sub
insl
mov
out
rcpps
mov
in
inc
jg
loopne
out
fisubrl
or
cld
inc
mov
xlat
push
push
jne
adc
cli
test
lahf
ss
enter
push
pop
lock
gs
jl
pop
pusha
rorl
test
push
std
jg
int
subl
or
push
mov
loop
imul
test
jmp
adc
cmp
flds
push
add
shll
add
cmp
cmp
add
mov
xchg
sbb
and
sub
enter
into
dec
mov
aaa
lcall
aad
or
mov
pusha
das
lahf
inc
fldl
add
fimuls
gs
sbb
push
inc
xchg
loope
mov
int
add
jae
stc
aaa
mov
lods
adc
sbb
lods
int3
and
outsl
jno
shlb
mov
call
mov
add
das
mov
loope
les
dec
push
rclb
mov
dec
outsl
cmp
cmc
cmp
push
movsl
sarb
clc
nop
or
aaa
movsl
ds
sbb
sub
shl
mov
scas
or
xchg
sti
repz
addr16
enter
mov
testb
sti
and
lds
fimuls
pop
sahf
push
push
fdivrl
pop
push
in
aad
mov
popa
outsb
cmp
pop
iret
and
repnz
dec
xchg
neg
sub
notb
fs
mov
addr16
ss
adc
repnz
insl
xchg
cwtl
inc
aaa
xor
fisubl
mov
dec
repz
popa
rcrl
gs
int
fnstsw
mov
adc
mov
add
push
mov
aas
scas
jb
cmc
lahf
add
mov
iret
mov
mov
cli
jg
mov
push
dec
fidivl
adc
inc
outsb
mov
enter
movsl
movsb
sbb
lods
outsl
shl
mov
inc
lods
dec
dec
inc
and
inc
or
rcll
mov
ret
lock
pop
cmp
es
insl
imul
jo
jne
sbb
mov
das
jbe
push
xor
popf
or
repnz
sbb
mov
add
nop
std
inc
sbb
adc
sbb
mov
lock
inc
movsb
xor
std
ja
test
dec
dec
adcl
xor
add
pop
xlat
mov
and
mov
push
sub
sbb
sub
pop
cli
pop
mov
pop
add
rorb
enter
pop
and
leave
das
shrl
rol
cld
mov
repnz
dec
add
xlat
mov
pop
mov
mov
stos
popf
push
push
ss
insl
stos
aad
mov
pop
mov
inc
mov
cmpsl
sahf
loop
nop
fldcw
push
fsts
fstps
mov
push
and
pop
mov
xor
sarb
and
sti
jae
lds
cmp
push
mov
rcll
mov
scas
xor
sub
cld
mov
lret
sub
ret
xor
and
rorl
in
pusha
in
mov
div
mov
cwtl
mov
repz
or
push
jge
adc
aam
mov
jnp
into
repz
push
mov
and
push
and
pop
sbb
pop
ja
xchg
xchg
sbb
bound
ret
jo
arpl
pop
push
clc
mov
scas
adc
sti
push
jg
insl
jno
mov
int
xor
xchg
push
mov
sub
push
sbb
push
push
push
aas
iret
sub
and
jb
mov
dec
sbb
sub
jne
insb
xchg
inc
outsl
sub
push
repz
bound
incb
fnsave
jg
mov
sbb
mov
test
mov
movsb
push
mov
dec
pop
pop
clc
mov
test
rolb
and
imul
adc
sub
insl
xchg
pop
xor
push
es
jecxz
mov
push
daa
add
jl
shl
out
and
pop
nop
nop
mov
not
outsb
jg
pop
jo
pusha
cmovg
clc
cmc
inc
mov
dec
cmpsb
push
sahf
or
aad
leave
mov
xor
leave
std
pusha
cmp
mov
inc
out
xchg
mov
rcrb
das
push
das
jno
jnp
sbb
aad
or
jb
sub
jl
psrlw
add
mov
out
out
xchg
out
out
mov
mov
xchg
maxps
or
lods
test
int3
jae
nop
inc
iret
mov
enter
shrb
jno
xchg
out
pop
pushf
cmp
jne
sbb
cli
xchg
loop
push
stos
mov
pop
sub
inc
leave
mov
pop
call
fdecstp
add
leave
sbb
xor
push
pushf
pop
mov
decl
lahf
xchg
testb
decl
pop
sbb
xor
xchg
lret
leave
sbb
imul
test
fstl
jp
scas
lods
aad
pop
aad
sub
bound
fwait
mov
push
sbb
mov
orl
mov
lods
das
mov
enter
rolb
loopne
add
stc
mov
sbb
sbb
dec
in
lock
popa
sbb
xchg
fstl
dec
dec
lods
xchg
and
in
sub
mov
or
mov
in
adc
stos
inc
rcrb
push
das
dec
jecxz
aaa
leave
mov
ja
or
or
add
insl
idivb
movsl
outsl
lds
bound
js
jae
sbbl
jns
jnp
inc
cmp
push
repz
out
popa
mov
push
stos
dec
push
lea
aas
mov
jecxz
or
sbb
mov
popf
mov
lret
cmp
mov
sbb
dec
jae
jb
ret
cmp
mov
sub
cmpsl
add
push
icebp
or
cmp
pop
sar
test
dec
loope
mov
xchg
adc
sbb
outsb
aam
inc
shrl
stos
sbb
fdivr
sub
xor
push
push
xor
xor
adc
mov
sub
lea
aam
sub
add
sti
loop
or
pop
jb
jmp
ffreep
and
jb
lods
in
ficomps
xchg
add
into
adc
lods
into
insl
ljmp
je
jge
xor
dec
xchg
and
jmp
les
and
and
sub
ror
push
cmp
cmpsl
xor
push
add
leave
add
and
adc
ja
daa
inc
xor
mov
in
mov
cmc
aas
mov
adc
mov
xchg
repz
xchg
enter
insb
push
in
add
mov
pushf
rcll
sub
iret
aam
mov
push
cmp
andb
lods
sub
fcomi
idiv
bound
ret
cmp
stc
xor
shll
and
jno
jge
andb
loope
mov
push
sbb
dec
xorl
leave
xchg
inc
popa
fidivs
sub
aad
or
sbb
clc
inc
stc
mov
imul
push
movsb
ret
sbb
jle
clc
cmp
mov
pslld
inc
cmp
dec
cmp
pop
sahf
bswap
stos
sbb
in
fistps
jmp
xchg
lret
lods
enter
and
add
inc
dec
js
mov
movsl
xor
and
mov
pop
or
push
lahf
into
loop
xchg
push
mov
and
dec
fwait
enter
dec
or
push
out
and
cmp
ret
in
in
jge
xor
aas
sub
outsl
in
sub
cmc
xchg
inc
shlb
adc
mov
movl
sbb
sti
sahf
sbb
push
mov
jae
int3
mov
xlat
pop
adc
xor
or
jge
xchg
mov
fbld
mov
cmpsl
sub
popa
scas
pop
dec
cli
bound
dec
pusha
mov
pop
sub
add
mov
sbb
pop
leave
pop
jecxz
outsl
sbb
sub
cmpsb
sbb
fmuls
into
mov
mov
test
cmpsl
fmull
cmp
mov
adc
jecxz
push
mov
and
pop
adcl
adc
cmp
sub
mov
and
addl
in
fsubrl
fsubr
popa
insl
dec
and
sbb
icebp
fldcw
inc
je
enter
mov
cmc
popa
outsl
incb
mov
sub
clc
jb
loop
fcoms
xchg
and
mov
push
out
xrelease
int3
ljmp
add
mov
jg
das
ds
dec
mov
je
jb
mov
lds
inc
mov
mov
lock
sbb
push
jo
rcll
push
das
scas
enter
mov
or
daa
xchg
iret
fstps
fisubrs
push
imul
xchg
cltd
sbbl
and
sub
jl
adc
bound
cwtl
sub
test
mov
mov
ds
test
fimull
nop
dec
pop
fistps
lcall
mov
sub
mov
loope
out
push
cmpsl
xor
mov
and
jl
enter
ret
movsb
jno
pop
adc
add
adc
or
rcl
lret
dec
jl
addr16
mov
xchg
das
cli
cmp
jns
sbb
cmpsb
pushf
dec
test
hlt
hlt
ret
inc
icebp
ja
mov
dec
xchg
lret
popf
add
bound
push
in
mov
fsubl
add
mov
sarb
cld
xchg
jmp
ja
xorb
or
mull
ret
repz
les
scas
shrl
xor
idivl
push
mov
andb
mov
cwtl
inc
cmp
mov
push
adc
add
jle
add
pop
movlps
insb
mov
insb
sub
movsl
or
xor
adc
cmpsb
cli
and
aaa
or
cwtl
mov
out
xor
mov
imull
inc
popf
push
test
push
mov
imul
push
and
dec
call
cmp
sub
push
in
mov
loop
into
mov
add
arpl
lods
mov
push
add
sub
sbb
jecxz
jo
mov
popf
idivb
mov
push
mov
cli
in
movsb
ret
mov
in
pop
sarb
pop
lock
pushf
les
pop
in
int
mov
or
inc
cmp
jb
mov
jmp
inc
out
add
xchg
cmp
insl
jecxz
int3
sbb
loopne
push
out
jne
and
pinsrw
or
cvtps2pi
arpl
subl
pusha
pop
lcall
sbb
add
pop
dec
xchg
mov
jo
shlb
jl
mov
bound
enter
dec
lock
jne
shll
mov
adc
pop
jbe
mov
dec
dec
jne
js
roll
insl
jl
mov
aas
mov
negb
faddl
xchg
lods
movl
call
jp
xor
jecxz
inc
add
pop
pop
cmp
xchg
cmp
imul
js
add
jae
xchg
js
xchg
sti
inc
addr16
test
xchg
mov
pop
push
pop
sbb
loop
scas
je
lods
fdivs
loope
pop
xor
pop
test
in
aam
fldl
add
shll
dec
clc
outsb
mov
inc
ds
pop
mov
mov
fnstcw
roll
sub
or
mov
das
mov
xor
and
insb
leave
gs
jne
shr
jnp
push
mov
fldenv
jo
aam
adc
test
pop
jbe
xchg
add
cmc
inc
mov
addb
aad
stos
or
adc
out
testl
out
sbb
xchg
jae
cmp
insb
jbe
popf
les
dec
call
cmpsb
sub
or
lret
pop
loop
jecxz
je
in
xor
lret
scas
into
imul
mov
daa
xor
in
icebp
lods
ret
or
rol
push
out
fisttpl
adc
pop
movsl
jo
insb
ret
push
or
jnp
adc
sbb
insl
cld
fwait
pop
inc
mov
jmp
imul
lahf
xchg
into
push
sarl
xlat
std
addl
pop
sub
imull
jo
push
xor
mov
adc
repnz
mov
mov
ret
mov
fcmovbe
jo
inc
adc
jbe
nop
mov
cltd
sbb
cmp
pushf
test
clc
and
sbb
mov
push
int3
fnstsw
xchg
push
push
shrl
adc
mov
pop
addr16
sbbb
mov
pop
inc
shlb
sub
rcll
mov
jl
scas
mov
out
mov
lods
dec
or
aaa
mov
loop
and
adc
lahf
push
popw
cwtl
xor
mov
mov
mov
add
mov
cmpsb
mov
clc
sub
jno
test
mov
idivb
push
es
mov
loopne
inc
pop
cmp
xlat
jecxz
jne
rcrb
popa
in
push
xor
inc
test
mov
add
scas
mov
mov
shll
mov
xor
sbb
adc
lret
in
aam
and
dec
adc
mov
push
lret
mov
and
xor
or
repz
xor
stos
xor
insl
pop
cmp
sbb
pop
out
idivb
out
ficomps
mov
jne
sbb
fsubrl
shl
fisttps
xor
push
jb
mov
mov
sub
test
jbe
sbb
pop
mov
in
dec
lds
lcall
and
int3
cwtl
xchg
xor
iret
scas
xor
cmpl
leave
cmp
inc
insl
pop
jle
mov
sarl
std
or
or
push
push
pushf
sub
das
cmp
push
inc
push
int3
leave
xchg
nop
cmpsl
sahf
stc
adc
clc
jno
jg
fisubs
cmp
pop
dec
or
out
inc
jne
inc
sbb
xchg
dec
iret
stc
pop
sbb
and
xor
pusha
das
gs
insb
mov
pop
add
pop
iret
add
mov
pop
fistl
or
or
jns
and
dec
dec
repnz
daa
fnstcw
test
test
push
cld
int
xchg
sti
int3
mov
incl
fnsave
scas
jno
lods
movsb
gs
inc
incb
sub
mov
mov
lret
mov
adc
inc
xor
test
clc
sub
outsl
mov
mov
mov
add
scas
add
dec
inc
pmuludq
test
lcall
push
xor
dec
loop
outsl
sub
xor
lods
clc
push
rcrb
cli
lret
gs
xchg
into
sub
mov
inc
lret
mov
mov
enter
das
push
in
das
fisttpl
sub
insl
dec
sbb
add
pop
movsb
test
jl
mov
aad
add
fcompl
shl
roll
push
ds
dec
or
mull
jge
ss
mov
jmp
jb
mov
test
dec
pusha
dec
push
cmp
jmp
mov
cmp
bound
pop
cmp
mov
loopne
aam
dec
inc
add
xor
cmp
sbb
jo
push
push
mov
test
adc
mov
cld
cmp
movsb
call
test
icebp
scas
push
cmp
pop
xor
fisubrs
cltd
cmp
bound
test
inc
rcrb
or
mov
sarb
inc
adc
cli
ss
mov
sti
mov
movsb
and
nop
mov
sarb
mov
mov
xlat
push
cwtl
jge
hlt
mov
aaa
sbb
loop
fstpl
add
das
mov
add
pop
ss
mov
negb
test
lret
cld
mov
scas
into
lds
push
lock
push
addr16
lods
push
fistl
add
imul
dec
fcomps
in
inc
aaa
cmpsb
push
mov
sbb
testb
or
mov
sbb
mov
fmull
scas
push
inc
inc
pop
subl
sarl
mov
inc
out
xchg
sbb
mov
cmp
inc
or
cmp
std
pusha
iret
xor
jecxz
outsl
push
outsl
jp
jg
pop
psllq
push
push
push
xchg
push
dec
xchg
test
aad
loope
xor
rcll
push
cli
add
cs
enter
jle
lds
outsb
cmpb
cwtl
bound
push
and
push
fdivs
sti
clc
int3
pop
mov
adc
or
jne
stos
jb
cli
adcb
in
jb
stos
mov
push
push
push
frstor
xchg
popf
and
cs
and
cwtl
imul
idivl
push
fsts
sbb
movsl
aaa
insb
mov
insl
call
arpl
in
inc
les
cltd
lock
push
fstpl
jbe
cmp
xchg
add
mov
scas
cmc
dec
mov
xor
lods
outsb
push
lret
jno
aam
xchg
mov
adc
popa
mov
test
xor
inc
icebp
mov
sbb
cmp
dec
mov
dec
pop
cld
jo
imul
pop
mov
jp
cs
pop
loopne
cmpsb
mov
sar
cmp
sbb
add
mov
add
inc
or
mov
scas
movsb
jae
fstps
mov
pop
mov
jmp
jl
dec
test
push
cmpsl
cmp
aas
fadds
insl
insl
jne
inc
jl
cmp
insb
mov
push
sbb
mov
aaa
ljmp
sbb
add
cmp
add
idivl
outsb
push
mov
jae
inc
cmp
or
push
jp
insl
jl
push
or
xor
mov
xchg
xor
dec
push
pushf
outsb
jle
mov
add
jge
or
push
mov
inc
dec
iret
mov
and
addr16
lods
inc
addr16
test
in
in
xlat
pop
sbb
xchg
cltd
ficoms
cmc
mov
stc
fiadds
pop
add
inc
push
inc
jnp
dec
in
loope
cmp
inc
or
inc
adc
sub
lods
jmp
mov
popf
jmp
sub
jmp
lods
mov
add
rorb
jbe
adc
mov
mov
jecxz
cmp
fdivrp
inc
loope
mov
pop
xlat
sub
pop
jg
or
pop
addl
popa
insl
enter
inc
pushl
inc
shl
call
xor
lock
decb
cmpsb
xchg
sti
xchg
pop
pop
mov
roll
in
mov
cmp
sub
repz
dec
fs
daa
and
insl
lods
adc
push
ja
insl
push
fidivrs
pop
pop
cld
lock
adc
dec
popf
je
push
lahf
and
stc
pop
mov
bound
and
test
lahf
mov
clc
movsb
pop
cmp
cmp
ret
iret
rcl
jl
dec
mov
mov
push
or
insl
xor
sub
mov
dec
and
add
jnp
mov
adc
rcrb
outsb
xchg
cmp
cwtl
jge
adc
adc
fsts
or
inc
dec
fists
add
mov
arpl
push
les
and
outsl
xor
push
fisttpll
add
aam
adc
test
stos
sbb
fnstsw
in
ds
pop
pop
and
push
and
ljmp
push
xchg
adc
xor
in
dec
or
addb
sbbb
andb
sbb
lcall
pop
sbb
xchg
jnp
rep
es
xor
cmp
lret
and
aam
icebp
push
data16
int
sbb
mov
sub
movsl
cmpsb
repnz
mov
arpl
mov
mov
shrl
sub
scas
sub
cmp
das
les
jg
leave
shl
jmp
push
sbb
stc
jl
jnp
addr16
or
jecxz
inc
sbb
scas
fidivrl
movsl
or
and
mov
cmp
jns
push
bound
repz
and
stos
xor
adc
hlt
or
mov
jo
sbbl
nop
rcrb
lds
mov
xor
pop
mov
add
subb
in
xchg
mov
pop
imulb
inc
aaa
movsl
mov
imull
adcb
jg
mov
clc
jl
xchg
outsb
mov
push
jnp
sub
mov
xchg
add
arpl
mov
xor
scas
test
loop
xor
pop
inc
pop
clc
repnz
je
into
mov
sub
jnp
xorb
and
xlat
or
push
repnz
mov
leave
xchg
mov
adc
jmp
add
in
adc
cmp
jo
add
jl
dec
xchg
stos
jmp
inc
insl
mov
loope
or
movsl
loopne
ja
pop
push
xchg
test
call
lods
mov
lcall
jecxz
sbb
sub
addr16
insl
rorl
pop
push
out
pop
insl
es
add
ficompl
in
call
rcll
call
bound
icebp
push
int3
cmp
adc
ljmp
inc
mov
call
nop
jb
shlb
dec
bndstx
dec
scas
jno
dec
adc
push
mov
sbb
and
in
xlat
add
mov
mov
shlb
mov
outsb
push
das
outsl
rorb
in
mov
sub
push
sub
popa
cmpsl
bound
scas
add
jp
pushf
cmc
jbe
test
cmp
and
push
push
mov
shll
scas
mov
les
push
aaa
shrb
icebp
jne
jbe
jmp
ja
xor
mov
lahf
aas
stos
xorb
ret
clc
subl
stc
jg
test
pop
shll
adc
data16
mov
mull
mov
imul
xchg
lock
inc
aas
push
into
xchg
adc
out
inc
lcall
loop
shll
repz
in
add
pop
mov
sbb
call
xchg
adc
dec
ja
adc
sarb
jbe
mov
les
dec
daa
adc
les
scas
repz
insb
enter
push
add
test
ja
push
je
mov
mov
mov
mov
iret
lret
mov
or
push
xchg
push
cmp
cmp
fdivr
xor
inc
outsl
jle
xor
mov
mov
rorl
fsts
xchg
addr16
fcompl
jae
rorb
ja
adc
pushf
repnz
push
adc
out
xchg
cmp
cmpb
cmp
pop
mov
loop
sub
pop
xchg
ljmp
out
sbb
and
fildl
rcll
pop
push
push
cld
testb
fimull
mov
icebp
cmp
or
data16
rcr
outsl
inc
xor
mov
mov
subb
add
cld
shll
gs
loopne
adc
into
mov
js
xor
cwtl
and
and
sbb
jne
stos
es
and
fsub
mov
lahf
insl
lahf
fimull
sbb
xchg
mov
cmp
sub
fcoml
jbe
pop
cmp
jne
repnz
sbb
lahf
hlt
jno
in
sub
outsb
movl
xchg
inc
mov
and
mov
jo
inc
mov
dec
test
bound
and
call
ficompl
in
push
pop
je
pop
push
inc
das
sub
stc
push
aad
or
leave
inc
std
imul
or
and
sub
out
inc
and
jge
cmp
cmp
mov
mov
sbb
pop
scas
adcl
addr16
or
cmp
cs
lcall
addl
or
sub
cmp
fwait
pop
xlat
loop
stc
mov
fs
xor
adc
dec
cmp
popf
sbb
pop
mov
pop
add
xchg
adc
ljmp
or
push
ret
movsb
xor
push
mov
adc
lahf
and
pushf
gs
sbb
int3
sub
and
sbb
pop
loope
les
stos
dec
push
jbe
push
test
xchg
push
jecxz
mov
jbe
bnd
decl
xor
ljmp
dec
xlat
fimull
pop
mov
pusha
xor
inc
lcall
xchg
enter
inc
fisttps
or
shl
mov
out
and
and
movsl
sarl
add
xchg
pusha
adc
push
inc
jg
mov
and
push
ss
stos
in
xor
add
pop
or
pop
and
push
subb
xchg
and
aam
inc
jecxz
mov
mov
mov
xor
cs
cmp
adc
xor
ja
mov
pusha
mov
inc
es
push
cli
in
shl
scas
stc
scas
mov
aaa
ds
call
insb
xor
dec
push
outsb
test
push
loopne
stc
or
sarb
gs
in
and
aaa
add
aas
xchg
fs
and
ljmp
push
jb
adc
in
sahf
cmpsb
mov
in
adc
in
ficomps
outsb
shrl
stos
adc
cs
leave
stos
mov
cmc
out
push
mov
jle
cmc
leave
jnp
jmp
ja
test
lock
jmp
pop
sub
push
aaa
mov
cmpsb
add
mov
stos
push
int
fwait
sbb
insb
mov
push
or
lock
pushf
fcomi
cli
sahf
dec
shrl
sar
scas
enter
cli
fucom
pop
popa
nop
xchg
ja
scas
push
aad
mov
pop
fld
add
jmp
lock
mov
xchg
iret
hlt
pop
mov
enter
pushf
and
mov
xchg
mov
addl
pop
addr16
imul
mov
jmp
loop,pn
dec
cmp
sub
sbb
jno
scas
push
pop
inc
test
xchg
scas
pop
pushf
aad
inc
lock
jb
sbb
inc
sbb
enter
daa
push
les
shl
inc
and
adc
jle
mov
sahf
mov
cmpsb
nop
mov
icebp
inc
sub
mov
scas
pushf
push
mov
push
or
fadd
lcall
lret
push
shll
or
test
cmc
jno
lods
sub
mov
sbb
in
lahf
adc
ficoml
sub
mov
in
adc
mov
jae
push
lahf
jg
jb
ret
push
jmp
inc
jnp
mov
lret
aas
mov
test
mov
lcall
rorb
or
out
popf
das
test
push
push
push
enter
mov
loop
pop
pop
dec
adc
inc
fsubl
cmp
je
xlat
es
scas
pop
xor
mov
mov
mov
lea
mov
sbb
jae
shll
inc
addr16
rolb
imul
and
into
add
xor
fisubl
sbb
push
aas
pop
rcrb
fldenv
mov
pop
sub
push
aas
outsl
add
mov
adc
sti
push
mov
fs
popf
sbb
stc
stc
or
sub
iret
and
rcrl
inc
cmp
daa
pop
jns
out
daa
sub
cwtl
xor
sub
lcall
push
subl
stos
jle
xor
add
mov
and
loop
stos
sahf
aad
dec
push
shlb
push
cmpsl
cmp
adc
mov
scas
adc
fisubrl
jae
mov
daa
add
jecxz
insb
fcomi
sub
xor
repz
repz
loopne
cmp
adcb
andb
and
pusha
jno
ljmp
mov
jg
inc
jecxz
inc
data16
inc
adc
enterw
xor
repnz
fwait
push
test
outsb
and
cmp
lea
sbb
mov
fnstenv
int3
jns
aam
inc
fst
sahf
repnz
lret
jnp
cmp
jbe
mov
add
jno
add
sbb
aaa
adc
cmpsb
shlb
mov
or
mov
scas
jg
dec
and
cli
sub
ja
out
sbb
mov
cli
repz
je
out
icebp
dec
pop
and
dec
jmp
cltd
aad
xchg
pop
mov
out
add
mov
lahf
xchg
xchg
loop
daa
sti
out
sub
and
imul
cmp
outsl
adc
cld
testb
fldl2t
imul
pop
xor
xorl
fbstp
mov
mov
jne
mov
stc
pushf
xor
mov
xchg
dec
clc
hlt
dec
repz
les
scas
out
mov
xchg
pop
mov
add
xchg
mov
test
std
aam
push
push
add
xorb
jae
int
adc
jmp
inc
repz
aad
into
xchg
aam
repnz
pusha
mov
enter
xchg
scas
add
cmp
out
into
shll
cmp
dec
add
mov
aas
repz
dec
js
sub
lea
or
fidivl
mov
jo
mov
xchg
mov
ret
shr
xor
bound
sahf
rcrl
mov
or
xor
lret
mov
enter
push
xchg
mov
xchg
jle
sub
mov
push
jbe
push
cli
inc
insl
cs
lods
push
icebp
and
xchg
xchg
insb
sbb
sub
loopne
in
repnz
stc
rclb
jne
sbb
xor
xchg
push
loopne
mov
mov
sbb
loope
sahf
call
adc
or
add
xchg
fs
fprem1
mov
push
add
pop
lock
mov
push
adc
jb
out
idiv
outsl
sub
sbb
out
cld
and
push
mov
push
and
aaa
inc
and
aam
xor
xor
mov
repnz
or
data16
mov
lahf
jl
jnp
ja
outsb
or
add
shlb
mov
rcll
es
orb
jns
xorb
mov
jge
or
add
fwait
roll
out
mov
insb
js
pop
and
jl
push
and
cmp
sub
push
aas
movsl
loope
push
jae
fstps
int3
adc
mov
call
push
xchg
insb
mov
cli
ds
lcall
hlt
jmp
sub
xchg
in
mov
mov
sbb
pop
pop
mov
arpl
pushf
aad
mov
hlt
sub
cmp
stos
xor
bound
dec
sub
add
ja
sub
mov
push
pop
pop
ds
bound
add
mov
imul
cs
push
push
add
stos
dec
adc
push
mov
jne
xchg
xor
sub
xor
fnsave
mov
mov
mov
or
sub
in
pop
add
imul
rorb
cmpsb
push
push
mov
mov
add
clc
or
dec
cmc
or
mov
push
cmp
gs
mov
rorl
fdivl
pop
mov
and
rorl
imul
cmc
sbb
dec
popa
gs
out
pushf
jo
mov
je
mov
adc
mov
xchg
fs
mov
popf
cld
cmpsb
cmp
scas
mov
cmp
into
mov
mov
arpl
icebp
push
mulb
push
and
lret
push
cltd
jns
sub
repnz
shl
sub
cmpsl
insl
cmp
insb
pushf
pop
xor
scas
push
xlat
push
xor
in
and
out
sub
rcl
inc
push
loopne
xchg
movsb
out
ret
add
push
add
adc
ljmp
add
xor
imul
lds
pop
fwait
int
enter
cli
popf
sub
push
in
out
fistpll
pop
inc
mov
pop
sbb
cmp
js
daa
and
hlt
scas
push
int3
inc
cmp
andl
rclb
cltd
xor
jmp
mov
outsb
xor
pop
jno
sbbl
push
addr16
xor
or
test
and
fnstsw
push
push
push
movsb
iret
jae
xchg
out
jmp
cmpsb
scas
movsl
iret
xchg
andl
call
int
popa
mov
in
cmpsl
sub
arpl
sub
push
mov
adc
jno
sub
add
xlat
inc
shrl
pop
or
sahf
xchg
push
movsb
xor
inc
cmp
notl
xor
or
jg
and
inc
mov
imul
iret
push
push
jbe
les
fiadds
push
jmp
xor
out
jno
nop
xor
sbb
push
shr
add
mov
std
jo
lahf
subb
cmpsl
dec
jmp
or
mov
popa
iret
xchg
fadds
push
or
dec
jmp
lcall
jecxz
inc
test
mov
mov
dec
and
sti
outsb
in
cmc
cmovae
pop
out
sub
xchg
bound
mov
call
imul
lcall
pop
lock
out
lret
fdivrl
dec
jns
adc
mov
cmp
xchg
push
dec
sub
insl
addr16
cmp
cmp
imul
push
adc
or
arpl
arpl
jb
stos
in
mov
addb
xchg
int3
jg
add
and
add
adc
push
lods
in
leave
pop
adc
imul
sbb
inc
lcall
add
and
dec
out
out
dec
pop
fildl
rcll
add
mov
outsl
hlt
push
test
lret
pop
sub
cmc
jle
pop
mov
jne
rcl
add
push
push
mov
lcall
fbld
movsb
or
mov
or
scas
repnz
or
lea
out
mov
push
fnstcw
inc
pop
pop
xchg
push
fbld
jne
mov
pop
icebp
addl
subl
mov
out
push
fisubrl
imul
in
push
cmpsb
and
scas
xor
scas
aaa
scas
add
push
shlb
mov
sub
or
xchg
lods
scas
test
cmpsl
mov
ret
mov
js
mov
outsl
sahf
rorb
jecxz
scas
iret
pop
rorb
sub
sahf
inc
outsb
lods
stc
dec
pop
push
pop
sarl
pushl
sub
adc
lcall
jbe
mov
inc
jbe
gs
jle
mov
mov
fdivr
std
ss
mov
cli
call
push
scas
xor
push
inc
mov
sub
mov
aam
inc
pop
sub
or
cltd
pop
mov
addr16
mov
fstpl
pusha
in
adc
mov
int3
add
sbb
or
out
call
imul
mov
dec
pop
jg
inc
mov
addr16
scas
outsl
cld
imul
fcoms
std
adc
and
aad
mov
imul
subl
and
push
test
iret
scas
test
out
push
aaa
ds
loopne
leave
xor
data16
sbb
mov
sarb
pop
lret
inc
jge
cmp
cli
enter
xlat
pop
nop
pop
sub
dec
sbb
ja
jp
xor
in
out
pop
push
loope
lahf
push
push
sbb
aas
int3
cltd
popa
ljmp
mov
ds
fucomip
int3
arpl
xchg
dec
ds
xor
hlt
pop
std
outsb
pop
mov
pop
mov
sub
fldenv
repnz
adc
adc
push
cmp
leave
fucomip
jp
aaa
sub
fisttpll
out
xchg
sbb
adc
out
mov
arpl
lea
sti
sub
lret
int3
sti
gs
ds
sbb
cltd
sub
loopne
mov
int3
jae
mov
fsubp
add
outsb
das
testb
imul
cli
xchg
mov
pop
sti
js
loop
addr16
xchg
hlt
insb
dec
xchg
fstps
test
cmpsl
cmp
xchg
mov
into
mov
xchg
xchg
mov
xchg
ljmp
mov
loopne
fisttpl
in
incl
mov
cltd
orb
sbb
sbb
nop
std
add
or
mov
sarb
std
lret
clc
ds
nop
pop
and
dec
sbb
inc
ss
lea
movsl
and
jg
rorb
push
and
daa
stc
dec
xlat
and
rclb
icebp
xchg
pop
xor
mov
pop
cmp
mov
dec
add
decl
ret
cmc
add
jno
mov
out
cwtl
in
xor
sbb
out
inc
ret
imul
push
mov
xor
jmp
sub
jb
sbb
mov
mov
inc
mov
mov
sub
repz
enter
or
pop
test
sti
sar
push
mov
and
les
push
ret
push
mov
ficoms
xor
inc
sbbl
push
into
push
fimull
out
cld
aam
mov
pop
addl
idiv
bound
leave
mov
test
adc
adc
rcll
push
ja
icebp
mov
pop
addr16
std
dec
repnz
pop
rorb
sub
ret
arpl
mov
insl
lret
ja
push
pop
jae
cs
sub
aas
sub
mov
insl
mov
outsb
mov
in
rcrb
das
pop
cmpsb
ss
adc
loop
ljmp
and
push
fisttpl
sti
mov
gs
mov
outsl
jne
and
in
mov
loope
das
loopne
sti
mov
pop
mov
inc
int
jae
test
hlt
xchg
xchg
int3
out
lret
test
jmp
mov
xchg
dec
add
call
xor
cmp
out
and
xchg
icebp
fsubrl
push
mov
push
sbb
rclb
mov
or
fistps
xchg
scas
aam
jae
scas
sbb
lods
fildl
xor
jge
cmp
decl
fnsave
subl
or
mov
push
and
xchg
xchg
rcr
sbb
jge
test
pop
mov
insb
push
adc
inc
push
push
inc
and
fsubrp
pusha
sarl
jl
je
push
adc
ja
dec
xchg
mov
cmpsb
sahf
push
data16
fcomip
int
js
xchg
and
mov
sub
inc
daa
push
xchg
leave
dec
movsl
inc
lods
pop
lods
test
cmc
pop
clc
mov
sbb
rdmsr
testl
jg
lret
inc
jl
mov
stos
ret
imul
sbb
mov
and
mov
cmp
add
pop
ret
std
jle
aas
gs
int3
jbe
inc
mov
insl
aaa
push
pushf
fisubrs
push
push
mov
push
jmp
cwtl
ds
loopne
adc
outsl
adc
sbb
insb
js
lret
fwait
adc
stos
jno
pop
jle
out
call
insl
icebp
cwtl
or
jle
sub
add
push
jnp
mov
lahf
sub
sbb
jecxz
mov
push
and
das
push
scas
mov
cmc
mov
shlb
ljmp
xor
mov
rcr
pushf
jb
daa
aaa
jbe
xchg
jl
adc
add
sbb
mov
cmpb
jnp
mov
lahf
imul
out
cltd
xor
repz
jnp
lret
cmp
les
xlat
pop
xor
jecxz
pushaw
jp
xchg
sbbl
std
outsb
xor
stos
add
mov
repz
sub
sbb
fmull
jmp
das
dec
push
nop
or
xor
cmpsl
mov
inc
inc
in
in
je
imul
lock
mov
je
cwtl
sbb
dec
ds
stos
cmp
cmpl
sub
lret
cmp
scas
mov
movb
jae
jp
daa
or
rol
mov
sub
in
movsl
pop
xchg
and
ret
loope
xlat
repnz
mov
dec
adc
xor
sbb
inc
sbb
in
lods
jmp
out
scas
cmp
ja
outsb
push
pop
mov
mov
daa
cmpsl
sub
mov
add
pop
cmp
mov
or
xchg
jg
xchg
mov
xor
fs
ficomps
cmp
cmp
cmpsb
ret
aad
inc
arpl
push
cmp
sub
mov
inc
adc
inc
mov
add
xor
aam
shrl
push
dec
les
lds
lcall
in
jp
xchg
or
cli
out
jbe
jnp
mov
inc
jp
sub
hlt
mov
adc
xor
and
mov
mov
fs
fstpl
and
xchg
stos
mov
insl
fwait
sub
fadd
ds
insl
dec
cmp
push
fwait
shll
aam
adc
xchg
out
scas
aas
popa
sarl
xor
insb
dec
nop
stos
and
xor
push
fimull
jge
in
jl
pop
sbb
lret
fbld
pop
fdiv
xlat
jo
jbe
mov
std
add
cmp
ds
jo
outsb
pop
xor
mov
lds
movsl
sbb
rol
inc
scas
xor
jno
push
sbb
call
cmp
pop
jmp
cmpsb
add
push
sbb
mov
movsl
and
daa
push
arpl
nop
leave
push
sbb
xor
push
pusha
ud2
repnz
jb
addr16
mov
add
sbb
xor
sbbb
mov
pop
inc
clc
jns
cmp
mov
push
pop
jne
repz
sub
lods
outsb
in
cwtl
popf
mov
hlt
lret
mov
les
test
iret
pushf
sub
sahf
loopne
dec
pop
mov
push
adc
push
aam
fwait
sub
lret
fldenv
push
mov
aad
jns
ljmp
clc
ss
push
decl
push
pop
lds
shrl
mov
xor
mov
push
cltd
mov
dec
js
sub
out
push
xchg
mov
dec
inc
ficompl
aam
jnp
jne
push
lahf
pop
cltd
and
mov
add
pop
mov
test
or
xchg
mov
call
orb
mov
dec
sarl
mov
fbld
aad
jbe
stc
push
sbb
test
cmpb
adcl
jae
cwtl
rcrb
xor
lock
push
sbb
jno
arpl
movsl
shll
jb
sbb
mov
test
xchg
dec
xchg
xchg
pop
add
jbe
cmc
mov
nop
fucomip
jb
cmp
xchg
adc
sbb
loopne
xor
outsb
nop
xchg
bnd
aad
xlat
shl
ljmp
pusha
cli
fwait
xor
push
clc
mov
inc
lcall
sub
xchg
xchg
and
cmc
dec
inc
adc
and
or
ret
mov
data16
clc
pusha
in
mov
xchg
clc
mov
and
jnp
ret
dec
in
mov
mov
inc
mov
push
pop
cmp
inc
or
adc
sbb
cmp
mov
mov
aaa
pop
aas
xor
aaa
dec
in
mov
pop
pop
dec
mov
jne
call
sbb
mov
scas
inc
jne
aaa
mov
add
xchg
dec
xchg
jp
rorl
add
lds
inc
mov
es
lret
clc
cmpsb
fs
push
shll
xchg
aas
and
stos
xchg
in
pop
mov
mov
gs
shl
lret
mov
jae
lret
ret
add
iret
inc
push
cmpsb
sbb
lods
mov
dec
xchg
xchg
xor
inc
xchg
mull
fsubrp
mov
test
inc
xchg
mov
divb
shl
push
adc
hlt
mov
jle
hlt
xor
dec
call
gs
add
mov
cltd
adc
cs
adc
sarl
pop
add
push
in
dec
jno
sub
xor
je
push
push
inc
pushf
adc
cmp
jb
cwtl
push
out
mov
dec
ficompl
in
aaa
out
jo
xchg
push
mov
push
outsl
or
int
mov
testl
xor
pop
xchg
push
mov
shr
jp
ds
pop
adc
push
stc
dec
xlat
xchg
out
push
cltd
fmull
scas
sbb
xor
in
xor
inc
jecxz
xor
movsb
or
mov
and
push
push
and
cs
cmp
pop
in
add
icebp
out
push
outsb
push
inc
sub
cmc
adc
in
xor
shll
stos
lods
sbb
xlat
add
adc
or
call
leave
hlt
cmp
fmull
ds
outsl
dec
mov
or
outsb
cltd
cwtl
adc
fcmovnb
fs
mov
fwait
hlt
leave
pusha
aas
inc
sub
xlat
xchg
repz
push
fstps
sub
loop
and
jecxz
add
inc
inc
sbb
sub
icebp
push
inc
repnz
push
fs
add
mov
les
xlat
inc
test
fnstcw
sub
in
rcrb
mov
in
lcall
scas
lods
jns
imul
push
das
jge
sbb
mov
adc
push
xlat
inc
cltd
shll
sahf
sub
shlb
jecxz
adc
popa
leave
jge
shll
jbe
hlt
xchg
dec
mov
adc
fidivl
mov
jle
inc
cltd
xor
sbb
pushf
xlat
imul
cmc
dec
jmp
ret
in
testl
rcll
add
dec
xchg
cmp
or
and
ljmp
scas
outsb
fcmovnb
lds
lods
and
loope
and
fldl
xchg
popa
push
cs
pop
enter
mov
jbe
hlt
and
aam
xchg
pop
xchg
and
inc
cmp
add
push
mov
fs
sti
mov
push
add
or
push
xchg
ret
mov
pop
popf
sbb
xor
mov
mov
cli
add
lret
jg
loope
xchg
sbb
add
ficoms
shl
repnz
rclb
sub
jbe
adc
xchg
lahf
cs
jle
lea
arpl
insb
popf
adc
outsb
ss
pop
out
aam
movsb
mov
mov
mov
mov
sbb
dec
xor
add
mov
push
int3
add
mov
cmp
jg
repz
mov
loop
cmp
cmp
pushf
sbb
inc
xchg
add
mov
hlt
push
mov
jg
data16
xchg
mov
pop
outsl
int3
mov
test
inc
adc
es
aam
ljmp
push
xlat
bound
or
jbe
shll
push
repz
cmp
frstor
cs
add
inc
dec
outsb
insl
movsb
cli
ror
cmpsl
scas
icebp
js
mov
cmc
scas
arpl
adc
mov
dec
je
inc
xchg
jbe
xchg
jno
gs
mov
sbb
and
repz
inc
shrb
pop
jmp
out
adc
and
sti
or
xchg
aam
add
insb
rcl
addl
test
sahf
shlb
inc
cmpsl
mov
push
je
add
pop
inc
ds
adc
jmp
mov
cmp
dec
pop
cmp
push
pop
add
xor
inc
insb
popa
into
push
push
int3
popf
int3
test
into
mov
and
jnp
aam
sub
pop
jno
test
in
int3
stc
std
dec
push
test
sub
in
push
xchg
rolb
sbb
rcrl
pop
mov
cmpsb
or
jmp
bound
push
or
loopne
mov
addr16
fs
fcmovu
sub
add
mov
push
cmp
js
insb
je
clc
sbb
and
jae
lds
mov
dec
xor
push
and
cli
jecxz
lea
sub
jp
out
pop
jp
sarl
int3
sub
fwait
movsb
fstpl
subl
popf
inc
xchg
xchg
lds
nop
adc
jnp
bound
add
inc
jae
dec
les
fbstp
scas
push
lahf
jle
xor
add
clc
jl
jne
inc
ficoml
xor
mov
sub
add
insb
sbb
or
incb
jnp
clc
mov
lcall
jle
and
add
fimull
jo
push
cmp
mov
aaa
pop
and
ret
cmp
sbb
jb
jp
ret
push
sbb
pushf
stc
xchg
sbb
movsl
push
jmp
inc
nop
mov
jecxz
cmp
mov
xor
push
mov
xor
addb
xchg
push
loop
push
inc
lods
mov
mov
leave
icebp
neg
sahf
cmpl
insb
inc
popf
sub
adc
fcmovnb
xlat
adc
adc
test
hlt
outsl
ss
add
shll
jne
lcall
mov
lea
pop
push
test
dec
cmp
mov
daa
ret
test
outsl
add
ljmp
cmp
stc
mov
mov
dec
xor
jmp
movsl
pop
and
clc
mov
mov
mov
cmpsb
ffree
sub
jnp
mov
push
outsl
push
inc
xchg
mov
pop
aad
inc
mov
repnz
add
mov
sbb
cltd
mov
cmp
xlat
jecxz
fnstenv
out
xor
lret
jg
loop
inc
cltd
ret
xor
xchg
xor
xor
in
enter
inc
outsb
gs
jmp
mov
and
sub
xlat
jle
popf
mov
mov
subl
ja
leave
in
xchg
fiaddl
call
xchg
imul
or
imul
dec
push
adc
pop
fistpll
mov
mov
and
in
iret
xchg
cmpsl
adc
inc
or
xor
cmpsb
je
in
add
push
mov
sub
xchg
dec
sub
xchg
jnp
shlb
cli
jae
orl
sbb
xchg
fcmovbe
dec
cs
rcll
aas
fwait
cli
push
addl
leave
fwait
xchg
pop
jmp
mov
out
fstl
dec
jns
lret
push
cs
lds
ljmp
mov
add
es
loopne
out
sub
mov
fnsave
push
mov
pushf
cltd
fs
adc
aam
rcrb
iret
popf
aad
push
repz
jno
imul
push
pusha
ljmp
cmp
lds
push
cmp
leave
sti
or
inc
insb
std
xor
and
popf
lods
out
mov
jge
arpl
mov
xchg
mov
add
jne
sbb
nop
push
push
xchg
jecxz
cmp
mov
or
loope
popf
cmp
or
xchg
outsl
lods
clc
pop
cmpl
xor
or
xor
mov
cmp
sbb
into
mov
dec
mov
pop
add
xlat
bound
enter
je
popf
xlat
scas
hlt
sbb
or
add
insl
imul
sbb
je
lcall
cmp
and
sbb
jnp
xchg
orl
xchg
xacquire
popa
xchg
test
je
in
adc
fstpl
notb
pop
repnz
loop
push
fwait
push
dec
pop
xor
mov
fwait
and
popf
dec
and
ss
outsl
mov
xor
cmc
call
pop
cmp
incl
jmp
nop
adc
das
outsb
inc
or
fcoml
mov
push
sbb
repz
jge
jge
jns
push
fs
and
xchg
rcll
cmpsl
inc
rcr
fcmovnbe
out
call
movsl
mov
sbb
outsl
stc
cwtl
push
mov
inc
xor
mov
inc
and
pop
addr16
mov
cmp
insb
xchg
pop
or
mov
cmp
jno
cld
mov
push
outsl
adc
mov
shrl
out
cmovae
fcomp
js
sbb
sub
test
dec
call
pushf
shrl
jecxz
inc
adc
or
insl
cltd
fldl
pop
xor
data16
stos
fmuls
js
push
fnsave
mov
std
cmc
push
adc
clc
xlat
mov
sub
out
push
mov
stos
mov
adc
insb
pop
xor
imul
out
push
test
bound
push
sub
vmread
jmp
pop
int
js
jge
mov
ficompl
pop
push
and
in
inc
inc
xchg
pop
in
hlt
jg
scas
loopne
mov
xchg
call
insb
mov
mov
dec
clc
and
ret
sbb
dec
sbb
scas
mov
and
mov
insl
mul
ja
leave
xchg
pop
insl
pop
jae
lods
jle
int3
roll
push
rcrl
mov
ja
cmp
and
scas
rclb
mov
es
push
push
sbb
mov
shlb
xor
cmp
adc
and
mov
and
sbb
dec
push
gs
cs
xor
xor
sahf
mov
or
or
adc
jecxz
xchg
pop
cwtl
jae
inc
mov
rclb
mov
mov
xchg
bound
mov
lods
popf
push
sbb
xor
ljmp
in
xchg
and
lahf
jo
bound
popa
sbb
adc
adc
or
xor
dec
mov
mov
xchg
sub
pop
outsb
xor
mov
cmpsb
test
inc
pop
add
push
aam
pop
in
jb
add
cli
outsl
fs
mov
cmp
idivl
out
mov
sbb
xor
jb
jb
scas
mov
mov
or
and
arpl
rorb
mov
inc
lcall
add
sub
mov
hlt
jmp
stc
shl
jmp
push
out
cmpsl
sub
and
lahf
pop
jle
fldcw
daa
in
jno
and
jb
mov
mov
inc
add
mov
insb
fmull
xorb
and
shlb
imul
mov
fcompl
or
scas
sbb
roll
testl
xchg
or
sbb
cmc
syscall
icebp
sti
pop
in
sbb
jge
jmp
add
push
inc
pop
jmp
cltd
ja
and
adc
pop
mov
xchg
lret
fwait
sbb
jp
xchg
add
inc
imul
jnp
push
cmpsl
imul
jo
pop
xchg
fnstcw
cltd
mov
repz
hlt
lock
push
inc
repz
je
cmp
repz
sbb
in
mov
adc
vpshufhw
jle
add
cmp
imul
push
sbb
mov
xor
mov
repz
imul
or
fs
inc
sti
xchg
mov
in
mov
add
bound
je
popf
subb
adc
fs
mov
jg
dec
or
fimuls
push
or
and
jns
or
add
loop
pop
test
mov
xchg
je
leave
xchg
std
ljmp
outsb
scas
sbb
push
repnz
hlt
stos
mov
cmp
lods
orl
push
nop
lods
mov
mov
mov
sbb
sti
stos
inc
mov
popa
and
pusha
mov
in
ljmp
leave
call
mov
xor
jg
test
lock
inc
push
dec
push
test
arpl
adc
push
enter
shll
xchg
or
dec
xchg
inc
dec
push
jnp
shl
push
ljmp
add
dec
jne
cmp
sti
inc
rorl
mov
fdivr
inc
mov
push
out
ja
cmp
sub
mov
mov
xchg
ret
xlat
mov
inc
push
xorps
or
push
loopne
aad
mov
push
mov
fdivp
jns
or
loop
fadd
add
ret
stc
outsl
leave
mov
inc
sub
inc
hlt
fwait
clc
and
push
testl
loopne
clc
jae
fdivp
adc
or
push
xor
pop
jno
mov
sbb
bound
adc
shl
popa
adc
int
push
mov
mov
pop
ret
ret
icebp
pusha
xchg
lret
pop
push
cmp
jae
mov
mov
rclb
aad
adc
les
inc
notb
dec
xchg
mov
jp
jle
or
jge
mov
jne
bound
inc
fwait
mov
outsb
lock
xchg
jp
sub
cmp
ljmp
push
add
mov
mov
lcall
cmpsl
imul
xchg
js
jbe
aam
sti
xorb
adc
out
and
out
xchg
xor
mov
xchg
rorl
add
mov
shrd
sbbb
pop
mov
or
movsb
mov
in
add
adc
jmp
pop
shrl
movsb
hlt
lea
sarb
lahf
inc
fsubrl
lahf
enter
cmp
sbb
xchg
jbe
xchg
out
push
popa
in
inc
mov
test
sbb
test
and
fwait
mov
xor
or
jecxz
mov
jg
pop
idivb
or
push
daa
gs
adc
and
sub
pop
cmpsl
inc
stc
xchg
lea
sbb
fbstp
shrb
gs
xor
outsb
sahf
mov
clc
xor
xchg
or
and
popf
ret
mov
inc
mov
aam
mov
push
loope
cmc
add
mov
add
pop
sub
in
xor
dec
pop
ljmp
stos
xor
movsl
fcoms
fidivs
mov
hlt
movsl
mov
stos
mov
or
adc
stos
aad
out
inc
popf
dec
jnp
loopne
scas
jae
dec
ljmp
jbe
jne
pop
pop
mov
add
add
aas
xchg
adc
out
cmp
jno
push
adc
mov
es
inc
insl
arpl
les
fucomp
pop
movsl
sti
inc
and
or
lock
in
xchg
rorb
or
dec
das
ljmp
les
test
or
pop
mov
pop
popa
sbb
jmp
clc
stc
xchg
mov
adc
mov
cmpsl
push
mov
outsb
sbb
push
popa
mov
mov
cmp
pop
lret
loopne
insl
ja
rcl
add
or
jl
mov
and
cwtl
mov
or
out
inc
or
cmp
cld
mov
mov
mov
xchg
xor
push
push
das
scas
int
cmp
pop
pop
sub
pop
cmpb
cld
ds
sbbb
mov
clc
movsb
inc
fs
les
and
cmp
lret
arpl
scas
ja
pop
and
inc
cld
xchg
jmp
js
sbb
cltd
stos
adc
mov
jo
dec
and
leave
call
dec
std
and
cmp
sahf
mov
or
shlb
lret
and
mov
inc
cmpsb
ljmp
lods
outsb
inc
push
mov
js
cmpsl
sbb
mov
icebp
cs
or
mov
xchg
es
sub
sbb
sarb
mov
andb
and
dec
add
pop
adcb
pusha
adc
or
jecxz
iret
jg
lock
in
movsl
out
in
and
ds
jge
xchg
pop
mov
xor
call
xchg
dec
sub
loop
jae
cmpl
or
jle
cmp
stos
cli
add
dec
jo
imul
shll
je
inc
pop
lcall
mov
lods
sub
lret
dec
pop
fs
popf
jl
cld
sbb
pop
gs
fstpl
into
xor
mov
pop
adc
jno
adc
sbb
or
lds
pop
es
mov
pop
fdivs
inc
lea
mov
dec
pushf
push
adc
loope
test
in
add
jns
mov
add
or
lret
fwait
push
mov
movsb
pop
idiv
inc
sbb
pop
roll
pop
xchg
dec
and
insb
les
mov
sub
mov
aam
cli
outsw
xor
in
adc
sahf
insl
or
fdiv
shll
mov
loop
sbb
lds
or
add
add
mov
cmp
aaa
loopne
in
stc
pop
mov
push
inc
pop
pushf
mov
stos
iret
in
in
dec
cmp
xor
sti
in
inc
orb
pop
mov
xor
jge
inc
out
and
push
lea
xor
outsb
sarl
jl
sub
out
push
lea
je
sbb
push
mov
mov
rcll
repz
out
adc
mov
xchg
mov
or
mov
insb
mov
sbb
mov
arpl
push
sti
aaa
lods
es
movsl
inc
in
push
cmp
xor
ret
je
add
roll
mov
sub
push
insb
test
xor
pusha
stos
imul
jae
enter
vphaddwq
mov
leave
mov
loope
push
out
fisubrl
xchg
aam
subb
insb
jecxz
aam
out
push
lods
fcomps
pop
cmpsl
and
mov
in
fwait
jecxz
or
cmc
orl
jge
add
xchg
out
xchg
sarl
adc
test
mov
sub
aaa
pop
cwtl
loopne
push
dec
sbb
cmpl
add
pop
sbbl
sbbl
js
xor
mov
lcall
xorl
jno
inc
andb
lods
mov
outsl
xor
mov
jecxz
and
mov
sub
adc
ffreep
scas
rcrl
jl
lods
mov
arpl
sub
cli
daa
int
scas
cmc
imull
cmp
dec
out
adc
dec
jnp
inc
dec
push
xchg
push
nop
pop
jne
arpl
inc
adc
xchg
fsubs
sbb
das
jp
pop
jns
stc
push
sahf
scas
xor
adc
and
outsb
daa
insl
lret
in
jmp
scas
test
mov
pushf
insl
inc
add
dec
and
jb
ret
scas
fld
mov
lcall
imul
lahf
movsl
xchg
cmpsb
je
cli
mov
cmp
or
sahf
mov
addr16
and
mov
lahf
sar
or
cltd
out
xlat
mov
dec
insb
ss
mov
push
and
xor
or
ret
push
xchg
xchg
sbb
dec
or
xchg
xchg
bound
xchg
and
cmp
out
xchg
nop
push
aas
and
test
fiaddl
jmp
xchg
aaa
arpl
mov
mov
std
and
xor
add
into
aaa
test
pushf
scas
pop
sub
mov
mov
adc
pop
out
sbb
in
xor
cmpb
pop
add
test
adc
mov
gs
fiadds
aaa
inc
add
or
lret
ret
or
outsl
fnsave
aad
andnps
xchg
sub
in
es
pop
dec
addr16
lea
pop
sarl
mov
js
push
popf
mov
test
push
hlt
nop
dec
negl
xchg
clc
into
rcll
jae
repnz
mov
push
fs
mov
mov
cmp
pop
lea
and
mov
mov
sbb
mov
fidivl
int3
aas
cmpsl
mov
lret
push
pop
xor
roll
scas
loop
push
sbb
xlat
pop
add
cltd
int3
lods
fldenv
js
cmpsl
and
push
sub
pop
ss
cmp
adc
test
pop
dec
push
xchg
jecxz
cmp
pop
aaa
xorl
adc
adc
mov
xchg
mov
dec
inc
call
jle
inc
xchg
in
mov
shl
or
cli
clc
push
pop
cmpb
push
xchg
push
aad
adc
aaa
adc
push
and
in
or
cli
aam
test
sub
cwtl
jle
lods
loop
scas
testl
xchg
add
or
push
lods
mov
aaa
dec
fidivs
icebp
int3
imul
fsubrs
hlt
jb
xchg
and
inc
push
jg
pop
sbb
mov
aaa
movsb
adc
pop
pop
imul
sub
inc
subb
stos
mov
adc
push
mov
jecxz
inc
push
clc
push
aad
js
incb
inc
xchg
fcmovnbe
aad
cld
mov
push
in
mov
dec
push
nop
pop
pop
xchg
stos
sbb
in
pop
lods
out
add
mov
jle
pop
bound
popf
inc
add
popf
or
test
mov
jb
sub
jo
push
test
sbb
hlt
push
dec
int3
sub
rorl
add
dec
scas
stos
cmp
dec
jecxz
sbb
insb
add
data16
cmovnp
out
add
xor
pop
cmp
mov
rorb
loop
inc
dec
icebp
out
or
les
inc
cmp
aam
push
push
adc
fsubrl
lret
pop
cltd
add
pop
jb
fistpl
or
xchg
jmp
insb
aam
xor
and
cmp
les
mov
dec
aas
sub
lds
xchg
pop
jmp
outsb
cwtl
stos
sbb
clc
dec
push
push
cmpsb
push
and
sbb
cmp
aaa
inc
ds
test
push
js
inc
aaa
es
clc
add
mov
or
cwtl
fnstenv
insb
push
xchg
mov
lea
lret
push
push
push
mov
lahf
aas
xchg
xor
lea
insb
gs
fiaddl
sarb
imul
and
test
sub
dec
test
mov
popf
daa
int
pop
incb
pop
cmpsb
scas
cmp
fistl
mov
std
pop
xchg
cmp
scas
lcall
push
adc
xchg
es
aad
es
adc
mov
mov
or
cmp
rcrb
sub
sbb
xor
mov
xchg
out
sbb
jo
js
fld
dec
or
mov
call
inc
ja
add
fnstsw
ficoms
or
popf
xchg
add
loope
imul
scas
adc
inc
or
pop
ret
inc
out
sbb
std
xor
cmp
rclb
fistl
xchg
nop
mov
inc
xorb
mov
inc
mov
fistl
mov
js
xor
push
pop
dec
inc
xor
pop
xlat
lcall
out
mov
inc
cmp
mov
jno
push
dec
mov
add
in
stos
xchg
jmp
lods
cli
loope
push
push
stc
stos
repz
jmp
mov
test
into
aad
fstpl
jmp
or
out
push
or
push
push
cltd
jns
call
and
jbe
es
pop
loop
mov
jne
test
add
cmp
imull
push
out
in
sbb
lods
lds
dec
mov
push
pop
pop
adc
add
xor
push
test
imul
mov
add
lahf
jp
imul
lahf
jecxz
xor
sbb
imul
pop
inc
push
jle
rorb
scas
mov
push
xchg
and
sbb
dec
faddl
in
popf
je
jns
fstp
pop
mov
jl
or
dec
xchg
sbb
cli
js
mov
pusha
mov
out
imul
scas
addr16
subb
inc
xchg
sbb
jmp
jae
pop
test
push
xchg
inc
push
xor
arpl
in
pop
imul
repz
and
sbb
cwtl
adc
push
addb
push
test
cmpsb
in
fstp
mov
mov
xchg
push
mov
sbb
jno
dec
enter
in
fcoms
out
xor
daa
mov
or
sub
cmp
jge
movb
jno
cltd
dec
fidivrl
loop
fsts
inc
dec
cmp
jl
xchg
dec
dec
in
mov
fsubrs
sbb
fistpll
fists
jae
cltd
fimull
push
xor
hlt
add
pop
xor
mov
jnp
pop
aad
jne
jle
inc
sbb
int
fisttps
adc
ret
int3
xchg
popf
clc
sbb
mov
pop
fwait
xor
js
push
ja
cmp
adc
mov
pop
cmc
repz
sahf
inc
fdivs
aas
mov
icebp
lods
sbb
sub
data16
loopne
sbb
xchg
ret
ja
pop
hlt
xchg
sbb
jnp
loop
mov
and
dec
rcrb
sahf
fldl
repnz
jnp
push
mov
sti
popf
das
lods
xor
pop
add
es
les
xor
movsb
ljmp
inc
pop
pusha
ds
push
dec
xor
dec
jg
aas
cmpsb
dec
shlb
or
dec
adc
popf
ja
xchg
out
pushf
testl
leave
icebp
add
jge
orl
in
dec
cmp
jl
xchg
lret
fstpt
pop
xor
mov
xchg
andb
out
sbb
std
mov
mov
pop
and
into
dec
pop
jno
rcrb
gs
and
jbe
jmp
test
xchg
inc
insb
mov
push
fcompl
jg
inc
shrl
inc
push
and
loopne
cmp
cmp
dec
scas
sub
xchg
add
jl
das
pop
notb
pop
nop
aas
adc
iret
cli
movsl
cld
test
dec
mov
inc
mov
cs
je
push
mov
int3
shll
and
lea
dec
lcall
insb
cmp
cmc
mov
fadds
insb
loop
cs
divb
add
cmp
or
bound
pop
mov
lods
add
enter
pop
and
cli
add
push
cmc
insl
js
xchg
adc
jb
jae
lcall
jge
ja
inc
add
push
popa
sti
mov
jae
ljmp
sub
mov
sub
in
mov
pushf
push
cmp
jmp
or
mov
mov
popf
out
arpl
adc
pop
iret
dec
out
ljmp
cmc
xchg
sub
test
insb
test
xor
cwtl
add
int
mov
push
add
inc
jae
movsb
adc
sub
mov
jo
std
subb
imul
add
loopne
xor
xor
in
loope
adc
and
push
mov
pop
int3
ror
popa
leave
cld
icebp
dec
xchg
add
xor
jnp
mov
or
daa
lods
jmp
fucomip
js
jmp
divl
inc
loopne
jg
not
aad
cmp
push
cmpsb
jb
sbb
push
mov
add
sub
dec
movsl
dec
sub
ljmp
cmp
push
add
test
in
push
rcrb
lahf
jne
pop
gs
push
sbb
testl
cmp
leave
adc
mov
cmp
or
arpl
loop
js
add
cmp
insb
call
jecxz
xor
sub
shlb
stc
mov
stc
insb
jns
or
lds
mov
mov
addb
jmp
js
lret
jl
pop
or
jae
lahf
mov
dec
pop
nop
popa
dec
clc
fimuls
lods
adc
cmp
pop
or
xchg
jl
outsl
repnz
push
ret
rcr
push
pop
or
jbe
out
push
jp
sahf
push
fcmovnu
dec
jle
mov
popa
xor
pop
mov
add
test
out
mov
sarl
sbb
add
push
out
popf
and
adc
cmp
jp
fidivl
sbb
fisubrs
call
jae
mov
cmc
adc
adc
inc
jae
loopne
aam
mov
cmpsl
testb
fsts
add
test
push
jge
clc
es
inc
out
imul
lds
stc
aam
pop
ficomps
push
mov
pop
push
daa
les
push
pushf
cmpsb
push
call
lods
jae
mov
andb
xchg
stos
sbb
push
jge
cmp
lods
in
or
xchg
xor
aaa
jbe
imul
inc
jo
outsl
lret
mov
test
movsb
subl
imul
or
addr16
movsb
inc
add
movsl
shll
loop
sbb
cwtl
dec
adcl
aas
xlat
push
lods
stos
jb
ret
pop
movsl
aam
mov
jne
xchg
cmpsb
outsl
cmp
adc
adc
repz
int
inc
fisubrs
fiaddl
mov
pushf
jg
punpckhdq
nop
xchg
fsubrl
adc
icebp
pop
xchg
imul
lods
push
fstp
iret
rcl
add
loopne
outsb
sti
pop
xor
jmp
sbb
jns
sbb
dec
stc
orb
and
negb
pop
pop
jno
inc
inc
or
pop
shrb
jb
aad
repnz
or
cmc
pop
mov
movaps
push
add
lea
xchg
jp
loop
pop
pop
mov
add
test
push
dec
xchg
jnp
dec
aad
mov
pusha
dec
ja
xchg
lock
lea
aad
and
mov
addr16
xor
imul
mov
jae
mov
push
arpl
rcrl
test
sbb
gs
clc
dec
imul
cwtl
cmpsb
mov
xor
push
lret
push
shrl
jmp
lahf
orb
push
xor
ret
mov
jecxz
pop
mov
pop
mov
xlat
xchg
jnp
mov
in
fwait
add
add
dec
out
je
mov
scas
pop
divb
sub
sub
cli
and
hlt
out
rorb
stos
scas
loope
rcrb
daa
fiaddl
arpl
addr16
inc
sbb
hlt
movl
xchg
cmp
ret
adc
sub
fwait
jb
push
ljmp
scas
sub
cmp
filds
xchg
or
push
clc
sbbb
inc
mov
pop
shll
jg
test
or
out
test
push
mov
enter
mov
cmp
divb
stos
mov
xchg
and
mull
arpl
psllq
mov
shl
stos
lods
lods
xchg
mov
mov
stos
inc
aam
repnz
push
addr16
outsl
fiadds
or
cmp
add
mov
mov
inc
popa
adc
out
cmp
mov
lea
sbbl
out
push
pop
repz
xor
cmp
mov
xchg
ror
pop
push
xor
jl
or
dec
mov
jnp
sub
shl
mov
je
sbb
daa
subl
cmpb
jne
xchg
sub
lret
mov
andb
mov
mov
jl
into
outsb
mov
push
xchg
adc
lahf
ficoms
xor
cmpsl
stos
jae
and
test
dec
aam
push
ja
mov
test
or
push
rol
or
inc
mov
xlat
lock
push
dec
aas
rcr
imul
push
fmulp
dec
pop
mov
and
cwtl
xchg
adc
xlat
ss
shrl
hlt
clc
ficompl
adc
sub
lea
cmpsl
push
pop
out
pop
jns
cmp
and
jmp
inc
fimull
or
aam
sub
outsl
push
xor
sub
jl
mov
test
add
loope
xlat
or
push
add
aas
lods
leave
pop
in
fldz
add
test
in
xorb
adc
and
subl
inc
pop
rcrl
xor
add
sbb
jns
cmp
outsb
fs
test
sub
sbb
pushf
cmp
jp
jns
mov
pushf
jge
fucom
mov
loop
ret
lea
xchg
push
in
and
dec
push
push
inc
push
xchg
mov
xorl
mov
in
fldz
mov
loope
std
push
xor
push
pop
push
cmp
lea
das
pushl
jb
cld
fisubl
jg
xchg
in
lds
push
pushf
adc
aam
sbb
cltd
sub
lods
jns
ljmp
sahf
mov
mov
sbb
bound
dec
rclb
cmpsl
scas
xor
in
add
cmpb
jl
xor
pop
loope
mov
inc
std
pop
gs
enter
movsl
adc
dec
and
xlat
xchg
xlat
enter
ret
mov
mov
cs
sub
jecxz
int
add
xchg
inc
and
sbb
cmp
aad
test
pop
pop
mov
dec
ja
or
fadds
fnstcw
es
add
gs
pusha
adc
or
sbb
imul
stc
pop
cmp
jl
lods
mov
inc
push
pop
test
push
adc
mull
cmp
xchg
sbb
scas
lock
and
jl
insb
out
mov
jl
mov
push
stos
jo
arpl
fwait
lret
outsb
xchg
mov
test
jo
jo
in
shrb
push
push
popa
test
cli
push
pop
cmp
in
int3
xor
js
or
int
in
inc
je
dec
pop
cmp
xor
mov
add
insb
popa
std
out
pop
xchg
mov
and
jnp
jae
filds
push
fwait
popf
or
test
fsubp
stos
cmp
sbb
or
sbb
push
cs
mov
sbb
jmp
mov
movsl
jne
or
adc
mov
dec
fistps
xor
lea
mov
push
into
mov
push
jo
jns
mov
out
rcl
pop
in
push
push
push
sbb
scas
jne
int3
lret
sbb
mov
cwtl
xor
mov
or
cmpsb
aam
and
fldt
push
inc
pop
fidivl
pop
add
fwait
sub
fmul
mov
shll
adc
mov
mov
fstl
add
add
shll
aas
mov
dec
adcb
dec
mov
sub
cmp
sbb
js
cmp
loop
lret
es
sbb
repz
mov
push
xchg
cltd
and
jecxz
adc
add
insl
sbb
std
pop
push
push
cmp
mov
lret
push
inc
fst
lahf
inc
or
imul
test
data16
push
add
dec
icebp
pop
push
test
jne
inc
iret
jecxz
aam
mov
mov
xor
inc
xor
add
jp
adc
lds
dec
pop
roll
xchg
test
mov
push
sbb
icebp
dec
sbb
jno
mov
mov
sub
iret
pop
in
dec
sbb
es
movsb
push
cwtl
cmp
mulb
pop
pop
dec
mov
xchg
jne
aas
mov
loopne
nop
in
leave
mov
repnz
add
jl
fs
test
push
stos
sub
outsb
rcr
pop
sub
and
pop
or
mov
adc
add
or
dec
inc
mov
ljmp
xchg
mov
rcl
fidivl
ret
inc
repz
inc
out
decl
sub
repz
decl
fcomps
inc
push
jl
in
jmp
dec
fldenv
imul
xchg
int
xchg
adc
pop
sbb
cmp
and
testb
add
call
cmpsl
mov
pop
dec
fscale
cmc
lock
push
aaa
xlat
push
stos
add
std
push
and
mov
or
or
test
mov
lahf
pop
cwtl
sti
test
adc
dec
mov
scas
hlt
cmp
sbb
sahf
mov
outsl
mov
adc
mov
call
cmc
sar
push
push
repz
pop
pop
fadds
mov
xchg
scas
out
adc
flds
movsb
js
add
adc
sbb
gs
sub
pop
aaa
jle
mov
test
add
mov
movb
push
out
stos
stc
out
clc
or
xchg
pushf
sti
jnp
push
mov
sbb
mov
inc
lods
outsb
mov
imul
xor
pop
dec
lret
les
jno
push
mov
into
add
inc
jne
jge
sbb
in
push
sub
dec
loop
fdiv
cmp
xchg
and
jo
je
test
sbb
push
dec
jbe
mov
push
in
mov
dec
notl
push
into
hlt
xchg
imul
imul
ds
pop
jp
sub
adc
movsb
sub
xorb
mov
imul
das
dec
jno
or
sub
fmull
lea
test
lea
push
cmpsb
test
popa
pushf
add
ss
iret
mov
push
adc
aaa
movsb
and
data16
and
fchs
xor
xchg
inc
mov
add
mov
mov
insb
mov
and
mov
adc
pop
ret
cmp
push
adc
aam
xchg
inc
ror
cmp
mov
xor
mov
dec
aaa
pop
push
lock
sbb
sub
jns
pop
and
sub
cmpsb
push
and
cmp
jg
or
mov
orl
stc
or
xlat
xchg
push
add
mov
mov
cwtl
or
cwtl
cmp
xchg
mov
cmpsl
outsl
xor
pop
jb
into
lock
dec
cmpsl
int
cwtl
mov
mov
or
sbb
pop
xchg
push
imull
inc
adc
mov
sbb
stc
imul
dec
mov
mov
notl
mov
dec
xor
decl
jle
sbb
lea
popa
leave
xor
or
add
mov
pop
mov
add
mov
stos
lcall
pop
insb
inc
ret
stos
outsl
mov
test
cli
mov
outsb
lahf
or
inc
loopne
dec
mov
add
inc
test
sub
mov
push
mov
and
insb
out
or
inc
mov
and
mov
mov
pop
fistpl
inc
mov
insl
pop
add
jb
xlat
jmp
stc
les
enter
adc
xchg
inc
iret
inc
movsl
xor
outsb
dec
sbb
jecxz
movsl
jae
jg
and
push
xorb
jb
icebp
xlat
inc
sbb
addb
cli
xor
in
push
aas
lods
dec
std
lods
xlat
ds
xor
outsl
adc
push
scas
jg
loope
repz
loop
loope
sbb
hlt
inc
or
es
test
add
cmp
in
mov
sub
pushw
push
adc
cs
jb
lds
sub
mov
lret
test
or
push
cwtl
int
and
adc
shrl
int
pop
jp
jns
sbb
mov
jnp
inc
sub
rclb
add
aaa
in
lock
pop
adc
xchg
push
lretw
dec
daa
jb
cli
jnp
aad
cmp
inc
pop
repz
fisubrs
inc
push
adc
cwtl
xor
addb
adc
cmp
out
or
mov
cmp
mov
clc
jge
and
xor
jbe
or
mov
cltd
dec
shlb
sub
jge
andl
dec
inc
les
int
add
rcrb
mov
daa
cmp
mov
mov
jecxz
je
mov
lods
repz
sbb
cwtl
adc
adc
pop
mov
dec
push
pushl
mov
mov
inc
fmuls
insl
outsl
fadds
sbb
add
lds
mov
sub
jne
pop
mov
loope
adc
and
loopne
mov
iret
cmpsl
xlat
lret
clc
add
push
xor
lods
imul
movsl
inc
sti
xchg
loopne
divb
loopne,pn
cwtl
and
std
mov
loop
fs
cwtl
scas
ds
jmp
inc
pop
push
adcb
fsts
sbb
add
xor
fbstp
mov
xor
mov
xor
and
pop
icebp
inc
pop
movsb
mov
xor
add
faddp
push
push
fs
enter
jno
fistl
test
cmpsl
inc
sub
test
jp
repnz
or
leave
xorw
aam
mov
inc
push
add
daa
sub
loope
test
add
in
inc
jne
push
hlt
movsb
outsb
repnz
aad
popa
adc
inc
fdivrl
rcl
mov
mov
in
push
out
sbb
adc
adc
inc
out
cmovge
insb
mov
mov
adc
lock
sbb
xor
call
insb
sti
xchg
sub
sub
movsb
cmp
ret
adc
mov
add
dec
aas
push
das
loopne
and
aas
mov
addr16
and
mov
mov
xchg
repz
cmp
ds
jb
fs
and
jmp
addb
sub
inc
lahf
push
fldl
pop
xor
mov
je
and
mov
add
les
cmc
sub
leave
and
pop
add
cmp
mov
or
stos
insl
mov
jl
cwtl
dec
fcom
xor
bound
push
push
mov
push
mov
imul
cmp
lahf
jno
sti
mov
cs
into
adc
test
shll
rorl
ja
dec
add
in
addb
outsl
in
or
into
ret
loope
mov
sbb
ret
mov
outsl
xchg
movsl
xchg
dec
inc
xchg
xchg
cmp
and
mov
or
data16
sarb
jbe
imulb
in
pop
push
xlat
ret
pushf
repnz
jge
sbb
aad
mov
test
or
cwtl
mov
das
clc
mov
inc
repz
push
icebp
inc
loopne
mov
subl
mov
insl
and
xor
out
pop
inc
es
pop
ret
stos
dec
push
and
repz
cmp
div
mov
in
movsl
and
xor
xor
repz
cli
push
movsb
dec
mov
nop
test
jp
fbld
xchg
les
movsl
push
test
je
loop
inc
pushf
xchg
pop
or
jbe
sub
dec
dec
iret
push
rorb
inc
iret
cmp
cld
mov
inc
dec
fistpll
mov
lods
imul
imul
out
sar
sti
jmp
adc
hlt
dec
mov
sbb
xor
test
jb
nop
sub
push
sub
cmc
test
jb
xchg
nop
inc
jmp
or
pop
push
pusha
icebp
dec
cmp
jbe
lods
dec
push
cmp
fs
xchg
mov
iret
dec
fwait
mov
rcrl
xchg
adc
push
loop
into
int3
addl
test
ljmp
cmpsb
das
xor
pop
mov
and
mov
xor
adc
cmpb
fldcw
out
out
pushf
dec
pushf
mov
rclb
adc
scas
fldcw
insl
pop
xor
or
adcl
push
or
cs
ja
mov
or
dec
pop
lahf
xchg
push
into
aas
mov
and
pop
mov
test
test
push
cmp
mov
int
jb
sbb
mov
sub
xor
lods
jbe
xor
xor
movsl
fidivs
orb
nop
mov
or
adc
mov
mov
outsl
scas
jae
xor
test
adc
test
ds
mov
xor
cmp
mov
jge
sub
ret
aam
sahf
jle
cmp
lods
xchg
call
es
ljmp
lahf
icebp
adc
bound
jmp
or
jae
out
outsl
insl
mov
add
add
mov
pop
and
aaa
mov
mov
scas
mov
in
cmpl
enter
jp
xor
aaa
sarl
lret
mov
mov
sub
js
ret
mov
push
xchg
mov
stos
add
pushf
jb
scas
gs
or
ljmp
pop
mov
movsb
sbb
aad
int
cmpsb
dec
out
ljmp
lea
inc
in
mov
add
addl
imul
push
loope
push
sbb
pop
or
add
test
mov
adc
jns
push
shll
mov
inc
adc
idivl
mov
test
cmpsb
jle
aaa
inc
cmp
cmp
mov
das
test
sub
scas
and
dec
lcall
push
xor
lods
adc
jne
adc
loop
test
mov
adc
xchg
hlt
sub
sbb
or
repz
cpuid
psllw
enter
incb
dec
mov
pop
push
sub
pop
dec
or
daa
adc
ret
es
jo
popa
jne
sahf
scas
mov
lahf
dec
inc
inc
push
mov
sti
add
outsl
cld
push
adc
pop
xchg
or
mov
shlb
loope
loopne
push
push
clc
sbb
jp
mov
sbb
stos
cmp
stc
xor
mov
or
mov
into
fistps
stos
mov
and
jmp
sub
out
notl
mov
loope
jmp
sahf
pop
and
pop
scas
pushf
or
and
testb
sti
jl
or
cmpl
jbe
inc
je
outsl
int3
cmpb
ss
lds
push
loopne
negl
jge
test
aaa
mov
jo
nop
ret
ljmp
in
mov
add
dec
insl
cld
in
adc
ljmp
lock
push
imul
pop
subb
aam
pop
xchg
addr16
test
imul
dec
or
mov
mov
push
fisttpll
fisubs
test
bound
addr16
aaa
mov
mov
jo
outsl
andl
shll
add
fstp
test
je
adc
pop
hlt
lret
rorb
xor
orl
adc
jmp
lret
das
fldenv
sub
sbb
adc
sbb
jne
pushf
inc
mov
mov
cmp
insl
shrb
pop
leave
and
and
jno
pop
jmp
dec
outsl
adc
inc
mov
lea
xor
sbb
mov
imul
xchg
fisubs
or
inc
gs
or
data16
jb
xor
cli
mov
jecxz
bound
stos
or
push
pop
mov
cmpsl
test
pop
cs
sarb
loopne
lods
mov
notl
adc
inc
cli
inc
and
insl
sub
dec
cmpsl
insb
xor
sbb
lret
xor
jb
xchg
jmp
dec
or
ret
pusha
pushf
lret
lods
pop
inc
sbb
je
xchg
cmp
xchg
in
jmp
jge
insb
lds
inc
jne
pop
pop
test
in
aad
pop
or
inc
lds
or
in
in
orb
sub
incb
inc
push
mov
popa
popa
inc
shll
xor
pop
aam
xchg
loop
sub
and
jecxz
mov
sbb
push
aaa
stos
and
inc
sbb
fwait
xorb
outsb
enter
mov
dec
sbb
leave
sub
aam
dec
xor
call
rorl
aas
and
arpl
loop
inc
cmc
sbb
mov
mov
ljmp
cmp
mov
mov
jle
stc
xchg
inc
aad
cld
adc
mov
add
mov
and
in
into
sub
mov
imul
xchg
or
enter
int
out
push
push
xchg
fistl
test
cmp
and
lds
test
in
out
aas
stos
xchg
ss
cld
cmp
call
jg
loopne
cld
cmpsb
subl
lods
sub
test
push
pop
lods
jne
clc
out
in
lret
stc
pop
in
adc
push
mov
dec
xor
or
push
inc
xor
test
sbb
mov
and
mov
lds
js
mov
scas
push
stos
int3
test
shl
mov
mov
pop
xlat
jmp
mov
enter
rol
lds
lea
movsl
inc
mov
pop
xlat
push
jb
daa
hlt
and
cmpsb
push
adc
stc
push
inc
jp
js
mov
jo
out
outsl
int
adc
mov
or
lahf
stos
pop
mov
sub
cmp
pop
movsl
cld
test
ss
sub
xchg
imul
mov
xchg
dec
icebp
jns
mov
jnp
mov
adc
hlt
sbb
xchg
adc
in
xor
cmp
xor
insb
jae
xor
repnz
iret
or
sbb
or
adc
je
push
fadds
in
repnz
pop
test
xchg
adc
sub
sbb
cmp
insl
mov
jp
add
jb
daa
fwait
fwait
or
cli
iret
in
lret
or
adc
add
add
or
dec
andl
daa
pshufw
push
pop
daa
lods
lods
fsts
jb
dec
bound
mov
add
sub
pop
cmp
imul
ljmp
jge
les
enter
fwait
inc
sahf
jbe
movsl
jl
stc
jns
pusha
shrl
stos
xor
jnp
pop
xchg
fwait
das
lcall
lea
pop
jg
iret
mov
std
pop
lret
lods
mov
jmp
mov
ret
je
sbbb
jno
rclb
xor
push
mov
xchg
cltd
adc
outsb
dec
loop
sarb
mov
mov
xor
inc
out
fistl
inc
adcb
std
lods
int
adc
lcall
and
cmp
fidivs
popa
ret
or
fadds
in
mov
sbb
and
jmp
aas
inc
hlt
sbb
vmovlps
imul
mov
dec
cmpsb
and
imul
lret
lds
jne
pop
xchg
add
std
cmp
test
je
shlb
out
idiv
dec
into
dec
pushf
stos
sbb
add
nop
popf
mov
repnz
pusha
sub
stos
test
pop
cmp
daa
enter
nop
xor
xchg
iret
pop
and
std
inc
sbb
dec
push
mov
fadd
cmp
and
xor
addb
adc
rcrl
cmp
pusha
xlat
popf
popa
cs
pop
in
out
xchg
cmp
mov
xorl
cmp
jecxz
dec
js
loopne
addr16
out
fsub
into
scas
jne
mov
lods
push
repnz
lods
and
sbb
pop
mov
inc
mov
adc
in
js
mov
mov
daa
adc
push
and
movsb
inc
push
or
and
inc
dec
lds
ds
out
sti
push
jmp
sub
or
rolb
dec
mov
mov
sbbb
mov
sbb
add
jnp
add
fisttps
lds
xor
outsl
ljmp
cmpsb
outsl
stc
movsb
inc
je
adc
ror
sub
mov
xor
sbb
xor
mov
fstl
pop
mov
int3
mov
sub
test
in
xchg
xlat
jl
inc
je
sub
aaa
fs
out
js
data16
jnp
sbb
popa
xchg
sbb
test
scas
out
das
les
aas
negl
aad
fistl
and
js
popa
ljmp
jmp
lret
repz
mov
xchg
outsl
sbb
sbb
and
pop
fstl
test
cmpsb
sbb
jge
lock
sub
cmp
outsb
inc
cmp
jns
pop
xchg
push
push
fimuls
inc
mov
sbb
mov
out
add
popa
mov
int
jb
jne
xor
push
mov
jp
sub
dec
std
dec
gs
in
lea
sbb
rolb
or
sbb
repz
jg
arpl
dec
push
das
jmp
xchg
pop
fwait
push
scas
jecxz
dec
push
pop
repnz
int
out
insb
add
loopne
add
pop
aaa
sbb
push
xchg
add
cmpsb
outsb
mov
inc
lcall
dec
push
or
ljmp
dec
pusha
xor
loopne
mov
movsl
jl
push
and
adc
lods
sub
or
addr16
xchg
pop
rorb
or
adc
fs
data16
fistpl
sbb
jo
xchg
mov
testl
test
popa
jge
loop
jecxz
mov
dec
xor
pop
mov
mov
sbbl
sbb
cmp
cltd
nop
pop
or
sbb
dec
mov
sti
mov
lcall
sub
add
xchg
or
push
data16
jne
inc
inc
sti
mov
sar
pop
or
jns
mov
mov
dec
xorb
dec
pop
int
mov
push
jge
test
jge
mov
ja
mov
inc
xchg
and
xchg
lods
cwtl
push
jnp
arpl
dec
mov
imul
scas
mov
dec
jne
xchg
fxsave
psadbw
fdivrl
outsl
out
cmp
mov
test
jbe
fdivrs
jne
mov
push
mov
xlat
sub
cwtl
sti
and
sbb
cld
sahf
pop
sbb
mov
cmp
jnp
and
jbe
sub
nop
mov
cmpsb
iret
popf
scas
cmc
std
movsl
and
jmp
or
jg
insl
fnsave
mov
mov
push
lods
mov
addr16
in
jne
and
aam
push
test
dec
sub
js
mov
dec
push
push
xchg
push
lods
jge
je
pop
push
ret
and
mov
dec
add
and
push
imul
jb
and
xchg
pop
and
testb
xorb
mov
es
adcl
mov
fnsave
call
xor
push
and
enter
outsl
push
pop
push
fcmovnb
sbb
inc
out
add
lods
jl
in
mov
xor
imulb
push
cs
or
cmp
inc
test
adc
xchg
clc
gs
add
xor
sbbb
and
and
or
lret
pop
fs
push
mov
ficoms
movsl
movsl
out
mov
mov
shrb
loopne
popa
shrb
pop
dec
mov
add
addr16
xchg
js
push
mul
int3
mov
int
dec
int
mov
test
xchg
in
jmp
aam
sub
es
xor
inc
int
subl
pop
pusha
inc
jp
pop
int3
jmp
aas
push
mov
and
mov
and
cmp
pop
cld
adc
pop
push
fmull
push
jbe
adc
pusha
sbb
sub
sub
push
xor
mov
std
jmp
in
mov
pop
lds
inc
or
sub
outsl
push
cmp
sti
push
out
xor
mov
push
lret
out
out
cwtl
xchg
fimull
adc
mov
sarl
push
test
int
xor
lahf
xchg
movsb
pop
daa
sbb
bound
jg
inc
adcb
loop
ljmp
push
xor
or
jae
xor
or
shrb
lahf
shrl
dec
jmp
xlat
xor
jl
cs
stos
lahf
push
stc
push
push
and
push
cmp
test
scas
push
adc
out
rcll
dec
fdivrs
inc
loop
mov
sbbl
aas
dec
int
inc
mov
xor
inc
mov
jmp
ror
pop
jecxz
dec
or
mov
lock
in
aaa
push
pop
inc
stos
clc
inc
test
cmpsl
int
dec
mov
cmpsl
jo
adc
sbb
loopne
add
ja
push
into
sbb
xor
ds
jbe
sbb
incl
shr
das
rclb
jns
in
jns
mov
out
rcrl
leave
fcoml
dec
fimull
dec
cli
mov
xchg
ja
pop
fstl
rcll
push
jp
outsl
mov
stos
iret
test
aaa
dec
adc
lea
pusha
mov
sub
jp
testl
adc
insl
pop
sub
push
sbb
push
push
mov
mov
cwtl
mov
mov
dec
cmp
mov
or
push
es
shl
and
popf
ds
mov
jbe
xor
or
adc
jne
mov
int3
cmp
js
cmpsl
call
dec
fwait
or
push
dec
inc
shrl
push
push
adc
cmc
dec
mov
gs
add
shll
inc
inc
and
sbb
mov
or
sbb
stos
sbb
mov
dec
lahf
dec
pop
jmp
inc
xor
test
jl
mov
adc
mov
cmp
mov
cwtl
xchg
mov
mov
mov
shrl
call
xchg
mov
data16
loopne
mov
cmpl
cmpsb
xor
jo
pop
in
mov
push
mov
xchg
and
in
test
xchg
xchg
jle
arpl
roll
enter
and
mov
or
add
jmp
jae
mov
sahf
aaa
lret
nop
scas
and
fwait
clc
push
fadd
enter
fcmovbe
aaa
fiadds
xor
jb
es
mov
inc
das
sub
cwtl
repz
jle
lea
add
clc
faddl
in
rcl
shrb
fildl
sti
adc
mov
mov
cmpsl
mov
sbb
adc
hlt
aad
jl
cmp
lds
lds
fsubs
dec
mov
lods
cwtl
cmpsb
push
out
fisttpll
fnsave
add
xor
hlt
lock
and
nopl
mov
nop
or
daa
nop
mov
sub
pop
daa
pop
adc
inc
shrl
fildll
pushf
adc
inc
out
outsb
bound
inc
inc
pop
cld
test
into
jmp
mov
xorb
fistl
jne
pop
mov
sahf
out
xchg
sbb
sbb
push
addr16
adc
fs
shll
lock
test
sub
jle
popa
movb
push
dec
and
outsb
ja
fs
mov
mov
push
je
sub
lea
and
dec
jp
mov
sbb
gs
xor
jae
in
xchg
adc
lcall
add
es
and
sub
adcb
cwtl
aaa
add
mov
mov
push
addr16
add
lahf
push
or
jge
rcrl
fbld
add
jmp
inc
dec
push
orl
addr16
imul
lcall
mov
dec
push
xor
mov
xchg
pop
push
push
push
adcl
outsl
xchg
xchg
in
mov
fstl
fadds
add
sbb
jg
movsl
test
daa
mov
hlt
aad
dec
mov
int
pop
lods
movsl
dec
adc
add
sbbb
je
popa
mov
sbb
inc
mov
shl
aaa
cmp
adc
je
daa
mov
aaa
stos
vmovups
and
push
stos
xchg
mov
dec
mov
or
mov
inc
lcall
mov
or
xor
or
hlt
inc
xlat
js
mov
mov
pop
and
shrl
jecxz
mov
xor
and
loope
sub
outsb
cmc
les
push
shll
lahf
pop
lods
dec
sub
push
xchg
mov
cmc
jecxz
inc
into
cli
lret
and
scas
dec
hlt
incb
add
out
fimuls
and
or
push
and
push
mov
or
popf
dec
cli
mov
and
les
mov
xlat
lcall
add
sub
mov
pop
popf
negl
fadd
jb
mov
cltd
leave
and
ds
test
addb
imul
sbb
push
pop
xor
pop
aam
mov
aaa
jp
jmp
cmp
sbb
sar
les
pusha
or
adc
add
sar
fisubrl
cmp
cmp
or
call
mov
rclb
push
fisubrs
sbb
in
not
lret
pop
cli
dec
in
dec
sbb
or
xor
fwait
mov
stc
dec
and
xor
sar
setge
pop
sub
and
cltd
dec
je
or
xor
jno
fiadds
xchg
and
adc
mulb
push
dec
xor
imul
pop
sub
rolb
ror
xlat
cmp
cmp
push
orl
stos
mov
cmp
jo
jnp
mov
test
in
popf
xchg
push
jne
pop
add
stc
jb
add
push
out
repz
lods
mov
test
mov
pusha
imul
test
gs
cmp
dec
mov
fcomp
pop
lock
clc
ja
shrl
mov
mov
jle
aam
lret
push
sbb
sbb
push
push
push
in
mov
sbb
popf
sbb
jp
bnd
and
mov
cmpl
shl
int3
or
cltd
ret
test
in
mov
push
and
xchg
imul
cmc
xchg
cmp
dec
lcall
mov
popa
popa
sub
fstpt
stos
aas
sub
imulb
xor
stos
test
sbb
cmpsl
ror
xchg
lret
in
push
jmp
sub
sbbb
jbe
jno
lds
push
pop
mov
or
adc
adc
fcomp
or
es
xchg
std
scas
mov
scas
repnz
mov
lock
mov
dec
fadds
adc
sti
js
loop
sbb
inc
push
jp
push
insl
dec
lahf
xor
out
sbb
arpl
nop
mov
cmpsb
fbld
sbb
or
addl
dec
push
in
fisttpl
movmskps
dec
data16
mov
push
sbb
movups
nop
ffree
sub
jmp
cmp
insb
mov
movd
or
fdivrp
dec
call
sub
mov
sub
test
cmp
xor
outsb
mov
movsb
insl
pop
repz
inc
pushw
sti
aad
add
loope
add
xchg
push
dec
dec
mov
js
stos
ja
es
dec
mov
aad
insb
inc
lret
push
mov
loop
fcoms
std
lret
push
out
and
and
jae
movsb
movsb
mov
push
pushf
pop
data16
add
add
mov
movsl
shlb
aam
iret
xchg
pop
addb
cmpsl
lods
in
inc
push
and
dec
xchg
daa
lea
cwtl
inc
cmc
pop
xor
sarb
test
loopne
xor
aas
rcr
jecxz
mov
add
mov
outsb
not
mov
pop
or
xchg
inc
dec
or
cmpsl
or
dec
sbb
ss
repz
js
cmp
push
xor
push
and
and
movsl
push
mov
mov
push
ds
sbbl
ret
xor
inc
xor
cmp
push
mov
xchg
sbbb
int3
movsl
in
cwtl
movsb
aad
or
icebp
mov
pushf
mov
call
push
stc
dec
mov
adc
cmp
xor
stos
popa
sbb
adc
dec
iret
xor
xor
pop
xorb
js
jmp
pop
or
lret
pop
imulb
adc
shll
and
xor
fcoms
sbb
sub
and
xchg
dec
pop
imul
mov
pop
xor
cmp
popa
int3
pop
push
in
ror
imul
jg
cmp
stc
jp
xchg
std
xlat
leave
jecxz
or
aas
xchg
inc
jae
dec
mov
sub
sbb
mov
pop
sahf
mov
mov
in
cmp
inc
cli
add
or
data16
pop
in
jne
inc
nop
inc
into
jge
or
sbb
ljmp
sbb
test
xor
ret
data16
notb
mov
or
jg
shrb
pushf
sub
mov
inc
sbb
popa
fsubs
cmc
pop
mov
sbb
fmuls
sbb
loop
xor
dec
pusha
cmp
push
movsl
out
iret
les
shl
sub
jbe
nop
mov
enter
jb
jg
pop
add
jle
or
xor
jne
aaa
mov
fildll
out
cmpb
insb
cmp
stc
mov
mov
adc
icebp
loopne
mul
ret
lahf
push
mov
repnz
lock
sbb
mov
fbld
mov
push
fwait
pop
pop
xchg
cmp
and
mov
cli
adc
dec
data16
cli
cld
stc
mov
sarl
push
loopne
test
cltd
fldl
and
or
sub
es
stc
add
mov
sbb
inc
jp
aas
not
fs
daa
mov
mov
xchg
lds
ss
and
xchg
fdivl
xor
pop
aam
cmc
jo
fs
pusha
dec
cmp
sbb
jmp
dec
pusha
pop
mov
push
rolb
fdivs
lds
imul
in
cmp
adc
pop
mov
xchg
call
imul
push
xlat
push
fidivrs
or
pop
jae
dec
test
and
lods
aas
xchg
shl
mov
ret
mov
movsb
outsb
cmp
sbb
inc
mov
mov
jl
mov
sahf
sbb
add
lods
mov
pop
fcoml
daa
add
loope
push
fwait
or
fisttpll
fdivrs
push
enter
bnd
sti
pop
fistps
mov
push
mov
shl
cmc
pop
into
bound
cs
xor
inc
cmp
xorl
sbb
data16
jg
es
dec
mov
add
and
xor
cltd
test
and
push
mov
popa
push
or
xor
aam
dec
mov
jg
mov
shrb
out
jge
insb
push
mov
sub
les
lods
push
lods
shrl
loopne
lods
sbb
popa
or
jmp
inc
cld
cmp
stos
push
and
das
mov
nop
frstor
loope
cld
scas
std
mov
cwtl
out
xchg
daa
pop
or
stos
adc
rcrb
pop
outsl
lods
push
push
mov
xor
jbe
push
xchg
sbb
cmp
es
adc
rclb
cmp
adc
movsb
sub
lret
aaa
mov
add
and
add
movsl
inc
fmulp
ds
adc
add
xchg
fistl
push
push
and
lods
push
dec
or
das
fs
lods
std
lea
stos
mov
xchg
mov
mov
push
cltd
loopne
movsl
jmp
scas
fs
jns
loope
adc
sub
in
sub
pop
lret
push
add
lcall
ss
movsb
outsl
ja,pn
ljmp
dec
adc
clc
or
aad
je
es
ja
pop
inc
insb
mov
sahf
es
in
jb
fbstp
jbe
shll
mov
imul
lret
sub
xor
ret
push
jecxz
das
jle
fwait
arpl
xor
add
or
ljmp
js
and
xchg
inc
push
or
cmp
push
idivl
jmp
push
dec
data16
pop
inc
push
inc
lock
xchg
or
jbe
pop
push
rcr
dec
shl
aam
push
pop
leave
mov
adc
cmp
or
dec
fsubrl
gs
mov
das
jge
roll
or
fists
dec
lea
hlt
push
pop
insb
jbe
jmp
dec
lds
test
xchg
mov
push
xchg
and
pop
or
xor
arpl
mov
call
mov
fidivrl
dec
or
xchg
pop
adc
xchg
pop
jbe
sbb
add
push
jmp
loope
jp
fs
aaa
xchg
call
and
mov
pusha
iret
mov
pop
inc
daa
cli
lea
fbld
stc
push
xor
dec
xchg
dec
mov
subl
push
mov
xor
or
inc
pop
push
mov
cmpsb
lock
and
outsb
fmull
fwait
cmp
nop
sti
cmp
mov
scas
or
push
push
add
sbb
or
imul
jmp
pop
sbb
xchg
cld
jbe
mov
dec
aas
or
adc
test
mov
mov
shlb
stos
fadds
inc
in
jo
mov
cmpsb
dec
aaa
xchg
jle
or
sbb
xchg
cmp
movsl
cmpsb
pop
gs
pop
pop
push
cmpsb
or
in
sahf
xor
mov
subb
sbb
adc
imul
and
jecxz
sbb
mov
cmpb
inc
lret
xchg
push
or
xchg
lret
push
adc
insl
lret
enter
mov
add
and
sub
xchg
jae
or
mov
outsl
orb
push
leave
jbe
pushl
lcall
testl
gs
out
nop
loope
rcrl
sub
push
xor
push
popa
mov
pop
jge
or
xor
stos
dec
xchg
jae
mov
test
xchg
xor
push
movb
call
gs
call
es
mov
and
mov
xor
mov
fcompl
pop
mov
daa
out
xor
sub
xor
imul
outsl
sub
cmp
push
cmp
xchg
pop
jl
arpl
mov
stc
pop
push
jns
jns
out
jp
mov
xor
movsl
or
outsb
jle
es
ja
je
loopne
es
xchg
adc
ljmp
cmp
andb
mov
outsl
jg
mov
stc
pusha
enter
das
or
bound
push
outsb
jne
jecxz
shll
in
pop
mov
ret
lret
push
ds
and
mov
xchg
js
movl
test
dec
popf
pusha
xor
cmp
inc
jb
xchg
cmp
shrb
addr16
cmp
popa
fnstenv
mov
pop
pop
ret
test
movsl
dec
or
sbb
jae
mov
mov
pop
jle
jno
mov
inc
xchg
push
fwait
in
xchg
aaa
jb,pn
mov
rcrl
sti
scas
inc
pop
repz
out
in
adc
scas
push
jns
cmp
mov
jmp
fisttpll
out
cmpsb
cld
xchg
call
imul
inc
aad
or
xor
adc
fwait
sub
mov
hlt
subb
pop
shrl
inc
or
xorb
dec
add
mov
inc
test
es
lods
inc
shll
xor
ss
sbb
dec
popa
adc
push
fnstenv
jbe
sbb
cmp
xor
sub
mov
mov
aam
cltd
xchg
mov
aas
dec
pop
jb
jae
sub
bound
push
fcoms
cmpsl
mov
sub
jle
lret
xor
lock
mov
out
imul
inc
gs
sahf
out
loopne
fists
pop
xchg
pop
lock
mov
cmp
push
shl
jae,pt
ss
pop
lcall
and
pop
mov
or
xchg
bound
jne
adc
fidivrl
sahf
push
mov
cmp
jae
shrb
out
mov
insb
fs
in
inc
sbb
aaa
jns
push
outsb
cmc
subb
dec
dec
dec
lcall
add
and
mov
popl
cmpb
in
ss
mov
hlt
xchg
lea
cwtl
sub
dec
pop
fbstp
lds
cmpsl
fcoml
and
sub
cmp
xor
and
or
fwait
mov
shlb
fidivl
nop
and
hlt
adc
insl
popf
or
mov
roll
mov
ret
cmp
mov
cmp
dec
cmp
scas
jg
sahf
mov
dec
frstor
mov
cmp
test
mov
or
stos
jecxz
mov
cmpsl
punpckhdq
dec
add
inc
in
and
fisttps
sbb
pop
sar
or
mov
shlb
mov
fdecstp
lret
sbbb
push
not
push
addr16
cmpsb
pop
adc
aaa
dec
jns
outsb
sub
add
mov
cmp
xor
adc
stos
pusha
add
mov
test
mov
xchg
rcrb
shrb
arpl
cmp
push
pop
rcrb
out
hlt
shl
adc
sbb
test
xor
outsb
and
sub
dec
jmp
xchg
loopne
sbb
loope
and
pop
cmp
nop
cmpsl
repnz
stos
std
mov
add
xchg
sbb
jmp
scas
lock
out
pusha
repnz
push
insb
rol
and
jp
arpl
xchg
nop
add
or
xchg
mov
pusha
mov
mov
mov
iret
cld
add
incl
or
xor
push
pushl
lock
push
scas
fldpi
popa
stc
sub
leave
mov
xor
movsb
push
sub
mov
cmp
or
jo
popf
pop
jnp
lock
fwait
scas
add
sbb
fimuls
mov
mov
leave
pop
cmp
out
sbb
add
push
rorl
push
mov
das
jp
pop
lods
sub
cli
dec
ja
mov
in
andb
mov
in
jnp
cmpsl
sub
cmp
or
int3
test
and
jns
cmp
or
rcl
sub
mov
sbb
xchg
inc
and
in
lock
cmpsl
shrl
hlt
cltd
fildll
dec
in
pop
call
xchg
es
push
sti
jle
subl
sub
adc
sbb
ljmp
mov
lds
and
dec
add
sub
and
jns
ds
sahf
ficompl
inc
adc
test
aam
and
add
push
fisubs
push
xchg
fdivl
lret
xchg
and
xchg
mov
inc
jns
xor
mov
jmp
and
or
lods
sbb
loopne
jge
xchg
lock
xor
je
ss
out
shrb
xchg
jne
sti
outsb
test
sub
lods
add
cli
add
rclb
lods
fstl
mov
pop
add
ss
xor
ret
mov
cmc
xor
leave
cmp
adc
push
mov
je
icebp
mov
std
sbb
cmp
mov
shlb
repz
fs
out
push
add
jp
lret
insb
dec
sub
imul
jmp
mov
mov
not
xor
repnz
inc
dec
mov
inc
jge
push
cld
cmp
roll
pop
push
pop
das
add
mov
push
sbb
pop
sbb
mov
outsl
das
je
iret
ret
outsb
ja
mov
imul
push
loop
fnstenv
lret
cmp
rorl
popf
pop
sub
das
mov
movsl
fwait
xor
orb
popa
cmpsb
lret
popf
out
fmuls
sbb
data16
sbb
xchg
scas
xor
or
data16
fwait
xchg
vmovdqu
sbb
stos
insl
xor
loop
clc
cld
icebp
sub
cmpsl
and
out
cs
mov
jl
cld
add
sub
jle
sti
dec
in
adc
mov
mov
sbb
mov
sbbb
xchg
outsl
xchg
in
leave
imul
jecxz
cltd
mov
adc
mov
shll
hlt
xchg
lcall
cld
push
cld
js
adcb
int
ficoml
and
fwait
and
addr16
pop
test
inc
mov
add
mov
out
pop
and
neg
cmp
push
inc
xor
lds
mov
mov
xchg
push
aam
xlat
into
lret
and
push
jnp
sub
cmpsl
adc
mov
mov
xchg
xchg
jb
push
xorb
dec
shll
sti
mov
in
sub
mov
pushf
dec
cmp
mov
or
jns
in
nop
mov
std
dec
mov
sbb
jecxz
ret
pushf
into
daa
call
ss
fistpl
hlt
xor
fcmovnb
movsl
jmp
sbb
insl
subb
push
mov
xor
stos
push
divl
xchg
sub
fs
mov
mov
push
pop
cltd
add
mov
cmp
adc
movsl
and
or
fimull
mov
add
or
or
lods
dec
addr16
ss
in
nop
push
cmp
pop
lock
xor
lds
mov
mov
fimuls
dec
loope,pn
push
pop
add
aad
rorb
fdivrs
push
jnp
call
pop
sahf
into
mov
ja
notb
inc
mov
out
sti
les
and
sahf
xchg
inc
aad
ret
jmp
or
push
lea
or
fidivrl
lea
daa
pop
jp
mov
cmp
popf
mov
cmp
orl
or
cmp
pop
dec
jmp
xor
in
push
adcl
imul
adc
jmp
lret
mov
cmp
or
rcrb
sbb
in
xchg
jae
aam
in
or
xchg
bnd
leave
mov
xlat
repnz
or
or
sub
aas
fdivrl
ficompl
into
idiv
loopne
add
pop
xor
push
add
xchg
mov
or
push
ljmp
jb
cmpsb
and
pusha
mov
outsl
jmp
dec
jge
aaa
lds
jnp
cmp
loope
pusha
out
adc
jne
cmpsb
mov
imul
stc
sub
dec
in
pop
out
inc
dec
insb
andl
mov
pushf
mov
and
pop
rcl
stos
out
imul
stc
cmp
out
push
jbe
es
push
hlt
lahf
test
lret
ret
orl
sbb
ficoml
mov
dec
mov
xor
sub
stos
in
add
jno
test
ds
fistl
adc
scas
mov
xor
addr16
adc
nop
dec
mov
shrl
fisttpll
jmp
icebp
cltd
add
rcl
pop
jno
jae
ret
mov
sbb
loopne
jns
pop
movsl
adc
out
leave
mov
cmp
mov
mov
popa
adc
mov
dec
push
les
cmp
mov
test
push
push
push
adc
clc
sbb
or
xchg
xor
stc
rcl
xchg
jp
shrl
push
mov
icebp
jl
movsb
ss
cmpl
cmp
mov
mov
sub
cmp
xchg
mov
jns
mov
push
ljmp
je
mov
mov
xor
xor
jg
mov
fildll
sbb
jmp
shlb
mov
push
leave
repz
xchg
and
fisubl
inc
sar
mov
pop
lds
imul
cmp
outsb
sbb
dec
pop
popa
and
xchg
xor
mov
xor
sahf
jmp
or
out
dec
es
mov
jno
inc
lock
test
mov
scas
dec
jmp
mov
mov
mov
bound
inc
movsl
nop
jnp
inc
xor
testb
mov
xchg
hlt
add
or
pop
scas
pushf
sub
out
jge
cmpsl
jge
xor
rol
stc
ret
repz
call
push
test
jge
imul
mov
mov
push
sbb
lock
adc
jbe
or
int
nop
mov
fsubl
addb
xchg
pop
mov
aam
mov
loope
xor
jno
pop
xor
cs
push
les
sbbb
and
addr16
mov
xor
and
sbb
inc
sbb
or
outsb
adc
mov
scas
sbb
jmp
mov
pop
mov
jmp
jnp
sub
stc
pop
mov
gs
mov
aad
mov
mov
inc
push
mov
arpl
add
in
and
cmp
fadds
cmpsb
push
out
dec
push
repz
pop
stos
aad
mov
push
xor
jg
jne,pt
mov
xchg
dec
xchg
mov
ja
inc
xchg
mov
test
add
inc
lods
pushf
dec
cmpsb
ja
mov
mov
add
fildll
outsb
repz
mov
dec
sub
stos
jl
mov
cmp
pushf
mov
or
dec
add
jnp
outsl
addl
jmp
push
adc
fidivrs
add
pop
shl
sbb
lods
shr
test
mov
cmp
push
lret
mov
cld
cmp
adc
icebp
iret
mov
pusha
cltd
ds
xchg
mov
jnp
sbb
pop
or
scas
insb
jnp
dec
push
neg
jle
push
pop
dec
jmp
inc
sbb
movsl
sbb
out
add
test
jg
xchg
jle
imul
mov
mov
aas
addr16
dec
and
jo
mov
data16
lcall
bound
imul
adc
cmp
push
out
add
jl
xchg
add
cmp
and
sbb
out
xchg
pusha
clc
jo
jecxz
stos
jge
dec
rorl
mov
lea
mov
mov
push
mov
cmpsb
mov
xor
xor
sbb
push
call
cltd
mov
stos
push
pop
adc
add
jp
aam
lods
add
lods
lahf
sbb
xor
push
cld
dec
out
add
dec
pop
ficoms
enter
xor
mov
push
fimull
push
mov
jno
out
arpl
in
cmp
outsl
ds
cmp
es
add
fiaddl
sub
pop
push
in
iret
or
lcall
rcr
or
cli
sbb
xchg
and
or
fisttps
mov
mov
pusha
ds
add
add
je
fisttpl
sub
ja
sub
es
jb
adc
scas
inc
dec
leave
dec
into
add
sub
outsb
sbb
add
cmpsb
and
push
lods
std
mov
sarl
daa
push
repnz
xor
ror
dec
xchg
add
sub
pop
ret
sbb
xchg
shrb
and
cli
and
xchg
in
imul
aas
mov
or
mov
pop
mov
sub
popf
les
ljmp
daa
aam
sub
mov
loopne
xor
shr
fildl
icebp
xor
dec
mov
in
movsl
data16
cmp
push
es
adc
xchg
jp
inc
in
mov
or
jp
push
mov
inc
pop
js
jb
sbbb
dec
movsb
lods
mov
rcr
mov
or
cld
or
push
fcmovbe
mov
xor
insl
data16
dec
sub
in
jnp
stos
rcr
sub
pop
imul
sbb
lcall
loop
sub
cltd
insb
xor
sub
arpl
push
cmp
loope
iret
jg
lret
call
das
pop
dec
sbb
fiadds
jge
enter
cs
popa
decb
pop
ss
fidivs
movsl
and
cmp
out
in
test
adc
jecxz
xchg
jo
lret
inc
add
test
loopne
ret
sbb
push
bound
jecxz
in
and
and
cmpb
popa
shlb
test
pop
push
jae
inc
and
adc
push
push
iret
adc
lock
lcall
scas
data16
add
adc
or
aaa
mov
mov
mov
pop
and
jp
sarw
aad
lea
adc
loopne
jbe
sbb
in
xchg
mov
push
loope
in
movsb
or
pop
xor
negl
cmpsl
pop
inc
and
test
jp
xorb
sbbb
fwait
mov
inc
pop
jp
mov
bound
mov
out
add
pop
in
cmpb
add
lods
mov
hlt
outsl
in
push
movsb
pop
push
jg
aas
mov
adc
addr16
nop
pop
arpl
das
and
add
pop
cmp
sub
repz
adc
stos
mov
inc
jns
sahf
leave
mov
ds
sahf
test
ss
in
insb
mov
pop
mov
pop
inc
adcl
mov
adc
cmpsb
rclb
roll
out
jle
test
mov
jns
fidivl
inc
loopne
sbb
and
mov
daa
es
mov
jo
xchg
xor
sub
test
inc
fildl
loop
mov
mov
adc
push
adc
sbb
aas
xchg
pushf
les
pop
test
mov
ljmp
cltd
dec
xchg
push
std
scas
pop
jne
cmp
mov
sahf
mov
out
jne
inc
adc
inc
fdecstp
mov
clc
and
xor
addb
sub
adc
int
loope
or
sub
dec
je
loop
je
add
push
and
fdivs
sbb
pusha
xchg
push
ror
test
ret
xchg
lods
mul
and
fsubs
cli
xor
repz
aaa
lcall
mov
mov
pop
fistl
cmpb
mov
add
fdiv
cmp
hlt
add
lock
sub
imulb
cmc
lods
jnp
loopne
ja
test
enter
rorb
mov
mov
xchg
stos
imul
nop
adc
call
or
inc
call
daa
cmp
das
adc
cld
cmp
xchg
movsl
aad
adc
cmc
push
or
adc
dec
dec
adc
push
lds
inc
mov
mov
stos
xor
or
out
cmpsb
inc
dec
jne
xor
push
xchg
jae
or
push
adc
or
or
mov
inc
jmp
jnp
cmp
sbb
fwait
dec
daa
aas
jne
add
in
jns
testb
loop
mov
js
mov
pop
lret
ss
stos
xchg
inc
daa
iret
pop
jne
sahf
jmp
inc
pop
lods
popf
mov
inc
aaa
push
fadd
sbb
stc
cmpsb
jl
mov
out
aad
out
pop
jg
dec
fcmovu
dec
cmpsb
pushf
mov
mov
adc
scas
push
out
xchg
push
jae
int3
push
mov
in
xchg
add
mov
lret
movsb
and
pop
push
test
jl
adc
sub
inc
addr16
jns
cld
xor
call
jno
mov
sbb
or
sub
fsubl
in
fcoml
je
push
fsubs
push
lods
cmp
or
dec
add
ss
ss
jp
repnz
jns
mov
imul
inc
mov
enter
adc
sbb
inc
das
imul
leave
cmc
int
dec
and
sbb
in
xchg
adc
mov
xchg
mov
stc
adc
inc
push
es
lcall
popf
pop
int
outsb
sub
or
loop
push
lcall
loop
rdseed
jp
cmp
cmp
mov
mov
add
mov
sub
std
test
cmp
mov
rorb
rol
ds
sub
ret
sbb
dec
cwtl
xchg
add
sub
ljmp
push
cld
push
cltd
mov
iret
sub
iret
roll
xchg
sub
sbbl
jle
sub
dec
xchg
add
mov
pop
xor
or
stc
bnd
dec
cmp
and
mov
mov
fs
push
lock
cmpsl
push
sbb
push
iret
and
mov
arpl
xor
in
lods
add
add
into
jl
or
pop
fisubrl
push
adc
mov
stos
outsb
jnp
and
push
addl
dec
xor
sbb
cli
scas
repnz
bound
sub
mov
jnp
stos
aas
adcl
xor
sub
outsl
pop
inc
pop
pop
pop
jo
push
mov
sbbl
lods
mov
rcr
push
test
push
pop
jo
inc
xchg
fwait
cmpsl
aaa
jo
jbe
shrl
add
pop
xchg
inc
divb
mov
ds
jl
or
negb
sbb
fcomi
xchg
js
daa
mov
es
into
jno
loopne
loopne
insl
int
mov
cmc
imul
lahf
rorl
movsb
call
ljmp
push
cs
jbe
and
xchg
cmpsl
stc
cltd
bound
das
mov
jge
daa
pop
stos
adc
jg
pop
adc
xor
cli
adc
inc
mov
lods
aas
scas
and
rorl
or
mov
sub
loopne
xor
movsb
mov
mov
rol
jnp
cmpsb
das
push
mov
jecxz
iret
sti
inc
inc
pop
popa
xor
ljmp
mov
push
mov
xchg
jp
inc
dec
mov
adc
mov
cs
cs
sarb
test
mov
push
fwait
js
mov
pop
xchg
mov
lahf
shll
cmpsb
out
dec
and
xor
sub
xchg
push
rcr
das
shlb
or
xchg
or
out
jge
push
sub
vpaddsb
inc
cmpsb
jno
mov
roll
xchg
adc
outsb
stos
push
repz
sbb
ss
cmp
mov
ljmp
jecxz
or
sahf
lret
or
dec
pop
push
pop
pop
mov
mov
mov
push
rcrb
stos
xchg
enter
cwtl
mov
cs
scas
add
push
or
push
add
repz
pop
jmp
outsl
pop
mov
fldl
outsb
inc
mov
push
cmp
movsl
out
std
out
sahf
out
call
test
test
shlb
ljmp
xor
xor
cmpsb
imul
test
leave
mov
lahf
adc
ljmp
imul
cmp
mov
xor
andl
xchg
lcall
pop
and
cwtl
adc
in
das
popf
sub
and
xchg
into
jle
push
inc
divl
por
mov
xbegin
int
inc
sbb
mov
jno
pop
dec
cmp
int
rclb
sti
xchg
fwait
cmpsb
pop
test
test
and
fs
ds
stc
scas
dec
mov
in
adc
aaa
aad
sbb
fstp
adc
jo
dec
andb
cmp
xor
fldenv
sub
out
pop
jecxz
fiaddl
pop
icebp
iret
sbb
jmp
jb
enter
pop
sbb
mov
sbb
test
sbb
dec
xor
in
call
clc
pusha
leave
mov
mov
lods
into
insl
les
fcoml
push
push
and
pop
mov
xchg
pop
dec
jp
cs
cld
lock
xchg
or
cmp
aam
sbb
mov
sub
hlt
mov
dec
testb
add
or
mov
mov
mov
jg
stc
enter
cwtl
mov
xor
dec
xor
xchg
xchg
stos
in
adc
in
cltd
popa
mov
xor
cmp
addb
push
loope
lea
adc
pop
stos
fcoms
movswl
pop
sub
cmp
pop
cmp
xor
mov
and
movsb
push
push
pop
cmc
imul
out
add
push
jle
ss
imul
into
stc
test
out
push
fs
push
or
adc
adc
fmul
lods
call
sarl
je
out
mov
ljmp
loope
gs
mov
dec
aaa
mov
out
rcl
inc
mov
ds
push
add
mov
adc
push
sti
sbb
rolb
sbb
xchg
jmp
aad
mov
lret
jns
mov
cmpsl
std
stos
jno
rcrl
and
and
or
ljmp
adc
repz
push
add
test
lds
flds
adc
dec
push
or
mov
into
dec
sub
adc
out
cmp
inc
lret
push
dec
call
or
cwtl
jmp
call
fidivrs
xchg
push
fadd
dec
xchg
cltd
stc
push
pop
movsl
call
test
adc
mov
inc
xorb
fwait
adc
mov
movb
sub
dec
mov
pop
cmp
push
dec
cmp
pop
xchg
outsl
ja
addr16
mov
jmp
rorl
xchg
mov
lods
cli
add
xchg
dec
push
jne
mov
les
rorb
push
lcall
add
sub
lcall
mov
test
cmp
mov
add
test
xor
lret
sbb
and
iret
inc
aam
movsb
imul
xor
cmp
dec
adc
sarl
lds
and
pop
ret
jns
inc
push
push
push
sbb
jo
lods
cld
rolb
adc
push
gs
mov
icebp
mov
sbb
jg
xor
sbbb
mov
pop
jb
rcl
int
sbb
pop
inc
push
fcomp
dec
shl
inc
mov
sub
mov
push
out
daa
inc
xor
rolb
and
adc
xchg
jae
jae
mulb
xchg
bnd
mov
mov
shlb
jne
imul
out
int
add
fnstcw
mov
lea
je
adc
mov
mov
aam
std
negb
mov
inc
aaa
or
sbb
rolb
cmp
add
sbb
push
mov
mov
loopne
nop
test
sbb
aaa
adc
out
push
mov
mov
iret
jns
movsl
fs
cmp
lods
xchg
and
das
lods
hlt
fcomi
stos
mov
adc
es
test
adc
pop
jl
popf
push
jbe
fstpt
adc
mov
ja
sbb
or
dec
neg
sbb
jl
cld
push
and
xor
push
dec
push
addr16
and
popf
js
fstpl
jle
adc
icebp
int
out
fisubrs
mov
push
xchg
or
test
loope
daa
cmp
test
aaa
push
mov
nop
loope
push
sbb
iret
lret
fs
das
nop
xor
gs
dec
mov
lds
push
ds
sbb
jge
pop
cmp
lds
and
mov
pop
adc
cld
xchg
cltd
pop
and
push
imul
repnz
movb
pop
ss
mov
xchg
inc
std
push
mov
pop
loope
add
inc
push
leave
lods
jnp
inc
pop
rcrb
mov
push
mov
sbb
sti
pop
jae
stc
push
in
mov
test
lret
sub
pop
nop
jb
jmp
out
lods
pop
jmp
dec
push
loopne
cmp
cmpsl
xor
mov
enter
imull
mov
push
imull
das
add
jb
andb
sub
les
testl
fisttps
enter
in
aaa
sub
xchg
frstor
outsl
js
adc
aam
pop
cmpsb
pushf
pop
pop
lahf
lock
cli
rorl
jbe
sub
push
dec
mov
xor
mov
mov
push
add
pop
in
mov
and
jle
insb
xor
sub
jnp
sbb
jno
hlt
loope
jnp
adc
gs
push
cmp
fld
ret
aam
adc
test
fidivs
sub
inc
xor
cmp
or
fisttpl
pop
mov
sbbb
cmp
daa
das
data16
and
cwtl
lret
fistl
pop
jo
stos
mov
jo
or
aad
xor
adc
mov
adc
ret
gs
inc
adc
repz
inc
pop
xchg
jo
test
sub
inc
jg
push
jnp
inc
jbe
sti
repz
imul
mov
jno
sarb
adc
ret
cmc
leave
lea
lea
mov
sahf
cli
mov
test
jecxz
push
hlt
stos
test
jmp
xchg
dec
gs
out
jl
lods
ds
out
dec
cld
adc
mov
sbb
push
lods
inc
popa
sub
pop
or
shlb
xchg
jp
cmp
jle
outsb
push
mov
cmp
pop
jp
jns
lock
repnz
push
jl
mov
out
xor
cmpsb
push
cmpl
xchg
inc
fiadds
mov
mov
ja
mov
cmp
pop
pop
dec
dec
inc
popl
sbb
rclb
sbb
fsub
and
add
loope
sti
sbb
gs
addr16
sub
and
scas
ljmp
xor
jne
inc
divb
inc
cmpsb
xor
xor
cmp
aas
push
fldln2
ds
add
es
arpl
into
pop
lds
push
mov
lds
cld
pop
rolb
fsubl
jbe
mov
cli
mov
movb
setle
jmp
movsl
add
mov
call
insb
mov
movsb
sbbb
out
pop
ror
test
lret
out
dec
dec
mov
adc
jo
adc
jmp
add
inc
dec
push
mov
push
or
mov
daa
mov
pop
lea
xor
inc
xchg
xlat
push
push
dec
lcall
cmp
inc
and
inc
bound
sbb
pop
imul
sub
mov
movsb
add
jne
rcrl
dec
out
xor
movsl
and
cmc
shr
xor
dec
icebp
addr16
xor
insl
xlat
and
mul
lods
xchg
in
adc
xor
push
cmp
call
das
out
push
push
push
mov
jp
int
mov
les
dec
sub
popa
sbb
pushl
jmp
mov
cmp
shlb
or
pusha
pop
outsl
mov
ds
xchg
jbe
xlat
jae,pn
lds
fildll
sub
arpl
ljmp
lret
inc
out
pop
adc
and
loope
std
adc
sbb
rclb
in
jb
xor
xor
sti
movsl
insl
dec
bnd
repnz
jp
add
sub
jne
sbb
add
aad
dec
in
lods
xchg
pop
popa
sbb
mov
daa
sbb
enter
sub
push
les
sbb
dec
mov
cmp
loope
xchg
mov
push
cli
in
notl
push
xor
fldt
ds
outsl
icebp
clc
push
arpl
mov
pop
mov
cli
xchg
xchg
scas
mov
and
int
jno
push
xor
xlat
inc
mov
push
mov
or
cmp
adc
fwait
push
push
mov
or
mov
negl
cs
jge
sti
xor
and
ljmp
or
mov
mov
pop
insl
push
fwait
out
cmp
sahf
adcl
sub
and
mov
pop
ss
mov
mov
test
pop
lock
sahf
mov
mov
outsb
push
iret
clc
je
jnp
je
push
movb
hlt
cmp
addb
mov
aad
inc
psrlq
inc
test
xor
sub
sub
mov
push
jecxz
mov
imul
arpl
insl
ljmp
mov
data16
dec
inc
xchg
xchg
arpl
lret
or
clc
add
adcl
fisubl
or
push
xchg
jbe
notl
jg
arpl
push
inc
fsubrs
es
mov
sub
xchg
stos
push
mov
fwait
and
leave
sarl
pop
ret
scas
ud0
xorb
lods
pop
sub
and
jp
mov
mov
pop
lea
jl
sbb
scas
mov
mov
inc
xor
sbb
sahf
pop
push
sub
xchg
pop
sub
in
fst
add
call
scas
fidivs
xchg
mov
mov
in
mov
push
sbb
mov
loope
sahf
jnp
icebp
sbb
jle
add
loopne
cmp
push
push
hlt
push
andb
movq
loop
iret
jecxz
mov
adc
jne
leave
xor
adc
dec
cmp
dec
push
xor
adc
jge
push
pushl
xor
in
imul
or
mov
sbbb
lcall
push
pusha
lahf
aam
cmc
outsb
sarl
ficoml
popf
jl
addr16
mov
orb
out
cmpb
dec
sub
adc
loopne
or
sbb
push
mov
jae
pop
popf
sysenter
mov
fs
cmp
es
lret
pop
sub
xor
rorb
outsl
rcr
cmp
fistpl
je
mov
cmpsl
pop
jae
into
pop
add
into
dec
jns
popa
pop
movsb
add
mov
out
pusha
mov
jg
pop
inc
jae
xor
decb
inc
xchg
inc
les
ret
out
push
or
pop
xchg
fsubrs
out
push
icebp
aam
sub
sub
mov
pushf
ljmp
mov
mov
cmp
lcall
xchg
fs
mov
ret
addb
fs
xchg
loop
lret
jecxz
inc
sub
clc
adc
add
add
sti
scas
push
js
ret
jbe
inc
xor
movsl
pop
cmp
in
clc
jns
jmp
xor
lsl
stc
subb
xorl
ljmp
mov
out
add
and
mov
xor
and
std
pop
fsubr
flds
aaa
cmpsb
movsl
inc
adc
sub
negb
mov
mov
insb
std
fidivl
mov
mov
push
adc
jbe
cmpsl
jle
pop
dec
orb
adc
loope
mov
frstor
movsb
mov
cmpl
mov
nop
out
xlat
rcll
fcomip
in
nop
sar
in
mov
push
cmovg
test
push
add
and
fs
adc
xor
or
and
adc
cmpsb
and
pushf
mov
xor
ja
adc
sbb
test
cs
mov
cmc
ss
cltd
push
jp
sub
cltd
les
movsl
mov
xor
je
cmpsl
or
cmp
shrl
mov
mov
clc
jnp
mov
cmp
pusha
sub
xchg
pushf
cmpsb
or
or
jle
or
out
ret
hlt
iret
xlat
pop
orl
loopne
aas
mov
push
pop
mov
aam
mov
mov
cmp
add
outsb
in
addr16
cmp
mov
idivl
mov
xchg
mov
movsl
jmp
mov
add
lret
jne
mov
leave
xorl
add
addl
mov
fldenv
scas
mov
mov
pop
hlt
out
addr16
lods
push
lds
inc
fdivrl
jle
mov
bound
popf
jmp
hlt
out
pop
clc
fucomi
ss
int3
mov
test
imul
adc
neg
in
jmp
cmp
or
jge
in
inc
inc
clc
mov
dec
pop
pop
jmp
fdivr
adc
sub
sbb
adc
sbb
add
and
dec
cwtl
inc
dec
dec
daa
ds
fnsave
jge
inc
mov
dec
add
pop
stos
jmp
cld
loope
jns
lret
jg
and
xor
mov
inc
adc
adc
mov
rcll
lret
pusha
ds
leave
and
xchg
mov
sbb
lret
subb
out
and
pop
jmp
fcom
inc
mov
out
daa
jnp
xchg
int
sar
adc
pushf
pop
out
popa
mov
leave
aas
jae
gs
xchg
xchg
sbb
xchg
sub
sbb
push
push
cmp
dec
je
rorb
hlt
js
add
adc
dec
inc
test
bound
mov
sbb
mov
lock
xchg
jge
push
adc
je
inc
insl
push
aas
jnp
pop
popa
and
pop
push
xor
lea
pop
inc
enter
inc
cmp
fldenv
or
fistpll
push
out
pop
push
dec
or
mov
dec
or
mov
or
and
cmp
lea
ss
mov
int
sbb
cltd
ret
jg
pop
shll
inc
sub
and
jge
sub
sbb
jb
or
mov
adc
xchg
shlb
loopne
sbb
mov
and
rclb
sub
int
cld
cs
ficompl
mov
and
mov
mov
fdivr
mov
in
adc
ljmp
prefetcht2
inc
ja
mov
pop
stc
xor
shll
daa
or
clc
add
jo
jmp
cmp
bound
dec
not
std
xor
mov
inc
repz
stc
xchg
push
enter
arpl
or
pop
cmp
lods
outsb
pop
aam
push
das
pop
orl
adc
out
leave
insl
loop
movsb
pusha
test
out
scas
xor
inc
push
add
ja
dec
fnstenv
clc
in
jae
icebp
or
jp
xchg
pop
aad
jne
bound
xor
mov
lods
hlt
sub
int
in
and
mov
div
insb
fcoml
mov
movsb
sbb
subb
pop
xor
sbb
pop
cmp
daa
cmp
add
dec
mov
push
cmp
dec
mov
insl
jecxz
loope
xor
jmp
lret
sub
popf
mov
jp
and
stos
outsl
loop
sbb
inc
pop
add
mov
pop
je
push
mov
sub
or
jo
jmp
cltd
inc
pop
mov
ja
dec
jo
aaa
loope
aaa
dec
filds
pop
shlb
pop
xchg
add
add
mov
jl
cmp
sti
add
gs
fisubs
in
xor
cmpsb
test
cmp
add
sbb
push
adc
jecxz
or
mov
mov
mov
das
lahf
test
adc
or
loopne
add
pop
loopne
repnz
out
sbb
data16
push
mull
add
ljmp
aas
inc
or
arpl
mov
mov
scas
push
leave
push
jge
mov
sub
mov
mov
mov
fldl
xor
stc
mov
out
jb
inc
mov
push
or
repnz
mov
lcall
idiv
push
pop
out
das
sub
mov
pusha
adc
pop
push
mov
add
das
adc
sub
or
sti
or
dec
mov
sub
cld
mov
mov
inc
mov
lea
push
popf
into
sbb
inc
jne
sub
repz
and
stos
mov
into
dec
mov
inc
out
std
dec
pop
xor
push
adc
inc
or
and
lea
imul
mov
lods
pop
pop
fsubl
cmp
cmp
nop
inc
cmc
push
jo
pop
dec
xchg
inc
scas
add
scas
lea
out
pop
bsf
add
add
sbb
repz
fsub
movsb
cs
inc
das
ja
push
sti
jg
jl
es
out
jbe
xchg
ds
rcr
jb
in
adc
sbb
push
mov
xchg
adc
cld
xor
lods
dec
fwait
push
test
in
rcl
xchg
cmp
push
incl
pusha
jns,pt
lea
adc
test
loope
mov
clc
notl
fidivrs
jbe
roll
push
call
fwait
repz
xor
jae
loop
pop
mov
jmp
out
add
outsl
enter
cli
pop
xlat
push
add
dec
pop
sub
test
ret
or
dec
mov
into
inc
das
loope
ficompl
cmpsl
mov
repnz
or
cld
rcrb
push
sbb
inc
enter
fcomps
mov
test
xchg
popf
jne
xorb
inc
pop
bound
and
xchg
cmpsl
or
xchg
ret
mov
adc
lds
pop
mov
jmp
mov
rorb
jp
push
fisttpl
inc
adc
fadds
mov
or
inc
jne
push
or
andl
movsb
pop
push
push
out
cltd
cmc
or
clc
cmp
lock
rcrl
mov
pop
or
xor
and
mov
insl
lret
leave
mov
pop
sub
push
add
and
pop
pop
movsl
dec
test
jle
loop
test
daa
jnp
mov
mov
clc
fcoms
xor
loop
xchg
or
ja
pop
sbb
ret
sbb
aam
mov
jl
inc
mov
sub
or
scas
in
mov
sbb
ja
iret
xchg
dec
cmp
in
aam
inc
arpl
push
jmp
insl
cmp
frstor
cmpsl
or
mov
pop
add
push
incb
push
stos
clc
ss
xchg
lds
lds
test
iret
jg
or
jg
jno
push
jg
cmp
mul
mov
dec
ljmp
adc
clc
jmp
mov
movsl
inc
inc
push
push
iret
test
jmp
mov
or
and
pop
pop
sar
adc
push
shl
pop
mov
push
movsl
int3
mov
mov
pop
arpl
orl
mov
sbb
or
out
push
lea
dec
sbbb
mov
pop
cld
mov
das
sub
jl
mov
arpl
js
rorb
lahf
bnd
push
add
nop
adc
imul
cmp
aam
mov
push
mov
lods
dec
insl
jg
xor
ljmp
mull
scas
or
shrl
scas
loope
out
mov
sarb
into
int
inc
jne
dec
movsl
dec
or
mov
inc
pushf
and
push
push
and
rcrb
shl
mov
in
fmul
push
into
adc
fnstenv
or
pop
repz
xor
sbb
dec
or
repnz
in
jno
or
cmp
mov
or
sub
imul
inc
ja
lds
inc
xchg
push
xor
inc
inc
fldl
mov
je
lret
jg
cld
push
imull
mov
xchg
mov
test
inc
loope
clc
cmpsl
enter
or
outsb
mov
and
fistpl
cmp
inc
leave
cli
inc
iret
out
cwtl
clc
nop
test
add
mov
or
aaa
clc
pushf
pop
mov
shll
jmp
jg
std
aas
xor
ljmp
hlt
fwait
inc
stc
adc
nop
ja
push
cs
or
fucom
cmp
dec
test
xor
adcb
mov
incl
and
jp
scas
je
jne
outsl
rorb
sti
repz
dec
loope
sti
pop
das
lret
outsl
lods
lret
sti
adc
push
movsl
dec
adc
add
push
jl
in
shll
mov
mov
add
mov
pop
mov
xchg
es
push
add
or
xchg
cld
outsb
push
cmp
dec
in
pop
ror
pop
dec
insb
sbb
sbb
mov
daa
mov
adc
mov
sahf
pop
imul
bound
cltd
jg
addr16
push
imul
cmpsb
cmpsl
inc
lret
fsubl
mov
aas
cmp
xlat
inc
fnstcw
imull
cwtl
jns
outsl
pop
loop
xor
add
stos
sub
outsl
mov
push
inc
cmp
jo
sbbb
xchg
and
xor
mull
call
in
mov
mov
dec
mov
loop
and
outsb
mov
inc
mov
out
push
jg
or
fnsave
in
jecxz,pt
mov
ds
inc
pop
mov
mov
loopne
out
jg
push
lret
in
and
and
adc
lahf
js
push
popf
mov
fsub
fdivrl
shrl
mov
outsb
mov
xor
jnp
shll
add
loope
inc
pop
push
add
add
push
and
cmc
xchg
ljmp
cmc
sbb
mov
call
pop
outsb
cmp
jbe
mov
cwtl
mov
add
repnz
fisubs
in
adc
out
jg
mov
jb
aad
mov
cmpsl
lret
sub
insl
adc
rcll
xor
sbb
outsl
or
outsb
push
cmpsl
sbb
fistps
mov
mov
sub
adc
or
addr16
dec
jmp
fists
sub
outsb
sub
cmp
into
sarl
pushf
fdivs
pop
cwtl
js
pop
arpl
mov
ret
dec
mov
adc
add
xorl
es
popa
dec
mov
xor
sub
aas
jg
imul
xchg
scas
popf
pop
call
in
pop
mov
ljmp
jle
sbb
mov
jl
cmp
xor
adc
push
fidivs
inc
fsubrl
mov
dec
notl
xor
sub
ret
or
xchg
lock
or
ja
mov
cwtl
jmp
nop
mov
subl
inc
test
jmp
mov
or
in
insl
xchg
or
jb
cli
jbe
cmc
add
loopne
push
push
insb
jle
dec
jnp
and
repnz
fimuls
jb
sarb
loope
mov
and
cmpsl
dec
push
jp
sub
les
repnz
dec
pop
cmp
sub
loop
loope
push
mov
mov
fldl
test
sahf
xor
movsl
lret
pusha
and
fwait
bound
outsl
sub
loopne
iret
dec
dec
pop
mov
stc
add
jp
ss
stos
shlb
pop
add
aaa
and
in
out
mov
lcall
inc
pop
push
popa
test
dec
jne
lret
or
std
loop
roll
mov
mov
loop
pushf
mov
push
adc
jge
lods
adc
lahf
mov
lret
arpl
in
loop
lret
mov
jae
fsubl
outsb
shr
or
popa
mov
sarb
mov
roll
mov
sub
and
je
js
jge
xlat
pop
add
mov
sub
sbb
jo
inc
xorl
adc
add
sub
jo
ljmp
dec
push
js
test
jmp
jecxz
in
or
xchg
dec
mov
adc
stc
popf
add
pop
inc
dec
jmp
sub
pusha
cmpsb
repz
test
je
xchg
add
xchg
push
mov
mov
push
inc
js
test
fsubrs
idivb
adc
jne
cmc
jl
sbb
test
les
call
xchg
sbb
sbb
sti
stos
sti
decb
or
mov
test
cli
mov
daa
fsubl
adcl
or
pop
mov
enter
insb
xchg
jbe
call
test
sub
xchg
aad
ffreep
dec
cmp
or
mov
shlb
mov
outsb
daa
mov
mov
and
cmpsb
lcall
push
rorb
mov
orl
lret
mov
lcall
inc
and
or
cli
cmp
or
and
adc
fbld
inc
dec
and
push
sub
mov
out
dec
test
cmp
mov
pop
xchg
sahf
mov
cmp
adcb
fcomip
ljmp
fisubrs
test
cmp
mov
in
repz
or
leave
jb
lods
stos
or
jno
sub
mov
test
or
aaa
xchg
sahf
aas
add
out
sbb
in
inc
sbb
imull
inc
das
stos
lret
adc
and
sahf
data16
sbb
mov
xchg
divl
arpl
inc
mov
pushf
js
mov
adc
xchg
cwtl
cmp
inc
adc
insl
imul
sbb
sahf
xor
repnz
test
xor
pop
mov
rorl
scas
leave
jl
sub
xor
dec
jnp
ljmp
push
or
xchg
leave
insb
test
push
or
stc
mov
sub
test
jl
sub
cs
lcall
in
inc
lret
int
das
jno
cltd
mov
dec
cmpl
cltd
mov
push
xchg
push
push
pop
adc
xlat
mov
adc
inc
int3
jg
adc
shl
out
adc
sbb
xchg
les
out
leave
imul
xchg
cld
insb
hlt
lret
cld
add
dec
push
fnstenv
mov
push
or
adc
scas
mov
mov
rcr
xchg
sahf
scas
mov
or
mov
fdivr
dec
bound
les
fucomp
daa
lock
cld
int
pop
stc
adc
int
add
subb
sarb
cmc
dec
push
clc
jmp
scas
mov
inc
and
dec
mov
ljmp
and
leave
mov
stos
push
jle
mov
loopne
or
pop
adc
fcoms
movsl
xchg
xchg
rorl
pop
adc
test
add
push
popf
idiv
daa
aas
repnz
in
cmpsb
clc
lds
and
call
nop
sub
fistps
cwtl
fidivrs
push
sub
add
sub
int3
dec
mov
pop
jnp
jnp
dec
jge
jae
xchg
adc
pop
push
mov
fcmovb
mov
cmpsb
dec
xor
cmp
mov
xor
push
sbb
out
ljmp
cltd
movsb
test
jns
arpl
jge
sbb
xlat
ljmp
mull
xchg
aas
andl
js
call
inc
scas
push
or
inc
vcmppd
inc
insb
inc
jo
das
sbb
addr16
popf
pop
inc
test
fstpl
scas
imul
inc
sbb
out
insl
or
jnp
jnp
jmpw
sbb
nop
xlat
leave
xchg
pop
dec
mov
enter
in
mov
lret
pop
enter
scas
sbb
sub
mov
pusha
sbbb
pop
cmp
lahf
xor
icebp
hlt
xchg
sarb
mov
loop
es
dec
mov
xor
movsb
shlb
in
adc
add
cmp
cmp
fldenv
subb
adc
shll
adc
inc
inc
sbb
insb
movl
inc
pop
jo
sar
mov
cs
jmp
xor
xchg
sbb
mov
cmpsl
in
lds
xor
loope
and
std
push
pusha
repnz
jnp
cli
aas
mov
std
dec
outsb
fcomps
cmp
cmc
out
mov
fxch
cmpsl
adc
inc
fidivl
and
jb
fld
repz
push
cmp
hlt
addr16
cbtw
les
dec
dec
sub
out
fs
push
cmpsl
mov
fdivrp
mov
xchg
imul
lea
mov
jecxz
fdiv
flds
or
inc
inc
add
repnz
ss
jbe
cmpsb
lods
dec
out
push
push
xchg
fcompl
dec
mov
das
sti
adc
cmpsb
adc
test
xchg
aas
test
mov
cmp
mov
jbe
dec
push
and
test
arpl
push
adc
sbb
vcvttsd2si
rcrl
jnp
insb
fstp
cmc
mov
imul
mov
out
or
inc
sti
and
cmp
lods
push
push
inc
fsts
add
adc
push
jg
cltd
loope
fwait
cmp
xchg
dec
sub
inc
call
sub
push
jnp
sub
idivb
mov
sbb
and
sti
pop
setbe
cwtl
mov
mov
stos
mov
or
ja
cwtl
inc
mov
mov
sbb
rcr
lds
movsl
aaa
iret
shrl
icebp
sub
pop
push
pop
fisubrl
adc
mov
mov
push
push
pop
sub
mov
mov
scas
enter
or
mov
fimuls
ljmp
ret
movsl
mov
inc
cmpsl
loop
pop
push
lret
ja
and
int
loop
pushf
and
add
faddp
push
fnstenv
pop
add
sti
cmc
and
jb
pushf
and
cmp
xchg
mov
pushf
cmpsb
repnz
push
out
fs
sbb
mov
adc
push
ds
jb
mov
mov
adc
jp
adc
test
mov
mov
aaa
or
jnp
jae,pn
addl
or
pushf
dec
jecxz
fcoml
cmp
pusha
aad
mov
mov
and
std
mov
or
dec
rolb
shrl
or
aas
loope
arpl
mov
loopne
cmc
dec
jp
lret
aam
xor
lcall
cltd
movsl
stc
cli
mov
adc
dec
add
mov
mov
and
add
sub
fisubrs
pop
xchg
inc
add
push
sub
lock
int3
xchg
sbb
or
mov
shrl
rcr
je
lds
sbb
mov
addl
clc
mov
jns
ret
loop
adc
adc
daa
adc
xchg
dec
push
rorl
sbb
adc
adc
adc
jecxz
loope
adc
cmp
push
jge
mul
jo
lods
mov
push
mov
sub
sbb
mov
mov
outsb
xor
push
mov
mov
adc
cltd
add
ss
jno
aad
addr16
push
dec
mov
fs
filds
adc
addr16
and
cwtl
lods
lret
sbb
push
push
xchg
sbb
sub
push
stos
cwtl
mov
ficomps
mov
les
fisttpl
mov
idivb
je
icebp
test
gs
jno
pop
imul
pop
dec
mov
stos
jne
or
nop
bound
mov
inc
mov
jmp
sub
pusha
inc
mov
xor
push
dec
ret
int
movsl
and
mov
std
repnz
jb
xor
loop
int3
jae
xchg
lds
int3
inc
test
push
and
cmpb
mov
repz
pop
and
add
pop
xchg
mov
retw
mov
xchg
pusha
sub
insl
in
mov
ror
xor
adc
orb
sub
loope
push
in
sub
in
rcll
popa
xchg
lods
popa
or
sbb
jns
cli
int
fistpl
cltd
shlb
mov
gs
sarl
push
or
test
pop
and
jbe
inc
mov
cmp
shrl
adc
xor
cmpsl
clc
in
daa
hlt
jmp
fsts
jle
xchg
dec
push
mov
sbb
fcomip
js
ret
pop
jp
adc
adc
fs
in
lea
lods
xor
or
pop
mov
clc
insl
int
push
lea
mov
fldt
mov
xchg
push
dec
imul
xlat
or
cmpsl
and
addl
out
fldenv
cmp
mov
iret
imul
stc
xchg
mov
jge
cmp
push
mov
mov
fwait
push
insl
mov
mov
imul
push
push
ds
loope
leave
shll
pop
decb
stos
push
ret
mov
dec
insl
or
lods
sub
or
jle
mov
mov
cld
jae
xor
imul
ror
cmp
cltd
test
xchg
mov
sbb
rcl
add
mov
lods
test
popf
je
pop
mov
dec
adc
stos
mov
iret
inc
adc
lods
sti
js
dec
std
popw
xchg
out
lock
daa
mov
mov
test
adc
nop
rol
or
add
ret
jle
cmp
mov
lcall
rcl
mov
negb
jns
das
inc
adc
out
xchg
push
xchg
mov
fisttpll
jb
cmp
aad
sti
jne
adc
mov
cmpsb
sbb
jge
and
aad
cmp
mov
adc
ds
adc
push
loopne
repz
cmpb
cltd
pushf
pop
sub
es
imul
xchg
push
sti
xchg
xor
fiaddl
popf
mov
imul
jp
dec
mov
aaa
jnp
stos
outsb
scas
sahf
shrb
jge
into
adc
cmc
imul
arpl
jo
sub
adc
nop
addr16
in
jg
jmp
arpl
mov
adc
cmpsl
mov
push
outsb
xchg
xchg
xorb
aas
fs
mov
aad
jp
xor
shlb
ret
inc
icebp
into
outsl
arpl
ja
aaa
iret
rorl
cld
mov
pop
pop
sbb
sahf
adc
pop
subb
jo
xorb
in
divl
lds
roll
cmc
leave
mov
push
jecxz
or
or
mov
aad
mov
mov
mov
pop
cmp
or
cld
inc
mov
add
sti
in
xchg
out
test
vpmullw
pop
pop
lds
lcall
pop
cwtl
repnz
repnz
lock
sub
popf
jnp
pop
fsubl
add
push
aas
in
xchg
inc
jmp
nop
test
leave
inc
shlb
or
sbb
pop
shrl
inc
push
mov
into
push
rorl
adc
icebp
daa
cmpsl
lds
lods
cld
xchg
or
adc
fs
lret
sub
nop
mov
jo,pt
or
es
xor
ljmp
in
or
sbb
and
inc
cmp
pop
add
mov
add
xchg
mov
inc
das
stos
xor
cwtl
rcl
add
int
in
into
fcomip
clc
jmp
add
jbe
inc
icebp
mov
xchg
les
stos
loope
xchg
pusha
fnstsw
fimull
out
mov
scas
and
push
adc
enter
dec
add
dec
insl
jle
fdivrs
xchg
fcomi
fs
cmp
adc
clc
in
mov
jecxz
xchg
stc
test
mov
shlb
push
and
cmp
and
ret
ret
subl
push
pop
sub
cmpsl
lods
into
data16
clc
insb
popf
sub
sub
inc
shll
xor
adc
mov
mov
add
inc
adc
inc
mov
and
gs
scas
push
add
movsl
sar
dec
stos
inc
jbe,pt
in
dec
cmp
lods
cwtl
pushf
push
push
jo
pop
and
insb
cli
xor
fcmovu
mov
out
les
les
jp
js
lods
orb
mov
testl
dec
xchg
mov
xor
cwtl
push
out
rorl
pop
and
mov
scas
push
mov
fsubr
xchg
gs
mov
nop
jmp
divl
jmp
js
test
and
push
mov
adcb
mov
cmp
xlat
call
mov
test
sar
fcompl
add
xchg
and
dec
test
lahf
stos
adc
dec
shlb
out
ss
push
add
mov
in
sbb
inc
mov
xchg
mov
mov
mov
pop
mov
mov
mov
mov
in
push
mov
lods
cmp
sahf
scas
inc
call
fwait
mov
repnz
cli
jge
ss
stos
fdivl
xor
cmp
xlat
or
loope
sub
into
fmull
jae
rcrl
xchg
sbb
xchg
lret
loop
inc
icebp
sahf
pop
jg
in
into
mov
popf
cmp
mov
adc
and
mov
fs
pop
stc
insb
out
mov
in
cld
xchg
mov
mov
adc
sbbb
enter
xchg
imul
inc
cld
xor
xchg
fisttpll
out
jle
pop
sbb
xchg
lret
push
adc
in
pop
adc
lods
mov
cmpsb
or
sbb
cmp
adc
sbb
mov
jne
icebp
rcrl
jb
xchg
or
outsl
inc
sub
jg
mov
out
mov
and
inc
data16
flds
xchg
xchg
cmpsl
mov
int3
mov
ljmp
movsb
or
jp
out
fistps
inc
pop
xchg
rep
popf
pop
xchg
sarl
es
scas
mov
push
hlt
rorl
loope
mov
xchg
mov
inc
inc
ds
shll
push
xchg
add
lods
pop
std
cmp
rclb
lahf
movsl
jbe
repnz
cli
mov
mov
pop
add
fs
scas
jns
icebp
loopne
dec
jge
cli
out
call
pusha
gs
call
add
sub
jp
test
fsubl
dec
pop
stc
scas
jnp
add
test
mov
outsl
mov
xchg
stos
cmp
sub
jo
imul
aas
or
jo
stc
pushw
add
lcall
push
cmpsl
out
pop
and
xor
jl
cltd
pop
stos
leave
popf
xor
lret
int3
mov
sarb
bound
jnp
sbb
sub
fistps
es
dec
inc
mov
js
adc
decl
pop
lods
mov
fwait
mov
lret
addl
or
push
sbb
sbb
outsb
fmull
es
inc
cltd
test
pop
mov
outsb
enter
lcall
mov
lds
sub
dec
in
out
js
sarb
dec
cltd
push
push
imull
cmpsb
mov
pop
add
and
pop
xor
sbb
dec
xchg
fsubl
fsubl
dec
shl
rclb
int3
idiv
fidivs
fcomp
movsl
lods
hlt
inc
test
inc
add
ja
sbb
push
xor
xchg
aam
inc
push
lahf
push
imul
pop
leave
rcrl
mov
jne
test
sahf
jo
xchg
cmp
xchg
lea
sbb
ucomiss
out
stos
xor
enter
sahf
fnsave
fistpl
adc
push
xlat
hlt
notb
leave
aas
in
jo
or
testb
lock
jecxz
and
dec
jnp
push
and
jge
inc
cmp
sub
mov
dec
and
jae
js
loop
shlb
xchg
data16
xor
sti
push
out
daa
sub
push
inc
jnp
mov
push
lock
lea
push
fdivrs
es
call
and
mov
sub
out
add
in
adc
les
inc
lret
and
mov
sti
rolb
popf
scas
or
inc
lret
jle
fsubrl
xchg
aaa
jnp
dec
or
ljmp
xor
arpl
in
std
mov
fildl
dec
xchg
call
dec
lock
in
or
je
scas
movsb
adc
movl
push
aas
out
in
notl
punpckldq
xor
sbb
sbb
or
pop
cli
xor
test
add
pop
shlb
mov
jp
fnstsw
pop
cltd
xor
jmp
xchg
pop
aaa
out
mov
sahf
outsl
mov
or
cltd
inc
mov
call
out
out
std
xchg
loop
fldt
sub
ds
xchg
fists
pop
out
jp
xlat
cmp
orl
cmpl
call
push
xchg
jmp
and
addb
sbb
outsl
pop
xchg
push
sbb
push
sbb
dec
jae
jge
push
xchg
jl,pn
stos
movsb
or
jge
pop
subb
jo
repnz
or
jns
lods
cmp
lret
pop
gs
clc
inc
and
cli
hlt
outsb
lret
dec
ds
push
ret
mov
ja
and
inc
cmpl
mov
push
mull
xchg
xchg
insl
cld
or
jne
dec
mov
sbb
imul
mov
xchg
addl
andb
push
addr16
iret
lahf
psubsw
data16
jmp
or
mov
add
lock
pusha
sbb
lahf
lods
shr
fmuls
out
xchg
push
dec
push
leave
adc
mov
movsl
mov
fsubrl
adc
decb
repnz
popa
lds
adc
arpl
bound
loopne
push
mov
sbb
sub
mov
js
adc
stos
hlt
lds
lods
enter
jo
adc
push
jmp
sarl
jb
aam
adc
fidivl
inc
jne
pushf
or
mov
push
xor
xor
rolb
push
cmp
jge
inc
inc
gs
testl
pop
dec
add
loope
push
sbb
dec
imul
hlt
adc
cmp
or
jns
lahf
sbb
out
dec
popa
popf
mov
loopne
fs
and
jne
cmpsl
cmp
orl
lea
adcb
cld
into
dec
and
enter
push
inc
lods
cmp
pop
ss
out
lret
cmp
shll
repnz
daa
sbb
mov
mov
jno
sbb
ret
data16
adc
lods
popa
xchg
pop
pop
sbb
mov
lahf
mov
xor
and
sub
xlat
sbb
inc
mov
cmp
cmpsl
clc
or
or
gs
mov
or
out
mov
xchg
imul
push
in
scas
cmc
mov
scas
inc
sub
add
divb
or
push
daa
add
insw
loopne
dec
data16
sbb
test
inc
inc
pushf
push
scas
jne
mov
xchg
jns
aas
push
xor
and
mov
aaa
dec
lods
dec
and
enter
das
pop
inc
hlt
shlb
push
adc
iret
dec
test
shl
test
test
addr16
rcrl
lods
pop
mov
inc
mov
scas
inc
ss
fisubl
inc
jo
adc
loop
jp
into
out
pushf
out
mov
push
pusha
popa
xchg
mov
push
mov
or
or
jb
mov
and
mov
insb
das
sub
adc
mov
js
pop
movsb
scas
lock
or
inc
or
add
and
mov
lcall
rolb
movsb
mov
mov
mov
or
aas
mov
in
xchg
xchg
lds
adc
xchg
xlat
loope
mov
test
cmp
pop
push
mov
out
ss
leave
jp
pop
jo
mov
adc
pop
pop
or
ror
mov
loopne
sbb
mov
notl
mov
popa
loopne,pt
or
out
xor
sub
popf
mov
loop
inc
jo
jge
hlt
fstl
inc
fistps
jns
ret
or
pop
test
lea
add
scas
sbb
sar
pushf
fildll
or
push
add
loope
pop
push
pop
out
pop
push
test
or
in
pop
jg
enter
mov
or
loope
clc
lahf
or
mov
xchg
out
push
mov
dec
hlt
enter
mov
push
pop
pop
adc
andl
mov
int
es
addr16
mov
inc
in
cmpl
add
xor
es
aad
sbb
jp
mov
mov
ds
lahf
stos
pop
mov
ret
test
push
sub
gs
cmp
dec
mov
aam
or
imul
das
push
mov
ss
fistpl
ljmp
jl
jno
mov
je
jmp
test
imul
dec
shlb
scas
je
push
outsl
push
jl
xchg
xor
cli
sti
xchg
pushf
xor
stos
int
mov
and
mov
in
mov
mov
cld
hlt
push
dec
adc
add
fsubrl
mov
or
xchg
jg
xlat
pop
lcall
dec
rcrl
jne
inc
pushf
jno
repz
int3
dec
and
mov
xor
repz
sbb
jns
jo
icebp
fdiv
in
jmp
in
inc
add
pop
std
mov
dec
inc
and
ds
fsubrl
andl
dec
or
jmp
loopne
pop
fdivs
sahf
xchg
xchg
ja
rcl
je
sbb
jp
lahf
lea
xor
add
scas
test
addr16
fsub
cmp
adc
ficompl
dec
nop
mov
test
xor
mov
imul
or
sbb
out
xchg
into
imul
shlb
test
adc
bound
dec
or
push
dec
loopne
ret
out
inc
sahf
push
pop
add
outsl
clc
jno
push
lret
rcll
ja
and
or
cltd
xor
or
mov
dec
aaa
sub
push
imul
scas
popf
xchg
ret
sbb
mov
mov
lgs
add
lds
push
outsl
push
adc
jmp
int3
inc
scas
push
test
xlat
enter
adc
xchg
push
xor
int3
sub
sub
sub
xchg
cmp
fdivr
pop
add
insl
imul
sub
loope
push
movsl
mov
sbb
dec
cmp
push
xchg
fidivs
outsl
mov
out
inc
inc
popa
sarl
jg
or
fdivl
lahf
out
jp
scas
sub
lods
pop
bound
nop
clc
or
mov
pop
xchg
mov
fs
outsl
into
int3
movsb
jle
sarb
test
movsl
xchg
dec
cld
push
cmpsl
fdivs
or
xchg
and
je
sub
aaa
rcrl
pop
sub
insl
mov
push
femms
lret
and
repnz
shl
cmp
daa
pop
jl
jle
test
fstps
dec
mov
jne
mov
mov
push
mov
jmp
add
mov
and
or
push
xor
xlat
roll
or
int3
jne
mov
movsl
xor
pop
les
out
or
xchg
rcrl
lods
or
shl
ss
fistps
int
loop
xchg
xor
sub
mov
ret
lcall
adc
mov
fldl
shlb
sub
mov
aam
clc
mov
popl
std
jo
pop
and
xchg
xchg
sbb
xor
cmpsl
fistps
push
movl
in
pop
loop
xchg
mov
mov
cmpl
out
lods
inc
inc
cmp
xchg
scas
dec
dec
pop
and
in
js
std
sub
sbb
sub
xchg
xchg
cmpsb
imul
xor
jl
ss
inc
dec
cld
pop
outsl
inc
fwait
mov
movsb
cwtl
push
repnz
mov
push
xor
out
test
inc
inc
pop
mov
dec
sarl
lods
fs
inc
out
push
xchg
gs
cmp
into
sub
stos
xor
cmpsl
add
sbbb
cli
mov
inc
pop
rcll
adc
add
ja
mov
adc
lahf
xchg
gs
aas
cltd
mov
popa
in
mov
out
outsb
pop
ret
push
nop
mov
or
mov
cmpsb
test
mov
pop
or
cmpsl
stc
adc
xor
inc
cwtl
push
or
jae
xchg
mov
or
dec
scas
les
rolb
sub
mov
jns
xchg
dec
cmp
mov
test
imul
sub
cmp
mov
push
pop
call
imul
adc
fldenv
imul
add
mov
cmpsb
sub
xor
lahf
dec
jns
pop
sub
lods
sbb
mov
loopne
push
mulb
pop
lcall
sahf
negl
cli
shlb
pop
fstpl
in
pusha
push
cmp
add
mov
cmp
sahf
testb
imul
repnz
pop
lock
aad
test
push
cltd
movl
clc
popf
sbb
data16
cltd
cmp
leave
dec
jmp
or
imul
pop
rcl
jno
bound
push
cwtl
dec
iret
cmp
pop
test
pop
xor
cs
shr
mov
add
adc
pop
push
cmp
scas
adcl
fcoml
mov
test
jg
push
mov
enter
fiadds
xchg
cmc
es
pop
fsubrl
sbb
leave
aas
mov
pop
bt
in
xor
rolb
lods
shll
or
jbe
icebp
mov
int
sbb
repnz
shll
push
cmp
sub
bound
xor
pop
xor
xor
fcompl
and
sub
fimuls
xor
adc
cli
loope
ret
mov
pop
dec
dec
repz
mov
jmp
jle
arpl
je
sahf
ljmp
movsl
jmp
mov
xor
cmp
xchg
int3
sub
xchg
adc
aas
es
sbb
jbe
add
subb
dec
push
addr16
dec
gs
shrb
js
push
and
pushf
test
lahf
pop
xor
sarb
lods
push
int
scas
or
push
inc
adc
repz
sub
cwtl
jbe
inc
mov
pop
mov
sahf
int3
scas
or
outsb
pop
stos
cltd
lret
scas
das
fadds
mov
ja
inc
inc
xor
scas
fsubr
in
fstps
ds
hlt
mov
rcl
out
addr16
data16
mov
jnp
nop
or
insb
push
nop
insl
sarl
mov
or
push
mov
cmp
aam
lock
scas
into
mov
inc
data16
add
push
push
lods
add
push
add
xchg
cmp
scas
outsb
jbe
arpl
nop
addr16
sbb
mov
inc
enter
out
out
rcl
popf
pushl
add
into
fcompl
xor
dec
pop
pop
cld
inc
sub
mov
xor
mov
jb
leave
shlb
xor
mov
lea
orl
clc
push
jbe
call
stc
sbb
mov
ljmp
push
adc
xchg
sub
push
sub
lret
test
xchg
pop
jbe
mov
addb
hlt
out
std
mov
stos
fldl
lock
ret
fbstp
loopne
not
push
out
adc
testb
test
dec
mov
int
fcompl
xchg
sub
cmpsb
pop
adc
popf
xor
inc
add
pop
popf
xor
sbb
cmc
scas
test
out
ss
enter
movsb
sbb
or
sti
mov
add
ljmp
aaa
and
int3
out
inc
pop
addb
and
test
loop
adc
mull
mov
sbb
jbe
cmp
imul
in
jle
pop
les
xor
ja
cli
jnp
pop
jbe
bound
xchg
test
aam
daa
pop
push
sbb
cmc
in
call
push
mov
cmp
imul
movsb
push
add
loope
jne
jl
and
ss
mov
and
xlat
mov
dec
iret
jle
xor
xchg
out
adc
or
push
jne
movsb
inc
sub
mov
adc
popa
jae
aad
testl
lds
es
mov
aas
cltd
iret
pop
dec
sbb
mov
stos
cmp
movsl
add
and
mov
and
movsb
pmaddwd
loope
ret
sarb
ret
cltd
sbb
and
xlat
and
cltd
fldenv
subl
xor
ljmp
out
cltd
jecxz
xchg
icebp
inc
icebp
pop
xor
xlat
xorb
pusha
push
and
push
cmpsb
inc
jno
and
in
ret
add
mov
inc
gs
cmpsb
or
popa
cmp
sbb
inc
addr16
out
jnp
mov
js
add
mov
lahf
sarl
cmp
mov
fwait
rcl
jmp
and
cmpsb
jne
in
stos
pop
ja
cmpsb
mov
outsl
mov
sbb
insl
jecxz
and
icebp
and
fsubr
mov
loop
fwait
inc
cmp
in
fistl
push
insb
arpl
xchg
in
fwait
mov
pop
push
xor
loop
pop
fcoms
loopne
mov
adc
xchg
and
popf
mov
call
push
jno
mov
loope
adc
divb
push
xchg
in
mov
mov
in
nop
jbe
pop
and
aad
outsl
lods
jno
dec
imul
sarl
cmpsb
aam
insb
xchg
pop
daa
mov
cs
push
repz
insl
adc
andb
imul
sahf
call
je
enter
mov
mov
pop
adcl
sar
dec
mov
sbbl
popf
xchg
dec
loope
adc
sub
pop
fcomi
cs
aas
insl
add
xchg
mov
push
sti
stos
daa
js
movsl
mov
sbb
mov
inc
test
and
and
xchg
test
imul
jbe
lds
jb
adc
jecxz
sub
in
dec
aam
and
fiadds
pop
das
mov
add
mov
add
push
filds
sbb
mov
or
in
mov
xor
jl
ja
das
push
dec
fstpt
js
mov
roll
shlb
lea
jns
sub
mov
iret
xor
xor
sbb
scas
mov
repnz
dec
push
xor
ss
add
mov
xor
testb
push
sub
mov
ljmp
leave
jbe
xor
pushf
pop
stos
cmp
pop
mov
sub
mov
stc
stos
stos
icebp
rorb
xlat
or
mov
jl
ja
daa
or
sbb
adc
aas
rcrb
push
push
fisubs
fmull
pop
pusha
int
jns
into
int
incl
push
mov
sbb
push
loopne
mov
adc
jl
lahf
mov
inc
andb
mov
pop
mov
inc
or
stos
cmp
out
movl
mov
mov
jmp
mov
fstcw
jnp
cmp
push
lods
mov
inc
rorl
jp
ljmp
lcall
das
movsl
mov
pusha
mov
scas
mov
mov
mov
aad
xor
cs
orb
stos
or
out
mov
jnp
in
dec
mov
or
mov
cmp
pop
outsb
jns
loopne
push
in
leave
call
inc
jecxz
cmp
repnz
cvtdq2ps
adcl
mov
jae
pop
pop
test
js
mov
cmp
cmpl
push
leave
pop
add
jle
or
cltd
xchg
mov
aaa
inc
test
fsts
sahf
and
ds
repz
lods
adc
push
roll
sbb
add
cmpsb
rcr
outsb
cmp
aam
fidivl
jmp
mov
push
rcrl
or
dec
lahf
aas
and
add
pop
fcomps
pop
push
out
and
fwait
adc
fisubl
mov
icebp
rcl
cmp
add
pop
test
imull
sub
cs
and
or
les
xchg
push
push
push
inc
xchg
sub
dec
sbb
pop
call
pop
loop
aam
outsb
fistps
mov
push
pop
test
int
push
loopne,pn
adc
jbe
jl
add
cmp
lds
loopne
xor
scas
cmpsl
pusha
jg
sub
add
add
push
fisttpll
push
mov
sbb
lods
xchg
in
push
movsb
adc
and
fisubrs
xchg
mov
xlat
inc
cmp
push
sub
loopne
popf
ja
jnp
and
pop
cmpsb
cmpsl
ds
pop
cltd
jecxz
mov
cmp
pop
inc
std
imul
mov
and
inc
scas
xchg
xor
or
fucom
push
out
imul
fcomps
fstpl
fcmovnb
inc
cld
sub
inc
mov
sahf
js,pt
in
enter
dec
cmpl
mov
xchg
xor
xchg
outsl
js
mov
cli
mov
scas
cwtl
add
std
adc
xchg
out
shrb
test
push
or
addr16
das
call
pop
lahf
adc
outsb
xchg
shrl
mov
ds
rol
mov
mov
mov
jge
sub
fldl
lahf
enter
push
push
sbb
push
mov
pop
pop
cld
pop
cmp
inc
adc
insl
jbe
xchg
inc
pop
mov
sub
jl
dec
notb
ja
cmc
mov
scas
popf
jp
pushf
jecxz
cmpb
jl
addl
pop
ret
or
in
push
stos
lock
push
xchg
ss
pushf
orb
jnp
xchg
pop
pop
stos
sub
js
stc
into
or
pushf
inc
pop
push
stc
jno
fstp
or
arpl
adc
jno
mov
jp
aam
push
jmp
pushf
jbe
push
pop
jmp
add
stos
idivb
and
outsl
xorb
xchg
mov
pop
rolb
push
mov
lcall
mov
movsl
pop
lcall
addl
mov
inc
pusha
mov
mov
adc
outsb
int
inc
lret
outsb
pop
into
cmp
sub
insl
and
cmc
xor
mov
out
jne
scas
lret
sbb
ret
in
push
call
and
pop
sbbb
pop
inc
xchg
mov
sub
xchg
adc
mov
mov
scas
cmp
mov
cmp
fcmove
in
push
loopne
or
sub
xor
jns
xchg
je
pop
pop
pop
adc
mov
sub
lahf
mov
dec
mov
sbb
xchg
fdivrs
mov
mov
cld
iret
stos
test
sbb
xchg
jbe
loopne
lods
xchg
cmp
shrl
dec
xchg
cmc
clc
sub
xchg
sbb
pop
push
inc
mov
inc
lods
adc
cld
inc
push
jae
das
orb
cmp
mov
pusha
sarb
jl
out
movl
mov
pop
mov
fucom
leave
adc
in
pop
xor
aam
ds
ja
fistps
lods
push
repz
aaa
les
imul
sbb
sarl
into
xchg
mov
xor
pop
fimuls
outsb
xchg
outsb
lahf
repnz
sbb
or
dec
hlt
mov
je
nop
cs
aas
xchg
push
arpl
outsb
or
xchg
push
into
addl
sbb
bound
xchg
mov
cmp
push
inc
lds
stc
sti
push
je
aam
lcall
outsb
sub
hlt
pop
jmp
addb
sbb
idivb
je
enter
and
call
movsl
stos
lods
rclb
hlt
or
repz
sbb
sti
popa
push
pop
into
popa
add
div
pop
xchg
mov
mov
sub
inc
push
nop
xchg
lcall
xor
mov
fs
addl
mov
je
sub
sbb
inc
jo
mov
mov
dec
jle
jbe
sub
and
mov
int
andl
out
test
push
xor
add
hlt
and
pop
lds
push
hlt
sarl
rcl
lret
fcoms
insb
ds
sarb
xlat
ljmp
sub
and
or
in
rclb
dec
pusha
cmp
inc
stc
pop
xchg
cmc
jns
jnp
add
sbb
jge
pop
sub
jbe
sub
orl
rclb
add
and
mov
xor
push
or
loope
pusha
pop
dec
inc
sub
leave
std
jno
adc
mov
mov
xor
lret
repnz
or
inc
pop
scas
fcoml
out
gs
and
cmp
arpl
jmp
adc
stos
pop
cmpsl
and
mov
lods
xchg
adc
jmp
leave
inc
nop
jae
fldt
fidivrs
sbbb
fsqrt
jl
scas
pop
cmp
sbb
sub
ret
out
add
adc
jnp
repz
ljmp
mov
mov
fidivs
sub
add
mov
push
iret
into
scas
es
arpl
sbb
sbb
lret
sub
inc
mov
mov
sub
pop
data16
cwtl
add
cmpsb
jno
pop
adc
dec
movsl
sbb
cmp
sbb
outsb
mov
cld
mov
sub
hlt
add
pop
fs
sub
test
pop
jge
cmp
dec
nop
adc
cmc
sub
out
sarb
int3
into
movsb
xor
lds
repz
test
fcoms
jl
in
mov
xchg
inc
push
testb
nop
lcall
arpl
mov
or
out
aaa
es
adc
jmp
mov
bound
lahf
mov
lret
adcb
es
aam
adc
fists
push
adc
les
popa
and
shll
inc
cli
jge
and
in
jecxz
lds
or
leave
dec
jl
inc
sbb
cmpsl
test
cli
scas
fsubrp
into
mov
dec
jo
xchg
xchg
addr16
or
cmp
add
pop
pop
jo
xlat
cwtl
jg
add
jg
aam
call
sbb
imul
cwtl
hlt
outsb
push
push
cld
sub
sti
imul
jg
ds
mov
divb
push
pop
cmp
sbb
out
inc
loop
or
mov
hlt
push
sbb
push
mov
cmp
inc
jp
std
enter
add
enter
int
mov
jl
loope
lret
stc
aaa
dec
or
sbb
sbb
lcall
and
mov
in
ficoms
inc
cmp
std
loop
mov
hlt
js
xchg
adc
mov
sub
jge
setge
in
cltd
add
mov
add
sbb
adc
pop
daa
out
or
cmp
pop
or
scas
pop
push
push
mov
sbb
lock
arpl
and
iret
pop
les
and
lahf
pop
and
aas
shr
pop
ror
mov
in
sarb
aad
jo
ss
dec
stc
outsl
and
add
scas
imul
enter
mov
popa
mov
xor
lcall
or
sub
testl
adc
incb
in
mov
or
iret
clc
pop
cld
mov
mov
jmp
out
dec
shrl
xlat
stos
jle
push
cmc
rcrl
cmc
xor
jmp
mov
adc
lods
pop
sub
jecxz
xchg
lcall
push
inc
in
mov
test
sbb
insl
mov
mov
call
mov
mov
fsub
test
add
test
pop
jl
sbb
inc
fldt
or
imul
dec
and
add
sub
jne
sarb
push
xor
sub
and
aad
lds
loope
sahf
jle
ret
sarb
aas
movsb
xchg
mov
mov
loope
int3
enter
stos
push
sub
rcrl
dec
daa
in
ret
mov
in
inc
loopne
mov
outsl
ret
lods
out
mov
iret
jmp
pop
and
dec
imul
jo
cmp
test
pop
fs
xlat
xchg
dec
lds
mov
pop
adc
insl
cli
sbb
mov
pop
mov
fs
cmpsb
mov
nop
cmp
ret
mov
insl
leave
rorl
dec
push
test
addr16
ja
icebp
loop
sub
stc
dec
pop
push
sar
xlat
lret
and
mov
jle
jo
imul
mov
adcl
add
loopne
lods
jl
js
lret
std
xor
or
cmp
inc
rorb
add
loopne
addb
int
pop
outsb
mov
xor
ss
lods
inc
and
test
lahf
sub
push
fsubrp
ljmp
aas
sahf
clc
nop
mov
pop
call
xor
push
cli
mov
sbb
jmp
int
inc
xor
or
xchg
div
test
xchg
test
jnp
mov
push
fwait
es
mov
ret
push
jg
sbb
xchg
adc
andb
fisttps
rcrl
or
xchg
jne
or
cmp
ljmp
out
sbb
scas
mov
inc
add
push
mov
jo
cmp
adc
push
fldenv
mov
xlat
stos
push
adc
cmp
pop
lahf
loopne
xchg
jne
psubusb
mov
push
mov
cmp
jg
shl
push
in
dec
cli
cmp
or
divb
pop
and
hlt
pop
pop
mov
popa
ljmp
in
ret
push
pop
sbb
cmp
cmp
adc
jns
repnz
cs
sub
cmp
push
inc
out
pushf
push
inc
push
pop
cmp
cmp
push
jg
stos
jecxz
cs
pop
mov
pop
cmp
pop
scas
push
mov
and
pop
or
es
dec
mov
mov
xor
mov
mov
test
sub
sbb
lods
sbb
xor
xlat
mov
out
aas
iret
cltd
leave
push
std
mov
out
xor
out
mov
mov
lahf
mov
cld
push
es
fisttpl
cli
jle
mov
and
aas
mov
out
ss
ret
xchg
mov
dec
pusha
pop
ror
icebp
in
jae
pop
jle
xchg
mov
ss
mov
add
clc
stos
and
lahf
aad
cmp
sub
sbb
filds
mov
or
scas
adc
lods
js
das
stos
cmp
mov
add
inc
movsb
xchg
ljmp
sbb
movsb
mov
fwait
xor
mov
or
pushf
subl
dec
push
jbe
xor
aad
push
out
jge
pushf
arpl
std
or
cmp
cmpsl
shlb
dec
pop
lea
lods
mov
daa
lods
addr16
ljmp
popf
insl
in
lock
push
fsubs
into
movsb
mov
in
mov
jae
mov
xor
mull
mov
fldt
popf
push
lods
xchg
xchg
lcall
inc
testl
mov
ret
cltd
inc
push
mov
push
cmc
dec
xchg
fisubl
and
orl
mov
xor
jo
sbb
fwait
jb
cmc
xchg
mov
push
push
mov
repz
sbb
stos
push
sbb
ja
sarl
in
in
jne
inc
cmp
loop
pop
cmpsb
popf
adc
ficomps
lcall
stc
inc
mov
pop
movsl
scas
loop
xchg
cmp
inc
xchg
aad
cmp
in
inc
sbb
inc
add
pusha
cmp
shll
rcrl
test
dec
ja
xlat
xchg
xchg
jbe
dec
popa
icebp
sub
fcompl
sub
ret
push
aaa
xchg
xor
push
fsubrl
in
cli
loop,pt
push
jp
ss
adc
sbb
cmc
mov
sbb
push
adc
and
dec
mov
std
push
push
jg
push
mov
mov
stos
inc
add
jmp
insl
inc
mov
lock
fsubr
xchg
jns
inc
loope
cmpsl
mov
out
lods
jo
adc
aas
pop
pop
stc
xchg
sbb
fsubrs
mov
ds
and
inc
mov
sub
shlb
or
xchg
and
cmc
jecxz
popa
jecxz
ds
sbb
jnp
iret
rorl
sbb
cmpsb
cmp
xchg
cwtl
sub
fstps
cmp
js
test
pop
and
lods
clc
pop
pusha
pop
jle
adc
lret
dec
imul
jle
or
and
rcrl
cmc
addb
addl
jmp
cltd
iret
sar
in
or
mulb
fs
sahf
popf
fldl
lock
js
insb
xor
mov
add
dec
pop
add
lods
cmp
mov
cmpsl
push
or
sub
sub
mov
mov
test
inc
inc
mov
dec
mov
popa
fcompl
div
add
outsb
mov
daa
fstps
mov
je
les
fistl
iret
push
pop
in
adc
push
xchg
popf
lds
push
imul
sahf
lcall
sub
mov
rcr
dec
jns
inc
inc
and
adc
inc
sbb
fsubl
test
hlt
adc
and
leave
dec
jne
adc
mov
rorl
xchg
sbb
int3
mov
adc
push
push
cmc
pushf
aad
scas
in
stos
fucomi
adc
jb
insb
fwait
xchg
push
lret
sahf
cmp
jbe
clc
push
jge
ljmp
pop
mov
cmp
inc
scas
add
das
aas
pop
orb
lret
cmp
lahf
adc
out
adc
push
aam
pop
jmp
and
cmc
xchg
lret
les
call
pushf
sbb
fisubrl
cmp
inc
outsb
les
stc
daa
gs
aam
enter
in
cwtl
inc
fidivl
and
sub
in
cli
dec
data16
pop
cmp
ret
hlt
popf
cltd
adcl
pop
scas
rol
int3
mov
hlt
dec
lahf
call
cmc
mov
or
sbb
add
jle
cmp
pop
mov
xchg
dec
mov
lcall
lret
lods
cli
push
sbb
rorb
shlb
faddl
cmp
cmp
sub
jmp
cli
jns
add
sahf
or
or
and
flds
ljmp
aaa
cmovne
mov
jge
js
cmpsl
cmc
cmp
xlat
push
cmp
fstps
test
pop
sbb
popf
cld
pop
movsb
setle
push
adc
jmp
add
cmp
cs
cltd
inc
dec
shlb
lcall
push
sbb
paddusb
mov
ret
dec
in
push
das
adc
testl
aaa
sbb
push
aas
dec
push
dec
sbb
mov
xchg
scas
imul
dec
stos
bound
jmp
test
add
les
leave
enter
mov
push
hlt
mov
sbb
mov
xor
add
cmp
xor
fiaddl
jne
shll
pop
into
in
push
sbb
sbb
xchg
dec
xchg
ljmp
shll
ss
xor
inc
scas
push
dec
fwait
lds
jmp
repnz
xchg
aad
cld
adc
jl
inc
jae
movsb
cli
sahf
mov
push
inc
pop
adc
popa
daa
call
aad
dec
out
mov
loop
loope
push
ljmp
fidivrs
xlat
les
in
gs
push
cmp
jge
nop
push
negl
and
fbstp
fbstp
test
jmp
cwtl
mov
rolb
cmc
clc
jns
iret
sbb
mov
in
mov
jmp
add
pmaxub
jns
jno
or
mov
icebp
sbb
scas
mov
and
jnp
popf
repz
out
in
sub
sbb
cmp
jns
mov
sub
inc
inc
adc
pop
dec
add
negb
pop
push
jno
dec
clc
mov
sbb
mov
adc
imul
in
arpl
xchg
cli
or
adcb
add
xchg
xor
mov
pop
sbb
push
xchg
mov
rcl
pop
loopne
push
in
inc
pop
xchg
sbb
bound
addr16
movsb
push
mov
add
jns
mov
mov
dec
mov
pop
inc
clc
cmc
outsb
push
pop
sbb
icebp
push
loopne
jle
std
push
jnp
or
sub
push
rol
xor
cwtl
adc
xchg
stos
leave
repnz
push
mov
into
mov
adc
lcall
test
jmp
popf
div
push
and
xchg
jmp
push
pop
mov
or
in
addr16
push
out
das
stc
fnsetpm(287
add
fisubrl
mov
imul
dec
dec
mov
hlt
jno
cmp
xchg
clc
jmp
bound
sahf
lods
xchg
mov
cmc
rclb
dec
ss
xor
adc
roll
aas
ret
test
in
xchg
arpl
xor
lods
out
cs
push
xlat
daa
loope
hlt
jns
daa
pop
sahf
dec
xchg
sarb
xchg
jb
xchg
sbb
jne
push
cmp
or
std
daa
cmp
js
cmp
jae
inc
mull
xchg
jbe
out
shrl
push
mov
icebp
add
pop
push
and
movsb
daa
out
movb
inc
imul
mov
lea
int3
push
pop
dec
dec
fists
jae
gs
pop
dec
inc
and
rcrb
xchg
dec
inc
cmp
arpl
hlt
call
cli
or
popf
inc
sbb
insb
icebp
and
inc
fimuls
and
fs
dec
aad
push
xchg
sub
and
movsb
movsl
mov
popa
and
aas
push
push
inc
lods
cmp
in
sahf
and
jp
andl
insl
xchg
outsl
div
or
leave
xchg
stc
sub
clc
or
mov
cmpsl
pop
movl
imul
movsb
mov
ss
add
fistps
je
pop
out
out
inc
mov
mov
inc
insb
mov
pop
mov
bound
stos
xor
ss
mov
push
mov
in
outsb
inc
mov
negl
mov
xchg
adc
cmp
mov
jle
icebp
push
xchg
push
mov
aam
inc
inc
in
data16
xchg
pop
pop
nop
adc
push
insb
nop
cmp
mov
ret
push
lds
mov
in
lods
jg
mov
sbb
ljmp
and
and
xchg
loop
inc
push
in
lahf
or
mov
jmp
xchg
test
mov
dec
add
rcrl
test
cmp
xor
add
jp
movsb
test
sbb
mov
std
popa
pop
cmpl
rol
aam
add
sbb
xchg
inc
add
and
scas
out
loopne
dec
mov
ljmp
lods
lahf
jmp
pop
fucomp
out
xchg
in
inc
cmpsl
dec
pop
imul
test
fidivrl
xchg
into
sub
mov
cmp
dec
mov
or
adcl
xchg
std
mov
imul
add
xor
push
mov
adc
jge
jmp
mov
test
inc
or
fs
ds
sub
mov
sbb
xorl
lods
lret
sub
and
repz
push
fiaddl
mov
add
mov
mov
rolb
pusha
mov
test
add
cltd
push
mov
push
sbb
lahf
ljmp
rcll
dec
insb
stos
mov
scas
in
sub
fcom
dec
push
mov
int
ja
mov
push
rcl
and
jno
scas
pop
jne
lcall
call
lgs
fsubrl
or
popa
fdivl
sub
pop
pop
enter
xor
adc
mov
std
ret
mov
add
outsb
test
incb
lods
or
xchg
sub
pop
fldcw
mov
loope
test
imul
ja
inc
out
mov
adc
mov
jmp
fwait
in
add
mov
repnz
sbb
das
jne
add
repz
pop
push
popa
not
lods
or
bound
jb
repz
jns
xor
mov
aad
add
push
push
stos
ret
clc
sbb
add
ja
sub
jg
mov
dec
fistps
popa
movsb
jmp
dec
orb
cwtl
outsl
lods
je
clc
jge
mov
loop
inc
sub
roll
xchg
pushf
scas
jae
shr
adc
inc
mov
xchg
fwait
cmp
jmp
push
scas
aas
xor
or
add
inc
rorb
sub
lods
mov
jge
dec
xor
mov
jl
popl
dec
cwtl
pcmpeqb
mov
sbb
adc
mov
dec
mov
incb
lods
push
enter
jo
js
std
shrl
push
sbb
iret
pop
pop
popf
inc
repnz
test
push
xor
dec
jg
sti
sub
inc
dec
adc
xchg
loop
popf
inc
add
cmpsl
loopne
lcall
lret
mov
xchg
push
push
mov
mov
sbb
mov
js
dec
jbe
inc
push
dec
xor
out
or
adc
arpl
mov
loope
bnd
sub
mov
jge
ficomps
pop
mov
stc
cs
sub
aas
mov
frstor
xchg
cmp
fwait
inc
pop
mov
sbb
loopne
push
jbe
adc
mov
jne
jno
dec
mov
push
das
xchg
or
and
addr16
mov
pop
xor
mov
lods
push
jle
jnp
mov
stc
cltd
test
mov
add
dec
pop
insl
loopne
test
js
enter
mov
in
int
and
sarl
push
xor
addr16
out
jo
ds
sbb
xor
sbb
test
cs
std
das
jno
or
jno
mov
clc
sub
mov
and
dec
lods
je
pop
jl
sub
push
pop
dec
imul
and
sub
adc
stos
int3
jnp
outsb
int3
shl
sub
in
repnz
mov
test
sbb
lcall
std
js
sbb
lea
push
mov
xchg
clc
pushf
jno
popa
xor
test
mov
lcall
jae
cs
dec
add
jmp
inc
mov
in
scas
xlat
lahf
sbb
or
loop
jnp
cmp
hlt
fcomps
popa
je
adc
cmp
cltd
pushf
inc
in
fisubl
dec
std
stos
sub
lret
sub
sub
loopne
sbb
arpl
notl
dec
xchg
sahf
pop
fcompl
dec
lret
lcall
movsl
addr16
xchg
adc
jp
jnp
or
cs
into
js
ds
sbb
imul
and
sbb
dec
rcrb
push
cmp
es
sar
push
pushf
adc
dec
inc
rcr
fsubl
fs
jbe
insl
jae
pop
adc
mov
pop
jle
fmulp
es
popa
mov
push
mov
das
mov
cmp
jbe
ret
or
mov
jno
jns
mov
xor
shl
and
aaa
mov
dec
adc
adc
sub
push
push
stos
test
lret
sar
lods
pop
int
push
dec
cmp
iret
pop
jmp
fistpll
adc
mov
jb
aas
sbb
or
clc
dec
aam
fwait
dec
cmpsb
sarl
sub
inc
test
and
iret
jge
lahf
mov
xor
fildll
xchg
or
shll
scas
push
inc
jmp
sbbb
cltd
add
push
cmpsb
cmp
xchg
and
stos
shlb
jae
jae
cmp
mov
aam
inc
std
outsb
xor
mov
jne
pop
pushf
mov
lods
jmp
les
popa
call
fsts
and
imul
push
es
aad
xor
push
cmpsb
add
out
dec
fdivl
into
sbb
jnp
dec
mov
outsl
and
dec
lea
arpl
sub
shr
arpl
push
push
xchg
js
fcomi
xor
adc
push
ja
pop
pusha
sbb
imul
xor
jb
xor
loop
movsl
push
fistpll
lea
cmp
lods
int3
cltd
fsubrl
mov
fdivl
xor
cs
ret
jmp
scas
cmp
fstp
outsb
jbe
adc
pop
inc
or
inc
sub
sbb
nop
push
pushf
js
inc
ja
xor
aas
sub
aad
ss
jns
sub
pushf
and
stc
inc
fwait
dec
test
adc
rorl
add
test
inc
push
or
sbb
push
adc
pop
pop
mov
rcr
hlt
imul
inc
adc
sbb
or
mov
lea
pop
cltd
lahf
sub
cmpsb
pop
ret
sbb
mov
pop
out
mov
or
mov
outsl
lcall
pop
mov
outsl
inc
sbb
in
jg
mov
jae
jmp
cmp
pop
in
movsl
inc
jg
dec
cmp
cmp
and
xor
jbe
sub
inc
xor
lods
jle
not
xlat
fsubrl
ja
pop
into
mov
ljmp
popa
sub
frstor
mov
aas
in
push
popf
cmp
out
jae
jg
fninit
jne
cmp
mov
and
fmuls
stos
mov
sti
mov
mov
mov
xor
int
mov
or
aam
ffree
adc
test
ret
fsubrl
lods
sub
gs
lods
push
add
adc
xchg
rorl
inc
ret
faddl
dec
and
sbb
sti
insb
fistps
jmp
dec
jb
or
sub
lret
roll
cmpsb
in
jle
movsl
cmp
and
cld
sub
adc
cwtl
movsb
xchg
and
xchg
or
mov
sub
sub
or
mov
push
mov
fbld
sbb
subb
lret
fldl
sbb
jbe
mov
out
mov
xlat
fdivrl
dec
inc
pop
imul
jne
in
add
and
insb
hlt
popf
cmp
jo
mov
mov
in
and
push
or
jmp
jecxz
aaa
clc
sahf
add
cmc
jo
insb
adc
loopne
dec
imul
mov
push
inc
inc
inc
outsl
pop
imul
and
mov
insb
xor
mov
mov
daa
popf
sbb
mov
mov
hlt
mov
fdivp
scas
outsl
fwait
arpl
xchg
rorl
lahf
int
call
sub
cwtl
sbb
and
and
ds
push
in
inc
jae
mov
add
negb
pop
aas
notl
adc
push
xadd
push
cs
cmp
xor
xor
aad
cmpsb
jae
cmp
rcl
xor
mov
clc
or
sub
xor
sbb
sub
test
leave
popf
fldenv
out
ja
aad
or
clc
pop
loope
movsb
test
xor
repz
fnstcw
filds
and
jge
sarb
lds
or
inc
mov
iret
xchg
push
cmpb
pop
push
dec
cmpl
mov
or
adc
adcl
push
mov
scas
negl
sbb
mov
cli
push
push
xchg
mov
jmp
nop
out
cmp
jle
movsl
sub
movsl
sahf
xor
mov
dec
xlat
orl
leave
arpl
xor
clc
lahf
out
int3
mov
adc
fcoms
std
mov
adc
call
pop
fisubs
inc
mov
add
pop
leave
or
ret
notl
and
add
add
cs
pop
js
imul
out
repnz
pop
dec
test
sbb
ja
das
movsl
jmp
repz
loop
cmpsl
xchg
stos
fadds
jno
lods
das
push
add
adc
insl
das
sti
adc
addl
in
pop
aas
sub
inc
lods
lret
and
cmp
out
vsqrtpd
mov
push
mov
inc
scas
sbb
pop
add
lahf
sarl
subb
xlat
js
add
push
lahf
out
fdivrl
popa
adcb
mov
xchg
mov
push
cwtl
ja
int3
scas
or
dec
adc
test
push
sub
cmpb
sub
mov
lods
mov
and
daa
stos
mov
pusha
jo
dec
subb
test
push
jge
out
jecxz
shl
xor
xor
xorl
mov
pop
arpl
pop
push
lds
mov
push
push
and
arpl
inc
test
sub
out
cmp
insl
aam
je
enter
cmc
fwait
scas
and
out
flds
out
decb
pop
dec
std
je
mov
xchg
inc
int3
xchg
mov
and
mov
sbbb
test
aas
dec
addr16
push
aas
xor
or
insl
popa
fldt
insl
pushl
pop
into
iret
mov
sar
adc
mov
mov
rcrl
jno
das
inc
pop
out
lock
xchg
sub
cmp
insb
adc
out
aaa
sbb
mov
dec
sbb
in
mov
mov
xchg
adc
stos
adc
fs
jae
icebp
xchg
dec
xchg
push
push
xchg
nop
xor
lods
mov
add
or
into
addb
dec
and
cmp
dec
xchg
fistl
mov
or
shlb
cmp
sbb
arpl
addr16
xchg
add
dec
mov
lret
std
push
push
ljmp
movsb
sub
or
xor
sbb
inc
mov
sbbl
aas
sbb
push
lcall
inc
repnz
rclb
stos
adc
and
dec
lea
movsb
mov
lcall
dec
xlat
xchg
xchg
das
mov
adc
add
pop
loop
jne
icebp
fcompl
js
aaa
aaa
xchg
es
xchg
shl
dec
test
call
mov
sarb
push
into
cmp
punpckhbw
fistps
ret
in
in
mov
in
mov
pop
test
sti
pop
outsb
sub
jp
out
xchg
cmc
aam
aad
outsl
gs
imul
push
insl
xchg
dec
push
aam
and
ror
cmpsb
sets
sub
inc
or
fld1
push
into
pushf
loope
fidivrl
mov
es
loop
mov
cltd
or
sub
hlt
sahf
imul
pop
cli
xor
jle
cmp
arpl
lds
xchg
inc
jge
and
jb
pusha
jp
xor
mov
mov
enter
scas
mov
xor
divl
add
sub
shrl
xor
add
sub
jge
dec
inc
ja
mov
mov
push
adc
cmp
pop
adc
or
fidivs
js
fisttpll
divb
fildl
repnz
dec
sbb
dec
inc
jmp
lods
or
loop
movsl
and
loopne
aaa
sar
das
lock
test
inc
scas
icebp
sarb
sbb
cmp
inc
in
cltd
push
fcomp
addr16
cmp
imul
sbb
into
and
testb
mov
outsb
xor
sub
push
sahf
jl
mov
pop
jnp
cmp
cli
xchg
add
push
adc
dec
mov
xor
imul
in
addl
add
xor
jbe
imull
inc
outsb
adc
mov
xchg
mov
pop
je
pop
push
movsb
mov
fs
lret
call
cmp
pop
mov
les
lock
cmpsb
pop
xor
es
aam
mov
jo
sbb
adc
rol
out
fld
xchg
outsl
pushf
sti
mov
sbb
mov
ud0
mov
jl
inc
lods
icebp
ret
jns
fcmove
inc
xorl
popa
test
cmp
popf
push
adc
and
jmp
push
lcall
je
test
mov
mov
rcll
inc
aad
sbb
push
mov
jno
aaa
lret
xor
dec
out
sub
flds
shrb
mov
scas
dec
xor
sbb
dec
push
jno
push
loopne
xlat
fdiv
cltd
cmp
xor
mov
and
out
add
icebp
mul
cmpsb
enter
out
aaa
cmpsl
and
adc
jp
pop
cmp
jp
xlat
xchg
inc
push
dec
mov
dec
movsl
imul
cmp
mov
xchg
sbb
roll
pop
jno
inc
xchg
inc
aam
stc
mov
push
cmpw
rcrl
jmp
popa
or
jo
adc
shll
jmp
rcrl
addr16
or
subb
mov
popf
mov
pop
dec
push
or
sbb
xor
movnti
and
inc
jno
movsl
icebp
das
je
insl
mov
inc
push
jge
scas
sbb
popa
and
fsubr
lret
sub
dec
and
cmpl
dec
xor
test
sti
add
dec
adc
fadd
repz
pop
sbbb
lret
push
dec
pop
xchg
cltd
fincstp
test
out
sbb
mov
bound
pop
in
arpl
scas
dec
hlt
repnz
hlt
xchg
stos
out
aad
pop
jne
mov
mov
mov
push
mov
cmp
lea
fs
dec
lahf
jbe
bnd
loop
movb
in
aad
popf
mov
xchg
cmp
in
add
neg
dec
lock
aad
pushf
xchg
mov
ficompl
lods
in
lds
mov
out
and
mov
sti
mov
sarl
and
je
mov
pop
shrl
out
lea
add
mov
push
daa
jmp
jle
add
faddl
lds
in
aad
js
lret
xor
in
addr16
or
or
and
sbb
loope
and
pop
cmp
nop
pushf
je
xchg
add
frstor
and
or
add
or
mov
sbb
jnp
mov
lret
pop
jb
shlb
mov
xchg
scas
mov
mov
adc
mov
js
jo
cwtl
shl
push
inc
and
inc
movsb
xchg
lea
and
test
repz
xlat
push
cltd
cmp
inc
hlt
xlat
subl
fsubrl
ljmp
xor
pop
shll
dec
sub
jge
or
pop
adc
icebp
sbb
add
aaa
cmp
xchg
cmp
push
jl
outsb
clc
loope
and
stc
icebp
rolb
mov
fnstenv
ret
outsb
mov
test
xor
js
pop
loope
cld
iret
dec
dec
pop
aam
sbb
inc
push
lahf
test
add
cmc
or
mov
pop
dec
sbb
add
mov
mov
dec
fldl
mov
loopne
dec
pop
mov
inc
fwait
jmp
cld
std
fidivrs
verr
mov
pop
aaa
xor
cmp
adc
popa
jnp
sub
xor
fldl
lods
lret
iret
fidivs
fists
jle
pop
jl
adc
shrb
mov
dec
mov
or
icebp
and
mov
fsts
pusha
mov
sbb
dec
stos
pop
fdivrl
add
scas
test
sarb
xor
testb
ret
or
dec
andb
mov
or
jmp
inc
push
ret
mov
and
dec
adc
xor
and
loopne
xchg
ds
push
dec
pop
out
test
inc
int
xor
cli
jmp
sbb
adc
cld
aaa
add
mov
mov
xor
in
jmp
xchg
outsl
les
inc
dec
fldcw
das
sub
hlt
in
neg
sti
xor
add
fld
pop
and
in
je
mov
outsb
xor
stc
xchg
mov
adc
in
sbb
ljmp
sub
or
cld
fidivrl
sub
es
in
cmp
fisubl
push
lock
dec
je
fnstsw
out
mov
pop
lret
loope
mov
cwtl
cld
gs
jge
dec
jecxz
xchg
jae
je
lret
fisttps
mov
inc
jnp
dec
push
pop
daa
roll
adc
aam
je
stc
jle
mov
push
imul
nop
cmc
jne
and
nop
jnp
push
add
sub
sbb
mov
das
and
mov
mov
out
mov
call
inc
dec
jns
stos
bound
or
sub
mov
sub
loop
aas
iret
lahf
js
mov
aam
push
inc
sbb
ret
in
lret
or
push
dec
cwtl
movsb
lret
lock
subb
roll
xchg
popa
pop
xchg
orl
insl
xchg
jge
or
adc
leave
mov
xchg
xor
cmp
push
dec
fnsave
test
mov
lret
push
xchg
sbb
cld
stos
sbb
add
insl
cmp
inc
loop
ds
daa
push
inc
fs
loop
cltd
pop
dec
and
imul
aad
in
bound
mov
jnp
add
mov
add
rclb
mov
mov
ljmp
push
cmc
sub
aad
call
into
loope
pop
sti
or
sub
loope
jle
outsb
js
dec
and
pop
dec
sub
dec
jae
in
or
fwait
pop
out
mov
push
push
inc
mov
into
add
mov
xchg
add
push
jg
sbb
pop
mov
sub
outsb
ja
out
addr16
pop
sti
mov
cs
pop
xor
push
fwait
pop
pusha
scas
jne
dec
scas
inc
test
pop
ja
inc
mov
aam
push
cmp
bound
loope
jbe
jecxz
add
push
jo
test
out
aas
outsl
insl
mov
in
sub
add
outsb
add
inc
and
mov
fidivrs
call
out
push
push
add
mov
ds
jle
push
mov
fwait
xchg
nop
frstor
sbb
dec
pop
inc
testb
mov
jbe
sbb
add
cmp
cmp
pushf
out
mov
arpl
push
jle
rcll
test
lock
mov
ret
ljmp
sti
inc
aam
scas
jo
popf
cmp
in
loope
loopne
loopne
sti
cmp
aas
jmp
jl
in
leave
pushf
inc
icebp
sub
xchg
lock
stc
mov
adc
adc
and
jl
sbb
fbld
shr
adc
and
test
xlat
mov
mov
inc
sti
inc
dec
adc
pop
add
shr
dec
xor
cmc
ret
add
mov
jne
aad
add
cmp
mov
fmul
nop
jb
das
inc
rorl
fs
lds
int
mov
fmul
das
lods
dec
or
adc
aaa
clc
std
cwtl
xchg
push
imul
sbb
pop
push
aaa
push
sub
repnz
jno
mov
cmp
lods
add
mov
in
or
pop
or
pop
mulb
push
aam
adc
xchg
cmp
push
or
sbb
es
movsl
stos
loope
xchg
xor
adc
dec
cmp
hlt
push
ja
lcall
push
enter
xchg
jg
ljmp
cmp
sti
sub
xor
inc
aas
add
outsb
insb
mov
adc
test
xchg
sbb
inc
or
dec
inc
push
push
imul
pop
sub
push
xchg
scas
icebp
push
sub
and
fucomi
lret
dec
andl
enter
sti
in
dec
sbb
jmp
in
mov
shrl
test
jne
jp
cmp
mov
loopne
in
daa
xchg
scas
pop
and
jl
fcmovnbe
push
movsb
les
pop
dec
mov
sti
xchg
rorb
inc
or
jb
sub
sarb
adc
inc
jge
mov
xor
loopne
ret
repz
and
pusha
jno
sub
xor
out
mov
sar
stc
sbbb
jle
arpl
fcomps
jg
adc
fs
repz
inc
shll
pushf
xor
adc
add
or
stc
fmul
lcall
sub
and
in
add
loopne
ret
pop
shl
mov
enter
sbb
xor
adc
out
mov
int
or
loopne
cmp
inc
push
or
or
call
mov
ljmp
lods
rcll
dec
mov
mov
jl
pop
mov
aad
xlat
loope
mov
sub
push
and
loopne
jb
jne
test
xor
incl
mov
jne
cmp
xchg
or
out
push
lods
xchg
lcall
push
xchg
mov
add
cmp
mov
cltd
jb
adc
mov
dec
test
xor
mov
movsl
push
daa
leave
jp
mov
inc
out
cmc
cmpsb
mov
cmp
sbb
jge
popa
push
iret
shll
pushf
dec
dec
std
inc
stos
lret
scas
xchg
dec
mov
aas
fidivs
repz
daa
mov
or
xor
cmovno
xor
push
cmpsl
enter
fisubl
movsl
mov
fsubrl
adc
cmp
nop
loop
cmp
mov
inc
fidivl
aas
test
aam
mov
out
adc
fmuls
aaa
cmp
xchg
cmp
adc
mov
cld
inc
mov
mov
je
arpl
jg
pushf
and
xor
xchg
scas
push
and
aad
test
inc
sub
dec
loop
mov
push
and
xor
and
push
lds
add
sbb
test
fbstp
sub
lcall
je
fldcw
jbe
xchg
into
rcr
sar
pop
xorb
cld
inc
push
mov
or
and
pop
pop
pushf
and
dec
xlat
cs
ret
sub
add
and
iret
test
ja
fisubrl
push
shll
movsb
je
out
iret
adc
pop
cli
call
les
test
out
out
push
lret
dec
mov
mov
aaa
adc
in
sbb
xchg
into
lock
lcall
push
movsb
cltd
ret
test
dec
sti
mov
sbb
add
jns
push
sub
inc
dec
jns
loope
sbb
adcl
xor
cs
movsb
cmpsb
xor
or
aad
or
jns
dec
int
gs
addl
das
hlt
or
xor
data16
jmp
js
jo
push
insl
inc
rcll
loope
loope
lods
cmp
stos
push
or
arpl
and
test
inc
repnz
je
cmpsl
jp
lock
cmp
aad
sbb
lods
jp
inc
jo
or
or
mov
data16
sbb
jg
pop
xor
xor
lret
scas
lahf
mov
xor
add
loop
pushf
mov
dec
xchg
js
loop
popa
jne
add
push
lret
or
jp
shlb
mov
scas
cmc
mov
aas
jp
adc
sarl
in
js
les
out
dec
jbe
lahf
lods
jmp
sub
outsl
sbb
add
inc
cmp
mov
lahf
push
imul
or
cmpsb
fmulp
getsec
test
mov
das
stos
add
jae
cmp
xchg
aad
flds
addr16
jne
cmp
inc
xchg
lcall
cmp
pusha
lahf
pop
mov
aaa
lahf
push
mov
pushf
sbb
dec
mov
push
mov
jmp
daa
ficoms
ror
aad
pop
mov
jbe
cwtl
cld
sub
jns
arpl
in
enter
xlat
lret
int
pop
add
fldenv
mov
jecxz
xchg
xor
xor
or
cmp
lods
jns
ljmp
mov
add
cmp
jmp
frstor
fcos
or
xchg
cmp
out
mov
mov
popa
pop
ds
sub
jno
push
sub
push
js
cmpb
mov
or
jl
jno
sub
repz
ljmp
and
xchg
mov
nop
test
inc
xor
das
inc
mov
inc
dec
sbb
jg
sbb
pop
mov
enter
sbb
jnp
xor
adc
insb
stc
mov
pop
cs
loopne
scas
inc
aam
jo
mov
and
mov
xchg
fcomps
gs
xchg
pop
push
clc
dec
cmp
es
in
loop
addr16
add
inc
shrb
adc
leave
js
mov
repz
cld
push
ret
jmp
jg
movsb
fst
add
aad
rcl
sbb
dec
popa
xchg
mov
xchg
push
dec
sub
hlt
aas
mov
xchg
add
test
nop
inc
imul
cltd
add
std
jp
inc
leave
les
movsb
mov
xor
dec
repnz
sub
and
pushf
or
aas
out
cmp
cld
outsb
fwait
in
pop
sub
inc
das
mov
and
adc
mov
pop
fucomi
std
arpl
jg
pop
int
repz
and
inc
cli
mov
mov
cld
mov
or
test
loopne
ljmp
adc
pop
cmp
xor
aas
lods
pushf
pop
push
and
loopne
lea
xchg
jl
sbb
add
mov
fldenv
mov
or
sbb
or
add
push
icebp
jp
stos
fsub
push
nop
pop
mov
jne
lcall
cmp
shll
inc
pushf
or
arpl
stos
arpl
arpl
imul
lds
xor
push
mov
in
xchg
ret
inc
or
push
repz
xor
insb
movsb
sub
rclb
inc
shll
sbb
mov
sarl
pop
add
in
or
popf
pop
lea
mov
jle
cmc
pop
xchg
in
fnstenv
push
push
mov
ja
lret
or
sub
imul
cmpsb
push
lock
add
dec
mov
stos
iret
fldt
mov
dec
sbb
popa
arpl
and
ds
lret
add
lcall
icebp
pop
insl
cmp
sbb
dec
iret
daa
sarb
or
dec
and
jle
roll
out
cmp
jno
adc
sbb
and
dec
out
jno
sahf
pop
dec
in
push
outsl
rolb
ljmp
xchg
or
arpl
xor
pop
movl
cmpsl
mov
ljmp
sahf
test
xchg
sbb
les
push
cli
inc
or
cmp
loopne
inc
jo
pop
jp
jae
push
add
es
out
bound
xchg
hlt
sbb
cmp
daa
mov
push
sbb
mov
lret
imull
insl
mov
ret
or
nop
cmp
push
or
loope
pop
xchg
cs
icebp
test
bound
ret
push
es
cli
mov
jg
rclb
sbb
jb
mov
dec
inc
lahf
xchg
jnp
adc
loop
lcall
in
lods
popf
arpl
xorb
xchg
rorl
dec
cmpsl
jmp
sub
stos
xchg
bnd
daa
test
dec
push
dec
pop
orl
xchg
shl
ja
aaa
call
enter
nop
pop
push
les
or
into
out
and
dec
cltd
sbb
inc
mov
movsl
repz
arpl
adc
and
mov
inc
or
jae
push
and
scas
sbb
dec
js
loop
daa
push
pop
push
inc
adc
popl
adc
lods
cltd
aam
xchg
sub
mov
mov
addl
test
xchg
push
jge
push
push
jo
and
mov
or
cld
int
and
mov
je
mov
and
xor
ret
mov
jno
rcl
aas
add
test
fldt
xor
mov
add
imul
mov
enter
add
les
jbe
mov
lcall
lahf
in
es
mov
das
inc
mov
test
push
iret
pushf
lock
lods
inc
lcall
pop
cld
mov
and
push
xchg
je
inc
test
lods
enter
mov
enter
cmc
in
fiaddl
test
or
jmp
jl
jg
test
push
fsub
scas
cmp
leave
xchg
in
movsb
enter
pushf
and
pop
jae
pop
test
out
xchg
sbb
pop
inc
dec
sbb
shl
dec
xor
sbb
lahf
cwtl
pop
jmp
subl
repz
leave
mov
int
dec
add
in
sahf
pop
pop
mov
jecxz
leave
xchg
mov
mov
push
inc
and
insb
pop
jmp
inc
pop
scas
int3
mov
cmp
or
fists
in
dec
xlat
cmp
or
inc
cs
daa
lahf
push
sbb
sbb
vpshad
dec
mov
sbb
hlt
cli
int3
mov
call
add
test
mov
pop
adc
sbb
push
cmp
inc
or
pop
loope
mov
faddp
test
cmpsl
movsb
je
and
lods
stos
arpl
jp
paddsb
call
mov
mov
movsl
cmp
xchg
jp
add
and
or
mov
aaa
jo
fldt
xor
out
xchg
adc
cs
lea
xchg
fdivs
frstor
insl
sub
fs
dec
loope
in
xchg
mov
or
xchg
lret
add
sub
push
pop
mov
jp
push
ds
and
jl
repz
insb
pop
mov
pop
mov
push
std
cmpsb
lock
jns
dec
push
pop
pop
xchg
jne
xor
xor
jne
mov
das
jmp
push
xchg
sti
mov
movsl
sbb
pop
mov
jecxz
jmp
jae
xchg
dec
xor
aas
mov
arpl
or
push
jmp
out
xorl
in
mov
nop
ds
ret
call
ja
jmp
mov
scas
sub
pop
ret
dec
adc
pop
or
add
lret
xlat
jl
in
push
add
pop
mov
daa
adc
cmpsb
sti
adc
filds
xchg
or
inc
xor
add
imul
inc
lds
gs
shll
fldl
adc
lahf
clc
loop
out
ret
xchg
lret
pusha
lods
sub
dec
pop
dec
push
or
test
andl
out
and
js
pop
pop
aad
js
les
cmp
mov
add
enterw
push
push
jno
cmc
pop
xor
mov
jp
popf
mov
jmp
mov
add
sbb
nopl
pop
enter
xchg
scas
cmp
and
cs
shrb
sbbl
sahf
jno
fcomps
jno
lock
clc
jl
stos
mov
subb
sub
mov
mov
push
mov
sbb
pop
push
clc
xchg
cmp
das
dec
push
adcb
dec
orb
cltd
push
or
jecxz
cmp
sub
imul
fldenv
sbb
jp
push
dec
sbb
out
pop
or
push
notl
sub
adc
sbb
or
les
pop
mov
pop
cmp
pop
xchg
inc
loop
cmp
mov
hlt
or
dec
popf
add
dec
negl
je
ds
fnstcw
push
sub
mov
mov
arpl
inc
adc
dec
je
rorb
mov
int3
xor
test
mov
aas
xchg
adc
icebp
xor
int3
rorl
rorb
loope
fs
sar
int
dec
xchg
push
je
pop
fmuls
pusha
scas
xchg
in
fisttps
cmp
divb
lea
pop
sti
dec
adc
neg
movsb
add
das
mov
lret
outsl
int
addr16
aam
mov
dec
jns
fsubrs
je
cmpl
push
repz
lods
sahf
scas
stos
loope
mov
call
movsb
pop
mov
movl
xchg
leave
push
leave
outsl
lcall
sbb
push
mov
popf
fadds
loope
mov
ret
pop
and
push
inc
insl
hlt
in
push
ljmp
shr
jp
ja
dec
popa
fmul
gs
inc
pop
loop
mov
and
jns
leave
sbb
xor
add
std
roll
ja
std
lds
and
push
cld
arpl
inc
test
loopne
or
mov
popa
and
cld
dec
fildl
xor
push
loope
mov
adc
xor
mov
adc
scas
cmp
lahf
mov
push
mov
sub
fcoml
xchg
lret
jecxz
sbb
leave
mov
add
jne
or
gs
notb
out
or
ds
push
ljmp
push
adc
cld
mov
bound
or
adc
sbb
clc
and
negb
mov
xchg
cmp
mov
ret
arpl
aaa
scas
loop
or
lret
ret
cwtl
dec
jne
fnstenv
inc
add
popf
sbb
stos
out
jp
mov
mov
outsb
push
hlt
jno
dec
out
jl
aam
add
and
mov
stos
insb
stos
out
loope
outsl
adc
dec
lret
pop
std
lret
lea
push
lret
scas
mov
pop
dec
jbe
arpl
sub
mov
dec
xchg
add
adc
dec
push
ret
movsb
and
xor
mov
out
punpckhwd
add
or
inc
xchg
cld
lcall
jp
cmc
xchg
movsb
push
shll
gs
imul
mov
dec
hlt
or
sub
idiv
mov
outsl
push
and
outsl
add
cmp
jne
lock
push
push
std
shll
dec
xor
sti
xchg
cwtl
and
test
lret
jl
movsl
sbb
icebp
insb
bound
push
xchg
xchg
jge
gs
jp
mov
inc
fcoms
lds
adc
inc
xor
push
dec
lds
lret
mov
test
in
fcmovb
or
mov
xor
test
or
sub
leave
adc
out
pop
mov
gs
or
cmp
popf
or
sbb
jne
add
cwtl
push
push
jg
sbb
jns
add
stos
cmp
stc
daa
jp
push
inc
mov
imul
dec
add
psubsb
or
cmp
xor
jmp
roll
loop
aaa
xor
js
adc
iret
pop
add
sub
push
xchg
rorb
sub
add
or
xchg
fmul
rorl
inc
add
jle
cmp
xchg
xchg
shr
inc
cli
pop
je
int
or
mov
icebp
jge
daa
or
mov
mov
xchg
pop
mov
sbb
fbld
aam
orl
pushf
loop
int3
sbb
mov
mov
insl
add
fs
jbe
xor
cltd
pop
inc
or
xchg
mov
jle
out
inc
mov
pop
cmp
or
jo
shll
pop
data16
std
imul
mov
into
bound
push
pop
pop
aad
jo
aas
in
push
std
mov
dec
xchg
incl
insb
pop
cmp
mov
mov
rcl
out
fistps
and
enter
repnz
sbb
daa
mov
jmp
into
or
jmp
int3
ficomps
testl
idivb
subb
push
cwtl
test
cmp
addb
add
xor
jge
je
sub
mov
pop
pop
cmp
push
fsubs
fildll
icebp
xchg
cmp
sbb
ss
rep
inc
xchg
dec
lret
mov
pop
repnz
hlt
ret
sti
fmull
in
dec
inc
pop
push
pop
hlt
and
push
je
icebp
inc
lahf
fldenv
and
into
pop
add
lock
jo
jp
jne
jno
arpl
mov
xchg
push
out
jl
int
mov
test
mov
adc
pop
aaa
and
add
std
mov
mov
es
xchg
pop
push
cmp
push
popa
leave
cmp
enter
movsl
loopne
and
call
xor
out
nop
inc
ja
movsl
rcll
lock
push
movsb
mov
adc
in
sub
daa
jmp
mov
negl
mov
mov
xchg
mov
mov
aad
sahf
or
ja
pop
cmp
aaa
and
xor
pop
mov
jg
arpl
ja
stc
out
dec
mov
daa
popa
iret
mov
sbb
out
xor
pop
rorb
in
cwtl
js
mov
push
shlb
mov
addr16
std
push
das
in
test
inc
enter
mov
lret
add
pop
inc
pushf
push
inc
cmova
push
push
je
lock
enter
push
add
pop
popf
insl
incl
xchg
dec
sbb
movsb
insb
lods
repnz
add
enter
stos
enter
std
dec
xchg
mov
ja
pop
int
pop
cltd
ja
mov
sbb
xor
and
lcall
sbb
outsl
mov
or
dec
cmp
mov
leave
inc
fcoml
lds
xor
jecxz
dec
mov
cmp
cmpsl
enter
push
lret
rcrl
jmp
mov
jne
push
lods
pop
cmp
mov
push
pop
lods
xchg
loope
and
out
sub
sbb
rorl
test
adc
jl
jecxz
icebp
jb
jbe
in
int
popf
adc
jle
pop
add
shr
jno
roll
pop
mov
cmp
add
insb
rorl
stos
xchg
je
mov
cmpb
jmp
shl
push
fwait
cmp
cmpsb
mov
into
stos
orl
or
mov
inc
mov
cmpsl
dec
mov
xchg
or
idiv
jmp
mov
addr16
add
sub
inc
mov
mov
inc
push
js
ds
mov
push
int3
xchg
aad
push
or
xchg
or
mov
into
xchg
fwait
insl
mov
ret
add
sub
lret
push
les
mov
xor
shrb
cmp
cmp
into
xor
daa
jge
aam
cli
cmc
inc
mov
std
push
push
cmp
xchg
jbe
pop
xor
mov
mov
lahf
repz
mov
cmp
xor
mov
in
mov
xchg
add
jge
sarl
add
lcall
inc
inc
stos
stc
push
sbb
dec
nop
incl
mov
sti
lret
cmpsb
in
xlat
cmp
rcrl
mov
sbb
dec
rcrl
mov
cmc
push
fstps
dec
jns
push
popa
subb
inc
cli
cmpsl
scas
iret
add
push
push
push
xor
adc
xlat
arpl
lock
mov
and
dec
outsl
testb
rolb
or
sbb
ljmp
fsubl
insl
xchg
dec
shrl
aam
cmpsb
stos
loope
sub
lds
cmpsb
popa
jo
pop
sub
movsl
sbb
xor
fsubl
aad
loopne
test
cwtl
ret
addl
adc
mov
xchg
mov
ret
and
mov
lds
lock
cmp
das
int3
xlat
or
mov
dec
mov
xchg
mov
jge
scas
or
xchg
xchg
inc
loope
pop
xchg
xchg
sahf
ret
add
sti
xor
xchg
dec
and
loop
das
in
sub
int
int3
sub
fucom
fs
dec
ret
cmp
lret
inc
pushf
pop
sbb
or
lret
imul
pop
cmp
xchg
es
or
dec
jnp
mov
xor
sub
xor
add
repz
adc
roll
addr16
push
add
test
jg
cmp
sbbb
subb
lds
add
sti
and
add
in
pop
pop
xchg
dec
bound
loop
and
xor
jo
mov
mov
outsl
popf
in
repz
loop
push
cmp
fbld
loopne
fstpt
mov
push
mov
in
push
cmpsl
or
mov
ret
lea
aas
lds
push
cmp
rcl
mov
fcompl
in
aad
jo
pop
jb
ret
imul
adc
mov
mov
inc
mov
dec
push
pop
pop
push
js
cmpsl
pushf
inc
fisubrs
mov
sbb
fcoms
jg
push
and
jne
sub
add
xorl
mov
out
inc
xchg
mov
sub
call
imul
push
and
pop
and
dec
push
pop
outsb
sub
or
mov
mov
jp
icebp
cmpsb
inc
hlt
jp
inc
mov
sub
mov
popa
push
outsb
in
jg
imul
repnz
stos
add
mov
pop
mov
loope
xchg
aas
jns
xchg
aad
mov
cmc
leave
mov
lahf
nop
or
jle
int3
repnz
in
push
pusha
clc
int
inc
inc
jns
les
or
dec
mov
inc
fwait
lea
xor
fwait
cmp
cwtl
scas
xchg
push
mov
xor
mov
adc
push
jns
jae
mov
and
jge
xchg
movsb
xchg
shrb
sar
mov
lods
xor
push
in
dec
mov
negb
pushf
xlat
imul
sub
in
cli
outsl
pop
icebp
jp
ret
pop
ja
jnp
inc
jno
inc
sbb
icebp
negl
test
scas
xor
rcrb
stos
mov
pop
mov
out
cmp
jmp
loopne
fsts
add
jbe
jmp
lret
mov
mov
xor
daa
lods
scas
sbbl
xchg
sub
movsb
pop
out
adc
out
neg
jnp
mov
pop
cmc
aam
jbe
pushf
sbb
std
push
shll
icebp
ret
or
insb
notb
int3
hlt
insb
dec
es
pop
cmp
pop
int
jle
jae
mov
inc
dec
imul
xor
mov
jmp
aas
adc
cmpsb
bound
push
inc
mov
in
add
jle
movb
xchg
mov
dec
add
inc
sbb
jae
mov
xchg
and
je
push
or
repnz
jmp
jb
xchg
dec
or
ret
scas
xor
and
cmp
or
pop
xor
sbb
pop
mov
outsl
mov
lods
pop
out
stos
in
ret
ds
or
push
cmp
jmp
aad
xchg
push
inc
push
inc
lock
mov
mov
lea
scas
repz
jp
sbb
sahf
add
orb
or
xor
call
lods
mov
push
int3
jp
cmpl
pusha
insb
mov
dec
mov
insl
inc
xchg
mov
xchg
and
add
and
adc
add
hlt
imul
fimuls
test
sub
ljmp
mov
std
leave
pop
and
cltd
mov
aas
mov
int3
push
je
scas
das
xchg
adc
dec
mov
xchg
bound
cmpsb
xchg
ficoms
popa
xor
outsb
cmp
aam
jge
adc
ret
add
or
test
into
mov
dec
dec
outsl
sub
mov
out
pop
sub
scas
aaa
mov
fimuls
std
inc
lods
lock
jle
loopne
adc
push
push
jg
add
fidivl
pop
add
aam
xchg
gs
xchg
scas
clc
sub
popf
sbb
lods
jmp
pop
mov
ja
and
dec
les
dec
dec
jbe
ficompl
or
push
outsb
test
xchg
mov
aad
rcrb
cwtl
push
out
and
ja
fcoml
pop
fwait
push
insb
ficoms
mov
xchg
mov
scas
cmc
aaa
sub
int
or
cmpsb
and
inc
aaa
loopne
and
xor
sub
fiaddl
or
jmp
or
out
sbb
cld
mov
xor
call
cmp
mov
xchg
call
sti
sbb
or
test
fwait
push
jle
cmp
mov
adc
adc
call
adc
mov
hlt
sbb
adc
imul
cld
cmpsl
add
cmp
jle
inc
pop
nop
lods
aad
dec
xor
fistps
jl
fs
ljmp
movsb
popf
jo
setne
cmpsb
xchg
stos
in
loope
add
adcb
mov
push
imul
ret
mov
icebp
jnp
int3
push
cmp
dec
ja
push
sbb
repz
repz
loop
mov
addr16
pushf
enter
mov
lods
jp
jbe
ja
add
imul
adc
jmp
bound
mov
dec
fmul
or
mov
jl
jl
lcall
push
testl
iret
lcall
js
mov
push
aaa
cmp
or
jecxz
jno
add
sbb
sbb
add
arpl
adc
dec
lret
mov
aam
pop
xor
repnz
sbb
jmp
sahf
jae
cmp
inc
shrb
add
and
and
sub
push
xor
cs
lods
fwait
mov
adc
lcall
insl
sbb
mov
mov
add
lea
mov
xlat
in
push
cmpsl
push
mov
mov
xchg
loop
jae
das
bound
push
ret
daa
jb
fmull
andb
cs
fldenv
push
out
xor
mov
inc
jbe
stos
outsb
xchg
inc
inc
jg
repnz
dec
andl
in
cmp
lret
sbb
sbb
pop
in
mov
sbb
lea
and
je
mov
adcb
push
inc
xor
das
ror
mov
dec
mov
mov
in
pop
outsl
sbb
sbb
dec
test
ljmp
pop
rorb
push
or
add
dec
daa
or
nop
dec
inc
test
xchg
dec
jg
xor
cmpsb
jge
gs
inc
aas
cmp
ror
and
xchg
inc
pop
stc
shr
cmp
cwtl
mov
xor
xor
bound
mov
cld
push
test
sub
enter
pop
jge
aad
mov
mov
in
lcall
imul
adc
mov
cmpsb
leave
loopne
jne
out
dec
sbb
xlat
int
push
ret
idivl
ss
jmp
jg
jns
pop
lds
push
pop
rorb
addl
mov
or
scas
shr
cld
sbb
popf
shll
xchg
mov
cld
stos
push
stc
push
adc
or
add
jp
aad
push
xlat
orb
jnp
fists
pop
pop
jmp
push
mov
pop
add
sbb
inc
iret
aas
imul
mov
inc
cmp
jnp
or
inc
xor
ljmp
dec
jle
notl
je
outsl
or
add
pusha
stos
pop
mov
add
outsb
jbe
jmp
and
sub
jmp
mov
sbb
sub
jecxz
mov
mov
pop
and
daa
in
xor
sti
push
sbb
outsl
xor
test
bound
push
pop
cwtl
into
add
xchg
sbb
add
or
sub
loope
jae
cmpsl
mov
mov
das
xchg
popf
aam
lcall
cli
movsl
push
and
push
xor
push
jg
movsl
inc
mov
into
lahf
push
icebp
sbb
enter
ja
sub
mov
js
ja
mov
pop
bound
or
outsl
ret
bound
mov
test
push
stos
es
cmpsb
xchg
xchg
lods
hlt
pop
je
xor
int
divb
dec
mov
mov
outsl
add
inc
cmc
pop
test
arpl
addr16
negl
sbb
ficoml
dec
lea
add
inc
cmp
inc
sbb
adc
inc
sub
jg
movsl
mov
add
je
pop
sti
call
adc
cmp
insl
jo
dec
mov
or
mov
and
mov
jnp
lahf
add
cmp
ror
inc
popf
loope
out
or
adc
cmp
mov
pop
shl
sahf
into
loop
push
push
icebp
mov
sbb
xchg
pop
or
cmp
jbe
cmpb
add
je
xor
jp
fistl
jne
adc
mov
movsb
mov
hlt
rcrw
popf
mov
cmp
pop
scas
xchg
shlb
jae
pop
jl
sub
cmp
outsl
jne
jmp
jp
mov
sbb
test
or
xchg
sbb
inc
test
aad
cmpsb
jo
mov
sub
loope
push
inc
add
lea
shll
stos
push
fnstenv
roll
inc
jo
mov
adc
pusha
js
jne
dec
adcl
movsl
in
sbb
sub
xor
and
cmpsl
hlt
insl
dec
adc
ds
add
ret
sub
adcb
in
add
pop
iret
sub
and
adc
adc
aad
call
scas
adc
cs
xchg
or
mov
jae
or
data16
lock
cwtl
movsb
push
mov
test
mov
mov
rep
fcompl
adc
mov
inc
pop
sahf
cmp
and
fisubrs
shr
lods
call
repz
cmpsb
leave
and
test
mov
xlat
cmpsb
push
loope
fimuls
push
mov
lcall
rolb
rol
hlt
xlat
inc
cmp
roll
pop
out
add
gs
leave
aas
stos
lea
inc
and
into
aad
inc
push
das
mov
mov
and
adc
add
out
dec
push
lcall
add
mov
movsb
dec
and
movsb
repnz
xchg
int3
push
cmp
mov
sbb
xchg
lret
ret
xchg
outsl
xor
dec
sub
xor
pop
inc
inc
dec
xchg
aas
lds
cmp
dec
ljmp
call
push
xor
ret
sub
int
dec
inc
divb
jg
mov
mov
push
into
xor
mov
jp
pop
je
loopne
stos
mov
pop
xor
pusha
mov
mov
imul
and
dec
push
or
js
movlps
dec
and
mov
adc
out
adc
mov
leave
inc
jp
je
call
xchg
pop
jle
pop
movsb
mov
cmpsl
imul
sbb
mov
add
mov
sarb
mov
sbb
lret
add
pop
mov
mov
mov
or
xor
in
adc
popl
push
mov
adc
fcompl
mov
dec
pushf
jge
ja
or
lods
rorb
cmp
xchg
pop
cmp
inc
cmp
cld
filds
mov
mov
jecxz
repnz
rcrl
cltd
faddl
inc
fdiv
lods
repnz
sbb
fsts
inc
test
pop
js
orb
into
jp
in
sub
cmp
popa
mov
adc
into
popf
sbb
out
or
shl
xchg
pop
jle
mov
and
ret
pop
mov
mov
pop
sbb
dec
cld
pop
dec
add
outsl
rcrb
or
cs
lock
outsb
mov
cs
lock
cmp
fcompl
cs
arpl
insl
rorl
push
fisttpll
and
pop
push
jbe
lret
icebp
cwtl
imul
cmp
sbbb
cmp
lcall
xchg
add
sbb
mov
and
xlat
cltd
shlb
repz
movsb
rolb
fstps
mov
out
jge
xor
jae
sub
sbb
sub
stc
sub
push
fisubrl
addr16
push
pop
sbb
mov
inc
lahf
or
dec
dec
aaa
pop
hlt
sub
lcall
jmp
shr
mov
test
cmp
cmp
out
and
sub
mov
add
out
xor
pushf
mov
jl
or
jge
mov
jp
aad
adc
aaa
or
cmp
insl
xchg
sbb
xor
or
fwait
lock
shrl
cmp
sbb
or
movsb
out
and
xchg
adc
mov
or
push
fidivrs
insl
inc
push
std
lcall
lods
adc
dec
mov
lahf
and
jns
aam
jo
leave
or
call
adc
arpl
mov
shll
sub
arpl
lret
cmp
cmpsl
rorl
sub
jb
push
scas
xchg
imul
out
jecxz
pop
xchg
jns
add
inc
and
les
sub
inc
jo
xor
sub
push
dec
out
fistl
nop
dec
jecxz
pop
sbb
sbb
pushf
pop
or
mov
cmc
std
enter
repz
xor
in
ds
int
cmp
aad
pusha
repz
add
lret
outsb
insl
out
orb
and
out
dec
sbb
push
repnz
xor
fs
sub
jmp
in
out
jl
outsl
les
push
in
cs
pop
xchg
dec
jne
or
out
and
jge
pop
nop
nop
and
mov
mov
in
cmpsb
ja
in
aas
pop
xor
push
outsb
pop
pop
jl
xchg
lods
pop
mov
sbb
dec
sahf
cmc
jmp
fwait
iret
les
shl
popa
iret
xor
xchg
cli
sti
sbb
in
orl
sub
jae
out
aas
add
push
jmp
roll
call
mov
sub
testb
fsubrs
das
cmc
dec
outsl
xorl
pop
cmpb
lock
mov
jb
lods
or
scas
lahf
adc
loope
fsubrs
stos
pop
and
xchg
call
out
sti
leave
adc
or
aaa
push
decl
icebp
mov
lods
push
mov
loopne
adc
imul
in
lock
out
and
add
je
mov
xor
shll
and
sbb
mov
fucom
mov
aad
xchg
sbb
idivl
fsub
mul
xchg
cs
and
mov
repz
lods
insb
add
imul
pop
rcl
jmp
inc
adc
icebp
inc
pop
inc
dec
lea
dec
rcrb
jmp
push
test
and
js
push
mov
cld
mov
pop
sar
repz
xchg
inc
sub
sahf
pop
loope
xchg
imul
jb
xor
out
cli
insl
ja
add
and
jno
push
dec
aas
rcl
mov
push
rorl
insb
out
cltd
in
push
scas
pop
aas
cmc
inc
xchg
or
dec
mov
aad
fildl
push
mov
loopne
push
lock
insl
jg
ret
add
int3
mov
push
je
pop
call
dec
sbb
pop
cmp
imul
inc
cltd
xor
and
sub
or
lcall
fsubl
popa
dec
repz
cmp
iret
jmp
jl
out
or
push
mov
scas
mov
xchg
cs
mov
push
fistl
jb
mov
add
nop
jg
fsubrs
imul
insb
xor
add
enter
push
pmaxsw
arpl
push
inc
movsb
fisttpll
in
data16
pop
fbld
xor
stc
xchg
sbb
jmp
mov
jg
sbbl
arpl
push
cmp
mulb
pop
inc
out
xor
push
cwtl
lret
mov
xor
es
test
add
js
fwait
push
or
dec
out
jae
orb
push
sub
add
xchg
and
push
mov
inc
cmp
dec
lahf
movsb
icebp
or
jmp
call
mov
xor
and
inc
loope
lahf
lea
pushf
jecxz
and
popa
sub
xchg
xchg
sub
imul
xor
jp
cmp
inc
sub
jp
loope
pop
mov
or
repnz
sti
xor
mov
mov
push
fwait
les
push
rolb
adc
cmp
sub
add
add
and
lahf
pop
fildll
pop
adc
adc
and
cmp
ret
xlat
lea
push
int3
inc
mov
leave
fisubrs
stos
push
sbb
xchg
test
add
lock
cwtl
dec
lock
mov
and
movsl
aas
stos
mov
fs
and
mov
push
int3
jecxz
das
cli
stos
xor
aaa
or
xchg
roll
loopne
aad
ret
sbb
push
jb
xchg
add
jno
pop
rorb
pop
aad
xchg
inc
sub
repnz
dec
add
in
fwait
pop
jb
into
pop
sub
mov
xchg
push
adcb
mov
lret
pop
ret
je
mov
pop
mov
pop
shl
mov
aas
mov
int
xchg
xchg
and
push
mov
sti
or
aaa
movl
add
lods
imul
jle
push
xor
jge
jg
imulb
idiv
fmuls
add
mov
int3
scas
mov
cmp
or
loope
xor
or
mov
inc
inc
outsb
outsl
and
lea
in
jb
test
sbb
or
cmpb
jnp
push
cmp
in
fsub
cltd
mov
inc
mov
sarl
mov
in
insb
lea
ds
je
jae
aaa
movsl
lock
mov
xlat
aam
in
jnp
push
lret
in
scas
dec
dec
mov
gs
insb
pop
add
push
mov
xor
mov
cltd
rcll
lods
or
ficoms
xor
mov
sbb
dec
pusha
cwtl
outsb
clc
loopne
push
jmp
out
add
xor
or
lods
outsb
testb
addb
mov
jnp
decl
imul
ja
adc
enter
cmp
pop
xchg
orb
jo
popf
and
andb
scas
lds
jmp
pop
cmp
daa
jge
stos
add
sub
dec
cld
mov
ficompl
cltd
and
negb
adc
outsl
inc
ss
mov
clc
daa
adc
push
sbb
sub
adc
lods
shll
std
rorl
into
pop
add
push
jnp
leave
jne
pop
loopne
jns
cmp
adc
fdiv
cli
repz
sub
rorl
sarl
add
rcl
sbb
mov
test
inc
adc
cmp
arpl
lock
leave
inc
cld
lret
std
mov
xor
mov
mov
jp
jle
jge
jo
fmuls
fisubrs
das
push
clc
or
imul
inc
pop
sbb
push
cmp
mov
and
or
sbb
mov
mov
or
hlt
test
loop
mov
jmp
inc
dec
cld
out
aas
and
mov
add
or
int
les
inc
pop
add
call
push
shrl
cmp
add
int
push
mov
mul
addr16
sbb
push
movsb
inc
addr16
cmp
ret
inc
frstor
fiadds
hlt
test
pop
cwtl
xor
push
pop
add
jb
jne
mov
sbb
arpl
aad
stos
into
jmp
jl
inc
or
fidivl
orl
mov
and
cltd
jne
negb
ds
insl
daa
sub
mov
jne
stos
je
test
mov
or
jmp
sbb
jb
cmp
incl
cmpsl
mov
rorl
bound
adc
je
leave
cmp
dec
mov
push
xchg
push
addr16
pop
add
pop
int
cmpsl
aaa
adcl
sub
mov
test
sbb
mov
lret
cmp
xor
push
daa
adc
jo
jg
jge
mov
mov
pusha
and
mov
pop
loop
xlat
mov
jo
outsb
into
test
inc
inc
sub
data16
inc
icebp
and
push
add
rcrl
adc
outsl
cmp
adc
sbb
inc
or
mov
inc
movsb
inc
loope
aaa
gs
leave
add
adcb
insl
rcrb
shrl
xor
jmp
in
push
cwtl
add
iret
stos
pop
fisttpl
lret
fdiv
pop
mov
out
out
clc
out
xor
fmuls
stos
int
push
push
adc
xor
xchg
dec
sbb
aam
test
lret
push
std
cmp
test
fcoms
mov
mov
fsub
ror
sbb
adc
dec
shl
dec
mov
mov
adc
cmpsb
inc
jae
jbe
popf
jb
clc
cmc
push
mov
mov
mov
ljmp
inc
loopne
iret
mov
cmpsb
hlt
xor
std
sbb
inc
adc
ljmp
movsl
addb
outsb
mov
subl
or
lock
in
sbb
scas
inc
sbb
jp
inc
push
sbb
and
mov
or
aaa
les
push
cmc
xchg
std
dec
ret
pop
scas
scas
fcompl
pop
jmp
xchg
xor
mov
inc
ret
sbb
ds
ja
jmp
mov
adc
sbb
mov
mov
inc
rcl
lods
lcall
mov
stos
dec
insl
ficomps
aam
dec
xchg
jg
jo
fsubrp
pushl
in
or
jno
mov
mov
cmp
pop
mov
inc
adc
sub
cmp
test
and
pxor
xchg
add
in
mov
inc
aas
les
xorb
sti
jecxz
sbb
xchg
push
jbe
pushf
pushaw
pushf
push
fcomi
mov
cmc
pxor
or
mov
sub
xchg
roll
shrd
out
or
in
pushf
js
and
rolb
push
addr16
sub
sub
out
pop
popa
jno
mov
xchg
ficoml
or
add
stos
in
xchg
popf
cmpl
push
xorl
mov
ficoms
cmp
int
cwtl
jmp
mov
lret
pop
pop
das
repz
sub
xor
test
lret
pushf
aaa
mov
test
cwtl
jmp
sub
cmp
dec
addr16
xchg
popf
int3
push
fnstenv
les
loopne
adc
push
pop
data16
lods
or
loop
les
std
shrl
pop
fs
andb
cmp
ret
adc
mov
inc
mov
fucomip
in
stc
push
mov
and
jne
mov
xchg
rclb
mov
mov
mov
pop
mov
je
xlat
sub
mov
pop
mov
mov
mov
mov
jmp
pop
jecxz
lock
push
xchg
sub
mov
xor
outsl
adc
ret
loopne
cmc
lods
enter
pop
imul
pop
ret
mov
adc
mov
stos
mov
orb
mov
icebp
mov
pop
mov
call
pop
addr16
push
inc
shll
push
dec
add
cmp
andl
lds
je
push
jb
jae
push
in
ret
lret
enter
push
and
cmp
push
ret
leave
push
mov
add
xchg
jb
adc
jns
ficompl
mov
fmul
dec
sahf
or
shrl
adcl
sbb
inc
xorl
sub
out
push
out
lock
lods
inc
jge
or
adcb
xchg
clc
or
cmp
add
gs
mov
lea
xchg
jecxz
xchg
and
cmc
mov
inc
stc
cwtl
xor
sbb
mov
mov
lods
cmpb
fdivs
int
mov
mov
pop
andb
push
dec
fwait
or
addr16
sarb
jbe
cmp
mov
inc
push
cmc
fstl
mov
shlb
std
subl
xchg
nopl
jne
lods
push
adc
jg
dec
sbb
xlat
arpl
jmp
adc
xchg
sub
orb
jl
fnsave
pop
xor
jle
out
and
xchg
xor
xchg
outsb
inc
add
pop
and
shl
test
push
or
jp
mov
mov
jl
test
sub
cmp
rorl
or
fwait
jnp,pn
addr16
jns
xor
inc
stc
lahf
xor
cwtl
inc
ret
or
insl
xchg
mov
cld
in
mov
in
sub
cmp
push
cmc
jo
add
push
pop
lods
cmp
lds
dec
out
sbb
pop
sti
out
cmp
enter
or
setno
fsubrs
movsl
adc
cmp
hlt
popf
xorl
pop
add
stos
sti
sub
insb
jb
cld
mov
and
shll
add
dec
xchg
test
xor
mov
pop
aas
lcall
nop
and
pop
stos
xchg
in
fdivl
loopne
push
xor
mov
pop
repnz
push
outsl
push
sub
test
inc
aaa
lock
dec
mov
loopne
add
lods
fucompp
adc
push
dec
popa
inc
in
cmp
cli
xchg
push
fs
imul
or
sbb
mov
add
addr16
mov
adc
mov
scas
es
xchg
inc
iret
mov
dec
insl
out
pop
pop
shrb
pop
clc
jmp
imul
mov
mov
decl
mov
fucomp
ljmp
pop
pop
jmp
sti
lods
mov
dec
or
gs
xchg
stc
sbb
mov
jns
cmp
add
aas
dec
jbe
fisttpll
xchg
ficoms
aaa
lcall
mov
call
and
push
add
sbb
loop
xchg
or
dec
lods
fcoml
pop
fistps
dec
addr16
rclb
xchg
das
and
loope
push
mov
mov
inc
jle
sbb
sbb
fnstcw
dec
sbb
dec
hlt
mov
rcrl
cmpsb
cmp
nop
dec
push
mov
xchg
add
int
insl
popa
cmp
fisttpl
ljmp
adcb
push
inc
cltd
mov
fwait
pop
sub
fs
pop
mov
inc
lds
mov
popf
mov
std
jae
in
shlb
call
jmp
insl
add
pop
adc
test
mov
fwait
daa
fcmovnu
imul
sbb
cmp
scas
aam
push
jle
xchg
test
push
adc
ss
hlt
std
sub
cld
lret
sbb
sbb
push
cmpsb
in
mov
fldl
xor
out
cmp
xor
jl
inc
mov
leave
mov
lea
iret
out
xor
adcb
or
lock
cli
in
clc
stc
jno
jecxz
sub
push
xor
dec
mov
dec
movsb
jl
icebp
xchg
xchg
out
shrb
hlt
lds
je
push
sub
dec
repz
xor
adc
and
mov
sbb
pusha
mov
adc
lret
mov
jge
rorb
push
stc
jae
mov
cmp
xchg
enter
ljmp
push
push
cmp
cmp
inc
in
inc
iret
jno
icebp
bnd
adc
fwait
and
int
cmp
jp
jbe
in
xchg
loope
call
mov
inc
push
idivl
ss
xchg
mov
lea
pop
call
dec
mov
lcall
cltd
pushf
and
add
cmp
inc
dec
adcb
repz
lahf
xchg
xchg
push
push
rolb
or
lea
cmp
or
cli
mov
stos
pushfw
ret
mov
cld
dec
popf
dec
into
mov
aas
imulb
mov
jecxz
incb
mov
xor
add
dec
mov
dec
jo
pop
icebp
mov
sbb
and
out
dec
jmp
or
sbb
movsl
mov
in
push
aam
dec
push
add
or
push
add
fwait
sbb
lret
jmp
lods
inc
outsl
ja,pt
pushf
sub
cmp
fidivrs
jg
jne
test
push
das
lret
jge
lahf
sub
rcr
imul
mov
mov
popa
mov
call
pop
mov
mov
push
sub
das
in
cs
mov
fistl
push
xor
shrb
popf
add
or
dec
xlat
rorb
add
fwait
rorl
xorb
push
out
xor
mov
jecxz
pop
and
in
loope
in
dec
cwtl
mov
push
pushf
cmc
mov
or
popa
jnp
jmp
imul
xchg
add
jmp
dec
inc
jmp
stos
sub
out
js
mov
hlt
inc
nop
nop
xor
mov
movsl
fcoml
pop
jp
aad
xchg
in
stos
cmp
pop
stc
jle
ljmp
xchg
add
mov
and
and
inc
xor
imul
in
fwait
pop
cmp
pop
mov
and
int
or
pop
and
push
cmpsl
sbb
and
imul
mov
aas
xor
jge
aam
repz
outsb
aam
orb
movsb
xchg
data16
xor
mov
lret
cs
jmp
and
inc
pop
cmc
jmp
cmp
xchg
dec
lcall
pop
or
out
fcomp
cmpsl
cmp
push
call
repz
cmp
loop
ror
enter
out
jl
pop
in
xor
sbb
xlat
push
dec
push
add
cmp
and
mov
dec
stos
mov
adc
fmul
pop
setge
and
adc
ret
fisubl
aam
xlat
aas
sahf
adc
add
icebp
pop
test
outsb
out
ret
sbb
mov
adc
push
fidivrl
js
push
das
aam
loop
in
ja
push
add
pop
inc
repz
pop
mov
xor
addr16
icebp
scas
jno
xor
fst
push
addr16
test
int3
push
inc
mov
fimuls
out
push
mov
xchg
aas
rorl
fsubl
jne
ljmp
jle
inc
push
jb
inc
xchg
sub
pushl
push
rcrl
loope
pop
sub
add
movsl
dec
rolb
into
adc
addr16
jg
cmp
push
push
fsubl
iret
xchg
and
jmp
mov
test
sub
mov
sub
lahf
jmp
mov
test
add
adc
dec
dec
sahf
lret
lock
rcr
popa
int
stos
inc
test
dec
rclb
insl
jbe
dec
xor
xchg
inc
adc
lds
mov
adc
pop
adc
into
sar
dec
divb
inc
leave
jne
pop
movsb
or
mov
xchg
adc
and
xor
imul
cli
sbb
in
andb
stos
ret
sbb
stos
xchg
call
fs
adc
adc
insl
mov
ljmp
mov
into
jmp
mov
jbe
sub
and
jo
lea
repz
imul
cmp
sbb
add
jmp
mov
push
pop
add
rcrb
dec
rcl
rcll
mov
xchg
js
inc
add
gs
mov
jmp
scas
xchg
mov
inc
or
out
cmp
ficoml
popw
test
mull
pop
lods
loopne
mov
pusha
pop
add
jmp
cmp
pop
jl
aas
or
push
into
loope
loop
popf
dec
in
pop
dec
gs
hlt
sti
push
cmp
inc
mov
clc
push
imull
push
loopne
jle
imul
test
dec
adc
shll
cmp
in
int
arpl
iret
fcomi
shl
mov
ret
cmpl
mov
inc
fwait
cmc
sbb
cmp
and
jmp
imul
jmp
adc
mov
adc
push
cmp
push
xchg
push
mov
inc
mov
mov
pop
xchg
jmp
cmp
popf
stos
pushf
out
push
outsb
rcl
nopl
sub
jmp
xchg
call
in
insl
jg
loope
pop
pop
cmp
nop
dec
aad
movsb
cmp
sub
sub
idivb
or
add
xor
cmp
mov
mov
cmpsb
cmp
push
cltd
cmc
xor
or
mov
mov
xlat
jb
mov
adc
sbb
in
aas
call
rorl
pop
jp
adc
push
add
lods
mov
xchg
out
rcrb
dec
pop
repnz
or
add
adc
loopne
mov
pop
push
push
xchg
adc
std
stos
icebp
dec
jge
test
in
sub
push
jns
mov
std
pop
incl
shr
jg
mov
mov
jne
outsw
sub
int
daa
push
add
aas
inc
pop
nop
fidivs
nop
rol
aaa
mov
mov
es
jnp
stc
add
adc
out
or
fstl
out
shrl
popf
xchg
aas
dec
lahf
jno
arpl
or
sub
fadds
sbb
jbe
mov
jmp
mov
mov
fnstenv
sbb
mov
xor
jbe
stos
fisttpll
test
mov
insb
shrl
outsl
push
mov
xchg
jno
push
repnz
shll
ror
aaa
cmp
jp
mov
mov
push
fmul
push
dec
movsb
mov
vrcpps
sbb
dec
mov
stos
in
insl
jge
push
fdivl
outsl
xor
push
out
and
jg
cld
mov
jnp
loope
mov
test
daa
push
add
and
mov
and
sub
stc
add
aam
nop
test
cld
mov
test
insb
or
cmp
cmp
push
or
cmp
cmp
inc
dec
scas
cwtl
lcall
outsl
and
mov
lods
out
pop
clc
dec
mov
movsb
and
mov
lahf
jo
outsl
push
nop
lock
lods
into
rolb
int
lcall
std
cmc
sbb
in
mov
ds
or
fidivrl
outsb
ljmp
add
adc
pop
test
outsl
mov
stc
ss
jo
int3
mov
addr16
pop
lahf
std
dec
xchg
or
rclb
push
sub
ficompl
push
dec
addr16
cs
in
stc
inc
test
lea
or
leave
sarb
sbb
mov
clc
mov
jae
popa
xchg
and
clc
iret
loope
mov
push
lahf
fwait
xchg
mov
daa
rcl
outsl
sahf
dec
add
cmpl
sub
incl
out
mov
jno
lds
sbb
clc
jns
xor
xchg
mov
call
shlb
or
cmp
and
shl
mov
aaa
into
mov
jp
xchg
out
fdivs
mov
scas
cmp
mov
jb
inc
cmp
ret
push
leave
js
xchg
stos
sbb
clc
ds
lret
inc
orb
sti
fdivs
mov
pop
add
test
xchg
out
lret
pop
cmp
addr16
int
dec
xor
push
testb
enter
mov
mov
sbb
into
mov
push
or
insb
jb
pop
sbb
pop
dec
dec
mov
pop
jbe
pop
sbbb
imul
orb
cmpsl
dec
mov
aam
mov
adc
mov
out
orb
loop
test
jmp
mov
lahf
add
aad
sbb
sbb
and
bound
mov
xchg
jg
xchg
pop
fimuls
in
push
cld
ja
push
xlat
sti
jne
rcl
decb
dec
mov
sbb
mov
fisubl
cli
pop
imul
aaa
sub
xchg
clc
cmp
push
stc
ljmp
cmp
hlt
movsb
aad
xor
or
repz
ljmp
push
mov
or
out
cmp
lea
xlat
pop
jle
int3
add
cmpsb
mov
outsb
outsl
repnz
jno
xchg
addr16
or
xlat
xchg
jb
fdivr
add
testb
sbb
cmp
filds
fdivl
testb
div
icebp
mov
aas
push
int3
test
sub
cmp
and
lret
shrl
add
mov
pop
jmp
push
fstpt
test
pop
mov
pop
mov
sub
rcr
js
xchg
jecxz
mov
aad
or
cmp
ljmp
mov
xchg
mov
mov
insb
push
sahf
out
jns
inc
or
pop
push
daa
or
add
clc
aaa
lock
xchg
mov
pushf
add
shrl
cmp
loopne
sbb
idivl
inc
loop
int
out
scas
pop
int3
lcall
and
and
push
lret
in
loope
insl
dec
sub
xchg
daa
daa
inc
and
or
push
jnp
push
sub
movsl
sbb
dec
mov
scas
test
and
sbb
and
adc
sub
jnp
add
sbb
ljmp
bound
movb
loopne
jmp
jbe
mov
lcall
adc
inc
ja
push
notb
mov
mov
cltd
sub
fldcw
and
mov
xlat
inc
in
aas
jne
arpl
push
mov
sbb
lret
dec
fmul
stos
xchg
repnz
xchg
push
pushf
cmp
xchg
xchg
dec
adc
arpl
cs
pop
pop
dec
cwtl
jbe
fisubrs
addl
adc
out
outsb
out
repnz
push
je
std
xchg
pop
pop
mov
pop
sub
hlt
jae
jbe
pop
lea
imul
mov
test
inc
or
mov
std
testb
testl
add
pop
or
fsubl
cmpl
pop
sub
jo
jmp
pop
mov
orl
out
inc
xor
add
push
aaa
pop
adc
inc
in
or
pop
imul
dec
imul
nop
push
mov
pop
xchg
movsb
push
pop
inc
int3
subl
and
or
adc
shll
sub
or
xchg
jle
cmp
push
aad
mov
in
int
es
fdecstp
cmp
call
sbb
in
sbb
and
jmp
pop
out
adc
loopne
fdivrl
decl
jecxz
pop
mov
adcl
add
sbb
test
dec
push
mov
mov
mov
sub
dec
dec
mov
or
or
aam
jbe
push
mov
pop
mull
cwtl
ja
ret
cmp
jb
xlat
iret
push
lock
mov
mov
cwtl
icebp
outsl
mov
inc
sbb
addr16
loop
rcl
xlat
jge
dec
out
adc
int
dec
jne
les
adc
adc
es
lods
popl
data16
int3
loopne
js
jo
test
bound
mov
jge
pop
out
adc
leave
lods
inc
cld
fcoms
adc
lret
fsubr
notb
mov
insl
pop
cmp
imul
xor
stc
sbb
inc
sbb
inc
cltd
dec
fucomi
sub
mov
jge
popa
dec
inc
adcl
imul
dec
jne
sbb
aad
pop
mov
sub
test
enter
ja
push
add
and
sbb
sub
and
or
dec
pop
adc
push
jg
xor
gs
repnz
or
roll
adc
popa
bound
es
mov
cmpsl
cli
inc
sbb
out
cmp
sahf
or
pushf
sub
arpl
add
or
xchg
push
pop
stos
enter
pop
data16
adc
xor
je
pop
adc
lcall
add
fcom
push
daa
push
fisubs
aaa
aaa
lahf
push
adc
xor
jg
outsl
js
hlt
lds
hlt
adc
data16
rcr
sub
push
mov
and
gs
mov
pop
xlat
mov
dec
jle
out
fidivs
push
push
fmull
mov
jge
push
pop
ds
imul
rcrl
repnz
movsb
xchg
inc
inc
dec
js
push
gs
sub
sbb
bound
ficompl
push
dec
aad
mov
mov
rclb
arpl
stos
xchg
adc
shrb
mov
fld
and
and
push
xchg
andl
xlat
orb
inc
fidivrl
lods
mov
xchg
popf
xchg
push
cmovae
mov
adc
loopne
jno
push
stos
mov
pop
jge
loopne
aas
xor
insb
lods
aad
push
insl
es
fs
negl
push
and
xor
jle
xchg
cwtl
lea
cld
out
pop
lcall
push
dec
rclb
std
clc
xor
cmp
popa
inc
mov
pop
popf
adc
sbb
cmp
mov
add
pop
inc
mov
xor
xor
ss
and
lea
inc
xchg
jge
addl
or
repz
cltd
pop
inc
in
cmpsb
inc
push
xchg
push
mov
jb
mov
and
or
jl
xor
leave
xchg
cmp
lods
je
cmp
and
push
daa
stos
adc
add
leave
pop
int
out
sub
add
dec
mov
inc
mov
sub
icebp
push
addr16
jae
insl
fidivl
adc
fists
sbb
and
cmpl
mov
aad
pop
imul
sub
inc
lret
rcll
inc
sbb
push
adc
out
or
push
xor
scas
fsubrp
push
or
jecxz
or
cltd
mov
mov
in
push
mov
fwait
int
push
mov
lods
mov
out
mov
pop
lods
sti
jae
or
jo
inc
and
daa
enter
aas
inc
pop
lock
pop
jg
inc
in
not
mov
outsl
and
cmc
subb
int3
fnsave
cwtl
outsl
jo
inc
pop
mov
lahf
fsubrl
push
dec
sbb
add
add
rcll
stos
in
cmpb
loope
mov
mov
pushf
jb
ret
cmpsl
fcomip
jns
out
js
xchg
mov
pop
fiadds
pop
pop
stc
add
cmpsl
xor
in
mov
je
imul
loope
and
scas
sahf
rorl
fwait
orl
loop
loopne
xlat
filds
sbb
mov
jae
fs
cltd
cwtl
sbb
dec
jmp
in
mov
jne
pop
and
adc
ja
adc
xor
pop
mov
filds
xor
sbb
xor
loop
cmc
jmp
adc
inc
cld
iret
fistpll
jecxz
sub
sti
addr16
cmp
xor
lea
pop
lods
jo
lcall
test
in
push
fmull
fwait
shl
fs
or
push
mov
lods
cmc
cmp
test
shrl
les
inc
gs
fisubrl
nop
and
orb
test
imul
leave
pop
add
hlt
and
dec
aam
jns
fldt
in
andb
outsl
insb
mov
sub
sahf
jbe
jb
inc
popa
xor
and
scas
mov
inc
ret
dec
mov
lock
mov
std
inc
subl
out
dec
cmp
sti
negb
shr
xchg
mov
iret
adc
sub
cmc
xchg
jl
cmp
sar
or
test
les
jne
cmpb
popa
adcl
std
outsl
push
imul
and
cli
imul
stos
cwtl
cmc
jecxz
cmpsb
xchg
fcompl
cmp
sub
test
aam
cmp
cwtl
cwtl
add
lcall
ds
outsl
mov
inc
lea
dec
in
sbb
ror
mov
jle
push
fwait
and
sarb
sub
test
xor
xchg
insb
xchg
sbb
div
int
in
jbe
and
pop
fisttps
movsl
pop
dec
enter
fwait
and
test
mov
ret
mov
out
in
add
lcall
inc
aaa
cmp
shlb
outsl
or
add
inc
xchg
leave
leave
and
call
cwtl
mov
repnz
dec
jmp
or
adc
pop
mov
xchg
mov
lock
inc
push
or
fsubl
xorb
jns
outsl
xor
lret
ret
add
cmc
add
pop
testl
xchg
sbb
insb
daa
xor
div
jo
mov
out
cmp
fisttpll
xchg
shrl
aam
test
test
adc
sbb
mov
xchg
adc
and
scas
mov
out
and
iret
inc
push
jne
adc
jge
push
rcll
adc
pop
lods
loop
or
test
sbb
shrb
lret
add
dec
mov
cmpb
xlat
ja
xor
inc
cltd
xorl
aam
push
fistl
gs
das
outsb
push
jnp
push
bswap
das
xchg
inc
shlb
inc
mov
dec
int
xchg
test
jae
push
xchg
inc
jne
cmp
sbb
test
int3
dec
or
iret
mov
cs
mov
inc
leave
or
push
pusha
inc
mov
jg
dec
mov
in
lea
dec
xchg
repnz
jle
inc
test
roll
pop
out
cmc
fmull
or
aam
insl
xor
das
add
adc
add
cmp
push
cli
xchg
pop
iret
in
jg
das
jns
jns
cmp
mov
xor
mov
cmp
loope
push
insb
and
cmp
cltd
cld
ret
fisubs
rorb
jge
add
sub
clc
shl
outsb
sbb
cmp
xor
pusha
push
xchg
dec
mov
mov
imul
push
mov
in
inc
imul
insl
or
out
mov
cmp
test
mov
les
imul
pop
cs
or
jl
dec
out
sbb
pop
sub
nop
stc
xchg
les
test
stos
push
out
cmpsl
cltd
mov
pop
shrb
adc
push
stos
or
mov
cmpsl
test
cwtl
pop
pop
push
jno
repz
add
push
pop
repz
mov
cmpsb
cmc
dec
std
push
push
pop
popf
push
out
mulb
jno
test
push
cmpsl
movsl
and
pop
cmp
cli
fwait
xchg
push
insl
rcll
xor
cmp
mov
push
pop
lock
xor
xchg
ss
or
movsb
sbb
mov
in
stos
add
cld
pop
fdivl
push
aad
dec
add
in
into
push
aaa
cmp
test
inc
fucom
mov
sub
mov
outsl
loop
dec
out
mull
or
loope
mov
adc
aad
pop
pop
aam
dec
xlat
cmp
int
and
fmull
mov
aaa
cmp
sub
adc
dec
xor
push
push
pop
sbb
in
jmp
pop
lds
add
or
xor
dec
in
jecxz
js
cmpsl
pop
inc
shr
adc
sub
mov
test
mov
adc
dec
push
cmp
inc
rcl
xchg
pop
movsl
xchg
rcrb
sub
aaa
lret
add
inc
sub
std
cmp
or
pop
test
jl
add
hlt
sub
lret
jnp
lock
fwait
sub
sub
mov
jne
push
sub
jle
push
faddp
fisubs
iret
inc
lock
or
sub
pushf
lods
loop
jle
pop
pop
jl
bound
mov
adc
mov
sti
icebp
cmpl
pop
shrb
aas
dec
jne
xor
and
mov
jnp
mov
cmc
jmp
dec
dec
cmp
dec
sub
std
push
push
add
jo
mov
fldz
mov
cmp
pop
iret
adc
and
inc
dec
and
adc
mov
cli
and
xor
dec
adc
pop
inc
adc
xor
call
pop
cmpsl
xchg
js
jmp
ficompl
je
push
fisubs
outsb
pop
jns
or
cld
aam
sub
mov
push
ljmp
sbb
lock
lock
mov
and
hlt
and
mov
lods
push
int3
mov
xlat
icebp
xor
jno
xchg
arpl
adc
jmp
dec
jge
fildll
addr16
adc
xchg
lods
iret
decl
xor
xor
cmp
xchg
mov
mov
xor
jecxz
lock
mov
add
pop
xor
xchg
add
dec
scas
sub
mov
sbb
mov
test
aas
mov
cld
ret
std
mov
stos
pop
gs
pop
xchg
scas
icebp
repnz
sub
xor
mov
mov
lret
dec
mov
mov
addr16
out
jns
inc
negl
rclb
xchg
jne
jnp
das
fcmovu
push
inc
push
xor
cmp
sub
sub
xchg
push
dec
bound
fisubrl
arpl
jb
pop
in
stc
or
xor
xor
mov
or
and
or
js
fistpll
inc
cmpsb
xorb
imul
pop
add
fnstcw
push
out
dec
fwait
inc
mov
out
sub
pop
jns
outsb
xor
add
jecxz,pn
shlb
pop
in
mov
push
push
lea
je
inc
mov
into
int
test
sub
inc
out
je
aad
int
adc
arpl
xor
notb
push
dec
testl
jg
ja
xchg
into
out
jnp,pn
pop
pop
cmp
shll
out
dec
mov
loop
lahf
jl
sahf
dec
pop
mov
mov
inc
jb
mov
push
stc
insl
jecxz
or
lret
mov
mov
push
pop
lods
outsl
pop
je
or
adc
cmpsb
inc
or
xchg
nop
pop
xchg
push
jmp
push
cwtl
orl
lret
subb
fnstsw
gs
repz
jp
call
sbb
cmp
inc
fwait
in
dec
ja
mov
popf
add
inc
jmp
and
or
or
adcb
sbb
sahf
imul
je
mov
xor
js
sbb
xor
sarb
andl
mov
mov
push
ds
fadds
ja
or
pavgb
insb
cld
pusha
jecxz
mov
into
inc
jg
cli
cmp
mov
subb
popf
push
inc
mov
ja
or
rcrb
fadds
shlb
hlt
xor
int3
mov
notb
inc
test
pop
sub
aam
and
adc
sub
xchg
je
inc
add
mov
adc
lahf
or
sbb
pop
inc
ljmp
nop
cmp
or
test
mov
dec
and
adc
ljmp
cmp
mov
sahf
inc
adc
repz
enter
dec
pop
sbb
jb,pn
push
fsubrs
cmp
mov
xchg
ret
cmp
stos
nop
sbb
shrb
sti
in
andb
mov
jne
icebp
mov
ds
pop
loopne
rorb
and
gs
mov
outsl
repz
pop
jae
int3
dec
jo
lea
adc
adc
xor
pop
iret
mov
adc
xchg
and
loopne
adc
movsl
mov
xchg
push
jno
adc
cmpsl
sub
ljmp
sarl
fiadds
in
loope
or
imul
mov
pop
popa
loope
pop
jae
pop
jne
xor
call
adc
popf
in
push
inc
vpunpckldq
inc
pop
push
test
outsb
adc
inc
insl
push
mov
dec
adcb
mull
fwait
xor
push
addl
mov
movsl
lock
and
add
mov
jbe
sarl
cmp
adc
test
imul
push
es
jo
sbb
pop
pop
pop
xchg
add
pop
mov
insl
iret
aas
ror
in
xlat
dec
mov
cmp
ja
push
mov
call
sbb
pop
mov
mov
inc
insb
sahf
insl
sub
adc
cli
das
outsl
mov
sbb
xor
adc
lahf
stc
lcall
dec
sbb
mov
pop
bound
clc
jno
dec
insb
mov
jl
fsubrl
hlt
cmp
xor
push
jp
sahf
jns
sub
mov
pop
dec
push
imul
insb
xor
push
cmp
add
out
fmuls
add
or
out
jne
lahf
cwtl
data16
lea
movl
xor
lods
cltd
push
sbb
mov
pusha
enter
ja
stos
scas
mov
and
mov
xchg
dec
mov
jae
sub
addr16
add
jmp
cld
adc
dec
mov
mov
mov
out
or
rol
sbb
in
out
repz
popa
dec
jnp,pt
inc
cmp
ds
and
rorb
cmp
lea
jo
mov
add
and
leave
jg
or
mov
push
popa
cmp
xor
push
and
lods
ja
inc
push
lds
in
xor
rolb
inc
mov
ja
dec
movsb
cmp
adc
out
lahf
imul
fwait
and
push
es
test
mov
adc
lds
inc
in
stos
lods
mov
mov
inc
fisttpl
jo
pop
stos
test
pop
int
stos
sbb
ss
dec
cmp
sub
ja
bound
paddb
or
subl
xchg
add
or
sbb
iret
hlt
std
sbb
or
pop
out
xchg
call
jns
add
in
pop
mov
fldl2e
pop
and
add
xor
or
fstpt
pop
inc
push
stos
es
mov
stc
bound
repz
inc
lahf
insl
or
sahf
mov
sbb
xchg
test
rcrl
cmp
fsubp
xor
jns
loope
les
movb
xlat
or
inc
enter
dec
test
aam
pop
xor
into
jle
push
fs
adc
rcl
fsubs
pop
imul
rsm
push
mov
and
in
sub
test
insb
scas
pop
int
loope
xchg
mov
pop
loope
call
jge
mov
pop
mov
pop
stc
dec
out
xor
repnz
cmp
mov
mov
sahf
cli
data16
js
ljmp
sub
stos
loope
pop
lock
sbb
and
hlt
sub
call
popf
ja
sub
out
ret
fstpl
xchg
in
insl
jmp
xchg
xchg
lret
adc
mov
mov
inc
mov
dec
mov
xorb
cli
lods
push
pop
lds
xchg
cli
fs
lcall
ret
lds
aaa
cltd
dec
xor
fwait
repz
arpl
stc
inc
push
stos
adc
lock
daa
movsb
js
mov
fstl
cmp
push
and
mov
adc
xor
xchg
jmp
add
or
jae
outsb
std
outsl
push
xchg
sarb
jle
add
out
loop
int3
loop
out
xchg
dec
jno
sbb
mov
iret
adc
inc
push
nop
sub
xor
lret
adc
addr16
aas
jnp
out
sti
cmpsb
cld
lds
mov
mov
scas
js
jle
push
mov
jmp
imul
pop
and
cmc
or
js
mov
push
scas
add
js
out
cwtl
push
pop
xchg
mov
pop
bound
outsb
xchg
mov
idiv
gs
repnz
jle
xchg
les
cmp
mov
loopne
daa
xor
or
mov
lods
cmp
lcall
add
jge
test
cltd
jbe
xchg
cmp
addr16
ret
lret
mov
mov
out
sub
mov
inc
fstpl
cmpl
in
mov
and
imul
fsub
loop
sbb
inc
push
sub
mov
add
in
lret
fucomip
xchg
add
mov
and
fwait
cltd
in
dec
adc
movsl
add
repz
sbb
cmc
bound
test
scas
push
inc
leave
shrl
cs
imul
insl
mov
inc
sbb
mov
jne
xor
sbbb
ss
xchg
pushf
add
cmpsb
shlb
notb
jbe
dec
out
std
ljmp
pop
les
in
popa
fdiv
sub
lods
stos
outsl
fucompp
xchg
xchg
out
dec
xchg
sub
or
xchg
call
stos
sub
add
arpl
add
cmp
push
xor
xor
or
stos
aam
loop
daa
loop
cmp
mov
sbb
jb
sbb
divl
xchg
xor
pusha
aas
xor
shlb
mov
fidivrl
adc
xchg
mov
adc
xchg
icebp
pop
sbb
push
sub
icebp
push
fidivrs
fs
stc
lcall
add
lock
jno
jmp
sub
push
sbb
je
stos
add
xor
imul
pop
or
cmp
cwtl
pop
mov
or
xlat
shll
fwait
cmp
mov
ret
push
mov
cmp
das
cltd
mov
imul
std
and
hlt
stos
push
cmpsb
out
sub
mov
adc
loope
cmp
mov
iret
push
test
adc
push
lret
sub
mov
ret
push
in
test
mov
in
add
rorb
gs
push
sub
rorb
scas
dec
mov
jne
push
push
push
pushf
aad
pop
int3
ss
push
fwait
add
jb
das
test
mov
add
daa
dec
call
cltd
cmp
push
in
dec
jl
fisubrl
aas
jmp
sbb
xor
xor
lret
xchg
cmp
and
fildll
dec
rolb
sahf
mov
add
repz
rcrl
cmpsb
enter
movsl
sbb
mov
repz
and
inc
shl
and
outsb
mov
push
pushf
dec
cmc
mov
dec
fcoms
xor
mov
mov
and
jle
or
iret
lock
dec
add
add
sub
mov
push
pop
inc
ret
sahf
imul
imul
mov
lret
rclb
jmp
sbb
in
sub
jb
add
shlb
jmp
cmpsb
int3
rcrb
fldt
inc
cmp
push
mov
jp
shll
cmp
orl
icebp
imul
fdivs
icebp
xchg
out
mov
dec
addr16
or
cld
jle
jge
push
sbb
aam
cmpsb
sti
mov
cmp
sub
addr16
and
fsubrl
xor
jp
setns
ja
xor
movsb
add
and
sub
jo
outsl
stc
dec
shlb
repz
ss
rolb
outsl
sub
test
mov
fistpll
xor
lds
add
daa
xor
insb
xchg
fwait
cmp
mov
fucom
pop
jmp
out
mov
dec
xor
lods
loop
inc
mov
and
dec
push
mov
inc
dec
mov
cli
push
mov
das
jecxz
fwait
push
test
dec
in
sub
mov
jb
jl
icebp
or
pop
cli
sti
fstps
shlb
out
loopne
xchg
push
out
dec
dec
repz
dec
or
pop
lock
lds
mov
jno
stos
pop
mov
roll
push
add
pop
mov
mov
dec
js
loop
push
pop
call
pop
xchg
sbb
mov
shrl
cmpsl
xchg
out
fisttpl
fiaddl
inc
mov
sub
push
pop
fadds
mov
mov
lds
mull
adc
popa
test
or
loopne
bound
mov
dec
cmc
push
fwait
hlt
push
repnz
aas
popa
fisttpll
mov
in
mov
xor
int3
push
outsl
xchg
ss
sub
xchg
xorb
int
inc
icebp
xor
cwtl
sbb
test
xchg
inc
add
or
mov
pop
loop
jnp
pop
mov
xor
out
push
out
fs
adc
lcall
mov
outsl
lods
add
lea
jno
dec
mov
ficoml
pop
cmp
or
mov
mov
and
xchg
pop
leave
fcoml
pop
push
arpl
faddl
mov
in
mov
fisubs
jns
push
dec
cwtl
push
mov
mov
mov
in
les
movsl
mov
push
out
mov
adc
xchg
pushf
imul
jno
rcrb
jge
sbb
pop
pusha
dec
fmul
je
mov
cli
mov
sub
pop
push
test
xor
test
push
outsl
xor
cmp
inc
stos
mov
push
pop
mov
repz
daa
pop
adc
sti
ficomps
dec
jo
int
mov
jl
sbb
push
cmc
inc
or
addl
je
shll
cmpsl
dec
fsub
outsb
xorl
pop
int
push
iret
arpl
out
dec
pusha
lods
dec
movsb
ds
ret
sub
es
adc
iret
or
arpl
movsb
aad
jae
or
jg
push
test
lret
int
shrl
cmp
idivl
pop
popf
rorl
lods
leave
js
and
or
ret
sbb
add
mov
bnd
test
add
incb
mov
es
loop
jne
and
pop
jecxz
addr16
xlat
in
mov
loop
aam
aaa
inc
pop
cwtl
lret
lcall
call
repz
or
stos
cmp
fmuls
jno
sub
call
and
and
pushf
ds
aaa
add
dec
popf
mov
push
fstp
out
hlt
leave
mov
daa
repnz
stos
pop
xchg
mov
xor
lds
mov
movb
sbb
and
movb
gs
mov
pop
rorb
jno
sub
test
mov
jo
in
popa
fwait
popw
sbb
xor
pushf
adc
push
lahf
xchg
fbld
xor
pop
xor
out
xchg
jae
iret
or
mov
test
stc
iret
cltd
inc
fstpt
pop
mov
in
enter
dec
jno
dec
adc
add
js
adc
pop
fcmovnb
popa
push
cli
rcll
jge
adc
int3
pushf
test
in
out
out
stos
sbb
scas
xor
add
call
xor
or
jnp
cmpsl
xchg
arpl
andl
sbb
shlb
mov
mov
rcrb
repnz
or
aam
cld
repz
ljmp
mov
and
pop
aam
push
xor
jle
jp
xor
pop
data16
cmp
dec
fsubl
jl
jl
xchg
sub
fwait
mov
or
loop
add
test
pop
dec
insb
push
shrb
jp
push
cs
hlt
dec
adc
mov
lahf
pop
out
xchg
mov
imul
jecxz
push
iret
in
andps
xchg
sub
ds
addr16
xchg
mov
and
xchg
or
cmp
xor
mov
dec
cli
xor
cmc
or
mov
sub
push
push
mov
mov
cmp
shrb
push
in
add
movups
mov
movsl
in
xchg
dec
and
aas
dec
pop
aam
pop
iret
iret
int
lea
or
mov
outsb
aam
shlb
mov
add
add
lcall
scas
lahf
iret
je
sbb
test
or
sbb
mov
test
sti
ficoml
jmp
and
ret
push
xchg
push
pusha
cmpl
jmp
lock
roll
dec
daa
sub
pop
fildll
jne
push
xchg
pusha
inc
adc
inc
pop
sbb
fs
mov
ljmp
mov
or
mov
sbb
cli
push
scas
outsb
jmp
roll
mov
scas
ficoml
adc
jge
pop
inc
ret
bswap
imul
xor
push
xchg
xchg
out
outsb
cs
sub
and
rcrb
aas
inc
imul
mov
mov
add
mov
lahf
lods
mov
push
adc
popa
mov
popf
lea
dec
or
sbbb
insb
fstpt
dec
inc
xbegin
xor
mov
mov
rorb
outsl
mov
xor
and
and
cmp
mov
cmpl
mov
dec
adc
inc
mov
data16
in
add
mov
or
ljmp
in
mov
xchg
mov
pop
add
psrld
cmp
cwtl
cmp
fs
hlt
push
les
fcomip
jns
vpackssdw
mov
cmp
loope
or
sbb
mov
mov
jl
inc
push
out
sub
push
pop
fiaddl
data16
push
push
idivl
lods
pusha
add
cmp
mov
fldt
movsb
pop
sub
xor
pop
xor
ret
mov
divb
imul
or
aam
add
jae
mov
and
ret
imul
cmpl
call
adc
call
shll
aad
sub
inc
loopne
jl
add
loop
adc
lret
orb
in
mov
mov
cmpsb
incl
pop
stos
sti
sbbb
jp
pop
popf
push
nop
pop
mov
and
stos
icebp
in
jo
jo
pop
shll
arpl
shl
xor
lods
imul
ljmp
call
mov
fdivs
xchg
insl
stos
inc
jl
aam
dec
mov
and
loop
mov
cltd
jae
or
cmp
push
stos
add
jge
xchg
outsl
out
and
mov
jo
sbb
adc
shll
mov
repnz
cwtl
incl
inc
fstpt
mov
sbb
cmpsb
aaa
dec
pusha
ret
stos
pop
xchg
mov
or
xchg
xor
popf
pop
mov
mov
mov
lea
cltd
sbb
dec
leave
push
hlt
pop
push
adc
or
rcr
sub
loope
repnz
dec
out
jg
jo
jl
inc
mov
mov
mov
sbb
jmp
mov
leave
mov
dec
popa
ret
xchg
add
shlb
loope
hlt
sahf
iret
dec
cmpsb
outsl
inc
adc
pop
aaa
pop
jle
mov
adc
cs
js
mov
fildl
mov
add
mov
fdiv
sub
clc
loop
out
std
push
mov
in
inc
mov
jb
mov
test
add
pop
jmp
ret
out
mov
cld
and
fldcw
movsl
scas
jecxz
dec
out
mov
mov
sub
pop
push
ljmp
lock
add
movsb
xchg
xor
xor
or
cmpsb
outsl
aaa
mov
fucomi
or
dec
xchg
dec
fldt
and
lea
adc
mov
cvtdq2ps
or
call
xlat
sub
jmp
fwait
cli
lahf
in
push
cmp
insb
mov
mov
int3
inc
cmp
imul
and
add
push
insb
imul
scas
hlt
stos
mov
and
xlat
pusha
cmp
sub
or
sub
pop
mov
fisubs
pop
inc
xor
pop
fcmovnb
adc
es
test
lods
dec
in
push
lahf
int
push
lds
nop
cwtl
xor
pop
insl
xacquire
mov
data16
or
repz
mov
dec
inc
mov
push
int
fs
imul
xchg
repnz
outsl
push
aad
pop
push
in
mov
imul
cmc
fidivrs
or
out
fiadds
addr16
les
stos
jge
mov
pop
xorb
ss
ja
dec
sahf
cmp
push
enter
mov
pushf
xchg
dec
es
sbb
out
ret
adc
imul
aaa
adc
xchg
lahf
iret
adc
bound
decl
push
fiaddl
adc
sub
push
add
or
cmp
loop
cltd
cli
add
in
cmp
sbb
inc
cmpsl
loopne
cmpsb
xor
jecxz
std
mov
jmp
adc
rorb
cmp
sub
mov
dec
dec
hlt
cmp
std
outsl
or
mov
xor
repz
mov
in
mov
cltd
pop
jg
add
ljmp
sub
bound
pop
daa
mov
mov
lea
xchg
sub
test
call
scas
cmpl
sub
xchg
xchg
test
sbb
pop
lcall
mov
arpl
mov
in
imul
push
sbbb
jmp
cmc
insb
scas
in
cmp
aas
cmp
mov
and
test
xchg
pop
fscale
fwait
testl
test
ret
or
test
lods
fs
xchg
ja
sbb
and
outsl
pop
cltd
cmc
and
mov
rcrb
out
roll
sbb
pop
xor
mov
aad
dec
cltd
sub
fldl
jne
or
mov
je
or
mov
mov
cmp
call
jp
and
add
sub
int
sub
lds
sbb
lea
rclb
mov
roll
dec
int3
or
test
ret
fwait
jno
push
mov
push
loopne
adc
fs
mov
je
nop
and
das
or
mov
mov
adc
jb
ret
xchg
and
js
add
cmpsl
sahf
pop
mov
jp
loop
mov
push
sbb
xor
cmpsl
pop
lahf
mov
xchg
cmp
je
jge
dec
jl
std
lds
xor
int
xchg
mov
stos
sbb
out
cmp
or
sub
stc
shll
add
add
pop
pushf
aas
js
sub
and
pushf
sbb
push
jo
push
add
xor
rcl
push
cmp
out
or
clc
fwait
pusha
shll
or
add
mov
andl
pop
cli
imul
cmp
das
mov
pop
test
pop
add
stos
ret
add
loop
loop
mov
shrb
jne
jo
xchg
loope
mov
or
mov
and
sub
adc
sub
dec
and
mov
pushf
addr16
imul
jb
jp
xchg
xlat
rorb
pop
adc
sbb
lcall
jne
outsb
insl
stos
xor
mov
or
rcll
mov
sbb
sarb
jecxz
fiaddl
lret
adc
sub
imul
push
shll
jb
pop
idivl
mov
ficompl
add
dec
lcall
xlat
outsb
dec
test
in
jge
adc
sub
pop
sub
out
in
xor
dec
mov
outsl
idivl
push
imul
cmovs
xor
shlb
ja
movsb
mov
or
add
inc
arpl
fcoms
dec
testl
push
orl
mov
sbb
int3
mov
mov
outsl
dec
inc
fs
pop
mov
xchg
pushf
cs
fwait
out
ja
push
mov
pushf
fistpll
jo
push
lds
js
push
mov
mov
mov
shlb
add
scas
int3
jmp
push
aas
call
push
pop
cmpsb
jne
shr
inc
xchg
add
lods
icebp
dec
mov
jns
xor
inc
out
xchg
mov
inc
sti
dec
xchg
loope
imul
jge
sarl
push
je
add
out
fdivrl
sub
outsl
js
jp
inc
or
mov
push
mov
inc
sbb
addr16
ss
push
jge
mov
cs
or
mov
in
inc
insb
sarb
fdivs
cmp
mov
cmpsl
sbb
insb
push
cmp
loop
ret
add
cmc
cld
jbe
cld
mov
jmp
lahf
and
negl
inc
es
sub
xchg
je
xchg
test
add
stos
mov
xchg
push
mov
sbb
add
ret
in
or
orl
sbb
rorl
push
rcll
push
jae
dec
ret
xor
mov
inc
int3
std
cli
aam
incl
cwtl
adc
mov
repnz
inc
add
sbb
stos
aam
mov
jl
roll
jecxz
data16
pop
pop
pop
mov
repnz
outsl
push
rcll
and
shlb
sahf
add
in
test
popf
arpl
fstps
aaa
sub
addl
xchg
gs
and
test
lods
fdivrs
xor
es
sub
cmp
fchs
cmpsb
sahf
xchg
ja
jg
or
and
adc
es
mov
outsb
and
push
fdivrl
ss
into
push
and
shrl
jns
arpl
push
xchg
mov
rorb
sub
push
inc
adc
popf
add
mov
jb
movsb
fdivs
cmpsl
cmp
jne
iret
xor
aas
addl
mov
sbb
push
in
mov
mov
lea
in
push
mov
sarb
sbb
adc
iret
cmc
pop
pop
mov
lahf
out
rolb
lds
or
or
cmpsl
and
inc
adc
je
js
adc
push
and
pop
rcll
loop
mov
data16
pop
mov
push
movsl
pop
lods
and
inc
js
loopne
xor
inc
outsl
clc
cmpsb
dec
or
sbb
xlat
xchg
fdivp
pushf
jmp
pushf
mov
push
and
in
push
jne
add
mov
dec
enter
xor
out
loopne
add
aaa
adc
mov
daa
mov
cld
out
xor
outsl
ds
jb
lods
div
pop
push
push
mov
mov
mov
ljmp
sbb
xchg
fs
xchg
jo
test
sub
lret
jmp
and
cwtl
jmp
push
arpl
arpl
adc
mov
or
jb
mov
push
cmc
pop
sub
push
add
mov
push
roll
arpl
sbb
and
pop
mov
xor
adc
fbstp
or
cmc
cmpsb
iret
addl
loope
dec
pop
xchg
int
or
or
rcrl
jle
cwtl
jnp
imul
pop
add
ja
loop
fucomi
jle
push
and
int
outsb
xchg
imul
push
lcall
jb
push
or
mov
push
lahf
jbe
pop
jne
pop
das
insl
add
sahf
mov
or
loop
mov
pop
mov
cs
jmp
ss
jmp
fisttps
sbb
pop
jle
ds
jg
data16
and
push
add
rcr
mov
std
and
rcll
pop
dec
xchg
cmp
add
movsl
push
movb
inc
push
out
xor
mov
stos
xchg
fcoml
nop
mov
dec
bound
inc
fidivs
sbb
outsl
jp
adc
cmp
int3
std
aas
or
add
das
fs
or
dec
jp
rorb
aas
adc
xchg
and
xor
inc
lahf
outsb
fcoml
ljmp
or
mov
push
jecxz
jb
shll
out
xchg
loop
clc
sub
dec
or
pop
or
shrl
mov
lds
inc
fisttps
mov
mov
mov
stos
imul
dec
insl
push
fildll
jmp
incl
pop
sub
and
stos
mov
shlb
pop
sbb
mov
lret
in
in
lea
or
mov
and
int
mov
loop
xor
sti
push
idivl
aas
sbb
adc
or
lahf
add
test
leave
push
mov
lds
lods
sub
mov
mov
and
push
and
sahf
pop
mov
sub
scas
cmp
fsubrp
jmp
iret
mov
ret
mov
xchg
xlat
ficompl
in
mov
stos
rcll
jb
jns
fildll
stos
add
pop
xor
mov
jmp
mov
jns
daa
sti
cmpsl
inc
mov
outsl
dec
pop
or
lock
lods
or
addr16
push
lret
sti
push
cmp
inc
test
das
add
xchg
pusha
mov
push
push
movsb
push
decb
push
inc
mov
mov
jbe
clc
popa
int3
or
subb
jp
push
fdivrl
xor
fsubrl
inc
ss
ret
dec
mov
xor
adc
mov
dec
sub
fidivl
aam
lock
and
cmp
cmpl
sub
stos
test
test
pop
fs
pushf
fisubrs
out
sub
dec
cmp
fsubs
jbe
setns
push
ja
fsubrp
cmp
add
pushf
mov
data16
aam
out
add
xchg
mov
mov
xor
inc
mov
hlt
mov
mov
pop
push
movsb
inc
daa
xchg
mov
in
aaa
mov
aaa
adc
lret
pop
scas
mov
sbb
xchg
jnp
fimuls
xor
repnz
lods
les
jbe
xchg
jno
sub
sbb
and
cmpb
xchg
imul
cmp
adc
sbb
xchg
jns
lcall
int3
ss
sub
and
xlat
insl
repz
mov
push
sub
cmp
fnstsw
scas
xor
cld
mov
js
or
faddp
mov
pop
inc
pop
icebp
loop
popa
mov
push
hlt
push
push
jne
xchg
cmp
push
push
mov
lock
jle
xchg
dec
and
lods
add
push
pop
aas
mov
repz
jae
jmp
cld
in
arpl
leave
push
in
in
dec
gs
out
jp
sub
dec
outsb
mov
mov
adc
into
lea
jno
and
jge
jae
cld
imul
nop
loope
nop
insl
pop
lea
and
icebp
sahf
gs
and
lock
push
mov
dec
xchg
jo
or
mov
mov
push
add
iret
imul
andb
cmp
sub
jle
in
add
push
lock
aas
test
incl
mov
flds
push
ljmpw
jns
int
xchg
shll
xchg
sub
aam
test
movups
es
inc
sbb
xor
aam
fistl
and
test
or
je
mov
adc
test
out
in
xchg
rcrb
pop
dec
push
xchg
je
adc
jo
inc
daa
out
jne
js
js
sbb
mov
imul
fstl
dec
mov
insb
add
outsb
jb
add
and
pop
push
cmpsl
lock
mov
das
jp
shrb
adc
push
adc
jo
xchg
jno
lret
loop
out
arpl
setnp
sub
mov
xchg
cmp
lret
cmc
mov
jge
jg
test
in
xchg
xor
dec
pushf
in
flds
mov
idivb
loope
fsubrs
dec
adc
mov
xchg
adc
hlt
pop
sbb
mov
fbstp
cmp
add
repnz
fnstsw
add
jle
jae
lret
mov
xchg
sbb
dec
mov
scas
mov
lock
scas
dec
adc
and
or
das
bound
mov
inc
fsubs
inc
pop
into
adcl
jmp
cmp
jge
sbb
cmc
lods
and
pop
mov
lcall
jecxz
test
cltd
dec
cltd
adc
daa
mov
mov
aaa
notb
pop
sub
dec
adc
inc
xchg
outsl
jle
jns
lods
dec
inc
outsb
cmp
rol
pop
out
loop
sub
or
aad
pop
and
ficomps
ja
loop,pt
add
stos
in
fdivrs
in
insl
xchg
test
sbbl
dec
scas
mov
js
mov
pop
sarl
cmp
in
or
leave
in
inc
lock
add
add
xchg
movsl
push
fs
aad
jp
mov
cmc
mov
adc
nop
dec
mov
push
mov
scas
add
ja
stc
mov
loope
leave
icebp
xorl
xchg
or
or
sbb
jno
sbb
and
and
xor
xchg
popa
sbb
ret
push
cltd
insl
fstp
xor
lds
add
push
decl
inc
pop
mov
inc
inc
mov
fdivrs
sbb
js,pn
mov
sbb
aad
dec
nop
nop
mov
jnp
add
cmp
fcmovb
sub
test
inc
pusha
popf
inc
outsb
mov
dec
clc
jbe
call
mov
sbb
pushl
inc
cld
mov
loop
and
fisttps
mov
sbb
rorl
fimull
scas
add
shl
psubq
insb
lret
push
imul
shr
mov
dec
cmp
jmp
mov
shlb
adc
rcrl
and
sbb
xchg
les
fsubrs
pop
enter
mov
or
mov
test
mov
insb
loopne
push
aas
push
add
andb
insl
aam
add
lock
pop
es
pop
bnd
xorb
jns
cli
push
jl
bound
jo
scas
pop
jns
push
es
mov
je
jp
pop
sub
or
aam
or
and
jecxz
dec
mov
ljmp
and
jb
adc
xor
scas
cmp
test
sbb
fs
jmp
loopne
das
add
or
movsl
mov
and
mov
jns
fwait
dec
and
pop
jle
pop
sub
jns
icebp
fcomps
xchg
xchg
ds
lock
sub
mov
faddl
sub
in
fisttps
das
mov
mov
repz
or
xchg
sbb
xchg
cs
and
in
lret
lods
jp
cmp
sub
dec
and
mov
push
fnsave
imul
mov
lahf
jae
stos
adc
sar
sbb
ror
sub
or
mov
enter
and
sbb
cwtl
mov
dec
jge
xlat
inc
and
adc
lret
repnz
movb
or
jecxz
mov
push
insb
sbbb
pusha
jl
movsb
sti
pop
lock
aad
mov
aam
mov
fiaddl
mov
loop
push
je
jg
inc
ret
fstps
mov
sub
std
mov
and
insb
fcoms
int
jo
dec
mov
mov
out
fdivrs
dec
outsl
rorb
int
jno
jecxz
xor
dec
push
jp
or
cmp
add
out
cld
ret
ljmp
std
mov
jb
arpl
xor
fdivs
adc
push
in
adc
add
mov
cmp
ljmp
adcl
std
xchg
pop
mov
push
popf
sub
shrb
mov
jne
sbb
pop
out
lods
mov
mov
nopl
rorb
cmp
cld
rclb
je
add
mov
dec
pop
xor
mov
ret
mov
jae
sbb
into
stos
jns
scas
ret
mov
sahf
andl
pop
pushf
and
push
and
iret
jle
gs
dec
cwtl
adc
sti
pushf
ja
sub
insb
fidivrs
fsubp
cmc
fisttps
cmc
sub
xlat
ja
dec
mov
mov
push
dec
ret
fwait
adc
mov
push
fdivs
xchg
ficompl
jecxz
or
das
nop
sub
loope
stc
jmp
xchg
ljmp
adc
push
xor
jg
movaps
mov
ret
push
sarl
sbb
clc
xchg
jnp
xor
cmp
xchg
xor
test
or
xchg
mov
mov
xor
data16
aaa
dec
mov
lock
icebp
and
mov
sub
xor
lahf
xorb
xor
fs
clc
or
pop
shl
push
enter
nop
jns
push
xor
push
les
inc
jb
dec
mov
push
enter
nop
daa
sbb
cld
popa
mov
push
jne
xchg
sti
or
pop
mov
jg
dec
xlat
cltd
stos
dec
fiadds
lock
imul
push
orb
or
push
inc
inc
pop
mov
push
test
mov
imul
or
in
cmpsl
in
aad
cli
inc
and
dec
popa
mov
jp
pop
rcl
sub
rcr
xor
sarb
addr16
push
ljmp
jg
xchg
repz
loopne
pop
pop
loop
mov
das
divb
aaa
int3
mov
mov
push
gs
div
xchg
ficomps
mov
dec
lock
sbb
roll
out
sbb
jp
jmp
or
inc
dec
xchg
inc
push
inc
adc
shrl
daa
or
sbb
push
sub
test
arpl
xor
cmp
ja
add
or
frndint
mov
cmp
xor
adc
inc
sbb
aad
movsl
pop
mov
jne
daa
stos
fs
cli
sub
out
orb
into
cmp
fdiv
lock
sub
pop
or
movsb
dec
jl
ja
mov
xchg
imul
jb
test
lods
adc
jcxz
xchg
movsl
lods
mov
lea
jo
ret
jg
daa
idiv
repz
mov
and
mov
jbe
sbb
dec
out
push
out
ja
imul
in
ljmp
and
inc
cmp
dec
or
fstl
push
cltd
or
sahf
fisttpl
cmp
int
fucomp
mov
push
popa
cld
jno
push
inc
ljmp
jno
sub
ss
jo
jg
stc
movsb
dec
and
lret
jg
sub
or
push
mov
mov
jnp
mov
mov
mov
pop
jmp
pusha
jo
loopne
pop
jbe
andb
shr
add
jb
jae
xchg
adc
stos
incl
std
add
arpl
xchg
imul
mov
in
mov
mov
in
push
stc
cmp
cmpsb
jbe
repnz
mov
dec
sub
push
dec
popl
cmp
popa
add
push
sti
push
jbe
stos
cmp
mov
or
cmp
arpl
xchg
adc
adc
push
cmc
mov
push
sub
lahf
fidivrl
mov
pop
test
lds
jb
mov
adc
push
jge
inc
shlb
xchg
leave
and
cltd
fs
add
sarl
and
nop
nop
mov
xchg
mov
into
sub
inc
sbb
rcr
test
mov
and
fisttpll
jmp
dec
movsb
xchg
cmp
sub
idivl
adc
adc
inc
mov
popa
sbb
mov
rolb
inc
pop
loopne
jnp
xchg
cmpsb
lcall
in
lahf
cmp
pop
test
jo
sub
jo
roll
iret
cmp
and
push
inc
cmpsb
in
inc
inc
sub
cmp
add
jae
les
std
stos
cmc
sahf
and
or
mov
sub
lret
xor
insl
jae
add
pop
sbb
inc
cltd
and
mov
jp
stos
call
fmul
jae
jg
fsubl
dec
push
mov
mov
int3
adc
push
cli
movsb
jge
outsl
push
xchg
imul
xchg
push
adc
jg
cwtl
add
fstpt
adc
xchg
mov
sbb
adc
inc
mov
jecxz
cld
ljmp
les
jge
mov
add
pop
adc
orl
pusha
sbb
and
cmp
jle
int3
mov
mov
andb
cwtl
xorb
jo
repnz
xchg
movsb
and
in
aad
sarl
out
and
and
cmpsl
js
push
and
xchg
in
psrad
mov
xchg
in
test
mov
adcb
into
jno
xor
lea
jne
ret
test
fdivrp
xchg
in
bound
int
add
mov
sti
pmaddwd
lds
popa
sbb
mov
mov
insl
or
ss
xchg
sub
cmp
jecxz
jmp
cmp
filds
sub
sbb
mov
or
cmp
rcll
xlat
aad
ss
xchg
fwait
mov
shrb
insl
shlb
and
out
jne
orl
push
xchg
daa
lods
out
aad
xor
test
jmp
idivb
adc
pop
dec
cld
mov
and
lret
dec
repz
adc
clc
mov
inc
cmp
sub
into
fmull
add
dec
cs
xchg
test
push
das
inc
js
arpl
aad
sbb
inc
jp
mov
jle
dec
fisttps
out
push
out
dec
mov
cmp
loop
xchg
stos
adc
inc
mov
mov
pop
add
mov
mov
mulb
and
inc
xor
dec
pop
jae
inc
sub
sbb
jno
cmp
aas
pop
aad
lahf
fildl
push
fmulp
xor
adc
aas
push
shll
pop
lar
std
jo
dec
and
cmpsb
mov
nop
test
push
push
fldt
cmp
std
push
cld
sti
imul
repnz
insl
test
cmpsb
ficoml
dec
ja
ret
mov
out
push
loopne
out
mov
mov
mov
mov
sub
mov
insb
lods
in
stc
in
mov
jmp
inc
lea
sbb
xor
pop
pop
mov
dec
push
adcb
cmpsb
inc
mov
xchg
ds
sarb
inc
push
stos
and
insl
dec
in
std
mov
sbb
add
andl
fisttps
jecxz
xchg
ljmp
add
gs
pop
shll
lock
sbb
inc
mov
cli
out
mov
inc
and
lods
in
sub
pop
dec
jecxz
and
jg
adc
ffree
fs
rcr
cmp
mov
pop
jo
loop
dec
fmuls
sub
fwait
out
in
sub
aas
fxch
add
mov
out
aas
insb
repnz
rolb
divl
leave
or
cs
pushf
mov
push
add
push
ret
inc
ret
loopne
mov
mov
mov
faddp
mov
in
jmp
sbb
mov
mov
mov
mov
test
dec
jno
sar
xchg
jl
pop
jns
xorb
and
cmc
inc
movsl
jae
arpl
movsl
cld
loopne
ljmp
jge
push
mov
sub
aas
dec
ja
dec
loope
lcall
or
cmpsl
mov
jp
cmc
sbb
rcrl
dec
xchg
mov
lods
iret
imul
mov
fdivrs
xor
lcall
and
repnz
dec
jns
lcall
jno
mov
push
idivb
test
xchg
and
xor
mov
jne
shl
push
add
pop
or
mov
repnz
dec
call
ja
mov
xlat
jo
mov
jbe
pushf
pusha
or
push
xor
fsubrs
dec
inc
data16
and
mov
push
cmp
ficoml
jne
push
test
mov
clc
pop
clc
and
or
lds
cli
add
inc
div
in
aam
sub
mov
sub
push
loopne
sahf
insb
addr16
mov
sbb
negl
fucomip
daa
sub
test
push
iret
and
lahf
mov
ss
ljmp
hlt
push
lcall
add
add
out
iret
jne
arpl
inc
or
xor
leave
pop
jg
pop
das
cmc
or
fldt
out
push
wrmsr
pop
fsubs
outsl
xchg
push
repnz
push
and
cmc
sub
mov
nop
mov
adc
lahf
and
les
dec
push
mov
out
xchg
rcrb
leave
sar
push
sahf
js
inc
mov
popf
mov
pop
or
les
rorl
jno
pop
aaa
xlat
outsl
packsswb
xchg
int
and
xor
dec
sub
add
inc
ret
adc
xor
nop
icebp
fisttpl
fnstsw
pushf
adc
test
jmp
leave
fs
lods
mov
cs
cpuid
xchg
cmp
into
aad
test
xchg
loope
movsb
pop
push
pop
test
inc
add
mov
xchg
cltd
jmp
in
sbb
pop
cmpsl
xlat
std
jnp
pop
add
add
sbb
or
or
sbb
notl
stos
hlt
nop
cmp
nop
mov
int3
cmpl
je
jno
loop
stos
and
testl
out
jecxz
sbb
add
mov
push
rorl
insl
sbb
and
cwtl
mov
pop
inc
cmp
push
ret
add
xchg
notl
xor
js
inc
mov
rcll
mov
add
add
das
out
mov
mov
loope
add
push
push
and
stos
sahf
lock
fnsave
mov
mov
movsb
cwtl
lahf
lret
dec
and
andb
testb
dec
pop
cmp
hlt
negl
cs
repz
test
arpl
fcompp
sub
mulb
sub
push
xchg
mov
mov
jo
scas
stos
dec
adc
and
xor
inc
test
icebp
xchg
xlat
imul
sub
bound
cmp
addr16
mov
mov
arpl
int3
loope
push
fists
mov
cld
inc
lds
pop
mov
movsb
in
popf
pushf
inc
or
add
mov
push
sti
xchg
and
fcoms
add
inc
test
pop
adc
mov
mov
jb
arpl
clc
loopne
ja
jno
nop
out
pop
fdiv
jecxz
fadds
mov
adc
mov
sub
xchg
xor
inc
sbb
push
lcall
iret
pop
or
sbb
adc
xchg
adc
push
lds
jle
pop
pushf
mov
sbb
jae
pop
movb
dec
outsl
or
mov
push
aad
or
jecxz
sbb
cltd
das
andl
adc
or
pop
loopne
lret
test
adc
insl
and
les
mov
push
mov
fldl
ds
adc
lcall
das
call
jnp
ds
mov
pop
pushf
cli
fldl
mov
les
pop
fs
cltd
sbb
dec
inc
push
cmpsb
pop
inc
iret
pop
pop
dec
mov
xor
push
imul
push
push
push
test
lret
push
adc
mov
mov
cmpb
jl
out
dec
adc
lods
lods
jmp
aad
pop
sbb
push
iret
in
outsb
mov
bound
xor
call
mov
nop
inc
loope,pt
lods
sbb
gs
cmp
xor
movl
stc
add
xor
rorl
and
divl
lahf
ds
jns
in
dec
sbbl
sub
pop
outsb
mulb
imul
dec
dec
dec
mov
xchg
imul
pop
adc
push
pop
das
push
pop
shlb
adc
lock
jne
enter
in
inc
jo
or
pop
sbb
cmp
popf
cmpsb
sub
out
rclb
aas
mov
enter
push
cli
jns
sub
xchg
xchg
mov
add
mov
push
fcmovu
inc
mov
or
imul
sub
dec
fwait
mov
xor
add
inc
fnstcw
pop
sti
insl
outsl
idivb
push
push
sub
dec
jnp
mov
inc
int3
cmp
stos
mov
mov
out
jg
in
mov
loope
adc
loope
sbb
pop
xchg
test
and
sldt
lret
scas
cmp
mov
inc
push
scas
stc
sub
sarl
fistpl
sarb
or
dec
lods
inc
fidivrl
jp
repz
cmp
and
xor
mov
scas
scas
ret
negl
add
jmp
mov
test
and
andps
mov
repnz
push
jmp
sbb
fdivrs
pop
cmc
movsl
sub
ljmp
xchg
mov
daa
pop
xor
sbb
push
xchg
insl
push
jae
xor
push
lock
sbb
into
cmp
push
les
cmp
or
xlat
sar
fwait
ja
xor
and
mov
movsb
mov
cmp
push
mov
cmpsb
out
or
out
pop
and
in
dec
pop
or
add
sbb
retw
rclb
nop
xchg
mov
cltd
dec
popf
xchg
das
cmpsb
test
and
push
into
lods
fsubl
arpl
rcrb
xchg
dec
xor
xchg
icebp
fs
push
and
ret
inc
jns
ja
mov
int
cmpsl
xchg
pop
xor
jecxz
fidivrl
stos
cmpsl
fldl
adc
sub
pop
add
in
nop
xor
push
push
inc
mov
push
inc
dec
stc
es
daa
repz
mov
cmp
lret
stc
ljmp
std
mov
mov
fsubl
sub
or
or
and
into
out
sub
sub
stos
lahf
iret
sub
addr16
mov
pushf
push
imul
xchg
sbb
jno
cmp
inc
mov
fsubrl
ds
call
push
loope
jl
mov
inc
add
add
jnp
xor
add
dec
sarl
popa
adc
jle
dec
mov
add
cmc
push
int
push
mov
adcb
incb
dec
xor
enter
mov
add
test
pop
sbb
jo
push
or
out
sub
inc
test
insl
inc
or
popf
adc
lods
push
push
icebp
sbb
imul
mov
lahf
and
dec
fldcw
ljmp
outsb
add
fs
mov
push
xchg
and
imul
inc
adc
jmp
lcall
gs
pushw
pop
mov
lods
jle
jb
popa
xor
in
in
arpl
adc
mov
xchg
adc
xor
pop
icebp
dec
mov
insl
inc
mov
cmp
inc
sarl
xchg
inc
sub
sub
or
jmp
movsl
inc
mov
cmp
push
and
insl
movsb
jno
add
lea
xor
push
mov
cs
jl
icebp
fwait
test
sub
or
push
pop
or
jo
pushf
dec
movsb
pop
pop
shr
popa
lea
or
cli
jge
shrb
mov
ljmp
adc
int3
scas
mov
inc
sbb
lahf
stos
adc
dec
call
loope
adc
jge
mov
add
mov
mov
jle
jmp
movsl
pop
sub
jns
xchg
cmp
ss
cmp
sub
outsl
push
cld
lods
out
enter
inc
or
js
pop
sahf
frstor
fst
mov
mulb
jae
enter
std
fisubrl
or
cmpsl
mov
add
mov
in
aam
lods
mov
outsl
xor
add
mov
pop
jb
in
fnstenv
pop
xchg
adcl
fmul
fisubrs
mov
pusha
divb
dec
dec
mov
push
mov
pushf
mov
in
ffreep
add
ficoms
mov
push
cmp
jmp
lret
call
cld
jns
sar
sbb
fcmovu
leave
nop
pop
cmc
stos
repnz
in
clc
icebp
iret
in
lcall
xlat
ja
fmuls
push
cltd
jl
mov
adc
jmp
cs
scas
dec
loopne
pop
push
loop
push
mov
dec
pop
cld
pop
leave
mov
mov
and
or
sbb
movsb
fisubs
jmp
dec
bound
stos
and
cmp
test
push
dec
nop
xor
add
pop
shll
mov
into
in
push
dec
mov
mov
sbb
cltd
mov
ret
mov
fisttps
cmp
fidivl
repnz
por
arpl
xorl
pop
iret
push
addr16
cmc
dec
data16
mov
mov
mov
cli
jae
outsl
mov
in
dec
add
mov
mov
sti
pop
cmp
in
mov
adc
xchg
push
imulb
rolb
dec
pop
cmpsl
add
cmpsb
jbe
incl
test
push
fildl
mov
dec
hlt
cmc
mov
into
out
mov
mov
mov
clc
lock
cmp
xchg
lahf
push
leave
imul
ss
out
or
ror
imul
and
movsb
insl
les
out
stc
out
xlat
sbb
cwtl
out
pop
daa
sub
stos
jns
or
pop
jno
icebp
pop
lods
mov
cmp
fs
inc
sub
jg
push
popf
pushf
add
je,pt
adc
mov
std
and
and
out
jl
dec
adc
repnz
les
jge
lahf
mov
push
push
rolb
push
lock
add
enter
stos
out
icebp
push
mov
js
pop
jbe
insl
rcrb
outsb
jb
cld
push
decl
loopne
adc
sarl
sub
mov
sub
lcall
mov
or
ficoms
mov
and
decb
pop
into
dec
in
pop
and
cmp
ljmp
loop
sarb
add
adc
mov
fdivrl
fisttpll
jns
mov
cmp
xorb
iret
movl
adc
imul
add
nop
pop
pusha
insb
jmp
push
pop
lds
in
sbb
push
filds
mov
sub
sbb
push
loop
imul
push
mov
lods
mov
add
adc
subb
and
ret
push
int3
repnz
push
sbb
push
loop
or
mov
push
mov
imul
jno
inc
adc
lods
sbb
fucomip
ret
xchg
xor
dec
xchg
dec
stos
mov
push
mov
in
xor
xchg
mov
shrb
push
xorl
pop
and
mov
lods
rcrb
imul
ret
leave
test
xor
lahf
jmp
mov
sub
cld
cmp
jecxz
out
jg
push
inc
ljmp
stos
jg
dec
cmp
and
movsb
and
in
cmpsl
nop
jb
gs
sti
mov
fsubs
iret
lods
lock
jmp
xchg
filds
sub
in
mov
push
call
sub
das
scas
dec
dec
jg
leave
push
out
cmp
repnz
cmc
loope
pop
pushf
jae
mov
ljmp
ljmp
out
aad
test
jmp
mov
pop
lds
aas
das
adc
les
jg,pt
xchg
leave
cmp
int3
sbb
pop
adc
orb
xchg
or
cmpsl
sub
mov
jo
pop
popf
insb
xchg
mov
sahf
xchg
adc
jae
jge
outsl
push
xor
popa
test
stc
sbb
adc
out
jb
xlat
adc
xor
ja
jle
and
sub
mov
mov
pop
test
fists
icebp
sub
enter
pop
xor
push
xchg
rcr
stos
in
lea
addr16
lret
push
loop
jp
add
cwtl
sub
cmp
lods
pop
push
dec
ja
into
negl
inc
jbe
fbld
jle
js
mov
dec
mov
or
mov
repnz
cmp
xchg
add
xchg
lret
int
sub
sti
scas
mov
cmpsb
out
mov
stos
mov
sub
aam
int
cmp
in
aaa
ss
addr16
outsl
adc
sub
pop
pop
mov
outsb
inc
mov
cwtl
pop
mov
ljmp
insb
mov
lret
fwait
push
dec
jecxz
dec
jb
cmp
xor
mov
movsb
dec
int3
adc
aas
pusha
jge
cmc
inc
xor
es
insl
dec
nop
adc
adc
pushl
pop
or
popa
fbld
arpl
stc
pop
lret
or
cmpl
scas
data16
fwait
imul
iret
mov
pushf
and
mov
insb
rcl
mov
push
and
loopne
jo
std
xor
xchg
daa
es
lea
mov
dec
out
ret
insl
sub
and
inc
imul
imulb
shl
inc
jle
test
loopne
fsub
adc
fmuls
jecxz
xor
imul
inc
dec
jg
add
cmp
sub
xorl
cmp
test
push
ret
jns
std
or
mov
adc
adc
ljmp
pop
inc
outsl
imulb
jp
push
mov
popf
out
test
bound
dec
bound
imul
fwait
dec
mov
mov
out
aam
enter
sbb
inc
xchg
fdivrp
push
mov
int
xor
inc
or
pop
movl
push
cltd
cmpps
fs
test
imul
xchg
ja
cwtl
dec
mov
ret
and
and
jno
jge
dec
jmp
and
mov
or
push
adc
sub
cmpb
cmp
scas
popf
call
sub
dec
xorl
lret
andl
xchg
sarl
lahf
fwait
sub
cs
hlt
cmp
cs
jnp
adc
jne
in
pop
shlb
lahf
push
imul
and
fwait
cmp
daa
sub
inc
popf
aas
dec
cmc
sub
mov
pop
dec
out
addr16
fcoml
pop
ss
push
push
cli
and
mov
sub
ss
fsubl
xor
popa
cmpsb
outsb
mov
inc
mov
add
mov
add
scas
pop
das
out
out
sbb
ljmp
mov
dec
xor
sbb
mov
filds
inc
push
push
push
or
scas
inc
pop
popa
int
sahf
sbb
add
xor
jo
jp
mov
ss
test
ret
mov
push
mov
mov
sub
das
push
jns
lretw
xor
in
fstp
lret
jo
inc
push
js
sub
pop
cmpsb
aam
pop
xchg
fsubrp
mov
add
or
xor
or
xchg
test
jo
into
jge
push
aaa
addr16
mov
lret
jo
add
push
ret
outsb
adc
mov
loop
add
mov
pushf
in
sbb
dec
lods
fldenv
jo
xchg
ljmp
fcoml
sti
cli
dec
jecxz
xchg
or
and
filds
jecxz
dec
enter
hlt
js
and
dec
in
pushf
dec
jnp
ljmp
add
pop
shll
add
pop
aas
add
jnp
sahf
sub
iret
das
pop
es
fcomi
adc
inc
aaa
lock
push
sti
loop
adc
dec
cwtl
mov
inc
movsb
mov
cld
loopne
mov
inc
sahf
rolb
testb
xlat
inc
std
and
aad
incb
cmp
ss
int
inc
aas
ret
int
cmp
mov
sub
and
inc
pop
pop
test
xacquire
daa
cltd
push
divl
sti
mov
js
xchg
mov
out
lock
sub
aad
add
jo
ret
mov
jnp
xor
gs
fstps
cmp
jmp
add
clc
push
or
and
xor
jno
fwait
stos
cmpsl
sub
add
mov
push
cmp
xlat
je
aad
ret
mov
in
sbb
cli
and
adc
jle
jecxz
scas
inc
mov
xor
push
jge
repz
icebp
pop
or
lods
adcl
test
aad
xor
mov
adc
dec
daa
outsb
fsubrs
xchg
arpl
or
mov
push
and
jmp
mov
xchg
fdivrs
add
cmpsl
iret
push
jg,pn
adc
mov
jp
aad
jmp
cmp
pop
xchg
xor
push
mov
xchg
cmp
lock
ss
pop
ficoms
aad
aam
daa
sbb
aas
and
sub
sub
ds
jmp
imull
fidivrl
int
push
fs
lds
out
adc
pushf
imul
arpl
nopl
mov
scas
xor
pop
lods
push
sbbb
sub
stos
clc
mov
rcr
pop
jge
cltd
pop
add
dec
xor
scas
jne
js
dec
ret
aaa
add
adc
pusha
jmp
loop
inc
push
push
cli
cmp
mov
out
cwtl
cmpsb
mov
hlt
data16
or
mov
aam
fs
mov
fwait
out
loope
outsl
pop
pop
clc
cmp
or
adc
add
imul
aad
adc
bnd
sub
shll
and
enter
lock
push
arpl
aad
lea
jne
mov
pop
mov
jp
adc
loopne
jns
xchg
lods
hlt
jle
dec
in
clc
jle,pn
mov
inc
sbb
clc
push
push
andl
add
cmp
popf
pusha
call
or
es
jmp
aaa
jb
dec
dec
dec
pop
or
dec
addr16
stc
test
mov
xchg
jns
or
mov
dec
ficomps
mov
pop
ret
jns
or
out
xchg
add
jae
scas
jecxz
in
add
bound
fidivrs
sub
arpl
std
pop
loopne
lods
or
pop
lret
loop
sub
ficompl
xchg
and
stc
out
xchg
push
xor
mov
jg
mov
pop
adcl
outsl
adc
xchg
inc
scas
xchg
in
push
cli
jns
aad
cmp
and
push
scas
mov
sbb
dec
xor
sahf
jp
mov
mov
cmp
aad
int3
inc
sbb
cwtl
lret
mov
jae
sbb
jb
jbe
mov
adc
test
mov
js
inc
sub
imul
adc
inc
fldcw
pop
fimull
sbb
mulb
orl
es
lahf
gs
stos
adc
out
mov
movl
sub
fisttpll
jle
push
ss
scas
sbb
sahf
or
dec
jecxz
scas
sbb
jae
sahf
loop
xchg
fiadds
stos
out
dec
addr16
inc
xchg
xor
loope
adc
xchg
and
mov
call
fwait
jnp
test
xchg
pop
push
xor
mov
mov
push
pop
add
add
ljmp
movsl
imul
jne
out
jne
repz
stos
sub
imul
add
push
into
jmp
dec
or
cmpsb
test
test
imul
fadds
mov
out
decl
adc
repnz
ret
pop
lahf
pop
or
xor
loope
push
jo
add
push
and
add
or
loope
mulb
je
out
mov
dec
pmaxsw
insl
add
fnstsw
aam
sub
ss
call
idivl
loop
cwtl
inc
xchg
fmul
jno
xor
sub
sbbb
xlat
mov
push
xchg
bound
xchg
pop
fdivrp
pop
push
shlb
int3
add
cwtl
or
popf
and
notl
aad
lahf
aad
dec
xchg
and
mov
lret
repnz
jmp
pusha
test
aas
gs
push
xor
xor
push
test
push
out
pop
push
inc
call
xchg
jl
fisubs
pushl
xchg
jno
cmc
sarb
enter
rcll
and
mov
jbe
fisubl
or
dec
dec
xor
ret
or
data16
dec
adc
adc
lea
pop
cltd
into
inc
pop
add
aad
and
xchg
int
pusha
xchg
jp
push
lock
jno
adc
mov
mov
sar
iret
mov
pop
ljmp
arpl
inc
iret
and
cwtl
out
dec
push
mov
mov
fwait
cmp
mov
mov
dec
mov
and
arpl
push
imul
outsb
jge
fwait
jecxz
lea
in
cltd
movsl
bswap
inc
repz
test
sbb
mov
fnsave
cld
mov
adc
dec
mov
mov
lea
mov
outsl
push
jbe
sub
stos
add
mov
cmpsb
add
add
cmp
imul
jecxz
inc
mov
fcompl
jb
out
jg
adc
push
icebp
cmc
mov
ret
sub
cmp
movsl
fisubrs
shlb
mov
jle
xchg
jnp
lahf
xchg
pushf
outsb
inc
cmp
scas
test
addb
scas
jae
xor
pop
sub
pop
adc
push
mov
push
sub
pushl
xor
dec
inc
and
scas
mov
subb
push
ds
pop
pushf
xor
mov
roll
cld
ds
outsl
and
jae
dec
pusha
push
popa
pop
lahf
fwait
outsl
sub
lea
out
mov
push
adc
in
in
mov
ret
mov
and
mov
nop
pop
sub
xlat
mov
cmc
pop
and
cs
leave
sarl
adc
fimull
add
inc
es
sbb
inc
fcomi
sarl
xchg
bound
jmp
push
jg
adc
outsb
jns
cmp
add
out
out
aas
sbb
mov
xchg
jmp
dec
hlt
sbb
push
test
mov
adc
sub
lods
loopne
divb
adc
xchg
or
adc
push
jb
jbe
shlb
fiadds
ret
mov
mov
loopne,pt
pop
mov
movsl
and
fldl
inc
jo
mov
cltd
mov
stc
add
sub
mov
inc
jb
pop
pop
cmp
ficoms
movsl
fdivl
cli
insb
bswap
adc
cmp
sbb
add
lods
dec
call
dec
icebp
pop
mov
pop
sub
repz
scas
xor
adc
movsl
dec
jmp
fcomip
mov
or
pop
mov
ss
mov
lret
jle
jecxz
sub
adc
repz
push
inc
inc
dec
lock
push
inc
aaa
adc
xor
mul
mov
push
add
inc
mov
hlt
lods
shrb
push
cmp
or
mov
test
lods
pop
mov
pop
push
jb
call
jbe
xchg
das
sub
pop
mov
data16
in
jb
scas
ja
fildll
mov
es
sbb
lods
loop
pop
xchg
jne
adc
sub
pushf
inc
and
cs
in
mov
sbb
fs
xlat
cmp
pop
sahf
and
cwtl
xor
pusha
outsl
into
xchg
add
nop
das
cmp
test
test
mov
push
mov
cmc
shlb
insb
outsl
cmp
lret
insl
repnz
and
xor
mov
jo
outsl
fldl
add
mov
fldcw
mov
mov
enter
add
xchg
aam
push
imul
mov
icebp
out
int
pop
aas
ret
sub
dec
cmc
and
pop
mov
add
test
stos
cmpsb
ret
jo
rolb
adcb
call
xlat
addl
fwait
dec
dec
add
xchg
xchg
loop
mov
mov
sub
cld
pop
out
xchg
dec
jg
in
xchg
shl
adc
pushf
ljmp
xorb
add
dec
or
movsb
enter
xlat
or
inc
and
ret
inc
js
imul
ds
sub
in
mov
xlat
les
addl
push
mov
arpl
push
sub
add
lea
and
pop
xlat
stos
jg
or
fdivs
push
sub
cmp
dec
pushf
sub
xchg
push
adc
push
dec
or
dec
sbb
mov
mov
icebp
lret
push
xchg
out
lods
add
mov
mov
mov
es
insb
inc
cmp
sbb
repz
inc
test
insl
lods
sahf
mov
int3
dec
pop
mov
popf
lahf
xor
mov
out
ficoms
dec
jbe
xchg
xbegin
push
inc
jg
ret
jg
mov
je
rolb
fsubl
pushl
push
jae
jmp
int
inc
xor
andb
dec
jo
dec
mov
mov
inc
sbb
xor
cmp
push
cs
sbb
stc
inc
inc
inc
pop
out
xchg
js
mov
and
jns
dec
add
or
inc
pop
mov
std
pusha
jg
xchg
ss
sub
push
dec
mov
pop
cmpsl
addr16
cli
divl
sbb
mov
inc
cmp
rcrl
sub
pop
in
out
pop
xchg
jecxz
push
cltd
in
mov
mov
sbb
adc
mov
sbb
add
push
rclb
mov
adc
dec
aas
pop
out
insl
mov
lods
cmpsl
imul
lcall
push
or
inc
movsb
js
mov
cmp
notl
nop
jle
xlat
adc
call
cmp
pop
mov
or
push
lret
fstpl
inc
or
or
rol
cmpsb
mov
or
jno
xor
aas
xchg
inc
xor
adc
icebp
in
or
outsb
xor
pop
cmpl
jl
cmpsl
popf
bound
sbb
clc
pusha
nop
xbegin
xor
push
out
test
sub
push
jmp
mov
lods
cmpsb
lahf
in
cld
nop
sti
imul
in
sub
es
stos
jmp
test
inc
scas
mov
cli
mov
icebp
mov
out
lock
or
push
cld
push
cs
sti
fcomip
pop
add
inc
push
dec
popa
test
jo
sub
mov
mov
mov
mov
rcll
shll
jo
icebp
push
fs
xlat
mov
mov
sbb
push
fdivrl
in
mov
ljmp
push
leave
ficoml
outsb
sub
frstor
scas
sub
jmp
aam
loop
pop
out
add
push
lods
repnz
add
xor
int3
dec
dec
xchg
fdivs
adc
xchg
push
lock
cs
insl
dec
mov
fidivrs
sub
jns
fsubrl
loop
aas
lret
sbb
pusha
repnz
xlat
push
jb
inc
sahf
pusha
inc
and
push
mov
insb
mov
pop
or
fsubs
cmc
adc
shll
add
lret
mov
add
jle
dec
lahf
clc
dec
sbb
jge
ljmp
imul
add
add
cs
push
orb
andb
in
cmp
cmp
adc
jnp
push
cmpsb
repz
mov
inc
lahf
cltd
push
xchg
aaa
push
xor
jo
lock
test
cwtl
dec
lret
or
or
mov
ss
mov
stos
dec
sub
int
inc
aas
fmuls
loope
in
adc
add
mov
mov
subl
lods
sbb
syscall
repz
or
push
cmp
pxor
orl
jnp
xchg
add
mov
ret
fistpll
fistl
inc
lods
push
stos
les
sbb
push
pop
cmp
jl
dec
and
sub
rcll
mov
cld
movsb
enter
aaa
pxor
push
push
and
xchg
inc
push
dec
dec
inc
fiaddl
ljmp
nop
pop
and
jns
fnstenv
push
xchg
loopne
dec
and
and
jecxz
mov
push
fisttpll
jne
jecxz
cltd
sbb
lret
out
out
lcall
pop
lcall
and
stos
shl
mov
sbb
das
shrl
mov
mov
out
gs
movsl
push
sbb
mov
jae
rol
add
into
sbb
sbb
test
jno
andb
rcrb
jmp
repz
mov
sub
rcl
repnz
cld
mov
scas
in
das
aad
inc
andb
mov
popf
fisttpl
ret
pusha
mov
test
pushf
scas
jge
pop
int
dec
pop
jno
test
adc
sbb
xlat
pop
xor
mov
imul
and
jp
gs
dec
mov
inc
data16
dec
jae
das
insl
into
and
xchg
out
jo
and
or
and
jbe
mov
adc
negl
pop
dec
cwtl
loope
cwtl
daa
cld
jns
jecxz
addr16
pop
lcall
mov
jl
mov
ss
inc
jno
xor
clc
and
sbb
int
fimuls
insb
call
pop
sub
imul
call
cltd
int3
bound
int
sbb
pop
fistpl
dec
jl
xlat
ja
sub
inc
jb
xor
cmp
xor
shlb
popa
cmp
xor
cmpsl
push
mov
addr16
and
push
mov
jg
roll
xchg
xor
mov
jp
push
and
dec
loop
mov
xorl
out
scas
pop
push
sub
xor
into
cwtl
mov
jae
pop
mov
aam
cwtl
add
dec
xor
hlt
into
cmpsb
sbb
mov
jl
cmp
and
ret
jl
push
movsl
pop
mov
mov
sub
mov
and
cmpsl
xlat
outsb
jns
das
push
mov
in
mov
cmpsl
pop
iret
movsl
sbbb
and
sahf
or
jo
add
scas
ds
xorb
add
mov
jbe
bound
sbb
lcall
and
test
dec
inc
inc
rol
cmp
fwait
push
in
jle
cmp
inc
test
cmpsl
int
mov
and
ljmp
dec
dec
stc
mov
out
sbb
movsl
jo
sbb
mov
dec
push
mov
mov
jbe
and
jno
out
dec
ret
xchg
shlb
aas
push
pop
mov
inc
dec
fadds
jg
std
inc
rclb
es
jne
jle
add
xor
pop
enter
xor
out
inc
rcl
bound
add
xchg
in
inc
push
and
mov
rolb
ficompl
jb
cmpsl
xchg
inc
aad
loopne
sub
add
push
stos
ficoms
hlt
jb
sti
imul
dec
or
aas
sub
insb
cmpsl
int3
movl
sahf
inc
test
xlat
je
fs
ret
adc
jne
cmp
xchg
lods
xor
fxch
cmpsl
and
xchg
jae
add
jp
pop
lea
mov
bound
mov
sbb
shlb
dec
adc
inc
push
mov
mov
mov
bound
xor
cmp
ds
incl
xor
into
sahf
iret
mov
pop
sti
jo
ja
mov
cmp
lret
add
add
cmp
fnstsw
lcall
mov
mov
mov
push
test
xor
add
push
pop
gs
sub
insl
call
sub
movsb
pushf
dec
inc
out
push
test
xchg
fld
pop
lahf
mov
cmpsb
add
rcl
adc
hlt
aaa
gs
loopne
cs
mov
or
mov
cs
enter
bound
movsb
sbb
mov
adc
xchg
pop
popf
lret
inc
cmp
ds
aaa
mov
das
or
dec
fmuls
jns
stc
cmp
push
push
mov
repz
std
cmp
les
cmpsl
adc
dec
arpl
jp
gs
xor
add
aam
xchg
mov
sub
in
shll
aaa
mov
negb
ret
mov
mov
mov
sbb
jne
cmpsb
jno
adc
sub
nop
xor
cmc
std
pusha
into
int3
addr16
ret
push
mov
inc
loop
adc
test
lock
fidivs
mov
insl
mov
imul
jae
mov
kmovb
push
into
inc
cmpb
push
dec
add
stc
push
mov
xor
xor
shrb
mov
adc
jnp
loopne
push
xchg
lcall
mov
out
rcrl
es
decl
xor
and
cmp
jb
jge
mov
leave
sbb
outsl
adc
inc
aaa
jge
loopne
fcomps
insl
call
movsb
push
cmp
fucom
inc
clc
and
and
jle
dec
or
add
jge
xor
mov
xchg
nop
mov
fs
orb
jecxz
cmpsb
adc
nop
out
dec
cmp
xchg
fdivrl
add
cli
repnz
hlt
aas
xor
daa
mov
mov
or
jge
cmp
test
cmp
adc
cmp
sub
xor
in
sbb
mov
and
jl
mov
fcoms
push
mov
sbb
add
mov
inc
pop
jle
mov
fnstsw
dec
lahf
cmp
jmp
mov
mov
dec
cmc
in
lret
loope
xchg
mov
mov
outsl
jo
or
inc
lock
lahf
sub
int3
int3
mov
adc
fucomip
stos
and
jp
shll
ret
loop
addr16
sbb
push
test
aam
adc
pop
pop
xor
and
sti
inc
mov
sbb
fwait
jmp
out
jmp
pop
adc
and
mov
iret
jbe
push
adc
mov
stos
dec
jbe
pop
add
repz
mov
sub
divl
pop
jae
jge
cmp
out
xor
mov
imul
or
ss
sub
pop
jns
lock
cld
in
push
sti
adc
cmp
mov
out
adc
and
xchg
fistpll
push
inc
inc
push
sbb
int
or
mov
mov
lods
movsl
push
inc
mov
insl
fmulp
shll
push
clc
push
mov
mov
pop
xor
andb
mov
in
hlt
js
mov
shrb
orl
mov
adc
pop
xchg
pop
xchg
test
mov
jp
lods
daa
insl
and
jmp
test
lock
fwait
lret
inc
out
pop
and
mov
xchg
dec
adc
mov
out
mov
fucomip
sbb
dec
pop
idiv
inc
int
cs
jecxz
cwtl
and
lds
sbb
out
mov
out
fists
fs
and
fs
popf
cmpsl
inc
mov
push
aad
sub
inc
mov
adc
data16
pop
mov
fs
fwait
and
add
in
mov
aaa
jo
sbb
jge
icebp
pop
jbe
insb
mulb
ret
mov
jns
es
clc
mov
xor
loop
pop
aas
cmpsb
adc
jecxz
ret
dec
aas
xor
sti
ljmp
int
sbb
inc
mov
ret
test
arpl
movsl
les
pop
push
mov
sub
movl
sbb
dec
dec
pop
push
loopne
or
imul
sub
dec
push
cmpl
in
pop
add
mov
dec
and
pushl
mov
xchg
adc
call
jg
inc
out
dec
lret
push
clc
cmp
and
out
stos
sub
xor
xchg
sarb
xor
xor
test
jb
inc
orb
inc
stos
mov
leave
adc
push
out
and
inc
mov
mov
mov
mov
test
pop
ss
lcall
sub
xchg
mov
xor
icebp
jmp
push
es
out
int3
jne
pop
mov
out
js
sub
jo
inc
cmc
sbb
ret
shrl
sub
ds
movsl
es
mov
das
cmp
pop
loope
cmpsb
add
and
push
sbb
sbb
cmp
pop
jge
cs
sub
mov
inc
fistl
inc
idivl
adc
sahf
inc
mov
sub
cli
dec
inc
jle
cli
imul
mov
test
xchg
incl
bswap
xor
ss
and
pop
mov
xor
sbbb
in
stc
push
lds
stos
dec
fiadds
jge
sti
mov
jp
mov
cs
add
ljmp
leave
lret
lret
repz
jnp
xchg
shr
push
dec
in
cmpsl
pop
mov
dec
fcmovu
cmp
pop
inc
add
mov
mov
sub
sbb
xor
mov
push
scas
push
outsl
mov
dec
dec
dec
inc
mov
jg
mov
stos
gs
mov
mov
nop
jl
and
mov
pop
push
repz
out
pusha
push
mov
jle
insl
in
jb
mov
imul
ret
jge
leave
call
scas
ds
mov
adc
arpl
push
mov
xor
lds
xor
movsb
add
enter
jecxz
pop
mov
pop
hlt
dec
gs
jp
lahf
mov
sub
dec
mov
cmp
lods
pop
test
lret
mov
push
mov
outsl
hlt
push
fcomip
and
notl
jp
and
sub
dec
outsl
iret
loop
callw
pop
mov
pop
mov
test
clc
sub
add
pop
outsb
and
cmp
je
in
insl
es
test
xchg
adc
or
dec
lods
pop
sbb
adc
sbb
adc
orl
mov
movsb
sub
loopne
jecxz
jns
xor
out
lea
loopne
push
mov
and
or
lcall
ja
icebp
test
push
and
adc
mov
mov
ret
adc
lahf
loope
jae
mov
rcl
adc
fisttpl
jmp
pushf
cli
mov
jb
mov
ret
cmp
cmp
jl
out
mov
dec
pusha
lcall
jne
mov
jecxz
pop
punpckhdq
addr16
add
cmp
mov
daa
jns
test
cmp
sub
xchg
stos
mov
pop
cmpsl
test
sub
jmp
pop
je
repz
and
js
int3
jle
xchg
and
lods
iret
xlat
add
ss
lahf
aaa
or
mov
pop
shl
lods
movb
cmc
loope
cmp
or
xor
jg
stc
ljmp
cmp
popl
xchg
stos
nop
outsl
or
adc
mov
pop
mov
hlt
shl
dec
and
jbe
mov
fisubrl
pop
xor
adc
pmaxsw
jno
adc
adc
cmc
mov
repz
cmp
cmpsb
data16
pop
out
and
fstpt
sub
je
jl
leave
nop
clc
jb
movsb
sub
push
test
nop
inc
and
das
je
adc
out
pop
fs
in
out
stos
adc
movsb
movsl
pop
lock
jae
sub
lock
xchg
fucom
push
call
outsb
gs
arpl
imulb
mov
inc
daa
in
mov
mov
test
lret
xchg
jge
sbb
add
loop
sbb
lea
mov
fsts
inc
pop
pop
dec
fisubrs
out
out
dec
push
les
mov
jecxz
add
cld
ficoml
mov
and
mov
mov
mov
gs
push
xor
dec
stc
cmp
shrb
jbe
mov
dec
repz
faddl
push
jl
mov
jg
dec
inc
mov
clc
mov
jge
mov
test
lret
out
lret
push
stc
aas
cli
jmp
inc
dec
movsb
xchg
push
in
jg
mov
cli
dec
daa
inc
adc
or
xchg
fs
clc
or
loopne
cmp
stos
icebp
adc
fsubrs
out
lahf
in
test
inc
stos
add
fmull
xchg
xchg
pop
mov
out
and
jecxz
mov
adc
lret
pop
add
leave
fs
push
div
sub
test
push
outsl
sbb
push
popa
pushf
xchg
inc
aas
mov
and
or
adc
mov
rclb
sub
je
mov
aam
jl
repnz
movsb
mov
jmp
and
sub
add
insb
sub
xchg
and
push
setns
or
mov
movsl
jle
cli
out
clc
ss
jge
es
int3
sbb
sub
dec
test
fisubl
mov
push
jbe
adc
fdivl
sbb
jbe
mov
sbb
les
inc
fcmovnb
mov
mov
push
neg
push
push
daa
mov
out
mov
stos
jo
out
insl
addb
stc
cmp
xchg
adc
sbb
push
fstps
test
hlt
roll
enter
dec
in
mov
and
add
stos
fcoml
xchg
push
cmp
notl
cmp
fcmovnbe
out
add
pop
movsl
pop
stos
loopne
test
jle
dec
cmp
addr16
mov
es
mov
jae
add
or
xchg
outsl
fstl
or
mov
push
lods
jg
pushf
dec
fdivrl
adc
inc
mov
jle
mov
mov
jecxz
xchg
adc
xor
mov
fists
lcall
add
sbb
mov
and
xchg
push
pop
stc
cmp
es
jmp
fidivs
ljmp
sar
push
lock
mov
pop
pop
adcl
ljmp
pop
fwait
subb
std
jns
fwait
lea
sbb
xchg
into
movsl
test
xchg
dec
sqrtps
outsb
test
dec
ljmp
mov
fstps
xor
outsl
lock
xchg
cmp
mov
pop
fisubrs
jo
outsb
dec
add
push
lock
enter
pop
or
fcoml
enter
out
cmpsl
in
mov
jge
stos
push
das
xchg
push
dec
or
movsl
test
mov
movzwl
lea
push
and
pop
iret
mov
cmp
enter
out
adcb
add
daa
adc
adc
hlt
into
push
fldenv
or
push
enter
lods
popf
ljmp
movsb
aad
pushf
mov
sub
int
pop
repnz
nop
out
adc
or
jmp
jno
mov
push
out
test
psubusw
xor
sbb
fisubl
into
pop
lods
add
mov
fndisi(8087
icebp
pop
or
mov
daa
cmp
xchg
ret
lcall
xlat
jnp
add
loop
ja
mov
repnz
and
sbb
lds
jecxz
aam
jae
xchg
jl
and
xor
push
dec
shlb
popf
int
pusha
push
fwait
dec
mov
sbb
imull
sub
popf
scas
cmpsb
test
in
repnz
mov
push
mov
xor
outsl
pop
jge
das
lret
mov
pusha
clc
loope
xor
adc
lods
push
xor
dec
rcll
sub
add
bound
aas
add
xor
div
mov
sbb
insb
enter
loopne
insb
cli
mov
repnz
nop
mov
jl
dec
test
shlb
ret
xchg
or
xchg
fldenv
push
and
fwait
inc
cmp
or
sbb
push
inc
fcmovu
mov
shlb
imul
cs
sub
inc
jae
add
xchg
jne
into
and
mov
fildl
mov
leave
roll
repnz
inc
sarl
push
outsb
mov
into
adc
fsts
adc
imul
mov
subl
lret
dec
inc
jle
xor
aam
push
sbbb
test
mov
jno
sub
mov
xchg
in
mov
adc
test
inc
clc
dec
mov
cs
pop
cli
dec
sub
ret
imul
sbb
aaa
cmp
aam
cmp
sbb
test
insb
clc
and
xchg
add
and
pusha
hlt
sbb
sbb
leave
sub
sbb
pop
cmpl
loopne
and
fndisi(8087
movsl
ja
mov
cld
mov
and
jmp
xor
fcoml
das
xor
dec
bound
fsubr
mov
pop
push
xorb
into
inc
push
cmpl
call
mov
loop
ljmp
adc
add
sbb
loopne
and
sbb
scas
icebp
and
les
cli
push
cmp
push
xchg
jecxz
jle
mov
add
mov
inc
shld
dec
inc
bound
mov
test
pop
push
test
arpl
into
dec
xchg
xchg
jo
xor
hlt
add
fildll
gs
dec
push
pop
push
shll
loopne
sub
sbb
loope
stos
adc
mov
lret
adc
lahf
add
inc
lds
jne
xlat
push
xor
call
or
pop
mov
xor
push
mov
fwait
push
movsl
mov
add
or
pop
or
add
cmpsl
mov
or
xor
clc
adc
nop
sti
jne
lods
idivl
xor
add
ds
xor
insl
mov
push
add
mov
mov
mov
mov
mov
mov
rol
in
scas
push
roll
jno
bound
mov
jle
cmp
ja
xchg
ss
ret
fs
pop
jne
movsl
xchg
mov
xor
and
cmp
mov
jne
mov
push
in
lock
mov
dec
and
gs
or
push
lock
iret
cld
ds
inc
push
mov
xor
lods
orb
xor
aam
stc
insl
push
fimuls
xor
shl
loop
and
inc
mov
and
mov
insb
mov
xchg
mov
dec
in
cmp
jl
enter
mov
push
or
push
js
adc
mov
ja
pushf
mov
sbb
pop
daa
mov
jo
movsl
adc
std
addl
outsl
mov
mov
pushf
rcll
fisubl
fisttpl
rcrb
repz
and
jno
xlat
or
out
addr16
and
pop
sub
test
out
cli
mov
loopne
jbe
dec
cltd
adc
sti
lods
xor
add
imul
xor
push
cmpsb
pop
push
pop
add
cmc
mov
sbbb
inc
daa
jge
mov
aaa
push
xchg
xchg
adc
xchg
lea
in
jno
imul
andl
push
mov
mov
sbb
int3
dec
out
add
add
xor
mov
add
fcoms
dec
mov
mov
lods
push
sub
fwait
nop
xchg
insl
lock
pop
adc
dec
sti
and
mov
mov
les
dec
es
add
xor
addr16
and
ds
stos
xor
adc
fimull
inc
xchg
pop
lods
les
dec
pop
sar
push
data16
aad
ja
int
xchg
pop
repnz
lods
hlt
dec
cli
popf
lock
sbbl
das
cld
mov
jl
sbb
jmp
push
pop
test
cs
rorb
rcr
jp
rorl
jmp
jno
push
fldcw
adcl
cmpl
push
adc
push
gs
divb
mov
in
mov
adc
sub
fimuls
jne
sub
or
stos
scas
jb
in
adc
jmp
dec
jmp
inc
jo
lock
jbe
icebp
mov
fnstenv
pop
shlb
popa
jbe
lahf
jnp
je
add
scas
dec
mov
and
shlb
xchg
fisubs
cwtl
or
sub
andb
test
push
inc
inc
xchg
and
rcrb
sbb
ss
mov
jbe
push
gs
sbb
ret
call
cmp
inc
movsb
dec
je
mov
scas
adc
in
int3
mov
stc
into
pop
stos
pop
outsb
xor
rolb
cmp
iret
cwtl
std
iret
mov
adc
in
in
fstpt
xor
cmpsb
cmp
inc
nop
lret
movsb
and
mov
std
push
push
adc
shrb
bound
cmpl
mov
inc
test
test
shrb
cmp
jno
inc
jge
adc
mov
repz
les
xchg
inc
add
cmp
jecxz
sbb
imul
out
test
cmp
inc
cmp
push
fldt
jo
pop
jle
push
add
pop
pop
cmpsl
popa
fsubrl
lock
xor
or
fcompl
sahf
movsb
test
repnz
xchg
mov
jecxz
cmpsb
ja
iret
xor
test
lea
sbbl
push
andl
xchg
pop
push
ss
imul
rorb
sub
and
clc
daa
cmc
inc
loop
in
sbb
inc
pop
jno
hlt
mov
push
les
push
sub
xor
mov
adc
sub
inc
cli
arpl
sbbl
xchg
inc
mov
insb
out
mov
aad
movsl
sarb
les
pop
add
push
test
icebp
mov
dec
repz
addr16
loop
aam
lods
repz
rcrl
outsb
inc
fcom
out
shr
rcrl
stos
call
jg
ficomps
out
mov
shll
inc
sahf
push
cmpl
cmp
sub
push
mov
xor
xor
stos
xchg
imul
mov
xor
orb
jle
xchg
dec
shrb
lret
mov
sarl
pop
mov
andb
scas
adc
inc
rcr
cmpsb
fcompl
mov
mov
test
sahf
inc
xor
xchg
rorl
in
mov
sub
movsl
nop
xor
pushf
sahf
pop
je
xchg
inc
mov
add
adc
fucomp
xchg
rcrb
mov
shlb
out
test
incb
out
mull
jo
pop
sub
shlb
js
and
dec
lods
jae
xchg
adc
dec
add
mull
and
jmp
test
pop
mov
testl
test
xchg
cmp
cmpsl
mov
negb
fisttpll
dec
or
cmpsl
inc
push
int
int
xchg
inc
mov
push
pushf
fisubrs
push
cs
pop
rcl
xor
lahf
fisubrl
pop
xor
mov
fmull
inc
es
arpl
popf
mov
mov
aas
dec
scas
mov
outsl
adc
sub
pusha
loop
mov
pop
jge
add
xorl
fs
shlb
jl
sarl
cmp
in
push
loopne
sbb
sub
sub
lret
mov
inc
addr16
leave
enter
mov
pop
das
push
jno
movsb
aad
fiaddl
mov
fdivr
pop
imul
pop
daa
cmp
mov
lea
leave
adc
out
jmp
ljmp
jnp
aaa
adc
sarl
inc
repz
in
pop
jl
int3
in
pusha
cmpsb
jb
mov
insl
push
ror
out
push
scas
pop
xchg
mov
lret
add
push
jmp
or
pop
or
xchg
sarl
inc
iret
dec
xor
arpl
xlat
dec
std
decl
aad
and
pushf
adc
pop
pop
mov
fimuls
mov
jno
fisubrl
xchg
bound
lds
push
lret
stc
lods
mov
lcall
mov
sub
jmp
movsl
jbe
jae
pop
inc
mov
adc
add
mov
je
pop
nop
add
imul
and
mov
sbb
daa
ret
ds
pop
jge
push
lea
stos
mov
ss
pop
fs
sti
and
jecxz
push
pop
fnstsw
xchg
je
jae
push
aad
and
cmp
mov
dec
movsb
ja
addb
movsl
out
push
scas
lcall
hlt
enter
pop
cwtl
jge
fbstp
sub
adc
or
pop
into
in
cmp
stc
scas
dec
scas
cltd
mov
stos
pop
ds
pop
pusha
sub
jp
mov
aaa
push
loopne
sbb
rorl
push
sbbl
jmp
rol
stos
pop
push
arpl
in
inc
dec
mov
push
adcl
lods
loope
xor
inc
fcomps
ss
sbb
and
or
ja
xchg
pop
sbb
enter
add
shlb
dec
xor
pop
stos
or
arpl
sbb
and
sbb
lahf
jg
aam
aas
sbb
fs
shll
pusha
or
xchg
scas
pop
repz
bswap
cltd
sbb
imul
xchg
rclb
mov
sarl
cltd
insl
gs
addb
fistps
es
xchg
mov
mov
icebp
dec
xchg
movsb
adc
andb
insb
gs
add
mov
inc
int3
mov
xchg
arpl
sbb
jmp
or
xor
and
fbstp
xor
xor
sbb
xchg
mov
sub
in
sub
cmp
xchg
cmp
popf
xchg
popa
mov
clc
clc
in
or
mov
add
lcall
or
xchg
cs
pop
inc
xor
pusha
es
cmp
push
in
cmp
cmp
or
outsb
sub
sub
loopne
add
repz
fldcw
mov
jle
push
loopne
hlt
out
scas
xor
setns
cmpsl
cld
subb
sbb
mov
pop
in
leave
cmp
pop
push
or
adc
add
jmp
xchg
add
rorb
mov
xchg
testl
inc
enter
sub
mov
mov
lahf
or
inc
push
out
lods
inc
push
and
enter
jg
outsl
jl
out
test
jmp
mov
add
push
or
in
inc
scas
out
add
jge
xor
push
fimull
mov
xchg
mov
jno
loope
mov
pushf
xchg
js
cmp
cmpsb
sbb
mov
imul
js
jae
test
adc
pop
mov
lea
ss
and
inc
and
and
fld
sub
jae
test
test
sub
fs
fwait
pop
fwait
iret
lods
mov
xor
stc
mov
fwait
shlb
test
fdivs
sub
inc
xor
sbb
sbb
pusha
push
inc
cmp
mov
adc
jno
add
cmp
sub
loopne
xchg
add
ljmp
bound
and
stos
inc
push
add
dec
or
out
mov
outsb
into
or
xor
adcl
jl
cmp
int
mov
add
rol
pop
pop
and
sbb
cld
stc
fldenv
fucomp
pushf
xchg
outsb
cld
fwait
mov
mov
pop
xor
ja
add
andl
or
dec
mov
jmp
adc
icebp
inc
test
sbb
pop
cmpsb
xor
push
iret
arpl
mov
and
jnp
xor
push
or
shrb
sbb
pop
arpl
imul
outsb
shrb
hlt
gs
rcrb
mov
leave
fnstcw
adcb
mov
cmp
jle
dec
xchg
stos
xchg
fwait
push
or
add
sbb
call
jl
mov
xchg
arpl
cmc
dec
push
fcoml
mov
movsl
in
mov
push
cli
cld
and
fsubr
orb
dec
or
cli
into
jmp
sbbb
out
xchg
push
add
jnp
gs
cmp
or
mov
movsl
mov
div
es
add
loope
sub
xor
flds
andl
testb
and
aas
inc
jb
into
fisttpl
ljmp
cmpl
loop
push
hlt
sbb
ud2
imul
popf
jns
xor
and
call
aad
cwtl
add
xor
mov
aas
rclb
clc
and
adc
lret
mov
scas
xchg
jbe
adc
data16
xor
or
pop
lret
cwtl
shll
ljmp
loopne
stos
mov
repz
sbb
jp
ja
push
lods
and
lret
jo
adc
lahf
xchg
mov
pop
xor
and
leave
ret
push
xchg
es
and
addr16
inc
and
push
cmp
lock
lods
idivl
cmp
dec
and
in
ja
cmpsl
in
pop
lds
mov
icebp
in
cmp
and
int
sti
inc
mov
stc
mov
dec
dec
popa
cs
in
xchg
lods
out
push
jmp
repz
jne
mov
mov
dec
jb
pop
cmpsb
and
push
ja
ss
mov
add
rolb
fidivl
mov
adc
pop
lods
notb
lea
stc
loope
rcrl
cs
out
adc
lods
cmp
adc
out
push
push
mov
mov
pusha
into
imul
arpl
and
xor
dec
hlt
sbb
movsl
and
mov
adc
lret
xchg
sbb
mov
rorl
adc
cli
push
jp
sub
jo
jnp
mov
ds
sahf
mov
decb
sub
cltd
loopne
push
add
pop
xor
mov
test
inc
mov
inc
int
call
xor
enter
fiaddl
xchg
dec
push
cmc
xchg
shrl
mov
sbb
aad
push
xchg
inc
add
xchg
or
sub
dec
cli
add
and
out
mov
push
out
xchg
test
arpl
and
cli
fcmovb
cmpsl
bound
cmp
xlat
repnz
ja
rcll
ljmp
lods
and
jae
data16
insl
aas
pop
mov
or
inc
fistpl
inc
es
stc
mov
loop
dec
lock
sarb
test
ss
std
fcmovbe
and
popf
mov
jg
je
hlt
bound
add
jecxz
shll
sub
test
mov
pusha
sbb
cmp
or
imul
add
mov
push
sub
mov
mov
insb
repz
or
xor
pop
clc
sbb
adc
in
push
outsb
mov
pop
sbb
mov
adc
push
int3
ret
pop
lods
rclb
adc
into
mov
and
dec
test
mov
stc
xor
push
shlb
and
inc
ja
nop
sub
sbb
bound
dec
je
inc
adc
push
cs
shll
leave
jbe
xlat
fiadds
cmpsl
mov
mov
loopne
cmpsl
popf
pop
pop
cld
mov
xor
mov
idivl
in
mov
xor
xchg
fimull
jne
push
leave
dec
add
or
and
ret
leave
sub
or
aas
cli
mov
ret
pop
mov
mov
icebp
cmp
mov
scas
xchg
pop
jmp
pusha
push
mov
push
enter
pop
hlt
and
add
dec
dec
dec
ljmp
icebp
push
std
scas
mov
dec
lods
mov
fwait
stos
and
iret
ja
push
out
cmp
imul
je
outsb
pop
iret
aam
inc
es
outsl
mov
dec
ljmp
out
cmp
xchg
inc
test
and
mov
xor
addr16
xlat
test
sbb
push
xor
icebp
sub
jmp
pop
jmp
aad
insb
jg
push
inc
sbb
int3
jne
cli
inc
popa
dec
sahf
movsb
mov
mov
pushf
mov
or
cmp
or
arpl
and
or
andb
and
inc
mov
push
out
push
push
mov
cmpsl
push
call
jecxz
cmp
aad
inc
jl
cmp
repz
inc
mov
das
or
xlat
mov
add
add
jg
xor
add
push
inc
mov
cmpsl
popf
fsubp
call
jl
sbb
in
idiv
lea
push
repz
roll
out
mov
xrelease
inc
or
pop
push
ret
xchg
ret
in
cmc
pop
push
in
sub
xchg
xchg
test
mov
push
xor
ss
pop
ja
add
jl
xlat
fdivr
arpl
jp,pt
adc
mov
out
sarl
ficoms
je
sub
or
xor
cmpsl
lods
insl
scas
mov
mov
imul
dec
out
push
aad
xor
mov
lods
xor
mov
lods
mov
aas
inc
push
mov
daa
scas
bound
pop
adcb
xchg
ja
movsl
popw
jne
loopne
fmul
imul
adc
test
lcall
in
repnz
std
enter
xor
aam
dec
push
add
popf
adc
mov
pop
push
fisubrs
lea
movsb
sub
xchg
lret
xchg
push
cmp
imul
and
push
test
xchg
add
popa
insl
jmp
sub
insl
cmp
pop
cld
adc
in
sub
inc
cmp
mov
push
imul
xchg
enter
sti
int
or
jno
sti
inc
add
jp
lret
adc
insl
xor
das
push
ret
lahf
xor
cmp
pop
sbb
outsb
xchg
jo
data16
lret
push
lock
adc
sbb
nop
js
xchg
clc
pop
ret
lcall
in
inc
pop
addr16
sub
mov
data16
mov
dec
mov
popa
mov
sbb
pop
inc
in
icebp
jnp
and
pop
pop
sbb
dec
push
or
filds
in
dec
add
je
das
sbb
jnp
pop
js
push
stc
and
mov
add
jmp
inc
outsl
das
cmp
xchg
mov
mov
xchg
lock
xchg
sub
test
rorl
pop
sub
pop
jge
out
mov
in
sbb
and
or
sbb
and
push
sub
push
addl
mov
pop
sub
mov
cmpsb
dec
pop
imul
int3
or
or
test
sbb
push
mov
icebp
push
mov
pop
pop
in
push
fcmovu
cmp
and
inc
xchg
xor
int
lods
or
outsb
stos
popa
inc
cli
lods
loopne
aam
push
int
data16
mov
mov
test
mov
aad
dec
mov
enter
cmp
jnp
mov
push
mov
aad
inc
jp
xchg
xor
into
inc
shlb
push
call
repz
sbb
loope
rorb
push
sub
out
jae
sub
xchg
fadd
or
add
fistl
lods
or
push
inc
scas
mov
and
incl
ss
imul
aad
add
clc
jb
inc
pop
out
push
lahf
cmp
popa
pop
nop
int
mov
push
jne
test
arpl
mov
cmc
adc
adc
add
adc
jne
aam
stos
sub
rcrl
scas
xlat
mov
sbbb
imul
rolb
lods
loop
notb
fistps
sub
fstl
hlt
push
pop
lds
in
cld
add
jp
cmp
dec
sub
loopne
rcrl
mov
push
dec
sbb
shl
jb
pop
je
mov
jmp
lock
jmp
dec
rcrb
adc
and
cmc
pop
ficoml
pop
mov
ljmp
fdivr
mov
adcb
subb
sub
or
mov
dec
push
mov
sbb
aam
sub
cmpsl
pop
lods
jg
dec
lret
mov
cmp
cmp
movsb
push
inc
mov
leave
mov
lds
jmp
sbb
lret
scas
inc
mov
loopne
cmp
test
in
pop
jb,pn
add
enter
repnz
pop
jb
inc
jecxz
jg
xchg
sub
out
mov
pushf
es
mov
lahf
push
mov
xchg
clc
movb
in
nopl
xchg
mov
out
xchg
xchg
jbe
add
xorb
push
jns
hlt
les
imul
mov
loope
pop
jbe
sbb
jl
xor
dec
popa
int3
cmp
pop
pop
and
jnp
loop
push
in
test
fiaddl
or
jne
mov
push
scas
mov
and
ret
mov
out
fdivr
sub
push
mov
cmp
std
rep
inc
fstpl
aas
je
xchg
push
mov
fstps
sbb
and
negl
imul
or
mov
outsl
push
sbb
mov
sbb
in
add
sub
inc
outsl
lcall
mov
lahf
popf
sub
icebp
jbe
roll
jns
dec
dec
sbb
mov
js
ficoms
sarl
jg
pop
rcrb
mov
mov
xor
push
or
pop
inc
jge
push
pop
jae
fnstenv
mov
adc
add
pop
rorb
insb
push
ss
adc
fstl
ja
dec
pop
cli
sbb
loopne
aaa
and
insb
push
mov
inc
popa
cmp
out
nop
or
aas
nop
push
lret
les
aad
movsb
jecxz
xchg
mov
loopne
test
jmp
aas
dec
shll
div
stos
daa
sbb
lds
stos
dec
call
fucomi
jge
and
sub
fdivrp
mov
sub
push
xor
insl
mov
hlt
add
mov
sub
mov
push
add
inc
sahf
xchg
jno
pop
enter
rorb
push
lret
and
xor
push
cmp
std
push
jns
sarb
fwait
lcall
incl
mov
inc
push
cwtl
jge
sbb
or
pop
cmp
sarb
dec
sbb
imulb
out
out
jle
in
in
jnp
jge
ljmp
mov
lods
fs
call
mov
shlb
test
inc
out
pushf
add
mov
add
push
jge
xor
mov
jl
lcall
cs
pop
adc
xor
imul
xchg
jle
jns
cmp
mov
pop
dec
popf
xchg
sbb
jecxz
insl
jbe
jg
pop
add
outsb
mov
movsl
adc
inc
or
cmovp
iret
hlt
sarb
or
mov
sti
lods
and
add
add
nop
lods
mov
and
movsb
mov
stc
aas
movsl
mov
out
add
ficoml
movsl
dec
pop
movb
adc
sarl
jbe
or
mov
push
das
jecxz
or
mov
cwtl
mov
and
aam
cltd
popf
xor
gs
nop
sbb
popa
push
in
mov
insl
mov
lods
loop
mov
dec
pop
shrb
fimuls
out
mov
push
cs
rcll
adcb
test
xchg
jmp
sub
jns
or
push
stos
xchg
stos
mov
cltd
sbb
cmp
push
daa
aaa
divb
or
das
add
add
stc
cmp
mov
fs
mov
arpl
mov
xchg
clc
jno
fstp
sub
repnz
xchg
cmpps
int3
movsb
mov
mov
sbb
rcrl
pop
mov
scas
jbe
loopne
je
std
fldt
pop
movsb
xor
cmp
sarb
jecxz
ja
jne
xor
mov
stos
or
inc
sbb
inc
clc
imul
lods
add
loop
xchg
push
cmp
jns
lcall
out
mov
sti
sarl
bound
mov
popa
jmp
xor
sub
mov
push
mov
popa
mov
in
loopne
push
loope
sub
int
dec
add
jno
inc
sub
lock
pop
cmc
xchg
les
rorl
pop
push
test
dec
adc
sbb
iret
jo
push
pushf
lahf
mov
gs
insb
iret
sub
sbb
mov
mov
int3
or
fstpt
cwtl
pop
int
add
sahf
mov
lret
xor
call
sar
ret
pop
orb
in
mov
iret
shll
dec
jbe
push
inc
mov
jo
sub
stc
imul
or
ror
ljmp
push
push
aad
test
mov
push
mov
xchg
xchg
mov
insl
cmpsb
sbb
xlat
xor
lahf
adc
sahf
ret
pop
outsb
dec
lods
sbb
addl
outsl
loopne
leave
mov
into
jecxz
scas
or
cld
sub
sub
push
lcall
es
clc
hlt
jl
bound
outsb
or
cmp
xchg
or
xchg
or
dec
mov
int
mov
sub
push
test
lcall
and
fwait
sbb
xor
sarl
or
inc
adc
clc
mov
mov
xor
cmpsl
es
aas
shlb
lods
jl
adc
sub
gs
dec
jl
stc
and
mov
pop
and
xlat
mov
mov
mov
cmp
pop
andl
push
cmc
mov
pop
xor
push
ret
sub
movsl
aad
sahf
xlat
push
icebp
sub
hlt
iret
jg
pop
push
leave
das
push
scas
iret
jmp
mov
fmull
subb
or
jne
nop
iret
push
loope
mov
ds
insl
mov
lods
int
adc
leave
gs
test
test
ja
scas
xchg
or
aas
jnp
rcrl
psubw
aam
ljmp
mov
ds
nop
or
mov
mov
push
push
repz
mov
add
dec
mov
fistpll
stc
mov
mov
and
mov
push
hlt
mov
adc
lods
add
xchg
fisttpl
fnstenv
cs
mov
adc
and
xchg
inc
lahf
xor
dec
add
clc
push
out
popf
xchg
sarb
popa
xor
cmp
out
cltd
xchg
or
clc
pop
inc
and
inc
fs
inc
repnz
data16
and
mov
xor
xchg
sahf
add
inc
rcr
add
sub
pop
fcompl
sub
shr
inc
aam
jg
push
mov
call
sub
cli
nop
add
cwtl
adc
icebp
cmp
fwait
movsb
sahf
inc
sbb
xchg
test
push
inc
sbb
dec
inc
into
dec
mov
pop
lods
cmpsb
mov
and
xor
pop
pusha
jg
add
dec
mov
adc
jmp
jmp
sub
xor
enter
test
fdivrl
mov
js
jae
scas
out
jecxz
loopne
adc
data16
lret
fidivs
lods
xchg
mov
mov
or
movsl
sarb
xchg
in
mov
dec
shlb
sti
jae
test
fld
call
pop
push
outsb
add
adc
mov
mov
mov
leave
daa
dec
test
pop
push
add
push
ja
clc
addr16
sub
jae
js
mov
lret
js
or
aaa
sbb
sub
out
mov
in
cld
aaa
mov
pop
add
jae
mul
jl
jae
jecxz
outsb
inc
inc
loop
fcmovnu
push
cwtd
cmpsb
ja
fcmovnb
and
arpl
inc
fidivs
add
mov
xor
dec
aam
push
and
and
cli
mov
mov
test
shrl
mov
add
pop
repnz
xchg
fs
pop
cld
cltd
in
repz
icebp
mov
dec
mov
out
ss
xchg
sbb
dec
scas
in
inc
popf
test
inc
out
sub
mov
pop
jmp
pop
arpl
pop
mov
test
and
sbbl
mov
inc
or
adc
adc
jmp
dec
lahf
out
pop
movsb
ss
lods
imul
roll
cld
push
mov
push
mov
shlb
pusha
mov
dec
cmpsl
test
repnz
clc
ret
add
xchg
imul
nop
mov
add
dec
mov
cmp
xor
int
xchg
mov
imul
sub
lret
sub
pop
xor
or
mov
add
sbbl
push
popa
lds
sub
mov
xchg
xchg
popa
int
push
aas
and
sahf
bound
pop
jg
clc
ljmp
cmp
pop
shrl
xchg
mov
dec
arpl
out
lock
pop
mov
or
lea
inc
stc
xchg
mov
pop
adc
jb
in
movsb
cmp
xor
fs
call
int
sub
push
mov
cmp
mov
dec
xchg
test
push
test
sub
js
filds
inc
negb
xchg
push
cmp
shrl
mov
mov
lds
xor
ret
fidivrs
lds
inc
in
je
shll
movsl
cmp
out
out
jo
ss
xchg
daa
mov
sbb
or
push
es
popa
mov
push
stos
test
dec
sub
arpl
ret
mov
movsb
mov
mov
fiadds
les
xlat
dec
out
call
adc
popf
jmp
jns
test
loope
sub
adc
leave
xor
and
sub
dec
mov
minps
or
loop
pop
jmp
pop
test
inc
dec
mov
cmp
in
mov
sub
fsubrl
pop
jnp
adc
movsb
sbb
add
ret
scas
insb
shlb
mov
adc
adc
int
xorb
jb
inc
and
mov
popa
sti
inc
mull
scas
cs
jge
loop
fdiv
sti
add
adc
sub
lds
xlat
lods
out
mov
js
sbb
decb
or
push
in
movsb
rorb
mov
sbb
pop
inc
inc
lods
jle
loopne
mov
dec
mov
rcl
adcb
xchg
addr16
in
fxch
loopne
std
xchg
sub
movsb
sub
nop
pusha
repnz
mov
nop
icebp
xchg
xchg
cmp
int3
and
movsl
outsb
pushf
adc
stos
int3
push
mov
popl
xchg
push
jne
jecxz
aaa
jle
or
inc
pusha
push
pop
aam
push
insb
sbb
rorb
orb
xchg
push
imul
sbb
mov
mov
pusha
pop
out
xchg
lea
clc
movsb
and
xlat
add
push
cwtl
mov
or
jno
dec
jp
jg
push
leave
aad
lock
sbb
xchg
dec
loop
cmp
fbld
xor
insl
aam
sbb
pop
push
enter
fisttpl
cs
add
or
push
mov
push
xor
or
sub
lods
xor
push
xchg
mov
cwtl
in
mov
mov
outsb
sar
in
inc
pop
add
inc
in
test
mov
hlt
stos
adc
xorb
js
sbb
push
outsl
adc
push
xor
mov
ljmp
jg
pop
xor
inc
push
ja
dec
data16
ret
dec
les
push
out
lea
call
pop
fistl
sarb
sub
xchg
or
movsb
push
out
jl
pop
pop
call
pop
mov
cmp
adc
mov
ja
cltd
sbb
xlat
mov
sub
fnstcw
addr16
or
out
jle
pop
stc
fldl
loopne
loop
and
js
xchg
dec
and
jge
mov
in
jb
rolb
pop
xchg
dec
aam
inc
pusha
in
push
data16
pop
cld
loop,pn
in
or
jns
cmpl
pop
repz
cmpsl
sahf
add
pop
sub
fiaddl
pop
jnp
pop
cmp
sbb
adc
js
dec
sub
loope
aad
pop
xchg
cmp
imul
dec
mov
push
jne
mov
push
icebp
mov
sub
and
push
inc
das
mov
xchg
inc
mov
addr16
fistpll
outsb
xchg
or
ja
sub
out
push
fs
push
stc
add
xor
mov
jno
pop
dec
xor
leave
add
push
ret
xor
or
mov
cmp
adc
pop
or
inc
out
or
lds
mov
jno
popf
mov
out
popf
rorl
adc
xchg
stc
mov
jno,pn
negl
in
cmpsl
push
sbb
add
inc
mov
popf
cmp
and
jnp
jp
mov
add
jl
aaa
push
dec
je
or
in
or
test
xchg
xchg
dec
dec
mov
test
or
cmpsl
scas
add
push
rolb
mov
dec
mov
cmp
negl
inc
dec
movsb
lods
ret
call
push
movsb
and
mov
stos
lds
ja
lret
addr16
rcl
pop
in
rorl
out
loopne
xlat
xor
add
cmp
xchg
nop
psubusw
jmp
inc
cmp
push
dec
pop
ret
add
mov
sub
aas
movsl
ja
pop
jno
and
std
sub
lcall
cltd
jle
cld
mov
sbb
imul
push
scas
xchg
fdivl
xchg
dec
xchg
xor
es
dec
stos
lods
lret
adc
sub
or
mov
mov
xor
cmpl
mov
mov
stos
and
fimuls
stc
xchg
jo
mov
mov
pop
cli
out
into
mov
hlt
cmp
adc
mov
call
lods
dec
stc
xchg
mov
daa
push
inc
outsb
cwtl
lods
push
inc
and
jecxz
adcl
mov
or
inc
nop
jnp
popf
sub
out
leave
xlat
cmp
bound
icebp
ret
arpl
movsb
sahf
sub
ds
jbe
sub
add
movsl
testb
dec
les
push
cmp
pop
lods
inc
xchg
hlt
mov
xchg
adc
xor
popa
pop
adc
cmc
bound
shll
inc
outsb
adc
cmp
fs
repnz
mov
ret
push
jno
sbb
test
push
fs
adc
push
jge
movsb
test
dec
xchg
mov
loope
sbb
aad
xor
cmpsl
sbb
sub
subl
iret
in
and
mov
pushl
andb
mov
in
mov
pop
and
jne
outsl
pop
fs
jl
pop
imul
mov
stos
xchg
pushf
mov
imul
sbb
call
dec
inc
fld
or
xchg
push
mov
sub
mov
inc
inc
ds
or
push
fcomi
mov
sahf
or
cld
stos
mov
xchg
ds
inc
rorl
jle
push
jne
jns
jp
inc
mov
or
in
sbb
xchg
jmp
cmpsl
xchg
jnp
fimull
ss
movsl
jecxz
cmp
jne
pop
scas
leave
aaa
stos
repnz
cmpsl
fdivs
sbb
jae
inc
xor
test
jo
mov
sub
jbe
push
imul
add
or
inc
hlt
jnp
icebp
mov
fldpi
mov
shlb
rorl
enter
pop
aam
mov
dec
cmp
sub
pop
ret
jecxz
scas
mov
mov
and
pop
mov
mov
dec
or
sbb
mov
adc
es
loopne
jg
xchg
scas
pop
mov
jbe
ret
daa
dec
push
mov
lea
pop
cwtl
xchg
cmp
gs
add
mov
mov
out
stos
sub
rcl
lea
push
adc
les
ja
pop
xchg
aam
push
cld
sub
mov
push
mov
mov
pop
mov
push
scas
mov
sti
xchg
scas
loop
arpl
mov
lds
popa
xchg
jo
inc
hlt
popa
ja
cmp
cmpsl
repnz
pop
mov
push
cmp
cmc
xor
pop
push
sbbb
xchg
push
and
cli
shlb
mov
lods
jns
out
clc
mov
aaa
je
jnp
sub
scas
push
fsub
ret
sub
dec
add
lods
call
test
pop
sub
imul
lret
xchg
dec
jg,pt
fidivrl
js
mov
sbb
rolb
shll
in
xor
xchg
lret
add
cmpsl
stos
and
sbb
push
mov
mov
adc
pop
jge
sub
mov
lds
ficoml
test
stos
cmpsb
jno
call
cwtl
add
add
and
mov
pushf
mov
or
mov
call
inc
dec
dec
jg
mov
push
aas
sbb
or
mov
mov
inc
cmp
adc
mov
xchg
loop
je
jno
pop
imul
jl
aam
shll
popa
lock
in
in
or
nop
mov
add
in
mov
push
adc
lahf
lret
or
stos
out
je
mov
daa
loopne
pop
ret
movb
and
leave
lcall
inc
es
cli
mov
dec
pop
je
push
sbb
sub
insb
inc
and
inc
inc
iret
cmpsb
mov
ds
jecxz
push
sbb
mov
pop
out
xor
mov
addb
mov
mov
clc
inc
adc
xor
test
ret
sbb
iret
add
out
push
cmp
jnp
test
sub
adc
cld
mov
dec
xchg
xchg
ds
inc
push
adc
or
and
mov
imul
sahf
addb
cmpsl
jae
std
loopne
fimuls
bound
xchg
ret
add
adc
cmp
dec
cmpsl
mov
aaa
mov
mov
jbe
mov
cmp
mov
in
rcrb
test
out
mov
aas
cmpsl
adc
push
push
push
imul
je
push
and
mov
lods
cmp
adcl
jl
jne
jmp
insb
sbb
jle
mov
int
not
in
std
jb
xchg
cs
mov
xchg
pop
frstor
dec
or
cs
cmp
push
movsl
jg
mov
ret
call
and
jp
mov
lds
testl
and
lds
mov
adc
or
jo
incb
adc
inc
jb
push
aaa
test
xor
mov
jbe
sub
xchg
addb
adc
mov
cmp
pop
scas
jp
and
mov
xchg
addr16
int3
add
jns
mov
or
test
fwait
leave
xor
push
sub
pop
jnp
jae
push
stos
inc
add
arpl
adc
and
mov
outsb
sbb
xorl
leave
out
lahf
push
pop
and
xchg
aas
lcall
sub
mov
inc
inc
dec
popa
jb
popa
mov
sub
fsts
dec
mov
adc
addr16
jmp
flds
jecxz
cmpsl
rcll
lods
popa
mov
mov
jo
jmp
inc
int3
fnstenv
dec
push
lea
fdivrl
jmp
jnp
mov
shr
sbb
rcrl
es
out
mov
test
adc
lods
inc
clc
mov
mov
sub
cli
inc
stc
lahf
inc
gs
cmp
and
dec
scas
idivb
sbb
push
dec
dec
fdivrs
add
mov
cmp
mov
lret
insb
les
add
stc
mov
mov
testb
out
mov
xor
imul
xchg
adc
pop
push
jnp
xor
pop
or
in
stos
lcall
xchg
imul
add
jmp
ljmp
xchg
sbb
mov
pop
mov
cmp
out
in
jne
mov
jl
jge
movsb
sub
cmovns
jmp
dec
pop
cld
mov
or
mov
inc
push
test
adc
or
stos
ficompl
xchg
popf
into
and
imul
pop
sub
add
sbb
jl
and
data16
or
or
sbb
imul
inc
inc
mov
add
jg
or
lret
push
in
pusha
lods
test
cmp
loop
and
mov
enter
adc
mov
jecxz
cmp
fsubr
push
or
lods
xchg
dec
test
xor
sub
xlat
sub
movsl
fucomp
out
test
push
jne
sbb
mov
gs
inc
movsb
jmp
je
adc
mov
nop
pop
inc
stos
sub
xlat
rorb
adc
jns
jnp
int3
mov
mov
jno
jnp
dec
nop
shlb
or
jbe
sbb
sbb
pop
dec
sub
jge
mov
aas
and
popa
push
outsb
mov
push
add
mov
mov
addr16
add
sbb
ffreep
push
mov
outsb
dec
lret
roll
jmp
xchg
rorl
xchg
adc
inc
lea
push
inc
ljmp
adc
dec
add
mov
pop
repz
add
pop
cmp
lret
push
mov
clc
and
or
dec
roll
cld
sbb
stc
out
pusha
addb
or
lea
dec
mov
fcomip
flds
mov
pop
fistpll
faddp
xchg
sbb
xchg
and
push
push
insl
stos
and
ret
ror
or
lock
fs
jge
popa
out
cmp
clc
mov
nop
dec
mov
xlat
nop
mov
imul
hlt
push
dec
divl
sbb
andb
dec
test
adc
aad
add
shll
ja
into
push
fsubs
and
idivl
fcoml
ret
lods
das
mov
imul
adc
sbb
stos
pop
or
push
push
sti
xchg
add
xchg
inc
mov
test
arpl
in
test
push
pop
arpl
fstpt
sbb
cmc
add
and
test
cwtl
pop
dec
pusha
andl
mov
inc
pop
jl
sti
lds
mov
or
es
loopne
test
sbb
loop
and
repz
and
scas
nop
cmc
xor
mov
jne
aad
mov
sub
mov
mov
sbb
pop
xor
into
ret
cmc
insb
xor
mov
sbb
and
pop
adc
data16
test
xchg
add
add
stc
leave
mov
and
shrb
sarb
cltd
mov
in
hlt
mov
dec
push
scas
arpl
pop
cld
cmpsl
sub
or
mov
cmpsb
in
stc
cmp
and
andl
dec
lcall
sti
movsl
pop
inc
mov
lods
add
and
dec
cmc
adc
sysret
int
dec
lret
xor
push
cwtl
out
arpl
js
test
dec
xchg
shll
pop
sarb
mov
into
sub
jns
lock
inc
scas
stos
imul
outsl
dec
fsubrp
iret
xor
inc
outsb
daa
outsl
push
daa
add
cmpb
adc
mov
pop
stos
dec
sub
or
jecxz
mov
xchg
adc
cmpsb
pop
hlt
vshufps
lret
daa
cmp
ss
jae
movsb
sbb
and
mov
or
scas
into
icebp
loope
aas
call
test
cmp
in
inc
cmpl
inc
add
mov
sbb
inc
or
lods
inc
pop
xchg
int
add
shlb
sbb
push
aas
fs
les
inc
dec
ja
xlat
arpl
pop
lcall
shlb
in
push
fcmove
mov
aad
ja
mov
mov
cmp
add
jp
addb
out
fisubrs
mov
cmp
lahf
sub
push
stos
sub
sub
loope
push
cld
adc
in
push
push
ror
mov
push
dec
and
es
sbb
inc
xchg
ljmp
cld
xor
add
jns
dec
hlt
mov
dec
andb
mov
ret
jle
cmp
dec
pop
and
dec
mov
inc
and
fs
mov
jmp
rcrl
jmp
insl
fiaddl
jo
sbbb
enter
jg
ds
ljmp
push
frstor
add
adc
cmpsb
rcl
mov
or
cmp
sbb
mov
sub
out
in
add
loop
cmc
sbb
test
mov
push
xor
repz
mov
pop
and
cli
dec
das
or
jb
stos
icebp
cs
dec
jo
sbb
cmpsl
or
arpl
cs
iret
in
je
or
push
sbb
cmp
into
or
jne
pop
add
cld
mov
imul
cmpl
lock
pop
mov
rol
jns
cltd
pop
pushf
cwtl
lock
pop
fistpl
xor
cli
or
add
push
int3
lea
fsubrp
leave
in
inc
aaa
lods
test
mov
stos
dec
push
xchg
pop
sub
and
and
std
push
ja
faddl
jnp
int3
xchg
or
mov
add
dec
add
push
sub
rolb
push
or
mov
das
lods
adc
inc
mov
leave
insb
jecxz
mov
pop
sub
pushf
in
mov
cmc
and
lods
pop
dec
jmp
push
out
adc
outsl
mov
sbb
cld
nop
inc
add
pop
adc
sub
xor
add
pop
div
ds
xlat
pop
inc
les
mov
repnz
in
fildl
sub
lds
xchg
or
adc
fstps
mov
ss
add
xchg
ret
aaa
popf
mov
add
addr16
dec
loope
add
sbb
popf
fs
ret
dec
push
cmp
lcall
sbb
daa
pop
pop
add
pop
pop
insb
mov
mov
pop
cmpsl
and
mov
dec
xchg
movsb
cmp
lret
push
jo
in
jle
sub
dec
test
xlat
cmp
pop
or
out
pop
jl
mov
repnz
inc
jne
mov
lret
stos
stos
pop
repz
movsl
jmp
mov
in
sub
push
jb
or
or
mov
gs
pop
rcl
cmpb
fmulp
or
mov
loop
decb
add
outsl
cmp
jg
cltd
enter
pop
cld
insl
fstpl
mov
pop
xchg
stc
cltd
test
aas
lret
arpl
inc
jae
cmp
out
add
jmp
mov
cmp
loope
add
push
stc
xchg
pusha
cmp
icebp
stos
mov
sti
and
lret
fs
hlt
and
mov
sbb
pop
mov
aas
icebp
cmp
das
loopne
push
jb
sbb
fs
mov
pop
ja
outsb
fists
daa
mov
hlt
mov
ret
aaa
data16
pop
pop
sbb
fcmovne
jg
popa
push
mov
mov
pop
aas
sub
out
fcomps
pop
dec
iret
cmpsl
cmpsb
and
mov
xor
jb
push
pop
dec
int3
mov
sbb
pop
hlt
sub
fwait
jae
pop
cltd
imul
pop
insb
das
xchg
dec
add
pslld
mov
cmp
test
pop
fsubp
jecxz
add
mov
ficomps
dec
sti
aad
or
xchg
cmc
jge
fisttpll
and
data16
push
cmp
fdivp
jns
test
xor
fdiv
mov
dec
stos
add
sbb
mov
popa
daa
stos
cmp
dec
sti
mov
int3
jmp
pop
mov
lcall
sarl
adc
sub
icebp
shrl
jmp
loopne
rolb
imul
inc
lcall
addb
movsl
or
xor
subb
shrl
xchg
sbb
fmull
cs
mov
jmp
xor
xlat
dec
mov
stc
mov
or
shll
push
jmp
push
mov
fwait
sti
loope
in
std
mov
mov
or
or
loop
inc
cmp
repz
jo
pushf
jbe
jno
inc
fnstcw
jno
int
sbb
je
inc
pop
mov
push
loopne
jnp
inc
lock
jae
fstpt
push
inc
jge
lret
mov
in
test
mov
inc
bound
pop
sbb
rcr
ss
inc
ljmp
xlat
push
out
mov
cmp
outsb
pop
and
cmp
pop
jae
inc
cmp
sbb
cmp
ret
jns
movsb
or
sub
ds
dec
dec
stos
push
push
repz
adc
cmp
mov
mov
stos
cli
sub
cmpsb
jmp
imul
rcrl
fildl
push
pop
movsl
ja
loop
movsb
push
cltd
or
adc
rorl
pusha
or
pop
fidivrl
std
and
xor
inc
xchg
lea
imul
fstps
test
mov
mov
pop
sti
push
dec
pop
ret
mov
pop
dec
pop
pushf
pop
in
xchg
mov
mov
mov
nop
loop
jne
sbb
fwait
cli
jecxz
xchg
mov
shl
push
xchg
jle
jecxz
outsl
inc
dec
mov
adc
inc
jbe
dec
test
mulb
dec
les
xchg
add
push
int
fiadds
mov
inc
jns
adc
fsubp
jne
add
adcb
sti
scas
frndint
mov
int3
sub
sbb
shr
push
xchg
shlb
pop
in
jp
dec
aad
mov
lahf
arpl
jb
inc
insb
mov
jb
aam
push
aaa
pop
xchg
lock
jp
push
inc
cmp
inc
jae
mov
hlt
jle
mov
fwait
dec
mov
xchg
repnz
shll
in
outsb
stc
push
sti
popa
movsl
call
push
push
int
inc
lret
xchg
iret
in
dec
ds
jns
push
and
mov
je
insb
cmp
cli
inc
mov
fwait
sti
out
std
cmpsl
bound
mov
jl
inc
xchg
add
sbb
push
popf
jg
ss
sbb
mov
jnp
or
cmp
pop
lcall
pusha
pop
jmp
dec
mov
repz
mov
and
cs
dec
inc
mulb
and
pop
mov
rorb
sub
int3
cmpsl
inc
das
push
push
pop
gs
pushf
xorb
js
stos
push
mov
inc
cmc
sbb
jae
test
lcall
pop
in
filds
push
jo
cltd
fistps
inc
rcll
jno
jecxz
jecxz
test
arpl
adc
cmp
sbb
dec
xchg
popl
jno
in
in
push
mov
mov
xor
jbe
out
movsb
fiadds
add
lds
pop
mov
sbb
inc
mov
shll
test
sub
icebp
addr16
mov
inc
rolb
sub
jmp
mov
out
jne
push
push
mov
hlt
xchg
iret
adc
add
flds
cmpsl
lea
cmp
and
push
push
mov
arpl
bound
out
mov
jp
jns
mov
cmp
repz
pusha
xor
insl
out
inc
out
je
or
cmpsb
push
call
inc
push
pop
push
int
add
pop
add
mov
sub
loope
xchg
push
hlt
push
jg,pt
xor
popa
push
pop
bound
stos
movsb
lcall
sbb
das
push
daa
push
push
mov
mov
sahf
fcomps
adc
js
dec
je
jp
js
cmpsb
mov
shl
fisttpll
in
icebp
and
push
push
push
or
cwtl
pop
mov
rcrl
aam
outsb
aaa
push
jl
je
pop
add
mov
xchg
push
add
lret
cs
imul
mov
mov
fistps
sbb
jge
xchg
iret
mov
fwait
fs
xlat
enter
jae
rorb
outsl
jp
push
mov
lods
outsl
mov
rclb
xor
insb
add
lds
jge
scas
mov
lds
mov
inc
fwait
outsb
add
loop
pop
adc
and
xchg
pop
mov
sub
add
out
mov
adc
testl
fs
mov
mov
insb
jne
jle
push
in
cmp
jno
inc
adc
sbb
pop
cmp
repz
shr
mov
std
sbbb
push
jmp
xchg
sahf
jl
cli
flds
lods
push
movsl
jae
add
add
pop
std
push
pop
outsb
test
xchg
push
test
es
add
mov
aad
sbb
adcb
fidivl
cli
lods
mov
mov
mov
pop
push
mov
inc
jbe
mov
jnp
loopne
dec
imul
mov
loop
mov
xchg
jns
gs
mov
xlat
fsubp
sbb
adc
fs
fnstenv
in
add
or
ret
sbb
or
add
jns
add
scas
out
shll
jbe
sbb
dec
mov
daa
rcll
data16
incb
leave
push
mov
and
repnz
data16
add
fcomip
cli
mov
jb
repnz
lcall
cmp
dec
pusha
xchg
inc
inc
in
ret
mov
jle
mov
inc
jle
mov
sbb
icebp
iret
fdivrl
push
add
mov
xchg
xchg
adcb
fbstp
or
pushl
sub
fiaddl
mov
aam
cli
shlb
es
xchg
popa
faddl
fistpll
push
jbe
push
movsl
data16
rorl
iret
cmpl
add
xor
push
ret
push
das
dec
mov
jge
lret
ss
mov
in
mov
sti
push
pop
andb
test
push
js
daa
dec
int3
cmpsl
adc
xor
add
cli
xchg
icebp
jmp
jmp
sbbl
fcomi
xlat
lea
mov
jno
test
shlb
add
imul
imul
daa
aaa
ret
test
int3
pop
adc
sbb
xor
mov
inc
and
loop
int
add
add
lret
rorl
ror
mov
cmp
push
dec
or
push
test
mov
fisttps
pushf
sub
dec
in
inc
jl
ret
mov
add
loopne
mov
dec
push
pushf
jl
scas
xchg
or
sub
pusha
adc
adc
pop
loopne
fldenv
sub
cmp
jl
inc
cmc
bound
fimuls
int
mov
mov
push
sub
sub
pushf
pop
shrl
sub
push
mov
shll
addr16
enter
fisubrl
and
mov
ds
mov
jp
test
lea
pop
mov
sub
dec
test
loopne
out
clc
push
lods
mov
jno
mov
into
pop
cs
imul
inc
xor
outsl
out
pop
dec
repz
hlt
sbb
out
mov
adc
std
mov
mov
movsl
add
je
xor
or
xchg
gs
or
cltd
and
mov
lock
and
push
lcall
aas
fldcw
or
stos
gs
int3
shll
cmp
cmpsl
cli
mov
xrelease
xchg
lock
jmp
in
or
jge
push
jo
jne
pusha
and
cmpsl
adc
cmc
daa
clc
dec
pushf
out
cld
push
fisubl
ret
dec
ret
push
mov
and
call
push
fsubr
cwtl
pop
je
dec
dec
pushf
cmc
cmp
lock
jae
or
test
mov
lret
pop
movsb
rcr
dec
das
fdivrl
xchg
pop
loop
ja
and
jns
fcompl
cmp
in
outsb
ret
lds
rcrl
adc
sbb
fmuls
popf
xlat
cmpsb
test
aaa
js
sbb
ret
mov
xchg
pop
into
adc
lods
leave
fstps
jl
sbb
mov
jb
test
lock
das
xor
xchg
les
cmpsl
cmpsb
mov
sub
rol
adc
aad
push
push
inc
ljmp
jl
xchg
and
mov
shl
gs
lret
nop
lock
fwait
mov
jne
jmp
adc
add
mov
push
sbb
rorl
stc
nop
int
pushf
push
mov
push
add
rol
jae
mov
stos
push
imul
insb
lcall
xor
jg
gs
dec
xchg
loop
push
mov
test
xlat
ficomps
mov
stos
int
mov
xor
jmp
mov
mov
pop
into
icebp
mov
mov
jmp
pop
std
int3
imul
femms
add
or
cmp
orl
adc
push
or
inc
test
cld
enter
cmp
mov
pusha
mov
dec
shll
dec
mov
stc
mov
lds
rorb
xor
inc
dec
push
movsb
andb
mov
shlb
sbbb
cmpb
ja
inc
rcll
hlt
fsave
movsb
das
pand
cltd
cmp
push
add
fisttpll
adc
jl
jmp
fwait
jbe
jecxz
stos
stc
sub
adcl
add
sbb
les
sbb
in
add
lret
mov
pusha
mov
fcompl
inc
fwait
inc
push
lods
cs
mov
addb
mov
mov
bound
shrl
inc
mov
adc
mov
icebp
out
or
mov
pushf
aam
xchg
sub
add
dec
out
dec
push
js
call
and
mov
mov
jne
fs
push
clc
insb
cli
cmpsb
int
out
int
cld
xchg
dec
add
shrb
ret
mov
mov
cltd
outsb
ret
adc
rolb
fidivrs
popf
pop
clc
in
xor
lds
jne
cmpsb
pop
jecxz
pop
ror
and
push
scas
cld
cmpsb
outsb
mov
dec
pop
xorl
xchg
inc
xchg
jbe
loopne
imul
adc
push
out
dec
test
mov
lds
xlat
frstor
cmp
mov
pushf
sub
jecxz
sub
sub
mov
pop
or
inc
push
sti
shll
inc
jne
add
scas
test
cwtl
cmpl
cltd
jmp
popa
sbb
add
js
cmp
stos
cmp
movsl
or
in
push
jnp
pop
pusha
arpl
test
xor
ja
inc
shll
icebp
dec
jl
or
mov
mov
arpl
out
xor
add
jle
out
sub
inc
mov
xor
cltd
and
flds
mov
mov
fsts
dec
pop
test
test
scas
sub
cmp
shr
xlat
mov
aad
lods
jg
xor
jns
mov
mov
das
in
scas
pop
add
in
data16
jle
push
xor
pop
pop
int
add
addr16
in
fwait
or
sbb
xor
repnz
movb
mov
aam
repnz
add
inc
in
add
xor
jge
and
or
dec
lea
stos
mov
inc
imul
or
pop
mov
mov
sub
adc
in
sub
jl
cmp
loop
jae
ficompl
mov
iret
mov
jb
jb
scas
mov
iret
mov
or
sbb
cli
iret
cltd
cmp
fstpt
into
sarl
js
xor
hlt
stos
mov
mov
adc
cmpsl
adcb
jbe
cmpsb
test
push
outsl
cmp
mov
stos
adc
scas
loope
inc
push
jb
inc
jmp
aas
xchg
mov
adc
lods
ret
popa
insb
mov
pushf
insl
push
inc
cmp
add
stos
aad
cld
out
imul
ja
punpckldq
inc
xchg
mov
cmp
sub
popa
jbe
xlat
and
dec
adc
fnsave
sub
addr16
pop
fs
jo
int3
mov
test
cmpsl
cmp
repnz
fiadds
dec
shlb
xor
jno
xlat
addr16
and
jns
leave
aaa
xchg
int
lcall
fcmovu
mov
xchg
push
inc
and
ljmp
adc
or
cs
fwait
cwtl
add
adc
shl
sub
mov
stos
xchg
clc
or
add
dec
add
xchg
in
mov
lret
aam
mov
fcompl
insb
pushf
in
push
xchg
and
mov
mov
sbb
les
jge
jo
scas
cmp
xor
push
pop
pop
xchg
ss
js
inc
dec
sub
mov
mov
repnz
ret
xor
cmp
popa
aad
mov
repnz
dec
mov
insl
jae
cmp
sbbb
or
hlt
sbb
out
dec
imul
movsb
fbld
cwtl
dec
in
call
sahf
ficoml
lcall
lods
inc
stos
mov
call
xchg
and
adc
daa
jns
mov
cmp
lock
add
lds
sub
filds
mov
mov
jmp
adc
push
pop
sub
cmp
mov
loopne
jp
outsl
mov
push
lret
jmp
into
in
jmp
cwtl
mov
xlat
adc
ja
pop
pop
inc
es
loop
int
mov
mov
adc
idiv
xchg
fisubs
adc
sub
mov
out
and
jmp
xor
jmp
dec
mov
std
sub
out
inc
jmp
lds
lcall
mov
dec
xor
xchg
lea
fisttpll
addr16
xchg
daa
les
xlat
dec
sub
push
call
stos
aas
clc
ja
sub
xchg
or
lcall
lock
cmp
sub
sub
jo
mov
hlt
jmp
stos
jae
sbb
push
cld
push
xchg
ror
rcl
loopne
adc
movsb
roll
lret
ret
dec
lds
mov
xchg
xor
push
mov
movsb
int3
mov
dec
lret
mov
push
cmp
ret
das
mov
sub
repnz
xchg
mov
std
pop
pop
test
fcomp
mov
imul
xor
or
pop
and
xor
pop
in
mov
mov
in
lea
loop
clc
arpl
dec
add
not
and
push
out
imul
and
mov
sub
in
mov
data16
or
inc
cmp
fs
es
fldt
outsb
pop
xchg
jbe
int
pop
dec
hlt
pop
hlt
push
mov
ja
test
adc
mov
sub
mov
daa
nop
lods
or
out
enter
aas
sub
ds
lods
dec
xchg
pusha
push
rcr
imul
imul
insb
xor
or
add
cwtl
inc
or
mov
pop
adc
jno
fwait
inc
adc
orb
add
xchg
push
cmp
mov
pop
xchg
loope
fstps
cmpl
inc
fcoms
pop
jg
lret
inc
lock
filds
fwait
cli
inc
adc
inc
cwtl
ja
inc
mov
shll
mov
ss
mov
cli
dec
mov
int3
inc
xchg
int3
and
xchg
iret
iret
mov
cmp
andl
lods
mov
icebp
mov
jo
inc
jge
sti
sbbb
test
stos
mov
int
std
mov
cwtl
or
mov
je
sti
addr16
test
jle
jmp
mov
sub
jns
add
dec
pop
and
mov
ljmp
fstpt
rcll
out
imul
xlat
js
outsb
repz
inc
mov
sbb
and
loope
fidivs
pop
sbb
test
and
mov
jmp
adc
inc
xor
adc
sbb
fldt
lcall
mov
dec
xor
jno
jmp
xchg
popl
mov
mov
pop
lret
push
and
inc
int
or
fmuls
add
dec
test
xor
aad
add
xor
xor
js
out
divl
andl
shll
push
scas
push
mov
int
xchg
add
in
lock
or
sarb
dec
mov
xorb
clc
lcall
cltd
xchg
dec
jg
fsubrs
cwtl
push
adc
dec
lcall
aad
popa
inc
or
xlat
sub
sub
insb
rcrl
pop
cmpsl
sub
ret
in
pop
sbb
fsub
in
add
xchg
ja
lods
push
sub
sahf
pop
mov
add
inc
cmp
mov
fcomps
es
adcl
aad
cwtl
add
addr16
cmp
and
push
and
push
fdivrs
mov
test
js
inc
pop
add
sbb
push
cmp
cmpsl
fsubr
cli
mov
inc
push
cmp
xchg
mov
cmc
dec
ljmp
icebp
mov
jb
mov
push
movsb
add
push
cs
dec
or
xchg
mov
aas
int3
mov
adc
cmp
mov
dec
mov
pop
xor
lock
mov
in
std
in
fistps
idivl
adc
mov
into
add
pop
outsl
stos
fld
jbe
loopne
iret
xor
pop
jge
sbb
jbe
stc
pusha
push
test
loopne
das
jg,pn
xchg
or
mov
sub
push
and
call
aad
movsb
sub
out
ror
arpl
sbb
add
into
arpl
scas
jge
daa
sbb
test
and
pop
mov
lods
aad
or
mov
iret
dec
sarl
add
lds
test
sub
adc
dec
jecxz
jb
cmp
les
push
pop
jecxz
sbb
int3
into
cmpsl
into
xchg
mov
ss
pop
and
and
jl
sbb
mov
sbb
ret
sbbb
stos
jp
dec
inc
in
xchg
mov
jmp
nop
or
xorl
pop
pop
sbb
xchg
jno
movsl
ret
fisttpll
push
sub
cmp
nop
push
push
or
test
stc
mov
push
rcrl
mov
adc
movsb
adc
jns
out
push
push
inc
divb
cmp
in
jmp
pop
ret
or
mov
mov
mov
sub
fstl
cwtl
xchg
cli
pop
lods
lods
aad
push
or
sub
sarl
sub
fwait
jnp
rorl
outsl
aaa
loopne
jmp
loopne
mov
fldcw
jl
notl
mov
jno
mov
and
push
sarl
dec
mov
xorl
decl
mov
ret
test
mov
stos
in
cmp
int
rorb
cmp
pop
bnd
push
mov
cmp
dec
in
xchg
xor
jmp
sub
dec
fwait
jns
push
daa
mov
sti
lds
cmp
add
adc
loop
dec
dec
scas
ret
insb
ss
sub
add
testb
outsl
int3
ret
shll
xor
xchg
xchg
idiv
je
movsl
es
sbb
push
mov
pop
aaa
js
jecxz
jnp
imul
lods
aad
add
shr
and
outsl
pop
bound
mov
add
sbb
push
iret
push
pop
call
std
inc
pop
fsubrp
cmp
jg
sub
mov
rcrl
mov
pop
test
stos
xor
mov
dec
hlt
fbstp
fistps
cmp
sub
in
ret
fcomps
mov
add
push
jle
adc
lock
enter
xor
imul
pop
xchg
ret
in
mov
cmp
adc
enter
into
int3
movsl
jl
pop
sbb
out
lcall
or
loop
fs
cmpsb
xchg
xor
ret
pop
pop
jle
orl
pop
and
test
dec
rol
adc
adc
divl
scas
xchg
inc
fdivrl
clc
loopne
jle
js
ret
inc
sbb
je
pop
sbb
out
pop
xor
xor
push
jnp
cltd
out
pop
lret
mov
sub
sbb
jns
push
loope
outsb
movsb
mov
pop
pop
push
filds
icebp
rclb
gs
loope
jno
loope
clc
cmpsb
inc
jecxz
xlat
xchg
repnz
dec
shlb
outsb
cmp
rorl
bound
out
jmp
pop
aas
mov
inc
cmp
daa
fisubl
cmp
xor
inc
jnp
daa
bswap
push
insl
push
inc
sbb
out
adc
test
cmpsl
pushf
test
push
addr16
cmp
push
movsl
outsl
mov
nop
aad
std
xchg
push
xor
sarb
inc
xchg
pop
outsl
add
lock
inc
add
xchg
mov
mov
ret
push
lahf
sub
lcall
add
cs
cmp
sub
or
ds
mov
or
add
and
repz
cmp
push
cmp
daa
mov
cmp
fwait
outsb
mov
outsl
fwait
nop
pop
lret
fs
xchg
int
fwait
sub
ficomps
lds
int3
mov
rcrl
and
xor
xchg
dec
mov
and
push
mov
mov
ss
mov
outsl
add
mov
inc
push
add
jns
cmc
mov
jno
or
jmp
mov
jno
mov
les
les
in
lds
fiadds
push
xor
push
addb
int3
stos
or
mov
ss
es
lds
pushf
cmp
int
loopne
movsb
push
or
pop
jae
adc
add
or
movsb
lcall
in
lods
rolb
add
subl
mov
cli
notrack
and
push
data16
aam
sub
lods
cwtl
popf
arpl
int
lret
les
enter
loopne
jge
xchg
outsl
cltd
cmp
data16
test
pop
xchg
dec
jge
pop
cmp
jecxz
cltd
mov
imul
add
jge
sub
movsl
pop
test
dec
dec
mov
or
mov
sbb
sub
loop
cs
sbb
mov
and
inc
popf
repz
xchg
sbb
mov
or
dec
pop
push
mov
and
arpl
movsb
sti
out
mov
cmpsl
ror
push
out
loope
xor
mov
mov
insl
outsb
fbld
imulb
lock
das
jl
or
push
movsb
ss
scas
sahf
test
insb
rclb
mov
jl
aaa
push
push
lea
pop
inc
mov
lock
out
sarl
push
insb
jb
xchg
sbbl
lock
adc
int
xor
fsubrs
fwait
dec
cmp
test
jg
sub
sbb
nop
data16
daa
lahf
adc
adc
push
fcoms
push
insb
sub
rcr
int3
lea
mov
daa
ja
in
fiaddl
mov
push
insl
xchg
push
xchg
fstl
sub
dec
dec
fdivrp
loope
bound
push
scas
cmpsl
mov
stc
push
ret
cs
stos
xor
sbb
jp
xchg
mov
dec
divb
mov
dec
rcll
cmp
shrb
jnp
push
or
sbb
les
lods
xchg
mov
jl
test
mov
push
pusha
push
xchg
loope
xchg
iret
enter
xor
stc
push
xchg
lods
pusha
stos
das
pushf
adc
add
sahf
lods
mov
mov
lea
pop
dec
pusha
mov
std
adc
mov
push
mov
mov
sub
adc
pop
sbb
popf
aad
test
test
cmp
mov
add
or
xor
pop
jbe
sub
in
xchg
jb
cmpsb
out
adc
inc
dec
xrelease
or
jmp
xchg
jge
sub
fdivrl
sub
xor
xor
mov
push
push
jg
cmpsl
popf
sbb
push
or
add
fidivrl
outsb
hlt
xlat
adc
mov
jae
pop
stos
push
push
pop
pushf
jecxz
xchg
cmp
and
hlt
or
and
rclb
cmp
ljmp
outsb
jl
pop
and
das
pop
inc
stos
mov
rolb
or
inc
sahf
jecxz
pop
pop
push
cmp
jbe
inc
bound
ja
popf
cmp
adc
jbe
sub
inc
loope
mov
lds
fdivr
test
test
mov
popa
push
jg
test
jae
xor
mov
dec
ret
rcrb
cld
adc
and
mov
mov
mov
xchg
loopne
div
push
cmp
in
fs
sub
cld
mov
pop
mov
jnp
icebp
lcall
adc
dec
inc
je
inc
stc
or
cmpsl
rol
jle
lcall
insl
jmp
cmp
or
jge
and
lds
shll
push
mov
inc
ss
xchg
std
mov
movsb
mov
add
inc
fisttps
jg
addr16
jnp
jge
pop
popf
dec
adc
pushf
subb
sahf
mov
movsb
xchg
js
out
sbb
push
pop
push
mov
sbb
or
sub
cmp
lcall
add
lea
sbb
stc
sahf
jge
repz
pop
lods
mov
sub
ja
sbb
arpl
lds
aam
gs
adc
lods
popl
fistpl
xchg
lds
or
bound
mov
push
and
push
mov
inc
pop
ss
dec
add
pop
paddd
pop
xor
out
jmp
push
enter
popf
cmp
andl
lock
pcmpeqw
aaa
jo
dec
dec
jnp
jb
outsl
xchg
xor
mov
add
fxch
mov
test
lret
clc
mov
pop
testl
xor
in
lcall
dec
mov
sub
jmp
add
inc
adc
adc
movsl
xchg
pop
es
adc
dec
out
dec
pusha
inc
push
sub
faddp
ja
lret
and
pop
add
int3
push
movsb
xchg
cmpsb
popa
cmp
rorb
sbbb
enter
je
sbb
adc
push
dec
adc
jp
adc
imul
mov
push
mov
mov
jg
movsl
iret
into
addr16
inc
scas
sarl
rcr
sbb
fstpl
inc
aas
xchg
lret
stos
test
and
loop
adc
pushw
cmp
inc
mov
cld
xor
cmc
pusha
push
dec
jnp
adc
push
push
data16
adc
xchg
es
imul
mov
fidivrs
enter
stc
xchg
insl
add
jle
adc
insb
mov
pop
xlat
jmp
mov
jae
mov
mov
gs
mov
test
in
loop
stc
push
nop
sbb
jbe
test
jge
or
call
nop
or
popf
outsb
lret
xor
es
fdivl
cmp
dec
hlt
cmp
pmulhw
xor
sarl
push
jo
mov
es
roll
jl
jne
xchg
or
push
xchg
lahf
xor
rorl
ret
sbb
mov
sub
pop
ja
popa
mov
cmpsb
mov
add
push
xchg
dec
mov
add
xor
xor
mov
stos
ljmp
and
cld
and
push
aas
fdivl
das
jmp
cmp
enter
add
jecxz
fstpl
mov
fcompl
ljmp
addb
out
add
lret
clc
push
adc
or
and
push
mov
mov
fcmove
loopw
xor
jmp
mov
fs
mov
dec
pushf
push
dec
into
jmp
repz
into
add
mov
popf
lock
push
loopne
out
mov
popa
xchg
dec
mov
mov
fsts
lahf
jge
push
iret
loop
std
xchg
aam
xlat
andb
add
movsl
jl
lret
jg
mov
ljmp
pop
cmpsb
mov
repnz
repnz
sub
lret
bound
fs
and
out
int3
mov
fwait
loop
in
incb
je
lods
jp
mov
stos
inc
lds
jl
push
lods
jle
lea
movsl
rcrl
data16
sbb
and
fstl
cmp
fidivrs
icebp
clc
insl
inc
mov
es
xorl
jp
sti
xor
arpl
out
cmc
fldln2
or
inc
adc
aas
push
nop
jecxz
subl
fnstenv
lret
aaa
movsb
cmp
loop
mov
arpl
xor
mov
iret
repz
push
and
pop
xor
mov
mov
push
mov
ss
cmp
cmp
mov
push
mov
pop
pop
sub
mov
loopne
fwait
jg
cwtl
inc
insl
lcall
sub
xor
pushf
ss
andb
jecxz
xchg
hlt
hlt
fstpt
fbstp
sub
cmp
add
out
pop
push
ljmp
mov
pusha
xor
test
sbb
inc
xorw
jne
jecxz
lods
lods
push
popf
add
aas
lock
mov
mov
push
pop
cmpsb
adc
mov
lds
sub
rorb
jp
fcomps
add
int
fcmovne
ja
ljmp
or
mul
call
xchg
mov
pop
push
sub
cmp
loope
aaa
popa
icebp
aam
pop
into
ret
adc
lahf
xchg
and
adc
clc
fimull
xchg
scas
inc
rcr
add
mov
je
stos
cmc
aam
scas
lahf
mov
sbb
cmp
and
aad
sub
test
push
mov
pop
adc
rorb
movsl
dec
test
aas
aam
jns
ret
std
add
push
lahf
xlat
hlt
push
and
lret
addb
cmpsb
mov
repnz
js
loopne
scas
or
aad
mov
pop
xchg
aad
mov
xor
add
cmp
into
dec
sub
mov
jb
or
dec
xchg
mov
sub
addr16
dec
mov
aam
and
jbe
sub
mov
aaa
fs
ret
jns
test
loop
add
xlat
xchg
rclb
mov
push
lret
lahf
and
jb
popa
cmp
adcl
scas
outsb
loope
pushl
aaa
add
xlat
test
add
nop
inc
das
or
push
jno
test
push
mov
mov
dec
insl
jp
and
aas
add
jnp
aad
dec
movsb
mov
std
in
loopne
adc
mov
sahf
pop
jmp
sbb
push
scas
sar
add
je
and
inc
xchg
mov
or
mov
pop
inc
jle
subb
dec
mov
adc
mov
data16
sti
rolb
dec
sti
mov
cmpsb
xor
jle
clc
mov
pop
fdivrl
pop
icebp
movsl
cmp
jno
sub
stc
aam
data16
mov
nop
shlb
loopne
cmp
xchg
push
and
adc
adc
dec
adc
or
sbb
sarl
or
insb
test
into
or
jp
sbb
mov
cmp
pushf
jecxz
inc
out
adc
mov
sbb
rclb
fidivrs
out
pop
mov
aas
sbb
ljmp
scas
pop
mov
dec
adc
push
popa
fimull
stos
jp
dec
jmp
js
pop
push
test
jno
sahf
adc
xchg
mov
fst
add
sti
pushf
cwtl
mov
loop
mov
sti
inc
dec
mov
sbb
rorb
pushf
mov
xchg
sub
mov
orl
sbb
mov
pop
push
ljmp
dec
sbb
xchg
xchg
and
mov
popf
xorl
mov
jns
xchg
roll
clc
mov
adc
push
xor
add
in
adc
pop
xor
popa
mov
out
loopne
test
pop
jns
pop
out
xlat
mov
out
test
xchg
dec
jae
adc
mov
or
lock
das
pop
pop
les
xchg
add
stc
and
int3
fdivrl
mov
pop
loop
or
movsb
or
sti
push
and
dec
cmc
cmc
lods
mov
mov
loope
and
sti
popa
ljmp
dec
sbb
cmp
sub
loop
stos
sbbb
outsb
xchg
enter
push
out
or
pop
lock
xchg
push
jne
xchg
lea
push
adc
jl
inc
cmp
adc
cmpb
cmp
pusha
sub
ss
call
push
cmp
xorl
mov
in
into
imul
lds
outsl
leave
pop
clc
js
jecxz
andl
popa
mov
cld
test
xor
mov
std
xchg
adc
push
xchg
shlb
jl
out
in
push
mov
lahf
mov
xor
les
test
push
push
pop
pop
mov
outsb
popa
pop
addr16
adc
or
xchg
pop
jnp
push
in
xor
cmp
mov
pop
dec
mov
adc
cmc
cmp
ds
xchg
mov
out
sar
test
fisubrs
mov
adc
in
repz
xlat
xchg
bnd
icebp
push
not
xor
repz
mov
dec
sbb
enter
jno
xor
icebp
popa
inc
pop
test
sub
mov
stos
cwtl
xor
mov
outsl
outsb
inc
leave
dec
fs
xor
mov
mov
shlb
push
xchg
add
jmp
fisubrl
push
lds
lds
mov
jmp
fsub
push
or
in
repz
pop
mov
repnz
push
sub
cli
jg
adc
dec
mov
loop
cmp
std
fists
insl
repz
imul
jg
movsl
jp
imul
xlat
clc
lret
push
mov
mov
add
adc
rorb
push
std
mov
sahf
push
neg
outsb
movsl
jae
cltd
sbb
sub
gs
ret
outsb
andb
shrb
jb
aaa
insl
dec
in
scas
scas
dec
mov
and
aam
mov
pop
nop
xchg
movsl
xor
stos
inc
sub
sub
mov
bound
imul
repz
aam
lea
mov
sub
in
jb
push
adc
jmp
sar
arpl
insb
jb
jmp
out
add
jno
add
repz
pushf
sbb
outsb
aam
pop
mov
shr
repz
and
mov
sbb
inc
aam
jmp
mov
sub
pop
xor
adc
dec
lret
push
fisubl
push
jae
pop
mov
cmp
sub
or
loopne
ds
inc
pop
fs
jmp
es
jno
int3
xchg
or
push
push
inc
cli
jne
clc
mov
cwtl
stos
dec
push
push
xchg
lret
jb
and
loop
mov
shrb
pop
inc
lcall
dec
stos
dec
cmp
mov
ss
pusha
ja
dec
cltd
cmp
xchg
push
das
dec
adc
fcom
notl
out
cwtl
outsb
mov
arpl
mov
xchg
add
cwtl
lret
sahf
add
cltd
clc
cld
es
fs
cmp
sbb
call
or
in
scas
icebp
mov
dec
aad
imul
ja
iret
and
mov
xchg
test
inc
ret
xchg
loop
and
cwtl
xor
or
xchg
pop
cmp
imul
xchg
or
xor
jnp
ret
mov
bound
or
dec
lahf
fists
pop
lahf
outsb
icebp
pop
or
cvttps2pi
jg
std
sub
cld
std
es
std
add
adc
sbb
jecxz
pop
cmp
push
jo
xchg
pushf
push
add
call
cmpsb
mov
nop
ja
outsb
in
cwtl
push
insl
ss
loop
in
jae
mov
jge
mov
sub
clc
mov
ret
push
inc
push
xor
dec
push
mov
out
cwtl
sbb
dec
jl
cmpsl
xor
xchg
inc
push
scas
push
aas
filds
iret
shlb
insl
lret
rclb
aas
movsl
add
aaa
and
or
push
sub
les
movsl
xchg
cmpl
xor
mov
fdivl
bound
rol
mov
sub
pop
jmp
iret
jo
sar
pop
cld
aad
xchg
add
dec
mov
xchg
xchg
sub
movsl
pop
imul
or
bound
push
mov
in
dec
ret
or
sub
inc
gs
dec
and
lret
push
push
push
mov
out
mov
xor
insb
sub
clc
inc
mov
out
popf
inc
mov
gs
data16
push
or
fcompl
push
cltd
loop
xlat
scas
insb
clc
in
lahf
or
pop
in
sahf
push
cld
add
xchg
mov
mov
push
in
loope
stos
and
mov
mov
nop
push
cmpsb
fldcw
cmp
inc
cmp
clc
xor
lret
sbb
ss
and
shr
in
pop
enter
mov
mov
in
imul
adc
gs
add
sbb
or
dec
dec
push
std
pop
ja
mov
xchg
xor
cmpsl
stos
cmp
mov
xchg
xchg
movsb
pushf
fadd
sbb
stos
rclb
mov
sub
dec
ljmp
mov
sbb
inc
inc
arpl
out
push
ret
push
imul
data16
lock
enter
sub
gs
data16
adc
and
leave
xchg
insb
jae
arpl
in
jno
xchg
dec
stos
jge
pushf
push
cmpsb
and
pop
add
loop
xchg
push
es
mov
push
mov
and
sub
fistpl
ss
faddp
xchg
int3
ja
mov
or
mov
dec
xchg
jbe
lods
pextrw
aas
and
sahf
sub
sbb
sar
or
jle
call
pop
and
adc
aaa
loope
inc
pop
into
xchg
and
cmpb
pop
arpl
mov
test
clc
outsl
push
sbb
mov
sbb
fcmovne
stos
mov
cmpsl
mov
sbb
jl
ljmp
jge
int3
mov
out
test
mov
xchg
mov
loope
cld
pop
sub
bnd
jnp
scas
cmp
cltd
enter
cmpsb
icebp
shll
pop
les
adc
push
add
movsb
add
out
jb
leave
xchg
pusha
jno
or
jnp
js
jmp
insb
nop
mov
pop
jns
mov
or
push
or
bound
fstpt
mulb
loopne
cli
xchg
mov
das
sti
sbb
sbb
fwait
stos
pop
call
lret
adc
add
enter
cmc
inc
xchg
add
push
fildll
sub
scas
adc
aam
jg
mov
ja
lods
arpl
adc
bound
mov
adcb
fs
pop
lea
xor
jns
cmpsl
into
std
jo
and
popl
iret
sub
or
mov
sub
leave
add
aad
dec
cmp
rcll
popf
js
inc
xor
push
leave
ret
sub
xorb
loopne
std
add
xor
add
les
lahf
mov
imull
pop
jecxz
popa
out
pop
sahf
cltd
lds
out
jae
outsb
pop
dec
pop
outsb
ret
addr16
cmc
xchg
and
pop
in
fnstsw
sbb
cmp
sbb
call
pop
movsl
inc
shlb
xlat
mov
ret
roll
fstpt
lods
sub
add
adc
ds
push
cmp
push
das
inc
ja
fwait
test
cmpsl
subl
mov
rcl
add
fidivs
mov
xorb
pop
xchg
out
push
lds
test
mov
out
rcll
mov
xchg
imul
mov
jg
loope
or
xchg
pop
push
add
xor
in
es
inc
lahf
mov
popa
mov
pop
push
push
roll
cmp
shl
shrb
mov
xchg
lcall
cld
mov
or
push
data16
inc
cli
dec
stos
mov
dec
xchg
loope
lock
push
cmp
mov
je
mov
in
pusha
xchg
pop
mov
lods
ret
push
jmp
daa
pushf
inc
pop
pop
or
imul
rorl
lahf
test
or
mov
sub
imul
clc
sbb
in
mov
scas
lds
jo,pt
popa
xchg
adc
jb
stc
mov
lcall
aaa
pop
jecxz
test
mov
sub
sbb
or
lods
xor
add
ret
cmp
fsubrl
stos
add
jl
dec
loopne
in
jl
stc
mov
jo
jne
ss
mov
cmp
mov
out
ljmp
movsl
mov
fmuls
insl
scas
add
adc
mov
sti
mov
rcl
fs
cltd
xor
push
xorl
les
shlb
mov
les
inc
pop
cmp
popa
or
lret
add
dec
dec
aas
push
fisubrs
test
fs
xlat
and
add
cmp
int3
sti
mov
inc
in
or
les
or
les
push
mov
or
jbe
and
stos
lods
inc
jge
pop
push
into
sub
pop
mov
arpl
stc
mov
cltd
insb
mov
testl
sbb
jo
scas
mov
fidivrl
sahf
clc
lods
fs
and
dec
repnz
cmpsl
inc
dec
mov
fmuls
adc
mov
lock
sbb
mov
test
mov
inc
mov
xlat
and
mov
xchg
mov
and
nop
popf
xchg
xor
fbld
out
mov
sbb
cmp
and
inc
mov
addr16
sub
pop
pop
inc
lods
adc
mov
cmp
jmp
mov
sahf
insb
adc
mov
sbb
add
adc
add
insl
pop
insl
shll
lcall
pop
sub
cmp
sbb
bound
lcall
pusha
insl
sbb
push
mov
movb
add
sub
loope
mov
imul
mov
mov
sub
mov
idivl
push
jmp
adc
push
test
sar
add
je
mov
lods
cmp
mull
mov
and
lods
filds
das
fnstenv
or
xor
test
icebp
add
cli
les
mov
lock
mov
mov
movsl
sbb
sub
call
scas
xchg
test
cmc
push
add
rolb
push
jne
aad
movsb
xor
push
test
push
mulb
inc
push
push
pushl
decl
les
add
gs
add
ja
add
cmp
adc
out
test
jp
xchg
bound
jbe
mov
inc
inc
out
dec
xchg
jne
sub
lret
adc
xlat
xchg
xor
jge
add
les
adc
imul
dec
aaa
aas
or
stc
in
scas
or
shl
es
cltd
inc
adc
adc
or
sahf
jmp
dec
cltd
dec
fcompl
jge
mov
jb
xchg
mov
in
sub
data16
xchg
jl
jecxz
sub
mov
push
xor
cmp
in
bound
mov
sbb
add
out
out
imul
cmc
rorb
out
imul
and
lds
push
clc
xor
fst
inc
lret
and
and
mov
add
sbb
ds
sbb
mov
mov
mov
cmp
sti
loopne
testl
and
and
movsl
mov
outsl
test
jmp
or
jb
mov
repnz
das
inc
scas
daa
pop
cmc
sti
inc
lret
insb
jae,pn
pop
imul
ss
das
xchg
sub
outsl
sbb
cmp
jge
sbb
sub
jae
add
or
push
data16
jecxz
cmpsl
cmc
call
cltd
fwait
mov
fisubl
leave
orb
das
lahf
xchg
xchg
pop
xchg
ret
xor
out
sub
or
insb
std
js
dec
aaa
inc
aaa
add
jbe
dec
test
fs
xchg
adc
push
push
je
sbb
push
adcb
int3
hlt
aam
xor
in
fisubrs
dec
lret
inc
outsb
call
fidivrs
sti
xor
jnp
sbb
add
fistl
jns
mov
ljmp
sahf
and
mov
repz
fwait
pop
or
inc
mov
jo
or
js
inc
rorb
dec
xchg
jge
ds
rolb
repnz
test
mov
data16
sub
push
push
sub
mov
add
dec
test
mov
lds
ficoml
ds
repnz
mov
dec
pop
pushf
mov
sub
hlt
jg
mov
rclb
out
lods
lcall
add
mov
lret
add
or
mov
leave
scas
fbld
or
mov
aad
cltd
adc
lods
fnstcw
in
adc
js
js
mov
cmp
mov
ljmp
loope
in
sbb
outsl
mov
lods
pop
ret
aas
pop
lods
outsb
fidivs
and
push
push
js
inc
xor
les
pop
std
mov
mov
imul
xchg
sub
loope
ss
sbbb
enter
jmp
es
scas
lods
mov
xchg
cli
jle
and
fiadds
sub
icebp
call
mov
lret
push
outsb
icebp
dec
dec
pusha
mov
sbb
mov
mov
cmp
lds
jge
pop
ljmp
xchg
repz
ljmp
inc
sbb
push
cmp
outsl
push
inc
mov
dec
push
lcall
xchg
sbb
hlt
jne
sbb
loop
mov
dec
ds
scas
leave
lcall
pusha
adc
in
das
add
movsb
stos
adc
xor
jo
loop
xor
jnp
pop
inc
or
ds
xor
xchg
lcall
lahf
jge
dec
inc
and
mov
inc
mov
stos
call
cld
pop
idivl
push
jle
push
sbb
cs
dec
repnz
xchg
mov
or
jnp
and
dec
push
cmpsl
popa
mov
out
in
out
push
daa
xchg
dec
lods
jmp
shlb
cmp
mov
mov
dec
testl
mov
push
mov
dec
in
add
add
cltd
lret
loopne
add
or
xor
inc
and
leave
movl
jb
scas
lds
pop
es
movsb
sub
push
jle
add
call
aad
in
jmp
lahf
ret
es
pop
sub
ja
cmp
push
sub
add
rorb
addr16
mulb
movb
fs
jp
add
jno
mov
cwtl
add
stos
out
sar
adc
sbb
lods
aas
ja
push
loopew
push
sbb
inc
mov
push
mov
dec
pop
mov
lock
cmpsb
push
inc
xor
or
or
in
jb
icebp
cs
mov
ret
adc
mov
mov
test
int
xchg
fidivrl
data16
mov
fisttps
sbb
into
sbb
xchg
pop
sarb
ret
ret
mov
loop
insb
test
clc
cmp
cmp
sbb
lret
push
dec
lret
pop
xor
mov
movsb
pop
pop
popf
dec
mov
jns
mov
mov
inc
or
mov
nop
pop
xchg
xchg
inc
mov
sbb
ficoms
jnp
pushf
rcll
adc
fcomp
mov
mov
in
lret
push
fwait
inc
push
xchg
sub
lret
push
popa
mov
jmpw
int3
jle
aam
adc
fwait
lahf
mov
ja
sub
dec
dec
xchg
xchg
or
push
rcrb
add
adc
sti
dec
gs
insb
or
and
movl
add
shl
mov
popf
pop
popf
push
cltd
xor
cli
dec
pop
leave
lret
stc
mov
xor
addr16
in
aam
fisttpll
shll
mov
test
icebp
sbb
or
push
shlb
sub
fwait
sub
sbb
repnz
jl
int
addb
mov
jae
add
push
jl
mov
push
andb
in
jnp
fucomi
pop
out
jo
popf
mov
lret
sbb
mov
sahf
push
mov
jge
jno
ja
add
sbb
movsl
shrl
inc
pop
and
mov
outsb
push
jne
or
push
std
scas
and
in
pop
and
lcall
mov
or
enter
loopne
test
adc
inc
jg
pop
cwtl
mov
pop
dec
fsubl
add
xchg
push
pushf
cmp
push
xor
inc
lods
jb
fnsave
aam
movsb
mov
call
cmpsb
test
daa
lds
lahf
push
and
adc
xchg
rorl
push
ljmp
mov
cmp
mov
inc
cld
insb
sbb
popf
dec
lea
mov
roll
sbb
push
pushf
sub
clc
add
sub
adc
out
cmpsl
flds
push
outsl
ds
and
loope
arpl
ljmp
adc
push
data16
out
jle
or
test
pop
or
add
inc
xchg
mov
sub
aad
pop
and
shlb
mov
pusha
push
xchg
add
dec
dec
pop
mov
xor
xchg
bound
sahf
mov
xchg
push
and
mov
in
arpl
or
ja
cmp
popf
adc
inc
add
adc
ss
xchg
ds
jns
dec
std
in
mov
aad
push
repz
sub
imul
xor
scas
xchg
xorb
sar
test
pop
pop
adc
repnz
xchg
xchg
add
das
and
mov
cld
imul
mov
cmovb
sub
sub
imul
mov
ficompl
js
push
scas
sub
sbb
or
stos
roll
mov
rclb
shrb
sub
add
push
cmp
or
lcall
ret
and
mov
in
out
lock
or
xor
cltd
mov
fst
ds
mov
inc
aaa
jnp
xchg
dec
dec
mov
push
mov
mov
pop
or
mov
sbb
out
xor
push
ss
mov
add
adc
mov
inc
popf
lock
in
and
out
icebp
imul
push
pop
sbbb
scas
stos
inc
fstpt
cmpsb
cmp
lds
add
adc
fmul
lods
leave
std
xchg
orb
mov
pop
jo
sbb
xchg
pop
cmp
icebp
mov
sub
out
les
cmp
mov
into
ja
addr16
mov
mov
or
mov
shlb
into
mov
push
dec
push
rol
xchg
push
push
stos
or
in
jb
jge
je
leave
jmp
and
adc
ret
repnz
ret
and
fimuls
push
mov
lret
sti
push
xor
jbe
mov
jo
rorb
jecxz
push
sbb
mov
ss
inc
and
lahf
pop
sub
orl
pop
xchg
cmpsl
fwait
add
xchg
mov
sub
and
in
int
mov
ljmp
inc
les
sbb
lret
sbb
je
adc
aas
sbb
add
ljmp
jae
jle
cli
push
or
aas
leave
in
stc
jecxz
mov
pop
frstor
sbb
sbb
stos
fnstenv
and
or
lods
mov
dec
cmpl
sahf
daa
test
cltd
pop
fs
shl
loopne
sbb
andb
adc
fadds
mov
out
scas
ljmp
inc
test
push
or
and
push
cli
pop
hlt
pusha
gs
push
push
popa
fwait
in
xchg
inc
pop
mov
cmp
xor
repnz
outsl
sarl
out
pusha
loope
pop
jle
lock
or
sbb
mov
shrl
jg
mov
cltd
cmpb
sbb
adc
insl
xchg
fidivrs
je
daa
mov
jnp
pop
push
adc
cmp
sub
jg
cld
lock
xchg
push
cmc
pop
call
lret
aaa
hlt
addr16
mov
and
arpl
xchg
push
xor
aaa
inc
mov
mov
mov
int
ljmp
or
repz
ret
mov
lahf
dec
or
xchg
mov
data16
push
fisubrs
movsb
pop
push
aaa
mov
fistpll
mov
jne
hlt
cwtl
fmul
fucom
mov
out
loop
or
pop
mov
inc
and
sub
mov
mov
add
adc
or
jns
cmp
inc
sub
stos
cmp
mov
fstl
jae
imul
mov
out
pusha
cmc
cmp
inc
mov
mov
lret
shrb
sub
movsb
rorl
test
mov
mov
aad
push
push
rol
loopne
cmp
mov
or
inc
push
mov
gs
jne
push
mov
add
jo
loope
js
pop
push
add
ss
mov
adc
adc
femms
inc
mov
jmp
dec
jecxz
in
and
jnp
sub
mov
xchg
push
xor
shll
loope
xchg
jnp
lock
mov
xchg
adc
pop
dec
cmp
sbbb
xor
leave
push
lods
scas
test
pop
pop
pop
subl
dec
inc
mov
pop
outsb
fildll
or
or
mov
mov
xor
je
pop
cmp
test
and
dec
fwait
orb
xchg
cwtl
pop
lret
lret
xor
jbe
xchg
mov
sbb
test
ret
aaa
inc
mov
in
sbb
in
xchg
cwtl
jp
outsl
mov
pop
lock
mov
jl
mov
sbb
adc
pop
lds
and
dec
sub
daa
fadds
jns
and
andl
jmp
mov
jae
mov
jnp
pusha
ret
adc
xor
pop
fisubrl
inc
loope
test
pop
push
mov
cwtl
test
repz
adc
scas
pop
sub
cmp
jge
xor
jp
int3
int
aas
lds
into
js
je
out
sahf
mov
stc
adc
jecxz
hlt
into
push
cmp
sbb
iret
pop
inc
lds
insb
push
mov
or
fsubr
stos
xlat
sbbb
rcrb
std
cwtl
imul
jnp
je
cmp
push
sub
sbb
sub
notb
ss
lea
push
lea
jp
mov
or
loop
aam
unpcklps
and
clc
icebp
mov
mov
fldt
sti
jnp
int3
jbe
mov
sbb
push
lds
orl
faddl
sbbb
std
xor
shl
and
insl
jne
aas
inc
daa
xchg
push
andl
imul
dec
ficoms
jno
cmp
inc
or
je
xor
fistpl
pop
movsl
or
pop
stos
scas
in
sbb
ror
or
cmp
cmp
call
jnp
sbb
inc
fsubp
adc
xor
inc
mov
imul
inc
mov
sub
data16
orb
jne
add
clc
dec
pop
fimuls
aam
icebp
aaa
fdivl
adc
inc
mov
xchg
mov
icebp
int
jg
jo
mov
mull
jb
mov
jge
outsl
mov
jmp
ret
dec
inc
dec
lcall
inc
aam
test
leave
sbb
out
inc
sub
fisttps
or
mov
test
scas
inc
fcomps
fnstsw
push
add
pop
lcall
rorb
add
pop
aas
pop
push
mov
out
leave
es
sbb
adc
lcall
addb
sti
pop
out
aad
dec
cwtl
lods
outsl
mov
xchg
pop
out
repnz
loopne
lahf
push
pop
lret
xlat
out
mov
test
icebp
push
in
inc
fiaddl
mov
mov
in
dec
add
mov
mov
cs
xchg
mov
or
or
inc
or
jae
hlt
roll
sbb
das
lods
jge
pop
in
arpl
xchg
adc
insl
push
add
jle
inc
ljmp
mov
stc
les
orl
jns
inc
pop
add
and
jbe
sahf
xchg
mov
test
pop
adcl
cmp
je
lret
je
loope
fadd
dec
bound
mov
push
mov
mov
pop
fcoms
repz
lret
mov
lds
and
mov
ret
ret
add
inc
inc
jl
std
in
mov
and
add
pop
neg
cmpsb
ja
cmpb
adc
cmp
xor
sbb
cwtl
adc
jecxz
dec
xchg
push
leave
scas
add
ds
add
jl
scas
xor
sub
out
or
xchg
ss
leave
notw
pop
aaa
add
cmp
daa
movsb
xor
inc
scas
popa
add
push
fld
les
mov
decl
pop
pop
lahf
push
mov
es
imul
mov
fchs
mov
jl
or
adc
js
add
inc
mov
adc
cld
cmp
aad
mov
mov
lods
dec
imul
jae
stos
mov
xchg
mov
xlat
daa
sub
mov
inc
jl
xchg
rcrl
hlt
sbb
adc
push
ret
shrl
jne
stc
les
mov
and
cmp
movsl
and
jae
jnp
ljmp
aaa
jbe
fadds
mov
push
ret
add
mov
xchg
cmpsl
jae
jo
pop
out
sbb
xchg
sbb
mov
stc
inc
fst
imul
dec
leave
xchg
xchg
fwait
dec
sbb
je
mov
or
mov
sarl
call
cmpsb
lods
pop
mov
push
inc
inc
xor
pop
test
lea
mov
outsb
cmp
jle
pop
adc
stc
inc
xlat
shlb
jg
into
lock
lods
xor
mov
mov
inc
jge
in
lahf
sbb
add
xor
or
push
mov
das
imul
lods
inc
xlat
nop
out
dec
push
jle
movsb
mov
mov
ret
out
adc
inc
push
orb
rclb
iret
pusha
out
pop
pop
pop
xor
rcrl
dec
into
jnp
cmp
lahf
xchg
clc
addr16
popf
test
add
jmp
loop
add
lods
xchg
and
add
sub
jmp
lods
aam
push
aaa
add
sub
adc
push
cmp
loop
ljmp
rcrb
loopne
sub
fcoms
fidivl
dec
out
fsub
pop
lods
fstpl
mov
sub
lcall
fidivl
xor
aad
aam
subl
sbb
pop
mov
adc
minps
loope
and
cmp
xor
out
and
inc
cmp
xlat
cmpsb
adc
insl
cli
arpl
fiaddl
xor
lds
pop
shlb
lret
xor
adcb
mov
dec
mov
or
fcomps
push
sub
cmp
xor
pop
cwtl
and
mov
js
test
cwtl
pop
cmp
jge
jmp
mov
in
jbe
jne
sbb
xchg
outsl
jae
or
adc
jae
daa
lods
cmpl
addr16
daa
call
xchg
test
fimull
sbb
xor
out
and
mov
enter
pop
shll
test
pop
jge
andb
inc
xchg
aam
sub
in
outsb
and
pop
cmp
jmp
shll
ret
adc
loop
das
or
xchg
pop
gs
pop
inc
bound
lea
adc
cmpsl
push
or
test
out
fbld
or
imul
jg
cs
lcall
adc
mov
sbb
sti
ror
arpl
arpl
test
scas
test
ret
out
mov
push
and
bound
rorb
and
mov
inc
pop
pop
xor
mov
mov
fisttpl
setns
pop
push
dec
mov
out
clc
loopne
ret
cmp
out
lahf
dec
push
inc
loope
pop
mov
jns
fcmovne
ucomiss
rcrl
inc
sbb
mov
jne
dec
sbb
iret
jle
push
gs
mov
int
add
cmp
je
out
jl
ss
out
mov
loopne
xchg
lea
lret
push
inc
icebp
pop
int3
or
jle
ret
and
lret
or
ss
xchg
scas
sub
mov
xor
and
or
or
pop
pop
cli
popf
shlb
pushf
cmp
ds
jmp
dec
shlb
jg
adc
nop
stc
add
sbb
inc
or
jno
std
add
popf
or
sub
xor
aas
fiadds
int3
cmp
stos
push
sbb
movsb
mov
push
js
pop
mov
mov
push
frstor
sarl
addb
out
sbb
shrd
bound
jns
into
inc
fisttpl
dec
pop
sbb
gs
and
lods
mov
and
stos
push
and
call
cmc
sti
pushaw
adc
xor
popf
mov
lret
sbb
inc
xlat
sbb
jecxz
sbb
jno
shll
xor
bound
jb
je
movsl
xchg
movsl
movsl
mov
lods
fdiv
sahf
and
aas
rcrb
psrad
sbb
adc
iret
das
push
ja
or
xchg
add
inc
arpl
out
xor
add
sti
clc
sub
dec
mov
xor
pop
int
movsb
rorl
cmp
loope
rolb
insl
add
xchg
push
addr16
inc
pop
shl
inc
lods
and
adc
loopne
inc
stos
inc
aaa
popf
and
addl
and
add
lcall
pop
or
rcrb
inc
xor
lcall
outsl
jns
and
push
mov
sbb
push
pusha
sahf
lods
or
and
mov
bound
push
and
stc
pusha
loop
out
loop
out
mov
aam
pushf
lods
lret
pusha
mov
sbb
mov
mov
sahf
ja
mov
das
addr16
inc
dec
cmp
cmp
insb
mov
mov
pusha
or
outsl
stos
sub
push
dec
lcall
je
fisubs
fwait
pushf
jae
stos
push
shlb
lret
imul
scas
adc
scas
loop
jo
xor
pop
incb
je
mov
pop
call
cwtl
and
out
mov
jl
sub
cmpsl
cmp
pop
cmpsl
push
xlat
dec
pushf
mov
mov
mov
call
xor
pop
mov
aas
mov
sub
aam
in
out
xor
lea
sub
cmp
dec
stos
inc
ds
adc
adc
cmpsl
xor
aaa
fdivs
incb
loope
stos
test
cli
adc
rcll
push
cmpl
push
xor
sbb
in
sti
dec
sub
and
jo
out
adcb
adc
pop
cmpsb
push
jnp
mov
les
out
mov
mov
lods
in
negb
movsl
cli
jle
push
mov
ja
or
fiaddl
pop
cmp
inc
sub
jns
cld
mov
mov
js
lds
cld
in
push
mov
popl
cmc
xchg
dec
and
mov
lcall
in
les
cmc
xor
out
call
andl
or
dec
pop
lahf
imul
xchg
out
jo
jl
xor
add
jno
sbb
lcall
into
stos
mov
sbb
data16
xor
mov
rcrl
mov
addr16
repz
mov
mov
mov
lods
mov
insl
xor
or
xor
pop
fcoms
repz
and
in
leave
es
push
fsubrp
inc
mov
jmp
scas
sbb
push
aad
sub
cmpsl
ljmp
mov
dec
je
push
shlb
sub
adcl
mov
outsl
xchg
out
out
xchg
bound
push
imul
movsl
insl
and
mov
mov
icebp
jb
subb
lods
les
add
adcl
push
mov
add
les
or
push
dec
add
rclb
push
icebp
pop
aad
mov
test
push
pop
popa
ljmp
es
inc
pop
xchg
in
adc
addr16
xor
jl
lods
je
jl
fidivrl
mov
leave
jns
insl
das
cmp
lret
jmp
cmp
lock
pop
xor
push
cli
jl
ret
sub
push
out
rclb
dec
lods
int
pop
mov
jmp
negb
fdivrs
arpl
cs
and
test
mov
aas
outsb
popa
and
aas
das
sbb
cwtl
add
and
test
outsl
outsl
sub
cmpsb
mov
divl
ffreep
mov
fldenv
loope
enter
xorb
pushf
stc
sub
int
pop
fsubrs
jmp
cmpsb
jne
int
cmpsb
xchg
sbb
das
dec
push
inc
stc
adcl
dec
lods
mov
jp
or
cmpsb
or
movsb
dec
jb
jo
aas
mov
xor
jle
stos
je
sarb
mov
fwait
cmp
jl
sbb
gs
xchg
adc
test
cmp
mov
insl
fs
adcb
push
jecxz
ljmp
outsb
sahf
divl
xor
les
and
push
jp
fs
dec
iret
jecxz
call
imul
int
xor
shrb
loop
sbb
pop
jmp
sub
pop
cmp
add
or
fwait
out
ficoml
cmpb
fisubl
xor
insb
dec
jl
mov
mov
imul
add
push
mov
outsl
add
mov
mov
aam
sub
das
sub
jae
pop
xlat
sbb
xchg
cwtl
repnz
notl
stc
iret
or
xchg
lds
repnz
push
jmp
stc
sub
jbe
sbb
mov
dec
jp
sub
cli
sub
loopne
mov
aad
adc
das
ss
fstpl
xor
inc
lret
push
dec
push
lods
imul
xor
mov
adc
xchg
ljmp
sub
out
movsb
pop
cs
fsubrs
inc
mov
and
stc
mov
add
stos
iret
lret
std
jne
add
sbb
cmp
les
jnp
test
or
xchg
fcomps
cwtl
xchg
sbb
ja
add
adc
xchg
aas
jae
insb
xchg
adc
dec
mov
incl
adc
ret
ljmp
cli
es
cmpsl
aam
mov
loop
pop
add
or
cli
push
fisttpll
rorb
mov
outsl
out
in
mov
ds
mov
nop
fs
sbb
out
sbb
fwait
lods
lret
pop
repnz
aam
cmpsb
mov
lods
mov
movsl
sti
xor
xchg
lds
aad
cmp
mov
inc
sahf
ss
sbb
push
cwtl
stos
xlat
jnp
mov
mov
xchg
out
repz
mov
sub
or
sub
in
ljmp
xchg
in
js
xchg
insb
xchg
add
cmpsb
add
pop
push
rorl
jbe
lods
dec
fwait
push
test
mov
lock
sbb
mov
ljmp
aas
stos
and
fcmovnbe
rorl
int3
inc
call
or
push
mulb
outsb
lods
mov
cmc
in
test
xchg
mov
adc
cmpb
movsl
cmp
cld
xchg
adc
push
sub
rcrb
mov
data16
jne
es
leave
jae
lock
ficompl
pushf
mov
xor
mov
mov
push
and
cmp
mov
inc
pop
pop
shll
sarl
jo
xchg
pop
add
xchg
fwait
xor
std
dec
add
data16
scas
mov
js
cmp
xor
repz
arpl
fmull
xor
mov
mov
aam
adc
mov
push
notb
sub
aas
addr16
sub
push
aas
adc
ds
mov
jb
divl
insl
add
dec
pmaxub
shll
xchg
addr16
push
insb
in
dec
mov
cmp
rcll
push
cmp
das
imul
dec
insl
cmc
std
push
lock
or
mov
and
daa
cltd
lcall
loop
cmp
fstps
data16
jmp
ja
sbb
hlt
ljmp
std
add
mov
ss
cmpsl
bnd
jo
xchg
das
mov
std
outsl
movsb
add
push
inc
lret
loope
mov
pop
pop
lods
or
inc
lret
push
cmp
inc
lods
lock
xlat
push
movsl
sti
xchg
fdivrl
addl
ss
jle
cmp
jp
inc
and
cli
incl
rol
pop
mov
jbe
cmp
xchg
addr16
sub
jecxz
fnsetpm(287
cli
mov
xor
jae
pusha
mov
pop
push
jle
sub
and
jp
dec
xchg
mov
dec
fisttpll
mov
lods
adc
sti
cmp
test
jmp
stc
push
xchg
xchg
lods
test
hlt
lods
inc
push
fadds
lods
popa
loope
inc
fiadds
pop
pop
xlat
cmp
push
mov
mov
pop
mov
in
jle
jmp
lret
adc
pop
je
in
inc
pop
in
jne
pop
sub
popf
sbb
cmp
or
mov
fs
sbb
xchg
push
js
sub
add
and
cmp
ljmp
mov
stos
loopne
xor
mov
xchg
dec
jno
out
fsubr
ficoms
aaa
loopne
loope
inc
call
adc
jno
fistl
mov
pop
xchg
repz
leave
pusha
mov
lods
mov
bound
push
mov
stos
aas
push
sti
mov
dec
insl
loop
sub
mov
daa
aaa
and
inc
mov
je
ret
mov
rep
es
push
rcr
xor
out
jl
insl
mov
outsb
insb
in
add
dec
sahf
nop
xlat
xlat
mov
jne
stos
push
jle
pop
gs
gs
or
inc
lea
lock
bound
xlat
outsl
xchg
ss
cwtl
sbb
pop
inc
pop
push
add
xchg
add
mov
pop
decb
push
loop
imul
sahf
push
fsubl
fwait
xor
faddl
bound
push
ret
cltd
gs
int
je
lea
sub
movsb
add
mov
jns
jns
push
xor
pop
loopne
or
out
cmp
jbe
sbb
lahf
adc
ljmp
xchg
push
adc
insb
mov
mov
stos
bound
or
xchg
cmp
push
call
hlt
incb
mov
in
xor
lret
and
not
ss
imul
cmp
jne
adc
loop
movsb
sbb
adc
mov
test
add
xor
lock
adc
scas
push
sub
scas
mov
xchg
sbb
xchg
les
xchg
xchg
call
dec
pop
and
cmp
sub
xlat
cli
imul
mov
mov
jae
insl
cltd
pushf
out
push
jno
ss
out
or
mov
test
xor
bound
mov
call
sub
les
xchg
xchg
ja
cli
js
xorb
fcompl
enter
and
cmp
cli
add
or
cmpb
sarl
xchg
repnz
mov
cmpsb
adc
pop
adc
test
mov
sbb
test
xchg
mov
into
ficoms
jg
cmc
fmul
js
sub
or
scas
push
loope
xchg
cbtw
xchg
push
data16
mov
inc
jno
lods
jnp
xchg
sbb
js
insl
les
mov
sub
sbb
xchg
add
je
sbb
push
aaa
pop
lret
ss
in
lock
test
jecxz
push
ljmp
in
cwtl
and
or
inc
stos
fst
insb
cmp
ret
jecxz
jecxz
mov
sbb
adc
je
or
addl
xor
adc
ja
pop
xor
cwtl
push
add
fidivrl
fwait
aas
or
and
subl
lret
pop
cmp
das
dec
pop
enter
xor
cwtl
dec
popf
or
outsb
and
cmp
add
pop
popf
fwait
mov
xchg
imul
pop
xchg
inc
into
adc
sub
and
sub
sti
xchg
xor
lods
sbb
lock
dec
add
mov
mov
addb
mov
ret
adc
pop
add
add
mov
dec
pusha
add
sub
sbb
push
xor
xor
fs
add
mov
inc
push
fmuls
insl
jno
loop
mov
push
and
out
jae
sub
insl
mov
subb
stos
scas
xchg
jnp
jecxz
lret
int3
cmp
and
notl
jg
mov
pop
lcall
test
lds
sarb
pop
outsb
add
faddl
pop
imul
add
loop
in
hlt
int
aaa
mov
dec
jmp
lahf
mov
mov
sbb
jb
std
ret
dec
mov
push
imul
xor
int3
test
mov
iret
xchg
mov
jne
jle
adc
jbe
sbb
pop
push
inc
aad
cwtl
int
adcl
add
stos
sbb
xlat
inc
gs
jecxz
ret
out
bswap
jg
fidivrl
jle
lods
mov
mov
push
jp
fcomp
xchg
and
mov
lret
divl
test
xor
rolb
lcall
imul
into
push
movsl
jbe
ret
cmp
out
push
sahf
std
fimull
mov
or
inc
movsb
mov
aam
xor
in
test
cmp
popf
add
imul
movsb
dec
movb
and
mov
adc
fdivs
xchg
aam
insb
adc
xor
dec
or
imul
xor
int3
movsl
into
arpl
pop
sbb
mov
and
adc
mov
mov
or
pop
mov
pop
stos
fisubs
ljmp
fdivrl
jnp
xor
jnp
pop
cmpsb
mov
shll
ljmp
push
xchg
jge
inc
dec
lock
mov
lea
gs
repnz
loopne
jecxz
inc
jnp
cld
sub
cmova
pop
push
jbe
mov
lahf
add
fstpt
out
clc
add
mov
and
or
push
ret
pop
sahf
fucomip
decb
int
xchg
pop
das
rolb
xchg
jo
lret
scas
inc
ja
mov
dec
mov
lcall
mov
mov
dec
pushf
test
data16
jo
repz
es
pop
push
sbb
je
popa
pop
fistl
adc
addr16
xor
daa
mov
or
pop
push
cmp
nop
lret
cmp
aas
add
xchg
popf
ret
lcall
and
aad
mov
lcall
call
mov
insl
adc
std
es
push
shll
inc
dec
mov
fadd
pop
fcom
mov
icebp
leave
mov
adc
and
mov
sbb
scas
je
push
mov
adc
mov
pop
dec
sub
mov
jcxz
mov
ret
call
jns
ret
or
mov
data16
daa
mov
mov
sbb
shll
mov
call
push
jns
nop
add
adc
sub
mov
aam
mov
or
mov
out
addl
cltd
or
xlat
clc
stos
jbe
movsb
in
jle
sahf
xchg
jle
outsl
xchg
mov
fisttps
push
insl
push
mov
loop
int
mov
ret
arpl
dec
or
jb
pop
sub
inc
xor
ret
or
mov
call
jb
pop
sub
mov
sahf
outsl
divb
in
mov
out
add
sbb
ljmp
cmp
call
hlt
out
jge
or
mov
xchg
jg
pop
push
mov
pop
xchg
add
xlat
mov
cmp
sbb
fbld
jne
jl
mov
adc
push
jmp
test
inc
mov
sub
mov
insb
iret
mov
popa
popf
jmp
adc
out
pushf
dec
leave
loop
cmpsb
dec
addr16
add
stos
and
movb
push
leave
stc
cltd
scas
loope
add
iret
insb
pushaw
pop
frstor
pop
lret
add
adc
mov
push
int3
xchg
dec
iret
mov
or
add
add
sub
adc
or
or
inc
add
inc
fists
sbb
mov
mov
jecxz
push
dec
sbb
and
inc
js
cmp
test
lods
das
nop
push
dec
mov
mov
xlat
pop
cmpsb
out
jns
jbe
sub
inc
ret
xchg
sub
xor
push
das
inc
push
imul
mov
or
push
xor
cli
sub
out
cwtl
loopne
insb
and
adc
mov
repnz
lock
icebp
xchg
mov
arpl
arpl
testl
mov
adc
insb
cmp
inc
rcll
fsubr
and
fnstcw
push
sub
jb
xor
inc
aaa
aad
inc
test
dec
subl
dec
sbb
add
push
clc
inc
sbb
and
and
das
pop
xchg
inc
cld
mov
adc
mov
sbb
or
bound
adc
xor
push
adc
and
jnp
jns
xchg
jno
ljmp
mov
cmp
sub
inc
rorb
push
inc
jecxz
xlat
mov
push
mov
pusha
sahf
lret
xlat
add
pop
lret
ja
and
pop
add
shlb
mov
or
gs
js
inc
test
and
flds
cmp
div
repnz
pop
std
or
popl
shll
imul
loope
ljmp
push
rolb
cmp
jnp
add
jo
push
test
clc
or
inc
pop
ds
inc
sub
add
dec
xchg
sbb
push
lds
inc
add
gs
jnp
xchg
clc
int
xchg
cmp
iret
insb
mov
out
sub
inc
dec
daa
mov
ljmp
add
jp
xor
push
orb
sub
test
mov
aad
pop
negl
fsubrs
mov
pop
std
dec
sbb
jae
push
test
test
fstps
stc
dec
xlat
mov
out
push
sub
sahf
sub
and
xchg
push
mov
pop
cs
fnstsw
call
mov
fsub
push
inc
mov
inc
sbb
sti
pushf
pop
xchg
shl
push
sub
je
loope
mov
dec
mov
push
add
dec
xchg
lods
pop
xor
dec
aaa
xchg
add
addr16
xor
hlt
sarl
mov
sahf
or
adc
xchg
cltd
jne
fistl
sbb
pushf
mov
test
mov
sub
xchg
rcrl
xor
mov
inc
pop
js
ret
movsl
sub
push
adc
sub
add
mull
sbb
mov
cld
adc
in
test
pop
pop
es
dec
repz
or
fucom
or
aam
movsb
cmc
leave
out
mov
sub
or
xchg
push
add
pop
outsb
add
imul
cltd
leave
jge,pn
or
jne
mov
sub
leave
jne
cmp
dec
ljmp
cltd
sarb
aam
inc
test
inc
cmp
or
loope
xor
adc
sbb
inc
lea
sbb
sbb
aas
scas
jl
enter
mov
and
adc
test
mov
daa
test
idivl
leave
mov
push
aaa
scas
push
stos
fdivl
pop
outsb
inc
sti
cmp
call
pusha
sub
repz
mov
pop
loop
test
cmp
xor
std
adc
stos
inc
or
test
mov
jnp
mov
lcall
test
ret
mov
dec
repnz
out
push
fnstsw
push
call
cmp
fcomi
or
bound
out
aam
mov
sub
pop
es
sbb
and
popf
sub
sbb
or
push
push
mov
push
testl
aam
cwtl
stos
fsubrl
popf
lret
jecxz
out
lahf
std
popa
pop
orl
pop
xchg
decl
addr16
fmull
aad
loope
mov
cmc
mul
loopne
or
mov
xchg
lcall
idivb
pop
leave
imul
cmpb
je
movsb
xor
and
call
push
mov
push
scas
das
mov
add
test
xchg
popf
xchg
jge
aam
jp
test
in
ss
test
sahf
daa
mov
orb
lds
add
pushf
les
mov
push
cld
cltd
pop
dec
inc
jns
xchg
lds
add
dec
ret
jnp
mov
cmp
ds
mov
or
jp
inc
and
gs
dec
imul
dec
push
insb
int3
xchg
add
jmp
in
out
push
and
jo
push
pop
addr16
ret
test
xor
sub
enter
push
sub
sbb
fisubrs
cltd
adc
nop
or
shl
cmc
xor
pop
sub
push
inc
roll
adc
sub
adc
push
lock
repz
sbb
scas
cmp
jg
xor
dec
sub
inc
mov
das
xchg
jo
inc
pop
jecxz
mov
and
dec
sbb
mov
xchg
in
push
mov
xchg
cli
push
test
and
add
jmp
sub
movsl
rol
idivl
add
adc
mov
xlat
jns
mov
stc
push
testb
clc
jecxz
inc
xchg
jnp
mov
imull
jg
lret
push
and
sbb
mov
dec
hlt
mov
adc
scas
mov
mov
sarl
adc
xor
sub
pop
adc
jb
mov
pop
sub
mov
cmp
cmp
mov
dec
push
push
xchg
cmp
stc
and
nop
mov
sub
xchg
mov
mov
outsl
adc
cmp
xchg
mov
mov
aad
orl
out
stos
add
sahf
lds
push
sub
sahf
pop
add
cmp
or
mov
push
arpl
scas
shl
push
movb
pop
and
pop
aaa
and
add
daa
test
in
mov
push
inc
lret
rcrl
cmp
daa
or
andl
jne
push
mov
inc
and
xlat
pop
in
jae
push
xor
jnp
scas
lods
adc
dec
cmp
push
jge
insb
cmpsb
rorb
pop
mov
mov
inc
aaa
out
add
out
outsb
cmp
push
stos
insl
push
mov
cmpsl
fs
shrd
or
sub
sbb
orl
or
icebp
xor
mov
les
insl
fwait
addb
and
sbb
cmp
and
movsl
aam
lret
fadds
sbb
jge
inc
mov
jnp
add
cs
mov
mov
inc
fcomps
and
inc
and
add
sbb
jge
je
inc
sbb
dec
adc
ja
jmp
mov
lea
cmp
pushf
push
adc
stos
xor
stos
push
in
jl
push
sbb
add
les
push
ja
shrl
test
or
sub
arpl
test
outsl
imul
cmc
pop
sub
xor
pop
lods
inc
or
rcll
sar
bound
mov
sbbl
mov
mov
in
ja
and
and
xor
or
scas
jno
sub
test
repnz
push
jmp
fsubl
movsb
std
inc
outsl
std
into
sbb
das
mov
inc
mov
push
std
or
add
jb
ljmp
decl
dec
inc
movsl
scas
push
lods
cmp
mov
or
mov
push
jne
inc
jmp
in
jns
out
call
jmp
lcall
and
lret
mov
jo
jb
jnp
inc
pop
add
jle
stc
int3
xchg
push
sub
fcoms
mov
adc
xchg
cwtl
add
out
cmp
into
mov
inc
cld
xchg
popl
and
mov
rolb
and
fwait
mov
test
sub
gs
dec
jp
mov
ds
pop
add
adc
jbe
and
xchg
pop
insl
mov
dec
adc
mov
leave
lods
aas
push
jne
or
scas
ja
inc
xor
cmp
cmp
xchg
cmp
inc
lods
mov
dec
or
lds
mov
and
jnp
ljmp
xchg
cmpsb
out
xor
sti
pushf
mov
sar
lds
arpl
xchg
xchg
pop
cmp
test
test
and
adc
lds
adc
insb
jne
ficomps
fstpl
adc
in
lock
add
jae
mov
xchg
ffreep
pop
push
sub
jecxz
aas
xchg
lret
fdivrs
das
mov
pop
sub
jae
test
ret
fists
shlb
xor
xchg
mov
push
add
les
loopne
outsb
nop
jo
std
test
mov
jmp
sub
ret
add
pop
sub
pop
and
or
inc
cmp
or
imul
aam
mov
mov
rorb
and
cmp
out
leave
push
pushf
loop
test
add
mov
mov
imul
pop
es
xchg
mov
inc
add
and
inc
into
hlt
pop
loope
xchg
mov
movsb
out
mov
bound
add
xor
in
jmp
jp
mov
jbe
adc
into
inc
fwait
xlat
jmp
xchg
add
push
add
fldcw
shlb
dec
leave
pop
pop
in
outsb
mov
test
repnz
mov
outsl
sbb
shrb
sub
in
sar
dec
push
out
mov
cltd
add
xchg
pop
cmp
cltd
loopne
fidivs
das
jecxz
jl
pop
daa
je
dec
test
pusha
jb
xchg
jp
jo
mov
leave
out
imul
adc
int
out
jae
and
xor
add
cmp
cmp
rorb
adc
and
jge
test
leave
cli
mov
sub
pop
or
out
dec
dec
jb
mov
inc
pop
push
mov
and
jb
and
push
xor
dec
pop
mov
mov
push
jae
adc
test
jp
push
andl
enter
cmp
push
jo
ja
lock
sahf
nop
in
ret
lods
daa
cwtl
les
cwtl
mov
jg
pop
icebp
or
adc
and
push
mov
pop
xor
sbb
and
setae
sbb
lods
cltd
int3
or
repz
mov
leave
mov
sbb
inc
leave
mov
inc
inc
cli
fnsave
adc
popl
mov
push
rcrl
daa
hlt
or
adc
sub
out
dec
push
inc
imul
pop
cmp
inc
jmp
pop
xchg
dec
iret
mov
fldcw
adc
mull
inc
jl
jmp
mov
sbb
addr16
test
jg
fidivl
fstpl
cmc
inc
cmp
or
test
mov
out
mov
jns
aad
and
pmaddwd
in
add
add
cmpsl
mov
mov
xor
pop
adc
dec
jne
insb
mull
shr
pop
cmpsl
or
lods
in
mov
or
xchg
jae
in
popa
out
xor
cmp
adc
dec
cwtl
mov
int
andb
popa
loope
sahf
or
cmp
clc
cwtl
sbb
xchg
xchg
mov
lods
fbstp
cld
out
cmp
xor
xor
popf
dec
lea
shrl
jne
push
pusha
xchg
sub
insb
adc
jmp
add
fwait
int
add
fnsave
int3
adcb
sub
cld
test
subl
inc
fstpt
xchg
iret
aaa
mov
dec
sahf
mov
adc
mov
mov
loopne
jmp
jmp
je
add
mov
out
push
mov
pop
push
push
and
pop
shl
add
or
pop
and
dec
lock
loopne
jp
or
jns
dec
cmpsl
fidivrs
out
cwtl
lea
cmp
movsl
mov
aaa
xchg
push
lods
dec
cmp
fbstp
and
out
jo
mov
lods
addl
and
jle
add
xorl
mov
std
adc
lods
dec
loop
test
pop
nop
dec
lods
inc
pop
insb
jp
and
or
aad
mov
dec
js
bnd
mov
repnz
scas
xchg
push
mov
cld
ret
mov
mov
adc
jl
stos
shlb
push
add
ds
cmc
ljmp
das
sti
dec
cmp
pop
mov
cmp
cld
aaa
sbbl
roll
sub
mov
add
pushf
incb
loop
arpl
jecxz
imul
mov
into
jl
add
fisubrs
push
push
sbb
mov
adc
pusha
xlat
insb
or
iret
sbb
scas
xchg
push
xchg
lret
add
repz
mov
pop
xchg
ja
insb
stos
mul
xor
hlt
inc
mov
cld
ljmp
jnp
insl
sub
mov
pop
insb
leave
out
std
movsl
mov
add
jp
push
mov
mov
mov
cli
shrl
les
lret
xor
jecxz
sbb
into
add
dec
sbb
xacquire
daa
dec
and
lods
outsb
sbb
jmp
xor
cmp
jge
cld
repz
jns
dec
movsl
out
les
insl
inc
popf
sarb
ljmp
sbb
pop
pop
hlt
xor
addr16
xchg
adc
popa
decb
dec
adc
cwtl
push
subb
arpl
mov
aas
or
inc
dec
mov
ror
dec
add
jnp
enter
xchg
push
pop
mov
lock
push
inc
repz
iret
dec
dec
sbb
fwait
je
or
pop
rcl
aas
cmc
xchg
mov
inc
stos
pop
dec
push
push
inc
cmp
xor
or
stos
push
xchg
dec
cmp
xchg
scas
hlt
sub
mov
pop
cltd
in
push
shll
adc
pusha
mov
insb
mov
add
fisttpl
repz
call
stc
or
lret
lcall
dec
pop
lods
push
dec
dec
icebp
mov
repnz
shll
ss
inc
addr16
mov
paddusb
xchg
pop
lret
adc
daa
jo
fdivrs
or
xor
aam
bnd
push
cli
ljmp
jle
clc
arpl
dec
cli
push
push
push
out
inc
push
dec
mov
mov
lret
out
les
dec
add
adc
or
das
stc
push
pushf
xchg
fsubrs
loopne
adc
xor
cmovno
dec
scas
pop
lret
sbbl
sbb
cmp
aaa
mov
sbb
adc
aam
bound
sub
add
stc
lods
sahf
lahf
push
mov
stos
and
lahf
ljmp
xor
sbb
test
jl
push
push
or
fucomi
in
xchg
jbe
imul
xorb
testb
lcall
jb
sahf
fisttpll
fstps
mov
sub
sub
ret
lcallw
leave
das
rorb
sub
jecxz
push
shll
lea
dec
leave
gs
fsincos
rorb
cmpsl
and
mov
adc
dec
add
add
pop
or
scas
cwtl
fnstenv
popa
pusha
and
outsb
shl
xlat
mov
or
es
pushf
hlt
fiadds
js
push
xor
mov
mov
test
ss
push
add
and
sub
gs
movsb
jnp
lds
clc
ret
xchg
or
adc
jne
sbb
mov
cwtl
dec
pop
sub
int3
jle
sti
loope
dec
rolb
dec
cmp
aaa
repnz
test
test
jle
inc
andl
stos
int
xchg
and
mov
xchg
inc
popa
inc
clc
jmp
xor
ja
inc
cmp
push
aaa
aas
nop
jnp
lea
fcoml
repz
fs
mov
and
xor
jno
mov
mov
loop
xchg
hlt
insl
jle
cmp
pop
jne
pop
arpl
add
cmp
jno
ret
insl
es
cmp
ljmp
pop
mov
ja
adc
add
pop
filds
call
ret
xor
imul
negb
dec
pop
inc
inc
mov
fucom
movsb
iret
lods
sti
and
shll
testb
mov
push
clc
adc
mov
sub
cmp
sub
insl
nop
xchg
cmp
adc
shll
fisubrl
mov
cmp
hlt
push
mov
ficomps
sub
pusha
in
xchg
mov
push
rolb
out
gs
xor
lods
add
stc
insl
fnsave
jg
divb
clc
test
pusha
cs
clc
add
xor
mov
jb
dec
mov
fs
bound
jmp
or
lods
push
sti
add
mov
pop
popl
mov
fdivr
or
mov
dec
push
add
pop
sbb
mov
jmp
mov
adc
pop
mov
mov
dec
xchg
xor
and
sub
mov
test
testb
jnp
mov
int3
lcall
test
jg
repnz
pop
push
pop
mov
out
dec
imul
mov
or
mov
sti
cli
outsb
aaa
dec
mov
pop
dec
xor
mov
iret
aaa
jg
loope
cmpsl
in
inc
inc
in
jns
pop
filds
mov
aas
sub
scas
scas
sub
inc
outsl
mov
rcrl
addr16
rcrl
out
push
leave
or
popa
pushf
rol
cmpb
bound
loop
mov
pop
or
aad
rclb
mov
call
mov
test
push
mov
push
rorb
jne
dec
adc
sbb
xor
or
int3
aas
daa
adcb
xor
add
in
adc
aam
cmp
lea
dec
push
and
int
out
jns
fidivs
movsb
or
mov
inc
xlat
jecxz
fwait
pop
or
pop
mov
test
inc
outsl
mov
into
loope
inc
sbb
stc
push
mov
rorl
sbb
lahf
dec
jl
or
shrb
std
ljmp
mov
xor
stos
roll
push
test
cmp
cs
andl
sbb
adc
cltd
jge
inc
out
aaa
inc
xor
jl
stos
das
or
dec
jg
orb
add
fisttpll
xchg
adc
mull
mov
lea
jns
popf
mov
pop
hlt
add
xlat
jge
lock
sub
lods
int
cli
pusha
xchg
jg
xchg
xchg
cmpsl
add
xor
mov
mov
clc
add
push
mov
js
leave
ss
fistl
test
add
jle
jp
xlat
or
jno
mov
mov
mov
in
ficompl
mov
inc
mov
fcomp
mov
fdivrl
mov
dec
out
inc
sbb
bts
jle
add
mov
mov
adc
xchg
iret
pop
sahf
lcall
cmc
sub
xchg
mov
mov
call
je
dec
icebp
aaa
xor
mov
out
sub
xchg
inc
jmp
jno
ss
push
xchg
in
push
and
addr16
jb
adc
clc
adc
sub
jae
in
mov
int3
cmp
lahf
push
xlat
push
lret
cmpsb
mov
mov
push
mov
insb
lret
sbb
int3
dec
sub
dec
pop
xchg
jb
push
pop
pop
daa
test
scas
lods
call
ljmpw
cld
push
test
lea
xor
inc
inc
hlt
imul
movb
mov
stos
imul
js
test
push
nop
cmp
dec
imul
xchg
adc
fists
out
cmpsl
jg
xchg
out
imul
outsl
and
add
cmc
pop
gs
es
add
pop
push
dec
inc
aad
bound
sbb
stos
pop
sub
xchg
and
sbbb
and
inc
ljmp
add
add
subl
loop
rcr
pop
mov
xchg
dec
rolb
pop
or
push
mov
adc
popf
xor
push
mov
push
dec
lods
cs
notl
pop
sub
or
ljmp
jne
outsl
xor
dec
push
add
shl
lcall
jne
push
je
lret
shrb
cli
notl
in
xor
inc
pop
inc
and
pushw
adc
sbb
adc
add
in
aam
movsb
mov
test
adc
push
push
cmp
aas
jae
or
mov
loop
jbe
xor
dec
aad
cltd
int3
xor
inc
scas
or
out
mov
sub
mov
xor
inc
xchg
fwait
popf
adc
mov
xor
mov
dec
lea
std
jne
psubq
shlb
aaa
and
xchg
outsb
add
std
sbb
cmp
lret
lcall
push
mov
xchg
lcall
push
pop
loopne
push
adc
test
or
out
cmp
dec
xor
mov
or
xor
sub
loop
int3
push
cmp
fimull
mov
ret
ret
jg
scas
dec
push
cmp
add
sti
lods
cltd
dec
out
imulb
iret
dec
cmp
pop
adc
int
push
xor
test
mov
xchg
in
adc
sqrtps
insl
sub
mov
inc
popa
das
lcall
sub
xor
cltd
ret
cmc
loope
in
inc
jl
lret
add
insb
lock
scas
dec
outsb
fwait
out
lods
or
mov
jge
ss
mov
sahf
icebp
xchg
mov
xchg
push
out
das
adc
lods
and
leave
sbb
cmp
lods
pop
out
xor
adc
sbb
or
push
jne
scas
imul
cmp
add
fdivl
iret
push
pop
clc
lret
sbb
mov
mov
loopne
ja
mov
add
hlt
int3
pop
push
mov
pop
jo
pushl
mov
loope
sub
push
fs
cmp
or
mov
push
in
jnp
push
push
sub
aas
inc
enter
inc
sarl
rorb
out
stos
rcrb
arpl
jp
jno
fs
mov
and
xchg
sbb
cs
addr16
sub
mov
dec
aas
fisubl
arpl
sub
aaa
lods
in
and
roll
sub
dec
iret
call
sahf
nop
fstpl
adc
dec
icebp
dec
mov
test
inc
cld
je
lods
mov
imul
jecxz
mov
inc
mov
adc
rcll
dec
inc
mov
addr16
rcll
jae
outsb
popaw
dec
shlb
iret
add
dec
sbb
inc
std
sbb
inc
cmp
repnz
test
sub
add
sbb
mov
mov
xor
lret
addr16
fsub
push
fisubl
out
es
scas
fiadds
pop
inc
dec
sub
repnz
outsb
test
xchg
sbb
clc
icebp
scas
cmp
dec
faddl
add
or
mov
push
push
dec
cmpsb
imulb
jecxz
out
imul
fsubr
jb
mov
icebp
push
add
std
sbb
es
shrb
pop
xchg
cmp
mov
test
xorb
inc
dec
es
stos
std
xor
push
scas
popf
push
in
addr16
aaa
add
clc
call
cmp
mov
pop
xchg
fwait
mov
or
out
and
adc
pop
push
pop
outsb
enter
inc
sub
sbb
rcr
insb
xchg
xchg
insb
cmp
jo
hlt
mov
push
aam
jle
fs
fwait
mov
test
inc
pop
dec
les
pushf
fadds
mov
sub
cmpsl
mov
sub
mov
fcompl
push
int3
shll
or
ds
lods
push
mov
jg
or
inc
add
jae
xchg
rcrl
push
adc
mov
pop
imul
insl
xor
jg
out
popa
repnz
rcrb
xchg
mov
xchg
cmp
mov
scas
scas
fcmove
gs
into
out
xlat
mov
jae
xor
mov
pop
movsb
lahf
xor
loope
les
sahf
lods
nop
aas
out
and
xchg
and
push
inc
lahf
lcall
adc
mov
push
shlb
ljmp
push
xor
pop
sub
xchg
pop
imul
sbb
pop
inc
xchg
and
pop
add
div
lcall
and
pop
enter
cmc
mov
cmp
push
jno
sub
sbb
push
fsubrs
cmp
std
cld
stos
lds
push
mov
es
stc
ret
inc
xchg
pop
repnz
cmp
roll
es
jmp
fiadds
fwait
adc
and
inc
cmp
and
scas
mov
mov
aam
mov
sbb
sub
mov
xchg
icebp
mov
dec
loope
pop
mov
fs
sub
inc
test
mov
in
push
leave
lock
and
data16
rol
inc
test
clc
mov
adc
outsb
pop
inc
ljmp
mov
sub
push
popf
push
mov
out
cmpb
xor
mov
xor
and
push
stos
sub
adc
adc
cmpsb
hlt
mov
mov
lahf
cmp
div
out
pop
frstor
orl
out
add
dec
mov
scas
lcall
push
xor
jmp
mov
lock
repnz
mov
test
jge
or
dec
lea
mov
sub
sti
lds
mov
clc
adc
enter
fisttpl
xchg
fwait
sub
fldl
xchg
cmpsb
fsub
icebp
mov
sar
aas
clc
mov
lret
lret
jg
inc
lods
xchg
enter
lcall
xchg
dec
outsl
fmull
adc
out
inc
adc
leave
cs
dec
fbld
test
hlt
mov
arpl
sub
mulb
lcall
push
cmp
xchg
and
adc
repnz
repnz
pop
jmp
sub
push
add
add
sub
mov
or
pop
sti
sub
sub
das
adc
cwtl
push
je
add
pop
mov
sti
addr16
push
jmp
xchg
push
stos
add
jle
mov
hlt
test
cmp
imul
movsl
cmp
or
pop
sub
loopne
pop
xchg
fwait
jg
push
or
insl
mov
mov
sub
jb
stos
cs
pusha
adc
out
loopne
rclb
lcall
pusha
ror
je
addr16
dec
mov
in
xor
outsb
out
adc
mov
cld
loop
push
arpl
add
push
in
iret
and
cltd
sub
mov
inc
push
test
je
fnsave
jbe
add
scas
je
aad
popa
ret
jo
js
mov
push
cmp
ret
and
lret
pop
leave
jp
sbb
dec
sbbl
mov
loope
cmpsl
das
push
push
or
sti
call
cmpsb
pop
fidivrs
movsl
pop
xchg
insl
xor
test
fnsave
adcb
mov
add
popa
ret
mov
jge
icebp
inc
or
popa
rorb
and
mov
fcomps
dec
sub
in
dec
jno
cmp
aam
inc
decl
lock
std
pop
mov
sub
cmc
loope
sti
mov
mov
out
pop
fldt
jne
pop
movsb
inc
repz
movl
faddl
scas
ss
ljmp
es
fisubs
sub
shlb
pop
lock
ror
ljmp
popa
and
jecxz
insb
xorb
jg
mov
aam
andl
jecxz
data16
mov
sbb
mov
sbb
lods
pushf
aam
mov
sbb
jb
or
mov
cmpl
das
mov
xchg
iret
daa
inc
xor
and
lods
flds
and
mov
scas
cltd
sub
test
test
inc
in
mov
push
int3
pop
movsb
mov
mov
andw
nop
sbb
adc
jge
aad
and
jg
call
pushf
push
dec
xchg
mov
stc
cmpsl
or
insl
sbb
loopne
jbe
insb
jmp
mov
pop
loope
fnstsw
jl
pop
movsb
mov
mov
or
xchg
jecxz
imul
inc
pushf
fsts
pop
inc
xchg
mov
les
mov
ss
fstps
fldcw
pusha
fwait
and
pop
outsl
fmuls
shrl
jnp
xchg
sarb
cmc
jp
popf
loope
mov
jo
js
cmp
xor
stc
mov
pop
inc
inc
pop
shll
dec
nop
jne
mov
loope
add
add
and
scas
xchg
stos
fwait
jecxz
adc
push
out
pushf
pop
test
mov
push
lea
sahf
dec
adc
fmull
mull
jle
jl
xchg
mov
mull
pop
lret
mov
shrl
and
dec
sub
lret
add
imul
cmpsb
push
pop
popf
out
cmp
jne
inc
loope
inc
into
mov
outsb
xor
push
xor
add
cmpb
inc
movsl
outsb
pop
andl
cmc
mov
jnp
and
sub
mov
ja
out
insb
lahf
pop
cmpsb
jb
pop
and
push
in
xchg
ds
mov
sub
and
adcb
add
ret
sub
std
cwtl
test
adc
iret
sbb
addr16
add
adc
push
jge
push
pop
lcall
lahf
stc
insl
push
push
fcomps
push
dec
shlb
xchg
roll
pop
scas
mov
jne
loop
mov
sub
iret
add
cmpsl
add
mov
cmp
dec
icebp
mov
mov
sti
lcall
add
jns
inc
push
out
xor
jns
mov
je
test
in
jp
pop
outsl
jb
roll
dec
mov
inc
sub
sub
cmp
dec
sbb
aaa
and
jg
mul
lret
movsb
jo
sbb
lods
xchg
dec
clc
mov
push
adc
push
nop
fadd
repz
je
lods
int3
gs
or
call
les
ljmp
jbe
mov
shrb
pop
jae
rclb
dec
jecxz
lea
jbe
or
outsl
mov
xchg
notb
repnz
cs
in
pop
and
adc
data16
clc
jo
das
add
push
sbb
and
sahf
mov
mov
push
data16
fwait
fs
sbb
pop
stos
fistps
fisttpl
int3
xor
mov
jecxz
testb
scas
sub
ja
jg
repz
mov
cwtl
in
mov
xchg
xchg
xchg
push
xchg
push
imul
mov
jl
mov
cmpsb
loopne
mov
sub
rorb
dec
mov
leave
filds
cmc
jne
mov
sub
loopne
pusha
cmp
addl
xchg
fcoms
adc
add
xchg
int
cmp
fadd
dec
pop
lea
xchg
fldenv
pop
jnp
pop
jb
ret
dec
inc
pause
dec
mov
inc
pop
or
push
and
or
lea
jmp
rcl
mov
cltd
fidivrs
pop
ret
fcompl
insb
adc
push
sub
mov
push
mov
insl
pop
mov
scas
lret
push
add
mov
mov
and
stos
dec
xor
pop
scas
js
push
pop
mov
cmpsb
mov
adc
or
adc
stos
dec
out
sbb
cwtl
sbb
pop
cmp
call
dec
outsl
add
adcl
in
xchg
ficomps
jns
xchg
rep
inc
push
xchg
jo
popa
cmp
adc
adc
ret
mov
add
sub
leave
pop
sbb
wbinvd
inc
dec
lcall
inc
insb
adcb
push
ffreep
jno
xor
ficomps
push
push
lret
or
aaa
repz
rclb
test
jo
ljmp
xor
add
xlat
rcr
lea
xchg
cmpsl
push
and
push
enter
hlt
pop
cmp
stos
out
xchg
das
stos
aad
xchg
adc
rol
dec
mov
dec
pop
iret
jecxz
fisubrs
cltd
mov
or
xchg
out
adc
ds
psubsb
ss
mov
cmp
cmp
aaa
mov
pop
jmp
and
pop
adc
adc
and
dec
push
or
stos
sbb
cs
ret
mov
add
jo
imul
icebp
jns
scas
fadd
popa
xchg
jb
jae
dec
lcall
outsb
rcrb
push
lods
call
jg
repz
dec
ret
or
jl
jle
dec
mov
movsb
sbb
mov
stc
push
pop
icebp
jne
xor
or
arpl
shlb
push
mov
push
pop
mov
filds
lahf
pop
push
cmp
insb
mov
popf
std
and
rcr
and
std
jge
test
out
aaa
and
and
xchg
inc
repz
fsubrl
adc
callw
das
loop
icebp
xor
jl
loop
push
xor
pusha
add
fdivl
push
pusha
fstp
push
call
outsb
add
mulb
fs
fs
fsub
cmp
icebp
or
nop
mov
push
repz
pop
mov
adc
pop
jecxz
stos
enter
ret
jmp
stos
lock
inc
mov
add
jne
dec
pop
push
mov
xor
push
lcall
out
pop
lds
xor
mov
test
repnz
in
add
inc
xor
rolb
pop
inc
lret
mov
les
sbb
clc
test
push
pop
imul
adc
shr
mov
cmp
jge
lods
je
call
rolb
ljmpw
inc
pop
cmp
cmc
sbbb
dec
shr
sub
sahf
adc
sbb
lods
mov
push
pop
fstps
xor
rol
mov
arpl
pushf
repnz
push
jne
adc
mov
jl
mov
into
mov
adc
addb
je
test
sbb
scas
xorb
call
int3
decl
fdivs
adc
mov
adc
sarb
sbb
or
repz
adc
push
insb
out
sbb
or
adc
or
jl
push
adc
sub
xor
pop
xor
daa
insb
mov
push
sub
jno
jo
jne
in
xor
dec
dec
rcll
imul
fmulp
fidivs
shll
imul
push
stc
jmp
sub
int
fmulp
int3
daa
dec
and
je
xchg
cltd
jl
pop
fstpt
mov
xchg
fidivrl
push
je
sbb
cmp
call
sarl
iret
outsl
xor
les
cmp
inc
mov
gs
bound
push
jo
iret
ss
add
rcr
mov
data16
mov
push
cs
xor
test
leave
fidivrs
jae
ret
mov
in
and
dec
mov
mov
push
xchg
fiaddl
and
cmp
push
xchg
jmp
and
inc
mov
mov
add
push
popa
sub
adc
movsl
dec
shld
and
shrb
sub
push
cmpsb
insb
mov
cld
xchg
mov
xchg
fldenv
mov
ljmp
gs
dec
lds
pusha
push
ja
jns
inc
add
std
lods
iret
push
jb
mov
or
ror
mov
hlt
pop
add
imul
push
inc
cli
fwait
test
push
fistps
pop
push
jb
cmpsl
and
hlt
in
mov
in
or
test
loope
enter
push
cmp
push
pop
movsl
sti
rcll
repz
gs
push
and
pop
pop
fmull
cmc
jne
mov
xor
xchg
rcrl
negl
test
inc
mov
mov
xorb
cwtl
cmp
es
adc
inc
mov
lret
in
push
ret
pop
imul
data16
cmpsl
imul
xchg
dec
xlat
lcall
cld
loopne
mov
in
sti
push
push
xchg
fucomi
sbb
outsb
adc
jnp
cmp
adc
loopne
jae
test
insb
or
cmp
mov
addb
or
push
cmp
icebp
xor
xor
xor
inc
mov
pusha
ja
jno
aam
pop
ljmp
repz
mov
add
scas
push
sahf
cltd
xchg
lret
fimull
imul
test
mov
adc
cmp
pop
xor
stos
lcall
addr16
mov
int
sub
cltd
cmc
xchg
mull
test
jl
icebp
xlat
stos
ja
and
mul
movsl
cltd
mov
push
xchg
sarl
sbb
jno
or
mov
shrb
bound
fdivrl
test
in
sub
push
idivl
lret
test
mov
or
scas
shlb
ret
test
loopne
xlat
lahf
inc
cmp
mov
add
mov
mov
and
add
lret
das
lcall
add
aaa
repz
das
push
repz
pop
stc
xchg
cmp
mov
add
pushf
cmp
sti
mov
mov
push
imul
pop
jge
fdivl
add
jp
pop
orl
sub
cmp
int
jb
imul
xchg
inc
shrb
ret
test
lea
insb
fisttpll
pop
fwait
push
push
movsb
and
mov
push
push
sbb
fbld
das
ds
xor
cmpsb
dec
in
div
sub
sub
dec
cmp
rorb
test
iret
fbld
push
inc
lea
dec
in
push
fwait
xchg
bound
dec
sahf
inc
xchg
or
lahf
notl
and
orl
pop
add
and
mov
js
sti
xchg
dec
or
sbb
pop
and
push
mov
cmp
insl
imul
lds
and
fimull
jecxz
pop
cmp
mov
jmp
clc
scas
in
xchg
xor
fisttpl
in
inc
pop
sub
add
dec
cltd
in
ss
dec
enter
mov
out
cmp
and
data16
cmpsb
out
sti
lods
and
mov
push
bound
add
push
pop
aad
or
add
or
rorb
mov
inc
mov
dec
hlt
leave
bound
scas
stc
test
xor
mov
adc
or
inc
add
add
out
mov
dec
cmp
mov
fistl
dec
jecxz
js
dec
cmp
add
mov
or
add
in
cmc
mov
std
call
pusha
ja
les
mov
xor
cli
xlat
lcall
pop
cmpsl
out
mov
adc
outsb
mov
sbb
das
jecxz
pop
insl
jae
dec
ss
add
jne
imul
dec
push
adc
loope
hlt
sbb
push
cmpsb
pushf
mov
adc
push
fcoml
sub
push
jge
test
add
outsb
mov
cmp
scas
push
push
sbb
push
inc
dec
sub
pop
lea
dec
rcrl
and
fldl2e
insl
repz
aaa
das
lret
je
inc
push
sarl
xorb
mov
sub
pop
pop
xor
popf
sub
pushf
xchg
repz
jno
in
mov
ja
sbb
xchg
mov
sbb
hlt
inc
xor
mov
loopne
aaa
fldenv
sbb
and
test
jl
add
xor
inc
pop
icebp
testl
xchg
fnstenv
ss
pop
stos
push
inc
sahf
enter
cmpsl
add
mov
pop
push
push
and
sub
mov
mov
sbb
dec
or
xchg
and
push
pop
mov
movsb
enter
icebp
rcl
jl
mov
ret
or
pop
shlb
jmp
cmp
fistps
and
popa
sbb
cmp
mov
lahf
pop
mov
lahf
ret
popf
inc
das
outsl
pop
icebp
xor
sarb
inc
add
add
mov
lea
arpl
xchg
jno
and
sub
jno
xchg
dec
dec
xor
dec
insb
or
imul
jg
lret
enter
add
mov
std
cmp
fisttpl
lret
jge
shll
or
xor
mov
mov
fistl
test
cmp
adc
pop
sub
xchg
mov
ja
stos
mov
fsubl
sbb
xchg
mul
insb
push
sbb
lret
outsb
shr
je
push
arpl
stc
push
orl
add
leave
out
repnz
scas
iret
add
orb
adc
idiv
mov
test
or
lods
xchg
adc
pop
out
aaa
cmp
outsl
and
sahf
cld
mov
mov
lret
inc
mov
adc
roll
and
adc
insb
dec
fstl
sahf
dec
shrl
bound
push
test
jne
cmp
addr16
in
xor
iret
loope
dec
and
imulb
pushf
cmp
cs
leave
jb
adc
pop
fcoms
jno
sahf
andl
dec
mov
fwait
les
xor
mov
cmp
mov
ds
xor
inc
in
adc
inc
into
paddd
popa
loop
cmp
xchg
fcoml
je
negb
movb
xor
push
adc
rcrl
out
fcompl
adc
rcrb
sbb
or
pop
addr16
and
sbb
add
insb
std
mov
dec
push
or
ret
cmpsl
stos
push
test
lcallw
push
mov
sti
jnp
inc
cmp
inc
out
xor
in
scas
dec
dec
adc
add
xchg
lods
out
or
push
fidivrs
fdivrs
rolb
adc
popf
imul
add
add
dec
add
shl
fs
xor
outsl
xchg
repz
adc
cmpsl
dec
mov
ret
insl
sarl
sub
mov
inc
mov
pop
mov
popf
aas
mov
jp
xor
test
fisubrl
dec
std
cmp
fdivrl
leave
or
test
dec
add
mov
sbb
test
add
in
ja
add
lods
mov
cmpsb
imul
cmp
adc
arpl
push
aas
fnstsw
sub
cmp
lcall
ljmp
mov
pop
or
daa
adc
das
sbb
or
ret
adc
sub
xor
outsl
cmpsl
dec
jo
and
push
les
or
test
xor
popa
add
sub
and
aas
jb
adc
out
iret
inc
mov
hlt
scas
mov
xor
dec
mov
add
mov
xchg
lea
sub
iret
mov
pop
xchg
push
jmp
bound
jbe
mov
push
mov
xchg
ja
xor
push
fildl
push
push
cmpsb
dec
xlat
mov
xchg
and
sbb
add
mov
mov
xor
fildl
out
inc
sub
setp
push
in
push
imul
lret
or
cmp
movsl
in
push
sub
lret
incl
dec
test
xchg
cmpsl
cmp
nop
sbb
in
xor
lock
or
pop
pop
push
fmull
mov
add
rolb
icebp
ret
outsb
mov
out
jnp
and
cmp
lods
sub
xor
and
faddl
es
pusha
cmp
inc
dec
jle
xchg
xchg
add
pop
mov
imul
shll
sahf
adc
call
and
loop
sbb
inc
maskmovq
imull
in
mov
scas
testl
dec
bound
test
lahf
jno
lahf
outsb
jnp
and
mov
loop
ja
aaa
mov
leave
cs
cmp
jg
add
pop
out
fldt
jmp
jecxz
dec
outsl
lds
xchg
or
dec
xor
mov
xor
repz
push
jp
mov
es
pop
test
lret
je
push
lds
negl
xor
loop
nop
mov
les
mov
mov
jle
inc
popf
push
cltd
mov
fwait
xchg
int
out
dec
into
jp
mov
in
gs
mov
in
jl
stos
cmc
xchg
test
out
or
xor
push
cmp
and
in
mov
add
cmp
push
xchg
test
mov
mov
ret
fimuls
stc
jne
xor
adc
jnp
adc
repnz
mov
outsl
push
mov
int3
xchg
rclb
cs
out
mov
shl
xchg
orl
mov
sbb
sub
dec
mov
jge
mov
call
cmp
mov
cmp
icebp
bswap
int3
adc
fadds
cmp
and
sbbl
inc
mulb
insb
pushf
jg
push
xor
ljmp
sbb
out
ss
dec
int3
lds
adc
adc
inc
pushl
nop
mov
jo
scas
and
mov
sub
out
enter
xchg
stos
loopne
sub
cmp
add
pop
mov
out
bound
ja
fdivl
mov
push
imul
adc
int3
dec
add
inc
popa
inc
jnp
outsl
jle
mov
cmp
pop
cld
push
les
push
repz
or
push
pop
add
mov
cmp
mov
les
in
cli
push
test
inc
pop
jns
push
popf
xor
cli
xor
xor
sti
add
and
repz
std
dec
stc
ds
mov
mov
mov
dec
push
mov
inc
aaa
std
hlt
sbb
std
dec
mov
adc
cli
gs
scas
dec
fwait
mov
addr16
sti
pop
jo
out
int
xchg
movsb
xchg
inc
ficomps
xchg
imul
and
cmp
rcrl
mov
test
idivb
inc
dec
jl
inc
push
int3
push
inc
and
test
sarl
push
xor
into
xchg
xchg
addb
fs
int
ds
jo
push
loopne
add
cli
fstps
sbb
mov
sbb
or
push
fnstsw
adc
test
insl
inc
arpl
mov
dec
sub
add
xor
imul
mov
dec
outsl
sbb
sub
dec
or
hlt
sbb
push
test
sbb
bound
sbb
out
mov
jbe
mov
cmpb
pusha
jge
pop
stos
add
push
lods
jle
dec
lret
inc
scas
add
mov
lahf
mov
mov
cli
xor
jmp
sub
sbb
lret
addr16
pop
movsl
imul
shll
xorl
mov
in
repz
test
sub
fldl2t
sub
les
arpl
mov
adc
xchg
jge
jle
fcoml
xchg
test
lods
out
hlt
dec
adc
fnstcw
xchg
test
or
mov
xchg
mov
aam
out
xchg
icebp
sahf
dec
js
shll
dec
pop
fstpl
gs
adc
outsb
dec
xor
bound
adc
inc
ret
lods
out
mov
mov
dec
mov
andb
inc
cltd
insb
arpl
push
in
xchg
iret
or
call
add
cmp
andb
dec
sub
shlb
sub
push
loope
jge
adc
adc
mov
fldcw
mov
jmp
dec
pop
inc
je
icebp
bswap
push
fwait
mov
enter
push
test
mov
pusha
mov
push
in
std
adc
xlat
test
xor
test
cld
mov
jl
fisttps
aad
inc
enter
je
movsl
xor
sti
movsw
inc
fisttpl
aas
cmp
div
xchg
mov
rorl
mov
push
ret
in
add
les
jp
icebp
push
xchg
cmpsl
aaa
cmp
sbb
sarb
int
xor
test
out
or
sti
jmp
movsb
test
stc
pusha
arpl
stos
or
fs
testl
leave
decl
data16
lahf
jle
mov
orb
hlt
jns
das
paddd
or
lret
test
out
push
lods
mov
sub
into
mov
inc
lcall
cmp
fnstsw
js
inc
in
fisubrs
ss
int
subl
xor
jecxz
jns
lahf
jecxz
sbb
mov
xor
add
cmpsb
or
add
sub
and
movsl
xchg
jns
sbbb
dec
ret
std
inc
lds
enter
xor
sub
or
mov
fwait
ljmp
jle
mov
add
jno
mov
push
daa
xchg
or
cmp
mov
scas
out
insl
loope
cld
dec
rcrl
mov
aas
add
cltd
xor
in
add
mov
mov
imul
scas
sbb
shrl
scas
loopne
nop
or
pop
add
xorl
xor
ret
push
dec
popa
andl
jo
daa
mov
push
sbb
and
inc
ficompl
pop
mov
pushf
dec
sbb
or
fnstcw
test
sub
pop
pop
push
fucomip
gs
stos
mov
lret
into
in
aad
aaa
xchg
es
push
inc
jle
repz
pop
xchg
adc
adc
flds
cmp
jmp
iret
inc
dec
push
pop
cld
xchg
imul
stos
sbb
pop
into
sbb
cmpsb
adc
xchg
push
pop
mov
aam
ljmp
xchg
iret
xchg
stc
mov
adc
mov
jecxz
jecxz
xor
int3
and
xchg
xchg
adc
pop
mov
pop
mov
xor
cld
fadd
mov
xchg
inc
int
fadd
sub
cwtl
lods
call
mov
add
xchg
outsb
sbb
mov
mov
jmp
call
push
push
mov
ss
mov
xlat
scas
daa
insl
pop
push
inc
mov
sub
jnp
out
xchg
cs
mov
push
movsb
push
mov
int
loopne
sbb
mov
or
mov
test
pop
cmpsb
xor
mov
inc
push
and
adc
adc
out
mov
imul
mov
mov
out
loopne
decl
ss
fiaddl
dec
push
push
outsl
rcr
aad
lret
mov
fisubs
xchg
mov
scas
in
popf
repnz
outsb
mov
bound
aad
stos
fdivl
inc
mov
jae
cmp
mov
clc
out
or
std
and
je
mov
aam
addb
test
jge
cmp
sub
xchg
cmpsl
popf
and
add
jbe
ret
jo
data16
fwait
vpcmpgtb
subl
repz
add
fcmovnb
idivb
pop
pop
cli
rcrb
clc
lret
std
jl
in
mov
xchg
or
cmp
dec
call
jecxz
or
iret
shrl
fists
popa
cmp
dec
dec
mov
push
out
add
xor
mov
ljmp
sub
cmpsl
push
and
les
js
leave
xlat
jmp
sbb
mov
fcmove
sti
sbb
or
ret
repz
test
or
les
sbb
push
mov
mov
mov
insl
fdivs
stos
adc
or
stos
inc
mov
fcom
mov
cltd
push
dec
cwtl
or
in
lret
leave
repnz
jge
jecxz
or
gs
in
inc
push
mov
xor
dec
cmp
xchg
jle
into
mov
mov
movsl
movsl
cwtl
icebp
add
scas
cwtl
or
pop
inc
iret
jno
mov
dec
and
mov
dec
sar
in
mov
in
mov
stos
repnz
cltd
or
pop
jge
jbe
int3
into
je
cld
bound
xchg
aam
adc
xor
insl
scas
sub
or
xlat
xor
insl
daa
sti
rcrb
pop
xchg
push
sub
add
sub
xchg
lret
xlat
icebp
adc
and
sbb
push
add
push
dec
adc
mov
jg
lods
cld
mov
mov
jmp
fdivrl
push
sbb
leave
and
and
movsl
xor
mov
pop
les
or
dec
sub
dec
mov
out
push
jp
daa
loope
jae
stc
inc
and
arpl
lret
enter
and
gs
sbb
divl
jecxz
fldl
add
bound
push
pusha
jp
movb
lock
sbb
lods
xor
dec
cmpsl
jmp
and
fs
mull
xchg
test
sbb
into
stos
pop
iret
ljmp
inc
push
aam
loop
lds
inc
cmp
mov
test
ljmp
push
and
test
lods
mov
jmp
xor
mov
xchg
mov
mov
pop
push
jg
call
test
int3
mov
call
mov
dec
cmp
cmpsb
pop
andb
bound
int
mov
add
lds
mov
orl
cmc
mov
mov
out
inc
sbb
jmp
out
out
in
popf
mov
jmp
les
popf
insl
pop
sub
out
mov
adc
jp
scas
mov
mov
lret
ljmp
ljmp
push
add
test
inc
sub
stos
adc
or
sbb
sbb
or
mov
xchg
les
push
mov
xchg
ficomps
cmpsb
test
jno
fisttpl
cld
sti
xlat
mov
pop
push
mov
aad
mov
mov
mov
push
cmp
mov
rcrb
fs
add
push
lock
scas
flds
push
fcompl
or
pop
in
pop
fisubrs
fxam
pushf
xchg
lret
mov
mov
sbb
ss
orb
inc
or
bound
in
mov
mov
stc
mov
mov
xchg
daa
jne
pop
repz
mov
les
int3
jnp
add
pop
mov
mov
fcoms
scas
add
ja
fs
repnz
jo
xor
push
aas
fwait
loop
xchg
out
jo
push
xchg
push
cmp
mov
xorb
cmpsl
cmp
xchg
jge
gs
pop
je
and
lods
in
inc
or
and
icebp
inc
xor
jne
fildll
js
mov
fdivrp
mov
sub
or
add
inc
xchg
xor
test
mov
in
xchg
inc
loop
xor
sub
cmpsb
cmp
adc
les
add
push
add
jnp
mov
mov
aad
push
loope
jl
jl
push
xchg
ja
sahf
int
iret
add
lock
pop
mov
repnz
fs
sub
lret
sahf
mov
repnz
rcll
mov
pop
mov
test
push
push
cmc
or
lock
js
loopne
dec
mov
shlb
dec
jmp
add
push
pushf
pop
lods
bound
call
inc
jmp
and
push
push
repnz
lcall
lret
inc
or
insb
xchg
inc
mov
shll
add
push
shrb
sbb
subl
sahf
outsb
aas
add
dec
push
jnp
rclb
xchg
ds
adc
cld
jge
jae
mov
int
inc
jmp
mov
cmp
fs
ss
std
shlb
dec
testb
push
pop
mov
dec
call
pop
in
mov
addl
or
adc
fcoms
ja
or
mov
decl
rcl
cmpsb
ds
pop
mov
leave
sub
jge
adc
test
adc
cmpsb
jne
in
xor
sub
iret
mov
cmp
adc
adc
push
std
push
push
fstps
lea
dec
xchg
mov
pop
test
scas
or
nop
sub
ffree
mov
and
inc
cmpsb
repnz
mov
and
mov
pop
jbe
jns
js
daa
cltd
data16
dec
mov
adc
xchg
xlat
jae
sbb
bsf
dec
push
pushf
dec
call
inc
inc
cwtl
sbb
mov
lahf
js
mov
std
je
lcall
mov
aad
dec
jno
or
cmpl
mov
add
pusha
xor
imul
inc
loop
call
sbb
mov
xchg
xlat
push
hlt
stos
xor
iret
add
push
adc
push
shlb
aad
sub
mov
mov
sub
je
dec
sub
add
out
and
mov
arpl
mov
cmpsl
movsb
and
add
fs
jnp
mov
sub
insl
test
sbb
adc
je
cltd
jle
pop
scas
out
insl
lds
in
je
cmp
in
inc
adc
sahf
jnp
out
das
nop
pop
daa
lret
push
add
xor
sahf
and
push
push
and
fcmovnbe
push
xor
and
shr
js
push
and
push
mov
add
fldcw
out
nop
pushf
adc
xor
icebp
and
sbb
sti
cltd
test
iret
ja
mov
addr16
outsb
in
jb
or
clc
enter
xchg
add
scas
in
lahf
mov
and
xor
repnz
xchg
shlb
ja
aam
scas
jmp
rolb
enter
cld
lock
xchg
jb
mov
dec
xchg
stos
mov
xchg
sub
dec
test
xchg
dec
mov
xlat
sub
mov
inc
sbb
cmp
add
jns
xchg
pop
xchg
xchg
enter
pop
aad
xchg
push
mov
push
and
inc
xlat
sbb
imul
out
lods
add
ljmp
stos
sbb
cmpsb
shlb
inc
mov
dec
idivl
out
fwait
leave
push
sbb
cmc
jl
jae
inc
addr16
jns
out
mov
loopne
mov
jno
inc
xchg
lds
or
pusha
insl
sub
mov
sbb
mov
out
mov
les
call
dec
in
mov
cmp
push
pop
push
pop
stc
in
andb
fisubl
jge
sbb
jae
pop
cltd
pushf
sub
fisubrl
mov
xlat
inc
cmpsl
insb
sbb
ja
outsb
iret
cmpsl
test
mov
xor
cmpsb
jae
stos
test
mov
ret
xor
incl
sbb
jmp
sbb
iret
js
test
adc
daa
cmp
shrb
cmc
push
jp
sbb
das
in
push
xchg
mov
movsl
inc
jge
cmp
mov
sub
shlb
sub
inc
insb
mov
aam
jb
addl
or
test
xor
daa
int3
pop
test
nop
mov
mov
popf
xrelease
test
and
mov
sbb
repnz
addr16
inc
jecxz
icebp
sti
sarl
jecxz
add
clc
adc
bound
dec
lcall
xor
in
mov
lahf
inc
mov
and
jae
jnp
add
sub
push
lret
out
or
inc
imul
dec
sbb
popa
int
add
xchg
int3
iret
lahf
sub
lret
scas
or
les
sbb
les
inc
clc
rcll
xchg
push
sub
xchg
lods
inc
lds
rcr
or
mov
xchg
push
jae
pop
jo
icebp
stc
and
in
shlb
dec
mov
cmp
dec
mov
sub
clc
pushf
out
mov
inc
adc
cmp
or
stos
sub
adc
sbb
add
fs
lods
dec
imul
jns
mov
fisttps
and
sahf
call
adc
int
push
jns
sbb
cmp
mov
lcall
push
lock
lock
mov
push
mov
sahf
loope
mov
push
cmpsl
sti
outsb
cmpsb
dec
mov
push
sub
sarl
fldcw
aaa
pop
jno
negb
and
scas
or
push
mov
and
je
scas
sub
add
lret
pop
fwait
das
int
in
imul
add
shlb
repz
xchg
ffreep
arpl
scas
ret
mov
push
andl
rcll
adc
pop
outsl
push
jnp
mov
nop
je
jmp
inc
ljmp
add
test
mov
int
jle
add
sarb
or
xor
lods
in
and
pop
adc
stc
inc
int
jno
lods
in
pop
lods
mov
div
xchg
xor
mov
fiaddl
push
dec
sti
or
fdivl
adc
outsl
jp
sahf
push
pop
xor
cmp
lret
adcl
icebp
xchg
cld
pop
push
stos
jmp
mov
pop
icebp
push
jle
int
shll
mov
inc
mov
hlt
inc
sahf
mov
inc
incb
jns
icebp
popa
mov
adc
jbe
loopne
dec
je
xor
cmp
aad
pop
mov
xor
and
or
xlat
mov
rcll
ja
pop
xlat
aas
in
fcomps
xchg
jmp
stc
pop
call
xchg
lahf
and
sysenter
insl
adcl
out
lahf
jb
pop
xor
rorl
int3
cmpsl
and
aaa
call
inc
sbb
xlat
test
jbe
imul
fsts
in
cwtl
repnz
dec
or
xor
rcll
cmp
xor
add
sub
add
mov
mov
cmc
ficompl
test
xchg
lret
pop
adc
xchg
ret
add
xchg
cmp
aam
mov
xchg
mov
xchg
test
fnstenv
push
popa
mov
pop
subl
sbb
push
pop
mov
sub
addr16
xor
ds
mov
sub
inc
ficoml
mov
sub
mov
mov
stos
shr
push
mov
sbb
or
rcr
loope
cmp
daa
jne
xor
pop
inc
ja,pn
divl
out
adc
cmpsb
mov
scas
scas
mov
imul
cmp
cmp
push
jo
jmp
and
mov
cmpl
push
add
int
push
loopne
repnz
adcb
and
int3
ret
inc
cmc
lods
adc
pop
pop
and
mov
mov
mov
cmpl
out
xor
adc
ss
push
jmp
shll
paddw
mov
ret
push
inc
push
cli
and
xor
popa
inc
arpl
ds
jle
leave
inc
and
and
jbe
xor
ds
pop
test
sub
add
test
in
pop
insb
add
stos
js
mov
push
fucomi
popf
outsl
sbb
cmp
cmc
or
push
insl
add
lret
sar
movsl
jecxz
jo
push
scas
xor
je
add
push
popf
fsubrl
add
es
movsb
push
std
xlat
mov
pop
or
ja
shlb
and
jge
xchg
adc
xorl
lcall
pushl
mov
xchg
ficoml
mov
xchg
mov
imul
jecxz
jo
ss
or
scas
insb
in
loopne
in
mov
lret
mov
lret
mov
subl
and
add
xor
ret
xchg
mov
jp
ffreep
sbb
hlt
push
pop
lods
xlat
ljmp
cmp
in
out
lea
add
xorb
sbb
aad
add
lods
jo
mov
pop
push
jb
test
jb
call
mov
fcmovne
lret
cltd
dec
push
bound
dec
addl
in
mov
mov
fsts
in
leave
pop
sub
mov
lds
sbb
movsb
sub
xchg
and
or
or
cmp
mov
add
cmpsl
inc
xchg
cmp
leave
or
inc
inc
test
add
or
or
xor
mov
push
xchg
xchg
cmp
cmp
popa
mov
sub
xor
dec
xor
lea
dec
arpl
outsl
test
push
mov
aas
ss
fldcw
xor
cmpsb
push
jno
xchg
cmp
rorb
std
pop
xor
mov
xor
leave
add
cld
pop
loope
jne
jl
xor
fcompl
icebp
push
adc
push
mov
shrl
clc
rcl
rcl
fs
push
or
fisubrs
mov
and
jbe
jge
pusha
push
push
outsl
out
jns
or
loop
sbb
add
sub
fdivs
jp
adc
sar
inc
or
int
sbbl
or
stos
lock
inc
dec
pop
leave
sbb
pop
push
mov
mov
test
test
push
mov
adc
int
mov
int3
push
dec
fnstenv
push
leave
loopne
enter
mov
and
in
fs
xchg
addr16
mov
mov
lds
fwait
test
negb
dec
fisubrl
mov
cmp
inc
scas
cli
inc
rcr
lods
pop
pop
call
mov
arpl
in
xchg
cmpsb
pop
adc
inc
sldt
push
sti
mov
orl
or
adc
jns
xor
movsl
add
push
addr16
mov
jl
std
dec
nop
jecxz
lea
xchg
shll
je
mov
pop
mov
scas
xor
xchg
in
aam
subb
xchg
gs
add
and
dec
mov
xor
xor
mov
aaa
mov
xchg
xor
add
cmp
push
add
icebp
scas
hlt
outsb
inc
cmp
arpl
xchg
leave
je
mov
loope
or
fimuls
mov
movsb
shll
cmp
cltd
mov
aad
std
add
sti
pop
je
mov
insl
dec
xchg
mov
adc
inc
cwtl
dec
dec
xor
adc
mov
cld
sbb
in
mov
stos
jo
xchg
and
enter
mov
scas
sahf
jne
loopne
loop
insl
std
inc
sbb
out
in
ret
pop
jmp
sbb
mov
movsl
jbe
shlb
stc
mov
mov
mov
je
mov
cwtl
sub
cli
pop
pop
mov
mov
sbb
out
or
xlat
cwtl
mov
add
inc
out
mov
sub
lcall
add
mov
and
dec
aad
mov
icebp
int
jmp
repz
push
mov
and
ret
lahf
cs
stc
xor
push
cmc
roll
push
pop
mov
xchg
xchg
inc
leave
xchg
dec
cli
cmc
out
movsl
hlt
lret
cmpsl
push
js
adc
repz
add
clc
rol
fimull
xbegin
push
jnp
int
lock
sub
xchg
cli
sbb
iret
sbb
sbb
cltd
fwait
scas
jne
adc
sarb
decb
mov
lret
test
add
sahf
xchg
data16
leave
push
fs
xor
push
cmpsb
scas
dec
ds
sti
aam
lods
je
cmpsb
add
out
mov
and
mov
stos
call
in
test
pushl
enter
sub
dec
push
jne
andl
leave
push
fs
cltd
inc
add
cmpl
cmovbe
insb
out
pop
loop
bound
cmp
mov
mov
out
mov
and
mov
subb
and
cmp
adc
mov
pop
dec
jge
mov
fs
jno
into
adc
adc
shlb
out
jno
inc
int
in
inc
or
loopne
pop
pop
xor
inc
fstps
fcompl
jecxz
sub
iret
and
mov
mov
gs
push
sbb
lea
rep
push
in
mov
leave
loopne
xchg
icebp
testl
or
pop
pushf
roll
adc
adc
mov
int3
push
mov
in
js
mov
cli
roll
pop
hlt
cmc
dec
mul
movsb
jb
loope
in
testb
lds
aaa
int
sub
stos
push
outsb
jb
ret
or
inc
out
xchg
or
inc
rolb
jmp
popf
lcall
and
stos
cmp
sub
inc
mov
mov
fwait
es
cld
insl
rorb
inc
arpl
cld
adc
and
cmc
or
pop
lods
xor
scas
push
idivb
adc
jmp
repz
int
jmp
jno
gs
cltd
jbe
faddp
sahf
jp
mov
cmp
pop
add
ret
icebp
nop
lahf
ficoml
cli
lock
popa
pop
aam
insb
ljmp
test
xchg
mov
clc
js
push
pop
mov
sbb
scas
fdivl
leave
cwtl
nop
mov
dec
cmc
ret
insb
inc
cmpsb
pop
stc
testl
jnp
cli
scas
aad
in
mov
iret
arpl
mov
shll
and
adc
es
out
inc
adc
lahf
jno
sbb
lods
repz
es
add
jle
sbb
push
or
lahf
test
rolb
stos
mov
lahf
mov
add
mov
in
xor
dec
std
aam
fnsave
push
enter
decl
arpl
cmp
xor
sbb
mov
dec
scas
mov
fidivrl
scas
rcll
inc
lahf
mov
dec
fsubl
dec
nop
pop
sbb
push
pop
nop
inc
bnd
add
inc
dec
in
pop
das
add
test
mov
xchg
pop
in
rcll
stos
xchg
inc
mov
loopne
push
mov
shlb
and
mov
lret
faddl
ficompl
add
je
fimull
out
add
mov
stos
mov
arpl
jp
ss
jp
into
mov
jno
cmpsb
std
push
cltd
movsb
mov
in
fnstsw
lcall
dec
jno
lds
cld
test
test
lods
mov
fdivrs
adc
fidivs
jae
sti
pop
inc
mov
ret
movsb
pop
jb
cli
xor
jl
mov
or
cld
xor
shll
mov
adc
cmp
int
xor
mov
pop
test
stc
in
push
and
sub
cmp
pop
mov
or
sahf
movsb
es
dec
inc
push
cmc
xor
inc
mov
inc
test
add
adc
xchg
pop
xchg
mov
call
subl
out
sbb
xlat
mov
jle
xor
push
fildl
and
shrl
rol
lock
stos
jl
mov
sti
sub
outsl
xchg
hlt
je
sbb
icebp
imul
lahf
idivb
lcall
xor
fwait
jecxz
inc
push
leave
cmpsl
lahf
lock
mov
nop
popf
aaa
arpl
ss
jns
cltd
ja
xchg
push
fidivs
inc
adc
jb
repnz
mov
fcmovnu
add
les
je
sub
sbb
mov
pop
fdivs
js
test
adc
imul
aaa
sub
jecxz
jle
push
jns
mov
mov
ss
vrcpps
fyl2xp1
sbb
test
cmpsl
jmp
pop
sub
mov
shlb
add
pop
xorl
js
push
push
jae
fwait
jl
imul
xor
jecxz
inc
jb
iret
fisubl
lret
cld
sub
sub
jmp
xchg
and
cltd
movsb
xor
stc
xchg
inc
sbb
das
jns
add
lock
mov
movl
inc
pop
gs
je
xchg
and
sub
xor
je
inc
lret
in
cmp
sub
lret
loopne
and
cmp
sub
cmpsl
inc
aaa
xchg
mov
jmp
mov
mov
jge
dec
shll
in
sbb
dec
aam
test
clc
mov
lahf
or
jmp
loope
push
xchg
movsb
cmc
imull
push
xchg
sbb
out
out
pop
stc
imul
call
iret
test
dec
aas
xor
adc
mov
dec
orl
in
int3
xchg
sub
xchg
scas
sti
lds
push
outsl
xor
stc
jae
xchg
in
or
jg
in
inc
ds
inc
inc
jmp
rorb
xchg
xorl
dec
mulb
testb
in
pushf
mov
mov
and
dec
jns
gs
push
and
es
or
repnz
data16
sub
cs
xchg
xchg
ret
out
mov
stos
push
adc
scas
push
lods
push
rcrl
jmp
push
sub
faddl
cmp
adc
mov
inc
add
mov
cld
outsb
outsl
popf
push
inc
inc
inc
arpl
leave
xchg
xchg
out
flds
mov
rcrb
popf
xchg
or
add
jne
shll
cli
add
mov
js
mov
xchg
filds
loope
cmpsb
mov
flds
shrl
bound
jbe
jmp
xchg
fnstcw
data16
movsl
xchg
push
out
mov
fisttpl
cs
adc
jns
and
sbb
jnp
mov
push
dec
mov
or
inc
xchg
push
xor
and
jns
movb
mov
in
out
fs
and
lret
jl
stos
push
mov
cmp
jmp
or
movsl
call
and
cmpsl
out
int
pop
and
dec
xchg
dec
xchg
bound
rolb
out
lahf
add
and
jae
fsts
xchg
fdivrs
rorl
inc
jo
and
test
sti
bound
mov
movsl
rolb
push
outsb
cmp
xchg
xchg
mov
jge
loopne
cmc
fs
xchg
inc
sti
mov
test
lcall
mov
mov
sub
xor
ret
or
push
adc
stc
imul
call
inc
push
adc
lea
loopne
cmpsb
ja
inc
pushf
jnp
inc
in
test
icebp
ljmp
xor
out
aaa
mov
inc
orb
add
pop
xchg
adc
aad
xchg
add
lcall
and
popa
stos
pop
movsl
xchg
hlt
pop
bound
loope
push
add
pop
push
ss
sub
sbb
outsb
lret
aaa
jle
adc
lahf
insb
add
insl
out
push
sahf
push
mov
pushf
test
mov
repz
inc
call
fstps
or
fildll
push
flds
mov
imul
loop
adc
pop
test
and
sbb
roll
orl
imul
ja
push
mov
sub
lods
lahf
std
fldl2e
repz
cmpsb
call
cmp
or
filds
scas
xchg
xchg
or
cli
aas
scas
dec
movsl
sahf
inc
mov
testl
mov
loop
loope
jae
cmp
mov
dec
or
arpl
jecxz
pushf
insb
ret
jl
in
xchg
flds
pop
cmp
ja
inc
popf
mov
xchg
fmul
mov
enter
mov
sub
inc
cmp
xchg
out
xchg
std
fdivs
mov
bound
ja
jae
pop
and
dec
push
sbb
jb
lea
dec
mov
xchg
adc
sub
mov
rol
sbb
pop
aaa
and
icebp
xor
mov
repz
orb
cmp
movsl
add
pop
ds
or
push
in
js
daa
gs
push
mov
push
ja
push
sub
es
mov
out
repz
push
clc
pop
mov
mov
sbb
insl
mov
jo
or
jne
inc
fcomps
pop
mov
push
sub
fwait
xchg
sbb
jnp
fimull
mov
sbb
les
mov
ljmp
lret
cmp
xchg
ljmp
mov
jg
lret
fcompl
jl
loop
mov
aaa
xor
insl
dec
loop
je
add
add
or
pop
sbb
jbe
dec
cmp
dec
dec
cmc
or
and
add
fwait
lock
sbb
sarl
sahf
inc
movsl
inc
icebp
addr16
stos
pop
xchg
fistl
rcrb
xchg
sub
pusha
lcall
xchg
je
popf
pop
neg
pop
imul
or
mov
push
fldenv
cld
fsts
and
fstpt
pushf
mov
lock
in
mov
inc
xor
or
jnp
aas
inc
mov
int3
push
push
mov
jg
cltd
notl
fiadds
mov
daa
or
int
insb
ret
sub
pop
insb
pop
loopne
inc
mov
ds
loopne
mov
sub
inc
pop
enter
fcmovu
or
jl
jl
pusha
mov
lods
fs
std
out
push
in
mov
jne
cmp
mov
xor
pusha
nop
inc
addb
notb
xor
xor
out
sbbl
sub
or
push
mov
iret
mov
in
ljmp
mov
out
test
ret
jle
push
xchg
dec
testb
fisttps
fimull
jp
sbb
dec
xor
andl
pushf
rorl
icebp
movsb
add
stos
pop
pop
in
call
fadd
and
mov
cltd
pop
or
add
pop
stos
and
xchg
aam
lret
out
dec
cmp
dec
sbb
enter
cmp
lock
push
cmp
push
fimull
mov
cmpsb
fidivrl
iret
into
xchg
int3
scas
adc
arpl
lret
push
pop
mov
cmp
loop
movl
adc
adc
or
inc
imul
adc
enter
cld
bound
mov
push
aam
jb
xchg
jp
imul
inc
shl
sar
push
adc
sub
or
hlt
cli
or
test
mov
outsl
sub
cltd
leave
push
adc
push
scas
add
iret
cwtl
or
pop
insb
fs
lcall
jbe
or
aas
ja
imul
sbb
pop
jns
pusha
sub
nop
cmp
push
mov
out
adc
in
push
push
dec
popa
inc
adc
add
scas
ljmp
inc
mov
cmp
sub
in
jo
into
and
mov
and
mov
sbb
xchg
dec
inc
and
mov
cmp
add
mov
clc
xchg
ds
aam
inc
iret
cwtl
imul
xor
jl
pop
inc
add
or
sar
insl
hlt
iret
push
sub
movsb
or
pusha
imul
push
test
xor
daa
addr16
xorb
imulb
lahf
lret
sbbl
insb
enter
lock
in
cmp
add
sub
fwait
jecxz
test
xor
into
xchg
ror
movq
xor
aam
xchg
jge
out
dec
cmp
cltd
dec
out
pushf
fcom
out
shrb
inc
rorl
mov
xor
xadd
out
adc
decb
int
arpl
scas
mov
dec
add
xchg
adc
cmp
or
push
or
stc
mov
and
das
icebp
dec
push
cmc
xchg
or
and
sbb
pop
scas
frstor
popf
dec
push
inc
test
mov
pop
pop
inc
bound
pop
das
xor
fisubs
pop
nop
and
add
mov
cltd
xchg
inc
test
gs
inc
mov
movl
xchg
pop
inc
xor
popa
gs
push
xor
int
sbb
pusha
mov
sub
and
jecxz
fnsave
adc
lahf
addr16
jns
ret
sub
sahf
js
mov
popf
push
pop
and
stc
add
in
es
ja
lahf
sti
inc
adc
insl
inc
imul
test
es
push
lods
push
cmp
cmp
fdivr
fcmovbe
in
dec
jae
xchg
sbb
pop
lret
and
int3
subl
ljmp
push
testb
push
jbe
ds
test
inc
push
push
mov
stos
jl
push
jne
js
adc
push
xor
sub
and
lcall
push
and
add
pop
and
daa
pop
call
pop
mov
and
or
lock
cmp
sbb
fucomp
les
out
add
jb
sbb
icebp
add
mov
test
bound
sub
ret
int
mov
mov
adc
ja
jge
xorl
push
repz
add
fcom
fildl
repz
mov
pop
cld
gs
lods
imulb
sub
testl
cmc
je
popf
xchg
in
cmp
loope
sub
dec
int3
das
pop
push
rolb
rcl
popw
popa
out
dec
cli
pop
mov
pushl
pop
stos
pop
cmp
aad
pop
push
mov
mov
dec
or
xchg
xchg
xchg
inc
je
xchg
xchg
fstpl
and
cmp
lds
inc
rol
inc
repnz
adc
jg
push
xchg
push
xchg
push
sbb
jmp
adc
daa
push
imul
xchg
lret
in
ret
xchg
aas
jg
das
leave
ficomps
inc
cmp
es
push
fwait
aaa
mov
es
idivb
hlt
push
pop
jo
mov
bound
inc
es
add
xorl
adc
push
in
out
mov
es
add
cmp
or
scas
cmpsl
cmp
mov
jnp
addr16
mov
test
xchg
outsb
lret
cltd
sbb
pushf
cmp
incl
xor
lock
xor
sub
sub
push
cmp
or
dec
jge
in
fmulp
add
lahf
arpl
lods
pop
pusha
testb
mov
jle
dec
push
pop
or
fwait
xchg
pushf
or
inc
add
sub
sbb
lds
sbb
jmp
insl
fimuls
andb
sub
dec
xchg
pop
cltd
leave
xchg
or
mov
inc
xor
dec
mov
into
dec
aad
aam
push
arpl
push
cmpl
and
pop
outsl
sbb
pop
xor
sub
cmp
pusha
dec
cmp
jp
jo
icebp
fldl
mov
mov
std
dec
je
loopne
adc
mov
jmp
ljmp
sbbb
dec
fbstp
inc
pop
mov
cmpsl
outsl
movsb
ret
and
cmp
shl
cmc
inc
jns
gs
add
ret
fistps
inc
add
adc
or
mov
lea
stc
or
cmp
push
mov
push
xlat
pop
out
out
test
insb
push
jecxz
outsb
lock
mov
jbe
dec
push
clc
into
or
cmc
cmp
icebp
mov
notb
push
stos
sbb
ds
mov
or
xor
mov
cli
pop
iret
ljmp
sbb
int
arpl
outsl
mov
xchg
rol
cltd
mov
test
addr16
je
xchg
shrl
cmc
mov
push
mov
lods
enter
scas
xor
mov
mov
test
jns
test
cltd
xor
jge
lcall
mov
inc
dec
sub
xchg
mov
push
pop
xchg
xor
cwtl
bound
repnz
test
push
add
scas
je
iret
mov
iret
loope
dec
in
mov
cmpsl
mov
add
ss
repz
gs
loope
xchg
cli
or
mov
js
adc
aad
cwtl
adc
dec
sub
xor
dec
cld
movsl
popa
or
lods
push
or
pop
or
add
or
jge
or
xor
mov
xor
pushf
and
sti
mov
das
xchg
in
sub
int3
add
movsb
mov
xor
mov
aad
sbb
pushf
test
outsl
inc
test
jne
shll
cltd
pop
stc
jae
call
ret
loop
jns
and
push
mov
xchg
std
jno
xchg
inc
bnd
xchg
or
in
xor
mov
ret
dec
add
icebp
xchg
aad
jo
int
mov
rcl
es
outsl
lods
pushf
repnz
hlt
or
sbb
cld
daa
adc
push
jo
aaa
insb
imulb
mov
fidivrs
mov
adc
ljmp
add
repnz
cmpsl
imul
repnz
mov
mov
imul
ja
fldenv
out
popa
pop
arpl
rcll
rclb
adc
adc
pop
push
rcl
cmp
add
cmp
ret
inc
mov
xor
add
cltd
push
ljmp
adc
or
xchg
inc
pop
loopne
xor
mov
and
es
inc
nop
sub
jl
outsb
mov
bound
add
jl
lret
xchg
rep
add
aas
mov
out
jb
xchg
push
adc
mov
mov
or
push
addr16
fisttpl
dec
cltd
popf
dec
std
ficoms
adc
push
out
outsl
lret
and
test
psubw
cmpsl
pop
jnp
add
psllw
popf
fildl
out
pop
test
in
paddd
cmp
punpckldq
dec
add
std
inc
cmp
jg
hlt
pop
pop
testl
ja
adc
popf
in
data16
pop
rorl
sub
push
sub
add
mov
in
dec
jmp
ja
icebp
inc
xchg
inc
cltd
aas
push
xor
icebp
mov
push
xchg
xchg
or
mov
sti
daa
movsl
mov
push
mov
lea
js
popa
push
sub
push
and
lret
pop
movsl
lock
push
push
mov
mov
test
movsl
xor
fdivl
xor
and
fldl
pusha
imul
push
jns
xor
sub
sbb
cmp
cmp
fwait
and
jp
stc
pop
enter
insb
filds
sub
nop
mov
cmp
pusha
jo
scas
cmpsb
clc
and
into
sbb
ja
popa
shlb
mov
cmp
mov
scas
out
popf
adc
jne
stos
pop
sub
jmp
stc
adc
add
mov
aaa
rorl
push
jmp
loope
pcmpgtb
div
dec
mov
daa
test
test
bound
lahf
xor
adc
ja
movsl
push
pop
push
dec
xor
insl
mov
pop
adc
das
fiaddl
popa
loope
mov
lret
les
je
sarb
in
mov
icebp
inc
mov
mov
mov
enter
mov
mov
adc
xchg
or
jp
movsl
es
pusha
push
jmp
cmpsl
fsub
repz
mov
mov
pop
rorl
ljmp
in
mov
adc
lahf
push
cwtl
shl
cmp
xchg
mov
pop
jb
mov
lret
mov
punpckhbw
shl
les
ds
sub
andb
imul
mov
pusha
add
popa
pop
ret
cld
in
cmpsl
cmpsb
add
jo
enter
les
in
inc
or
push
dec
push
shll
or
loopew
inc
adc
dec
lds
lock
mov
outsb
test
shll
sets
push
adc
andb
xor
jo
imul
push
adc
das
lahf
pop
out
dec
test
scas
jns
add
mov
or
dec
adc
adc
stc
sbb
jge
aam
inc
lock
stos
sub
test
repnz
cmp
aam
cmpsb
push
push
xchg
scas
movsb
mov
lock
int3
cld
orb
sub
and
push
push
test
pop
pop
stos
sbb
adc
adc
flds
fstps
lods
pop
and
les
push
cwtl
inc
xchg
cmpl
fwait
je
xchg
dec
repz
sub
or
lds
dec
cltd
outsl
outsl
stc
sub
sbb
scas
adc
dec
lahf
xchg
fldcw
cmp
jno
fisttpl
enter
pushf
test
sbb
dec
mov
dec
dec
inc
lds
sbb
sub
in
jmp
or
jae
lds
and
push
add
cmp
cmp
pop
roll
addr16
pushf
push
rcl
cwtl
movsb
fistpl
mov
cmc
inc
gs
ja
mov
dec
lret
mov
push
mov
pop
xchg
xlat
es
popf
sub
mov
or
aas
fadds
sbb
outsl
push
test
gs
dec
fmull
sbb
and
sbb
and
mov
mov
not
xlat
cld
push
cwtl
sub
scas
mov
xchg
out
pusha
add
cmp
lret
sub
mov
int3
stos
divl
shll
aad
sti
cld
int3
mov
and
adc
push
js
mov
gs
jecxz
inc
push
roll
pushf
shlb
sub
fdivrs
popf
in
push
cld
jae
dec
and
push
int
stos
inc
notb
add
loop
call
jmp
mov
repnz
out
sub
mov
adc
mov
pop
xor
adc
repz
pop
pop
sub
ror
cmp
adc
gs
mov
fsubr
mov
rep
mov
dec
mov
pop
lret
ds
out
inc
in
dec
xchg
lods
mov
fistps
ss
xchg
inc
inc
jns
fdivrl
sbb
shlb
pop
test
push
leave
hlt
dec
mov
mov
xlat
and
insb
clc
mov
mov
jnp
incl
or
inc
jp
cmp
xchg
mov
das
inc
mov
lret
insb
lock
sub
pop
push
iret
cmp
ljmp
les
sbb
jge
adc
or
mov
aad
leave
cltd
sbb
fldl
xchg
icebp
popa
push
cwtl
fnstsw
and
into
and
lahf
adc
insl
pusha
mov
xchg
outsb
add
and
imul
jno
xchg
cmp
push
fdivrp
shlb
jge
sub
and
cmp
arpl
cmp
inc
adcl
out
mov
lret
fwait
cmc
lods
aaa
sbb
mov
ja
scas
popa
sahf
adc
inc
and
bt
repz
xchg
adc
xchg
pop
clc
mov
inc
mov
aas
mov
jge
je
arpl
mov
stos
rorb
enter
or
mov
or
lods
xchg
out
pop
or
imul
xchg
mov
clc
cmp
lcall
lcall
jmp
std
and
pop
xlat
jmp
inc
bound
cld
mov
mov
add
push
movsl
jnp
pop
add
lods
test
or
push
jge
fists
mov
adc
pop
and
add
dec
pushf
loop
in
movsl
pop
xor
pop
movsb
icebp
or
cli
jae
or
notl
push
inc
push
cmp
cwtl
cmp
in
xor
inc
movsb
add
or
fadds
dec
loop
outsl
or
cmc
cmpsw
aaa
stos
inc
mov
inc
jp
pop
xchg
cltd
sub
adc
pop
adc
imul
es
lods
insl
push
int
outsl
arpl
mov
sbb
jle
xchg
xchg
scas
xchg
and
ds
outsb
mov
mov
shll
sti
in
bound
cmpsb
xchg
outsl
fs
gs
test
js
idivl
fadd
test
sti
test
jb
popf
dec
xlat
push
sbb
or
pop
mov
sbb
or
xor
mov
jg
std
cs
lods
fisubs
pop
std
leave
js
push
cltd
cmpsb
stos
fidivrl
and
add
xchg
push
test
gs
mov
jmp
mov
stos
jbe
daa
jns
dec
adc
mov
repz
jmp
add
cmp
dec
fisubl
mov
pop
mov
andl
sahf
jp
cmp
xchg
ds
loop
adc
rclb
pushf
jns
call
push
and
daa
jae
xor
rorb
test
aaa
push
dec
and
add
scas
inc
sbb
js
inc
mov
inc
cmpsl
push
fldcw
add
addl
adc
sbb
mov
xor
stos
mov
scas
cmpsb
out
push
mov
push
daa
push
pop
bound
pop
stc
fistpll
into
pushl
ljmp
aam
fs
jmp
mov
mov
cmp
pop
nop
lret
gs
jnp
dec
sbb
cmp
nop
adc
bound
outsb
cmpsb
ficompl
cwtl
out
sbb
xor
mov
and
cmpsb
imul
imul
pop
ss
call
negl
jmp
lods
hlt
mov
je
mov
call
mov
add
pop
je
cli
scas
pop
incb
sbb
mov
jo
cmp
mov
adc
jno
mov
add
jns
mov
movsl
cs
les
leave
sarb
cmc
xchg
mov
hlt
jl
mov
pop
pop
inc
int
jb
fstpl
push
adc
xchg
loopne
pop
push
adc
inc
movsl
jp
push
pop
enter
mov
mov
inc
mov
mov
mov
int
jmp
xor
or
push
add
repz
cmp
gs
and
adc
in
loopne
sbb
cmpsl
les
mov
xor
ret
mov
jno
in
pop
jp
mov
push
inc
fsubl
pushf
fdivrs
xchg
cs
xchg
rcrb
mov
xchg
xor
lret
shll
push
scas
mov
jo
mov
movsb
js
and
jns
pop
jns
adc
xchg
lret
arpl
sarl
xchg
push
lock
adcb
jb
mov
ljmp
push
and
gs
popf
mov
xor
dec
inc
sub
pop
xor
mov
push
push
fcmove
imul
jmp
dec
xchg
shll
lods
push
xor
leave
xchg
inc
scas
sbb
aad
popf
pop
add
jge
xchg
iret
imul
imul
jo
dec
nop
pop
sub
add
adc
sarl
lret
fldcw
popf
sti
ja
sub
jne
xlat
movsb
mov
mov
call
int
mov
dec
cmp
pop
iret
fwait
or
stos
mov
addr16
jle
mov
jnp
pop
movsb
sub
mov
push
popf
pop
movsb
addr16
add
mov
mov
cmp
add
imul
fisubrs
dec
mov
cmp
mov
imul
das
pusha
sbb
scas
inc
dec
test
ljmp
dec
sub
dec
fs
insb
pop
stos
imul
in
sbb
test
clc
cmp
pop
stc
inc
dec
jmp
shlb
mov
mov
cmp
mov
lods
sub
xor
loope
xor
sbb
xorb
test
push
mov
cmc
test
ret
pop
jno
inc
xchg
ss
add
sub
ja
bound
cli
mov
cmp
test
fimull
adc
or
mov
cmp
pop
fcmovnbe
sbb
sub
xor
xchg
inc
mov
test
das
jle
call
outsb
inc
pop
ror
popa
cmp
mov
ljmp
push
cmp
sbb
pop
int
fucom
sub
bound
xor
mov
and
mov
xchg
adc
mov
and
idiv
sbb
jp
mov
and
pop
adc
mov
inc
add
push
fcoml
or
imul
sahf
pop
pop
cwtl
lea
sbb
stos
lret
int
out
ljmp
mov
ja
jg
adc
mov
mov
jne
jmp
loope
and
sbb
aas
inc
and
sub
aaa
iret
in
stc
push
loope
pop
adc
pop
mov
cmpsl
sbb
pop
mov
jne
rcrb
mov
xchg
pop
mov
mov
push
adc
dec
xor
xchg
out
dec
enter
ss
in
jns
movsl
pop
lret
rsqrtps
test
pop
mov
pop
imulb
dec
xchg
push
inc
aam
stos
sub
sbbb
pop
enter
mov
icebp
test
data16
int
mov
push
in
les
fnstcw
inc
adc
mov
cwtl
add
bound
out
aad
cmp
mov
xlat
push
xor
and
sbb
or
pushf
aam
mov
lods
out
sub
and
push
sahf
lret
ret
int
popf
cmpb
es
cmp
fbstp
mov
pop
mov
mov
push
add
mov
add
frstor
or
mov
add
sub
dec
scas
adc
xchg
aam
cmpsl
fldcw
adc
push
push
les
dec
mov
adc
ljmpw
enter
sub
sbb
fstps
lods
mov
mov
xor
out
sbb
cmpsb
stc
dec
js
xlat
cmpl
loop
mov
xchg
dec
shll
out
in
push
pop
stos
jge
bound
push
fisubrl
dec
mov
xor
in
in
call
dec
pop
pop
cmpsl
mov
or
test
iret
pop
pushf
fstpt
jl
ret
inc
sub
add
rcll
push
cltd
push
push
adc
mov
mov
jno
stc
jae
fucomip
and
dec
push
loop
ja
and
push
adc
orl
jae
nop
ret
mov
icebp
addr16
lods
or
sbb
data16
pop
mov
es
scas
mov
rcrb
sbb
and
aaa
in
mov
fistps
xchg
mov
and
inc
bound
adcl
xor
popf
dec
mov
xor
jl
es
std
lds
cli
test
add
lcall
shrl
jbe
or
sub
stos
xor
arpl
adcb
out
ret
movsb
sbb
nop
and
lock
inc
cwtl
pop
mov
cmc
stc
jbe
or
mov
sub
mov
sbb
nop
add
cmp
bound
shrb
and
jne
ficomps
lgdtl
insb
xlat
mov
nopl
mov
insl
inc
jg
sub
cld
fisubs
adc
adc
popf
inc
xchg
push
popa
in
cmp
inc
jmp
insl
push
xchg
insb
xchg
je
rcr
mov
je
inc
insb
daa
xchg
pop
test
adc
rolb
jns
pop
filds
push
pushf
jge
jb
fisubs
push
insb
fmulp
in
add
pop
mov
pusha
jge
sahf
lods
add
shll
imul
lret
aaa
loope
jns
arpl
ja
cmp
sub
out
mov
sbb
dec
inc
push
scas
sub
xchg
mov
stc
shr
jmp
and
lods
inc
xlat
jo
int
lock
std
sub
xor
adc
and
ret
jl
inc
dec
sub
nop
test
popl
lea
push
movsb
lea
mov
inc
inc
sti
scas
inc
jmp
pop
movsb
sbb
sub
pop
push
ja
jle
scas
mov
sbb
rcll
insb
ss
popa
cmp
cs
mov
dec
cmp
imul
fstpt
pop
pushf
xchg
xchg
iret
sub
cld
int
add
jo
sbb
aas
fcmovu
xor
in
scas
addr16
dec
mov
jns
xchg
in
data16
and
add
lea
movsb
sarb
jle
jmp
scas
cmp
in
or
lods
lods
ficomps
xchg
scas
js
sub
cmp
jne
sbb
loop
add
ja
inc
sti
sub
aam
loope
inc
jns,pt
adc
mov
cmp
push
jecxz
out
enter
addr16
jne
stos
out
mov
mov
mov
cmp
fnstenv
cmp
jns
xchg
add
jae
pushf
pop
mov
xchg
xor
or
mov
mov
add
jecxz
mov
dec
sub
add
push
fmul
cmp
dec
test
pop
iret
xor
pop
movsb
icebp
call
loope
icebp
jmp
fistpll
mov
popa
movntq
cltd
push
ds
sbb
loope
inc
cmp
mov
push
push
ja
xchg
xor
cmp
xchg
dec
aad
sti
data16
sbb
enter
or
xchg
fiaddl
mov
adc
cli
call
add
cli
mov
fwait
dec
pop
dec
add
popa
aam
dec
pop
push
dec
loop
push
sbb
idivb
popf
pop
ds
pop
mov
int3
mov
gs
or
mov
push
cmpsl
mov
movsl
ja
fisttpl
pop
push
leave
pop
push
inc
cmpb
mov
inc
pusha
and
jecxz
jl
or
repnz
stos
adc
inc
into
fbld
clc
pop
fdivs
incb
int3
mov
aaa
movsb
pop
fistps
sbb
pop
or
or
ds
pop
sub
int3
jbe
inc
fidivs
fs
imulb
adc
fldcw
loop
xchg
leave
jle
xlat
mov
jns
dec
inc
hlt
jle
cmpsb
pop
sub
pop
imul
or
jbe
and
mov
dec
rolb
sahf
shl
lock
jle
add
sub
add
flds
fiaddl
mov
dec
cmp
jmp
lcall
jnp
sbb
and
xor
popa
movsb
into
and
push
add
and
pop
dec
pop
lea
mov
clc
mov
outsl
pop
sub
data16
fisttpl
sbb
mov
int
push
fildll
in
repnz
xchg
inc
mov
push
lods
frstor
add
push
lea
mov
adc
push
cli
dec
jbe
lcall
sbb
pop
pop
lods
jno
mov
xor
repz
cmp
fcmovnb
fxch
insl
std
aaa
push
out
lret
idiv
scas
mov
inc
inc
cltd
mov
mov
mov
jle
stc
pop
sbb
or
jb
sar
fwait
jg
icebp
cld
fstpt
fistl
rolb
sbb
lods
rorl
sbb
adc
sbb
cmp
les
dec
dec
push
loop
or
gs
mov
aad
in
dec
mov
ljmp
jl
mov
xlat
out
mov
aas
push
xchg
ret
and
cmp
call
inc
lahf
scas
inc
aam
fs
push
push
mov
rclb
adc
inc
pop
jnp
and
adc
in
mov
mov
xchg
sub
sbb
rorb
movsb
cld
sub
adc
les
push
sbb
jo
jne
jl
push
iret
jl
addb
jns
shr
add
cmp
pop
cmp
repnz
or
call
int
or
mov
pop
cwtl
mov
shlb
das
dec
popa
inc
xchg
fstp
cmp
jnp
dec
shrb
daa
push
sbb
jbe
movsl
in
es
inc
or
lcall
jmp
rcl
das
pop
ljmp
imul
mov
mov
mov
sub
vcmpsd
sbb
in
outsl
aad
add
push
xchg
sti
mov
fs
shll
adc
out
pop
push
mov
fadd
mov
cli
push
call
or
ss
add
bound
sbb
insb
xchg
xchg
popf
decl
mov
test
sahf
lret
mov
jle
pusha
add
jp
stos
jb
aaa
mov
fld
jle
cs
std
pop
fs
jns
ds
xchg
jne
inc
fsubl
cmp
mov
dec
mov
add
nop
negl
outsb
sub
push
stos
mov
orl
mov
cmp
add
test
adc
imul
std
mov
and
enter
in
loopne
repnz
out
repz
jo
sub
sub
xor
push
insb
fistpll
data16
mov
pop
push
inc
mov
jne
push
mov
iret
or
fcompl
sub
jp
idivl
mov
sub
dec
jge
out
shlb
inc
ja
jb
add
mov
stos
cwtl
xor
sbb
pop
mov
jno
cmp
mov
hlt
jle
xlat
add
cmp
scas
sbb
pop
push
je
cmp
imul
mov
xor
orb
inc
push
negl
pop
shll
loop
mov
daa
test
xor
inc
xchg
out
add
xchg
pop
mov
pop
stc
mov
popf
shll
adc
and
cmpsb
in
adc
dec
xchg
repz
call
jp
imul
lock
mov
mov
ret
sti
adc
dec
lock
inc
push
add
add
roll
xchg
cmp
add
xor
pop
cmp
lods
rcll
mov
mov
loope
pop
inc
shll
sbb
scas
popf
js
scas
call
jae
inc
push
sbb
mov
jno
jmp
or
stos
aam
and
xchg
aas
push
adc
std
jge
push
sub
dec
or
jl
lock
jecxz
mov
xor
daa
or
cli
jp
popa
call
adc
cmp
cld
ljmp
jg
into
lea
fwait
stmxcsr
xchg
sub
fwait
jecxz
push
jnp
fs
outsb
aas
test
xor
sub
push
xchg
pop
mov
aam
add
adc
mov
mov
push
mov
sub
scas
push
insb
or
lcall
lock
dec
mov
push
push
jno
iret
ss
push
or
push
adc
dec
lods
and
out
adc
cmp
jmp
inc
dec
fnstsw
mov
cmp
repz
in
cltd
sub
push
push
cmp
mov
sarb
int
push
xor
and
ficoms
scas
mov
in
sti
pusha
dec
push
pop
adc
jg
ss
and
mov
fdivl
jno
mov
jbe
sbb
cmp
hlt
adc
cmova
mov
test
lods
hlt
ret
mov
outsl
cmc
test
cmpsl
aas
push
ret
jno
dec
cmp
nop
insb
aas
lret
movsb
cs
cmpsb
jmp
xor
sbb
loope
sbb
dec
mov
out
loope
bound
mov
adc
test
test
es
ss
fistl
lahf
mov
jnp
ss
pop
sbbb
cld
push
inc
adc
ja
cwtl
mov
mov
jne
lods
shl
dec
hlt
aaa
hlt
hlt
adc
pusha
out
pusha
scas
jne,pn
pop
xchg
loope
xor
xchg
push
push
in
aas
mov
mov
stos
es
fcomip
sub
out
mov
push
lahf
loope
push
xchg
sbb
mov
mov
push
mov
leave
xchg
aas
fistps
aaa
inc
mov
cmpsb
jo
mov
repnz
mov
ficoms
popa
and
mov
in
ret
jae
dec
mov
push
lret
cmpsb
mov
test
pop
iret
scas
dec
shrb
cmpsb
dec
and
mov
dec
adc
sub
cld
or
and
jecxz
mov
aas
add
inc
loope
cmp
push
mov
mov
ss
dec
jo
and
sub
sub
mov
cmc
out
mov
push
mov
cmp
je
mov
xlat
lahf
xor
sub
xchg
cmpsl
jmp
lret
inc
scas
in
fiaddl
leave
inc
cltd
pop
not
mov
je
xor
daa
call
sbb
lcall
mov
repnz
xchg
jbe
mov
test
mov
xchg
pop
jle
addr16
data16
pop
add
ss
xchg
test
nop
sub
adc
movsb
out
sahf
push
arpl
ljmp
cmp
stc
push
aaa
inc
mov
adc
pusha
mov
xchg
dec
xchg
cmp
loope
mov
pop
pop
imul
mov
pop
mov
es
mov
push
push
push
mov
shr
mov
in
pop
sub
mov
movb
xchg
xor
pop
sub
add
and
data16
test
lret
mov
add
or
push
adc
imul
xor
inc
cmp
inc
adc
push
jo
test
mov
ret
aam
dec
ljmp
std
sbb
cmp
xchg
adcl
pop
xchg
dec
push
shlb
mov
sbb
les
gs
fmull
pop
stos
add
mov
push
push
sub
dec
imul
pop
dec
xchg
outsl
stos
sub
stos
push
mov
ss
cld
rorb
leave
pushf
dec
mov
ja
rcll
scas
inc
notb
icebp
sbb
arpl
cltd
enter
and
fstpt
sahf
push
jbe
popa
lret
mov
mov
push
mov
sti
mov
jmp
and
dec
bound
fwait
sti
mov
push
xor
sbb
pusha
pop
jno
mov
je
pop
mov
adc
loop
insl
sbb
lcall
mov
mov
cmp
jnp
cmp
push
or
dec
dec
pop
leave
nop
sahf
pop
movsb
xor
ljmp
ss
cmovnp
scas
mov
push
xlat
enter
mov
int
mov
repnz
fisttpll
push
js
movsl
rorl
fsubs
or
in
rclb
sub
ljmp
push
cmp
imul
xor
or
add
loopne
mov
jno
dec
push
sbb
and
mov
sbb
sub
std
addr16
scas
in
jge
je
ss
insb
ficoml
mov
scas
sahf
pop
push
es
ds
inc
aaa
sbb
aas
push
and
mov
dec
int3
or
xor
xor
jl
inc
rorl
sub
sti
clc
xchg
dec
cli
inc
jle
add
lea
mov
push
mov
bound
lods
call
lea
cmpsl
lock
das
inc
xor
push
popa
shrl
sbb
test
mov
sbb
je
mov
stos
xchg
jmp
test
stc
test
fimuls
mov
dec
in
popf
cmp
jno
addr16
or
out
pop
push
popf
pushf
sub
es
ret
out
fldl
add
icebp
pop
pop
add
adc
inc
push
push
je
add
loopne
mov
inc
in
adc
fucom
pop
es
pop
inc
jo
xchg
fs
mov
popf
es
jmp
dec
jo
lods
or
outsl
mov
xorb
cld
add
push
push
push
iret
je
sub
xor
inc
and
jp
pushf
inc
xor
mov
lret
mov
test
cwtl
xchg
rcll
out
shl
mov
dec
arpl
adc
or
fdivr
mov
sahf
dec
lods
inc
je
mov
push
mov
sub
aad
stos
test
add
outsl
sub
repz
dec
fidivrl
in
pop
jg
inc
dec
pop
shl
ljmp
jl
imul
outsb
xor
fimuls
push
ss
mov
leave
stos
inc
adc
cld
clc
jb
or
xchg
mov
mov
sahf
cli
cltd
xor
cmp
sub
mov
stos
xchg
xchg
icebp
cmp
mov
notl
pop
push
or
dec
gs
sbb
js
fisubs
rcrb
jns
push
adc
rol
aaa
lods
movsb
mov
pop
movsl
pop
dec
sbb
mov
in
aam
das
loop
repz
jo
negl
lcall
jle
popf
push
push
lcall
add
sbb
mov
cmc
jle
sub
popf
pushf
stc
js
lods
cmpsl
inc
push
dec
sbb
fdivrl
ja
icebp
faddl
out
repz
adc
pop
mov
jae
std
dec
nop
leave
inc
fnstcw
ljmp
call
icebp
add
push
mov
sbb
or
inc
xor
adc
rorb
adcb
movsl
cli
scas
xchg
xchg
xchg
xor
add
mov
pop
lods
imul
mov
pop
mov
inc
push
push
mov
add
jne
jae
popa
loop
dec
jp
push
or
cmp
jmp
jne
sbb
aad
lret
rolb
cmp
je
dec
shrb
ret
mov
fdiv
insb
arpl
daa
pushf
in
dec
lock
adc
js
mov
data16
dec
or
push
pop
sbb
push
cmpsl
xchg
mov
pop
insl
ss
orl
add
sub
mov
lock
mov
mov
fcmovb
cmp
jbe
cli
jmp
leave
and
imulb
mov
rorl
in
bound
mov
xor
orl
enter
lret
mov
cmp
push
mov
lock
dec
adc
inc
outsl
xor
mov
push
mov
movsl
adc
cmpl
into
test
int
sub
shlb
shrb
jb
xor
mov
mov
cmp
in
or
int
jg
packsswb
cmc
inc
shlb
xlat
nop
in
push
jmp
rorl
xchg
dec
int
and
rep
loop
sbb
cmpl
jmp
jl
lods
lods
into
xchg
mov
int3
cli
std
jae
cmp
arpl
ja
xor
mov
adc
mov
cmp
and
sbbb
cs
dec
mov
repnz
mov
jae
sub
add
adc
daa
push
pop
lock
dec
testb
or
sarb
ljmp
and
pop
out
stos
pop
and
filds
gs
insb
pushf
and
jno
out
add
push
test
xchg
and
mov
lahf
cltd
pop
popf
loop
out
jo
das
sub
sbb
xor
sub
push
xor
iret
pop
iret
xlat
std
lock
mov
test
cmpsb
xchg
pop
or
ret
movsl
shlb
mov
lcall
jo
xchg
mov
jo
mov
insl
cmc
and
mov
mov
pop
das
int
movsb
sbb
lret
call
mov
xlat
push
and
jnp
push
js
add
jecxz
adc
and
inc
imulb
xchg
ds
dec
loopne
xlat
mov
sbb
in
int
loope
push
jmp
mov
push
inc
fcomi
dec
sbb
clc
aas
das
lcall
fldcw
push
imul
dec
popa
fstl
jge
imul
jbe
fsubrl
shll
out
sub
mov
xor
inc
and
dec
add
push
mov
fistps
je
insb
nop
out
icebp
or
sub
call
in
addl
mov
push
push
push
cmp
mov
and
push
push
mov
test
xchg
insl
daa
jecxz
or
jnp
mull
pop
add
loopne
dec
jge
xor
cmp
cmpsb
leave
or
inc
cmp
cmpsb
fs
test
add
repz
xchg
add
adc
xchg
mov
mov
jge
xor
inc
mov
pop
in
push
sub
sbb
push
mov
sti
aad
mov
mov
imul
mov
sbb
insb
cmp
les
ja
and
mov
shl
jbe
and
pop
gs
push
add
push
lock
ret
lret
add
iret
ljmp
mov
push
inc
sarl
fldl
shll
rcr
xchg
popf
cmpsb
gs
jno
add
dec
push
mov
loope
outsb
fcoms
fnstsw
push
jp
adc
inc
int3
data16
fs
movsl
sti
movsl
lret
sbb
inc
add
ss
andl
adc
sub
popf
lcall
pop
jmp
xlat
nop
push
arpl
mov
jge
movsb
mov
xor
pop
pop
xchg
mov
iret
fcompl
cmp
repnz
dec
sub
aas
sti
shll
mov
jecxz
jb,pt
in
test
rcrb
das
and
test
jae
or
xchg
sub
into
mull
and
lahf
pop
dec
jecxz
sub
push
pop
dec
aas
imul
orb
data16
cmp
fdivrl
stos
push
mov
dec
fcoms
rorb
jno
nop
divb
jne
sbb
add
dec
or
xchg
psubusb
xchg
cmp
bndstx
sti
cmc
add
std
icebp
jbe
cmc
sub
mov
stos
jle
daa
sub
cli
and
push
gs
inc
lods
aas
dec
inc
ja
mov
rolb
idivl
ljmp
stos
fistpl
dec
cli
jb
int3
imul
xchg
sub
pusha
ret
sarb
mov
loope
out
sahf
getsec
pop
adc
ja
ja
clc
and
xor
popa
and
cli
mov
mov
xchg
inc
jg
mov
xchg
sbb
ret
and
cmp
xor
adc
jmp
nop
int3
lods
imull
sub
shl
add
cmc
mov
pop
jecxz
insl
push
xchg
test
addb
sub
mov
imul
aam
test
push
cli
in
cmp
fs
push
cs
lock
push
sub
jne
inc
jnp
mov
psllq
fnstenv
push
lcall
scas
test
jmp
inc
jbe
imul
subl
push
push
test
dec
jb
xor
int3
test
fidivs
lea
adc
xchg
out
sbb
int
das
pop
pop
bound
ds
loop
mov
mov
ds
or
rorl
add
out
or
cltd
cli
mov
jns
mov
stos
jae
sub
mov
cld
add
xchg
les
cs
push
jno
xchg
das
jecxz
sbb
xor
mov
cmp
xchg
les
jo
fadds
mov
into
lock
dec
lods
adc
js
push
fnstcw
cmp
dec
dec
mov
jecxz
outsl
es
cmpsl
push
inc
popf
mov
cltd
mov
lret
pop
or
int
and
or
in
dec
xchg
push
sbb
mov
sub
push
int
repnz
push
out
mov
mov
mov
leave
mov
adc
clc
pushf
add
mov
jno
push
or
call
add
jge
xchg
push
sbb
pop
fstl
pop
cmp
ja
sbb
sbb
mov
ret
adc
mov
lods
pop
fmul
cli
data16
sub
pop
jb
test
jns
dec
cmp
cmp
push
loope
pop
addr16
insb
pop
lea
cltd
mov
movsl
in
xor
popf
aaa
cli
and
in
negb
xchg
mov
push
mov
popf
adc
in
inc
mov
mov
loope
xchg
sub
pop
and
mov
or
dec
pop
jg
inc
jbe
roll
sarb
sub
out
xorl
pop
or
or
fnsave
mov
xchg
sub
mov
lahf
movntq
inc
out
je
lds
sub
std
aam
dec
rcr
and
sbbb
lcall
xor
popa
scas
gs
in
int
dec
pushw
int3
sti
cmp
lods
pop
test
push
incl
inc
pusha
jle
repnz
stc
aas
xlat
pop
js
pop
mov
xor
adc
add
stos
nop
lods
into
sahf
aas
add
xchg
test
xchg
sbb
arpl
mov
mov
sub
cs
xor
pop
popf
iret
scas
jo
shrb
xchg
mov
cs
hlt
icebp
cmpsb
ficompl
push
ret
iret
sbb
fisttpl
cmp
jl
inc
add
or
cmp
adc
popa
cmc
sub
xchg
xor
sahf
xchg
dec
push
pop
inc
out
mov
movsl
xchg
dec
or
dec
or
jo
push
fstp
in
loopne
xchg
lea
movsb
mov
rorl
cltd
mov
enter
dec
js
cmpl
mov
cs
and
push
shr
in
lods
int3
inc
scas
pop
cwtl
les
outsl
testl
push
aad
and
or
lock
and
cmp
popf
aam
jns
push
lods
repz
fsubs
out
test
mov
push
in
in
sbb
inc
cmpsb
mov
xchg
pop
push
xor
in
jecxz
cmpsb
aam
cmp
outsb
mov
out
jo
xchg
std
pop
rcrb
and
cmc
jecxz
mov
xchg
adc
push
popa
fdivr
push
into
mull
out
sbb
test
je
jecxz
jle
lret
ss
out
jmp
fwait
jb
push
sarb
nop
scas
pop
add
xlat
sub
inc
push
stos
lea
mov
test
sub
cmp
pop
loop
cmp
push
into
cld
js
lcall
sti
hlt
pop
sub
add
cmpl
arpl
lret
ror
sahf
pop
xchg
xor
inc
mov
fstpl
std
in
imul
scas
adc
jecxz
cmp
jp
inc
nop
inc
jns
fcoml
fistps
aad
jmp
push
shlb
mov
pop
adc
pop
xor
ljmp
mov
mov
leave
sbbl
test
push
lret
push
not
sbb
push
testl
call
and
dec
xchg
mov
jo
jns
mov
hlt
mov
nop
push
mov
stc
scas
cmpl
jb
fwait
mov
imul
sti
xchg
sbb
jns
in
push
int
shrl
jecxz
push
pop
imul
int
pop
movsb
sbbb
cmc
sbb
inc
lds
inc
ss
jno
and
sbb
cli
push
les
mov
cmpsl
dec
je
imul
int
fdivrl
subl
cmp
jno
mov
inc
out
sbb
rcrw
loop
mov
adc
arpl
subl
mov
and
mov
pop
xchg
sti
fbld
ret
rcrl
ret
jp
fs
nop
pop
mov
hlt
pop
mov
xchg
int3
or
lock
xor
mov
mov
push
jb
adc
sti
jle
adc
push
dec
out
ret
insl
lcall
mov
or
jo
outsl
pop
lret
adcl
rorl
jb
pop
loop
aam
and
pop
es
in
jl
mov
pop
pusha
pop
adc
addr16
inc
xor
pop
or
movsb
repnz
push
pop
sbb
adc
rorb
js
inc
jg
stc
sub
push
jmp
or
shlb
pop
pop
pop
or
push
sub
xchg
jno
push
lea
popf
jns
xor
popf
push
sbb
cmp
mov
adc
mov
nop
mov
out
in
cld
fsubrs
pop
jg
cmp
sub
incb
mov
cld
ficoml
jns
push
cltd
jno
ljmp
ja
and
sbb
mov
jb
mov
cmp
ljmp
jecxz
mov
jne
popf
sar
std
pop
fidivs
out
push
lods
enter
adc
insl
mov
pop
arpl
xlat
sbb
mov
popa
orb
into
aad
sub
pop
fwait
jge
xor
and
in
js
push
inc
ljmp
roll
xchg
insb
and
push
dec
bound
out
fprem1
addr16
xor
lods
js
scas
arpl
dec
lahf
sub
lcall
or
in
rorl
fdivrl
push
inc
stc
cld
mov
lds
xor
insb
ds
ja
fsts
imul
repz
push
jg
push
movsb
xor
lea
addr16
jg
pop
mov
loop
clc
cld
sub
mov
cmp
pop
sub
xchg
decl
shll
movsl
xchg
mov
xchg
mov
xchg
cld
jnp
or
cmp
mov
mov
das
inc
inc
in
stos
mov
enter
jnp
inc
xlat
mov
fisubs
punpckhbw
movsl
pop
in
cld
fstpl
and
negl
cltd
jp
imul
stos
mov
nop
and
sub
cwtl
mov
xor
adc
mov
cmp
sub
aad
stos
scas
cmp
mov
lds
in
aaa
mov
sbb
jbe
xchg
mov
ficomps
sub
je
mov
shlb
out
arpl
cmp
addr16
jb
and
leave
sbb
xchg
mov
jo
and
scas
incb
cmp
mov
sub
inc
xchg
stos
hlt
or
lret
adcl
aaa
divl
das
jle
jns
lock
inc
and
into
in
pop
dec
add
sub
out
pop
dec
fisttpl
mov
xchg
xchg
mov
xchg
fistpll
sub
inc
out
push
std
arpl
dec
mov
and
pop
adc
cmpsb
xor
aam
mov
sbb
fwait
out
test
adc
inc
pop
test
out
icebp
jg,pn
dec
adc
adcb
insb
lods
sbb
fdivl
sbb
xchg
fwait
xchg
cltd
jae
jo
das
adc
push
jmp
jmp
call
mov
cmp
mov
in
dec
insl
dec
jg
outsl
add
mov
xor
in
dec
outsl
mov
in
push
push
jns
add
xchg
repz
ret
or
sub
add
jge
or
leave
adc
sbb
pop
out
cmp
jmp
inc
mov
pusha
cmp
mov
js
adc
mov
cmp
mov
dec
shl
loopne
test
imul
add
in
nop
sbb
and
cmp
xchg
or
ret
iret
dec
js
int3
sub
and
xor
mov
jnp
loop
dec
rolb
mov
mov
adcb
rcr
loopne
jg
pop
test
sub
or
add
test
lahf
or
mov
mov
push
imul
lods
shrb
mov
test
les
pop
add
sahf
cmc
mov
xchg
stos
lahf
out
mov
pop
outsl
jg
das
xchg
test
jle
shl
mov
stos
xchg
movsb
rclb
cli
mov
push
or
push
and
jne
jge
or
mov
int3
mov
jmp
rol
sub
cwtl
lods
pop
mov
add
aam
mov
fwait
into
mov
pushf
pop
mov
notl
adc
inc
cld
outsl
test
xchg
sti
daa
scas
xor
inc
test
clc
push
imul
testb
jae
sub
ds
mov
aad
in
mov
push
xor
pusha
stos
xchg
dec
mov
and
mov
dec
pop
add
xchg
inc
and
data16
lods
mov
and
inc
fdivrs
out
add
xchg
test
push
mull
adc
arpl
dec
sahf
test
add
jecxz
mov
lret
jno
mov
fwait
les
push
xor
jg
xlat
jno
stos
xchg
push
adc
gs
xchg
xor
loopne
sub
dec
dec
imul
ljmp
movzbl
mov
fimuls
test
js
cmpsb
leave
push
cs
daa
cmp
stos
insl
and
arpl
mov
imul
jle
std
add
ja
scas
arpl
jecxz
jns
sbb
inc
stos
add
dec
sbb
clc
dec
sbbl
out
adc
andb
sub
daa
pop
add
dec
add
dec
mov
insl
cmp
sbb
adc
xchg
inc
dec
shrb
aaa
in
out
ja
or
dec
stc
push
and
adcb
scas
push
mov
jb
fdivl
mov
subl
and
pop
mov
xchg
push
xchg
loop
push
outsl
in
dec
sub
mov
loop
pop
push
pop
out
mov
push
jl
int
pop
inc
cltd
sbb
lds
sub
cld
fs
fimull
mov
sub
or
out
movsl
fiadds
sbb
fiadds
mov
imul
call
xor
sbb
mov
jg
cltd
mov
xchg
push
js
mov
sbb
add
stc
jne
cmp
xor
jg
lods
ljmp
test
fwait
mov
jns
push
dec
lret
push
lcall
jle
mov
rcr
inc
xchg
sub
pop
div
popf
sub
xor
cmp
mov
std
xor
sbb
jl
cmpsl
jmp
pop
scas
xchg
cmpsb
in
jl
push
insl
pop
pop
xor
lods
add
fidivl
mov
or
ljmp
jae
jmp
or
mov
insb
into
mov
cmp
inc
sbb
adc
fs
adc
mov
jo
shll
jne
add
mov
inc
bound
mov
outsb
xorl
xor
push
and
mov
jo
andb
jmp
adcb
sar
in
push
push
mov
movsb
test
and
repnz
lods
lret
push
popf
jns
push
inc
push
int
sub
jmp
xchg
push
cmp
sbb
insb
divl
shr
mov
cld
loop
cmpsl
add
adc
leave
pop
push
std
sbb
push
insl
not
mov
sub
jmp
mov
pop
aad
push
ret
dec
movb
pushf
dec
push
mov
nop
je
test
shrb
imul
jbe
pop
std
movsl
jnp
pop
daa
daa
sbb
pinsrw
je
aam
pop
mov
sub
and
pop
imul
sti
mov
dec
dec
and
popf
add
insb
push
xchg
xchg
cwtl
cs
ret
ret
xchg
lahf
jmp
ss
xchg
stos
or
xor
leave
mov
pusha
add
adc
or
or
negl
scas
jb
push
out
pop
cmc
mov
or
dec
pop
cmp
and
mov
in
in
jmp
mulb
add
adc
sub
and
test
frstor
jnp
cmp
or
sub
scas
or
mov
es
loopne
sbb
pusha
and
mov
or
fsubrs
cmp
xor
mov
movsb
cmpsb
dec
xchg
ja
jg
cmpsb
add
daa
jae
das
inc
les
lret
xor
pop
cmpsl
mov
mov
enter
popa
test
dec
orb
subl
inc
xchg
js
mov
inc
dec
or
xchg
pop
fsubl
mov
sarl
lods
insl
jge
movl
jle
arpl
into
inc
xor
adc
clc
ss
pop
test
mov
cmpsb
js
add
and
dec
push
push
push
push
cmpsb
adc
subb
sbb
ret
fiadds
sub
lock
imul
mov
xchg
popf
sbb
inc
stos
jae
xor
mov
jno
enter
cmpl
jl
mov
mov
and
push
je
jns
and
mov
xchg
mov
popa
push
jns
ret
or
push
pop
add
jns
sub
add
push
push
mov
test
xor
push
cmp
xchg
mov
and
jle
cmpsb
jmp
adc
sub
cmp
cmp
in
pop
ljmp
mov
notb
cmp
es
fiaddl
stos
les
in
inc
xchg
jle
dec
mov
sbb
fsubs
and
shrl
jp
adc
js
lea
inc
sahf
inc
dec
bound
cltd
outsb
pop
pusha
scas
insl
adc
ds
push
leave
popf
insl
mov
cmp
out
aam
dec
xchg
mov
mov
test
mov
lea
fwait
mov
or
mov
sub
scas
decb
add
jne
xor
pop
rclb
adc
stos
js
mov
fstps
sbb
mov
xchg
push
dec
insl
arpl
ret
pop
sub
loopne
fs
std
sti
shrl
cmp
xchg
insb
jo
int3
cmp
lds
loopne
pop
and
inc
aam
movsl
sub
movsl
sti
popa
inc
fwait
adcl
outsb
test
mov
mov
std
stos
ss
xor
add
push
adc
add
loopne
and
ds
mov
imul
cmc
cmp
jo
push
or
data16
incl
xchg
jae
jge
jle
scas
mov
addl
or
movsb
fdivl
inc
push
jnp
popf
jle
call
bound
cmpsl
jne
popa
xor
cld
cmpsb
lock
ret
cmp
cmp
cmpsl
inc
push
stos
es
cmp
adc
loopne
push
js
dec
mov
or
fwait
sbb
clc
xchg
inc
testl
js
out
jae
stos
and
xlat
xchg
fiaddl
inc
mov
jp
outsb
dec
clc
fcoml
ret
fld
pop
sbb
push
inc
lock
out
push
pop
mov
mov
rolb
xchg
inc
insb
enter
dec
movsl
mov
fidivrs
daa
jp
std
sbb
and
mov
insb
dec
mov
mov
jl
sub
aad
rorb
shlb
insb
dec
mov
shll
adc
mov
jp
aam
dec
add
lahf
dec
mov
add
arpl
out
push
push
xchg
or
cmpsb
loopne
xchg
cmpsb
inc
outsb
mov
imul
out
xchg
cmp
xor
sub
push
add
mov
pop
out
dec
js
xchg
clc
repnz
rcl
test
js
xor
sti
add
push
pop
fxch
cmp
icebp
xchg
mov
test
es
mov
sub
sbb
lcall
mov
cmp
sbb
pop
adc
dec
pusha
add
push
stos
pushf
add
popa
outsl
das
pop
ds
xor
jg
insb
icebp
jmp
cwtl
icebp
sbb
popf
fsubrl
add
cmp
loopne
jp
jle
xor
rcll
jo
and
adc
mov
xor
xchg
dec
mov
repz
fdivr
pushf
sub
jecxz
cmp
scas
add
mov
add
mov
mov
hlt
cmp
adcb
repz
dec
aaa
movsl
inc
push
xchg
insb
cmpsl
adc
jg
nop
sub
xor
jg
out
jle
dec
pop
push
sub
rolb
lret
or
xor
inc
shl
add
repnz
pop
test
imulb
pop
or
cmp
out
pop
or
mov
insb
push
push
call
sub
inc
xchg
jp
imul
xchg
mov
repnz
sub
pop
popa
xor
cmp
mov
jnp
push
and
xor
nop
mov
or
das
ljmp
dec
enter
mov
xor
ljmp
shlb
popa
adc
dec
je
daa
inc
push
cs
insl
hlt
jg
push
lock
mov
mov
inc
inc
sahf
adc
inc
data16
mov
jbe
fs
and
pop
mov
hlt
sarb
lods
cmp
idivl
and
push
push
shlb
mov
push
xor
stos
in
movsl
jb
jle
fstl
arpl
sbb
add
xchg
mov
jb
jo
aad
popa
lahf
xor
sub
push
je
inc
cmpsb
inc
jg
xor
adc
push
fwait
inc
and
mov
or
add
mov
pop
mov
mov
pushf
jbe
lcall
int3
pushf
insb
pop
mov
mov
sub
mov
sbb
cmp
or
popa
testl
addl
push
ret
push
scas
fstl
loope
push
jg
push
int3
mov
mov
adc
dec
loopne
cmp
push
mov
sub
popf
sub
xchg
xchg
cmp
fbstp
jle
dec
add
fadd
xor
cmp
mov
and
adc
or
mov
fisttpll
jecxz
movsb
aam
je
pop
das
in
cmp
add
sub
pop
pop
mov
mov
js
minps
test
arpl
adc
lods
fs
xchg
mov
push
adc
jecxz
scas
fwait
adc
cmp
sbb
pushf
inc
dec
pushf
dec
pop
js
pop
dec
sbb
jne
cmp
fstpl
test
fcompl
cmpsl
fcoms
sbb
xchg
push
dec
push
sbb
pushf
mov
cs
add
mov
lcall
jmp
rcr
dec
pop
dec
int
mov
jbe
sbb
call
lods
mov
inc
sti
push
ja
inc
jb
movsb
add
add
inc
jmp
lret
mov
test
test
mov
push
pop
xchg
xchg
in
lea
pusha
pop
jae
or
flds
mov
dec
lods
inc
xor
stos
push
pusha
dec
mov
enter
xchg
cli
cld
cmp
mov
je
in
inc
enter
pop
lock
cwtl
push
dec
pop
sub
jnp
sbb
or
out
or
pop
fisubrs
leave
aaa
fistps
sti
hlt
andb
in
icebp
in
sti
ljmp
pop
lds
cwtl
std
and
roll
xchg
xor
inc
mov
scas
fnstenv
inc
es
ficoml
push
sti
cli
insb
aaa
ret
add
jmp
aaa
in
push
dec
sub
bound
mov
push
sbbl
adc
cmp
jg
fld
mov
leave
mov
jno
rorl
ja
or
popf
push
xchg
dec
int
scas
test
insb
rorl
dec
inc
mov
xor
in
cmpsb
mov
test
fnstenv
cltd
test
insb
addb
jne
jae
repnz
sbb
fs
mov
pop
in
lea
sbb
xchg
mov
nop
add
push
push
sbb
movsl
sarb
cs
push
insb
sub
jle
in
dec
test
pop
arpl
add
out
popf
xor
cwtl
pop
xlat
mov
inc
pushf
mov
data16
cmp
orl
jmp
fisttpll
pop
pusha
call
inc
sub
xorl
add
mov
cmpsl
lods
lock
lret
lds
sbb
loope
or
lock
jne
mov
cs
and
xchg
mov
cmp
fadd
test
fs
add
pushf
mov
mov
jl
inc
inc
add
cmp
xchg
mov
pop
cmp
test
out
icebp
sbb
jp
mov
pop
cmpsb
dec
inc
imul
sub
sub
test
stos
xchg
sub
fwait
mov
leave
or
push
jecxz
mov
cmc
popl
ja
clc
stc
or
loop
dec
out
jl
aaa
daa
mov
aas
sbb
test
arpl
fisttps
std
jmp
mov
rclb
sub
and
fidivrl
dec
cmp
lahf
test
outsl
rclb
add
add
pcmpeqd
inc
shl
cmpsb
imul
mov
sub
sub
fnstenv
imul
jne
scas
mov
jo
inc
fiadds
mov
xchg
aas
movsb
fcoml
add
cs
cmp
xor
cmp
xchg
adc
adc
inc
test
shll
push
shlb
mov
movsb
loop
xor
leave
jb
adcl
inc
sub
and
leave
sbb
dec
jnp
and
and
or
ret
jns
adc
or
cwtl
sbb
mov
xor
mov
jo
mov
addr16
int3
mov
add
jb
fwait
addb
xor
ret
testb
pop
pop
stc
lahf
fldenv
jnp
xchg
cmpl
and
sarb
inc
xlat
mov
xchg
inc
call
inc
ja
add
ja
jo
push
fisubs
sarl
pop
rcrl
inc
cmpsl
outsl
mov
mov
or
lock
dec
add
loopne
push
mov
dec
cmp
ret
stc
aam
pop
daa
jecxz
push
js
pop
out
stos
xchg
mov
test
push
cmp
mov
lods
jo
outsb
adc
iret
add
or
jl
dec
cmp
push
push
push
mov
pushf
nop
testl
mov
lea
xor
fsubl
nop
fdivr
xchg
xchg
movsb
movsb
test
push
jge
pop
adc
sarb
in
cwtl
mov
stos
loop
sub
notl
fldt
stc
es
in
dec
xor
ljmp
fwait
xor
stc
mov
mov
stc
int
shll
pop
mov
sbb
and
dec
cmpsb
icebp
or
es
loope
pusha
shl
push
adc
andl
addl
pop
adc
into
jle
hlt
or
movsl
rcll
mov
or
dec
push
or
pop
and
sbb
js
icebp
cmp
xlat
mov
je
mov
sti
cmp
psubusb
xchg
mov
in
es
sahf
iret
loop
ror
clc
push
cmc
lahf
sub
movsb
or
adc
loope
nop
xchg
xchg
pop
les
int
fs
mov
dec
dec
aad
ljmp
enter
adc
dec
inc
imul
lds
push
mov
sbb
inc
stos
ljmp
lret
sbb
fucomip
lcall
nop
bound
pop
js
push
mov
fbstp
aam
pop
mov
nop
xlat
shr
sub
lahf
pushw
pop
cmpsl
xorb
jae
mov
pop
repz
rorb
push
incl
inc
pop
push
fprem1
out
pop
cmp
mov
outsl
xchg
ss
pusha
push
cs
add
fs
jno
cmp
cmovnp
lods
push
leave
xor
imul
push
pusha
push
lds
clc
mov
jae
movsb
jns
icebp
mov
shll
xor
dec
jle
out
lds
aam
adcb
adc
inc
insb
lods
int3
movsl
dec
in
imul
adc
std
popa
into
loope
mov
sub
test
mov
xor
in
shlb
movsl
jne
inc
adc
dec
jns
hlt
cmp
sbbb
js
inc
sbbl
stos
aaa
pop
ss
cmc
movl
xor
sub
pop
dec
push
cli
mov
dec
loop
jp
xlat
dec
lock
jg
std
push
imulb
xor
adc
jns
stos
sti
out
lcall
dec
aad
bound
inc
add
lock
jl
in
push
cs
push
add
and
xchg
fdivrl
inc
adc
dec
mov
pop
js
in
or
sti
or
aas
inc
outsl
jo
es
hlt
orb
imul
sub
les
aas
aad
sar
jecxz
sub
fidivrl
jbe
sub
jmp
fs
push
aam
jmp
xor
jmp
test
adc
lcall
movsl
out
push
insb
jnp
jo
imul
mov
push
rcrb
xchg
mov
inc
ret
and
loopne
xor
stc
in
mov
fs
push
lock
mov
fdivp
adc
cmp
aad
pop
jmp
nop
sub
or
pop
fsubrl
and
mov
xchg
adc
bound
or
dec
icebp
cmp
pop
jbe
stc
pop
pop
jp
add
push
popa
insb
mov
mov
sub
je
les
xchg
add
mov
pop
sti
roll
xlat
pop
rcll
jno
stos
les
xchg
push
ja
push
daa
and
movb
mov
cmp
repz
pop
xor
cltd
xchg
lds
ret
fisttps
push
mov
mov
scas
adc
fimull
fbstp
or
cmp
adc
cmpsl
push
and
gs
cmp
jnp
je
jl
jbe
jle
repnz
aaa
jecxz
hlt
repnz
ror
stc
mov
push
dec
lcall
pop
pop
dec
arpl
into
xor
int
mov
jnp
mov
leave
inc
test
int3
lret
cmpsl
push
shlb
das
jle
ds
and
pop
movsb
mov
mov
imul
and
lods
movsb
outsb
into
inc
mov
pop
cli
adc
or
pop
xorl
je
push
iret
pop
sub
stc
and
das
and
mov
gs
push
xchg
ss
stos
xchg
arpl
out
int3
clc
adc
cmc
fisubl
mov
push
test
std
lods
aas
and
adc
jle
mov
inc
xor
xchg
dec
insb
loop
xchg
lret
stc
and
mov
cmp
imul
clc
test
mov
pop
pop
scas
adc
adc
push
cltd
sbb
in
mov
push
gs
fs
or
sbb
cmp
idiv
pop
loopne
lds
jge
cmpsl
je
ja
xor
mov
xchg
xchg
imul
xchg
cmp
out
lods
lcall
mov
mov
popf
jl
clc
mov
jb
aaa
orb
mov
aaa
cld
aas
lock
push
mov
jge
cli
add
push
jne
sbb
jo
sbb
mov
lret
lret
xbegin
shl
movsl
aas
daa
or
cli
je
repnz
nop
sub
out
jbe
jb
mov
ds
lock
lcall
cmp
jbe
xchg
dec
pop
popf
mul
mov
jbe
adc
xor
sbb
mov
stc
inc
push
xor
aam
stos
mov
incb
movsl
mov
call
xchg
add
adc
add
scas
nop
push
mov
jl
jp
loopne
mov
cwtl
stos
sub
mov
mov
jns
sbb
sub
xchg
ret
or
cwtl
arpl
lret
inc
lret
pusha
xlat
add
inc
hlt
sub
xchg
and
outsb
shl
pusha
lret
popa
mov
pop
and
mov
pop
sbb
stos
mov
push
mov
inc
aas
subl
aam
jb
push
mov
adc
cltd
jnp
push
cmpsl
shrl
cmp
xor
shll
lock
ror
xor
cmp
adc
dec
jmp
rolb
lret
mov
sahf
outsl
dec
inc
xchg
cmp
jnp
gs
fwait
jg
xor
jmp
dec
and
lock
sti
and
test
or
xor
adc
push
dec
or
lods
in
in
mov
xor
test
insl
pop
aaa
repz
movsb
cmpxchg
push
mov
imul
mov
jp
leave
lods
cmp
repz
data16
das
enter
xchg
sbb
cmp
and
add
out
aad
pop
xchg
repnz
dec
jns
stos
xchg
push
add
rcrb
filds
push
or
fcoms
push
adc
push
rcrb
dec
js
mov
add
inc
gs
xor
shl
cmp
fidivl
jo
out
dec
int
push
call
xor
and
adc
cmp
xor
xchg
sbb
daa
xchg
mov
cmpsl
mov
aas
jl
lock
mov
call
sbb
in
xlat
sub
jecxz
cs
jp
jg
cld
and
jge
xor
enter
pop
or
ja
ret
mov
sub
sub
addb
jo
out
or
mov
jb
jae
sub
fisttps
lret
mov
sub
lret
outsb
or
outsl
inc
rcr
jbe
dec
sbb
adc
or
adc
xchg
ret
out
jno
lcall
insb
ret
clc
add
repnz
leave
xor
cmp
inc
jle
or
add
mov
mov
idivb
cltd
cmpsl
xor
out
mov
daa
jl
ljmp
int3
mov
sti
lods
popf
xchg
xchg
fsubrl
xchg
repz
xor
xor
cmp
push
fisttpl
push
push
cmp
and
nop
stos
fisttpl
clc
mov
lea
xchg
push
or
outsb
xchg
fisttpll
xchg
jmp
or
leave
mov
mov
jnp
leave
subb
js
or
pop
dec
cwtl
inc
push
jne
sbb
divb
arpl
adc
bound
mov
pop
loopne
addr16
pop
and
iret
sub
imul
sbb
add
sub
cmp
leave
mov
push
insb
jmp
mov
push
add
popf
pop
adc
iret
push
ret
sar
xchg
pop
mov
pop
xorb
std
push
fldenv
cmp
aas
add
add
pop
sub
mov
movsl
push
cmp
repz
out
xor
sbb
add
test
jbe
xchg
mov
dec
inc
pop
out
loopne
gs
fiaddl
mov
mov
mov
pusha
adc
decl
test
push
sub
adc
pusha
mov
mov
cmpsl
sbb
mov
mov
divl
fcomps
xchg
and
xor
pop
popf
stos
xor
sbb
jnp
jge
je
test
ds
xor
movsb
gs
push
sbb
add
pop
enter
mov
and
loope
push
test
jb
lods
jno
mov
xor
xchg
dec
mov
popf
lcall
lcall
mov
inc
jle
imul
adc
mov
addr16
loopne
xor
push
fisttpll
out
lret
and
nop
lods
sub
mov
fldcw
sahf
jb
pop
shlb
jecxz
fmull
out
test
lds
fwait
out
xor
pop
fisubl
and
xor
jbe
leave
xor
mov
mov
jmp
cmp
rclb
add
adc
xchg
xchg
add
push
mov
push
and
inc
push
xor
dec
ror
xchg
sbb
mov
test
lcall
inc
mov
dec
iret
sbb
sbb
fldcw
popa
cltd
ret
mov
adc
out
mov
xor
mov
es
push
push
stos
jns
jnp
xor
cmp
pop
sbb
jno
sub
lret
out
push
xchg
push
jo
mov
inc
frstor
clc
je
inc
jae,pn
imul
stc
xchg
xor
lea
push
xchg
add
es
mov
sbb
ja
outsb
sub
in
popa
cmp
pop
aaa
pushf
les
or
int3
cmc
mov
ret
xor
es
clc
sarl
or
cmc
xor
pusha
inc
ss
push
xchg
adc
fimuls
shrb
std
push
adc
mov
fnstcw
jmp
push
cmp
in
sub
jnp
andb
js
and
fistpll
mov
push
inc
xlat
and
cli
pop
cld
xchg
push
pop
mov
mov
aam
or
iret
out
xchg
jb
lods
cli
push
int
iret
jg
mov
and
in
push
mov
inc
inc
lahf
clc
push
aam
ljmp
sub
popa
mov
stc
movsl
aas
leave
sti
xchg
push
mov
cli
add
sbb
mov
push
out
dec
pop
and
js
std
add
and
aaa
lahf
jge
jl
ffreep
push
test
lods
cltd
xchg
test
cmp
adc
cltd
and
fsts
fimull
push
enter
jg
loope
leave
pop
je
mov
cmc
add
push
aaa
sub
aam
dec
in
or
and
scas
mov
dec
mov
xchg
push
repz
xchg
xor
and
fistl
cs
xchg
mov
popa
dec
fisubl
push
lret
adc
jle
inc
push
dec
sub
or
or
jg
or
sbb
dec
fstpt
scas
xchg
or
jae
jmp
push
mov
xor
push
cmp
stos
and
ljmp
pop
sub
or
fstpl
inc
test
aaa
mov
negl
into
inc
add
sub
push
dec
std
aaa
sbb
movsl
test
xchg
pop
lret
fs
sahf
push
xor
es
add
or
and
aad
cli
mov
jo
es
in
adc
mov
shrl
out
rorl
push
pop
xchg
jl
fimull
inc
into
cmp
jmp
sub
sub
cld
xchg
fmull
jecxz
push
fwait
insl
test
leave
sahf
sbb
mov
push
loope
sarb
and
notl
shl
push
rolb
ret
push
xchg
lahf
jbe
out
sub
xchg
xchg
dec
push
add
push
or
pop
mov
dec
hlt
out
cld
int
mov
or
mov
jae
pop
push
push
adc
jb
xor
inc
mov
and
das
sub
jl
sbb
call
xchg
imull
and
lods
dec
in
xchg
insl
mov
fisubs
cmp
jmp
cmc
add
sub
sbb
sub
test
xorl
aaa
pop
or
add
fld
aad
add
cmp
jne
sbb
and
xchg
shr
xor
dec
mov
xor
cmp
in
insl
ja
rol
les
add
pusha
fstpt
call
mov
repz
cmp
mov
outsb
mov
sarl
mov
mov
mov
sub
imul
sbb
test
cli
inc
jno
ror
arpl
push
insb
icebp
test
mov
out
imul
pop
lods
add
sbb
pop
sti
imull
rolb
dec
out
adc
mov
stos
jp
test
mov
clc
stos
into
cmp
push
pop
icebp
fcmovbe
mov
adc
mov
lahf
not
dec
fstp
fwait
je
or
push
sub
dec
aaa
and
pop
xor
xchg
sbbb
jnp
test
xor
aaa
das
jnp
int
push
clts
arpl
jecxz
mov
pop
sahf
lret
shr
add
pop
mov
add
pop
insb
inc
dec
push
jno
push
jo
add
mov
mov
fs
sbb
inc
mov
test
cmp
iret
fistpl
ja
nop
xor
mov
push
xchg
mov
arpl
push
sub
test
cmc
lock
pop
lods
fisttps
xchg
dec
in
mov
shl
jb
mov
sbb
xchg
sarl
stc
dec
dec
je
aaa
sbb
xor
les
ljmp
mov
dec
push
sub
cwtl
cmp
pop
add
outsb
in
lret
or
repnz
les
icebp
inc
xchg
gs
or
les
std
inc
xchg
inc
cmpsl
test
cmp
shlb
roll
jp
nop
jns
and
or
mov
in
add
je
ret
orb
pop
cmp
dec
and
dec
fsubl
jae
sbb
sub
adc
repz
inc
shrb
jne
mov
mov
or
and
pusha
pop
add
into
insb
stc
inc
push
outsl
mov
and
add
add
lods
enter
xor
test
lret
aas
or
sarb
arpl
fwait
divl
imul
mov
test
rcrl
mov
add
out
mov
cwtl
cmp
lahf
push
sbb
and
adc
or
fistpl
add
inc
imul
add
test
or
sub
sbb
roll
and
xchg
ljmp
call
ljmp
popa
push
push
dec
jl
iret
xchg
push
gs
sbb
in
add
out
mov
sub
jno
movsl
into
cmc
fmulp
mov
lds
dec
mov
je
mov
fdivrs
ficomps
call
das
add
jl
fmulp
push
into
adc
xor
mov
xor
cltd
sub
dec
xchg
cmpsl
cmp
dec
fcoml
xchg
push
out
xchg
cmp
mov
aas
shr
adc
daa
lds
lods
jo
xchg
xor
mov
pop
loopne
lahf
push
nop
fldcw
cli
cmpsl
cmpsb
xor
repnz
jmp
js
push
mov
and
dec
push
adc
lret
adc
or
mov
lea
push
xor
into
loop
dec
idivb
shl
hlt
push
cmp
xchg
add
outsb
lods
pop
xor
lods
add
pop
loopne
xlat
popa
or
push
lret
add
pop
pushf
call
mov
push
mov
jecxz
push
push
test
test
or
call
jmp
sbb
daa
pop
adc
add
fsubs
adc
adc
sub
xor
mov
insb
dec
xchg
push
xor
inc
jb
aam
xor
call
fbld
fldl
pop
hlt
js
xchg
dec
mov
loopne
add
sbb
sarb
mov
adc
aas
stc
sub
mov
jo
ja
and
push
add
sti
sub
js
mov
adc
mov
lock
jl
idivb
push
ds
std
loope
cld
cltd
push
lods
pop
jo
mov
lret
xor
xor
dec
xchg
js
xor
into
dec
inc
ret
sub
mov
mov
adc
push
mov
cmpsb
adc
aaa
xchg
xchg
enter
insb
and
mov
mov
mov
outsb
jle
divb
jae
xor
jo
pop
aaa
leave
mov
mov
repz
dec
ja
int3
xchg
cmp
testb
jb
sbb
test
ljmp
push
fcomps
aam
adc
ds
jnp
xchg
std
scas
fs
dec
push
mov
mov
subl
cmp
cmp
xorb
lcall
sbb
pushf
js
mov
out
cmc
jno
xor
sbb
jae
lea
jne
or
jmp
sar
loopne
pop
push
leave
jge
mov
rolb
out
arpl
xchg
pop
sbb
test
mov
icebp
into
lcall
or
cmpsl
loop
adc
dec
scas
inc
sbb
icebp
lds
push
jl
loope
and
sbbb
mov
loope
inc
arpl
push
add
repz
out
out
out
cld
push
xchg
sbb
iret
xchg
inc
sbb
mov
mov
les
fidivl
fdivl
xor
es
dec
pop
push
xchg
clc
mov
fiaddl
insb
cmp
inc
mulb
movsb
movsb
dec
test
pop
loopne
outsl
repnz
pushf
push
out
jl
test
js
mov
int3
jecxz
ja
add
rorl
push
pop
inc
aad
add
and
xchg
lahf
dec
xlat
jo
adc
fnstenv
push
mul
popl
clc
and
loop
cmpb
lods
arpl
cltd
sbb
pop
arpl
loope
push
orl
cmp
xchg
stos
mov
pandn
mov
xchg
movsl
cmpsl
cli
imul
pop
xlat
bound
sub
cmp
jl
push
movsl
ss
ja
ficompl
pop
out
scas
movsl
insl
cwtl
xchg
in
and
fadds
mov
xor
icebp
aas
jo
ret
mov
sub
sub
sub
lret
adc
and
sbb
sub
lock
cltd
fdiv
ss
xchg
int3
inc
into
arpl
gs
dec
dec
into
outsb
push
sti
movsb
sbb
adc
xlat
mov
inc
cwtl
xchg
push
lahf
lret
inc
push
nop
sarb
mov
push
and
stos
mov
mov
notl
lods
cmp
movsb
xchg
es
dec
fcmovnu
andl
outsb
fisttpll
push
xlat
repz
lods
ss
xchg
out
xchg
xchg
pop
ss
sbb
xlat
mov
test
aas
ficompl
es
mov
adc
pop
shll
shr
idivb
jne
leave
mov
adc
xor
mov
xlat
leave
dec
iret
rorl
pavgw
imul
mov
lahf
pop
push
mov
inc
dec
add
mov
sub
popf
aas
xor
mov
mov
gs
repnz
push
or
or
out
mov
ss
sub
cltd
cmp
xor
xchg
inc
gs
enter
or
negb
shll
jp
rcll
push
testb
push
and
xchg
push
stos
pop
and
xor
loope
cmp
cmp
fidivrl
mov
or
mov
repnz
sti
scas
push
sbb
cld
aaa
inc
cmpsl
out
outsl
cmp
or
jg
stos
imul
cmpsb
push
dec
jb
in
inc
das
scas
fidivrl
aas
sbb
adc
scas
push
pop
fdivl
shll
lea
inc
mulb
jle
sbb
dec
fsubrp
ds
dec
aam
push
cmp
mov
lahf
mov
mov
lret
imul
dec
inc
xor
cmp
or
ss
in
clc
mov
daa
les
push
push
pop
testb
ror
arpl
mov
pop
mov
jo
mov
stos
mov
jmp
ljmp
fstl
jnp
add
mov
mov
aam
push
mov
aam
lahf
pushf
int3
and
andb
sub
xchg
insb
xor
mov
pop
cmp
and
push
subb
insl
mov
std
mov
or
cld
mov
add
or
and
inc
push
pop
add
pushf
inc
or
rol
jle
and
pextrw
aas
xor
cmp
inc
mov
xchg
sub
pinsrw
pop
cltd
addr16
sbb
or
inc
xlat
mov
std
dec
mov
mov
insl
mov
xchg
mov
mov
insb
mov
pop
ds
pop
movsl
sbb
push
ja
test
outsl
int
mov
movsl
push
sti
and
jb
dec
pop
in
imul
icebp
push
cmovns
ret
push
std
es
inc
out
rcrl
sarl
ss
adc
jno
jb
sahf
push
inc
mov
xor
loop
das
sbb
int
mov
outsl
cmp
cmp
pop
shl
loopne
dec
xchg
cmp
xor
pusha
lea
andb
xchg
sub
mov
mov
insb
inc
mov
dec
stc
jnp
arpl
test
sar
imul
arpl
fwait
aaa
jno
pop
cmc
jbe
movsb
cltd
shr
push
ret
sbb
dec
or
test
jmp
add
movsb
shlb
add
and
shlb
xchg
cmp
mov
or
mov
andb
cmpsb
mov
xor
xchg
mov
and
sbb
or
inc
aaa
and
test
hlt
shlb
jmp
std
xchg
adc
hlt
jbe
idiv
cs
movsb
or
dec
jbe
sahf
dec
outsb
mov
sub
es
mov
bound
loop
sbb
push
loope
xchg
test
ja
cmpsb
rcl
jp
insb
push
nop
mov
clc
sbb
addr16
xor
xchg
xor
fdivrs
mov
jg
scas
popf
and
or
sbb
or
mov
push
mov
add
gs
ret
outsl
lret
push
mov
ljmp
jle
or
or
inc
fiadds
push
dec
lock
mov
lock
sub
add
div
xor
push
clc
out
mov
pop
sub
shl
icebp
push
jecxz
pop
mov
cmpsl
xchg
mov
hlt
xchg
xor
mov
xchg
jo
xorl
sbb
sbb
push
inc
dec
sbb
mov
xor
dec
fimull
loop
movsl
loope
lret
lods
jmp
pop
and
ljmp
out
dec
mov
xchg
adc
movsb
outsb
inc
vcvtss2si
pop
sub
and
push
push
fidivrl
mov
inc
mov
pop
sbb
cltd
push
mov
scas
ret
pop
aam
lret
push
insb
imul
push
stos
add
imul
pop
push
lret
gs
in
ret
imul
pop
stos
movsl
nop
mov
call
sbb
cmp
jp
movsb
scas
sahf
dec
divl
add
rcrb
movsb
mov
mov
xchg
js
inc
in
sbb
mov
pop
repnz
outsl
push
pop
or
jmp
mov
ds
cmp
stc
call
mov
add
adc
pop
ds
cmp
jnp
int
dec
clc
shl
inc
in
cmpsl
adc
mov
add
mov
sub
xlat
cmc
cmp
daa
mov
adc
roll
mov
bound
repnz
mov
jb
hlt
pop
sbb
sub
jno
lret
adc
mov
cmp
shlb
inc
pushf
push
cmpsl
les
cmp
rorl
fisubs
mov
add
adc
loop,pt
jmp
adc
inc
sub
xor
andb
pop
or
cmp
xlat
outsl
mov
adc
popa
hlt
popf
xchg
inc
add
mov
adc
dec
test
rcl
pop
loope
fwait
or
scas
js
xorl
xchg
cmp
aad
add
add
sub
add
popf
mov
mov
jbe
popf
push
inc
loopne
out
in
dec
dec
cmp
and
xchg
cltd
xchg
jns
xor
lahf
scas
pop
push
mov
in
sub
popl
inc
xacquire
mov
and
push
insb
gs
sub
aad
add
pop
bound
jp
mov
jno
pop
inc
jne
imul
out
xor
mov
xchg
cmc
outsl
js
imul
js
cltd
pop
dec
and
xchg
addr16
cmp
stos
mov
enter
adc
pop
sbb
or
sbb
sub
ja
cmp
push
adc
cmpsl
lret
shll
popf
aam
test
stos
add
inc
mov
push
cmc
mov
mov
lods
aam
out
xor
jmp
and
push
aaa
lods
sbb
jge
test
outsl
sti
les
jb
mov
mov
add
inc
jno
lret
dec
sbb
and
ud0
xchg
lea
adc
mov
das
cli
andb
mov
xchg
hlt
mov
jle
cltd
xchg
jp
adc
add
faddl
xchg
add
and
cmc
je
mov
jle
and
pop
sarl
loope
adc
dec
arpl
xchg
or
and
pop
les
mov
jno
xchg
or
inc
stos
les
inc
inc
fidivrs
inc
mov
xchg
mov
in
inc
add
cwtl
xchg
orl
or
fwait
cmpl
xchg
daa
lock
repnz
movsb
mov
cmpsl
add
cmp
cmp
add
pushf
rorb
out
sub
sub
pop
cmp
pushf
ret
pop
fstl
xor
dec
pop
pop
bound
addr16
add
int3
and
insb
out
cwtl
xchg
dec
sbb
shlb
xchg
data16
jge
scas
ret
repz
adc
insb
insl
xorb
push
daa
xchg
fbstp
test
push
movsl
mov
mov
ret
stc
mov
dec
popf
mov
mov
adc
cltd
in
repnz
mov
jecxz
sbb
lcall
test
cmp
push
xchg
sub
cmp
push
dec
fnsave
lret
pop
aas
jne
mov
out
imul
cmp
add
out
cwtl
cmp
out
cmc
adc
fildll
imul
mov
push
adc
mov
pop
sahf
test
jmp
pop
ret
mov
jmp
cmp
or
cmpsb
pop
insb
shll
hlt
vphadduwd
cmp
mov
sti
daa
push
rolb
fwait
push
dec
test
shlb
jge
sbb
jns
jns
fbstp
push
test
xchg
mov
cmp
insl
push
pop
or
movsl
push
inc
cmp
sbb
mov
cmpsl
imul
or
cmp
jns,pn
inc
xchg
push
mov
or
sub
mov
movsb
fs
push
lcall
fidivrl
aaa
pop
scas
jg
pop
shrl
popf
jecxz
fs
mov
leave
jmp
mov
inc
stos
pop
std
push
mov
out
add
cmp
jb
imul
jl
mulb
push
insl
aaa
push
ret
and
push
mov
jnp
inc
mov
popa
xchg
xchg
xchg
jmp
dec
into
cmp
movsb
xor
ja
sub
es
xor
gs
rcr
int3
cmc
js
cli
mov
in
xor
jns
pusha
xor
mov
movsb
mov
fs
outsb
insb
popa
xchg
pmuludq
pop
sahf
sub
push
in
mov
adc
out
int3
cmp
jbe
pop
cmp
dec
adc
mov
hlt
cmp
pusha
add
leave
xchg
inc
stos
test
pop
or
or
lock
or
mov
sbb
insb
sub
add
insl
and
or
test
cmp
add
fstl
pushf
lahf
push
mov
fcmovbe
test
or
mov
jmp
xor
mov
out
enter
pop
shl
adcl
ss
aam
das
mov
pcmpgtd
mov
lods
xchg
mov
cmp
cwtl
aad
test
mov
ds
inc
cltd
call
daa
sbb
xchg
lock
cmp
pop
jne
inc
insb
sahf
les
test
sbb
test
xchg
sub
dec
push
push
push
imul
pop
adc
das
in
aas
in
shlb
push
decb
and
xor
mov
push
jmp
jl
es
test
dec
fdivs
icebp
push
add
jne
or
cli
mov
cmc
loope
or
pop
insb
lcall
cmp
ljmp
pop
add
mov
push
push
lret
xchg
lods
mov
mov
jge
lods
or
outsb
rclb
ljmp
je
in
push
cmpsl
xor
mov
out
and
out
push
pusha
popf
push
mov
mov
fisttpl
mov
or
fwait
lret
inc
jns
jbe
inc
xchg
cmp
and
stos
aas
mov
mov
ret
xchg
mov
mov
imul
dec
jmp
dec
dec
cmpsb
jbe
fs
push
xor
ja
lock
int3
push
and
xor
inc
xchg
mov
in
adc
jne,pt
pusha
jbe
popf
mov
rclb
enter
cmpsb
adc
int3
or
scas
mov
add
mov
lock
dec
stc
mov
jnp
adc
jmp
jmp
xlat
sarb
mov
dec
jns
push
inc
mov
shlb
cwtl
stos
inc
push
adc
jo
das
mov
movsb
inc
jb
repz
lea
lret
xchg
inc
push
push
and
in
add
xor
jbe
cld
icebp
dec
xor
push
add
xchg
dec
pop
stos
pop
dec
arpl
scas
out
stos
icebp
setle
cmp
adc
mov
and
es
xor
addl
daa
push
iret
subl
pusha
adc
push
mov
push
gs
ror
jae
in
xchg
ja
mov
int
jmp
pop
aad
shll
inc
jb
jnp
in
cmp
fmuls
repnz
and
subl
lock
inc
lret
int3
cmpsl
subb
mov
xor
lret
aam
push
jge
mov
in
enter
jl
xchg
rclb
or
mov
and
mov
sahf
push
daa
cmp
add
lock
push
ljmp
into
sub
jmp
push
add
jge
xchg
call
jo
loopne
or
pop
or
xchg
cmp
mov
mov
popf
push
mov
arpl
dec
cli
inc
sub
negb
mov
loopne
add
jmp
sbbl
test
push
dec
cld
ret
push
mov
sub
dec
cltd
cltd
sbb
gs
adc
sub
inc
push
bound
cld
push
mov
ja
daa
push
stc
dec
inc
fwait
adc
inc
inc
and
push
pop
jg
fsubr
sub
fdivs
fnstsw
clc
shrl
ret
pop
incl
ss
leave
jae
mov
xchg
and
sub
sub
sbb
popa
push
or
out
cmpsb
test
push
cmpb
mov
jp
push
cmp
and
stos
jmp
and
mov
lret
sbb
lcall
mov
or
jbe
gs
loop
xchg
sbb
std
xor
loop
test
inc
aad
inc
sbb
sub
out
popa
test
movsb
mov
mov
jle
dec
cmp
or
or
jge
lds
test
or
pop
xchg
movsb
cwtl
xor
arpl
cs
or
cmp
and
stos
rcrb
fbstp
adc
shl
pop
movsb
cli
clc
test
adc
pushf
mov
xchg
cmp
xor
ds
add
cmpsb
out
xor
shlb
imul
sbb
or
xor
popf
adc
jo
adcb
dec
and
sbb
je
sub
repnz
xor
repz
lret
jno
pop
lcall
jno
xchg
iret
and
jb
mov
ret
push
sbb
test
cmpl
push
adc
fcmovnb
add
pop
imul
mov
stos
hlt
sub
movsb
fistl
xchg
adcl
mulb
mov
and
mov
iret
xchg
aaa
out
jae
addl
mov
into
rep
push
decb
lcall
test
imul
adc
xchg
cwtl
fnstcw
lock
xorb
push
push
jno
dec
rcr
repnz
addr16
cli
jb,pt
jp
pop
jl
or
mov
inc
cmp
xchg
loope
cmpb
pop
mov
xlat
leave
lahf
les
lock
push
imul
pop
cmp
stos
fildll
into
jg
sbb
add
aas
push
fwait
dec
push
and
cmp
xor
cld
push
cmpb
loopne
adc
xchg
sbb
pop
adcl
scas
adc
into
lret
jb
aaa
mov
add
sbb
cmp
mov
add
in
push
nop
hlt
int
jns
cwtl
popf
add
stos
fidivrl
sub
icebp
insb
imulb
sub
gs
mov
inc
cmpsb
inc
xor
daa
pop
mov
cwtl
cmp
in
fnstsw
lret
sbb
push
inc
fs
jle
adc
or
scas
mov
mov
sbb
inc
mov
icebp
rclb
imul
mov
ss
iret
mov
cmp
loope
xchg
push
inc
push
insb
popa
mov
mov
jo
loopne
fldt
push
sub
jecxz
push
add
into
call
dec
daa
mov
adc
push
in
mov
out
popf
cltd
lret
pop
push
int3
mov
in
push
mov
sub
cwtl
arpl
mov
push
repz
mov
xchg
shlb
icebp
out
out
push
icebp
imul
adcl
sub
and
sti
mov
sbb
push
es
xlat
cwtl
cltd
jnp
sub
add
cli
mov
push
repnz
mov
pop
rolb
out
fnop
jmp
cmp
push
lods
xor
mov
add
data16
fistpl
sub
outsb
jno
rol
jp
mov
jae
cli
fwait
or
lcall
hlt
insb
sbb
into
jnp
pop
sbb
inc
mov
popa
jno
jge
cld
push
popf
shr
xchg
fs
cmc
or
inc
xorb
inc
jle
aaa
sbb
sbb
mov
repnz
cmp
bound
mov
sub
sub
pop
sub
lods
sbb
and
or
sbb
das
enter
and
rcpps
loopne
std
xchg
jbe
test
shl
adc
pop
add
add
adc
xchg
dec
push
adc
xor
sub
push
gs
aam
ljmp
rol
out
or
ss
ljmp
push
pop
add
xchg
cmp
sahf
xchg
jg
mov
pop
rcll
mov
aas
daa
aad
testl
dec
pop
mov
imul
cmpsl
imul
movsb
rcll
push
or
inc
push
cwtl
add
and
mov
addr16
pop
mov
sahf
mov
xchg
lahf
fstps
outsl
adc
adc
inc
cltd
std
mov
lea
iret
push
jo
push
jle
mov
inc
out
push
rcrl
rorb
pop
xlat
test
in
test
xor
inc
and
bnd
popf
xor
lret
pusha
xchg
je
dec
rorl
xor
push
bound
popa
sbb
pop
cltd
sub
pop
xchg
mov
fadds
or
mull
into
jb
sti
xchg
pop
imul
push
imul
nop
push
lea
pusha
mov
popf
xchg
mov
clc
arpl
vpand
sub
mulb
mov
mov
and
subb
out
mov
push
mov
aaa
adc
das
cltd
ret
ss
jl
popf
test
and
sbb
lock
loopne
sbb
inc
nop
mov
dec
fwait
mov
xor
imul
jg
dec
mov
repnz
aad
outsb
pop
sub
neg
std
mov
pop
mov
inc
jg
add
and
pop
xchg
call
lret
sbb
sbb
sti
aaa
test
mov
in
mov
lret
movsb
xchg
mov
cmpb
shlb
addr16
sub
mov
adc
insb
sbb
lret
sub
adc
loop
xchg
std
imul
push
je
xor
mov
sar
mov
jp
push
addr16
cmp
xchg
mov
ficompl
add
cmp
cmpsl
or
mov
loopne
xchg
lds
pop
sub
into
ja
clc
push
xchg
or
sti
push
adc
add
push
sub
or
mov
push
jae
aad
in
outsb
push
pop
std
xor
mov
jne
cwtl
mov
rorl
lcall
adc
push
popa
mov
nop
lods
jo
xor
and
xor
rcll
leave
pop
xchg
xor
push
out
jne
in
shll
rcrb
data16
pop
push
lds
sbb
aad
inc
mov
mov
mov
cltd
cmp
mov
xlat
nop
pop
inc
iret
xchg
dec
in
cmc
aam
cli
jbe
scas
loopne
sub
sbb
hlt
iret
mov
mov
push
dec
subl
mov
push
fisttps
inc
mov
lret
es
outsb
nop
jbe
out
int3
mov
or
cmp
mov
imul
mov
pop
subl
imul
movsl
jl
sbb
fnsave
mov
lret
xor
arpl
cli
pop
dec
cld
cwtl
or
out
sbb
aaa
addr16
jge
sbb
sbb
and
adc
lahf
test
dec
push
add
xchg
jne
ljmp
add
and
xor
gs
cwtl
pop
repz
mov
dec
inc
pop
jl
mov
and
test
pop
loope
cmp
xchg
jae
lods
outsl
mov
sbb
sbb
and
adc
fsts
adc
bound
pusha
pop
sti
push
popa
push
push
ja
shll
push
add
push
test
cmpsb
mov
out
daa
and
jg
clc
or
cmc
out
imulb
xchg
or
int3
adc
dec
test
fwait
clc
iret
jno
inc
test
push
jp
dec
shl
stos
pop
adc
xchg
popl
jp
fmuls
lds
lea
das
jle
xchg
mov
cmc
xchg
push
inc
fnstsw
inc
cs
outsb
sarb
fiadds
ljmp
sbb
cltd
dec
addb
ret
sbbb
sub
jb
mov
in
sbb
and
daa
dec
inc
cmpsb
repnz
call
jmp
aaa
data16
pusha
fwait
popa
adc
movsb
add
ss
adc
les
pushf
fs
and
mov
xchg
sub
sub
pop
dec
cli
cmp
xor
mov
negb
or
add
ja
push
pop
xchg
sbb
das
idivb
ss
dec
jg
mov
mov
pusha
add
out
in
xchg
add
lods
rcl
mov
insb
outsb
dec
or
push
ret
cmpsb
outsb
mov
sbb
push
dec
mov
push
xor
rolb
push
sub
sbb
pop
mov
jne
pop
xor
je
repnz
adc
sbb
xorb
jno
cltd
dec
ret
addr16
pop
mov
sbb
mull
adc
out
xchg
or
cmpsb
movsb
imul
popa
mov
add
addr16
cmp
mov
sub
repnz
xchg
sub
jae
dec
ret
mov
mov
cld
xor
stos
inc
enter
xlat
xor
in
adc
inc
inc
jl
or
das
cmc
scas
mov
mov
insl
sub
push
ljmp
sub
in
xchg
or
fdivrl
adc
fnstenv
push
fs
fidivl
stos
push
pop
sbb
ret
cmpl
jle
orl
jns
cltd
call
push
inc
mov
xchg
nop
and
call
add
cli
add
dec
insb
mov
inc
mov
xor
sbbb
cmp
stos
daa
xor
inc
jp,pt
iret
popf
pop
int
add
sub
mov
sbb
and
sub
or
aaa
pop
push
outsl
cs
mov
das
outsb
push
es
and
mov
incl
pop
sub
call
xor
std
xchg
pop
lock
sbb
and
add
dec
xchg
cwtl
rcrl
cld
nop
mov
xor
fwait
lock
fadds
or
inc
cmp
and
xchg
push
pop
lcall
pop
mov
aam
jno
push
add
adc
xchg
test
call
shrb
cli
ljmp
mov
iret
sahf
and
pusha
insl
dec
xchg
stc
out
pushf
rorb
stos
inc
lahf
and
pop
bnd
add
sub
push
scas
addl
lock
inc
jnp
dec
and
out
cmc
sub
outsl
dec
jo
nop
cmpsl
rcl
test
jge
dec
dec
test
inc
xor
or
push
test
out
jecxz
xchg
mov
xor
add
test
movsl
imulb
cmp
pop
cmc
xchg
adc
movsl
inc
cld
lea
or
pop
outsl
fs
inc
aad
xor
or
mov
gs
dec
in
pop
jno
repz
sub
cmp
movsb
add
or
into
push
imul
int
loope
pop
sbbb
das
sti
pop
flds
xchg
mov
cwtl
and
inc
cld
push
sbb
cwtl
sahf
gs
fwait
push
adc
aaa
push
or
add
leave
add
pop
and
mov
mov
rcll
sbb
inc
fisubrs
sub
aaa
and
or
inc
ja
mov
lods
push
sbb
and
inc
jmp
rcr
add
mov
cld
movsl
popa
add
adc
and
scas
push
sub
cmp
cmp
push
fsubp
loopne
mov
cwtl
cmp
inc
add
add
add
xor
mov
pop
movsl
cmp
inc
xlat
mov
or
jnp
xlat
sub
mov
icebp
out
push
pop
xor
out
or
xchg
mov
js
pop
dec
lods
sub
and
push
inc
ja
jnp
leave
loope
jb
aad
ja
es
aas
std
mov
aad
ja
pusha
loopne
scas
cmp
sub
sub
ds
dec
add
pop
sbb
idivb
xchg
lds
lcall
sar
setbe
sub
imul
sbb
and
mov
cmpsb
enter
out
pop
enter
mov
jecxz
and
xor
xchg
mov
mov
jl
ljmp
out
mov
xchg
jno
pop
mov
xor
aaa
lock
lea
loope
add
push
push
xchg
loope
faddl
and
pop
mov
repnz
fists
and
mov
loopne
jae
cmovo
dec
loopne
jl
cmc
ss
xor
xor
ljmp
mov
dec
fwait
dec
sahf
negb
push
and
xor
sbb
sub
mov
mov
pop
cltd
mov
stos
ss
aas
aam
in
lret
push
lcall
cli
imul
mov
fwait
pop
dec
pop
push
test
fbld
ret
xchg
sbb
push
adc
arpl
ljmp
cmp
out
push
mov
stos
or
adc
xchg
mov
dec
scas
mov
cmp
inc
inc
jmp
int3
mov
push
inc
cmpsl
rcrb
iret
pop
cmp
adc
imul
lods
push
std
mov
gs
jle
and
mov
lods
mov
out
mov
dec
xor
adc
fstl
mov
call
es
cmpsb
sbb
cwtl
inc
push
testl
test
mov
cmpsl
movsl
lods
repnz
and
push
mov
fwait
cs
imul
jl
bnd
fbld
push
mov
sub
and
mov
push
mov
jmp
push
push
inc
ret
lret
pop
aas
xchg
push
or
xchg
or
loop
mov
stos
outsl
into
mov
rorb
fnstcw
inc
mov
and
addr16
in
pushf
pop
addr16
out
jge
xchg
jl
in
dec
dec
xchg
mov
pop
adc
jge
or
dec
sub
outsb
in
and
lds
popf
pop
jge
dec
mov
lock
xchg
js
fdivs
xchg
fucomp
shlw
mov
out
add
xor
jne
cmp
dec
lds
add
dec
fbstp
dec
xchg
lods
div
sbb
mov
repz
mulb
stos
clc
lahf
aam
loopne
sbb
fisubl
mov
dec
inc
fistpl
cmp
mov
mov
ljmp
mov
cs
les
les
lea
push
add
js
or
ficomps
add
lea
push
mov
in
dec
push
cmpsb
jbe
cmp
push
sbbb
mov
subb
fistpl
jb
push
add
repz
jae
xchg
in
rolb
bound
das
sarl
mov
mov
xor
push
dec
das
or
push
rcr
loop
leave
sub
out
add
push
xchg
cmp
dec
xchg
push
push
push
es
or
or
jae
or
dec
push
jne
mov
dec
adc
sbb
cmpsb
enter
and
push
adc
sub
sbb
adcb
lret
add
js
or
xchg
sahf
shl
pop
mov
fstpl
adc
cs
stos
mov
dec
not
dec
pop
int
pop
js
sbb
movsb
insl
aaa
jnp
inc
repz
pop
xor
add
imul
cltd
outsl
out
xchg
lock
pop
movsl
xor
insb
lea
push
test
test
add
mov
cmp
insl
jae
stos
lods
mov
movsb
enter
fcompl
test
out
lahf
inc
add
aad
lods
sub
popa
dec
jno
inc
shll
mov
std
stos
cmp
or
mov
test
mov
jg
lret
xor
pop
pop
or
mov
sbb
in
jb
push
ja
cld
mov
push
push
sbb
inc
mov
les
fsubs
outsb
outsb
add
js
lcall
cmp
dec
icebp
addl
or
or
push
push
xchg
push
jle
mov
lods
cmp
movsl
and
xchg
push
jbe
nop
jl
lea
cltd
and
aam
and
inc
mov
sub
jbe
imul
insl
push
test
jnp
jl
adc
dec
or
pop
inc
mov
xchg
cmp
or
cmp
icebp
and
jnp
sbb
inc
dec
mov
inc
xor
mov
mov
mov
es
cltd
jne
jnp
pop
cmp
sbb
pop
jmp
fwait
in
mov
push
leave
mov
mov
leave
xor
inc
fcompl
cwtl
cmp
xor
mov
lret
xchg
repz
jge
popf
adc
inc
sub
cmp
jne
xchg
add
rcl
dec
pushf
xchg
push
cmp
mov
sbb
adc
hlt
xor
ret
iret
or
mov
aad
test
mov
adc
clc
pusha
andb
loope
jl
cmp
adc
popf
loop
cli
pop
pushf
jmp
push
decl
nop
push
jno
int
out
xor
repnz
in
js
filds
mov
cmpsl
mov
xor
cltd
pop
jle
out
pop
clc
mov
lcall
sti
inc
pop
aaa
jp
dec
cmp
and
push
jno,pt
shrl
mov
fnstsw
leave
mov
dec
addb
outsl
popf
xlat
shll
dec
and
and
call
xchg
xchg
xchg
idivb
divl
and
push
push
stos
adc
loopne
adc
das
jae
push
mov
dec
fidivs
or
shl
fsubl
xchg
rcll
push
adc
icebp
dec
pop
push
outsl
lods
mov
xchg
test
fbld
jb
rcrb
sub
std
mov
pushf
adc
fistps
adc
add
mov
mov
cli
aaa
addr16
mov
jnp
rorb
in
rcr
add
pop
aam
stos
xchg
pushf
roll
ds
mov
mov
pusha
lcall
dec
je
xchg
ja
jns
ror
inc
add
out
mov
das
push
add
xchg
adc
push
sbb
dec
mov
ret
int3
insl
ret
and
xchg
in
out
lahf
and
mov
repz
pop
or
jbe
xor
in
stc
adc
xlat
cmp
push
movl
adc
das
ja
loopne
jle
in
xchg
mov
sbb
popa
lea
dec
and
mov
add
inc
mov
std
pop
dec
aad
adc
push
mov
inc
out
imul
sub
insl
adc
adc
mov
or
fstl
dec
add
leave
or
fstp
pop
stc
adc
jno
pop
sbb
inc
add
pop
sbb
cs
jnp
cmp
sub
sarb
inc
popf
imul
mov
test
sbb
jg
jns
dec
aad
test
pop
xchg
jmp
into
out
out
shlb
testl
mov
mov
out
insb
mov
or
out
or
adc
sub
fdivr
je
jno
out
inc
int3
dec
cmp
decb
lds
cmpsb
xchg
push
cmp
mov
sarl
and
ljmp
insb
ljmp
addb
pushf
mov
sub
les
pop
or
xchg
mov
cmc
es
and
sbb
aad
push
mov
sti
sub
insb
aad
adc
adc
dec
aam
mov
cmp
add
mov
loop
aam
cmpsb
arpl
mov
and
imul
xchg
fnstcw
mov
pusha
loopne
loopne
and
fisubrl
loop
cmp
scas
or
jp
and
adc
jo
imul
cltd
jae
xchg
je
das
dec
daa
mov
jge
xchg
clc
adc
ret
lahf
xor
xor
std
jp
jne
repz
or
sbb
loop
adc
sahf
mov
addr16
pop
insb
outsl
int3
ret
test
test
or
pop
imul
ret
out
roll
out
xchg
out
mov
sbb
inc
push
adc
les
mov
js
xor
outsb
orb
pop
rclb
jns
fbstp
ja
mov
enter
mov
sbb
mov
das
insl
int3
mov
mov
outsl
jl
and
filds
mov
insw
insl
aaa
rorl
in
xchg
and
test
out
xchg
sahf
stc
mov
or
mov
or
repz
pusha
rolb
adc
lcall
xor
lcall
imul
fs
stos
dec
push
dec
xchg
outsl
jp
mov
test
test
fs
jbe
icebp
mov
adc
and
xchg
mov
cmpsb
xchg
pop
xor
xchg
pop
call
jbe
push
add
repnz
pop
mov
inc
lcall
or
sbb
lcall
ret
jmp
dec
jne
push
dec
or
daa
push
jns
leave
int3
imul
addl
sub
int3
jns
loope
ja
xor
out
xchg
jecxz
adc
sti
notb
cwtl
adc
ffree
out
rol
jo
push
adc
mov
sub
dec
cli
mov
clc
xchg
jle
mov
dec
push
xchg
xor
rcll
mov
or
es
lea
scas
push
sahf
xchg
lret
mov
fadd
ss
cpuid
ss
leave
popf
mov
jno
add
fidivl
sub
test
pop
add
cmp
xchg
push
adc
pop
jnp
adc
or
mov
xor
push
pushf
gs
and
sahf
xor
jb
push
jo
xor
jns
dec
pop
les
sub
aas
aaa
pop
mov
push
push
mov
mov
stos
xchg
and
xor
outsb
arpl
dec
jns
fnstenv
adc
xor
dec
mov
jnp
arpl
fldl
mov
sub
fstl
hlt
push
sti
loop
push
adc
mov
mov
lods
dec
std
xor
stos
xor
dec
xorl
lret
adc
ficomps
daa
mov
cmp
adc
dec
add
aaa
aam
lods
lds
dec
or
mov
and
into
mov
lret
sbb
pop
ss
rcll
fnstcw
pop
sub
lcall
rcl
mov
lret
int
stos
inc
jo
push
lahf
data16
push
outsl
push
mov
in
xor
lock
imul
scas
imul
icebp
popa
dec
lods
test
leave
aam
cmc
push
push
outsl
out
jns
jle,pn
ficomps
insl
insl
in
sub
dec
shll
incb
xchg
hlt
jge
push
add
sbb
mov
pop
data16
add
sarl
mov
push
adc
mov
pop
pop
aad
rcl
mov
mov
sub
push
aas
scas
mov
loopne
dec
lea
pop
jp
xchg
xchg
rorl
dec
push
stos
adc
stc
mov
outsl
lcall
push
mov
fidivs
lea
lret
xchg
int3
dec
lds
pop
mov
lods
int
sbb
pop
dec
pop
push
or
xchg
xor
scas
lds
outsb
and
dec
push
faddl
dec
mov
cmpsb
xchg
adcl
rcr
pop
addb
push
sbb
sbb
pushf
ja
pop
mov
jl
fildll
and
outsl
jg
push
lods
rcr
add
scas
sub
lea
scas
andb
jg
or
in
xor
dec
test
ja
rclb
lods
push
stc
jg
leave
lret
mov
mov
sub
xor
dec
test
cmp
popl
movsl
pop
dec
fisubs
push
pop
adc
pop
xor
iret
mov
fiadds
sbb
call
inc
add
sbb
js
xchg
cmp
dec
fcmove
sahf
dec
or
mov
dec
nop
stc
imull
insl
sahf
pop
push
sub
test
scas
enter
jecxz
xor
aaa
pop
jb
adc
cli
ds
in
add
inc
insb
inc
arpl
shll
popf
pushf
xorb
mov
arpl
movsb
push
cmpsl
pop
iret
scas
inc
dec
fisttpl
jge
data16
stos
clc
out
push
fsubs
adc
xchg
and
andl
inc
ret
lret
pushf
mov
xchg
iret
mov
xor
xchg
xchg
or
ja
mov
lret
push
inc
xor
sub
jno
or
incb
adc
cltd
sub
shlb
mov
sahf
mov
shlb
sbb
sbb
xor
fs
inc
pushf
sbb
addb
sub
daa
and
pop
or
outsl
cmp
pop
cmc
xchg
cmp
pusha
repz
push
dec
dec
mov
aaa
mov
in
sub
xchg
sub
inc
dec
adc
jns
dec
enter
xchg
jmp
lcall
mov
sbb
dec
loop
mov
jmp
lret
xor
dec
imul
inc
fisttpll
inc
mov
repnz
jle
push
les
and
loopne
fisubrs
cmp
sbb
inc
jae
and
test
shrb
mov
mov
enter
dec
cmp
and
push
add
fiadds
aaa
ja
sbb
data16
js
lcall
add
add
push
xchg
jmp
pop
repz
sti
lret
fstl
call
out
jge
insb
jne
dec
xchg
jmp
pop
add
nop
cmp
int
sub
sbb
movsb
xor
ficoms
adc
pop
sub
push
xorl
pop
stos
jle
pop
pop
movsl
daa
cld
outsb
popa
sbb
mov
pop
sbb
push
aam
push
and
mov
les
and
subb
adc
push
jle
pop
mov
xor
enter
sub
fsubs
add
mov
cmp
insl
mov
leave
push
push
das
gs
clc
lods
cltd
mov
mov
cmp
jnp
testb
bound
push
in
lods
int
sbb
jnp
xchg
push
push
push
mov
pop
std
push
pop
pop
sbb
ficoml
jb
stos
inc
rcrb
lods
setge
ja
test
push
mov
push
jecxz
inc
cmp
fmuls
and
dec
stos
cmp
push
add
or
sub
stos
mov
push
push
sub
xchg
repnz
popa
push
in
sub
and
or
out
mov
xchg
mov
addr16
loope
loopne
xchg
xchg
das
cmpsb
add
mov
mov
mov
mov
cmp
leave
andl
pop
arpl
popa
push
negl
int
mulb
pop
mov
stos
arpl
pop
imul
nop
xchg
adc
ja
negb
iret
loopne
in
jge
fisttpll
testl
popf
test
icebp
and
fstpt
imul
je
lret
add
sub
mov
cli
add
cli
leave
fyl2xp1
cli
adc
mov
cmc
mov
mov
mov
lea
xchg
loop
adc
mov
xchg
cmp
jo
inc
cmp
lcall
push
in
and
dec
cmpsl
les
scas
sbb
add
dec
inc
sti
add
imull
lea
and
or
mov
ret
mov
adc
cmp
fwait
xchg
inc
inc
es
pushf
jno
sbb
leave
mov
out
dec
shl
inc
lock
subl
xlat
sti
xchg
jno
push
pop
scas
out
adc
test
push
inc
insb
inc
xchg
fcomp
sub
dec
xor
std
jae
popa
and
ja
push
stc
mov
pop
arpl
xchg
xor
mov
adc
or
and
add
xchg
imul
aaa
shrb
outsb
pop
sarb
xchg
fcomip
les
sub
push
jg
aaa
push
mov
xchg
shrl
fwait
mov
sti
in
stc
hlt
out
mov
call
add
test
ret
dec
mov
xchg
popf
lahf
stos
lea
int
dec
mov
mov
fstl
lahf
scas
jb
pop
xchg
pushf
negb
mul
mov
fistl
mov
cmp
aad
cs
out
pop
ret
out
scas
notb
scas
je
pop
jg
xchg
jecxz
insb
xchg
cmpsb
into
sbb
repz
dec
add
inc
pop
ljmpw
mov
sarl
in
jne
test
pop
cmpsl
jns
aas
pop
lods
leave
sub
iret
sub
pop
dec
outsb
sub
pop
mov
cmpsl
out
iret
lock
dec
push
stos
sbb
out
and
ds
fcmovbe
mov
mov
test
ds
add
xor
mov
lods
jecxz
pop
loopne
push
sti
push
int3
pushf
push
and
in
rol
inc
out
out
sti
js
sarl
lds
pop
frstor
rcrb
ljmp
cmp
cmp
pushl
ds
outsb
lds
repnz
pushl
mov
stos
leave
fidivrl
adc
xchg
pop
mov
sbb
pop
out
in
dec
inc
sub
inc
not
fnsave
fimuls
or
inc
dec
bound
int
andl
pop
sbb
jecxz
sub
or
mov
xchg
dec
ret
xlat
push
mov
xor
andb
rclb
jp,pt
sub
adc
jge
cs
adc
and
out
xor
divl
jmp
jo
dec
cmp
clc
add
stc
push
mov
dec
in
cmpsb
mov
mov
mov
popf
mov
mov
dec
int3
mov
adc
bound
int3
jns
push
mov
je
xchg
pop
xchg
mov
xor
mov
or
call
fsubrs
dec
sub
sbb
sub
sbb
negl
mov
and
sbb
adc
jmp
push
mov
jbe
dec
and
sbb
dec
pop
icebp
inc
sub
jg
in
decl
jae
and
mov
es
imul
ret
pop
movsl
or
aas
mov
lds
or
inc
or
lods
pop
dec
mov
pop
loopne
daa
sbb
jl
jno
in
popa
pop
aas
cmc
and
xchg
ds
jl
lea
andb
jnp
or
ret
or
xor
cmp
int
add
cli
lock
hlt
ss
mov
add
xchg
test
jo
lcall
imul
jecxz
mov
je
mov
aam
inc
pop
roll
dec
aam
xchg
adc
xchg
xchg
pushf
jg
pusha
jo
xchg
insl
push
jno
jecxz
and
popa
setne
push
xchg
fisttps
mov
lret
ja
imull
inc
scas
les
mov
xlat
aad
mov
mov
fistps
adc
and
out
pop
push
shlb
inc
test
add
int3
dec
xor
cld
jbe
cmpsl
or
mov
std
orl
mov
jo
inc
add
adc
dec
sbb
inc
and
repnz
fidivs
dec
sub
xchg
pop
mov
jnp
gs
popa
cmp
pop
adc
int
cmp
test
cld
lret
hlt
sub
add
stc
clc
loop
stc
lock
lods
mov
xor
pop
jae
jo
inc
push
subl
cmp
in
ja
xchg
mov
fcmove
add
dec
push
in
jg
inc
add
pop
in
mov
dec
scas
sub
mov
roll
jge
fdivs
mov
fcompl
sbbl
jg
sub
pop
inc
mov
fisubrl
shrl
orl
out
inc
adc
xchg
aaa
cmpsb
dec
popa
jg
pop
xchg
jecxz
jl
cmp
add
sub
jle
and
cld
inc
aad
hlt
sbb
cmpsl
pop
xchg
pop
repnz
pop
mov
hlt
dec
repz
inc
sbb
inc
mov
cmp
pop
rorb
loopne
sub
jae
inc
push
mov
sbb
sub
ljmp
dec
scas
out
inc
dec
fisubrl
mov
add
dec
loopne
adc
and
je
pop
cmp
jl
into
test
push
enter
ss
jo
ret
lret
xlat
inc
cwtl
popf
mov
cmpps
add
pop
adc
out
aas
xchg
ret
sbb
cs
push
cmp
imul
dec
jle
xchg
ficoml
dec
adc
or
rorb
pop
inc
sbb
push
mov
push
aas
xchg
cld
jmp
fadds
je
scas
sbb
mov
pop
aaa
outsl
mov
insb
sti
mov
mov
or
xchg
loop
insb
push
pop
out
pop
into
inc
clc
jo
xor
in
popf
ret
lods
insl
mov
inc
rcrb
sbb
ficoms
cmp
ss
inc
jg
js
rorl
and
add
mov
fwait
repz
jp
mov
lret
mov
stos
sbb
ljmp
movsw
sub
cld
out
insl
sbb
test
jnp
xchg
rclb
push
movsl
popf
mov
mov
dec
in
mov
cmpsl
cwtl
sbb
iret
fmull
outsl
js
mov
enter
jae
gs
call
fadds
dec
ss
xchg
test
jmp
jmp
std
sbb
inc
fucomi
movsb
push
cmc
inc
psubsb
stos
lret
mov
test
and
cmp
in
or
rcll
ficoms
nop
mov
and
test
andl
ds
jae
test
push
scas
stc
xchg
aad
xor
pushf
and
mov
xchg
ret
push
mov
out
jge
bound
aas
nop
data16
xchg
sbb
and
xor
cli
fs
inc
dec
dec
lcall
popf
scas
pop
mov
sti
xor
ss
xchg
xor
jmp
push
jbe
xor
mov
cmp
lcall
jmp
cmc
jae
clc
jae
shrb
ret
into
loop
into
or
ret
mov
int3
or
push
push
mov
sub
icebp
add
leave
es
or
add
cltd
test
ja
xlat
sti
xor
out
push
push
mov
lcall
pop
inc
stos
push
jns
cld
test
xchg
jno
mov
incb
mov
inc
data16
push
sarl
jnp
shlb
mov
mov
ret
jne
dec
stos
jno
into
pusha
rorl
cltd
fadd
leave
jle
pop
movsl
or
das
clc
sub
sbb
loop
sbb
insb
push
and
mov
roll
outsb
call
cli
adc
cmp
ss
xor
loope
mov
les
pop
xor
popl
jp
jecxz
repz
fistpll
adc
stc
adc
and
push
push
cmpsl
insb
stos
popa
repz
or
mov
aad
add
outsl
xchg
pop
movsb
lods
ljmp
add
or
shll
jl
cmp
inc
sub
shll
add
mov
jmp
int
and
into
ds
lret
mov
cmp
mov
fwait
cmp
rcrl
cs
sahf
inc
ret
xchg
xchg
fwait
mull
sbb
cli
jg
add
in
jp
lret
in
xchg
repnz
sbb
cli
mov
lret
or
int
imul
mov
cmpl
sbb
and
push
push
pop
lods
dec
and
xchg
adc
mov
mov
adc
mov
sbb
int
daa
jecxz
jnp
and
lds
pop
sub
popf
add
addr16
lock
xchg
sub
adc
pop
inc
aaa
loope
sub
shll
push
scas
stos
mov
pop
cltd
mov
jae
gs
mov
fidivrs
lds
xchg
xchg
mov
cmpsl
shrb
ds
or
push
push
shll
pop
sahf
lods
insl
sub
or
pop
jb
roll
push
cmpsb
loopne
add
dec
call
pop
test
rol
dec
imul
int
mov
xchg
icebp
loope
iret
xor
inc
dec
enter
jle
push
dec
repnz
cltd
rcll
pop
pop
pop
mov
sub
lcall
out
push
in
enter
xchg
adc
adc
iret
cltd
aad
or
dec
stos
adc
sbb
xor
or
pop
mov
mov
sbb
ss
and
jb
mov
and
mov
imul
in
in
shlb
sbb
xchg
pop
xchg
jl
sub
pop
test
in
test
push
aas
inc
pop
add
jnp
dec
pop
and
pop
loopne
out
fisttpl
inc
adc
add
or
cmp
bound
std
pop
add
push
in
invlpg
sub
test
mov
xor
jecxz
xchg
gs
sub
loop
sbb
out
push
das
cs
mov
fidivs
repnz
repz
sub
mov
pop
pop
icebp
sub
jo
mov
mov
jbe
rcr
ljmp
arpl
sbb
outsb
pop
jge
or
fwait
cwtl
test
sbb
out
sahf
loop
fmul
testl
fdivs
adc
and
lahf
inc
adc
popf
imul
ljmp
in
frstor
lock
lret
loope
mov
dec
icebp
sahf
sub
jae
arpl
insb
daa
mov
ror
and
test
inc
fwait
jmp
loop
cltd
mov
nop
jecxz
push
ljmp
and
xchg
dec
adc
xchg
lret
lds
jb
sti
push
sub
lcall
pop
insb
decb
ret
sbb
test
cmp
cld
imul
push
xorb
or
rolb
add
pop
pushf
mov
fadds
sahf
leave
cltd
in
and
in
cmp
popa
xchg
call
cwtl
test
push
adc
addr16
mov
pop
clc
or
inc
clc
xchg
mov
dec
jmp
mov
xchg
movsl
jb
xchg
ret
lret
arpl
inc
shrb
cmp
lahf
lret
in
fisttpll
into
pop
xor
lea
sub
stc
sti
cmp
xchg
inc
pop
in
jmp
jbe
imul
adc
pop
dec
mov
xor
mov
repnz
movsb
lock
rcrb
and
pop
shll
frstor
or
in
sbb
mov
pushl
pop
cmpsb
or
or
adc
std
stos
cmp
or
cmp
movsl
dec
out
pop
cltd
aam
popa
loopne
pop
loop
scas
lea
xorl
out
push
jp
imul
jp
je
movsl
iret
cs
jge
popa
cwtl
xchg
sbb
jmp
inc
mov
lock
loopne
loop
clc
ficompl
xchg
mov
int
or
aaa
cs
mov
arpl
call
mov
xor
ret
inc
call
lea
xchg
or
or
lret
out
lods
mov
stos
xor
fstl
fs
xchg
and
and
mov
fs
daa
icebp
or
and
adc
leave
or
pop
push
adc
jle
insl
dec
shlb
or
mov
xchg
repz
stos
ror
jle
xchg
jecxz
mov
outsl
arpl
jg
in
inc
mov
xor
fstpt
cmp
mov
fiaddl
clc
xor
sub
sahf
and
lods
fidivrl
add
pop
inc
test
test
xchg
rcl
out
cmp
cmp
leave
call
mov
xchg
outsb
popf
sub
rorb
xchg
mov
push
divb
pushf
cmc
nop
cmc
push
add
shlb
jp
subl
pop
adc
jle
mov
outsl
jmp
mov
enter
jne
xchg
dec
int
bound
cltd
fcmovne
sbb
mov
sub
adc
cmpsb
jbe
xor
mov
xchg
arpl
jmp
insb
aad
dec
mov
dec
jg
sbb
lods
xchg
test
pop
mov
lods
xor
jb
pop
adc
call
fs
xlat
lods
std
push
dec
shlb
push
pop
jb
outsb
subb
pop
test
js
mov
dec
push
xchg
sub
outsl
pop
hlt
scas
scas
cld
push
fidivl
mov
dec
imul
mov
icebp
int3
std
xchg
jnp
pop
pop
daa
push
test
xchg
push
cmpb
divl
adc
push
pop
int3
mov
popa
sbb
cld
in
add
pop
pop
push
in
mov
inc
data16
push
mov
movsl
mov
push
xor
inc
adc
shrl
jecxz
fsts
inc
push
jns
iret
mov
ss
pop
jnp
cs
jno
ss
push
lret
popa
xchg
das
mov
or
add
cmpsl
or
add
dec
cmp
sbbb
adcl
ljmp
dec
inc
inc
test
add
or
xor
pop
lahf
cmp
sbb
ret
aas
mov
sbb
inc
jae
ds
aas
fists
push
jnp
fldl
mov
sub
dec
mov
adc
push
addr16
mov
pushf
js
pop
sti
loopne
in
loopne
fwait
lock
sub
nop
js
lea
push
mov
push
mov
mov
divb
leave
pop
idivl
mov
dec
xor
sub
leave
sbb
adc
movsl
scas
das
dec
cwtl
xchg
xchg
xchg
loop
jno
fistpll
dec
inc
ret
fs
or
aaa
xchg
xchg
sub
or
fimull
aad
sbb
mov
cmp
xchg
imull
push
pop
sbb
mov
push
adc
leave
cmc
jnp
xor
fcom
or
dec
lcall
xor
cmp
sbb
cmc
or
push
movsl
push
push
and
cwtl
testb
push
mov
push
add
movsb
fmul
pusha
push
das
push
sub
lock
dec
xchg
roll
pusha
nop
xor
aas
sub
cmp
testb
popa
fiaddl
pop
push
stos
dec
adc
jnp
mov
push
jae
fdivl
in
pop
mov
lods
pop
pop
push
inc
sbb
cmpsl
leave
xor
cmp
adc
jne
je
push
outsb
jmp
imul
repnz
clc
jle
rolb
add
jae
cmpsl
stc
or
rcll
lcall
fisttpl
pop
sbb
mov
lods
pop
icebp
mov
and
sbb
dec
ret
ror
fbstp
shll
cmp
mov
cmpsl
in
sbb
sahf
mov
ret
sub
add
or
arpl
push
leave
shll
xor
inc
das
test
es
xor
mov
dec
add
iret
add
cmp
cli
adc
mov
mov
or
push
pop
add
jmp
xorb
mov
enter
jne
inc
ja
ftst
imul
int3
push
jo
cmp
add
sub
cmpsb
enter
cmpl
repnz
je
jl
fwait
mov
ljmp
rorl
call
add
jno
test
pop
dec
sahf
push
dec
je
mov
push
cmp
stc
jno
or
mov
ret
push
aad
xchg
sub
lods
cmpsb
aad
jns
cmp
cmc
ljmp
insl
daa
lods
aaa
push
mov
ss
insb
mov
cmpl
pop
mov
lahf
adc
call
aaa
or
je
aad
nop
or
jl
mov
fs
int
or
push
sbb
cmp
push
jb
popa
mov
adc
addl
outsl
jo
jp
cmp
mov
sub
ret
inc
fistps
lods
clc
lock
add
pop
std
repnz
jp
popa
pushf
mov
push
push
xchg
call
sub
cmp
scas
dec
xchg
out
repnz
jns
or
imul
fsubrs
lea
add
je
lea
sbb
movsl
movsb
test
mov
stos
lds
push
fiadds
dec
xchg
pusha
cmp
push
repnz
pop
inc
inc
clc
or
repz
loope
and
fcoml
pop
decb
ret
pop
mov
cltd
adc
aad
loop
inc
sahf
jb
insb
mov
inc
enter
mov
xor
hlt
mov
mov
jp
and
outsl
inc
addr16
adc
dec
aad
mov
pop
push
pop
cmpb
inc
add
stos
dec
mov
adc
mov
lcall
pusha
imul
cmpl
cmp
loop
jnp
jns
imul
repnz
inc
pushf
outsb
stc
loope
xchg
nop
dec
mov
dec
imul
addr16
jg
adc
mov
adc
test
int3
push
pop
xchg
xchg
cld
in
dec
cltd
mov
in
mov
push
cli
sub
sub
mov
outsl
or
jle
in
pop
frndint
lcall
mov
add
sub
and
ss
into
int3
ds
outsb
cli
sub
dec
ljmp
push
ret
pop
sub
shll
ss
loopne
or
movsl
in
fsubrl
cli
lea
stos
daa
shrb
xchg
js
xchg
cmp
incl
add
mov
in
xor
cmpsl
rorl
fcompl
call
call
nop
imul
lods
jns
adc
stc
fnstcw
sub
int3
jmp
cmp
aad
pop
xchg
std
fcompl
add
xor
push
or
xor
cmp
call
sbb
mov
mov
nop
push
dec
mov
sub
mov
pop
pop
and
mov
repz
mov
pop
or
pop
or
stos
stos
pop
rcl
mov
cmp
add
mov
pop
jp
les
sbb
push
arpl
ret
pop
in
cmpb
hlt
dec
mov
jae
call
xlat
add
in
jmp
mov
js
mov
cld
aam
or
cli
cwtl
lret
dec
jno
stc
or
fnstsw
cltd
loopne
mov
loopne
sub
sbb
mov
cs
mov
xor
jo
mov
cmp
cltd
adc
jno
jo
ljmp
insb
gs
mov
inc
leave
lds
sub
int
pop
xchg
addb
inc
lods
cmpsb
xchg
xchg
inc
loopne
cli
into
push
mov
dec
adc
xchg
inc
sub
dec
es
add
int3
int3
aaa
popf
lret
cmp
cmp
fs
insl
fsts
add
out
mov
hlt
ficomps
stc
xchg
aaa
cmp
push
mov
mov
aas
stos
jb
sub
push
adc
jnp
insb
arpl
arpl
je
sub
or
shrb
sub
test
out
mov
add
jmp
imul
sub
mov
adc
mov
mov
sbb
or
sub
dec
xor
pop
cmp
orl
clc
aas
xchg
jne
xchg
dec
jmp
lret
add
mov
aad
cli
out
pop
xchg
push
repz
es
adc
add
in
push
jecxz
or
lea
push
xor
pushf
adc
jo
push
out
addr16
pop
push
pop
add
test
push
mov
xor
fsubr
dec
testl
ds
push
cmpsl
imul
lea
ret
mov
fsubrl
insb
xchg
aad
cmpsl
sbbl
jno
pop
cmc
int
test
je
subb
fimuls
pop
lea
clc
aas
lods
push
add
dec
or
sbb
les
rclb
cmpsl
test
insl
or
xchg
pushf
loope
mov
inc
ljmp
and
int
cmpsl
shl
fcoms
into
dec
arpl
adc
mov
dec
fldl
push
mov
loopne
xchg
test
scas
leave
dec
incb
rorl
jecxz
cmp
push
mov
jno
adc
cmp
mov
mov
inc
add
xchg
push
in
push
cmp
nop
sub
std
mov
jb
call
inc
xchg
mov
xor
mov
mov
ds
test
fs
dec
mov
cmp
iret
adc
or
mov
shrl
cmpsb
cli
repnz
and
fstpl
aaa
aad
pusha
mov
or
and
jle
cmp
mov
ljmp
xor
orl
push
cli
out
or
cs
jmp
lds
and
aam
mov
or
mull
filds
jle
sti
cmc
pop
repnz
and
or
dec
mov
pushf
repnz
mov
sub
cmc
cmpsb
mov
cmpsl
sub
decb
inc
and
adc
subl
fadds
test
std
outsl
clc
out
adc
sti
in
add
cwtl
dec
mov
lock
jecxz
lret
xchg
xchg
lcall
pop
ss
stc
lea
aas
add
fsub
xchg
pop
andl
and
clc
test
add
adc
jle
jno
add
sub
mov
inc
sub
mov
jns
fsub
cmp
imul
dec
sbb
movsb
mov
mov
loope
push
sti
int
xor
mov
mov
mov
arpl
lretw
sub
mov
adc
clc
lahf
int
in
push
test
test
dec
add
xor
pop
mov
sarl
filds
sbb
push
xor
fcomps
daa
cmpb
sarb
rorl
subl
pop
inc
lods
test
inc
in
lds
insb
xlat
and
in
les
stc
repz
shlb
adc
negb
subb
mov
sub
dec
das
pop
stos
pusha
mov
fwait
inc
dec
rol
imull
xchg
sbb
movsb
lods
hlt
xchg
popa
lea
mov
cmpsb
dec
dec
lcall
mov
cmp
cmpsl
inc
xor
test
jae
sub
push
xchg
dec
and
mov
ret
jbe
loop
fildll
cwtl
cmc
mov
sub
frstor
xchg
dec
roll
push
into
mov
sbb
daa
push
mov
ljmp
adc
mov
cmp
jle
enter
iret
sbb
push
mov
pusha
icebp
sub
cmp
dec
push
jmp
pop
inc
push
scas
mov
inc
cmovno
jne
ficomps
fisubs
push
out
js
daa
enter
sbb
jb
insl
cmp
and
inc
shlb
repz
push
pop
mov
jne
lcall
inc
dec
pop
cmp
push
scas
rcrl
aad
xchg
lcall
or
addl
push
cmp
jp
xchg
mov
pop
in
mov
pop
push
pop
out
lret
rcll
cmpsb
and
fwait
mov
pop
inc
mov
inc
out
cmpsl
adc
jge
fwait
pop
jo
mov
sarb
cld
lret
fwait
dec
pusha
movsl
mov
idivb
jmp
mov
cmpsb
mov
inc
popf
bound
cmp
fs
pop
popf
mov
out
scas
bnd
inc
adc
shrb
inc
arpl
inc
ss
dec
jmp
push
test
out
inc
cmp
pop
mov
pushf
xchg
add
lcall
sbb
mov
pop
push
in
stc
lret
mov
sub
adc
inc
leave
movsb
ret
loopne
hlt
lea
or
imul
dec
mov
bound
and
push
leave
nop
xchg
repz
test
jge
push
adc
or
test
stos
cmp
insl
lret
inc
rcll
ret
add
and
sbb
scas
push
ffreep
hlt
xchg
gs
cmp
sarl
lret
xchg
push
jmp
lods
ljmp
hlt
xor
icebp
test
and
lods
jae
jo
stos
insb
inc
add
bsr
dec
jge
sub
out
and
mov
ficomps
push
xor
pop
xchg
movb
adc
lret
adc
or
repz
add
notl
das
adcl
and
scas
iret
cld
fdivs
push
sarb
jle
inc
iret
popf
cmp
aad
mov
jo
out
es
dec
xchg
lahf
cmpsb
mov
and
or
scas
aam
mov
subb
out
push
cmp
js
adc
xchg
arpl
jp
repz
sti
dec
shlb
xchg
push
lds
fstps
cld
bnd
add
cmp
dec
out
mov
rcrb
pusha
xlat
js
inc
scas
mov
xchg
mov
push
cmp
mov
sub
cmp
pop
cmp
jl
add
fiaddl
xor
std
popa
cmc
jnp
adc
in
cmp
inc
push
sub
xor
movsl
ss
and
dec
stos
mov
and
idivb
inc
dec
pop
in
int3
shll
push
nop
mov
lahf
xor
dec
sub
std
je
arpl
jb
loope
lret
das
aad
nop
sbb
stc
pushf
arpl
insl
push
leave
xchg
push
cld
inc
test
fiadds
and
clc
inc
fiaddl
popf
test
cmp
stos
cmp
and
sub
mov
sub
and
add
xor
sbb
dec
leave
les
fcoms
rcrl
loope
or
mov
sub
push
addb
pop
or
ja
mov
aas
add
or
mov
sbb
adc
loope
mov
not
adcb
mov
ljmp
push
cmp
aam
adc
outsl
aas
jecxz
je
jns
pop
lods
fwait
xchg
mov
push
pop
insb
sub
jle
out
inc
sbb
sbb
lret
lret
outsb
sti
mov
pop
aaa
shrb
push
xor
aaa
jle
int
or
jbe
push
aaa
or
xor
rorl
in
loope
lcall
pop
cmp
mov
mov
mov
adc
xor
ficomps
leave
mov
lods
shlb
cmc
dec
cmpsb
lret
cmp
push
and
and
lret
cmp
lds
test
xchg
sub
xchg
sbb
les
je
inc
mov
push
mov
test
inc
es
cmp
sbb
pop
sbbl
leave
adc
ds
jle
adc
in
sarl
xchg
lahf
xchg
fisttpll
shll
sbb
repnz
mov
incl
mov
pop
idivl
or
dec
lcall
ja
dec
roll
shl
mov
jg
pop
mov
pop
sbb
pop
iret
add
and
adc
pop
ret
xlat
sahf
cwtl
fs
pop
ror
mov
or
cmc
dec
daa
scas
scas
sbb
mov
mov
xchg
insb
adc
std
pop
mov
dec
sub
sub
sbb
movsb
aas
inc
jg
pop
test
jp
add
push
or
insl
ljmp
push
scas
mov
sub
dec
out
sti
push
je
scas
xor
or
pop
push
push
fucom
jne
imul
or
mov
dec
push
mov
stc
sub
fisttpll
sub
aas
dec
jnp
test
rorl
and
cli
push
icebp
cmpsl
ds
lods
push
and
fldenv
mov
out
adc
bound
mov
inc
pop
or
stos
xchg
mov
xor
cmp
lret
xorb
mov
push
xchg
push
jle
fcomi
mov
stos
lds
shll
repnz
out
lods
mov
and
out
mov
jns
nop
or
cmc
insl
jmp
repz
xchg
dec
js
das
shll
xor
add
orb
clc
sarl
xchg
lods
mov
inc
push
cmp
jmp
jmp
shll
mov
fwait
es
xchg
inc
mov
push
fimull
shl
aas
and
js
mov
adc
or
and
cmp
mov
aam
test
jp
jnp
ja
dec
add
popf
test
pop
xchg
sbb
test
mov
leave
dec
outsb
xor
cs
xchg
xchg
into
inc
aad
push
mov
inc
lds
sbb
jo
inc
cmp
out
adc
rcr
and
cwtl
add
mov
outsb
push
daa
loop
cwtl
fistpll
and
mov
jb
sbb
fldt
imul
jp
add
add
sbb
push
or
mov
lret
and
lahf
mov
mov
push
test
and
mov
xchg
in
pop
sub
mov
ret
iret
lret
inc
sahf
sar
mov
lcall
shrl
insl
loope
aaa
jg
push
int
and
jg
lret
loopne
bnd
pusha
shlb
ja
movsl
negl
push
jnp
inc
jb
xchg
ret
push
or
push
cmp
add
xchg
sbbl
dec
sbb
mov
mov
lahf
xchg
xchg
push
test
and
xor
outsl
inc
add
lret
movsb
mov
or
push
and
rcrl
jl
stc
pop
xchg
mov
stc
rcrl
and
fmull
enter
ljmp
aas
dec
cwtl
push
fnstcw
xor
fstpl
lret
inc
inc
add
xchg
outsl
add
inc
jne
mov
dec
outsl
in
ds
scas
nop
jne
fdivrl
mov
lock
pop
push
xchg
stos
fwait
sarl
aam
push
repnz
ret
outsb
xor
sub
dec
jae
and
lods
ficomps
jl
xchg
sbb
jbe
jmp
imul
mov
das
fwait
cmp
mov
cmpb
pop
rcll
add
pop
pop
pop
xchg
dec
inc
int
fs
add
xchg
aas
ds
lea
es
movsb
and
mov
mov
xor
ss
test
test
or
push
and
daa
and
jge
sbb
fs
cmp
repnz
mov
adc
aad
shr
fst
sbb
inc
popf
stos
scas
mov
dec
clc
add
mov
sti
clc
iret
and
sbb
test
sbb
xchg
jae
mov
sti
inc
arpl
cld
sbb
scas
pop
icebp
repnz
dec
icebp
shlb
mov
adc
scas
test
mov
mov
mov
imul
mov
inc
jge
leave
fcomi
aam
ret
cmp
fwait
xchg
sub
mov
add
push
add
xlat
outsl
sub
and
sub
mov
mov
xor
add
mov
mov
cmp
fdivs
insl
test
cmc
cmpsb
mov
loope
mov
and
fsub
add
out
mov
int
push
fsubrs
push
imul
stos
ficompl
pop
push
shrl
outsl
movsb
add
mov
push
pusha
das
inc
es
push
icebp
fsubl
sbbl
test
das
lcall
stos
pop
dec
inc
and
fidivrs
pop
push
pop
mov
dec
or
out
cmpsl
shll
out
into
dec
repnz
pop
xor
out
sbbl
sub
sub
add
inc
imul
mull
and
add
iret
bnd
int
push
pop
loope
mov
cli
in
mov
gs
or
cli
outsb
and
int3
pop
adc
mov
cmp
sar
sahf
into
imul
sub
jb
pusha
and
popf
cmp
adc
mov
jge
pop
push
mov
sub
bound
movsb
xchg
cmovae
jno
cli
adc
scas
xchg
jge
jecxz
mov
dec
repnz
cmpsl
js
mov
xor
adc
mov
xor
add
into
imul
push
movl
outsl
je
inc
repz
mov
add
and
cmp
push
ljmp
push
shrb
or
jbe
mov
inc
insl
clc
pop
mov
mov
sub
ja
pop
cli
push
movsb
in
insl
cmp
shrb
push
jbe
test
fdivrl
stos
dec
shlb
fcmovnb
iret
sahf
cmc
add
pop
jp
inc
jnp
sahf
ds
fbstp
or
js
cld
push
mov
jmp
pusha
into
or
mov
jmp
test
orl
cmp
sahf
cli
js
cli
mov
in
and
add
mov
test
dec
push
call
xchg
repz
repnz
nop
jne
inc
sbb
es
cltd
jg
iret
fwait
and
cmp
jns
jle
xadd
or
aad
xchg
movsl
and
testb
repz
push
cmpsl
aas
add
xchg
mov
aam
in
pushf
pop
clc
mov
stos
jno
sbb
push
mov
sahf
imul
icebp
mov
xchg
and
sub
adc
js
repnz
insb
loop
or
inc
push
fsincos
fxch
xlat
shl
popa
cmpsl
add
xchg
add
mov
xorl
aad
mov
push
popf
and
mov
push
fstl
sub
jg
lret
inc
mov
data16
ja
sbb
add
ret
dec
scas
dec
pop
test
add
lea
pop
lock
std
imul
aaa
mov
inc
int
pop
pop
orl
push
mov
pop
cwtl
jne
inc
and
push
mov
xchg
lret
inc
cmp
or
xchg
adc
int
stos
shll
jp
jnp
subl
mov
adc
cmp
arpl
jg
lds
lds
clc
mov
aas
lret
push
call
inc
xor
xor
in
popa
mov
leave
jmp
gs
or
push
add
out
or
push
lcall
leave
dec
dec
sub
mov
dec
aam
cli
pop
pop
pop
rorl
addb
movsl
leave
mov
cltd
cs
or
ficoml
ljmp
fstp
fucomip
pop
jg
mov
fs
jge
clts
js
nop
jbe
and
cld
adc
xor
movsl
in
push
add
push
sarl
lret
mov
outsl
loope
xor
sbb
mov
cld
mov
lods
sbb
jl
rolb
mov
bound
inc
sarb
mov
pop
ss
lods
sub
repz
outsb
loop
cmpsb
pop
dec
lods
add
push
pop
cmp
cwtl
test
mov
xor
sub
jmp
pop
aad
int3
or
lcall
mov
pop
mov
pop
pop
int
lock
dec
fucomp
mov
or
addr16
popa
sbb
ljmp
clc
push
pop
jb
xor
gs
dec
sub
jle
ud1
fidivs
push
addr16
cmc
icebp
movsl
out
fdivrs
or
aas
inc
jge
push
cmp
push
mov
aam
lea
gs
aam
pusha
test
push
adcb
aas
inc
aam
pop
jge
push
xchg
nop
pop
fcompl
push
lds
ficoml
push
mov
jge
jns
or
mov
lret
and
jg
subb
fistl
ss
cmp
mov
pop
cmp
adc
mov
fisubs
insb
rorl
add
or
jge
add
push
pushl
fs
shll
arpl
es
adc
clc
out
mov
mov
inc
adc
xor
mov
and
ficoms
sarl
scas
jnp
pop
adc
pop
in
adcb
xchg
in
mov
inc
out
xor
mov
pop
pop
mov
push
or
push
clc
leave
out
dec
or
inc
neg
gs
push
jb
mov
icebp
pop
std
ret
dec
cli
add
in
adcl
mov
dec
mov
scas
push
jl
inc
cmp
in
out
ljmp
pop
es
into
je
je
ds
pushf
clc
movb
std
ss
stos
aas
fwait
test
popf
je
test
push
add
movsb
sbb
dec
int3
imul
push
fdivrl
cli
das
mov
xchg
and
xor
shlb
in
push
mov
in
xlat
jnp
aaa
hlt
mov
push
inc
dec
mov
cmp
pushf
fwait
in
das
sub
sti
hlt
nop
jg
fisubrl
popa
fwait
pop
pop
ret
outsl
and
and
repz
in
frstor
add
jmp
popf
inc
lret
xchg
push
mov
cmpsb
adc
xchg
mov
add
out
add
gs
push
push
mov
jb
cwtl
outsl
popf
jg
sahf
add
xchg
pop
adc
adc
adc
std
sub
sti
xchg
mov
popa
lock
aaa
push
icebp
out
pusha
pop
arpl
sti
std
adcb
shrb
and
sbb
sbb
out
jp
xor
pop
mov
push
pop
mov
lock
cs
xor
pop
jle
mov
imul
xor
mov
mov
daa
sbb
mov
fimuls
pop
in
push
outsl
test
loop
arpl
add
mov
adc
xor
test
stos
vpcmpgtd
mov
jno
aaa
xchg
sub
pop
movsb
inc
sub
pushf
mov
pop
xchg
xchg
mov
and
out
shll
pop
dec
orb
ss
cmp
es
dec
out
pop
lods
xchg
push
std
jnp
xor
fdivl
mov
jmp
jno
add
sbb
pop
data16
sub
xorb
mov
movsb
lock
enter
fld
imul
push
add
mov
aas
imul
jne
rorb
jae
push
inc
and
and
mov
dec
sub
cltd
arpl
rcrb
add
scas
mov
gs
xchg
sub
and
and
movsb
jmp
push
adc
lds
test
mov
shlb
pop
test
or
sub
dec
adc
fs
and
xor
push
xor
mov
pusha
aad
ffree
xchg
xchg
push
repz
icebp
faddl
sbb
mov
pusha
data16
mov
add
inc
pop
fldt
pop
clc
push
shl
sbb
dec
push
add
inc
pop
aaa
shl
adc
je
sbbb
push
out
jno
addr16
inc
insb
out
aaa
pop
sub
pop
mov
mov
add
mov
dec
pushf
mov
mov
dec
mov
scas
xchg
inc
lock
and
jno
fcmovu
cmp
ja
addr16
aaa
and
cmc
jb
pop
add
rol
stc
popf
jmp
push
dec
lcall
add
or
movsl
dec
xchg
dec
fisttpll
sbb
dec
sub
mov
mov
xor
iret
inc
pop
in
add
daa
dec
fisttps
adc
sub
jl
add
das
insl
pop
js
or
lds
xchg
sbb
sbb
jmp
dec
cmpsl
add
mov
pop
stos
adc
dec
or
je
and
and
es
mov
push
add
loopne
cmp
or
xor
xor
cld
lods
lcall
dec
pop
mov
inc
jp
out
or
cmp
inc
or
aas
mov
in
fiadds
mov
shl
dec
xchg
xchg
sbb
pop
pop
pop
adc
pop
ja
add
jge
mov
movl
push
jecxz
mov
or
sbb
out
lcall
addr16
out
sbb
inc
les
mov
insb
cwtl
shlb
ds
sbb
pop
fadds
cmp
mov
js
aas
mov
iret
mov
rcr
mov
test
cmovp
sarb
aam
test
roll
mov
out
scas
int
sub
pop
das
pop
add
in
sbb
orl
cs
cmp
stos
push
and
js
xchg
xor
inc
lods
add
imul
fs
pop
roll
jno
sarb
pop
sbbb
loopne
les
adc
int3
push
leave
notl
gs
sbb
push
pop
lds
loop
into
dec
xor
add
in
stc
pop
aad
pop
inc
jb
dec
dec
shll
pop
test
cmp
cmp
fnstsw
mov
sub
pushf
cs
add
push
ds
pop
adc
xor
jle
add
lods
mov
add
pop
mov
and
pop
lock
cmpb
es
add
jbe
and
cli
inc
daa
testb
popa
cmpsl
test
lcall
xor
scas
push
stc
dec
xchg
cmp
lret
xor
push
ror
adc
lret
int3
mov
sbb
mov
lds
dec
push
push
inc
je
xor
stos
pushf
lods
pop
inc
mov
daa
aaa
jb
cwtl
pop
pop
fsubrs
shrl
inc
outsl
inc
clc
mov
out
jl
dec
aaa
pushf
mov
out
arpl
daa
or
mov
inc
adc
mov
xor
es
mov
push
jmp
push
mov
cmpsb
mov
mov
jbe
add
test
sar
pop
adc
cwtl
popa
out
add
and
insb
pop
dec
les
jne
imul
mov
out
push
xlat
in
popa
jge
loopne
and
dec
ret
lds
add
repz
pushf
leave
scas
push
push
or
mov
subb
stos
mov
out
loope
iret
push
cmp
push
addr16
aas
xorl
mov
mov
xchg
push
lret
or
sbb
mov
mov
leave
pusha
hlt
sub
mov
dec
imul
adc
sbb
xchg
inc
gs
push
add
popa
sbb
push
pop
test
iret
push
mov
or
jge
arpl
push
ret
outsl
in
pop
icebp
push
push
push
lahf
imul
orb
xor
pop
pop
mov
test
push
dec
outsb
lods
fs
jg
shll
pop
xor
add
ljmp
lock
add
xor
mov
sbb
ss
nop
adc
jle
inc
jae
fidivs
popa
jecxz
outsb
cmpsl
push
in
andb
rolb
push
mov
shlb
outsb
or
cmp
sbb
dec
lcall
outsl
rcrl
cmp
sbb
pop
scas
mov
shl
xor
adc
jae
call
sarb
sti
aas
js
push
outsl
adc
lahf
imul
jmp
xor
imul
int3
jnp
push
dec
adc
sbb
cmp
jmp
push
loopne
out
cwtl
bound
or
je
xchg
aad
jns
push
outsl
sbb
mov
mov
xchg
in
inc
into
or
repz
mov
insl
inc
out
in
ja,pt
scas
push
add
pop
js
pop
xor
xorl
dec
pop
sbb
ljmp
movsl
or
sub
or
ret
popf
push
xchg
rcr
into
push
pop
int3
ljmp
cmp
push
nop
ss
push
pop
xor
cmp
jae
aaa
mov
sbb
je
and
xchg
mov
aad
adc
jg
and
scas
pop
sub
push
sbb
dec
cs
xchg
mov
xchg
jo
add
push
ljmp
aam
xchg
sub
ljmp
iret
or
and
std
xor
dec
push
rolb
adc
xor
fmuls
cltd
add
adc
inc
test
dec
jmp
add
imul
xchg
cmp
xlat
cmpsb
shlb
push
out
or
jmp
clc
stos
out
lock
pop
negl
push
iret
push
mov
movsl
cmp
std
mov
outsb
mov
lcall
loope
lahf
dec
icebp
adcl
jl
jno
sti
cwtl
gs
stc
sbb
mov
incb
lcall
inc
adc
sti
aas
jae
imul
testl
mov
fsts
sbb
sbb
sub
and
pop
mov
aam
mov
xchg
pop
push
clc
or
clc
sbb
lcall
push
push
daa
int3
jnp
adc
pop
push
insb
mov
loop
or
das
dec
stos
mov
cmp
mov
mov
xchg
xchg
outsb
je
or
jb
xchg
sbb
xchg
mov
push
jp
dec
cltd
mov
insl
les
shlb
mov
mov
lock
xchg
or
lret
add
fldt
mov
lock
ds
inc
je
faddl
pop
cwtl
adc
stc
fwait
lret
ret
dec
mov
inc
loopne
cmpsl
mov
dec
in
jp
mov
push
std
cld
xchg
inc
inc
mov
cld
push
push
adc
enter
adc
xor
stc
cmc
dec
icebp
push
and
push
push
jo
mov
leave
mov
cmp
clc
dec
fidivs
call
fsts
lds
add
ljmp
adc
xorb
daa
sti
push
fisubs
outsl
mov
xchg
stos
subl
mov
bound
cs
jl
adc
mov
and
or
in
or
bound
outsb
rcr
dec
in
mov
dec
mov
xor
lock
and
cmp
and
sbb
rcrb
je
jns
enter
addb
xchg
inc
jne
push
fwait
dec
xor
pusha
out
test
dec
jecxz
xor
or
sub
push
or
mov
sub
inc
cmp
push
mov
js
sbb
pop
or
cmc
leave
add
and
dec
stc
stos
js
aam
inc
fcmovnb
sub
mov
inc
daa
sti
jle
or
mov
dec
mov
js
scas
sub
icebp
mov
sbb
jne
dec
xchg
xor
add
jge
sbb
add
mov
push
sti
adc
jno
pop
cwtl
dec
fdivl
inc
sbb
cmp
ljmp
pop
pop
xor
cmp
mov
inc
fbstp
mov
cmp
fcmovb
in
and
xchg
push
pushf
pop
dec
inc
xlat
outsb
mov
ret
push
cmpsl
stos
mov
mov
mov
ljmp
push
pop
orb
inc
mov
pop
xchg
push
xor
push
lahf
iret
fcomps
or
and
mov
icebp
data16
lahf
int3
mov
pop
leave
xor
js
repz
ret
pop
jmp
mov
shrl
xchg
push
imul
ds
adcl
scas
and
mov
imul
cmpsl
jle
add
push
jl
scas
cmpsl
sub
cs
mov
lds
addl
push
sub
jo
mov
or
cmp
inc
sbb
pop
or
mov
push
mov
ficompl
mov
jp
xor
test
stc
ds
and
lahf
adcl
jge
rclb
popf
orb
fistps
stc
push
mov
adc
mov
cmp
cmp
jns
fcoml
fistps
xor
in
loope
mov
push
dec
inc
sbb
mov
mov
lock
cmp
cmpsl
movb
scas
mov
pop
mov
fdivrl
jne
sub
sbb
sub
aam
sub
push
sarl
shl
sub
cs
mov
inc
mov
push
dec
sub
push
lret
or
pop
and
stos
cmpsb
xor
minps
aas
adc
mov
into
mov
dec
xchg
xlat
sub
sbb
push
adc
mov
popa
mov
out
loopne
mov
cli
inc
sub
cmpsb
movsb
mov
xlat
adc
movsb
inc
or
xor
push
xchg
loope
jp
mov
aam
fistl
in
or
call
inc
fmul
mov
call
icebp
out
addr16
sub
xchg
loop
and
adc
popa
aam
jg
or
push
inc
dec
sub
xchg
jo
leave
sbb
jo
jmp
rcrl
in
sbbb
fimull
mov
push
sbb
add
repz
add
stc
lahf
pushl
je
aam
fdivs
pop
pusha
adc
fwait
mov
iret
ljmp
mov
xlat
mov
movsb
jle
aas
test
addr16
inc
xchg
and
jae
push
aaa
outsl
fisubl
incb
fdivl
in
mov
jle
roll
movsl
lea
mov
divb
mov
add
lds
cltd
add
xchg
ss
xlat
cli
dec
xchg
out
dec
adc
jo
mov
and
sub
in
fisubrl
dec
aas
clc
inc
jmp
adc
push
cmp
int3
adc
xchg
push
mov
mov
lea
stos
int
lods
jecxz
push
inc
jmp
aad
add
popf
pop
lock
mov
jecxz,pn
inc
xor
mov
f2xm1
xchg
clc
push
mov
inc
lret
aam
in
push
pop
scas
mov
xor
sub
xchg
cmp
inc
iret
and
jns
cmp
xchg
mov
in
decl
scas
rcrl
push
or
push
fldt
and
movsl
lods
dec
movsl
lcall
adc
xchg
xchg
jb
pop
inc
lods
test
push
add
icebp
std
inc
in
xor
push
xchg
movq
add
xor
add
mov
rcrb
outsb
nop
push
or
push
and
es
cmpsb
stos
fstpl
cmc
adc
in
jle
push
ds
push
add
test
push
dec
mov
out
add
loop
test
rep
aas
scas
arpl
dec
add
fmul
outsl
lock
dec
mov
cmp
xor
prefetch
jge
sbb
and
cmpsl
aas
xor
aas
xlat
jg
stos
enter
pop
inc
and
push
imul
out
mov
inc
cs
repz
inc
inc
mov
aad
fisubrl
xchg
add
iret
aaa
push
repz
jmp
mov
xlat
bound
insb
push
fstpt
shr
push
push
stc
jb
jne
stos
pushl
out
sbb
push
cmc
cmp
push
cmp
bound
push
std
es
ljmp
xor
fdivl
jae
add
imul
nop
xchg
clc
sub
pop
lods
subb
ljmp
sbb
sbb
push
add
xor
mov
pop
filds
adc
daa
jmp
popf
jae
test
sub
push
inc
add
xchg
cmp
xchg
pop
xchg
add
or
xor
or
and
inc
hlt
jp
inc
mov
les
ja
scas
mov
movsb
lock
rorb
add
fadd
add
int3
andb
pop
mov
push
popf
cmp
ja
shl
out
dec
shlb
out
pop
mov
lret
mov
test
lret
aad
xchg
xchg
leave
add
stc
mov
out
mov
mov
xchg
aaa
add
add
stos
inc
sti
sub
mov
out
pushf
jno
sbb
jg
inc
mov
sub
sbb
or
pop
jo
add
mov
repz
dec
mov
mov
pop
clc
out
int
outsl
pop
pop
mov
andl
mov
fs
push
cs
test
std
fadds
repz
fdivrl
aaa
add
imul
add
jno
push
insb
mov
jo
sub
jbe
add
out
jns
xorl
mov
jle
sbb
pop
or
inc
lock
jp
outsl
pop
imul
adc
addr16
fsubl
mov
jno
cmp
dec
mov
dec
repz
mov
pop
xor
out
xor
int3
and
jmp
aaa
pop
lods
mov
add
pusha
pushf
and
std
lcall
xchg
test
sahf
dec
pop
leave
scas
aas
mov
data16
sti
arpl
jb
les
es
int3
inc
idiv
mov
push
jp
cmp
jp
dec
xor
pop
testb
jne
sub
lds
add
lret
xchg
negb
jb
aam
add
mov
and
out
aaa
adc
mov
xlat
jnp
adc
xchg
xor
lret
xor
adc
jge
js
jne
mov
and
jb
sti
repnz
pushl
jnp
mov
sub
cs
sub
sub
add
push
jae
dec
and
popf
sahf
aaa
push
loope
icebp
addb
hlt
icebp
xlat
int
adc
xchg
mov
roll
outsb
pushf
dec
jp
imul
pop
adc
push
or
adc
jle
js
insl
shll
xchg
test
dec
in
out
mov
add
out
ret
inc
fcomps
sti
cld
ds
cmp
movsb
or
or
imul
lods
xor
xchg
enter
mov
pop
or
icebp
jo
hlt
pop
std
add
mov
mov
xchg
lds
push
cmovs
testb
cmp
adc
aad
xchg
push
adc
pop
lcall
popf
xor
lds
enter
xchg
ret
xor
adc
mov
lds
sbb
movsb
adc
and
mov
ds
mov
imul
mov
adcb
shrb
push
popf
push
inc
adcb
sbb
repz
inc
addr16
leave
ds
stc
repnz
or
push
add
push
ja
inc
out
pop
mov
jecxz
clc
xor
inc
sbb
adc
inc
mov
mov
xchg
stc
stos
arpl
in
lcall
aas
mov
mov
stos
and
ja
sahf
int3
pop
incl
and
shlb
out
add
push
aas
js
mov
inc
out
mov
jge
ds
push
fnstsw
es
mov
mov
pop
stos
add
cmp
inc
das
mov
xor
fwait
lret
xchg
loopne
inc
shlb
jns
pop
xor
xlat
enter
and
shll
fs
cwtl
add
jns
call
pop
push
sbb
scas
rorl
inc
push
pop
mov
in
mov
push
add
pop
dec
or
add
dec
imul
nop
out
fwait
inc
xor
pop
mov
adc
pop
ljmp
out
nop
outsl
sahf
nop
loope
adc
aaa
mov
and
pop
mov
push
push
add
cwtl
jae
inc
or
in
lock
dec
mov
or
repz
inc
fsubrl
movsl
mov
adc
push
test
cmc
outsb
outsb
ja
repz
jmp
mov
outsb
mov
rclb
sti
xlat
add
push
imul
aad
insl
lcall
jb
ret
dec
scas
insb
imul
sbbl
mull
xor
or
mov
insb
in
jns
les
dec
inc
and
inc
out
call
loop
test
faddl
cmp
sbb
mov
hlt
inc
mov
dec
les
pop
out
call
cmp
and
jmp
push
cmpsl
sub
mov
push
inc
les
cwtl
jge
repz
popf
and
loop
jne
adc
pop
push
test
into
pusha
in
dec
aam
jo
sbb
adc
jl
in
xor
push
xor
add
mov
push
repz
ret
int
outsl
cs
jle
jb
xor
lock
dec
daa
mov
cmpsl
es
mov
push
mov
fadd
inc
cld
test
int3
xchg
insl
repnz
push
orb
sub
jg
push
and
mov
cmp
cmp
xchg
sbbb
sahf
inc
aas
cmp
lods
xchg
inc
mov
outsl
fimull
lock
xchg
push
movq
js
out
dec
mov
leave
jns
and
fistps
lds
lret
xchg
and
cmp
xchg
adcl
ljmp
mov
jp
jns
pop
imul
jle
lret
sub
lea
test
imull
movsb
cmovl
jle
and
mov
adc
iret
lods
test
call
mov
xor
js
adc
inc
push
push
and
idivl
ror
aad
lock
dec
mov
sar
arpl
mov
rorb
popa
aam
scas
imul
inc
push
mov
mov
lock
pop
out
movsl
xor
mov
popf
pop
inc
cltd
inc
lock
enter
mov
lock
mov
sub
lds
out
mov
or
adc
dec
sbb
adc
insb
mov
and
xchg
ss
xchg
lahf
and
insl
cmpsl
int3
int
mov
mov
pop
icebp
mov
jmp
pop
into
iret
fucom
and
sub
pop
sbb
lret
mov
test
sar
push
xchg
mov
inc
mov
and
scas
inc
adc
scas
push
mov
mov
adc
push
fists
push
mov
mov
dec
mov
xchg
aas
cltd
int3
xchg
mull
js
fmull
xchg
fs
and
rcrb
int
or
or
pop
xchg
cmp
jo
adc
movsb
cmp
pop
out
xchg
dec
andl
mov
decb
outsl
stos
mov
jne
lds
mov
cmpsb
insb
pop
mov
or
pop
xchg
add
sub
cmp
sub
outsb
je
mov
jo
fsub
sbb
fmull
lock
pushf
add
xor
test
daa
jg
adc
jp
lock
lea
cld
stos
out
add
pusha
std
into
stos
sbb
or
jl
or
xchg
xor
sbb
sahf
out
jo
cwtl
cmpsl
mov
enter
xchg
ljmp
or
xchg
cmp
aaa
insl
test
mov
loopne
xor
sbb
out
push
loope
les
push
int3
out
in
in
scas
into
push
sbb
mov
mov
sub
icebp
mov
fs
imul
nop
xchg
jae
inc
push
pop
xchg
jle
pop
movsl
sub
add
adc
out
outsb
pop
out
xchg
push
mov
lock
push
jl
mov
push
or
shr
movsb
aam
test
mov
dec
lea
or
leave
shrl
sbb
cwtl
dec
add
mov
in
fiadds
in
mov
xchg
cmpsl
jno
je
push
fidivs
jge
xchg
xor
sbbb
clc
cmc
leave
icebp
shrb
js
xor
mov
les
mov
or
test
pop
sbb
mov
roll
and
clc
inc
ss
and
push
xchg
enter
pop
mov
pop
div
jnp
repnz
mov
adc
inc
stc
xchg
cmp
shr
dec
jno
cmpsb
adc
push
ret
mov
xchg
mov
cmpsb
mov
push
push
push
mov
jns
shll
aas
in
inc
shr
jae
nop
xchg
jno
lds
fists
inc
int
xor
xchg
lahf
repnz
scas
loop,pt
jb
cli
pop
frstor
xor
push
roll
sbb
pop
mov
out
sub
lds
ffreep
icebp
out
inc
dec
lcall
repz
mov
inc
call
cmc
int
mov
ret
push
cwtl
rolb
xor
or
sahf
fdivr
push
enter
xchg
in
adc
das
loop
xor
cmpsb
dec
rcrb
dec
stos
insl
pop
inc
pusha
js
nop
iret
inc
ficompl
jno
addr16
pop
nop
sti
dec
aaa
orl
sub
xor
dec
in
mov
inc
lods
ds
jmp
or
rcr
jle
push
adc
jp
cmp
mov
orl
imul
loopne
mov
notb
lea
cmpsl
jno
cmpsl
push
sub
pop
hlt
mov
lods
sbb
sbb
inc
pop
mov
mov
test
je
fstl
mov
jb
inc
clc
pop
rcrl
call
aam
push
fstp
cmp
enter
daa
clc
mov
cmp
pop
pushl
xchg
xchg
in
mov
mov
xchg
xchg
rcll
outsb
icebp
lret
inc
mov
sub
pop
lock
es
lcall
cli
subb
sbb
pop
ss
or
add
std
cmp
notl
rclb
out
dec
cmp
stos
and
adc
fstps
inc
stc
mov
call
shll
leave
jns
xor
mov
lea
outsl
fnstcw
push
sub
loope
mov
in
mov
lods
xlat
mov
mov
xor
xlat
sti
movsb
cs
lret
push
mov
adc
insb
popa
int
jo
sahf
cmpsl
add
xchg
sahf
pop
xchg
mov
cmp
lea
push
popa
fsts
jp
imul
nop
add
cwtl
aad
ret
xor
xlat
outsb
repz
mov
adc
dec
je
jecxz
loope
mov
add
aas
orb
xor
shlb
and
xor
xor
or
pop
aad
insb
dec
rcr
adc
cmc
in
cwtl
test
aaa
mov
aas
jg
aas
add
add
sbb
push
out
push
sbb
sbb
inc
pop
jns
xor
dec
sub
mov
rcl
xlat
arpl
ss
fwait
imul
lret
fiaddl
jno
push
mov
xor
dec
sub
pushl
xchg
nop
jmp
js
cmp
sbb
pusha
rcrb
xor
push
lcall
inc
aaa
push
xchg
xchg
jnp
lds
inc
jne
adc
mov
add
imul
ficoms
aaa
jle
sbb
stos
adc
xor
ficompl
bound
push
addr16
inc
add
enter
imul
pop
or
cmp
pop
cmpsl
or
mov
or
andb
mov
es
sub
dec
in
imulb
xchg
shll
cli
cwtl
aaa
cmpb
push
mov
lahf
fists
in
dec
xchg
jnp
clc
aaa
adc
push
shl
mov
aas
call
add
jge
ss
mov
fwait
lds
dec
lret
loop
addl
es
pop
jecxz
idivb
lds
jle
add
ficompl
dec
hlt
cltd
pusha
xchg
cmpsb
add
lods
ss
popa
aas
filds
sbb
subl
and
push
adc
add
ja
out
out
scas
push
out
sbb
repz
shl
jmp
sub
sub
or
dec
mov
inc
lcall
enter
ret
test
cmp
leave
mov
mov
lahf
or
xchg
or
sarl
sarb
aas
adc
xor
sbb
add
jge
cmp
out
das
add
mov
pop
je
mov
push
mov
xor
scas
xor
test
loop
jae
sub
insb
cmp
jl
popa
dec
cmpsl
sbb
outsl
push
mov
pop
adc
outsb
inc
or
ds
and
jb
sub
mov
mov
popa
push
adcb
imul
sar
repz
dec
jno
mov
pop
in
imul
int
fnstenv
inc
dec
xlat
xor
scas
cli
imul
test
xchg
subl
out
cmp
cmc
addb
bsr
dec
lea
int3
dec
jle
pop
pop
sub
and
lds
ret
pop
mov
dec
loope
mov
inc
jb
and
or
outsl
jecxz
push
xor
jns
cltd
xor
add
divb
add
and
loope
push
scas
fst
pop
call
jmp
sbb
jmp
andl
jne
adc
nop
and
jle
aad
out
push
jl
mov
push
mov
inc
mov
xlat
xchg
cltd
jnp
and
jl
xor
cmp
out
outsl
sahf
out
push
movb
mulb
in
push
or
mov
cld
ljmp
daa
daa
dec
xor
sbb
arpl
mov
cmc
test
roll
into
lahf
and
in
pop
xchg
jle
movsl
in
addr16
adcl
mov
dec
test
insl
std
daa
cmp
pop
aaa
push
sbbb
inc
icebp
dec
xchg
jae
xchg
push
enter
cmc
pop
fstpt
or
aam
lcall
or
dec
rolb
cmp
cmp
rclb
gs
push
cmpsb
adc
push
pop
xchg
test
dec
jp
and
and
ja
stc
or
cmc
jns
pusha
sub
dec
xchg
lods
enter
adc
inc
sar
push
mov
push
add
clc
or
fcmovu
and
xchg
ds
jge
push
scas
fld
mov
leave
fnsave
cmc
xchg
inc
rol
sub
mov
pop
cmp
xchg
jp
dec
addr16
dec
inc
in
add
or
test
pop
mov
rorb
inc
cmc
negl
ret
sbb
cmp
dec
mov
sub
mov
adc
adc
jge
sbb
mov
adc
or
iret
ds
imulb
insb
je
pop
adc
pop
pop
insb
mov
cmc
das
mov
and
cmc
mov
dec
and
pop
pop
or
mov
rorl
inc
aas
pop
adc
fldl2t
lea
minps
adc
cltd
mov
cmpsl
addb
pop
cmpsb
fs
mov
xchg
xor
cmpsb
nop
mov
sbb
xchg
scas
roll
std
pop
dec
shll
adc
in
arpl
cmp
jns
out
mov
movsb
mov
movsl
mov
ret
mov
xchg
dec
add
popa
mov
test
out
cmc
in
inc
mov
pop
push
cmc
push
adc
inc
sysret
add
in
push
data16
cmp
cmp
rcrb
push
pop
dec
hlt
xchg
lahf
fcmovne
jge
daa
rcrl
dec
mov
push
cmpsb
pop
adc
shll
cmp
lods
shll
mov
test
stos
jns
or
ret
ds
icebp
jb
push
loop
and
push
inc
inc
imul
sbb
push
jb
mov
jbe
sbb
rcrl
daa
xchg
fs
push
mov
xor
jmp
lods
dec
push
out
mov
adc
push
pushf
pop
jmp
push
mov
sub
sbb
inc
mov
pop
inc
arpl
push
outsl
les
dec
mov
lods
ljmp
add
inc
stos
jmp
cli
fimuls
test
cs
sub
fstl
sbb
xor
xchg
stos
mov
lret
stos
sbb
push
jbe
ss
xchg
xor
inc
and
mov
hlt
pop
push
push
xor
xchg
dec
mov
xchg
push
adc
loop
dec
cmc
loope
arpl
pop
repnz
fists
adc
sub
in
mov
xlat
sbb
je
jno
sub
sbb
or
iret
push
gs
loop
fdivs
lock
pop
jo
or
pop
lret
adc
outsb
inc
jbe
mov
jg
loope
push
mov
insb
je
mov
push
push
inc
loope
stc
adc
stos
rcrb
xor
xor
lods
sub
stc
push
pop
mov
pop
fidivrl
and
xchg
int3
pop
cli
sub
xchg
aas
loop
addr16
cli
es
insb
or
cmc
jns
fadds
cmc
outsl
add
sub
add
outsl
or
or
push
jnp
dec
and
xlat
jb
dec
cli
movsb
pop
cmp
aaa
mov
inc
sbb
imul
sub
or
cmp
test
pop
in
mov
pushw
adc
int3
push
test
mov
mov
les
out
sbb
xorl
push
cwtl
or
and
inc
mov
mov
push
rol
sub
arpl
sahf
mov
push
sbb
sbb
insb
push
dec
pop
aas
mov
and
in
sti
les
stos
xor
sub
outsb
pop
pop
out
push
test
mov
adc
ds
pop
push
inc
pusha
sub
sub
mov
sub
cmp
ficompl
sbb
mov
popf
or
scas
jb
cmova
fs
inc
xor
fcomp
or
fildll
ja
jmp
sbb
in
pop
sti
popf
xchg
xor
jle
cli
jo
sub
xor
xchg
lahf
imul
pop
pop
std
mov
adc
and
imul
lcall
sar
push
adc
testl
xchg
cmp
xchg
loopne
add
sub
mov
mov
rep
adc
xor
xlat
mov
add
dec
cli
dec
mov
cmpb
cmp
jp
cltd
add
sbb
or
jnp
sub
clc
sbb
mov
cmp
pop
sbb
les
test
ljmp
fldl
cmp
cmovl
jle
sbb
sete
or
daa
or
gs
scas
adc
cmc
jp
insl
push
add
loop
mov
jbe
cmp
mov
mov
cmp
dec
xchg
xor
dec
cmp
mov
fisttps
mov
cmp
add
jne
jl
and
xchg
pusha
mov
dec
push
insl
roll
cli
shll
in
xor
mov
mov
jae
testb
ds
or
in
adc
rcr
aam
addl
jb
pop
inc
rorl
mov
mov
mov
or
or
test
clc
pop
data16
scas
iret
inc
xor
jne
mov
fisttps
add
adc
loop,pn
or
popf
pop
fisubl
inc
jp
lret
test
out
jno
scas
mov
mov
popa
push
adc
out
jno
das
mov
push
lds
jmp
cmp
push
push
mov
mov
add
mov
ret
ret
icebp
cmpsb
fstpl
sub
inc
dec
mov
push
or
aam
sbb
jne
xlat
les
lods
pop
xchg
out
sti
jl
pusha
into
cmp
popa
add
incb
push
jecxz
mov
sbb
mov
enter
cltd
fdivrs
push
shr
mov
add
cmpsl
adc
insl
pop
and
jl
jg
dec
test
subb
jmp
ds
xor
incl
push
sub
or
or
icebp
ret
orl
into
inc
push
ds
lods
xchg
push
fs
subb
ljmp
shlb
push
nop
sub
push
cmpl
jne
or
add
outsb
ds
pmullw
icebp
arpl
mov
cwtl
fstpl
sub
sahf
scas
jmp
adc
out
imul
dec
orb
stc
inc
sub
popf
mov
xchg
loop
divb
mov
dec
push
das
insb
rclb
fsubs
test
push
mov
aas
adc
mov
movsl
call
mov
adc
pop
xchg
dec
mov
pop
in
ds
mov
mov
and
pop
test
cmp
or
and
or
inc
xor
xchg
les
or
jb
xchg
mov
jl
push
cmpsl
scas
leave
popa
push
cltd
inc
mov
ljmp
fcomps
orl
xor
fsts
imul
xchg
cltd
push
adcb
testl
inc
sub
icebp
ds
and
jl
add
out
aad
enter
hlt
rol
jbe
daa
mov
jns
les
ror
add
or
mov
ljmp
mov
lods
int3
mov
sub
out
aas
push
sub
mov
orb
in
sub
call
and
jne
push
loopne
inc
fcoml
das
xchg
daa
mov
fwait
adc
pop
dec
mov
ljmp
stos
leave
aaa
push
mov
sub
xchg
add
ret
mov
inc
sbb
ds
stos
rol
shll
test
pop
out
push
cwtl
or
fisubrs
and
daa
mov
or
pushf
idivb
popf
mov
shll
pop
int
fsubs
mov
popa
insb
add
pop
xor
popf
push
mov
mov
inc
add
loop
lock
je
ror
aad
xlat
mov
sbbb
and
add
or
stos
adcb
mov
scas
lahf
arpl
add
xlat
out
loope
arpl
add
int
iret
mov
adc
push
scas
test
inc
or
fdivr
sub
in
inc
inc
xchg
mov
shlb
adc
mov
int3
repz
xorl
add
imul
pop
aad
jno
sbb
xchg
incb
lret
lret
in
xorl
jnp
xor
xchg
in
add
cmp
pop
mov
push
daa
jae
ds
mov
pusha
and
aad
cltd
fisttpll
adc
jb
mov
cmp
or
sub
add
rcr
pusha
mov
enter
mov
out
mov
sub
xor
mov
test
pop
fs
mov
and
popf
aad
jne
or
xlat
push
mov
xchg
mov
loope
out
mov
push
dec
cmpsb
dec
pop
pusha
in
cmpsl
sbb
mov
lahf
dec
sbb
inc
fcompl
or
cmp
loope
shr
cmpsl
aam
lds
sarb
fidivl
lea
loop
xor
popf
push
cld
cld
push
pop
js
cmp
mov
xchg
jmp
inc
mov
inc
fiaddl
or
jge
mov
call
stc
or
les
or
jmp
sub
aas
in
mov
cmp
mov
adc
dec
xchg
push
pop
push
shrb
mov
jg
cmp
mov
daa
mov
movsl
popa
mov
outsb
cmp
add
mov
lahf
add
jns
out
mov
sub
cltd
push
mov
rorb
inc
mov
jne
add
push
test
inc
mov
pop
mov
lods
stc
add
pusha
orl
mov
fnstsw
dec
addr16
insb
enter
fidivs
fwait
add
xchg
arpl
in
dec
cmp
adc
adc
sahf
test
repz
loopne
popa
cmc
xchg
adc
in
movl
mov
sub
xchg
mov
orl
cmp
int3
stc
and
jmp
stos
xlat
and
shll
lds
outsb
pusha
movsl
shll
repz
lock
pop
cmpsb
fisubrl
outsb
lods
jge
in
mov
loopne
inc
adc
dec
out
mov
mov
xor
and
sbb
scas
stos
dec
mov
scas
mov
lds
lret
adc
or
mov
pop
mov
out
inc
loop
mov
cmp
cmp
das
add
xor
push
sti
jmp
fnsave
clc
scas
xchg
mov
and
xchg
jecxz
repnz
addr16
out
mov
xor
popf
xlat
je
push
stc
push
cmc
movsl
frstor
loopne
cmpsb
add
mov
into
shll
mov
mov
in
push
inc
scas
mov
pop
push
adc
gs
pop
fxch
add
lods
jp
mov
loope
cmp
out
inc
stc
scas
pop
repz
dec
inc
fistps
sbb
or
out
insl
add
push
test
scas
lock
push
and
jbe
cmp
jbe
jnp
ljmp
outsl
addr16
lret
add
aad
mov
xchg
movsb
or
lret
lods
push
push
dec
jge
data16
ss
movsl
and
fcmove
cli
in
jecxz
pushf
and
mov
pop
xchg
inc
inc
imul
fldt
jp
cmp
mov
or
adc
push
outsb
pop
dec
sub
mov
mov
mov
inc
push
jno
je
fsubrs
pop
out
xor
ret
mov
out
xorb
mov
sub
and
add
jl
cmp
cltd
sbb
pushl
sarb
lods
lods
or
call
push
xchg
notl
adc
adc
inc
in
sbb
inc
lods
add
or
scas
push
sti
pop
jno
popf
xchg
nop
scas
or
cli
pop
inc
fcmove
jecxz
outsb
out
inc
jmp
xchg
add
arpl
ret
movsl
jp
mov
addr16
fwait
lcall
mov
mov
jp
test
mov
lock
jl
mov
aad
cltd
insb
ja
loop
dec
out
mov
stos
inc
cmp
mov
xor
mov
out
sbb
xlat
cmp
insl
sub
xchg
repnz
cs
push
mov
pop
insb
aad
adcl
mov
lret
pusha
ds
jmp
into
into
movsb
and
xlat
test
cmp
push
ss
inc
dec
pop
stos
push
or
mov
test
sbb
shll
or
or
cmp
ljmp
xor
imul
cmp
dec
or
out
out
pop
testl
dec
and
js
mov
mov
inc
xchg
and
push
pop
dec
les
sub
stos
push
movsl
xchg
lds
insl
xchg
mov
out
stos
jnp
and
int
jmp
cmpb
imul
loopne
leave
jbe
cltd
ret
iret
movsl
push
ja
push
cld
push
cmp
xchg
ret
add
push
test
lods
call
xor
pushf
mov
loopne
inc
adc
fstpt
and
add
pop
sub
stos
pusha
and
rcrl
pop
hlt
insl
pop
or
addr16
jb
das
mov
ljmp
adcl
test
stos
hlt
mov
in
add
xchg
push
lret
test
pop
mov
stos
xchg
push
fisubrs
ficomps
add
pop
neg
pop
cmpsl
cmp
mov
decb
add
mov
loop
or
mov
in
insl
fstpt
fucomip
loope
fucom
jecxz
nop
in
lods
adc
test
add
mov
and
icebp
push
dec
pop
sub
add
in
int3
xchg
cli
sub
push
add
jge
push
jae
movsl
inc
test
enter
sahf
pop
hlt
cmp
fsubrl
and
pop
pop
jae
int3
sbb
movsl
ds
lcall
shll
or
gs
xchg
push
ror
xchg
jb
ds
sbb
das
fwait
mov
push
xchg
add
jno
call
and
mov
fsubs
jl
fwait
dec
mov
lss
int
xchg
stos
mov
fisttpl
daa
jbe
push
dec
shlb
cmp
pushf
addr16
xchg
cmc
adc
pop
xlat
lahf
setne
lea
sbb
add
mov
popa
dec
xor
xor
mov
imul
cmpsl
xorl
pop
pop
and
add
jecxz
cmp
inc
es
in
cmp
adc
pop
inc
ljmp
cmp
sbb
popa
xor
mov
cmp
jno
jl
xor
fsts
jns
aad
push
lahf
xlat
movsb
xor
aas
js
or
rcl
or
lahf
cmp
sub
js
dec
adc
daa
push
lahf
pop
lods
lret
jbe
jne
faddl
mov
lret
mov
cmp
mov
loop
fcmove
scas
xor
fsubs
cmpsb
sbb
cmp
loope
and
push
xor
dec
push
out
aad
jae
jle
hlt
lahf
mov
fldt
push
push
push
dec
sub
test
fsubrl
jno
or
pop
adc
mov
cld
scas
call
pop
ror
adc
adc
or
outsb
cwtl
fsts
mov
pop
repz
push
fistpl
adc
mov
movsb
bound
jmp
inc
fs
mov
cmp
into
mov
fcom
jne
mov
dec
add
aad
and
sahf
insb
fstpl
cltd
dec
xchg
jl
test
les
push
mov
fdivs
rorb
sbb
lods
lret
add
inc
inc
adc
jno
ja
cli
mov
jne
sub
cmpsl
mov
movsl
fs
push
aas
add
pop
xor
loopne
sub
xchg
out
repz
pop
int
pop
mov
push
fdivl
mov
mov
sbb
mov
das
stos
inc
out
ljmp
xor
lahf
jnp
inc
or
xchg
jae
fs
std
sbb
mov
mov
loop
int
add
lret
push
scas
dec
jbe
push
pop
xor
jb
popa
aam
in
adcb
push
cwtl
sub
lcall
in
stos
loope
repnz
xor
jmp
ret
mov
sbb
mov
xchg
sbb
inc
mov
sbb
lahf
sbb
lret
shll
lcall
clc
mov
loop
dec
mov
dec
outsb
jecxz
fucom
inc
jnp
or
cld
push
push
cmp
cmpsl
dec
jne
nop
or
mov
or
add
imul
filds
or
cmpsb
add
daa
in
pop
add
popa
dec
add
and
lds
pop
int3
aaa
xor
push
pushf
adc
pop
mov
push
xchg
mov
mov
mov
daa
sahf
dec
lock
adc
jecxz
cld
xchg
lods
and
stos
ja
pop
sub
movsb
jmp
pop
fsubrs
enter
inc
cld
sbb
or
pop
mov
pop
iret
ret
popf
adc
lods
inc
push
arpl
add
pushf
addr16
mov
push
aad
mov
das
or
decl
dec
adc
js
clc
push
in
ds
xchg
jle
inc
lods
mov
sbb
aas
mov
cmp
xor
bound
jnp
jg
fldl
mov
adc
fcomps
int
lret
ds
and
testb
mov
les
lret
cwtl
popf
jno
in
int3
add
mov
sbb
rcll
jnp
jae
orb
gs
gs
mov
ja
inc
addr16
lret
mov
inc
outsb
cwtl
orl
fs
loopne
mov
ret
adc
jnp
push
sub
ljmp
arpl
cli
pusha
dec
jnp
sbb
push
xor
daa
mov
rcr
add
daa
push
lret
sub
jne
mov
divb
cltd
repz
cmp
in
loope
adc
dec
xor
fimuls
adc
and
cmc
ljmp
popa
fwait
jbe
lea
dec
pop
sub
fs
or
xchg
mov
jmp
cld
jne
inc
pop
leave
jno
scas
movhps
les
mov
popa
push
mov
xchg
fsubrs
insl
out
push
aam
pushf
jnp
mov
ret
cmpsb
pop
sti
loop
pop
cmp
loop
push
aaa
repnz
aad
sbb
sbb
das
into
scas
fcmovu
pop
fsubrl
mov
dec
push
xor
mov
dec
out
call
xchg
or
mov
jmp
aam
out
or
add
scas
dec
loopne
push
fsubrs
push
xor
cs
movsl
xchg
xchg
ljmp
mov
xchg
inc
pop
jl
addb
icebp
ficoms
into
push
mov
dec
and
cmpsb
adc
std
mov
in
mov
dec
and
adc
data16
inc
push
xchg
sub
jmp
hlt
mov
jne
iret
mov
or
mov
jb
je
cmc
arpl
or
js
xchg
outsl
mov
mov
outsb
jae
push
popa
out
sbb
movsl
push
fadds
out
neg
rcll
out
jne
push
sbb
shlb
out
or
cs
or
movsl
arpl
addb
mov
insl
xchg
xchg
xor
xor
or
scas
daa
mov
mov
fiadds
js
iret
add
icebp
xchg
nop
pop
push
cmc
inc
mov
hlt
sbb
sbb
jae
cmp
addr16
sub
stc
jmp
push
cli
outsl
test
add
sbb
jae
cld
push
repz
mov
movsb
out
fstl
pop
imul
ss
leave
popf
les
push
cltd
faddl
cli
fcom
sub
lret
adc
lods
and
loop
inc
daa
scas
outsl
int
dec
fucomi
mov
or
aad
orl
dec
or
stc
push
pop
ret
xchg
xchg
ljmp
add
or
pop
xchg
out
lds
mov
stc
cmp
jno
das
push
pop
and
fisubrl
mov
arpl
sub
cli
aam
sbb
jns
inc
imul
addr16
jae
xor
mov
fcompl
lods
xor
daa
jo
fs
sub
hlt
mov
pop
and
xlat
stos
cmp
jno
test
sub
out
ja
popf
cmp
sbb
push
xchg
xchg
fldcw
jmp
pop
and
push
ficoml
lock
aas
insl
fstl
movw
mov
arpl
jns
xor
rcrb
test
jnp
adc
lea
cmp
dec
popa
cmp
cltd
dec
cmp
mov
mov
or
inc
pop
adc
push
sbb
sub
and
sub
mov
inc
pushl
cmc
mov
mov
cmp
out
add
dec
lret
adc
in
inc
mov
fists
adc
dec
jnp
arpl
ret
push
imul
pop
mov
stos
das
les
jmp
in
xchg
and
iret
sub
out
dec
and
pop
test
mov
push
push
xor
dec
sub
in
fwait
mov
sbb
sbb
mov
es
ret
int
cmp
das
xor
pop
and
xchg
inc
mov
mov
sub
adc
dec
pop
out
inc
and
cmpsb
xchg
xchg
jno
and
popf
scas
mov
rcl
in
cmpsl
insb
push
push
fs
aaa
das
popf
outsl
or
outsb
ja
out
popa
paddsb
mov
and
bound
cld
cmp
jo
pusha
jl
std
les
popf
add
stc
cmpsl
test
inc
std
xor
adc
push
pop
loop
pop
jb
test
sbb
inc
jle
iret
out
into
add
mov
fwait
mov
mov
and
lret
mov
sub
jns
data16
or
inc
loop
push
or
lahf
or
jbe
adc
cmp
xchg
jno
fnstsw
pushf
mov
inc
mov
pop
gs
jno
jge
mov
fcoms
xchg
jp
fldt
cmp
neg
push
movsb
mov
pop
dec
pop
inc
sbb
pop
dec
pop
stos
shrl
inc
or
test
push
cmpl
ret
cmp
jecxz
stc
xchg
or
jp
lahf
pop
lret
int3
imul
cli
rcll
insl
pusha
mov
adc
xchg
out
and
adc
aas
lret
outsb
and
out
in
push
or
push
xor
mov
hlt
adc
and
das
or
gs
mov
xor
add
test
or
and
mov
mov
mov
mov
add
stos
ret
mov
mov
inc
sub
add
push
test
jmp
push
rorb
or
daa
inc
les
xchg
jnp
sahf
fdivs
cmp
jae
movsl
stos
imulb
dec
jl
in
pop
movsb
pop
lods
lock
movl
aaa
add
lods
gs
lds
cwtl
ret
enter
orl
dec
rcr
inc
pop
mov
mov
cmp
lock
xor
pause
and
xor
fldenv
rol
mov
xchg
xor
clc
aas
pusha
jg
lret
push
mov
popa
gs
nop
mov
add
out
xchg
push
bound
xchg
mov
and
jecxz
out
mov
sub
clc
fidivl
or
pushl
int
push
lock
out
dec
lret
adc
jns
mov
sbb
dec
pusha
adc
xchg
add
xchg
or
dec
insb
cmp
cmpsl
mov
jae
jnp
inc
scas
push
jge
push
cmp
pop
pop
sbb
jb
lcall
adc
cmp
and
mov
fiaddl
xchg
seta
dec
sbb
xchg
addr16
mov
fldcw
mov
jo
dec
sbb
push
mov
xor
add
xor
aad
cmp
mov
push
dec
jb
dec
and
dec
xor
dec
addb
loope
pop
pop
xchg
add
dec
dec
stos
dec
inc
sub
cli
dec
rclb
aam
std
cmp
or
fwait
roll
enter
lret
mov
push
aad
dec
add
fimull
jp
push
data16
lea
das
inc
ja
out
xchg
hlt
lds
lret
loop
push
fucomi
cld
sti
jbe
in
aad
rol
cmpsl
mov
ret
or
cmpsl
jecxz
xor
out
scas
aas
test
out
mov
les
sti
jmp
adc
pop
or
jp
ffreep
and
movsl
xorl
dec
sbb
jge
add
mov
xchg
push
jno
mov
mov
repnz
adc
in
out
cwtl
pop
mov
int3
lret
jb
movsl
sub
shll
push
sub
inc
bound
pop
mov
xlat
add
or
xchg
add
xor
sub
inc
and
mov
and
xchg
push
inc
add
mov
mov
shr
push
scas
repnz
insl
mov
loopne
lods
cmp
cltd
in
push
jnp
addr16
mov
lret
sub
xchg
repz
fs
or
xor
movsb
test
cmp
or
mov
loope
sbb
aad
lock
pop
cmpsb
pop
mov
iret
in
jo
sub
ljmp
pop
sbb
stos
mov
pop
xchg
and
cmp
inc
pop
mov
fldcw
out
xor
pop
xor
lds
pop
add
das
jge
icebp
pop
cld
sbb
cltd
std
cmpsl
out
sarb
out
test
hlt
pushf
xor
mov
add
mov
mov
add
xor
jb
das
jb
jne
stc
ja
sbb
inc
inc
test
imul
fsubr
sub
fnstcw
mov
mov
adc
push
push
int3
mov
fisubl
pop
nop
mov
fldl
inc
sbb
into
jno
cltd
in
sti
fnsave
push
test
test
cmc
push
jns
scas
and
std
pop
lahf
scas
cltd
fistps
mov
enter
ja
int
cmpsl
mov
arpl
adc
mov
insb
in
scas
jno
mov
inc
dec
xchg
call
pop
repz
loopne
xor
push
jnp
aas
mov
sbb
mov
push
cli
nop
lcall
inc
call
rolb
pop
jne
outsb
sahf
or
adc
js
dec
sub
mov
dec
cmp
add
mov
aad
and
es
mov
dec
in
sub
lretw
stc
sbb
push
mov
jnp
icebp
dec
es
dec
notb
push
mov
adc
andb
xchg
inc
jl
mov
test
push
pop
xor
les
push
frstor
stos
stc
fisubrs
pop
inc
addr16
fimuls
jne
inc
and
cmpsl
jae
jecxz
enter
and
pop
sbb
inc
xchg
xchg
sub
ja
jb
les
xchg
enter
pop
dec
sub
xchg
into
pop
je
fidivs
push
addr16
inc
mov
pushf
dec
mov
pop
add
or
imul
push
dec
les
int3
push
push
mov
add
das
js
cld
decl
insb
ljmp
xlat
dec
and
xor
jno
cmp
scas
rcll
loope
mov
pop
push
or
ss
test
testb
aad
dec
pusha
imul
push
loop
imul
je
add
xlat
lds
std
int3
imul
ret
shr
pop
push
or
int3
pop
push
xchg
sbb
lods
aad
bound
mov
xor
outsb
add
push
jg
dec
cmp
fld
sub
cmpsb
std
loopne
ljmp
enter
stc
or
lsl
fcoml
out
mov
sti
pushf
fsubs
mov
repnz
pushf
clc
mov
insb
in
hlt
mov
xor
add
fsubs
sarl
add
jmp
xchg
sub
fwait
xlat
jno
mov
jb
insb
push
gs
adc
cmp
xor
push
jo
xor
shl
and
loop
mov
popf
or
add
xor
stos
adc
dec
data16
pop
out
repz
cmpsb
es
int3
jmp
xor
inc
add
ljmp
enter
js
scas
dec
std
dec
sbb
mov
sarl
loope
jp
dec
lret
fcomip
cmpsl
out
sbb
inc
ss
push
ja
ficompl
ret
pushf
add
cltd
scas
imul
test
insl
inc
push
daa
aas
or
mov
fidivrl
xor
jae
shr
cmpsl
shrl
mov
jge
sub
mov
mov
adc
push
imul
or
or
ds
push
popa
add
mov
daa
out
mov
insl
push
leave
shrl
cmp
jmp
push
das
dec
stos
popa
andb
push
ljmp
loope
jnp
cmc
lret
xchg
pushf
popf
xor
cltd
pushfw
cmpsl
push
cmpsb
mov
loopne
lcall
sbb
jg
or
test
xchg
mov
dec
dec
jbe
ss
insl
fwait
pop
and
das
ds
dec
aad
mov
inc
fcoml
mov
add
add
xchg
dec
sub
icebp
dec
out
and
lcall
stos
loopne
inc
js
testl
sarb
dec
and
push
aaa
add
mov
jge
cmpb
jnp
pop
je
inc
xchg
cmp
and
pop
push
insl
mov
push
enter
das
sub
cmp
add
push
jmp
fnstsw
ss
clc
mov
cmpsb
dec
ss
inc
stos
loopne
lret
push
push
mov
test
movsb
jae
xor
xorb
dec
ret
aaa
push
mov
popa
stos
sub
inc
enter
mul
inc
test
push
in
jne
jle
sbb
xchg
xor
and
and
pop
lret
and
repz
fisubrl
inc
xchg
movb
pop
mov
sti
pop
je
cmp
jg
add
push
jl
or
inc
rorb
push
fdivrs
mov
dec
fidivrs
call
jp
jle
lcall
xchg
dec
lds
sub
cmp
sub
nop
fcoms
in
addl
lea
pop
lods
or
stc
gs
test
dec
shrb
xchg
jne
movsb
mov
mov
jb
repz
out
imul
mov
arpl
pushf
or
pop
rcrb
fwait
in
or
xchg
xchg
jb
inc
pop
scas
cmp
jge,pn
leave
pusha
movsb
xchg
and
es
inc
adc
mov
mov
sbbl
aam
cs
push
mov
in
jmp
lea
leave
and
sbbl
cmc
sbb
mov
addl
imul
sbb
and
xor
jmp
jne
jb
ljmp
mov
inc
xchg
in
add
sbb
add
pusha
pop
jb
fnstcw
xor
outsl
jle
mov
xor
sub
and
sub
and
and
inc
inc
cmp
pop
sahf
dec
call
daa
mov
insb
xor
imul
out
in
lret
or
push
xor
jno
rorl
or
xor
adc
add
xchg
lahf
sub
test
jno
test
aaa
push
xchg
add
jne
inc
add
lds
jg
cmpsb
js
fwait
lret
insl
mov
inc
add
pop
popa
xlat
xchg
shlb
xchg
xacquire
adc
dec
pop
pushf
es
sbb
adc
into
pop
scas
std
cld
dec
in
inc
leave
cmpsb
push
addl
jp
sti
cmp
xchg
mov
mov
inc
ffreep
shr
rorl
push
ret
pop
push
lret
loope
fbld
xor
cmp
sbb
movsl
add
iret
add
mov
add
call
mov
xchg
xchg
mov
lods
cmpsb
mov
sbb
or
adc
mov
cmpsb
test
lret
bound
cmp
mov
es
inc
aas
xchg
dec
xor
cmpsb
cmpsl
push
xchg
cmp
adc
mov
pop
mov
jp
ret
rclb
pop
ja
data16
ja
xor
hlt
sbb
push
mov
jne
movsl
jae
daa
bound
mov
add
imul
shr
movsb
mov
mov
loopne
iret
jb
jg
dec
mov
mulb
adc
push
aam
xor
mov
fwait
dec
faddl
pushf
dec
dec
mov
jmp
mull
aam
in
aaa
and
mov
popa
push
mov
xor
rcl
psllq
xchg
sar
xor
add
cmp
push
fisubrs
inc
sti
in
adc
jle
and
cld
dec
cmp
fcmovb
mov
outsl
jl
cmp
mov
clc
in
push
sbb
push
icebp
push
rolb
out
jo
cmp
pop
shrl
sbb
xor
pop
or
pop
testb
cs
popf
push
imul
fdivrp
pop
cmp
add
xor
dec
dec
sub
lret
test
push
sbb
mov
dec
and
sub
rcrl
mov
test
and
push
insb
push
cmp
insl
das
mov
rorb
data16
xcrypt-ctr
cmpsl
sbb
aam
xor
lds
mov
or
scas
call
je
or
jnp
inc
and
mov
mov
xchg
sti
cmc
incl
fstl
or
xchg
shrl
testl
pop
inc
push
lock
or
push
lahf
fdivrl
fcompl
imul
stos
stos
cmp
test
in
dec
pop
hlt
pop
testl
popa
push
addb
in
add
cmp
fisubrs
outsl
inc
xor
dec
lahf
call
aad
dec
fisubrs
mov
mov
mov
push
adc
dec
sarl
fidivrs
test
and
fdivr
lock
outsb
shl
fsubrl
rep
inc
lcall
mov
addb
daa
mov
cmpl
mov
aas
int3
or
jns
dec
mov
xchg
cmp
pop
mov
aad
mov
push
add
call
jge
in
jge
lahf
mov
dec
leave
dec
jmp
xor
test
outsl
or
imul
lcall
into
pushf
shrl
insl
jae
mov
jge
sbb
fs
and
push
sub
or
test
sub
inc
xor
pop
mov
popa
sahf
inc
adc
fistpl
test
sbb
loop
ret
and
scas
movsb
lds
out
or
vphaddwd
stos
cltd
push
pop
ja
enter
pusha
clc
dec
sub
cmp
fsubs
cmp
aam
lds
test
lods
pop
sub
xor
mov
mov
pushl
sahf
mov
jno
jg
std
mov
xchg
add
or
sub
stc
pop
sub
fsts
jno
sbb
xchg
mov
pop
dec
clts
call
push
imul
out
pop
push
push
xor
xchg
ljmp
mov
scas
xchg
fisttps
push
shll
mull
cwtl
int3
fiaddl
pusha
xchg
out
gs
into
mov
fwait
pop
loopne
rorl
in
sub
fucomi
stc
lahf
test
add
xchg
mov
push
aaa
pop
movsb
sbb
sub
or
fcoml
push
push
imul
mov
out
mov
xor
sbb
xor
xchg
testl
adc
test
mov
ja
stc
cmpsl
jno
push
mov
dec
aam
cmp
xchg
rcll
aaa
in
adc
nop
cmc
xor
fyl2xp1
mov
inc
push
shl
and
bound
jnp
jb
daa
inc
insb
sbb
lret
int
inc
add
ret
inc
mov
and
orb
pop
pop
nop
mov
adc
cwtl
loopne
mov
iret
dec
xor
hlt
fs
lea
arpl
mov
fmuls
cmp
adc
mov
xor
mov
adcl
adc
in
testb
cmp
test
iret
mov
or
adc
mov
xor
pusha
pop
jge
test
pop
rcrl
cli
mov
xchg
dec
push
mov
jbe
les
mov
pop
inc
pop
sub
sbb
in
mov
xor
cmp
xchg
and
pop
mov
mov
stc
test
mov
adc
ja
ljmp
aaa
lock
xchg
cs
jnp
cmpsb
cmpsb
adc
rcll
jl
popf
popa
std
mov
jmp
jne
jns
in
jecxz
add
movsl
fs
push
pop
clc
out
gs
mov
incl
inc
jno
cmpsl
inc
test
lret
inc
add
pop
inc
jp
or
push
lock
or
cli
xor
cmp
jl
cli
mov
rol
sub
jge
sarb
jg
cmp
popl
push
popf
mov
cmp
insl
push
push
lds
in
cld
and
lret
or
push
and
xor
xchg
fsubrs
test
sbb
mov
xchg
lods
leave
pop
stos
mov
ss
jae
and
cltd
bound
xchg
repnz
ss
xlat
xor
out
mov
mov
push
mov
je
jl
jbe
fisubrs
mov
adc
jge
adc
movsl
dec
jnp
ds
popf
addr16
and
dec
enter
cmp
ret
mov
js
loopne
sbb
aad
shrl
or
sbb
ja
call
push
aas
into
daa
fcomps
push
fwait
xor
push
push
jmp
sbb
ret
fnstsw
sub
sbb
mov
pop
test
pop
dec
divl
popa
and
or
insb
mov
push
ds
dec
inc
in
add
pop
adc
fucomp
mov
and
roll
mov
add
aaa
stos
push
xchg
dec
arpl
pop
pop
push
scas
pop
cmp
xorb
std
std
inc
cmc
cmpsl
adc
and
rep
push
cld
bound
faddl
iret
jnp
fldcw
fcoml
pop
inc
jbe
add
test
inc
lods
dec
mov
dec
jne
mov
iret
and
dec
ja
add
adc
mov
or
int3
sbb
insl
pop
adc
dec
lcall
or
push
push
es
mov
mov
adc
xchg
add
pop
and
mov
or
test
sub
and
dec
push
lds
cmc
subl
sbb
dec
push
and
shl
enter
push
xlat
push
mov
fwait
popl
inc
aam
pushf
pop
pop
cmp
sub
or
jne
mov
push
push
jbe
into
push
mov
leave
push
arpl
mov
xorl
adc
pop
ds
cld
cld
incb
je
imul
fsubs
nop
xor
insb
push
in
stos
adc
ljmp
inc
pop
add
adc
mov
jo
mov
jns
leave
pop
mov
adc
xchg
mov
mov
cmc
push
mov
cmpsl
sbb
sub
cmpb
xchg
outsl
imul
mov
or
lods
lods
mov
jl
jmp
and
dec
lods
sub
shlb
xchg
rcrb
adc
cld
ret
idivl
or
lods
out
stos
add
cmp
sbb
push
lahf
out
push
roll
sbb
sbb
int3
push
aad
sub
add
hlt
andb
pop
ljmp
jb
imul
and
mov
mov
mov
cli
sub
out
sub
mov
daa
cmpsb
sahf
cmp
inc
icebp
cmp
jp
es
and
lods
pushf
xchg
ret
add
jo
inc
leave
arpl
or
lds
ret
push
add
loop
pushf
fdivrl
mov
scas
push
ljmp
ror
test
das
xor
rol
inc
pop
xchg
pop
aaa
fbld
sbb
mov
lahf
xchg
xchg
dec
dec
mov
imul
in
out
mov
test
lods
sbb
push
cli
push
xchg
lds
jg
fists
sub
lret
and
aam
cli
dec
imul
inc
xor
and
inc
push
clc
rcrb
lock
sub
cmp
popa
daa
sahf
ds
jg
pop
mov
aad
cltd
inc
in
fisubrs
mov
cmp
xor
inc
shr
add
sbb
pop
repnz
addr16
rcr
fldt
add
js
and
incl
decl
lahf
jmp
in
add
pop
je
cld
xchg
mov
cmpsl
arpl
outsl
testl
aad
and
jle
vmovapd
pop
xor
std
mov
into
dec
jno
popa
nop
jge
ret
mov
xchg
mov
popa
xor
or
mov
inc
cmpsb
sub
cmpsl
js
pop
xchg
and
aam
jb
int
enter
pop
iret
push
call
scas
sub
lret
clc
inc
les
cmc
call
pop
out
rorb
pop
xchg
sbb
test
ret
sub
in
mov
daa
sub
dec
push
add
pop
adc
sub
insl
out
jcxz
imul
jl
xchg
ljmp
push
or
mov
push
insb
nop
jmp
xor
inc
test
inc
out
jae
inc
shll
sbb
ss
and
imul
xchg
idivl
or
dec
adc
nop
fistpll
and
mov
shl
sahf
fimuls
pop
cmovns
movsb
ret
xchg
ja
hlt
cmp
and
push
sahf
push
addb
fidivrs
pop
outsb
mov
test
cmp
xchg
ud0
mov
sbb
dec
lcall
inc
push
pop
xchg
or
pop
mov
push
clc
stc
mov
addl
ficomps
loope
movsl
lcall
inc
in
and
mov
inc
jo
loopne
mov
mov
ret
push
popa
mov
imul
or
mov
cmp
push
js
cltd
cmp
pop
cmpsl
xor
int
add
inc
and
mov
popf
imul
mov
loope
bound
test
int3
or
pushf
jno
jp
ds
aam
dec
xor
rep
add
leave
push
mov
sbb
mov
inc
test
movsl
fiadds
lahf
jae
fcoms
lahf
clc
ret
dec
in
dec
mov
cli
sbb
stos
cmpsl
imul
sbb
mov
je
sti
dec
call
popf
sub
enter
dec
adc
sbb
add
sbbb
xchg
out
push
das
xor
xor
popf
int
add
push
mov
int3
aaa
lods
cltd
cs
loope
imul
cmp
mov
mov
test
repz
das
pop
ror
ss
mov
mov
jg
mov
xchg
or
push
fwait
hlt
popa
hlt
dec
xchg
icebp
sub
aas
sahf
or
enter
mov
inc
in
push
fimull
jp
inc
mov
jb
pushf
cmp
adc
test
test
adc
and
lret
xor
and
mov
fnstsw
push
popa
lea
add
out
lock
inc
mov
jmp
cmp
arpl
mov
jmp
sbb
push
push
adc
mov
pop
pop
arpl
ret
sub
test
pop
or
dec
outsb
lods
mov
ljmp
std
icebp
das
imull
bound
and
add
inc
lods
inc
imul
cltd
leave
adc
push
inc
dec
enter
mov
icebp
jg
and
add
lret
xor
xchg
in
clc
mov
test
fildl
fisubs
dec
xchg
mov
xchg
pop
xchg
pop
xor
out
push
shr
out
or
push
clc
xchg
js
add
xchg
and
push
xchg
dec
mov
push
xlat
push
adc
popa
inc
mov
fxch
lods
pshufw
mov
push
dec
aas
xor
dec
fnstenv
cmp
inc
pushf
aas
cmpb
mov
icebp
mov
pop
or
push
mov
xchg
fsts
push
push
icebp
add
adc
adc
pop
fld
mov
movb
stc
daa
movsl
loope
sar
sbb
js
cmp
push
and
das
fdivrl
repnz
in
bound
ja
incb
push
addr16
and
cmp
cld
mov
add
mov
mov
cs
fcmovnbe
xor
dec
mov
iret
adc
xchg
add
mov
or
sbb
mov
xor
cmp
clc
add
push
or
dec
jo
movsb
add
aad
mov
jae
dec
sbb
fincstp
or
lock
push
lret
ret
cmp
popf
push
out
cmpsb
sbb
out
xchg
dec
inc
imul
fidivs
pop
jge
ror
jg
jno
mov
stos
cwtl
mov
ss
jg
sbb
add
ss
lret
icebp
movsl
in
or
lods
mov
mov
sub
ljmp
mov
push
mov
decl
push
cld
arpl
or
or
xlat
call
inc
xchg
xchg
pop
cmp
popa
into
stos
inc
push
jae
ret
movsl
fdiv
scas
adc
lods
outsl
jne
push
adc
jb
adc
or
andl
pop
jl
lea
fisubl
and
insb
outsb
jmp
and
test
hlt
clc
mov
outsl
inc
fstl
lea
push
clc
sbb
mov
pop
pusha
call
loopne
jg
mov
ret
fcmovnu
jmp
in
cmpsl
jns
mov
inc
mov
mov
fistpl
insl
shrl
adcb
leave
decl
mov
dec
fdivl
mov
push
xchg
les
stc
adc
ficomps
mov
pop
stos
pushf
sub
ret
pop
sbb
out
sbb
xlat
jno
notb
cs
movsb
lods
ja
fisubrl
mov
arpl
loope
mov
int3
add
sbb
lret
add
xor
push
xchg
negl
ja
fwait
or
bound
imul
jne
fwait
add
insl
jb
out
gs
bnd
mov
sub
fcmovbe
pop
jnp
lret
xchg
repnz
adc
add
inc
gs
jmp
fadd
mov
jp
xchg
pop
and
gs
in
outsb
pop
push
lret
mov
jecxz
sbb
es
mov
sar
inc
pop
hlt
in
nop
jae
mov
pop
sub
bound
inc
jmp
dec
sub
lcall
jns
xlat
dec
fwait
fs
aas
ret
repz
add
test
ljmp
mov
push
pushf
push
test
pop
fmul
scas
mov
sti
outsb
dec
add
mov
cmp
dec
das
ret
jb
sbb
pop
lods
out
sub
jle
scas
cmp
mov
hlt
mov
sbb
ficoml
push
pop
adc
cli
ja
bound
into
adc
test
addr16
mov
vmwrite
je
xchg
and
add
daa
movsl
out
test
xchg
inc
in
xchg
pop
mov
mov
add
je
dec
scas
pop
pop
lahf
dec
sbb
xchg
movsb
jle
andl
arpl
sub
jecxz
lret
sub
mov
jge
and
nop
insl
into
adc
and
mov
mov
inc
xchg
stos
mov
pop
adcb
adc
cwtl
sbb
repnz
rcll
or
mov
cli
inc
leave
stos
stc
fninit
mov
pushf
cmc
arpl
ror
jbe
jmp
test
cli
or
movsl
mov
adc
imul
cmc
popa
xor
popl
mov
add
xchg
inc
mov
popf
mov
adc
pop
ljmp
pop
xlat
sub
fisttpl
push
dec
push
inc
xor
mov
lea
pop
jb
adc
lret
sub
lods
scas
jb
xchg
xor
sarl
sbb
cmp
insl
je
stos
fstl
notl
mov
in
add
jmp
movsb
xchg
mov
mov
adc
xor
inc
push
xchg
insb
lcall
push
push
arpl
leave
xchg
sub
movsb
cmpsl
xor
sbb
out
xor
fstpl
cmc
mov
fucomip
sub
jnp
cmp
into
ret
xlat
mov
jnp
rolb
add
jns
fidivl
test
leave
clc
ss
mov
jno
or
inc
or
fistpll
hlt
mov
leave
stos
imul
xchg
sbb
lods
push
dec
sbb
mov
push
cmpsb
ss
jp
mov
add
inc
jbe
xchg
sti
jle
je
or
movq
mov
add
daa
push
out
sub
out
dec
adc
aas
in
push
pop
repz
or
mov
mov
pop
arpl
sbb
out
pop
mov
mov
cmp
fcmovb
test
jl
mov
lea
outsl
loopne
jp
call
sub
pop
mov
or
pop
stc
sub
lret
and
rcr
pop
mov
daa
mov
jp
push
sub
testb
or
popl
jge
push
imul
jge
sub
das
xchg
jg
movsb
jae
shrb
les
dec
mov
jne
cmp
sti
repz
pop
mov
test
lods
add
retw
lods
and
ret
repz
and
arpl
add
mov
mov
fistpll
sbb
popa
push
xchg
adc
cmp
xchg
xor
jne
dec
mov
shr
cwtl
addl
push
xor
dec
int
jns
push
fnop
decl
xchg
pop
or
mov
js
inc
faddp
cmpl
sahf
xchg
ja
cmp
jle
addb
sub
divb
dec
hlt
sbb
fidivs
div
mov
mov
lds
mov
sbb
nop
mov
cmpsl
jmp
sahf
jne
pop
ds
xor
cmpsl
fldenv
loope
push
mov
fcoml
idivb
gs
mov
outsl
sub
mov
imul
sbb
mov
push
das
push
inc
jne
outsb
jns
xor
cmp
mov
js
push
adc
addr16
scas
lret
sbb
dec
xchg
sti
fs
loope
jbe
jge
subl
jp
dec
stos
popf
mov
or
lahf
adc
mov
mov
adc
mov
xchg
cld
loopne
add
cld
jg
stc
jle
push
mov
and
outsb
in
scas
stc
fidivs
push
cmp
adc
mov
jge
movsb
retw
stos
mov
out
call
push
push
pop
xchg
push
cmp
clc
loop
leave
dec
jle
jns
jo
lcall
xchg
mov
jecxz
daa
dec
addl
lock
ret
and
push
jmp
add
mov
negb
cs
jns
mov
mov
stos
pop
lret
mov
adc
xlat
cmp
or
jmp
pushf
mov
cli
push
or
imul
push
cmp
in
imul
sub
add
int3
sbb
sbb
xchg
and
das
add
or
aad
and
ja
xchg
adc
in
hlt
iret
lcall
mov
pop
insl
push
mov
int3
inc
fbld
out
out
je
jmp
cmp
pop
ja
adc
je
mov
add
xor
pop
rcl
ss
lret
push
xchg
daa
add
cli
jg
or
inc
aad
sub
pop
xor
xchg
xor
mov
and
push
popa
add
cmp
jns
xchg
out
jne
clc
xlat
xchg
adc
ret
mov
pop
into
mov
sub
mov
push
xchg
dec
out
inc
stos
je
or
in
cmpsl
jge
push
outsb
pushf
add
bound
pop
sub
cmp
shr
leave
outsb
dec
cmp
and
sub
test
inc
fwait
out
inc
rcrl
add
push
xor
shl
cli
jmp
or
repnz
not
fnop
js
jge
pop
xor
iret
sbb
cmp
cli
or
ja
add
inc
sub
idivl
xchg
adc
daa
mov
xchg
and
repz
mov
sub
fldcw
cmp
xchg
sbb
inc
cmpsb
xchg
push
ret
lock
mov
aam
xor
into
ss
mov
data16
cmpsb
add
xor
sbb
mov
pop
xor
cmp
test
jmp
movl
and
pushf
add
lret
daa
or
ss
mov
inc
movsl
mov
movsl
les
stos
pusha
test
insb
push
sub
sbb
emms
jecxz
adc
cli
mov
mov
jmp
insb
pop
sub
xor
movsl
xchg
pop
push
int
adc
dec
mov
mov
test
and
clc
std
mov
and
jne
xchg
or
mov
add
adc
jbe
aad
ja
cmp
addr16
push
fucomip
mov
lcall
je
dec
pop
out
pop
gs
add
lahf
sbb
xor
leave
dec
cmp
xchg
xchg
push
adc
xlat
sar
pop
stos
in
outsl
out
jg
cld
push
movsb
cmp
dec
xchg
mov
mov
loope
mov
and
sub
push
lret
stos
sti
sub
inc
and
jecxz
pop
sti
mov
sbb
adc
ss
popf
dec
add
rorl
mov
ret
jbe
fsubs
mov
outsb
dec
leave
leave
and
les
inc
mov
jnp
mov
jmp
punpckhbw
add
inc
call
xchg
add
arpl
mov
mov
jns
mov
and
jmp
shll
add
call
xchg
outsb
cmp
mov
arpl
or
cmpsl
jmp
aad
je
enter
dec
or
pusha
xchg
inc
xor
mov
pop
mov
push
xchg
pop
xor
or
pop
adc
sub
mov
mov
int3
xor
mov
stc
rcll
cwtl
mov
adc
pop
push
xchg
dec
mov
push
data16
or
dec
and
orl
pop
mov
pop
inc
mov
xor
sti
cmpsb
inc
xlat
rclb
mov
mov
mov
and
xchg
aaa
addr16
insb
add
mov
mov
jp
insl
xchg
push
push
jp
add
ja
repz
push
pop
stos
fildl
jae
dec
and
cld
mov
mov
lcall
push
push
or
inc
cs
test
das
sub
fnsave
sahf
das
pop
cltd
sbb
mov
es
call
push
sub
push
popa
int
and
xlat
inc
sub
cmc
es
jmp
cmpsb
sbb
testl
pop
inc
dec
jecxz
sub
divps
stos
mov
sub
das
enter
repz
sbb
rcll
xchg
pop
fucom
int
dec
sahf
mov
scas
adc
pop
mov
dec
xchg
push
loop
or
cmpsb
maxps
mov
cmp
test
mov
push
out
shrb
out
dec
mov
mov
insl
hlt
cmpsb
or
jae
divb
aas
adc
add
and
test
jne
jmp
ret
or
mov
inc
add
mov
movsb
movsb
aad
inc
and
movsl
and
mov
pop
lods
mov
xor
xchg
andb
ds
and
inc
icebp
in
inc
jo
add
leave
adc
lcall
mov
stc
push
dec
pop
mov
inc
jae
cmc
fld1
scas
pop
jo
or
test
fneni(8087
or
loop
jb
sub
sub
mov
xor
mov
leave
shl
daa
mov
sbb
mov
jnp
leave
cmp
aam
lcall
popa
pop
and
mov
sbb
arpl
mov
inc
inc
dec
push
cmpsb
cmp
mov
sub
loop
lock
out
adc
repz
jno
mov
cld
push
lahf
mov
notb
sbb
jno
and
xchg
popf
imul
or
dec
pop
fildl
jnp
mov
bound
mov
sub
mov
and
and
cmp
lahf
hlt
jl
dec
mov
imul
mov
std
lcall
xchg
jns
adc
mov
fwait
jmp
xchg
push
faddp
pop
mov
ret
sbb
mov
andl
ret
sub
mov
outsb
stc
mov
push
into
shll
sti
mov
inc
gs
loopne
fsubl
ror
mov
pushf
movsl
sahf
mov
dec
mov
lods
jl
cmp
cmp
cli
mov
xor
das
fstpl
cmp
lods
into
cmp
mov
imul
aas
push
xchg
mov
add
lods
out
fs
jne
jge
xchg
fldenv
leave
jmp
filds
hlt
aaa
sahf
lea
int3
repnz
movsl
hlt
cmp
cmc
movl
cwtl
and
notb
sub
repz
adc
add
popf
mov
fisttpll
in
mov
testb
aam
jne
int
testb
inc
ss
testb
std
inc
push
or
xor
jno
sbb
clc
mov
jl
ret
js
mov
push
add
lds
imul
cmp
loopne
jns
mov
inc
shr
xchg
xchg
mov
outsl
movsb
dec
mov
cmp
test
cli
out
add
push
xor
pop
lahf
mov
push
push
lret
subl
int3
test
pop
mov
sbb
ljmp
clc
fsts
mov
fadds
mov
push
das
repz
inc
loop
or
fdivl
lret
and
decl
ss
popa
pop
lods
xchg
stos
sbb
lock
adc
push
movl
fwait
dec
decb
add
mov
lahf
aaa
test
dec
fstps
adc
mov
ret
int3
pop
add
dec
cmp
cwtl
cwtl
outsl
out
call
push
and
mov
xchg
or
fidivrl
push
xlat
push
fmull
leave
xchg
push
mov
icebp
jmp
dec
jl
mov
loope
cmc
les
test
adc
ret
arpl
lcall
cli
adc
xchg
jbe
jbe
push
or
aas
sub
push
loop
cld
inc
dec
repnz
dec
pop
mov
mov
adc
xor
popf
or
out
pop
stos
inc
nop
insb
sbb
or
push
or
in
add
push
fmuls
movsl
pop
adc
ffree
xchg
add
nop
dec
push
out
mov
jne
jle
sbb
pushf
leave
mov
xor
insl
mov
pop
scas
jp
jg
pop
rcl
out
add
xchg
sti
jmp
adc
dec
divb
rclb
inc
das
dec
iret
mov
or
js
mov
mov
inc
or
push
push
mov
xor
int3
jnp
in
nop
dec
xor
dec
or
sti
adc
sub
mov
pop
popa
mov
lret
jmp
sarl
inc
sbb
push
dec
push
jnp
xlat
jge
bound
aam
lahf
dec
std
loope
popa
or
add
fsubrs
push
mov
xchg
clc
in
xlat
inc
lahf
lea
aam
aas
popf
jns
lods
cmp
stos
adc
mov
lds
dec
xchg
adc
jl
ss
adc
int3
dec
test
dec
push
push
test
jle
pushf
cmpsl
loop
cs
cwtl
std
ds
xchg
sbbb
jne
aaa
inc
frstor
jae
add
jb
cltd
roll
cmp
stc
add
pop
jle
jl
adc
xchg
lock
cmp
shll
push
sbb
jmp
cmpb
out
sub
and
dec
adc
inc
lods
lret
mov
fsts
stos
mov
into
jmp
push
sub
mov
pusha
cltd
inc
lret
outsb
mov
mov
ret
adc
lcall
pop
icebp
mov
int
dec
jne
das
or
cmp
loop
ds
insl
push
rcrb
sbb
ljmp
bound
lds
xchg
test
and
insb
dec
sbb
mov
mov
cmpsl
inc
adc
mov
ret
xor
mov
or
mov
or
mov
xchg
cmp
call
ficomps
mov
and
cmc
js
rcrl
xor
or
gs
sub
test
push
dec
jb
imul
iret
repnz
pop
jbe
jecxz
and
push
stos
jmp
and
icebp
out
or
fdivl
push
adc
cwtl
test
jbe
test
outsb
sete
mov
xor
hlt
and
jp
inc
fwait
clc
push
pop
inc
fwait
mov
aas
lret
hlt
outsl
dec
stos
jle
dec
pop
xor
jbe
or
mov
add
bound
std
add
test
out
mov
test
repz
jl
push
inc
and
cld
xchg
jno
dec
xchg
xor
mov
loope
cwtl
popf
fcomp
ja
fisttpll
dec
fistps
pop
out
jne
imul
push
mov
mov
icebp
and
imul
gs
insb
mov
jne
inc
clc
addr16
xor
icebp
jns
mov
ljmp
push
xchg
std
lret
and
movsb
and
jmp
loope
fs
jge
sarl
sbb
xchg
adc
jbe
nop
arpl
mov
es
inc
popa
aaa
ret
in
aaa
jno
out
cmc
out
dec
xchg
xor
ds
out
jge
jbe
pop
dec
cld
add
loop
xlat
xor
fdivs
daa
lea
adc
cmp
xor
test
xor
mov
in
std
jbe
aaa
xor
mov
addb
jmp
lods
loope
daa
lea
xchg
outsb
cmp
jle
out
lcall
xor
xchg
pop
xor
push
mov
inc
enter
xchg
jae
jno
xchg
ret
js
fsubrl
aas
push
mov
mov
jno
pop
aas
ds
test
mov
push
test
xchg
frstor
mov
pusha
jl
mov
adc
mov
sub
addr16
or
cs
sub
push
pop
js
jle
pop
leave
push
adc
jg
je
xchg
sbb
lea
fldt
cltd
js
cmc
cltd
cmpsb
add
xchg
jecxz
inc
push
lods
inc
inc
sbb
mov
sarl
add
js
cmp
jl
xchg
jecxz
repnz
insl
jae
xchg
in
outsl
scas
push
bound
stc
push
aaa
add
sub
aad
jo
sbb
scas
cwtl
adc
jmp
sbb
xchg
jbe
jns
cs
mov
pop
andb
jge
cmp
enter
sub
mov
sbbl
dec
and
mov
pop
sbb
daa
fucompp
insb
jge
insl
push
pop
xchg
pop
inc
bound
mov
lods
iret
lods
std
sbb
mov
loopne
stos
add
sahf
inc
das
dec
lods
sub
dec
and
xchg
shll
out
xacquire
mov
add
insl
testb
in
pop
xlat
std
test
pop
adc
in
xor
in
stc
cld
pop
cmp
pushf
dec
imul
int3
inc
clc
mov
push
js
dec
aas
dec
adc
jg
add
jae
lcall
add
sub
sbbl
sahf
cld
scas
lcall
inc
mov
sbb
mov
pop
adc
loopne
aad
loop
in
inc
into
daa
cmc
popf
mov
out
pop
out
push
pop
lret
shl
add
add
daa
clc
icebp
outsl
inc
in
mov
ss
dec
call
push
ljmp
es
mov
sbb
out
cmp
fcom
and
adc
jmp
pop
leave
and
sahf
pop
and
gs
dec
mov
mov
sub
out
jne
inc
negl
in
loope
std
rol
fs
jno
negb
jns
xchg
imul
sbb
sbb
movsb
ljmp
stos
mov
xchg
pop
xor
or
sbb
rolb
std
daa
jmp
xor
lcall
stos
mov
sub
mov
jne,pt
negb
add
ljmp
mov
pop
arpl
mov
push
sub
fcompl
jmp
sub
clc
and
int3
fs
or
sbb
ret
xchg
push
js
inc
or
ds
popa
in
mov
xor
sbb
loopne
pop
inc
push
lcall
movsb
pop
imul
cli
jmp
out
enter
jp
inc
sbb
lret
ficompl
fstl
push
mov
ret
adc
repnz
es
pop
push
sbb
mov
inc
stos
into
mov
insb
inc
fimull
gs
mov
pop
xchg
adc
dec
fstps
ljmp
imul
mov
adc
sbb
mov
dec
jne
in
in
data16
add
call
nop
scas
lahf
repz
pop
push
pop
pop
cs
negb
popa
cltd
jnp
and
jge
loopne
pop
dec
call
test
scas
mov
cld
pusha
push
inc
mov
ret
cwtl
fwait
mov
int
enter
xchg
les
stc
push
sub
mov
xlat
cwtl
shrb
xlat
lret
fcoms
xchg
lret
fcmovne
sbb
loop
jne
scas
adc
xor
sbb
inc
xor
or
orl
inc
dec
shrl
cli
lret
push
rcrl
clc
lahf
aas
lods
cwtl
mov
push
mov
ffree
xchg
and
sub
aaa
cwtl
popa
fs
lods
push
mov
out
insb
xor
adc
orb
sbb
div
and
pop
fwait
or
push
orl
pop
mov
mov
push
xchg
sbb
pop
jl
mov
mov
jae
inc
lds
mov
fcmovu
pop
into
push
movsb
sub
mov
cs
xlat
or
xchg
sub
xchg
pop
icebp
aas
push
je
rcrb
in
das
movsb
jns
cmp
bound
push
and
js
inc
repz
orps
sbb
out
and
sbb
daa
mov
cmp
test
xor
jp
mov
pop
stc
out
or
sub
les
les
mov
add
daa
in
je
sbb
pop
xor
push
ret
inc
sub
lods
xchg
mov
xor
ss
xchg
jns
adcl
lcall
ror
add
bound
add
mov
sub
sbb
adc
mov
pop
mov
aad
push
das
fsubs
lahf
push
mov
jge
push
mov
leave
popa
decb
jmp
push
dec
addr16
lods
cmp
cltd
cld
inc
mov
bound
movsl
or
inc
adc
sbb
or
fdivrl
cwtl
js
cmp
pop
mov
stos
lcall
stc
cmp
int3
adc
f2xm1
fdivrl
mov
mov
mov
lret
xchg
insl
lret
cmc
jno
or
or
push
or
mov
hlt
sbb
les
cmp
push
xchg
inc
in
jbe
sub
mov
cmp
popf
les
adc
mov
rcrb
outsb
xor
mov
xchg
leave
add
repnz
push
lret
adc
sbb
push
push
dec
enter
cmc
imul
cmpsb
sarb
push
pop
pop
inc
cmp
repnz
adc
pop
and
xchg
cmp
repnz
leave
mov
out
dec
sbb
mov
jmp
pop
mov
add
mov
or
mov
out
nop
xchg
sub
stc
xor
pop
jbe
imul
nop
jns
adc
clc
cwtl
ljmp
stos
pop
push
pop
nop
or
addr16
sbb
scas
icebp
jns
pop
mov
xor
xchg
and
mov
inc
push
divl
fidivrs
cmpsb
sbb
cs
and
add
or
sbb
xor
out
lcall
cmp
sti
clc
adc
subl
sbb
xor
push
sbb
popa
lods
jnp
add
cmp
outsl
daa
mov
xor
mov
dec
je
dec
mov
jp
cmc
sti
push
lcall
fwait
aad
cwtl
mov
je
xor
lods
scas
shrl
fs
and
jle
cltd
mov
jge
xchg
fwait
mov
push
push
jg
mov
js
in
pop
xchg
cmp
or
cmp
jno
add
lret
dec
lret
hlt
test
loopne
and
std
mov
aam
mov
loop
lahf
clc
shll
int3
daa
leave
pushf
js
jne
sti
xchg
cmp
or
daa
cltd
pop
xlat
cmp
cmp
or
and
sub
fiaddl
cwtl
rcll
xor
fdivrp
bswap
test
xchg
mov
aad
shrb
ror
xor
cli
xor
cmp
movsl
push
cmp
mov
sbb
push
je
lea
xor
repnz
add
pop
lret
ja
push
cmp
mov
cmp
jno
add
iret
hlt
push
mov
aam
cmc
push
mov
add
pop
in
cli
call
inc
push
aas
cmp
shrw
jnp
cmp
push
push
sahf
movsl
push
mov
js
insb
les
jnp
xchg
push
jo
loopne
xor
into
inc
mov
std
ds
push
test
sbb
les
adc
fwait
stc
xor
add
cmp
push
jnp
out
mov
mov
push
pop
add
push
sar
fwait
sahf
aad
fisubrl
shlb
add
adc
mov
addr16
and
sbb
jmp
fdiv
lods
test
inc
or
hlt
mov
xor
nop
mov
and
loopne
insb
inc
cltd
arpl
cmpsb
sub
jno
outsb
mov
jae
roll
lds
dec
dec
xchg
addr16
mov
cmp
sti
jo
dec
dec
sub
xchg
testl
mov
xchg
sbb
into
jnp
cltd
mov
sub
add
mov
push
ja
sbb
xchg
sbb
cmpsb
call
das
sbb
bound
xchg
jg
inc
mov
xor
addr16
dec
sbb
lods
cmp
push
sbb
jbe
scas
or
clc
pop
dec
aaa
or
sbb
mov
ja
dec
mov
jmp
rcrl
rorb
cmpb
ljmp
xchg
imul
into
xchg
fstl
std
mov
testb
sbb
inc
test
ret
mov
out
cld
pop
push
in
repz
divl
cmp
lret
lret
pop
gs
call
adc
sahf
aas
xchg
mov
scas
mov
jno
adc
push
int
mov
pop
insl
testl
or
pop
test
mov
in
test
dec
sbb
fwait
xor
jp
push
clc
jnp
out
xor
jnp
cld
sub
jb
into
sbb
in
stos
pop
repz
imul
stc
mov
mov
jle
cmp
ret
subb
cwtl
pop
xor
in
mov
popa
pop
mov
ret
bound
jae
jmp
call
mov
or
or
jb
pop
lahf
out
sbb
mov
jecxz
xorl
outsl
mov
mov
add
jb
rclb
sahf
mov
mov
into
leave
lock
shlb
imul
lods
pushf
les
sti
cwtl
mov
sbb
add
sbb
call
inc
pushf
lds
ja
rol
add
sub
cmp
lods
jp
arpl
push
out
xchg
and
test
xchg
mov
jns
gs
hlt
into
leave
and
rcrl
dec
push
cmc
push
data16
ja
jbe
and
aam
add
out
mov
mov
cs
cmp
loopne
fsub
push
hlt
in
adc
push
jns
jno
pop
clc
add
mov
or
loopne
data16
cmp
or
ds
or
jnp
cltd
fcmovnbe
outsb
in
xchg
jmp
outsb
or
clc
insl
ja
push
fildll
in
jle
push
call
add
loop
imul
jne
pop
in
js
jmp
or
enter
outsb
pop
mov
add
xor
inc
das
pop
daa
repz
cld
lods
jle
leave
cmpsl
loop
loope
in
or
call
jb
inc
or
aam
mov
xchg
es
dec
jmp
shr
insl
js
inc
or
leave
xchg
and
pop
sbbl
jbe
fists
mov
aad
push
ret
stc
push
cwtl
dec
sarb
xchg
sub
jl
jo
inc
mov
dec
in
or
jle
inc
and
pop
out
mov
jp
xchg
mov
push
push
out
jae
lods
popf
scas
mov
stc
xchg
insl
cmpb
in
loop
add
mov
push
int3
cmp
js
mov
jns
cmp
xchg
lret
push
fs
mov
push
add
jg
xchg
nop
rorb
or
je
adc
jo
lahf
popf
outsb
out
mov
xchg
repz
mov
or
lret
xorl
pop
lods
ltr
clc
jbe
push
out
aaa
push
pushf
sub
xor
data16
mov
adc
mov
adc
lahf
sub
js
pop
ret
dec
mov
test
push
fnstcw
xchg
aaa
jle
xchg
xlat
shlb
mov
cmc
dec
jmp
ss
int
mov
xchg
push
testl
jmp
add
rolb
jnp
jo
addl
ja
out
pop
shll
push
loopne
out
icebp
iret
div
js
aaa
mov
add
test
popf
and
cmp
or
cmpsb
pop
nop
outsl
mov
jo
sbb
xor
push
jno
cmp
sub
lods
mov
sbbl
insb
lock
lahf
das
sbb
push
and
loopne
in
cmp
out
lods
adc
icebp
jbe
mov
mov
scas
imul
mov
pushf
fwait
mov
adc
dec
add
lahf
in
jns
cli
rolb
loop
dec
inc
shrl
cmp
mov
push
stc
jb
loop
aad
mov
and
pop
push
xchg
mov
dec
jo
ret
jae
jno
pop
xchg
adc
ja
push
outsb
popf
jb
ror
push
in
jmp
dec
nop
mov
in
fnstcw
dec
pop
es
cmp
out
enter
push
mov
mov
insl
dec
mov
enter
adc
ja
or
out
push
and
mov
dec
push
inc
pop
test
fwait
add
pusha
mov
cmc
xor
jg
std
fsubrp
jmp
xchg
push
jle
sbbb
imul
and
iret
lcall
dec
push
jecxz
sbb
hlt
adc
xor
xchg
adc
push
into
push
xchg
jge
movsb
dec
and
stos
xlat
push
mov
jecxz
pop
jge
mov
and
mov
pop
repnz
inc
test
mov
jmp
imul
iret
mov
dec
sub
mov
dec
mov
mov
shlb
es
adc
xlat
push
or
fisttpl
imul
ja
lds
xchg
fisubrl
inc
ja
jbe
lret
mov
icebp
mov
sbb
cltd
inc
add
stos
nop
mov
out
in
loope
lret
push
test
fisttpl
xchg
xor
ficomps
add
aaa
repz
stc
imul
jns
aam
insl
pop
clc
lock
div
jmp
xchg
bound
jge
mov
xchg
dec
mov
mov
cmpsl
aaa
jg
push
aam
or
cmpb
adc
cmp
into
pop
outsb
stc
cs
and
shll
cmp
xchg
out
out
mov
js
std
fistps
fcmovnb
in
lods
negb
jle
retw
add
jmp
and
cmc
xlat
call
or
mov
rorb
hlt
xor
outsb
xor
test
mov
int3
std
lahf
in
xchg
fs
inc
xchg
pop
inc
push
scas
xlat
inc
js
push
addps
popa
addr16
sub
jge
xor
mov
and
xor
cmp
jnp
or
mov
mov
sahf
mov
xor
daa
lret
xchg
aaa
sub
in
fsts
movsl
jg,pn
ss
jmp
out
inc
loopne
dec
cs
xchg
repz
jge
in
and
lcall
shl
mov
mov
xchg
int3
lahf
push
or
mov
or
inc
xor
or
add
cwtl
aam
adc
pusha
rclb
jmp
scas
data16
fcompl
or
inc
shlb
cmp
shl
lock
mov
test
lcall
imulb
ficoml
call
or
push
sub
xchg
scas
stc
xchg
in
dec
std
out
mov
fdivrl
incb
inc
cmpsl
sub
out
inc
roll
inc
jns
sub
jns
xchg
das
stc
dec
arpl
imul
dec
adc
sti
push
dec
test
test
arpl
pop
jp
xor
push
xor
stos
icebp
notl
popa
jge
push
dec
cmp
loope
ficompl
call
adc
jb
ljmp
stos
sbb
hlt
cmp
int3
fs
jge
mov
sarb
mov
fidivl
leave
or
ja
shll
adcb
inc
pop
jecxz
xor
mov
or
jmp
jnp
fsubrl
cmc
outsb
fistpl
addr16
loope
jl
in
cmc
cmp
xchg
push
fnstcw
adc
sub
and
or
cmp
adc
cmp
stc
xor
xchg
pop
inc
push
inc
jge
movsb
test
sarl
jl
or
addl
and
cmc
jbe
orl
ret
addr16
lcall
stc
xor
test
cmc
mov
mov
pop
mov
add
mov
jno
das
icebp
mov
mov
mov
xor
mov
jno
rolb
cwtl
dec
xchg
xchg
or
fsubp
les
pop
xchg
das
sub
push
shll
or
lret
jne
loope
and
sbb
xchg
add
jb
les
and
adc
jmp
pop
leave
insl
fdivrp
and
xor
or
pushf
repz
lret
adc
mov
inc
push
push
in
mov
mov
sti
call
mov
cwtl
jns
test
xchg
sbb
ret
subl
mov
sub
push
jl
popa
sub
mov
aas
adc
in
inc
in
jns
int
push
push
dec
mov
repz
push
cmp
in
outsl
push
sti
jbe,pt
enter
xchg
insb
add
ja
adc
pop
add
sub
push
xor
jns
or
pop
mov
lds
xor
pop
cmc
lret
ret
mov
incl
or
dec
cltd
movl
and
test
loop
into
push
and
pop
sbb
xchg
or
dec
in
adc
cmp
push
shr
sub
mov
pop
mov
arpl
dec
mov
push
cli
xchg
fwait
and
pop
or
mov
xor
sbb
lret
inc
gs
outsl
push
pop
xlat
or
xchg
loope
and
sahf
addl
cld
fidivs
inc
xlat
test
int
sti
ljmp
mov
adc
jnp
mov
popa
adc
int3
stos
add
sub
fdivp
popa
fdivrl
lret
push
leave
pop
jp
mov
out
repz
in
popf
sub
test
pusha
adc
out
cmc
xor
sbb
sub
je
cmp
aas
xchg
lock
in
fmuls
xor
mov
lret
cmpsl
rol
mull
das
clc
into
test
inc
shll
out
cmpsb
aam
movsb
mulb
in
sub
aad
clc
and
addr16
roll
gs
jno
repnz
gs
add
cmp
ja
incb
clc
aaa
adc
ret
shll
xchg
out
mov
cmpsl
or
fs
shll
or
bound
mov
mov
mulb
sbb
adc
subb
mov
and
xchg
cmp
pushw
jne
pop
enter
jmp
push
in
inc
sub
fnstsw
mov
das
in
stos
sbb
fcoms
mull
inc
popa
jb
push
sub
add
mov
out
jmp
hlt
into
pop
loop
jno
add
pop
das
sbb
test
test
mov
jo
cltd
jno
xor
sbb
stos
std
pop
leave
push
cmp
cmpsl
inc
hlt
mov
xchg
push
sub
inc
mov
and
jne
imul
sub
pushf
xor
loop
dec
test
sub
lret
and
lock
fidivl
lea
das
out
insl
jl
mov
inc
test
or
add
cmp
push
cltd
dec
and
pop
stc
sahf
or
fbstp
scas
aas
cld
mov
push
cmp
pop
push
pop
icebp
push
xchg
outsb
or
aas
and
adc
nop
ficomps
mov
lahf
cmp
pop
fstpl
sub
lock
int
or
gs
ja
jl
test
loopne
iret
sbb
jp
push
sbb
sbb
cmp
aas
and
cmpsb
dec
sbb
mov
mov
iret
mov
fs
call
add
mov
mov
jge
loope
mov
adc
ret
addr16
ja
lods
arpl
ljmp
pushf
scas
leave
sub
sarl
mov
ror
xchg
sar
cmp
imul
xchg
pop
loopne
or
xor
cmc
ret
loopne
outsl
cli
enter
out
pop
sbb
adc
imul
sub
pushl
pop
out
clc
add
clc
gs
cltd
fwait
lcall
cmpsl
inc
add
pop
and
mov
in
push
fildll
mov
ret
loope
inc
push
cmp
xor
sbb
dec
mov
push
out
add
jg
daa
sahf
test
xor
rcrl
frstor
lret
sub
sti
mov
inc
xorb
pop
iret
push
or
into
test
lods
add
stos
adc
cmp
shrb
mov
mov
add
lahf
lahf
mov
in
mov
lods
adc
sub
popf
pop
cmovl
imul
sbb
pop
jno
mov
add
in
jp
push
addr16
xor
subb
cwtl
dec
cltd
stos
clc
fs
adc
pop
insb
push
outsb
test
dec
loop
dec
cmpsl
push
dec
add
add
cs
ja
xor
lea
xor
out
loop
or
mov
leave
test
mov
ret
cmp
add
rolb
and
stos
aaa
lock
notb
or
mov
scas
in
loop
mov
lds
outsl
test
dec
int
pop
and
fisubl
mov
pop
push
lahf
lret
mov
lea
jne
push
cld
or
seto
sbb
std
mov
pop
pop
xor
icebp
pushfw
inc
and
xchg
ds
pushf
ror
pop
push
push
divb
add
jo
lods
xchg
mov
fcompl
ficompl
or
outsb
mov
and
shrb
cmc
out
xor
mov
push
mov
out
dec
jb
shlb
in
push
fst
mov
pop
int
mov
movsl
xchg
fadd
imul
xchg
int
lahf
adc
dec
lock
mov
enter
stos
fwait
ds
sub
cmpsl
mov
dec
jns
dec
pop
dec
mov
and
mov
out
mov
jg
in
pushf
int
inc
shlb
imul
jb
push
imul
in
jns
pop
ret
jne
sub
shll
dec
insb
pushf
xchg
ljmp
pop
mov
das
sub
push
hlt
adc
orb
adc
xor
inc
adc
test
dec
pop
outsl
xor
dec
fists
sub
aam
dec
dec
aaa
mov
shl
cmp
push
out
dec
int
sub
xor
fidivs
push
dec
adc
imul
stc
dec
in
fistl
stos
adc
or
rorb
mov
push
add
push
in
lds
push
xchg
jl
cwtl
pop
push
sarl
inc
dec
add
stos
jp
xorl
and
insl
add
inc
mov
pop
call
cmp
out
jmp
int
mov
xchg
test
mov
cmp
pop
cmp
outsb
mov
mov
xchg
push
jp
pop
mov
mov
clc
fmul
pop
cmpsl
pusha
pop
hlt
andl
or
inc
adc
cmp
sbb
lods
or
shrl
into
pop
sbb
cltd
dec
pop
nop
outsb
daa
daa
lds
xor
and
push
mov
clc
add
cld
sbb
shl
xor
aaa
jmp
ljmp
and
ja
shll
cmpb
insb
mov
dec
ret
pop
inc
push
outsl
div
push
push
adc
stc
push
call
jnp
mov
sub
stos
int3
push
cs
xchg
jmp
sarb
xor
in
imul
fists
repz
jne
jmp
xchg
in
jg
inc
xchg
cmp
imul
lcall
addr16
and
jbe
mov
inc
dec
aam
ret
filds
pushf
xchg
cmpsb
pop
das
or
repz
jb
inc
aam
mov
mov
je
sbb
aas
jmp
call
in
fwait
lret
mov
xchg
pop
test
lea
mov
roll
nop
fwait
lods
jp
adc
aad
aaa
inc
mov
mov
subb
mov
std
aas
loop
fisubs
pop
cmpb
add
int3
add
rcrl
movb
xor
test
mov
ret
frstor
sti
outsb
lahf
push
pop
add
sub
inc
inc
xor
fwait
push
test
iret
pop
add
dec
std
jp
sub
pop
aaa
or
cmc
add
ljmp
into
push
mov
and
mov
mov
xor
popf
popf
idivl
dec
push
pop
dec
add
sbb
lret
xchg
in
pushf
cwtl
xchg
imul
mov
push
push
sbb
das
pop
enter
fmulp
add
out
cmp
push
hlt
arpl
xchg
push
push
sbb
ret
sbb
sub
in
arpl
cwtl
pop
lds
mov
aam
sbb
cmc
dec
xchg
imul
sbb
adc
jecxz
mov
xchg
cltd
fwait
jns
xor
xor
in
std
mov
fdivrs
or
cmp
mov
mov
or
mov
xchg
adc
pop
imul
cmp
xor
or
rcrl
pop
lock
cmp
xchg
aaa
outsb
or
loop
mov
cs
lock
mov
hlt
jo
outsw
inc
inc
aad
adc
fists
pop
xor
jmp
adc
or
scas
cmp
test
mov
dec
addr16
adc
mov
lret
gs
testl
dec
pop
aam
push
in
inc
lods
nop
lahf
outsb
stos
pop
push
aam
out
pop
mov
mov
adc
sbb
sub
jb
ret
add
jmp
sti
mov
inc
test
cli
sysenter
cmp
pop
je
ret
aad
add
sbb
or
in
fcoml
push
fcmovbe
mov
in
test
dec
jnp
inc
and
push
test
mov
jecxz
jmp
inc
push
push
dec
sbbl
mov
pop
clc
ficompl
mov
xor
xchg
add
sarl
addb
inc
stos
pop
and
js
js
adc
orl
sub
mov
aam
fdivr
fadds
cwtl
cs
mov
sbb
sbbl
clc
cs
adc
mov
mov
xor
mov
adc
push
sub
jle
aaa
outsb
scas
xchg
rol
cltd
xlat
pop
cltd
aaa
push
jl
cmp
test
cwtl
sbb
call
ret
xchg
clc
mov
sub
mov
xchg
enter
jecxz
movb
push
sub
inc
xchg
cmpb
int3
mov
mov
loop
pop
imul
cwtl
sub
sbb
cmpsl
sti
pop
or
cmp
fbstp
into
jne
xchg
push
andb
lea
inc
arpl
movsl
cmp
shr
repz
out
or
out
out
and
sti
setge
add
xchg
adc
sub
mov
mov
add
push
mov
cltd
fwait
jns
xchg
and
pop
stos
mov
xchg
xlat
mov
fadds
adc
das
sbb
mov
loop
sbb
jecxz
das
sbb
xchg
push
pop
push
sub
jae
inc
sbb
gs
xchg
clc
mov
aad
xor
adc
pop
mov
fcoml
inc
mov
xchg
mov
xor
pop
lods
xchg
cli
outsb
add
xorl
xor
jae
adc
rorb
add
je
lret
cmpsb
mov
adc
mov
stos
js
xchg
mov
jo
inc
xchg
ja
mov
mov
int3
mov
fs
and
mov
imul
jg
jae
sub
mov
cmpsl
sti
jmp
xchg
xor
xchg
aaa
in
hlt
iret
incl
push
out
clc
xchg
cmp
subb
dec
mov
test
xor
popa
and
mov
cmc
movsb
cld
ljmp
sub
aas
clc
xchg
inc
fcompl
xor
xorl
shlb
fnstcw
test
xor
sti
cwtl
push
pop
mov
inc
notb
idivb
js
pop
fdivp
xchg
mov
sub
push
adc
xor
cmc
mov
in
loop
daa
pop
rolb
mov
pusha
mov
lods
cli
pop
sbb
inc
mov
mov
cmp
dec
xor
loopne
cmpsb
outsb
dec
dec
in
add
cld
push
push
pop
jg
pop
call
adc
js
insl
cmp
cmpl
inc
aaa
mov
pop
fiaddl
jmp
mov
dec
dec
lret
adc
xor
push
jae,pt
inc
sahf
add
ret
inc
aas
sbb
iret
jno
imul
sbb
sahf
outsl
pusha
dec
repz
xchg
and
mov
subb
xchg
stos
into
bound
mov
mov
inc
adcl
adc
loop
jmp
and
mov
int3
dec
rcll
xchg
mov
xchg
test
sub
pop
es
mov
push
mov
jmp
inc
jbe
movsb
mov
push
push
and
cld
shl
or
lret
and
out
inc
jp
xchg
ret
xor
loop
or
popf
add
pop
mov
and
or
push
mov
jmp
mov
arpl
roll
sbb
je
jbe
adc
pop
jmp
dec
pop
movsb
add
add
cmp
dec
sbb
icebp
insl
sub
test
or
aaa
sbb
cmpsb
mov
jl
jae
nop
pop
inc
in
leave
jecxz
dec
dec
ds
lret
cmp
addl
je
cmp
adc
sbb
test
hlt
jle
mov
lods
inc
and
repz
lds
pop
cmc
aad
sbb
movsl
xchg
jg
out
test
mov
fdecstp
dec
lds
jp
push
jo
or
cmp
scas
jp
out
rclb
inc
das
daa
sbb
in
add
lcall
ljmp
push
inc
daa
adc
popf
mov
daa
sbb
sbb
arpl
js
iret
or
sbb
or
test
pop
scas
pushf
in
mov
inc
xchg
cmpsb
mov
mov
add
xor
xchg
cmp
xchg
jmpw
arpl
cmp
sbb
xlat
jno
insb
pop
and
adc
mov
aad
xor
push
mov
bound
add
aad
in
mov
adc
mov
xchg
movsl
lret
xor
cmovae
in
imul
ret
repnz
sub
aaa
fnsave
mov
lods
mov
mov
push
lahf
aaa
adc
outsl
adc
ss
rcr
fbld
and
push
sbb
or
idiv
cli
sbb
add
in
insb
fistpl
stos
inc
inc
push
mov
loopne
mov
mov
lods
addr16
sbb
inc
loope
cwtl
sahf
push
in
sti
mov
fisttpll
leave
xchg
and
xchg
imulb
mov
leave
lods
mov
movsl
sub
fstps
push
in
mov
leave
arpl
lds
pop
adc
in
sbb
rolb
test
adc
shrl
js
in
notl
hlt
push
cmc
cmp
das
mov
cmp
fbld
pusha
test
int
mov
inc
pop
push
repnz
lret
pop
pop
call
adc
mov
sub
hlt
push
push
or
mov
leave
or
rcll
push
and
or
mov
xchg
clc
unpcklps
aam
cmp
fcoml
add
sub
fs
shlb
bound
adc
fdivrs
jg
ljmp
mov
pop
js
jns
mov
or
enter
mov
hlt
xlat
pushf
out
insb
cmp
jno
pushf
fidivrl
and
xor
mov
out
lods
and
push
cs
sti
sbb
mov
iret
ss
or
add
cmp
jae
dec
cmp
and
cmc
aad
mov
es
xchg
sti
or
xor
cld
xor
mov
loope
fimuls
push
jae
in
adc
adcb
jnp
fmull
xchg
lcall
dec
xor
xchg
stc
jg
outsb
add
pop
push
inc
mov
dec
ret
cmp
adc
int
cwtl
push
xchg
cmp
jp
rcll
lgs
js
mov
int
int3
stos
insb
mov
jle
inc
push
ret
shlb
test
bound
adc
rcr
insb
fldl2e
push
mov
mov
daa
mov
lods
pop
aam
ljmpw
rcr
in
dec
push
pop
xchg
xchg
mov
mov
push
arpl
dec
dec
jns
xorl
inc
push
test
cmp
inc
in
je
sub
in
cmp
clc
jle
pop
mov
push
loop
mov
call
dec
test
dec
mov
movsb
iret
lret
testb
push
adc
pop
xchg
or
adcl
ret
dec
arpl
and
xlat
insl
cmp
xchg
sub
add
cmpl
aas
clc
adc
sub
pusha
inc
sbb
or
sub
sbb
repz
push
mov
fcoml
inc
sbb
test
cmp
sub
mov
into
dec
dec
mov
xor
mov
pop
dec
into
push
jne
lock
lods
mov
pop
push
adc
sub
add
xchg
add
and
adc
mov
or
dec
repz
mov
add
mov
push
mov
mov
xchg
pcmpgtd
ds
pop
sbb
push
adc
dec
in
mov
shlb
gs
push
cmp
jae
mov
std
pop
nop
in
cwtl
and
jl
lret
pop
lret
hlt
fsubl
and
pxor
dec
cmpsb
arpl
ljmp
int
push
inc
push
push
movsb
insb
scas
sbb
in
adc
insl
test
xchg
add
mov
xor
xor
fstpt
in
popa
xor
cmp
sub
or
add
inc
cld
pop
pop
negb
push
incb
test
test
xor
adc
mov
ljmp
je
mov
dec
ja
addr16
and
jl
pusha
xchg
adc
xor
jo
push
inc
and
popa
ljmp
popa
sbb
mov
mov
add
negl
add
push
mov
jne
xor
mov
fs
int3
ds
pop
xchg
dec
push
test
jnp
and
mov
shll
paddw
shr
jno
jecxz
xor
mov
fs
cmp
outsb
pop
jp
aad
mov
inc
xchg
xchg
rorb
sub
lods
ret
in
and
repnz
pop
leave
iret
or
and
or
loop,pt
out
xor
jns
rolb
int
arpl
bound
sub
xchg
mov
cltd
dec
stos
jae
enter
scas
dec
inc
mov
aam
fwait
dec
xor
jg
fnstsw
fldl
outsb
pop
mov
cmp
loopne
popf
rcll
andl
xor
shr
pusha
mov
xchg
jge
cmpsl
fsubrl
mov
sbb
mov
cmc
pop
inc
mov
leave
lds
mov
movsl
or
mov
jle
popf
je
or
sub
test
cmp
adc
add
adc
loopne
sbb
outsb
je
fdivp
sbb
dec
mov
xchg
lods
popl
mov
imul
push
divb
jbe
add
adc
pop
add
out
sub
insl
test
adc
jecxz
mov
push
jmp
jne
ror
jns
test
sbb
xchg
jbe
jo
xor
sub
aad
fistps
sbbb
sbb
dec
loope
jae
fldpi
out
mov
adc
pop
lods
out
js
push
pushf
mov
adc
jo
mov
mov
mov
rorl
push
testb
dec
adc
je
add
frstor
mov
xchg
fidivs
mov
sub
hlt
outsb
xor
stos
lret
pusha
adcb
pop
mov
xlat
iret
cmpsb
les
jo
aam
xchg
repz
xor
adc
jg
dec
push
shlb
sub
push
mov
out
jo
mov
dec
sahf
sbb
push
mov
pop
pop
mov
pop
pop
jo
cmpsb
and
mov
fucom
clc
test
cmp
sub
test
int3
lock
lret
sti
jb
mov
fadds
in
ret
xchg
add
scas
dec
sub
mov
in
in
repz
jae
cltd
arpl
mov
pop
test
jp
sub
sbb
dec
ret
xor
jae
mov
clc
jg
cmp
jle
dec
movsb
addr16
clc
lock
js
mov
insl
xor
and
in
std
or
pop
ret
push
inc
lahf
int
xor
mov
cmp
in
or
ret
add
pop
or
mov
loopne
pop
mov
sbb
imul
ds
cmpsl
pusha
leave
in
pop
dec
loop
fldcw
mov
jle
ljmp
dec
sub
stos
nop
sub
inc
insb
notb
jge
lahf
jo
mov
mov
or
xchg
popa
lods
add
frstor
sbb
mov
aad
int
in
xchg
filds
cld
gs
into
mov
and
add
cmp
xchg
pop
dec
cmp
popf
cmpsb
das
inc
lock
lds
cmp
cmpl
data16
mov
sbb
sub
out
push
mov
cmp
pop
adc
jp
cmp
das
push
insb
xchg
fldenv
push
ss
dec
push
jp
pop
mov
imul
shll
enter
and
xchg
cmp
mov
and
xchg
adc
fwait
arpl
rorl
ds
pop
and
xchg
cwtl
xchg
popf
sub
aam
leave
dec
es
outsl
push
mov
inc
shll
push
sbb
test
cmc
fmul
imul
repz
rol
stc
sbb
adc
cmp
ret
sub
dec
inc
push
dec
call
ss
hlt
xor
add
sbbl
insl
mov
repnz
mov
cli
and
mov
xchg
dec
or
jl
popf
imul
test
pop
jo
sbb
hlt
lret
aas
adc
roll
lcall
jb
push
adc
gs
xor
mov
lock
adc
jp
mov
cltd
out
push
inc
mov
jle
repz
sahf
xchg
test
cwtl
fwait
mov
iret
test
inc
or
inc
lret
in
mov
pop
ret
pop
mov
adc
dec
fiaddl
lods
pop
inc
inc
xchg
xor
movsl
dec
xchg
daa
scas
cmpsl
pop
sub
mov
stos
jb
sarb
jns
jmp
shll
mov
and
gs
lock
scas
je
push
scas
push
or
xorl
mov
sub
lcall
dec
mov
ret
int3
push
push
in
testb
mov
faddl
rcrl
fnsave
mov
and
sbb
sub
mov
lret
sbb
and
push
inc
xor
pop
sbb
sub
add
std
xchg
daa
cli
lds
mov
imul
aaa
repnz
in
mov
sahf
mov
cmpsb
xchg
xchg
sbb
imul
jne
jge
inc
inc
cltd
cmp
ja
lods
fs
pop
idivb
out
out
leave
lahf
cs
rcll
mov
fwait
insl
ja
adcb
sbb
sti
xchg
cmp
popa
inc
xor
mov
lahf
aaa
lret
mov
push
push
add
sbb
addb
mul
add
dec
jl
and
pop
push
scas
lret
test
aas
or
xor
and
jns
ret
xor
ds
inc
ret
jecxz
add
sbb
popa
loopne
aas
scas
mov
ljmp
xchg
mov
daa
pop
and
mov
push
rcr
xor
insl
xchg
jo
xchg
xchg
or
inc
leave
sti
aam
or
hlt
jecxz
mov
daa
ljmp
movsl
or
leave
pop
cmc
pop
jle
stos
lahf
cmpsb
popa
lcall
add
adc
mov
mov
inc
les
andl
ret
inc
ret
pop
imul
jnp
test
mov
jle
adc
movsb
push
mov
xor
test
fmul
std
xchg
or
pop
std
scas
pop
inc
xchg
outsl
pop
imul
rol
std
addb
xchg
or
adc
inc
xchg
data16
in
loope
decb
fwait
inc
les
arpl
sarl
scas
fbstp
pop
andl
mov
xor
jg
std
xchg
icebp
es
mov
add
push
jae
jb
and
fsts
pop
inc
pop
adc
add
xor
cltd
push
pop
ljmp
sbb
scas
enter
outsl
mov
pop
xchg
dec
push
sub
imul
or
aam
dec
enter
or
stos
pop
les
repnz
iret
imul
adc
inc
ds
in
or
dec
add
mov
daa
test
adc
lea
jns,pt
mov
sub
or
pushf
fsubrs
inc
aam
pop
xchg
pop
jno
outsl
xor
xor
xchg
jae
xor
add
sub
cmpsl
and
mov
or
push
jmp
in
mov
mov
jne
add
jg
pop
inc
push
sbb
pop
add
ret
mov
push
sbb
mov
data16
inc
shll
sbb
sahf
inc
xlat
inc
cwtl
dec
add
shl
xchg
outsb
dec
test
mov
test
jmp
lret
sbb
xor
push
fwait
pop
loopne
cmpsl
das
addr16
inc
sbb
jge
cmc
call
mov
out
cltd
xchg
or
inc
mov
jp
jnp
push
mov
fstpt
adc
fistps
mov
inc
les
incb
jnp
pop
pop
or
jnp
loope
dec
fsubrs
cwtl
mov
add
or
mov
add
adc
pop
pop
test
pushf
cwtl
pop
and
data16
add
stos
loop
repz
test
decb
pop
pusha
cmpsb
and
xchg
scas
xchg
mov
decl
mov
shrb
lcall
ja
setae
xor
or
sbb
fcmove
cmpb
das
push
pusha
adcb
sbb
call
cmp
fisubl
mov
test
mov
enter
push
mov
push
leave
movl
je
pop
ss
inc
pusha
mov
cltd
cmp
dec
stc
xchg
mov
cld
in
cmp
mov
push
inc
adc
call
xchg
and
dec
lcall
les
add
gs
test
mov
dec
clc
loop
js
fcmovnbe
add
jg
lret
gs
dec
shlb
pushf
in
test
xor
push
popf
clc
sbb
gs
dec
stc
mov
and
xor
aaa
and
jecxz
ret
shr
inc
pop
fidivrs
test
adc
sub
xchg
ficomps
and
inc
mov
mov
lds
frstor
push
rclb
xchg
jb
mov
addr16
and
jg
jne
pop
mov
daa
dec
xor
cmpsb
ja
cmp
dec
cmp
sahf
test
in
imul
mov
jo
inc
add
pop
shrl
and
push
add
fcoms
dec
fs
mov
sub
jno
pop
repz
mov
fdivr
xor
out
mov
mov
add
cmpsl
and
mov
dec
cmp
push
xor
imul
sar
dec
fsts
sbb
pop
and
scas
enter
push
xchg
imul
daa
mov
negb
outsl
sub
in
icebp
scas
cmovbe
cld
stc
sbb
sbb
popa
inc
jle
mov
fbld
in
push
outsl
test
clc
sbb
sub
dec
mov
enter
mov
fs
pusha
repnz
sub
mov
mov
mov
mov
andb
mov
popa
push
cmp
xchg
fdivrp
xchg
adc
nop
xlat
cmp
xor
mov
mov
loope
stc
call
or
mov
aad
les
cmp
das
and
lret
pop
or
xor
xor
lcall
insb
movsb
nop
pushf
and
inc
adc
or
dec
push
mov
push
lods
ss
outsb
dec
sbb
push
mov
mov
add
mov
mov
aam
add
pop
pop
in
or
cmp
loop
and
mov
test
pop
mov
rdmsr
bound
stc
lret
sbb
out
stc
testl
lods
adc
xchg
clc
jno
loopne
loopne
fdivl
push
xor
push
jnp
mov
insl
out
pop
repnz
mov
in
loopne
or
pop
int3
leave
fiaddl
jmp
sti
mov
jbe
out
lock
mov
imul
mov
jo
insb
cmp
mov
pop
pop
or
mov
loop
sub
dec
icebp
adc
lods
mov
cmovno
ss
bound
popa
mov
popf
or
repz
push
pop
cmpsl
cs
es
scas
rol
test
push
pop
aam
pop
test
add
sbb
cmp
cmp
xorb
lahf
cs
fmulp
test
xchg
and
clc
out
adc
xor
jae
push
pop
cmc
pop
fsubl
cmpl
xor
or
jle
push
push
outsl
pop
mov
sbb
movsb
jbe
fdiv
rolb
xchg
shlb
lock
mov
push
cmp
adc
arpl
lods
mov
loopne
inc
xchg
pop
sbb
sub
push
sub
ljmp
pop
dec
or
xchg
inc
sbb
daa
movsb
push
enter
cmpsl
mov
sarl
cmp
xor
inc
outsl
mov
das
fistps
inc
in
pop
xlat
fimull
mov
stos
inc
pop
inc
cmpl
and
pop
cmp
andl
outsl
cli
adc
mov
add
movsl
push
inc
xor
leave
or
movsl
push
push
flds
add
ret
pop
jnp
ret
mov
sub
add
sbb
ss
push
outsb
lret
add
stos
adc
movl
dec
pusha
in
push
push
mov
out
cld
push
or
jno
int3
sbb
pusha
les
adc
sub
xchg
ss
cmp
jae
aas
xor
fstps
pop
and
push
mov
add
xchg
jle
adc
or
mul
sti
data16
insb
mov
ret
mov
into
push
jo
call
leave
lret
fsubrs
push
inc
shl
jbe
pop
lret
and
imul
inc
sbb
pop
popa
mov
leave
jecxz
in
jae
mul
xor
clc
scas
sbb
dec
divb
lret
xchg
arpl
pusha
mov
xor
movsl
xchg
arpl
leave
pop
push
xor
pusha
add
mov
and
pop
stc
mov
loope
ficomps
jl
mov
aas
mov
outsb
jns
iret
mov
dec
dec
dec
cmpsb
xchg
mov
loop
and
xchg
adc
fiadds
cltd
sbb
iret
jl
cmp
cmpsb
fistl
lods
dec
and
jp
add
negl
popf
out
add
repnz
rorl
lahf
and
dec
pop
rclb
popaw
dec
out
add
mov
aaa
iret
test
ljmp
inc
mov
gs
out
iret
dec
shlb
nop
mov
mov
rcrb
aas
xchg
push
jg
sub
or
js
jnp
mov
xor
push
fs
xor
loopne
mov
daa
pusha
jbe
add
push
mov
in
addr16
ds
mov
or
fidivrs
pop
push
sbb
scas
daa
mov
jl
pop
pop
stc
sub
inc
inc
cli
out
adc
lcall
cmpsb
jl
and
aad
das
fcom
push
ror
push
ficompl
das
repnz
inc
imulb
shll
add
adc
push
sub
movsl
add
mov
push
pop
xor
ja
add
mov
in
sub
pop
cwtl
xchg
cltd
aaa
aad
dec
and
cmp
inc
lcall
cmpsl
push
lods
aam
jne
cltd
jmp
fsubl
dec
jo
lds
aaa
jecxz
fcom
daa
mov
loop
pushf
jne
add
pop
push
sbb
scas
dec
pop
mov
xchg
ret
in
mov
dec
ss
popf
pop
int3
enter
cmpsl
sbb
push
adc
in
dec
addr16
jg
insb
or
out
mov
push
hlt
or
add
fmuls
sbb
aas
cmc
movsb
in
dec
movsb
sarb
adc
pop
pop
inc
add
popf
cmp
pop
cltd
add
imul
lcall
imul
sbb
jge
aam
inc
loopne
jno
icebp
xor
push
cmp
ss
outsb
mov
mov
daa
sbb
inc
cs
sbb
mov
rorb
leave
out
cmp
pop
into
xor
fcmovu
dec
jmp
aad
mov
mov
repz
or
mov
dec
mov
xchg
mov
call
sbb
or
sub
mov
push
mov
cmp
mov
icebp
pop
lcall
dec
cltd
pusha
push
lods
adc
dec
iret
fdivrs
mov
cwtl
cmp
stos
ret
mov
cmp
inc
sbb
pop
push
pop
push
lods
dec
mov
mov
ficoml
ljmp
jns
and
call
int3
inc
mov
dec
mov
test
cmp
mov
les
adc
nop
js
int3
js
fs
cmpsl
fldcw
cmp
aad
fcomi
fwait
xor
nop
clc
mov
cltd
mov
mov
call
pop
sar
mov
sahf
sbb
lahf
adcb
outsb
add
scas
sti
das
rclb
push
sub
dec
mov
outsl
mov
add
sbb
adc
adc
lret
jge
sti
and
lahf
mov
xor
repz
cmp
lcall
pushf
lds
call
or
je
cmpb
out
leave
mov
jmp
push
xchg
cmp
jp
mov
xchg
pop
je
insl
pop
jmp
push
addr16
inc
lret
ror
fstps
mov
pop
imulb
adc
push
aam
insb
adc
mov
das
jl
pop
ret
adc
inc
stos
dec
nop
cmp
mov
add
aam
mov
xchg
iret
iret
mov
hlt
repz
push
sub
mov
mov
and
pop
fdivrs
push
aas
pop
je
inc
cmp
fnstenv
nop
ret
sbb
mov
pushf
mov
and
cmp
iret
push
jecxz
repz
mov
hlt
sarl
ret
push
xor
inc
push
bound
mov
rcr
jae
fwait
out
or
loope
xchg
icebp
test
jns
int3
test
inc
iret
sub
sarb
sbb
subb
ret
xchg
or
dec
jbe
test
sbb
mov
mov
sub
push
cwtl
add
mov
ja
xchg
mov
and
dec
mov
rorb
xor
push
adc
jns
loopne
fimuls
adc
lret
ret
nop
push
pop
rcrl
rclb
stos
adcb
pusha
mulb
push
je
sub
xchg
jge
mov
sbb
sbb
cmp
xchg
cmpsl
jno
fs
sar
mov
aad
and
jo
jno
jmp
in
fisubs
mov
xcrypt-ecb
cmpsl
lret
push
mov
or
or
dec
pop
fcomps
cmp
arpl
movsb
fidivl
cmp
out
mov
mov
icebp
call
ja
mov
mov
rcr
cmpsl
das
mov
xchg
icebp
and
sub
push
pop
scas
xchg
cmp
pop
jbe
pop
in
sub
insl
pop
aad
outsb
jbe
fnstenv
jnp
lea
cmc
out
stos
lds
movsb
lock
pop
sbb
jnp
xor
sub
add
sub
lds
lock
int3
popf
or
aad
popa
jl
cmp
mov
mov
test
xchg
push
ja
sub
div
movsbl
in
fistpl
inc
je
or
xchg
xchg
jae
mov
test
pop
xor
mov
std
outsl
xchg
outsb
xchg
lret
cmp
outsl
push
sbb
loopne
adc
fnstsw
dec
sub
add
popa
xor
jo
cs
je,pn
sub
mov
add
xor
mov
enter
mov
inc
daa
mov
dec
push
lea
popf
les
rcl
stos
in
push
adc
lret
xor
push
mov
lret
test
stos
xor
and
cmp
or
scas
mov
push
jmp
add
adc
in
cs
imul
push
adc
scas
inc
mov
cwtl
sub
and
arpl
jge
inc
and
les
roll
data16
iret
int
stos
movsl
sbb
mov
mov
xchg
jge
cmp
imul
mov
lods
and
ds
sbb
push
add
inc
in
or
adc
mov
and
mov
iret
iret
mov
jb
mov
push
jne
sbb
out
xchg
aad
push
push
mov
cmp
xor
mov
add
adc
pop
mov
xor
lods
mov
add
mov
into
pusha
shll
shr
push
hlt
icebp
jb
or
pop
mov
xchg
enter
sbb
out
add
inc
sub
cli
jge,pn
ret
jp
mov
nop
dec
sbb
sbb
pusha
mov
pusha
jns
fcmovnbe
imul
jecxz
adc
xor
jb
and
mov
je
fistpl
inc
mov
cmp
scas
add
into
jg
inc
inc
daa
fsubr
int3
decb
bound
stos
out
jge
je
packssdw
shrb
cmp
ja
imul
es
mov
mov
jnp
fmuls
not
adc
repz
imul
pop
mov
cmp
in
test
aad
push
cmp
leave
push
pop
outsb
inc
clc
lds
ret
push
sahf
aam
mov
sub
dec
sbb
mov
jg
cs
jl
es
ret
adc
pop
arpl
and
cmp
jecxz
out
push
push
cltd
sbb
adc
out
mov
cmp
push
js
mov
int
mov
push
stc
lretw
xor
cld
pop
cmp
fildl
imul
imul
or
arpl
fmull
test
cmp
and
pop
ss
mov
and
dec
pop
das
loope
inc
adc
or
int3
std
cld
push
xor
add
mov
sub
xchg
js
repz
add
inc
push
jb
inc
jb
arpl
cld
or
xchg
lds
mov
mov
cmp
add
inc
jns
xor
lds
icebp
add
mov
cmp
inc
loopne
pushf
in
cmpsb
in
jb
mov
and
in
scas
mov
cmp
or
jp
dec
scas
pop
cld
xchg
push
fstl
push
out
mov
xor
push
pop
out
aam
xor
int
sbb
in
out
jno
pmulhw
xor
cmc
hlt
jbe
inc
cmp
mov
push
jge
std
in
fcompl
call
addb
pop
inc
cltd
pop
xchg
or
cltd
jecxz
lods
aas
or
stos
data16
addr16
dec
flds
std
inc
aam
push
cmc
loopne
jp
into
loopne
mov
dec
jo
movsl
dec
jb
mov
test
pop
pop
mov
push
mov
push
xchg
pop
mov
movsb
in
pop
adc
sbb
xchg
fsubs
ja
xchg
test
mov
je
cmp
mov
mov
scas
les
bound
lods
int
xchg
or
lcall
lcall
xor
mov
push
adc
mov
xor
imul
call
cmp
mov
jne
or
push
call
mov
dec
pop
pop
gs
mov
dec
stos
add
rcrl
mov
setg
cli
mov
sbb
and
inc
aas
pop
add
popf
leave
jae
cmp
jle
fs
xorl
cmp
pop
jb
xor
jno
lods
adc
scas
daa
inc
mov
flds
jb
stos
arpl
mov
sub
repz
push
cs
sbb
cmp
roll
aaa
dec
cmp
or
add
loopne
dec
mov
loop
roll
imul
cmp
adc
les
lret
leave
jae
adc
sub
in
stos
popa
xor
adc
sahf
fists
or
adc
addr16
jb
sub
inc
lahf
mov
cwtl
in
mov
pop
aaa
addr16
stos
stc
icebp
icebp
popf
rorb
jl
pop
mov
out
jecxz
inc
dec
lret
or
mov
stos
push
enter
mov
push
lods
adc
lret
jle
xchg
or
inc
dec
adc
fs
and
xor
and
sbb
mov
sub
popa
bound
scas
dec
pop
sbb
mov
jno
nop
and
push
add
fnstsw
jae
mov
adc
ret
mov
xchg
out
icebp
movsb
fwait
shlb
mov
aas
pop
pop
pusha
push
pop
es
push
xchg
mov
stos
jg
xor
ficomps
out
pop
and
jge
jnp
ds
outsb
push
aas
push
mov
xchg
loop
nop
test
out
cmpsl
lret
mov
fildl
adc
or
adc
mov
xchg
push
enter
adcl
mov
mov
test
fdivl
jb
xchg
scas
inc
cs
iret
sti
movsb
ret
rcll
dec
adc
mov
and
xlat
out
xor
pop
pop
incl
xor
or
dec
in
cltd
mov
mov
jle
std
sub
inc
mov
dec
mov
sub
cmpsb
or
sbb
add
std
loopne
rcll
ds
adc
fsubl
and
pop
pop
scas
mov
mov
mov
imul
push
and
fnstcw
out
in
mov
xchg
inc
mov
pop
outsl
jnp
fldenv
adc
sbb
fwait
add
shlb
lds
flds
cs
sbb
lret
xor
pushf
jo
cld
js
js
lock
adc
dec
xchg
mov
mov
push
ffreep
in
xchg
jb
loopne
movsl
cmpsl
imul
sub
xchg
sub
or
hlt
mov
push
pushf
xor
jno
test
popa
lock
je
fidivrl
mov
pushf
mov
hlt
sahf
push
add
cmc
dec
mov
dec
adc
mov
cmc
and
cmp
xchg
jmp
call
fisttpl
into
es
or
add
xchg
bound
out
leave
dec
orl
scas
in
jecxz
push
push
mov
pop
xchg
int3
xchg
cmpsl
push
aam
mov
daa
jne
jo
and
mov
mov
loop
and
jle
add
je
jno
stc
adc
repnz
je
repnz
cld
sbbl
rclb
xchg
int
sbb
xchg
push
xor
lcall
stos
add
loop
mov
add
push
pop
xor
in
enter
sub
dec
popa
xchg
sarb
mov
fnstenv
mov
repz
lret
shll
push
leave
sbbb
out
popf
sub
icebp
rorl
pop
sbb
cmp
cmp
jne
jbe
in
and
xor
and
pop
outsl
pop
jae
push
pop
lods
sbb
pop
test
mov
pop
dec
push
ja
xor
movsb
push
jl
mov
loope
psadbw
sbb
lcall
pop
mov
or
cmp
jb
jl
sbb
ss
xchg
in
mov
dec
jmp
cmpsl
mov
adc
pop
dec
adc
stos
sub
movsb
dec
movsl
mov
mov
sbb
lods
shlb
sub
loop
jp
je
andb
add
xchg
ret
and
sub
inc
jb
ret
pop
dec
aad
pusha
fdivrs
jne
jg
add
addr16
and
or
jge
mov
sbb
test
nop
mov
and
add
bswap
mov
enter
rorl
adc
int3
stc
je
push
or
jo
push
sub
xchg
sahf
js
cmpsl
xor
ljmp
adc
mov
xor
addb
mov
dec
pop
cmp
cli
inc
sbb
dec
xor
stos
loopne
dec
xor
dec
push
dec
movsl
lds
or
push
pop
fdivrs
ds
out
mov
jbe
push
push
test
mov
mov
mov
movsb
div
lret
jp
in
xor
jl
add
xlat
cltd
retw
fs
lea
xor
xchg
stos
mov
rcrb
mov
fisttpll
fldenv
inc
jp
sbbl
push
or
xor
xor
outsb
dec
aad
jb
loope
add
shrl
sub
sbb
nop
jl
and
pop
subb
xchg
cmp
lcall
inc
mov
pop
fisttps
xor
cmpsl
fdiv
push
fsincos
adc
mov
push
punpcklbw
cmp
sbb
dec
jns
mov
dec
sahf
mov
cmp
fucomip
ja
sub
mov
push
mov
ror
mov
fldt
push
cmc
xchg
lods
cmp
sbb
sbb
clc
mov
js
popa
mov
push
dec
sti
rcl
in
inc
push
in
aam
xlat
push
popf
test
and
pop
gs
lret
leave
dec
ds
jno
sub
ret
shrb
mov
mov
dec
sub
mov
loop
inc
bound
and
inc
sarl
repz
sahf
add
fildl
test
aad
mov
xchg
inc
sahf
ret
loopne
mov
xchg
sbb
jle
jge
mov
mov
clc
push
bound
adc
inc
cmp
xor
daa
push
xor
loop
in
sbb
pushf
imul
sar
sub
cmp
shll
inc
inc
mov
insb
cmpsl
ss
pop
adc
xchg
cmpsl
les
aad
pop
or
les
sbb
fidivl
xchg
sbb
rcrl
lock
mov
dec
arpl
lock
or
xchg
pop
sub
rclb
cmp
arpl
scas
sahf
pop
lret
mov
ds
pop
sub
xchg
test
and
push
cmp
ljmp
inc
repnz
pop
dec
cmpsb
mov
pop
push
jae
repz
in
jno
mov
arpl
cmp
add
add
sub
shlb
adc
cmc
jl
cmp
pop
ret
push
enter
sub
cmpsl
jecxz
imul
bnd
fwait
rcll
mov
xchg
fisubrs
add
aam
mov
les
gs
and
hlt
je
pop
mov
test
call
cmc
adc
pop
jle
repnz
lret
pop
stc
mov
xchg
inc
dec
adc
dec
or
adc
xor
iret
dec
sbb
stos
in
ljmp
mov
jle
js
fidivrl
cmp
or
xchg
xchg
xor
mulb
xchg
and
pop
push
jne
mov
rcll
es
ret
push
xchg
test
inc
ret
mov
and
mov
sub
adc
nop
rclb
mov
in
push
xchg
lret
loope
xchg
push
add
push
or
setg
movsl
push
dec
add
sbb
adc
leave
or
push
add
popf
mov
xchg
fs
push
sbb
add
and
push
jo
mov
mov
push
leave
mov
bound
loop
aad
sbb
or
movsl
lret
sahf
mov
mov
add
sub
imul
dec
xchg
mov
shlb
jl
popa
jg
fwait
popa
andb
xor
outsb
test
dec
out
mov
sbb
jae
sbb
je
lahf
jl
pusha
lret
sub
lahf
jle
jmp
aas
div
loope
je
pop
mov
insb
nop
dec
cmpb
jnp
outsl
mov
mov
in
aas
mov
pop
mov
sub
xchg
call
dec
into
je
js
inc
or
fs
xchg
mov
rcll
dec
dec
test
popa
lods
push
inc
and
pop
aam
mov
cmp
out
outsb
shrl
cld
fdivl
mov
sbb
pop
jg
push
mov
lret
pop
push
adc
lret
inc
ficomps
and
subl
ds
pop
xor
mov
push
mov
mov
je
insb
mov
ja
cli
sbb
in
aaa
pop
es
xor
mov
pushf
out
clc
adc
fistl
roll
push
xchg
push
add
mov
and
pushf
push
inc
inc
aam
push
sbb
sub
and
aam
sbb
inc
jo
push
add
xchg
sub
outsl
jg
jmp
push
nop
inc
stos
inc
adc
jne
fsts
jmp
mov
pop
andl
sub
loope
movb
aam
jns
push
and
pop
ficomps
hlt
test
jb
in
sub
adc
push
mov
push
test
mov
mov
out
push
iret
jg
push
mov
mov
orb
fadd
and
xor
xor
add
push
mov
mov
movl
cltd
xor
lods
pusha
fwait
movsb
xchg
jecxz
daa
scas
inc
dec
and
inc
add
sbb
sub
stos
ja
cmp
fcmovu
and
jl
mov
sbb
popa
pop
loop
shrl
sarl
or
mov
xchg
push
mov
jo
mov
iret
ljmp
xchg
adc
nop
mov
in
fldcw
iret
fcomi
jg
rcrb
mov
inc
cmp
test
pop
gs
ss
xchg
xor
lock
fwait
hlt
mov
sbb
repnz
or
std
sub
and
ljmp
cltd
cli
test
jnp
bound
aas
push
mov
sub
or
dec
and
loope
dec
push
jae
stc
xor
or
dec
sbb
out
pop
arpl
sub
xor
in
xchg
inc
jbe
pop
mov
xchg
std
lea
je
dec
adc
sub
leave
popa
je
scas
sbb
jae
mov
addr16
xchg
mov
jae
push
rcrl
dec
push
xlat
pop
lock
cmpsb
fistpl
xor
movsl
mov
adc
jmp
daa
inc
int3
loopne
push
repz
sbb
mov
and
and
in
inc
adc
in
mov
ret
fsubrl
test
lcall
les
notb
adcb
add
clc
adc
aad
enter
mov
pop
mov
lahf
fisttpl
jae
dec
insl
or
ljmp
repz
gs
pop
lahf
xor
and
inc
call
pop
pop
subl
insl
lods
dec
xchg
adcl
cmp
push
or
mov
adc
mov
or
push
xlat
dec
cmp
test
scas
ss
push
jae
sbb
jmp
jmp
dec
data16
adc
insb
test
pop
aaa
loop
cmc
int
push
aam
add
shl
adc
popa
cmp
add
inc
or
aam
sbb
pop
mov
addr16
or
mov
mov
xchg
or
mov
cmp
sarb
push
fists
ss
push
nop
imul
ret
or
jno
pop
fmulp
out
xor
push
xor
cmp
cwtl
xchg
aam
or
enter
xor
mov
or
xchg
add
xchg
mov
out
pop
orl
mov
jae
lock
arpl
push
pushf
jle
xchg
pop
ds
cmpl
int3
shl
pop
ljmp
addl
xchg
daa
int3
cld
xchg
sbbl
mov
cmp
sbb
inc
sbb
mov
dec
xor
daa
xchg
aad
cld
loop
shr
mov
fiadds
sbb
lret
cmp
pop
fwait
pop
sub
push
cmc
outsb
sub
sbb
cwtl
jecxz
in
mov
out
and
xchg
test
add
lods
fsubrl
xchg
arpl
push
mov
fs
pop
mov
cltd
shr
pusha
iret
pusha
mov
insb
shlb
sub
fldt
dec
mov
sbb
popf
xchg
lahf
fistpl
popa
jae
jns
jne
imul
rcl
pop
xchg
fdivs
orb
cmp
jbe
adc
lea
push
pop
adc
and
out
cmp
push
in
add
mov
icebp
xor
dec
pop
lret
mov
push
sub
jns
andl
scas
aaa
sahf
in
fistps
and
or
out
aas
mov
mov
push
fists
outsb
in
jbe
or
es
mov
outsl
testl
vpshlq
fmull
out
test
xor
xchg
dec
xor
fstl
jne
fisttps
pop
fnstsw
xor
cmpsb
repz
mov
into
aas
les
sub
mov
sbb
movsl
pop
addr16
xor
jbe
adc
mov
xor
jae
mov
jecxz
push
mov
jb
sub
hlt
or
leave
mov
cmc
bound
shll
xchg
add
push
xchg
add
lahf
cmp
inc
out
inc
lods
jp
cmp
lahf
sbb
cld
cmpb
adc
aam
ret
ss
jb
jns
mov
mov
adc
loopne
sub
adc
fs
lret
aad
cmp
rcr
push
je
stos
adc
dec
repnz
iret
insl
mov
jnp
inc
shlb
rcrl
movsl
jg
mov
in
add
add
jp
add
sub
sub
push
mov
flds
push
xchg
mov
mov
cmp
mov
insl
loop
mov
imul
loope
jecxz
jo
mov
das
pop
xchg
insl
out
mov
sub
sti
sub
cmpsl
jbe
add
mov
pop
xchg
das
int
inc
sbb
jae
xor
xchg
cmp
pop
std
lahf
scas
mov
test
or
xor
fcompl
loope
fbstp
iret
mov
rcrb
jns
filds
insl
popl
inc
iret
ret
mov
pop
fs
cs
out
add
data16
divl
fwait
sbb
dec
sahf
imul
dec
enter
bound
xor
imul
adc
xor
rcrb
mov
sbb
fs
and
sub
cwtl
fidivl
lock
nop
rclb
or
cmp
ss
dec
mov
cmp
lds
int3
sub
shlb
inc
jns
mov
push
cmpsb
outsb
dec
adc
sti
movsb
leave
aas
das
mov
in
imul
cmp
push
fcmovnbe
pop
divb
stos
fimuls
shl
clc
adc
mov
jg
scas
insb
ljmp
jb
or
and
movsl
out
lock
leave
fnstsw
jo
fidivrl
outsb
pop
mov
cmp
xor
push
add
cmp
fcompl
adc
pop
int3
scas
cltd
mov
xchg
out
or
stos
xchg
push
mov
xor
mov
clc
jl
or
mov
jle
mov
mov
push
in
repz
mov
xor
mov
mov
imul
jl
push
sub
xor
mov
push
movsl
js
bswap
pop
mov
imul
pushf
pop
xor
fwait
mov
enter
in
and
adc
popf
inc
pop
add
sub
nop
gs
lds
cli
aam
clc
push
add
mov
dec
dec
cs
and
xlat
test
and
in
mov
jl
mov
cmpsl
lods
pop
test
movsl
lret
add
and
xor
ret
idiv
mov
movsb
mov
add
std
pop
in
rcrb
nop
scas
sbb
mov
cmpsb
xor
out
jge
add
and
add
lret
xor
popa
sub
jl
jp
sti
adc
hlt
mov
jmp
mov
roll
cmp
lahf
xor
xlat
inc
cmp
sub
jl
fs
pop
fsts
imul
rcrl
jb
xchg
inc
imul
movsl
inc
xor
jmp
dec
loopne
outsb
jae
add
les
scas
adc
int3
sub
testb
inc
sub
inc
cmpsl
jle
jl
mov
jns
dec
pop
bound
stos
aaa
rcll
aas
cmpsl
adc
dec
movsl
shl
inc
jp
pop
mov
scas
add
pop
cmc
or
call
out
sub
adc
loopne
and
and
adc
js
push
repnz
fstps
pop
sti
or
arpl
dec
rcl
mov
add
fs
jae
jmp
inc
cmp
imul
push
mov
push
sub
mov
push
iret
lret
decl
mov
mov
outsl
subl
out
jbe
in
mov
imul
idivl
and
orps
fcom
mov
shr
jl
sarl
add
pop
sbb
cld
xor
push
mov
pushf
sahf
xchg
push
aam
into
roll
and
inc
fcoml
xchg
insb
sbb
jo
int
popf
push
fs
fcoms
rcl
movb
inc
xchg
repz
test
fadds
jl
push
daa
push
pop
mov
arpl
sbb
imul
mov
and
movlps
ret
sbb
mov
cmpl
js
mov
xor
mov
mov
push
sub
inc
ret
dec
fstpt
sub
fisubl
mov
or
pop
cmp
fwait
movsb
cmp
and
stc
sub
push
loopne
clc
movsb
dec
std
inc
sbbb
in
stos
loopne
mov
scas
and
jne
adc
mov
sub
jmp
and
fstpl
pop
pop
repz
xchg
or
ds
jno
mov
inc
int
inc
repnz
int
or
xchg
mov
fcoml
xchg
rorb
cmp
scas
aaa
sub
iret
ss
cmc
sahf
fdivrs
pop
cs
pop
stos
arpl
and
pop
dec
lock
inc
mov
push
cmp
mov
jns
mov
aad
daa
jns
add
push
movsb
jb
and
test
imul
shrl
scas
or
push
sub
push
cmp
pop
popf
jge
addl
mov
rorl
sahf
cmc
sbb
dec
sbb
ret
mov
sub
pop
cmpsb
popa
sbb
test
outsb
xor
add
stos
pop
jl
cmp
add
scas
shl
out
xlat
pop
inc
stc
jg
aam
sub
mov
cmp
rorl
scas
mov
in
cwtl
mov
insl
push
shlb
dec
aad
pop
mov
and
pop
inc
iret
cmpsl
fists
sarl
mov
pop
or
push
sbb
cmp
imul
push
orb
out
pop
lahf
into
enter
cmpsl
push
push
mov
call
xchg
mov
stos
aam
pop
call
arpl
fistpl
inc
imul
xchg
mov
insb
xchg
dec
in
dec
fisttpll
shll
and
push
jno
sub
fs
fwait
adc
sbb
push
xchg
mov
ljmp
pop
stos
dec
test
and
cmp
sarb
scas
jecxz
aam
pop
shll
mov
xor
pop
stc
jl
lods
sub
inc
mov
out
mov
pop
out
subb
frstor
fisubs
jns
jns
fisubs
stos
push
jnp
fsin
fcoml
cs
pop
cmpsl
mov
cmp
std
test
jg
jle
ret
outsb
or
cmpb
outsb
inc
cmpsl
sub
gs
jg
add
cwtl
ljmp
push
out
jmp
fdivs
push
sbbb
and
leave
hlt
pushf
arpl
dec
push
inc
out
pop
rol
shll
xor
adc
xor
out
jge
pop
push
adc
repz
and
mov
and
hlt
mov
mov
cli
mov
push
lods
adc
pop
int3
daa
loope
call
inc
mov
cmp
sub
sti
aaa
jl
mov
add
nop
sbb
aaa
repnz
push
outsl
pop
inc
test
and
cmp
gs
aam
lcall
jl
mov
push
mov
cli
aad
pop
xor
dec
lcall
loope
cli
leave
adc
pop
inc
pop
jns
pop
in
mov
sub
mov
add
lea
ja
shrb
fcoml
xor
jb
aad
in
xchg
mov
inc
aas
mov
clc
mov
inc
ja
pop
jge
fistps
xor
lea
repnz
mov
and
imul
aad
xorl
adc
fs
sahf
push
jbe
or
xchg
test
rcll
int
cmp
orb
iret
adc
jno
test
scas
add
mov
and
jne
int3
call
rcll
leave
int3
jle
outsb
xchg
push
dec
divb
or
iret
jns
ret
fnsave
jecxz
addb
mov
xor
jae
sbb
add
mov
cltd
lds
flds
scas
mov
xor
pop
mov
out
jnp
lds
jl
lahf
out
push
orb
jp
out
pop
popa
xchg
fsubl
pop
inc
pop
aad
xor
loop
in
hlt
and
and
add
mov
daa
xchg
dec
mov
fbstp
xchg
xorb
cmp
adc
testl
inc
fdivs
mov
sbb
pop
jmp
cmc
pop
gs
fsub
dec
lfs
sub
call
fs
sub
add
jno
shrl
and
dec
cmp
pusha
aad
xlat
sub
lret
add
in
bnd
shrb
xchg
inc
out
push
pop
pop
fpatan
mov
sub
xchg
xor
cli
cltd
mov
or
fidivrl
pop
xchg
jle
xchg
inc
xchg
xor
out
xchg
dec
pop
sub
aad
repnz
outsl
flds
or
shlb
push
mov
mov
les
incb
movsb
pop
adc
cmp
sub
sbb
cld
aaa
daa
call
out
xor
test
jle
pop
mov
ret
jne
dec
mov
aaa
ret
sub
das
lods
sti
jge
ret
ljmp
adc
dec
dec
mov
ret
cmp
jo
leave
test
dec
pop
mov
fimuls
inc
inc
sub
mov
imul
test
popa
xchg
roll
add
dec
stc
out
adc
clc
inc
dec
int3
sbb
rolb
and
mov
ja
popa
jle
pop
or
adc
sbb
gs
cwtl
in
lods
mov
push
push
pop
cmp
xchg
inc
fidivrs
or
jo
push
sarl
in
lcall
jae
mov
push
push
rcrl
daa
pop
test
leave
sbb
cli
nop
xor
lea
lea
sahf
mov
imul
sbb
hlt
roll
pop
xchg
inc
in
push
pop
add
das
xchg
insb
popa
or
fwait
mov
inc
adc
mov
mov
adcb
pop
adc
mov
dec
xor
fcmovu
xor
vcvttss2si
xor
jb
je
call
pop
jae
mov
movsl
xchg
gs
aaa
icebp
xor
js
loop
lods
jo
inc
loop
dec
jge
mov
adc
cmpsl
call
push
adc
int3
mov
xchg
movsb
and
inc
cmp
xor
sub
push
fmuls
sub
rorl
xlat
cmp
cwtl
sbb
adc
arpl
pop
mov
bnd
lock
int
fs
mov
cwtl
cmpsl
sub
cmpsb
mov
mov
or
loope
mov
xchg
lcall
mov
popa
xchg
pop
outsl
mov
push
sbb
adc
bound
mov
iret
mov
cmp
insl
adc
jp
rolb
and
out
imul
add
add
shll
imul
cld
insb
adc
inc
sub
push
sti
mov
xlat
dec
and
add
jbe
sbb
movsl
lret
inc
and
out
repz
pop
sub
and
sbb
cltd
mov
jne
lods
dec
jge
mov
xchg
lcall
push
fcomp
insl
or
push
and
in
std
out
mov
mov
sbb
mov
inc
sbb
xchg
push
sub
mov
mov
ret
cmp
in
arpl
daa
out
adc
adc
repnz
mov
orl
mov
shl
push
call
or
and
rcr
inc
mov
xchg
and
fchs
aaa
jae
mov
xchg
sub
mov
mov
int3
cmp
jb
push
and
fcoms
ret
jb
pop
shll
dec
xchg
mov
loope
data16
inc
clc
repz
jl
sbb
mov
inc
into
mov
inc
xor
test
stc
pusha
mov
divl
lret
inc
cmpsb
xor
divl
into
push
jp
pop
fstp
jo
cmc
mov
jo
pop
push
push
lcall
inc
add
pop
pop
push
jns
aad
sub
test
xor
loope
int3
cmp
stos
mov
mov
scas
mulb
fildll
adc
push
stos
call
pop
cmp
scas
fwait
adcb
pop
mov
loope
adc
mov
jo
cmpsb
mov
xchg
lahf
mov
test
movb
das
xchg
sbbl
xchg
xchg
cli
dec
jmp
and
push
or
daa
xchg
scas
jns
ljmp
test
insl
sub
dec
xchg
shlb
nop
test
rorb
dec
pop
xchg
bound
ljmp
nop
leave
push
leave
add
dec
adc
dec
inc
loopne
cmp
sahf
roll
movsb
mov
ja
adc
fdivr
bnd
inc
cli
jmp
push
sbbb
inc
cmp
es
popf
repz
xlat
ds
adc
fisttps
add
aam
cli
js
data16
int
xchg
and
add
out
pusha
pop
out
in
or
push
jle
mov
sbb
push
jecxz
xchg
test
loopne
cmpxchg
pop
add
in
cltd
sbb
cltd
inc
rclb
pop
adc
lcall
jle
inc
lods
rorl
pop
std
mov
enter
mov
dec
lcall
mov
add
cs
ja
jge
jae
rorl
cmpsb
cmp
or
push
adcl
ja
es
ja
pop
div
xor
fildll
mov
push
adc
psllq
es
sahf
cmpxchg
sahf
mov
add
and
jmp
mov
adc
jmp
mov
test
orb
pop
ds
daa
repnz
jne
cmp
aaa
mov
cld
sub
mov
ret
mov
fsub
inc
mov
mov
outsl
mov
push
sub
or
inc
xor
addr16
hlt
cmpps
mov
es
adcb
sahf
cmpsl
dec
hlt
mov
dec
movsb
pushf
jmp
lods
clc
fimull
aam
cmpsl
mov
inc
arpl
mov
test
outsb
add
sti
add
jg
mov
dec
stc
ja
outsb
js
add
push
lret
dec
pusha
mov
mov
aad
add
dec
movsl
jmp
xor
push
jae
in
pop
mov
or
mov
in
sarb
ja
cmpsl
mov
pushf
lahf
or
imul
and
jno
xchg
mov
xchg
out
inc
icebp
lcall
cmp
cs
mov
adc
sbb
jno
std
mov
icebp
adc
lahf
pushf
stos
pop
mov
jbe
add
push
and
lcall
mov
shll
and
xchg
out
cmp
push
scas
sbbb
inc
add
in
xor
les
xlat
mov
or
in
in
fwait
mov
push
jns
adc
sbb
sub
adc
clc
addl
dec
and
je
sbb
imul
sbb
ds
push
cli
mov
jg
pop
hlt
sub
int
mov
adc
add
jb
arpl
jnp
les
fcoml
xchg
push
mov
mov
movaps
pop
lock
test
pop
dec
imull
push
mov
lcall
pop
push
outsb
mov
ljmp
or
pop
aad
into
lret
pop
mov
rclb
inc
push
xor
fs
mov
repz
insb
dec
movsb
sti
adc
fistpl
cmc
mov
insb
and
xor
mov
dec
xchg
cwtl
out
adc
xchg
mov
popa
push
pop
push
mov
roll
sahf
imul
je
push
sub
loope
outsb
lret
cwtl
jbe
insb
clc
mov
test
and
test
xor
add
mov
mov
aam
jns
and
stos
stc
xchg
push
mov
lea
and
subl
mov
mov
das
enter
push
sub
aas
push
inc
push
xchg
stos
fidivs
outsb
mov
cmpsb
cmp
pushf
cmp
cmp
and
jmp
rclb
fs
sbb
push
xchg
mov
push
jp
ljmp
sbb
xor
pop
mov
adc
push
mov
xlat
xor
ljmp
lcall
push
and
or
dec
dec
sbbl
adc
pop
ljmp
call
sbb
add
jns
fidivrl
ds
sub
xchg
push
insl
ret
fs
or
jmp
int
cmp
data16
sbb
insb
inc
pop
je
inc
ljmp
adcl
loope
sbb
sbb
mov
hlt
adc
sti
cmp
cmp
ljmp
dec
je
jmp
add
ss
mov
cmp
pop
es
inc
scas
pop
pushf
cmpsl
lcall
pop
into
lret
or
dec
push
fiaddl
roll
adc
je
and
popa
test
xchg
mov
and
cmp
sub
pop
popf
pop
mov
or
pop
imul
or
xor
add
nop/reserved
ret
popf
jo
lahf
fdivrs
sub
call
stos
xor
add
xchg
stos
ljmp
fdivl
push
dec
mov
xchg
sahf
jo
cmp
lods
insb
inc
mov
ss
push
sub
aaa
sarb
ror
xchg
mov
je
jecxz
jne
daa
popa
das
pop
psubq
lods
data16
popf
mov
xor
shll
push
fwait
repz
scas
fld1
jecxz
sbb
adc
cs
call
stos
add
hlt
nop
adc
xchg
insl
sbb
repz
and
add
lds
inc
stc
mov
xor
test
mov
pop
fldcw
push
mov
adc
test
xlat
cmpsb
pusha
nop
lods
cld
js
jbe
inc
stos
aaa
stos
fisubs
es
push
scas
idivb
pop
xchg
or
dec
inc
inc
cmp
lock
add
mov
ret
pop
sbb
dec
je
inc
dec
cmpsb
rorb
mov
into
sbb
cmpsl
inc
inc
and
and
and
jno
add
and
xchg
lea
cmpsb
inc
sti
bound
mov
adc
scas
and
jmp
ret
loope
or
and
scas
lock
js
inc
pusha
data16
mov
aam
mov
daa
mov
fimull
gs
js
scas
inc
out
add
lret
xor
lret
movsl
mov
es
mov
jb
bound
and
cmp
cmpsl
or
ljmp
cltd
or
push
vpaddsw
shl
or
mov
inc
add
sub
in
and
mov
lods
fs
out
aas
sbb
jne
js
mov
nop
push
js
lds
arpl
aaa
divb
stos
xor
sbbl
test
aad
mov
sti
insl
cmp
xchg
jmp
sub
sub
cmp
cli
mov
adc
mov
cmp
jge
into
hlt
or
ror
mov
sbb
js
addr16
das
rorl
sti
mov
add
in
clc
repz
pop
das
or
dec
xchg
push
push
jp
sub
fs
add
push
inc
mov
sbb
mov
cmp
outsl
add
fnstcw
sbb
sti
ds
push
pop
xchg
arpl
aaa
test
adc
sarb
adc
mov
test
sub
jg
or
add
sbb
add
cmpsl
shl
clc
pop
ja
dec
loope
dec
aad
out
ret
sbb
xor
sub
push
xchg
inc
push
scas
in
pop
cmp
jo
dec
lea
sbb
insb
leave
inc
push
outsl
sub
fs
mov
enter
mov
cmpl
fidivrs
hlt
fs
inc
and
jo
lods
pop
xchg
popf
ret
add
loopne
jns
es
loop
or
and
sbb
arpl
subb
in
fbld
or
pop
jmp
outsb
jbe
fists
test
in
xchg
out
fdiv
mov
call
sarb
sbb
sub
icebp
jge
sub
arpl
stc
stos
lods
pop
rcrl
sbb
scas
repz
jo
inc
sbb
test
mov
cmpl
mov
mov
shrb
mov
mov
inc
push
adc
adc
or
mov
sub
pop
loopne
lret
mov
mov
pop
jno
out
cmp
test
pop
xor
pop
mov
xchg
lcall
pop
pop
in
jmp
inc
mov
movsl
ret
fsubrl
lcall
inc
jb
dec
int
cmp
leave
mov
cli
mov
insl
mov
xor
mov
outsl
xchg
sbb
jns
pop
orb
mov
mov
aad
pop
add
sub
or
mov
mov
sub
jmp
push
loope
mov
jae
push
cltd
cmc
scas
popa
call
push
in
divb
cwtl
iret
mov
push
addr16
inc
call
scas
aaa
xchg
mov
cmovg
push
pop
shlb
add
das
shlb
or
push
fisttps
jnp
in
sub
cltd
sub
adcb
and
adc
or
jmp
sub
clc
aad
repnz
adc
add
adc
sahf
mov
add
test
aaa
test
mov
pop
and
ja
ljmp
loope
jae
incl
gs
aam
push
adc
pop
push
add
mov
in
arpl
mov
popf
rcrl
mov
jnp
pusha
leave
or
cltd
ss
xlat
pop
push
xor
cmp
pop
xrelease
jb
enter
imul
movsl
bnd
pop
daa
jge
addr16
lcall
mov
xchg
test
jge
xor
add
in
ret
dec
sbb
outsl
js
adc
inc
jmp
popa
aam
xor
ret
cwtl
decb
frstpm(287
or
imul
test
and
dec
xrelease
ja
and
out
std
rcrb
mov
enter
cmp
test
jp
and
cli
lods
out
lret
jge
shlb
mov
lcall
adc
mov
or
paddw
es
push
pop
lahf
add
jle
pop
aas
add
pop
insb
nop
movsb
iret
test
xchg
int
mov
jge
mov
mov
xchg
pop
jg
hlt
mov
dec
cmpsl
mov
mov
dec
jnp
pop
cmc
xor
pop
mov
dec
repz
lds
add
xchg
outsb
xchg
insb
sbb
test
sbb
aas
into
iret
insl
stos
adc
or
jae
mov
sub
sti
fidivrs
enter
ret
pop
mov
jae
inc
xor
mov
xor
js
jge
sbb
bound
int
xor
pushf
subb
into
pop
sub
sbb
pop
jae
adc
mov
and
inc
add
fisubrs
pop
int3
or
push
pop
cli
mov
inc
popf
decl
mov
xlat
ljmp
and
pop
xlat
movsb
xor
arpl
arpl
iret
int
lock
lds
mov
or
xchg
dec
enter
mov
jp
sar
sub
xchg
fsub
je
jns
sbb
js
inc
dec
xor
aad
xchg
cmc
loop
mov
dec
xchg
cs
sub
in
sti
xor
jmp
ss
push
cli
cmp
hlt
adc
sub
stos
cld
pop
mov
out
sbbb
adc
mov
sbb
xor
into
add
aas
xchg
rcr
outsb
mov
push
decb
jbe
add
pop
ret
test
pop
and
add
mov
dec
lds
mov
cmp
into
jo
cli
cld
jecxz
sarl
jge
sub
xor
hlt
mov
repz
lahf
jae
out
sub
mov
or
repnz
add
sub
mov
outsl
push
push
jne
push
cmc
pop
adc
loope
popf
lret
mov
lea
jl
out
adcb
and
ret
aaa
dec
push
ret
rcrl
in
dec
jge
pop
ss
mov
add
sahf
cmovae
sahf
mov
jge
xchg
dec
pop
xor
push
jg
ret
push
mov
sahf
sbb
mov
es
push
jno
adc
mov
shll
jecxz
sar
mov
mov
sub
xlat
stc
sbb
sub
or
inc
daa
mov
stc
adc
pop
aaa
arpl
sbb
popa
das
ret
jno
dec
inc
dec
aam
sub
scas
inc
stos
xchg
sub
cmpsb
cvttps2pi
dec
or
repz
mov
adc
movsb
out
push
nop
jmp
xor
orb
mov
push
mov
inc
push
jo
inc
jo
mov
pushf
test
adc
fidivrl
and
jno
or
inc
daa
xchg
loop
loope
mov
sbb
nop
mov
cmp
push
cld
inc
jecxz
jns
mov
jae
sub
inc
xchg
ss
sub
push
inc
sbb
and
add
pop
mov
je
xchg
mov
test
adc
leave
jmp
and
cs
lds
es
lret
cmp
sub
xor
fs
jp
jecxz
mov
stos
push
inc
mov
bt
ret
xchg
pop
out
mov
loopne
pop
mov
cld
push
cmpl
jae
shrb
and
cwtl
and
jne
and
add
push
xor
mov
add
push
lods
pop
cli
fdiv
int3
nop
cmc
cltd
scas
jle
clc
inc
xchg
mov
or
ljmp
movsb
mov
lcall
outsl
faddl
stos
ljmp
aaa
adc
call
push
and
push
into
mov
scas
add
mov
fisubs
sbb
sbb
fsts
jp
cmp
jecxz
inc
xchg
sub
and
das
xor
mov
xor
xor
push
loop
sbbl
ljmp
dec
out
movsl
jo
mov
cltd
notl
in
mov
cmp
inc
push
and
xor
jmp
pop
lret
push
mov
xor
movsb
pop
fbstp
cmp
or
in
push
dec
sbb
movsl
dec
jecxz,pt
cmc
mov
xchg
cmp
pop
cli
pop
mov
jge
pop
sar
insb
and
int3
mov
inc
shlb
imul
or
into
ficomps
xor
xor
add
xor
insb
xchg
mov
std
adc
cli
pop
mov
std
xchg
fcomip
push
mov
pushf
mov
jge
in
mov
test
pop
or
push
movsl
std
jns
adc
xor
addr16
jbe
fdivrl
sbb
dec
cmpsb
stos
jb
addr16
imul
mov
or
xchg
adc
out
mov
in
out
test
push
cmp
or
imul
pop
pop
xchg
das
data16
jp
add
push
sbb
sbb
mov
and
leave
xor
and
pop
lea
cmp
scas
xchg
incl
pop
mov
push
jmp
inc
in
sbb
imul
lds
pushf
ret
enter
mov
in
jno,pt
int3
inc
es
mov
mov
mov
jo
into
or
pop
lea
pop
inc
mov
jo
scas
add
pop
out
cmp
les
pop
jp
jg
xchg
lods
in
jl
add
add
fistps
loopne
dec
jg
rolb
sbb
notl
xchg
out
mov
loopne
mov
jb
xchg
adc
ljmp
enter
xor
pop
movsb
sbb
mov
lods
jbe
xchg
inc
xchg
sti
lds
lcall
cmc
fldcw
test
jmp
repnz
cmp
push
insl
pop
xchg
pop
repz
inc
add
pop
inc
xchg
pop
cmc
dec
mov
mov
mov
jbe,pn
dec
sub
fnstcw
lcall
std
mull
push
loope
arpl
lea
sub
xor
outsl
dec
lret
or
xchg
adc
scas
and
jb
sbb
jle
ss
rolb
arpl
sub
js
cltd
mov
es
nop
xor
aas
pop
xchg
push
sub
into
repnz
lret
icebp
test
pushf
jb
jge
pop
lods
test
adc
enter
rcl
rcll
or
push
fdivs
add
shl
shll
int
std
cli
inc
add
mov
std
std
popf
out
sbb
mov
mov
jae
aas
fnstcw
xchg
add
addr16
jno
int
out
shl
nop
jmp
rcll
repz
mov
cs
fs
fisttpll
dec
fildll
push
pusha
pusha
imul
xchg
movq
xor
pop
mov
mov
aam
gs
lods
dec
mov
xor
int3
mov
fidivl
arpl
int3
ss
das
pop
lret
cltd
int3
fdivs
fdivl
xor
pop
push
lcall
jns
ljmp
mov
cmpsl
jp
das
mov
lea
mov
popf
in
mov
pop
or
popa
xchg
sarl
rcll
lcall
adc
and
sbb
fwait
jns
dec
pushf
pop
out
mov
sahf
int3
scas
sub
idivl
adc
dec
sbb
das
jecxz
cltd
jp
jg
shrl
repz
sub
cmp
movsb
and
pop
outsb
in
fisttpl
clc
cmpb
push
ss
mov
adc
das
fs
inc
and
sti
xor
dec
or
inc
mov
add
fcmovnb
test
fst
sbb
pop
xchg
cld
in
shr
lahf
int3
fsubrs
das
cmp
addr16
cmp
clc
adc
aaa
out
cwtl
ret
xor
inc
inc
repnz
sbb
push
cmp
inc
pushf
push
aas
clc
call
vmovdqa
pop
out
shrl
lret
enter
and
pop
in
stos
mov
insb
xchg
enter
fwait
jp
pop
in
fwait
pusha
aaa
mov
stc
test
pop
push
xchg
fidivrl
inc
ss
jl
mov
pop
aas
jno
cwtl
mov
lret
imulb
xchg
lods
add
fs
sbb
pmullw
sub
sbb
mov
mov
mov
andb
cld
andnps
or
inc
add
data16
mov
lea
adc
push
imul
out
das
xchg
dec
push
lods
rorb
cld
push
es
int3
in
sub
mov
push
mov
arpl
mov
iret
rcll
loopne
cmp
fs
or
jmp
nop
dec
jne
xchg
mov
xchg
mov
int
mov
int
push
or
out
cmp
insb
xor
mov
jo
mov
sbb
add
loope
in
and
nop
jne
fiaddl
and
orb
lea
xchg
cmp
repz
or
fistpll
jmp
mov
xlat
int
or
je
and
ja
xor
mov
pop
pop
popa
push
outsb
and
lea
adc
push
sbb
lret
push
pop
cwtl
mov
mov
jne
std
or
xor
lods
sub
mov
lds
or
xor
addb
repnz
mov
lods
jo
cmp
in
in
popf
mov
dec
ds
js
js
adc
dec
mulb
incl
dec
aaa
std
int
xor
cmp
sub
lds
sbb
jo
or
or
sub
out
mov
jl
repnz
push
mov
push
sti
push
mov
dec
and
jb
mov
loopne
xchg
add
jne
outsl
mov
push
or
xchg
loop
mov
xlat
pop
test
ja
adc
push
cltd
fstl
fbld
out
sbb
push
ret
mov
div
pop
and
insb
arpl
int3
lret
xchg
jl
int
lcall
add
in
and
cmp
mov
mov
or
adc
out
hlt
iret
ret
xchg
mov
movsb
xor
sub
popf
push
fdivrl
cmc
mov
cmpsb
fidivs
push
xchg
xlat
mov
movsb
out
add
push
jne
test
mov
or
adc
add
pop
daa
test
clc
out
cmc
jle
mov
ja
pop
arpl
mov
push
xlat
lcall
push
xor
mov
jl
and
cld
stos
and
icebp
mov
lds
mov
ja
jo
jmp
sbb
dec
test
fcoml
les
adc
push
adc
int3
mov
dec
imul
jnp
movsb
int
roll
xlat
push
addr16
lock
or
test
data16
adcb
cmp
pop
es
mov
lcall
repnz
sub
in
ljmp
hlt
out
dec
faddl
lret
and
fidivrs
leave
mov
pop
push
mov
sub
and
dec
jb
clc
dec
cmp
jb
push
mov
mov
imul
sub
ret
imul
imul
int
cmp
sbb
jns
clc
loope
cmp
jae
daa
nop
sbb
pop
daa
jnp
xlat
sbb
imul
lods
jo
cmp
hlt
std
xchg
sub
fistpl
inc
jnp
roll
mov
adc
mov
lods
enter
in
push
push
test
mov
dec
test
adc
lcall
shrl
imul
jmp
jns
in
test
out
or
cmp
loope
sbb
stos
mov
and
pop
sti
lahf
pop
ljmp
scas
cmpb
loopne
loop
push
adc
adc
loope
ss
dec
fbstp
fildll
shll
or
das
and
clc
or
addr16
out
or
inc
cltd
pop
out
in
movsb
sti
stos
and
test
std
daa
jne
gs
ds
adc
cmp
sub
push
inc
cmp
add
inc
out
jp
xchg
in
pop
mov
push
test
loope
mov
insl
inc
pop
inc
xchg
int
inc
push
loope
lods
rorl
cmp
pop
rorb
xchg
push
jge
adc
fisubrl
inc
pop
xor
xchg
loopne
in
popa
std
les
sub
add
push
fdivl
stc
fld
mov
xor
out
sti
and
jp
shrb
inc
mov
jp
gs
mov
or
addr16
add
or
gs
lock
inc
xor
gs
mov
faddp
adc
out
into
cmp
push
insb
ja
loope
dec
cmpsl
enter
adc
in
inc
fisubl
mov
mov
sahf
adc
aas
cmp
cmpsb
pushf
popf
lcall
ficoml
jno
scas
mov
shll
pop
test
xchg
xchg
loop
popa
dec
jnp
repnz
push
mov
dec
loop
sbb
pop
pop
cltd
stc
cmp
loopne
mov
cmc
sub
mov
xchg
outsb
ret
cmp
iret
shl
orb
cmp
xchg
push
adc
sti
pop
jno
add
or
mov
cmpsl
mov
fsubrs
dec
inc
inc
popa
xchg
test
out
pop
aas
aad
enter
push
outsl
daa
push
mov
mov
mov
xor
mov
fnstcw
cmp
jae
aas
add
enter
movsb
pushf
fcmovnu
cmp
out
cli
fists
xor
icebp
divl
enter
rcrl
xor
cmp
mov
mov
dec
xchg
out
xchg
fiadds
pushf
adc
stc
push
jle
pushf
scas
pop
ljmp
mov
cmp
xchg
hlt
mov
cmp
clc
aam
sbb
lret
into
lret
jle
pop
pop
jae
jbe
sub
cmp
rcll
sbbb
add
push
loope
xchg
sub
loop
inc
jae
fiaddl
cmc
mov
add
pop
rcl
mov
cmp
xor
add
push
jl
into
mov
lods
xchg
testb
push
adc
shlb
rol
xor
movsl
fimuls
inc
out
adc
push
in
fbstp
xor
lret
xor
mov
aam
sub
stos
mov
cmp
out
pop
sbb
sbb
imul
add
and
sbb
or
int
fistl
sbbl
dec
xchg
test
shlb
cmp
jl
jmp
repnz
push
out
or
dec
push
jnp
mull
sub
daa
outsl
pop
call
inc
je
nop
sbb
mov
out
pop
xlat
jns
js
call
jb
adc
mov
mov
js
sbbl
ja
cmc
int3
nop
faddl
out
dec
mov
jg
aam
sbb
fadd
test
inc
icebp
adc
mov
add
iret
mov
and
sbb
nop
pop
jns
sub
mov
xor
fidivl
cmpsb
nop
sub
jecxz
jns
test
jge
mov
js
je
cs
sub
ret
dec
push
xchg
cmc
in
sbb
add
insb
lods
mov
pop
rol
int
sbb
and
fmul
cld
sbb
push
movsb
cli
push
addl
pop
push
lahf
fwait
push
lock
push
jg
pop
inc
lcall
xchg
mov
push
mov
fwait
jo,pn
and
xchg
pop
in
andb
cld
rclb
mov
mov
sub
or
inc
mov
mov
stos
jmp
xchg
test
cmpsb
mov
add
ret
fidivrs
enter
cld
cmpsl
or
jecxz
add
xor
sarl
xor
mov
das
pop
js
ds
add
dec
xchg
shr
inc
jmp
fisttpl
add
aad
stos
les
in
rorb
dec
insl
sub
test
iret
out
xlat
push
test
cmp
fisubrl
jle
stc
add
push
sub
lods
dec
rorl
or
ss
adc
fwait
adc
add
adc
mov
hlt
cmc
pusha
insb
pop
xchg
iret
jae
arpl
mov
stc
lds
cmc
insl
int
and
pop
xor
jnp
push
hlt
std
xchg
les
pop
cltd
push
pop
mov
arpl
jle
shl
dec
xchg
inc
arpl
jnp
mov
mov
call
xchg
cmp
mov
or
mov
mov
gs
ljmp
jmp
call
dec
sahf
sbb
mov
jmp
lahf
movsb
aaa
aam
mov
mov
push
cmpsb
movsl
addr16
adcl
leave
aad
dec
xchg
imul
mov
inc
jo
sub
ret
mov
lds
sbb
xor
or
cmp
pop
add
and
sbb
jo
dec
divb
popa
aad
test
xor
hlt
les
xchg
mov
mov
pop
out
fimull
rorl
orb
mov
shl
popfw
mov
mov
push
fdivl
mov
andb
cmpsl
test
jae
pop
push
xchg
and
das
xor
stos
scas
mov
mov
xor
pop
sub
sub
add
sarl
jne
mov
ret
push
lahf
das
cmp
mov
inc
inc
fimuls
xor
fisubl
pop
mov
sbb
rorb
mov
mov
jne
fcmovnu
inc
in
jp
inc
add
sub
mov
imul
mov
and
arpl
cwtl
dec
mov
ljmp
sbb
cld
adc
fdivs
adc
or
test
insl
js
es
pop
out
in
cmc
scas
lock
mov
push
sbb
cs
std
sahf
pop
dec
aas
cmp
fs
push
sbb
popa
sub
int
pop
mov
push
inc
add
pop
push
and
bound
out
call
jns
stos
push
xchg
mov
dec
scas
sub
lods
mov
pop
in
mov
jge
xchg
out
push
dec
mov
or
int3
or
scas
outsb
cmp
out
xchg
icebp
pop
aas
icebp
mov
les
test
test
and
jae
ds
rol
jg
out
psllq
mov
gs
enter
dec
shrl
cs
pop
stc
sbb
and
icebp
or
jae
add
and
frstor
mov
xor
jae
test
xchg
sar
mov
or
fists
pop
push
test
inc
mov
or
and
add
xor
cmp
mov
cmpsl
imul
xor
adc
into
iret
jp
mov
adc
xor
psubusw
lret
mov
pop
scas
pop
xorl
aas
push
xor
mov
pushf
mov
jg
ds
insl
ret
mov
cmp
jge
aam
div
mov
cmpsb
out
jp
jecxz
xor
aam
xchg
rcll
adc
testl
pop
inc
sbb
orb
imul
sbb
mov
cmc
cmp
jge
loopne
jae
add
jno
pop
push
rclb
pop
icebp
aam
cmpsb
call
fmuls
addb
in
shl
cmc
xchg
adc
mov
add
jg
adc
fldcw
jnp
lods
repz
popf
adc
ret
out
cmp
cmc
dec
or
dec
adc
jo
aaa
mov
insb
mov
and
push
pop
enter
push
dec
into
mov
orl
jl
nop
push
xlat
or
out
add
inc
ljmp
mov
fsubl
ja
stos
push
mov
jnp
mov
fs
movsb
loope
aas
cmp
inc
sub
mov
nop
les
and
mov
xchg
push
or
bound
sub
ss
test
ja
addr16
xor
push
test
or
and
add
iret
outsb
pop
pop
pop
mov
add
int
pop
stc
into
ds
mov
fisubs
cli
mov
jne
out
xor
pop
aad
cmp
fdivs
xchg
mov
push
repz
ficoms
mov
into
pop
and
mov
sbb
jae
leave
jge
scas
push
hlt
les
xchg
push
xor
les
sub
sub
add
xor
add
sub
fisubs
pop
into
jle
pop
iret
cmp
pop
test
loopne
fcoml
sub
xchg
jg
fst
out
lahf
jne
popa
das
rol
fdivrs
shll
test
dec
pop
scas
es
push
mov
xor
cmp
inc
add
mov
test
jo
push
mov
lock
adc
mov
pop
inc
xlat
enter
scas
cmp
xorb
add
mov
dec
cmpsl
jo
divl
sbb
fstps
sub
mov
cmp
sar
sbb
out
cmp
xchg
cltd
cmc
cmp
xorb
lea
xorl
aas
adc
add
int
xchg
sub
cmp
jecxz
sbb
cli
mov
mov
lods
idivb
push
sbb
mov
enter
lea
or
pop
jl
adc
or
cmp
push
jae
in
and
cmc
jb
cmpsb
pop
sbb
sarl
add
dec
jne
pop
and
stc
cmp
imul
mov
xchg
pop
dec
lcall
pop
ret
xchg
xorb
stos
cmp
mov
stos
pop
pop
dec
jmp
cmpsb
int
mov
rcll
icebp
lcall
jle
lcall
imul
fcompl
jge
insb
mov
fisttpll
rclb
fimuls
scas
jb
cli
add
xchg
scas
imul
jge
ret
sub
repz
inc
clc
outsb
inc
sub
pop
sbb
jge
bound
dec
jbe
jb
out
hlt
and
cmp
lods
mov
sub
mov
sub
int
leave
add
sbbw
dec
sub
scas
rcrb
aas
mov
sub
jo
out
or
jmp
out
jmp
cmpsb
test
fcomp
aas
sar
mov
insb
or
daa
gs
mov
jo
pop
jecxz
jp
ja
pop
fistl
jnp
repnz
ret
xorb
or
add
jbe
cmp
jno
in
stos
cmp
mov
add
divb
mov
sarl
cli
je
xchg
xchg
test
inc
les
pop
divb
inc
cs
mov
xchg
xchg
cmp
sub
xchg
or
shlb
jo
pop
ret
add
or
gs
es
sbb
pusha
or
cs
sub
hlt
push
mov
xor
test
movsb
arpl
leave
adc
test
jmp
lret
dec
in
inc
repz
repnz
mov
mov
mov
stos
xor
fistl
and
call
push
js
jns
bound
cs
add
jo
and
sbb
cs
mov
xchg
int3
hlt
or
mov
or
add
repz
mov
xlat
dec
add
pop
popf
test
cld
jo
cltd
ljmp
xchg
xor
xchg
iret
push
jp
adc
push
aam
push
cli
mov
sub
pop
mov
dec
dec
jmp
iret
adc
rorl
ljmp
daa
mov
repnz
call
mov
test
dec
imul
or
pushf
int3
add
dec
out
loopne
pop
push
in
aad
shl
movsl
mov
mov
cmp
ret
push
pop
mov
jg
cltd
and
mov
push
mov
or
test
xor
and
aam
xchg
add
dec
test
ret
push
stc
sbb
push
leave
mov
jnp
cli
push
or
pop
ret
lods
mov
mov
sbb
push
add
mov
jle
test
nop
addr16
xlat
adc
rclb
nop
mov
and
repnz
mov
incl
insb
adc
sub
movsb
out
arpl
push
arpl
fwait
hlt
sti
push
inc
jo
sub
and
sahf
adc
and
pop
adc
cmp
lods
inc
stc
cmp
call
mov
adc
mov
shl
xchg
dec
fnstcw
and
mov
push
jp
sub
add
stos
fs
pop
xchg
arpl
mov
std
mov
mov
xor
cmc
sub
sub
out
inc
ss
inc
lcall
mov
and
mov
push
test
cwtl
test
dec
out
mov
dec
or
sbb
popa
cmovae
jge
xlat
sbb
inc
out
mov
out
pusha
mov
pop
bound
ret
xchg
cmp
rcl
icebp
cmp
ja
int3
mov
mov
jo
add
and
inc
jle
imull
faddl
out
cmpsb
push
mov
lret
dec
xor
mov
xor
or
jle
fcoms
ss
jo
jecxz
xor
mov
daa
test
push
add
daa
lcall
ret
adc
out
outsl
and
push
jbe
movsl
mov
cmp
mov
or
inc
imul
mov
sar
pop
jmp
jge
jge
jbe
mov
rcll
dec
decb
or
lock
imul
mov
mov
je
mov
or
mov
xor
xorl
cmpsl
sbbb
mov
mov
mov
stc
out
pop
mov
sub
std
arpl
or
sbb
fistps
sti
adc
aas
or
push
xlat
int3
fsubrs
sub
or
popa
xor
iret
jo
add
outsb
imul
and
jns
push
sub
xchg
or
lcall
test
clc
int
jnp
lret
leave
inc
or
arpl
mov
inc
xorl
sbb
rorb
and
add
adc
inc
xor
ds
pop
push
push
lods
inc
add
adc
cwtl
enter
xchg
cmp
scas
sub
jb
mov
fimull
push
fbld
cmpsl
mov
sub
add
push
mull
cmpsl
pop
outsl
jecxz
xchg
add
scas
add
lds
lods
xlat
and
sbb
cmp
xorl
xor
ja
or
mov
rcll
arpl
in
cmp
pop
repz
pop
adc
inc
int3
popf
cs
sbb
jecxz
cmc
js
movsb
dec
lret
xchg
bound
imul
mov
stc
push
pop
mov
sbb
pop
xchg
jbe
mov
loope
mov
sbb
hlt
add
shlb
xchg
mov
cli
orl
movsl
mov
adc
mov
cmc
repnz
imull
xchg
jecxz
test
xchg
stos
dec
xor
loope
jns
pop
clc
mov
jno
fmuls
mov
dec
fsubrl
sti
negb
test
xchg
mov
xchg
xor
je
in
sbb
cmp
inc
xor
mov
imul
push
cwtl
ret
fdivr
shll
fmull
or
aaa
add
inc
or
stos
ljmp
mov
ja
mov
push
jl
icebp
out
adc
dec
dec
lcall
das
outsl
mov
mov
int
stc
in
xchg
adc
xchg
dec
and
jg
imul
or
dec
xor
fs
leave
pop
aas
fcoml
sub
aas
mov
dec
movsl
in
cmpl
inc
dec
daa
inc
dec
shll
mov
pop
imul
cmp
mov
sbb
mov
add
push
lock
add
inc
movsb
rorb
mov
or
push
std
push
adc
fs
pop
call
imul
sbb
xchg
or
cmp
je
sbb
mov
outsl
inc
jb
fdivrl
leave
and
lcall
fdivs
mov
add
pop
mov
push
mov
xorl
arpl
pop
pushf
scas
subb
and
xchg
jle
xchg
lock
test
and
jl
mov
and
mov
stos
rorb
ja
cmp
jmp
cmp
jg
and
jp
loopne
add
outsb
mov
mov
xor
testb
xchg
push
aad
insl
inc
in
clc
ss
adc
das
sub
pop
filds
and
inc
sub
xor
scas
xor
jno
lods
inc
data16
jno
loope
pop
in
insl
and
mov
insl
iret
mov
push
mov
cmp
insb
mov
gs
in
divl
push
mov
rcll
mov
and
mov
mov
dec
xchg
push
sti
fadd
in
aaa
aad
sbb
cwtl
sahf
xor
test
les
lret
mov
lret
xchg
daa
pop
mov
inc
adc
outsl
mov
out
inc
inc
insb
push
xor
icebp
cli
pop
test
pop
push
adc
adc
or
stc
addr16
je
and
repnz
xlat
mov
call
daa
nop
mov
xor
dec
adc
xchg
das
or
xchg
or
les
int
xor
syscall
lcall
insb
lea
imul
jmp
mov
or
xchg
mov
pop
aam
mov
push
lcall
mov
add
mov
xchg
cmpsl
fcmovne
xchg
inc
or
jg
cmp
jnp
push
push
in
ficoms
xor
aaa
rcrl
xlat
add
xor
into
enter
stos
sbb
ljmp
nop
mov
in
les
leave
lahf
mov
mov
push
or
popa
subb
inc
jecxz
cs
or
imul
xchg
mov
push
dec
loope
sub
add
mov
test
data16
es
mov
jp
repnz
push
loop
dec
sbb
sar
addr16
imul
test
adc
xchg
iret
mov
fisubrs
sub
mov
fcoml
cmp
push
mov
push
inc
fisubl
lock
mov
sahf
mov
mov
in
mov
pop
sbb
aaa
mov
xor
inc
sti
xlat
leave
je
xor
jecxz
ret
xlat
daa
xlat
frstor
push
push
stc
sbb
hlt
in
sbb
nop
lcall
add
or
das
lock
enter
sub
lds
pop
test
dec
mov
leave
xchg
cli
cs
dec
mov
loope
dec
push
dec
add
ss
adc
push
fisubs
andb
push
leave
push
mov
or
sbbl
lahf
notb
jbe
xchg
decb
test
push
xor
or
mov
sbb
sbb
mov
pop
imul
out
sbb
stc
jo
xor
pushf
jl
inc
pop
dec
mov
shr
mov
mov
cmp
mov
movsb
mov
cmc
fnsaves
push
pop
hlt
xchg
leave
xor
sti
fdivr
shl
cli
es
adc
adc
icebp
jne
cmc
es
mov
or
cltd
jb
mov
ljmp
adc
ja
inc
add
insb
xchg
push
cmp
inc
jno
push
mov
sub
inc
pop
pop
mov
rcll
in
loop
xor
ja
sbb
or
mov
add
sbb
cmpsb
cmp
pop
fsubrl
push
nop
sarl
mov
sub
out
call
stc
inc
hlt
or
mov
mov
pop
movsb
iretw
clc
jmp
push
adc
cmp
mov
and
xchg
add
incb
sbb
fisubrs
jge
jg
sbb
jne
addl
je
test
cmp
add
xor
adc
popa
movsl
shlb
xchg
ss
ds
int
mov
mov
or
rclb
jnp
fbld
mov
mov
loope
pop
mov
xlat
fstl
imul
adc
es
leave
lret
jp
pop
xor
xchg
out
mov
jecxz
mov
add
or
push
jl
pop
fimuls
and
fcoms
xchg
sbb
or
cld
add
sub
cmp
lahf
inc
xchg
mov
inc
jb
ss
pop
pslld
push
out
cmp
fnstcw
lahf
shrl
cmpl
faddl
push
inc
int3
sub
push
loope
or
les
data16
inc
cmp
in
or
and
jns
mov
jno
push
shlb
sbb
loope
mov
cmp
sub
push
mov
push
or
clc
or
adc
add
sub
pop
cmc
call
dec
mov
int3
jae
push
cltd
shr
cmp
mov
sti
cmc
dec
mov
and
popa
xor
out
lds
cld
fwait
cld
pop
sbb
std
dec
xchg
adc
and
dec
mov
in
mov
sbb
sbb
movsb
mov
jbe
and
out
cld
decb
stc
fwait
dec
xchg
ds
inc
jbe
cmp
adc
dec
jnp
std
push
add
pop
fstps
ret
es
push
jns
sub
insb
or
lods
adc
ret
sbb
lds
xchg
lods
lret
adc
push
aaa
inc
fiaddl
cmp
sub
jg
add
or
leave
fldcw
xchg
daa
jmp
mov
cwtl
outsl
push
cmpb
sub
imulb
loop
ffree
xor
ret
dec
pop
inc
or
imul
out
sbb
cmc
cld
sbb
loope
ret
imulb
ret
pop
scas
sub
xchg
enter
xchg
xchg
js
aad
mov
sub
xchg
mov
lock
es
test
dec
cmp
mov
sbb
xor
popf
test
pushf
mov
insl
movl
jmp
jne
jns
sub
xchg
mov
xchg
pop
repnz
or
pop
cwtl
pop
push
insb
sub
and
es
adc
xchg
jge
imul
cmp
movsl
out
mov
dec
cmpsb
pop
and
inc
mov
stos
shlb
mov
jp
adc
stos
push
mov
push
ljmp
xor
sub
out
das
or
cmc
ljmp
jecxz
push
pop
fmuls
and
cmpsl
pop
mov
pop
adc
and
lret
movsl
cmp
in
push
xchg
jg
iret
push
cmp
ljmp
inc
inc
inc
lock
fxch
arpl
popa
cmp
int3
xchg
jg
es
into
push
mov
dec
xchg
jno
in
add
sahf
bound
inc
ja
scas
add
popa
icebp
ss
das
xor
add
fwait
test
in
jae
add
jmp
xchg
mov
imul
test
cmp
cmp
cli
incl
pop
pop
push
cmp
insb
ret
mov
pop
mov
out
ret
hlt
xchg
mov
gs
jmp
push
testb
sahf
aad
ficoms
rcrb
popf
dec
shrl
jno
cmp
dec
outsl
out
mov
cmpsl
inc
jmp
push
jmp
sbb
xor
push
insb
push
mov
cmp
insl
fwait
inc
ficoms
daa
out
adc
call
push
add
pop
ds
cmp
mov
sbb
push
and
push
lock
mov
call
and
loopne
dec
cld
jae
aam
mov
and
jl
lods
add
bound
cmp
cwtl
testl
imul
sbb
xchg
shrl
ficoms
sbb
fstpl
sarl
mov
dec
mov
inc
pusha
lret
shl
jg
popf
inc
jmp
mov
hlt
jle
xchg
xchg
cmp
hlt
pushf
orl
cmp
cmc
cld
hlt
pop
je
xchg
stc
test
adc
or
fisubl
sub
pusha
sbb
call
push
fcomps
ret
mov
sarb
jecxz
dec
movsbl
adc
aas
cmpsl
xchg
sbb
mov
push
add
std
lret
add
ljmp
mov
mov
xchg
ss
fimull
cld
lock
test
inc
adcl
mov
inc
jno
mov
lock
inc
in
aaa
cltd
test
rclb
xchg
push
mov
or
les
xor
pop
shlb
or
mov
add
ja
out
fwait
mov
jp
int3
push
mov
xor
lcall
out
scas
mov
and
sub
enter
dec
add
bound
jb
and
push
jbe
out
fcoms
inc
and
add
mov
scas
cld
repnz
adc
xchg
out
cmp
mov
mov
add
out
popl
push
loope
frstor
jnp
sub
ss
mov
stos
insb
add
inc
push
or
out
cmp
mov
pop
pop
insb
mov
adcw
mov
push
les
jge
test
arpl
mov
mov
push
mov
shll
inc
mov
mov
sbb
shrl
scas
dec
jmp
mov
movsb
dec
in
jp
mov
mov
jns
jb
pop
xchg
js
mov
jne
test
cli
xlat
mov
mov
in
subb
outsb
mov
lds
jo
lret
shrl
xor
test
leave
sbb
push
popf
or
inc
fcoml
in
pop
xchg
lea
xor
stos
or
mov
mov
stos
clc
movsb
and
sub
add
sbb
leave
arpl
and
movsb
fidivrl
push
jnp
repnz
jns
mov
imul
add
mov
popf
mov
clc
xchg
stc
xchg
testb
jnp
jl
xchg
stos
push
push
repnz
imul
cmp
repz
mov
sub
pop
push
test
mov
popa
fidivl
jae
add
inc
and
and
insb
loope
mov
xchg
jb
mov
cmp
inc
addr16
push
mov
cmp
dec
arpl
icebp
xlat
popf
cmp
clc
aad
jne
mov
negb
fcoms
xchg
jge
lock
mov
loop
les
dec
pop
adc
dec
and
sub
pop
push
add
xchg
xorl
pop
sahf
sbb
jl
mov
xchg
int3
es
lea
imul
push
sbb
test
push
dec
jmp
lret
push
ja
push
daa
xor
lahf
xchg
sbbb
push
sbb
jge
test
pusha
movsb
xor
in
lcall
adcb
adc
xor
add
mov
jp
stos
testb
push
sbb
fs
xor
out
dec
pop
shlb
mov
or
divl
std
mov
daa
adc
imul
sbb
lds
sti
cwtl
and
xor
mov
adcl
subb
jmp
repnz
sub
dec
mov
lret
rorb
test
xchg
aaa
cmp
inc
cwtl
sub
push
mov
ret
notb
cmpsl
orb
pop
test
mov
pop
addr16
mov
pop
mov
out
repnz
ja
pop
fwait
jp
rorl
sbb
sti
sbb
jmp
rorl
xor
and
mov
addr16
and
adc
ljmp
shlb
loopne
or
addb
imul
fs
movsb
aaa
sbb
mov
cmp
jnp
stos
in
jl
je
shl
add
hlt
pop
push
pop
out
jno
or
jns
imul
cmp
mov
movsb
cli
dec
jbe
fistps
shrl
fnstsw
mov
jno
cmpsl
outsl
sub
push
mov
rol
into
daa
fistl
sbb
fldl
adc
sbb
stc
cmpsw
testb
cwtl
imul
dec
push
aaa
fsubl
mov
ret
sub
ror
aad
pop
shrl
shlb
out
dec
cmc
lahf
not
aaa
nop
or
out
popa
incb
cmp
mov
mov
sub
cwtl
enter
inc
or
outsb
push
sub
inc
ljmp
or
cwtl
mov
xor
cltd
inc
test
push
bound
mov
cmpb
jne
adc
pop
jno
lcall
mov
in
cmp
fistps
xchg
int
pop
pop
je
mov
out
mov
out
jp
mov
sub
cmpsl
clc
or
mulb
dec
cmp
rclb
pop
mov
outsl
pushf
pop
cli
jns
mov
pop
push
arpl
ss
hlt
xchg
mov
sbb
cmp
or
jae
push
mov
add
loope
sub
stos
ds
jno
mov
sti
imul
mov
fptan
je
dec
push
loope
sbb
add
test
mov
pop
and
dec
outsb
add
or
or
adc
cwtl
inc
fisttpl
cmpsl
addr16
mov
pop
xchg
aaa
mov
sub
sub
mov
and
inc
fistl
das
cwtl
je
rolb
faddl
or
xchg
in
push
je
sub
lods
xchg
aaa
mov
into
in
rorl
lds
incb
pop
dec
fldpi
hlt
push
fsubrl
pop
fmulp
and
jns
aas
add
jle
cmp
outsl
cmp
dec
jge
and
vpsraw
loopne
cli
stos
clc
inc
stos
jbe
add
addr16
jp
pop
cli
xchg
daa
push
icebp
aas
lods
jo
mov
add
jp
adc
aam
sub
jge
mov
push
test
aaa
gs
jb
and
push
pop
pop
xchg
add
clc
sbb
aas
inc
into
inc
rcll
push
add
sti
cmpsb
push
out
adc
incl
xchg
sbb
int3
adc
jbe
fcmovnb
cmp
sbb
cmp
jp
xor
lods
mov
and
dec
loope
inc
inc
fs
adc
inc
dec
mov
in
rclb
cmp
ret
and
mov
xlat
xor
mov
mov
leave
cmp
lret
andl
sub
adc
xchg
or
and
cmpl
xor
inc
and
dec
fstps
clc
xor
jmp
sbb
addr16
dec
lods
aas
je
cmp
shrl
ror
push
lea
sub
imul
and
sbb
pop
js
push
mov
jae
mov
hlt
and
inc
pop
adc
push
mov
fdivs
rcrb
adc
js
insb
add
xchg
pop
dec
cmp
cli
pop
clc
inc
out
lret
test
inc
ud0
mov
jns
lret
xor
das
pop
dec
pop
sti
mov
pop
sbb
pop
add
xchg
das
stos
pushf
fucomp
sarl
or
das
jl
xlat
push
mov
ja
outsb
adc
fldt
sub
jle
movsb
bound
call
mov
push
xchg
loope
mov
push
pop
sub
inc
in
adc
jmp
decl
lcall
cmp
scas
push
and
mov
mov
dec
cmp
adc
fisubl
dec
dec
aaa
mov
out
arpl
repz
cmc
mov
ret
shrl
sbb
aas
lahf
lods
mov
enter
pop
mov
jbe
dec
pop
sub
pop
pusha
mov
cli
or
ljmp
mov
in
sbb
mov
mov
jbe
into
cmp
lret
or
and
orb
sti
gs
rclb
mov
call
ljmp
sbb
adc
cli
lcall
dec
fs
stos
insl
push
cmp
stos
add
loop
pop
jg
xor
sub
insb
inc
add
cmp
flds
mov
in
jp
bound
cmp
out
push
pusha
jmp
mov
addr16
pop
mov
sub
repnz
lock
lret
sbb
sub
push
mov
js
sbbl
inc
sahf
sbb
inc
sub
repz
cmp
mov
sub
adc
jns
mov
movsb
test
adc
in
push
pop
xchg
movsl
imul
popf
sub
xor
mov
leave
repz
jo
xlat
mov
sub
sub
imul
cmp
and
sbb
sbb
rcr
pop
sbb
fs
aaa
mov
das
sbb
icebp
xchg
cmp
mov
sub
lahf
cmp
sub
std
or
inc
and
test
mov
sbb
ds
xor
and
adc
mov
pusha
lds
lret
hlt
jo
mov
inc
aam
jns
cmpsb
cmpl
pop
iret
mov
popa
xorl
and
popa
jno
outsl
pusha
pop
mov
jmp
das
add
dec
leave
pusha
mov
xchg
insl
pop
xchg
inc
and
jle
cltd
dec
mov
clc
ja
clc
aaa
je
dec
mov
mov
loope
mov
push
lods
dec
jnp
cs
mov
mov
aam
stos
rclb
inc
mov
push
pop
push
sahf
scas
cmp
addb
lods
ret
or
fidivrs
cmp
xchg
fimuls
and
push
xchg
and
inc
sbb
inc
pop
testl
sub
and
jbe
jno
movsb
out
das
cmpb
lock
jnp
push
scas
push
pop
jbe
and
scas
or
mov
xchg
mov
mov
jle
push
push
test
sbb
faddl
and
sarl
mov
imul
push
inc
push
dec
iret
cs
sub
mov
adc
jne
bnd
je
ret
mov
in
mov
in
mov
inc
test
into
xchg
push
pop
fistl
cmp
adc
mov
jecxz
sbb
mov
add
rcrb
loop
mov
daa
mov
mov
or
cli
inc
inc
ficoms
jge
jne
fiaddl
dec
aas
adc
fwait
or
push
cld
or
imul
sub
sub
push
fildll
imul
loopne
mov
add
push
or
sbbl
xchg
and
mov
and
test
icebp
xor
push
movsl
jl
sbb
js
sub
mov
mov
push
int
clc
ja
lret
inc
adc
nopl
out
mov
mov
adc
sbb
or
or
add
lods
mov
xchg
pop
shrb
int
dec
inc
mov
mov
test
jmp
or
and
mov
mov
roll
ljmp
adc
sub
rcr
cwtl
stos
leave
minps
std
mov
dec
mov
movsl
je
leave
pop
pop
adc
xor
enter
xchg
lahf
sub
test
lret
ss
and
add
pop
mov
and
mov
xor
inc
and
push
and
stc
rol
rorb
mov
outsl
aaa
xchg
js
xorl
aad
push
jnp
in
and
scas
sub
push
cmp
aad
rorl
stc
push
push
dec
shr
dec
pop
pop
imul
adc
insl
jle
lcall
inc
pop
push
and
cmp
hlt
mov
cmp
mov
fwait
mov
pop
scas
lahf
pop
push
aam
cmpl
inc
adc
mov
mov
sub
and
notb
adc
shrl
mov
sbb
xor
mov
pusha
out
sub
out
out
adc
les
jbe
add
sarl
test
test
movsl
movsl
cwtl
xor
fnstenv
adc
mov
pop
xchg
sbb
cli
pushf
jmp
test
mov
movsb
mov
insb
mov
dec
cmp
rorb
mov
push
ja
dec
out
pop
into
in
dec
fnstsw
or
in
sbb
push
dec
xchg
popf
icebp
push
cmp
fwait
dec
imul
shlb
or
addr16
adc
pop
std
ret
insl
cmp
mov
sub
imulb
push
sbb
aaa
lock
cli
add
cmc
xchg
adc
pop
xchg
jg
cmp
idiv
jbe
sbb
stc
fwait
mov
fcmove
push
ret
in
mov
hlt
popa
sub
mov
enter
aaa
xchg
rolb
mov
iret
cmpsb
aad
and
or
jns
xor
out
inc
aaa
or
sti
cmp
stos
mov
into
mov
mov
out
aas
mov
xchg
sbb
cwtl
xor
adc
push
push
cmp
adc
add
sbb
jns
dec
shrl
jns
out
xor
mov
addr16
xor
aam
sbb
pop
mov
ret
fldl2e
fsqrt
and
test
insb
xchg
clc
int3
int3
leave
out
or
cmp
insb
xchg
outsb
inc
dec
xor
movsl
sub
fdivp
lock
adc
stos
push
push
lods
xchg
outsb
push
ljmp
push
jne
dec
add
lcall
and
fnstsw
orl
outsb
dec
pop
pushf
mov
notl
andl
adc
in
mov
xor
sub
sub
bound
mov
push
mov
daa
fidivrs
push
jno
inc
test
lods
addl
test
clc
nop
fiaddl
je
add
jno
daa
mov
ffree
rcrb
mov
je
fcoml
mov
es
jp
mov
inc
fwait
cmpsl
jo
data16
call
push
push
in
ret
cmp
push
test
xchg
sarb
shlb
stc
repnz
xor
xchg
pop
xor
dec
xchg
movsl
mov
test
stos
xor
pusha
aam
dec
loopne
lock
sub
pop
sub
or
pop
out
ljmp
out
inc
inc
cmp
push
pop
rclb
imul
repz
dec
addl
sahf
xor
sub
and
stos
cmc
stc
lds
gs
stos
ret
xor
scas
mov
or
outsb
lret
xchg
call
cmp
lock
xchg
fisttps
dec
mov
pop
push
or
push
mov
mov
or
mov
sub
inc
movl
cmp
jbe
xchg
push
out
fs
dec
fxch
cmpsl
addr16
jb
hlt
rcrl
push
add
pop
dec
cmp
dec
and
lret
enter
push
adc
das
daa
push
subl
faddl
mov
cwtl
sahf
aad
pushf
cmc
stos
out
mov
xchg
jle
xlat
push
adc
mov
sbb
add
push
push
sbb
push
xor
lcall
adcl
lcall
sarb
xor
cmp
cmp
inc
ja
pop
stos
es
jmp
scas
add
or
iret
sub
jbe
std
aad
shlb
fmulp
fisubrs
mov
test
hlt
daa
xchg
loopne
fs
mov
push
xor
inc
mov
mov
movsl
and
addr16
inc
fcoms
in
and
stc
nop
sbb
inc
test
lock
dec
mov
pop
xor
inc
fwait
cltd
fcmovb
sbb
add
xor
pop
sub
mov
push
loope
or
mov
xchg
lcall
out
in
mov
scas
dec
cld
sbb
pandn
fbld
xchg
lods
cmp
insl
inc
loop
sbb
adc
xor
push
mov
incb
inc
or
rorb
insb
xor
adc
lret
ficoms
add
movsl
lcall
cs
test
sub
aaa
in
mov
mov
cmp
int3
jnp
xchg
xor
or
neg
adc
in
ss
aaa
adc
aas
mov
in
aam
mov
mov
or
movsb
jne
sub
cli
inc
push
sbb
insb
jno
push
xor
adc
jge
aas
pop
mov
test
mov
xor
sub
push
mov
jne
in
into
sub
repz
pop
adc
jbe
inc
dec
wrmsr
lods
orb
aam
lea
scas
cmc
ds
into
sub
loop
and
pop
adc
and
mov
jl
imul
mov
push
lret
and
rcl
mov
inc
loope
pop
push
jecxz
add
int
bound
inc
add
enter
push
or
cmc
les
ss
cmp
xchg
in
jecxz
rclb
pop
jbe
pop
sbb
adcl
pusha
jle
adcl
pushf
xchg
stos
inc
adc
push
es
ss
sub
push
inc
pop
icebp
jl
mov
addb
cmp
xor
jg
insl
xlat
shl
sbb
jb
mov
xlat
jge
popa
movsb
fdivrs
jp
hlt
inc
mov
jle
jl
fbld
sbb
int
jb
out
repz
push
xchg
mov
add
jae
adc
lock
cmp
sub
scas
dec
mov
lret
xchg
cmp
test
movsb
and
jmp
jo
ljmp
lods
into
xor
or
ja
mov
cmp
and
je
jnp
inc
xlat
add
mov
cmc
cmp
xor
lret
loopne
inc
imul
fiadds
xchg
mov
repz
mov
cs
testl
xchg
hlt
and
bound
mov
mov
jmp
adc
cmp
or
mov
pop
mov
and
jo
and
dec
xor
orl
cmp
xor
imul
in
mov
xchg
mov
shlb
adc
or
cli
ds
add
jecxz
hlt
adc
pop
fcomp
xchg
inc
inc
jo
mov
xchg
leave
pop
push
xchg
sub
xchg
pop
and
stos
dec
xorl
jecxz
mov
adc
pop
clc
daa
xchg
fwait
mov
add
addr16
adc
divps
xor
lcall
adc
mov
aam
adc
insb
pop
push
leave
adc
xchg
mov
xor
scas
pop
and
fmul
add
aad
xor
lahf
je
out
dec
and
xor
outsb
inc
add
mov
fistpl
adc
aam
sub
jo
adc
and
test
xchg
mov
xchg
inc
ror
scas
fists
hlt
pusha
fidivl
int
jp
jmp
xor
pushl
xlat
cli
add
cs
dec
fs
mov
lcall
test
jmp
inc
test
and
bnd
pop
imul
leave
pop
popa
xchg
ficoms
adc
sub
popa
lea
push
enter
mov
or
int
movntq
roll
iret
mov
in
jmp
clc
lods
inc
dec
clc
ror
je
and
cmc
outsl
mov
cs
loope
mov
jmp
push
jge
mov
pop
mov
js
adc
jmp
popf
notl
adc
std
std
clc
inc
aas
jbe
adc
movsb
in
cli
adc
shll
adc
adc
insb
sarl
idivb
mov
hlt
es
adc
push
lds
bound
bound
jmp
pop
rclb
or
push
inc
or
xor
push
stos
mov
xchg
subl
call
das
pop
test
jge
std
add
bnd
inc
push
data16
add
pop
ss
test
sub
clc
and
sub
jmp
add
stos
push
and
pop
fidivl
xchg
daa
lcall
and
ljmp
aaa
ret
or
orb
enter
testb
push
pop
mov
xlat
leave
pop
movsl
dec
pop
push
mov
sub
fcoml
and
pop
leave
ds
push
xor
lock
mov
roll
movsl
or
xchg
mov
sti
push
mov
js
or
lea
dec
subb
cmp
cmp
test
icebp
ret
ds
sbb
add
rorb
inc
adc
xor
push
xorl
in
mov
mov
call
iret
xchg
daa
into
sbb
jne
inc
push
sub
pop
xor
xchg
mov
out
into
aaa
pop
fwait
cmc
jl
mov
int3
dec
fists
mov
sahf
mov
jae
mov
cmpb
rcrl
cmpsb
dec
fwait
in
into
add
leave
inc
add
mov
addr16
adc
incb
xchg
xor
orl
loope
pop
arpl
fsqrt
out
add
aaa
outsl
je
lret
sub
or
inc
pop
xor
sbb
js,pt
mov
push
decl
push
mov
mov
mov
imul
ljmp
jecxz
stos
jno
sub
lret
clc
hlt
outsb
push
hlt
push
push
pop
adc
mov
sbb
aas
adc
fucomi
test
stc
in
lret
movsl
imul
cli
nop
stos
in
jp
outsb
pop
jns
and
or
into
outsl
sbb
or
iret
incl
and
rorl
ret
hlt
cmp
pop
inc
mov
inc
push
xor
mov
neg
test
mov
mov
add
addr16
ja
inc
cmpsb
mov
lods
fildl
add
test
push
clc
xor
push
test
xchg
dec
push
sbb
ret
adcb
cmp
aam
pop
xor
je
push
movsl
outsb
push
daa
leave
cmp
adc
stos
out
lcall
rol
add
ret
mov
mov
out
or
and
test
movsl
xchg
adc
sub
xor
les
cld
cmc
roll
popa
cmp
jne
dec
push
inc
mov
xor
xchg
push
es
adc
mov
lock
les
inc
jno
repnz
dec
hlt
add
push
jge
repnz
mov
out
sub
xchg
mov
push
cltd
xor
and
das
add
call
push
jecxz
cmovns
cld
mov
in
and
addr16
mov
mov
add
insb
mulb
fwait
repnz
mov
dec
xchg
fs
int
in
dec
lret
inc
dec
fs
mov
frstor
mov
pop
cmpsb
mov
outsb
int
jnp
pop
sbb
adc
testl
mov
pop
fcom
pop
aam
loope
push
subl
adc
inc
cmpb
icebp
lods
xchg
jns
in
clc
addr16
std
mov
mov
jno
insl
mulb
lcall
xor
iret
add
pop
mov
xchg
pop
scas
mov
outsb
ja
dec
push
sbb
iret
outsl
inc
ss
and
add
repz
cld
or
mov
and
scas
insl
adc
repz
cmpsl
andl
dec
lods
push
pop
sbb
pop
cmp
inc
cmpb
sub
adc
push
add
add
pop
jge
bound
cmp
fwait
or
and
out
or
shrl
inc
jmp
stos
sub
flds
andb
mov
js
push
or
popf
add
push
xor
sub
dec
gs
out
adc
sub
and
push
mov
inc
mov
cmpl
add
enter
sub
jge
call
movsb
sti
mov
jbe
mov
xchg
xchg
mov
inc
je
cmp
or
mov
and
push
and
test
daa
pop
cwtl
sti
pop
mov
mov
mov
popf
dec
and
cmc
ds
mov
mov
fstpt
ja
mov
repz
ds
inc
gs
jbe
cmp
adc
jl
dec
pop
inc
cs
mov
inc
leave
outsb
ret
mov
hlt
xorl
rcr
imul
pop
sbb
pop
add
adc
shll
or
xchg
out
mov
lock
fwait
gs
inc
xchg
add
mov
or
rorb
scas
mov
push
mov
add
fmulp
ss
push
lahf
or
lods
and
test
jno
test
call
cmc
xor
cmp
inc
push
sbb
pop
test
fldl
push
inc
mov
and
or
mov
loop
pop
pop
roll
push
xor
jno
xchg
pop
sbb
mov
out
dec
xchg
ret
push
outsb
out
pusha
xlat
aas
inc
loop
mov
dec
pop
push
pop
mov
jl
fcomps
or
mov
je
les
cltd
dec
mov
or
sar
icebp
and
lret
pushf
in
sbb
in
cld
adc
sub
pop
pop
xor
mov
pop
and
and
inc
ja
jmp
cmpsl
dec
or
xor
push
mov
leave
bound
mov
fistpl
pop
sbb
inc
fwait
sub
popf
cwtl
dec
outsb
and
pop
stos
dec
xchg
add
mov
pop
mov
aaa
fwait
cld
dec
xchg
into
push
out
xchg
mov
mov
ljmp
stos
shll
lea
or
jnp
enter
fcomip
and
ret
jl
in
inc
loopne
pop
dec
cmp
mov
cmp
cmp
and
jbe
sbb
cs
xor
cmpsl
and
pop
sbb
in
pop
ret
mov
addb
push
or
arpl
sbbl
cmp
adc
into
shlb
nop
dec
ljmp
pusha
adc
pop
aad
jo
and
filds
cmp
das
nop
lds
stos
mov
pop
insl
dec
mov
push
sub
pop
mov
ret
pop
test
mov
jne
mov
xor
loop
pushf
pop
dec
cld
inc
js
push
gs
movsb
or
pop
fidivrl
mov
mov
pop
mov
std
out
dec
pop
paddd
mov
inc
jl
inc
jge
push
sbb
push
xchg
cmc
inc
repz
adc
sti
lret
dec
fwait
or
mov
mov
and
push
lock
fists
mov
mov
inc
test
and
mov
inc
xchg
mov
and
and
xchg
add
imul
outsl
sub
mov
imull
xchg
fwait
mov
pop
inc
dec
lods
sub
push
pop
xchg
or
imul
mov
cmp
adc
out
xchg
test
scas
std
pop
lock
or
jmp
or
movsb
mov
lods
scas
aas
mov
jbe
jle
xchg
rcl
mov
nop
push
pop
fidivl
sbb
dec
sarl
rol
in
dec
dec
adc
movsl
fstl
int
inc
int3
dec
dec
lods
into
xchg
iret
mov
pop
lret
out
aas
rorl
imul
out
or
add
loopne
dec
sahf
out
cmp
lds
sbb
push
movsb
ss
xor
push
enter
cmp
mov
mov
mov
sbb
out
dec
mov
xlat
mov
mov
incb
and
out
adc
jmp
aad
pushf
or
pop
mov
enter
adc
push
fnstenv
hlt
daa
push
inc
push
or
jecxz
cmp
stos
mov
aaa
movsb
xor
in
or
sub
add
sbb
fidivrl
cli
jle
dec
int3
xchg
pop
mov
inc
rorl
into
movsl
repz
jbe
aad
adc
sbbl
pop
xor
push
sbb
xor
push
or
adc
inc
leave
dec
sahf
pop
and
or
subb
adc
inc
or
xchg
rorb
jle
cmp
inc
xor
jmp
sbb
inc
adc
jge
in
pop
lahf
les
cmp
mov
fadds
pop
cld
jle
loop
sbb
in
insl
push
addb
data16
jge
push
adc
push
cmp
xchg
je
out
test
lret
repnz
movsl
popa
testl
js
adc
inc
paddw
mov
jg
adc
jne
mov
rcll
rclb
push
pop
push
lods
inc
add
push
into
dec
fldl
repnz
jmp
insl
pushf
movsb
push
gs
out
call
jae
jo
add
ds
popf
lea
jle
lea
xorb
dec
sbb
adc
mov
pushf
lcall
test
dec
mov
push
xor
jnp
xchg
insb
call
pop
sarl
orl
fsin
xchg
jmp
xchg
popf
je
nop
test
dec
push
pop
and
and
ret
dec
mov
pusha
sub
mov
lods
add
pop
add
push
lock
inc
inc
enter
cmc
hlt
xchg
insb
xor
fmuls
pop
sub
out
int3
xor
mov
cmp
xchg
cltd
bt
push
shrl
inc
push
in
adc
xchg
loop
mov
or
push
subb
adc
xchg
pop
test
inc
nop
outsb
fisttpll
pop
add
xchg
int
ds
test
or
push
sti
push
pop
mov
inc
mov
jnp
xchg
bound
scas
insl
push
scas
fisubrs
pop
cli
imul
mov
and
xchg
jbe
addr16
test
sarb
sub
add
mov
and
jmp
pop
mov
mov
lea
sbb
outsl
mov
sbb
js
out
sbb
or
add
and
loop
dec
add
cmp
xchg
loopne
push
loopne
jne
cmp
mov
dec
in
pop
inc
dec
adc
sub
sbb
orl
loop
inc
movsl
inc
sub
jbe
aam
xchg
lock
mov
and
xor
or
mov
sbb
jp
mov
addr16
ret
ret
adc
xchg
dec
mov
pop
stos
dec
ret
mov
out
jnp
pop
add
inc
mov
filds
mov
in
arpl
out
push
ljmp
jecxz
push
jb
es
push
lods
adc
mov
pop
out
sbb
dec
lcall
cs
mov
testl
ror
test
mov
jno
mov
test
or
push
dec
and
push
mov
out
cmpsl
loope
xor
shl
and
test
jne
mov
mov
les
fninit
mov
bound
sahf
leave
clc
decl
dec
repnz
jg
dec
mov
fs
ljmp
out
and
iret
dec
in
mov
xor
add
xlat
shlb
pop
pushf
and
mov
push
xchg
outsb
mov
mov
xor
dec
insb
cmp
push
stos
add
xchg
nop
jb
mov
pop
lret
lods
inc
dec
mov
in
cmp
mov
test
mov
rclb
aaa
bound
xchg
loopne
imul
int
rorl
xor
divl
push
jns
xchg
arpl
ss
sbbl
int
dec
mov
mov
mov
test
mov
test
xor
ret
shlb
or
pushf
enter
imulb
jno
mov
sti
mov
in
add
divl
cltd
data16
mov
ror
pop
add
mov
out
push
jmp
mov
and
jmp
repz
xchg
jno
test
lahf
mov
sbbl
xor
or
sti
pusha
dec
call
jg
rol
es
in
addb
mov
rorl
add
sahf
sub
icebp
sahf
lock
leave
imul
enter
dec
das
stos
mov
mov
xchg
adc
es
vpmacsswd
cmp
cs
mov
arpl
lret
fsubl
inc
sbb
sub
stc
pop
scas
loope
add
fistps
adc
fists
fstpt
sbb
and
int3
out
add
push
mov
jae
jecxz
sbb
rcll
add
push
daa
or
push
clc
xchg
std
adc
out
cmp
mov
cmp
sub
adc
in
outsb
sub
push
jbe
xchg
jb
ret
dec
xchg
add
cs
inc
ja
mov
ja
pop
push
imul
or
mov
mov
pop
sbb
adc
fstp
out
push
sub
mov
pop
inc
sbb
and
add
je
enter
test
sub
dec
push
xchg
sarl
cwtl
subl
pop
mov
daa
jno
mov
out
adc
jns
movsl
xchg
cli
inc
jmp
or
fisubs
fisttpll
cmpsb
scas
iret
lret
jg
cmpb
repz
adc
dec
mov
sbb
add
push
adcl
sbb
xchg
push
nop
fs
enter
xor
adc
push
xchg
sub
xchg
imul
or
pop
lea
cmp
sub
cmpsb
or
or
sbb
mov
loopne
scas
movsb
push
and
popf
into
push
xor
or
mov
push
rcr
fistl
aad
shll
neg
pop
shll
jg
mov
sahf
sbb
mov
stc
pop
pop
mov
xor
incb
outsl
sub
icebp
jp
pop
xor
add
repnz
enter
jg
in
pushf
je
cmpsb
xchg
add
ljmp
push
mov
lock
shrl
sub
icebp
or
sbb
pop
test
int3
mov
lea
and
rcrb
loopne
dec
mov
in
pop
mov
das
or
fisttps
mov
fmuls
lds
cld
pop
pop
xor
out
ds
test
lret
shrl
pop
xor
jae
mov
mov
in
add
pop
arpl
mov
xchg
ret
movsb
jp
inc
sub
sub
jmp
aam
mov
pop
hlt
push
std
and
xor
rcll
and
imul
inc
ret
sbb
clc
in
adc
adc
push
out
movsl
mov
sub
xor
xchg
jo
lods
icebp
out
js
add
cmpsl
cmp
mov
stos
cmpsb
jge
inc
xchg
or
jmp
jge
lret
sbb
cwtl
lret
mov
xchg
popa
adc
xor
pop
jns
xor
inc
sti
mov
je
push
cmp
pop
mov
or
test
pop
pop
lret
add
mov
dec
movsl
jo
setns
gs
fdivl
jge
pop
sbb
mov
mov
in
aam
adc
push
hlt
rcrl
adc
test
add
or
fadds
push
fwait
shl
jo
and
movsl
dec
add
ja
notl
je
scas
add
stos
xor
push
aam
xlat
or
inc
or
fidivl
sub
jmp
xchg
pushf
push
in
xchg
pop
xchg
pop
subb
call
push
test
mov
xor
adc
test
add
pop
sub
insb
mov
jmp
mov
pop
sti
xchg
push
orb
jb
test
pop
jno
div
xor
shrb
negb
fildl
lods
imul
clc
outsb
mov
out
pop
cmc
aas
repnz
mov
add
sbb
jbe
or
loope,pt
mov
mov
sbb
pop
adc
popa
jnp
mov
shl
cli
jecxz
pop
fdiv
add
iret
push
cmpsb
data16
mov
mov
rcll
test
sub
cli
sbb
dec
mov
in
sbb
adcb
xchg
jl
cs
test
jl
cwtl
arpl
aaa
mov
sub
dec
push
inc
dec
add
sub
adc
jecxz
push
pop
mov
mov
dec
xor
push
cli
and
sub
cmp
dec
les
xchg
jl
push
lds
mulb
outsl
jns
jae
mov
adc
idivb
jecxz
jno
movsl
xchg
mov
fcoms
out
sahf
int
rol
int
mov
imul
mov
repnz
cmc
push
aad
or
insl
cmp
cltd
inc
das
push
mov
call
cmp
andb
inc
loope
stc
shll
and
mov
stc
in
adc
ds
pop
sarb
add
jmp
stos
shr
cmp
sub
cmc
addr16
sbb
xchg
movsl
sti
mov
pusha
xlat
adc
lds
js,pt
lahf
out
xchg
test
enter
pop
jle
int
cs
sarl
das
or
sub
and
pop
and
xor
push
pop
mov
lds
and
xchg
movsl
xor
popa
mov
inc
xchg
rcll
mov
out
inc
imul
mov
fdivr
mov
xor
nop
les
insl
scas
je
imul
roll
sahf
pop
pop
call
push
scas
jmp
xchg
mov
pop
out
gs
mov
repnz
inc
mov
adc
lret
mov
out
push
and
aam
ss
mov
inc
add
iret
stc
push
xor
pop
js
sbb
pop
add
jle
testl
stos
mov
mov
cmp
add
mov
arpl
sub
dec
xchg
sarl
loop
jbe,pn
push
xor
cwtl
out
adc
stc
xchg
add
inc
ljmp
xchg
fcmove
cmpl
cmp
lods
mov
sub
dec
sbb
push
and
aam
pmaxub
loopne
out
xchg
mov
bound
out
stc
shrl
mov
jns
shlb
jecxz
in
cmc
adc
std
stos
clc
pop
rcr
movsb
jl
ljmp
push
outsl
call
stos
jecxz
mov
aad
test
dec
jmp
movsl
pop
popw
pop
mull
jmp
xlat
jg
loopne
push
xor
aad
sub
ljmp
cmpsb
and
xor
mov
sub
sbb
mov
pop
adc
lcall
mov
push
push
aas
cmpsl
negl
dec
pop
mov
sti
xchg
or
inc
sub
int3
fiadds
sub
mov
xchg
jno
sub
or
loope
daa
data16
stos
pop
sub
add
sbb
mov
jo
sti
dec
rcrb
inc
addb
cld
push
mov
push
jns
lret
jle
xchg
sbb
in
in
jns
sub
add
inc
jnp
int3
adc
pop
daa
loop
lret
dec
mov
ja
pop
cmp
mov
sahf
push
les
sub
push
int
pop
push
pop
mov
hlt
test
sub
popa
mov
subb
inc
push
sub
push
icebp
or
pop
pop
pop
stc
in
pop
sub
cli
xor
fldcw
les
aas
push
jge
adcl
into
mov
aam
mov
cltd
ret
adc
xchg
xor
dec
out
jg
fidivs
inc
jnp
dec
push
sbb
fldl2e
or
jae
imul
sub
nop
xchg
inc
inc
arpl
cli
add
ds
mov
push
jns
fcompl
jl
push
xchg
dec
sti
imul
xchg
adcl
cltd
mov
xor
std
rcl
fldcw
push
aaa
xchg
dec
addl
mov
xor
hlt
data16
ret
xorl
sbb
stc
xor
js
ja
inc
mov
adc
imul
cwtl
pop
mov
mov
push
sub
push
in
pop
rorb
jl
dec
cmc
insb
inc
flds
aad
leave
push
sti
cmc
repnz
adc
or
repz
xor
inc
fldenv
and
fbstp
test
mov
pop
jle
jns
add
add
aad
pop
clc
out
push
mov
mov
inc
push
je
fcoms
out
cmpsb
cmp
dec
pop
mov
add
mov
ds
repz
mov
movsl
stos
pop
lret
fcomi
jno
pop
dec
cltd
loopne
and
out
in
sti
mov
dec
mov
adc
imul
in
imul
cmpsl
movsl
sbb
mov
mov
das
cmpsl
addb
mov
jecxz
or
add
arpl
pop
cmpb
cs
mov
dec
push
enter
or
mov
mov
enter
lods
jg
jnp
repz
or
cmp
cmpsl
mov
cmp
adc
mov
jg
sti
ret
ljmp
or
xor
bound
data16
je
and
lock
mov
call
mov
out
or
xchg
or
lds
popf
mov
sbb
xor
inc
loop
out
mov
in
xorl
push
sahf
cmpl
push
loop
shl
jg
cmp
mov
out
inc
add
ss
cmp
push
stos
lcall
ss
mov
xor
cmpsl
xor
fisttpll
pop
ds
pop
cmpsl
dec
inc
add
jb
xor
scas
in
jmp
xor
aaa
dec
fldcw
mov
mov
pop
aam
outsl
bound
negb
jp
loopne
ret
arpl
aaa
dec
jp
push
or
lea
call
adc
pop
scas
push
cltd
int3
cltd
cmp
push
lods
pop
das
bound
in
or
mov
rcrl
sub
sub
repz
mov
call
mov
nop
hlt
hlt
mov
ret
and
push
cli
leave
and
ret
ret
out
out
cmpsb
pop
icebp
mov
mov
scas
lcall
xor
push
inc
adc
sub
and
mov
sub
and
imull
fmuls
and
lret
or
or
lock
ror
dec
xchg
call
dec
sbb
add
adc
mov
dec
imul
mov
pop
bound
xor
jl
popa
jmp
dec
testl
cmpl
scas
out
sti
sub
push
and
adc
xchg
iret
push
inc
cld
dec
fwait
push
or
aad
adc
rcrb
push
mov
jl
mov
ja
dec
mov
cmp
xor
insb
lods
in
adc
pop
xlat
jecxz
lret
inc
addr16
xor
xchg
and
js
xchg
inc
inc
in
mov
adc
jecxz
sub
sbb
jp
test
or
jae
in
xchg
add
js
jae
push
inc
sahf
repz
xchg
out
cmp
cwtl
sbb
cmpsb
pop
push
push
repnz
add
clc
fmull
imul
insl
xchg
xchg
mov
outsl
in
in
jne
lods
movsl
push
daa
call
xchg
and
sbb
mov
in
std
or
lock
in
daa
sub
jg
outsb
push
lcall
mov
iret
mov
ja
lret
ret
into
jno
cmp
test
imull
inc
xor
std
jmp
xorl
or
sbb
sub
and
pop
sub
adcb
cwtl
dec
arpl
jne
or
jecxz
push
mov
jno
adc
sub
out
mov
and
mov
out
jmp
jae
daa
push
flds
xchg
add
dec
sbbl
xor
mov
insb
ds
xchg
mov
mov
clc
push
sti
mov
lods
inc
dec
imul
mov
and
sub
adc
xchg
xchg
popf
mov
jns
ffree
movb
pop
jg
and
dec
sub
pop
lret
std
rolb
dec
mov
fidivrs
sbb
xorb
movsl
sahf
in
push
sbb
xchg
iret
sub
nop
pop
cmpsl
add
int3
sbbl
hlt
mov
ja
mov
adc
inc
xor
lcall
rcrb
rclb
mov
lds
jnp
mov
add
out
cwtl
mov
jb
fisubrs
inc
mov
push
jne
inc
fstpl
pop
adc
xchg
lock
imul
jl
xor
out
jp
and
inc
sub
aad
and
pop
dec
fldl
ljmp
pop
xchg
fs
xor
mov
pop
adc
pop
and
jbe
xlat
mov
or
cmp
mov
jae
mov
or
movsb
jnp
iret
in
dec
test
jne
jno
movsl
aaa
jno
ja
jp
pop
lds
imul
pop
push
leave
add
sub
lock
into
pop
dec
xor
das
cmp
jge
xor
int3
mov
mov
out
in
add
jle
ret
popl
mov
xchg
adc
adc
xchg
or
or
sbb
fdivs
mov
cmp
aas
aad
xchg
loopne
fwait
int3
movsl
cmp
push
mov
jbe
mov
roll
outsl
repz
dec
addl
loopne
stos
cmp
add
arpl
fsubrp
ss
icebp
mov
or
xchg
imul
mov
rcll
icebp
jecxz
mov
dec
lret
or
xchg
shlb
out
pop
popf
dec
xorb
jmp
adc
adc
das
in
inc
mov
xchg
outsb
ffreep
popa
push
push
dec
add
xchg
xor
jg
mov
lret
push
mov
ljmp
ret
sub
xchg
je
adc
cmpsb
outsl
mov
repnz
mov
repz
jns
pop
adc
inc
lea
jecxz
push
clc
in
in
ret
popf
pop
nop
mov
sbb
jno
mov
movsl
jns
adc
sbb
popf
jg
jl
inc
fldenv
cwtl
movsl
outsb
pop
push
pop
jns
cmp
adc
dec
test
sahf
enter
mov
and
push
or
daa
inc
pop
adc
fisubl
adc
xor
mull
mov
addr16
insb
xchg
pop
inc
xor
orb
loope
cmp
push
mov
dec
shld
push
xchg
cmp
lods
mov
stc
push
inc
hlt
pop
jno
repz
push
lahf
mov
dec
mov
cmp
aad
in
inc
out
outsl
xchg
adc
or
inc
leave
rolb
dec
dec
repz
sti
jae
jl
jb
sub
add
mov
xchg
jne
xchg
cmpsl
fnclex
data16
clc
lcall
sub
lock
jno
mov
stc
push
jns
or
popf
leave
add
adcb
or
cs
fidivl
push
outsb
push
rolb
mov
add
xlat
ds
push
push
lcall
shl
loope
adc
sbb
andl
sarl
inc
jne
jbe
roll
mov
aas
mov
xor
push
aaa
shr
mov
jg
sub
xor
loop
stos
lcall
es
scas
std
and
js
sti
fcompl
inc
in
push
shlb
or
ret
adc
out
jp
popf
mov
xor
rclb
jne
rol
xor
jbe
divl
xchg
xor
lea
int3
loop
inc
push
xchg
jo
andl
mov
add
mov
add
fidivl
fcomp
or
xor
jg
xchg
sub
xor
jns
fcompl
add
andb
pop
pop
ja
fldt
xlat
dec
add
and
push
popf
or
fistpl
gs
movsb
push
push
into
inc
roll
int3
addr16
and
ljmp
xchg
pop
cmp
pop
sub
lea
push
scas
lret
stos
popl
pop
adc
mov
out
push
add
pop
xchg
cld
mov
cmp
or
mov
mov
mov
jne
out
push
in
sbb
das
pop
aam
fbld
mov
mov
mov
pop
lock
loope
nop
fcoms
fwait
scas
sub
mov
pop
test
xor
loope
dec
aas
in
jg
adc
ret
test
jecxz
inc
xchg
pop
negb
popf
sbb
es
mov
mov
std
adc
push
das
lds
pop
mov
outsb
lea
or
jmp
sub
inc
push
into
pop
aad
jae
cmp
lret
mov
int
push
inc
push
xchg
push
fldenv
stos
push
fstl
jnp
push
sub
subb
push
xor
fdivrs
mov
mov
in
mov
jmp
lds
mov
outsl
mov
mov
cmp
lret
in
jo
mov
fsubs
fmull
jg
sbb
into
fs
out
bound
aaa
and
jne
inc
out
lret
sahf
negb
adc
ror
dec
xor
lods
mov
dec
imul
std
pop
pop
xchg
fldl2e
scas
lret
push
test
pop
cmp
je
dec
sub
int3
ljmp
mov
cmp
enter
jno
data16
aaa
mov
iret
xchg
xchg
rcrb
icebp
jno
pop
ja
rorb
sbb
insl
mov
push
pop
mov
sub
scas
jbe
loopne
sub
int3
icebp
xchg
stos
test
rcl
jmp
jg
gs
outsl
bound
loop
mov
in
sub
test
xchg
xchg
lods
loope
fisubrs
addb
sub
stos
jbe
in
or
xchg
pop
pop
int3
and
movsl
and
repz
arpl
test
dec
aam
mov
push
lea
mov
js
sub
inc
sub
jae
sbb
fimull
insl
orl
push
mov
into
test
dec
frstor
xchg
test
xchg
cmpsl
pop
mov
mov
mov
dec
cmp
jecxz
aam
mov
fbld
jl
cmc
dec
clc
sub
and
and
inc
xor
outsb
lcall
mov
dec
xchg
outsl
xchg
test
and
movsb
lods
jae
test
push
inc
and
pusha
mov
xchg
cltd
std
mov
out
popl
xchg
ror
xchg
lret
xor
out
adcb
adc
leave
jae
adc
lss
clc
lock
sub
pop
idivl
daa
or
jae
dec
mov
jo
xchg
int3
xchg
push
inc
cmpsb
mov
daa
lret
cmp
sub
in
out
mov
xchg
out
gs
movsb
mov
xchg
jns
fs
sahf
int
cmp
out
cmp
cltd
leave
and
pop
xchg
in
loope
adc
ficoms
mov
push
movsl
js
in
test
dec
add
lods
xor
movsb
add
test
cmp
push
jmp
idivl
fcomip
aas
adc
xchg
arpl
out
add
je
push
sbb
xor
cmp
into
inc
xorb
scas
cmp
add
xor
in
in
mov
lret
sbb
push
mov
je
scas
mov
les
add
sbb
mov
fmul
push
add
jo
aas
dec
mov
xor
adc
addr16
dec
cmpsb
jge
in
lock
adc
adc
iret
mov
and
aad
mov
pop
mov
test
adc
adc
repnz
sub
jbe
cmc
cld
xorl
pop
adc
test
ljmp
mov
mov
pop
andb
outsl
sub
sahf
sub
inc
or
sub
loopne
aaa
dec
mov
add
push
sbb
loope
xor
nop
orl
xchg
repz
xor
mov
popf
sbb
push
das
sbbl
dec
pop
xchg
xchg
and
aaa
fistps
mov
mov
testb
fadds
push
adc
xor
jle
loop
sub
jecxz
add
lcall
add
push
xchg
std
movsl
cmc
push
pop
sbb
dec
push
ja
sbb
xchg
cmpsb
adc
dec
pushf
test
int
mov
jp
or
inc
cmp
jecxz
aas
imul
aaa
xlat
out
or
sbb
cmp
dec
stos
sbb
push
push
cmp
out
fstl
inc
push
push
cmp
push
cltd
fistpl
or
xor
out
cmp
xchg
dec
mov
mov
fs
fistpl
in
xchg
jg
pop
adc
pushf
iret
int
xlat
mov
outsl
daa
jne
push
mov
cmp
xchg
sahf
mov
add
in
add
dec
shl
js
jae
and
adc
push
mov
mov
sbb
fisubl
xor
mov
sub
fldcw
cmp
leave
xlat
cmp
inc
jle
mov
jae
xlat
or
daa
shl
inc
mov
aaa
insl
adc
mov
adcb
and
in
dec
pusha
xorl
lods
cmp
push
ficoms
adc
mov
adc
bound
je
testl
pop
je
xchg
mov
xchg
or
mov
jnp
push
call
out
xchg
pop
test
cld
in
out
popf
pop
add
inc
push
enter
xchg
cmp
add
xchg
or
imul
adc
jg
aam
std
sub
lock
addl
pop
rcrl
fidivl
mov
repz
ficomps
stos
sub
mov
lahf
lock
xchg
mov
mov
popa
inc
pop
imulb
dec
shlb
je
daa
jl
iret
jne
decb
or
mov
pop
mov
dec
fimuls
je
inc
or
pop
addr16
lds
xchg
into
mov
xchg
out
mov
or
mov
mov
into
push
lods
scas
ret
push
and
pop
push
add
add
outsl
jp
mov
pop
pop
inc
mov
jl
in
test
pop
xor
inc
pop
mov
and
inc
jmp
dec
and
xchg
mov
mov
inc
adc
lods
je
mov
sti
pop
data16
jb
xor
jns
and
dec
scas
cmpsl
pop
insl
fnstsw
adc
inc
or
clc
push
adc
xor
aad
les
iret
jecxz
out
int
enter
sub
inc
aad
lret
lock
rorb
push
bound
js
mov
popa
arpl
lods
ja
gs
and
xchg
mov
out
push
jne
out
xchg
jp
adc
or
jg
test
pop
jp
lcall
repnz
mov
test
js
bound
dec
cmpsl
xchg
loop
mov
xor
pop
test
lahf
mov
adc
div
or
dec
ret
push
xchg
mov
das
fistps
dec
clc
stos
jo
inc
imul
dec
push
jno
lea
filds
in
lahf
mov
and
fimuls
lcall
add
mov
jb
sahf
out
mov
push
push
icebp
sub
inc
push
inc
push
mov
adc
mov
ljmp
push
das
sbb
inc
xor
es
cmp
jb
mov
dec
leave
insl
mov
lea
leave
imul
rorb
xor
pop
cmpsl
mov
sarl
dec
and
pop
xchg
fwait
repz
stc
jmp
pop
into
div
mov
insb
inc
sub
add
inc
lock
rcrl
xor
inc
cli
sub
xor
mov
cmp
mov
fisubs
inc
mov
sbb
push
inc
cmp
stos
cld
jb
sbb
cli
jmp
pop
adcb
cmp
xor
addr16
lret
out
aas
fdivl
icebp
pop
adc
and
mov
sub
lods
or
dec
sub
rclb
xchg
or
mov
jl
imul
xchg
pop
in
mov
outsb
scas
mov
int
fsubl
adc
cmc
test
push
outsl
xor
mov
sub
jl
sbb
inc
mov
cs
pop
jb
cmp
cmc
cmp
adc
shl
mov
js
or
cmp
pop
xchg
out
or
call
jo
addr16
sti
fs
push
insl
jp
and
xor
popf
mov
sar
das
sub
cmp
adc
jg
je
in
xchg
sti
repz
or
leave
push
lahf
aas
int3
sub
mov
adc
cmp
pop
loope
jmp
push
test
sbb
or
test
stos
ret
test
aaa
push
dec
inc
scas
stc
aam
ret
or
clc
cmp
dec
jno
push
in
xor
pminub
stos
dec
xchg
lret
adc
insb
loopne
leave
insl
inc
shl
in
or
lret
mov
mov
push
stos
mov
bnd
icebp
rol
jns
std
sbb
mov
pop
jecxz
dec
jp
andl
fnstsw
mov
mov
insb
out
fadds
out
pop
sbb
bound
sub
lea
js
arpl
pop
es
xor
pop
out
test
outsl
neg
outsb
iret
xchg
stos
add
push
fidivrl
stos
push
cwtl
mov
adc
pop
adc
les
lods
cmp
fdiv
mov
sbb
pop
mov
jp
pop
fxch
std
xor
icebp
out
test
jecxz
sbb
in
or
dec
popa
push
mov
clc
lret
jns
push
outsb
popl
jge
out
pusha
loopne
jge
adc
fldcw
mov
ret
divb
loop
inc
ss
scas
movsl
cmp
fsub
mov
inc
sahf
add
into
imul
movsl
mov
pusha
adc
inc
aad
fisubrs
pop
push
fstpt
mov
fwait
mov
cmp
test
ja
bound
pusha
adc
push
dec
add
popf
sti
outsb
into
test
enter
inc
xchg
rcrl
inc
enter
jle
movsb
pushf
in
sti
popf
icebp
jns
jp
cmc
lock
shlb
xchg
jp
cmp
pop
push
dec
dec
jmp
or
inc
push
pushf
shr
arpl
sub
testb
scas
nop
xchg
jb
add
movsl
imul
push
xor
inc
out
mov
aam
push
jne
in
dec
inc
scas
ret
xchg
hlt
sub
xor
pushf
insl
lret
adc
imull
xchg
mov
repz
push
lahf
and
addr16
sub
and
jb
dec
xor
outsb
inc
mov
fwait
repz
daa
inc
xor
nop
or
or
neg
loopne
out
push
leave
push
scas
lods
cmp
aas
mov
dec
fs
gs
hlt
cmp
add
mov
leave
and
arpl
rorb
lcall
mov
pop
test
lds
mov
dec
std
cmpsb
out
es
shlb
adc
test
mov
shrl
inc
pop
mov
mov
push
or
or
push
negb
popa
xor
add
jae
or
inc
loope
adc
mov
ret
loopne
sub
add
std
cmp
in
mov
pop
lcall
jecxz
mov
push
mov
sub
pop
sahf
popf
mov
or
movsl
or
xlat
in
jle
ja
outsl
sti
mov
shl
mov
dec
mov
pop
je
divb
jp
das
add
inc
dec
test
sbb
cmp
sub
inc
sub
or
icebp
fists
adc
sub
mov
xchg
mov
arpl
cli
mov
push
in
addl
ja
inc
out
mov
cli
scas
jecxz
fadd
add
in
js
add
push
push
cli
inc
aam
push
pop
arpl
xchg
and
mov
in
sahf
loope
outsl
or
xchg
dec
je
mov
or
leave
mov
aaa
lds
mov
jl
inc
rcll
shrb
and
push
iret
or
sub
mov
mov
xchg
pusha
add
push
test
insl
xor
inc
mov
cmp
mov
sub
push
or
mov
jmp
hlt
hlt
shl
js
push
sahf
nop
mov
xchg
into
cmp
sahf
sbb
fidivrs
sahf
pop
dec
out
add
ud2
lahf
outsl
test
mov
es
or
mov
loope
mov
sub
fdivrl
movsb
popf
ljmp
mov
ljmp
int
dec
pop
jmp
fnsave
jle
push
popf
scas
dec
addr16
pop
sbb
hlt
pop
push
insl
push
mov
int3
jle
mov
xor
fcomps
aas
cmpsb
jbe
cli
loop
push
xchg
ds
xor
cmpsl
lcall
jno
loope
push
add
mov
pop
repnz
inc
dec
mov
into
aad
xor
push
push
daa
js
jl
aaa
mov
aas
cltd
sbb
or
push
cmpsb
inc
repz
pushf
es
xchg
and
add
mov
out
sarl
xor
pop
dec
mov
xchg
mov
bound
and
dec
test
mov
push
std
push
lods
xchg
jne
fnsave
ja
pop
aaa
das
mov
stos
pop
jge
mov
insl
sub
pop
and
cmp
or
cmp
fnsave
jmp
loopne
sbb
loopne
int3
addr16
call
dec
sub
jl
pop
addl
fwait
ja
rol
pop
xchg
rclb
cli
cmp
or
mov
ljmp
mov
roll
or
jmp
pop
out
pop
push
push
daa
js
mov
aas
aaa
ljmp
add
in
outsl
sub
loopne
dec
fistpll
xchg
pop
flds
and
jp
popa
sbb
aaa
inc
in
mov
movsl
sub
pop
rol
ljmp
inc
js
jecxz
mov
dec
inc
pop
xchg
gs
in
adc
mov
imul
push
fisttps
int3
cmp
sub
fsubl
ud0
pop
inc
sahf
mov
mov
test
add
stos
rcrl
in
push
pop
ss
inc
xor
xorb
dec
rorl
sbb
pop
aad
xchg
ja
or
xchg
dec
aad
cmpsl
jmp
mov
in
mov
push
shrl
mov
and
or
xchg
sub
lea
mov
push
xorb
movsl
sti
adc
push
push
xchg
aaa
dec
fsubrl
pop
les
cmp
mov
test
xchg
adc
repnz
sti
pop
dec
adc
je
fbld
sahf
negl
cwtl
mov
or
xor
out
pop
test
sub
cmp
mov
jns
mov
mov
fstl
ja
push
mov
mov
add
xchg
sbb
les
pop
jl,pt
loope
ljmp
rorb
int3
in
lret
mov
jge
mov
dec
ficompl
and
xchg
stc
mov
cmpsl
call
fwait
mov
mov
sbb
push
pop
inc
mov
mov
cld
clc
xchg
ds
jb
xchg
cmp
inc
test
mov
cmp
mov
add
adc
mov
push
sbb
mov
lods
lock
mov
xchg
cmp
dec
sbb
push
lret
stos
xchg
in
and
lret
shl
dec
fstpl
popf
jl
outsl
xor
andb
or
orb
xlat
adc
sub
cmpsb
ss
mov
inc
sub
mov
push
pop
sbb
lret
movsl
or
outsb
stc
bound
addps
aaa
in
stos
loopne
dec
or
les
leave
test
or
sub
adc
stc
pop
in
lret
out
mov
push
aad
ret
dec
jg
idivb
addr16
dec
xchg
xor
fldl
cmc
push
je
inc
cltd
popa
fnstsw
mov
addr16
pop
mov
sbb
mov
pushf
gs
imul
ror
push
cwtl
clc
inc
imul
ja
enter
pop
inc
stos
sub
popf
jmp
aad
hlt
push
outsb
shll
cmp
mov
ret
std
sti
xchg
aas
leave
jne
fwait
movl
filds
sahf
inc
in
out
aas
sub
rcr
sbb
pop
pop
aad
mov
stos
sub
mov
test
in
jge
pop
mov
loop
mov
sbb
push
fs
xchg
sub
mov
inc
pop
stos
cmpb
cmpsb
mov
leave
cmpsb
mov
mov
push
jg
loop
mov
out
mov
mov
xlat
adc
push
into
stc
cmp
gs
mov
cmp
push
xchg
bound
rcll
push
pop
in
dec
xor
adc
mov
and
imul
jge
mov
pushf
outsb
inc
pop
add
xchg
mov
jno
pop
mov
aas
and
jns
sbb
add
push
out
dec
ret
xorl
mov
cltd
ror
add
shll
scas
push
lods
dec
cmc
stos
in
gs
push
fwait
push
mov
mov
or
push
inc
iret
mov
test
in
cmpsb
add
cmp
clc
push
pop
mull
or
push
in
push
push
mov
adc
cmpsl
mov
sub
add
inc
xor
aaa
lcall
stos
xchg
mov
mov
out
xchg
sar
cmp
adc
int3
xchg
dec
add
lods
push
ret
test
sbb
xorl
fs
add
jbe
mov
mov
fwait
or
sbb
popa
sbb
cmpsl
test
es
xchg
insb
into
or
dec
sar
pop
xchg
jle
or
fstpl
or
jbe
cld
jg
adc
inc
cli
jmp
loope
dec
addr16
push
or
sbb
test
es
mov
out
jp
mov
pusha
cwtl
and
mov
shlb
out
jne
xor
sarb
xchg
mov
out
stc
lret
aad
mov
outsl
xchg
fcomip
rcrl
fcoms
dec
inc
sub
bound
or
movsb
ficompl
scas
push
arpl
out
mov
int3
mov
cmc
cmp
sbb
mov
lock
fwait
sbb
popf
shrl
mov
clc
leave
dec
xor
je
mov
jg
mov
in
ljmp
faddl
filds
rcr
pop
adc
xchg
sub
jne
sbb
add
push
lret
hlt
mov
xchg
push
lds
or
pop
andb
xor
out
or
pop
mov
and
pop
jne
fbld
stos
cli
push
out
in
or
jmp
cmp
cmp
js
mov
loope
or
loopne
dec
cmp
rol
mov
ror
or
mov
inc
push
popf
daa
iret
add
adc
push
push
mov
and
dec
adc
push
dec
mov
add
cmp
stc
push
sub
sbb
cs
jle
adc
icebp
js
cmpsb
mov
xchg
inc
push
mov
sahf
sbb
adc
pop
sbb
sarl
inc
sbbl
lods
fsts
mov
insb
outsl
push
xor
or
sarb
adcb
lahf
inc
xorl
jae
jb
mov
add
dec
ja
or
add
inc
xor
movsl
inc
pop
dec
push
mov
dec
mov
loopne
outsl
mov
repz
aaa
xchg
pop
out
enter
js
incb
shr
stos
ss
add
scas
jge
mov
inc
int
jecxz
sub
jecxz
inc
shrb
cmpsl
popf
imul
sub
jp
xor
cltd
or
sub
sar
mov
dec
pop
push
insl
or
inc
and
outsl
mov
adc
mov
negl
xchg
mov
add
cmpsb
cld
jmp
outsl
mov
stos
rcrb
jge
pop
adc
in
pop
iret
loopne
xor
adc
mov
mov
test
test
clc
ds
sub
fisubs
cmp
push
mov
popf
push
andb
test
mov
adc
jecxz
xorl
xor
xchg
jb
sbb
sub
or
add
dec
adc
outsb
mov
in
cmp
add
cmp
loope
loop
test
jmp
aam
cmp
nop
andl
xor
jp
imul
mov
adc
pop
loop
fsubp
les
fnstcw
lahf
fimull
push
jno
fidivs
and
cmp
adc
rcr
push
xchg
mov
inc
xchg
loopne
add
enter
mov
mov
nop
adc
shlb
mov
test
xchg
aad
adc
addr16
mov
adc
lcall
sub
in
std
mov
jnp
mov
jo
push
push
imul
repnz
out
ret
incl
sub
in
push
clc
pop
mov
ja
and
jp
dec
mov
notb
jae
scas
in
insl
push
sbb
lds
xchg
imul
pop
roll
sub
jb
jb
push
sbb
jmp
and
fadds
mov
or
cmp
out
daa
insl
aaa
push
adc
xlat
imul
mov
cld
or
jno
inc
das
ljmp
repz
pushf
dec
out
pop
mov
dec
push
mov
int
sub
clc
mov
pushl
mov
nop
push
jp
call
fimull
jg
xor
into
std
clc
sbb
sub
adc
sbb
ds
mov
call
pop
xchg
inc
and
aaa
fwait
inc
sbb
pop
jp
push
lcall
cmc
fsubs
fildll
cltd
icebp
inc
inc
test
insl
sbb
insl
xor
mov
xchg
lods
loop
mov
cli
into
push
addr16
in
pop
outsl
jbe
adc
fwait
and
sub
outsb
int3
inc
lahf
mov
push
and
sub
fsubrl
in
ret
je
pop
xor
mov
mov
inc
jg
cli
cmp
bound
adc
fisttpl
loopne
int
mov
mov
xchg
lcall
inc
stc
add
lods
sbb
sub
lcall
cltd
add
sbb
inc
add
push
sub
jp
dec
es
sub
xchg
sub
loopne
cmc
xchg
mov
push
sti
dec
jge
inc
mov
pop
sbb
fwait
mov
jmp
mov
jae
xor
sub
sbb
or
cli
dec
pop
clc
cli
cmp
add
mov
or
mov
int
out
lret
inc
in
sub
cli
xchg
cmpsl
shlb
or
shll
iret
call
adc
dec
js
fldl
jg
push
or
mov
out
dec
incb
mov
notl
out
mov
jae
daa
lahf
mov
ja
sbb
xchg
imul
loopne
jno
test
movsb
in
scas
jg
mov
xchg
pop
mov
mov
pop
add
xchg
negb
jno
addr16
push
jnp
sbb
push
jae
repz
cmp
jns
out
sub
or
ret
cmp
bound
mov
mov
inc
nop
jbe
or
xor
jg
add
sbb
jo
xor
stos
ja
fs
cmp
sbb
data16
mulb
pop
enter
adc
imulb
xchg
sub
and
cs
jge
out
imul
add
bound
add
cmpsl
pop
ss
jl
jecxz
push
add
or
pop
and
shrb
ret
fstpl
cmp
test
cmpsb
rcll
jbe
call
xor
xchg
dec
jbe
fadd
sarl
cmpsb
xlat
dec
xchg
dec
or
das
xchg
pusha
jno
negb
insb
fdivs
addl
mov
and
arpl
mov
loope
mov
arpl
insl
dec
test
movsb
hlt
lcall
fucom
jg
aaa
dec
and
out
add
sti
jbe
rcr
test
mov
int
test
hlt
lods
mov
sub
push
pop
mov
add
lret
mov
jmp
repnz
push
inc
mov
xchg
leave
xchg
xchg
in
mov
sbb
repz
pop
jmp
rolb
mov
pop
push
sub
stos
xor
aam
mov
loop
cli
push
add
sarl
scas
fbstp
fwait
cld
inc
sbb
faddl
movl
mov
push
adc
daa
pop
ret
jno
aas
pusha
mov
inc
icebp
push
out
or
sub
faddl
cmpsl
and
mov
int
and
in
je
int3
fistpl
call
jno
loopne
clc
je
inc
sbb
pusha
je
loop
shr
cld
ret
stos
in
mov
sti
jge
insb
cmp
outsb
pusha
or
cmc
fnstcw
sbb
jnp
popf
outsl
call
xor
mov
cmp
push
mov
decl
insl
cmpsb
fiaddl
inc
mov
mov
xor
dec
decl
mov
xor
pop
subb
jnp
adc
push
addl
pop
sub
add
sub
outsb
sbb
stc
xchg
sub
pop
push
hlt
out
stos
cld
xor
cmc
add
popa
and
inc
movsb
jns
mov
jl
inc
mov
data16
pop
in
dec
and
outsb
pop
xchg
pop
test
mov
addr16
imul
scas
mov
inc
std
mov
xchg
ljmp
into
stos
sbbl
sub
pop
mov
mov
repz
das
pop
mov
push
ljmp
and
mov
adc
pop
leave
push
jne
xchg
inc
and
ret
jb
mov
xchg
push
xchg
xchg
fldcw
out
cmp
fwait
xchg
inc
and
mov
jmp
or
lods
push
clc
pop
xorl
roll
mov
pop
cmp
in
push
push
outsl
xlat
lcall
lods
sbb
hlt
adcb
pushf
aaa
pop
scas
rclb
es
xchg
in
add
ret
iret
repz
pop
mov
mov
sbbl
cmp
cmp
imul
testb
cmp
inc
or
push
push
int3
dec
imul
icebp
stos
jnp
or
sbb
cmp
sub
pop
je
int3
dec
fsubrl
sub
mov
push
mov
adc
imul
dec
scas
pop
jg
outsb
jge
push
mov
stc
mov
or
roll
out
or
jb
sub
inc
pop
mov
add
add
dec
cmpb
iret
lret
popa
into
add
jg
andb
cs
xor
and
jge
mov
xor
in
add
pop
or
xor
jnp
ss
outsl
jne
lret
aas
test
daa
shrb
cmpsl
adc
int
jge
sbbl
arpl
lods
andb
xor
fs
sbbl
mov
xor
outsb
cli
sub
das
popf
mov
cld
cmp
in
or
mov
dec
mov
inc
jo
test
jne
sub
mov
stos
mov
jg
test
shlb
mov
sbb
or
cmp
int
xor
daa
rol
jne
lahf
mov
std
or
adc
fwait
jecxz
sbb
add
pushf
popa
push
fxch
ficomps
mov
sbb
mov
js
xchg
mov
dec
fisubs
stc
or
and
inc
or
lds
shlb
gs
sub
insl
and
sub
cli
pop
sarb
pop
mov
add
jo
repnz
sub
adc
cli
loope
addl
xor
sub
pushf
mov
or
or
add
andb
mov
int
arpl
outsl
jnp
cltd
mov
cmp
add
xor
out
es
mov
test
and
push
adc
enter
push
xchg
jne
faddl
pusha
mov
dec
scas
mov
push
js
push
xchg
shl
jmp
gs
mov
movsl
pushf
adc
dec
and
fwait
lret
sub
add
sub
or
mov
movsl
inc
mov
in
hlt
xor
outsb
mov
mov
push
sub
lahf
ss
shll
jb
jns
fildl
fsubl
sbb
jecxz
inc
andb
jnp
fnstcw
sbb
insb
adc
add
testl
push
rcrb
add
push
adc
cmc
inc
inc
push
mov
icebp
pop
out
lea
cmp
in
xchg
rorl
fsubp
xchg
add
jns
jne
movsb
mov
icebp
xchg
add
pop
dec
mov
push
nop
cmp
mov
incl
out
sbb
mov
lds
push
mov
push
out
adc
fistl
jno
pop
in
movsb
lock
outsb
xchg
lds
mov
jae
push
fwait
jnp
out
sahf
xchg
fs
mov
jo
in
pop
cli
push
mov
insb
js
daa
stos
cmp
mov
push
xchg
mov
or
int
iret
ja
mov
rcl
lea
aas
outsb
call
xlat
xor
and
and
jb
xlat
pop
pop
xchg
xchg
mov
jl
aaa
lea
stos
loopne
pop
fsubr
cmpsl
pop
shll
icebp
add
loope
push
call
enter
sbb
mov
test
inc
and
xchg
test
xchg
push
pop
mov
or
aad
sub
mov
cmp
imul
fs
sti
sub
inc
dec
mov
pushf
jnp
popa
pop
pop
jge
addr16
test
and
pop
mov
testb
in
lds
fsubl
adc
outsl
std
out
adc
data16
jg
rolb
add
loope
les
or
lret
mov
loope
lcall
jo
int3
out
ficomps
mov
jbe
push
pushf
lea
jne
or
sub
mov
push
test
test
into
mov
xchg
scas
std
xchg
lahf
sti
cmp
imul
adcl
movsb
mov
push
out
sahf
ret
or
ret
mov
adc
sahf
inc
mov
lahf
or
sub
fst
sub
pop
fdivs
fmull
in
cwtl
fisubs
aam
push
out
pusha
mov
imul
lods
scas
jno
lret
and
les
sbb
hlt
fstpl
pop
xor
rolb
pop
std
ret
pop
out
or
or
sub
xor
cmp
lock
mov
jecxz
mov
cmp
mov
inc
cmc
xchg
adc
test
mov
jbe
in
ss
je
mov
jbe
xchg
inc
leave
mov
push
bound
jnp
lods
dec
inc
arpl
ljmp
mov
cmp
mov
push
fwait
add
push
mov
cld
decb
adc
decl
mov
cmp
add
repz
mov
sbb
stos
jp
push
xor
nop
mov
aas
out
sbb
jns
push
test
lcall
jmp
shl
dec
loop
gs
aad
push
inc
int
stos
shrl
insb
rcrb
inc
test
fcomps
lahf
push
test
gs
lea
repz
sub
sbb
mov
test
loope
cs
sub
das
pop
and
cmp
jae
clc
mov
das
xlat
iret
xor
push
push
jno
lods
xchg
pop
pop
fcmovnbe
jg
mov
idivl
mov
mov
xor
sbb
pushaw
repnz
popa
hlt
shl
sarb
stos
mov
aam
or
les
pop
insb
ret
lret
sbb
lret
shr
mov
fbstp
pop
aas
movsl
lcall
sbb
add
cmp
leave
pusha
adc
lea
pop
dec
xor
fcmovu
jno
fldl
mov
dec
leave
outsb
mov
inc
or
jle
in
push
mov
loope
daa
lcall
mov
addr16
pop
sbb
int
dec
bound
push
adc
inc
jb
dec
push
mov
or
mov
xor
outsl
scas
shlb
imul
lock
mov
inc
ljmp
ljmp
push
aam
lods
mov
jbe
stos
sbb
push
in
fs
push
pop
ret
ret
shlb
out
push
cmp
mov
sbb
jo
out
ret
inc
add
mov
shrl
dec
xchg
iret
lret
inc
ljmp
icebp
pop
push
xchg
mov
mov
push
sub
js
fwait
jle
push
loopew
xchg
push
in
dec
and
test
add
xor
push
push
cmp
lods
out
sti
xlat
test
jge
xchg
or
das
in
pop
cwtl
pop
adc
cmp
je
popf
inc
ss
add
jae
arpl
in
mov
mov
out
add
dec
sub
xchg
lcall
pushf
sbb
movsl
mov
gs
icebp
loop
sub
cvttps2pi
fs
push
xchg
sub
xlat
repz
clc
aam
sbb
mov
dec
xchg
or
sbb
sub
pop
clc
enter
adc
mov
cmp
out
sub
add
mov
push
daa
inc
xchg
out
jecxz
dec
inc
ja
imul
cmp
jb
pop
rolb
mov
gs
xor
adc
jo
and
outsb
cmp
inc
mov
rcr
clc
rorb
adc
inc
movsb
ficompl
lods
push
mov
lds
fidivrl
cld
lock
sbb
pop
lret
icebp
aad
in
or
add
sbb
shll
syscall
add
xor
mov
fsubrs
cs
cmp
insl
out
xor
pop
arpl
sub
jmp
dec
dec
cmp
push
call
loop
test
gs
arpl
adc
push
adc
inc
and
dec
popa
inc
and
scas
mov
loopne
sti
daa
ds
add
into
addr16
mov
xchg
imul
mov
jp
cmc
mov
out
xor
mov
loop
mov
xchg
mov
testb
add
cs
mov
or
das
pop
sahf
mov
fldt
xorb
addr16
aas
xchg
sbb
sahf
cvtps2pi
inc
mov
jne
stos
mov
cmp
and
add
jl
pushf
imul
push
cmp
cwtl
fwait
lret
cmp
repnz
movsl
mov
aam
add
xchg
dec
clc
and
fnstenv
xchg
mov
rcrb
mov
insb
mov
arpl
aam
cltd
and
sbb
xchg
lock
movsl
xor
cs
xchg
mov
enter
inc
pop
sbb
and
std
mov
lods
nop
lahf
sbb
orb
or
fdivp
fwait
mov
imull
inc
data16
xchg
cmp
in
rcrb
sub
xor
push
or
xor
xor
jmp
add
test
in
mov
xchg
into
adc
inc
xchg
dec
and
aaa
mov
popf
inc
or
sub
dec
add
mov
scas
fnstenv
push
mov
pop
sub
dec
lock
ljmp
push
pop
call
loop
mov
jnp
sarl
cmpsl
into
aaa
sarb
jnp
aad
jmp
xor
in
xorb
jns
lds
sub
dec
pop
imul
les
add
cmpsl
out
add
gs
fcom
test
jge
roll
push
and
jmp
int
into
sbb
sub
push
mov
mov
outsl
push
push
mov
imul
repnz
adc
outsl
fldl
or
jge
sub
popa
fs
lea
stos
xor
lcall
sub
dec
popf
ret
clc
fmul
mov
aad
fstpl
ror
sbb
aad
repz
stc
aas
xlat
lcall
pushf
or
lahf
out
mov
ret
mov
pop
lret
mov
fidivrl
dec
and
mov
push
dec
lret
pusha
dec
dec
jl
arpl
fcoml
loope
inc
mov
dec
add
cli
push
nop
add
scas
and
add
stos
dec
testl
test
leave
stc
imul
add
in
scas
push
imul
jmp
push
xor
push
mov
sti
pop
movl
cwtl
and
jb
lahf
add
aad
inc
cli
mov
push
cmpsb
inc
fmuls
mov
push
les
cmpsb
ljmp
int
sub
in
jle
mov
sub
or
pop
movsb
mov
data16
push
mov
loope
sbb
xor
jo
cmc
or
and
les
loopne
orl
aaa
stos
push
adc
cmp
popa
or
repnz
setg
stc
add
sub
cmp
shlb
sbb
aam
jge
xchg
and
lods
pop
test
shll
repnz
push
aaa
xor
xchg
ljmp
cmp
mov
js
rorb
mov
lret
out
sahf
adc
sub
add
dec
dec
fmull
sbb
je
shrl
mov
shll
outsl
gs
dec
lock
mov
adc
cmp
pop
xchg
mov
popa
mov
mov
packuswb
dec
loop
aas
mov
scas
int
jnp
std
test
cmp
insb
add
sbb
inc
push
popa
test
mov
jl
and
idivb
inc
cli
mov
in
cmp
or
repnz
out
xchg
cld
xor
rcr
addl
fidivrl
out
ror
push
lods
cltd
pop
fcom
jns
push
daa
pop
ret
arpl
mov
and
daa
mov
sub
push
and
in
adc
pusha
cmp
das
xlat
scas
sahf
jl
xchg
fcompl
mov
iret
pop
cmp
add
enter
jge
fidivrs
icebp
xor
daa
out
fcomps
add
xchg
mov
outsb
or
or
mov
mov
mov
std
cmp
lock
and
cmpsl
into
mov
sarb
cltd
mov
enter
push
cmpb
scas
test
and
jae
dec
shlb
stc
popa
decl
stos
dec
aam
daa
aas
mov
ret
xchg
push
and
in
cmpsl
mov
pop
sahf
pop
call
jae
mov
or
push
dec
popf
mul
and
aaa
aad
push
lds
xchg
gs
mov
push
in
xchg
pop
adc
dec
add
jbe
mull
adc
and
fcomps
mov
enter
out
and
xchg
movsl
jge
xchg
cmp
pop
sbb
mov
cs
sahf
pusha
push
xor
xchg
xchg
aam
imull
lcall
pop
daa
jne
cs
call
cmpsb
incb
xor
adc
add
adc
xor
mov
sub
cmp
rol
les
jmp
pop
mov
inc
mov
push
mov
cmp
mov
pop
mov
xchg
dec
movsl
xchg
aas
pop
scas
in
mov
sahf
cmc
jbe
bound
pop
mov
scas
pop
pusha
pop
hlt
popf
jp
push
xchg
sub
pop
mov
push
stc
jnp
out
or
leave
insl
mov
lahf
clc
enter
inc
adc
sahf
mov
jmp
jge
lret
jge
and
mov
mov
xor
add
ljmp
dec
cmp
xlat
cmpb
rol
push
les
jg
xlat
sbb
fidivrs
mov
cmpsl
insb
das
sbb
adc
jecxz
arpl
push
jbe
jge
cmp
or
popa
dec
ret
data16
jl
clc
fsubrl
inc
xor
pop
shl
xchg
xor
sbb
jb
out
addb
pop
jecxz
dec
insb
jp
push
push
loope
popa
xlat
cmp
adc
push
sbb
inc
jb
cmp
loop
roll
xchg
mov
pop
imul
mov
icebp
or
adc
adc
push
aad
jae
sub
inc
fidivrs
pop
daa
test
lods
data16
fsubrs
cmp
mov
lahf
mov
loope
insb
or
sar
sub
mov
imul
scas
neg
les
jge
or
das
mov
and
push
add
push
in
fdiv
jle
adc
cmc
lea
aaa
ds
cmp
into
or
xchg
jae
sub
push
sub
lds
popa
mov
push
mov
add
ror
and
test
cwtl
clc
sbb
enter
icebp
pop
rcl
cmpsl
outsl
aas
mov
loop
add
cmp
or
pop
std
mov
pop
aaa
mov
push
add
pop
enter
fwait
sub
push
xor
nop
lock
ljmp
lcall
pusha
lods
scas
nop
pop
lea
and
jg
loop
adc
hlt
in
fs
inc
add
and
je
xchg
iret
stos
xchg
adc
pop
jno
sti
test
lock
or
fcoml
cmpl
cmp
mov
mov
shl
mov
pusha
arpl
pushf
inc
push
pop
xchg
jmp
in
xchg
adc
xor
jecxz
les
je
dec
dec
add
add
test
mov
call
xchg
dec
sbb
lcall
mov
jo
movsb
sti
jle
hlt
pop
lock
lahf
aaa
movsl
xchg
repz
sbb
pop
jp
shlb
jmp
cmpsl
in
inc
adc
or
cmp
xor
lret
out
and
jnp
iret
sar
adc
jno
sub
pop
cmc
sub
mov
jmp
and
fistpll
push
inc
inc
lahf
inc
mov
and
sti
mov
jg
jne
mov
push
or
inc
ljmp
add
jge
fcoml
xchg
lret
jnp
icebp
bound
div
mov
das
and
pop
orl
mov
pop
gs
mov
enter
xor
inc
jp
inc
iret
adc
lods
lahf
je
pop
loop
rolb
and
sbb
popf
xchg
cmpsb
rcrb
daa
dec
aaa
fstpl
push
cld
pop
shl
stc
lods
test
inc
mov
sub
inc
iret
sti
das
rcll
in
in
in
and
cmp
sub
mov
inc
nop
je
push
mov
les
add
mov
lds
jmp
mov
jo
jno
and
bound
loop
pop
setle
lcall
aas
jge
dec
ja
call
bound
push
adc
jmp
mov
sub
xchg
ss
xchg
lret
or
clc
lret
inc
or
adc
shll
enter
cmp
lds
gs
orl
pushf
insl
mov
push
aad
notb
mov
or
sti
sbb
ss
push
or
dec
add
leave
xchg
pusha
mov
movsl
mov
lret
adc
psubb
imul
insb
xor
adc
nop
orl
daa
add
test
sahf
hlt
in
test
gs
frstor
pop
mov
add
mul
mov
cli
test
mov
sub
shrb
mov
shr
or
stc
xchg
or
pop
sub
mov
cmpsl
pop
sar
sahf
mov
lods
push
js
ficoml
nop
shll
insl
cmp
xchg
lret
shll
mov
and
push
outsl
lods
into
jmp
addb
pop
pop
jmp
adc
and
mov
rcl
jecxz
cmpsl
out
pop
add
loope
jge
lds
or
bnd
push
inc
fwait
divb
sub
rcrb
lds
xchg
sub
jnp
enter
les
int3
adc
scas
mov
mov
lea
mov
and
xchg
std
frstor
pushf
in
lahf
mov
jae
fldl
mov
xchg
into
orb
sub
repnz
sbb
xchg
cwtl
cmp
lods
add
lods
or
jge
movsl
test
testl
pop
or
movsl
rclb
adc
pop
pop
ds
cmpsl
xchg
jp
fs
mov
adc
and
jbe
ficoml
xor
jmp
pop
pop
or
mov
cld
shl
and
cwtl
xor
pop
scas
pop
xlat
sbb
sahf
das
mov
sub
xchg
into
or
adc
bound
jns
mov
mov
add
enter
mov
pop
les
jmp
mov
jne
aas
xor
adcb
lahf
pop
pusha
or
aas
out
mov
xchg
pusha
push
cmpsl
js
adc
aad
stc
adc
hlt
xor
add
mov
xchg
jle
data16
ljmp
adc
sub
adc
data16
fsubp
xor
jno
lods
mov
stos
mov
loope
in
mov
scas
mov
call
lods
add
mov
xchg
adc
aad
mov
mov
inc
stos
inc
cli
into
and
sub
adcl
add
or
jmp
fisttpl
ljmp
add
leave
sahf
push
ljmp
jae
gs
mov
push
mov
pop
cmpsl
push
fstpt
stos
xor
outsl
rcrl
jne
arpl
jecxz
fidivs
sub
daa
jne
outsl
jae
int
jo
out
mov
sbb
jle
pop
daa
daa
inc
repnz
jnp
push
mov
dec
insl
jbe
jg
mov
pop
push
jo
imul
mov
ret
add
add
pop
test
jmp
cltd
mov
add
push
out
or
jmp
xchg
fdivrp
movsl
xor
mov
out
loop
sbb
dec
dec
mov
cmp
jp
mov
lods
xor
movsl
loopne
mov
push
in
outsl
add
or
or
pusha
jp
cmp
sbb
arpl
outsl
sbb
scas
or
ret
mov
xor
push
push
mov
mul
fimull
or
jge
shll
lahf
aad
daa
xor
inc
mov
rorl
repz
cmc
mov
int3
mov
inc
clc
pusha
add
xchg
leave
inc
out
pop
pop
pop
pop
hlt
mov
dec
leave
fisttpl
shll
sahf
jns
icebp
filds
sbb
hlt
ljmp
movsb
sub
outsb
adcb
cmpb
mov
adc
sbb
mov
mov
ja
loop
xor
adc
add
pop
jp
and
add
pushl
xchg
jbe
cmp
sbb
lods
pop
aad
popf
jg
mov
fimull
push
rcrl
and
daa
jg
lds
mov
add
xchg
int
gs
jp
movsb
into
sbb
icebp
test
mov
pusha
push
jmp
add
add
and
mov
mov
js
iret
std
mov
jns
lret
jo
sbb
subb
fsubr
add
pop
insl
loopne
xchg
jb
push
jmp
addb
xchg
cwtl
push
sub
in
add
inc
out
push
cs
xchg
push
cmpsb
and
lock
shll
rcr
stos
mov
ss
cltd
test
pop
jnp
push
pop
xor
outsb
add
jne
les
fmuls
test
mov
mov
aaa
mov
add
pop
jge
add
mov
in
dec
ds
and
mov
shl
and
ret
sbb
rclb
push
es
aad
or
and
popf
or
pop
loopne
push
pop
fwait
icebp
jl
push
hlt
popf
jno
lret
ljmp
and
icebp
dec
sbb
lods
xor
int3
and
sub
xchg
fimuls
and
dec
mov
add
in
jmp
loope
sbb
dec
pop
xor
mov
jmp
cmp
push
cmp
test
push
std
mov
pushf
adc
in
xor
jmp
cli
leave
jle
adc
loop
test
pop
pop
mov
call
xchg
xor
lret
jb
clc
pop
cmpl
xchg
pushf
mov
jl
shrb
mov
cmp
aaa
dec
enter
sbb
mov
ficoms
insl
pop
adc
pop
movsl
dec
add
add
jne
aad
xchg
add
nop
pop
hlt
xchg
xor
sub
call
push
jo
jae
dec
and
jbe
mov
ds
mov
sub
xchg
push
insb
insb
fcoml
and
lds
test
repz
repz
in
shrb
cld
ret
sbb
bound
out
sub
mov
adc
ficompl
inc
aad
mov
scas
enterw
xchg
cmpsl
and
lds
adc
into
pop
mov
mov
mov
pop
push
mov
repnz
cmc
ljmp
fcomip
popa
data16
repnz
cmpsb
mov
jp
push
mov
pop
aaa
push
shrd
adc
ret
sbb
push
jne
push
xor
adc
xbegin
stos
mov
mov
xchg
mov
push
add
popa
lret
dec
scas
cmp
rol
lds
inc
gs
sbb
ljmp
inc
cmp
and
mov
test
out
push
lods
pop
cmp
lcall
imul
ja
or
cltd
adc
and
dec
inc
mov
push
popa
loop
cmp
pop
cltd
mov
xchg
movsb
dec
cld
aas
jl
adc
ret
outsb
call
ret
into
mov
jae
sub
sbb
mov
sbb
xor
lret
mov
outsl
xor
adc
nop
xchg
imul
sub
dec
pop
mov
orb
xchg
ror
call
pop
mov
fwait
add
pop
cmp
in
push
adc
mov
pop
imul
cmp
or
mov
imul
jbe
lret
das
mov
popf
dec
lret
ret
push
aas
pop
popf
lret
mov
ret
jbe
cli
jae
mov
imul
cwtl
sbbl
xchg
mov
call
outsb
sub
or
dec
inc
push
mov
rol
stos
push
inc
fucomip
pop
shrl
lea
xchg
or
inc
out
xchg
jo
fnstcw
shl
cmp
movsl
inc
js
repnz
or
and
mov
pop
es
icebp
mov
rcrl
xchg
dec
jmp
lods
fbstp
bndstx
inc
mov
lret
nop
addb
fldcw
push
test
shlb
mov
mov
clc
jl
mov
jl
sbb
loopne
and
and
aas
add
push
xor
aad
mov
sahf
or
jp
xchg
sub
dec
fadd
adc
scas
imull
fstpl
mov
insl
lods
or
pop
stos
mov
lea
xor
xor
lds
lret
in
addl
pop
imul
push
xor
aad
dec
dec
cld
decb
mov
inc
xor
out
xor
iret
imul
push
inc
andl
std
ss
push
stos
fucomp
add
mov
add
xor
sub
jne
ficompl
cmc
pop
jne
fs
inc
clc
rcr
mulb
adc
fdivl
insb
orb
lods
int3
fstpt
xor
mov
in
out
cmp
aad
lret
sbb
insl
sti
sub
mov
jb
mov
outsb
add
aad
roll
les
xchg
pop
dec
lret
pop
fnsave
or
adc
imul
test
andb
addr16
mov
push
dec
jno
pop
mov
lcall
push
test
fdivl
and
aaa
lret
and
es
adc
and
call
clc
gs
xor
leave
fisttps
xor
ljmp
fidivrs
xchg
andl
in
mov
gs
bound
rorb
sbb
mov
stos
decl
bswap
js
push
stos
pop
nop
pop
movl
ss
repnz
jb
push
xchg
or
pop
cli
das
pop
mov
xorb
test
pushf
bound
push
mov
jg,pt
cmc
inc
aam
popf
adc
cmpsl
icebp
in
call
jb
xor
sbb
lds
add
and
mov
push
cwtl
xchg
add
inc
ret
mov
jb
scas
lods
sbb
dec
lea
sub
daa
outsl
sbb
mov
lret
push
testl
or
xchg
jp
js
pusha
movsl
xor
lods
jp
dec
push
push
adc
dec
imul
and
jae
push
call
sbb
cld
imul
sbb
fldl
xlat
stc
mov
mov
imul
pop
push
add
or
lock
pop
mov
ficompl
inc
cmp
fwait
push
rolb
out
sub
jnp
sahf
insb
mov
out
add
xchg
mov
gs
pop
out
ljmp
sub
test
lahf
insl
add
stc
fwait
mov
test
outsb
stos
sub
out
imul
loop
in
or
adc
pop
cmp
push
stc
sub
fs
dec
mov
push
daa
add
pop
adc
lahf
sbb
mov
jmp
in
movsl
push
lahf
cmpsl
push
pop
add
scas
fldt
stos
sub
sti
pusha
sub
add
mov
pop
imul
and
jbe
lcall
xchg
jne
andb
int3
stos
mov
jg
mov
pushf
lret
mov
cmc
scas
repz
dec
mov
loopne
stc
cltd
ss
jb
pop
mov
sub
fcomi
fisttpll
mov
mov
xor
adc
and
je
nop
sub
outsb
mov
ja
push
sahf
roll
aad
lds
jge
adc
testl
das
leave
add
push
sub
loope
das
mov
lea
cmpsb
mov
das
push
and
mov
daa
pop
loope
mov
fdivrs
stos
mov
xchg
cmpsl
push
sahf
sti
subl
adc
adc
xchg
mov
cmpsl
sub
push
into
xchg
mov
cwtd
push
mov
mov
out
mov
ret
push
mov
pushf
jns
sub
mov
mov
sbb
add
test
hlt
sbb
mov
pmulhuw
adc
ds
sub
and
gs
data16
mov
mov
sbb
push
push
into
mov
add
nop
gs
mov
cmpsl
push
inc
popa
jnp
xor
and
pop
cmp
in
ret
jae
repz
mov
sub
adc
fldl
ret
adc
aaa
mov
cmp
ds
cmpl
pushw
mov
je
outsl
or
repz
repz
xor
dec
out
sahf
mov
call
xchg
push
pop
movsl
jnp
out
inc
xorl
cltd
sbb
push
xchg
dec
jo
adcl
xchg
add
sbb
mov
insb
xchg
sub
mov
nop
jo
sub
add
pop
jno
es
xor
jecxz
add
addr16
lcall
mov
lods
nop
sti
jg
jmp
push
push
adc
pop
cmp
test
stc
pop
dec
fs
ss
je
jp
jae
push
out
jae
dec
aaa
or
jl
loope
int
mov
mov
or
and
movsl
int3
mov
adc
daa
inc
fmuls
pop
int3
adc
add
xor
sbb
jecxz
push
inc
in
aaa
pop
aad
pop
push
adc
in
cltd
cwtl
xchg
inc
and
mov
sub
or
xchg
cltd
mov
push
push
lds
pop
std
and
outsl
cwtl
repz
js
mov
xchg
sub
xor
sbb
pusha
pop
xor
inc
xor
insl
adc
ret
add
in
leave
repnz
scas
jp
jecxz
xchg
mov
sub
dec
cmp
push
mov
add
cwtl
imul
test
pop
js
loop
addb
push
sahf
lods
mov
fwait
mov
jmp
aad
aas
shll
idivb
and
out
mov
and
cld
mov
notl
cmp
jg
pop
shl
fcom
leave
push
mov
inc
movsl
xchg
adc
fnsave
sbb
jne
sub
iret
sub
mov
sarl
nop
daa
push
mov
lods
sbb
jnp
push
mov
pop
mov
es
pop
lds
inc
leave
jecxz
in
xor
xor
loop
add
mov
and
and
hlt
push
out
out
pop
sbb
and
cmp
sbb
imul
in
jne,pn
sub
lods
fidivrs
fwait
bswap
cmpsl
mov
test
push
mov
adcl
fwait
ljmp
jmp
jnp
add
decb
mov
pop
cmp
aam
jl
les
dec
std
adc
xchg
ret
dec
adc
sbb
icebp
imul
clc
pop
push
add
inc
lods
pop
lods
scas
cmp
push
push
sbb
stos
stos
sub
lea
bound
mov
inc
shlb
scas
in
dec
jp
mov
jp
shl
push
fmull
xchg
mov
and
sbb
mov
std
xor
sub
dec
outsl
fcmovbe
test
mov
stos
cld
dec
ficomps
mov
je
adcl
or
mov
cmp
cld
popf
push
mov
lahf
inc
mov
push
testb
aad
rclb
aaa
das
jge
cwtl
lods
out
shll
cmp
jb
je
cwtl
mov
push
lcall
mov
add
loop
dec
es
call
pop
push
idiv
es
das
hlt
and
fwait
pop
inc
or
sbbl
add
push
dec
std
lcall
push
stos
int
xor
xlat
push
insl
cmp
test
mul
ja
mov
xor
xchg
jmp
inc
mov
pop
adcb
or
and
jg
cmp
mov
test
insb
mov
or
sbb
gs
inc
bound
fsubrl
mov
pop
jp
push
or
xor
lock
xchg
xorl
xchg
xchg
lods
fcoml
mov
inc
les
push
loop
adc
sub
xor
fwait
ss
stos
jle
push
mov
mov
fcmovbe
arpl
mov
jg
push
data16
cli
xor
imul
adc
push
push
pop
push
mov
imulb
nop
adc
pop
push
inc
rcrl
pop
jp
popa
lods
lods
mov
xor
xorb
idiv
push
pop
fcmovnbe
inc
fildl
arpl
jbe
add
shll
xchg
cmp
mov
jb
xchg
cmp
movsb
dec
push
in
adc
fadd
ds
adc
jg
push
cmp
test
gs
push
sahf
jae
sbb
hlt
movsb
push
mov
ja
mov
stc
jl
or
mov
fiadds
mov
mov
les
daa
ret
test
and
push
insl
jbe
mov
mov
fs
out
xor
inc
fiadds
leave
outsb
fs
ret
in
out
push
xor
das
xor
fsubrp
xchg
aad
decl
pop
mov
sub
and
adc
add
add
jno
ljmp
sbb
mov
ljmp
adc
mov
pop
pop
test
cld
sub
rcll
push
ljmp
clc
push
sti
push
paddd
sub
jle
movsb
dec
mov
fwait
pop
sbb
xchg
scas
fdiv
mov
std
or
xchg
mov
pop
dec
or
add
fiaddl
cld
rcr
lret
hlt
mov
aas
jno
out
push
cltd
aam
inc
sbb
adc
dec
cld
adc
add
sub
shl
loop
sub
jl
mov
mov
inc
sub
dec
frstor
cld
adc
push
inc
pop
aad
xchg
xchg
hlt
in
ljmp
pop
xor
mov
xchg
mov
sbb
push
pop
cmp
fdivl
int3
add
and
mov
jbe
sahf
push
flds
adc
scas
mov
stc
shr
mov
or
cltd
in
outsb
bound
xor
xchg
in
mov
jp
adc
lds
mov
jmp
inc
out
xchg
inc
mov
jmp
add
jns
pop
pop
cmpsl
mov
lods
mov
inc
adc
outsb
add
pusha
xacquire
adc
rorl
mov
aaa
and
insl
or
sahf
xchg
das
mov
jl
shl
push
dec
cmp
outsl
xor
jbe
daa
shlb
adc
popf
and
or
and
imul
lret
dec
scas
scas
mov
or
loop
idivl
or
add
push
test
pusha
fisttps
sub
lcall
fs
add
mov
lock
jae
dec
cmp
lds
in
mov
movsb
outsl
cmp
and
add
jl
or
clc
in
ret
sub
idivl
dec
data16
outsb
out
or
xor
and
cmp
mov
test
aaa
sub
push
and
mov
shll
fcmovnu
cmpl
or
cli
lock
movsl
jbe
dec
fdivr
sti
mov
adc
js
clc
mov
lods
mov
sbb
mov
lods
push
lret
fsubrl
dec
icebp
mov
inc
fdivrl
cmp
imul
add
pop
xchg
fsubr
out
lcall
stos
loopne
lret
mov
aaa
and
loop
dec
shll
push
in
int3
mov
pop
jnp
cmpsl
sub
int
out
clc
mov
push
xchg
push
into
pushf
in
push
fdivrl
leave
addr16
mov
mov
dec
test
fldenv
adc
movsb
push
push
test
pop
imul
shll
mov
mov
add
pop
daa
xor
xchg
xor
pop
aas
mov
pop
jmp
xchg
mov
mov
pop
addr16
rorl
push
aam
mov
test
cmp
mov
adc
stc
scas
mov
inc
out
movsl
cmc
xchg
inc
mov
leave
popa
adc
sub
dec
mov
and
dec
jecxz
popa
lds
push
add
mov
pop
push
in
inc
xlat
xor
sub
push
in
xchg
cmpsl
in
sub
repnz
pcmpeqd
adc
jge
rorl
xlat
push
stos
loope
jnp
cmp
cs
dec
je
inc
pop
test
mull
push
and
mov
xchg
or
out
in
add
lcall
jge
inc
add
imul
in
dec
cmp
jb
jge
jnp
cltd
jo
sbb
jno
xchg
rorl
pop
push
push
pop
xor
loope
mov
push
movsb
outsb
push
mov
lds
xor
push
hlt
cmp
xchg
jo
sti
jno
in
adcl
push
xor
xchg
xor
mov
dec
jl
xchg
jmp
push
rolb
lret
inc
lock
shrl
shr
cmp
out
jge
cltd
xor
shll
sbb
ret
adc
push
push
jecxz
xor
enter
and
fdivr
fisttpl
es
ss
data16
bnd
rorl
in
in
data16
cmpsb
mov
mov
clc
push
fwait
sti
enter
xor
mov
xchg
cmp
icebp
and
ds
mov
adc
pop
add
cmp
xor
mov
nop
in
sarl
aaa
sbb
mov
lahf
jg
dec
shlb
mov
icebp
shll
js
pop
jl
popf
dec
loopne
mov
push
sub
push
adc
inc
pop
xchg
arpl
lahf
push
jb
sti
dec
fcmovnb
lods
stos
notl
lods
sbb
das
or
jns
jo
stos
add
sub
inc
lret
adc
ja
ficoml
push
movsb
mov
jecxz
scas
add
inc
add
sub
push
pop
xchg
test
loope
mov
js
lock
stos
adc
les
cmp
mov
scas
xchg
icebp
push
push
addb
mov
lods
fwait
inc
pop
les
std
pop
lods
mov
sbb
jmp
nop
cmpsb
lds
notl
cmp
mov
popa
jbe
or
mov
mov
out
and
or
or
sub
loope
jmp
leave
fmull
call
je
mov
mov
dec
xchg
mov
or
stos
push
mov
or
fcoms
enter
xor
aad
mov
js
inc
sbb
insl
inc
sub
insb
into
int
into
xor
jecxz
pushf
mov
cmpb
inc
in
shl
mov
push
icebp
xchg
and
pusha
in
cltd
add
fbld
adc
in
xchg
or
mov
sahf
cwtl
int3
mov
add
test
jmp
fmuls
insl
or
lods
mov
leave
jmp
fildll
inc
cmp
push
push
inc
and
dec
mov
pop
test
add
dec
fwait
in
out
xchg
push
add
bnd
xchg
xchg
fst
dec
dec
jmp
int
je
ret
cwtl
fcoms
sbb
mov
mov
xlat
rclb
loope
sti
jb
jmp
into
movsb
adc
pushf
and
in
mov
shl
mov
or
and
in
lds
cs
cwtl
pop
call
shrl
fstps
imul
sub
cld
inc
lret
xchg
jmp
pusha
scas
pusha
out
mov
mov
and
push
in
or
js
pop
pop
mov
xadd
jbe
aas
sbb
pushf
mov
icebp
or
cmp
cmp
in
aaa
pop
pusha
sub
movsl
out
call
sub
cmp
sbb
ljmp
jbe
mov
inc
outsb
jge
jbe
or
inc
out
daa
pop
rorl
in
ja
and
cld
mov
loopne
mov
add
test
mov
mov
pushf
xlat
call
leave
jmp
pushf
adc
pop
aas
mov
push
pop
mov
loop
jmp
dec
push
mov
sbb
inc
ja
mov
jns
addr16
fidivs
sahf
call
cmpsl
mov
sub
sbb
cmpsb
call
jnp
faddl
jl
dec
repz
xor
repz
mov
pop
or
add
add
aad
es
mov
pushf
dec
stos
sbb
or
mov
push
xor
inc
je
jmp
iret
mov
mov
inc
test
mov
dec
cwtl
mov
dec
cld
mov
call
icebp
jmp
fisttps
cmp
adc
sbb
fildll
fcomps
flds
push
ret
das
adc
hlt
das
mov
mov
mov
or
xchg
cmpsb
popf
adc
sbb
adc
aad
mov
fs
rorb
scas
add
hlt
lock
mov
bound
lea
out
add
mov
add
out
inc
cmp
lcall
mov
popa
ret
ljmp
fbld
xlat
outsl
repz
movsb
addr16
lea
aad
or
iret
dec
push
sub
cmpsl
push
hlt
mov
stos
add
push
out
mov
pushf
and
dec
sbb
xlat
in
dec
test
aaa
jg
lods
add
outsl
mov
pop
repz
or
std
xor
pusha
push
pop
push
stos
je
push
push
ja
jo
aas
into
add
ss
out
stos
fdivrl
or
shll
jne
mov
shlb
dec
jecxz
les
dec
and
inc
sub
insb
jbe
aaa
test
dec
lret
xchg
es
rolb
dec
leave
push
imul
cs
or
clc
xlat
jo
adc
loope
inc
push
xchg
dec
mov
test
push
xchg
pop
pop
pop
inc
es
mov
xchg
popf
test
mov
pop
lea
xchg
stos
lahf
jne
sahf
nop
stos
int3
lds
dec
xor
xor
repnz
ss
int3
mov
xchg
pop
and
cmp
mov
call
xor
test
and
fsubs
mov
sub
adc
out
movsb
and
dec
push
call
jns
cmp
inc
outsl
cmp
es
ss
adc
cmp
push
mov
idiv
pop
cmp
adc
or
jae
fildll
leave
mov
leave
ficompl
push
cmp
orl
mov
ret
cmpsl
and
inc
and
rorb
aas
sar
fadds
adc
jbe
cmp
xchg
dec
mov
in
mov
in
movsb
add
ret
and
pop
sbb
std
dec
stc
in
xchg
lret
adc
or
xor
mov
pop
cmp
loope
ljmp
std
or
ljmp
stos
stos
inc
ffreep
fadd
jl
and
bound
adc
xor
cltd
dec
pop
pop
aas
les
mov
cmp
xor
insb
mov
xorl
jl
movsb
add
nop
push
mov
mov
pop
es
dec
loopne
adc
data16
sub
inc
mov
and
enter
sub
std
leave
adc
bound
js
pushf
mov
or
sub
xor
loopne
ret
lods
adc
dec
test
repnz
fistpll
mov
push
loope
xchg
jmp
or
pop
xchg
sbb
xor
stc
mov
fcomps
cwtl
rcl
dec
adc
sub
push
repz
mov
cmp
scas
xor
push
std
dec
fidivrs
xchg
into
scas
adc
xchg
cmp
aas
dec
cwtl
ljmp
sub
jnp
jbe
les
jg
clc
xchg
jbe
dec
push
xorl
and
sbb
cld
pop
cmp
push
hlt
ficompl
pusha
add
data16
out
jge
and
xchg
dec
lret
into
lds
nop
or
add
test
sbb
jle
mov
add
andl
es
ficoms
push
lret
decb
xchg
adc
loopne
inc
cwtl
sahf
cs
call
hlt
push
dec
lret
push
xor
repz
adc
fwait
jg
pop
xor
inc
pop
sub
pop
js
testl
mov
mov
arpl
lods
out
jg
push
popf
sub
or
les
ss
cmpsl
and
insb
mov
jo
out
fiaddl
mov
push
stc
inc
cmc
pop
adc
mov
sbb
push
push
in
add
cmp
inc
pop
cld
xchg
es
cmp
sbb
mov
push
pop
lcall
xchg
mov
jne
inc
cmc
pusha
in
popf
xor
inc
movsl
mov
ds
dec
push
lcall
clc
pop
fdivrl
mov
std
mov
clc
gs
sbb
cmpxchg8b
adc
in
shll
mov
cmc
subl
xchg
mov
jmp
mov
mov
fistpll
fwait
je
in
dec
aad
pop
addr16
ror
sbb
jb
inc
fwait
lods
movsl
test
add
shl
pop
mov
fldenv
and
fldenv
inc
xchg
jne
pop
in
sahf
stc
dec
loope
lcall
pop
jmp
sub
cmp
std
mov
js
repnz
and
ret
iret
js
xor
js
jmp
pop
sbb
lock
cmp
int
lret
xor
loop
jle
scas
jb
enter
jge
cmp
popf
sub
sub
sub
and
mov
xor
pop
out
aas
sbbl
and
mov
push
xchg
push
jmp
xlat
cmp
addr16
xor
push
adc
lods
dec
adc
mov
lock
pop
add
ret
fbld
incl
ss
test
shlb
pusha
lods
mov
pop
pop
out
test
or
ret
adc
sub
jo
mov
or
mov
insb
and
je
mov
inc
popa
loope
in
adc
je
push
fs
mov
pop
add
cmpsl
adc
mov
mov
mov
je
cmp
and
and
test
out
push
or
push
cld
test
push
push
pop
popa
and
cmp
add
push
ja
or
gs
in
shll
leave
inc
movsb
ret
dec
push
mov
inc
cwtl
and
pop
sbb
call
mov
aas
push
test
jno
jnp
std
mov
lret
mov
push
aam
dec
addr16
mov
dec
mov
mov
out
jp
xor
pop
sarb
push
fimull
ds
insl
inc
mov
inc
mov
arpl
cld
mov
jmp
sub
int
inc
popf
lds
pop
rcl
jge
test
or
xchg
ret
push
push
addb
push
pop
test
iret
repz
in
int3
push
dec
dec
out
popa
cmp
cmp
mov
cmc
or
push
pop
movl
fwait
insl
pop
dec
scas
out
jb
push
enter
inc
rclb
aad
mov
stc
popa
imul
push
xchg
push
ds
and
pop
test
xlat
sbb
in
jbe
out
mov
sub
xor
pop
dec
jne
dec
cli
stos
out
ret
sub
fwait
data16
cmp
iret
inc
insl
stc
sbbb
dec
push
xchg
mov
fwait
cmp
adc
fidivs
sbb
sar
fcmovnu
sub
dec
mov
xchg
cmp
mov
repz
mov
cmp
jge
xchg
mov
fistps
sbb
add
mov
clc
sbb
imul
cmp
adc
stc
aaa
iret
pop
addr16
mul
xchg
inc
mov
dec
mov
jnp
dec
je
xlat
aam
push
enter
int3
les
jmp
adcl
test
enter
or
adc
cltd
pop
pop
aas
dec
loope
inc
mov
into
fimull
pop
jae
jo
jmp
xor
pop
jno
push
rcrb
in
inc
add
jno
fucomip
push
sub
jbe
add
cmpsb
lock
clc
daa
lcall
repnz
mov
xor
fiadds
call
xor
cmp
xor
add
xchg
fsubl
and
mov
popf
lahf
push
mov
cmp
call
aaa
pop
insb
push
inc
int3
pushf
pusha
clc
jnp
mov
pop
data16
insl
adc
inc
sub
jl
jge
jae
imul
mov
xor
add
sub
arpl
jmp
cmp
pop
xor
push
scas
push
loopne
les
cwtl
push
shlb
test
pop
rorl
repnz
sbb
adc
push
fistpll
pop
test
fwait
xor
fcomp
or
call
ljmp
pop
jle
iret
dec
sub
les
sub
lods
sti
mov
outsl
inc
mov
xchg
lret
and
outsl
mov
lcall
dec
jnp
sub
adc
cmp
push
pop
rolb
cmp
or
sub
test
and
repz
xor
repz
inc
mov
mov
jns
mulb
add
scas
imul
jno
mov
pop
in
std
push
cwtl
adc
test
jg
scas
test
push
popf
mov
movsl
icebp
inc
xor
sbb
fdivs
jns
push
into
cmpsl
dec
or
clc
ljmp
sub
xor
and
cmp
sbb
and
loop
std
cwtl
sbb
mov
hlt
mov
cmp
pop
stos
ss
or
loop
dec
cmpl
push
lret
push
cmp
das
adc
dec
imul
lods
push
insl
outsb
ds
dec
and
out
lcall
dec
mov
fucom
test
jg
mov
push
inc
movsb
mov
mov
loopne
sbb
test
jmp
add
xchg
leave
sahf
push
mov
xchg
sbb
mov
in
cmc
ja
sbb
subl
mov
icebp
push
jnp
out
mov
daa
fwait
add
jno
mov
movsl
xor
lea
inc
xor
pop
sbb
mov
jle
loopne
sub
add
sub
int3
loop
xor
jo
mov
add
mov
lret
ret
jge
shrb
add
or
fstl
xor
stc
inc
mov
repnz
mov
pop
in
ret
mov
cs
and
cmp
test
seto
iret
std
fnstsw
cmp
adc
cmp
fldenv
jns
ss
rorl
ret
shlb
and
cli
xor
jmp
mov
pop
aam
pop
inc
xchg
hlt
aad
in
adc
adc
or
popf
xchg
cmp
ds
movsb
dec
cltd
xchg
lea
cmp
lods
pop
loope
stos
sahf
fistl
sub
jmp
rcrl
push
mov
jl
cmc
test
ds
ljmp
fdivl
cs
cmp
lahf
loope
aaa
mov
xchg
mov
pop
cmp
and
adc
mov
push
adc
mov
and
fsubs
pop
push
je
mov
dec
je
pop
cld
push
and
outsl
fcoms
jbe
popa
ss
xor
fmull
sbb
ds
movsl
lods
das
int3
pop
push
test
stos
push
test
imul
pop
js
push
in
loopne
inc
dec
cmp
and
jmp
sbb
push
push
jae
stos
aad
lds
insl
push
lods
pushf
xor
adc
mov
jb
xor
xchg
sub
xlat
pop
mov
xlat
mov
es
lock
or
es
imull
push
add
pop
add
lahf
sub
jno
or
in
sub
outsb
inc
mov
pop
repz
stos
outsb
and
mov
jg
stos
mov
pop
in
mov
sbb
push
stos
fidivrs
jmp
jl
les
pop
jo
jp
dec
xchg
cmp
popf
in
mov
stos
loopne
adc
pop
pop
jns
push
lock
stos
jecxz
test
push
mov
dec
aas
jae
mov
pop
cmovo
jecxz
pop
mov
sub
arpl
shr
aaa
test
cmp
mov
ror
divb
arpl
lahf
hlt
inc
adc
ret
lods
cmp
and
fldcw
jne
sub
push
decl
cmc
jg
jo
push
enter
inc
sub
mov
jae
pop
inc
and
out
int
xchg
nop
push
lods
lods
mov
and
std
xor
pop
stos
out
cwtl
shrl
adc
sbbb
fadd
call
xor
hlt
inc
adc
mov
or
setae
dec
decb
mov
cmc
pop
and
hlt
sub
pop
movsb
pusha
insl
lock
mov
in
outsb
out
sbb
dec
sahf
in
dec
pop
aas
mov
mov
decl
clc
mov
xlat
push
aam
in
ja
stos
sbb
test
sub
out
mov
sbb
jb
test
rcrb
pop
mov
pop
mov
or
cli
into
jge
and
pop
fisttps
jae
mov
aaa
mov
cmp
jg
or
cmp
and
cli
sbb
dec
cmp
inc
and
out
pop
push
cwtl
mov
stos
pusha
cmp
fnstenv
xor
loope
xchg
and
and
mov
divl
rorl
or
cmp
mov
mov
cmpsl
dec
xchg
and
sti
aad
pop
hlt
inc
int3
push
aaa
or
clts
and
ss
xor
rclb
cwtl
push
cwtl
outsl
sbb
push
pop
aam
xchg
push
or
sub
dec
xchg
out
bound
inc
adc
push
sti
imul
jp
cmp
rorb
lods
imul
pushf
pop
xchg
outsl
lea
xor
sub
mov
test
jno
fidivrl
mov
fsubl
scas
fildl
and
adc
imul
fldenv
out
push
pop
mov
mov
push
push
imulb
xor
xchg
jno
dec
sub
mov
jb
sbb
adc
lods
cmpsl
scas
pop
sub
mov
xor
and
mov
lds
fisttpll
pop
jnp
loop
pop
les
inc
cmp
test
and
xlat
cld
jmp
les
push
lret
sub
test
xchg
jecxz
orl
cltd
in
pop
ja
movsb
rolb
mov
mov
jne
jl
jns
cmpb
pop
lcall
cmc
scas
loope
sbb
mov
repz
cmp
inc
mov
sub
movlps
mov
outsl
mov
scas
jge
addr16
dec
mov
aaa
inc
lods
mov
je
fdivrs
xor
lods
lcall
mov
push
nop
cs
mov
inc
icebp
pop
or
testl
xchg
dec
stos
and
pop
insl
jge
mov
pop
movl
jnp
adc
ret
roll
sti
push
xchg
mov
loop
mov
mov
sub
dec
xorl
enter
and
jbe
and
popa
cmc
pop
test
je
and
ret
xchg
sbb
adcl
cmc
cmp
in
aad
add
mov
je
pop
inc
out
xor
push
xchg
lcall
xor
jg
frstor
gs
mov
mov
loope
faddl
dec
adcb
sbb
cltd
imul
sub
add
fucomp
cmp
push
mov
hlt
sbb
cli
stos
js
sbb
int3
push
cmp
sbb
lret
cmp
adc
pop
les
imul
pop
repnz
pop
add
pop
ret
sub
pushf
mov
xor
lret
pop
push
xchg
xchg
dec
add
fcompl
notb
pop
icebp
push
shlb
imul
add
std
xor
mov
popa
popf
jmp
cmp
cwtl
xchg
js
out
rcr
fildll
jae
dec
pop
xchg
mov
jo
cmpsb
or
mov
mov
cmp
cmpl
adc
mov
cmpb
jb
adc
inc
out
notl
or
gs
mov
inc
jns
mov
stc
jnp
out
lret
mov
js
imul
or
inc
sbb
notl
mov
jne
jo
cmp
pusha
jg
imul
and
lods
daa
test
xor
sub
dec
or
out
adc
mov
pop
sub
int
pusha
pop
addr16
sbb
mov
cmpsb
pop
mov
jnp
pop
xchg
jno
mov
sbb
sub
dec
js
sbb
mov
insl
adc
mov
cmpsb
dec
repz
sbb
push
inc
mov
std
push
andb
xlat
adc
mov
ja
pop
icebp
enter
repz
adc
fdiv
jb
jno
je
sbb
sub
lods
ret
divl
loopne
add
and
inc
pop
dec
or
ret
int3
mov
mov
push
xchg
stos
sbb
subl
cmc
and
fidivl
adc
mov
lret
jge
movsl
inc
sub
loop
pop
mov
pop
out
dec
inc
js
jbe
cmp
mov
jo
sbb
cmpsl
jp
jg
bound
sbb
stos
dec
jo
or
sbb
jecxz
jecxz
into
cs
mov
push
jl
sar
xchg
dec
insb
mov
xchg
cwtl
mov
nop
js
inc
xor
push
pusha
jl
mov
or
fidivs
cmp
mov
out
jo
lds
out
mov
cmp
or
ret
xor
leave
call
mov
mov
lods
sub
les
stos
popa
fnstenv
or
es
pop
inc
pop
cmp
lea
mov
dec
mov
ja
push
jmp
mov
bswap
xchg
test
push
mov
cmp
int3
scas
adc
repz
cmp
xchg
mov
add
xor
out
fcoms
insb
loop
imul
adc
test
mov
pop
jae
pop
in
push
mov
push
mov
adc
js
js
xchg
movsl
testb
mov
add
cmp
jb
adc
shr
jns
sbb
int3
test
aaa
pushf
rorl
fstl
sarb
pop
or
pop
push
add
jp
mov
xor
test
sub
das
inc
mov
into
xor
in
clc
cwtl
ss
cmp
adc
gs
jno
mov
ja
jle
fistpl
xchg
data16
mov
sbb
leave
mov
cmc
xchg
sti
out
cmpsl
mull
and
outsb
into
dec
in
out
aas
inc
addr16
dec
inc
ss
xchg
cwtl
xor
sbb
sub
mov
mov
sub
int3
cmp
gs
int
pop
mov
mov
mov
push
jl
cs
ss
in
shlb
out
sbb
or
xchg
hlt
xor
jnp
std
xor
mov
or
jb
or
xchg
insb
sbb
int
ss
or
loopne
outsb
sbb
cld
push
inc
and
sbb
push
stos
js
or
xlat
hlt
int
pusha
add
out
in
out
and
push
cmpsl
or
push
ficomps
movsb
aas
and
mov
ror
fcompp
lods
dec
addr16
out
cmpsb
lea
xlat
jecxz
xchg
addr16
mov
xlat
test
add
pop
in
xor
inc
jl,pt
sbb
and
sarl
push
adc
cs
mov
xchg
into
jnp
push
mov
xlat
jnp
lods
ds
add
mov
sbb
mov
pushf
in
sbb
mov
jmp
arpl
or
scas
xchg
enter
jnp
add
push
pop
nop
adc
add
add
jno
dec
push
lret
pop
cmp
sub
sbb
ss
pop
lods
jbe
das
sti
adc
call
or
shll
inc
lsl
xchg
pop
in
inc
and
mov
jecxz
jge
pop
hlt
inc
ds
mov
pop
sub
cmp
out
dec
sbb
scas
ror
and
jno
jp
push
adcb
or
pop
ja
sub
shrl
push
lds
mov
aad
cli
and
inc
leave
jl
push
popa
jge,pt
or
hlt
bound
push
into
pop
stos
pop
and
fwait
and
jge
cmp
nop
jge
and
cmp
mov
hlt
push
add
movsl
out
adc
sub
clc
addl
dec
xor
mov
aam
pop
jno
arpl
in
test
xor
sbb
icebp
xchg
inc
repnz
hlt
addb
and
lret
push
sarl
push
jno
into
mov
add
xchg
mov
or
lods
ljmp
clc
or
clc
cmp
pmulhuw
jge
push
jmp
sub
shlb
xor
int3
xchg
cmp
scas
dec
add
push
jnp
loopne
das
into
jbe
sub
xchg
out
mov
xor
popf
leave
mov
cmpsl
fmul
mov
jle
mov
movsb
pop
and
sbb
fstp
push
lock
ret
jns
cmp
in
xchg
mov
iret
je
faddp
movsl
test
xchg
pop
push
je
cli
repnz
jg
xor
hlt
sub
ror
inc
cmp
cmp
sbbl
inc
shlb
dec
xchg
mov
dec
push
mov
loope
pop
outsl
pop
aam
rcrb
ret
stos
testl
dec
stos
sbb
pop
insw
arpl
mov
sub
mov
or
cmp
fstl
icebp
test
xor
clc
addr16
lret
mov
mov
mov
jo
outsl
loope
xor
sub
lcall
mov
call
push
add
mov
dec
sbb
std
sub
dec
decb
xchg
scas
mov
ret
call
jnp
inc
pop
jb
xchg
mov
xor
pop
mov
inc
ljmp
cmc
add
inc
xor
test
lds
xchg
ss
leave
push
xchg
mov
pop
cmp
sbb
cwtl
cmp
sbb
dec
test
int
outsl
pop
test
and
cmp
mov
push
shlb
daa
ja
jecxz
inc
sub
inc
inc
push
fwait
dec
mov
xchg
adc
and
pop
lret
cmpsl
push
loop
sbb
into
push
jge
push
data16
je
xchg
mov
frstor
in
or
adc
cmpsl
xchg
test
repnz
pop
xor
cmc
into
pop
xchg
or
add
inc
or
push
cli
dec
call
sti
jae
aam
js
jmp
mov
jns
and
ret
std
dec
push
fisttpl
push
jmp
lock
mov
xor
icebp
jae
dec
dec
das
add
cwtl
gs
inc
sub
mov
sub
nop
push
shll
mov
cmpsb
imul
pushf
addb
xchg
repnz
ljmp
mov
lret
out
sub
gs
aam
cli
lea
mov
leave
test
sbb
mov
xor
popf
in
xchg
mov
mov
cmp
inc
testl
outsl
in
or
dec
fsubrs
mov
lea
pop
mov
out
and
outsb
inc
inc
mov
faddl
ss
and
xor
cmp
sbb
outsl
add
in
xchg
sbbb
push
mov
arpl
jbe
lret
out
js
mov
mov
stos
jp
pop
pop
mov
test
sbb
adc
push
outsb
add
sti
adc
lods
inc
popl
xor
jmp
cmp
test
push
mov
inc
mov
insb
adc
dec
sbb
jo
xor
sti
pop
hlt
gs
in
pop
mov
xchg
movsb
push
mov
imul
repz
into
inc
arpl
mov
leave
lds
adc
and
fidivrl
fisttpl
ja
iret
add
mov
lds
or
push
pop
xchg
out
cmpsl
cmp
mov
inc
xor
pop
sahf
test
arpl
mov
pop
xchg
xchg
cs
and
into
mov
mov
movsb
pop
ds
mov
push
out
jp
ret
pop
or
es
adc
xlat
push
xchg
int3
fcoml
fs
sbb
xchg
mov
test
lahf
xchg
push
movsl
lods
lret
aas
ss
or
rcrl
cmp
add
cmc
shll
jmp
push
imul
jns
pop
lret
lret
add
sbb
hlt
push
xchg
stos
mov
repnz
arpl
jecxz
xchg
xchg
out
sti
cli
lahf
fisttpl
xchg
pop
das
or
or
rorb
mov
divl
cmpsl
repnz
stc
xchg
cmpb
lret
insb
or
ds
mov
xchg
arpl
fs
mov
aaa
and
lahf
enter
call
mov
mov
rcrb
popa
scas
subl
dec
sbb
out
mov
es
popf
jo
out
xchg
js
loopne
mov
inc
add
or
int3
icebp
in
mov
imul
jmp
jnp
push
jmp
xchg
leave
push
hlt
xor
xor
rcrl
lock
adc
dec
out
and
sbb
cmp
xor
jae
mov
adc
mov
jnp
test
push
and
and
test
add
jae
or
ret
hlt
mov
test
mov
popa
or
sbb
mov
out
fwait
lock
in
ja
mov
and
inc
es
addr16
sbb
outsb
sbb
inc
in
inc
dec
add
daa
movb
push
out
cmp
lcall
jg
orl
mov
push
jbe
mov
inc
test
pop
int
push
adc
in
push
in
je
push
cmp
mov
push
pusha
and
lock
ret
insl
push
pop
add
ljmp
sti
pop
push
mov
adc
out
adc
or
push
sub
sbb
in
aaa
push
fs
push
ficoms
lahf
ja
xorl
cmp
pop
sarl
out
inc
dec
fdivr
ret
insb
out
xor
adc
dec
cmovg
in
and
dec
pop
jne
gs
cmpsb
jb
mov
mov
mov
push
addl
iret
lods
mov
test
xchg
scas
push
mov
push
int3
mov
mov
fsubrp
pop
mov
mov
add
jae
sbb
out
movsb
push
mov
pop
push
jns
cld
cwtl
cld
popa
push
inc
jb
outsb
dec
jns
enter
push
fadds
mov
test
mov
dec
negl
js
cmpsl
xlat
test
mov
subb
test
jae
cld
sub
test
add
jmp
sbb
dec
stc
add
mov
sbb
cld
jbe
push
clc
cld
push
jb
popf
ret
push
repz
cli
call
sub
xchg
dec
add
int
xor
pusha
call
cmp
dec
dec
inc
and
cmpsl
std
imul
outsl
dec
stc
arpl
mov
cwtl
jae
pop
inc
inc
sbb
jle
jecxz
je
rcrb
imul
out
cli
xchg
dec
add
pop
xor
xlat
enter
mov
inc
sub
xor
mov
pop
pop
addr16
mov
mov
ljmp
xlat
test
dec
lods
icebp
fcmove
sub
jb
ds
aas
and
hlt
xchg
or
fs
ret
inc
cmpsb
add
out
jnp
mov
mov
int3
add
ret
loopne
aam
mov
xor
jo
ds
ljmp
sahf
add
xor
repz
fimull
pop
push
pop
push
or
xchg
repz
sbb
cld
and
push
lret
js
popf
maskmovq
jp
imul
in
or
nop
mov
push
cmc
dec
dec
in
lock
ljmp
lds
push
ds
lahf
sub
popf
inc
in
gs
push
sub
or
xchg
fdivr
aas
fmull
fisttpll
aas
dec
sub
add
mov
or
xchg
or
test
pop
jo
jne
inc
mov
dec
jg
repnz
cmpsl
adc
mov
ss
adc
add
shlb
mov
mov
out
adc
iret
lock
add
imul
inc
and
mov
xchg
repnz
jl
fwait
xchg
jns
sti
xchg
rorl
or
mov
in
clc
and
mov
mov
push
adc
arpl
cmp
daa
mov
push
xor
xor
pop
mov
scas
mov
movsl
imul
arpl
pusha
xchg
arpl
hlt
aaa
or
pushf
or
negb
pushf
adc
or
sbb
mov
xor
push
lods
jae
jb
lahf
xchg
dec
adc
pop
dec
es
or
cwtl
js
adc
out
adc
push
jae
sub
repz
pusha
push
mov
mov
out
jmp
mov
or
and
and
aaa
xchg
xchg
pop
xchg
mov
push
data16
jnp
sarb
mov
push
jmp
xor
cmp
js
adcb
jge
adc
jle
xchg
lea
jg
push
mov
sub
adc
jne
in
mov
xchg
push
jmp
xchg
push
and
mov
stos
mov
or
fbld
inc
fimull
ret
adc
lahf
mov
lcall
dec
popf
xchg
in
or
and
xor
jle
loope
push
or
mov
push
mov
and
mov
pop
aam
enter
mov
dec
nop
mov
or
cld
icebp
ljmp
lret
jg
sub
lods
xchg
daa
push
push
aad
push
ljmp
pushf
jne
sahf
push
xchg
add
cmp
dec
repz
popf
xchg
and
in
adc
loope
jbe
mov
or
ret
stc
push
scas
or
enter
cwtl
test
push
mov
shrl
clc
pop
ret
subl
pop
test
mov
fistps
lcall
xchg
outsl
jnp
dec
in
test
xchg
mov
addr16
xchg
xor
int
mov
neg
dec
mov
inc
xchg
xchg
nop
ds
mov
inc
xchg
inc
fidivrl
pop
xor
stos
stos
addr16
cltd
xchg
mov
xor
movsb
inc
into
cmp
sbb
adc
sub
test
mov
xlat
ds
inc
jb
test
or
push
leave
insl
out
pop
mov
sarl
jmp
pop
adc
add
pop
cmpsl
jo
sbbb
fs
mov
xchg
and
in
inc
aas
leave
mov
add
mov
subb
adc
fs
insl
test
push
jo
or
push
cmpsl
lret
sbb
mov
enter
sub
and
dec
xor
fs
pop
xchg
callw
sahf
pushf
sub
sbb
fstl
pop
enter
flds
pop
xor
int
add
cltd
fistpll
fcoml
pop
int
cmp
in
test
bound
push
xchg
lods
inc
pop
jle
push
jmp
clc
stc
fucomi
pop
jecxz
xchg
and
pop
fs
cli
mov
cmp
xor
jo
jnp
inc
pop
adc
pop
cmp
shrb
sub
repnz
mov
aad
ret
or
pop
orb
jne
mov
les
dec
and
mov
repz
pop
adc
insl
inc
sahf
orb
push
pop
xlat
xchg
mov
mov
and
pop
push
loope
jge
cmp
rclb
and
push
jmp
xchg
inc
sahf
lcall
cld
not
xchg
pop
mov
stos
push
mov
jmp
mov
jl
xchg
or
ja
mov
inc
dec
dec
cld
add
dec
xchg
and
cmp
dec
jecxz
cmpsb
and
mov
xor
orb
out
adc
inc
lods
sbb
shrl
in
or
xchg
mov
push
and
test
mov
pop
imul
or
clc
cli
sti
jmp
aam
sub
and
wrmsr
movsl
jp
out
lcall
aam
adc
out
bound
jg
sbb
rcr
xchg
or
std
pop
xchg
lods
mov
bound
dec
fcmovu
add
pop
or
filds
pusha
dec
xchg
daa
int3
lret
bound
mov
jae
outsl
arpl
cld
push
movsl
sbb
fistpl
inc
xchg
jo
jg
lret
xor
push
add
pop
imul
and
cwtl
jle
inc
clc
inc
or
loop
lods
pop
int3
xor
mov
cmp
push
sbb
shl
faddp
mov
push
jl
dec
notb
inc
add
orl
sub
mov
addr16
sti
xlat
jnp
push
xor
cmp
ret
shlb
sbb
ret
mov
sub
jge
push
hlt
add
sub
push
jno
ljmp
adc
ljmp
mov
imul
lods
mov
ret
xor
mov
mov
int3
cmp
xor
call
add
test
lret
and
inc
pop
dec
mov
sub
cltd
and
push
fldt
rcrl
mov
mov
cltd
dec
jbe
roll
adc
popa
adc
adc
dec
in
addb
jg
cmp
mull
adc
xor
xor
pop
xor
loopne
shl
add
dec
clc
insb
adcb
dec
inc
inc
cmp
aaa
mov
sub
jp
sahf
lock
popf
adc
jo
cmp
movsl
jae
addr16
pop
fwait
sub
cmp
mov
mov
arpl
rcrl
pusha
or
aas
push
xor
jp
aad
cmp
clc
dec
lods
push
sub
mov
lret
and
or
out
mov
decb
gs
mov
push
es
mov
jo
push
mov
mov
add
adc
es
jb
mov
mov
pop
jl
pop
cmc
add
cmpsb
jbe
clc
pop
test
push
dec
xchg
xor
xchg
in
cmpsl
movsl
scas
xor
adc
cwtl
cmpsb
xor
pop
dec
xchg
stos
pop
push
mov
and
xor
sbb
idivl
cmp
jnp
add
add
and
loop
mov
pop
sbb
ffreep
fistpl
nop
subl
sbb
jnp
mov
pusha
xchg
into
inc
mov
arpl
fildll
push
scas
fdivrl
fwait
mov
add
cmp
mov
fisttpl
pop
sub
icebp
pop
leave
sbbb
cmp
cltd
out
imul
add
les
mov
adc
pop
fwait
push
jno
fmulp
mov
in
xchg
mov
mov
mov
imul
bound
pandn
cmpsl
pop
pop
fisttps
jno
roll
daa
pushf
pop
cmp
sbb
xor
sub
pop
sbb
sbb
aaa
sub
mov
sbb
dec
pop
ret
jecxz
lea
divl
loopne
loopne
pop
push
jnp
pop
sub
push
mov
jne
ret
pop
jnp
dec
int3
dec
ret
dec
call
fwait
and
lret
push
lahf
pop
pop
das
data16
xor
adcb
sbb
fstpl
mov
xchg
sub
loopne
cmpb
jb
loope
out
fwait
imul
mov
pop
fimuls
pop
dec
xor
inc
out
das
int3
xor
leave
push
and
push
es
hlt
icebp
sahf
and
nop
ljmp
aaa
sbbl
icebp
imul
rol
dec
adc
mov
jbe
div
cli
ss
mov
cmp
xor
xor
fcoms
or
outsl
or
pop
inc
cmp
mov
and
add
inc
cmpsb
pop
dec
push
lahf
cmp
push
or
or
gs
inc
pop
lock
mov
jno
xchg
cmpsb
repnz
rcll
and
mov
jmp
outsb
rcrl
dec
add
mov
insb
push
repz
lcall
xchg
jne
inc
scas
fistps
dec
lret
fisttpl
cmp
xor
test
or
movsb
test
out
dec
jmp
xchg
adc
and
arpl
xor
leave
js
stos
jecxz
in
inc
cli
and
scas
ret
mov
push
lea
push
ss
pop
jle
repz
push
int3
sub
in
stc
pop
inc
inc
mov
push
mov
jbe
ljmp
or
and
cmpb
jne
je
addr16
inc
mov
xchg
sub
cmp
mov
push
or
adc
cmp
sbb
loopne
pop
mov
insb
scas
and
movsl
xchg
outsl
inc
shlb
mov
sub
jg
jg
xchg
jl
lock
cmp
push
jle
lds
lahf
hlt
bound
pop
fdiv
dec
fwait
cwtl
push
inc
and
pop
cmp
sub
stos
lret
repnz
adc
test
mov
xchg
sub
sbb
xchg
mov
push
push
or
xchg
mov
rcrb
ficompl
scas
ror
push
inc
xchg
mov
addl
in
pop
sbb
xchg
aas
mov
dec
cmpsb
xchg
cmpl
insl
outsb
mov
jge
inc
in
cmp
and
mov
cmp
sahf
dec
lret
cmp
fldl
aad
out
sbb
or
sub
in
faddl
adc
testl
jne
leave
push
fidivrs
push
test
subl
addr16
jns
sbb
out
nop
fldt
xor
sbb
in
or
scas
xor
push
cli
mov
shrb
or
adc
aam
sbb
add
jl
push
dec
shll
dec
aad
xchg
cmp
lcall
pusha
cmpsb
mov
das
insl
test
add
sbb
push
sub
test
movsb
mov
addb
pop
add
stos
mov
test
jle
mov
xor
xor
jne
cwtl
gs
fstps
lcall
aam
loopne
lds
pop
xor
sbb
outsb
jb
jmp
sti
xchg
es
dec
sti
std
jmp
lods
loopne
and
incl
jle
push
test
sub
or
dec
lock
mov
repnz
lret
scas
push
stc
pop
adc
sub
loop
push
xchg
pop
bound
cmp
add
jge
mov
or
xchg
adc
cs
insl
mov
dec
je
pop
test
jmp
jmp
mov
sarb
scas
mov
add
xchg
pop
pop
fs
mov
stc
fisttpll
inc
test
and
push
out
push
jbe
adc
mov
cmp
fisubrs
mov
or
adc
inc
shll
ja
fwait
push
cwtl
push
sti
in
ret
mov
push
xor
sbb
pusha
fldenv
mov
movsl
xchg
mov
xchg
add
xchg
sbb
ja
std
in
inc
js
and
xor
xor
test
shlb
pop
les
lock
and
inc
cmpsb
cld
ljmp
clc
adc
fcom
imul
and
enter
mov
arpl
pusha
add
adc
sbb
sbb
faddl
scas
mov
mov
sbb
int
sbb
popa
lret
bound
jno
fbstp
stos
cld
xlat
adc
push
mov
pop
fimuls
dec
push
andl
mov
aam
fwait
mov
cmp
mov
cmpsl
mov
repnz
rolb
mov
lret
dec
inc
push
adc
mov
mov
cmp
mov
mov
out
xor
aad
mov
leave
jle
xor
mov
stos
fwait
clc
popf
lea
or
jmp
rclb
enter
push
das
xchg
and
loope
dec
negl
sbb
ss
gs
mov
jge
testl
lods
testb
adc
lcall
and
in
out
push
ss
ja
ret
fmuls
and
mov
mov
pop
inc
dec
push
cmc
lea
cmc
mov
xchg
lock
xchg
arpl
popf
xchg
or
es
push
int3
push
mov
std
fwait
pop
jge
nop
fnstsw
loop
stos
adc
fldcw
lods
pop
sbb
clc
shll
pop
out
lods
aam
xor
mov
shll
les
xor
arpl
icebp
push
outsb
pop
lods
lods
xchg
sbb
xchg
sub
ret
pop
mov
adc
ficoms
fcoms
push
sub
jle
es
sbb
cmp
out
fidivs
loope
fstpt
inc
push
mov
dec
int3
sub
sub
fstpl
rorl
inc
sbb
shll
pop
fwait
xchg
cmp
jns
pushl
decb
and
pop
lock
sbb
sbb
bound
in
pop
lea
popa
ret
xchg
lret
ds
sbb
arpl
mov
sub
lock
repnz
sub
xlat
movsb
leave
test
inc
shrb
lea
arpl
rcrb
inc
jo
inc
pop
lahf
imul
mov
mov
fiadds
rcl
insl
rorb
rorb
ljmp
pop
stc
fimuls
addr16
xchg
jecxz
inc
sbb
mov
push
mov
pop
int
sub
pop
dec
icebp
inc
pop
clc
xlat
pop
fwait
mov
cltd
pop
sbb
test
xorl
lret
fsts
mov
push
cmp
push
les
in
mov
add
subl
fistps
xchg
pop
push
outsb
ss
add
mov
pop
scas
adc
adc
in
neg
jge
push
int
mov
pop
sar
xchg
and
ret
add
add
pop
bound
lcall
andl
mov
cwtl
xorl
or
stos
cmp
imul
pop
mov
or
out
pushf
pop
fsts
lock
hlt
incl
xchg
outsl
std
inc
stos
in
lods
out
idivb
mov
testl
xchg
scas
or
mov
mov
push
sti
arpl
mov
pop
ja
orl
mov
fprem
scas
jecxz
orl
jae
push
xor
js
call
mov
mov
mov
divl
roll
push
xchg
dec
into
or
into
push
ljmp
sub
pop
out
nop
jp
mov
les
sbb
pop
pop
divl
popf
rcr
sub
mov
add
outsb
or
dec
enter
mov
xchg
ds
or
ss
aaa
pop
add
push
jno,pt
pop
xchg
imul
xchg
fnsave
in
cmp
cmp
int3
stos
movsb
std
or
mov
add
arpl
out
adc
ret
or
in
ret
lods
mov
lahf
leave
in
pop
mov
pause
mov
cmp
enter
mov
cmpsl
xchg
cmp
or
rorb
nop
push
je
nop
orb
pop
xchg
std
xchg
fs
cmc
imull
sbb
adc
sub
or
jecxz
sub
cmpsb
mov
sti
lahf
rcr
push
xchg
mov
icebp
sbb
xor
call
in
xor
out
push
popa
ss
lahf
sbb
push
xchg
jae
lret
push
push
sbb
xlat
push
lods
jmp
inc
mov
push
mov
push
inc
sbb
es
cmc
test
cli
popa
jle
lods
pop
pop
xchg
jmp
sub
mov
xchg
dec
xchg
lahf
xchg
xchg
daa
cmc
fs
repnz
pop
call
pop
jge
inc
mov
test
mov
xchg
push
dec
shlb
push
ljmp
xchg
sbb
jp
outsb
xchg
ja
icebp
aam
xor
adc
pop
aas
pop
mov
int3
cld
mov
mov
push
repnz
addr16
orl
dec
push
idiv
scas
repz
popf
fndisi(8087
cmp
pop
ja
cmc
popa
in
xchg
mov
inc
outsl
pushf
pop
sub
arpl
cmp
lret
jmp
jo
outsb
sbb
scas
add
add
pop
nop
sub
and
mov
xchg
mov
popa
ret
hlt
jmp
int3
dec
incb
in
mov
hlt
adc
jl
jg
inc
aad
mov
imul
stos
pushl
mov
sbb
inc
sarb
jnp
sbb
mov
fdivp
pop
jg
loopne
cmpl
pop
fimuls
xor
mov
dec
xor
sub
pop
popa
jmp
and
dec
ss
stc
scas
lds
dec
stos
and
sub
insl
cmp
mov
lds
pop
xor
pop
xchg
and
les
mov
dec
mov
out
imul
mov
rcrl
hlt
testl
shrb
lock
jb
int3
xor
pop
incl
mov
jb
xor
popa
cmpsl
mov
xor
scas
fistps
or
shrl
mov
sub
jp
repnz
xor
or
mov
cmp
add
das
in
or
jb
add
shlb
or
and
pop
add
inc
pop
mov
aas
inc
rcrb
pop
xchg
mov
xchg
icebp
ljmp
outsb
in
gs
pop
xchg
add
in
aaa
cmp
push
jb
push
int3
enter
pop
jnp
xchg
sub
xor
add
lds
adc
addr16
pop
jle
arpl
mov
imull
sti
adc
jns
xlat
negl
jp
lea
mov
fidivl
or
xchg
pop
ljmp
inc
sub
mov
cmp
fcompl
jmp
jb
out
cwtl
or
shrb
cld
scas
dec
mov
xorl
xchg
xor
cli
cmpsb
fadds
mov
cmp
fdivrs
gs
adc
sbb
scas
adc
and
ret
sbb
std
cmp
les
push
js
dec
mov
sbb
aad
add
enter
push
in
add
clc
jns
in
xor
jg
dec
push
mov
out
outsl
xorb
xor
adc
lock
nop
les
or
cmpsb
pop
es
bswap
cmp
adc
pusha
idivl
add
sub
in
testb
cmp
daa
cli
mov
push
push
sub
push
inc
push
int3
lahf
aad
sarl
test
xchg
dec
pop
push
gs
dec
iret
hlt
and
fs
mov
pop
test
imul
movsl
test
mov
pop
and
je
dec
pop
or
push
push
aad
push
xor
int3
fwait
pop
sub
in
movsb
sbbl
xor
push
pop
add
pushf
insb
add
add
ret
cmp
mov
movntps
dec
test
icebp
mov
adc
into
adc
adc
cwtl
push
or
pushf
int
pop
stc
imul
add
hlt
mov
inc
xor
testb
lahf
mov
push
dec
je
mov
and
mov
pushf
cmpsb
pop
cwtl
out
pushf
push
mov
jge
cli
xlat
std
jae
add
les
daa
sbb
cmp
push
stos
jge
jp
rcrb
scas
dec
adc
push
jnp
cwtl
push
ror
movsb
xchg
xor
js
sarl
popa
mov
dec
cmp
fdivrs
push
xchg
in
add
test
mov
inc
push
add
xor
sub
test
testl
insb
add
mov
pusha
jbe
int
cs
mov
jns
aaa
mov
sub
pop
inc
fisttpll
cmp
jecxz
xor
cmp
ret
push
jl
sub
cld
cli
push
mov
mov
call
sbb
rcl
lret
adc
test
jle
dec
ds
popa
int
loopne
scas
xchg
cli
adc
insl
loop
mov
cmpsb
pop
test
dec
lcall
sbb
outsl
je
lret
roll
scas
sub
pop
and
jge
cltd
mov
aas
bound
fisubrs
shrb
mov
sbb
or
scas
cld
mov
mov
imul
xor
xor
es
bound
test
rcrb
inc
rorb
mul
cmp
mov
pop
dec
xor
mov
in
insb
pop
lock
dec
cmp
lcall
cmc
push
jno
data16
hlt
and
add
or
lock
int3
mov
sbb
sub
popf
enter
jmp
dec
lock
cmpsl
cwtl
cmpsb
pop
fisubrl
stos
adc
cli
fldl
fsubrl
pop
rorl
fiaddl
lret
push
dec
sbb
clc
scas
adc
fmulp
rcrl
test
sti
xchg
in
push
cmp
ret
xchg
out
out
xor
inc
lds
mov
inc
test
pop
dec
dec
push
arpl
enter
inc
xchg
push
fcoms
ljmp
adc
stos
xchg
fwait
dec
cmp
imul
sbb
insb
cmp
movsl
scas
mov
scas
std
ds
cwtl
push
jae
xchg
fcomp
lahf
and
es
adc
loopne
cmpl
leave
test
xchg
jne
pushfw
add
lods
daa
les
ss
mov
mov
mov
jno
cmp
scas
pop
mov
dec
hlt
ja
xchg
addb
cmp
push
jbe
push
add
bound
jb
pop
mov
cmp
sub
fwait
push
cli
mov
add
mov
inc
sbb
mov
faddp
adcl
adc
scas
dec
cmpsl
add
fwait
jecxz
cmp
add
ljmp
sub
jo
jecxz
push
mov
jp
xchg
je
sbb
call
pop
sbb
mov
jne
jle
lret
push
test
pop
fdivp
xor
ja
cmp
xor
leave
ds
data16
mov
pop
lock
jg
popf
mov
dec
pushf
push
hlt
adc
dec
in
cmp
sub
lea
jecxz
jns
int3
ret
outsl
fsubr
jge
xchg
incb
push
jecxz
dec
adc
xchg
bnd
push
inc
mov
fsubrl
xlat
push
repz
push
loopne
mov
or
dec
das
sbb
dec
movsl
add
pop
mov
mov
lds
xchg
addb
lea
loope
xor
add
cmp
mov
repnz
pop
pop
dec
nop
imul
imul
pop
int
mov
lea
fisttpll
xor
push
icebp
ret
pop
lret
mov
or
sbb
jmp
outsb
ret
cmp
or
or
or
dec
mov
scas
les
rol
in
jb
jno
repnz
cmp
cmp
push
mov
inc
shlb
lret
out
fldl
cmpsl
inc
add
popa
pop
sti
incl
cmp
adc
push
bound
push
int3
int
sbb
and
aaa
insl
pusha
mov
das
push
xor
pop
lods
mov
fs
pusha
or
pop
add
xchg
ds
fisubrl
xchg
dec
sbb
fidivl
shlb
sub
pushf
imul
jle
inc
ljmp
cmp
fmull
jmp
js
roll
xchg
push
lret
jl
jle
ret
popf
adc
jno
push
popa
sbb
sub
cltd
gs
int
pop
bound
mov
popa
pop
lret
test
std
xchg
jne
mov
movl
pop
sub
mov
xor
aaa
xor
fstl
jae
imul
mov
loop
pop
jbe
rolb
mov
dec
push
test
inc
adc
sub
pusha
out
push
nop
pop
pusha
stos
cmp
insb
and
sahf
jns
cmp
lret
dec
rorl
ds
std
cwtl
je
lock
fmul
outsl
add
mov
cmp
cmpsl
repnz
repnz
xor
or
test
orl
inc
fldcw
cmp
stc
mov
lods
mov
ret
jmp
cmp
stos
lods
subb
sbb
jnp
and
jg
mov
pop
mov
jae
jae
gs
icebp
sub
daa
mov
lds
fmuls
jb
cmp
test
leave
adc
dec
xor
aaa
shrl
mov
push
pushf
cmp
pop
dec
cmc
imul
mov
xchg
jnp
std
ret
cmp
fldcw
lcall
cmp
mov
fldt
push
mov
scas
arpl
insb
sahf
fisubrl
mov
mov
cld
popf
int3
pop
or
inc
pop
dec
inc
jecxz
sub
rclb
addb
daa
dec
adc
mov
aas
jae
push
std
aam
lock
insl
test
push
outsl
cs
and
xchg
mov
dec
rcrb
push
iret
test
aam
ds
jmp
std
and
addr16
or
dec
mov
or
sub
fcmovnu
inc
mov
add
shr
dec
push
test
mov
jg
inc
push
out
lods
outsl
cltd
ja
and
jge
imul
pop
dec
or
imul
jl
bound
mov
test
pop
dec
aad
inc
lock
sub
repz
sti
mov
jae
movsl
shr
daa
add
cmpsl
sbb
or
scas
push
xchg
jp
jae
imul
dec
cltd
mov
cs
dec
es
xchg
lahf
cmp
or
stos
add
mov
andb
xchg
out
ret
mov
ds
jnp
sub
test
aam
push
push
pop
aaa
aas
add
dec
rclb
pop
loopne
and
sub
jae
push
ret
das
ficoml
mov
sti
add
mov
jns
fnstcw
scas
xor
adc
add
shlb
je
cmc
insb
jecxz
js
cltd
lea
xor
stos
rorl
in
mov
int
mov
sahf
mov
dec
sbb
das
insl
dec
mov
popa
ljmp
push
xchg
xchg
jne
pop
pushf
mov
flds
push
inc
lea
negl
mov
and
add
repz
ror
add
iret
dec
mov
add
pop
xor
inc
pop
ja
cwtl
cs
inc
pushf
test
sbbl
and
bswap
in
push
and
push
aas
inc
out
orb
jo
icebp
add
inc
fcmovb
jb
nop
mov
aad
pop
pop
mov
dec
xchg
std
cmpsb
or
push
dec
stos
pop
add
xchg
out
addr16
in
sbb
movsb
fimuls
mov
inc
shll
sbb
xor
aas
int3
mov
adc
fs
dec
mov
fcmovne
jle
adc
ljmp
rolb
jge
sub
jp
aaa
mull
fmull
mov
lds
and
lcall
inc
adc
jmp
pop
and
inc
xor
cmp
int3
cmp
jo
cmc
jmp
inc
ffreep
and
mov
sbb
mov
pushf
and
out
cmp
ss
sub
daa
or
shll
cmp
push
ljmp
jg
lcall
add
inc
inc
bnd
scas
jo
push
in
fwait
test
enter
push
and
pop
fcmovb
sti
test
mov
shlb
add
pop
aam
loop
adc
cmp
popf
and
outsb
sub
movsl
pop
popa
ret
call
xchg
fcmovne
lahf
fcompl
inc
push
cmc
xchg
mov
out
insl
pop
ret
cld
arpl
mov
and
push
sub
pop
loope
je
push
jns
dec
notl
fnstcw
xchg
cmpb
pop
cmp
inc
push
mov
cmp
dec
xchg
daa
xchg
repnz
jl
lret
pusha
or
xchg
adc
clc
and
and
fldenv
sbb
lea
inc
imul
adc
aam
sbb
pop
outsl
mov
std
cmpsl
pop
int3
push
xchg
xchg
jb
ljmp
test
sub
or
xchg
pop
imul
adc
or
in
sahf
data16
sub
movsb
pop
lahf
rcll
or
jmp
add
lds
push
and
inc
neg
mov
dec
add
lock
mov
sub
cmp
xchg
mov
cmp
add
xchg
push
dec
popa
add
out
insl
xlat
xchg
xchg
ljmp
in
push
sub
test
outsb
sarb
mov
fs
xlat
xchg
dec
pop
pop
add
inc
sub
fs
push
mov
push
or
xchg
pop
nop
call
shrl
lock
outsl
icebp
fcompl
xchg
pop
andl
sub
rorl
lods
fldt
mov
dec
shll
and
les
cltd
pop
dec
jge
leave
add
xlat
mov
inc
lcall
incb
push
and
dec
push
arpl
dec
popf
clc
in
sbb
stos
and
fs
pop
mov
cmp
jecxz
mov
add
cmc
mov
stos
inc
add
xorl
cmp
cmp
cwtl
icebp
sbb
jg
xor
in
popf
jg
add
popa
cltd
cmc
push
cltd
xor
out
les
aaa
sar
fimull
push
jns
push
jecxz
mov
out
fwait
popa
ror
test
and
add
sub
mov
stos
mov
pop
and
push
lds
pusha
or
subb
mov
repnz
and
sahf
sbb
jbe
test
scas
repz
imul
jle
push
pop
sti
repnz
scas
push
cmpsb
and
fisubrl
add
repnz
dec
dec
push
call
jp
xchg
mov
in
jbe
and
lods
test
loope
in
test
fdecstp
out
out
sbb
xchg
pushf
jge
out
mov
sub
hlt
data16
dec
add
pop
push
rcll
xchg
dec
sti
data16
lea
call
jae
sub
xor
aad
push
es
call
push
lds
pop
arpl
out
mov
jge
nop
dec
push
or
daa
sbb
loopne
push
sbb
jp
sub
enter
adc
add
jg
add
pop
dec
xchg
mov
repz
sbb
pop
adc
adc
sbb
and
out
ret
dec
in
fcmovbe
jge
mov
xchg
cmc
movsl
rorb
fxch
mov
mov
scas
cmp
or
icebp
int3
jb
jecxz
aad
out
scas
cli
cwtl
xor
cmpb
lret
jbe
mov
mov
out
sbb
and
mov
mov
add
inc
push
cmp
xor
test
out
loope
sbb
scas
inc
mov
std
cmp
mov
push
data16
bound
pop
stc
cmpsl
adc
femms
mov
clc
dec
nop
mov
cmp
jp
mov
es
in
movsl
xchg
mov
jnp
ss
inc
hlt
subb
dec
mov
mov
sti
stos
mov
xor
cltd
inc
test
rorl
cmp
les
jo
jb
enterw
stos
mov
add
push
xchg
adc
test
jns
and
ret
dec
pop
add
js
cmp
daa
leave
jno
push
pusha
mov
cmp
movsb
aam
xchg
cmc
data16
lods
into
mov
xor
push
push
jns
mov
adc
lds
repz
addr16
cmp
dec
popa
test
jne
sahf
jp
jbe
xchg
jg
inc
dec
jno
lea
cmc
xor
mov
push
ja
push
jmp
and
sbb
lret
sbb
mov
ljmp
mov
hlt
ds
outsl
aad
je
sbb
push
cmc
aad
jl
sub
arpl
cmp
mov
pushf
shlb
dec
pop
add
repz
in
mov
lods
sub
outsl
mov
jp
inc
cmp
js
pop
pop
jmp
sarb
xor
jmp
pop
sbb
scas
or
xor
fcmovb
flds
mov
sub
pop
loop
mov
pusha
jae
test
xor
mov
or
push
popa
and
mov
nop
sbb
dec
imul
mov
xchg
sbb
shll
pusha
enter
add
aaa
outsl
stos
sbb
ds
repz
dec
xor
imul
popa
sub
mov
and
fnstcw
pushf
dec
repnz
cmpsb
movb
xchg
mov
testb
sbb
adc
stos
aas
and
mov
jp
hlt
out
mov
fisttps
push
ljmp
cwtl
sub
push
movsb
mov
incl
shlb
pop
fldl
jno
ja
cmp
mov
daa
stos
scas
xor
or
fs
and
push
je
mov
inc
push
dec
or
shll
xor
fiaddl
mov
or
push
in
cmp
push
out
xchg
dec
rol
sub
adc
stc
fidivrl
jp
adc
and
sbb
mov
dec
les
lcall
aad
test
shll
ret
and
add
ficomps
pop
push
mov
fdivr
fdivr
pop
or
jno
xchg
dec
stc
ficoml
add
jb
pop
jge
push
sub
mov
repnz
xor
mov
add
mov
sub
cmpsl
dec
lods
or
xor
xchg
or
jns
les
inc
sub
aas
call
push
mov
cmpsb
sub
cmc
jg
lcall
std
mov
add
or
jb
dec
popf
mov
lods
lcall
push
imul
shrl
in
xchg
lods
mov
ljmp
mov
loopne
adc
dec
sub
jl
imul
in
jno
fmul
mov
jno
xor
xor
movb
xchg
test
lret
lds
pop
jp
pusha
faddl
xor
loopne
inc
mov
inc
hlt
sub
xchg
ja
adc
inc
into
jl
mov
shl
das
iret
lods
pop
repz
shlb
mov
mov
pop
lods
jno
push
in
push
fnstcw
sbb
iret
iret
stc
bound
cmp
xchg
xor
fidivs
dec
out
adc
sbb
jg
cmc
out
xchg
pop
aad
sub
fwait
mov
xor
xor
push
cmp
lahf
cmp
movsl
push
mov
and
sub
mov
add
pop
pop
jo
data16
push
stos
or
out
iret
into
jne
jp
loope
push
mov
jg
or
mov
pop
rolb
lock
push
mov
lock
dec
cs
insl
fsubrs
nop
ret
cmp
in
jne
popf
stos
nop
add
mov
out
jns
or
cltd
cmp
mov
test
inc
push
dec
repz
pop
mov
loope
dec
sub
in
sub
or
cs
add
repnz
pop
dec
aam
ja
pop
cs
dec
adcb
sbb
mov
mov
mov
adc
pusha
xorl
jnp
xor
fstps
leave
and
lcall
mov
div
mov
mov
mov
outsb
inc
mov
mov
mov
mov
rcl
js
fsubrl
ja
mov
lret
and
pushf
xchg
test
mov
lds
sti
and
loopw
jecxz
out
loop
add
movaps
pusha
incl
or
imul
divb
cltd
xor
mov
dec
out
jno
sbb
or
pop
jmp
xchg
mov
loopne
aaa
xchg
xchg
rcr
test
inc
jecxz
or
stos
push
cmp
xor
imul
mov
mov
mov
mov
inc
mov
add
sbb
pop
mov
or
ss
loop
cmpsb
pop
and
mov
out
arpl
adc
and
outsb
shll
les
mov
mov
add
rol
mov
mov
es
outsl
xor
cs
mul
inc
idivb
loope
mov
in
or
sahf
xor
out
insl
lods
xlat
test
js
add
in
cwtl
sbb
mov
sub
lea
xchg
xor
out
stos
mov
in
movsl
cmpl
jno
push
and
cmp
inc
sarb
stos
je
xchg
insb
jmp
stc
pop
mov
jae
out
xchg
adc
ja
push
jl
mov
aas
int3
dec
inc
xorb
fsubl
leave
mov
stos
aaa
jp
lret
ljmp
add
push
mov
sbb
js
into
xor
sub
int3
xlat
aas
cwtl
xor
xor
pop
or
and
std
je
xor
repnz
dec
mov
push
jle
cmpb
icebp
and
cmp
mov
stos
xchg
jbe
pop
insb
pop
and
les
mov
sbb
cmpb
jge
shrb
push
cmp
jge
adc
xchg
je
pop
adc
pop
aad
push
push
ja
jns
mov
cltd
and
push
mov
leave
and
adc
add
push
ja
pop
repnz
ljmp
and
sahf
xor
les
jns
push
or
aas
lret
mov
push
pop
mov
xlat
jle
pop
cmpsb
imull
pop
push
and
ss
xchg
pop
mov
mov
mov
neg
xlat
imul
lahf
lods
push
lahf
dec
jmp
inc
inc
xor
scas
cmp
fldcw
pop
clc
pop
sete
lods
push
jle
repz
roll
loopne
xor
lahf
in
lret
enter
xor
aaa
out
cmpsb
push
xor
bswap
mov
lcall
repz
dec
scas
daa
push
leave
or
or
cli
popf
jns
sub
add
fwait
push
dec
xchg
inc
fstl
mov
inc
sahf
xchg
fldl
pop
in
arpl
lahf
fldcw
test
lock
popf
dec
ret
sub
imulb
movsl
pop
sbb
adc
rorl
mov
call
imul
imul
mov
cmc
jns
adc
aad
call
inc
ljmp
ljmp
pop
dec
ss
sbb
loopne
mov
pop
xor
idivl
or
ror
adc
dec
dec
cmpl
ret
xor
xchg
add
push
enter
pop
mov
sbb
rdtsc
lods
jmp
dec
imul
mov
fdivrl
mov
in
out
fisttpll
mov
popf
inc
es
push
movsb
jmp
xchg
ficompl
je,pt
push
aam
pop
adc
lcall
subl
jmp
jecxz
movsl
pop
ljmp
pop
ror
stc
movl
insl
rorb
mov
xchg
xchg
movsb
and
xor
idivb
movsl
jno
fsubr
inc
imul
mov
mov
in
hlt
sbb
xchg
out
and
fcmovb
in
out
and
loop
and
add
jns
xor
cwtl
fldenv
xor
mov
mov
notb
das
loopne
jp
adc
pusha
int
sbb
xchg
cwtl
xor
std
jb
jbe
out
mov
test
popf
inc
jb
pop
mov
movsl
mov
cs
clc
mov
pop
sub
push
mov
mov
pushf
mov
int3
jecxz
mov
mov
cmp
aad
push
sbbb
fnstenv
or
arpl
and
and
mov
xchg
cmp
nop
mov
scas
mov
mov
sbb
push
fiadds
enter
jbe
sub
add
push
aam
xor
pop
lret
mov
cmp
xchg
push
in
lret
inc
imul
cmp
bound
cmc
mov
cltd
in
movb
jp
jns
lret
scas
scas
pushf
sarb
pop
shlb
mov
push
bound
dec
push
xor
xor
add
add
movsb
fnstenv
arpl
adc
outsb
and
out
mov
mov
xchg
adc
add
and
call
cmc
std
jb
cs
and
cli
xchg
in
add
mov
fs
adc
mov
ljmp
jbe
xchg
aas
mov
and
xchg
or
in
push
cmp
test
adc
cmp
in
mov
cs
int
movsb
insl
aaa
dec
jp
sub
pop
mov
imul
mov
cmp
pushf
pop
dec
ja
aad
mov
push
lret
aas
pushf
push
pop
loope
pop
call
mov
cs
popf
inc
int
movsl
mov
repnz
pop
adc
lea
arpl
cmpsl
roll
jecxz
sub
sbb
and
mov
repnz
sahf
xor
fsubrl
bound
mov
push
stos
pop
pop
push
jo
scas
push
jl
das
js
dec
xchg
shl
test
movsl
push
test
cmc
adc
lcall
outsb
push
xchg
subb
insl
pop
inc
lods
gs
cmpsb
mov
and
and
bound
jb
in
arpl
mov
inc
lahf
aaa
mov
inc
dec
adc
jle
in
xor
sti
mov
xchg
adc
sub
das
add
pop
pop
pop
push
mov
push
insl
and
lret
std
push
rol
cli
repz
inc
insw
ljmp
push
hlt
shlb
xchg
cmp
lock
in
mov
adc
pushf
insl
pop
pop
xor
pusha
inc
push
mov
les
mov
cmc
or
hlt
cmp
inc
daa
inc
test
pavgw
cmp
fwait
sbb
notl
jl
inc
call
jns
or
mov
jo
sub
movsl
int3
or
sbb
and
sub
pop
popa
out
fwait
jl
xchg
inc
and
lods
add
stc
test
mov
and
pop
pop
mov
js
shll
xlat
popa
lods
cmc
push
ds
dec
mov
fcmovbe
in
in
jge
mov
das
pop
data16
popa
jp
sti
add
daa
ja
sbb
ror
dec
push
aam
inc
inc
xor
insl
add
test
addb
pop
cmp
cli
movsb
pop
scas
cltd
fwait
sbb
cmp
dec
sarl
add
add
sbb
mov
xchg
mov
push
xchg
mov
xor
rcll
pop
daa
in
sub
xor
cmc
enter
sbb
aas
call
adc
dec
jmp
pop
addb
ljmp
fmuls
xchg
mov
repz
movsl
das
or
mov
shl
mov
lds
fs
ljmp
pop
push
sbb
negl
ljmp
push
push
int3
cmpsb
cltd
movsl
arpl
mov
aam
add
pop
clc
mov
stos
dec
insl
data16
sbb
adcl
aaa
sbb
sub
popa
xor
fildll
jo
shr
push
add
int
daa
mov
jbe
jge
pop
jae
fbld
adcb
enter
push
inc
mov
or
inc
push
adc
insb
and
es
cmpsl
sbb
add
data16
jmp
pop
popa
xchg
pusha
lret
add
adc
xchg
mov
mov
movsl
cwtl
in
dec
cld
sub
insb
fsubrs
sbb
mov
fsubrl
repz
arpl
je
fcmovb
lret
out
inc
and
cwtl
cmc
lret
shrl
movsb
stc
xchg
scas
sub
mov
xor
dec
in
test
cmp
inc
add
into
push
and
mov
addr16
enter
leave
and
jno
and
mov
jp
shrb
or
fnstcw
mulb
ret
add
cmp
or
mov
out
push
xor
push
cmp
and
out
xor
xchg
pop
sub
out
std
movsl
dec
xor
push
in
call
mov
shll
imull
push
daa
out
pmaddwd
push
popa
mov
in
cmp
mov
and
leave
and
hlt
pop
sbb
stos
stos
mov
pushf
push
int
mov
ret
sub
pop
mov
or
in
push
lods
inc
inc
sbb
sbb
insb
mov
sbb
bound
inc
icebp
aad
xor
les
aaa
mov
inc
dec
arpl
loopne
repz
mov
int
int
inc
push
inc
insl
adc
arpl
mov
in
jecxz
dec
push
push
inc
and
sub
rcr
popa
adc
xchg
cs
mov
aaa
fdivrl
sbb
cmpb
sub
pushf
cmp
dec
sub
aad
pop
mov
repz
in
push
sbb
xchg
mov
pop
sub
repz
or
ds
into
xchg
adc
push
jmp
cmp
jle
ss
cmp
lret
pushl
push
cs
subb
mov
negb
xor
filds
lret
add
fdivl
sub
repnz
imul
mov
mov
pop
das
jmp
insl
in
mov
lods
cmp
mov
ret
out
jns
sub
adc
dec
mov
and
inc
adc
fisubrs
insb
insl
in
in
mov
stos
addb
shrl
push
mov
scas
mov
stos
pop
outsb
insl
inc
aas
lcall
lods
lods
ret
mov
mov
jae
jge
push
push
cld
aad
aad
or
xchg
fistpl
sub
jb
data16
or
push
int3
jb
jge
inc
mov
imul
and
or
es
popf
sub
pop
xor
xor
jnp
mov
ss
jle
into
xchg
fisubrs
cmp
aam
inc
mov
mov
inc
xchg
or
cmp
test
xchg
into
mov
ficompl
inc
mov
clc
test
add
sarb
sub
or
push
mov
dec
jmp
push
jmp
ret
adc
sbbl
xorb
adc
pushf
les
jmp
lcall
xor
adc
dec
nopl
stos
fs
dec
repnz
and
in
mov
insb
lds
mov
pop
mov
pop
sbb
and
addr16
dec
adc
addr16
out
push
js
dec
or
xchg
out
loopne
addr16
push
mov
je
mov
mov
mov
jbe
add
jb
or
lea
and
xor
push
sbb
push
mov
je
sub
mov
push
call
push
pop
xor
mov
sub
stc
rolb
es
sub
push
xchg
push
iret
push
xchg
push
lcall
add
push
dec
iret
adc
cmp
mov
push
adc
pop
jmp
stos
lret
mov
ret
pop
shll
mov
fwait
out
sbb
popa
mov
cld
mov
mov
addb
gs
cmpsb
push
cmp
inc
dec
jp
sub
rclb
pushf
mov
or
pop
push
push
insb
mov
pop
out
cmp
sti
orl
and
fcmovnu
push
cmp
daa
xor
rolb
ljmp
xchg
loopne
mov
in
jb
cmc
xlat
ja
xor
lahf
cld
xchg
mov
cltd
imul
inc
sbb
jo
mov
pop
mov
arpl
dec
sub
and
sti
iret
add
sbb
cmp
adc
push
cmp
pop
fmull
call
dec
stc
fsubl
outsb
sahf
addr16
mov
inc
dec
mulb
mov
ret
pop
sbb
leave
push
repz
rcrb
and
dec
loopne
js
mov
add
sahf
push
push
mov
xorl
movsb
mov
cli
xlat
ljmp
stos
in
pop
dec
mov
and
push
xor
dec
inc
cs
jecxz
movsl
jb
cld
or
pop
xchg
js
rcll
mov
movsb
add
out
lods
or
scas
scas
jle
pop
cwtl
push
sbb
cli
inc
dec
in
fildl
fbstp
in
and
test
xchg
mov
adc
pop
mov
adc
jg
sub
shl
in
mov
mov
aaa
inc
outsb
sbb
in
mov
rcll
repnz
dec
push
sub
in
lcall
cmp
ret
iret
pop
jmp
xchg
daa
mov
push
ljmp
push
int
xchg
dec
test
pop
or
add
lret
iret
fstpl
add
movsl
fwait
jb
mov
push
sub
loop
rcl
cltd
or
mov
mov
xor
popa
test
sar
inc
xor
jge
sbb
repz
ret
mov
insb
in
pop
mov
mov
inc
inc
cmp
cmp
mov
add
test
and
inc
pop
fcmovu
mov
sub
cmp
lcall
scas
mov
mov
mov
aaa
fwait
stc
das
mov
sahf
cmp
fisubl
xchg
es
inc
mov
cmc
sahf
jno
push
es
xchg
xchg
lds
mov
nop
inc
sahf
ss
stc
inc
add
or
mov
lret
fistpl
jl
sbbl
rcr
out
aaa
jl
rcl
xor
leave
push
aas
cwtl
call
mov
lahf
icebp
sub
push
sbb
aam
jae
mov
mov
pushf
mov
jae,pt
add
outsl
push
xchg
mov
rcrl
push
call
fnstenv
mov
lcall
ja
or
daa
dec
fidivrs
cmp
addb
sub
add
and
or
mov
push
in
les
cmp
dec
push
cmp
sarb
out
inc
loop
adc
pop
xor
jnp
icebp
enter
lret
xorb
or
nop
or
out
mov
std
push
jns
and
ljmp
stos
jl
push
inc
jmp
mov
aas
xchg
rcll
mov
jns
lret
aaa
aaa
outsb
lods
std
sub
inc
ss
mov
outsb
aas
push
bound
insl
inc
push
loop
scas
loope
or
test
pop
fdivrs
cmp
ret
je
jl
arpl
movsb
cltd
adc
roll
dec
pushf
sbb
fadds
mov
mov
adc
add
mov
into
or
jge
xchg
mov
insb
fldenv
arpl
adc
pop
mov
clc
adc
adc
aaa
xchg
jnp
fwait
inc
mov
shlb
cmp
into
aad
jle
into
dec
dec
jne
das
fdivs
inc
stos
add
fsub
push
mov
mov
jecxz
or
xor
xchg
call
insb
or
arpl
cmpl
xor
lcall
iret
push
lcall
lret
cmc
icebp
dec
lret
mov
adcl
jg
mov
in
aam
mov
push
mov
dec
and
bound
mov
mov
mov
add
add
mov
mov
and
mov
imul
call
mov
jl
mov
push
into
lock
sbb
sbb
push
xlat
sbb
sahf
cmp
std
mov
inc
inc
loopne
xor
and
xchg
fsubrs
jb
mov
icebp
xchg
push
mulb
add
push
xchg
test
ret
scas
dec
dec
divb
inc
push
insl
push
adc
xchg
das
or
pushf
je
mov
hlt
das
or
pop
pop
xor
cmpsl
or
pop
fildll
mov
loopne
out
and
mov
adc
push
push
nop
mov
call
outsb
mov
aas
iret
hlt
push
in
ret
int3
mov
mov
xlat
cmp
pop
adc
xchg
orl
sbb
out
pop
add
fnstenv
mov
sbb
loopne
add
cltd
dec
out
mov
gs
pop
cmp
flds
scas
shlb
fidivl
cmp
cmpsb
popa
jmp
cltd
sbb
dec
ret
mov
or
loop
js
stos
xchg
sbb
sub
or
aaa
icebp
push
mov
sub
insb
cld
shlb
sbb
shrb
push
hlt
imul
ljmp
mov
mov
mov
sahf
push
std
sahf
mov
mov
pop
add
insb
dec
fiaddl
inc
test
stos
mov
xchg
cld
mov
jp
xchg
or
dec
pop
mov
jbe
divl
pop
test
pushf
lahf
cli
insb
jbe
or
mov
pop
mov
rorb
lods
mov
push
dec
mov
test
xchg
push
shrb
lret
in
iret
jb
jno
and
push
dec
and
test
mov
std
cld
dec
xchg
add
ss
mov
test
inc
ss
lods
lcall
int3
arpl
clc
ja
fiaddl
in
dec
xchg
int3
sub
retw
jmp
or
cmp
and
std
int
aam
mov
jmp
inc
push
frstor
or
ja
mov
jae
pop
ljmp
outsb
enter
fildll
pop
out
or
mov
mov
jbe
adc
into
mov
orl
dec
roll
sub
ljmp
mov
popa
das
sbb
bswap
sbb
sti
lea
adc
cs
fisubs
inc
clc
movsb
adc
mov
pop
xchg
add
jle
mov
sbb
push
es
mov
pop
pop
or
cmp
test
mov
sub
jbe
adc
ja
inc
sub
add
ret
fsubs
xchg
sbb
push
fldl
mov
insl
out
sbb
and
push
fsubrp
lock
mov
jae
push
addr16
loope
ss
lcall
andb
sbb
insb
xchg
push
cmp
out
pusha
in
mov
test
xor
test
outsl
movsb
sub
fdivs
les
jb,pt
mov
cmp
fistpl
cmp
ss
movsl
xor
call
aam
nop
out
lret
fadds
insb
and
sbb
xlat
icebp
add
ljmp
fcomp
and
jae
aaa
jae
add
mov
adc
jnp
pop
cmpsl
and
mov
rcll
ficoms
imul
mov
cmp
cli
repnz
fmul
cld
jo
pop
and
shlb
or
fwait
pop
pusha
insl
hlt
adcb
in
cmpsl
jns
xchg
outsb
sbb
jbe
iret
inc
mov
andb
xor
inc
xor
in
and
cmp
and
sbb
mov
inc
inc
adc
cmpsb
cltd
std
fidivrl
repz
dec
pop
loopne
daa
je
jbe
pop
push
mov
jecxz
sub
testb
roll
jae
cmp
mov
fld
test
jp
xchg
jmp
xchg
push
cs
or
add
pop
cli
out
les
dec
sub
lret
adc
sbb
cmp
rcll
outsb
stc
xor
cmp
adc
xchg
xchg
mov
push
cs
pop
xchg
loopne
sti
adc
cmpsb
push
inc
cli
mov
sbb
sub
xor
test
adc
mov
mov
or
sub
or
ret
ret
aam
inc
sbb
xchg
es
mov
jecxz
xchg
xor
pop
fcomps
adc
out
inc
or
mov
ret
lea
push
jl
int3
loopne
or
js
inc
fnstsw
call
sub
pop
xchg
outsl
adc
lock
and
lea
dec
jno
popf
lcall
pop
sub
mov
repnz
fidivl
mov
lret
ljmp
ret
cmp
push
mov
imul
lods
pop
bound
inc
fsubs
dec
jmp
in
add
and
lods
lods
pop
inc
dec
or
cwtl
add
bound
inc
sbbl
inc
sahf
icebp
cmc
push
into
cs
xchg
repnz
inc
cmc
popf
mov
faddp
repnz
iret
mov
andb
mov
ss
mov
add
xorl
loope
fimuls
repz
sbb
cmovno
iret
jne
data16
sahf
sub
sbb
fnstcw
mov
mov
pop
mov
xchg
add
popf
xor
pop
push
roll
push
xorl
ljmp
adc
pop
ret
dec
mov
or
pushf
scas
mov
pop
fld
sbb
mov
je
jne
repz
push
jmp
xchg
cld
push
push
sbb
push
aaa
push
aad
fwait
jp
lods
std
arpl
and
mov
xlat
and
push
mov
push
push
sub
cmp
popf
popf
pop
les
jge
icebp
outsb
testb
xor
outsb
pop
dec
iret
xchg
cs
push
dec
int
or
mov
sub
in
sbb
jae
sbb
inc
mov
jne
imul
ja
icebp
mov
lods
or
sbb
js
pop
or
xor
aam
lcall
add
sbbb
aad
sbb
or
push
mov
jecxz
add
loopne
xlat
les
mov
fistpl
add
ret
repz
push
or
sar
ja
orb
ret
mov
adc
push
inc
mov
pushf
call
ds
dec
jle
mov
mov
aaa
jl
mov
add
orl
sbb
cli
dec
hlt
xlat
pushf
out
inc
xor
jne
adc
ja
mov
xor
pop
dec
test
test
inc
fucom
dec
sub
mov
cmp
push
call
jecxz
add
mov
stc
mov
add
add
hlt
sub
or
shl
pop
jg
or
mov
in
add
pop
push
push
jmp
push
dec
mov
cmpsb
repz
lret
and
mov
inc
pop
cmp
aam
hlt
scas
or
fwait
std
or
out
push
inc
cmp
mov
jne
cli
push
xor
fwait
inc
jge
push
outsl
ret
push
push
stc
mov
pop
jp
aad
loopne
push
and
addb
adc
mov
rorb
nop
je
rcrl
jno
lahf
lret
repz
in
pop
cmp
sbb
int
and
add
adc
xor
xchg
xor
xor
xchg
arpl
ljmp
pop
popa
mov
inc
jae
popa
lret
jbe
jge
xor
push
insl
les
or
sbb
jb
pop
addr16
stos
fcoms
mov
xchg
in
repz
adc
clc
into
adc
xor
inc
fimuls
in
das
adc
add
inc
daa
lods
lret
inc
outsb
push
mov
stc
or
pop
adc
clc
cmp
cli
pop
sbb
and
jbe
xor
cmpsb
pop
add
xlat
dec
xor
sbb
mov
ret
push
mov
dec
adc
out
jmp
inc
sbbl
mov
xor
and
fildll
adc
adcb
in
call
cmp
divb
add
jecxz
ficompl
jnp
xchg
mov
sbb
mov
or
inc
ja
xchg
pop
push
mov
mov
scas
and
mov
inc
stos
mov
ja
lods
mov
pop
pop
stos
jbe
inc
mov
mov
fnstenv
cltd
lods
loopne
pop
dec
mov
fidivrs
lea
adc
mov
or
lcall
push
jmp
push
push
inc
cmpb
fcoml
mov
das
and
and
sub
adc
mov
out
scas
inc
testb
loopne
aas
jecxz
int
push
scas
and
into
cwtl
rcr
mov
lret
push
minps
xchg
xchg
mov
cmc
push
push
data16
mov
ja
cmp
and
cltd
int
mov
add
loope
cmp
sub
mov
sub
adc
pop
fsubrs
andb
xlat
hlt
repz
or
mov
out
dec
pop
imul
adc
mov
push
repz
stos
mov
cwtl
xlat
rcll
js
mov
stos
and
in
jge
in
push
mov
out
int
lods
sbb
push
shl
add
jnp
mov
stos
or
ret
sub
gs
scas
push
daa
hlt
mov
push
addl
out
das
idivb
cltd
aam
mov
xchg
enter
lds
pop
in
sbb
mov
aas
outsl
xor
push
imul
data16
test
call
mov
movsb
mov
sub
sti
push
mov
inc
in
xchg
jp
dec
test
jne
add
in
inc
mov
ljmp
push
cmpsb
clc
mull
mov
fscale
xchg
fstpl
int
jno
xchg
das
rol
sbb
test
jle,pn
and
movsl
mov
cmc
repnz
inc
inc
cltd
jl
cmp
fwait
add
sub
pushf
push
shlb
sbb
out
mov
add
leave
stc
pop
leave
xor
fidivl
ret
push
pop
paddsb
add
or
sahf
mov
out
jo
stos
mov
cli
sarl
arpl
in
js
inc
iret
pop
and
dec
push
mov
pop
mov
dec
inc
push
in
mov
insb
fucomip
std
mov
push
mov
loopne
roll
jbe
out
xchg
adc
cltd
mov
push
addl
gs
xor
xor
shlb
out
bound
int3
sbb
or
notl
mov
hlt
adc
cmp
dec
mov
cmpsb
test
add
mov
pop
ds
shl
push
scas
roll
js
or
adc
adc
shl
add
dec
inc
roll
gs
mov
xor
shl
inc
movsb
js
dec
scas
loop
dec
jge
notl
cli
and
and
xchg
pop
cltd
cwtl
adc
push
repnz
je
sbb
scas
and
loopne
pop
in
test
arpl
les
cmc
jecxz
cmp
and
lret
sbb
testb
xchg
pop
xor
in
mov
stc
or
mov
push
lods
mov
daa
mov
jne
hlt
aad
sti
lods
lcall
mov
mov
inc
fdivr
and
jmp
ss
decl
mov
fs
xchg
adc
mov
popf
jp
cmp
sub
sahf
push
mov
and
xor
repnz
inc
test
mov
jnp
jle
clc
movsb
inc
mov
inc
sub
int
jns
push
bnd
jo
fstps
mov
aas
test
bound
pop
pushf
mov
jne
leave
mov
data16
lea
popf
dec
das
jl
sub
pushf
aaa
sbb
push
clc
sub
xchg
mov
jge
add
lahf
and
ror
fldcw
adc
cmp
ljmp
jge
cmp
fildl
ret
adc
add
pop
sbb
add
xchg
test
popf
pop
adcl
mov
into
ret
in
ljmp
sub
rorb
dec
xor
inc
xchg
gs
int
pop
ret
out
xorl
aaa
and
movsb
lods
xor
inc
add
test
adc
xor
mov
and
mov
jmp
add
mov
pop
scas
enter
call
mov
mov
jne
inc
xchg
cmp
test
arpl
jne
or
adc
aaa
pop
aam
jns
jg
or
jg
add
xchg
mov
std
sub
adc
sbb
inc
push
cwtl
or
insb
adc
mov
dec
mul
and
cmp
mov
cs
ret
mov
sar
jae
sub
sbb
arpl
out
nop
adc
into
and
leave
dec
insl
not
push
adc
sbb
enter
mov
nop
hlt
push
jmp
mov
cmp
and
nop
cmpl
push
mov
and
pop
sub
mov
add
imul
std
jne
inc
cmp
inc
adc
iret
das
dec
dec
daa
lret
in
mov
push
lods
lcall
sbb
adc
cmc
call
arpl
inc
ds
dec
push
mov
out
pushf
jp
push
push
pusha
jae
pop
jae
dec
push
xorl
inc
xchg
xchg
adc
add
lret
in
mov
mov
iret
mov
pop
jle
push
popf
pop
pushf
in
pop
enter
test
imul
ss
in
fcompl
push
pop
fisttpll
sub
repz
pop
xlat
loopne
sbb
push
fwait
cli
mov
xchg
negb
adc
aas
imul
imul
arpl
mov
push
adc
lock
push
int
cmp
fisttpll
rorl
sub
sti
push
pop
mov
adc
adc
cmc
add
jne
leave
sbbb
mov
ja
pop
push
ljmp
xorb
push
inc
jno
mov
add
sub
cwtl
or
rorb
les
and
in
mov
inc
jl
lock
ret
vmptrst
out
and
fisttps
pushl
mov
xor
fists
add
inc
pop
popfw
insl
adc
or
popa
and
or
or
shrb
movsb
jne
lock
psrlq
push
mov
test
arpl
xor
cmp
add
clc
push
xchg
sarl
es
pop
sub
xor
cwtl
enter
pop
outsl
stos
pop
cmpsl
add
cmp
ret
or
dec
jp
test
mov
cmc
data16
mov
test
dec
pop
sbbb
sbb
loop
mulb
int
das
add
mov
fst
adc
out
in
int
or
jle
mov
adc
pop
pop
decb
lret
aaa
mov
pop
test
dec
dec
inc
loop
add
fstpt
or
pop
clc
mov
sbb
jg
mov
pushw
jecxz
hlt
lods
add
insl
mov
add
jge
adc
lcall
inc
jae
push
test
fnstenv
xlat
test
mov
pop
jae
adc
adc
iret
out
addr16
inc
movb
jb
iret
in
dec
movsb
xorb
dec
test
push
mov
mov
jnp
sub
push
leave
mov
add
mov
int3
sub
jb
or
ds
scas
push
adc
cmp
mov
adc
cmp
dec
push
or
mov
mov
sar
aas
inc
popa
xor
xor
mov
and
pop
std
adc
mov
adc
scas
jmp
cld
jmp
aad
push
sub
and
cmpb
lret
xchg
dec
rcll
or
mul
lods
mov
orb
dec
mov
mov
mov
sub
mov
stc
nop
scas
stc
orl
add
inc
mov
out
scas
dec
push
js
movsl
popa
popf
dec
movsl
sahf
dec
aaa
jb
mov
popa
or
add
ljmp
loopne
mov
push
mov
cmpsl
xor
push
xlat
mov
cmc
movsl
jnp
ds
scas
sbb
mov
pop
pop
cmc
negl
mov
sbb
jg
cltd
ret
orl
sub
jns
and
xor
mov
xchg
repnz
aas
dec
leave
xor
cmc
mov
jge
xchg
movsb
pop
mov
leave
pop
out
lods
mov
frstor
jb
pop
jmp
and
incl
sub
icebp
bound
mov
pop
cmp
sti
lods
mov
add
frstor
pop
add
clc
jmp
test
cltd
mov
push
fiadds
mov
cltd
mov
je
sub
push
call
jle
in
flds
add
cld
pop
sub
mov
das
fdivrs
mov
push
clc
popw
fst
xor
jbe
sbb
inc
push
in
sahf
test
and
sbb
add
in
jecxz
je
jl
les
jae
dec
clc
mov
shrb
xchg
or
lret
int
scas
sbb
xchg
js
pop
scas
fwait
sub
add
sti
xchg
add
push
or
push
fcompl
push
xchg
sub
xor
xchg
lock
pop
pop
out
lret
pop
nop
xor
push
mov
mov
dec
shrl
xchg
lods
stc
pop
nop
sbb
and
mov
stc
ss
mov
jg
popl
pusha
and
push
mov
ljmp
add
mov
mov
in
xor
test
scas
mov
and
jl
inc
jecxz
incl
mov
push
mov
cmp
xor
xlat
mov
xor
in
pusha
sub
pop
and
jo
andb
aas
mov
adc
mov
mov
xchg
sub
or
inc
push
imul
mov
out
cmovae
jle
fdiv
push
inc
sti
jo
cli
push
mov
pop
in
xor
ss
mov
or
adc
xor
add
fs
dec
andl
pop
add
mov
out
sti
ret
insl
cli
fsubrl
mov
dec
imul
test
dec
and
add
int
push
xchg
or
or
mov
xor
sub
xor
and
add
mov
xchg
mov
in
and
pop
xchg
mov
xchg
sbb
or
xchg
jp
push
mov
cmpsb
cs
pop
call
pop
add
das
jmp
arpl
loope
inc
xchg
fsubrl
std
mov
sbb
inc
lahf
imul
lods
adc
out
sub
pop
mov
jp
int3
jge
jg
dec
cwtl
push
sub
mov
jne
push
cld
inc
push
xchg
sbb
data16
into
ret
fists
les
mov
sbb
cmp
or
xchg
jg
xchg
jns
andb
jae
add
btc
pop
loop
add
adc
aad
sub
inc
sub
push
mov
rcrb
jge
dec
and
dec
mov
mov
repnz
das
add
push
jle
adc
pop
xor
mov
fsub
jno
aas
add
xchg
jae
subb
lock
scas
aam
scas
and
les
outsl
cmpps
pop
cld
push
test
clc
fiadds
insb
fsubl
ljmp
mov
outsb
jl
or
xchg
xor
repz
adc
mov
pop
and
stos
push
inc
cmp
stos
dec
or
arpl
imul
hlt
sub
popa
dec
inc
sbb
and
fists
adc
fistps
cwtl
jo
push
lea
mov
in
xor
jns
mov
jo
sub
pop
fstpl
sub
jp
push
add
mov
lcall
xor
xchg
push
leave
movq
pop
add
sbb
sub
jle
pop
cmp
lds
shrl
je,pt
adcl
movsl
sbb
push
es
cmp
loope
xchg
jge
ret
decb
xchg
jl
hlt
out
mov
cmp
jno
lods
mov
push
mov
imulb
pop
cmp
aaa
aam
mov
int3
adc
outsb
das
aaa
in
fnstsw
xchg
dec
or
hlt
out
out
pop
sti
mov
lds
test
push
int
jmp
icebp
icebp
stos
sbb
inc
adc
adc
cmp
subl
and
les
jne
inc
leave
out
addps
inc
add
lret
push
sub
gs
in
pop
push
cmp
scas
les
dec
fists
lds
cmp
ficoms
inc
imul
or
cs
jns
add
stos
sbb
fnstsw
int3
dec
fimuls
loop
sbb
je
push
lahf
int
cmpsl
xchg
sbb
in
cmpsb
jl
sbbb
push
or
aaa
sub
icebp
sub
jno
xchg
inc
mov
mov
sbb
out
xchg
cmp
dec
popf
nop
dec
icebp
adc
rcl
gs
pusha
mov
test
sub
dec
out
pushf
sarb
and
dec
sbb
mov
push
xor
add
jecxz
lock
xchg
lcall
sbb
imul
hlt
mov
les
push
jno
and
dec
cli
fists
int3
shl
pushf
xchg
jle
adc
push
rcl
inc
add
lret
sub
or
xor
xlat
pop
ret
pop
cmp
jp
enter
jecxz
daa
lods
sbb
cld
pop
pop
pop
cwtl
jp
pop
out
data16
jbe
xchg
sub
mov
push
popa
ja,pn
addr16
inc
adc
pop
xchg
pop
ret
rol
push
mov
push
fstl
arpl
loop
mov
test
mov
testl
xchg
adc
push
jns,pn
insl
mov
jecxz
es
bound
call
mov
sbb
js
pop
push
rcrl
addl
add
mov
dec
cli
jb
enter
fcoms
sbb
mov
aam
sarl
adc
push
mov
add
out
add
daa
xchg
rclb
loopne
fwait
orb
adc
push
lea
roll
sbb
mov
in
in
scas
sub
stc
std
aad
sub
or
jmp
sub
adc
cmp
sti
mov
or
movsb
or
cld
add
inc
pop
mov
cmp
fsub
pushf
mov
gs
jne
sbb
lahf
push
adc
mov
and
clc
pop
jae
jb
lods
xor
add
add
cmp
cmc
subb
sub
mov
add
mov
mov
xchg
pop
imull
int3
mov
shl
jge
aad
popf
mov
sbb
mov
jno
movb
mov
cltd
adc
xchg
incb
stos
lret
push
jb
cmp
lock
sbb
outsl
adc
xor
clc
mov
fsubs
xor
movsl
test
test
clc
scas
add
flds
pop
fwait
jecxz
pop
movsl
pushf
out
mov
les
shlb
cmp
pop
jg
sub
or
cli
adc
jle
popa
jns
dec
lret
mov
sbb
in
adc
ja
inc
out
loope
add
sub
ljmp
xchg
popa
dec
outsl
sbb
mov
mov
repnz
sbb
scas
repz
mov
ret
jo
inc
xchg
mov
int3
loope
sbb
mov
sub
sub
xchg
data16
adc
sbb
xchg
mov
mov
adc
es
sbb
loope
push
bound
jmp
icebp
inc
jl
sbbl
daa
jns
jne
sub
jb
cli
ss
push
jb
and
adc
lock
cltd
iret
sbb
pop
rcrl
and
inc
cld
shll
sub
imul
jmp
daa
jo
stc
xor
xor
mov
cmp
sbb
inc
movsl
sub
lret
int3
insl
test
mov
into
fucomp
les
shll
mov
dec
xchg
inc
call
test
dec
xlat
dec
mov
int
pop
mov
test
imul
push
pop
xor
cmpsb
imul
cmp
aam
pop
pushf
das
add
call
dec
fldenv
xchg
pop
add
gs
test
shrl
add
dec
mov
mov
imul
scas
das
push
shll
jle
xchg
dec
xorl
arpl
je
mov
and
inc
dec
bound
mov
jge
lret
sub
xor
pop
dec
inc
xchg
addl
or
cmp
out
adc
leave
xchg
jb
test
js
movsl
sahf
and
stos
fstps
cmpsb
cmpsb
into
dec
jbe
dec
pop
roll
cmpl
push
jne
repz
push
mov
pop
out
push
enter
xor
pop
sbb
pop
sub
cmp
mov
popf
add
ljmp
rol
xor
push
dec
pop
out
push
push
outsl
mov
adc
sub
dec
xchg
fldcw
pop
mov
outsb
xchg
movsl
test
out
subl
rclb
jl
xor
push
mov
xchg
scas
mov
orl
cld
aas
add
or
pop
add
jb
mov
sahf
add
jno
iret
xor
sbb
cmp
add
cltd
or
movsb
insb
adc
fcompl
jp
clc
and
cmp
inc
xchg
cli
test
arpl
mov
cltd
iret
xchg
push
xor
fnstsw
sti
mov
into
push
pop
cmp
inc
jmp
mov
pop
loope
or
fisubl
cmp
ljmp
arpl
iret
loop
inc
mov
adc
and
arpl
xorl
mov
inc
stc
lahf
and
fistps
test
mov
cli
and
sbb
jne
xor
mov
mov
cwtl
and
jecxz
sbb
cmp
cli
pop
pop
lock
dec
arpl
sub
pushf
lods
pop
sbb
hlt
test
lahf
sbb
mov
in
inc
inc
jecxz
push
jno
inc
add
mov
mov
mov
sarl
xchg
inc
je
mov
xchg
bound
addr16
outsb
inc
pop
add
push
sbb
fsub
inc
push
xor
cmpsl
leave
dec
add
and
jo
leave
sahf
xchg
sub
adc
dec
testl
add
cld
repnz
push
lea
pop
sarl
mov
fisubrs
pop
dec
jo
insb
xchg
out
inc
jnp
xchg
lock
les
sub
cmp
xlat
add
sbb
cld
adc
into
inc
aaa
out
pop
lcall
adc
insl
or
or
dec
lret
push
lcall
pop
jecxz
pop
sbb
xor
out
sub
std
jl,pn
mov
mov
sarb
cmp
xchg
popa
jnp
jb
fs
cli
insb
es
jbe
std
test
push
mov
push
mov
push
js
mov
repz
cmp
jb
scas
push
mov
sbb
xor
faddp
ret
aad
inc
sub
xor
subb
push
mov
cmp
xor
mov
int3
cli
into
jp
push
and
and
inc
test
imul
out
push
push
xorb
in
ja
lcall
stc
jbe
insb
sub
mov
lret
mov
in
cmp
fdivr
repz
or
jg
pop
out
cli
jl
outsl
lret
daa
loop
mov
call
daa
fcoml
test
sub
mov
out
or
jo
push
dec
xlat
or
inc
push
insl
loope
xor
imul
and
fwait
insl
add
pop
jg
dec
sbb
sub
fidivs
inc
fsubr
sbb
test
inc
push
jecxz
jno
cli
pop
or
movl
xchg
clc
mov
inc
in
xor
aas
cmp
popf
je
sub
aad
xchg
test
data16
psubsw
add
lea
imul
jns
push
xchg
xchg
in
xchg
insl
mov
rolb
push
out
imul
cmc
fidivrs
jecxz
cmp
xchg
jns
dec
repnz
test
imul
loopne
pop
into
std
pop
jp
aam
push
test
mov
xchg
lahf
sbb
mov
into
test
xor
dec
jl
jecxz
xchg
les
stos
mov
inc
stos
mov
dec
outsb
xchg
push
add
xchg
ret
xchg
arpl
sbb
jle
mov
mov
dec
enter
jae
xchg
push
sbb
stc
adc
dec
and
stos
in
outsl
mov
and
cmpsb
test
xor
xor
ret
mov
gs
sub
ljmp
stc
outsl
or
mov
fnstcw
movsl
or
insb
inc
inc
sti
jbe
ja
lret
es
shlb
jle
es
rcr
add
jle
divl
aad
add
mov
mov
push
add
fxam
scas
jo
into
jnp
out
lods
loope
mov
xchg
xor
cltd
xlat
je
mov
or
push
sub
ret
jo
add
fbstp
jecxz
mov
je
lea
aaa
imul
add
mov
mov
xlat
jecxz
add
out
jo
lock
test
jno
sub
inc
sbbb
inc
aas
add
and
sbb
mul
rclb
rorl
popf
lcall
shll
mov
je
pop
jne
pop
icebp
mov
insb
mov
sahf
jp
add
pop
rol
ficoms
shll
jmp
mov
mov
dec
cmp
aaa
test
push
xchg
divl
jo
adc
jle
inc
xlat
iret
xchg
add
loopne
repnz
aas
out
and
and
pop
sbb
imull
imul
popa
mov
rcl
cs
scas
jnp
cmpsb
iret
mov
movsb
sbb
xchg
cmp
mov
dec
mov
movsl
mov
repz
mov
stos
fwait
dec
mov
out
push
cld
mov
mov
inc
push
mov
out
jnp
push
jns
xchg
out
shld
mov
mov
mov
lods
jnp
pop
lret
push
dec
js
add
lds
pop
mov
ror
test
or
arpl
leave
lods
adc
lock
adc
add
lea
gs
fists
test
fcmovnb
mov
seto
push
test
xchg
ret
mov
jmp
arpl
xchg
inc
sti
int
pop
repz
adcb
and
inc
cmp
cmc
xchg
out
push
out
jbe
add
dec
mov
lods
mov
cmp
push
inc
lcall
or
sub
or
pop
mov
xlat
dec
push
loop
xchg
sub
inc
cli
lea
sub
scas
inc
dec
jp
jo
cmp
xchg
inc
push
les
adc
cli
mov
mov
pop
or
xchg
mov
pop
sub
push
fadds
dec
add
add
pushf
and
out
jo
push
inc
push
movsb
mov
sbb
insb
jge
pusha
and
jbe
int3
cmp
cld
movsl
test
fisttps
notl
xor
mov
aam
roll
pop
fmul
jecxz
pop
leave
loope
push
cmpb
loopne
and
lcall
jb
pop
pop
jb
das
int
mov
stos
mov
lods
or
fwait
cwtl
mov
rolb
imul
in
xor
sahf
es
xchg
push
loop
sbb
xor
lret
cmp
popf
xchg
mov
mov
testb
dec
aas
inc
inc
ds
rclb
jmp
bndldx
cs
leave
lea
and
adcb
adcb
ret
mov
add
iret
imul
jge
push
popa
sbb
push
jg
in
inc
inc
imul
jle
adc
mov
aaa
cmp
test
lcall
inc
dec
dec
jp
clc
add
push
inc
push
les
mov
lret
enter
cwtl
in
dec
dec
stos
and
jmp
arpl
daa
cmp
xor
or
xchg
loopne
mov
push
ret
jnp
xor
js
inc
sub
call
add
pop
pop
xchg
jge
mov
sarl
pop
les
mov
popa
cmp
pushf
in
xchg
out
sahf
inc
xchg
repnz
aad
or
out
cltd
fsubp
add
push
inc
pop
icebp
pop
or
dec
adc
push
js
inc
sarb
call
insl
out
and
ffreep
add
popf
xchg
leave
mov
ret
shl
xchg
xor
mov
scas
out
or
sub
xor
inc
int3
pop
lcall
sub
cmp
jnp
xor
or
mov
ror
mov
xchg
rcr
sbb
pop
mov
imul
or
push
adc
add
cwtl
mov
cmp
xor
and
sbb
jg
cltd
lret
sub
movsl
mov
push
cmp
or
movb
bound
dec
aam
inc
xchg
js
cwtl
xor
shrb
rcll
xor
stos
stos
filds
sbb
pop
dec
push
movsl
lods
and
jp
add
imul
fwait
jmp
pop
cwtl
inc
pop
jmp
and
cli
dec
push
jnp
jno
cmp
lcall
and
sti
mov
dec
lds
jbe
mov
mov
outsb
insl
ss
pop
mov
sbb
dec
repz
push
sarl
and
mov
je
js
cmp
or
repnz
or
push
pusha
dec
pop
dec
mov
sub
pushf
jp
bound
mov
out
jp
lock
pop
insl
out
sub
jle
ds
pusha
cwtl
mov
mov
out
inc
fdivrs
sub
inc
inc
push
sbb
ficoml
je
stc
mov
imul
add
mov
pop
outsb
lods
test
stos
inc
cltd
sbb
out
push
sahf
fisubrs
sahf
out
dec
out
jae
sbb
dec
sub
dec
test
ljmp
cmp
bound
ljmp
mov
xchg
inc
lds
loopne
jle
sbb
aam
mov
xor
negb
ljmp
lcall
call
rorb
aas
jno
lods
jmp
dec
sbb
outsl
sbb
or
mov
maxps
sbb
inc
push
in
jg
push
out
xor
shr
out
std
push
ret
jg
fisttpll
mov
xchg
loopne
dec
sub
dec
fldz
ret
dec
bound
subl
out
mov
outsb
xor
mov
cmp
fisubs
xchg
daa
sti
data16
les
lods
out
pop
stos
jae
pop
xchg
fcomip
imul
mov
cmp
xchg
dec
lock
movsl
jle
pop
insb
imul
push
inc
adc
adc
testb
mov
sub
aaa
xchg
sub
sbb
inc
xchg
dec
cmp
xor
fdivrl
mov
fwait
aad
arpl
inc
jnp
add
dec
stos
je
lret
enter
movsl
enter
add
imul
shr
xchg
orb
inc
int3
scas
jmp
fsts
dec
into
arpl
xchg
ss
fld
repnz
repnz
jb
fidivrl
shr
enter
jbe
arpl
roll
repnz
in
and
push
jmp
daa
mov
dec
lods
rorl
push
push
pop
and
cmc
adc
mov
cwtl
xchg
scas
push
dec
push
insl
cmp
add
cmp
push
aad
push
cli
cmc
fwait
mov
dec
aam
and
test
jmp
test
repz
test
cmp
out
adc
scas
sbb
mov
cmp
iret
pop
xchg
add
lea
push
inc
inc
dec
scas
mov
mov
imul
fistpll
subl
repz
jge
shrl
sti
xchg
loop
movsb
or
push
sbb
sarl
lock
shlb
orl
add
jecxz,pt
lea
xchg
push
ret
add
push
insl
jmp
mov
out
push
cld
das
jnp
and
mov
fistps
rorb
mov
add
sub
dec
pop
mov
aam
pop
push
lods
ljmp
adc
imul
popf
pop
mov
filds
push
sarl
outsl
push
cmp
mov
aaa
inc
js
aas
mov
rcrl
hlt
lods
jmp
jl
jle
ja
out
lret
in
mov
or
sub
inc
js
sub
icebp
andl
pop
insl
mov
loop
xchg
cld
push
in
push
jbe
cld
jge
mov
loope
or
cmp
pop
cmc
movsl
lods
stos
pop
cmp
or
insl
mov
stc
dec
lret
dec
sti
dec
das
mov
cmp
stc
in
mov
aaa
stos
mov
push
je
repnz
dec
rolb
sbb
ret
mov
add
shlb
xor
pop
std
mov
xchg
and
jb
cs
int
imul
into
cs
arpl
and
in
sbb
sub
jo
or
mov
js
loopne
add
aad
or
rorl
add
mov
jge
ds
ja
jno
xlat
dec
fadds
jecxz
fs
push
jg
adc
imul
andb
outsl
and
sbb
sbb
xchg
and
lods
scas
or
inc
mov
icebp
push
mov
jl
sub
mov
xchg
iret
inc
mov
push
cmpsl
imul
cld
popa
pop
push
shlb
push
js
xlat
jmp
cmp
lds
enter
sbb
addb
lcall
xor
pop
pop
test
js
pop
testb
mov
xor
cli
jae
xchg
in
daa
sbb
inc
xchg
ss
mov
dec
lcall
push
jg
sub
out
xor
jp
jmp
js
jns
mov
aad
sahf
arpl
repz
mov
jle
int3
sbb
inc
mov
repz
repnz
jb
lret
add
lcall
aad
in
fnstcw
in
lods
jecxz
lods
stos
fnsave
push
fistps
sbb
rep
idivl
xor
fidivrl
pop
pop
or
mov
out
pop
lret
xchg
mov
lcall
cld
pusha
mov
mov
xor
orl
aas
clc
mov
sbb
dec
push
enter
jnp
mov
roll
sbb
ficomps
ret
fsubr
push
dec
jmp
mov
addr16
lods
int3
jl
fmuls
sbb
inc
sti
sbb
lock
mov
inc
test
js
sub
cmpsb
movsl
aaa
movsb
xor
mov
mov
sub
ror
dec
jg
push
sub
into
fsubs
xor
sahf
push
inc
fildl
stc
in
mov
and
xchg
mov
add
sarb
pop
lcall
in
push
mov
movsb
inc
and
jge
jbe
repnz
sub
loopne
fsts
pop
icebp
in
pusha
das
gs
cmpsb
mov
add
jo
stos
sub
bound
xor
push
mov
not
xchg
sbbb
aas
stos
sub
mov
adc
sar
js
mov
pop
rcll
imul
mov
adc
je
outsb
sbb
loope
aam
fisubrs
mov
movsl
lods
in
ss
pop
sbb
push
dec
adc
sub
lds
iret
sub
jns
mov
fs
adc
cmp
push
sbb
imul
out
adc
push
jae
mov
xchg
scas
push
inc
cmp
std
inc
inc
ficoms
dec
loop
dec
push
insl
es
inc
enter
fnsave
add
dec
cmp
jno
mov
faddp
mov
sahf
jl
xchg
ds
pop
mov
cmp
adc
pop
mov
dec
pop
es
adc
outsl
jns
pusha
push
cmp
dec
out
repnz
daa
cli
or
adc
pop
sub
ss
add
nop
xchg
data16
inc
fldl
fs
xor
mov
pop
mov
sti
inc
or
and
xchg
and
pop
dec
mov
push
jb
iret
and
push
dec
fstpl
pop
nop
orb
aaa
ror
sbb
lcall
push
pop
mov
xor
out
xor
das
fs
cmpsb
inc
iret
cmp
in
out
adc
out
cmpsb
aad
mov
push
jne
pop
lods
dec
into
cmp
stos
outsb
mov
cs
cmp
das
es
lds
jne
mov
addb
mov
pusha
stc
aad
mov
dec
and
cld
jbe
iret
movsb
data16
repnz
push
aas
popa
mov
mov
fsub
mov
pop
jg
hlt
add
or
jnp
cmpsl
stc
cli
testb
mov
js
stc
xchg
cmp
sti
add
jns
shlb
sbb
dec
test
sti
cmpsl
adc
loope
fs
adc
lods
lret
or
sub
je
mov
popa
jnp
pop
stos
push
pop
in
not
jmp
pop
xchg
mov
mov
ret
int3
lahf
stc
test
dec
jb
inc
clc
xchg
dec
test
ffreep
cmpsb
pop
cld
push
xchg
aam
sbb
push
bound
out
or
lret
out
arpl
das
pop
push
subl
mov
pop
cmp
push
mov
cwtl
lods
xchg
mov
int3
hlt
out
mov
mov
and
addb
data16
jno
popf
incl
dec
daa
ficoms
mov
jne
aad
loop
stos
in
xchg
out
out
pushf
push
roll
inc
ret
lds
sub
sbb
mov
cmp
or
fsts
insb
cmp
xor
rorb
js
pop
test
mov
int3
adc
jmp
dec
xchg
ret
div
inc
adc
xor
pop
das
mov
mov
xchg
int
jae
add
repnz
pop
data16
adc
mov
cs
dec
cmp
adc
lahf
jge
es
mov
out
mov
jmp
nop
cmp
aad
mov
push
jmp
inc
ss
xchg
jne
movsb
mov
xchg
insl
cwtl
popf
sub
xchg
push
inc
js
ja
mov
mov
fsub
aam
push
push
fisubrs
push
pop
sbb
add
jae
jne
mov
cli
imul
mov
bswap
inc
lahf
push
push
shl
and
add
aad
mov
xchg
mov
setg
mov
or
lock
nop
loope
mov
xchg
pop
fdiv
insl
jg
push
xchg
lds
pop
stos
ret
cs
push
out
rorb
loop
aam
mov
fwait
jo
cmp
lods
jmp
and
shlb
pop
bound
sub
pop
mov
mov
and
fldl
xor
or
idivb
lock
add
je
fsub
nop
mov
pop
out
loope
pop
in
sub
insl
lods
xor
int3
jns
add
repnz
xchg
sbb
test
xor
sbb
pushf
jb
and
xor
shl
ja
dec
push
pop
push
pop
pop
aaa
lods
outsb
push
aas
jo
sbb
adc
push
insl
popa
mov
in
inc
fwait
in
cmp
repnz
mov
add
filds
les
xor
scas
cs
shrl
pop
imul
sub
movsl
lds
das
sbb
add
add
mov
dec
ds
cmpl
mov
sbb
sub
cmc
xchg
mov
clc
js
jecxz
shll
jmp
mov
cs
imul
lret
dec
and
out
addr16
push
in
inc
das
popa
bound
cmp
mov
push
rcl
dec
xchg
add
sub
mov
je
inc
testb
pop
je
fwait
ret
sub
fisubs
cmp
ja
xchg
lret
add
xchg
sbb
fadd
or
outsb
test
rclb
idivb
cltd
repz
ja
imulb
sbb
sub
inc
dec
bound
cmpl
pop
inc
test
cmpb
mov
imul
or
pushf
mov
pop
push
mov
shlb
pop
test
hlt
sub
adc
addr16
lods
sbb
shlb
lahf
cld
xchg
dec
and
mov
aas
stos
cmpsl
lahf
sahf
pop
sbb
lret
incl
xchg
jns
jle
dec
push
cmp
sbb
fisttpl
int3
sub
adc
test
mov
int
push
push
jne
ss
push
lock
ret
sbbb
push
data16
or
adc
sbb
sbbl
push
test
mov
mov
lods
jo
bound
sub
xlat
pop
push
outsl
je
movsb
push
jb
pop
loope
dec
jmp
lret
hlt
das
subb
pop
xchg
push
iret
pmuludq
cmpsl
loopne
les
fwait
mov
jbe
outsl
out
xor
aas
shr
sub
jnp
pop
cwtl
movsb
out
stos
xor
and
pop
data16
xor
shl
or
xchg
arpl
js
sahf
mov
jno
movsl
adc
adc
ljmp
cmpsb
aas
mov
jnp
dec
push
cmp
sbb
iret
ja
lods
push
xchg
mov
gs
add
or
int
sub
xlat
fmull
jo
arpl
fnsave
cmp
pop
xorl
jmp
cmp
xchg
cmp
mov
push
mov
jno
push
cmp
scas
sahf
outsb
jb
xor
push
sub
sub
in
push
or
lret
cli
jl
xchg
mov
fcoms
ret
loop
pop
mov
and
mov
mov
fwait
ror
loope
lock
imul
test
jns
test
test
sahf
addr16
and
lret
lcall
es
sub
ds
or
jp
push
and
rcl
sbb
fisttps
mov
dec
cs
cmp
mov
ljmp
stos
inc
cmp
push
dec
xor
push
cmp
pop
sahf
ret
adc
xchg
rclb
or
jne
cmp
mov
xchg
add
mov
sbb
jne
adc
jg
mov
ja
lods
or
lods
aad
adc
or
push
rcrl
mov
fisubrl
push
sub
or
mov
repz
std
sbb
lock
sbb
call
mov
adc
inc
mov
dec
pushf
jg
cwtl
arpl
sti
outsb
movsl
jne
cld
xchg
cmp
add
cmpsl
aaa
push
addl
push
inc
hlt
push
lock
insl
adc
aas
xor
fstl
push
push
out
sti
repz
jmp
add
daa
aad
or
out
fimuls
sbb
cli
and
jecxz
iret
jo
loope
mov
add
mov
jge
in
sbb
mov
outsl
xor
test
adc
outsl
andb
inc
and
ret
inc
jmp
fdivrl
push
xchg
xor
outsb
ficoml
dec
xor
stos
and
out
ret
xchg
iret
je
push
mov
cmp
ljmp
lock
jnp
ds
outsl
or
fwait
mov
std
jp
xchg
and
xchg
std
add
clc
ficomps
negl
push
bswap
adcl
bound
aam
test
outsl
push
aaa
test
dec
in
pop
push
adc
aas
jecxz
xor
or
addr16
jno
push
xlat
jns
dec
aas
add
addr16
fwait
and
movsl
mov
add
dec
mov
ja
ja
dec
mov
shll
out
adc
shr
cmp
xor
jb
repnz
cli
mov
popf
pop
cli
or
mov
add
pop
fnstenv
xchg
push
aas
jno
sbb
jbe
cli
or
sub
lea
clc
and
cmpl
xchg
push
jne
xor
aad
icebp
cmp
movups
inc
rcr
add
fbstp
paddb
push
push
jmp
xchg
sub
xor
int
repnz
push
adc
inc
stc
push
pop
lock
sub
in
xor
inc
out
test
fsubrs
push
nop
xor
dec
cmp
and
xor
arpl
pop
jl
jle
pushf
fisubs
std
lds
into
nop
orl
movsb
adc
js
popa
arpl
mov
sahf
inc
fsts
mov
lods
fwait
sub
sbb
push
mov
ret
cmpl
lods
dec
xor
fsubr
jmp
jae
fimull
sub
cmp
mov
es
hlt
cld
mov
jns
test
mov
xchg
int
push
cmp
sbb
leave
inc
sub
mov
ja
or
push
push
cmp
jbe
xchg
push
jns
outsl
sub
clc
rcll
or
cs
repnz
notb
pop
xor
xor
sahf
mov
test
mov
movsb
mov
test
pop
jne
xor
inc
std
jb
jp
push
stos
lret
mov
cmpsb
mov
jecxz
shl
add
in
lods
and
mov
jecxz
mov
shlb
add
xor
sbb
or
push
testb
fwait
les
or
mov
enter
mov
inc
pop
shl
bound
popf
adc
sbb
jle
enter
cwtl
mov
adc
ds
adc
xchg
repnz
je
imul
sub
xchg
xchg
addl
enter
sub
imul
and
pop
mov
and
divl
mov
mov
and
imul
adc
sti
dec
or
xor
in
cmp
js
mov
mov
das
sub
cmpsb
in
jno
mov
flds
jl
fldl
cld
imul
fldenv
out
mov
or
push
in
xchg
sub
cmpsb
call
divb
shl
jno
loopne
aaa
mov
jmp
inc
iret
int3
jmp
sub
xchg
xchg
sbbb
arpl
lahf
repz
xchg
ljmp
xor
cld
add
dec
repnz
in
pop
adc
orl
push
jg
lods
push
xor
jbe
adc
inc
pop
mov
hlt
or
adc
test
stc
popf
ss
arpl
and
and
add
push
sub
fsubp
push
clc
fucom
jp
or
ljmp
sub
lea
ret
cmpsb
sbb
push
repz
loop
adc
call
and
xchg
lret
test
pushf
pop
cmp
das
adc
cs
and
pop
ror
xchg
xchg
fiadds
or
movsb
fnstenv
or
xor
inc
cmpsb
add
lcall
cmpsl
lcall
sub
test
popf
xchg
xor
aad
test
pop
cmp
addr16
xor
sub
or
test
aas
arpl
pop
ret
loope
mov
mov
shlb
mov
mov
and
mov
push
or
pop
cmpsb
repnz
imul
lods
jbe
leave
lret
xchg
popa
aas
roll
pop
repz
popf
push
xchg
fisubl
sub
dec
or
inc
repz
lock
sahf
movsl
dec
test
imul
xchg
aas
hlt
push
jmp
adc
frstor
fidivl
push
ret
lret
icebp
fmull
outsb
adc
or
mov
or
add
cmp
jbe
and
and
push
dec
sub
fs
mul
adc
mov
addl
ljmp
add
and
sbb
push
jecxz
jle
int
insl
scas
jb
xchg
fidivrl
ret
jns
stos
test
clc
mov
out
js
je
leave
push
mov
pop
push
out
push
test
mov
jae
icebp
sbb
push
test
imul
pop
mov
adc
adc
sbb
xlat
das
pop
aaa
xlat
xchg
cmpl
repnz
dec
cmp
xor
pop
mov
sub
inc
xor
push
mov
out
mov
pop
mov
pop
inc
dec
cmp
mov
xchg
mov
outsb
scas
outsl
call
lds
jg
push
jne
aaa
or
shl
and
cmpsl
jmp
pop
stc
and
mov
arpl
jmp
xlat
push
jne
out
xchg
mov
mov
xchg
cmp
test
je
xchg
sub
repnz
mov
xor
mov
jae
push
les
sbb
push
es
popf
jecxz
loop
cmpsl
dec
in
mov
xor
gs
stc
je
xor
jbe
jecxz
fcoml
stos
jb
in
jo
pop
or
push
pop
jle
rorb
mov
add
repz
ljmp
mov
adc
imul
das
cmp
hlt
pop
out
jge
or
push
xlat
stos
mov
fwait
mov
sub
adc
mov
out
jnp
popf
orl
push
push
adc
push
push
fildl
stos
xor
das
push
xor
fstl
cmp
out
pop
sub
fstp
addr16
jg
add
int
xor
or
inc
xchg
jmp
aam
sti
jnp
and
les
inc
and
or
sub
sub
and
mov
and
aam
ljmp
jmp
arpl
inc
mov
insl
xor
je
add
mov
and
data16
jg
in
add
fstpl
add
dec
testl
test
fbld
pop
dec
mov
in
std
sub
and
cmpsb
pop
cmpsl
jo
pop
mov
lock
repnz
cmp
pusha
pop
sahf
addr16
dec
orl
mov
jbe
xorl
inc
fldcw
pusha
or
dec
push
scas
and
and
fildl
in
mov
popf
xor
gs
loop
xchg
push
out
mov
mov
cmpsl
lock
sbb
imul
scas
shrb
std
and
cmp
push
test
xchg
or
mov
insl
lret
mov
mulb
jne
dec
mov
mov
mov
das
mov
xor
shlb
mov
cmp
in
adcl
scas
push
push
cld
dec
clc
push
pop
mov
movsb
in
cmp
sub
inc
and
jge
stos
dec
ljmp
dec
das
repz
mov
xchg
fwait
jg
mov
enter
and
out
jnp,pn
add
mov
jp
addr16
sub
dec
mov
leave
push
mov
into
std
dec
mov
aas
and
shrl
insb
adc
lcall
jne
outsb
lret
pop
pop
sub
aaa
ja
sub
push
push
jge
xchg
add
sub
mov
jnp
shrl
jns
stos
push
push
shrb
dec
sub
and
sub
push
outsl
mov
and
cli
cmp
and
add
push
in
adc
and
xor
inc
ds
xchg
decb
jo
cs
dec
jg
outsl
pushf
or
push
clc
adc
dec
dec
xorl
stos
arpl
and
dec
cmp
sub
data16
push
aam
shlb
ljmp
movsl
or
push
lahf
sbb
cmpsb
xchg
mov
test
popa
lret
push
icebp
mov
adc
imul
mov
lahf
xor
popf
pop
test
push
pop
mov
sbb
movsb
sbbl
mov
cmpsb
pop
jb
repz
sarb
orb
pop
jecxz
mov
outsl
imul
loop
xchg
jg
es
cmp
or
pop
cmpsb
sbb
mov
fcoms
mov
or
out
dec
cmp
cmp
and
test
sub
mov
and
adc
or
mov
jae
mov
movsb
mov
inc
sub
into
mov
fcoms
sahf
inc
les
lds
das
push
mov
insb
dec
repz
idivl
xchg
sub
adc
sbb
jne
test
out
dec
mov
cmpsl
sbb
ja
add
or
in
adc
add
and
inc
adc
inc
cmpsb
pusha
adc
mov
cltd
push
lret
jmp
pop
cmp
mov
dec
fwait
mov
push
sub
sbb
mov
mov
jle
mov
scas
ss
mov
cs
fbld
cs
out
arpl
cmp
scas
xchg
jns
pusha
jecxz
jo
xchg
stos
mov
push
fsts
pushf
sub
push
mov
xor
mov
lea
push
hlt
mov
xchg
sbb
mov
ds
rcl
inc
ss
arpl
mov
sbb
aas
and
arpl
add
jge
pop
cmc
repz
push
scas
mov
out
sub
aaa
inc
dec
inc
inc
scas
js
xchg
ja
pop
pop
hlt
mov
jge
or
sub
push
ja
icebp
mov
repnz
mov
adc
cmp
dec
insb
push
fiaddl
jnp
jno
add
std
imul
test
fcompl
daa
cld
xchg
out
push
sbb
dec
ret
iret
std
mov
je
sbb
inc
adc
push
sub
push
xor
stos
scas
fadd
test
mov
arpl
mov
das
popf
repnz
lea
iret
shlb
pop
fs
decb
pop
fsubrl
pop
adc
fadds
das
or
fiadds
push
mov
cmp
xchg
jge
out
in
xorb
xor
add
mov
std
cli
insl
out
loope
jp
or
mov
lcall
iret
jp
test
or
rsqrtps
lcall
arpl
and
adc
sbb
pop
pop
inc
sqrtps
popf
mov
adc
lcall
movsl
or
inc
mov
mov
imul
or
cs
icebp
xor
add
lods
iret
fdivrp
cmc
pop
mov
xor
jle
inc
push
js
lcall
sysret
mov
clc
add
test
sub
inc
mov
sub
scas
and
or
int3
mov
test
mov
std
xchg
inc
inc
dec
js
xor
cmp
or
dec
lea
fistpl
xchg
popf
jne
mov
xlat
lahf
decl
loop
call
xor
lret
jle
mov
je
adc
cwtl
inc
clc
sbb
mov
xorl
push
cmpsl
repz
and
hlt
dec
xchg
cld
dec
jae
push
mov
dec
into
mov
xchg
outsb
loop
inc
push
add
or
and
jnp
in
push
mov
outsl
outsl
test
std
jae
sub
jnp
pop
es
adc
jl
ret
aaa
pop
es
mov
mov
jle
sub
xchg
xorl
mov
test
dec
push
repz
leave
add
dec
loopne
test
test
push
imul
fidivrs
addr16
mov
fmuls
fidivs
or
repz
xor
add
mov
jl
leave
jns
xor
sub
sub
push
mov
jb
cmp
ljmp
aad
je
int
fwait
or
js
xchg
push
pop
es
cli
mov
sbb
push
mov
fs
xor
lds
add
lret
pushl
mov
jns
pushl
dec
mov
sbb
bound
fldcw
mov
xor
push
mov
std
add
into
xchg
add
pop
jmp
jae
jae
dec
faddl
mov
cmpsb
and
push
seto
inc
mov
hlt
insb
sbb
inc
bnd
fistl
jg
call
push
jbe
inc
addr16
ljmp
mov
xchg
fistpl
adc
fwait
mov
jl
nop
mov
mov
test
cmpsb
lock
int
adc
pop
xchg
jne
sti
clc
or
mov
mov
pushl
aam
sub
mov
cltd
adc
inc
push
add
mov
mov
dec
es
insb
in
pop
les
cmp
mov
pop
xchg
and
xchg
in
push
push
mov
push
mov
mov
and
cmp
or
inc
lds
push
loop
jnp
or
mov
sar
pop
sbb
jmp
je
mov
mov
xor
mov
aad
mov
pop
insb
fdivs
test
adc
sub
mov
out
mov
pushf
jns
jle
pop
bound
inc
mov
aad
xchg
xor
lret
pop
xor
cltd
cld
adc
int
push
mov
movsb
fcompl
and
sbb
js
sbb
call
mov
lock
mov
cmp
and
je
imul
jae
adc
sbb
loope
push
dec
inc
call
ret
jnp
pop
xchg
orb
or
mov
dec
outsl
das
pop
inc
adc
out
and
sub
jg
fwait
sub
rol
sbb
test
xchg
adc
scas
sub
dec
mov
cmp
push
push
push
push
dec
sbb
xor
out
sub
fistps
cmp
insb
xor
test
repnz
add
inc
xor
leave
cwtl
dec
call
fdivs
aad
inc
jg
fnstcw
jge
mov
jecxz
mov
or
mov
nop
inc
lahf
jp
mov
mov
lcall
push
pop
sbb
call
sbb
or
mov
popa
pop
mov
rcrl
in
and
pusha
xchg
sbb
push
dec
jno
or
lods
inc
scas
dec
adc
loope
data16
ret
xchg
addr16
push
mull
add
pop
std
lea
loopne
movsl
mov
call
subb
adc
cmc
fisubrl
push
lds
xorb
cmp
cltd
dec
shll
into
and
enter
into
imul
mov
xchg
push
push
in
xorl
into
jnp
jge
jecxz
xlat
jle
jge
shl
and
jno
mov
test
cmp
loopne
insl
lcall
pop
subl
insb
cwtl
inc
cmp
shll
test
push
inc
enter
adc
xchg
sbb
push
sbb
loope
xchg
aas
cmp
add
imul
loope
and
xor
pop
mov
data16
inc
test
inc
scas
movsb
push
jge
push
inc
add
adc
add
jg
in
push
xor
cmp
out
pop
lret
call
bswap
repnz
or
cmpsl
mov
loopne
add
cltd
or
test
fadd
sahf
dec
xor
mov
fs
and
test
push
mov
shlb
inc
add
std
push
push
pop
out
into
into
mov
xor
ljmp
add
enter
repnz
bound
mov
rcrl
jne
and
test
add
pop
push
xor
test
xorb
out
jmp
push
ss
jno
mov
cmp
aad
sti
sbb
cmpsl
sub
jbe
push
mov
pop
sbb
dec
ds
or
pop
lret
xchg
mov
fcos
xchg
mov
add
xor
add
mov
fsubrs
repnz
jne
mov
pop
mov
cmpsb
aas
aas
lds
dec
imul
or
jge
pop
xor
movsl
mov
lock
out
aas
outsb
int3
xor
or
lret
outsl
and
adc
imul
cmpsl
shl
mov
xchg
ja
mov
jmp
in
adc
cwtl
push
sbb
cli
push
scas
pop
or
std
inc
adc
shll
ror
mov
loop
test
shlb
inc
mov
rol
dec
ljmp
lea
jl
cltd
cmp
out
add
xchg
jecxz
sbbb
push
sbb
test
adc
adc
into
lods
xor
iret
test
add
popf
mov
int3
xor
lret
mov
test
push
cwtl
movsbl
push
or
mov
sbb
xor
inc
jae
inc
dec
jp
push
inc
sbb
add
jnp
xchg
repz
inc
fcoms
cmc
pop
dec
mov
shll
push
sar
sbb
test
dec
ds
fisubl
outsb
imul
lret
sub
xchg
mov
adc
jp
inc
jns
add
xchg
sbb
adc
inc
divb
pop
mov
sti
lahf
sbb
ss
adc
mov
push
fs
jne
xchg
lds
inc
repnz
leave
es
adc
in
mov
ljmp
ret
xor
push
inc
outsb
mov
pop
dec
shrl
xor
arpl
in
hlt
call
mov
add
incl
add
add
jmp
sbb
hlt
imull
add
and
inc
and
shlb
mov
push
mov
stos
cmpsl
push
das
sar
sub
cmp
inc
ret
je
arpl
les
fisttpll
dec
das
push
push
lock
mov
imul
mov
in
adc
add
push
clc
add
xchg
push
xchg
xchg
movsb
xchg
dec
stos
loopne
ficoms
dec
out
xchg
test
movzwl
push
dec
xchg
lret
std
dec
call
test
xchg
xor
scas
xor
test
cmp
jmp
jb
fisubrl
xchg
clc
dec
xchg
jg
mov
xor
rcl
mov
jge
out
cmp
jmp
jae
add
fidivs
call
inc
js
cmp
fsubrl
test
or
ret
call
xor
loope
cmpsb
lock
adc
mov
mov
in
cmp
jo
mov
jecxz
xor
imul
fimull
inc
insb
adc
pop
sti
xchg
mov
aaa
testl
xchg
test
sbb
jmp
push
dec
shr
inc
sub
lret
and
or
push
push
mov
andb
test
mov
stos
and
dec
and
xorb
xor
lods
jmp
test
jp
push
add
fs
cli
cwtl
push
xor
jno
xlat
lds
dec
jo
pop
push
mov
mov
ja
cwtl
adc
ret
push
mov
imul
xor
stos
add
scas
mov
bnd
into
xlat
retw
jle
xchg
xchg
lods
push
outsb
test
pop
pop
xor
xchg
inc
inc
lods
es
add
sbb
pop
fisttpll
hlt
popf
sbb
xchg
lret
pop
lock
pop
pop
fistl
sub
inc
in
int
daa
cltd
adc
mov
mov
rol
add
punpckhwd
xchg
sbb
repz
lock
sahf
out
inc
ret
fs
pop
int3
push
sub
dec
stc
dec
rorl
mov
cmpsl
jne
push
pop
push
inc
mov
lock
sti
loope
stc
and
cmc
pusha
lret
xchg
out
movsb
sbb
xor
dec
sub
and
int
and
inc
mov
out
fimull
xchg
mov
aad
xchg
pop
mov
lret
xor
push
movsl
or
outsl
sub
es
fwait
and
fsubs
lahf
mov
cmc
add
or
or
shll
cmc
push
dec
or
lods
mov
imul
dec
in
popa
mov
hlt
in
xchg
lods
mov
ds
jns
sub
push
imul
xchg
imul
mov
leave
push
pop
inc
mov
mov
stc
test
in
adc
insb
movsl
fs
pop
pop
adc
cmp
xchg
pop
imul
adcb
aad
movsl
adc
xor
mov
mov
push
jle
mov
xchg
adc
and
cltd
sti
lea
xchg
mov
pop
mov
clc
andl
jl
push
dec
cmp
aad
mov
jmp
sbb
adcb
or
jae
out
call
call
add
mov
xchg
sbb
add
dec
push
add
or
adc
push
adc
lods
jnp
and
xorb
push
cmpsb
lock
push
push
jae
je
icebp
jmp
ja
add
clc
enter
push
add
and
add
xlat
jbe
imul
jmp
fs
xor
push
xor
loop
cmp
sub
std
sbb
push
roll
or
cmp
jnp
xchg
sbb
add
outsb
xchg
jmp
sub
ja
leave
add
xor
cmp
test
iret
daa
leave
insl
fdivrs
or
popa
mov
cmp
mov
jle
mov
das
inc
push
clc
sub
jbe
mov
jo
mov
dec
aad
sub
push
leave
insb
shll
shll
jmp
mov
push
outsb
mov
ficomps
mov
xchg
xchg
loope
inc
in
jecxz
jno
cmpsb
lret
dec
jle
mov
jno
call
and
in
cli
fildl
icebp
clc
dec
or
mov
fwait
adc
or
movsl
aad
sub
mov
scas
dec
fstpl
cmpsb
call
lock
push
test
clc
cwtl
sub
xchg
xor
testl
add
pop
and
push
sub
out
cmc
aam
cwtl
loope
dec
mov
push
lret
xchg
inc
fstpl
mov
xchg
push
pop
mov
adcl
sub
mov
xchg
mov
push
and
in
cwtl
add
std
lret
sti
ds
inc
mov
push
mov
in
roll
cmp
repz
sub
add
pop
xchg
mov
push
adc
iret
das
xchg
leave
ds
ja
gs
icebp
jnp
or
xchg
ljmp
pop
js
jno
in
dec
cmp
jae
repz
pop
sbb
adc
inc
ss
cmpsb
or
jp
cmp
std
jns
push
xchg
fadds
and
notl
lock
xlat
xor
inc
jl
pop
orl
imul
fwait
je
pop
cmp
jbe
or
jo
jle
call
push
xor
jecxz
imul
mov
jbe
mov
add
fsubrl
pop
movsb
fs
sub
sbb
jl
stos
push
hlt
mov
ret
out
outsl
sbb
or
xor
jmp
pop
subl
xchg
sbb
adc
cwtl
mov
mov
push
mov
push
test
sbb
xchg
sbb
jecxz
sub
xor
rorl
imul
dec
ja
lcall
movsl
dec
insl
add
sub
int3
into
sub
aas
xchg
sbb
jmp
or
pop
testb
fs
mov
pop
das
jle
push
push
or
xor
pop
or
jecxz
call
jmp
les
bound
cmp
aam
mov
fcoml
imul
inc
scas
push
add
mov
arpl
add
testl
inc
roll
jnp
xor
push
inc
xchg
loope
cmp
mov
mov
push
call
cmp
mov
add
cmp
or
in
and
mov
je
das
rorb
xchg
mov
jbe
scas
add
mov
test
cli
cwtl
inc
mov
lea
mov
mov
loope
loopne
push
or
imul
arpl
bound
or
xor
xor
sub
mov
jbe
sbb
mov
push
mov
lcall
xchg
xor
jmp
xlat
mov
in
push
sbb
mov
add
dec
and
sub
dec
push
dec
mov
cltd
or
pushf
rclb
iret
ja
ret
lcall
cmpsl
inc
call
mov
pop
lock
xchg
and
mov
mov
mov
movsl
push
call
and
sbb
das
push
fcoml
inc
xchg
push
cltd
and
inc
mov
jle
lea
decl
jnp
test
dec
xor
out
dec
sub
pop
pop
fdivs
jl
adc
mov
aas
sbb
push
aad
jle
rorl
mov
and
xor
dec
aas
mov
xchg
adc
outsb
test
pop
push
jg
xchg
lock
pop
pop
repz
lods
lock
mov
pop
mov
pusha
jne
mov
sbb
ret
loopne
loope
jae
push
sub
pop
xor
aam
subb
mov
inc
inc
jmp
jp
mov
sbbb
sub
xor
add
cmp
imul
insb
ljmp
mov
mov
jp
or
testb
in
push
rcrl
push
jg
jle
add
hlt
push
push
and
in
bound
adc
iret
out
push
leave
lods
fs
and
cli
and
push
inc
adc
in
leave
jge
sbbb
or
pop
or
lods
arpl
adc
movsl
mov
dec
sub
mov
jecxz
xor
fs
rcr
cmp
enter
jo
daa
fdivl
or
sub
mov
lcall
jl
cwtl
sbb
push
xor
or
adc
mov
dec
dec
sbb
pop
insb
mov
nop
xor
in
stos
jle
int
adc
out
jmp
sub
and
clc
dec
insb
aam
pushf
pop
xor
imul
add
into
mov
push
cld
mov
insb
sarb
adc
dec
imull
mov
loop
and
jns
xor
inc
adc
gs
push
add
add
stos
fisttpll
into
enter
dec
add
push
ret
iret
mov
jb
inc
mov
dec
faddl
cmpsl
out
jo
jl
add
sahf
or
inc
dec
mov
neg
data16
cld
or
or
ja
movsb
xor
and
mov
adc
or
cmp
dec
inc
push
das
das
jp
outsl
sub
fstpt
add
pop
mov
mov
rclb
or
idivb
out
dec
add
mov
aad
inc
aas
pop
rclb
inc
fldt
mov
mov
inc
negl
xchg
mov
inc
sbb
bound
sbb
push
out
cmp
mov
or
xchg
sbb
push
xchg
xchg
mov
fimull
jecxz
xor
jge
xor
pusha
rcrb
int
push
movsb
in
jns
imul
pop
pop
rcll
mov
lea
cmp
xchg
sub
lea
es
popa
inc
mov
pop
loope
stc
fiadds
scas
sub
scas
dec
filds
les
fcoms
idivl
int3
lret
fsubs
insb
in
fsubs
push
lahf
scas
sbb
cmp
push
pop
imul
pusha
imul
xor
adc
loope
ror
sub
mov
daa
xchg
mov
fists
fsts
sbb
push
cmp
cmp
push
arpl
daa
xor
sub
inc
add
dec
mov
jle
push
mov
fldenv
stos
shrb
mov
aas
sbb
mov
and
int
or
push
fildll
pop
cmp
rcr
aas
cmp
jle
insb
add
mov
adc
stos
in
add
cwtl
dec
fcoml
jb
adcl
xchg
mov
loope
ja
fcompl
push
add
into
lcall
in
adc
jg
mov
dec
or
ja
fldcw
mov
jns
mov
pop
and
mov
mov
adc
fistpll
stos
or
xchg
mov
jp
push
push
call
xor
test
mov
in
or
or
xchg
xchg
pop
stc
sahf
cltd
xchg
mov
jge
xor
shlb
insl
mov
scas
daa
xchg
xor
dec
or
sub
bnd
aad
mov
inc
push
and
sbb
jecxz
push
cmpsb
sbb
repz
jae
mov
or
lahf
je
mov
push
addr16
lock
lock
rorb
mov
call
sub
push
mov
mov
fwait
dec
mov
cmpb
jae
mov
mov
fdivrp
imul
in
out
xchg
xchg
jns
sar
sbb
ja
ss
mov
mov
popa
inc
inc
dec
xchg
xchg
mov
dec
add
adc
ss
fsubp
inc
repz
inc
xchg
push
lods
or
xchg
lcall
push
push
jns
fimull
xchg
int
data16
sbb
jne
imul
mov
jne
lock
mov
bound
ss
adc
outsl
js
cmp
xchg
xor
cmp
pushf
fbld
inc
mov
push
or
cli
lds
and
ret
out
aam
xor
push
pop
sub
pop
jnp
xor
in
inc
test
cmp
ja
mov
sub
dec
mov
cmp
out
mov
loopne
mov
mov
xor
lret
fs
mov
sub
mov
dec
lea
add
mov
sbb
cmp
clc
dec
cwtl
mov
enter
sub
or
leave
ja
ljmp
pop
or
mov
pop
or
pusha
sbb
jae
lods
in
mov
and
dec
jno
pop
cs
mov
fcmovnu
fldcw
cld
sbb
fidivs
xchg
aam
push
and
push
testl
aas
cmpsl
arpl
arpl
sbb
inc
js
stc
mulb
mov
fnstenv
add
pop
push
cmp
cmp
icebp
imul
xor
imul
fldenv
adc
xchg
daa
push
test
push
loope
push
lea
adc
movsb
mov
push
adc
mov
inc
mov
xor
es
cmc
mov
fbld
mov
mov
dec
arpl
pop
sarb
adc
mov
mov
test
les
insb
mov
loopne
insb
add
fnstsw
stc
enter
xchg
cli
movsb
js
jmp
push
cmovb
lods
mov
mov
add
dec
loopne
lock
xor
push
xchg
mov
hlt
lret
jp
inc
adc
fldl
dec
xor
aad
push
clc
mov
cltd
into
or
lods
js
repz
mov
testb
les
orb
push
ret
mov
xor
addr16
popa
outsb
testb
sub
orb
mov
das
popf
int
and
pop
push
xchg
cmp
mov
inc
add
bound
cs
scas
dec
jmp
and
arpl
xchg
mov
cmpsb
int
test
sub
aas
dec
aas
mov
cli
stos
repnz
stos
mov
jbe
in
test
aaa
sub
mov
mull
lds
xchg
dec
out
mov
mov
xor
pop
or
mov
in
pushl
mov
push
lods
jg
pop
inc
mov
outsb
mov
clc
cmpsl
shlb
cltd
loop
lahf
jo
ret
pop
push
outsl
pop
xchg
fstpl
lods
mov
popa
xchg
out
xchg
and
jae
xchg
repz
loopne
sarb
jp
std
or
add
test
mov
jns
lods
lds
mov
mov
inc
jnp
fldenv
scas
cmp
mov
or
je
sbb
out
adc
mov
lcall
mov
sub
scas
arpl
jg
xchg
add
notb
adc
adc
jae
xchg
test
push
mov
enter
cmpsb
fidivrs
ds
mov
mov
ds
jl
rorl
mov
icebp
inc
sbb
mov
push
movsl
xor
jbe
out
inc
js
mov
mov
add
rcr
sbb
jne
pop
mov
pushaw
stos
jno
fistps
jnp
pop
pushl
popf
mov
pop
push
fcoms
popf
xor
add
and
notb
jb
les
mov
mul
push
or
sbb
jb
pop
add
mov
aas
movsb
adc
mov
les
sub
out
daa
idivl
mov
xchg
neg
scas
pop
iret
movsb
adc
mov
dec
dec
mov
mov
push
fsubrs
mov
xchg
sub
add
repnz
or
int
or
cmp
xor
and
jno
sbb
sahf
outsb
mov
clc
movsb
mov
mov
into
add
inc
arpl
cltd
ret
cltd
std
lea
into
cmpxchg
or
ret
push
cmp
mov
ret
mov
sub
data16
mov
add
cwtl
and
xorl
jae
ficoml
pop
cmp
mov
xchg
mov
movsl
rorl
xadd
jae
and
and
aad
out
inc
cmp
into
mov
fwait
mov
iret
mov
sub
mov
stos
pop
in
fistl
and
sub
dec
bound
inc
inc
daa
ljmp
out
mov
aas
cs
mov
mov
mov
dec
add
shrb
mov
jecxz
daa
jecxz
or
push
xchg
pop
jge
mov
jl
in
cmp
or
pop
push
shrb
notb
pop
push
push
mov
pop
xchg
cmp
mov
mov
jl
mov
add
mov
std
nop
repnz
repz
loopne
pop
xor
test
mov
pop
inc
pop
adc
or
mov
data16
fldt
aam
xchg
xchg
enter
shll
out
xchg
lods
addl
pop
fwait
jo
or
xor
movsb
xor
push
dec
push
rcrl
xor
mov
or
aad
push
jge
rcll
inc
sbb
addr16
in
and
xchg
xor
push
inc
jbe
xor
aam
faddl
sbb
push
xchg
ja
xchg
push
dec
pop
lret
inc
adc
lcall
and
repz
jae
inc
test
pop
addr16
sbb
into
scas
mov
push
xlat
outsl
add
or
enter
mov
mov
hlt
mov
push
jmp
dec
fs
fdivs
xor
mov
sahf
xor
xchg
mov
das
push
addl
mov
push
mov
hlt
cmp
fwait
out
cmpsb
push
imulb
adc
pop
je
mov
cmp
jns
dec
xor
xchg
mov
jo
xchg
inc
mov
push
dec
cmpsb
addr16
out
jae
push
mov
jno
test
scas
ret
iret
jne
xor
test
adc
test
mov
sti
pop
test
loope
lods
test
xchg
mov
push
in
ja
jbe
pushf
and
push
fldl
or
or
int3
dec
aad
loop
adc
push
push
cmpsb
loop
scas
lcall
pop
push
xchg
dec
mov
insb
xor
orl
xchg
je
rcr
sbb
ss
inc
or
insb
mov
inc
sahf
in
jg
jb
mov
aaa
cmp
stos
adc
clc
xor
mov
imul
jg
popa
inc
ror
insb
in
mov
adc
cmpsl
inc
add
xorl
sbb
push
test
testl
loopne
sbb
pop
sbb
pop
pop
pusha
mov
jne
testl
cmp
pop
dec
sti
stc
cmpsl
cltd
icebp
loop
sub
sbb
fcoml
jle
repnz
outsb
sarb
mov
or
cmp
xchg
push
and
lret
fs
inc
sar
cmp
cmpsl
and
add
and
xorl
adc
je
adc
bound
and
ret
aas
xor
sbb
mov
enter
lock
mov
arpl
mov
mov
std
xchg
out
aaa
jbe
add
js
cwtl
sbb
dec
mov
sub
scas
dec
xor
cmp
sbb
iret
imul
arpl
fisttpll
mov
ret
cmpsl
cmp
mov
or
xlat
sub
cmpsb
das
cmc
pop
clc
dec
pop
daa
mov
dec
xchg
decl
or
dec
jecxz
movsl
pop
mov
in
mov
dec
imul
sub
lds
fwait
cmpsl
dec
or
pusha
cmpl
pop
outsl
cmp
loope
dec
inc
nop
push
hlt
dec
arpl
mov
mov
xchg
rorl
rorl
pop
pshufw
cmp
xchg
sub
repnz
jmp
arpl
jno
inc
ret
push
mov
popa
leave
imul
repz
add
shlb
xor
fdivrl
sub
sbb
adc
fcomps
imul
arpl
or
sub
mov
lahf
insl
out
cltd
inc
sub
repnz
fmuls
push
mov
mov
rcr
and
inc
jl
xor
or
add
adc
jne
outsb
aas
les
push
jge
jle
sbb
aas
fwait
pop
pop
cs
jne
jno
daa
inc
divl
sub
gs
mov
sarl
sbb
push
cmc
and
push
and
cld
mov
lds
fwait
xor
adc
ljmp
add
rclb
pop
jmp
shl
lods
cld
cmp
mov
fnstsw
aad
into
jecxz
mov
pop
frstor
mov
and
je
insl
xchg
push
adc
xchg
xchg
mov
ret
mov
sbb
push
sbb
or
loope
out
xor
test
sub
fdiv
adc
adc
jp
pushf
sti
and
jl
neg
mov
pushf
pop
mov
jge
sub
ljmp
movsb
rclb
repz
push
adc
jl
or
outsl
sub
adc
in
fwait
push
ja
xor
push
adc
xchg
mov
pop
lods
repz
ret
incb
sbb
mov
in
or
imul
pushf
dec
jnp
and
mov
in
xchg
mov
sti
xchg
jecxz
out
jno
jge
testl
xchg
mov
fdivr
cmp
sub
add
lds
jb
arpl
or
pop
aaa
popf
jp
push
xchg
cmp
hlt
idivl
mov
pop
pop
cld
js
sub
mov
push
rclb
push
dec
cmp
out
fcomps
imul
xor
jo
mov
inc
dec
jg
xchg
xchg
dec
jecxz
cmp
popa
push
mov
jns
add
dec
insl
inc
inc
mov
vpsubsb
lret
jno
sti
xchg
cmp
xor
clc
stc
mov
out
clc
les
cmc
sub
jne
jle
mov
cmc
movl
xor
movb
mov
in
arpl
gs
push
pop
int3
pop
dec
pop
lret
ret
lcall
adc
shrb
mov
jmp
shrb
sbb
fwait
inc
mov
lds
adc
int
push
adc
jmp
inc
rol
insl
loope
sub
dec
jg
and
mov
bound
mov
cmp
mov
sbb
xchg
dec
mov
jno
fiaddl
push
rcll
ficomps
add
cld
xchg
call
mov
xor
es
mov
mov
hlt
in
cmp
mov
dec
xchg
sub
pop
das
dec
inc
movsb
pop
xor
cmp
mov
call
xchg
mov
sub
dec
divb
cmp
inc
cmc
jecxz
popf
jno
loopne
xor
or
aam
xor
xchg
in
fistpl
ret
add
xor
mov
and
data16
hlt
cmc
adc
mov
dec
or
mov
xor
mov
call
push
in
sub
cmp
sar
fnstenv
pop
cld
fmuls
movsl
popl
addr16
cmpsb
rclb
lret
or
movnti
pop
fs
repz
cmp
push
haddpd
mov
inc
fisubs
sbb
jns
jl
dec
movsl
xor
mov
and
in
lret
aam
jne
repz
fmull
jp
cli
es
pop
fldt
sbb
or
les
repz
jae
xchg
imul
push
lock
pop
adc
inc
in
xor
mov
jno
mov
add
sub
and
and
je
test
in
arpl
popa
imul
call
ds
cs
adc
pop
icebp
jno
sbb
push
dec
xchg
pusha
mov
out
or
mov
jecxz
add
add
push
pop
ret
cmc
lock
inc
testb
loope
mov
xor
out
neg
loopne
mov
lds
dec
mov
mov
out
outsl
pusha
xchg
jl
jbe
sub
inc
aad
je
test
rorb
cmp
push
cltd
iret
inc
test
sbb
out
insl
add
sti
js
push
mov
es
mov
adcb
repz
ja
add
xor
clc
lock
push
push
mov
sub
filds
in
dec
mov
push
out
stos
popf
rcll
rcrb
mov
lods
sahf
rorl
outsl
cmp
iret
incb
out
loope
pop
rcrl
mov
idivl
pop
xchg
fimuls
xchg
bound
xchg
lock
aas
adc
mov
divb
inc
adc
push
mov
mov
mov
add
mov
sub
push
daa
aad
ja
pop
cmc
ja
or
push
int
sbbb
sbb
sub
das
dec
inc
pusha
stos
iret
pushf
inc
je
inc
mov
mov
push
das
jle
xchg
cmc
mov
pop
mov
inc
cmp
sbb
adc
fcomip
divl
pop
test
idiv
dec
pop
mov
jb
repnz
mov
in
cmp
inc
push
push
std
jecxz
mov
push
out
add
icebp
out
jmp
in
aad
xor
scas
push
pop
test
dec
enter
stos
jb
sbb
lahf
cs
pushf
fcomip
aad
or
mov
insl
xchg
xchg
sub
sti
imul
cmp
mov
sbb
mov
sbb
xor
mov
pop
sbb
or
cmp
push
nop
imul
fdivl
xor
pop
dec
adc
push
jb
addr16
mov
lock
mov
jne
cwtl
push
inc
loopne
in
in
jb
inc
inc
mov
imul
fcompl
dec
aam
enter
jmp
in
add
inc
push
or
add
dec
pop
mov
shrb
fistps
stos
sbb
insl
or
stc
icebp
cltd
pop
sbb
aas
push
add
clc
outsb
es
daa
rcrb
aad
and
sbb
jb
add
xchg
adc
lods
pop
sub
popf
or
sbb
or
fnstenv
mov
mov
or
sub
mov
add
jge
mov
aaa
xchg
inc
sti
es
pop
push
roll
xor
push
sbb
xlat
scas
jae
daa
lret
shll
mov
ret
sti
mov
add
inc
jae
cltd
fdivrs
mov
addb
data16
cwtl
add
mov
sti
cmp
cmp
jg
lea
sbb
jle
dec
cld
add
sarl
das
orl
pop
mov
mov
cmp
leave
pusha
cmpsl
lods
push
pop
fbstp
fmulp
inc
xlat
cmpsb
mov
sti
mov
imul
pop
aas
imul
ret
rcrb
push
jb
sbb
popf
jl
and
adc
ret
xlat
mov
jb
insb
jo
cmp
jae
xor
incl
inc
mov
shll
stos
inc
jp
push
hlt
push
push
xchg
in
dec
mov
jae
mov
or
fdivrp
jns
xchg
adc
xor
lods
rcrb
rol
ljmp
daa
xchg
push
fisubrs
jle
xchg
mov
push
ss
mov
mov
andl
loopne
inc
stc
mov
pop
jmp
hlt
pop
cmp
sbb
cmp
inc
dec
enter
scas
mov
cmp
out
dec
adc
aas
and
and
jmp
dec
cmp
inc
push
push
fisubl
xchg
pushl
adc
xor
cmpsl
xchg
push
or
in
divl
fdivs
fs
test
jne
andb
xchg
inc
aaa
jl
jo
jg
dec
jno
shrl
cmp
xor
jae
scas
pop
cmc
add
movsb
pusha
fidivl
mov
mov
jle
fldenv
dec
mov
xchg
jns
and
ja
sbb
xchg
jb
in
cwtl
xchg
fcoml
mov
mov
out
aaa
add
sbb
test
adc
adc
mov
push
pop
cli
shrb
aad
inc
fbstp
clc
lods
jnp
adc
subb
or
lcall
cmp
mov
cltd
mov
insb
mov
cld
lret
jns
mov
sbb
int3
sbb
sub
lcall
xor
nop
mov
dec
int3
mov
jg
sbbb
dec
dec
jg
test
lret
push
jle
or
jbe
insl
mov
xor
addb
cmp
insl
ret
imul
out
push
addr16
dec
hlt
xor
lea
sub
xor
adc
xor
jmp
xorl
xchg
imul
shll
mov
jns
mov
insl
cmp
ljmp
jb
cmp
mov
mov
int3
inc
push
adcb
fidivl
jge
pop
mov
orl
adc
inc
test
mov
fistpll
xor
cmp
cmp
lea
adcb
jne
out
or
ja
adc
mov
pusha
sbb
sti
jne
sti
push
push
mov
or
mov
fcmovnb
inc
push
xor
punpcklwd
mov
push
roll
hlt
in
stos
jle
out
icebp
cwtl
pop
and
jne
fstl
push
mov
out
add
mov
add
in
push
dec
sub
pop
loop
out
in
mov
push
test
data16
jne
push
mov
jge
icebp
xchg
rorl
push
mov
std
dec
outsl
fadds
cmpsl
test
dec
push
shrb
dec
or
lods
inc
repz
dec
loop
dec
int
lds
sub
jnp
inc
mov
stos
push
out
js
insl
sahf
inc
std
in
xor
data16
push
sub
xchg
dec
int
pop
push
mov
pop
sahf
mov
mov
mov
push
call
cmp
pop
or
mov
adc
mov
push
jbe
jb
xchg
xor
adc
dec
cld
lret
repnz
jbe
lret
arpl
push
movsl
std
sub
adc
xor
dec
movsb
cli
mov
mov
mov
sub
icebp
adc
xchg
jno
dec
cmpl
ja
insl
push
pop
dec
jno
js
jge
cmc
or
jns
sub
lock
mov
jge
push
into
cmpsl
mov
frstor
push
ja
dec
daa
mov
int3
and
cmp
pop
jge
xor
repz
pop
in
pop
lret
pop
mov
pushf
popf
pop
fdivl
or
xlat
pop
negb
repz
and
fwait
popa
jmp
jp
and
loop
mov
mov
inc
push
pop
mov
cmpsl
inc
pop
jecxz
sub
cmp
inc
cmp
push
negb
movsb
xor
lcall
lods
out
push
sbb
xchg
out
lret
cld
orl
enter
movsb
fsubl
aam
mov
push
stos
dec
popa
enter
daa
movsb
add
dec
ret
mov
jg
out
adc
hlt
mov
andb
ja
int
in
inc
dec
cmp
xchg
inc
test
hlt
dec
xchg
cmp
add
push
xlat
and
cmp
fcomps
push
fxch
lret
sub
aam
cmp
jne
jecxz
in
xchg
sub
pop
xor
adc
icebp
sbb
ljmp
jb
int
sub
cmp
clc
dec
outsl
gs
mov
rcll
in
inc
mov
cmpsb
pop
push
lahf
mov
int
nop
loope
sbb
icebp
mov
js
dec
add
xchg
lcall
lock
cmp
jnp
sbb
inc
test
aaa
pop
xor
stos
fadds
fists
add
xchg
int3
lds
pop
sbb
dec
or
dec
lcall
push
xchg
xchg
test
cld
fsubs
push
jecxz
xor
push
sar
inc
pop
dec
sub
lock
or
xor
stos
stos
sub
and
stos
ret
and
movsl
mov
xor
mov
out
pop
xorl
out
fs
push
add
stc
std
mov
cmp
imul
mov
adc
add
push
in
es
jg
pop
cmp
and
or
pop
pop
mov
in
subl
lahf
sarb
cmp
push
cli
lock
jecxz
inc
ds
into
push
lock
sub
mov
xchg
mov
or
aas
jae
push
pop
xchg
and
xor
ret
fdivs
test
pop
mov
or
and
lahf
sti
fidivs
inc
out
jb
out
pop
or
mov
std
or
add
mov
insl
ds
pusha
ss
cltd
aas
sbb
xor
fwait
mov
out
sub
mov
les
dec
xor
cmp
insb
xchg
inc
les
adc
push
xlat
mov
sub
mov
mov
data16
aaa
sub
push
and
sbb
xor
insl
push
jp
jae
xchg
ret
cmp
stos
xchg
inc
stos
cmpsb
gs
ss
addb
sub
jle
cmp
mov
je
mov
scas
lea
inc
push
daa
mov
jns
aad
call
adc
out
cmp
shlb
xor
mov
dec
xor
sub
andl
push
in
pop
xorl
fisubrs
push
aaa
sub
mov
outsb
sbb
jns
and
cmp
mov
fists
lahf
cwtl
fsubrl
dec
cmpsb
pop
imul
xchg
xchg
pop
int
push
stos
dec
mov
cmpsl
xor
adc
hlt
fiadds
in
jp
mov
adc
xor
call
adc
fstl
shl
adc
scas
xchg
rep
pop
mov
pushf
push
stos
jno
aad
dec
xor
cmp
sbb
aas
pop
daa
push
xor
push
xchg
mov
xor
fldt
cmp
sub
adc
mov
xchg
pop
repz
add
mov
xchg
std
imul
adc
pop
adc
repnz
and
jmp
test
pop
ret
loope
add
outsb
xchg
inc
dec
push
std
pop
jbe
pop
leave
mov
mov
loope
jae
adc
jo
fcmovbe
xor
jae
in
adc
mov
mov
imul
in
push
es
pop
lods
dec
shrb
ret
adc
sub
mov
cmp
imul
and
addr16
cmc
mov
and
pop
pusha
inc
jmp
int
sub
aas
jb
sbb
inc
dec
rorb
out
insb
test
jb
jp
mov
popa
aad
pop
sbb
xchg
adc
arpl
pop
mov
or
xchg
sbb
push
test
jge
fildl
and
test
or
cld
jmp
dec
test
lret
gs
ret
adc
cltd
ror
sub
push
imul
pop
lock
mov
fsubrs
jge
test
inc
test
loopne
js
mov
in
outsb
in
jo
mov
arpl
fcmovnb
add
pop
xchg
sbb
push
cltd
mov
gs
jo
mov
jbe
or
and
mov
xor
arpl
sbb
xchg
xor
inc
lds
lret
mov
jae
enter
or
jns
outsb
cltd
es
bndldx
addr16
aad
roll
cmp
dec
add
jmp
pushw
lret
fwait
loop,pn
daa
ljmp
jl
jns
xchg
xor
aas
push
cmc
decb
pop
scas
std
jne
or
repz
ljmp
lret
outsb
mov
loopne,pn
stos
push
out
xchg
or
mov
cmp
cwtl
lret
xor
mov
repnz
imulb
loope
mov
or
int3
leave
add
add
mov
jmp
dec
scas
mov
insl
jno
mov
pushf
and
cli
mov
sbb
cltd
add
in
sub
movb
lcall
insb
lret
adc
or
mov
sbb
outsl
mov
jae
xchg
data16
lret
test
lcall
mov
ja
fwait
mov
popf
push
and
cmpsl
stos
jle
rorb
or
lods
mov
ficompl
lcall
fstpt
mov
addl
mov
and
inc
dec
rcll
sbbl
clc
addr16
ret
push
sub
and
in
in
les
cwtl
inc
daa
mov
xchg
mov
and
leave
test
xorl
jmp
popa
push
push
std
fsubrs
ss
or
xor
mov
idivb
lret
aad
cld
mov
jl
in
or
aad
cld
pop
push
jbe
ror
loop
lods
aam
and
test
xor
jle
inc
pop
fisubrl
push
dec
jle
sub
mov
icebp
adc
stos
arpl
xlat
stos
xchg
sub
das
aaa
fdiv
or
push
scas
clc
dec
icebp
ss
xorl
bound
stos
scas
movsl
fucomip
adc
push
or
or
js
cld
jns
or
adc
out
mov
scas
je
int3
scas
or
sbb
out
insl
mov
xchg
pop
fsubl
add
pop
aad
stos
inc
std
xchg
rcr
cmc
lcall
or
sbb
push
cmpsl
push
cmp
aaa
adc
or
call
xor
cmp
into
int3
mov
mov
int
fisubs
sub
inc
les
add
scas
dec
mov
dec
mov
xchg
add
mov
lock
in
xchg
push
cli
call
iret
jecxz
ret
mov
add
ljmp
mov
repnz
popa
jg
inc
inc
stos
xchg
sbbb
jl
and
xchg
test
je
or
scas
lods
fidivrs
jle
jnp
popa
repz
sbb
stc
push
or
jnp
mov
jmp
mov
aad
cmpb
stos
fistpl
push
jmp
addb
sbb
imul
mov
test
out
shlb
jne
jecxz
les
out
iret
ret
jmp
jmp
dec
out
xabort
stos
aas
add
sahf
add
in
jle
jp
lret
aaa
aad
xor
aad
in
das
jp
and
inc
imul
shlb
test
addr16
scas
cs
imul
jne
call
shrb
cmc
jb
ret
push
xor
or
adc
cwtl
add
xchg
imul
mov
jmp
popf
iret
mov
iret
push
cltd
pusha
pop
loop
mov
dec
dec
out
std
ja
add
and
dec
aaa
adc
and
rorl
mov
push
pusha
and
daa
dec
mov
or
outsl
and
daa
add
into
fistpl
fs
xorb
mov
xchg
fidivl
fcomi
mov
repnz
sub
mov
fdivs
pop
cmc
cmp
mov
outsb
fsubl
xlat
pop
mov
xchg
int
sub
pop
cmp
mov
xor
test
mov
sub
xchg
test
add
or
adc
stc
js
push
adc
fwait
inc
cmpsl
or
sahf
js
xor
iret
mov
push
test
ret
insl
push
stos
dec
xor
js
dec
mov
add
mov
jbe
xor
mov
clc
insl
lds
jbe
push
loopne
jb
mov
aaa
cmp
or
and
pop
mov
in
or
xchg
xchg
pop
xchg
sub
mov
lea
mov
inc
aaa
dec
enter
dec
in
sbb
sub
pop
nop
fcoms
pop
mov
mov
cld
cmc
fnsave
mov
leave
pop
data16
jne
xchg
xor
pop
faddl
cltd
push
adc
sbb
test
ljmp
adc
scas
mov
ret
jo
jno
jnp
mov
stc
mov
ja
call
stos
mov
xchg
mov
cmpsb
inc
jmp
aas
adc
jb
or
push
iret
testl
lret
xorb
mov
xchg
arpl
ret
clc
inc
mov
mov
mov
pop
adc
mov
fisubl
lret
ds
adc
pop
icebp
movsl
add
sub
jp
int
call
pop
inc
inc
jge
movsl
jo
mov
pop
cmp
adc
xlat
cmp
adc
popf
lods
push
push
outsl
leave
rcll
jbe
mov
imulb
cmp
iret
imul
or
stos
pop
rorl
pop
out
inc
ja
xchg
jl
push
xor
js
aaa
mov
xor
dec
leave
sti
adc
xlat
sbb
push
sub
push
pop
aam
gs
inc
inc
jge
jne
push
negb
jae
cmc
hlt
dec
testl
sbb
sbb
ss
outsb
pop
rcrl
aad
mov
filds
add
mov
leave
lret
xchg
mov
push
jge
cmp
mov
fldenv
shrl
lds
out
imul
pop
sub
rcll
ret
mov
popf
mov
frndint
cltd
jp
mov
adcb
inc
nop
add
jns
sub
dec
pop
fmull
and
das
dec
pop
dec
mov
jl
dec
outsb
dec
cmp
mov
aad
xlat
xchg
fs
in
cmc
gs
cmp
mov
sbb
pop
mov
sti
and
xchg
out
inc
or
in
ret
mov
inc
pop
jmp
xchg
cltd
loop
rclb
jne
sub
mov
add
push
popa
iret
mov
dec
pop
mov
movsl
fnstcw
mov
inc
inc
stos
mov
xchg
and
loop
push
sbb
mov
aaa
and
imul
inc
mov
popf
mov
xor
outsb
dec
mov
fwait
subb
cmp
mov
lcall
dec
adc
jmp
pop
mov
lods
dec
popf
mov
push
cmp
lret
ljmp
gs
sbb
dec
mov
jl
in
mov
pop
or
cmp
ljmp
sahf
popf
mov
test
mov
inc
jg
add
popa
dec
cld
or
push
mov
sbb
push
cmp
mov
dec
jnp
mov
cmp
sub
adc
adc
jmp
cwtl
adc
pop
sbb
ret
data16
sbb
mov
cs
cld
push
fmuls
in
sbb
and
popf
cmc
enter
and
lahf
or
test
add
loope
mov
cltd
add
and
into
cwtl
mov
jl
loope
adc
jb
aaa
adc
xchg
inc
push
pop
out
mov
xchg
icebp
loop
test
mov
stos
adc
sub
dec
movsl
push
filds
in
push
lock
out
ret
int
and
add
pushl
mov
and
out
add
mov
je
mov
rcr
inc
adc
lds
js
mov
sahf
sub
inc
enter
mov
enter
pushf
in
imul
mov
dec
add
mov
ljmp
test
cmp
out
sahf
test
sbb
mov
mov
jno
in
xor
dec
and
out
xchg
add
into
testl
call
xor
push
mov
cmp
sbb
pop
xlat
mov
pop
push
jmp
cmc
sub
adc
test
mov
repnz
mov
iret
cmp
jmp
add
dec
mov
add
xor
add
mov
jge
sub
mov
lcall
fnstcw
sarb
rcll
out
inc
std
lret
cmp
mov
jp
lea
add
in
aam
xchg
cmp
xor
push
or
adc
arpl
ret
push
scas
and
test
sub
lods
mov
mov
mov
cltd
mov
mov
xor
mov
orl
or
les
mov
push
or
push
ss
sub
sub
inc
mov
out
push
adc
dec
and
ret
fisubrl
dec
push
test
xchg
repnz
push
xor
mov
pop
mov
cmp
xor
bound
pusha
inc
dec
dec
mov
sub
movsb
call
sbb
int
fwait
stos
sub
out
push
clc
adc
inc
or
or
sbb
xor
push
push
push
inc
int
mov
sarl
int
jge
in
imul
pusha
js
cmp
ret
add
cs
pop
add
or
push
and
mov
add
lea
mov
dec
sahf
pop
add
xorb
pushf
pushf
and
dec
das
push
ret
and
outsl
or
xlat
add
mov
cmp
cld
pop
pop
ja
mov
lock
shlb
mov
test
cmp
or
lcall
ds
cmpb
neg
xchg
pop
out
mov
nop
push
aas
inc
add
popa
loope
jp
mov
add
int
jle
daa
mov
add
gs
push
aas
mov
inc
cli
test
js
int3
scas
lods
dec
insl
push
jecxz
adc
subb
lcall
mov
cltd
ljmp
ss
mov
flds
int
cmp
add
inc
scas
outsl
mov
std
scas
test
lock
jbe
or
ret
sbb
in
pop
bound
sub
jno
inc
popa
cmp
mov
jb
jb
fldt
outsb
mov
movsl
shlb
xchg
adc
das
inc
push
enter
sub
std
lret
pop
mov
push
xchg
sbb
jl
mov
mov
cmp
ret
fdivrl
mov
cmpsl
pop
in
movsl
add
mov
cmc
les
mov
push
aaa
lods
cmp
mov
adc
jmp
andl
jns
xlat
mov
adc
bnd
mov
lock
sti
out
lods
xchg
bswap
jecxz
push
jo
out
xor
movsl
loopne
rcr
ret
cmp
jmp
ret
sub
sgdtl
xchg
inc
outsl
sti
add
fwait
dec
cli
adc
ljmp
hlt
add
insb
adc
adc
add
and
out
int
fdivrs
push
sub
mov
jns
ret
sbb
push
add
adc
jae
shrl
pop
repz
cmp
xlat
sti
mov
pop
jl
rcll
xchg
cltd
push
push
int
jge
mov
jnp
lea
jb
fildll
outsb
std
sub
testb
popf
dec
mov
test
adc
adc
dec
pop
lock
lret
cmp
insb
or
inc
loop
push
jl
jmp
cld
rcll
lock
test
push
dec
sub
jmp
fbstp
add
lcall
out
add
cmc
vmovapd
xor
iret
subl
loope
ret
mov
imul
xchg
nop
mov
pop
in
test
lods
mov
jecxz
or
ss
adc
adc
inc
repnz
das
pop
inc
shrb
imul
mov
cmpsl
mov
js
xlat
push
mov
and
ds
cmpsl
icebp
faddl
or
dec
cwtl
cs
pushf
xor
sbb
push
adcb
loopne
cmp
stc
test
jge
xchg
sbb
inc
pusha
scas
in
gs
inc
lret
cld
sti
jne
fldt
idivb
cmc
test
xor
std
mov
js
xor
iret
int
xor
jp
out
mov
mov
push
inc
std
xor
incl
push
popf
scas
pop
cmp
mov
imul
add
inc
pop
cltd
push
cltd
and
sub
mov
ljmp
or
mov
scas
and
sarb
bound
das
mov
faddl
loop
xchg
insb
enter
inc
jecxz
aas
push
mov
adc
loop
dec
jp
jno
cmp
ljmp
xor
das
lods
sub
xchg
mov
jbe
mov
lods
lret
jno
sarb
dec
xchg
xor
sti
jb
jo
pop
dec
mov
pop
push
dec
mov
aaa
xchg
mov
aad
in
out
in
popa
mov
orl
sub
loope
mov
aas
xchg
negb
aaa
loope
inc
and
idivl
jge
jns
dec
lcall
and
jge
and
and
leave
and
and
repnz
mov
pop
cmp
cmp
lods
ljmp
aam
leave
sub
or
shll
add
xchg
idivl
cmp
jle
sbb
mov
push
push
lods
popf
pop
sub
mov
pop
mov
mov
jnp
xlat
movsb
cmp
je
out
sahf
or
and
jp
fsubs
add
filds
hlt
cmp
xor
js
mov
aam
sbb
orb
cs
jbe
imul
aad
jl
xor
icebp
jp
inc
out
cmp
or
or
jnp
popa
dec
ds
sbb
mov
inc
outsb
in
mov
mov
fs
sbb
daa
cmp
or
push
cmp
es
loopne
jne
aas
in
lcall
cmc
mov
data16
in
mov
dec
je
outsb
dec
loope
insb
jb
sub
jae
aam
cmp
repz
fidivrs
or
fwait
insb
sub
push
movq
test
icebp
cmp
sbb
xlat
js
inc
cld
mov
mov
out
fdivrl
and
xlat
lods
in
push
cli
lds
addr16
push
mov
xchg
insb
mov
mov
or
xorb
scas
or
fbstp
mov
dec
jne
out
lret
cmp
lret
jle
in
lock
int3
cld
fimuls
lcall
stos
push
bnd
adc
jns
ficoms
xor
ljmp
sbb
std
add
cmc
dec
mov
or
test
stc
xchg
ret
popa
cli
add
jmp
shll
mov
xchg
loopne
jmp
dec
and
int
imul
mov
sbb
add
mov
cmp
xchg
xlat
dec
lock
cmp
leave
in
sarl
mov
mov
pop
mov
jle
add
adc
xchg
mov
mov
shll
jbe
cmp
ss
push
jo
pop
rcl
jns
cmp
xchg
lcall
insl
sti
add
or
enter
cmpb
fsubr
mov
or
fnstenv
add
inc
fildll
or
aaa
xor
inc
popf
outsb
sub
sbb
repz
push
sub
arpl
mov
lcall
and
xchg
es
cwtl
nop
inc
sahf
push
or
sub
pop
jp
sub
adc
pop
push
mov
sub
fs
enter
std
sti
aad
dec
pop
icebp
mov
dec
ret
and
push
lds
lret
rcrl
sbb
test
cmpsb
outsb
push
dec
test
int
pop
cwtl
test
mov
sub
mov
xchg
loop
pushf
cli
mov
inc
fmuls
and
cwtl
lds
mov
cmpsl
jo
inc
xchg
dec
addl
pop
xchg
adc
mov
sbbb
pop
sbb
add
popa
xlat
in
test
jge
ret
lock
leave
jg
xchg
in
mov
push
sbb
addr16
push
sarb
ret
sti
jecxz
lret
movsl
shlb
test
mov
xchg
enter
leave
gs
lea
inc
shlb
repz
sar
push
adc
mov
not
xor
ret
sub
or
dec
mov
jae
inc
add
mov
ret
out
and
jl
insl
dec
mov
pop
jb
and
je
add
fists
outsl
pop
fs
jecxz
xchg
or
sub
fiadds
mov
adc
mov
pop
jns
add
int
mov
cmp
jnp
cmp
inc
sub
mov
jno
movsl
call
leave
sub
xchg
pop
inc
aam
data16
lock
out
fiaddl
xchg
xchg
bound
pop
cmc
movsb
xlat
mov
inc
xor
adc
test
xor
cmp
lcall
iret
sbb
push
clc
or
mov
dec
lret
fsubr
aam
and
scas
aad
push
imul
insb
dec
or
sbb
ret
cmc
cltd
scas
mov
in
pusha
push
insl
xor
push
gs
vpor
mov
mov
or
mov
mov
sti
mov
iret
cmp
fildll
dec
pushf
pop
jbe
mov
bound
mov
lahf
gs
or
out
popa
mov
add
pushf
iret
cld
sbbb
pop
outsb
sub
ficoms
sub
nop
int3
lods
ror
outsl
pop
fld
stc
or
pop
cli
xor
int3
enter
fstl
mov
mov
jmp
mov
push
adc
ljmp
and
push
inc
jbe
jns
mov
inc
or
sub
push
push
inc
xchg
fsubl
mov
jp
mov
fs
cmp
ret
add
and
push
inc
fisubs
inc
into
mov
fdiv
inc
add
pop
and
js
test
testl
xor
xchg
pop
inc
loope
xor
jp
fwait
sbb
inc
shl
jmp
sub
test
pushf
sub
es
ror
xchg
lods
nop
iretw
je
adc
inc
jns
xchg
jo
dec
mov
repz
mov
xor
int3
lcall
xor
mov
imul
and
sbb
into
pop
lcall
inc
add
sahf
daa
lret
xchg
loopne
pop
mov
pushf
jmp
in
popa
pushf
dec
ds
bound
fdivs
popa
sub
mov
data16
mov
aas
in
test
push
mov
mov
push
pop
mov
lret
jbe
popf
mov
sub
test
clc
cld
cmc
and
cmc
sarb
push
dec
add
sub
or
inc
test
pop
movsl
adc
inc
mov
rol
fstl
loopne
data16
jmp
push
flds
scas
daa
push
mov
pusha
cmp
or
ljmp
ja
push
pop
sub
lods
jecxz
dec
or
fbld
rclb
xchg
mov
loop
jae
maxps
pop
pop
cmp
rolb
sbb
enter
scas
insl
push
fadds
test
adc
push
fs
cmc
xor
roll
cli
test
loop
enter
fidivrs
ss
pop
sbb
mov
and
xchg
iret
daa
and
pop
sub
in
inc
mov
mov
cmp
dec
test
repnz
inc
ljmp
adc
jmp
loop
scas
push
jno
push
ret
mov
mov
cli
pop
cltd
push
fs
outsb
cltd
sete
adc
je
xlat
cld
xor
pop
test
adc
hlt
out
mov
push
icebp
pop
mov
stos
jbe
pop
cltd
fwait
jo
nop
loopne
inc
ds
or
pop
and
cmp
and
dec
iret
outsb
push
daa
jno
dec
sub
fildl
std
cmp
pop
mov
arpl
sub
sar
sti
pop
movsl
clc
dec
add
cmp
xor
jp
pop
je
imul
daa
add
rcl
je
push
add
dec
test
inc
mov
sbb
pop
in
mov
std
cmp
xor
ds
enter
aam
push
push
jbe
push
pop
and
inc
cmc
movsl
fs
pop
mov
jb
inc
outsb
scas
pop
mov
mov
movsb
xchg
lods
push
sub
adc
inc
stos
je
xchg
pop
jg
or
cmp
push
cmp
pop
rol
outsl
mov
stc
icebp
mov
mov
sbb
lods
add
mov
or
sub
xor
das
ja
mov
dec
adc
mov
mov
mov
cmc
mov
fistps
xchg
sbb
in
adc
clc
cmpsl
cli
push
xor
fs
inc
push
mov
xor
sbb
mov
lods
mov
jo
data16
leave
fs
mov
push
imul
lods
je
test
std
sbb
cmpl
jecxz
adcl
dec
xchg
movsb
pop
jl
jno
push
mov
adc
mov
xchg
outsl
jns
mov
mov
or
push
sahf
les
xchg
les
dec
fisubrs
test
adc
testl
xor
pushf
jns
insb
mov
sbb
outsl
jl
into
in
lods
push
je
gs
shrl
test
jge
mov
push
insb
popf
sbb
repnz
scas
orb
aam
xor
dec
aad
scas
jecxz
popa
rcrb
sub
jecxz
add
lds
sbb
mov
lret
loop
sub
jg
add
nop
aas
test
add
ret
mov
dec
pop
rcrl
cmpb
orb
mov
push
mov
mov
push
mov
fstpt
pop
and
pop
idivl
pushf
cmp
mov
xor
xor
jae
clc
addr16
in
int
mov
inc
cmpsb
cmpsb
scas
cwtl
mov
and
sub
inc
movsb
cmpsl
and
add
stos
rorb
add
ljmp
xchg
and
lret
cmp
mov
mov
jl
out
sub
stc
cltd
in
push
cwtl
repnz
xchg
scas
xor
sub
pop
xor
dec
ds
fs
pop
shlb
sbb
subl
pop
push
inc
ret
cwtl
inc
sarb
bound
cmp
fwait
sbb
add
mov
push
adc
or
arpl
xor
gs
mov
push
in
push
jge
inc
and
ljmp
cmpsl
test
mov
xorb
xor
test
xor
ds
imul
xor
push
lahf
sbb
push
pop
mov
ficoml
std
mov
xchg
idivl
dec
sbb
or
inc
push
add
ds
sar
in
inc
cld
or
cmp
test
shll
je
hlt
mov
dec
adc
lret
stc
popl
mov
dec
add
pop
sbb
fidivrl
cli
dec
cmpsl
mov
ja
std
or
enter
imul
cmpsl
adc
fstp
mov
pop
jp
xorl
ss
loopne
mov
mov
std
pop
aas
inc
jns
lret
jbe
push
test
push
sub
jmp
movsb
out
and
cs
cmp
mov
push
fsts
mov
pushf
daa
fdivs
test
pop
dec
xchg
addr16
fisubs
pop
inc
dec
mov
push
inc
push
push
ds
sub
mov
sbb
jge
jle
and
cs
lock
sbb
aaa
push
ljmp
cs
add
inc
or
mov
jmp
cwtl
popa
jno
mov
xchg
mov
sbb
fsubr
ret
int3
xlat
into
cs
mov
cmp
and
lret
or
loope
fiadds
inc
mov
out
sbbb
and
jle
test
addl
fcomps
inc
bndstx
inc
pusha
fidivs
lods
aam
mov
cltd
hlt
je
imul
or
into
xor
mov
cli
sbb
pop
sbb
mov
ljmp
rep
mov
mull
push
add
xor
dec
ret
fcmovu
out
jb
test
es
mov
jl
bndldx
add
jb
inc
mov
mov
jmp
in
fcompl
fs
adc
inc
scas
inc
mov
push
add
loopne
insl
push
lahf
cmp
xchg
inc
outsl
test
sbbl
int3
mov
xchg
cmpb
cmpsb
jns
imul
in
mov
mov
int
jb
push
test
jg
insb
and
dec
mov
aad
xor
and
xchg
push
bound
jb
iret
lret
and
imul
mov
xchg
inc
fimuls
and
cmp
cmp
clc
pop
fistl
xor
rcll
sub
adc
scas
stc
aaa
bswap
psubsw
in
mov
sbb
imulb
dec
dec
xor
test
cmp
rcrb
loope
lcall
sub
icebp
pop
outsb
pop
int
int
inc
das
cmpsl
sub
jbe
outsb
into
mov
leave
movb
xlat
sub
test
test
sbb
push
mov
fidivrs
pop
movsb
dec
clc
and
push
or
and
in
repnz
fnstsw
popa
call
shll
ss
xchg
sub
in
popf
dec
rcrl
fcoms
dec
aad
adc
or
js
aaa
mov
in
mov
push
mov
mov
jbe
and
mov
in
add
inc
mov
cmp
sbb
xchg
mov
scas
jnp
outsl
add
or
or
jg
test
fcoml
movsl
pop
ret
mov
popa
rcll
jne
dec
sub
mov
andl
jno
and
adc
or
testl
aad
mov
or
jno
xor
mov
lret
xchg
jmp
xor
fwait
jle
lea
xorl
mov
pop
jmp
test
jns
stc
stos
insl
cmp
dec
rorb
dec
and
xchg
fbld
inc
lret
js
and
cmp
jecxz
pop
cltd
mov
inc
or
cmp
sub
inc
sahf
insl
insb
les
fadd
int
cmp
hlt
aas
fs
mov
notl
add
dec
inc
cmpsb
lods
jmp
outsl
mov
add
test
and
ljmp
stos
fnstsw
cmpsl
mov
pop
push
xor
push
mov
or
mov
call
repnz
pop
scas
mov
andl
dec
dec
mov
pushf
lock
push
jo
repz
jae
ljmp
cmp
jp
ret
adc
hlt
pop
shr
jg
mov
mov
enter
sti
jp
mov
negb
clc
leave
adc
hlt
jp
mov
xchg
sub
mov
xorl
sub
es
fwait
lods
inc
scas
adc
adc
scas
xchg
imul
and
insl
in
cmp
cmc
pushf
pop
mov
xor
push
test
call
scas
push
fwait
lock
popa
or
stos
and
cmpsl
scas
and
or
icebp
mov
mov
dec
jns
mov
insl
dec
iret
push
or
cmc
leave
mov
lret
js
jnp
fdivrl
inc
out
jmp
mov
mov
lcall
adc
xchg
lods
sbb
mov
enter
scas
into
cwtl
cli
mov
inc
dec
dec
cmp
out
mov
mov
cmp
jo
push
cld
jb
xchg
lahf
pop
cs
jae
pop
mov
lds
outsb
nop
mov
repz
add
sub
jnp
cwtl
mov
testl
jne
int3
call
daa
repz
xchg
push
inc
dec
aaa
lea
fisubs
add
ljmp
push
and
mov
jb
aad
test
in
test
jg
mov
repnz
xor
call
fwait
stc
test
dec
and
ss
out
jbe
jle
cwtl
and
inc
sbb
test
pcmpgtb
test
mov
bound
shlb
out
je
pop
insb
lahf
dec
add
cmpsb
sahf
push
repz
ja
jbe
enter
pop
and
xlat
sbb
or
push
push
rcrl
mov
sbb
xchg
mov
enter
mov
xchg
pop
cld
nop
outsb
sbb
clc
js
lds
mov
test
mov
jp
push
fldenv
sbb
das
sti
sbb
clc
mov
adcb
inc
aam
cs
push
mov
ret
mov
cld
aaa
scas
fildll
mov
dec
sahf
sahf
not
cmp
inc
pop
fwait
into
cmp
fcmove
cli
pop
adc
nop
pop
jno
cmp
imul
es
pop
xor
push
sub
jp
or
fdivrl
xchg
push
sbb
jp
lahf
inc
sbb
inc
test
jns
addl
inc
mov
movsl
push
mov
int3
stos
xchg
mov
sub
add
iret
lcall
outsl
mov
pop
push
cwtl
jg
mov
lods
cmp
xchg
sub
mov
mov
mov
bound
outsl
fisubl
outsb
loop
pop
mov
xlat
push
mov
push
call
loopne
movl
jp
popa
hlt
aas
dec
pop
enter
mov
and
mov
cmp
adc
mov
xchg
outsl
insl
cli
xchg
or
shr
mov
sub
or
stos
mov
loop
sub
or
aad
pop
push
pop
stc
nop
mov
ret
sbb
sub
or
jmp
mov
flds
jne
out
pop
push
xor
mov
cmp
mov
mov
fadd
fdivrl
dec
push
mov
pusha
push
lods
xchg
push
and
mov
pop
cmp
pop
jle
pop
cmpsl
sub
in
adc
xchg
sbb
push
or
sbbl
imul
jne
sbb
mov
push
mov
push
rcl
jle
aas
gs
cld
stos
outsb
gs
int3
pop
mov
push
sti
test
xchg
cli
sbb
mov
push
daa
stos
mov
adc
push
add
je
push
lcall
lcall
addr16
lldt
xchg
fisubrl
or
out
or
mov
stos
sahf
xor
lcall
addr16
or
push
xchg
add
pop
scas
push
mov
mov
mov
rorl
js
and
out
jb
fstpt
add
sahf
dec
and
sub
outsb
adc
pop
hlt
cmpsb
or
and
mov
mov
cmp
xor
mov
pop
push
fldt
hlt
and
test
adc
out
sub
shll
add
lods
daa
aam
nop
inc
out
push
push
xchg
and
xchg
push
xchg
mov
pop
ret
jl
lods
and
mov
pop
jo
push
pop
aam
mov
xor
jmp
pop
dec
loop
rcrb
cmpsl
ror
push
adc
pop
inc
pop
inc
dec
xor
mov
lret
inc
outsb
and
pop
adc
xlat
sti
iret
xchg
xor
scas
xor
gs
cmp
pop
cmp
popl
arpl
int3
mov
add
cmp
xor
les
pop
fwait
jl
and
popa
xor
pop
fldcw
add
sbb
mov
shll
idivb
xchg
or
mov
cmp
cmp
mov
xlat
jbe
or
iret
mov
loopne
bswap
fidivs
jno
mov
insl
iret
inc
out
xor
dec
stos
jae
pop
or
jno
jg
pushf
push
hlt
mov
pop
mov
pop
in
cmpsl
ret
pop
mov
fsin
pop
call
mov
inc
aas
jns
sbb
in
hlt
movsl
inc
data16
mov
sub
loopne
shl
mov
cli
jno
ss
fucomp
stc
cmc
sbb
pusha
push
push
jp
test
cmp
or
roll
aad
cmp
scas
inc
cmpsl
dec
aaa
and
pop
and
mov
sahf
jb
out
jl
xor
adc
fiadds
adc
mov
jbe
jbe
mov
inc
or
mov
nop
mov
adc
adc
test
mov
push
sbb
imul
sarb
jb
push
mul
cmc
cld
mov
xor
mov
mov
cld
push
iret
inc
icebp
pop
clc
loope
cmpsb
adcb
xchg
hlt
pop
fnstenv
pop
mov
add
mov
sub
in
mov
sub
jno
mov
sub
mov
sbb
add
call
jo
test
popa
shl
inc
inc
mov
pop
adc
lahf
push
add
sub
adc
cs
orb
cmp
addr16
add
mov
in
inc
rol
push
ret
cmp
pop
out
out
ss
jne
into
jne
les
sub
mov
mov
aaa
adc
inc
lret
xchg
sbb
les
int
mov
xorl
es
mov
insl
sbb
daa
jnp
pop
lods
push
dec
pop
pop
pop
cld
loop
adcl
xchg
and
add
fiadds
push
popa
inc
je
add
add
pop
imul
inc
push
outsl
mov
in
jnp
lret
shr
aaa
sar
or
cs
pop
jmp
rcl
popa
sti
repz
ss
cmp
fwait
jns
data16
push
loope
cmpsl
jns
mov
mov
rolb
lds
xchg
ss
inc
sub
pop
cmp
mov
hlt
pop
movsb
push
jge
bswap
xchg
std
mov
jmp
orl
mov
add
mov
adc
inc
das
movsb
test
jno
sbb
addr16
test
pop
iret
es
dec
ja
jg
push
popf
dec
cmpsl
push
jl
pop
mov
xor
jmp
jp
cltd
mov
inc
jle
icebp
cwtl
pop
mov
jb
dec
xchg
jns
jl
inc
jae
ljmp
scas
leave
sbb
xchg
inc
orl
cmp
dec
add
gs
dec
add
and
lret
mov
sbb
sbbl
xchg
rorb
jb
and
fsubs
outsl
in
mov
pop
sbb
lahf
mov
imul
cwtl
jnp
sarb
rol
repnz
icebp
mov
cmc
and
int3
jno
cwtl
std
pop
cld
jb
aam
test
mov
bound
mov
mov
arpl
inc
dec
push
cmp
sbb
and
aas
pop
sti
not
in
xor
lock
sarb
push
int3
mov
push
fnstenv
add
xchg
shrl
sbb
nop
lods
das
add
adc
fisttpll
iret
ja
cltd
push
xchg
call
mov
js
inc
hlt
jecxz
mov
mov
in
jne
mov
lods
mov
or
ret
xchg
adc
clc
mov
test
in
js
inc
lods
ret
loopne
out
shlb
clc
pop
lahf
jae
dec
cmp
xchg
pusha
adc
pusha
add
mov
mov
cmpsl
xor
xlat
xor
xor
xchg
push
aam
daa
push
mov
div
aaa
gs
pop
out
insb
inc
out
mov
lret
or
xchg
jge
cmp
ret
stc
enter
ja
sarb
sub
ror
fisubs
jp
jbe
sbb
sub
pop
gs
ss
loop
repnz
push
aas
lea
js
hlt
pop
loopne
pop
pop
shll
jle
jl
je
adc
inc
scas
xchg
fsubs
test
xlat
mov
push
lret
xor
adc
cmp
aaa
outsl
ljmp
lahf
and
add
int
add
ficomps
pushf
insb
jecxz
movsl
dec
loope
lock
inc
mov
cltd
or
cs
es
pop
scas
add
pop
sub
lret
fidivrs
ss
jge
mov
push
insl
fs
repnz
dec
adc
jnp
push
mov
divb
push
in
add
outsl
gs
inc
setno
lret
sbb
push
jmp
fiadds
cmc
scas
int
mov
inc
fwait
xorps
ficompl
or
jbe
xchg
cli
clc
cmc
loopne
in
dec
mov
ljmp
addr16
cmp
into
pop
jmp
cmp
rorb
xchg
cli
xor
mov
lahf
imul
sbb
aas
pusha
repz
mov
ds
mov
enter
out
repnz
sub
imul
pop
enter
pop
shrl
mov
cmp
jnp
jne
or
mov
int
cmp
shll
clc
iret
fdivrs
outsl
ret
cld
leave
add
sbb
or
or
and
and
and
and
sbb
into
clc
add
xchg
lcall
xchg
ds
fdivrl
test
data16
pop
pop
or
inc
fstp
out
push
inc
das
int3
and
xchg
xchg
sbb
jne
fs
or
cmp
inc
rcrl
roll
aaa
jmp
ret
xor
aas
inc
into
push
xlat
or
mov
pushf
mov
out
mov
jb
push
push
add
repz
enter
push
sbbb
ss
mov
mull
test
mov
out
adc
jl
sub
cmpsl
call
dec
into
pop
loopne
xor
mov
push
test
inc
call
daa
cmp
or
mov
es
add
adc
xor
shl
sbb
sub
fsubrl
mov
js
test
rcl
pop
das
or
out
movsl
or
xchg
push
lahf
jl
jmp
xchg
jno
xor
notb
xchg
adc
sbb
insb
loopne
add
xchg
dec
daa
leave
daa
out
movsb
mov
test
rcll
xchg
mov
inc
fcomi
xchg
lahf
int
enter
sbb
icebp
jbe
dec
cs
push
daa
scas
inc
adc
or
cltd
sub
fs
pop
rcrb
pop
pop
out
call
loope
mov
inc
dec
or
inc
or
in
int
sbb
out
sbb
negl
gs
inc
hlt
mov
mov
pop
call
xchg
push
shrb
pop
jbe
fcmovne
ret
jp
lret
jae
xor
pop
dec
fcomps
pushf
in
xchg
dec
pop
xor
imull
mov
repnz
push
mov
mov
aaa
jecxz
push
lods
popa
mov
rol
inc
movsb
dec
aaa
imul
dec
fists
std
jp
ficompl
or
fbstp
dec
jl
fstpl
xchg
lret
scas
cld
movb
ss
pop
adc
dec
lcall
stos
xlat
mov
nopl
push
mov
inc
daa
mov
je
sbb
or
jno
pop
inc
inc
fs
xlat
jno
jle
pusha
cmp
mov
adc
cmp
push
cltd
stos
fists
les
stos
xor
xor
mov
andb
xchg
xor
jo
mov
or
and
movsb
ret
mov
inc
movsl
xor
dec
roll
xor
je
sub
xchg
inc
fs
cli
jg
loope
lea
lods
push
fwait
sbb
add
push
leave
jb
cmp
lret
daa
pusha
lea
push
out
xchg
mov
pop
push
dec
maxps
inc
mov
sti
adc
ljmp
out
xor
cmp
movsl
subb
push
dec
xchg
jmp
push
aaa
js
pop
sub
mov
or
jno
imul
push
loop
inc
test
idiv
loopnew
sbb
js
sbb
clc
shll
mov
xchg
popa
fidivs
test
cmp
pop
inc
jge
push
inc
lret
pop
jmp
notl
inc
dec
mov
sub
stos
test
and
sbb
mov
cld
cmpsb
and
push
mov
adc
dec
les
xor
es
sub
daa
jg
lret
adc
in
pop
dec
dec
or
adc
push
insl
repz
movsl
jbe
mov
and
add
lcall
dec
mov
push
add
cmp
mov
and
push
fwait
mov
pop
ja
push
sub
lret
jg
sub
xchg
fs
cmp
add
push
dec
pushf
jp
das
movsb
xor
insl
xchg
cli
mov
push
push
ljmp
mov
mov
mov
sahf
sub
inc
in
test
adc
and
push
repz
mov
mov
pop
in
pop
and
mov
fucom
xor
sahf
data16
sbb
ret
hlt
mov
inc
nop
push
aas
rolb
jns
sbb
mov
leave
xor
stos
out
push
je
test
ds
leave
subb
inc
sub
pusha
out
add
cmpsl
or
ucomiss
add
jbe
pop
push
xchg
loopne
inc
cld
jne
cmp
icebp
cs
jb
and
decb
sbb
subl
mov
ljmp
movsb
xchg
popf
nop
adc
test
pop
push
cmp
mov
cmp
push
mov
movsb
daa
push
iret
push
fcomps
xor
pop
jecxz
pusha
mov
mov
subb
xchg
mov
mov
cld
mov
xchg
in
lret
push
jge
push
out
fists
jg
fdivl
push
insb
stos
and
add
jg
push
repnz
or
daa
adc
in
pop
adc
push
mov
cmp
outsl
add
adc
fists
jmp
dec
pop
stos
jmp
xchg
ss
xor
push
fistl
pusha
cld
inc
test
dec
daa
and
pop
sbb
and
xchg
test
xor
mov
js
test
cmp
arpl
pop
inc
test
pop
inc
bound
fs
mov
insb
rcrl
loopne
inc
sub
xchg
xor
push
repnz
mov
pop
rcrb
lcall
mov
icebp
rolb
sub
xchg
lock
pop
mov
fmull
push
add
cmp
fucomp
stos
add
xchg
test
lcall
mov
mov
clc
mov
mov
rcr
adc
pop
pop
inc
pop
and
ljmp
mov
lock
movsl
mov
cli
mov
adc
test
ljmp
mov
and
or
repnz
pop
inc
shrb
mov
mov
pop
mov
sbb
leave
scas
adc
cwtl
dec
mov
fistpl
es
movsb
inc
or
push
xchg
fildll
jo
outsl
scas
cmp
aam
roll
shlb
pop
jg
out
pop
pushf
add
pop
popa
adc
cltd
loop
xchg
and
inc
xor
mov
fdivrp
sbb
jns
stos
add
or
clc
pop
jge
into
fs
leave
imul
jge
jge
xchg
jns
cwtl
daa
and
addr16
add
xchg
sub
fsubs
sub
out
dec
cli
lods
and
cmp
daa
cmp
sub
dec
xchg
or
flds
inc
sahf
orb
pop
and
ss
in
xchg
or
pop
mov
push
shrb
mov
push
loope
adcb
lods
jns
inc
pop
xchg
lods
stos
and
fwait
clc
rcll
ret
sti
pop
mov
inc
pop
and
movsl
mov
pop
sti
enter
sub
sub
notb
mov
cmpsl
mov
sub
adc
mov
addr16
out
push
scas
test
add
jae
pop
jecxz
pop
sub
cmpsl
inc
jp
dec
inc
lods
xor
jle
jmp
xchg
pop
jns
xor
xchg
mov
out
push
cmc
cmp
aad
push
mov
inc
mov
mov
sarl
lods
mov
cmc
repnz
stos
dec
cmp
pop
push
pop
push
mov
sbb
sub
adc
push
sahf
lcall
jl
pop
lea
das
mov
and
jno
imul
jo
subl
adc
mov
mov
mov
pop
add
scas
cld
lods
mov
push
adcb
or
adc
ljmp
in
mov
jl
xorl
insb
inc
stos
or
sbb
push
mov
or
and
sbb
out
push
mov
popw
mov
mov
sbb
ret
sub
ret
dec
mov
orb
jns
test
xchg
pop
add
pop
not
movsl
fsub
or
sar
cmpsb
rcrl
pushf
in
sbb
aas
lods
aam
inc
xor
ret
adc
js
cmpsl
mov
lock
cs
loopne
ja
testl
in
sbb
mov
sub
or
adc
cmpsb
cmp
or
shlb
in
lahf
ja
mov
popa
mov
je
add
xor
pop
ret
push
pop
nop
inc
dec
pop
out
divb
adc
dec
js
mov
push
mov
push
repz
sarb
cmpsb
insb
add
scas
jae
jg
lods
mov
sahf
sahf
push
daa
inc
xor
adc
sbb
or
mov
dec
xchg
or
insb
add
xorl
or
test
inc
cmp
or
add
xor
push
cmp
loop
pop
cmpb
sti
imul
xchg
mov
mov
cmp
mov
nop
mov
aam
cmpsl
lret
fcompl
cld
pop
inc
mov
jne
stc
push
or
mov
insb
arpl
test
cmpsl
cmpsl
pop
adc
sub
rolb
fimuls
dec
xchg
or
hlt
daa
ror
mov
aam
bound
insb
out
lods
ljmp
cmp
push
sbb
sub
jns
cmp
mov
xchg
jecxz
gs
in
push
jo
ss
mov
mov
lret
pop
mov
cmp
sub
pop
std
cmp
and
fidivs
xor
mov
push
inc
xor
iret
xchg
loope
movl
pop
mov
outsb
sub
fdivrl
stos
gs
sub
adc
and
pop
pusha
jb
sub
mov
mov
mov
jne,pn
push
jle
mov
into
outsl
fldcw
ss
cmpl
mov
push
cmpb
nop
add
sahf
or
icebp
call
xchg
pusha
jge
lea
cs
imull
in
imul
gs
mov
xchg
clc
jmp
das
adc
jo
push
fmuls
rolb
sub
xchg
mov
fst
pop
lods
cld
add
ljmp
in
iret
mov
pop
pushf
out
in
ljmp
cli
fidivrl
dec
push
pop
mov
out
aaa
outsb
cmp
sbb
mov
icebp
sti
outsl
dec
in
aam
call
clc
dec
sbb
dec
gs
cltd
jb
jg
xchg
adc
xchg
xlat
mov
call
inc
loop
inc
decl
push
in
cmp
gs
or
jno
imul
mov
mov
pop
xchg
xor
in
cmp
rorl
xchg
sbb
mov
sub
add
xchg
popa
cmp
sub
push
push
push
sbb
loop
push
xchg
jnp
insl
sarl
xchg
inc
lret
adc
add
sarb
fistpl
shlb
and
and
rorl
pop
pop
adc
movsb
pop
cld
sahf
out
jb
shlb
mov
negb
jge
and
repz
call
or
fadds
movsb
mov
int
jb
mov
arpl
and
inc
cmp
inc
adc
sbbb
or
aas
xchg
clc
dec
into
cmp
xchg
push
lret
cmpsb
pop
jl
sti
jge
pop
jp
outsl
faddl
fs
xor
cmp
inc
pop
outsl
sti
push
dec
cmp
std
push
sbb
jl
xchg
in
hlt
stos
pop
or
jle
add
add
repnz
bound
test
jbe
mov
testb
xlat
mov
mov
leave
mov
push
loop
and
xchg
jmp
hlt
mov
push
call
or
test
loop
in
sti
cwtl
arpl
jbe
stos
cwtl
arpl
aaa
pop
stos
mov
fucomip
daa
adc
xchg
sbb
sub
xchg
push
lea
inc
cmp
jnp
out
dec
out
shrb
and
dec
je
mov
in
outsl
sbb
push
jae
addr16
mov
xchg
or
clc
jno
mov
inc
xor
out
mov
push
stc
jae
jb
push
xchg
or
ljmp
mov
imul
repnz
clc
mov
pop
adc
sub
add
inc
cli
ret
xchg
sub
xlat
and
bound
clc
add
xor
xlat
lret
lcall
out
push
add
andl
jle
pop
cwtl
inc
addl
cwtl
jb
mov
xor
iret
sbb
call
mov
test
mov
jne
jecxz
pop
fdivl
sbb
aad
aad
sbb
sarl
in
jg
cmp
or
and
push
and
and
rcrl
adc
ficomps
xchg
inc
int
adc
fstl
fildll
xchg
popf
sahf
inc
outsb
pushf
jne
fwait
pop
cmc
xlat
les
dec
cwtl
dec
je
lret
out
jmp
je
or
pushf
xor
dec
and
ret
cmp
sub
push
lahf
aaa
jno
movsl
std
mov
xchg
mov
mov
inc
shll
adc
out
sub
dec
clc
mov
arpl
arpl
ret
hlt
mov
mov
lds
xchg
mov
push
sbb
inc
inc
sti
icebp
int3
sub
add
push
fs
out
xor
imul
add
in
push
jbe
pop
sbb
adc
inc
mov
sbb
pop
cs
fsubrl
dec
aam
mov
daa
sbb
push
sub
sub
jp
add
push
ret
mov
outsl
adc
mov
and
lahf
mov
cmp
sbb
jmp
and
insb
mov
push
xchg
mov
es
es
jbe
pop
inc
aam
pop
and
sbb
mov
mov
lock
mov
pushf
cmp
and
adc
and
adc
pop
and
xchg
sub
push
ja
pop
test
fdivrs
mov
sub
jl
ss
lods
pop
jb
icebp
int3
inc
fildll
inc
mov
or
sub
mov
in
pop
fimuls
stc
pop
dec
imul
subb
ret
lret
xchg
mov
mov
xchg
inc
mov
add
jle
mov
lret
fcoms
lret
insl
test
fisttps
cwtl
pop
gs
aaa
fst
sar
leave
mov
or
inc
mov
and
arpl
push
push
in
inc
sbb
test
stos
cwtl
loopne
clc
push
in
shl
sub
xor
dec
fsubrp
mov
xchg
inc
dec
sbb
jmp
out
sti
add
enter
nop
inc
pop
add
push
lcall
sti
push
ljmp
add
fildll
cmpsb
adc
orl
sbb
lea
add
jbe
mov
lcall
mov
xchg
pop
xchg
je
mov
push
ret
or
inc
addl
or
lods
movsb
int
ficoms
mov
xchg
push
push
push
lods
xchg
out
sub
inc
je
js
int
xchg
addr16
sti
inc
xor
ret
push
push
jno
push
iret
arpl
push
cmpb
popa
mov
inc
mov
sub
sti
cs
sarb
push
ss
daa
fisttps
js
fidivrl
and
movlps
and
inc
sbb
push
jmp
or
sbb
decl
xchg
or
mov
push
hlt
sub
or
addr16
rol
fildll
out
nop
mov
mov
adc
cmp
out
cli
nop
cmp
xlat
enter
push
adc
inc
mov
out
jbe
iret
mov
arpl
mov
or
jns
sbbb
add
or
dec
cmpsl
call
add
sub
aad
scas
sbb
int3
dec
xor
fstpt
dec
adc
dec
decl
mov
mov
test
mov
ret
inc
sbb
jmp
cwtl
imul
imul
add
mov
mov
add
sub
sti
xor
dec
xor
add
jmp
pop
inc
pusha
nop
ret
icebp
pop
pop
clc
enter
mov
mov
xlat
arpl
icebp
inc
ja
sub
mov
and
cmpsb
pop
add
js
nop
dec
and
jmp
ret
insb
rolb
cmp
stos
cmp
inc
adc
addl
jle
jne
scas
call
mov
xchg
cmp
inc
mov
and
lods
fdivs
inc
xchg
out
push
clc
inc
adc
popa
lods
mov
cmp
adc
mov
inc
mov
mov
pop
popf
xorb
fnsave
test
xorl
adc
movsl
aam
int
inc
je
or
je
dec
movsl
fwait
cmp
mov
cltd
mov
xchg
mov
icebp
sbb
jno
leave
repz
mov
mov
inc
jmp
sbb
add
pushf
push
sub
mov
das
enter
icebp
rcrl
add
mov
dec
idivl
cs
jmp
sub
scas
push
sbb
mov
push
inc
xorb
xor
cmp
test
test
sub
sub
aaa
and
mov
xor
dec
sub
ret
push
or
add
addr16
out
cmp
pusha
stos
xchg
into
adc
insb
shr
jnp
jmp
mov
mov
ret
adc
test
push
pusha
xor
in
in
insl
inc
mov
and
xlat
sbb
or
daa
fs
mov
in
aam
in
insl
sub
xchg
clc
repz
cmp
push
xor
out
sbb
scas
les
fiaddl
mov
imul
gs
rcrl
xchg
cmp
test
push
loope
cmp
inc
bound
pop
dec
es
fnstsw
pop
and
fwait
mov
test
sub
out
jecxz
pop
inc
out
lods
jmp
leave
cmp
mov
nop
cmpsb
test
call
sbb
stos
clc
pop
js
inc
addb
push
bound
adcb
lods
ljmp
test
roll
mov
jmp
repnz
mov
jnp
jne
fidivrl
fsubrl
jne
test
stos
push
arpl
mov
xchg
jnp
fimuls
push
sbb
test
inc
imul
or
rorb
push
or
out
jecxz
pop
mov
clc
jl
mov
cmp
fs
lea
and
xchg
call
pushf
jo
aam
mov
std
xchg
cld
inc
pop
mov
add
jb
sub
bound
jno
fwait
push
dec
int
icebp
js
ficompl
notb
push
pop
jne
insb
xorb
es
or
cmp
jb
mov
sbb
mov
rol
or
out
push
out
jae
jnp
dec
stos
jne
fcmovb
mov
push
and
jnp
push
insl
imul
js
dec
outsb
adc
xor
nop
or
pusha
jg
cmp
xor
jmp
xchg
mov
xor
jecxz
cmp
xor
add
fdiv
mov
ret
xchg
data16
mov
xchg
out
rcrl
int
mov
fbld
cmp
xchg
ret
jns
xor
fmul
adc
jle
out
shrl
pop
leave
fstps
inc
mov
sub
orl
scas
aaa
bswap
fsubrs
cmpsl
leave
adc
sub
mov
mov
enter
pop
in
inc
add
movsb
pushf
rep
fsub
xchg
cltd
out
rorl
sbb
xchg
or
sbbb
adc
add
sub
cmp
loope
fs
pop
sbb
jp
mov
sbb
mov
enter
mov
adc
jmp
jle
es
inc
pop
pop
sub
pop
pop
out
mov
mov
ss
inc
insb
insb
out
push
fcmovne
pop
mov
pop
add
or
mov
fs
pushf
xor
into
adcl
xor
cmp
pop
cmp
dec
clc
xchg
cmp
repnz
push
sti
lea
add
xchg
dec
enter
sbb
xor
mov
and
ds
xchg
push
out
das
clc
int
fcmovu
aaa
xor
pop
pop
loop
jne
jo
div
mov
dec
xchg
shrb
push
out
push
ret
adc
mov
pop
shlb
scas
cmpsl
sbb
adc
test
add
loope
add
sti
xorl
mov
lods
test
mov
push
push
inc
mov
fwait
dec
fdivrs
cmp
mov
sbb
shlb
test
jp
xchg
push
ljmp
in
xchg
aas
leave
cmc
movsb
je
ljmp
add
cmp
sub
jno
xor
arpl
adcl
enter
bound
adc
cli
cmp
lods
scas
loope
lock
sbb
and
cltd
mov
mov
pop
cmp
mov
lcall
cmp
nop
pop
adc
pop
push
sbb
rorb
das
in
mov
mov
or
push
sub
mov
std
stos
lret
dec
mov
dec
mov
push
mov
or
xchg
fdivrl
cmp
data16
push
cmpsb
jl
mov
jne
dec
mov
cmp
in
loop
aam
and
mov
pop
fidivs
cli
cmp
dec
pop
stc
mov
fsubrl
jno
shlb
sti
test
out
fs
add
sub
pop
jo
cmp
xchg
cmp
and
imul
sub
rorb
les
out
and
xchg
test
sub
jmp
dec
cltd
adc
add
inc
mov
xor
hlt
sub
fists
sub
or
gs
cmp
js
stc
add
mov
outsb
xchg
leave
mov
pop
or
mov
mov
popa
cmp
lds
cmc
notl
scas
in
in
roll
add
push
ljmp
in
scas
adc
outsb
lock
mov
test
in
icebp
add
inc
fidivrs
xor
cmp
jmp
int3
xor
sahf
lahf
mov
sbb
xor
int
mov
dec
sub
inc
in
into
inc
icebp
call
and
mov
test
fs
cmp
push
dec
mov
fisubrs
pop
xchg
jl
stc
cmpsb
xchg
lds
add
mov
jecxz
popa
int
add
and
and
mov
cmp
or
and
insb
mov
mov
pushf
aad
rolb
rcl
mov
pop
fs
fcompl
ret
scas
movsb
mov
stc
cld
sub
sub
sbb
scas
inc
aaa
push
les
push
aad
lods
pop
es
cmpsb
jp
nop
pop
push
fucomp
das
sub
incl
pusha
cmp
lcall
int3
xor
int3
ljmp
imul
pop
pusha
in
mov
fwait
jmp
into
cmp
pushf
add
jle
outsb
pavgw
pop
sub
sbbb
xor
jno
mov
loope
cli
sub
aam
mov
mov
addr16
cmc
fwait
addl
push
sarl
pop
loope
adcb
pop
loop,pt
cmp
mov
imul
add
test
or
sar
ja
jp
jns
js
loop
jecxz
bound
push
ds
in
mov
push
push
pop
and
pop
shll
stos
jmp
cld
clc
lods
mov
inc
mov
adc
sbb
or
test
jg
shr
xchg
and
fwait
stc
jmp
xor
inc
jb
fdivp
xchg
shlb
pop
inc
sbb
jbe
pusha
sub
push
negw
pop
subb
mov
xorb
addb
pop
into
orl
pop
pop
push
cmp
fldenv
shlb
mov
movsb
jo
insl
decb
dec
imul
cmp
jo
leave
fisubrs
mov
pop
in
fwait
orb
nop
dec
pop
outsb
cmp
or
push
pop
fdivp
xor
cmpsb
lret
pop
mov
loope
lds
mov
add
inc
pop
xor
inc
ret
cmp
pusha
stos
or
gs
outsl
das
xor
push
xchg
jmp
inc
inc
enter
inc
adc
std
insb
jns
mov
and
out
mov
ds
in
pushf
clc
aad
int
sti
aas
inc
push
mov
std
lcall
xchg
jbe
and
sti
xchg
cltd
fsubl
cmovae
scas
mov
or
outsb
aaa
aad
push
sbb
pop
lea
mull
jb
inc
insl
adc
adc
push
and
mov
jg
add
sbb
and
adc
xchg
cmc
mov
mov
sti
ljmp
in
xlat
pop
popf
decb
cmc
or
dec
incl
jmp
xchg
cld
into
xchg
dec
fnstsw
aas
pop
adcb
add
cmp
movsl
jmp
mov
stos
sub
mov
mov
add
adc
add
in
xchg
push
movsl
les
in
rorl
pusha
or
loop
scas
xor
xor
mov
fidivs
fnstcw
cs
addr16
jae
mov
jle
cmp
sbb
or
pop
stos
scas
movsl
cmpsb
inc
inc
insb
nop
jp
addr16
inc
mov
jle
mov
mov
mov
fistpl
adc
xlat
xchg
pop
hlt
rorb
cmp
mov
mov
mov
cmpsb
add
inc
test
cltd
icebp
or
fwait
jbe
jne
data16
inc
ja
lahf
adc
jb
mov
in
test
roll
push
cmc
cmp
ret
call
add
jmp
dec
sbb
cmp
inc
fcomps
fwait
pusha
sub
stos
xchg
imul
push
sub
ret
push
mov
pop
ja
add
mov
arpl
mov
les
mov
jns
loope
repz
xchg
cmp
jnp
dec
movsb
sub
cli
push
mov
pop
or
test
outsb
data16
ja
or
hlt
mov
aaa
fdivs
and
mov
inc
or
mov
shlb
mov
scas
mov
and
dec
scas
pop
lea
lret
dec
sbb
mov
mov
inc
mov
sbb
add
out
adc
push
nop
cmc
sbb
mov
das
clc
pop
jmp
push
mov
pusha
ss
faddl
inc
std
mov
je
cmp
cli
data16
pop
inc
sbb
into
xchg
and
mov
in
mov
call
xchg
pusha
xlat
mov
jnp
adc
inc
leave
mov
fwait
cli
mov
jle
adc
insl
sub
das
lods
ljmp
push
and
or
inc
cmp
notb
xchg
mov
lcall
fiadds
push
andl
popf
jbe
jne
inc
cwtl
fcomp
out
push
sub
pusha
xor
subb
in
cmp
stos
sbbl
mov
fcoml
cmp
dec
xchg
ss
mov
out
addr16
ret
or
mov
lret
sbb
orl
mov
mov
mov
cltd
ret
clc
mov
stos
push
in
dec
subl
and
rcr
movsb
js
sub
mov
xor
lret
das
push
mov
push
les
out
repz
add
inc
lock
lar
data16
mov
push
jle
push
push
addl
dec
or
aam
mov
mov
and
movsl
enter
rolb
cmp
mov
xchg
js
mov
jbe
add
ficomps
imul
test
les
mov
repnz
pop
add
sub
call
add
ret
in
mov
cwtl
jb
je
loopne
ret
xchg
jl
pop
stos
call
sbb
pop
jp
pop
rcl
test
xor
fdivs
outsb
xchg
enter
xchg
mov
nop
jbe
lock
mov
inc
testl
rcll
outsb
fisttpll
mov
pop
add
fsubrs
shr
aas
dec
mov
pop
or
out
cmpsb
xor
push
mov
inc
and
fwait
cmp
and
push
mov
sti
sbb
pushf
jl
cmp
push
sbb
dec
test
cs
push
repz
jb
ds
pushf
aaa
test
pop
into
nop
enter
fsubrs
or
aam
inc
out
mov
xchg
fnsave
popa
pusha
scas
icebp
lcall
dec
add
push
pop
push
fcoml
loopne
inc
push
mov
dec
add
or
aam
mov
mov
push
stos
xor
mov
pop
or
lds
nop
mov
jno
mov
sbb
adc
inc
loopne
adc
lea
out
push
int
pop
mov
fildl
inc
cltd
inc
push
inc
les
add
mov
mov
mov
inc
mov
sbb
dec
xchg
rcr
xchg
sub
fidivrl
mov
push
mov
pop
mov
xor
cli
sarl
inc
es
in
scas
mov
jle
cwtl
pop
enter
js
xchg
insl
and
pop
cmp
mov
lods
stos
xchg
jae
pop
in
stos
mov
dec
sub
dec
mov
adc
xchg
pop
nop
cltd
xchg
push
lret
jl
mov
iret
icebp
xchg
xchg
adc
leave
pop
sar
inc
jp
fldl
loop
dec
xchg
mov
inc
lods
in
cwtl
std
mov
and
xchg
flds
jle
xor
ss
and
jmp
sbb
and
cs
mov
jb
repz
lods
movsl
sbb
cmp
test
sub
xchg
lahf
loop
inc
test
inc
xchg
jp
fnstenv
jae
test
cmp
popa
xchg
ret
imul
xlat
jmp
dec
getsec
imul
arpl
lea
pusha
sub
push
aas
mov
mov
cmc
inc
jle
icebp
cmpsb
pushw
push
popf
mov
stos
mov
adc
jecxz
add
sbb
mov
stc
adc
jne
popf
test
fstl
jl
push
mov
lret
sub
push
dec
ljmp
inc
xor
inc
in
stc
adc
pop
inc
jle
mov
inc
mov
or
clc
repnz
lret
aam
or
enter
xchg
cmp
int3
je
push
mov
dec
cltd
das
adc
ret
pusha
rcl
mov
mov
lahf
clc
arpl
xor
jl
sbb
ja
mov
mov
push
popa
mov
faddl
adc
push
hlt
mov
mov
lock
adc
mov
pop
sub
les
ret
add
xchg
xor
cmp
inc
jl
pop
or
xchg
jnp
mov
jg
idiv
and
lock
dec
adc
movsb
adc
test
push
bound
xor
jbe
aad
or
push
xchg
mov
roll
and
out
cltd
inc
mov
popf
dec
push
inc
add
paddusb
pop
mov
lods
in
add
jne
aaa
in
mov
xchg
pop
adc
dec
jno
xor
iret
jno
es
aad
jmp
int3
bound
push
pop
push
enter
inc
lret
ds
das
ss
pop
sahf
out
push
or
in
call
cmpsl
int3
bnd
aaa
outsb
popf
das
ljmp
rclb
push
pop
dec
mov
test
jecxz
jge
orb
xor
xor
sub
ja
push
jo
popf
dec
push
adc
sbb
xchg
xor
stc
adc
cld
bnd
push
mov
sar
push
aad
mov
insb
mov
aaa
cli
mov
xchg
xchg
int
popa
sahf
push
test
int
inc
dec
or
cmpsb
dec
rorl
test
fidivrs
mov
pushf
mov
popf
mov
test
or
xchg
xchg
out
orb
sub
xchg
jge
arpl
in
xchg
cmp
mov
rorb
xchg
add
xor
push
js
dec
mov
adc
add
icebp
mov
xorb
add
xchg
jle
mov
js
rolb
rcr
dec
jle
ret
lock
loope
aaa
push
rclb
loopne
imul
dec
push
adcb
cmp
pop
dec
jmp
sub
divb
jnp
adc
xchg
loop
das
scas
icebp
lret
fsubrp
inc
lahf
stos
push
call
mov
test
xor
cmp
jb
sub
sbb
jns
outsb
ror
xchg
mov
dec
adc
xor
mov
sbb
fimull
clc
loopne
in
movsl
stos
cltd
iret
and
mov
nop
mov
sub
aad
aas
shlb
iret
bound
mov
test
adc
jbe
aam
and
dec
or
adc
in
adc
out
fchs
lret
pop
scas
mov
in
adc
bound
popa
loope
cmp
mov
repnz
lods
inc
lods
pop
icebp
cmp
outsl
mov
and
cmp
pop
add
pop
inc
lahf
mov
cmpsb
loope
cmp
pop
jae
fsubrs
shll
dec
adc
das
sbb
gs
gs
cmpsb
push
jge
xchg
pop
leave
ljmp
push
sbbl
in
bound
in
mov
pop
jge,pn
pop
pushl
xor
stc
mov
jns
call
mov
and
or
inc
pusha
sbb
mov
fdivrl
sbb
adc
out
mov
mull
inc
cli
cmp
push
push
popa
mov
pop
subb
stc
sbb
scas
xor
push
outsb
je
jno
inc
mov
pusha
jmp
gs
shll
repz
cmp
jg
popf
rolb
or
dec
test
dec
test
mov
cmc
js
leave
idivl
sub
jnp
adc
xchg
ja
stos
popf
jbe
mov
and
in
push
jp
cmc
mulb
data16
jne
add
sub
adc
imul
dec
rolb
pop
pop
fwait
dec
sbb
out
scas
insb
into
pop
pop
lcall
insb
pushf
ljmp
orl
cmp
inc
out
mov
xor
loop
xor
popa
jmp
mov
addl
mov
sub
dec
popf
outsl
out
repz
jmp
push
pop
movsl
out
addl
out
jp
mov
loopne
sti
icebp
jns
das
push
add
mov
mov
dec
in
es
push
cwtl
ljmp
popa
mov
fsubs
sbb
repnz
stos
out
mov
add
sub
pop
jge
out
inc
rcll
xor
jmp
rolb
dec
dec
cmp
xor
rcl
es
lahf
mov
sbb
out
pop
adc
sub
hlt
sub
push
xchg
push
fcompl
and
mov
push
scas
push
cmp
aas
sbb
push
cmpsb
inc
mov
fildll
and
xor
xchg
pop
mov
sub
daa
mov
lret
mov
sub
pop
mov
push
data16
dec
jae
cmp
js
mov
imul
es
shll
dec
fcmovb
push
pop
loope
bound
hlt
arpl
xchg
fcomps
sti
stos
mov
movsb
repnz
sbb
add
push
xchg
fstl
loopne
mov
cld
lds
jg
mov
pop
cltd
and
sbb
mov
adc
add
push
popf
jmp
dec
mov
or
mov
adc
mov
stos
ljmp
mov
add
xchg
or
jno
mov
jmp
pop
outsb
insb
and
aas
orl
dec
add
jle
insl
push
les
xchg
add
movsb
repz
xchg
cmp
cmpl
clc
ret
dec
jmp
and
out
out
cmp
mov
inc
mov
jbe
popf
mov
fstl
iret
pop
movsl
aaa
and
pop
mov
xor
out
iret
data16
sahf
adcb
xchg
pusha
sbb
clc
mov
sub
inc
pop
dec
ret
fcmovne
xor
notl
nop
mov
sbb
ljmp
cmp
icebp
movsb
test
or
movsb
jle
push
in
out
add
js
adcl
gs
cmp
xor
aaa
in
mulb
dec
mov
leave
inc
xor
mov
mov
out
or
jl
dec
insl
cvtpi2ps
add
xlat
mov
inc
in
lods
popa
or
xor
pop
int
mov
mov
icebp
sbb
push
push
arpl
stc
incb
or
sbb
movsb
iret
mov
xor
sbb
sbb
fdiv
cmpsb
repz
rcrl
push
mov
mov
push
stc
or
add
dec
add
and
fld
fistpll
inc
inc
mov
lcall
mov
sbb
jmp
sbb
pop
in
or
pop
cmp
ss
mov
fimuls
xor
jae
jbe
int3
mov
push
jnp
lcall
adc
xchg
adc
pop
xor
ds
aas
lahf
call
jns
stos
icebp
pop
int3
jge
add
clc
dec
pop
jle
jne
dec
jae
loop
jmp
fwait
ss
iret
cmp
data16
push
repz
xchg
lock
xor
popf
xor
aad
sahf
inc
push
sub
ds
sub
cmp
fsts
aas
mov
lock
pop
insb
add
cmp
pusha
sub
out
mov
adc
bound
leave
push
xchg
sub
inc
adc
dec
cld
xor
cmp
cmc
test
dec
xchg
dec
sarl
mov
cltd
pop
pop
sub
sbb
movsl
jo
xchg
add
pop
stc
ds
ficomps
das
push
or
in
xchg
jno
sbb
in
inc
cmpl
cmp
dec
shll
cmp
negb
add
pop
or
je
lret
sarb
into
mov
ljmp
movsl
fisttpl
or
enter
mov
push
out
jo
int3
pusha
popf
mov
push
outsb
jecxz
mov
out
insb
jmp
gs
int
incl
mov
fsubp
mull
inc
mov
add
sbb
stc
inc
mov
les
out
pop
jns
pushf
xorl
mov
iret
mov
repz
in
inc
ds
and
jns
sbb
push
sub
xor
adc
sarb
das
pop
popf
push
mov
xor
push
dec
inc
cld
aaa
mov
jmp
roll
xchg
lods
out
add
mov
outsb
movsb
out
rolb
mov
repnz
cmpsl
and
push
stos
cmp
cmp
xor
out
mov
inc
add
es
lods
mov
add
mov
aad
sbb
sahf
jb
ljmp
inc
cli
loopne
outsl
js
out
push
adc
mov
xchg
repz
pop
xor
arpl
roll
enter
sub
dec
lret
and
inc
dec
push
adc
mov
shrb
sub
adc
xchg
xchg
cmp
aaa
iret
push
cmp
ss
std
lds
push
cmpsl
sbb
jge
push
stos
and
sub
mov
rcrl
pusha
inc
rcrb
mov
add
inc
sahf
mov
sahf
lods
in
divps
jmp
xchg
jns
push
mov
adc
pop
xchg
mov
das
xchg
fadd
sub
and
fmull
sub
lcall
rcl
ja
adc
inc
jg
adc
enter
sbb
dec
das
rorb
test
ret
mov
ljmp
out
hlt
pop
xor
mov
jle
lea
sub
mov
mov
ds
add
xor
pop
sub
adc
mov
pop
fildl
sub
pop
push
psllq
add
dec
mov
ja
sbb
nop
add
mov
into
mov
dec
lock
mov
rcrb
xchg
mov
xor
fidivrl
add
adc
or
push
push
mov
inc
and
cmpsb
mov
sti
enter
inc
mov
sbb
add
and
rcll
into
outsb
int
push
shrb
cmc
imul
enter
outsb
add
adcl
inc
xor
push
cltd
or
sbb
add
jae
das
movsb
fwait
loopne
dec
std
xchg
dec
inc
filds
cld
and
aaa
insb
push
cmc
and
cmp
adc
das
mov
or
insb
and
pop
ret
sbb
ss
pop
ret
adc
push
pusha
and
jmp
jne
outsb
cli
out
loope
dec
pop
adc
enter
popf
dec
jne
sub
stos
pop
and
int3
inc
out
std
movsl
unpcklps
cmpsl
xorl
push
icebp
mov
cmp
xchg
nop
rorl
in
adc
mov
push
sub
sub
lret
adc
mov
push
add
adc
in
dec
sub
shll
mov
aas
sbb
mov
out
and
dec
jbe
pop
cltd
cmp
push
xchg
mov
out
daa
cmp
fwait
lds
adc
and
shrl
out
in
addr16
mov
jbe
pop
aas
sub
add
decb
sti
roll
mov
add
sbb
mov
shll
xchg
stc
sbb
out
cmp
in
push
into
and
mov
xor
cwtl
in
sarb
pop
add
dec
xchg
icebp
aad
out
and
mov
scas
push
jmp
dec
ljmp
nop
imul
fimull
sub
inc
adc
in
mov
mov
push
mov
mov
movsb
mov
xor
add
sahf
or
out
mov
loope
push
push
pop
sbb
fs
xor
mov
sub
dec
mov
push
insl
imul
jne
ret
mov
jae
jnp
sbb
mov
mov
xchg
addl
inc
adc
push
out
stc
enter
and
pop
and
jp
stos
out
bound
adc
mov
movsl
inc
aam
in
popf
mov
repz
cmpsb
pusha
sbb
stos
leave
pop
mov
mov
cmc
leave
leave
mov
push
mov
std
mov
iret
add
adc
rcrl
sarl
lret
repz
divl
icebp
leave
mov
push
out
fsubs
pop
stos
jp
stos
inc
sahf
lds
int
xchg
or
xchg
lds
call
jle
adc
pop
pop
nop
sub
sbb
dec
sti
subb
mov
add
fdivrl
fwait
add
jl
ja
inc
fbld
popf
mov
mov
pop
popf
xchg
fisubrl
pusha
popfw
push
sbb
pop
cmpsl
jne
and
xor
stos
icebp
mov
js
xchg
icebp
cmp
mov
movsb
or
gs
in
adc
movsb
jle
lahf
mov
cmp
jne
lret
in
ds
pop
adc
jno
jb
imull
inc
test
adc
mov
outsb
jns
inc
jo
mov
iret
inc
repnz
or
push
adc
push
cmp
sbb
mov
push
fidivs
xor
mov
mov
aaa
jmp
decl
ja
sub
xor
cmp
aad
sub
es
in
aaa
or
insl
popa
psadbw
mov
jmp
pop
xlat
xchg
cltd
jno
sub
push
xchg
adc
pop
scas
add
inc
jne
fistps
js
fstps
loopne
or
outsb
push
arpl
jae
gs
lods
cmpb
mov
enter
icebp
xchg
aam
push
mov
aad
sar
rol
pop
push
or
in
in
xchg
iret
xchg
cmc
push
cld
sbb
ret
cmp
xor
jp
or
les
push
data16
pop
inc
popa
gs
into
jnp
and
mov
push
iret
jmp
dec
jns
loopne
orb
sub
sub
int
loopne
fisttps
into
sub
mov
push
mov
xchg
adc
add
xchg
das
sbb
out
int3
hlt
inc
sub
lods
jle
in
cmp
mov
xor
mov
sbb
hlt
test
push
push
popf
les
and
pop
and
jge
scas
xlat
fisubs
xlat
out
call
imul
pop
fcompl
clc
das
out
mov
in
sbbl
xlat
inc
mov
ja
sbb
sbb
inc
movsb
jp
sub
jle
fwait
sarl
scas
mov
xorb
or
ret
pushf
sub
pop
cmp
jne
int
adc
inc
test
incl
rol
pop
in
cmp
mov
inc
loope
loopne
lea
fs
mov
arpl
pop
lcall
dec
out
xor
xchg
adc
push
add
mov
repz
adc
pushf
push
in
mov
jne
lret
or
sub
orl
jge
jbe
jge
mov
mov
loop
jmp
jb
or
into
lods
cwtl
mov
xor
cli
xchg
or
mov
nop
scas
mov
push
jle
adc
sarl
inc
sbb
mov
cmp
or
push
push
xorb
pop
in
rcll
aad
dec
rcll
in
in
incb
pushf
pusha
not
outsl
add
cs
push
mov
push
add
cmp
mov
add
nop
lcall
fcmovne
movsl
xchg
cmp
int
xchg
popa
out
mov
shrl
jmp
rol
mov
sahf
mov
add
in
sub
xchg
inc
hlt
pop
hlt
loope
mov
jl
xchg
gs
lds
mov
int
aaa
pop
mov
iret
cmp
mov
pusha
dec
int
sub
fcoms
jns
dec
inc
iret
sahf
in
fidivl
cmp
nop
lcall
xchg
sti
repz
iret
out
cli
cld
cmpsl
in
dec
xchg
in
sbb
xchg
pop
lahf
or
xchg
pop
jae
in
ret
dec
cmp
clc
dec
lahf
stc
jbe
add
inc
add
cli
insl
je
hlt
sub
mov
nop
into
jnp
dec
cli
cmc
push
lcall
xchg
stos
or
sub
adc
cmp
mov
jno
cmpsl
lret
fmull
dec
pop
shr
jbe
pop
pand
enter
nop
ja
popa
in
add
inc
pop
aas
cwtl
xor
push
cmp
js
mov
inc
mov
loope
or
ja
mov
adc
ret
in
and
mov
scas
mov
adc
add
pop
cmp
inc
icebp
xchg
lahf
clc
xchg
shl
mov
loop
fldenv
sti
dec
push
lahf
push
das
fwait
test
or
pop
jns
lods
lods
pop
adc
push
and
sub
lcall
mov
push
add
mov
pop
or
adc
data16
shll
jns
fs
xchg
data16
xchg
in
push
std
cmpsl
into
loop
mov
outsl
shl
cwtl
dec
rolb
lret
popf
sbb
adc
dec
xor
mov
cs
jp
mov
xchg
clc
mov
cltd
sbb
or
ljmp
sbb
mov
push
mov
cmp
ljmp
orb
orb
aad
jl
insl
adc
or
mov
jecxz
push
cli
and
rorb
jle
in
lea
mov
gs
xchg
xorb
in
inc
mov
mov
clc
jae
xor
lods
scas
or
add
pop
or
ss
ret
adc
mov
addr16
add
mov
hlt
das
and
mov
jge
jno
cmp
addr16
jecxz
andb
ret
xchg
std
add
sub
mov
mov
arpl
das
fildll
fnstsw
xor
push
xor
rolb
mov
add
mov
and
movsb
sub
shr
mov
cmpsl
dec
gs
jnp
out
js
outsb
or
inc
mov
xlat
inc
mov
pop
popa
out
inc
in
lcall
icebp
xchg
int
mov
cmp
adc
repnz
ja
dec
pop
xchg
cmp
cmp
fdivrp
jae
popa
sbb
mov
addr16
push
insb
cmp
inc
jp
stos
outsb
into
lcall
and
ret
std
lods
xor
ds
mov
pusha
enter
mov
mov
in
add
loop
outsb
inc
or
lahf
xor
pop
and
pop
je
loop
popa
push
or
leave
inc
mov
fidivs
pop
fsubrs
add
cmp
mov
mov
pop
pop
mov
lock
or
xor
lds
lea
ljmp
scas
push
xchg
repnz
cld
fwait
movsb
sbb
nop
stos
dec
movsl
lods
fsubl
loope
stos
stc
jg
pop
loope
test
xor
rolb
insl
insl
or
rorb
adc
push
and
mov
testl
sti
adc
sbb
mov
insb
add
stos
sbb
enter
inc
lret
pusha
loopne
dec
pop
xor
in
mov
out
xor
clc
sub
fsubrl
cmp
lret
je
rclb
les
push
nop
das
dec
mov
std
in
lret
pop
xchg
lahf
mov
loop
xchg
or
nop
xchg
mov
in
arpl
push
ja
imul
adc
dec
lret
into
push
cmpsb
push
sahf
cmp
lds
adc
sub
insl
loope
imull
push
push
jg
jp
sub
mov
mov
cltd
mov
mov
incb
mov
jnp
out
movsl
ret
jne
sub
cmp
push
int3
sbb
je
adcl
dec
or
test
jecxz
inc
loopne
aas
roll
xchg
jne
pushf
ljmp
loope
push
cmp
orl
mov
mov
test
inc
bound
pusha
pop
adc
ja
jne
push
fisttpl
push
les
fists
std
or
cltd
cmp
lcall
add
stos
mov
mov
sahf
or
lcall
lds
and
adc
xchg
jo
pushf
enter
insb
xchg
xor
ret
imul
jecxz
dec
les
loope
movsl
push
cltd
ss
pop
fcom
sbb
in
insl
imul
rclb
nop
loope
out
inc
out
aam
jns
pop
inc
mov
out
mov
inc
mov
lahf
sub
ret
scas
jecxz
ds
push
ret
and
stos
jmp
mov
aaa
add
jl
enter
pop
adc
mov
push
xchg
test
and
pusha
jge
xchg
je
lea
push
mov
push
ret
sub
jle
mov
outsb
shlb
fcmovnbe
push
in
je
dec
cmp
mov
leave
jnp
jo
pop
xchg
jle
xor
mov
sub
add
bound
adc
mov
pop
les
nop
sub
in
lods
dec
adc
outsl
dec
sub
mov
das
adc
xchg
and
ljmp
cltd
jnp
jno
xor
lret
cmpsb
ret
adc
inc
rorb
push
iret
loope
sub
adc
lcall
jo
pop
scas
pop
mov
mov
pop
or
pop
jmp
and
scas
leave
pop
aaa
aaa
frstor
fadds
push
push
mov
leave
sub
xor
test
mov
or
shll
jb
in
xlat
popf
jbe
adc
pop
sub
data16
negl
loopne
mov
ret
sub
jg
addr16
cli
mov
test
mov
adc
adc
mov
rcrb
xchg
sahf
xchg
arpl
nop
jle
xchg
mov
xchg
cmpsl
mov
jl
inc
cmp
or
ficomps
pop
loop
arpl
call
xchg
mov
mov
jno
hlt
stos
jbe
pop
decl
pop
adc
into
push
mov
adc
inc
call
jb
fimull
pop
sub
pop
inc
stos
in
icebp
stos
fiadds
ss
cmp
paddusw
insb
xchg
or
xor
int3
mov
pushf
pusha
push
mov
cltd
sahf
mov
push
popa
inc
js
inc
outsl
leave
push
ret
mov
addr16
pop
sbb
push
mov
jne
fadd
or
cmp
add
pusha
bound
lret
mov
rcll
adc
cmp
dec
popa
mov
pop
cmp
jecxz
push
jno
mov
jl
pusha
enter
jge
adc
inc
or
mov
dec
mov
mov
mov
xchg
popa
out
add
sub
cwtl
xchg
sbb
cs
outsl
inc
mov
jo
mov
adc
lods
lret
sub
mov
daa
bound
int
push
mov
dec
push
jge
pushf
or
push
jne
mov
cltd
pop
popa
shl
push
fstps
fcomps
sbb
jnp
aad
repz
lds
jo
push
popl
in
std
imul
mov
mov
jg
jp
pop
add
mov
leave
fs
iret
arpl
add
or
dec
adc
cmpsb
fisubrl
mov
xor
mov
cmp
outsb
enter
pop
icebp
jbe
and
push
ds
imul
mov
int3
repnz
or
dec
mov
and
gs
sbb
outsl
push
ret
arpl
or
sti
aaa
pop
stc
test
inc
js
lea
lods
imul
and
pushf
and
cmp
mov
lcall
pop
push
movsb
push
movsl
push
or
mov
push
jbe
packsswb
push
push
mov
or
xchg
xchg
bnd
pusha
fs
mov
mov
testl
or
das
sbb
cld
mov
out
insb
je
add
mov
mov
and
lcall
idivb
ret
jns
adc
out
xlat
pop
mov
subl
loopne
neg
add
sarb
jne
insl
adc
scas
add
stos
cmp
pop
test
mov
mov
mov
in
sbb
jmp
aas
cltd
lret
xor
lahf
jmp
dec
jno
fs
cld
aaa
bound
out
cmp
add
in
inc
mov
in
xchg
fstp
imul
sub
push
mov
pop
ss
dec
sbb
or
shll
sbb
test
pusha
test
cmp
arpl
sbb
xor
inc
adc
sbb
mov
push
mov
xlat
insb
lret
dec
repz
sbb
out
lock
pop
sub
jne
call
pushf
push
sbb
add
scas
push
xchg
sahf
dec
inc
pop
dec
pop
insb
nop
dec
sbb
out
loop
mov
das
pop
adc
ret
cltd
leave
das
push
mov
ss
push
push
pop
lcall
add
lods
push
push
popf
rol
add
xchg
dec
and
xchg
fldt
or
inc
gs
int
pop
xchg
pop
les
dec
jmp
cmp
push
iret
fiaddl
mov
test
inc
mov
rcll
jmp
repnz
sbbb
adc
loope
repnz
scas
enter
add
fisubrs
inc
lds
ja
cltd
dec
mov
lcall
or
clc
sbbl
fmull
arpl
add
xor
xchg
fldl
ds
test
out
fld
jge
es
bound
sbb
neg
popf
insb
fistpl
imul
lods
fistpl
clc
add
aaa
jmp
in
push
test
push
in
lods
int
add
adc
mov
fcomps
adc
adc
inc
jp
xchg
jp
mov
lcall
subl
lods
adc
cmp
or
xchg
sub
and
sahf
ror
or
mov
dec
or
gs
push
push
pop
and
insb
cmp
jne
jne
mov
pushf
xor
in
cmpsl
in
outsb
xor
cs
jl
or
jg
inc
sub
jae
mov
enter
mov
fcoms
clc
jmp
mov
mov
arpl
xor
jl
sbb
add
outsl
inc
sbb
mov
ljmp
or
mov
add
fistl
scas
shll
xor
push
pop
or
jo
notl
push
add
loop
xchg
adc
pop
ds
xchg
out
adc
out
cwtl
shl
push
xor
lea
jne
push
mov
ret
testb
add
in
inc
fdivr
je
sub
mov
dec
push
jno
fisubs
xchg
mov
out
bound
je
jmp
jle
xor
dec
stos
pop
in
mov
fwait
and
sub
dec
jae
mov
mov
adc
xchg
cwtl
cmp
push
mov
imul
cmpl
inc
mov
aam
add
xlat
sbb
mov
and
repnz
cmp
sahf
dec
push
push
es
cmp
jecxz
sbb
imul
mov
in
fdivrl
jle
push
aam
pop
mov
push
and
mov
inc
jp
xor
loop
nop
sbb
popf
call
cld
jno
mov
int
xor
jp
rcrb
lods
repnz
add
xor
inc
pop
icebp
iret
xchg
pop
out
dec
test
lret
jecxz
xacquire
into
push
sub
lods
repnz
test
mov
xor
adc
and
sub
mov
sbbb
pop
xchg
leave
pushf
sarl
cmp
jmp
jmp
dec
je
decl
dec
mov
ret
mov
lock
in
imul
push
jo
in
mov
dec
sbb
jnp
mov
aam
popa
and
test
loop
insl
sarl
jb
testb
or
test
in
sub
nop
mov
subl
inc
sbb
negl
jns
adc
fildll
repnz
jnp
mov
insl
push
pop
fldz
out
inc
push
pop
data16
int3
lret
out
and
aad
cld
aad
orb
outsb
loopne
aas
ja
out
shl
xor
insl
arpl
pop
jbe
jne
inc
bnd
xchg
inc
pop
mov
push
es
jnp
mov
sub
icebp
and
aam
inc
push
xchg
push
adc
incl
cs
jno
push
scas
sub
xchg
mov
dec
or
das
push
jp
adc
imul
fstpl
push
repnz
jecxz
cmpsl
jae
sbb
pop
sarb
pusha
xchg
sbb
mov
add
mov
fs
and
pop
pop
int3
xchg
in
outsb
push
rcll
jecxz
imul
xor
lret
or
fdivr
xor
or
cmp
rorb
push
sbb
mov
fwait
loopne
adc
insl
inc
xor
fistpll
add
ror
push
jns
jnp
pop
mov
push
cmp
push
dec
jae
fmuls
pop
movsl
shlb
ss
mov
cld
fmulp
push
stc
repz
aad
push
pop
leave
ud0
adc
adc
mov
mov
mov
das
addr16
push
sbb
cltd
aam
cmp
sbb
call
lds
lahf
cmp
shrb
sbb
js
inc
movsl
call
lds
and
jno
xchg
das
imul
mov
push
fnstcw
mov
jmp
jmp
mov
sbb
adc
xor
xchg
add
jg
leave
test
aam
jl
das
mov
out
inc
and
pop
cmp
out
jp
das
fldenv
xchg
push
pop
fidivs
jmp
insl
mov
in
outsb
fcoml
mov
pop
xor
fsts
hlt
sbb
push
adc
xlat
add
mov
dec
cmp
loopne
jg
sub
dec
mov
mov
int3
addl
mov
push
std
cmpsl
iret
pusha
pop
xor
into
fidivs
sbb
leave
sub
cmc
lods
ljmp
outsl
mov
sbb
stos
iret
pop
adc
pusha
sub
pop
add
aam
shll
inc
push
mov
mov
jns
lods
mov
or
jbe
loope
insb
stc
cmpsl
jb
pop
in
fadds
or
lret
xor
or
lret
sub
mov
idivl
xlat
shll
mov
sub
pop
movl
data16
cli
pop
and
popf
addl
icebp
dec
shll
outsb
xor
pop
lods
mov
andb
cmp
rcll
mov
push
sarl
push
stos
adc
shll
xchg
jecxz
popa
sub
mov
mov
gs
or
add
out
leave
add
mov
insl
pop
cmp
mov
aad
icebp
imul
int3
inc
pop
dec
daa
cmpsb
sbb
xor
out
repz
dec
in
jno
jmp
add
jno
out
movsl
or
dec
cmpsl
ss
mov
fs
aam
xor
adc
lock
dec
insl
jnp
fidivl
test
ret
jmp
cltd
pop
or
xor
cmp
int3
mov
pop
loopne
inc
es
mov
inc
insb
mov
inc
xor
xor
loopne
popf
addr16
clc
mov
shrl
sahf
mov
sbb
push
cld
and
adc
push
ss
jno
xor
cmp
add
and
movsl
popf
jbe
shll
or
stos
mov
es
adc
cwtl
movsb
scas
je
lds
sahf
je
add
leave
in
int3
push
mov
push
mov
dec
into
add
add
outsl
cmp
test
lods
dec
sbb
and
and
stc
inc
add
out
repnz
stc
popa
jle
adc
mov
je
dec
cwtl
pop
sbb
enter
dec
call
sub
pop
clc
pop
das
pop
dec
mov
jno
xchg
rclb
les
scas
das
das
cltd
pop
or
loope
mov
je
jno
and
loop
push
fdivrp
mov
pop
mov
inc
lret
icebp
pop
popf
ss
add
les
stos
pusha
sbb
imul
push
xchg
out
addr16
mov
add
mov
adc
jg
ljmp
inc
inc
lds
jmp
jae
nop
or
sub
jl
fcmovnu
xor
pusha
xor
cmp
inc
adc
mov
xor
add
movsb
loope
lahf
sub
movsb
cmp
test
mov
cmpsb
mov
lret
sub
ja
jmp
out
cld
les
push
xchg
adc
loope
mov
push
dec
loop
neg
cwtl
sub
dec
sbb
cmp
shl
lods
jae
xchg
aas
xchg
xchg
lods
aaa
aas
mov
xchg
inc
pushf
sbb
fs
adcl
or
pop
xchg
adc
inc
add
mov
dec
push
pop
fwait
or
jp
add
mov
test
imul
mov
sahf
ficompl
sbb
cmp
cmpsl
scas
lods
cld
popa
imul
jge
pushf
fcoml
cwtl
out
cmp
inc
push
dec
enter
pop
inc
add
lahf
xchg
in
mov
mov
in
push
push
xor
xbegin
inc
jns
xor
cmpsl
rcll
pop
iret
in
jmp
push
push
mov
sbb
sbb
lret
stos
out
xlat
push
push
cmp
shl
sbb
lea
adc
adcl
and
add
lret
or
imul
dec
sub
sub
cld
jle
cmpsl
mov
sub
jmp
mull
or
aad
mov
add
ret
dec
pop
jp
bound
xor
mov
cmp
adc
mov
imul
gs
add
push
in
std
xchg
mov
mov
lcall
sub
in
cmc
dec
push
rcrl
sahf
aas
clc
inc
addr16
push
jb
mov
ljmp
mov
clc
pop
or
lahf
mov
add
lret
inc
pop
mov
mov
jecxz
mov
adc
icebp
mov
scas
jae
daa
test
test
mov
adc
fcmovu
stos
cmpsl
shr
mov
xchg
movsb
stos
add
cmp
mov
and
pop
mov
or
mov
popf
mov
or
cmpb
jmp
in
in
icebp
pop
xchg
adc
inc
push
and
dec
out
shll
popa
mov
loopne
mov
cmp
imul
popa
dec
aad
ds
imul
xor
mov
stos
adc
fdivl
mov
nop
enter
inc
add
insl
test
lock
jg
mov
jo
aad
xlat
pop
push
lods
mov
push
rolb
pop
jle
je
outsl
xor
scas
sub
and
and
adc
fidivl
shl
sti
icebp
mov
popl
dec
xor
test
daa
dec
xchg
sar
aam
shlb
pop
or
push
or
nopl
das
and
mov
sti
loopne
inc
aam
inc
lock
je
cwtl
je
jecxz
neg
scas
xor
lds
push
mov
and
pop
xchg
jnp
mov
mov
jle
das
mov
test
adc
clc
adc
mov
or
push
pop
lods
mov
mov
stc
outsl
pop
lahf
bound
jmp
movsl
dec
mov
inc
jg
mov
pop
jbe
cwtl
jle
mov
lods
sbb
nop
into
jmp
jo
and
mov
xor
xor
test
imul
icebp
sbb
pop
sbb
jg
push
es
and
push
adcb
dec
cs
cmpsl
call
gs
sbb
and
rorl
fcompp
or
xchg
inc
jmp
ds
xchg
imul
pop
add
loop
jl
xor
mov
adc
xor
fldenv
rcrl
push
jg
insl
xchg
pop
dec
pusha
mov
aaa
or
sbb
stos
cmp
push
repnz
lock
lds
sub
xor
and
das
test
es
aas
insb
fimull
push
mov
mov
xor
ds
mov
push
insl
div
inc
adc
cmp
aaa
daa
lcall
xor
jle
pop
xorb
xchg
scas
movsl
and
std
cmp
aaa
or
cmp
jge
enter
scas
subb
ret
dec
fstl
cmp
pop
or
fdivrp
inc
test
jae
mov
cld
out
cli
jge
xchg
sbb
push
lods
mov
adc
add
ficoms
and
test
adc
incl
jmp
cli
jo
add
andb
jmp
jnp
les
fwait
xchg
sbb
pop
in
push
ss
loope
shrb
jp
mov
add
js
rorb
cmpsl
dec
or
cmc
lcall
test
dec
add
aas
stos
push
jno
xchg
cmpsl
dec
test
ss
sub
mov
and
sarl
mov
mov
mov
iret
xchg
xchg
jecxz
mov
cmc
adc
cld
cmpsl
sarl
clc
and
daa
cltd
iret
adc
popa
test
add
sbb
in
adc
aad
rclb
hlt
and
adc
inc
gs
js
or
sbb
enter
xor
sub
das
out
jg
pop
pop
cs
cmpsl
rorl
loope
xchg
jp
sub
jne
push
cltd
shlb
jmp
push
cmp
inc
ss
xor
push
push
add
ret
push
fists
pop
dec
out
inc
ret
fiaddl
stc
pushf
in
aam
cmp
cmp
pop
scas
or
push
and
jecxz
push
mov
pop
push
lods
pop
push
ss
inc
jo
int3
add
loope
shrl
pop
enter
add
and
sbb
lock
mov
imull
rorl
mov
adc
rorb
or
mov
dec
out
out
fwait
xchg
ds
add
shrb
add
addl
loop
movsb
lret
push
fwait
jmp
sbb
in
addr16
lcall
std
jl
mov
jae
push
clc
mov
test
add
lret
push
pop
cmp
aaa
call
inc
daa
lods
push
ljmp
mov
add
sbb
mov
add
sbb
sbb
xchg
cmp
in
fmuls
imul
rol
and
hlt
pop
lret
or
dec
rcr
dec
dec
push
insb
mov
jg
adc
cmp
cmp
gs
fwait
mov
mov
adcl
sub
lds
cmpsl
lds
jo
lods
mov
cmp
popf
int3
ja
fldl
fsubp
pusha
inc
pop
cld
inc
mov
mov
rcll
fbld
cmp
out
js
cmp
data16
xchg
xchg
sub
dec
shl
imul
push
scas
mov
pop
addr16
js
lods
jnp
jo
and
leave
out
sub
outsb
mov
mov
xchg
out
jns
mov
ret
dec
mov
cmp
pop
sbb
mov
xlat
cmp
adc
adc
loope
subl
lock
fsubrs
rcrl
mov
dec
or
gs
outsb
shll
jns
out
cmp
cmp
jg
out
pushf
cmp
shlb
xchg
jne
jle
xchg
mov
jnp
lds
mov
jge,pt
lret
fsts
and
inc
mov
xor
cli
pop
lret
xor
mov
xchg
std
cmpsl
sti
popa
int
inc
outsl
xor
push
jl
int3
pop
jecxz
imulb
cmpsl
test
outsl
fimuls
mov
mov
and
sbb
sbb
call
pop
rorb
mov
repz
xchg
leave
jge
roll
pop
pop
dec
out
in
incl
dec
test
or
int3
test
lods
pushf
repz
add
data16
insl
push
cmp
inc
fistpl
push
aas
aaa
mov
cmc
xchg
addr16
aaa
xor
imul
cltd
leave
lahf
adc
adcl
movsl
mov
add
ja
pusha
mov
ja
jo
bound
jge
mov
loope
xchg
out
jo
xchg
addr16
dec
adc
aad
add
in
pusha
scas
rcl
mov
mov
pop
jb
insl
lock
mov
and
movsl
add
sahf
add
mov
pop
push
aad
adc
es
push
xor
stc
ljmp
push
addr16
divb
nop
xchg
dec
xchg
and
jne
je
out
push
mov
cli
mov
sub
push
pop
or
and
ficompl
test
xor
loope
cmpsl
push
test
sbb
jae
dec
cld
out
sbb
divb
mov
add
lret
mov
xor
mov
mov
xorl
dec
and
push
add
mov
mov
call
or
addr16
in
rcll
sbb
push
cmp
xchg
and
ficomps
inc
fcmovnb
int
adc
inc
push
sbb
sub
pop
mov
and
lock
push
or
repnz
jne
test
pop
jl
xchg
xchg
loope
xor
mov
add
outsl
icebp
nop
dec
lods
int3
rolb
int
int
push
xchg
mov
in
mov
addl
push
sub
pop
test
pop
notl
pop
push
hlt
sbb
addr16
sub
cmc
imul
and
les
or
movswl
xor
insb
mov
mov
xlat
sahf
in
lods
adc
mov
popf
push
pusha
rolb
es
xor
xchg
ja
mov
fdivs
leave
das
movsb
lods
popf
aas
out
jb
push
movsb
fwait
repnz
arpl
fisttpll
mul
lret
add
xor
xor
mov
out
hlt
dec
jns
ss
jmp
xchg
push
cmp
popa
adc
loope
jmp
add
adc
ret
repnz
bnd
ret
xlat
add
testb
pop
lret
fistl
add
cmp
xchg
sbb
insl
cmpsb
inc
jl
aad
repz
mov
jo
movb
cld
cmp
inc
pop
mov
cmp
fs
cmc
sti
repnz
int3
mov
in
add
mov
popa
jns
jle
pop
shll
push
jl
out
mov
jns
mov
inc
out
ljmp
fldt
out
cli
add
and
mov
sbb
add
dec
mov
repnz
inc
pushl
incl
out
sbb
mov
mov
stos
mov
cs
rolb
sti
gs
cmpb
xchg
stos
negl
add
push
shlb
jmp
sub
mov
mov
jmp
je
add
test
arpl
js
repz
test
lock
in
dec
ret
xchg
sbb
loopne
sub
mov
push
lret
dec
inc
push
xor
enter
pop
cwtl
jl
call
inc
cmc
inc
add
xor
popa
jle
sbb
jl
inc
or
pop
cmp
mov
scas
push
jne
js
xchg
jmp
lods
es
pop
or
inc
mov
test
aad
shlb
jp
pop
repnz
push
cld
call
lea
mov
lock
out
lret
lret
dec
cmp
jae
sysexit
mov
or
insb
movsb
mov
add
dec
in
jge
push
pop
sbb
push
lods
dec
ljmp
add
pop
ret
pusha
ror
daa
or
dec
std
mov
insl
bound
stos
cmpsl
push
add
or
or
cmpsb
popa
mov
mov
jbe
mov
out
mov
mov
popf
outsb
das
adc
out
loop
test
addr16
sbb
int
sub
inc
mov
pop
add
cwtl
les
inc
add
loopne
jne
lds
rcrl
into
pop
push
addr16
stos
test
test
bound
adc
inc
xchg
popa
fisubrs
sahf
loop
ja
testl
adcb
adc
outsl
xchg
xor
mov
jecxz
push
jl
out
jbe
ja
lcall
inc
orl
ds
mov
jecxz
adc
lcall
and
mov
push
xchg
rorb
push
pop
test
mov
out
imul
test
jb
mov
add
dec
jmp
je
int
push
push
or
and
add
mov
lret
mov
cmovnp
mov
adc
popf
or
or
jge
out
push
inc
xchg
lret
push
cmc
loope
or
aam
xchg
mov
addl
popa
mov
push
aaa
push
jns
cmpsb
ret
fldl
and
xchg
add
xor
mov
mov
mov
cmp
pushf
dec
xor
mov
mov
shr
push
sbb
adc
mov
dec
loopne
push
lret
cmp
or
cmp
dec
dec
sbb
mov
push
and
mov
pop
sub
mov
lods
scas
cmp
xor
jge
lods
and
lea
les
mov
mov
jg
clc
call
or
adc
int
incl
cli
in
icebp
pop
mov
mov
lea
sbb
jo
pusha
stos
fldenv
cmc
ja
jle
dec
sahf
pop
movsb
sbb
rcll
mov
pushf
cmp
mov
or
les
test
xor
cmp
jl
sti
insb
out
fists
mov
mov
mov
sahf
or
stos
repnz
xor
push
jg
push
xlat
sbb
dec
mov
fisttpll
fs
add
mov
push
xor
cmp
nop
jae
adc
inc
test
fwait
in
addl
fwait
stos
xlat
pop
lcall
jg
lock
test
leave
stos
jmp
out
mov
jns
and
pop
aaa
xchg
or
movsb
sbb
jnp
sbb
inc
orb
xor
and
inc
push
push
xchg
andl
mov
lods
fcom
lcall
lret
adc
fdivrl
cmpsb
fnstcw
out
insl
cmpsl
cli
inc
jle
test
sbb
mov
lods
mov
mov
test
mov
sbbb
mov
dec
lret
adc
sub
sub
lret
sub
mull
sbb
fiadds
lods
aas
mov
mov
and
repz
push
mov
sbb
sub
jae
sub
adc
sbb
mov
adc
xchg
dec
inc
push
cmpsl
es
xchg
int3
mov
inc
and
cmc
mov
xchg
int
mov
mov
mov
inc
jne
mov
push
cmp
lret
stos
sti
sbb
mov
andb
jbe
pop
mov
addr16
sub
and
dec
mov
xlat
lret
mov
add
xor
or
mov
into
adc
mov
adc
mov
cmp
xchg
dec
popa
outsb
call
movsl
or
push
xacquire
into
inc
jle
repnz
or
mov
out
stos
jl
pop
rorb
arpl
int
clc
ficompl
sbb
cwtl
mov
and
sbb
adc
scas
aas
leave
mov
std
sub
or
pop
iret
cmp
fwait
ds
dec
mov
mov
gs
inc
jbe
pushf
nop
imul
popf
mov
lcall
sbb
popf
push
mov
push
aas
xchg
arpl
shlb
sub
pop
push
rolb
mov
lret
xor
mov
dec
pop
mov
lret
popf
pop
cwtl
inc
das
movsl
pop
jmp
in
sbb
ret
lods
dec
xlat
or
out
loopne
push
xor
fcomi
rolb
mov
ljmp
cmp
cmpsl
jecxz
jno
push
push
movsl
fbstp
outsl
jmp
pusha
add
xchg
sbb
sub
pusha
adc
mov
ficoms
or
inc
jno
or
jnp
sbb
xor
or
pop
push
in
rcll
dec
lock
imul
fldl
sbb
mov
pusha
orl
xchg
or
scas
mov
push
add
daa
jp
lret
push
in
sub
jnp
mov
xor
in
lahf
push
ds
out
imul
inc
jp
insb
ss
or
cld
push
imul
bound
ds
out
mov
mov
aaa
or
movsb
idivb
imul
pop
cmp
notrack
adc
sti
mov
mov
cmp
and
sarl
and
sub
mov
xchg
lret
test
fistpll
xchg
adcb
or
andl
push
adc
jle
xor
fisubs
lcall
sbb
xchg
jne
loopne
add
adc
jno
ffree
fstl
iret
ficoms
test
lods
adc
or
mov
sub
jg
dec
inc
fsub
xor
xor
js
jae
xchg
sub
jae
mov
test
notb
int3
dec
xor
incb
int3
add
outsb
fwait
mov
xor
dec
pop
test
lods
jle
popf
sbb
push
ljmp
push
xor
lahf
mov
aaa
cmpsl
inc
inc
xlat
mov
cs
xor
lods
icebp
add
xchg
dec
scas
fsubs
mov
fidivs
enter
sbb
jmp
rorl
push
cwtl
loop
sarb
movsb
in
sbb
scas
out
cmpsl
pop
out
mov
xor
xor
xor
xor
xor
xor
xor
add
add
fcompl
sub
pop
add
test
pusha
popa
add
arpl
dec
add
add
imul
